idiv
xchg
idiv
add
in
mov
sahf
gs
ds
into
nop
xchg
mov
insl
cmc
jae
idivl
mov
xchg
pop
mov
add
push
add
repnz
stos
imul
fistl
inc
hlt
mov
jnp
dec
dec
out
adc
xor
sbb
enter
adc
pop
int
push
xchg
sub
xor
loope
je
jp
loope
inc
or
cmp
jae
pop
test
or
mov
cld
ja
mov
nop
lcall
ljmp
loop
imul
or
in
jmp
movsb
cmp
insl
inc
dec
movsb
icebp
pusha
adc
sbb
sbb
cmc
ds
mov
push
popa
out
xchg
call
inc
xchg
bound
pop
adc
mov
lret
pop
lods
and
adc
pop
inc
fldenv
loope
aaa
dec
icebp
sub
outsl
add
ficoml
sahf
mov
jg
imul
mov
push
adc
sub
leave
shlb
ror
mov
ss
and
mov
mov
insb
adc
inc
push
pop
push
enter
stc
inc
or
jp
icebp
sub
pop
scas
xchg
push
or
sti
jo
sti
xor
cmp
imul
imul
and
mov
mov
aas
sbb
rolb
mov
inc
sysret
dec
dec
add
int3
xor
add
int3
pushf
adc
inc
das
ds
mov
cld
das
jle
cld
jae
sub
cmpsl
cs
popf
je
arpl
imul
mov
pop
frstor
xor
mov
lret
xor
add
xchg
push
sbb
jmp
ljmp
push
pop
int3
pop
lret
push
pop
sbb
mov
imul
js
ds
sbb
push
pop
adc
push
sbb
push
sbb
push
stc
mov
push
mov
cmc
jmp
cld
das
mov
push
es
mov
jae
das
mov
xchg
and
stos
sbb
pop
ficoml
push
mov
inc
lea
hlt
xchg
inc
in
mov
mov
mov
push
ja
cs
rolb
lret
mov
addr16
cmp
and
sub
and
add
push
xchg
xchg
fstl
pop
rcll
push
pop
sbb
xchg
sbb
xor
in
out
push
lds
movsl
jns
idivb
sub
es
cmc
jp
daa
mov
mov
shl
xor
test
mov
and
adc
mov
xor
mov
adc
dec
jg
cmp
clc
push
enter
dec
cli
jno
out
and
addr16
jnp
pcmpgtd
out
pushf
lods
mov
lcall
jb
jne
into
lahf
call
nop
in
insl
movsl
sbb
xlat
les
enter
mov
and
mov
mov
xor
dec
inc
js
fldl
es
sub
stos
js
mov
ja
jns
leave
mov
lret
jg
sar
pop
xchg
mov
rclb
and
aam
fdivrs
mov
pop
and
or
dec
fisubl
adc
mov
sahf
xchg
fwait
mov
pop
scas
sub
cwtl
push
lret
xchg
scas
lods
xchg
lds
mov
adcb
sbb
add
orl
iret
inc
jnp
push
push
insb
call
xchg
pop
mov
loopne
test
not
popf
mov
dec
push
rol
dec
inc
int3
xchg
adc
daa
insl
push
aam
sbb
push
arpl
push
or
inc
out
jg
jae
stos
rcr
pop
flds
nop
inc
lahf
push
daa
cmp
xor
mov
test
cs
ror
fidivs
lret
or
push
movb
or
adc
insb
cld
mov
imul
int
rcr
push
pop
setg
xchg
lret
in
mov
push
and
pop
icebp
and
orb
sbb
xorl
adc
inc
std
pop
sub
lods
adc
mov
dec
or
xor
loopne
jp
test
iret
inc
add
lds
iret
test
int3
xor
or
mov
pop
add
lea
jne
call
sbb
or
call
add
sbb
add
fcmovnbe
or
xchg
xchg
lock
inc
outsb
or
dec
pushf
sbb
mov
aas
orl
mov
add
mov
ret
std
or
add
je
jnp
mov
gs
loopne
das
mov
lock
hlt
mov
cmc
and
out
add
mov
jle
test
sbb
push
lret
sub
out
push
pop
les
test
jmp
push
scas
sub
je
xchg
pop
or
sbb
jne
ljmp
mov
repz
xor
dec
shl
mov
fstpl
pusha
mov
lret
cs
pusha
mov
hlt
xlat
rcll
fldl
mov
leave
vprotq
mov
fistpll
in
push
sbb
aad
int
mov
mov
data16
mov
rorb
or
sbb
mov
sbb
add
dec
dec
rol
dec
or
push
xlat
pusha
cmc
cmpb
push
push
call
mov
mov
sub
in
and
push
aam
mov
xchg
stos
inc
cmp
xor
scas
add
dec
add
movb
adc
lds
das
movsb
cmp
movsl
das
es
sti
jb
xchg
jne
inc
xchg
sbb
mov
push
bswap
dec
test
inc
int3
xor
sbb
cmc
pushf
rol
push
push
stc
call
pushf
pushf
lea
jbe
btr
sub
shl
call
pushf
clc
clc
sub
cmc
cmp
jmp
and
insb
mov
pop
sahf
push
adcb
mov
adc
lea
mov
dec
adc
mov
int3
cs
pop
adc
out
mov
fadd
push
push
mov
outsl
or
push
jmp
loope
jne
fwait
pushf
test
mov
lds
sbb
aam
pop
pop
adc
pop
fists
pusha
aad
fs
jne
jmp
dec
pop
dec
adc
imull
aaa
dec
push
out
jle
mov
insb
and
arpl
stc
neg
xor
xchg
dec
xchg
fists
loopne
jl
adc
pop
movsl
inc
sahf
mov
fwait
push
push
adc
push
adc
sbb
movsb
xlat
inc
hlt
imul
cwtl
mov
fisttpll
push
movsl
dec
or
imul
dec
shl
jmp
push
xor
cmp
cmp
js
jp
sti
xor
jbe
int3
xor
pushl
jecxz
xor
dec
add
and
sbb
push
sbb
pop
xchg
mov
mov
in
or
jge
ret
or
sti
into
cmp
addr16
lock
repz
or
test
add
dec
cmp
in
loop
in
cli
jge
sub
jg
repnz
std
clc
sub
inc
das
pop
loopne
xchg
mov
rcl
fcom
adc
jecxz
flds
pop
stos
sahf
dec
popf
mov
test
divl
idiv
mov
int3
xor
fs
jb
test
jmp
icebp
mov
or
lods
test
push
orb
push
sbb
inc
lea
adc
jge
push
movsb
add
jae
xlat
bound
jb
bound
mov
pop
xlat
push
push
mov
pop
or
enter
mov
add
inc
sti
inc
clc
dec
push
jp
adcb
xchg
fcmovnb
pop
fists
fxch
pop
inc
jns
pop
fimuls
aas
adc
add
dec
clc
lods
sub
or
outsl
mov
add
ret
test
rcll
mov
andb
out
ret
mov
shll
sbb
pop
rcrb
sbb
or
fldt
mov
pop
sbb
mov
in
movsl
hlt
sub
mov
js
jmp
pop
push
mov
xchg
cltd
xchg
jmp
dec
xor
inc
aaa
push
lcall
aaa
mov
je
mov
dec
int
push
adc
mov
push
pop
adc
mov
pop
cli
mov
pop
sti
jb
test
ficompl
into
leave
popl
inc
inc
or
inc
dec
int3
xor
ja
sub
xchg
push
test
shll
jmp
xor
in
mov
xor
out
mov
aas
and
jnp
das
mov
lods
push
stos
pop
scas
and
sub
push
int3
in
mov
mov
stos
jae
mov
popl
push
jbe
enter
pusha
sub
iret
leave
sub
insb
jne
lds
dec
rcr
xchg
lahf
push
ret
sub
mov
sbb
cmpsl
fs
sbb
add
in
out
movsb
mov
xor
test
add
dec
xchg
mov
ret
rcrl
fisttps
push
lret
mov
jge
jmp
cmp
push
in
jo
mov
jge
dec
push
out
sbb
add
pop
in
dec
adc
not
pop
aad
mov
mov
fs
mov
je
mov
scas
add
ud2
orl
xor
scas
sub
cmp
fsubs
adc
dec
rorb
dec
add
mov
in
test
lret
sbb
or
adc
xlat
sbb
icebp
mov
mov
testb
cmp
ds
xorb
cmp
cmpb
mov
fcoml
fs
filds
and
jge
mov
into
xchg
addr16
insb
insb
inc
adcl
push
inc
or
or
pop
inc
inc
int
mov
add
int3
xor
loope
out
repz
push
inc
test
add
cmp
cmpsl
sub
push
cmp
in
jae
and
pop
add
or
dec
hlt
shll
push
inc
das
enter
ds
add
sbb
movsb
inc
push
push
mov
mov
pop
and
dec
jmp
pop
push
xchg
je
mov
jbe
dec
data16
mov
je
mov
jns
aaa
mov
add
outsb
and
jb
xchg
test
mov
xchg
xchg
sbb
cmp
jne
mov
mov
cmpb
stos
insl
jb
xlat
in
lods
movsl
mov
mov
inc
cmp
inc
movsl
jns
fsubrs
jo
mov
dec
imull
inc
dec
xor
push
dec
sub
push
mov
cwtl
adc
push
cmovns
lods
mov
and
test
push
jecxz
loop
das
outsl
sub
movsl
out
scas
loop
xor
mov
add
sub
bnd
nop
outsb
imull
das
and
popa
jo
scas
sub
jns
dec
out
pop
push
jnp
movsb
lock
pop
mov
and
pusha
push
pop
push
cmp
mov
mov
sub
in
aam
sub
pop
int
push
mov
sub
xchg
call
mov
cmc
clc
arpl
negb
inc
mov
int
xor
xchg
adc
push
sbb
imul
push
pop
xlat
sbb
or
dec
pop
adc
dec
fisubrs
fistps
popf
movsb
push
mov
pusha
jg
ret
xchg
xor
rorb
xchg
fldl
les
xchg
adc
insl
and
xor
jb
ljmp
in
jno
push
sbb
adc
sti
and
mov
cwtl
cmp
out
stos
ja
int
xchg
lds
lret
add
mov
or
xor
ror
jl
es
or
pop
push
lahf
dec
fstl
sahf
xchg
pop
push
pop
add
jno
sbb
or
or
or
push
adc
xchg
repnz
mov
insl
stos
imul
xchg
mov
inc
pop
mov
movsl
pushf
in
movsl
icebp
dec
fcompl
repz
and
or
or
icebp
idiv
bound
test
mov
mov
xor
ds
xor
cmp
ror
test
call
in
mov
rcll
inc
dec
sbb
push
pop
fwait
xchg
lret
adc
dec
push
hlt
int
push
jecxz
call
dec
mov
xchg
fstl
mov
inc
rclb
sbb
xor
mov
pop
adc
cmpsb
mov
sub
lods
frstor
push
or
mov
mov
in
in
shr
arpl
mov
scas
inc
cld
sub
pusha
sub
movsl
or
in
sub
lods
bswap
jo
and
rcrb
sbb
pop
pop
ror
xor
pop
filds
popa
mov
outsl
mov
adc
push
xchg
inc
pop
sbb
push
rcrl
js
test
jmp
notb
les
scas
xchg
out
inc
ss
dec
ja
dec
push
lret
dec
cmp
push
sbb
sbb
dec
adc
scas
xchg
out
pop
in
push
sub
into
dec
jmp
ljmp
mov
push
mov
mov
jbe
xor
push
leave
sbb
pushl
jmp
add
cli
or
add
add
add
add
add
leave
and
add
add
inc
add
add
add
add
pop
das
add
add
add
add
add
sub
add
add
add
add
add
add
hlt
jg
add
add
add
add
addb
add
je
add
jle
sbb
add
add
mov
xor
dec
jg
add
push
sbb
cmp
and
add
add
add
push
bound
lret
add
dec
sbb
add
lahf
xchg
add
roll
mov
fdivrl
repz
jg
and
dec
in
in
mov
jle
mov
cld
gs
shlb
mov
repz
sbb
jmp
mov
aam
xor
pop
imul
adc
pop
xchg
xchg
fwait
sahf
fcoms
xor
ja
rolb
and
jae
cmp
bt
cmp
jmp
xor
push
jns
sbb
insl
loopne
mov
jg
repz
pop
insb
pop
pusha
inc
push
and
insl
push
mov
fstl
dec
call
xor
jae
mov
sbb
outsb
and
xlat
aas
xchg
je
int3
add
stos
xchg
in
mov
mov
cld
out
adcb
jo
jmp
arpl
int3
xchg
lret
into
lret
rorb
mov
or
xor
ds
jl
aad
xchg
out
mov
mov
imul
mov
cmp
enter
jb
xor
outsb
sbb
sub
out
outsb
mov
jmp
repnz
lahf
in
lret
aas
cmp
push
leave
dec
mov
xchg
sbb
mov
leave
adc
popf
sbb
lret
sub
test
push
sub
jb
loope
lods
inc
pop
nop
xchg
movsb
inc
das
popa
jb
rorb
lcall
adcl
ficompl
popf
xchg
int3
xor
rol
sahf
push
aad
adc
mov
in
in
stc
sub
test
push
mov
push
sub
inc
and
push
xchg
out
mov
insl
mov
aam
hlt
mull
andl
dec
and
dec
and
inc
je
addb
movb
add
xchg
sbb
jns
adc
sbb
nop
xor
sub
mov
ljmp
scas
jmp
sub
je
mov
not
mov
lea
mov
call
stc
neg
pusha
cmc
rol
pusha
push
movb
movb
lea
call
cmp
cmp
pusha
pusha
lea
jae
clc
cmp
jmp
mov
push
sahf
sarb
pop
add
pop
xlat
add
enter
push
fiadds
and
lahf
mov
pop
dec
xor
mov
aas
test
push
jmp
adc
enter
xchg
or
add
push
fnsave
push
out
dec
lea
sahf
out
mov
jb
mov
notb
fwait
mov
sbb
inc
push
inc
dec
inc
xchg
xchg
inc
cmpsb
fcompl
stos
jno
ficomps
or
in
mov
mov
cli
jo
dec
xor
flds
ret
insb
outsb
cmp
adcl
ret
shll
pop
inc
push
sbb
jno
js
xchg
xchg
cmpsb
cs
dec
push
xchg
notl
sbb
push
psubw
sub
add
pop
aad
aad
mov
dec
outsb
and
xchg
push
out
lods
xchg
pop
gs
mov
lds
xor
cmp
std
adc
pop
cs
jbe
mov
cli
lock
xor
xor
add
adc
cs
subb
sub
insl
and
cs
repnz
outsl
and
out
inc
in
adc
inc
aam
sbb
inc
imul
outsb
mov
jo
inc
dec
pop
mov
mov
aas
cmpsl
mov
sahf
push
fwait
adc
dec
xor
lcall
dec
cli
push
add
sub
push
pop
pushf
sbb
nop
xlat
pop
adc
pop
cs
push
out
sbb
xorb
das
sub
leave
or
roll
or
xchg
or
mov
xchg
rolb
fldl
leave
pop
dec
fcmovbe
fadds
rorl
push
jns
inc
aad
mov
arpl
out
push
pusha
push
pop
mov
sub
popf
sbb
xchg
stc
mov
cmp
mov
dec
filds
fiaddl
fld1
addr16
loope
xchg
sbb
cmp
icebp
mov
push
xchg
leave
dec
xchg
adc
std
lock
xchg
jnp
jne
stc
cmp
mov
xor
icebp
stc
jge
je
xor
inc
lds
ja
hlt
out
cmp
pusha
push
cld
cs
jecxz
jl
mov
ds
xchg
fs
sub
clc
sub
movsl
gs
jb
in
and
pop
scas
jle
dec
jge
adc
or
lret
les
add
mov
nop
xchg
loope
cmc
cli
insl
stc
loopne
dec
push
push
popa
xor
inc
add
push
rcl
push
mov
adc
rclb
pushf
cmp
push
pop
ds
inc
jns
nop
lahf
xor
cmc
mov
das
ret
mov
ss
xor
icebp
jnp
int3
xor
cmpb
lcall
add
xchg
cltd
fsts
push
into
xchg
insb
jae
push
sub
and
loope
dec
mov
or
das
adc
sbb
cli
mov
jl
inc
loope
sub
in
cmpsl
lea
sbb
mov
push
sub
push
pop
adc
lcall
jbe
divb
or
into
adc
ja
sbb
stc
mov
adc
jbe
xchg
add
pop
pop
cs
in
sub
jmp
popa
lods
int3
xor
jle
test
inc
test
pushl
cmp
movb
xor
cmc
stc
clc
rol
cmp
cmp
call
movb
bswap
movsbw
pusha
movb
mov
movzbw
lea
pushl
jmp
out
mov
shll
fistpl
or
pushf
push
pop
push
sbb
ficoml
xchg
jb
jae
in
xor
sub
pop
xlat
mov
and
cmp
pop
push
or
xor
jp
cltd
inc
xor
inc
aad
lods
sbb
xchg
push
push
sbb
xor
jmp
pop
xchg
add
mov
pop
adc
xchg
xlat
adc
pop
lahf
adc
push
jmp
aam
mov
cs
mov
popf
mov
orl
adcl
mov
dec
xchg
push
adc
stos
and
or
xlat
adc
ret
xor
popa
xchg
call
jne
outsb
out
into
xchg
divb
pop
push
mov
fistl
rclb
fstpt
xor
insb
es
stos
in
scas
push
cmpsl
das
out
int3
xor
cmp
ljmp
aaa
sub
jmp
sti
mov
push
push
sub
sub
leave
outsb
xlat
pop
aam
jp
test
dec
gs
adc
pusha
add
and
pop
ret
pushf
sbb
add
and
adc
fistps
mov
pop
nop
xor
js
mov
fstl
fcomps
push
rcrb
adc
ror
xor
mov
jno
mov
pop
add
sahf
adc
lea
dec
add
imulb
sub
not
sbb
or
out
mov
popf
cmpsl
imul
out
les
push
lret
cmpsl
xchg
rcrb
test
ja
push
or
adc
shrl
pop
rorl
les
cld
xor
mov
cmpsb
cs
mov
pusha
pop
jecxz
xlat
loop
mov
clc
cmc
jmp
lea
jae
pusha
cmp
jmp
movnti
dec
sbb
adc
call
js
mov
lock
fildl
jno
in
pop
shl
ret
jp
mov
push
cmp
pop
aam
lret
test
movb
cmp
sbb
outsb
fs
pop
jb
rcrb
call
clc
sub
and
adc
addr16
jns
xor
aam
ret
pop
xchg
lds
xchg
mov
mov
movsl
ljmp
mov
jae
jge
dec
xchg
jg
and
test
in
jne
inc
inc
fstps
fists
lock
mov
adc
int3
push
or
jns
ficompl
shrb
or
andb
add
push
sahf
adc
xchg
or
aaa
adc
jg
xor
xor
mov
xchg
cmp
movsb
sub
inc
into
pop
jb
hlt
pop
push
xlat
inc
mov
mov
dec
aam
inc
lea
dec
mov
push
sbb
adc
repz
mov
out
mov
iret
adc
sbb
inc
mov
pop
imul
and
jmp
mov
xor
loope
jp
fidivrl
mov
or
lret
mov
jb
jp
pop
je
adcb
push
push
sbb
xchg
popf
cltd
xlat
int3
xor
pusha
pop
arpl
push
insl
push
out
icebp
jb
movsl
mov
jmp
cmpsb
jne
out
movsb
mov
cs
gs
or
pop
mov
rolb
rolb
aam
scas
pop
push
mov
mov
cmpsl
xor
jp
jns
xchg
loope
pop
inc
cli
mov
mov
inc
std
test
xor
pop
xchg
int3
icebp
fwait
xchg
add
lcall
aaa
jle
das
out
jae
jle
pop
inc
mov
and
cmp
std
mov
xor
mov
int3
xor
int3
dec
push
inc
adc
ror
popa
add
inc
dec
cmc
jns
jp
sub
sub
jbe
out
and
aaa
pop
inc
or
decb
dec
adc
inc
ret
jae
in
mov
or
xchg
xchg
into
pushl
ja
jno
inc
mov
hlt
insl
push
mov
std
xor
lock
sti
cld
repz
adc
push
fs
pushf
out
or
fimull
add
bound
es
xchg
inc
test
push
push
lret
push
dec
inc
inc
dec
or
cld
pop
fimuls
out
movsl
leave
and
or
pop
into
lahf
psrlq
int
cmp
stc
cmpsl
jmp
sarl
repnz
cmc
mov
int
ret
adc
loope
out
incb
sbb
cs
sub
inc
in
hlt
lods
sbb
sti
jg
fcompl
pop
ror
dec
sbb
movsb
mov
lods
aaa
add
jge
aad
iret
cmpsb
adc
aas
inc
mov
sub
dec
into
mull
divb
mov
dec
inc
mov
lret
mov
cmp
rcrb
nop
xchg
fists
xor
cmpsb
movsb
popf
inc
mov
fadds
loopne
jnp
inc
adc
lahf
push
inc
mov
adc
adc
add
pop
ljmp
mov
pusha
imul
cmp
cs
jo
arpl
in
or
inc
add
mov
push
rcr
xchg
dec
and
sub
jo,pt
mov
xchg
cmc
hlt
mov
pusha
cmpsl
in
sbb
and
sbb
call
cmp
outsl
ss
jo
mov
jno
xor
int3
xor
or
and
iret
add
pushf
mov
pushf
pushf
pushf
pushl
ret
xor
xor
and
push
jmp
mov
scas
ljmp
out
push
mov
ja
in
ja
push
lcall
icebp
cmp
dec
imul
mov
arpl
cli
mov
rclb
push
push
add
inc
roll
mov
pop
addr16
push
fildll
jbe
mov
jl
mov
lret
out
in
xor
xor
js
ljmp
dec
pop
sbb
xchg
push
fsts
popf
lcall
xor
in
out
push
dec
inc
dec
dec
xor
cs
insb
add
fs
ja
pusha
pusha
inc
lea
pusha
dec
jmp
lea
jne
inc
bsf
xor
sbb
sub
push
lea
pushf
aad
mov
pusha
inc
add
rcr
mov
ror
mov
stc
test
push
mov
lea
jnp
je
pushf
jmp
cmp
loope
mov
testb
adcb
add
fists
popf
ret
inc
iret
fistl
or
xchg
sbb
push
jbe
imul
dec
dec
shl
adc
sub
xchg
lods
aad
pop
or
enter
aas
xor
lcall
xor
pop
clc
push
add
hlt
stos
sub
sub
ficoms
sbb
stos
sub
mov
andb
jns
movsl
pop
xchg
sbb
sbb
adc
xor
cli
lock
movl
pusha
lea
jmp
lods
jecxz
mov
outsl
loope
inc
aad
dec
pop
mov
pop
add
push
pop
int
push
fisubrl
and
fistpl
pop
scas
es
inc
filds
mov
xlat
ljmp
inc
jmp
push
xor
jae
lcall
jnp
mov
and
out
pop
in
bound
out
push
cld
jmp
adc
fcoms
pop
pushf
cs
cmc
cmp
xchg
push
fldcw
and
sbb
mov
sub
das
cli
and
push
fsts
aam
push
push
xchg
pop
fcmovbe
xchg
xchg
sbb
xor
sarb
add
mov
jnp
cmpsb
sub
xor
jecxz
xor
xor
cmp
lods
jo
jmp
in
cli
and
sbb
cld
and
movsl
and
jb
lock
ja
fwait
call
cmp
icebp
jl
jae
dec
mov
and
rorl
add
xlat
ljmp
std
cmc
cmp
ror
adc
fadds
cwtl
popf
fcmovbe
push
sahf
sbb
pop
int3
xor
dec
inc
jns
dec
add
push
pop
lret
or
test
fwait
dec
dec
pop
push
cwtl
dec
pop
fcomps
push
ret
or
or
stc
iret
mov
pusha
push
sbb
repz
imul
and
xlat
pop
cs
adc
test
pop
mov
int3
or
ret
inc
sbb
scas
fwait
pop
ror
into
sub
fs
mov
inc
enter
add
scas
push
scas
stos
xchg
sbb
fnstenv
call
or
inc
inc
xchg
jne
add
xor
movb
ror
mov
jmp
movl
pushf
pushf
pushl
lea
jmp
outsb
adc
or
rcll
cmp
js
movsl
stos
clc
imul
jge
xchg
cwtl
or
out
inc
cltd
call
dec
add
pop
push
subl
xor
sub
cmpsl
and
in
out
xor
pop
push
push
or
cmp
dec
add
dec
add
orl
xchg
in
or
cmpsb
insb
dec
in
mov
jae
inc
pop
jo
inc
lret
shl
push
stos
xchg
sub
in
clc
inc
adc
mov
fcmovnbe
movsl
es
push
aaa
imul
adc
mulb
push
leave
jg
sub
imul
pop
adc
sbb
and
mov
sbb
ret
xchg
cmp
jmp
in
cmp
cmpsb
ja
and
xchg
jge
ret
xchg
pushf
cmp
leave
inc
mov
sbb
sub
sarl
dec
push
dec
xchg
test
inc
jne
push
sub
call
or
sbb
inc
xchg
insb
in
mov
fistl
adc
sbb
adc
xor
out
xor
shlb
enter
dec
scas
add
es
test
cmp
pushf
push
push
push
dec
out
dec
call
lcall
jb
xor
shl
scas
dec
cltd
xchg
lret
jp
xor
xor
cli
inc
out
mov
mov
jge
sub
push
or
push
lcall
sub
pushf
inc
add
dec
fnstenv
mov
in
call
jmp
test
in
int3
xor
xor
and
sbb
mov
imul
orl
les
pop
inc
gs
lret
into
js
pusha
jbe
jne
pusha
jle
bound
inc
mov
fsubrs
aas
orb
xorl
mov
inc
mov
pop
xchg
out
cltd
pushf
decb
int
shlb
xchg
stos
loopne
jecxz
push
aas
or
xchg
stc
and
pop
dec
lock
or
ds
or
pop
sbb
xchg
pop
int3
xor
and
xchg
adc
push
lea
jne
rol
movzbw
sub
aam
bt
mov
call
mov
jbe
xor
frndint
loop,pn
out
aas
out
bound
and
js
ljmp
and
pop
popf
ret
or
pop
pop
jae
pop
dec
xchg
xchg
dec
mov
inc
xor
addr16
add
test
scas
adc
orb
js
clc
push
inc
jg
or
and
pmaxub
jmp
lea
and
add
nop
pop
cli
mov
addl
imul
or
inc
push
movl
repz
xchg
roll
call
add
inc
gs
outsl
fs
gs
imul
add
cmp
addr16
push
ficoml
fsts
pop
lret
add
push
sbb
mov
dec
push
lret
insb
aaa
out
dec
icebp
jl
dec
jg
lret
je
rol
add
div
stos
lcall
les
adc
rcrl
adc
addb
mov
sbb
test
insb
lret
mov
repz
test
in
insb
jae
adc
mov
lods
jbe
stos
and
insb
in
jmp
movsl
push
sub
mov
lock
jg
loopne
mov
jno
out
sti
jno
mov
add
jp
xor
adc
pop
mulb
adc
ret
iret
ror
iret
ljmp
mov
sbb
xor
pop
push
add
push
sub
dec
leave
lds
mov
or
test
pop
fildll
mov
dec
sub
vrcpps
in
inc
or
mov
cmp
loope
arpl
in
ljmp
cmp
scas
mov
gs
mov
in
and
aas
lods
std
insb
loope
and
mov
shlb
push
orb
lret
sub
bound
repnz
sub
std
les
mov
fcoml
mov
popf
cld
js
xchg
leave
xchg
lods
test
lods
test
push
out
jo
sub
fistps
bound
stos
and
mov
add
daa
push
lret
rorl
dec
add
xor
lods
clc
adc
mull
icebp
pop
adc
aam
hlt
mov
push
stos
in
sub
sbb
xor
and
test
cmp
inc
jne
pop
dec
push
adc
sub
adc
cmp
adcb
popf
mov
into
adc
popf
fadds
cs
sbb
clc
pop
mov
inc
jne
lea
and
inc
outsl
push
mov
push
sbb
xchg
sbb
xor
mov
cs
lret
lods
push
jle
jb
or
mov
ss
dec
mov
mov
ljmp
and
add
xchg
mov
push
cs
loop
aam
lahf
rcrl
pusha
xor
cmp
mov
adcl
and
sub
and
cmpsb
add
dec
cmp
inc
lods
mov
shll
cmc
aaa
rol
ja
je
shr
mov
adc
add
jl
stos
in
outsl
stos
divb
mov
cmc
and
inc
jp
pop
or
out
lds
stos
adcl
xchg
ret
imul
lea
je
push
lea
jmp
pushw
popfw
mov
pushf
jmp
pushf
lea
je
push
pushl
stc
test
add
movb
pushf
cmc
cmp
jmp
cmp
jbe
mov
lret
push
aad
xchg
cwtl
mov
push
les
std
negb
xchg
add
push
out
out
pop
outsl
call
push
xchg
xor
sbb
sbb
adc
pop
adc
inc
aad
pushf
pop
addl
push
sbb
or
int3
xchg
lods
adc
jle
sbb
icebp
jbe
sbb
mov
lret
mov
xorl
and
std
jns
cmc
mov
jb
xor
xor
dec
ret
pop
cwtl
push
sub
pushf
movsl
hlt
in
data16
ja
imul
in
add
jg
pop
add
sub
pop
jbe
loop
cmp
xchg
mov
mov
fldt
jle
and
pop
cmp
dec
pop
inc
inc
shlb
dec
insl
out
pop
xor
mov
rolb
add
js
int
aad
mov
rorl
mov
movsb
mov
dec
and
decb
xchg
dec
inc
rolb
int3
inc
int3
xor
adc
mov
aam
leave
lds
idiv
repz
sbb
xchg
xlat
sbb
push
pop
inc
dec
sbb
pop
add
cld
ljmp
popf
push
lods
push
loope
bound
enter
pop
inc
ret
inc
test
xlat
and
push
ja
sti
lods
mov
inc
daa
jbe
dec
lds
cld
imul
test
adc
dec
or
or
inc
mov
int3
xor
pushf
push
dec
mov
outsl
jge
add
mov
in
dec
pop
dec
lcall
xchg
inc
pop
push
pop
int
sbb
movsl
mov
jbe
ficoml
mov
xlat
xchg
push
fsubrs
inc
inc
out
xor
adc
ss
arpl
dec
sub
jge
and
inc
dec
test
iret
xchg
xlat
sbb
cwtl
hlt
insb
in
sbb
fsts
movsb
jp
jge
test
insb
xchg
leave
idivl
nop
sti
ret
sub
fstpt
mov
sbb
cmpsb
sub
das
popa
push
mov
push
pop
inc
outsl
cltd
xchg
pop
es
testl
push
jnp
or
inc
dec
mov
ror
out
movsb
aaa
mov
adc
xchg
mov
icebp
rcl
ficomps
mov
js
insl
xor
es
inc
add
mov
sub
lods
and
loope
movsb
sahf
push
pushf
inc
sbb
mov
mov
sub
arpl
dec
push
xchg
sbb
mov
mov
call
xor
int3
inc
jp
lret
adcl
xchg
push
adc
fcom
sbb
lret
mov
cmp
push
fdivr
imulb
outsw
lods
cltd
mov
or
fsubrl
lods
bound
std
out
loopne
mov
mov
sub
push
insb
movsl
fcoml
xor
iret
push
pop
cwtl
in
jge
orl
mov
adc
sbb
stc
stc
cmp
mov
rorb
enter
mov
xor
cli
lea
fucom
in
addr16
xor
les
daa
inc
dec
xchg
add
roll
cmpps
mov
inc
sub
ss
mov
imulb
add
pop
push
push
orb
or
xor
aam
orb
xchg
les
xchg
lcall
das
dec
in
pop
shr
loopne
mov
lds
push
fldenv
fs
iret
fs
dec
dec
cmp
jo
inc
leave
dec
sub
cli
push
add
add
shrb
sub
stc
xchg
push
add
pop
jne
mov
jns
imul
imul
dec
scas
add
push
and
fstpl
push
push
pop
sbb
xlat
pushf
xchg
pushf
pop
rcr
int3
xor
mov
repnz
test
ret
dec
sbb
pop
xchg
flds
xor
xchg
fucomp
push
xchg
lds
xchg
popf
push
gs
jbe
lret
stos
xchg
inc
jno
push
enter
adc
cli
popa
mov
mov
adc
xor
loop,pn
adc
cmp
fcmovnbe
sbb
xchg
xchg
sbb
int3
xor
cmp
or
aad
sbb
xchg
out
gs
dec
hlt
stc
sub
mul
sub
mov
rep
shl
mov
jmp
hlt
push
mov
rcrl
adc
imul
lods
fmuls
test
test
andb
adc
pop
adc
adc
aam
mov
std
pushf
or
ret
jp
sub
leave
ret
xorb
aas
sub
roll
fs
outsl
sub
imul
pop
xchg
int
mov
into
inc
push
stos
adcl
fsts
aad
pop
inc
mov
adc
mov
cmpsl
insl
inc
mov
shrl
ja
push
pop
ret
insb
mov
cltd
adc
xchg
sub
xor
arpl
outsb
clc
out
add
xor
dec
cld
jp
das
pop
mov
cmpsb
push
mov
iret
push
push
ficompl
add
jo
xlat
adc
push
addr16
rol
nop
mov
pop
fadds
popf
pop
ficomps
pop
adc
lahf
adc
xor
in
aas
xchg
les
dec
int3
scas
push
push
leave
lret
mov
mov
jo
scas
jl
jo
mov
push
jge
mov
add
mov
out
out
aas
xchg
mov
daa
insb
mov
xchg
ss
and
mov
mov
xor
sub
and
add
sbb
xchg
in
ss
and
xchg
in
mov
jmp
sbbb
pusha
mov
test
daa
jb
pop
or
sub
stos
repz
stos
repnz
jle
xor
cmp
int3
xor
sbb
inc
lea
je
push
call
cmp
dec
xor
push
sub
cld
dec
adcl
and
cmp
xchg
xchg
lods
clc
or
adc
push
out
mov
xor
dec
or
or
js
xchg
or
sbb
inc
xor
mov
clc
mov
sbb
cmp
pop
in
bound
imul
out
mov
pop
sbb
sbb
adc
push
and
in
or
addl
cmp
popa
adcl
fnstcw
cmp
mov
push
cmp
into
cmp
popa
or
test
popa
fidivrs
adc
sbb
clc
or
cmp
push
cli
mov
jne
ljmp
cs
or
and
adc
push
into
mov
mov
sub
push
jp
cli
pop
sbb
cmp
into
mov
out
sbb
xor
adc
push
out
mov
push
cld
inc
xchg
push
bound
jb
adc
xchg
cmp
popa
mov
pop
sarb
adc
push
scas
mov
mov
xchg
pop
cmp
insb
adc
cwtl
clc
mov
mov
stc
push
out
mov
ja
mov
inc
push
out
mov
cmp
es
cmp
cmpsb
enter
clc
ja
mov
je
pop
fdivrp
and
mov
mov
mov
pop
cmp
js
push
cmpsb
clc
mov
sub
fistpl
dec
cmp
mov
push
mov
idivb
adc
push
out
mov
and
mov
cmp
popa
sbb
sub
xchg
push
out
mov
outsl
adc
push
cmp
sbb
mov
outsl
cmp
popa
xchg
push
out
mov
push
les
cmp
popa
insl
push
out
mov
inc
add
sbb
inc
cmp
iret
mov
test
add
jmp
adc
clc
imul
dec
xchg
xor
loopne
test
pop
dec
sub
cmp
in
or
inc
mov
iret
lods
add
aaa
popl
sbb
adc
in
les
ljmp
cmp
push
nop
arpl
aad
mov
cs
xchg
jmp
iret
ja
cmp
fisubl
adc
cmp
fwait
orb
gs
jecxz
jo
je
cld
sbb
sub
les
in
aas
and
cmp
push
into
inc
fdiv
in
mov
testl
repz
and
std
xor
repz
data16
cmp
xor
dec
mov
dec
adc
xchg
push
pop
in
idiv
cli
jne
adc
sub
jmp
lahf
das
test
and
sub
lods
dec
ret
sub
inc
adc
imul
mov
pop
popf
movsb
insl
mov
jno
lret
hlt
cwtl
fimuls
add
add
xchg
xor
inc
mov
fs
cs
insb
add
jmp
jmp
jae
insl
arpl
sub
call
pop
dec
xchg
fidivl
fmull
lock
dec
dec
push
pop
jne
rcrb
lcall
in
push
push
add
inc
adcl
mov
js
mov
shlb
iret
dec
xor
icebp
adc
stc
ljmp
out
sub
adc
sbb
cmc
inc
cmp
sbb
arpl
mov
mov
mov
mov
jbe
scas
mov
outsl
aaa
mov
enter
stos
pop
iret
or
dec
orl
mov
das
jp
adc
pop
adc
roll
pushf
dec
inc
push
or
pop
aaa
push
clc
xchg
xor
in
aaa
jb
loope
mov
sbb
jle
push
inc
push
add
lods
sbb
pop
insl
and
cmp
into
inc
rol
adc
adc
jge
mov
out
pusha
std
insl
mov
push
mov
cmp
mov
call
mov
pop
jmp
mov
cmp
mov
xor
or
mov
shlb
mov
shrd
push
pusha
btc
rcl
lea
test
cmp
xor
sub
pusha
movsbw
shr
movsbw
mov
inc
aas
and
mov
bswap
lahf
jmp
or
push
push
jne
mov
imul
test
push
data16
xor
aaa
mov
repz
push
pusha
ljmp
sub
cmp
cmp
push
mov
adc
jne
shll
lods
cmp
mov
mov
call
xchg
cmp
mov
push
into
mov
mov
sub
jl
and
loop
loope
out
es
int3
xor
jge
sub
add
call
lods
pop
pop
ror
lret
or
push
orl
push
mov
scas
mov
in
addr16
or
jg
jecxz
divl
pop
add
sub
mov
xor
or
mov
fsts
sub
push
dec
push
inc
xchg
and
movzbl
xchg
push
testb
cmp
pop
or
pop
test
push
dec
fists
xchg
sbb
xchg
push
xchg
popf
xchg
int3
xor
fadds
push
lea
call
pushf
clc
cmp
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
ret
bswap
mov
cmp
pushf
and
cmc
add
pusha
pushl
push
mov
lea
jmp
mov
pushf
lea
ja
call
mov
mov
test
mov
adc
popl
push
sbb
pop
dec
enter
and
push
sarl
xor
jns
inc
aad
je
mov
inc
shll
mov
pop
das
and
lret
push
dec
pop
xor
pop
push
mov
stos
in
es
lods
mov
mov
rorb
dec
dec
dec
dec
lea
leave
orl
jno
add
lods
mov
jmp
fcoms
in
mov
lret
pop
mov
rorl
ja
push
sub
or
fsubs
pop
and
jecxz
inc
daa
cmp
ss
ds
data16
in
push
add
popa
dec
into
testl
inc
cmpl
xchg
aam
stos
out
mov
mov
xor
dec
bnd
cwtl
js
loope
inc
mov
popf
xchg
pop
xlat
adc
sahf
push
pop
int3
xor
aam
jecxz
jnp
aaa
mov
in
enter
or
mov
adc
mov
loop
xor
push
jecxz
orl
mov
cmp
xor
jne
in
cmp
pop
inc
inc
sbb
sub
push
stos
insl
aam
imul
je
lcall
cld
mov
inc
pop
idivl
jl
inc
rorl
or
into
popf
leave
inc
outsb
jecxz
xchg
sbb
mov
dec
insb
nop
fwait
rcrl
pop
xchg
xchg
push
pop
pop
rclb
push
fwait
int3
xor
movb
cmp
loop
mov
adc
ss
ss
ss
clc
imul
mov
push
out
mov
pop
mov
pop
movsb
ja
xchg
xor
jne
xchg
sbb
jno
rcrb
or
lds
idivl
mov
hlt
lods
jbe
icebp
data16
mov
xor
jns
fadds
mull
inc
pop
ds
add
pop
aad
xlat
mov
aam
and
jle
mov
pop
push
sbb
jmp
out
push
jmp
int3
xor
aaa
mov
lods
movb
pushl
mov
not
pushf
jmp
jnp
les
xchg
add
call
jnp
movsb
sub
out
mov
xor
mov
mov
data16
push
scas
jle
dec
cli
call
pop
adc
imul
lcall
icebp
xchg
push
out
pop
adc
test
mov
ds
cmp
imul
das
scas
push
push
outsb
daa
scas
pop
xlat
daa
xor
call
push
ret
adc
fdivr
dec
lcall
push
pop
mov
loopne
xchg
lahf
add
inc
or
addb
test
int3
xor
xchg
mov
mov
pop
in
sub
in
and
jns
jp
cmp
mov
cmp
aas
fistl
in
dec
xchg
call
stos
nop
in
shl
xor
jo
sub
movsb
cs
daa
mov
addr16
xor
bound
mov
int
adc
stos
cmp
cmp
movsb
sub
xor
pusha
xchg
xchg
mov
and
xor
icebp
mov
sub
sarl
mov
or
sbb
sub
pop
lret
push
or
push
ret
add
jmp
mov
xor
mov
pop
mov
mov
lret
pop
lahf
sbb
adc
sbb
xor
in
push
lea
jmp
idivl
cli
or
icebp
ds
out
pusha
out
pusha
repnz
rcr
dec
pusha
stc
rorb
mov
sbb
add
adc
cmp
fstpt
mov
shr
jecxz
repnz
dec
clc
xor
loope
mov
repz
inc
xchg
adc
gs
lcall
pop
fdiv
xchg
jbe
cmpb
rorl
cmp
mov
into
dec
or
add
vpermilps
push
enter
mov
xchg
ret
push
ret
fcoml
adc
rcrl
push
lret
shl
lea
repz
call
pop
sbb
rol
mov
outsb
jmp
push
pop
sbb
lods
js
xor
push
ja
in
and
fcompl
pusha
lods
scas
and
lock
js
push
mov
leave
lods
push
xchg
cmp
lods
mov
sbb
sbb
cmp
js
jnp
mov
cmp
test
push
lret
pop
call
add
mov
int3
xor
pop
push
addr16
mov
lea
call
call
jne
mov
imul
pop
xchg
xchg
lcall
xlat
push
pop
inc
dec
mov
test
inc
pop
xor
call
inc
xchg
roll
mov
les
mov
pop
daa
test
mov
xchg
lahf
adc
push
test
sbb
inc
or
jb
push
and
js
xor
cmp
push
adc
mov
orl
dec
iret
add
sbb
add
pushf
lea
jmp
pushl
mov
or
pushf
dec
pop
adc
cmp
push
into
xchg
fldcw
jnp
sub
push
sbb
sub
and
inc
idivb
aaa
pop
das
sbb
mov
push
scas
cmp
jb
pop
fwait
or
or
notl
hlt
lods
xchg
inc
xor
push
push
mulb
ror
call
xchg
dec
add
jbe
stc
femms
mov
scas
cmovo
sbb
mov
cmp
pop
scas
daa
mov
test
out
data16
xor
arpl
pop
xchg
sahf
int
lods
cmp
test
ror
int3
popf
xchg
adc
mov
xchg
fildl
jmp
popf
cmp
outsl
leave
jl
cmp
int3
in
in
cltd
mov
xor
xchg
jb
std
mov
mov
jo
outsl
rcrb
inc
push
jmp
adc
mov
xor
or
enter
lret
inc
xchg
mov
inc
or
xor
and
sub
push
rorb
jmp
addr16
test
outsw
jb
lea
sbb
jg
ret
rorl
push
andl
jo
cmc
and
dec
stc
ja
jl
add
adc
inc
mov
shr
loope
cmp
cld
inc
in
push
mov
cmp
lret
push
inc
in
and
push
xorb
daa
insl
sub
mov
sub
and
xor
repz
add
leave
ud1
add
bt
push
xor
jmp
sub
iret
xor
test
int
nop
ret
dec
rorb
nop
pop
adc
sbb
shl
mov
push
push
jmp
enter
call
dec
jecxz
rcl
mov
inc
xor
mov
mov
pop
cli
mov
mov
outsl
divl
add
jno
push
lret
imul
cmp
xor
adc
adc
mov
xchg
pop
ret
ret
mov
addl
xor
aam
sti
or
test
mov
pop
push
push
sbb
pushf
roll
or
dec
mov
xchg
cmp
pop
cmp
loop
aad
ss
popf
enter
outsl
add
mov
inc
mov
test
mov
int3
pop
lcall
dec
jle
enter
test
dec
xchg
and
jmp
aaa
test
mov
fsin
imul
shrb
sbb
in
imul
cmpl
cmp
mov
repz
aas
icebp
int3
xor
ret
add
or
inc
jmp
nop
inc
push
pop
or
sbb
push
sub
mov
xchg
in
dec
add
push
sbb
das
lcall
test
push
add
das
push
pop
fwait
test
rcll
jl
loopne
incl
mov
aam
dec
faddl
int3
insl
lret
xchg
shrd
xor
in
rcrb
in
cwtl
ss
mov
inc
ret
or
push
push
mov
fsts
inc
gs
imul
inc
add
sub
cld
ret
sub
or
std
in
loopne
jg
and
std
test
cmpsl
sub
sbb
cs
les
mov
out
adc
arpl
jp
icebp
lods
sub
fwait
or
mov
push
imul
and
push
pop
xchg
mov
in
loope
mov
cld
jne
ja
cmp
int3
xor
ret
lea
je
clc
call
cmp
cmpsb
jbe
jl
scas
sbbl
ret
mov
xchg
mov
mov
xor
decl
lcall
mov
pop
pop
xchg
xchg
jne
aas
clc
jecxz
cmp
lahf
jecxz
pop
or
pop
adc
imul
nop
adc
inc
and
inc
jns
sbbb
push
xchg
aad
mov
sbb
test
inc
dec
add
outsl
jge
rcrb
cmp
xchg
push
pop
popf
fistpl
xchg
sbb
sbb
adc
filds
das
and
xchg
xchg
stos
out
jnp
cmp
out
clc
sub
cli
add
and
daa
ret
out
enter
cmp
add
mov
in
pop
add
movsb
insb
loopne
ret
or
aam
push
sbb
and
fidivrl
jbe
cmp
sub
dec
pusha
fisttpll
xor
adc
or
ret
push
sar
fsubrs
into
ja
scas
xchg
mov
push
mov
mov
negb
enter
mov
pop
ret
or
xchg
push
dec
pushf
mov
pushfw
popw
rol
stc
rcl
mov
pushf
push
not
cmc
cmp
test
add
jmp
jmp
clc
sub
out
push
ficoms
lret
test
xchg
pop
and
pop
pusha
mov
loop
cs
ret
push
xchg
jo
ja
fldt
adc
and
fwait
adc
cltd
pop
and
pop
outsl
xchg
andb
mov
cmp
outsl
xchg
and
cmc
dec
push
or
int3
xor
pop
pop
gs
mov
push
push
adc
into
xor
aad
push
pop
dec
les
push
ficoms
or
fbstp
insb
aad
add
sahf
iret
pop
cltd
cmc
ret
fs
jge
imul
outsl
in
xor
scas
pop
xlat
inc
rcrb
push
mov
fwait
nop
enter
std
or
sbb
stc
std
cmp
mov
mov
int3
xor
into
int3
stc
call
jne
or
dec
dec
jb
sub
aas
jno
jo
in
in
adc
iret
sbb
jnp
inc
sbb
jp
mov
and
xchg
out
data16
mov
stc
jge
cltd
mov
out
in
sti
inc
fbstp
pop
aaa
adc
sbb
out
aas
xchg
faddp
sbb
jmp
std
jne
jp
jns
xor
mov
int3
xor
add
xor
jo
push
push
int3
leave
jo
das
mov
xor
icebp
mov
add
outsb
lret
jmp
pop
xlat
push
outsl
js
and
out
add
lcall
mov
leave
adc
test
jb
mov
mov
and
lds
jle
or
and
or
bnd
push
sbb
pop
lcall
xchg
cltd
push
aam
int3
xor
aam
jecxz
cs
fs
or
cmp
minps
adcl
dec
inc
int3
xor
dec
dec
push
ds
in
pushf
jp
and
mov
xor
lcall
sub
mov
jae
aas
push
loop
push
shll
sti
cmp
fsts
sub
push
sub
cltd
xor
inc
fstpl
sub
aaa
mov
sub
nop
inc
add
daa
daa
sub
pop
xchg
pop
xlat
xchg
cltd
sbb
xchg
aam
pop
push
fcmove
xor
lods
scas
push
pushf
inc
mov
push
not
movb
mov
lea
pusha
lea
call
call
pop
mov
leave
add
xlat
cmp
sbb
pop
push
orl
push
aam
or
stos
or
or
jp
cmp
ret
jecxz
xchg
sahf
jl
insb
pop
cltd
mov
add
xor
mov
xor
pop
mov
das
mov
lds
pop
push
xchg
xchg
add
sar
loopne
adc
push
pop
or
mov
jae
pop
aam
mov
jb
push
mul
ja
and
and
jmp
mov
mov
or
or
int3
xor
xchg
xchg
lods
mov
stos
sti
xor
int
adc
lea
adc
vmptrld
fcoml
pop
add
xchg
es
scas
loopne
adc
test
xor
mov
sub
push
imul
xor
outsb
push
sub
xor
cmp
mov
test
add
push
sbb
std
jge
jmp
imul
and
sub
fs
es
xor
stc
jae
jmp
ret
cmovb
mov
lods
jecxz
and
insb
jle
ds
aas
jbe
movsl
test
imul
jnp
out
adc
aas
push
lret
aad
mov
push
cs
fnstsw
xchg
adc
rcr
mov
mov
jg
adc
xchg
push
or
xor
dec
addr16
push
call
aad
pop
fcmovbe
xchg
adc
jno
fistps
arpl
popf
fcmovbe
pop
pop
lcall
int3
xor
movsl
cmpsl
xchg
sbb
push
and
cs
jns
outsl
and
mov
scas
and
jle
mov
push
jmp
mov
mov
daa
imul
cmc
cmp
push
fwait
das
mov
loopne
sub
mov
cmpsl
or
and
dec
fmulp
sbbl
mov
cmpsl
sub
shr
arpl
jle
aam
cmp
adc
xor
js
xchg
lahf
xchg
adc
push
lcall
sahf
fsts
icebp
jmp
movsb
aam
fcmovbe
mov
iret
add
inc
int3
orl
fstl
mov
cwtl
mov
test
repnz
insl
mov
aad
movsl
je
pop
shll
sub
pop
iret
adc
shrb
lcall
xlat
mov
sub
mov
sbb
mov
or
mov
adc
lcall
pop
ficoml
aam
shlb
sub
mov
test
stc
not
test
cmp
bt
add
test
stc
neg
clc
rol
pushf
pushw
popfw
push
pushf
inc
call
and
adc
leave
lds
pop
push
inc
pop
sbb
outsb
popa
jg
ljmp
xchg
inc
or
add
mov
push
pop
leave
pop
sar
mov
push
mov
enter
lcall
idivl
loopne
dec
jb
hlt
inc
or
mov
ja
das
inc
pop
popf
repnz
lods
and
leave
sub
pop
dec
sahf
pop
adc
push
lods
dec
mov
idivl
mov
sti
mov
int3
xor
lea
fldt
jbe
stos
mov
pop
sbb
pop
dec
add
lahf
push
fmull
imul
hlt
lcall
flds
dec
dec
rcrb
adc
fdiv
stc
div
cmp
mov
pop
xchg
push
movsl
sbb
cwtl
sti
jo
mov
lahf
mov
add
fs
imul
stos
pop
ja
ficoms
mov
repnz
sahf
stos
mov
mov
mov
add
addl
cmp
jl
pop
dec
ja
sti
sbb
sbb
pop
rcrl
int3
xor
data16
hlt
test
aad
sti
mov
ja
movsl
insl
in
addr16
jl
pop
out
xchg
rorb
push
flds
jge
mov
loop
insb
or
and
sub
push
sub
fistpl
addr16
jl
pop
scas
aad
in
cs
inc
inc
pop
int3
int3
xor
add
imul
and
inc
xchg
xchg
pop
or
xchg
pop
lods
and
outsl
add
fs
adc
mov
loope
rorl
sbb
ljmp
push
imul
sub
popa
lods
mov
sub
aad
sub
cmp
call
sub
popf
leave
inc
dec
mov
mov
push
or
or
inc
cmovp
add
xor
aam
add
sub
mov
out
ss
sub
imul
mov
jmp
imul
enter
fistpll
adc
out
lcall
andb
adc
iret
jo
inc
sbb
push
mov
bound
ds
roll
xchg
mov
mov
mov
mov
mov
idivb
lea
ja
sar
clc
or
sub
shrd
test
add
rcr
bswap
mov
jnp
mov
pusha
cmp
cmc
pusha
repnz
movb
lea
jne
not
movb
movsbw
setg
setae
jo
push
call
lods
cld
repnz
sub
adc
xchg
fcoml
dec
fists
push
test
sti
dec
insl
push
aaa
shr
and
outsb
add
leave
jno
adcl
xlat
dec
push
cmp
xor
or
addr16
mov
shrb
push
es
les
sub
popf
pop
out
push
or
xor
adc
cmp
std
jae
je
out
lret
xor
stos
dec
jns
enter
push
test
in
loop
popf
inc
push
push
pop
rcll
lahf
adc
aam
int3
xor
jl
stos
lea
ja
sets
dec
pusha
pusha
inc
not
inc
sar
shl
dec
sub
xchg
neg
bsr
shl
clc
mov
add
sar
mov
jmp
mov
jge
pop
mov
pushl
mov
xor
mov
xor
xchg
mov
mov
fwait
xchg
jmp
inc
leave
jmp
xchg
jo
sbb
push
fsubrs
in
aad
push
out
mov
hlt
imul
in
int
and
xchg
mov
les
cltd
mov
jle
enter
jb
lea
ret
dec
add
bswap
xor
loopne
arpl
and
jo
mov
dec
push
repnz
xor
scas
and
jge
arpl
std
outsb
es
mov
fcoml
pop
inc
mov
shr
mov
mov
pop
fsub
or
icebp
jl
mov
push
out
sub
loopne
and
int3
xor
push
test
xchg
lds
push
push
push
mov
leave
add
or
rclb
fists
dec
loopne
xor
ret
or
in
cmpsl
mov
les
cltd
mov
int
xor
cmp
cmp
sbb
popa
and
inc
xchg
inc
mov
xchg
xchg
push
loopne
sbb
arpl
in
popf
fsubrl
sahf
test
fwait
xor
adc
daa
mov
out
lret
loopne
js
nop
cmpsb
outsl
mov
clc
call
in
popl
pop
lcall
adc
int3
scas
sub
out
movsb
add
aam
orb
adc
ffree
or
aaa
test
ds
xchg
pop
pop
in
jo
push
in
nop
xor
push
scas
inc
mov
mov
jbe
and
jb
inc
lret
or
cmp
adc
int3
sbb
enter
sbb
hlt
push
sbb
test
push
bound
mov
ljmp
mov
in
hlt
add
add
enter
mov
int3
xor
cwtl
xchg
cmpsl
shll
out
cld
cmc
outsl
ds
lret
out
popa
outsl
mov
jb
popa
es
inc
pop
xchg
add
ret
jp
pop
cs
push
lret
inc
aas
fsubr
mov
sbb
add
pop
mov
rorl
scas
adc
xchg
pop
test
out
popa
mov
cmp
jbe
nop
cmpsb
and
pop
dec
ret
lods
aas
adc
nop
dec
add
add
addb
xor
mov
inc
dec
movsb
fdivr
add
jb
out
cld
xor
mov
cli
mov
imul
sbb
lcall
fidivrs
mov
push
lds
pop
jbe
mov
pop
ret
pop
lock
ret
test
push
adc
mov
fsubs
and
mov
and
cmpsb
das
add
lcall
xchg
push
lahf
int3
xor
ret
movsl
imull
mov
and
xchg
pop
enter
test
xchg
in
sub
cmp
loop
sbbb
sbb
aam
sub
enter
mov
xor
jb
push
xor
jne
scas
xor
scas
and
fs
mull
sti
imul
das
gs
je
in
push
imul
sub
vandps
int
shrl
mov
cmp
lock
ss
sub
or
pop
sbb
and
pop
ret
add
not
pop
xlat
xchg
icebp
insl
sub
lods
out
imul
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
repnz
jl
adc
fistl
adc
inc
adc
clc
stc
pushl
or
call
pushl
lea
jbe
sbb
mov
adc
mov
add
pushf
mov
shl
bts
test
add
bsr
movl
clc
shl
mov
sub
pushf
cmp
jmp
add
ret
das
xor
ret
iret
pushf
xchg
ret
adc
push
pushf
orb
lcall
ret
fwait
xchg
pusha
add
add
frstpm(287
cmp
clc
icebp
sub
pop
das
dec
dec
cmp
jmp
fmuls
or
jmp
mov
aad
pop
inc
cld
and
jb
cmc
xchg
aad
sub
mov
mov
in
sbb
les
clc
daa
mov
sub
and
int3
xor
mov
mov
fmulp
dec
mov
fisttpll
mov
fisttpll
or
add
mov
lret
pop
push
dec
sar
movsl
mov
stos
int3
sub
dec
pop
push
mov
mov
pop
out
mov
push
mov
cli
xor
hlt
xor
in
ror
ljmp
loope
and
pusha
cmpsl
sub
int3
xor
movsb
jo
pop
push
or
cmp
push
rorl
adc
aam
dec
inc
pusha
outsb
das
jmp
sbb
sub
pop
shll
outsb
or
call
inc
xor
sbb
out
loopne
jecxz
mov
push
test
cld
pop
jo
icebp
cltd
and
sub
data16
popf
jmp
rcrb
push
sbb
int3
xor
movsb
repnz
movw
lea
jae
bt
clc
bt
clc
xor
pusha
lea
call
pushf
push
lea
jae
clc
sub
jmp
xchg
lds
xor
jp
mov
hlt
imul
aas
adc
rdmsr
xlat
loop
int
mov
xchg
lahf
ss
je
mov
sub
repz
push
gs
push
jg
inc
mov
mov
lods
imul
lods
stos
sub
push
pop
arpl
mov
jb
mov
dec
push
call
sub
fxch
stos
pop
cmp
adc
pop
das
dec
pusha
cmpsb
aaa
xchg
pop
sub
rcl
lahf
aad
xchg
sbb
ficompl
adc
int3
xor
lock
xchg
orb
mov
icebp
jecxz
mov
cmc
mov
cmpsb
inc
pusha
movsb
idiv
pop
xchg
push
pop
mov
inc
mov
nop
or
jbe
test
shlb
fmulp
lret
mov
dec
out
sar
divb
or
std
icebp
bound
jl
jmp
inc
inc
dec
int
je
push
sbb
xorl
mov
imul
out
push
mov
sub
int3
xor
mov
jno,pn
movsl
sub
outsl
mov
repz
sub
or
pop
inc
or
or
lock
cmc
cmp
ljmp
cmp
mov
cmovb
push
bound
mov
ss
iret
shl
cmpsb
fwait
insb
sub
push
push
fnsave
xor
dec
je
fstps
push
rcrl
fstl
xor
pop
cs
sub
push
mov
cs
das
and
and
cmc
add
push
fucomip
or
mov
push
mov
sub
pop
sub
leave
push
lock
in
and
punpcklbw
movsb
sub
jb
mov
jno
imul
imul
clc
inc
lahf
jmp
or
ret
js
imul
cmp
daa
cmp
int
bound
cmp
mov
jo
sbb
jmp
stc
jl
mov
xor
or
jns
cmpsb
cld
pop
cmpsb
fbld
es
sub
hlt
cmp
jb
push
loopne
out
xrstors
fstl
jg
jmp
adc
mov
aaa
fstl
mov
push
fmull
xchg
and
ja
test
cld
inc
hlt
cmp
pop
jno
or
test
jle
add
xchg
daa
cmp
mov
mov
jo
pushl
int3
xor
or
rol
jmp
pop
xchg
pop
les
scas
inc
mov
loop
loopne
mov
insl
sub
and
outsb
imul
mov
mov
xchg
inc
or
in
pop
dec
inc
fsubr
call
out
xor
mov
mov
pusha
shr
add
rcl
neg
bsf
mov
stc
call
out
in
jns
das
xchg
xchg
sbb
push
test
xchg
add
cltd
rcrl
dec
inc
pop
and
pop
xchg
or
mov
dec
cmpsb
mov
push
mov
in
jmp
ret
add
jle
dec
inc
push
popf
jle
mov
cmp
mov
inc
pop
ja
pop
imul
add
mov
repnz
push
pop
pop
out
mov
mov
xor
mov
pop
jmp
or
insb
es
adc
xchg
test
xor
lcall
scas
inc
lea
cmp
clc
mov
mov
add
mov
insb
lock
lods
and
fisttpl
int3
dec
hlt
mov
sub
rcrb
xchg
pop
rcrb
sbb
inc
lds
cld
lods
movsb
lods
in
pop
push
icebp
push
xchg
cli
sbb
inc
pop
xor
add
aaa
add
push
lret
movb
add
pusha
sbb
pop
push
adc
fistpll
mov
ljmp
jmp
outsl
push
push
aas
jbe
jo
sti
pop
in
popf
arpl
ja
push
push
or
imul
fists
sub
inc
inc
ljmp
cld
lcall
adcb
aad
popf
cwtl
mov
adc
add
aam
insl
mov
add
add
int3
xor
in
inc
and
adc
lea
pusha
push
lea
jmp
mov
jb
sub
fcomps
rclb
dec
sahf
nopl
mov
mov
push
dec
sbb
cmpsl
stos
test
mov
jns
aaa
inc
inc
pop
and
je
push
loopne
xor
cld
lds
mov
sbb
ret
pop
jno
jp
mov
test
clc
cmp
je
mov
inc
les
lea
popf
iret
orl
fists
pop
lret
cmp
adc
push
into
cmp
inc
or
jl
outsl
sub
sbb
jge
lds
xlat
sbb
insb
test
sub
inc
adc
cmp
inc
mov
cmp
das
lds
imull
pushl
xchg
fs
push
sbbb
lea
mov
or
add
fidivrl
inc
and
mov
mov
mov
add
aad
ret
jle
aam
loope
int3
movzbl
orl
addr16
mov
cmp
sti
fidivrl
ljmp
jb
jle
cmp
xor
mov
daa
push
test
push
xchg
test
pop
jnp
cli
sbb
je
mov
cmp
int3
xor
push
adc
cli
test
icebp
cmc
or
scas
and
loop
mov
outsl
mov
dec
divb
pusha
and
jp
mul
fdivrs
mov
fistpl
xchg
cmp
ds
fs
cltd
jns
out
xchg
lret
jb
lea
scas
adc
nop
lods
jmp
push
rcrl
rcrl
in
in
mov
sub
pop
in
scas
fwait
pop
aaa
cli
jge
andb
fmul
mov
ljmp
das
and
int3
xor
mov
mov
or
xchg
push
push
or
xchg
adc
add
sub
popf
mov
adc
lods
hlt
jns
decb
sub
xchg
adc
mov
repz
loopne
and
push
and
add
push
mov
xor
sbbb
or
test
add
xchg
fs
cmp
mov
and
push
sbb
lods
xor
hlt
jno
jb
repz
xor
dec
inc
not
xchg
xlat
sbb
and
stos
mov
mov
mov
jne
scas
loopne
cld
mov
roll
pop
mov
sbb
out
fcomps
imul
jmp
jl
cwtl
fimull
push
aad
mov
adc
push
ficoml
cltd
jo
push
pop
mov
jo
mov
ss
cmp
cli
mov
xor
mov
add
mul
pushf
movl
pushf
mov
pushf
pushf
pushl
ret
hlt
sbb
lret
inc
push
xchg
jl
cmp
scas
and
jg
hlt
push
cmp
cltd
into
clc
xchg
test
repz
jo
adc
cmp
mov
test
in
sub
adc
and
les
jns
mov
or
sbb
in
cmp
jae
cmp
mov
jnp
int3
xor
push
dec
and
mov
sbb
push
lea
pop
dec
popf
adc
fimuls
mov
cmc
mov
jg
add
or
fadds
sbb
les
data16
rcl
rcrb
into
mov
adc
push
sub
clc
test
add
addr16
mov
stos
outsl
loopne
xor
ss
mov
movsb
xchg
adc
or
xchg
pop
leave
test
test
sbb
sbb
in
cmp
pop
shl
lods
nop
inc
cmpsl
adc
pop
xchg
int
jbe
add
out
jmp
lret
shrb
adc
iret
add
dec
and
popf
add
sbb
mov
inc
lods
jae
jle
test
daa
and
test
sub
movsl
out
stos
gs
xor
fimull
push
sti
mov
mov
push
daa
aaa
bnd
ljmp
outsl
es
or
test
cmp
pop
jno
rorl
mov
rorl
std
jno
inc
xor
xor
sahf
add
sbb
movsb
push
lahf
add
rorb
push
pop
adc
mov
stos
lahf
push
fxch
dec
lods
cmp
xchg
jb
fistpl
or
xchg
inc
roll
dec
inc
int3
xor
add
pop
aad
push
push
mov
mov
rorl
push
add
sbb
push
icebp
lret
aad
push
popf
inc
movsl
adc
cmp
mov
inc
aas
ficoml
arpl
pop
xor
mov
test
sbbl
xchg
aam
movsb
in
popf
mov
adc
inc
repz
andl
push
pop
hlt
xchg
sbb
pop
fcmovbe
fstps
xchg
pop
popf
xchg
int3
xor
test
xchg
sbb
jle
clc
and
mov
scas
aas
repz
arpl
movsl
cmp
jmp
mov
imul
out
ret
xchg
rep
aam
imul
out
das
inc
jb
lret
dec
sub
sub
cld
insb
out
dec
inc
add
xchg
pushf
fstl
or
sti
xor
outsb
mov
in
call
sub
and
cld
dec
pushf
lea
jne
bt
pusha
mov
call
jb
jae
scas
xor
inc
test
pushf
mov
adc
inc
dec
or
mov
fcoms
jmp
aaa
mov
cmp
dec
shrb
les
int3
xor
out
cmc
jnp
int
test
add
ret
int3
adcb
add
inc
in
lods
shrb
pop
inc
dec
pusha
sub
subb
addr16
cli
push
cmp
and
xchg
and
pop
out
and
es
dec
push
and
mov
mov
xchg
cwtl
push
jmp
mov
jne
repz
faddl
xchg
or
dec
dec
ret
inc
rorl
iret
mov
push
callw
add
ret
or
sbb
lahf
xchg
add
setle
add
inc
test
sbb
push
repnz
leave
mov
jne
stc
jbe
xor
pop
daa
shrb
or
sub
adc
enter
scas
enter
hlt
lods
popf
xchg
inc
rclb
les
clc
inc
cld
xor
pushl
pop
cli
rep
incb
inc
or
ja
test
test
dec
add
imul
mov
cld
stc
aad
aas
lods
add
shrl
movsl
and
and
popa
stos
scas
test
sub
in
xor
mov
pusha
movl
pushf
movl
pusha
pushf
pushf
movb
lea
jmp
sarb
out
mov
pop
cltd
lret
pop
lret
xchg
mov
rcr
inc
mov
jecxz
cmp
in
gs
adc
inc
scas
mov
rorl
in
popa
push
sbb
mov
fildll
rcrb
or
pop
xchg
fwait
fwait
pcmpgtw
push
add
mov
push
pushf
cwtl
push
jmp
popa
jb
add
stc
nop
cld
scas
repnz
jo
jl
mov
cmc
mov
int3
xor
mov
add
mov
xchg
popf
push
iret
sbbl
xchg
fcoms
aas
adc
inc
dec
push
shr
jge
mov
add
test
jecxz
mov
rep
push
pop
aad
mov
stos
mov
int
mov
rcrb
pop
popa
adc
jne
or
movsl
test
std
sahf
adc
loopne
pop
pop
or
repnz
rcll
mov
and
pushf
cld
es
jb
icebp
ss
jne
idivl
xor
mov
stc
imull
push
pushf
and
xchg
xchg
xchg
fisttpl
test
push
pop
and
or
ficoms
push
xchg
cmpsb
jb
mov
lds
ret
add
arpl
cmpsb
push
das
lock
xchg
lock
sbb
rolb
iret
jbe
mov
pop
sbb
lea
jmp
shl
lods
jne
ret
inc
rorb
mov
and
lret
pop
int3
inc
or
push
ficoml
dec
push
pop
or
addl
mov
inc
in
lock
je
xor
mov
std
icebp
int3
xor
fxch
xchg
fistps
and
aas
lods
mov
cmpsl
push
dec
inc
pop
enter
add
and
icebp
cmp
mov
rcrb
andl
jecxz
roll
outsb
in
add
cmc
cli
testb
pop
popf
xchg
or
pop
push
push
pop
push
lods
add
push
inc
rorl
or
fcoms
mov
bound
mov
add
push
add
jnp
out
jno
jno
mov
mov
std
mov
mov
fs
inc
adc
call
addr16
in
stos
popf
fwait
daa
sub
push
bound
jne
rcr
pop
adc
xchg
xchg
push
rclb
push
insl
movsl
js
jnp
cmp
in
jno
inc
outsb
inc
add
mov
add
ds
and
lods
push
mov
xor
pop
iret
pop
xchg
orb
js
and
jne
mov
lods
test
sbb
or
cmp
sub
call
adc
cmp
xchg
imull
std
push
xor
mov
dec
rolb
dec
adc
lock
mov
outsb
imul
lds
cwtl
push
enter
ret
mov
roll
cmp
dec
jg
add
dec
lret
int3
xor
das
and
jno
lods
loopne
scas
aaa
jae
jo
lods
loop
pusha
in
mov
and
adc
dec
in
test
pop
out
adc
leave
jecxz
insb
gs
and
adc
test
push
addr16
push
daa
data16
xchg
mov
mov
xchg
mov
or
mov
or
inc
into
lret
int3
xor
fs
jae
push
push
movw
lea
jmp
pusha
call
add
dec
outsl
arpl
inc
jb
add
ljmp
enter
std
lods
ds
arpl
aam
sti
rcl
jne
je
stos
jns
out
data16
in
arpl
or
adc
push
int
xchg
mov
out
outsb
dec
test
fcomps
or
ss
xor
aam
mov
out
stos
filds
outsl
sbb
xor
dec
mov
mov
ja
cwtl
cs
arpl
or
add
mov
std
repnz
cmpb
mov
inc
push
push
jae
mov
mov
jge
repz
aas
cmc
cmp
xor
out
bound
ds
loop
popa
in
mov
xor
lods
mov
and
pop
add
mov
sub
push
lea
daa
xchg
outsl
mov
sahf
test
xor
mov
lods
hlt
inc
mov
xchg
xchg
rorb
mov
and
xlat
sbb
adc
fs
lret
cmp
inc
into
inc
iret
inc
add
orl
push
andb
stc
fstpt
dec
adc
test
adc
push
add
addb
xor
repz
lods
fldcw
cmp
mov
xchg
mov
rclb
gs
cmp
scas
dec
es
mov
cmp
xchg
push
loop
in
rcrb
inc
inc
adc
pop
add
xchg
mov
dec
dec
imul
xchg
popf
pop
lahf
pop
pop
pop
push
int3
xor
enter
sahf
mov
mov
inc
adc
sahf
adc
dec
xlat
sbb
lock
cmp
gs
pusha
ds
push
jecxz
push
and
bound
lea
cmpsb
xor
fisubs
pushf
sbb
dec
imul
es
jnp
test
cmp
jnp
leave
movl
call
and
xor
fcompl
xchg
sub
jae
push
cmp
and
dec
add
movb
sub
fs
daa
cs
and
stos
lods
arpl
xor
add
das
add
iret
sbb
jp
das
add
sbb
cmpb
packuswb
add
add
add
add
add
add
iret
sbb
xchg
jp
add
iret
sbb
lcall
add
add
add
wrmsr
add
add
add
add
add
add
fcompl
add
add
add
add
add
add
or
add
add
add
add
add
add
iret
sbb
mov
add
add
add
add
ret
test
sbb
ret
add
lock
mov
sbb
lret
add
sub
xchg
iret
sbb
sarb
add
mov
sbb
fidivrl
add
iret
sbb
add
dec
and
add
subl
add
shlb
add
sar
inc
pusha
jmp
sahf
dec
inc
push
fcoml
cltd
xor
mov
cltd
aam
xchg
dec
inc
mov
push
sbb
popf
je
ja
dec
setle
xor
ljmp
cmpsl
push
sub
insb
push
sub
jcxz
jge
cs
xchg
bnd
enter
sbb
mov
mov
push
mov
movb
loope
loopne
arpl
in
jle
cltd
adc
ret
jne
dec
ret
sub
rcrb
rclb
push
pop
pop
int3
xor
iret
call
pop
jmp
sbb
inc
iret
pop
or
xchg
adcl
or
sbb
sbb
jecxz
jo
popl
mov
sub
je
fdivrp
fldcw
popa
out
daa
sub
std
aas
push
push
mov
xchg
fadds
sbb
jnp
sbb
jne
xchg
push
sar
push
iret
xchg
sub
adc
orl
sbb
cs
and
scas
gs
xor
mov
in
fbld
movsb
ja
jne
call
cmpsb
outsb
and
cmpsb
jb
scas
es
ljmp
test
xor
into
pop
loop
ss
daa
pop
sub
in
fs
mov
mov
sbb
mov
mov
icebp
dec
mov
test
out
addr16
jg
lcall
test
out
movsb
insb
in
int3
xor
push
push
xchg
xchg
and
sarb
xor
push
sub
test
mov
outsb
out
pop
pop
dec
stos
push
test
push
andl
pop
cwtl
cmp
xchg
outsb
or
push
and
fs
adc
push
pushf
or
xchg
inc
adc
push
add
lock
adc
daa
cmpsb
lahf
iret
push
xlat
push
xchg
xchg
jnp
push
jnp
mov
lods
pop
shlb
mov
jnp
mov
cmp
xor
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
adc
fisttpl
orb
ret
push
add
add
dec
push
sbb
adc
pushf
mov
mov
mov
addr16
loopne
aam
out
pop
adc
out
mov
add
mov
testb
in
bnd
or
in
mov
mov
jp
cmpsl
jecxz
jnp
adc
sbb
adc
and
sbb
pop
push
cwtl
pop
adc
xor
test
lds
sub
out
and
xor
and
cmp
loopne
xchg
xor
add
roll
cs
test
cmp
ss
in
imul
scas
test
lods
and
int3
xor
aaa
cmp
cltd
lcall
mov
jno
jmp
pop
fucomp
icebp
icebp
fnstcw
enter
popf
shlb
adc
fcmovu
clc
gs
xchg
fistl
rcrl
mov
arpl
out
xorl
inc
adc
mov
std
cld
push
aaa
cmpb
adc
popf
loopne
rcrb
pop
inc
adc
jmp
jle
cmpsb
mov
ljmp
int3
xor
cmpsb
mov
addr16
or
dec
push
jno
xor
jae
jae
mov
lods
mov
mov
imul
lods
adc
cmpsb
insb
outsl
in
testl
and
inc
data16
push
scas
test
ror
xchg
push
shr
mov
cld
test
fsubs
scas
and
xchg
aad
push
sbb
testl
or
scas
ds
out
outsl
out
and
and
xor
xlat
jo
pop
mov
xchg
movzbw
pop
movzbw
pusha
bswap
xchg
mov
movw
movzbl
mov
mov
pushf
movl
pushl
ret
mov
bt
push
cmpb
call
movsl
jbe
cmpsb
in
popf
add
ds
repz
jno
repnz
and
mov
sbb
in
add
mov
out
ja
xlat
push
enter
sarl
pop
lcall
mov
enter
aas
jle
push
lcall
gs
int
inc
jnp
sub
nop
int
popf
adc
iret
inc
je
push
add
roll
or
int3
xor
aam
xchg
pushf
imul
int3
pop
rcrb
pop
xchg
inc
lds
mov
xlat
int3
in
xor
addl
cmp
sub
xor
xchg
ljmpw
scas
pop
lahf
scas
and
jbe
cmpsb
cmp
popa
movsb
sbb
mov
add
stos
dec
cmpb
cmp
mov
test
iret
add
out
or
adc
addr16
jg
jl
fadds
lahf
pop
int
fcmovnu
fistpl
fcomp
fwait
pop
adc
xor
mov
mov
cmp
addr16
test
mov
jge
rolb
lret
shr
and
sarb
mov
pop
movsl
sub
add
cli
mov
pop
jno
out
in
icebp
xor
mov
call
mov
mov
test
jp
ret
stos
outsb
ss
mov
add
xor
pop
stos
out
xor
mull
das
jmp
and
gs
xor
fmull
push
push
scas
outsb
pop
jno
ss
out
out
gs
sub
clc
xchg
jb
stc
push
dec
rorb
fcmovnbe
lret
pop
lret
enter
and
ljmp
xor
push
mov
test
test
imul
mov
add
adc
pop
inc
hlt
and
lds
jb
mov
jle
lock
jae
mov
add
int3
add
dec
jno
mov
cmp
mov
stos
scas
gs
aas
fisttpl
mov
add
push
pop
das
or
push
adcb
repz
xor
pop
mov
push
mov
ss
lods
fisubrl
sbb
and
inc
cld
and
sbb
jnp
dec
int3
mov
xchg
test
jae
sbb
sub
and
aaa
jl
mov
mov
jo
std
jne
jle
xor
push
push
pop
lcall
sub
mov
lock
sub
dec
inc
mov
iret
mulb
sub
mov
subb
fstpt
adc
push
out
rcr
push
cli
lea
lock
mov
jle
jge
mov
pop
out
and
push
inc
test
sysexit
mov
add
lahf
inc
mov
mov
push
lea
iret
test
xchg
xor
jno
jae
jne
lret
sbb
add
mov
xor
or
jmp
ficoml
jmp
dec
push
jp
fisttps
push
cltd
mov
mov
xlat
pop
es
ret
repz
mov
int3
dec
lret
dec
stos
xchg
add
inc
repz
or
push
xor
pop
or
pop
add
out
push
pop
push
xchg
dec
sbb
xchg
xchg
pop
sbb
adc
ror
xor
xchg
sbb
add
cmp
int
or
or
int3
push
fsts
rolb
out
jns
xchg
xchg
je
and
push
fiaddl
xor
mov
jnp
cmp
outsl
sbb
sarl
out
inc
stos
jp
stos
out
pop
fsubrp
popa
cltd
je
cmpl
push
adc
inc
cwtl
dec
mov
push
shl
xor
adc
fsubrs
mov
mov
in
int3
xor
mov
rcrl
dec
in
bound
in
pushl
mov
xor
xchg
outsb
push
stos
push
adc
outsl
jb
pop
out
gs
mov
jb
testl
ret
xchg
lea
mov
ret
inc
daa
sub
enter
adc
out
jmp
inc
jnp
repz
jbe
jmp
shlb
sbb
rorl
arpl
mov
imul
shl
sub
pop
lds
cltd
mov
and
sbb
js
dec
jle
pop
xchg
jge
repnz
inc
xchg
mov
hlt
cli
mov
jo
cld
jbe
cmp
int3
xor
adc
loop
in
cli
and
outsl
cld
jo
mov
jb
lods
jno
aaa
and
mov
jg
rcrb
fs
mov
fs
inc
sbb
sub
inc
xor
mov
arpl
push
mov
mov
xor
in
loop
mul
push
ret
sbb
mov
add
mov
fstl
nop
mov
roll
into
mov
inc
int3
mov
int
dec
or
add
cli
call
lahf
jle
loope
aad
or
pop
pop
mov
ret
adc
xor
imul
test
jecxz
mov
xlat
mov
sbb
inc
mov
push
xchg
push
scas
xchg
lcall
inc
add
scas
scas
xchg
mov
jno
aas
shl
xor
xchg
call
aad
pop
popf
ficompl
pop
lcall
data16
jnp
mov
hlt
mov
ljmp
jns
es
arpl
mov
aas
daa
dec
pop
loope
xor
sbbl
or
dec
push
xchg
test
pop
jne
sbb
or
pop
ffreep
mov
fldcw
sbb
fisubs
pop
cmpsb
outsb
fs
or
sbb
loopne
jns
dec
cmp
aam
fcmovne
dec
add
mov
test
into
nop
and
mull
or
leave
push
scas
in
call
lods
cmpsb
outsl
sub
movsl
push
xor
sbb
xchg
inc
fwait
add
sbb
inc
xlat
pop
xchg
pop
pushf
rolb
aad
inc
js
mov
fdivl
mov
ljmp
loop
push
nop
sbb
dec
add
or
aas
jmp
sbb
mov
jl
jns
mov
sbb
lret
loop
dec
test
dec
xor
stos
cmp
mov
inc
mov
lods
test
testl
pushf
pop
push
arpl
insb
loop
stc
outsb
addr16
inc
sahf
nop
fdivl
js
mulb
sub
cmp
mov
sbb
lods
or
test
pop
fwait
pop
fsubl
jmp
xor
sub
mov
std
stc
jle
jbe
stos
lock
adc
and
and
jne
mov
pop
lds
add
add
xor
aam
inc
outsl
repnz
add
pop
sub
movsb
lock
adc
out
xchg
mov
jne
popf
movsb
call
mov
mov
mov
jg
stos
subb
xchg
sbb
rcl
pop
inc
into
pop
fmuls
js
popf
push
cmp
fcmovb
in
pop
adc
std
hlt
xor
cld
jne
int3
xor
cmp
movsb
lods
dec
push
xchg
mov
dec
inc
minps
orb
cltd
or
xor
rcr
jge
sbb
ljmp
mov
cmp
mov
dec
push
aad
rcrl
xchg
ror
les
sub
fdivs
mov
stc
push
xchg
cs
gs
xchg
xor
in
ret
sbb
pop
cwtl
push
lcall
cltd
int3
xor
popf
adc
inc
xor
xchg
and
out
movsl
xor
je
mov
sub
in
or
loopne
push
jno
outsl
aaa
mov
dec
repnz
jp
leave
jle
or
fnstsw
lahf
jle
xor
mov
in
ja
xchg
inc
rcrb
into
enter
dec
xchg
rcrl
push
mov
jnp
test
mov
iret
xchg
mov
scas
mov
pop
bndldx
mov
sub
stos
and
ljmp
xor
je
add
dec
clc
pushf
pushl
push
movb
lea
jmp
mov
add
rcl
call
idivl
push
or
dec
pop
lret
xor
movsl
neg
sbbb
push
leave
add
dec
xchg
clc
pop
dec
rorl
cmp
push
ljmp
leave
adc
mov
pop
add
or
rclb
bound
lods
sub
fs
lds
xchg
or
ss
or
push
or
dec
inc
push
dec
addb
xchg
xor
jmp
sbbl
push
setae
rcrb
mov
dec
push
pop
mov
imul
bound
cmp
sub
je
sub
test
push
insl
std
test
into
pop
jle
fisubs
pop
pop
adc
stc
es
fisubl
jge
mov
into
or
leave
not
mov
stc
or
mov
xchg
xchg
dec
sbbb
xor
in
int
leave
ljmp
xchg
mov
je
pop
inc
push
mov
pop
imul
call
xor
push
mov
insb
adc
jno
ss
pop
jmp
negb
jnp
movsb
jbe
stos
stos
xor
xchg
mov
push
mov
or
jb
fcmovb
divb
stos
stc
jns
push
aam
xchg
push
cmc
xchg
rcrb
repz
clc
and
inc
aam
jne
dec
add
cmp
lds
cmpsl
shll
and
cs
loop
pop
popf
repz
in
lods
or
mov
sti
lret
pop
inc
sbbb
push
jb
adc
movsl
lds
fdivs
jb
cs
jae
arpl
notl
inc
jns
ficoml
mov
add
fildll
int3
pop
push
ja
ljmp
out
push
push
mov
mov
ljmp
dec
notb
popa
mov
movsl
inc
or
fwait
ss
sub
mov
packsswb
and
push
out
cmp
jecxz
ret
and
lret
arpl
imul
mov
pusha
out
push
into
mov
into
mov
adc
add
dec
jmp
stos
aaa
xlat
mov
push
push
jne
xchg
jp
mov
adcb
mov
js
fmull
or
xor
adc
dec
int
cltd
sbb
sbb
movsl
les
push
sbb
jge
outsl
fidivs
sub
push
push
pop
sub
jecxz
push
ja
ds
sub
adc
bound
mov
push
scas
and
pop
out
imul
or
push
mov
dec
mov
mov
pusha
jmp
movsb
mov
inc
xchg
jmp
fildll
xor
mov
fldcw
jb
xchg
and
mov
sbb
arpl
xor
or
push
cmc
cmp
ja
loop
test
ljmp
subl
or
fsubp
repz
cmpsb
jno
sbb
push
or
mov
ret
jb
mov
add
pop
mull
pop
shl
and
lds
mov
mov
push
push
into
or
sub
lds
adc
div
in
mov
pop
in
ljmp
add
mov
pop
push
iret
in
xchg
dec
ss
cs
xor
sub
or
or
cmp
aam
add
lea
sbb
push
adc
cmp
xor
es
push
repnz
js
int3
mov
push
cltd
pop
pop
pop
push
cmp
lahf
lods
jmp
and
jp
push
mov
mov
mov
stc
loop
xlat
or
out
dec
inc
call
int
sub
cmp
mov
fucomip
lret
dec
push
jb
inc
or
add
mov
lret
in
into
push
push
mov
popa
adc
jecxz
insl
mov
xchg
pop
jae
enter
adc
pop
outsl
andb
push
cwtl
or
mov
jnp
jns
push
test
push
push
push
jl
dec
das
in
mov
js
mov
push
push
sub
sahf
cltd
cltd
repnz
data16
rcrl
dec
mov
clc
add
pop
and
ja
inc
push
mov
outsb
dec
jmp
inc
data16
dec
add
push
dec
mov
xchg
dec
iret
cmpsl
into
pop
stos
loop
in
nop
rclb
mov
repz
pop
shrl
xchg
test
mov
or
mov
push
shrl
push
xchg
not
insb
xchg
imul
dec
popa
push
and
pop
pop
or
push
sahf
fs
mov
lea
or
jmp
in
jb
sbb
dec
iret
das
cmc
add
push
cmp
xlat
add
aad
mov
sbb
iret
and
dec
imul
iret
addr16
cmp
lock
dec
push
or
sub
jnp
jmp
jmp
sub
mov
pop
sar
lea
shll
add
or
push
mov
push
mov
dec
imulb
push
sti
dec
xchg
jb
mov
pop
adc
fcomp
in
ljmp
dec
arpl
mov
cmpsl
mov
adc
or
xchg
sahf
stos
cmp
daa
sbb
out
cmp
psubusb
lock
dec
mov
ljmp
aaa
fucomip
mov
lea
int3
dec
xor
stos
decb
ret
mov
into
sub
lret
int3
insb
sub
hlt
adc
cmp
rclb
int
and
std
dec
cltd
or
mov
rorb
mov
jmp
ljmp
pop
jecxz
or
popa
push
das
add
push
push
push
fdivp
jmp
cmovle
sarb
dec
xlat
iret
rorl
rcll
jb
push
mov
pop
dec
int3
dec
pop
cmp
sbb
lret
jb
iret
xchg
dec
xchg
pop
lret
dec
out
jns
push
lds
adc
add
adc
or
xlat
xchg
in
orb
add
or
cld
cwtl
push
pusha
dec
sahf
push
pop
mov
ja
pop
leave
mov
or
and
mov
add
adc
xchg
int
and
adc
adc
push
add
dec
mov
xchg
out
lret
adc
xchg
das
aad
int
outsb
dec
jl
pop
lock
cmc
lret
xchg
jbe
out
lods
sbb
sbb
sbb
cld
fmul
push
pop
pop
jo
int3
rclb
ret
rclb
lret
fisttps
dec
lds
in
pop
out
fistl
hlt
mov
aad
pop
adc
shl
xchg
mov
lret
shr
adc
or
lret
push
or
adc
rcll
je
push
or
in
rcll
mov
loop
and
int
xchg
and
and
fisttpl
jae
sti
push
cs
xchg
ficomps
push
lret
ficomps
adc
xchg
fisttpl
mov
or
nop
fidivrl
stos
roll
jne
popf
pop
cld
outsl
cld
mov
popf
inc
iret
mov
pop
pop
push
aaa
cmpl
pop
xor
mov
xor
xchg
lea
mov
dec
push
inc
jne
sar
test
dec
push
outsb
int3
mov
dec
ss
lret
hlt
aam
iret
dec
iret
popa
jp
mov
inc
js
movl
shlb
fiaddl
or
cmpsl
ljmp
push
stc
cwtl
jae
pop
imul
roll
imul
mov
out
shrb
sahf
loop
push
push
jb
int3
jecxz
iret
mov
fcomps
cltd
lret
adc
aad
sbb
pop
xchg
sarb
neg
pop
std
push
lret
xchg
push
pop
sub
mov
iret
push
or
fimuls
jl
add
or
mov
push
cmp
mov
xlat
arpl
inc
pop
imul
sbb
pop
xchg
scas
decl
stos
push
mov
jbe
lea
pop
mov
shll
lret
lret
push
add
xchg
pop
mov
movsl
mov
push
xlat
fidivrl
inc
cs
scas
insb
out
std
pop
xor
jno
pop
pop
push
mov
mov
jne
mov
push
rolb
add
xchg
push
leave
bound
clc
sub
jo
push
out
mov
fistps
out
out
dec
push
push
inc
jle
mov
mov
fs
shl
xchg
jecxz
pop
rcrb
dec
mov
adc
inc
scas
jmp
sbb
rcrl
mov
pop
and
and
mov
mov
dec
push
aas
adc
pop
and
ret
or
ret
dec
sbb
dec
xor
aam
popf
shr
pop
pop
mov
mov
xchg
push
test
dec
and
imul
inc
pop
xchg
mov
dec
cmp
xchg
jecxz
rorb
int
jo
js
sub
cmp
addr16
add
sti
push
into
xchg
scas
test
loopne
mov
cwtl
sahf
loope
push
test
xor
insb
out
xlat
int3
mov
clc
or
lock
das
cmp
fistps
cmp
mov
pop
xchg
daa
push
call
test
stos
push
ljmp
xchg
int
and
mov
pop
pop
mov
dec
xor
xor
dec
jb
pop
inc
fistpl
mov
inc
mov
mov
loop
dec
mov
aaa
sti
lea
push
jnp
imul
pusha
lcall
bound
pop
sub
stos
cmp
bound
insb
mov
dec
insl
sbb
hlt
outsb
cli
stos
add
imulb
pop
jmp
sub
hlt
das
scas
add
fs
or
clc
add
pop
mov
xchg
push
ret
sti
je
inc
or
sub
add
push
icebp
mov
adc
fidivs
adc
pusha
ss
sub
push
nop
sub
and
adc
adc
cltd
pop
and
push
or
or
dec
push
sub
xchg
jnp
adc
pop
test
pop
jge
jb
fcmove
repnz
scas
push
sub
sub
jg
push
fnstsw
pop
dec
out
sbb
push
push
or
add
push
push
xlat
jbe
jno
dec
xchg
mov
push
inc
xor
mov
push
push
fadds
out
out
out
xor
xchg
test
rcl
xchg
adc
jg,pn
mov
or
dec
mov
imul
bound
or
sbb
cld
or
pop
adc
mov
inc
pusha
push
idivb
cmp
xor
sbb
xchg
mov
hlt
xor
loopne
sub
popa
mov
in
sub
push
mov
add
addr16
xchg
jae
aas
rcrb
in
or
pop
out
jg
hlt
push
out
mov
cmpsl
roll
adc
mov
sahf
jae
adc
inc
int3
loop
in
dec
imul
in
push
cmpsb
call
iret
adc
sub
inc
push
sbb
ds
jg
jbe
mov
test
mov
mov
cmp
or
pop
push
repnz
cmp
and
inc
mov
jne
cmp
fnsave
ret
sub
leave
movb
loop
je
sbb
repz
loopne
dec
cmp
mov
dec
add
cwtl
mov
dec
shl
pop
add
js
loopne
or
xlat
div
idiv
cli
testb
repz
ss
xchg
pop
jb
dec
jns
int
sarb
stc
ds
mov
shlb
or
or
sub
adc
or
xor
out
idivl
in
xlat
mov
imul
or
jnp
into
inc
push
push
mov
testb
shlb
push
stc
cli
or
mov
aad
mov
cwtl
push
pop
test
insb
pop
mov
adc
movsl
lcall
add
cmp
outsl
xchg
adc
pop
movsl
jmp
mov
les
or
mov
jne
or
mov
add
fsubs
mov
xlat
jb
out
pop
or
xchg
pop
int
imul
pop
cmc
mov
xor
and
fbld
cltd
pop
in
insb
dec
movsb
lcall
cltd
inc
sub
pop
in
mov
xchg
push
sti
leave
fcoms
xchg
cmp
pop
subl
sub
pxor
pop
dec
out
dec
inc
fwait
push
pop
and
lcall
inc
cmp
fsubs
scas
adc
adc
lea
dec
hlt
jmp
popa
add
push
aas
jno
lock
or
shl
adc
lock
pop
stos
int
xor
adc
aad
sahf
push
or
push
dec
or
xchg
ds
xor
loope
add
movsb
mov
mov
or
and
in
loopne
or
arpl
mov
lods
pop
pop
dec
jp
mov
loop
out
xchg
cmpsl
sub
loop
int
sti
test
mov
loope
dec
jne
push
mov
cmp
push
mov
inc
add
jmp
pop
aad
aas
std
cmp
adcb
scas
cmp
xchg
in
pop
sbb
adc
aad
call
clc
sub
push
aam
aam
mov
out
in
or
mov
jnp
push
rclb
adc
mov
repz
xchg
rcrb
leave
fnstsw
lock
rolb
xorb
das
or
pop
push
clts
push
loope
cmp
push
pop
push
jns
insb
push
sbb
or
lea
pushf
mov
cmp
dec
lret
popf
pop
xor
or
int3
xor
ja
mov
addr16
xchg
shlb
lods
lds
repnz
test
ds
inc
jl
pop
test
jmp
inc
sub
negb
pop
sub
cs
loopne
shr
mov
ss
sti
push
lea
jae
sbb
shll
pop
out
or
ljmp
bound
push
mov
push
mov
push
xchg
dec
xchg
sahf
sarb
jno
cmp
pusha
inc
mov
cmp
jno
js
push
xchg
fcmovbe
inc
dec
ljmp
push
pop
mov
sub
dec
inc
lret
fstpl
addr16
inc
push
xchg
pop
or
sub
orb
fildll
pop
sub
pusha
pop
ja
jmp
dec
cmpsb
mov
stos
call
jle
lret
lret
cmp
and
mov
and
imulb
pop
addr16
mov
mov
sub
cltd
shrb
stos
sub
jle
lods
xchg
sahf
push
dec
rcl
lahf
lea
pop
out
cmp
shrb
fdivl
test
jno
outsb
xor
adc
dec
shlb
cmp
xchg
inc
in
call
and
loopne
push
push
fcomp
scas
aas
pusha
push
dec
xchg
fbld
divl
push
sub
lea
mov
arpl
mov
inc
loope
xor
dec
dec
jecxz
mov
fnstsw
ljmp
xor
push
mov
pop
push
dec
push
sub
in
out
cmp
mov
popa
push
clc
imul
xchg
xor
dec
jecxz
fs
xlat
ret
cltd
jb
lods
push
ret
into
bound
lods
lret
xchg
add
repnz
xor
mov
push
mov
test
ss
outsl
fisubl
jns
dec
mov
ror
pop
clc
fcom
cli
ret
jmp
jb
jae
push
dec
and
lahf
jg
adc
jmp
loopne
xor
inc
iret
push
cmp
cmp
pop
push
aam
sub
or
cmpsl
xor
mov
aaa
sub
xor
stos
push
dec
push
or
pop
push
outsl
cli
mulb
fisttpll
mov
sub
enter
pushf
jle
in
scas
loop
js
and
mov
lea
inc
push
push
mov
adc
sub
inc
or
imul
xchg
jns
in
jmp
aaa
or
dec
testl
cmp
cmp
sti
fldcw
lret
adc
sarb
push
cltd
mov
in
je
fdivp
out
das
pop
fimull
cltd
pushf
and
int
andb
xor
adc
pop
pop
cmp
xchg
sub
mov
nop
int3
packsswb
xor
ss
dec
mul
xor
push
jg
cld
adc
out
push
sahf
cmp
je
pop
cs
clc
add
cltd
lcall
dec
sti
fimuls
rorb
enter
lahf
cwtl
test
xor
cmpsl
mov
sub
push
mov
sub
and
shlb
loop
daa
adc
in
loop
pop
mov
or
movsl
iret
jge
mov
mov
push
mov
pop
and
pushf
xchg
lods
lea
mov
iret
rcl
push
icebp
pop
pop
lods
push
mov
rcrb
hlt
int3
lret
rcl
call
mov
add
inc
xchg
push
xor
or
scas
stc
pop
xchg
mov
cmpsb
out
pop
xchg
inc
addr16
jbe
test
xor
ror
pop
mov
cmp
jb
hlt
outsb
pusha
repnz
sub
mov
mov
mov
std
dec
push
sub
push
jp
jmp
aaa
xchg
mov
mov
mov
loope
lahf
int3
fcom
lret
jns
xchg
push
in
sbb
divl
xchg
orl
xor
scas
sar
loop
push
dec
xchg
cld
je
iret
inc
bound
jmp
sti
dec
inc
pop
and
mov
insb
or
mov
jle
hlt
adc
arpl
sbb
mov
add
sbb
cwtl
mov
or
sbb
ds
pop
loop
cs
cwtl
xchg
push
mov
ds
sub
hlt
jmp
repz
sti
rcrl
loope
xchg
xchg
jmp
pop
test
xchg
or
aas
and
add
lret
nop
or
ja
xor
pushf
das
push
sbb
dec
pop
inc
pop
int3
insl
clc
hlt
push
adc
fists
or
shr
adc
mov
pop
sub
push
and
sub
sbb
cmp
fptan
mov
xlat
sbb
out
ja
jecxz
xchg
ljmp
out
lret
ljmp
je
dec
andl
loopne
mov
xchg
adc
loop
mov
sub
in
test
jmp
or
cmpsb
mov
into
andl
mov
data16
mov
dec
xlat
call
pop
mov
das
mov
incb
punpckhbw
push
fsubp
popf
int
cmpsb
push
mov
sub
and
in
cmp
push
or
sub
jb
jl
fcmovne
or
inc
cli
push
push
jecxz
or
mov
mov
fistpl
pop
push
mov
iret
out
outsl
inc
sub
lret
mov
jo
rcrl
dec
push
pop
pushf
bound
jo
dec
push
jns
js
imul
push
mov
in
push
or
aas
push
ljmp
stos
sbb
sbb
xchg
call
sbb
rolb
mov
push
daa
gs
jl
add
fcoml
xchg
sarb
cmp
outsl
dec
dec
fcomp
rclb
pop
out
and
jl
and
dec
mov
ficoms
mov
gs
xchg
nop
push
cmp
imul
aad
sbb
scas
jb
jp
cmp
pop
push
mov
push
fmulp
jmp
je
inc
into
sub
sub
repnz
je
mov
data16
cmp
fldcw
mov
enter
movsb
push
out
mov
mov
invd
pop
into
cmp
sub
es
xchg
test
and
or
arpl
or
xchg
shlb
jno
sarl
push
pop
pushf
sbb
pop
xchg
nop
adc
xchg
lret
dec
push
xlat
mov
adc
out
mov
stos
push
push
adc
or
cmp
pop
pop
out
nop
pop
cmpsb
dec
cs
andl
popf
xor
ljmp
pop
cmp
jnp
jmp
ret
scas
pusha
sti
mov
gs
mov
mov
insb
dec
jns
push
fnstsw
cli
mov
popa
scas
dec
dec
lret
push
pop
bound
iret
lahf
push
mov
mov
pop
jno
xchg
jno
adc
sbb
jo
fisttpl
ljmp
xchg
or
jo
cmp
insb
out
mov
ljmp
cmc
cmp
pop
int
int3
es
imul
repnz
dec
popf
jne
push
shlb
push
or
frstor
mov
or
bound
sbb
sub
mov
into
mov
int3
rcrb
lret
pop
sahf
mov
sub
or
pop
out
addr16
dec
stc
jecxz
loop
push
inc
xor
stc
xchg
jbe
fs
ljmp
iret
mull
push
fdiv
psadbw
pusha
out
add
and
add
insl
xor
outsb
in
add
mov
sbb
outsb
adc
into
pop
inc
pop
lods
fs
inc
push
stos
sbb
nop
fucomi
jl
outsl
outsl
jp
sub
testb
cmp
push
mov
mov
push
out
sti
pop
cmp
jle
xchg
rol
xchg
ja
pop
lret
not
cmp
mov
inc
inc
sub
or
mov
sbb
jle
repz
test
cmp
ss
adc
inc
js
ljmp
push
jp
or
xchg
xchg
cs
adc
les
iret
jl
in
push
mov
xchg
std
jo
fcomip
repnz
fidivs
push
pop
sbbl
sbb
test
push
mov
cmp
sbb
and
sub
enter
aam
mov
push
rcrl
push
ja
subl
pop
data16
mov
mov
sbb
and
stc
repz
cwtl
mov
mov
sbb
pop
add
jl
fstl
or
cwtl
and
imul
push
xchg
sub
sbb
cmp
ljmp
out
and
mov
sbb
adc
push
into
and
scas
lods
int
pop
pop
cmp
or
aam
xchg
jb
call
lock
enter
xlat
and
pop
jb
inc
bound
cli
sub
sbb
push
jbe
jmp
sbb
xchg
lahf
hlt
pop
add
cwtl
dec
in
adc
pop
xchg
into
sub
xor
sarb
test
mov
pop
pop
add
mov
mov
cmp
out
lea
xor
ljmp
out
iret
stc
call
mov
and
pop
loopne
push
popa
sub
xchg
and
pop
sub
loope
pop
popa
stc
into
pop
dec
test
fmull
mov
ror
dec
imul
jb
dec
xchg
popf
dec
pushf
jecxz
inc
and
pop
xchg
push
aas
adc
mov
fucom
mov
dec
and
mov
repnz
cltd
adc
mov
jmp
stc
mov
lret
pop
rcrl
mov
imul
dec
aaa
mov
int
pushw
cmp
cmp
push
into
roll
fadds
rolb
sbb
js
jmp
loopne
push
cmp
adcl
jne
insb
cmp
jno
adc
sub
stos
loope
loope
jbe
fdivl
cmp
mov
sarl
jl
push
in
lret
mov
xor
cmp
pop
call
xlat
xor
dec
pop
int3
jecxz
cmpsl
inc
cltd
mov
lods
lret
cmp
jge
pop
lret
jns
and
pop
ljmpw
in
cmpsl
lret
jns
lret
pop
mov
cmp
push
jp
lret
dec
sbb
push
push
shrb
repnz
sbb
iret
loopne
cld
int
std
jmp
lock
cmp
lods
into
xchg
popa
mov
mov
mov
ljmp
cli
cmp
shll
mov
jmp
ljmp
lret
cmp
add
into
mov
pop
test
lret
leave
ds
into
mov
ljmp
ljmp
shrb
jmp
pop
imul
outsl
dec
or
jmp
jns
std
lods
insb
fisubl
cmp
rclb
insl
pop
adc
pushf
scas
lret
dec
mov
inc
xchg
cltd
ret
lods
or
je
lret
dec
int3
jecxz
jae
jmp
jmp
andb
sti
cmp
or
loopne
jge
cltd
nop
ror
mov
lods
cmp
das
xchg
and
rclb
mov
rcl
movsl
dec
mov
dec
test
dec
leave
cli
sub
sbb
das
shrb
sarb
das
mov
int
sub
push
push
int3
shll
js
shl
dec
arpl
bound
xor
testb
push
and
jecxz
push
push
dec
mov
fisubrl
lods
mov
pop
jp
or
mov
mov
les
and
push
test
sub
push
into
push
js
mov
xchg
adc
jno
lcall
push
inc
repnz
lret
cli
pop
movsl
fistpl
rclb
outsl
ror
cmp
rorl
jmp
sub
fldt
jae
ds
xchg
rep
movsl
lret
mov
push
pop
rcl
xchg
xor
loop
sub
lods
pop
pminsw
bnd
sbb
lea
jle
repz
insl
dec
sub
or
mov
or
into
xor
sub
cmp
pop
in
test
sub
inc
rclb
jg
push
mov
ret
dec
mov
seto
les
inc
mov
cmpb
mov
aas
or
adc
cmp
pop
mov
and
lahf
divl
add
sub
mov
jae
pusha
push
mov
cli
fcom
popa
push
in
sbb
movsl
aam
scas
mov
pop
scas
fidivs
int3
hlt
iret
das
es
aam
push
sbbb
lahf
dec
pop
jbe
data16
fisubs
sbb
xchg
cs
cmp
mov
adc
add
mov
fsts
sbb
insb
lret
das
push
adc
jmp
fimuls
sti
mov
push
xor
xchg
rorl
adc
pop
push
sbb
imul
xchg
idivb
and
dec
jmp
or
jge
xchg
mov
aam
push
dec
mov
mov
iret
mov
cli
outsl
and
pop
adc
dec
lds
mov
cs
ret
and
jno
sub
sub
cmp
lea
mov
mov
xchg
push
in
ljmp
loopne
bnd
mov
jb
shlb
dec
sbb
mov
or
mov
adc
mov
lret
in
pop
jmp
xor
cld
int3
or
xchg
ja
movsl
push
enter
rep
cmp
inc
jns
sahf
inc
and
je
push
clc
dec
cmpsl
jge
sub
and
push
into
fldcw
test
imul
mov
push
movsb
imul
lret
and
dec
hlt
sbb
xchg
pop
stc
ljmp
push
and
stc
fnstenv
pop
icebp
sub
push
cwtl
dec
aad
dec
mov
inc
fcmovnu
pop
sub
out
test
scas
xor
push
mov
dec
jnp
add
inc
pop
xor
jmp
daa
into
test
sub
sub
dec
push
pop
jg
mov
and
push
xor
mov
outsb
fisubrl
movsl
lea
sbb
pop
dec
xchg
in
sbb
inc
sbb
testb
int
push
sbb
jns
dec
ds
mov
test
in
cltd
push
int3
shlb
into
rcl
test
mov
cmc
lret
push
push
test
faddl
or
int3
or
cmc
lea
inc
dec
pop
ss
gs
std
incb
mov
push
dec
cmp
ret
push
cmp
stos
repz
jo
into
loope
insl
aad
sahf
das
das
sub
pop
movsb
cmp
or
jg
inc
js
pop
bound
mov
je
je
pusha
fsubrs
add
pop
or
jb
pop
push
jae
cmc
cmp
push
mov
call
jno
frstor
jp
adc
fdivl
out
add
into
test
mov
or
sbb
mov
stc
andl
cs
clc
fidivrs
pop
push
cmc
stos
xchg
aas
pushf
push
daa
mov
push
inc
xchg
lods
dec
orb
repnz
mov
repz
jg
xor
ja
mov
push
lcall
inc
pop
out
cli
push
pop
sub
jno
sahf
xchg
adc
movsbl
les
shll
inc
aas
sbb
lret
lahf
movsl
fwait
int
decb
push
addb
xorl
sub
lods
sbb
pop
ret
shr
aam
sub
xchg
insl
bound
sahf
aam
lret
mov
idivb
push
add
xchg
pop
pushf
dec
or
pop
rcll
mov
lods
outsl
pop
mov
cli
shr
and
jmp
lcall
nop
inc
push
sbb
js,pn
push
loop
sar
fwait
sbb
psubq
mov
loopne
notb
in
cmp
aas
cwtl
xor
xor
hlt
ljmp
mov
adc
mov
fwait
sbb
jo
mov
push
sahf
and
std
lcall
fisubl
or
push
inc
insb
rol
mov
lods
push
jle
shll
mov
iret
rcrb
sarb
push
and
pop
push
repz
iret
xchg
sbb
lret
pop
sti
dec
out
dec
shrb
in
mov
inc
das
fwait
push
fsubrs
movsl
add
push
cmp
sahf
push
shrb
cmp
xor
jne
mov
sar
aad
xchg
or
mov
ljmp
lret
cmpsb
rol
dec
or
fdivrp
mov
out
jmp
sarb
fldenv
adc
or
sub
jae
mov
dec
pop
repnz
jecxz
sub
int
ljmp
and
push
aad
mov
jbe
int
mov
aaa
push
mov
cld
imul
adc
push
push
jl
fcoml
jp
imul
mov
mov
dec
mov
std
into
pop
pop
cmp
add
push
jge
or
jp
popf
push
xchg
fidivrl
scas
enter
sbb
push
pop
je
lret
cmp
lock
faddl
push
shrb
adc
and
fmul
jmp
arpl
cs
subb
pop
flds
mov
movsl
cmp
cli
fdivl
inc
lods
ljmp
add
mov
dec
push
jmp
push
mov
inc
es
xchg
or
sbb
adc
scas
inc
rcrb
rcll
push
sti
inc
fnstcw
xchg
arpl
bound
mov
xor
jmp
add
inc
int
push
add
xchg
sahf
push
repnz
jmp
xchg
cltd
mov
push
sbb
inc
cmp
dec
cmc
pop
imul
out
cmp
sub
pminub
inc
dec
push
scas
loopne
adc
aaa
ror
push
repnz
adc
lret
or
shrl
aad
jle
xchg
movsl
xor
mov
nop
jne
jno
add
test
jne
push
and
mov
jo
stos
cmp
mov
xchg
push
test
push
mov
int
ficoms
cwtl
sahf
notl
jmp
fdivp
popl
stos
jb
and
jae
js
pop
push
adc
jne
add
pop
push
std
rcrl
mov
adc
dec
into
in
mov
cmc
xor
dec
iret
mov
adc
ja
push
mov
rol
pop
hlt
mov
mov
xorb
add
stos
mov
mov
ret
sbb
aas
dec
jge
rol
clc
imulb
sti
xor
arpl
cmc
int3
and
ljmp
pop
adc
in
sbb
or
outsb
sbb
jmp
decl
dec
lahf
mov
jo
jle
adc
je
inc
stos
in
lods
pop
xlat
xchg
push
dec
repnz
shrb
imul
dec
out
hlt
comiss
daa
xchg
sub
inc
ljmp
mov
mov
xchg
and
cld
stc
mov
into
push
mov
push
stc
mov
push
adc
iret
nop
outsl
int
ja
mov
aaa
sub
mov
ljmp
fisttps
xchg
mov
mov
fsub
rorl
repz
push
xor
pop
adc
adc
mov
pop
sub
insb
scas
cwtl
ljmp
repz
out
adc
jb
mov
int
scas
movsl
dec
push
and
insl
scas
loop
jmp
mov
or
pop
cmc
xchg
mov
sbb
ret
pop
dec
fldt
aam
lahf
jmp
ljmp
xchg
pop
popa
scas
sub
ljmp
mov
dec
sbb
pop
cwtl
push
adc
mov
fisubs
cwtl
lcall
rcll
dec
push
pop
insl
push
pop
jmp
popa
int3
xchg
dec
push
push
fsts
in
dec
sbb
push
adc
cmp
and
pop
stos
and
fcmovbe
xchg
push
gs
out
push
mov
xchg
repnz
jmp
cld
push
push
mov
and
and
pop
inc
loopne
call
pushf
popa
cli
in
xor
push
pop
in
ficoms
idiv
mov
push
iret
fisttps
adc
scas
jp
xrelease
and
dec
lret
dec
pop
int
icebp
xor
imul
sub
bound
pop
call
mov
push
fcompp
gs
out
xor
mov
pop
dec
xlat
mov
xor
adc
imul
and
mov
adc
cmp
cmp
pop
mov
push
xor
std
jp
aas
add
adc
jne
pop
mov
into
jbe
sub
push
cwtl
and
leave
mov
hlt
inc
andl
cmp
mov
fisttps
mov
insb
std
std
dec
mov
jp
testb
or
mov
ret
js,pn
fwait
push
xor
xchg
setle
sbb
test
jne
sti
imul
hlt
lock
xchg
ja
and
mov
mov
push
bound
add
rcrl
or
popf
repz
movsl
test
jne
scas
adc
testb
xchg
push
jb
pushf
fnstcw
lret
xchg
mov
mov
and
mov
pop
fidivs
aaa
jno
call
aas
mov
sbb
ss
jbe
xchg
in
movsb
pushf
add
int3
mov
jmp
xchg
push
inc
jmp
cmp
sub
and
rorl
iret
push
cmc
dec
fcomip
dec
mov
xor
pop
andb
lret
enter
pop
sub
push
adc
lahf
cmp
mov
aas
jmp
xchg
lret
scas
or
sbb
not
dec
test
inc
lret
inc
add
das
sti
push
shr
cmp
fcompl
cwtl
cmp
mov
push
jle
jbe
movsl
pop
mov
js
es
mov
mov
xor
cmp
iret
xor
ljmp
adc
shlb
or
jp
shll
cmp
scas
add
mov
sub
test
out
xchg
xchg
stc
gs
psrlw
lret
pop
xor
mov
in
ljmp
repz
and
roll
sbb
dec
out
fsubrl
inc
flds
cmp
cld
jns
inc
jbe
push
jl
xchg
pop
test
es
fnsave
add
in
fmuls
xor
sub
cwtl
xchg
test
mov
dec
inc
loop
mov
mov
das
dec
data16
int
xchg
out
xlat
lods
pop
and
sub
dec
clc
xchg
arpl
push
lods
and
mov
push
adc
cmp
repz
repnz
mov
pop
ss
jbe
or
adc
aam
xor
push
xchg
aam
mov
mulb
dec
daa
out
dec
xchg
jne
pop
stc
negb
pop
hlt
adc
shr
repz
subb
jp
cltd
xor
xor
mov
push
cmp
push
xor
fcomps
rcrl
scas
push
in
aad
add
les
shlb
push
push
stos
test
pushf
cs
mov
in
dec
fcompl
shl
cmp
aas
lahf
std
xchg
pop
push
and
mov
daa
inc
mov
cmp
mov
pop
jg
out
je
scas
or
inc
int3
pop
xchg
negl
int
xchg
rclb
pop
adc
jle
adc
push
loopne
pop
adc
push
cmpsl
sbb
test
aas
push
idivl
pushl
adc
icebp
lds
repz
sti
movsb
sub
ret
mov
cmp
pop
xchg
mov
cltd
push
pop
dec
dec
dec
jae
add
lahf
adc
pop
test
mov
or
jbe
jp
mov
pushf
push
cli
mov
test
into
fdivs
xchg
leave
xor
nop
lock
push
xlat
xchg
lret
push
jns
aad
xor
xchg
rcr
xchg
lock
std
or
fidivrl
and
mov
sbb
pop
sub
jb
jno
xor
pop
hlt
push
jle
or
add
pop
loop
or
push
xlat
das
push
cmp
shll
lcall
data16
jg
cmpsl
push
outsb
lcall
dec
xchg
pop
rcrb
mov
fisttpll
imul
mov
and
loop
roll
or
cwtl
lret
sbbl
adc
mov
sbbb
mov
and
and
push
int3
rcl
pop
lods
fcmovnbe
cmp
mov
stc
jae
mov
scas
fisttps
int
jmp
push
push
data16
mov
lock
cltd
rclb
mov
into
pop
enter
mov
fcomps
pop
push
ret
sbb
std
cltd
xchg
insb
insl
mov
sbb
dec
add
test
and
aad
loop
out
cwtl
mov
xchg
mov
inc
push
inc
insl
pop
lahf
lahf
xchg
push
test
ficoms
push
pop
lahf
lea
inc
nop
push
insb
xchg
mov
in
outsb
imulb
adc
fimuls
outsl
xchg
adc
je
jne
lret
loopne
idiv
dec
testb
sub
lods
and
test
mov
jb
into
push
mov
fnstenv
aam
mov
mov
inc
lret
sbb
adcb
dec
out
imul
cmp
scas
xlat
test
xchg
in
scas
insl
xlat
rol
or
push
int3
mov
loop
mov
xchg
jmp
inc
push
mov
push
and
int
push
jg
push
pop
add
add
out
arpl
inc
in
push
sti
pop
cmp
pop
cmp
imul
dec
orl
adc
loop
in
xchg
hlt
int
neg
jne
addr16
pop
loopne
xchg
out
and
loopne
jmp
mov
sbb
sub
testb
cmp
dec
and
jl
fnsave
jmp
call
fimuls
pop
ss
jmp
mov
cmp
das
ljmp
int3
fistl
cmpsl
dec
mov
dec
dec
inc
shrl
and
mov
scas
outsl
mov
jno
js
nop
rorb
dec
aad
dec
mov
fsub
push
and
push
dec
sbb
out
pop
loop
aaa
mov
mov
and
rorb
push
ret
dec
fisubs
mov
pushf
jne
lret
or
cwtl
or
int3
ss
notb
mov
xlat
xchg
shl
ljmp
pop
cmpsl
mov
or
loopne
roll
shl
ret
jg
adc
lods
pop
fldl
mov
rcl
fistpl
adc
movsl
lret
stos
cwtl
push
or
add
rep
iret
push
insl
pop
js
mov
es
cmpsb
faddp
in
leave
cwtl
roll
lea
adc
xor
push
into
outsb
xor
aaa
mov
outsb
hlt
mov
dec
ds
jmp
pop
or
rcr
aad
sbb
mov
cs
pop
pop
imul
mov
pop
pop
dec
lds
cmp
cmp
mov
lret
dec
fmull
mov
insb
int
sub
adc
mov
jne
nop
idivl
ret
add
js
mov
push
cs
repz
pop
out
rcrb
dec
out
mov
pop
int3
fcomi
lods
outsb
push
ficompl
or
pop
popa
das
jne
outsl
rclb
nop
scas
mov
jbe
xchg
and
pop
mov
adc
jg
rorb
xor
mov
rorb
into
pusha
roll
mov
mov
add
adc
pop
aam
lods
jo
pop
mov
xor
negb
out
inc
mov
dec
fsubrs
pop
mov
mov
mov
out
rcll
popa
daa
sub
ljmp
pop
je
jbe
fisttpl
xchg
rol
shlb
sahf
mov
in
mov
or
mov
gs
mov
int3
in
sti
sahf
call
xor
leave
push
repnz
mov
cltd
xor
inc
sub
sbb
inc
scas
sbb
jo
xchg
fsubrs
cli
pusha
imul
ljmp
hlt
scas
or
or
sub
mov
push
adc
dec
scas
sti
into
not
adc
and
mov
push
mov
cmpb
mov
or
sub
pop
out
sti
fs
add
xchg
cmp
or
fnstcw
enter
ljmp
in
rol
ljmp
cmc
and
sbb
xchg
pop
int
test
cmp
leave
xor
int3
stc
iret
push
fucomip
xchg
pop
test
or
aas
dec
loope
out
in
repnz
or
dec
imul
fmull
out
pop
or
negb
popa
sbb
es
scas
or
fistpl
repnz
mov
sbb
jne
popw
inc
add
sub
pop
out
and
mov
or
lahf
std
fdivs
ror
sbb
jl
fidivrs
imul
xchg
dec
daa
movsl
fsubs
dec
xchg
sub
insb
repz
lods
dec
mov
push
mov
mov
das
dec
xchg
mov
ficomps
gs
adc
lods
adc
xchg
rolb
add
shl
jns
push
mov
loopne
lahf
push
inc
xor
push
sbb
mov
xchg
test
sbb
in
out
mov
into
push
fsts
lret
pusha
cli
pop
adc
xchg
decb
mov
insb
jne
adc
in
fmuls
std
push
jg
sbb
mov
sub
push
aaa
dec
shld
out
xlat
mov
int
jle
dec
into
sub
stos
inc
or
lods
frstor
xchg
jns
mov
jmp
pusha
cmp
aad
jl
add
test
enter
mov
shrb
andl
lea
dec
aaa
lret
insl
jns
ror
bound
lock
push
xchg
sbb
xor
cs
ja
add
sub
push
jl
mov
pop
sbb
xor
or
sahf
sub
mov
cmp
mov
inc
inc
xchg
jb
out
adc
push
ljmp
mov
jno
inc
jle
and
lret
jne
xchg
push
popa
ljmp
or
cli
push
pop
ljmp
inc
test
dec
or
push
or
push
jecxz
clc
pop
dec
sbbb
mov
jp
xchg
sbb
jno
into
pop
mov
int3
sbb
cld
cmp
pop
jo
div
dec
xchg
or
std
rcr
dec
shlb
jl
mov
dec
mov
sub
testb
xor
lret
idivl
movsb
adc
in
pushf
cltd
lock
shrl
ret
mov
push
mov
mov
out
int
fisubl
aaa
lock
testl
scas
jne
dec
adc
jmp
xchg
int3
push
cli
int3
shlb
data16
clc
aad
jl
cli
test
andb
mov
fimull
aad
push
xor
sti
dec
or
dec
int3
xchg
dec
ja
sbb
cmpsl
ljmp
sub
jle
pop
icebp
fisubrl
jmp
bnd
pushf
int3
outsl
pop
in
pop
push
xor
adc
dec
and
mov
mov
lcall
movaps
pushf
cltd
sub
push
testb
adc
ljmp
bound
pop
sti
rcll
lcall
das
fisttpll
loope
pop
mov
stos
cmp
pop
inc
loopne
cvtpi2ps
popa
jge
or
movsl
xchg
pop
pop
and
xchg
push
lods
mov
or
push
mov
cmc
adc
sub
ret
jb
in
pop
push
gs
in
pop
or
pop
cmpsw
into
add
mov
and
mov
lcall
leave
ficoml
adc
call
arpl
xchg
mov
adc
jbe
ja
mov
sbb
mov
es
cli
adcl
adc
test
push
sbb
or
cmp
sarl
xchg
push
sbb
ljmp
jo
in
sbb
outsb
iret
mov
mov
nopl
dec
push
mov
pop
or
jnp
push
inc
or
in
shll
and
data16
fstpt
adc
adc
mov
repz
dec
xchg
fistpl
das
repnz
mov
xchg
mov
mov
cld
and
popa
call
dec
and
test
lods
ljmp
adc
sbb
jb
in
and
cmp
loop
adc
sti
cmp
cmc
call
xchg
div
dec
fistps
push
xchg
js
inc
lcall
fadds
mov
test
pop
sub
out
mov
in
fbstp
popf
or
jp
pushf
dec
and
out
shlb
jl
cmp
icebp
push
imul
or
push
mov
add
rcrl
add
xor
mov
adc
pop
popf
xor
cmp
repz
ss
test
in
into
xor
sti
push
loope
in
rolb
dec
icebp
arpl
pop
jo
cli
add
xor
adc
pop
xchg
sub
movsb
shlb
js
hlt
sbb
push
pop
frstor
fsubl
jmp
out
sub
jnp
repnz
cltd
cld
adc
adc
outsl
or
ret
xchg
inc
dec
jb
jle
pop
push
push
adc
notb
cs
xchg
ds
sub
int
add
scas
xchg
mov
test
rclb
ss
xlat
daa
lret
fmull
and
out
fs
lds
mov
in
je
xor
icebp
insb
pop
cmpsl
sbb
or
lods
test
xor
test
pusha
push
scas
arpl
xchg
sub
loopne
movsb
bsr
lret
idivb
jp
jle
ja
pop
cld
and
mov
xor
cmp
call
xor
push
sbb
int3
pop
sbb
push
fisttpl
and
scas
mov
bound
xchg
or
stc
or
mov
rcl
dec
xchg
pop
popf
cmp
fidivl
sbb
pop
imul
int
bound
shll
das
jns
shrb
andb
cli
lock
lods
inc
lret
nop
fcoms
jmp
dec
test
mov
cmp
push
pop
fs
repnz
add
jno
xor
mov
push
outsl
jmp
dec
or
pop
push
and
jge
clc
or
movsl
loop
inc
jp
add
in
les
cmc
in
push
dec
push
pop
rcl
scas
push
xchg
mov
push
pop
sbb
aam
int3
cmp
inc
lea
push
sbb
cltd
pushf
cmc
add
sbb
fisttps
cmp
mov
xchg
cltd
aas
shl
scas
xlat
pop
push
adc
fists
mov
es
cltd
mov
xor
push
in
sahf
jecxz
negb
and
push
cli
dec
push
sbb
test
jl
fimull
jo
stos
push
dec
into
pop
and
jnp
pop
add
bound
mov
adcb
scas
push
push
mov
jmp
xchg
fiadds
mov
int3
add
push
inc
jge
adc
fisubl
sub
std
lds
mov
push
cwtl
pushf
push
icebp
fmuls
addr16
and
repz
cwtl
mov
or
movsl
int3
js
sbb
cmpsl
pop
and
push
sarb
or
aad
test
popa
sbb
inc
fildl
sbb
add
push
mov
nop
das
mov
jp
push
fdiv
into
or
xchg
pop
pop
cli
addr16
jne
dec
xor
aaa
mov
ss
pusha
ja
int
pop
inc
das
data16
ss
mov
lock
xor
lea
and
call
incb
jecxz
into
cli
call
or
cmp
int3
scas
mov
dec
leave
les
sub
data16
scas
insb
xchg
int
jmp
lods
in
mov
add
int
out
or
jo
pushf
sub
insl
aad
dec
rcll
mov
or
push
fnstcw
cltd
shl
and
pop
xor
inc
rcrl
or
aam
xor
ljmp
sub
gs
ljmp
cmp
mov
jbe
out
add
out
test
cld
inc
imul
dec
daa
pushf
or
fisttpl
mov
dec
jp
repnz
adc
xchg
aas
pop
dec
cmc
xchg
pop
dec
loop
subb
call
aaa
cltd
pop
jne
repz
int3
jecxz
cmp
jns
jp
enter
sbb
add
movb
xor
xchg
inc
lds
insb
jmp
cmp
ljmp
fs
xchg
dec
sub
clc
xor
jle
iretw
mov
xlat
push
ror
push
out
xor
aas
cwtl
sbb
sub
aad
mov
xchg
push
sbb
sub
jmp
loopne
pop
dec
sti
loope
int3
pop
stc
sti
rcrb
mov
xor
jp
mov
stos
and
rcl
push
lds
push
push
mov
inc
inc
repz
adc
push
push
push
jmp
jo
xor
ljmp
push
bound
mov
lods
outsl
pop
and
sub
aaa
sar
lahf
add
jne
icebp
jmp
dec
subb
mov
movb
pop
mov
add
int3
xchg
cmp
lret
add
lea
pop
roll
xchg
cwtl
cmp
push
adc
or
enter
jge
mov
rclb
inc
fidivs
iret
ret
push
dec
jmp
in
sbb
aaa
add
scas
repz
sub
cmp
popl
lods
or
add
int3
push
scas
push
fdiv
dec
cmp
dec
or
lahf
lret
mov
data16
cmovnp
outsl
faddl
adc
mov
lds
repnz
shll
iret
mov
icebp
inc
or
popa
in
cmp
lods
xorl
stos
mov
movsl
cmpsl
push
mov
mov
cmp
scas
aad
divb
or
sbb
or
lret
mov
push
cmp
dec
lods
into
out
or
fwait
cmp
rclb
in
push
popf
inc
cwtl
lret
add
pop
push
cltd
mov
iret
inc
inc
mov
push
fsub
inc
stos
and
push
test
into
hlt
ret
mov
and
in
stos
inc
icebp
xchg
inc
ss
add
push
shl
sahf
cmp
aad
ljmp
out
add
sub
das
or
push
lret
push
les
outsl
addb
lret
add
loopne
cmp
mov
inc
jbe
in
mov
iret
cmpsl
inc
add
push
out
xlat
mov
test
push
sarl
stos
cld
dec
cmp
arpl
addl
xchg
jnp
popf
outsl
pop
or
push
fnstcw
das
adc
jecxz
dec
in
scas
aas
cmc
cmp
fists
ljmp
push
stc
divl
sub
repz
lods
sbb
call
fmulp
aad
pop
cmpsl
call
frstor
loop
repz
push
pop
jne
xchg
cs
adc
sbb
or
ret
test
repz
aas
mov
push
dec
xor
cmp
push
jno
adc
push
or
dec
or
cmp
sbb
mov
jge
out
push
jne
test
jge
ficompl
cs
lock
lea
jl
mov
out
mov
pop
and
jb
push
pop
push
jmp
pop
jnp
idivb
fldcw
ljmp
mov
aad
push
jge
movb
dec
pop
sub
enter
adc
xchg
mov
pop
sti
idiv
sbbl
addr16
or
repz
fbld
or
pop
jp
clc
pop
inc
cli
jne
outsb
xor
sbb
aam
push
lret
mov
jne
insb
ret
dec
fdivrs
lds
stos
int
add
sti
cmp
jno
inc
sbb
jns
xor
shlb
fbstp
int3
dec
cmp
sahf
mov
push
jnp
cs
out
outsl
adc
stc
fldl2e
push
cmc
shrl
add
and
jle
repnz
jb
gs
divb
xor
shrl
push
mov
or
leave
bound
das
mov
bound
push
stos
jae
imul
push
int3
push
aam
test
repz
sub
or
leave
dec
xchg
rclb
aas
popa
jle
rclb
lock
shlb
test
mov
outsb
ror
mov
lods
cmc
lea
out
lret
gs
aad
jg
xorb
mov
enter
jle
and
dec
jno
cld
push
xor
cmp
scas
int
bound
dec
push
in
push
dec
pop
jg
notb
shlb
in
inc
and
out
mov
pop
pop
mov
push
shr
add
popa
int
fcmovnbe
push
push
jecxz
fdiv
subb
and
or
jne
inc
jecxz
arpl
or
cli
jecxz
jne
int
rcl
enter
pop
repz
push
es
bound
or
adc
xchg
lret
sub
push
outsb
scas
or
mov
ljmp
pop
addr16
xchg
and
icebp
dec
sub
div
adc
lods
lods
cltd
in
psubq
sub
dec
cld
dec
sub
pop
lods
shll
mov
mov
dec
mov
aam
cli
leave
int
add
cmpb
or
or
xor
cmpsl
dec
pushf
data16
pop
call
insb
push
int3
outsl
shrb
mov
sbb
dec
fnstsw
or
pop
jno
fcoml
mov
shlb
push
mov
fildl
pop
inc
test
outsb
push
sbb
jne
jecxz
repz
rorl
dec
sbb
idiv
mov
pop
push
sbb
dec
mov
rcrl
fildll
iret
subb
popa
mov
dec
mov
out
jecxz
sbb
jnp
stos
mov
inc
cmpsl
mov
dec
movsb
stos
lret
sarl
dec
cmp
push
lret
or
bound
cli
pop
jno
sti
mov
pop
jge
push
loop
imul
xchg
cltd
lods
push
in
popf
sbb
int3
dec
pop
imul
rcr
push
je
sbb
inc
jmp
sbb
cli
pushf
fisubrl
push
jmp
loop
sbb
das
mov
int3
lock
sbb
push
pop
jne
pop
pop
sbb
or
movsl
sbb
flds
imul
fdiv
shll
faddl
lcall
mov
xchg
push
adc
pop
adcb
mov
stc
xor
addr16
cmp
cmp
inc
jnp
bound
dec
add
out
xchg
pop
xchg
pop
adc
pop
mov
pop
cmp
jmp
sbb
push
pushf
aas
testl
nop
hlt
or
push
xor
int
mov
sub
lahf
cmpb
adc
lcall
cmpl
popf
inc
pop
push
clc
fldenv
mov
ljmp
repnz
mov
sbb
or
push
aad
stos
jmp
fwait
lods
push
pop
mov
adc
cmp
fcompl
imul
les
push
incb
mov
jp
jmp
xor
scas
es
adc
mov
into
push
popf
lds
ret
sub
add
sub
mov
dec
les
pop
push
inc
fcmovu
outsb
inc
push
mov
adc
iret
aaa
pushf
xchg
cmp
jmp
stos
add
icebp
and
inc
fisubs
test
mov
pop
icebp
fcoml
insl
inc
and
cmc
pop
insb
int3
test
mov
pop
push
in
jmp
lret
pop
shll
scas
orb
nop
psubw
or
lret
out
sub
mov
add
push
test
pop
push
dec
xchg
adc
mov
lods
mov
and
lods
clc
push
push
jae
addr16
shll
push
bound
in
std
jl
fucompp
push
lahf
pop
and
cli
xor
sub
pop
pop
push
iret
insl
daa
xor
pop
mov
mov
push
mov
lock
shlb
jae
pop
sub
in
mov
icebp
sub
dec
repz
add
ficomps
not
pop
dec
daa
fbld
xchg
cmpsl
mov
xor
lods
lahf
cmp
mov
jbe
fdivr
imul
add
jae
dec
inc
sbbb
xchg
lldt
call
test
jmp
pop
jp
aad
int3
lea
pop
out
sub
rorl
cli
roll
fsubr
xlat
loope
gs
pop
push
test
push
mov
jmp
cmc
js
pop
insb
fs
repz
and
test
inc
cwtl
lock
lds
push
in
aad
scas
pop
mov
push
nopl
push
pusha
out
jp
test
cli
inc
fimuls
mov
cmp
add
push
xor
pop
xchg
fistpll
xorl
push
push
mov
mov
push
insl
jmp
pop
ret
sahf
shr
ljmp
jae
push
cmp
out
addr16
jns
push
das
dec
cmp
xor
shlb
scas
mov
sub
lock
push
ficoml
mov
hlt
popa
jno
mov
mov
stc
push
sbb
lea
jbe
sbb
nop
insb
es
test
jns
jae
mov
jmp
xchg
addb
cmp
rorl
gs
lret
in
add
fsubs
jl
xlat
jnp
repz
and
rorl
addr16
aaa
or
cmp
out
fimull
ja
sarl
jle
jecxz
bound
and
sahf
flds
test
arpl
lret
fwait
or
push
out
stc
push
sub
xor
push
repz
bound
mov
jcxz
pop
jp
pop
mov
pop
enter
adcl
add
xchg
push
mov
adc
mov
les
iret
sub
test
dec
dec
jmp
sahf
out
mov
push
out
add
lods
xchg
jp,pt
inc
pop
push
or
addr16
leave
loop
daa
lcall
std
cmp
mov
push
jle
mov
xchg
add
xchg
jmp
lahf
lret
dec
shrb
mov
outsl
mov
fwait
or
push
push
into
imul
push
icebp
adc
scas
and
xor
xor
clc
adc
sahf
movsl
dec
fwait
and
inc
push
shlb
dec
lods
daa
pop
fs
mov
mov
and
xor
outsb
jecxz
dec
xchg
ficoml
pop
orb
push
lock
jecxz
inc
push
lret
leave
sbb
push
cmp
push
mov
out
xchg
jbe
push
add
mov
scas
or
mov
pop
cli
repz
ud0
dec
jae
add
orl
jns
rorb
shr
cli
fstl
addr16
daa
test
dec
push
sub
jmp
xlat
xchg
push
test
mov
and
sbb
sbb
loop
psrlq
pop
pop
into
das
std
lods
pop
sbb
ret
in
gs
mov
dec
xchg
mov
lret
mov
outsb
shl
je
jg
push
aaa
and
and
ficompl
add
mov
mov
roll
cmp
sub
gs
lret
mov
pop
adc
sub
fwait
mov
popf
or
mov
testb
or
sub
xchg
data16
sbb
mov
subl
xchg
or
mul
mov
xchg
test
jl
iret
ljmp
je
inc
ss
push
push
std
in
adc
gs
lods
push
mov
dec
cmpsb
dec
out
dec
out
fs
sub
clc
imul
lret
push
sar
push
or
xchg
repnz
push
push
scas
push
pop
shl
sub
lock
cwtl
shll
or
or
fwait
mov
cmp
test
cwtl
hlt
cmp
cli
aas
push
popa
scas
mov
pop
insb
mov
xor
inc
in
mov
sbb
lods
adc
pop
pop
je
scas
cltd
sbb
sub
push
jbe
mov
xchg
lahf
jae
dec
les
iret
push
outsb
gs
sbb
lret
repnz
sbb
sub
push
inc
push
jae
pop
repnz
popa
mov
lret
pop
push
and
frstor
push
ret
sub
pushl
stc
lar
pop
ljmp
push
cmc
jbe
fs
cli
in
xchg
aas
ljmpw
test
add
andb
xor
mov
inc
dec
lods
push
push
dec
imull
mov
ret
roll
pop
sahf
inc
sbb
dec
jne
mov
mov
cmp
imul
fs
popl
insl
fwait
mov
mov
mov
out
fldenvs
pop
aad
push
clc
pop
movsb
ja
push
mov
xchg
lds
xchg
bound
repz
pop
scas
jge
jnp
mov
xchg
inc
fsubs
repnz
mov
sbb
jmp
push
inc
rorb
rcrl
xchg
popa
jae
repnz
add
sbb
cli
out
cwtl
inc
jl
add
pop
fcomps
sti
jl
div
push
add
fimull
add
adc
add
and
inc
insb
cmpl
jg
push
pop
jae
inc
xor
lret
mov
fisubl
jns
xor
out
out
mov
dec
movsb
cmp
sti
pop
outsl
fdivrp
pop
ds
xchg
mov
xchg
sahf
int
lret
sub
outsl
jmp
mov
push
ljmp
mov
mov
out
daa
mov
pop
mov
fisttpl
cmpsl
mov
in
aad
push
and
lds
ret
repz
or
jmp
fdiv
out
pop
sbbb
repnz
cltd
and
rcrb
in
mov
mov
mov
xor
xchg
mov
enter
dec
repz
xchg
rolb
lods
sub
adc
shll
int
inc
add
in
dec
in
or
inc
push
outsb
add
jle
pop
jo
das
test
lea
sti
or
xchg
in
outsl
aas
adc
out
out
xor
ja
sbb
jbe
push
clc
push
mov
or
cmc
mov
sbb
pop
xchg
out
lret
lcall
sbb
inc
jp
or
pop
out
sub
loope
hlt
mov
repz
int3
inc
nop
je
jg
mov
into
sbb
ret
mov
cltd
pushf
mov
inc
push
sbb
fists
fwait
xchg
nop
lahf
jae
faddl
push
leave
rorb
out
sub
in
jl
fnstsw
shrb
clc
ljmp
pop
mov
fsubrl
or
mov
push
scas
test
adc
xchg
out
sub
push
roll
jnp
sbb
movsb
aad
sarl
addr16
test
into
inc
pop
or
jae
sbb
mov
cltd
jns
loop
cmp
push
and
cli
sbb
xchg
enter
inc
in
into
or
push
adc
out
aam
lea
repnz
sub
pusha
adc
dec
in
cmp
jg
repnz
gs
sti
movsl
movsb
xchg
lds
push
push
sbb
dec
mov
mov
jle
dec
sub
in
pop
or
outsb
xchg
ret
add
sub
stc
jle
shlb
mov
lahf
xcrypt-cbc
cmpsl
push
cmp
jle
cwtl
xor
push
loopne
fimuls
scas
shl
aam
or
loope
push
xchg
jg
into
or
add
jnp
and
lret
test
ja
lea
cmp
pop
xchg
rclb
fwait
jp
pusha
or
cmp
adc
dec
pop
push
sub
test
add
xchg
mov
cmc
pop
sub
out
std
bound
fdivrs
ja
ficomps
push
out
sub
xor
dec
jmp
mov
pop
out
sti
lret
iret
shll
ret
loopne
lea
into
sbb
sbb
or
int3
pop
add
dec
sbb
or
or
loopne
movsl
push
mov
into
add
xor
mov
push
and
adc
mov
pop
pop
or
ficomps
cmpsl
xor
mov
lods
hlt
gs
adc
daa
fwait
pop
jp
push
mov
cmp
xor
sbb
mov
ljmp
into
out
push
and
jge
dec
push
pop
or
jge
fldcw
adc
ret
outsb
push
or
adc
pusha
jmp
mov
pop
fisubrs
bound
xchg
js
scas
sbb
cmp
add
push
xorb
inc
cmc
xor
test
pop
out
inc
push
pop
sbb
mov
push
out
subb
sbb
lcall
out
sub
lret
xchg
fistl
sbb
xor
add
test
xchg
lret
or
rolb
cltd
push
scas
sub
and
sub
push
jp
mov
inc
negb
imul
into
test
enter
fiaddl
std
les
test
lahf
mov
imul
fmul
test
mov
fldl
mov
pop
add
in
cmp
das
fsubrp
jne
and
xorl
cltd
pop
mov
sub
pop
roll
lea
sbb
mov
int3
jmp
inc
fimull
insb
push
mov
sti
add
add
sbb
push
pop
pop
mov
test
add
sub
mov
pushf
pop
dec
push
jmp
mov
shrb
or
enter
and
int3
jne
icebp
mov
subb
dec
dec
dec
pop
sub
push
mov
adc
fucomip
mov
jns
rcl
call
loope
push
je
jl
sbb
push
add
popa
inc
dec
test
mov
push
push
sti
sbb
lcall
jmp
jecxz
cmpsb
shl
pop
divl
cld
bound
fsubs
popa
jns
and
int
in
push
cmp
lock
ror
pop
mov
cmp
dec
pop
pushf
dec
daa
push
jbe
movsl
int
and
pop
sub
out
aad
popl
aaa
sahf
lret
iret
cmp
dec
xor
ljmp
cmp
sti
sbb
lea
or
test
mov
sub
push
jne
pop
test
push
mov
pop
adc
imul
shlb
fidivs
push
add
cmp
push
fs
outsl
out
sub
push
pop
aad
outsb
or
sti
iret
xchg
sub
add
rclb
out
push
add
adc
and
cmp
mov
testl
cwtl
sub
mov
stc
or
and
xorb
shl
int3
aaa
xor
push
ss
jne
aas
sub
ljmp
inc
cmp
jl
pusha
imul
movsl
inc
mov
xor
rolb
or
or
sbb
pop
push
inc
in
negl
out
jbe
sub
push
jp
mov
adc
push
cmp
sbb
jp
sti
pop
fldt
cli
fwait
cltd
jne
cwtl
aaa
test
or
push
outsl
call
orb
xchg
das
rolb
pop
xchg
jmp
inc
test
dec
movsl
rorb
mov
lret
cmp
rcl
lahf
scas
push
inc
mov
push
aas
jecxz
cmovle
jge
jnp
shll
popf
outsl
shlb
add
inc
dec
int3
cs
or
add
mov
jmp
aam
popa
aas
inc
mov
outsl
ficompl
mov
je
jecxz
cmpsb
int
int
jmp
mov
cltd
iret
mov
outsb
mov
hlt
xor
pop
mov
mov
mov
inc
push
mov
ss
and
inc
sarl
out
insb
push
repz
call
adc
cwtl
push
aam
aas
mov
sahf
mov
dec
jg
mov
push
dec
add
lods
pop
xchg
pop
push
mov
jb
mov
cmp
mov
mov
dec
pop
mov
cmp
clc
test
push
dec
sahf
mov
in
aam
mov
mov
sbbb
and
test
addb
dec
or
int3
mov
mov
sbb
add
movsl
mov
je
scas
mov
imul
pop
jo
sbb
xchg
outsl
adc
or
or
mov
icebp
dec
or
ljmp
addr16
insl
sbb
je
fldenv
testb
mov
sbb
ljmp
fcmove
insl
or
push
arpl
jnp
jge
add
jl
arpl
in
jns
test
jle
out
sub
fimull
add
push
stos
jmp
cmp
stc
ret
xchg
bound
push
or
out
xchg
rolb
pop
adc
dec
sbb
call
inc
cld
jmp
fimuls
xchg
pop
sub
mov
sti
stos
imul
mov
xchg
pop
pushf
pop
jne
int3
rcll
gs
mov
movsb
js
push
sbb
in
cli
pusha
push
icebp
test
loope
mov
rcrl
xchg
add
sahf
dec
bound
add
popf
cmp
das
dec
push
test
add
xchg
sub
cli
hlt
lret
xor
mov
aad
shr
jns
dec
orb
in
inc
push
xor
bound
inc
dec
pusha
out
inc
lldt
mov
dec
shlb
pop
cmp
stc
sub
sbb
jbe
fsubr
push
ss
dec
sbb
loop
ficoms
int3
popf
pusha
xor
mov
adc
int
push
cmp
cli
sbb
bound
std
sub
jle
int
pop
adc
dec
jecxz
jne
lret
inc
outsb
ficoms
sbb
popf
and
lea
inc
dec
push
push
mov
adc
sbb
mov
cmpsb
pop
fisubrl
push
inc
shlb
jecxz
lods
faddl
push
mov
push
jecxz
mov
xchg
sbb
mov
or
ljmp
ljmp
inc
out
or
mov
mov
into
popf
insb
sbbb
push
mov
push
sarb
cmpsb
aam
push
sti
lahf
ja
sub
test
mov
nop
ss
ret
push
pop
push
mov
out
imul
mov
cmp
cmp
inc
cli
flds
adc
sub
mov
vunpckhps
inc
out
clc
jns
push
std
adc
push
subl
mov
jb
ret
insb
add
pop
arpl
add
es
lea
sbb
je
push
inc
sub
dec
add
ret
fsub
dec
lahf
xchg
outsl
clc
xchg
sbb
mov
ds
push
add
and
sbb
rcl
mov
mov
or
je
out
pop
inc
jo
mov
jmp
stos
dec
sbb
test
push
mov
lcall
outsl
insl
int
jae
cmc
mov
je
das
mov
push
inc
sti
int3
scas
bound
add
or
push
and
shll
xchg
cmpsl
xor
sbb
outsl
movsl
inc
dec
push
insl
push
inc
pop
sub
push
add
mov
in
cmp
shrl
mov
bound
mov
scas
xlat
adc
movsb
push
aaa
sbb
push
dec
sbb
dec
shrl
movsb
mov
jbe
push
xor
enter
outsl
mov
pusha
or
in
jge
mov
mov
je
ss
or
xchg
outsl
ljmp
inc
mov
push
inc
mov
mov
test
dec
aad
lret
push
loope
dec
push
daa
jo
and
repnz
lret
fildl
xchg
and
out
pop
adcl
push
lahf
fisttps
in
inc
mov
mov
push
loopne
negb
jne
pop
shll
stos
shrb
divb
and
lea
lcall
pop
pop
repz
imul
icebp
mov
sti
push
adc
scas
xor
xor
roll
lods
or
xchg
lcall
call
cs
ret
out
jno
mov
popa
pop
lret
in
pushfw
rorb
pop
mov
sbb
jl
mov
rclb
rclb
dec
and
dec
pop
dec
out
pop
xchg
enter
push
push
push
lock
mov
shl
int3
cltd
icebp
adc
jmp
aam
push
rcrl
pop
jbe
or
aaa
pop
push
aam
add
outsb
out
in
pushf
adcb
fistpll
jmp
mov
push
les
mov
loop
cmp
jl
xor
insl
pop
push
sbb
sbb
cmpsl
iret
lods
shrl
lds
inc
xchg
fucomi
into
fstl
int
enter
cmp
xchg
xchg
sub
adc
mov
dec
leave
rcr
inc
ja
ret
dec
push
jb
arpl
lahf
scas
mov
jmp
stos
push
and
lods
stos
lods
sar
leave
int3
mov
xlat
hlt
insl
pop
test
fadds
cli
xor
mov
xor
jle
push
les
repnz
cmpsb
into
xlat
mov
test
mov
loop
fsubr
lods
add
sbb
jecxz
mov
rcrb
aas
pop
loope
cmp
cmpsl
in
and
or
mov
out
lcall
sbb
dec
mov
bound
fstps
test
add
test
and
cmc
xchg
leave
pop
jno
sarl
mov
mov
bound
pop
inc
and
sub
leave
jbe
ss
pop
mov
add
into
aam
gs
movsl
out
sub
inc
sub
dec
rorb
das
push
jg
xor
stos
push
mov
xchg
movsl
xor
bound
rclb
adc
mov
lods
lret
aaa
lds
mov
inc
push
jp
shrb
int
inc
pop
push
adcl
fidivs
fstpl
jne
das
dec
lahf
jl
lahf
jbe
mov
ds
rorb
xchg
push
fcmovbe
jb
and
shrl
dec
pop
jne
outsl
gs
test
push
push
cmp
ror
jl
rcrb
adc
inc
mov
into
aad
ja
inc
lahf
and
cmc
cld
outsb
repz
jle
inc
push
mov
mov
cs
scas
xchg
cmpsb
iret
nop
add
add
repnz
movsl
push
fmul
mov
jmp
bound
mov
push
add
xchg
jns
rolb
xlat
hlt
pop
cmpsl
push
or
idivb
inc
mov
adc
testl
mov
rcl
rclb
dec
outsl
out
or
les
scas
cmp
rcll
push
test
loopne
out
sbb
popa
add
dec
push
lock
idivb
mov
negl
inc
mov
jp
imul
das
mov
ds
pop
dec
xchg
aaa
pop
dec
gs
mov
xchg
pusha
clc
popa
std
jbe
ja
mov
adc
mov
sbb
fiadds
inc
gs
divl
inc
lock
out
sbb
addb
call
popf
push
xor
gs
dec
inc
adc
lret
mov
dec
mov
adc
push
popf
cli
ficoml
in
hlt
es
mov
movsl
popa
das
nop
dec
jge
fdivs
mov
dec
push
gs
or
inc
dec
jbe
popf
mov
adc
inc
and
xchg
popa
lret
add
push
jbe
push
inc
mov
pusha
jecxz
pop
lods
popa
adc
adc
fidivs
push
jnp
and
rolb
lret
ss
ficoml
push
repz
pop
jl
add
push
mov
outsl
out
mov
xchg
inc
or
push
lods
cmp
push
or
push
adc
sbb
and
gs
xchg
ret
repz
loop
fiadds
xlat
pop
sbb
push
jg
repnz
out
dec
inc
or
mov
fildl
fs
fucompp
push
xchg
push
aad
fisubrl
scas
adc
insb
ja
daa
pop
mov
cmp
push
cmp
shll
je
add
adc
inc
into
sub
xchg
loopne
mov
psubb
les
imul
mov
mov
xchg
pop
sbb
in
std
vmread
pop
jmp
xor
mov
addb
mov
out
pop
cwtl
mov
clc
pop
in
dec
outsl
push
mov
xchg
mov
jp
mov
notb
xor
push
mov
lods
pushf
pop
dec
aad
fcoms
scas
xchg
sbb
sub
loop
dec
icebp
js
xor
sub
sub
jp
out
loop
mov
notl
int3
pop
xchg
test
adc
ds
in
mov
rcrl
fildll
xchg
or
cwtl
je
pushf
push
pop
push
or
lret
push
mov
push
sbb
inc
sub
int
mov
sbb
aaa
push
test
pop
lret
bnd
jecxz
bound
mov
mov
sbb
hlt
mov
test
cmpsb
enter
and
cmc
cmpsl
rclb
push
sub
outsb
mov
push
pop
into
gs
rol
scas
mov
fcoms
xor
ss
xorb
sub
mov
jo
or
mov
rcll
dec
arpl
and
pop
dec
cs
pushf
in
out
addr16
push
pop
adc
in
sbb
scas
rdtsc
sbb
repz
test
scas
fdivrl
xchg
insb
stc
and
vmovhlps
or
pop
inc
mov
jecxz
jmp
fidivl
shll
shrb
das
pop
repz
pop
jmp
mov
xor
push
mov
aad
scas
xlat
bound
mov
je
into
mov
aas
scas
ljmp
mov
shlb
or
cmpsl
push
cwtl
sti
orb
jecxz
rclb
sti
repnz
sbb
test
push
ljmp
jle
cmp
sbb
ljmp
push
cld
pushf
xchg
ret
rcr
push
stos
xchg
xlat
jp
pop
or
repz
jne
sbb
shl
js
adc
shll
inc
xlat
outsl
mov
add
cmp
movsl
sub
mov
dec
test
cmp
push
lock
jae
ljmp
aas
sbb
outsb
jne
repnz
and
adc
repz
jecxz
push
dec
aas
dec
in
arpl
or
mov
adc
and
sbb
das
call
fisubl
addr16
repz
push
pop
mov
cmp
sbb
fidivrs
fsubrp
bound
xchg
mov
mov
notb
in
aaa
aam
addr16
jmp
cmp
inc
mov
loop
fistpl
lcall
mov
jne
rcrl
pushf
out
push
ljmp
xor
mov
cmp
adc
push
dec
insb
cmp
fisttpl
mov
lret
xor
push
js
adc
or
or
insl
std
loopne
pop
dec
push
out
xchg
sub
mov
in
xchg
push
xchg
mov
xchg
daa
mov
inc
pop
pop
push
push
push
out
lret
mov
mov
stos
mov
mov
shlb
outsb
mov
dec
xor
rcrl
popf
push
test
lods
push
les
shl
pop
sbb
lret
scas
fisubrs
jmp
in
lret
es
jnp
daa
jg
pop
lret
jecxz
xchg
fildll
into
fidivrl
xchg
pop
stc
aam
xor
dec
mov
add
mov
mov
ljmp
popa
nop
and
cltd
jecxz
mov
enter
xchg
mov
xchg
pop
add
icebp
ds
inc
mov
iret
aas
ret
int3
adc
mov
and
fnstcw
repnz
nop
push
lret
dec
push
or
cmp
push
lret
dec
jo
scas
inc
test
pop
jae
push
lret
xchg
xchg
ss
mov
mov
insb
ret
xor
lret
mov
pop
cmp
mov
mov
shrl
imul
aam
ss
mov
dec
stc
leave
lret
xchg
push
push
sti
aaa
lods
insl
lret
je
pop
jne
add
cli
jmp
jl
test
xor
fnstenv
mov
mov
jge
inc
mov
stos
jecxz
sbb
lret
xchg
xlat
or
mov
loope
adc
push
push
mov
push
xchg
fisubl
loopne
pop
sbb
mov
fsubrs
or
int3
imul
add
or
scas
nop
xchg
clc
adc
cli
loopne
add
sbbl
in
mov
lock
mov
ja
fcoms
jmp
or
scas
loope
push
test
into
push
movd
subb
mov
lcall
push
fsubrl
jnp
lret
and
lock
pop
lret
pop
adc
pop
push
leave
adc
dec
lret
jmp
xor
fwait
lret
bound
lret
xor
lret
clc
stos
and
dec
lahf
lret
or
mov
cld
xchg
cli
jl
inc
cltd
jp
sarl
push
fisubrl
lret
xor
ja
mov
lods
or
lret
shll
fldl
dec
lret
dec
push
call
fiadds
dec
lret
mov
mov
loopne
pop
mov
bound
and
stos
cmc
sahf
ret
insl
stos
shlb
imul
xchg
inc
les
cmp
je
jno
add
or
icebp
lret
xchg
mov
lret
and
fidivrl
aas
add
out
mov
xor
push
mov
pop
movsb
xchg
mov
fwait
daa
sahf
dec
into
pop
sti
ljmp
mov
aam
jae
add
mov
and
dec
cmp
pop
insl
push
adc
lds
xor
lret
and
arpl
repnz
push
sbb
lds
mov
jge
adc
push
mov
or
cli
fcomi
ss
and
bound
sarl
arpl
fcmovnbe
popf
sub
dec
adc
xchg
jnp
addr16
cltd
std
or
xor
fcmovb
and
daa
push
adc
fisubl
mov
fstps
lret
insb
xor
lret
lea
jp
xchg
dec
sbb
mov
lret
cmpsl
loop
or
lret
jmp
lock
push
out
fisubrs
push
lret
ret
jmp
cmp
inc
pusha
call
aad
insl
sbb
lods
inc
imul
icebp
daa
pop
leave
gs
loope
ficoml
sti
mov
into
hlt
mov
enter
dec
add
lret
sub
shlb
icebp
xchg
push
fwait
push
or
or
loop
xchg
cmp
inc
mov
xchg
lret
fs
movsl
cmp
mov
inc
test
es
scas
cmpsb
cmp
rcl
mov
lret
fadds
xchg
cmp
add
ror
les
dec
push
pop
jae
lret
cmp
aam
push
cmp
sub
dec
and
into
rcl
sbb
sbb
mov
out
mov
sti
lock
or
push
enter
jg
mov
xchg
int
and
cld
jb
gs
int3
or
lret
out
ja
mov
mov
fsubrs
popa
mov
adc
addb
jno
jle
sub
les
dec
outsb
xor
sbb
lret
stc
inc
push
andb
in
jg
and
or
lret
sar
push
subb
bound
loop
mov
mov
lret
imul
sbb
adc
popf
or
fiaddl
and
sub
outsl
inc
arpl
add
or
fstps
jbe
subb
push
jle
insb
mov
in
mov
lea
xor
pusha
adc
fwait
push
and
inc
test
cmp
movsb
stc
lret
repnz
ret
sub
mov
pop
jmp
cmp
jmp
pop
or
sbb
popa
mov
shr
lock
or
lods
inc
icebp
xor
cmp
lret
movups
clc
mov
flds
adc
pop
sbb
and
add
or
or
mov
sarb
negl
lret
ds
leave
xchg
lret
or
in
dec
ret
lret
mov
inc
cld
lret
and
imul
fs
mov
cwtl
repnz
push
call
in
mov
loopne
test
sub
push
cmp
lret
dec
adc
push
push
lret
pushf
sbb
dec
lahf
mov
push
lret
adc
ret
xchg
insl
aaa
sub
ds
mov
mov
pop
in
adc
stos
cmp
iret
mov
sarw
lret
push
sbb
lret
psllq
pop
cmp
sbb
sbb
lret
inc
sub
xchg
lret
lret
mov
and
cmpsb
lret
stos
rorb
cmp
inc
je
in
or
sub
push
jp
pop
lahf
insl
scas
ror
mov
into
andl
loopne
mov
pop
jns
lret
test
ret
xchg
cmp
fdivrs
or
dec
jae
jne
lret
ficoml
pop
aaa
rcrl
add
sbb
fsubrs
pop
inc
lret
popa
mov
dec
dec
adc
dec
lret
adc
lret
add
cmp
cmp
inc
lret
jle
add
stos
push
xchg
adc
lea
repz
lret
iret
in
or
test
cltd
cmp
daa
mov
fisubrl
pop
psubusw
xchg
nop
mov
sti
xor
push
pop
mov
inc
mov
cmp
add
xchg
jge
inc
xlat
lret
mov
dec
lret
in
idivb
mov
cld
inc
xchg
lret
dec
cmp
dec
mov
insl
lret
jns
pusha
imul
xchg
pop
lods
orl
jns
pusha
inc
mov
xchg
dec
mov
push
lret
in
push
and
xchg
pop
movsb
mov
jg
lret
ret
popl
imul
sub
cmp
lret
inc
jae
sbb
lret
add
mov
sarb
cld
xchg
ds
mov
cli
call
cmp
inc
add
mov
push
mov
sti
cli
or
repnz
inc
jae
or
xchg
hlt
mov
js
stos
outsb
in
ret
cmp
loope
das
cli
xchg
xorb
imull
push
je
lret
aam
lock
mov
inc
mov
inc
pushf
cmc
lea
dec
cmpsl
repz
ljmp
aaa
pop
stos
ret
lret
imul
test
push
sbb
jle
sbb
mov
gs
ss
mov
sub
xchg
xchg
mov
lret
mov
or
ret
adc
orb
xchg
cmp
lret
or
rcll
in
sub
cmp
lock
dec
lret
testl
scas
xor
insl
adc
push
loop
or
mov
push
int3
cld
xor
sub
addr16
out
xor
xchg
xlat
into
xchg
dec
cmp
sbb
xchg
popa
cmpsl
push
lods
pop
clc
jmp
in
shrb
roll
and
and
aas
push
push
cmp
mov
xchg
xchg
add
xchg
mov
fcmovnbe
or
pop
jb
inc
fisubrl
mov
cltd
lods
jb
jecxz
xchg
lret
loopne
cltd
and
mov
adc
scas
adc
test
sub
mov
sub
dec
mov
or
stos
sub
cmp
int3
adc
aas
cwtl
pop
xchg
xchg
jg
pop
mov
xchg
cwtl
adc
xor
arpl
stos
push
sub
mov
xchg
pop
cmp
mov
rorb
loop
push
inc
fisubrl
adc
xchg
loop
mov
and
lds
mov
mov
aas
xchg
fimull
test
fidivl
fmul
sbb
pushf
out
stos
les
push
mov
push
mov
cs
jnp
sbb
in
lods
fcom
pop
mov
dec
int3
shlb
push
lea
add
pop
pop
push
popl
mov
inc
jbe
sub
shlb
push
mov
dec
daa
inc
dec
mov
dec
bound
or
push
iret
leave
iret
pop
pop
les
mov
repnz
sub
ret
dec
push
pop
add
push
sub
daa
or
rorl
push
cmp
dec
xor
pop
fstpl
jg
ret
pusha
mov
or
out
lea
push
pop
pop
pop
cmpsl
and
jg
faddp
mov
add
push
out
sarb
jb
ss
inc
mov
insb
pusha
jp
in
pop
dec
xchg
insb
sub
std
sti
push
incb
fdivr
jne
scas
cmpsl
push
jmp
fsubrs
les
push
push
and
xor
iret
leave
scas
fldl
ret
nop
js
push
pop
aad
cmp
add
rcrl
jns
sbb
xchg
push
loop
aaa
lods
mov
adcb
loop
add
jge
xor
or
push
jns
jo
push
ja
bound
je
mov
dec
out
into
mov
sub
out
repnz
sbb
push
and
sbb
or
add
adc
mov
scas
leave
mov
shlb
lret
iret
jle
xor
cmp
pop
mov
std
and
movsl
adc
iret
push
in
jnp
and
jle
or
and
cwtl
iret
gs
repnz
add
xor
notb
ljmp
pop
out
mov
mov
adc
mov
sbb
stc
dec
ljmp
jns
push
and
je
jnp
jmp
push
popa
add
mov
and
cld
or
mov
gs
cmp
xlat
pop
xchg
dec
scas
sar
pushf
ror
add
mov
mov
adcl
pop
mov
pushf
add
scas
xchg
fcompl
xchg
shlb
push
push
or
pop
mov
mov
in
jmp
shlb
pop
push
cmp
les
outsb
call
inc
sub
inc
dec
push
rorb
adc
push
jae
or
add
xchg
into
mov
into
iret
mov
test
sbb
cld
push
test
pop
or
mov
push
repnz
sti
pusha
jb
clc
inc
sbb
ficompl
outsb
xor
sbb
pop
and
or
lods
or
sub
sub
cmc
rcrb
idiv
adc
aam
cwtl
popa
fbld
bound
push
adc
or
or
in
pop
ja
call
push
sarb
jmp
in
xchg
push
xchg
and
and
sbb
or
test
sub
mov
movsl
pop
mov
adc
bound
bound
adc
and
xchg
movsl
repz
cltd
movsb
push
push
test
push
in
fistpll
fcomip
stc
inc
xor
jne
ficoms
call
sub
jmp
push
sbb
jge
xchg
iret
loop
push
mov
subb
xchg
mov
pop
cmp
lcall
push
in
shrb
xor
mov
mov
in
dec
aad
push
dec
mov
movsb
ja
inc
loopne
daa
mov
sub
insb
ljmp
adc
std
int
ret
lea
cmp
adc
push
inc
in
or
mov
subl
in
repnz
ss
imul
rol
push
fldcw
scas
mov
inc
imulb
mov
jmp
rorl
daa
lods
ror
push
inc
mov
jb
dec
adc
jg
jp
scas
xchg
push
add
push
jb
adc
push
xchg
or
add
lds
mov
push
in
data16
loop
add
ljmp
pop
push
mov
popf
jg
repz
push
pop
popf
out
lods
or
dec
test
xchg
xor
lahf
call
and
call
jle
mov
sbb
setns
xchg
sti
out
add
divl
lret
or
xchg
pop
mov
test
and
pop
sub
aas
popa
lds
mov
inc
enter
ror
mov
xchg
sbbl
cmp
and
ss
int
push
xor
mov
les
mov
iret
test
call
pop
sti
lds
mov
sub
sub
mov
cs
bound
aas
push
and
cmpsb
lock
movsl
jmp
mov
hlt
mov
or
push
inc
inc
xor
mov
sub
xchg
movsb
stc
cli
jg
jo
and
loop
jmp
leave
sbb
js
fmuls
mov
scas
push
cmpsl
mov
pusha
shrb
push
push
out
sub
scas
shll
pop
sbb
dec
mov
pop
mov
adc
adc
add
jmp
gs
push
daa
mov
mov
add
dec
jne
or
es
cs
les
negb
arpl
xor
inc
mov
push
jg
rcrb
sbb
ja
push
iret
data16
cmp
mov
loop
test
div
adc
dec
add
lret
insl
sub
cmp
adc
inc
fisubl
xchg
je
jl
xor
push
cmc
xchg
or
out
dec
mov
xor
adc
shrb
sahf
call
adc
ror
sarb
sub
stos
pop
aad
lods
add
jo
jne
dec
pop
jg
cld
movsb
xchg
mov
mov
loopne
mov
test
test
outsl
push
cmp
outsl
fidivrl
and
testb
or
mov
fcmovnbe
mov
sub
loopne
and
aaa
lahf
lret
test
add
lock
daa
mov
xchg
add
fnstenv
sbb
jns
pop
or
cmp
divb
push
int
pop
jmp
pop
imul
jns
push
nop
ljmp
pop
pop
cli
cmp
mov
insb
cmpsb
xchg
inc
mov
shlb
jae
and
xor
push
es
inc
nop
inc
fwait
or
aas
sbb
test
lahf
aam
pusha
sarb
ficoml
adcl
das
sbb
sub
xchg
inc
test
sub
iret
pop
pushf
lcall
cs
jno
sub
jbe
sbb
jae
mov
sbb
shlb
jo
or
dec
xor
into
test
xchg
out
ljmp
mov
popa
xchg
xchg
shll
in
sbbl
pop
imul
stos
loopne
dec
mov
ret
or
addl
pop
arpl
dec
js
push
cmp
mov
lods
mov
jge
stos
jg
repz
mov
loop
daa
mov
cmp
aad
dec
int
sbb
inc
movsb
pop
aam
movl
faddl
lcall
mov
cli
push
scas
lret
jmp
mov
rclb
push
jmp
fwait
iret
dec
push
push
xchg
cmpsl
jle
jne
sar
int3
mov
pop
fisttpl
bound
aas
popa
into
xor
mov
xor
pop
cmpsl
xor
or
jbe
fsubrs
outsl
mov
jnp
je
add
inc
ja
jne
push
pop
das
outsb
fldl
adc
aam
cmp
cmp
adc
mov
and
adc
xchg
or
addl
mov
pop
push
xchg
cli
aaa
xchg
pusha
aaa
in
cmpsb
pop
clc
inc
pop
pop
dec
inc
insl
push
aad
outsl
dec
mov
jne
dec
fwait
ds
pop
divb
adc
xor
xchg
andl
mov
and
or
xor
sbb
add
dec
push
stc
aaa
idivl
loope
adc
jg
pop
fs
and
jne
fldcw
test
cmc
mov
hlt
lahf
sti
inc
or
mov
jle
in
inc
mov
aam
cmp
and
xlat
xor
and
adc
in
push
and
xchg
shr
push
push
scas
sbb
mov
out
xchg
push
mov
leave
push
mov
rorb
into
outsl
ljmp
stc
dec
push
fiadds
loop
loopne
fstpl
ljmp
xchg
push
fs
cmpsl
jecxz
adc
es
lret
lock
stc
push
jp
cmp
add
cmp
les
or
fdivl
mov
out
mov
mov
fsub
xchg
lods
cmp
repz
js
scas
fcoml
stc
popf
xchg
scas
bound
sbb
push
sahf
inc
lret
shll
mov
int
add
shlb
mov
scas
or
adc
sub
fwait
mov
fisttpll
pop
iretw
lea
outsl
xor
jns
cmpsl
jae
inc
lods
in
js
add
sahf
mov
and
jmp
jnp
add
mov
push
and
in
jmp
int3
cwtl
imul
lods
xlat
pop
addr16
dec
fs
pop
lret
mov
in
sub
lods
sarb
out
or
das
gs
es
or
cmc
xchg
and
mov
and
push
jno
scas
pop
ja
or
out
mov
push
lret
push
stc
shlb
fnstenv
repnz
js
inc
shlb
or
jmp
sbbl
jne
fscale
add
mov
iret
sarl
push
das
mov
aam
xchg
or
pop
pop
pushl
and
inc
xchg
lods
sub
lock
outsb
ret
aam
enter
stc
rcr
push
adc
mov
fs
pop
push
sbb
jecxz
cmp
imul
dec
sarl
pusha
sbb
inc
sbb
push
mov
clc
pop
mov
mov
and
pop
int
push
inc
and
inc
mov
test
out
sbb
push
sub
inc
je
loopne
mov
pop
pop
es
mov
cltd
inc
mov
push
ror
lods
adcb
mov
cmpsl
xchg
inc
stos
dec
inc
and
dec
mov
ret
mov
or
outsb
fsubs
cmp
loop
mov
into
ret
mov
xchg
shll
or
pop
add
es
insl
ljmp
lds
push
sbb
scas
pop
into
rep
lcall
cmp
into
jmp
out
push
xor
sbb
outsb
jle
xor
inc
outsb
stos
rorb
outsb
sub
jno
jns
and
lea
pop
repnz
out
shlb
inc
out
js
lock
scas
jecxz
and
jp
pop
in
cmp
dec
push
hlt
testl
mov
mov
pop
pop
insl
pusha
xor
sbb
cld
insl
or
cmpl
jae
xchg
das
push
rorb
sbb
arpl
and
and
jns
lds
push
hlt
and
jl
popa
in
fs
mov
pop
pop
js
nop
fsubl
sbb
clc
repz
sub
leave
and
or
add
push
cli
push
pusha
fildll
rorl
aad
imul
add
inc
adc
mov
cs
and
push
arpl
push
sub
xor
cmp
dec
xor
imul
psubusw
sti
and
mov
mov
mov
sub
repz
cmp
xchg
sub
je
stos
sahf
sub
pop
add
dec
sub
and
push
call
fisttpll
lahf
rcr
int
mov
pusha
cwtl
xchg
cltd
ficoml
sbb
jno
and
pop
out
scas
sti
je
iret
cmp
test
mov
outsb
dec
sub
cmp
sub
mov
sti
fisttps
popf
mov
xchg
xchg
repnz
rcrl
pop
cmpl
adc
inc
and
ljmp
xchg
icebp
cli
xchg
jae
add
loope
pop
pop
cwtl
rorb
cmp
and
leave
adc
inc
jp
cli
sub
pop
int
roll
icebp
cmp
jle
dec
mov
add
out
inc
test
push
jbe
stos
mov
pushf
fiaddl
adc
dec
adc
aam
ljmp
sbb
push
lds
jge
outsl
stc
mov
push
ficompl
and
cwtl
jb
mov
imul
leave
fnstsw
pusha
ljmp
rorl
cmp
inc
push
in
pop
fcomps
test
add
push
sti
rorl
sub
mov
aam
mov
adc
sbbl
push
dec
call
mulps
ret
idivb
inc
adc
sahf
or
repz
dec
bound
fsub
cmpsb
stc
call
mov
dec
mov
int3
inc
xchg
dec
loopne
and
je
jg
data16
push
jp
or
movsbl
or
js
movsl
gs
into
outsl
or
mov
ja
loop
ss
mov
xor
inc
nop
push
push
ljmp
push
fists
pop
idivl
dec
push
inc
jmp
loop
xor
add
mov
mov
cs
test
and
mov
xor
stos
mov
das
lds
pop
adc
sti
sub
xchg
sbb
xchg
ret
sbb
ds
jmp
xor
pushf
xor
mov
cmp
dec
in
add
fmull
push
and
repnz
xor
adc
movsl
jmp
test
test
jns
dec
jae
and
js
pop
stos
sub
rep
fistps
mov
fcompl
outsb
add
fcomps
dec
lods
jno
lock
cmp
inc
cli
cmpb
repnz
setb
push
std
leave
jge
lcall
adc
aaa
idiv
js
fimuls
shl
pop
sbb
test
mov
filds
lods
pop
scas
out
jge
movsb
adc
push
pusha
cmpsl
inc
arpl
daa
sbb
sahf
push
mov
in
je
inc
mov
push
aad
shl
xor
or
repnz
inc
push
pop
fstl
fwait
loop
sbb
es
repnz
pusha
add
sbb
pop
loop
call
mov
jle
cmp
add
and
movsl
adc
rcll
jmp
mov
es
xor
pop
lret
imul
adc
add
xchg
jcxz
movsl
xor
cmc
cli
dec
sarb
fadds
outsb
rcr
jp
pop
or
push
jns
inc
and
ret
outsb
sti
lret
jne
cmp
dec
pop
push
mov
mov
inc
repnz
aaa
fidivrl
and
mov
and
jmp
cmp
adc
mov
jbe
mov
ss
mov
out
shrb
shll
adc
mov
cmp
into
mov
sbb
cmp
clc
inc
jbe
adc
aas
jmp
cmpsl
sub
lods
sub
sub
sbb
movsl
dec
or
or
rcrb
rcr
rol
push
mov
or
fsts
ljmp
mov
stos
cwtl
pop
inc
xchg
mov
or
and
or
and
mov
push
call
into
xchg
mov
loopne
push
inc
xor
push
pop
jno
dec
add
icebp
dec
mov
mov
cmp
andl
popa
lock
lods
cld
jp
jp
bound
mov
stc
xchg
sub
push
movsl
pop
xchg
lods
outsb
adc
or
inc
or
mov
pop
pop
pop
mov
je
imul
sub
outsb
fcmovbe
push
rcrl
jecxz
cmp
cld
and
push
aas
je
out
cmp
scas
ss
lods
das
pop
or
xchg
and
push
fistpll
mov
stos
pop
xchg
test
sub
test
adc
pop
push
mov
ljmp
ds
stc
pop
jne
jp
cmp
daa
and
nop
dec
nop
loopne
sbb
movsb
inc
jmp
lahf
imul
loop
shl
addb
scas
pop
or
pop
dec
xor
dec
pop
loop
push
repnz
push
pop
pusha
sbb
call
clc
lret
iret
mov
pop
sub
into
xor
call
dec
pop
xchg
pop
adc
mov
adc
mov
pushf
loopne
sbb
push
push
xor
pop
add
sbb
adc
inc
adc
mov
shrb
ret
mov
sahf
xlat
jge
dec
cmp
popa
sar
sub
sbb
pop
hlt
mov
sub
xchg
loop
pop
cmp
dec
out
pusha
push
les
sub
sbb
shll
scas
mov
inc
jbe
jmp
dec
or
jae
daa
sti
mov
mov
pop
jbe
rorb
mov
out
add
sbb
or
in
bound
out
sbb
mov
cs
out
fwait
stc
mov
jge
fdiv
xor
into
jbe
add
mov
sub
out
cmp
loop
aas
dec
or
xor
rorl
leave
repz
or
in
adc
push
xchg
les
push
sub
cmp
sub
and
subl
iret
dec
mov
loop
shrb
jmp
sar
sti
int
cmp
pop
fcmovbe
loop
push
mov
movsb
incl
cmp
mov
stos
pop
push
sti
pop
mov
inc
mov
pop
loop
xor
dec
pop
loop
adc
int
and
repnz
jle
out
insb
push
divb
std
jne
cwtl
jae
push
jp
pop
cmp
data16
test
adc
xor
jno
in
mov
fwait
cmp
sub
andb
jbe
lret
xchg
pusha
int
mov
cmc
push
add
push
aaa
mov
outsl
lret
daa
cmp
sbbl
cmpsb
pop
mov
xchg
xchg
cmp
rolb
xchg
lahf
mov
pop
push
cli
cmp
popf
xchg
pushf
mov
sub
xchg
mov
test
inc
push
movsb
adc
mov
lret
xchg
lahf
cmp
lret
rorl
aas
lock
psubsb
xchg
or
test
sahf
push
outsl
aaa
mov
fstps
loope
mov
xchg
rolb
sbb
fists
or
jmp
fidivl
push
fmul
sbb
inc
pop
test
cmp
lods
addr16
fnstcw
jle
inc
int
fistps
adc
pop
movsl
jbe
fcoms
and
dec
lret
xchg
lret
cmc
je
sub
lea
movsb
cmp
sbb
push
iret
inc
movsb
outsb
sub
cmp
les
fisubrl
shl
fbld
lret
lods
dec
push
dec
movsl
fwait
lret
iret
ds
pop
or
inc
mov
dec
mov
push
xor
sbb
push
and
jmp
pop
adc
and
enter
push
sbb
in
jge
lret
adc
pop
out
stos
std
xchg
cli
dec
into
sub
lret
outsb
dec
adc
popa
andl
shll
out
pop
fnstenv
pusha
lret
mov
dec
pushf
adc
out
inc
and
adc
mov
mov
add
push
pop
cmpsl
adc
mov
mov
js
scas
out
rol
fcmovb
inc
cmp
mov
lret
or
in
lret
scas
clc
bound
jle
lret
xor
add
and
je
add
stos
sub
iret
not
cmp
fmul
jl
in
mov
outsl
cli
xchg
inc
adc
and
cli
xor
lret
xchg
cltd
punpckhbw
lock
stc
pop
mov
and
and
push
xor
push
ds
sbb
xor
lea
fwait
push
mov
cs
add
cltd
lret
mov
adc
jecxz
int
popa
push
into
mov
dec
aaa
jl
fsubr
mul
lret
insb
in
push
or
jo
sub
inc
mov
in
loope
ja
daa
addr16
lret
out
xchg
mov
adc
test
push
out
mov
ret
lret
inc
add
sbb
stos
mov
loop
shlb
pop
scas
scas
incl
loop
fadds
pusha
sbb
stos
lret
cmp
mov
popa
leave
stos
lea
xchg
shll
addr16
mov
sub
pop
xor
and
push
in
iret
lret
dec
sar
mov
and
inc
out
push
xor
pop
sbb
fwait
pop
dec
mov
xchg
mov
ja
cmp
jp
into
aam
pop
jnp
lret
scas
ljmp
subb
test
or
push
mov
jg
xchg
stos
sbb
pop
into
inc
scas
js
dec
sub
je
inc
xor
test
mov
jmp
push
mov
cmc
mov
sub
jno
aas
sti
popl
iret
push
or
lcall
divl
inc
xchg
mov
aaa
or
dec
or
or
ds
mov
mov
xchg
sbb
add
inc
xchg
mov
loopne
rcll
pop
jmp
or
and
stos
in
pop
sbb
and
mov
lea
mov
mov
jbe
scas
or
ret
ljmp
je
jno
test
push
xor
out
adc
push
or
test
jp
push
mov
cmp
movsl
mov
mov
xchg
lds
scas
jno
cli
cmpsb
push
sub
cmp
pop
and
sti
dec
jns
hlt
mov
hlt
jg
mov
push
add
dec
out
mov
jb
popa
stc
sti
xchg
pop
out
mov
cmp
and
push
bound
inc
xchg
mov
sbb
addr16
call
fmul
jl
rcrl
inc
aam
stos
mov
rol
andb
xor
out
xlat
sub
loopne
jp
bound
cltd
mov
repz
push
adc
cli
into
bound
aad
mov
ret
push
mov
test
fdivl
fucom
sbb
lods
test
lcall
pop
ret
dec
stos
dec
fiadds
push
xlat
xchg
pop
sti
pusha
add
repz
shll
push
mov
adc
cmp
lock
mov
xchg
jne
rcll
mov
pushf
scas
mov
mov
test
aam
cmpsb
pop
pop
mov
cmpsb
mov
fdivrl
xor
dec
pop
icebp
cli
or
cmp
xchg
imul
sbb
iret
in
bound
loope
testl
inc
ljmp
dec
push
cmp
outsb
ljmp
dec
jecxz
or
call
adc
lea
mov
dec
in
dec
xor
or
pop
pop
daa
jb
jne
mov
mov
ljmp
pusha
or
aas
jb
movsb
rcrb
lds
xchg
aaa
rolb
sbb
pop
cli
jne
das
gs
xor
repnz
outsb
dec
fs
fisttps
out
mov
push
arpl
icebp
pop
pop
aad
mov
and
pop
or
mov
push
inc
jecxz
adc
test
push
push
jns
xchg
mov
cltd
and
daa
xor
xor
jne
fdivrs
push
cmp
pop
cmp
out
push
sub
pop
hlt
fcmovnb
inc
sahf
cltd
mov
push
xchg
add
cmpsl
push
mov
mov
cld
inc
xchg
fistpll
or
pop
pop
out
adc
rcr
jge
addb
fwait
or
cld
pop
lret
xchg
imul
xchg
mov
test
movsl
enter
iret
aas
push
sub
cmp
insb
push
cmp
xchg
add
and
ljmp
and
in
ror
aas
push
and
popa
shll
lahf
and
add
push
test
fstpl
adc
cli
das
pop
adc
cmp
xchg
andl
dec
cmpsb
pop
int3
das
sarb
pop
icebp
mov
push
mov
mov
aad
cltd
mov
xchg
and
cmp
mov
adc
lods
push
sbb
clc
aad
imul
mov
dec
dec
bound
sub
pop
fcoms
jns
lcall
in
testl
pop
mov
repnz
xchg
lret
sub
std
mov
js
leave
inc
out
xchg
ljmp
rcl
dec
xchg
lock
imul
adcl
data16
lret
fcomps
stos
push
es
repnz
mov
fildl
addr16
insl
pop
lock
mov
repnz
dec
pop
mov
lahf
xorb
test
and
loop
jecxz
and
and
mov
data16
dec
into
in
mov
call
sub
hlt
popf
ljmp
push
shr
das
sbb
sbb
xlat
xorb
jg
xor
out
ss
loope
aad
pop
flds
mov
mov
push
push
inc
jp
add
inc
and
out
cmpsb
bound
or
les
xchg
or
xchg
lret
pusha
movsl
addr16
sbb
movsb
cmp
push
push
cmpsl
jb
adc
aas
div
sbb
cwtl
sub
gs
nop
pop
jne
repz
scas
push
aas
cwtl
loopne
dec
jmp
cmp
pop
fcmovb
lods
aad
pmaxsw
stos
push
add
idivb
mov
or
mov
int
out
in
jmp
mov
movsl
lea
into
adc
out
adc
cmp
bound
les
mov
and
out
insb
xor
iret
clc
fbstp
xchg
xor
and
int3
insb
movsb
cmc
jg
repnz
test
cli
insb
or
imul
xor
sbb
in
ficoml
sbbl
sub
ljmpw
fs
insl
inc
or
adc
sti
sarb
test
jle
dec
insb
iret
stc
or
or
das
loopne
int3
adc
fiaddl
mov
or
mov
icebp
stos
fisubl
mov
mov
ljmp
pop
hlt
cwtl
sbb
sub
je
mov
cmpsl
push
fucomip
sbb
jp
loop
test
arpl
mov
jnp
stos
in
testb
and
shrl
dec
clc
mov
hlt
xor
ret
adc
jae
and
movsl
sub
lds
ljmp
int3
ljmp
cmc
shrb
xorb
push
push
mov
lock
cmp
ljmp
ficoml
jmp
push
cmp
and
lods
cmp
inc
jp
ret
dec
lea
cwtl
push
add
sbb
ret
push
cmp
push
movsl
jp
mov
dec
imul
inc
daa
jmp
data16
inc
sarb
data16
adc
fmuls
pop
lods
je
lret
fists
push
lcall
shrb
into
push
ret
dec
outsl
loop
gs
out
mov
xchg
fcompl
divb
pop
cld
out
add
test
xchg
and
dec
sbb
mov
cmpl
push
cmc
dec
in
or
mov
outsb
and
mov
imul
mov
mov
out
sbb
mov
dec
pop
test
pop
into
jecxz
jmp
cmp
push
sahf
push
popa
jmp
pop
push
ss
mov
jae
shl
mov
inc
lock
adc
push
xchg
cmpsl
lods
mov
outsb
adc
xchg
lret
xchg
imull
rcrb
push
inc
dec
outsl
test
inc
mov
out
pop
pop
in
cmp
in
xor
pop
rcrb
push
jl
aam
and
cmp
inc
sub
adc
in
movsl
push
add
sti
adc
adc
xor
push
fimuls
rcll
xchg
sahf
test
mov
pop
push
aas
or
adc
pop
xchg
mov
leave
sub
int3
movsb
xor
lret
and
pop
push
xchg
test
ficompl
mov
mov
pop
lea
scas
into
dec
notl
cs
cmp
sbb
incl
sbb
ret
aad
lods
insb
rorl
icebp
out
in
popl
mov
mov
pop
dec
sar
and
lods
dec
out
fimull
test
push
in
sti
xchg
mov
xchg
cli
sbb
call
and
bound
hlt
pop
lret
lret
sub
js
imul
mov
aas
pop
inc
push
scas
clc
fistps
or
out
mov
and
fs
pop
in
mov
jl
jno
enter
add
mov
adc
sarb
sbb
sbb
add
and
or
push
fwait
ljmp
sbb
adc
lret
xchg
push
popa
into
jae
mov
or
aas
dec
fildl
inc
dec
xor
cmp
push
mov
loope
xchg
test
or
stos
shl
or
jecxz
jg
pop
lret
aad
fs
and
stc
sub
cld
jno
out
lret
imul
rol
pop
insl
scas
stc
pop
push
repz
ja
outsl
push
leave
mov
test
incb
shll
iret
sub
xor
and
jl
mov
mov
pop
mov
or
adc
ficoml
inc
arpl
insb
xchg
pop
shrb
loopne
scas
sysret
mov
fnstsw
sahf
pop
outsb
bound
push
dec
jp
push
pop
hlt
lahf
in
enter
aas
lret
dec
sbb
sti
jns
fldcw
int3
cld
sbb
push
mov
les
int3
test
test
push
mov
mov
bound
sub
jl
bound
in
inc
jae
sbb
aam
mov
push
test
pushf
das
xor
jbe
outsb
push
pop
adc
shl
mov
in
pop
stos
sbb
mov
mov
xlat
push
mov
mov
sub
in
mov
add
sti
dec
aas
mov
jl
lods
pop
daa
xchg
pop
jecxz
sti
popf
int3
or
push
rolb
xor
adc
mov
fidivrl
adc
std
std
ljmp
sub
or
lahf
movsl
add
pop
inc
popf
push
outsb
mov
xchg
mov
mov
jo
stos
repz
cwtl
add
xchg
mov
popa
sti
movsb
jmp
imul
sub
das
iret
inc
or
fistl
pandn
rorl
and
movsl
xchg
iret
das
iret
out
sbb
cmp
pop
cmpsl
sbb
stos
cmc
icebp
jne
shr
pop
ret
ljmp
or
les
lds
or
cmp
inc
lahf
cmp
pop
leave
stos
push
outsb
sbb
popa
cmpsl
sarl
adc
xchg
test
sub
mov
push
cld
mov
das
lods
add
mov
scas
repz
lahf
pop
int
jecxz
push
add
mov
fdivr
push
mov
cmp
mov
inc
jg
lret
pop
push
jmp
das
in
scas
test
outsb
js
in
les
push
shlb
pop
xor
mov
andl
sbb
inc
ss
jmp
and
jecxz
sub
mov
aam
stc
into
out
xor
adc
movsl
daa
sbb
dec
push
pusha
popa
xor
sub
in
leave
mov
add
push
bound
int
out
cltd
les
scas
es
mov
or
or
or
mov
scas
push
js
lahf
xchg
addr16
xchg
mov
test
push
push
mov
adc
mov
std
push
div
movsb
mov
outsb
sbb
mov
cmp
jno
loopne
jg
loope
fidivs
movsb
jl
mov
insb
in
shlb
add
dec
push
pop
pop
pop
sub
aad
xor
xchg
sbb
ds
in
orb
stos
xchg
imul
mov
and
jmp
jns
pusha
int3
pop
outsb
stos
and
add
xchg
push
or
or
or
adc
pop
mov
scas
add
fimuls
push
jecxz
clc
jg
rcrl
add
int3
repz
cltd
out
xor
inc
lret
jns
sub
pop
xchg
pop
and
pop
cmp
xor
dec
pop
add
mull
or
mov
loope
aad
push
push
fs
ds
shll
dec
sbbl
adc
out
pop
ret
pushf
fidivrs
fsubrp
pshufw
push
sahf
mov
repnz
jno
aas
mov
stos
leave
enter
out
outsl
push
into
dec
addl
aad
into
cmc
test
jmp
jle
sub
or
daa
enter
inc
adc
mov
and
rcrl
ljmp
rcl
inc
dec
dec
mov
and
adc
es
or
es
pop
sbb
mov
ss
bound
repnz
out
push
sbb
dec
push
mov
imul
outsb
pop
xchg
int
scas
xchg
inc
mov
pop
js
jge
pop
xorb
stos
movsb
cmp
and
imul
mov
xor
mov
xchg
jne
clc
or
fisubs
cmpl
cli
jo
shufps
or
adc
cli
jb
sub
push
addr16
fdivr
iret
mov
inc
lret
add
leave
lods
push
inc
and
mov
sarl
jmp
pop
mov
es
imul
push
add
mov
stos
iret
xlat
and
push
jmp
popf
push
push
out
push
and
cmc
sbb
out
xor
pop
add
xor
mov
push
fsubl
pop
inc
rorl
inc
movsl
push
mov
dec
push
imul
pop
test
fldl
mov
out
hlt
xchg
inc
aas
stc
je
push
dec
shrb
test
movsl
iret
int3
mov
test
sbb
mov
out
test
push
cmp
imulb
stos
cltd
lds
cmpsl
aad
push
sbb
push
rcrl
inc
cmc
mov
xorl
jmp
ljmp
xchg
movsb
push
shll
push
sub
imul
cmpsl
push
jae
push
add
xchg
xchg
xchg
or
mov
or
xlat
or
push
outsb
xor
daa
xor
mov
fmuls
adc
por
inc
pop
lahf
int
xor
sbb
sbb
lret
adc
jge
sbb
adc
xchg
hlt
or
shlb
xor
xor
inc
dec
popa
jbe
out
xlat
mov
jmp
pop
sahf
sub
fs
aas
push
push
cmp
cmp
jbe
and
outsl
and
scas
adc
pusha
push
mov
sbb
mov
cmp
das
mov
adc
push
mov
sbb
ljmp
push
mov
and
mov
inc
shll
andl
cwtl
ficomps
pop
pop
fidivrl
hlt
cmp
jae
into
jbe
movsl
mov
adc
sbb
ficomps
jecxz
hlt
dec
or
mov
ljmp
pop
mov
in
or
push
roll
movsb
or
xor
add
push
out
jns,pt
pop
into
ljmp
push
mov
sti
ds
out
insl
iret
outsb
fcmove
scas
sbb
or
shll
cmp
sti
or
pop
les
add
push
pop
dec
push
pusha
stos
push
mov
jbe
xchg
sahf
mov
jecxz
inc
push
sbb
scas
mov
lcall
xchg
mov
adc
insb
cmp
les
push
ljmp
sbb
cmp
js
pop
dec
mov
lods
jno
ljmp
dec
test
outsl
rcrb
iret
cltd
rorb
sbb
xchg
mov
js
xchg
pop
int3
loopne
push
fwait
insb
inc
insb
pop
sbb
xchg
xor
xor
mov
inc
push
xor
cmpsl
jecxz
mov
test
jle
shrl
sbbl
mov
lret
adc
mov
pushf
out
addb
adc
xchg
push
and
cmp
gs
rcr
jl
or
mov
enter
outsb
xchg
mov
bound
push
pop
mov
int3
sbb
ljmp
xor
sub
jp
xor
rclb
cli
test
leave
sub
xlat
jmp
popa
imul
fucomip
mov
and
fsts
cmp
pop
cwtl
loopne
movsb
mov
xor
jns
jae
adc
mov
push
fisttpll
xchg
rcrb
into
pop
jne
mov
and
cmpl
sub
mov
or
addr16
adc
mov
mov
jbe
popa
vptestmq
cld
scas
adc
stos
pop
jl
add
jns
xor
sub
insl
bound
dec
adc
mov
fstpt
ljmp
inc
pop
in
xchg
adc
pop
push
daa
cmp
mov
mov
xchg
outsl
mov
add
testl
fs
rorb
sbb
hlt
cmp
in
repnz
adc
rorl
jp
jb
push
mov
jmp
out
lock
inc
repz
xor
mov
and
ljmp
pcmpeqb
rcl
fwait
adc
ljmp
ret
push
sbb
and
js
dec
cli
pop
insb
andb
in
add
scas
aam
incl
fmul
xor
repnz
inc
imul
repnz
cs
jbe
in
test
pop
push
push
mov
and
jmp
dec
jg
lret
test
push
inc
mov
pop
mov
pop
out
inc
fs
outsb
je
cmp
cmc
mov
int3
xchg
andb
sub
jo
pop
dec
and
xchg
addr16
xchg
mov
jle
popf
cmc
mov
pop
cwtl
imul
pop
dec
dec
adc
sub
mov
dec
xlat
dec
inc
aas
pop
call
cmp
aam
push
into
pop
rolb
or
push
pop
lea
push
jecxz
or
in
iret
push
xchg
bound
mov
loopne
outsb
push
sti
cmp
mov
mov
fistps
mov
push
xchg
xor
ret
adc
ror
shll
and
adc
nop
push
ds
push
mov
adc
push
inc
inc
push
test
xchg
push
sbb
test
icebp
xchg
lret
sbb
adcl
popf
adc
mov
shlb
cmpsl
insb
xlat
call
je
push
lds
pop
mov
gs
dec
leave
sbb
and
hlt
push
cmp
pop
lods
sbb
lcall
jmp
test
lods
je
add
aam
movsb
in
in
or
mov
push
stos
into
sti
sbb
mov
pop
ret
mov
cltd
xor
mov
sub
and
cmc
jge
push
je
mov
scas
xor
dec
xlat
mov
lds
push
xor
stos
mov
fs
ds
push
inc
dec
fbstp
loop
push
and
rolb
pop
push
lods
sahf
xor
out
dec
inc
adc
adc
sbb
clc
push
int
jp
daa
push
call
idivb
cli
movsb
or
mov
sbb
mov
cltd
xlat
outsl
mov
leave
mulb
and
push
lds
pop
jb
inc
and
rcll
mov
xor
and
repz
jg
sbb
xor
add
por
sbbb
icebp
fcmovnb
dec
lds
icebp
inc
sub
xor
inc
dec
pop
sti
outsb
insl
push
dec
ror
push
dec
cltd
popf
pop
ret
push
insl
ret
fcoml
shll
sbb
aaa
xor
mov
testl
pop
mov
jle
pop
subl
leave
adc
or
sbb
cmc
enter
push
jg
icebp
adc
sbb
cmp
dec
aam
out
shl
imull
mov
pop
loop
push
mov
lret
aas
imul
pop
ja
pop
je
pop
add
test
mov
call
pop
int3
fisubs
mov
jae
dec
pop
out
into
lea
mov
out
add
shrl
int
push
sbb
or
in
pop
mov
movsb
xchg
adcb
popf
mov
push
sub
push
xchg
cwtl
into
push
push
pop
jmp
push
jb
popf
and
fistpll
pop
int
scas
imul
ss
and
push
scas
shr
cltd
pop
jl
and
push
dec
int
arpl
xchg
scas
add
imul
mov
repz
sbb
mov
repz
mov
xchg
push
or
fstpt
xlat
push
pop
icebp
clc
imul
cmp
sbb
mov
test
scas
movsb
cwtl
inc
loop
and
cmpsl
into
dec
stos
popf
lea
fcmovnu
dec
add
cmp
int3
jmp
cmc
sub
aad
popa
mov
clc
out
shrl
test
setns
jle
dec
dec
or
add
mov
sbb
icebp
jl
sbb
mov
rorl
add
xchg
jg
pop
loope
jns
mov
push
loop
or
in
stos
lds
adc
insb
lds
popf
jg
in
hlt
in
rorl
push
mov
lods
outsl
adc
xchg
xchg
pop
pusha
mov
inc
push
je
mov
loopne
push
outsl
repz
jns
int
mov
lret
and
inc
dec
test
mov
pop
imul
lahf
inc
cs
mov
adc
aam
jle
leave
hlt
ret
mov
xchg
cmpsb
adc
xchg
bound
push
nop
int3
repnz
inc
movsl
dec
repz
insl
push
mov
dec
mov
rorb
repnz
mov
jno
movsb
lods
int3
aaa
push
testl
cmp
inc
sbb
jle
insb
int
sarl
sti
add
hlt
sbb
mov
loopne
sbb
mov
push
push
mov
repnz
push
loopne
sub
push
xlat
or
jmp
dec
test
push
rcrb
iret
jl
adc
xchg
stos
insb
and
push
iret
mov
mov
divl
sbb
mov
mov
sub
ret
push
cmp
add
push
call
data16
icebp
push
mov
imul
mov
xor
out
dec
loope
mov
rcl
out
xchg
pushf
dec
call
cmpsb
jb
dec
or
lret
jo
idivb
and
mov
ds
rcrb
int
das
inc
paddusb
insl
mov
les
jb
mov
push
jmp
xchg
cmp
notb
pop
or
mov
push
mov
repz
push
xchg
loop
imul
es
arpl
pop
jmp
and
jbe
into
jecxz
frstor
fcmovbe
lahf
mov
sahf
adc
lret
inc
aaa
mov
fldt
sbb
sub
push
in
mov
inc
lock
inc
daa
jp
xor
aas
push
dec
aad
xor
ficompl
fcompl
negb
popa
or
dec
inc
add
insl
cmc
lahf
jns
cmp
cld
xorl
icebp
iret
adc
cmpsl
push
mov
in
add
insl
rcl
test
lahf
addb
inc
xchg
es
adc
lods
popa
adc
fwait
push
cli
lods
add
add
pop
xchg
mov
mov
or
adc
push
jae
mov
pop
jmp
sbb
pop
mov
in
push
sbbb
cmp
arpl
pop
pop
push
inc
push
mov
imul
in
inc
add
out
cmp
stos
push
sti
fidivs
pop
aas
cmc
mov
call
dec
push
das
lock
call
mov
movsl
jne
pusha
shrb
outsb
cltd
sub
scas
and
rcrb
int3
das
mov
fldenv
fs
test
pop
cmp
nop
pop
sub
cmp
outsb
pop
lahf
jp
hlt
adc
fimuls
adc
jp
adc
xchg
ja
dec
in
icebp
or
push
fiaddl
mov
data16
dec
je
shlb
pop
push
pusha
mov
dec
mov
pop
jne
and
and
aas
jg
fldcw
mov
rep
push
add
cli
int3
push
xor
int
pop
sub
ret
cld
lcall
loop
idiv
adc
sub
ja
fimuls
push
cld
pop
shrb
push
loop
mov
iret
cmp
iret
mov
inc
jl
or
cmp
lods
loope
pop
aam
mov
jp
push
fstl
subl
xchg
mov
cmp
pop
dec
inc
imul
adc
outsb
shl
mov
push
fisubrs
test
jg
sarb
ficompl
cmp
mov
push
mov
xor
cmp
push
cld
and
inc
jg
jb
fwait
lds
push
cmp
xchg
sbb
out
mov
cld
test
mov
and
jl
int
fsubrs
dec
sbb
inc
fisubl
fmul
int
dec
orl
in
or
pop
jb
sub
pusha
mov
loope
popa
nop
fsubl
icebp
in
filds
xchg
dec
aam
subl
call
out
mov
fcomps
mov
push
pushf
mov
push
dec
xlat
movsb
dec
or
mov
into
dec
pushf
stc
push
stc
jl
testl
fcmove
outsl
movsb
popf
das
add
rclb
popa
adcb
or
sbb
jbe
dec
cwtl
xor
push
dec
rcl
jae
xor
lods
leave
push
push
test
push
pop
inc
mov
out
mov
sbb
pop
mov
adc
dec
and
scas
xchg
jnp
push
sbb
push
inc
lret
ja
jne
mov
mov
sbb
mov
cltd
lret
leave
jnp
dec
bound
push
pop
or
mov
ss
mov
dec
or
scas
push
push
inc
mov
imul
imul
ss
xor
push
push
xchg
push
xor
in
inc
dec
push
push
push
std
mov
bnd
sbb
cmpsl
stc
mov
les
lret
daa
aad
push
fisttpl
fisubl
push
sbb
insb
mov
and
outsb
mov
out
lods
or
jns
les
lret
pop
lods
jne
std
jle
jle
adc
pushf
push
imul
pop
or
xor
push
aad
pop
enter
cmp
adc
dec
xchg
loop
jmp
hlt
gs
in
popl
mov
lret
rcll
pop
sbbl
aad
mov
fidivrs
dec
leave
jl
popa
dec
les
mov
movsl
fcomps
xor
jp
stc
inc
pop
fwait
sub
stos
aaa
out
cmp
xor
sub
push
mov
outsb
mov
sub
fidivrs
jns
add
mov
push
fadds
addr16
inc
sti
cmpsb
je
bnd
push
mov
push
jbe
mov
in
add
pop
les
repnz
push
jb
push
aas
movsl
xorl
subb
flds
jmp
ljmp
xor
cli
push
aaa
rcrb
repnz
stos
add
sbb
cmp
bound
xlat
jne
sar
clc
push
jo
pop
jle
xlat
insl
mov
xchg
shrl
push
or
arpl
push
stos
imul
jnp
pop
adc
or
movsl
mov
movsb
adc
xchg
inc
test
cwtl
aaa
or
xchg
out
repz
popf
xchg
mov
scas
jge
push
mov
cmp
fcmove
mov
sbb
arpl
dec
add
fistl
mov
clc
out
and
sub
sub
sub
jns
ja
es
and
cmp
mov
into
or
dec
mov
fimuls
add
push
push
jbe
das
dec
mov
int3
ret
jns
sbb
loope
and
jge
les
enter
mov
dec
test
push
das
dec
fsubrs
in
ja
add
dec
push
xchg
std
cmpsb
in
fwait
mov
inc
xchg
push
xor
das
out
push
rorb
inc
xlat
or
js
nop
rol
scas
pop
lahf
bound
out
mov
mov
stc
adc
test
mov
and
pop
int3
inc
mov
aam
push
int3
repnz
adc
call
cltd
cmp
std
mov
pop
outsb
xchg
std
add
lret
ret
repnz
shrl
inc
lret
mov
rep
push
stc
les
adc
pop
xor
adc
push
in
rcl
movsb
fisttps
mov
dec
in
repz
jp
push
xor
inc
nop
mov
push
movsl
nop
movsb
cmpsb
call
in
xchg
movsl
int3
das
sub
int3
je
adc
ljmp
push
mov
dec
lds
mov
push
out
pop
mov
inc
mull
mov
and
sbb
addr16
aas
mov
gs
mov
and
aas
movsb
cs
test
jne
or
pushf
incl
inc
mov
mov
pusha
jne
mov
push
xor
pop
sar
push
xchg
mov
mov
jmp
pop
gs
in
cltd
out
sti
push
and
xchg
mov
cmp
cltd
jmp
ja
sub
cmp
stos
sbb
cmp
dec
iret
push
rclb
jle
fildl
pop
bound
mov
jp
out
loopne
loope
popf
ret
pop
push
fst
xchg
addr16
pushf
iret
addb
jbe
repnz
in
and
push
repz
jl
mov
aam
jno
into
nop
test
dec
mov
sarb
fdivl
out
cs
push
sub
sbb
ret
repnz
pop
lahf
jmp
mov
jmp
or
stos
or
and
std
sar
xchg
shlb
jns
sarb
mov
stos
mov
or
or
es
push
sbb
inc
adc
sahf
stos
mov
push
push
lods
test
and
pop
sti
aad
jl
jb
lods
push
es
push
cld
in
in
mov
fnstsw
fisubrl
lock
mov
test
pop
cmp
or
mov
or
adcb
fs
into
test
mov
xchg
xchg
dec
pop
dec
int
scas
repz
mov
sti
push
out
int3
rcl
test
aad
dec
push
outsl
daa
push
jle
js
mov
pop
fcomp
stc
lret
cmp
inc
mov
sub
sbb
xchg
into
lret
mov
lret
jle
push
in
pop
push
pop
lret
dec
push
in
push
in
lret
dec
sbbl
fyl2xp1
xchg
clc
sbb
lret
fnsave
dec
adc
jae
popf
loopne
hlt
jno
in
xchg
std
fstps
push
outsl
lret
xor
shufps
fimull
dec
adc
dec
mov
xchg
sti
lret
bound
lret
imul
jmp
mov
mov
and
pusha
mov
shlb
mov
sti
insl
mov
ljmp
lret
dec
popl
cmpsb
sbb
aam
and
or
jbe
add
jmp
iret
lds
xchg
adc
ret
dec
push
in
jbe
sti
jle
clc
push
xchg
leave
ds
xchg
mov
push
add
push
sub
add
sub
std
addr16
sarb
lret
enter
sub
in
movsb
popa
lret
push
test
std
xchg
pushf
lret
mov
ret
ja
mov
lret
push
mov
and
das
cli
cmp
shll
dec
cmpsl
lods
cli
sarl
add
in
lret
mov
rorl
or
lds
inc
jno
lret
cwtl
sbb
push
adc
lret
or
lret
cmp
lret
cltd
es
mov
popl
dec
sub
pushf
loopne
test
shlb
cli
pop
test
mov
bound
lret
fidivs
cmc
fs
dec
fwait
sbb
icebp
mov
pop
bound
and
ret
cmp
arpl
jb,pt
into
inc
mov
cs
xchg
lret
aam
gs
push
mov
mov
rol
push
mov
mov
aam
pop
imul
and
test
lret
mov
mov
xchg
lretw
fmulp
enter
push
lret
in
pushl
sub
xor
inc
test
cli
cli
mov
jl
and
push
or
cmp
fstps
popf
jne
lods
in
lods
inc
movsl
ret
repnz
and
aam
loop
jmp
jbe
jg
jae
push
add
lds
sbb
cmp
jg
mov
add
stc
into
sbb
out
mov
je
sbb
imul
fsubrs
rclb
sub
mov
lret
mov
popf
rcrl
lea
in
into
mov
or
repnz
mov
pop
lds
fimull
inc
aad
inc
imul
stc
rorb
fisttpll
ror
iret
xchg
sbb
jl
xchg
dec
icebp
jp,pt
fwait
repz
lcall
xlat
leave
cmp
scas
jp
inc
nop
dec
lret
aad
mov
call
data16
aaa
enter
test
in
imul
andl
xchg
int
test
outsl
lret
lret
les
mov
lret
push
ror
pop
cmpsb
pshufw
push
popf
pushl
dec
jae
aam
push
pop
dec
jp
xor
or
int
out
xchg
repz
cmp
movsb
cmp
cwtl
jo
jmp
divl
out
dec
jge
cmc
mov
fsubl
iret
xchg
cltd
mov
pop
or
rcll
adc
scas
aaa
mov
push
ja
nop
or
mov
inc
xchg
or
je
dec
shlb
add
sbb
sti
shrb
mov
pop
jmp
add
imul
push
lods
fs
jno
rcrl
jecxz
jl
adc
adc
dec
sbb
mov
lcall
popa
cltd
test
mov
ss
xchg
repnz
scas
mov
pop
pop
jnp
lea
fwait
loop
flds
push
ds
push
pop
mov
inc
cs
imul
lret
popa
outsb
xchg
inc
add
lret
or
lret
cmc
jns
pop
xor
rcl
data16
and
scas
sbb
popa
fisubl
pushf
pusha
pop
mov
frstor
lret
popf
sbb
push
insb
mov
stos
ret
fwait
cmp
imul
mov
int
dec
xor
xchg
lret
dec
adc
sahf
inc
adcl
test
pop
pop
gs
jns
adc
les
push
xor
ror
lea
add
push
dec
lret
insb
in
std
pop
add
pop
xor
add
push
fistl
lret
insb
clc
inc
lret
mov
imul
lock
cmp
jle
into
test
mov
cmp
daa
outsl
out
ss
ficoms
ret
jb
push
bnd
mov
fbstp
dec
mov
jp
pop
mov
iret
mov
imul
ljmp
xor
mov
inc
adc
repnz
test
shll
lret
sbb
jmp
stos
cmpb
cvttps2pi
add
inc
xchg
push
mov
fisubrs
enter
xlat
and
fnop
lret
jno
ret
xor
lock
jnp
xchg
cli
enter
and
mov
out
lcall
mov
inc
cmp
sub
and
and
aas
ss
jle
mov
push
cmp
sub
imul
add
cli
mov
pop
dec
adc
fdivrs
mov
jmp
add
xor
push
out
loope,pt
lret
mov
test
sub
lret
movsb
mov
add
lret
dec
cmpsb
mov
lods
dec
rcl
sub
jo
lret
repnz
scas
jle
lret
push
push
and
mov
cmp
mov
xor
xchg
adc
lcall
in
add
lret
fstps
add
shlb
lock
or
lret
add
cmc
lcall
push
dec
dec
and
xchg
ja
cli
pop
movsb
ss
arpl
adc
adc
cmp
dec
test
dec
fst
dec
fisubrl
repnz
pop
xchg
ror
aad
mov
roll
xlat
dec
mov
sub
cmpl
adc
jbe
and
jg
inc
insl
rolb
xor
adc
popf
adc
loop
cli
push
mov
test
pop
sbb
xor
jle
lret
lret
daa
shl
in
sub
enter
clc
scas
sbb
dec
mov
int3
ja
add
sbb
test
popf
test
in
lret
inc
inc
inc
or
cmp
push
xchg
xchg
pop
xchg
mov
sub
cmp
ror
mov
dec
jnp
mov
clc
popf
lret
sub
lret
out
and
jnp
cmp
cmp
and
mov
mov
jb
inc
shrl
add
pop
or
jae
mulb
aaa
push
dec
dec
cmp
adc
mov
and
rcll
dec
outsb
lret
ds
jg
xor
cmpsb
loop
stos
mov
mov
sub
ds
scas
xchg
mov
out
mov
or
xor
lret
dec
mov
in
in
ljmp
mov
cltd
in
jns
test
and
out
lret
movsl
rcrb
lea
pop
aaa
lret
mov
imul
jge
or
nop
cld
cltd
push
mov
sub
sbb
mov
outsb
jbe
xchg
lret
stc
repz
mov
jns
add
dec
push
mov
xor
call
es
clc
xchg
mov
push
xor
mov
call
push
mov
or
cmpsl
das
cmp
ficomps
push
cld
loop
pop
xorl
push
xchg
lock
mov
out
inc
cmp
sub
fsubs
rcll
lret
jae
pop
cmpsl
addr16
jnp
fs
xchg
adc
fsubr
and
dec
inc
cli
xchg
sti
mov
lret
or
lret
pop
dec
cmp
add
outsb
push
mov
shll
fcmovne
dec
jp
outsl
addr16
cmp
out
popf
jno
pop
aaa
stos
out
mov
shlb
mov
stc
jne
es
jmp
sub
lock
out
lds
xchg
jnp
aad
lret
movb
lret
in
aam
xlat
pop
popa
lret
jg
push
cmp
dec
test
loop
or
xchg
lret
cld
pop
mov
mov
xchg
repz
js
imul
cmp
les
js
lret
inc
mov
mov
add
out
outsl
cli
pop
sub
push
repnz
pop
mov
dec
mov
or
jno
adc
ret
sbb
por
shlb
popa
mov
stc
movsb
bound
movsb
mov
cmpsl
or
inc
inc
and
push
mov
mov
mov
pop
pop
pushf
cltd
jmp
imul
inc
mov
sub
adc
or
cltd
dec
ljmp
pop
push
sarb
xchg
push
icebp
stc
dec
dec
pop
xor
pop
mov
out
ss
int
cmpsl
jp
push
add
fisttpl
mov
dec
mov
adcb
outsb
addr16
adc
rcl
loop
ret
add
or
ficompl
jecxz,pt
cmp
lret
int
pop
pop
xor
or
sbb
ret
lods
fisubs
cld
fdivr
mov
iret
mov
xor
out
push
ficoms
lret
pop
testl
pop
bound
and
ret
mov
mov
sub
or
out
xlat
push
jnp
outsl
lcall
and
popl
push
out
testl
xchg
int3
mov
fmuls
lret
rcrl
mov
aad
xchg
xorb
pop
movsb
add
and
dec
adc
push
in
cli
xor
or
sub
lret
popa
in
jg
and
das
test
data16
lret
fsubl
popf
pushf
mov
push
inc
push
call
in
jle
cmp
lret
pop
jno
sub
sub
in
in
stos
jl
jmp
test
pop
push
jo
in
shlb
mov
fisubrl
xchg
rcrb
mov
or
in
in
mov
fsts
or
rorb
mov
fcoms
pop
mov
fwait
test
aad
inc
inc
lret
mov
xchg
pop
push
lret
lds
int3
or
add
js
pop
faddl
mov
lret
inc
lds
adcl
fcmovu
add
das
cmp
xchg
xchg
test
xchg
push
mov
xor
push
hlt
movsb
aad
dec
xlat
rcrb
sarl
sub
std
add
lret
add
pusha
mov
and
sbb
ret
mov
fisttpll
mov
lret
cmp
jecxz
lret
pushl
and
repz
lret
pop
cltd
xor
scas
mov
add
aas
pop
mov
or
mov
in
pop
dec
fucomi
rcr
rclb
js
adc
mov
test
dec
push
push
leave
lret
dec
push
inc
sbb
push
and
inc
mov
mov
mov
lret
ret
sti
xor
stos
adc
in
sbb
pop
fistpl
out
pop
jle
xchg
lret
sbb
sub
cmp
popf
fmul
adcl
push
lret
cld
outsb
aas
cmpsl
sbbl
and
jno
push
dec
loope
aaa
add
popf
and
aas
lods
stos
mov
movsb
loop
rclb
fcmovbe
push
mov
lds
inc
sarb
add
out
inc
mov
or
cwtl
mov
sub
mov
ror
push
test
nop
inc
xor
xorl
and
addb
stos
push
push
fisttpl
push
lret
xchg
pop
jnp
ror
xor
or
jmp
fwait
adc
rcrl
xor
xchg
jp
mov
es
xor
pop
cmp
pop
outsl
rcrb
addb
dec
cwtl
pop
es
sahf
adc
sbbl
sbbb
mov
loopne
mov
inc
imul
jbe
fidivs
gs
sbb
stos
into
int3
out
inc
lret
ret
shll
inc
dec
nop
mov
jg
cmp
cli
out
mov
cltd
push
jp
cmp
or
inc
or
outsb
jmp
mov
addr16
lret
fstpt
push
iret
fists
in
rol
push
inc
cs
sbb
movsl
and
js
dec
pop
shlb
cmp
mov
out
iret
sub
xlat
pcmpeqb
cmpsl
fistpl
jmp
popa
dec
xchg
adc
pop
push
pop
push
and
sbb
pop
lock
add
push
iret
pop
jne
xlat
rol
mov
xchg
cmp
xchg
out
std
lahf
lods
cwtl
in
pop
ficoms
dec
push
jns
jno
pop
pop
inc
or
rcrl
sbb
imul
xchg
cltd
nop
mov
xchg
fistps
cmp
fsubs
pusha
scas
inc
enter
sarb
cmp
cmp
out
xor
negl
mov
mov
pop
mov
pushl
push
mov
mov
outsl
mov
jbe
adc
sbb
sbb
pop
data16
ss
fnsave
jno
test
dec
arpl
or
cmc
loope
lahf
adc
push
test
mov
mov
xor
add
push
pop
xchg
repnz
and
es
popf
mov
add
mov
outsb
leave
inc
push
xchg
dec
add
and
mov
leave
and
imul
rcl
push
repnz
dec
aaa
mov
sarl
sahf
pop
pop
jmp
mov
enter
dec
cmpsl
imul
push
cmp
repz
out
adc
mov
test
adc
bound
cmpl
jne
mov
out
incl
push
int3
push
mov
lret
or
repz
dec
mov
mov
xchg
add
outsb
xchg
sbb
and
int3
push
fimuls
and
mul
aaa
push
iret
push
bound
push
test
shrl
mov
hlt
dec
and
push
in
mov
cmovl
movsl
test
into
xchg
daa
popa
lea
dec
bound
sbb
xor
push
sarb
and
xchg
arpl
adc
add
mov
or
push
and
jne
out
push
int3
daa
inc
dec
mov
scas
dec
negl
ret
aas
les
jmp
pop
repnz
xor
pop
out
jp
jl
repz
fs
xchg
xchg
mov
rclb
test
jbe
mov
movsb
xchg
sti
mov
xchg
fcmovnu
sbb
popf
cmpsb
das
rolb
inc
dec
js
scas
push
cmp
push
insl
idivl
and
sub
xchg
fwait
test
push
jmp
fnsave
andl
jne
loopne
bound
sbb
mov
notb
pop
mov
adc
push
dec
imul
lock
mov
or
std
xor
movsl
mov
in
adc
push
stc
test
in
das
imulb
imul
repnz
xchg
ret
mov
std
adc
adc
jp
sbb
lods
pop
rcll
sbb
lds
inc
cmp
or
in
fstpl
dec
jl
dec
out
cmc
in
or
imul
js
cwtl
pop
pop
scas
data16
adc
mov
es
out
fcomps
pop
or
shld
adc
lds
mov
clc
push
and
xchg
cmp
stc
sbb
into
pop
stos
xchg
mov
cmpsl
lods
cltd
std
data16
sbb
out
cmpsl
repz
xchg
sbb
scas
cmp
inc
fmuls
inc
ret
test
mov
stos
jp
jnp
jns
and
arpl
or
leave
mov
out
push
mov
push
inc
inc
jmp
and
xor
or
into
das
out
mov
insl
or
std
jnp
aam
xor
push
cmp
push
mov
jecxz
out
leave
adc
inc
xchg
cmp
pop
sub
das
lods
cltd
inc
pop
sbb
sbbl
aad
xchg
pop
outsb
enter
rcr
xchg
mov
int3
das
movsl
test
outsl
out
mov
cld
cmc
mov
or
cmp
dec
xchg
das
mov
loope
loop
push
shll
addr16
inc
adc
xor
test
cwtl
pop
xlat
arpl
xchg
sbb
mov
adc
fcmovne
mov
jmp
jle
mov
inc
mov
push
pop
dec
lods
push
xchg
push
xor
sbb
ret
push
fwait
jmp
xchg
int3
cmp
mov
pop
fsubp
mov
sub
fxch
jne
xchg
mov
mov
pushf
arpl
inc
hlt
in
outsb
popa
xor
mov
pop
pop
sbb
push
cmp
mov
shr
mov
jecxz
fwait
cmp
mov
clc
push
mov
lahf
mov
push
jb
or
mov
mov
scas
xor
pop
iret
or
jmp
inc
test
test
and
mov
mov
bswap
adc
fwait
sbbb
mov
cmc
pushf
jmp
lcall
test
jno
addr16
xor
push
inc
mov
push
and
popf
or
loopne
or
outsb
bt
xchg
cltd
ret
jl
pop
ljmp
xor
mov
sub
sti
pop
xchg
mov
push
push
aas
shll
loopne
mov
hlt
nop
adc
in
push
dec
mov
push
cli
mov
and
cmp
out
add
or
push
pop
aad
mov
aaa
lea
arpl
test
xchg
adc
xor
inc
movsl
clc
repz
pop
jg
or
testb
in
aam
pop
fldenv
cmp
rclb
scas
pop
push
cmp
cmp
push
sub
mov
lcall
sbb
sbb
lret
mov
add
pop
sbb
mov
jbe
lcall
pop
sbb
push
inc
jbe
inc
pop
ljmp
dec
test
out
mov
enter
int3
pop
cmc
cmp
lahf
data16
fsubs
out
push
std
cwtl
cmc
mov
cltd
cld
bound
fimuls
pop
adc
iret
rcrb
adc
and
jne
popf
mov
ffree
lock
stos
sti
sbb
xor
pop
rolb
lock
cwtl
test
mov
push
rol
jmp
into
jno
jp
and
jle
sbb
fwait
jmp
jnp
cltd
jle
int3
push
leave
add
lods
mov
dec
js
les
mov
ror
loope
movsl
out
pop
xchg
sub
lret
test
mov
ret
lds
push
scas
sub
aas
fwait
inc
call
push
and
loop
popf
push
adc
test
insb
mov
or
pop
arpl
jne
repz
pop
sbbl
cmpsb
imul
pop
dec
xchg
call
stc
out
inc
fcoms
stos
sub
push
xchg
adc
ficoms
addr16
push
cmpsb
ficompl
push
mov
movsl
subb
sbb
filds
xchg
dec
inc
leave
jnp
sub
jmp
cmc
aas
arpl
lret
repz
movsl
adc
shll
xchg
test
xor
dec
loop
rol
add
cmp
hlt
bound
lock
xor
or
out
adc
gs
pop
inc
iret
adc
loop
cltd
hlt
cs
sbb
pop
aam
or
dec
or
fdivr
jno
gs
iret
pusha
mov
mov
sbb
dec
xchg
mov
push
mov
adc
add
dec
xor
inc
pop
loop
or
je
lods
push
into
les
mov
sbb
je
jbe
jecxz
mov
stc
xchg
shll
xchg
fldt
xacquire
sahf
push
sbb
mov
or
loopne
push
and
or
pop
jae
ret
es
push
repnz
pop
movsl
sbb
jno
rcrb
and
sti
daa
call
or
push
jecxz
repz
not
jno
push
testb
add
xchg
in
loop
into
or
js
lret
mov
lods
scas
cltd
bound
push
out
mov
cmpsb
cmp
aas
aam
push
stos
adc
mov
int3
lods
imul
in
xor
fcmove
sub
adc
push
push
mov
ficoms
and
push
and
mov
test
pop
mov
pop
push
xchg
sub
dec
stos
pop
push
out
push
ljmp
adc
loope
in
sbbb
repnz
dec
push
pop
sub
aad
xchg
gs
leave
out
push
adc
jnp
popf
xor
lcall
loop
jp
andl
testb
nop
daa
outsl
sbb
mov
and
idivb
into
sub
test
xchg
push
or
cmp
mov
push
decl
pop
inc
fbld
dec
push
and
lret
mov
fnsave
hlt
adc
and
mov
clc
idivb
mov
adc
nop
lret
cmp
push
mov
js
mov
lahf
cmc
test
add
pop
cmp
xchg
inc
mov
out
push
adc
sbb
lods
and
cltd
pop
cmp
and
push
mov
push
pop
dec
push
subl
sub
int3
jmp
jno
outsl
bound
fsubrs
adc
movsl
and
sti
or
xor
push
mov
imul
or
ficompl
pop
push
andb
xchg
mov
fcomps
mov
add
clc
aas
adc
pop
xchg
jne
mov
and
in
int
rorb
cld
cmpsb
dec
adc
in
mov
dec
and
movsl
xchg
loope
adc
push
aad
mov
xchg
sub
sub
sbb
mov
rorl
je
sbb
mov
pop
aam
mov
out
cmc
sbb
es
psubusw
jo
push
scas
mov
stos
hlt
sub
pop
mov
push
idivb
pop
int
roll
fidivrs
jge
shrl
mov
add
adc
push
xor
into
test
scas
lret
and
mov
jmp
ds
sbb
mov
movsl
repz
xchg
xchg
jne
fs
fwait
repz
aas
popa
xor
ljmp
cli
xor
in
push
sti
add
cli
loopne
add
sbb
xchg
insb
xchg
movsl
fwait
jle
out
adc
stc
fnsave
pop
push
and
jl
mov
negl
fstpl
gs
scas
test
das
pop
daa
dec
xor
push
out
mov
ljmp
in
out
shr
out
mov
mov
xchg
popf
lods
cmp
add
bound
mov
mov
dec
test
mov
ds
mov
sbbl
or
adc
add
pop
mov
lret
sub
jg
pop
pop
mov
lock
int3
mov
push
mov
or
dec
dec
loopne
adc
jecxz
popf
inc
jmp
push
ja
pop
xchg
and
rcl
mov
mov
inc
cmp
jle
popf
fcompl
and
adc
push
push
inc
cmpb
sub
pop
push
imul
inc
cmp
push
push
inc
push
xchg
mov
xorb
sbb
xchg
sub
out
sbb
jg
push
pushf
adc
imull
push
ds
mov
cmp
sub
jl
xchg
pushf
mov
arpl
dec
loop
fwait
pop
out
js
xor
sbb
push
out
push
popa
dec
rcrl
pop
lahf
outsl
and
loop
imul
in
jnp
dec
inc
das
in
int3
jbe
rcrb
iret
dec
pop
dec
xor
into
aam
movsl
xchg
pushf
mov
adcl
adc
push
orb
jo
pop
dec
cs
push
fistl
sub
push
push
outsl
loop
daa
xchg
mov
sub
ja
rclb
dec
dec
out
ficoms
or
sub
ret
jo
arpl
mov
loop
stc
in
rorl
imul
hlt
jp
xchg
lret
mov
mov
xor
repnz
jmp
ret
xor
loope
shll
ss
int
repz
ljmp
xchg
xor
outsl
or
mov
aam
ja
or
or
jg
push
jg
das
ror
inc
subl
jge
dec
ds
mov
cmp
xor
aas
out
nop
lcall
xlat
test
cwtl
jg
jmp
outsl
pop
cmp
mov
dec
add
jmp
aas
test
leave
push
arpl
lcall
iret
shlb
adc
adc
or
movsl
ret
aad
test
push
cmpsl
sbb
out
pop
fistps
lret
mov
insl
loope
sub
sbb
adc
ds
mov
aam
lds
and
pop
pop
xor
sbb
xor
jg
mov
mov
dec
mov
out
imul
out
int
dec
mov
rclb
mov
int3
lahf
dec
in
jle
test
add
jecxz
mov
lea
sbb
mov
lret
and
sbb
pusha
xor
pop
sub
mov
lret
fcoms
mov
inc
push
push
pop
dec
ret
push
fsubrl
fidivrl
xor
sarl
pop
cli
or
cmc
pop
stos
inc
iret
push
lret
js
or
stos
fimull
rol
les
dec
cmp
or
xchg
jmp
mov
aad
inc
lret
and
icebp
lret
into
mov
lret
aaa
sbbl
mov
in
mov
or
lret
shl
jmp
xchg
or
lock
push
add
gs
jmp
outsl
push
push
addl
daa
cli
mov
pop
fsts
nop
xorb
or
loope
pop
mov
mov
sub
jb
enter
int3
mov
mov
nop
add
shrl
cmp
popa
sbb
lret
sbb
shrb
outsb
pop
imul
cli
aam
mov
testb
and
lret
dec
int
dec
loop
lods
gs
mov
pop
lret
ficoms
lea
jl
out
jbe
lret
lock
das
call
sbb
xchg
ret
mov
lea
jo
pop
in
lret
sbb
ficompl
cmp
pop
les
cmp
cmp
pop
aad
notb
ret
incb
xor
sarb
das
mov
lret
shrl
insl
and
stos
rorb
into
sbb
je
int
rclb
out
int3
mov
cli
aam
xchg
rcpps
pop
insb
scas
fwait
lret
sub
lret
loopne
in
inc
ljmp
int3
mov
ud1
std
xchg
cmp
lret
pop
mov
lret
jmp
xchg
mov
jl
mov
roll
xchg
test
sbb
cmc
lret
mov
movsb
jno
cmp
add
mov
adc
negl
xchg
daa
sub
mov
cltd
sbb
std
push
mov
mov
sbb
dec
imul
xor
mov
jmp
mov
shlb
inc
jo
pop
int3
xchg
dec
sbb
imul
push
stos
sti
mov
daa
sub
leave
pop
dec
fbld
mov
shll
daa
leave
push
adcb
mov
jnp
sub
push
scas
pop
mov
ret
jmp
jbe
sbb
sbb
bound
aas
aad
push
pop
gs
das
js
add
or
push
inc
ljmp
adc
dec
mov
adc
or
dec
imul
sahf
push
and
pop
dec
mov
icebp
ss
jb
mov
rol
adcb
outsb
stc
fs
lret
sub
xchg
push
aas
test
xchg
sub
sti
xor
lret
push
pop
ljmp
inc
icebp
sbb
into
aas
xor
decb
mov
push
int
shl
scas
mov
mov
popf
push
cs
fdivl
fs
fstps
decl
inc
adc
into
jp
into
cltd
cmc
es
adc
das
xchg
mov
cmp
out
cmc
in
jns
push
jb
push
sbb
sub
test
sbb
jl
push
mov
adc
roll
push
pop
out
mov
cmp
add
add
adc
adc
lret
outsb
scas
adc
mov
adc
sarb
les
cs
pop
std
sub
jmp
lret
out
mov
pop
jb
jg
testb
out
icebp
mov
das
cmc
adc
jg
pop
aaa
aam
mov
mov
push
frstor
movsb
mov
cli
xchg
pop
stc
ret
clc
mov
jmp
sti
loope
dec
push
fmul
fldcw
or
out
jecxz
push
shlb
inc
mov
pushf
aam
bound
cmp
cli
adc
mov
sub
pushf
das
rcr
mov
shlb
in
testl
jmp
mov
clc
xchg
jg
xchg
and
into
pop
push
out
mov
jl
lret
dec
dec
inc
jmp
rcl
jne
imulb
jg
outsb
testl
mov
cli
in
cmpsb
sub
jns
jnp
rclb
xchg
das
orl
aam
subb
rcll
push
inc
in
cmpsb
mov
jge
jno
sbb
lahf
bound
daa
inc
out
ljmp
dec
mov
jo
fdivl
push
or
test
jmp
call
pushf
or
push
test
scas
xor
aad
or
add
mov
imul
sbb
pushf
les
xchg
testl
in
push
mov
sbb
enter
dec
rorl
xchg
inc
leave
cmp
sbb
scas
rclb
dec
das
mov
sahf
mov
test
pop
push
sub
sub
sub
aas
mov
sub
xchg
adc
lds
add
xor
into
xchg
test
scas
arpl
or
and
jmp
push
xchg
rcll
xchg
nop
cmp
xchg
loopne
add
lods
movsb
test
into
jg
cli
addr16
ret
xchg
cli
mov
adc
lret
rcrl
fists
push
add
push
push
dec
call
pop
jmp
incb
sbb
in
push
insb
jle
fisttpll
and
jg
push
ljmp
out
adc
cmp
push
sub
push
xor
lret
mov
xchg
fwait
mov
and
popf
outsl
adc
or
pushf
hlt
aam
dec
push
scas
xor
xchg
pop
out
les
ret
enter
xchg
fs
sub
cltd
or
ret
push
test
push
adc
clc
adc
fisttps
cmpxchg
push
xchg
rolb
jg
lret
test
cmp
les
scas
shl
xchg
xor
pop
fimull
sub
fwait
pop
sbb
jns
xchg
cwtl
jp
pop
and
sub
dec
aad
xor
in
push
add
fiaddl
mov
repnz
xor
inc
xchg
xchg
push
iret
or
and
pusha
test
ds
sbb
jg
ret
test
add
sub
ror
add
lret
xchg
xchg
sti
push
pop
jae
scas
jno
mov
mov
cli
push
ret
aad
not
pusha
xor
ljmp
and
js
cmp
push
mov
xchg
mov
push
pop
nop
lock
imul
call
mov
or
lahf
xor
sahf
sarl
inc
push
push
push
pop
in
or
mov
push
dec
scas
jo
sbb
push
ljmp
push
jb
cs
or
aam
mov
or
pushf
xor
loopne
jb
sbb
insl
cwtl
call
dec
mov
aam
adc
outsl
inc
hlt
pop
or
rcl
lods
adc
loop
popaw
mov
mov
rcrl
inc
dec
ljmp
cmp
jmp
sbb
lahf
bound
outsl
jns
jp
aam
data16
test
dec
push
cltd
add
push
jae
outsl
and
loop
push
xor
rcr
cmp
repz
dec
push
scas
cmpb
cmp
or
or
add
cmpl
data16
push
sbb
jae
outsb
mov
mov
les
pop
lock
push
push
inc
pushf
pop
into
jns
aam
push
icebp
mov
int3
bound
inc
sub
xor
mov
inc
cmp
js
mov
adc
jno
in
insb
mov
cmp
sbb
int
int
test
insl
sbb
adc
movsb
pop
xchg
jnp
stos
imulb
pop
mov
std
or
lds
and
and
cltd
adc
mov
jmp
and
shlb
inc
adc
ljmp
jge
mov
cwtl
int3
dec
loop
push
pop
push
mov
into
leave
push
sbb
scas
loope
int3
std
flds
fnstenv
rclb
outsb
sub
movswl
mov
push
into
inc
lods
aas
repz
adc
std
mov
xor
mov
outsl
xchg
xchg
decl
das
fisubrs
pop
mov
jle
mov
mov
push
lock
ljmp
sbb
xchg
js
xor
aam
outsl
nop
push
jb
pushf
aas
xchg
jmp
push
push
call
sub
sub
rorb
push
dec
xor
pop
pushf
mov
push
fildll
loop
xchg
mov
fldcw
jp
cmpsl
fiaddl
mov
mov
dec
jae
daa
in
dec
and
aam
scas
aas
outsl
pop
fiaddl
inc
xchg
bswap
cmp
jecxz
sbb
ja
and
dec
shlb
out
adcb
into
xor
jns
roll
enter
ljmp
mov
movsb
inc
jg
std
repz
movsl
jo
out
mov
xor
dec
jno
mov
das
loop
push
add
mov
xchg
out
adc
lods
stc
xchg
iret
das
xchg
pusha
popa
mov
jno
add
std
pop
lods
out
shl
lcall
outsb
lds
jns
adc
sub
jmp
int
push
out
or
pop
xchg
pop
jg
xor
lret
cmp
or
mov
das
leave
ss
add
loope
dec
mov
dec
sbb
test
mov
push
pusha
pop
pusha
iret
pop
imul
cmpsl
out
in
push
jmp
icebp
push
aad
jle
or
imulb
aas
call
nop
mov
test
pop
ficomps
shr
inc
push
and
subb
jbe
dec
aaa
and
add
fldl
fsubr
push
hlt
and
cltd
pop
fisubrs
jnp
movsb
push
repz
sub
pop
sahf
std
push
movsl
incl
cmp
fstps
shl
push
or
fstpt
or
inc
xchg
rcrb
mov
cmp
push
cmp
or
aas
pop
adc
mov
xchg
ja
xchg
pop
mov
aam
sub
je
and
sti
mov
push
icebp
out
lds
rcl
outsb
jecxz
addr16
mov
lock
cmp
mov
repz
call
decl
js
adc
pop
or
mov
pop
ljmp
dec
xor
inc
icebp
repz
js
gs
inc
mov
iret
aam
sub
sbb
lret
int3
outsl
pop
repz
bound
jae
leave
out
pop
decl
and
or
cmp
outsb
test
pop
jne
sbb
mov
xchg
mov
out
ret
or
add
cmp
mov
jmp
pop
shll
xor
dec
jl
sbb
sub
adc
loop
xor
pop
bound
insl
int3
mov
cmp
mov
cmc
divb
leave
int3
rolb
cmpsl
call
xchg
jl
or
push
in
aas
add
addr16
or
sti
int
pop
and
shrl
cmp
lret
mov
pop
cmp
push
push
lds
ds
xor
pop
pop
mov
adc
pop
sub
rolb
or
mov
cltd
mov
push
pop
xchg
sahf
lea
bound
shr
xchg
cmp
mov
bswap
push
jg
or
sbb
les
lea
mov
inc
cmp
mov
paddusw
repz
clc
pop
scas
dec
jecxz
dec
pop
lods
push
popa
jb
or
push
jnp
mov
scas
ljmp
pop
lds
movsl
adc
push
adc
loop
dec
adc
mov
lods
xchg
cmp
mov
mov
stos
or
stos
ljmp
xor
or
mov
data16
push
shl
jp
mov
jecxz
nop
movsb
mov
stc
adc
movsb
xchg
int
bound
imul
sbb
push
xor
rcll
sarl
mov
cmpsb
incb
out
mov
add
in
mov
pusha
or
gs
sbb
sarb
jns
shr
push
cmp
test
push
outsb
mov
mov
fdiv
mov
shll
test
pop
jnp
lock
jecxz
in
fisttps
enter
push
sbb
mov
push
or
cld
or
pop
repnz
int
push
inc
push
test
lods
fs
jo
mov
push
in
lret
mov
out
mov
clc
sub
push
push
adc
push
mov
pop
scas
sti
test
xchg
mov
fisubrs
movsl
push
and
lock
in
cli
pop
insb
lahf
cwtl
bound
sub
pop
andl
cltd
loop
out
clc
push
lret
sbb
push
or
shl
mov
das
stc
aad
sbb
jp
pop
inc
mov
ljmp
test
fistl
lds
xor
push
pop
xchg
addr16
mov
push
or
or
mov
movsl
testb
iret
into
movsb
outsl
addr16
pop
push
jne
cmp
jae
fwait
sub
or
dec
scas
ljmp
xor
sti
bnd
das
sbb
jmp
mov
push
mov
jbe
aas
xchg
mov
shr
jecxz
and
inc
cmp
outsb
negb
mov
mov
or
mov
mov
mov
sub
mov
pop
mov
iret
in
hlt
lea
pop
ljmp
loopne
imul
jecxz
outsl
insl
mov
pop
push
lock
lret
mov
mov
pusha
inc
sbb
mov
test
cmp
jnp
in
popf
cmpsb
aaa
into
pop
ret
roll
sub
push
mov
ljmp
stos
int3
mov
sub
xchg
sbbb
popa
dec
rorb
push
fs
lods
inc
pop
loop
push
lds
int3
push
int3
push
sti
jnp
cmpsl
mov
xchg
xor
lods
iret
into
dec
push
inc
jecxz
jl
pop
stc
and
out
iret
enter
pushf
push
cld
cmp
ja
mov
loop
jne
gs
sbb
repz
test
mov
shl
mov
out
bound
mov
push
loop
push
xor
sarb
int3
fldz
sub
or
sub
or
mov
pop
outsb
fmull
insl
int3
and
pop
sub
hlt
cld
pop
stos
dec
jbe
int
push
pop
loopne
cmpsl
dec
mov
inc
push
jne
test
sahf
bound
jmp
xlat
inc
into
divl
aas
js,pn
lret
push
call
lret
and
dec
jmp
mov
les
das
push
insl
fstl
adc
stos
into
jne
add
sbb
xor
int3
or
lds
lret
add
cmp
inc
cmp
dec
mov
push
pop
push
out
lea
dec
inc
cmc
js
sbb
pop
or
inc
cmp
mov
les
pop
into
sbb
mov
pop
leave
pop
daa
cmp
movsbl
and
subl
push
mov
sbb
inc
lock
andb
mov
mov
mov
or
jne
insb
imull
xchg
jg
out
addb
into
dec
lahf
sbb
pop
push
rcll
or
dec
aam
pop
xchg
gs
xlat
test
and
lret
pop
das
sbb
std
dec
jp
cmp
inc
negl
pop
add
and
xor
sub
push
stc
xchg
lahf
dec
jne
and
das
mov
stos
mov
dec
and
repnz
imul
bound
mov
cltd
push
adc
cs
push
pop
or
movsl
sub
fcmovnbe
and
dec
icebp
sub
in
test
fisubrs
cmp
rorb
push
cmp
push
push
cld
dec
outsb
fisubl
mov
dec
and
out
in
mov
and
iret
test
dec
fisttpl
dec
lret
add
inc
mov
jne
cmp
mov
lret
dec
push
xchg
pop
pop
xor
enter
mov
cli
adc
ror
dec
incb
stos
jl
add
mov
out
jp
dec
cmp
jmp
xor
in
lds
dec
sub
bound
test
xor
cwtl
ror
jns
mov
pop
std
mov
in
inc
mov
mov
mulb
push
or
sbb
dec
lds
mov
and
cmp
push
jmp
iret
sub
dec
adc
daa
js
into
lret
ret
shlb
arpl
push
sub
hlt
enter
ror
push
xchg
popa
lret
sbb
pop
or
das
out
mov
lds
sahf
fcomps
xchg
lret
enter
sub
lret
aad
popa
outsl
pop
push
lret
aam
mov
adc
and
cmp
mov
hlt
inc
mov
iret
mov
xor
lock
cmpsb
out
pop
stc
lret
mov
scas
sbb
xchg
test
int3
pop
add
out
scas
cmpsl
insb
adc
or
cltd
mov
int3
pushl
push
ror
push
push
ds
stc
jl
dec
dec
pop
iret
cmpsb
lret
lea
sub
cmp
xlat
ss
sbb
mov
add
ror
mov
fstpl
movsb
lret
mov
gs
sahf
pop
ds
xorl
imul
lret
cmp
test
nop
push
dec
add
or
or
ror
mov
int3
adc
lret
dec
mov
mov
push
insl
leave
aas
dec
lret
sarb
mov
int
adc
dec
add
mov
jle
aam
sbb
cmc
sbb
xlat
dec
lret
aam
iret
sbb
mov
mov
bound
or
iret
pop
pop
mov
jbe
movsb
inc
add
xchg
dec
gs
lret
lcall
test
sub
loope
xchg
shlb
inc
or
mov
ss
cmc
dec
loopne
shl
lret
sbb
adc
lea
inc
fistpl
in
lret
dec
into
xchg
cmp
mov
int3
repz
jl
nop
adc
out
add
pop
or
cli
out
jmp
inc
loop
cmp
pop
xor
or
pop
popf
jp
imul
ret
dec
and
mov
lretw
inc
insl
cmp
xor
mov
lret
les
push
pop
fidivrl
movb
or
adc
stos
cmpl
mov
or
jae
lret
sub
fidivl
ret
pop
xor
sarl
arpl
mov
out
jmp
jp
jl
xchg
lret
push
inc
jb
sahf
mov
js
sbb
adc
pop
aas
lret
xchg
rorl
lret
dec
lar
daa
cmp
pop
test
jo
fnstsw
fwait
mov
aad
stc
lret
inc
pop
xchg
add
lret
mov
sbb
push
aaa
fisubl
inc
jns
fcompl
mov
daa
xor
aam
int3
mov
movsb
js
popa
pop
ss
addl
ret
rorb
xchg
add
rcrl
jo
and
mov
lahf
mov
mov
int3
cltd
in
popf
xchg
mov
in
repz
push
imul
stc
lods
pop
xchg
in
pop
xchg
int
inc
mov
jge
sarb
fwait
mov
out
xorl
mov
lea
dec
das
jmp
aas
aam
dec
movsb
add
add
mov
fidivl
cmp
andl
or
dec
lret
aas
pop
ljmp
ds
mov
lret
ljmp
mov
push
inc
fcomp
fistpl
jp
lock
mov
outsl
mov
mov
in
sbb
push
ret
pop
cmp
jp
pop
jne
shl
das
enter
out
rcl
cmp
jns
pop
dec
cltd
or
cltd
repz
ret
sbb
rclb
gs
hlt
mov
jg
out
inc
stos
insl
inc
test
add
aam
push
cli
test
mov
jge
shl
mov
enter
cmpl
test
test
jp
jbe
or
hlt
lret
fistl
mov
stos
push
pop
add
xchg
pop
push
lret
imul
push
mov
mov
test
xchg
out
repz
imulb
stos
mov
pop
lret
js
xchg
sarl
adc
jnp
lret
cmp
cltd
mov
lret
push
and
xlat
aad
mov
jae
dec
dec
test
pop
mov
jno
lret
test
or
adc
push
rcl
je
or
into
scas
lret
daa
mov
jbe
or
or
jo
lret
mov
std
adc
fs
dec
fildll
leave
fxch
lds
push
xchg
lret
pop
add
push
dec
inc
cmp
fsincos
int
dec
lret
cmp
rcl
mov
and
inc
lret
aad
jle
adc
add
in
clc
lahf
pop
cmpsb
pusha
insl
mov
dec
sbb
pop
xor
mov
push
adc
mov
xchg
sub
dec
pusha
inc
lret
jns
cwtl
in
push
daa
jns
fcmovu
xor
pop
sub
shll
lret
inc
xchg
pop
fstps
mov
xchg
and
loopne
mov
sti
mov
outsl
jl
mov
stos
or
mov
jg
jecxz
adc
dec
or
push
sub
nop
paddq
rcrl
arpl
mov
stc
mov
or
sbb
lret
ficoms
cli
xor
sarl
dec
xlat
enter
dec
fs
sbb
adc
pop
push
cmpsl
lret
or
mov
sti
pop
cmp
jecxz
test
js
xor
xchg
pop
sbb
push
data16
test
mov
or
sarb
push
push
xchg
cmp
sub
adc
test
pop
cmp
xchg
ss
jmp
data16
pop
inc
insb
into
int3
mov
lret
filds
fimull
sub
lret
int3
pusha
loope
xchg
xor
fwait
out
mov
call
sub
fsubrl
nop
pop
daa
in
lret
cmpsl
test
jae
arpl
adc
pop
dec
cmp
or
pop
fcmovnu
jne
jno
jmp
lret
hlt
jno
push
gs
fucompp
in
fidivl
inc
test
int
rolb
push
lret
scas
adcl
xor
or
ja
push
test
mov
lea
rorl
fisubrl
nop
jb
pop
pop
add
and
rolb
lret
push
bound
stc
ss
sbb
inc
cld
pop
popf
icebp
lret
fs
dec
das
dec
lret
sub
jnp
push
pop
insl
imul
xchg
cmp
push
dec
sbb
push
dec
jnp
enter
push
mov
stos
outsl
push
dec
push
jp
inc
into
out
xchg
lcall
movsl
xchg
push
ja
pop
dec
movsl
and
dec
sbb
bound
rcrb
mov
dec
mov
inc
add
cli
rorb
nop
jle
sbb
inc
int3
and
jnp
adc
out
jp
or
inc
jl
sub
mov
adc
jmp
cli
cmp
mov
aam
fs
fs
mov
mov
cs
test
sub
and
daa
adc
mov
testb
sbb
push
inc
rolb
cmpsb
xchg
imul
filds
dec
jp
lret
orl
mov
push
aas
int
subb
sub
xchg
lahf
pop
jl
xchg
sub
jmp
push
rclb
cltd
jecxz
out
ret
pop
or
push
mov
xorb
mov
fdivl
andb
leave
cmp
pop
or
xchg
aas
pushf
push
inc
mov
adc
mov
push
outsl
insb
push
pop
push
jmp
lcall
pop
push
jmp
fldcw
add
inc
adc
int3
and
cli
inc
popa
or
jno
jge
jmp
repnz
xor
sub
ljmp
jo
inc
mov
pop
fdivrs
clc
xchg
int3
xchg
shlb
incl
add
inc
cmpb
movsl
test
scas
nop
outsb
outsb
pop
xor
sbbl
jmp
aam
vmread
mov
push
outsb
push
dec
mov
mov
push
mov
adc
add
es
push
sub
add
pusha
jmp
pop
dec
leave
ficoml
mov
loopne
neg
pop
xor
or
dec
lcall
lea
push
pop
mov
mov
sub
mov
rorb
daa
popa
adc
fsts
or
into
mov
orb
pop
push
mov
and
inc
lret
mov
adc
lret
pushf
inc
push
cmp
mov
or
jo
fbld
lahf
test
pop
xor
pop
xor
jo
repz
dec
and
call
jb
inc
xorl
pop
pop
lret
dec
jbe
mov
sub
jmp
ret
and
je
out
mov
mov
cli
mov
and
pop
hlt
data16
sqrtps
call
insb
stos
adc
and
and
sbb
lret
je
add
movl
icebp
push
cltd
dec
pushf
imul
ror
icebp
xor
int3
jl
or
nop
call
push
sti
lds
stc
shl
fs
movsl
add
fisubl
push
push
int3
mov
mov
movsl
jae
adc
pop
pop
stos
fs
xchg
inc
fistl
xchg
sub
lods
enter
mov
inc
jnp
popf
xchg
push
mov
gs
push
pop
dec
xchg
mov
mov
in
iret
dec
sub
out
mov
aaa
or
int
push
cld
cmc
inc
push
repnz
mov
out
mov
push
cmpsl
cmp
sbb
sbb
mov
daa
lds
or
push
dec
and
iret
jmp
mov
out
adc
xchg
aad
mov
push
push
push
pop
xlat
cwtl
xchg
pop
iret
ljmp
dec
outsb
or
push
dec
adc
push
cmp
and
sbb
jp
mov
andb
ficomps
aas
push
inc
repnz
mov
scas
lret
pushf
cmc
filds
add
dec
ret
push
mov
cld
ficoms
mov
inc
mov
out
mov
push
in
sub
or
bound
dec
rcll
push
add
pop
iret
push
mov
int3
and
dec
jo
add
nop
dec
mov
sti
movsb
popa
je
scas
push
lret
pop
popa
pcmpgtb
mov
push
mov
dec
pop
adc
iret
stos
scas
int3
les
or
inc
cwtl
inc
jg
inc
aad
push
add
mov
pop
mov
or
mov
xor
sub
push
insl
clc
cmpsb
xor
sbb
aam
int3
sub
mov
lahf
out
hlt
jb
dec
addb
stc
vmovupd
aad
mov
icebp
sahf
mov
mov
sub
ljmp
or
pop
cmpsl
jg
out
pop
imul
push
adc
ljmp
add
mov
mov
xchg
cmp
add
test
push
sub
push
je,pt
cli
jp
mov
mov
push
jb
mov
xorb
push
sub
xchg
jbe
sub
sub
shl
shlb
inc
sub
cmp
mov
bound
rcrl
dec
stos
jbe
sub
pop
lret
xchg
rcrb
jb
push
sub
out
jo
test
scas
divl
xor
and
movsl
je
pop
fwait
sti
jl
push
lds
iret
lds
add
or
icebp
aas
dec
stos
fsubp
mov
movsl
xchg
lret
adc
sarb
xchg
jne
aaa
or
lods
ret
xchg
in
sbb
jbe
repnz
incl
shl
sub
je
sbb
or
leave
cmc
fsts
jecxz
jmp
pop
into
leave
cmp
cmpsl
sbb
rcll
clc
test
sbb
cmp
ljmp
and
mov
mov
lahf
push
push
fucomi
pop
jo
push
bound
outsl
loop
adc
dec
dec
and
adc
push
ljmp
out
push
sbb
iret
mov
push
jno
outsb
shll
in
pop
inc
jns
test
fisubrl
mov
xor
pop
shrl
jp
push
stc
sbb
bound
sti
shrb
xchg
outsl
dec
lret
push
out
mov
aad
mov
imul
ror
pop
cltd
mov
pop
inc
adc
mov
and
mov
push
and
icebp
flds
repz
jecxz
ret
mov
inc
cli
cmpsl
dec
push
aam
int3
lock
pop
mov
push
int
xlat
insl
inc
fisttpl
les
jmp
mov
outsl
mov
scas
bound
mov
out
cltd
adcb
pop
lds
iret
jp
cmpsl
push
push
pop
mov
xchg
movsl
lods
sbb
push
push
and
mov
test
gs
aad
push
push
in
cmpsb
or
fsubrp
loopne
or
lods
stos
push
test
ljmp
pushf
out
nop
mov
fwait
push
sbb
inc
xchg
sub
aaa
fcmovbe
dec
mov
insb
mov
push
push
cmp
or
mov
and
inc
pop
mov
and
inc
inc
adc
adc
add
shlb
or
test
divb
inc
dec
ljmp
sub
or
out
cli
xchg
sahf
xor
inc
add
sbb
xor
es
aam
jmp
and
inc
jb
shlb
adc
iret
pop
mov
xor
mov
pushf
and
gs
int
out
leave
push
pop
cmp
lcall
jmp
in
pop
and
shl
dec
std
stc
lds
in
dec
int3
adc
push
jo
mov
call
divl
mov
rcrl
or
movmskps
pushf
pop
cmp
popf
mov
lea
pop
add
push
pop
cwtl
loope
je
arpl
scas
mov
push
xor
rcll
hlt
cli
loopne
ja
jmp
sar
jns
pop
cmc
mov
stc
push
daa
cmp
aad
ljmp
jg
add
jg
sti
dec
lret
fsubl
jp
xchg
and
jl
xchg
or
mov
fidivrl
ss
and
test
rcll
inc
add
bound
dec
push
mov
add
inc
mov
or
fs
push
pop
jne
repz
pop
xor
lods
hlt
call
lods
cld
adc
jne
pushf
data16
jne
mov
push
lret
cs
sbb
scas
mov
ljmp
jmp
sub
jecxz
std
and
lock
nop
mov
es
nop
loop
pop
jnp
jge
arpl
adc
shll
into
dec
xchg
es
ljmp
arpl
jmp
dec
lods
testl
add
pop
push
adc
ficompl
inc
clc
out
sub
sbb
pop
pop
daa
arpl
mov
jl
decb
mov
or
negb
fisttpll
adc
repz
mov
std
ficoms
loopne
cld
imul
adc
sub
cltd
daa
jmp
xchg
mov
stc
xchg
sbb
dec
jmp
stos
pushf
pop
cli
stc
inc
pop
std
test
in
and
loop
shrl
fwait
out
sbb
in
out
mov
xchg
mov
adc
xchg
or
repz
insb
ja
push
stos
push
fstps
jmp
or
sbb
push
rcr
fadd
push
jns
push
mov
mov
push
push
mov
insb
fsts
xor
inc
mov
jle
fwait
pop
orb
dec
and
inc
insb
add
je
cltd
clc
cmp
add
pop
sbb
cmp
cs
shl
mov
inc
push
mov
or
fnstcw
mov
pop
sbb
roll
and
xor
lds
add
lret
xor
dec
and
mul
dec
mov
cmp
shrl
add
out
pop
or
push
mov
lcall
jp
push
dec
mov
xor
loope
jmp
ficomps
cwtl
gs
cmp
or
xchg
test
nop
mov
adc
sbb
pop
repz
xchg
dec
iret
mov
imulb
pop
or
sub
test
mov
push
lds
mov
inc
inc
sarb
push
or
xchg
jl
inc
repnz
push
xlat
stc
ror
das
push
cmp
mov
sub
movsl
rolb
rorb
dec
daa
mov
je
pushf
pop
pop
aam
fs
push
pop
pop
sub
adc
repnz
in
jno
rolb
fwait
jle
cmpsb
dec
int
loopne
sahf
xor
ja
rcl
jno
movsl
mov
add
or
stos
movsb
pop
scas
dec
scas
sub
push
dec
xor
jp
sbb
jae
and
push
sub
jp
into
aas
mov
or
mov
cwtl
or
mov
pop
xor
and
inc
lret
or
pop
push
jle
push
xchg
and
adc
sub
mov
or
push
jp
mov
movsb
inc
jecxz
mov
or
and
jne
jl
cs
xor
fimull
jae
pushf
add
mov
sti
and
scas
cmp
ljmp
mov
in
fwait
dec
mov
add
cmp
push
test
or
push
mov
xchg
mov
leave
jl
sbb
cmpsl
fldt
pop
push
push
mov
aas
jle
movups
jle
fdivrp
dec
mov
jb
push
xor
insb
cmp
daa
fisttpl
subb
adc
fimuls
cmpsl
aam
stc
fwait
ja
push
ror
lds
movsb
xchg
fcmove
aaa
cmp
sbb
cmp
jmp
jecxz
mov
in
pushf
fsubs
and
cs
jmp
xlat
pop
int
imul
in
fsqrt
ljmp
ja
cmpsl
jp
mov
shlb
xchg
fdivrs
stos
pop
and
or
fwait
jecxz
fsts
sbb
inc
pop
outsb
adc
sbb
in
mov
adc
pop
cmp
aaa
push
push
fiadds
gs
lds
addb
mov
push
adc
sbb
imul
or
or
test
mov
lea
pop
divl
xchg
cld
jg
sbb
ficomps
leavew
and
pop
xor
idivl
push
mov
jb
push
mov
jp
pop
jae
stc
bound
push
inc
repz
push
mov
pop
dec
adc
sti
in
popa
mov
hlt
les
lahf
outsl
rcr
push
punpckldq
cmp
outsl
adc
xchg
clc
rorl
xchg
repz
fdivs
aad
mov
pop
or
push
test
sbb
ss
jecxz
insb
pop
push
outsb
int
hlt
cltd
mov
push
cmp
scas
imulb
das
pop
sub
sbb
ret
push
dec
cmc
mov
xor
mov
aaa
xchg
cmc
out
mov
and
scas
pop
pop
pushf
xchg
sar
lret
sub
push
pop
cmp
pushf
psrlw
lds
inc
test
jbe
pusha
xchg
minps
popa
xchg
adc
add
pop
es
sub
loop
pop
cwtl
and
mov
pop
pop
lods
add
outsb
aas
das
ret
into
dec
push
push
arpl
sbb
fmul
repz
pop
mov
jne
push
cmpsw
lret
popa
loopne
movsl
pop
pop
dec
int3
xchg
push
pop
enter
jecxz
mov
stos
jge
or
cmpb
mov
int3
das
mov
scas
jecxz
mov
and
jmp
bound
cmp
rcl
lcall
cmpsl
call
fnstcw
shrl
pop
ja
lret
mov
lret
sbb
and
out
sti
shll
and
adc
xor
bound
add
vandps
mov
lods
shl
mov
out
xchg
adc
inc
xor
add
jecxz
andl
shr
add
lcall
pop
mov
inc
xor
xor
and
cwtl
repnz
dec
or
cmp
scas
push
jecxz
mov
outsb
in
call
cmp
sub
jb
in
insl
dec
pop
jge
adc
aas
and
push
lock
es
jo
roll
cmp
xchg
mov
mov
mov
lret
lods
mov
enter
test
rcl
daa
jmp
inc
pop
xchg
adc
fstpl
icebp
adc
jne
notl
lds
push
das
jge
mov
and
push
inc
push
mov
imul
push
xchg
mov
sbb
sarb
jl
mov
add
sahf
add
fstp
mov
or
loopne
push
sbb
out
jmp
rcl
out
sti
movsb
out
mull
push
cmp
jge
sbb
mov
add
jp
daa
fidivrs
push
or
lea
movsl
not
mov
push
ret
mov
jle
lods
in
pop
push
jo
mov
aad
fucom
xchg
push
in
xchg
in
rclb
or
mov
mov
or
push
lret
mov
inc
mov
sub
jns
fcmovnb
pop
push
push
cld
inc
addr16
or
lret
outsb
dec
rol
into
push
add
lret
mov
add
cli
pop
imul
inc
mov
lods
rclb
push
das
and
stos
or
mov
lods
sub
repnz
sahf
lds
mov
pop
outsl
movsl
mov
popa
sbb
xchg
xchg
and
bnd
leave
ss
lea
push
mov
pop
in
sub
or
andb
lret
adc
fwait
adc
hlt
pusha
xlat
ja
xchg
mov
sti
push
das
push
icebp
mov
pop
sahf
jns
daa
mov
sub
nop
push
outsb
movsl
or
leave
jmp
arpl
or
push
lret
push
mov
add
push
mov
dec
rcl
test
aad
jnp
popf
iret
daa
rol
xchg
and
clc
notl
outsl
lea
add
shl
push
ret
loopne
cs
and
daa
xor
sbb
ret
sbb
pop
jo
adc
push
pop
push
mov
and
mov
fistps
leave
arpl
out
push
jmp
push
mov
fcomps
mov
sub
hlt
pop
lcall
mov
jne
push
shll
cmc
and
lods
lret
jle
dec
sub
fdivp
xchg
lret
ficomps
lret
push
pusha
xor
out
ds
aad
jle
push
es
or
out
jg
outsb
les
int3
imul
lock
dec
push
push
std
aad
adc
jb
inc
cld
jecxz
or
nop
cwtl
divb
lret
inc
sub
int3
in
push
and
es
adc
icebp
insl
lods
push
and
inc
outsb
sub
cmp
lods
jmp
xlat
add
xchg
stos
push
jmp
sub
push
push
insb
insl
pop
cmp
cli
xchg
jns
push
test
mov
outsl
sub
jo
loope
loopne
push
bound
dec
pop
dec
dec
xchg
into
pop
mov
cmpsl
rclb
and
cltd
sbb
or
push
outsb
clc
push
and
nop
sbb
scas
shrb
push
mov
inc
xchg
pop
inc
pop
cmpsb
rorb
jbe
jmp
adc
iret
sub
or
jmp
jbe
inc
std
mov
mov
jne
je
stc
pop
outsl
cld
sbb
pushf
dec
jmp
fisubrs
enter
mov
xchg
out
stos
rorb
mov
fidivrl
mov
adc
daa
jmp
enter
cld
insb
in
add
push
ret
jle
fcomps
pushf
mov
out
jb
loopne
jmp
insb
aam
mov
add
pop
pop
inc
pop
pop
fwait
mov
bsr
cmpb
mov
sbb
push
dec
dec
adc
sbb
pusha
push
mov
stos
push
jae
scas
dec
mov
mov
inc
addb
cs
jle
mov
call
push
movsb
jle
cmc
lret
sti
push
xor
adc
and
aam
rcrl
and
pop
leave
out
fldl
loopne
punpckhbw
inc
or
jg
fcom
cmp
decb
iret
test
mov
frstor
adc
icebp
lods
rcll
ss
and
push
push
or
shll
loop
mov
in
fucomip
shlb
call
cmp
mov
sbb
imul
scas
mov
inc
cmp
leave
jecxz
movsb
xor
mov
shll
sub
push
fmul
out
data16
je
jmp
divb
repnz
cwtl
addb
push
push
jns
lea
insl
sbb
test
addb
pop
leave
int3
in
lahf
ds
pop
fpatan
addl
cli
in
rcl
dec
aas
and
push
cld
pop
sub
into
roll
cmpsl
sbb
jb
jno
test
pushfw
sub
dec
push
test
mov
mov
xlat
jmp
xchg
inc
lret
and
mov
pop
adc
or
and
cmpsb
test
mov
mov
rcrl
xchg
test
pop
out
in
clc
jg
mov
jmp
sbb
rcrb
stos
loop
jp
or
jb
shlb
dec
dec
in
mov
pop
add
cmp
mov
jae
fimull
in
mov
cmp
pop
pop
xchg
nop
dec
inc
xchg
inc
dec
sbb
dec
ljmp
push
aas
enter
mov
mov
add
add
sbb
mov
pop
jns
hlt
cmp
dec
pop
pop
adc
xchg
mov
dec
ret
jo
leave
push
pushf
sbb
mov
ss
adc
adc
jns
arpl
out
test
adc
bound
push
jecxz
into
testb
push
cwtl
sub
add
fidivl
div
test
rcrb
fcomi
push
mov
cs
bound
rcrb
mov
sub
je
clc
pusha
repnz
add
mov
and
mov
add
cwtl
enter
shrl
fnstenv
scas
mov
and
sti
pop
push
sub
pop
xchg
iret
push
stos
dec
dec
insb
mov
pop
xchg
xor
push
leave
jmp
testb
pop
es
bound
push
popf
sbb
out
push
dec
dec
adc
movsl
dec
push
sbb
ror
xchg
dec
pmaxsw
fisttpll
cmc
and
test
mov
ret
inc
cmp
mov
test
push
mov
jmp
xchg
inc
hlt
push
sbb
sub
sub
or
testb
aas
adc
orps
push
sti
scas
fwait
gs
mov
pop
dec
mov
je
xor
inc
scas
sbb
shl
mov
repz
daa
dec
data16
aad
and
fwait
pop
dec
jb
mov
call
sbb
ret
push
push
testb
sub
sbb
out
loop
push
or
lods
stc
add
jmp
icebp
test
pop
push
lret
dec
cmp
dec
inc
jmp
adc
xor
dec
pop
negl
mov
mov
lret
sub
scas
push
push
add
mov
std
hlt
and
sub
in
xlat
int
fcompl
xchg
and
ljmp
popa
dec
int3
test
test
dec
jns
out
and
popf
push
pop
xor
add
ljmp
push
sub
out
aam
push
lds
jl
rcrl
shlb
add
ret
or
xchg
inc
movsb
lahf
lret
xor
push
cmpsl
jl
shrl
mov
fsubs
js
pop
das
adc
lea
lods
sub
enter
bound
push
mov
movsl
xchg
xor
or
xor
mov
or
shll
inc
in
cmp
pop
sarl
xorb
fstpl
out
fs
lret
inc
int
mov
xchg
dec
sbb
push
lcall
pop
lds
mov
mov
mov
adc
dec
push
insl
jmp
sti
js
mov
xor
aaa
push
jle
push
mov
cmp
in
lahf
movsl
shrl
int3
mov
andb
arpl
push
cmp
out
fisttpll
push
and
add
and
xor
adc
data16
orb
cmp
dec
mov
in
mov
xor
push
gs
ss
mov
addr16
sti
sarb
jl
aam
add
in
data16
scas
test
es
imul
or
jmp
notb
cmpsb
push
clc
push
movsl
and
jns
xor
lret
mov
lods
out
mov
clc
rorb
mov
fimull
push
popf
cmp
rclb
outsb
push
je
outsb
mov
adc
and
ss
pop
loop
in
xor
and
int3
sbb
movsl
pop
stos
rorb
out
daa
rclb
or
fisttpll
popf
mov
xchg
repz
jmp
mov
xchg
dec
sub
xlat
add
das
pop
fmull
ljmp
lcall
ficompl
sub
imul
mov
lods
inc
xor
aad
xchg
inc
pop
mov
int3
mov
jp
inc
cli
rol
mov
jb
pop
xor
push
fisubrs
xorb
hlt
repnz
out
cli
jae
cld
pop
ss
ss
jecxz
in
lea
sbb
pop
xchg
stc
xchg
dec
mov
fs
sbb
add
loop
mov
mov
fs
sub
aam
repz
dec
mov
mov
mov
mov
aas
dec
aam
push
sbbb
push
xchg
pop
adc
cmp
jbe
jp
arpl
sub
clc
out
and
jp
mov
gs
les
cmp
and
out
push
into
and
insl
or
jp
or
arpl
or
aad
aas
lds
clc
push
mov
jle
out
mov
in
pop
fisubl
loop
dec
add
mov
pusha
inc
fcomps
cwtl
jae
push
jge
mov
enter
xor
out
in
mov
imul
mov
jmp
bound
or
into
out
dec
dec
test
repnz
push
loop
xlat
pop
mov
xor
sub
pop
addb
fwait
aaa
jmp
js
sbb
ret
rolb
push
dec
mov
pop
cmp
subb
clc
lds
pop
jmp
mov
loope
add
sbb
pop
mov
shl
jmp
aas
cltd
into
repnz
push
dec
movsl
orb
lods
ja
hlt
nop
shl
and
in
pop
pop
sbb
leave
cmp
lods
fcmovne
mov
push
push
fidivs
out
mov
bound
jb
adc
cmp
push
pop
jbe
int3
dec
inc
outsb
dec
xlat
aaa
pop
aam
mov
sbb
xchg
xor
jl
pop
ficoml
aas
icebp
mov
push
cmp
aaa
sbb
dec
mov
pop
mov
pop
mov
push
adc
lock
daa
push
fisubrl
test
pop
out
push
push
jge
fisubl
rorl
popl
xchg
fimull
fstpt
inc
pop
pop
xor
dec
movsl
push
shr
push
movb
dec
aas
std
lahf
sbbb
mov
add
and
xchg
inc
leave
cmc
lods
lahf
mov
rorl
ficomps
test
adc
sahf
sub
bound
sbb
je
movsb
je
pop
mov
mov
mov
out
and
pop
js
add
ljmp
mov
or
jle
xlat
and
lods
outsb
mov
or
aas
and
sub
push
or
push
xchg
lock
shrb
add
lds
push
lock
inc
loopne
rorl
adc
aam
imul
rolb
out
xchg
pop
aam
ficomps
push
stos
icebp
cmpsl
mov
push
mov
fdiv
nop
dec
sbb
or
stos
mull
repz
mov
leave
jl
das
push
pop
mov
pop
push
rcll
lods
xchg
jne
mov
mov
ds
mov
lods
mov
or
jmp
je
orl
sub
mov
outsb
lea
or
fiadds
fwait
mov
ljmp
fdivr
jae
sub
cli
nop
data16
sub
mov
cwtl
mov
lcall
stos
jnp
mov
sti
or
popa
xor
or
loop
mov
ljmp
adc
lcall
gs
and
inc
pop
pop
hlt
jne
addb
incb
scas
dec
rclb
cbtw
call
scas
mov
pop
in
mov
pop
lds
and
sub
mov
cwtl
sub
inc
cs
arpl
xchg
shr
out
cmc
pop
mov
call
call
push
push
dec
push
lea
scas
loope
jno
sub
ret
into
adc
pop
push
xchg
in
mov
jl
hlt
scas
rclb
cmpsl
sbb
iret
xchg
insl
pop
sti
sti
sbb
dec
insl
sbb
cmp
jb
mov
scas
cmpb
in
mov
into
sub
loope
or
push
adc
rclb
sub
test
lahf
sub
pop
mov
mov
pop
mov
jbe
pop
cmpsb
and
dec
dec
je
dec
cwtl
cwtl
inc
mov
jmp
mov
cwtl
fstpl
push
push
inc
adc
cmc
jb
lea
js
ljmp
jmp
push
inc
rcrb
and
jp
outsb
inc
hlt
push
into
and
jle
fs
movsb
xor
jmp
mov
cmc
iret
icebp
mov
int3
enter
add
mov
les
sbb
lahf
dec
cmpsl
movntps
mov
in
xor
dec
mov
inc
outsb
mov
test
add
sti
dec
pop
out
xor
jge
hlt
xor
cmp
icebp
push
inc
fcoms
insb
repnz
mov
xchg
jge
mov
sti
into
aaa
gs
pop
mov
shll
pushf
xor
jle
imul
dec
mov
push
repz
fiadds
test
test
mov
mov
pop
repnz
sbb
add
push
sub
mov
in
pop
lcall
push
fiadds
mov
outsb
test
add
xor
movsb
xchg
inc
and
dec
jmp
xchg
push
imul
pop
stos
insl
js
jg
xlat
add
repnz
mov
scas
xor
cmp
cmp
shrb
aas
cmp
jle
xlat
cmpb
outsb
jnp
pop
dec
pop
fidivrl
mov
test
pop
mov
gs
shrl
xchg
repnz
lahf
ret
or
shl
add
adc
xchg
rol
push
call
cmpsl
imul
mov
dec
push
push
add
mov
xchg
test
test
int
mov
jb
pop
ljmp
fisttpll
aad
pop
shrb
or
in
adc
lret
pop
cld
and
fsubr
or
pop
pop
fxch
or
loope
repnz
jg
push
inc
and
pop
sub
repz
push
mov
xor
dec
xchg
inc
hlt
cmp
lods
data16
fildl
mov
cmp
jle
ds
lahf
bound
nop
repz
rcrb
in
int3
add
int3
outsb
pop
push
mov
mov
andb
mov
loopne
adc
inc
fs
ja
lods
pop
sub
cmp
add
es
pop
lahf
add
shrb
subb
xchg
shrb
mov
or
hlt
dec
jmp
out
pop
jb
pop
pop
divb
test
inc
pop
les
frstor
movsl
divb
adc
ficoms
dec
adc
jmp
mov
movl
xlat
mov
mov
das
mov
movsl
mov
divb
ret
adc
mov
or
sub
fcmove
mov
pop
xor
pop
xor
rcrb
data16
adc
jnp
shrb
fstps
jne
data16
movsb
dec
add
mov
out
lods
adc
test
pusha
dec
and
cmp
dec
adc
xor
and
push
pop
jge
pop
and
or
push
or
adc
push
rorb
enter
xlat
push
mov
cmc
ljmp
bound
pop
ret
rep
clc
fsubl
inc
sbb
inc
aaa
mov
cltd
sbb
dec
clc
inc
mov
fs
push
iret
pop
push
and
sub
add
repz
data16
fdivrs
mov
sub
notb
sbb
pop
mov
lret
outsb
push
jbe
int3
inc
jns
pop
lods
pop
cmp
cmp
xchg
aad
dec
or
sub
pop
nop
ja
lahf
roll
pop
mov
lret
sub
cmpsl
out
sahf
add
push
mov
cmc
pop
fidivl
add
int3
sbb
pop
out
and
cmp
mov
cli
stos
mov
bound
pop
adc
js
and
mov
out
cmc
jne
inc
aam
push
fistps
movsl
in
stc
stos
gs
loope
sbb
into
hlt
mov
or
enter
jns
mov
cmp
pop
outsb
xchg
mov
bound
or
enter
icebp
fmul
or
outsl
outsb
and
xchg
inc
shrl
aad
out
mov
popa
pop
nop
sbb
xor
sbb
mov
xor
popf
int3
mov
mov
out
jb
adc
pop
cmp
lret
mov
int3
ret
mov
ds
mov
std
lds
pop
xchg
aas
cmpsl
fnstcw
mov
mov
out
add
int
mov
ret
mull
cltd
pop
jle
cmc
cmpl
jmp
sbb
inc
imul
adc
xlat
rorb
popa
pop
cmp
lret
scas
jle
hlt
cwtl
pop
enter
adc
xor
push
mov
lahf
fcomps
ret
dec
scas
stos
push
cmp
sti
pusha
addr16
fcmovu
pop
cwtl
enter
fdivrs
ret
shlb
and
cmc
push
push
cwtl
pop
data16
pop
scas
sub
jp
xor
add
stc
xchg
pop
mov
cld
push
cltd
shl
cld
push
pushf
ljmp
out
stos
xchg
aas
xchg
stc
lea
push
sbb
shrb
ljmp
cmpsl
inc
imul
pushf
rcl
jl
mov
dec
pop
sub
out
mov
xchg
pop
int3
add
cmpsl
sub
clc
sbb
pop
dec
or
int3
lret
test
pop
fidivs
imul
mov
pop
xchg
cli
pop
out
pop
das
pop
inc
push
pop
imul
jne
inc
cmp
lret
mov
push
out
rcl
scas
pop
aas
add
daa
pop
lret
sbb
test
arpl
repnz
mov
bnd
mov
das
jecxz
mov
in
sti
sub
rorl
clc
jbe
dec
and
mov
pop
mov
sub
jnp
lahf
mov
pop
call
int3
xor
ds
mov
jge
lock
or
scas
mov
int
stos
sub
aas
push
push
xor
pop
into
and
stos
push
rclb
popl
movsb
rclb
pop
cmp
xor
iret
hlt
enter
sbb
sbb
divb
cmpsl
dec
sahf
inc
iret
addr16
adc
mov
push
repz
outsb
jg
mov
pop
jg
adc
cmp
mov
mov
pop
js
es
sbb
mov
jno
aad
ljmp
out
push
lahf
adc
add
add
and
sbb
lods
lret
int
repnz
add
push
cmc
push
jp
add
jp
xor
loope
bound
mov
mov
inc
out
jb
sti
dec
scas
pop
in
ror
imul
int
aas
rcrl
dec
mov
iret
push
lcall
stc
fisttps
pop
int3
scas
mov
add
js
push
pop
mov
xlat
imul
cwtl
mov
lret
sub
jg
ljmp
cmpsl
sub
cmp
imul
into
adc
sbb
jmp
or
and
cs
pop
divb
rcl
sbb
aam
test
fmuls
std
shrl
sbb
jmp
jns
std
das
inc
xchg
lds
jle
push
mov
imul
sub
mov
lret
dec
mov
jb
ja
pop
int
dec
popf
push
cmp
pop
scas
inc
aaa
out
xchg
sarl
mov
into
mov
das
jnp
leave
cmp
push
inc
xlat
jge
call
jle
je
or
popf
jmp
adc
aad
mov
clc
lret
in
lahf
or
dec
je
es
out
aaa
divl
inc
scas
das
mov
lea
inc
ret
sub
aad
jmp
sub
shlb
inc
loop
lea
mov
test
pop
mov
sbb
shll
ja
add
mov
mov
jbe
cmpsl
fwait
jns
jae
ret
fsts
sets
jp
inc
sub
adc
jmp
lret
loop
mov
sti
jbe
adc
mov
adc
fidivrl
gs
mov
xchg
ljmp
push
push
je
rorl
cmp
std
out
gs
mov
sub
cmc
push
out
xor
xchg
mov
mov
cltd
jno
data16
cli
and
int
inc
fcomip
jne
push
and
cmpsb
std
int3
mov
sbb
inc
rcrl
outsl
hlt
int3
scas
add
lret
cltd
jg
lret
ret
cmp
sub
lcall
adc
insl
or
cltd
mov
push
and
scas
mov
push
fucom
push
xchg
incl
or
xchg
repnz
fdivs
push
fwait
jmp
lods
test
mov
fimuls
mov
lahf
popf
jno
jbe
adc
dec
push
jle
enter
add
lds
or
fsubs
jne
lds
in
push
mov
sbb
dec
mov
sub
lahf
pushf
and
pop
jb
pop
aaa
cmc
imul
jbe
out
sub
jmp
fisubrl
jge
jmp
testl
xor
jle
rclb
outsb
scas
bound
sbb
pop
orb
and
rorl
fistl
jecxz
push
mov
divl
js
adc
sub
loope
lods
mov
popa
cli
add
push
lret
jb
shlb
daa
shrb
adc
cld
push
inc
fldenv
outsb
pop
xor
push
or
in
outsb
bound
jae
pop
sarl
stc
adc
inc
xchg
rcll
cmp
adc
pop
sbb
pop
sub
jno
dec
xor
sarb
loop
sub
xor
xor
dec
adc
test
lahf
lock
subb
jbe
cmp
sti
lcall
push
sbb
shlb
cmp
pusha
dec
lods
mov
sub
cli
jno
mov
or
out
mov
pavgw
ret
xor
ljmp
pop
push
inc
dec
mov
pop
mov
mov
inc
jl
inc
pusha
outsb
int3
rcll
pcmpgtd
and
arpl
push
sub
mov
or
mov
push
mov
sbb
int3
fisttpl
push
cmpsl
cwtl
push
repnz
into
lahf
xor
sub
mov
int
lea
shr
cmc
push
cmp
outsb
pushf
jecxz
aad
mov
add
mov
ja
cmp
rorb
mov
std
test
fcoms
cmp
and
or
mov
fs
pop
or
dec
stos
mov
mov
divl
push
outsb
jne
adc
or
push
push
mov
lret
inc
cmp
and
ret
sti
mov
xchg
push
xchg
jmp
fiadds
out
loope
push
cmp
int
mov
sbb
lock
lock
xor
ficoml
aas
pop
cvtpi2ps
xchg
sarl
inc
and
test
sub
imul
fcompp
ljmp
sbb
jbe
xchg
push
push
push
cmp
dec
xchg
fistps
fistpll
lret
popf
mov
fsubl
lds
adc
sti
push
jmp
push
icebp
cmovnp
inc
mov
addr16
xor
fistl
inc
jge
add
in
outsb
pop
aas
clc
call
jp
adc
xlat
sbb
gs
jle
test
ret
loop
push
pusha
or
add
jecxz
js
push
ret
mov
sbb
fdivrl
cwtl
mov
insb
and
xor
pslld
sarl
jp
lods
in
mov
xchg
ljmp
loop
push
xor
js
sub
outsl
hlt
hlt
push
lcall
lret
loope
inc
subb
mov
xlat
sbb
rorb
and
push
xchg
fwait
xchg
xor
lods
test
filds
sub
dec
and
fidivl
pusha
push
arpl
xor
push
sbb
xor
jle
les
cs
pop
pusha
loop
insl
or
leave
xchg
sbb
ljmp
aas
out
or
fcomps
pop
sbb
bound
pusha
fsubrs
push
sbb
or
mov
test
and
fstl
push
out
js
hlt
pop
mull
or
mov
rcrb
push
jl
inc
pop
sub
mov
notb
sbb
jns
lahf
lods
push
mov
daa
data16
dec
pop
xchg
stos
ret
das
xchg
pusha
cltd
cmp
icebp
adc
mov
cmp
fisubrl
inc
push
not
xlat
loopne
pop
imul
in
mov
aaa
pop
repnz
xchg
dec
movsl
jl
pop
xchg
xor
push
movzbl
cmp
adc
arpl
mov
cwtl
or
mov
arpl
fscale
cmp
and
and
xchg
movsl
cmpb
pusha
xchg
cmp
mov
inc
gs
pop
sub
jg
pop
pop
or
push
sub
or
ja
cmp
lds
push
enter
lahf
das
andb
pop
push
test
shr
push
lcall
loop
push
je
or
xor
pop
imul
xlat
daa
mov
jo
aam
push
sub
mov
sub
jo
addr16
addr16
pushf
outsl
hlt
jge
sbb
xor
dec
mov
add
mov
push
fidivs
pop
jg
push
lret
adc
lea
inc
out
mov
and
push
push
pop
pop
fstpt
paddusb
pop
push
or
dec
push
int
repz
icebp
inc
and
add
fstps
sar
push
mov
iret
andl
cli
pop
push
insb
jb
sub
shll
loop
loop
mov
mov
jo
inc
ret
dec
dec
jmp
push
stc
and
mov
enter
lods
gs
adc
fadds
jle
cwtl
lods
andb
sub
and
in
xchg
aas
orb
xchg
xor
pop
jo
adc
imul
mov
xchg
outsb
sbb
and
in
inc
mov
mov
aaa
mov
mov
mov
loopne
fldcw
pop
ds
pusha
xchg
fs
in
pop
call
ss
dec
stc
add
mov
test
aaa
or
ljmp
int3
rolb
clc
fwait
sub
fistps
push
pop
loopne
sbb
mov
int3
outsl
mov
xchg
cmp
pop
mov
mov
lret
mov
es
sbb
ljmp
aam
mov
lret
xor
mov
sbb
push
inc
iret
movsl
cli
aad
xchg
pushf
xor
inc
das
enter
decb
lcall
js
repnz
mov
sub
xlat
inc
adc
adc
data16
push
sbb
stos
pop
jo
rclb
jecxz
inc
adc
mov
add
cli
push
movsb
jb
mov
mov
mov
divb
mov
iret
outsl
fadds
push
mov
fsts
rcll
loop
push
out
cmp
inc
pop
pop
adc
xchg
pop
inc
cwtl
inc
xchg
daa
sbb
or
mov
jge
sbb
adc
inc
jns
iret
xor
mov
int3
dec
cmpsb
aam
or
push
jl
in
and
cltd
sbb
stos
cmc
xchg
loope
int
push
jo
xor
push
shrb
loopne
hlt
aam
test
sbb
cmp
out
or
cmpsb
xchg
jp
add
pop
lret
xchg
cmp
stos
subb
daa
sbb
nop
dec
imul
and
and
ss
shr
loope
jb
dec
mov
leave
cmc
jae
mov
push
sub
sbb
pop
or
and
stos
je
scas
stc
pop
cmp
xlat
jmp
enter
jle
ficompl
ret
push
fldcw
fdivrs
aas
xor
cmpsb
repz
mov
jmp
inc
adc
inc
mov
lods
mov
sbb
push
inc
pop
or
mov
mov
push
jge
push
pop
and
add
dec
sub
mov
mov
sub
mov
subb
jmp
push
std
xchg
push
and
xchg
icebp
rorb
mov
ljmp
cmp
lods
dec
sti
cwtl
sarb
push
adc
pushf
popf
pop
aam
test
or
sub
jp
adc
adc
cmp
push
leave
push
sarb
mov
pop
mov
mov
fildll
sbb
fadds
movsb
fwait
loope
repnz
sbb
adc
lcall
or
jmp
int
pop
push
adc
lret
hlt
ds
outsl
cltd
fmulp
pop
in
pusha
add
inc
xchg
je
rcrb
sarb
loop
jae
sbb
inc
sti
jp
adc
ljmp
lret
xor
out
inc
or
push
int
xchg
sahf
mov
fmul
iret
jb
nop
les
std
sub
mov
push
jge
cwtl
cmpl
int3
pop
fidivl
pop
push
andb
loopne
jecxz
js
shll
push
mov
fstpt
in
pop
mov
inc
decb
pusha
xchg
ljmp
in
in
mov
stc
out
sbb
mov
loop
push
aaa
add
and
jmp
test
es
inc
cmp
jg
int
leave
lret
dec
das
fnsave
pop
stc
jp
in
push
push
lahf
lds
dec
push
and
lahf
bound
pushf
mov
push
insl
jmp
les
push
inc
sarl
mov
jne
inc
fcompl
insl
loop
sub
mov
iret
outsl
shlb
pop
sub
das
shrl
xchg
fisttpll
jbe
xchg
push
loop
scas
push
xchg
addr16
ja
lods
mov
mov
in
push
cmp
inc
in
gs
and
jne
sti
adc
movsl
cli
jle
push
sbb
jmp
cmpsl
jae
loopne
push
sbb
mov
stc
cltd
mov
aad
movnti
scas
call
push
push
jbe
into
lea
adc
sub
pusha
cld
fisubrl
loope
adc
add
lret
es
bsf
out
mov
sbb
stos
popa
int
mov
push
sub
push
fcoml
out
pop
int3
int
loopne
insb
jne
mov
mov
out
inc
cli
stos
insb
mov
or
jmp
push
das
push
mov
fisubrl
pop
std
out
cs
dec
jg
pop
xor
sbb
rcrb
fadd
mov
sub
sti
dec
push
inc
aam
test
ljmp
mov
cmp
push
in
fnstenv
inc
rorb
bound
clc
aas
xchg
aam
sub
or
les
jbe
jl
mov
out
pop
iret
ficoms
ret
inc
je
fdiv
jg
mov
ret
fistpll
cmp
jp
in
adc
push
int
lret
int
icebp
jecxz
xor
pusha
test
outsb
push
test
out
jne
loop
enter
mov
dec
jl
scas
and
in
sbb
jle
jne
sti
cwtl
pop
sbb
mov
and
jge
ret
and
outsb
lea
adc
cmp
mov
add
js
mov
push
arpl
test
sbb
xor
test
mov
insl
cmc
pusha
pop
and
mov
cmpsl
xlat
daa
push
jns
jmp
xchg
pop
mov
xchg
sub
jg
mov
mov
lods
jmp
mov
daa
and
jb
ljmp
out
leave
jmp
testb
mov
push
outsb
and
pop
push
scas
mov
pop
hlt
lret
outsl
lea
push
int
jnp
sbb
loop
lods
in
mov
dec
mov
cmp
shll
lds
cmp
push
mov
xchg
hlt
mov
lret
adcl
lret
insl
insb
sbb
and
sarl
imul
rcrb
adc
mov
jp
ds
hlt
dec
push
imulb
jae
mov
xchg
cmc
mov
mov
push
iret
dec
add
shll
push
push
or
add
push
fisubrl
push
rorl
pop
ss
lds
ljmp
jge
pop
mov
xor
mov
push
sub
adcb
and
pop
add
daa
dec
out
sub
rorl
ljmp
inc
add
daa
mov
mov
jmp
jp
inc
xor
sti
test
add
daa
mov
flds
add
jnp
imul
cmp
fisubs
inc
dec
out
dec
xchg
repnz
dec
cwtl
xlat
jge
std
pop
xchg
push
jmp
jl
dec
inc
xorl
shl
fcmove
push
inc
sbb
nop
clc
inc
pop
xchg
push
mov
sbb
popf
mov
repz
or
cld
mov
mov
into
ret
xor
and
int3
jl
sub
dec
or
cmpsb
push
mov
shll
pop
dec
mov
push
arpl
int
push
push
or
sahf
and
testl
pop
sbb
je
and
dec
outsb
pushf
ret
sbb
dec
les
dec
xor
pop
jl
xchg
pop
and
loop
cmp
ds
insb
or
mov
test
xchg
mov
mov
push
jmp
test
imul
sbb
aas
pop
and
sub
cwtl
iret
mov
ret
shlb
add
mov
movsb
push
ret
mov
mov
popa
xor
notl
xchg
outsb
mov
loop
dec
pop
xchg
fnstcw
fwait
pop
push
iret
lret
or
cmpsb
lret
push
aaa
mov
clc
cltd
test
xchg
dec
call
cmc
sbb
mov
repnz
fadds
lret
mov
add
and
pop
out
mov
ss
jmp
push
sub
test
mov
rorl
xlat
cli
je
xchg
mov
xchg
lret
cmpl
lret
xlat
pusha
mov
and
jne
inc
lret
push
arpl
test
sarl
push
stc
xchg
jnp
lret
xor
dec
jno
sbb
lret
pop
pop
adc
mov
int
sahf
lret
add
cld
inc
subb
out
repz
pop
pop
sub
hlt
loop
sub
sbb
lret
lret
rorl
jge
push
out
daa
int3
add
pop
int3
fldt
sbb
cmpsl
adc
jae
je
aaa
jne
cltd
adc
imul
sbb
xlat
mov
jecxz
call
into
fcom
pop
or
xchg
roll
lret
lds
lods
cmpsb
lods
stc
mov
js
sbb
sti
movsb
lret
fs
mov
jecxz
mov
mov
add
xchg
stc
mov
lret
dec
sbb
inc
inc
xchg
push
loop
or
loope
adc
shrb
lret
dec
ret
push
cmpsb
stos
jo
std
hlt
lret
ljmp
lret
xchg
or
lret
xchg
popf
ud2
das
cmc
mov
rorb
lret
jl
out
xchg
lods
cli
scas
lcall
rolb
loope
rclb
jo
fistl
lret
loopne
xor
dec
shll
lret
je
inc
aad
sub
mov
push
push
rcll
lret
mov
lret
dec
dec
adc
shlb
pop
add
in
in
xchg
inc
xor
outsb
mov
fs
nop
push
push
lret
push
mov
sub
xchg
xchg
lret
enter
ljmp
pop
outsb
jbe
sti
andb
ficoms
lock
hlt
in
ljmp
and
movsb
pop
pop
pop
jo
loope
movsb
ja
pushf
adcl
lea
cmpsl
outsb
cs
push
xor
push
movsl
movsb
cmp
mov
inc
ffreep
jp
out
imul
jecxz
or
push
fisubrl
aam
loope
jo
jae
pop
and
sbb
jmp
dec
sub
dec
icebp
lahf
sahf
mov
lods
mov
push
out
lret
jp
jmp
loop
mov
jl
bound
aad
stos
pop
mov
push
jbe
mov
aas
test
std
dec
push
rcrb
add
cmc
mov
add
xchg
rclb
imul
dec
nop
sbb
pop
or
outsl
adc
mov
sub
loop
sub
into
xchg
dec
push
arpl
adc
sbb
aad
stc
mov
fdivrs
sub
lods
sar
mov
pop
stos
ret
push
jge
out
and
test
xchg
push
stos
fwait
sbb
push
popa
pop
sbb
push
imul
dec
jmp
leave
xchg
xchg
jbe
or
sbb
push
jg
mov
jmp
pop
sbb
out
pop
ljmp
cmpsl
nop
cmpsb
rorb
mov
mov
sbbb
sub
sub
lahf
jp
das
xlat
jns
jnp
stos
cltd
leave
push
and
push
jns
pop
inc
mov
jmp
pop
lods
add
pavgb
push
push
push
jmp
inc
push
pop
sub
pop
fidivl
pop
movsl
push
jbe
cltd
pop
jnp
into
adc
dec
xchg
addr16
and
rclb
faddl
popf
sbb
xchg
addr16
in
rclb
pop
mov
sbb
out
xchg
je
pop
lds
outsl
mov
dec
xchg
inc
mov
pop
data16
dec
aas
icebp
cli
or
or
ret
or
inc
mov
test
push
ret
add
lret
imul
aas
xor
rcr
xchg
pop
mov
jae
cmp
xchg
lea
mov
adcb
xor
sbb
lods
test
sub
mov
and
fs
mov
movsb
mov
mov
cmp
cwtl
mov
and
xlat
adc
sti
das
push
xor
aam
dec
sahf
cmp
xor
or
mov
test
inc
leave
mov
and
cwtl
insl
mov
je
loop
clc
pusha
push
pop
jg
push
bound
scas
jno
leave
mov
lcall
adc
jle
adcl
inc
add
mov
out
add
cwtl
popf
fsubrs
inc
add
push
jle
andl
bound
rcll
or
or
rcrb
xor
js
xchg
lret
and
rcrb
xchg
les
je
push
int
mov
xchg
mov
and
ljmp
mov
mov
adcb
or
nop
jbe
into
inc
mov
test
adc
repnz
inc
lret
sub
jmp
dec
test
or
mov
xorl
push
jno
lods
push
cmp
cmp
js
cmp
jle
shll
nop
pop
scas
ds
rorl
jno
daa
add
inc
mov
int3
xlat
xchg
outsb
cmc
lock
aaa
call
stc
into
jae
cltd
shrb
test
mov
mov
popa
push
or
push
sti
sub
jns
ret
xor
inc
cli
fildll
pop
mov
lret
cmp
iret
mov
pushf
mov
in
jge
vpsrlq
add
dec
fmulp
pop
inc
jl
lcall
sbb
push
sub
aaa
repnz
mov
shr
xor
sarl
mov
cmp
out
xchg
mov
push
sbb
das
fwait
pushf
int
imul
andb
cmc
je
ds
in
jle
call
scas
mov
addb
loop
es
or
mov
pushf
or
mov
sahf
test
jo
or
aas
jnp
repz
mov
iret
fildll
push
jp
rep
imul
jp
xchg
mov
and
bound
jne
xor
xlat
in
outsl
loopne
or
test
pop
inc
scas
add
mov
orl
cmp
pop
or
dec
push
jp
test
dec
shlb
push
push
lea
sub
xchg
push
sbb
negb
xchg
testl
cmp
into
pop
stc
adc
pop
in
dec
mov
push
mov
cltd
vzeroall
or
lods
push
fsub
pop
push
dec
adc
shl
jmp
adc
scas
mov
push
arpl
inc
pop
add
adcb
insb
xchg
aam
push
bound
inc
push
ja
push
ds
push
adc
hlt
mov
in
pop
jae
je
and
rol
dec
push
push
outsb
data16
movsb
push
sub
inc
pop
pop
push
xor
cmc
frstor
jge
push
cmp
dec
push
cmp
sub
cli
aam
adc
mov
mov
jmp
int3
inc
pop
jno
rorb
cmp
lods
aas
shld
into
test
sahf
sub
cld
cli
sub
cli
movsb
mov
and
popa
test
push
dec
lods
loope
cmp
in
dec
adc
in
dec
sbb
ret
cmp
or
pop
testb
jecxz
sub
xor
insb
mov
insl
push
and
push
push
cmc
loope
lea
lds
xor
xchg
xchg
sbb
data16
add
pop
test
in
fadd
jno
gs
cmp
add
inc
ficoms
inc
or
scas
cwtl
pop
mov
lea
test
jp
mov
mov
xchg
mov
sub
push
mov
sub
sahf
fdivl
cmp
call
mov
test
xchg
sbbb
lds
xchg
jb
dec
mov
pop
fwait
pop
jmp
push
sub
sbb
or
or
adc
push
dec
fistpl
xchg
mov
mov
insl
mov
ret
rcrb
punpckhwd
sbb
jecxz
push
adc
and
ds
out
dec
fcoms
push
aas
pop
pop
outsl
je
dec
addr16
inc
mov
ss
mov
iret
in
es
insb
dec
ss
cmp
mov
outsl
ljmp
sub
dec
dec
mov
repnz
jp
xor
inc
jnp
ret
lds
xor
mov
pop
push
out
mov
pop
test
test
mov
sbb
mov
sub
sbb
inc
sbb
mov
inc
ficoml
mov
aaa
movsl
stos
jmp
fs
mov
or
iret
lret
loope
cmpsb
and
sbb
and
push
pop
cld
mov
out
insl
add
cli
dec
cld
movsl
push
add
push
repnz
repz
pop
rcrl
loopne
push
sbb
jmp
and
mov
in
nop
enter
dec
or
cmp
push
adc
mov
add
push
daa
fwait
aas
pop
jg
adc
inc
jg
arpl
out
jne
xchg
sub
int3
sub
aam
and
mov
hlt
xor
adc
push
pop
movsb
movsb
pop
mov
adc
fcoms
jno
scas
cs
cmp
xchg
and
jle
out
dec
add
out
add
repz
xor
mov
push
fidivrs
and
scas
pop
mov
ret
jmp
xor
pop
outsl
pop
and
jmp
dec
fs
mov
mov
lret
pop
sarl
fs
xchg
outsb
rclb
ret
insb
jmp
fstl
cmp
mov
or
adc
gs
xor
cld
xchg
pop
loop
dec
subl
sbb
leave
les
sbb
int3
sbb
aaa
stos
jle
hlt
int
imul
dec
jl
out
addb
pushf
jbe
and
or
add
mov
jl
popf
insb
sbb
and
xchg
add
adc
pop
adc
in
push
aad
jae
out
lods
lahf
cmovne
and
mov
cltd
adcl
pushf
inc
int3
repnz
ljmp
das
adc
cltd
aas
sbb
fisubrl
pop
and
pop
jge
je
dec
inc
mov
shlb
cltd
and
push
lret
sub
mov
mov
jnp
or
dec
push
xorb
ret
add
imul
and
mov
arpl
dec
iret
jecxz
cmp
out
aad
mov
cmpsb
js
insl
jne
xor
push
mov
adc
xorb
rclb
push
fs
jne
jmp
movsl
push
sbb
ficomps
hlt
mulb
cmpsl
push
cmp
jmp
lods
fcoml
dec
into
lret
pop
daa
cmpl
lret
ret
cmp
cli
mov
js
mov
mov
cmp
imul
in
int3
fidivl
push
and
add
testl
jl
andb
or
shlb
mov
push
mull
popf
cmp
dec
cwtl
add
mov
cmc
fistl
mov
dec
jb
jle
mov
in
shrb
out
xor
or
push
mov
lea
into
adc
mov
stos
scas
inc
les
aas
mov
inc
lock
xchg
adc
ljmp
fldcw
fidivl
push
vpmuludq
out
push
dec
dec
or
xchg
shrl
pop
jnp
stc
jge
adc
imul
cmpsl
imul
scas
sub
inc
adcb
orb
repz
sub
or
into
je
cwtl
push
idiv
pop
sbb
push
dec
bound
popf
sub
mov
push
pop
or
shl
mov
aas
popa
pop
fs
mov
fcompl
stos
and
mov
scas
adc
loop
fisubl
push
add
jge
int
scas
pop
push
sub
in
mov
jbe
inc
inc
jb
sbb
mov
test
call
cwtl
adc
out
xor
repnz
or
push
lret
sbb
lret
mov
pop
lret
pop
fdiv
das
mov
jns
stos
jmp
cli
fcoms
lret
push
cmp
sbb
or
sub
dec
dec
xlat
sar
and
mov
push
out
add
stos
jg
stc
jle
inc
mov
fs
shrl
mov
push
out
fwait
addr16
cmp
lret
movsl
cmp
mov
and
stos
inc
fs
pop
repz
movsl
cmpl
mov
rol
aad
and
inc
pop
cmp
lret
ds
out
cmp
mov
and
pop
stos
ja
jae
xor
iret
lcall
cmc
and
pop
lret
mov
xor
push
mov
mov
cmc
fdivrs
popa
mov
lret
xchg
mov
test
lret
adc
fcmovu
pop
or
push
icebp
sti
cli
inc
out
xlat
lock
dec
fwait
dec
maxps
pop
or
mov
xlat
das
orb
stc
xchg
mov
addr16
xchg
mov
pop
cmp
mov
push
lret
enter
imul
push
cmp
inc
stos
add
lcall
movsl
lock
sbb
jp
lret
pop
movsb
sub
pop
cmp
jns
sbb
or
push
lret
cltd
sub
fldenv
mov
lret
loope
lahf
mov
pushf
inc
mov
movl
into
xor
mov
fsubr
or
pop
push
xchg
dec
lret
in
mov
add
lret
jae
jne
xchg
jo
adc
sub
daa
mov
lret
mov
aad
imul
insb
scas
sub
sahf
fidivrs
sbb
lret
stos
mov
push
stos
bound
imul
sub
add
popf
dec
xchg
lret
cwtl
mov
loopne
in
lret
jno
pop
stc
push
cli
lret
inc
push
and
xchg
push
sahf
daa
out
aad
cli
cmp
movsl
mov
shll
dec
fldt
ss
jge
dec
add
lret
pusha
xor
add
and
lret
lcall
xchg
aas
std
or
int
xor
imul
sahf
or
cmpsb
mov
pusha
or
mov
addb
inc
cmp
movsl
xor
push
inc
int
popa
adc
out
jge
cmp
rcl
lret
stos
inc
into
xchg
jnp
mov
jmp
xchg
mov
mov
pop
leave
stc
sub
mov
mov
jmp
or
fwait
insb
jnp
shl
dec
push
out
mov
fidivrl
mov
adc
cli
lret
pop
xor
and
lds
adc
mov
inc
xor
sbb
test
sub
sbb
lahf
mov
pop
mov
jecxz
test
lret
fildll
lret
rorl
dec
push
rcrb
clc
aaa
js
dec
lahf
fcmove
inc
cmpsl
xchg
test
lcall
js
adc
sbb
or
roll
jbe
push
repz
in
pushf
stos
pop
inc
mov
cmpsl
pop
push
hlt
or
lret
push
add
ljmp
add
lret
or
and
aam
lea
jecxz
lret
bswap
call
jmp
andl
push
fadds
repz
imul
xor
das
xor
mov
xorl
fidivs
lret
lods
sbb
js
lret
addb
push
mov
or
repz
xchg
ficompl
cld
sti
cltd
pop
mov
mov
mov
mov
mov
adc
jl
fnstenv
lret
pop
test
test
stos
push
pop
adc
shlb
adc
mov
into
ror
aas
sub
jnp
jb
mov
push
ds
xor
sbb
adc
ljmp
dec
mov
pop
adc
cmc
jne
popl
adc
aas
lock
shrb
mov
push
jae
jmp
sbb
xor
mov
ret
movsl
aad
jns
not
pusha
mov
cltd
xchg
mov
inc
cmp
mov
sbb
xchg
negl
and
lret
dec
sbb
pop
lea
add
lret
push
jp
out
fidivl
frstor
ds
stos
fsubrl
mov
adc
lret
subb
dec
loope
lret
negb
or
push
sub
stos
pusha
or
movsb
je
scas
sbb
shrb
lea
ljmp
mov
or
popf
mov
xchg
mov
xor
int3
mov
popa
aaa
cli
mov
add
add
fcomp
mov
cld
test
sti
xor
lret
in
nop
jb
inc
lret
xchg
mov
xlat
fwait
lret
int3
inc
jno
out
inc
cmp
adc
addb
dec
sbb
aaa
sarb
lret
shll
jae
jp
mov
jecxz
imul
sub
push
mov
mov
pop
push
xchg
lret
jge
shrb
lret
fucomp
std
mov
dec
cmp
inc
out
ss
or
out
push
push
stos
inc
jne
cwtl
fdivrs
dec
and
jbe
std
imull
out
pop
lret
js
jecxz
push
test
movsb
add
mov
lret
nop
pop
cmpsb
insb
aam
sbb
lock
movsl
xchg
push
repnz
insl
xlat
sub
cmpsl
sbb
and
cwtl
lret
insl
adc
jns
ljmp
lock
or
cld
cwtl
dec
sub
pop
dec
fwait
jle
ljmp
repz
nop
lret
jmp
or
cmovg
mov
orb
pop
mov
rcrb
hlt
push
std
lods
ficomps
pop
mov
mov
cmp
lret
andl
jg
or
loop
in
jne
fdivrs
mov
orb
stos
cmpl
lret
jo
sbb
add
push
push
aam
rcll
lret
jo
rolb
nop
cli
jno
cld
inc
in
cmp
cmc
push
lret
xchg
adc
mov
shll
call
dec
mov
lret
les
imul
jmp
out
aam
insl
inc
leave
test
or
fadds
bnd
dec
jmp
loop
and
add
xor
xlat
cwtl
adc
into
lret
xchg
inc
cs
jg
pop
lret
sub
adc
in
outsb
sbb
and
mov
int3
and
push
pop
das
enter
sbbb
jne
fxch
sbb
iret
lcall
pop
and
dec
xchg
test
pop
pop
xorb
xor
xchg
and
jbe
mov
cmp
pop
test
sarb
adcb
sti
call
lahf
push
mov
std
aaa
faddl
sbb
lret
inc
jecxz
sub
or
pop
fwait
pop
push
icebp
mov
push
shrl
mov
pop
dec
adc
ret
lret
xchg
test
lret
jae
cmpl
xchg
fwait
sti
pop
std
ret
stos
test
ror
sbb
adc
sbb
inc
popa
cmp
lock
fwait
test
lret
outsl
scas
fisttpl
aam
in
lret
mov
pop
pusha
cmp
lret
testl
jmp
sbb
xchg
and
hlt
or
fisubrl
and
lret
int3
xchg
cld
stc
mov
shll
popa
imul
shr
pop
mov
cmp
cli
pop
push
xchg
xor
aam
sbbl
cmp
and
je
aad
sub
mov
ljmp
shll
insb
dec
lea
aaa
dec
push
xchg
mov
outsl
test
cmpsl
and
daa
push
cmp
daa
js
push
pop
and
mov
ror
rcrb
cmp
dec
sahf
mov
xchg
cmc
nop
mov
lret
vaddsd
mov
or
into
into
add
int
pushf
movsl
pop
scas
push
and
movsl
adc
lret
mov
pop
rol
xor
adc
push
inc
jo
inc
cmp
ret
jo
pusha
cmp
pop
push
lret
add
mov
pop
push
fisttps
cld
movsl
nop
imul
sbb
loop
mov
mov
sarb
inc
push
mov
mov
pop
gs
das
fisubs
fnstsw
pop
fwait
jns
xor
pop
or
sub
call
inc
push
jmp
je
mov
js
lcall
pop
int
dec
adc
int
xchg
jbe
sub
adc
pop
cmpsl
into
cli
lret
pop
or
lea
push
lods
mov
inc
imul
jg
push
ficoml
lods
xor
dec
cmp
scas
les
lods
std
imul
sarb
fmul
pop
mov
and
lock
pop
cmp
mov
jmp
push
scas
inc
mov
rclb
xor
and
fisubrs
addl
cmp
in
inc
movsl
cmp
mov
and
or
out
mov
push
xchg
fisubrl
push
add
jp
mov
fcmovnb
mov
pop
jae
pop
aad
lea
imul
cmp
cmp
sbb
cld
xchg
enter
shll
sbb
pushf
pusha
add
or
or
inc
adc
rorb
inc
cmc
add
pop
dec
sbb
push
mov
mov
int3
pop
push
stc
mov
mov
sub
shl
push
daa
lret
xor
pushw
outsb
or
xchg
jns
test
test
daa
ljmp
scas
lret
mov
cmp
in
dec
int3
lods
push
js
shlb
xchg
pop
mov
mov
push
outsl
loopne
lods
int3
sub
mov
ss
pusha
mov
daa
imul
adc
jns
jns
push
xchg
incb
popa
rcll
lret
sbb
pop
mov
out
movsb
fsub
sub
push
pop
inc
xchg
pop
inc
sbbl
xchg
pop
push
xor
ss
aam
mov
pop
loop
dec
scas
add
cmpsl
dec
mov
or
push
movsb
insb
shll
test
dec
adc
sbb
xchg
inc
and
outsb
fwait
push
mov
stc
mov
ret
aaa
push
iret
push
pop
imul
and
add
out
jg
sbbb
rorb
pop
push
insb
test
xor
push
enter
xchg
inc
popf
jge
outsb
leave
push
test
fistps
pop
inc
adc
push
push
scas
dec
aad
mov
and
cltd
jl
in
loop
cs
ljmp
pop
sub
stc
call
es
cld
push
iret
rorb
xchg
push
lods
cmp
or
jmp
dec
ret
mov
mov
jne
inc
ret
mov
mov
or
cmp
xchg
mov
and
test
repz
cmp
lret
push
mov
popf
pop
dec
cmp
sahf
add
mov
mov
out
js
nop
movsl
and
mov
mov
popf
test
mov
lds
cmp
dec
mov
push
lahf
sti
push
pop
icebp
sub
mov
sti
movsl
sbb
sub
leave
fs
cmp
jne
adc
cmc
jp
xchg
das
pop
into
mov
mov
jmp
pusha
and
xor
pop
cltd
es
cmp
fists
loope
aas
mov
sti
push
int
adc
lods
dec
adc
xchg
mov
mov
pop
cmpsl
pop
lds
xor
ljmp
jl
into
repz
fs
cmpsl
fistps
adc
int3
fdiv
and
inc
inc
aam
lret
push
dec
lods
mov
int
jo
dec
and
insb
mov
cwtl
std
inc
ja
das
stos
gs
push
push
scas
int
out
cmp
outsl
andb
push
mov
js
mov
data16
in
js
aas
push
dec
out
sbb
mov
pop
sub
inc
in
jl
add
mov
inc
cmp
out
fstp
cmpl
out
ret
test
icebp
push
movsl
pop
cwtl
ret
add
mov
jae
mov
sbb
xorl
dec
or
dec
jno
loop
push
clc
or
fs
pop
or
push
stc
test
ljmp
or
leave
jnp
stc
add
aad
cwtl
ss
push
xchg
stos
mov
es
push
push
push
das
repz
dec
lret
call
pop
aas
dec
push
push
cmp
js
mov
push
add
nop
jle
adc
out
mov
sub
push
stc
repnz
ja
pop
mov
push
xchg
xor
mov
daa
inc
pushf
push
pop
pop
ljmp
leave
dec
pop
cmp
add
hlt
arpl
aam
xchg
pusha
mov
inc
lret
sbb
xchg
stos
rcrl
sub
jne
adc
pop
pop
lret
fcom
and
add
and
mov
shll
movsb
testl
hlt
sbb
dec
shl
xchg
jae
pushf
jp
out
repz
adc
xchg
lods
xchg
mov
divb
movsl
idivl
cmpsb
sub
testl
inc
sbb
andb
xor
mov
and
rdtsc
rcr
mov
dec
jg
pop
xor
loope
pop
stc
jo
jns
lds
js
fdiv
pop
jp
les
frstor
cs
adc
aam
jo
int3
or
das
push
ja
orb
lret
inc
sbb
iret
cmpsl
scas
cmpsl
sub
push
ja
jmp
dec
sub
test
repz
pop
push
ljmp
test
pop
int3
adc
and
sub
add
int
mov
or
add
xchg
inc
aaa
insl
xchg
test
push
cmp
mov
shll
push
mov
repnz
push
fsts
test
mov
ret
dec
push
jns
ficompl
push
into
fisubrl
adcl
adc
lahf
icebp
aam
push
out
push
es
roll
ljmp
jo
jno
push
adc
aaa
and
sub
or
loopne
dec
ljmp
mov
jg
test
push
dec
adc
adc
jmp
push
repnz
shll
jbe
mov
nop
xchg
and
or
out
lods
lock
outsl
mov
mov
pop
sub
xlat
jp
scas
sub
push
xchg
scas
jae
and
cmc
push
sub
push
mov
das
mov
ret
addr16
in
pop
xchg
rcrl
scas
push
dec
aaa
je
testl
outsb
pop
and
mov
or
push
mov
lds
push
scas
mov
ljmp
stos
and
and
cli
mov
mov
xchg
in
push
push
jns
movl
and
lahf
push
jne
mov
push
push
push
push
mov
pop
sub
js
out
pop
xchg
repnz
test
rcrl
pop
jns
je
mov
aam
js
inc
push
or
lahf
push
mov
shrl
push
out
pop
call
jns
test
or
in
insb
push
outsl
das
add
ret
jmp
andb
sarb
mov
cmp
adc
jnp
idivb
xchg
aas
inc
mov
and
mov
ja
cmpsb
ja
xchg
push
rclb
mov
fs
sub
push
mov
rcll
cmp
inc
or
in
into
adc
ds
pop
push
dec
ror
jo
lahf
cmp
icebp
shrb
ficoms
sbb
cmp
pop
jecxz
shrb
movsl
mov
ficoml
enter
std
jns
fmuls
movsb
adc
cmc
fcompl
inc
sti
cmp
je
repz
leavew
pop
mov
xchg
and
xchg
xor
jne
mov
subb
jl
fs
pop
into
or
js
data16
popf
ljmp
stc
xchg
push
ja
cmp
pop
jl
inc
jp
cmp
mov
pop
lods
test
test
lock
cmp
aaa
fists
pop
mov
mov
aas
repz
lret
insb
sbb
push
je
stc
cmp
test
adc
repz
push
jnp
cmpsb
xchg
pop
in
jecxz
bound
inc
or
in
inc
adc
outsb
inc
repz
inc
aaa
enter
jne
add
outsl
sub
mov
sub
add
rcl
xchg
aad
stc
lret
adc
push
ficomps
cmp
cmp
and
inc
ja
cwtl
push
lret
xchg
stos
out
jg
icebp
inc
lret
iret
pushf
mov
movsl
lret
push
fists
pusha
jno
lret
lcall
mov
mov
ljmp
mov
sbb
and
xchg
add
mov
mov
pop
int3
lock
inc
jmp
clc
out
xor
push
and
xchg
ret
pop
dec
cltd
push
sbb
dec
out
stos
pop
fidivl
sbb
stos
out
sbb
cmpsl
aam
dec
cmpsb
fimuls
cmp
lods
lret
pop
aad
pop
sbb
mov
jge
ss
icebp
jns
outsb
daa
lret
sub
fwait
out
mov
mov
lret
push
out
daa
xchg
scas
mov
clc
enter
or
or
xchg
nop
inc
push
in
jns
fdiv
lret
cmp
lods
lret
je
iret
sbb
cmp
and
lret
into
lds
lret
fwait
sbb
cmp
jb
call
lret
dec
mov
lret
adc
popf
es
shrb
lods
test
cltd
inc
push
sub
mov
lret
lea
fisttpl
add
or
xchg
lret
jmp
sbb
mov
fidivl
and
push
or
shll
aas
ret
mov
cld
jns
test
outsl
add
shlb
fists
sti
xor
sub
lret
in
pop
add
imul
push
pop
cs
stos
into
mov
test
sbb
sub
pop
push
sub
lea
imul
lret
sarl
in
xchg
sub
ficompl
dec
enter
fwait
hlt
mov
lret
lahf
jecxz
cs
jbe
rclb
lret
ljmp
push
jmp
aam
lods
ret
mov
std
cmp
shl
cmp
inc
popa
xchg
sbb
mov
scas
add
or
add
fcoms
sbb
xchg
push
adc
inc
repnz
xchg
and
pop
push
gs
pushf
cmp
push
push
pop
fucomi
dec
jle
test
inc
jmp
jcxz
je
mov
mov
mov
cmp
ja
jae
mov
leave
xchg
icebp
pop
ret
xorb
jmp
lods
mov
xchg
lds
adc
jmp
or
out
rorb
shl
xchg
ret
pop
add
dec
stos
incl
lfs
or
das
bndldx
pop
sbb
subb
mov
mov
test
dec
shrl
mov
out
and
outsl
cmp
divb
orb
loop
hlt
cld
push
adc
pop
cmp
or
ret
xchg
push
xchg
lds
fnstenv
inc
jmp
push
lret
jecxz
iret
adc
push
fstpl
cwtl
lds
cmpsl
in
pusha
sbb
or
xchg
addb
jbe
push
sbb
or
mov
xor
pusha
push
out
ljmp
mov
xchg
cmpsl
int
push
jge
xchg
xor
add
fcmovb
sub
push
mov
or
jne
lret
xchg
rcr
push
rorb
or
dec
or
jmp
cmp
inc
stc
loop
or
cli
mov
imul
loope
imul
xor
push
shl
jmp
das
push
xchg
dec
push
jno
andnps
add
mov
mov
div
out
shlb
fmull
sub
and
pusha
push
stc
cmpsb
mov
xchg
je
push
inc
jecxz
fstpt
addr16
xchg
xor
enter
sub
xchg
pop
dec
orl
je
jnp
bound
sbb
ret
push
mov
notl
cmp
or
sub
sub
jb
pop
xor
out
iret
push
adc
loope
or
mov
and
scas
sbb
sub
cltd
adc
stos
pusha
js
push
mov
lods
xor
or
lods
shrb
cmp
inc
jecxz
dec
or
mov
dec
dec
bnd
xorl
dec
hlt
cmp
in
push
and
push
sub
loopne
xor
push
jb
mov
into
push
jnp
gs
push
pop
inc
inc
imul
adc
push
mov
int3
pop
shlb
bound
dec
push
lret
ret
push
stos
mov
mov
xor
pusha
inc
adc
les
pop
sbb
jg
in
rclb
lds
cmp
in
jae
jg
mull
mov
sbb
xchg
cmc
iret
psrld
repnz
sti
mov
or
test
aad
ret
add
ds
jbe
cmp
and
adc
out
xor
sub
int
and
cmp
inc
dec
arpl
pushf
daa
push
cld
and
mov
push
jge
mov
add
data16
out
or
inc
push
inc
jno
jmp
adc
mov
lahf
out
das
jp
jno
inc
adc
stos
dec
push
xchg
sahf
jmp
mov
push
add
or
push
mov
mov
pop
int
in
shll
xor
xchg
xchg
xlat
sti
cs
xchg
aaa
repnz
hlt
adc
sub
xlat
mov
mov
imul
popl
loopne
push
mov
dec
das
push
sbb
or
sub
push
mov
stc
pop
mov
mov
fucomi
dec
int3
cmpsl
ss
mov
fnstenv
add
cmp
lret
mov
iret
and
addb
add
aas
mov
mov
sti
jmp
aad
fimuls
mov
in
push
repnz
or
add
test
push
inc
pop
mov
rorb
popa
push
mov
inc
mov
and
jo
pop
iret
jp
and
test
aaa
mov
or
lds
dec
jg
dec
out
sbb
cmpsl
pop
aad
jle
and
in
fsts
rorl
and
push
and
or
sbb
js
or
movsl
minps
mov
pop
mov
popf
aaa
test
mov
pop
cmp
bswap
out
pushf
shrb
aad
adc
mov
addr16
es
mov
pop
cmc
testl
int
inc
cmp
andb
pop
ljmp
jle
dec
bound
testb
je
data16
rcll
pop
mull
into
mov
xchg
push
mov
xor
xchg
sub
mov
lock
outsb
sub
fsubrl
mov
and
loop
lret
mov
movsl
pop
ss
out
hlt
xchg
lret
fnstsw
cmp
mov
int3
jne
xor
or
hlt
push
adc
or
inc
cmc
mov
mov
xchg
repnz
outsl
fcmovb
pop
push
adc
mov
jle
jb
fidivrl
pop
rcrl
ss
push
test
mov
or
movsl
iret
push
out
int3
cli
mov
cmp
xchg
pop
jae
into
xchg
xchg
and
xchg
mov
jmp
imull
test
les
xor
cli
mov
test
adc
cmc
push
ret
repz
scas
inc
push
or
cld
loop
cltd
push
jns
daa
lea
scas
sub
ljmp
outsb
or
imul
pop
cmpsl
into
repz
das
adc
test
mov
test
and
into
push
pop
lret
imul
fistpl
je
jne
push
lea
cli
repnz
loopne
iret
clc
scas
add
stc
adc
clc
jno
sbb
pop
movsl
and
loope
int3
push
jo
lods
xor
mov
sub
push
aas
dec
pop
pop
push
push
cmp
and
les
dec
jmp
dec
js
cs
add
bound
orb
repz
lock
iret
into
sbb
push
iret
jecxz
pop
sub
sbb
fistps
bt
repz
fdiv
push
cli
lea
xor
mov
sti
jnp
or
and
popa
scas
or
mov
test
nop
dec
or
xchg
sub
test
ljmp
xor
lods
jne
aaa
lods
icebp
cmp
pextrw
or
xchg
push
fldl
ljmp
rclb
ret
iret
mov
fs
mov
pop
push
fsubrs
or
seta
rclb
pop
mov
mov
sbb
xchg
ficoml
shr
cld
mov
idiv
sahf
push
bound
bound
xor
dec
daa
push
idivl
xchg
push
sbb
push
sbb
pop
inc
push
outsb
push
js
or
push
jmp
pop
dec
aaa
add
fcmovnb
out
inc
xchg
push
loop
pop
push
add
jl
mov
test
jp
std
rcrl
push
lcall
fdivrp
fsts
addr16
push
inc
nop
fcompl
mov
aam
lcall
sbbb
mov
mov
sbb
push
into
adc
pop
or
and
mov
jg
jle
lods
jne
add
xor
sub
xchg
adc
sbb
leave
idivb
fdivrs
sbb
popf
pop
iret
cwtl
test
mov
mov
mov
imul
push
pusha
mov
js
lahf
out
pop
dec
push
add
repnz
pusha
pop
lret
jge
aad
pushf
aaa
mov
nop
mov
mov
and
cmp
iret
fidivrl
sbb
mov
subb
call
or
pushf
into
pop
mov
int3
mov
inc
xchg
mov
pop
push
shlb
sbb
sbb
ficoml
pop
fiaddl
add
pop
sub
jne
leave
sbb
aas
push
test
movsl
sub
std
cltd
mov
pop
mov
pop
rol
xchg
das
dec
imul
add
dec
into
repnz
push
mov
pop
sbb
lods
jne
stos
cmp
mov
inc
and
aaa
xor
bound
mov
lret
ret
cwtl
aam
dec
push
enter
sbb
iretw
aaa
sti
and
jb
aam
into
sub
pop
orb
mov
dec
jecxz
inc
adc
mov
dec
mov
pop
push
push
nop
or
xor
lods
sahf
or
pop
outsb
inc
pop
test
and
cmp
roll
les
xchg
lret
sbb
push
xor
es
pop
jne
repnz
xchg
push
lret
fisubl
jns
dec
dec
lret
shll
sbb
pop
push
out
and
jmp
call
fwait
das
lds
jbe
or
xchg
dec
xchg
dec
pop
inc
cli
adc
icebp
ss
pslld
data16
pop
jle
les
mov
jle
xchg
sub
repz
pushf
inc
dec
lods
jns
jl
xor
mov
dec
push
sub
mov
imul
aam
fstpt
jne
pop
sbb
stc
cld
shr
push
and
js
cmpsl
xor
outsb
inc
sub
adc
xor
jns
fisubl
jo
rcll
pop
cmp
in
mov
push
scas
fidivrs
test
dec
mov
mov
mov
call
xor
mov
xchg
mov
pusha
push
adc
into
push
nop
adcl
dec
mov
xchg
jl
or
dec
push
popf
sbb
mov
mov
leave
arpl
mov
loop
popf
rcrl
shll
out
repz
pop
test
daa
xor
fcom
adc
sub
sbb
in
sub
scas
pop
repz
xor
push
repnz
mov
and
add
repnz
adc
jmp
and
or
xor
stos
bound
cmp
shlb
jge
sahf
jle
test
jo
arpl
test
outsb
and
movsl
xchg
push
or
xchg
pop
or
clc
push
cli
mov
or
ret
push
imul
cmpb
push
aam
mov
ret
and
loop
aaa
push
out
iret
push
pop
cmc
mov
out
and
jmp
xchg
xlat
add
div
pop
or
push
out
dec
or
pop
mov
out
xor
scas
adc
call
push
jg
push
or
mov
cli
push
adc
fs
xchg
and
lds
gs
sarb
dec
mov
in
jae
dec
inc
aaa
inc
mov
mov
adc
xchg
push
or
lahf
outsl
xor
inc
sub
mov
dec
push
fisubrs
pop
iret
and
aam
mov
mov
mov
lods
xchg
sbb
aaa
decb
pop
push
jo
out
insl
inc
into
loopne
shl
int3
bound
rclb
jo
cli
cwtl
xor
pushw
push
push
sbb
dec
daa
sub
stos
cs
lea
js
sub
js
addr16
loope
pop
mov
std
and
push
mov
ljmp
int
mov
push
jle
mov
jnp
rol
pop
push
pop
rcl
aas
mov
gs
or
jp
xchg
shl
popf
rorb
xor
iret
cs
and
push
stc
stos
cmp
cltd
mov
scas
pop
adc
rep
int3
adc
cld
sub
hlt
and
or
insl
mov
int3
adc
cmp
or
mov
pop
push
mov
loopne
inc
dec
dec
lret
sbb
jno
pop
loope
inc
shr
aaa
stc
mov
cmp
pop
test
cmp
dec
incb
mov
andb
or
and
ja
or
adc
repz
lret
imul
push
mov
fwait
jnp
xor
sbb
je
loop
jo
fcmovb
pop
notb
js
push
lds
push
jns
das
icebp
inc
mov
lea
push
mov
lret
and
adc
mov
sub
lahf
ss
jb
xchg
lods
das
or
push
lret
js
cmp
test
pop
adc
out
dec
push
jnp
sbb
mov
stos
sub
fs
aam
xchg
repnz
iret
sbbl
jge
sbb
cmpsl
xchg
popa
sub
or
popa
push
mov
je
mov
aad
cmp
or
in
lods
xchg
dec
pop
or
bound
pop
mov
sti
ret
loop
int3
in
adc
push
xchg
aad
and
dec
push
in
out
push
jecxz
movsl
push
push
daa
ljmp
sarb
sbb
xlat
adc
leave
dec
xlat
push
add
sahf
dec
pop
test
or
adc
dec
ljmp
push
and
or
sbb
push
push
adc
in
xor
inc
cmpb
cli
jg
jmp
lea
clc
mov
stos
aam
inc
or
lock
icebp
xchg
mov
pop
into
ja
aam
repz
subl
dec
mov
arpl
outsl
in
loope
push
les
popf
into
mov
es
cmp
imulb
das
sub
out
xor
pushf
xor
stc
out
in
idivb
and
mov
adc
jp
popl
bound
adc
inc
mov
out
pop
mov
mov
mov
in
sti
xor
jno
adc
aam
xchg
dec
pop
mov
push
jns
lcall
pop
dec
mov
in
loope
mov
repz
push
jae
mov
mov
or
or
sbb
adc
js
mov
xchg
cmc
and
mov
sarl
jmp
sbb
sub
int
loopne
leave
cmpsb
addl
push
pop
lret
mov
int3
je
push
mov
or
sbb
push
inc
arpl
aas
lods
add
enter
adc
xchg
mov
and
popf
dec
in
xor
repnz
cwtl
mov
push
pop
shl
sahf
aaa
inc
sub
out
negb
arpl
push
pop
arpl
out
xor
lea
es
jecxz
or
and
push
call
int3
jo
cmp
cltd
les
mov
pop
imul
movswl
pop
dec
fiadds
push
cs
sbb
or
pop
xchg
push
jnp
sahf
loope
adc
push
pop
dec
push
and
into
xlat
push
jnp
and
in
mov
lock
sti
out
ret
idiv
pop
push
pop
mov
cmc
mov
and
mov
and
scas
mov
lcall
aas
andps
xchg
dec
inc
sbb
subl
mov
iret
bound
or
mov
jp
cltd
jmp
jmp
push
shrb
je
jl
mov
fists
aam
and
push
lods
iret
bound
outsb
cmp
fbstp
add
adc
repz
call
test
push
cmpsl
sub
push
push
mov
push
addb
and
cmp
mov
int3
pop
int
push
and
lods
cmp
aam
adc
hlt
test
pop
fldcw
add
jle
push
sub
push
ljmp
test
sub
hlt
or
loope
test
inc
sub
shr
les
adc
push
or
inc
icebp
scas
xchg
movsb
dec
dec
pop
dec
push
stos
jbe
jp
in
sbb
mov
jmp
pop
sahf
sub
loopne
mov
call
std
leave
jnp
push
iret
mov
repz
add
cmp
inc
dec
lock
jg
addr16
mov
dec
test
mov
aas
push
jmp
test
push
push
out
push
mov
cmpsl
gs
hlt
xor
sbb
push
jmp
shll
jmp
sub
popa
gs
adc
mov
push
mov
add
push
cmp
add
outsb
cmp
sub
aaa
pushf
jge
scas
push
popa
mov
inc
mov
shlb
pushf
xor
outsb
scas
sbb
adc
out
push
mov
in
movsb
cli
mov
pop
cmpsb
push
and
and
clc
mov
adc
fidivs
inc
cmp
or
stos
mov
sbb
mov
mov
outsl
out
and
inc
jecxz
xchg
andb
outsb
iret
mov
cmp
test
dec
xor
aas
fisubrs
adc
mov
lea
xchg
pop
lcall
push
push
out
push
pop
idiv
rcll
push
aad
and
push
ret
push
movsl
movsl
js
mov
push
stc
in
out
and
lret
and
int3
xchg
inc
sti
sub
sti
or
jbe
jns
add
cmp
or
or
xchg
add
dec
pop
xor
ja
mov
mov
xlat
xchg
cmpsl
aaa
mov
push
test
push
test
jge
and
xor
ljmp
lock
mov
jno
mov
mov
jne
insb
sarb
fnstcw
imul
sub
add
les
icebp
in
cwtl
mov
in
pusha
sbb
sbb
repnz
dec
gs
js
into
andb
stc
aas
dec
jns
sbb
leave
sbb
sbb
lcall
test
mov
ljmp
repz
je
jp
mov
mov
jb
mov
mov
pop
lret
mull
cltd
ss
cmp
pop
imul
outsb
je
sub
sub
or
sbb
dec
shll
add
cmp
call
gs
push
adc
rorb
push
rclb
dec
mov
rclb
aaa
shrl
add
push
lock
arpl
mov
fadd
ja
orb
lret
insb
adc
into
inc
jecxz
dec
dec
xchg
inc
lds
mov
mov
cmp
cmp
jns
and
push
dec
pop
push
movb
xchg
fistpll
jne
scas
pop
call
pop
inc
gs
pop
mov
push
sbb
fisubrl
ffree
push
jge
out
jecxz
jne
in
movq
bound
push
pop
jp
or
outsb
add
out
add
loope
inc
ret
dec
pop
data16
sub
or
dec
lret
xchg
and
fistl
mov
push
ljmp
push
leave
cld
jns
xchg
jp
loope
push
mov
xor
rol
push
sub
or
push
pop
gs
cmp
inc
rcll
cld
inc
dec
xor
mov
sbb
outsb
dec
jne
cmpsl
push
or
add
out
test
and
xor
cmp
icebp
mov
adc
pop
adc
push
lock
mov
test
test
in
rcrl
inc
mov
inc
lret
adc
add
or
pop
imul
stos
sub
jle
sahf
ficoml
push
jns
lods
mov
lods
cmpsl
lret
out
add
cwtl
sbb
jb
test
mov
push
sub
add
cmpsb
lret
repnz
jns
dec
xchg
pop
aaa
pushf
lcall
test
dec
xor
push
push
aad
int3
cld
rcr
add
pop
dec
jns
sarl
or
and
dec
mov
lcall
jne
fisubrl
cmp
fucomi
xchg
dec
jmp
pop
pop
sbb
mov
ss
sbb
out
ret
push
dec
lret
mov
bound
jnp
push
mov
call
ss
int
rcrl
mov
test
bound
in
loop
out
jne
adc
into
out
push
sub
mov
aas
jne
ja
cmp
rcll
ljmp
jmp
mov
das
mov
negl
xchg
je
jecxz
aaa
sbb
inc
enter
cmp
push
mov
push
jns
sbb
aas
imul
sbbl
int
pop
out
bound
push
scas
cmp
out
scas
sub
add
repz
cwtl
push
cmp
mov
outsb
pop
out
sbb
jp
xchg
push
aas
dec
in
scas
shll
lea
sbb
push
sub
push
push
jle
rolb
lret
inc
pop
lret
mov
imul
iret
loope
outsb
lds
dec
repz
mov
pop
mov
fsubl
bound
ficompl
rcll
pop
mov
dec
pop
int
out
fsubs
cli
outsb
xchg
ljmp
push
pushl
es
jbe
add
jmp
add
ds
std
inc
add
xchg
dec
into
push
fldt
loopne
push
addr16
and
mov
cmpsb
jne
push
inc
sahf
and
sbb
outsl
pop
push
push
shrl
xor
cmp
in
dec
cmp
push
push
lods
lret
push
add
loope
inc
jae
jbe
mov
int3
cltd
or
cmp
and
dec
sub
xorl
sbb
cmp
inc
push
test
scas
ljmp
repz
xchg
pushf
fwait
and
xor
pop
pop
pop
aaa
shll
clc
arpl
jmp
pop
or
loop
fldl
push
in
adc
mov
lret
pusha
pop
mov
sub
fwait
mov
push
mov
push
shll
mov
test
mov
mov
popf
scas
mov
or
jne
cmp
jl
or
jecxz
ds
loopne
js
jle
cmp
inc
jl
sbb
xchg
mov
dec
mov
das
push
cmp
mov
push
stos
out
push
arpl
pop
ds
jge
clc
cmpsb
push
mov
lahf
pop
into
mov
gs
flds
xor
add
aam
jmp
ja
push
repz
mov
ret
aas
cmc
pop
negl
test
sbb
rcrl
or
adc
sbb
mov
cmpsl
mov
xchg
jp
ficomps
lods
div
mov
fidivl
or
mov
mov
push
jae
ljmp
lock
xchg
pop
repz
lret
sbb
push
je
mov
inc
pop
jb
test
xchg
outsb
push
fildll
jp
mov
xor
hlt
add
inc
loope
mov
andl
pop
mov
push
shll
mov
rcr
sub
ljmp
pop
mov
dec
repnz
cmp
inc
lret
mov
or
mov
stc
mov
and
insb
hlt
lcall
icebp
push
cltd
xlat
flds
popf
push
sbb
test
outsl
push
test
cli
arpl
push
jecxz
stos
enter
jecxz
mov
mov
in
aam
xchg
jp
jae
fwait
pop
enter
daa
jmp
in
xchg
outsb
lock
push
xchg
arpl
stos
imul
into
int3
xchg
scas
shll
in
pop
pushf
out
dec
out
or
lock
pusha
dec
pop
adc
push
jp
clc
push
sub
push
sti
lret
jmp
cmc
mov
cmp
mov
xchg
cmp
push
adc
in
adc
je
lock
fimull
ss
loopne
test
mov
andb
adc
in
cmp
push
jl
scas
hlt
rclb
xlat
inc
push
cmp
xchg
pop
mov
data16
pop
sbb
mov
ss
mov
loopne
dec
dec
pop
scas
lods
shrb
adc
push
jbe
psubb
mov
push
mov
xor
jne
iret
xchg
pop
jmp
xchg
inc
insb
push
cld
mov
push
jns
jle
jge
repnz
sbb
daa
aad
push
mov
lock
lret
and
arpl
or
xor
inc
int3
inc
insb
lcall
xor
mov
int
pop
fcomps
pop
push
xor
jbe
insl
xor
into
pop
push
mov
cmc
sbb
sti
das
or
testb
ret
inc
mov
dec
and
inc
mov
and
into
pop
add
pushf
jmp
adc
in
mov
loop
jg
stos
adc
mov
pop
fwait
loopne
out
or
mov
stos
mov
dec
jns
cli
test
sti
ret
pop
push
xchg
cmp
mov
push
iret
leave
and
jno
bound
ljmp
or
xchg
pop
das
push
push
mov
shrl
sti
push
fs
rcr
xchg
cmp
sub
outsb
ljmp
pop
daa
ss
jmp
sbb
sub
les
sub
sarb
addr16
push
sbb
fildll
jo
inc
fdivrl
fcmovnu
ljmp
dec
sbb
push
cmpsl
scas
fsubrs
scas
or
fistpll
push
adc
mov
pop
inc
pop
inc
or
sbb
mov
push
push
aad
jns
xchg
bound
pop
fsubs
ljmp
not
stc
sub
add
push
lods
enter
and
jmp
push
pop
sarl
inc
sub
push
scas
bound
daa
adcl
pop
int3
push
adc
out
sub
bound
adc
pop
push
xor
mov
inc
movsl
xor
lret
xchg
mov
jo
ret
in
hlt
test
ja
lock
push
push
fistpl
pop
sub
sbb
stc
and
mov
in
jae
int3
push
outsb
sti
push
xchg
nop
pop
jmp
test
or
sbb
aad
or
mov
data16
inc
inc
cld
xlat
lea
cmpsl
popf
sti
jo
andb
pop
pop
mov
test
inc
repz
test
adc
arpl
cmp
xor
dec
fcomip
mov
add
jb
mov
shl
mov
mov
jg
and
or
dec
cltd
xor
sar
outsb
icebp
outsb
fcomip
iret
ja
aad
lret
inc
js
mov
pop
add
inc
int
int
dec
sub
pop
loop
cmpsb
cwtl
or
int
enter
xchg
cmc
pop
mov
cs
xchg
repnz
ret
std
and
jo
cmpsl
adc
movsl
cld
outsl
loope
lret
xor
sbb
cmpsl
outsl
lds
xor
pop
pop
ds
fisubl
dec
push
adc
test
mov
out
adc
pop
mov
scas
push
jns
nop
lret
inc
iret
ja
outsl
push
mov
jno
cmp
mov
cmpsb
into
mov
vpshuflw
dec
push
adc
adc
jae
inc
mov
mov
subb
sub
inc
adc
adc
or
xor
xchg
divl
inc
cmp
cmp
and
xor
je
out
adc
rcll
insb
mov
pop
test
mov
pop
mov
shll
push
xchg
mov
gs
push
outsb
xor
or
stc
test
push
rol
or
jl
lds
mov
sub
xlat
sahf
dec
jmp
mov
aas
fcom
mov
fidivrl
lds
dec
pop
sbb
sarl
mov
mov
loope
jp
rorl
lds
xchg
pop
lea
dec
mov
str
insb
or
mov
jbe
or
test
loop
jp
shrl
pop
inc
insb
scas
jge
sub
int
cvttps2pi
jge
push
pop
sub
adc
mov
xor
sbb
xlat
sub
cmpsb
rolb
movsl
repz
jne
xor
ret
ljmp
jecxz
pop
sahf
loop
mov
pop
cmp
fstpl
sti
in
shrb
cmp
shlb
movsw
loope
in
or
insb
cwtl
sub
push
push
xlat
dec
lock
pop
xchg
push
jo
dec
bound
xor
jg
nop
xor
pop
and
pop
sbb
imul
jne
sbb
mov
fiaddl
sub
mov
repz
dec
cmp
aaa
push
gs
orb
adc
cli
enter
mov
sbb
stc
rorb
mov
and
rcl
cltd
int3
mov
out
push
ss
xchg
jg
and
lods
inc
cli
xlat
lahf
lret
cld
pop
mov
jae
lret
adc
cmp
test
cmpl
lcall
int3
rol
pop
aad
jp
adc
xchg
xchg
fcmove
mov
jg
ss
lahf
jns
rcl
popa
stos
adc
jno
jb
stc
xchg
in
lret
cmc
enter
inc
lret
sahf
and
cs
cltd
stos
xor
xchg
dec
mov
ror
or
scas
sub
lret
in
cmp
mov
sub
xchg
lret
ljmp
stos
adc
daa
popf
fstp
int
fimuls
mov
pop
int3
data16
int3
pushf
and
insb
lret
inc
hlt
push
fdivrs
pop
cmpsl
aaa
dec
aam
and
cmp
or
jb
int3
cmp
icebp
cli
xchg
mov
mov
xchg
push
popa
xchg
cli
pop
push
push
add
sbb
cli
mov
jb
lret
inc
imul
enter
xchg
test
sbb
xchg
inc
popf
lret
sbb
insl
pop
mov
lret
jb
sub
jnp
inc
popa
xchg
out
sahf
into
xor
push
stos
sub
cmpsl
mov
cli
idivb
mov
lods
inc
mov
test
cmp
repnz
out
mov
leave
push
cld
les
repz
sahf
scas
fwait
push
pop
out
into
repnz
loop
shll
push
sub
lods
inc
shrb
push
fsubr
xor
xor
sub
aas
xlat
xchg
cmp
fmull
leave
and
ljmp
xor
jo
lret
fs
mov
adc
xchg
lret
js
pop
or
fcmove
or
mov
push
and
lret
aad
jecxz
les
xor
fwait
sbb
push
in
xor
jmp
rcrl
xchg
cld
into
adc
mov
dec
js
int3
or
jmp
lret
cmc
stc
bound
fidivl
out
ds
push
mov
int
jmp
mov
call
in
pop
sarl
mov
pop
jbe
mov
lret
inc
xchg
or
fadd
popa
bound
cmp
icebp
fs
cmc
rclb
inc
pop
mov
mov
pusha
lret
imul
js
and
and
dec
pop
or
stos
movsb
xchg
gs
xlat
or
dec
add
lret
stos
sti
dec
push
sbb
xchg
pop
push
call
movsb
aaa
lret
sahf
cli
jg
shl
jnp
push
icebp
arpl
rolb
inc
pop
mov
popa
push
es
mov
xor
sub
or
sbb
fsubrl
lret
push
ret
aad
mov
jecxz
icebp
adcl
int3
mov
call
mov
mov
add
sub
sub
cmp
lods
inc
xchg
test
adc
lods
cmp
out
jle
xchg
add
lahf
loope
jmp
cmpb
or
sub
jl
lds
cmpsl
stc
lret
imul
xor
pop
push
push
daa
adc
aaa
mov
mov
inc
outsl
add
int3
jle
xor
push
je
ljmp
rcrb
test
cmc
inc
pop
pop
arpl
imul
rcrb
aad
mov
pop
sbb
rcl
xchg
cmp
or
xchg
pop
push
lret
and
xchg
and
mov
xor
lret
gs
or
inc
ret
stc
sub
call
xor
pop
stos
or
outsb
jle
jmp
imul
mov
in
dec
rcrb
push
gs
rcl
outsb
stos
mov
fidivrl
mov
fsts
jle
sub
mov
lret
stos
outsl
and
mov
jl
int
fisubrl
mov
ds
repnz
mov
inc
push
aad
int
lret
stc
ret
push
jo
mov
in
test
cmp
push
and
in
lret
fcomps
lret
dec
popf
stc
popa
sub
sbb
add
lret
xor
pop
and
or
inc
pop
lods
mov
dec
mov
rol
sub
lea
leave
sti
je
lret
mov
cmp
lock
push
aas
lret
cld
xchg
and
lods
test
std
adc
imul
in
iret
repz
or
orb
mov
jle
cmpsb
ljmp
jns
and
add
fsubp
loop
push
insl
push
lock
ficoml
rorl
push
cmpsl
lret
das
gs
mov
pop
out
sbb
jl
xlat
cmpsl
ss
ficoms
lret
mov
imul
shrl
dec
lret
add
sub
dec
mov
push
out
fcoms
lret
rcrb
sbb
fcom
aas
loopne
rcrb
cld
push
call
lret
lds
pop
xchg
mov
add
cwtl
icebp
fiaddl
xor
mov
das
into
into
in
sub
jb
jl
mov
aaa
scas
lret
in
add
or
mov
mov
jl
lret
fs
xchg
sub
lret
movsl
or
xor
ljmp
mov
lock
int
or
scas
xlat
jg
jge
pinsrw
gs
int3
pop
inc
aad
aam
xchg
cmp
or
fwait
cmp
sti
out
lods
jg
push
lret
pop
rorl
sub
sti
sarb
inc
inc
xor
lret
scas
lods
dec
dec
pop
sub
ficoms
xor
cmc
add
int
cwtl
push
hlt
fisubl
fmul
lods
jnp
xchg
insl
cmp
mov
jl
mov
dec
or
loop
int
dec
sbb
sarb
scas
shlb
bound
popa
ret
cmp
fmuls
sbb
or
ja,pn
lret
js
pop
stos
pop
sub
lret
fwait
sarl
loop
xchg
xchg
aad
sbb
sti
fists
mov
cmpsb
xchg
or
add
pop
push
mov
rcr
push
jg
ss
pop
stos
cmp
fidivs
lret
xchg
stos
mov
lock
lcall
push
mov
xor
adc
mov
jle
lods
ficoms
mov
lcall
pop
cld
fadd
lret
incl
mov
lret
gs
fs
out
dec
in
or
mov
or
mov
sbb
rcrb
jg
lret
rcrb
lods
imul
rcll
add
mov
lahf
sti
lret
fldenv
pusha
in
mov
xor
and
shlb
lret
mov
dec
mov
dec
lret
sub
lret
xor
mov
into
xchg
push
nop
sbb
test
test
lret
jg
scas
ds
addr16
xchg
pop
add
mov
cli
push
popf
in
cmpsl
push
push
ror
out
pushl
pushf
mov
jno
adc
xor
sub
or
scas
iret
aam
mov
dec
lret
xor
lret
inc
arpl
jg
iret
fildl
mov
push
xorl
lret
sub
sbb
adc
ret
push
mull
clc
adc
mov
aad
fisttpll
xor
push
rcrl
xor
sub
fwait
mov
lret
fcomp
adcl
js
mov
das
push
xlat
lahf
testl
add
dec
xor
jmp
es
inc
jmp
movsb
push
les
dec
test
popa
pop
daa
lods
fldlg2
dec
cs
shlb
neg
lea
pusha
loopne
fsubrs
mov
push
adc
jp
and
notb
pop
out
rolb
push
cmp
cmp
and
pusha
test
inc
daa
fidivrs
lods
adc
ljmp
push
sbb
jmp
and
sbb
cltd
pop
cmp
and
stos
mov
mov
ljmp
or
adc
xor
fmul
push
add
adc
imul
rol
push
inc
jle
loop
jne
repz
dec
stos
ret
das
lods
call
or
lret
inc
add
push
ds
sahf
pop
mov
xchg
jmp
push
and
push
push
outsl
xchg
in
lods
pusha
push
jnp
and
mov
pop
aad
adc
mov
mov
push
scas
sub
scas
loop
ret
jmp
shlb
les
pop
and
je
out
cmp
cmpsb
inc
sbb
dec
sbb
test
fwait
out
fimull
ss
add
push
lds
stos
pop
movsl
lock
stos
push
inc
or
pop
subb
fdivrl
js
pop
mov
ret
mov
sbb
pop
test
jmp
adc
dec
out
mov
cmp
push
sbb
or
mov
inc
push
inc
in
sbb
jle
xchg
xchg
stos
push
xchg
and
xorb
scas
lret
shlb
xchg
sub
push
testl
aad
push
lret
sbb
push
xchg
push
cltd
pushf
pop
dec
add
aam
and
dec
faddl
gs
and
out
fiaddl
inc
pop
add
call
add
std
rolb
scas
push
aas
in
inc
lret
xor
int
pop
and
fs
and
mov
fstps
movsb
push
xchg
pop
push
jge
and
ficompl
add
es
icebp
add
push
negl
or
push
xlat
or
sbbl
js
xor
bound
adc
fwait
aaa
nop
push
ljmp
mov
lret
dec
mov
cmp
jge
sbb
popa
mov
mov
test
and
mov
cmpsl
sbb
popa
int
hlt
pop
inc
lret
mov
pop
cli
jge
or
push
and
mov
shlb
xchg
daa
lret
pushf
inc
add
mov
fs
or
lods
lret
leave
push
cs
daa
mov
fs
lock
xchg
dec
out
movsb
mov
popf
fisttps
mov
hlt
sub
outsb
mov
mov
arpl
mov
cmp
ljmp
fstpt
adc
adc
push
inc
jno
sahf
jb
test
sbb
scas
aam
adcl
sbb
inc
and
ja
shrb
jnp
lods
test
cmpsb
in
pushf
sub
cld
btsl
cmp
call
lret
mov
enter
adc
xchg
push
lret
icebp
nop
push
xchg
stc
imul
imulb
sbb
adc
rol
xchg
sbb
jl
mov
lret
pop
enter
insl
lret
push
icebp
cs
clc
jmp
lret
jge
pushf
mov
cmpsl
lret
dec
xor
and
adc
lret
call
push
inc
pop
scas
rcl
fnstcw
lret
subl
clc
lret
add
and
add
mov
pop
xchg
sub
push
push
fisubrl
or
lret
push
and
jnp
xor
pushf
ljmp
shrb
stc
divl
out
sahf
jmp
or
adc
jbe
push
xor
lret
jmp
cwtl
mov
jecxz
dec
jae
sub
test
sub
dec
fs
lods
add
repz
lock
jns
stos
xchg
pop
into
ror
pushf
xchg
lret
pop
mov
lret
push
cmp
lret
sub
push
lea
inc
mov
or
add
hlt
in
shrb
in
jecxz
lret
mov
push
inc
xlat
mov
xor
fists
jb
stc
ljmp
shl
mov
xchg
andl
add
fmulp
dec
aad
dec
inc
les
lret
xor
lret
cmp
stos
sub
aam
in
cwtl
outsl
lret
decl
bound
aad
dec
negl
lock
mov
adc
xor
and
lret
mov
or
ja
ficoml
lret
sub
lahf
arpl
enter
aam
fsubrl
lret
jecxz
mov
stos
inc
insb
js
adc
add
pop
jge
ljmp
repz
fidivl
xor
cmp
sti
push
inc
dec
aam
mov
cmc
shl
sbb
cmp
nop
in
mov
mov
mov
add
cmc
aam
lock
shll
cmp
jmp
stos
loope
mov
lret
insb
aam
cli
ret
pop
lret
rcr
sub
jl
or
add
inc
out
loopne
int3
pop
rorb
in
mov
scas
lret
push
jp
xor
mov
or
add
vpcmpeqw
inc
arpl
into
jb
fsubs
xor
push
cli
lahf
cmc
fwait
jns
sub
lret
repz
mov
sarb
xchg
push
xor
xor
xchg
and
adc
scas
fisttpl
nop
cmp
scas
test
cmp
into
ss
ljmp
jecxz
loopne
pop
es
pop
and
repz
js
mov
xor
pusha
mov
lret
pop
fsubs
jg
repz
sub
dec
in
or
lret
mov
lret
clc
push
sahf
insl
sbb
lret
pop
lods
ror
mov
les
mov
xor
inc
mov
sub
mov
jns
xchg
lret
popf
fsts
call
sub
jo
jmp
or
ret
add
fwait
dec
dec
aas
xchg
inc
mov
push
in
lret
cmpl
repz
sbb
pop
xchg
cwtl
dec
lds
inc
ljmp
xchg
lock
dec
ret
imul
add
pop
or
lret
dec
cmp
dec
aas
arpl
mov
add
xor
bswap
mov
cs
xor
cli
dec
mov
mov
int3
outsl
jmp
fisubrl
sub
dec
lret
call
mov
push
xchg
mov
out
cmpsb
int
cltd
incb
and
lret
inc
push
or
mov
lret
push
lret
jle
cmp
into
push
mov
ret
repz
in
outsb
mov
mov
icebp
push
lret
and
fisubrs
mov
lahf
out
fstpl
ror
repz
addl
aas
jle
popa
jo
fsubrp
fwait
sarb
into
sub
cmp
jg
xchg
or
and
pop
mov
jb
sti
aas
fdiv
dec
lcall
jo
enter
xchg
or
or
xor
lods
cmp
lret
dec
cmp
sub
pop
test
dec
rcl
lret
fldcw
lret
push
mov
popf
push
dec
lret
in
jno
inc
imul
sahf
jnp
xchg
fstpl
lcall
cli
adc
dec
push
sub
outsl
lods
push
pop
shl
inc
xchg
mov
cmpsb
outsb
xor
mov
and
in
sbb
vmovlps
jo
fldl
dec
inc
cmp
sarb
cld
mov
mov
aam
out
jge
stos
dec
mov
push
ret
mov
movsl
rorl
add
repz
stos
in
das
int3
sbb
cmp
xor
xor
add
movsb
sub
mov
call
xor
push
push
mov
popa
cmp
pusha
bound
lret
push
lret
mov
pop
aam
push
mov
mov
dec
xchg
vucomisd
lret
lret
adc
insl
stc
out
popf
mov
mov
mov
adc
jp
fwait
pop
dec
push
rcrb
lret
inc
ja
pop
das
pop
mov
cli
es
push
dec
std
cli
rcll
add
pop
into
cmp
lret
stos
cwtl
icebp
fisubs
ljmp
add
mov
test
scas
lret
scas
loopne
jnp
ret
push
xchg
pushf
or
js
lret
fcmovbe
push
adc
lret
and
stos
inc
add
sahf
fimull
xchg
mov
push
cmc
lret
cli
js
call
mov
or
test
push
cmc
iret
mov
and
jne
sub
mov
sub
inc
dec
inc
mov
mov
nop
cmp
lret
or
js
mov
inc
pop
int
mov
and
xchg
aad
jb
dec
cli
scas
jmp
push
dec
test
or
lret
mov
push
mov
imulb
pop
cli
mov
cs
mov
aad
lea
mov
mov
idivl
dec
test
pop
in
cmpsl
fs
or
lret
addr16
sbb
mov
pop
fmulp
sub
xchg
push
jne
add
xchg
mov
mov
call
mov
fcmovne
push
xchg
xchg
xchg
sub
std
loop
push
icebp
lods
testl
sub
jo
daa
xchg
pop
inc
and
xor
sbb
movsb
sbb
fsts
jp
ror
bound
repz
lret
adc
pop
stos
loopne
dec
push
in
xchg
or
std
pop
jns
in
xchg
test
iret
sahf
mov
mov
loope
xor
jns
in
push
rol
nop
mov
xchg
nop
sbb
sub
push
test
das
dec
cmpsl
int
into
out
mov
nop
and
inc
outsb
jne
or
addb
js
ljmp
mov
mov
add
mov
xor
imul
fs
out
jp
test
jne
sbb
mov
dec
mov
mov
xorb
pop
outsl
xor
xchg
dec
cwtl
mov
ret
push
mov
pop
xorb
ljmp
mov
jb
jbe
cli
sbb
in
jae
scas
lahf
inc
cld
sub
addb
push
jae
and
sbb
sbb
push
jecxz
lds
lahf
sub
push
flds
fimull
adc
lahf
push
lret
lea
sub
push
clc
data16
jmp
xchg
mov
or
add
pop
xchg
mov
push
xor
or
std
adc
jle
shl
push
pop
movsl
pop
in
mov
pop
daa
and
cmp
lahf
neg
in
fsubl
mov
jo
adc
inc
js
cmp
rclb
cli
mov
fidivrl
xlat
movsl
jns
jg
push
fs
lcall
add
mov
mov
mov
jmp
mov
or
cmpl
push
shrb
pop
mov
loopne
mov
mov
inc
roll
loopne
or
sbb
lret
out
sbbb
ljmp
pusha
adc
dec
xchg
mov
lcall
lea
jle
movsb
ds
or
mov
hlt
out
punpckhwd
inc
adc
jle
xchg
sub
or
fdiv
cmpsl
lret
push
xchg
mov
lret
xchg
jge
enter
into
sbb
sahf
xchg
pop
cmp
int3
stos
jp
jmp
aad
mov
lret
bound
add
xor
lret
cwtl
push
rcll
xlat
sbb
jnp
cs
sub
or
mov
lret
jecxz,pt
sti
jg
lret
decl
nop
sbb
test
pop
xchg
cmpsb
into
lret
cmp
pop
jns
cmp
dec
lods
aad
std
jno
lret
pop
xchg
dec
jbe
adc
ja
orl
cmp
into
mov
jb
aas
pop
mov
fisubrl
cld
or
inc
testl
cmp
inc
sub
lods
mov
push
inc
cltd
cmc
aam
mov
in
lret
lods
sar
loopne
adc
sub
decl
insb
fnstsw
cmp
jge
popf
movsl
sbb
pop
cmp
mov
dec
jno
je
mov
sub
cmpb
iret
aas
push
mull
lret
movsb
jecxz
sub
mov
cltd
xchg
xor
into
pushf
dec
pusha
fcomps
in
bound
lret
jmp
cmp
mov
or
ljmp
nop
mov
mov
jp
adc
ficoml
stc
push
iret
aad
sub
popf
mov
add
push
into
inc
inc
int3
xchg
mov
mov
fucomip
pop
and
cmp
fidivrl
jbe
push
fs
push
je
orw
mov
or
xor
ja
jl
add
daa
dec
jns
lret
mov
fmuls
inc
xchg
das
mov
stos
mov
lods
lret
inc
int3
test
mov
in
mov
push
cmp
mov
cs
pusha
stos
into
or
movsb
mov
in
lret
imulb
lret
popl
mov
imul
bound
mov
int3
and
mov
mov
adcb
out
sub
lret
int3
pop
mov
push
mov
cmp
push
add
xor
mov
fnsave
enter
imul
pop
nop
sub
mov
fisubrl
fwait
adc
pop
lret
sbb
xor
or
test
lret
cltd
sub
aam
mov
inc
mov
jl
in
into
or
push
lret
mov
in
add
rclb
push
dec
test
push
icebp
sbb
pop
popf
cli
pop
and
push
xor
js
shrl
test
mov
dec
or
cmp
or
sbb
test
xor
xor
fucomip
push
push
adc
fidivrs
xchg
into
es
cmpsb
inc
aas
sbb
pop
push
mov
dec
or
push
insb
mov
or
jle
out
lret
sbb
fiaddl
imul
fs
jle
cmp
pop
fwait
es
push
lret
or
out
lret
xlat
test
push
add
cmp
pop
popa
lahf
dec
fmull
jne
add
iret
lret
and
pop
cltd
mov
cmp
xchg
arpl
int3
sub
int
xor
add
cwtl
lret
pop
insl
mov
arpl
int
xchg
jmp
jbe
mov
das
sahf
out
xor
adc
pop
jns
jbe,pt
test
mov
xor
div
sbb
lret
mov
test
arpl
jp
xlat
aaa
dec
mov
ljmp
stos
lock
rcr
lret
outsl
and
add
aad
lret
repnz
pop
iret
jge
lret
cmp
sbb
aas
or
xlat
in
rcl
sub
mov
cwtl
cmpsl
das
in
mov
jecxz
in
ljmp
aad
into
push
lret
aad
insb
fs
nop
mov
cmp
pop
push
outsl
lret
jmp
push
int3
sbb
cmp
inc
and
jle
ret
lock
mov
negl
lret
add
mov
pop
imul
mov
cltd
ret
inc
adc
dec
loop
cmpl
clc
fdivs
les
sbb
into
dec
sbb
shrb
stos
mov
dec
cld
add
rcrb
aad
outsb
or
xchg
fildll
rclb
lea
daa
sub
pop
and
and
push
inc
dec
inc
mov
xchg
rcll
ret
test
adc
insb
lret
xchg
cmp
xchg
cmp
insl
out
pop
pop
fsubrs
jns
pushf
add
addb
inc
movsl
std
push
push
cld
out
stc
popf
lahf
xchg
sti
xor
adc
add
dec
shlb
mov
jmp
call
test
mov
loop
sbb
cmp
ret
push
jecxz
lret
push
loopne
jmp
aam
mov
mov
rcrb
and
xor
lret
inc
or
mov
xchg
cmp
xchg
sarb
pop
cmp
xchg
je
fs
inc
cli
fiaddl
or
out
cmp
cltd
push
shl
jg
mov
lods
movsb
mov
mov
insb
in
sbb
mov
jmp
fnclex
jmp
ficoml
xchg
xor
push
push
movsl
xor
aad
dec
aaa
outsb
cli
xchg
mov
pop
sbb
lret
rorb
fs
xchg
mov
push
mov
cmp
push
lahf
jnp
int
xchg
mov
test
lret
cmp
sbb
pop
lret
xchg
in
mov
pop
dec
addr16
shlb
fbld
nop
mov
test
xchg
add
add
stos
cmp
push
stos
mov
pusha
jno
sbb
stos
jge
stos
insl
jmp
scas
xor
jb
ljmp
lock
jg
lret
inc
push
or
sbb
movsl
leave
jbe
adc
shlb
dec
lret
push
inc
lret
movsl
and
enter
or
fdivrl
js
pop
add
pop
and
or
jo
xchg
dec
jmp
inc
int
imul
cmc
pop
jmp
out
ljmp
pusha
xor
mov
js
shlb
fisubrl
mov
pop
xlat
lock
adc
pusha
fisubl
scas
mov
lea
loop
push
jo
shr
sbb
mov
mov
jecxz
mov
pop
adc
jle
ret
jb
cli
sbb
je
ftst
test
shrl
cwtl
sbb
and
jge
mov
dec
data16
pop
aam
xchg
fidivrl
mov
jno
rorl
pop
jmp
ret
or
enter
imul
jle
out
sbb
pop
fiaddl
xlat
and
push
pop
mov
inc
in
jns
jp
push
or
xor
lret
mov
pop
popf
stos
lret
jp
sbb
cmp
mov
iret
es
int3
arpl
sbb
faddl
aam
mov
orb
fisubrl
xor
in
lret
fs
outsl
xchg
popa
arpl
enter
mov
inc
outsl
fisubl
pushf
fcomps
std
sbbb
sbb
xor
test
and
out
add
cmp
cli
das
test
inc
pop
test
inc
pop
ljmp
imul
test
xchg
mov
xchg
lret
lds
fwait
xorl
loop
mov
icebp
aas
pop
cmp
sub
in
stc
lret
mov
lret
outsb
sbb
sbb
pop
out
test
ret
dec
sbbl
sarl
out
mov
sbb
clc
cli
inc
cmp
mov
inc
pop
jl
lret
out
pop
jle
aaa
pop
cmpsl
mov
pop
sbb
sahf
mov
lahf
rcr
xchg
addr16
mov
into
mov
cmp
lret
lock
stc
push
inc
sti
jae
mov
jns
fs
lret
xchg
push
cmpsl
adc
push
mov
hlt
iret
xor
inc
stos
pop
stc
sub
mov
push
push
decl
insl
loop
sti
and
jle
rcrb
icebp
movsl
ss
jle
mov
ja
call
inc
cmpsl
mov
scas
mov
shlb
cmp
lret
lock
pop
xchg
mov
scas
cmp
popa
jne
add
jmp
push
mov
das
stos
call
adc
sub
mov
mov
pop
imul
sbb
xor
push
cmp
mov
jne
inc
loopne
adc
loopne
lods
shrb
or
sub
frstor
stos
inc
or
test
lcall
push
sbb
int3
pop
jne
lock
or
push
xchg
pop
negb
sub
adc
pop
push
ret
fsubrl
ja
mov
leave
stc
aas
cmc
inc
daa
cmp
push
popa
aas
add
imul
les
mov
jb
fcmovnu
sub
add
dec
pop
arpl
jne
inc
xorb
or
cltd
int3
repnz
mov
iret
dec
movsl
jbe
sbb
scas
bswap
aam
and
nop
mull
pop
mov
fildll
out
shl
cwtl
data16
movsb
lret
arpl
sbb
push
sub
into
mov
mov
cmp
sub
call
add
push
mov
scas
cmp
int3
fildll
std
mov
shl
adc
roll
roll
sti
iret
sbb
shll
int
mov
rcrb
pushf
xchg
test
adc
and
je
cmp
jnp
mov
sbb
jmp
push
mov
sub
rclb
repnz
pop
hlt
aaa
xor
sub
sarl
mov
adc
mov
sub
mov
add
jne
cwtl
xlat
push
pop
xchg
ljmp
ljmp
int3
pop
pop
sub
test
push
jge
or
adc
cmp
jmp
std
lods
loopne
sub
jecxz
cmp
daa
insl
push
inc
repnz
xchg
mov
int3
fimull
push
in
push
aas
and
daa
ds
mov
or
lcall
test
cli
shrb
mov
idivb
into
push
xchg
push
lds
inc
cmp
sub
sahf
and
out
loop
xor
mov
inc
lds
pop
outsb
xlat
cmp
lret
adcb
xchg
test
leave
iret
lret
add
pop
ret
push
and
inc
jg
sti
jecxz
lret
sub
js
dec
adc
pushf
pop
add
mov
insl
int
mov
fs
sbb
add
ffree
or
inc
dec
rcrl
ljmp
daa
pop
lea
cmp
inc
mov
inc
inc
testb
ss
repz
out
jnp
cmp
jge
lods
mov
jne
lock
jmp
mov
jo
pusha
je
in
xchg
inc
mov
sti
xlat
int
shl
jp
addr16
inc
rcll
scas
es
pop
fcmovnb
fs
cs
popa
pop
mov
lds
sahf
or
jp
mov
add
mov
rcrb
rclb
cmp
in
in
cmpsb
rcl
mov
dec
outsl
mov
sti
cmpb
push
xchg
dec
mov
mov
pop
imul
cmp
sti
dec
mov
popa
adc
lds
mov
dec
lods
subb
mov
orb
imul
pushf
cmp
sbb
push
dec
cmp
pop
fldcw
cs
sbb
repz
push
inc
pop
mov
xchg
adc
dec
push
lds
leave
or
push
push
dec
clc
mov
sub
outsb
lahf
push
cmp
mov
cmpsl
repnz
add
jbe
mov
pop
sbb
icebp
inc
jmp
popf
inc
pusha
push
movsb
jl
jb
xchg
fidivs
jle
sbb
add
pop
fcmovb
aam
lds
push
stos
gs
int3
ljmp
pop
and
push
scas
xchg
sub
inc
and
pop
aad
arpl
cwtl
inc
xchg
cld
fidivs
push
push
out
iret
mov
fwait
outsb
mov
mov
pop
dec
adc
inc
add
movsl
mov
mov
repz
adc
int3
xor
inc
lret
mov
xchg
lret
arpl
cmp
subl
xchg
pop
sub
push
scas
fimull
decl
or
mov
xor
or
jb
lret
in
inc
cli
xchg
sub
push
cs
std
cwtl
adc
and
lret
push
push
out
add
push
or
mov
stos
shlb
jns
mov
xchg
fsubrl
enter
sub
ja
repnz
psllw
sbb
add
rep
in
movsl
into
scas
movsl
aas
or
mov
and
push
mov
das
xchg
fimuls
lcall
push
aad
sbbl
add
aad
jl
push
jne
call
push
enter
push
frstor
inc
addr16
inc
decb
pop
sbbb
ljmp
mov
imul
add
pop
mov
xor
sbb
push
and
and
leave
jecxz
iret
out
push
pop
out
sti
lea
loope
lahf
jmp
xchg
xor
or
frstor
stos
push
movsl
aam
das
mov
subb
test
pushf
sarb
aam
mov
and
sbb
imul
or
push
dec
mov
or
cmp
sub
jmp
test
push
sti
jbe
nop
adc
leave
or
xchg
dec
scas
xchg
jmp
mov
test
cmp
push
jl
in
mov
push
inc
mov
inc
xchg
add
adc
cmp
push
add
std
mov
push
enter
xchg
loopne
pop
push
fmull
hlt
test
push
lahf
mov
arpl
pop
xchg
repnz
pop
dec
xor
dec
pop
ljmp
and
mov
push
sbb
loopne
jb
ljmp
loopne
rorl
push
push
mov
jmp
enter
nop
pushf
icebp
and
jmp
test
outsb
sarl
xor
mov
mov
ret
sarb
fwait
test
sbbl
adc
sub
add
pop
scas
sub
sub
push
mov
mov
addl
mov
push
pop
out
jbe
loopne
inc
jmp
jecxz
sbb
sbb
shll
mov
out
cmp
fidivrs
icebp
out
pop
in
test
pop
out
aas
cmp
lds
inc
aaa
pop
push
gs
fists
insb
ja
lods
enter
lret
fisubl
popf
mov
repnz
repz
loopne
cwtl
jge
icebp
stos
xchg
mov
outsl
add
push
ja
mov
pop
jmp
test
mov
push
inc
lock
pop
into
sub
push
push
sbb
imul
cmp
pop
js
jns
pushf
jmp
mov
jp
out
cmp
xchg
jmp
es
js
sbb
addl
int3
mov
insb
in
out
cmp
mov
in
cltd
pop
stc
pop
jge
inc
cmpsl
insl
lahf
aaa
cmp
mov
xlat
pop
sti
mov
cs
or
scas
sbb
cmp
push
cwtl
dec
or
mov
or
mov
scas
push
or
mov
and
mov
jmp
sahf
sub
add
and
into
jae
scas
popf
xchg
sbb
les
stc
pop
pushf
je
sti
out
mov
or
mov
sbb
fs
in
jnp
test
insb
sub
fidivl
pop
lods
jle
push
mov
or
push
lcall
mov
dec
mov
and
jns
repz
mov
push
movsb
out
scas
jmp
mov
push
jmp
in
ljmp
pop
insb
fs
jno
fstp
lods
cmp
das
sbb
movsl
adc
and
ret
out
xchg
push
faddl
add
sbb
cmp
mov
mov
lds
jnp
ljmp
sub
shld
pop
push
cltd
or
mov
push
jecxz
lret
mov
pop
cmc
push
sbb
or
fs
push
sahf
sti
fisubl
inc
sub
inc
roll
sti
xchg
or
mov
jo
xchg
jg
inc
outsb
inc
pop
fisubrs
aas
sbb
push
mov
adc
sub
sti
js
fisttpll
cs
mov
icebp
adcb
cmp
mov
ja
out
pop
cmp
and
jle
out
adc
sub
into
aas
lret
xchg
test
mov
or
pop
mov
adc
mov
mov
jbe
in
push
ficoms
fsubs
cmp
enter
dec
mov
das
push
mov
cmpsb
les
jne
jb
mov
cmp
push
in
xchg
icebp
int
andb
mov
vucomiss
mov
dec
add
push
inc
inc
insb
imul
add
pop
movsl
pop
xchg
mov
mov
test
fldl
stos
cmpsl
lret
push
gs
test
pushf
sub
js
adc
mov
bound
stc
jbe
bound
es
pop
incb
push
int
mov
aaa
dec
movsb
cmc
fistps
and
fxch
or
lods
test
outsb
pop
xchg
out
mov
jne
repnz
lret
push
sub
out
push
jbe
sbb
sub
push
mov
sbb
push
cli
test
hlt
xor
daa
mov
enter
pop
sbb
add
imul
jno
sahf
inc
sarb
outsb
fs
pop
ret
sub
push
leave
add
int
lret
or
push
jmp
outsl
inc
push
int3
xorl
and
inc
mov
dec
and
cld
pop
test
push
fisubs
repnz
sub
sarb
test
test
popf
or
jecxz
pop
adc
xchg
sub
add
int3
vpcmpgtd
lret
adc
clc
movsb
fisubrl
jmp
adcb
cmpsl
and
mov
stos
and
repz
push
sub
lds
xor
jp
lret
adc
mov
mov
cli
adc
popf
inc
leave
int
nop
lods
rcll
xor
out
popa
sarl
fimull
mov
scas
cmp
jb
movsl
mov
rorb
push
and
lds
xchg
inc
push
pop
adc
lret
mul
iret
xor
ljmp
mov
mov
lcall
or
add
dec
add
mov
xchg
adc
jno
orb
iret
inc
addr16
push
push
divb
mov
mov
jmp
divps
mov
add
pop
inc
in
inc
lods
and
jne
jmp
xchg
push
out
cmp
inc
mov
fisttpll
add
lock
xchg
jns
jno
stc
jmp
xchg
test
push
xchg
outsl
adc
pop
les
dec
dec
xor
je
dec
pop
jmp
imulb
jns
cmp
test
inc
lea
ret
xor
mov
pushf
mov
aad
sar
or
xchg
out
iret
out
incl
repz
scas
xor
je
into
push
subb
sbb
or
pop
sub
or
sbb
xor
mov
sti
fisttpll
int
mov
pop
int
and
out
jp
mov
movsb
scas
add
pop
test
inc
or
rol
adcb
lret
pop
icebp
shl
leave
add
push
es
stc
scas
cwtl
stos
jp
push
ljmp
or
sub
push
add
sub
lea
cltd
out
push
sbb
pop
fidivrs
adc
mov
mov
loopne
rcrb
xchg
dec
lods
gs
dec
inc
mov
stc
jns
arpl
movsl
sarb
pop
jno
xchg
lds
dec
xor
jl
add
push
cmp
mov
lahf
icebp
sub
cmpsl
cmpl
idiv
roll
add
ds
repnz
inc
mov
mov
fisttpll
mov
jg
jmp
xchg
and
cmp
push
jno
ret
scas
pop
jl
pusha
in
inc
sub
test
sbb
and
jne
loopne
push
pop
loopne
mov
arpl
push
cmpsl
lea
mov
adc
insb
adc
std
push
inc
loope
test
pop
jp
mov
dec
lahf
sub
push
push
sub
sbb
push
jge
sub
push
add
cmpsb
bound
loope
or
pop
loope
call
pop
lds
pop
shrl
cmpsb
movsl
out
mov
cmpsl
jmp
and
pop
jle
arpl
repz
lahf
rcll
ljmp
imul
mov
jne
ljmp
xor
outsl
pop
outsl
cmp
or
je
sub
sub
cwtl
push
and
fbstp
addr16
sbb
pop
adc
mov
fdivrs
pop
or
mov
mov
sub
vmovapd
jl
push
jmp
mov
xadd
and
fwait
dec
icebp
sti
sahf
dec
xor
imul
push
mov
ss
outsb
cmpsb
hlt
push
out
pop
cmc
scas
aam
sub
outsb
cwtl
push
push
mov
pop
movl
sub
loop
xchg
or
shrl
cli
out
test
sarb
jne
repnz
xor
pop
lret
call
fisubs
into
popf
mov
mov
inc
clc
jge
push
repnz
adc
nop
out
bound
shrl
adc
into
and
pop
arpl
push
jle
xchg
pop
sbb
sahf
adc
inc
fisttpl
mov
inc
or
jecxz
add
dec
sbb
outsl
jle
sbb
aas
int3
sbb
push
pop
xchg
mov
pop
ljmp
sahf
into
call
ret
jbe
imul
leave
xchg
cmc
adc
rorb
fcoms
jle
or
lds
or
mov
pop
aas
mov
pop
popf
and
rorb
xchg
inc
mov
dec
call
sbb
sbb
adc
pop
push
inc
loop
and
scas
pop
repnz
call
stc
inc
popa
jp
shlb
out
pop
mov
inc
loope
fiaddl
jge
insb
mov
lret
pop
jmp
movsl
jle
shrl
add
push
mov
lods
sbb
xchg
sarb
movsl
jno
pop
inc
cmpsb
mov
jg
mov
in
mov
lret
loope
sbb
cmp
pop
ret
cmp
popf
lea
xchg
lret
xor
xchg
rolb
mov
sub
out
or
lret
test
mov
je
sub
and
lret
xor
stc
rolb
cmp
adc
pop
leave
into
dec
sub
mov
inc
aad
dec
mov
insl
pop
inc
int3
inc
jns
cld
mov
add
adc
es
cmc
stc
ljmp
stos
mov
lret
push
sahf
pop
ret
fwait
jo
cs
and
lret
gs
lret
jno
xor
sbb
push
cmpsw
out
xchg
push
cld
dec
lret
ljmp
adc
call
dec
inc
lret
pop
jbe
cmp
lret
adc
int
push
lret
fldenv
stos
push
dec
or
iret
int3
nop
lea
mov
mov
sbb
js
mov
int3
arpl
aad
mov
push
mov
pop
xchg
or
mov
pop
xchg
scas
pop
dec
cmpsb
lret
cmp
movsb
pop
bswap
sub
jl
and
fwait
lret
pop
add
xchg
dec
cmpsl
mov
gs
jge
mov
inc
mov
adc
cmp
pop
mov
adc
fcoml
lret
popf
xor
push
add
loopne
cmp
stos
sbb
cli
es
push
arpl
push
int
pop
aas
test
insb
daa
sti
inc
mov
or
sbb
ds
imul
lret
add
movsbl
mov
cmc
pushf
js
mov
xlat
jg
xchg
popf
adc
movsb
cltd
and
push
jnp
into
push
push
lret
lret
mov
xchg
bound
mov
pusha
lret
adc
add
or
out
dec
push
pushf
xor
lahf
out
imul
mov
or
mov
loop
cwtl
nop
mov
cli
fwait
lret
das
dec
int3
lcall
pop
or
rorb
jle
rcr
stos
nop
popf
lret
in
inc
mov
sbb
or
jge
mov
lret
imul
sbb
sub
lret
cwtl
adc
aaa
adc
jecxz
jae
ret
loope
push
loop
xor
nop
pop
xchg
add
fxch
fsubrl
inc
adc
cwtl
pop
xchg
lret
ret
cmpsb
fbstp
mov
into
or
mov
sbb
roll
pop
in
push
add
arpl
out
pop
dec
js
insb
repz
push
cli
lret
adc
sbb
insb
pop
pushf
push
lret
sar
or
out
cmp
int3
call
lock
xchg
pop
stos
movsl
add
push
mov
jns
pop
xor
mov
lds
dec
out
cmpsb
or
xchg
lret
xchg
sbb
adc
lret
popa
cmp
cli
adc
or
aad
repnz
mov
push
test
jno
ljmp
lret
mov
loope
inc
mov
loopne
in
test
and
ljmp
adc
lret
or
inc
into
stc
lret
pop
or
iret
adc
test
push
gs
mov
lret
and
push
lret
push
jle
inc
sub
ret
aad
cmpsl
lret
and
repnz
cs
mov
add
adc
inc
xchg
xorl
dec
sub
daa
lret
add
xchg
xchg
xlat
aas
lret
in
aam
stos
cmp
xor
dec
lds
xorb
dec
xor
lcall
or
pop
outsb
push
jbe
mov
ss
repnz
lret
seta
sbb
pop
jae
or
push
and
fmuls
jl
cmpsb
ljmp
lret
add
fsubrl
sbb
mov
mov
jae
add
outsb
lods
out
data16
mov
adc
lret
mov
and
pop
insb
lea
movsl
lret
adc
adc
jp,pt
push
mov
rorb
ret
lret
cmpsb
fwait
mov
lret
subb
or
xor
hlt
in
push
pop
pusha
cmp
add
dec
cmp
mov
sbb
lret
idivl
addr16
scas
sub
adc
imul
lret
call
lret
jae
cli
push
dec
lret
cmp
add
sub
push
lahf
adc
imul
clc
lret
test
lret
loop
popa
sbb
mov
mov
ror
shr
test
cld
cmp
in
pushl
mov
cwtl
enter
jns
orl
repz
pop
psubd
icebp
ljmp
sbb
or
sahf
aam
int
push
jle
push
push
mov
pop
jo
and
nopl
push
add
scas
movsb
imul
and
mov
push
mov
inc
imul
mov
add
out
or
fmul
pop
cmp
sahf
lret
rcr
popa
loope
loopne
lret
mov
aad
pop
inc
icebp
out
popa
jle
mov
cmp
pminub
dec
sahf
jbe
out
int
push
in
je
mov
sbb
pop
cmp
xor
add
cmp
jp
jge
daa
das
aaa
out
lret
xor
mov
jge
lret
nop
and
push
stc
das
lret
push
inc
aad
jae
mov
lret
sub
pop
and
rcll
out
xchg
cli
pop
sbb
sub
mov
imul
push
sbb
mov
mov
test
aad
loop
lock
pop
push
or
push
sbb
add
mov
sar
cli
push
dec
lret
push
icebp
cmp
and
shlb
insl
sbb
pop
cld
in
pop
mov
adc
lock
xchg
inc
mov
lret
jo
cld
sub
mov
jp
pop
shr
lret
mov
andb
jle
test
js
lret
push
xchg
xor
add
xor
scas
fmull
pop
call
sarl
add
jae
stos
sbb
adc
test
cmp
mov
or
cli
dec
stos
ror
pop
add
test
and
mov
lret
divl
dec
or
aas
jp
test
sbb
push
pop
ljmp
outsl
lahf
pop
addr16
into
in
dec
lret
movsl
inc
arpl
jge
xor
mov
add
sub
loopne
pop
cmp
scas
pushf
in
std
lret
scas
repnz
xor
inc
lret
cmpsl
testb
dec
sahf
sar
lcall
bound
negl
ret
ss
adc
add
cmp
out
push
shlb
or
add
mov
rcrb
jmp
shlb
leave
jecxz
pushf
adc
mov
ficoml
lock
pop
adc
inc
insb
xor
xor
out
mov
push
test
fstpl
adcl
dec
adc
pusha
shrb
ja
lret
and
insl
sub
and
adc
outsb
fwait
fs
rol
nop
add
adc
mull
lods
roll
xchg
outsb
std
xor
cli
lret
aaa
out
inc
cmp
lret
int
je
xor
fiaddl
or
xchg
pop
rcll
cmp
add
nop
sti
sub
or
and
pop
imul
jbe
jge
loopne
stc
mov
and
lret
sbb
stos
lods
mov
jp
in
xor
mov
loop
scas
inc
stos
push
ret
fistpll
xor
mov
lret
dec
cld
pusha
dec
cmp
pop
xchg
ja
jnp
or
lret
dec
push
mov
nop
dec
aam
cli
mov
out
mov
das
bound
scas
sti
xchg
cmp
fisubl
andl
mov
xchg
in
mov
test
cmp
loope
orl
lret
ljmp
mulb
orb
cmp
dec
pushl
xchg
mov
lods
cmp
mov
popf
cltd
add
fstl
scas
xor
lret
ret
das
and
lds
xchg
ficoml
xchg
push
fprem1
ja
mov
mov
mov
cli
jb
lret
gs
in
xchg
lret
xor
out
sar
cmpsl
insb
sbb
aam
push
mov
jb
xchg
fcomps
push
rcr
xchg
cmp
and
add
push
adc
cmp
sar
sbb
sbb
fldenv
push
insb
jns
dec
dec
adc
adc
lock
xlat
movsl
in
inc
jo
mov
scas
xchg
loopne
ja
dec
adc
ss
gs
or
push
jbe
add
ja
rcrl
out
sub
inc
outsb
lret
mov
mov
pop
pop
loopne
in
jp
or
mov
scas
pop
jmp
push
jle
fiadds
pop
in
pop
inc
pop
jne
movsl
mov
pop
fs
push
push
xchg
mov
scas
cmp
sub
or
or
pop
mov
sub
inc
ret
mov
jo
xchg
sbb
cmc
cmpsb
out
sahf
cmpsl
lret
xchg
sarl
and
mov
lcall
out
shrl
loopne
sbb
shll
jno
stos
xor
cmovno
leave
les
sub
daa
inc
shrb
nop
sub
ljmp
test
cmpsl
repnz
dec
ficompl
stos
or
in
pop
dec
sub
bound
mov
push
or
mov
lret
and
jne
and
xor
pop
leave
sub
push
int3
ljmp
sbb
icebp
xchg
lret
push
lcall
cmp
scas
adc
mov
cs
pop
and
pop
xchg
stos
mov
stc
or
xchg
popf
xchg
into
shrb
lods
mov
or
enter
int3
test
lods
int3
pushf
stos
inc
and
in
shlb
rcrb
jno
sub
lret
lea
or
add
movsb
stos
push
repz
push
fyl2x
repnz
add
dec
mov
int
loop
pop
xchg
or
mov
xchg
xchg
sbb
cmpsl
push
sbb
push
mov
lea
or
sbb
pop
adc
and
stos
clc
sub
ds
xchg
out
ljmp
mov
xchg
pop
jp
out
push
out
dec
enter
lret
popa
or
ljmp
rcr
lret
or
lds
mov
dec
ljmp
adc
lret
cwtl
testl
loopne
addr16
xchg
aas
xchg
lret
fisubrl
jle
mov
pusha
daa
imul
cltd
jmp
cmpsl
jmp
mov
movsb
dec
pop
push
sub
adc
ror
xor
sbb
pop
or
rcr
cli
mov
jmp
cld
mov
lret
sub
lock
sbb
jbe
adc
shl
mov
mov
xchg
insb
pop
fcmovnbe
dec
cltd
push
shll
sub
pop
mov
fcmovne
jmp
mov
lods
ja
jmp
sarb
inc
add
repz
into
in
out
sub
add
lret
lret
cld
mov
dec
cmpsl
push
mov
dec
loope
das
mov
in
ret
add
mov
into
pop
sbb
fmulp
aad
lods
iret
push
mov
dec
nop
not
dec
lret
sbb
in
iret
int3
mov
jno
xchg
push
sbb
cmp
dec
call
lret
stos
mov
xchg
leave
addr16
cmp
rol
inc
dec
mov
sbb
push
cwtl
xchg
int3
or
sbb
sahf
sub
mov
jecxz
ljmp
pop
cwtl
pushf
lret
jbe
cmp
scas
repz
jg
sarl
adc
out
adc
adc
ret
lret
mov
mov
sbb
enter
pop
stos
dec
into
stos
xor
sbb
push
pop
mov
cltd
xchg
aad
in
lret
mov
rcl
or
and
cltd
hlt
jmp
add
lret
pop
mov
mov
push
push
sbb
mov
xchg
dec
outsl
cmpsl
push
loopne
int3
push
sub
das
dec
mov
je
movsl
jmp
push
in
dec
lods
into
sub
sub
ficompl
popa
sub
je
mov
or
repz
pop
cli
adc
mov
into
lods
pop
sub
sbb
jmp
mov
sub
add
push
pop
push
lret
imul
mov
jecxz
ljmp
adc
jnp
int3
loop
xchg
or
rcrb
or
dec
jmp
pop
sti
movsb
adc
pushf
stos
stc
xchg
fwait
push
lret
inc
into
sbb
out
rcr
ret
cmp
push
xchg
adc
shl
orb
mov
mov
dec
or
stos
lret
push
decb
fwait
in
adc
cltd
mov
pop
lods
lret
loopne
insb
pop
cmpsl
fxch
or
or
out
dec
stos
adc
scas
dec
xlat
lea
sti
mov
cs
lret
or
int3
and
mov
and
adc
or
xchg
int
sbb
call
adc
xchg
adc
lret
push
dec
in
cltd
icebp
xlat
fs
fisubl
mov
lret
lea
nop
xchg
rcll
dec
cmp
xchg
mov
fwait
lock
or
push
ret
int3
out
cmp
cwtl
out
mov
leave
fisttpll
or
mov
or
dec
mov
into
pusha
or
sbb
push
popa
or
xorl
rcl
jmp
fs
leave
adc
mov
dec
rorl
flds
xchg
dec
cwtl
pop
cmpsb
sbb
pop
or
ljmp
pop
int
addr16
jns
mov
rcl
add
add
cwtl
rcr
lret
lods
movsb
cltd
mov
dec
fiadds
into
mov
lret
jno
xor
sub
pop
fdivrp
sub
mov
pop
add
es
lret
jne
dec
lea
call
mov
cwtl
mov
push
xchg
rcrb
imul
fwait
stos
mov
aam
jecxz
rolb
mov
xchg
rcrb
push
cmovge
bound
icebp
stc
rclb
fimuls
cwtl
rcr
xor
mov
jns
imul
test
fwait
dec
pop
push
lods
mov
jne
into
adc
sub
or
xchg
pop
into
stos
xchg
fcmovnbe
push
pop
adc
daa
je
imul
and
jmp
push
sub
int3
pushf
add
push
or
not
pop
mov
xchg
lret
mov
rcrb
mov
or
push
mov
int3
or
daa
pop
push
dec
xchg
pop
sbb
push
clc
cmc
cmp
push
mov
push
js
cmp
jnp
cld
rorl
and
sar
fimull
mov
ljmp
push
jno
dec
fimull
addl
das
insb
lea
cmp
sbb
sbb
pop
add
nop
mov
mov
lods
in
xchg
test
cmp
sub
xor
adc
in
and
mov
scas
into
dec
push
xchg
repz
into
shl
xchg
adc
lret
icebp
push
nop
or
dec
stos
loop
fsubs
mov
pop
iret
dec
lods
shlb
int
push
dec
lret
sbb
dec
cmp
sbb
scas
or
repz
adc
fisubrs
push
sbb
xor
mov
cltd
mov
dec
int3
fwait
cli
shlb
test
push
ljmp
add
or
rclb
mov
cmp
rcr
js
and
int3
xchg
dec
repnz
jns
cmp
adc
mov
push
sub
pop
aad
int3
ljmp
dec
ret
sbb
sub
mov
pop
mov
js
ror
out
cld
sarb
dec
add
dec
push
fdivr
xchg
lahf
fs
adc
jno
and
jne
mov
adc
inc
xor
shlb
fsubrl
dec
pop
xchg
jp
mov
xchg
je
mov
xlat
rcr
cmp
insl
mov
shrb
lret
aad
lea
in
ljmp
int3
aad
xor
rcr
pop
scas
sbb
dec
push
dec
shlb
cs
jmp
xchg
ror
int3
inc
mov
push
int3
into
sarl
ljmp
or
ljmp
shl
loop
mov
insl
iret
aas
xchg
push
mov
sbb
or
out
test
push
mov
daa
sbb
lea
dec
negb
adcb
mov
int
pop
xor
in
cmp
mov
or
fs
bound
jno
ljmp
adc
jg
xor
pop
mov
sbb
push
adc
das
ret
or
pop
shlb
pop
dec
int3
stos
imul
fmulp
mov
sub
xor
and
shlb
mov
mov
ficoms
sbb
lret
mov
push
sarl
cs
cmp
cwtl
cmpsl
stc
popa
adc
mov
push
int3
xchg
jecxz
push
nop
jb
popa
add
sbb
repz
setae
dec
jae
stos
jecxz
adc
jp
mov
addr16
mov
xlat
inc
rcl
xchg
sbbl
xchg
mov
dec
cwtl
lret
mov
ror
jle
icebp
fucomip
sahf
push
stos
popa
popa
rolb
std
pop
mov
adc
or
into
cs
dec
push
mov
call
xchg
fidivl
hlt
push
loopne
call
ljmp
loope
loop
xlat
inc
or
cmp
xchg
mov
sti
fisubrl
imul
ljmp
push
or
jecxz
pop
mov
xchg
mov
je
notb
popf
shll
adc
inc
cmp
adc
xlat
loop
sti
test
nop
mov
nop
mov
and
mov
mov
jbe
in
out
in
xlat
fcmove
fists
pushf
xchg
test
dec
jle
sar
imul
xchg
dec
push
imul
movsb
adcl
fmuls
mov
inc
mov
dec
mov
adc
dec
xor
or
ret
imul
sub
adc
cmp
pop
push
call
dec
int3
lods
cli
scas
imul
cmpsb
int3
popa
jl
fistl
adc
push
into
dec
lods
fsubrl
push
xchg
xchg
shlb
aad
fs
stos
out
ret
addr16
sub
mov
push
pop
lea
add
xchg
notb
mov
dec
roll
jp
adc
sub
out
lret
outsb
add
sahf
mov
int3
into
dec
pop
pop
ret
xchg
xor
ret
ljmp
fisttps
lret
hlt
cmp
sub
pop
xor
insl
dec
hlt
aam
loopne
andb
rcl
mov
push
stos
ret
call
rcll
pusha
jo
xlat
or
or
xchg
int
sub
or
push
cltd
mov
fldenv
sbb
mov
sbb
cmp
or
mov
lea
and
push
dec
mov
bound
mov
push
cmp
add
adc
push
mov
pop
scas
out
rcrb
xchg
push
cmp
lret
xor
or
jl
xchg
int
hlt
outsb
mov
lea
push
mov
adc
adc
std
int
add
pop
sbb
fcom
and
clc
mov
push
into
xor
mov
mov
lret
fdivrp
jmp
lock
jmp
adc
pushf
ficompl
popa
sti
mov
rcrl
fidivl
xchg
out
xchg
and
adc
jecxz
mov
test
lahf
push
out
mov
rorl
ficoml
leave
sub
scas
clc
lea
or
dec
adc
lret
lock
lods
push
xchg
mov
rcl
orl
push
xchg
inc
jo
imul
pop
iret
dec
lret
push
add
popf
mov
sar
rclb
in
out
fdivs
sbb
imul
push
sub
mov
push
adc
adc
adc
xchg
mov
lret
dec
xor
rclb
flds
mov
dec
rclb
insb
adc
mov
arpl
jl
or
fistpll
push
rcrb
in
push
stos
shll
aam
lea
push
pushf
add
mov
jmp
xchg
cwtl
add
jp
xchg
sbb
lret
push
push
lea
arpl
mov
mov
repz
into
pop
mov
xor
or
nop
shr
int3
pushf
orl
stos
daa
out
mov
jge
jb
shrb
sbb
les
lods
fldl
cli
cmp
xlat
pop
nop
fs
ds
mov
xchg
add
cmp
jecxz
xchg
xchg
jecxz
shrb
into
push
dec
push
rclb
pop
mov
cli
fsqrt
leave
jl
jecxz
pop
xchg
ljmp
push
into
cmp
cltd
pop
or
dec
cwtl
push
repnz
inc
cltd
cmp
int3
xlat
in
cmpsb
and
pop
rclb
mov
add
rorb
push
xchg
push
mov
dec
lret
aaa
jecxz
mov
xlat
imul
mov
jae
mov
bound
rorb
or
mov
in
shlb
adc
insb
int3
cwtl
xlat
ror
ljmp
or
icebp
pusha
cmp
mov
cmp
mov
into
orb
inc
xchg
popa
pop
pop
adc
lahf
or
or
dec
fdivrs
lock
push
jne
xchg
sbb
fwait
out
mov
xchg
fsts
js
inc
push
int3
ret
sahf
lret
jno
xchg
push
fldcw
xor
iret
sub
fisttpll
and
xchg
outsb
or
add
xchg
cmp
mov
dec
mov
je
adc
pop
jb
adc
int3
add
sub
shlb
outsb
mov
int3
imul
ljmp
bound
dec
movsl
dec
dec
mov
lret
ja
push
mov
popa
or
jle
cmp
fisubs
sarb
mov
test
stos
xor
addr16
dec
into
fisttps
dec
iret
lret
fisubrl
test
mov
repz
nop
inc
mov
das
xchg
rcr
ljmp
lret
into
mov
ds
shl
in
imul
sbb
pop
mov
mov
jge
loopne
push
inc
int3
into
and
int3
iret
jecxz
dec
rcrb
icebp
scas
mov
or
and
mov
cmp
mov
sbb
cltd
push
xchg
iret
lret
fisubrs
int
adc
jmp
cmp
xchg
push
mov
ficoml
xchg
push
inc
pop
pop
nop
aam
or
or
popa
sub
fstl
jae
add
stos
ljmp
fsts
into
add
pusha
lods
mov
outsb
push
or
rorl
or
jne
scas
xor
sbb
int
fnstsw
dec
or
push
rolb
icebp
pop
adcl
fistpl
jecxz
mov
pop
mov
rcrb
jl
push
mov
xor
jp
mov
mov
out
fisubl
mov
push
mov
int
rcrb
sub
jmp
lret
jp
xor
pop
push
push
mov
push
lret
fbstp
shrl
lea
es
fwait
aad
sub
mov
pushf
xchg
push
int
sbbb
enter
inc
mov
mov
sbb
or
push
test
cmp
sub
sbb
sar
sbb
mov
mov
push
push
mov
scas
ret
xor
aam
loopne
add
lods
rorb
push
lea
push
pop
jmp
out
adc
dec
push
in
cmp
sbb
pop
mov
push
xchg
cli
mov
cmpsl
int3
jecxz
ljmp
pop
xchg
loop
cwtl
jo
xlat
popa
pop
int3
cli
ljmp
jle
fisubl
shrl
mov
fnstenv
int3
push
cli
push
xchg
insl
cmp
push
addr16
rcrl
push
sbb
nop
push
rol
add
mov
ror
stos
ds
ss
mov
int3
addr16
cltd
adc
cmp
cwtl
out
mov
sub
cmp
mov
cmp
pop
fisttpl
jmp
dec
inc
jo
mov
mov
add
stos
jmp
loop
or
pushf
cmp
hlt
xchg
shl
int
insl
sub
call
out
xchg
xlat
out
testl
push
push
add
jmp
pop
push
sbb
rolb
pop
xor
xchg
pop
sub
sahf
or
rcll
dec
or
outsl
sub
xchg
and
dec
push
ret
negl
dec
add
clc
jge
inc
cld
mov
lods
lock
imul
xchg
out
dec
int3
xchg
stos
mov
out
lret
jg
adc
jecxz
adc
test
jge
push
fwait
sar
pop
ficompl
outsb
es
dec
push
pop
sbb
daa
rcrb
push
push
cs
mov
les
sub
push
enter
lret
in
in
pop
stos
fstp
sbb
fidivrl
lret
push
mov
xchg
xchg
pop
xchg
sub
mov
insb
lret
mov
lret
dec
fyl2x
lret
xchg
mov
jle
pop
ret
lret
cld
dec
mov
adc
and
out
dec
repz
cli
cmp
cltd
xor
mov
fsts
push
sub
xchg
dec
adc
or
adc
adc
scas
xchg
sbb
aad
push
into
dec
xor
dec
cld
rclb
xchg
into
sub
dec
arpl
sbb
mov
or
xlat
loope
shrb
fcmovb
in
insl
aam
loopne
ljmp
xchg
outsb
fstl
mov
dec
jmp
cltd
mov
mov
lods
adc
xchg
sahf
jg
xlat
dec
sub
nop
and
and
dec
filds
cli
shlb
jg
mov
and
out
xchg
lock
lret
xchg
pop
jmp
mov
jne
orl
pop
xor
pop
push
sbb
xchg
movsl
pop
std
ret
add
xchg
add
ja
inc
adc
rcrl
mov
push
inc
xchg
decl
pinsrw
scas
sub
pop
pop
ljmp
adc
fdivl
sub
int
in
fs
dec
aad
mov
push
dec
xchg
aam
ret
call
jne
and
leave
stc
cmpb
add
mov
pop
je
popf
shrb
adc
ds
int3
rolb
hlt
mov
pushf
mov
jge
cltd
push
inc
mov
cmp
push
mov
lretw
mov
jmp
pop
mov
sbb
adc
sbbb
cld
push
add
inc
mov
dec
sbb
ds
jecxz
dec
shr
mov
inc
mov
jo
jmp
repz
mov
mov
cli
add
pop
mov
sahf
sarl
or
dec
push
movsb
mov
pushf
sub
push
jo
push
daa
xchg
stos
insb
jnp
inc
scas
clc
mov
jl
jle
jbe
rcrl
mov
into
cli
sbb
mov
adc
cmpsl
repz
mov
repnz
into
orl
push
cmp
int
jmp
dec
dec
stc
mov
ljmp
lret
push
xchg
into
mov
iret
fists
jns
push
dec
adc
mov
pop
and
lock
lret
xchg
xchg
addb
push
pusha
in
shl
ficompl
inc
push
sarl
aaa
mov
and
fistps
daa
xor
cmpsl
pusha
test
in
jecxz
xor
cwtl
and
adc
insb
out
push
jle
test
pop
sbb
cmp
cltd
into
lea
xchg
lds
or
ror
pop
add
fcmovbe
jns
sbb
push
gs
mov
push
xor
mov
sub
fnop
repz
mov
sub
mov
sub
stos
std
les
mov
xchg
cmpsl
push
xchg
ror
dec
cmp
test
orb
lret
inc
jmp
cs
aad
mov
inc
int
loop
sub
mov
mov
or
sti
outsb
mov
lods
mov
and
aas
test
sti
aam
ljmp
pusha
lds
insb
cltd
jl
out
pop
adc
inc
cmp
lret
out
adc
loopne
push
pop
mov
jmp
stos
jbe
test
sub
cmp
loope
sub
movsb
subb
pushf
adc
sti
aam
test
xor
test
adc
pushf
dec
add
xchg
push
pop
push
popa
sub
test
and
ret
pop
mov
aam
mov
sbb
pop
insb
jmp
arpl
push
leave
pop
es
call
or
push
leave
xchg
mov
ljmpw
xor
outsb
mull
jbe
ror
test
into
push
sbbb
repnz
jae
sbb
subb
dec
lcall
pop
pop
insb
ljmp
stos
int
inc
inc
jne
add
cmp
ljmp
insb
inc
push
pop
and
flds
int
sub
cli
fs
pop
mov
leave
fbstp
rorb
lds
inc
imul
cmpsl
pop
sbb
lea
mov
flds
int3
iret
movsl
dec
jne
scas
ret
push
mov
adc
movsb
or
push
cmp
push
push
ss
xchg
jecxz
enter
pop
outsl
aad
or
push
xchg
and
enter
sub
les
sbb
imul
lods
jle
xchg
xchg
mov
cmp
ret
push
lods
sar
cmp
sar
gs
mov
cmpsl
loope
movsb
sbb
dec
ret
push
inc
mov
testl
mov
mov
or
test
imul
xchg
outsb
outsb
cwtl
pop
inc
push
mov
notl
sti
or
bound
xlat
dec
cmp
sbb
iret
xchg
mov
aas
inc
dec
aam
repnz
or
imul
call
scas
test
inc
es
ret
repnz
stos
inc
leave
mov
ss
or
lcall
pop
xchg
das
and
inc
and
and
mov
scas
clc
cmp
mov
std
test
xor
fmul
mov
or
dec
movsl
pop
loope
push
mov
imul
mov
add
dec
cmp
shll
xorl
scas
jmp
lods
add
sbb
xchg
fs
mov
pop
adc
insb
loopne
xchg
nop
bound
pop
aaa
cmp
dec
or
lock
pop
adcb
xchg
shl
sbb
bound
mov
and
sbb
sbb
sbb
pop
pop
movsb
lahf
xorl
hlt
lahf
lea
push
add
movsl
mov
outsl
inc
ret
adc
sub
xchg
ret
push
cmp
aas
clc
push
dec
cmpsl
pop
jmp
or
mov
cli
aas
mov
aam
repnz
xor
rcll
stos
out
cs
cmp
mulb
mov
clc
mov
xchg
mov
push
xchg
pop
pop
iret
mov
adc
in
lds
pop
pop
iret
inc
les
out
xor
fsubl
das
sbb
dec
pushf
push
incl
mov
cltd
dec
fbld
inc
adc
jne
cmpsl
sahf
fwait
push
shr
xchg
lods
aam
mov
aad
fs
adc
mov
lds
adc
xor
push
scas
mov
mov
dec
adc
jle
jmp
fs
punpcklwd
pop
jo
dec
aas
lahf
addr16
and
fisubrl
push
add
aam
stos
cltd
or
frstor
mov
cmp
cmpsb
jno
or
mov
filds
stos
fdivl
sbb
push
or
jne
mov
mov
fmull
out
outsl
xchg
insb
movsl
cltd
mov
fsubrp
xor
pop
pop
in
andb
les
hlt
mov
cltd
mov
mov
int3
test
outsb
in
cmp
fcmove
out
pop
jno
aam
cmp
or
jmp
lcall
rorb
cmp
jno
lcall
jo
mov
test
insb
mov
daa
push
into
shrl
sbb
or
movsb
call
cwtl
xchg
add
dec
lock
repnz
or
sub
cmp
push
mov
or
repnz
lret
fisttps
scas
pop
test
ljmp
in
mov
scas
or
pop
stos
outsl
mov
push
mov
add
nopl
ja
cmp
cmp
faddl
mov
push
push
test
add
xor
pop
adc
xchg
pop
cmp
dec
adc
test
sbb
adc
rcr
dec
into
push
out
push
aam
push
pop
mov
fwait
jmp
xor
sbbl
push
movsb
push
lods
icebp
push
cmp
bound
cmp
shlb
fmuls
jae
jmp
or
lret
cwtl
cmp
push
pop
push
jl
out
push
xchg
sub
cmp
lahf
aaa
aaa
imulb
iret
jb
pop
gs
push
or
mov
outsb
push
loope
dec
sbbl
addl
mov
repz
sbb
dec
jne
add
outsl
pop
or
outsb
xchg
mov
mov
movsb
mov
subl
out
jp
test
cs
pop
and
adc
dec
mov
in
xor
jb
adcb
xor
adc
xor
cmp
mov
sub
shlb
leave
pusha
push
shlb
and
les
pop
xor
clc
iret
ret
cwtl
out
xor
in
sbb
pop
mov
dec
sub
cmp
cli
aas
push
cmp
xchg
into
lret
shll
cwtl
push
pop
and
adc
cmp
shrb
sub
push
mov
jmp
dec
ficomps
jle
adc
xchg
stos
jno
xor
daa
mov
push
push
mov
and
lods
push
adc
fildl
lock
xchg
js
jle
jle
cmp
aas
jno
pop
xchg
pop
xchg
push
cmpsl
shlb
repz
jecxz
ljmp
dec
lret
pusha
fstpl
insb
aam
push
divl
lahf
cs
test
incl
mov
rcr
mov
shrb
pop
cmp
insl
pushf
in
aaa
addr16
dec
cmp
adc
pop
sti
and
push
push
xor
add
jb
pop
notl
push
mov
mov
mov
cmpsl
add
and
in
mov
scas
dec
fldenv
nop
cmpb
dec
inc
or
out
arpl
cli
dec
data16
dec
push
imull
mov
addb
arpl
fisubrl
add
in
iret
scas
addl
xor
push
lock
cmc
mov
ljmp
xchg
lds
xor
repnz
addr16
push
pop
mov
stos
pusha
and
mov
imul
repz
adc
jmp
sub
adc
inc
jne
test
push
mov
cmp
cwtl
icebp
mov
insb
and
in
in
insb
mov
add
inc
ljmp
pop
out
xchg
dec
rcrb
imul
insl
sub
xchg
dec
adcb
or
sub
sub
jg
push
sub
das
mov
cmp
adc
push
mov
pop
xor
sbbb
adc
pop
or
rcrl
jle
pushl
mov
mov
and
iret
mov
push
dec
xchg
js
pop
subb
sti
test
jle
rcrl
punpckhbw
mov
decl
jne
leave
jae
sti
out
dec
cwtl
lds
and
mov
std
mov
or
cmp
mov
repnz
inc
ffreep
mov
sbb
outsl
and
add
pop
insl
ljmp
pop
iret
repnz
mov
mov
les
pop
mov
mov
push
sub
sub
cmp
bound
jns
andb
data16
jne
mov
rolb
sub
mov
ffreep
scas
icebp
cmpsb
enter
call
sub
scas
and
or
cmp
push
jge
sti
test
sub
jecxz
pop
inc
bound
ss
or
adc
inc
into
adc
mov
jb
out
fidivrl
bound
jo
dec
xor
mov
js
cmp
loope
sar
popa
hlt
inc
and
into
int3
pop
cwtl
movsl
lcall
jecxz
pop
sarl
mulps
or
add
aam
and
adc
out
cltd
popa
in
jo
adc
mov
push
ret
ret
test
cmp
sarl
movsl
add
inc
add
shl
adc
stc
incl
popf
lret
inc
jmp
pop
xchg
or
sbb
push
lret
inc
adc
out
shrb
sub
xchg
ja
int3
es
rol
mov
or
in
push
push
scas
rolb
inc
inc
scas
xchg
and
xlat
adc
xchg
xchg
xchg
int
ret
repz
inc
out
cli
rcll
imul
xor
xlat
dec
outsb
or
jne
dec
xchg
xor
imul
xor
sarb
sub
enter
popf
adc
lds
and
dec
adc
mov
dec
mov
das
push
dec
insb
pop
push
pop
mov
mov
cmc
or
into
jns
insb
fdivrp
lods
test
push
inc
aad
wbinvd
aaa
inc
in
dec
ljmp
imull
or
xchg
addb
aas
pop
shrb
cmpsl
aas
sbb
mov
cmpsb
movsb
inc
icebp
ja
mov
pop
test
test
xchg
cltd
or
push
adc
mov
mov
aad
lds
inc
adc
pop
into
fmull
insl
iret
das
in
mov
divb
dec
inc
decb
testb
int3
inc
sbb
mov
pop
jl
aaa
pop
dec
bound
stos
enter
pop
cld
popa
cwtl
arpl
leave
pop
pop
lret
jg
cwtl
sub
push
push
or
pop
imul
push
das
push
xchg
sti
rolb
mov
push
push
mov
lcall
jmp
lret
mov
iret
repz
or
and
adcl
aam
jns
sbb
bound
sbb
sub
pop
push
push
sbb
mov
mov
out
xchg
js
pop
sbb
js
gs
jge
outsl
fisttpll
inc
imul
and
or
lds
popa
push
fwait
subl
adc
loop
cmpsl
icebp
in
pop
jge
je
out
mov
lret
mov
dec
nop
fiaddl
jl
movsl
xchg
mov
stos
lahf
hlt
mov
xor
inc
adc
cli
call
outsl
sarb
lock
bound
mov
into
dec
jns
push
push
push
push
and
shlb
cwtl
loopne
push
pop
ljmp
pop
mov
jae
ljmp
xchg
xor
je
mov
out
imul
mov
in
or
shrb
ficoml
xchg
inc
fbstp
les
mov
or
loope
sub
in
dec
lret
roll
xchg
das
pop
or
jecxz
pop
push
data16
mov
out
dec
dec
mov
repnz
aaa
pop
sub
orl
incb
loope
aaa
fisubs
loope
insb
cwtl
pop
add
iret
pop
adc
ficompl
out
ljmp
aaa
mov
push
cs
mov
inc
cmp
int
push
int3
das
xchg
leave
sub
out
in
int3
cld
mov
fcmove
mov
das
jl
add
dec
or
jl
or
fstl
movsl
jmp
xchg
sti
and
adc
inc
lock
stos
dec
aaa
aas
adc
fisubrs
out
insl
or
loop
lcall
pop
testl
mov
popa
push
das
dec
cmp
fsubrp
sbbb
fadd
inc
pop
orl
push
fprem1
jae
mov
out
fisubl
mov
inc
icebp
push
jo
pop
dec
mov
lahf
cli
movsb
aad
lret
cmp
das
pop
or
data16
inc
aas
into
jnp
mov
repz
mov
mov
dec
mov
sti
ret
xchg
gs
lds
xor
mov
fscale
mov
inc
lret
pop
mov
loop
out
xchg
gs
lods
ljmp
sbb
call
mov
adc
mov
das
mov
addr16
ret
pop
aas
shll
inc
push
adc
push
incl
cbtw
mov
stos
dec
xchg
dec
ret
test
adc
sub
sbb
cmp
aam
arpl
fimuls
bound
mov
sbb
lods
sbb
jmp
aas
das
outsb
hlt
dec
xor
mov
push
and
aad
cmp
or
int3
cmpsl
inc
fldcw
leave
jp
xchg
fisubl
dec
mov
mov
in
add
or
xor
aam
add
ljmp
push
lahf
loopne
outsb
call
enter
sarb
jns
into
jmp
push
inc
sub
movsl
xchg
dec
ret
aaa
add
pop
xor
ret
push
mov
fists
jno
sti
inc
push
shlb
sub
sti
fsubrl
push
xor
add
add
pop
insl
dec
lahf
jmp
out
adc
push
aam
adc
mov
sahf
pop
jb
pop
leave
repz
mov
xchg
loop
scas
dec
mov
sar
js
or
mov
aad
mov
or
pop
out
pop
cld
sub
push
mov
lds
xchg
cmpsb
mov
int
ret
push
lret
inc
lds
mov
fsubr
sub
out
fabs
mov
loop
cmp
mov
rcrb
push
mov
insl
mov
sub
mov
fldcw
mov
mov
jno
inc
rorb
adcl
lods
loopne
loop
gs
mov
dec
jne
or
sub
test
lock
int3
ret
add
jle
aam
push
mov
pop
xchg
sbb
mov
ret
cmp
mov
repnz
gs
or
arpl
cmpsb
add
and
shlb
sbb
inc
adc
mov
ficoms
mov
push
dec
jg
insb
jl
or
jns
sub
loope
add
push
mov
mov
test
and
fisubrl
test
movsb
inc
shll
mov
pop
lods
in
pop
sarb
cmpsb
or
emms
cmp
sti
or
mov
jb
dec
jp
bound
pop
xchg
ret
cltd
cmp
fdivl
xchg
cli
out
or
mov
arpl
stos
bound
into
mov
pop
mov
push
xor
paddusw
dec
cli
leave
xlat
iret
bound
pop
mov
xlat
pop
dec
jle
sarl
adc
cmp
xor
dec
mov
jl
mov
push
inc
pop
jae
adcb
pushf
shrl
xor
subb
cwtl
push
add
ret
daa
adc
bound
cwtl
repnz
jnp
sbb
gs
adc
stos
int3
push
fimull
aaa
inc
push
sbb
mov
loopne
cltd
shll
sarb
push
xor
scas
mov
dec
gs
imul
sbb
dec
sbb
ljmp
test
inc
push
dec
test
cmpsb
or
rolb
leave
xchg
cmp
xchg
hlt
or
test
push
dec
sar
repnz
popa
dec
push
insl
scas
and
jb
stos
loopne
cmp
xor
dec
dec
into
aam
jmp
lock
cmpsl
pop
pop
out
dec
push
mov
mov
push
adc
lcall
sti
or
pop
lea
sbb
mov
inc
mov
call
out
gs
cs
loop
call
push
scas
scas
lock
jge
xor
mov
bound
or
or
sbb
and
or
aaa
je
daa
pushf
or
cmc
ja
xor
push
jmp
jecxz
pop
lea
push
push
lcall
sub
lahf
inc
mov
pop
pop
xor
loop
pop
lret
mov
mov
push
leave
push
mov
or
xchg
shll
ficoms
hlt
adc
nop
inc
jmp
scas
jp
into
push
and
jge
push
push
fistpl
mov
fmull
iret
mov
inc
inc
mov
dec
push
mov
iret
pop
pop
sahf
xor
sbb
fidivl
pop
out
repz
pop
push
cmp
out
insl
test
lcall
mov
mov
pop
hlt
xor
or
es
gs
les
xchg
jo
je
imul
sbb
dec
gs
push
je
mov
adc
jb
stc
repnz
inc
in
add
scas
add
mov
scas
mov
xor
ljmp
mov
inc
push
popa
adc
jne
jg
pop
mov
int
sbb
mov
mov
jo
dec
je
add
pop
xor
and
push
cmpsb
add
outsl
jge
aas
xchg
xchg
jle
push
inc
flds
mov
inc
icebp
mov
out
mov
int
pop
and
stos
push
loop
mov
repnz
lahf
adc
iret
push
aam
push
or
sbb
sbb
pop
in
loopne
dec
xchg
push
and
scas
adc
push
sub
addr16
movsb
outsb
xchg
jg
dec
filds
inc
push
xor
sub
aad
inc
imul
fimuls
xchg
add
call
icebp
fbld
push
add
sub
aad
int3
pop
push
scas
jp
popl
in
fildl
dec
mov
xor
xchg
pushl
cli
push
jae
mov
xchg
scas
imul
jmp
add
and
sbb
sti
into
into
mov
sbb
push
push
dec
jo
test
xchg
xor
out
insl
xor
int3
mov
jb
jno
pop
mov
mull
sbb
mov
enter
pop
dec
mov
inc
jle
imul
inc
push
cmp
mov
sub
fiadds
iret
shl
cmp
jns
push
jg
xchg
movsl
fmuls
mov
push
pop
sbb
into
daa
int3
pop
lret
xchg
jge
cmp
xchg
das
rorb
cld
mov
cmpsb
mov
sbb
mov
ljmp
pop
in
int3
out
jne
pop
fiadds
enter
movl
mov
mov
mov
sahf
xchg
pop
adc
arpl
dec
jmp
pop
mov
jb
mov
jmp
les
cwtl
sbb
repnz
addr16
into
push
test
pop
mov
icebp
aaa
pop
bound
mov
lods
imul
mov
jp
cmc
leave
inc
pop
stos
andl
movsl
es
inc
jecxz
or
mov
xor
ficoml
shlb
out
lods
test
aad
jmp
pop
or
rclb
aas
xor
repz
pop
into
popf
push
cmp
mov
test
je
mov
adc
xor
pushf
inc
clc
lahf
mov
inc
push
sbb
xor
xchg
cmp
out
jmp
push
mov
jne
lahf
in
fstps
lret
mov
adc
add
lret
repnz
scas
xlat
ret
mov
pop
adc
mov
or
push
mov
ret
leave
loope
dec
and
cmp
inc
enter
lcall
cmp
cmp
cmc
xlat
sub
mov
mov
shlb
sub
lret
mov
mov
mov
cli
dec
in
pop
out
std
push
jns
cmc
lret
pop
fimull
adc
mov
test
lret
push
aam
cwtl
cmc
xchg
popf
stos
xor
sub
dec
scas
lret
imul
lret
sti
mov
adc
xchg
aad
loope
lret
push
xorb
mov
int3
fcmovu
lods
pop
pusha
lret
es
leave
mov
add
dec
inc
sbb
arpl
push
dec
out
dec
push
dec
and
stos
xor
xchg
mov
add
sar
jne
mov
sbb
xchg
pop
lret
jbe
sub
fcomps
mov
jmp
lea
cmp
imul
mov
outsb
xchg
lret
mov
fimull
jnp
dec
adc
in
lret
mov
lock
test
lods
icebp
in
loop
pop
xor
pop
dec
cld
mov
cmp
sahf
jp
mov
es
aad
pop
mov
mov
lret
cmp
aaa
gs
aas
mov
fwait
lock
xor
inc
rol
arpl
fstps
lret
insb
mov
pop
push
push
fisubl
mov
sub
lret
and
adc
insl
lock
out
out
loop
cmp
lret
negb
aam
jo
cltd
xor
popf
cmp
fisubl
daa
mov
jnp
pop
xlat
mov
lret
fnstsw
sti
jmp
or
add
pop
cmpsl
imul
lret
sbb
inc
ljmp
fstps
cmpsl
pop
daa
push
add
jb
adc
mov
hlt
xor
jp
lcall
xlat
and
xlat
mov
push
ror
das
xor
or
or
add
clc
cmp
pop
into
push
jle
into
jo
push
mov
xchg
in
or
push
pop
mov
push
dec
jp
lahf
movsl
add
xchg
push
pop
lods
pop
mov
jge
cmpsl
pop
dec
jp
or
pop
cmp
js
jp
xchg
data16
pop
xchg
xor
adc
sbb
mov
and
imul
sub
fsubs
inc
bound
nop
repz
cmp
repnz
fistps
or
mov
add
lret
pop
dec
mov
or
fisubl
lods
push
pop
xor
inc
outsb
negl
bound
inc
xchg
pop
ret
addb
and
adc
imul
push
in
pushf
rcr
das
add
bound
inc
es
jae
mov
fwait
lret
mov
mov
mov
in
dec
mov
dec
addr16
imul
outsl
jle
push
call
mov
lds
divb
pop
sub
push
sbb
push
scas
mov
push
push
mov
lret
mov
pop
sub
rcll
mov
push
mov
push
mov
popa
dec
ljmp
mov
dec
mov
adc
fdivl
roll
std
shl
adc
push
fwait
or
and
dec
leave
fisubrs
jne
and
call
iret
int
jns
mov
mov
xchg
cwtl
push
call
pop
int
loope
and
cmpsl
xchg
add
rcr
mov
fldcw
inc
mov
and
loope
das
xor
mov
shr
or
sub
cmpsb
aaa
sti
pop
dec
jp
lds
cmpsl
sub
sbb
jp
imul
decb
pop
rcr
pop
sarl
add
xchg
adc
push
data16
aam
test
xor
outsl
push
jecxz
scas
in
mov
dec
jns
aam
pop
dec
jns
arpl
push
lret
push
jle
call
xor
jmp
sub
pop
sarb
push
sbb
sub
dec
rorb
push
bound
pop
fldenv
outsb
pop
mov
and
into
aad
test
test
jnp
add
or
inc
cmp
push
bound
jbe
dec
jo
sub
mov
xchg
push
out
xor
pop
lret
dec
xchg
pop
or
pop
push
and
jp
xor
pop
adc
mov
loop
pusha
and
xchg
dec
mov
sub
popa
enter
dec
insb
bound
ret
sbb
les
xor
pushf
dec
inc
xchg
lret
and
fistpll
mov
mov
lea
mov
lds
push
mov
das
movsl
dec
jle
lock
cmpb
jb
lcall
int3
mov
fsubs
js
hlt
xchg
leave
jmp
push
mov
jge
sahf
adc
rcl
in
ss
pop
jecxz
fstpl
scas
and
inc
sub
scas
lods
adc
fwait
rcr
push
test
aaa
xchg
cmpsl
std
out
jle
scas
repz
push
push
lret
pushf
lds
or
lods
mov
jo
popf
cmp
jne
cli
adc
js
aad
cmp
fistps
fcomps
push
mov
jmp
xchg
dec
mov
or
ljmp
jmp
lea
testl
jg
movsl
xor
mov
jo
xor
mov
and
stos
jmp
stos
push
dec
pop
xor
leave
test
fadd
loop
repz
jns
pop
mov
stos
rcll
xchg
scas
stc
cli
adc
lahf
xor
push
fnstsw
dec
mov
mov
sti
leave
test
sarb
adc
not
mov
mov
xor
push
cmp
into
inc
sbb
jmp
iret
xchg
pop
lret
pop
test
lea
push
into
jg
pop
xorb
fidivl
inc
mov
pop
insb
jp
mov
pop
ss
aaa
and
pusha
inc
adc
dec
lods
push
sar
outsb
lret
sbb
cmp
mov
fbstp
int
mov
outsl
inc
mov
das
out
int3
cld
fisubrl
int3
pop
icebp
add
pop
pop
repnz
imull
pop
shr
push
cmp
push
cmp
sbb
push
pop
mov
cmp
ss
push
test
mov
outsb
pop
mov
stos
outsb
jns
sub
jns
es
insb
pusha
push
loopne
sbb
outsb
rolb
pop
repz
ds
push
dec
outsb
arpl
loope
lcall
add
add
pop
fldl2e
popf
jg
loop
inc
imul
push
inc
cmc
test
sub
and
push
testb
cmp
aas
shrb
sbb
rcrl
push
ret
push
cmc
pusha
cmp
xchg
movsl
scas
mov
mov
mov
cmp
lret
jb
xor
add
das
mov
add
pop
inc
out
jbe
in
stos
push
pushf
or
js
ja
mov
xchg
dec
mov
rorb
leave
jne
cmc
mov
insl
cmp
or
vmulpd
sarb
sub
mov
ja
adc
jle
seto
dec
sar
repz
push
repnz
mov
dec
ficomps
push
sbb
pop
rorl
or
enter
adcb
pop
add
imul
pop
mov
xchg
inc
cmpsl
in
jb
and
adc
pop
outsb
repnz
cmp
aas
lods
mov
data16
mov
gs
ret
pop
out
push
ljmp
stos
hlt
or
mov
push
mov
xchg
cld
pmaddwd
mov
cld
repz
ret
sub
pop
mov
xchg
xchg
mov
mov
push
push
sbb
imul
inc
dec
mov
dec
fcomps
adc
outsl
adcl
es
rclb
sub
bound
pop
mov
add
das
cmpsl
dec
xchg
iret
jl
out
mov
and
xchg
xchg
loope
jb
sti
cmp
jno
add
push
in
mov
ret
out
adc
xchg
mov
inc
imul
push
iret
mov
lahf
add
add
stc
jge
lret
dec
into
lret
add
jbe
mov
add
loope
ror
pop
xor
lret
add
cli
je
clc
jp
jge
out
inc
cmp
push
pushf
mov
pop
sarl
pusha
aad
sbb
lahf
cwtl
cltd
lods
cmp
lret
xchg
cmpsl
arpl
push
lret
push
xor
push
xchg
jg
jmp
push
clc
lret
inc
xchg
fwait
dec
jb
lret
inc
mov
pslld
cltd
lahf
ret
cmpsl
lret
movsb
sbb
push
jb
mov
scas
push
lahf
adc
inc
jnp
fidivl
and
inc
push
xor
push
mov
lret
mov
mov
add
lret
pop
aam
adc
or
movsb
nop
add
jae
sbb
xchg
imul
push
jb
push
mov
cltd
lret
shr
shrl
cmp
nop
lret
sti
loope
mov
aam
lea
enter
lret
sarl
jb
es
mov
push
sbb
aas
mov
pop
imul
insl
fisubl
movsl
aad
dec
jae
sbb
dec
shr
cli
add
pop
cwtl
int
fisubl
imulb
inc
xchg
iret
in
pop
sti
lret
scas
add
jl
adc
lahf
data16
std
popa
xchg
lcall
pop
xchg
int3
cmp
or
push
dec
mov
insl
cltd
cmp
pop
imul
rcrb
push
and
lret
ds
mov
ljmp
pop
sub
fisttpl
fbstp
lret
sbb
push
ficompl
sti
sub
dec
dec
lret
sbb
lahf
or
or
pusha
es
push
mov
bnd
add
jnp
ljmp
js
ret
push
xchg
add
pop
cmp
pop
sbb
rcrl
aas
lret
lods
cwtl
shrb
das
pusha
push
sub
rcr
push
push
idivb
pop
lock
cwtl
fiadds
aad
jo
pop
push
pop
fdivrl
sub
movsl
lods
cli
mov
inc
xchg
out
insb
scas
xchg
lcall
push
pop
push
mov
out
mov
xlat
jnp
lret
pop
pop
mov
into
insl
in
frstor
push
lds
ja
fwait
repz
arpl
divb
in
stos
bound
add
pop
dec
cmp
mov
or
pop
push
jne
xchg
into
mov
cli
xchg
loope
and
mov
into
mov
add
inc
shrb
mov
cmp
mov
add
or
inc
data16
jge
int3
cmp
popa
cmp
jg
pop
lret
inc
cmpsl
in
fwait
pop
cli
lret
test
stos
or
xchg
pop
add
inc
lret
xchg
add
mov
jns
shrb
sbbl
pop
rcrl
cmp
clc
jl
scas
mov
inc
cmp
pop
pop
jge
mov
leave
mov
add
xor
mov
ljmp
into
pop
dec
cli
xchg
mov
or
cmpsl
ja
cwtl
lret
mov
fsubs
jge
clc
sbb
pop
lret
jp
mov
sub
inc
in
mov
test
xor
push
rclb
lret
popf
pop
jns
push
lret
js
or
stc
xor
push
fidivrs
lods
lret
add
loop
and
sub
inc
rcrl
inc
push
inc
lret
mov
or
sbb
fisubl
adc
xor
pop
cwtl
fstps
in
add
cmpsb
lret
cmc
mov
inc
lock
or
lret
pushl
in
rcrb
sub
lret
or
popf
scas
lods
cwtl
and
pop
clc
or
mov
lret
js
dec
push
inc
xor
lcall
sub
jecxz
xchg
jmp
lretw
xchg
pminub
xor
rorb
lahf
inc
sti
inc
repnz
or
mov
rcrb
filds
fstl
lods
jl
loop
dec
xchg
ja
jle
mov
shrb
or
add
or
popf
cwtl
push
icebp
cli
shll
inc
fsts
mov
cltd
and
lret
xchg
jo
or
movsl
lret
mov
adc
mov
pop
push
ds
rorb
test
cli
lret
stc
jns
loope
lret
faddl
mov
fstps
inc
jp
xchg
lock
jp
ljmp
pop
idivl
in
push
loopne
jb
cmpsb
in
mov
xchg
lret
lods
inc
lret
mov
jmp
adc
mov
lret
mov
xchg
fstl
dec
aas
push
clc
lret
pushf
stc
sub
fldcw
adc
cmp
shrb
fists
inc
vpconflictq
lods
mov
lret
and
fimull
ja
push
mov
push
or
imul
lret
mov
mov
test
into
jmp
jo
arpl
sbb
hlt
mov
fidivrl
cs
int
out
mov
lret
xchg
xor
mov
pushf
jmp
roll
mov
fwait
lea
jbe
cltd
jnp
mov
in
xchg
jp
scas
push
jle
out
inc
dec
pop
insl
notb
ja
lret
aam
pop
push
jns
or
leave
lret
mov
pop
cmp
lods
stc
ljmp
mov
pop
insl
sbb
rol
mov
icebp
pop
in
or
xchg
push
jl
push
lret
push
into
sbb
inc
int
ficompl
flds
das
lret
xorl
lret
mov
add
jno
xor
xchg
jae
lret
xchg
imul
xorb
scas
mov
jnp
lret
cmp
mov
sbb
loopne
enter
mov
jae
aaa
push
pop
lret
mov
lods
lret
lods
or
jecxz
fisubrs
cmp
lahf
add
fstps
push
call
push
pop
es
jb
mov
mov
leave
fldl
xchg
adc
insl
lret
lods
push
sbb
insl
mov
lret
jb
or
jo
iret
xchg
shl
pushf
xchg
add
dec
push
jle
es
sbb
rclb
xor
xlat
pop
fwait
stos
sbb
lahf
rcrb
cli
iret
aas
clc
jo
add
ja
lret
rcl
enter
or
in
fists
add
mov
test
movups
pop
in
jbe
loop
inc
lret
xchg
into
leave
and
lret
test
std
jns
pop
jecxz
mull
push
es
cmp
xor
mov
inc
js
inc
push
mov
pop
push
in
int
aam
test
je
testl
repnz
pop
aam
sbb
sbb
fidivl
stos
std
dec
jge
and
stos
adcb
xchg
xorb
sub
cmp
ficompl
cmp
es
pop
or
push
inc
lret
adc
shrb
mov
stos
fsubrs
lret
jp
or
das
aam
push
aaa
xlat
jb
lods
lret
cld
stos
ds
stos
xchg
lret
fwait
jecxz
sbb
out
push
push
rcll
inc
out
lret
mov
fiadds
inc
push
mov
sub
ja
scas
iret
adc
lret
mov
sub
xchg
jae
mov
and
repnz
lret
clc
fldcw
in
mov
or
adc
mov
push
mov
leave
cwtl
lret
dec
push
cmp
pop
dec
fwait
sub
jmp
pushl
jecxz
or
insb
movsb
cwtl
clc
sarb
rorb
lcall
cmp
lods
mov
or
inc
ja
xchg
clc
test
lret
pop
add
pusha
or
test
fldenv
lret
adc
andb
cmp
jns
mov
push
daa
shll
cwtl
dec
lret
mov
cmpl
inc
daa
popl
pop
dec
sbb
add
aad
sub
adc
xchg
sub
push
push
stos
add
sub
jno
dec
dec
push
jo
lcall
aaa
into
mov
inc
lret
aam
inc
or
lret
mov
jnp
cltd
lret
stc
out
push
jmp
dec
xor
mov
xchg
cli
jp
mov
sbb
fwait
sub
add
inc
cli
std
jnp
jne
cli
loopne
sahf
outsb
xchg
into
aad
push
cmp
inc
lret
cs
loop
ljmp
mov
call
pop
pop
pop
mov
cs
sbb
data16
jno
dec
lcall
mov
popa
rorl
jno
or
std
mov
scas
les
imul
inc
dec
sti
jae
pushf
cmpsb
mov
fsubr
addb
je
inc
mov
sbb
gs
cltd
dec
push
mov
mov
push
mov
mov
xchg
jg
pop
sbb
mov
int
jg
jnp
mov
fsubrs
je
nop
pop
push
cltd
mov
mov
push
mov
jbe
stc
sub
mov
mov
pop
enter
adc
mov
pop
repz
imul
push
mov
pop
stc
push
testb
shlb
xchg
jmp
mov
stos
inc
loopne
outsl
sub
test
shlb
push
sbb
into
out
sub
mov
xor
test
push
jns
sarb
sub
cmp
or
iret
out
in
fldcw
push
rcrl
rcl
ja
fnclex
mov
je
aaa
inc
lret
xlat
push
pop
sub
lods
negl
bound
test
jge
shrb
adc
mov
dec
sti
divl
out
int
aad
rorb
mov
push
repnz
pop
mov
lods
cmp
sbb
jge
dec
and
lahf
dec
rcr
jle
popa
mov
mov
aaa
xor
xchg
jp
test
aas
mov
mov
aaa
out
cli
lret
pop
js
cli
sub
jl
dec
outsl
inc
je
xchg
and
and
or
pop
fst
lea
test
push
lods
sbb
lret
addl
mov
or
pop
popf
dec
cmpb
or
scas
and
push
xchg
mov
iret
lock
mov
lahf
xor
inc
out
nop
ds
cli
push
sbb
fistpll
push
jbe
lret
inc
gs
xchg
jg
add
sub
in
mov
cmp
andb
gs
fimull
jge,pt
adc
in
push
mov
sub
or
jbe
leave
mov
ljmp
pop
shll
pop
push
or
mov
jbe
cmpsb
xor
push
xlat
jmp
shrb
push
rol
enter
xchg
and
jmp
dec
imul
xchg
jbe
and
dec
pop
lea
pop
shl
jae
lds
rcll
ficompl
add
fnstenv
mov
imul
loope
cld
xchg
jno
xor
fs
sub
push
stos
pop
add
adc
pop
dec
fs
sub
repz
sbb
outsb
inc
jne
adc
shrb
xlat
mov
cmc
int3
fdivrs
in
sub
jae
clc
jns
jle
jecxz
push
negl
jecxz
mov
pop
outsb
adc
insb
push
cmpsl
daa
ror
dec
mov
insl
dec
mov
mov
scas
iret
cmc
aas
aaa
jmp
jns
hlt
xor
idivl
mov
pop
out
sbb
iret
into
or
push
lret
in
sub
lds
fidivrl
bound
push
mov
pusha
shl
nop
jl
adc
cmp
ja
xchg
fs
sti
pop
enter
sahf
cmp
pop
sarl
pusha
movsl
inc
shlb
outsl
mov
sbb
mov
js
into
mov
aam
push
push
adc
cltd
mov
jle
dec
ficomps
mov
cs
inc
sti
lea
stos
and
xchg
stc
repnz
cs
xchg
xchg
sbb
push
stos
cwtl
mov
dec
call
ljmp
loopw
add
lock
mov
dec
fists
jle
stc
icebp
aaa
xor
jp
inc
nop
daa
push
mov
lret
sub
jp
fcomps
mov
scas
shl
xor
test
adc
testb
cltd
jecxz
cmp
mov
sti
out
mov
pop
bswap
call
dec
sub
jg
mov
lds
sub
dec
mov
repz
pop
les
add
fmull
push
rcrl
in
inc
lea
data16
cmp
mov
jge
cmp
stc
push
iret
aaa
push
icebp
bound
mov
cmp
jp
jnp,pn
xchg
mov
js,pn
inc
pop
dec
insb
leave
pop
test
out
in
rolb
push
and
jle
movsl
mov
mov
mov
sub
clc
iret
out
push
adc
jae
push
pop
pop
jbe
pusha
pushf
mov
fidivrl
mov
loope
jecxz
lret
xchg
adc
add
fsub
xchg
clc
shr
daa
mov
mov
pop
cmp
or
mov
mov
jbe
push
fmul
fs
scas
cmp
push
data16
cmc
lods
mov
sub
shr
pop
das
inc
push
jnp
or
adc
cs
add
pop
mov
scas
fsubrl
xchg
fcmove
in
rcrl
setge
jo
xchg
xchg
cmpl
sahf
movsl
mov
int
arpl
mov
lods
test
shrl
jecxz
mov
cmpsl
lret
pop
ja
mov
test
test
addl
mull
xchg
and
mov
gs
fcomps
adcb
repnz
and
or
in
lds
jb
lahf
mov
aas
cmc
push
sbb
pop
or
push
mov
insb
icebp
cmp
mov
dec
bound
jmp
xchg
fsubrs
lret
and
inc
jmp
mov
adcb
ret
inc
addr16
sub
jmp
adc
and
arpl
xor
iret
cmp
dec
movsl
shr
adc
rclb
pop
loope
fiaddl
lret
pop
push
popa
xor
scas
cli
mov
mov
aad
or
fwait
or
mov
fidivrl
leave
int
pushf
sti
inc
popa
pop
sub
test
movsb
push
mov
jo
or
lds
mov
lahf
mov
sub
enter
push
rcr
into
push
inc
out
lea
push
pop
es
mov
stos
iret
mov
mov
clc
insl
add
cmp
jne
fxch
add
dec
jp
xor
or
cmpsb
and
mov
xor
mov
or
aam
int3
inc
mov
stos
mov
cli
lock
jg
jb,pt
mov
jo
cmp
das
pusha
and
push
inc
adc
fidivs
sbb
sub
push
push
inc
mov
push
mov
cli
outsl
rcrb
mov
jg
mov
fistpll
sbb
aad
jne
or
das
out
dec
pop
pop
xor
scas
push
gs
push
push
mov
push
push
rclb
sarl
fwait
jmp
int
cli
ja
push
sti
adc
jg
pop
ljmp
iret
mov
xor
adc
test
lret
clc
andl
adc
push
push
mov
out
cli
das
push
movsl
aad
push
data16
xlat
xchg
mov
dec
testl
leave
cld
sub
mov
push
adc
cltd
mov
outsl
arpl
ret
pop
out
nop
push
cld
dec
dec
and
adc
sbb
push
inc
ret
jae
xchg
mov
xor
jle
test
fs
push
push
jno
lds
sbb
repnz
xchg
je
inc
xchg
dec
mov
iret
shrl
add
jp
cmp
aad
aas
out
repnz
cltd
lret
push
pop
mov
imul
mov
fnsave
jmp
inc
xor
out
mov
xor
out
sbb
or
ss
iret
mov
int3
mov
sub
push
and
pop
and
out
mov
mov
mov
lret
sarl
pushf
je
dec
jae
mov
sub
data16
shrl
loop
mov
push
xchg
ret
sub
jp
mov
je
push
jae
xor
out
inc
insb
mov
fisttps
pop
ss
in
cmpsb
sub
mov
lret
pop
js
pmulhw
psubq
and
cmc
fistpl
arpl
mov
mov
pop
xchg
std
and
push
sbb
jo
xchg
mov
mov
xchg
popa
andl
pop
into
cs
stos
ja
popf
fsub
pusha
icebp
movsl
lods
test
push
mov
inc
mov
pushf
mov
mov
xor
bound
push
jl
scas
xchg
mov
push
or
cld
ficoml
ss
mov
push
adc
je
in
notb
test
xor
cmpsb
or
stos
sub
decb
imul
and
jo
cmp
push
in
mov
sbb
rcrl
insb
xchg
outsl
mov
mov
pop
cmp
fdivr
lret
test
mov
iret
mov
ljmp
bound
sub
mov
in
mov
pusha
jbe
mov
or
in
ficoms
xor
pop
loopne
xor
ds
hlt
sbb
mov
or
in
add
fstpt
imul
sbb
bnd
jno
cmp
or
bound
sbb
dec
mov
outsb
loopne
ss
das
and
xor
dec
pop
mov
adc
pop
push
or
dec
out
sub
idivl
fsubrs
sbb
fistl
fisubl
inc
pop
xlat
pop
jb
ffreep
push
test
out
dec
andb
mov
adc
push
lretw
dec
mov
jne
add
arpl
mov
cld
or
push
ljmp
in
imul
xor
mov
hlt
lahf
pop
sub
lcall
pop
cmp
stc
loope
gs
inc
xchg
insl
sub
jns
pop
and
or
xchg
aaa
push
loope
mov
sub
insb
push
jo
jbe
dec
mov
cmpsb
xchg
subl
loope
jmp
es
cmp
adc
scas
push
inc
sub
pusha
ret
imul
movsl
push
jmp
and
inc
xlat
inc
test
arpl
pop
outsl
insb
add
fsubs
bound
ret
jp
cmp
outsl
jmp
pop
xchg
dec
adc
movsl
jmp
sub
into
push
jns
push
add
sub
movups
dec
fldt
jg
pop
test
add
divb
std
aad
int3
ret
ljmp
pop
cmp
xchg
push
push
cmp
mov
add
lret
rclb
movsb
xchg
arpl
jle
or
stos
push
daa
mov
fistps
fidivrl
in
ds
pop
cmp
or
and
pushf
xchg
iret
push
dec
push
fidivrs
and
xor
push
imul
pop
dec
adc
fdivr
repz
jne
jo
rorl
add
into
icebp
out
mov
pop
pop
mov
int3
dec
in
ret
int
movsl
pop
cmpl
or
rolb
dec
pop
imulb
scas
mov
aas
mov
mov
add
out
cld
push
je
dec
cs
ficompl
xchg
imulb
fs
add
push
inc
repz
cmp
pop
lock
pop
in
hlt
mov
cmp
cmp
sti
lock
hlt
stos
mov
arpl
xlat
xor
jle
mov
mov
shlb
andb
xchg
cmp
push
aam
mov
lds
mov
pminsw
push
fiadds
jp
mov
push
and
in
mov
and
pop
lahf
and
ljmp
sub
mov
adc
mov
cmp
fidivs
fsubs
fsts
mov
jae
repz
test
mov
and
mov
iret
stos
xor
lods
inc
cmp
xlat
iret
movsl
aam
dec
push
fidivl
mov
sub
adcb
jl
pop
cmp
pop
test
dec
xor
mov
aaa
adc
sub
lods
out
test
xor
pop
inc
outsb
or
mov
push
add
mov
push
out
mov
cltd
les
and
les
mov
cmp
call
mov
or
xor
pop
mov
jbe
push
pushf
sub
out
scas
mov
lods
jg
cld
sbb
or
sub
lret
or
mov
fcomi
ljmp
outsl
pop
jle
sbb
addb
sti
les
or
cld
mov
daa
test
mov
aad
js
iret
stc
add
adc
and
mov
inc
jle
int3
sub
enter
adc
popa
call
and
mov
les
jno
sub
cmpsl
roll
ljmp
adc
xor
mov
lds
in
and
mov
sahf
aaa
sbb
mov
ljmp
cmp
rcl
test
mov
lahf
pop
or
mov
out
adc
std
je
push
inc
in
pop
les
sbbb
fisubl
or
or
sub
jnp
mov
mov
cmp
lods
pushf
push
pushf
and
stc
in
push
mov
dec
push
jne
aaa
xor
pop
ret
jo
cltd
adc
adc
movsl
mov
jg
or
negb
push
mov
leave
adc
bound
jp
dec
stc
dec
inc
bound
icebp
jge
insl
daa
loop
push
mov
rorb
dec
jmp
in
xor
inc
or
cmp
sub
mov
mov
jne
mov
mov
adc
jns
pop
jmp
loope
sub
mov
mov
pop
and
shll
mov
movsl
inc
cli
fsts
shrl
shlb
and
mov
pop
or
cwtl
cltd
bound
add
test
mov
and
lock
mov
sbb
mov
cli
adc
jmp
out
push
mov
and
adc
add
adc
mov
sbb
in
push
and
rolb
xor
popf
movsl
push
xor
pop
sarl
movsb
adcb
add
xchg
cmp
xor
shr
shl
lcall
xchg
ret
inc
inc
enter
push
mov
sbb
dec
push
arpl
rorb
cmp
ret
push
push
in
xor
cwtl
mov
mov
or
fsts
fisubrs
cwtl
cwtl
mov
pop
cmp
repnz
push
scas
fldt
pop
push
fldt
mov
push
jae
inc
fadd
les
add
sahf
add
addr16
mov
call
loopne
sbb
das
test
mov
movb
lret
int3
dec
push
or
pop
pop
pusha
sbb
jecxz
lods
test
insl
outsl
mov
shrb
shrl
es
mov
sarb
push
daa
adc
outsl
in
or
les
add
inc
pop
sub
mov
adc
jp
and
push
adc
leave
mov
fistl
shrl
jne
sub
cmp
jmp
jecxz
push
cltd
xchg
dec
xlat
filds
sub
adc
out
dec
fdivrl
rol
push
int3
mov
mov
outsl
lahf
ljmp
test
outsl
nop
loopne
clc
xchg
cmp
mov
push
dec
shlb
popf
pop
jbe
ja
inc
decb
repz
lahf
sbb
fldcw
les
lret
fistpl
jecxz
add
pushf
or
sub
mov
mov
sub
ror
pop
rorb
add
push
arpl
jae
adc
cli
sbb
fcomps
aaa
xlat
sti
shl
xchg
jmp
ss
sbb
mov
loop
add
adc
mov
jge
pop
sub
cli
xchg
mov
sbb
push
out
movsl
mov
sti
jne
xor
pop
out
and
sar
add
out
adc
cltd
cmp
pop
jns
les
sub
or
outsl
gs
add
shlb
lock
and
xchg
js
inc
mov
dec
out
andb
pop
sbb
xchg
pop
and
lret
push
xchg
addl
and
mov
cmc
xor
adc
jge
dec
std
push
pop
cmp
fnstcw
imul
ret
jmp
push
add
imulb
dec
or
push
mov
cli
icebp
pop
dec
cmp
insb
cmp
repz
mov
push
dec
daa
clc
je
mov
inc
pusha
cmp
bound
inc
xor
mov
pop
fstps
rclb
shl
jp
push
sahf
dec
xchg
inc
xchg
or
cmp
sub
xchg
jge
into
push
sbb
out
push
sub
or
pop
push
test
int3
rcll
mov
dec
mov
fsubrs
mov
mov
sti
push
add
dec
mov
pop
xor
xchg
outsb
cli
js
leave
sarb
das
mov
clc
mov
out
push
push
inc
dec
repz
push
xor
jno
out
push
sbb
out
pop
adc
mov
arpl
jg
jge
dec
sar
mov
hlt
outsb
ljmp
lret
adc
jno
out
cwtl
mov
dec
int3
jo
into
push
fdivrl
xchg
jge
into
adc
xchg
movsl
mov
in
scas
dec
mov
jg
inc
lret
cmp
dec
lret
inc
adc
ret
lret
mov
cli
push
cmpsb
sbb
xor
test
pop
mov
mov
or
outsl
shr
nop
lret
xchg
xor
daa
sub
adc
pop
jl
mov
sub
rcrl
sahf
push
sub
push
cmp
inc
mov
mov
xchg
mov
lods
test
xchg
movsl
adc
in
out
sbb
out
push
add
cmp
push
mov
test
push
leave
mov
pop
xor
out
pop
add
out
push
lahf
sub
sub
and
mov
rolb
rcrb
sbb
lcall
std
dec
mov
enter
or
cmpsl
pop
add
ja
jg
dec
mov
ja
js
subb
test
cmp
sbbb
mov
sbb
mov
sub
out
mov
sbb
cs
shlb
push
or
rol
pop
mov
dec
add
or
inc
pop
and
jo
cmp
mov
sbb
mov
pushf
mov
repnz
mov
jno
leave
sti
inc
jmp
push
dec
movsb
sub
mov
out
ljmp
add
adc
cmp
mov
mulb
pop
sbbl
call
pop
mov
imul
out
push
lret
push
jp
int3
movsl
inc
cltd
in
out
dec
movl
inc
sbb
outsl
shl
mov
sbb
dec
jae
cmp
nopl
fldcw
mov
add
scas
push
lahf
dec
mov
lahf
mov
pop
pushf
push
data16
push
into
or
cs
jp
pop
fnstsw
sbb
mov
and
cmp
andb
rcl
addl
jp
pop
add
push
adc
or
fistpll
aam
push
adc
bound
inc
std
pop
packuswb
xlat
out
int3
push
mov
ljmp
rcr
sbb
pop
mov
push
or
xor
cmp
mov
shlb
stc
inc
or
clc
xchg
mov
cwtl
repz
out
daa
test
sbb
xchg
jp
fmuls
in
pop
mov
sti
push
push
lret
loope
lahf
cmp
pop
mov
push
sub
movsl
fldenv
or
and
dec
push
dec
das
xor
xchg
push
push
inc
jle
mov
xor
or
addr16
or
push
mov
lds
div
out
iret
mov
daa
jmp
hlt
out
cwtl
inc
sbb
push
mov
scas
mov
sub
pushf
movsl
mov
adc
ret
in
ja
xor
outsl
sarb
cmp
push
in
sbb
rcll
mov
cli
enter
adc
mov
int
push
xchg
ljmp
idivl
daa
out
inc
mov
inc
addr16
cmp
inc
add
adc
push
and
pop
pushf
popf
test
or
ret
ret
insb
jl
push
cmp
fisubrl
out
fisttps
push
cmp
outsl
pop
cmp
adc
hlt
jnp
arpl
push
leavew
mov
or
pop
cmc
fisttps
fcoms
pop
call
push
mov
push
out
xor
and
mov
stc
inc
and
xor
daa
sub
jmp
inc
into
add
fs
xchg
ja
int
mov
cmp
dec
push
dec
pop
dec
xchg
sbb
jnp
or
pop
in
inc
insl
and
rclb
rolb
cmp
sbb
jg
mov
clc
jecxz
sarl
sub
push
je
pop
inc
popa
adc
and
int3
bound
xor
mov
subb
push
mov
popf
aas
shrb
repnz
fnstcw
mov
mov
int
aam
xchg
or
or
mov
lret
inc
sbb
dec
mov
mov
maxps
arpl
pop
fwait
popa
mov
cli
cmp
test
and
es
push
loope
scas
sbb
sarb
jns
aam
mov
or
and
sahf
dec
clc
in
clc
dec
dec
bound
mov
scas
mov
shr
ljmp
testb
inc
cltd
mov
dec
push
xor
gs
pop
lock
test
and
lret
aas
je
xchg
pop
test
int
data16
mov
repnz
pop
cwtl
into
xor
xor
pop
sub
jmp
sti
pop
out
imul
pushf
xor
push
rcl
int3
cmpsb
subb
imul
pusha
aad
cmp
shll
add
sar
pop
inc
mov
aas
ret
dec
sarb
into
push
in
rcll
popa
cltd
mov
dec
leave
sbb
sub
cmp
sbb
and
pushf
mov
pop
mov
nop
or
inc
push
push
in
adc
iret
adc
pop
mov
cmp
sbbl
rolb
lahf
adc
aas
jns
mov
push
inc
daa
jmp
adc
cmp
mov
cmp
in
clc
out
push
fstl
aam
stos
cwtl
cmp
ljmp
lahf
lret
add
popa
sub
cmpsl
add
xor
fimuls
fs
insl
lea
lds
push
xor
bound
push
rcrl
cli
jno
pop
or
aas
lods
js
stc
mov
subb
roll
dec
insb
sub
int
movsb
sbb
out
cmp
mov
xchg
aas
jno
in
sti
lret
adcb
in
fidivl
jmp
sbb
sub
lods
xchg
rep
frstor
jp
sbbb
into
lcall
cmp
jb
pop
mov
pop
push
sub
xor
gs
les
ljmp
shlb
fidivs
or
push
push
sbb
push
cltd
ss
pop
test
mov
rcrb
push
push
test
xchg
mov
add
int
push
cli
rcrl
dec
and
into
push
jae
pushf
xor
enter
pop
ret
add
push
bound
or
jbe
loopne
insl
sbb
ss
mov
in
fistpl
insl
lret
pop
aad
leave
xor
pop
fnstsw
mov
and
mov
xor
xchg
xchg
mov
popa
adc
lcall
inc
xor
xchg
push
insb
aas
adc
push
adc
mov
mov
out
push
mov
pusha
push
push
cmp
pop
fstpl
and
cmp
int3
sub
in
lret
shll
or
clc
nop
pop
lret
arpl
pop
imul
mov
xchg
add
ror
or
mov
adc
in
jg
loop
scas
inc
cli
mov
push
int3
xlat
imul
mov
cmp
out
aam
loope
cmp
scas
ss
int3
inc
lret
dec
std
cwtl
hlt
imul
in
cmp
add
outsb
mov
or
dec
test
adc
inc
pop
inc
out
jp
leave
sbb
dec
sub
ljmp
test
cmp
jno
push
dec
mov
cli
lret
pushw
js
sbb
fnstenv
loope
pop
jl
add
push
inc
sub
scas
stos
mov
ret
repz
dec
ljmp
data16
loope
xchg
mov
shll
add
lret
int3
clc
adc
std
leave
hlt
xchg
push
mov
jno
popf
adc
lret
mov
lret
test
sub
ret
lret
popf
icebp
mov
ss
aam
cmp
xchg
mov
daa
lahf
xor
gs
sbb
dec
movsl
outsl
fwait
hlt
jns
cli
and
push
jns
cltd
lret
cmp
iret
sub
sbb
orb
fdivrs
fldenv
stc
in
aad
out
inc
in
pop
mov
push
sub
gs
push
jp
push
stos
lret
jmp
sbb
pushf
sbb
cmp
popf
xchg
ljmp
mov
add
mov
xor
bnd
sarl
cmp
stos
je
mov
xchg
push
pop
bound
mov
or
orb
dec
cli
fdivrl
pop
dec
xor
pop
outsl
rcrl
sbb
xchg
sub
and
add
cmp
inc
push
iret
jmp
gs
lea
push
mov
jle
xchg
lret
pop
dec
inc
arpl
stos
mov
cld
push
lret
jno
rcrl
lret
test
jle
jecxz
repz
mov
mov
xchg
outsl
nop
rolb
xchg
movsl
sub
ljmp
into
and
xor
movsl
lcall
adc
and
lret
mov
push
lret
data16
loopne
xchg
sub
add
xor
out
inc
adc
out
lret
add
data16
mov
out
inc
sub
in
lret
loop
popa
xor
call
push
and
jle
sti
repz
lret
enter
push
jbe
mov
push
fadd
test
in
lret
dec
popf
std
pop
cmpsl
pop
sub
add
pusha
outsl
xchg
mov
push
mov
sub
pop
sub
jle
lret
xor
mov
jg
sub
std
mov
mov
fsub
lods
inc
cmp
nop
cwtl
push
lret
xchg
mov
cmp
imul
inc
or
movsb
push
aaa
mov
push
mov
mov
sbb
ret
pop
xchg
and
xchg
pop
lret
mov
cli
jle
or
xchg
sbb
rclb
mulps
lahf
jmp
repnz
mov
mov
cld
rcr
dec
rorl
shl
ja
inc
fwait
cwtl
cli
pop
out
mov
jl
lret
les
lret
xchg
jp
push
sbb
inc
cli
cmp
add
inc
rcll
jo
movsb
jb
inc
test
out
ret
mov
test
negl
fsubrs
sarl
pop
mov
lret
adc
adc
test
pop
sahf
int3
or
mov
loop
adc
mov
add
sahf
lret
xor
les
cmp
rep
xor
pop
jle
addr16
nop
imul
sbb
or
subb
xchg
pop
lret
dec
xchg
ror
insb
stos
fidivl
push
movsb
fadd
cmc
or
jp
mov
or
or
cmp
xchg
inc
xchg
jbe
popa
sbbl
hlt
add
inc
pop
inc
inc
lret
sahf
decl
mov
in
jecxz
movsb
leave
mov
cmp
ror
fdivl
lds
ljmp
add
rcrl
lret
test
lret
push
mov
lret
std
dec
push
xor
mov
fdivs
fwait
out
lcall
push
sbb
mov
push
sub
push
test
cwtl
pop
das
lret
fdivrl
lret
out
pop
scas
dec
add
data16
dec
into
sbb
adc
xchg
cmp
jle
popf
mov
lret
fistps
shll
and
ds
out
lret
push
push
mov
mov
jno
ret
cmp
lret
dec
sbb
fmul
shl
leave
adc
aam
lret
fstpl
inc
aaa
icebp
lret
or
jl
pmuludq
sub
in
dec
mov
imul
xor
subb
aaa
cld
jne
stos
push
outsb
out
xor
gs
bound
aad
clc
jge
jbe
lret
int
sbb
xchg
cmp
movsl
push
shrl
shufps
cmp
dec
stos
inc
decb
mov
packuswb
popa
inc
sbb
hlt
inc
fldt
icebp
fidivrs
fisubrl
rcrl
fdivs
mov
or
es
leave
lret
and
cli
push
mov
out
lock
xchg
into
adc
xchg
daa
jbe
cmpsb
scas
fiaddl
mov
and
enter
dec
push
test
ret
scas
jl
adc
and
fcmovbe
mov
add
into
xchg
mov
cmp
xlat
pop
stos
arpl
xchg
rcr
lds
rcll
adc
nop
shll
adcl
dec
aaa
arpl
fcoml
mov
lret
std
test
jg
cmp
jecxz
cmp
jge
mov
mov
stc
js
xchg
push
pop
lret
jbe
int3
add
fimull
lds
xlat
pop
sahf
vpshufd
rcr
mov
xchg
scas
lret
mov
jle
ss
mov
dec
push
lret
cmp
sub
xor
push
lret
sub
xor
in
cmp
bound
and
sbb
or
aad
test
lret
dec
mov
lret
fildll
shrb
loope
sarb
scas
and
std
lret
arpl
stos
pop
sub
mov
xchg
int3
test
dec
cltd
call
repz
lds
dec
decb
stos
add
ret
jecxz
mov
push
lret
sub
addr16
cli
jp
pushf
insl
and
mov
jne
pop
xchg
sub
cli
lret
ret
test
fstpl
lret
mov
lahf
lret
push
cmp
dec
add
test
pop
lret
mov
cmp
daa
pop
jle
data16
xor
lcall
mov
mov
pop
mov
rcl
lret
pusha
loopne
lret
movsl
inc
les
je
push
jnp
pop
cmp
pop
xor
outsl
lea
pusha
movsl
das
cmp
add
test
lret
mov
ret
sahf
inc
cmp
sub
lret
xchg
adc
lret
or
ror
mov
adc
jl
adc
pusha
mov
mov
outsl
roll
into
imul
sub
cmpsl
lret
xchg
fadd
and
lret
stos
aad
pop
adc
cmc
jb
fwait
inc
movsb
sti
subl
add
xor
xor
sub
shll
mov
fbstp
lahf
pop
add
mov
int3
dec
imul
popf
inc
xchg
test
iret
lds
rcll
jae
outsl
inc
roll
lret
cmpsl
sub
push
rcr
adc
bound
out
mov
lahf
cmp
lea
dec
loope
dec
push
outsl
clc
cmc
lds
push
stc
movsl
push
inc
cmp
shrb
pop
jle
mov
test
pop
push
adc
cltd
ljmp
arpl
ret
push
cmpsl
mov
pop
xor
popa
cmp
jo
or
ror
jbe
in
das
and
mov
xchg
fs
pop
outsb
lret
jle
mov
cmp
add
jae
mov
ss
imul
int3
mov
pop
push
xchg
add
cmp
sub
stos
mov
stc
test
shlb
jbe
push
shlb
lret
or
push
xor
hlt
stc
add
stos
lret
add
or
sbb
rcrb
add
jl
lret
dec
pusha
sub
adc
lret
pop
xchg
dec
fninit
ror
cmpsb
adc
fistps
ret
or
popa
xorb
shlb
nop
mov
pop
mov
sub
repz
cli
mov
push
fimull
lret
incl
cmp
jge
cmp
xchg
pop
push
add
pop
jns
mov
stos
jnp
sub
xor
pusha
dec
lret
mov
sbb
ror
sbb
adc
pop
lret
aaa
lds
and
fmuls
aad
iret
sti
lret
sbb
lret
jae
and
cmp
push
lret
data16
out
popf
aad
lret
scas
mov
outsl
xchg
mov
mov
push
aam
jmp
jbe
lret
and
lret
cwtl
adc
cli
outsb
aaa
aam
fcoms
jno
lret
dec
mov
xchg
pop
fucomip
mov
test
mov
and
push
mov
es
adc
out
popa
out
mov
xchg
stos
sbb
jns
lret
in
arpl
xor
sub
fisubrl
popf
imul
bswap
daa
loopne
iret
cwtl
mov
or
call
mov
sbb
jb
jae
xchg
cli
cs
lods
xor
shrb
jg
mov
or
outsl
push
xchg
cwtl
cmp
pop
or
mov
out
ss
dec
movsl
mov
sub
scas
inc
cmp
cmp
int
adc
adc
cli
lods
mov
testl
stos
push
inc
push
xchg
jae
loop
xchg
loop
aad
mov
ja
xor
cmp
into
xor
jecxz
or
mov
and
out
adc
cmp
push
out
mov
lret
jle
aam
bound
mov
lret
fwait
inc
adc
test
pop
inc
xchg
pop
mov
roll
add
jo
pop
ret
add
out
mov
addr16
leave
dec
rcrl
add
into
lea
stos
es
push
dec
dec
ss
pop
negb
mov
xchg
and
lret
roll
cld
xorl
sti
cli
lret
cmp
movsb
and
jbe
jnp
sahf
adc
in
cmp
shrl
xchg
xlat
das
in
mov
cld
scas
fsubp
test
sub
fsubl
push
jp
xor
add
fidivl
adc
add
imul
loop
hlt
lret
sahf
jnp
cltd
into
jp
in
cmp
mov
mov
int
sub
xor
call
mov
add
lret
adc
and
adc
mov
lret
ret
pop
xchg
sbb
mov
dec
and
out
lods
std
inc
ror
out
scas
sahf
mov
push
lret
lds
pop
lahf
dec
lret
sbbl
inc
sub
sbb
int3
dec
xchg
lret
cmp
lret
xor
pop
lret
mulb
xor
cmpsb
lret
adc
jl
fsubrl
cwtl
cld
lret
rcll
jns
fidivrl
fstpl
popf
lret
iret
adc
sub
dec
cmpsl
jns
loopne
lret
sahf
push
clc
ret
adc
mov
push
fcmovu
outsb
dec
pop
sub
dec
cmp
fstl
cli
arpl
fadds
divl
cmovg
repz
jnp
push
lret
dec
fnstenv
out
hlt
insl
add
mov
aas
xchg
adc
add
xor
std
sub
mov
subl
cmp
loopne
xor
fwait
cmpb
fsubrs
or
jg
aam
xchg
lret
mov
lret
xchg
stc
je
ja
or
lahf
out
cwtl
jle
mov
or
sti
mov
cltd
mov
daa
cmp
fwait
mov
dec
mov
into
sbb
mov
xchg
into
testl
testl
lret
sub
aam
in
or
iret
or
or
xchg
and
push
and
sarb
stos
fsts
loope
bswap
rorb
pop
call
arpl
inc
mov
sbb
lods
sub
mov
add
lock
cmp
lods
inc
out
pop
add
push
ficoml
sbb
cmpsl
mov
mov
xchg
cmp
loop
push
aad
push
test
mov
dec
orl
mov
sbb
fwait
mov
ret
das
jbe
mov
add
rcl
hlt
lods
rorb
shlb
jp
testl
fsubl
mov
lret
mov
aas
cli
add
mov
sbb
mov
xchg
inc
vblendmps
lret
loope
mov
push
insb
add
adc
or
mov
aam
out
cmpsl
ss
dec
shl
repz
lret
inc
mov
clc
icebp
neg
push
xor
adc
stc
lods
int
cwtl
cmp
dec
or
icebp
fstl
lret
orl
xchg
lret
sbb
dec
call
aaa
dec
repnz
lock
lret
jg
out
push
popa
mov
and
lret
or
rol
adc
add
sub
and
lret
mov
mov
inc
jbe
lds
ret
cmpsb
mov
pop
jp
in
popa
mov
aad
mov
mov
pop
jbe
lret
inc
nop
mov
sub
jge
movsb
or
iret
jb
xchg
es
and
sub
xor
pop
fwait
sub
mov
sbb
fiadds
sbb
dec
cmp
lret
add
xchg
push
pop
lret
sub
mulb
imul
rclb
dec
pop
fstl
shll
popf
lret
ljmp
outsl
cmp
mov
cmp
mov
enter
js
pop
and
cmp
dec
jns
nop
iret
dec
insb
sub
lret
mov
fsubr
mov
daa
cwtl
lea
cmp
adc
mov
fcmovbe
fstpl
xchg
lret
lahf
or
insb
mov
push
adc
dec
push
lret
adc
push
adc
rcll
fidivrl
out
cmpsb
xor
rolb
std
xchg
lret
mov
push
lret
cmp
clc
jmp
mov
xchg
test
lods
daa
scas
lret
shlb
lret
add
dec
insl
rolb
cli
ret
jg
or
or
mov
ret
mov
les
adc
or
movsl
lret
shlb
fsub
pop
imul
push
and
rorb
lods
lret
sbb
xor
mov
stc
fadds
popa
cmp
adc
gs
xor
fwait
pop
mov
aad
and
cmp
push
dec
dec
mov
scas
out
popf
pop
mov
mov
stos
lret
orl
out
mov
cli
sbb
cld
jmp
insl
add
test
aam
add
push
decl
pushf
leave
iret
aas
pop
mov
mov
shr
inc
pop
mov
lret
dec
mov
jp
testb
jp
jbe
test
cli
outsl
adc
fildl
repz
sarl
cmpsb
iret
lret
push
lret
les
inc
rolb
jle
dec
rolb
jns
test
inc
std
lret
mov
lcall
pop
pop
daa
test
dec
pop
mov
dec
addr16
lret
das
jnp
mov
test
push
sub
and
lret
loop
lcall
xor
mov
mov
sub
push
lret
fisubl
rcrb
push
sti
out
stos
lret
popf
les
scas
xchg
fcmovbe
xchg
add
push
lahf
dec
int3
inc
xor
mov
cmpsb
sub
pop
ja
in
xor
inc
mov
fdivrs
jmp
sbb
lret
inc
cmc
repnz
dec
ja
mov
pop
cmp
fnstcw
mov
les
jae
lret
fdivs
fwait
xchg
cltd
or
and
aam
repnz
sub
cld
punpcklbw
das
addr16
mov
xor
jb
lret
xchg
icebp
or
dec
arpl
outsb
cli
mov
mov
sbb
and
dec
push
andl
lods
jno
pop
lret
bound
cwtl
out
loopne
sub
dec
aad
push
aas
jae
fwait
xlat
lret
xchg
fst
aam
cli
mov
inc
insl
push
lods
rclb
and
xchg
jle
mov
sti
jmp
fidivrl
pushf
mov
les
add
es
dec
dec
sbb
xor
dec
rcrb
outsb
fmull
movsb
mov
cmp
adc
inc
shlb
jbe
xor
cmp
and
dec
dec
fsts
stos
adc
andl
sub
ds
sub
or
mov
aam
xchg
inc
mov
cmp
xor
dec
and
fistpll
decl
dec
lret
in
add
ljmp
stos
push
xor
or
test
add
adc
xor
cs
lret
and
test
les
ss
lahf
cs
ljmp
fcomps
mov
je
ds
jp
cmpl
pop
ficoms
sbb
js
out
outsl
add
sar
inc
imul
aaa
fidivl
addr16
cltd
fcmovnbe
cli
loope
pop
cmp
subl
xchg
enter
lret
pop
or
shl
lret
cld
jge
push
pop
jge
adc
adc
sti
jns
aaa
jmp
stos
jb
rorb
std
test
pop
out
lret
cli
fwait
mov
shr
lret
data16
mov
lock
shl
lret
fisttpll
imul
jmp
lret
ss
inc
aas
or
cmp
mov
jmp
sti
pop
lahf
jnp
iret
or
xor
cmp
mov
mov
jo
sahf
pop
andl
mov
inc
sbbb
aaa
push
add
mov
rcrl
mov
push
mov
mov
jecxz
xor
sti
adc
ljmp
mov
or
imul
adc
ss
cmp
add
xchg
icebp
and
jns
fidivs
lret
stos
mov
shl
std
pusha
or
and
mov
dec
push
sahf
sbb
push
hlt
sti
pop
stos
jle
and
or
lock
mov
shlb
fcomip
hlt
mov
fistl
out
rolb
push
call
js
mov
aas
cs
shl
ret
fisttpll
add
shlb
and
inc
into
push
ror
lods
loopne
clc
mov
std
in
icebp
cmp
fidivrl
mov
sbb
dec
jo
out
les
sbb
dec
fadd
jmp
pop
xchg
pop
aam
hlt
cli
or
mov
call
cld
lret
jns
adc
das
ret
stos
std
push
sbb
test
hlt
call
cmp
pop
insb
or
ja
pop
or
jge
mov
std
push
push
lret
mov
xchg
popa
outsl
mov
movsl
add
push
mov
pop
inc
pop
lret
enter
pusha
cmp
mov
sub
mov
ret
pop
inc
popl
fidivrl
jae
mov
mov
loopne
lahf
int
sub
loope
lret
mov
sbb
mov
sarb
mov
jb
cmc
out
out
mov
add
imul
cmpsb
ret
cmp
pop
lods
sbb
mov
lret
aad
xor
pop
inc
push
scas
jmp
rol
xor
or
addr16
push
dec
outsb
jno
cli
push
sub
imul
bound
mov
push
scas
pop
mov
mov
xor
lret
cmpl
fildl
outsb
ret
xor
addr16
sub
xchg
adc
cmp
mov
inc
out
ficoms
lcall
je
sti
sbb
sarb
ds
jno
cmp
push
popa
mov
mov
inc
push
push
lret
adc
jbe
movsl
lret
call
aaa
cmp
out
aad
int3
lock
push
leave
in
adc
pop
sbb
pop
cmp
popl
or
sub
lret
add
jp
loop
dec
push
pop
or
dec
rcr
aad
mov
rcrl
xchg
jne
xchg
dec
rcrb
sarl
cltd
nop
clc
mov
cmp
adc
mov
fsubrs
and
mov
xor
push
pop
into
sub
mov
movsb
fcmovb
dec
movsl
bound
push
insl
xchg
das
je
arpl
negl
push
mov
aam
mov
push
rcrl
movsl
mov
ret
aaa
mov
mov
std
push
imul
sti
cmp
cmp
mov
fs
cmpb
lret
shlb
in
ficoms
mov
jmp
movsl
or
lea
shrl
mov
and
test
sarb
mov
daa
push
sub
push
add
xor
scas
mov
add
shrb
rcll
out
mov
int3
out
mov
jns
xor
xchg
sbb
jge
push
mov
fbld
xchg
mov
imul
adc
cs
outsl
mov
lock
inc
mov
and
into
stos
adc
shl
out
add
fstl
shll
cmpsl
ja
icebp
pop
ret
aas
jne
rcl
push
sbb
in
aas
lds
lahf
fwait
rcrb
loope
mov
repnz
gs
lahf
sarl
push
ret
add
jbe
arpl
mov
mov
add
rolb
push
movsl
push
or
ret
push
test
ljmp
sbb
and
cmc
cmp
xchg
pop
push
es
cmpsl
cld
mov
fsts
mov
xchg
outsl
ja
ljmp
stos
mov
data16
movb
mov
jae
test
xlat
lret
sub
dec
mov
inc
mov
sub
fimull
leave
pop
inc
or
js
aas
lds
mov
mov
add
out
fmulp
and
mov
addr16
or
xchg
jo
fcmovnb
cld
mov
pushf
out
sbb
mov
add
jae
daa
pop
shll
es
sub
xchg
int3
mov
cmp
adc
pop
or
inc
pushf
xchg
aas
test
clc
mov
xchg
xchg
mov
cmp
jle
push
xchg
or
jle
cmpsl
mov
cmp
out
jecxz
rclb
andb
jg
in
lea
mov
push
ss
mov
pop
cmp
inc
out
or
cs
xchg
sub
mov
bound
dec
dec
shrl
cld
jle
jns
mov
test
xchg
push
mov
lds
cmp
popl
push
in
and
dec
xchg
inc
ficompl
rcr
push
push
lcall
repz
sub
xchg
dec
js
pop
jp
pop
es
orl
addr16
pop
xchg
push
outsl
cmp
push
pop
push
xor
pop
movsb
dec
insb
movsl
aam
push
mov
sbb
or
xchg
pop
xor
int3
daa
repnz
shrb
push
in
std
movsl
mov
xor
ljmp
out
or
sbb
cmp
push
mov
pop
fcmovbe
lea
mov
cmp
sub
into
ja
sub
xchg
xchg
pop
xchg
pop
fucom
adc
pop
outsl
cwtl
cmc
xchg
movsl
mov
hlt
mov
pop
mov
test
scas
jl
imul
movsb
test
push
sub
daa
ficomps
jb
push
das
pop
es
jg
sbb
int3
mov
sub
xchg
sbb
mov
or
mov
sbbb
dec
rcll
sbb
stos
push
stc
shrb
add
adc
xchg
mov
and
sub
ljmp
push
push
dec
lds
sbb
xchg
xor
jae
cmp
inc
inc
push
add
dec
cmp
xchg
xchg
adc
sbb
cmpsl
inc
push
rol
jecxz
int3
pop
push
cwtl
mov
pop
mov
lods
add
cmpsl
loopne
das
or
inc
jg
hlt
out
dec
ret
je
push
and
jnp
cld
jne
jae
xchg
lods
jecxz
popa
dec
insl
push
inc
push
sahf
je
das
test
push
and
mov
jb
fstps
sbb
and
int
push
push
shlb
bnd
sub
scas
jmp
push
inc
gs
xchg
mov
push
sti
fnstsw
in
in
ss
sbb
aas
popf
scas
test
push
mov
bound
adc
and
aad
push
cmp
inc
addb
rol
fists
lds
push
jo
jle
mov
pop
test
cmpsl
mov
jb
and
cmpsl
xchg
cmp
dec
int3
cmp
std
push
cwtl
lea
xchg
rcrl
fwait
add
mov
cmp
push
push
ljmp
imul
mov
scas
pminub
inc
mov
push
pop
call
or
clc
jp
fcomps
rcrb
fwait
pop
leave
ret
sub
xor
sub
push
ljmp
js
testl
mov
daa
sti
push
cmp
mov
adc
mov
cmpsl
lcall
mov
mov
push
dec
insb
lret
insb
vcvtps2pd
dec
xlat
scas
xor
pop
mov
shll
filds
and
in
adc
inc
sbb
lds
out
sbb
push
add
add
cmp
adc
decb
sarb
xor
lcall
stos
jbe
push
xorl
sbb
mov
ficompl
mov
repz
pop
je
adc
ljmp
dec
push
cli
outsl
push
jno
mov
cmpsb
add
adc
test
mov
jge
lock
mov
cmp
in
in
scas
js
or
sub
into
and
in
push
stc
push
or
js
xor
data16
sbb
aam
inc
push
pop
cmc
or
cmp
scas
movsb
jge
or
xchg
jo
sbb
push
and
shlb
lock
sti
jb
cld
jb
mov
fadd
lock
add
pushf
jno
lods
scas
adc
add
filds
jle
movl
pop
dec
inc
ljmp
mov
mov
inc
xchg
int
mov
cs
fbld
or
sbb
hlt
jle
push
xchg
out
push
andb
inc
sarb
inc
mov
not
xor
ja
or
and
imull
pop
outsl
pop
pusha
add
jmp
inc
adc
sbb
js
daa
or
test
jnp
movsl
loope
rcll
out
dec
fisubrl
sub
cmp
pop
jmp
jp
out
ja
xor
fistl
cmpsb
inc
or
mov
or
loop
inc
fidivl
pop
pop
inc
in
sub
lds
dec
xlat
jne
setne
jne
test
push
out
mov
inc
lea
shll
mov
adc
xor
cltd
xchg
cs
ds
mov
stos
pop
cmp
xchg
push
cli
mov
call
in
cs
and
sub
pop
and
test
scas
stos
xchg
test
cmpsl
adc
mov
cmp
add
bound
push
push
bound
push
cmp
pop
adc
test
adc
mov
jb
iret
pop
shll
cmp
or
in
movsb
sub
js
cmp
mov
sbb
scas
pop
inc
push
in
mov
dec
ficompl
mov
xor
aaa
psadbw
xchg
inc
xchg
pop
ss
xorl
in
push
pusha
cmpsl
mov
xchg
data16
cmp
lret
push
jnp
repnz
lods
jne
pop
insb
dec
and
jmp
xlat
xchg
push
lods
cmp
popa
fstl
jae
testb
mov
cmp
outsb
adc
repz
xchg
xor
shll
or
pop
inc
call
cli
pop
fcomip
or
push
xor
imul
ss
sti
push
outsb
jne
mov
aas
xlat
repz
loope
cltd
cltd
adc
cmpsb
add
push
mov
stos
dec
into
push
stos
xchg
jle
std
mov
adc
mov
or
aam
outsl
popa
cmp
ja
pop
incl
in
xor
adc
sti
rorb
xor
push
jns
jns
jno
cmp
lods
jb
adc
push
mov
mov
sub
mov
cmpsl
push
mov
ljmp
dec
lret
mov
xchg
mov
and
and
repz
mov
xbegin
lret
lods
test
aaa
xor
dec
xchg
mov
les
pop
or
and
movsb
cmp
insl
push
xchg
lahf
idiv
push
outsb
out
aaa
push
iret
and
jo
dec
jp
shll
repz
loopne
mov
adc
inc
adc
movsb
outsb
in
jp
mov
add
es
mov
dec
les
xchg
sub
pushf
xchg
lcall
push
xchg
xor
aas
xchg
fwait
les
jle
dec
sahf
dec
int3
lock
sub
cld
test
ljmp
inc
scas
fdivr
xchg
lds
push
dec
or
jg
pop
dec
pop
sub
popf
push
outsl
into
loopne
push
fstpt
fimull
mov
adc
mov
pop
or
push
enterw
push
jge
jecxz
push
mov
sti
shlb
mov
repnz
in
pushf
outsb
testb
pop
jp
fmul
into
push
pop
insl
call
sbb
scas
xor
int
xchg
pavgb
lea
cld
push
cmpl
cmpsl
dec
xlat
cmc
lret
xlat
push
and
jb
test
or
int
mov
cld
repz
xchg
stc
bound
or
loop
dec
xchg
lds
xor
rorb
xchg
cld
ja
ljmp
or
push
enter
ret
repnz
or
call
insb
or
jmp
lods
xchg
lcall
sbb
insb
adc
push
aad
mov
push
int3
repz
cs
sbb
push
insb
test
andl
adc
ss
aam
mov
sarl
cmp
insl
into
mov
push
imulb
scas
out
in
iret
decb
pop
andl
in
pop
movsl
lcall
ret
add
mov
xorl
and
out
push
mov
jge
testl
push
dec
mov
int3
sbb
mov
mov
cmp
scas
aam
mov
insb
jne
ljmp
sub
add
lods
loopne
mov
imul
cli
xchg
mov
lods
mov
push
cmpsb
or
xor
mov
enter
sarl
mov
pop
jbe
cmp
sbb
push
or
push
jae
rcrl
ror
ds
and
adc
clc
push
and
test
jmp
jp
dec
loopne
xor
dec
mov
repz
dec
adc
sbb
and
jge
out
ss
mov
xchg
ljmp
adc
data16
sbb
sbb
les
mov
push
mov
jg
inc
les
rclb
dec
push
mov
pop
hlt
jmp
sub
pslld
sub
jne
aad
and
and
push
and
inc
jmp
inc
dec
sarl
out
mov
mov
sbb
bnd
je
jb
jle
jno
jnp
xchg
orb
sbb
or
shrb
cltd
cwtl
cmp
mov
sub
cmp
or
cli
fnstsw
mov
dec
dec
testl
cs
jmp
pop
mov
andb
aaa
popa
mov
pop
dec
inc
loop
xor
das
dec
in
aam
push
bound
lret
test
sub
sub
shl
repz
es
inc
jns
jg
mov
int
mov
daa
pop
xchg
push
outsl
pop
rcl
negb
lock
mov
aas
sbb
jl
mov
sti
inc
push
int
loopne
pop
push
je
add
fsts
in
sub
pop
inc
adc
push
mov
mov
test
push
push
push
aam
push
xchg
pop
movsl
scas
mov
push
jae
fidivl
mov
into
lret
add
jg
cwtl
sbb
push
mov
xchg
dec
sbb
repnz
popa
mov
push
pop
lods
push
or
push
pop
mov
aam
jbe
xor
xchg
arpl
bound
aam
roll
inc
or
mov
mov
cmp
aaa
xor
clc
pop
jge
push
repz
lock
mov
aaa
leave
mov
in
push
nop
lahf
mov
sub
cmp
lock
sub
lcall
je
push
sarl
call
cmpb
dec
out
lods
jmp
pop
mov
jne
add
xchg
into
lock
rcrl
cli
scas
jmp
add
push
int
or
in
and
dec
mov
inc
dec
push
hlt
call
ret
fs
imul
mov
adc
dec
filds
sbb
push
dec
mov
pop
in
bound
imul
xchg
push
sbbb
cmp
pop
xchg
dec
pusha
popa
cmc
xchg
fisubl
jno
ffreep
xchg
cmp
mov
push
lret
jno
sbb
scas
fwait
aam
test
or
or
pushl
jmp
repnz
xor
dec
jp
fisttpll
or
lds
push
pushf
les
andl
setne
pop
ror
sbb
pop
lret
add
sbb
mov
inc
lea
das
js
adc
push
inc
test
push
clc
xor
arpl
loopne
pop
jbe
adc
fxtract
lods
and
outsl
add
int
adc
fwait
lds
pop
into
fidivl
sub
filds
repz
sbb
push
sarl
pop
xchg
jmp
repnz
sub
pop
cmp
xchg
cwtl
xlat
cmp
fisttps
cmp
jg
or
mov
jbe
jmp
pop
das
or
xchg
aas
lret
push
gs
aas
cmp
cmp
clc
xchg
iret
call
sahf
movsl
imul
sbb
xlat
dec
push
pop
in
aam
pop
jl
dec
mov
mov
mov
rclb
fdivl
pop
lds
sub
or
mov
dec
add
call
push
lds
cmp
ret
or
ret
aas
jbe
jg
cwtl
or
imul
and
lock
rcr
xchg
les
push
push
push
inc
ficoms
sub
or
fldenv
ror
fmulp
bound
push
adc
cmp
mov
mov
stos
call
inc
mov
fistl
je
out
adc
inc
pop
stc
adc
shll
xchg
cli
stos
or
icebp
loopne
mov
aas
lret
sub
or
sbbl
test
lret
enter
xor
lret
das
insb
stos
adc
js
or
cmc
lods
sub
int3
bound
setnp
ss
push
fxch
push
push
test
lret
lret
lcall
inc
int
jne
xchg
jecxz
jl
cli
mov
fwait
xchg
mov
dec
and
pushf
adc
int3
mov
jg
leave
inc
cwtl
mov
mov
xor
mov
popf
xchg
cmp
roll
loopne
lret
pushf
pop
stos
dec
mov
jae
inc
call
inc
push
movsb
mov
in
mov
mov
int3
data16
or
adc
mov
sar
mov
cmp
jg
rorb
insl
push
stos
shlb
push
lds
xchg
inc
or
shr
lret
pop
mov
scas
pop
jbe
push
adc
or
cmovl
hlt
cmp
dec
shll
lods
lret
cmp
add
fwait
cli
jae
roll
ficoml
testl
lods
mov
pop
inc
mov
call
int
daa
lret
imul
lods
push
iret
pop
jle
outsb
jmp
pop
dec
lret
int
xor
popf
xchg
addr16
cmp
mov
ja
xor
sbb
lret
jp
sub
negb
imul
aas
lret
mov
pusha
sbb
sarb
jno
mov
jmp
mov
add
jne
pop
xchg
addr16
lret
mov
push
lret
icebp
xchg
clc
std
mov
jns
mov
push
int
lret
xchg
cltd
xlat
mov
mov
jp
es
ret
sub
push
push
roll
bound
mov
fsubrl
dec
dec
inc
sub
dec
cmp
cmc
cmp
xchg
cld
fsubl
push
dec
mov
push
add
pusha
lods
cs
push
int
adc
push
jno
or
or
mov
roll
daa
sub
dec
mov
js
lahf
xchg
mov
stc
dec
sub
mov
cmpsb
adc
inc
outsl
push
pushl
xor
data16
into
insb
fcoml
push
push
mov
bound
xor
inc
clc
push
pushf
mov
add
mov
js
and
out
sahf
xor
mov
and
or
sub
into
ret
xor
repz
inc
xchg
jo
push
jmp
jbe
mov
sbb
aas
pop
sub
imul
leave
das
in
ret
and
mov
icebp
jp
pop
or
cltd
outsl
or
xchg
cwtl
inc
loop
mov
ficoml
stos
das
adcl
adc
sub
ljmp
mov
cmp
and
lret
gs
das
or
or
stos
push
sub
inc
cmpsl
in
pop
imul
jb
scas
or
add
in
jge
mov
or
sbb
bnd
insl
filds
push
iret
outsb
dec
pop
push
stc
fidivrl
mov
push
push
mov
pop
mov
cmp
cltd
subl
sbb
iret
cmp
add
pop
dec
fdivr
out
push
cmpb
sarb
notb
aad
sbb
mov
int3
std
test
dec
pop
fstl
insb
cmp
xchg
adc
mov
mov
and
sbb
push
push
or
sarb
pop
pop
ljmp
sub
jg
int
dec
lcall
inc
movsb
sbb
bound
stc
push
jno
push
sbb
xchg
leave
inc
jnp
inc
pop
js
aas
mov
shlb
pop
mov
loop
imul
out
mov
and
cmp
call
js
enter
ret
or
push
mov
push
xor
mov
shl
dec
mov
nop
mov
cmp
xchg
out
dec
neg
aas
dec
ret
pop
adc
out
cmp
and
testb
pop
rorb
gs
pop
xchg
addr16
inc
subl
and
xlat
mov
testb
xor
jg
ljmp
fiadds
fisubrl
ljmp
outsl
jp
in
pop
or
subb
fstl
dec
mov
popf
push
xor
adc
lret
sub
jb
add
or
int3
add
add
mov
test
adc
int3
insl
rolb
pusha
mov
sub
arpl
addr16
dec
push
enter
jne
inc
mov
xchg
stos
push
pushf
mov
push
push
fsubrs
pop
shlb
nop
xchg
mov
push
enter
and
or
adc
dec
sbb
pusha
cltd
push
movsl
cmp
dec
leave
xlat
insb
mov
xor
sub
mov
cwtl
movsl
mov
hlt
ret
pusha
leave
add
mov
js
cli
out
lahf
in
bound
push
dec
shlb
mov
cmp
loopne
out
adc
lret
push
pop
mov
mov
jnp
dec
pop
jns
xlat
out
xlat
shl
mov
jle
xchg
or
outsb
popf
inc
sbb
test
test
jmp
push
add
ficoml
fcomps
xor
push
call
pop
gs
out
push
pop
int
sub
outsl
sub
push
mov
aaa
and
mov
sbb
test
xchg
pop
pop
pop
pop
test
pop
jecxz
outsb
push
adc
ja
ljmp
mov
mov
xor
inc
dec
scas
out
pop
popf
adc
movsb
pop
sub
fidivrl
adc
lods
int3
aad
xchg
out
dec
adc
pop
mov
push
dec
setae
jp
int
add
mov
mov
jecxz
call
cmpsl
sbb
scas
cli
rcll
fbstp
out
sub
pusha
divl
movl
dec
mov
jl
fdivrs
pop
sub
xor
pushf
or
lock
mov
and
psllq
and
pop
subb
xor
nop
fs
lret
add
setae
rcrb
mov
jnp
enter
push
add
mov
mov
je
cmp
xchg
pop
orb
cmc
repnz
idivl
roll
sbb
test
pop
sbb
lds
cmp
xchg
int
lahf
adc
or
mov
adc
mov
xchg
andb
sahf
push
decb
in
pop
in
bound
xchg
lods
fs
sub
mov
inc
or
ret
dec
xlat
mov
xchg
sub
mov
pop
dec
fsts
sbb
pop
adc
stos
mov
inc
and
xlat
mov
dec
sub
mov
outsb
jle
popf
add
test
sub
jge
add
je
pop
scas
and
out
xor
es
sub
add
dec
jge
fisttpll
sarb
rcll
out
sub
mov
cs
pop
mov
imul
subl
mov
imul
cmp
and
mov
sub
adc
cmc
mov
mov
ret
xchg
movsl
std
ljmp
fdivrs
xor
pop
jge
imul
fbstp
cwtl
mov
xor
sbb
aam
push
aas
pop
arpl
in
pop
pop
jne
mov
cmpb
insb
lea
pop
bound
mov
pop
out
cli
pop
aaa
fisubl
es
xchg
and
addb
pop
xor
pop
ficoms
pushf
inc
cmpsb
outsl
and
cwtl
pusha
and
adcb
inc
push
or
adc
stc
mov
hlt
hlt
lcall
test
jl
or
test
fs
imul
into
hlt
or
es
test
test
mov
mov
mov
cmp
les
or
vandnps
add
mov
sbb
pop
jmp
jne
loope
mov
pop
outsb
rcrl
dec
rcrb
dec
push
into
mov
dec
mov
pop
daa
sub
inc
cli
movsb
cwtl
mov
mov
adc
cmp
inc
xchg
sub
xor
or
push
bound
push
add
mov
aaa
addl
push
sbb
imul
rclb
shll
fnstsw
ss
sarb
out
adc
je
push
es
test
mov
sbb
es
mov
dec
cmp
test
pop
int
dec
push
or
sbb
and
xchg
pop
iret
or
mov
mov
and
popl
dec
int3
dec
in
push
nop
aaa
mov
add
push
mov
sbb
rclb
push
inc
and
cs
ljmp
adc
dec
ss
mov
out
xorb
cmp
mov
add
or
push
ret
call
jl
in
int
xchg
sbb
fistpll
or
lret
stc
xchg
mov
push
bound
iret
pop
lret
inc
out
cli
popf
jno
sbb
mov
nop
std
push
fwait
jecxz
mov
rcll
arpl
scas
outsb
outsb
aad
mov
mov
fs
jecxz
ficompl
sbb
mov
stos
repnz
jbe
data16
xor
adc
pop
shll
ja
add
cmp
xchg
pop
mov
push
fcoms
ljmp
fldenv
jle
div
mov
adc
into
mov
push
cwtl
out
pop
push
movd
xchg
xchg
loopne
outsb
fidivrs
jp
jo
xchg
out
repz
push
dec
aas
outsb
out
das
mov
movl
pop
movsl
ret
sub
push
xchg
rorl
ret
mov
aad
jle
enter
xchg
cltd
lcall
sub
add
push
rcrb
xor
insl
mov
out
movsb
mov
push
jae
ret
test
add
inc
out
insb
push
sbb
scas
dec
dec
int
pop
lahf
sbbl
test
push
pushf
push
mov
cli
repz
push
xchg
daa
mov
mov
inc
push
fildll
sar
lds
add
push
inc
jge
push
add
notl
and
adc
dec
sbb
ljmp
xchg
rcl
imull
add
repnz
mov
ror
bound
add
repz
adc
add
pop
xchg
pop
ret
jecxz
xchg
fisubrs
movsl
out
mov
ja
push
jns
push
and
rcrb
comiss
push
pop
mov
cmpsb
pop
lahf
movsl
out
inc
out
add
xlat
add
pop
movsb
mov
sti
cmp
dec
imulb
and
loop
mov
scas
jb
sbb
enter
sbb
push
push
out
xor
push
hlt
inc
xlat
test
cmp
cmpsl
je
int3
lret
in
and
pop
cmp
jmp
rcl
mov
scas
mov
lods
outsl
sub
sbbb
add
xchg
xchg
je
push
rorb
push
mov
stos
sahf
addl
push
inc
jmp
xchg
or
repz
das
insl
pop
mov
lods
xchg
push
dec
xor
sbb
fmul
mov
sub
jp
divl
sbb
xor
jmp
mov
cmp
mov
mov
fimull
xchg
in
and
movsb
inc
cwtl
lcall
cmp
dec
loopne
push
bound
ret
xchg
cld
sub
adc
cs
xchg
std
or
add
fisubl
rcl
sbb
sub
pop
jne
shrl
xlat
mov
xor
or
testl
jnp
push
lret
aas
dec
icebp
xor
rorl
mov
out
xchg
scas
aas
lock
pop
or
inc
adc
jmp
mov
inc
and
push
int
mov
loop
enter
mov
leave
push
cmp
in
jne
xchg
or
sbb
test
sub
xchg
les
jl
xchg
std
cmc
mov
mov
repz
mov
pop
shlb
push
insb
mov
cmc
int3
dec
mov
pop
sbb
out
cld
push
lret
jne
push
mov
add
cmpsl
pop
stc
push
pop
adc
js
leave
loope
add
hlt
xchg
ljmp
pop
jp
lret
and
iret
movsl
xchg
fdivrl
lock
xor
sub
out
pusha
and
lods
and
xlat
or
rorb
lcall
test
xchg
adc
cltd
inc
pusha
and
icebp
sub
cwtl
imul
xor
xor
push
arpl
lods
test
mov
rolb
push
movsl
fidivl
dec
bnd
push
test
jle
loop
mov
rclb
pop
push
les
mov
int
mov
gs
adc
xchg
movsb
imul
and
decb
and
bound
jle
mov
jmp
dec
mov
pusha
xchg
xchg
push
jle
lahf
shlb
divb
mov
and
inc
sub
lret
scas
fnsave
icebp
mov
mov
pop
rorl
xchg
fldl
jo
inc
mov
mov
movsl
scas
jecxz
add
insb
mov
cmp
inc
outsl
mov
push
dec
mov
in
repnz
repnz
pop
stc
clc
sbb
lcall
out
inc
lds
or
stos
dec
push
sbb
or
ret
fsubrs
es
ljmp
dec
jge
mov
cmp
ljmp
popf
mull
mov
or
push
xchg
and
into
mov
outsb
repz
das
in
loop
inc
cmp
adc
dec
rclw
inc
jg
sbb
ljmp
mov
adc
xor
push
push
xchg
sub
or
lahf
dec
dec
sarl
push
loop
pop
popf
jmp
push
push
scas
mov
adc
enter
xchg
and
pop
lods
lds
push
fcmovnbe
cmpsb
fcmovne
ja
adc
movsl
jp
and
aas
sub
and
xor
sbb
jns
or
sub
mov
sbb
js
push
imul
pop
jle
mov
xchg
ficoml
sbb
pop
rcrb
aas
and
imul
repz
add
mov
cmp
xchg
lods
pop
pop
mov
dec
adc
push
mov
cmc
inc
pop
sub
jo
mov
pusha
sub
out
dec
mov
pop
mov
push
stc
gs
cmpsb
pop
arpl
js
in
orb
push
mov
lcall
js
gs
jb
lret
push
call
lds
inc
lcall
xor
cli
push
daa
adc
jnp
mov
cmpsl
pop
mull
and
push
fsubl
nop
mov
push
into
xor
add
push
xchg
out
jne
adc
adc
pop
push
push
sub
pop
aad
cwtl
stos
mov
sbb
outsb
dec
test
loope
shlb
sub
outsl
das
add
adc
ljmp
hlt
mov
jbe
aam
int3
add
mov
push
orb
xchg
pop
mov
subl
or
adc
add
adc
cltd
lcall
xchg
and
jne
fldenv
add
ficoms
inc
pop
lahf
cmp
lret
mov
rcrl
jmp
negb
mov
push
stc
jmp
lock
pop
loope
or
jmp
pop
out
fcmove
movsb
pop
int3
mov
xor
test
test
sub
adc
aam
shl
cld
sub
pushf
stc
and
insl
cmp
jecxz
in
leave
iret
xorl
fsubs
sbb
mov
test
adc
rcr
cmp
ss
xor
add
push
inc
mov
sbb
jp
fxch
in
sbb
jg
insl
mov
sti
ret
push
and
outsl
push
mov
sub
in
pop
fwait
in
popf
xor
cli
sbb
addr16
push
dec
or
add
add
stc
ja
jbe
sahf
sarb
pusha
enter
aam
pop
adc
bnd
rcll
push
iret
mov
mov
push
es
pop
mov
lds
shrl
in
xchg
in
fildll
data16
inc
xor
popf
cli
cmp
fnclex
stos
ljmp
mov
push
imul
outsb
xlat
fimuls
add
sbb
bound
ret
pop
jbe
xchg
push
and
stos
clc
adc
test
jno
and
adc
movsl
adc
les
xor
nop
pushf
in
repz
xchg
sbb
adc
xor
jmp
pop
sbb
scas
pop
dec
xchg
fisttps
stc
mov
call
jno
cwtl
stos
add
mov
cmp
xchg
icebp
cs
repnz
xchg
rcrb
pop
repz
pop
lds
dec
data16
mov
dec
outsb
lret
in
cmp
test
into
adc
pop
sti
test
out
into
into
xchg
scas
push
xor
pop
outsb
fxch
pop
push
lahf
out
or
pop
push
pop
cli
repz
or
push
in
pop
sub
lods
or
mov
pop
cs
fwait
jmp
test
sbb
int3
call
mov
mov
push
push
push
pop
jecxz
dec
in
sbb
inc
add
jge
jp
cmp
mov
sub
push
mov
jg
and
insl
jl
fcmovbe
and
dec
jp
mov
sbb
movsb
or
lret
mov
into
rcl
rclb
lods
lret
js
cltd
lds
dec
cmp
and
ds
fldt
pop
pop
inc
loope
fdiv
lret
adc
jmp
shlb
lret
or
xlat
cmp
cli
andl
push
dec
xchg
dec
lret
lcall
dec
cmp
lret
mov
push
sbb
lret
cmp
sahf
lret
push
dec
lods
call
push
adc
add
mov
test
std
pop
mov
shrl
rcl
addr16
fcmovne
xchg
lock
out
jb
ss
adc
mov
popa
jge
mov
mov
iret
shll
jge
mov
xorb
lods
into
push
cmp
pop
sub
cmc
mov
dec
xchg
mov
inc
cwtl
repnz
mov
dec
repz
fs
or
lds
pop
jns
dec
pop
pop
int
mov
xor
inc
mov
inc
in
sbbb
mov
mov
imul
push
cld
fcoml
imul
test
push
sarb
icebp
fwait
push
mov
jp
inc
idivb
notl
bound
imul
and
repz
mov
cmp
xchg
mov
enter
and
mov
fwait
xchg
dec
data16
jo
inc
adc
mov
add
xor
cld
sti
cli
test
gs
cmp
push
pushf
mov
dec
push
into
in
mov
pop
push
mov
fisttpll
lea
in
add
sbb
scas
ret
ljmp
out
addb
cmpsl
jbe
push
lock
data16
sbb
push
pusha
lret
and
mov
outsl
idivb
hlt
push
stos
cmp
mov
and
aaa
sub
or
xor
rcr
jecxz
jmp
adc
loopne
xor
mov
insb
test
mov
aam
mov
mov
xchg
test
fists
movsl
push
mov
cmp
in
fucomi
push
xchg
ret
sahf
xchg
jge
push
lds
bound
inc
adc
in
mov
jmp
push
iret
test
repz
or
sbb
ret
pop
dec
xchg
cmc
lea
push
inc
pop
mov
pop
fs
lahf
push
sbbl
imul
mov
fs
in
and
or
mov
sbb
fistpll
rclb
fidivs
and
mov
outsl
mov
pop
decl
gs
bound
mov
push
push
bound
push
fnop
dec
aaa
mov
push
lret
cmpsl
into
cmpb
jmp
sti
or
lock
and
jns
pop
sub
pop
lds
rcrb
int
adc
int
loop
iret
xor
mov
lods
lock
mov
push
notb
jge
cmp
into
filds
push
test
insl
mov
fnstenv
cmp
outsl
xlat
shll
fwait
pop
add
add
in
dec
aas
mov
sbb
adc
push
fidivrs
mov
pop
inc
flds
jecxz
sub
sbb
pop
xorl
mov
repz
outsb
and
les
adc
mov
js
push
nop
cmpb
loope
imul
outsb
sub
xchg
mov
test
xor
mov
sbbl
sub
pop
cmp
xor
mov
leave
jl
mov
push
inc
inc
into
jb
testb
and
and
ss
test
std
jp
jns
mov
imul
test
mov
push
dec
ds
into
out
lea
stos
test
in
rclb
jb
ret
mov
sbb
movsl
scas
jae
sub
jne
repz
push
stos
push
fidivs
test
or
aam
lret
push
and
clc
inc
fstl
or
into
mov
jg
push
shl
sbb
out
inc
inc
out
sti
addr16
mov
and
mov
in
pushf
addl
outsb
int3
leave
inc
imul
gs
scas
aas
xor
rclb
mov
push
and
lock
leave
pop
pushf
sbb
xchg
or
repnz
lea
and
lock
adc
ljmp
bound
adc
adc
mov
cmc
les
test
or
adc
rcrl
push
sti
or
jg
xor
pop
jne
push
les
push
stos
shll
arpl
mov
rolb
xor
lahf
idivl
inc
push
jo
pop
shrb
and
mov
jo
into
jbe
add
movsb
fldcw
hlt
nop
cmp
dec
jp
push
shlb
sbb
mov
lret
pusha
add
push
bound
fs
jle
divl
repnz
fbld
dec
data16
dec
cmp
mov
lret
ret
push
pop
jmp
or
push
or
dec
push
in
das
je
jno
xor
pop
pop
pop
adc
xor
cmp
into
push
lret
ljmp
pop
iret
cli
mov
ss
sbb
fcompl
jmp
cmp
outsl
popa
rorl
lock
int
sti
mov
and
jg
jne
loop
or
mov
adc
and
cmpsb
ror
xchg
andb
cmp
dec
clc
insl
inc
push
enter
iret
insl
adc
insb
or
rcl
arpl
push
outsl
pop
call
jecxz
rclb
push
inc
shl
roll
cmp
inc
fstps
adc
adc
push
pop
mov
cmp
push
inc
jns
push
xchg
test
ds
adc
mov
or
push
jle
mov
int3
push
add
xor
inc
inc
test
xchg
inc
outsb
cmc
shl
jne
push
fidivs
xor
mov
pop
fildll
int3
push
push
popf
pusha
cltd
xchg
mov
or
pop
pop
and
rorb
sub
xchg
mov
sar
das
daa
movsb
shll
pop
bnd
jne
out
pop
nop
sub
cltd
cmpsl
pusha
fs
fidivs
dec
xchg
js
adc
mov
insl
pop
es
jbe
in
add
and
mov
xlat
and
push
jmp
push
mov
pop
out
orb
repnz
pop
ljmp
pushf
imul
insb
fsub
rcl
pop
cmp
popa
fstps
lret
inc
loope
push
pop
cmp
fdivr
fbld
sbb
test
sub
cli
mov
aam
das
push
fcmovb
adc
cmp
xchg
dec
mov
mov
dec
jns
jnp
aas
jmp
mov
pop
jmp
test
xchg
mov
stos
mov
fildll
lds
adc
mov
xor
jo
int3
xchg
das
sti
sbb
push
movsl
scas
adc
or
dec
mov
pop
sti
add
or
or
outsb
nop
imulb
or
mov
sbb
mulb
je
ja
push
daa
dec
pop
idivl
repz
sub
fidivrs
dec
push
jno
sub
add
testb
jae
daa
outsl
push
push
lods
mov
inc
outsl
test
dec
into
add
je
or
pop
stc
call
or
sub
jb
fmulp
xor
mov
sbb
jmp
mov
scas
movsl
dec
adc
mov
out
inc
inc
pop
ljmp
push
test
xor
pop
sti
popa
inc
mov
fsubr
fbstp
fs
mov
fisubrl
and
cmp
xchg
jge
repz
lds
sbb
cwtl
mov
adc
sbb
repz
sbb
jmp
int
jns
popa
add
adc
mov
jmp
mov
cwtl
pop
xor
scas
pop
cmp
dec
mov
push
xchg
adc
xchg
dec
add
jmp
int
pop
dec
jnp
inc
shr
dec
or
lret
movsl
sti
mov
in
rorb
jne
aam
pop
push
add
jb
loopne
dec
mov
cs
pop
add
sti
or
inc
xchg
or
pop
mov
sbb
das
pop
insl
movsb
lret
or
lds
xor
cmp
notb
inc
xor
pop
xchg
das
mov
jbe
push
lret
sbb
push
imul
stos
adc
shl
mov
outsb
mov
dec
push
loop
mov
dec
inc
xchg
push
mov
ja
xor
repnz
call
int3
and
hlt
sarl
dec
fchs
shll
lret
jbe
lds
neg
inc
cmp
xchg
mov
dec
scas
lret
or
pop
out
pop
data16
cmpsl
repnz
dec
adc
lret
mov
fidivl
jbe
cs
push
mov
add
push
mov
mov
out
ljmp
fwait
pop
sahf
lret
mov
aam
cwtl
push
bound
jle
jno
sti
jmp
push
pop
popa
sub
xor
or
ljmp
test
scas
movsl
add
iret
xchg
lret
ret
out
cmp
rcl
lret
mov
enter
cli
je
push
mov
loopne
cmpsl
shll
add
mov
shll
mov
sahf
faddl
clc
lea
mov
xor
adc
push
jns
xorl
cmpsl
fdivrs
cltd
xchg
aad
fmull
push
cmp
dec
sub
mov
dec
mov
sbb
stos
sub
mov
and
mov
mov
pop
lret
pop
iret
push
push
cmp
sbb
mov
rcrl
push
cmc
push
dec
lret
stos
loop
lahf
inc
shlb
fwait
imul
into
xorb
jae
jg
in
lods
aad
popa
mov
in
push
fcmovb
pushf
rcrl
ret
jg
lret
clc
sub
fisttpl
xor
sbb
add
lret
mov
xchg
lret
imull
mov
jmp
imul
mov
insl
adc
ja
shr
dec
xor
cmp
lret
sbb
push
lret
xchg
adc
sub
mov
xor
clc
ror
out
mov
xchg
xlat
out
xchg
fldln2
sub
push
sbb
mov
cmpsl
push
das
jmp
mov
sahf
xchg
fmull
mov
lret
jg
pavgb
push
fildl
out
and
ljmp
in
mov
lret
jp
push
pop
pop
mov
jns
cmpsl
loope
insl
jno
lret
add
addr16
in
mov
mov
mov
dec
lret
lods
movsb
das
outsl
lahf
xchg
icebp
adc
or
jle
or
stos
stos
xor
xor
fsubrs
lret
push
adc
xchg
in
les
mov
lret
inc
adc
lea
insl
ljmp
pop
std
ret
lret
dec
add
repz
loopne
adc
xlat
push
loopne
inc
pop
sbb
jg
add
xor
jge
pop
lret
ljmp
int3
mov
add
cmpl
int3
movsl
xchg
cmp
lea
cmp
mov
fs
fwait
repz
sub
mov
out
test
repz
inc
mov
lret
dec
idiv
clc
pushf
lret
pop
inc
lret
mov
cmp
xchg
cwtl
clc
test
cmp
lret
ds
mov
fistl
adc
cli
pop
lret
int3
mov
jge
ja
mov
stc
lea
fistpl
fildll
mov
cmc
lret
mov
push
sub
lods
inc
jge
dec
cmp
cmp
cli
pop
scas
xchg
sbb
inc
shl
dec
out
pusha
lret
pop
push
xchg
jle
add
outsb
mov
inc
shlb
jno
xchg
sub
cmp
and
xor
inc
cmp
scas
add
add
jg
cmpsb
stc
adc
add
xor
lret
aad
sarb
adc
repz
shrb
inc
cli
push
in
test
aam
dec
jmp
es
lret
pop
cmp
push
jle
adc
imul
and
or
lret
mov
cmp
and
scas
add
cmp
inc
xlat
in
inc
in
mov
orl
lret
mov
shll
scas
lret
lods
mov
daa
add
pop
mov
lret
les
pop
cld
adc
push
mov
dec
mov
xor
pop
sub
push
jo
mov
push
cmp
lret
test
aam
data16
sub
lret
int3
sar
xchg
outsl
add
pop
movsb
cmp
int3
aaa
ljmp
xchg
mov
movsl
loop
pop
leave
push
loope
outsb
mov
jbe
or
aas
lret
pusha
push
and
pop
inc
lea
iret
call
xor
pop
neg
loope
js
cmp
push
int3
add
inc
lds
add
cmpsb
add
xor
xor
leave
andb
ror
mov
xchg
pop
out
jb
sub
sti
aam
inc
add
insb
ret
fwait
lret
or
mov
xchg
aaa
sbb
mov
shr
xchg
push
cmp
or
mov
inc
ja
ss
pop
fiaddl
rcll
fiaddl
notb
mov
pop
lret
jecxz
das
xchg
lret
cld
enter
dec
cli
nop
test
out
push
mov
ret
mov
in
cwtl
inc
xchg
popa
leave
lret
repnz
mov
mov
fldl2t
mov
lret
sbb
imul
insl
lret
arpl
lods
mulb
sti
pop
mov
int
xor
repz
cmp
dec
sub
adc
aam
jo
add
les
sub
cwtd
or
dec
xchg
inc
shlb
pop
adc
mov
mov
lret
jg
or
loop
add
test
int
lret
sbb
shll
mov
test
lret
enter
fdivrl
cli
pop
add
cmp
push
push
int3
lret
dec
lcall
packssdw
push
rorb
xchg
xor
lret
jp
dec
and
jge
mov
mov
ret
xlat
lret
loope
je
fisubrs
mov
call
lret
cmp
pop
sbb
fisubrs
sarb
add
adc
sarl
imul
sbb
push
lods
sub
test
leave
or
adc
repnz
test
test
lahf
cmpsl
sahf
sub
adc
call
into
stc
mov
and
cli
xor
fmuls
movsb
lret
add
xor
cli
pop
push
fsubrs
xchg
sbb
and
shlb
mov
adc
push
adc
lret
push
add
and
enter
mov
repnz
cmc
cmp
mov
js
lret
xor
jmp
insl
xchg
lret
ret
out
inc
fidivl
cmp
decl
or
int
xor
xchg
inc
pop
pop
sbb
adc
enter
adc
lret
fstpt
lret
cmp
mov
aas
call
jns
inc
push
lret
sbb
popf
sbb
sub
mov
mov
push
orl
add
popf
cld
lret
iret
fcoms
jg
nop
sub
leave
push
push
jge
cmp
mov
rclb
cmpsl
jmp
shrl
xchg
sahf
lret
fcoms
lea
rcrb
sarb
and
sub
mov
mov
sahf
mov
int
xchg
jmp
lds
pop
inc
push
mov
jo
adc
fimull
repz
leave
gs
roll
jae
out
inc
fmul
mov
cmp
lret
push
pop
adc
push
lret
movsb
enter
add
rcrb
xchg
cmpb
add
mov
in
in
lods
push
ss
xor
mov
aad
data16
dec
lock
fsubrs
mov
or
lcall
icebp
and
cmpsl
adc
pop
test
aas
or
lret
and
shl
xor
iret
xchg
ss
lods
rorb
mov
test
nop
jno
int3
insb
scas
mov
lret
push
xchg
repnz
mov
xchg
lahf
mov
dec
mov
xchg
cmpsl
clc
ret
lret
push
inc
xchg
jmp
pop
cmp
push
rol
setge
xchg
dec
shll
cmp
mov
mov
sti
push
pop
add
lret
andl
ds
hlt
mov
sbb
mov
dec
out
mov
cmp
push
aas
imul
inc
mov
andb
lret
std
ret
loopne
xchg
jno
or
or
popa
mov
lds
push
mov
sar
push
adc
inc
lret
xchg
out
push
insl
loopne
int
or
fisttps
pop
gs
sti
sub
adc
mov
daa
ljmp
inc
sbb
sub
push
stos
loopne
mov
cmpl
dec
jl
cmpl
jp
aaa
mov
xor
cmovle
xchg
lods
movsb
rolb
lds
pop
inc
nop
jno
jp
cmp
fwait
lcall
adc
scas
int
push
xchg
sub
mov
mov
imul
cmp
repnz
test
mov
jge
sub
out
xchg
ja
cwtl
arpl
pop
dec
jno
enter
stos
nop
and
lret
sub
clc
dec
xor
shlb
mov
dec
test
enter
mov
test
ret
stos
push
adc
inc
pop
icebp
xor
pop
aam
cmp
sbb
mov
push
jle
enter
test
jnp
and
xchg
pop
out
xor
mov
loopne
jns
xchg
shll
dec
xchg
pop
ficompl
or
adc
andb
stc
rclb
mov
icebp
dec
or
lahf
movsl
in
push
jl
lock
lret
and
jno
movb
inc
inc
jmp
test
les
xchg
enter
jo
inc
push
punpckhbw
imulb
jmp
pop
loop
push
je
cld
mov
test
ja
adc
ljmp
mov
pop
imul
xchg
jns
mov
and
pop
out
xor
stos
int3
add
les
xchg
pop
iret
imul
push
sbb
push
jns
int3
cli
fisubl
push
fs
adc
rolb
or
mov
or
sbbb
rcll
sbb
enter
notb
jns
inc
sarl
xor
cmpsl
inc
push
cmp
data16
ss
cmpl
lea
pop
pushf
out
mov
lods
in
int
lcall
jne
push
cmc
xorl
adc
sbb
jb
test
lods
shlb
xchg
fldenv
sbb
sarl
add
mov
jp
and
popa
fbstp
pop
push
and
stos
punpckldq
cmpsl
call
movsb
sbb
xchg
cmpsl
fcoms
pop
addr16
mov
jmp
mov
jmp
cltd
and
sub
cltd
jae
push
cmp
jle
stc
push
push
dec
je
jbe
add
lahf
sti
repnz
sbbl
mov
jno
mov
and
aas
ret
jbe
mov
mov
lret
popf
xchg
add
shlb
and
xor
lds
shrb
fcmovnbe
lret
pop
enter
xchg
outsl
cli
bound
xchg
aam
push
out
data16
mov
adc
rcrl
push
inc
sti
jns
and
jns
shlb
test
fs
add
fildll
cmp
and
mov
cltd
sbb
test
cmp
stc
pop
int3
int
cmpb
adc
cmp
push
jmp
and
mov
loop
pop
shl
dec
shlb
out
repz
call
stc
imul
int3
aam
jb
pop
jnp
jnp
loop
jg
js
bound
bnd
jmp
mov
and
or
sub
inc
mov
mov
test
jno
mov
xor
add
aas
into
jae
sbb
jecxz
pop
cltd
xchg
pop
mov
gs
shll
lea
jmp
jp
out
out
cs
shrb
rsqrtps
fldenv
addb
rcr
cmc
out
addr16
xchg
sbbl
sub
fstps
mov
inc
pop
aas
decl
iret
push
bound
adc
mov
pop
les
jbe
push
push
insl
cwtl
test
shll
std
cmp
push
popa
mov
push
xchg
rcll
shlb
sbb
aaa
into
pop
push
inc
outsb
pop
push
fisubrs
xor
into
pop
shll
adc
les
jnp
jae
mov
decl
jo
xor
jmp
pop
jns
shrl
mov
das
je
iret
dec
inc
outsb
jl
orl
fwait
adc
xchg
pop
sbbl
mov
adc
mov
mov
fimull
jp
dec
push
in
jae
lea
xchg
sub
rcrb
ja
enter
cmc
fsub
jne
fdiv
push
ret
stos
add
movsb
js
ljmp
mov
or
dec
inc
test
mov
push
adc
insb
xor
fldl
push
mov
or
out
lcall
insl
sub
pavgb
add
dec
out
inc
out
and
mov
push
fwait
jb
cmpsl
mov
dec
daa
sub
ret
lret
outsb
jb
push
sar
mov
divb
jns
shr
xorl
repnz
cld
jge
jno
add
xor
ret
push
push
xor
scas
scas
sub
jmp
inc
mov
jle
orl
repnz
mov
test
mov
pusha
push
cltd
aaa
xchg
repz
outsb
je
sar
shrb
jne
js
mov
xchg
mov
leave
mov
cmp
gs
mov
lahf
lcall
pushf
push
xor
addr16
movsl
rcrb
mov
popl
shrb
roll
fnstsw
dec
not
mov
mov
inc
push
jno
or
xor
inc
pusha
mov
lods
pop
ret
loop
jecxz
js
mov
mov
test
sti
xchg
mov
das
cmpsl
pop
aaa
and
jae
jne
repz
push
mov
inc
cmp
add
push
insl
fxch
lods
xchg
out
mov
loop
std
icebp
push
xor
pop
negb
cmp
sbb
cmp
jp
scas
mov
push
lret
adc
pop
fst
push
iret
insb
cmpsl
add
cli
mov
dec
aas
inc
mov
jge
push
and
lds
pop
push
les
cmp
decl
pop
data16
cltd
mov
pop
int3
sarl
inc
adc
cmp
mov
sti
das
aad
sub
xor
mov
outsb
xchg
jle
lret
or
xor
lcall
icebp
mov
hlt
test
dec
nop
popf
jmp
stos
pop
test
xchg
out
adc
inc
je
and
popf
mov
mov
out
ss
mov
inc
pop
loop
das
aam
mov
test
sti
or
sbb
xchg
pusha
jo
pop
and
xchg
pop
cltd
dec
outsb
pop
cmp
mov
js
mov
push
pop
enter
dec
add
testl
mov
adc
jmp
xor
das
inc
and
pop
inc
test
cmpsb
jg
pop
mov
in
mov
mov
daa
mov
fcoms
push
imul
fimull
and
negl
cmpsl
imul
test
mov
xor
jo
xor
lock
out
in
lahf
aaa
sbb
push
cwtl
or
push
pop
pushf
lods
sub
xor
fsubr
lds
nop
insl
push
in
cwtl
cmpsl
jle
and
mov
xchg
add
mov
out
pop
movsb
out
xor
or
mov
clc
pop
call
fimull
nop
or
fnstcw
in
sahf
rcrl
sbb
mov
iret
out
lret
adc
adc
daa
ds
and
adc
add
outsb
lea
dec
mov
stos
push
int3
cmp
xor
mov
rorl
in
jb
pop
pop
or
cwtl
add
adc
rcrl
pop
lds
jbe
jle
ficomps
pushf
pop
shrb
insb
inc
push
loope
cmpsl
sti
push
je
shlb
xor
inc
int3
sbb
nop
daa
dec
adc
cs
dec
cwtl
or
sub
psubusw
sbb
ss
lea
enter
sub
popf
jle
call
xchg
pop
popf
or
pop
add
lret
push
mov
aam
jmp
inc
sti
and
jmp
dec
icebp
ficoms
mov
mov
pop
xlat
add
xchg
sarb
leave
sti
push
xchg
lea
add
addr16
dec
and
rcr
ljmp
addr16
mov
pusha
test
push
cvtps2pd
arpl
push
daa
mov
push
bound
or
inc
jge
jns
lcall
aaa
or
sti
fcoms
rorl
int3
out
hlt
test
int
shll
jle
dec
xchg
and
out
adc
lods
mov
out
cli
dec
loopne
roll
dec
scas
shrb
repz
cmpsl
add
les
pop
rorb
jbe
jnp
mov
xchg
mov
xor
pop
pop
mov
push
jp
and
cmpsl
jg
mov
adcl
mov
in
gs
iret
insb
stc
lods
mov
fidivrl
push
movsl
mov
mov
pusha
pop
jns
mov
or
lods
mov
pop
imul
sbb
pop
fninit
jl
in
cmp
aaa
mov
jmp
xlat
pop
out
fists
mov
jl
dec
lret
lds
ret
cmp
lock
xchg
mov
inc
mov
jns
rcll
push
sbb
sbb
sub
pusha
sub
insl
push
and
pop
mov
out
push
xchg
movzwl
daa
jns
fisubs
insl
lds
mov
cld
adc
lret
mov
sub
mov
stos
and
jns
adc
bound
ds
pop
pop
rcll
mov
jae
push
cltd
jg
cmpsl
xor
lock
ljmp
mov
shlb
out
push
scas
mov
out
shrb
out
int3
loope
outsl
jp
cltd
sahf
and
dec
aam
push
mov
push
loope
xorl
fisttpll
out
aaa
mov
das
mov
shlb
push
jmp
cwtl
fs
call
xor
xor
and
push
cmpsb
and
inc
xchg
in
pusha
and
xchg
sub
xchg
sub
pop
dec
sbb
xlat
dec
push
insl
mov
imul
leave
push
inc
mov
mov
push
movsl
jns
fiaddl
jno
dec
cmpsl
jmp
negl
inc
stos
push
xchg
cmp
mov
jmp
iret
sbb
pushf
and
pop
or
out
enter
or
int
dec
and
pop
jg
out
stos
ficompl
inc
push
cwtl
push
adc
dec
popf
fdivrl
mov
movsl
lret
cmpsb
jcxz
mov
lret
jo
jae
jns
lret
das
jnp
sub
rcrl
nopl
jb
sbb
dec
add
fstpl
push
jecxz
out
mov
or
lret
sbb
lret
outsb
rep
scas
ret
insb
cmp
mov
stos
or
pop
push
push
mov
lret
int
clc
xchg
adc
in
mov
lret
inc
jmp
mov
push
mov
fsubs
fs
fdivr
lret
push
repz
mov
testl
sbb
inc
mov
xlat
sbb
jo
lret
fimull
lret
jmp
int3
lret
or
adc
cli
pop
cmp
jle
jae
lret
mov
dec
mov
xor
mov
ljmp
sti
xchg
fwait
pop
mov
aaa
cli
ret
icebp
sub
addr16
push
js
lret
mov
push
loopne
cmp
lret
jecxz
dec
inc
sbb
into
jge
jmp
jl
mov
push
xchg
andl
cmp
out
movswl
mov
jl
pop
dec
cmp
sbb
outsb
adc
loope
nop
pop
test
pop
or
mov
fucomip
push
push
push
shrl
rcrl
lret
je
or
cli
jo
xchg
orl
lret
fdivl
mov
mov
pop
lret
cmp
jl
adc
enter
out
out
ljmp
pop
sub
mov
fwait
jae
add
pop
call
add
xchg
add
fcmovbe
mov
lods
or
jae
clc
pop
lret
pushf
mov
lret
add
and
cmp
sub
mov
dec
mov
xchg
pop
mov
xor
movsb
shrb
or
cld
icebp
nop
lret
rcrl
cli
xchg
pop
pop
add
rcpps
outsl
daa
sbb
lret
stc
in
shlb
lret
sbb
lret
adc
mov
int3
out
mov
ret
clc
sbbl
repz
lret
inc
scas
ss
dec
popa
cmp
mov
in
inc
aas
adcl
dec
int3
dec
push
add
jo
fwait
cmp
aad
lret
clc
call
adc
out
push
push
mov
inc
jae
je
dec
ss
dec
cmc
out
fstps
insl
pop
test
xchg
int3
es
cmp
mov
cmp
sub
lcall
mov
gs
negl
sbb
scas
cmp
and
sbb
lahf
jg
rcll
add
and
aam
popa
int
or
fcmove
out
sbb
mov
and
test
xlat
rcr
int
jb
adc
lods
fstpl
je
xor
sbbb
stos
stos
dec
adc
lods
dec
lret
shll
fidivrl
loope
dec
cmpsb
cld
in
sbb
stos
cmp
or
jg
and
pop
shlb
test
push
sub
mov
test
dec
ss
in
lods
out
pop
mov
pop
pop
sti
lock
loop
xorl
adc
push
lea
in
push
jns
enter
xlat
dec
xchg
mov
push
stos
pop
pop
sub
pop
lret
fildl
subl
cmp
std
aaa
or
pop
pop
jmp
leave
push
test
lret
and
xchg
jmp
enter
sub
mov
jns
sti
adc
mov
stos
add
lret
pusha
ja
aas
ror
jp
or
push
fs
or
flds
pop
out
popa
or
push
add
dec
enter
es
push
jb
push
mov
cmpsb
xor
or
fwait
lret
add
xor
aam
out
cmp
cmp
jge
inc
int
icebp
mov
xor
lds
jo
arpl
add
lret
dec
cmpsb
xor
xchg
mov
sub
inc
xlat
mov
xor
insb
dec
inc
test
push
inc
or
jno
fscale
inc
stos
pusha
mov
jl
sub
rolb
int
fs
incl
fwait
inc
pop
stos
lret
arpl
or
push
xchg
lret
sub
lret
mov
arpl
stos
push
cmp
cmpl
jae
lea
push
rclb
mov
inc
shll
jmp
lret
xor
ficomps
xchg
lret
pop
lock
ljmp
and
cli
lret
mov
sahf
cltd
pop
lret
xchg
lock
mov
shlb
push
adc
mov
mov
sub
fstl
xchg
fwait
roll
pop
adc
js
pop
cld
jl
inc
sar
and
insl
cli
lods
aam
lret
sub
or
mov
insl
add
mov
push
sbb
movsl
mov
inc
lret
mov
and
jbe
clc
lret
lea
aad
lods
sub
lods
lret
fsts
shrb
lret
enter
xor
aas
cmp
mov
fstl
push
leave
xchg
dec
into
xchg
jp
fdivrp
jecxz
pushl
test
jmp
inc
jb
cli
aaa
mov
add
xchg
cmp
aam
jnp
jb
inc
add
push
dec
aam
xor
push
mov
shl
gs
sub
lret
ss
xchg
mov
or
div
fwait
imul
push
insl
mov
hlt
test
fisubrl
std
xchg
repnz
scas
sti
cli
jae
xlat
rcrb
xor
lods
push
cmp
pop
es
push
aaa
repnz
jg
add
stos
ret
mov
jno
pop
fsubl
stos
add
test
lret
mov
sbb
mov
imul
stos
rcrl
push
or
jbe
jae
push
std
sub
loopne
adc
lret
jmp
lret
outsl
fdiv
js
es
cwtl
mov
push
or
scas
lahf
decb
out
push
jmp
xchg
ret
or
cwtl
xchg
cmc
jecxz
lret
test
mov
push
or
pusha
daa
jnp
dec
inc
sub
stc
dec
imul
cmp
inc
int
inc
lret
push
daa
xor
fsubr
push
movsl
dec
xor
cmpsw
mov
inc
and
jns
cmp
jno
inc
lret
xlat
lahf
cmp
xor
stos
in
xchg
adc
test
mov
jne
xchg
fcomps
repz
in
pop
in
jge
lods
or
outsb
jb
ljmp
rclb
sub
or
dec
dec
inc
sub
scas
fxch
out
jae
shr
add
int
outsb
jmp
cmp
int
fisubl
push
ss
pop
vmovapd
std
or
lret
jae
es
jne
lret
hlt
sahf
ja
out
stos
out
mov
mov
in
and
addr16
sub
lret
daa
ljmp
sbb
mov
mov
push
aam
or
cltd
iret
jne
inc
pop
aas
mov
mov
notl
repz
xchg
pop
fmulp
mov
push
sahf
sbb
cltd
cs
subb
or
fldcw
lds
das
mov
xlat
xchg
xchg
and
daa
out
cmp
divl
lret
sbb
adc
fld
rolb
pop
adcb
leave
push
aam
push
push
add
mov
popa
cmp
cmp
lock
push
push
mov
pop
xchg
pop
outsb
aad
xor
rorl
fstpl
mov
jge
xchg
and
int
insb
icebp
xchg
push
out
xor
jno
bound
jge
and
pop
adc
scas
or
mov
aas
rcll
push
dec
push
push
filds
inc
jbe
inc
pop
lods
icebp
stos
mov
in
dec
test
mov
insb
sbb
fisubrl
jp
sbb
sub
clc
out
xchg
dec
xor
fldt
jmp
or
ss
mov
cmpsb
test
outsb
test
pusha
subl
pop
and
xchg
push
xchg
mov
sub
movsb
lret
jne
xlat
in
adc
xor
mov
scas
xchg
jns
push
sub
fcoms
out
subl
dec
outsb
rolb
jmp
lods
ret
call
in
jge
xorb
pusha
xchg
dec
push
lret
imul
scas
addr16
mov
out
iret
ret
push
pop
jbe
mov
rclb
mov
loop
pushf
bound
push
fnstsw
ja
outsb
push
fisubrs
notb
mov
outsl
clc
sbb
xchg
arpl
mov
inc
xchg
scas
rcll
outsb
repz
insb
int3
inc
jno
cmpsl
cmpl
mov
popf
lea
push
bound
mov
or
out
pop
cmc
iret
rcl
int
into
cmp
push
das
sub
aas
push
mov
push
push
push
rcll
dec
lahf
fisubrs
xor
mov
sub
push
xchg
idivl
outsb
mov
cld
sub
fstl
xchg
jmp
sbb
aad
ret
arpl
imul
std
bswap
out
mov
mov
xchg
dec
ljmp
scas
and
push
sub
jg
adc
xlat
sbb
sbb
push
addr16
ficoml
adc
pop
mov
pop
or
inc
cltd
fs
push
sbb
xchg
sbb
shlb
or
loop
das
out
jl
inc
out
ljmp
pop
pop
add
dec
pop
inc
adc
adc
pop
ja
xchg
mov
xor
bnd
push
cmp
int
pop
lea
or
mov
daa
lret
rclb
and
cmp
xchg
jp
jae
xor
movsl
test
pop
or
rclb
push
insb
pop
adc
imul
jp
test
insb
aad
or
js
int3
add
mov
leave
aam
push
mov
add
ja
sti
mov
xchg
push
mov
pop
fisttps
mov
mov
and
fimull
inc
loop
rol
sub
mov
mov
and
imul
and
and
push
aas
push
pop
js
xor
repz
fistps
rcl
inc
mov
push
sbb
jecxz
in
fwait
test
jge
jnp
push
xchg
cmp
cmp
sbb
mov
je
fdivr
mov
pop
pop
sbb
std
dec
aam
aam
xchg
fcmovnb
loope
sub
aaa
mov
data16
sbb
aaa
js
pop
out
lret
push
or
fwait
adc
add
fidivl
or
or
cli
or
rcll
jle
inc
pop
and
mov
xor
aam
iret
cmp
ret
jmp
pop
push
lahf
add
les
scas
mov
pop
mov
leave
in
loopne
sbb
pop
fldcw
jbe
jae
in
mov
inc
inc
ljmp
and
dec
sbb
adc
pop
inc
mov
lods
push
sarl
pop
push
and
scas
dec
xor
fidivs
jmp
push
pop
stos
out
pop
push
fidivs
xchg
xor
scas
jp
fistl
jecxz
shrd
int
dec
shll
cmpsb
outsl
loopne
mov
and
cmpb
add
das
jae
rorl
add
ja
xchg
or
mov
or
push
btsl
xchg
data16
testl
mov
add
add
cmp
mov
mov
cmp
xchg
mov
mov
mov
sub
jge
push
icebp
dec
std
push
jp
jo
repz
aas
test
loope
push
pop
push
addr16
ret
bound
mov
mov
xor
and
mov
imul
mov
mov
out
cmp
lock
orb
addr16
rep
shlb
xchg
rcr
push
xchg
imul
mov
dec
inc
fldt
sarb
fildll
call
pop
movsb
xchg
ret
and
enter
lret
cmpl
xor
pop
mov
dec
push
rorl
sub
add
test
fsubs
pushf
sbb
idivl
enter
jne
loopne
filds
aaa
rorb
cmc
jne
out
xor
pop
in
mov
sub
sti
fdivr
subl
ljmp
mov
stc
xchg
sbb
xor
pusha
shll
das
pushf
mov
out
mov
repz
pop
or
mov
mov
test
and
sub
subl
xor
orl
push
jp
jbe
movsb
and
fmulp
das
push
mov
sbb
sbb
hlt
or
fbstp
add
sub
push
pop
cmpsb
pop
aad
es
cmp
adc
mov
into
mov
or
or
imul
sbb
scas
out
xchg
aaa
ds
or
adc
stos
jb
sbb
lret
push
fisubrs
push
ret
sbb
push
mov
in
xchg
cld
mov
pusha
loope
sti
iret
or
lret
or
jl
mov
jecxz
repnz
das
mov
xor
jmp
xchg
movsl
loopne
divl
aam
cltd
dec
imul
cmp
jle
xchg
pop
jmp
sbb
mov
stos
subb
pop
add
movsl
jmp
out
repz
shrl
das
notl
in
out
scas
lea
ljmp
mov
mov
and
lds
int
loopne
mov
dec
push
adc
mov
insl
or
ds
pop
pop
cli
or
ret
push
lds
lock
rcr
test
dec
mov
loopne
test
cmp
cmp
ror
mov
jge
mov
push
sub
sub
movsb
insl
fs
xchg
lret
out
imul
and
push
dec
cltd
ja
out
push
xchg
je
pop
adc
test
cmp
inc
enter
mov
xchg
cmpsb
fisubrl
sahf
xchg
adcl
dec
cld
aad
rorl
icebp
lock
icebp
call
inc
mov
mov
xchg
mov
lret
lods
push
ja
inc
jne
aaa
shll
cltd
aas
outsb
add
pushf
jmp
pop
movsb
adcb
pop
mov
clc
into
sub
push
addb
push
mov
pop
dec
sub
xchg
mov
add
and
in
mov
leave
dec
sbb
jge
pop
mov
lods
push
adc
mov
imul
adc
cwtl
xor
hlt
daa
test
jno
mov
insb
jae
dec
xchg
and
insb
lea
dec
dec
mov
fcom
shl
hlt
add
in
or
cmp
pusha
or
ljmp
pop
mov
push
add
jne
cmp
int3
fmull
js
pop
into
scas
sarl
jnp
mov
icebp
aaa
push
jo
aad
jl
cmpsl
nop
ja
imul
add
jb
mov
es
xlat
addb
adc
into
pop
stc
cmpsl
fildll
daa
push
push
ja
loop
dec
xchg
nopl
push
inc
sbb
cwtl
push
ja
xchg
pop
dec
insl
xor
in
iret
pop
rcl
loopne
lock
mov
sbb
and
insb
sub
sbb
dec
sbb
push
pusha
xchg
pop
loope
mov
rcrl
imul
popa
dec
aas
jae
int3
inc
lret
scas
mov
outsl
mov
pop
or
das
or
pushf
xor
mov
rcll
fwait
roll
cmpsl
pop
or
movsbl
jnp
stc
fistpll
imul
xor
enter
in
mov
loopne
sub
decl
popf
ret
adc
xor
mov
rcl
mov
ficoml
jnp
cmpsl
sbb
js
sbb
lret
shlb
lret
cltd
aam
add
jg
loope
into
mov
lret
lahf
imul
sbb
lret
nop
cmp
dec
mov
arpl
shlb
dec
jns
add
enter
pusha
mov
xor
or
sbbb
add
push
pop
adc
popf
dec
test
xor
outsl
lret
fwait
cs
adc
or
mov
lods
jae
jne
into
clc
cmpsb
ficoms
mov
sub
cmp
outsl
cwtl
lret
sub
arpl
lret
lret
inc
sbb
adc
gs
pop
inc
cli
lret
sbb
ror
flds
incl
cmp
jge
pop
lret
sahf
loop
int
lret
mov
push
cmp
mov
into
rorb
push
xor
mov
data16
mov
cs
xchg
jmp
or
sub
das
or
and
xor
lret
add
jp
adc
jmp
and
cmp
sbb
loop
fldcw
add
pop
mov
mov
xchg
rcrl
adc
mov
aam
add
or
ja
dec
push
sub
cltd
lret
cmp
outsb
or
lret
stos
bound
nop
repz
je
push
mov
sub
stos
stos
test
movsl
jecxz
fnstcw
xor
aas
pop
shrl
lds
sbb
push
les
inc
push
mov
ret
lods
in
adc
mov
cmpsb
icebp
fxch
rcrl
jge
cwtl
rorb
pop
push
aam
xchg
cli
faddp
adc
int
push
mov
js
shrb
and
adc
pop
lret
pop
xchg
sbb
fwait
pop
lods
mov
push
nop
imul
out
test
jg
loop
jle
jp
xchg
sub
push
xchg
inc
mov
pushf
cmc
xchg
jmp
push
jns
cmp
repnz
jne
pushf
and
jecxz
rclb
pop
stos
mov
int3
add
std
insl
push
fwait
cmc
xchg
pusha
lods
dec
push
in
xchg
movsb
clc
jbe
jmp
ret
outsl
xchg
jmp
inc
je
rcll
jge
clc
pop
movsl
in
ret
mov
adc
xchg
in
lcall
in
test
adc
xor
test
push
add
pop
sbb
pop
xor
push
mov
mov
shrl
fistpl
push
cmp
xchg
push
fs
leave
in
mov
fildll
out
adc
push
mov
add
mov
and
adc
notb
xor
mov
or
repnz
popa
adc
jle
dec
setg
lret
lods
loopne
push
push
lods
loop
xor
cmp
repnz
pop
mov
stc
icebp
inc
sub
sarl
mov
pop
adc
into
push
push
pop
mov
mov
push
adc
push
adc
adc
js
das
push
dec
jecxz
int3
cld
inc
ljmp
fs
sub
shrb
push
ret
or
iret
iret
jae
outsl
or
or
sarb
add
and
js
clc
mov
aad
adc
inc
mov
lods
enter
test
stos
push
sbb
cmp
test
test
pop
arpl
scas
inc
das
lret
dec
xor
cmp
sub
ljmp
xchg
out
in
ror
sbb
cmp
jmp
sti
ja
rcll
lret
jg
sbb
iret
adc
sbb
into
fsubrp
push
imulb
popa
scas
mov
or
cmpsl
lret
sub
iret
ret
out
push
lret
rcll
das
xchg
lret
mov
cmc
lret
test
ljmp
add
xor
pop
fbstp
ficoml
into
cmp
and
pop
dec
fstpl
in
sbb
pop
pushf
int
fcom
inc
mov
je
xchg
lds
cli
push
sub
gs
mov
cmpsl
ficomps
test
imul
sbb
push
mov
cmpsl
push
push
dec
mov
enter
sti
stos
or
arpl
cltd
cmp
push
xor
adc
mov
lret
bound
inc
or
mov
dec
int
into
fnstenv
cmp
mov
pmaxsw
push
add
in
add
gs
pop
push
ret
mov
inc
cli
loopne
mov
test
jo
ljmp
jle
pop
popa
mov
inc
jo
bswap
mov
adc
imul
mov
arpl
and
fwait
lods
es
ret
or
out
sub
xchg
lret
xchg
out
sub
fcmovbe
xchg
fnsave
test
rorl
jo
fcomps
mov
xchg
and
cltd
cli
ljmp
jo
inc
fwait
out
dec
fcmovbe
mov
in
inc
mov
cmp
into
arpl
out
jle
pop
lcall
xchg
dec
inc
sbb
mov
into
dec
je
out
sub
outsl
cmc
mov
aam
addr16
or
xor
fsubs
cltd
jns
lret
test
je
mov
inc
mov
es
out
mov
in
lret
imul
inc
or
jecxz
xchg
jge
les
mov
sbb
jae
lret
lahf
aaa
in
pusha
pushf
sub
bound
xor
stos
aas
xchg
sti
xor
stc
imulb
scas
lret
bound
lret
inc
mov
lret
fildl
addr16
mov
lret
scas
bound
ret
xchg
inc
mov
cmp
rcr
jno
xor
push
fcmovb
mov
movsl
cwtl
test
ja
orb
leave
fnstsw
sarb
mov
repnz
aam
pop
push
stos
les
test
addl
lret
arpl
comiss
shl
lods
inc
xor
faddp
popa
jno
inc
nop
mov
jmp
push
xor
popl
sub
fldcw
dec
xchg
cli
mov
jnp
sti
mov
lret
mov
xor
sbb
lret
xor
push
mov
or
xor
cmp
scas
stos
popf
dec
cmpb
sub
and
xchg
into
call
push
mov
fdivs
xchg
or
xor
lret
icebp
jns
inc
push
add
lret
cmpb
dec
fisttpll
popf
das
pop
push
push
pusha
movsb
jnp
aaa
aam
sbb
scas
jg
lret
xor
imul
ds
mov
lret
clc
fimuls
mov
jno
aam
mov
fiaddl
movb
je
xchg
inc
cmp
lods
imul
add
repz
fdivs
or
ret
fbstp
add
adc
iret
out
cmp
icebp
jg
outsb
sbb
lods
or
lret
data16
fwait
pop
and
insb
lret
cs
nop
loope
xor
shr
push
movsl
cli
lret
mov
add
pop
pop
or
in
mov
insb
addr16
into
out
dec
nop
mov
push
mov
ss
xchg
lret
sub
xor
arpl
fsts
popa
leave
js
lret
cmp
add
out
lret
xchg
aad
pop
push
cmp
repz
jge
cli
or
push
mov
mov
flds
adc
dec
loop
in
lret
test
mov
scas
lret
repnz
outsb
cmp
mov
rcrl
cmp
jecxz
adc
cmp
add
pop
or
sti
scas
pop
pop
xlat
cmp
in
push
jle
js
push
rclb
mov
sbb
fnsave
mov
cmp
jbe
xchg
push
mov
fs
jecxz
lret
shlb
insl
mov
popf
xlat
loop
mov
cmp
test
add
into
js
pop
aas
pop
cli
mov
out
push
adc
fdivr
outsl
mov
adc
push
imul
lret
mov
pop
popa
ljmp
and
leave
int3
aad
inc
adc
imul
mov
push
gs
fldt
cmp
jne
das
mov
pusha
lret
add
sbb
push
out
cmpb
loope
fcmovb
cwtl
add
push
shll
jns
sbb
lret
aaa
loopne
stc
fidivrl
std
jno
stos
repnz
ret
into
imul
pop
pop
lock
fstpl
movsl
sub
testl
dec
mov
jbe
in
inc
rcrl
dec
cmpb
stos
inc
call
mov
pop
jne
sbb
add
lret
cmp
pop
rcr
shl
pop
lahf
jo
mov
mov
lret
outsb
movl
add
adc
imul
lret
jp
inc
ret
aad
lret
xor
fdivp
popa
mov
mov
add
movsb
dec
mov
dec
mov
pop
cmp
mov
pop
lret
jne
lret
push
idiv
mov
addr16
lret
ret
pop
popa
popa
lret
jne
mov
clc
fiaddl
shll
xor
cltd
cmpsb
pop
lret
push
push
cld
mov
stos
cmp
push
inc
jnp
or
dec
ds
jmp
cmp
imul
lret
orb
inc
fxch
call
jns
loop
or
sbb
mov
sbb
les
lock
xchg
mov
hlt
ror
pop
aaa
addr16
scas
jmp
not
xor
int3
shrb
and
cmc
mov
pop
loope
ss
sahf
push
adc
fwait
dec
jp
ret
popa
push
in
dec
sbb
orb
lret
xor
adc
loope
int
lret
dec
mov
dec
sub
movsl
xor
and
pushf
mov
lods
cmpsl
push
mov
add
lret
adc
push
and
in
sub
and
mov
xor
xor
inc
clc
fwait
ret
adc
into
mov
pop
lret
fdivr
push
ret
sbbl
jp
enter
push
std
xor
sub
and
movsb
hlt
lods
in
lret
sub
jle
lret
sub
lret
movaps
mov
pop
adc
shrl
add
add
sbbl
adc
and
xchg
xchg
cmp
mov
and
push
aaa
rcl
jns
pop
lret
imul
lret
mov
cmp
cmp
iret
xor
iret
popa
fwait
xchg
mov
dec
stos
adc
pop
fists
sti
inc
xchg
sbb
cmpsl
lret
fadds
pop
dec
clc
aaa
sarb
sub
shl
fsubp
mov
fisubl
je
push
mov
lret
insl
sub
cmp
mov
aad
fwait
popf
inc
lret
mov
add
aas
lea
xor
cld
xor
push
jnp
push
pop
push
jb
and
and
cli
xor
pop
fs
sbb
cmp
sub
xchg
insb
daa
mull
lret
pushf
and
cli
arpl
ret
add
int3
cmp
fisttpll
or
rcll
rcr
inc
shll
fisubrs
and
sbb
in
add
testl
mov
daa
xchg
aas
lret
or
push
dec
sbb
lret
pop
out
inc
push
dec
ror
popf
int
add
test
rclb
cwtl
loopne
lea
inc
mov
inc
out
mov
mov
stos
in
lea
sbb
lods
shll
mov
lret
popf
pushf
call
fisubl
in
push
xchg
lret
ja
scas
lret
jae
lds
adc
sub
mov
cmp
lods
int
lea
push
push
movq
cli
nop
fsubs
lock
lods
leave
sub
shlb
stos
insl
lret
sub
cmp
dec
scas
lret
notb
lret
arpl
xchg
push
pusha
push
shl
outsb
lret
jo
cmp
adc
push
aas
push
dec
popf
int3
jl
dec
xchg
in
movsb
lods
pop
fwait
cwtl
lret
ljmp
mov
sub
xchg
lret
scas
mov
mov
out
imul
mov
sub
pop
adc
jno
lret
std
fsubrs
addb
lds
cmp
lods
loope
hlt
out
das
arpl
push
lret
jmp
sti
or
int3
sti
inc
xchg
cmpl
mov
mov
xchg
adc
pop
xchg
stc
lret
mov
aam
cmp
xlat
cmpsl
div
mov
cmp
mov
shlb
xlat
dec
shrb
ror
add
dec
pop
fisttps
xchg
mov
rorb
jl
das
inc
jge
pop
cmpsl
popa
loopne
pushf
fs
sbb
out
and
rolb
pop
and
lcall
adc
leave
shl
push
fimull
pop
stc
jo
pop
ret
pop
xor
dec
add
lahf
fstpt
pop
mull
cmp
add
push
mov
or
iret
aam
fstl
jecxz
mov
xchg
push
fisubrl
xchg
mov
mov
dec
stos
mov
push
rolb
mov
xchg
xchg
mov
push
xchg
sbb
fisubrl
mov
adc
lret
int3
icebp
cwtl
adc
jp
arpl
lret
mov
inc
jns
out
sbb
lret
mov
test
sbb
test
mov
and
mov
lret
sbb
add
mov
mov
xchg
rcrb
cs
stos
mov
fcoms
in
jbe
and
sub
sbb
out
cltd
leave
stc
mov
out
int3
cmp
lret
sub
pop
dec
cwtl
or
loop
fisttpl
ljmp
shrb
and
aad
push
push
hlt
enter
xchg
or
mov
lret
sub
sub
mov
jae
cmp
xlat
insb
adc
cmp
xlat
fdivrs
fwait
and
xlat
push
mov
pop
ss
leave
outsb
into
cmp
repz
dec
lret
xor
sbb
inc
sti
mov
or
aas
sbb
loop
out
into
scas
rcl
decl
and
jp
lret
mov
testb
arpl
and
sbbl
dec
dec
sbb
ficoms
pop
out
jge
mov
push
inc
dec
and
dec
add
xor
insl
cmp
pop
mov
fs
in
mov
push
loope
andl
push
in
popa
xchg
cmp
push
iret
dec
fistps
daa
ficoml
jge
nop
push
scas
xchg
cwtl
popf
xchg
test
push
mov
mov
loopne
mov
shr
fistpll
loop
mov
adc
xor
pushf
fldz
ss
inc
movsb
jge
gs
and
test
xchg
adc
cwtl
lret
or
pop
add
cmpsb
lods
mov
dec
enter
lret
sub
and
and
lcall
shrl
aas
pop
int
ljmp
repz
fidivrl
push
pop
loop
pop
js
outsl
data16
pop
lret
call
bound
adc
lcall
mov
xchg
std
imul
push
shll
cmp
filds
mov
les
mov
mov
lods
push
decb
pop
xor
mov
fst
icebp
imul
popa
inc
pusha
stos
inc
insl
js
cwtl
add
ficomps
stos
push
outsl
lahf
xchg
mov
pop
stc
sti
repnz
jns
pop
inc
sbb
push
pop
ficompl
xor
cmp
sub
mov
jne
or
inc
dec
into
mov
div
outsb
rcl
jp
lret
mov
sub
mov
cli
int3
imul
xchg
cld
push
aaa
or
rcrb
pop
aas
mov
sarl
in
mov
mov
jno
mov
lods
lret
jge,pn
fst
push
scas
iret
mov
loopne
mov
pop
cmp
ret
cltd
xor
lret
clc
xchg
dec
es
cwtl
mov
xchg
mov
add
lret
cmp
int3
fstl
ss
mov
sub
push
jle
in
imul
cmp
cmpsl
sub
xchg
pop
shll
data16
into
scas
shll
test
ja
dec
shlb
lods
cmp
lret
xchg
lds
in
pop
lea
cmp
jg
je
sbb
loope
cmpsb
insb
or
fsubrl
pushl
lret
push
in
fmuls
jae
add
add
repnz
or
xchg
cld
shlb
lret
lret
loope
popf
sbb
dec
mov
fcmove
lods
dec
push
adc
fld
push
stos
push
dec
sub
xchg
pop
int
les
mov
fnstsw
aaa
jo
aam
lods
repz
fidivrl
fdivrs
test
stc
mov
adc
test
call
add
add
push
or
lret
cltd
lahf
mov
push
cmpsb
sbb
fidivrl
push
jl
lret
mov
out
mov
sbb
sbb
dec
sarb
bound
ja
sub
dec
mov
cli
push
xchg
jp
sub
repz
fcmovnu
imull
imul
lods
jb
loopne
and
aaa
inc
push
shll
ret
add
cwtl
pop
mov
lahf
push
mov
sysret
ret
in
adc
push
pusha
stos
jg
into
fmul
test
lret
cmp
leave
call
push
xchg
push
sti
pop
orb
sbb
test
ja
ss
pop
dec
adc
dec
inc
ror
lea
pusha
icebp
aaa
stc
sbb
lock
pop
imul
xor
xor
xor
push
iret
int
insl
lea
cmp
jmp
lahf
ljmp
pop
lret
lcall
int
dec
mov
mov
stos
negb
and
lret
mov
xor
ljmp
fdivs
outsl
mov
cmp
sbb
adc
mov
outsl
lret
addr16
and
aas
lods
lods
push
shl
or
add
inc
cmc
lret
adc
inc
aad
sbb
icebp
pop
xor
inc
xchg
flds
xchg
sbb
lods
rcl
daa
sbb
lret
divb
stc
jnp
ret
shlb
push
lret
rcrl
pop
or
sbb
fprem
push
xor
fmul
lds
std
mov
jp
jb
push
hlt
cmp
loopne
mov
cmp
negb
lret
xchg
lret
push
loopne
insl
sti
in
lret
cld
adc
imul
push
and
ljmp
loopne
cmp
push
es
jecxz
rolb
mov
rolb
lods
add
pop
cli
std
pop
cmp
mov
push
sub
in
mov
lret
sbb
lret
mov
jno
insl
xor
ret
test
sub
xchg
xor
add
jge
into
dec
jmp
fnstsw
lea
jle
pushf
push
xchg
dec
sub
fidivs
xor
jmp
push
adc
sbb
mov
aas
or
psubsb
dec
sub
xchg
lret
dec
pop
pusha
adc
jnp
addr16
xchg
pop
sbb
stos
ret
mov
mov
xlat
xor
and
ja
sub
dec
bound
aam
fsubrl
sti
jmp
lret
push
adcl
clc
mov
jge
lret
mov
jg
sub
lret
add
add
shlb
push
xlat
scas
in
mov
pop
lds
in
int3
clc
lea
adc
push
loop
mov
outsb
in
push
push
or
add
ljmp
lret
jo
out
xor
ljmp
mov
bswap
and
das
outsb
lea
nop
aam
movsb
insl
jno
dec
xchg
stos
lea
lret
mov
lret
and
arpl
pop
cmp
sbb
test
dec
push
lret
cmp
mov
inc
sub
cmp
mov
add
bound
pusha
ljmp
dec
cmp
jg
add
divb
lret
sbb
inc
scas
cmp
test
mov
pop
mov
mov
push
inc
sub
xor
int
pop
dec
lret
ja
cmp
jno
int
or
cmpsb
adc
push
sbb
test
insb
lods
lret
gs
nop
add
or
mov
loope
enter
sbb
cmpsl
fs
add
cwtl
lret
or
js
add
xor
into
cli
lods
jne
inc
cmpsl
cmp
ljmp
cwtl
lret
int3
pop
out
test
cmp
and
ja
jge
std
inc
mov
pop
add
mov
sub
test
mov
fwait
jae
je
push
jecxz
or
mov
das
sbb
shll
cmp
loope
lret
out
or
cmpl
dec
dec
lret
pop
sar
lret
xchg
inc
xor
fwait
mov
addr16
inc
bound
and
xchg
dec
sub
insl
mov
loope
jge
jmp
mov
jecxz
div
mov
push
lret
or
ds
lret
lcall
imul
lods
mov
lret
sub
or
outsl
adc
testb
add
mov
xchg
cld
sbb
xor
aam
aas
icebp
push
lret
stos
adc
adcb
out
insl
in
mov
shl
jnp
jb
ret
adc
xchg
cmc
mov
jg
out
popl
mov
rcrl
lret
inc
xor
inc
in
fwait
adc
xlat
in
or
or
cltd
lret
jmp
add
addr16
dec
cmp
mov
dec
jge
xchg
cmp
ja
jmp
sbb
rcrb
inc
scas
loop
cwtl
cltd
pop
xchg
xor
dec
loope
out
test
les
sub
inc
xchg
imul
out
sbb
int3
fcoml
adc
lret
cmp
mov
cli
jnp
cmp
push
xor
push
dec
push
fnstcw
imul
and
aad
shlb
jne
cmp
mov
mov
push
push
cmp
fnsave
adc
jmp
or
test
pop
mov
mov
sbb
lea
out
lret
sub
mov
inc
jns
test
lret
jg
lret
xor
or
push
mov
test
out
cmp
mov
dec
stos
ficompl
popa
aam
mov
and
into
mov
fisubrl
dec
loopne
sysret
int
outsl
stos
enter
into
fistl
imulb
repnz
jl
jne
jno
mov
ror
inc
inc
ljmp
xchg
lret
ret
add
jmp
dec
sbb
xchg
cmp
cmp
dec
pop
aam
mov
inc
mov
mov
adc
es
sbb
mov
push
mov
jmp
ljmp
aas
loopne
out
iret
ret
idivl
jno
xchg
jno
ljmp
shlb
adc
dec
lahf
aaa
add
push
pop
xchg
lret
inc
mov
mov
call
or
mov
shll
or
sbb
push
in
mov
mov
xor
js
in
xor
jg
and
pop
mov
fadds
mov
leave
push
repz
add
mov
aad
repnz
loope
xchg
push
push
mov
inc
jne
jnp
sbb
or
fisttpl
or
sarb
andb
lods
test
pop
pop
push
mov
xor
setae
rcl
mov
adc
inc
mov
test
push
sti
cmpsl
jns
les
cmpl
popa
or
rcll
cmpb
cmp
sarb
outsb
dec
or
ljmp
dec
mov
sub
pop
mov
cmp
mov
cwtl
push
sbbb
push
fmuls
push
jmp
xchg
mov
maxps
or
push
mov
inc
jge
test
call
shrl
mov
mov
sbb
lea
sbb
add
inc
jmp
cmpsl
das
andb
jb
sbb
mov
cli
mov
and
sub
and
ds
sbb
aas
lret
movsb
icebp
lea
mov
jge
mov
sub
xchg
movsl
inc
sub
shr
bnd
inc
jno
or
xchg
jns
pop
or
test
pop
xor
clc
adc
cmp
push
jle
pop
iret
les
mov
gs
add
lret
add
out
aas
push
push
imul
jno
fldcw
pop
pop
shll
pop
mov
or
loop
sub
inc
pop
movl
push
jno
cmc
or
jns
push
test
mov
jecxz
nop
mov
mov
mov
inc
push
push
aas
dec
mov
inc
pop
and
cmc
repnz
aas
jb
divl
repnz
adc
cmp
rorb
cmp
scas
pop
pop
jne
mov
loopne
inc
nop
movsb
dec
popa
xor
lret
test
push
test
dec
lds
push
stos
insb
imulb
mov
push
push
dec
shl
rcl
mov
mov
or
data16
mov
xchg
sarb
out
lret
mov
sti
or
jp
fisubl
ljmp
mov
push
push
stc
clc
fimuls
mov
sbb
js
cmp
addb
sbb
add
push
add
lret
lcall
rorb
fcomps
sbb
jo
and
repz
sub
xor
call
rcrb
dec
xchg
and
sub
mov
lret
adc
mov
cmp
imul
imulb
pop
mov
and
out
fildl
sub
rcrl
dec
push
lret
mov
mov
enter
or
dec
dec
jnp
pop
and
pop
arpl
arpl
or
jmp
scas
hlt
and
mov
add
bound
mov
add
inc
cs
loope
pushf
leave
adc
and
fdivr
bound
xchg
cmp
arpl
subb
push
sbb
pop
xchg
test
mov
cmpsl
aas
and
sbb
das
aaa
dec
sti
jg
jne
sbb
adc
pop
jne
leave
pop
jl
pop
shl
jecxz
mov
inc
fidivl
dec
pop
mov
sub
out
mov
popa
jne
shr
popf
sar
sub
test
movsl
or
push
or
push
fmuls
lahf
imul
inc
inc
jbe
loopne
js
cltd
sub
bound
inc
push
sbb
ljmp
adc
cs
lahf
push
insb
into
mov
cmpsw
mov
pop
dec
xchg
jno
xor
mov
rolb
push
jl
or
and
push
sbb
cld
repnz
jecxz
sbbb
mov
mov
js
adc
shrl
jl
pop
jne
jb
sbb
rcll
inc
pop
adc
sub
push
cmp
cmc
add
cmp
lds
jmp
sbb
clc
pop
pop
pop
xchg
movl
xor
mov
das
in
cli
fnsave
into
and
movsb
jns
imul
push
lret
bound
daa
jmp
sub
sbb
stc
xor
adc
mov
pop
js
jg
in
dec
sub
iret
out
mov
arpl
lahf
dec
mov
fldenv
shlb
insb
cmc
ret
out
mov
cs
sub
or
mov
or
jbe
pushf
adc
inc
adc
mov
rcrl
imull
pop
ror
dec
dec
sub
inc
xchg
enter
sbb
aad
and
stc
fimuls
test
imull
mov
jbe
aas
push
shrl
adc
daa
sub
push
fs
xchg
pop
test
movsl
ljmp
lods
and
mov
out
insb
lock
repz
sbb
cltd
or
inc
outsl
loope
adc
push
das
jmp
jecxz
je
shlb
lret
xchg
addr16
out
int
out
test
and
dec
fcmovne
jo
fdivl
mov
aam
daa
jge
bound
testb
jle
xchg
fstpt
pop
jmp
sbb
mov
daa
push
jno
mov
pop
pop
pushl
testb
dec
sbb
xor
sbb
mov
aam
push
das
mov
cmp
shll
and
lahf
shll
in
sbb
sub
and
into
ds
mov
xchg
lds
test
pop
fucomip
lret
js
into
stos
hlt
punpckhdq
xor
and
loop
ret
sbb
xor
push
sbb
lock
shrb
fisubs
ja
aad
scas
stc
ljmp
adc
lret
inc
push
mov
dec
push
sysret
mov
es
mov
mov
lret
push
jmp
dec
jbe
xor
aad
xchg
outsb
xchg
mov
inc
cltd
lods
add
inc
mov
repnz
push
dec
aas
icebp
push
mov
sub
in
int3
popw
mov
out
inc
iret
push
mov
setb
popf
es
or
in
rorb
ret
mov
or
nop
es
mov
and
pop
jg
enter
shll
sarb
jmp
push
loope
xchg
inc
popa
mov
test
push
jne
mov
add
sbb
roll
pop
cmp
mov
pop
shlb
sbb
iret
dec
inc
or
push
pop
into
fcomi
push
dec
xchg
sub
lds
or
mov
ljmp
jg
adc
aam
mov
movsl
addr16
jne
sub
shll
jp
ror
dec
decl
gs
fildll
imul
js
or
shrb
lret
imul
loopne
dec
sbb
jge
mov
push
cmp
push
int3
xor
ret
adc
pop
push
xchg
rorb
dec
pop
fisttpll
shl
fcmovbe
push
dec
xor
cmp
push
js
sbb
cmp
xorb
jp
push
addr16
cmc
out
push
lock
loope
or
lcall
ret
cli
push
jb
push
mov
popa
mov
hlt
jl
lahf
sti
jbe
sub
aam
aaa
cli
push
xchg
outsb
jo
leave
and
stos
lds
andl
add
xchg
rorl
call
in
lods
mov
test
push
ja
adc
jnp
lods
repz
addr16
into
aas
dec
and
cmp
cmp
sahf
jp
notb
sub
xlat
mov
xor
test
ds
pop
pop
xor
out
pop
dec
pusha
sub
in
push
jb
xorb
push
stos
das
and
sti
push
and
loop
push
and
jno
int3
fld
shlb
out
std
cmp
xchg
push
je
push
loope
idiv
fistpl
data16
dec
lret
xchg
orl
imulb
cmp
mov
jle
xchg
shlb
pop
andb
in
pusha
push
fnsave
sti
daa
fsubrl
or
js
push
nop
rcrl
outsl
jl
mov
dec
bound
and
mov
push
mov
push
add
dec
imul
adc
push
imull
inc
mov
push
sbb
sbb
push
test
sbb
push
xchg
or
cmc
js
xchg
cmp
push
mov
rorl
outsb
or
mov
dec
pop
xchg
stc
scas
cmp
bound
push
fimull
mov
inc
repnz
mov
mov
mov
pop
int
push
dec
test
adc
fimuls
jp
or
ja
mov
push
inc
pop
jge
push
inc
outsl
xchg
or
scas
fcoml
mov
jg
fisubl
lods
adc
sub
push
mov
adc
rolb
lods
jmp
nop
inc
mov
test
ljmp
push
dec
insb
push
std
repz
dec
adc
lahf
sbb
inc
lahf
mov
sbb
sub
lahf
or
loopne
aaa
sbb
adc
dec
stc
jp
mov
mov
mov
pop
inc
pop
push
ret
or
pop
shrb
divl
cmp
dec
out
imul
cmp
mov
mov
add
ss
mov
cltd
mov
imul
pop
into
adc
sbb
aad
cmc
inc
mov
xorl
dec
cli
push
and
add
sahf
sbb
les
divps
in
sbb
pop
jle
outsl
mov
mov
fnsave
test
cmp
call
iret
adc
inc
mov
je
or
xchg
das
ljmp
mov
jmp
mov
xor
adc
ljmp
mov
sbb
xchg
pushf
int3
std
cmpb
out
xlat
lret
push
int
push
sub
adc
imul
dec
xchg
repnz
std
jmp
popa
jge
arpl
mov
xchg
or
and
loop
jae
adc
ljmp
mov
pop
cmp
fistl
dec
shrl
sub
xchg
adc
rcr
movsb
pop
ljmp
dec
adc
dec
push
lret
or
test
inc
push
dec
shrb
dec
insl
inc
andb
fidivrs
ljmp
mov
lea
and
mov
jns
rclb
push
lds
and
aas
xor
jno
sbbl
push
mov
mov
daa
ficomps
pop
mov
pop
sub
adc
bound
or
movsb
inc
je
lcall
xchg
inc
nop
lcall
mov
adc
stos
iret
pop
pop
xchg
pop
out
or
aam
shll
mov
lods
out
sbb
lds
xchg
movsb
fistl
push
dec
into
push
jb
push
jns
leave
movsb
push
xor
push
inc
push
push
push
mov
inc
cmpsl
mov
mov
push
push
mov
aas
cmp
nop
inc
out
or
int
add
movsl
mov
ljmp
dec
push
ret
repz
or
xchg
daa
dec
pop
pop
scas
xchg
pop
fisttps
mov
sbb
daa
dec
pop
mov
mov
pop
pop
push
imul
xchg
fucomip
inc
imul
jg
test
clc
fiadds
xor
inc
inc
orb
mov
push
add
inc
jne
push
pushf
pushl
lahf
lds
xlat
add
and
sub
adc
sahf
dec
xor
sub
pop
xchg
jns
sbb
cmp
cs
lds
fsubs
cmp
gs
sub
mov
out
in
mov
or
dec
mov
bound
repz
xchg
push
xchg
jmp
cmpsb
lahf
outsl
xchg
jae
ret
pop
fstl
test
ja
sti
jne
aad
add
cmp
test
lret
pop
mov
mov
push
in
int
test
pop
xchg
int3
add
push
cmpsl
adc
mov
aam
gs
xorb
clc
and
movsl
cmp
out
iret
das
pop
mov
xor
jne
push
sub
lods
and
push
imul
in
imul
movsb
add
les
jae
shrb
cmp
mov
fs
push
xchg
adc
pop
or
aaa
lahf
xor
mov
mov
int
daa
cli
mov
repz
lahf
cmp
pop
xor
outsl
jnp
ja
loop
mov
xor
iret
aam
arpl
lods
adc
dec
inc
push
sub
repnz
out
fisubs
fcmovbe
push
mov
bound
cmp
iret
cs
rcr
andb
pop
sub
pushf
xor
movsl
dec
lahf
aam
imul
leave
insb
sbb
xchg
adc
jne
xchg
inc
scas
iret
shll
xor
xchg
stc
sbbl
dec
and
sti
mov
int
dec
into
xchg
das
bound
pop
mov
dec
sbb
push
push
mov
std
shll
ret
sbb
in
pushf
push
pop
cmpsb
rcr
stos
movsl
jp
jnp
pop
jno
fsubl
jmp
inc
mov
push
dec
fcoms
jg
jp
pop
cld
jle
push
xor
mov
adc
cmpsl
insl
das
test
adc
sbb
sub
lcall
ja
pop
sub
sahf
ds
ljmp
dec
push
icebp
or
imul
imul
and
lcall
inc
adc
pop
jmp
lcall
enter
pop
sahf
sub
pop
int
cmpsb
pop
cmpsl
movsl
loopne
adc
inc
fistpl
int
mov
shrl
ret
adc
mov
fsubrl
jmp
filds
mov
jg
jae
push
xor
pushf
lea
pushf
dec
push
imul
fistpl
mov
xchg
xchg
or
cmc
stos
popa
sbb
mov
or
ja
lret
shl
xor
push
pop
push
les
les
je
xchg
imul
icebp
pop
sbb
lea
xor
ficomps
ds
stos
lds
lret
push
leave
dec
xor
or
adc
stos
dec
aad
jp
jbe
imul
push
mov
dec
insb
push
add
xchg
scas
sbb
rorl
push
xor
std
adc
mov
insb
dec
jnp
into
or
jne
out
ss
and
push
lret
jg
bound
push
pop
lods
jns
sub
cs
sub
jp
ror
fsubs
sbb
testb
gs
mov
repz
outsl
imul
sub
into
pop
mov
push
jo
test
pusha
sbb
test
pop
ljmp
out
mov
adc
mov
ret
call
dec
out
mov
lea
cltd
xor
test
push
push
dec
iret
mov
dec
push
int3
aas
xor
into
mov
insl
idivb
aas
pop
push
and
jl
fwait
mov
jbe
lahf
add
iret
in
scas
cmpsb
out
and
stc
push
jmp
out
add
enter
fisttpll
push
push
mov
mov
mov
test
test
out
adc
movb
or
aam
shlb
cwtl
sub
pop
and
notb
rclb
pavgw
movsl
or
js
xchg
ja
hlt
aas
mov
sbb
mov
lea
aam
fimull
loope
daa
jno
scas
and
int
jbe
adc
mov
fwait
pop
movsl
mov
call
out
cmp
iret
cs
in
mov
out
mov
and
push
repnz
mov
push
mov
jns
inc
and
cmp
mov
push
out
dec
jmp
scas
data16
ds
addl
mov
shrb
fcompl
and
add
adc
pop
mov
arpl
sub
push
push
mov
negl
fwait
adc
outsl
cmovl
movsb
mov
or
mov
inc
test
or
push
fstpl
shlb
jmp
or
pop
sbb
push
aas
or
or
out
outsb
outsb
xlat
and
addl
imul
mov
mov
add
jecxz
push
xlat
ljmp
pop
ljmp
pop
mov
jne
mov
lods
sub
leave
stc
ds
add
mov
insb
xor
add
sbb
xor
push
fisubs
mov
lret
inc
loopne
and
mov
das
leave
int3
aad
inc
fs
pusha
nop
xor
lret
outsl
inc
or
lret
aam
and
arpl
push
mov
lret
mov
adc
cmpsl
lea
rclb
inc
push
cmc
out
lret
xchg
or
je
ds
push
xor
fsubrs
hlt
adc
fmull
lret
jns
cmp
jno
lret
mov
std
dec
lret
ja
movsl
cmp
push
inc
push
mov
lret
dec
add
jns
or
sbb
bound
sub
pop
adc
mov
sar
mov
cld
jmp
shll
sbb
pop
jae
das
movsb
aam
dec
mov
ret
rolb
or
ret
lods
xor
mov
and
fs
inc
nop
bound
lret
inc
mov
jb
pop
and
pop
int
out
repz
js
cmp
ret
sub
mov
dec
into
cmpsb
jbe
push
add
mov
rcll
cwtl
xchg
dec
mov
in
mov
rcl
jnp
jle
lret
push
mov
leave
cli
test
sub
pop
cltd
enter
scas
frstor
rorb
cltd
fmul
add
push
xchg
inc
or
sub
mov
mov
ja
aam
sarl
lret
add
lds
jb
call
lret
dec
jge
icebp
jecxz
jmp
scas
orb
call
inc
mov
into
fbld
je
xor
pusha
xchg
jbe
cwtl
mov
or
cmc
mov
xchg
loop
mov
add
pop
lds
data16
jmp
cmpsl
das
dec
stos
lret
insb
inc
inc
push
push
dec
lret
scas
xchg
lods
jp
push
jo
test
lret
or
dec
cltd
lods
lret
insl
inc
xchg
std
pop
loop
mov
nop
dec
lret
ret
xor
arpl
fs
cmp
fdivrl
and
pusha
shrl
xchg
dec
jle
ret
call
fidivs
popa
mov
cmpsb
loope
xchg
lret
push
xchg
subb
lret
sbb
push
jmp
dec
and
lret
mov
lret
sbb
add
out
lret
out
inc
jne
xor
test
add
in
loop
scas
pop
jbe
inc
cmp
xchg
lock
cwtl
mov
dec
xchg
sbb
cs
test
adc
pop
iret
cwtl
cmp
pop
bound
cltd
dec
add
aam
xchg
aaa
mov
push
clc
fwait
mov
lods
fmull
mov
jno
dec
sahf
scas
aas
pop
mov
lret
in
mov
cmpsl
xor
lret
mov
lret
inc
xlat
inc
jg
popa
lret
xor
push
pop
stc
lret
cli
mov
outsl
fdivp
lret
sub
stos
out
pop
cmp
mov
std
shll
pop
shrl
cmpsb
fcomps
nop
int
mov
dec
test
rorl
jl
ljmp
xorb
mov
cmc
pop
lret
sub
fidivrl
in
inc
call
pop
lret
mov
mov
divl
lret
mov
inc
lds
inc
xchg
xchg
mov
pushl
fcoml
insb
clc
cmp
aam
xchg
fstl
lret
out
pop
outsb
ds
sub
add
jg
dec
xor
sahf
arpl
inc
sub
xchg
stos
lock
xor
addr16
add
jg
icebp
lret
and
jp
mov
sbb
loop
out
cmp
sub
mov
mov
mov
arpl
icebp
cltd
rorb
out
sbb
pop
cmp
sub
or
lret
cmpsl
push
cmp
jge
sarb
xlat
daa
ss
bound
mov
or
mov
call
fidivl
jb
sub
jbe
lret
movsb
clc
mov
shrb
lret
pop
gs
ficompl
pop
out
paddb
pop
adc
xlat
divl
jmp
sbb
lret
mov
aam
imul
sub
scas
sti
mov
xor
adc
push
sub
sbb
dec
mov
xor
pop
stos
xchg
adc
dec
jbe
dec
lea
sub
cmp
ret
cmp
int
in
sbb
jp
push
mov
and
lret
std
pushl
imul
mov
cmp
push
test
mov
int3
sbb
and
jnp
push
or
insb
lret
mov
ficomps
sbb
dec
dec
mov
lods
lret
imul
lret
fidivs
dec
push
ljmp
test
mov
sbb
push
or
shll
and
mov
mov
add
in
pop
imul
mov
push
fimull
push
mov
pop
xchg
push
sub
rcrl
repnz
jb
or
cltd
fmul
insb
jge
adc
stos
push
cld
je
daa
loop
mov
xor
mov
mov
or
stos
imul
aad
adc
lret
mov
push
push
dec
lret
loope
pop
std
iret
sti
and
lods
lret
sbb
add
dec
jne
fdivrs
mov
int3
ret
repz
sbb
cmpsl
lret
ja
mov
out
and
dec
shlb
aam
arpl
push
push
or
fldcw
scas
loop
and
int3
stc
ja
xchg
cmc
mov
or
dec
sbb
pop
lret
scas
int
ss
lock
ljmp
sti
xchg
cld
cmp
sbb
dec
punpckldq
cmpb
imul
xchg
fidivl
iret
xchg
and
xlat
push
mov
cli
out
clc
jne
cmpsb
push
arpl
mov
ret
or
insl
inc
mov
pusha
jge
add
add
inc
ljmp
shlb
test
sub
adc
sub
fidivl
lret
pop
push
jge
dec
test
rcll
out
insl
sahf
mov
sarb
xchg
data16
mov
out
xchg
lods
lret
or
nop
adc
mov
popf
arpl
xchg
adc
sbb
cmpsb
lret
out
shll
pop
sub
pop
or
icebp
call
and
hlt
pop
jg
xchg
cld
jae
lret
sub
aas
fwait
out
or
mov
std
push
mov
jp
outsl
sbb
or
test
dec
mov
int3
sbb
and
negl
sbb
inc
jmp
imul
xor
xchg
adc
lret
push
js
arpl
loop
mov
pop
cmp
push
imul
jne
adcl
and
fwait
inc
xchg
lock
out
pop
and
lret
lods
xor
mov
int
mov
jp
xchg
jbe
sub
jmp
imul
inc
mov
mov
out
fwait
scas
out
ret
jno
imul
mov
cwtl
pop
fnstenv
ds
hlt
add
mov
sarb
jmp
jns
dec
cmc
mov
xor
pop
js
pop
dec
fsts
jp
xchg
aad
mov
ljmp
rolb
filds
lret
pushw
sbb
lods
jl
rcrb
jecxz
cli
and
into
int
sbb
push
jno,pt
xchg
xor
test
jmp
stc
jge
and
arpl
xchg
shlb
adc
pop
or
or
fisubrl
repnz
xor
mov
int3
outsb
or
mov
sarl
pop
add
or
xchg
inc
xor
and
loopne
or
add
cmpsl
sub
push
mov
push
inc
pop
pop
and
leave
mov
idivb
cmpsl
xchg
jne
repnz
sub
xor
pushf
data16
dec
aaa
shll
xchg
push
jp
dec
test
lds
into
cmp
pop
mov
inc
repz
ljmp
mov
sub
std
dec
mov
mov
iret
test
push
mov
out
sarb
jle
lock
into
jge
jae
addr16
movsb
pop
fistpll
loope
push
pop
xor
sti
jae
test
or
mov
push
repnz
sub
lds
mov
mov
je
and
cmp
cmpsl
cs
test
ficoms
arpl
dec
mov
add
leave
pop
push
stc
xchg
mov
nop
lods
or
push
mov
inc
jno
test
and
cmpb
mov
xchg
ret
sub
pop
inc
ja
js
jle
out
pop
jne
pop
mov
and
les
rorl
cmp
or
leave
sub
loop
mov
cmp
inc
aad
adc
cmpsb
xchg
push
test
jle
pop
xchg
rcr
and
aaa
pop
jno
inc
add
cmc
mov
lret
jns
lahf
test
out
js
les
cmpsl
repnz
arpl
lds
gs
inc
clc
add
xchg
xchg
mov
push
dec
sub
call
push
adc
pop
ljmp
pusha
xchg
mov
lret
pop
leave
push
insb
dec
outsl
mov
cmp
icebp
lea
into
fwait
mov
xor
mov
jecxz
cmp
mov
scas
mov
cmpsb
cmp
jle
enter
sub
sub
cmp
rorl
lods
pop
mov
xchg
mov
mov
test
mov
fwait
or
sub
push
cs
gs
addr16
pop
stc
xor
ret
add
rorl
sub
push
mov
xor
pop
or
xchg
mov
jmp
std
scas
jecxz
cmp
pop
shr
or
or
jl
popa
push
iret
mov
cmp
push
fists
adc
and
and
sub
divb
push
jge
pop
clc
repz
pop
dec
xor
scas
lfs
stos
push
jp
aad
aas
dec
scas
mov
insl
dec
pop
repnz
push
aam
ja
shr
mov
ds
insl
ret
ror
movsl
push
lock
test
mov
out
sbb
sub
cmp
jnp
lret
jno
addr16
mov
adcl
jmp
rclb
cs
je
mov
sub
pop
les
push
rorb
jo
cltd
fimull
xchg
and
jbe
std
scas
mov
out
push
mov
movsl
push
jns
jl
out
fisttps
push
mov
inc
jmp
push
lds
mov
pop
pop
out
mov
outsl
insb
loopne
rcrb
pop
lods
testb
pop
cmp
mov
into
pop
pop
cmpsl
in
jp
aad
ret
repnz
das
cmc
sbb
mov
inc
mov
in
subl
rcr
rorb
cmpsb
lahf
bound
and
ds
inc
repnz
arpl
decl
andl
mov
jmp
add
push
sub
lock
fadds
aaa
dec
adc
mov
mov
test
mov
sbb
scas
adc
adc
pop
dec
mov
jp
and
xchg
sbb
sti
cmp
daa
loop
xchg
and
push
cmc
leave
shrb
mov
outsb
sti
xchg
mov
adc
push
push
rorl
into
mov
movsb
push
jp
stc
ret
test
jmp
mov
xchg
pop
mov
or
mov
jmp
sub
imul
shl
jmp
out
enter
imul
adc
pop
pop
and
jl
gs
arpl
xchg
xor
stos
and
les
jne
repz
movsb
fwait
lret
call
jo
xor
mov
aad
mov
notl
lock
push
adc
test
sub
inc
cmp
cmc
push
or
js
jp
push
push
push
dec
leave
mov
mov
adc
in
xchg
outsl
dec
jle
dec
test
mov
int
push
movl
dec
adc
div
and
dec
cwtl
stc
stc
test
cmpl
jg
sbbl
pushl
push
fadds
add
fldl
shr
inc
into
das
in
sahf
push
lcall
or
xor
jb
stos
push
sahf
xchg
aam
pop
int3
pop
test
dec
fwait
repnz
ja
test
jno
sbb
js
je
pop
subb
jae
loop
jb
mov
sub
imulb
sti
lret
pmulhuw
xchg
aam
repnz
adc
add
pusha
cmc
mov
cmpsl
fst
std
int3
movsbl
pop
mov
push
xchg
jmp
repz
out
or
push
or
aas
push
mov
jle
fwait
sbb
js
adc
scas
push
ljmp
inc
dec
fs
inc
jle
int3
addr16
push
jmp
mov
into
xchg
pushf
sub
add
pop
cmp
and
sub
dec
xchg
lds
xchg
leave
aaa
cmp
psrlq
and
jg
shrl
dec
adc
sub
movsb
lret
ss
and
sbb
mov
scas
and
push
push
sbb
pop
push
scas
mov
dec
dec
inc
aam
mov
sbb
jp
mov
popl
cmp
into
int3
push
inc
fstpt
xor
lods
pop
mov
lret
dec
sbb
sbb
and
cmp
popf
sbb
dec
cli
mov
mov
inc
scas
into
pop
xchg
jo
sti
or
push
movsl
mov
add
movsl
cli
icebp
ud0
loope
iret
sbb
dec
testb
std
xchg
inc
dec
and
dec
es
sarb
hlt
fistpll
pop
adc
lcall
or
or
mov
xchg
fstpl
or
into
fsts
xor
in
fwait
nop
dec
mov
jle
xchg
daa
adc
jnp
sbb
loop
int3
sbb
dec
notl
outsb
add
push
cmp
mov
dec
mov
add
enter
insb
mov
movsl
mov
lock
adc
mov
mov
push
push
mov
sti
jbe
or
int3
push
inc
push
arpl
sbb
into
dec
int3
xor
iret
cmp
mov
les
ljmp
xchg
xor
cmp
or
cmpsb
je
ss
pop
cwtl
call
ret
mov
mov
xchg
sub
inc
pop
addr16
popa
ljmp
pop
dec
mov
loope
inc
addr16
or
cmp
inc
jno
pop
push
dec
in
and
mov
xor
or
repz
test
dec
jle
ljmp
mov
loope
ret
add
xlat
ljmp
popf
push
jno
andb
jbe
gs
mov
subb
pop
mov
fists
xchg
test
lret
jb
jmp
dec
and
xlat
cmp
ss
mov
in
clc
rcr
mov
jns
cmpsl
cmpb
repz
adc
aaa
pusha
outsl
fwait
mov
repnz
adc
inc
mov
testb
or
in
inc
test
inc
addr16
std
loopne
pop
mov
ret
cmp
bound
mov
inc
xchg
sbb
clc
dec
int3
bound
into
mov
pop
testb
pop
push
aad
lahf
adc
lret
idivl
stc
sub
cmp
test
push
push
sarl
bound
outsb
ljmp
cmp
aas
dec
push
negb
mov
mov
lods
mov
mov
or
insl
int3
inc
inc
arpl
dec
sub
aas
popf
mov
dec
jbe
in
cltd
shrb
and
call
or
mov
push
inc
push
mov
aas
push
push
xor
cli
mov
lods
cmp
aaa
pop
sbb
pop
daa
mov
stc
fincstp
les
nop
pop
gs
mov
dec
out
cmp
rcr
inc
loope
mov
push
xlat
pop
add
cmp
es
in
jp
outsb
outsb
lahf
int3
mov
or
cmp
or
inc
push
cld
lcall
adc
mov
test
iret
or
out
cmpsb
mov
add
mov
mov
test
shrb
test
pop
stos
mov
push
dec
out
cmc
mov
shlb
xorl
popf
pop
mov
or
add
jnp
push
lret
out
jne
sbb
ja
loope
orl
jmp
adc
jmp
xchg
adc
stos
ret
aad
push
in
pop
mov
jecxz
sub
out
out
out
xchg
adc
rcrl
pop
repnz
pop
xor
push
inc
mov
push
push
and
push
fildll
inc
int3
or
jge
rcll
jecxz
loope
je
xor
test
pop
movsb
lods
adc
push
leave
bound
dec
or
jecxz
cld
pusha
addr16
fs
xchg
rcrl
in
fnstenv
push
add
push
push
jb
push
mov
adc
addr16
mov
jg
pop
pop
pop
mov
ds
loop
insl
mov
in
pop
jecxz
inc
jmp
insl
into
cli
mov
and
sahf
ljmp
sbb
or
cmp
jo
fiaddl
add
xor
cli
mov
xorb
push
add
movsl
scas
and
repz
rorb
push
xchg
loopne
inc
adc
pop
lods
lahf
stc
mov
cmpsl
sub
jmp
inc
ljmp
and
clc
call
xchg
es
gs
sti
sti
das
sti
movsl
sbb
cmc
push
pusha
int3
or
jge
inc
pusha
mov
and
adc
dec
stos
push
insl
pop
stc
inc
neg
int3
enter
ret
mov
shll
rcrb
mov
push
ljmp
out
sub
lcall
dec
sub
or
or
sub
xor
test
aaa
sbb
daa
sti
inc
xchg
mov
cmovl
sbb
jo
cmp
inc
or
xchg
jmp
cmp
mov
ficompl
push
mov
fcmovb
cmpsb
mov
pop
push
inc
int3
dec
pop
icebp
fs
push
out
add
repnz
jne
adc
jp
adc
imul
or
cmpsb
jmp
setb
or
push
ljmp
xlat
push
xchg
popa
mov
stos
imul
mov
out
enter
mov
fwait
dec
ret
outsl
mov
xor
or
or
cmc
popf
sahf
push
xor
or
jns
xchg
das
ds
test
sbb
pop
sbb
sbb
push
movsl
insl
fwait
outsb
and
bound
lds
into
leave
orb
and
mov
pop
int
test
orb
sti
mov
lret
jo
sbb
aad
insl
aas
rorb
movsl
sub
imul
gs
and
clc
adc
adc
test
ss
push
jp
jge
mov
cmp
pop
mov
xor
movsb
ljmp
add
loope
out
shrb
push
scas
mov
ljmp
icebp
pop
or
push
xchg
or
push
rcrl
pop
in
inc
cmp
or
pop
js
in
push
dec
xchg
xor
sbb
scas
sbb
in
mov
xchg
inc
lret
mov
xchg
rclb
pop
mov
xor
mov
jno
jae
ficomps
mov
jae,pn
pusha
xor
dec
sti
jns
adc
call
lahf
mov
into
cmp
icebp
pop
push
push
pop
inc
rorb
lock
and
inc
clc
pusha
adc
dec
push
aas
cmp
ret
bound
lock
jns
scas
push
jns
in
int3
stos
movsb
dec
dec
sbb
or
xor
pop
fildl
ljmp
mov
jae
mov
xchg
insl
jo
push
sbb
cs
outsb
jecxz
pop
push
or
fisttpll
js
xor
data16
inc
mov
xlat
xchg
sti
ret
in
push
insl
fdivs
adc
popf
adc
daa
movsb
in
sbb
arpl
dec
xchg
sti
push
mov
clc
insb
jle
stos
in
jo
cmpsl
adc
xchg
xor
jge
mov
sti
push
dec
pop
fnstenv
aas
imul
mov
cmc
pop
xor
data16
mov
aad
mov
dec
push
add
inc
pop
lds
imul
outsl
call
mov
dec
test
sub
jo
dec
adc
fcoms
mov
je
popa
push
mov
outsb
bound
mov
data16
mov
outsl
sub
repnz
orl
mov
push
sbb
cltd
lods
pushf
add
cwtl
mov
or
std
subps
inc
push
push
sarl
sti
pop
mov
or
dec
jmp
out
pop
pushf
inc
sbb
gs
cltd
xchg
pop
xlat
cltd
lock
sbb
pop
inc
imul
cmp
push
and
mov
ljmp
int
mov
sahf
clc
in
sbb
push
jbe
mov
xchg
adc
xchg
dec
and
inc
pop
inc
rcrl
sub
inc
js
xchg
mov
sbb
iret
xor
mov
pop
mov
imul
movsl
das
pusha
mov
mov
int3
orb
fwait
or
shlb
mov
test
xor
loope
out
scas
push
push
mov
inc
lods
or
lret
push
push
mov
test
popf
ret
in
es
push
addr16
out
sbbl
insb
stos
stos
inc
pop
repnz
xor
mov
push
jo
dec
inc
mov
pop
cmp
addr16
repnz
adc
mov
push
fs
inc
adc
adcb
cmovne
lods
adc
out
jne
jl
xor
pop
xor
mov
jmp
fs
sub
fdivrp
lret
test
stc
dec
out
lret
loop
add
pop
xlat
and
ret
js
and
repnz
fstpl
cwtl
and
aas
jmp
cld
jns
into
iret
subb
add
je
lds
and
xor
fnstenv
push
cwtl
add
lret
push
and
jo
fstl
repnz
int3
inc
pop
mov
push
push
push
pop
stc
xchg
aad
push
inc
jmp
stos
fistpl
daa
gs
adc
dec
in
ljmp
xchg
adc
push
int3
jp
test
pop
xchg
lcall
and
out
ror
push
or
hlt
ror
sbb
addr16
sub
addr16
fistpll
push
add
mov
jl
bound
fisubs
jb
jbe
cli
sub
push
in
push
push
xor
ja
inc
dec
xchg
sbb
imul
push
push
sar
stos
in
jmp
aas
add
shl
pop
in
movsb
lret
ret
sbb
xor
mov
cmc
ljmp
outsb
out
mov
mov
fcoms
cmp
dec
cli
cld
pushf
mov
push
pop
sbb
push
add
or
shlb
scas
inc
sbb
lods
cmpsl
and
dec
not
cmp
lds
pop
push
mov
int
dec
lea
lds
or
mov
push
push
fnstsw
rorl
mov
or
push
or
add
push
mov
loop
adc
and
jno
sahf
mov
mov
nop
sbbb
ljmp
repnz
jns
loopne
mov
pop
movsb
xchg
xchg
jmp
outsb
stc
jmp
je
and
mov
adc
xchg
add
add
xchg
mov
pop
pop
or
push
aam
fisttps
mov
add
insl
notb
dec
adc
cmpsb
xlat
bnd
push
js
pop
cli
jg
xor
pop
add
adc
call
int
pusha
aaa
das
or
aad
dec
lds
sub
push
push
cmp
sub
jp
sahf
sbb
stos
dec
and
jmp
xor
dec
into
pop
mov
mov
pusha
popa
int
push
sbb
cwtl
push
aad
cmpl
push
psllq
adc
sub
jno
push
popa
mov
push
ss
lock
jle
push
les
rolb
sti
enter
dec
pop
adc
pause
cli
rcll
lock
cmpsl
paddusb
mov
scas
out
cmpsb
push
repnz
sar
inc
jl
in
adc
xchg
daa
sti
pop
dec
add
sarb
push
adc
mov
dec
sbb
push
fimull
add
leave
mov
shll
ret
scas
inc
mov
mov
gs
jbe
mov
aaa
addr16
roll
out
jg
call
jmp
pushf
in
sbb
xchg
rorl
out
push
inc
dec
or
loope
ja
lret
and
sub
push
mov
fimull
inc
pop
pop
lret
mov
pop
push
mov
lds
sbb
push
in
jbe
test
ret
loopne
rcrl
sub
and
std
int3
mov
iret
or
andb
xor
jge
xchg
pop
popf
pushf
das
imul
xor
aaa
adc
fadd
lea
daa
pop
jecxz
rcll
pop
mov
test
fiaddl
call
xchg
dec
stos
pusha
rorl
outsl
mov
pop
fiaddl
push
add
cmp
xor
sub
fsubl
dec
mov
shrb
out
jle
out
and
push
xchg
add
jp
push
jmp
push
subb
mov
data16
repnz
lods
inc
push
in
mov
lcall
adc
in
mov
sbb
push
xchg
hlt
orb
fldcw
xchg
shll
shll
push
xlat
jecxz
sti
lock
xchg
pop
mov
fisttpl
cs
xlat
dec
sub
inc
jns
pop
lea
daa
or
sub
test
dec
fnstsw
lcall
arpl
call
fcoms
push
loopne
es
loop
cmpsb
mov
aam
inc
adc
insb
shlb
into
pop
aaa
adc
mov
aas
sbb
shrb
ljmp
adcb
dec
rorb
pop
int3
outsl
xor
xorb
fiadds
push
hlt
fsts
and
in
mov
mov
sarb
fucomip
mov
fidivrs
push
sub
iret
and
pop
jmp
iret
test
or
cltd
adc
inc
add
pop
daa
data16
subb
lret
jecxz
cmpsl
mov
jne
or
mov
jb
mov
push
mov
xchg
dec
mov
mov
mov
out
sbb
or
add
sbb
repz
xchg
movsb
pushf
or
xchg
inc
cmpsb
stc
movsb
jle
out
repz
mov
movsb
sbb
stos
jae
lds
fdivs
mov
pushf
or
mov
loopne
popl
mov
adc
andb
lods
test
aaa
adc
pop
lds
push
xor
and
dec
adc
adc
add
mov
pop
clc
repnz
repz
jns
pop
or
xor
sbb
sti
ss
adc
out
dec
ljmp
xchg
or
insl
fisubrs
cmpsb
ffree
pop
pop
mov
jnp
lock
out
mov
inc
pop
repz
cmp
dec
pop
and
mov
or
dec
cli
mov
cmp
stos
int
dec
inc
mov
fwait
and
jb
or
stc
sub
add
xchg
push
push
xchg
pop
xor
ljmp
repnz
sbb
mov
cltd
nop
into
cmovg
leave
rcll
push
adc
jmp
xchg
mov
cmp
xchg
ds
sbb
daa
mov
push
test
mov
jp
cli
mov
incl
sub
stos
scas
aas
cmp
shrl
outsl
or
int
mov
aas
fmull
xlat
mov
mov
jp
inc
test
jo
and
mov
or
mov
popl
rclb
imul
enter
or
jne
mov
icebp
out
sti
rcrb
push
test
lahf
jg
and
xchg
add
sub
gs
xor
shlb
xlat
inc
scas
cmp
sbb
pop
sub
mov
xchg
out
xchg
shll
orb
xchg
xchg
cmpl
mov
aas
inc
and
inc
in
xchg
pusha
pop
mov
cltd
ljmp
sub
sbb
ss
mull
dec
lret
aas
aam
dec
add
int3
push
or
clc
sub
test
in
and
in
pushf
out
shll
adc
pushf
adc
jne
jmp
clc
ficoml
xor
push
add
lock
shll
in
aas
jne
aam
push
fmuls
push
mov
test
nop
add
sbb
dec
mov
jle
in
sahf
adc
ds
mov
dec
sbb
enter
ror
jb
or
push
int3
pop
pop
mov
test
cli
xchg
test
mov
cmp
mov
mov
shll
push
push
inc
mov
cmpsl
push
inc
sbb
cli
clc
pop
cli
por
push
lcall
add
mov
daa
lret
icebp
jb
pop
xchg
ret
fisubl
lock
xlat
mov
leave
jo
pop
xchg
or
hlt
cmp
lds
mov
adc
and
xchg
mov
mov
push
cmp
mov
push
sbb
sub
popf
jns
outsb
cmc
pop
out
test
rcll
insb
aam
add
dec
adc
frstor
lret
dec
aam
insb
jl
adc
out
std
push
cmp
mov
sub
iret
jle
lret
sti
ljmp
pop
mov
jecxz
out
popa
js
shll
pop
aas
jne
call
iret
push
fs
fildll
pop
mov
movsb
xchg
mov
subl
or
cmovs
sub
mov
addr16
mov
inc
push
stos
mov
stos
imul
jp
mov
stc
mov
mov
inc
xor
and
jnp
mov
and
cld
scas
repz
ljmp
imul
xchg
jmp
insb
inc
loope
push
aaa
repz
mov
mov
dec
loop
xor
ret
mov
fnstenv
shll
movsl
leave
mov
shll
xor
adc
lret
repnz
repnz
jg
loop
cltd
aas
mov
cld
or
mov
sti
pop
insl
outsb
xchg
mov
xchg
jp
js
hlt
sub
test
pop
mov
ljmp
dec
mov
sbb
das
sbb
mov
mov
shrb
push
shrb
inc
pop
xchg
sbb
sub
call
push
mov
cmpsb
xchg
jp
out
adc
push
movsl
fiaddl
mov
aad
test
jp
xlat
call
mov
push
mov
inc
push
sub
dec
or
imul
pop
xchg
and
mov
sbb
dec
das
push
int
jmp
or
sbb
rcl
stc
add
jge
xchg
add
lcall
mov
bound
ficomps
sti
mov
and
jle
jne
sti
pop
incb
push
ret
adc
xor
mov
pop
punpckhbw
mov
dec
xor
mov
mov
push
cs
lret
shl
lret
dec
pushf
push
inc
movsl
in
cmpl
or
insb
xor
repnz
push
aam
mov
sbb
dec
xchg
jnp
xchg
push
sub
pop
jne
rcrl
and
test
inc
into
xchg
jae
loope
neg
dec
dec
pop
lea
jns
jae
lds
xor
sub
mov
loopne
pop
jge
add
or
push
bound
mov
mov
push
and
add
dec
jmp
sbb
inc
fcompl
daa
xchg
jmp
pop
fisttpll
bound
cld
pop
mov
adc
es
cmp
sub
xchg
imul
shll
aaa
xor
or
xchg
and
cmp
push
pop
sub
out
sbb
mov
pop
jmp
or
cmp
add
xchg
daa
adcb
push
push
xchg
das
adc
push
mov
sub
mov
mov
popa
dec
mov
enter
imul
sub
hlt
jge
int
sub
mov
and
cmc
push
dec
sbb
xchg
pop
jg
bnd
jmp
outsl
fbld
cmpb
fcom
or
cmpsl
insl
jne
movsb
enter
pop
push
push
sub
push
rorb
jle
insb
pop
jl
mov
ljmp
pop
mov
loope
inc
pusha
test
cmpsl
lock
pop
adc
mov
xchg
or
xchg
mov
push
push
xor
push
jmp
lahf
dec
xchg
rcrl
push
cmp
inc
test
lret
scas
loop
sti
xor
iret
pop
inc
inc
int3
and
dec
pop
into
or
sar
into
lea
inc
xor
push
and
xchg
cli
pop
lds
int
push
ds
pop
std
sbb
mov
lock
ds
enter
mov
mov
jge
daa
test
add
loopne
addr16
mov
sub
test
insb
inc
lock
ss
and
xor
push
pushf
sbbb
hlt
and
in
cmpsl
movsb
jmp
sahf
add
outsb
in
or
stc
lret
rorb
dec
sahf
fldcw
mov
jnp
inc
pop
lret
inc
and
mov
jp
loop
adc
test
dec
push
shrl
inc
push
mov
adc
fcomi
sbb
lock
sbb
cmp
inc
mov
mov
adc
movl
sbb
push
add
lea
cmp
inc
mov
leave
add
mov
sar
daa
iret
push
pop
mov
cmc
jno
push
cltd
mov
notb
push
testl
xor
in
mov
adc
cltd
or
sbbb
jns
movsl
mov
mov
adc
sar
lret
imul
int
xchg
gs
aaa
lahf
ljmp
popa
rorl
mov
bound
mov
bound
sub
in
jg
repnz
mov
leave
pop
mov
pop
nop
jnp
dec
xchg
int3
andl
sbb
out
mov
inc
pop
lock
and
adc
sbb
lret
jmp
es
xchg
dec
cmp
mov
dec
lods
dec
rorb
add
or
inc
movsb
xchg
adc
mov
jmp
out
rcrl
xchg
mulb
or
popa
js
in
sti
jne
push
cmp
jne
sub
adc
into
sub
jne
pop
xchg
dec
sbb
data16
or
sbb
lods
or
enter
inc
dec
sarb
repz
cmp
lcall
shrl
pop
mov
lret
jg
stc
inc
out
lock
ret
test
xor
push
fildl
cmpsl
pop
jnp
sbb
xchg
andl
mulb
ljmp
in
scas
xchg
repz
push
bound
mov
mov
mov
stc
les
and
dec
es
cmp
push
mov
stos
mov
cmp
adc
xor
ficoms
lret
pop
pop
sbb
jmp
popf
mov
xor
lcall
xchg
pop
dec
or
sbb
js
lea
jp
popa
jl
pusha
cli
or
outsb
mov
fcompl
sub
in
lods
pop
push
js
leave
rclb
setge
mov
rcrl
insl
shlb
test
imul
push
insl
into
dec
or
lds
cwtl
jnp
xlat
int3
addl
sbb
out
ret
lret
jns
pop
mov
jp
pop
xchg
pop
push
push
fdivrs
popf
or
repz
jns
mov
dec
jg
ss
xor
sub
xlat
push
insb
jge
daa
test
or
mov
jp
lret
inc
iret
push
cs
jle
push
stos
inc
fmul
add
or
lahf
inc
pop
scas
cmp
inc
mov
int
mov
cmp
fwait
xor
out
roll
inc
repz
mov
fdiv
jmp
inc
stos
out
cmp
pop
clc
popf
pop
add
imul
cli
xor
inc
rcrl
and
sbb
jmp
mov
mov
pop
jbe
and
pop
pusha
scas
inc
mov
mov
xchg
cmp
or
pop
mov
dec
jl
adc
jp
mov
or
jle
scas
ja
or
or
rep
adc
mov
pop
movb
scas
sub
mov
jbe
sbb
jg,pn
test
and
out
mov
test
mov
rorb
call
jmp
adc
or
out
divl
or
sbb
push
xor
lcall
xor
ret
pushf
pop
add
inc
push
mov
push
lods
pop
and
clc
mov
push
jb
and
popa
pop
ljmp
outsb
das
in
and
mov
adc
stos
xor
sub
cltd
int
xor
xlat
cmp
jns
outsb
bound
jle
push
rcr
outsb
incl
push
loop
aas
pop
jecxz
mov
jg
leave
or
push
popa
push
sti
sub
ljmp
pop
adc
fisubrs
sbb
sub
and
adc
pusha
mov
jecxz
push
call
sub
bound
mov
sub
sti
int
lds
xchg
call
dec
in
pop
or
sub
pop
and
sub
sahf
call
dec
jo
dec
cmp
adc
push
fwait
mov
sbb
and
dec
lgs
jbe
test
mov
jg
add
ljmp
dec
dec
lahf
jle
imul
arpl
inc
mov
sbb
sbb
cmp
xor
mov
xchg
and
push
add
fildl
pop
adc
ljmp
iret
pop
mov
out
jmp
addr16
xor
mov
jb
cmc
outsl
adc
repnz
imul
push
push
je
pushf
and
rclb
sbb
outsb
lds
cvtdq2ps
push
ret
sub
pop
inc
adc
loopne
sbb
mov
jb
mov
ljmp
mov
je
push
bound
cmpsl
xlat
xchg
push
and
lret
int
in
icebp
bound
push
adc
repz
daa
arpl
push
cmpsl
dec
mov
sbb
lds
dec
sub
ret
sub
jae
inc
shll
pop
push
add
or
dec
or
push
outsb
test
ffreep
push
or
hlt
xor
imul
nop
mov
pop
mov
ret
nop
dec
mov
lahf
cmp
testl
sbb
push
or
outsb
stos
mov
xor
in
or
pop
call
adc
jecxz
es
out
aas
cmp
call
mov
scas
mov
das
rorb
mov
sub
daa
adc
push
bound
push
sahf
insl
das
shlb
pop
xor
fildll
scas
shrb
or
push
mov
aas
pusha
jnp
dec
pop
leave
push
lea
push
or
and
cmp
jnp
mov
cltd
aam
cmc
xchg
cmp
pop
mov
and
repz
sub
sub
mov
cs
adcl
push
cmp
mov
xchg
mov
pushf
adc
cmp
push
push
cvtps2pd
dec
sbb
decb
aam
adc
dec
hlt
into
repnz
mov
imul
les
int
push
sti
pop
cmpsl
pop
xchg
ja
sbb
ror
cmp
sub
pop
mov
and
xchg
rorb
das
adc
test
icebp
mov
pop
and
sub
das
mov
jp
out
mov
push
fwait
outsb
into
xor
out
add
repnz
pop
arpl
add
push
dec
stc
xchg
xlat
cmp
cmp
fs
xchg
sbb
or
sbb
push
xor
out
aam
xchg
lahf
sbb
pop
movb
loopne
testb
sahf
repnz
out
sbb
pcmpgtb
cmpsb
repnz
inc
ficoml
ret
dec
mov
adc
lods
dec
jp
shrb
les
fstps
sub
inc
out
lretw
int3
mov
xor
insb
xor
outsb
les
in
push
push
inc
inc
or
cli
adcl
flds
addr16
ret
fcmovu
jecxz
xorb
mov
jne
aaa
insl
jecxz
icebp
sub
mov
inc
jnp
sti
mov
and
xor
inc
in
mov
rolb
lds
inc
adc
mov
stos
jb
bound
outsb
pop
aam
popa
jp
insl
js
rorl
ja
pop
rcrb
jge
ds
cmc
add
and
jmp
sub
inc
jbe
loopne
pop
repz
fsubrs
cld
xchg
dec
js
repnz
pop
scas
daa
inc
test
push
in
data16
repz
mov
dec
push
xchg
pop
dec
mov
adc
and
sbb
push
push
adc
mov
aam
adc
pop
mov
fiaddl
sbbb
xor
cmp
jecxz
mov
jl
test
into
stos
mov
push
push
mov
ret
imul
ss
sub
gs
sbb
sbb
lds
js
mov
cmp
push
pusha
cwtl
pop
clc
leave
jne
daa
jmp
ljmp
or
jl
dec
idivl
cwtl
xchg
pushf
into
fwait
out
and
loopne
push
adc
or
add
and
bound
frstor
pop
int3
push
dec
adc
pop
movsb
dec
inc
jb
jae
ret
xchg
pop
adc
jmp
xchg
or
and
add
cmc
inc
shr
xlat
push
lcall
jns
out
or
cmpsl
jne
push
push
out
mov
fnsave
ds
push
int
and
dec
je
add
fiaddl
cmp
hlt
insl
or
je
sbb
dec
int
sub
xor
pushf
xor
adc
xor
xchg
std
pop
lahf
fcmovnbe
mov
mov
xor
push
sub
and
shll
mov
and
push
xchg
test
cltd
jne
cmp
pop
outsb
and
sub
mov
push
cmp
push
addr16
repz
incl
pop
jl
xor
icebp
pop
push
das
sbb
rcr
push
jg
ds
cltd
testl
test
mov
lcall
call
sub
mov
jb
out
ret
xor
sarb
dec
fwait
aaa
orb
cmp
push
int
imul
mov
sub
cltd
lock
test
or
mov
popf
jp
ret
shll
movsl
adc
xchg
jmp
mov
push
cmpsb
xchg
cmp
pop
inc
xchg
fs
pop
cli
rcll
inc
popl
les
clc
and
int3
fldcw
arpl
inc
lahf
icebp
mov
sbbb
jle
imul
jp
push
test
aam
bound
loopne
frstor
lcall
mov
pop
or
shlb
lds
pop
xor
jl
rcl
iret
push
mov
ss
js
hlt
dec
pop
bound
cmc
xor
shr
int3
jb
xchg
fistps
mov
pop
aam
ljmp
pop
ret
pop
inc
add
sbb
pop
push
mov
imul
cmpsb
dec
arpl
mov
push
and
out
mov
add
repz
sub
ss
and
ret
push
mov
test
cmp
iret
subb
push
sub
xchg
adc
or
lret
repnz
mov
sbb
lcall
xchg
lret
cli
mov
cmc
jne
call
jnp
xchg
test
cmp
ret
pop
inc
aas
jbe
iret
mov
repnz
mov
pusha
jns
notb
push
jp
cmpsb
loop
dec
jl
sub
adc
ja
scas
push
stos
repz
nop
shl
mov
ret
push
shrl
ljmp
adc
lret
jge
pop
push
sub
pop
out
sbb
rorl
jnp
dec
inc
into
scas
stc
push
bound
std
jle
cmp
mov
sbbb
or
shl
jp
mov
push
popf
push
sbb
imul
pop
push
cs
loopne
mov
add
iret
push
leave
sbb
outsb
inc
into
out
add
testb
enter
sub
and
xchg
cmp
in
sbb
and
hlt
ret
rorl
cs
in
jb
push
jl
hlt
enter
bound
jmp
fildl
cli
addr16
mov
dec
inc
cmp
inc
mov
hlt
addr16
lret
push
or
scas
xlat
sbb
shl
mov
lds
or
cmpsl
pop
pop
sub
aas
xlat
or
into
dec
mov
int3
test
or
or
xchg
xchg
cmp
or
insb
or
and
and
std
mov
jb
fiaddl
push
aad
js
fisttpll
push
xor
sbbl
adc
push
xor
cmp
xchg
cmp
repnz
push
xchg
jns
daa
ljmp
sarb
pop
inc
in
aad
and
inc
nop
mov
cmp
adc
iret
jmp
call
inc
out
std
nop
out
dec
and
jp
jns
fists
pusha
cmpsl
jae
aaa
rclb
pop
or
push
mov
xchg
cmp
push
roll
pop
mov
pop
sbb
cmp
mov
pop
into
mov
push
cmp
roll
mov
les
lret
loope
pop
xor
lahf
rorl
loopne
jae
xor
flds
mov
imul
jp
popa
out
jge
fimuls
or
mov
imul
subb
adc
ja
std
cmpsl
dec
push
loopne
mov
fs
fwait
push
xor
rcrb
add
icebp
inc
xchg
scas
mov
das
fisubs
mov
sbb
and
mov
mov
cld
xor
insb
cmpsb
nop
mov
aaa
xlat
mov
pop
loopne
pop
test
sbb
push
cld
cwtl
ficoml
lret
aad
popf
fisubl
ljmp
aas
add
mov
jns
or
jle
lds
adc
leave
out
pop
out
into
jle
jne
sti
into
mov
stos
xchg
shll
aaa
adc
loop
outsb
test
dec
mov
jns
ljmp
enter
stos
pop
push
iret
dec
dec
or
add
aas
jae
pop
push
das
jg
ja
push
lret
mov
push
lret
aas
ret
js
lret
sbb
lods
rorb
xchg
sub
stos
inc
jnp
aam
repz
inc
mov
or
jmp
pop
lret
xchg
sbb
hlt
pop
pop
lret
mov
popa
popf
ficomps
lahf
sbb
gs
push
jne
sarl
inc
sub
jno
aam
xor
inc
into
cmp
leave
mov
push
adcb
lret
int3
add
dec
push
mov
scas
out
mov
mov
push
loopne
push
mov
cltd
pop
adc
fdiv
sbb
lret
add
lret
jmp
das
mov
outsb
filds
ds
sahf
jae
mov
outsb
cmpsb
mov
scas
sbb
mov
in
into
flds
mov
stos
cmp
xchg
pop
out
shlb
dec
pop
adc
sub
and
sarl
shrl
sub
sbb
adc
into
sub
notb
add
lahf
xor
dec
fmul
pop
lods
fnstcw
add
lret
stos
lret
pop
sarl
xchg
dec
jne
add
fxch
push
cmp
inc
cmp
aad
jbe
in
jns
cmp
pop
insb
sarb
sbb
sub
and
int
out
lret
movsl
cmp
xchg
in
and
push
jp
push
and
adc
dec
mov
sar
xlat
mov
subl
sub
scas
outsl
iret
sti
cmp
jge
into
xchg
pop
mov
dec
decl
adc
lret
push
cmp
xchg
popf
jge
adc
rclb
pop
dec
cli
sbb
data16
int3
clc
mov
loope
fwait
add
lret
jnp
push
mov
jmp
mov
pop
xchg
into
fwait
es
xor
add
xorb
and
out
fisubl
mov
sahf
jbe
pop
mov
xchg
cmp
dec
push
iret
sbb
es
push
scas
lahf
popa
pop
or
lock
cmp
rcrl
adc
dec
lret
and
rcrb
pop
scas
les
sub
cmp
imul
aad
shll
loopne
or
bound
sub
bound
mov
repnz
cmp
adc
test
jmp
lret
pop
adc
js
cmp
or
push
push
add
loope
mov
popl
fistpl
int3
movsl
addl
pushf
jmp
mov
add
in
mov
loop
mov
push
push
push
lret
or
inc
push
and
jbe
outsl
and
xor
idivb
lahf
cwtl
rorl
ret
xchg
outsb
or
pusha
lds
fsubrl
shl
jmp
ljmp
arpl
dec
push
rcrl
jns
jns
or
pop
mov
mov
mov
mov
pop
jge
ljmp
sbb
cmp
int3
lods
mov
push
loope
add
rorl
or
dec
lret
dec
fcomi
mov
push
js
mov
xchg
loope
push
fdivrs
into
pop
pop
or
cwtl
je
pop
dec
fs
push
insl
inc
hlt
data16
rorb
xchg
push
xor
dec
jae
xchg
out
dec
mov
std
push
insb
and
inc
out
stos
test
aam
imul
aas
xchg
lds
lret
mov
shlb
sub
inc
cmc
inc
cmp
push
ljmp
daa
ja
imul
sbbl
pop
sub
bound
add
stc
dec
movsb
jnp
pop
arpl
dec
push
es
dec
out
movups
push
push
repz
xlat
daa
jg
or
ljmp
or
xchg
add
sbb
ret
bound
sbb
clc
jmp
sbb
and
int3
xchg
push
xchg
iret
jle
in
pop
movsl
into
xchg
mov
into
sti
in
aaa
fsts
lahf
outsb
out
add
jg
in
clc
xor
ret
sub
iret
xchg
cmp
and
jecxz
xchg
shll
es
xchg
inc
pop
hlt
sbb
push
xchg
gs
mov
scas
inc
pop
add
fldcw
int3
pop
rcrb
mov
cli
mov
sub
bound
jno
mov
jmp
icebp
icebp
movsl
jo
or
adc
push
cmp
ret
fisttpl
ffreep
pop
insb
mov
js
add
test
es
call
xchg
ret
out
and
push
sti
dec
in
aam
mov
mov
dec
rcrb
mov
add
dec
aas
lret
push
fildll
fucomi
dec
or
orl
stc
bound
repz
lret
sub
inc
adc
xor
mov
or
cltd
jge
push
cmpsl
sti
xorb
jle
int
lret
shlb
mov
push
gs
jmp
sub
cltd
jb
jns
and
fimull
push
ficoml
lea
jae
mov
push
ss
mov
arpl
dec
jmp
in
sarb
pop
adc
jo
mov
jmp
jle
lods
pop
fwait
adc
outsb
jne
enter
ss
mov
adc
or
out
xchg
push
mov
dec
lock
and
sti
ret
dec
sahf
jo
xchg
mov
inc
dec
fimuls
mov
dec
test
rorl
dec
loop
xor
lahf
xlat
cmc
push
ljmp
mov
pop
js
lods
fisttpl
inc
out
xor
push
mov
fdivrs
sub
pop
jp
ret
fmulp
sbb
and
push
lret
jecxz
movsl
lds
clc
jne
jmp
stos
push
xor
and
cwtl
ja
je
int
aaa
ret
stc
ret
lcall
dec
or
and
push
push
dec
pop
fidivrl
movsl
adc
dec
out
add
movsl
ljmp
inc
iret
insl
les
loop
in
push
repnz
or
mov
movsl
push
adc
mov
shlb
cmpsl
xchg
clc
push
push
repnz
fdivs
push
movsb
dec
sbb
fstps
adcl
inc
dec
push
and
inc
pop
js
sub
dec
fcoml
cmp
sub
ss
mov
popa
dec
mov
xor
icebp
testb
pop
aas
or
dec
andb
shll
div
out
inc
push
cmpsl
mov
pop
or
xchg
or
jmp
push
pushf
pop
sahf
movsb
dec
pop
jae
adc
push
fdivp
out
loopne
das
push
lret
mov
add
adc
outsb
hlt
sbb
rol
dec
mov
push
movsl
xchg
jg
fnstenv
push
jp
xor
sbb
shlb
inc
aad
and
push
aam
or
sub
mov
mov
xchg
shrw
mov
insb
xchg
jg
enter
pushf
cld
xor
add
mov
repz
clc
mov
jb
xchg
dec
cmp
xchg
push
dec
inc
pop
popf
mov
mov
jecxz
loope
hlt
push
pop
imul
mov
out
js
or
dec
inc
in
in
push
fsubrl
pop
adc
adc
aas
ja
and
push
pop
mov
std
mull
cbtw
cwtl
cmp
push
xor
mov
insb
sub
popa
into
or
push
fcomip
test
push
lahf
fsub
bound
and
pop
cmp
adc
je
cwtl
into
sbb
inc
or
cs
enter
andb
daa
scas
fidivs
push
xor
inc
lods
xor
pop
pop
pop
dec
hlt
push
xchg
scas
push
xor
fidivrs
lahf
sub
mov
lret
pop
xchg
mov
out
sub
pop
js
mov
pop
xorb
pop
fsubrl
pushf
cltd
enter
mov
dec
pushf
and
int
push
push
dec
xchg
xchg
lds
inc
jmp
pop
xor
pop
and
ret
pop
or
sti
insl
scas
shlb
out
cltd
mov
or
sbb
in
int3
stc
testb
add
mov
sub
add
test
and
cmc
sbb
cmc
dec
popa
xor
push
out
adc
sbb
dec
repz
call
hlt
jne
movsb
sbb
push
ror
aas
rol
arpl
jne
add
fisttps
cmpb
sub
sub
bound
dec
dec
xor
mov
pop
pop
outsl
cwtl
mov
dec
sbb
add
lcall
jbe
rolb
adc
sub
jl
pop
out
loope
into
pop
push
fisubl
loopne
push
stos
adc
out
xor
dec
mov
mov
int3
inc
into
dec
push
cli
out
jne
push
sub
pop
es
cmp
or
sub
mov
scas
or
cmpb
jno
mov
scas
shl
fs
jbe
or
sbb
sbb
push
out
aam
dec
and
push
out
mov
xchg
sbbl
or
idivb
test
push
dec
mov
mov
dec
loopne
jg
je
lcall
pop
std
fldl
sahf
nop
xchg
jl
lock
adc
ss
scas
stc
and
cmpsl
pop
jecxz
pop
inc
mov
mov
ret
in
js
in
rorb
mov
add
fisttpl
and
pop
sub
mov
shrl
add
xchg
cmp
sahf
sbb
loopne
cmpb
mov
daa
mov
stc
jne
or
hlt
pop
and
pop
pop
negl
jne
sti
mov
es
mov
xor
sbb
mov
push
xchg
xor
test
repnz
inc
ds
sub
loopne
pop
shlb
shl
dec
push
dec
mov
cmp
jno
mov
dec
mov
mov
or
push
call
rorl
stc
xor
lods
inc
cmp
mov
int
mov
mov
adc
imul
lahf
test
out
jne
or
outsb
hlt
movsl
mov
fidivs
xchg
mov
aam
inc
dec
outsl
pop
sbb
push
outsb
bound
cmpl
xlat
or
mov
ss
mov
int
push
addr16
cmp
dec
into
or
hlt
fsubs
or
mov
js
out
xorb
push
jecxz
int
xor
or
push
jnp
sub
mov
mov
into
push
int3
xchg
pop
loope
aaa
sti
jns
out
aam
push
xor
bound
xchg
daa
data16
and
testl
jo
je
imul
lods
adc
push
fistps
dec
loope
repnz
pop
push
add
lret
shll
adc
pop
sub
dec
inc
daa
jg
pop
push
aas
cs
push
inc
lds
jmp
addl
xor
lock
jmp
dec
mov
shlb
std
pop
xor
pop
pop
rcl
into
xchg
and
and
iret
push
or
push
les
mov
jecxz
push
shl
inc
cmpxchg
xchg
out
jnp
pop
inc
clc
xor
fidivl
xchg
arpl
clc
mov
in
call
jns
sub
sub
push
popa
dec
sub
pop
in
outsl
mov
jae
sbb
push
iret
sub
cmp
lds
add
and
jmp
xchg
movl
adc
sub
hlt
jo
orl
stos
rcr
mov
inc
pusha
subb
push
shrb
cmpsl
adc
inc
or
lea
and
aam
pop
push
cltd
enter
cmc
out
loop
inc
fadds
mov
repnz
cmp
inc
stc
cltd
xchg
push
rclb
jne
push
iret
sub
mov
push
xchg
sub
ljmp
adc
jmp
repz
inc
into
repnz
stos
inc
out
and
sbb
dec
and
jp
rcll
push
mov
cmp
sbb
push
xchg
cmp
dec
push
inc
pop
in
xchg
mov
push
inc
jo
mov
std
add
rcrb
fists
cmpsb
cmp
lds
addr16
mov
xchg
rcrb
mov
test
lret
dec
push
pushf
out
daa
in
sub
iret
inc
fs
inc
ja
xchg
shlb
mov
in
lods
or
out
jge
jmp
add
mov
or
jae
xor
in
out
aad
cmpsl
push
lret
rcrb
popa
xchg
mov
mov
cmpsb
repz
pop
or
mov
call
cmp
mov
and
inc
cmp
ds
push
add
mov
mov
xchg
sbb
pop
arpl
or
sub
adc
push
testb
shlb
sarl
aaa
xor
outsb
xor
aaa
sbb
and
aam
ficompl
arpl
inc
push
sbb
cmp
lods
stc
nop
add
lods
lods
inc
push
out
pop
movsb
sbb
lret
push
inc
adc
imul
add
push
cmp
icebp
icebp
imul
inc
ficoml
pop
les
imul
scas
pop
js
adc
pop
jl
dec
fnstenv
lret
xchg
test
shll
outsl
leave
mov
in
outsb
sti
mov
jp
lcall
xor
jne
mov
loop
mov
idivb
int
out
and
push
das
orb
fdiv
push
add
aad
mov
rcr
inc
xchg
out
lcall
pop
mov
scas
push
push
pop
clc
and
jns
push
lret
push
lds
push
bound
sub
addb
cs
in
push
dec
ljmp
xor
mov
mov
or
imul
mov
lds
js
pop
dec
arpl
pop
dec
cmp
push
push
xor
mov
es
xor
outsl
or
xchg
push
mov
xchg
lret
cmp
mov
pushf
xlat
push
flds
mov
jg
xchg
sub
mov
adc
dec
or
or
mov
jecxz
or
out
pop
in
xchg
ljmp
out
adc
mov
mov
icebp
add
cmp
das
pop
sbb
je
lret
pushf
rcrb
imul
es
loope
dec
pop
cmc
in
fst
adc
or
imul
lods
adc
mov
xchg
cmc
pushf
cmp
adc
dec
jns
xchg
inc
dec
lods
insb
jo
sbb
pop
xchg
sbb
mov
jae
cmc
clc
xchg
in
repz
ret
das
sub
sahf
mov
sbb
add
xchg
mov
dec
lret
popf
adc
cmp
int
push
fidivrl
lods
flds
cmp
test
dec
dec
cmpsb
mov
dec
lret
decb
pop
mov
ja
sbb
das
cmp
int
mov
cs
cli
xor
sti
cwtl
adc
sbb
stos
outsl
mov
lock
push
mov
stos
pop
js
bound
or
iret
cltd
addr16
int
add
xor
rcll
push
or
sub
sahf
xchg
cmp
incb
loopne
popf
pushf
and
mov
adc
out
scas
out
bound
lret
xchg
pop
cmpsb
push
inc
fnstenv
in
mov
or
lret
push
pop
aas
std
ljmp
frstor
push
sub
movsl
mov
pop
cmp
aas
inc
or
xor
loope
jo
jle
inc
icebp
add
dec
inc
fisttps
mov
pop
into
movsl
inc
inc
cltd
push
adc
pop
int3
leave
clc
mov
sbb
vlddqu
sar
push
loop
and
ljmp
loope
pushf
scas
flds
sbb
stos
cmpsb
push
test
sub
jne
pushf
sub
jae
stc
mov
mov
pusha
out
xlat
bound
mull
cmp
cwtl
les
cld
push
mull
push
aad
push
push
pop
jne
or
cmp
insb
adc
and
or
or
and
iret
push
je
lret
rcll
aam
sbb
push
add
insb
fs
shll
add
dec
xchg
ret
out
ljmp
fisttpll
mov
pop
sti
mov
mov
cmp
gs
mov
pop
loopne
push
inc
fs
fs
ss
ss
push
jp
les
push
in
push
mov
or
test
sub
pop
les
and
push
mov
imul
mov
sbb
adc
push
shrb
jp
mov
loop
jae
test
push
adc
aad
inc
icebp
pop
sub
xchg
mov
jle
mov
repnz
clc
in
mov
int3
loop
notb
mov
das
test
jp
push
adc
sub
mov
pop
jns
mov
out
mov
gs
cmpsb
add
and
push
aas
rorb
jne
cmp
jmp
imul
xlat
push
cltd
mov
dec
push
jp
mov
loopne
sbb
cmp
add
jae
imul
pop
add
stos
in
rol
arpl
or
js
push
mov
or
xchg
push
shr
in
push
das
sub
mov
pop
sub
sub
sbb
sbb
rol
and
push
je
pop
adc
loop
icebp
test
out
aam
or
push
mov
jp
or
movswl
lret
pop
cmp
xor
lcall
cmp
fcomps
push
xchg
mov
lret
lret
xchg
scas
push
enter
loop
jle
daa
negl
gs
ja
push
fistps
lods
or
pop
bound
mov
nop
xor
pushl
xchg
cmp
sbb
outsl
movl
inc
adc
dec
outsb
sub
mov
into
sbb
mov
loopne
adc
or
repz
mov
adc
pop
rcll
jmp
hlt
les
lods
lods
sub
jge
ds
xor
jo
call
push
aaa
xchg
stc
int3
outsb
in
test
mov
fcomps
sub
mov
pop
dec
dec
dec
push
rcrb
scas
xlat
cwtl
shl
and
adc
jecxz
aad
std
dec
shll
jb
movsl
iret
pop
mov
out
stc
xor
and
xlat
mov
push
pushf
fsubrs
cmp
xchg
shll
jo
pop
loop
cmp
jnp
sbb
stos
xor
or
xor
mov
std
in
mov
into
push
rcll
lret
and
pop
and
or
push
std
adc
mov
ret
mov
xlat
mov
cmp
push
jl
or
cmp
int3
loope
hlt
scas
insb
add
sbb
pop
dec
or
xor
addr16
scas
mov
sti
jg
pop
mov
mov
mov
filds
notb
jbe
lahf
aad
dec
push
and
dec
mov
cmp
push
nop
ja
lds
enter
dec
xchg
sti
pop
out
jne
mov
rorb
gs
or
xchg
lods
pop
add
std
and
and
test
jecxz
and
xor
out
pusha
mov
les
sbb
or
pop
push
cmp
or
jp
bswap
sbb
jecxz
nop
jl
mov
pop
mov
push
dec
pop
cwtl
dec
data16
iret
inc
and
pusha
pop
xor
cmp
aam
jl
hlt
ud1
movsb
or
and
sbb
mov
inc
stc
stc
xchg
aad
push
cmp
or
mov
loopne
pop
test
sahf
push
ficompl
dec
icebp
scas
xchg
mov
xchg
lret
xor
pop
test
and
loop
fmul
gs
add
inc
loopne
sbb
xchg
and
loopne
jae
std
xchg
pop
jne
pop
stos
test
jecxz
push
lcall
cli
js
adc
std
rolb
cs
in
lock
aas
cmp
jo
ljmp
jne
out
outsl
push
loope
inc
add
and
enter
dec
push
push
mov
stos
xchg
shrl
outsl
rsqrtps
in
pop
add
cmpl
pushf
outsb
lods
in
lahf
or
adc
pop
aas
jae
pop
ficompl
lret
data16
mov
push
movsb
psubd
aad
lods
pop
stc
mov
mov
movsb
adc
out
insl
xchg
mov
ror
cwtl
insl
pop
adc
mov
dec
test
pop
mov
mov
cmp
lds
sub
loop
roll
loope
and
push
cmp
shll
pop
and
in
js
nop
lods
in
jmp
mov
jl
data16
leave
cltd
pop
dec
push
aad
bound
scas
xchg
inc
xchg
push
jmp
mov
or
sub
cld
enter
jp
sbb
xchg
inc
ds
or
into
into
push
add
mov
rcr
mov
aad
jmp
test
pop
sarb
insl
bound
sbb
daa
xchg
dec
push
jmp
xlat
push
jae
and
push
loope
or
and
jne
jno
sahf
pushf
mov
mov
fnstenv
and
dec
shl
repnz
pop
orb
mov
mov
lds
xchg
cmpsl
dec
pop
mov
movsb
adc
decl
push
sub
enter
ss
push
sbb
adc
test
pop
sub
mov
loopne
xchg
wrmsr
mov
jecxz
sbb
dec
mov
jle
mov
dec
mov
out
movsl
push
pop
or
push
add
pop
mov
adc
ljmp
and
pop
sbb
ficoms
mov
mov
pop
test
cmpl
mov
sub
push
mov
cmp
rcl
push
dec
inc
lret
mov
rcrl
sbb
cmpsl
or
daa
rclb
fcmovnb
mov
pop
mov
push
lret
xchg
pusha
clc
xor
aas
cmp
movb
mov
fcomps
xchg
aaa
lahf
shrb
ja
jno
xchg
call
push
das
addr16
int
sub
and
shll
or
mov
lret
cmp
pop
neg
test
pop
or
xchg
lret
test
lret
jae
xor
roll
xchg
and
les
adc
inc
rorl
cmp
fwait
lret
pop
mov
mov
push
lret
push
test
or
pop
aam
mov
inc
xchg
dec
ds
fs
rcl
in
cmp
loope
mov
add
into
or
addr16
dec
adc
icebp
lret
pop
push
stos
repz
mov
sub
push
push
jl
push
mov
cs
lret
add
shll
jle
add
es
mov
cmp
sub
cld
adc
lods
cli
cmp
fmuls
xor
jne
lret
dec
aas
dec
add
lret
cmp
lret
xor
add
mov
cwtl
sbb
shl
dec
test
sub
lret
mov
fwait
popf
sbb
lea
hlt
nop
mov
push
ret
shr
std
push
aas
pop
jnp
sbb
add
mov
repnz
iret
sbb
push
fmul
mov
into
pop
jb
popa
or
scas
inc
cmp
pop
mov
mov
addr16
pop
mov
repnz
jne
xchg
or
pop
js
daa
into
rcll
dec
cmp
sbb
popa
repnz
mov
lods
and
jb
adc
into
test
xlat
out
mov
lret
into
movsb
mov
shrb
lcall
iret
roll
mov
push
and
pop
dec
jg
leave
or
sbb
xchg
pop
movsl
xor
test
les
cmp
dec
outsl
fsub
xchg
ljmp
lret
sbb
and
add
push
rcrb
cmp
jle
repnz
xchg
lret
add
push
movsb
mov
jns
lret
js
push
movsl
aad
lret
and
into
nop
fsubs
lret
xchg
sahf
shufps
dec
and
inc
pop
push
push
aam
add
nop
xor
jnp
into
cli
sbb
sbb
adc
or
push
sbb
insl
sti
mov
dec
fidivs
mov
xchg
fwait
aad
cmp
lret
xchg
jl
dec
lret
and
lds
xor
cmp
cmp
shrl
mov
mov
cmp
cld
adc
int
pop
sbb
clc
jg
idivb
bound
fistl
mov
mov
jl
int3
cmpsb
pop
arpl
inc
inc
xchg
clc
pushf
lret
push
or
mov
lret
push
lahf
adc
mov
into
stos
nop
testb
dec
mov
arpl
push
jle
lret
adc
fs
pop
xchg
xchg
rolb
lret
dec
addr16
add
loope
lret
xor
lret
dec
js
or
scas
lret
xchg
lret
cmp
sbb
inc
gs
lcall
adc
loop
lahf
lret
bound
lret
fs
xor
fiadds
add
sbb
lods
aam
cmpsl
lods
pop
inc
mov
stos
lret
and
mov
jno
mov
jmp
dec
dec
cmp
xlat
cmp
arpl
rol
lret
inc
xchg
mov
imul
jo
inc
fnstsw
cli
sub
into
fwait
lods
adc
loop
and
inc
sub
jns
lret
sub
mov
lods
inc
mov
xchg
lret
mov
hlt
and
inc
clc
fnop
dec
adc
and
or
mov
sarl
sar
xchg
xor
mov
shll
inc
sahf
mov
cmp
icebp
mov
mov
imul
pop
int
push
dec
lret
fbld
inc
adc
mov
add
sub
push
xor
add
mov
xchg
fsubrs
jge
outsb
lretw
je
pop
rcrl
adc
in
cli
or
popa
dec
push
lret
push
pop
into
xor
popf
mov
into
xor
cli
dec
cltd
mov
xchg
pop
dec
jmp
ljmp
icebp
adc
aas
divb
mov
xlat
xchg
jge
xor
mov
jg
jne
or
loop
cmpsb
mov
lret
nop
cmp
lret
cmp
mov
out
mov
in
xchg
repnz
insl
dec
cmc
cmp
fsubs
lret
ljmp
add
lret
cltd
sbb
lret
fstpt
and
lret
loop
cmpsb
ds
pop
sub
pop
inc
cmp
xlat
push
sbb
xchg
mov
lret
mov
pop
adc
inc
mov
fmulp
stc
loope
push
xchg
std
fidivl
mov
add
adc
rclb
push
rcl
jl
lret
pop
sbb
fwait
mov
pop
out
push
xlat
fmull
adc
movlps
push
pop
xor
fistl
lret
jno
inc
out
jbe
xor
mov
cmpsl
inc
rcrb
xorb
enter
sbb
or
xchg
lds
mov
lret
nop
and
cwtl
sbb
ss
addr16
lret
xchg
inc
jp
push
stos
ljmp
into
test
mov
dec
das
sahf
movl
adc
sub
mov
lods
lret
icebp
repz
jge
sub
enter
imul
jmp
cmp
dec
shr
mov
xchg
out
lret
push
pop
jne
icebp
lea
sarb
cltd
or
or
daa
lret
ljmp
jns
dec
sub
dec
xor
stos
jne
jnp
sbb
push
scas
mull
pop
lret
mov
xchg
ficompl
add
pop
xor
push
rorb
or
stos
adc
out
pop
test
shlb
dec
pop
stos
xor
in
mov
jge
or
adc
fs
jnp
mov
lret
cmp
fwait
push
xchg
pop
lret
sbb
ror
push
lds
dec
ret
and
jecxz
pop
aam
push
lea
pop
fcoms
dec
enter
int3
lret
pop
push
mov
rcll
sub
sbb
into
cmp
and
add
mov
xchg
lret
inc
popa
nop
xchg
xchg
sarl
xor
imul
xchg
and
mov
subl
jns
xor
jl
cli
ret
inc
scas
inc
js
fstps
xor
mov
shr
cwtl
iret
ret
popl
mov
pop
cmp
xchg
shll
mov
imul
fmulp
xchg
mov
fmuls
stos
xchg
lret
pop
sarl
enter
rolb
or
les
into
dec
push
std
jnp
lret
shl
mov
cmp
xor
rcrb
push
mov
xchg
push
cmp
inc
add
mov
lea
into
gs
rolb
mov
out
pushf
leave
push
aas
rclb
mov
mov
push
pushf
jg
push
fs
inc
in
stc
jns
sub
dec
in
inc
das
cmp
sbb
xchg
and
into
mov
sbb
lret
xchg
int3
aas
push
lds
sbb
scas
cmc
and
cmp
add
into
xor
cwtl
test
sarl
imul
jbe
push
mov
int3
push
cmp
imul
stos
pop
mov
sbb
mov
je
xchg
mov
mov
leave
xor
cmp
pop
push
scas
pusha
das
aas
dec
out
push
repnz
push
push
ljmp
lahf
aam
jne
repnz
xor
cmp
repz
pop
mov
cmp
sti
push
mov
mov
ljmp
das
jp
lock
push
sub
bound
mov
and
shl
movaps
cli
mov
int
push
test
xor
adcb
mov
push
push
sbb
je
mov
dec
adc
or
das
sub
pop
insl
pop
daa
push
lcall
lahf
sbb
jmp
js
lods
cmp
outsl
imul
in
pop
and
mov
out
or
or
sub
or
push
ljmp
mov
cmovbe
bnd
add
lahf
mov
ficoml
cmp
lea
or
test
mov
xchg
push
in
je
movsb
mov
push
out
jge
sbb
fidivrs
pop
and
insl
push
cmpsb
mov
pop
aas
nop
fnstenv
jmp
cmc
adc
adc
mov
or
int3
iret
push
pop
cmc
pushf
add
mov
pop
cmpsl
lret
inc
push
out
sti
sub
xlat
mov
out
push
gs
imul
dec
pop
jle
xchg
or
inc
cmpsl
push
push
inc
gs
xchg
mov
adc
jbe
cs
jle
cwtl
mov
cmp
shlb
popl
insb
hlt
loopne,pt
mov
aas
in
mov
push
xchg
test
lret
mov
adc
gs
clc
or
outsl
repz
shlb
push
fldenv
lret
push
pushf
and
jg
leave
jmp
or
pop
xor
dec
push
icebp
push
push
in
imull
jmp
xchg
int3
loop
dec
mov
jge
subb
lret
sub
orb
scas
mov
popf
jno
sub
sti
jecxz
pop
push
in
fcmovbe
adc
pusha
pop
mov
mov
cwtl
int3
mov
shrl
bound
les
jnp
popa
sub
lock
data16
push
push
imulb
jno
and
xchg
ret
js
xchg
mov
repnz
push
add
int3
daa
mov
mov
xchg
pop
inc
jg
or
pushf
jp
repz
in
mov
sbb
or
test
jp
into
out
cmp
bound
adc
sti
inc
int3
xchg
or
out
push
icebp
add
jns
test
inc
sbb
mov
jns
rcl
pop
cmp
int3
xor
flds
shlb
js
pop
pop
push
mov
adc
inc
push
adc
iret
add
jl
and
add
mov
add
and
dec
and
je
jmp
bound
jbe
jge
fst
xchg
pop
push
out
roll
fimull
pop
lods
jge
xchg
push
dec
sbb
or
repnz
inc
ret
rcll
push
out
jne
inc
push
jbe
addr16
mov
adc
test
adc
lods
dec
icebp
mov
pop
push
repnz
cmpsb
lret
push
dec
repz
arpl
pop
jmp
jne
xor
pop
outsl
cwtl
mov
inc
cltd
mov
test
sti
push
mov
iret
mov
jp
mov
cmp
ja
adc
clc
mov
sbb
push
decb
in
push
sbb
adc
sbb
out
push
xchg
ljmp
jp
test
in
dec
and
icebp
lcall
sbbl
add
inc
add
mov
xchg
scas
movsl
adc
or
test
or
adc
hlt
mov
add
adc
mov
mov
data16
sbb
js
dec
push
das
mov
mov
cli
lret
int
push
or
das
jle
mov
jae
dec
je
in
stos
cs
mov
mov
inc
cmp
fidivl
bnd
sbbl
cmp
and
mov
jae
push
lret
jle
inc
push
jp
mov
aas
sbb
mov
rol
xor
and
sub
pop
fs
xor
dec
lret
push
lahf
lcall
and
xor
jne
lds
ret
movsb
scas
dec
pop
pop
push
lock
insb
movsl
adc
mov
and
xchg
ljmp
in
mov
shrl
mov
sbb
out
int3
pop
pop
test
int
shll
jp
cmp
pop
out
and
lock
pusha
nop
call
and
mov
push
xor
leave
lock
sbb
int3
in
mov
push
push
sub
pop
pop
lcall
add
push
mov
inc
pop
inc
jne
pushf
mov
dec
dec
int3
je
cmp
push
or
jns
std
shl
std
xor
mov
jb
das
js
dec
add
xor
jp
cmp
jg
mov
cmpsb
ror
inc
push
dec
pop
js
ds
jmp
dec
subb
rcll
mov
popa
pop
outsl
push
push
add
hlt
js
xor
or
sbb
fwait
and
xchg
movsl
cwtl
rcrb
jae
jmp
cwtl
push
movsl
mov
mov
inc
sar
jnp
sub
push
ss
mov
mov
dec
test
fwait
dec
inc
mov
inc
pop
gs
movsl
data16
sbb
stos
out
or
popa
pop
mov
in
cmp
into
push
fmuls
sub
mov
insb
sti
push
jl
dec
pop
imul
dec
jo
shrl
js
int
lret
pop
cmp
addr16
psrlq
lds
sbb
fisubs
pop
inc
cmp
in
or
mov
iret
mov
mov
lcall
push
adc
mov
and
lahf
jmp
mov
pop
mov
out
sub
scas
mov
ret
sbb
mov
pop
addr16
cmpsb
add
or
sahf
clc
lea
sub
arpl
dec
push
fisttps
cld
pop
scas
mov
pushf
adc
int3
fdivs
jns
shl
jp
push
popa
pop
psubq
sub
push
test
pop
dec
push
mov
add
push
mov
mov
sti
adc
mov
push
pop
idivb
fst
pop
mov
pusha
ss
cmc
lret
movsb
inc
mov
sbb
add
inc
push
or
sbbb
sub
rcrw
enter
das
inc
je
adc
jo
js
xchg
and
xchg
test
cs
iret
into
fisubs
out
pop
jg
adcb
roll
shrb
push
xchg
inc
shl
sbb
into
xchg
mov
repnz
xchg
mov
xor
jmp
xchg
xchg
push
dec
jl
mov
pop
cmc
xor
iret
push
push
lret
out
mov
sbb
jns
mov
add
push
dec
mov
les
and
test
mov
cltd
pop
jbe
and
jne
pop
jns
inc
lret
rcrb
pop
outsb
push
and
sub
or
mov
scas
dec
xchg
popf
jmp
push
sub
jp
mov
fnstenv
das
add
stc
aas
push
inc
icebp
push
push
dec
out
xor
stos
fidivs
mov
pop
push
adc
add
inc
int3
lds
lock
out
xchg
test
clc
dec
int3
dec
mov
pop
cmp
or
jmp
and
dec
jmp
rcr
out
rcrl
es
mov
dec
or
jno
stos
mov
inc
pop
out
cmp
leave
cs
outsb
test
sbb
pop
xchg
sbb
adc
fmulp
lods
xlat
mov
sbb
sub
in
cli
mov
ljmp
out
lds
lcall
bound
test
fstl
insb
insl
out
adc
sbb
jne
push
or
xchg
repz
xchg
aad
test
pop
lds
and
xchg
fsubl
iret
cmp
jle
cltd
sbb
sbb
cmc
fwait
mov
mov
push
or
adc
sbb
loop
pop
dec
xchg
les
dec
cltd
jbe
cmpsl
repnz
inc
loope
sahf
mov
movb
movsl
mov
in
and
dec
scas
out
push
jmp
push
sbb
repnz
fsubs
and
out
push
popa
shll
mov
shll
cmp
stos
mov
pop
loop
lret
in
jno
sbb
lcall
pop
les
cmp
inc
loopne
adc
sbb
adc
je
jns
fs
sbb
loop
push
mov
xchg
fidivs
mov
xchg
test
roll
cmc
adc
lahf
cli
daa
mov
pop
bound
hlt
movsl
mov
xlat
imul
pusha
lahf
repz
aad
push
or
sub
idivl
orl
jl
push
mov
imul
je
icebp
sbb
fucompp
xor
or
push
mov
sub
sub
adc
jb
mov
cld
jge
ljmp
mov
jo
popa
xlat
push
pop
push
mov
fs
int3
sub
inc
outsl
sti
jmp
pop
pop
dec
stos
shr
mov
fsub
sarb
pop
notb
jecxz
mov
or
out
dec
push
repnz
cmpsb
imul
or
xchg
cltd
lcall
inc
jne
jo
dec
sub
pop
pop
xor
push
je
inc
faddl
inc
jge
push
sbb
pop
movsb
push
roll
mov
ss
mov
out
mov
or
mov
int3
lock
push
mov
out
bound
fs
repz
rorl
jae
add
mov
pop
cltd
xchg
addr16
adc
int3
mov
movsl
popa
rcrb
cmpsb
mov
and
xor
jp
roll
clc
pop
clc
outsl
movsl
enter
insl
lods
shrb
jmp
outsl
add
or
pmulhuw
add
mov
mov
push
pop
xor
sti
movsb
and
js
and
in
and
mov
jns
loopne
sbb
jne
fbld
js
pop
pop
js
pop
insl
or
mov
loopne
push
mov
inc
pop
out
lahf
popa
fs
xor
callw
inc
sub
scas
mov
into
xlat
mov
imul
les
jle,pn
clc
stc
lret
lea
mov
sti
jp
sarb
into
scas
dec
pop
cmp
mov
push
xor
jg
test
lds
movsl
ret
out
rcrl
int
pop
mov
fldl
iret
inc
push
or
movsb
dec
data16
xchg
out
shr
push
in
mov
mov
les
mov
xlat
arpl
add
mov
movsb
pop
jge
andb
daa
int
dec
inc
mov
push
out
ret
push
sub
loope
movsl
rcr
add
iret
pop
and
repz
pop
rorl
in
loop
btr
out
and
pop
or
cmovge
andb
shll
pop
pop
arpl
xchg
out
jno
ds
test
rol
xor
push
pop
inc
xor
lods
add
xchg
cmc
dec
std
dec
lock
fisubrl
sbbl
imul
test
cltd
nop
push
sub
ficoml
push
stos
insb
xchg
iret
cmp
push
adc
aad
push
lret
adc
jmp
fsub
adc
or
loopne
shll
sub
pop
or
jp
test
scas
sub
pop
xor
ds
aas
inc
shlb
xor
dec
and
ja
test
dec
xchg
leave
outsb
pop
cmp
andl
icebp
cld
dec
push
mov
stos
repnz
cwtl
sbb
mov
in
mov
adc
dec
or
lahf
adc
bound
not
xchg
iret
and
mov
imul
shl
shlb
jmp
test
sbb
cmpb
out
or
es
dec
jo
dec
frndint
pop
inc
sub
ret
fdiv
jge
repnz
push
insb
les
mov
ss
jno
mov
and
and
lret
das
test
xchg
mov
gs
fidivrl
adc
mov
or
jo
loop
mov
mov
stc
sub
hlt
sub
mov
inc
dec
int
push
fs
pop
jg
push
or
jl
cmp
ret
jecxz
push
mov
outsb
cwtl
mov
and
inc
fs
pop
shrb
outsb
sub
sbb
cltd
sub
jmp
push
out
rcrb
iret
xchg
push
adcb
insb
pop
loop
pusha
dec
add
sbb
and
cmp
fdiv
mov
dec
shr
or
cli
and
lahf
out
add
cltd
cs
lret
nop
jg
je
outsb
mov
xor
lret
adc
mov
hlt
and
jg
inc
pop
push
sub
mov
in
jge
adc
ficoml
fldenv
ss
fisubl
test
mov
sbb
jmp
in
cmpsb
and
aas
jae
xlat
lahf
mov
sbb
and
in
aas
gs
cmpb
stc
adc
mov
movsl
into
scas
and
xchg
push
mov
sub
and
les
add
repz
pop
rcll
movsl
filds
push
inc
ss
pop
push
js
into
dec
loopne
mov
mov
mov
in
mov
filds
andl
icebp
lods
stos
mov
rclb
popa
fcmovnb
ret
movsb
jg
popf
scas
pop
adc
dec
inc
rcr
and
push
inc
scas
faddl
addr16
loope
repz
cld
test
out
int3
mov
push
jl
cmp
aad
repz
arpl
push
jecxz
mov
divb
lahf
mov
ja
shrb
enter
addb
push
jg
hlt
pushf
std
test
and
outsl
xor
push
pop
and
push
mov
mov
xor
ficomps
mov
cmp
inc
mov
fmul
ret
bound
mov
mov
imulb
mov
inc
pop
lret
fdivl
and
fucomip
aas
fdivrp
sarb
dec
mov
add
jns
mov
cmpsl
in
push
jecxz
mov
out
jae
inc
test
aas
loop
test
icebp
sar
mov
pop
and
push
lahf
cmp
pop
mov
or
inc
jmp
lahf
jne
sti
cmp
fs
jns
sub
movsb
scas
jmp
test
inc
lret
scas
pop
insb
pop
push
arpl
mov
insb
pop
popf
jo
or
cmp
push
cmpb
push
lcall
dec
pop
xorb
jle
in
into
xchg
pop
jo
test
xchg
lds
and
push
jae
movsl
push
push
pop
out
jecxz
rclb
push
hlt
mov
outsl
mov
push
mov
fimuls
dec
dec
lret
pop
aaa
push
lret
sbb
lret
loop
sbbl
mov
lret
sub
mov
std
dec
push
pusha
jmp
fld
shll
lret
mov
mov
add
stc
aam
dec
out
inc
inc
rol
mov
or
add
add
ficoml
hlt
imull
rcl
test
xor
daa
ljmp
jle
clc
insl
xchg
repnz
test
test
loop
lret
andl
lods
in
xor
lret
stos
inc
int
lahf
js
push
sub
cwtl
mov
cwtl
lret
and
lret
mov
scas
fisubrl
ret
mov
ror
clc
lea
insl
fnsave
out
gs
inc
pop
bswap
and
cmp
movsb
out
insb
lret
stos
mov
adc
mov
cmp
iret
push
fldenv
fs
repz
xor
xchg
push
dec
jno
stos
stos
cs
dec
shlb
imul
hlt
mov
lret
add
shr
lret
shll
scas
aas
adc
push
push
dec
push
movsl
mov
sub
push
stc
mov
loopne
out
das
sub
je
mov
jp
sarl
ret
cmp
jb
pop
mov
lret
xchg
mov
out
mov
add
jecxz
aam
pusha
sbb
jg
pop
add
cli
js
mov
mov
add
cmpsl
das
in
and
inc
lret
xor
inc
pop
xor
mov
mov
cli
in
sti
xchg
mov
adc
cli
shrb
test
cld
or
inc
adc
and
or
sarl
inc
iret
lret
mov
dec
clc
lret
and
mov
mov
pushf
sbb
lods
xchg
jle
lret
push
nop
in
test
ljmp
jmp
or
lcall
or
dec
xchg
add
ljmp
jecxz
neg
repnz
lret
push
fnstsw
mov
or
jne
fs
std
popf
xor
popa
inc
xchg
inc
and
addr16
lret
jno
mov
arpl
cmpsl
stos
out
stc
lret
pop
push
out
pushf
adc
push
cmc
popa
test
ficompl
in
ja
sahf
int
pop
lret
push
arpl
sti
mov
lret
lcall
shll
aad
mov
lret
inc
aad
xor
out
or
cmp
ffreep
fimull
push
gs
insb
cltd
inc
xlat
lret
enter
popa
jne
pusha
lahf
lret
jo
add
or
aam
jle
lods
sbb
xchg
out
ss
mov
push
mov
les
xlat
inc
stos
cmp
dec
lret
push
sub
cmp
cli
mull
cmp
push
push
push
loop
scas
xchg
aam
clc
xchg
pop
and
movsb
in
pushf
xchg
adc
xor
mov
and
pusha
iret
or
cld
xchg
cmp
les
pop
rcr
mov
lret
enter
fisubl
daa
lret
popf
into
imul
callw
cmp
outsb
pop
xchg
es
icebp
cwtl
ror
jg
or
ljmp
push
cmp
arpl
sarl
lret
xchg
xchg
pushf
adc
outsb
mov
mov
dec
cli
mov
inc
mov
dec
mov
in
sbb
xchg
sub
stos
jae
pop
rcl
cmp
lret
adc
pop
imul
xchg
lahf
cmpsl
outsb
jge
cli
rol
add
mov
inc
jle
cli
jp
lret
mov
iret
lret
mov
push
loope
cmp
fcomps
je
adc
call
out
mov
sbbl
lret
das
cli
dec
fisttpll
int3
sahf
jmp
inc
fwait
stc
fmul
mov
shlb
sub
insl
lret
mov
in
jge
stc
push
in
lahf
push
ja
sub
ret
lret
push
jg
test
popa
cmpsl
bsf
and
jle
lret
and
adc
adc
stc
mov
lret
icebp
ds
or
popa
sub
scas
sbb
rcrb
icebp
lret
jp
and
push
mov
lret
add
aad
leave
mov
popa
dec
xlat
and
ljmp
ficompl
stc
lret
mov
push
mov
adc
fwait
shr
lret
and
pop
or
fiadds
lret
jge
mov
sub
mov
jl
repz
xchg
mov
test
outsl
dec
sub
sbb
jmp
int3
jl
inc
in
or
xorb
sub
lcall
int
cmp
bswap
loopew
xchg
bound
jl
inc
cmp
popa
je
jnp
aad
in
shrb
pop
fcom
dec
or
into
shlb
out
xchg
fisubrs
cmpsl
sbb
orb
mov
add
pop
mov
sub
jbe
test
or
fmuls
rclb
mov
clc
popf
rcll
and
mov
lret
add
adc
push
pop
lods
push
cli
xchg
inc
and
ljmp
mov
aam
scas
das
add
cltd
cmc
and
mov
xor
xchg
sbb
lret
pop
in
cli
lea
mov
mov
out
outsb
adc
popf
insl
jno
orb
add
sbb
jo
scas
lret
jmp
cmp
lods
xchg
outsb
in
inc
movsl
push
push
sbb
test
lret
jmp
xchg
imul
xchg
pop
test
xchg
arpl
adc
test
bound
mov
xlat
movntq
out
mov
mov
push
lret
call
pop
lret
dec
or
pop
adc
add
cmp
cmp
add
lea
lret
in
rolb
adc
jmp
or
stc
leave
nop
lds
es
inc
or
cmp
mov
aad
cmp
nop
aam
adc
stos
test
mov
push
mov
das
inc
adc
lret
popa
xorb
cmp
and
push
pop
into
iret
adc
imul
rcll
mov
mov
nop
cmp
mov
lret
scas
test
cmp
sti
inc
jp
clc
lret
push
adc
in
repz
outsl
lea
push
in
and
mov
adc
cli
pop
daa
lret
scas
sar
rorl
lret
fisttpl
add
xor
lods
xchg
mov
negb
dec
or
test
sbb
nop
xor
lock
test
insb
into
push
xorb
movsb
push
cmp
lret
jp
or
sub
test
fnsave
jo
lret
inc
mov
lret
jns
mov
into
dec
dec
fimull
pusha
lret
notl
ficoml
out
fsts
jb
addr16
cwtl
push
scas
pop
pushl
fnsave
in
mov
daa
iret
jne
dec
cmp
aaa
pop
ds
push
shrb
pop
cld
pushf
xor
mov
insl
jb
lret
nop
mov
into
mov
rorb
cmp
lret
jl
jmp
aaa
inc
lret
xchg
out
js
or
add
lret
push
dec
inc
lock
mov
lea
mov
xor
out
test
pop
mov
int
xchg
adc
mov
and
xor
fiadds
jl
leave
sub
add
mov
lret
add
dec
mov
or
xchg
or
dec
mov
cs
imull
lret
cmp
push
cmp
pop
shr
or
rorb
sbb
enter
outsb
leave
add
lock
pop
ud0
lret
pop
mov
mov
push
lcall
lds
leave
add
mov
cmp
xchg
fs
push
or
inc
jbe
imul
xor
dec
cmpsb
stos
xchg
cmc
xor
lret
mov
lcall
js
mov
push
lret
hlt
lds
clc
sbb
xchg
popf
add
fcmove
dec
mov
into
add
pop
in
mov
xor
ficomps
mov
mov
jmp
aam
sbb
push
jno
inc
dec
or
or
fstps
lock
push
pop
dec
adc
daa
ja
jg
mov
stc
cmp
mov
adc
jne
leave
clc
cmpsl
or
addb
sub
fadds
mov
jmp
xlat
pop
sarl
ret
mull
or
push
cltd
pop
or
cltd
sti
rorb
movsl
xor
mov
sti
aam
sbb
loope
pop
or
push
xor
popf
mov
movsl
in
icebp
mov
out
xchg
jmp
dec
push
xchg
or
aam
pop
inc
stos
nop
std
jg
out
xchg
xchg
adc
repnz
sbb
js
ja
cmp
jns
nop
addr16
or
into
sbb
push
mov
pop
fisubs
xor
jno
adc
push
mov
xchg
out
insl
pop
js
sbbb
arpl
ss
jl
aaa
jle
xchg
mov
rolb
pop
cmp
and
mov
repnz
adc
or
jne
leave
rcl
push
add
adc
cld
push
and
xor
adc
mov
adc
fbstp
ljmp
addr16
xor
test
mov
dec
in
pop
xor
aam
pop
outsb
stos
adc
xchg
pop
adc
mov
lods
pop
mov
insl
add
aaa
xchg
scas
sti
push
mov
loope
jle
aas
push
xor
or
mov
mov
dec
pushf
and
jnp
mov
testl
jmp
add
call
fisubrl
gs
decb
add
insl
sti
rorb
push
add
push
xor
and
out
mov
mov
xlat
lods
stc
jb
xchg
push
inc
adc
scas
xchg
enter
or
sub
leave
fnsave
ffreep
mov
loopne
ja
bound
jno
int
dec
cs
jl
jle
aam
sarl
negb
ret
popf
cmp
fs
pop
loop
imul
cmp
data16
mov
add
push
ljmp
pop
push
insb
out
fiadds
and
sub
and
cmp
or
lods
pop
loop
aad
push
mov
leave
bound
aam
rorb
pop
push
dec
dec
mov
hlt
mov
push
iret
repz
pop
sar
add
fnsave
fisubrs
les
xchg
inc
cmp
cmpsl
fdiv
cmp
jne
sub
jne
push
sbb
lds
jle
adc
iret
cli
xchg
jnp
xchg
aam
mov
fidivrs
push
bound
sbb
xor
repnz
cld
inc
sub
iret
inc
sbb
sub
jmp
jp
jg
pushf
scas
test
xor
cltd
xor
lods
movsb
xchg
movsb
or
cmp
pop
xchg
out
rclb
movsb
or
mov
faddl
ss
xchg
aam
jp
jl
stos
pop
pushf
repnz
sub
ret
cwtl
test
sti
data16
imul
daa
add
mov
xchg
dec
lods
out
jbe
cmp
leave
sti
dec
mov
aam
shrb
orl
mov
push
cs
jb
int3
ret
rcr
into
inc
inc
in
and
mov
push
lahf
outsb
insl
loop
push
jle
push
adc
mov
into
dec
push
sbb
and
mov
out
pop
add
mov
push
jbe
ror
mov
pop
scas
xlat
sbb
pop
repz
sub
push
mov
int3
inc
inc
incl
jg
sbb
pop
mov
outsl
out
js
mov
mov
or
int3
sahf
push
push
mov
repz
cmp
out
adc
outsb
mov
lret
repnz
stos
fbld
movsl
icebp
pop
movsl
arpl
push
idivl
cmp
push
or
scas
and
stos
nop
jle
mov
xrelease
push
mov
scas
and
movsl
mov
test
mov
fs
inc
jnp
int
jp
xor
push
lods
add
dec
dec
movsl
or
jno
dec
gs
es
dec
ret
int
addr16
imul
int3
popf
sub
jp
jg
pop
pop
into
int3
xorl
out
pop
sub
or
dec
adc
push
mov
cltd
mov
in
call
repnz
xchg
fildl
or
pop
add
and
sar
jmp
les
bound
xchg
pop
jg
adc
jp
push
or
push
ret
movsl
test
mov
pop
dec
cmp
in
dec
sub
pop
sbb
inc
push
cmpsb
mov
scas
scas
cmp
jg
mov
aam
cmp
adc
dec
sbb
aaa
repnz
pop
mov
push
insb
orl
daa
repz
mov
cmpsl
mov
or
push
pop
imul
sub
pop
jmp
inc
sbb
sti
push
dec
sbb
inc
mov
jle
xchg
and
aam
mov
fistpl
add
inc
dec
int3
xchg
fcmovnbe
mov
les
les
popf
jne
movsl
dec
cmp
jns
rol
lcall
push
dec
push
or
call
int3
cmc
push
loop
inc
dec
push
in
mov
xchg
adcb
jecxz
bound
sbb
cmpsl
aam
mov
mov
fucomp
pop
jns
les
bswap
lds
dec
stos
mov
lods
gs
sbb
mov
mov
rol
cltd
lods
jne
bswap
pop
icebp
adc
and
xlat
lret
sarb
repnz
mov
mov
iret
add
scas
daa
jle
push
fld
xchg
js
iret
pop
push
lret
mov
cltd
mov
lret
aad
out
inc
jae
xchg
jmp
or
cli
add
je
inc
cltd
mov
inc
cmp
sti
xlat
add
push
nop
inc
xor
jmp
roll
push
jecxz
in
lea
jg
scas
iret
dec
leave
push
int
or
and
arpl
cli
mov
inc
add
out
icebp
dec
outsb
sub
mov
in
push
xchg
imul
and
dec
stos
sub
dec
popa
popa
mov
ret
or
ficomps
sti
lds
dec
movsl
outsl
shl
jo
cli
sbb
fistl
cld
push
push
mov
imul
jg
subb
inc
xchg
push
mov
mov
dec
pop
inc
ljmp
lret
ret
jg
mov
clc
lock
push
mov
fimull
pusha
inc
repz
jns
cmp
push
lret
push
dec
rorb
xchg
cltd
mov
mov
pop
push
xchg
sub
dec
ret
and
inc
mov
roll
out
jnp
sar
or
add
and
data16
mov
pop
inc
xor
mov
negb
andb
pop
mov
les
pop
lds
mov
jne
xchg
les
xorl
sub
pushf
fildll
mov
imul
and
jge
stos
jae
adc
xor
push
push
xchg
test
mov
adc
cmpsb
adc
xchg
jl
sti
in
std
sbb
adc
scas
iret
push
sti
les
mov
pop
stc
ljmp
in
sub
test
fistl
loop
pop
dec
insb
add
pop
into
pop
pop
pop
sub
orl
sbb
mov
call
inc
sub
mov
push
fistpll
pusha
push
mov
clc
je
into
out
popf
push
fs
and
outsl
rorb
push
pop
jge
fucomp
adc
mov
push
lret
pop
sahf
mov
pusha
cmp
adc
inc
imul
or
pop
cmp
fs
push
push
sbb
scas
aad
push
je
in
ljmp
adc
insb
leave
adc
addr16
mov
jns
jmp
pop
test
int
mov
rclb
cmp
pushf
add
leave
sti
adc
notl
mov
out
push
or
test
xchg
jne
cmpsl
pop
sbb
lret
xor
loop
mov
dec
pop
clc
outsl
and
xor
scas
mov
ljmp
mov
in
sub
cmpsb
and
repnz
cltd
mov
pop
lds
inc
push
add
pushf
movsl
jg
jl
xlat
cmp
cmp
rclb
push
lock
adc
push
sub
mov
dec
xchg
xchg
push
call
shr
adcb
sbb
repz
js
call
movsl
pop
or
movups
leave
aam
dec
aas
in
adc
iret
fcomps
add
fldcw
cltd
inc
jmp
pop
mov
fsubs
clc
scas
xchg
pop
xor
rcrb
push
add
outsb
push
push
loope
and
mov
fdivrl
xlat
rclb
out
out
pop
push
xlat
mov
divl
or
add
mov
iret
cltd
mov
or
sub
push
cmp
xchg
push
dec
or
test
sahf
xchg
dec
sbb
pop
push
xchg
hlt
mov
mov
fistl
arpl
push
gs
adc
outsb
cmp
pop
jp
test
hlt
push
pop
push
stc
mov
mov
sbb
sbb
xor
into
dec
pop
mov
mov
gs
jg
outsl
fsubrl
in
repz
enter
and
cmc
filds
xor
xor
pushf
xor
fiaddl
mov
push
jle
idivl
push
rorb
fcompp
mov
popf
dec
xor
pop
repnz
mov
mov
rcll
pop
aaa
sar
mov
inc
rcrb
jle
jmp
mov
into
decb
and
lods
adcb
outsb
push
jecxz
mov
cmp
icebp
test
fldenv
sbb
out
xchg
cmp
or
cs
push
shrb
push
lds
inc
jb
mov
push
mov
sub
hlt
fisubrl
pop
push
ljmp
mov
xchg
jae
sti
rcr
push
stos
sbb
xchg
cmp
inc
hlt
stos
xor
fucomp
fstps
mov
sahf
xor
push
gs
cmpsb
aaa
jg
insb
sbb
mov
push
ja
adc
dec
aam
lds
lret
and
fidivrl
ja
xchg
rorl
jecxz
jmp
xor
out
in
mov
push
mov
mov
outsb
pop
aas
jae
popa
js
push
ja
inc
dec
adc
in
je
mov
adc
mov
imul
pop
pop
add
or
daa
cli
rclb
fildll
dec
call
push
orb
loop
sti
test
cmpsl
sub
dec
imul
into
cmpsl
adc
lcall
rorb
push
in
push
in
mov
xrelease
sti
outsb
xchg
enter
out
out
imul
imul
clc
outsl
or
test
jbe
into
js
sarb
xchg
int
mov
xchg
lret
jae
push
adc
inc
out
pop
rorb
add
sub
movsl
sub
daa
pop
lds
xchg
out
imul
dec
aam
int
cmpsl
filds
pushf
and
xchg
inc
das
popf
push
lods
fwait
xchg
and
or
xchg
sar
pop
xchg
mov
es
lahf
pop
and
push
fwait
dec
mov
jmp
es
test
divl
sub
jmp
or
jl
fstpl
aas
or
push
lret
lods
pop
lret
pop
jmp
jge
pop
pop
push
mov
aas
out
in
lahf
test
je
jl
fstpl
je
lret
pop
xor
xchg
lret
sbb
mov
jp
sub
jns
or
push
shll
adcl
stos
mov
jmp
lahf
pop
jne
repz
push
sub
or
das
loope
inc
stc
mov
aad
and
rol
jbe
inc
mov
push
jne
or
icebp
push
or
fsubs
mulb
push
jne
cs
sub
push
loop
shll
sbb
sti
push
dec
dec
gs
jmp
sbb
je
pushf
ja
ljmp
xchg
fdivrl
xchg
and
ret
bound
loopne
xchg
and
and
shrb
call
cwtl
imul
dec
jns
push
aaa
loop
jmp
or
pop
andb
push
std
xor
xor
repz
xchg
or
pushf
les
mov
mov
inc
mov
int3
push
push
pop
pop
mov
sbb
mov
out
rcll
pop
push
aaa
jo
into
adc
je
and
in
inc
dec
jecxz
outsb
test
pop
into
les
jle
cmc
scas
loopne
xor
insl
inc
shll
movsb
shr
into
orl
or
adc
xchg
mov
fwait
mov
jnp
jmp
test
movsb
pop
and
hlt
addr16
loop
push
ret
jne
negl
xchg
push
sbb
add
into
pop
and
jmp
dec
or
push
and
pop
ffreep
sbb
out
mov
jecxz
dec
inc
jmp
and
popa
sub
ja
jbe
cmc
mov
sub
sub
iret
or
insb
ret
push
inc
loop
lahf
in
dec
sbb
fsubl
cli
test
cltd
adc
adc
push
aas
testl
sbbl
hlt
push
push
fwait
loopne
lcall
enter
mov
push
inc
add
fnstenv
int3
divl
shlb
sub
imul
mov
and
jno
lret
dec
aaa
bound
out
cmp
popf
pop
xchg
mov
pop
out
loop
xor
outsb
leave
outsb
push
adc
mov
jmp
sbb
or
mov
add
ljmp
out
jne
test
rolb
repz
or
filds
sbb
push
je
shl
testl
pop
or
adc
iret
xchg
push
loop
insl
add
test
dec
sarl
out
pop
pop
xlat
daa
sub
cli
int3
pop
in
adc
push
mov
out
sahf
xor
fldcw
lea
aaa
push
cmp
aas
fimull
mov
pop
and
and
aas
push
mov
lahf
add
arpl
add
and
sbb
shl
das
inc
xor
pusha
pushf
in
sbb
cld
mov
roll
ljmp
test
mov
push
cmp
ss
iret
lahf
mov
rcrb
jno
sbb
push
das
adc
into
mov
ss
fldcw
dec
pop
pop
mov
pop
test
rclb
xchg
cmp
push
mov
push
test
sub
hlt
sbb
push
and
cmp
movsb
call
lea
sbb
sarl
mov
in
fistl
push
ss
loop
in
mov
ja
mov
out
sub
sbb
repnz
mov
in
pop
or
js
add
jg
fiadds
mov
scas
add
nop
pop
lret
xor
xchg
cmp
imulb
jno
pop
insl
aad
push
shrl
add
int3
js
popa
pushf
fcmovne
push
sbb
pop
dec
or
test
notl
dec
xchg
imul
lods
lcall
addr16
addl
adc
shl
pop
dec
mov
in
pop
mov
lcall
push
addr16
lcall
cmc
adcb
adc
stos
lret
in
insb
pop
push
sub
push
inc
push
out
pop
lret
add
push
out
mov
push
cwtl
or
jp
shrb
cmc
das
lahf
ljmp
cmpsb
gs
push
and
lret
jge
push
idivb
aad
inc
jnp
sub
shrb
pop
out
dec
fstpl
aas
mov
imul
and
sbbb
xor
adc
or
and
and
xchg
pop
mov
int
loopne
push
scas
mov
pop
jb
add
out
pop
sub
add
pop
test
push
pushf
cmp
in
iret
jg
daa
sbb
cltd
int3
add
das
jle
int
rolb
push
adc
int
rcr
or
arpl
and
aas
push
fs
mov
jmp
fnstenv
js
pop
fabs
push
hlt
cmpl
adc
jmp
lods
aas
mov
cmpsb
jns
out
sbb
scas
fisubl
push
leave
les
sbb
mov
push
mov
push
ficoml
mov
imull
dec
mov
cltd
or
int
jmp
or
mov
push
jne
shrb
xchg
dec
or
out
in
lock
das
pop
out
mov
filds
or
outsb
push
insb
jo
ljmp
out
jo
or
jmp
jp
xor
outsb
push
aad
cmp
repz
xchg
lds
inc
pop
dec
mov
jb
pushf
sbb
dec
push
bound
adc
jns
push
iret
push
cmpb
pop
nop
jno
xor
es
arpl
pop
push
test
push
jle
jne
fwait
xor
sub
sub
lahf
shlb
inc
ret
mov
mov
mov
push
push
mov
pop
push
jmp
sbb
ja
mov
jp
mov
mov
push
movsl
xchg
pop
stos
pusha
fadds
ret
test
xor
mov
aaa
adc
dec
xchg
cmp
leave
jmp
jbe
jg
ret
mov
cmpsl
pop
push
gs
or
or
sub
push
cmp
pop
sbb
jecxz
stc
push
jle
fs
fs
cmp
popa
push
sbb
loop
hlt
adc
das
dec
repz
pop
xor
push
rorl
daa
into
sub
mov
sbb
fimuls
shlb
push
xor
sbb
orl
clc
addr16
or
jle
cmp
int
pop
frstor
out
fs
push
ljmp
mov
iret
jecxz
adc
pop
scas
popf
shlb
mov
mov
out
mov
cmpsb
outsl
cmp
push
test
mov
pop
scas
xchg
sbb
pop
insb
les
repz
out
rolb
movsl
mov
std
xchg
sarl
mov
test
in
fsubrp
int3
pop
cmp
mov
jmp
dec
aam
inc
fisubrs
jle
movq
orl
fsubrs
test
bound
mov
mov
ret
jecxz
mov
dec
xchg
jnp
roll
inc
fs
push
dec
push
sarl
in
pop
test
call
inc
loope
adcb
andb
cmp
pop
ljmp
sub
pop
mov
sbb
ret
outsb
dec
loop
mov
sbb
sub
ljmp
repnz
add
in
or
xor
stos
mov
adc
push
mov
xor
adc
xchg
xchg
enter
lahf
repz
jecxz
mov
jg
push
inc
scas
shll
test
sbb
subb
or
int3
xor
shlb
insl
and
out
fidivs
push
xor
in
lods
and
or
popa
int
cmp
pushf
pop
das
and
imul
lods
dec
mov
xchg
mov
or
jne
and
jecxz
test
push
in
rclb
xor
out
fsubrp
filds
push
mov
pop
mov
in
pop
sbb
cmp
pusha
divb
dec
jns
jne
arpl
xchg
pop
sub
jo
roll
sahf
adc
push
out
imul
pop
dec
pop
mov
shll
out
outsb
or
adc
push
scas
or
sbbb
addr16
popf
xchg
out
cmp
rep
cmpsl
dec
iret
filds
sbb
in
sbb
push
shl
lahf
aas
xorb
xor
sbb
fists
jmp
out
pop
sbb
xchg
mov
lea
pop
insb
lods
aas
ja
sbb
out
fisubl
rcll
test
sbb
and
inc
mov
test
adc
lods
lds
mov
or
mov
sti
rclb
jno
outsl
out
and
dec
inc
pop
test
cmp
movsl
mov
in
ljmp
push
cmp
pop
lret
cmp
shr
xbegin
dec
ror
mov
jp
in
dec
push
jl
gs
inc
popa
push
dec
push
adc
sbb
scas
sti
sbb
daa
aam
movsb
mov
divl
bound
cmpsb
aas
push
and
in
inc
xchg
test
sbb
jno
xchg
inc
or
push
int3
cmp
xor
pop
sti
xor
cmp
dec
in
lock
xchg
and
sub
pop
mov
or
mov
xor
jmp
ja
hlt
cmp
mov
mov
int
jno
lds
or
lahf
dec
and
dec
insb
push
xor
mov
push
dec
inc
repz
or
es
into
mov
jae
scas
inc
test
movzwl
inc
lea
mov
mov
test
pop
sub
add
cmp
aas
xor
lea
addr16
pop
xchg
test
sbb
dec
adc
and
xor
das
cmpsl
sbb
add
inc
push
je
push
insb
mov
sub
adc
outsw
imul
inc
nop
push
sub
add
ficompl
insl
xlat
pop
mov
das
lds
lods
rcl
js
and
dec
jp
jle
mov
mov
outsb
mov
mov
cmp
in
outsl
pop
aaa
loopne
and
jb
scas
jns
arpl
push
mov
out
mov
rolb
inc
rorb
mov
cmp
pop
mov
mov
dec
add
test
inc
adc
in
out
ds
xor
or
rcl
xchg
push
movsb
mov
mov
mov
lahf
xchg
ret
jmp
or
sti
mov
icebp
pop
iret
inc
fists
mov
pop
icebp
scas
out
and
jae
jo
rol
aaa
dec
out
fists
popa
ret
out
lahf
mov
loope
jecxz
pop
push
mov
repz
lcall
ljmp
rorl
fldenv
cld
ficomps
loope
loopne
mov
sbbb
jns
dec
sub
outsb
sbb
shlb
outsl
js
fimull
cmc
stos
shr
lock
push
ljmp
imul
pop
stc
and
lret
dec
xchg
sbb
lock
pop
inc
xor
cmpsl
in
xchg
out
jne
aas
cltd
cmp
mov
out
jle
mov
clc
aas
imul
rolb
out
push
cmc
fnstsw
push
rolb
imul
add
or
imulb
push
shlb
jmp
adc
mov
test
pop
mov
or
xchg
xchg
fists
dec
mov
mov
das
xchg
lds
pop
jns
dec
push
sbb
sbb
dec
shrl
xchg
push
bound
mov
sti
push
adc
dec
test
sbb
adc
jmp
fistl
mov
xchg
fildll
test
enter
adc
orb
es
shlb
dec
sub
fsubp
add
out
sarb
or
hlt
js
push
fdivs
jae
sbb
push
cmp
pop
lea
sbb
push
loopne
bound
pop
inc
jg
mov
mov
pop
lea
inc
fsubrs
pop
fiaddl
sbb
jb
push
mov
cli
dec
test
movsl
scas
aaa
cmc
xchg
rcll
mov
cmpb
mov
mov
cmp
adc
cmp
pop
sub
pop
cltd
leave
adc
loope
shl
adc
jg
aas
loope
or
or
sbb
push
jne
mov
push
jmp
push
xchg
in
and
data16
into
fidivl
outsl
jne
repz
push
dec
push
mov
aaa
sub
pop
cmpsb
inc
sarl
andl
out
jo
rcr
jmp
cltd
xlat
test
push
mov
push
js
inc
pop
addr16
or
inc
adc
bound
or
cmpsl
mov
mov
cld
addr16
push
cmp
push
or
push
jge
mov
aam
mov
roll
dec
out
daa
add
sub
test
cmp
jno
push
sub
sbb
mov
ljmp
shll
mov
jmp
pop
jg
push
adc
and
jmp
sub
push
jge
scas
or
cwtl
outsl
outsb
aam
cmp
xchg
in
inc
mov
mov
add
push
enter
cwtl
or
aad
push
movsl
hlt
into
xchg
jnp
push
out
jns
mov
mov
and
adc
add
aas
mov
int3
pop
int3
insb
mov
mov
outsb
xchg
fcmovbe
mov
push
jle
ss
sbb
call
std
mov
mov
loope
sbbb
stos
dec
pop
mov
xor
lret
flds
xchg
in
mov
pusha
repnz
iret
jbe
and
bound
lret
sahf
out
ljmp
in
cmpb
rcrl
cmpsl
lock
cmpsl
ss
adc
rcrb
xchg
into
fnsave
push
xor
mov
mov
pop
lea
mov
jecxz
sbb
xchg
loop
mov
imul
jl
mov
push
pop
mov
shll
sahf
fists
push
mov
and
loope
inc
mov
movsb
inc
fdivl
xchg
inc
mov
into
or
shrb
test
adc
loop
ret
pop
push
nop
jp
mov
mov
arpl
sub
xchg
rcpps
mov
popf
test
mov
dec
sti
aad
ret
or
push
push
scas
mov
push
push
popl
repnz
dec
imull
or
andl
testb
push
in
mov
pop
dec
mov
into
dec
push
outsl
out
movb
fimull
jne
jo
pop
push
jl
in
rcr
sub
push
jo
out
mov
push
ss
jge
hlt
leave
sbb
negl
mulb
push
aad
cmp
pop
cli
ljmp
ret
pop
aad
mov
repz
mov
bound
and
mov
push
lods
push
js
adc
aas
nop
mov
mov
jle
pushf
mov
cmp
push
jnp
out
sbb
sbb
fs
in
pushf
sub
jb
inc
ficompl
mov
das
aaa
mov
aas
fdivrs
cmp
push
das
cmpsl
xchg
push
jg
adc
adc
mov
aad
sarb
dec
cli
or
iret
jg
pop
xchg
push
pop
push
adc
jne
inc
mov
shrl
rorl
rclb
pop
loopne
rcll
jne
or
outsb
divb
sub
cmp
push
sarb
jo
sbb
andb
mov
mov
pop
mov
dec
aad
aad
pushf
pop
inc
in
arpl
int3
iret
mov
push
cld
sub
stc
pusha
shl
pop
rcll
or
inc
jno
mov
and
js
push
or
mov
subb
mov
jno
pop
pusha
adc
test
int3
js
aaa
insb
cmp
les
js
lahf
jl
sub
adc
dec
or
dec
in
sbb
orps
jmp
and
inc
lret
or
scas
popf
push
out
call
ljmp
mov
neg
push
leave
jae
cmp
shl
icebp
sbb
cltd
dec
jp,pn
jbe
arpl
imul
fs
cmp
ds
clc
filds
js
pop
mov
lds
mov
pop
in
bound
subl
dec
jge
add
aas
mov
outsb
or
push
push
bound
movsl
cmp
jmp
or
pushf
jno
cltd
pop
mov
mov
lret
lock
push
pop
popf
mov
andb
lds
mov
repz
pop
pop
push
lods
cmpsb
enter
sbb
ret
push
out
repnz
xchg
and
das
xchg
shrl
imul
aaa
or
push
xchg
rolb
push
into
rorb
mov
rcl
and
inc
xor
cmp
inc
pop
mov
out
pusha
push
lret
jl
mov
in
jge
and
movsb
push
repz
mov
sub
xchg
aam
aad
repnz
bound
push
mov
cmp
ficoml
cmp
test
pop
int
push
adc
push
pop
sub
ficomps
jge
outsb
jmp
shlb
add
and
mov
pop
pop
stos
mov
inc
adc
xchg
cmp
dec
push
stos
mov
lcall
insb
adc
sbb
loope
sbb
lret
out
cmp
shll
aad
insb
lret
popf
inc
gs
aad
lret
mov
ror
xor
rolb
jae
mov
mov
mov
push
inc
lcall
insl
sbbl
mov
shl
into
aam
and
sbb
mov
lret
xor
ret
xchg
psllw
fimull
test
sbb
sar
jo
push
add
xor
jg
lret
movsb
xor
dec
dec
sub
std
sub
cmpsb
lea
mov
nop
in
pop
call
shlb
es
mov
lret
pop
aad
add
out
cmpsl
imull
lods
xor
insb
pusha
fcomps
lret
out
cmp
xchg
lret
add
sbb
sahf
cmp
dec
sbb
loop
xchg
xchg
push
jns
stc
or
int
lret
inc
push
add
aad
and
stos
sbb
pop
cmp
sub
xchg
in
or
inc
or
mov
pusha
lret
pop
jl
aas
cmp
jae
lock
js
daa
in
sbb
mov
inc
xchg
sub
orl
mov
inc
fistl
lret
in
imull
xor
add
push
fbld
lret
push
add
sub
or
test
rcrl
lret
loop
jo
mov
pop
push
lret
xor
lret
iret
xchg
pop
dec
icebp
nop
lret
xor
mov
fadds
cmp
cld
mov
sbb
add
or
adc
add
out
lods
push
repnz
test
iret
and
or
jns
rolb
add
jns
fimull
xchg
xlat
or
cmp
mov
adc
mov
mov
cwtl
cmp
movsl
mov
cmpsl
mov
mov
shlb
lret
xor
jo
adc
sub
inc
pop
or
fwait
cli
mov
pop
lret
jp,pn
movsl
lock
jmp
rcll
pop
ret
or
xlat
dec
push
shll
or
cmc
pop
or
xor
scas
add
mov
pop
bound
imulb
sahf
stos
ja
lret
fildl
add
mov
dec
jo
shl
call
lret
ret
shll
jmp
sub
pop
fistpl
stos
and
xchg
mov
lret
arpl
lret
jne
stos
sub
push
lret
ss
cli
lea
ficompl
jl
rcrb
sub
ret
sub
aas
dec
push
testl
test
fwait
mov
data16
adc
dec
pop
mov
cmc
mov
pop
pop
add
add
add
clc
sbb
xchg
dec
xchg
inc
push
or
icebp
add
push
or
rorl
loopne
addl
popa
into
or
dec
lret
mov
and
mov
inc
add
sub
or
divl
inc
xor
and
mov
sbb
dec
cmpsb
sbb
jae
cmp
push
pop
sub
fiaddl
add
aaa
mov
hlt
push
xchg
call
xchg
nop
and
lret
sbb
push
lock
aad
inc
hlt
pop
dec
test
fsts
jbe
mov
lret
clc
mov
stos
dec
mov
scas
fdivl
dec
lret
cwtl
in
cmp
fiaddl
and
xor
lret
mov
lret
fst
scas
xor
cmpsb
cmp
add
out
pop
dec
scas
and
gs
mov
stc
fsubs
hlt
lods
mov
add
cmp
int3
push
add
ja
bound
add
lret
sbb
xchg
lret
lahf
aas
add
sbb
gs
int
fucomi
fldcw
cmp
stos
jp
or
adc
cld
dec
xchg
rcrl
mull
aad
lret
in
sar
lods
dec
or
xor
add
pop
fimull
aaa
adc
xchg
cs
lret
inc
xor
lret
call
and
clc
mov
fdiv
mov
xchg
xchg
lret
fstps
and
sub
repz
das
lret
in
fwait
cmp
lret
mov
add
xchg
lahf
daa
in
scas
inc
lahf
aad
les
arpl
repnz
sub
das
adc
in
inc
dec
repnz
aaa
rolb
mov
cmp
xor
mov
fnstcw
lret
inc
scas
fdivp
ret
ror
pop
cs
mov
popa
popa
cmp
jmp
fsubrl
lret
add
adc
fstpl
cld
xor
sti
xchg
call
add
sbb
mov
gs
movsb
and
dec
pop
shlb
and
dec
daa
mov
gs
inc
ljmp
and
aam
test
mov
mov
movsl
stos
aaa
sti
ss
aam
cs
cld
add
lret
adc
out
negb
sub
mov
arpl
cmpsl
int
icebp
adc
push
lret
or
lret
mov
fcomps
inc
mov
cmp
jbe
adc
mov
lret
pop
popa
cli
and
pop
lret
push
test
and
xor
aam
rolb
data16
push
repz
scas
pop
lret
fs
cmp
dec
fisubs
fcomps
jo
mov
ljmp
out
inc
lahf
push
outsl
cmp
hlt
and
xor
lret
lret
dec
jo
fstps
add
movsb
aaa
jne
orl
adc
push
lret
mov
mov
aas
arpl
lret
mov
dec
js
lret
cwtl
leave
push
inc
mov
lret
sub
rcll
jp
fisttpl
ret
mov
jp
mov
repz
push
ret
addr16
sahf
push
jmp
pop
adc
jns
push
cmpsb
lret
adc
dec
xchg
movsl
repz
xchg
into
lret
add
sbb
xchg
lret
cmp
fdivrs
test
lds
fsubrl
xlat
addr16
cmp
inc
cmpsl
stos
jne
mov
rcrb
cmp
inc
jp
lret
and
inc
pusha
cmc
movsl
sbb
xor
cmpsb
test
decb
lock
jl
pop
mov
stos
jb
adc
out
add
in
es
jnp
outsb
xchg
pop
ror
mov
jbe
inc
xchg
fisubrl
xchg
push
jg
inc
test
mov
stos
inc
rorb
mov
or
lods
xor
lret
sbb
lret
rolb
xor
or
mov
mov
pop
lret
cld
movsl
add
into
mov
xchg
mov
outsb
mov
adcb
arpl
lret
sahf
movsl
jae
divb
pop
ja
lahf
iret
outsl
fdivrp
mov
jno
nop
push
enter
dec
sub
rcrb
clc
jp
mov
inc
push
jmp
lret
mov
fwait
mov
insb
ficomps
sbb
out
cmp
lret
arpl
lret
jmp
dec
cmpsl
ficompl
imul
pop
add
test
lds
lret
shl
rcll
or
ds
push
and
xchg
mov
adc
frstor
jae
shl
mov
sahf
cli
lret
pop
dec
repnz
sbb
ljmp
add
lods
mov
decb
mov
inc
xlat
rorb
dec
cli
dec
adc
lret
xchg
daa
xlat
popf
fiaddl
loope
cmpsb
lret
cli
cmp
cmp
mov
jnp
pop
jns
pop
shrl
lret
sbb
imul
das
cmpsl
cltd
add
clc
lret
arpl
in
xchg
lret
jne
test
push
sbb
test
bound
aam
mov
insb
sub
lret
cmp
pop
lods
test
xchg
aad
ss
push
xchg
jl
cmp
lods
pop
leave
pop
lds
dec
mov
cltd
xchg
sub
jnp
pop
dec
xor
add
xchg
test
xor
lret
enter
pop
or
jecxz
inc
movsb
jg
cmp
aas
call
mov
lret
mov
mov
movsb
cmp
shrb
adc
outsb
andb
das
cli
push
fcomps
pop
jecxz
call
ss
add
and
lods
test
push
cmp
imul
stos
adc
sub
cld
lret
or
xchg
inc
pop
repnz
jl
push
and
xor
ret
push
jbe
xlat
pop
sbb
mov
and
lret
jl
fsubrp
ss
mov
repz
mov
inc
push
adc
pop
inc
xor
xor
dec
adc
addr16
dec
test
dec
sub
push
adc
mov
push
sbb
dec
and
mov
jge
int3
inc
aaa
push
xor
adc
mov
push
rcrl
push
mov
and
xchg
xchg
push
push
inc
pop
push
sbb
sub
pop
or
push
or
data16
or
push
inc
adc
popa
loop
push
jg
fwait
mov
cmp
cmp
out
pusha
lcall
xchg
call
sbb
sub
punpckhbw
outsb
ljmp
les
lods
cwtl
test
jmp
add
cs
addb
mov
sbb
push
dec
fists
jg
push
in
jg
int3
arpl
xlat
scas
pushf
pop
xor
mov
outsl
pusha
aam
imul
adc
jmp
fsts
mov
int3
ljmp
sub
pop
bound
cli
loopne
fwait
or
dec
outsb
jle
cli
mov
test
insb
mov
pop
jle
xchg
leave
imul
inc
dec
push
dec
and
enter
xor
shll
shrb
xchg
or
pop
xchg
pop
inc
lret
adc
sarl
xor
push
push
mov
dec
jb
flds
cltd
ret
cmp
push
int3
repz
mov
aam
push
or
pusha
call
cmpb
dec
aaa
pavgb
out
movsl
addb
push
sub
jae
movsb
mov
push
loop
fld
std
lret
in
in
stos
jle
jbe
mov
aad
lods
mov
movsb
fidivs
xor
imul
mov
lcall
mov
adc
lock
into
iret
mov
insl
ret
jle
imul
das
push
xlat
cwtl
mov
pop
insb
xor
mov
and
mov
inc
sahf
imul
and
pusha
fists
push
jno
push
xchg
repz
pop
fs
push
sub
nop
shrb
pop
jo
repz
pop
push
sub
cmp
cmp
mov
inc
pop
cmp
adc
inc
adc
xchg
inc
xlat
sbb
add
into
adc
xlat
xor
out
das
xorb
mov
lret
movsb
decl
mov
pop
cmpsb
ss
push
aaa
mov
mov
push
xor
dec
push
int
lock
rcll
and
hlt
int3
xchg
test
mov
push
ror
jae
flds
std
insl
flds
ljmp
or
insl
repnz
xor
push
pop
and
clc
jnp
shl
pop
push
cmp
stos
out
push
and
test
push
and
ljmp
mov
fisttpl
mov
lahf
push
add
push
bound
push
data16
ficoml
sub
cmp
adc
mul
jmp
cmp
push
sbb
add
ret
scas
xor
dec
clc
movsl
sbb
stos
fmuls
scas
push
pop
and
or
mulb
xchg
push
xchg
dec
daa
or
mov
mov
out
pop
mov
imul
cltd
int3
lret
sub
bound
fisubl
push
mov
test
test
fucomip
cli
mov
dec
pop
push
dec
pop
mov
shrl
xchg
mov
cmpl
movq
mov
lods
cld
jae
cwtl
cwtl
jle
sub
mov
arpl
mov
into
rolb
mov
xor
mov
pushf
xchg
pushw
bound
es
adc
and
xchg
stos
pop
push
ret
xchg
loop
adc
sbb
inc
xor
xchg
iret
mov
mov
dec
sub
shrb
test
ss
mov
ud1
lahf
pop
cmp
lds
ljmp
test
pop
jmp
push
pop
js
sub
iret
loopne
adc
dec
ret
sahf
mov
subl
sub
inc
pop
and
xor
push
and
cs
aad
jecxz
fnstenv
mov
ret
out
out
out
mul
lds
add
xchg
mov
add
mov
and
lds
arpl
in
push
iret
sbb
adc
pop
mov
pop
inc
jne
push
enter
xor
push
dec
and
loope
loop
cmp
shll
jb
ds
fadds
out
sub
lret
push
xchg
fmuls
arpl
cmp
out
lret
mov
mov
pushf
jl
test
mov
jmp
push
pop
pop
dec
enter
adc
fidivl
fsubl
inc
mov
add
lods
gs
pop
ds
popa
push
adcl
xchg
leave
pop
testl
mov
fucomp
into
into
inc
sar
mov
sarl
in
lret
cmp
repnz
fsubl
mov
xchg
ret
pop
int
and
push
jb
cmp
add
movsb
jmp
xchg
push
dec
or
lods
mov
scas
mov
sbb
pop
and
andl
leave
push
dec
or
int
in
idivl
ret
push
icebp
mov
fdivp
xchg
push
jle
sub
xchg
and
push
xchg
outsl
inc
jno
fnstsw
dec
mov
pop
or
aam
mov
jb
xchg
adc
xchg
imulb
push
sbb
pusha
sub
push
lods
pop
test
sbbl
mov
adc
outsl
into
fs
dec
cmpsl
and
push
mov
add
scas
icebp
loop
mov
ficoml
loope
jmp
adc
test
cmp
sbb
pop
pop
movsl
dec
or
push
inc
adc
lret
push
lcall
repz
xor
mov
xchg
push
push
addl
in
jne
aas
int3
xchg
movsb
pop
mov
pop
repnz
outsl
push
iret
mov
ret
lock
push
lods
loopne
mov
inc
sbb
sub
sarb
stc
imul
mov
push
rcl
mov
cmpb
sbb
loopne
ror
xchg
fadd
lcall
pop
sti
aaa
pop
mov
jecxz
inc
sbb
cwtl
mov
jecxz
inc
aad
mov
fisubl
pusha
out
in
out
mov
adc
test
mov
sub
clc
imul
pop
les
rcr
dec
and
jg
stos
stc
arpl
push
mov
into
pop
xchg
sbb
xchg
inc
mov
mov
loop
adc
cmp
popf
stos
imul
rclb
sbb
ljmp
push
mov
xchg
aaa
shrl
test
adc
or
or
lods
or
repz
iret
mov
arpl
and
cli
or
push
sub
movsb
xor
aam
movsl
mov
movsl
jae
inc
addr16
jle
mov
pop
lret
and
jle
mov
jne
mov
cmpsl
mov
lds
add
mov
sti
add
jecxz
or
cmc
aas
sub
mov
xchg
add
push
add
mov
test
inc
pop
stc
out
dec
or
lret
jg
insl
popf
data16
pop
pop
adc
bound
fcoms
cmc
cmp
jno
aas
outsl
mov
stc
fcompl
fidivs
outsb
rcl
div
mov
xor
roll
daa
outsb
sub
lahf
stc
sbb
movsb
jno
pop
add
addr16
dec
sbbb
movsl
mov
das
cltd
cli
rorb
xlat
cltd
jne
mov
mov
inc
repz
enter
add
xchg
lcall
aas
cmp
in
cmp
mov
pop
lret
dec
scas
outsb
in
xchg
dec
pop
aas
jbe
mov
arpl
xor
adc
cltd
mov
mov
cli
pop
sbb
fldt
dec
add
sbb
inc
testb
pop
into
lret
xchg
movsl
popa
push
and
xor
pop
jnp
fs
in
add
or
xchg
scas
xlat
pushf
loopne
decl
mov
mov
jmp
adcb
lods
xchg
jno
ret
rep
jno
xchg
push
int
sbb
jp
mov
jo
pop
std
popf
mov
test
push
mov
sbb
into
jae
adc
mov
mov
mov
icebp
and
out
mov
xor
and
cmp
xchg
inc
add
inc
push
adc
push
iret
mov
adc
popa
shlb
imul
sbb
and
shl
rcl
sbb
sub
pop
push
xor
orb
jns
rcrb
push
aaa
sub
mov
add
lods
in
je
sbb
inc
jmp
bound
scas
andb
xor
je
shr
jo
in
adc
inc
insl
aad
sbb
mov
xchg
lods
jae
adc
rcl
dec
cld
push
aad
jg
test
dec
inc
js
fisubrs
jbe
mov
mov
rclb
js
loope
loopne
add
xchg
mov
sbb
daa
push
mov
movsl
into
ss
rcrl
dec
adcb
inc
jl
loope
imul
adc
in
shrb
sub
sbb
lret
shrl
jmp
rclb
sub
sbb
xacquire
in
lods
xor
xchg
outsb
sub
out
or
ljmp
outsl
hlt
push
jmp
cltd
push
lea
insb
and
das
lret
push
sub
stos
fucomip
mov
es
fwait
bound
rorb
shr
mov
orl
aas
mov
lock
hlt
mov
jo
cmp
jns
clc
nop
pop
cltd
xchg
and
mov
pop
xchg
push
rcr
call
sbb
pop
push
aad
cld
js
shll
repz
jbe
or
js
dec
test
xor
jmp
jbe
sbb
cmp
fcompl
lods
stc
repz
or
fnstenv
andl
iret
stc
pop
mov
inc
ret
repz
push
ficomps
rorl
addl
sbb
xor
lea
daa
addr16
cmp
gs
inc
push
adc
sbb
pop
imul
cwtl
ret
mov
es
xchg
cmp
mov
std
insl
add
cltd
lahf
push
fwait
lret
sub
dec
sub
jmp
add
sahf
imulb
jmp
ret
adc
fisubs
rol
dec
push
cs
xchg
je
sbb
push
loope
daa
shll
out
mov
adc
insl
scas
inc
and
push
jnp
xchg
jb
aas
outsb
call
idiv
pop
mov
dec
cmp
out
sbb
or
mov
jp
fcomip
mov
movaps
gs
push
es
lahf
aam
repz
subl
ja
jmp
clc
into
gs
add
mov
xchg
cmc
mov
push
jne
adc
jl
sbb
push
pop
aad
rol
cmp
pop
into
fstpl
mov
cmp
xchg
mov
mov
and
mov
dec
call
orb
loope
mov
inc
icebp
xor
and
sbb
jbe
cmpsl
int
adc
addr16
lds
call
out
lret
loop
stc
inc
insl
lods
cmp
fs
aad
data16
or
lahf
sbb
mov
sbb
or
rep
outsl
pop
ljmp
lahf
outsl
and
data16
xchg
jno
push
mov
in
std
sub
popa
jbe
das
sti
sarl
into
xor
sti
mov
xchg
jne
ja
scas
cmpsl
aam
push
cli
or
jns
test
in
pop
rcrb
mov
xchg
lret
sub
lret
xor
jnp
lock
int3
jg
insb
lods
mov
adc
inc
pop
cli
ss
jns
and
insl
scas
fmulp
jmp
pop
sbb
xor
roll
lret
cmpsl
repnz
or
cmpl
clc
sbb
fmull
movsb
push
insb
lret
jbe
divb
ss
dec
or
orl
popa
sub
xchg
inc
and
in
lret
fisttpll
inc
scas
dec
movsb
dec
addr16
fisttpl
ficoml
data16
pop
jle
pop
push
dec
stos
lds
iret
push
and
cmp
pop
cmpsl
sti
mov
popa
sbb
xchg
dec
cli
punpckhdq
das
xchg
stos
clc
ljmp
into
int
adc
mov
mov
fidivl
xchg
dec
sbb
shlb
lret
mov
scas
cmpsb
inc
jns
loop
adc
jne
out
dec
fwait
aas
nop
out
lret
or
fwait
int3
lret
sbb
lret
stc
loope
testb
fs
mov
and
cmp
and
movsb
push
outsl
repz
shrb
add
ror
push
jle
stc
outsl
xchg
out
sbb
out
inc
xchg
inc
push
sahf
push
lret
popf
ds
movsl
scas
test
rcll
stos
dec
addr16
sbb
inc
lret
ja
xchg
jmp
stos
jle
fcmovnbe
cmp
les
pop
fiaddl
jbe
aad
dec
in
cwtl
or
lret
add
ja
test
inc
xchg
iret
jle
lret
push
outsl
mov
pop
sarl
popa
push
xchg
add
test
mov
std
mov
pushf
lods
cmp
pop
push
inc
lret
jno
testl
mov
aam
inc
int3
ret
jecxz
test
fwait
inc
push
ror
mov
xchg
lret
xchg
int3
mov
fwait
mov
shlb
mov
loop
in
jg
scas
mov
mov
sub
in
jno
pusha
adc
test
ror
push
popa
mov
inc
push
jb
sbb
fimuls
dec
popf
mov
insl
dec
test
dec
cwtl
mov
jg
xchg
ret
decl
jo
lret
add
mov
mov
loope
lret
dec
xchg
add
fsts
adc
mov
inc
je
cltd
fadd
dec
lret
xor
in
mov
cmp
cmp
call
xlat
scas
sub
xor
mov
mov
dec
and
mov
iret
scas
mov
addr16
inc
cmp
rol
push
test
add
mov
into
cmpsb
push
leave
jl
sbb
insb
fcomps
fisttpll
adc
sti
fidivrl
cwtl
push
add
adc
dec
push
jae
cltd
push
fiaddl
mov
adc
push
xchg
push
mov
stos
test
jne
pop
xchg
into
test
lret
and
movsl
push
lock
lret
loopne
adc
aam
add
dec
cmp
mov
mov
dec
int
xchg
ret
xchg
dec
cli
pop
and
test
aad
mov
adc
je
rclb
mov
and
push
xor
adcl
pop
jecxz
sti
or
push
push
ss
ds
scas
push
inc
push
mov
in
js
pop
call
jl
das
out
lods
pop
cmp
jecxz
sub
pop
rcr
dec
sbb
js
lret
jnp
rorl
xchg
mov
stos
sbb
outsb
ficomps
lret
or
iret
and
scas
frstor
xchg
flds
mov
repnz
lcall
xchg
sbb
lods
pop
dec
sbb
cltd
mov
flds
inc
lea
jecxz
dec
push
or
notl
mov
stos
dec
xchg
inc
imul
in
mov
push
fs
loopne
push
pop
cli
rorb
mov
xor
push
test
push
or
out
outsl
dec
pop
gs
dec
xchg
jmp
xchg
xchg
inc
repnz
pop
jb
out
mov
push
mov
fsubr
or
insl
ljmp
fidivl
xorl
inc
fiaddl
out
test
sbb
iret
sarb
push
or
mov
or
jns
cld
adc
and
fistl
cmpxchg
sbb
out
sbb
pop
xchg
addb
adc
mov
pop
push
xor
fisubs
and
pop
repnz
mov
cwtl
jo
push
sti
call
pop
or
pop
ret
repnz
push
aam
mov
and
inc
pop
push
push
mov
andb
fimuls
ljmp
out
dec
push
push
add
xchg
xor
pop
sub
pop
loope
fcomps
add
jb
das
nop
leave
arpl
popa
test
test
nop
or
hlt
push
pushf
movzbl
int3
int
int
push
pusha
ds
in
push
push
out
data16
lea
rcrl
xchg
cmpsl
push
imul
les
xor
sub
cmp
mov
insb
pop
push
inc
sbb
pop
pop
and
nop
and
xorb
xor
shl
dec
cmp
mov
push
adc
pop
fdivrs
js
or
jne
lea
mov
lcall
adc
adc
aaa
mov
int3
lods
jne
or
bound
jb
mov
mov
pop
stos
xchg
retw
lahf
sub
mov
mov
mov
inc
rcr
sub
ss
shlb
in
and
inc
bound
addb
pop
loopne
fs
insl
pop
push
xor
das
test
mov
add
sub
in
and
jno
or
bound
and
cli
jns
or
push
scas
pushf
outsb
ret
cmp
sbbl
push
adc
mov
push
outsb
add
pop
and
mov
shr
fadds
mov
gs
sbbb
pusha
push
popa
mov
xchg
cmpsb
pushf
aam
dec
push
cmp
ret
rep
out
mov
xchg
and
cmp
jle
push
jns
js
cwtl
dec
mov
jp
or
test
mov
test
mov
insb
or
sbb
jp
mov
push
cmp
popf
pop
in
mov
lock
insl
xchg
in
in
aad
jge
lds
sub
std
lret
xchg
cltd
rorb
xor
vsqrtpd
shll
jmp
pop
lgs
mov
mov
pop
je
mov
mov
dec
mov
xor
dec
hlt
dec
inc
xchg
push
adc
into
inc
ss
jno
int3
adc
and
imul
adc
xor
fcmovnbe
sti
pushf
dec
iret
push
and
leave
inc
cmp
inc
enter
adc
mov
pop
dec
lret
lret
enter
xchg
add
dec
mov
fcmovu
lahf
loop
lea
pop
adc
jbe
lods
sti
inc
jae
or
mov
jmp
jmp
or
mov
add
push
push
in
vcvtsd2ss
jp
ja
and
or
xchg
jno
cmp
das
push
dec
jg
leave
mov
movsl
pop
aam
mov
loope
pop
lods
shlb
test
int3
insl
add
mov
xorl
ficomps
dec
lret
xchg
push
push
into
or
pop
jns
mov
pop
movb
popf
mov
nopl
lret
insb
or
subb
sub
pop
sti
mov
xchg
push
add
popa
or
lret
lock
sbb
insl
lret
scas
fistpll
in
sbb
in
lcall
sti
arpl
dec
and
lods
cmpsl
or
nop
push
lret
iret
xchg
xchg
lods
ficompl
aam
cltd
jnp
lret
push
xchg
jmp
dec
insb
mov
lret
jg
bound
hlt
mov
outsb
lret
fisubs
mov
or
add
push
adc
jecxz
iret
and
pop
mov
mov
ret
lret
mov
pusha
xlat
xchg
inc
test
mull
addr16
addl
mov
lahf
adc
ja
scas
sub
aam
fwait
mov
mov
sbb
push
fidivrl
push
inc
lds
lret
pop
xchg
mov
imul
js
xor
iret
fldcw
inc
call
insb
loopne
cld
jge
lret
stos
cwtl
into
scas
lret
movsb
dec
push
cmp
mov
iret
sub
in
pop
sarb
push
ss
lret
add
je
pop
mov
adc
lret
sub
xor
gs
pop
adc
add
nop
rolb
insl
lret
adc
mov
inc
cld
xor
xchg
xor
sbb
sbb
and
dec
dec
mov
xchg
jb
ljmp
ror
out
adc
dec
mov
xchg
lds
imul
popa
and
cmp
pop
lock
ja
mov
jae
mov
push
adc
lret
aaa
or
sbb
inc
out
mov
cmc
insb
rcll
pop
js
lock
fmul
lcall
ror
push
or
xor
push
add
inc
aam
sub
stc
out
xchg
outsl
lret
jmp
adcb
inc
or
pusha
add
lret
dec
ret
je
adc
inc
and
rcr
push
sbb
stos
lret
in
dec
lock
imul
ss
in
mov
imulb
fxch
lret
cmc
stos
push
int
fwait
lret
jl
adc
jno
sti
lret
add
sbb
int
loope
inc
in
jmp
ret
stos
and
mov
jecxz
lock
jle
lret
cwtl
push
or
or
sbb
nop
inc
lret
cmp
fistpll
outsl
lret
mov
fsubrl
adc
xchg
or
cmp
lret
jp
cmpsl
dec
lret
and
push
cltd
xor
pushf
and
in
es
push
lock
sbb
insl
add
xchg
aad
fdivrs
iret
cwtl
test
mov
add
adc
xor
jg
rcl
pop
mov
outsb
mov
mov
in
das
jecxz
fldenv
mov
inc
sbb
lret
ljmp
dec
test
adc
xlat
lret
cmc
jb
jge
jecxz
pusha
out
sub
std
cmp
sbb
aaa
ja
add
add
lahf
loope
jno
cli
push
adc
iret
and
fnstcw
sbb
test
shll
xchg
mov
xchg
mov
pop
incl
je
inc
mov
xor
pop
mov
and
lods
mov
sub
or
lret
sbb
stos
inc
add
dec
aam
hlt
jecxz
sbb
insb
or
cli
add
fidivs
subl
out
mov
cmp
sbb
ror
sub
lods
js
push
stc
cwtl
outsl
aaa
mov
cld
push
sbb
sbb
jne
repnz
repz
adc
jmp
stos
lock
add
outsb
hlt
xchg
data16
push
fsubs
mov
je
cmp
mov
xor
ljmp
xlat
in
mov
icebp
sarl
pop
push
shlb
xor
ror
gs
out
mov
scas
movsl
outsb
cmpsb
xor
rorb
and
mov
sub
dec
mov
cmp
loop
in
and
gs
sbbb
sub
lret
add
add
pop
add
pop
lea
adc
out
push
or
xor
jno
leave
out
lods
shl
mov
movsl
add
add
dec
faddp
push
pop
jp
fwait
shlb
fsts
outsb
int
stos
sbb
jle
out
pusha
cmpsb
inc
cltd
jp
loopne
iret
scas
cmpsb
inc
loop
arpl
push
test
bound
jmp
jb
rolb
outsl
sarl
jno
mov
inc
add
hlt
mov
xor
cwtl
pusha
ret
mov
test
mov
enter
and
insb
dec
jbe
mov
push
cmp
and
fxch
or
scas
sbb
ljmp
pusha
cmp
ljmp
orb
mov
insl
sbb
jmp
xchg
scas
mov
cmp
cmpsb
cwtl
xlat
cltd
mov
xchg
shlb
data16
sub
xor
add
ffree
inc
gs
test
sbb
lds
pop
jns
adc
lods
push
mov
into
sar
hlt
inc
out
arpl
jne
cmp
lret
sbb
addr16
mov
dec
fsubrl
ljmp
pop
adc
mov
test
lret
std
jle
jg
push
inc
in
mov
inc
sub
jle
and
xchg
add
loope
sub
test
pop
xor
jno
dec
in
push
sbb
lret
movsl
sbb
push
add
push
das
cmpsl
out
mov
mov
rorb
sub
cwtl
dec
mov
xor
mov
ss
negl
lret
imul
int3
mov
cmp
cmp
bswap
push
adc
stc
pop
jge
lret
mov
inc
pop
enter
sarl
xor
je
in
push
dec
jne
test
out
mov
mov
shll
aaa
not
push
pop
xor
lret
mov
ljmp
into
lret
inc
inc
and
lret
ficomps
or
mov
sarb
xchg
imul
lret
scas
ds
xchg
lret
pop
and
rorb
scas
lret
faddl
mov
sbb
xor
pop
xor
orl
sbb
stos
and
stos
movsl
shrb
push
cmp
xor
shlb
xchg
lret
fdivrs
cmp
mov
mov
pop
ficoml
aam
jne
stos
dec
std
mov
cmp
pop
addr16
sbb
add
stc
iret
push
leave
mov
icebp
lds
call
std
inc
in
scas
jl
cmp
sub
aas
push
enter
cmp
out
mov
imul
jno
xchg
int3
lret
cmp
das
addr16
mov
cmp
sahf
out
push
mov
adc
mov
jae
in
scas
mov
cmp
lret
adc
dec
shlb
lock
mov
xchg
mov
mov
sarl
addr16
test
pusha
je
and
jmp
mov
adc
jge
ret
xor
in
shl
int
xchg
fildll
dec
shrb
fldcw
in
orps
rolb
jnp
stos
pop
push
cmp
movsb
clc
lret
xchg
mov
outsb
lret
repnz
das
shrb
stos
cs
fiadds
cmpsb
pop
pop
and
lds
xor
int
lret
cwtl
add
gs
dec
mov
or
xor
sub
xlat
hlt
lret
cli
leave
pop
or
es
nop
cli
cld
dec
mov
lock
inc
cli
int3
and
adc
testl
jecxz
and
push
pop
out
jne
in
sbb
push
outsl
mov
lret
outsb
por
sbb
cli
sub
xchg
rclb
imul
scas
pop
mov
iret
inc
fbstp
lret
push
push
mov
test
stc
hlt
mov
aaa
ffree
cmp
cmp
fiaddl
jbe
test
mov
mov
pop
adc
cmp
xchg
dec
jnp
pop
lret
mul
das
xor
xor
lods
cmp
cltd
loop
mov
imul
scas
inc
jns
pop
movsl
or
in
lret
mov
adc
cli
adc
cmpsl
jbe
lret
xor
repnz
addb
js
xor
mov
aad
sbb
loopne
lret
jge
test
dec
adc
out
out
lret
add
push
lret
push
shrl
xlat
mov
mov
mov
outsb
xchg
lret
stos
cmpsl
imul
or
pop
and
adc
out
mov
push
and
xchg
aam
lret
lahf
jbe
pop
movsl
je
sarl
jne
pop
loopne
sub
jb
testl
pop
dec
into
js
mov
push
add
outsb
jnp
and
xchg
pop
cmp
xchg
loopne
loope
push
inc
inc
ficoml
dec
int3
rcll
lret
ds
pop
sub
ljmp
rcr
stos
mov
je
or
lahf
lret
subb
jbe
lret
aam
xchg
adc
lret
sub
mov
aas
lret
bound
lret
mov
push
lret
out
cmp
daa
fwait
shr
scas
mov
lret
dec
movl
mov
xchg
cmp
and
cmpsb
out
lret
xlat
popf
add
addr16
fbstp
rol
xlat
and
lock
imulb
test
rorb
addr16
xchg
sti
push
cwtl
adc
sub
mov
lds
xchg
lret
test
lret
inc
aam
pusha
dec
adc
aad
xchg
cli
jnp
dec
mov
sahf
outsl
lret
arpl
mov
mov
es
lods
bswap
dec
ret
scas
ljmp
orl
lret
push
pushf
out
sbb
jge
jae
push
mov
mov
js
jnp
lret
ret
add
pop
aaa
push
lret
mov
inc
xchg
jle
dec
xor
xchg
stc
test
xchg
cmpsl
scas
out
mov
push
push
lret
adc
negb
dec
inc
mov
mov
sahf
add
out
ljmp
shrb
mov
lret
sub
inc
mov
bnd
jge
inc
cmp
push
loopne
popa
aam
nop
cld
adc
cmp
stos
add
inc
imull
jns
fnstcw
ret
movsb
xchg
sub
sub
cmc
jnp
push
lret
inc
test
mov
sbb
cmc
pop
adc
insb
lretw
jnp
add
dec
fisttpll
sarb
mov
sbb
es
xchg
pop
in
sbb
pop
adc
push
rolb
or
shlb
repz
lret
fdivrs
mov
jo
and
data16
cli
scas
jmp
xlat
shll
mov
addl
test
add
adc
addr16
ja
dec
cld
cmp
lods
lock
push
dec
push
sbb
inc
movsl
fwait
pop
xor
out
and
lret
aaa
add
fcmovnb
lret
cmpsb
cmp
and
fisubrl
sbb
insb
je
xor
xchg
int3
push
xchg
cmp
lret
dec
sbb
mov
test
test
rcl
stc
pushf
xchg
sbb
xchg
test
push
out
fimull
out
xchg
lret
xor
lcall
lret
cmp
out
sbb
mov
mov
push
subb
xor
stos
jp
iret
dec
push
cltd
lret
les
ret
cmp
lahf
fistps
jecxz
je
add
ror
rcr
mov
sbb
arpl
sbb
push
mov
enter
cmp
or
repz
dec
xor
imul
lret
inc
mov
lret
cwtl
in
mov
push
or
test
jb
mov
dec
mov
in
rcr
mov
push
or
stos
addl
or
out
cli
fwait
rcll
push
xchg
and
and
sti
ret
rcl
test
jo
add
xor
jle
icebp
clc
jg
sbb
fbstp
mov
adc
scas
mulb
sarb
jae
into
rol
pusha
fcmovnbe
adc
pop
inc
lret
int3
jnp
pushf
inc
lret
mov
xor
fdivl
jnp
fmuls
mov
int3
inc
lret
lcall
push
sub
repnz
cmp
lret
push
inc
add
sbb
loopne
jmp
cmp
pop
fsts
aaa
imul
inc
or
inc
lret
mov
mov
cmp
cltd
mov
or
insl
mov
fwait
aad
mov
adc
outsl
das
cmpsl
pop
xchg
lret
stos
ret
sbb
lret
mov
and
pop
jg
daa
or
dec
loope
shrb
push
xchg
into
inc
or
inc
push
mov
test
jb
movsb
call
mov
andb
mov
mov
cmp
aam
fbld
fidivl
aaa
pop
inc
stc
test
popa
fstp
andb
orl
push
push
jp
loopne
push
int3
mov
ljmp
and
lea
or
or
aaa
scas
lock
dec
pop
adc
cmc
es
pop
pushf
xchg
imul
insl
sbb
dec
adc
and
sbbb
pop
or
fstps
imul
mov
jnp
out
jmp
repz
clc
dec
int
lods
mov
idivl
popf
add
sub
xchg
in
into
jmp
adc
xor
jle
mov
test
add
dec
gs
addb
push
imul
inc
pop
dec
rorb
cli
mov
fwait
pop
in
sbb
push
xchg
rcll
iret
dec
insl
cmpsl
mov
loope
imul
mov
movsb
fs
mov
frstor
mov
mov
push
push
push
push
push
jno
cmp
or
aas
push
movsl
pop
pop
ficomps
sbb
cmp
xchg
lahf
push
icebp
jp
out
popf
dec
stos
loop
hlt
xor
fnstcw
fidivl
mov
inc
clc
mov
adc
and
loopne
test
js
stos
add
out
test
jo
icebp
repz
mov
in
jecxz
adc
cltd
jge
rcrb
or
lcall
cmp
clc
loop
sub
push
xor
adcb
pop
call
mov
mov
gs
sti
lods
repz
dec
hlt
xorb
xor
movsl
mov
mov
xchg
lods
fimuls
daa
in
inc
in
fld
mov
pop
xchg
les
push
ss
test
lahf
xor
je
mov
mov
cmp
xor
test
popa
sahf
and
dec
push
push
jmp
inc
jge
aam
test
aad
bound
ret
add
arpl
pop
push
pusha
xor
imul
xor
loop
lahf
inc
lret
mov
lret
fwait
ljmp
pusha
cld
xor
jg
in
sbb
addr16
mov
sahf
iret
pop
ficompl
insb
jmp
sbb
adc
push
bound
pop
pop
mov
sarb
movsb
mov
mov
repnz
mov
imulb
mov
inc
mov
adc
pop
push
push
pop
mov
jecxz
testl
inc
or
aas
hlt
push
adcb
aam
cmp
mov
jno
mov
xor
xor
test
sbb
and
push
cmp
xlat
test
ja
fcmovnu
out
xchg
mov
subb
or
shr
fwait
iret
mov
bound
rorb
or
iret
pop
jae
mov
ror
xchg
cmp
ret
push
insb
jp
jnp
mov
outsb
mov
mov
pop
pop
pop
lcall
int
hlt
ja
jb
sbb
fistps
shlb
lahf
dec
lret
pop
repz
dec
out
pop
push
xchg
and
xchg
insl
pop
or
das
mov
inc
or
or
shlb
mov
jmp
addb
pop
dec
xor
sbb
mov
jno
sub
xor
pop
popf
or
xchg
jmp
xlat
jnp
cld
fs
or
push
aaa
jbe
mov
movsl
lock
lahf
cltd
cmp
pop
inc
pop
push
jmp
sbb
xchg
pop
popa
shrl
popa
mov
fmulp
dec
mov
sbb
mov
sti
vpsllq
hlt
cli
pop
mov
xchg
test
sti
push
imul
jl
adc
stos
lods
scas
fistl
movsl
rolb
push
nop
repz
and
hlt
jae
sub
scas
dec
shll
cmc
daa
popf
loope
pop
adc
pop
sahf
aaa
xchg
adc
mov
cs
js
fidivrl
jmp
adc
mov
loop
ret
repnz
shll
jo
in
sbb
mov
jmp
lret
push
inc
rorb
jecxz
jbe
push
sub
sub
lods
ljmp
lahf
cmp
daa
rcrb
insb
add
cwtl
or
popf
jg
pushf
xor
inc
and
fs
ret
repz
js
pop
ffree
push
ret
push
out
inc
jg
xlat
int3
shlb
push
inc
ss
jmp
jmp
lahf
int3
mov
pushf
call
orl
jmp
sbb
cmp
mov
sbb
cltd
andb
nop
ret
ficoms
jae
int
adc
pop
pop
cmp
jmp
add
subl
mov
lds
jle
ljmp
xlat
addr16
popf
mov
popf
cmp
fldcw
aad
pop
pop
xchg
out
sbb
clc
dec
rcrb
shrl
es
lds
test
dec
clc
mov
push
push
mov
mov
cli
lock
jo
mov
pop
in
sbb
and
or
pop
sbb
mov
jo
adc
dec
nop
jp
sarb
push
lret
mov
loop
push
inc
js
sarl
idivb
rclb
push
lock
daa
mov
pop
sbb
mov
xchg
notl
or
mov
sbb
adc
test
and
ds
leave
pop
fadd
shl
lahf
push
jns
push
inc
pop
sbb
xor
les
sub
std
and
push
shr
dec
arpl
pop
jbe
inc
out
aaa
popf
push
nop
pop
adc
int
mov
push
jp
add
sbb
stc
ficoms
fsts
jae
jmp
mov
arpl
enter
lock
lea
rorb
sbb
lock
xchg
movsb
out
lods
shrb
adc
lret
xchg
fildll
inc
jle
scas
outsl
bound
loop
pop
adc
xlat
or
es
jno
shlb
movsl
adc
push
jle
push
mov
iret
aas
sub
popa
dec
lret
adc
test
or
fmull
push
ljmp
mov
stos
hlt
mov
loope
int3
inc
bnd
into
shll
xor
pop
icebp
leave
mov
sub
insb
cwtl
mov
jp
sub
push
in
xchg
push
ret
dec
dec
in
lds
shl
xlat
mov
pop
dec
push
xchg
xor
pop
push
int
pop
inc
mov
mov
js
sti
sbb
add
dec
jle
cmc
mov
add
jle
int
jl
jg
jmp
lds
mov
xor
dec
shrl
or
xchg
or
fistl
lret
sub
adc
rcrl
in
mov
pushf
jle
rorb
int3
mov
nop
mov
xchg
push
clc
cltd
and
jecxz
jmp
xchg
in
adc
fidivs
in
mov
out
inc
inc
pop
and
icebp
adc
push
inc
js
mov
or
pop
adc
jns
sbb
push
xlat
scas
ret
out
mov
mov
mov
xor
jbe,pn
xor
test
nop
and
cmp
test
gs
iret
and
fwait
jnp
sar
daa
fcomps
xlat
movsb
idivl
pop
mov
rcl
pop
mov
in
and
pop
cltd
xchg
or
lret
aad
pop
cmpsb
ljmp
and
fisubs
int
add
push
cmp
and
or
sahf
ss
fstpt
sbb
lret
xor
mov
and
pop
cld
rorl
insb
outsl
lret
ss
insl
adc
icebp
push
jge
mov
jmp
je,pt
lret
mov
inc
mov
or
int3
or
movsb
add
xor
dec
loop
repz
aaa
sbb
pop
mov
adc
push
iret
sbb
hlt
ficoml
sub
ftst
mov
jno
out
iret
lret
shll
jo
push
lret
xchg
add
inc
ds
mov
leave
das
or
mov
inc
dec
lret
or
les
jmp
testl
data16
adc
xchg
sbb
pop
mov
or
sahf
jg
push
sbb
mov
lods
out
or
and
cwtl
lahf
pop
cmpsb
mov
mov
outsl
inc
jg
into
pushl
rorb
iret
lret
mov
pop
fmulp
iret
jmp
or
xchg
lahf
lret
std
jmp
add
pusha
mov
xlat
shrb
mov
push
inc
lret
mov
std
xchg
jmp
adc
pop
stos
fwait
lret
mov
lret
or
pop
lods
dec
lock
js
fsubrs
fisubl
inc
xchg
mov
push
push
dec
addb
pavgb
dec
pop
ret
lret
inc
into
mov
inc
fwait
lret
sbb
pop
jno
ljmp
fsubs
gs
lret
xchg
rorl
addl
cmp
push
lret
sbb
mov
ret
lret
incl
jge
shll
std
stos
inc
mov
mov
pop
mov
sahf
pop
push
adc
jecxz
lcall
and
inc
in
jge
scas
rol
sbb
or
push
push
pop
cmp
lret
sbb
lret
data16
sbb
lret
jp
lea
pop
and
mov
neg
test
ljmp
sub
cmp
cmp
sti
or
arpl
push
push
add
lret
jmp
mov
adc
fs
dec
push
lret
adc
or
es
mov
test
xor
aam
leave
cli
pop
inc
pop
and
push
dec
xchg
lret
mov
jle
insb
jecxz
shll
push
sbb
imul
iret
xchg
loope
sarl
ror
or
or
push
lret
call
xchg
add
mov
mov
jge
cwtl
addr16
imul
dec
lret
pop
dec
jo
add
test
sbb
cmp
adcb
jecxz
mov
push
stos
ret
cmpsl
sub
xchg
xor
xchg
lret
dec
mov
xor
mov
push
cmp
lret
push
push
inc
jmp
xor
mov
mov
cmp
xor
rolb
lret
or
int
popa
or
cmp
enter
pop
shll
das
cltd
jno
fisttpl
out
imul
lret
nop
dec
scas
jbe
mov
add
jns
xor
cmc
in
add
lods
cli
cld
xor
fildl
cli
dec
sbb
in
lret
mov
sub
orb
cmp
in
mov
pop
daa
fidivl
fldt
inc
ret
repz
mov
xlat
pop
out
mov
addr16
lret
es
sbb
mov
dec
adc
repz
xchg
movsl
inc
mov
fwait
cld
daa
loop
mov
or
adc
pop
push
incl
lret
jl
mov
and
xor
int3
cwtl
les
cmp
call
inc
rorb
std
mov
aam
add
cmp
mov
mov
xchg
pushl
lret
mov
sbb
dec
jne
sub
dec
fidivrl
cmp
xor
jne
fdivl
cmp
je
lret
mov
mov
mov
mov
inc
cmpsb
sub
mov
lret
daa
inc
subb
and
std
cmp
jae
fcmovnbe
cmpb
mov
lret
add
push
imul
mov
call
adc
add
jp
lret
xchg
push
sub
push
adc
ljmp
mov
test
ficoms
inc
pop
dec
aad
into
push
cmpsl
dec
in
dec
daa
lret
push
cmp
ret
loopne
cli
pop
bound
dec
mov
loop
mov
and
in
adc
outsl
inc
mov
test
fs
imul
push
cli
int
and
mov
in
mov
lret
mov
mov
mov
mulb
adc
call
xor
jne
imulb
bound
add
xor
movsl
sub
jmp
js
inc
or
insl
mov
add
pop
lret
mov
psubd
lahf
aas
and
jge
repz
subl
imul
popa
jp
lcall
xlat
fwait
jae
daa
lret
pop
dec
pop
adc
imul
lods
out
mov
or
int
lret
lret
dec
or
lret
nop
pop
xchg
call
insb
lds
xor
lret
push
scas
and
popf
pop
cmp
xorb
cmp
push
scas
pop
into
call
and
shll
negb
test
out
push
fimull
xor
pusha
push
jne
nop
cwtl
xor
pop
fnstenv
fcoms
out
shufps
lret
mov
lret
hlt
sub
dec
cmp
cwtl
pop
mov
inc
pusha
lret
jb
addl
xchg
cwtl
loopne
adc
and
pop
loop
sub
aam
push
fmul
repz
bound
pop
mov
jp
jns
int
sbb
xor
push
jge
lret
push
xchg
dec
mov
push
aad
stos
sbb
lock
fcomps
pusha
sub
mov
idivb
je
jo
and
in
psubusb
mov
mov
mov
std
push
stos
dec
sub
stos
add
lahf
sbb
adc
aad
in
xor
fmulp
cmp
call
int
popa
cmc
mov
sub
test
clc
icebp
insl
in
lds
ficompl
xor
jns
std
enter
popa
stos
adc
cmc
mov
adc
mov
xlat
sbb
subl
aas
lret
cmp
mov
lret
push
xor
jecxz
mov
lods
aas
in
lret
pop
push
and
mov
mov
cmp
mov
into
iret
xor
stc
lret
mov
arpl
dec
cli
push
ficomps
rcrb
mov
std
aam
aam
jmp
dec
jb
xor
addr16
push
mov
cmc
int3
mov
cmp
fdivr
xor
mov
into
adc
ja
mov
lcall
out
cmc
stos
and
lea
xor
sub
mov
mov
lret
cwtl
call
imul
xor
push
pop
sbb
lret
adc
pop
fdivs
or
push
lods
ror
pop
mov
cmp
fmul
xchg
pop
push
sarb
dec
pop
adc
cmp
sbb
push
xor
sbb
jbe
mov
pop
lea
mov
cmp
mov
mov
push
arpl
mov
lret
mov
cmpsl
fildl
lret
inc
jmp
cmp
lret
mov
std
mov
push
sub
or
adc
xchg
mov
arpl
mov
in
sub
sbb
cltd
cli
lock
fucomp
rcrb
jne
xor
lret
or
pop
add
pop
jns
cli
dec
add
imull
sarl
or
das
lret
and
lret
sbb
repz
push
xchg
aam
adc
ffreep
and
std
mov
or
stos
lret
mov
ds
push
lcall
pusha
cmpsl
imul
lret
movsl
clc
xchg
mov
ret
lods
add
mov
push
popf
rol
add
xchg
push
jle
inc
jne
shll
imul
cmp
mov
out
inc
pop
fucomip
loope
cli
and
mov
sbb
test
pop
xor
jne
aad
subl
dec
lock
scas
fwait
lret
xchg
or
inc
mov
stos
sbb
dec
rorl
sbb
lock
sbb
push
mov
je
jg
lret
xchg
ret
test
mov
sbb
lahf
sbb
jnp
pop
sub
push
lret
stos
cmp
jl
test
clc
adc
dec
aam
fldcw
test
push
aas
jmp
mov
test
mov
outsb
movsl
repz
cmpsl
inc
bound
jmp
in
pusha
mov
mov
les
push
fnsave
mov
iret
fbstp
mov
data16
dec
loopne
mov
aas
cltd
xchg
ret
fists
dec
push
cltd
bound
sub
enter
jl
mov
rcr
stc
mov
pop
sub
push
nop
add
dec
mov
mov
inc
loopne
dec
ret
daa
loope
inc
push
mov
xor
pop
jle
dec
dec
sbb
jo
cmc
xor
sub
push
lcall
pop
repz
push
sarb
scas
fwait
cmc
popa
popw
mov
cmpsb
push
adc
fninit
lods
mov
inc
push
cmp
mov
adc
es
fsubr
clc
jb
test
pop
dec
nop
pop
call
bound
lock
rcrb
dec
mov
loope
ficoml
jnp
jmp
mov
jg
lds
out
fdivrl
scas
test
into
mov
lret
lds
jge
sbb
sub
adc
xchg
mov
ljmp
and
cmpsl
jnp
lds
mov
out
dec
xor
mov
iret
xchg
ljmp
pop
cmp
pop
xchg
mov
or
orl
in
cmp
mov
scas
inc
and
mov
loop
aaa
cmp
push
mov
rcll
fs
or
adc
sub
push
push
push
les
or
jmp
lods
ljmp
push
lcall
cmpsl
imul
shr
dec
push
data16
or
out
mov
pop
mov
jae
daa
fimuls
adcb
mov
test
ljmp
push
ficompl
es
fsts
rorl
or
xchg
pushf
ret
fsubrp
sbb
cmc
leave
insb
js
dec
vmread
ror
shl
jmp
xchg
out
push
push
jmp
scas
cmp
cmp
mov
movsb
cmp
ficomps
repnz
or
in
push
rcrl
push
stos
les
stc
ret
leave
sub
push
push
dec
add
dec
jmp
cmc
adc
xlat
push
sbb
jl
adc
leave
or
fidivl
addr16
jb
push
fidivrs
push
and
add
insb
pop
into
andb
sti
bound
and
cld
mov
xchg
cli
and
cwtl
inc
xchg
push
mov
pop
iret
cmp
repz
or
pusha
push
xchg
enter
les
mov
xchg
nop
orb
cmp
jmp
loope
sub
dec
jg
adc
xor
repnz
push
xor
or
xchg
mov
es
cld
ds
scas
imul
cmp
jecxz
push
sbb
pop
push
mov
loop
mov
rclb
aas
or
push
jnp
sub
loope
out
into
lcall
ds
and
mov
lret
xchg
int
rolb
xchg
mov
sti
fisttps
arpl
dec
jno
aaa
into
orb
mov
adc
adc
aaa
inc
adc
fwait
mov
or
xor
test
mov
das
pop
pop
jae
mov
push
test
xchg
sahf
iret
push
stos
loopne
imul
and
lret
rcrl
fiadds
mov
adc
stos
iret
mov
outsb
xchg
mov
test
cmpsl
lock
repz
test
xor
imul
mov
andb
clc
das
vandnpd
jl
pop
pusha
or
ljmp
push
scas
pop
push
int
mov
jae
gs
pop
sarb
mov
ljmp
sbbl
fs
pop
lods
clc
mov
int3
jne
movsl
out
mov
aam
cmpsl
push
and
outsb
ja
mov
and
testl
xor
shrb
mov
ret
jl
shl
cld
cwtl
push
jo
inc
or
popf
ljmp
lret
jbe
adc
pop
shll
cltd
push
pop
cmpsl
loope
sbb
jl
mov
inc
push
fs
imul
hlt
mov
pop
mov
and
call
push
decb
mov
data16
test
aas
dec
je
testl
les
rolb
aas
pop
scas
xor
mov
pop
xorl
inc
js
aam
sbb
adcl
scas
mov
fwait
into
pop
mov
loope
insl
dec
sti
pop
movsb
mov
pop
sub
pop
sbb
movsl
and
sub
test
jp
mov
test
outsb
leave
jmp
xchg
bound
scas
and
push
out
aaa
fisubrs
mov
lret
or
cmp
ss
xchg
movsl
inc
add
xlat
sbb
xchg
shrl
mov
jo
push
mov
dec
inc
push
inc
or
pop
jp
cmp
mov
push
push
ss
pop
outsb
mov
cs
lret
pop
scas
add
sbb
adc
xor
leave
or
sbb
inc
xor
and
pop
cwtl
push
or
cmpsb
push
aam
out
int3
insl
leave
mov
push
dec
jns
scas
popf
sbb
andb
ss
pop
dec
add
mov
notl
jne
mov
imul
pop
pop
xlat
mov
ret
xor
call
dec
or
outsb
pop
int3
xchg
mov
inc
inc
nop
push
insb
leave
fcmovu
xchg
fmul
push
cltd
ret
xor
xchg
dec
fidivs
pop
cmp
inc
fsubl
pop
adc
mulb
mov
in
pop
mov
cwtl
pop
sub
setae
in
sub
sbb
pop
leave
lret
jo
mov
sarl
inc
cmp
cmp
push
insl
inc
scas
test
sbb
push
aad
testl
pop
pusha
rcl
lods
push
mov
jp
push
ret
xchg
dec
xchg
pop
sbb
leave
cmp
cltd
mov
xchg
mov
pop
inc
in
adc
sbb
inc
sub
adc
cmp
gs
repnz
push
cltd
mov
outsb
lret
or
dec
mov
sar
mov
inc
cltd
mov
cmpb
push
sbb
lret
dec
mov
aam
cmp
cmp
adc
in
data16
or
cmp
push
mov
nop
je
js
sbb
push
add
push
repnz
dec
rolb
xchg
addb
pop
mov
fisttps
or
in
jge
jbe
or
mov
movq
ljmp
lock
dec
pop
inc
mov
push
shlb
sub
adc
xchg
mov
into
fnsave
xchg
imul
push
or
push
push
or
add
movsb
scas
jp
jno
push
cmpsb
mov
pushf
push
mov
push
inc
sti
repnz
xchg
adc
jae
or
enter
orb
sbb
xor
mov
in
push
pop
push
jp
aam
jb
ds
in
inc
and
add
mov
repnz
mov
ss
filds
mov
sub
cmp
bound
adc
iret
mov
aad
lret
mov
roll
lods
aam
cs
adc
jmp
jg
fldcw
mov
test
or
test
fiaddl
mov
lods
pop
leave
jl
or
orl
dec
repnz
inc
hlt
jp
repz
mov
in
jle
rcrl
lcall
jp
mov
aas
mov
jge
sbb
data16
sbb
in
xlat
cmp
pop
jecxz
mov
iret
pop
mov
push
stos
pop
push
call
rclb
push
sub
pop
adc
fdivrs
pop
pop
mov
loopne
or
push
movswl
mov
popa
divl
sub
xor
push
sub
stos
jp
push
jl,pt
sbb
mov
and
iret
nop
pop
push
test
push
fwait
and
repz
adc
push
pop
push
dec
sarl
scas
mov
push
pusha
xor
lcall
ljmp
sbb
xchg
mov
dec
or
es
and
outsl
fwait
cwtl
xchg
adcb
repnz
dec
scas
je
leave
test
dec
jns
push
mov
pop
adc
ljmp
imul
pop
mov
adc
loop
pop
xchg
mov
lret
shlb
out
sub
cltd
bound
orb
add
loop
push
lea
xor
ljmp
dec
xor
mov
dec
dec
fstpl
fimuls
sti
fcomps
push
jle
cmp
cmp
push
pop
test
jecxz
pop
loope
jl
jp
push
scas
enter
cli
mov
mov
lock
cmpsb
shr
pop
rcrl
loope
mov
mov
sbb
out
jae
sbb
pop
jg
dec
jae
popf
sub
lds
int
mov
sahf
adc
or
icebp
enter
movsl
cmpsl
imul
dec
mov
test
fstp
clc
loopnew
outsl
movsl
or
jle
or
mov
out
lock
mov
int
dec
imul
cld
rcrl
jle
aaa
cs
jl
xchg
jae
push
push
add
popf
scas
repz
test
loope
push
ss
cmp
cmpsl
in
pop
loop
jne
xor
leave
xchg
adc
push
pop
jecxz
sbb
dec
adc
leave
repnz
insb
imul
mov
test
ret
test
xor
ret
movsl
ljmp
pop
mov
in
iret
ss
dec
jns
insl
ret
aas
pop
clc
or
outsb
js
mov
test
push
jne
pushf
jbe
lret
test
pushf
call
lahf
push
sbb
push
lds
xor
jo
lahf
mov
loop
sbb
xor
push
clc
rcr
arpl
and
xor
mov
xor
push
aad
pop
pop
add
pop
leave
sbb
or
pop
adc
shrb
sar
inc
loop
inc
lea
fwait
jns
incb
cltd
dec
daa
sub
inc
jae
imulb
mov
movsl
push
jmp
lret
mov
inc
sti
pop
das
stos
mov
and
movsl
mov
test
test
mov
pop
aam
push
iret
rcr
xchg
dec
sti
and
and
inc
aam
cmp
pop
add
adc
jns
push
insb
or
mov
int
fldl
sub
cmp
pusha
test
pop
or
dec
das
fs
jp
mov
ja
xchg
xchg
popa
push
sub
movsb
in
xor
test
jle
pop
mov
cli
out
cmc
jo
iret
jb
pop
int
push
aad
mov
lahf
cs
lret
dec
outsl
jle
cwtl
fcoms
cmp
stos
fsubl
pop
push
dec
pop
rcll
rcr
push
cmp
fisubl
addl
or
rorl
jp
push
push
mov
xchg
fisubrl
lds
sbb
ss
add
test
fsub
ficompl
cmp
fimull
fs
sbb
xor
push
les
scas
inc
mov
mov
jmp
mov
rolb
mov
out
sbb
movsl
dec
xor
dec
cmp
mov
dec
push
sbb
pop
sarl
dec
shlb
sub
and
fcoml
and
jne
fcomip
xchg
sub
mov
out
test
push
test
sub
lds
sbb
inc
mov
add
icebp
sar
ret
data16
flds
pop
jg
jmp
dec
sti
addb
xor
and
jmp
jmp
jnp
inc
lcall
mov
mov
int3
int3
hlt
mov
adc
adc
or
int
data16
icebp
or
push
push
pop
sub
ja
jo
je
mov
mov
lods
jmp
cmp
xchg
xchg
xor
push
ds
sub
rclb
cmp
xor
imul
pop
xor
and
shlb
mov
arpl
cmp
test
stos
repz
int3
sub
loop
das
gs
fisubs
ss
cmpsl
cltd
jns
pop
pusha
add
dec
stos
jmp
movsb
cmp
jne
dec
shll
fstl
ljmp
jecxz
int
int3
push
aam
ret
lods
pop
lds
sbb
push
mov
push
rcrl
insl
fisubl
sbb
icebp
dec
push
daa
hlt
js
adc
insl
pop
mov
imul
icebp
sbb
fdivs
or
pop
add
xlat
pop
and
fs
in
cmp
mov
shrl
loop
push
repnz
ret
xor
in
loop
js
push
sbb
mov
ret
dec
fsubrs
popa
pop
shlb
jns
sbb
sbb
stos
les
mov
pop
xchg
push
jo
lahf
lcall
jbe
dec
cmpsl
add
fisttpl
jg
mov
out
sbb
fidivrs
jecxz
pop
cmp
imul
outsl
fidivrl
pop
push
cli
pushf
incb
pop
and
jnp
push
mov
cmp
sti
add
pop
sbb
data16
mov
and
inc
dec
add
fidivrs
lods
ljmp
pop
mov
jne
and
jno
or
inc
daa
sbb
and
repz
das
jp
pop
add
test
addr16
push
add
dec
aad
mov
jg
mov
cmp
add
cmp
pop
fsubrs
int3
mov
xchg
mov
aad
mov
jns
pushf
cmp
das
jae
outsb
xchg
ficompl
mov
inc
dec
negl
rcrb
pop
jle
shlb
mov
popf
cmp
mov
push
sbb
hlt
notb
dec
mov
cmp
test
sub
divb
or
cmp
add
cwtl
jno
pop
sub
inc
mov
adc
or
fcoms
dec
dec
jmp
and
sbb
mov
out
mov
test
leave
xchg
cmp
mov
scas
clc
push
insl
xchg
dec
sbb
int3
cwtl
data16
ret
mov
sbb
push
inc
pop
and
adc
push
mov
popa
sbb
loop
lret
leave
shrl
mov
js
xchg
loop
aad
xor
cmp
pop
push
push
bound
and
jle
jbe
int3
aam
dec
mov
loop
pop
clc
sbb
inc
hlt
mov
mov
sbb
test
and
push
mov
adc
rorb
adc
jp
into
aad
mov
imul
pop
push
jge
iret
loop
rol
pop
test
mov
push
scas
push
dec
jle
movsl
pop
inc
push
mov
dec
xor
movsb
cmp
addr16
lods
test
add
xchg
mov
outsb
int
cli
daa
lds
mov
adc
gs
fnstsw
js
mov
das
into
ja
push
orl
pop
and
pop
pop
jne
les
push
loope
xor
push
movsb
out
mov
push
xchg
mov
pop
lret
sub
sti
jb
aaa
dec
shlb
pop
lds
xlat
pop
out
push
and
sub
lock
jmp
pop
popa
je
mov
add
ljmp
lods
sbbb
jecxz
cmpsl
std
adc
adc
sbb
jle
cmc
pop
mov
push
push
or
maskmovq
push
les
jl
or
mov
and
in
js
in
jne
mov
dec
loope
cltd
ret
add
scas
enter
push
fdivrs
in
jnp
gs
mov
pushf
adc
jl
popf
aad
fisubl
bound
or
dec
out
lret
or
jp
insb
ds
rcll
in
lahf
int3
push
repnz
data16
xchg
sub
inc
mov
xor
std
mov
jmp
xor
adc
cmp
push
cmp
int
push
or
sub
jb
mov
adc
pop
jle
rcrb
sub
enter
sub
inc
arpl
lret
icebp
fwait
dec
xchg
sbb
cmpsb
sahf
scas
stos
sbb
fcmovb
pop
mov
in
loope
inc
jmp
test
push
push
popa
lock
fdivr
push
arpl
sbb
hlt
out
in
xor
sti
pop
in
out
dec
lret
add
push
xor
stos
inc
scas
jmp
mov
pop
mov
out
aas
out
test
mov
lods
pop
mov
mov
push
and
ds
push
test
inc
aaa
icebp
push
mov
ret
mov
and
fstp
bound
fcomps
lret
lret
xchg
mov
aam
int3
sbb
inc
mov
cmc
fisubrs
fldl
ret
cltd
mov
pop
and
or
inc
cltd
pop
pop
inc
aad
or
sub
sbb
pop
jmp
sbb
inc
not
inc
push
cld
dec
sbb
jb
push
xchg
add
pop
in
xchg
insb
push
in
idivb
pusha
loop
xor
cltd
adcl
leave
jne
fucomip
xchg
sbb
sahf
subps
dec
into
fcoms
jecxz
aad
mov
stc
xlat
into
mov
insb
dec
xor
insl
xchg
cmp
mov
jecxz
in
insl
mov
inc
ja
sahf
jns
dec
xor
mov
adc
das
push
inc
cmp
fldcw
es
sub
inc
push
jne
push
negl
scas
in
pop
bnd
insl
out
pop
loop
lods
inc
sbb
out
in
sub
es
push
xlat
sub
mov
and
mov
inc
adc
imul
xchg
insl
call
dec
cmp
push
js
ljmp
inc
xchg
test
add
jp
adc
iret
aam
inc
loope
mov
out
data16
lds
dec
jp
and
ljmp
rclb
mov
pop
push
shrl
outsb
push
push
imul
cmp
pushw
xchg
cmp
adc
adc
outsl
loopne
das
in
add
subl
rcrb
rcrb
shr
adc
fldenv
scas
sub
push
lods
sub
push
lock
pop
je
xchg
testl
std
push
pop
sub
ja
or
call
mov
or
stos
rorb
mov
sti
fidivl
jns
or
rorb
push
outsb
jmp
inc
pop
out
dec
lock
push
out
inc
dec
into
dec
dec
xchg
testb
repz
adc
pop
les
adc
pop
add
mov
mov
fsubs
fisubl
push
sbb
pop
ret
xor
test
stc
xchg
xchg
aad
cmp
rcrb
dec
std
aaa
sbb
push
add
bound
int
push
or
jno
and
arpl
fcompl
test
scas
leave
int
or
shll
lock
sub
shll
int3
mov
xchg
mov
sub
clc
fistpll
mov
int3
lods
mov
je
cmp
jle
je
cmp
inc
test
xchg
movsb
sub
adc
les
jle
xor
dec
mov
testb
jl
in
add
test
gs
sub
je
push
out
mov
push
out
test
pop
jbe
clc
in
dec
mov
leave
xchg
gs
popl
ljmp
rcrl
repz
mov
jmp
mov
dec
jmp
repz
mov
in
cltd
pop
js
jp
adc
mov
rorl
stc
cmc
call
push
rclb
and
sub
or
sub
popa
push
rcrl
pushf
out
mov
and
repnz
jmp
push
fcompl
mov
test
cltd
push
nop
lock
ror
sarl
js
pop
testb
jecxz
dec
pop
in
ret
pushf
push
shl
mov
lock
xchg
mov
sbb
ljmp
mov
push
dec
test
push
call
rclb
subl
stos
ret
mov
lds
scas
push
push
dec
loopne
push
outsb
leave
push
pop
pop
das
shl
push
rcll
mov
bts
sti
aad
mov
stos
cwtl
mov
push
jg
mov
xchg
mov
mov
lss
mov
fsubs
adc
rolb
add
das
outsl
bound
mov
mov
and
mov
lret
cmp
mov
out
jp
addr16
pop
mov
fistps
xor
aas
xchg
mov
outsl
xchg
aam
xchg
ret
scas
cmp
mov
repnz
ret
ss
iret
push
decl
inc
and
mov
inc
mov
icebp
testl
stos
push
out
bound
sbb
mov
pop
stc
ficompl
iret
pop
arpl
mov
sti
mov
outsl
dec
sbbl
push
addb
push
pop
rorb
lds
pop
jg
sub
pop
movsl
orl
push
cld
mov
sub
sub
add
dec
dec
orl
inc
lahf
push
adc
pop
dec
gs
push
jle
push
das
mov
mov
into
jne
add
inc
xchg
push
jg
pushf
push
pop
std
sub
daa
push
push
dec
inc
lcall
paddd
xchg
lods
call
jb
test
mov
cmp
xor
pop
daa
shr
push
outsb
inc
in
mov
cltd
mov
test
dec
iret
push
jns
inc
xchg
loopne
pop
stc
and
inc
jae
lahf
ss
push
insb
push
shll
les
aad
gs
vandps
push
fucom
ret
nop
pop
xor
push
push
sub
movsb
hlt
test
xorl
sbb
enter
jne
xor
mov
cltd
mov
add
pop
xor
ja
xchg
pushf
das
pop
fiadds
pop
jecxz
add
stos
mov
mov
mov
mov
rorb
dec
ficomps
push
xor
pop
sahf
lods
or
xor
shlb
mov
xchg
inc
mov
adc
or
xchg
int3
jno
cmp
data16
ljmp
stos
dec
push
aas
fwait
cmpsb
dec
outsb
dec
jl
jns
cmp
es
or
sub
stos
dec
outsb
cli
sbb
out
jecxz
add
andb
mull
pop
in
pop
loope
out
add
divb
je
xchg
cmp
fstps
mov
dec
sarb
aaa
repnz
adc
inc
out
jl
adc
mov
and
mov
into
rcrb
jmp
mov
js
test
and
sbb
cmpsb
fadd
cmp
cwtl
push
sbb
add
leave
fbstp
dec
or
dec
pusha
imul
mov
lea
repz
int
sahf
mov
pop
mov
cwtl
dec
popf
out
mov
pop
loopne
aas
pop
xchg
mov
shlb
lahf
pop
je
push
stos
pusha
out
and
adc
add
fidivrl
jae
rorl
ljmp
push
in
adc
jns
sbb
ss
pop
sbbb
push
hlt
jg
mov
test
jo
fsubrs
pop
lea
mov
jp
xor
fstps
sbb
xchg
js
loopne
leave
scas
ror
lds
mov
jge
add
dec
mov
pop
sub
adc
in
sarb
mov
adc
scas
xlat
insb
mov
mov
ss
stos
loop
xorb
out
push
aas
xor
push
repnz
das
push
push
mov
push
fistl
aaa
push
lds
cmp
dec
nop
xor
pop
xchg
aam
pop
jne
mov
repz
inc
mov
cmpsb
std
inc
incl
xchg
inc
into
mov
lahf
clc
jp
outsb
or
xor
sbb
pop
ret
fidivrs
rolb
loope
push
or
xlat
rclb
pusha
jbe
jb
xor
insb
outsl
out
inc
in
fstpt
jecxz
clc
and
mov
or
es
test
push
add
data16
cli
mov
push
fdivs
sbb
add
push
cmc
push
adc
inc
push
jns
lods
and
in
mov
iret
lods
dec
imul
bound
inc
fistpll
sbb
lret
cmp
dec
in
adc
bound
dec
std
sbb
cmc
out
aam
jmp
mov
jns
and
mov
mov
sbb
lods
lahf
nop
movsb
das
jno
lock
cmpsl
addr16
mov
sbb
or
pop
jle
out
push
les
pusha
xor
adc
cld
pop
movsb
pop
icebp
ud1
sbb
or
sub
loop
fwait
les
push
dec
push
dec
popf
lret
pop
enter
mov
fsubl
adc
repz
das
xlat
pop
shl
data16
hlt
xchg
mov
push
ret
or
or
mov
push
adc
or
xor
cmp
sti
out
js
stos
mov
int3
pop
outsl
rclb
mul
pop
movsl
sbb
paddusb
das
adc
push
inc
mov
mov
inc
sub
inc
xor
pop
lock
xor
xchg
push
dec
pop
dec
pop
push
dec
and
repz
pop
lea
mov
cmpsb
mov
inc
mov
and
pushf
push
or
nop
xchg
bound
loope
fistpll
in
add
push
shlb
test
div
pop
adc
xchg
push
lret
pop
shrb
insl
mov
mov
sbb
dec
aaa
push
lds
xor
out
sub
mov
ljmp
jne
mov
cltd
add
enter
das
xchg
push
loop
sub
cld
imulb
iret
out
js
mov
or
mov
lods
and
jne
cwtl
es
ffree
sub
daa
push
shl
sbb
insl
aas
jg
cmp
pop
loop
testb
sbb
sbb
sbb
and
mov
int
scas
arpl
dec
dec
mov
iret
push
iret
mov
cwtl
enter
push
outsb
jl
sarb
pusha
inc
mov
or
fucomip
mov
ret
pop
mov
movsb
jno
jns
mov
push
lea
mov
xchg
dec
jbe
jle
push
mov
pop
int3
rcr
xchg
jne
andl
in
pop
fs
insb
xchg
sub
test
mov
and
lcall
cmp
out
outsl
push
cmp
sbb
push
repnz
sub
outsl
mov
mov
fucomp
fldcw
out
and
repz
rolb
push
rorb
inc
pop
sti
fbld
jno
mov
xor
push
jns
in
sarl
add
outsl
int3
fcoml
stc
popf
sub
push
jnp
cltd
cmp
scas
mov
cmp
ljmp
mov
push
rorl
sahf
into
pop
xorb
or
push
add
dec
idiv
stos
inc
imul
jge
add
and
sbb
mov
pop
mov
jo
jle
sub
lock
psrlq
insb
sub
dec
dec
pop
lea
aaa
pop
fiaddl
cmp
mov
testb
push
or
ljmp
leave
jno
cmp
jne
xor
mov
imul
test
adc
aad
mov
ficoms
pop
int3
cmpsb
sbb
in
adc
jb
sbb
ljmp
sbb
out
mov
sbb
inc
nop
pop
jl
mov
int3
push
push
xchg
ret
fsubs
js
adc
push
xor
call
filds
aam
je
lahf
iret
ljmp
or
loop
ret
cli
xchg
and
dec
popf
int
and
push
bnd
add
fistps
sti
push
insb
in
mov
inc
shrb
push
add
shr
add
sbb
in
fs
mov
test
mov
mov
mov
xchg
mov
mov
xchg
test
jo
xchg
and
out
sarb
cmc
inc
or
or
xchg
fdivp
out
cltd
mov
loopne
pop
adc
jne
push
mov
lods
outsl
xchg
aam
lds
mov
lret
out
out
dec
dec
dec
cmp
sub
pop
add
dec
lret
inc
dec
out
xchg
rorb
aam
pop
lods
mov
das
scas
loopne
xor
test
cs
add
out
sub
je
das
shlb
test
cli
lods
mov
movsl
pop
mov
ja
les
out
shlb
js
jbe
roll
push
cmp
negb
inc
inc
std
push
out
xchg
negb
loopne
popl
iret
ds
bound
jns
shr
addr16
xchg
mov
ss
dec
mov
jae
out
sub
sub
dec
xor
scas
sub
movsb
inc
xchg
xor
push
cmp
iret
pop
lret
pop
push
push
push
cltd
push
lds
or
mov
lock
xchg
andl
enter
push
mov
xor
lret
add
popa
jp
lds
push
fs
sbb
fidivl
sub
mov
inc
nop
mov
pop
push
mov
xor
pop
mov
add
lods
scas
or
mov
push
shrl
or
or
loopne
mov
cmpsl
xor
ds
jae
sti
sar
pop
test
imul
xchg
sub
fstpl
jae
loop
test
lock
fisubl
sub
dec
pop
repnz
xchg
push
mov
push
test
pop
fstl
js
or
int3
test
xchg
inc
lahf
xor
sub
sti
push
push
mov
xchg
sbb
sub
jge
inc
push
adcl
pop
insb
add
ss
in
adc
or
pushl
imul
and
test
push
jne
push
push
and
adc
pop
pop
iret
jnp
out
push
add
jno
add
jmp
insb
aam
xchg
cmp
or
push
icebp
hlt
hlt
sbb
es
lcall
xor
xchg
push
or
test
sar
adc
cmp
lds
sbb
pop
mov
dec
popa
inc
js
sub
hlt
test
clc
hlt
mov
jecxz
fcmove
pop
pop
subl
imul
mov
sub
push
sbb
pop
gs
jns
shll
or
rclb
data16
sub
dec
int3
cs
and
fwait
add
inc
ret
adc
cmp
repz
imul
test
scas
xchg
loop
sti
insl
mov
push
in
int
cmpb
les
push
xchg
sbbb
pop
push
scas
pop
jo
ret
data16
sahf
aas
jecxz
ror
dec
dec
ficoml
ret
mov
mov
movsl
movsl
or
test
shll
lods
int
incb
sahf
out
lods
push
push
test
xchg
jge
mov
sarb
mov
pop
xlat
int3
sub
jo
shrl
int
pop
outsb
mov
repz
cmpsb
adc
mov
loopne
pusha
pop
lea
mov
sbb
mov
dec
sub
mov
lahf
pop
fstpt
dec
cmp
xor
jae
and
or
and
ficomps
icebp
in
sub
insl
adc
pop
fistpl
loopne
rcl
rcrb
jp
jle
mov
pop
pop
aas
mov
push
dec
pusha
dec
jmp
in
inc
push
rcrb
add
fxch
mov
je
test
mov
pop
jp
or
xor
or
pop
nop
mov
add
adc
or
mov
orb
inc
pop
mov
jge
push
mov
push
jecxz
dec
pop
xchg
add
lods
push
sbb
jb
inc
and
jle
push
xor
ret
mov
lret
mov
dec
repnz
jbe
xchg
adc
cs
pop
rcr
inc
ds
or
mov
pop
fnsave
in
cmp
imul
les
push
ror
fldl
sbb
lods
adc
in
or
adc
scas
out
gs
cltd
push
out
or
subb
or
test
imul
inc
call
into
mov
push
movsl
mov
cmpsb
jg
or
lahf
andl
aaa
cld
out
scas
sbb
mov
xchg
into
arpl
pop
pushf
adc
cmp
jno
ror
and
push
jp
pop
mov
aas
push
lods
test
repnz
push
xor
sbb
pop
mov
jb,pn
mov
outsb
mov
sub
pop
js
test
lret
mov
sbb
or
icebp
xlat
ficoms
lea
jne
add
fmuls
mov
inc
pop
push
sub
add
sarb
mov
jne
sbb
xchg
lods
push
out
jmp
outsb
mov
mov
adc
rorl
out
or
sub
pop
cmp
imul
jp
adc
ss
imul
jne
jno
outsb
jg
xchg
xor
pop
pop
ret
dec
test
fcompl
pop
mov
pop
mov
push
dec
jge
push
or
push
xor
sbb
fs
lret
xchg
bound
xchg
add
mov
mov
lock
cmp
das
aad
and
testb
movsl
mov
mov
iret
ja
sub
push
push
xchg
jne
jp
pop
fwait
mov
xchg
into
aaa
test
rorl
push
pushl
pop
iret
lahf
lret
bound
inc
int
std
das
mov
sub
xor
adc
dec
scas
push
aam
sbb
mov
push
inc
call
push
push
jle
les
rcrl
loopne
jg
pop
out
xchg
jae
mov
mov
test
jle
inc
pop
and
pop
shlb
loope
rcrl
jg
dec
inc
test
fstpt
es
mov
into
push
cmpsb
lock
int
pop
push
adc
fucomip
xor
rclb
daa
mov
inc
push
add
mov
lock
loop
and
add
sub
sub
out
out
adc
mov
mov
outsb
loop
adc
jbe
mov
xor
or
in
push
std
sbb
inc
and
rcll
lea
jmp
adc
pusha
daa
outsb
into
mov
out
inc
dec
pop
in
xchg
cld
cmc
jp
xchg
gs
sub
pop
push
push
push
iret
jne
xor
lret
cmpsb
fdivs
push
mul
mov
out
std
scas
das
and
scas
bound
loop
popf
inc
cmp
cmp
pop
shrl
lret
sub
andb
scas
or
mov
dec
pop
mov
and
pop
mov
cwtl
pop
xchg
hlt
cltd
test
cmpsl
scas
push
mov
push
aas
xchg
xchg
daa
push
push
ret
pop
les
pop
add
fimuls
dec
fdivrl
cli
xlat
arpl
and
mov
ret
inc
imulb
pop
dec
notl
push
xlat
sub
pop
mov
pop
movsl
jle
insb
dec
pop
sbb
pusha
sbb
pop
mov
test
ret
shlb
arpl
or
push
xchg
or
cmpb
push
mov
fcmovu
cmp
jge
cmp
mov
and
mov
mov
ret
push
push
js
lahf
pop
scas
iret
or
into
jp
test
in
jge
pop
jbe
aas
out
jnp
call
lods
push
sbbb
iret
push
cmp
rolb
mov
adc
xchg
in
push
repnz
inc
pop
adc
bound
je
xor
or
push
imull
int3
jp
push
test
fldl
test
xchg
das
les
jno
loop
out
push
fucom
lock
sub
cmpsb
dec
les
leave
add
mov
xchg
inc
xchg
push
add
sti
js
repz
mov
push
cmc
pop
xorb
subl
clc
out
sarl
pop
push
mov
push
cmp
leave
inc
fcmovne
or
fwait
or
sti
push
xor
test
bound
in
lods
sbbb
push
mov
mov
adc
neg
notb
mov
mov
lret
loop
mov
cli
std
rclb
lock
lock
mov
cmp
adc
daa
mov
adc
inc
inc
stc
add
test
dec
mov
push
xlat
popa
xchg
push
loope
in
mov
xlat
enter
std
or
stos
and
rcrb
popf
mov
inc
add
sbb
pop
push
aaa
dec
sti
push
lret
mov
scas
cli
cmp
popl
mov
div
lea
lret
ret
das
stos
adc
cmp
inc
or
cmp
sub
adc
aaa
mov
dec
or
je
jge
insb
mov
mov
mov
movntq
test
stos
and
notl
mov
nop
fldcw
rorb
sbb
xchg
dec
fidivrl
push
add
push
aaa
inc
lret
dec
xor
lret
jl
pop
and
dec
cmp
pop
xchg
fmuls
repnz
lret
inc
pop
je
mull
stos
inc
cmp
aam
jge
insl
adc
loopne
les
shl
out
xor
inc
pop
xchg
inc
cmp
inc
push
lea
fwait
lock
mov
jmp
mov
cwtl
shrl
cmp
cmpsb
add
rolb
rorb
push
cmpl
loop
sar
lcall
xchg
jo
repnz
jle
mov
into
push
outsl
xlat
mov
stos
sub
mov
xchg
sbb
pop
or
jle
mov
mov
push
cmp
lret
sbb
pop
clc
sbb
mov
lret
xchg
xchg
or
int3
imul
mov
in
pop
push
cmp
arpl
ret
mov
hlt
into
and
push
outsb
out
jecxz
lret
sti
aam
imul
test
mov
in
in
fs
cmp
mov
mov
xor
sbb
jge
adc
lret
lret
test
movsl
fdivl
pushf
push
sub
stc
ficompl
dec
pop
mov
inc
loop
and
mov
mov
xchg
xchg
into
btl
inc
adc
pop
scas
lret
lods
cmpsb
into
jl
aad
and
dec
roll
add
fbstp
out
sub
ss
sub
lea
loop
mov
loopne
int
or
call
add
jle
inc
fidivrl
xor
out
popa
add
adc
lret
int
gs
inc
lret
cltd
in
lds
mov
shl
insl
xor
dec
jae
cli
adc
ss
pop
mov
repnz
pop
lret
loop
sbb
mov
lret
imul
fsubrs
lret
adc
popa
fs
lret
cltd
aad
mov
inc
cmp
mov
lret
mov
or
jge
aam
xchg
cwtl
pop
lret
mov
lret
or
pop
repnz
lret
xor
push
mov
idivb
fidivs
ljmp
xor
out
mov
mov
inc
inc
fnstenv
cmp
cmp
mov
inc
mov
loop
jmp
xchg
fxch
rolb
and
pop
and
in
mov
ss
push
cs
lret
sti
mov
and
in
and
test
cmc
lret
shlb
mov
mov
insl
inc
lea
dec
outsb
mov
sar
sahf
cmpsb
outsl
stc
lret
and
pop
push
add
mov
aam
xlat
lret
nop
xor
push
in
jne
adc
inc
fstpt
mov
in
je
sbb
mov
jge
lret
xorl
mov
cmp
lret
out
les
cld
lds
add
mov
aam
shl
xor
lret
mov
lahf
nop
enter
cld
in
ror
sbb
fs
or
and
dec
lret
or
mov
jge
movl
mov
dec
ret
lret
and
fisubl
dec
cmp
sbb
push
sbb
outsl
xor
sbb
sub
push
dec
test
sub
mov
addr16
xlat
sahf
mov
dec
stos
aad
ret
shrb
dec
loop
or
lret
mov
jno
jp
xor
xchg
repz
movsb
jnp
leave
push
xchg
ljmp
mov
out
xorl
xchg
push
repz
and
ja
ss
push
fwait
sti
iret
dec
nop
outsl
push
jle
pop
dec
sub
sbb
test
mov
inc
add
aam
in
jae
lret
sbb
cmp
mov
lds
xchg
nop
fwait
inc
lret
xor
lds
mov
jnp
and
cmp
enter
ljmp
mov
aam
xchg
insb
adc
ror
ficoml
sub
xor
int3
jnp
pop
aad
mov
pop
push
mov
test
notb
lret
lods
xchg
rcrb
jns
push
stc
sub
lret
icebp
popa
mov
pop
insb
or
cmpsl
inc
pop
jbe
or
mov
movsl
fdiv
xchg
xor
sub
in
cmpl
lcall
cmpsb
mov
mov
lret
xorb
add
lret
fildll
cmp
nop
sub
add
mov
into
xchg
stos
cmpsl
mov
cmp
add
ds
aas
rclb
mov
xor
ljmp
dec
test
jge
cmp
xchg
jmp
add
and
das
hlt
jns
lret
pusha
lcall
fwait
jecxz
push
push
xchg
fnop
lret
mov
push
idivb
mov
adc
cld
add
or
loopne
aad
push
cmpsl
lcall
arpl
mov
or
xor
sbb
sub
lret
mov
mov
pop
lcall
or
ret
fidivl
sbb
mov
rcll
repz
jle
or
lret
pop
push
dec
icebp
add
sbb
insb
lret
xchg
daa
xor
add
stos
rcr
fs
ljmp
inc
pusha
lods
shl
loop
insb
insl
cmp
adc
push
daa
mov
or
sub
pushl
xchg
repz
jbe
mov
mov
rorb
xchg
pop
loope
or
andb
int
hlt
sub
jo
icebp
imul
inc
lret
pop
popa
or
in
icebp
loop,pt
out
in
cmp
pop
bound
cwtl
push
lahf
jmp
sbb
lret
lcall
arpl
sbb
add
pop
clc
xorb
mov
sbb
ds
into
test
shrb
std
cmp
roll
or
mov
scas
mov
ret
icebp
ficoml
fiadds
cwtl
lahf
jge
jecxz
push
imul
aaa
push
sbb
pop
lret
pusha
outsl
xor
sbb
fidivrl
push
mov
xchg
arpl
xchg
cmp
jbe
inc
icebp
int3
iret
inc
add
push
mov
dec
shrb
sti
cmp
adc
push
mov
pop
push
andb
mov
loop
fimuls
mov
adc
dec
push
mov
mov
dec
test
jns
sub
adc
mov
fcomip
mov
xchg
sbb
fs
jp
cli
mov
push
adc
fwait
push
ljmp
call
cmp
popl
cs
mov
mov
loop,pt
and
je
sub
hlt
cmp
cmp
xlat
scas
mov
pop
pop
insl
inc
and
sbbb
xor
lret
notb
push
lods
pop
ds
inc
xchg
and
int
mov
movsl
xor
into
or
stc
out
stos
lret
xor
repz
fucomi
cmp
js
sti
pop
les
pop
push
mov
scas
mov
pop
shrl
rcr
jge
xchg
rorl
pop
sbb
sti
iret
rolb
test
push
int
push
aad
scas
data16
push
jbe
cwtl
mov
scas
xchg
inc
push
punpckhbw
mov
xchg
push
mov
cltd
repz
scas
out
faddl
ret
test
xchg
mov
cmp
push
jbe
add
fldcw
mov
sti
bound
or
iret
sbb
xchg
and
out
aad
cmp
sbb
rorb
pop
add
jle
test
ja
sbb
cli
scas
push
pop
popf
fnstenv
mov
sub
fldcw
pop
insb
out
inc
or
inc
or
inc
loope
mov
jnp
je
outsl
or
sub
enter
aad
jnp
jmp
xchg
cmp
mov
das
filds
mov
dec
in
lods
test
jo
jle
sbb
insb
xchg
lds
mov
rcrl
mov
test
ror
test
sub
loopne
shrb
push
push
outsb
xlat
add
movsl
arpl
push
sbb
push
cmp
jle
lds
mov
int
jmp
mov
fcmovbe
pop
mov
add
ds
jp
mov
sbb
fcoml
ss
inc
je
int
mov
jae
pop
outsl
int
add
xchg
cmp
or
add
push
mov
scas
lds
push
insb
aas
repz
es
repnz
dec
mov
imul
adc
dec
lret
push
scas
xchg
mov
cs
push
notl
mov
iret
jns
dec
push
sbb
xchg
test
inc
pop
xchg
add
mov
or
shlb
mov
xor
movb
push
jge
mov
pop
insb
sti
arpl
mov
lret
fildl
insl
jbe
and
stos
fld
rclb
lock
sbb
jo
inc
push
inc
fistpl
mov
lods
cwtl
xor
push
ljmp
or
xor
lods
and
jl
xchg
leave
xchg
mov
fs
and
in
mov
mov
push
ret
sbb
pop
mov
test
repz
mul
mov
mov
outsl
pop
or
lret
or
push
mov
jne
xchg
mov
mov
or
fisttpl
pop
jnp
sti
fsubs
xchg
sarb
jno
xor
sub
scas
test
mov
pop
xor
and
andb
lea
into
bound
repnz
int3
dec
out
mov
enter
xlat
addr16
adc
cs
into
loope
sbb
inc
sbb
imul
loop
adc
cmp
jg
jne
inc
push
repnz
sub
ds
ljmp
jg
push
add
mov
xor
test
out
push
imul
mov
lret
int3
sbb
cmpsl
and
adc
cmp
or
mov
inc
pop
push
push
dec
xchg
cwtl
lcall
and
mov
ja
xchg
xor
or
gs
je
movsl
faddl
sub
iret
or
out
add
lret
inc
pushf
mov
jno
lods
ficomps
gs
jl
mov
shll
push
mov
cld
aas
inc
mov
push
cmp
mov
pop
mov
mov
or
jno
mov
pop
xor
and
aam
mov
mov
sbb
pop
mov
push
and
xchg
pop
ljmp
push
mov
outsl
testl
xchg
and
mov
aaa
lods
lretw
sbb
adc
and
mov
bound
sub
test
xor
ret
repnz
mov
inc
repz
imul
or
test
mov
xchg
pop
repnz
xchg
inc
out
xor
iret
out
loopne
incl
or
sub
lret
and
icebp
xor
mov
int
pop
or
scas
mov
rorb
scas
and
add
or
cmp
aas
sub
stc
add
push
lds
and
xor
repnz
pop
pop
fstps
lret
inc
push
stos
repnz
mov
js
movd
fsubrs
and
pushf
inc
inc
hlt
pop
not
out
dec
xchg
gs
pusha
or
cmp
stos
xor
adc
mov
fwait
aad
adc
ret
loop
int
fisubrl
mov
in
sbb
xor
imul
mov
je
push
jge
loopne
out
sub
xlat
icebp
jl
fstpl
inc
cltd
mov
cmpb
xchg
adc
scas
mov
in
bound
push
push
inc
fstpt
mov
push
pop
jno
jmp
outsl
push
std
into
hlt
cmc
pop
cmp
test
mov
mov
dec
mov
pop
das
adc
sub
push
jnp
mov
sbb
add
adc
lret
cmp
cmp
stos
mov
fsubl
push
sti
pop
adc
mov
rcrb
sahf
sub
orb
int
mov
scas
psubw
and
es
fisubs
sahf
fnstenv
push
rorb
pop
into
push
pop
out
xchg
push
and
arpl
bnd
test
xor
das
lret
or
das
push
dec
mov
lds
jno
push
je
in
into
test
pop
insl
mov
add
mov
mov
mov
sbb
jns
rcrb
lahf
inc
mov
incl
test
ret
push
repz
mov
jle
jp
jbe
cmp
or
lret
call
mov
inc
jo
nop
xor
arpl
bound
movsb
rclb
xchg
add
adc
jo
or
push
mov
pop
lds
push
jp
lods
adc
mov
or
jmp
push
cmc
out
stos
bound
js
sbb
imull
jno
sub
cmpsl
rolb
xor
ja
add
cmp
or
pop
xor
pop
push
das
mov
inc
out
xchg
add
mov
imul
and
mov
enter
mov
addr16
in
sti
pop
xchg
mov
pop
pushf
push
mov
pop
sti
push
mov
mov
mov
movsl
pop
add
mov
pop
mov
or
in
pop
xchg
push
ljmp
test
adc
mov
mov
push
dec
push
push
xor
pop
hlt
add
push
and
mov
push
xorb
jle
cmp
and
lret
mov
mov
js
mov
dec
push
pop
mov
sub
enter
lea
sti
js
push
pop
adc
fs
adc
cmp
decl
mov
xor
test
lahf
mov
es
ljmp
dec
ja
lds
xchg
daa
repnz
mov
mov
rcll
fs
pop
mov
adc
cs
cmpsb
sbb
je
fistpll
test
out
push
and
ja
push
test
mov
pop
xor
push
pop
xchg
mov
mov
fnstcw
push
jg
addb
aaa
xlat
dec
pop
ljmp
mov
adc
hlt
inc
xchg
scas
loop
inc
out
imul
fistps
gs
test
mov
add
and
sbb
inc
pushw
adc
pop
gs
loop
lcall
sbb
adc
lret
xchg
scas
call
les
flds
jne
gs
clc
adc
xchg
inc
scas
scas
cltd
or
ljmp
mov
sarl
sbb
psrad
stc
jl
dec
adc
xchg
adc
loope
push
nop
sub
int
js
xchg
test
aam
jp
cli
adc
aad
dec
sub
shrb
mov
push
insb
mov
cmpsl
pop
mov
into
stc
aaa
stos
out
cmp
cli
jae
sahf
or
hlt
scas
lret
xchg
add
jle
pushf
lret
or
hlt
lret
sti
sub
enter
jno
ss
inc
or
push
jecxz
popa
insl
leave
shlb
xchg
dec
bound
lret
lea
out
xchg
lret
cmp
cli
scas
filds
dec
cmp
xor
jne
lods
mov
shlb
adc
lret
inc
pushf
int3
pop
movsl
out
pop
pop
xchg
xor
loop
sbb
in
lret
mov
inc
lret
je
mov
pop
push
or
jae
or
cld
dec
dec
dec
sbb
jmp
sbb
or
in
push
jbe
cmpsb
decb
mov
dec
pop
xchg
int
lods
and
out
pop
fld1
dec
bswap
jecxz
popl
lret
inc
pop
lret
inc
mov
stos
cmp
hlt
into
mov
movsb
xchg
jmp
cmp
and
pop
mov
push
or
sub
mov
lret
repnz
xor
xor
test
and
mov
add
mov
add
jo
add
xor
rolb
xchg
xchg
mov
dec
inc
cli
stos
int
aad
and
lret
or
das
lret
and
aam
xchg
mov
es
in
lods
lret
fstl
popa
loopne
sbb
mov
push
adc
mov
nop
leave
lret
mov
mov
fidivl
mov
arpl
sbb
loop
outsl
lret
cltd
in
and
les
stos
jl
jns
mov
out
cmpsl
sbb
stos
xchg
pop
xchg
repnz
adc
xchg
and
push
shr
test
mov
negb
addr16
jp
gs
mov
insl
adc
test
pusha
push
shl
ss
icebp
sbb
lret
imul
mov
and
je
lret
inc
push
jnp
add
stos
subb
stc
mov
lret
xchg
jmp
cmp
sub
mov
daa
out
loop
outsl
outsb
pop
push
aaa
lods
lahf
pop
ss
cmpsl
enter
clc
jno
fwait
rorl
in
lods
inc
mov
shr
jns
out
push
pop
jecxz
and
lret
rcll
out
rcrl
pop
cmpsb
ja
sub
or
mov
lds
mov
repz
test
or
rcr
pop
hlt
or
adcb
push
out
int3
insl
cwtl
dec
pop
sahf
lret
cmp
cmp
lret
les
pop
ja
mov
mov
inc
mov
jne
int3
push
lods
cmp
or
movsb
dec
jge
sbb
mov
out
pop
les
fmuls
int
aad
push
jno
lahf
hlt
movsb
cmc
test
mov
inc
in
cmc
and
lret
sub
outsl
jge
lret
cmp
lret
stos
fs
mov
lret
repnz
xchg
and
pop
test
push
imul
pop
scas
dec
pop
lods
xchg
imul
aaa
inc
jb
xor
call
pop
out
cmpsb
mov
jle
push
pop
mov
xchg
fisubs
and
stos
push
xchg
out
or
sbb
pop
adc
shl
sbb
mov
xchg
fisubl
cwtl
dec
cmpl
cmp
lret
push
out
xor
mov
mov
xlat
dec
push
inc
je
push
cmpsb
popf
dec
lret
pop
mov
mov
mov
and
mov
fdiv
movsl
dec
cmc
pop
lret
and
lret
jb
out
bnd
gs
mov
push
adc
inc
jns
sbb
aaa
xchg
lret
xor
inc
lret
jmp
sbb
mov
push
ja
mov
pop
dec
leave
dec
test
push
inc
mov
adc
popa
lret
test
pop
pop
pusha
es
push
mov
mov
bound
popa
or
lods
push
pop
repz
dec
push
test
icebp
mov
inc
lret
pop
mov
mov
rolb
or
fdivr
lret
adc
ja
fwait
lret
push
fistl
push
adc
in
jle
jns
aas
adc
push
pop
mov
fdivrs
ret
xor
jmp
lret
adc
enter
lret
out
mov
shll
lret
inc
mov
icebp
mov
mov
lret
sub
stos
loopne
lret
adc
and
jg
stos
aam
sub
js
sbb
jecxz
lret
lock
ret
jns
das
ja
mov
sbb
fidivrl
mov
mov
xor
test
popa
dec
lret
jno
jg
lret
cmp
dec
lret
and
jnp
sub
sub
cmp
xor
cmovnp
inc
mov
sti
mov
std
xchg
je
shlb
mov
sub
aad
cmc
loope
dec
fidivrl
mov
iret
xchg
mov
lods
jle
rcrb
or
adc
out
cmc
add
pop
and
fisttpll
and
dec
lret
adc
lret
aam
dec
pusha
cmp
stos
popf
outsl
ljmp
pop
stos
push
aad
clc
insb
aas
int3
mov
test
stos
leave
pop
add
sahf
repnz
loope
dec
nop
rclb
jno
lret
or
scas
push
sub
xchg
scas
daa
push
cmp
adc
stos
sahf
popa
iret
xchg
dec
mov
adc
xlat
mov
pop
and
sbb
dec
pop
cmp
and
aad
es
mov
jl
mov
adc
sti
dec
repnz
lret
aad
inc
mov
sub
xor
mov
inc
repnz
dec
sbb
sbb
cmp
cmpsb
lds
mov
jle
mov
cli
mov
loopne
mov
mov
mov
fidivl
dec
xlat
cs
lret
add
pop
fsubs
sarb
inc
mov
aam
or
out
adc
jbe
in
lret
idiv
insl
jg
lods
in
shrb
mov
lods
cli
pop
lret
sub
push
fdivs
and
mov
add
aaa
xor
dec
in
mov
mov
lock
pop
pop
inc
icebp
lret
call
cmp
push
stc
xchg
lods
push
mov
dec
jne
cmpsl
test
xchg
mov
push
mov
mov
inc
cmp
push
inc
cmp
jbe
mov
loop
sub
lret
call
jne
int3
mov
pop
xbegin
cmp
aas
rolb
cltd
aaa
lret
test
add
lret
xchg
add
mov
in
sub
je
arpl
sbb
cs
les
push
hlt
sbb
in
push
add
push
aam
sbb
scas
stc
repnz
lret
adc
pop
push
xchg
jecxz
scas
movsl
mov
push
cld
jns
lret
xchg
mov
push
idivb
je
and
fmul
mov
daa
mov
js
sub
adc
idivb
mov
aam
pop
mov
lret
jecxz
jno
lahf
lods
cmp
pop
js
scas
lret
push
call
fidivl
mov
fldt
mov
jne
jg
sahf
jle
mov
inc
test
leave
aad
jbe
adc
popf
loopne
push
in
push
loope
lret
lahf
iret
lock
pop
lret
incl
fwait
cmpsl
add
push
loope
stos
aad
jnp
int3
nop
push
mov
push
loop
mov
test
roll
push
loope
sbb
adc
jo
sub
loope
lret
es
cwtl
aaa
outsb
or
dec
imul
in
lret
je
and
jp
mov
data16
push
mov
add
test
cli
push
mov
push
scas
ss
mov
sti
lret
pop
lcall
push
push
ret
rcr
adc
jecxz
pop
add
pop
pop
mov
inc
lret
dec
in
lret
sahf
xchg
mov
cmpsl
iret
ljmp
icebp
cltd
mov
movsb
xchg
scas
mov
jae
mov
ds
aaa
dec
mov
imul
rorb
imulb
aaa
lret
mov
lret
mov
inc
aad
xor
jo
mov
dec
sbb
xchg
pop
ds
jno
mov
push
inc
pop
outsl
decb
aaa
sbb
or
neg
aam
mov
xchg
lods
sbb
xorb
jl
push
inc
scas
sub
mov
pop
scas
lret
xchg
or
ret
push
ja
fistpll
imul
add
push
mov
ljmp
dec
xor
xor
test
mov
pop
jg
sbb
jbe
out
jne
mov
sub
and
sbb
push
sub
cli
or
jbe
dec
in
mov
push
inc
insb
fs
loop
cli
xchg
test
into
testb
jmp
pop
inc
push
mov
lret
jns
and
je
inc
or
fs
inc
insb
repnz
dec
fistpll
repnz
xor
cmpl
es
jmp
inc
lret
in
jmp
ret
mov
xchg
loope
shll
jbe
clc
inc
cmp
pusha
jecxz
jns
mov
dec
jo
shll
pop
mov
dec
shrb
dec
xchg
in
pop
pop
sbb
inc
stos
push
push
pusha
aas
ja
lret
dec
inc
jae
mov
add
push
shl
mov
andl
pop
shl
cmp
pushf
ljmp
sub
mov
test
mov
or
imul
dec
xor
add
sbb
sbb
daa
out
adc
sub
xchg
push
mov
data16
fistps
std
out
lahf
jmp
fmuls
jge
iret
mov
into
in
aas
add
mov
sub
dec
daa
pop
mov
out
test
fsubs
ret
shl
pop
sub
cmp
test
or
jge
xor
sbb
lds
xor
xor
mov
jg
orb
mov
icebp
repz
sbb
pop
ss
mov
inc
push
push
jmp
dec
inc
pop
and
movsl
fisubl
pop
push
xor
xorb
jae
sbb
pop
arpl
mov
mov
divb
sub
mov
adc
iret
mov
repnz
mov
inc
pushf
lea
cmpb
jecxz
or
push
dec
cmp
in
mov
outsl
cmp
iret
movswl
lods
or
cmpsb
push
roll
pop
pop
vpsrlw
stos
xor
popf
pop
dec
mov
lds
mov
sbb
les
or
int3
sbb
jmp
cmp
cmc
push
sti
into
jg
xlat
mov
in
cmp
mov
sub
data16
out
add
adc
pop
cmp
push
arpl
repnz
lahf
jno
pop
cmpb
rcrl
fildll
out
mov
add
xchg
pushf
sbb
push
push
or
into
sahf
gs
cltd
call
xor
rcl
fwait
push
mov
add
enter
jmp
push
in
push
pusha
es
xor
push
adc
or
pop
push
lds
add
lcall
pop
push
movsl
lahf
jg
fisttpl
sub
push
das
jmp
imul
cmc
push
or
push
jmp
in
jns
pusha
jl
ja
and
into
or
clc
mov
shrl
fwait
push
adc
jecxz
divb
and
test
repz
cmp
push
mov
loope
inc
shlb
xlat
nop
ljmp
mov
push
scas
mov
dec
push
aas
es
jge
movsb
stos
sbb
aas
or
imul
nop
lahf
or
bound
daa
mov
mov
pop
or
jo
push
adc
cwtl
mov
pusha
push
shll
push
xlat
push
xor
lret
test
cmpsb
shl
arpl
out
icebp
jnp
mov
mov
or
xchg
jg
loop
jno
aas
push
insl
lods
sbb
or
adc
andb
and
jo
pop
jb
pop
daa
js
xchg
xchg
or
shrb
leave
push
leave
xchg
stc
adc
daa
int
es
xor
or
add
test
daa
mov
loope
ss
mov
mov
or
jno
push
add
inc
into
xor
inc
cltd
cwtl
mov
mov
cld
aas
imul
bound
fidivrl
iret
jmp
test
test
enter
pushf
or
or
cmpsl
mov
negl
mov
addr16
lcall
xor
lcall
outsl
cltd
test
mov
xchg
dec
out
aam
mov
lahf
cmp
jmp
push
fiadds
push
bnd
jne
daa
fdivs
sbb
pop
bound
mov
pop
ficompl
imull
cmp
push
jmp
sar
push
test
test
cmp
int3
ret
or
cmp
pop
js
aaa
std
in
imul
or
mov
adc
mov
inc
arpl
repnz
mov
pushf
jmp
or
adc
mov
push
and
test
enter
push
push
out
out
inc
iret
mov
xchg
fsubrs
movsb
mov
sbb
cmp
or
add
add
xor
and
sarl
or
fpatan
push
push
ja
and
je
push
out
outsl
shlb
cmp
cmp
jmp
xor
add
lret
loopne
popf
pushf
xchg
fxch
clc
xor
adc
fstl
int3
fsubs
inc
enter
insl
or
lret
add
mov
out
lret
lods
jnp
sbb
add
inc
fdivrs
mov
inc
mov
icebp
imul
aaa
jae
add
or
cltd
dec
mov
and
sahf
dec
add
pop
lret
ljmp
enter
mov
push
mov
inc
lret
mov
lret
xorl
shrb
test
ljmp
sbb
and
gs
lret
add
fcmovnbe
xchg
test
fmull
xchg
data16
pop
lret
aam
xor
push
lret
adc
sbb
fildll
int3
sbb
popf
icebp
and
lret
std
xchg
out
jmp
rcrl
cmp
stos
and
pop
push
add
fldenv
into
iret
rcl
lret
lock
push
and
adc
xchg
mov
fidivl
test
jno
sub
lret
in
fsubs
insb
add
icebp
xlat
jge
and
fnclex
xchg
cmp
pop
pop
mov
sbb
movsb
jns
xor
mov
pop
jle
imulb
push
movsb
loopne
scas
cmp
pop
enter
lahf
aam
pusha
or
mov
test
push
add
in
dec
fdivrs
lret
call
jp
idivb
shlb
dec
mov
sarb
or
fisubrl
ss
inc
mov
fwait
push
fiaddl
pusha
mov
pop
fldl
sbb
in
in
pushf
or
push
fcmovne
addr16
scas
aas
mov
mov
xor
pop
imul
shld
ficoms
lretw
lods
cmc
lods
std
cmp
or
addr16
scas
sbb
ljmp
movsb
and
test
arpl
int3
cmp
push
jb
je
mov
push
inc
sbb
stc
mov
js
cmp
test
std
int
aam
and
int3
insl
in
shr
push
out
and
aas
mov
fimull
mov
leave
int3
jle
imul
daa
inc
rcrl
xchg
xchg
push
xor
lret
call
and
sbb
std
dec
push
ret
lods
rorl
inc
into
hlt
mov
push
aaa
cmp
subb
lds
push
or
out
outsl
mov
jno
into
dec
dec
jmp
jbe
adc
sti
or
cld
iret
addr16
shll
movups
fimuls
iret
mov
xor
pop
inc
cmpsl
sbb
cmp
jg
sbb
lahf
adc
imul
mov
aad
test
pop
std
and
loop
mov
mov
icebp
int3
cmpsl
sbb
jae
sbb
pop
mov
gs
push
cmp
test
pop
xchg
repnz
add
div
out
or
bound
sbb
sbb
mov
mov
jno
jge
ss
and
iret
sbb
insb
movsb
imul
xlat
rclb
int
lcall
dec
fcompl
jo
add
call
out
or
cmp
mov
jmp
enter
in
inc
xchg
mov
or
ss
shrl
cmp
aam
add
movsl
ret
push
repz
imul
xchg
out
xor
mov
daa
fadds
sti
scas
icebp
fsts
jnp
ss
lds
mov
sub
lahf
dec
imul
rcrb
fnstcw
icebp
mov
push
sub
test
xchg
insb
stc
ss
iret
push
xchg
pop
addr16
dec
and
repnz
lea
add
pop
adc
cmc
mov
cmp
scas
into
out
ror
sub
sbb
lret
push
xorl
fcmovnu
fbld
jg
mov
or
lret
outsl
push
cmp
int3
mov
add
adc
mov
pop
pop
pushf
cmc
dec
out
cmpsb
lret
mov
or
outsb
shlb
mov
lret
mov
xor
push
xor
dec
scas
bnd
mov
test
loope
mov
lret
push
xor
jo
shll
out
mov
xchg
pop
cmp
sbb
pop
lahf
idiv
leave
lret
test
mov
push
inc
mov
xor
dec
das
push
outsb
dec
cmp
push
lret
mov
sub
pop
inc
pop
mov
adc
clc
pushf
sub
lret
or
push
or
lret
mov
loopne
lds
test
in
add
pop
aam
test
mov
repz
xchg
mov
sub
or
push
inc
jp
dec
xchg
sarb
icebp
cltd
add
lret
sub
mov
sbb
icebp
inc
dec
pop
jnp
shl
xor
jge
sbb
sbb
cmp
aaa
jb,pn
and
cltd
and
pop
lret
sub
jno
lret
jecxz
enter
lret
pop
jl
and
jmp
dec
cs
xlat
push
xchg
jecxz
andl
add
or
lret
mov
push
lret
insb
inc
mov
dec
mov
mov
push
rol
lock
addb
movsb
xchg
push
into
movsl
mov
cltd
push
aam
jnp
out
pushf
iret
cmp
lods
mov
add
push
dec
stos
xor
repnz
test
lret
lods
sbb
cmp
iret
cli
cmp
mov
inc
int
loopne
movsb
je
mov
lret
test
sbb
inc
insl
lret
std
jb
mov
mov
cmp
mov
inc
push
add
clc
lret
xchg
xorl
pusha
repz
xor
insb
pop
push
and
xor
movsb
xchg
mov
loopne
lret
add
inc
jb
jmp
imul
mov
sahf
ds
jecxz
movsb
jbe
mov
iret
sahf
test
mov
lret
lret
jp
mov
ja
leave
into
xchg
rolb
aam
cld
movsb
push
sbb
lret
sbb
stos
data16
push
lret
jle
mov
pusha
add
mov
xchg
lret
inc
testb
push
mov
sbb
popf
fistps
aaa
jmp
rcl
xchg
and
sbb
shlb
out
lret
push
sahf
fidivrl
or
sbb
pop
out
ja
cmp
jns
das
shlb
dec
and
inc
into
addr16
or
dec
mov
mov
push
mov
rorl
mov
mov
inc
xchg
test
pop
push
ret
xchg
bound
aas
ret
adc
test
and
lds
lret
xlat
xor
push
mov
adc
dec
je
cmp
mov
pop
mov
ror
scas
lods
pop
lahf
pop
adcb
fsubrl
cld
popl
int3
andb
sub
fisubl
sbb
sub
add
push
jl
sbb
add
rolb
sbb
adc
stos
sbb
lret
xchg
mov
fsubrs
or
loop
pop
repz
cli
into
ds
outsl
rcl
jb
mov
sbbb
jmp
cmp
in
mov
pop
repnz
mov
mov
fxch
jp
pop
pop
cltd
daa
lret
add
jp
icebp
ds
lahf
lret
in
jg
sbb
daa
dec
mov
sar
xlat
xor
stc
mov
in
inc
jno
xchg
push
sbb
popf
inc
aas
mov
xor
mov
stos
lret
inc
sub
lret
cli
pusha
xlat
adc
lret
iret
dec
and
mov
cmp
adcb
out
dec
cmp
ds
xchg
mov
cmp
subl
into
jnp
int
inc
jne
mov
fcmovnu
sub
cmp
out
fnstenv
ret
cli
push
rorb
popa
mov
push
xlat
test
xchg
lret
sahf
out
mov
mov
pop
lret
imul
lock
jle
sti
popa
pop
leave
pop
test
movsb
mov
push
xchg
mov
cmp
mov
lret
dec
jg
push
sbb
lret
push
shlb
arpl
fcomps
jle
lock
mov
jo
sbb
xchg
adc
pop
cmpsl
adc
lds
xchg
repz
push
test
int3
into
scas
rclb
sti
aaa
orl
stc
into
jmp
cmc
jne
push
mov
mov
push
shrb
mov
decl
sbb
cmp
mov
movsb
inc
or
xchg
sahf
cli
inc
pop
roll
cmp
xchg
push
and
js
insb
sbb
or
lret
pusha
dec
je
and
nop
xchg
stos
sub
imul
daa
inc
xor
xchg
jg
push
jmp
daa
dec
into
outsb
in
in
lret
lds
lret
in
pop
aad
js
mov
lret
mov
mov
repz
int
or
push
or
outsl
dec
cmc
aad
lret
mov
or
sbb
dec
inc
cld
aam
add
adc
lret
cmp
fisubl
jae
xchg
or
push
mov
addr16
xchg
adc
loopne
cmp
jns
pop
xor
cltd
cmp
in
call
lret
out
inc
xchg
pop
cmp
cmc
addr16
iret
dec
cmpsb
push
dec
lret
shlb
sub
lret
push
pop
inc
in
ljmp
fcoms
and
mov
shl
dec
jl
pop
test
lret
xchg
and
lret
ret
fildl
outsl
out
inc
in
inc
jnp
or
bound
lret
lock
fstpt
cmp
sbb
fnsave
movsl
adc
sbb
rolb
divl
pop
add
cmpl
lds
or
sub
sub
cmp
shlb
add
sahf
loope
push
xchg
xchg
movsb
je
inc
inc
mov
lret
mov
je
adc
fldcw
lret
fcoml
lret
xchg
decb
adc
out
popf
pop
pop
sbb
dec
ljmp
push
mov
mov
jb
sbb
lret
jg
scas
inc
cs
lret
loope
cmpsl
fcomip
lahf
mov
call
int
xlat
lret
sbb
cli
push
add
push
lods
and
jp
pop
cmp
rcr
fninit
sub
mov
push
test
lret
or
pop
jb
imul
stos
mov
mov
or
xchg
add
mov
and
adc
xchg
jg
push
xchg
mov
lret
fimull
test
lods
pop
push
cli
mov
pusha
data16
fisubrs
cltd
test
orl
icebp
lret
adc
out
fwait
mov
sub
sbb
daa
stc
xchg
fidivl
inc
aam
shl
pop
xchg
nop
sti
ret
dec
mov
mov
sar
lret
jno
gs
stc
lret
shr
mov
test
daa
inc
push
cmp
stos
out
xchg
fwait
push
xor
pop
ret
outsl
cmpsl
das
jnp
or
aas
js
pop
pop
pop
jl
mov
push
push
pop
insl
push
mov
mov
pop
js
lods
dec
sub
sbb
daa
fwait
mov
enter
cmp
pop
fstpl
sbb
daa
sbbl
pop
or
pop
sbb
std
lock
cwtl
jns
or
inc
nop
scas
clc
ljmp
insb
mov
sbb
aad
dec
xor
xchg
rcrb
fstpl
mov
movsl
push
mov
adc
ret
add
pop
sbbb
fwait
sbb
jecxz
bound
mov
inc
mov
xchg
sub
mov
stos
sbb
imul
stos
les
shll
fcom
lds
mov
clc
test
cmp
and
jg
test
pop
fnstsw
xor
dec
sbb
push
mov
jp
cmp
clc
pop
sub
iret
scas
push
mov
sub
lods
nop
sbb
repz
or
adc
push
pop
repnz
mov
aas
popa
std
mov
push
lock
call
sbb
mov
pop
pop
adc
rcrb
movsl
pop
loope
lret
aad
nop
fstpl
subl
sub
lret
or
xor
stos
inc
hlt
loopne
jae
das
sarb
mov
imul
dec
fwait
mov
ret
or
xor
insl
dec
cmp
xor
mov
aas
xlat
xchg
test
paddusw
pop
mov
mov
movsb
insl
lret
stc
pop
hlt
dec
adc
lret
cld
dec
or
cmp
and
fisubrs
push
push
mov
dec
in
lret
cmp
xor
andl
lret
dec
scas
setl
cwtl
lret
aam
test
popf
rol
in
sahf
xlat
loope
add
hlt
data16
jmp
push
jecxz
xchg
mov
imull
xor
mov
sub
add
sbb
fidivl
inc
ljmp
lret
cmp
stos
pmulhuw
fwait
ret
stos
fldl2t
lret
sub
outsl
mov
jbe
sahf
shlb
cmp
or
fdivp
insb
movsl
rcrl
or
dec
sahf
in
xor
jno
lods
iret
lret
dec
adc
fiadds
fidivrl
andb
stc
inc
mov
sub
sub
or
mov
cld
out
test
and
push
repz
ja
iret
ds
jbe
lret
and
lret
cmp
gs
mov
sub
divb
mov
clc
adc
xor
jb
idivl
orl
aad
jmp
iret
shl
fmul
icebp
xchg
shlb
cmp
cmpsl
mov
xchg
and
push
push
test
jno
adc
xor
cmp
fcomps
scas
lret
mov
js
jge
and
cmp
icebp
lea
dec
lret
inc
add
repz
jo
xor
test
cmp
mov
push
movl
cmp
push
xor
sahf
jbe
jb
aaa
sbb
shll
jne
dec
lret
mov
jmp
inc
cmp
outsb
nop
cmpsw
adc
popf
and
jl
lret
arpl
dec
pop
insb
jle
mov
call
adc
pop
dec
cli
lret
dec
mov
cwtl
xchg
inc
lret
stos
arpl
xchg
popa
xor
and
lds
movsl
cmp
push
mov
jp
imull
dec
sub
jl
les
mov
lret
dec
cmp
lret
mov
js
movsb
fidivl
mov
sahf
negl
fucomip
lret
jns
js
cmpsb
outsb
cmp
inc
fimuls
fldenv
fwait
inc
leave
lret
sbb
xchg
sbb
inc
stos
stos
jg
lret
add
xchg
dec
loopne
icebp
dec
cltd
enter
aad
mov
sarb
sbb
xchg
movsb
or
imul
cld
push
rcrb
adc
xchg
je
mov
cmpl
cmpsl
lret
and
add
pop
mov
lret
stc
les
int3
xchg
pop
lods
fcom
cmp
loop
or
stos
pop
ds
std
repnz
adc
push
fimull
outsb
sbb
icebp
lret
jne
cmp
cmp
add
test
pop
or
inc
js
cli
xchg
push
ret
and
imul
stos
ja
popf
mov
xchg
dec
lahf
push
jl
jne
dec
js
push
adc
and
jae
mov
fstl
imul
fmulp
ficoml
add
adc
cmp
cmp
jo
and
ja
push
or
adc
xor
lcall
push
lret
cltd
mov
lret
icebp
sub
adc
insl
mov
rcrb
scas
sahf
ljmp
into
adc
shlb
cmp
mov
aad
fcom
test
scas
sub
mov
jmp
fisubrl
inc
std
pop
lds
loope
jge
test
add
bswap
push
loope
xchg
push
pop
outsl
dec
gs
adc
adc
xchg
jmp
jecxz
pusha
js
aad
xor
xor
mov
adc
int
es
jp
mov
sti
js
pop
stc
mov
aas
leave
add
mov
push
cmp
les
movsl
or
mov
sbb
je
pop
mov
stc
pop
outsl
push
lods
cmp
ret
push
int3
test
in
insl
clc
bound
or
push
fiadds
pop
repnz
std
sub
cli
aaa
mov
mov
sub
fldl2e
popa
inc
icebp
pop
and
or
xor
lds
pop
add
out
inc
outsb
cmp
rcll
jne
fisubrl
mov
push
dec
loopne
mov
push
pop
js
jmp
dec
jbe
xchg
dec
pop
mov
iret
sub
adc
push
mov
mov
mov
dec
lahf
cmp
out
dec
aas
adc
xor
add
lods
add
outsl
add
lcall
out
mov
outsl
inc
inc
adc
jl
push
in
addr16
lods
or
fbld
into
sub
adc
dec
sub
xlat
movsb
loop
loop
mov
sbb
xchg
ljmp
scas
adc
je
popf
jmp
pop
int3
push
mov
pushf
pop
pop
daa
fcmovu
loop
cltd
lret
inc
pop
pop
insb
pop
push
pop
jge
in
mov
or
dec
pop
sub
adc
pop
call
push
xor
rcrb
pop
jns
outsl
push
cmpsb
into
cltd
add
sahf
outsb
sub
push
rcll
dec
cli
adc
or
sti
mov
xchg
rcrl
cld
jo
sbb
jno
pop
insl
sbb
xchg
xchg
iret
rorb
sbb
lods
push
mov
std
sub
jp
push
pop
xlat
lods
int
xchg
mov
jl
push
fiaddl
pop
shll
aaa
mov
repnz
mov
sub
sbb
movsb
lock
inc
rorl
cmpb
push
iret
scas
mov
xchg
xchg
mov
hlt
mov
xchg
xchg
fisttps
sbb
adc
mov
pop
add
inc
in
mov
add
cltd
cmp
xchg
aas
std
lds
xchg
das
jmp
aas
dec
leave
ret
cmp
rclb
loop
lcall
fsubr
sarb
xchg
outsl
lret
shl
mov
sbb
daa
jae
pop
pop
fimull
andb
dec
pop
xchg
adc
inc
pop
gs
mov
jbe
fwait
pop
scas
jb
pop
fbstp
mov
push
add
jbe
xor
cld
adc
lret
fstp
or
loope
push
ds
inc
loope
or
xlat
fcoml
inc
jge
xor
pushf
pop
pop
and
lds
jp
push
mov
pop
aad
test
ljmp
mov
incb
cmp
lahf
cwtl
and
or
movl
cmpsl
jns
push
sbb
xchg
xor
fcmove
push
cmpsl
ss
ds
test
mov
xchg
pop
loope
ret
out
outsb
push
orb
push
aaa
dec
mov
loop
das
lods
int3
jbe
call
jns
mov
int
pop
lods
push
ret
push
int3
dec
into
mov
jecxz
dec
xor
jp
jne
lret
rcll
movsb
aam
push
shrb
std
pop
dec
bound
xor
into
loope
jno
xor
test
jno
lret
push
mov
jbe
out
mov
mov
aam
cmp
pop
insl
loopne
push
and
js
jno
sbb
loopne
aas
mov
fisttpl
fbstp
push
aas
push
imul
gs
jp,pn
je
bound
mov
or
jbe
or
mov
add
jmp
dec
ret
xchg
stos
push
lods
jge
arpl
fists
push
es
xchg
sub
icebp
shrl
sti
sub
rcl
cli
pop
adc
shll
push
dec
mov
stos
pop
imulb
fnclex
jmp
dec
push
pop
mov
ficoml
xor
daa
scas
imul
mov
pop
shl
fnsave
cmpsl
jmp
dec
or
xlat
test
mov
lcall
dec
in
dec
out
cmp
sub
inc
cltd
insl
jle
mov
xor
movsb
mov
inc
mov
fcmove
push
mov
xchg
xchg
jp
mov
xchg
cmc
testb
int
inc
dec
cmp
mov
int3
shrb
mov
imul
mov
push
lcall
fsub
lock
adcl
repnz
mov
cmpsb
push
dec
fistpll
sbb
test
lods
fsub
out
cmp
pop
iret
clc
pop
mov
mov
mov
push
nop
sub
cld
xchg
aaa
dec
sub
sahf
push
cwtl
jno
push
xor
loop
out
xchg
push
and
inc
jae
rorb
fbld
push
les
ss
sbb
enter
adc
inc
in
mov
gs
ret
clc
adc
movsl
jns
movsl
push
cmp
addr16
xor
popa
shrl
mov
or
repz
jne
mov
push
pushf
mov
mov
dec
fsts
pop
dec
pop
mov
push
out
loop
mov
add
sbb
push
sbb
mov
jmp
push
insl
cmp
daa
test
in
out
arpl
ret
inc
pop
adc
data16
adc
addl
leave
insl
pop
xor
sbb
inc
sub
aas
addb
stos
xchg
or
mov
fcom
dec
push
adc
daa
or
mov
dec
mov
mov
dec
xchg
mov
mov
hlt
or
xchg
adc
or
call
jl
adcl
mov
mov
xor
adc
ret
pop
push
pop
mov
ljmp
dec
dec
push
data16
movsb
sub
mov
addb
adc
imul
inc
je
arpl
mov
push
dec
pop
loope
das
insb
inc
jl
ljmp
in
and
in
push
xchg
test
jp
pop
pop
pop
pop
pop
ljmp
test
lcall
ficoml
jp
ds
cmc
xor
mov
divb
and
xor
push
cmc
into
dec
xchg
lods
push
mov
icebp
pop
data16
les
jmp
pop
and
int3
mov
lds
pop
leave
mov
jl
int
push
insb
out
test
pop
in
jecxz
arpl
mov
cmp
mov
and
mov
jp
xor
fistpl
icebp
fimuls
dec
mov
lods
adc
cmpsl
sbb
aas
and
sti
pop
mov
je
fildll
bound
pop
lods
repz
add
cmp
sub
mov
test
jle
gs
ficomps
sbb
in
push
dec
dec
add
or
mov
push
enter
iret
cmp
pop
imul
js
outsl
rcll
mov
sub
sub
test
push
mov
iret
clc
js
mov
insl
cmp
xchg
dec
fistpll
lahf
out
sti
mov
sbb
ret
pop
rorb
sub
pop
mov
pop
scas
shrb
xor
push
pop
xlat
movsl
scas
shlb
pop
cmp
call
dec
xchg
jbe
out
xchg
out
push
add
gs
or
jne
dec
test
and
lahf
push
in
aam
pop
add
sub
in
and
and
sub
ja
mov
test
pop
and
sub
sub
jb
push
inc
aas
xlat
jmp
and
es
call
in
push
dec
mov
scas
rclb
sbb
ret
fistl
sbb
aam
fdivrs
in
lret
or
mov
mov
repz
add
jno
adc
dec
mov
push
or
xor
xchg
inc
adc
lods
mov
insb
or
lret
push
fmuls
inc
movsl
daa
outsl
xchg
fcoml
shl
pop
cmpsb
in
and
outsb
lock
lods
repz
xchg
adc
dec
push
push
lock
jp
ss
xchg
outsl
mov
jne
test
incl
test
mov
xchg
xchg
lods
cmp
mov
shll
int3
mov
jge
movsb
rclb
mov
dec
ljmp
sub
cmc
enter
or
dec
mov
mov
cmp
sub
icebp
add
cli
adc
jp
hlt
test
and
jnp
xchg
mov
iret
scas
test
rclb
arpl
lret
push
push
jae
jle
dec
push
insb
xor
fisttpll
lods
aam
push
xor
iret
sub
fisttps
leave
push
push
mov
pop
popa
orb
push
sbb
lods
outsl
dec
jb
fisubrs
lcall
sbb
lcall
bound
mov
enter
xor
repnz
dec
call
lds
in
adc
mov
push
jmp
or
fs
push
inc
pop
dec
call
repnz
pop
test
int3
mov
mov
cmp
gs
xor
adc
lock
ljmp
fdivrs
pusha
scas
dec
mov
pop
adc
mov
or
nop
lock
jae
rcrb
test
push
cld
lods
push
pop
mov
mov
lock
rcl
dec
mov
cmp
cmp
stc
shll
sub
aam
xor
push
ja
sbb
sub
aas
adcl
pushf
fldl
dec
scas
inc
aas
pop
pop
outsl
in
and
not
scas
cmp
sub
mov
push
clc
aas
sarl
jns
iret
and
fidivrl
lds
fisubs
sbb
push
stos
inc
xor
adc
xor
sti
ja
jg
pop
pop
ljmp
jbe
and
das
addb
mov
or
aam
push
int3
int3
test
mov
sbb
mov
mov
push
push
sub
lods
aad
add
mov
into
mov
sbb
cmp
and
jecxz
push
dec
ljmp
dec
mov
mov
mov
mov
bound
push
adc
push
mov
ljmp
mov
js
insb
jns
mov
sub
mov
and
int3
mov
sub
push
scas
mov
sbb
xor
das
pushf
sub
sub
and
xor
daa
imul
incl
lds
test
mov
jmp
ror
cmp
jp
mov
lds
std
mov
movsb
xchg
inc
pop
sbb
ja
outsb
jne
inc
incl
jge
lret
jnp
xchg
pop
adc
jmp
jbe
dec
xlat
add
sbb
fs
orl
scas
pop
mov
push
cmp
mov
nop
pop
dec
push
arpl
shl
les
pusha
pop
jne
adc
test
lods
imul
adc
or
fs
popf
sbb
movlps
nop
shrl
mov
lods
fmul
and
dec
jns
cmp
mov
ljmp
jmp
fcoml
xchg
jmp
les
pop
inc
les
pop
cmp
mov
adc
inc
inc
orb
mov
jne
fisttpl
test
push
loope
adc
bound
xor
cwtl
dec
xor
mulb
cmc
pop
test
sbb
aaa
cmpsl
dec
inc
out
dec
jnp
fwait
mov
enter
enter
out
iret
daa
dec
pop
mov
arpl
orb
aad
mov
pushf
push
por
mov
mov
sbb
sbb
cwtl
repz
bnd
mov
push
pop
fs
sbb
bound
xlat
mov
pop
push
mov
imul
ret
jg
fstps
jb
or
imull
mov
scas
xor
xchg
xchg
stos
aad
pop
repnz
lahf
xchg
dec
pop
and
jle
push
pop
arpl
mov
outsb
xlat
enter
enter
xchg
les
dec
push
adcb
xchg
mov
mov
outsb
stc
and
idivl
mov
pop
sub
push
fsub
test
or
repz
loopne
pop
rcrb
sub
mov
cmp
mov
fisttpll
mov
fadd
mov
in
mov
push
fcomps
shrb
out
roll
test
jmp
push
add
push
pop
jns
data16
jbe
xor
cpuid
or
mov
jp
mov
or
cld
sbb
fwait
xor
push
call
inc
btc
aaa
lock
dec
aam
mov
sbb
xchg
cmp
or
lds
push
fiaddl
mov
dec
call
dec
mov
jp
push
test
mov
scas
pop
bound
and
clc
jne
das
sbb
mov
in
in
push
push
call
into
push
insb
ss
pop
xchg
pop
lods
loop
and
sub
loop
or
movsb
cmovg
mov
ljmp
mov
add
inc
mov
mov
test
mov
xorl
jge
push
mov
pop
iret
loop
jae
dec
and
inc
ss
std
push
lods
adc
in
xchg
sbb
negl
test
and
push
cmp
sbb
sbb
add
les
enter
iret
adcb
jmp
sbb
cmp
push
repnz
pop
or
popf
bound
int3
mov
push
fstpt
cmp
and
cmp
iret
adcb
mov
fs
ds
dec
mov
mov
cmp
sbb
cmp
cmp
mov
aad
das
push
pop
add
or
adc
or
shll
stc
enter
or
out
push
add
xchg
psrad
mov
lret
cmp
sub
shlb
fwait
push
js
icebp
push
lea
repnz
cmc
adc
or
mov
xchg
out
mov
dec
pop
shlb
pop
test
movsl
scas
out
ss
dec
mov
in
out
or
out
adc
gs
xchg
add
idiv
jp
push
and
int3
aam
outsl
xchg
movsl
cmp
cmpsw
imul
arpl
das
insl
in
cmpsb
inc
daa
mov
pop
or
and
mov
in
mov
inc
les
ds
das
jecxz
push
aaa
cmp
jg
pushf
add
jle
int
pop
ret
cmc
les
call
imul
push
cwtl
jnp
dec
scas
xchg
dec
push
movsb
mov
adc
adc
ror
ss
insl
push
fwait
mov
xchg
test
leave
loope
out
subb
and
into
test
out
mov
cmpsb
lods
inc
sub
test
loope
scas
xchg
mov
and
or
add
jmp
add
sbb
dec
pop
sbb
jge
test
out
bound
pop
fmull
pop
pusha
into
lret
fs
js
sub
mov
leave
sbb
test
insl
sbb
nop
mov
adc
daa
outsb
lahf
test
sub
mov
loop
into
xchg
or
inc
int3
lods
cltd
dec
xor
adc
push
mov
push
vmovdqu32
subb
shll
cmp
and
cmpsl
jmp
push
imul
add
jmpw
push
rcr
ds
mov
adc
rolb
shrb
xchg
mov
adc
pop
in
jmp
test
sub
test
adc
cltd
sbb
sub
mov
inc
cmp
imul
lret
ficoml
shl
and
push
dec
dec
mov
mov
pushf
shrl
sti
mov
cmp
sbb
xor
and
lock
cwtl
lret
and
and
mov
addb
rcrb
andb
ljmp
or
in
inc
aaa
nop
repnz
mov
mov
adc
jecxz
imul
add
mov
out
jl
or
sbb
dec
or
xchg
inc
ljmp
rolb
push
lret
cmpsl
test
fidivs
faddp
push
rcrb
fimuls
aas
mov
or
pop
mov
jmp
out
mov
test
mov
push
hlt
cmp
dec
push
mov
idivb
cmp
mov
inc
jecxz
jmp
test
cmp
push
cmp
mov
push
imul
icebp
inc
sbb
mov
pop
sbb
dec
shrl
push
xor
and
inc
push
inc
jmp
or
push
stc
repz
jp
pop
jmp
arpl
pop
add
push
adc
mov
pop
xlat
in
mov
pushf
xchg
fs
push
mov
adc
je
sub
lcall
test
mov
cmp
repnz
ficoms
dec
pop
or
xor
lea
and
out
leave
cmpsl
push
jge
cmpsb
leave
ljmp
cli
pusha
inc
xchg
addps
xor
jg
in
bound
iret
dec
in
or
pusha
dec
popf
push
out
push
stc
fnstenv
cmp
push
fidivl
outsb
mov
inc
xor
mov
and
jns
lahf
insb
pushf
repz
mov
int
test
sbb
jmp
push
jg
mov
adc
iret
jle
push
push
negb
mov
adcb
mov
arpl
fs
fcompl
adc
push
fldcw
fnstenv
cltd
pop
aas
hlt
ret
rcll
mov
sti
subl
jmp
les
scas
ret
sbb
push
push
les
pop
mov
push
stos
in
lcall
lock
int
ret
cltd
scas
rorb
push
push
xchg
imul
inc
mov
lcall
push
jnp
cld
jbe
sbb
adc
dec
inc
xchg
gs
into
les
fmuls
shr
scas
outsl
sbb
push
into
es
mov
dec
rcr
push
ret
lahf
jne
mov
les
shlb
je
mov
push
lahf
ljmpw
fs
repz
adc
xchg
ljmp
or
cmc
cmp
cmc
pop
sbb
mov
pop
sahf
repz
push
push
xchg
fistpll
and
pop
outsl
and
push
into
mov
sbb
repnz
xlat
dec
mov
mov
lret
push
in
loope
jbe
in
andb
cmp
addr16
mov
mov
bound
mov
hlt
mov
shll
mov
mov
iret
push
js
pop
scas
jno
push
lds
ss
push
add
adc
test
jp
jg
dec
inc
pop
test
and
bound
dec
cmc
inc
scas
out
and
iret
cld
rclb
jmp
push
sahf
dec
daa
ret
adc
ljmp
out
lret
and
ds
mov
mov
push
in
rclb
insl
mov
pop
ljmp
and
idivb
dec
and
fucom
sub
jmp
mov
notl
insl
enter
pop
scas
sub
ljmp
or
iret
adc
shll
mov
jnp
pop
or
inc
mov
test
rorl
pop
leave
popf
fcmove
inc
pushf
jno
push
movl
pop
or
cmp
cmc
lcall
iret
test
xor
dec
lret
xor
hlt
add
and
push
les
push
test
xchg
mov
pop
xor
mov
sub
push
movsl
aam
lds
adcb
adc
insb
in
lock
popa
dec
jp
out
movsb
mov
mov
pop
sti
or
fisubl
mov
jne
inc
mov
jnp
rcr
shlb
repnz
pop
add
cwtl
aaa
test
xchg
adc
in
pop
dec
sub
lret
jmp
pop
outsl
cmp
mov
adc
aam
jg
orl
lods
bound
xchg
imul
shll
cmc
les
in
push
pop
push
mov
and
xchg
jmp
mul
dec
sub
cmp
mov
cmp
hlt
mov
jb
cmp
mov
cmp
jg
sub
cmp
test
test
sub
mov
js
jmp
jb
loop
lret
inc
sbb
iret
xchg
mov
mov
divb
stc
clc
or
cmp
sub
jne
xchg
lret
scas
stc
lahf
fnstcw
jae
pop
lahf
xchg
idiv
xor
es
push
lock
mov
push
stos
push
leave
stc
xor
rol
push
ds
rorb
fimull
add
or
or
ljmp
jae
cmp
mov
xchg
int
cli
int3
fcomps
cmp
dec
pop
pop
xchg
cmp
cltd
movsb
sub
xchg
jmp
aam
sub
and
outsl
pop
out
leave
xchg
xchg
xchg
hlt
les
mov
scas
xorb
xchg
mov
mov
cmp
fsubrs
and
jae
subl
mov
stc
sub
sub
inc
fnstcw
sbb
nop
arpl
aam
dec
aad
icebp
rclb
decl
mov
pop
je
fidivrl
push
movsl
pop
mov
jecxz
insl
jae
add
dec
fnstenv
sarl
push
into
pop
mov
fisubl
mov
mov
or
int3
lods
xor
xchg
push
sbbb
push
add
call
mov
cmp
daa
sbb
mov
int
outsl
data16
notl
xchg
mov
push
imul
inc
push
test
test
mov
shll
fsts
push
jecxz
add
jmp
dec
imul
or
dec
sub
add
imul
daa
dec
cmp
les
adc
ret
cltd
xor
in
leave
stc
scas
rol
dec
pop
sub
sbb
andl
pop
loope
dec
dec
rclb
adcb
jbe
lret
in
jl
cmpsl
lret
mov
mov
fiadds
lret
mov
or
lods
mov
xchg
jnp
into
scas
mov
mov
push
test
mov
lret
les
sub
cmp
xchg
out
into
fxch
fdivrs
stos
not
data16
faddl
inc
push
loope
mov
aad
mov
out
xlat
pop
cmpsb
sti
sub
test
lret
cltd
cmp
fld1
mov
add
fsubl
shlb
jmp
inc
lods
inc
pop
inc
lret
shl
pop
rol
mov
xchg
fcmovb
ja
scas
jmp
pop
lds
lret
fmull
mov
ja
mov
lods
jno
mov
aad
cmc
sbb
jg
lret
stos
fcmovb
mov
mov
or
mov
sub
out
mov
dec
sbb
imul
xchg
aam
jl
lret
jno
push
xlat
and
cwtl
sbbb
out
add
or
fadd
mov
inc
out
or
jg
lret
or
cs
lret
mov
sbb
mov
jnp
pop
fisttpl
lcall
ret
jp
icebp
test
sti
sbb
insb
in
xor
mov
cmp
stos
xlat
push
scas
adc
cmp
adc
sbb
lret
cmp
xchg
lret
adc
loop
pushf
ljmp
into
movsl
push
adc
out
lret
sbb
jg
ror
and
inc
lret
mov
push
or
rcrb
dec
pop
lods
xor
xchg
out
cli
push
loop
fsubl
int3
xor
mov
sarb
dec
pop
inc
mov
lds
mull
lret
pop
mov
pushf
sti
push
mov
pop
inc
dec
pop
cmc
pushf
add
rcll
ret
hlt
cmp
aad
push
mov
bound
jbe
dec
inc
pop
into
jge
lock
int
mov
lret
xor
cmpsb
pop
cmp
or
js
popf
sti
xor
lret
mov
push
pop
push
into
and
xlat
repnz
lods
cmp
dec
ret
out
xchg
outsl
sbb
mov
add
jbe
ja
lret
add
rorl
imul
jb
orl
dec
add
iret
lret
mov
and
pop
mov
fcmovne
fstp
mov
dec
sbb
dec
sbb
push
xchg
push
mov
and
jb
aam
loopne
into
dec
cmpl
jge
lcall
cli
push
cmp
jae
cmpl
lods
fdivl
sub
mov
jne
xlat
lret
or
pop
mov
scas
repnz
pop
lret
fisttps
lret
dec
inc
je
cmp
fidivl
and
sbb
jge
sbb
mov
call
ficoml
xor
lods
lret
flds
mov
mov
lcall
dec
icebp
imul
ja
cltd
add
lods
lret
push
out
mov
or
rclb
in
divb
arpl
aas
ret
sub
jnp
mov
push
jbe
inc
aam
xchg
jmp
insl
cmp
sarb
sub
push
xor
lret
outsb
aad
mov
aam
cmp
pop
fbld
lret
call
cmp
testb
int3
pop
imul
adc
inc
test
into
je
daa
or
add
fistl
fstps
ret
call
pminsw
or
xor
jg
iret
xor
lret
aad
push
in
pop
cwtl
es
adc
or
or
push
mov
push
ljmp
adc
and
fnsave
movsb
fimuls
xchg
inc
das
lret
xlat
leave
or
and
lret
dec
lock
enter
int3
inc
pop
test
mov
cmpsb
cmp
pusha
int
movsl
pop
inc
mov
loope
sub
inc
lret
mov
mov
xor
add
repz
iret
in
jo
movsb
iret
icebp
movsl
outsb
lret
mov
in
stos
lret
test
pop
push
iret
or
jno
aas
scas
sub
mov
and
jp
lret
mov
pop
lret
in
jl
mov
aaa
cmp
pop
ss
gs
add
mov
jb
enter
pop
adc
mov
cmpsb
aad
outsl
rcrl
or
push
push
adc
push
iret
dec
sbb
rcrl
push
cmp
and
cli
scas
repz
and
xchg
push
push
shl
cwtl
xor
fcmovbe
insl
lds
data16
inc
mov
arpl
lret
ret
repz
lcall
and
pop
lret
aam
mov
and
mov
aam
sub
cmp
push
mov
arpl
pop
pop
lret
pop
das
idivb
dec
lret
sub
mov
and
pop
sub
add
jp
jb
inc
lahf
lret
dec
mov
lret
sbb
lret
cmp
lret
xorl
lret
pop
ds
dec
cld
arpl
mov
je
imul
dec
add
and
mov
sub
sbb
lahf
cli
pop
movsb
add
repnz
jns
push
sub
scas
lret
mov
lds
ret
lret
mov
fwait
lret
insl
bound
mov
outsb
rcll
pop
pop
sub
je
fcomps
sbbb
jae
into
stos
in
out
pushf
mov
or
adc
jne
pop
fadd
lret
mov
adc
aas
loopne
lret
in
andl
ficompl
push
inc
popf
push
rcr
inc
testb
loopne
and
lret
push
xor
mov
insl
lea
icebp
cli
mov
push
negb
jno
out
rclb
sub
and
mov
lret
mov
insl
xor
dec
sbb
sub
int
movsl
or
iret
push
shl
sub
jns
xchg
cmp
jne
imul
push
lret
cmp
repnz
mov
mov
jmp
jb
jbe
mov
subl
pop
and
xor
fcmovbe
enter
mov
hlt
lret
push
cmp
dec
cmp
int3
mov
ds
lret
xchg
xor
leave
cmp
pop
inc
ljmp
rcr
cwtl
adc
shl
dec
pop
lea
test
div
xor
test
mov
xor
icebp
or
dec
ret
out
lret
xchg
rolb
push
jnp
ret
mov
fisubrl
pop
and
sbb
pop
cli
repnz
adc
das
fiaddl
test
rcl
add
insl
movsl
nop
fmul
add
loop
xchg
cmp
mov
add
cmpsb
loop
rcr
xchg
xlat
dec
mov
aam
out
pop
lret
or
jge
sub
cmc
icebp
lret
int
cld
add
jmp
es
mov
fsubs
int
das
insb
stos
push
dec
loope
lret
jb
pop
andb
cltd
add
jg
push
js
dec
xchg
and
cs
mov
push
rclb
call
shlb
jnp
popf
cltd
aas
cmp
pusha
repnz
dec
lret
jnp
pushf
adc
push
xchg
std
mov
adc
mov
arpl
dec
mov
cmc
call
imul
jbe
lahf
sub
aas
xor
loop
insl
sbb
mov
das
push
sub
cmp
rolb
mov
cmp
sub
xor
mov
adc
xchg
mov
jl
out
rcll
xorl
jb
push
cmpsb
shld
and
pusha
pop
mov
cli
add
inc
pop
leave
idivl
add
sbb
lret
aas
mov
lea
mov
cltd
fiaddl
ds
int3
push
pop
iret
push
pop
mov
movsl
in
pop
rcll
adc
mov
add
jae
lret
xor
xor
mov
inc
shl
mov
jo
popa
pop
xor
mov
repz
cwtl
mov
leave
inc
js
and
sbb
outsl
insb
pop
push
pop
aaa
push
sub
negl
lret
inc
cmp
gs
pushf
arpl
jmp
ja
sbb
neg
add
insb
and
shll
mov
loop
daa
mov
xor
mov
add
jne
push
xchg
or
jno
les
fldlg2
mov
js
bound
stc
push
xchg
sub
and
or
add
push
xor
inc
sub
inc
cwtl
pop
fs
aaa
stc
sbb
push
movsl
popa
jp
dec
add
push
icebp
push
jp
push
mov
stos
mov
sbb
or
aad
dec
test
push
fiaddl
inc
xchg
xchg
lds
into
and
pop
lahf
pop
cmpsb
jl
mov
or
dec
fidivrl
movsl
cltd
lods
or
sub
test
orb
or
inc
cmp
addr16
shll
and
test
in
push
in
mov
fmul
and
jle
adc
cwtl
dec
pop
int3
xchg
sarb
idivb
into
jge
mov
bound
sbb
xlat
mov
test
push
dec
xor
cmp
mov
sti
fucomip
bound
xchg
lock
insl
sub
mov
out
test
and
lea
cmp
xor
push
inc
jmp
mov
pop
je
mov
dec
adc
sbb
mov
xchg
popa
push
dec
push
cmp
push
push
rcrl
ret
mov
xor
roll
shrb
insb
orl
fs
insb
dec
jmp
jg
push
mov
fwait
mov
xchg
and
shll
imul
xor
xor
jp
fistl
ficompl
sbb
pop
jb
jl
add
xlat
addb
movsl
insl
push
lret
mov
push
and
lcall
ljmp
ret
mov
cwtl
arpl
xchg
insb
xchg
fldenv
pop
or
pop
xorl
in
aam
and
push
inc
mov
orb
mov
sahf
mov
push
xchg
mov
sub
repz
dec
lock
fimuls
jmp
pop
xchg
fwait
cmove
in
pop
addr16
add
cmp
pop
shl
jmp
lock
sub
mov
lds
add
dec
jbe
mov
cwtl
adc
test
jle
aas
mov
insb
loopne
add
jp
ret
mov
cmp
mov
aaa
rorb
and
out
notl
and
int
aaa
notl
and
dec
fisubl
inc
mov
cmpsb
inc
outsl
pushf
cli
sub
push
lcall
dec
push
lea
ljmp
push
fs
push
jecxz
push
and
sbb
dec
notb
mov
xor
cmp
inc
push
stos
cli
movsl
pop
inc
loopne
mov
out
inc
dec
mov
add
mov
xchg
sbb
addr16
out
sbb
arpl
pop
push
rcl
push
out
out
jge
and
fldl
stos
inc
fidivs
gs
sbb
stc
popf
lret
nop
movsb
sub
test
push
mov
push
into
push
sysret
jnp
cmc
dec
scas
and
fsubl
dec
jp
inc
ret
jae
leave
ja
push
cmp
lds
lods
mov
push
push
pop
push
sub
shll
cwtl
sub
inc
call
or
pop
shll
fstpt
mov
out
iret
sbb
xchg
test
mov
sub
sbb
xor
push
ds
jnp
and
inc
jle
ficompl
dec
and
lret
int3
aaa
add
cmpsl
fstps
jb
mul
lea
shlb
out
mov
rol
jg
stos
mov
fidivl
leave
mov
out
mov
lahf
pop
or
push
jecxz
mov
ss
jmp
or
pop
sbb
mov
push
pop
out
cwtl
test
gs
jbe
and
inc
lcall
pushf
loope
add
into
inc
shll
fisttpll
and
test
or
outsb
dec
push
dec
lods
std
popf
test
rcr
ret
aas
fcmovnu
push
sarb
rcl
jnp
mov
or
dec
test
push
cmp
xor
aad
inc
mov
mov
mov
out
mov
pop
mov
aad
mov
std
outsb
cs
pusha
out
push
sbbb
stc
push
pushf
js
mov
push
fs
jg
out
add
movsl
mov
nop
js
pop
mov
or
imul
push
cmp
cmc
jo
or
test
sub
pop
lret
sub
add
ja
xchg
cmpsb
outsb
adc
outsb
fsubrs
lret
mov
scas
cltd
fcom
repnz
inc
mov
inc
out
or
mov
xchg
pushf
iret
data16
fcoms
inc
nop
sub
sub
pop
mov
push
cmc
idivl
outsb
xchg
pop
mov
mov
xchg
and
mov
cmpsl
in
mov
ret
pop
dec
rorl
in
stc
dec
lods
enter
jae
and
js
insl
insl
ret
pop
stc
rorb
inc
fdivrl
xor
fdiv
mov
push
enter
lret
mov
movlhps
mov
clc
xchg
scas
outsl
ficoml
inc
in
push
sbb
mov
adc
repnz
test
and
je
mov
fldl
xchg
pop
das
jp
mov
sbb
mov
sti
ja
sbb
add
into
xchg
nop
mov
cmpsl
mov
sarb
cmp
mov
aas
mov
notl
jne
pop
sub
inc
fistpl
push
stos
out
xchg
enter
inc
outsl
scas
xchg
or
pop
cli
jp
ds
sbb
push
test
subb
fildll
movsb
mov
mov
push
cs
jmp
fsts
adc
push
and
lret
test
cli
sti
mov
jp
pop
or
pop
ror
addr16
mov
stos
icebp
mov
add
lds
cmp
push
mov
into
push
fimull
push
shrl
pop
push
idivb
test
fs
push
je
movsb
mov
mov
sbb
jns
ret
insl
lds
mov
pop
int3
mov
mov
cmp
setg
sti
inc
fimull
cmpsb
jo
jbe
jae
and
hlt
lahf
subl
movsl
jmp
bound
in
jnp
int3
movsb
jbe
out
or
push
jg
push
adc
into
mov
or
pop
int
outsb
loop
lods
fiaddl
fdivrs
hlt
mov
or
lret
cmp
push
clc
dec
jecxz
xor
das
aaa
inc
mov
lods
push
xchg
ljmp
mov
in
mov
iret
repz
shrl
aad
pop
daa
cld
adc
push
mov
jmp
pop
out
mov
jne
int3
pop
mov
cmp
sub
cli
mov
icebp
cli
push
jo
rcl
push
mov
cmp
lock
test
adc
bswap
bound
loope
jmp
enter
pop
mov
lcall
xor
mov
sbb
cltd
outsl
xor
jp
clc
push
test
push
ror
inc
pop
aas
addr16
mov
out
and
and
mov
clc
push
out
loopne
repz
lods
sarb
add
aaa
sbb
in
sti
mov
adc
int
fiadds
pop
std
xchg
cmp
mov
and
adc
sti
pop
pop
and
and
pop
daa
push
push
inc
test
movsb
je
pop
push
and
jmp
fldenv
int3
sahf
rep
inc
imul
jp
xchg
xchg
cltd
inc
das
jp
inc
loop
push
lock
iret
dec
imulb
and
adc
mov
in
pop
inc
mov
mov
pop
push
push
lret
repnz
mov
push
pop
add
inc
cltd
lahf
pusha
mov
cmp
dec
sbb
xchg
inc
pushf
aad
jg
jle
mov
pop
pop
pop
xor
imul
cmp
xor
xlat
mov
fsub
pop
sahf
enter
adc
cmpsl
popf
inc
test
xor
cmc
icebp
iret
push
lods
cmp
jbe
cmpsl
pop
jns
mov
xchg
movsl
clc
pop
cltd
pop
adc
jp
or
ljmp
xor
out
sbb
or
lret
mov
cmc
push
inc
test
ret
lods
les
cmpsb
push
mov
iret
pop
or
nop
ljmp
jl
xor
sbb
outsl
xchg
mov
sub
mov
insl
repnz
pop
push
or
loop
or
mov
pop
jmp
mov
mov
sarb
enter
fnstsw
out
loopne
mov
jae
test
or
cmp
dec
lret
test
jle
mov
out
insl
in
repnz
ss
loope
ljmp
cmp
mov
ret
push
inc
sbb
das
pop
repz
fs
xchg
pop
inc
push
mov
push
rolb
cmp
gs
push
fldt
jae
sbb
adc
mov
sti
std
jmp
sbb
push
sbb
pop
xchg
push
push
cmp
fnstcw
mov
loopne
test
push
jmp
dec
cwtl
out
int
scas
or
rclb
hlt
jbe
jmp
inc
pop
leave
push
cmp
addr16
push
or
test
cwtl
rol
push
or
bound
and
outsl
and
adc
push
inc
scas
pop
lret
push
sti
movsb
jne
into
or
mov
cltd
sarb
pop
mov
clc
popa
mov
xchg
dec
push
mov
jecxz
dec
rol
jb
dec
lea
sti
test
sbbl
jle
cmpsb
int
inc
movsl
in
sub
stos
cs
adc
test
bound
cmp
scas
hlt
test
push
in
mov
dec
aas
ret
xchg
cmc
fists
pop
push
mov
jne
popf
pop
imul
jmp
mov
xor
repnz
aaa
maskmovq
divl
and
sbb
mov
outsl
mov
and
push
ja
js
jp
push
jbe
out
iret
jp
sarl
paddsw
sbb
inc
and
sbb
push
push
jge
stc
loop
mov
add
jl
push
sysret
fmulp
lret
push
sarl
sub
adc
mov
jmp
mov
pop
bound
xchg
bound
push
rorb
jns
ja
xchg
push
loopne
pop
mov
jmp
jae
pop
inc
sub
lret
sub
fildll
or
pop
cs
fistl
jge
iret
les
push
pop
pop
jge
pop
lods
xor
rclb
in
mov
jno
push
mov
push
mov
cmp
andb
cwtl
jmp
or
out
pop
xchg
cs
mov
fisubrl
xchg
cs
push
movb
ret
mov
in
mov
shrl
mov
mov
bound
iret
pusha
xor
pushf
push
mov
push
repnz
pop
jmp
inc
push
int
sbb
adc
jecxz
sbb
adc
cmp
adc
cmp
fcmovu
push
mov
movsl
lods
ficomps
shl
lods
negl
mov
ds
push
enter
pop
sbb
adc
sahf
push
imul
xchg
sbb
xor
insl
sub
and
insl
lock
sarb
getsec
xlat
lds
test
jp
aaa
daa
js
out
or
outsb
xor
lods
lds
rorl
in
dec
mov
or
inc
popf
scas
mov
outsl
fwait
sbb
mov
scas
push
and
clc
mov
into
repz
dec
pop
push
scas
or
cltd
scas
fidivs
test
adc
cmpsl
pop
push
gs
add
push
xchg
cmp
inc
cmp
adcb
push
and
imul
jo
shl
in
xor
add
dec
pop
jg
add
lods
push
jle
cltd
mov
loop
pop
imul
add
xor
ss
or
pop
xlat
and
pop
mov
and
repnz
push
xor
xor
rorl
mov
pop
pop
test
mov
leave
push
sub
add
sbb
mov
jg
mov
imul
and
pop
pusha
push
out
dec
rcrl
jge
out
push
xor
stos
mov
jno
inc
aam
add
xchg
hlt
xchg
xchg
jns
inc
mov
dec
pop
xor
or
sbb
jp
bound
aas
xchg
cmp
ret
lds
and
enter
sbb
in
push
es
jne
cld
push
mov
push
sbb
jbe
das
jl
loopne
gs
jo
repnz
inc
pushf
addr16
xor
cs
mov
test
aad
pop
mov
sarl
int
add
jns
cwtl
mov
push
mov
xor
rorb
push
adc
push
out
insl
jmp
in
mov
push
jp
or
xchg
loop
jb
dec
test
movsl
inc
xor
andb
pop
out
je
sub
int
faddl
loopne
data16
mov
fisubs
dec
and
pop
dec
pushf
inc
daa
pop
arpl
push
dec
clc
in
add
jge
test
sub
dec
cmp
shrb
pop
mov
mov
test
cmp
mov
jne
mov
xchg
push
cmp
xchg
daa
adc
pop
mov
aad
inc
fisubl
loope
xor
leave
icebp
out
insl
popf
push
and
dec
iret
stos
jmp
ds
mov
cmpsl
or
mov
mov
or
sbb
test
pop
push
jg
cmpsl
test
jae
stc
pop
pandn
pop
jle
jecxz
rclb
outsl
dec
xchg
xchg
or
jmp
mov
pop
repnz
out
loope
jmp
inc
mov
shrb
repz
jp
pop
and
push
mov
and
inc
int3
push
add
mov
xchg
es
mov
gs
sub
mov
jmp
fidivs
pop
push
dec
add
popf
pop
pop
insb
cmp
mov
stos
ds
scas
mov
jmp
cli
pop
pop
pop
cmpsl
pop
subl
fcomip
rcrl
push
or
fiadds
sub
test
or
test
imul
ror
iret
mov
shlb
jno
dec
rolb
out
les
sub
je
push
add
aas
xor
std
icebp
mov
js
jmp
pop
test
pop
sub
inc
xchg
xchg
out
jmp
pop
pop
sub
je
xor
jmp
int
orb
mov
mov
pop
push
add
cmp
or
sbb
ds
pop
in
xchg
dec
es
sbb
out
fistl
sbb
xchg
pop
dec
ret
lret
or
mov
cmpsb
mov
xor
mov
stos
lret
loop
test
push
into
sbb
mov
lret
mov
mov
icebp
stc
add
xchg
sbb
xor
jns
stos
mov
jo
fwait
shl
lret
mov
mov
or
call
aam
addr16
sub
test
push
imul
and
sahf
xlat
xor
int3
dec
into
hlt
and
sbb
sub
add
leave
mov
call
fsts
push
push
iret
sarb
pop
stc
cmc
push
xor
add
rclb
or
jecxz
call
in
sbb
jbe
stos
cmp
out
pop
loope
shl
cld
lods
fs
sub
mov
xor
mov
add
cmp
mov
pop
stos
scas
lret
aad
or
push
ficomps
adc
pop
mov
mov
mov
and
mov
mov
aam
sub
jae
jb
mov
xlat
lock
jecxz
pusha
add
cmp
mov
int
rcr
dec
sub
xchg
loop
movsl
xchg
jnp
lret
inc
hlt
xor
int3
pushf
fisubrl
in
test
lret
sub
pop
mov
loopne
cmp
lret
pop
sbb
fimuls
jl
xchg
or
int
xchg
cwtl
lret
ss
mov
ljmp
jle
int
popf
jne
mov
addr16
outsl
ret
fdivr
lods
mov
stos
sub
into
bound
dec
fwait
sbb
push
cmp
ret
sti
mov
adc
in
mov
out
ds
add
fwait
lea
xchg
mov
stos
scas
fcompl
mov
push
sub
mov
sub
and
inc
mov
adc
mov
lret
add
cmpl
lret
jle
inc
incb
push
pop
stc
xor
daa
add
ljmp
into
cwtl
dec
push
fidivl
cmp
stos
push
bnd
mov
pop
cld
lret
pop
adc
and
pushf
jp
insb
cli
test
xor
inc
outsl
icebp
dec
ss
loop
xchg
sub
jmp
xchg
je
push
and
scas
mov
xchg
lret
loopne
add
push
dec
mov
sub
jmp
lret
cmpsb
xchg
out
aaa
cmp
outsl
js
mov
add
fmul
mull
sub
mov
addr16
xchg
aas
push
loopne
mov
cld
sarb
inc
and
xchg
inc
pavgw
outsl
mov
lret
xor
lret
jmp
mov
fnstsw
movsb
fwait
lods
hlt
mov
leave
sub
ret
and
int3
adc
jge
cli
stos
lret
repnz
mov
mov
out
in
sbb
jbe
push
cmpsl
iret
inc
mov
shlb
or
push
clc
lret
outsl
sar
jno
sbb
xchg
mov
popa
fwait
jo
icebp
xchg
lret
aaa
js
arpl
lret
dec
movsl
or
aam
pusha
sar
roll
pushf
mov
sahf
aam
lret
mov
je
repnz
cmp
cli
cmpsl
mov
data16
push
push
xchg
dec
jle
fs
mov
cmpsb
and
cmp
movsl
notb
test
mov
ja
adc
rcrb
lret
inc
repz
fwait
test
mov
mov
lret
inc
mov
lret
pop
movups
js
lret
in
xchg
and
fdivrs
jnp
lret
mov
mov
ror
cmp
lret
fnop
orb
cmp
jo
leave
lret
xor
adc
jo
sub
mov
pop
pushf
ret
lret
adc
lret
or
ror
arpl
xlat
imull
imul
jp
lods
movsl
jbe
cli
lret
pop
sbb
xor
lret
inc
enter
push
mov
push
sti
cmp
imulb
cwtl
dec
add
fs
mov
push
lret
bound
stos
jb
jb
pop
out
fcmovbe
bound
jae
push
xor
lret
pop
jl
mov
jp
sub
daa
hlt
mov
cmpsb
clc
xchg
adc
lret
jge
enter
lret
shlb
lret
inc
add
or
lret
mov
testl
lret
cmp
aaa
add
into
test
dec
jne
lods
cld
mov
in
rol
cmp
xchg
and
lret
lret
jno
les
mov
inc
lret
xchg
hlt
imul
xor
cltd
cmp
aam
and
pop
xchg
push
mov
popa
pop
mov
fisubrl
inc
cwtl
pushf
cld
int
or
cmp
lret
adc
data16
jbe
icebp
mov
ret
loop
out
iret
lret
add
mov
pusha
sbb
jns
cmp
xor
lret
imul
mov
cmp
mov
jb
sbbb
aad
inc
fidivrl
stos
or
je
movsl
push
pop
push
arpl
scas
popf
lods
or
fimull
inc
loop
dec
sbb
addr16
push
ror
xorl
jge
pop
lret
test
lret
test
mov
mov
inc
decb
jne
rolb
mov
lcall
xor
lret
cltd
cld
mov
pop
aaa
pop
or
adc
outsl
cli
jmp
add
xor
xchg
cli
mov
dec
sbb
jne
lret
lods
leave
cmp
stos
pop
push
sub
stos
loope
inc
lods
sbb
adc
outsl
lret
lock
sahf
popf
int3
adc
iret
inc
dec
fiaddl
jo
jmp
decl
push
stos
insb
inc
cld
and
mov
leave
test
lret
sub
loope
cli
dec
xor
dec
notb
and
into
shlb
sbbb
lret
pop
dec
shrl
in
ret
mov
jge
pop
mov
cmpl
sub
ja
cmp
lret
jnp
out
sarb
out
fsubrp
jno
cmpsb
sbb
aas
insl
aad
lret
mov
out
inc
imul
xor
mov
xchg
or
lret
cmp
sub
push
mov
xchg
and
mov
repnz
fldenv
add
insl
push
nop
mov
sub
data16
cmp
sub
in
push
xlat
repz
or
pop
arpl
sti
idivb
xchg
ret
int
clc
jl
lret
sbb
xor
pop
jge
test
xor
xlat
in
dec
jo
std
fldl
add
adc
mov
adc
cmc
ret
les
in
pop
loop
sti
ja
cmpsb
repz
xorl
stc
jno
mov
int
pop
into
sar
mov
add
adc
das
mov
loopne
icebp
adc
fcmovb
cmp
test
jb
dec
adc
lret
push
movsl
or
sub
stos
or
je
jmp
add
lods
lret
xchg
sbb
lret
dec
sub
stc
xor
test
data16
repnz
popa
cli
ja
and
arpl
mov
lret
xlat
movsb
pushf
jne
jmp
outsl
cmp
mov
xor
push
mov
nop
pop
push
insb
xchg
or
lret
dec
xchg
mov
add
nop
jno
lret
xchg
mov
sub
jg
xchg
xchg
add
rcrb
outsl
ret
mov
push
in
lret
lds
lret
rcll
aas
cmp
mov
lret
repz
jae
inc
cmc
push
sbb
test
mov
fwait
je
movsb
fadd
lea
inc
jae
ss
das
lret
jecxz
fadd
pop
fidivrs
dec
std
push
inc
hlt
aam
push
dec
jmp
out
cmp
lock
mov
je
and
mov
out
sbb
jb
push
or
mov
ret
ds
pop
sub
adcl
mov
lds
jmp
std
dec
cltd
dec
leave
shll
fcomps
fisubrl
outsb
es
add
cwtl
cmp
lods
popa
cmpb
inc
adc
arpl
in
out
lret
jg
pop
stos
in
mov
add
scas
mov
mov
repnz
xor
mov
mov
pop
mov
sub
loope
ljmp
xor
mov
repnz
push
cli
cmp
xchg
pop
jo
pop
inc
insl
add
dec
lret
cmp
shll
aas
cmpsl
push
out
xor
subl
mov
aaa
xchg
lret
je
mov
cmc
mov
add
inc
pusha
or
lret
cmpsl
push
pop
xchg
cmp
jge
or
cmc
data16
or
pop
mov
push
or
push
mov
pushf
push
push
adc
bound
mov
jecxz
int3
pushf
mov
sbb
mov
dec
push
inc
pop
push
push
xchg
and
lret
sub
and
jmp
push
push
scas
pop
shrb
lcall
push
cs
sbb
cmpps
sti
out
push
popl
and
rcrb
aam
stos
pop
cmp
jge
add
xchg
ret
andb
movsl
nop
mov
mov
nop
jno
adc
fsubrs
pushf
daa
and
push
pop
or
cmp
push
inc
int
pushf
mov
lods
lahf
into
repnz
inc
imul
pop
xor
add
dec
push
lret
xchg
mov
xor
sub
xor
mov
rorb
push
or
and
add
mov
test
testl
insl
mov
push
mov
push
jmp
sub
jbe
mov
mov
mov
xchg
adc
push
adc
popf
les
cmp
cmp
icebp
sarb
into
rcll
adc
jge
pop
add
inc
ss
xchg
lds
jmp
mov
cmp
cmpsb
pop
xchg
movsb
lret
data16
pop
scas
push
roll
mov
or
cmpsl
lods
sbb
push
ret
xor
lret
in
pusha
cli
push
aaa
sub
adc
lret
ret
pop
and
movsl
fwait
out
sbb
mov
es
adc
pop
inc
pop
xchg
shrb
loop
lock
stos
sub
dec
cwtl
int3
test
insb
outsb
cwtl
cli
icebp
mov
or
mov
jp
rcr
jb
dec
loopne
mov
mov
push
sbbb
lcall
mov
pusha
jecxz
rcrl
subb
pop
push
bound
push
or
jns
inc
sub
push
stos
les
lret
cmp
adc
jo
push
mov
add
inc
xor
push
xchg
dec
cmpsl
sbb
aas
fcmovu
dec
xchg
xor
push
pop
xchg
adc
and
rorl
mov
jp
test
xor
xor
hlt
pop
dec
pop
fs
add
fmuls
into
gs
mov
push
or
jbe
insl
nop
outsl
aam
add
mov
push
gs
cs
xor
jmp
adcb
sub
scas
and
ljmp
pop
je
cld
sub
jnp
mov
fs
cmp
test
subl
test
pop
cmp
popf
pop
push
loopne
xchg
jne
cmpsl
subb
add
loop
cmpsl
je
enter
fsts
bound
and
std
pop
into
add
push
push
out
pop
insb
push
mov
mov
add
sti
fcmovnb
mov
shr
nop
cwtl
mov
int
divps
push
dec
aas
push
inc
mov
inc
mov
andl
jbe
and
pop
jge
push
inc
jmp
add
es
pop
sub
dec
inc
addr16
xor
lret
inc
cmovb
push
xchg
pop
inc
aam
push
pop
lds
rcrb
push
mov
jne
in
and
xchg
nop
and
push
xor
sub
sub
aaa
push
or
fstl
popa
lds
loopne
or
pop
jbe
pop
leave
jo
push
cmp
pcmpgtw
into
loop
jmp
movsl
into
adc
pop
movsl
nop
jmp
inc
aas
cmc
and
out
pop
sahf
mov
push
lea
xchg
in
js
pop
adc
jle
out
mov
and
shll
cmp
jmp
loopne
stos
push
fcomps
push
or
or
sahf
push
dec
nopl
pusha
mov
add
into
fs
call
gs
imul
pop
in
push
lret
sahf
cmp
inc
mov
mov
pop
sarl
sbb
cltd
ds
movsl
mov
add
and
pop
xor
sbb
aas
test
test
add
push
adc
or
mov
jo
jp
push
xlat
aaa
nop
pop
clc
jbe
shlb
dec
adc
daa
movsl
fmuls
cmpb
inc
loope
fistpl
in
out
aas
dec
fwait
push
pop
mov
or
js
and
pop
lahf
cld
and
jle
ljmp
popf
int3
mov
xchg
or
jb
out
iret
pop
mov
cmc
lods
or
lds
pop
fadds
or
repnz
mov
out
rorb
mov
mov
push
xchg
repnz
dec
outsl
xchg
adc
sbb
xchg
jmp
or
pushf
mov
stos
mov
xor
mov
or
popa
lock
and
mov
cli
push
sub
std
aaa
movsl
fldt
outsl
pop
cmpsb
dec
xor
lret
popa
pop
push
push
inc
xor
jae
or
push
push
dec
cltd
insl
add
mov
cmp
jne
into
adc
lret
cltd
jmp
inc
adc
mov
ret
adc
orl
insl
xchg
xchg
in
mov
dec
dec
push
sub
testb
xchg
and
sbb
mov
pop
or
cli
push
and
adc
mov
pop
mov
add
push
cmpsl
fmulp
inc
ljmp
lahf
in
hlt
lret
inc
leave
popa
into
ret
xchg
pushf
loopne
push
add
inc
and
mov
mov
add
xchg
into
dec
inc
sbb
sub
pop
push
jmp
add
sbbb
xadd
pop
sti
xor
iret
outsl
addr16
dec
push
imul
ss
hlt
pop
lret
cmp
stos
lds
jb
mov
movsb
push
out
sbb
adc
pop
mov
xchg
lods
imul
mov
inc
imul
mov
lods
jne
dec
or
call
jle
mov
xor
adcb
lock
cs
rolb
into
notb
push
pop
mov
rcrb
in
jl
popf
repnz
adc
and
sbb
mov
sbb
jb
sub
stc
push
inc
pop
repz
popa
out
push
push
push
shlb
mov
xchg
pusha
mov
dec
sbb
push
jne
test
push
rcr
push
mov
scas
or
sbb
fcoms
jg
iret
mov
int
or
aad
dec
arpl
fldl
mov
push
mov
push
add
sti
repnz
ljmp
pushf
loopne
jb
inc
xchg
mov
pop
out
push
mov
push
add
xchg
xor
fdivp
push
mov
bound
ret
xchg
dec
test
rol
outsl
flds
test
push
int
mov
pop
daa
fdivrl
push
push
sbb
add
cwtl
add
mov
imul
pop
inc
ss
loop
sarl
addr16
outsl
cmc
mov
pushl
mov
xchg
adc
push
std
xor
outsb
sub
mov
jp
fidivs
fcmovnb
cmp
out
push
mov
mov
dec
jnp
and
dec
js
push
ret
fcomi
stos
mov
mov
adc
pop
push
jp
sub
mov
leave
mov
push
pop
push
ljmp
inc
cmpsl
push
pop
loop
fbld
cmp
rorb
loopne
fidivs
mov
push
jge
in
sbb
pop
push
cmp
testl
xchg
cld
dec
in
push
xor
and
repz
fmulp
in
cmpb
jecxz
dec
pop
cli
aam
pop
jns
add
ss
bound
fs
outsl
sarl
mov
xorb
gs
mov
xor
test
sbb
push
mov
sub
dec
out
pop
push
pusha
out
mov
loop
aas
push
es
xacquire
mov
push
pop
aam
iret
mov
dec
inc
mov
out
xchg
loop
mov
std
mov
sbb
adc
or
adc
mov
into
lds
lods
jbe
push
xor
push
in
std
daa
bound
bound
adc
fildll
daa
sbb
ja
ds
movsb
adc
pop
lret
pop
movsl
rcrl
mov
push
test
push
popa
and
mov
push
jle
xor
xchg
into
loop
rcrl
insl
mov
dec
cltd
mov
subb
in
fidivrs
fcmovbe
push
cld
sti
inc
test
lret
jae
xchg
cmp
or
xchg
and
xchg
int3
push
sbb
lret
and
outsb
xor
mov
push
mov
aaa
jle
leave
sbb
mov
push
movsl
lea
shrb
xor
xchg
xchg
and
shll
data16
jne
cltd
mov
or
and
mov
lret
add
push
popa
xor
outsl
xor
lods
sbb
sbb
ljmp
mov
out
pop
mov
shrl
dec
pop
das
lret
pop
xor
pop
fwait
inc
nop
xor
xchg
shll
loopne
pop
push
pop
test
das
or
xchg
jne
rorb
xchg
jns
in
push
pop
scas
pusha
push
inc
mov
sbb
test
in
dec
mov
mov
adc
insl
repnz
iret
mov
loopne
popf
aam
inc
aaa
std
jg
xrelease
sti
lret
or
push
mov
orl
pop
push
cwtl
jmp
and
sub
out
jmp
lds
les
sti
dec
sbb
rcll
out
bnd
cmp
fidivrl
rol
lods
roll
add
es
outsl
test
push
pop
add
enter
cmp
rcrb
pop
xchg
rol
lret
out
int3
push
xchg
dec
push
pop
cmpsl
rcl
xchg
cltd
je
jp
push
pop
fcmovbe
mov
push
movsb
and
push
and
daa
fdivp
push
xchg
mov
test
mov
pop
mov
scas
outsl
sbb
ret
mov
cmp
cmp
lahf
push
lods
cltd
fcompl
je
pop
push
das
xchg
inc
int3
xor
fldt
decb
movsl
sub
xorb
jg
fmuls
ljmp
repnz
xor
pop
jbe
inc
popa
arpl
dec
pop
jl
ljmp
lahf
mov
xchg
inc
or
pop
imul
push
mov
pushf
lcall
je
push
lds
repz
inc
mov
fnstcw
cmp
fs
xchg
es
sub
push
mov
xchg
sbb
lret
cwtl
pop
insb
scas
int
mov
pushf
scas
sbb
dec
cli
sbb
or
adc
scas
xchg
jae
mov
scas
rcrb
or
je
lock
pushw
and
jp
pop
test
popf
push
testl
in
add
or
mov
sub
xchg
cmc
add
sbb
dec
pop
adc
lahf
hlt
lret
adc
sarb
adc
repz
enter
stos
int3
sti
lock
test
into
push
pop
xchg
adc
loop
push
repz
inc
pop
in
sbb
pop
sbb
push
push
push
mov
arpl
imul
cs
pop
fists
outsb
jl
xchg
mov
lret
les
lret
ret
lods
push
sti
in
mov
fs
xchg
in
and
scas
adc
xchg
mov
into
sbb
loop
mov
mov
mov
or
rcrb
lods
sub
cmc
imul
rcrl
sub
bound
inc
js
push
xchg
mov
pop
int3
xor
insl
sti
jne
lods
fdiv
cwtl
lret
push
pop
lea
shrb
pop
icebp
hlt
stos
sub
push
out
xchg
fcmovne
pusha
mov
dec
xor
fmuls
jb
lcall
inc
je
es
adc
pop
push
adc
enter
cmpsl
lret
xchg
jp
out
mov
gs
push
and
sarb
pop
iret
push
lahf
lret
mov
pop
lret
xor
inc
lea
test
xor
sbb
out
pop
dec
shrl
cmp
add
imul
int
jle
int3
fdivr
rol
in
sub
aas
stos
push
push
sbb
dec
jae
test
sarb
xchg
ljmp
or
aam
inc
jmp
fwait
sub
scas
lods
add
lret
add
add
dec
les
sbb
pop
lret
fs
inc
cli
xor
mov
sub
cltd
jo
rclb
shll
fbld
jp
in
pop
aas
lret
xchg
lcall
rcrb
or
dec
jmp
shlb
lret
lcall
jmp
lret
pushf
mov
es
add
push
mov
fbstp
jg
insl
cmpl
xchg
lret
call
lret
cmp
lret
mov
mov
out
sti
shr
in
lret
xorb
jae
lret
and
imul
or
lret
and
lret
push
push
xor
jge
or
aas
dec
pop
mov
push
push
jle
lret
lahf
repz
pushf
jno
push
push
cltd
psrld
mov
dec
xor
cmpsb
dec
stos
cmp
test
push
lret
cmpsl
sbb
mov
mov
xchg
sti
pop
movsb
imul
and
mov
mov
mov
lret
nop
pop
sub
ret
lret
and
jmp
icebp
stc
mov
mov
mov
test
aam
scas
rorb
rorl
out
dec
lret
add
outsb
cmp
pop
adc
push
incl
aaa
sahf
repz
mov
dec
je
lret
loope
rolb
mov
inc
xchg
insb
fwait
mov
hlt
jmp
into
dec
mov
jbe
ljmp
hlt
xchg
ficompl
mov
and
add
outsb
ljmp
lret
jns
inc
imulb
push
sbb
rcrl
pop
sub
pop
xchg
pop
cwtl
cld
int
cmp
sbb
in
aam
pop
xor
popf
pop
sub
testl
lret
mov
pop
cmp
push
int3
stos
mov
lahf
movsl
xchg
push
insl
cmp
fnstcw
sbb
in
lret
arpl
xor
push
xchg
popf
push
sbb
aam
adc
mov
push
push
ffree
push
and
dec
dec
or
dec
lcall
ret
subl
inc
pop
daa
cmp
pusha
je
mov
mov
pop
mov
adc
shlb
dec
and
popa
inc
in
or
das
ja
mov
jbe
push
lret
dec
fistpl
jae
lcall
xchg
lret
lret
out
rcr
lret
mov
neg
pop
xchg
ficompl
scas
int3
pop
addb
lret
stos
jmp
lret
cmpsb
fidivl
mov
in
int
aas
xor
mov
adc
popf
cli
loop
sub
clc
lret
jns
xchg
out
add
stos
cmpsb
rolb
jno
lret
mov
ss
ljmp
push
mov
inc
scas
lret
stos
sub
sub
lret
clc
dec
bound
push
roll
ljmp
lods
cmpb
lret
stc
fcoml
and
sti
lea
lret
adcl
xorb
stos
jmp
shlb
jns
cwtl
rcll
fiadds
pop
andl
fsts
adc
stos
mov
push
aam
fwait
daa
pop
mov
pop
iret
dec
cmp
dec
mov
cli
adc
jge
sbb
mov
dec
test
imul
lahf
adc
into
lret
xor
iret
bnd
in
lret
xor
mov
add
push
lret
pop
in
rcrl
test
pop
or
clc
fmul
dec
xor
mov
sub
lahf
push
lret
cmp
mov
fsubr
sbb
test
and
pop
arpl
mov
les
add
mov
jmp
inc
cmp
aas
mov
lea
fnstsw
mov
mov
adc
rorb
sub
lret
in
sbb
in
aam
arpl
repnz
xor
sbb
or
inc
fadds
mov
jbe
inc
imul
add
daa
dec
ljmp
inc
jnp
lret
shll
add
insl
neg
ror
push
pop
xchg
mov
ja
cltd
aad
aam
hlt
pop
fldt
nop
sbb
xchg
adc
lret
mov
lock
xchg
lret
lret
jecxz
jge
cmp
inc
movups
cli
adc
cmp
out
cmp
sar
cltd
nop
sub
fildll
shlb
sbb
xchg
in
call
mov
mov
push
jg
popf
lds
mov
mov
cmpsl
jmp
lret
bound
rclb
cli
jecxz
jb
arpl
inc
or
mov
lret
pop
dec
mov
inc
sbb
scas
fs
jnp
cs
lret
mov
xabort
popl
leave
lret
mov
sub
dec
lret
pop
lods
push
jle
adc
mull
push
dec
push
jne
sbb
or
push
mov
lret
jmp
xor
addl
jle
push
scas
mov
cmp
in
test
test
leave
aam
lods
xchg
data16
neg
push
mov
cmpb
add
cltd
mov
lret
test
cmp
dec
push
or
in
lea
rorb
cli
jbe
popa
sub
mov
ret
lret
popf
pop
pop
inc
cwtl
cmpsl
lret
jbe
nop
adcl
insl
aas
or
cli
fisubl
xor
or
shlb
popf
pop
in
sub
push
push
mov
faddp
xlat
insb
add
cmc
cltd
mov
popf
outsb
test
add
cli
sub
int3
xchg
sbb
leave
sub
xchg
adc
mov
test
and
xchg
hlt
outsl
pop
lock
data16
or
sbb
mov
xchg
sbb
frndint
mov
iret
inc
insl
fmulp
xlat
jmp
jp
fstl
insb
pop
stos
sub
push
stos
pusha
mov
push
aam
fstps
cmp
in
fwait
sub
into
mov
adc
cli
jl
and
mov
dec
rclb
cmpsb
test
iret
sub
mov
sbb
nop
cmp
and
push
fwait
xor
inc
mov
sbb
fwait
mov
sub
out
lcall
scas
xchg
push
sub
lret
lea
sub
cli
dec
fisttpll
sbb
push
aaa
xchg
lret
adc
stc
lret
arpl
cmp
cli
push
dec
jl
sub
sub
and
jb
pop
ret
shrl
rcll
ror
loope
outsb
fsubl
stos
and
lret
inc
pop
shlb
sub
mov
in
mov
ficoms
scas
call
lret
out
dec
pop
xchg
out
lret
cwtl
fs
std
movsl
mov
or
pop
sahf
push
ja
xchg
sbb
cli
jno
add
gs
pop
out
lock
add
fcom
test
in
jg
aam
xchg
insb
neg
mov
sbb
cltd
je
lret
cli
not
sarb
lret
call
lret
or
lret
or
lret
into
xchg
pop
aas
cmp
cwtl
jl
push
je
repz
mov
jp
sar
stos
bound
rcrl
fistl
and
pop
dec
xchg
jmp
add
xchg
cld
ret
inc
cmc
addr16
mov
gs
popa
sub
ds
push
pop
sbb
inc
pop
jo
repz
outsl
test
cltd
icebp
test
insl
mov
mov
ljmp
push
add
push
lret
std
insl
addl
xchg
push
int
and
lret
js
pop
push
jmp
sahf
lds
scas
xlat
jg
sub
mov
lret
jb
insl
shlb
ficompl
test
stos
jb
or
cmp
pop
cli
std
push
jge
fwait
cs
or
sub
xchg
movsl
lret
aaa
mov
mov
rorb
cmp
shr
int
les
jnp
xor
sbb
dec
pop
sti
push
push
mov
inc
test
jg
mov
push
adc
mov
das
xchg
xchg
test
cmc
fldenv
sbb
or
insb
add
or
insl
dec
cwtl
mov
or
sbb
jge
gs
rclb
pushf
mov
mov
fiadds
daa
xchg
movsl
cmc
cli
xchg
gs
sbb
sarb
push
dec
mov
stos
and
aas
int
rcrb
and
out
push
cmc
test
cmpsl
jmp
xchg
mov
xor
push
jo
ljmp
xchg
sti
sbb
sbb
or
stos
scas
or
js
sarl
cmp
sbb
mov
out
dec
push
clc
iret
fxch
int
out
mov
or
shl
push
sub
sbb
or
push
mov
jae
push
jg
stc
test
pop
cmp
arpl
cwtl
movl
dec
sbb
daa
stos
pop
or
push
sbb
cmp
hlt
stos
mov
or
subl
push
mov
bound
sar
jmp
enter
mov
cmpl
sar
push
inc
sahf
or
jl
ds
addr16
mov
sbb
stos
xchg
jp
aam
fimuls
pop
push
mov
int3
bound
xchg
xchg
addr16
jge
push
pop
js
daa
jo
or
dec
stc
aas
scas
cmp
rorl
hlt
push
pop
scas
xchg
mov
les
int
movsl
push
pop
cmp
inc
push
js
sbb
push
jl
dec
divl
rclb
addb
push
icebp
lahf
and
es
pop
pushf
pop
sbb
mov
inc
in
ja
clc
aas
or
call
lret
push
fidivrs
add
cmp
outsb
push
jae
je
aas
stc
cltd
mov
cltd
lods
push
jmp
addr16
jg
sahf
sti
je
inc
cmc
dec
push
xchg
imul
add
inc
jecxz
push
int
lods
pop
mov
and
fisubrl
and
and
pusha
cmpsl
outsb
imul
inc
popa
jecxz
jae
lahf
xor
in
mov
dec
dec
mov
cmc
jns
outsl
push
dec
push
adc
test
add
inc
ljmp
iret
scas
sti
push
inc
inc
sub
dec
mov
insb
push
adc
push
repnz
add
add
mov
jnp
call
ffreep
and
int
cmpsl
aas
pop
rorl
lret
stc
fildll
pop
push
ja
ret
push
sub
fcmove
mov
sub
mov
adc
cli
or
je
in
jbe
mov
pop
orb
rcrl
dec
mov
inc
fimuls
mov
mov
jne
fs
rcl
mov
or
adc
xor
test
jae
dec
cld
loopne
roll
arpl
ds
xchg
add
sahf
cmp
mov
stc
iret
repz
cmpsl
jl,pn
jbe
add
test
data16
imul
int3
aaa
or
and
rclb
enter
cmp
mov
jno
cmp
add
dec
out
ret
and
jmp
push
inc
sub
add
dec
loope
and
iret
jl
or
mov
sbb
test
daa
sub
ds
inc
lahf
or
pop
mov
xor
hlt
iret
stc
cmpsb
lods
aas
sarb
dec
aam
cltd
xchg
and
popf
jae
cmpb
or
push
dec
pop
rol
push
js
inc
fstps
pop
cmp
negl
add
loop
jbe
stos
xchg
adc
insb
out
cmpsl
lret
ljmp
xchg
cltd
push
aam
nop
test
rcrl
lds
push
pop
mov
pop
push
bound
inc
into
inc
mov
add
jnp
mov
add
or
push
cld
or
aad
sti
or
mov
and
ret
xor
push
sbb
xchg
mov
mov
pop
adc
sbb
xor
repnz
mov
push
pop
mov
pop
test
lret
mulb
add
adc
cmp
lea
sub
push
mov
stc
test
iret
push
mov
push
outsl
rep
mov
inc
adc
dec
and
jle
push
xchg
scas
xchg
push
mov
push
es
iret
pop
cmp
sahf
and
je
push
ljmp
daa
jmp
bound
movsl
mulb
stos
int3
mov
loopne
push
and
adc
loope
dec
mov
or
int3
or
je
dec
sbb
int
mov
mov
mov
add
push
stos
jne
push
add
int
mov
sub
xchg
shlb
imul
fucomip
mov
sub
mov
jmp
icebp
idivl
ds
jmp
mov
pop
jge
mov
pop
jnp
orb
popf
popf
mov
sti
insb
in
mov
xlat
rorb
push
rorl
aad
push
clc
in
or
rorl
gs
jge
into
ljmp
or
fstpt
adcb
pop
ljmp
mov
push
dec
test
mov
inc
scas
adc
je
faddl
and
pop
leave
and
mov
dec
or
scas
jns
icebp
push
pop
jmp
mov
out
imul
xor
jb
in
cmp
pop
ficoml
das
iret
push
and
lods
push
and
adcb
lret
jne
cmpsl
adc
shr
mov
push
dec
imul
fists
cwtl
mov
mov
mov
or
es
jmp
data16
bound
dec
mov
mov
or
push
pushfw
inc
fidivrs
dec
fs
jmp
or
movsl
push
icebp
scas
mov
sub
jg
dec
imul
sub
mov
loop
fadd
rorl
push
dec
mov
mov
stos
pop
test
leave
add
mov
aas
aaa
sbb
pop
push
cli
and
pushf
pop
ja
inc
jmp
mov
adc
test
test
sti
ror
or
mov
test
scas
dec
xor
pop
sub
xor
push
repz
add
mov
mov
jecxz
shrb
cs
lahf
movsl
sbb
push
ljmp
fwait
pop
mov
mov
cmp
jb
clc
dec
xor
mov
into
and
push
das
jnp
outsb
xor
push
movsb
aam
test
add
daa
and
add
jmp
mov
mov
jl
mov
shld
mov
pusha
push
mov
push
and
repz
dec
ljmp
dec
or
test
or
ds
cmp
lods
fildll
jg
ss
testl
aad
push
jns
pushf
sbb
inc
fcomi
xchg
iret
mov
test
pop
pop
push
loop
aas
lret
loop
jmp
sahf
lcall
shlb
pop
inc
bnd
mov
push
enter
test
mov
mov
mov
sbb
sbb
push
add
imul
hlt
mov
aam
aaa
aas
cltd
orl
pushl
adc
testl
adc
xchg
dec
jg
xchg
sahf
pop
sub
xchg
fiaddl
push
xchg
sarl
lods
sub
pop
aam
jp
orl
jecxz
pop
cmc
js
mov
pop
rorb
pop
push
mov
int
pop
test
push
les
sbb
jmp
loopne
push
mov
add
scas
jo
dec
jle
jnp
test
stos
stc
sbb
mov
inc
notb
and
dec
bound
and
push
test
popa
in
pusha
and
xor
push
vmovntps
pop
lock
outsb
outsb
sbb
pop
loop
mov
roll
sti
mov
leave
aaa
adc
and
push
outsb
adc
push
jbe
add
pop
push
add
mov
jg
jecxz
orb
shll
int
adc
mov
push
push
and
pop
sbb
inc
sub
sti
xchg
in
lahf
mov
pop
into
mov
cmc
lods
jae
es
out
rorb
in
push
orb
sbb
inc
or
xchg
int3
cmp
ret
jp
push
mov
arpl
addl
add
mov
outsl
mov
mov
jg
cld
les
add
sub
fsubr
xor
cmp
dec
rorb
lods
add
rcll
pop
std
mov
push
fstpt
push
adc
or
pop
idivl
or
rclb
roll
xchg
lret
mov
movsl
push
cmpsl
mov
jae
ret
xor
nop
pop
xchg
and
ljmp
loop
test
mov
repz
pop
push
jbe
mov
inc
decl
into
mov
test
push
lock
push
sub
push
movlps
mov
test
pop
inc
mov
cmp
xor
test
movsl
sbb
in
cmp
and
gs
scas
sbb
inc
aam
dec
and
aas
fdivrp
or
sbb
popf
inc
xchg
jge
sbb
sub
cs
mov
mov
cmpsl
sarb
xlat
pop
pop
jae
icebp
out
outsl
mov
int3
mov
add
pop
repz
jl
ja
mov
clc
mov
dec
inc
icebp
dec
aad
pop
repnz
push
xchg
adc
add
aad
pop
call
shlb
jbe,pn
jge
shll
mov
fnstcw
in
push
test
mov
dec
pop
cmp
and
push
popf
repz
pop
jne
int3
push
int
sbb
ret
add
push
repnz
sbb
push
sar
inc
mov
bound
aaa
pop
and
jno
push
cmp
bound
push
pop
aad
mov
ja
in
lret
mov
jo
loop
nop
mull
imul
leave
xchg
bound
sbb
int
push
mov
mov
and
test
ret
xchg
or
das
xlat
mov
push
idiv
mov
lds
shr
out
inc
mov
mov
mov
xchg
filds
nop
push
bound
aam
cltd
leave
pop
sub
stc
mov
xlat
sub
rcll
out
pushf
out
repnz
inc
pop
inc
inc
fwait
and
adc
mov
and
cmp
cmp
imulb
adc
push
jge
out
xchg
xor
dec
inc
nop
rclb
ljmp
fs
or
dec
js
fidivs
out
pop
shlb
push
in
test
add
mov
scas
fistpl
inc
mov
sbb
ror
push
ficomps
adc
nop
mov
mov
dec
cmp
adc
pop
sub
mov
sbb
or
push
adc
cmpsl
fcmovnb
std
scas
xor
sbb
push
test
push
ret
jmp
arpl
inc
push
xor
and
prefetch
dec
aaa
out
cmp
in
sbb
test
jnp
int
mov
jecxz
add
out
mov
add
adc
adc
push
mov
flds
mov
jns
mov
in
ljmp
loopne
lock
cltd
sub
scas
jp
xchg
arpl
rcrb
push
nop
rcll
adc
push
xchg
js
cmp
push
push
imul
or
cmp
dec
mov
pop
or
ja
adc
aam
xor
mov
test
stos
shr
out
jno
movsl
imul
mov
sti
pop
mov
and
les
fucomp
mov
sub
bound
call
cmpsb
mov
xchg
ret
iret
xchg
shlb
jp
sbbl
loop
sub
popa
mov
pmaxub
clc
dec
daa
pop
dec
pusha
rorl
lods
in
dec
repnz
gs
and
lcall
and
pop
add
cltd
add
sbb
push
push
inc
dec
inc
aad
inc
jge
nop
mov
out
dec
mov
cld
dec
xchg
es
push
mov
push
push
adc
ja
fdiv
adc
and
popa
int3
or
loope
repz
jbe
jae
popa
fwait
sahf
jle
shlb
fisubrs
lds
and
push
fmull
xchg
int
or
sbb
cltd
test
mov
in
push
dec
decb
and
fwait
dec
and
scas
inc
int
jb
out
jns
mov
loope
cmp
icebp
mov
push
sbb
mov
jge
insl
xor
mov
lret
mov
mov
scas
pop
sbb
int3
pop
and
stos
adc
outsl
mov
mov
cmp
or
sub
int
cmp
scas
nopl
sahf
adcb
pop
or
mov
and
andl
add
pop
pop
cli
lret
mov
ror
mov
sub
push
test
jl
data16
pop
inc
js
pop
and
rorb
adc
or
ljmp
shll
in
lds
push
pop
sbb
sub
push
sbb
cli
mov
jbe
mov
pop
das
fildll
and
scas
and
push
sub
into
jle
push
xor
and
mov
outsl
or
insb
or
push
adc
mov
push
jge
xchg
add
pop
sub
ljmp
pop
add
dec
leave
jg
sbb
sbb
cmp
inc
sti
or
ret
orb
std
je
xchg
aaa
icebp
inc
xor
add
in
aad
out
cmp
push
xchg
mov
xor
lret
sub
jmp
vpmaxub
and
in
xchg
out
rol
imul
dec
fildll
push
and
lods
adc
stos
mov
test
inc
rcll
xor
and
stc
mov
fstpl
in
pop
inc
shll
fwait
test
iret
dec
daa
ds
bound
or
out
test
jo
pop
mov
mov
rclb
divb
lock
add
adc
push
lods
daa
xchg
xchg
popa
hlt
sub
dec
cmp
insl
pushf
xchg
test
jmp
add
push
fidivl
in
dec
jge
cmp
icebp
les
aas
add
xchg
and
xchg
and
push
fs
push
jns
cli
push
jp
jge
ds
sti
or
ljmp
int3
mov
xor
jne
leave
mov
gs
mov
push
ss
pusha
push
fcom
mov
xor
add
cli
jecxz
pop
lret
xor
sub
test
fmul
mov
jle
or
push
cmpsl
inc
loop
jl
mov
aas
xchg
jp
int3
inc
and
sub
dec
test
jecxz
pop
xorb
test
enter
test
push
or
mov
jl
data16
add
ret
push
int3
test
and
scas
sbb
data16
insb
pop
fcomps
movsb
jmp
inc
pop
in
cmpsb
mov
rorb
inc
or
mov
bound
xchg
in
ret
call
adc
xchg
movsb
mov
and
or
imul
mov
sbb
jo
mov
mov
test
dec
gs
dec
adc
xchg
mov
sbb
sub
ja
push
jp
imul
xor
mov
jl
pushf
mov
je
es
repz
add
bound
inc
mov
jmp
sbb
jae
out
pop
sarl
cmp
fnstsw
xor
jmp
and
jnp
clc
fdivrs
push
dec
out
push
subb
mov
adc
mov
push
fisubrl
jl
add
jns
push
mov
sbb
mov
sub
pop
jp
pop
das
push
loope
out
mov
in
bnd
add
inc
sbbb
leave
push
je
int3
jmp
dec
mov
stos
mov
push
push
icebp
shll
stc
ficomps
xchg
jge
rorl
push
stc
or
dec
dec
xor
daa
add
mov
push
fimull
dec
mov
push
ficoml
inc
std
cmp
in
and
inc
pop
ljmp
pop
inc
jns
dec
jb
dec
aaa
mov
jo
or
add
lahf
roll
cmp
mov
int
loop
in
adc
imul
inc
cs
aad
or
repz
das
negb
xor
int3
inc
cs
lock
out
daa
cmc
lahf
rorb
int3
sub
or
arpl
pop
pusha
repnz
and
inc
mov
cwtl
rcrl
bnd
dec
imul
jae
mov
push
popa
mov
adc
or
jmp
lcall
pop
jge
in
cwtl
mov
cmp
insl
sub
push
int
sub
inc
add
or
pop
pop
pushf
nop
push
and
push
adc
add
es
mov
sti
cli
repnz
js
xor
push
cmp
ja
jle
int3
and
push
test
jp
push
outsl
pop
jns
inc
or
into
push
stos
scas
ficomps
or
jge
int
inc
ret
rorb
sub
rorb
sub
das
movsb
jle
pop
xchg
js
and
xchg
adc
mov
cmpsl
dec
jb
mov
lret
xchg
mov
popf
rclb
xor
jp
push
aas
roll
inc
jb
lret
inc
jbe
pop
sub
rorl
inc
pop
or
add
cmp
push
xchg
xchg
and
insl
sbb
cmp
pop
sbb
out
mov
lods
add
jo
ss
sub
inc
dec
push
jno
or
repz
jmp
push
hlt
cs
inc
jge
adc
repnz
data16
scas
mov
mov
in
hlt
or
repz
inc
lret
dec
cmpsb
inc
movsl
gs
shlb
push
lret
dec
sub
mov
fistpl
sbb
push
dec
push
aaa
or
mov
cs
push
jbe
outsl
shll
jns
pop
mov
adc
jmp
jp
pop
int3
mov
outsb
loopne
cmpsl
xor
pop
adcl
aam
dec
push
int
arpl
test
imul
in
xchg
cmp
push
das
mov
out
aaa
cmp
fiadds
hlt
outsl
xchg
and
or
stos
cmp
mov
hlt
sub
scas
stos
mov
dec
push
scas
xchg
test
pop
jne
sbb
bts
sub
sbb
add
inc
mov
push
mov
fwait
mov
fcompl
mov
sarl
mov
mov
mov
cmp
pop
iret
xor
bound
mov
jecxz
pop
pop
rorb
pop
fdiv
jl
mov
inc
cs
sub
sbb
inc
pop
xor
sub
iret
mov
jp
cmpsl
jbe
shrl
add
inc
xchg
movsl
mov
andb
iret
push
in
dec
ret
jmp
or
hlt
mov
sub
int3
add
orb
sbb
pop
fnstsw
push
lea
fistl
dec
sub
loope
das
push
call
fsubrl
out
cltd
repz
xchg
or
sbb
scas
aaa
in
movsl
jle
popa
jp
leave
lds
push
out
lret
inc
loope
push
sbb
shlb
push
xchg
mov
popf
out
mov
std
rcl
mov
mov
pop
cmp
pop
sbb
or
push
add
push
js,pt
addr16
cmp
inc
insl
das
adc
mov
enter
push
cltd
xchg
shrb
or
mov
faddl
add
xchg
add
pop
and
unpcklps
mov
adcb
push
push
dec
push
fisubl
cmp
jmp
out
arpl
pop
pop
lret
pop
dec
jns
pop
mov
add
xor
outsb
xchg
out
mov
enter
add
or
xchg
add
and
xor
pop
js
push
into
push
sub
mov
xor
push
xchg
push
sbb
dec
iret
mov
inc
stc
out
push
aad
pushf
xchg
int
dec
mov
repz
or
jecxz
pushf
call
leave
jnp
jge
dec
pop
mulb
sbb
leave
mov
or
lcall
jecxz
dec
mov
clc
lret
inc
bound
repz
xchg
std
push
out
mov
pop
push
pop
sbb
pop
rol
fstps
adc
dec
sub
inc
push
push
scas
xlat
loop
mov
dec
cmp
arpl
and
gs
push
aas
outsb
mov
jae
xlat
das
fadds
mov
insb
int3
jmp
fidivrl
lods
xor
sbb
pop
mov
push
fstpl
mov
pop
add
push
dec
mov
aad
enter
dec
sub
int
xlat
mov
xor
out
jns
lds
mov
pop
es
aam
in
call
pop
insb
mov
out
popa
mov
mov
xor
push
inc
imul
mov
and
mov
xchg
sub
cltd
push
mov
jae
mov
adc
mov
in
mov
sarl
push
xchg
insb
pop
push
jge
outsb
nop
adc
cmp
aaa
shll
cmp
pop
dec
push
lret
sbb
and
mov
or
enter
add
nop
adc
pop
shrl
sub
gs
lret
inc
das
pop
xchg
andb
mov
aam
sub
mov
jnp
inc
add
xor
in
test
push
or
mov
xor
ret
push
push
jmp
ds
cmp
add
jbe
sub
shlb
push
pop
add
lods
mov
fs
and
fs
pop
xor
outsl
lret
enter
xor
test
repnz
or
ljmp
dec
sti
and
enter
fistl
inc
loope
arpl
push
int
or
out
pop
mov
push
jno
add
jecxz
out
leave
bound
rclb
xor
mov
or
imul
repz
mov
adc
mov
filds
xchg
push
ss
push
jae
test
test
pop
test
scas
repz
pop
mov
inc
sub
inc
movsl
push
jg
pop
jne
mov
push
push
jp
clc
jne
cmp
mov
out
loop
test
aam
push
dec
push
fdivl
add
addr16
sbb
cltd
and
movsb
mov
push
setg
jecxz
pop
cmp
mov
ret
lcall
fisubl
adc
jo
or
inc
mov
scas
insl
push
in
sarl
dec
cltd
mov
sahf
push
pop
cmp
hlt
test
xor
popa
icebp
mov
add
je
cmp
xor
scas
and
hlt
call
inc
in
stc
mov
ja
scas
or
pushf
daa
dec
into
scas
push
fstpt
push
rcll
jmp
and
fnstenv
fpatan
inc
clc
rol
dec
xchg
mov
xor
int
shll
test
fs
sar
pop
arpl
aaa
mov
aam
sbb
je
add
iret
sub
popa
stos
and
leave
hlt
jge
or
fadd
bt
enter
sub
pop
inc
fnstsw
and
repz
push
jl
adcl
mov
push
dec
dec
imul
inc
leave
rcr
push
fnstenv
outsb
push
aam
push
inc
mov
jmp
pop
push
into
push
and
push
lret
push
pop
push
jnp
pushf
cmp
in
insl
addr16
mov
loope
xorb
scas
clc
int
shlb
push
scas
dec
adc
add
cmp
das
mov
shl
jmp
insl
enter
pop
mov
push
jmp
add
mov
sbb
repz
dec
push
mov
sbb
shlb
cmpsl
jmp
loop
pop
jnp
int
insl
ret
loop
pop
mov
mov
pop
outsl
jmp
enter
push
sub
push
push
mov
stos
cmpsl
xor
jle
test
pop
inc
mov
stos
repnz
or
ss
xchg
inc
xchg
mov
adc
or
iret
xchg
insl
pop
add
mov
iret
sub
in
fbld
imul
dec
adc
iret
pop
push
cli
inc
dec
sbb
push
sbb
aas
jmp
mov
pop
fwait
pop
ja
mov
mov
sub
push
or
outsl
pop
pop
rcrb
adc
adc
lea
scas
mov
adc
adc
sti
xchg
pop
sbb
dec
idivl
roll
mov
es
xlat
fcomps
iret
das
sbb
lds
fnstsw
fbstp
sub
int3
pop
loop
cmp
push
cmp
or
jp
pop
xchg
xchg
sarb
cli
icebp
rcr
push
divb
sub
jno
lret
in
add
mov
adc
pop
push
adc
and
ss
inc
adc
mov
push
adc
jne
and
fnclex
push
and
rcll
cmpsl
sub
mov
sub
mov
push
dec
mov
addb
and
aas
js
sti
and
test
xchg
jecxz
cmp
inc
xchg
sbb
lds
sub
iret
ficoml
xor
das
shrl
mov
xchg
push
pop
std
jne
ljmp
ror
fwait
sbb
mov
and
pop
pop
rcrb
arpl
fsubl
cli
jge
mov
lret
shlb
aad
pop
out
add
jle
xchg
inc
shll
outsb
and
cmp
or
repnz
repz
mov
test
push
aam
push
fs
inc
imulb
out
cs
mov
les
flds
dec
pop
push
cmp
shrb
push
test
pop
fisubs
imul
jmp
or
xchg
and
pop
mov
js
lret
push
sahf
mov
inc
sbb
lock
pop
pop
mov
call
imul
orl
stos
lods
mov
pop
inc
xchg
dec
call
push
movsl
pop
xor
jnp
scas
mov
shl
fcoms
outsb
repnz
push
pop
stc
addr16
pop
lds
mov
xor
call
movb
mov
lds
fstpl
cli
repz
mov
sahf
jae
icebp
jle
lea
or
adc
test
std
and
cltd
gs
jge
not
and
mov
rorb
pop
rcr
cmp
pop
jb
into
ds
inc
mov
xchg
cmp
inc
xchg
int
dec
adcb
leave
xchg
dec
stos
xorb
pop
mov
inc
int3
fcoml
lahf
cmp
fdiv
or
or
jecxz
dec
add
sbb
sbb
or
mov
xchg
xchg
negb
ljmp
testl
pop
adc
movsl
push
mov
into
push
jo
mov
loop
notl
mov
xchg
and
add
int3
sbb
push
negl
and
into
sbbb
gs
int
xchg
ja
nop
xchg
sti
iret
fwait
scas
pop
js
lds
imul
cmp
mov
pop
mov
mov
jp
mov
jmp
or
popf
mov
inc
jge
push
lock
pop
mov
dec
jecxz
sti
scas
pop
push
lock
mov
xor
rclb
outsb
rolb
in
cli
pop
mov
xchg
mov
xlat
push
dec
dec
adc
jp
insl
push
aas
sahf
add
stc
in
mov
das
adcb
in
jle
lret
shl
popa
inc
cmp
mov
inc
mov
mov
repnz
movsl
loope
pop
mov
or
and
icebp
jne
mov
push
repz
dec
sub
sbb
ljmp
je
xor
push
jbe
sub
adc
jne
psubsb
push
pushl
sbb
mov
push
daa
inc
xchg
and
je
cmp
rcll
cmpsl
lret
nop
mov
mov
jle
out
orb
xor
mov
fsubrs
sbb
enter
push
inc
js
cmpsl
adc
sub
mov
ss
aas
pop
mov
fs
cmp
movsb
jmp
sti
lret
xor
mov
cmp
cmp
pop
xchg
push
mov
negl
sbb
in
pop
arpl
in
xchg
and
jno
jmp
mov
std
xor
xchg
push
inc
and
push
push
or
jmp
shr
cmp
jo
rcrb
mov
pop
mov
pop
jp
push
test
xchg
xchg
cwtl
adc
clc
in
scas
dec
stc
xor
push
jno
jne
cmp
insb
xor
test
or
aad
lods
pop
fists
push
sbb
rol
cmpb
cmp
call
or
in
test
lret
adc
in
punpckhbw
popl
int
xchg
rolb
push
pop
fnstenv
dec
loope
mov
repz
pop
xor
lret
dec
pop
sbb
xchg
sti
test
pop
test
data16
fisubl
int
push
mov
rcll
mov
or
xor
xchg
mov
fistps
sbbb
push
jne
ljmp
and
pusha
insb
es
leave
or
mov
mov
rorb
dec
cwtl
fcmovbe
ret
lret
sbb
jae
adc
into
jb
ljmp
aaa
int
sti
filds
test
jo
rcrb
push
mov
fcmovbe
mov
cmpsl
nop
and
xchg
cmp
call
sub
sbb
mov
dec
push
cmp
fdivrs
mov
fwait
rclb
jns
out
lcall
call
mov
adc
mov
lret
xchg
pusha
dec
int
and
test
push
fldcw
push
popf
pop
test
addr16
in
aam
bound
xchg
jmp
test
pop
loop
sarb
adc
or
lock
pop
fisttpl
mov
jmp
inc
jle
mov
cwtl
es
jge
jo
push
insl
or
jbe
jae
pop
js
outsl
inc
imul
testb
push
cmp
jmp
ret
push
or
orl
adc
lds
mov
ret
or
xor
sti
sbb
pop
mov
and
or
jne
std
jnp
push
imul
adc
cwtl
mov
push
lock
pop
loopne
aas
jo
sbb
out
push
sub
inc
loop
mov
addr16
in
mov
bound
push
mov
mov
jne
pop
lds
pushl
rcrl
inc
loope
ljmp
pusha
xchg
sub
adc
adc
inc
enter
jo
scas
inc
je
cwtl
gs
outsl
sub
jns
sub
imul
pop
cmp
int
bound
aas
sti
rcrl
into
mov
adc
cltd
clc
lock
test
je
jbe
in
jne
pop
pushl
pop
push
jb
and
andl
insl
lahf
hlt
xchg
push
sbb
jmp
out
xchg
test
jo
jns
sbb
sub
pop
add
xor
in
mov
fnsave
cwtl
rorb
mov
enter
jae
subb
or
xchg
jg
inc
dec
pop
dec
push
jae
outsb
cmp
sub
adc
push
imul
sub
maxps
call
push
cltd
scas
sub
mov
addb
cmovl
add
insb
pop
xor
imul
mov
mov
popf
sub
in
out
shr
mov
mov
cs
bound
aaa
jno
lds
cmp
lahf
mov
pop
adc
movsl
xor
fnsave
stos
mov
mov
cwtl
pop
orb
iret
ret
jne
fimuls
sub
cmp
pop
xchg
lcall
push
mov
sbb
fstl
add
xchg
xchg
bound
pop
es
pushf
scas
lea
mov
out
orl
cltd
fwait
mov
sbb
pop
lret
icebp
push
cmp
nop
push
push
adc
mov
stos
adc
push
adc
subb
sbb
sbb
sub
js
mov
dec
mov
dec
xor
test
push
outsb
popa
fistpl
leave
outsl
pop
arpl
inc
cmp
lahf
jl
xchg
and
iret
mov
push
test
mov
loopne
mov
pop
enter
sbb
daa
aad
movsl
xchg
lahf
and
mov
inc
jmp
and
dec
int3
jmp
xchg
mov
or
push
add
mov
mov
scas
jmp
js
sub
outsl
aad
and
imul
jmp
sub
pop
jne
mov
pop
pushf
dec
aad
cmpsl
xorb
pop
adc
mov
aaa
pop
and
xorb
push
dec
fldt
fisubrs
ds
add
ljmp
repz
xor
out
sub
aas
movsb
fwait
add
lds
adc
sar
sahf
fcomi
jge
and
loop
add
sbb
jno
and
lret
mov
push
or
outsl
jbe
push
jns
xchg
in
xor
outsl
int3
mov
aaa
jp
cwtl
shrb
mov
or
mov
pop
sarb
jp
jp
inc
dec
rclb
push
pop
push
xchg
dec
mov
mov
push
movsl
sub
jp
mov
dec
jl
mov
add
inc
mov
pop
xor
and
bound
rcrb
rorl
add
ret
gs
dec
rclb
xchg
mov
aas
sub
mov
pop
cmp
mov
push
cmp
insl
iret
clc
pop
cmpsl
jne
mov
or
lahf
cltd
inc
sbb
mov
call
test
jno
pusha
test
cwtl
mov
cmpsl
lds
iret
inc
addr16
scas
jbe
scas
les
call
inc
xchg
or
or
scas
xchg
dec
int
sarw
cmp
push
dec
push
adc
pushf
inc
cmc
jmp
or
int3
pop
xchg
in
loop
or
push
adc
dec
stc
mov
jle
das
repz
fs
add
or
shll
jg
xor
xor
bound
pop
out
mov
push
gs
mov
iret
test
int
hlt
jl
xor
mov
leave
or
cwtl
lcall
dec
mov
sub
push
scas
sbb
insb
call
mov
or
ds
sub
aas
lahf
out
push
lahf
sbb
inc
les
nop
or
pop
sbb
sahf
or
push
testl
lret
push
inc
das
jo
mov
jae
aas
dec
mov
mov
cmc
es
pop
outsb
pushf
enter
repnz
sbb
scas
insl
pop
lret
push
jbe
into
mov
dec
cmp
ret
and
adc
popa
or
and
inc
icebp
test
inc
sub
jno
push
inc
lea
out
aam
xchg
mov
ficoms
or
jle
push
scas
push
movsl
cmp
sti
dec
shll
pop
jno
stos
out
pop
ds
push
mov
push
fcmovnbe
add
in
lret
xchg
nop
fistpll
jo
mov
push
sub
mov
inc
push
add
ljmp
inc
jno
mov
jbe
sub
jo
jns
repz
mov
xchg
xchg
das
jbe
cmpsl
mov
dec
pushf
xchg
int3
and
mov
jbe
test
xchg
xchg
dec
out
mov
bound
adc
or
and
dec
loopne
pop
and
xchg
push
shlb
mov
inc
and
pop
xor
int
out
sbb
mov
mov
or
jmp
jns
movsl
int
jno
cmp
test
jmp
lock
mov
lods
mov
lock
mov
fisubl
and
xchg
ljmp
stos
lahf
xchg
test
mov
fsubrl
mov
inc
imull
cltd
xchg
insl
jle
sbbl
lahf
push
stos
sbb
pop
outsb
pop
mov
hlt
mov
fmuls
mov
mov
fimull
shl
subb
arpl
scas
and
outsb
mov
daa
fwait
mov
arpl
jns
mov
xchg
jnp
push
data16
ret
rcrl
insb
pop
lods
add
jmp
sub
push
xchg
gs
stc
jge
fwait
dec
inc
das
add
aam
mov
repz
adcb
xor
xor
mov
scas
dec
and
inc
dec
les
js
jno
mov
aaa
mov
test
push
mov
mov
data16
pop
sarb
inc
dec
dec
rclb
add
jp
nop
mov
jle
push
insb
mov
push
pop
scas
dec
pusha
je
lahf
xor
pop
pop
mov
iret
shlb
add
or
xchg
js
pop
push
fwait
pop
pop
lahf
mov
sbb
vunpcklpd
inc
mov
cmp
out
mov
std
nop
cmp
lret
pop
cltd
cld
jl
lret
popf
xchg
push
sti
mov
aaa
jle
cmpsb
jecxz
push
xchg
fildll
call
lahf
in
mov
sbb
cs
dec
and
jmp
inc
test
addb
bound
pop
xchg
mov
sbb
dec
mov
shrb
sub
popa
lret
push
push
outsl
adc
ret
andl
or
push
or
das
jb
mov
dec
leave
pushf
dec
add
cmp
mov
jo
fidivs
repz
fisubs
jbe
lahf
xchg
cld
scas
dec
mov
sti
pop
cmpsb
push
inc
and
gs
mov
jae
aas
pop
xor
pop
xchg
outsb
pop
in
sub
sti
xor
pop
push
inc
dec
push
sbb
add
pop
inc
dec
nop
int3
cmp
scas
pop
push
push
movsl
push
cmp
test
out
aas
dec
jne
pop
push
cs
popf
mov
test
push
movsl
popf
mov
loopne
cmp
sub
push
stc
sti
sub
stos
mov
repz
fyl2xp1
cmp
out
push
xchg
cwtl
sti
cmc
sti
adc
mov
sub
pop
ljmp
imul
or
clc
insl
inc
imul
movsb
lods
into
popa
push
test
mov
repz
push
jg
incl
mov
push
inc
rep
mov
pop
jg
fisttps
inc
pop
xchg
sbb
inc
mov
clc
and
dec
stos
mov
mov
shr
dec
sub
loope
arpl
outsl
cmp
loop
inc
mov
pop
mov
sbb
push
roll
xchg
dec
or
lods
sahf
push
cmc
mov
rorb
sub
imul
icebp
mov
lret
icebp
shll
test
negb
mov
aas
femms
jl
fimull
pop
ss
ja
out
iret
push
in
mov
out
sbb
adc
fdivr
sbb
inc
cmp
and
xchg
push
cs
dec
iret
cwtl
xor
mov
lea
xor
data16
out
and
push
loopne
cld
lods
cmpsl
sub
dec
cmp
loop
movsl
push
add
into
into
push
arpl
jmp
add
sbb
lret
mov
pop
stos
fdivrl
and
inc
cld
lret
push
jmp
cli
testb
lea
push
ret
mov
mov
push
or
pause
push
jg
mov
mov
sbb
test
test
lret
sub
push
scas
xchg
cli
inc
or
dec
mov
mov
inc
jg
pop
mov
push
mov
sub
mov
ret
cmp
cmp
nop
fldl
mov
leave
adc
xchg
lret
loop
scas
pop
lea
lret
sub
lret
leave
out
pop
loope
lret
xchg
jmp
mov
lret
in
mov
push
xlat
in
mov
cmp
mov
fidivl
lret
fists
pusha
test
lret
push
fs
notb
cmp
jmp
lret
push
mov
enter
mov
mov
lret
pop
mov
lret
add
push
dec
ret
loope
xchg
inc
mov
xor
xchg
flds
int
lret
mov
sub
sarb
dec
lea
repnz
inc
lds
lret
mov
into
lret
mov
mov
mov
testl
fimull
int3
lods
or
dec
sbb
push
dec
pop
mov
xchg
jae
lret
pushf
and
int3
aam
lret
dec
repnz
lret
stos
aas
xchg
popl
mov
loopne
js
in
jns
lret
or
push
cmp
int
lret
dec
xchg
js
lret
rcrb
stos
cmp
cwtl
cwtl
ror
adc
xchg
loope
daa
lret
int
xchg
enter
test
rclb
aam
loop
adc
fwait
sbb
out
mov
sbb
bound
dec
xchg
int3
stos
cmp
sti
ljmp
lret
lods
pop
test
gs
es
mov
shlb
mov
cmp
and
push
dec
lret
push
testb
icebp
cmp
lods
out
lock
add
sub
je
mov
xor
dec
and
jae
lcall
lret
lret
mov
orb
xchg
cmp
adcl
xlat
and
sub
jge
shrb
gs
ss
cltd
stc
sub
lret
cmp
mov
adc
sti
or
outsl
lret
cltd
data16
scas
lret
cmc
gs
shlb
stos
movl
mov
mov
xchg
lret
data16
xchg
lret
stos
jns
inc
dec
xchg
sbb
lret
les
adc
lret
repnz
and
pop
daa
out
cli
mov
push
mov
sbb
pop
cmp
or
hlt
leave
inc
xor
insl
sub
in
lret
clc
lds
sub
xor
out
cmp
fmul
mov
or
pop
dec
stos
push
cmp
je
ror
sarb
pop
lcall
lret
aas
testb
fwait
jae
out
inc
xor
add
lods
gs
dec
inc
inc
xor
ljmp
loopne
mov
push
sbb
fstpt
bound
test
dec
or
out
ror
mov
or
nop
stos
ficompl
inc
push
xchg
xor
arpl
add
aad
aad
mov
jecxz
xchg
mov
or
lods
loope
into
cmpsb
lret
pop
add
mov
sbb
pusha
lret
cmp
rcrl
lret
sti
imul
xor
jg
cmpsl
or
ljmpw
xor
cmp
jno
fwait
leave
fnstsw
lret
ja
stos
sub
xchg
cmpsl
cmp
cmp
lret
dec
xchg
add
mov
cwtl
movsl
int
cmc
sbb
fcomps
cmp
fistpl
icebp
popf
xlat
out
mov
push
mov
adc
xchg
add
inc
lret
lret
loop
push
mov
mov
mulb
lods
and
push
les
xorl
xchg
das
add
ja
mov
pop
and
pop
adc
mov
or
lret
rol
push
sub
pop
lret
jnp
data16
mov
repz
xor
cli
inc
push
adc
insb
lret
aaa
jmp
jne
in
lret
pop
inc
lcall
jle
shlb
push
shll
dec
xchg
pop
ret
lret
addr16
stos
shll
lret
lds
sub
fwait
jne
clc
xchg
xor
pop
in
lret
adc
mov
sub
push
mov
dec
in
lret
xchg
xchg
std
or
insl
sbb
pusha
pop
test
push
push
fiadds
mov
dec
mov
xchg
jnp
cmpsb
loopne
xchg
ds
lret
icebp
adc
mov
push
adc
cltd
add
sbb
dec
adc
lret
push
scas
into
or
repnz
sbb
cmp
sub
int
xor
pop
pushf
mov
scas
ror
sti
xchg
rcll
jp
lock
repz
ror
stos
sbb
sahf
out
and
jle
in
loope
lret
int
xlat
ljmp
call
mov
js
add
paddq
pop
test
inc
sbb
jae
lds
mov
outsl
push
pop
test
arpl
jecxz
negb
jbe
add
inc
into
mov
in
mov
fsubp
pop
fsubrs
mov
enter
repz
sub
add
jl
lret
dec
mov
pop
mov
fwait
mov
fldenv
into
mov
aaa
lret
repnz
jp
adc
gs
movb
push
mov
xlat
xchg
inc
or
pop
fldt
insl
lret
in
cmp
and
loop
inc
lret
fbld
xor
sbb
mov
rcll
nop
push
fs
add
lret
mov
ljmp
inc
cmp
int3
lods
xor
int3
dec
mov
xchg
add
ret
push
icebp
test
loope
lret
test
mov
cmp
jo
stc
shlb
jg
pop
mov
inc
cmc
mov
test
int
xchg
or
xchg
xchg
or
cwtl
dec
cltd
sbb
or
cmp
jl
or
into
jg
lret
call
out
pop
nop
or
andb
xor
das
cmpsb
shl
mov
xchg
and
inc
xor
inc
or
movsb
popa
xchg
shr
pop
cmp
inc
jl
pop
pusha
pushl
ret
inc
xor
testb
lods
inc
inc
int3
mov
mov
fisubl
call
stc
dec
inc
mov
jns
imull
xchg
mov
sub
sbb
fimull
fdivrs
xchg
pop
cmp
rclb
or
sbb
jmp
daa
cltd
push
into
js
data16
sbb
push
xor
repnz
aas
adc
arpl
outsb
std
mov
cmc
cli
popf
cwtl
adc
jg
push
push
cmp
sbb
jl
outsl
shlb
fistpll
repz
popa
push
cmp
or
int
jns
jmp
dec
inc
rclb
insb
pop
inc
pop
shll
mov
cmpsb
push
fsubs
push
mov
js
shl
mov
cmpsl
fists
insl
jge
xor
adc
mov
or
stos
fisubl
xchg
out
sbb
jp
cltd
mov
repz
jmp
and
mov
aaa
adc
fwait
inc
dec
jle
xchg
push
imul
int3
das
pop
jnp
outsb
add
lcall
push
popa
clc
jne
pushf
xchg
jg
adc
dec
jmp
movsb
dec
lret
jl
in
cmpb
sti
xchg
push
incl
pop
and
int3
scas
add
std
dec
mov
fxch
ljmp
mov
xlat
call
mov
arpl
rcr
or
and
mov
push
lret
ret
rolb
xchg
jle
stos
pop
adc
xchg
shl
fisubrs
adc
jl
push
dec
push
mov
movsb
lret
gs
sti
lret
cwtl
push
mov
and
sub
jmp
ret
jg
imul
xchg
std
sbb
jge
xchg
add
cmp
mov
hlt
scas
test
mov
cwtl
les
push
sbb
out
inc
inc
nop
mov
test
pop
adc
dec
popf
out
mov
xchg
pop
add
dec
inc
jo
andb
test
pop
pop
xchg
jno
and
adc
pushf
std
add
js
mov
in
fwait
xchg
cmp
pusha
inc
in
pop
stc
add
shlb
inc
ret
xor
roll
out
js
pop
scas
hlt
inc
jbe
xchg
fstpt
flds
jp
lock
sarl
dec
aaa
push
push
ret
ljmp
mov
cmp
mov
xchg
shlb
lcall
fs
pusha
ljmp
push
sbb
add
out
push
sbb
movsb
xchg
pop
xor
dec
jecxz
pop
inc
xlat
pusha
movsl
xor
push
ljmp
es
pop
mov
fldl
sbb
push
out
xor
int
js
paddd
pop
inc
mov
fcom
jl
dec
hlt
stc
fs
fidivs
push
mov
mov
ret
lcall
and
and
jg
pop
pop
mov
jmp
cmpsl
mov
cld
xor
push
mov
pop
dec
xlat
div
in
pop
rcrl
pop
mov
fsub
xchg
pop
lods
in
stos
mov
leave
jb
lcall
out
lock
cmp
fimuls
mov
imul
xchg
scas
inc
sbb
outsb
out
jae
cmc
popa
jp
pop
cltd
shrl
out
push
jg
popa
sahf
xorl
adc
inc
mov
push
pcmpgtb
pop
test
into
pop
mov
dec
lret
pop
ret
and
push
push
cmp
pop
out
jb
cmc
movsl
cmp
fcoms
int3
cli
mov
imul
inc
loop
jns
sahf
mov
aad
mov
add
mov
rcr
fmull
fucompp
cmc
jns
test
push
xor
add
fimull
xor
sarb
pop
sub
inc
adc
jno
int3
outsb
xchg
fisttpl
mov
mov
cmp
imul
lret
pop
push
dec
int
pop
aaa
or
push
mov
mov
or
pop
mov
mov
sarl
dec
push
out
pop
and
and
sbb
jb
mov
ds
test
jg
insb
mov
pop
sbb
xlat
push
mov
shlb
stc
xchg
lahf
mov
aas
jae
les
aam
xchg
pop
testb
push
jmp
fwait
int3
fs
push
mov
out
mov
adc
stos
sub
repnz
push
sarb
aad
rcrb
cltd
ljmp
and
movsl
inc
dec
sub
jle
cmpsb
xlat
in
adc
inc
fmuls
sbb
icebp
pop
test
fbstp
push
sub
mov
movsl
mov
mov
dec
jmp
mov
aad
or
loopne
cmp
in
pop
cltd
fsubr
insb
push
fdiv
aam
insl
bound
xchg
xchg
sbb
push
or
repnz
inc
add
arpl
outsb
orb
pushf
rcll
sbb
mov
cmp
mov
hlt
dec
int3
insl
jmp
out
mov
mov
jmp
cli
movsb
jns
out
fldcw
or
call
lock
rcr
ret
das
jle
jns
in
pushf
and
lods
cmpsb
xor
cmp
adc
insb
push
jo
jle
pushf
pop
push
pop
xor
pop
shlb
and
xor
sbb
mov
pop
adc
iret
push
dec
mov
lds
sub
xchg
or
rcll
mov
lret
jp
xor
into
es
cmp
lds
lret
or
adc
cmc
sbb
stos
cmp
fs
lret
out
or
mov
sub
mov
inc
or
or
ret
inc
rorb
or
cld
push
inc
and
xor
jge
mov
adc
adc
xor
into
in
lea
jmp
inc
insl
xchg
shlb
rcll
aam
lret
push
push
stos
insl
and
and
add
aaa
popf
lret
add
jno
das
push
stos
jge
outsl
lock
lret
rorb
loope
mov
jno
and
clc
call
fstpl
bound
jp
popl
adc
inc
xor
jo
movsb
push
or
pop
cmpsb
pop
inc
scas
cmpsl
pop
pop
daa
negb
sbb
mov
popa
add
sar
movsl
lret
mov
fsubl
bound
or
repz
jl
je
out
fcmovnu
or
outsb
sbb
dec
out
jle
cmc
cmp
mov
in
add
jl
outsl
or
cmp
fdivr
nop
and
jle
cmp
xchg
push
call
scas
aam
add
dec
mov
cs
int3
push
xor
sarb
cltd
or
sub
loop
push
xor
and
mov
xchg
jle
sub
mov
out
adc
mov
mov
and
cmpb
adc
push
sti
int
cmp
out
xchg
and
cwtl
xor
rorb
pop
jg
sbb
jl
inc
push
addr16
lahf
pop
xor
into
or
test
mov
and
xor
cmc
add
mov
aad
push
cmc
mov
cmpb
xor
loop
cli
dec
pop
hlt
bound
incb
sbb
xchg
lcall
push
loop
or
push
xor
mov
xor
jg
jo
push
mov
dec
lahf
pop
outsl
lret
les
xor
cs
xchg
in
jmp
jne
push
aas
roll
sub
push
imul
js
lods
mov
dec
outsl
icebp
out
push
lret
roll
decl
mov
ss
scas
scas
and
jmp
cmp
int3
fisubrl
sbb
pop
cmp
sti
and
and
mov
rorb
push
adc
fnstsw
mov
clc
push
stos
sub
and
mov
mov
add
mov
dec
fnstcw
sbb
cmp
stos
push
lods
andb
xchg
sbbl
push
stos
fimull
jo
add
push
xchg
iret
pop
aaa
jge
push
sti
mov
test
pop
xchg
sarl
cwtl
mov
or
dec
cmp
inc
jmp
in
add
mov
mov
das
add
insb
aaa
pop
inc
scas
insl
dec
out
xor
push
fldt
inc
outsb
or
cmpsb
test
jg
insb
and
into
and
mov
test
imul
lea
xchg
push
pop
data16
sbb
sub
pushf
mov
cmpl
sbb
out
mov
xor
dec
pop
inc
mulb
jp
popa
inc
stc
and
mov
lea
jmp
mov
bnd
xchg
rolb
lret
push
xchg
add
dec
dec
xor
lahf
push
sub
movsl
jae
sti
push
arpl
lods
or
test
mov
jbe
sbb
jg
aad
dec
shlb
dec
scas
pop
cmp
rcrl
out
imul
jp
pushl
xor
dec
insb
pop
int3
add
sbb
mov
xchg
rcr
xchg
mov
fidivrs
xchg
stos
fs
sbb
inc
imul
jno
out
leave
ss
shl
mov
sub
mov
bound
roll
dec
je
and
jle
cmp
inc
je
push
mov
sbbb
fwait
cmp
pushl
xchg
push
mov
mov
jo
fbstp
jp
decl
mov
ss
sbb
daa
das
pop
adc
inc
or
ja
int
inc
stc
daa
xor
outsl
pushf
pop
sbb
push
arpl
push
frstor
dec
mov
cltd
rclw
fwait
sub
fistps
mull
xchg
sub
pusha
jb
inc
shlb
mov
shrb
jg
push
adc
ljmp
dec
stos
adc
rcrl
mov
mov
and
mov
push
pop
xchg
int
scas
fcmovnb
loope
xor
imul
aas
mov
mov
and
xor
repz
and
mov
pop
xor
mov
pop
xchg
out
roll
adc
je
aas
pushl
push
aas
mov
pop
jne
movsl
inc
jnp
sub
sub
ss
insl
lahf
cmpps
and
push
mov
jne
sub
push
out
sarb
push
out
xchg
ss
pop
push
lret
aas
push
mov
inc
loope
and
dec
decb
cs
and
pop
push
fldt
pop
inc
dec
mov
sub
pop
mov
push
and
or
mov
repnz
pushf
aas
inc
leave
jecxz
fisubrs
pushl
dec
mov
inc
pushf
dec
xor
outsl
mov
dec
gs
adc
push
lods
push
ss
mov
pop
lock
push
dec
out
int
pop
scas
ljmp
inc
sbb
xor
into
dec
aaa
add
mov
mov
pop
inc
push
sbb
mov
scas
and
test
mov
inc
push
je
inc
jmp
test
add
push
push
push
mov
push
rclb
insb
cmp
insb
outsl
xor
rorb
push
cmp
mov
ljmp
sbb
clc
push
aam
push
filds
lock
add
ja
pop
xor
mov
jle
pop
inc
xor
iret
push
jp
pop
pop
jns
shrl
inc
push
testl
dec
mov
push
add
jecxz
pop
adcb
jp
jo
stos
push
scas
inc
push
cmp
pop
push
nop
mov
pop
xchg
imul
mov
das
adc
mov
dec
or
push
or
push
mov
cmpsl
insl
fs
push
outsb
add
insl
inc
xchg
dec
insl
aaa
out
jo
dec
or
mov
sbb
call
faddl
rolb
mov
lcall
sti
cld
xor
and
sbb
loope
mov
or
sbb
cmp
stos
aam
or
lock
cmp
xor
into
dec
out
icebp
or
and
jae
pop
pop
jno
cmp
stc
xchg
ljmp
call
scas
loop
push
jge
inc
inc
insb
test
repz
push
or
int
jle
testb
data16
mov
lret
das
leave
xor
mul
orb
fwait
and
outsb
jne
insl
and
cltd
sbbb
das
cli
notb
outsb
dec
add
icebp
push
mov
bound
adc
pop
rcrb
sarb
fistps
lret
push
pop
jp
sti
cmpb
insb
mov
ficoml
inc
test
sub
dec
sub
sbb
cmp
jmp
or
add
pop
add
push
jle
mov
and
cmpsl
dec
xor
pop
test
outsl
adc
sub
adc
pop
ret
adc
cmc
cltd
fsubp
jl
jmp
das
push
mov
pand
fistpll
sbb
fidivl
dec
add
jmp
pop
xchg
jg
loopne
movsb
push
cltd
outsb
pusha
pop
clc
push
in
jmp
mov
push
repz
les
hlt
in
sbb
mov
nop
ljmp
and
call
out
dec
cmp
aaa
imul
cmp
push
jg
enter
adc
mov
add
xchg
shl
shr
mov
movsl
cltd
sbb
and
rcll
cmp
hlt
loope
jmp
out
notl
push
adcb
cmp
xor
and
daa
xchg
pusha
int
jge
sbb
test
jmp
add
mov
out
fxch
in
push
sti
stc
mov
bound
push
jbe
sub
xchg
dec
shrl
loopne
inc
dec
push
xchg
nop
popf
je
divl
cmp
xchg
pop
bnd
pop
jae
mov
xchg
and
ret
dec
imul
inc
pop
jp
add
fists
int
sub
mov
dec
xor
push
rcr
and
inc
mov
mov
andb
or
hlt
shl
hlt
pop
and
mov
jne
inc
pop
mov
and
orl
pop
push
iret
dec
fadds
cld
ror
gs
out
xchg
or
cli
pop
jecxz
and
out
xlat
push
mov
cmp
mov
or
cs
adc
fistpl
std
popa
lret
pop
cltd
push
out
out
inc
pop
mul
add
loope
into
xor
xchg
cmpsl
mov
loopne
pop
xor
mov
and
hlt
aas
adc
xchg
lcall
dec
mov
push
mov
aas
insl
leave
rol
push
clc
push
lods
idivb
push
xor
fdivrl
push
shrb
jecxz
jb
loope
cmp
cmp
rcr
xor
hlt
add
jnp
pmovmskb
sbb
stc
xchg
jmp
mov
es
sti
pop
mov
pop
test
mov
cmc
cmp
sbb
dec
fldcw
test
stos
mov
aad
dec
movnti
mov
mov
jbe
cs
lods
push
ljmp
inc
scas
dec
out
pop
push
scas
int3
jb
mov
push
xchg
mov
cli
mov
push
mov
mov
jp
adc
daa
movsl
jo
lret
xchg
fidivrl
inc
xor
xchg
aaa
xor
test
in
les
mov
sbb
pop
loop
adc
inc
int
aas
mov
fsubrl
insb
ljmp
clc
pop
mov
clc
repz
cmpsl
hlt
mov
scas
lock
shrb
fbld
pop
in
cmp
jmp
jp
aaa
mov
stos
xchg
mov
cltd
psubsb
int3
mulb
inc
jbe
cmp
sar
arpl
loop
pop
xlat
cltd
mov
daa
mov
rcll
shll
push
call
outsl
mov
cmp
repz
test
pop
negl
adc
jno
dec
lds
xor
dec
iret
add
push
fisubrl
bound
sub
add
aaa
xor
jbe
das
jae
imul
push
add
jg
jae
inc
adc
cmp
cmc
stos
roll
inc
jmp
pop
mov
pop
sub
mov
sbb
jnp
fwait
cld
lea
stc
rcrl
or
cmovp
sarb
loopne
adc
ja
mov
insl
jmp
mov
pop
push
bound
popf
or
pop
scas
or
sub
loopne
test
jle
lahf
pop
outsb
mov
fcompl
inc
pop
pop
adc
pop
aad
popa
shl
in
pop
imul
vmovq
dec
inc
clc
cmp
call
cmp
lret
xor
inc
popa
cmp
cltd
jno
lea
test
std
in
mov
mov
outsl
mov
cs
cmp
push
cli
pop
scas
mov
sti
pop
in
js
outsl
cmovne
or
add
scas
adc
pop
mov
push
int3
xlat
mov
push
sbb
aas
cmpsl
push
adc
xor
sub
jge
cltd
repz
clc
jmp
js
adc
pop
sbbb
add
shlb
cltd
imul
movsl
dec
and
or
lea
mov
cli
push
in
push
jno
inc
push
mov
andl
loop
shrb
lods
testb
scas
and
mov
insb
mov
sarb
adc
in
cmpsl
pop
cmp
mov
sbb
push
xrelease
loop
xchg
mov
mov
or
pop
pop
inc
gs
push
inc
mov
jae
cmp
leave
mulps
sbb
inc
in
adc
cmp
mov
and
lods
bound
sbb
cmpsb
ljmp
mov
cmpb
xor
dec
es
aad
sarb
mov
sub
xchg
out
pop
pop
mov
lret
fld
and
xchg
jge
sti
iret
mov
pop
fiaddl
lahf
push
adc
and
sbbl
lock
mov
scas
cs
frstor
call
in
jns
push
inc
xchg
sub
dec
rorb
mov
dec
cmpsl
dec
loopne
pop
cld
push
stos
xchg
pushf
push
mov
mov
cmc
push
mov
loopne
cltd
and
ds
sub
sbb
iret
jo
mov
leave
inc
inc
add
jae
outsl
scas
negl
cmova
sbb
jp
fists
shl
push
les
in
dec
cwtl
sbb
or
jmp
push
mov
or
sbb
adc
pop
sub
nop
test
lret
insb
sbb
dec
cltd
push
pop
push
aas
pop
dec
mov
ja
ds
cmp
fs
pusha
and
dec
insb
std
icebp
out
scas
fidivl
testl
sub
ror
xor
into
data16
imul
movsl
cmpsl
or
aad
add
dec
popa
adc
inc
test
cs
add
enter
repnz
fcmovnbe
stos
outsb
js
shrb
pushf
or
pop
clc
and
push
sbbb
lret
jge
dec
cmpsl
leave
jg
pusha
mov
jp
xor
inc
lret
xchg
inc
insl
mov
lret
stos
es
loop
dec
inc
movsl
lret
mov
jle
add
ficoml
lds
jp
mov
shll
add
sbb
xchg
cmp
mov
sahf
sub
stos
mov
mov
push
ljmp
sub
fmull
cmp
popa
incl
lret
xor
cs
mov
scas
mov
push
inc
mov
jne
dec
enter
mov
dec
in
jo
ljmp
add
incb
lock
push
xchg
pop
ds
cmp
cmp
aas
inc
loope
sbb
push
fdivl
lret
outsl
pop
jb
insb
add
stos
sub
aam
and
xor
loopne
push
inc
pop
pop
xor
push
push
adc
outsb
inc
repz
jnp
ret
adc
mov
add
popf
das
leave
xchg
shlb
sub
xor
mov
mov
ficoms
cmp
add
lret
loopne
lods
lret
cmpsl
fists
inc
jmp
ficoml
bnd
xor
lret
cmpl
sahf
mov
daa
je
xchg
ror
imul
stos
mov
in
lret
xchg
xchg
jl
sub
jns
lret
push
aaa
out
hlt
xor
lret
in
gs
add
int
fs
and
cmp
lret
cmp
fbld
jb
std
aam
mov
popa
movsl
fiaddl
lods
pop
xchg
negl
lea
fwait
aas
xor
cmp
repz
testb
add
dec
test
lret
aaa
sbb
lret
lret
outsl
xchg
add
scas
jne
push
adc
repnz
fcomip
inc
cmp
rclb
bound
sub
ficoml
mov
lret
loopne
das
pop
push
ror
adc
jne
cmp
shlb
pop
stos
lret
fcoms
jae
cmp
cli
insb
mov
cmp
dec
jle
push
dec
fildll
or
inc
test
push
lret
xchg
pop
jle
dec
lret
stc
test
fidivrl
push
cmp
nop
pop
lret
jns
lods
push
test
lea
lret
sbb
jnp
inc
stos
sub
cmc
dec
es
pop
cmp
jl
int3
mov
inc
pop
mov
movsb
mov
mov
xor
or
xor
int
mov
shl
aam
jb
test
mov
cmp
inc
cwtl
xor
and
inc
sarb
xchg
mov
dec
add
and
std
sahf
xchg
sbb
jo
mov
stos
mov
pushf
sahf
lds
pop
pop
pushf
push
out
imul
outsb
pop
in
adc
fldl
sbb
fwait
and
aas
or
sbb
jo
and
cvtps2pd
mov
insl
mov
aam
outsb
mov
push
ljmp
cli
dec
in
pop
imul
cmp
mov
lods
ss
shll
dec
adc
jg
mov
and
movsl
stc
les
dec
jl
repz
sub
pop
call
stos
and
cli
xchg
aas
inc
jbe
sbb
mov
mov
int3
mov
add
lret
mov
lds
adc
dec
into
pop
rorb
lods
testl
cli
mov
or
lock
stos
push
jg
call
enter
les
cmp
pop
mov
cli
out
into
xor
push
outsl
scas
aam
repnz
movsb
cmp
andb
jmp
pop
pop
sbb
inc
xchg
out
mov
xor
push
adc
mov
aad
addb
cmp
sub
pop
xchg
or
iret
into
xor
jl
arpl
or
pop
fnstenv
orb
push
mov
pop
sbb
insl
fmul
or
ljmp
sub
loop
mov
inc
jns
js
jmp
push
int3
das
js
stc
lret
rorl
cmp
lret
mov
in
rcrb
rorb
repnz
and
or
lds
push
repz
sub
orb
add
mov
jmp
test
inc
sub
daa
mov
mov
aad
mov
bound
popf
dec
and
xchg
mov
jns
dec
lods
sbb
push
fimuls
jmp
loope
mov
stos
rclb
mov
shll
cmp
aam
ljmp
adc
notl
dec
ds
pop
lret
test
cmp
xchg
push
xor
jbe
xchg
cwtl
mov
and
push
adc
aad
xchg
xor
ljmp
in
int3
sahf
xlat
mov
mov
cmpsb
ret
mov
or
push
scas
int
mov
ljmp
outsl
adc
scas
pop
sub
cmp
xor
cmc
scas
xchg
je
stc
or
push
fs
test
lods
dec
das
mov
out
les
pop
imul
clc
sbb
movsl
pop
nop
fidivrs
xor
mov
xchg
pop
dec
pop
mov
sbb
xor
or
fsubrl
outsl
sar
pop
jge
push
ret
dec
out
or
mov
test
jle
js
shll
test
mov
sbb
sub
xchg
sub
inc
inc
mov
bound
in
mov
push
xchg
call
mov
cmp
gs
test
scas
mov
sti
or
add
pop
insb
dec
aas
mov
es
mov
les
or
jp
and
int3
add
lock
mov
repz
sarb
or
in
bound
flds
mov
mov
push
rorb
fiaddl
movsb
mov
inc
das
test
outsl
clc
das
adc
clc
outsl
test
lret
sbb
and
lods
test
ljmp
mov
out
data16
inc
push
cmpsl
lret
cmp
mov
jb
repnz
xchg
mov
into
cwtl
cld
lcall
ret
or
aad
jno
xchg
mul
shl
fsubrl
fdivs
insb
lret
repnz
mov
mov
and
pop
push
fwait
lds
sbb
test
shrl
and
add
mov
cmp
inc
xchg
popf
sbbb
sub
mov
insb
adc
popf
mov
mov
repnz
and
subl
mov
xor
repnz
xor
int
mov
xchg
jnp
lret
xchg
out
dec
mov
mov
jmp
push
ficompl
aad
jg
mov
cmpsb
in
insb
hlt
sub
cmc
enter
sar
sbb
mov
add
arpl
enter
and
ds
jbe
xorl
jne
mov
pop
push
xor
push
subl
leave
int3
popf
and
movsb
mov
adc
or
inc
mov
pop
in
test
xchg
call
sarl
add
xchg
sbb
sti
int3
std
push
pop
and
popa
pop
imul
mov
cmp
sbb
fistps
inc
call
out
pop
and
xchg
and
js
mov
sahf
roll
cwtl
lods
jns
and
in
inc
mov
xor
jl
mov
or
mov
pop
sbb
es
cmc
pop
aas
insl
mov
lret
cmp
fadd
adc
repz
cs
push
lea
iret
mov
pop
mov
or
jns
pop
dec
shrl
pusha
dec
push
push
fs
cmp
sub
repz
jae
pop
bound
mov
sub
sbb
sbb
cwtl
lods
jno
mov
xor
das
jle
cmpsl
shr
mov
ficoml
sarb
leave
sbb
push
jno
mov
lret
inc
jge
int
inc
push
lahf
jns
mov
push
fstl
stos
pop
xor
mov
shrb
jmp
mov
gs
xlat
popa
jae
inc
push
sbb
fildll
imull
scas
mov
mov
xor
sbb
xchg
iret
jmp
cmp
dec
ret
and
mov
jl
adc
pop
fdivrl
daa
adcl
cmp
sbb
cmc
jl
cmc
sub
and
sbb
mov
daa
out
push
or
xor
mov
add
leave
jae
or
adc
sbb
inc
or
popa
fcoms
dec
jae
dec
adc
aad
jl
xchg
sbb
dec
rol
mov
jp
aad
rcrl
and
fidivl
mov
pop
lods
dec
addr16
repz
test
sub
or
addl
xchg
mov
push
mov
mov
data16
jle
in
cli
filds
sbb
mov
dec
movntq
mov
inc
lret
std
mov
lret
loope
cwtl
ror
pop
mov
dec
mov
cmp
cmp
inc
jbe
es
or
mov
jp
dec
mov
lret
jo
je
push
insb
lret
inc
sbb
cmp
push
out
or
push
imul
cs
sub
pop
lock
cmp
pop
or
and
movsb
aam
sbb
adc
mov
mov
xchg
inc
lret
aas
xchg
sahf
add
lret
outsb
sbb
insb
adc
xor
fldenv
jmp
inc
lret
scas
dec
outsl
out
lods
add
pop
cmp
add
aam
stos
mov
cmpsl
lret
or
ret
and
jb
xor
imull
bound
mov
test
cmp
aam
pop
fnstcw
pop
adc
popa
mov
dec
xchg
lods
xor
je
shlb
mov
es
mov
dec
cmpsb
add
arpl
sub
movsl
call
enter
dec
jno
adc
lret
lds
pop
jb
push
sbb
jno
adcl
aas
cmp
movsl
push
in
lret
push
das
mov
sub
cmp
ror
in
push
or
jb
ds
push
repz
lret
or
scas
mov
adc
into
lret
or
mov
adc
cmp
stos
fidivrl
push
nop
pop
cmc
dec
lret
outsl
iret
arpl
sti
pop
lret
hlt
sub
js
popf
jmp
lret
pusha
aas
sbb
test
mov
stos
jmp
rol
into
lcall
cmc
das
test
mov
jle
repnz
bound
cmp
mov
stc
lret
lods
mov
les
sbb
xchg
push
lret
adc
clc
xor
aad
arpl
pushf
call
lret
jo
clc
ljmp
mov
xchg
into
int3
imul
lret
inc
loop
push
test
sbb
je
push
cwtl
xlat
fwait
jo
in
add
and
cmpsl
push
mov
es
cld
mov
cmp
stos
fistl
aad
adc
cs
je
xor
aaa
lret
adc
dec
jno
or
movb
mov
xchg
cs
mul
mov
cmp
nop
add
cld
jmp
mov
jno
sbb
pop
fsubrs
filds
mov
shrl
in
mov
and
jle
int3
xchg
outsb
imul
lahf
pop
mov
dec
inc
sarb
cmpsb
lret
loop
push
shrl
cld
into
mov
or
sub
mov
lret
popl
daa
push
or
push
inc
lret
and
fimull
test
cmp
pop
adc
push
inc
js
jmp
mov
pushf
insl
add
sbb
popa
fsubl
cmp
ds
loop
xor
movsb
mov
pop
icebp
fwait
shlb
das
lret
push
jp
xchg
fwait
das
mov
mov
out
nop
jl
sarl
lret
xor
bound
jae
fists
cltd
adcl
fisubrl
icebp
imul
jnp
mov
mov
ret
xchg
lret
push
xchg
std
into
aaa
jg
fisubl
adc
jg,pt
roll
xchg
addl
rcrb
push
push
inc
sub
imul
jnp
mov
mov
and
push
mov
ja
scas
scas
fcomi
sbb
sarl
shlb
iret
aaa
pop
xor
lret
push
pop
dec
jle
out
cmpsl
lahf
sub
jmp
nop
or
sub
mov
cmp
out
pop
or
and
mov
adc
call
cmpb
cmp
xlat
mov
dec
lahf
dec
push
ffreep
ss
movsb
repnz
lods
data16
sbb
cmp
imulb
pop
dec
aas
push
pop
pop
xchg
int
or
adc
add
or
into
js
inc
pop
or
jle
pop
mov
fsubr
cmp
mov
repnz
insl
imul
nop
dec
int3
mov
add
imul
and
loop
movsb
loopne
mov
repz
xchg
pcmpgtw
pop
into
xchg
xor
dec
dec
scas
push
lret
mov
int3
mov
andb
rclb
add
test
movsb
mov
in
lods
mov
inc
adc
jmp
mov
repz
out
lea
scas
xor
mov
adc
push
ljmp
fists
xor
insl
mov
dec
sbb
mov
ljmp
fdivrs
xor
xorl
aad
lret
in
lea
mov
ja
cmpb
out
pop
mov
xchg
mov
jecxz
bound
lea
inc
lret
mov
pop
lret
cwtl
rcll
movsl
mov
add
int3
movsb
push
nop
aam
rol
add
adc
lock
inc
fmul
movsb
in
enter
xchg
cs
pushf
mov
add
sbb
fwait
jns
or
push
or
repz
fldenv
int3
push
ja
repnz
fsts
cmp
add
out
fbstp
loop
push
pop
rcrl
push
js
mov
sub
aad
cmp
in
movsb
fs
mov
push
fcmove
mov
aaa
push
push
push
out
pop
lret
add
xchg
add
into
add
fsubrp
mov
sub
inc
jge
sbb
mov
push
sub
or
or
or
pushf
lods
and
fadds
loope
into
ret
or
adc
jg
xor
xchg
cmp
jp
pop
sub
shr
loop
pop
into
lret
push
mov
sbb
jmp
je
push
lret
and
cmpsl
fmull
dec
mov
popf
lock
scas
jle
jno
xchg
ljmp
fadds
dec
sti
pop
sarb
pop
push
inc
xor
cwtl
sbb
pop
lret
data16
ljmp
dec
push
jg
add
and
cwtl
mov
insb
cmp
stos
dec
fwait
dec
call
negl
lret
push
xchg
cld
pop
in
lret
add
and
push
jge
es
mov
dec
sub
loope
cmp
or
and
xchg
rcl
or
test
cmp
dec
add
mov
lcall
int3
jge
dec
std
mov
fwait
loope
xor
rcll
lret
aaa
mov
rorl
adc
mov
lret
clc
out
lahf
adc
cmp
cmp
xchg
inc
repz
cmp
push
and
test
xor
mov
cs
add
push
ljmp
xchg
lcall
or
push
adc
in
rcll
test
jp
notl
rolb
lret
xchg
flds
jecxz
outsl
pushf
hlt
and
jp
pop
fwait
mov
in
dec
sbb
dec
sbb
xchg
cli
or
and
pop
lret
cmp
and
loope
xchg
xchg
int3
std
mov
lret
cmp
ljmp
into
mov
aam
lret
or
in
dec
and
push
sub
jno
cwtl
inc
mov
mov
call
pop
sti
in
stos
sub
out
mov
lret
push
adc
mov
hlt
xor
push
lret
push
xchg
xchg
cmp
int
jns
rorb
lret
sbb
sbb
mov
les
outsl
idivl
xchg
shlb
or
adc
pop
lret
dec
mov
fidivrl
jnp
call
dec
popf
lahf
int
cwtl
sub
lret
mov
xor
pop
push
int3
sbb
lret
and
pop
push
lret
dec
xchg
jl
xor
lret
mov
xchg
and
inc
lods
xchg
sub
lret
test
lret
push
jl
jp
out
mov
mov
xchg
lods
inc
sub
rcl
xchg
stc
pushf
cwtl
cmp
jbe
fistps
jge
sub
pop
test
jno
cli
mov
adc
jecxz
and
sbb
stc
ficoms
mov
aas
lods
and
lret
pop
mov
rclb
into
outsb
lds
int3
fwait
add
xchg
xchg
daa
in
sbb
lret
cmp
cmp
mov
or
jge
shlb
or
fcmovbe
xchg
or
test
xchg
lret
sub
mov
mov
push
lret
test
out
fstpl
sarb
cltd
mov
cmp
mov
cmpsl
xlat
mov
lret
pop
jge
in
or
push
cmp
dec
mov
jnp
insl
lret
sub
int
mov
adc
arpl
cwtl
push
out
sbb
jecxz
inc
or
call
into
aaa
sbb
xor
shl
shlb
aad
lods
lret
and
mov
fmuls
rcl
cltd
cld
clc
movsb
out
pop
jns
lret
pusha
push
mov
add
mov
ja
sbb
xor
sub
cld
pushf
mov
pop
cmc
lods
sbb
orb
mov
faddl
hlt
mov
jno
imul
fstps
xchg
addr16
decl
adc
aam
outsb
pop
imul
cmp
jecxz
sbb
test
lret
xchg
mov
lret
sti
jge
push
bound
cmp
mov
fimuls
shrl
ret
adc
jge
dec
cmp
mov
in
pusha
pop
cmp
sahf
out
sub
and
sub
jb
ss
xchg
adc
cltd
notb
fcoml
lret
dec
aas
sub
mov
inc
push
mov
ret
inc
cld
insb
fimull
and
hlt
hlt
iret
enter
adc
mov
jne
lret
cmp
insb
pop
xor
cmp
jecxz
insl
loopne
inc
arpl
test
xor
dec
lret
mov
outsl
bound
push
inc
and
xchg
test
inc
lret
aad
pop
sbb
mov
xor
mov
cmp
add
insb
and
xor
or
stos
push
es
lcall
lret
scas
ret
cmp
sub
out
hlt
test
int3
in
lds
adcl
je
aam
leave
icebp
mov
call
lahf
lret
adc
dec
and
sbb
aas
inc
dec
or
lret
push
dec
cltd
cmp
lret
insb
jb
dec
mov
int3
in
popf
mov
lret
je
movsl
insl
lret
push
pop
ss
cmp
sub
call
adc
push
lret
fcmovne
es
ss
dec
sub
in
test
xchg
ret
lahf
cmp
fcmovu
cmp
mov
fsts
lret
loopne
loop
inc
mov
sub
cli
cmp
insb
mov
jl
push
daa
pop
dec
fiadds
aas
lret
mov
or
out
sbb
test
jg
iret
jmp
shlb
aad
scas
cmp
hlt
int
rclb
add
faddp
push
push
jmp
icebp
add
sbb
jbe
jle
mov
xchg
fmul
push
dec
pop
mov
std
jae
cltd
pop
icebp
lret
push
xchg
repz
pop
test
dec
addr16
stos
inc
lret
out
and
xchg
jg
adc
adc
mov
mov
inc
jl
ror
cmp
sbb
adc
lret
push
xchg
loope
adc
lret
inc
cmpl
fidivrs
push
xchg
dec
lret
popa
jne
fimull
jmp
jmp
push
mov
or
sti
inc
mov
ljmp
into
das
ror
xchg
jmp
mov
pop
jne
rclb
cltd
inc
in
movsl
mov
mov
stos
jmp
or
mov
inc
pop
daa
push
lret
shl
or
and
dec
rcll
loopne
cmp
fistps
das
in
lret
pushf
inc
insb
sub
mov
int3
and
in
pop
lret
xchg
dec
jne
push
aad
xchg
push
jno
lret
leave
sbb
popf
cmc
or
sub
loop
xor
jecxz
cmp
aam
xchg
sub
xchg
ljmp
loopne
cs
mov
fildll
into
pop
stos
add
push
lret
and
jns
xchg
jb
gs
add
fdivs
or
push
lret
rorb
lret
mov
imul
lret
shlb
lret
test
lret
mov
out
dec
cs
lret
mov
das
mov
mov
aad
js
aam
or
icebp
inc
mov
or
sarl
std
sub
lret
mov
pop
gs
inc
add
fisubrl
test
test
aam
rorb
mov
repz
enter
or
and
xor
inc
lret
std
scas
mov
xor
cmpsl
jge
stos
popf
push
cli
or
test
push
fisubl
adc
xchg
aam
pop
shll
sub
and
jne
roll
cwtl
jb
xlat
out
call
iret
cmp
jo
test
pop
dec
push
push
sbb
mov
fistpll
jo
inc
push
bnd
inc
inc
dec
loopne
sub
leave
xchg
sub
sarl
outsl
xorb
outsb
cli
or
jecxz
dec
insb
jne
repz
leave
adc
movsl
cmpsl
das
adc
insb
pop
jb
dec
sahf
push
xchg
push
push
adc
scas
cwtl
mov
mov
pop
xlat
arpl
in
dec
test
pop
lret
mov
xor
pop
arpl
mov
or
sbbl
loop
and
jno
lcall
sti
mov
jmp
sub
mov
cld
ret
rclb
mov
in
sbb
int3
stc
test
sbbb
test
mov
pop
dec
and
inc
cmpsl
mov
jp
pop
push
adc
jmp
ret
xchg
stc
loope
iret
test
lret
out
xchg
push
pop
push
enter
out
jno
jp
sbb
test
cmpsb
fsubs
inc
into
movaps
mov
notb
lret
mov
jns
enter
inc
push
fmull
adc
pop
push
pop
add
dec
js
and
sti
xchg
jmp
mov
mov
cmp
mov
inc
scas
mov
pop
add
sub
fdivr
dec
inc
lods
movsl
js
push
xor
inc
testl
pop
pop
out
fldcw
mov
xchg
mov
mov
or
jmp
dec
cld
xor
data16
aaa
or
scas
push
rcrb
mov
leave
and
fs
pop
sbb
outsl
mov
dec
mov
mul
jp
into
inc
or
push
jg
test
insb
fimull
jne
ss
mov
adc
mov
insb
mov
inc
dec
mov
int3
sub
clc
push
sbb
loope
cmp
clc
bound
jl
and
or
jns
or
int
and
stos
lds
push
dec
mov
mov
loopne
subl
out
aam
pop
xchg
dec
mov
scas
cwtl
mov
pop
scas
pop
icebp
adc
ja
shrl
daa
lret
pop
outsl
pop
jecxz
jbe
or
and
pusha
and
pop
xchg
pop
rorl
xchg
cs
push
inc
jp
daa
jb
sbb
adc
inc
mov
pop
xchg
fists
inc
jp
sbb
push
popa
sti
dec
xor
cmp
pop
inc
aas
add
sub
pop
adc
idiv
notb
shlb
mov
mov
mov
cmpsb
jp
pop
mov
sub
cmp
bound
mov
fdivrs
dec
sti
xchg
test
pop
sbb
pop
stos
sbb
jmp
push
or
cli
and
lret
cmpsl
push
jg
scas
xor
mov
ds
xchg
lret
rorl
pop
mov
repnz
stc
cmp
push
aam
gs
adcl
pop
mov
int3
sbb
pop
inc
iret
cmp
lahf
rcl
and
stc
movsb
pop
test
fisubs
and
cmp
loop
aas
fidivrs
or
imul
push
popa
add
mov
sub
xor
dec
pusha
je
inc
push
sub
outsl
dec
xchg
dec
inc
mov
fs
out
xor
adc
add
mov
inc
outsl
pop
loop
and
int
inc
sub
pop
dec
pop
xor
sub
or
mov
fcmovnbe
inc
xchg
into
outsb
push
pop
xor
cmp
adc
push
imul
add
push
push
and
jb
fisubrl
mov
xor
enter
dec
push
or
xchg
gs
bound
sub
subps
std
mov
push
icebp
mov
fisttpl
cli
stc
outsb
sbb
sub
mov
mov
push
cmc
into
ss
or
pop
mov
adc
shrl
lds
xor
popf
repz
sbb
jp
arpl
push
and
mov
pushf
or
lods
test
lds
ss
xchg
mov
ja
jb
data16
int
in
pop
and
adcl
and
jle
push
je
rorb
mov
pop
mov
cltd
and
xorb
sarb
addb
jnp
xchg
push
jno
sbb
sbb
sbb
out
jo
clc
pop
jp
jae
dec
fcomip
outsl
and
xchg
xchg
and
outsb
dec
mov
and
jae
cmp
out
lret
fdivrs
xor
repnz
lea
iret
push
pop
aad
cvtps2pi
inc
dec
push
dec
cmpsl
mov
pop
fldcw
ljmp
push
imul
shrb
ret
dec
mov
notb
enter
dec
mov
mov
xchg
dec
mov
pop
mov
iret
xor
movsl
xor
push
in
sub
push
mov
lcall
stos
movsb
cmp
pop
repnz
loope
dec
not
lcall
lret
pop
push
pop
pop
es
fs
ret
pop
sub
iret
jbe
jb
dec
adc
mov
in
mov
rol
orb
dec
ret
push
out
mov
push
dec
pop
xor
fs
negb
push
lahf
cmp
int3
inc
inc
out
fs
or
xlat
sub
mov
cmp
fisttpl
test
loop
pushf
shl
jo
lds
add
out
fadd
ret
scas
dec
pop
ret
pop
loopne
add
mov
push
shl
pop
adc
jne
push
mov
dec
add
aad
mov
inc
dec
int
and
rcl
iret
pop
jecxz
lds
dec
hlt
add
repnz
dec
mov
into
push
mov
sti
mov
and
mov
mov
int
mov
jno
mov
inc
ljmp
idivl
adc
test
or
xor
mov
or
out
pushf
xchg
shlb
mov
and
cltd
loopne
out
xchg
test
jne
into
or
ljmp
and
movsl
js
dec
loop
add
or
bt
add
lret
mov
jo
in
aad
out
mull
cs
cmp
ja
loopne
jno
mov
push
cmp
lds
push
lods
nop
push
sub
pop
dec
lock
xchg
iret
lock
imul
jnp
arpl
imulb
aam
xor
cmc
shrb
inc
std
ljmp
push
mov
sar
into
push
jle
mov
lods
push
pop
repz
push
cmpsb
sub
jae
lock
mov
push
inc
and
cmpsb
pusha
jp
dec
mov
lods
cmp
push
lret
pusha
es
pop
jle
outsb
cltd
mov
notb
sub
out
mov
push
addr16
push
out
xchg
jns
insb
adc
mov
pop
rcrl
push
pop
push
das
mov
rorb
add
sbb
xchg
xchg
cmp
pop
add
bound
mov
xchg
pop
pop
lods
ljmp
jnp,pt
scas
sbb
cmp
pop
out
es
into
testl
sbb
dec
out
jae
jns
cwtl
mov
xor
data16
push
je
pusha
jmp
pop
stos
lahf
pop
pop
insb
in
ja
pop
mov
and
and
test
sbb
lahf
jl
lds
movsl
sahf
and
mov
add
jg
daa
lret
loopne
cmc
fidivrl
mov
nop
test
pop
and
lret
mov
mov
lds
mov
jns
lods
dec
pop
bound
clc
push
adc
ror
push
lods
pop
sbb
cmp
xchg
or
or
xor
mov
pop
and
in
cwtl
sbb
stos
iret
pop
mov
leave
cmp
movsb
cmc
cld
and
pop
movsl
adc
bound
mov
adc
dec
pop
cmpsl
add
orl
xlat
cmp
cltd
jge
fists
push
pop
out
mov
or
xchg
call
mov
xchg
pop
sti
push
testb
pushf
push
ror
movsl
imul
inc
pop
shrl
pusha
mov
imul
mov
sub
push
testl
pushf
int
pop
jne
or
out
mov
xchg
out
xor
pusha
repz
stos
aad
les
ja
clc
movsb
cmp
loopne
sub
in
aad
jne
or
cmp
clc
pop
xor
dec
scas
xor
xor
and
out
jb
lret
push
mov
pop
fcoml
xchg
in
inc
or
sahf
cvtps2pd
push
push
test
lret
dec
xlat
jb
mov
inc
in
xor
in
pop
add
lds
push
sub
int
enter
rcr
pop
push
movsl
cs
test
mov
adc
cmp
sub
repz
and
sbb
dec
cld
mov
sar
into
push
mov
enter
gs
out
mov
outsl
mov
push
loope
cmp
sub
aam
stc
pop
xor
xlat
into
rcll
cmpb
rorl
ror
push
addl
xor
add
sahf
push
mov
les
push
mov
push
cmp
push
mov
es
sti
out
fidivrl
pushf
inc
outsb
sbb
adcl
mov
and
pushf
test
adc
cmp
adc
ret
js
mov
sarb
outsl
jo
xor
xchg
into
rsqrtps
cltd
enter
adc
stos
arpl
inc
jg
scas
adc
rcrb
and
xchg
dec
push
push
cmpsb
dec
jecxz
pop
push
negl
fwait
or
xor
cwtl
or
insb
js
add
pop
push
or
mov
out
sbb
jmp
sbb
push
jns
fidivl
out
les
int3
push
mov
cmp
adcl
sub
mov
nop
xor
dec
fcmovu
loop
repnz
loopne
cmpsl
loop
cmp
mov
xor
decl
outsl
cwtl
gs
shl
push
push
push
imul
adc
jbe
pop
pop
mov
and
popf
enter
sub
xchg
cs
imul
push
pusha
jl
popa
pop
jle
outsl
jp
lret
das
mov
mov
jle
lea
fiadds
icebp
adc
mov
and
jp
daa
pusha
cli
xor
mov
jmp
fwait
test
and
mov
mov
and
push
pop
sti
aas
push
out
andb
arpl
xchg
aaa
xor
enter
sbb
daa
pop
ja
punpckhbw
pop
js
in
scas
leave
addr16
jno
dec
data16
insb
push
ror
or
popa
xchg
bnd
mov
aas
jecxz
int
je
or
jp
cmp
jmp
jns
fidivrs
push
stc
sub
jmp
pop
pop
or
push
push
ljmp
inc
push
or
fldcw
inc
push
mov
fcmovb
jmp
loopne
dec
shrl
mov
rorl
aam
sub
pop
stos
push
jo
dec
pop
jmp
pop
lock
out
xor
addb
fld
fsubrs
dec
stc
and
mov
push
pop
repnz
cwtl
xchg
repnz
fdivrl
testl
aaa
cltd
dec
int
push
mov
push
dec
sarb
jo
mov
int
aas
inc
orl
hlt
pop
daa
dec
jle
in
arpl
rcrb
roll
push
pop
aam
fidivl
mov
inc
lock
out
cmp
hlt
inc
dec
dec
and
testl
mov
bound
cmc
into
dec
mov
mov
lds
dec
lds
fcmovb
push
test
dec
fucomip
in
stos
int
push
inc
repnz
jmp
pop
dec
mov
pop
jo
hlt
iret
lahf
sahf
push
jmp
fcoml
dec
loopne
pop
mov
clc
dec
sarb
mov
leave
fnsave
jl
inc
mov
mov
aad
xorl
sti
lret
je
rorb
xchg
lds
lock
jb
cmp
lods
pop
sbb
and
pusha
mov
jo
and
xchg
lahf
aam
pusha
pop
cmp
jmp
pop
sbb
dec
pop
call
push
push
pop
pop
jmp
test
sbb
pop
dec
sti
rorb
inc
outsl
xor
add
mov
iret
jp
adc
into
daa
es
mov
repnz
sbb
push
shll
cltd
inc
orb
xor
ljmp
push
add
lods
cmp
xor
mov
rcrb
cmp
or
sbb
repnz
call
add
inc
dec
pop
lds
ficoml
inc
lret
cmp
jns
mov
test
cltd
in
xchg
ds
out
lret
mov
or
aad
movsl
sti
lret
jmp
sti
or
lret
xchg
inc
mov
jne
loope
adc
pop
in
add
dec
test
imul
mov
lock
leave
outsb
mov
imul
js
cmpsb
cmp
jb
out
jecxz
or
push
xchg
inc
xchg
lea
out
pop
mov
ljmp
xor
outsb
or
jae
lods
push
mov
aam
lret
push
sbb
bound
or
call
in
pop
sbb
adc
int
xchg
jmp
imul
and
cmp
xor
and
mov
mov
cmp
adc
xchg
sbb
jmp
jle
pop
mov
dec
push
jmp
in
loop
iret
xor
sub
pusha
pop
or
and
jg
push
hlt
add
push
and
out
jnp
decl
xchg
fldt
xchg
pop
push
add
inc
fs
out
mov
jmp
cmp
shll
add
testb
pop
insl
jns
insl
push
data16
xor
jmp
cmc
and
cwtl
push
shrb
inc
nop
imul
add
aam
lcall
test
jo
ror
test
loope
repz
enter
adc
push
sub
aaa
lret
shll
pushf
xchg
jp
cltd
mov
and
arpl
pop
pop
fucomi
push
pop
and
lods
cmc
test
mov
and
xor
jmp
push
xchg
scas
out
or
in
mov
mov
into
add
push
aas
cwtl
push
pop
cmp
in
or
lret
mov
mov
iret
lods
push
push
or
shrb
lahf
sbb
rcll
in
repnz
xchg
mov
in
jns
mov
aas
and
sti
dec
or
outsb
jno
cld
repnz
or
hlt
push
mov
lods
pop
cmpb
out
iret
shll
push
xchg
es
add
aaa
shlb
cmp
sahf
je
sti
ror
cs
xchg
jecxz
xchg
jns
xor
push
pop
fsts
xchg
pop
popf
pop
pop
sbb
cltd
repnz
int
push
mov
xor
push
mov
sbb
popa
xor
neg
in
arpl
sbb
clc
mov
ds
ss
inc
mov
mov
jb
popf
sbb
mov
sbb
aas
mov
ljmp
and
lret
leave
jp
scas
out
dec
je
inc
mov
mov
ljmp
aaa
test
jns
ss
sbb
mov
popa
call
lea
cmpsl
jns
or
movsl
push
orb
xchg
out
lcall
lret
sub
and
out
ds
fisttps
cwtl
inc
jge
je
mov
pusha
and
dec
repz
popa
outsb
mov
dec
cmpsb
jl
loop
stos
dec
inc
cmp
ds
xchg
popf
lret
pop
sub
push
scas
outsb
fisubrl
pop
aas
jg
lret
mov
sbb
cmp
fwait
xor
mov
iret
cli
jb
fldcw
cmp
mov
pop
and
nop
roll
mov
sub
lret
xlat
push
push
pop
movsl
shlb
pop
lret
in
push
xchg
jl
into
stos
mov
aas
movsl
sub
lock
mov
inc
xchg
out
xchg
mov
add
pop
add
ja
shlb
aas
scas
push
dec
das
cmp
imul
jae
mov
rcrl
cmp
popa
push
pop
int
cmpsb
int3
sbb
aas
pop
push
cmp
mov
mulb
std
daa
shl
aam
or
rorl
jb
test
xor
lret
repz
bound
cli
mov
inc
and
leave
int3
stos
fcmovnb
ds
sbb
push
or
dec
fdivs
push
rcl
pop
fsubrs
das
xor
cli
popf
or
pop
fsubs
rorb
scas
inc
jmp
mov
push
out
rcrl
add
out
lret
pop
push
mov
lcall
xchg
cmp
adc
inc
add
or
xchg
lods
inc
lret
add
orl
sub
jbe
mov
sbb
adc
jb
pop
or
or
cli
xchg
fdivrs
jno
les
mov
aad
mov
cmp
rolb
jbe
scas
lret
cmp
cmp
sbb
xchg
mov
imul
scas
cli
rclb
gs
pop
aam
lret
push
inc
negl
cmp
test
and
ror
sub
sarl
insb
pop
test
sub
out
lret
push
push
stos
fdivl
lret
pop
pop
add
adc
jecxz
or
lret
popa
pop
mov
in
fldenv
sub
scas
lret
fisttpl
adc
and
lret
sub
dec
and
cwtl
or
mov
dec
test
int3
jnp
cmp
out
lahf
jbe
and
push
add
xchg
fistps
outsl
bound
lret
xor
hlt
sub
add
add
lret
inc
sbb
cmc
in
xor
mov
push
mov
insb
loopne
outsb
cli
sahf
push
pusha
fists
lret
xchg
cmp
enter
adc
sub
xor
fcoml
mov
sub
das
ficoml
mov
mov
sbb
leave
lret
lret
iret
mov
jae
add
mov
mov
inc
push
out
fiaddl
mov
jle
addl
sub
cmc
pop
cmovp
cmp
aas
mov
js
and
lret
test
or
jno
bound
mov
jae,pt
lret
add
cmp
or
inc
je
cmp
lret
adc
lret
bound
push
cli
insb
sub
inc
js
adc
add
mov
and
jmp
or
adc
mov
lahf
out
enter
addr16
ror
xchg
adc
jne
je
dec
cmp
int3
adc
popa
imul
cmp
arpl
in
adc
ficoml
cwtl
and
inc
pop
push
jp
lret
pop
dec
stc
mov
test
call
lret
aam
xor
add
fsubr
in
fs
insb
scas
lret
jge
arpl
ds
add
mov
fwait
sbb
fcmovne
mov
ss
mov
mov
sub
rcrl
pop
ss
repz
add
icebp
lret
add
dec
push
and
hlt
mov
lret
iret
int
dec
in
lret
xor
sub
test
jecxz
call
int3
lret
xchg
ljmp
pop
negb
dec
mov
call
sbb
push
lods
adc
repnz
aam
pop
sbb
mov
lcall
sbb
dec
out
pop
out
fcompl
lret
sarb
sarl
and
push
movsl
inc
or
dec
xchg
mov
aam
repnz
dec
rorb
jb
pusha
daa
mov
lret
sbb
in
adc
out
inc
jle
adc
insb
ror
xor
cmpsb
clc
push
pop
lret
divb
lret
xor
mov
mov
dec
inc
ficompl
cmpsl
or
jne
mov
ror
fmuls
mov
cmc
jnp
lret
push
sub
jo
aam
lret
aaa
cld
rorl
insl
pop
push
cmpsb
pop
rcll
dec
call
xchg
imul
mov
sub
inc
lret
mov
fisubl
or
int
mov
sub
mov
loop
and
mov
ret
rcr
sbb
sbb
sbb
sahf
or
pop
lret
xchg
xchg
int3
das
cmp
lret
lret
jno
mov
dec
cli
cmp
jb
and
lods
inc
mov
popl
pop
lret
imul
dec
dec
push
lret
or
dec
insb
test
add
scas
lea
inc
xchg
inc
inc
lods
add
loop
out
xor
mov
adc
lret
inc
aas
mov
fxch
ret
scas
add
and
lcall
push
jbe
rclb
rclb
jecxz
xchg
into
popa
mov
adc
stos
subl
lret
sbb
ds
mov
popf
out
lret
loopne
test
mov
xchg
aas
dec
aaa
xor
ds
push
pop
lret
and
lret
xchg
lret
jnp
in
xchg
int
lods
cmp
jne
lret
dec
jp
and
vmovaps
shrb
xlat
bnd
pop
push
or
pushl
ret
pop
out
jae
or
pushf
mov
add
mov
jp
sar
jge
adc
sti
out
pop
das
dec
pop
xchg
cli
sbb
mov
xchg
mov
xchg
arpl
pop
dec
push
dec
cs
pop
loopne
or
and
fildll
jmp
fxch
int
movsb
pop
dec
pop
bswap
fidivs
test
rolb
std
movsb
cmp
inc
leave
lock
pop
push
jge
sarb
addr16
lret
inc
jle
mov
adc
mov
xchg
into
pop
lret
bound
push
cmp
lods
imul
pop
jmp
push
lret
fwait
pop
push
cmp
ss
stos
and
lret
adc
fs
sahf
into
add
lret
test
push
inc
xchg
mov
dec
sbb
xor
ja
pop
sbb
push
mov
scas
js
sub
inc
mov
sbb
mov
sub
sbb
neg
push
pop
repnz
cmc
jns
cli
rcr
repz
or
lret
fisubrl
popf
pop
not
imul
pushf
into
mov
mov
out
pop
arpl
xlat
pop
xchg
dec
push
mov
lods
lret
stos
pop
sub
and
push
out
pop
xchg
ds
adc
fstps
and
shlb
inc
out
mov
movsb
aad
inc
shrl
rcrl
pop
movsl
or
sahf
notb
xchg
scas
lret
cmp
hlt
lret
test
shlb
dec
fwait
push
add
jae
imul
pop
incl
mov
lret
mov
xor
call
mov
es
lret
gs
ds
sti
cmp
mov
mov
sbb
lret
jmp
pop
xor
sub
mov
inc
pop
inc
dec
rcll
lret
and
lret
pusha
orl
jo
mov
aam
mov
enter
lods
rclb
mov
mov
pop
fcomps
ja
xchg
adc
out
das
daa
xor
inc
inc
inc
dec
lret
fwait
aaa
sahf
test
lret
stc
call
js
lret
or
bound
popf
lret
sub
push
adc
out
dec
xchg
jle
lods
int3
ljmp
shlb
lret
pop
inc
cmpsl
iret
xchg
std
scas
sbb
shll
push
inc
mov
push
lds
outsl
fwait
cmc
rcl
push
adc
mov
pop
fstpt
rcrl
stc
or
test
jbe
or
push
xchg
pop
arpl
rcrb
pop
cmpsl
call
cs
sti
push
pop
insl
push
mov
test
xor
clc
xor
dec
mov
and
divl
jg
cltd
outsl
cmp
sbb
cwtl
dec
xor
test
pop
cli
test
or
ficoms
mov
mov
stos
cwtl
mov
mov
sub
ret
and
aad
mov
push
xor
mov
cltd
popf
and
cmc
mov
subb
int3
mov
ds
in
push
iret
roll
call
les
push
add
push
iret
insb
je
dec
aaa
sub
daa
mov
aaa
push
sbb
pop
push
add
sub
bound
push
mov
out
mov
xor
jae
lret
push
sbb
loope
mov
xchg
popa
lds
and
lahf
or
in
lret
out
imul
mov
ljmp
mov
adc
scas
xchg
pop
push
lea
cld
popf
push
xor
mov
leave
xor
add
sub
das
xchg
pop
inc
arpl
and
int
shl
iret
idivb
mov
fsubr
pusha
pop
sbb
jmp
mov
ficoms
xchg
adc
lods
mov
pop
adc
lret
lahf
or
lret
xchg
decb
jne
jmp
test
jb
mov
ljmp
xlat
test
add
sahf
test
mov
bound
sbb
push
pop
cmp
out
adc
mov
dec
inc
mov
in
cltd
mov
fdivrs
lret
lods
cmp
mov
fucompp
fcomip
aam
test
mov
or
lret
sbb
sbb
lret
xor
inc
aam
pop
or
lret
xor
pop
nop
lret
test
popf
cmc
jno
lret
lahf
mov
push
adc
xor
mov
outsl
dec
pop
or
adc
mov
aam
mov
push
push
insl
cmpsl
fcom
jb
shll
test
out
shll
lret
les
jmp
push
sbb
jb
and
stos
sbb
rclb
cli
sahf
aaa
sbb
xor
mov
pop
push
jbe
add
push
and
dec
stos
lret
inc
ret
push
sbb
jns
loope
or
enter
sub
lret
xchg
lret
adc
aaa
rorb
fcoms
es
pop
jnp
jp
pop
push
das
lret
push
lods
fistpl
mov
lahf
inc
stos
rclb
dec
and
lret
inc
ffree
out
xor
push
insl
imul
es
lret
test
adc
push
add
and
lret
cmpsl
fsubrs
jg
shll
push
out
fildl
lret
movsb
or
out
pop
lret
jne
lcall
xlat
pop
mov
jno
inc
adc
add
and
add
test
xchg
cli
aam
movsl
mov
clc
jno
jns
lret
xchg
pop
or
subb
jle
mov
add
lret
and
stos
lods
pop
xlat
lret
into
subb
lret
dec
jo
aas
xchg
lret
and
mov
pop
or
lds
or
inc
push
mov
jp
fimull
cmpsb
sbb
lret
jo
jne
pusha
xchg
cmp
push
test
mov
hlt
inc
jbe
fcoms
mov
and
or
scas
and
sub
aaa
push
sbb
test
add
sbb
dec
lret
ja
call
sub
js
cwtl
xor
aad
lret
int
stos
orl
loopne
lret
mov
lods
out
scas
pop
dec
lret
arpl
lret
push
xor
aaa
lret
inc
add
lret
mov
pop
xor
jnp
adc
lahf
push
inc
pop
xor
mov
shll
jle
cmpsb
fldl
dec
sar
outsl
pop
cmp
inc
cmp
cli
or
sbb
push
rclb
test
sbbl
adc
loopne
negb
outsb
ror
dec
jnp
jbe
and
cmp
sub
xchg
mov
inc
fstps
je
in
enter
je
rorl
lock
and
dec
and
daa
dec
xchg
push
push
xchg
pop
movsb
lret
sahf
xchg
sbb
nop
rorl
xchg
lret
ljmp
fwait
imul
adc
pop
loopne
addl
lret
adc
xchg
imul
insb
cmp
call
pop
ss
pop
bound
and
test
sbb
fcompl
jne
es
add
xchg
negb
aad
ror
test
loopne
mov
popf
mov
xchg
shrl
iret
xchg
movsb
sub
adc
or
mov
mov
sub
cmp
in
cli
js
jl
lahf
or
xor
lods
and
mov
inc
fcom
xchg
js
sti
inc
dec
stos
sub
cmc
xchg
es
imul
jecxz
mov
cli
jle
out
sub
xchg
ds
or
jge
mov
lret
mov
xchg
inc
popa
mov
in
jne
and
dec
roll
fsts
lret
out
adc
push
mov
and
in
xor
clc
xchg
cmp
inc
jne
or
push
aam
imul
mov
pop
movsl
stc
xchg
add
lret
lret
push
add
dec
das
movsb
mov
popf
adc
test
int
lret
lret
or
mov
shll
sub
add
xchg
or
lret
sahf
scas
jb
mov
lret
arpl
aas
xchg
inc
lods
mov
jl
cli
orl
iret
pop
push
adc
out
loopne
je
fcoms
stos
and
lret
fwait
sub
pusha
clc
aad
push
cmpsb
sahf
adc
push
xlat
jae
ljmp
sbb
ret
push
adc
cld
xchg
mov
inc
mov
mov
bnd
lret
xchg
out
lahf
push
and
lret
dec
pop
and
leave
inc
lret
pop
out
fs
lret
cltd
dec
aam
fsts
test
clc
into
lretw
jl
pop
jge
push
fwait
sbb
cmp
xor
cmp
ljmp
push
mov
mov
sbb
test
lcall
lret
xchg
cwtl
daa
pusha
lret
clc
xchg
fadds
sbb
and
aam
out
cmp
mov
sbb
push
rcrl
sbb
mov
xor
shrb
dec
in
insl
sbb
loop
lahf
fcom
fsts
fcmovb
xor
add
sub
lret
shrl
ss
mov
clc
test
cld
push
xchg
out
stos
sti
out
mov
hlt
mov
add
lods
iret
xchg
stos
jle
clc
xchg
adc
jp
sub
fxch
push
lret
jb
push
pop
fdivs
or
movsb
call
pop
lret
fsubr
jp
cmp
mov
lret
pop
dec
stos
inc
mov
iret
adc
lret
mov
mov
add
mov
mov
lods
jno
call
rcrl
scas
fistps
xchg
mov
adc
inc
lods
mov
xor
frstor
ss
push
jns
fcomps
shrl
fwait
lret
test
lret
mov
lods
cmp
cmp
cmpsb
xor
pusha
adc
or
test
cmpl
xchg
pop
sbb
pop
pop
add
and
lret
leave
icebp
push
fisubl
shlb
incb
cmc
fnstsw
lret
xchg
or
ljmp
popf
add
lret
push
cmp
lret
fcmovne
mov
push
in
dec
arpl
ret
add
fidivrs
leave
and
push
loope
dec
inc
ror
mov
xlat
jle
and
hlt
or
lret
mov
mov
fucomip
iret
insb
mov
lret
addl
push
enter
arpl
ds
aas
lret
sub
xor
mov
rorb
sub
jmp
pushf
mov
nop
call
pop
mov
inc
push
out
into
lret
adc
jae
arpl
cmpsl
and
nop
movsb
add
add
cli
jge
sarl
aas
fldcw
lret
rclb
dec
fmuls
out
frstor
pop
jne
sbb
cltd
rorl
pop
adc
jge
into
xchg
or
cltd
add
stos
xorb
mov
fcomps
out
mov
and
lret
stc
push
jb
xchg
cmp
fstps
pop
rcr
dec
mov
add
cwtl
xchg
xchg
dec
es
push
xchg
push
out
inc
iret
mov
cli
lock
push
aam
imul
adc
lret
in
movsb
in
add
mov
jg
cmpsl
ljmp
sarb
rol
or
xorb
jge
or
pop
and
xor
cld
mov
daa
xchg
rcrb
mov
mov
push
xor
dec
in
inc
push
lret
fs
bts
stos
repnz
stos
adc
cmc
int3
add
and
test
fs
mov
stos
push
mov
lea
or
pop
mov
faddl
add
xchg
lret
and
mov
sub
sbb
lret
dec
addb
je
lret
jae
fmuls
push
jle
popf
xor
cmp
and
lret
inc
mov
lret
mov
lret
jb
xor
scas
not
js
es
decb
lret
inc
mov
rcrl
jge
inc
ljmp
pop
cmp
sbb
push
call
rcrl
or
std
or
push
outsb
ljmp
add
lret
aaa
js
ljmp
and
fildll
xor
pop
lds
in
pop
lret
popa
imul
jp
addl
adc
int3
cmp
cmp
ficomps
sub
inc
outsl
pop
jae
std
sbb
mov
cmp
scas
adc
ja
lret
and
popf
pop
dec
lret
pushf
fs
xor
lret
inc
ret
xor
rcll
sbb
imul
lret
loopne
fistps
sub
sbb
or
xlat
sub
rcr
mov
add
into
mov
lret
xor
jo
pop
call
xchg
aas
fidivl
dec
pop
and
mov
loop
cli
xor
int3
repz
js
or
xor
cs
divb
mov
loop
les
mov
into
call
sub
sbb
adc
pushf
lcall
outsb
mov
lret
push
mov
hlt
imul
lcall
mov
outsb
shlb
xor
adc
gs
enter
sbb
adc
pushf
nop
dec
roll
mov
js
xor
dec
mov
jle
stos
sarb
xor
mov
scas
push
orb
cmp
mov
mov
dec
xor
pop
daa
xchg
lret
jns
adc
lea
loope
lret
mov
clc
lret
das
mov
add
ljmp
cmpsl
out
pop
xlat
daa
repz
push
ret
ljmp
gs
out
iret
mov
xor
lret
insl
inc
mov
loop
test
popf
cli
xor
sbb
sub
aas
orb
shl
out
sbb
mov
sub
pop
repz
or
adc
mov
stc
push
jb
push
fimull
loope
pop
std
push
fwait
pop
or
mov
mov
or
add
mov
dec
xchg
aas
xlat
mov
push
lods
fnstsw
push
jbe
aad
out
in
pop
mov
add
ret
add
shll
rcll
fdivr
lret
in
out
mov
sbb
lret
arpl
lods
call
pop
lret
xchg
xor
lahf
jb
out
mov
cld
aaa
sbb
dec
cmp
cmp
mov
push
lret
and
mov
std
adc
inc
jg
lret
jo
loopne
and
or
adc
mov
aaa
dec
add
pusha
adc
pushf
lret
cltd
mov
aad
lret
leave
jae
dec
out
mov
push
fmulp
dec
mov
sub
inc
bound
pop
shl
daa
mov
lret
xor
lret
ret
shl
lret
cmc
call
lret
nop
push
sbb
cmp
test
sub
xor
mov
in
stc
scas
rol
cmp
mov
rcrb
jns
xor
ja
jl
iret
jp
and
shrb
jle
or
fsubs
imul
bswap
mov
mov
shll
cmpsl
inc
loope
ljmp
rorl
hlt
fmull
lret
pusha
and
cld
test
lret
test
lret
xchg
dec
cmpsb
pop
xchg
cmp
jle
fldt
incb
outsl
lret
lods
push
mov
imul
out
jnp
cmp
dec
cmp
loope
ja
jmp
movsb
lahf
mov
cs
aaa
lret
pop
add
mov
rolb
aas
cmpsl
push
int3
jmp
lret
xchg
mov
lret
bound
cli
inc
mov
insl
icebp
pop
lret
jmp
sub
sub
fidivl
in
and
into
aad
insl
cld
adc
aaa
jo
or
lret
les
fiaddl
stos
inc
mov
mov
lret
pop
lcall
sbb
int3
or
xchg
pusha
cmpsl
jp
jnp
xlat
cmp
sub
xor
add
stos
lret
cmc
push
rcll
rcrl
or
lret
aaa
pop
adcb
lret
mov
popa
pop
rcl
ja
fs
int3
ret
jmp
test
add
loop
lock
pop
mov
pusha
sub
push
mov
fwait
and
sub
push
jge
sahf
arpl
cltd
lret
add
adc
sub
aam
and
dec
inc
dec
das
repz
pop
lret
les
xor
xor
pushf
ss
outsb
cltd
add
lret
jne
inc
cmpl
sub
loop
cli
roll
sbb
imul
stos
mov
add
lahf
inc
or
lret
sahf
sbb
enter
lret
inc
add
fcomps
int3
mov
gs
jg
arpl
inc
scas
adc
lcall
mov
mov
pop
int3
out
lcall
popa
stos
insl
and
iret
fs
sti
pushf
pop
pop
xchg
ror
mov
mov
test
jne
lret
push
sub
mov
imul
sub
shlb
int3
or
jp
cmpsb
jmp
shl
cmp
out
sarl
rorb
fdivrs
cmp
xlat
mov
lret
jecxz
xchg
mov
out
fwait
lock
push
cltd
setp
mov
jecxz
leave
lret
xchg
into
adc
ds
jbe
ja
stc
outsl
ljmp
or
test
lret
cmp
fsts
ja
lods
mov
jmp
lea
xor
inc
mov
cli
cmp
jne
mov
fstpt
cli
lret
orb
nop
push
sub
and
popf
add
insl
cmc
leave
lret
mov
inc
add
pop
lods
xchg
mov
aam
stos
popw
jecxz
hlt
lret
sub
mov
inc
and
into
cmp
jno
rorl
lods
outsb
out
xor
rcrl
pop
jp
roll
ror
cmc
test
pop
push
lret
imul
rcr
and
faddp
stos
mov
push
sbb
in
jmp
fadds
sub
xchg
pop
lret
mov
xor
loop
lret
and
dec
scas
dec
lods
mov
rolb
rcl
sbb
xchg
or
orb
pop
pop
dec
xchg
jp
pop
lret
add
outsb
push
jae
add
pop
and
mov
aam
lahf
lea
stos
or
and
into
adc
outsl
fdivp
adc
xlat
sub
pop
sub
ret
fsubrs
mov
pop
push
in
fiadds
mov
lret
pop
xor
bound
lcall
lahf
cmp
cmpl
cmp
iret
mov
jge
or
xlat
int3
lret
lret
adc
fsub
stos
lret
sub
jns
jne
xor
ds
adc
rclb
add
push
dec
lret
std
mov
lret
push
sbb
nop
inc
mov
add
scas
or
pop
jb
mov
and
rcr
cwtl
jge
fistps
and
push
xchg
lret
inc
push
in
mov
lret
mov
adc
fidivs
xor
jb
lret
lahf
xchg
dec
ret
aam
popa
out
mov
or
lret
lret
lods
lcall
inc
in
mov
jg
push
dec
std
js
inc
rolb
dec
push
data16
xor
dec
xchg
mov
and
add
cmpsb
das
lret
adcb
lahf
mov
fcmovu
push
sub
jno
sahf
push
cwtl
jmp
ret
mov
aas
arpl
push
cmc
fwait
cld
das
and
repnz
jmp
mov
adc
pop
test
je
pop
mov
mov
into
lret
cmp
sbb
jb
push
dec
movsl
lret
mov
push
lret
inc
shrl
xor
cmp
and
pop
jg,pn
mov
sarb
jge
pop
inc
ja
and
enter
lret
adc
das
out
jb
pop
lret
hlt
pop
sbb
mov
fyl2xp1
mov
mov
adc
cltd
pop
popf
test
fwait
pushf
lret
lds
inc
or
jnp
push
out
aaa
dec
pushf
aam
cli
push
orb
jae
inc
jle
jnp
sub
shll
lret
mov
push
pop
mov
dec
adc
xlat
sarb
in
shr
pop
ret
jne
mov
sbb
push
xchg
jmp
outsb
pop
jnp
xchg
orl
xor
jne
pop
lret
push
cltd
out
ljmp
cs
test
movsl
dec
jge
push
pop
pop
jle
mov
adc
jmp
cli
add
jp
js
sbb
jo
out
cmp
mov
inc
aam
icebp
sbb
lret
xchg
movsb
sub
add
je
js
out
fcmove
pop
and
lods
add
into
mov
repz
lret
cwtl
shr
rcll
add
aad
loop
xor
push
insl
jge
jns
stos
out
adc
loop
std
mov
js
jle
lret
add
repz
mov
sahf
aad
sarl
fldl
cmp
fld
xchg
lret
mov
mov
les
adc
loopne
test
xchg
enter
outsl
nop
call
frstor
lahf
ret
add
lds
jp
mov
pop
rolb
jp
cmp
inc
iret
clc
repz
lret
repz
fcompl
mov
xlat
scas
xor
dec
adc
mov
cmp
mov
ficomps
mov
sbb
xorl
stos
enter
ljmp
xlat
dec
push
stos
repz
leave
inc
mov
add
adc
je
rcrb
dec
lcall
push
ret
rolb
repz
stos
das
inc
out
scas
xchg
shlb
push
cmp
jnp
pushf
adc
lods
popf
loope
lret
scas
lcall
jecxz
int
icebp
mov
push
lods
push
test
or
inc
or
mov
adc
lods
lret
sub
mov
or
mov
xor
push
lahf
or
mov
lods
or
sti
add
mov
test
nop
fidivrs
das
imul
sub
lcall
loopne
mov
test
lret
scas
mov
dec
xchg
inc
lret
nop
dec
adc
jae
insb
fsubl
cmc
mov
arpl
das
lret
jno
data16
sbb
lret
clc
testl
rcl
xchg
push
adc
pop
lret
inc
cmp
pop
sbb
adc
into
push
xor
mov
ficompl
xor
fmuls
cs
jne
push
mov
lret
cwtl
sub
dec
adc
insb
mov
lret
je
dec
xor
mov
jle
xchg
mov
arpl
xchg
notb
outsb
out
rcrb
cmp
ficoml
cmp
cs
daa
add
decl
mov
cmp
rorl
loope
and
dec
inc
jnp
outsl
sub
jp
and
mov
fs
inc
jge
lods
lret
mov
cli
inc
lods
xchg
push
pop
xlat
push
cwtl
adc
test
mov
popa
ljmp
into
addr16
mov
pushf
mov
mov
mov
clc
popa
bound
lret
add
mov
cmpsb
pop
cmp
pop
mov
in
cli
stos
xchg
push
xor
movsb
aas
imul
test
jp,pt
mov
cmp
xlat
fsts
add
sub
jnp
push
cmp
int3
push
stc
mov
pushf
mov
adc
pop
sub
fsubs
inc
sub
and
test
shll
add
cli
js
jge
fiadds
mov
fs
cmpsl
jp
cmp
fadds
cmp
jmp
outsb
sbb
push
add
iret
nop
aad
pop
and
lret
in
push
mov
test
movsl
xchg
sbb
adc
popa
mov
cld
hlt
rclb
sarl
ss
jb
loop
cmp
test
rcll
js
lret
sub
adc
pop
cmp
xchg
fimull
inc
cli
sahf
ss
and
xor
lret
jle,pn
aaa
sub
arpl
lret
xor
mov
jns
mov
lahf
lret
inc
orb
cmp
popf
mov
dec
sbb
xor
stos
jae
dec
push
pusha
or
repnz
sarb
mov
int
out
call
jnp
in
imul
mov
xchg
adc
dec
push
lret
push
rcll
fistpll
cmp
aam
mov
lods
sbb
test
pop
loopne
les
shlb
nop
imul
mov
fdiv
or
pop
lret
add
pop
lret
not
adc
cmp
scas
sub
rorb
aad
sarb
lret
idiv
push
mov
dec
lret
out
xor
stos
jbe
push
xchg
inc
sub
jecxz
lret
fidivl
test
adc
insb
lret
dec
aas
imull
mov
add
xchg
pusha
lret
int3
nop
adc
lret
scas
and
in
fcmovbe
adc
lods
int3
cmp
adc
fsubrs
adc
cmp
lock
cmp
js
test
imul
into
loop
hlt
add
or
inc
scas
adc
mov
and
fnsave
lret
int3
fadds
jp
push
cmp
iret
out
jne
insb
sbb
jno
outsl
cmp
dec
pusha
adc
mov
adc
mov
ret
sarb
addb
leave
loope
lret
js
adc
push
inc
adc
sub
cld
shl
imul
addr16
emms
aam
jmp
jnp
loope
add
ficoms
sti
rclb
stos
into
jmp
shlb
lret
aaa
cmpsb
xlat
dec
and
add
enter
aam
pop
mov
lret
inc
lret
lahf
out
fidivrs
sahf
lods
stos
rolb
lret
mov
jb
adc
sbb
mov
insb
sbb
pop
xchg
jmp
dec
dec
dec
insl
mov
leave
das
cmp
icebp
lret
push
mov
lock
test
add
ja
in
inc
xchg
mov
mov
ds
mov
xchg
push
or
push
pop
in
lret
xchg
in
icebp
xchg
xchg
lods
lret
cmovbe
cli
ljmp
dec
mov
lret
call
inc
inc
pop
lret
pop
pop
sub
lock
push
fisubl
mov
shr
cmp
cmp
pushf
std
test
xchg
outsb
adc
nop
xlat
sub
and
inc
lahf
out
loop
leave
lret
test
mov
das
mov
cwtl
mov
aam
cli
mov
xlat
mov
sbbl
fstpt
sub
cmpsl
dec
lret
pushf
mov
fcmovb
and
adc
stc
sub
and
aam
fistpl
data16
mov
call
dec
shlb
shrb
repnz
lcall
insl
popf
mov
lret
dec
mov
pop
inc
push
lds
mov
rorb
rclb
das
ljmp
inc
inc
mov
add
test
xor
dec
lret
fistl
push
dec
and
arpl
mov
jo
xor
lock
lret
aas
mov
scas
lods
lods
jne
lret
jl
sbb
js
mov
dec
mov
sub
jge
cmp
mov
in
cmp
fidivrl
cmp
mov
loopne
pop
lret
outsl
in
inc
sbb
in
mov
jns
sarb
xchg
jo
outsl
adc
lret
dec
mov
adc
sub
cmp
xchg
les
cmp
mov
rorb
cmove
mov
cli
mov
lret
push
enter
icebp
mov
test
lret
inc
xor
pusha
out
lret
jb
out
add
or
test
push
mov
adcl
mov
roll
lahf
mov
jbe
xchg
mov
addr16
jp
push
cwtl
stos
sbb
sbb
jbe
xchg
lret
push
loope
rcl
mov
lret
je
push
into
nop
lret
adc
lret
int3
xchg
mov
rcr
aam
and
push
sahf
addl
jns
xor
lret
dec
daa
outsb
mov
cs
push
inc
icebp
lods
fmull
dec
add
jno
shll
hlt
sub
insl
imul
mov
push
es
jle
rolb
cmp
repnz
sbb
push
lret
ljmp
jp
shll
gs
lret
fwait
imul
pushf
fs
push
fidivrs
sub
dec
rcll
xor
add
lret
mov
addr16
scas
jno
pop
cmp
sbb
call
aad
lret
fcomps
cmpsb
dec
sbb
outsl
fsubrs
push
lods
lret
int
or
popf
lods
cmp
xchg
adc
pop
mov
stos
jno,pn
lret
adc
sbb
rclb
sbb
xor
mov
xchg
ljmp
push
push
dec
mov
mov
leave
sbb
and
es
shl
fmull
mov
sti
or
scas
mov
lock
lret
xor
stc
pop
out
push
add
enter
in
lret
insl
mov
lret
out
ss
cmpsl
mov
cs
loopne
dec
and
cmpsb
rcl
mov
xchg
testl
adc
lret
repnz
dec
or
lret
out
mov
lret
jo
in
fcoms
sbbl
inc
dec
aam
push
adc
pop
push
sub
mov
cld
lahf
pop
loop
sbb
pop
pop
fldl
mov
cli
xor
adc
and
lret
adcl
hlt
add
push
lret
inc
mov
popf
cmp
ror
add
mov
dec
std
sub
or
js
pop
xchg
ljmp
and
sub
inc
sti
push
addr16
lret
inc
mov
xlat
lds
push
push
outsl
xor
nop
pop
ja
and
call
cmp
dec
clc
xor
jo
and
fsubr
dec
push
ret
clc
dec
aad
dec
inc
pusha
shlb
sub
mov
in
stos
pusha
push
rcrl
xor
daa
and
jp
lahf
lcall
sub
jno
sub
push
fsubrl
pop
cmpsl
outsb
sbb
repz
decl
popf
nop
add
sbb
and
and
leave
imul
shll
cmp
xor
dec
loope
leave
js
push
jp
jge
orb
stc
pop
jle
shrb
sbb
adc
dec
test
adc
xchg
push
ret
mov
sbb
add
or
sarl
jp
jno
iret
sbb
movsl
jno
int3
push
test
ffreep
jp
scas
stos
aaa
inc
xor
popa
rdtsc
rorb
movsb
shrl
mov
push
dec
mov
cmpsb
orb
dec
pop
ret
push
lods
jmp
mov
lea
outsb
jne
mov
mov
andb
das
test
mov
lock
pop
push
mov
mov
dec
test
mov
dec
sbb
pop
cmpsl
mov
stc
std
stos
push
jmp
test
mov
dec
insb
xor
and
js
movsl
mov
mov
cmp
or
or
cld
sbbl
mov
outsb
or
in
cmp
jbe
nop
in
push
subl
pop
sbb
cmp
and
hlt
scas
pop
lea
pusha
mov
mov
or
adc
cmpsl
adc
mov
jno
ret
inc
dec
das
inc
pusha
lahf
out
cmp
adc
fisubrs
mov
jbe
outsb
push
mov
pop
cld
int
adc
adc
mov
sbb
cmp
push
jno
lds
jnp
xor
push
lret
rcrb
out
push
pop
sbb
rolb
out
dec
pop
sbb
aam
and
mov
pop
cltd
cmp
or
sbb
xor
jp
in
ljmp
or
dec
das
sub
pop
xchg
out
and
shrb
inc
sub
pop
aad
aaa
rcrb
mov
sub
push
rorb
icebp
pusha
pop
imul
imul
psrlq
mov
faddl
mov
mov
sti
add
sahf
inc
out
pop
inc
push
loop
dec
and
mov
xor
movsb
out
lds
sti
pop
sub
jbe
and
and
dec
mov
loope
jmp
adc
test
adc
mov
fwait
dec
insb
pop
daa
xchg
aam
stc
sbb
movsl
push
scas
sar
adc
jecxz
in
mov
dec
ret
repz
or
inc
and
dec
shlb
fnstcw
psubsw
cwtl
mov
mov
inc
aaa
mov
fcom
inc
mov
or
pop
pop
adcl
mov
repnz
lcall
lds
roll
scas
jmp
les
popa
std
cmp
dec
lds
push
sbb
cs
jg
scas
ror
inc
add
sbbb
sub
push
popa
add
adc
mov
pop
loopne
pop
outsl
inc
push
xchg
push
pop
lahf
fisubs
cld
pop
in
pop
ficoml
gs
fidivrs
test
sbb
in
cmp
push
jp
clts
out
sbb
push
mov
int3
push
xlat
jne
fstl
xor
out
js
adc
push
sti
mov
rorb
aam
and
or
popa
cmc
dec
pushf
stc
sbb
xor
rcll
mov
adc
loop
jae
cli
fiadds
adc
xor
dec
xchg
out
out
shrb
xor
repnz
mov
hlt
mov
loope
sub
or
int3
and
rcll
inc
inc
add
jecxz
aas
pop
sub
sbb
idivl
add
or
stos
xlat
jns
int3
dec
into
push
scas
sub
scas
adc
sub
jmp
pop
enter
dec
jecxz
lods
push
outsb
les
aas
test
push
es
sub
vmovshdup
adc
rclb
iret
movsb
ja
shr
shrl
ss
mov
sar
jp
dec
test
fadds
test
sbb
jl
cltd
into
xorl
push
xlat
mov
xchg
rorb
lods
jne
lds
mov
sahf
aaa
ljmp
insl
fcmove
mov
or
xor
call
mov
jl
aas
jmp
mov
and
push
jge
mov
mov
and
mov
test
jne
dec
mov
enter
cmpsl
iret
inc
jl
and
pop
pop
mov
test
cltd
mov
push
adc
dec
lds
push
push
test
in
jb
fcoml
sub
movsl
mov
enter
pop
lahf
or
push
imulb
jl
dec
int3
pop
push
jle
xor
and
mov
stos
loop
into
roll
dec
cmc
cmpsl
hlt
sub
adc
aam
mov
mov
rcr
into
out
pop
sub
call
ret
subl
and
paddq
jmp
shll
inc
jo
add
fadds
push
pop
mov
push
adc
test
sarl
in
test
sti
or
imul
fidivs
mov
lods
xor
imul
enter
or
cs
pop
xorb
test
sub
sbb
add
pop
imul
inc
inc
out
mov
push
test
or
lret
enter
and
je
fdiv
inc
jns
pop
iret
jecxz
outsb
rcl
add
push
cmpsl
push
cmp
sbb
xchg
and
push
mov
push
div
ljmp
rclb
rolb
xchg
pop
fcoml
jae
frstor
scas
sbb
sbb
sbb
test
mov
out
int3
aas
inc
jmp
mov
rcl
push
out
fisubs
xor
out
movsl
and
push
cmp
or
mov
incl
pop
xchg
add
mov
fwait
sbb
scas
arpl
in
jp
push
ja
dec
and
bound
lret
sub
dec
gs
push
push
loopne
push
daa
jp
jge
int3
cmp
mov
test
lahf
loop
shl
fcoms
movsb
pop
outsb
pop
cld
sub
push
adc
in
in
mov
pop
jno
mov
mov
loopne
shlb
pop
jno
adc
pop
ret
mov
pop
mov
add
cmp
sarb
iret
jg
cmc
in
inc
or
movsl
test
sahf
arpl
nop
xor
jecxz
repz
dec
loope
popf
int3
fsubrs
out
xchg
adc
cmp
ret
adc
into
push
sub
or
inc
sti
sbb
repz
jae
insl
lea
lret
aad
pop
aaa
rep
xchg
jo
push
sti
jo
pop
lret
jbe
std
dec
shll
adc
outsl
js
mov
mov
jg
sbb
shll
mov
adc
add
pop
jmp
mov
fpatan
out
dec
das
scas
mov
test
mov
lods
inc
jg
mov
aas
lahf
dec
add
dec
pop
jle
hlt
lea
loope
xor
jns
imul
or
scas
and
sbb
out
cs
shrb
add
data16
push
test
int3
mov
insl
push
sbb
leave
dec
lret
jg
mov
aas
movsb
cmc
inc
pop
mov
aaa
rcr
xchg
and
add
leave
ja
aaa
leave
es
dec
sbb
lock
addb
push
push
mov
test
lret
sbb
sarb
dec
mov
jp
xchg
mov
repz
icebp
aas
repz
jle
push
mov
gs
arpl
pop
pop
and
int3
mov
adc
in
xchg
pop
bound
insb
xor
push
jbe
dec
aad
outsl
data16
jnp
mov
out
ja
lahf
or
mov
jbe
adc
cmp
aad
or
push
mov
scas
pop
cmpsb
cmpb
mov
jp
stos
and
das
pop
and
shll
and
xlat
enter
jno
ljmp
in
jbe
push
push
lret
sbb
push
je
sbb
into
lds
or
mov
lahf
sub
dec
pop
xchg
push
sbb
leave
or
adc
les
mov
daa
adc
loop
test
fisubrs
ss
fwait
loope
pop
ret
inc
lock
stos
lds
sti
in
jmp
lret
cltd
jg
les
ret
or
repz
sar
mov
xlat
pop
push
mov
cmp
and
ret
mov
int3
insb
xchg
jb
jae
repnz
inc
jnp
mov
mov
popf
dec
mov
movsl
loope
rclb
xor
xor
popl
add
xchg
pop
adc
or
adc
out
push
or
stos
xchg
ror
or
divl
das
dec
xchg
jle
mov
inc
push
xlat
sub
daa
mov
inc
bound
push
mov
xor
clc
cltd
push
and
or
psrld
pop
mov
or
push
and
xchg
cld
out
addr16
out
push
int
imul
dec
push
mulb
scas
mov
push
repnz
and
cmpl
pop
insl
and
sub
movsb
ds
xchg
pop
orl
std
cli
enter
in
adc
add
mov
pop
stos
inc
sbb
push
xorl
test
jbe
aas
push
jo
push
xchg
push
and
push
stos
mov
fistpl
pusha
in
imul
inc
ficomps
lahf
cmovae
sbb
stos
xor
subb
int3
push
in
adc
or
cmp
dec
movsb
mov
pop
mov
pop
imul
out
bound
test
shll
mov
mov
jno
cmp
jne
movsb
outsb
adc
icebp
xlat
and
push
les
sbb
sub
inc
cmpsb
out
pop
xor
cld
mov
call
inc
fadds
pop
in
push
mov
scas
or
rcll
adc
into
ja
or
fnstenvs
push
mov
mov
dec
adc
jnp
push
addb
pop
les
push
mov
sysenter
push
cmpsl
sbb
push
xchg
ret
lods
outsl
stos
ret
outsl
arpl
push
add
adc
into
inc
push
lcall
and
outsl
test
pop
sbb
movsl
push
push
mov
jle
mov
push
js
fwait
jp
push
std
roll
jns
dec
mov
and
jae
outsl
fcmove
in
sarl
mov
xchg
mov
imul
int
mov
out
or
mov
add
js
lods
push
adc
cmpsl
push
sbb
push
mov
ret
sub
cmp
inc
inc
and
pop
shlb
push
jmp
adc
jbe
addb
adc
cmp
inc
push
xchg
rep
pusha
rcrl
and
pop
das
outsl
test
fs
sbb
sbb
mov
sbbl
les
aaa
mov
bound
and
xchg
sbb
js
arpl
ja
pop
iret
jo
adc
outsb
cld
lahf
mov
mov
and
nop
mov
js
inc
dec
pop
jbe
fistps
or
out
in
pop
sarb
xor
jmp
dec
add
mov
addr16
mov
jbe
ficomps
pop
add
cltd
pop
ja
or
xchg
push
js
scas
stos
int3
pop
nop
movsl
aaa
dec
jne
adc
jl
arpl
and
movsl
xor
fldenv
push
xchg
test
or
adc
mov
push
xor
sti
cmp
push
int3
dec
push
pop
push
xor
dec
and
ficoms
fstps
imul
mov
int
inc
inc
bound
nop
push
pushf
adc
scas
and
mov
pcmpeqw
xchg
out
pop
push
int3
fdivr
lcall
shlb
mov
mov
mov
pop
push
mov
push
es
jecxz
dec
or
push
pushf
adc
popa
out
dec
lods
sbb
pop
lea
jns
mov
mov
aaa
mov
mul
mov
push
sti
loopne
pop
aaa
jecxz
and
cmpsl
fimull
add
sbb
cmp
cmpb
mov
xchg
negb
dec
cmc
sbb
jmp
mov
imul
movsl
cwtl
jecxz
adc
cmpsb
pop
mov
cmp
adc
out
pop
dec
not
iret
jle
sub
jns
inc
in
repz
dec
mov
sbb
fidivrl
adc
ljmp
xlat
push
pop
jmp
test
add
out
sub
stos
push
mov
push
mov
mov
stos
gs
shrb
test
and
mov
mov
lods
and
repnz
mov
pop
inc
das
jns
push
iret
xlat
pushf
mov
movsl
inc
loop
and
fidivrl
insb
sbb
xor
sarb
or
leave
sbb
bound
pop
negb
outsl
mov
cmp
jae
rclb
adc
push
fdivrl
popf
outsb
xlat
or
add
addr16
imul
into
dec
mov
ficoml
mov
mov
mov
dec
sahf
lret
lahf
xchg
lret
mov
xchg
bound
ljmp
insb
icebp
mov
bound
test
push
jmp
aad
data16
pop
fisubrs
shl
mov
test
cmpsb
cmp
cmp
mov
jle
jmp
ljmp
loope
decb
jnp
fiaddl
jp
mov
mov
in
xor
xor
and
jns
in
dec
out
lahf
cmp
negb
iret
inc
push
mov
pop
shrl
fstps
push
mov
cltd
adc
mov
sarl
push
cltd
mov
push
int3
in
cmp
int
jbe
dec
in
lea
cmpsb
jns
cltd
setae
add
or
ret
fistps
adc
call
dec
fnstsw
or
lds
pusha
scas
lea
test
adc
pop
orl
daa
mov
dec
mov
sti
insl
push
clc
mov
xchg
mov
pop
mov
or
sbb
add
enter
cmp
sub
xlat
pop
movb
lods
fs
leave
ror
icebp
lret
lock
or
aam
pop
sub
xchg
mov
xlat
mov
adc
ljmp
loopne
ja
test
lcall
seta
sahf
fwait
lret
stos
lret
scas
popw
xlat
or
cmp
fldenv
cmp
push
sti
scas
xchg
push
xchg
aas
pop
fxch
lret
fsub
dec
test
js
xor
jb
lret
outsb
sbb
call
sub
clc
les
jp
xlat
push
and
loop
ljmp
inc
rolb
xor
pop
outsl
jmp
subb
lret
jo
ret
mov
push
mov
lret
mov
lret
sub
add
sbb
addr16
sbb
gs
mov
sbb
lret
xor
sbb
lret
pop
sbbb
pusha
fwait
iret
xchg
cmp
inc
jae
rcl
push
lret
jb
sub
mov
sub
xchg
lret
sbb
and
fld
add
insb
lret
je
xor
lds
or
adc
lret
add
push
add
aam
adc
xchg
and
dec
std
jge
lock
icebp
popf
lret
pushf
aaa
push
cmc
inc
aad
add
jge
sbb
xchg
or
cmp
mov
mov
pop
pop
pop
xchg
std
fwait
pushf
or
scas
fidivl
inc
push
lret
imul
sub
lock
sbb
ss
adc
and
dec
lret
rorb
mov
leave
aad
inc
in
or
int
lods
sub
cmp
arpl
js
sarl
lret
sub
pusha
inc
dec
lret
popa
test
add
outsb
lret
fistpl
lret
adc
sbb
call
lret
cmpsb
lods
mov
aad
xchg
ss
sbbl
cmpsb
negb
roll
mov
dec
lcall
add
fwait
dec
xor
xchg
fstl
mov
dec
cltd
inc
rcrb
sti
addr16
stos
adc
mov
stos
push
movsb
adc
mov
stos
fsubrp
adc
stos
leave
or
lret
test
ret
mov
rcl
mov
leave
mulb
nop
xchg
jns
adc
mov
cld
lret
int3
sub
pusha
mov
lret
pop
jnp
flds
push
dec
lret
fucompp
insb
stos
mov
inc
pusha
aam
inc
or
inc
adc
add
mov
fldt
ret
pop
stos
cmp
insl
adc
into
arpl
popa
pop
ficoms
add
and
lret
inc
ja
aas
mov
lret
out
enter
mov
adc
fcmove
push
push
mov
xchg
notb
lahf
xlat
dec
mov
ret
scas
cmp
fwait
decl
push
ljmp
fadd
xor
lret
ljmp
push
dec
enter
mov
or
push
in
mov
call
lret
add
ficoml
test
pusha
pop
lahf
mov
inc
jle
enter
jbe
mov
dec
add
add
ds
lds
mov
sub
mov
xchg
adc
xor
jb
lret
es
push
cs
cmp
shlb
idivl
mov
cli
xor
mov
dec
or
imul
lret
lahf
jmp
push
jb
fstp
stc
je
or
lret
dec
loopne
dec
xchg
ljmp
sub
outsb
in
shrb
xchg
cli
fdivl
mov
push
cs
ret
pop
and
dec
aaa
mov
pop
rcll
push
cmp
ljmp
daa
lret
cmpsl
outsl
cmp
sub
sub
jmp
cmp
ljmp
call
std
lods
push
mov
fidivrl
push
xor
mov
rclb
je
lret
jno
push
xchg
add
cmc
mov
pusha
fcomps
int
aaa
outsl
icebp
cmp
fsubrs
loop
negb
pusha
fnsave
fisttps
aad
mov
push
lret
adc
push
cmp
fmuls
jno
lret
push
lret
addb
push
loop
imul
sbb
lret
cwtl
clc
in
sub
xlat
cmpsb
arpl
adc
repnz
sbb
push
xchg
lret
lock
or
shrl
sarl
or
ror
or
xchg
cmp
lds
adcl
test
sub
add
leave
push
jne
fbstp
fwait
sti
jae
shr
shlb
scas
push
or
lret
sub
cmc
lods
and
cwtl
test
lret
sub
dec
lret
inc
jae
imul
lret
mov
pop
xchg
xchg
jle
push
arpl
into
add
cli
icebp
mov
pop
lahf
ja
lret
and
adc
push
test
lret
xchg
cmp
pop
xchg
jp
xchg
mov
cmpsl
nop
outsl
lret
enter
add
mov
arpl
repnz
ss
xchg
fsubl
inc
jmp
jl
mov
leave
push
into
mov
cli
sbb
aad
mov
inc
loop
pop
sbb
jge
mov
mov
cmp
out
dec
cmp
imul
test
aaa
mov
and
xor
aam
loope
push
sub
scas
jle
sub
mov
jecxz
out
lcall
sarl
mov
and
mov
je
sub
pop
lret
fmuls
fs
mov
fst
int3
fwait
cmp
mov
roll
add
adc
cld
int
cmpsl
lret
mov
adc
sbb
daa
jge
mov
mov
inc
mov
insl
imulb
sahf
sub
xor
loope
jne
cmp
and
sub
inc
dec
lret
int3
sbb
prefetchw
or
sub
cmp
lods
in
jge
sbb
adc
mov
out
test
ror
add
addr16
ja
cs
jae
pop
clc
enter
mov
sahf
rorl
fdivl
lret
imul
into
sti
test
outsb
mov
add
fmull
rcr
dec
jl
mov
data16
mov
enter
push
or
add
sbb
and
xchg
int3
and
mov
mov
jp
sarl
mov
jbe
stos
dec
out
xchg
test
jb
out
jae
push
sbb
dec
xchg
mov
cmp
mov
cmp
lret
mov
xor
lret
loope
push
out
or
test
xor
lret
testb
and
cltd
mov
adc
jbe
rorb
dec
jge
or
mov
dec
xor
or
fnstcw
enter
push
lret
dec
fsubs
sbb
psubq
test
dec
pop
aaa
pushf
int3
cmp
cmp
ret
test
ret
fimuls
or
cmp
push
dec
stc
dec
push
xor
mov
ret
aam
subb
lods
lea
shlb
jo
and
jg
leave
lock
xchg
pop
and
jb
xchg
sbb
scas
ljmp
lret
inc
dec
mov
sub
stos
sub
cmp
fdivrl
mov
clc
or
mov
mov
sbb
lret
repnz
sbb
push
test
lret
inc
jbe
push
jae
daa
scas
mov
gs
pop
shlb
lret
rcrb
loop
shrb
scas
imul
arpl
lea
lret
push
xor
push
mov
xorl
in
xchg
lret
sbb
mov
hlt
pop
rol
jecxz
fists
or
jnp
into
outsb
ds
add
pop
jg
jle
lcall
divl
out
lret
das
pop
vmread
dec
pop
insb
insl
hlt
test
fidivl
pop
xchg
push
insl
lret
dec
pushl
outsl
cmp
mov
sub
aad
xor
add
pop
pop
cli
xlat
addr16
rcr
mov
adc
or
call
pop
std
sahf
adc
insl
adc
insl
xchg
or
outsb
or
dec
mov
jl
adc
add
test
adc
dec
push
xor
ja
jmp
sti
push
or
jns
lds
cmp
out
sbb
lcall
add
stc
sti
stos
and
xchg
and
cmp
lds
ror
dec
push
xchg
cli
mov
push
lea
jno
push
sarl
jg
clc
sub
push
mov
insb
movsb
xchg
inc
pop
movsl
pop
rorb
mov
adc
xchg
lock
gs
jne
xor
out
outsb
cmp
add
cmp
pop
jo
push
inc
mov
push
cmpsl
mov
add
fmull
xlat
pop
add
and
lods
jne
sub
add
sbb
xorb
jmp
dec
mov
scas
mov
jns
addr16
sbb
das
subl
aam
into
jbe
clc
iret
lcall
out
aas
cmpsl
outsl
mov
adc
push
pop
ret
repz
lcall
adcl
cmp
aad
xchg
jne
in
push
out
out
int3
inc
sbb
and
pop
jge
pop
mov
rolb
pop
jmp
xor
push
sbb
stos
lcall
pop
pop
test
dec
fdivr
out
roll
repz
mov
mov
jp
adc
movsb
jp
cld
sub
cmp
xor
dec
xor
xchg
push
adc
push
call
mov
xchg
rcrl
mov
sbb
sub
fs
pop
pop
mov
or
das
jne
mov
pop
ds
dec
xchg
xchg
out
or
inc
xchg
push
loopne
push
push
lret
mov
jg
repz
outsb
ljmp
inc
pusha
push
sbbb
pop
mov
or
in
push
mov
xor
or
out
mov
sbb
bound
out
arpl
sbb
aas
movsb
fcomps
cmp
xor
xchg
cltd
adc
mov
orb
popa
push
cmpsl
lahf
movsb
movb
dec
pop
mov
xor
mov
into
push
bound
push
call
and
mov
rorb
in
fs
push
mov
loope
xlat
jo
push
xchg
pop
pushf
or
pop
add
or
fbstp
xchg
sub
add
mov
jmp
mov
testl
mov
gs
sarb
out
jnp
repz
pop
lods
scas
lahf
pop
ljmp
sub
pop
fisttps
imul
lock
lahf
lret
shrl
jmp
into
in
sbbl
cmp
sub
push
cwtl
adcl
gs
pushw
cltd
int3
bound
jo
out
mov
rcrb
xor
aam
call
adc
loopne
pop
inc
mov
adc
loopne
outsl
enter
cld
cmp
out
or
ljmp
push
cmp
or
out
test
sub
mov
fs
inc
inc
dec
mov
push
scas
sub
into
jns
mov
or
mov
pop
jge
jmp
xchg
mov
sbb
cmpsb
fisttpl
inc
lcall
enter
pop
cmpl
xor
scas
and
add
cli
loop
add
outsb
adc
test
pop
scas
test
mov
call
in
es
or
imul
ja
ljmp
hlt
push
dec
lods
dec
lret
mov
or
xor
mov
sbb
pop
lret
mov
adc
nop
outsb
js
pusha
push
lds
jb
pop
jae
mov
mov
int3
lcall
leave
jge
fldcw
pop
xor
add
vmovapd
or
or
and
or
sti
push
pop
adc
adc
pushf
fstps
lahf
rorl
daa
leave
adc
stos
jle
dec
mov
mov
xor
push
push
aad
and
adc
xor
mov
in
pop
ret
aad
inc
ljmp
scas
inc
jb
or
fidivrs
sbb
mov
mov
ss
pop
mov
out
dec
orb
or
adc
clc
cmc
fsub
aaa
and
dec
mov
lea
jl
push
and
shll
out
pop
lahf
aas
inc
nop
addr16
xchg
cmp
dec
js
cs
add
cmpsl
sbb
cmpsb
movsl
mov
dec
fdivrs
mov
or
loopne
cmp
xor
mov
std
push
mov
ret
jle
and
insb
lds
sbb
lods
repz
sbb
mov
lods
inc
pop
sub
imul
sbb
iret
rcrl
ret
lea
push
popa
add
mov
out
jns
repnz
data16
xchg
xor
adcl
inc
lods
test
jp
movsl
dec
jp
insl
in
pop
adc
adc
jle
shr
xor
xchg
and
stos
iret
push
cmpb
cld
mov
iret
push
cwtl
clc
int3
mov
mov
adc
shlb
push
lret
call
dec
adc
inc
in
loope
loopne
dec
test
push
gs
rcll
pop
pop
repnz
repnz
jno
dec
iret
mov
cmp
xor
adc
out
cltd
call
rcll
inc
notl
je
cltd
loopne
and
dec
out
pop
mov
rcr
xchg
movsl
gs
inc
fiaddl
movsl
pushf
std
lret
ja
lret
push
icebp
adc
lret
jecxz
xchg
sub
jg
xchg
cltd
addr16
mov
rdpmc
pushf
jo
and
dec
mov
xor
xchg
in
stc
adc
mov
adc
sbb
dec
out
ja
pop
pushf
dec
adc
lock
or
add
mov
mov
sub
pop
pop
shlb
clc
push
lret
dec
xchg
pop
push
je
xchg
popa
mov
rolb
sti
dec
mov
insl
mov
je
das
push
mov
or
pop
mov
shlb
rcll
push
lods
pop
inc
add
cltd
imul
push
in
lds
push
mov
fnsave
loop
mov
mov
jp
cmpsb
gs
jmp
out
xchg
mov
rcr
mov
pop
out
or
add
push
or
jp
xor
add
jns
mov
push
mov
xchg
lcall
repnz
pop
scas
fwait
push
cs
mov
in
jae
outsb
xor
pop
add
loop
arpl
addr16
pop
mov
shll
ja
aam
push
add
mov
nop
mov
cmp
shlb
das
fsubrp
test
cs
push
or
in
lret
sub
int
loop
pop
rol
fiadds
mov
out
outsl
shll
test
push
hlt
aam
mov
jl
lea
xchg
mov
pusha
and
mov
fcoml
imul
mov
pop
icebp
rol
dec
dec
cmp
xchg
loope
mov
sub
leave
inc
mov
cwtl
pop
arpl
add
imul
push
sbb
nop
stos
dec
test
sbb
jle
rolb
pop
adc
je
push
fwait
mov
in
mov
fcmovnbe
ja
fcomip
test
lcall
jle
in
int3
sti
cmc
and
mov
sub
inc
bound
push
adc
fcom
jg
shr
push
cmp
dec
repnz
sub
aaa
xor
adc
fadds
insb
repz
or
push
arpl
imul
loopne
mov
mov
push
adc
out
pusha
sbb
pop
cmp
mov
fisubrs
mov
push
and
loop
xchg
or
jbe
and
xchg
add
fnstsw
push
pop
rorl
mov
sbb
adcb
lds
mov
push
cs
pop
lods
jmp
cmp
sbb
rclb
test
or
pop
sub
lea
jae
adc
inc
mov
shlb
jmp
test
inc
xchg
lods
pop
loop
xlat
mov
sarb
jle
rorl
xchg
pop
add
jecxz
mov
dec
and
push
or
adc
sbb
test
jl
dec
pop
sbb
dec
mov
and
into
addr16
es
pop
xchg
adc
cmp
inc
clc
loopne
cmpsl
pop
or
xchg
data16
sub
stos
ljmp
cmp
pop
mov
dec
add
loop
ret
repz
add
push
sub
xchg
inc
es
frstor
xchg
jle
or
sarl
mov
mov
add
or
push
sub
xor
push
jle
mov
push
mov
xchg
adc
cli
rolb
mov
add
aad
out
or
test
mov
mov
adc
das
mov
jbe
push
or
pop
ljmp
shrb
xor
outsb
cmp
inc
push
xchg
aad
pop
add
outsb
mov
adc
jns
sub
or
sub
mov
sbb
adc
int3
int
push
lea
and
aad
lods
or
insb
jno
sub
inc
dec
clc
push
sbb
test
mov
jo
ja
push
push
outsb
mov
inc
inc
mov
movsb
dec
scas
adc
xor
jns
lock
sbb
sub
movsb
push
mov
jmp
pop
rcr
ja
aaa
rclb
sarb
xchg
test
fsubs
pusha
jmp
mov
das
dec
sbb
repz
scas
mov
sarb
mov
push
or
xor
es
mov
lret
lahf
mov
add
and
lahf
add
cltd
push
cmp
daa
jmp
or
inc
pop
scas
ljmp
cmp
push
cmp
lret
pop
mov
mov
ret
fisttps
aam
ret
cmp
push
aaa
out
sub
xor
dec
lret
rcrb
pop
std
inc
jns
loop
into
xchg
mov
aam
fisubrl
data16
lock
in
sti
mov
jl
fs
jg
dec
cmc
cltd
fmuls
mov
dec
add
mov
mov
out
outsb
clc
push
mov
push
xchg
sbbb
xchg
addr16
xchg
sarl
push
pop
fsubr
pop
push
rorb
insb
lret
jne
sub
cmp
nop
push
jnp
or
scas
push
test
sub
ss
xchg
pop
sti
jmp
int3
or
xor
in
sbb
mov
inc
lock
outsb
ficompl
or
mov
int3
mov
lock
iret
mov
jbe
adc
pop
cwtl
and
inc
das
divb
xor
jno
dec
arpl
bound
sub
pcmpeqd
movaps
ds
jle
xchg
dec
xchg
fsubs
lret
add
mov
mov
xchg
pop
fdivs
mov
push
outsl
and
push
rclb
in
dec
and
jno
jmp
es
test
jb
jge
rcrl
daa
fwait
jecxz
sahf
into
pop
adc
mov
ror
cmpsb
jbe
mov
cmp
or
into
jnp
pop
ror
mov
inc
jl
lret
hlt
adc
or
or
xchg
xlat
ds
lret
mov
in
das
push
dec
and
cmp
cli
inc
or
call
rcl
xlat
je
mov
cmp
cli
into
insb
and
lret
xlat
cmp
lret
inc
add
scas
dec
shll
js
xchg
mov
gs
xchg
push
movl
jae
repnz
std
into
movsl
or
mov
fcomp
add
pop
insl
lret
fildll
loope
and
pop
sub
mov
sub
xchg
cmp
aam
fimull
cmpsl
mov
ss
add
lods
adc
enter
in
dec
faddp
out
lahf
add
mov
push
in
loope
vmovlps
push
xor
add
mov
dec
flds
popa
xorb
push
insl
loope
lret
pop
sub
lds
repz
aam
gs
mov
add
lret
scas
popf
dec
or
gs
mov
mov
xor
push
inc
pop
mov
mov
rcr
in
pop
mov
jnp
lahf
dec
lret
jmp
sti
in
mov
jbe
xor
lret
enter
inc
or
mov
jo
push
pop
cltd
adc
clc
cmp
add
push
mov
mov
lea
xchg
cwtl
aam
test
fadds
in
adc
dec
jbe
lret
movsb
hlt
or
push
dec
adc
inc
jle
push
rcrb
enter
pop
lret
xchg
ficoml
call
sbb
adc
dec
xchg
lret
and
jno
sub
popa
push
lret
mov
popl
jge
lret
stos
das
push
imul
cltd
mov
inc
int
add
push
out
cwtl
sub
popf
aas
inc
out
rorb
fwait
sbb
pop
push
into
adc
push
into
movsl
imul
add
lret
add
lret
sbb
push
push
push
outsb
pop
push
jmp
jecxz
xchg
cmp
jp
jbe
shr
ss
lret
sub
int3
ljmp
into
enter
xchg
mov
cltd
mov
in
dec
out
sub
pop
stc
jno
jo
lret
ja
dec
test
shlb
fidivl
ficompl
fcoml
push
and
push
js
sub
push
sub
add
dec
shl
sub
jge
fcomps
push
in
pop
jle
mov
lods
xor
lret
sbb
add
mov
gs
popa
adc
cmp
test
rcrl
daa
jmp
jo
aaa
mov
sub
and
lret
mov
pop
fistpl
pop
sub
loopne
call
lods
and
std
pop
and
inc
push
cli
pushf
imul
stos
in
or
sahf
iret
pop
pop
jb
and
cmp
push
cmp
xchg
xchg
fsubr
mov
dec
dec
pushf
dec
les
adc
adc
push
inc
and
icebp
lret
xchg
shrl
daa
pop
cmp
rcl
xorl
push
call
inc
add
sbb
add
lret
jns,pn
fwait
imul
scas
movsb
push
add
jmp
cmp
jle
js
xchg
inc
outsl
aas
mov
push
int3
jp
ret
bound
lods
hlt
aaa
mov
lret
sbb
pop
cmpsl
cwtl
lret
mov
adc
bswap
xchg
scas
in
inc
mov
popf
cmc
popa
xor
and
sbb
sub
lret
dec
inc
mov
sub
stos
sarl
lret
add
cli
out
dec
adc
push
mov
filds
add
shll
into
ret
cmpsb
pusha
dec
pop
mov
aad
pop
imulb
cli
lret
or
jmp
repnz
loopne
mov
into
addl
dec
ret
push
jmp
mov
aad
popa
lret
add
nop
mov
mov
ds
lret
xchg
fisubs
pop
inc
mov
mov
jg
shrl
xlat
fwait
repz
js
rcr
or
dec
rcll
shlb
xor
pop
push
pop
out
add
sbb
sub
imul
addr16
jbe
lret
or
imul
lret
xchg
and
pop
mov
rcrb
lds
cmp
out
pop
mov
popa
push
jnp
shl
xlat
movsl
add
aam
loop
jb
or
cmpl
rclb
and
cs
stos
mov
nop
daa
int
call
and
mov
jno
fadds
sub
xor
or
fstpt
mov
scas
mov
cmc
dec
movsb
mov
loop
das
outsl
lret
push
iret
jl
jno
jp
push
imul
mov
mov
add
xor
fmul
nop
ret
xor
lret
mov
mov
mov
stos
mov
mov
cmp
iret
adc
popf
lret
sbb
insl
sub
lret
xorl
push
add
xor
clc
and
in
lret
jmp
stos
or
cwtl
lret
xlat
mov
cmp
stos
push
sti
cmpsl
loopne
mov
insb
sbb
or
es
xchg
and
lret
mov
out
data16
inc
rcr
inc
ja
xlat
mov
or
and
in
insl
mov
ljmp
lds
ljmp
loope
arpl
jno
mov
lret
mov
mov
mov
rcrb
imul
ljmp
fwait
test
sti
shrw
sub
or
mov
inc
jb
pop
lret
daa
mov
xchg
out
ffree
lea
fildl
aam
push
pop
imul
jmp
lods
insl
cli
xor
inc
cmc
imul
lret
push
sbb
jmp
dec
lret
add
cwtl
mov
lret
out
ja
mov
loope
inc
xchg
rcr
addr16
push
mov
into
pop
dec
sbb
mov
movsb
push
adc
divb
inc
push
cli
cmpb
test
xor
adc
out
mov
in
lret
or
xorb
out
push
cld
mov
inc
mov
mov
adc
lret
cmp
hlt
xchg
orb
std
ds
mov
ret
repz
xchg
cmp
mov
popa
mov
or
push
insb
inc
out
lcall
ficompl
mov
xor
add
push
scas
lds
push
enter
es
das
cmpsl
xor
lret
in
push
fwait
into
jp
jnp
cwtl
cmpb
es
mov
inc
decb
pop
fcom
pop
out
or
xchg
sti
imul
push
lods
inc
jae
jae
popf
scas
loop
mov
mov
jo
pop
bound
out
rep
cli
call
mov
jns
cltd
adc
aam
mov
xchg
fisttpl
lret
nop
lods
inc
dec
addr16
jp
int3
push
iret
mov
jecxz
lret
fistpl
movsb
cltd
in
lret
inc
test
out
data16
mov
mull
sbb
cmp
dec
fstpl
int3
jbe
daa
cltd
lret
mov
adc
enter
push
adc
mov
push
inc
popf
iret
inc
rolb
fstpt
lret
sti
jg
shl
or
hlt
pusha
shlb
xor
frstor
and
daa
fcmovnbe
inc
rcrl
and
push
mov
mov
rolb
imul
out
lret
test
mov
icebp
and
pop
fdivrs
das
jg
outsb
inc
pop
out
lret
repnz
lret
mov
int
pop
inc
movsl
dec
js
jno
cmp
and
jl
mov
rolb
divl
lret
fsts
idivb
pop
test
fldcw
loope
iret
daa
push
outsb
mov
shlb
push
xchg
push
xor
or
out
daa
and
push
xchg
scas
push
cmp
mov
jnp
lret
nop
movsl
cwtl
call
jg
cmp
aam
or
pop
imul
push
inc
adc
lret
and
lret
jno
sub
sarl
inc
mov
pop
es
int
or
loopne
or
lea
add
lret
or
fucomip
mov
lret
stos
push
pop
add
lret
lods
xor
fdivrs
stos
mov
aam
lcall
cmp
call
push
fstpt
fcmovu
enter
lock
in
nop
into
insl
or
ja
inc
imul
cmp
jle
sub
push
xor
dec
stos
iret
fistpl
jbe
cld
xchg
cmp
xor
test
xchg
sub
push
pop
sub
jp
lret
mov
cs
push
into
or
aad
push
mov
lret
imul
add
cmp
dec
pop
insl
lret
cmc
xchg
sbb
pop
fidivrl
xor
mov
push
lret
add
jp
test
fisubl
xchg
mov
pop
or
mov
xor
dec
lret
push
insl
and
dec
fildl
push
sub
fisubl
cmpsb
push
fstl
stos
jl
push
or
jbe
not
xor
adc
xchg
pop
lods
sub
lret
mov
scas
ds
addr16
inc
push
sbb
jns
lods
sbb
mov
xlat
ret
fwait
jmp
lret
loope
lea
xchg
sbb
inc
imul
sub
sbb
pop
lret
sub
jns
lret
sarb
repnz
add
pop
movsl
mov
xor
push
inc
pop
mov
add
shrb
lret
cmp
mov
loope
push
movsb
jg
in
push
cmp
mov
mov
stos
xor
lret
sti
or
lret
push
sbb
sub
fdivl
rcl
mov
jno
add
xchg
lret
stc
dec
adcl
cmp
pop
fdecstp
mov
out
pop
xchg
and
cli
cmpb
push
sbb
cmc
sub
sub
dec
mov
fcmovnb
jo
outsb
ficoml
mov
adc
lret
iret
pop
inc
push
add
mov
xchg
ds
cmpsl
mov
fiaddl
push
push
xchg
lods
sbb
cmp
and
ret
ret
dec
inc
cmp
lods
adc
lea
jae
js
lcall
push
movsl
mov
push
xchg
test
adc
lret
mov
data16
scas
xchg
pop
push
ja
dec
loopne
inc
iret
fmuls
cli
lret
pop
imul
add
mov
or
fdivp
mov
inc
pop
out
out
inc
lret
xor
into
push
fxch
enter
mov
aas
pop
lret
fs
adc
sbbb
out
hlt
cmc
mov
push
mov
fnstenv
sbb
adc
xchg
ss
lret
mov
and
lret
push
lret
dec
fnstcw
or
sbb
push
lods
pop
loope
rcr
sbb
and
in
lcall
cli
cmpsb
lret
test
push
lret
aaa
stos
cmp
repnz
lret
cmpsb
ss
lret
ds
int
jns
loopew
stc
mov
fs
fwait
and
jmp
test
repz
cli
movsw
add
push
mov
lahf
sub
mov
mov
dec
imul
mov
mov
popa
sub
push
pop
push
push
push
jmp
mov
lret
sub
incb
xchg
cmp
movsb
stc
test
inc
and
jmp
pusha
sub
stos
fdiv
es
popf
repz
inc
mov
mov
scas
sbb
loope
out
pop
test
adc
jb
aaa
shlb
xchg
xchg
pop
sbb
adc
add
popa
jmp
rcrl
pop
in
in
jmp
incl
movsb
lret
test
imul
cltd
jb
stc
ret
int
add
setg
inc
cmp
addr16
notb
hlt
push
rclb
or
inc
aaa
push
loop
int3
pop
inc
dec
lret
mov
cmp
xchg
mov
std
pop
lret
fsubrl
lret
and
mov
mov
and
push
lret
test
adc
sub
int3
cwtl
push
cli
fs
lret
hlt
rcrb
mov
jo
or
adc
xchg
dec
test
adc
aas
mov
lret
mov
out
ret
lret
dec
pop
mov
mov
fcmovb
lret
jmp
addb
jbe
inc
xor
sub
out
cltd
scas
aas
or
jl
insb
movsb
or
lret
test
clc
cmp
sub
jp
lret
sbb
cmpsb
cs
fcomip
rorb
iret
sub
mov
xchg
fidivl
lret
mov
pop
stos
and
cs
inc
lret
lret
movsl
dec
jp
das
pop
jle
mov
out
jb
inc
xor
fidivrs
push
xchg
in
test
bound
adc
mov
sub
pop
adc
es
xor
or
shrb
push
imul
sbb
gs
vcomisd
stos
fwait
push
int
mov
test
movsl
mov
cld
sbb
ret
mov
sbb
stc
pushf
pushf
pop
push
les
push
jg
push
in
sarl
add
hlt
xchg
cwtl
cs
sbb
into
pop
mov
imul
out
lock
pop
movsb
xor
jns
jmp
dec
jo
sbb
or
mov
imul
push
cld
cmc
in
push
push
sbb
pop
fsubrs
mov
shlb
and
cli
pop
icebp
fsubrs
out
jae
cld
and
clc
mov
and
sbbb
adc
rcrb
jle
jl
cmp
pop
xorb
jo
adc
adc
jle
sub
pop
and
jb
xor
sub
ljmp
push
lds
lock
dec
pop
mov
aad
call
mov
or
aaa
rolb
arpl
and
mov
cmpsl
rclb
xor
test
hlt
outsb
cmp
mov
enter
mov
mov
dec
push
pop
sbb
test
aaa
mov
push
mov
cmc
into
pop
inc
push
cmp
ficoml
cmpsb
push
jge
and
push
jp
rcrl
xchg
push
pusha
mov
pop
add
mov
out
jge
xchg
les
xor
test
and
imul
daa
fldt
fxch
lock
sti
xchg
fwait
or
push
sub
in
mov
dec
dec
cmpsb
test
ljmp
inc
test
js
leave
adc
pusha
and
in
mov
xchg
mov
mov
push
fbld
mov
sbb
cmpsl
jle
lret
xchg
stc
movsb
imul
sahf
cmp
push
fdiv
pop
int3
mov
jbe
adc
dec
mov
sbb
ret
mov
push
data16
jmp
pop
jne
mov
ret
and
shlb
sub
mov
push
dec
add
int3
sub
mov
rorb
ja
lea
sub
lds
push
or
add
mov
xlat
xchg
and
jmp
aas
jns
and
sub
lret
sbb
mov
cmpsl
ja
in
jae
lret
stc
xor
scas
pop
cmpsl
sarl
mov
dec
shlb
sti
imulb
jb
test
mov
pop
push
rcr
xchg
mov
jg
fwait
cmc
js
rcrb
mov
push
pop
jb
cmovne
cli
mov
cmpsl
clc
ljmp
and
leave
data16
pop
jo
mov
cli
adc
shrl
shl
ljmp
test
stc
in
pop
jg
fs
movsb
fsts
rcrb
test
fdivl
mov
dec
lds
push
lock
scas
cltd
push
push
mov
fcmovnb
fimull
gs
mov
je
inc
das
pop
subb
pop
scas
les
lds
scas
mov
test
pop
and
xchg
pop
pop
inc
imul
xchg
leave
aas
aaa
pop
leave
push
cs
pop
rcl
ret
adcl
xor
test
sbb
xchg
jns
push
ds
daa
xchg
xacquire
xlat
hlt
movsl
xchg
dec
mov
push
mov
cmpsl
lds
jnp
aas
int3
out
jb
cmp
mov
je
push
in
dec
fisttpl
insl
jb
jne
lahf
cmc
mov
push
xor
pop
int3
popf
stos
push
xlat
or
mov
ljmp
jg
movsl
jno
or
cmp
adc
stc
sub
pop
pop
out
and
cmp
out
jmp
fiadds
push
cltd
mov
out
mov
outsb
aaa
leave
fsubrl
icebp
mov
xchg
lcall
das
sbb
int3
mov
dec
or
cmp
shlb
lahf
std
pop
popf
shlb
dec
pop
data16
jecxz
in
adc
push
sbb
xlat
xorb
jmp
popf
sub
sbb
fnsave
push
adc
arpl
test
push
sbb
pop
fsubl
jp,pt
push
mov
aam
data16
mov
mov
pop
dec
dec
and
lcall
and
xor
push
and
mov
dec
data16
sub
dec
push
test
dec
add
sbb
mov
test
sbb
cmc
into
mov
xor
lret
push
mov
aaa
cmc
repnz
mov
pop
loop
shlb
inc
xchg
jno
aaa
leave
push
stos
push
inc
out
xchg
insb
inc
lods
jg
cmp
cmpsl
lahf
enter
or
into
outsb
mov
pop
ljmp
pop
sbb
xchg
dec
sub
xor
into
sbb
adc
sbb
in
pop
fwait
sub
push
mov
addl
adc
dec
pop
out
or
xchg
add
inc
lret
mov
add
test
and
in
shll
adc
cmp
and
adc
pop
add
cwtl
xlat
out
sbb
lahf
pop
lds
push
test
cmp
dec
sbb
inc
or
lahf
addr16
add
pop
add
icebp
xchg
mov
rcrl
push
shr
jmp
sub
xchg
cmpsl
cwtl
outsl
lock
cmp
mov
mov
adc
xchg
xchg
sub
lods
push
dec
cmpsl
in
aam
inc
jge
inc
in
add
xchg
add
repz
push
sub
pop
je
push
cmp
pop
sub
negb
das
iret
cltd
out
sbb
mov
cmp
push
xchg
in
mov
icebp
pop
iret
loope
das
lds
jmp
push
pop
pusha
dec
movsb
movsb
fimull
jmp
pop
stos
int3
dec
insb
xor
push
cmp
int
rcl
movsl
xor
jbe
loop
push
sti
insb
push
enter
inc
int3
pushf
lock
in
pop
sbb
data16
sbb
int3
js
lahf
ret
mov
add
and
mov
mov
fstpl
std
js
ret
xchg
std
adc
xor
pop
add
out
test
pop
jle
subb
mov
test
xor
mov
dec
clc
push
xchg
iret
sbb
ljmp
push
or
add
xchg
fbld
rorl
pop
loopne
pusha
inc
adc
sbb
sbb
push
mov
and
mov
cmpsl
or
bound
adc
fimuls
aas
dec
pop
push
mov
out
or
repz
push
cltd
push
dec
push
mov
cmp
jecxz
jg
pop
mov
push
add
pop
and
loopne
dec
int3
mov
jbe
je
sub
aad
rclb
sbb
dec
in
adc
adcl
jmp
out
int3
cmp
mov
and
sbb
cmc
mov
and
inc
add
or
push
inc
mov
push
or
lods
insl
andl
mov
jmp
push
cltd
pop
lods
js
lea
cmp
shrd
xchg
mov
cmp
and
xchg
pcmpeqw
dec
mov
mov
mov
inc
mov
testb
aas
push
mov
dec
push
rorb
bswap
jmp
xor
jbe
mov
add
adc
mov
aad
lds
das
sub
jge
mov
ss
pop
dec
fwait
mov
int3
cld
or
das
popf
ljmp
fcomps
mov
aam
pop
dec
jo
rol
loope
out
xlat
or
dec
outsl
mov
mov
fwait
jle
mov
scas
rcrl
and
add
push
push
std
movsl
cmp
pop
in
sar
into
pop
mov
or
mov
mov
push
mov
mov
scas
out
nop
sarl
out
out
fwait
rorb
fnclex
pop
mov
jmp
jne
mov
xor
or
ljmp
xor
movsb
adc
rolb
push
xchg
mov
cmp
out
or
jp
adc
sbb
dec
out
movsl
dec
or
popa
mov
inc
imul
pusha
lds
fdivp
xchg
mov
xchg
sbb
lahf
jge
sbb
push
push
sbb
or
jns
outsl
hlt
outsl
mov
mov
or
test
xchg
add
call
into
je
js
mov
fimull
ret
iret
inc
ja
inc
push
or
aas
jno
push
pushf
rolb
mov
xor
aas
sub
or
inc
adc
dec
arpl
dec
es
repnz
pushl
mov
cmpsl
xor
sbb
push
test
sbb
fisubrl
out
xlat
lea
pop
bound
into
xchg
test
outsb
fcomip
test
lret
xchg
push
repz
cli
xchg
test
adc
mov
in
icebp
push
test
pop
insb
mov
ret
test
and
clc
iret
or
pushl
sbb
cmp
push
repnz
and
les
rorl
xor
insl
push
pop
sbbb
cmp
addl
outsb
cwtl
add
jae
out
outsl
mov
aas
sbbb
mov
fnsave
mov
aam
outsl
bound
jmp
add
mov
cli
sub
outsl
sub
ja
jecxz
or
cmp
jno
imul
xchg
loop
xchg
add
and
test
es
sub
idivl
pop
cmp
mov
and
movsl
movl
xor
jbe
loop
mov
dec
cmp
imul
jns
pop
ret
mov
cmc
fldcw
push
push
lret
mov
pop
les
inc
lds
dec
inc
and
or
xchg
or
adc
ja
or
scas
lods
js
clc
ret
cmc
xchg
sti
dec
in
or
repnz
das
leave
cmp
push
push
fmul
jle
lds
fimuls
je
mov
add
out
adc
in
push
jle
pop
and
scas
sbbl
push
push
adc
imul
adc
hlt
mov
imul
sub
sub
jmp
rcll
sbb
dec
cmc
js
mov
das
pop
adc
test
jmp
and
rcll
inc
sbb
push
cli
inc
mov
adc
mov
fsub
fldenv
iret
push
push
test
mov
pop
inc
or
dec
pop
mov
mov
xor
out
in
hlt
mov
test
jp
ljmp
sti
daa
rcl
mov
xor
pop
cmp
ss
add
int3
jae
into
test
xor
fst
lock
ficomps
sub
es
and
push
popl
imul
add
test
stos
xchg
push
out
xor
jecxz
ret
jne
and
loopne
jl
xchg
jbe
sub
int3
sub
push
into
lahf
mov
and
testb
add
mov
push
sbb
lret
or
lret
jmp
add
dec
fstpl
addr16
dec
dec
and
out
mov
ljmp
incl
inc
lret
pushf
sub
mov
jne
add
lods
lea
push
int3
out
mov
bound
test
mov
jo
adc
testb
cmp
mov
adc
fsubrp
sub
ficomps
in
push
jp
dec
mov
pop
pop
lea
sub
cmp
mov
mov
xor
les
cmp
sbb
mov
out
shl
fisttpl
stos
inc
inc
dec
mov
mov
jecxz,pt
scas
pop
dec
mov
xchg
pop
loop
imul
inc
dec
inc
or
cmc
mov
inc
sbb
js
daa
sub
and
cmpsl
shr
scas
out
jnp
mov
mov
out
cmc
sub
fidivrs
jl
movsl
sarl
or
pop
inc
add
int3
jp
cmp
imul
jo
mov
push
xchg
ret
jmp
push
shrl
xor
inc
into
xchg
iret
jge
aad
shrb
subb
stc
hlt
xchg
xor
rcrb
xchg
leave
hlt
xlat
scas
cmp
fs
shlb
add
ljmp
sbb
jns
push
negb
xchg
push
sbb
mov
ljmp
adc
push
test
test
shll
movsl
scas
push
push
mov
mov
mov
xchg
adc
add
mov
push
mov
add
pop
sbb
lds
push
lods
fisubs
in
push
fcmovnu
pop
sbb
jae
into
adc
push
push
out
adc
mov
jmp
notl
lds
es
cmc
shl
loopne
lea
cmp
sub
jp
push
pusha
das
lahf
jl
das
outsb
xor
or
pop
out
stc
popf
in
or
pop
shrb
sub
jns
jg
into
aas
xchg
fidivrs
pop
call
mov
or
rcrb
mov
push
add
pop
repnz
and
stos
ficoml
dec
lret
test
js
push
sahf
insb
push
idiv
jp
jne
out
hlt
cltd
xor
inc
std
cmc
jne
jle
aad
push
xchg
fbld
or
mov
pop
fistpll
shlb
xlat
mov
fidivs
jmp
push
stos
pop
and
and
cmpsl
outsl
and
cltd
dec
cld
lahf
sbb
ss
iret
push
test
mov
lahf
cwtl
loop
fnstcw
and
add
jecxz
imul
into
jbe
mov
in
bound
xchg
mov
jmp
mov
mov
sbb
sub
push
test
mov
lods
int3
mov
push
sti
mov
inc
dec
jp
inc
movsl
pop
mov
packssdw
dec
mov
cltd
mov
jg
mov
push
into
mov
mov
cmp
andl
scas
and
push
jbe
cld
lahf
in
push
cmp
mov
cmp
outsb
in
push
iret
adc
repnz
pop
xchg
mov
dec
cmp
sub
adc
push
mov
xchg
push
in
jno
add
or
pop
jae
ljmp
ss
ret
xor
jle
bound
or
mov
inc
xchg
maxpd
xor
ret
lds
add
cltd
adc
jno
adc
and
pop
int
mov
call
jp
fbld
fcmovu
xchg
add
push
sub
pop
and
xchg
inc
out
push
mov
xor
pop
push
ljmp
daa
out
test
es
push
or
mov
inc
cmp
sub
sahf
and
sub
pusha
dec
dec
js
cmc
lret
push
xchg
push
into
jmp
call
push
loop
jne
cmpb
data16
mov
inc
ret
into
pop
out
pop
dec
bound
fbld
xor
xor
push
int
push
fmull
movsb
jo
rolb
mov
xchg
pop
mov
test
push
fs
sub
push
push
mov
xorb
cmp
call
lret
std
xor
repz
cmp
rorl
cli
mov
call
jns
push
icebp
adc
repz
mov
bswap
negb
fwait
sub
mov
test
dec
xlat
sbb
ret
adc
cmp
inc
mov
jbe
fidivrs
adc
shrb
add
ljmp
insb
jnp
jne
adc
pop
scas
mov
lods
inc
sub
add
jmp
subl
repz
rcrb
adc
bound
mov
jne
rolb
jns
ret
popf
inc
addl
sub
test
clc
in
jg
je
mov
mov
sub
stc
clc
movaps
inc
outsl
push
stos
xor
and
mov
cmpsl
jp
pop
ret
xchg
leave
fadd
subb
xchg
mov
lods
into
mov
shll
xor
dec
ficoms
pop
jp
lods
fmull
push
scas
test
sbb
inc
in
adc
ljmp
jle
mov
fwait
adc
cwtl
push
cmp
aaa
jne
sbb
stos
pop
in
dec
gs
or
xor
mov
sbb
fiaddl
outsb
push
push
shl
pop
pop
repz
negb
inc
and
inc
sub
pushf
dec
pop
and
cmp
push
fsubl
mov
jne
pop
insl
jmp
rcrb
pusha
cmpsl
jo
cmp
xor
push
cld
mov
je
lret
rolb
pop
mov
fs
das
mov
lods
sub
jmp
aam
jns
iret
mov
sub
inc
outsb
push
dec
adc
cltd
or
pop
sub
cmp
inc
mov
dec
movsb
daa
inc
cmp
out
dec
cmp
sbb
add
sbb
cmp
fcomi
insl
pushf
push
adc
cmp
aam
jecxz
jae
cmp
mov
mov
cmp
in
leave
mov
leave
jns
sbb
jg
mov
dec
loopne
rorb
rcrl
fcomps
shlb
push
mov
or
leave
cmp
pop
jp
pushf
sub
pop
dec
sbb
sub
xrelease
mov
sarb
test
inc
cmp
jmp
test
imul
mov
mov
cmovb
sub
and
adc
enter
test
xor
imul
lret
jg
push
stos
jmp
adc
mov
jle
rorb
into
ljmp
add
cmp
js
lret
mov
repz
popa
test
and
shll
pop
iret
in
add
xchg
lock
sub
cltd
test
xor
push
inc
jno
scas
jno
das
mov
jle
push
and
mov
xchg
push
or
mov
pop
scas
push
jp
dec
cmc
hlt
or
push
xchg
lds
inc
or
cltd
lods
cltd
and
inc
adc
iret
les
arpl
xchg
push
out
inc
cmpsb
mov
in
add
das
pop
sub
xchg
or
addr16
out
sub
inc
cmpsb
inc
aam
out
ret
or
pop
cmp
xchg
int
pop
in
loop
leave
xchg
cmpsb
cltd
rep
push
in
cltd
cli
jg
mov
jle
out
int3
fs
lahf
inc
ret
fbstp
shrb
xchg
inc
outsb
seta
enter
aaa
mov
ljmp
inc
jmp
stc
lds
jne
int
hlt
sar
in
dec
shll
push
inc
xor
repz
mov
scas
pop
aam
push
test
pop
sub
pop
sbb
jno
sbb
and
push
push
sub
shl
pop
add
xchg
fimuls
push
xchg
lods
jns
pop
scas
mov
out
js
inc
mulb
push
loope
out
cmp
xor
and
ficomps
popf
ljmp
jle
sub
cltd
in
or
cwtl
lds
test
daa
ljmp
pushf
jmp
pop
mov
pop
jns
iret
aad
lret
mov
inc
mov
scas
hlt
dec
pop
shrl
inc
repz
jno
ss
ror
lcall
or
dec
push
call
cs
cltd
out
cmp
jnp
popa
rorl
mov
or
mov
in
cmpl
mov
pop
add
in
das
outsl
movhps
pop
pop
scas
aaa
xlat
jae
sub
push
push
pop
push
cmp
mov
cwtl
repnz
cmp
and
push
dec
mov
mov
fcmovnb
inc
sbb
dec
lock
daa
stos
push
addr16
push
mov
leave
sarb
sbb
fidivl
sbb
sub
sub
imul
mov
popa
repz
adc
mov
push
ret
pop
insb
repnz
pop
mov
mov
bnd
jl
fnstcw
ret
shll
sbb
inc
out
test
loop
xchg
add
cmp
mov
mov
xor
xchg
xchg
push
and
lea
jo
test
divl
sarl
sub
mov
push
cltd
push
push
and
lods
rcl
lds
xchg
and
push
js
xor
or
movsb
mov
inc
mov
cmp
mov
sub
fcompl
lods
shlb
xchg
push
fadds
push
or
shlb
jge
dec
lcall
mov
push
int3
nop
adc
pop
mov
repz
push
jle
sub
addr16
ds
mov
inc
dec
stc
bound
adc
lds
js
fidivl
imul
inc
repz
xchg
pop
ss
pop
sbb
pop
dec
rorl
cmp
aad
mov
ja
mov
cmp
fisubl
push
orb
pop
xchg
pop
aas
adc
mov
push
mov
outsl
adc
std
mov
jg
mov
adc
sarl
fadd
fs
jmp
ficoms
test
jno
adc
jp
out
pop
or
je
pop
insb
fmull
out
xchg
mov
add
mov
js
xchg
cmp
push
or
lahf
addr16
pushf
add
or
xlat
test
xchg
mov
dec
test
imul
dec
gs
imul
sbb
sarb
les
push
mov
push
sar
sbb
mov
inc
arpl
test
cmp
in
mov
stc
aas
pop
outsl
sbb
add
arpl
movsl
outsb
xor
push
scas
into
and
lret
or
outsb
pop
das
dec
xchg
pop
sbb
add
pushf
or
cld
push
xor
sbb
fidivrs
push
out
or
insb
fdivs
inc
insb
pop
data16
inc
dec
mov
setle
push
dec
push
inc
cmpsl
call
aas
hlt
test
lret
cmp
lret
push
sbb
pop
lret
in
jnp
lods
out
fsubs
outsb
bound
jo
addr16
fcomip
lret
mov
enter
sbb
bound
lret
cmpsb
adc
lods
cwtl
lret
or
int3
sub
int
outsl
imul
lret
mov
mov
jmp
ja
shr
push
sub
sub
int3
add
mov
mov
gs
jmp
push
cmp
int3
pop
push
aas
add
jmp
push
cltd
xor
std
lret
outsb
stos
dec
jle
dec
jno
mov
jmp
xchg
pop
cwtl
ljmp
push
bound
fcomps
cli
xchg
jb
into
loop
sub
sahf
lret
sbbl
icebp
mov
or
sbbb
movsb
das
repz
push
sub
adc
add
mov
cmp
sub
lret
js
and
pop
mov
lret
ljmp
fbld
inc
cmp
and
xor
cltd
fsubr
testb
pop
lret
rcrb
xchg
leave
dec
jmp
repz
fisubl
je
cmc
adc
addr16
into
arpl
loope
cmp
inc
xor
add
mov
add
inc
cli
cmc
jge
jnp
xlat
shrl
sarb
lret
jmp
fcmove
pop
notl
ret
push
xchg
sbb
loopne
jo
inc
enter
xchg
mov
gs
aas
push
rclb
sti
lret
in
inc
leave
in
cmp
pusha
and
mov
xchg
push
fmull
pop
cmova
clc
lods
int
scas
jbe
stos
cmp
out
aam
xchg
sub
mov
outsb
push
mov
ffreep
ficomps
and
test
jp
jmp
push
or
stos
pop
hlt
shlb
lret
lods
mov
sub
sub
add
fs
xor
js
or
sub
xchg
ss
jne
push
inc
xchg
dec
lods
xor
mov
jl
sub
cmp
lret
dec
outsb
sbb
push
rolb
xchg
sbb
lret
lret
cmp
addl
mov
push
imul
in
dec
cli
ja
push
lahf
adc
sbb
push
mov
mov
mov
outsb
aam
mov
mov
mov
lretw
add
or
inc
aas
xor
push
pop
shrl
pop
xchg
fs
xchg
std
mov
lods
test
insl
add
add
pop
iret
in
jae
pop
xor
movsl
lret
std
arpl
scas
push
push
orl
sub
and
inc
dec
leave
or
or
cltd
pop
movsb
lods
mov
adc
in
mov
mov
mov
lret
cmpsl
add
adc
sbb
mov
scas
pop
pop
xchg
sub
fwait
pusha
add
sub
jns
pushf
mov
test
mov
sahf
xchg
pop
cmpsb
sub
test
insl
lret
mov
pop
mov
in
and
aam
mov
add
lret
dec
in
ret
scas
loope
push
sub
daa
inc
jmp
cmovle
sub
mov
xor
cmp
je
int
stc
stos
clc
rcl
aam
push
cmp
lret
stos
sti
dec
inc
cmpsb
lret
mov
test
loop
test
mov
add
mov
imul
sti
lcall
lret
push
mov
rorl
shll
mov
xor
shlb
mov
fcmovnbe
into
xor
inc
sub
lretw
mov
push
lret
add
arpl
add
lret
or
std
stos
jbe
cli
cld
jae
mov
xchg
in
lret
hlt
and
dec
rorl
cs
daa
test
cmc
fsubr
pop
xchg
mov
add
insb
lret
ficoms
sub
roll
vorps
push
repnz
adc
cwtl
outsb
ds
cmpsb
cmp
cmp
add
int
jnp
outsl
icebp
mov
ret
sti
push
dec
ljmp
addb
lret
jl
and
test
test
jg
aam
xchg
stos
sub
xor
ljmp
cmp
in
xor
and
test
fs
rorl
dec
int
jmp
inc
sub
rorl
push
sub
mov
mov
xchg
cltd
lret
sbb
xor
lret
es
sti
mov
cli
lods
push
sbb
test
icebp
movsb
out
sti
xchg
xchg
jne
lahf
repz
cwtl
arpl
mov
outsb
in
lret
inc
mov
insb
rcr
lret
cmp
or
xchg
mov
lret
sub
in
fisttpll
test
xor
dec
push
push
outsb
lret
rcrl
jno
lret
repz
inc
sahf
pop
add
pop
call
aam
out
enter
rclb
stos
and
lret
xor
push
mov
movsl
pushf
jmp
in
cwtl
popl
pop
cltd
test
inc
mov
cli
cli
xchg
ljmp
add
call
push
sbb
or
pop
pop
adc
or
sar
into
add
lret
roll
jns
or
lret
jg
out
lcall
mov
es
pop
stc
inc
rclb
mov
mov
ja
outsb
popf
movsb
in
fwait
in
lret
jle
pop
lret
cs
cltd
jns
xor
into
jae
cmp
lret
lods
adc
in
inc
lret
loope
aam
aaa
cmp
mov
jg
xor
push
xchg
sub
testl
into
sbb
pop
cmp
cmp
cmp
mov
inc
mov
and
xchg
xor
test
or
jle
push
jl
in
insb
mov
fidivrl
jno
ljmp
fsubrs
add
and
imul
iret
xchg
dec
mov
lret
adc
or
push
add
stos
arpl
push
sbb
xchg
out
lret
loop
push
dec
insb
stos
ja
fdivl
gs
mov
loop
cmp
inc
addr16
inc
adc
lret
push
mov
lret
inc
js
pop
push
ja
jle
cmp
xchg
jmp
rorl
mov
shl
push
aad
xor
out
mov
sub
lret
ret
cli
and
mov
cmc
pop
iret
sub
popf
cltd
stc
lret
cmp
fistpll
aas
lret
leave
inc
add
ljmp
lahf
push
cmp
ret
stos
lahf
and
daa
fcompl
lret
xorl
mov
lret
outsb
cli
mov
ja
sbb
lahf
pop
and
lret
stos
fmull
out
lret
mov
dec
adc
lret
push
imul
nop
mov
lret
in
scas
xor
jg
add
push
gs
push
sub
and
add
xor
leave
cwtl
fxch
pop
pop
sbb
ja
outsb
test
add
push
mov
scas
adcb
mov
cwtl
movb
cmp
mov
int3
fisubl
or
and
dec
movl
call
xor
fxch
mov
add
mov
mov
je
inc
sbb
repnz
sub
xchg
stos
es
cmp
jl
add
movsl
aam
sub
lods
push
jp
push
call
mov
rclb
pop
imul
out
outsb
mov
lret
and
jl
ds
lret
ja
sbbl
decl
lcall
push
stos
fcomps
xchg
lea
aaa
add
lret
loopne
movsl
iret
leave
int
mov
sub
add
lods
int
cmpsl
lret
fnstenv
jp
cwtl
dec
pop
lret
repnz
nop
lret
cs
xor
ds
imul
or
jl
cwtl
mov
inc
add
inc
cmp
lret
imul
jbe
subl
cld
je
outsl
xor
in
add
stos
sub
cmp
pop
push
lret
test
mov
mov
sbb
int3
mov
add
cltd
stos
lret
xchg
xlat
push
scas
dec
lret
adc
lods
push
cli
cs
xchg
rcrl
add
sarl
repz
inc
out
leave
jno
and
lret
push
push
xchg
test
adc
ret
mov
cwtl
lret
push
or
sbb
ror
pushl
jmp
jg
mov
pop
popa
add
iret
cwtl
lret
in
sbb
sahf
or
pop
jne
pop
mov
fcomps
add
mov
xchg
cmp
repz
pop
aad
or
mov
cmpsb
scas
out
push
pop
push
xchg
mov
sub
pop
sti
cmp
rcr
mov
sub
insl
test
xchg
pushf
out
shl
or
ret
inc
xchg
xchg
or
pop
jp
das
call
rol
mov
mov
rol
jmp
pop
ja
jno
sarb
mov
fsts
jg
push
bound
int3
loope
jmp
enter
bnd
rcrl
out
dec
push
andb
mov
popl
inc
dec
push
jle
test
cld
or
mov
and
push
sbb
rcrb
sarl
xor
pop
or
mov
addb
loopne
lods
pop
mov
scas
fcoml
sbb
or
and
bound
mov
mov
scas
fcoml
or
aaa
add
mov
jl
shl
pop
pusha
jmp
jo
cmp
aas
call
ljmp
sbb
mov
push
dec
jge
adc
movl
sbb
into
push
cwtl
adc
pop
push
out
mov
stos
inc
sti
xlat
cmp
mov
aas
dec
push
rcl
xchg
enter
push
jne
inc
in
adc
mov
scas
sub
cmp
fidivrs
lret
clc
scas
pushf
pop
cltd
cmp
stos
pop
jns
lret
inc
cmp
lret
pop
insb
into
or
push
mov
push
xor
aam
lahf
stc
xor
pop
rorl
dec
push
jns
fdivp
dec
xor
das
filds
ljmp
rclb
pop
add
mov
xlat
scas
cli
mov
aad
insb
pop
mov
jbe
mov
faddl
movsl
lret
push
mov
sbb
mov
inc
pop
push
andb
mov
xor
push
adcb
pushf
enter
push
push
outsl
jne
jmp
adc
inc
pop
mov
stos
int3
xor
shlb
in
ss
pop
fldenv
jmp
pop
call
cld
sbb
cmp
jl
dec
in
mov
bound
inc
sub
xchg
into
out
jbe
cltd
mov
pop
dec
pusha
ret
out
leave
push
sbb
cs
int3
into
adc
addl
ljmp
pop
sarb
and
fcmovnu
adc
ret
rorb
test
aas
fidivl
push
nop
jne
jl
mov
jbe
inc
dec
jge
mov
jns
xor
cld
loopne
inc
outsl
inc
push
adcl
ljmp
push
pop
jb
mov
sub
push
scas
lds
leave
adc
loop
clc
jge
je
pop
loopne
add
insb
mov
std
and
int3
popf
push
cmp
or
js
mov
outsb
lock
dec
lods
je
data16
xor
aad
sub
pop
adc
mov
or
mulb
loop
push
ret
in
pop
and
push
repnz
pop
sahf
jnp
mov
ret
push
adc
leave
cmp
lahf
shrl
cmpsb
sub
shr
sahf
cltd
or
mov
lret
push
mov
lret
mov
aaa
and
in
lods
leave
xchg
jo
push
ljmp
cmpsl
or
std
pop
pusha
mov
loop
rcpps
rcr
and
lds
cmpsb
xor
jl
imul
stc
in
adc
adc
lret
pop
sahf
dec
sub
pop
xchg
scas
jecxz
repnz
and
jmp
inc
cmp
add
push
adc
movsl
jbe
lret
jo
add
dec
lret
jl
mov
iret
out
cwtl
das
stos
mov
add
mov
pop
cmp
fs
stos
fstps
test
into
xchg
stc
incb
lret
add
bound
cmp
fdivrs
sub
leave
lret
das
add
nop
data16
sbb
lret
ret
lret
ret
xor
data16
fidivrl
dec
mov
lret
sarl
xchg
cli
lret
fildl
lret
test
call
cli
arpl
push
rcrb
cmpsl
adc
push
push
int3
aaa
pop
fidivrl
lea
icebp
jne
int
mov
mov
loop
sub
mov
std
in
or
cld
out
mov
push
mov
mov
sub
jmp
iret
icebp
jbe
push
and
jne
add
push
aad
mulb
jns
ja
pop
jae
into
iret
jmp
mov
cmpsl
add
mov
fdivrs
push
jcxz
mov
add
lret
mov
mov
cwtl
int3
cld
lret
leave
daa
or
jnp
cmc
sub
in
ret
lret
inc
ja
push
test
lret
int3
movsb
add
inc
sbb
pop
imul
jbe
cmp
mov
stos
adc
xor
test
xor
xchg
or
out
lret
loop
fcoml
fxch
sbb
jne
out
mov
push
lret
jle
mov
lahf
sbb
in
mov
mov
js
lret
pop
push
or
adc
jo
xchg
icebp
dec
aas
push
lret
push
adc
or
popf
sub
sti
sahf
push
jecxz
insb
pushf
lret
js
in
or
and
push
sbb
add
xchg
fbld
jge
push
shlb
les
dec
and
shlb
ja
sub
iret
mov
mov
rcrb
popa
cmp
cli
pop
jmp
xchg
cmpsl
dec
rcrb
push
mov
rorb
ret
mov
xchg
fstpl
and
mov
fwait
mov
adc
rcr
lret
xchg
into
sbb
int3
lret
cwtl
in
pop
gs
jmp
shlb
push
xchg
pop
stos
pop
lds
cmp
adc
add
pop
aas
mov
add
les
mov
lret
icebp
insl
lret
or
mov
jmp
and
jge
pusha
lret
aaa
fmuls
les
adc
push
int3
and
int3
ficompl
mov
or
jnp
cmp
jno
lret
loopne
push
pmaxsw
repz
xor
cmp
into
pop
outsl
pop
fstpl
js
inc
dec
mov
inc
pop
and
enter
das
fmuls
ret
test
jne
fwait
leave
rolb
fistpll
mov
jmp
pop
dec
fwait
call
cwtl
fcmovne
popf
push
sub
sbb
ret
testb
mov
call
insl
adc
stos
xor
ror
xor
insb
mov
rol
std
fwait
push
lcall
cwtl
mov
lea
out
pop
mov
insl
rcrw
fstp
lret
fwait
out
jp
cs
clc
pusha
push
ror
mov
xchg
fmulp
add
jns
adc
popf
scas
jb
adc
add
fsubrl
jno
or
fisttpll
fildll
mov
pop
fwait
pop
aad
lret
mov
cmpsl
pop
xchg
mov
test
add
in
popf
fidivl
sbb
mov
pop
lret
dec
dec
jecxz
out
xor
into
mov
xchg
icebp
rcl
cmpsb
xor
mov
mov
lods
repnz
lret
ds
jl
test
out
les
jo
push
mov
and
ljmp
mov
cli
scas
std
push
orb
mov
dec
jno
jge
mov
fidivrl
daa
rcll
and
inc
test
in
mov
clc
lret
jge
inc
icebp
pop
adc
out
icebp
push
cli
cmp
push
jp
dec
fldcw
cmpsb
xchg
lret
mov
cmc
js
or
movsl
sbb
rclb
aas
call
inc
cld
shr
enter
cltd
fidivl
dec
cmpsl
dec
pop
pop
push
fmul
mov
push
adc
sub
mov
ljmp
mov
jmp
cs
aad
mov
dec
dec
xor
dec
fnstcw
push
cmp
inc
mov
pop
cs
sbb
orb
sbb
xchg
call
data16
sub
cld
pop
lret
mov
test
dec
and
repz
adc
jo
cwtl
loopne
std
mov
sbb
or
test
into
push
lock
lods
push
jg
outsl
dec
popa
data16
sahf
mov
jo
cmp
iret
cmp
push
leave
mov
xor
and
inc
outsl
mov
leave
fwait
mov
push
or
aad
lret
cmp
and
aas
sub
or
cmpsb
aaa
in
xchg
jmp
xchg
push
outsl
lret
add
icebp
lods
stc
mov
into
fadd
dec
and
inc
xor
out
lret
jo
out
mov
dec
test
mov
das
lret
es
cmpsl
std
call
mov
mov
mov
inc
pop
int
lahf
sub
inc
dec
popf
add
frstor
jp
aam
mov
inc
stc
mov
jns
inc
cwtl
mov
sbb
enter
divb
jle
inc
movsb
fdivrl
add
xor
xchg
fiaddl
pusha
sub
fsub
sub
stos
repnz
mov
call
sub
mov
push
test
push
xchg
test
push
cmp
push
lret
pop
stos
xor
lret
out
addr16
scas
popl
xlat
ret
fmul
mov
nop
adc
push
cmp
xor
cmc
insl
dec
cmp
mov
and
lret
sbb
xor
dec
lret
jae
fs
ficoml
cmp
popf
xchg
loop
pop
dec
mov
dec
push
pop
icebp
pop
cmpsl
mov
or
aam
xor
iret
lret
addb
cmp
dec
mov
sbbl
stos
or
lods
mov
popf
cmp
add
push
in
or
arpl
cmpsl
scas
outsb
xchg
fmuls
lret
adc
and
jae
add
ficoml
inc
or
jns
sub
mov
mov
xor
push
int
lret
cli
sub
ficoms
loop
and
movsl
stc
push
pop
mov
jo
in
sti
xchg
and
das
shl
sarl
pop
adc
enter
xchg
add
cli
int3
sub
dec
lret
sub
scas
loope
insl
pop
cmpsl
lret
sub
lret
stos
push
lret
test
gs
jg
xchg
mov
fldcw
aam
ror
pop
mov
adc
inc
add
or
pop
inc
insl
inc
movsl
cmc
cwtl
adc
or
lea
pop
lret
sub
lods
add
sar
cmp
xor
test
ss
push
repnz
cmp
sahf
inc
dec
stos
cs
fimull
xchg
in
adc
mov
pop
gs
xchg
push
test
aas
repnz
inc
in
popa
xor
lret
inc
adc
cmp
dec
lds
cmp
rdpmc
xchg
notb
daa
inc
and
cmp
push
jp
ret
fstps
sub
bound
movl
cmp
fistpl
je
pop
fcomps
pop
push
outsb
dec
and
test
push
sti
add
cmp
fildl
xchg
insb
lods
movsl
jno
lds
mov
cltd
ljmp
mov
sbb
shll
pushf
clc
adc
fisubs
movl
jnp
mov
dec
lds
xor
adc
and
stos
imul
mov
adc
fnsave
ret
loope
and
cmp
mov
jge
push
test
adc
insl
bound
xchg
and
dec
scas
push
mov
bound
sbb
leave
dec
jmp
adc
push
fsubrl
addr16
rcrb
repnz
int
pop
aaa
das
arpl
fnstcw
pop
je
iret
mov
decb
or
enter
dec
lods
arpl
push
push
rclb
or
xchg
push
mov
scas
add
fiaddl
push
outsl
cs
stc
addr16
jns
ret
push
int
mov
push
xchg
icebp
repnz
dec
bnd
test
lds
mov
inc
push
imul
lock
jecxz
push
cmp
jl
int
push
sbb
hlt
movsb
dec
dec
jb
inc
or
in
sbb
sbb
fs
adc
into
test
add
add
loopne
pop
dec
pop
les
cmp
test
rorb
ljmp
addr16
iret
shrb
lahf
mov
lret
push
mov
mov
fldenv
cwtl
mov
push
movsb
xchg
jp
cltd
pop
leave
sub
into
sub
sub
clc
cmp
clc
fistps
xor
leave
xchg
xchg
and
mov
std
sub
mov
push
mov
xor
out
sbb
mov
lahf
push
dec
sti
mov
dec
pop
and
cmp
movsb
cmp
out
and
lock
pop
jmp
lods
push
pushf
rorb
out
fimull
sub
mov
cmpb
std
sar
mov
cmp
and
sarb
insb
popf
inc
ss
sub
fcmovu
fmuls
or
lods
ret
mov
sub
loop
arpl
mov
or
or
lahf
xor
pusha
js
dec
sar
or
cs
shl
mov
daa
sbb
aas
mov
and
lods
xlat
in
inc
push
and
lret
nop
sar
ljmp
and
mov
push
in
pmullw
lock
lods
out
dec
stos
lahf
sbb
mov
adc
ret
imul
push
jbe
mov
enter
xchg
fmul
xlat
mov
nop
pop
sub
iret
lret
pop
or
rcrb
iret
movsb
aas
je
outsb
adc
stc
movsl
out
pop
jae
mov
nop
cmp
cwtl
xchg
das
rcrb
ja
xlat
xchg
frstor
push
gs
jns
rcrl
daa
fcmovnb
int3
xchg
push
sti
pop
and
jecxz
and
mov
shl
mov
stos
pop
sbb
repnz
kmovb
leave
icebp
fadds
sbb
ss
pop
add
popf
sub
arpl
jp
xchg
shr
mov
dec
aad
cld
jno
and
sbb
mov
stc
lea
test
fsubl
mov
mov
mov
popf
daa
repnz
outsl
jbe
and
lret
aam
insb
ret
mov
jno
mov
inc
pop
es
insb
pushf
je
jg
pushf
pop
dec
pusha
xor
imul
dec
popf
push
cltd
iret
sti
push
or
movsl
pop
push
stc
mov
jge
dec
push
cwtl
hlt
sbbl
jnp
in
sarl
rcr
push
dec
and
scas
push
mov
divl
ret
repz
jnp
rolb
lea
sbb
jns
mov
insl
fldl
fnstenv
mov
roll
fists
mov
aaa
mov
mov
lret
cmp
aad
push
inc
ja
mov
cmpsl
stc
sahf
jl
pushf
mov
pop
push
jns
scas
cmp
stos
popa
repnz
sbb
into
cmpsl
bound
pop
xor
fiadds
jecxz
loop
mov
cmp
jge
and
xor
cmp
inc
aas
lods
add
push
inc
test
push
bound
test
xor
push
dec
test
jb
push
dec
adc
pop
cltd
rcrl
jmp
push
dec
in
stc
les
or
shlb
ds
fistpll
xchg
jl
mov
loop
das
push
jb
mov
cmp
rol
fisubrl
mov
and
aas
xchg
lock
jo
pusha
scas
mov
jns
dec
rcl
fs
insl
pop
int
sarl
insb
incl
or
leave
jmp
in
cmpsb
out
cmpsb
lret
push
data16
fs
sbb
mov
inc
jo
pop
repz
sbb
lret
sub
adc
push
test
daa
lret
sub
pop
popl
out
pop
aas
fnstenv
aam
lds
cmpsb
jle
les
int3
gs
dec
and
jge
dec
mov
sbb
das
push
jp
xor
int
mov
pop
mov
fcmovnbe
lods
push
push
fnstsw
push
mov
dec
mov
mov
cmpsl
mov
inc
ja
mov
mov
out
cli
loop
pop
dec
sub
adc
das
repz
inc
pop
pop
aam
mov
push
std
jb
roll
cld
mov
mov
jbe
aas
mov
scas
subb
mov
hlt
inc
outsb
loopne
ret
push
jns
ret
icebp
sahf
popa
insl
adc
test
sbb
int3
pop
fisttpll
xchg
les
aaa
pop
sub
shl
inc
mov
xor
mov
push
into
jmp
in
pop
and
les
lods
std
xchg
dec
outsb
push
lret
mov
adc
fdivl
mov
verr
nop
push
xchg
mov
imul
imul
movsl
adc
add
jns
dec
pop
cld
std
push
and
aam
pop
xlat
jmp
xchg
test
fisttpll
jl
jge
pop
or
ror
int
dec
cmp
jne
lods
xchg
div
push
jg
popa
dec
or
scas
adc
loop
jle,pt
dec
out
insb
loopne
push
cli
aas
sub
or
and
adc
ret
pop
in
fnstenv
pop
and
movsb
cwtl
fists
shrb
push
popf
pop
mov
jecxz
mov
das
mov
mov
jns
dec
or
push
pop
in
loope
pop
or
sbb
mov
and
cltd
test
inc
loope
pop
adc
pusha
and
int
pop
rcrb
push
sub
test
mov
dec
cmpsb
fsubs
jge
mov
cltd
leave
lret
xorb
add
or
or
jo
hlt
mov
jp
dec
jmp
jo
test
bnd
ljmp
mov
pop
das
jg
aas
rcl
mov
dec
xchg
jns
mov
sbb
sbb
push
xchg
mov
test
lods
enter
sti
pop
pop
push
movsb
ficomps
mov
sbb
push
in
dec
mov
ljmp
cmp
xchg
or
fsts
in
lret
xchg
js
scas
mov
les
mov
arpl
ret
xchg
push
outsl
fcmovnb
imul
mov
imul
sub
gs
adc
dec
and
aaa
sub
ret
push
sahf
and
popf
bound
loop
int3
fiaddl
xor
sbb
xlat
dec
je
jecxz
jmp
cmp
jecxz
sar
mov
mov
fists
hlt
jle
adc
dec
pusha
push
fldenv
movsb
pusha
pushf
push
cwtl
push
ret
pop
insb
dec
icebp
cli
sub
iret
scas
imul
jae
xor
push
xor
pop
mov
dec
xor
adc
adc
mov
cltd
xor
push
lock
cmp
and
sbb
cmp
jmp
add
cmpsl
jecxz
push
jae
ret
lods
int
add
inc
cld
imul
pop
mov
shl
dec
jae
adc
stos
bound
push
into
dec
push
sub
mov
sarl
pop
rcll
xor
pop
pop
ss
leave
jmp
ficoms
test
in
data16
lcall
pop
pop
push
aas
xchg
sbb
push
pop
rolb
out
push
aad
leave
mov
sti
pop
mov
xorl
mov
pop
clc
jne
push
push
movsl
fadd
push
pop
stos
lret
notb
dec
ljmp
and
pop
jb
pushf
sbb
pop
mov
pop
es
dec
lock
nop
sub
cmp
out
push
mov
in
repz
ja
mov
lret
push
out
push
and
inc
aas
ffreep
adc
sub
mov
push
push
mov
es
jns
movsl
xor
into
xchg
lcall
dec
xlat
push
lods
inc
fldenv
scas
or
pop
sbb
xchg
xchg
jp
dec
pop
repz
adc
xlat
xchg
push
insb
dec
in
sbb
in
and
ficoml
push
pusha
ds
rorl
cmp
fdivs
xor
inc
pop
lods
sub
mov
stos
enter
ficompl
dec
inc
pop
and
xchg
jp
add
sub
rcl
fimull
or
ret
into
ss
rcrb
xchg
jb
shll
mov
push
sub
lahf
jp
fwait
les
xor
aaa
loop
lea
and
gs
lret
push
xchg
pop
and
lods
mov
dec
filds
mov
sub
int
ret
sbb
cmp
jo
push
inc
pop
jmp
adc
hlt
fcompl
mov
and
and
nop
divb
repz
rol
insb
xchg
fildll
or
mov
sbb
enter
and
push
xchg
stos
out
sub
in
mov
cltd
loopne
negb
out
mov
xor
jge
mov
es
sub
jge
push
cmp
lahf
cmp
push
aas
pop
daa
mov
rclb
xchg
xchg
jmp
inc
das
sahf
into
push
lock
ljmp
dec
dec
test
into
mov
movb
rcl
fmul
popf
rorb
and
inc
out
jo
push
lret
into
out
jecxz
xchg
xchg
test
dec
or
lds
xlat
arpl
lret
sar
loope
fs
mov
or
jp
rcr
cmp
aam
push
nop
dec
das
and
sbb
cmp
imul
add
sti
test
dec
out
rclb
cmpsb
outsl
arpl
xchg
pop
movsb
and
push
lock
jb
imul
rorl
cmpsl
dec
mov
cmp
out
lock
jne
push
adc
jns
fadds
iret
mov
push
push
pop
adc
xchg
enter
shl
mov
xchg
and
pushf
push
inc
icebp
int
rcr
mov
imul
cmp
js
mov
inc
scas
mov
flds
xchg
stos
les
xchg
aas
cltd
adc
xchg
and
aad
fildll
or
sub
aad
jns
shl
sbb
inc
add
in
loop
test
jbe
push
sub
decl
push
pop
movsl
loop
mov
push
addb
stos
cmp
rol
cmp
push
scas
sub
pop
scas
leave
lds
sahf
jns
sbb
rorb
rcr
movsl
adc
jmp
std
cmp
pop
add
test
lret
mov
movsl
andl
jo
dec
mov
in
xchg
push
popf
nop
aaa
cmpsl
mov
in
aad
pop
test
pop
loopne
lret
fcmovne
pop
hlt
adc
push
das
pop
pushf
scas
mov
fwait
jle
or
add
cmp
mov
fdivl
dec
jb
jp
push
sbb
mov
cmc
arpl
stos
push
jp
clc
sti
or
bound
das
push
loop
and
or
inc
xorb
cmp
or
mov
shrl
mov
mov
dec
iret
dec
orl
mov
aas
xor
adc
push
jge
pop
js,pt
or
outsl
push
cmp
nop
adc
frstor
jmp
mov
dec
shr
sahf
pop
adc
dec
dec
pop
pushf
daa
call
ret
fcoms
movsb
aas
sar
das
fcomps
push
jbe
clc
add
dec
pop
nop
gs
bswap
hlt
test
pop
inc
pop
enter
mov
adc
idivb
inc
jb
outsl
test
sahf
fptan
iret
popa
xchg
iret
cmpsl
aam
ljmp
xchg
sub
or
js
stos
push
or
out
mov
cs
xor
aad
lea
data16
xchg
je
push
fs
xchg
std
inc
push
data16
call
add
push
aas
aaa
sbb
mov
daa
push
or
push
in
mov
mov
sub
push
call
sub
test
push
mov
ss
xor
dec
gs
ljmp
gs
cmp
xor
lods
mov
sub
stos
loopne
lds
adc
ljmp
shlb
xchg
jge
xchg
mov
push
fisubrs
sbb
add
mov
xor
push
xchg
fldenv
xor
inc
and
xchg
and
jmp
loope
mov
pop
jb
fucomi
int
ljmp
gs
push
imul
pop
or
rcll
inc
fisubl
arpl
inc
aam
and
mov
fistps
ret
cld
lock
sub
pusha
sub
hlt
mov
movsl
jmp
icebp
cmpl
data16
xchg
notb
imul
fnstcw
xchg
popf
dec
test
fs
rorl
cltd
test
xor
add
sub
xor
loopne
mov
filds
sbb
out
cmp
pop
scas
loop
sub
mov
loope
dec
jno
xchg
pop
out
jns
int
push
and
cmp
js
jb
inc
mov
pop
jae
js
push
ficompl
mov
push
shl
mov
cmp
mov
push
dec
lcall
mov
clc
test
push
ljmp
aas
das
repnz
dec
pushf
lret
filds
pop
shr
mov
mov
jl
mov
insl
push
push
inc
sbb
and
mov
out
outsb
jne
mov
scas
mov
dec
sub
push
notb
or
add
inc
orb
test
inc
insl
pop
adc
cmc
pop
sarl
inc
pop
movsb
fcoms
mov
pop
cmpb
xchg
push
jns
inc
outsb
add
movsl
lahf
popl
xchg
mov
pop
xor
lret
idivb
xlat
aad
pop
push
arpl
mov
jns
add
aas
jno
ret
pop
sbb
fstl
loopne
push
outsl
add
fidivrs
lret
add
rclb
lods
popa
dec
pop
iret
push
sbb
imul
mov
out
adc
arpl
out
xor
mov
add
int
cmp
pop
sysenter
push
jae
insb
stos
jge
popa
into
push
bound
imul
xlat
aas
int
jne
test
xor
push
adc
insl
lock
sti
inc
xchg
repz
lahf
mov
rclb
mov
stos
jne
push
push
jmp
jge
push
fbld
lret
popf
in
data16
inc
ss
inc
inc
xor
add
jp
jl
in
pop
xorb
jle
les
push
pushf
mov
sarl
dec
jecxz
push
xchg
xchg
add
imul
stc
sub
popf
push
jg
sbb
hlt
xor
pop
scas
ljmp
femms
shll
bound
cmp
cmpsb
xor
aaa
jle
ficoml
push
adc
and
fcomps
or
mov
sub
add
sbb
add
mov
fadd
iret
push
out
loope
cwtl
pop
shl
cld
sub
xchg
aas
in
cmp
xchg
sub
mov
outsb
loope
xchg
adc
xchg
sub
sbb
aaa
test
push
xor
movsl
inc
inc
jmp
stc
push
and
out
inc
hlt
adcb
aam
stc
arpl
jmp
leave
adc
dec
insl
inc
mov
insb
bswap
mov
aad
pop
xor
cmpl
add
or
imul
shr
add
aam
das
rclb
sbb
push
imul
mov
pop
pop
adc
mov
push
inc
mov
std
ret
inc
jle
fstpt
lods
jecxz
cltd
rcll
pop
mov
int
dec
stc
jmp
adc
andl
xor
xlat
test
std
xchg
stos
inc
sbb
je
lea
sbb
clc
fcoml
jl
aam
jg
movsl
push
jg
cmpsb
or
jno
jns
adc
sub
jmp
je
xor
push
fucomp
insb
testb
fadd
roll
pop
and
aad
push
sub
adc
sub
aam
jle
ror
shll
test
xor
daa
sub
adc
int3
jp
push
mov
pop
push
add
cmp
mov
or
sbb
insb
push
rclb
loope
adc
mov
std
dec
mov
inc
push
cmp
orl
push
mov
cs
clc
aad
clc
jg
xor
int3
hlt
rcr
dec
push
cmp
les
sarb
lret
popf
in
mov
je
dec
or
subb
mov
add
mov
inc
pop
stc
push
xor
mov
sbb
sbb
scas
xchg
fs
scas
in
push
adc
mov
loopne
mov
push
into
loop
inc
pop
jae
adc
push
shrl
xchg
sub
mov
xor
addb
push
dec
mov
push
jp
ror
pop
lods
outsb
sub
mov
pop
les
mov
jo
ja
sbb
pop
lock
cmp
pop
inc
sbb
popa
xor
cltd
adc
pop
push
sbb
or
pop
stos
lahf
xor
ljmp
xchg
xlat
jp
mov
ds
sub
aaa
inc
int
mov
lock
xchg
cwtl
or
and
cmp
jns
jae
push
adcb
xor
lret
pop
dec
xchg
xor
sbb
pusha
aaa
repz
or
inc
cwtl
pop
pop
lods
dec
push
sbb
jne
or
inc
out
outsb
adcl
push
test
les
push
cltd
mov
ja
jns
lret
inc
sarl
ret
pop
cmp
dec
insl
dec
sbb
sub
dec
lret
jecxz
lret
push
inc
xchg
push
add
mov
push
mov
shrb
lret
and
xchg
cltd
lret
addl
in
jg
and
push
pusha
clc
cli
sbb
call
aaa
lods
mov
mov
lret
bound
pop
and
sbb
into
push
or
aad
jmp
xchg
aas
ds
lret
mov
jo
pop
lods
lods
rcl
mov
sub
sahf
push
adc
add
push
jne
jmp
movsl
push
loop
jge
lret
jae
data16
push
sbb
arpl
das
popf
lret
and
sti
scas
lret
sub
stc
in
add
xchg
cmp
nop
cmp
pushf
add
push
ficompl
insb
ret
mov
push
pop
lret
out
in
xlat
ror
js
stos
add
jecxz
sbb
movsl
insl
lret
fdivrs
hlt
push
inc
rcrb
lret
lock
je
lret
inc
dec
rcl
push
xor
and
dec
cmp
lahf
jmp
insl
gs
pop
fcomps
andb
jl
sub
jmp
lret
push
adc
in
roll
mov
sbb
enter
ss
lods
aam
lret
fisubs
jp
pop
dec
sbb
adc
lret
xor
test
and
lret
push
jo
xorb
fildll
or
pop
sub
lret
imul
mov
lret
test
lret
mov
inc
jae
stos
xor
in
or
jo
cmp
pushf
or
pop
data16
pusha
test
inc
xor
out
push
movsl
jge
inc
push
pop
pop
inc
xor
inc
and
or
push
mov
mov
jl
pushf
pop
sbb
pushf
imul
lods
ror
or
inc
cmp
fmull
jmp
fwait
mov
lock
and
adc
ret
cs
jecxz
jp
or
add
dec
leave
imul
push
mov
iret
push
and
xor
scas
arpl
or
inc
jmp
iret
aad
mov
fbld
lcall
push
mov
mov
jecxz
lods
mov
pushf
dec
jl
sub
pop
les
repnz
push
aas
out
inc
addr16
movsl
adc
mov
cmp
push
lods
daa
cmp
or
insl
mov
mov
cmp
push
call
inc
push
and
outsb
loopne
and
test
jbe
jle
dec
jp
mov
hlt
jge
ljmp
enter
push
pop
hlt
je
push
push
stos
sub
pop
push
xchg
enter
jmp
add
pop
out
popf
lock
pop
xor
movsb
into
xchg
inc
jmp
adc
cmpsl
into
stos
cmc
movsb
fcomi
repz
xchg
clc
ljmp
or
ficompl
cmp
cmc
xchg
push
mov
div
xor
cld
test
push
pop
inc
lret
idiv
pop
das
call
rcrb
xchg
in
not
lret
add
popa
sti
add
xor
cmp
adc
pushf
mov
jle
je
dec
push
jae
push
cli
mov
sub
jmp
leave
int3
outsb
out
ret
insl
sahf
enter
sub
push
inc
cmp
mov
fcomi
sbb
xor
imul
out
loopne
psraw
mov
decb
or
pop
roll
sarb
cmpsl
mov
add
in
mov
adc
faddp
outsb
inc
and
inc
push
je
pop
inc
cli
xchg
addb
cmc
inc
fst
pushf
push
dec
out
je
inc
loop
and
imul
jae
fsubrs
lds
lret
push
mov
aad
mov
mov
pop
mov
and
pop
push
pop
sbb
or
xchg
sahf
aam
add
shlb
mov
mov
mov
rolb
mov
mov
xchg
inc
pop
mov
push
mov
adc
int
push
mov
inc
lret
in
ja
mov
jecxz
cmp
and
lahf
sbbb
cmp
andb
js
outsl
cwtl
mov
pop
hlt
int3
and
inc
or
sbb
mov
fldt
les
mov
pop
jmp
pop
mov
je
dec
int
dec
mov
repnz
cmc
loop
push
dec
jmp
sub
mov
jo
leave
xor
sbb
push
bound
xchg
jmp
les
fcoml
inc
jge
cmp
and
in
lret
push
into
mov
cmp
adc
test
lds
jmp
les
jbe
in
add
cmpl
aas
in
sbbl
jo
mov
mov
adc
ret
cmp
shr
dec
dec
icebp
sahf
inc
dec
insb
mov
push
add
fnstcw
ret
fisttps
xchg
orl
lret
sub
cmpsl
jne
mov
adc
shl
dec
push
and
jmp
push
lods
jge
repnz
popa
or
mov
adc
enter
or
outsl
int
lahf
push
mov
outsb
inc
lret
outsl
jne
fistps
fyl2x
lock
ret
and
fdivrl
das
dec
push
jmp
aam
cmp
popf
and
adc
bound
xchg
and
adc
mov
call
or
dec
outsb
and
shlb
push
pop
inc
sbb
andb
test
jle
aaa
jge
mov
fcmovnbe
push
stc
imull
movsl
jmp
fsub
pop
ret
loope
bound
out
mov
sarl
xchg
repz
and
sbb
ljmp
push
test
iret
pop
mov
fiaddl
jle
rcrl
aad
in
hlt
sub
mov
mov
or
mov
sub
dec
test
das
push
xchg
sbb
int3
jns
inc
repz
jle
push
pop
cmp
pop
test
pop
negb
in
into
iret
test
mov
push
pop
mov
xchg
inc
incl
into
jae
sti
repz
jne
xor
gs
jne
mov
mov
push
mov
sub
ficomps
dec
push
mov
pop
icebp
das
cli
jae
sti
push
jmp
sbb
adc
inc
xchg
mov
sbb
sub
cmpl
rcrl
mov
adc
shl
cltd
push
dec
cltd
int
adc
mov
mov
dec
push
lcall
xchg
cmpsl
dec
int
out
lcall
push
paddq
jg
stos
and
cmc
int3
addps
jle
lcall
cli
dec
into
sub
mov
sbb
ret
mov
pop
aad
sar
jmp
inc
jns
mov
jne
leave
jmp
aam
push
sub
and
rol
pop
jl
and
cmc
aad
mov
aas
mov
into
push
rcrl
jne
fildll
into
inc
in
test
dec
imul
adc
aas
enter
in
mov
insb
hlt
idivb
adc
test
daa
pop
mov
lods
bound
imul
and
xor
iret
dec
cmp
jo
dec
mov
enter
xchg
push
mov
or
xlat
mov
outsb
mov
mov
lret
adc
and
movsb
rcll
push
sub
add
ret
pusha
mov
test
in
into
cmc
or
sti
jecxz
lret
xchg
gs
jae
std
pop
xchg
in
xchg
and
insl
pop
imul
and
or
jns
mov
lret
test
rorl
mov
xchg
pop
ljmp
stc
fcmovne
stc
mov
mov
pushf
mov
push
das
idivb
cmp
cli
xor
das
push
pop
adc
jmp
imull
fcmovnbe
clc
bound
andl
push
ss
mov
hlt
ljmp
scas
xchg
push
cmp
into
mov
pop
and
push
sub
mov
ss
icebp
lahf
or
lea
adc
sbb
jmp
out
bound
jle
aaa
mov
bound
mov
xchg
inc
cmpsl
aam
fildll
pop
jne
int3
outsl
inc
pop
inc
dec
or
mov
test
pusha
insl
je
mov
mov
mov
in
pop
in
sbb
filds
dec
mov
rcrb
scas
lahf
sbb
push
ret
sbb
shlb
xor
jp
and
push
hlt
movsl
rcrl
push
test
jmp
mov
pushf
xchg
shrd
inc
sbbl
fcompl
lds
xchg
or
cld
cmp
int3
nop
and
jne
push
mov
loopne
notb
pushf
dec
adc
in
stos
int3
jbe
xchg
ret
repnz
in
lret
inc
xchg
inc
sub
jnp
dec
pushf
sub
ljmp
popa
insb
pop
pop
imul
mov
xchg
push
inc
xchg
repz
testl
fldcw
adc
adc
or
ljmp
pusha
negl
loopne
mov
mov
and
loop
jecxz
inc
push
push
std
adc
les
lret
mov
adc
jle
int
test
xchg
cmp
mov
jle
rcrb
push
lds
out
outsl
incb
ds
jmp
or
add
std
sar
mov
test
dec
sub
fildl
add
cld
xchg
pop
sahf
dec
push
fnsave
lds
rol
pop
inc
add
pop
jns
jg
outsl
sbbb
test
pop
jnp
xchg
mov
leave
hlt
jbe
fildll
mov
xorb
arpl
cmp
sbb
xchg
rorb
mov
pop
int3
mov
dec
stos
pop
mov
test
cltd
cltd
adc
pop
inc
pusha
movsb
in
cmpsl
cmp
inc
ss
and
iret
push
icebp
push
inc
fistl
fdiv
xor
stos
lea
cmp
or
mov
pshufw
hlt
or
push
pop
pop
gs
or
pop
or
push
enter
lcall
xchg
insb
inc
cs
mov
push
out
int
mov
pop
or
mov
xchg
mov
pushf
push
stc
xchg
das
roll
lret
push
test
sub
or
repnz
rorb
xchg
push
arpl
inc
jg
mov
push
mov
out
rcl
lahf
fcomps
push
sub
jg
sti
sti
pop
out
cmp
mov
imul
push
push
fs
fdivrs
fstl
arpl
pop
out
imull
test
jecxz
jmp
push
insb
fs
xchg
test
mov
fmull
fsubl
repnz
in
jne
dec
mov
outsl
fimuls
pop
nop
dec
idivl
call
jne
stc
rcll
daa
and
icebp
mov
dec
pop
movsl
shll
dec
and
push
mov
or
adc
and
notl
sahf
out
mov
xchg
push
mov
pop
fdivp
push
mov
in
ljmp
std
mov
push
jecxz
sti
ror
and
jne
sbb
pop
inc
xchg
incb
into
pop
std
insb
out
push
and
inc
push
lods
mov
scas
loopne
push
popa
mov
int3
fidivs
repz
pop
and
pop
aam
lock
sub
insb
lea
cmpsb
xor
enter
repz
dec
push
dec
inc
cmp
pop
adc
iret
jae
inc
pop
test
popf
or
stc
adc
std
out
pusha
and
inc
mov
and
cmc
lock
push
outsb
cmpsb
mov
xor
mov
cli
fsubr
out
and
jb
ljmp
fdiv
dec
gs
popf
pop
cltd
sar
mov
imul
push
test
or
inc
mov
xlat
push
inc
sub
lea
mov
lds
negb
adc
mov
fs
fs
aaa
sbb
inc
fnstsw
mov
jno
pop
lret
inc
push
mov
mov
sbb
sbbb
xchg
xor
xorl
and
ret
roll
hlt
rorl
imul
xchg
aaa
sbbb
sub
cmpsl
inc
and
and
push
jbe
xlat
shl
pop
movsb
mov
dec
pop
lods
js
jmp
or
int3
rclb
mov
cltd
js
jle
sub
test
adc
mov
frstor
jle
loopne
mov
mov
sbb
into
mov
jno
mov
cmp
ss
int
test
mov
push
cmp
sub
cmp
das
cld
int3
xchg
aas
pop
sbb
jnp
sbb
ficomps
add
xchg
adc
push
push
mov
test
pusha
and
cltd
fs
dec
sub
and
pop
aad
sub
stos
ds
xor
stos
jne
cltd
into
jmp
repz
jne
movsb
lret
movsb
jnp
dec
out
lret
in
mov
mov
int3
push
push
lret
daa
pop
fmuls
push
rcll
add
jo
sbb
cld
lret
sahf
sub
fcom
cs
cli
call
add
cmpsb
fisttpl
into
jbe
lret
aas
jg
into
movsb
repnz
loopne
dec
incl
in
cmp
lret
inc
cmpsb
pop
jmp
out
ficompl
out
push
sahf
test
push
dec
ljmp
leave
iret
aas
push
das
test
cmp
test
movsb
cmp
mov
lahf
xchg
jo
fidivl
mov
pop
xor
enter
dec
sbb
adc
xor
xchg
loop
test
mov
adc
push
sub
jle
lret
xor
cltd
push
scas
or
jmp
or
sti
dec
aaa
sub
pop
xor
lret
sub
enter
insl
mov
mov
fsub
pop
in
pop
lods
cltd
sub
ret
dec
dec
stos
push
rcll
mov
inc
addr16
adc
lret
or
movsb
lret
pushf
mov
int3
sbb
inc
cmp
add
mul
xchg
movsl
dec
jmp
aaa
or
pop
scas
clc
push
rcrb
cmpsl
lret
push
xor
ret
fneni(8087
mov
cli
mov
xor
cwtl
adc
sub
cmp
or
icebp
push
mov
or
pop
leave
cmp
in
lods
adc
mov
or
mov
xor
mov
mov
mov
pop
cld
out
sbb
cmp
int3
shlb
sbb
scas
iret
mov
rcll
cmp
js
mov
mov
adc
into
mov
stc
cmp
scas
jbe
dec
iret
cmp
mov
dec
pop
inc
mov
sbb
mov
jge
sub
aad
cmp
mov
cwtl
jno
stos
pop
mov
shl
hlt
es
and
mov
cmp
sti
pop
movsl
push
fsubs
lret
lock
mov
and
add
mov
dec
aaa
dec
pop
out
jle
leave
roll
push
mov
push
mov
inc
xlat
sub
js
jmp
lock
rorl
lret
pop
lds
rol
in
pusha
mov
lea
ds
ja
or
sahf
popa
pop
sti
cmp
fsubs
jnp
add
mov
clc
cli
scas
add
or
pop
mov
push
stos
outsb
push
cmp
pop
sub
adc
xchg
leave
sub
jle
or
pop
cs
loopne
push
sti
jmp
sti
mov
inc
sub
bound
jns
inc
clc
andl
push
adc
shl
out
repnz
jno
mov
in
or
es
sbb
mov
mov
scas
add
js
call
das
ret
bound
addr16
pop
mov
in
sbbb
xchg
movsl
ficoml
es
mov
xchg
inc
rcrb
movsl
cmp
pop
lock
jp
stos
xor
cmp
test
repnz
push
fxch
push
lods
dec
out
inc
jmp
mov
xchg
outsb
stos
push
push
popa
adc
popf
outsl
mov
push
movl
sub
pop
sub
aas
aam
ja
dec
cmc
jecxz
jp
cmp
outsb
lods
push
and
and
add
lret
movsl
push
dec
mov
cmp
pop
lock
outsb
dec
adc
adc
mov
lods
jp
and
dec
test
and
rolb
ror
sub
movsl
cmp
enter
or
adc
mov
lret
stos
cmc
pop
jmp
sbb
jge
inc
sub
xor
adc
adc
mov
push
push
push
xchg
lds
mov
push
out
sahf
pop
fsubr
cmpsl
lods
pop
insl
int3
mov
aam
fistpll
sbb
movsb
xchg
dec
repz
fisubs
mov
sbb
and
stos
or
sti
and
mov
pop
adc
inc
jb
ljmp
cltd
movsl
loop
flds
or
sti
cmp
jmp
aas
cmpsl
data16
jbe
stc
mov
jmp
sbb
int
enter
dec
cmp
push
fnsave
pop
mov
xchg
jne
dec
daa
pop
aam
out
test
mov
addb
pop
xor
and
and
pop
mov
sbb
enter
pushf
mov
xlat
jl
iret
cmp
xchg
push
in
jl
dec
jns
movsl
pop
mov
pop
nop
sub
imul
pop
mov
xor
pop
iret
mov
xor
lea
arpl
or
cmc
sti
aas
or
cmp
sub
jne
ror
pop
pop
mov
push
push
ret
push
iret
sti
hlt
or
pushf
push
je
mov
cld
pop
mov
cmc
lods
das
xchg
es
push
cli
scas
test
repnz
mov
dec
aad
std
sbb
sbb
rorl
and
ret
inc
add
push
lods
aam
outsb
xchg
inc
mov
push
mov
divl
das
daa
cwtl
sub
push
jle
dec
cmp
jns
push
sti
adc
shl
mov
and
imul
in
add
sub
sbb
clc
and
jns
jle
push
fwait
pop
sbb
push
scas
ret
shl
pop
adc
push
call
push
xchg
inc
pop
into
mov
or
mov
ucomiss
cld
push
cmp
pop
mov
inc
stos
lret
std
loope
lret
int
pop
mov
jle
sub
lret
mov
add
pusha
testb
xor
cmp
aam
loop
jnp
sti
inc
cwtl
cmp
movsb
mov
or
mov
or
sbbl
stc
xor
mov
sti
aad
lret
sbb
dec
jp
lret
inc
push
jno
movsl
leave
lret
push
xchg
cli
dec
cwtl
ror
mov
aaa
addr16
jle
test
cmp
mov
lea
in
add
lahf
pop
xchg
push
dec
cmp
sbb
hlt
add
adc
into
fsubrp
aas
cli
lret
out
sub
fstpl
xlat
fcoms
sub
and
mov
adc
push
call
mov
push
lret
test
rorl
mov
cli
cmp
adc
xor
sbb
mov
adc
push
sbb
es
fucomp
int3
lret
in
lock
mov
subw
fisubs
mov
out
fidivrs
xlat
loop
pop
cmp
lret
inc
orl
test
sub
dec
or
mov
sahf
stos
js
lret
iret
ficompl
rep
fimull
inc
mov
pop
shr
ret
test
out
scas
fidivrl
negl
pop
aaa
pop
into
popf
dec
or
sbb
jmp
jl
mov
lret
mov
mov
push
test
xlat
or
lret
lret
adc
fwait
jle
fisubrs
xchg
sbb
adcb
cs
cmp
xor
test
mov
xchg
stos
sub
cwtl
or
popa
aas
idivb
movsl
push
sub
fmull
dec
cmp
lret
lods
enter
mov
or
adc
cltd
inc
loop
push
xor
lret
fisubs
lret
xor
int3
cmp
int3
lds
jle
pop
std
lret
fisttpl
adc
mov
lret
xchg
inc
cmp
dec
xchg
inc
dec
in
es
pop
dec
mov
inc
jno
or
lods
pop
cmpsl
inc
outsb
lret
stos
cwtl
out
lds
lret
inc
push
adc
and
xor
push
cwtl
jp
cmp
pop
xchg
add
rcl
pop
rorb
lcall
frstor
jmp
ficoml
roll
into
cmpsl
in
jmp
inc
mov
mov
sub
cmp
lret
int
inc
lock
lret
jb
xlat
push
mov
xchg
jge
xor
push
cs
loope
inc
add
and
lret
xlat
sbb
xor
lret
mov
mov
inc
pop
shl
neg
pop
rcll
xchg
cmc
or
add
lcall
pop
insb
sbb
mov
pop
or
mov
popa
lret
mov
sti
or
nop
mov
je
in
and
leave
lahf
das
add
push
mov
lret
iret
ljmp
mov
clc
hlt
icebp
sahf
call
ljmp
iret
xchg
xchg
cmpsl
xor
ja
xor
sbb
dec
adcb
lret
add
fisubl
je
or
xchg
fwait
push
pop
out
into
test
jp
jmp
pop
sbb
pop
int3
cli
lcall
frstor
vrcpss
mov
dec
push
insl
pop
xchg
data16
hlt
mov
fldenv
in
loop
into
dec
adc
jnp
daa
out
cli
ret
sub
and
or
mov
xchg
orb
pop
addr16
lret
mov
mov
push
mov
ss
jecxz
mov
adc
imul
mov
loope
jb
ficoml
dec
in
cmp
mov
push
adc
test
loopne
jo
cld
pmulhw
add
jecxz
lret
lcall
or
aam
loop
sbb
cmp
sbb
shrb
mov
sbb
fnstcw
lret
sahf
sub
js
js
cmp
push
outsb
push
add
xlat
lret
jl
xchg
icebp
mov
outsl
mov
test
jecxz
das
cli
arpl
cmp
mov
mov
ljmp
ret
icebp
lret
dec
jge
leave
push
sub
xchg
dec
and
arpl
imul
test
std
loope
mov
rclb
xchg
imul
dec
lret
adc
mov
aad
cmp
jb
iret
sti
jb
fmulp
out
mov
and
dec
lret
cmp
pop
mov
sahf
into
sarl
sub
out
pop
testb
cmp
iret
mov
lret
mov
jns
fdivl
xchg
xchg
loop
mov
mov
lret
sbb
rcll
shlb
mov
push
lret
dec
mov
int3
or
out
aam
push
jmp
insl
xchg
leave
lret
push
jp
mov
xchg
outsb
stos
xor
shlb
insl
sub
or
std
lret
cwtl
add
ljmp
pop
in
or
inc
rcl
imull
cmp
mov
lret
or
lret
sub
in
lret
push
or
scas
push
ljmp
xor
push
lret
out
addr16
fbld
jo
jl
mov
and
loop
lret
ret
ret
les
lret
lret
sbb
ffreep
or
mov
or
shll
dec
int3
fstps
fdiv
lret
add
cmp
push
xlat
test
and
mov
dec
cmp
jo
clc
jle
push
inc
add
repz
not
mov
fnstenv
mov
dec
sbb
cmp
lret
pop
adc
arpl
sub
xchg
das
push
dec
xchg
mov
bswap
jae
mov
mov
dec
inc
mov
stos
rorb
addr16
fcmovne
add
jae
lret
push
inc
jg
dec
cli
lret
je
rcrl
add
dec
xor
jns
fs
cmp
push
mov
mov
xchg
or
sub
mov
sbb
inc
mov
add
outsb
xchg
test
int
xchg
aas
lret
and
mov
pop
push
mov
push
pop
sub
adc
lret
in
ret
pop
lret
jge
cmp
pop
dec
mov
lds
jo
out
icebp
pop
pusha
inc
mov
mov
mov
mov
pop
jo
mov
or
lret
inc
cmp
iret
pop
adc
fidivl
push
fs
sbb
jae
mov
adc
mov
jge
dec
into
mov
outsl
std
clc
add
lahf
fsubrl
pop
test
xor
and
fisubrl
sub
fistpl
insl
or
dec
or
js
mov
lahf
enter
fmuls
and
pop
push
std
push
lret
xor
lret
mov
mov
lret
add
adc
mov
push
and
imul
nop
mov
or
cmp
dec
pop
pop
inc
dec
sub
add
cltd
rorb
pop
add
or
xchg
cmp
jmp
cmp
jg
data16
mov
push
jmp
scas
push
mov
pop
dec
and
das
cmpsl
in
outsb
and
test
jmp
xchg
test
jp
push
cmp
push
ss
xchg
inc
imul
jp
repz
fldt
insb
push
mov
mov
bound
aam
out
insb
add
mov
sarb
push
pop
js
lock
cmp
push
add
and
outsb
int
cmp
cmp
jg
xchg
ljmp
mov
push
pop
sbb
adc
jg
rclb
dec
cltd
or
xchg
shr
sub
push
or
add
pop
int3
divl
dec
dec
xchg
ret
push
mov
jg
sub
les
jmp
movsl
leave
iret
aad
cmp
mov
mov
push
decb
int3
das
cmp
mov
cmp
subl
sti
sub
mov
scas
adc
out
xchg
xor
mov
iret
fcmove
test
lret
in
insl
lcall
scas
mov
sub
inc
jg
jmp
test
sub
lock
inc
xchg
rcrl
and
jnp
and
int
addr16
push
sbb
pushf
loop
mov
rcrl
decb
adc
push
movsl
mov
repnz
stc
bound
pop
mov
xchg
jecxz
dec
popf
cmpsl
cltd
inc
pop
in
dec
mov
iret
lcall
int
mov
out
outsl
jmp
ja
mov
int3
push
repnz
add
test
mov
add
pop
sbb
rolb
xchg
popf
outsl
gs
ja
push
cli
sbb
loopne
pop
mov
push
out
xor
cld
mov
out
push
sub
dec
jb
loop
sbb
movsb
je
or
lahf
out
movsl
dec
or
ljmp
int3
adc
jne
inc
stos
subb
and
sub
mov
mov
pop
sti
mov
into
into
push
add
fcmovb
js
sbb
sub
outsb
lods
js
ret
psubw
popa
or
or
dec
das
gs
ja
test
loopne
iret
pop
out
out
shll
xor
or
imul
sub
scas
add
data16
pop
dec
or
and
add
mull
push
cltd
lock
inc
add
mov
dec
or
pop
cmp
dec
aam
push
fwait
aaa
pop
rorb
dec
push
xchg
data16
repz
gs
repz
pop
stc
sub
mov
in
inc
lea
xor
out
push
push
nop
inc
dec
loop
fyl2x
mov
cmp
mov
pop
dec
mov
cmp
loope
arpl
inc
aaa
dec
fildll
push
mov
jmp
repz
lods
data16
shlb
sub
popa
xor
out
sub
mov
notb
lret
inc
mov
pop
sbb
sub
sub
adc
push
mov
fiaddl
cmp
addr16
out
jecxz
cmp
push
ret
and
xor
imul
push
push
or
dec
sti
cmp
cmp
idivl
dec
lods
jns
push
mov
inc
inc
das
adc
popf
add
insl
outsb
lock
jp
cmpsb
movsl
rol
bound
inc
jp
fst
mov
ja
lock
popa
repnz
pop
aam
clflush
fs
js
into
xchg
push
icebp
out
mov
sbb
pop
pop
mov
sbb
in
stos
movsl
loop
dec
divl
jno
and
jns
mov
dec
ds
adc
mov
ret
bound
push
repnz
jmp
and
test
jle
into
or
xor
dec
mov
stos
and
mov
cltd
add
es
mov
push
int3
push
or
adc
jno
sub
mov
icebp
push
jo
ret
daa
pushf
sbb
addb
or
and
mov
je
add
shrl
adcb
jne
bound
aas
aaa
imul
lahf
bound
clc
dec
xchg
pop
addr16
out
lock
cwtl
xchg
iret
mov
jle
js
push
rolb
adc
inc
popa
in
bound
das
aaa
cmp
lds
mov
or
inc
push
pushf
pop
xchg
ud0
cmp
aas
adc
std
adc
mov
into
inc
pop
fs
out
pop
je
ficoml
je
dec
mov
test
cs
mov
rolb
xchg
test
cmc
mov
clc
in
cmp
inc
movsl
cltd
mov
pop
aam
bnd
mov
or
int
jbe
sbb
mov
pusha
lret
xchg
xor
xchg
sub
aas
jno
sbb
dec
add
cmp
ljmp
shl
push
or
fcom
ret
push
xor
jecxz
out
orb
inc
jmp
pusha
shll
std
push
mov
and
aam
mov
lahf
mov
jbe
pop
int
xor
rcll
popf
cmp
rorb
andl
lret
cmpsb
inc
addps
lds
je
into
popa
push
mov
aam
and
stos
sub
pop
inc
mov
fidivrs
sub
stos
lcall
out
hlt
push
jp
mov
mov
inc
jb
or
imulb
movsl
adc
cli
pop
xor
divb
mov
shll
sar
mov
push
test
add
es
mov
arpl
loope
imul
xor
jae
bound
fcomps
mov
and
mov
cmpsl
imul
pop
sti
jo
cmc
xor
vpsllw
push
mov
add
push
xor
repz
jnp
sti
pushl
inc
cmp
mov
xchg
push
dec
adc
inc
or
pop
adc
push
int3
stos
test
mov
mov
jne
lcall
lret
or
es
rol
repnz
mov
sbb
push
sbb
in
test
add
das
je
pop
jo
xchg
pop
pop
push
mov
gs
mov
inc
cwtl
call
jmp
push
or
loopne
xorb
das
jae
sarl
popa
out
add
lret
jp
cmp
test
gs
mov
or
sti
jp
nop
add
cmpsl
ret
push
sbb
xchg
mov
and
pop
fsubl
movsl
pop
orl
enter
fistl
mov
insl
push
out
adc
sarb
test
push
push
sti
lea
jecxz
mov
popf
outsl
out
rcrl
or
push
sub
adc
cli
aaa
addr16
js
mov
bound
adc
adc
push
data16
mov
test
pop
imul
mov
aad
push
rcrl
cmp
dec
fcmovne
cmp
fcomps
imul
fcmove
push
jecxz
repz
pushf
dec
and
stc
in
test
xchg
jp
push
pop
movsb
dec
sub
fdivs
ret
mov
and
mov
rcrl
sbb
add
rclb
jmp
push
sub
gs
ja
repnz
dec
dec
sub
cmp
sub
out
dec
add
hlt
adc
push
scas
std
outsb
sub
lods
bound
mov
bound
mov
addr16
dec
cmp
jmp
mov
mov
arpl
incl
mov
mov
sbb
repz
mov
dec
jp
int
push
shrl
pop
pop
in
movsl
push
or
inc
into
lret
das
mov
dec
lods
jle
fistl
sub
mov
and
dec
jmp
icebp
and
mov
test
iret
cmc
jnp
ljmp
pop
sub
test
mov
cli
inc
nop
ret
pop
stc
push
clc
gs
sub
int3
inc
out
xor
lcall
dec
jg
jle
push
out
out
and
inc
ret
sti
push
mov
lds
push
sbb
das
inc
jle
push
je
inc
and
inc
into
imul
and
lahf
arpl
add
enter
repnz
pop
add
int3
in
push
push
jp
enter
push
sub
mov
incl
and
sub
test
dec
call
xor
lret
scas
dec
mov
insl
xchg
dec
outsl
int3
pop
mov
stos
cmc
xchg
mov
fsubp
push
push
int
push
add
cs
sub
sarl
inc
iret
pusha
fcompl
and
mov
jmp
jle
dec
fiadds
fsubl
pop
mov
cmp
jne
push
mov
xchg
xor
clc
pop
not
mov
jns
inc
ljmp
push
xor
loopne
adc
sub
cmc
enter
cmp
xchg
cli
fisubl
xor
mov
add
jne
add
pop
mov
jns
add
mov
xchg
lock
test
cmp
fisubrs
sbb
sbb
jb
mov
lds
sbb
cmp
cmc
test
into
insb
cmc
cmp
push
mov
pop
mov
sti
push
pop
test
sbb
push
adc
mov
popf
loop
mov
loopne
pop
in
int3
push
mov
add
cmp
push
movsb
stc
cmp
mov
roll
es
jne
xchg
negb
jmp
and
in
insb
sub
repz
icebp
aas
ss
push
notb
divb
mov
adc
mov
pop
sbb
cli
pushf
xchg
stos
bound
pop
jmp
inc
mov
cmpsb
pop
mov
push
inc
ljmp
ret
adc
imul
mov
loopne
push
jne
mov
loop
ja
jmp
paddb
std
shrb
outsl
repnz
out
jnp
pusha
mov
loopne
nop
pop
lahf
stc
mov
jp
sub
push
ret
mov
lea
sahf
imul
bound
pop
or
ret
jnp
sti
jo
sub
pop
sub
mov
outsb
mov
sub
in
sbb
jo
push
sbb
xor
mov
add
push
mov
cld
jae
shll
adc
cwtl
dec
adc
adc
stos
xor
outsb
lds
mov
int3
xchg
adc
push
movsl
mov
loopne
push
inc
pop
jp
mov
sarl
or
or
mov
dec
aas
fidivrl
lret
mov
adc
ror
dec
inc
hlt
int
out
sbb
fbstp
xlat
jge
icebp
inc
test
lret
pop
stos
scas
insl
cmp
jne
cmp
lea
popf
enter
mov
push
dec
inc
xchg
int
fsubrl
and
mov
cmp
fwait
sbb
push
sub
mov
mov
mov
cli
insl
push
out
push
ret
int3
lea
cmp
adc
rolb
sbb
pop
in
pop
fnsave
insl
fdivr
mov
inc
or
lods
sbb
mov
cmp
push
pop
fistps
jbe
stos
shrl
scas
clc
rolb
cmp
jno
add
dec
add
int
shll
std
int3
scas
cs
push
insl
or
pop
jne
pop
push
mov
fadds
pop
sub
cmp
and
jge
scas
adc
push
jb
jecxz
ficomps
and
adc
aad
popf
shll
mov
or
sbb
xchg
decb
adc
ja
fstpl
mov
xor
test
lea
ret
lods
subl
aad
rcl
push
mov
int
sub
adc
aad
fucomp
sbb
ja
pop
addr16
call
sahf
sbb
loope
sbb
adc
pop
int
in
bound
mov
add
or
xor
dec
pop
cli
mov
insl
shrl
jge
sub
pop
popf
sub
lods
dec
mov
fcoms
or
rorl
loope,pn
repz
in
sbb
jb
and
xlat
sbb
icebp
and
pop
ljmp
fcompl
adcb
xor
push
push
mov
push
push
mov
imul
cmp
fisubrs
push
or
mov
mov
xchg
cmp
xchg
dec
push
pop
lods
insl
icebp
cmp
xchg
lea
iret
cltd
lock
mov
aad
loopne
arpl
int
lcall
xor
pop
std
rep
mov
lea
js
inc
sub
insl
sbb
push
pop
pop
insl
int3
pop
jge
insl
shrb
arpl
push
jecxz
lret
jecxz
dec
cli
sub
add
out
clc
aam
std
xor
add
xchg
stos
mov
cmp
cmc
aad
dec
cmp
push
pop
sti
pop
pop
icebp
insl
aad
jnp
movsl
scas
inc
xchg
pop
int3
rorl
mov
xchg
sbb
pop
insl
sbb
std
popf
lret
lods
aas
add
add
aad
mov
mov
call
jecxz
cmp
cmp
leave
mov
lea
inc
dec
xlat
xchg
jmp
lret
ret
lods
push
icebp
sub
cmpsb
xchg
into
push
dec
lret
mov
push
or
jmp
rcr
std
inc
or
icebp
out
mov
insb
dec
fwait
pop
lea
mov
mov
stos
mov
popf
and
lods
pop
xor
dec
push
iret
loop
lret
pushf
int
pop
fnstsw
into
ds
fldcw
pop
jge
insl
inc
fisubl
mov
stc
dec
adc
stos
fstl
rcrb
sbb
pop
cwtl
repnz
sub
jns
out
insl
iret
scas
aam
pop
jge
loope
xchg
pop
inc
test
icebp
cwtl
mov
push
jecxz
dec
stos
or
aam
div
sub
pop
rol
in
adc
movsb
stos
add
paddusb
jle
adc
mov
pop
ja
pop
mov
stos
orl
inc
aam
lods
mov
cmc
pop
or
xchg
or
dec
add
add
aad
fldl
mov
xor
ja
mov
push
sbb
add
push
add
adc
stos
and
adc
inc
je
out
or
xchg
sarb
jbe
fsubr
push
push
lods
icebp
rcll
or
mov
rcrl
int
out
int
sbb
stos
fucomp
in
mov
std
inc
sarl
mov
push
pop
push
cwtl
out
mov
mov
sub
popf
repz
ret
or
sbbb
lret
negb
icebp
add
push
dec
push
push
lods
sbb
or
mov
repz
dec
popf
sub
xchg
cmp
mov
data16
out
addr16
dec
data16
icebp
push
sbb
xor
mov
lods
jbe
scas
mov
aad
inc
int
xchg
mov
inc
dec
in
mov
or
cmc
push
sahf
or
mov
pop
push
or
int
fnsave
enter
sbb
pop
pop
or
insb
sbb
cmp
inc
adc
rolb
call
jge
lods
icebp
lds
and
add
int
jecxz
fldl
rcrl
push
dec
pop
sbb
sbb
cmp
stos
adc
icebp
scas
adc
sbb
das
repnz
mov
fmul
xchg
jg
insb
pop
fnsave
insl
aaa
stos
and
and
into
stc
or
mov
out
sub
add
xchg
add
add
sbb
stos
jge
lea
mov
int
dec
add
fldl
insb
in
loope
mov
fildll
adc
jb
sub
shll
or
lock
dec
sub
inc
into
iret
mov
mov
insl
push
jge
add
push
aad
lea
adc
lods
lret
sub
rcl
sbb
mov
dec
lock
and
lods
inc
insl
pusha
cmp
ficomps
lret
repnz
popf
insb
pop
lods
hlt
insl
movsl
stos
sbb
outsb
dec
push
sub
push
sub
jp
mov
xchg
fstpl
push
lahf
sbb
repz
xlat
into
shrl
clc
or
pop
cs
mov
ja
dec
in
rorb
aaa
into
jecxz
mov
pop
jge
push
adc
stos
outsl
mov
bound
es
loopne
int
loopne
out
adc
out
std
jb
pop
jg
je
cmp
call
inc
lret
sbb
insl
ret
stos
jge
lea
lods
bound
mov
int
loop
in
mov
sbb
cmp
sub
fisubl
cmp
adc
out
push
shrb
sub
sub
sbbl
stos
popf
lods
adc
bound
push
pop
rorl
mov
clc
mov
shl
cmp
icebp
jecxz
cmp
iret
dec
dec
lret
repz
sbb
pop
frstor
std
call
aam
or
stos
mov
cmp
cmp
icebp
inc
sbb
pop
aam
sahf
insl
in
icebp
dec
sub
popf
mov
sbb
xor
rorl
push
shl
xor
push
sub
mov
pop
fdivl
sub
icebp
scas
pop
and
inc
insl
fidivl
push
aam
mov
xor
xlat
jno
sub
push
push
dec
cmc
push
icebp
mov
jb
sbb
lret
sub
aad
dec
cmp
addr16
dec
mov
insl
cmc
stos
inc
popf
test
das
or
mov
int
arpl
mov
fldl
mov
cli
popa
cmp
daa
fisubrs
dec
cmp
pop
movsb
lea
cmp
into
add
adc
sub
cmc
in
xlat
sub
xchg
stos
dec
int
into
popa
in
mov
sub
dec
adc
xor
jbe
mov
pop
ljmp
push
mov
lea
jecxz
mov
pop
fmul
jmp
add
clc
aam
ffree
sbb
jecxz
pop
sbb
sub
lea
add
aam
pop
push
add
aam
jge
push
mov
fistpl
ljmp
sub
xchg
into
cltd
xor
lret
test
adc
or
ss
stos
mov
dec
rcll
int
fnstenv
adc
sub
adc
xor
icebp
adc
insl
das
cmp
or
xchg
mov
lods
sub
xchg
in
push
dec
mov
adc
push
pop
jo
stos
jge
mov
and
add
ret
push
push
sub
cmp
data16
insl
push
roll
hlt
jmp
cli
std
xlat
sbb
fidivrl
imul
fadd
lea
push
mov
cs
arpl
in
dec
adc
shrb
adc
sbb
lods
dec
shrb
mov
inc
insl
push
cmp
into
daa
jge
lea
icebp
rclb
xorl
xchg
lods
xchg
out
pop
mov
push
or
dec
js
mov
jl
push
data16
in
dec
loope
out
addr16
call
loopne
sti
imul
dec
mov
jb
and
stos
iret
xor
lret
or
test
ja
cmp
dec
aad
xlat
pop
pushf
into
sbb
lds
xor
mov
popf
bound
call
out
rorl
dec
pop
inc
lret
stc
in
push
std
jns
div
js
sub
jne
stos
pop
and
push
dec
pop
push
shrl
mov
mov
and
push
adc
xchg
out
pop
xor
int
or
sbb
idiv
xchg
push
jo
jne
jnp
xor
inc
mov
inc
dec
add
pop
push
addb
hlt
jl
imull
push
add
jne
pop
push
rcl
popf
cmp
xchg
cmc
or
sub
sub
insb
out
fcoms
mov
mov
pop
cmp
fimuls
xchg
or
mov
loop
sub
cmp
or
lea
add
hlt
clc
push
das
loop
mov
lods
test
into
pop
dec
stos
adc
movsb
aas
in
aam
loop
and
adc
sbb
sbb
sub
pop
sub
lea
push
xchg
fs
dec
aad
mov
or
and
in
fs
mov
fpatan
incl
push
jmp
fsubrs
pop
fstl
pop
in
mov
iret
ja
leave
inc
mov
cmp
lea
sub
push
fimull
mov
xlat
cmp
xchg
and
jne
pop
loop
in
cmp
dec
dec
and
inc
pop
loop
sbb
icebp
sahf
cwtl
jbe
cmp
or
adc
cs
xlat
lcall
idivl
ss
or
dec
iret
icebp
cwtl
mov
pop
insb
adc
insl
mov
lret
addr16
jge
lea
insb
sbb
stos
mov
aam
ljmp
add
pushf
int
data16
cmpsl
push
xchg
mov
in
sbb
std
ljmp
sub
iret
cmp
cli
dec
mov
aam
insl
pusha
pop
jge
dec
push
pop
je
hlt
mov
adc
int3
out
cld
rorb
cld
mov
pop
loope
scas
add
sub
stc
fdivrl
scas
in
sub
jns
cld
shl
adc
jecxz
int3
fidivrl
sbb
shl
push
sbb
cli
cmpsl
popf
shrb
int3
dec
std
int3
nop
je
pop
sbb
dec
in
mov
push
or
add
fwait
scas
jge
mov
mov
xchg
rcll
pop
push
insl
fldenv
stos
or
or
cmp
ds
adc
sbb
ficoms
addr16
insl
or
fwait
add
xchg
int3
sub
out
xchg
dec
repz
je
or
out
pop
jp
dec
arpl
fdivr
outsb
sub
xor
or
roll
jge
xchg
sub
lea
lods
xchg
scas
adc
jae
jno
mov
test
or
sbb
inc
fwait
cmp
loope
jb
adc
cmp
jo
push
ror
xchg
mov
clc
pop
les
out
aam
sbb
pop
movsl
stos
adc
mov
dec
mov
mov
adc
push
in
and
test
in
lods
sbb
adc
add
sarl
aam
mov
mov
jge
inc
xchg
shll
xlat
mov
push
dec
mov
int
inc
mov
cmp
ds
pusha
loop
adc
jmp
sub
xchg
cmp
ja
mov
push
scas
out
stc
inc
sbb
in
dec
aas
iret
push
adc
loop
sbb
or
icebp
xchg
mov
insl
jne
sbb
sbb
aad
sbb
add
insb
dec
push
ret
jp
mov
rorl
mov
insl
scas
mov
mov
loopne
lea
fdivrs
lock
mov
movswl
mov
dec
mov
int
lea
rorb
mov
mov
sub
jl
cmp
std
jg
xor
rorl
jmp
sub
cmc
xchg
icebp
add
jnp
outsb
notb
push
insb
mov
insl
jae
test
pop
es
out
push
insb
mov
push
adc
push
pop
jp
add
adc
sbb
std
test
lcall
stos
push
cmp
repz
aad
insl
and
xchg
jle
add
lsl
or
adc
dec
push
movd
jle
push
in
cli
std
nop
movsw
neg
ror
popf
icebp
mov
lods
mov
xchg
scas
jae
int
mov
lret
pop
dec
mov
mov
dec
push
cli
mov
add
stc
aad
pop
adc
ljmp
cld
lods
xor
icebp
dec
sar
pop
cltd
jp
int
fisubrs
mulb
xlat
push
icebp
cmp
lock
jp
lret
lret
pop
mov
int
rcrl
stos
sub
mov
stos
std
sub
aad
push
mov
adc
jns
rcrl
cmp
xchg
sub
pop
in
or
jge
popf
pop
into
push
mov
mov
mov
dec
movsl
dec
in
pop
inc
insl
imul
rcrb
std
push
test
aad
mov
int
push
push
push
hlt
cmp
push
inc
sbb
pop
icebp
pop
or
vmovups
stos
out
adc
xchg
ja
or
pop
jae
xor
insl
movsl
stos
mov
testb
pop
lods
icebp
add
xlat
sti
mov
pop
xchg
jo
ficomps
xlat
outsl
sbb
repz
pop
xlat
sub
decb
jge
mov
xor
xor
mov
mov
pushf
cmp
lahf
negb
xor
push
std
push
daa
lods
add
popf
xor
fsubr
icebp
sbb
loop
fnstsw
sahf
push
xlat
ljmp
dec
adc
jne
test
fists
into
dec
jecxz
fisubs
mov
xor
dec
jo
push
sbb
cmp
ret
mov
aam
pop
lea
and
push
mov
fprem1
sbb
rorb
shrb
in
push
cmp
aad
jbe
stos
sbb
jmp
cli
pop
mov
popf
xor
arpl
sbb
add
push
dec
sbb
int
divl
rcll
or
inc
dec
int
sbb
or
jge
jp
std
inc
inc
sub
push
pop
cmp
fimull
pushf
out
sbb
call
add
mov
imul
aam
dec
sbb
cmc
push
adc
xor
je
dec
push
pushf
fcompl
and
mov
fcmovne
stos
lods
adc
je
lret
out
int
xchg
in
aaa
out
dec
std
insl
outsb
stc
loopne
out
xchg
ficomps
insb
adcb
iret
push
mov
mov
lea
in
mov
dec
out
popa
int
fsubrp
fldl
outsb
test
and
cwtl
sub
dec
repnz
lods
icebp
mov
dec
hlt
imul
int
mov
js
sbb
outsl
push
dec
jge
stos
pushf
std
aam
sub
repnz
xor
push
insl
out
add
out
ja
in
int
and
and
push
and
mov
lods
fnstenv
push
push
imul
das
int
lea
into
xchg
paddw
data16
jb
stos
das
sub
and
adc
mov
jle
inc
repz
call
mov
fwait
in
int3
dec
imul
push
sahf
push
xor
imulb
fiaddl
push
sub
xor
ss
aam
into
jne
cmpsl
decl
cld
aam
sub
loope
xchg
stos
sub
adc
or
push
lock
shl
loopne
push
xor
push
xchg
rolb
aad
sub
jno
aam
sti
pop
dec
rcrb
mov
insl
pop
fcoml
mov
dec
push
pop
int
jp
fstl
inc
sarb
push
in
movsb
jbe
lods
xchg
shll
or
cmp
sub
xor
sahf
jne
jmp
insl
add
dec
push
sub
adc
imul
inc
cmp
aas
cmp
ds
dec
fstpl
stos
ror
repnz
xor
sub
sti
add
adc
das
repz
pop
adc
and
push
mov
cmp
imul
cmp
int
std
rorb
js
pop
or
or
add
adc
mov
pop
imul
dec
pop
fstp
xchg
ss
mov
dec
mov
push
roll
inc
dec
mov
int3
pop
orl
jge
sub
hlt
inc
into
popf
mov
mov
notl
pop
jge
mov
add
ror
push
rol
test
push
shl
stc
cmc
sbb
push
not
mov
shrd
inc
push
pushf
not
add
cmp
mov
rcl
movzbl
xchg
mov
sub
xadd
or
mov
ror
or
add
sbb
sub
lea
pushf
mov
call
pop
lahf
dec
pushf
push
hlt
insb
roll
push
inc
iret
pop
or
push
ret
xchg
pop
lret
test
mov
mov
push
push
sti
inc
pop
stc
filds
xor
stos
pusha
in
pusha
sbb
pop
shll
mov
dec
enter
scas
mov
jb
stc
jge
loopne
xchg
mov
stos
sti
data16
mov
in
jmp
sub
sti
jno
movl
jmp
mov
mov
pusha
jnp
jecxz
popf
cmpsb
or
push
lahf
dec
pop
into
ret
pop
iret
ss
out
stos
dec
idivb
call
adc
arpl
rcrb
nop
addr16
shrl
ficompl
test
push
xchg
jb
out
cwtl
sbb
out
jge
int
or
lret
lahf
movsl
arpl
pop
jns
mov
fstpt
xor
popf
adc
adc
xchg
das
cmp
inc
xchg
pop
jg
test
dec
push
pop
rsm
fs
push
jnp
dec
or
lret
or
ret
push
pop
add
cltd
aam
in
repz
pop
xchg
fimull
or
push
mov
lea
xor
xor
mov
or
adc
adc
sbb
mov
lret
or
repnz
cmp
pop
push
mov
mov
xor
xlat
add
adc
lods
addr16
cltd
adc
hlt
mov
push
dec
loopne
imulb
jl
xlat
test
cmp
lock
xchg
mov
jp
mov
cmp
lock
sub
ret
cmp
add
pushf
mov
test
test
movb
pusha
lea
je
stc
pusha
bt
pushf
sub
jmp
and
push
cltd
aam
push
sub
jbe
test
stos
stc
xor
test
out
mov
or
dec
push
adc
outsb
gs
aam
out
sbb
inc
sbb
add
mov
fcom
xchg
mov
out
bound
iret
jne
cmpsl
pop
dec
adc
mov
stos
insb
call
and
lods
push
int3
sub
clc
repnz
ret
or
pop
adc
mov
clc
das
xor
orl
rcr
push
inc
inc
or
aaa
ja
inc
movmskps
jecxz
cmc
mov
icebp
xor
ficompl
iret
push
push
inc
idivl
adc
mov
inc
aam
xor
call
ljmp
das
adc
divps
mov
xchg
or
sub
xlat
push
add
adc
aad
sbb
lret
ret
dec
add
iret
ret
push
cltd
adc
out
dec
out
push
fisttpl
out
cmp
dec
les
push
mov
repz
sti
mov
in
popf
sbb
inc
push
fsubs
and
in
xchg
sub
mov
test
pushf
mov
cmp
mov
sub
mov
insl
mov
cmc
xor
jo
icebp
jp
aaa
jge
xor
mov
sub
sarb
test
fwait
jae
fwait
pop
or
add
int3
popf
xchg
push
lds
lahf
mov
pusha
pop
adc
in
pop
dec
xor
test
mov
push
adc
loope
insb
sbb
dec
and
xor
roll
sbb
idivb
jmp
add
inc
in
mov
add
out
sub
int3
cmp
into
in
test
mov
aaa
or
fistpl
add
int
xchg
inc
aaa
jns
mov
inc
or
les
int
dec
or
int3
sub
pop
pop
call
sub
stos
sub
aas
out
arpl
jo
repnz
sub
cwtl
pop
ljmp
stc
pop
push
cmpsl
jmp
ds
cmpl
mov
jno
sahf
inc
jno,pt
jbe
add
imul
inc
xchg
dec
aas
out
js
push
lea
insl
out
call
loop
lods
arpl
sub
xor
loop
out
fs
out
leave
xchg
cltd
mov
dec
dec
lcall
popa
cwtl
fistpll
sbb
jg
mov
push
xchg
jge
xor
imul
repnz
or
scas
mov
into
repz
outsl
incl
jmp
mov
sbb
ret
add
loope
push
inc
cmc
rorb
jmp
out
out
mov
pop
es
outsl
out
inc
fsubrl
cwtl
sti
and
int3
xchg
leave
iret
or
dec
inc
inc
or
inc
or
sub
xchg
int
xchg
add
pop
push
fists
xchg
mov
sbb
lret
movsl
add
aad
ret
mov
mov
scas
insl
pop
fstp
pushf
push
adc
dec
out
fstl
lret
push
sbb
inc
dec
dec
call
sti
aaa
cmp
in
cmp
and
mov
inc
mov
subb
dec
dec
inc
pop
lahf
pushf
in
ja
mov
sub
in
jg
sbb
cmp
testl
sub
and
js
sti
int3
sub
data16
fldt
clc
and
sub
sub
mov
icebp
lods
push
pop
xchg
out
outsl
mov
sbb
add
daa
xchg
ret
xchg
sbb
mov
incb
imul
cli
sbb
outsb
sbb
popa
neg
xchg
xchg
iret
dec
add
imul
pop
in
push
pop
mov
inc
mov
popf
roll
int
in
lds
sbb
sub
lret
pop
pop
xchg
sbb
cmc
in
or
mov
iret
out
ret
lret
inc
inc
add
push
test
test
shlb
adc
or
or
xor
add
bswap
imul
mov
pusha
push
cmp
sarl
add
mov
sub
jne
dec
xor
mov
xchg
sbb
mov
jbe
mov
cmp
test
xchg
mov
jo
xor
mov
jmp
or
in
jmp
xchg
in
jge
dec
push
test
push
lock
int
jnp
or
cli
fists
xor
sahf
fwait
xchg
aam
sbb
sbb
push
int3
sub
jae
rcrb
and
lea
jae
pusha
cmp
jmp
mov
and
and
in
push
fxch
xchg
fcmovnbe
push
test
or
cmp
lods
or
jge
xchg
pop
jno
xchg
dec
add
std
jp
mov
repnz
outsl
mov
stc
inc
mov
push
push
dec
jbe
sub
repz
js
jl
mov
out
subl
sbb
mov
lods
add
mov
cmpsb
xchg
clc
test
roll
lret
or
ja
pushl
mov
lea
call
clc
stc
cmc
push
sub
call
gs
cmpsb
mov
loop
fisubs
pop
fistl
push
inc
dec
inc
mov
notb
jecxz
loope
jb
push
mov
rol
movsl
out
int3
rcrb
ja
adc
dec
adc
inc
fwait
sbb
or
incb
adc
mov
add
add
push
ljmp
add
mov
lahf
call
mov
or
addr16
loope
sub
in
ljmp
int3
sub
aas
cmp
mov
call
inc
lods
pusha
bnd
and
push
pop
stos
js
in
jp
es
imul
test
dec
ds
dec
xlat
sub
loop
movsl
cmp
sub
js
or
sub
pop
pusha
or
push
adc
gs
call
push
adc
inc
lea
mov
or
adc
sub
jae
pop
sub
lahf
repz
arpl
mov
test
sub
xor
outsb
and
push
stos
sub
insl
std
xor
xor
outsb
cmp
and
mov
pop
add
ljmp
sbb
nop
ljmp
cld
cld
movsb
sbb
outsb
or
mov
mov
leave
xchg
pop
andl
or
adc
bound
test
push
inc
mov
jge
jne
fnsave
js
jo
push
fsubrl
mov
dec
add
ja
cwtl
adc
xchg
sbb
rcll
sbb
adc
dec
mov
dec
outsl
arpl
inc
insb
insb
outsl
arpl
inc
mov
dec
dec
sbb
pop
push
ret
or
lea
add
fsubrl
repz
enter
lods
push
cmp
test
movsb
pop
bound
sub
ja
fdivrs
mov
mov
mov
lods
dec
inc
sbb
stos
and
test
jo
and
addr16
test
push
and
lods
icebp
mov
int
inc
andb
xor
mov
cmp
ja
int3
sub
dec
rcrb
fs
call
pushf
push
pushf
lea
jae
call
lret
pop
lret
fnsave
jecxz
mov
sub
test
cltd
push
fdivrs
out
pop
test
sub
mov
popf
int
ret
add
leave
add
jp
ds
xor
lods
sti
push
cmpsb
jno,pt
aaa
cmp
icebp
sti
dec
hlt
jg
ds
adcb
in
and
pop
inc
leave
pop
sti
pop
sbb
es
jge
hlt
mov
rcl
adc
fistpl
pop
adc
rcrl
xchg
fcmovbe
int3
sub
test
sub
sti
add
in
fucom
fists
sbb
rol
or
ret
leave
ficoml
call
js
mov
ljmp
sbb
adc
and
cmpsl
jbe
cwtl
pop
outsl
popa
jp
gs
push
xchg
jle
or
aaa
mov
dec
cmp
mov
mov
xchg
outsb
xor
jecxz
jle
add
jno
or
push
xchg
push
xchg
xchg
push
xchg
xchg
push
sbb
in
aad
jmp
sub
mov
jns
xchg
pop
fisttpl
inc
push
or
or
inc
xor
jge
adc
jge
push
outsb
arpl
jne
lret
bound
xor
jp
add
fisubs
test
cmp
insl
mov
bound
push
xchg
daa
sub
dec
and
loopne
push
lea
mov
es
and
int3
or
inc
jl
mov
sbb
int
and
sub
cmpsb
and
loopne
popa
in
sub
sub
div
shrb
into
or
xchg
sbb
lret
ficoml
fxch
ret
into
mov
iretw
call
movlps
cld
xor
sbbw
sbb
aas
int3
cmp
or
mov
cmpb
push
lds
outsb
aas
add
xor
adc
pop
or
cli
insl
jge
dec
imul
das
ret
sbb
addb
int
inc
or
int3
sub
lcall
std
andb
xor
dec
xchg
data16
int
sub
mov
pop
dec
ss
sbb
lods
jge
imul
fs
aam
pop
into
add
jecxz
sub
test
sub
mov
inc
testb
stos
aam
lahf
mov
inc
mov
test
and
pop
faddl
xor
lcall
in
and
aas
jno
rep
loopne
cmp
sub
push
xchg
dec
lret
mov
xor
and
push
dec
xor
lea
push
inc
xlat
mov
or
inc
dec
sbb
jbe
dec
mov
sbb
sbb
int
jg
scas
mov
aad
mov
dec
rcrb
mov
or
adc
ret
push
sub
aas
div
js
jp
ss
lods
inc
and
xor
mov
lods
movsb
sub
cmp
sub
mov
aas
repz
sub
ror
xchg
sbb
pop
fisubs
jnp
aad
or
mov
push
mov
push
test
icebp
je
sbb
scas
dec
inc
fwait
jecxz
loope
das
cmp
mov
cmp
je
inc
xor
movsl
testl
mov
pop
ds
and
pop
lret
pop
shrb
mov
xchg
sub
rcl
sbb
addl
or
int3
sub
pop
pop
jmp
fists
push
fwait
xchg
fwait
push
xchg
test
jns
andb
add
xor
sub
sub
mov
scas
mov
jl
stos
stc
lods
stos
mov
xor
inc
and
add
inc
mov
sbb
push
in
push
sbb
add
push
lea
or
mov
insl
jecxz
sbb
fcoms
mov
enter
dec
lea
mov
int3
sub
xchg
xchg
lods
popa
adc
adc
dec
xchg
ficoml
dec
inc
pop
inc
fcmovnu
push
and
add
loopne
add
ret
nop
pop
out
mov
and
inc
and
add
pop
shrl
xchg
cltd
repnz
mov
mov
adcl
cwtl
xlat
fdivrs
mov
sbb
fs
or
xlat
rcll
nop
push
fst
adc
int3
sub
jmp
mov
pop
setl
mov
lea
push
mov
pushf
mov
movb
pusha
mov
lea
setg
bswap
lea
mov
movb
mov
bswap
call
out
and
jecxz
test
ja
fcoml
pushf
popl
pop
sbb
movsl
jmp
pushf
les
xor
ret
in
fidivl
inc
add
pop
insl
xlat
push
ljmp
iret
mov
pop
fisttpl
pop
int3
or
cmp
sarb
mov
lcall
fidivrs
mov
xor
pop
dec
addb
dec
mov
test
int3
sub
fstpl
push
lahf
adc
push
push
sarl
xchg
inc
mov
enter
push
test
xlat
jge
test
mov
in
xchg
sbb
daa
mov
cwtl
cmp
and
add
cmp
or
aaa
cli
cmp
test
mull
or
popf
sbb
pop
fists
xchg
sbb
fs
push
vandnps
fstl
arpl
cli
jnp
outsl
mov
xor
and
cmc
js
fs
push
lcall
dec
pushf
loopne
hlt
ljmp
daa
shll
xor
call
lea
or
insl
xor
jp
loopne
jmp
lahf
dec
add
jecxz
outsl
push
jb
push
nop
sbb
lock
inc
add
ret
test
int3
sub
lcall
mov
fimuls
cmp
cmp
in
xor
mov
stos
jne
pop
inc
and
adc
into
add
lods
cltd
xchg
lds
sub
das
xchg
loopne
sahf
addb
push
call
push
mull
scas
cmp
xchg
icebp
aas
push
mov
aas
xor
cmc
mov
cmp
icebp
int3
sub
lret
movb
pushf
jmp
pusha
mov
jge
insl
sbb
sub
sbb
fcoml
mov
mov
xchg
sbb
sub
std
cmp
mov
cmpsl
sub
dec
std
pop
jl
inc
icebp
cmp
pop
adc
pop
stos
pop
data16
xchg
pop
aad
mov
cltd
push
xor
jno
add
cltd
mov
inc
shlb
mov
inc
lahf
mov
cltd
pop
xchg
sbb
rcrl
inc
bound
or
iret
push
pop
nop
and
jbe
fimull
xlat
inc
xchg
inc
or
dec
sbb
ror
adc
dec
xchg
xor
dec
shlb
hlt
dec
test
sub
leave
pop
pushf
iret
xor
cmp
adc
and
fwait
icebp
jle
lods
sub
xchg
out
in
aad
clc
lret
add
loope
add
mov
adc
inc
dec
icebp
loope
out
out
fs
mov
sub
int3
sub
hlt
jbe
cmpsl
push
inc
push
ja
sbb
jo
mov
out
mov
imull
adc
adc
and
iret
pop
negl
mov
cwtl
sbb
inc
ds
divb
imul
sub
ficoml
mov
lahf
repnz
mov
adcl
sbb
adc
aas
out
insb
xor
loop
pusha
in
mov
pop
push
adcb
rcrl
rcr
adc
mov
push
and
push
je
push
xor
movsl
daa
push
mov
lods
sub
movsb
stos
xor
outsb
inc
testb
cmp
add
mov
mov
xchg
lcall
daa
mov
jmp
std
mov
push
cmpsl
lods
and
daa
loope
int3
sub
stc
repz
or
lea
pop
pop
shrb
xor
jb
sub
cli
mov
insb
movsb
mov
mov
test
inc
movsb
popf
ror
out
pop
fsts
sbb
sub
sbb
xchg
scas
fdivr
iret
int
xchg
stos
pop
push
daa
cli
jle
adc
ljmp
and
mov
mov
rcrl
push
dec
mov
repz
mov
mov
cmp
sti
jge
repnz
int3
sub
push
or
pushl
lea
jne
not
daa
mov
xor
shl
push
neg
mov
add
pushf
add
shl
mov
bt
test
mov
jmp
inc
pop
adc
or
lods
cmp
mov
aaa
in
mov
mov
lods
in
sbb
shrl
xor
mov
inc
fs
cmpsb
xor
insl
jmp
cmp
data16
jecxz
ja
cmp
sbb
or
mov
lcall
push
fdivs
repnz
and
stos
mov
outsb
ljmp
std
les
aas
and
jne
icebp
pop
addr16
sbb
adc
fcmovnbe
and
aaa
inc
mov
cmp
pop
xchg
push
pop
out
add
dec
sbb
in
lds
pop
push
cmpsl
test
inc
out
mov
mov
add
sarl
push
cld
inc
cmpsb
outsl
adc
fisttps
dec
and
sbb
les
cli
push
mov
adc
xor
or
and
arpl
out
call
xlat
xlat
fists
fdivrl
pop
dec
pop
push
fcompl
int3
sub
fcom
insb
jl
scas
ds
fs
cmp
and
xlat
xlat
fists
xor
mov
scas
ljmp
jp
sub
xlat
stos
lods
js
scas
push
scas
and
lods
pop
xchg
mov
ljmp
push
popf
leave
and
mov
cld
jno
sub
inc
cmp
jae
pusha
call
movw
push
movl
jmp
mulb
imul
pop
fistpll
and
xor
aaa
out
cmp
sub
fwait
sbbb
push
mov
or
mov
testl
push
dec
push
mov
ret
in
push
inc
dec
out
std
fsubrl
or
ret
jp
dec
add
add
sub
sbb
pop
push
lcall
int3
sub
xor
ror
pushf
mov
lea
rcr
mov
pusha
bt
jmp
call
xor
and
fs
cmp
xor
push
mov
stos
or
mov
adc
dec
in
stos
dec
out
iret
loopne
mov
and
addl
xchg
xchg
jns
push
xchg
sub
cmc
mov
dec
inc
lret
int3
scas
mov
fstl
lds
stos
xor
or
pop
inc
mov
daa
popa
stos
outsl
in
stos
sub
int3
sub
sarl
movsb
stos
data16
imul
and
mov
dec
sub
in
mov
add
movsl
dec
rcrb
jg
test
js
adc
loopne
out
ljmp
adc
pop
shlb
inc
xchg
sti
and
mov
rcll
dec
pop
xchg
stos
jp
mov
movsl
in
mov
mov
cmp
ja
insb
sbbb
sahf
adc
pop
adc
cmp
mov
add
and
cli
cld
pusha
mov
nop
mov
fmul
in
loopne
xor
dec
stc
lcall
aad
lods
mov
jge
mov
pop
punpckldq
out
or
shll
scas
or
jb
push
mov
and
jle
pop
iret
adc
dec
jb
maxps
sbb
cmp
adc
stos
add
mov
int3
xchg
or
insl
out
ds
dec
lcall
sbb
scas
std
in
fwait
stos
mov
mov
pop
xchg
push
push
int3
or
shl
loopne
add
outsb
mov
pop
dec
std
sub
adc
mov
add
popl
insb
jne
jl
int3
fiaddl
out
adc
gs
gs
or
shll
add
arpl
jmp
sub
or
shl
mov
xor
ljmp
and
adc
popf
sbb
pop
dec
in
dec
int3
int3
xor
es
repnz
cmp
xchg
inc
pop
xor
jmp
in
rcl
ror
lret
xchg
xchg
pop
push
jmp
jne
jge
in
ljmp
ljmp
dec
inc
mov
push
dec
adc
mov
add
cltd
popf
std
dec
xchg
mov
xchg
mov
push
mov
fisubrl
mov
mov
jo
or
in
das
pop
fidivrl
or
pop
shl
mov
dec
jge
std
test
fists
jge
jecxz
cwtl
cltd
call
fadd
rcr
xlat
cmp
jecxz
cld
shl
push
out
dec
xor
cli
pop
push
mov
pop
or
or
int
stc
fmuls
mov
pop
pop
into
sarb
ret
xchg
aas
stos
pop
mov
jmp
ret
adc
fisubrl
cmp
xadd
xchg
xor
pop
sub
mov
push
stos
into
cli
mov
lds
rcl
push
dec
fnstenv
int3
jo
mov
pop
ss
out
shlb
push
inc
inc
pop
dec
sar
fidivl
pop
lods
xchg
xchg
cmp
into
pop
adc
push
data16
dec
fs
push
repz
fildl
adc
pop
imull
loop
fmul
pop
and
rcll
idiv
adc
push
int
inc
imul
data16
push
bound
push
mov
sub
fdivrs
sahf
out
rolb
rorl
shr
xor
ljmp
cli
iret
addr16
ljmp
dec
dec
push
dec
sbb
push
push
rsqrtps
rclb
sbb
cmpl
into
ret
cli
push
into
call
push
dec
ds
mov
leave
add
inc
jb
push
roll
fldenv
popa
into
pop
int
jge
lret
into
jb
mov
mov
adc
hlt
arpl
into
xchg
inc
aas
orb
sbb
dec
jae
jo
dec
int
add
mov
into
fimull
inc
mov
push
push
ret
pop
dec
hlt
arpl
je
leave
jg
jecxz
cwtl
dec
addl
call
cmpsb
fcmovnbe
push
into
jp
add
rcrb
fsubrl
or
orl
mov
test
scas
out
xchg
aam
loop
or
dec
inc
adc
enter
fistpl
or
popa
push
leave
out
pop
aam
fisttps
push
sbb
or
jb
or
sbb
adc
or
aas
push
hlt
push
test
and
inc
dec
jp
call
dec
inc
rorl
popf
int
dec
out
xchg
mov
dec
test
imul
fadds
dec
test
outsb
dec
enter
mov
push
ja
cmp
testl
inc
rorl
pop
out
ja
cmp
int
dec
jno
dec
pop
fmuls
mov
push
dec
aas
pop
dec
inc
sbb
cltd
push
push
jo
lahf
in
test
sub
call
mov
mov
dec
icebp
popf
push
jbe
mov
dec
mov
dec
fldt
fdivrl
xchg
sbb
adc
in
push
ret
pop
stos
testl
fnstenv
push
dec
jno
ja
icebp
add
in
rolb
mov
arpl
dec
lds
or
xchg
rorb
xchg
dec
sbb
in
xor
sbbl
sti
stos
clc
mov
sarl
dec
call
sbb
lcall
mov
decb
mov
movsb
dec
jnp
into
add
mov
rcrl
addr16
dec
dec
xchg
dec
sub
adc
jbe
adc
cmp
outsb
int3
js
js
addr16
in
outsl
jb
fidivrl
stos
in
cmp
hlt
pop
inc
fidivrl
adc
aam
xchg
xchg
iret
add
push
adc
cli
xchg
inc
ret
cmp
out
inc
cmp
mov
test
test
inc
inc
cmp
sarl
leave
pop
int3
jb
lcall
mov
iret
test
inc
addr16
clc
fidivs
or
dec
imul
sti
or
popf
fwait
or
jg
dec
adc
pop
cmc
stos
repnz
or
shr
or
rcrl
mov
pop
cmp
gs
inc
mov
lds
xchg
inc
jne,pn
lret
cmp
cltd
dec
jb
inc
cmp
sbb
cmp
xor
mov
add
cmp
loope
mov
cmp
or
leave
mov
fwait
inc
aad
mov
call
mov
inc
dec
imul
lret
jb
dec
dec
ds
pop
push
jp
pop
add
stos
aas
rorl
mov
out
imulb
into
jl
adc
jp
dec
dec
sarl
lds
mov
adc
jle
push
pop
xchg
push
mov
popa
add
data16
sbb
iret
inc
bnd
sahf
leave
clc
mov
and
scas
dec
leave
fucom
or
int
sbb
xchg
or
popf
push
ja
pop
and
cmp
leave
mov
ficompl
cmp
mov
fstpt
adc
lea
or
out
iret
sbb
aam
mov
cmp
adc
pop
sbb
fnstenv
sub
fyl2x
mov
push
mov
xchg
mov
pop
popa
push
mov
and
adc
push
or
scas
fistps
popf
aam
push
and
sbb
mov
cmp
out
sbb
call
cs
out
xor
or
mov
adc
jl
shl
stos
inc
stos
and
stos
pop
decb
push
fadd
fadds
mov
int
jmp
cld
push
inc
dec
jecxz
add
in
push
scas
out
jp
add
jmp
push
push
and
pop
adc
pop
sbb
sub
sub
in
sbb
push
push
cmp
jl
jg
push
ds
sub
push
aas
jg
and
icebp
dec
or
loope
jae
mov
insl
jmp
lea
test
rorb
fldt
out
out
out
cmc
pop
iret
mov
lock
sarb
stos
fmull
sbb
adc
push
or
mov
sbb
pop
sub
jecxz
push
sub
add
stos
fdivs
out
cmc
int3
mov
jecxz
fildll
insl
rcrb
push
call
push
adc
xor
mov
xor
shlb
inc
dec
test
add
outsl
nop
push
shll
and
add
scas
push
rorl
cmpsb
inc
sub
add
jbe
jg
sahf
mov
pop
cmp
in
cmp
sub
xchg
lock
pop
mov
pop
iret
rcl
mov
sahf
mov
mov
sbb
pop
rcl
mov
mov
mov
sub
dec
push
fistps
or
fidivrl
rclb
sti
dec
in
xor
or
js
in
lret
outsl
mov
adc
cmc
sar
pop
sti
dec
into
push
or
push
ss
dec
sbb
xchg
pop
cmp
orb
xchg
fmuls
sub
dec
dec
lret
push
xchg
std
mov
cli
or
pop
sbb
mov
in
mov
jecxz
fidivrs
cmpsl
mov
fmull
arpl
push
mov
xchg
lret
sub
cwtl
dec
ljmp
bound
dec
push
dec
scas
sbb
adc
subb
mov
dec
sti
imul
out
dec
jle
lds
decb
int
dec
rorl
mov
or
xlat
imul
mov
outsb
or
repz
or
mov
sub
cltd
bound
pop
int3
ss
cltd
ror
xor
sarl
icebp
or
sub
or
dec
adc
mov
js
sbb
outsb
out
add
adc
cwtl
xor
sub
push
cli
push
rcll
xorb
es
xchg
push
insb
dec
xchg
dec
in
fsts
jl
sbb
fmull
data16
fisubrs
push
jle
sbb
add
into
ficomps
or
add
insb
out
dec
rclb
out
or
cmp
fs
fwait
insb
test
and
nop
nop
sub
mov
mov
or
stc
stos
repnz
mov
stos
and
xchg
mov
or
cmpsl
mov
sahf
mov
add
xchg
ud2
sbb
adc
push
stc
or
lods
sbb
aad
roll
outsb
add
fs
out
pop
int3
arpl
add
das
fstl
jp
sahf
adc
and
jle
xchg
dec
sub
lahf
or
cwtl
lods
fdivrl
pop
or
cld
outsb
aaa
incb
fsubl
jle
xor
inc
xor
mov
shll
aad
shrl
xchg
arpl
scas
jle
sbb
rclb
adc
mov
pop
and
mov
call
mov
fcomp
loopne
js
loop
jg
pop
pop
lods
adc
and
mov
or
adc
mov
sub
pop
sbbb
jecxz
bound
jno
pop
mov
lret
add
movl
push
adc
add
das
scas
push
mov
adc
mov
iret
shlb
and
push
jp
xor
mov
lret
xor
scas
xor
xchg
push
and
dec
cmc
fldt
mov
cs
out
push
dec
cmp
pop
mov
push
nop
jle
mov
in
fcmovbe
popf
or
lret
mov
mov
punpcklbw
cs
daa
out
pop
insl
fistpll
cmovae
out
inc
pop
pop
ror
xlat
push
lods
rolb
mov
inc
inc
push
mov
lcall
shll
insl
dec
pop
jno
xor
aam
add
push
cltd
test
adc
pop
call
incb
xchg
mov
ret
cmp
js
and
fs
ficompl
sub
inc
data16
mov
test
cmp
add
pop
push
lcall
push
sarl
xchg
xor
push
lds
in
out
dec
or
sub
lret
cmpsb
jecxz
pop
rcll
repz
mov
bound
rol
push
scas
cs
or
or
lds
mov
bound
lock
xorb
jmp
sbb
or
movsb
mov
sbb
sbb
imul
mov
jp,pn
fldcw
jecxz
mov
jp
and
lret
hlt
xchg
push
addr16
xchg
aad
decb
dec
test
sar
lock
sbb
mov
adc
jbe
loope
cmp
adc
jg
in
mov
cmp
iret
or
imul
jmp
push
jae
lods
pop
repnz
in
paddd
dec
fcomp
mov
aas
push
push
lret
dec
sbbb
push
icebp
push
sahf
xlat
or
sbb
sbb
adc
testl
dec
rorl
icebp
add
cmp
pop
xchg
iret
jg
aas
adc
stos
lahf
or
ja
rcl
aaa
scas
dec
lods
mov
fsub
and
sbb
push
mov
sbb
inc
cld
stos
addr16
neg
sbb
mov
add
cs
aad
jns
xor
push
int3
loope
mov
jnp
sbb
dec
push
lcall
mov
or
lret
scas
adc
inc
mov
adc
xlat
cmp
xchg
stos
mov
ret
into
cmp
adc
addr16
cs
call
out
in
adc
or
dec
sbb
sbb
icebp
and
addb
loop
lods
jle
jg
xchg
out
dec
sbb
or
imul
jmp
cmp
test
cmc
push
sub
adc
inc
stc
lahf
mov
out
mov
outsb
or
adc
xlat
push
pop
fsqrt
mov
scas
xor
rcl
mov
js
mov
cwtl
dec
js
loope
jno
paddd
outsb
mov
inc
and
pop
mov
sbb
push
xor
mov
adc
repz
fsubs
cmp
push
and
push
scas
insb
jmp
mov
mov
shll
or
and
stc
fcmove
jb
inc
mov
jns
ficompl
call
enter
cmpb
cli
mov
mov
repnz
adc
pop
aam
xchg
sub
push
mov
daa
nop
push
and
and
dec
jne
add
push
aad
xor
mov
push
enter
dec
sub
push
test
sarw
jnp
fimull
sbb
push
lret
or
pop
lret
or
mov
dec
push
out
sub
pop
imul
scas
or
dec
jl
lods
orb
insb
xchg
cmp
neg
adc
dec
mov
pop
or
push
aam
adc
lret
adc
push
pop
mov
adc
adc
ficoms
scas
pop
int3
shlb
dec
nop
jae
cmp
stc
sbb
adc
rorl
popa
mov
or
insl
jge
adc
xor
xor
pop
mov
jae
sub
ds
repnz
xchg
push
jo
pop
mov
ret
jnp
dec
adc
jo
xor
shrb
lock
sub
adc
shrl
push
aad
xlat
push
mov
in
lock
xor
repnz
loop
mov
sbb
adc
out
into
fisttpl
xchg
and
inc
imul
adc
xchg
xchg
dec
add
ret
or
rorb
das
enter
xchg
outsb
jo
lods
lret
fbld
out
dec
icebp
mov
mov
and
or
mov
rclb
outsl
dec
lret
hlt
mov
dec
fidivs
mov
inc
mov
sbb
out
adc
imul
mov
pop
mov
jnp
shl
into
lea
push
int3
repz
pop
shrl
adc
add
repnz
add
or
push
jp
add
in
lret
jnp
sub
inc
sarb
es
iret
insb
insl
sbb
fisubrl
dec
mov
aad
lea
mov
pop
push
repz
xchg
jae
clc
addr16
rcrl
mov
mov
aam
mov
hlt
or
jmp
push
push
mov
push
into
shr
mov
mov
mov
lahf
mov
sti
mov
add
dec
mov
sub
icebp
jne
lret
or
fistpll
fsubrs
jnp
push
push
js
mov
mov
sbb
dec
sbb
mov
mov
sub
in
call
pop
fidivl
decl
ficoms
sub
cmp
push
jmp
mov
ss
loope
aam
or
push
mov
mov
ja
lods
jle
fcomps
add
xchg
xchg
lret
xor
orl
out
jno
mov
pop
mov
fimuls
mov
pop
push
adc
sbb
lods
cmp
xchg
stos
xor
or
push
push
lcall
jl
mov
ja
pop
mov
pop
push
loopne
fisttpll
adc
push
adc
dec
aaa
decl
mov
fcomi
mov
push
inc
push
inc
stos
js
xchg
jne
fisttps
shl
pop
xor
shll
sbb
pushf
iret
dec
jb
pop
es
iret
adc
push
jb
adc
jnp
jns
xchg
test
sbb
fmuls
aas
repz
stos
push
or
out
nop
push
bound
xchg
lock
xor
rcl
and
int3
outsb
mov
loope
test
sbb
stos
mov
stos
push
lcall
fcomi
sbb
jb
inc
ret
mov
jno
ja
cs
dec
shlb
ja
or
mov
arpl
fucomip
mov
in
int3
jae
scas
pop
outsl
pop
xor
xchg
push
push
loopne
pop
cmp
push
mov
in
cmp
ljmp
pop
std
mov
sub
mov
or
in
cs
loopne
int3
out
stos
adc
cmpsl
push
jno
int3
push
dec
push
jae
push
sub
add
and
xchg
lret
ja
jmp
mov
mulb
mov
cmp
pop
cmpsb
xchg
js
sbb
and
mov
out
mov
cltd
rclb
fldl
mov
sbb
leave
mov
daa
pop
cmp
movsb
mov
inc
stc
mov
mov
or
repnz
lea
cmpsl
out
bound
std
clc
mov
push
inc
sbb
lods
dec
push
mov
xor
cmp
jnp
cli
mov
sub
mov
into
add
sbbl
setg
inc
xchg
add
pop
xchg
pop
push
or
or
pop
adc
push
mov
push
sub
cmp
in
mov
les
hlt
dec
cld
ss
sub
jne
int3
movmskps
cmp
imul
cmp
cmc
stc
movsl
xchg
pop
loopne
cwtl
xor
int
mov
in
or
push
push
adc
aam
sbb
pushf
icebp
jb
xor
lret
xchg
mov
nop
mov
dec
sbb
fstpl
pop
fcoms
xchg
popf
adc
sub
jmp
cmp
mov
test
push
and
jp
sti
sub
jmp
adc
inc
repz
push
adc
pop
cmp
jecxz
mov
das
or
in
sub
aaa
cmp
aas
ds
xlat
dec
setnp
dec
sub
data16
mov
neg
or
dec
out
and
or
out
jle
mov
jge
jl
xor
clc
cmp
int3
sub
mov
lea
pushf
mov
call
xchg
jp
sub
sub
les
push
pop
push
xchg
test
inc
mov
cld
bound
add
adcl
lahf
dec
adcl
sahf
dec
into
dec
cli
dec
mov
movsl
sbb
mov
xchg
jecxz
out
scas
dec
sbb
jmp
sub
adc
dec
lret
fstl
xchg
cltd
pushf
push
ficomps
xchg
int3
sub
data16
xchg
inc
xchg
test
dec
add
idivl
cmp
and
mov
call
mov
or
out
cmp
push
out
cltd
add
out
mov
jmp
push
movsl
and
sub
or
cltd
sbb
push
or
push
sbbb
sub
add
insb
scas
test
pop
leave
repz
rcl
pop
mul
into
mov
lcall
cmpsb
mov
es
int3
sub
jl
mov
rol
push
mov
push
add
inc
dec
pop
xchg
sbb
inc
mov
stc
jbe
pop
icebp
dec
fldcw
jbe
mov
in
std
cs
adc
shrb
lods
aam
mov
insl
sbb
inc
and
xchg
add
adc
sub
inc
rorb
lock
cmp
imul
mov
xor
mov
jns
rcr
fimull
js
jnp
mov
cmp
int3
sub
dec
rcrb
mov
fwait
xchg
aam
xchg
lret
cltd
or
inc
mov
lahf
xlat
mov
mov
push
aad
push
test
push
jo
out
sub
loopne
and
xchg
es
loopne
in
fdivrs
mov
shrl
das
mov
push
orl
cmp
cwtl
movl
outsl
ljmp
inc
cmpsl
gs
sbb
and
adc
and
add
pop
rorb
je
in
in
mov
xchg
inc
insb
mov
orb
jns,pt
jp
xor
mov
mov
sub
push
adc
push
pushl
pushf
lea
jne
shrd
and
and
btc
mov
test
clc
cmc
clc
add
call
pushf
pushf
adc
jmp
rol
mov
test
and
clc
pusha
test
cmc
add
lea
test
push
stc
test
add
mov
pusha
call
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
mov
verr
mov
jp
stos
push
popa
fmuls
leave
test
inc
push
pop
or
push
or
push
lahf
stos
scas
test
andl
cmc
ja
jecxz
fists
sbb
or
outsb
or
cli
jo
lea
and
popa
sub
add
sbb
jne
inc
mov
xchg
test
push
inc
dec
lret
add
imul
sub
sub
stos
mov
push
cmpb
pop
mov
repnz
adc
pop
mov
xor
shrb
mov
fcmovne
cmp
cmpsl
push
xchg
int3
cmp
in
sub
push
test
or
pop
push
add
dec
add
add
sbb
inc
dec
out
pop
aad
ret
movsl
nop
ror
cltd
cmpsl
das
test
fldl
scas
arpl
and
adc
stc
mov
mov
adc
stos
and
push
inc
lea
mov
daa
add
adc
jecxz
inc
inc
in
push
pop
or
fcmovnbe
and
ret
jmp
test
fsts
jmp
xor
pop
xchg
push
icebp
adc
sahf
dec
int3
mov
mov
mov
js
jno
sub
dec
inc
stc
or
dec
sbb
jnp
inc
mov
jb
xor
mov
mov
gs
xchg
or
mov
pop
mov
movsb
xchg
xchg
mov
mov
xchg
ds
dec
xlat
inc
dec
andnps
jns
add
or
movsb
jmp
hlt
mov
xchg
fxch
nop
subb
ror
mov
dec
int3
sub
and
mov
cs
xchg
sbb
push
sbb
iret
inc
or
cld
push
mov
cmp
mov
adc
mov
inc
les
outsl
std
mov
xor
out
imul
cmp
test
pop
and
cmp
mov
clc
jne
jne
iret
hlt
inc
movsl
bound
lock
and
dec
bound
adc
dec
rcrl
fwait
pop
push
rclb
pop
adc
sub
in
mov
mov
pop
pushf
les
cwtl
dec
dec
inc
aad
int3
add
cltd
in
sahf
cmpsb
cli
inc
gs
jge
lidtl
orl
mov
mov
test
bnd
add
xor
pusha
scas
pop
outsb
loope
out
cmc
loop
add
rol
pop
dec
add
dec
jp
cmp
adc
enter
arpl
roll
arpl
idivl
jge
mov
cmp
xor
xor
or
add
scas
cmpb
call
pop
xchg
sbb
cltd
push
push
pop
adc
sbb
popf
popl
xchg
sbb
imul
push
add
or
das
test
les
adc
jl
add
inc
dec
xchg
inc
dec
stos
push
out
or
mov
mov
xchg
adc
ja
das
ljmp
jecxz
sub
and
xchg
xchg
addb
cmp
paddusb
adc
lea
adc
fs
inc
out
es
sbb
jnp
mov
movsb
cltd
sub
imul
dec
mov
icebp
jnp
xchg
in
mov
mov
xor
ljmp
inc
aad
add
rorb
jge
adc
dec
lret
outsl
pop
aam
sbb
xchg
adc
sub
js
pop
push
xchg
pop
adc
jae
add
dec
add
mov
enter
int3
sub
sbb
cmpsb
push
sahf
rolb
dec
pop
mov
lret
add
add
fcmovne
add
or
icebp
jae
movsl
loope
out
mov
push
into
cmp
lcall
das
pushf
imul
aaa
fildll
je
jo
mov
mov
insb
push
mov
xchg
inc
xchg
clc
or
jb
loope
popf
push
sahf
repz
inc
mov
loopne
inc
mov
adc
test
or
sbb
cwtl
jecxz
in
gs
pushf
adc
dec
int
dec
xchg
mov
dec
int3
sub
adc
inc
push
add
pusha
movl
lea
jmp
movw
lea
je
pushf
mov
mov
movb
lea
jmp
push
push
inc
push
xor
cs
insb
add
iret
shrb
mov
jo
outsb
mov
jne
sub
or
sbb
js
mov
mov
mov
jle
mov
cmp
out
les
xchg
or
mov
sbbb
adc
sbb
les
lock
adc
sbb
int3
test
addb
pop
lea
int3
sub
rorl
jmp
xchg
mov
test
or
leave
cltd
aam
dec
lds
sahf
mov
ret
arpl
mov
roll
rcl
insl
xlat
pusha
jns
out
push
sub
das
bnd
pop
aad
mov
mov
mov
sbb
add
push
aas
idivb
mov
xchg
and
inc
nop
adc
fsts
pop
push
adc
push
rcrl
aam
mov
repz
lret
lods
popf
call
pop
push
test
pop
adc
fucom
pop
ret
nop
pop
push
xor
xchg
fistpll
pop
mov
pusha
fstl
ret
push
or
push
xor
jbe
jb
or
sub
fcomps
das
adc
cmp
movsl
sub
jmp
cmpsb
and
loope
sub
sub
sti
jno
mov
sub
shld
mov
stc
xchg
bsr
add
clc
bts
shr
shr
adc
btc
mov
or
add
bt
add
call
cld
mov
insl
pusha
sub
nop
adc
lgdtl
or
mov
mov
or
call
push
mov
mov
inc
fstpt
shlb
dec
icebp
mov
incb
xchg
xlat
inc
jp
inc
dec
sbbb
cmc
pop
sbb
or
xchg
jmp
lds
enter
mov
int3
sub
xchg
xchg
and
test
cmp
cmp
push
jmp
fs
cs
lret
lods
sbb
jb
clc
pop
lret
fisttps
iret
arpl
push
pop
orb
mov
in
clc
mov
add
dec
sbb
mov
adc
imul
and
incl
addr16
mov
push
xchg
jns
cltd
pusha
sub
push
lds
popl
dec
mov
pop
push
push
cmp
xchg
shll
test
jb
addr16
int
sub
xchg
dec
in
enter
out
lret
lods
mulb
mov
cmc
inc
xorb
jnp
jns
pop
or
jns
pop
outsb
aam
iret
push
push
into
fidivrl
mov
mov
sti
clc
pop
rcrb
iret
pop
adc
pop
dec
fisttpl
sbb
push
lods
xor
fs
inc
add
aaa
push
inc
pop
int3
pop
mov
xchg
filds
out
loop
loope
pop
fisubrs
push
push
push
xchg
sbb
pop
pushf
ficompl
int3
sub
out
fdivrl
push
aaa
cmp
sub
mov
sbb
lds
sbb
push
push
loope
mov
xlat
loop
and
popf
add
fwait
mov
push
dec
push
std
inc
jns
repnz
sub
jmp
je
aam
les
inc
jge
sub
cli
inc
add
les
jl
push
and
mov
mov
ds
jno
xor
mov
pusha
jmp
fcoml
mov
adcb
push
rcr
adc
sbb
dec
test
ja
mov
and
sahf
pop
mov
and
in
repnz
rcr
sbbb
cmp
imul
rcll
adc
dec
mov
inc
scas
sub
std
cmc
sub
aaa
jp
mov
mov
sti
ljmp
in
sub
cmpsl
in
and
int3
sub
mov
adc
cld
and
or
movsb
sub
mov
test
mov
loope
jns
enter
sub
mov
pop
push
test
movsl
pop
iret
xchg
in
in
mov
rcrl
cmp
dec
sub
test
psubd
movsl
std
js
sbb
aad
xor
sbb
roll
les
or
or
push
mov
jnp
xchg
repnz
out
outsb
jle
mov
out
loop
jnp
stos
cmpsb
pop
lcall
adc
jmp
add
sbb
subl
pop
stc
lods
fwait
shlb
xlat
ds
and
mull
cmc
int3
add
loop
inc
pop
mov
lret
sahf
xlat
adc
rcr
pushf
sbb
sbb
dec
xlat
fadds
lock
dec
jmp
mov
mov
mov
mull
sahf
xchg
jo
mov
xchg
scas
jb
sub
pop
and
mov
out
xchg
and
xor
push
test
xchg
mov
cmp
xor
es
lret
arpl
addr16
pop
cwtl
xchg
test
mov
clc
lret
xchg
push
pop
sbb
pop
pop
pop
push
pushf
push
rcll
adc
mov
dec
xlat
cwtl
pop
cli
aad
mov
push
add
fldl
test
xchg
pop
fcompp
into
cmp
pop
iret
xchg
fidivrl
xchg
dec
test
jge
mov
out
fcoml
les
test
sbb
testl
mov
cwtl
adc
cli
lock
lahf
cmp
imul
xchg
jp
dec
add
jmp
imul
scas
gs
js
inc
mov
and
xchg
pushf
sbb
xchg
orl
adc
mov
push
lret
sub
shll
adc
sub
inc
cmp
lahf
sbb
mov
and
lds
iret
test
mov
imul
mov
or
xchg
xchg
push
push
adc
sub
cmp
add
xor
lods
cmp
pop
pop
std
repz
xor
jl
mov
inc
xor
dec
inc
loope
idivb
test
pop
clc
ljmp
aad
mov
mov
ret
ret
pop
insl
in
xor
and
pop
repz
int3
cmc
xor
and
mov
fwait
or
dec
out
icebp
idiv
incl
jmp
out
push
fdivrp
cmc
add
scas
clc
mov
fisubrl
hlt
jae
jg
mov
mov
mov
lock
lock
sub
out
mov
testl
bnd
jb
lock
jmp
js
mull
jp
or
sbb
push
lcall
lods
and
push
add
sete
dec
pushf
in
movsl
pop
roll
pop
mov
dec
rcrb
ret
imul
out
outsb
xor
out
test
stos
in
addr16
sub
out
int3
sub
jmp
cmp
mov
cmp
sbb
enter
push
inc
or
xchg
insl
loop
pop
lds
rolb
push
loopne
xor
and
push
stos
inc
aas
fcomp
xor
fst
or
jl
imul
push
cmc
int3
cmp
sbb
add
test
shlb
fsubl
dec
ret
fisubs
mov
ljmp
xlat
popf
inc
xor
stos
int3
pop
fwait
inc
pop
mov
sub
leave
mov
rorb
jl
push
mov
imul
inc
out
mov
outsl
daa
cs
in
push
push
out
insb
int3
sub
aaa
xor
mov
icebp
sub
push
sets
lea
ja
pop
push
call
mov
inc
int3
inc
adc
test
adc
adc
add
pop
nop
inc
lret
push
mov
push
ja
enter
dec
add
mov
movsl
mov
sub
call
mov
sarl
scas
pop
stos
data16
arpl
ja
push
sbb
push
push
rclb
lret
es
nop
sub
mov
outsb
mov
addl
pushf
stos
or
divb
mov
mov
jl
icebp
mov
xchg
setle
mov
lea
jbe
pusha
lea
call
call
inc
sbb
rorb
and
lods
aas
out
arpl
mov
xchg
adc
outsl
lret
xchg
mov
mov
push
xchg
ljmp
inc
or
pop
jmp
mov
loope
out
bound
push
shrb
mov
imul
push
sbbb
mov
stc
mov
cmp
jns
cmp
int3
sub
mov
repnz
pop
push
sub
jns
mov
mov
cmpsb
sub
pop
push
ss
cs
out
xor
jp
iret
dec
add
adc
data16
shlb
xor
cmc
int3
cmp
iret
cmpsb
lds
insb
add
pop
mov
fs
sub
cmp
mov
jp
clc
jg
cmp
cmp
push
dec
pop
dec
inc
stos
pop
cwtl
add
and
cmc
mov
mov
pop
xlat
cld
sbb
arpl
or
les
dec
ljmp
pop
push
push
dec
leave
mov
inc
mov
push
lahf
mov
mov
mov
cltd
xchg
pop
jb
mov
fisttpll
insb
gs
test
loopne
outsb
mov
imul
ror
not
gs
xchg
dec
adc
push
ret
lea
pop
xchg
or
fcmovnu
movsb
cltd
mov
fistl
mov
xchg
adc
lret
mov
inc
clc
dec
adcl
jae
stos
int3
roll
das
mov
lahf
and
jae
sbb
xrstor
add
movsl
inc
pop
mov
ficoml
int
inc
inc
push
inc
ret
mov
add
adc
ret
std
repz
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
call
or
sbb
fistl
inc
rcrb
pop
adc
dec
cltd
leave
fmuls
outsb
sub
adc
mov
movsb
pushf
xchg
mov
insl
cmp
cli
xor
repnz
dec
addr16
mov
bound
cmp
fisubl
cli
mov
adc
xchg
shrl
sub
push
and
and
lcall
mov
xchg
fstl
sub
push
popf
push
mov
sub
inc
push
aaa
or
fwait
cmp
dec
sub
stos
rcrl
enter
push
push
add
add
mov
dec
sbb
loopne
adcl
mov
cli
jno
inc
pop
fstl
adc
enter
and
mov
pop
pushf
pop
pop
dec
cmp
aas
stc
ds
xor
aaa
cmp
adc
das
cmp
lods
cs
adc
push
pop
xchg
rcll
movnti
inc
dec
test
rcrl
inc
lock
cmpsl
push
xchg
and
out
xor
inc
mov
sbb
cmp
mov
outsl
out
popa
aam
push
ret
bnd
daa
cmp
push
xlat
jb
push
ljmp
adc
adcl
cmc
pusha
out
pusha
nop
add
addl
inc
inc
or
ror
adc
je
cmp
ficoms
fisubs
out
mov
stc
sub
mov
rep
mov
lea
mov
pushf
mov
push
pushf
lea
jmp
out
cmp
addr16
xchg
sahf
cmpsl
jmp
ja
test
aaa
cli
call
xor
pop
call
arpl
ss
mov
daa
push
cmpsl
jns
lret
sar
adc
negb
aad
or
test
stos
sbb
cmp
adc
jo
gs
or
and
sahf
ljmp
cwtl
xchg
mov
adc
push
or
push
push
push
xchg
fcoms
push
pop
xchg
int3
sub
fs
call
pop
pop
int
push
bound
inc
adc
adc
fiadds
test
sbb
mov
mov
mov
push
dec
jnp
hlt
add
or
enter
movsl
and
inc
cmp
cwtl
inc
aad
sbb
sub
xor
sub
jae
adc
cmp
popl
jb
cmp
pop
frstpm(287
cltd
and
pop
dec
push
loope
cltd
jmp
mov
cmc
jg
repnz
mov
adc
int
sbb
inc
sbb
jae
xor
sub
jb
sub
jns
inc
or
or
mov
or
and
xor
in
pop
sbbw
dec
sub
jg
add
loop
xchg
es
adc
in
adc
xor
push
lods
adc
mov
fmuls
and
in
mov
insl
imul
call
stc
repz
sub
test
xor
outsl
mov
push
mov
lods
dec
push
and
add
lcall
or
aaa
push
mov
xchg
pop
loopne
adc
xor
cwtl
sub
jbe
mov
jg
les
lods
rolb
mov
std
js
sbb
insl
out
es
mov
jge
inc
mov
movsl
lret
mov
shll
loop
lods
movsb
mov
sub
movsl
int3
sub
pushf
sahf
cmpsl
dec
pop
push
push
sbb
mulb
cld
cmp
in
movsl
test
push
hlt
and
xchg
xchg
cli
lahf
jp
xlat
pop
dec
sti
dec
icebp
mov
fisttps
aas
xchg
xchg
dec
aaa
std
adc
dec
rcll
scas
xchg
scas
xlat
sbb
xchg
imul
sub
sub
lods
mov
push
ret
jecxz
and
xchg
test
push
fstpl
xlat
push
pop
rcrb
sub
jno
aas
dec
add
enter
aas
jbe
inc
push
sbb
or
pop
inc
mov
pop
jle
sti
mov
dec
sub
sbb
jp
inc
addr16
addr16
mov
cltd
jae
cmpsb
lcall
mov
add
mov
pop
adcb
movsl
adc
xchg
fistpl
adc
arpl
pop
jecxz
xchg
lret
sbb
xchg
push
aam
pop
nop
aam
int3
sub
and
inc
js
je
jb
arpl
jae
loopne
mov
sub
aam
mov
jo
scas
mov
nop
jae
scas
mov
cld
jo
lcall
fidivrs
xorl
and
fsubrs
shlb
jg
inc
pusha
adc
jmp
push
rcll
aas
push
ficoml
sub
push
push
inc
clc
dec
cs
hlt
scas
imul
pop
or
gs
push
cmpsl
movsb
sbb
dec
ret
int
inc
inc
inc
or
int3
sub
dec
iret
pop
inc
or
dec
pusha
idiv
pop
aad
xchg
pop
dec
add
xchg
fimull
nop
pop
int3
inc
pop
loop
int
mull
imul
ret
rcll
dec
mov
cmp
frstor
xor
leave
aas
mov
sub
test
pop
nop
lods
and
in
push
flds
lds
fildll
dec
lds
aam
lahf
repnz
jbe
clc
mov
mov
cli
std
mov
sub
test
pop
adc
adc
shll
push
mull
aaa
cli
xor
out
jecxz
mov
push
push
lahf
push
fcoms
int3
mov
andl
dec
cmp
sahf
lahf
inc
aas
jno
jp
lods
xchg
pop
sbb
xchg
jns
mov
test
mov
mov
push
inc
pop
fidivrl
lods
or
rcll
or
mov
dec
dec
or
ret
int3
sub
xchg
push
inc
add
dec
outsl
jbe
push
outsl
inc
js
insl
mov
jnp
rcrl
lock
lods
mov
out
outsl
push
pop
movsl
adc
jle
repz
fwait
pop
pusha
lahf
add
sub
loop
xor
push
dec
and
sub
outsb
mov
inc
ja
jbe
sub
sub
jle
jp
mov
in
dec
sub
jae
ljmp
fwait
add
ds
lret
adc
out
fcmove
inc
sete
ret
mov
jmp
iret
inc
push
test
fs
push
xchg
adc
push
pop
cltd
pop
aad
push
sbb
sbb
sub
inc
xchg
cmpsl
imul
mov
and
cmp
lods
mov
mov
dec
lods
lret
push
pop
cmc
fstpt
cltd
int3
add
pop
mov
int3
cli
mov
ljmp
mov
mov
push
sahf
xchg
mov
fisubrl
add
mov
or
fstpl
sub
es
or
pop
pop
pop
adc
adc
xchg
sbb
sub
xor
lahf
fwait
xlat
fisttpl
inc
pop
in
mov
ret
nop
pop
push
add
lahf
push
inc
adc
push
dec
jge
leave
push
enter
aam
push
je
add
xchg
pop
dec
sbbl
aaa
mov
xorb
xlat
push
push
or
pop
fmuls
inc
jg
pop
cwtl
or
out
sbb
outsb
hlt
mov
adcl
jne
cvtpi2ps
mov
xchg
adc
bound
aad
mov
xchg
rcrb
xchg
xchg
rclb
pop
xchg
fwait
lahf
adc
int3
sub
mov
or
sub
out
lret
dec
adc
push
pushf
push
fisttpll
inc
dec
ret
dec
ret
rcrl
lret
inc
push
fisubrs
call
bound
xchg
dec
pop
cs
ret
sbb
stc
mov
es
mov
nop
and
cmpl
fsubp
or
mov
movsb
mov
popf
das
std
movsl
test
sbb
sbb
sahf
xchg
push
cmpsb
sar
ss
mov
cmp
sti
jo
cmp
sub
add
xor
out
cmpsl
imul
or
push
pop
nop
fmulp
pop
or
roll
adc
or
sub
xor
inc
insb
push
inc
inc
adc
or
enter
dec
arpl
xchg
push
clc
test
pusha
pop
int3
push
jne
lock
dec
int
push
xlat
fs
and
popf
or
es
scas
mov
jns
lock
hlt
jae
dec
lret
outsl
out
repnz
je
imul
out
ljmp
sub
sub
sub
lret
test
mov
aaa
out
data16
imul
scas
sub
scas
aam
xchg
cltd
nop
push
push
inc
in
adc
or
jle
mov
inc
popa
dec
mov
pop
addb
and
pop
loop
inc
or
dec
aad
sahf
mov
addl
mov
aam
adc
push
ficoms
fists
xchg
xchg
int3
sub
fs
dec
mov
xchg
add
sub
pop
adc
ret
xlat
push
jmp
gs
sti
sbb
lea
lock
jae
ljmp
pop
inc
push
js
imul
ret
pop
jno
test
insb
pop
frstor
psrlw
or
fsts
test
xchg
or
pop
mov
pop
pushf
sub
mov
pop
leave
xchg
mov
sub
xchg
sbb
sub
sbb
push
lahf
sbb
pop
push
sbb
or
xor
cmpsl
mov
push
pushl
ret
inc
sub
ror
sar
xchg
mov
shr
sub
xadd
mov
neg
mov
mov
jmp
movw
repnz
mov
pusha
movw
lea
jne
inc
mov
sbb
sub
or
and
bts
mov
cmp
sub
bt
pushl
stc
pusha
cmp
pusha
push
jmp
push
aad
sbb
pop
cmp
mov
mov
lods
xor
enter
clc
dec
out
ficoml
mov
icebp
stc
rclb
loope
test
xchg
fwait
out
adc
aas
addr16
push
pop
inc
lds
mov
sub
push
int3
pop
ffree
rorl
or
loopne
mov
aaa
mov
or
xchg
cwtl
jb
inc
jecxz
sti
xor
inc
mov
xchg
mov
and
push
shl
lock
xor
stc
mov
mov
int3
sub
movl
sbb
inc
in
sti
cmc
out
stc
mov
sub
mov
outsb
es
lahf
popf
mov
push
inc
pop
add
mov
xlat
jmp
mov
mov
pop
in
push
pop
cmp
adc
icebp
mov
pop
aad
fcmovb
cmp
fs
xchg
pop
les
inc
cs
fildll
xchg
out
cli
adc
ret
xor
sub
cs
insb
out
int3
sub
jge
call
dec
pushf
roll
ret
jl
mov
mov
in
and
jno
dec
push
clc
mov
stos
and
mov
ret
jp
imul
das
mov
or
and
inc
pop
ret
movsb
mov
jl
jnp
or
out
inc
or
push
cmp
jo
fwait
xchg
mov
stos
rclb
pusha
lock
cmp
cmp
pop
out
mov
insb
jecxz
or
pusha
sub
arpl
popa
cmpsb
in
push
js
cmpsb
push
add
inc
mov
sbb
orb
lsl
rcrb
mov
mov
pop
test
les
push
shll
loopne
aaa
jne
sbb
cwtl
jp
pushf
add
int
push
sti
mov
pusha
mov
fwait
pop
xchg
jp
ljmp
inc
into
lret
addb
rorb
insl
out
mov
mov
fidivs
and
cltd
xchg
inc
dec
les
inc
xchg
fists
aad
inc
adcb
jno
inc
push
insb
movsb
lods
bound
dec
test
enter
sahf
xchg
pop
mov
out
int
pushl
outsb
push
dec
les
pop
adc
ret
je
stos
dec
push
sahf
or
mov
mov
pop
inc
mov
sti
xor
jnp
loop
gs
lds
fcoml
jno
inc
fcompl
lods
jecxz
pop
icebp
cmp
push
sub
mov
test
mov
add
pop
lahf
xchg
nop
sahf
or
add
leave
std
repz
test
test
test
jnp
lret
sbb
mov
in
loopne
mov
jbe
pop
sbb
in
cltd
cli
divl
xor
cmp
cltd
push
ret
ffreep
jb
mov
mov
push
inc
jbe
jmp
lea
call
loopne
outsb
xchg
les
lret
mov
mov
and
mov
dec
inc
push
enter
pop
pop
imul
jge
cmpsb
das
pop
pop
or
or
popa
adc
push
xchg
std
mov
cmp
roll
dec
sarb
rol
push
cwtl
lahf
sahf
push
adc
dec
add
addb
fcoml
sbb
xchg
or
lock
jb
dec
jo
mov
shrl
mov
sub
out
int3
sub
cmp
or
repz
sub
cs
scas
jl
mov
xor
lods
xor
lods
fists
jo
mov
xchg
sbb
xchg
mov
push
sub
cwtl
pop
push
lea
and
cmpl
scas
jecxz
adc
cmpl
iret
sbb
dec
add
mov
mov
dec
add
ror
add
mov
mov
lea
jmp
push
mov
inc
add
mov
sbb
dec
test
ror
out
call
mov
lods
or
sbb
xor
ret
mov
push
inc
repnz
dec
scas
leave
dec
or
aad
out
or
nop
xchg
push
cli
in
mov
or
and
mov
pop
mov
mov
pop
stc
mov
lcall
dec
push
mov
out
sub
data16
arpl
int3
sub
clc
repnz
jge
jl
mov
push
ficomps
enter
dec
sbb
sbb
test
lds
rclb
vdivpd
loopne
das
xor
adc
stos
xor
sbb
mov
mov
inc
jmp
notb
mov
fnstcw
fcmovu
dec
jge
pxor
fcmovnb
add
pop
lret
jecxz
outsb
push
inc
adcb
mov
orl
or
cmp
xchg
inc
push
popl
sbb
add
lahf
int3
sbb
inc
dec
pop
int3
pop
rorl
xor
scas
xchg
cltd
mov
iret
xchg
lahf
jnp
imul
jmp
fwait
xchg
lret
jnp
orl
lahf
xchg
inc
les
dec
dec
push
dec
jg
ljmp
lahf
es
loopne
loope
push
out
outsb
jmp
in
call
ret
adc
xchg
pop
push
in
sbbl
add
jge
xchg
arpl
lds
test
movsb
sub
in
in
loopew
bound
sti
and
cmp
fsubrl
orb
dec
rcl
sbb
pop
cli
ret
pop
adc
test
or
xchg
ret
cmc
cwtl
shrl
dec
outsb
nop
mov
jecxz
addr16
outsb
mov
inc
lds
dec
push
dec
xchg
sub
mov
pop
je
addb
shlb
or
scas
xlat
in
test
xchg
sbb
push
xchg
push
push
sbb
int3
sub
ljmp
scas
ret
shrb
lds
fwait
xchg
push
fcmovne
pop
xchg
xchg
sbb
int
movsb
sub
insl
and
in
mov
push
dec
fs
and
fwait
mov
scas
xchg
jne
dec
sub
fs
orl
mov
addr16
adc
mov
cmp
mov
lods
pop
mov
loope
mov
out
lock
xchg
pushf
cltd
xchg
lcall
pushf
fcomps
aam
sub
cmc
ja
bound
nop
call
mov
aam
dec
test
pop
dec
add
in
mov
cmp
mov
sub
es
cwtl
jne
push
lret
xacquire
inc
shlb
push
push
dec
iret
dec
jns
iret
or
dec
xchg
into
xchg
push
test
or
inc
or
push
test
cmp
or
hlt
std
xor
mov
xor
sub
inc
mov
inc
or
pop
xor
or
dec
sbb
add
pop
inc
orl
loop
cmp
leave
fwait
pop
ljmp
pop
loope
pop
inc
daa
fistpll
lea
mov
or
mov
std
cmpsb
fwait
pop
sbb
add
jle
pop
ss
dec
jnp
cmpsb
fwait
lods
push
pop
jg
add
xchg
jne
push
xor
push
add
dec
add
mov
int3
sub
fcom
addr16
rcrb
rolb
jb
cmc
dec
pop
push
pop
dec
sbb
pop
or
into
adcb
xchg
push
movsl
in
mov
sbb
arpl
rorb
mov
pushf
xor
jmp
push
mov
ljmp
and
lret
fisttps
dec
add
repnz
lret
dec
test
lds
int3
add
into
adcl
mov
adc
add
cwtl
xor
xor
inc
adc
push
dec
add
or
inc
int3
sub
icebp
jmp
push
xchg
ret
xchg
lret
add
cmp
jl
and
cmp
test
sbb
cmp
iret
xor
xor
dec
fnstenv
repz
mov
sbb
jns
xchg
push
xchg
test
pop
pop
pop
mov
xchg
pop
fnsave
lds
jle
add
cmp
stos
test
bound
cmpb
mov
inc
sti
inc
jmp
mov
mov
pop
dec
add
lcall
testl
hlt
mov
aas
cmp
cli
hlt
mov
sbb
dec
test
ret
dec
push
mov
dec
int3
sub
and
mov
push
cli
int3
iret
ds
lahf
xchg
add
fcoml
mov
pop
stos
es
xchg
and
xchg
sarl
sahf
into
sahf
adc
cmp
and
inc
ss
jl
les
clc
push
xor
insl
sub
gs
sbb
adc
in
je
sub
pop
inc
cli
aaa
sub
rclb
add
add
pop
dec
lds
int3
sub
out
xor
popa
mov
leave
inc
xchg
test
xchg
adc
rcrb
outsb
es
sub
mov
mov
push
ret
or
inc
cld
int
mov
stos
test
xor
das
imul
add
or
dec
lcall
popf
lods
mov
out
or
sbb
push
jae
push
dec
mov
jae
outsb
aaa
jno
test
loop
mov
and
and
int3
sub
bnd
and
jecxz
pushf
xor
call
push
clc
cmp
mov
jmp
pushl
pushf
jmp
adc
data16
xchg
rclb
xlat
lret
push
rclb
add
cli
push
inc
mov
je
pushf
pop
in
lret
test
icebp
jl
mov
dec
loop
pop
call
push
xchg
rcrb
shl
into
imul
xchg
push
es
push
cmc
out
add
fcoml
lods
jmp
and
jnp
mov
fdivrs
lret
mov
jl
adc
lods
dec
push
repz
cld
lret
mov
ljmp
jbe
fs
inc
fwait
mov
sub
mov
fcmovne
sbb
pop
jns
cltd
fidivrs
push
or
mov
xor
mov
enter
cmp
mov
cmpsb
es
and
and
in
inc
or
mov
popf
lret
mov
bound
data16
daa
imul
sbb
jp
lret
popf
and
adc
je
scas
inc
inc
dec
sti
xchg
xorl
fwait
cmp
xchg
lret
aaa
xor
push
cld
pop
push
pop
dec
cmp
icebp
sub
mov
push
into
mov
sbb
mov
cld
xchg
stc
lret
cmc
dec
flds
fs
arpl
cmp
loopne
nop
push
lret
xchg
push
adc
pusha
popf
lret
mov
push
cli
insb
jg
cmp
mov
dec
mov
push
xchg
mov
in
sbb
adc
xchg
fcoml
cmp
xlat
or
sub
sbb
fstpt
mov
mov
inc
fidivrl
pop
cltd
loopne
push
lret
jle
fwait
icebp
push
outsl
lret
popa
out
test
sbb
sbb
cmp
xchg
shlb
add
lret
jns
inc
or
scas
cmp
mov
mov
jbe
fmul
mov
dec
push
pop
sbb
and
sbb
stos
lret
push
mov
js
fmul
mov
sub
lret
pop
and
cmp
jle
fcmovnbe
mov
cmp
xor
rcl
lret
test
lret
fidivl
ds
and
lret
shll
outsl
out
adc
push
hlt
mov
es
je
sbb
into
lods
mov
lret
decl
sbb
lret
xor
sbb
xchg
lahf
push
pop
test
and
pop
lret
mov
sub
cmp
fsubs
mov
cmp
jb
mov
ljmp
jns
pop
arpl
push
cmpsb
ficoml
aam
push
out
arpl
pop
outsb
dec
xlat
ljmp
fs
push
or
in
and
push
lods
mov
fmul
rcrb
jg
iret
push
cmp
mov
test
pop
mov
fisubs
push
int3
xchg
mov
mov
xchg
lret
mov
popf
xor
sub
sbb
shlb
add
cmp
cmc
in
sub
stc
lret
jbe
mov
inc
movsl
lret
loopne
out
ret
cmp
push
adc
lret
inc
xor
lret
xchg
lock
mov
push
fcmovnbe
ret
sbb
imul
scas
mov
jl
jnp
jno
sbb
inc
mov
dec
pop
inc
je
int
rcl
or
jge
mov
xchg
ftst
lahf
lret
ss
repnz
add
shlb
jmp
dec
fisubrl
mov
fistps
adc
or
push
lret
aas
fldpi
sbb
jl
add
dec
cwtl
test
adc
or
push
sbb
sbb
lret
mov
dec
sub
lods
shl
ret
adc
mov
dec
stos
lret
pop
nop
fldl
push
jnp
pop
mov
pop
into
jb
push
cmp
rclb
mov
xchg
mov
mov
sar
ljmp
rorb
and
fsubl
push
sbbb
lret
bound
stc
mov
mov
pop
push
jb
cmp
xchg
pop
xchg
sti
sbb
int3
mov
int
cmp
fcmovne
ljmp
and
push
pop
cmpb
mov
inc
cld
lea
arpl
mov
lret
jmp
ret
dec
xor
pop
push
mov
pop
jno
pop
dec
lret
and
fisubrl
mov
dec
mov
test
iret
lods
inc
add
lret
lods
mov
or
xchg
pop
mov
lret
add
jno
inc
jg
in
ret
stc
repnz
js
inc
or
addl
sbb
aaa
int
aad
and
andb
inc
cmp
sub
dec
adc
lret
data16
dec
shll
js
sbb
add
fdivrp
push
pushl
cltd
arpl
hlt
pop
not
iret
bound
stc
sub
jecxz
add
add
in
cld
pusha
insb
rcrl
js
rclb
mov
pop
out
fcmove
divl
ja
orl
inc
and
scas
sbb
lods
ljmp
add
push
jnp
lret
jge
repnz
lret
mov
dec
jo
mov
lods
jno
push
cmp
int3
add
sbb
cmp
imul
jmp
lret
faddp
daa
xchg
pop
sub
aam
cld
mov
lret
mov
pop
push
ret
mov
scas
push
push
jge
cld
or
clc
dec
repnz
imul
lret
sub
or
mov
dec
in
arpl
dec
inc
clc
or
insl
popa
sarl
inc
mov
xchg
cmp
ret
dec
xlat
sub
imul
jb
jbe
stos
lret
pop
je
and
sub
mov
jg
ror
insl
jl
xor
es
push
loop
xchg
jg
cmpl
or
add
xor
into
mov
dec
lcall
and
adc
arpl
aas
lret
and
lock
dec
int
xchg
insl
arpl
adc
mov
imul
lret
jmp
adc
lret
mov
mov
pushf
into
pop
lret
imul
or
xchg
lret
mov
xchg
movl
insl
rolb
jge
lret
sbb
jno
jns
lret
ljmp
jecxz
ja
rcll
xorl
mov
xor
ficompl
push
cmp
xor
jg
bound
mov
test
mov
je
fmull
xor
mov
lret
add
ljmp
sub
pop
dec
jmp
dec
sbb
push
lret
sub
into
mov
lret
int3
cmp
mov
aad
and
and
das
fs
filds
dec
fsin
addr16
pop
sub
lret
push
sahf
and
push
lret
push
iret
cli
fneni(8087
dec
xor
subb
popf
dec
adc
inc
fnsave
pop
xchg
xchg
shl
test
mov
lods
lods
int3
jmp
jg
fisttps
add
stos
fwait
test
or
mov
fildl
insl
push
fcmovbe
or
into
fmul
dec
scas
sub
je
ret
jp
fmul
pop
cmp
adc
adc
pop
adc
mov
or
dec
ja
dec
cmp
nop
std
in
outsb
pop
inc
lods
adc
sub
mov
mov
pusha
mov
mov
push
fdivrp
inc
rclb
mov
lods
popa
xlat
imul
xchg
iret
push
adc
jb
dec
push
in
or
lret
fucomp
ficoml
into
push
cmp
arpl
fwait
xchg
fcmovnbe
jl
addr16
and
insl
ds
lret
dec
push
dec
sbb
or
shrl
rorl
jl
push
dec
ret
sbb
rorl
aas
aam
pop
push
push
xchg
dec
lea
or
and
rcrl
jmp
mov
sahf
cli
lret
xchg
rol
fisubrl
fidivrl
jno
lret
pop
xor
std
or
add
sub
mov
cmp
lret
cmpsb
add
push
aaa
inc
clc
out
dec
or
imul
dec
aam
rcl
cmpsb
xchg
xorb
cli
ret
sub
pop
test
push
dec
jne
enter
out
push
lret
jbe
gs
call
push
cmp
dec
fisubrs
jb
movsl
lcall
cmp
sub
out
addr16
push
in
sbb
adc
stc
dec
push
fsubs
xlat
sbb
dec
sub
dec
xchg
int3
pop
xchg
push
pop
aad
fisubs
jno
mov
dec
stos
xlat
loopne
cld
ror
int3
ficoml
mov
pop
int
into
call
test
lret
inc
dec
xchg
dec
fcmovbe
out
sti
idivb
pop
shll
dec
call
mov
xor
push
pop
bound
push
aas
sarl
jle
cmp
sar
or
stos
pop
int
sahf
dec
int3
repz
and
adc
inc
pusha
mov
adc
aaa
iret
mov
lcall
and
mov
shl
mov
xchg
jmp
jl
sbb
mov
mov
out
iret
clc
stc
inc
dec
push
or
out
push
fiaddl
sub
aam
js
shll
loopne
and
mov
dec
or
cmp
cmp
fdivrl
mov
cmp
cltd
add
cmp
lret
shll
lods
icebp
mov
cmp
jp
jg
cmc
iret
fisubl
or
jp
adc
lds
aam
in
roll
ret
jb
add
push
shl
lret
mov
and
js
push
out
lea
scas
loop
or
add
repz
fnstenv
push
into
rcll
into
add
push
rclb
loop
arpl
fcomps
mov
push
adc
shrl
addb
mov
ffree
fiaddl
shlb
push
push
add
ljmp
xor
and
pop
xchg
mov
or
mov
dec
test
pop
cmp
lret
pop
or
pop
fadd
push
lret
mul
xchg
jle
pop
outsl
lods
jmp
sub
scas
dec
mov
rcrl
sahf
outsl
shl
xor
push
adc
fstps
stos
mov
pop
cmpsb
fcoml
mov
push
push
pusha
add
inc
rcll
inc
std
loopne
push
add
mov
mov
and
jns
mov
fidivrs
lcall
jnp
scas
xchg
mov
or
dec
fistl
outsl
or
lea
push
xchg
out
xchg
mov
and
jg
int3
frstor
or
lret
out
jge
pushl
dec
pop
pusha
add
mov
adc
mov
dec
cmp
js
or
outsl
stos
fdivrl
into
sub
into
fcmovne
subl
scas
mov
sub
jecxz
pop
sub
pop
dec
dec
into
ljmp
std
ds
xchg
inc
push
pop
repz
jno
in
fmul
xchg
and
ror
and
push
stos
jl
mov
lods
int3
jns
dec
jb
mov
jecxz
or
in
lods
icebp
adc
icebp
adc
and
and
add
cmp
cmp
lods
cmp
sub
int
fisubrl
xor
sbb
loopne
inc
dec
jae
jmp
sbb
pop
dec
dec
stc
fdiv
push
nop
add
mov
sbb
xlat
or
lret
xlat
adc
pop
sbb
xlat
dec
in
fcmovne
and
sar
or
nop
rolb
xchg
insl
xchg
in
mov
pop
and
out
jl
inc
cmpsl
push
push
lret
rclb
mov
adc
bound
fisttps
add
cltd
push
fwait
ror
mov
cltd
mov
into
lret
and
adc
in
sub
sbb
and
shlb
mov
shrl
cmp
imul
mov
cld
jmp
stos
dec
cmp
xchg
mov
and
xchg
lret
loope
cmc
arpl
iret
mov
leave
and
xor
mov
dec
xor
push
js
xlat
xchg
stos
jb
cmp
cmp
push
xorl
add
iret
cli
andl
aam
xchg
inc
fwait
sahf
popf
cld
into
inc
pop
fbld
mov
pop
sarb
movsl
das
clc
mov
push
aam
adc
jmp
out
lret
js
add
mov
dec
xchg
popf
xchg
cmp
lret
pop
aam
into
xchg
mov
cmp
fistpl
pop
adc
aas
es
push
sahf
lret
pop
ss
or
je
lret
inc
mov
mov
fldenv
rolb
add
arpl
jne
imul
cmp
mov
or
jmp
or
bound
into
std
dec
push
aad
jnp
mov
dec
push
mov
jmp
lods
loopne
frstor
pushf
ret
or
scas
int
int3
xchg
dec
aas
adc
sarb
xchg
enter
lret
mov
imulb
xor
xchg
popa
mov
mov
scas
lret
aam
mov
cli
jl
sbb
inc
loop
mov
sti
sub
add
or
sbb
jnp
push
mov
cmp
addr16
cmpsl
out
cmp
mov
mov
pop
adc
cmp
mov
inc
test
aad
cli
fimull
out
negb
jp
fsubl
jns
rorb
lods
pop
clc
xchg
hlt
in
mov
das
jmp
push
xorl
mov
stc
mov
fdivrs
cmp
fwait
inc
xchg
cs
cwtl
push
out
lret
dec
sbb
lret
addr16
mov
test
bswap
mov
ret
mov
cli
pop
lahf
movsb
inc
cmp
sbb
cwtl
fdivrl
rclb
adc
shrb
or
arpl
sub
mov
lret
repnz
test
xor
mov
jmp
bound
mov
or
adc
pop
hlt
scas
filds
mov
inc
repz
fcoms
or
sbb
in
stos
dec
mov
xor
mov
clc
inc
mov
inc
jnp
push
rclb
fldl
lret
inc
je
or
lret
sub
outsl
lret
cmp
icebp
addl
ret
pop
jp
mov
push
lret
mov
pop
or
xlat
sti
bound
pop
cmp
daa
jno
push
lods
mov
fwait
pop
movsl
ret
shrb
mov
push
clc
cmp
xchg
cmpsb
jecxz
fisubl
xor
push
push
sbb
push
xchg
mov
fdivrp
push
mov
sub
xlat
xor
int
pop
int3
fadd
pop
negb
repnz
push
jne
cmp
pop
std
jle
mov
ficompl
mov
pop
adc
sub
mov
jmp
lret
imul
mov
adc
cmp
mov
pop
popa
int3
mov
mov
dec
xor
cwtl
adc
mov
ret
or
jmp
push
pop
insb
push
rcrb
fisttpll
and
or
cmp
push
notl
pop
pop
mov
pushf
push
cmpsl
mov
jg
mov
into
out
fcmovbe
out
or
out
cwtl
jmp
xchg
sarb
xchg
lret
bound
sahf
fincstp
out
iret
mov
imul
or
push
pop
cli
fsubp
mov
orl
jge
imul
test
fmul
and
lret
lahf
or
add
jno
pop
idivl
pop
or
icebp
loop
lret
jno,pn
movsb
daa
addr16
out
pushf
ficoms
lret
sub
mov
mov
jnp
inc
insb
fiaddl
xor
ret
mov
lret
daa
jne
mov
arpl
sub
je
sbb
out
daa
mov
jge
mov
in
dec
mov
jb
lret
rolb
lret
jmp
sub
pop
loopne
xchg
testl
cltd
loope
lret
popf
outsb
xor
and
cmc
loope
into
insb
or
push
lahf
leave
mov
xchg
mov
push
fwait
out
outsl
xchg
fdivs
and
lret
dec
or
mov
je
lret
outsb
add
sbb
inc
lret
dec
cmp
sbbb
lret
jae
adc
dec
imul
sub
jns
adc
mov
lret
fisubrs
mov
mov
faddl
adc
ds
mov
das
imulb
fcmovb
fists
mov
dec
bound
push
popf
cmpl
addr16
inc
cs
push
sub
sti
rolb
pop
push
cli
jne
fsub
ret
es
add
out
bound
xor
fcos
add
push
push
push
ror
xchg
imul
jmp
pop
clc
pop
push
mul
stos
mov
ror
repz
bound
fsubrs
loopne
lret
adc
movsb
push
pop
out
fdivs
lret
mov
in
dec
loopne
fs
sub
push
nop
and
fmull
sti
jne
lds
dec
sub
lahf
xchg
pop
push
shrl
data16
out
or
push
lods
xchg
jbe
push
jecxz
xchg
or
xchg
inc
iret
inc
inc
loop
shrb
mov
add
movb
inc
pop
pop
lret
sub
loop
adc
lret
jnp
xor
add
jmp
and
adc
ret
jmp
push
or
fstl
jmp
add
jnp
sbb
mov
mov
add
aad
inc
dec
je
repnz
push
mov
dec
push
adc
jge
push
fldcw
add
push
imul
loop
mov
sbb
jb
add
shl
pop
xor
movsl
mov
addr16
cmp
inc
jno
test
lret
mov
xchg
loope
out
xor
add
cli
xor
subb
js
pushf
unpckhps
loop
scas
push
push
and
icebp
fists
rcrb
adc
xchg
fwait
mov
lret
push
jnp
out
rcrb
xchg
icebp
mov
or
repz
es
mov
xchg
inc
sbb
fisubrl
lahf
xor
and
jb
xchg
push
cli
in
aam
cltd
outsb
xorb
pop
xchg
adc
sbb
sbb
mov
fucom
dec
inc
jns
jbe
fwait
mov
rorl
lret
mov
les
test
pop
xchg
push
and
in
xchg
ret
rcrl
int
jmp
lret
ds
repnz
cmc
lret
mov
inc
cltd
mov
mov
sub
push
std
jnp
cmpsl
sbb
push
push
hlt
lcall
test
aad
adc
lret
pop
adc
out
scas
cli
or
cmpsb
cmp
add
xor
mov
into
aam
xchg
sub
mov
lret
ret
mov
push
ror
data16
lods
ljmp
cmc
mov
js
fs
xlat
es
cmp
dec
insb
out
int
push
and
lret
sub
repnz
data16
push
sahf
pop
and
lret
and
lret
push
aam
fnstcw
clc
outsb
lret
fdivrl
mov
test
in
jno
popf
cli
shrl
sahf
mov
enter
sahf
xor
mov
and
push
mov
mov
ljmp
push
stos
xor
sub
sbb
and
int3
repnz
lret
cmp
pop
imul
shr
or
fsts
js
mov
out
or
int
xchg
push
cmp
testl
mov
sbbb
cmp
push
mov
popa
cmp
stos
mov
aad
incl
mov
out
sbbb
cltd
jp
cmp
ror
cmc
idivl
dec
xlat
sbb
jp
sbb
sub
cmp
mov
mov
push
push
cmp
mov
addb
les
in
rcl
pop
adc
push
cmpsl
cmp
xor
push
pop
test
cld
or
test
pop
addl
jl
nop
lret
fidivl
ja
and
subb
data16
mov
aam
lds
daa
vminsd
sbb
rcrl
sbbb
and
shl
test
sbb
or
fidivrl
sbb
pop
call
es
mov
mov
scas
jnp
out
fcmovnbe
lahf
dec
lds
rcrb
shlb
fs
or
cli
testl
xlat
sbb
lahf
mov
fsubrs
cmp
ljmp
fcomps
xchg
jp
or
push
xchg
pushf
add
repnz
in
rcll
jmp
daa
and
mov
or
pop
sub
adcb
leave
jp
out
clc
xchg
imul
cmp
lea
nop
sub
mov
pop
rorb
ret
pop
or
mov
xchg
jmp
cli
test
mov
push
fcom
pop
nop
mov
mov
arpl
int3
aad
cli
dec
xor
cld
fcomps
mov
mov
lret
notb
clc
loopne
mov
mov
inc
add
cmp
in
xchg
mov
add
cmp
ljmp
sbb
cmp
scas
add
ret
in
jle
push
pop
or
dec
fstpt
adc
lretw
in
cmp
pop
lret
roll
mov
int
roll
mov
into
in
push
add
xor
jns
outsb
ja
mov
dec
adc
bound
outsb
cmpsl
popa
in
and
jbe
cli
daa
cli
jnp
std
lret
or
aad
insl
jecxz
out
mov
cmpsb
and
xchg
pop
cmp
mov
jp
adc
int3
lret
andb
fiaddl
pop
lock
lcall
lret
adc
and
or
int3
push
repz
arpl
ja
pop
and
xor
xchg
add
sbb
xor
fistpll
icebp
lret
fs
mov
sub
sarl
fcomps
in
sub
leave
cmp
inc
cltd
jg
jns
or
pop
inc
dec
jecxz
or
lret
cmp
xchg
mov
imul
inc
push
mov
sti
sbb
scas
sub
cmp
rclb
mov
mov
pop
out
sti
js
xchg
int3
mov
mov
into
jp
leave
mov
shrb
mov
push
sarl
filds
sub
fimull
pop
jns
sar
pop
ret
stc
lret
ja
ljmp
cltd
icebp
mov
loop
pop
aaa
dec
fcmovu
dec
dec
aam
jns
lock
sbb
xlat
xlat
cmp
xor
imul
pop
test
sub
ss
lret
shll
dec
or
shr
fsub
lret
int
sub
add
cmp
xchg
inc
fs
stos
mov
int
mov
add
sahf
cmc
lret
jns
sub
cli
aad
mov
das
or
jmp
jle
xchg
sub
adc
pop
lret
stos
nop
lds
not
and
mov
loope
lret
mov
cmc
fcoms
or
sub
shll
shlb
mov
xchg
cmpsb
ffree
lret
inc
cmp
das
jg
out
loop
lds
dec
int3
sub
jp
fwait
es
mov
inc
jmp
lret
lods
push
and
lret
sub
add
xchg
pop
xchg
int3
hlt
fwait
xchg
push
js
inc
addr16
cltd
ficompl
lds
or
push
mov
int3
lret
push
or
cmp
insl
lret
mov
loope
bnd
fbld
mov
or
or
xor
iret
pusha
cltd
loopne
lret
sbb
popa
lret
das
lret
sub
dec
inc
xor
icebp
add
xchg
mov
adc
je
jnp
les
xchg
dec
int3
data16
lret
or
sbb
nop
inc
lret
mov
jnp
and
rcl
in
clc
push
lret
inc
jecxz
cli
add
lret
cwtl
mov
sub
lea
pop
lret
sar
sub
lret
lds
ret
scas
dec
fmulp
adc
popa
stos
std
int3
pushf
lret
lods
inc
push
inc
or
sbb
and
shll
sbb
in
inc
fcoml
test
xchg
jg
push
pop
sub
sub
or
callw
xchg
lret
pop
mov
outsb
es
sahf
enter
ret
jne
push
ror
leave
repz
out
mov
pop
push
hlt
adc
jmp
cwtl
rep
lds
fst
dec
adcl
out
sbb
cmp
add
popf
int3
xchg
cmp
pop
imull
dec
cli
sbb
jno
mov
inc
lret
cmpsl
lret
insl
jbe
or
cmc
lret
mov
push
xchg
outsl
dec
hlt
push
into
pop
mov
xchg
xchg
adc
pop
lret
outsb
mov
jae
push
lret
mov
inc
repz
lret
cmp
mov
movsl
fcom
mov
lret
push
je
sbb
or
jne
outsb
in
movsb
lret
xor
cmp
iret
xchg
xor
xor
pop
js
sbb
aaa
push
cmp
into
aam
mov
out
mov
daa
repnz
sub
test
push
fimull
scas
sbb
push
insl
xor
decb
jmp
lret
repnz
shlb
out
std
lret
bound
stos
and
lret
je
ror
add
cs
mov
sbb
shrb
or
shlb
shr
jnp
enter
cli
add
ss
and
movsw
and
aas
loope
sbb
sbb
mov
dec
outsl
cmpl
dec
cltd
test
push
or
cmp
fldenv
xor
inc
lret
into
stos
mov
subb
inc
and
jmp
aaa
mov
dec
pop
pop
fidivl
mov
pop
test
into
pop
cmc
gs
lcall
jp
in
xchg
sub
sti
push
aad
sub
mov
jo
mov
pop
xchg
test
sbb
lret
mov
je
cmc
ljmp
inc
ja
in
or
jbe
aaa
loope
cmp
lret
rcrb
std
cld
add
adc
gs
out
stos
adc
popa
mov
stos
xor
push
loopne
test
and
mov
inc
inc
lret
orl
pop
or
jl
in
jp
inc
fisubl
int
inc
lds
add
cmpsb
ret
cmpb
pop
xchg
sbb
xor
jae
sti
cld
fmul
dec
orb
ficompl
psubb
cmp
add
lock
scas
cli
pop
push
mov
dec
mov
pop
fs
nop
and
into
xchg
fcmove
inc
pcmpgtw
sub
dec
ror
inc
daa
mov
pop
lret
xchg
xchg
outsb
lret
rep
pop
add
xchg
ret
inc
into
cwtl
dec
fs
lret
push
cli
aad
push
or
jno
sbb
fwait
das
mov
cmpsl
xchg
lret
add
xchg
fsubr
lret
movb
cmp
lret
push
outsb
test
scas
test
bound
test
call
fs
cli
shlb
mov
adc
pop
mov
shlb
stos
scas
mov
or
cmp
sbb
ss
adc
idivl
jne
xchg
jae
mov
in
mov
out
cmp
dec
loop
push
cmp
mov
ljmp
pusha
lret
push
fstpl
add
mov
or
mov
fs
add
das
test
cmp
mov
dec
sub
xchg
icebp
xor
sub
xchg
pop
stc
cmc
pusha
jns
jecxz
fnstsw
imull
lock
inc
ret
lret
into
pop
pop
je
mov
int3
clc
out
lods
pop
fcoms
mov
pop
imul
push
and
lret
mov
mov
mov
jge
cmp
int
imul
daa
icebp
es
movsb
mov
ficoml
stc
jge
test
cli
ss
mov
push
outsl
ljmp
push
pop
sbb
adc
shl
mov
mov
mov
add
add
jnp
mov
aad
rolb
push
xchg
or
jmp
out
cwtl
inc
jae
dec
cmpsb
ds
or
adc
and
cmpsl
pop
stos
inc
add
aad
pop
movsl
fcmovu
cmp
add
aad
sub
sbb
cltd
jecxz
lret
mov
dec
insl
pop
mov
fwait
add
mov
test
lret
enter
lods
daa
sub
into
sbb
icebp
aaa
ficompl
adc
sbb
push
ret
push
into
cmc
xor
icebp
addr16
in
icebp
out
dec
into
lds
cs
inc
xor
aam
mov
insl
jge
adc
cmpsb
lret
push
mov
lret
add
cli
subw
fs
insl
cmpsl
jnp
add
inc
cmp
pop
mov
or
mov
pusha
lods
lret
mov
jmp
mov
add
xchg
popa
lods
sahf
hlt
cli
lret
jns
dec
inc
inc
dec
dec
cs
stos
movsb
icebp
mov
cwtl
int3
xchg
imul
add
ja
xor
in
sub
cmpsl
stos
lret
insb
cmp
enter
sbb
push
mov
iret
pushf
movsl
fxch
jecxz
jae
gs
cld
lods
addr16
movsl
repz
pushf
xchg
xchg
sub
jp
lret
add
rcrl
into
in
rorb
out
sub
mov
adc
add
cltd
sbb
cli
test
in
add
fadds
lret
cmp
xchg
cs
daa
js
lock
mov
repnz
mov
les
lock
dec
out
dec
mov
xor
mov
lret
stc
mov
push
fs
out
imul
sub
lods
adc
test
stc
pop
cmp
push
and
call
jbe
bound
jb
push
mov
shll
pop
mov
fcomps
jg
mov
lret
mulps
push
mov
movsb
test
fwait
and
sub
fcoml
sbb
dec
jmp
push
mov
testb
test
push
push
fmuls
bound
lret
sbb
outsl
jecxz
inc
arpl
xlat
out
in
mov
mov
rolb
sub
xchg
out
dec
dec
les
push
aaa
xor
sbb
hlt
xor
pop
xchg
lret
out
sbb
in
lret
aad
sub
cltd
stos
lret
addb
lret
cli
jo
sub
sub
sub
add
lret
in
mov
cmc
sbb
fmuls
fs
pop
or
lods
in
lahf
mov
icebp
mov
std
dec
mov
lea
xor
xchg
mov
xor
pop
inc
dec
adc
jbe
sub
aaa
pop
rolb
test
dec
adc
inc
mov
fisubl
cmp
out
push
aam
ficoml
loopne
mov
aaa
fs
mull
sbb
aad
inc
test
mov
dec
mov
add
imul
mov
fwait
cld
cmpsl
or
data16
pop
int
hlt
lret
xchg
daa
iret
adc
test
fwait
lret
mov
fmull
jp
mov
add
ret
lret
nop
xor
inc
sbb
xor
rolb
or
in
loop
pop
jb
push
sub
lret
xchg
jmp
mov
call
flds
lret
ds
or
call
dec
xchg
pop
pusha
jmp
cmp
mov
adc
mov
inc
jmp
lret
lcall
sti
call
push
lret
pop
fdivs
sarl
lods
lret
pop
test
loop
scas
lret
xorb
pop
fsubrs
lret
rclb
dec
mov
lods
mov
xlat
imul
dec
sub
lret
sbb
dec
fsubrp
cli
pushf
pop
ds
dec
push
pop
or
fidivl
lcall
mov
dec
test
or
lret
js
repz
xchg
lret
xchg
cmpsb
cmp
dec
pop
lahf
in
xlat
out
test
outsb
lret
repnz
cmpsb
or
lret
push
sub
pop
cld
cli
into
or
adc
out
dec
ljmp
rolb
sub
scas
movsl
scas
es
mov
jle
les
and
xorb
lret
mov
xchg
subl
dec
lahf
adc
shll
rclb
leave
addr16
ret
lret
mov
push
hlt
inc
cli
ja
add
arpl
fsubrp
lret
repz
les
xor
loope
ror
cmp
fs
mov
push
dec
into
cmp
jmp
and
mov
lret
imul
mov
sbb
rorb
clc
loopne
jnp
mov
adc
sbb
xchg
inc
lret
repnz
pushf
jne
insl
out
xchg
mov
mov
ds
pusha
filds
sub
add
sub
mov
rorb
mov
mov
cwtl
jl
fs
cmpl
pop
dec
test
fcmovu
fmulp
cli
mov
adc
lret
dec
mov
inc
xor
push
mov
lods
jge
push
xlat
ljmp
rol
aas
inc
stos
ror
xchg
or
test
lret
mov
cmp
xchg
fadds
outsl
repnz
in
jnp
push
into
cmp
popa
lret
push
in
insl
sbb
je
aaa
adc
pop
leave
dec
dec
push
mov
test
adc
mov
lret
in
ret
jnp
nop
iret
cmp
jl
pop
fstpt
lret
rorb
pop
out
pushf
lret
or
outsl
ljmp
into
movsb
sbbl
jg
adc
std
loope
xchg
lret
inc
das
or
dec
iret
pop
js
mov
add
ss
sbb
lret
pop
or
push
clc
pop
lret
jae
dec
sbb
mov
jmp
jp
leave
mov
push
dec
out
movsb
or
lret
outsl
jae
push
cmp
mov
add
dec
pop
lret
testb
xchg
outsb
stos
mov
and
call
mov
stos
fmull
mov
mov
or
adc
mov
dec
test
cmp
arpl
jbe
lret
scas
inc
xorl
cmp
je
cltd
xlat
xchg
jnp
mov
out
push
adcl
cli
ret
mov
movsl
xor
fdivrs
and
xor
aam
or
xor
pop
lahf
dec
cs
inc
test
jns
js
lret
add
loopne
cmp
aad
mov
lret
inc
aas
ss
ja
mov
rcll
repz
stc
mov
cmp
popf
dec
lret
jecxz
cmpsb
pusha
adc
sbb
cmpsl
sahf
xlat
int3
imulb
sub
rolb
lret
call
push
aad
lret
ds
adc
xchg
lea
repz
lret
adc
jb
push
mov
dec
movsl
dec
sbb
or
jecxz
pushf
pop
scas
cmp
add
push
rclb
adc
movsl
cmpsl
movsb
mov
inc
and
jecxz
nop
xchg
test
sub
lock
fbstp
lcall
cltd
aad
adc
fcmovne
pop
push
icebp
and
lret
pop
cmc
loopne
push
dec
lret
pop
loope
adc
xchg
push
div
xorl
xchg
sbb
fisubl
add
es
cmp
push
inc
mov
mov
lret
xchg
jo
jge
and
insb
jne
iret
rcll
push
cwtl
lret
es
xchg
sub
lret
nop
inc
je
mov
push
or
test
sub
push
int
dec
xlat
inc
lret
aad
jnp
aaa
stos
in
mov
shlb
shrb
lret
test
adcb
movsl
jg
inc
xor
std
jno
imul
cwtl
jp
adc
add
cld
lret
mov
ljmp
enter
fidivrl
mov
push
call
lret
shll
int
dec
mov
outsl
daa
int3
xor
leave
sahf
enter
xor
cmp
cmp
test
ror
jle
bound
jecxz
mov
fmul
std
add
or
fstpt
mov
insl
test
push
mov
out
stos
pop
mov
fwait
cmp
jbe
ffreep
push
add
stos
lret
jns
fnstsw
clc
lret
in
inc
pop
enter
jne
inc
push
dec
add
push
fcoml
aas
lret
out
rolb
dec
mov
mov
flds
jno
adc
cld
lret
xlat
and
test
loope
mov
lret
cmp
es
xchg
adc
cmp
mov
inc
jg
cld
rorl
bswap
mov
or
inc
lret
push
xchg
imul
in
or
gs
inc
mov
xchg
push
lret
add
push
lds
rcrb
js
jo
jg
aaa
dec
lea
aad
push
lret
imul
add
lret
out
adcb
jae
cld
test
out
mov
dec
lret
push
xor
stos
jg
mov
cld
cmpsl
shr
mov
les
movsl
loop
int3
inc
out
dec
shr
cmp
lea
insl
in
jb
bnd
aaa
out
cli
and
nop
sar
fpatan
push
cli
and
adc
xor
cmc
pop
lret
and
stos
mov
shl
inc
jae
out
and
push
inc
pushf
aam
xchg
insl
pusha
mull
mov
iret
pop
mov
orb
mov
add
cltd
mov
je
movsb
fsubl
dec
lret
hlt
incb
shlb
lcall
stos
insl
dec
lret
mov
sub
scas
ret
pop
outsb
sahf
int3
jge
cmp
pop
addr16
popa
cmp
subb
test
or
gs
adc
cmp
jb
test
hlt
or
xor
ja
mov
mov
inc
ret
sub
jl
mov
enter
adc
call
adc
cmp
hlt
jg
repnz
imul
pop
or
into
fldcw
shlb
aaa
push
ficoms
data16
xchg
sbb
mov
int3
push
mov
push
lret
dec
dec
xor
ja
cmp
rcr
scas
outsb
cmp
popf
cmpsl
mov
mov
into
cmp
mov
loope
and
jae
mov
and
push
loop
das
lret
insb
add
pop
test
scas
dec
jns
push
lahf
pop
lret
inc
jb
out
pop
repnz
mov
push
push
outsb
xor
push
popf
js
mov
push
dec
fcmovnbe
shlb
pop
jb
sbb
mov
in
xorb
bound
loop
test
aam
stos
dec
test
aam
test
push
push
stos
out
and
mov
sbb
xor
or
std
xchg
sub
mov
and
lods
dec
aaa
loop
and
cmp
rcr
push
addr16
loop
es
cli
mov
or
daa
fcom
call
and
push
sub
or
loope
xchg
dec
dec
push
xchg
pop
xor
inc
sbb
inc
in
pop
inc
scas
pop
jl
lret
xchg
pop
mov
and
loopne
mov
and
cld
lods
pop
dec
lret
sbb
icebp
lret
push
cltd
dec
xchg
inc
sub
push
push
enter
cmp
cld
lcall
aam
outsb
lods
dec
outsl
cmp
adc
test
mov
inc
fstl
into
lret
orl
mov
out
add
pop
lret
pop
pop
add
bnd
daa
xchg
mov
sarb
mov
sbb
pop
xchg
pusha
jl
lret
data16
lock
lret
ficompl
sbb
sbbb
cmc
mov
xor
push
imul
push
push
movsl
lods
cwtl
data16
jne
inc
xor
ljmp
out
icebp
xchg
insl
aaa
popf
xor
ficoml
sbb
mov
shrb
inc
lret
inc
pop
icebp
lods
sub
lret
fmull
lret
xor
dec
pop
aam
lret
and
sarl
sti
xchg
clc
dec
insl
es
mov
inc
mov
lret
lcall
mulb
inc
lret
ss
loopne
push
lret
les
add
fcoml
jns
jle
sub
cmpsl
sbb
sbb
xor
aad
inc
je
lret
sub
or
sar
aam
or
push
jno
cmpsb
icebp
mov
sub
inc
subl
xor
rclb
add
push
cmpsl
mov
or
dec
lret
loope
mov
push
les
in
jecxz
mov
jbe
inc
sbb
insb
lret
or
sti
fsubr
mov
dec
mov
adc
dec
xor
push
leave
stc
lret
divb
mov
outsb
lret
cld
sbb
fwait
lcall
add
jns
out
aam
lahf
sub
jne
xchg
sub
dec
into
ljmp
inc
cmp
hlt
mov
lret
imul
cmp
push
in
out
into
mov
movsl
lret
aas
lods
sub
mov
inc
lea
sbb
popf
cmpb
pusha
push
mov
lret
dec
xchg
mov
mov
fisttpl
lret
sbb
lret
mov
sub
lret
loop
cmpsb
out
outsl
xorl
stos
insl
mov
mov
mov
iret
mov
push
add
mov
add
mov
or
and
inc
ret
mov
ds
hlt
jae
or
sarb
lret
jg
xchg
js
jns
lret
pop
pop
xchg
pop
subl
loop
test
lcall
lret
mov
lock
jo
popa
adc
lret
sbb
shr
clc
sbb
sbb
xlat
mov
insb
dec
xchg
shrl
call
popf
pop
fmulp
xchg
jl
cmc
cld
xchg
sbb
mov
arpl
popa
xlat
xor
ss
inc
jge
push
mov
cmp
and
dec
dec
sbbl
push
aaa
xchg
sub
clc
and
mov
push
fwait
xor
fwait
stos
into
pop
leave
or
push
pushf
stos
shrb
into
mov
lret
outsb
adc
lcall
or
pop
mov
jge
test
adc
add
or
lret
dec
push
pop
in
cli
lret
fisubrl
cmp
mov
mov
xchg
dec
cmpl
in
lret
jg
dec
sti
push
mov
sub
lcall
arpl
data16
daa
sarl
cmpsl
cmp
iret
adc
pop
stos
adc
int3
das
cli
lahf
mov
sar
movsb
imul
data16
push
leave
inc
mov
xor
aaa
sbb
and
aam
adc
pop
rcrb
cmpsb
jae
lret
jp
xchg
sub
popa
pop
jmp
lret
and
call
lret
jne
jge
mov
cmp
mov
sahf
cmp
cli
lret
iret
sbbb
shll
faddp
jge
out
xchg
lcall
inc
push
test
dec
dec
dec
lret
mov
pop
fsubl
loope
adc
hlt
mov
push
sub
dec
mov
daa
mov
dec
mov
shlb
push
movsb
xchg
lret
push
xor
repnz
fcom
lret
loop
jb
cltd
out
lret
xor
xorl
lret
cmpsb
fwait
jns
pop
mov
out
sbb
lret
aad
and
bound
popf
pop
mov
lret
add
jl
mov
movsl
mov
cmp
inc
pop
cmp
lock
pop
xchg
mov
xorl
ficompl
test
push
call
cltd
gs
mov
pushf
xlat
mov
adc
cmp
xlat
lret
ret
cmpsb
lcall
or
dec
and
dec
lret
movsl
lock
lret
sarl
xlat
mov
ds
je
or
lcall
int3
iret
jle
outsl
inc
in
dec
ljmp
loope
lret
or
out
cmp
inc
in
or
bound
out
dec
inc
sub
ljmp
mov
add
and
inc
lret
mov
in
or
fiadds
cld
cmpsl
sarl
push
fiaddl
lods
add
lods
sbb
mov
mov
insl
cmp
call
xlat
pushf
mov
mov
fadds
insl
cwtl
and
loop
mov
push
loopne
shlb
mov
add
jbe
inc
aam
lahf
fcmovu
pop
and
or
roll
test
cmpsb
sbb
sub
aas
pop
add
lret
mov
and
cli
fs
iret
jmp
jle
aam
mov
lret
int
push
xor
push
sub
repnz
loop
cmp
test
push
or
pop
push
ficoml
xchg
sub
sub
rcr
push
test
out
leave
lret
test
scas
mov
cs
arpl
jmp
cwtl
stos
notl
js
jge
shr
lahf
notb
rcll
pop
mov
push
push
push
lret
mov
inc
lret
cli
aam
in
call
xor
push
lret
into
push
scas
cli
mov
cld
pop
pop
scas
xchg
das
mov
shlb
aam
mov
icebp
cs
lret
dec
lea
fs
xlat
sub
movsb
in
lret
jp
aad
mov
shlb
hlt
adc
lret
add
or
and
je
sub
out
lds
push
mov
and
mov
xchg
lods
adc
mov
or
sahf
lret
icebp
add
loopne
inc
mov
xor
bound
sarb
cmp
movsl
mov
in
pop
lret
jnp
jp
outsb
push
jmp
xor
stos
or
sti
in
push
mov
sbb
lret
pop
add
inc
cmp
adc
sub
lea
fidivrl
je
cmp
lret
cmp
jne
pop
fisubl
iret
fdivrs
and
xchg
cmp
jmp
fs
cmp
outsb
stc
shrl
inc
push
fidivl
out
aad
outsb
daa
lret
adc
mov
sbb
xchg
and
ljmp
sub
loope
in
push
pushf
mov
xchg
ja
stos
scas
jnp
push
sub
adc
imul
or
test
shll
jg
data16
nop
sbb
jecxz
xchg
add
push
mov
dec
push
xor
sub
aam
cli
xor
pop
pop
es
lret
test
jb
ror
sub
lcall
fdivs
sbbl
or
pop
enter
aas
insl
mov
lret
lods
movlps
push
cmp
shll
mov
aas
jb
inc
out
mov
les
int
xor
insb
test
popf
addr16
push
mov
cmp
ljmp
fcmovnu
aam
mov
dec
and
mov
push
adc
cs
popl
nop
lret
jae
lcall
pop
int3
arpl
add
jmp
out
in
sbb
inc
loopne
mov
aaa
lret
jg
sbb
jbe
mov
mov
pop
insb
sbb
pushf
aaa
push
fwait
lret
sub
shrb
outsb
aas
ficoml
shl
pop
ljmp
push
mov
cli
cmc
aad
jns
adc
push
and
loope
cmp
rcl
ret
scas
out
fisubl
cltd
push
sub
jmp
movsl
sbb
rcl
cld
and
push
lret
cmp
or
add
lret
xchg
mov
lret
jbe
or
sbb
lret
stos
xchg
mov
pop
jmp
push
js
mov
jl
cmpsb
dec
fists
fstpt
xor
aam
add
mov
stos
inc
lret
pop
sbb
inc
lret
aad
xlat
fmuls
out
jne
jbe
test
sub
lods
xchg
lock
lret
lahf
std
mov
adc
dec
lret
cmpsl
addl
fucomi
into
gs
mov
sbb
enter
push
fs
jecxz
or
jo
sub
into
pop
lret
push
shll
imul
sbb
jmp
or
add
or
pop
sti
js
lret
mov
or
lret
mov
call
and
out
dec
leave
cltd
daa
push
lret
mov
dec
xchg
mov
jmp
mov
pusha
pop
cld
mov
fiaddl
lret
sbb
shrb
pop
sub
lahf
xchg
jae
je
int3
lret
xor
inc
scas
loopne
fsts
repnz
jns
out
cli
xorl
or
inc
jno
aas
push
lret
xchg
lods
jle
inc
dec
xor
cs
jp
mov
inc
into
push
jns
lcall
sbb
icebp
bswap
sbb
xor
and
in
lret
push
pop
mov
sub
pop
loop
ss
push
jne
lock
mov
mov
and
push
add
push
fisubrl
inc
sub
or
ret
jle
or
leave
iret
dec
jge
sarl
push
shl
fdivr
insl
inc
lret
stos
cld
orb
stos
sub
push
shlb
mov
call
sbb
insb
call
fsubs
pop
lods
sub
lods
movsl
or
shr
sarb
jne
dec
or
and
cwtl
add
mov
mov
or
mov
notl
sbb
cmp
rcl
add
mov
out
popf
aam
lea
mov
int
outsl
bound
lret
out
loop
mov
cli
cmp
sub
inc
stos
xchg
popa
jge
or
out
popf
lret
lock
adc
ror
mov
faddl
inc
mov
mov
dec
loope
lret
jbe
jg
push
stos
lret
scas
mov
andb
cmp
and
mov
fwait
mov
scas
fiadds
push
rclb
mov
ret
push
ds
movsl
xlat
mov
add
cmovne
or
mov
ljmp
movzbl
cs
mov
outsb
dec
sahf
mov
xchg
push
hlt
sbb
mov
xchg
cwtl
cmp
inc
in
mov
shlb
faddl
mov
jge
leave
rolb
rol
clc
xlat
ror
cmpsb
pop
dec
sub
cmp
jge
or
les
dec
in
add
dec
cmp
sub
insb
add
jmp
pusha
in
mov
mov
icebp
jecxz
inc
lret
pop
dec
push
sti
lret
or
push
iret
and
dec
fdivrp
jns
ficoml
sbb
lret
and
addr16
es
mov
testb
stos
daa
inc
insb
xchg
inc
dec
popf
fwait
lret
stos
push
xchg
cmp
jge
not
movsl
add
inc
mov
bswap
lahf
into
aad
test
lret
add
ret
repz
in
test
lret
mov
xchg
fs
fidivrl
les
aam
or
sub
add
mov
pop
pusha
lret
cmp
jge
decb
je
mov
or
jp
sub
adc
xchg
lret
icebp
dec
dec
xor
orl
jae
sbb
rorl
test
or
mov
mov
dec
mulb
andl
subl
ja
cld
leave
pop
testl
mov
cmc
daa
xor
jne
lret
scas
mov
es
int
or
fcomp
lret
mov
add
cmp
es
mov
lret
test
xchg
fcmovne
sub
push
fs
and
push
fdiv
lret
pushf
int
push
or
aas
in
stos
mov
mov
movsl
lret
out
and
jns
pop
dec
xor
lret
mov
pop
lret
call
fstpt
inc
repnz
mov
mov
push
dec
and
mov
xor
sbbl
mov
lret
mov
stc
lret
test
lret
js
daa
sub
in
lret
xor
stos
fsubp
loopne
mov
adcl
jle
insl
pop
out
pop
add
xchg
lret
insb
cmp
lcall
loop
push
push
xor
xchg
jae
push
movsb
lret
js
ficoml
push
or
leave
in
sarb
std
xor
mov
call
or
stos
lods
push
out
ja
pop
dec
ret
pop
lret
shl
inc
cli
stos
mov
mov
mov
mov
rorb
je
add
cmc
inc
sbb
and
lret
imul
lret
mov
ret
lret
scas
jno
adc
aaa
lret
adc
lret
gs
out
loop
stos
shlb
mov
xor
pop
dec
jp
cmp
lret
cmpsl
adc
lret
clc
jae
sub
sbb
jg
xor
or
mov
lret
cmc
xchg
and
pop
sarl
lods
sub
enter
in
add
add
add
jecxz
ss
xchg
outsl
pop
pop
cltd
dec
shrb
enter
jl
jb
popa
pop
xchg
out
fidivrl
aam
mov
pop
outsb
or
push
test
fwait
or
shrb
out
movups
mov
iret
stc
pop
jb
cmp
lret
or
rcll
jp
mov
adc
in
cmpsb
mov
lret
test
sbb
inc
daa
lret
les
ljmp
popf
pop
jl
inc
sbb
inc
inc
fldenv
outsl
cmp
sub
xchg
flds
mov
fs
push
mov
mov
lret
sub
xchg
mov
inc
test
test
and
int
add
cmp
lret
cmp
lret
in
jle
dec
jnp
add
cmp
mov
mov
cmp
xchg
iret
rolb
xlat
jmp
sbb
or
adc
fistps
ret
xor
sarl
loope
dec
frstor
stc
outsl
pop
cltd
inc
lret
jle
hlt
scas
mov
mov
mov
sbb
xor
rorl
inc
mov
ljmp
pop
push
cmpsl
lret
pushf
mov
adc
xchg
add
lret
imul
cmc
or
adc
xchg
lret
std
jecxz
push
int
cmp
cmp
int3
rolb
sti
popf
and
mov
push
pop
in
lret
shl
out
add
lret
mov
cmp
sbb
xor
and
in
lret
mov
mov
inc
pop
dec
or
mov
ds
into
call
pop
lret
dec
xchg
cwtl
xchg
mulb
fidivrl
or
jnp
mov
sbb
sbb
push
sub
dec
call
mov
out
fmulp
das
ret
popf
pop
pop
pop
lret
mov
mov
pop
mov
add
cltd
push
addb
cli
xchg
inc
ja,pt
or
sahf
push
enter
mov
lret
adc
lret
jle
arpl
ret
lret
outsl
scas
ja
mov
sub
dec
rol
fucomip
push
mov
cltd
leave
dec
mov
lret
mov
sbb
dec
pop
repnz
xchg
sahf
in
ja
fisubrs
iret
adc
mov
vaddss
mov
sarl
sub
mov
pop
ret
loopne
mov
dec
mov
xchg
cmp
ja
pop
jle
sbbb
xor
icebp
inc
sbb
cmp
or
sarl
cmp
insl
fldt
das
mov
inc
ret
jae
insb
sahf
imul
fmull
sarb
fs
push
cli
sbb
pop
add
movsl
test
xchg
adc
mov
out
test
addl
dec
test
pop
fmuls
push
cmp
jge
mov
pop
mov
xchg
out
es
mov
insl
das
aam
cmp
or
lret
adc
xchg
xchg
orl
lret
dec
imul
cli
jmp
outsl
and
pop
fdivr
mov
sub
sti
into
mov
jne
lret
movsl
fstps
and
mov
cltd
fistl
insb
test
call
add
jecxz
sarl
into
pop
add
or
cmpb
jg
and
push
mov
inc
out
push
jbe
push
mov
mov
sub
xchg
mov
or
xor
xchg
sbb
xchg
adc
test
xchg
scas
out
lret
inc
test
fidivrl
xor
lret
int3
daa
movsb
lret
je
xor
inc
jns
rcrb
fwait
pop
add
jmp
lret
xchg
loope
lret
sub
repnz
fs
pop
test
push
add
mov
mov
dec
outsl
mov
lret
lods
pop
scas
in
ret
lret
nop
stos
pushf
xlat
aas
cmp
inc
sbb
clc
test
scas
dec
inc
inc
rolb
cli
lret
lcall
enter
mov
pop
fsubrs
lahf
jbe
mov
stc
dec
lret
mov
xchg
adc
std
jbe
sub
sbb
inc
ds
outsl
lret
mov
mov
cwtd
jmp
es
mov
xor
pop
jg
xor
push
data16
sub
arpl
popf
int3
mov
aam
movsb
scas
lret
jbe
mov
shrl
clc
cltd
lret
pop
jp
xor
mov
fmuls
lret
add
lea
inc
into
lret
sub
cli
leave
jl
mov
ret
lea
call
test
mov
lret
dec
add
fcmovu
cwtl
sbb
mov
sbb
lret
in
xor
xchg
fcmove
mov
ljmp
lret
xor
not
cmpl
jge
les
lret
xchg
int3
mov
testl
push
rorl
sub
push
stc
cmp
cmove
xor
ljmp
jg
imul
xchg
rcl
push
mov
lret
test
cmc
addr16
lret
shll
lds
dec
jmp
push
cmp
scas
sti
inc
clc
pop
xchg
mov
test
loop
movsb
push
xor
enter
adc
or
sbb
sahf
mov
imulb
xorl
mov
lret
lock
aad
lret
inc
inc
or
in
popf
lret
scas
or
push
sbb
lret
cmc
push
lret
test
push
mov
movsb
in
push
dec
bound
cmpsb
lret
outsb
or
sub
lret
lods
sarb
push
cli
cli
shl
sarl
fstps
in
push
lret
push
or
adc
pop
xor
add
dec
bound
fisttpl
mov
adc
pop
cltd
mov
orl
iret
cmp
xchg
stos
in
out
ja
lods
mov
bound
cmp
mov
int3
inc
int3
xor
pop
jmp
addr16
xor
test
mov
das
pop
inc
cmp
adc
lret
add
jns
jb
js
lret
and
or
stos
pusha
mov
or
bound
es
sub
mull
rorl
in
adc
pop
mov
repnz
sub
jecxz
stos
mov
or
mov
xchg
shlb
jne
cmp
mov
mov
lret
and
inc
mov
dec
call
int
fdivl
and
lea
dec
sbb
daa
push
stos
jmp
add
lret
or
loopne
fwait
cmp
and
and
out
push
xor
je
push
sub
shl
fwait
aam
stos
lahf
dec
jmp
in
dec
mov
mov
lret
sbb
add
lret
push
lret
dec
cmc
cmpsb
aaa
sarl
jnp
dec
stc
aam
mov
jbe
into
dec
lret
mov
jle
insb
je
and
popf
mov
in
lret
bound
lret
cmp
jbe
or
pop
mov
mov
fisubl
jnp
adc
sub
and
sahf
mov
test
fcmovu
stos
mov
ror
or
sbb
inc
movsb
lret
je
jb
mov
sahf
not
cld
add
das
aad
lods
mov
lods
push
cwtl
lret
cld
es
xchg
sbb
pusha
out
icebp
add
mov
call
xlat
mov
cld
sub
das
push
int
inc
jp
call
pop
xchg
push
dec
inc
or
cmp
lret
arpl
cs
stos
popf
lret
inc
sub
and
cmp
pop
cmp
xor
sbb
cmp
xchg
in
mov
cld
rclb
movsl
jl
cmpsb
stc
xchg
test
inc
lret
icebp
mov
cmp
flds
and
sti
adc
jp
dec
push
add
fists
loop
pop
or
sbb
dec
or
aad
lret
and
dec
jae
adc
js
dec
jl
scas
adc
mov
xlat
mov
mov
adc
scas
cld
inc
cmp
sbb
cltd
insb
mov
push
fstpt
and
cmp
cmpb
in
xchg
call
fcompl
test
lret
gs
data16
cmp
inc
imul
leave
add
jbe
pop
insl
push
sub
cmp
add
xor
lret
and
stos
cmc
jo
and
lret
mov
clc
sti
out
sbb
hlt
dec
mov
or
es
xchg
repz
divb
dec
adc
lret
xor
repz
dec
lret
nop
push
mov
cs
notl
inc
jmp
cld
xchg
rorb
jbe
int
bswap
mov
enter
out
inc
xchg
mov
cli
mov
lea
mov
int3
jge
les
xor
xlat
rcrb
fmul
jmp
imul
shrl
xchg
stc
pop
mov
mov
popf
andb
pop
mov
lret
or
cwtl
cmp
mov
inc
cmc
or
lret
pop
fidivrs
push
and
dec
fsubs
lret
sbb
pop
orb
jno
js
push
lret
rcr
sbb
lret
movsb
push
js
push
ret
not
lods
pop
jmp
pop
sub
mov
xor
iret
and
mov
adc
lcall
xor
cmp
insb
fwait
sbb
ror
repnz
scas
leave
pop
lret
adc
lret
mov
test
mov
jns
jb
out
pop
lods
jo
pop
cmpsl
nop
dec
testl
sub
lret
daa
insl
imul
dec
inc
in
and
xchg
fcom
cli
cmp
addr16
add
sarb
xor
pop
out
push
or
rcrl
push
nop
xor
or
add
sbb
jno
rcrl
pop
data16
mov
lret
lods
sub
lret
jmp
fldl
fstps
and
shlb
cmp
movsl
and
xchg
adc
mov
loop
jle
mov
mov
incb
aad
ljmp
popa
iret
shll
mov
sub
jmp
adc
jl
cli
xor
cmp
fistpll
and
out
movsb
fs
jo
mov
gs
mov
pushf
lods
mov
fidivl
int
push
cltd
mov
cmp
pop
cmp
lret
aaa
mov
mov
xchg
adc
and
bound
lods
hlt
lret
ljmp
outsb
int
mov
cmp
lcall
jecxz
lret
popa
fldcw
ja
shl
loopne
mov
test
dec
fisttpll
scas
xor
outsb
shl
push
cli
cmp
sbb
jbe
xchg
xchg
lea
and
bswap
cmpsb
movsb
inc
lret
les
in
movsw
cli
sbb
xor
dec
xor
mov
sub
shl
rcrl
pop
jno
lods
jg
sbb
lret
push
sahf
fwait
mov
inc
shl
pop
out
xor
dec
inc
fsubrs
or
loopne
cmpsl
jmp
popa
jae
jns
repz
push
xchg
lret
sti
mov
lret
dec
mov
adc
push
test
mov
jno
leave
push
sbb
lret
int3
scas
xor
mov
outsl
pop
es
lcall
pusha
mov
pop
lret
inc
jmp
lret
fcmovnb
dec
stc
fs
adc
dec
pop
push
js
adc
mov
mov
cli
fadd
lret
xorl
xor
call
fbld
sbb
lret
imul
inc
sub
sbbb
xchg
jp
cmp
lret
pushf
mov
sarb
xchg
adc
pop
cmpsb
lahf
mov
outsl
lret
mov
inc
lret
add
jbe
mov
fmuls
nop
push
or
ret
sub
in
lret
mov
push
ficompl
mov
cmc
std
mov
lret
addl
jg
inc
insl
ljmp
add
lret
jne
jnp
dec
inc
lret
sub
stc
mov
mov
mov
or
mov
cmp
ret
cli
fisubl
push
cmpsl
in
dec
sarb
xchg
inc
mov
mov
lret
mov
lret
aaa
neg
and
jg
movsl
aad
cmp
in
pop
addr16
test
scas
rcrb
cmp
notb
mov
lret
hlt
mov
jns
lret
movsl
clc
push
cmp
xchg
jge
test
hlt
lret
fcomp
pushf
sub
rcrb
mov
int3
popf
adcl
sub
lret
sub
test
mov
idivb
mov
sub
jmp
xchg
shl
cmp
cmp
dec
cmpb
js
fdivrs
xor
mov
aaa
pop
icebp
invd
jns
or
push
lret
xlat
cmp
cwtl
shlb
sub
int3
pop
sbb
xor
test
or
mov
xchg
sahf
mov
xlat
fmull
xor
lret
movsb
fadds
lret
sub
cmpb
cmp
add
fbld
inc
sbb
test
push
lret
nop
inc
loop
and
scas
test
adc
insb
int
lret
ja
jne
inc
pop
mov
dec
lret
sbb
push
sbb
cmp
sbb
adc
jae
add
cli
popa
lds
cmpsl
mov
or
cmp
push
fsubrs
lret
testl
or
out
mov
nop
lea
mov
mov
in
enter
pop
push
and
add
dec
mov
lahf
jns
inc
and
mov
aas
rcrb
fcoml
testl
stos
hlt
fsubrs
movsl
xor
andb
lret
bnd
or
mov
sbb
pusha
push
test
push
mov
popf
sbb
and
nop
xchg
shll
int3
and
out
push
repnz
mov
push
adc
loopne
pusha
pop
mov
jne
outsb
lcall
mov
and
jg
dec
icebp
pop
imul
test
push
and
rcll
pop
push
into
lret
sbb
jo
lahf
sbb
lret
push
pop
lret
bound
lret
cmpsl
adc
dec
mov
imul
stc
int3
and
sub
jp
and
sbb
in
cltd
lret
sub
popf
rol
jmp
sbb
lock
push
adc
pop
fistps
push
jg
cmpsl
addr16
pop
xor
pop
dec
sbb
and
cld
insl
push
out
push
push
in
add
mov
inc
adc
lret
mov
cmpl
and
jmp
sti
mov
dec
or
sbb
aam
les
pusha
lret
add
lret
mov
inc
lret
or
lret
cmp
cmp
sbb
popf
lret
xchg
repz
lret
add
loope
xor
test
lret
xchg
je
jge
mov
imul
mov
dec
pushf
mov
cmpsb
push
into
jp
stos
out
inc
shlb
addr16
inc
shrb
cmp
lret
adc
or
ret
jnp
pop
popf
ja
lret
sub
adc
mov
or
dec
push
mov
pop
dec
push
or
jp
pushf
jmp
sarb
pop
cli
lret
jb
inc
out
sub
fisubrl
dec
xchg
add
sbb
and
mov
mov
jb
inc
jp
adc
into
fbld
std
adc
pusha
test
pop
ljmp
jnp
mov
lret
mov
sub
addr16
shlb
lret
repz
mov
popa
lcall
cmp
lret
into
xchg
shr
xchg
inc
nop
pop
mov
mov
xchg
fisubrl
in
push
movsb
xor
loope
cmp
mov
shrl
jle
mov
outsl
jae
lret
bound
rclb
push
gs
lret
adc
adc
xor
test
clc
sbb
cmp
push
cmp
fildll
sarb
stos
xlat
icebp
out
int3
xor
sahf
outsb
cmpsb
lret
mov
mov
pop
sbb
lret
nop
in
shrl
xchg
or
es
mov
icebp
adc
in
bound
push
lods
fisttpl
mov
gs
fidivrl
std
xor
pusha
and
adc
aad
mov
cli
test
aam
repnz
xchg
pop
lret
jmp
xorl
jmp
cmpb
lea
add
fisttpll
test
lret
leave
movsb
mov
xchg
sub
xchg
cmp
jns
mov
xor
dec
pop
sbb
shrl
testb
inc
sar
or
mov
cmpl
adc
cs
xchg
cmp
dec
leave
es
fnstenv
push
lahf
lret
aas
xor
lcall
nop
adc
add
mov
adc
lret
mov
xchg
mov
out
in
insb
std
dec
aaa
mov
rcll
mov
lods
mov
inc
mov
lret
adc
lock
mov
shll
daa
lret
sbb
pop
iret
xor
bound
cmpsb
and
cwtl
push
mov
cli
xor
daa
repz
clc
cmp
inc
inc
and
scas
shlb
xchg
pusha
inc
lret
xchg
sbbl
std
icebp
lret
dec
or
fistl
and
out
test
enter
mov
sub
xlat
loopne
dec
xchg
pop
lret
xor
stos
or
hlt
rclb
lret
pop
push
in
pop
add
lret
or
dec
mov
mov
rcl
mov
aaa
sub
rcr
xor
sbb
cld
xchg
push
cs
out
lret
xor
incl
aad
popf
xor
sahf
inc
jns
lret
add
lret
stos
push
sarl
test
adc
out
lret
wbinvd
roll
push
or
mov
mov
lret
mov
mov
nop
arpl
pop
push
xor
int
stos
shlb
shrb
fcmove
addl
in
aaa
pop
lret
lcall
shrb
bound
cmc
jp
fsubrs
stc
pop
sub
test
cli
push
xchg
aam
mov
jnp
pop
inc
in
lret
push
js
jle
push
lret
aaa
dec
insl
sahf
outsl
stc
lret
daa
repnz
jb
or
lcall
xchg
pop
pop
ljmp
ror
mov
sub
ss
lret
xchg
jae
stos
aaa
loop
pop
dec
fs
aad
pop
sbb
lret
push
pop
and
lahf
in
fwait
sub
arpl
xchg
jb,pn
and
aaa
imul
test
outsl
lret
ds
jnp
jo
cli
sbb
mov
push
into
cmp
lret
xor
mov
lcall
fwait
lret
enter
lret
xchg
cmpsl
loop
xchg
gs
repz
mov
aaa
and
xchg
jne
lret
pop
ja
mov
jmp
sarb
dec
fimuls
lret
xor
inc
pop
push
push
or
stos
jno
cmp
sar
add
cmp
pop
rcr
push
in
adc
lret
arpl
mov
sbbl
ret
inc
ss
cmpsl
jmp
pop
std
ficoml
jnp
test
xchg
mov
mov
bound
jno
lret
loop
pop
jae
stos
out
sub
popa
xor
int3
sarb
daa
inc
lea
lret
fimuls
inc
bound
xchg
jne
pop
daa
lret
ss
into
pop
lret
pushf
mov
jo
ror
cmpsl
outsl
test
cli
add
or
mov
mov
sbb
mov
dec
cmp
jne
ss
xor
and
cwtl
mov
cmpl
fiaddl
faddl
add
cwtl
cmpsl
dec
callw
adc
and
sti
jne
loope
fcmovnu
aaa
in
mov
rcrb
jbe
ljmp
sarb
in
fisubrl
jge
mov
int3
lret
jnp
dec
fsubrs
inc
dec
xchg
into
xor
dec
lret
xor
aam
push
mov
jp
fwait
rorb
fcoms
lret
pop
std
pop
jp
das
lret
gs
jb
loopne
lret
dec
push
outsl
shrb
push
rolb
and
leave
adc
rcrb
lret
loop
pop
daa
cmp
lret
idivl
std
lock
stc
pop
cli
aaa
in
lds
lret
leave
add
jns
add
neg
jge
cmc
je
inc
lret
inc
or
pop
sub
mov
inc
ja
mov
cltd
insl
out
stos
rol
loopne
mov
adc
mov
cmpsb
popf
or
fldt
clc
fbstp
inc
xchg
fxch
adcb
mov
pop
xchg
push
fiaddl
fstl
cmp
jp
or
ss
lret
insb
or
fwait
data16
mov
pop
adc
mov
fistpll
pop
nop
jl
sbb
lods
mov
int
jb
xor
push
subb
mov
jmp
lret
and
lret
movswl
dec
loopne
lret
sbb
sbb
mov
inc
add
popf
fld
jne
jp
and
sti
in
push
cmp
jo
out
adc
test
cmp
mov
mov
add
and
mov
pushl
in
fldcw
and
pop
jecxz
aas
mov
sti
js
in
aad
ficompl
stos
or
pop
lods
jge
mov
test
test
jmp
in
xchg
inc
lcall
sub
or
and
lret
inc
add
mov
dec
in
psubsw
jae
push
xchg
mov
rclb
jb
xchg
sub
ret
sti
or
sbb
aad
loope
inc
xchg
lret
mov
push
xor
sub
mov
aam
inc
test
pop
adc
mov
adc
mov
ret
lret
lahf
cmp
repnz
ret
icebp
lret
in
push
lret
or
in
mov
sbb
mov
sbb
cmp
sub
fsubrs
sbb
lods
inc
inc
cwtl
push
mov
inc
lret
sub
adc
cmp
in
jb
sbb
loop
adc
xor
jle
lret
into
jmp
xchg
sbb
fcmove
cltd
jge
int3
insb
xor
mov
mov
lds
aaa
add
inc
jg
inc
cmp
mov
lret
sub
xor
xor
fwait
lods
fidivrs
loop
xor
mov
lret
std
jb
jp
mov
cli
sbb
push
sub
sub
fcmovu
dec
pusha
test
fdivl
insb
pop
or
or
mov
lret
dec
xor
or
sub
push
and
nop
mov
lret
dec
jle
jns
ror
mov
popf
fistpl
loopne
lret
pop
inc
js
or
mov
ret
out
lods
test
test
jo
push
lret
or
mov
inc
jns
into
ja
push
push
cli
jg
jae
cmp
lret
out
imull
mov
ret
enter
fstpt
add
jg
lret
subl
rcll
mov
loope
les
lret
xchg
or
mov
lret
jge
daa
xchg
push
cli
addr16
fidivrs
pop
aad
jg
lret
mov
lcall
popf
sub
rorb
cmc
movsl
stos
cli
inc
aaa
ss
in
pop
xchg
int
cmp
push
sbb
shrb
into
xor
add
jecxz
repnz
movsb
into
xor
pop
popf
cs
cli
xchg
in
xor
xlat
jp
cmc
lret
dec
imul
push
sub
sub
loope
mov
out
mov
int3
pop
lret
mov
or
stos
pop
aad
insl
jmp
lret
incl
daa
xchg
bound
imul
mov
fldcw
inc
mov
andl
push
popf
fistps
sbb
out
xor
mov
push
lahf
lret
test
sti
rolb
xorb
mov
test
xchg
lret
xlat
std
int3
jno
stos
dec
sbb
lret
push
sub
stos
imul
idiv
add
lret
pop
jl
iret
sbb
test
cli
push
shrb
inc
sub
and
mov
lret
xchg
mov
push
or
xchg
and
or
mov
aaa
call
inc
gs
clc
ret
lret
dec
pushf
cld
cmc
icebp
je
int
ss
dec
aas
jbe
cmp
nop
pusha
pop
cmpsb
lret
in
scas
lret
shrb
jbe
mov
fists
mov
cmp
in
mov
shrb
mov
jbe
lret
rclb
in
fs
xor
add
adc
cmp
fildll
arpl
jns
sti
imul
in
aad
repz
push
xor
je
push
jo
jg
sub
xor
lods
mov
xor
push
adc
lret
pop
mov
lret
sbb
icebp
dec
cmp
int
in
cmc
lret
scas
das
jo
stc
arpl
and
jne
mov
pop
stos
jl
lods
rcl
push
loope
jns
ror
in
push
filds
jl
pop
cli
or
mov
shrb
add
inc
lahf
push
push
mov
cmc
xchg
in
cmp
push
and
mov
out
dec
add
mov
cltd
adc
dec
bswap
insl
repz
mov
xlat
xor
lret
aas
mov
mov
into
out
call
lret
cmp
inc
icebp
int
loope
sbb
dec
out
xor
mov
es
jo
or
mov
and
xchg
mov
jo
pop
and
cld
ljmp
mov
lret
lods
std
sbb
and
mov
lret
and
aad
mov
xchg
bound
cmp
push
jns
dec
lods
inc
xchg
sub
inc
sbb
cmpb
data16
fidivs
loope
cmp
nop
mov
push
mov
lret
add
mov
mov
cli
dec
frstor
popf
inc
lret
mov
xchg
insl
sub
lea
lret
cmp
jle
jg
mov
stos
cmpsb
or
or
mov
lahf
adc
lret
mov
es
jg
jge
int
inc
or
xor
out
sub
ljmp
fcomps
mov
adc
mov
xchg
sarb
cmp
out
xor
dec
lret
shl
jns
repz
mov
lds
lret
sub
scas
adc
mov
sub
mov
and
mov
push
pop
lock
sbbl
in
rolb
test
sub
lret
imul
xchg
rorl
add
mov
out
cmp
in
mov
adc
mov
cmp
stos
push
xor
dec
adc
xchg
dec
jbe
mov
lds
jecxz
cmp
push
sbb
jae
stc
mov
xchg
xchg
mov
ret
cmp
incl
pop
mov
fcomps
and
out
add
cmpb
lret
and
aaa
lret
xchg
hlt
data16
xchg
je
movsl
cmpsl
jns
jl
lret
add
out
lods
push
icebp
cs
xchg
dec
stc
insl
iret
fisubrl
hlt
rcll
enter
ret
xchg
sub
mov
dec
mov
jp
sbb
in
std
imul
pushf
inc
pop
dec
addr16
fwait
fs
nop
rol
xchg
enter
ljmp
aam
loope
sbb
lret
mov
fidivl
and
lret
xor
pop
xchg
mov
adc
fdivs
add
or
push
call
lret
jb
cmpb
into
lret
jmp
fmul
inc
mov
xchg
adc
adc
mov
xor
shl
inc
push
popf
dec
nop
lret
mov
das
mov
pop
lret
and
jno
aas
icebp
cwtl
cmp
rorl
push
lret
jecxz
pop
dec
test
lret
pop
lods
sbb
jl
lret
jnp
into
test
lret
xchg
push
daa
push
mov
lret
mov
mov
push
lret
fidivrs
add
in
add
mov
sbb
je
push
daa
lret
jecxz
out
push
lret
xor
sub
ret
lret
jno
lea
lret
aam
mov
xor
adc
stos
lret
push
cli
cli
and
sub
in
push
lret
hlt
add
jno
fisubrl
mov
pop
je
shlb
mov
sarl
xor
lret
pop
mov
sbb
aas
lods
fimuls
add
out
pop
pop
jg
and
lret
data16
inc
mov
fldt
sbbl
js
lret
cs
or
jle
lret
mov
cmp
or
sub
xor
fisttpll
push
mov
pop
lret
or
pop
loopne
sbb
mov
sahf
and
lret
mov
sub
bnd
es
lret
testl
add
fcmovne
lods
or
addr16
jnp
jne
pushf
pop
lret
repnz
sub
xchg
lret
dec
movsb
aam
leave
loope
cmp
rolb
andl
mov
pop
in
imul
shll
cmpb
pop
jp
adc
cmp
jg
fidivl
adc
mov
dec
popf
adc
mov
lock
jmp
or
fs
ror
push
enter
mov
mov
cmc
int
imul
repnz
pushf
subl
arpl
hlt
lret
push
cmp
cmp
dec
push
mov
aad
fs
fsts
or
icebp
into
inc
add
pop
sahf
movsl
imul
ja
lret
cwtl
ret
adc
lods
and
add
decl
pop
mov
sub
mov
ljmp
inc
pop
adc
lret
inc
std
sbb
ror
xchg
cld
pop
ret
jg
mov
xor
xchg
std
mov
stos
fcmovne
cwtl
rcrb
popa
adc
movb
data16
mov
lret
hlt
fistps
pop
int
or
mov
adc
cwtl
stos
subb
xor
fcmovu
out
lcall
jb
icebp
inc
aam
bound
test
shlb
push
jnp
adc
pusha
mov
push
stos
mov
xor
mov
ljmp
shlb
shlb
adc
jl
lds
aaa
lret
adcb
cmp
cmp
les
in
cmc
cld
ja
scas
push
add
clc
and
push
lret
lcall
ror
sbb
push
and
ret
pushf
mov
jbe
je
adc
push
in
push
mov
dec
cmp
or
cmp
scas
in
inc
fcmovu
test
dec
mov
clc
lret
mov
test
pop
mov
lret
adc
es
lret
leave
rcll
stos
fst
cmp
jns
mov
rcr
sub
sbb
mov
and
add
aad
ret
jbe
mov
sbb
out
mov
cmp
pop
xlat
lret
push
xchg
lret
push
or
pop
insb
pushf
fcmovb
repz
dec
test
iret
push
nop
lock
out
shlb
outsb
or
fdivl
loope
lret
pop
flds
iret
stos
fwait
cltd
xor
pop
and
scas
repnz
out
sahf
pop
xchg
jne
ja
hlt
fcoms
aaa
addl
fmulp
ret
jno
popl
push
xchg
jnp
dec
push
shrb
imul
sti
xchg
and
push
into
cs
sti
in
push
mov
or
lret
jbe
ja
ss
fwait
cmpl
popf
stos
pop
adc
cmp
in
inc
rclb
lret
dec
mov
lret
out
pop
cmpsl
rclb
jge
int3
gs
adc
and
or
add
sub
lret
mov
mov
or
sti
loope
out
popf
out
sbb
lret
pop
or
ss
cmp
int
inc
stc
subl
xchg
xlat
rcrl
shl
pop
pop
daa
xchg
orb
jnp
or
in
xchg
and
lret
xor
inc
movl
push
fnstenv
xchg
mov
lret
fdiv
mov
cli
dec
loope
jecxz
pop
test
cmp
bound
in
sub
jb
int
into
xchg
adc
divb
lock
aaa
and
movsb
sbb
dec
int3
orl
and
mov
mov
rorl
jl
pop
push
sub
mov
jnp
jae
pop
push
mov
jecxz
bound
pop
xchg
push
jmp
xor
ror
ret
mov
push
jo
pop
sahf
dec
gs
lret
idivl
sbbl
mov
cmp
or
arpl
mov
mov
aad
jle
mov
incb
imul
insb
mov
cmpsb
fcmove
xchg
sbb
pop
sbb
cmp
in
push
pop
loop
mov
cld
cmp
or
xchg
lret
inc
jae
dec
test
or
scas
stos
fdivrl
call
cli
sbb
pop
aad
mov
lret
mov
sbb
cmpsb
lret
pop
shlb
movsb
lret
xchg
icebp
xlat
aam
clc
cmp
cmp
push
out
into
fiadds
add
add
ds
mov
mov
or
bound
jbe
mov
mov
int3
js
cmp
cmp
push
cwtl
mov
fsubrs
mov
jle
cmp
lea
pop
xor
lret
sub
add
dec
stos
inc
into
jmp
mov
lret
inc
repz
add
sbb
hlt
lret
lods
pop
decl
and
test
sbb
adc
lahf
shrb
xor
adc
xor
roll
cmpsl
inc
js
jns
pushf
fsubs
cmp
fistl
push
cli
cmpsb
inc
jne
imul
sbb
lret
push
fildl
mov
sar
inc
out
negb
andb
mov
rclb
jo
bound
in
aam
jg
lret
lret
mov
iret
enter
test
add
shrl
call
shlb
lret
mov
loop
mov
mov
insl
lret
enter
pop
jo
cld
jge
loopne
and
scas
out
mov
into
lret
xlat
xchg
xchg
cmp
mov
imul
cld
nop
cwtl
cli
xlat
sub
push
mov
cltd
fidivrl
js
sbb
jae
inc
push
mov
popa
push
pop
mov
xchg
out
sbbb
sub
std
ret
dec
jecxz
push
jo
negb
adc
enter
ror
jg
aad
test
and
mov
and
or
xchg
sbb
push
aam
lret
cli
shrl
jle
ror
cmp
pop
sbb
imul
inc
cmp
push
inc
inc
lret
ret
sbb
and
das
adc
mov
jnp
inc
in
insl
stos
mov
stos
scas
or
mov
nop
jg
lahf
sahf
insb
repz
adcl
arpl
repnz
in
pop
fidivl
cmpsb
stos
iret
mov
lret
orb
adc
dec
ror
cmpsb
inc
loope
out
mov
or
repz
jmp
jne
add
push
in
mov
roll
or
and
or
pop
iret
xchg
popf
das
and
iret
mov
sbb
repnz
sahf
sarb
stos
stos
mov
dec
insl
adc
inc
stc
stos
mov
imul
mov
inc
push
lods
xor
lret
aad
add
inc
lret
xchg
js
push
cmpsb
xor
les
jle
mov
je
out
mov
cmp
rcrl
imul
repz
pop
shr
sbb
dec
mov
push
sub
lret
jl
bnd
inc
fiaddl
push
cmp
dec
rcll
mov
incb
sub
add
mov
out
ds
adc
pop
lret
sahf
jne
inc
jle
mov
lret
or
adc
adc
xlat
addr16
insb
bound
sbb
xchg
js
fwait
rolb
pop
lods
xor
push
incl
out
out
imul
jb
lret
lods
mov
aam
lds
mov
adc
mov
push
sahf
popf
jge
lret
jecxz
or
decl
inc
cmpl
rorb
addb
mov
mov
fbstp
and
mov
loopne
in
cmp
cltd
shrb
dec
cli
and
adc
sbb
jge
cmp
cmpsb
jne
add
dec
pop
mov
stos
insb
fiadds
rorb
push
push
lret
lock
jae
add
lea
xchg
sub
notl
stc
or
je
inc
call
mov
fdivr
sub
xorl
rclb
jnp
test
lret
stos
mov
or
or
in
clc
cmp
lock
adc
loop
shl
sub
dec
and
out
sub
repnz
fcmovne
out
lret
jno
popa
loop
outsb
lret
movsl
mov
lret
hlt
inc
int
das
push
mov
pop
test
sahf
adc
mov
ljmp
lret
xor
sub
in
or
xor
imul
push
fisubrs
pusha
mov
lret
and
push
leave
push
mov
or
dec
out
xor
xchg
push
fnstcw
loope
mov
fidivrl
popf
into
jbe
fwait
sarl
ds
into
jnp
lret
push
inc
lods
lret
and
in
push
ret
and
dec
xor
out
bound
ljmp
into
push
cwtl
jnp
adc
leave
mov
push
pop
enter
fidivs
and
jb
aam
shlb
lret
iret
inc
dec
mov
shl
sarl
jmp
lods
xor
cmpsl
es
xchg
loope
mov
jae
lahf
or
jl
testl
jo
out
pop
lret
dec
pushf
loope
and
icebp
cli
fisubrl
fnstcw
or
nop
icebp
xchg
or
mov
mov
daa
scas
pop
jmp
push
pop
push
push
push
in
lock
stos
xchg
or
lret
cmp
pop
xchg
test
adc
push
test
lret
fucomp
into
sti
dec
sub
and
sbb
in
es
xchg
cmp
sub
ds
lds
sbb
mov
or
out
inc
cwtl
add
or
lret
and
adc
rcr
lret
xchg
mov
mov
ror
pop
inc
aad
and
imul
mov
xor
cmp
and
rcl
inc
jne
mov
stc
in
in
push
sbb
lret
negl
int3
push
or
mov
imulb
adc
mov
mov
insl
lret
in
cmpsl
mov
push
jg
pop
mov
jge
mov
xchg
stos
mov
stos
push
dec
lret
and
add
jmp
push
fisttpl
inc
jns
in
imul
adc
in
xor
and
lret
or
push
lret
or
imul
jb
pop
divl
lret
mov
scas
cmp
shll
lret
shrb
lret
shlb
cmp
and
lock
pop
fcmove
push
lcall
cli
sub
mov
movsl
flds
popa
lret
sahf
pop
xchg
cmp
cli
scas
lock
sub
outsb
cld
ds
inc
or
mov
loopne
dec
lret
cld
and
adc
imul
loop
out
add
sbb
mov
aam
ficomps
pop
rcr
dec
into
outsb
addr16
jl
pop
jle
mov
sbb
lret
int
idiv
lret
es
push
adc
lret
xchg
pop
jnp
push
cmp
aaa
or
dec
loopne
mov
lahf
mov
and
pop
sbb
add
cmc
pop
shll
and
imul
mov
dec
xor
push
ret
xlat
jecxz
adc
ficompl
fstpl
jo
pop
and
scas
mov
mov
xor
push
lretw
or
aad
inc
cmp
jb
lea
jge
jle
lret
lret
in
jp
jae
lea
pop
lret
cltd
adc
repnz
lds
cmp
dec
pusha
imul
ljmp
jae
cmp
fcmovbe
pop
imul
pop
jl
push
jo
lret
pop
mov
int
in
ret
lea
xor
sub
std
lret
repz
sbb
adc
pop
mov
loopne
lret
add
clc
aas
fcomps
rclb
sub
f2xm1
lret
xchg
push
sbb
stos
jge
fwait
sarb
cmp
data16
cmp
push
xlat
inc
enter
lahf
lret
outsb
dec
rcrb
xchg
fdivs
aas
sbb
es
mov
fldt
cwtl
adc
pop
lret
aam
shll
fisubl
inc
mov
xor
cmp
pop
jbe
call
pop
inc
mov
cmp
sub
sbb
and
and
push
ljmp
data16
iret
lret
jo
pushf
mov
lds
icebp
push
stos
add
sbb
inc
imull
push
dec
mov
fnsave
fucomip
sub
sbbb
add
pushf
jmp
int
lret
xchg
pop
mov
dec
stos
ljmp
insl
cmp
jbe
faddp
xor
adc
mov
jnp
stos
mov
lock
aam
dec
cmp
les
jle
add
cltd
aad
dec
aam
je
cmp
andl
pushl
mov
rorb
test
lret
adc
pop
fnstenv
cmp
mov
jle
out
sub
aam
cli
test
mov
add
xor
or
stos
imul
push
lret
jbe
adc
in
fidivrl
xor
shlb
lret
xchg
stc
mov
xchg
push
pop
shlb
lret
cmp
lret
ja
pop
push
jmp
ljmp
into
jno
sub
lahf
xor
data16
ljmp
dec
push
push
fsubrs
movsb
jb
xchg
and
fisttps
adc
sub
fsubrl
lock
push
lret
jae,pn
jmp
xor
cli
mov
ss
ljmp
sub
sarb
lret
and
int
push
out
lret
add
dec
lods
mov
sbb
mov
and
xor
jl
cltd
lret
cltd
inc
lock
and
and
cmp
ja
add
cmp
gs
aaa
adc
mov
sbb
adc
lods
mov
insl
lods
mov
es
inc
punpckhwd
fcoms
into
xchg
jecxz
mov
lret
in
push
das
jb
lret
daa
and
icebp
jp
pop
test
in
int
mov
lret
pushf
arpl
or
adc
jmp
int
cmpsl
stc
aaa
lret
mov
lret
xor
add
movsl
icebp
jne
adc
lret
stos
add
daa
sahf
sub
lock
sbb
les
cs
jae
inc
stc
sbb
fnstenv
jno
lea
cmp
fcomps
or
nop
xor
mov
add
dec
jae
insb
icebp
xchg
lret
jbe
cmpsb
inc
pop
adc
flds
lods
mov
shll
xor
sbb
pushf
popa
mov
es
xor
mov
adc
or
mov
jno
adc
clc
popa
scas
imul
mov
pop
fsubrs
cld
lret
ret
and
lods
mov
shlb
jp
and
mov
add
mov
jne
sub
mov
insl
dec
add
push
xlat
cmp
xchg
fadd
cli
inc
push
cmp
xchg
adc
cwtl
mov
and
xchg
mov
lret
push
es
jo
mov
test
xlat
or
daa
std
sbb
out
jno
mov
cli
mov
pop
insl
adc
ficomps
arpl
lret
add
dec
xlat
fstpt
das
mov
in
jb
in
jle
gs
in
inc
fidivl
stc
push
push
sbb
lret
int3
inc
mov
push
popf
out
or
aaa
cltd
lret
jecxz
jg
or
lret
hlt
sbb
lret
push
inc
dec
cmc
test
mov
dec
push
xchg
call
fs
pop
jle
out
stc
cltd
hlt
xlat
push
jg
cmp
xchg
mov
cli
xchg
mov
repnz
and
push
rorb
aaa
mov
ffreep
push
lahf
idivl
lret
xorb
mov
imul
fidivl
imulb
xchg
fidivrs
incb
xchg
stos
addb
xchg
xor
mov
lret
nop
out
xchg
lahf
and
outsb
sub
mov
cmp
popa
mov
pop
bound
leave
adc
mov
call
lock
dec
mov
roll
lahf
arpl
dec
shll
pop
das
leave
push
sarb
cmpl
push
pop
cld
nop
stos
fcomps
sub
shrb
pop
and
aas
jnp
mov
nop
mov
ret
add
mov
scas
std
notl
sub
xlat
lret
xor
mov
mov
mov
mov
mov
pop
fwait
mov
jp,pn
pop
imul
push
inc
mov
lock
lret
or
dec
xor
shlb
pop
mov
jge
data16
sbb
mov
js,pt
sbb
inc
sbb
notb
cmc
icebp
lret
das
inc
add
push
sbb
sbb
push
mov
mov
cmp
jge
repnz
mov
jge
xchg
xchg
das
and
lret
pop
repz
fisubs
cmp
int
int3
sbb
or
inc
fyl2xp1
lret
mov
lock
adc
adc
xchg
mov
aaa
dec
cmpsb
lret
or
imul
aad
push
test
sub
xchg
hlt
pushf
cmp
cltd
cmp
testb
ficompl
dec
pop
xlat
mov
mov
sub
lret
jge
scas
jne
cmp
out
add
push
jp
cltd
fists
mov
lods
push
leave
andl
lcall
sbb
cli
imul
mul
in
sti
xchg
sub
lret
out
pop
adc
mov
sti
subb
pop
cli
xchg
cmc
adc
and
pop
cmp
lret
mov
fldt
lcall
mov
int
lret
rorb
in
or
jae
gs
sbb
scas
icebp
add
orl
inc
dec
std
mov
xor
lret
inc
fdivr
jne
lret
pop
mov
add
xor
cmp
lret
xchg
mov
lret
jp
mov
insb
jnp
lock
loop
outsw
push
or
test
sub
and
in
push
stc
mov
rorb
popw
out
ret
push
lahf
add
or
fidivl
or
dec
ret
push
xchg
sbb
je
sarl
lret
dec
pushl
mul
mov
mov
mov
lret
cltd
dec
add
xchg
xchg
sti
or
adc
dec
push
inc
inc
movsb
rcr
lret
fsubr
pop
enter
xchg
test
lret
rclb
cmp
lret
sub
pop
roll
lret
xchg
lret
mov
xchg
jg
lret
test
inc
or
test
sub
adc
add
out
push
sarb
test
hlt
xor
mov
cmp
dec
push
or
mov
js
es
imul
rolb
xchg
pop
push
in
out
xchg
xchg
adc
pop
cmpsb
push
lret
fs
popa
lret
rcrb
iret
mov
mov
lret
aad
pop
adc
or
popa
mov
cltd
cwtl
lret
stc
lahf
int3
mov
stos
leave
pop
enter
push
cmpsb
mov
xor
sub
lods
add
mov
lret
pop
cli
fwait
das
imul
push
aam
out
adc
sub
inc
push
stos
fwait
iret
movsb
lret
jbe
cs
lret
fnstcw
lret
fs
lret
mov
xchg
lret
mov
mov
test
repnz
sub
pop
in
fcomps
push
inc
icebp
rol
out
lret
jmp
scas
push
adc
sbb
dec
call
lods
push
inc
out
clc
xchg
xlat
lret
dec
into
cmp
sbb
jl
mov
test
inc
lret
mov
or
and
lret
lcall
mov
mov
and
cltd
pop
lret
jnp
dec
imul
mov
arpl
pop
inc
outsl
test
dec
shll
and
lret
jne
push
xchg
push
dec
jge
mov
gs
inc
mov
push
aad
sub
lret
pop
push
jge
mov
lret
jns
sub
pusha
xor
lret
adc
push
push
pop
cmp
arpl
push
lods
pop
lret
lds
pushf
aaa
sbb
lret
jo
hlt
orb
cli
jge
xchg
out
pusha
xor
in
lods
lret
add
data16
lret
xorb
jecxz
nop
shlb
or
and
call
stos
lret
or
clc
add
scas
dec
mov
inc
adc
dec
xchg
outsb
cmp
sub
ret
pop
jo
lods
jl
pop
lret
fldt
sbb
rorl
xlat
cmp
stos
xor
fsubs
lret
or
xchg
jb
cld
lret
pop
rcrl
add
hlt
mov
lret
fistpl
cmp
loop
dec
out
xchg
and
lret
cmp
imul
in
cmc
test
mov
cmp
outsl
pushf
pusha
xlat
adc
sarl
lds
pop
mov
fxch
gs
repnz
pop
int3
jae
xlat
rorb
jmp
cli
popa
test
lds
push
js
mov
test
inc
mov
lods
loopne
mov
cmp
add
cld
cmp
out
call
pop
lret
cli
and
pop
dec
dec
popa
adc
cmc
jnp
lret
xchg
ficomps
push
ror
dec
dec
bound
inc
pop
push
sbb
cmp
fs
fmuls
pop
xor
sbb
lret
pop
lods
icebp
mov
cmp
loop
pop
and
fsubrs
add
mov
mov
mov
rclb
lcall
movsb
cmp
repnz
dec
lret
shll
or
pop
test
lret
push
lds
scas
cmp
call
sbb
mov
enter
jmp
cmp
in
lods
add
adc
pushf
lret
sbb
ret
mov
loope
or
daa
mov
jecxz
out
lret
les
jge
sbb
jno
sbb
lret
dec
idivl
lret
cs
or
fistpl
lret
adc
xor
loope
lret
ret
sub
xchg
lret
cmp
jge
xchg
lret
dec
mov
out
icebp
into
xlat
sbb
mov
cmp
aas
std
mov
cmc
lret
in
insb
lret
push
pop
push
mov
les
jl
dec
xchg
pop
jno
imulb
adc
xor
imul
inc
lret
fstpl
push
sbb
notb
xchg
das
cmp
xchg
push
xchg
aaa
xchg
lret
fimull
cmp
mov
loop
scas
aad
jge
cli
ljmp
push
out
andb
loop
pop
fdivrl
loopne
or
mov
aam
lret
orb
into
jns
cmp
inc
cmpsl
test
mov
mov
jmp
push
pop
push
xchg
lret
rcrb
xor
mov
test
xchg
popf
or
bound
sar
jg,pt
xchg
imul
jl
ret
stos
pop
adc
adc
aaa
mov
jle
mov
leave
stos
inc
mov
xlat
pusha
stc
inc
lret
loop
fdivrl
pop
jnp
ljmp
lret
jae
mov
call
lea
and
mov
lret
inc
dec
test
push
shlb
sub
lret
pop
xchg
nop
jbe
mov
xchg
xlat
fdivs
or
inc
mov
adc
and
lock
ror
test
out
insb
lret
shll
fcomps
ljmp
rolb
inc
ljmp
stos
enter
into
imul
push
jmp
cmpsb
pushf
test
fcompl
xor
dec
sbb
sahf
cltd
stos
sbb
out
xor
shlb
adc
into
daa
insl
lret
mov
or
ret
stc
dec
add
cwtl
jmp
ret
shlb
addr16
sub
dec
dec
outsb
mov
dec
je
mov
lea
stc
push
cmpsb
jns
and
pop
lret
stos
imul
adc
lock
out
lret
int3
adc
jp
pushf
lret
cltd
insb
es
cmpsb
pop
js
test
mov
mov
imulb
add
xchg
fcmove
dec
out
adc
sbb
jge
cwtl
mov
aam
pop
cmpsl
pop
mov
cmp
popa
inc
xor
shl
mov
pop
fnstenv
cmpb
adc
movsb
sub
xchg
stos
in
jb
fmuls
lret
cmpsb
mov
xchg
sahf
addr16
mov
xor
jb
lds
lret
fistpll
lret
push
xor
sub
pop
fidivl
es
xchg
pop
push
dec
sub
clc
xchg
push
popf
push
sti
sbb
mov
insb
mov
lret
stos
out
mov
je
and
jae
cmp
or
inc
in
pop
add
rcr
and
lret
ds
sbb
test
lret
mov
pushf
mov
outsb
sub
cltd
in
lret
addl
jb
jbe
xchg
lret
stos
pop
loope
addr16
cmp
sbb
daa
js
cwtl
lods
dec
jp
sub
mov
adc
lret
into
stos
xchg
and
mov
and
addl
lret
dec
ja
lret
lret
add
stos
and
leave
stos
pop
shrb
sbb
mov
aam
adc
test
int
lret
adc
sub
dec
ret
std
lret
pusha
popf
push
outsl
xchg
mov
jno
inc
sub
push
xchg
pop
xor
inc
movsb
inc
adc
or
add
popf
and
pop
adc
mov
push
sub
aam
xchg
daa
pop
dec
fdivrs
jns
sub
test
push
out
dec
jno
cli
ljmp
inc
rcl
dec
mov
mov
mov
and
pop
cmp
outsb
gs
lods
pop
push
mov
xor
mov
adc
jle
jnp
push
dec
push
in
mov
aad
inc
and
or
pop
lret
rcll
push
jb
mov
cli
lea
mov
sub
jo
add
test
lret
pop
dec
movsb
jecxz
sbb
dec
lret
adc
popf
insb
mov
fwait
popa
repnz
sub
inc
or
ja
and
aaa
pop
sub
mov
insl
icebp
scas
cli
aaa
addr16
test
shlb
push
lret
push
xor
ror
cmpsb
std
in
data16
cmp
mov
adc
jge
dec
sub
inc
lret
sbb
or
dec
dec
les
jge
lret
stos
dec
jbe
ja
lret
lods
pop
xchg
mov
mov
sarb
lret
xchg
cmpsb
mov
jmp
cli
je
push
cmp
add
cmc
xlat
hlt
add
lret
mov
xor
das
lret
movsl
sub
mov
lret
add
xchg
lret
xchg
jmp
lret
inc
in
adcl
sbb
incb
hlt
xchg
push
popf
clc
fwait
dec
test
xchg
jge
rol
and
mov
mov
arpl
lret
xor
std
pop
test
fwait
sub
xlat
and
push
mov
cmp
es
lock
ljmp
xor
jne
pushf
pop
push
fcmovnbe
sbb
movsl
push
or
das
jmp
or
fwait
and
ds
movsb
xor
and
lret
push
pop
xchg
fcmovnb
subb
sbb
sarb
and
in
loop
lea
stc
fmuls
lret
sarb
mov
neg
mov
cmp
rorl
ja
aam
mov
lret
fcmovnb
out
push
sbb
pushf
push
xor
sub
lods
icebp
adc
addr16
pop
mov
mov
add
mov
in
sbb
in
xchg
and
jns
cli
lret
lcall
or
pop
lret
cmpsl
pop
cs
lret
cltd
add
stos
pusha
lods
fsubs
cmp
mov
xchg
jb
jl
mov
jg
lret
aaa
ss
sti
loopne
pop
pop
jae
cmp
cmc
sarb
cltd
push
lret
pop
push
lods
add
mov
fs
lods
add
ret
sti
lret
add
push
inc
push
and
icebp
lea
adc
shrb
mov
popa
fimull
loop
cltd
sbb
js
fidivrl
push
adc
decl
loopne
cmp
push
inc
das
xchg
mov
lret
cli
arpl
jge
cmp
jle
mov
cmp
and
push
gs
js
inc
cmp
push
imul
popa
pop
inc
jmp
stc
xchg
push
aam
lahf
addr16
xchg
push
xchg
lret
std
aad
out
sub
lret
insb
rol
popa
cmpsb
jo
pop
dec
cmp
lret
lods
pop
sub
lret
rol
push
mulb
mov
or
add
cwtl
stos
fcoms
repnz
jo
adc
mov
xchg
lret
jmp
imul
pop
shr
je
sub
jne
sub
lret
mov
push
lret
xchg
rcrb
cld
nop
sbb
mov
lret
out
sub
outsl
fs
fimull
mov
jmp
call
rorb
lret
and
ficoms
sub
push
pop
pop
je
lret
sbb
stos
push
xorb
add
cltd
and
ja
jl
mov
pop
stos
rcrl
test
xor
mov
or
mov
fistpll
lret
mov
add
add
addb
jne
jae
pop
mov
mov
lret
arpl
fsub
cmp
test
dec
popa
pop
lret
cwtl
into
loopne
xchg
fiaddl
jp
cltd
les
out
std
cmpsl
push
lret
xor
bound
test
aaa
add
pop
dec
or
cmp
adc
mov
lock
addr16
aad
mov
shll
das
sub
mov
adc
addl
jb
push
xorb
fimull
das
mull
mov
shl
lret
std
lret
cmp
inc
cld
rorb
lcall
mov
jns
xchg
rcrb
mov
inc
dec
mov
sti
fcompl
cwtl
lods
loope
ljmp
mov
cli
das
mov
xchg
add
fcoms
cltd
add
dec
shlb
mov
jecxz
push
push
repz
push
insl
daa
shlb
sub
je
int
inc
cltd
or
pop
mov
pop
lret
adc
fidivs
lret
aaa
gs
ret
push
lret
mov
dec
lret
loop
sbb
shrl
pop
cmpsl
add
and
add
dec
sbb
test
xchg
inc
repnz
shlb
add
lret
pop
mov
ror
lret
pusha
and
pop
add
jbe
adc
aad
cli
mov
cwtl
push
dec
fsubrs
jmp
rolb
das
jns
lea
sarb
out
into
xchg
loop
lret
int
out
or
jb
cmp
js
mov
aaa
cli
fldln2
dec
aad
mov
cwtl
dec
lret
add
lret
sar
push
dec
gs
mov
jmp
fs
jns
cmp
or
outsb
out
call
mov
jo
jns
stos
ja
cmc
lret
loop
push
jmp
or
iret
test
jo
lret
dec
stc
ret
imul
clc
dec
sbb
insl
push
lret
pop
ret
cmpl
cmp
add
jge
mov
inc
in
arpl
push
lock
jecxz
or
loop
inc
mov
jge
ficoml
fwait
imul
pop
mov
adc
pop
inc
pop
inc
xor
or
in
xchg
daa
mov
or
fldl
and
lea
xor
lret
cmp
mov
int
clc
lret
cmp
outsl
arpl
repz
sti
adcb
or
sub
lret
test
pop
cs
lret
xchg
cmp
lret
pushf
mov
shlb
mov
cli
movsb
dec
lods
cmpsl
out
dec
sub
popf
jmp
mov
pop
xchg
adc
add
xchg
sbb
mov
rcll
xor
xchg
mov
aas
lods
test
sar
mov
cltd
loop
test
pop
jl
pop
ja
fs
lock
lret
loop
lret
mov
cli
inc
sbb
pop
xlat
mov
mov
dec
nop
fwait
lret
pop
pop
jno
enter
xchg
xchg
mov
lods
cs
lret
cmpsl
jne
xor
mov
push
inc
jmp
mov
in
mov
lret
sbb
push
lret
outsb
in
in
push
mov
cmpsb
dec
cltd
jmp
call
push
dec
ds
stos
fidivrl
mov
xchg
shl
dec
lret
xor
lret
outsl
sub
sti
dec
mov
out
mov
out
fdivl
mov
or
enter
xor
mov
sbb
inc
cmp
addl
push
inc
jg
inc
push
cmp
into
sarl
mov
sbb
xchg
out
rorl
xor
arpl
popf
rcr
out
enter
mov
aad
or
cmc
lea
jmp
or
cmp
jo
aam
mov
push
lret
push
popa
in
test
ss
push
push
icebp
into
stc
jo
sbb
popa
lret
lret
cld
imul
jg
pop
mov
dec
xor
jge
mov
mov
jle
push
popf
fnsave
xchg
cmpsb
fwait
or
int
and
lret
dec
data16
mov
lret
push
add
jnp
inc
in
jno
mov
es
mov
decl
mov
mov
in
int3
sub
mov
inc
add
fs
lret
dec
and
repnz
lret
stos
adc
pop
lds
lret
xor
out
mov
imul
popl
jnp
ss
mov
sub
das
cmp
inc
or
stc
push
lret
mov
fcmovb
push
das
lret
daa
push
mov
hlt
push
icebp
cmp
mov
dec
add
pop
sbb
push
sarb
add
mov
cltd
xchg
mov
jmp
or
adc
dec
fdivrs
stos
sbb
sbb
and
push
xchg
lret
dec
xor
arpl
lret
mov
mov
sub
or
and
mov
push
lret
sarb
xor
and
insl
repnz
xchg
hlt
fwait
jl
dec
ficoms
mov
fimull
pop
inc
int
cmp
jnp
lret
inc
loope
in
pop
sbb
mov
jg
lret
or
xchg
jnp
lret
jmp
xchg
bound
mov
hlt
sahf
push
lret
es
lret
dec
sarl
ds
fisubl
jbe
clc
lret
sbb
rclb
xor
ficompl
bound
outsb
adc
movsb
sbb
adc
testl
lret
lock
jo
sbb
fldcw
sbb
outsb
lret
addr16
xchg
xchg
xchg
lret
jns
dec
mov
lret
pop
mov
sbb
push
inc
pusha
or
lret
pop
shlb
cwtl
jae
lea
es
in
rclb
call
shlb
lret
pop
cmpsb
lret
sahf
inc
shlb
inc
or
dec
shlb
xchg
push
mov
push
xchg
ja
sub
fsubr
hlt
cmp
cmp
popa
adc
je
pop
mov
scas
fnsave
mov
lret
jge
imul
push
lret
insl
pop
sub
jns
std
cmp
lret
inc
mov
inc
fcmove
in
cmp
mov
repz
fdivr
jb
cmp
xchg
mov
in
sub
lret
test
lret
mov
xor
addl
aaa
jle
arpl
fcmovb
dec
lret
adc
mov
scas
xor
fsub
cld
mov
aas
mov
cmp
or
lret
cltd
adc
xchg
jmp
cli
ror
mov
adc
cmp
insb
adc
lret
push
fldcw
repnz
stos
mov
pop
mov
stos
rolb
lret
movsl
push
cmpl
fwait
push
stos
fs
int3
push
cmp
jns
or
push
mov
ret
into
out
subb
jne
idivb
call
test
lret
jbe
hlt
out
in
mov
adc
vandnpd
jb
adc
mov
dec
cwtl
push
ljmp
jge
loope
lret
scas
jmp
cmp
cmp
xchg
jb
jle
int
pop
cmp
jmp
mov
lret
and
push
shll
loopne
ret
cmpb
lret
std
minps
in
lret
loop
pop
arpl
icebp
mulb
loopne
sbb
mov
lret
pop
push
les
add
lock
pop
sub
pop
xchg
dec
cmpb
add
push
dec
shll
test
movsl
and
movsb
rcr
xor
push
into
inc
jnp
cwtl
mov
xchg
push
jb
mov
rolb
jl
add
xor
incb
test
jb
mov
sub
inc
push
rcll
arpl
test
sbb
lret
jo
or
pextrw
push
fmuls
mov
ror
and
dec
test
xchg
loop
jbe
mov
sbb
sbb
dec
fiaddl
mov
dec
decl
push
mov
inc
adc
xchg
xchg
lret
adc
sti
ret
ror
push
aas
js
lds
lret
sbb
lret
cmpsl
shlb
jne
lret
cmpb
inc
mov
or
lret
mov
dec
or
and
mov
clc
shrb
lret
imul
cwtl
mov
cmp
xchg
push
mov
sbb
pop
xor
shrb
cmc
mov
jae
adc
daa
mov
test
shr
fcoml
in
lret
jge
in
das
sub
mov
inc
fxch
cmpsb
fmulp
pusha
mov
push
lret
mov
imul
popf
leave
dec
outsl
loopne
insl
cli
lcall
xchg
mov
sub
adc
shl
cmp
push
mov
or
adc
sahf
lret
xchg
test
cmp
icebp
or
jne
or
pop
xchg
imul
or
les
shll
jmp
pop
pop
out
dec
cmp
aaa
push
jo
or
cmpl
adc
push
mov
inc
add
sbb
mov
jo
es
inc
jle
inc
lahf
jno
pop
mov
cmc
xchg
mov
punpcklwd
stos
push
pop
jl
push
out
jg
sub
cs
ja
xchg
lret
and
nop
or
cmp
fcoml
xlat
movsl
lret
in
outsb
leave
mov
and
mov
les
ret
jmp
jno
sbb
subl
xor
cmp
add
out
and
rclb
lret
mov
loopne
fistl
pop
cmp
xor
pop
push
imul
mov
jno
lret
es
add
pop
lret
sbb
jb
sbb
lret
inc
lea
mov
ljmp
mov
dec
filds
and
cli
lahf
notl
sbb
in
mov
xchg
ss
pushf
and
dec
cmp
lahf
xor
roll
xchg
adc
xchg
cmpsl
sub
sub
lret
stos
adc
enter
mov
test
push
sub
dec
mov
dec
sarb
subl
mov
cmc
xchg
xchg
dec
loop
into
lret
shrb
pop
xor
sub
push
inc
movsl
mov
stos
scas
lock
stos
sbb
sbb
rcl
sti
xchg
pop
fidivrl
loop
sbb
insb
mov
sbb
cmp
mov
pop
cmp
adc
inc
sbb
and
fdivl
push
fcmove
jg
jbe
inc
dec
xlat
jno
lret
sub
xchg
outsl
mul
and
les
pop
lret
xor
movsl
aam
lret
sbb
aaa
and
lret
pop
ret
xchg
je
in
repz
cmc
lret
dec
cs
dec
bnd
inc
xorl
popf
lds
shlb
lods
lret
pop
repnz
mov
push
out
aas
test
xor
pop
popa
mov
lret
mov
shlb
lods
push
into
rolb
adc
ficompl
add
jnp
movsb
jne
out
push
inc
mov
addl
mov
sbb
push
aas
xor
test
mov
mov
add
popa
js
xchg
and
testl
into
push
lods
adc
adc
cmp
test
push
fs
aad
popf
sub
shrb
imul
clc
sahf
mov
pop
sub
or
orb
pop
cmp
lret
adc
and
fst
dec
sbb
out
and
jg
loopne
jmp
lret
push
insl
sbb
ss
addb
and
jle
test
fldenv
loope
and
js
or
push
xchg
cmp
mov
ds
cld
inc
mov
mov
adc
and
out
aam
push
lret
leave
add
cmp
sub
fst
dec
or
insl
xchg
push
mov
fsub
xchg
shll
jno
lret
sti
inc
mov
loope
mov
adc
outsb
int
cmp
dec
dec
inc
or
sbb
xchg
ljmp
or
mov
mov
sub
mov
xchg
and
mov
or
adc
ljmp
gs
repnz
jmp
int
fildll
lock
lret
js
mov
call
shlb
mov
lret
into
orb
inc
pop
lds
cwtl
lahf
lret
mov
pop
push
je
cli
adc
repz
aam
mov
shlb
dec
fsubrs
lret
mov
in
test
leave
push
adc
sbb
ja
leave
int
dec
mov
ss
xchg
mov
cmc
push
pop
into
lret
mov
jne
sbb
xchg
cmp
mov
rol
mov
jge
jb
adc
das
ret
lcall
add
jae
lret
daa
out
cwtl
subb
xor
xchg
test
pushf
or
xchg
adc
insb
hlt
out
repz
out
sbb
test
mov
out
les
lret
pop
cmp
and
mov
xchg
sbb
ljmp
inc
pop
mov
cwtl
dec
fdivrs
jge
dec
inc
insl
xchg
ljmp
jnp
sbb
into
movsb
mov
scas
sar
aam
mov
aad
jge
jno
popl
jg
test
out
in
sbb
xor
cmp
adc
sti
cmp
imul
pusha
dec
mov
lods
pop
jo
xchg
lret
mov
popa
cmp
lret
pop
or
cmp
pop
in
push
mov
mov
rcl
inc
std
push
lods
cwtl
cs
aas
cmpsl
push
push
sbb
xor
jmp
xchg
loopne
push
lret
lcall
addl
es
into
jb
jns
in
xor
sbb
inc
js
dec
or
mov
mov
dec
add
adc
std
sbb
push
fwait
push
test
stos
add
ss
call
fmul
pop
add
xor
test
mov
fcomi
fisubl
mov
mov
dec
lret
call
mov
sub
lret
std
imul
test
lret
mov
daa
sti
les
pop
xor
fisttpl
jmp
sub
push
icebp
mov
loope
stos
popa
filds
iret
lret
cmp
inc
xlat
nop
lret
out
vpshlq
mov
jmp
or
add
fdivl
shl
mov
cmpsb
mov
mov
fstl
mov
lret
or
jmp
dec
mov
add
xchg
xchg
pop
adc
lret
pop
or
lret
movsb
cltd
xor
fimuls
push
into
js
cmp
mov
mov
call
pop
ficomps
xchg
gs
shlb
mov
or
fcmove
pop
push
pop
dec
xchg
mov
add
jle
insl
aas
aam
cld
into
jne
fidivrl
sub
popf
loop
fs
inc
popf
into
loop
xlat
inc
lret
adc
and
mov
nop
insb
mov
mov
repnz
ret
es
cli
pop
xor
fsts
or
icebp
aas
add
mov
call
int
into
lret
push
test
lret
xchg
xlat
push
cmp
cltd
lods
or
pop
lret
or
inc
test
or
jle
js
mov
lret
and
mov
mov
shrb
lea
lret
iret
sahf
cltd
pop
test
adc
rol
xorl
scas
popa
rolb
xorl
lods
rcr
in
lret
inc
test
mov
push
xor
sub
mov
ret
cmc
fimull
test
and
ret
dec
lret
incl
je
lret
rcll
push
jg
out
cmp
jnp
xor
lret
add
cltd
lods
jecxz
call
sti
mov
cmp
jge
mov
or
std
push
cmp
shlb
idivl
fcmovb
sarl
mov
lahf
lds
shrb
ud1
sbb
lret
jo
subl
ja
in
lret
lahf
pop
into
insl
les
cmp
xchg
push
and
shlb
or
xor
fmul
in
add
mov
jns
inc
dec
test
adc
push
shll
and
fiadds
stc
ret
xchg
and
jge
xor
lret
inc
cltd
arpl
sub
cli
imulb
lret
mov
rclb
les
lret
jns
test
out
cmpsb
xchg
insl
lret
adc
add
mov
iret
and
jnp
shl
lret
pop
mov
dec
lret
sub
inc
imul
lret
rcr
pop
xor
addl
lret
or
mov
pop
ror
mov
mov
sbb
jne
cmp
in
lret
and
jp
leave
add
repnz
popf
pushf
dec
jbe
lret
insl
in
jecxz
pop
cltd
les
loop
mov
lret
jo
or
addr16
leave
fnstenv
ret
aam
ss
lret
jle
aad
pushf
stc
cli
xlat
outsb
mov
push
repnz
and
dec
cli
inc
sar
in
sub
pop
push
lret
fistpl
hlt
pop
inc
lret
jge
sarl
std
cmp
out
sbb
aam
push
lcallw
stos
scas
ret
or
and
xchg
mov
mov
loopne
aaa
into
arpl
insb
lret
mov
cld
sti
jle
mov
lret
xchg
cmp
sub
cmc
mov
loopne,pn
negl
mov
aad
sbb
js
sbb
push
or
mov
lret
pop
hlt
add
mov
lds
mov
lret
std
sbb
sbb
mov
repnz
and
push
out
jmp
fcompl
testl
xor
mov
fcmovnu
clc
lret
lcall
lock
cmp
add
loop
pop
cli
sub
fsubrs
aad
sub
cmp
sbb
jecxz
xor
lahf
and
aas
cli
in
stos
sbb
xor
aad
sti
stos
push
push
int3
lret
and
out
fidivrl
jmp
push
xchg
pop
pop
mov
enter
add
cmpl
andl
mov
lret
shrl
enter
dec
sbb
lret
je
jle
mov
rcrb
imul
sub
push
mov
cmp
mov
stc
hlt
mov
adc
loope
pop
shrb
pop
xchg
adc
aam
jns
lret
mov
push
dec
adc
test
push
cmpsb
dec
add
scas
jbe
lret
push
jo
jno
pushf
enter
push
std
xor
lret
subl
xlat
lret
mov
push
mov
mov
fsts
cmpsb
adc
or
mov
fs
ja
lret
cmp
add
mov
cmp
jb
movsb
rorb
dec
lret
int
add
cwtl
mov
rorl
jmp
pop
xchg
repnz
popa
xor
push
enter
clc
setnp
dec
nop
lret
fnstenv
lret
test
outsl
les
pop
ror
repz
ss
pusha
inc
out
sub
xchg
lret
jl
dec
jno
cs
pop
push
jge
xchg
pop
bound
jns
shrl
rolb
sbb
jno
lret
test
xor
add
repz
fcmovb
repnz
or
dec
aam
jg
xchg
inc
lret
hlt
mov
pop
pop
into
fwait
stos
daa
icebp
rorb
mov
outsl
sarl
cmp
cmc
ss
jnp
std
xchg
cli
stc
or
in
xchg
shlb
fimull
jmp
lret
xor
pop
ficoml
push
in
fnstcw
and
and
inc
xor
add
fs
test
mov
lret
icebp
out
push
mov
jecxz
iret
inc
adc
stos
inc
fdivs
mov
movsb
pop
jo
mov
lods
lret
rcll
inc
aam
inc
jle
mov
pop
sti
add
cmp
andl
cmpsl
lret
cs
into
mov
xor
aas
ficompl
jne
dec
inc
lret
jl,pt
in
mov
or
leave
cltd
out
jns
hlt
or
xor
lret
cmp
dec
lret
mov
mov
iret
lret
in
loope
std
fildll
aam
ret
dec
scas
lret
mov
fs
mov
fstl
std
lret
push
xchg
or
lret
hlt
jmp
mov
stos
xchg
inc
cmp
jns
clc
pop
xorl
arpl
fwait
inc
lret
cmp
mov
or
test
xor
stc
lds
dec
iret
inc
mov
sub
inc
movsl
sbb
lret
jae
jne
pop
out
lret
jbe
mov
hlt
cli
ljmp
leave
out
jmp
cli
repz
in
or
xor
notl
fwait
incb
sub
sahf
inc
xor
imul
aad
out
xor
xchg
cmpsl
mov
xor
or
xchg
sahf
push
jae
push
sub
clc
mov
pop
ss
push
and
addb
sub
mov
int3
inc
or
ret
lret
dec
fsubr
push
dec
cmc
cmp
xchg
adc
jmp
je
ret
jecxz
jge
cmp
lods
ror
mov
sub
ret
outsb
mov
cmp
or
movsb
sbb
push
lret
inc
pusha
push
scas
popf
xchg
lret
dec
lods
ficompl
out
les
xor
imul
mov
pushf
mov
test
jle
jns
cli
stos
and
popl
roll
int3
add
pop
leave
insl
jns
mov
mov
addr16
mov
push
add
in
mov
fmulp
orb
mov
stos
dec
test
pop
xor
mov
or
jl
pop
lret
sub
lret
int3
pop
pop
rcr
adc
addr16
xor
adc
outsl
and
iret
out
cmp
inc
fdivs
enter
aas
fmull
xchg
fildl
lret
cmp
out
and
out
mov
jl
lds
lahf
lret
mov
in
mov
lret
in
andl
sahf
or
mov
std
sub
mov
and
add
pusha
je
push
fldcw
pop
js
mov
leave
cltd
adcb
inc
xchg
mov
jecxz,pt
dec
enter
adc
js
pop
pop
ret
clc
test
mov
dec
dec
lret
rcrl
dec
lret
pop
dec
pop
andb
dec
push
loop
cli
std
pop
sbb
pop
rcll
sub
sti
adc
xchg
stos
or
push
cmp
xchg
push
lock
lret
xor
sbb
xchg
xchg
lret
inc
sar
fidivs
xchg
inc
aam
rorb
cmp
xor
cmp
fdivs
stos
inc
lret
insb
imul
lods
lret
in
enter
mov
xchg
scas
jle
stc
cmp
lret
loope
insl
xorl
lret
dec
cmp
jp
sub
inc
stos
cli
adc
je
sbb
xchg
cmp
sbb
aam
clc
out
mov
jns
orl
mov
xor
xchg
lret
mov
aaa
lret
dec
daa
cmp
or
pop
cwtl
xchg
lret
in
mov
gs
sub
push
lret
shrl
dec
es
mov
loop
jb
push
or
lret
xchg
icebp
pop
push
xlat
lret
jno
pop
pop
mov
cmp
insb
dec
sub
fcomps
lods
and
sub
jns
lret
pop
aam
adc
xor
gs
fcmovbe
jle
sbb
add
into
mov
xor
add
lret
lahf
imul
mov
ja
pop
sarb
pop
fidivl
mov
pop
sbb
or
fsubrs
iret
mov
push
push
loop
orl
pop
inc
push
lret
ja
jge
cmp
xor
sahf
pop
movsl
xchg
inc
jmp
adc
int
loopne
mov
dec
inc
lret
push
in
shlb
xchg
mov
cmp
sub
inc
mov
mov
adc
inc
and
cmc
rol
lret
fdivl
adc
mov
mov
vunpcklps
xlat
lret
lea
and
mov
cwtl
xlat
nop
int
cmp
sub
or
lret
jle
in
pop
xchg
lds
inc
cmp
lret
dec
cli
and
jmp
inc
dec
adc
lret
add
call
je
ret
cmp
les
pop
sub
inc
lret
mov
pop
lret
scas
std
push
repz
out
or
lret
mov
addr16
into
pop
mov
repz
jl
aaa
lret
out
sub
cmp
mov
adc
fbld
cmp
cltd
cwtl
imul
push
mov
push
jmp
cmpsl
push
lret
out
dec
mov
xchg
lret
std
dec
jmp
xchg
stos
adc
lret
push
std
test
shrb
lret
rcll
add
mov
lret
sbb
xor
cmpsb
adc
out
pop
add
xchg
cltd
pusha
sub
mov
bound
out
pop
clc
lret
cmp
mov
jnp
xchg
int
pushf
lret
jle
push
rolb
sarl
push
sub
jae
lret
jo
xor
dec
sahf
mov
stc
cmp
mov
test
inc
in
imul
adc
xor
adc
cmp
dec
pop
pop
shlb
cli
pop
mov
push
pop
into
enter
jmp
mov
stos
fisttpl
add
loopne
in
lret
or
xchg
mov
cmp
xor
ja
sarl
lret
mov
push
lret
mov
push
lret
stos
fimuls
les
lret
jns
out
mov
rclb
push
adc
push
sbb
jbe
cmp
int3
dec
xor
lret
dec
xchg
dec
sub
push
lret
pop
cwtl
arpl
sub
repz
jns
cltd
in
pop
jge
add
dec
scas
bound
leave
sar
add
lods
fisubs
lret
jo
cltd
iret
inc
push
push
je
sahf
dec
lret
mov
fcomi
icebp
pop
lret
jp
imul
jg
adc
sbbl
cltd
cli
jmp
mov
imul
pusha
cmp
mov
cmp
pushf
shrb
lret
sbb
sub
popa
scas
and
xchg
lret
jmp
dec
sub
adc
loopne
stos
xor
fcoms
inc
es
adcb
mov
dec
loop
push
repz
inc
lret
and
mov
sbb
ljmp
sar
mov
lods
hlt
stos
cmp
sub
into
js
aas
mov
adc
sbb
idivb
out
mov
and
loope
jmp
out
addl
aaa
addr16
mov
mov
fimuls
scas
sbb
mull
inc
push
lret
xchg
xchg
std
jns
and
inc
and
orl
ret
lret
mov
iret
pop
jge
mov
lret
jp
js
push
in
and
jae
pop
push
aam
loopne
std
cwtl
push
faddp
fsubs
dec
xor
lret
or
cli
loope
outsl
fmuls
dec
dec
pop
lret
xor
inc
jae
ficompl
push
xor
mov
in
in
loopne
rcr
lret
dec
cmp
sbbl
outsl
fnsave
xchg
ja
pop
mov
push
fiaddl
jmp
lret
jb
or
jae
mov
fiaddl
and
loop
and
aaa
inc
popf
jg
or
jns
leave
xor
daa
cmp
test
mov
lret
mov
cmpsb
add
sbb
inc
lret
shrl
lret
shll
mov
dec
repnz
test
adc
fisubl
cmpb
or
add
pop
add
sbbl
int3
fcmove
xor
or
cmpsl
cwtl
xor
imul
ds
mov
dec
or
lea
lret
movsb
xchg
jmp
mov
mov
xor
fdivrs
loopne
cmp
data16
nop
xchg
and
or
cmp
xchg
mov
mov
lret
or
xor
sbbb
xchg
jae
movsb
and
rclb
lret
lcall
mov
rorl
mov
ds
fadds
lds
or
stc
jns
and
fld
sti
cmc
xchg
jno
xchg
lret
xchg
loope
sbb
icebp
xor
xchg
fs
lock
jns
lret
sbb
aaa
and
out
inc
jp
adc
sbb
lret
ljmp
int3
push
jb
into
scas
push
mov
jge
andb
sub
push
sti
outsl
lcall
mov
imulb
test
inc
cmpsl
in
lret
adc
push
mov
pop
cmp
leave
mov
xchg
inc
dec
popf
test
lret
cmp
jmp
les
pop
out
and
int3
lcall
lret
aad
cmp
lods
in
lret
subb
cmpb
cmp
push
cmpsb
or
lret
fwait
aad
mov
das
cmpsl
outsb
out
dec
cmpb
mov
rep
xlat
fisttpll
fwait
out
test
fimull
inc
dec
and
ror
repnz
lret
mov
mov
enter
ja
stc
mov
dec
sbb
sbb
add
mov
in
mov
mov
lcall
xlat
sbb
mov
xchg
dec
shlb
adc
pop
adc
push
cwtl
sbb
iret
sbb
mov
loop
lret
movsb
pop
push
mov
lret
in
shll
imul
sub
out
xor
and
jle
add
mov
jno
push
mov
inc
mov
aam
xor
sbb
add
inc
xor
cmp
inc
andb
lret
xchg
pusha
imul
lds
ljmp
cmp
cwtl
in
aam
lret
into
mov
mov
into
cmp
lret
cwtl
adc
lret
and
pop
ljmp
cmpl
lret
test
sbb
pushf
loope
ret
pop
lea
and
push
out
ljmp
lods
movsb
jnp
mov
mov
lret
xchg
or
pop
sbb
jo
mov
fisttps
cmp
fs
dec
daa
and
into
lret
shlb
mov
or
cmp
lret
push
enter
and
xchg
mov
dec
hlt
lret
ror
dec
fdivl
lret
and
inc
pop
aaa
loope
sub
dec
out
mov
mov
or
jnp
dec
adc
or
mov
lret
xchg
fcomps
sub
mov
adc
mov
mul
mov
lret
mov
stos
mov
mov
jl
lret
sbb
fwait
pop
mov
clc
adc
fcmove
mov
icebp
mov
daa
cmpsl
xor
cmp
pop
jmpw
lret
scas
aas
cmp
leave
scas
add
jbe
out
or
fldl
pop
mov
shlb
jp
lret
xchg
in
inc
scas
stc
sti
lret
fdivl
lret
idiv
in
mov
xchg
inc
push
mov
cmp
sarb
pop
pop
add
cmp
push
dec
arpl
push
lret
imull
pop
pop
popa
lret
or
xchg
cli
inc
push
imul
cmp
cmp
push
ss
fxch
xorb
inc
icebp
mov
lret
mov
or
aad
stos
popa
insl
loope
add
or
push
and
scas
mov
jg
int3
dec
iret
pop
push
adc
cmp
aaa
mov
icebp
jo
push
ds
lret
aam
loope
sbb
pop
xlat
mov
push
cs
or
sbb
lret
push
mov
into
icebp
sbb
and
ja
mov
pop
inc
lret
stos
mov
in
or
push
pop
das
leave
daa
push
lret
es
lret
or
push
in
fmul
pop
loopne
mov
shl
ss
mov
inc
and
ficompl
lock
mov
lret
pop
cmc
jnp
inc
pop
lods
adc
lret
ljmp
in
cli
test
out
fidivrl
fbstp
jmp
lret
dec
aas
cld
std
ljmp
sbb
nop
xor
lret
fisubs
repnz
ret
outsb
lret
mov
pop
ljmp
fcomp
ss
mov
lret
sbb
pop
xor
fs
xchg
into
lret
bound
cmp
mov
insl
xchg
sbb
cltd
xor
push
pop
pop
cmpsl
inc
sub
mov
data16
jno
in
lret
xchg
jle
bound
lods
push
cmp
aas
inc
mov
test
lret
xor
loop
pop
sbb
jae
xchg
mov
rolb
outsb
xchg
sub
xlat
aad
add
mov
test
sub
mov
ss
pop
aam
jp
cmp
cmp
std
dec
xlat
inc
repnz
ljmp
into
push
xor
lret
jo
pop
cmp
mov
or
dec
and
leave
inc
cmp
fs
pop
jbe
pop
push
mov
stos
pop
in
push
inc
scas
add
jge
push
dec
add
sub
int3
into
ret
adc
jge
sbb
push
mov
and
pop
dec
lret
mov
xor
or
xchg
insl
popf
jmp
dec
in
lret
sbb
push
in
sar
sbb
dec
push
ror
sbb
dec
lret
mov
adc
sbb
cmp
std
cltd
stos
xchg
stos
jg
or
xor
lcall
aad
shlb
jmp
std
push
mov
cmp
insl
aam
idivb
daa
test
nop
jnp
lret
xchg
dec
lods
cmp
xchg
push
jno
jne
pop
sti
lret
faddl
lret
in
insb
sub
mov
outsb
fwait
es
sarl
sub
fmulp
push
out
out
ret
xor
aad
jns
mov
aam
test
call
dec
imul
push
push
in
push
sarb
sbb
push
sbb
out
std
sub
push
xor
cwtl
iret
cli
pop
add
or
push
pusha
das
cmp
mov
fnsave
lret
inc
ljmp
add
or
pop
loopne
out
xor
add
inc
pop
cmp
push
sbb
push
out
insl
icebp
lods
adc
jo
ja
aam
adc
rcll
ffreep
mov
pop
lahf
lret
aad
outsl
xchg
and
sbb
mov
xor
lret
mov
adc
push
into
pop
shrl
popa
mov
sbb
mov
aam
mov
hlt
jbe
mov
jle
and
loopne
repnz
js
loope
lret
jmp
fcmovu
test
into
cmpsl
addb
hlt
sub
lcall
pop
xchg
lret
filds
pushf
xor
lret
add
mov
rolb
jo
stos
sbb
mov
sub
lods
xlat
outsb
lock
aas
mov
loope
jge
scas
je
jle
ds
ja
xor
pop
rorb
push
popa
mov
pop
out
sbb
or
push
lret
mov
or
or
fimull
cmp
xlat
call
insl
test
out
mov
push
ja
mov
xor
lret
test
pop
insb
lret
sub
inc
jb
fimull
fnsave
int
cli
xchg
jmp
xor
loopne
mov
mov
into
test
xchg
lret
dec
sbbb
and
jg
loopne
popf
xchg
push
andl
sub
and
roll
orl
jno
cli
cmpsb
sub
pushf
cmpsl
pop
fwait
jg
int
adc
push
lret
sahf
push
movsb
xchg
push
add
mov
mov
push
xor
lahf
dec
test
fmuls
lret
rcll
fwait
incb
scas
fiaddl
sahf
inc
into
push
flds
push
lret
inc
jo
int
fs
popf
mov
lret
xchg
mov
cwtl
icebp
lret
fcompl
stos
push
dec
lret
pop
and
mov
adc
xor
cld
adc
icebp
stos
loop
je
adc
push
pop
sti
mov
xchg
or
jne
mov
sbb
cmp
ret
faddl
xor
mov
lret
cli
jne
push
xchg
out
in
repnz
xor
jp
lret
push
push
clc
enter
mov
push
add
sbb
sub
movsb
jo
icebp
je
aas
add
insl
mov
inc
jno
adc
fsubrs
lret
push
mov
cmp
xchg
jno
rorb
inc
loope
movsb
cmc
adc
jae
test
cmp
fpatan
push
call
cli
pop
sti
pop
inc
cs
aam
mov
lret
mov
dec
out
dec
lret
lahf
mov
push
sbb
lods
popa
mov
pop
mov
lock
sbb
mov
in
stc
movsl
jle
lret
into
pop
and
jo
mov
push
enter
icebp
aam
inc
stc
lret
mov
sti
push
mov
pop
aad
js
push
orb
out
jb
sbb
jge
jg
arpl
mul
bndstx
sarl
jle
or
sbb
jp
add
lds
push
xor
xor
lea
pop
stos
rcrl
or
aaa
mov
movnti
lret
sbbb
and
pop
push
dec
dec
shlb
outsb
lods
xor
sub
mov
or
lret
xchg
jno
in
lret
loope
xor
mov
fisubrs
or
rcrl
fstpl
sub
iret
add
inc
sbb
jbe
dec
lret
jns
and
cmp
lret
addl
int
repz
xchg
mov
cmc
lret
in
cwtl
sub
xor
cmp
lret
push
pop
lret
fnstenv
mov
xlat
lret
addr16
mov
test
call
shr
repnz
jp
push
pop
shlb
std
popa
add
adcb
aad
pusha
lret
add
add
or
popa
fimull
pop
cmpb
or
lret
sub
lret
sbb
daa
cltd
mov
mov
xor
mov
stos
push
popf
adc
shll
popa
popf
rcrb
xchg
pusha
cmp
lret
jnp
pop
adc
or
jle
mov
mov
cmp
in
xchg
cmp
aam
sbb
int3
mov
mov
fdiv
mov
sbb
lock
stc
scas
jmp
fcomi
lret
fwait
and
imul
leave
insb
dec
adc
out
cli
cmp
mov
push
push
jge
sub
pop
addl
cmp
aam
adc
icebp
lret
mov
dec
ficoms
xchg
xor
rcl
cmp
aad
cmp
mov
cli
incb
mov
push
push
xor
popf
les
loop
dec
sar
push
jle
and
lret
popa
pop
xlat
repz
lretw
sti
push
addl
test
sbb
jl
mov
call
jbe
mov
loop
jp
icebp
fisubrs
push
dec
xor
push
sbb
lret
test
or
aas
stos
lret
mov
imul
cmp
lret
jge
push
fisubrs
lret
mov
or
xlat
std
xchg
pop
mov
push
sub
adcl
fsub
mov
rcl
shrb
test
dec
loopne
pop
sub
ds
sar
andl
add
cli
aas
adc
inc
ljmp
push
or
lret
cmp
jo
jle
lea
ret
lret
pop
or
sahf
lea
sbbl
lret
lcall
add
enter
pop
xlat
lods
shll
and
adc
adc
push
loopne
repnz
xchg
jb
fistps
cli
mov
pop
adc
sarb
cmc
push
sbb
cwtl
pop
lret
xchg
lret
cli
addb
lret
sub
push
lret
cmc
add
mulb
mov
popa
lret
xor
add
imul
jp
lret
pop
mov
jne
cmp
fadds
shl
lret
add
fstpt
imul
xchg
cmpsl
hlt
mov
adc
dec
imul
insb
roll
mov
lret
lds
pusha
mov
arpl
lret
inc
in
mov
aaa
lret
mov
lret
not
fucomp
insl
sti
adc
cmpsl
lret
call
sub
fistl
add
loope
add
imul
cld
or
movl
shlb
dec
xchg
push
sub
mov
lods
lds
add
xor
loopne
ljmp
addl
push
or
cli
stos
cmpsb
pop
inc
pop
movsb
shl
fwait
sti
lret
pop
fcomps
rorb
int
aam
je
inc
pop
mov
jno,pt
mov
mov
stc
int3
push
mov
je
mov
xorb
ljmp
cmpsb
inc
push
subb
mov
sub
flds
and
lret
stos
mov
pop
addr16
imul
sti
or
push
cmp
lret
outsl
mov
sub
mov
addb
push
insl
movsb
cmpsb
lret
xchg
dec
xchg
or
adc
cmp
jmp
pop
mov
push
mov
imul
scas
jbe
pop
cmp
sbb
mov
inc
lods
les
sbb
into
push
popa
jns
cmp
cli
cmpsb
lret
push
pop
int
lret
push
inc
rcrb
leave
xor
mov
or
divl
flds
push
ror
insb
mov
test
lods
mov
or
sub
ss
push
mov
mov
pop
push
xchg
jae
dec
lret
call
pop
lret
mov
iret
aam
cmp
or
cmpsb
out
xor
js
or
and
jecxz
dec
lods
mov
loop
loop
inc
out
push
popa
cwtl
lret
or
jne
inc
flds
lret
bound
cmp
jae
addl
lret
leave
push
xor
fdiv
iret
popa
mov
xchg
push
cli
sbb
or
les
in
int
pop
cltd
cmc
stos
xlat
clc
mov
aam
sarl
outsl
lret
and
fcmove
bound
xor
push
inc
ja
inc
inc
xor
das
add
push
ror
pop
outsb
divb
ror
imul
mov
jl
shlb
lret
push
icebp
adc
cli
sub
into
jle
clc
lret
push
repz
pop
sbb
mov
shr
into
lock
push
pushf
dec
nop
sarl
mov
dec
sub
pop
aas
push
push
mov
icebp
daa
cmp
cli
adc
push
mov
popf
ljmp
lock
push
les
pop
scas
dec
xchg
mov
in
cli
popa
xchg
clc
mov
lods
cmp
and
lret
inc
popf
or
fistpl
aam
push
std
cmp
lret
popf
jecxz
in
and
lcall
idiv
sub
fisubl
jns
sti
lds
pop
lret
mov
xor
sbb
mov
inc
add
lret
ret
outsb
cmp
lret
mov
imul
sahf
adc
lret
xchg
lret
mov
mov
xor
ljmp
cld
mov
jnp
lret
lcall
or
shrl
cmpsb
outsb
mov
jns
mov
sti
sarb
enter
jg
push
imul
sti
mov
mov
fnstsw
lret
imul
lods
in
jg
sbb
int
rorb
lret
xor
arpl
sbb
cltd
int
bound
xor
adc
sub
aaa
aad
lret
cmp
lds
dec
lcall
int3
mov
out
xor
mov
scas
popf
cs
xchg
lret
mov
fsubs
sbb
flds
jbe
or
sub
fwait
out
fdivrs
mov
mov
cmp
ljmp
add
lret
cmpsl
jno
pusha
cli
ror
out
jp
sub
push
lret
xchg
xor
dec
ficoml
jecxz
sub
pop
pop
scas
push
sbb
mov
stos
lods
xor
push
inc
lret
addr16
mov
or
iret
xchg
cmp
negb
adc
dec
mov
cmp
into
scas
xor
ror
pop
ja
xchg
add
cltd
lret
mov
pop
mov
in
sbb
sbb
xchg
jns
clc
xor
cs
dec
mov
lret
loope
enter
lret
mov
sbb
lret
loop
add
stos
mov
mov
pop
cli
fldcw
cs
inc
or
add
insb
adc
stos
mov
add
jns
fidivrl
cmp
fld
in
lret
jg,pn
jp
fwait
lret
in
jmp
fiaddl
jmp
fldenv
cmp
lods
orl
shlb
mov
ljmp
ljmp
dec
cmc
dec
loope
dec
push
scas
int3
lret
aam
xchg
add
pop
lods
test
inc
xchg
add
fimull
pop
xchg
dec
in
lret
pop
icebp
push
loope
and
dec
aaa
mov
fmuls
ljmp
jns
lret
call
jb
mov
push
fldenv
dec
and
scas
jmp
jl
fistpll
lret
jno
cmp
in
test
inc
lods
mov
adc
loopne
lret
lods
mov
inc
pop
pop
cli
mov
sub
dec
cld
pop
inc
daa
and
popf
fldenv
jp,pt
and
jnp
outsb
sbb
mulb
cmp
push
lret
or
in
or
ret
jb
sarl
sub
dec
popf
fimull
out
push
xlat
ret
scas
fldenv
lret
xchg
cmp
xchg
sahf
jno
jno
lret
jl
test
nop
std
lret
popf
jo
div
sti
cmp
xlat
adc
fidivs
cmp
sbb
lret
outsb
dec
dec
inc
js
pop
sahf
or
stos
mov
xorb
lret
push
lcall
push
popa
mov
add
cli
adc
mov
sub
lds
shll
in
lahf
popf
mov
sub
cmpsb
out
xchg
jp
xchg
mov
stos
mov
ret
mov
adc
call
dec
and
pop
cmpsl
jno
rcll
fidivs
decb
aad
pop
jmp
test
scas
inc
sbbb
inc
arpl
ret
push
mov
aaa
lret
inc
sub
or
xchg
lds
lret
lcall
movsb
xorl
add
lret
imul
lret
add
popa
inc
jp
lret
jg
out
mov
lcall
push
cmp
pop
jecxz
testb
in
loopne
sahf
fldenv
repz
pop
jmp
lea
or
outsb
out
inc
push
shlb
gs
push
mov
lret
test
shll
sub
pop
jl
lods
arpl
jp
dec
lret
xor
pusha
push
pop
push
sub
xlat
insb
fidivrl
out
push
jnp
mov
xor
adc
or
sub
mov
scas
xchg
daa
shrb
fwait
addb
rclb
or
mov
push
ror
xor
mov
pop
divl
andb
js
out
enter
cmpsb
mov
mov
xchg
add
jmpw
nop
or
rorl
xchg
push
mov
dec
stos
sub
stos
and
pop
js
mov
arpl
lret
or
lret
adc
and
fldcw
lret
push
js
jne
jecxz
jae
roll
lret
pushf
pop
jl
lods
ret
outsb
xor
lret
xchg
pop
pop
adc
xor
xor
in
bswap
out
lcall
lret
sti
xchg
inc
ds
iret
lret
cltd
mov
lret
js
and
pop
lret
int
out
push
mov
lret
mov
mov
rcrb
rcrb
push
jle
es
into
in
add
lret
xchg
loopne
cmp
inc
lret
aas
mov
lret
jp
lahf
jne
in
xchg
mov
addr16
dec
mov
jecxz
add
aam
inc
sub
inc
mov
mov
and
push
sub
sub
pop
lock
insb
lret
jne
push
in
pushf
clc
push
cmp
stos
adc
jg
cmp
cmp
mov
imul
dec
adcb
lods
fldt
jle
adc
pop
out
rcll
cmc
dec
lret
push
inc
sbb
loope
rorb
dec
lret
gs
mov
lds
hlt
sub
lds
ljmp
ds
shl
or
mov
jp
mov
in
jns
dec
aam
pop
cmovle
lret
or
sbb
lret
push
lcall
adc
xchg
out
xor
loopne
jno
cmp
mov
xchg
pop
or
push
gs
inc
lods
js
sarb
ja
dec
push
pop
test
je
ss
shl
mov
aad
lret
mov
xlat
mov
jp
push
add
lret
dec
dec
fdivl
mov
in
out
imul
sarl
addr16
jmp
lret
testb
lock
lret
jl
mov
addr16
pop
or
mov
jns
inc
add
pop
or
sub
mov
mov
and
lea
sub
stc
inc
fcmovne
push
inc
or
or
aas
push
rorl
cmp
aam
add
add
cwtl
xchg
subl
sbb
inc
lahf
cli
pop
ja
and
jae
subb
mov
xchg
xor
lret
clc
mov
repz
icebp
xor
pop
or
xor
imul
dec
sub
lahf
ror
add
test
hlt
cmp
lret
rolb
lret
in
addr16
jge
xor
sub
movsl
leave
lret
pop
pop
xor
cmp
mov
inc
xlat
lret
mov
adc
fst
pop
pusha
sub
xchg
lret
mov
fstpt
mov
repnz
mov
push
cmp
mov
movsl
lcall
aam
xlat
pop
jp
lret
mov
dec
and
rclb
cmp
ss
push
repz
lret
das
cs
inc
lret
and
inc
lret
push
pusha
lret
fisubs
in
inc
and
cli
js
jne
aas
or
aaa
les
xorl
mov
jb
std
pop
push
popf
and
movlps
xor
rcl
push
sub
push
lret
out
lret
push
sbb
lret
mov
cli
add
ret
sarl
mov
push
jne
jecxz
sbb
cmp
lret
and
mov
xor
in
icebp
jmp
adc
or
pop
and
jge
mov
add
mov
lret
jl
inc
sub
jnp
test
je
scas
rclb
pop
imul
jle
and
popaw
mov
sbb
shl
jg
xchg
cmp
loop
push
mov
adc
iret
aaa
cld
movsl
shlb
ss
outsl
xor
das
mov
jmp
or
lcall
or
mov
mov
ret
sub
lcall
inc
inc
test
mov
mov
cmp
jo
test
call
sbb
push
mov
adc
sti
fimull
lret
cld
dec
lcall
addr16
mov
stos
sbb
out
es
lret
in
mov
push
push
movsl
push
sub
lret
fildll
mov
jne
js
test
sbb
xchg
iret
fidivs
dec
lret
out
lahf
mov
adc
sub
ja
inc
clc
mov
push
int3
inc
jbe
movb
sbb
insl
mov
ret
stos
mov
outsb
imulb
xor
sbb
movsb
jae
cmc
lea
mov
inc
jmp
roll
xor
dec
hlt
sbb
lret
loope
add
lahf
sub
mov
pop
test
and
loopne
inc
push
inc
or
inc
adc
push
cli
jno
cli
xchg
fwait
push
icebp
dec
test
popf
jno
cmpsl
mov
stos
idivl
lea
inc
rcl
jo
mov
mov
inc
pop
lret
test
scas
stos
ss
rorb
fidivs
das
lret
mov
push
rolb
lret
sub
ja
xchg
xor
inc
dec
pusha
push
mov
mov
xchg
cmp
push
or
aad
lret
jne
and
lock
xor
xchg
iret
xchg
jl
mov
push
adc
lret
test
cmp
cmc
push
xchg
fs
lahf
pop
jnp
push
pop
jp
lret
data16
loope
jb
insl
mov
pusha
outsb
lret
jg
sub
sti
stc
lret
add
sbb
fdivrs
push
pop
pop
jmp
out
and
lret
cmp
pop
fwait
or
inc
adc
pop
cmp
jmp
bound
fiaddl
add
inc
fidivl
and
inc
int3
dec
pop
lret
loop
addr16
push
pop
lret
jg
cmpsb
movsb
or
pop
fstps
cmp
push
insl
lret
ficomps
push
adc
lret
pusha
xchg
nop
cmpsl
and
cli
cmc
sbb
mov
loop
push
insl
mov
test
add
xchg
push
mov
push
daa
fcomp
push
push
jg
jbe
add
dec
pop
leave
mov
into
xchg
xor
lret
xor
mov
jmp
xchg
mov
lods
enter
mov
divb
roll
ljmp
movsl
outsl
dec
lret
jp
inc
add
xorl
repz
out
pop
aam
sbb
mov
mov
mov
lods
dec
or
inc
jns
push
push
movd
pop
jmp
mov
fimull
fsub
pop
adc
mov
jmp
mov
out
ret
mov
mov
shlb
push
lods
stos
jecxz
repnz
and
cmp
lret
xlat
ja
ficomps
adc
or
inc
addl
mov
mov
lret
lods
fwait
or
and
add
es
jbe
mov
mov
mov
lret
push
mov
into
xor
or
jae
dec
es
xor
fisttps
mov
sar
lds
icebp
mov
adc
pop
inc
pop
sbb
lret
inc
int3
add
pop
aam
leave
or
shll
sub
repnz
mov
jge
adc
sub
jge
popf
shlb
mov
lret
sub
inc
sbb
mov
pop
sarb
lret
mov
lret
sahf
insb
sub
stos
repnz
ficoms
or
int3
cli
xchg
and
cli
mov
mov
lret
push
jl
adc
pop
or
fstps
insb
imul
xchg
jnp
pushf
lret
inc
jmp
fwait
sub
pop
mov
shlb
add
in
xor
leave
arpl
pop
pop
xor
push
inc
test
ret
lret
jbe
mov
or
movb
or
into
push
lret
mov
push
mov
rcl
push
xchg
es
ja
out
cmpsb
xor
xlat
sbb
push
inc
lret
fsubp
push
mov
mov
inc
pop
out
popf
pop
jecxz
lret
mov
jg
add
sbb
stos
mov
mov
xor
inc
dec
dec
mov
cmc
xlat
lock
sbb
add
jbe
in
jecxz
popa
adc
pop
out
arpl
cli
pop
dec
pop
mov
sbb
hlt
cli
outsb
movsl
iret
or
mov
lret
cmpsl
outsl
aad
lret
push
add
inc
xchg
cli
lcall
pushf
mov
lret
std
mov
lret
cmpl
sbb
adc
push
adc
repnz
add
mov
or
cs
std
cwtl
push
cli
jg
je
mov
jp
mov
cmc
inc
sbb
notl
cmpsl
lret
hlt
mov
mov
loopne
push
ljmp
sti
add
cmp
add
addr16
nop
adc
sbb
sub
adc
mov
cltd
imul
repz
shlb
xor
addr16
xor
shlb
lret
push
lcall
jne
cmp
daa
mov
cmp
mov
out
jno
scas
pop
xchg
loope
scas
orb
xor
cmp
fsubrs
or
sbb
fdivrl
icebp
lret
adc
repnz
lret
xor
mov
sub
lret
lods
dec
ja
dec
nop
push
and
push
add
arpl
jns
sbb
popf
jecxz
cmp
in
test
into
push
or
mov
jecxz
dec
push
in
mov
adc
lahf
loopne
mov
push
test
mov
mov
xchg
push
scas
test
fisubrs
js
push
lret
and
lcall
push
out
inc
jge
stc
xchg
test
add
jnp
ss
outsb
mov
mov
mov
ret
in
inc
lret
mov
mov
cmp
dec
jp
lret
mov
fidivrl
gs
stos
fs
adc
mov
shlb
call
lret
xor
mov
cmp
xor
sbb
arpl
or
cmp
out
pop
push
cwtl
add
shll
jge
sbb
jl
fildll
mov
add
movsl
pop
loopne
in
mov
out
js
inc
mov
rorb
insl
push
lret
int3
imul
pushf
std
cmp
shrl
jl
jmp
cwtl
pop
xchg
or
xchg
loop
jge
xor
icebp
mov
mov
adc
stos
int3
mov
test
ret
lret
push
mov
adc
push
sub
xor
pop
sbb
xlat
lret
cmpsb
push
lcall
shl
mov
xor
or
repz
nop
add
adc
xchg
inc
dec
lret
dec
je
xlat
shl
andl
nop
insb
pop
rcr
sti
ficoms
movsl
jmp
cltd
sub
stos
lea
ror
addr16
xor
push
jge
inc
shlb
mov
out
mov
lods
sub
mov
cli
pop
add
xchg
inc
js
jns
dec
ror
push
ficoms
push
lret
mov
lret
xorb
or
jp
repz
shlb
lret
pop
cmp
push
pushf
or
in
xchg
push
lret
xchg
scas
insb
jge
lret
dec
mov
xor
negl
jp
mov
aaa
movsl
in
subb
fcomip
lret
cli
sub
mov
fdivrs
in
dec
fsubl
cmp
arpl
lret
xchg
inc
lods
insl
fiaddl
push
xlat
fcomi
lret
pusha
pushf
push
bound
cmpsl
popa
inc
lret
cmc
jl
and
inc
xchg
sbb
gs
lea
rol
cmp
cmp
divb
mov
ret
lret
icebp
out
sahf
push
das
lret
imul
jb
sbb
lods
pop
movsl
lret
cmp
ss
sbb
push
jge
flds
shl
push
insl
cmp
subl
lret
jno
and
mov
imul
popl
or
pop
lret
xchg
sub
iret
aad
subb
adc
or
mov
push
insb
in
lret
int
jno
lods
lret
cmc
movsl
nop
or
lret
inc
addr16
arpl
cmc
mov
outsb
insl
pushf
dec
jp
sub
lcall
leave
lods
arpl
and
add
clc
jle
int3
int
jl
push
mov
rcr
jge
rcrb
sub
pop
mov
lret
sub
cli
sbb
cmp
add
fs
lret
ljmp
cld
push
xor
cmp
cmp
popa
dec
aaa
inc
fisubrl
ds
sbb
cmp
cmp
outsl
je
jno
dec
icebp
add
xor
lret
sarl
dec
mov
jmp
mov
lret
pop
mov
or
aam
pusha
or
lret
pop
lods
push
gs
stc
lret
jb
xor
movsl
mov
lret
movsb
sub
test
dec
sbb
adc
ss
mov
stos
or
rcrl
lahf
dec
cmp
lret
xchg
ljmp
sub
adc
xchg
lcall
cmp
sahf
cli
pop
mov
lret
les
lret
pop
push
lahf
lods
adc
out
int
jp
push
inc
in
push
into
cmp
jbe
int3
in
mov
xchg
lret
lahf
or
and
lret
xor
fwait
cmc
push
lret
ret
into
lret
pop
cltd
fucomp
lods
cwtl
jge
lret
inc
pop
repnz
mov
lret
push
and
sbb
or
rcr
lret
mov
xchg
mov
arpl
das
and
adc
cld
xchg
lret
push
arpl
shl
pop
jp
insb
pusha
lret
xor
lret
and
es
jbe
test
stos
mov
mov
pop
pop
push
sbb
lret
jl
in
pop
mov
or
push
mov
das
rcl
push
mov
mov
xchg
call
mov
lret
push
movsl
fnstcw
lret
fs
and
js
lret
mov
mov
mov
mov
fldenv
lods
inc
lret
push
imul
jbe
shrl
rclb
lret
test
push
cmpsb
cmp
sub
scas
sub
add
or
imul
pop
inc
pusha
mov
cli
cmp
lock
leave
and
xor
fdivrs
push
xchg
and
cli
pop
out
shll
sub
adc
call
out
sub
aam
dec
lret
dec
mov
lret
aaa
lods
int
jne
xlat
aad
push
loopne
sub
sbb
lret
gs
ficoms
sbb
cwtl
or
inc
fcom
push
pop
clc
decb
rep
gs
shlb
inc
dec
shr
das
inc
stc
outsl
lret
or
lret
out
mov
int
add
and
xor
add
stos
push
push
aaa
nop
into
and
pop
cltd
push
lret
test
jp
mov
xchg
ret
shl
fcmovu
cmpsb
mov
out
add
into
xor
in
stos
jns
lock
xor
push
out
push
lret
fsubrl
test
sub
loop
repz
push
test
sbbl
push
sub
sbb
in
movsb
ja
mov
lret
call
ror
das
vpsllvd
dec
fisubrl
inc
lahf
pop
or
and
lret
mov
fistpll
mov
jl
xchg
icebp
mov
mov
mov
int3
dec
insl
shl
lretw
or
inc
fidivl
loop
inc
jns
mov
lret
addr16
lods
ss
mov
or
jb
jae
fcmove
fisttps
adc
insl
inc
clc
dec
fmull
jae
cmp
add
aam
sbb
int3
sbb
pop
lret
fnstenv
lret
fwait
mov
jmp
xchg
bound
lcall
or
push
sbb
xlat
xchg
nop
fmul
pop
outsb
or
into
xchg
push
ss
push
dec
shrl
and
adc
stc
mov
bnd
cli
cmpsl
hlt
sarl
in
movsb
sbb
add
jle
outsb
pop
fmulp
fwait
cmpsl
cs
arpl
dec
fnstsw
cmpb
cwtl
sub
xor
lcall
jae
mov
dec
and
adc
dec
jg
cltd
aaa
jmp
mov
cmpl
in
mov
das
enter
pusha
mov
lret
idivb
push
cmp
das
and
aaa
pop
les
xor
lods
cmp
and
loopne
mov
jle
mov
sbb
fwait
outsb
mov
mov
mov
xchg
out
lret
push
sub
lret
xor
lret
sbb
and
xchg
js
xchg
or
nop
std
jge
mov
loope
out
dec
data16
addr16
sbb
fisubrl
xor
mov
mov
sub
rcll
push
cmp
pop
or
jp
icebp
shlb
pop
pop
repz
and
lret
push
jge
add
sbb
rclb
mov
pop
shlb
adc
ds
mov
sub
daa
xchg
and
xor
dec
lds
insb
lret
inc
scas
xor
ljmp
xor
push
mov
inc
xchg
aam
ficomps
jae
call
str
aaa
ret
dec
lods
push
fs
outsb
lret
out
lahf
xor
icebp
lret
jl
mov
icebp
mov
cli
mov
cmp
es
inc
pop
pop
loope
or
int
add
scas
lret
lret
xor
sbb
lcall
ss
ljmp
idivl
negb
dec
pop
cwtl
mov
jns
out
stc
mov
fs
mov
repz
loop
shl
lahf
out
lods
and
imul
lret
ss
adc
or
inc
sbb
sar
cmp
or
aaa
int3
aad
arpl
lret
xchg
int
mov
cmc
rol
cmp
xor
sbb
lahf
arpl
movsb
bound
into
dec
fsubrs
lret
jno
jmp
sbb
stos
das
movsb
xlat
mov
lret
aaa
add
cmp
fildl
lret
sub
add
mov
push
cmpsl
lods
hlt
xchg
add
jae
push
cmp
sub
jle
iret
fimuls
fsubrs
mov
add
jg
mov
ss
xchg
sub
lret
sahf
divl
push
xor
xor
cmp
jae
out
idivb
test
dec
cmp
or
iret
adc
data16
jge
in
or
inc
jnp
push
lret
and
dec
out
and
into
js
xchg
cmp
inc
icebp
lret
and
jbe
push
movsb
or
xor
dec
int
or
sbb
add
repz
cmp
das
fs
lret
sbb
stc
sarl
data16
mov
pop
sbbb
mov
orb
push
pop
jle
aaa
sarb
lret
jno
fmull
fidivrl
stos
ret
mov
cmc
xchg
inc
xchg
rcrb
inc
fisubrl
lods
test
dec
or
lret
jns
inc
mov
enter
ret
pop
aas
sub
stc
leave
lret
repnz
adc
fwait
pop
cli
call
jae
inc
fucomp
cli
int
fidivl
stos
jmp
cmc
lret
iret
push
add
int3
mov
pop
in
mov
jbe
xchg
idivl
adc
xchg
inc
shl
repnz
dec
addb
mov
movsb
or
jb
jns
ret
aam
ljmp
mov
popa
aam
pusha
and
jecxz
xchg
push
imulb
push
jns
xchg
mov
lret
stc
daa
xor
dec
lret
xor
cld
fisubrl
lret
movsb
and
lret
mov
mov
sbb
js
or
jg
repnz
call
fnstcw
dec
xchg
sti
pop
adc
pop
arpl
ficompl
adc
push
jnp
lea
jae
sub
stos
ja
into
mov
push
jbe
mov
int3
iret
sbbl
mov
in
in
hlt
into
aad
arpl
sbb
push
pusha
add
cmp
clc
fldenv
jne
rcr
sub
and
xchg
test
insb
cltd
js
lret
jno
pop
push
jne
leave
jae
adc
pop
push
test
lret
jo
lods
push
mov
sbb
jnp
stos
movl
lret
popa
out
movsl
leave
dec
shrl
shrb
movsb
mov
arpl
test
ds
mov
lods
cmpsb
mov
sbb
shr
icebp
jbe
push
mov
stos
cmp
sub
lret
mov
dec
lret
add
adcl
test
icebp
jge
or
sarb
mov
xchg
pop
lret
rorb
sbb
push
popa
std
lret
testb
mov
rcll
fldcw
mov
sti
dec
fistps
cmc
adc
insb
mov
icebp
cmpsl
jmp
je
cli
xor
loopne
fcmovnu
push
mov
fs
shlb
fiaddl
jge
xchg
pusha
adc
arpl
insl
aaa
sbb
testl
rcl
mov
and
pop
into
lret
je
fxrstor
mov
add
or
mov
push
mov
sbb
push
lret
xchg
xchg
jo
push
ja
pop
jb
sbb
xor
test
lret
or
adc
data16
pop
lock
or
xor
insl
add
xchg
js
mov
pop
adc
mov
inc
sbb
sbb
test
call
lods
mov
sbb
loop
pushf
add
rorl
pusha
cmpsb
fadds
mov
out
cli
in
ds
fists
jo
stos
sti
mov
test
movsl
push
jmp
cs
inc
hlt
push
cmp
jmp
sub
lret
or
cmp
and
gs
lret
mov
or
std
nop
mov
xor
iret
inc
fs
push
mov
mov
pop
sbb
lods
or
add
push
pop
fs
cmp
lret
mov
decl
cmp
or
sub
adc
sub
push
dec
in
scas
sbb
and
stos
mov
outsl
lods
xchg
lret
ret
mov
jge
pop
inc
fldcw
dec
nop
imul
leave
int3
xchg
or
js
mov
mov
and
or
xchg
xchg
mov
scas
loope
ljmp
fmul
pop
lret
xchg
xor
lretw
movsb
mov
adc
push
mov
lret
fadd
mov
cmp
push
ss
push
lea
adc
mov
cmp
dec
pop
jl
lcall
pop
notb
inc
hlt
cltd
lret
in
insl
xchg
push
mov
inc
ljmp
push
mov
xchg
cmpsl
lret
or
xlat
stos
frstor
lock
xchg
mov
adc
cmp
sub
pop
lret
lods
popa
rol
jnp
add
test
rcr
outsb
adc
scas
xchg
clc
jge
popf
jp
mov
iret
into
pop
pop
sub
movsl
scas
lods
arpl
arpl
jbe
cmc
push
cli
insb
ret
popf
add
or
shll
mov
inc
pushf
loope
xor
mov
jb
mov
push
xlat
lods
movsb
mov
stc
sub
faddl
adcl
imul
lret
or
adc
lret
ficomps
lds
xchg
or
push
cmp
dec
mov
pop
jmp
and
dec
dec
adc
lret
xchg
aaa
mov
jns
fidivl
pop
add
cld
sahf
lret
out
mov
or
add
dec
xchg
pop
ret
adc
cmp
stos
adc
cmp
mov
pop
xchg
cmc
lret
xchg
pop
repnz
insl
lret
pop
xor
stos
and
adc
popf
das
push
enter
inc
mov
push
xlat
cmp
lret
jge
push
add
lret
or
inc
xor
sbb
mov
sbb
lret
jmp
mov
shr
inc
push
scas
push
loope
and
pop
cmp
test
sbb
or
dec
pushf
lret
lea
sub
sub
pop
lcall
dec
xchg
scas
push
es
into
xchg
push
lret
sbb
mov
ss
fnsave
filds
loope
mov
fwait
xlat
out
aad
jnp
lret
stos
sbbb
mov
push
lret
mov
fs
mov
bnd
fcmovbe
xchg
testb
fcmovne
mov
imul
xor
lret
xchg
int
call
std
xchg
push
ja
mov
mov
pop
and
addr16
sub
dec
enter
or
scas
sti
lea
add
sahf
dec
rolb
lret
ds
pop
push
dec
or
mov
jmp
insb
stos
in
xor
lret
add
ja
loope
lret
cmp
cmp
fisubrs
aad
inc
jge
cmpsl
and
mov
mov
mov
lret
mov
xchg
xor
mov
pop
ficomps
rolb
mov
ret
cltd
out
pop
ror
lret
mov
mov
adc
mov
daa
push
rorb
ret
mov
out
imul
cli
sti
int3
mov
scas
jne
lret
movsl
arpl
xorl
and
repz
or
scas
push
inc
out
xlat
xlat
cmp
fimull
mov
enter
adc
or
jle
mov
cltd
rcr
sbb
outsl
ret
shr
mov
lret
data16
add
lret
gs
insb
outsb
pop
fcmove
call
das
div
lret
fnstenv
out
not
pop
cli
mov
cmp
into
sbb
mov
jmp
mov
lret
pop
xor
cltd
lods
mov
in
daa
call
lret
out
frstor
dec
sbb
lcall
rcr
push
call
push
sbb
sarl
negl
mov
mov
push
pop
lret
cmp
gs
jno
cwtl
fxch
adc
shll
lret
cs
in
sub
pop
lret
test
add
lret
and
add
lahf
lock
clc
mov
int3
sub
fimull
cli
or
xchg
cwtl
leave
mov
andb
lret
jns
movsl
fs
lret
stos
mov
mov
inc
mov
mov
xor
mov
lret
popf
mov
dec
lea
ficoml
out
repz
shlb
xor
pop
pop
call
sar
int3
cwtl
int
imull
cli
sbb
out
fsubrs
jbe
das
inc
int
sub
add
rorb
pop
push
ret
repnz
sub
rcl
xchg
hlt
ret
add
add
adc
ficoml
orl
sub
pop
idivl
cwtl
cmp
insl
push
outsb
or
loope
call
jbe
sub
mov
subl
add
sub
cmp
out
mov
in
jl
inc
lret
mov
mov
inc
cmp
outsb
iret
xchg
cmpsl
mov
lret
xchg
sbb
mov
xor
test
xlat
adc
jmp
loope
jle
xchg
xor
push
insl
fwait
cld
lret
aad
out
das
push
lret
fnstsw
lcall
push
mov
mov
fmul
pop
sub
push
push
mov
pop
lret
xor
outsl
push
and
ret
sti
js
test
mov
xchg
mov
in
lret
push
add
sbb
push
sbb
jb
cmp
stos
rcr
fxch
adc
enter
pop
sbb
push
fs
mov
iret
add
lahf
push
lret
je
push
vandnps
in
mov
int3
add
shll
lret
lret
xor
xor
mov
iret
dec
push
mov
dec
sub
and
nop
test
pop
jmp
push
lret
push
cmpl
pop
lret
loop
push
xorps
and
mov
lret
jno
sub
mov
jnp
sbb
in
pop
xchg
out
xchg
lret
in
inc
mov
mov
add
xchg
sbb
insb
movsl
inc
jno
sbb
inc
lret
shrl
jge
outsl
lret
mov
fcmove
xchg
mov
inc
daa
cmp
cmp
stc
mov
xchg
enter
outsl
sbb
cmpsl
mov
outsb
dec
es
and
sub
pop
lret
cmp
xor
lret
fldt
mov
sti
sarl
fstl
sbb
pop
pusha
lret
test
test
sahf
lret
icebp
dec
cltd
jle
inc
lret
testb
lret
in
lret
lds
enter
scas
adc
jmp
das
xor
cli
out
cmp
scas
xchg
pop
xor
int3
rolb
cmp
and
xchg
lret
jbe
mov
fcmovbe
fcmovbe
cmp
andb
xchg
adc
lret
fwait
push
out
lret
adc
cs
jmp
jnp
out
cmpl
arpl
imul
lret
fwait
xchg
jp
fstps
mov
xchg
popa
cmp
mov
mov
sbb
inc
sar
arpl
sbb
test
pop
dec
adc
xor
lcall
jo
cmp
icebp
xchg
jle
shl
sarb
int
lds
mov
repz
pop
sub
mov
xor
adc
pop
xor
cli
jmp
push
cmc
xorb
cmp
jle
and
xor
push
push
sahf
mov
cmp
or
shr
dec
fistpl
mov
adc
inc
dec
cmpb
popa
jne
mov
pop
jl
lret
pop
push
lea
xchg
out
sub
jns
dec
pushf
outsl
lret
repz
mov
lret
lret
popa
cmc
call
cmp
push
lret
mov
stos
and
push
mov
imul
hlt
sti
lods
insb
cmpsl
lret
fimull
outsl
lret
cs
fistl
add
or
inc
ret
lret
jns
xchg
pop
cwtl
mov
cld
outsb
fmull
in
outsl
sub
stos
or
xor
ljmp
sub
aam
imul
fwait
mov
push
xchg
mov
sub
add
test
jecxz
inc
push
mov
sbb
cwtl
pop
jmp
or
cmp
push
dec
sbb
dec
lret
mov
ficomps
push
pop
push
mov
jecxz
mov
ficompl
in
popl
mov
xor
or
cmp
lret
pop
mov
std
lret
xor
mov
out
repz
jmp
ret
out
mov
cmp
sub
dec
jmp
sub
xchg
shl
scas
movsb
sarl
daa
lret
or
inc
adc
lret
in
jnp
sar
mov
sub
or
addb
mov
in
lods
xchg
std
clc
nop
subl
cs
pop
shll
xchg
loope
push
cli
decl
aad
femms
lret
xchg
pop
repnz
enter
mov
std
add
arpl
dec
or
mov
xchg
rorb
into
push
int
lods
popa
mov
test
and
lods
inc
push
push
out
xor
ret
sub
add
lret
sub
fidivrl
adc
int3
or
lret
add
out
xor
xchg
pop
inc
mov
rcrl
cmp
xchg
and
xor
scas
rcrb
sub
pushw
pop
shrb
fwait
aaa
jl
push
mov
sbb
push
lret
dec
cli
or
fiaddl
in
lret
in
int3
and
lret
insl
movsb
das
aam
mov
sarb
subb
aad
push
call
ret
adc
xor
data16
push
push
mov
je
shll
pop
sbb
shll
mov
shl
adc
jo
inc
js
rclb
loop
push
pop
shlb
popf
stos
ret
test
lret
jecxz
mov
and
mov
add
psrlq
or
xchg
sahf
jecxz
lret
jb
pop
inc
mov
lret
sbb
cwtl
mov
xorb
jno
je
imul
or
and
jmp
lret
leave
cmp
dec
test
xchg
dec
push
into
adc
inc
pop
cmp
xchg
je
adc
jecxz
bound
jp
pop
sbb
out
int3
into
fxch
xlat
jmp
test
mov
stos
mov
adc
cltd
fldt
sbb
lret
lock
icebp
mov
sub
ljmp
adc
jmp
adc
daa
jb
jge
inc
repnz
lods
lret
push
or
sub
lret
jl
inc
mov
sbb
adc
ror
xor
cmp
lcall
cmp
sbb
jecxz
dec
aad
cmp
mov
in
icebp
popa
lret
mov
bound
pop
cmpsb
cmp
jmp
int
adc
mov
push
fs
dec
dec
sbb
pushf
lret
sub
fcmovbe
mov
lret
bound
mov
into
stos
jmp
mov
into
jmp
lods
in
cli
cmp
scas
fists
add
aaa
add
cli
out
jl
inc
enter
jge
jbe
ljmp
out
enter
out
push
stos
adc
shr
daa
inc
push
inc
lret
lcall
jns
dec
push
lret
pop
loope
xor
push
lret
adc
jno
stos
mov
mov
aad
out
sub
lcall
ss
push
sbb
jge
xchg
dec
stos
insl
testb
cmp
sbb
xchg
lret
cmp
adc
inc
push
out
test
fisubrl
sub
jbe
push
sbb
out
fildll
mov
mov
ret
fcmovbe
mov
out
dec
leave
int
dec
lret
xchg
lods
cmp
sbb
in
orl
xlat
lods
insl
mov
adc
arpl
divb
push
xor
icebp
pop
pop
mov
cld
repz
xlat
nop
and
add
pop
pop
push
cmc
sbb
jns
in
je
rorb
rcr
jp
inc
mov
sbbb
xchg
lret
cmp
mov
cli
sbb
adc
cmp
fsubr
push
int3
ror
subl
test
js
sahf
inc
cmp
lret
push
pop
sub
movsl
into
fmul
lock
mov
push
mov
push
out
fcoml
shll
fisubs
fidivrl
dec
cmp
test
push
in
cli
cmpb
push
push
push
repz
pop
lret
cs
int
lahf
mov
aam
push
push
insl
adc
fisttps
jae
dec
cmp
sbb
shlb
cli
fsubrl
arpl
sbb
xchg
iret
dec
dec
test
adc
icebp
jno
data16
sub
push
dec
and
push
dec
inc
sub
and
or
popf
lret
mov
stos
mov
lret
lock
lret
mov
mov
sub
mov
scas
ficoml
dec
enter
test
fwait
jns
outsl
lret
push
cmc
jp
lret
sbb
add
cs
lret
movsl
xchg
jnp
lret
mov
mov
js
fnstenv
outsl
jg
loope
lret
pop
mov
pop
push
lret
rcr
mov
pop
cmp
mov
and
sub
lret
movsl
int3
cmp
sub
push
mov
sub
lret
lret
jbe
sub
test
aas
icebp
jp
xor
lret
jmp
enter
aam
jp
daa
sub
adc
roll
sub
mov
add
push
cmpsb
hlt
lret
addr16
lret
cltd
jmp
mulb
lret
inc
insl
mov
aaa
jno
rcrb
push
aam
stos
xlat
or
imul
push
sub
lret
cmp
gs
scas
jmp
lret
int3
add
push
xchg
adc
cmp
out
sub
cli
pop
ds
sub
int
jo
adc
adc
bswap
xchg
push
aad
or
mov
mov
fs
dec
out
pop
add
jb
xchg
mov
or
in
mov
sub
push
jne
add
mov
mov
or
adc
dec
sub
lret
jae
pop
aas
mov
sbb
test
add
dec
add
cmp
call
out
mov
push
sbb
jecxz
dec
incb
leave
int3
test
push
fimull
js
sbb
mov
pop
pop
mov
lods
stos
cld
fstl
mov
dec
sti
sbb
sbb
lret
add
lret
scas
jge
push
push
loop
jbe
test
cltd
int
jnp
lret
jmp
js
enter
or
push
cmp
mov
inc
ljmp
add
sub
jle
pop
cmp
push
mov
sub
cli
mov
sbb
dec
rorb
lret
test
cltd
xor
mov
outsb
push
sar
inc
nop
mov
sub
outsl
lret
dec
ja
gs
lret
xor
testb
lret
xor
adc
enter
fsubl
daa
lcall
and
fcomp
cmp
sub
jns
lea
popf
jno
mov
add
xchg
add
shl
mov
pusha
or
mov
icebp
mov
dec
mov
negb
mov
in
xchg
sub
mov
popa
push
sti
lods
test
lret
mov
and
arpl
cltd
bound
movsl
xlat
in
mov
in
rcr
call
in
mov
push
lret
ret
jb
jg
roll
add
and
lret
out
int
ret
sub
lret
cmp
aad
inc
dec
lret
andb
sti
mov
fnop
lret
daa
faddl
or
add
int3
mov
and
daa
fld
xlat
pushf
mov
push
sub
loop
iret
lret
cmc
fsubr
sub
sbb
or
call
shll
add
mov
jg
adc
sub
pop
fsubrs
cmp
mov
inc
idivl
lret
ljmp
xor
idivl
adcb
cmp
or
add
jle
fcoms
cmp
outsb
int
mov
mov
fisttpl
dec
inc
lret
pop
sub
test
xchg
les
sti
cmovb
sub
add
test
pop
adc
xor
mov
cmpsl
xchg
lds
cmp
lret
push
mov
pop
mov
cmp
gs
pushf
sbbb
mov
rorb
dec
cmp
aam
loope
mov
test
add
aas
xchg
adc
or
pop
lret
bound
jno
pop
lret
movsb
push
fucomip
das
aam
and
mov
vpunpckldq
sbb
insb
test
js
ss
pushf
pop
push
dec
mov
cli
stos
mov
outsl
neg
dec
int3
mov
jmp
lret
push
push
or
lret
icebp
pop
mov
lods
imul
sbb
push
cmp
jge
and
inc
xchg
psadbw
in
test
inc
dec
lret
push
fs
decb
mov
cli
lret
shl
fdivrl
sbb
xchg
jp
je
lods
mov
fidivl
mov
xchg
outsl
mov
cld
lods
pop
gs
fldenv
lahf
xor
or
lret
push
or
dec
sub
lret
cmpsl
push
mov
jb
fidivl
scas
jne
jmp
push
arpl
xor
sub
movsl
dec
xchg
jp
std
mov
loop
out
mov
push
aas
popa
lret
gs
dec
mov
and
shlb
ja
jbe
add
scas
les
inc
sbb
add
fs
leave
jg
lret
or
mov
adc
mov
lret
push
and
fwait
ss
pop
cmp
aad
cmp
push
gs
xchg
sub
lret
and
mov
daa
push
sub
fstl
push
xchg
xor
out
mov
cltd
mov
push
out
movsl
sbb
rclb
xor
stc
lret
insl
std
xchg
push
cmc
cmp
aam
fs
mov
jne
js
repnz
dec
push
es
add
insb
mov
cli
shll
mov
lret
or
add
push
ficomps
stos
sub
fcmove
int3
outsl
bnd
inc
cwtl
bound
cwtl
adc
lret
rcrl
and
dec
pop
cwtl
ficoml
cmpsl
nop
jge
loope
mov
mov
out
lods
jl
xchg
push
pop
lret
sub
xor
inc
loopne
push
fnstcw
cmc
xor
and
daa
lret
jecxz
inc
mov
mov
push
dec
cmp
xrelease
lret
lahf
movsl
or
jle
cmp
rclb
cmp
xchg
cmp
mov
mov
sti
lret
lret
sahf
adc
mov
sbb
or
fisubl
aam
or
pop
cwtl
lret
insl
cmc
mov
pop
cmp
push
shl
cld
mov
popf
mov
das
xor
call
lods
push
lret
fwait
repnz
mov
sbb
jae
das
lret
xor
mov
jle
into
int
dec
cltd
adc
mov
ficoml
push
scas
mull
jnp
sbb
lret
fiaddl
mov
mov
xchg
dec
and
das
lock
mov
jecxz
inc
nop
clc
std
lret
push
shll
or
mov
inc
or
cmp
push
sub
mov
jno
mov
in
add
xor
lret
aam
or
add
dec
add
push
dec
enter
mov
mov
aam
inc
lods
hlt
cltd
icebp
cli
nop
pop
ljmp
lret
sub
or
bound
mov
sbb
adc
shll
out
test
jbe
fidivl
and
sahf
loope
sbb
cmpsl
lret
jg
fsub
dec
sbb
int3
fucomi
xor
notl
push
or
fsts
out
or
inc
add
xchg
ljmp
inc
cvtdq2ps
enter
bound
call
inc
adc
xlat
nop
insb
into
and
cmp
fdivs
xor
jno
sub
inc
and
ja
shl
xor
mov
and
xor
lret
shl
mov
adc
cmp
pop
lea
rcr
das
cli
ljmp
fidivl
add
lret
pop
jecxz
aas
scas
out
lret
andb
repnz
rolb
or
lret
jecxz
jecxz
mov
jae
movsl
sbb
mov
xor
xor
sbb
lret
pop
mov
cmpsb
cs
push
xor
ret
adc
das
mov
scas
cltd
hlt
lret
imul
lret
xchg
enter
fwait
cmc
adc
pop
out
mov
popf
in
or
xchg
jge
xor
adc
fcmovu
sbb
pop
mov
rolb
mov
jno
insb
mov
jmp
cli
xchg
xlat
mov
cmc
lret
inc
push
adcl
fsts
inc
and
arpl
cmp
pop
mov
test
clc
outsb
or
mov
lret
jg
in
xlat
inc
stos
cmp
in
xchg
arpl
cmpl
sti
mov
jp
inc
movsl
mov
fisubrs
rclb
lret
push
mov
stos
pop
xchg
xor
into
andb
xlat
addr16
sbb
xchg
lret
and
icebp
loop
pop
cli
enter
daa
push
cmp
in
lcall
mov
xor
cmp
std
rorl
mov
push
mov
or
fmul
jno
xor
sahf
cmp
and
sub
or
mov
add
aas
push
mov
xor
xor
mov
lret
mov
add
jns
pop
or
xchg
scas
lret
and
cmovne
js
dec
pop
pop
fimull
or
ds
inc
cmpsb
mov
cmp
cmp
pop
mov
mov
dec
push
cli
pop
lock
test
fmul
push
ljmp
stos
nop
js
rcl
jl
dec
outsl
repz
xchg
jb
cmp
pop
or
sub
lret
dec
fidivrs
push
adc
mov
cmp
popf
aas
add
ffreep
or
xlat
mov
cmp
ficomps
xchg
inc
insb
mov
cmpsb
data16
fdivrl
jp
mov
lock
ljmp
shlb
mov
fxch
sub
pusha
push
jbe
push
adc
call
lret
mov
mul
sbbl
jne
aaa
lret
inc
fcomps
ficompl
xlat
sbb
xor
sub
sbb
movsb
push
inc
sar
movsl
sbb
cmc
and
sub
out
in
lret
lock
subl
ljmp
fadd
insb
gs
push
or
lret
into
nop
inc
fiadds
cs
mov
inc
repz
rolb
lret
hlt
fimuls
xor
fucomip
pusha
cmpsb
mov
lret
mov
mov
adc
inc
mov
lock
or
aad
mov
dec
shlb
mov
in
lock
out
cltd
test
je
xlat
xorb
dec
stos
jg
int
mov
sti
xchg
jmp
aad
lret
jne
hlt
cmp
leave
adc
outsb
lret
in
or
push
scas
cmp
lret
dec
cmp
insb
out
xor
lret
lret
fucomip
mov
sub
aaa
cs
popf
dec
movsb
pushf
mov
leave
out
hlt
lcall
xor
lret
jae
xchg
lahf
mov
orb
mov
daa
fxch
imul
xchg
shll
ljmp
out
sbb
je
cmp
lret
popa
stos
in
cmpsl
mov
lret
jae
xchg
inc
lods
aas
mov
lret
pop
jnp
stos
shrl
xor
mov
out
fcmovnb
mov
or
int
xchg
or
mov
sub
testb
lret
mov
ljmp
xchg
call
ror
sub
mov
lret
nop
and
sub
pop
iret
push
lds
data16
rorb
pushf
pop
or
lret
mov
push
mov
or
jl
lret
roll
pusha
js
cli
pop
ds
push
dec
icebp
mov
ss
jle
cmp
testb
scas
pop
fnclex
std
mov
jo
imul
out
xchg
and
fsubrl
push
lret
mov
repz
mov
call
pop
aas
fimull
jl
int
mov
stc
adc
pushf
lret
sub
push
imul
bnd
lea
xlat
loope
mov
push
out
xchg
scas
test
sub
pop
lret
or
ficompl
js
fdiv
cmc
pop
iret
or
or
sbbl
into
push
jb
xchg
push
fs
and
xlat
lret
fnstsw
cwtl
jns
lret
fidivl
add
and
mov
cli
lret
enter
jecxz
pop
dec
and
lret
dec
lods
arpl
lret
movl
addr16
lret
fbstp
xchg
jnp
pop
ljmp
shl
push
lret
ljmp
stos
arpl
jp
push
lods
adc
outsl
xlat
rclb
jg
dec
mov
xor
cmc
shlb
xor
dec
fisttpl
sti
dec
out
lret
out
stc
insb
sub
sub
lret
pop
sub
js
lret
ja
sbb
dec
lret
test
mov
int3
daa
test
push
mov
inc
add
dec
push
inc
aam
scas
sub
adc
jle
imul
push
out
int3
inc
mov
dec
lret
xchg
js
stos
filds
pop
daa
cmp
or
lret
pop
add
mov
pop
lret
sbb
inc
mov
popa
mov
fwait
ds
jmp
push
xor
pop
and
icebp
adc
arpl
shrb
mov
sub
lret
popa
adc
dec
popf
sub
rcl
mov
jno
ror
lret
outsb
das
xorb
lret
mov
loop
in
lret
xchg
fiadds
lods
pushf
mov
into
bound
xchg
inc
jb
repz
rorb
sbb
out
xor
shll
int
jno
inc
xchg
lret
stos
sbb
aaa
scas
pop
push
gs
or
loope
push
lret
ljmp
xchg
lret
pop
push
or
push
adc
les
mov
adc
push
and
add
push
mov
lret
sbb
pop
insb
inc
lret
aam
adc
mov
pop
aad
lods
cmp
sub
int3
sub
fmul
inc
pop
mov
jae,pn
xor
push
frstor
dec
cmp
xor
fcmovb
aas
sub
int3
jo
lret
sub
icebp
adc
lret
add
daa
lahf
inc
lret
out
xchg
les
lret
cmpsb
mov
inc
lret
cmp
test
in
and
jnp
add
fwait
leave
sahf
cld
push
push
out
pop
xchg
lret
lods
and
enter
in
or
inc
jmp
cli
pop
mov
cmp
enter
stos
adc
xchg
into
sub
lahf
mov
pop
es
fcmovne
lret
into
cmpsb
adc
dec
sbb
lcall
mov
je
mov
shlb
dec
adc
xor
or
push
iret
mov
cli
mov
jne
xchg
lret
xchg
aaa
scas
loope
cmp
rcl
sbb
fwait
mov
lret
int3
add
push
sbb
lea
movsl
shr
sti
xchg
call
test
push
inc
out
mov
and
jae
jnp
pop
pop
xor
lret
lea
or
addr16
mov
int3
stos
cli
add
jno
xor
push
cwtl
xlat
and
mov
push
mov
sub
rcrb
shll
lret
jne
ret
cmp
lret
lcall
pop
cmp
mov
fdivrs
cmp
icebp
push
mov
gs
popf
lret
xlat
inc
xchg
das
ret
js
addr16
out
call
aam
sub
lret
jp
adc
push
or
aad
cmc
push
ret
div
pop
addb
insb
ret
gs
lret
loopne
and
and
out
fsubl
dec
or
lods
lret
inc
cwtl
xchg
sub
mov
aam
data16
popa
inc
inc
out
jle
cli
sti
mov
adcb
ror
mov
testl
das
push
arpl
lret
push
jb
ficomps
fstpt
jae
lret
xor
lret
sub
pushf
cmp
fcmovbe
adc
lea
fldcw
sbb
fisubrl
stos
add
test
insl
test
and
cltd
lods
adc
inc
jmp
xchg
out
nop
and
inc
lret
dec
xlat
sub
mov
test
push
adc
fisubl
divb
fidivs
sbb
clc
sbb
mov
aas
pop
out
push
jmp
xchg
ret
rcr
cmp
fxch
lret
cmp
mov
mov
testl
sub
loopne
add
mov
mov
pop
pop
lret
jo
jmp
mov
lret
test
and
movsb
shrl
cmpsb
loopne
data16
mov
jnp,pt
push
fwait
scas
fs
push
int3
dec
inc
pop
xchg
mov
mov
mov
mov
jle
stos
lahf
inc
test
mov
or
js
adc
fisubl
add
out
xor
sbb
jbe
xchg
or
pusha
lods
fwait
dec
rolb
call
push
rcrb
shr
xor
add
pop
addr16
push
sub
cmova
call
jge
int3
dec
aaa
movsb
inc
popf
pop
loop
dec
in
jo
sahf
pushf
dec
sub
mov
popf
lret
mov
mov
mov
fcoms
xchg
lret
jo
push
mov
fwait
iret
xor
in
lret
adc
add
mov
jnp
jmp
lret
or
or
jne
fisttps
xor
addr16
call
lret
jno
jmp
add
xchg
push
int
scas
popf
pop
test
push
lret
adc
movl
out
adc
jbe
rcrb
and
daa
lret
adc
pop
xor
cmp
rorb
push
sbb
lret
push
push
sbb
lock
lret
sub
es
pop
lret
sbb
cmp
in
int3
mov
js
jg
ss
push
aas
fxch
push
jo
xlat
mov
pop
addr16
inc
sbb
mov
lret
clc
sbb
bswap
pop
xor
test
adc
mov
lret
or
pop
aam
lret
cld
pmulhuw
jno
ljmp
lods
ljmp
into
sarl
sbb
xchg
jb
mov
lret
mov
dec
lret
xor
imul
lret
and
xchg
cmp
add
dec
and
cli
dec
aam
xor
lret
mov
repz
sub
inc
shrl
loopne
push
lret
repnz
lret
mov
mov
aas
adc
mov
inc
xchg
lret
xchg
xchg
cld
idiv
mov
and
lea
sahf
sbb
inc
and
and
fmul
rcll
stc
or
sbb
mov
repnz
dec
ljmp
test
cmp
mov
jo
cltd
mov
stos
mov
inc
lret
jge
out
push
lret
xchg
inc
cli
hlt
cmp
push
xchg
xor
lret
notb
mov
insl
lret
int3
and
adc
push
mov
fidivl
les
popf
cltd
inc
testb
adc
movsb
into
dec
add
das
rorb
outsl
stos
pushf
pop
rcll
and
lret
insl
pop
mov
arpl
mov
ror
lea
xor
lret
jg
daa
aaa
cli
adc
leave
lret
mov
jp
mov
lea
test
mov
jns
ja
loope
jmp
lret
pushf
jp
filds
mov
ds
jb
or
sbb
mov
cmp
aam
aad
add
xchg
dec
stc
icebp
jge
out
inc
mov
fmuls
popf
add
stos
subl
enter
cmp
mov
addr16
cmp
in
jge
leave
pop
or
pop
push
inc
decb
cmp
mulb
movsb
xor
ficoml
loope
push
pop
push
lret
stos
pop
cmp
fnsave
and
cld
in
adc
lret
inc
pusha
jae
adc
jbe
adc
les
gs
lret
jg
icebp
lret
push
enter
popa
stos
pop
xchg
dec
inc
das
lret
lock
lret
loope
into
out
fs
push
push
sbb
xorl
aaa
cmpsb
lret
mov
mov
inc
inc
pop
loop
dec
mov
sarl
rclb
add
xor
std
jne
mov
lds
cli
dec
pop
jmp
xor
out
or
adc
sbb
jbe
int3
pop
rcrb
jno
add
in
adc
lret
out
dec
lahf
xchg
fisubrl
imul
scas
push
jne
or
add
sub
sbb
movsl
inc
cmp
dec
jmp
cmp
ja
dec
xchg
cli
std
push
mov
pop
loopne
lret
dec
dec
add
fwait
test
xchg
lret
js
mov
in
sbb
fsub
inc
cmp
mov
lret
mov
push
mov
sbb
xor
xchg
xor
jnp
lret
sub
mov
pop
insl
cli
imulb
sbb
stc
pop
lcall
fs
outsl
test
rolb
push
mov
xchg
aad
iret
mov
add
lret
fcom
push
scas
cli
cmpsb
push
shll
mov
daa
ds
lret
mov
xchg
ficompl
arpl
xor
push
pop
loope
ljmp
fdivrs
imul
in
cmpsb
sub
mov
pop
mov
pop
sbb
hlt
jnp
std
dec
fnstcw
fadd
dec
adc
out
loope
fwait
arpl
lret
jne
imul
cs
inc
jp
popf
inc
dec
lret
push
bswap
add
into
add
jne
sbb
mov
adc
inc
imul
dec
or
test
mov
rcrb
fsubrs
mov
inc
ljmp
insl
add
scas
inc
cltd
insb
fidivl
sub
mov
mov
int3
jecxz
push
ror
add
scas
ret
lret
adc
jp
push
and
pop
shr
mov
loope
jb
hlt
stc
ret
vcvtdq2pd
ss
inc
cmpsl
lret
pusha
mov
lcall
into
stc
dec
lret
xor
shrb
out
loope
rolb
stos
mov
mov
dec
lret
add
popa
inc
rcr
mov
jle
daa
push
jne
inc
push
pushf
push
lret
jp
add
je
icebp
mov
ret
lret
stc
ss
lods
cltd
mov
lds
dec
fs
faddp
inc
shlb
inc
test
sub
push
or
ret
lods
into
xlat
dec
jecxz
mov
popf
dec
aad
mov
cmpl
roll
lret
jnp
repnz
lock
jg
je
test
lret
xchg
test
mov
sub
xlat
sbb
psubd
mov
pop
stc
daa
ficoml
cmc
cmp
stos
xchg
fdivs
subl
pop
test
xchg
inc
mov
lret
cmc
pop
das
lret
push
or
jg
inc
sar
push
jecxz
into
lret
clc
xor
lcall
and
pop
xchg
lret
ret
inc
call
sub
imul
xor
ss
jle
mov
and
repz
movsb
dec
lret
nop
ljmp
adc
push
inc
sub
mov
in
xlat
mov
mov
lret
xor
push
mov
aam
pop
push
in
fwait
xor
into
mov
dec
fidivl
mov
mov
dec
or
jp
in
xor
lret
sub
fcompl
sub
lahf
es
add
scas
cmp
js
jae
cmc
jmp
stos
lret
xchg
loopne
fcoml
lret
in
sahf
arpl
lret
mov
inc
dec
push
cmp
cmpsb
jl
ror
int3
jb,pn
sbb
ror
mov
test
les
jbe
push
cli
adc
clc
xlat
in
lret
sbb
ds
fwait
mull
and
imul
loope
movsb
test
scas
cwtl
pop
cmpsl
repnz
or
arpl
pop
int3
lcall
sti
sub
dec
popa
pop
lret
adc
lret
pop
scas
xor
aad
cs
sub
add
stos
js
clc
popa
lret
pop
scas
cs
cltd
pop
out
cmp
sbb
rcr
lret
dec
out
xor
dec
movsb
lret
dec
aad
cld
outsl
cmp
inc
loopne
push
sub
mov
adc
or
jno
xor
imull
sbb
stos
ret
lret
outsb
sub
xor
cmp
mov
cmpsb
xlat
insb
enter
rorb
out
pop
std
cmp
push
lret
imul
divb
add
dec
out
insl
int
movsl
ljmp
in
cmp
popf
daa
jge
ret
lret
sub
aaa
inc
call
dec
fs
addr16
mov
or
sbb
test
cmp
pop
xchg
aaa
adcl
xlat
jns
mov
gs
mov
lret
aam
sub
gs
fwait
mov
aad
popf
cmp
or
xchg
aas
jp
pop
mov
xchg
xor
push
cli
mov
pop
imul
mov
mov
mov
lret
jmp
add
lock
jnp
ds
cmc
jp
sub
inc
cmp
jb
lret
xchg
js
das
sub
lret
into
or
out
xchg
add
jl
mov
add
jno
in
fs
lods
mov
andb
adc
rclb
add
mov
lret
xchg
out
dec
or
repnz
scas
jl
jns
and
sub
pusha
sbb
mov
mov
sbb
insb
popf
int
rcrb
clc
adc
lret
imul
insl
out
shrb
mov
mov
cli
mov
sub
and
mov
adc
push
dec
fmul
jmp
nop
dec
sub
neg
jno
pop
or
leave
add
mov
xchg
cmp
fwait
sbb
cmpsl
lret
sti
dec
stos
or
adcl
addr16
push
cmp
lret
or
gs
fistpll
dec
in
lea
pop
test
jge
or
inc
sahf
xlat
and
and
dec
ret
jne
or
mov
or
pop
rolb
stos
sbb
int3
je
shlb
shll
fwait
pop
sbb
and
push
call
dec
or
aam
test
div
rol
pop
or
lock
cmp
push
jmp
rcll
push
ss
stos
mov
nop
movsl
shrb
sub
push
test
icebp
pop
pop
sbb
scas
jge
stc
add
arpl
mov
jnp
leave
xchg
mov
mov
dec
sahf
pop
mov
ror
adc
cmp
lret
cs
jmp
jmp
cmp
in
dec
je
lret
call
lret
cmp
rcl
xchg
lret
movsb
insb
in
pop
push
cli
xor
push
shrl
fxch
fistpl
or
lret
push
das
dec
test
jo
shrl
jge
sub
cmpsl
cld
or
popa
cmp
adc
sbb
cmp
stos
lahf
flds
jne
outsb
popa
fs
mov
push
rol
fmuls
cmc
push
add
sahf
mov
push
sbb
mov
mov
outsb
mov
int3
lret
cmp
jl
and
xchg
lds
aas
fwait
jbe
cld
rcrb
xchg
iret
shrb
adc
inc
mov
or
fsubrs
fcompl
cmpsb
fstps
cmp
mov
and
int3
push
test
lret
jl
jns
decb
or
lds
lret
rorb
and
ficoml
fistpl
sbbl
leave
imul
and
shlb
ret
xor
outsb
fdivr
xchg
mov
shll
jo
lret
mov
dec
lret
mov
xchg
lret
test
pop
ljmp
scas
xchg
scas
mov
xchg
dec
je
mov
lret
fstl
pushw
lret
pushf
rcl
add
xor
cltd
push
stos
sub
push
int3
lret
push
mov
inc
xchg
lret
enter
dec
ds
push
xorb
xchg
sub
adcb
lret
pushf
jl
daa
cmp
or
cmp
xchg
push
scas
cwtl
sub
lret
mov
add
jle
xchg
sbb
je
lret
cmpb
or
and
aaa
cmc
ja
and
repnz
fdivrs
xor
out
popf
inc
stos
pop
lret
jmp
mov
mov
sbb
sub
adc
pushf
sub
mov
jbe
fcmovnb
pop
lret
int
inc
ss
rcll
lret
xchg
pop
push
mov
insl
jle
xor
xorl
repnz
sbb
iret
cmp
jns
ja
push
inc
inc
mov
dec
out
in
pushf
push
adc
sahf
notb
les
test
cwtl
xor
loop
inc
lods
mov
inc
cli
and
push
pop
xchg
pop
and
adc
push
rclb
lret
int3
mov
rcrl
rcrb
lretw
push
call
stos
inc
dec
push
lods
fdivrs
aas
stc
lretw
push
out
test
sub
int
pmullw
lret
jno
fcomps
cmp
jg
or
cmpsl
aam
lods
push
lret
outsb
out
or
aam
ds
xor
sahf
les
in
fildll
push
loopne
call
push
and
aam
adc
pop
test
outsb
in
push
lds
enter
inc
popl
mov
sarb
sar
dec
out
inc
push
lds
outsl
lret
pop
clc
lods
jmp
fwait
insl
xchg
std
dec
lret
or
pop
cli
sub
inc
xchg
popf
sub
push
jmp
and
enter
add
lret
mulb
insl
outsl
fidivrl
stc
shrl
pusha
push
lret
cmc
pop
sub
lret
inc
cmp
mov
adc
mov
lret
fstps
sub
icebp
mov
jl
roll
jp
flds
aas
mov
bound
jae
xchg
int3
add
pop
xchg
mov
imull
int
fidivrl
mov
xlat
fsubs
mov
sahf
jecxz
lret
mov
sbb
pop
lret
xchg
pop
js
inc
mov
sbb
je
jbe
cmpsb
push
mov
ror
xchg
mov
lcall
lret
mov
inc
xchg
ss
jmp
fstps
in
lret
repnz
es
mov
mov
push
cmpsl
dec
in
sbb
push
cltd
inc
or
lcallw
popa
dec
sub
test
stos
lret
jge
inc
lret
pop
fs
mov
ja
cmp
loop
and
pop
jo
cli
mov
push
push
jecxz
push
ror
outsl
in
jae
dec
pop
cmp
xchg
xchg
sub
push
cmc
pop
stos
lret
subb
lahf
push
in
cli
sarb
fwait
add
jecxz
pop
xchg
push
mov
mov
movsl
cld
js
lret
imull
sub
jecxz
jo
cmpsb
mov
mov
hlt
jl
lods
cmpl
clc
lret
and
fs
out
inc
jne
test
lret
add
mov
and
lret
cld
xor
mov
lret
inc
data16
cmp
lret
insl
mov
push
test
fnsave
in
movsb
lret
fs
jp
xchg
stos
lret
push
jmp
push
lret
stos
in
adc
fdivp
cld
cmp
pop
sbb
pop
pop
add
sub
lret
scas
jno
sub
jns
pop
xlat
stos
lret
icebp
mov
jne
xchg
lret
gs
xor
imul
fwait
or
mov
push
hlt
cmc
cmp
sbb
mov
mov
xchg
pop
fidivrl
mov
in
add
rcr
push
push
icebp
xchg
ret
fsubs
and
loop
or
cmp
push
jnp
push
int3
dec
in
push
lret
xchg
xchg
and
dec
mov
out
xor
adc
in
pop
sub
xchg
pop
shlb
fwait
xchg
mov
sub
cmp
mov
pop
xor
movsb
add
xchg
rcrb
push
hlt
mov
jp
lret
cmc
aam
xor
int3
mov
and
cmpsb
xchg
and
mov
fnstenv
lret
movsl
subb
popa
rcr
js
and
cmp
lret
daa
popa
xchg
dec
add
xchg
dec
adc
std
test
pop
cmp
mov
lret
mov
lret
scas
jl
mov
or
ljmp
iret
ljmp
add
push
mov
pop
pusha
jmp
xchg
test
sub
push
mov
nop
scas
lret
pop
fwait
jle
lret
faddl
sub
mov
lret
into
sub
add
lods
add
jle
xor
lcall
leave
lret
or
mov
push
and
push
xchg
jnp
xorb
sbb
mov
cli
pop
jle
in
cs
or
jb
adc
inc
enter
add
loopne
fisubs
adc
cli
lret
jae
dec
stos
push
adc
push
cmpsb
mov
sub
fmuls
inc
negl
push
add
dec
ss
sbb
mov
and
push
jge
es
jmp
jbe
insl
popl
mov
jnp
ljmp
rclb
bound
insl
and
lret
cwtl
cmp
xlat
loope
jge
push
or
sub
or
mov
add
mov
cmp
sarl
aam
iret
and
jnp
out
sbb
xor
cli
dec
push
ss
dec
fs
lret
pop
jl
icebp
sub
sub
dec
scas
lret
roll
pop
inc
mov
pushf
popa
test
push
lret
mov
mov
dec
int3
jae
leave
dec
jp
push
pop
mov
cli
lret
shlb
test
mov
clc
push
cmp
cmpsb
or
pop
rclb
clc
pop
ficoml
cmp
push
pop
xor
insl
iret
repnz
or
lods
jns
lret
ljmp
aas
xchg
sbb
jne
push
mov
mov
movsl
fwait
pushf
testl
dec
repz
cmp
lret
cltd
inc
and
lret
sbb
jo
sub
stos
sub
adc
fcmovnb
shll
xchg
jae
out
pop
test
mov
or
push
ret
add
out
sar
cmpl
mulb
xchg
rclb
push
ficoms
and
sbb
adc
clc
stos
xchg
je
loopne
xor
cld
arpl
fwait
dec
inc
ss
add
shll
dec
es
cltd
ljmp
shlb
pop
jge
sbb
xchg
aaa
cmpb
cmp
lock
rorb
mov
dec
mov
mov
lret
jns
aam
jle
lret
mov
pop
dec
aaa
lret
incb
fsub
js
mov
scas
icebp
lret
cwtl
mov
xchg
add
xchg
jle
addr16
lret
stc
xor
xor
sahf
jne
scas
je
inc
incl
fisubrl
fdivrl
mov
inc
lret
or
scas
or
lret
je
sbbb
fidivl
pop
repnz
filds
adc
jae
xor
test
dec
aaa
cli
xor
push
jns
cmpsl
cmp
sub
pop
jl
lret
or
xor
mov
cmpsb
lret
dec
iret
push
icebp
in
jl
pop
ss
scas
fcmovbe
scas
or
add
inc
fisubrl
push
jo
xchg
pop
ja
sarb
lock
outsl
lcall
jbe
mov
faddl
push
sub
sub
les
inc
ficoml
xor
int
jo
cmp
ret
xchg
fstps
rolb
mov
dec
cs
fisubrl
dec
shlb
mov
xor
arpl
aaa
stos
addr16
push
pop
out
aad
dec
movlps
and
lahf
sub
inc
sbb
sub
adc
push
inc
aas
cmp
int3
cld
xchg
add
in
les
add
add
loopne
cmp
lea
sub
cmpsl
je
push
sub
adc
in
jnp
out
add
movsl
enter
into
aas
jmp
lret
cld
push
dec
mov
mov
pop
cwtl
cmpsl
movsb
imul
adc
mov
stos
push
test
shr
lods
dec
add
iret
dec
push
push
mov
xlat
fmul
bound
add
pop
decb
add
lret
cmp
dec
cmp
and
jg
jge
cmp
xor
xchg
pop
aaa
cwtl
out
lret
or
lret
int3
fidivrs
daa
push
mov
rcl
mov
adc
ljmp
ror
push
int3
sbb
jge
pushf
rclb
test
lret
mov
andl
mov
fstps
add
mov
dec
lds
cltd
add
mov
lret
popf
call
lret
pop
leave
stc
in
cmpb
mov
mov
lret
out
nop
mov
stos
imul
xchg
lret
call
clc
clc
dec
adc
jb
push
push
shrb
xchg
movsb
pop
lret
xor
jnp
xchg
arpl
lcall
xchg
lret
mov
push
mov
cmp
outsl
mov
lret
push
jns
out
les
rolb
jge
dec
rolb
addr16
inc
mov
mov
rclb
mull
mov
sbb
js
pop
push
sub
dec
xchg
lret
pop
xor
cli
adc
and
lret
xchg
cli
mov
ss
lods
fs
push
mov
and
pop
es
lret
jae
inc
fimuls
ss
add
mov
fwait
sbb
xor
cld
add
xchg
arpl
leave
int
popf
xchg
mov
cmp
test
or
dec
inc
stc
push
into
iret
lret
pop
aas
sub
lret
mov
xchg
lret
jbe
subl
sub
inc
cmc
dec
icebp
jp
xchg
inc
add
xchg
stos
push
out
lret
xor
in
lret
or
mov
mov
mov
and
jae
jge
push
loop
add
push
movsb
mov
pushf
push
aaa
cmp
mov
popf
das
and
fcoml
lds
jecxz
test
rclb
xor
outsb
daa
mov
sbb
rorl
jp
iret
jo
mov
lds
sub
int3
cli
lret
pop
pop
jnp
int
lret
ret
jmp
in
lret
dec
pop
jl
mov
es
movsb
add
fs
je
pop
inc
lret
sahf
xchg
push
clc
xchg
and
fsub
pop
jmp
into
fsubrl
xchg
mov
lret
negb
and
orb
shlb
xchg
out
push
adc
lret
add
inc
std
push
jge
push
jb
shlb
lret
lret
xorl
jg
mov
push
fs
adc
fidivrl
addr16
push
jno
ljmp
loopne
pop
push
clc
sar
test
xchg
dec
or
imul
inc
scas
mov
pushf
mov
mov
insb
cmp
nop
dec
mov
enter
dec
lock
inc
out
or
pop
daa
insl
mov
cli
imul
cmp
add
lods
mov
stc
xor
ss
addr16
lcall
movsb
repnz
lret
jo
mov
jnp
inc
lret
call
dec
lret
adc
leave
add
dec
lds
out
lret
xchg
cmp
hlt
pop
in
jge
xor
xchg
jge
dec
lret
and
mov
push
mov
fidivl
xorb
lret
lods
int
or
cwtl
cmp
out
in
mov
lret
inc
add
push
sbbl
mov
inc
xchg
sarb
aad
jno
lret
jnp
stos
mov
pop
mov
fidivrl
repnz
xchg
mov
xor
sbb
int3
incb
lret
es
cmp
pop
cli
jle
sub
cltd
inc
cli
jae
test
push
call
xchg
shll
push
lret
inc
das
pop
push
dec
lcall
push
mov
rcrb
mov
lret
int
fadds
loop
xor
cwtl
cld
cmp
mov
fcompl
ficoml
or
lret
sbb
repnz
push
cli
aas
push
xchg
lds
jnp
xor
ret
and
outsl
pushf
bound
xchg
sbb
cmp
push
mov
scas
mov
lret
out
add
adc
xchg
ljmp
mov
lret
sti
adc
hlt
lret
sub
lret
jge
bound
dec
popf
std
nop
inc
or
lret
stc
pop
cltd
or
xchg
scas
mov
test
fistl
std
out
aam
lods
dec
mov
push
add
cmp
xor
stc
sbb
cmpsl
xchg
lret
subb
lds
lret
stc
and
xor
xchg
push
fwait
cmp
cli
add
inc
fcomps
sub
cmp
out
jb
lret
test
popf
push
xlat
jle
mov
gs
in
mov
mov
and
jecxz
lret
add
mov
repz
xlat
push
cmpb
mov
xchg
jno
dec
sbb
lret
cmp
ret
add
iret
movsb
lods
jle
xlat
adc
popf
fs
sub
aas
lret
cmpsl
add
test
addb
fimuls
test
or
and
in
call
mov
int3
xchg
fnsave
add
fidivrs
jns
lret
pop
shrl
mov
xchg
pushf
clc
cld
push
mov
lods
adc
mov
mov
pop
push
bound
lret
popl
lret
add
or
mov
adc
shlb
movsl
jb
lret
aas
ljmp
xchg
lret
push
jmp
lret
out
cmp
inc
sti
lret
arpl
xor
cs
sbb
sbb
stc
mov
cli
pop
dec
or
cmp
test
rcll
pop
mov
dec
lret
dec
subb
lahf
lret
repnz
or
rcrb
dec
push
sbb
and
pop
shl
sbb
int3
mov
push
lret
jae
repz
sub
mov
jecxz
sub
adc
incl
lret
shll
negl
lret
ljmp
fwait
mov
orl
sbb
std
mov
xchg
push
inc
fnstenv
pop
xchg
pusha
add
mov
in
mov
xchg
mov
mov
lret
mov
ficompl
insb
dec
call
lret
sbb
add
cmp
add
jb
mov
sub
sahf
icebp
nop
lret
cltd
fsubs
pop
xchg
sub
inc
leave
dec
pop
loop
daa
jne
xchg
dec
lret
andb
xor
movsl
test
pop
cmp
out
fcmove
lods
add
in
jge
sbb
clc
push
lea
cmp
xchg
sub
rcrl
adc
xor
mov
or
sub
ret
xchg
push
in
fisubrl
add
pop
sub
lret
push
testb
xor
lret
cmpsl
add
test
stc
push
fwait
call
aam
insl
daa
lea
adc
or
outsb
push
jle
jbe
imul
dec
pop
rclb
ja
mov
or
xchg
lcall
adc
leave
insb
loope
mov
aaa
outsb
sbb
insl
mov
hlt
lret
sub
out
orl
adc
insl
or
cmp
xlat
mov
xor
lret
jo
icebp
mov
je
jecxz
cmpsl
negb
jmp
xchg
aas
mov
scas
mov
push
xor
adc
lret
mov
adc
sbb
repnz
xchg
test
jno
xchg
lret
xor
imul
sahf
sbb
ret
cwtl
inc
shlb
loop
mov
insl
pushf
dec
jno
jnp
push
add
in
inc
bound
jge
mov
adc
ficompl
lods
cltd
mov
or
or
aam
sub
aaa
cmp
imulb
jge
rcll
xchg
lret
add
pusha
pop
dec
hlt
sbb
or
imul
cmp
xchg
xor
arpl
dec
sub
xor
push
dec
loop
rcl
mov
mov
pop
xchg
mov
push
movsb
aas
push
pop
cmpsl
jae
jmp
fmuls
or
std
jbe
hlt
cmpsl
push
pop
movsl
mov
subl
dec
outsb
cwtl
cmpsb
xchg
out
pushf
sub
jl
daa
in
andl
lret
add
lods
test
jae
xor
jo
or
mov
lret
inc
adc
xchg
mov
jo
xchg
test
pop
lret
or
xlat
cli
add
push
cli
das
ljmp
aas
xchg
lret
xor
sbb
pop
dec
out
aam
mov
cmp
jmp
ret
fwait
lret
add
pop
call
push
mov
fstp
test
mov
jmp
shr
jo
sbb
pop
stc
add
lock
in
lret
inc
sub
into
nop
enter
cmp
cmc
jge
mov
int3
xor
jmp
leave
js
insl
jmp
das
push
push
ja
jge
mov
cmp
lret
sarb
lret
pop
adc
insl
xchg
lret
mov
and
or
in
ljmp
push
lret
jmp
xchg
add
jno
lret
mov
leave
jo
stos
mov
fiaddl
lret
shrb
fwait
push
sub
cli
jb
jp
push
lret
add
aas
pusha
sub
repnz
ss
push
and
jnp
pop
push
pop
jns
push
mov
out
lret
stos
fnstsw
sahf
pop
rcr
and
imul
stos
lret
cmp
dec
inc
les
mov
hlt
xchg
cmpsb
fwait
or
lret
ja
jge
push
mov
fiaddl
das
mov
pop
scas
sahf
cmp
lret
lcall
sti
lret
xlat
subl
imul
sbb
jp
lret
enter
in
pop
lret
scas
and
add
cs
mov
sbb
cli
push
cmc
xor
sub
sbb
jno
mov
jl
fcom
adc
aas
fsubrp
push
test
ja
lret
jl
sub
mov
divl
bound
sbb
mov
pop
hlt
out
and
cs
out
lods
ficomps
arpl
das
ret
stos
lret
sti
stos
xchg
mov
add
fisubl
xchg
cwtl
dec
test
and
xchg
cmpsb
idivl
xor
outsl
jb
pop
jno
jp
lods
fdivp
sub
adc
sbb
pop
cltd
lret
adc
xchg
and
fcomp
inc
mov
lret
repz
mov
outsb
stos
bound
sub
insl
jbe
lret
clc
sub
pop
pop
mov
pop
or
nop
inc
mov
cmp
lods
xchg
pop
dec
sti
mov
dec
lret
cli
mov
inc
fisubs
mov
std
mov
rorl
jo
dec
test
jb
xchg
es
xchg
dec
or
push
fcompl
mov
pop
aas
mov
jns
and
adc
jo
lret
xor
lret
push
lds
ja
or
loopne
subb
mov
jp
dec
lret
lods
lahf
adc
cwtl
lret
and
jne
fdivs
cmp
push
pop
add
xor
lret
shlb
and
mov
xchg
lret
cli
dec
ss
sub
mov
clc
xchg
adc
or
lock
outsl
addr16
sti
pop
mov
stc
xor
pop
lcall
sub
mov
jmp
and
xchg
jge
out
push
stos
cmc
or
mov
xchg
xchg
lret
stos
inc
mov
xorl
jae
in
std
lock
sub
add
hlt
les
in
out
push
lret
sbbl
push
mov
insl
leave
fldenv
out
add
push
xor
lds
pop
xor
mov
lret
cmpsb
jecxz
stos
jnp
lahf
sub
pop
mov
fwait
inc
xor
hlt
push
pusha
nop
dec
fisubrl
js,pn
pop
pop
push
xchg
mov
xchg
call
imul
ret
xor
popa
je
dec
inc
shrl
stos
inc
pusha
lret
mov
lret
dec
sarb
mov
xchg
clc
push
stos
in
shll
subb
imul
test
pop
lret
jno
scas
or
and
mov
or
sub
inc
cmp
mov
pop
out
adc
lret
mov
sbb
outsl
scas
jecxz
incl
lods
sbb
lret
jp
jge
xchg
pop
rolb
push
lret
ljmp
les
fadd
movsb
xchg
mov
unpckhps
cmp
lret
repz
lret
fisttpll
lret
dec
xor
lods
or
ljmp
push
xchg
cmpsl
lret
cld
pushf
fdiv
fucomi
cmp
ds
xchg
adc
xor
fiaddl
xchg
cld
push
push
xchg
fcoms
and
push
xor
lret
pop
mov
push
mov
xorb
sahf
add
lret
sbb
and
mov
in
pop
ret
clc
pusha
arpl
rclb
pop
jmp
and
or
sub
push
icebp
jmp
cmp
cs
movsb
rcl
lret
call
push
mov
jmp
sub
subb
js
ror
roll
jnp
push
add
pop
inc
jmp
aaa
out
sub
jg
je
jle
jecxz
and
iret
pop
ret
dec
scas
imul
and
aas
mov
add
addr16
pop
xchg
lds
xor
dec
cmp
add
inc
pop
mov
xchg
push
test
cld
dec
call
aad
aaa
lods
lea
xchg
add
xlat
xor
cmp
inc
xor
cmp
push
lea
ds
push
xchg
mov
sub
in
adc
scas
mov
mov
jp
ja
mov
lds
sbb
fwait
push
adc
cmp
lret
push
sbb
push
cs
rol
sub
pop
push
call
sub
fwait
addl
test
shlb
fs
lret
or
and
lret
ljmp
rcl
jns
pop
movsb
stos
cmp
ja
pop
xchg
negb
jo
jbe
sub
sbb
outsb
mov
mov
lret
aad
rcrb
lods
lret
fildll
lret
inc
push
fnstcw
cwtl
inc
rorb
sub
shlb
xor
cs
cmp
shll
xlat
or
push
fidivl
cmp
xchg
push
mov
jno
rclb
out
add
mov
lahf
leave
outsl
lret
in
add
loope
stc
add
out
ror
or
ret
insb
pusha
loope
lahf
clc
out
push
and
insl
cli
lock
mov
fcom
fcomps
cmp
lret
xchg
add
leave
fisubrl
lahf
fmuls
jne
dec
sbbb
dec
lret
dec
cmpsb
addr16
xchg
aas
cwtl
dec
jmp
fwait
cli
cld
shr
pop
mov
int3
lret
and
lret
adcb
sbb
stos
xlat
pop
sub
lret
icebp
aad
jne
insl
lret
in
cmp
xor
sub
loopne
sub
hlt
xor
out
stc
lret
movsl
xlat
dec
push
jo
sbbb
push
lret
jge
dec
or
lret
add
pop
adc
mov
push
lret
cmp
mov
push
aam
add
lret
rorb
mov
shl
mov
xorb
dec
inc
cmp
push
mov
xchg
xlat
cmc
pusha
jl
push
test
or
aaa
push
dec
lret
xor
lret
xor
bnd
pop
push
mov
cmp
push
inc
cmpsl
cwtl
inc
lret
push
scas
sbb
and
cs
cmp
lret
in
pusha
xchg
pop
add
in
ficomps
dec
ja
mov
rorb
das
scas
in
cmp
jle
shll
cmp
ds
lret
jo
adc
scas
lea
xchg
pop
or
movl
dec
hlt
into
loop
mov
mov
jnp
jp
test
lret
repz
xchg
fs
cmp
loope
adcl
dec
fwait
xchg
sub
adc
pop
xor
lret
cmp
dec
std
and
in
xchg
dec
add
imul
mov
adc
xchg
mov
in
fisubrs
inc
popa
test
lock
mov
adc
aad
imul
test
sub
lahf
shrl
pop
fimuls
lret
les
mov
pop
cmp
lret
push
sti
sbb
outsl
push
lret
sub
dec
std
lret
fsubr
loopne
jmp
stos
mov
mov
popa
xchg
pusha
mov
adc
cmp
cmp
js
xlat
and
pushf
lret
xorl
jnp
dec
inc
dec
mov
sbb
icebp
xlat
loopne
repz
add
jns
mov
push
jnp
or
push
sub
sbb
std
lret
ljmp
jecxz
pop
sub
shll
jbe
imull
cmp
or
lret
mov
mov
dec
mov
clc
lret
sbb
cmpsl
lret
stos
push
or
mov
shrd
out
popl
fsubrs
les
roll
sar
bnd
pop
mov
pavgb
das
xchg
or
int3
cmp
lret
repnz
stos
cmp
cli
in
bound
loope
and
lret
pop
cli
cwtl
adc
lret
enter
xchg
testl
scas
mov
mov
mov
pop
push
popa
sub
imul
clc
test
fadds
jge
lds
rcl
sbbl
mov
imul
aam
push
sbb
inc
test
ljmp
fdivrs
mov
adcb
cltd
lret
mov
mov
jl
stc
je
lods
cmpsl
mov
shll
mov
dec
lret
movsl
pop
fmull
xor
push
sbb
out
push
ret
lret
lret
daa
lcall
adc
push
out
outsl
sbb
cmp
shlb
out
lea
bsr
push
sbb
add
scas
mov
out
lret
mov
sti
lret
mov
and
test
jno
xlat
aas
test
push
sbb
je
scas
lret
jnp
fstpl
xchg
lret
lds
clc
test
jmp
sahf
pop
or
sub
mov
lret
or
leave
and
jl
ret
insb
push
fnstsw
inc
lret
pop
add
and
mov
adc
push
sahf
insl
mov
lret
xor
popf
sti
xor
sub
icebp
cmpsb
lret
inc
push
cmp
sub
inc
jne
adc
sub
mov
std
lret
or
dec
add
lret
repnz
pop
enter
mov
addr16
push
out
sti
mov
scas
mov
cmovno
lret
scas
out
int
lret
dec
sbb
cltd
fcmove
mov
sbb
inc
pop
sub
sbb
add
fstp
jge
loop
mov
jns
push
lds
jp
and
lret
ffree
adc
insl
sti
mov
xor
fwait
push
dec
out
div
and
mov
cmp
lret
ja
fs
stos
lret
loop
xor
pop
lret
sbb
out
xchg
int3
add
icebp
add
push
aas
sub
pop
inc
popf
mov
lret
cmpsl
movsl
add
ja
popf
jmp
jl
pop
lret
push
inc
xchg
mov
test
cli
or
ljmp
xlat
insb
sbb
or
pop
call
js
lret
jne
and
sub
push
cmpl
ficoml
xchg
add
lret
int
adc
lods
cmpl
ljmp
rcr
mov
mov
sbb
xor
lret
fs
aas
adc
in
sub
aaa
inc
mov
aam
inc
sbb
cli
int
aad
nop
inc
push
mov
pop
mov
hlt
fsubp
test
lret
pop
test
in
push
sub
adc
xchg
cwtl
aam
arpl
dec
pop
nop
mov
cltd
mulb
lock
fisubl
sbb
add
test
push
add
das
cld
mov
lret
pop
iret
push
or
xchg
aam
movl
mov
mov
pop
das
orl
lret
lahf
or
add
and
pop
sub
int
inc
jbe
stos
lcall
cmp
pop
lahf
pop
or
rolb
out
inc
iret
int
es
and
lret
or
aaa
xchg
out
lret
inc
loop
xchg
cmpsl
aad
inc
push
mov
pop
dec
xor
and
popa
mov
or
lret
or
out
icebp
jl
mov
add
loope
lods
out
add
cltd
mov
jp
rolb
mov
lret
mov
xor
xlat
and
repz
test
push
cmp
rcr
jmp
lret
leave
dec
iret
scas
call
push
lods
add
rcrb
out
lret
inc
and
loope
mov
in
and
sbb
ret
adc
leave
mov
inc
sub
out
dec
xlat
lret
jge
outsl
sbb
cli
mov
dec
sbb
out
lods
push
xchg
lret
push
aas
out
mov
sti
sbb
negb
std
lret
jp
jae
leave
sbb
in
sti
xorb
mov
jp
lret
mov
mov
bound
sub
dec
test
je
and
pop
ja
dec
jo
cmp
xchg
cmp
das
add
cwtl
imul
adc
lcall
or
add
lret
and
imul
jae
movsb
mov
mov
lret
fdivrl
push
adc
imul
mov
sarb
mov
arpl
mov
xor
rcrl
jb
jnp
sub
fisttpll
xchg
fcoms
jge
rcrb
xchg
add
adc
mov
push
sub
cs
sbb
add
push
push
ds
imul
push
test
fbld
jecxz
sbb
clc
lret
or
ret
iret
dec
sbb
lret
leave
lcall
xchg
xchg
rol
sahf
orb
pop
aam
int3
mov
adc
lret
data16
popf
add
loop
aaa
pop
xor
adc
aas
lret
dec
sbb
inc
inc
icebp
lret
xorb
jge
lret
xchg
cs
mov
mov
fimull
dec
pop
sbb
mov
mov
lret
xor
mov
mov
popf
inc
test
inc
sub
jp
mov
jl
test
mov
arpl
out
mov
pop
std
rdmsr
rolb
pusha
sbb
or
ja
outsl
and
shlb
or
cld
sub
movsb
pop
pop
or
fwait
adc
add
ficoml
jae
mov
jg
mov
mov
and
lret
jb
jmp
aas
loope
sbb
dec
jne
lret
lahf
popf
movsl
ret
lret
fstps
fisttpll
cmp
fsubs
mov
in
mov
sbb
sarb
jg
outsl
lret
insb
out
push
sbb
lret
fnsave
ljmp
mov
mov
dec
iret
adcb
lret
nop
push
push
lcall
ja
xchg
cmpsl
mov
jl
or
jmp
jmp
adc
mov
lret
add
push
adc
mov
xor
in
inc
lret
mov
orl
inc
add
in
xchg
shrb
jno
loopne
cmp
shrl
cwtl
xchg
call
loop,pn
xchg
sub
lods
jbe
lret
add
ljmp
push
lret
xchg
cmp
mov
inc
push
pop
stos
fmuls
dec
xor
adcb
lret
push
cwtl
adc
leave
iret
add
inc
fmuls
aas
fnstsw
pushf
lret
cmp
cli
popf
jmp
jbe
sarb
mov
int3
mov
ret
lretw
sub
lret
aas
add
fistps
aad
lret
pop
mov
stos
cmp
mov
lret
ss
add
pop
mov
cmp
mov
jne
les
in
mov
cmp
mov
sarb
cs
lret
and
and
pop
stos
push
pop
mov
lret
add
push
mov
jnp
test
and
bound
lret
inc
arpl
outsl
dec
es
into
dec
out
icebp
jmp
jbe
andl
xchg
cli
lret
inc
insl
cmp
sbb
jmp
leave
adc
rcrl
jg
mov
push
lret
xchg
ss
imul
lret
jle
cmp
mov
sti
das
add
test
aam
xchg
sbb
push
cli
xchg
int3
pushf
mov
or
negl
dec
ss
sbb
addb
cli
dec
in
in
lea
fistpl
movsl
addr16
dec
gs
outsb
mov
pusha
jnp
sbb
sub
neg
fstl
popf
pop
sbb
mov
xchg
loop
mov
rclb
lea
inc
push
cmc
push
fdiv
sbb
stc
add
xchg
and
sub
cli
lret
stos
jp
push
ror
imul
nop
lret
mov
dec
in
repnz
repz
push
adc
lret
add
mov
pop
stos
fstps
rcr
sub
adc
mov
andl
cmp
rorb
mov
add
test
lret
call
jae
mov
dec
mov
ljmp
lahf
adc
jle
mov
xlat
cmpsl
cs
scas
rcll
in
or
out
cwtl
push
push
ror
pop
aad
cld
adc
rclb
or
lret
movsb
cmp
cli
ret
fcmove
or
gs
cltd
repnz
and
mov
mov
lret
cmp
mov
cltd
std
test
sub
loope
lret
iret
push
daa
mov
dec
jge
lock
push
cmp
popf
lret
dec
arpl
dec
mov
stos
imul
sub
aam
test
push
and
add
lret
push
cmpsl
hlt
push
mov
push
iret
jg
test
lret
mov
pusha
fimull
xchg
cmp
cmp
pop
mov
jne
rorl
lret
insb
ja
mov
mov
fidivl
add
lret
adc
shlb
sub
push
xor
lret
adc
test
mov
lret
cmp
insl
fldl
lret
rclb
lret
xor
push
lahf
jecxz
stos
cli
loopne
enter
pop
mov
gs
hlt
aaa
fnstcw
adc
sub
add
lret
ret
enter
ljmp
into
sbb
cli
pop
fdivp
xchg
push
sbb
lret
js
push
mov
and
shrb
int3
pop
lret
xchg
cmp
stos
push
test
push
mov
les
sbb
or
arpl
rol
fsts
or
out
out
mov
pop
popa
shll
add
addr16
pop
xor
mov
mov
hlt
or
mov
inc
xchg
mov
clc
test
int
jg
mov
loop
mov
mov
xchg
xor
fldcw
jmp
stos
std
lahf
mov
lret
aad
inc
pop
and
dec
fwait
sbb
fidivrl
mov
ja
push
xor
jle
roll
leave
pop
xchg
and
inc
add
sahf
stos
mov
push
lret
sti
push
jbe
and
lds
xor
mov
lret
fsts
push
mov
lret
mov
les
push
data16
in
iret
fs
cmp
or
int
pop
sub
jns
dec
nop
jge
sbb
mov
lret
popf
and
sub
push
loope
push
bound
pop
in
mov
push
dec
lds
lret
jno
popf
xor
lret
jo
xor
mov
ficoml
mov
dec
rcl
dec
lret
xor
push
in
stos
add
ds
pusha
dec
xlat
cmpsl
pop
icebp
lret
addl
lret
sarl
mov
adc
in
lret
cmc
or
lret
imul
sbb
scas
fmul
dec
push
push
lcall
inc
jb
lret
add
jle
jecxz
mov
rorb
xor
pop
lret
lahf
sub
test
gs
das
lret
xchg
mov
pop
shll
xlat
lods
fxch
nop
or
ljmp
cmp
push
daa
mov
sub
lcall
in
mov
push
mov
add
lret
pop
adc
mov
xor
pop
jbe
fwait
ja
sub
fcmovb
stos
je
push
lret
sub
mov
cli
inc
into
lret
mov
xor
inc
cmpsl
dec
or
mov
andl
jp
sbb
push
mov
icebp
loope
push
sub
hlt
in
adc
jae
shl
jl
lret
inc
clc
sbb
cmp
orb
jge
loopne
lret
test
aaa
push
lods
and
cmp
pop
cmp
lret
gs
mov
dec
in
fcoml
jb
mov
int3
cld
mov
aam
inc
pop
cwtl
jmp
dec
lret
repz
add
or
add
rcl
mov
or
dec
push
mov
repz
test
adc
or
sbb
insl
dec
dec
rorb
jo
cli
test
pop
sub
aam
and
lret
nop
dec
scas
mov
sub
call
aaa
sub
dec
aam
sbb
dec
mov
lret
scas
fdivrl
pop
dec
in
jmp
sarb
int3
jno
cltd
test
inc
fwait
idiv
pop
adc
adc
shrb
lcall
repnz
mov
add
xor
lret
lds
inc
lret
insb
std
cmp
fnstenv
and
lret
out
dec
test
stc
push
ficompl
push
dec
out
outsb
int
jle
jbe
mov
or
dec
cltd
lret
jp
testl
jmp
xchg
cmp
dec
or
int
xor
cmp
rcll
xchg
test
lock
jne
fsubrp
loopne
jecxz
scas
fistps
lret
int
add
out
lret
fsubs
lods
loope
mov
inc
mov
cmp
popf
test
inc
js
lret
or
cwtl
lret
jl
dec
xor
test
pop
hlt
decl
push
xor
pusha
lret
std
scas
int
cmp
stos
mov
xchg
cmc
imul
xchg
in
lret
repnz
stos
jnp
shl
or
popf
xchg
pop
xor
xor
sti
icebp
jl
inc
sbb
and
aas
mov
pop
push
inc
xor
stos
adc
icebp
mov
stc
mov
jne
cmp
xchg
xor
push
xorl
pop
fdiv
lret
push
inc
cltd
into
jbe
fwait
test
and
sub
jge
lret
push
pop
mov
loopne
je
ljmp
lret
sub
push
es
push
sub
pop
adc
xlat
fs
test
push
test
cmc
loop
outsb
pop
daa
pop
lret
lods
loopne
jl
sub
xchg
mov
addb
push
loope
shl
xor
mov
aad
xor
fisubl
sub
xchg
arpl
lret
fdivp
xlat
testl
push
dec
cmp
aas
popaw
add
mov
lcall
pop
push
lret
enter
xchg
lret
in
xchg
sahf
aad
lret
inc
mov
ss
call
jmp
lret
xor
lret
outsl
lret
fbld
loope
les
movsb
jnp
inc
test
xlat
stos
sub
std
sarl
jp
jmp
out
lds
mov
cmp
lret
test
fisubrs
test
cwtl
addr16
mov
mov
inc
pop
mov
js
stos
fs
std
sarb
aad
dec
xchg
pop
ret
cmp
sub
imul
stos
ficompl
inc
fstpt
call
gs
cwtl
dec
xchg
outsb
rorb
jge
rclb
pop
movsl
jbe
lret
xchg
inc
inc
mov
bound
inc
add
mov
aas
insl
out
lret
and
in
push
imul
mov
sub
mov
aam
lret
rorl
cmp
icebp
mov
adc
xchg
ret
mov
mov
aas
popa
sub
ret
lret
push
aam
stos
test
adc
push
shl
fmulp
andb
cli
dec
inc
sar
stos
mov
out
add
add
jo
je
mov
cmp
int
and
dec
lret
push
or
test
out
test
insl
clc
pop
cmpsl
push
pop
push
nop
jp
imul
sub
mov
clc
inc
fmul
pop
dec
mov
loop
shrb
bound
cmp
or
movsb
xlat
add
dec
pop
and
scas
push
mov
mov
mov
mov
fstps
cmp
pop
or
mov
fs
in
je
jb
cmp
scas
cmp
into
lret
lea
sub
mov
mov
push
lret
sub
dec
sbb
lret
das
into
or
cs
daa
push
fcoms
int
lret
cmp
mov
cli
pop
cmp
popf
pop
lret
divb
loopne
mov
stos
pop
shrl
dec
arpl
xchg
shlw
mov
pop
lret
pop
daa
ficoml
sub
xchg
or
lods
cmp
fldcw
mov
push
les
mov
cmp
sti
ret
stos
xor
jg
sub
movsl
adcb
inc
fcom
jle
lea
push
dec
daa
insl
in
data16
mov
cmp
mov
xor
out
aaa
nop
mov
lahf
cli
pop
dec
mov
sub
push
out
cwtl
outsl
jp
push
pushf
rorl
mov
cli
aas
loop
shl
push
loopne
lret
movsb
jmp
push
enter
mov
or
sti
shlb
rcrl
cmc
dec
sahf
aam
xor
imul
cld
sub
sub
inc
or
jg
cli
add
in
int
in
pop
cmp
and
pop
lods
xor
je
scas
jle
mov
pop
call
xchg
cwtl
aad
stc
pop
jl
jge
xchg
jmp
lret
inc
ror
sbb
sub
jns
fucomi
lret
dec
lock
rcll
rcrb
cmpsl
in
jns
lret
out
shr
ja
lret
push
push
addr16
lret
sub
sbb
out
aas
sbb
mov
lods
stos
xor
mov
or
test
push
lret
iret
sti
fdivl
mov
push
inc
lret
sub
dec
dec
fimuls
xchg
jnp
or
lret
aaa
mul
add
dec
lret
inc
push
in
push
cmp
sti
stos
push
or
push
xor
iret
out
sub
jl
fisubl
js
rcrb
fcomps
lret
xchg
pop
es
mov
mov
lret
jo
add
js
int3
popf
ret
movsb
aam
mov
adc
mov
xchg
sub
push
scas
pop
add
push
and
lcall
add
les
jno
jbe
rorb
xchg
addr16
and
dec
xor
sub
pop
xchg
mov
popf
mov
imul
lret
mov
into
lret
pop
mov
xchg
pop
jle
leave
lret
or
or
ret
mov
lret
mov
and
out
leave
jp
mov
sahf
iret
clc
lret
fnstsw
shlb
and
push
mov
test
pop
adc
jno
incb
fiaddl
repz
xchg
int
pop
iret
js
lahf
pop
icebp
sub
in
int3
jmp
aam
pop
or
mov
mov
cmp
andl
xchg
lret
arpl
leave
lret
int
or
jmp
lret
stos
les
inc
lret
das
ljmp
lahf
and
fiaddl
or
das
aad
xor
dec
ljmp
pushf
ficomps
arpl
test
add
push
popa
dec
xlat
push
mov
lret
sub
jno
cmc
sbb
sahf
push
in
sbb
or
je
and
cmpsb
repz
pmaxsw
and
inc
lret
notb
insl
sub
dec
lret
cltd
mov
lret
ja
ljmp
add
inc
sub
jg
int3
jge
mov
stos
std
mov
insl
into
ret
fisubrs
jmp
lret
es
je
fdivr
int3
mov
lret
sbb
cmpsl
stos
test
cmp
sbb
push
sub
loop
ljmp
dec
jno
xchg
xor
cld
rcl
mov
rcr
pop
mov
mov
fidivrs
sbb
popa
push
push
add
std
push
jge
push
cmp
mov
mov
sbb
js
inc
inc
and
cmp
xlat
adc
lret
mov
mov
cli
insb
dec
xchg
push
mov
rorl
pop
lret
mov
lret
test
cmp
ror
lret
cmp
and
mov
jl
fs
cmp
shlb
mov
cli
mov
repz
aas
fwait
adc
lret
data16
xchg
pop
ljmp
rorb
lcall
dec
js
push
jge
mov
insl
ss
add
jmp
gs
and
lret
xchg
movsb
mov
pop
out
cmp
popa
dec
dec
inc
stos
push
addr16
ljmp
rclb
in
add
adc
or
ficoml
mov
ret
lea
out
cmpsl
jb
lret
jno
adc
int
add
aaa
pop
fildl
sub
call
push
clc
pop
cli
xor
fsts
ds
mov
bound
aam
mov
and
in
test
xor
daa
test
or
jle
loop
outsl
xchg
and
jnp
jb
loopne
popa
imul
arpl
into
xlat
sub
lret
ficompl
lret
aad
lea
addr16
inc
imul
push
or
dec
jns
push
sub
push
aad
lret
dec
jge
or
lret
stos
data16
mov
lret
pushf
xorb
push
or
xor
into
test
icebp
loopne
pop
andb
insl
js
cmp
repnz
sub
pop
test
shlb
aam
sbb
xor
lret
test
cli
iret
xchg
inc
jno
cli
aam
adc
pushf
leave
add
cmpsb
cs
dec
stos
dec
sbb
ss
mov
shlb
inc
addb
frstor
xchg
fcom
icebp
lret
fistpl
lret
and
xchg
add
ficompl
mov
scas
int3
fbld
outsb
cmp
xchg
mov
xchg
xchg
lret
pop
orl
out
cld
lret
or
dec
ret
das
and
cmpsb
lret
js
cmp
bswap
in
cs
push
cmc
lds
jmp
repnz
lret
inc
add
or
mov
leave
in
xchg
rorb
mov
lret
adc
loopne
jmp
push
lret
stos
mov
jge
push
inc
cltd
pushf
adc
pop
cwtl
and
xor
cli
iret
shll
adc
mov
sub
push
filds
cmp
rclb
lret
dec
rep
inc
shll
mov
pop
adc
push
int3
lret
or
inc
scas
jle
daa
mov
xor
cli
fisubs
add
add
orl
int3
cmpsl
pop
lret
hlt
xchg
std
enter
movsb
call
inc
cmp
xor
mov
movsb
fnstsw
lret
loopne
jl
mov
pusha
incl
popa
add
mov
adc
movsl
mov
mull
dec
dec
lret
decb
stos
dec
mov
call
aas
std
gs
divb
mov
xchg
lret
daa
sbb
inc
jmp
int
dec
rcll
sti
fisubl
pcmpeqw
pop
enter
and
push
mov
dec
lret
ret
ja
fdivrp
jo
jp
or
xor
out
test
push
cmp
push
shlb
mov
mov
aas
mov
aad
das
out
mov
mov
mov
rolb
inc
lret
cmova
or
mov
sub
lret
mov
mov
xor
adc
xchg
in
int
xlat
lret
insl
fadd
out
subb
xor
lret
xchg
and
rcrb
pop
dec
sub
clc
das
aad
ss
sti
mov
mov
inc
jo
cli
push
pop
gs
fisubrl
pop
mov
pop
aas
lret
xchg
out
dec
inc
hlt
test
mov
popl
gs
sub
fwait
add
bt
fstps
ret
mov
jns
loopne
cmpsl
ret
cltd
pop
push
jp
out
lret
add
xorb
pop
mov
push
mov
dec
or
cs
sub
sub
test
adc
sti
lret
je
out
lock
xchg
cltd
lret
adc
mov
sub
sarb
and
inc
push
lret
xor
mov
sbb
movsl
lret
loopne
mov
mov
in
pop
aaa
out
adc
idivb
sbb
inc
pause
aaa
push
sbb
ret
add
fwait
mov
push
fnsave
bound
cmp
rorb
out
fldcw
lret
std
mov
cmpsb
je
lret
stos
push
movsl
sahf
add
inc
fwait
cmp
push
mov
insl
ljmp
rclb
cmp
lret
push
and
lret
inc
add
pop
hlt
lret
ds
insl
adc
mov
mov
dec
imul
adc
sahf
jmp
ficoml
int3
or
pusha
xchg
dec
add
jnp
dec
inc
jl
cs
jmp
mov
cltd
cld
push
lret
testl
sub
mov
inc
mov
pop
push
lret
ret
xor
lret
mov
and
mov
push
sbb
pusha
xor
js
pop
fwait
jg
out
in
pushf
scas
stos
je
cltd
inc
test
bswap
int3
out
jle
and
loopne
lret
jae
jg
roll
imull
hlt
dec
cli
lret
fisubs
rcrb
addr16
jbe
rcrl
xorl
push
rorb
sar
push
or
jno
in
sub
test
int3
sbb
and
pop
lret
lcall
leave
push
fisubrs
push
arpl
mov
or
outsb
jnp
or
imul
stos
jb
test
test
sbb
push
jnp
rcrb
xor
or
cmp
mov
filds
dec
jo
jge
out
xchg
mov
push
ds
negb
scas
mov
iret
ss
lret
mov
pop
or
xchg
movsl
add
movsb
loop
dec
fcomp
scas
and
sarl
xor
mov
lret
mov
pusha
or
lret
outsb
in
cmp
cmpl
dec
fildl
fldenv
pop
ljmp
add
insl
lret
aaa
xchg
or
push
jg
and
push
jnp
cmpsb
shl
mov
fistl
or
stos
bound
enter
cmp
dec
ds
scas
shrl
mov
xor
shrb
mov
fnstcw
gs
ljmp
jae
and
lcall
test
push
aam
push
lret
jge
mov
ljmp
mov
fdivrl
add
std
pop
or
mulb
inc
stos
pop
push
cltd
jo
push
outsl
jno
mov
lret
adc
push
out
cmp
hlt
rol
ret
xchg
xchg
insl
flds
adc
or
das
fcoml
push
or
es
mov
jb
cmp
int3
push
cmc
insb
xor
ja
fcoml
cmp
int3
das
mov
and
arpl
cli
mov
out
cmp
or
fstpt
add
cli
rcrl
shrl
and
bound
in
xlat
ljmp
fadds
xor
mov
hlt
dec
lret
lcall
lret
push
rol
push
pop
scas
ficompl
mov
sbb
adc
and
push
call
cli
clc
mov
mov
insb
addr16
xor
in
jg
mov
sar
jnp
call
rcrl
lret
mov
sti
lret
js
jbe
jne
lret
stos
popf
into
jnp
cli
sar
fstpt
int
jle
cmp
loope
xchg
notb
clc
lret
test
sbb
dec
lods
and
pop
pop
or
es
dec
lods
fwait
movl
xchg
adc
jnp
in
xlat
or
mov
not
inc
pop
add
inc
pop
mov
fdivs
rorb
lret
sub
test
adc
or
stc
pop
lret
mov
xorl
ja
flds
xchg
mov
push
sub
lret
inc
mov
dec
lds
jae
cwtl
mulss
rcll
lret
xor
xchg
adc
mov
test
jmp
stos
pop
mov
rolb
lret
add
mov
jb
sarb
sub
push
sar
lret
pop
jmp
ja
sar
push
das
xor
fwait
lock
imul
sub
or
adc
dec
call
pop
and
sbb
push
in
movsb
lret
cmpsl
cmp
mov
lret
mov
aas
lret
inc
xor
insl
push
out
mov
stc
lret
addr16
dec
fists
dec
cwtl
fsubrs
ljmp
shlb
cmpsl
pop
dec
pop
lret
mov
cmpsb
cli
mov
mov
and
lret
and
jb
sub
xchg
push
loope
push
ljmp
fnstcw
add
lret
call
mov
pop
jge
test
cmp
repz
sbbl
lret
mov
mov
dec
adc
inc
adc
mov
into
roll
adc
mov
stos
cmp
xorb
dec
adc
fs
inc
mov
aas
rcll
nop
mov
lret
xor
and
mov
js
push
pop
mov
mov
dec
test
lret
xchg
loopne
in
sarl
flds
fcmovu
mov
cmp
stos
jmp
loope
leave
ljmp
cmpsl
ror
pop
mov
cltd
push
xchg
and
mov
fidivrl
inc
in
push
jl
stc
dec
mov
add
enter
shrl
push
jbe
mov
pop
mov
xchg
lret
iret
push
fcoms
pop
out
cmp
sbb
mov
sbb
cmc
lea
lret
test
mov
gs
lock
mov
popf
jns
in
push
dec
mov
jmp
subl
jl
pop
std
xlat
clc
test
inc
sbb
notl
ja
lret
popf
mov
pop
pop
es
cmc
pop
inc
loope
xor
arpl
outsl
dec
xchg
xchg
mov
in
mov
dec
mov
dec
mov
js
movl
push
mov
stos
data16
test
jae
dec
and
push
cmp
lret
cwtl
xor
cmp
sbb
pop
xlat
and
in
jg
xor
pop
mov
aam
adc
sbb
fdivp
cmpsl
lret
stos
out
mov
lret
pop
aam
sbbl
dec
cmp
mov
jg
nop
add
and
inc
insl
lods
jno
cmp
fistps
mov
test
into
scas
cld
lret
ja
pop
sub
ss
mov
dec
xor
lods
jbe
js
sub
hlt
ror
sbb
inc
or
and
mov
lret
fiadds
xchg
add
and
sbb
fistl
test
ja
cmp
jns
fmull
pop
ds
lret
add
lret
mov
out
into
loope
fdivrl
test
pop
dec
lret
dec
push
popa
dec
fidivs
loope
fnstenv
inc
dec
and
xorb
push
and
push
flds
pop
inc
test
xchg
stos
fstl
out
mov
mov
loope
dec
dec
jge
inc
aad
jne
popa
push
shl
popa
in
int
sub
stc
scas
sti
mov
cmp
jnp
fwait
mov
xchg
ror
push
in
cltd
sbb
call
push
push
stos
scas
jno
aam
mov
pushf
movsl
lret
pop
fucomp
lcall
xchg
je
rcrl
ret
pusha
mov
mov
fsubrs
int3
or
mov
add
icebp
pop
jno
lret
sub
and
pop
stos
or
loop
leave
mov
sarb
ds
lret
lahf
push
cmp
out
not
aad
lods
mov
iret
popf
fimull
rcl
cmp
adc
mov
call
push
or
jns
lret
in
gs
movsb
int3
loop
xchg
adc
mov
xchg
push
imul
ljmp
cmovge
ret
repnz
roll
jb
or
mov
cmp
cwtl
sarb
ret
mov
popf
adc
jp
xor
stos
push
mov
fildll
pop
and
jl
clc
ds
mov
je
fcoms
call
pop
out
stos
push
in
or
or
dec
adc
push
mov
icebp
loop
add
scas
and
mov
punpcklwd
lret
das
jb
xchg
push
inc
stos
lds
or
dec
push
dec
fimull
imul
aas
pop
cmc
sbb
stc
sbb
xor
iret
push
push
popa
mov
inc
jnp
loop
and
xlat
add
or
outsb
lret
sbb
mov
shr
xchg
inc
add
les
xchg
lds
cmpsl
lods
sbb
je
sbb
test
lret
xor
or
loop
mov
stos
mov
int3
dec
sub
jb
jns
inc
mov
pop
add
in
aaa
fsubp
or
rorb
mov
pop
mov
sar
arpl
xchg
cmp
adc
cmp
inc
cmpsl
insl
mov
popa
lods
xor
sub
in
cli
sbb
repnz
push
aam
cmc
fmul
mov
jno
mov
loop
xor
popf
add
lret
mov
xchg
test
mov
loop
mov
pop
push
add
into
mov
rolb
mov
icebp
aad
fidivrl
pop
cltd
fs
fidivl
jle,pt
stc
sbb
inc
mov
pop
or
lret
les
loope
xor
mov
xor
jge
or
enter
cmp
jns
jbe
sbb
mov
jge
lret
adc
scas
nop
lret
test
push
popa
fyl2x
ljmp
fdivs
jl
data16
or
in
sti
lds
xchg
ja
pusha
inc
xchg
dec
in
movsb
adc
lret
xor
divl
insl
add
fcoms
mov
pusha
or
fisubrl
loopne
in
cmp
mov
rolb
popf
out
mov
sbb
jns
add
bound
stos
ja
iret
ret
jl
xor
inc
std
test
cmc
ds
lret
int
in
ret
orb
push
int3
xor
fidivrs
fstl
jae
pop
push
cli
lret
xlat
add
dec
stc
aas
lret
mov
jl
jle
push
ds
dec
loopne
add
lret
xchg
mov
mov
cmp
mov
leave
movsl
ja
cli
movsb
or
jge
or
lcall
ljmp
jp
call
jle
sbb
icebp
shlb
mov
pusha
add
repz
out
jo
clc
dec
daa
lret
inc
fwait
cltd
inc
ror
mov
repz
mov
push
fwait
add
add
pop
scas
dec
sub
mov
mov
ror
mov
test
fsubrs
pop
lret
mov
sti
lret
jns
and
decb
pop
or
adc
lret
aas
jbe
inc
lret
popa
das
pushf
push
cmpsb
aad
sbb
test
loope
stc
lods
lret
mov
inc
leave
jnp
mov
mov
or
mov
psubb
dec
xor
xlat
shl
lret
lea
stos
adc
mov
test
or
outsl
je
and
lret
ret
xchg
jne
mov
les
cld
mov
fcoms
lret
out
xor
lcall
testb
jl
sub
sub
lods
lods
lret
adc
mov
jge
shll
push
xlat
int3
aaa
jmp
jnp
or
lret
in
std
xor
mov
popa
hlt
mov
add
mov
pop
lret
dec
fcom
rcll
mov
call
inc
or
or
dec
out
insb
add
adc
bndldx
cmp
test
lods
xor
scas
dec
push
or
fwait
cmp
mov
aam
xor
sbb
cld
pop
les
mov
repz
rorb
inc
cmpsb
mov
aam
int
hlt
push
lret
sahf
leave
or
add
sbb
adc
lret
xor
or
cs
fsub
add
mov
ficoms
inc
xor
add
lods
push
mov
cmp
sbb
shlb
je
lret
insb
push
shlb
ss
push
shlb
call
js
mov
xchg
popf
dec
jp
pop
mov
hlt
and
cli
icebp
cmpl
xchg
jno
fs
jl
lret
xchg
jmp
sub
rol
cmp
pop
cmp
inc
lret
pusha
mov
fdivrs
jle
lret
mov
lret
enter
pop
fimuls
jge,pt
stc
lret
jno
fwait
aaa
sub
xor
test
dec
or
dec
popf
nop
loopne
lahf
dec
pop
repnz
inc
mov
outsl
lcall
cwtl
mov
je
pop
push
add
mov
dec
fisttpl
repz
jnp
mov
cli
fistps
lret
mov
push
xor
sbb
xor
decb
adc
mov
cmovnp
lret
xchg
cli
push
outsl
out
cli
mov
and
jg
shrl
cmp
sete
inc
mov
inc
out
mov
fucomi
cmp
jge
mov
xor
lret
add
test
dec
out
idivb
cmp
or
repz
pop
jl
push
inc
sbb
scas
dec
cmp
xlat
mov
es
xchg
lret
lods
dec
int
sbb
jge
push
mov
rorb
adc
loope
test
xchg
stos
mov
mov
cmpl
movsl
push
sub
gs
pop
adc
shlb
inc
sbb
pushf
test
fistps
xchg
sbb
mov
fsubr
lret
mov
pop
sub
and
ret
stos
rcr
repz
inc
lock
cwtl
xchg
sub
leave
jmp
jmp
sub
jg
fwait
sbb
mov
inc
lret
jae
and
jne
and
xor
mov
out
lods
push
cmpsl
fidivs
mov
sub
or
xor
stc
fimuls
jmp
sub
pop
nop
fmull
add
xor
lret
add
lret
fbstp
lret
mov
lcall
push
inc
mov
jo
jb
outsl
lret
les
fsub
lret
mov
orb
mov
fmulp
jnp
testb
lret
stos
popa
in
mov
lret
mov
dec
sti
in
mov
lret
mov
jbe
and
ljmp
mov
movsl
stos
divl
test
mov
mov
lret
ret
fsubrs
lahf
inc
push
xchg
jmp
cltd
bound
cmp
lret
lret
loop
adc
cmp
push
lretw
adc
sbb
cmp
sbb
stos
fidivrl
lret
mov
cwtl
icebp
imul
mov
std
leave
lret
test
dec
xor
mov
xchg
pop
rcl
int
lods
sti
lret
push
pop
xchg
dec
adc
stos
cmc
arpl
sbb
and
sarl
mov
jp
or
scas
aam
pop
inc
stos
div
mov
hlt
les
in
or
or
cmp
loop
repz
call
lods
or
insb
mov
data16
addb
mov
mov
into
mov
scas
fmuls
jecxz
dec
mov
shll
cmp
test
push
jmp
dec
mov
bound
ja
xchg
jae
jle
xchg
push
in
clc
int
jbe
repz
lods
inc
es
dec
das
lret
xchg
fdivrs
out
addr16
sbb
xadd
jbe
mov
andb
or
inc
stos
sbb
les
and
call
std
add
repz
shrl
jbe
into
cmp
rclb
lret
fs
lcall
push
and
lret
test
inc
mull
stos
push
adc
daa
or
lret
aas
test
mov
sbb
rclb
int
add
mov
outsl
sbb
daa
mov
inc
ror
cld
test
cmp
addr16
int
in
es
clc
fwait
lret
aaa
jnp
fnstcw
or
jno
cmc
xchg
xor
clc
xchg
int3
out
lret
lret
xor
dec
push
arpl
lret
lods
nop
xchg
incl
sub
cmp
xchg
jge
out
or
lret
int
daa
clc
adc
inc
nop
fsubrl
stc
inc
shlb
rclb
mov
dec
lret
unpckhps
call
jmp
je
and
lods
pop
xor
shr
leave
sbb
add
fmuls
popf
add
xlat
add
mov
dec
or
mov
lcall
mov
push
shlb
imul
mov
fs
dec
into
mov
pop
test
das
fcmovne
xchg
lods
fidivrl
jg
xlat
je
pop
stc
aad
pushf
mov
push
fadds
push
lret
and
sub
push
rol
dec
xchg
loop
pop
dec
mov
push
lret
outsl
cli
mov
and
xchg
push
adc
lret
cmpsl
pop
ds
pop
sbb
out
hlt
lods
mov
test
addr16
sbb
sub
mov
cmp
leave
fistps
and
fisubrs
sub
inc
mov
adc
imul
mov
cmp
xor
daa
lret
dec
adc
mov
add
xchg
nop
lret
jl
or
pop
ror
roll
push
lret
iret
dec
icebp
mov
lret
xor
pop
lret
mov
cmp
push
outsb
sti
mov
lret
dec
mov
lret
jno
in
ds
lret
xchg
pop
sub
xchg
scas
cmp
dec
fdivr
mov
push
ret
inc
pop
idivb
jnp
pop
jb
jae
lret
adc
sarl
ficoml
ds
cltd
and
loop
enter
fldl2t
lret
add
sub
data16
xor
xchg
pusha
lods
loope
fidivl
pop
imul
pop
cwtl
or
inc
sbb
fdivrs
adc
fnsave
bound
inc
aad
mov
testb
or
loop
pop
pop
rorb
sahf
lods
je
cmpsb
inc
int3
mov
mov
adc
cmpsl
lea
sub
in
cwtl
popf
inc
jae
and
lret
xor
imul
pop
call
out
ror
push
mov
adc
negb
adc
mov
loopne
mov
repz
mov
cwtl
mov
push
sbb
jecxz
fisttps
xor
pop
inc
xchg
inc
insl
push
addr16
ds
xor
lods
idivl
lret
fadds
mov
push
es
outsl
mov
fadd
fildl
mov
dec
cmp
xor
push
insl
mov
addb
enter
stc
pop
repz
imul
movsl
adc
shrb
dec
cmp
shlb
fsubs
cwtl
pop
cmp
sahf
ja
fisubs
hlt
lcall
cmp
shll
clc
les
mov
idivb
jp
lret
imul
cmp
ljmp
sarb
lret
sar
cmp
lret
add
lret
insb
mov
ja
test
inc
xor
aad
xchg
xchg
lret
fmulp
and
inc
pushf
pop
adc
or
xor
sar
jecxz
lret
mov
dec
cmp
addr16
repz
push
jg
orb
mov
inc
push
orb
lret
fists
shll
dec
lret
loope
and
inc
and
sbb
popa
shl
ja
inc
cmp
nop
decl
jmp
add
movsl
sbb
fnstcw
rorb
add
fsubrs
xor
xchg
sbb
add
jl
ret
loop
xor
cmp
addr16
stc
roll
jo
fwait
inc
inc
dec
lret
push
dec
push
ror
xchg
fwait
mov
scas
xor
dec
mov
into
pop
add
loope
idivl
push
or
sub
lret
sub
push
lcall
sti
jp
add
or
cmp
push
ds
sbb
iret
push
rorl
sarb
dec
je
lret
lahf
sub
cli
cmp
xchg
lea
jb
lret
lock
xchg
in
lret
sarl
sti
mov
fnsave
sbb
aaa
dec
xlat
lahf
fs
or
lcall
mov
test
jno
lret
pusha
jge
cwtl
rcl
inc
add
mov
pop
sbb
pop
in
inc
mov
mov
out
lret
jecxz
mov
push
inc
mov
or
fldt
push
stc
lret
rolb
popl
xchg
push
mov
xor
gs
mov
enter
and
fcomps
jnp
push
sub
imul
jp
jp
aaa
shlb
stos
fchs
inc
lret
insb
shl
cmp
mov
push
push
mov
mov
pop
pusha
push
popa
jne
dec
lret
jecxz
push
xor
mov
dec
rclb
lret
dec
mov
or
repz
or
cmc
divl
mov
idivb
lret
pop
pushf
sbb
jne
lret
xor
ds
or
sbb
push
lahf
repz
lret
es
outsl
fwait
in
cli
cmpsl
fprem
xchg
jnp
xor
push
xor
push
add
inc
adc
cwtl
mov
lret
pop
fnsave
lcall
fcoml
push
pop
lods
fcmove
mov
push
sub
inc
int
popa
lret
jecxz
loop
insl
push
mov
sbb
fcmovb
pop
lock
pop
mov
xor
lret
test
mov
and
cmpsl
pop
sbb
cmp
push
lea
aad
lret
ss
sub
insl
lret
xchg
dec
xor
pop
lret
pop
or
hlt
pop
sub
and
int
mov
loop
sub
lret
fnstenv
xchg
cmp
push
test
aad
cmpsl
ljmp
jb
test
ret
mov
daa
dec
xchg
mov
push
lret
mov
mov
pusha
jg
dec
mov
lret
add
inc
fwait
jnp
dec
inc
cmp
jge
xchg
out
push
mov
lret
sbb
lret
cmp
pop
xchg
aam
stc
lret
fwait
cld
cli
lret
fdiv
addl
mov
adc
pop
inc
cmp
jmp
mov
adc
adc
jmp
pop
or
mov
xchg
inc
popa
test
or
dec
lods
outsl
loope
sbb
xchg
je
popa
pop
fstpt
aam
pop
mov
mov
pop
jecxz
icebp
lret
cs
enter
inc
lret
add
ror
or
iret
lret
jmp
xlat
inc
xor
dec
cmpsl
sbb
mov
add
or
add
lret
movsl
bnd
lret
fisubrs
mov
dec
inc
and
popa
lret
xlat
jl
ljmp
add
xchg
inc
fcoms
sarl
cmpsb
loopne
push
fcoms
pop
hlt
and
pop
add
lret
rorl
cmp
fcmove
rcl
lret
xor
jno
sbb
lret
jns
jecxz
pushf
into
sti
test
lret
rolb
dec
mov
push
push
shll
jns
lret
enter
and
lret
bound
or
imul
pop
ret
lret
xor
lods
lahf
lret
mov
ror
out
xchg
scas
dec
inc
insb
ljmp
ret
pusha
jns
lcall
push
sbb
xor
insl
pushw
lret
fcoms
sahf
add
pusha
cli
sub
or
out
lret
loop
stos
pop
and
fsubrs
fsubr
fistps
addr16
fisubl
or
adc
sub
push
lds
pop
xor
push
aam
lret
out
push
cmc
cmp
pop
lea
lret
xor
stos
mov
filds
jge
lret
mov
jb
fnstsw
inc
xchg
lret
sub
lret
mov
jne
in
lret
xchg
push
lahf
inc
stc
dec
pop
and
cltd
ror
fs
add
sarb
sub
jg
cmpsb
jb
jp
lret
repnz
xor
push
xor
lret
mulb
call
or
xor
arpl
rorb
push
pop
aaa
mov
lret
push
dec
ja
pop
insl
lret
cmp
mov
adc
jmp
das
loope
inc
ljmp
add
push
and
lret
inc
movsl
pop
lret
push
icebp
lret
lock
push
lods
dec
ficoml
bound
lahf
lea
into
ljmp
mov
inc
dec
movsb
lret
inc
sbb
or
cmpsb
add
rclb
mov
mov
sahf
aam
jb
lret
cmpsb
and
shlb
push
adc
fidivl
into
ret
shl
inc
into
dec
lret
incl
lret
aad
imul
lret
push
dec
pop
leave
jb
js
lret
cwtl
jns
or
lret
stc
push
aaa
mov
rcrl
fistps
scas
lret
cld
xchg
inc
dec
inc
lret
int
aaa
filds
pop
out
lret
mov
mov
cmp
into
jecxz
pop
lea
push
cli
adc
in
cli
cmp
lods
xor
sub
loope
pop
in
lret
sbb
pop
ds
ret
outsb
or
cmc
add
pop
sbb
inc
rclb
lret
lret
lods
sub
xchg
in
ror
ret
jns
push
inc
xor
lret
hlt
pop
xor
or
test
repnz
xchg
arpl
mov
insl
sub
stos
ret
shr
jb
fucomi
push
jecxz
lods
jae
iret
loope
adc
or
and
cltd
mov
sbb
aas
xor
stc
xchg
dec
or
ljmp
pop
and
mov
jecxz
sub
push
dec
lret
pop
mov
inc
movsb
ror
imul
mov
stos
inc
cli
out
dec
jp
shl
mov
je
jg
loope
jns
cmpsb
aas
out
fildl
mov
lret
xchg
cmp
xor
xchg
jno
push
inc
jns
lret
cwtl
cld
lcall
ficoms
xchg
push
xorb
add
mov
scas
inc
repnz
dec
shlb
and
cmp
sub
fs
mov
and
sub
cld
jmp
or
rorb
iret
imul
lret
shufps
rorb
scas
lret
mov
add
mov
js
dec
lret
push
inc
int3
aas
mov
fimull
jnp
out
hlt
rolb
mov
fwait
aam
aaa
stos
inc
add
ret
adc
cmc
outsb
mov
sub
adcb
dec
pop
call
test
cmc
data16
adcb
cmp
rclb
lret
stc
xor
lret
mov
ljmp
testl
stc
sbb
sti
xchg
stos
decb
push
shll
inc
insb
stos
cmp
es
mov
jle
lret
add
in
sbb
mov
mov
jg
ljmp
pop
or
xor
jecxz
nop
fstl
lods
sub
xor
sarb
mov
jno
std
add
sahf
test
das
inc
cmp
mov
lret
cwtl
fidivrl
adc
test
repnz
xor
xchg
lret
xor
loope
mov
mov
jnp
fs
or
jns
imul
xlat
imul
leave
adcb
jecxz
push
loop
cmp
sub
or
cli
lods
aaa
sub
lock
pop
enter
cmp
inc
lea
xor
mov
inc
scas
cmp
je
sti
mov
add
push
std
int3
imul
sahf
mov
inc
cmp
inc
das
xchg
or
pop
and
mull
mov
jno
lret
xchg
sub
mov
stc
imul
mov
in
lods
cli
xchg
xchg
cmpsl
mov
cmp
dec
xor
js
lock
mov
lds
cltd
loop
lret
fdivrp
cmp
push
out
xor
and
lcall
pop
loopne
daa
mov
sbb
mulb
xchg
mov
mov
rcrb
push
adc
lret
mov
cmpsb
daa
je
add
lret
cmp
sbb
seta
repnz
out
outsb
clc
cmpsl
and
push
push
lret
pop
stos
leave
or
lods
jns
mov
push
leave
cmp
mov
inc
dec
jg
rolb
and
insl
push
pop
lret
enter
cwtl
leave
lret
and
aas
cs
test
push
aad
lods
xorb
lret
lods
pushf
and
push
movsb
and
scas
shrb
adc
push
test
std
ret
cltd
aam
mov
pminsw
stos
loope
imul
outsb
popa
ja
and
leave
lret
loopne
int
imul
jecxz
xor
aam
cld
adc
inc
fiaddl
mov
shlb
hlt
test
dec
pop
push
pop
push
lret
das
repz
mov
pop
xchg
mov
mov
and
mov
lret
lcall
jne
xchg
push
jmp
or
aas
sub
das
mov
cwtl
lret
fldt
outsb
les
sub
mov
test
pop
inc
test
fidivrs
inc
cmp
jo
mov
popf
stos
je
xor
cld
aaa
jge
faddl
cmpsl
pop
xor
int
pop
andl
mov
lret
ljmp
ror
sub
mov
pop
cmpsb
cmp
adc
lock
dec
in
loop
neg
daa
insb
xchg
rclb
mov
clc
pop
rorl
outsl
sti
in
xchg
xlat
inc
insb
sbb
pop
cmp
jmp
or
mov
test
imul
jne
cmp
xor
pushf
sbb
jbe
push
and
xor
lret
arpl
mov
sub
push
adc
push
lret
mov
loopne
mov
jmp
mov
adc
pop
mov
pop
dec
xlat
push
pop
lret
xchg
and
mov
sub
lret
cmp
jo
add
xchg
shrl
clc
xchg
fwait
sbb
dec
jmp
out
test
push
dec
lret
mov
push
inc
sbb
mov
adc
shlb
movsb
adc
lret
mov
xchg
add
lret
and
lret
inc
sub
sub
push
xchg
and
ljmp
fcom
int3
xor
sbb
inc
cmp
xlat
stos
ljmp
pop
das
jbe
test
leave
and
ja
push
jg
pop
and
mov
lahf
cli
and
push
add
dec
push
ret
jb
xor
test
jecxz
push
test
pop
lcall
mov
mov
inc
sbb
mov
mov
roll
imul
movsl
in
ficompl
enter
jg
xlat
insb
out
fiaddl
loop
xlat
lock
cmp
mov
push
sahf
insl
fidivl
lahf
cmpsl
out
mov
cmpsl
pop
rcll
jecxz
popf
lret
enter
lods
mov
dec
jg
xlat
sub
into
lret
inc
add
push
jecxz
lret
enter
and
mov
jbe
and
addr16
lret
jno
sti
cld
imulb
pop
lret
data16
push
popa
push
dec
mov
js
fsub
push
lret
inc
shll
ljmp
xchg
clc
ja
xchg
xchg
cmp
ret
push
ret
jnp
hlt
jo
pop
ror
andl
arpl
cmp
jmp
lahf
lret
lea
bound
lret
mov
ja
jnp
lret
mov
mov
test
dec
xor
int
hlt
push
or
push
shrl
pop
mov
scas
pop
int3
add
xchg
push
lret
inc
bound
addr16
cli
rol
lcall
mov
mov
ds
lret
daa
mov
rcr
rorb
out
lock
mov
add
lret
xorb
dec
push
cli
out
jbe
arpl
and
fwait
xor
push
xchg
mov
fwait
mov
repz
jg
sub
fldt
add
lret
adc
cmp
add
add
in
lret
pop
in
cmp
lret
fidivl
mov
incb
mov
roll
fisubl
push
sbb
insb
jl
push
sbb
gs
lret
movsl
jne
idivl
lret
cmp
jl
mov
lret
ja
rcrb
pop
dec
push
lret
arpl
pop
adc
repz
clc
cld
jmp
add
les
mov
adc
mov
xor
push
into
mov
sbbl
jbe
sub
sub
andl
decl
sub
dec
test
lret
pop
scas
pop
in
lret
lock
sarl
lret
xor
xor
mov
adc
insb
push
mov
pop
mov
dec
sahf
je
push
lret
pusha
idivb
xorl
inc
lret
or
mov
loopne
mov
lret
push
sub
xchg
imul
push
scas
jbe
inc
lret
cld
sub
or
aam
dec
ljmp
sub
jg
lret
movsbl
or
fs
inc
xor
adc
jbe
or
addr16
fsubrs
rorb
mov
lret
xlat
push
cli
fisubs
notb
push
add
lret
ret
xor
je
mov
lahf
cmp
or
lret
ficompl
inc
cs
shll
ljmp
mov
xchg
lock
rcrb
test
ficomps
sub
shlb
jb
call
mov
dec
add
push
cmp
rcrb
sbb
shrl
push
mov
xchg
stc
mov
gs
xchg
push
jp
ret
fisubs
mov
fldenv
clc
in
jnp
repz
jmp
pop
dec
lret
cmpsb
hlt
mov
lret
sti
pop
ds
insb
pop
loop
flds
popa
sub
shlb
mov
pop
xchg
mov
loope
sbb
push
out
cmp
mov
jne
stos
xor
lahf
sti
cmp
out
stos
xchg
adc
xchg
outsl
pop
pop
xchg
push
lret
and
lret
add
mov
push
lret
pushf
out
add
bound
or
lret
xchg
inc
call
add
push
add
outsb
fiaddl
andb
mov
pop
jg
lret
les
push
lret
scas
add
stos
or
jl
pop
into
clc
cs
xchg
xchg
sub
xor
push
les
cli
or
movsl
lret
enter
loope
data16
mov
lock
pop
insb
fcoms
xchg
inc
jno
adc
mov
and
sub
jno
lret
sahf
sub
xchg
jbe
pop
lret
cmp
mov
int
mov
fdivrs
xchg
stos
fidivl
add
dec
jmp
pop
lret
mov
sahf
sub
lds
test
push
lretw
sbb
xchg
xor
int
jns
sbb
mov
mov
push
xor
fmulp
insb
add
jg
repz
pusha
cmp
inc
mov
cwtl
in
imul
sub
add
inc
lret
out
insb
lahf
adc
ret
lret
icebp
daa
leave
test
cs
sub
out
loope
fidivl
adc
add
push
sbb
lret
sub
flds
fwait
call
stos
cli
sub
test
mov
jp
fcmove
or
dec
xor
jo
jge
mov
fwait
pop
in
cli
xchg
out
cmp
out
push
dec
loope
lret
push
cmp
sarl
dec
or
jmp
jge
cli
mov
or
xor
movsb
clc
or
cmp
es
sbb
dec
xchg
shlb
adc
and
cmpsl
lret
cltd
ja
fdivrl
sub
lret
or
or
sbb
jbe
jne
lcall
cltd
mov
lret
call
sbb
xor
das
push
mov
add
mov
adc
lret
push
mull
sbb
lret
ficompl
xchg
pop
adc
pop
cli
enter
xchg
cli
add
mov
dec
push
pop
mov
inc
dec
dec
andb
cmp
lock
lcall
mov
sbb
or
mov
adc
movlps
iret
stos
adc
rorl
scas
lret
push
pop
dec
sti
jbe
lret
call
addr16
dec
jl
gs
pop
out
lret
das
push
jp
imul
jg
adc
lret
ror
lods
popf
and
mov
adc
sub
dec
adc
sbb
cmp
scas
shlb
mov
mov
sbb
adc
jne
repz
add
mov
mov
or
inc
lcall
xchg
movsl
lret
gs
jns
mov
pop
mov
mov
sub
rcrb
mov
xchg
pop
lods
mov
lret
insb
cli
ds
cmp
sbb
mov
add
mov
lret
and
sub
xchg
inc
cmc
lret
push
or
mov
sub
and
in
aaa
mov
fs
rcll
push
pop
cmp
mov
aam
js
pop
hlt
not
or
pop
movsb
loop
and
inc
xlat
cltd
and
or
push
mov
dec
dec
icebp
xor
mov
or
push
lret
and
test
cltd
or
xchg
lcall
stos
mov
jl
fld
js
pusha
lret
add
pop
pop
cmp
jns
lret
pop
in
xchg
sub
lret
and
testl
add
ficoml
idivb
shlb
inc
cld
loope
or
cmp
leave
cltd
dec
cli
rcll
mov
add
in
fisubrl
aaa
jbe
lds
cmp
push
fs
andl
shrl
int3
sahf
fcmovu
push
lahf
jecxz
xchg
pop
push
adc
lret
fnstcw
cmc
mov
push
cs
mov
mov
rcrl
push
pop
and
mov
leave
popf
sbb
cwtl
cmp
cmp
out
into
xchg
cmp
sbb
sarb
push
mov
lret
xor
aas
cmp
js
fwait
mov
lret
insl
dec
xor
repz
lret
adc
push
push
in
mov
repnz
cwtl
jl
pop
and
cmp
dec
out
cltd
es
data16
push
pop
hlt
xchg
test
repz
xchg
mov
int3
popf
sarl
outsb
mov
in
cli
out
cli
inc
push
cmc
ss
pop
add
adcl
pop
repnz
cmp
inc
mov
pop
std
push
or
or
pop
ds
lcall
into
sbb
out
data16
fists
dec
xor
in
cld
outsl
hlt
xchg
lret
movl
push
and
fxch
mov
dec
jmp
cld
cmp
or
mov
rclb
repnz
lret
dec
jns
pop
push
push
lret
insl
mov
lret
rorb
sub
addl
mov
xor
popf
lret
scas
mov
stos
mov
in
pusha
ds
das
outsb
and
andb
negl
rcrl
daa
mov
std
mov
cmpl
cwtl
cli
mov
pop
jecxz
lret
push
mov
lret
jno
cmp
fldt
xchg
inc
fldl2e
int
dec
inc
test
aam
arpl
lret
ds
repnz
pop
lret
jmp
push
lret
int3
dec
sub
lret
mov
sbb
mov
ret
push
lret
cli
mov
pop
fsubl
aad
xor
sti
jo
sbb
fwait
rorb
hlt
test
push
push
fcmovne
add
inc
ret
jae
sbb
das
add
xchg
sbb
fs
dec
push
dec
mov
jg
lret
ja
popa
enter
fisttpl
adc
cmp
fs
jae
mov
pop
mov
mov
ljmp
lock
mov
cld
pusha
cwtl
scas
push
mov
cmpsl
mov
fsubrl
add
mov
lretw
jg
xchg
cmp
lret
vmaxps
out
jecxz
push
lret
dec
push
pusha
ljmp
mov
lret
enter
sub
div
pushf
out
and
xchg
xchg
cmp
jae
pop
aam
pop
sub
push
add
cmp
rorb
or
aad
stos
aas
xor
jno
push
xchg
ss
xlat
lret
sub
add
jbe
xchg
lea
jmp
adc
adc
popf
outsb
repnz
daa
test
iret
or
repz
ret
mov
cmpsl
or
or
fistpl
ror
mov
loop
pop
ds
mov
push
sub
into
imul
enter
adc
xchg
lret
aaa
jno
dec
inc
mov
xlat
cmp
jb
and
sub
cmpsb
add
sub
lock
inc
mov
icebp
inc
icebp
push
lret
aad
inc
sub
popf
cmp
mov
mov
adc
stc
pop
pushf
rcrb
inc
in
mov
cmp
out
mov
maxps
fidivs
xor
sbb
fstp
das
add
lret
sbb
lahf
test
repnz
aad
loope
fdivs
mov
stc
ret
rcr
fwait
jecxz
addr16
hlt
dec
and
mov
fisttps
int
jae
lret
fiadds
jle
sub
shll
mov
xor
lret
pop
or
mov
out
push
sbb
sbb
push
mov
add
sub
jge
xor
mov
dec
pop
lcall
xlat
loopne
out
cmp
stc
shrl
jp
pop
xchg
or
cs
or
das
loope
inc
mov
xchg
std
fs
pop
and
lcall
sub
int
cmpsl
pop
cltd
rcrb
mov
les
xor
fxch
fcmovb
jp
push
push
aas
cltd
pop
cmp
fistpl
orb
nop
lcall
lods
repnz
fcom
lock
jp
lret
cmp
cli
add
movsl
push
shl
adc
lret
rclb
pop
popl
mov
mov
mov
push
pop
cwtl
adc
dec
out
gs
inc
lret
popf
sub
cwtl
dec
jl
nop
loope
xchg
orl
insl
jg
rclb
push
cli
xor
in
xchg
ror
push
fwait
loope
cmp
push
fs
aaa
jns
lret
les
fsts
ror
ret
iret
mov
sub
push
dec
or
push
movsl
inc
ficompl
and
or
fndisi(8087
ja
sbbb
addr16
in
adc
loop
lret
mov
lret
sub
out
fwait
sahf
icebp
or
sub
lret
aam
loop
jmp
fwait
inc
and
fdivs
mov
dec
jmp
and
lret
std
inc
add
repnz
fwait
dec
mov
sbb
fwait
xor
mov
pop
inc
lret
add
mov
pop
and
cmp
mov
jne
test
jecxz
roll
mov
icebp
test
xchg
outsl
lods
cmp
test
addl
lret
xor
mov
mov
jle
xlat
sbb
push
dec
test
mov
out
das
and
jne
icebp
jbe
sub
into
jecxz
shll
fidivl
mov
rcll
rcl
fs
push
mov
scas
lret
js
enter
inc
nop
sbb
imulb
loop
fnstsw
stos
push
add
xchg
lock
cmp
pop
mov
dec
jae
rcr
mov
sahf
mov
rorb
je
pushf
lods
mov
dec
inc
aad
push
add
push
mov
or
shl
lcall
popa
lret
movsl
sbb
addr16
cli
add
clc
in
push
mov
lret
add
mov
push
push
add
lret
dec
xchg
pushf
ds
xor
mov
into
add
xchg
and
sub
and
xlat
movsl
lret
mov
inc
imul
add
rcll
fs
shll
push
jl
sbb
mov
pop
mov
xchg
and
sub
cmpsb
dec
std
jg
pop
mov
popf
in
lret
fcoml
addr16
sbb
jecxz
xchg
sbb
cmp
cld
lret
cmp
xlat
test
jb
mov
into
scas
int3
ds
sub
ret
rcrl
sarb
dec
lret
sbb
insb
xchg
jnp
cs
mov
fstps
push
lret
push
mov
call
jecxz
sbb
out
push
sti
scas
cmp
fisubl
jo
lret
les
dec
sbb
rclb
push
sbb
xchg
movsl
and
repnz
pop
lret
stos
mov
ljmp
into
fiadds
cli
notl
dec
sbb
fisubs
sbb
rclb
or
jnp
pushf
jae
adc
rorl
lret
sbb
or
cmp
sbb
int3
mov
imul
mov
or
les
mov
jg
cltd
hlt
inc
lahf
jl
pop
fisubrs
cmp
adc
jg
lret
jae
xchg
xor
mov
inc
sti
jno
jp
fsubrl
aaa
mov
mov
scas
stos
lret
daa
in
push
repnz
iret
out
adc
cmp
out
into
test
loope
fimull
int3
pusha
int3
adcl
push
mov
lret
jno
int3
iret
cmp
roll
add
lret
cmp
pop
mulb
push
lret
imul
stos
dec
dec
adc
pop
nop
inc
lret
ss
add
addr16
jp
clc
lret
jno
lahf
into
rclb
repz
mov
pop
cli
shlb
push
xor
lret
dec
jge
lods
adc
test
sti
inc
jmp
sbb
sbb
stos
sbb
mov
je
lret
mov
pop
mov
cmpsl
aam
xor
insl
lret
clc
dec
sub
xchg
or
lret
aad
sbb
xchg
fwait
test
ret
popf
mov
out
rorl
sbb
push
pusha
adc
push
adc
pop
pop
fs
imul
test
daa
lret
lock
dec
mov
lret
adc
arpl
mov
push
cltd
mov
fidivl
pop
insl
pop
cmpl
repnz
xlat
push
mov
dec
lret
pushf
mov
sbb
leave
sbb
out
cmpsb
push
fisttps
mov
bnd
ljmp
inc
dec
adc
pop
jp
mov
enter
rolb
add
dec
lods
and
lret
cmc
js
shr
pop
dec
dec
data16
repz
jmp
stos
xchg
stos
push
adc
mov
pop
popa
addb
rorb
jg
mov
movsl
cli
ret
movsb
jmp
addr16
and
lret
push
ficoms
xor
xchg
dec
aam
cmp
cli
std
out
pop
insl
stc
aam
xchg
dec
cltd
enter
dec
fnstsw
jne
lret
addl
nop
xchg
xchg
out
cli
pop
inc
lods
mov
xor
sub
ret
cwtl
iret
lret
cltd
sar
lods
aam
jp
xor
lods
rolb
push
push
cmp
mov
mov
adc
mov
orl
shrl
ds
add
shrb
sub
push
xor
clc
lret
bound
adc
test
fsubs
ss
jp
mov
xchg
dec
jo
add
popf
inc
mov
ss
imul
js
push
mov
dec
jo
mov
add
idiv
push
call
and
pop
jmp
mov
ljmp
into
add
or
xor
out
xchg
dec
mov
push
pop
int
mov
outsb
int3
leave
sub
out
xchg
jg
iret
xor
das
xchg
lret
xor
inc
fisubrl
clc
cwtl
das
test
getsec
mov
adc
fucomp
sub
sarl
mov
fldcw
sub
add
clc
int
ljmp
in
rolb
lret
fdivrs
out
popf
add
push
and
repz
sbb
lret
pop
or
lret
mov
pushf
lret
dec
ljmp
shll
mov
fcomps
cmp
sarb
iret
into
rolb
mov
mov
or
fdivl
fmul
sub
imul
std
jns
sarb
inc
clc
lret
fwait
dec
push
mov
dec
push
mov
mov
mov
jecxz
lret
bound
cwtl
pusha
cmpsl
mov
lret
in
cmp
bound
rclb
lret
sub
dec
stos
ss
jge
pop
lret
dec
jb
lahf
bnd
jns
cli
cmpsb
mov
cmp
popa
dec
aad
hlt
adc
mov
lret
dec
aam
shlb
mov
int3
pop
icebp
xchg
call
dec
aaa
shll
mov
adc
shld
adc
pop
in
push
daa
mov
jae
jns
loope
ret
in
pop
sub
movsb
cmp
sub
sbb
lcall
jge
push
lret
sbb
iret
cmpb
roll
and
or
popf
lret
adcl
mov
nop
xchg
movsb
pushf
lret
sarl
dec
xchg
cld
test
mov
movhps
cmpsb
cmpsb
test
cwtl
popa
cld
mov
test
jnp
lret
outsb
dec
sbb
leave
and
stos
push
mov
and
adc
in
cli
pushf
sub
xor
sahf
push
xchg
inc
cmpl
xchg
adc
lods
rorb
int
cmp
lret
je
and
cmp
pop
fcmovne
mov
jecxz
daa
les
hlt
in
lock
mov
fidivl
xor
cmpsb
test
outsb
lret
mov
mov
add
push
cmp
xor
insb
mov
stos
or
out
adc
push
cli
dec
dec
int3
out
add
test
in
sub
jp
mov
lea
push
ljmp
jb
push
pop
inc
in
pop
lret
lahf
ret
lds
enter
lret
mov
icebp
lret
lds
stc
pop
mov
jae
mov
mov
lret
test
cmc
fnstenv
push
adc
es
xchg
add
lahf
stc
xchg
lret
in
negl
xor
mov
fisubl
ret
daa
sbb
jae
int3
mov
sub
mov
data16
mov
dec
xor
int
pop
xchg
mov
loopne
iret
inc
mov
les
jns
adc
das
mov
into
ss
push
push
int
dec
adc
pop
scas
mov
aam
sub
sub
jmp
inc
xor
lcall
out
ss
loopne
in
mov
in
cmp
inc
aaa
adc
out
iret
cmovle
add
adc
dec
mov
lahf
jbe
push
in
imul
ja
mov
lret
sub
lret
and
bnd
push
scas
sarl
sahf
loop
fisubl
xor
push
mov
lret
jne
add
lret
pop
lods
add
push
mov
cmp
out
push
stos
mov
inc
add
clc
shlb
add
inc
jge
push
rcrb
jmp
jne
dec
aam
adc
pop
inc
iret
inc
lahf
mov
xchg
xchg
push
fwait
mov
mov
mov
mov
inc
aaa
xlat
js
jae
lret
xlat
addr16
int3
dec
adc
xor
xchg
popf
sbb
lret
fwait
dec
enter
lret
jbe
sub
hlt
pop
mov
lret
inc
call
lret
pushf
add
lods
jp
aaa
scas
jge
inc
jns
lret
clc
xchg
out
or
sub
mov
scas
sub
lea
cmp
into
cwtl
adc
pop
ror
jnp
inc
insb
daa
fwait
movsb
mov
mov
jge
lret
pop
pop
aas
lock
sub
or
or
jg
lret
jp
push
lea
cmp
and
mov
arpl
jl
jmp
mov
fsubrs
jo
dec
xchg
repnz
push
shrb
insl
jecxz
pop
dec
mov
jae
into
repz
dec
lret
imul
fsubs
in
jl
sub
rol
xchg
lds
xor
data16
hlt
mov
mov
pop
mov
push
cmp
mov
xor
xlat
aas
bound
jle
test
iret
and
dec
inc
jno
lret
in
sbb
fwait
xchg
lret
cltd
or
push
ss
in
sub
shl
lret
or
idiv
andb
dec
xchg
push
fld
lret
rorb
andl
stos
cmp
sti
jp
ljmp
fistpl
popf
fidivs
pop
sbb
mov
cmp
rorl
xchg
lret
faddl
aad
or
leave
adc
adc
lret
add
cs
add
roll
add
dec
stc
lret
gs
sbb
add
insb
cmp
mov
lret
dec
jle
mov
or
adc
mov
outsl
call
lret
jp
pusha
push
or
stos
or
cltd
dec
rolb
xor
adc
lret
andl
xchg
adc
mov
xchg
mov
and
stc
out
lret
inc
mov
mov
push
or
in
shlb
mov
jge
push
scas
push
js
sti
call
add
insl
ret
lret
cmp
dec
xchg
xchg
lret
mov
mov
test
mov
jge
push
pop
jb
lret
jp
hlt
push
shlb
fildl
and
fldcw
lret
enter
mov
cmp
cli
cld
sbb
jle
ret
mov
movsl
lret
in
jmp
push
xchg
cmp
ds
bound
mov
shrb
test
and
aas
inc
fimull
mov
cltd
push
fstpl
mov
mov
scas
loopne
adc
dec
push
pop
lret
popa
mov
lret
or
mov
ljmp
testb
insl
xlat
xchg
sub
jo
mov
cld
leave
aad
std
sbb
jne
add
mov
add
bound
adc
out
inc
xchg
mov
cmp
rcr
push
mov
movsb
clc
xchg
lret
pop
test
adc
adc
jne
xchg
icebp
arpl
fldl
aaa
xchg
push
fsubrs
mov
inc
les
xchg
rcll
lock
mov
dec
lret
push
push
sbb
pop
lret
std
mull
and
xor
fistl
arpl
js
pop
pop
lret
inc
jbe
inc
inc
jne
mov
cmc
mov
jae
xchg
lret
ss
lea
movsb
mov
mov
fildl
xor
mov
ret
aam
je
or
test
add
stc
jb
jae
lret
sub
mov
fistps
lahf
jo
into
fimuls
lret
leave
mov
lret
aam
mov
push
jle
sub
out
jae
lock
popl
lret
inc
lds
sahf
mov
fndisi(8087
push
lret
cs
push
jno
push
pop
mov
lret
lcall
pop
shrb
pop
mov
lret
and
adc
or
shrb
jns
jbe
dec
pop
jnp
mov
ror
pushf
insb
pop
ret
jb
and
divb
in
sarl
test
es
cmp
fldl2t
push
pop
movsl
lret
lret
lods
dec
add
or
repz
clc
leave
lret
ds
jno
add
mov
gs
movsb
xor
jl
out
fcmovbe
sarl
mov
lret
xchg
xchg
cmp
pop
filds
ja
mov
or
pop
xor
cmp
adc
ret
pop
cs
popf
fucomip
test
or
sbb
sarb
jle
dec
ljmp
cmp
mov
fidivrs
les
fwait
mov
aad
sub
fistl
pop
mov
test
lock
xor
lret
xor
and
adc
jo
in
mov
sbb
xchg
xchg
movq
aad
fisubrs
pop
jbe
and
pop
jne
lret
adc
sub
dec
xor
mov
mov
arpl
dec
mov
xor
adc
push
jge
pop
add
dec
mov
xchg
push
into
pop
out
out
lret
sti
mov
inc
push
mov
jnp
call
lret
arpl
mov
repz
lret
xchg
sub
mov
lret
out
andb
fdivrl
cmc
or
push
pusha
ret
lret
or
stos
adc
mov
loope
push
xchg
mov
mov
add
jno
call
push
rcrl
mov
test
push
scas
xor
repnz
lret
or
mov
fwait
or
dec
lret
imul
mov
sub
js
lret
in
mov
lret
sbb
or
fstl
arpl
rcrl
stc
sbb
lret
mov
sub
lret
test
inc
push
xchg
cmpsl
adc
ja
lret
nop
cmp
jne
popa
lret
pop
leave
mov
mov
lods
cwtl
xchg
xchg
dec
or
lahf
push
in
sbb
out
push
lret
movsl
xlat
cwtl
lds
lret
cmp
jmp
bound
lret
ret
out
lret
cmp
out
movsl
dec
push
sub
daa
cmp
lret
leave
test
fcmove
ja
cmp
subb
lret
popf
mov
lret
call
pushf
fidivl
popf
pop
movsl
push
sbb
rcr
or
cmp
push
xor
sub
mov
xchg
dec
test
xor
mov
aam
pop
int3
loope
cmp
xchg
sub
xchg
sub
test
lods
stc
inc
add
and
jns
cmp
jge
lret
push
outsl
ror
test
sub
addb
aad
test
ja
push
adc
and
into
imul
mov
outsb
inc
xorl
xor
xchg
xchg
out
lret
push
inc
sbb
lea
lret
pop
and
jnp
mov
adc
repnz
pop
cmp
lea
lret
cld
cmc
sahf
movsl
inc
je
mov
add
stos
xor
lret
xchg
out
and
mov
ja
xchg
sub
cwtl
sbb
jo
mov
ds
mov
lret
xchg
addr16
test
mov
lret
loopne
test
inc
jae
ficoms
dec
repz
sub
sub
or
ljmp
shlb
insl
out
cmpsb
enter
xlat
inc
ljmp
jle
fmuls
jge
imul
sarb
mulb
and
lds
dec
add
or
repnz
sbb
fsubrs
mov
cltd
aam
dec
jl
fcomps
add
movsb
or
fcmovb
test
popf
lret
das
in
cmc
jge
mov
fmuls
xchg
push
hlt
xor
aaa
adc
lret
nop
repz
sbb
sbb
mov
push
aaa
in
mov
sub
push
mov
or
int3
stos
inc
test
movsb
sbb
lret
mov
cwtl
lret
mov
call
mov
push
outsb
sub
lret
in
or
and
cli
xchg
jmp
dec
sbb
jae
sub
leave
xchg
jl
stos
sbb
insl
std
mov
mov
inc
inc
sarb
shll
xor
leave
push
stos
xchg
mov
dec
scas
jg
out
xchg
lret
insl
repnz
aad
ror
xor
mov
or
mov
push
jmp
pop
dec
cmc
lret
in
ss
jo
lret
adc
push
ljmp
ja
shlb
push
xor
cmp
shlb
pop
not
popa
lret
xchg
xor
jp
mov
xor
jo
ret
mov
lret
xorl
push
rcrb
lret
mull
lret
in
cwtl
pop
pusha
cmp
cli
dec
push
mov
sub
scas
add
es
leave
lock
jecxz
ret
mov
or
dec
ret
push
jp
lds
arpl
inc
jge
push
mov
repnz
mov
stos
jno
sub
dec
ror
mov
das
loope
stc
pop
jge
ret
mov
jnp
popa
mov
mov
cmp
std
or
nop
or
or
adc
xor
fbld
lret
xchg
iret
push
sti
jno
fwait
cmc
aaa
sub
in
fwait
push
notl
lret
out
jmp
dec
pop
fidivrl
int
push
test
cmp
cmpsl
xchg
mov
fmuls
push
lret
mov
and
push
inc
mov
mov
xor
lret
xchg
xor
mov
insb
xorl
inc
mov
shrl
shrl
jb
dec
lods
xchg
mov
rcr
jl
cmp
fists
repnz
rolb
inc
lret
dec
jecxz
add
xchg
cmp
insb
dec
xlat
jg
cmp
lret
orl
rcrl
mov
lret
bound
dec
pop
push
test
xlat
imul
lret
sti
aam
dec
rorl
hlt
adc
cltd
or
ficompl
ret
xchg
jne
inc
lret
cmovns
xor
inc
mov
cmp
popf
mov
mov
aaa
or
out
jl
inc
inc
int
fcmovu
mov
add
fsubs
lret
fbstp
mov
mov
jl
cltd
scas
mov
fistpll
pop
jge
mov
shl
fmul
push
cld
sub
sbb
push
cwtl
sub
add
out
and
jle
sub
enter
jl
pop
xchg
adc
out
or
pop
in
not
push
lret
and
lahf
into
daa
push
lret
ja
dec
adc
outsb
aad
dec
and
lret
and
pop
and
lret
add
fsubs
fiaddl
leave
lret
pop
or
lret
ret
inc
pop
dec
lret
cmpsb
pop
dec
adc
cwtl
lret
incb
fwait
outsb
sub
mov
repz
mov
xlat
lret
xchg
jae
sbb
xchg
ficoml
push
mov
jb
sbb
lret
inc
mov
mov
mov
into
imul
subl
or
mov
inc
sbb
jns
lret
mov
andl
cli
cs
rcrl
das
cli
lret
jbe
aas
push
dec
insb
cmp
test
inc
xor
ret
adc
pop
leave
mov
insb
lret
cmc
call
lret
xorb
pusha
adc
sub
and
sbb
adc
xchg
in
aam
in
jmp
dec
jecxz
sbb
sbb
sarb
out
gs
push
fwait
daa
mov
cltd
inc
lret
jb
add
mov
lret
shlb
xchg
add
aaa
add
lret
adc
or
sahf
lcall
into
cmp
inc
adc
xor
popa
lret
arpl
mov
or
dec
adc
popf
arpl
rclb
int3
fmul
fsubs
movsb
dec
je
mov
call
add
sub
mov
pop
cmpsb
lret
xchg
imul
mov
jae
mov
repnz
sub
pop
pushf
mov
mov
into
dec
jle
mov
jbe
incb
inc
daa
rcrb
dec
xor
push
or
enter
and
dec
int
xchg
mov
ror
sarl
inc
lret
lds
lret
pop
or
in
lods
xchg
push
out
mov
lret
jg
jle
repz
or
jmp
and
mov
pop
and
pop
sarl
mov
push
adc
inc
rorb
jns
lcall
mov
aam
pop
hlt
cmp
divl
scas
aaa
lret
stos
mov
outsl
lret
in
cmpsb
sbb
repz
lods
sub
jae
mov
ret
xchg
xchg
add
cwtl
and
into
and
test
mov
lret
jge
andl
sarb
repnz
cmpsb
cmc
cs
xchg
ror
aas
mov
fwait
sti
or
dec
arpl
es
mov
jmp
mov
out
fdivrl
jge
cli
xchg
push
sbb
cmc
jmp
int3
lret
and
dec
jns
sbb
leave
insb
stos
lock
jp
lret
addb
les
inc
lret
pop
test
lahf
shrb
xlat
or
inc
pop
lret
in
test
dec
or
icebp
cli
dec
and
mov
out
stos
mov
aaa
sbb
ficomps
cmpsb
pop
sbb
nop
aad
lret
js
sub
cwtl
mov
int3
test
fisubl
rolb
jo
sbb
mov
stos
cmp
jmp
pop
xor
negb
fsubrl
sbb
cwtl
data16
js
cli
mov
add
das
sbb
sub
imull
in
lret
in
or
cmp
cmp
hlt
scas
push
lcall
xchg
xchg
pop
cmp
push
cmp
adc
ja
ljmp
push
cmp
addr16
fisubl
jns
stc
fwait
push
mov
sub
popa
jg
loopne
repnz
cli
push
mov
sar
mov
cmp
stos
or
push
sbb
les
dec
adc
mov
enterw
es
lret
or
repz
push
lret
pop
push
jmp
dec
inc
push
jb
lods
mov
cmp
inc
and
or
sbb
add
ror
les
roll
push
cmp
das
jns
into
inc
test
gs
lds
xor
or
loopne
ficoml
add
mov
lret
pop
daa
and
mov
jp
negl
fs
test
mov
imul
xlat
jbe
cmp
rcll
add
and
bound
rorb
jo
in
jno
testb
loope
pop
stos
popa
lret
or
cmp
push
sub
out
dec
lret
add
mov
scas
cmp
push
mov
sbbl
sti
lods
mov
test
out
xor
lods
push
mov
test
fmuls
aad
lcall
lret
repnz
mov
test
cs
or
jmp
enter
add
test
lret
fwait
pop
and
jno
mov
mov
aam
lcall
cmp
fldcw
mov
lods
fdivs
aaa
mov
xchg
testb
push
fidivl
shll
mov
cmp
sarb
xchg
mov
ja
jb
or
push
inc
xchg
dec
sub
imul
mov
pop
adc
subl
mov
into
aas
cmpsl
lret
xor
mov
push
out
stc
jbe
jecxz
data16
xchg
stos
shl
inc
leave
lret
nop
mov
sub
imul
stos
ror
cld
pop
jno
rolb
out
lret
xchg
int
dec
mov
lret
mov
pop
or
enter
mov
lcall
loop
sahf
lret
mov
inc
or
cli
xlat
pop
inc
stos
iret
xor
inc
lret
addl
pushf
mov
push
enter
sub
or
lcall
lret
xor
into
in
xorb
leave
mov
sub
daa
adc
push
lods
or
hlt
cmpsl
sahf
xchg
sbb
fistps
int
lret
jbe
cmp
rorb
lret
inc
into
roll
xchg
adc
icebp
andb
push
fdivrs
bswap
int
push
in
pop
lret
daa
inc
xlat
sahf
lahf
mov
cmpsb
inc
rolb
test
mov
pushf
movsb
stos
mov
add
jno
dec
mov
cmp
rcll
fadds
xchg
cwtl
lahf
mov
imul
adc
lock
push
push
cmp
rorb
pop
lret
xchg
mov
pop
cltd
aam
in
ficoml
cltd
les
sub
xchg
cli
jne
and
sub
inc
imul
xor
add
mov
repnz
iret
call
dec
adc
outsl
out
add
jle
sahf
ljmp
pop
in
mov
testb
jl
hlt
out
lret
arpl
inc
in
or
cs
add
or
popf
lret
stos
js
insb
or
lret
xchg
imul
dec
adc
lret
inc
leave
sbb
cmp
dec
jae
nop
mov
aam
frstor
jns
push
fcomps
jmp
out
cmp
into
ret
sarb
mov
xorb
test
lret
stos
into
outsl
add
jns
es
or
ja
mov
sar
mov
ror
call
dec
test
lret
jmp
lret
inc
xchg
mov
call
cld
adc
cli
add
lret
pop
loop
inc
les
jae
arpl
adc
cld
aam
fwait
lret
cs
sarb
jl
inc
mov
cltd
xchg
sarl
adc
xchg
jae
test
jb
mov
jecxz
cmpsl
lret
xlat
sahf
iret
mulb
out
mov
icebp
mov
adc
popa
adc
fcmovne
lock
outsl
jmp
push
loope
lret
data16
leave
lret
movsb
push
xor
and
out
adc
sbb
fadds
sarb
sti
fwait
mov
add
repnz
lret
ja
cltd
mov
movl
mov
fdivs
pop
ret
jmp
daa
int3
orl
insb
cld
lret
sbb
outsb
lret
jmp
icebp
loope
mov
cmp
shl
inc
push
add
lret
add
jns
inc
push
lret
subb
sub
and
lret
cmp
dec
cld
das
jl
dec
clc
lret
jp
loopne
movsl
loope
dec
addl
in
fcomps
aas
lret
cwtl
jns
fwait
imul
pop
lret
loopne
ja
xchg
lret
push
mov
lret
jg
adc
lret
fwait
mov
lret
mov
lret
jb,pt
xchg
mov
cmpsb
in
lcall
dec
rorl
push
cmp
fcmovu
mov
add
sbb
arpl
bound
push
cltd
lret
inc
jns
into
mov
mov
imul
mov
inc
rolb
insb
clc
mov
or
cmp
mov
in
mov
lods
int
push
push
insb
lret
enter
push
test
or
push
dec
out
mov
lret
fwait
inc
inc
fisubl
sbbb
cmp
sti
mov
stos
cld
ljmp
sub
cmpsb
ss
pop
fimull
fcomps
rolb
add
stos
adc
sbb
loopne
add
leave
mov
fwait
dec
lret
cli
mov
icebp
es
mov
insb
mov
outsb
pushf
mov
aam
ss
lea
add
nop
xlat
sbb
jmp
inc
or
sub
mov
sbb
lret
add
leave
lret
incb
lods
filds
fidivrl
jl
das
and
dec
fidivl
xchg
mov
push
cs
xor
into
inc
sub
loop
lret
xor
adc
lret
jo
or
and
xor
movsl
mov
in
jp
into
sub
popa
lret
xor
sub
pop
pop
lret
and
lret
inc
push
mov
xchg
mov
pop
int3
popf
mov
pop
mov
add
hlt
sbb
scas
cmp
pusha
lret
repnz
lret
fidivs
lret
jle
xchg
jnp
stc
lret
push
push
sti
cmpsb
pop
push
cmp
scas
xor
dec
mov
loopne
mov
sbb
lret
sub
xchg
lret
int3
scas
dec
lods
fcmovb
cmc
fisubl
data16
popa
cwtl
xor
sbb
ss
pop
rcrb
mov
lret
fstl
stos
sub
movsb
xor
xchg
lret
and
mov
int3
cs
adc
inc
mov
jmp
xchg
push
shlb
sbb
aad
sub
xor
int3
cmp
sbb
pusha
fs
pop
sbb
aaa
gs
xor
inc
pop
clc
cmc
aas
push
lret
out
or
repnz
xchg
lods
ficompl
jns
enter
insl
sarb
je
inc
ljmp
mov
aad
lret
fcmovne
push
popf
les
lret
push
adc
mov
mov
mov
rcl
lret
push
ret
mov
dec
lods
adc
cmp
bnd
pusha
stos
or
mov
dec
add
pop
data16
lock
pushf
inc
lret
adc
mov
jle
mov
pushf
call
loope
pop
ficompl
dec
inc
push
xor
xlat
pop
sti
pop
int3
or
cwtl
mov
adc
mov
jb
cmpsl
ss
mov
enter
dec
js
movsl
dec
or
pop
int
ror
xchg
push
or
cmp
xor
xorb
in
push
ss
popa
dec
int3
cli
pop
or
mov
lea
jne
arpl
lret
insb
adc
add
adc
loop
shll
cmp
aad
out
shrl
and
dec
ret
fcoms
inc
xchg
mov
mov
pop
cmp
lret
cmpsb
and
inc
and
or
add
sub
bound
dec
out
mov
xor
fcoms
and
addr16
sahf
jo
pop
clc
sbb
inc
lret
mov
bnd
pop
lods
dec
stos
push
jae
add
es
cmp
ss
out
mov
cltd
lods
insb
stos
rorl
in
imul
add
cmp
int3
iret
add
fmuls
orb
sbb
jp
dec
filds
rcrb
dec
lret
xor
lret
mov
inc
scas
dec
cmp
hlt
imul
shll
das
addr16
mov
in
out
add
int3
mov
test
lret
xchg
outsb
ljmp
fmuls
rcr
cmp
sub
vmovddup
push
movsl
lods
sbb
mov
push
adc
aad
loope
jmp
mov
lahf
or
sbb
lret
gs
js
out
jmp
addr16
push
out
xor
fwait
and
cli
cmp
data16
or
jnp
lea
shlb
loopne
jne
je
lods
mov
out
cmc
jge
cli
movsb
dec
inc
flds
push
iret
mov
inc
pop
cwtl
sarl
ja
mov
xor
xchg
xor
stos
dec
cmp
jae
test
lret
or
lret
xor
cltd
lods
push
mov
leave
jae
jo
xchg
jae
adc
pusha
lret
int
xor
ret
rcr
lret
push
mov
lret
push
imul
pop
add
mov
fcom
gs
mov
cmp
js
push
dec
rolb
ljmp
push
rolb
lret
jne
fucom
ret
lahf
lret
in
push
pop
lret
neg
popa
sbb
rep
jg
aam
cld
fnstenv
rcll
dec
lret
sbb
cmp
sti
and
leave
lret
fsubl
lret
outsl
or
ficoml
clc
je
cmpsl
ljmp
scas
cmp
inc
fwait
xlat
sbb
push
lret
mov
sbb
add
xor
aaa
jne
out
cmp
pop
in
push
popa
cmpsl
in
and
ds
xor
lret
mov
mov
inc
xchg
cmp
les
xchg
movups
sbb
pop
pusha
jp
pop
shlb
lret
data16
push
sub
sbb
bound
sti
mov
loop
jno
iret
rcrl
int3
stos
ds
popf
in
push
imul
scas
pop
dec
scas
stos
push
lock
notl
mov
add
loope
xor
in
add
mov
jg
cmp
iret
cmpsl
fs
lret
jo
rolb
pusha
lret
out
scas
pop
aam
cmp
jo
and
xlat
lods
and
sbb
lret
mov
pinsrw
lret
sti
scas
dec
or
sub
mov
jecxz
sbb
imul
add
lret
pop
out
mov
mov
mov
pop
mov
hlt
repz
mov
loope
lret
frstor
add
outsb
pop
or
iret
in
jecxz
push
in
lret
adc
lret
add
and
je
arpl
sti
rcll
pop
sub
clc
lret
aas
dec
xor
ljmp
aaa
cld
lret
sti
inc
inc
mov
adc
pop
lret
push
and
in
cmp
lret
and
mov
mov
xchg
pop
decb
sub
sbb
push
push
stc
add
inc
ret
cmp
inc
sub
jecxz
jo
xor
jle
rorl
cmpsl
shl
in
into
das
cmp
lea
fwait
mov
rolb
xor
or
and
hlt
adc
lret
dec
pop
stos
dec
sub
mov
pop
fldenv
or
cmp
jg
movsb
sar
lods
sub
loop
push
cmp
lret
leave
pushf
in
pop
lret
iret
jecxz
pop
push
dec
jle
rcr
xorl
out
xchg
mov
hlt
sahf
lret
scas
lods
fdivp
enter
add
das
clc
jae
lret
sub
push
mov
lret
dec
sbb
dec
push
xchg
pop
movsb
sarl
sub
and
xlat
lret
insl
jecxz
push
lcall
pop
insb
lret
mov
add
ja
and
sbb
outsl
loope
cltd
mov
xchg
rorl
inc
aam
mov
mov
adc
lret
jns
inc
daa
stc
jmp
xor
scas
dec
ret
cmc
lods
xchg
cmp
rolb
ds
fs
rorl
sub
lret
jo
sbb
push
pop
aad
aam
and
dec
inc
lret
lahf
aaa
lods
test
lret
sahf
and
sub
adc
push
in
or
pop
shr
sti
adc
lret
push
push
pop
inc
mov
lret
sub
inc
inc
dec
fwait
pop
mov
or
test
pop
lret
sti
cmc
subb
fidivrl
pop
mov
xchg
addl
shll
mov
daa
fisubrs
sbb
in
frstor
cmc
lret
out
outsl
inc
inc
mov
push
inc
subl
and
lret
cmp
sarl
popa
lret
mov
icebp
cmp
loope
push
push
call
jno
cli
mov
inc
jp
mov
lret
outsb
dec
mov
aad
push
and
sbb
loopne
cmp
and
jl,pn
pop
lret
sbb
or
sub
xor
lret
repnz
mov
popa
mov
jae
lods
jne
lret
mov
and
subl
sbb
lret
sub
or
popf
fsubl
out
lret
mov
negb
cmp
or
pop
je
adc
pop
xchg
mov
jno
xlat
out
xor
cmp
sbb
and
in
push
add
das
sti
cmp
mov
iret
dec
dec
lret
sub
adc
fadd
cld
lret
sbb
sbb
pop
lret
inc
aas
adc
imul
push
sbb
or
pushf
data16
cmp
pop
inc
jmp
ret
adc
jo
lret
mov
lods
pop
loope
or
and
fdivrs
popa
iret
testl
int3
aas
imul
rcrb
jg
lret
out
inc
jecxz
cld
xchg
sti
cli
inc
or
push
sarl
bnd
ds
inc
fnstenv
jnp
cmp
or
adc
test
dec
lds
lret
mov
insl
xchg
insb
int
dec
mov
dec
jmp
gs
lahf
rcrl
es
lret
mov
aas
fs
clc
stos
pop
push
shlb
ja
jecxz
mov
mov
sub
fwait
dec
bound
sub
pop
mov
dec
xor
sbb
clc
inc
scas
fdivr
and
cs
cmp
sub
push
ficompl
pop
fmul
sarl
sub
xchg
fisubl
lods
ss
push
adc
fstpt
sub
xorb
repnz
movsl
cmp
inc
outsb
sbb
ret
sub
in
push
xor
test
andl
ds
and
jp
sbb
in
and
lret
repnz
ljmp
into
outsl
sahf
sbb
inc
push
lret
adc
lahf
cmc
cltd
xor
mov
sbb
lret
push
mov
cli
xchg
inc
lds
xchg
inc
cmp
leave
inc
mov
sub
std
xor
mov
lret
xchg
nop
ja
lcall
pushl
pop
sub
lahf
insb
jbe,pt
popa
or
imul
and
bound
ljmp
jle
inc
mov
jmp
sub
pop
pop
dec
adc
mov
xchg
aad
loope
lret
mov
insl
push
scas
imul
fidivl
shrl
xor
pusha
jecxz
imul
lret
pop
outsl
cmc
out
pop
lret
add
inc
xor
push
jmp
ret
push
pop
test
aad
cmp
iret
mov
icebp
leave
fcoms
xor
jb
or
aad
inc
out
loope
lret
mov
sub
sbb
mov
xor
push
rcrb
xor
pushf
lds
push
push
sbb
adc
stc
arpl
subl
xchg
lret
out
lea
lret
das
xor
add
add
cmp
jo
mov
add
adc
dec
push
cmp
fidivs
fucomi
mov
inc
insl
rorl
lea
cmp
cmp
push
test
shl
jl
pushf
lret
inc
lock
std
out
lret
mov
adc
dec
jp
and
loopne
sub
stos
fstpl
fs
lret
mov
pop
mov
lock
xchg
vpsrlw
cmp
xchg
pop
outsb
outsl
mov
out
xor
jne
lret
dec
dec
jp
inc
ljmp
and
sub
push
out
inc
inc
or
or
pop
std
push
lret
sub
lret
int3
xor
adc
int3
loope
lret
inc
gs
stos
loopne
jecxz
ret
jae
inc
lret
push
ffreep
pushf
push
sti
mov
sbb
jo
dec
int3
mov
or
fstps
push
pop
lret
sub
enter
add
test
xchg
push
sbb
or
int3
lret
ret
xchg
jle
lret
dec
xor
adc
push
jp
xchg
std
mov
loop
js
movsb
push
test
xchg
push
jmp
inc
lret
xor
sub
sar
call
sub
or
mov
rcrb
lret
dec
mov
xchg
daa
pop
jno
sbb
stos
mov
ss
mov
cmpsb
xchg
adc
dec
in
lret
pop
gs
out
adc
mov
xchg
or
insb
std
push
sbb
lret
or
mov
gs
lret
mov
imul
rolb
inc
lret
sbb
int3
pushf
icebp
jb
push
lret
cld
sbb
adc
lret
insb
int
xchg
inc
add
sahf
push
mov
clc
adc
lret
insb
int3
sbb
add
adc
inc
repnz
dec
fldcw
xlat
repz
pop
pop
xor
and
aas
sbb
lret
or
fcompl
pop
mov
push
xor
push
cmp
dec
jns
or
cmp
scas
test
push
ljmp
mov
shlb
insl
mov
jp
rorl
fisttps
data16
mov
out
int
or
out
inc
dec
pushl
xor
or
inc
popf
push
or
push
adc
inc
cmp
ror
sub
mov
int3
loope
inc
xchg
mov
in
test
push
lret
adc
lret
scas
das
mov
sbb
outsl
cmpsl
out
mov
jle
pusha
inc
pop
fldpi
fwait
testb
ret
pop
xor
sub
lret
jl
lret
lea
or
inc
mov
ss
jle
test
cmpsb
xchg
push
int
lea
push
popf
or
int3
das
insl
dec
enter
mov
and
lret
orl
mov
mov
lret
inc
xchg
pop
pop
fwait
rep
adc
into
mov
cmp
xor
in
enter
outsl
stos
test
adc
gs
or
loop
lret
mov
adc
inc
sbb
aas
inc
fmuls
test
sar
call
and
fldenv
ja
push
lret
sub
and
or
pop
inc
sbbl
add
stos
mov
fmul
mov
lods
pusha
in
adc
adc
pop
sub
popf
mov
xchg
gs
punpckhdq
push
pop
fimuls
fwait
inc
inc
gs
aam
inc
les
mov
mulb
stc
sub
ja
cmp
imul
and
cli
sti
ljmp
insb
dec
pop
int
out
ror
ss
push
cmp
sti
cmp
orl
or
lret
sub
jp
mov
ffree
push
daa
pop
mov
rolb
dec
loopne
mov
cld
push
scas
or
inc
xor
or
xchg
clc
outsb
push
lahf
fbstp
mov
call
rorb
xchg
ss
leave
xchg
mov
das
or
mov
daa
fisttpll
jne
aas
out
test
clc
arpl
sub
and
pop
xor
icebp
xor
cld
cmp
insb
xor
add
mov
in
pop
cli
push
mov
cmp
push
add
lcall
jle
xchg
sub
jmp
mov
mov
pop
cmpxchg
mov
into
rcrl
push
loopne,pn
sbb
or
js
lret
mov
inc
push
scas
dec
jb
mov
jnp
pop
dec
rclb
or
pop
enter
mov
leave
lret
cltd
mov
xor
das
cmp
xchg
jns
aad
cmp
int
mov
xchg
pop
add
call
mov
jle
mov
repnz
mov
dec
or
es
jo
lods
arpl
ja
cmp
mov
mov
push
fdiv
lret
add
pop
and
aaa
sbb
and
lods
lret
xor
push
xchg
mov
loope
dec
pop
jo
jb
lret
je
ja
sub
lret
out
mov
loopne
xor
cmc
in
sub
flds
cmp
lcall
pop
sub
lret
inc
loopne
pop
retw
stos
shlb
lret
push
gs
pusha
pop
add
push
mov
lret
cwtl
cmpsb
add
inc
loopne
outsb
rorl
mov
lret
cltd
gs
inc
push
cwtl
pushf
lret
and
add
adc
int3
fdivs
xchg
mov
out
pop
pop
loopne
imul
and
repz
mov
pusha
lods
jbe
rorb
rcr
outsb
sub
aaa
lods
inc
adc
dec
push
or
int3
ret
pop
mov
into
xchg
jbe
push
popa
xchg
lea
loop,pt
pop
cmp
mov
lret
or
lea
lahf
push
aad
cmpsb
jne
lret
in
push
inc
and
popf
loope
bound
and
adc
or
push
push
lret
iret
xchg
outsb
sub
fwait
repnz
es
sub
fdivs
jp
stos
ret
cmc
cli
cltd
pop
adc
aad
lret
add
in
iret
mov
lret
filds
jae
pop
mov
jmp
rep
mov
push
lret
inc
push
aam
ljmp
and
lret
popa
xor
mov
mov
mov
mov
xor
sarb
pop
ret
lret
scas
inc
in
cmp
repnz
jp
lret
shrb
lret
lods
pop
dec
cmc
lret
scas
lret
dec
sub
adc
lret
push
cmp
mov
xchg
jbe
ror
leave
cmp
pop
and
shlb
sub
loopne
lret
gs
lret
mov
jmp
mov
xor
data16
jnp
mov
ja
sbb
imul
aam
mov
rol
divb
lret
sub
cli
mov
and
inc
inc
test
stc
mov
arpl
stos
mov
cmp
or
dec
aad
ficompl
lahf
orl
repz
lret
insb
inc
jl
jno
stos
out
xor
xchg
lret
outsb
mov
jp
loop
sub
sub
lret
dec
mov
jle
aaa
ljmp
fldenv
test
or
in
ja
xchg
outsb
xor
bswap
imul
add
mov
dec
faddl
lret
xchg
mov
lret
inc
jp
loope
lret
sub
std
dec
enter
and
xchg
mov
stos
and
mov
cmc
pop
push
popf
arpl
rcll
mov
jp
add
lret
fsubrl
lret
mov
and
sub
jg
imul
dec
push
lret
cmpsl
cmp
into
arpl
data16
lret
jno
pop
cs
sti
mov
mov
leave
xor
jno
ss
vmwrite
lods
popf
push
inc
xchg
mov
daa
or
xor
mov
bound
mov
das
lods
lret
inc
mov
scas
fcmove
push
ret
sar
jnp
adc
out
not
mov
lret
adc
lret
das
out
sub
mov
add
rorb
lret
dec
xor
lret
fildll
inc
xchg
mov
xchg
incl
push
popa
adc
ja
loope
in
lds
inc
outsb
dec
mov
inc
jp
cwtl
xor
inc
push
std
and
lret
test
jb
pusha
push
jae
dec
mov
pop
lret
addr16
push
ret
mov
xchg
repnz
mov
push
jle
rcrl
ljmp
ljmp
or
lahf
mov
inc
pop
in
neg
mov
and
fs
mov
jns
lret
ja
pop
or
mov
loop
imul
sbb
sbb
pop
leave
lret
mov
gs
movsb
inc
cs
mov
pop
lret
cwtl
sbb
xor
in
xor
xor
jo
adc
lret
jmp
push
das
jle
push
xor
lret
movsl
dec
add
fwait
imul
cmp
cmp
or
stc
push
xchg
or
jecxz
lret
cli
xchg
int
lcall
leave
sbb
sti
pop
call
adc
xlat
jns
sbb
cld
hlt
lahf
adc
pop
mov
cmpb
push
jne
out
xor
mov
lret
hlt
pop
jne
call
daa
cwtl
divl
sub
sub
lret
pop
lret
and
adc
lret
js
cmp
push
fwait
cmp
popf
add
mov
push
and
movsb
and
push
mov
lret
shrb
or
cmp
and
adc
iret
or
js
icebp
xchg
sbb
jl
push
mov
scas
sub
xchg
bound
ljmp
data16
or
jno
call
aam
ret
aad
lret
cmpb
mov
push
clc
imul
push
mov
adc
cmp
insb
fwait
scas
pop
jp
xlat
xor
mov
aam
dec
pop
inc
or
cs
cmp
inc
data16
cmc
daa
jae
aam
sub
loope
lret
mov
ds
mov
lret
call
ja
mov
ljmp
mov
lea
aaa
mov
lret
cmc
mov
jmp
scas
out
insl
lods
jo
jge
lret
cmp
dec
fwait
jp
inc
into
sahf
inc
rcl
mov
enter
jae
xchg
jmp
or
mov
in
ss
and
dec
jns
lret
addr16
imul
cmp
sub
jnp
mov
insl
xor
test
sbb
adc
add
push
cwtl
mov
div
dec
fldenv
inc
lret
hlt
and
xchg
out
outsb
lret
aam
pop
clc
mov
inc
push
pop
or
into
rcl
mov
movsb
add
lret
mov
inc
vpmaddwd
mov
sbb
jbe
int
rcrl
pop
shlb
rclb
faddl
mov
inc
push
mov
outsl
les
aad
cmp
pop
jbe
cmp
pop
test
cmpb
addb
in
add
dec
out
mov
lret
push
xchg
push
loope
cmp
cmpsb
jne
xlat
shl
sub
jnp
inc
and
cmp
push
in
je
fsts
cmp
xor
fisubrl
aas
dec
push
adc
clc
push
jge
or
int
leave
push
mov
jae
sarb
mov
mov
cmp
ja
and
lock
aad
shl
shrl
add
push
lret
mov
mov
jbe
lods
add
cmpsb
out
insl
js
pop
pusha
lret
push
fisubs
pop
sub
mov
push
jae
fcomps
adc
push
int
into
dec
inc
pop
and
add
mov
cwtl
jno
scas
pushf
jl
cmpsl
vsqrtpd
xchg
push
pop
aas
ret
xor
cwtl
mov
sbb
in
inc
cli
sbb
sar
sub
mov
pop
push
iret
cs
add
xor
and
inc
out
stos
adc
std
push
int
scas
sub
loop
lret
pop
test
dec
sti
push
lret
xchg
js
lahf
push
cmp
fistpl
sahf
int3
inc
add
mov
sub
mov
pop
arpl
pop
sub
lods
and
xor
lret
mov
pushf
aam
sbb
lret
sub
cmp
xchg
jbe
cmp
cs
insl
mov
sub
cld
ret
sbb
dec
lret
cmp
mov
lcall
test
sub
stos
in
inc
hlt
mov
das
movb
pop
add
loopne
push
lahf
mov
and
inc
pop
out
test
insw
pop
add
xchg
lods
pop
fadd
lcall
and
pop
push
sub
adc
xchg
cltd
lret
insb
mov
push
dec
lret
jge
sbb
movsb
jnp
fdivr
or
pop
sarl
orl
cli
inc
push
jnp
ret
test
or
rcrb
sti
push
in
jns
daa
mov
stos
and
inc
mov
dec
ljmp
inc
lret
repnz
and
mov
shll
lods
sarb
sbb
adc
imul
adc
add
das
roll
fisubrs
mov
mov
push
pop
fwait
aaa
or
lret
fnsave
sub
sub
sbb
mov
stos
fsubs
lods
lret
gs
subl
sbb
lret
dec
xchg
pop
mov
outsb
mov
xchg
int3
dec
jne
in
lret
fidivrl
out
cltd
adc
fst
and
andl
fmul
testl
sarb
adc
ficoms
test
lret
popf
push
filds
popa
jecxz
cltd
leave
xor
lahf
lea
lret
adc
stos
xor
test
sti
sbbl
lret
xchg
push
lods
xor
int
or
and
pop
mov
ljmp
loopne
bound
dec
sub
std
mov
lret
push
lret
adc
and
lret
loopne
and
push
adc
js
addb
sbb
sbb
add
mov
xchg
incb
mov
out
pop
lcall
lret
fstpt
lret
mov
lret
std
mov
in
stc
mov
mov
jmp
ret
adc
mov
xor
les
mov
into
ds
or
sbb
lret
stos
xor
pop
lret
mov
push
lret
loopne
aam
in
fidivl
pop
lods
cwtl
fldl2t
mov
arpl
xor
jle
leave
pop
pop
iret
mov
lods
or
repz
daa
loopne
mov
insl
pushf
sbb
cli
call
fcom
mov
inc
aad
pushf
mov
xor
lcall
and
sar
out
shrb
lret
jp
inc
mov
lahf
out
ljmp
adc
pushf
cmp
lahf
inc
in
jl
sub
mov
lret
lds
mov
mov
lods
push
ja
lret
dec
cmpsl
inc
sub
sbb
test
ror
fidivrl
in
pusha
mov
not
hlt
aad
mov
xchg
and
push
fdivrs
dec
xchg
pop
enter
push
je
mov
jg
xlat
jb
in
fstl
push
mov
cmp
xchg
pop
fmul
sbb
fsts
in
mov
pop
sbb
in
add
mov
push
outsl
sbb
mov
maxps
xor
cmpsl
pushf
xchg
shrb
mov
push
lret
mov
dec
lret
or
cmp
cmp
push
cmc
mov
inc
and
sbb
sub
clc
push
lret
sarb
ficompl
leave
mull
or
cmpsl
lret
lcall
test
add
push
push
lret
xor
lret
inc
cmp
dec
mov
lret
jl
add
lret
push
xchg
lcall
fwait
sbb
adc
test
addr16
push
pop
adc
xor
push
jb
mov
mov
lret
xor
or
test
sbb
mov
in
out
loope
shrb
movsl
add
cli
mov
sti
andl
pop
push
test
xchg
mov
cld
inc
mov
lret
fldt
mov
mov
and
cmp
pop
popf
mov
mov
sti
dec
mov
fidivrl
jl
int3
xchg
fisttpll
jle
cltd
jns
mov
mov
mov
lret
cmpsl
add
repz
or
mov
jg
mov
or
lret
cmp
cmp
outsl
push
into
cltd
out
fiaddl
js
sbb
dec
insb
loopne
sub
lret
js
lret
adc
lret
faddp
pop
mov
clc
insb
jmp
cltd
sbb
jnp
xchg
jno
xor
scas
jne
mov
aas
dec
pop
popa
cld
icebp
scas
repnz
jne
add
lret
sub
sub
scas
test
jg
test
jp
and
jb
pop
push
fwait
push
jo
xchg
and
jae
shll
pop
lods
stos
shll
xor
stos
and
xchg
mov
cmp
pop
lret
mov
mov
pushf
lret
pop
xchg
lds
test
adc
pop
das
add
and
stos
cmp
push
push
push
dec
sbb
add
sbb
inc
xchg
xchg
inc
repnz
cld
mov
xor
cmp
xor
xacquire
inc
xchg
sub
frstor
xchg
pop
imul
aaa
shrb
inc
vpaddb
and
adc
shlb
movsb
movsl
dec
lret
push
xchg
jge
loopne
mov
sti
dec
lcall
xor
mov
xor
mov
xor
lret
mov
push
lret
jo
call
xchg
into
clc
repnz
loop
fwait
arpl
inc
adc
lret
into
sbb
imul
ss
xor
enter
clc
aas
pop
jnp
push
jg
xor
mov
adc
lret
mov
gs
loope
lret
lea
lret
mov
jmp
enter
xchg
cs
or
push
xchg
mov
sub
cmp
adc
lret
push
shr
arpl
push
push
lock
negb
pop
xchg
test
nop
xor
pop
lret
mov
dec
cmp
mov
dec
jno
sub
and
pop
xchg
pop
lret
push
mov
cmp
sub
adc
iret
pop
push
add
das
lret
jp
daa
lret
or
sysret
shrb
addr16
pusha
pushf
jle
stos
inc
push
mov
xlat
out
cmp
and
fs
and
add
cmp
lret
orb
lods
loopne
lret
fistpl
lret
or
inc
pushf
pop
push
cwtl
sub
das
in
dec
xchg
mov
inc
lret
mov
and
lods
gs
ret
push
inc
sub
lret
imull
lret
sbb
fiaddl
adc
shl
jb
and
sti
cli
es
shlb
sub
cmp
push
pop
lret
imul
lret
push
shlb
cmp
pop
and
inc
or
cmpsb
mov
inc
mov
int3
insb
lret
andl
lds
scas
push
xchg
lret
fs
aas
sub
lret
pop
jbe
push
cmp
jp
fs
lret
stos
inc
rcr
jmp
xchg
or
pop
lret
hlt
ficompl
push
mov
pop
sbbb
fsubr
lret
mov
mov
out
adc
push
ret
jg
test
cli
fidivl
adc
rol
into
icebp
xor
les
jl
out
testl
jle,pt
insl
sar
int3
inc
lods
mov
jl
rorl
inc
and
push
into
movsl
sti
mov
mov
pop
out
push
lret
mov
test
mov
jne
mul
dec
inc
lret
mov
out
lret
cmpsl
add
in
lods
lret
dec
cwtl
lret
jno
outsb
push
out
lret
push
popf
adc
dec
or
scas
sbb
int3
mov
sarb
mov
mov
sbb
sbb
or
and
jbe
lret
cmp
or
hlt
lret
cwtl
aaa
cmpsb
idivl
lret
or
in
jp
sbb
mov
cmp
pop
mov
mov
lret
xor
sub
push
lret
out
or
cmp
lret
or
add
ds
mov
mov
jno
push
xlat
jnp
in
cld
lret
fistpl
dec
add
dec
out
ss
mov
push
ja
jmp
fisubs
pop
je
mov
adc
xor
test
sbb
into
fstps
jns
and
shl
mov
pop
in
addr16
xchg
lahf
repz
fbstp
lret
imulb
subl
stos
imul
adc
fmul
aad
and
mov
dec
lock
out
sub
xor
push
and
mov
lret
jno
stos
inc
fwait
pop
lret
push
lock
push
out
mov
pushf
outsl
xchg
lret
jb
add
add
lret
loop
mov
xor
insl
shll
mov
lock
xchg
les
cwtl
stos
pop
movsb
or
rorl
mov
or
dec
jne
outsl
and
cmpsl
pop
fmul
in
cmp
lcall
fisttpl
mov
lds
inc
lret
mov
hlt
iret
push
aad
lret
into
outsb
test
gs
adc
pushf
pop
pop
pop
lret
xor
add
sbb
ds
enter
xlat
fisubrl
jbe
pop
jg
inc
int3
push
push
imul
cli
lods
mov
push
sahf
dec
fxch
sbbl
xor
and
out
pop
add
jge
js
fcomps
and
shl
cli
cs
jecxz
movsb
aam
sti
inc
es
shlb
js
lret
inc
add
shrl
pop
repz
add
stos
bound
push
mov
lock
xor
lret
ja
mov
jp
lret
ret
pop
lds
sbb
or
enter
shl
paddw
pushf
stos
out
xlat
jmp
int3
dec
inc
lret
shl
sbb
pop
loope
sarl
or
fiaddl
jle
adc
rcl
xchg
pop
out
pop
inc
mov
push
cmpsl
aad
lret
sub
push
and
lret
test
pusha
testb
fmul
push
cmp
fcmovu
and
dec
xlat
add
dec
pop
push
mov
stc
xchg
mov
test
into
loope
fldcw
sbb
call
aad
mov
int3
movsb
outsb
push
inc
push
mov
xor
fdivrl
fwait
sbb
sahf
mov
loopne
lods
cmp
add
inc
ficompl
mov
imul
cmp
lret
into
mov
fwait
lahf
mov
shrb
pop
vcvttps2dq
inc
outsl
lret
lock
pop
into
fistps
fnop
jle
cli
loope
test
and
mov
mov
cmp
mov
clc
movsb
stos
jnp
in
not
je
daa
stos
das
lret
and
imul
xor
add
pop
dec
mov
lods
xchg
rcll
lret
testl
pop
mov
mov
lret
xor
lret
cmp
add
movsb
jns
ljmp
ret
cmp
pop
mov
cltd
rcl
movb
jno
rcl
jne
ret
lret
lahf
test
jae
dec
in
into
sub
xchg
ktestb
adc
xchg
daa
pop
popa
gs
cmp
test
jle
in
mov
sti
testl
outsl
repz
add
mov
lret
mov
cmp
mov
push
nop
scas
mov
stc
xchg
int
push
mov
pop
jecxz
lret
pop
lea
jge
mov
into
xor
mov
icebp
fisubrl
mov
push
outsl
lret
lcall
dec
cmp
lret
test
or
mov
fcomps
jb
ja
inc
in
lret
inc
jl
mov
das
lret
andb
cltd
mov
push
pop
flds
es
lret
mov
pop
lret
ja
insl
arpl
in
ss
add
inc
add
not
test
cmp
adc
jmp
jge
idiv
push
js
lret
stos
mov
lret
fadd
mov
fmuls
or
bound
and
mov
xchg
push
lret
inc
cmp
lahf
jns
add
jbe
mov
mov
jecxz
or
test
enter
mov
ror
and
stos
adc
gs
lret
or
dec
ds
stos
lret
inc
jnp
push
test
or
lret
mov
out
into
inc
test
ror
stos
cs
or
pop
adc
cmp
in
lret
mov
jne
imull
in
pop
fwait
sub
lret
mov
movsb
sub
xchg
pop
imul
sbb
sub
pushf
lret
orb
sub
jecxz
dec
pop
cs
outsb
cld
lcall
adc
cmp
ret
andb
cmp
ss
mov
or
jecxz
repz
lea
aad
jae
mov
mov
lret
jo,pt
mov
mov
pop
cld
cli
in
push
mov
mov
stos
jl
sbb
outsl
daa
fdivrs
jecxz
test
push
cmpsl
mov
js
jl
push
cmp
lret
cmc
xchg
into
mov
xchg
in
int
add
ret
pop
jb
inc
push
xchg
lret
cltd
adc
enter
das
xor
clc
sub
or
shrb
adc
shlb
xchg
fs
cmpsb
jns
lods
cmp
into
test
shll
movsb
lret
xor
fdivs
rorb
xchg
pop
pop
lret
dec
scas
jb
and
or
adc
jnp
cmpsl
rorl
inc
outsb
cli
inc
sub
xor
mov
not
loope
cli
fiaddl
push
lods
loop
push
mov
fldl
jle
sbb
and
mov
inc
push
outsb
pop
lcall
sub
sbb
sbb
lret
fidivrl
test
xor
mov
ss
jle
insl
mov
mov
mov
lret
decb
xchg
and
xchg
add
aam
xor
das
pop
cs
adc
rolb
lret
mov
push
push
mov
mov
jne
fstpl
fstps
stos
sbb
into
and
xchg
lret
cmpsl
push
out
das
jno
or
push
add
in
lret
cwtl
jo
pop
push
push
loope
cmp
lret
leave
dec
adc
aaa
in
push
mov
fnstsw
dec
pop
out
subl
shrb
jnp
sti
xlat
stos
adc
into
aas
jbe
gs
pop
or
shrb
jmp
sarl
lret
sub
or
inc
test
leave
push
cmp
and
iret
jmp
lret
shl
jp
imul
lret
mov
shrl
jecxz
rcll
fcmovne
mov
vhaddps
xchg
xchg
push
es
lret
sti
inc
cli
add
aas
sbb
sub
outsl
in
lret
sbb
lods
pop
cmpsb
lret
xchg
loope
or
mov
insl
paddq
push
jmp
stos
push
scas
cmc
lret
or
jno
dec
lret
repz
and
xchg
cmp
pop
pop
aaa
adc
out
push
je
imul
adc
xchg
pop
lret
sbb
lret
iret
orb
sbb
jecxz
out
mov
lret
pop
sub
fbld
lea
mov
adc
and
pop
inc
mov
jne
stos
ds
insl
lret
in
add
jmp
imul
std
rolb
lret
xlat
xor
mov
cltd
lret
mov
add
hlt
clc
cmp
xchg
fbstp
lret
push
and
xchg
mov
inc
sahf
mov
mov
xchg
xchg
fcompl
inc
test
lret
mov
push
int
cmp
pop
xor
aam
jo
dec
lret
or
mov
push
cmp
and
loope
mov
fisubs
fisubl
cmp
mov
lret
sbb
or
xor
into
jp
shll
pushf
lret
sbb
test
push
or
mov
xchg
cwtl
fcmovb
lret
cmp
add
lea
fisubrl
daa
add
push
cltd
into
sub
fs
fwait
shlb
inc
aam
mov
cltd
push
inc
mov
add
cmpsl
gs
lahf
loope
lea
loopne
pop
inc
xor
xor
sbb
inc
cmpsl
jmp
inc
and
adc
aam
xchg
cli
popf
enter
bound
add
fcomps
insb
mov
and
les
jmp
pop
jl
ljmp
hlt
add
sub
pop
dec
lret
insb
fcomps
fidivrl
lret
movsb
xchg
rol
adc
aas
adc
and
xor
mov
inc
mov
movsb
sbb
pop
stos
xchg
fdivl
jo
lret
mov
ljmp
loopne
fisubs
mov
icebp
lret
and
sub
mov
lods
les
mov
dec
fs
cmp
jle
pop
js
pop
jmp
jge
ja
and
and
xor
lret
cmpsl
iret
scas
lods
xor
loop
notb
jp
rorb
mov
lcall
xchg
test
mov
lret
jge
cmpl
cmp
lahf
ds
mov
rcll
push
fs
xor
imul
lods
aaa
popf
das
out
lret
inc
fmul
fisttpl
ficomps
popa
rorl
stc
adcb
adc
jmp
rcrb
lret
jecxz
lahf
imul
nop
push
stos
push
ds
divb
je
repz
mov
lods
add
lret
in
and
dec
cmp
mov
cmp
pop
lret
mov
adc
mov
lret
scas
cmpsl
rcrb
or
imul
sbb
jnp
cmpl
jp
add
int3
lods
jp
and
fisttps
xchg
cwtl
aam
call
inc
pop
lock
sbb
into
jp
xchg
sbb
clc
pop
dec
popf
mov
repnz
cltd
or
jp
arpl
or
in
xor
mov
xor
mov
mov
or
xchg
fstps
lret
ficompl
sub
sub
fsubs
dec
and
scas
jo
mov
stos
fsubrs
xchg
stos
xchg
daa
inc
inc
sub
loop
dec
fwait
cltd
push
adc
icebp
mov
cli
jo
movsl
repnz
pushf
cmp
adc
fdivl
or
in
into
push
pop
lret
imull
mov
scas
fiaddl
into
mov
fwait
sbb
pop
or
or
mov
pop
es
sahf
inc
push
inc
mov
sbb
sub
or
imul
call
stc
xor
sarb
enter
jne
mov
test
mov
lret
fnstsw
pop
dec
xchg
mov
imul
fnsave
cmpb
mov
notb
popf
out
inc
mov
sbb
push
push
lret
push
push
add
out
or
sbb
lret
lahf
mov
add
test
int
cmp
dec
lret
test
clc
repz
xor
xchg
lret
xchg
xor
rorb
sbbl
cli
push
jp
pop
mov
cwtl
movsb
sbb
jae
mov
jmp
adc
lret
lret
out
jb
mov
cltd
enter
jns
jnp
push
push
lods
rolb
inc
mov
call
call
cmp
iret
in
push
ljmp
mov
mov
adc
mov
pop
or
lods
cs
mov
jns
loope
test
sbb
add
shrb
aaa
mov
lret
inc
dec
mov
dec
pop
pop
loopne
cmp
push
loope
dec
lret
sti
clc
lcall
stos
lret
bound
int
orl
lret
jp
rorl
lret
mov
mov
push
scas
cmp
fstps
ds
push
roll
adc
decl
push
mov
cmpsl
js
sbb
lret
fnstsw
stos
sub
rorb
loope
popa
movsb
fdivrs
inc
and
mov
sub
dec
stos
add
adc
cmp
loopne
sbb
adc
popa
jge
lds
pop
push
es
xlat
mov
jle
push
lret
cmp
rorl
lret
mov
mov
xor
fidivl
movsl
pop
lret
push
scas
imul
jno
pop
jge
in
das
rcr
push
repz
outsb
shll
adc
mov
stos
and
jg
add
cltd
dec
mov
lret
mov
push
pop
in
jle
imul
mov
scas
gs
push
dec
outsb
mov
pop
lret
jo
jecxz
mov
nop
test
xchg
mov
pushl
popf
pop
dec
mov
jae
out
and
insl
out
sahf
mov
xor
lret
bound
lret
mov
repz
jbe
jae
xchg
mov
stos
cs
push
push
dec
ret
test
fidivs
mov
stos
push
push
sub
pop
dec
xchg
lret
sti
add
mov
lods
scas
test
lret
les
mov
lret
shlb
dec
lret
das
imul
insb
push
mov
jge
mov
and
dec
aam
xchg
int
lret
rcr
xor
sub
ljmp
into
and
or
mov
cmc
in
jo
sbb
adc
ret
stos
cmp
arpl
pop
lret
in
mov
gs
int
scas
pop
lret
xor
pmaxub
lret
repz
xor
jbe
lret
in
push
inc
cli
mov
mov
push
lret
mov
ljmp
cwtl
fadds
cmp
lret
lods
adc
fdivs
dec
int
sti
nop
stos
cmp
and
lret
push
fstpl
cmp
inc
lret
sbb
aam
and
addl
ss
lods
mov
mov
push
ljmp
int
xor
lret
lahf
jecxz
pop
inc
clc
sbb
cld
dec
xchg
lret
mov
ror
add
cmpsl
jmp
lret
rorl
cmp
lret
pusha
and
xlat
jmp
cmp
jno
mov
lret
popf
lods
jnp
pop
mov
shlb
lret
lods
mov
sbb
xchg
rcr
mov
hlt
mov
inc
xchg
or
outsb
enter
shlb
cli
insl
sbb
fnstcw
lret
jle
in
mov
popf
mov
lret
jle
cld
sbb
lret
imul
and
mov
dec
fwait
cmp
divb
pop
insl
or
mov
mov
mov
mov
shrl
out
lret
rorl
jae
in
cmp
shl
push
inc
inc
pop
push
iret
mov
pop
lret
sti
popf
stos
xchg
add
lds
loope
lret
xchg
xchg
xchg
push
pop
mov
into
lods
mov
adc
insl
mov
stos
or
push
loop
rol
mov
stos
imul
stc
add
subl
pop
test
loop
xor
lret
fbstp
sub
lret
fprem
and
fwait
lret
data16
jmp
mov
out
xor
cwtl
loop
lret
sbb
jmp
mov
sub
in
fisubrl
xor
test
sbb
sbb
jns
lret
sbb
lret
cmpsb
push
ret
xor
inc
mov
nop
and
mov
xchg
jno
mov
fadds
test
inc
popa
fdivl
sbb
and
push
sbb
dec
jle
mov
pop
or
lret
mov
inc
fnstsw
rol
lret
cltd
ret
cmpsl
jno
ljmp
fs
in
mov
xchg
xor
adc
cwtl
lret
dec
movsl
add
repz
cli
mov
mov
addr16
pop
sub
lret
xor
leave
decl
iret
mov
mov
shl
xchg
cwtl
mov
lret
cs
std
push
jecxz
and
sbbb
ss
mov
sbb
hlt
sub
lret
adc
jo
and
fnstenv
mov
fstpl
adc
movsl
pushf
add
rorb
iret
cmp
into
scas
lret
sahf
imul
add
push
fcmovnu
rcl
sub
mov
lret
incb
gs
sarb
movsl
lret
inc
xchg
rolb
hlt
leave
xchg
cltd
andl
in
adc
or
ljmp
rclb
xlat
subl
mov
cli
insb
daa
lret
loopne
lods
jmp
push
sbb
mov
sub
dec
cli
ret
push
ja
cli
into
fwait
xor
shll
mov
add
arpl
lret
push
xchg
aam
push
lret
mov
xchg
push
xchg
movsb
cmp
inc
sbb
aad
mov
call
int
or
add
sub
jecxz
and
cltd
jmp
mov
mov
aam
es
ljmp
dec
inc
ret
nop
and
sahf
push
out
lret
push
clc
addr16
add
aad
mov
lcall
pop
or
mov
gs
lret
stc
dec
and
xlat
cmc
cli
cmp
fimull
mov
cltd
and
scas
loopne
lret
and
cltd
push
add
jge
ret
adc
cmp
and
xor
lret
shlb
mov
lock
sub
jg
push
pushf
scas
lret
cmp
lret
pop
in
jecxz
int
ret
jbe
cltd
adc
pushw
lret
dec
loope
cmp
outsl
ja
lret
loop
cltd
in
xor
mov
lret
out
add
aad
push
lret
ds
and
in
or
cmp
mov
push
js
lret
insl
dec
mov
lret
jecxz
push
sub
dec
add
jb
mov
js
or
pop
repz
sti
push
loop
test
lret
jecxz
mov
inc
aaa
xchg
lods
adc
loop
mov
lods
cmp
test
pmaxsw
sub
int
mov
dec
mov
sub
dec
enter
sbb
xlat
repz
lret
sti
mulps
fcmovb
popf
out
std
imul
pop
cli
aad
sub
jns
ret
lret
sbb
ss
or
lcall
mov
inc
jae
lret
stos
mov
pop
lods
sbb
push
lret
ss
mov
addl
in
mov
lret
adcl
lret
jns
mov
push
rorb
or
cmp
add
jp
in
loop
in
cmc
pop
adc
and
pop
mov
cli
repnz
adc
pusha
lret
and
lret
dec
dec
jno
push
push
int
imul
clc
lret
fs
lcall
inc
xor
cmp
pop
mov
pop
pop
jecxz
lret
mov
ja
leave
lods
stos
aas
inc
mov
lret
in
lret
stos
inc
mov
popa
xor
fcomps
mov
lret
mov
lea
mov
jl
fisubrl
fisubl
flds
scas
daa
shl
lock
push
xor
dec
inc
inc
adc
loopne
dec
add
sbb
mov
push
and
push
jp
cmp
xchg
cli
ficoml
rcrb
mov
jo
mov
out
xlat
inc
lfs
lret
xorb
lret
popa
jae
scas
add
add
mov
pop
mov
cld
cmp
repnz
push
out
les
lret
cmp
fimuls
stos
lods
stc
lsl
mov
mov
cmp
jnp
sub
lret
xchg
nop
dec
push
popf
fst
mov
adc
lret
mov
xor
scas
cmp
lods
int3
mov
lret
addr16
daa
adc
adc
push
dec
or
sbb
mov
mov
lret
jmp
iret
shr
lret
pop
mov
inc
and
lret
pop
and
es
outsl
fwait
push
insl
mov
ljmp
lods
sahf
add
vmulss
xchg
jp
fldenv
les
aas
lret
adc
mov
into
lret
add
mov
aam
lret
xor
push
xchg
add
sub
icebp
lcall
dec
dec
movsl
jecxz
jge
pop
fcmovnb
sub
cmpb
sub
sbb
cmp
or
ret
adc
fmulp
lods
jge
std
das
dec
push
adc
lret
ret
inc
orl
or
testl
mov
xor
xor
xchg
shlb
push
imulb
les
test
jnp
jae
mov
add
dec
fidivrs
push
inc
pop
loopne
jno
stos
or
das
fsubr
jne
xchg
mov
test
subl
out
push
pop
mov
mov
lods
into
jo
repz
mov
push
outsl
xchg
sbb
insb
stos
lret
leave
xchg
xchg
ja
mov
rolb
out
lcall
stos
or
mov
hlt
jmp
mov
cmp
pop
pop
sarb
xchg
shlb
clc
in
loopne
cli
ja
mov
lret
push
divb
je
lret
xchg
or
aaa
mov
sub
mov
xlat
cmp
dec
sti
jle
cmc
incb
pop
or
sbb
mov
mov
test
cmp
ret
lret
mov
and
lret
pop
mov
adc
icebp
lret
add
sahf
pop
lods
cmp
lret
xchg
push
push
jae
lods
in
inc
aaa
ljmp
sar
out
push
fimull
adc
xchg
sbb
scas
sub
out
jmp
jno
or
gs
lret
lret
jnp
enter
mov
mov
sub
in
test
iret
pop
shrl
rclb
lret
mov
push
lret
jae
sbb
rcrb
inc
test
fs
sub
or
jns
cli
jnp
aaa
mov
inc
sbb
mov
mov
pop
and
test
js
test
cltd
jbe
and
cmpsb
cs
lret
add
inc
js
mov
mov
scas
xchg
insl
lret
hlt
mov
loope
fidivl
int3
sbb
mov
dec
popf
fildll
pop
push
cmp
adc
xchg
test
lret
ja
mov
adc
das
mov
imul
and
pop
add
mov
push
jl
dec
je
mov
cmp
fidivl
xchg
shlb
test
lret
mov
lock
int
pop
into
xchg
adcl
cltd
leave
push
cld
cmpsb
xchg
stos
pushf
into
lea
add
and
xor
lret
adc
dec
sub
in
imul
js
fs
mov
aaa
mov
das
or
sbb
int3
xlat
lret
bound
mov
js
cmp
xchg
jge
mov
loopne
sbb
lahf
jmp
mov
sbb
lret
mov
repnz
test
fistpll
loopne
mov
mov
jecxz
mov
stos
sarl
lret
pop
xchg
sbbl
dec
scas
outsb
and
mov
rorb
lret
out
sbb
ss
cmp
xchg
rcrb
hlt
lret
nop
xchg
jg
sarb
daa
shl
jns
sbb
xchg
mov
and
mov
mov
lahf
jp
movsl
repz
pop
xchg
and
sbb
scas
pop
xor
lret
xchg
addl
out
test
sbb
push
jo
jmp
popl
dec
int3
adcl
pop
push
stos
pop
std
je
test
jecxz
xchg
push
aad
insb
ss
ljmp
mov
xor
mov
cmpsl
aaa
scas
stos
add
in
sub
jle
lret
repnz
and
cmp
or
sbb
sub
mov
fwait
xlat
add
cs
jnp
cwtl
cmp
sub
stos
push
loopne
nop
mov
dec
ret
sbb
cld
and
cmp
cwtl
push
xchg
sbb
jno
mov
pop
pop
lret
dec
mov
lret
mov
loopne
test
lret
push
adcb
dec
lods
lcall
push
inc
rol
scas
lret
and
jp
jo
pop
stos
fisubrl
das
mov
pop
dec
cltd
xchg
adc
pop
mov
mov
mov
ficoml
cmp
or
cwtl
pop
cli
idivl
repz
popf
loop
sub
ret
xchg
scas
and
pop
pop
popa
lret
or
lea
ret
jmp
xor
fwait
cmp
xlat
sub
stos
leave
lret
xchg
ret
out
mov
outsb
mov
mov
or
stos
push
fimull
mov
rcrb
cmc
lret
out
inc
cwtl
xchg
adc
shrl
or
aaa
mov
lret
sbb
fs
daa
lret
imul
lds
mov
loop
jb
lea
cwtl
pop
push
ljmp
fcomps
outsb
lret
insb
aas
fstpt
jo
loopne
push
xor
jbe
pop
mov
outsl
xchg
sub
je
add
divl
or
jecxz
push
movsb
in
push
pop
mov
xor
int
cmp
ret
fsts
jo
jae
push
out
push
jb
dec
loopne
jg
xor
and
or
into
lret
fisubs
fiaddl
inc
push
test
lock
in
jb
push
inc
fmul
pop
sub
scas
scas
sbb
jno
dec
jl,pn
xchg
rcr
leave
lret
adc
cwtl
mov
stos
mov
adc
call
jge
sub
sub
pushf
push
mov
test
ljmp
sub
push
aaa
inc
lret
add
mov
lret
repz
stos
cmp
pmuludq
or
ret
stos
cs
and
bound
jge
pusha
xlat
in
ljmp
rolb
lret
xchg
or
pop
lret
push
lahf
test
mov
popa
mov
lret
fnstcw
xchg
stos
cmpsl
jns
jl
pop
in
or
repz
das
stos
sti
nop
mov
dec
cltd
int
or
sub
outsl
and
push
hlt
inc
and
dec
sbb
je
pusha
push
mov
pop
mov
dec
std
mov
aas
lret
or
das
stc
dec
repnz
jmp
xchg
push
es
mov
lcall
insb
stos
dec
inc
add
fdivs
ficompl
or
xor
dec
lret
dec
sarl
in
jno
or
lods
pop
adc
mov
lret
jmp
push
mov
arpl
cmp
or
outsl
pop
dec
gs
pop
lret
shrl
jno
and
pop
push
sbb
imul
add
lret
cmc
pop
inc
pop
add
sbb
stos
pop
mov
fucomi
inc
imul
test
cli
inc
cmpsb
dec
push
out
mov
dec
xchg
lret
insb
or
xchg
adc
test
adc
stos
rorl
pop
xchg
push
jge
hlt
lret
scas
std
imul
jae
xor
or
mov
inc
lret
into
enter
mov
insl
lret
cmp
imul
lret
scas
and
mov
and
push
arpl
mov
adc
mov
movsl
imul
mov
out
lret
std
jns
dec
pop
lret
lcall
sti
dec
jl
andl
mov
jg
jmp
dec
lret
repnz
push
jae
cmp
in
stos
xor
xor
fdivr
repz
lret
insl
mov
lret
push
sbb
cli
pop
and
xorl
pop
push
push
aas
adc
xor
adc
insl
lret
xor
lret
jmp
outsl
leave
pop
push
mov
lret
xchg
push
inc
pop
sub
lret
push
mov
lret
addl
add
pop
mov
insl
inc
sub
add
rcl
inc
loopne
mov
fisttpll
push
lret
sbb
sahf
ds
jo
les
scas
movsb
sbb
fucomp
cli
pusha
mov
sbb
dec
lret
cmp
cmc
les
lret
clc
xchg
mov
or
ds
push
iret
xor
push
lret
lret
xor
jo
or
add
xchg
lcall
dec
jmp
scas
lret
outsl
popf
xor
sti
mov
in
lret
pop
sti
mov
arpl
inc
outsl
mov
push
sub
sbbb
ss
adc
shrb
mov
mov
jle
lret
inc
xchg
std
lret
scas
testl
sbb
xor
xchg
leave
dec
sbb
mov
add
cmp
adc
xlat
repnz
orl
lret
or
pop
stos
mov
popf
lretw
lret
test
lret
test
sub
or
pop
mov
cld
lret
pop
or
xchg
lret
adc
repz
sbb
out
sarl
push
fs
lret
mov
repnz
lock
pop
mov
push
sbb
mov
inc
mov
fisubrl
mov
lret
aas
scas
adc
sbb
andb
and
push
mov
jns
mov
testb
lahf
flds
stos
push
std
fiaddl
mov
orb
popa
out
out
push
lcall
jb
jo
sub
notl
lahf
test
call
cli
out
popa
aaa
cmovne
pop
clc
test
lret
mov
imul
mov
arpl
ret
mov
push
xlat
es
jbe
fs
push
dec
add
lret
pop
mov
cwtl
fs
aam
pushf
imul
push
stos
sbb
jbe
xchg
dec
lret
push
test
out
das
pop
shll
js
sti
je
add
or
jo
cmc
lret
sub
cmp
aad
es
mov
dec
mov
aad
jnp
stos
xchg
popa
push
call
xlat
mov
xchg
xor
push
pop
ds
sub
jecxz
fcoms
sahf
and
xor
into
jle
lret
in
inc
insl
cmp
pop
out
pusha
pop
mov
lret
dec
iret
lods
pop
lcall
adc
mov
mov
arpl
fcoms
mov
cltd
lret
mov
mov
pop
jl
pushf
pop
out
xchg
cwtl
stos
les
pop
mov
pop
ds
and
fwait
loope
and
mov
insl
xchg
pop
jb
fnsave
ret
int
sti
es
pop
push
out
lods
or
jl
inc
lret
jnp
aam
ljmp
js
and
js
pop
ret
lret
fcmovu
aam
adc
out
jb
or
sbb
call
pop
lret
push
and
mov
cmp
jae
lret
gs
pop
jno
mov
test
jb
pop
lret
mov
and
lret
ss
loopne
stos
test
pop
pop
lock
xchg
repnz
std
xchg
dec
iret
lret
or
sar
mov
inc
mov
lods
push
mov
lret
push
mov
jecxz
jns
addr16
lods
jno
adc
add
into
mov
lret
mov
pop
lret
and
mov
mov
insl
inc
rcrl
lock
adc
fimuls
xlat
mov
loop
push
sub
hlt
lret
or
out
cwtl
lret
lret
jl
outsl
in
ja
cltd
jo
fs
cmp
and
divl
push
sub
pop
mov
dec
lret
jmp
pop
shl
stos
fidivrs
lret
mov
gs
inc
cmpsb
cwtl
dec
scas
cmp
adc
and
or
lret
test
sbb
cmpsl
cmpb
lret
daa
or
pop
and
in
ljmp
fdivs
xchg
lret
scas
fstpl
push
cwtl
lret
orl
cmp
popl
lahf
aaa
into
pushf
imul
mov
fwait
pop
outsb
inc
rcr
popf
insl
cli
push
mov
mov
sar
push
mov
mov
test
cmp
sub
xchg
sti
xchg
loope
into
divb
sub
cmc
enter
sub
stos
or
hlt
lock
add
stos
mov
jg
ss
lods
push
out
fabs
stos
lret
mov
mov
sub
ficoml
lods
sub
call
lret
in
mov
mov
mov
int3
and
mov
scas
enter
xchg
push
addb
pop
lock
sbb
jno
xor
jb
push
sub
repnz
int3
add
inc
clc
fs
cmc
dec
imulb
adcb
repnz
dec
cli
imul
push
out
fmuls
lret
pop
jp
xor
in
pusha
lds
jmp
add
cltd
cmp
mov
in
fdivrl
or
jbe
ljmp
mov
xchg
out
push
test
adc
mov
aaa
or
insb
and
mov
fsts
ss
xchg
inc
sub
lahf
lret
stc
test
pop
ds
push
adc
dec
cmp
jne
xor
daa
pushf
lret
je
push
pop
leave
inc
lret
jle
pop
ljmp
stc
mov
xchg
cmp
dec
jg
dec
cmp
push
lret
mov
shr
and
adc
and
add
fisttps
dec
rorb
aam
fidivrl
jg
pop
inc
pop
lret
out
add
out
lcall
jnp
and
add
cld
ljmp
mov
notb
lret
cmp
lretw
inc
stc
into
int
adc
xchg
bound
add
scas
pop
adc
pop
enter
mov
or
dec
lods
stos
push
xor
iret
inc
push
and
lret
test
jmp
sbb
and
mov
sbb
shl
dec
xchg
ret
pop
outsb
or
cwtl
mov
gs
mov
fisubs
pop
xchg
mov
jge
mov
cld
inc
lret
sbb
jle
add
ljmp
imul
mov
fldcw
aaa
lods
mov
sbb
rorb
cld
popf
call
xchg
dec
inc
push
inc
xchg
pop
mov
out
lret
addr16
movsl
in
loope
lret
subl
sub
mov
push
dec
sub
clc
lods
mov
xor
xchg
or
mov
out
adc
pop
cli
add
icebp
push
cmp
rorb
fcom
or
jne
popa
lret
push
aam
fwait
in
fsub
lret
xlat
dec
lods
mov
mov
aaa
xchg
popa
pop
mov
aam
jl
cmp
or
inc
je
inc
mov
rorb
call
insl
dec
lret
sub
fidivrl
mov
push
test
fiaddl
in
xchg
ja
mov
out
ds
or
aaa
lret
jns
shl
in
js
mov
lret
loope
pop
inc
shrl
pop
and
aam
push
movsb
lret
test
jno
jmp
int3
pop
push
adc
lret
cld
insl
mov
or
lea
shlb
cmpsb
cmp
fld
mov
pop
mov
xchg
int
xor
and
scas
fs
or
lret
jb
xchg
int3
adc
and
xchg
insl
shl
inc
aas
ds
inc
icebp
jnp
sub
loopne
rclb
cli
jmp
inc
stc
pop
das
into
lcall
not
xchg
push
sub
mov
aam
and
lret
adc
fwait
push
jns
into
mov
imul
lret
stos
cmpsb
movsl
adc
jbe
jb
cmp
lret
pushf
ljmp
mov
test
stos
and
loopne
sbb
jo
sbbb
cmpsl
xchg
jecxz
jl
pusha
add
xchg
pop
aaa
mov
mov
jne
xchg
push
cmp
dec
mov
icebp
sbb
divb
jns
mov
lret
out
adc
push
outsb
lret
cltd
or
adc
cli
fs
xchg
cld
sti
icebp
test
test
xchg
in
sub
xchg
pop
ss
cmp
dec
loop
mov
lret
mov
sti
sbb
lahf
xchg
lock
into
xchg
pusha
jg
sub
mov
stc
ret
lret
jnp
push
idivl
lret
cs
push
mov
leave
lret
sahf
shld
xchg
ss
or
mov
and
lret
adc
dec
push
clc
lret
lea
lret
or
ljmp
dec
inc
ja
and
mov
xchg
lret
cmp
pushf
lret
cmp
sbb
mov
je
xchg
mov
lods
lret
fnstcw
dec
cltd
das
fisubl
call
add
insb
sarb
fxch
lret
dec
add
xchg
and
xor
lret
ret
pop
sbb
test
inc
push
pop
cwtl
xor
jmp
add
add
jl
lret
dec
jbe
xchg
adc
lret
stos
jae
sbb
jmp
out
jecxz
imul
mov
mov
mov
mov
test
scas
cltd
ss
fmul
jnp
sub
dec
push
shrl
lret
push
daa
push
ror
out
subb
pusha
mov
bound
and
cmpl
inc
push
in
rclb
mov
inc
cmp
push
push
mov
sarl
xchg
jl
icebp
jecxz
add
sub
cmp
xor
rolb
mov
sub
fistpl
mov
mov
je
mov
xchg
scas
push
lds
sbb
hlt
pop
out
fucom
cs
cmpsl
xor
dec
lret
cltd
test
dec
nop
cs
or
cmp
js
test
pusha
push
lret
xor
lret
mov
sbb
scas
dec
inc
fcoml
sbb
insl
mov
or
mov
or
adc
repz
mov
mov
aad
xchg
shll
lret
jl
jae
xchg
icebp
mov
lret
lcall
sbb
xchg
aam
cmpb
mov
mov
push
sbb
inc
outsl
cltd
int
mov
adc
mov
mov
mov
sub
ror
add
fcmovu
or
push
dec
dec
mov
mov
std
testl
jl
dec
and
lret
and
adc
loope
lret
xor
add
xchg
and
push
dec
inc
insl
mov
cmpsb
out
lods
push
mov
mov
lret
and
sub
mov
or
xor
mov
das
es
add
cli
imul
aad
xor
lret
mov
iret
sbbl
xchg
xlat
xor
and
mov
ret
shrb
inc
icebp
icebp
mov
lret
sub
jmp
sahf
lret
add
sbb
adc
xor
jle
mov
lds
xchg
mov
mov
in
fs
stos
xchg
ficoms
xchg
movsl
aam
outsb
pusha
lret
lcall
cmp
or
xadd
xor
pop
test
adc
and
aad
cli
jnp
sub
lock
rcrb
aad
cmp
and
popa
scas
ficompl
fisubs
cli
push
ficomps
lock
push
leave
roll
inc
cs
leave
push
mov
enter
sarl
jae
inc
sbb
data16
dec
sbb
xchg
sbb
xrelease
mov
aad
iret
mov
lret
fsubrp
stos
jl
jno
mov
pop
adc
lahf
sbb
scas
adc
xor
shll
mov
xchg
je
fmul
fcomip
jmp
pop
mov
adc
mov
int
sub
cmpsb
jmp
jp
leave
pop
push
push
cwtl
cmp
mov
rorl
loope
shll
lret
inc
fidivrl
xchg
push
mov
dec
adc
fs
push
in
mov
lock
loopne
push
and
cmp
lea
lahf
jno
fcomi
ret
imul
cwtl
aad
mov
dec
pop
mov
lret
les
rorb
inc
sbb
cmpsl
lock
adc
clc
lret
mov
repnz
stc
cmp
in
lret
mov
int
xchg
lret
fists
fwait
mov
dec
into
cmc
loop
iret
sub
jno
pop
adc
in
mov
pop
mov
fidivl
gs
mov
call
xlat
in
sub
lods
nop
xor
bnd
shlb
mov
adc
cmp
or
xor
shlb
lret
mov
mov
xor
push
into
pop
push
les
lret
mov
cld
lret
mov
call
add
stos
pop
xchg
push
testb
out
lret
inc
sub
sarl
cld
push
lret
mov
lret
insb
sub
nop
cmp
mov
test
inc
jno
lret
in
test
out
pop
push
aad
dec
add
dec
or
adc
in
fisubrl
es
push
or
cltd
mov
lret
pop
inc
dec
pop
sub
mov
sbb
cmc
fiadds
call
lret
insl
xchg
mov
push
fidivrl
add
add
sub
hlt
mov
fidivl
sub
stos
fcmovne
in
push
lods
loope
movsl
out
dec
imul
notb
fcmovb
mov
xchg
mov
test
stos
lret
mov
adc
add
loop
xlat
fldt
rcrb
lret
push
mov
ljmp
lods
out
lock
loop
jp
dec
mov
add
popa
int
pop
xlat
sbb
cmp
inc
movsl
fmull
arpl
push
jge
sar
sbb
sbb
fists
lret
cmpsl
stos
dec
sub
jecxz
mov
cmp
popa
pop
test
jge
or
push
dec
cltd
sub
jb
cmp
jbe
inc
mov
cmc
stos
cli
adc
incb
movsb
xlat
adc
xchg
lret
mov
pop
sti
outsl
cmpsl
popf
jb
test
mov
lock
push
mov
js
fcoms
xor
pop
daa
rclb
sbb
lret
fildll
dec
mov
add
cmpb
loop
push
xchg
mov
sub
mov
xchg
push
mov
mov
ja
aad
stos
mov
cli
stc
neg
lahf
jne
lret
cmp
cmc
dec
movsl
pop
push
lahf
repnz
mov
cmp
or
push
int
mov
cmc
imul
push
out
jp
pop
lods
mov
cmc
lret
mov
fisubrl
add
xchg
in
mov
inc
push
dec
aad
ret
clc
cmp
xor
mov
add
sbb
push
lret
jns
xchg
push
cmpsl
orb
xchg
push
push
das
imul
fdiv
iret
inc
jle
mov
lret
pop
repnz
sbb
in
aam
xchg
lret
scas
mov
enter
mov
hlt
mov
into
sti
adc
aad
cmp
sbb
movsb
push
aas
pusha
cltd
lret
inc
mov
lret
jae
repz
imul
sub
dec
fmul
popa
sti
push
or
pop
cmp
mov
js
xchg
inc
repnz
in
fmul
testl
stos
shll
push
rcr
cmp
lods
les
ror
orl
mov
ror
xor
jno
push
push
jl
or
fyl2xp1
xchg
jbe
dec
lret
mov
or
repnz
xchg
mov
sbb
popf
sti
cmp
xor
adc
shrl
jbe
mov
ror
lock
adcl
sti
into
jne
out
sub
cmp
stc
jae
lds
inc
mov
mov
lret
sbb
or
pop
ret
je
cmpl
mov
cmp
pop
mov
pop
push
jno
out
pop
sarb
mov
or
mov
fs
out
ljmp
shrl
test
ktestb
pop
push
pop
movsb
in
sarb
cmp
popf
pop
js
lret
pusha
adc
xor
sbb
sub
stc
cld
dec
push
fmul
xor
sti
sbb
fcmovu
insl
jecxz
imull
lea
dec
cltd
test
out
and
out
loopne
lret
scas
or
pop
loope
icebp
mov
mov
mov
and
stos
lret
adc
out
sbb
sbb
mov
dec
popf
das
fsts
rclb
cmp
xchg
faddl
jge
lret
cmp
repnz
movsb
cli
fistps
push
pop
inc
pop
sbb
inc
daa
lret
ret
or
push
into
cmpsb
dec
jmp
jne
dec
ljmp
mov
nop
xlat
and
mov
popf
sub
out
shlb
xor
lret
pop
pop
dec
out
aas
stos
lret
lods
sub
mov
fsubrs
into
adc
gs
loope
or
fwait
pop
mov
subb
dec
mov
push
dec
or
inc
inc
pop
addr16
inc
jbe
mov
ret
lret
sub
lret
arpl
lret
pop
adc
fdivl
int3
inc
push
lret
enter
and
int
test
arpl
cs
pop
add
or
cltd
subl
sbb
xchg
pop
fwait
xor
dec
lret
add
pop
push
fildll
js
outsb
push
stos
scas
push
sti
decb
mov
add
in
ss
insl
dec
add
lret
and
mov
dec
ficomps
jecxz
stc
or
dec
add
rorb
test
adc
lret
and
mov
adc
loop
ljmp
mov
mov
lret
adc
repz
or
ljmp
add
xchg
aam
sub
loop
rcrb
lret
je
pop
imul
fcmovb
iret
and
pushf
aam
dec
sub
adc
xor
lret
or
adc
pop
nop
fists
push
pop
lret
shlb
fwait
dec
and
fcoml
stc
pop
lret
push
in
rorb
push
pop
lret
adc
xlat
and
hlt
das
mov
sub
and
jno
xor
sbb
adc
mov
xor
call
outsl
lods
roll
xchg
dec
xchg
push
or
sub
lods
or
xchg
int
jmp
daa
lret
fidivrs
push
lret
add
ret
aaa
lret
shlb
mov
or
outsl
xchg
shrl
fwait
lea
or
fmull
dec
and
xor
stos
out
fs
sbb
mov
cmp
cmp
xlat
jb
fst
push
outsb
pop
mov
lods
jbe
cmp
lret
mov
push
add
inc
lahf
lods
xor
lret
std
sub
push
push
es
in
cmpsb
inc
xor
lret
call
popa
xor
pop
pushf
add
mov
sahf
scas
fisttps
push
push
inc
scas
pop
stc
jbe
stos
movsl
stos
movsb
icebp
cmp
or
push
jecxz
aas
lret
arpl
addr16
lret
dec
cmp
xchg
dec
insl
push
imul
jno
sbb
fidivrl
add
cmp
enter
lret
arpl
orb
lret
jo
or
mov
fsub
adc
popf
adcb
cmp
sub
jae
mov
sub
dec
out
pop
mov
lahf
in
fst
or
mov
xchg
lret
mov
leave
fimull
insl
lock
push
loop
jno
lret
out
jo
pop
fcompl
push
inc
lea
rcrb
cwtl
enter
lret
repnz
mov
lret
push
pop
shrl
and
lret
rcl
dec
mov
inc
mov
nop
jge
xchg
iret
call
or
ret
into
and
xchg
ja
lret
jle
int3
add
lret
lods
push
gs
ljmp
into
cltd
dec
xor
xchg
out
jecxz
test
shl
out
lret
je
and
mov
pop
sarl
mov
push
loope
aad
mov
push
fsubl
mov
adc
cld
lret
jne
xor
mov
xlat
lds
lods
adc
sub
sub
lock
lret
lret
xchg
add
pop
push
pop
dec
lret
in
andb
mov
push
ds
dec
jno
ljmp
push
mov
push
or
push
roll
xchg
rolb
lret
jecxz
sbb
mov
xchg
mov
into
xor
sub
outsb
movsb
xchg
lret
in
cmp
push
test
lret
in
mov
sub
pop
lret
push
inc
mov
push
stos
dec
pusha
fmull
mov
sub
sbb
dec
insl
cld
notb
lock
lret
cli
pop
xchg
repz
lret
imul
lret
pop
ljmp
xchg
fadd
push
sahf
push
jecxz
je
add
out
dec
push
jno
mov
sarl
jo
xor
ja
lret
addl
popf
cltd
dec
lahf
sbb
pop
lret
sub
pop
pop
push
or
lret
fwait
enter
out
test
jecxz
stos
xor
push
fsub
es
jne
stos
push
jle
or
mov
lret
sub
push
into
cmp
mov
fsubs
shl
mov
adc
stc
jns
mov
in
sti
popf
mov
stos
data16
mov
xor
dec
cmp
bound
scas
lret
shll
lret
cmpsb
lret
inc
lods
out
pop
pop
orl
stos
xor
mov
fisubl
enter
movsl
lret
sub
push
push
inc
jno
jl
loope
dec
cmp
push
inc
test
or
mov
in
xor
inc
adc
movsb
inc
ficompl
jge
dec
sbb
lret
mov
xchg
inc
mov
xor
cli
pop
dec
dec
popa
sbb
push
jmp
adc
lret
mov
push
das
gs
cli
mov
or
sub
mov
scas
pop
in
lret
int3
cmp
mov
mov
cli
mov
mov
lods
insl
repnz
loope
pusha
lret
imul
jp
push
lret
fwait
cmpsl
inc
dec
into
loope
mov
lret
dec
fldcw
outsl
jns
inc
adc
sub
cmovp
lret
pusha
sahf
dec
xor
and
lret
popl
lret
mov
cmpsl
lret
hlt
push
xchg
gs
aad
adc
ja
inc
lret
imulb
fnstsw
or
mov
fcomp
ret
sub
jge
sub
sbb
xchg
add
push
or
aas
lret
lods
xchg
xchg
push
push
jne
addr16
fcom
daa
cli
cmp
ds
pop
xchg
jg
or
cmpsl
loope
jne
xchg
mov
push
fmul
pop
push
out
enter
lret
clc
mov
lret
inc
ds
mov
repnz
out
fisubs
lret
xor
mov
push
ds
fs
lret
xchg
leave
adc
adc
sbb
hlt
popf
fs
insl
lret
out
loopne
lahf
insb
sti
pop
lds
dec
lret
xchg
mov
aad
cmp
cmp
js
and
pop
push
or
cmp
push
xlat
stos
sub
rorb
les
cmp
mov
cmp
lret
add
test
fisubrl
lret
push
insb
cltd
cld
mov
lret
dec
sbbl
adc
mov
movsl
jb
stos
aaa
add
or
mov
movsl
and
push
cld
lods
jnp
adc
stos
ds
jg
jns
pop
lret
cmp
lret
sbb
inc
loope
lret
xchg
or
pop
fwait
cmp
popa
out
adcl
xchg
fcom
int
roll
mov
shrb
fucompp
in
or
cmc
sub
int3
pop
sub
xlat
or
je
sbb
pop
and
data16
or
sub
les
xor
lret
xor
sbb
jae
lret
xchg
testb
lret
mull
lret
push
add
push
xor
adc
dec
sub
adc
cmp
adc
or
out
inc
inc
out
lret
js
lret
xchg
dec
jae
outsl
lods
push
jnp
shrl
fnstenv
ljmp
push
xor
mov
aad
mov
das
lret
pop
jl
mov
fsubp
mov
loope
out
inc
lret
or
testl
adc
push
pop
jae
mov
push
xchg
insb
lret
xchg
out
roll
jns
or
xchg
sub
in
and
pop
mov
xchg
inc
loopne
lock
rolb
pop
inc
int
sahf
ficoml
dec
lret
imul
xchg
pop
mov
into
ljmp
rcl
xor
lret
push
in
dec
daa
lock
pop
test
mov
or
mov
xchg
cmc
fcmovu
mov
or
add
mov
add
mov
jns
insl
inc
adc
push
dec
sbb
leave
push
xchg
sub
pop
mov
stos
adc
cs
pop
sub
sti
adc
pusha
pop
mov
mov
or
push
aad
pushf
xor
out
das
inc
push
leave
stos
and
lods
daa
xor
pop
xor
dec
cmp
out
pop
cmp
rcrb
mov
lret
mov
mov
stos
insb
out
sbb
mov
sub
adc
or
mov
lods
cmp
jnp
pop
xor
dec
pop
cmp
inc
enter
xchg
inc
out
pop
sbb
lret
jl
pop
cmp
push
imul
pop
fwait
xchg
xlat
idivl
lret
push
imul
inc
ljmp
cmovle
or
lret
mov
loopne
daa
push
pop
and
pop
lock
xlat
fwait
lahf
cmp
iret
movsb
rcll
lds
clc
or
xchg
out
call
and
rcll
into
adc
mov
dec
sti
hlt
ljmp
enter
mov
lret
fstps
in
jo
xor
mov
sahf
dec
push
notl
hlt
pop
mov
shll
fldenv
movsb
shr
std
mov
jbe
leave
cltd
pop
lret
jp
cmpb
lret
jno
inc
and
sahf
fists
lret
icebp
int3
jge
cmp
aam
add
inc
sarl
test
mov
xchg
dec
lret
shlb
bound
das
xchg
adc
mov
sbbb
lock
repnz
arpl
pop
fwait
lret
adc
mov
aas
repnz
mov
push
sbb
stos
cmp
int3
shlb
push
mov
or
inc
mov
fstps
and
lret
jg
xor
cmp
into
push
jbe
jle
clc
lret
sbb
lret
test
pop
lret
mov
stos
lret
scas
sti
movsb
into
jae
push
sub
cmp
xchg
cmp
es
adc
imul
mov
mov
stc
bound
rcll
rcll
dec
sub
sbb
pop
lret
sbbb
mov
cmp
adc
dec
lret
adc
sub
push
rcrb
pop
push
hlt
lret
mov
jmp
add
mov
jge
xchg
lret
sbb
or
lahf
in
inc
mov
mov
inc
pop
and
repnz
int3
cld
ss
loopne
lret
or
cs
bound
dec
lret
fwait
rcrl
test
xchg
jo
cli
ror
ficoml
jb,pn
jle
flds
ficompl
into
mov
add
mov
pop
je
sub
lret
and
lret
out
mov
jmp
dec
std
jl
call
je
ja
adc
xorb
lcall
dec
popf
inc
divb
and
add
pop
jl
jb
lret
sub
add
push
sub
jno
or
ret
loop
jno
xchg
mov
rorl
and
fidivs
movsl
push
dec
fsubrs
fisttpll
cwtl
sbb
or
outsb
sbb
imul
fsts
out
cmp
bound
or
repz
insl
call
xchg
xchg
std
jp
loope
hlt
xchg
mov
add
sbb
lret
cmp
or
inc
push
pop
cs
orl
test
push
int3
loope
mov
popf
push
dec
lret
imul
fcomps
push
xchg
jecxz
push
sbb
mov
sub
cmp
mov
insb
test
dec
sbb
push
mov
gs
sbb
xor
or
imul
jnp
shll
incl
lret
adc
js
mov
mov
cwtl
jno
mov
add
jmp
iret
enter
cmpb
outsb
cltd
aam
pop
out
lret
fsubl
jmp
arpl
cmp
jns
fidivs
sbb
arpl
jae
stos
std
pop
or
cmp
shlb
cmp
xchg
iret
push
push
xchg
lret
out
sub
xchg
rolb
arpl
rorl
mov
or
and
stc
lret
mov
lods
fwait
jp
stos
xor
pop
popf
hlt
jge
add
outsb
leave
iret
adc
xchg
imul
sub
fs
cmp
out
pop
rcrl
sbb
movsl
fwait
rcl
ljmp
fsubl
mov
mov
nop
leave
daa
push
lret
icebp
cmp
mov
int3
enter
lea
jle
inc
lret
pusha
rolb
imul
lret
sbb
cmp
fsubrs
and
lret
sbb
jns
cmc
mov
pushf
lcall
pop
lret
int
push
popf
test
pop
jmp
test
mov
fstps
lret
pop
push
imul
popf
out
xor
ret
pushf
testl
lret
sub
cltd
int
stos
rcll
add
push
xor
das
adc
cmpsb
negl
cltd
jbe
xlat
loop
lods
or
clc
lods
lret
outsl
aaa
mov
inc
add
xor
out
and
lods
test
sti
lret
mov
int3
mov
mov
push
movsl
add
fiaddl
in
xchg
int3
push
les
in
inc
sbb
aas
jno
lds
sarl
lret
les
mov
mov
loope
inc
bound
repnz
lret
js
popa
aad
add
sbb
cmp
inc
popf
in
mov
lds
push
xchg
dec
repnz
out
loope
lret
sti
nop
mov
sarb
dec
js
lret
outsl
fs
call
mov
loope
add
in
int3
xor
lret
shrb
lret
and
mov
mov
and
fcmove
int
addr16
jge
loop
int3
xor
sbb
inc
push
or
lret
lods
pop
push
addr16
sub
inc
mov
stos
jl
adc
stc
sub
shll
sub
sub
insl
leave
jge,pn
or
dec
jno
push
sbb
stc
ret
mov
hlt
or
imul
stos
mov
push
mov
lcall
jp
add
sbb
adc
and
pop
sahf
dec
or
add
dec
cld
jbe
cmp
push
lea
stos
mov
test
lret
mov
mov
mov
lret
pushf
rcrl
aas
push
lret
outsl
psrlw
stos
mov
mov
adc
pushl
lahf
dec
icebp
out
stc
cmp
insl
out
pop
int3
and
test
xor
clc
cmp
pop
test
mov
fwait
stos
cmc
cmpsl
shlb
lret
jge
or
ret
fmul
adcb
pop
cmp
push
jle
lods
cmpsl
shrb
pop
test
std
jmp
lret
dec
sub
lods
sbb
lret
pop
and
push
adc
ret
bound
add
fdivrl
sub
in
adc
imul
push
dec
popf
xchg
mov
lret
cltd
sbb
arpl
fisubrl
adc
sub
mov
mov
test
test
insb
repnz
out
pop
push
fisttps
js
cltd
repz
in
add
and
mov
ss
adc
jne
negl
mov
jg
out
jns
out
lret
xchg
cmp
mov
sub
sbb
add
mov
push
dec
cli
cmc
mov
arpl
iret
add
inc
xchg
mov
out
lods
out
dec
and
jb
ja
fsubr
cltd
sub
and
cmpl
mov
gs
adc
push
test
lcall
jl
adcl
aas
pop
jo
pusha
icebp
sbb
sti
lret
push
jns
cltd
daa
inc
dec
mul
mov
mov
lret
lea
mov
out
lret
jecxz
and
out
mov
jle
enter
lret
sti
stc
insl
sub
ror
add
scas
call
lret
ss
popa
push
inc
lret
pop
jge
out
call
adc
out
mov
jno
int3
mov
stc
fsubp
or
mov
dec
clc
cs
xchg
push
mov
xor
push
scas
sub
mov
push
cmpsb
sahf
cmp
sbb
lret
sti
shrl
jbe
lret
xchg
lret
mov
cld
adc
pop
xchg
cmp
adc
adc
je
test
bound
adc
lret
and
test
aaa
mov
xchg
dec
dec
cmp
push
adc
in
out
inc
clc
pop
popf
lods
inc
lds
lret
mov
cmc
cld
jl
dec
sbb
fildl
sbb
sarl
loop
int
rolb
push
mov
pop
inc
lret
xchg
push
cli
pop
and
xlat
mov
repnz
int3
push
or
or
jg
pop
je
add
sbb
pop
cltd
add
jge
jnp
insl
aam
filds
sub
xor
dec
ljmp
lret
or
add
push
out
pop
pop
pop
orl
add
cmp
add
rorb
lock
lret
sbb
or
in
movsb
int
into
popf
inc
jb
stos
xor
lret
sbb
xlat
push
mov
xor
sar
lret
mov
and
loop
sbb
sarl
inc
inc
lea
les
or
into
lret
sti
mov
sbb
inc
sbb
adc
fsub
xor
insb
lret
jno
dec
push
mov
sbb
rclb
push
mov
mov
and
loop
pop
add
sbb
mov
gs
movq
sbb
ljmp
jno
les
popf
lret
lods
maxps
clc
mov
scas
cmp
mov
sbb
es
lods
out
ret
xor
xor
and
cwtl
lods
push
xchg
lret
xor
loop
lret
in
cs
lret
adc
lret
and
pxor
dec
and
mov
std
push
iret
lret
sbb
fidivl
dec
mov
idivb
fprem
push
sahf
or
dec
fsub
xchg
cli
jle
pop
lea
inc
lret
insl
fwait
lret
or
into
dec
and
jmp
add
ret
test
cmp
lret
push
jnp
cmpsb
insl
shr
lret
add
mov
jb
cltd
pop
or
lahf
out
add
push
pop
mov
int
xchg
cmp
fwait
lret
xlat
sbb
xchg
cmp
fstpt
subl
mov
and
pushf
sbb
lret
je
shll
aam
sub
into
xlat
or
scas
lret
es
lret
loopne
popaw
sub
jne
jp
sti
cmpb
aaa
lret
push
lret
lods
cli
pop
shr
mov
daa
mov
fs
subb
lds
fisubl
add
cltd
jmp
mov
lret
out
ljmp
lret
in
xor
mov
or
xor
es
rorb
sbb
and
jle
stos
pusha
mov
sub
popa
add
negl
loope
xchg
sbb
movsb
cld
mov
out
notb
xchg
sarl
lret
shlb
test
pushf
inc
daa
lock
lret
sti
inc
xchg
bound
lret
lahf
mov
sbb
cmpl
dec
push
lret
and
scas
hlt
adc
cmpsl
cmp
adc
fildll
xor
jne
lret
pop
sbb
pop
in
enter
sub
dec
xor
test
rcrl
fmuls
lcall
js
in
stos
push
pop
jnp
mov
fwait
jl
lret
pop
jo
cli
push
aam
mov
gs
lret
pop
out
pop
popf
cmpsb
lret
popa
ret
push
es
inc
sahf
sub
iret
pop
add
push
lods
je
inc
lret
mov
cli
cs
mov
pusha
fwait
enter
sbb
stos
dec
insb
sbb
add
stos
das
mov
sbb
lea
dec
cmp
inc
fwait
insb
pop
or
mov
dec
cli
sub
xchg
lret
and
cmp
nop
lret
mov
jle
jbe
pop
mov
icebp
jecxz
subl
fmuls
in
lret
mov
sahf
shrb
inc
add
lret
dec
aas
leave
cmc
lret
stos
addr16
pop
hlt
out
ficoml
in
jmp
shlb
popf
lods
shl
pop
aas
lret
jno
adc
sbb
insl
jle
decl
cmc
outsl
cmp
push
pop
scas
jnp
insl
sub
mov
lret
fldenv
sbb
lcall
pop
push
loope
ds
out
lds
mov
mov
jp
jns
shlb
sub
sbb
jbe
lea
js
stos
ror
sub
fdivrl
mov
or
lret
dec
mov
push
ljmp
cmp
pop
sbb
popa
jne
push
setge
insb
and
pop
rcl
sub
jg
push
insl
push
xchg
push
inc
sbb
scas
imul
stc
adc
data16
mov
push
push
outsb
sub
into
dec
fisttpl
imul
fimull
xlat
mov
or
addr16
test
cmp
cwtl
pop
stos
xchg
mov
aad
adc
jp
dec
pushf
mov
scas
lcall
stos
sarb
sbb
lret
and
sti
and
sub
inc
pop
sub
shrb
test
cli
clc
daa
pop
ljmp
dec
and
lods
add
mov
push
popa
aad
dec
inc
insl
icebp
fxch
sti
add
xchg
lret
jmp
adc
sbb
sbb
sbbl
lret
sbb
mov
pop
shll
lret
mov
xchg
xor
inc
lret
andb
in
out
dec
into
or
and
push
insl
lret
je
push
test
sbb
push
inc
mov
jmp
cmp
pop
jmp
loope
lret
jecxz
nop
lret
xlat
dec
push
cli
fdivrp
xchg
gs
jae
mov
add
mov
dec
adcb
add
lcall
inc
mov
rcrl
cltd
mov
cmp
mov
push
inc
les
mov
test
lret
lods
mov
jmp
sbb
and
adc
lret
jb
sar
rcrl
xchg
push
cld
dec
push
push
shl
dec
pop
fldenv
dec
jnp
aas
lret
push
fcmove
addb
cmp
in
pop
push
adc
cmpsb
lret
fisttpll
and
in
xor
lret
pop
movl
ret
lret
testb
xor
into
or
ja
call
js
xchg
lret
test
mov
adc
dec
fisubl
js
or
mov
xor
pusha
ljmp
xchg
jae
lret
out
mov
push
rcll
lret
lods
outsl
cmc
xchg
jmp
xchg
mov
into
cs
hlt
je
ljmp
shr
xchg
in
inc
popa
stos
je
add
scas
fldl
lret
ljmp
push
movsl
and
in
out
mov
mov
xchg
push
fnstenv
mov
mov
call
adc
test
cmp
add
jmp
shll
lret
cli
push
sbb
cmp
cmpsl
test
xor
push
mov
add
outsb
and
pop
loop
xchg
jbe
inc
rol
add
lret
inc
int
xchg
jne
push
jo
mov
lret
push
mov
adc
mov
xchg
xor
inc
adc
testb
popa
movsb
mov
ljmp
aas
mov
mov
inc
cmc
or
out
sti
pop
sbb
into
mov
lret
out
jmp
inc
sbb
lods
mov
jmp
lret
cmp
mov
push
fwait
fstl
lods
lret
jge
add
mov
inc
outsb
mov
sub
mov
push
rol
mov
ror
fcmove
cmc
lahf
inc
sub
in
shlb
jmp
nop
addr16
mov
ret
xchg
incb
fs
xor
jmp
mov
adc
fldenv
insb
aam
shlb
iret
xchg
sbb
out
or
sbb
xchg
fcompl
jmp
mov
dec
lret
xor
daa
lret
movsl
mov
lret
negb
in
leave
or
jge
xor
lret
es
stc
lods
or
xor
sahf
sub
adc
stos
test
xchg
shll
loopne
testb
in
cmp
push
xchg
push
out
mov
movl
out
xchg
mov
mov
push
pop
lea
adc
outsl
inc
dec
inc
xor
fstl
mov
lret
mov
adc
push
add
shrb
mov
outsl
pop
jg
loop
mov
orl
push
jns
shll
repz
lret
push
and
gs
add
xchg
xlat
cmp
mov
lret
pusha
and
push
xorb
fimull
sub
mov
cmova
lret
xchg
ljmp
cmp
jecxz
adc
inc
dec
rclb
xor
lret
add
call
aad
scas
lcall
add
inc
and
jmp
lret
mov
test
call
lock
jp
mov
pop
or
xchg
jl
xchg
sbb
xchg
rorb
cmp
rcrb
addr16
imul
cmp
push
into
dec
push
stos
popa
fcomps
out
xor
push
stc
jge
daa
stos
sub
add
sub
mov
repnz
or
aam
cmp
adc
cld
mov
lret
pop
pop
jmp
mov
cmp
shr
mov
cmp
rcl
es
popa
std
ds
fcomps
aaa
or
add
lret
lcall
jns
and
adc
std
lret
out
aas
xlat
and
dec
loope
lret
aam
add
inc
inc
popf
cmp
int
xchg
adc
sbb
add
scas
lret
cmpsl
pushw
stos
lret
and
mov
mov
imul
rcr
cmp
add
ficoml
xor
sahf
mov
cmp
lret
mov
add
and
or
jmp
stos
fwait
ss
movl
test
xchg
fisubrs
roll
in
mov
pusha
jbe
inc
ljmp
mov
cmp
mov
mov
lcall
daa
xchg
mov
popf
lret
outsl
js
sbb
xor
sub
pop
mov
inc
and
lret
leave
mov
adcb
sbb
lret
inc
fisubrs
and
cli
dec
pop
mov
lcall
and
lret
sbb
rclb
iret
cs
xchg
gs
sbb
jp
inc
add
testl
lret
das
mov
and
pop
sbb
scas
mov
andb
xlat
xchg
pop
rolb
jle
jmp
clc
fwait
aas
aad
xorl
jns
add
stos
lret
cmp
arpl
and
testb
in
lret
nop
daa
jo
dec
lcall
or
rclb
mov
leave
xchg
js
lret
inc
jp
or
mov
jo
test
stc
pop
sbb
inc
faddl
popf
sbb
inc
xor
pop
push
int3
jg
mov
out
add
mov
out
adc
push
test
insl
jnp
pop
data16
cli
inc
pop
sbb
lahf
push
inc
add
ljmp
shlb
adc
filds
arpl
lock
mov
movsb
movsl
cmc
sub
sub
cltd
push
push
add
insb
sub
mov
lret
mov
dec
wbinvd
mov
mov
ret
push
xor
xor
rolb
or
fistl
lret
mov
cs
jno
daa
loop
bnd
inc
xchg
mov
pop
scas
in
xorl
mov
ss
jmp
mov
loopne
mov
inc
lods
push
test
lret
mov
lea
pushf
aad
popf
fdivrl
popa
lret
aas
es
pop
mov
xchg
scas
pop
out
lret
dec
notb
leave
lret
adc
lods
rcrb
fisubl
in
fdivrs
or
xchg
rcl
push
mov
dec
inc
jmp
aad
adc
lret
addr16
ret
lea
jge
mov
lret
loop
sub
fsubs
fisubl
fcoml
lea
ret
mov
shrl
jge
pop
mov
fwait
adc
lret
das
loope
push
jmp
out
lret
add
test
lret
es
roll
mov
pop
sub
lret
call
add
xchg
push
inc
lret
or
sub
mov
xchg
les
or
push
mov
mov
sub
lret
xor
push
stos
mov
dec
popa
inc
cltd
rcrb
sti
jne
pop
incb
lret
sbb
enter
stos
cmpl
cmp
out
sub
pop
pop
testl
dec
fidivl
lcall
mov
stc
mov
into
shll
jns
aas
inc
xlat
iret
lret
or
mov
xchg
lret
add
fidivrl
mov
mov
into
xchg
lret
mov
push
mov
xor
ret
inc
sbb
movl
and
pop
or
pop
jl
and
pop
pop
cmpsb
lret
ljmp
mov
jl
lods
mov
push
pop
push
push
mov
in
aad
negb
adc
pop
into
or
xchg
lock
lret
jle
and
sbb
rcll
dec
fcompl
test
lret
imul
bound
psllq
cmp
mov
lret
cli
ss
cltd
subb
mov
and
mov
add
adc
flds
pop
mov
jmp
lret
jbe
movsb
cltd
lret
in
inc
imul
inc
daa
mov
dec
xchg
dec
jg
add
sbb
ss
cmpsb
dec
ds
ljmp
push
dec
cmp
lret
int
fstpt
lcall
jae
rolb
arpl
bnd
shrb
lret
jle
push
inc
inc
mov
sub
mov
enter
pushf
fistl
mov
and
or
cld
jge
lret
mov
xorl
fsubs
std
inc
out
jmp
jmp
ret
stos
pop
xlat
push
loope
or
pop
pop
sub
jle
repnz
loop
test
jne
push
add
mov
test
lret
test
pop
cmp
cmp
repz
sarb
shlb
call
in
jae
lret
stc
add
lret
sbb
aas
xor
inc
sub
in
pop
mov
or
sub
jnp
mov
cmpsl
lret
hlt
fsubr
shl
int3
cmp
push
enter
jns
test
mov
ljmp
loop
cmp
jo
cltd
mov
push
dec
bound
xchg
ds
lret
jp
dec
add
lret
xor
jge
addr16
mov
mov
lret
pusha
dec
mov
xchg
or
dec
pop
adc
jecxz
and
or
sbb
adc
decb
lret
sub
scas
lods
xchg
jns
es
sbb
lea
lods
sar
loope
lret
mov
mov
ds
add
fnstcw
lret
lds
sbb
in
lret
scas
dec
push
xchg
xchg
fxch
mov
xchg
outsb
push
dec
sahf
test
movsb
pusha
iret
sti
pop
out
lret
cld
cmpsl
cmp
lock
in
int3
subb
xchg
pusha
inc
mov
and
lret
add
push
scas
fucomip
fwait
out
std
jne
pushf
pop
add
inc
pop
xchg
imul
lret
xor
call
outsl
sub
movsb
into
jnp
add
leave
lret
shll
lcall
push
cmp
iret
lret
sub
fidivrl
loope
stc
subb
dec
adc
lret
and
psubsw
fs
jae
lahf
flds
fidivl
add
cmp
mov
test
aam
movsb
mov
xor
sub
in
les
pop
aad
out
or
dec
adc
or
mov
xchg
mov
ds
stc
dec
pusha
inc
test
loop
les
xor
lods
lret
sbb
mov
cmpsb
mov
shrb
xor
rcrl
shlb
lahf
pop
fs
out
cli
and
or
push
cwtl
mov
and
cmpsl
ret
jo
inc
popf
fcoms
mov
sub
mov
sub
stos
dec
cmovs
or
mov
pop
mov
cmp
mov
mov
insl
jg
test
ret
cmp
hlt
xchg
scas
js
sub
xchg
mov
into
jno
cld
sbb
mov
lret
fcoml
lret
dec
shll
or
das
push
xor
lret
push
jns
outsl
aad
push
jb
push
cmpb
lret
repnz
out
mov
and
mov
pinsrw
fwait
test
shr
adc
sub
rcr
mov
cmp
inc
add
subl
sbb
mov
xlat
mov
pushf
in
lret
push
jbe
pop
push
adc
sarl
into
pop
mov
or
push
sub
mov
lret
jg
jb
mov
mov
leave
lret
repnz
push
lea
fwait
lret
es
or
jnp
mov
ljmp
lcall
or
repnz
push
stc
pop
lret
add
jge
lahf
ficompl
sbb
xlat
lret
mov
sbb
hlt
jmp
jmp
cs
jp
insl
or
rolb
or
add
mov
int3
or
lret
rcrl
and
testl
fsubr
fimull
shlb
into
sbb
adc
addr16
in
push
jne
push
pop
cli
cltd
push
xchg
or
jle
clc
lret
sti
outsl
xor
sbb
test
out
dec
out
jmp
mov
jl
lret
imul
inc
push
lret
mov
pop
aad
lret
jae
xor
movsl
mov
into
test
pop
lret
cmp
out
lret
xor
mov
and
or
lret
test
pop
mov
aam
and
jg
outsl
inc
push
push
adc
jp
in
lret
dec
pop
bound
xchg
xchg
into
lret
jb
popa
fcmovnbe
or
push
js
ret
call
pop
lods
and
test
sti
int3
push
sub
and
inc
cmp
popf
insl
mov
nop
adc
lret
repnz
cli
push
sbb
mov
xor
cmp
mov
jbe
dec
mov
or
shrb
mov
mov
cmp
cwtl
lret
inc
cmovb
adc
fsubrs
cmpsl
outsb
jle
jg
int
lret
adc
push
ja
shll
iret
or
xlat
insb
das
fiaddl
bnd
out
lret
lahf
inc
stos
adc
out
sbb
imul
arpl
std
sbb
inc
fcmove
lods
mov
xchg
fldt
lret
popf
testb
repnz
mov
sub
cmp
add
cmc
xlat
push
cwtl
xor
bound
push
aas
lret
lahf
inc
daa
mov
idivl
fdivrs
adc
test
push
in
int3
sti
inc
lea
mov
jno
mov
sbb
sub
pusha
lret
cli
je
repnz
ret
loopne
test
jns
mov
and
int
lret
cwtl
fwait
and
into
mov
push
cmp
bound
inc
fnstcw
pop
jl
lret
cmp
mov
leave
add
test
test
adc
pop
pop
add
xchg
js
gs
push
scas
inc
fstpt
aam
in
push
clc
ja
lret
lods
cmp
xchg
xchg
lret
sbb
adc
sub
lcall
outsb
xor
in
mov
sbb
lret
gs
ret
icebp
jb
fidivrl
stc
sbb
mov
movsb
js
mov
shlb
insb
mov
adc
icebp
movsl
push
jg
mov
adc
dec
aad
lret
dec
leave
lea
adc
pop
push
pop
mov
or
fs
and
xchg
lret
jecxz
int
xchg
lods
mov
dec
rol
cmp
fwait
and
lret
sbb
filds
inc
test
or
test
mov
xchg
lret
add
test
outsl
insb
mov
pushf
push
dec
rol
lods
jns
pop
lret
sbb
ja
lret
faddl
lret
nop
arpl
push
out
lret
xor
add
sbb
jns
mov
sbb
adc
aas
sbbb
lret
and
add
jmp
add
popa
mov
push
repz
insb
mov
mov
adc
sub
ficoms
fdivrl
loope
push
xchg
ljmp
iret
mov
cmp
insl
mov
cmp
add
xchg
mov
sbb
out
adc
sub
in
rcll
sub
lcall
lret
lahf
je
mov
add
negl
pusha
dec
and
lret
stc
iret
inc
xchg
scas
lret
testl
push
test
jle
lret
dec
push
lock
sbb
lret
loope
mov
das
movb
lcall
xor
push
mov
xor
xchg
cmpsb
and
pop
add
xchg
bswap
mov
adc
insb
cmp
lret
xchg
or
sbb
mov
push
mov
int3
das
jne
mov
fisttps
adc
iret
cmp
fistl
fstps
sub
into
xor
pop
adc
cmp
push
imul
sarb
lods
pop
or
dec
mov
lret
add
and
loop
cmp
fsubs
xor
adc
lret
pop
pop
push
push
mov
sub
add
loop
call
subb
xor
ljmp
stos
lret
mov
jnp
data16
dec
addr16
mov
lret
inc
lea
cmp
iret
cs
mov
mov
in
lods
cmp
clc
fxch
sbb
ffreep
push
sbb
cmpsl
mov
mov
shlb
call
cmp
out
jecxz
sub
test
or
jp
aam
cmp
fcoms
mov
jle
push
insl
dec
scas
push
clc
push
pop
push
pop
cmpsl
fidivrl
xlat
les
mov
cwtl
sbb
data16
xchg
cmc
dec
lret
mov
outsl
leave
stc
orl
cmp
mov
fsubr
std
push
in
lret
push
adc
in
pushf
out
sub
mov
fidivs
inc
lret
daa
mov
lret
xor
sbb
xchg
sub
repz
cli
push
mov
pop
mov
lret
jle
sub
push
ss
or
fstpt
jmp
js
xchg
inc
mov
divl
adcl
inc
jne
sbb
fiaddl
and
push
divb
fmuls
push
pop
lret
sti
out
fidivrs
cmp
adc
ret
xor
or
stos
sub
lret
mov
dec
ficompl
inc
leave
pop
mov
imul
cmp
inc
rcl
and
sbb
aam
or
scas
lret
ficomps
out
ds
adc
call
add
nop
ds
lahf
xor
mov
les
add
rcrb
adc
push
push
iret
sti
loop
dec
rcl
push
cmp
call
mov
js
adc
cmp
or
mov
mov
cltd
lods
mov
mov
in
fisubl
or
outsl
shr
pop
imul
std
xchg
mov
insb
fadd
sti
mov
or
or
jno
or
rcrl
out
pop
mov
jl
xchg
stos
sar
mov
push
jnp
pop
or
lea
stos
xor
insb
dec
imul
jl
push
mov
test
push
fsubrl
test
scas
int
popf
mov
lret
push
mov
xchg
and
dec
jge
fwait
push
jo
adc
ja
rolb
insb
mov
xchg
push
test
es
pop
pop
rcrb
mov
inc
and
inc
lret
sub
shlb
out
push
repz
pop
xor
add
mov
js
clc
popf
and
bound
pop
pushf
ja
sub
incb
rclb
add
dec
stc
mov
inc
enter
sbb
dec
gs
dec
fs
inc
into
fucom
pop
in
pop
pop
dec
rorl
and
jl
int3
out
xor
jae
xchg
loope
mov
test
data16
testl
pop
repz
ror
daa
mov
and
enter
iret
cmp
lret
mov
sbb
dec
sub
push
xchg
movsl
stos
lret
rorb
lret
enter
xchg
out
fsubp
out
pop
xor
adc
cli
rcr
ret
or
mov
add
aaa
addr16
push
sbb
adc
inc
pop
rol
lret
pop
push
lods
jg
aam
arpl
dec
rolb
aad
push
mov
jmp
lret
jb
lock
and
dec
nop
stc
lret
cwtl
pop
call
out
iret
cld
cltd
je
loope
lret
mov
outsb
lret
inc
fbld
pusha
fldcw
movsl
test
cmp
out
dec
dec
es
imul
aam
sub
lret
test
add
clc
xor
dec
add
pop
push
jecxz
fcom
nop
push
jno
mov
fcoms
push
jne
lret
jl
mov
fwait
or
sbb
fisubl
leave
iret
pop
pop
push
lret
cmp
lret
adc
adc
lcall
xor
fcmovu
jo
adc
lret
add
xchg
inc
lret
jmp
aas
mov
mov
or
sbb
xchg
shlb
les
repnz
lds
cltd
push
adc
or
aam
arpl
inc
pop
cli
mov
js
sub
loope
out
test
dec
lret
shlb
cli
loopne
push
sub
popa
fldcw
xchg
mov
pop
jl
cmp
inc
mov
dec
pop
add
pop
dec
fcompl
lock
and
aam
les
out
or
sub
shrb
or
add
outsb
sbb
in
push
filds
cmpsb
jge
push
popf
jmp
inc
loop
test
sub
inc
mov
pop
stos
or
jnp
lret
mov
fstl
xor
out
jns
lret
aaa
call
cmp
into
fidivrl
shrl
pop
bound
fcoms
lret
aas
cmpsb
xor
test
sub
pop
pop
or
testb
xor
rcr
inc
repz
pop
insl
lock
fistpll
cmp
rcrb
int
sub
add
add
js
mov
sub
lret
mov
scas
cmp
dec
lret
sub
sub
jbe
or
xor
inc
pop
test
daa
cltd
jmp
dec
mov
cmp
iret
cmpsb
mov
nop
fisubl
dec
cwtl
add
cltd
outsl
and
dec
cmp
fidivl
cmp
dec
pop
enter
ret
xchg
cmpsl
adc
in
into
hlt
mov
pop
outsl
sub
stos
mov
fnsave
movsl
fstcw
out
push
cmp
mov
inc
xor
mov
addr16
xor
jne
jae
gs
push
lret
mov
lret
imul
jmp
push
xor
inc
add
jg
push
lret
add
mov
mov
cs
xor
inc
lret
and
fwait
lret
jb
adcb
lds
sbb
push
xor
lret
jae
cmp
aas
insl
mov
inc
dec
cmpb
stc
jb
mov
push
pusha
mov
repz
sarl
aaa
adc
ret
cmp
enter
xchg
push
sarl
adc
fists
pop
arpl
out
in
pop
lds
dec
imul
scas
sub
inc
divb
add
pop
push
jecxz
into
mov
lret
push
aad
mov
sbb
mov
mov
push
ret
push
loope
push
push
lret
sub
mov
sbb
add
xlat
out
inc
std
xchg
lret
insl
jl
daa
xor
mov
mov
or
push
adc
call
xchg
subl
pushf
lea
push
aad
sarl
shlb
adc
mov
sbb
sbb
jecxz
or
jl
cli
xor
push
out
add
sbb
xchg
mov
mov
js
lret
sbb
leave
lret
add
fwait
dec
push
xor
jae
rol
adc
std
jne
sbb
rolb
shlb
jbe
lds
lret
or
pusha
fmulp
jno
std
dec
xchg
or
lret
cli
jae
je
sbb
xor
or
push
xchg
pop
mov
cs
lods
cmpsl
jnp
ret
sbb
xlat
lret
roll
pop
lret
fbld
mov
xor
test
cmp
xlat
mov
fs
scas
or
push
shll
vmwrite
insl
movsl
lret
imul
into
das
pop
lret
aaa
push
and
std
fcmove
jo
repz
lret
pop
test
fiadds
xor
xchg
mov
add
shrb
stos
scas
adc
pop
into
lock
lods
jb
xor
dec
and
or
into
std
xor
inc
outsb
and
pop
cmp
movsb
mov
lret
add
xchg
mov
or
fdivrs
lret
cmpsb
pop
fs
out
test
mov
jnp
jl
jo
lret
cli
sub
popf
jmp
sbb
cmp
repnz
scas
fisttps
push
stos
lret
sbb
sub
clc
lret
push
scas
sti
ds
dec
mov
cmp
cli
lret
jg
cmc
iret
add
movsb
cmp
out
in
xchg
xchg
int
dec
clc
add
fcmovu
xchg
popf
sbb
cmp
xor
sub
sti
adcl
cmp
mov
shlb
inc
sbb
xchg
mov
dec
push
lock
and
mov
xor
loop
shlb
sbb
or
cwtl
popf
add
lret
and
add
xchg
loope
test
sub
jmp
lret
xchg
mov
arpl
pop
cli
pop
adc
pop
pop
rclb
mov
outsl
in
leave
or
add
mov
pop
stc
dec
jmp
xchg
imul
bnd
mov
in
jb
adc
lret
scas
push
pop
xor
and
popf
push
int
insb
movsl
mov
movsb
fmull
mov
in
mov
cli
adc
xchg
int
sub
movsb
jo
repz
mov
mov
movsl
cmp
push
pop
cwtl
lret
ret
cmp
cld
mov
xchg
lock
mov
es
adc
or
push
jo
pop
outsb
push
xchg
pop
mov
in
scas
cmpsb
add
addr16
cwtl
pop
out
lret
push
sbb
in
dec
enter
and
lods
bnd
cmp
insb
jecxz
gs
pop
fsubrs
jp
inc
faddp
lret
shlb
cmp
pop
loop
incl
jg
or
ret
inc
icebp
cmpsb
push
sahf
mov
lret
loopne
adc
adc
mov
sbb
dec
mov
push
adc
cmp
fwait
mov
test
mov
or
add
fldl
cmc
mov
jnp
xchg
stc
mov
sti
out
es
mov
shlb
out
cli
push
iret
dec
leave
insb
pop
add
mov
bswap
xchg
clc
and
dec
fcmovbe
pop
xchg
repnz
jne
inc
lretw
push
xor
nop
dec
mov
mov
test
jns
xchg
inc
cli
xchg
imul
xor
dec
jbe
inc
rcll
lret
pop
sub
out
sub
mov
lcall
cmp
or
scas
into
xchg
loop
push
ljmp
rol
xor
lods
stos
xchg
jg
sarb
test
ljmp
mov
nop
pop
pop
dec
or
xlat
cmp
xchg
out
clc
mov
ficoml
push
icebp
in
es
lds
cmp
lea
les
push
aaa
stos
mov
mov
stos
push
or
cli
pop
out
in
jmp
je
jp
xor
aad
loope
lret
push
out
push
stc
fistps
roll
xchg
fs
mov
pusha
popf
sbb
test
cmc
sbb
push
les
inc
pop
lret
test
sbb
mov
push
hlt
cwtl
rol
or
or
outsb
js
lret
dec
xor
cmp
loop
pop
bound
test
or
dec
fisttps
cmpsl
push
lret
fadd
xor
ljmp
loope
lret
hlt
lods
into
push
xor
scas
imul
arpl
les
stos
sbb
stos
xor
inc
mov
nop
or
sbb
push
xor
fiaddl
jl
push
idivl
ljmp
push
xor
insl
or
mov
mov
mov
int3
in
sbb
clc
loopne
fsubs
mov
lret
cmp
mov
icebp
fildl
insb
gs
cmpsl
and
push
aas
mov
rcrl
mov
jp
mov
mov
dec
ja
or
int
rcrb
or
lret
fsubrp
ss
mov
lret
inc
xor
sti
sub
lret
pop
cmp
lret
test
and
cmc
test
push
xlat
dec
mov
bswap
or
sub
mov
sub
xchg
mov
adc
orps
dec
mov
mov
cmp
aaa
mov
and
mov
adc
add
mov
test
lret
sbb
shlb
imul
jle
test
aaa
lret
in
jbe
in
lret
pop
add
mov
loop
xor
cmp
rcll
ja
add
inc
and
nop
cltd
add
outsl
jge
loopne
hlt
mov
sub
fdivrl
cmp
inc
sub
add
lret
loope
out
gs
ret
scas
rcrl
jmp
je
ds
jl
mov
push
mov
cwtl
cmpsl
xor
adc
imul
cmp
clc
arpl
lcall
mov
xlat
adc
adc
lods
lret
mov
xor
cmp
in
out
inc
icebp
ljmp
sbb
sub
iret
inc
lret
aas
jo
repz
cli
adc
add
bswap
int
insb
sti
test
sarb
es
sbb
inc
shlb
fstpl
test
fcmove
lahf
and
int
lods
lods
adc
cli
ret
inc
xchg
adc
add
xor
mov
lds
ljmp
mov
inc
clc
sbb
push
ret
and
xlat
lret
xadd
repnz
into
cli
pop
inc
ret
roll
pop
cmp
mov
and
push
lret
mov
cs
shr
pop
sbb
outsb
clc
sub
sbb
fadds
lret
loop
mov
je
scas
dec
and
and
mov
stos
ficoml
bound
repnz
add
inc
xlat
lret
cltd
mov
cmpsb
pop
imul
cmp
xlat
add
fxch
add
mov
lret
push
outsb
lods
inc
or
or
fists
lret
mov
test
ljmp
lods
and
clc
mov
xchg
sub
add
in
test
pop
xor
pop
or
std
lret
push
test
inc
mov
or
dec
push
ret
mov
pop
pop
bound
dec
push
push
lret
mov
cli
cmc
aad
inc
sub
mov
fisubrl
mov
fbld
inc
lahf
dec
inc
mov
in
sbb
xchg
xlat
pop
xor
inc
xlat
add
cli
xchg
aad
fdivs
sub
lret
mov
test
bound
pop
shll
lret
rolb
or
shrl
lret
jmp
mov
xchg
lret
lea
pop
pop
and
and
sub
cmc
inc
jae
lcall
sahf
jne
je
lock
shll
mov
mov
sbb
aas
add
mov
mov
inc
das
lods
jae
cmp
fmuls
mul
lret
std
adc
dec
in
or
scas
push
pop
sub
or
push
pop
insl
out
loop
test
jo
lret
mov
fld
lret
push
xorb
mov
cltd
adc
mov
xor
bswap
iret
stos
push
out
and
fadds
leave
or
js
add
aam
adc
cmp
cmp
mov
add
hlt
adcb
xor
xor
pop
mov
popf
push
hlt
jmp
in
out
lret
test
lret
adc
sub
and
inc
jmp
dec
adc
inc
icebp
lret
xchg
pushw
jecxz
stos
mov
lcall
xchg
sbb
mov
sub
leave
mov
out
push
in
lret
lea
decl
lret
lret
dec
mov
pop
roll
jecxz
loope
icebp
and
sub
fnstenv
aaa
jo
pushf
xchg
lret
push
cwtl
xchg
fisubrl
mov
rorb
arpl
ja
je
rcrb
cltd
loopne
lret
das
pop
jmp
sbb
pop
add
xor
inc
je
aas
mov
int3
lret
hlt
xchg
ss
out
xor
and
enter
lods
test
lret
cmp
idivb
imul
jne
cld
mov
jb
cs
pop
fiadds
adc
loop
xchg
jle
outsb
pushl
enter
or
inc
pop
inc
cmc
rclb
push
sti
adc
repz
jne
lret
dec
lock
dec
es
dec
xchg
fistpll
sbb
add
jg
std
bswap
es
mov
int
adc
lret
sub
mov
mov
xchg
inc
mov
adc
cld
in
aaa
int
lcall
mov
pop
lret
scas
insb
sub
out
lret
push
dec
jb,pn
or
fldl
cmp
shrl
test
rcl
mov
lret
mov
lret
lret
pop
mov
dec
cmc
jb
icebp
daa
bound
mov
fwait
push
mov
lret
sar
cmp
into
adc
xor
repz
fxch
xchg
push
adc
cmp
mov
dec
popa
test
jmp
das
add
sub
in
pop
out
gs
les
in
fidivrs
push
cmc
push
lret
jge
sub
cli
pop
mov
jns
lret
xor
test
xchg
popf
scas
push
pop
incl
rcrb
in
ljmp
sti
out
sub
adc
outsl
shll
mov
into
push
dec
push
lret
ss
test
cmc
cmp
inc
mov
in
int
jp
push
sbb
pop
decb
push
mov
sbb
sub
xor
jbe
jae
mov
je
nop
lret
ret
and
js
mov
orl
cmpsb
pushf
and
mov
ljmp
fs
adc
lret
mov
add
pop
mov
popf
jb
lret
mov
cmp
sbb
shll
inc
fwait
mov
fidivl
es
lock
cli
push
and
js
lret
jge
les
fs
std
movsb
inc
xchg
cmp
pop
inc
sub
aaa
sbb
lret
pop
lfs
fidivrs
in
mov
dec
fiaddl
inc
pop
jnp
rclb
ficompl
add
xchg
xor
cmp
sahf
fsubrp
fdivrl
into
cmp
cmp
cmpsb
ljmp
push
mov
dec
mov
jnp
xchg
bound
inc
into
inc
push
cmpsl
jb
mov
lret
jnp
mov
sub
adc
pop
shll
das
fcomps
or
mov
ret
icebp
mov
jecxz
lret
scas
not
add
lock
lret
lret
or
lret
jg
mov
out
int
lret
sarb
push
add
dec
jl
lret
sub
mov
pop
jg
sbb
adc
fwait
inc
mov
inc
xchg
aad
in
mov
into
bound
shrb
inc
cmc
or
pop
pop
push
add
ljmp
sub
push
xor
cmp
adc
arpl
test
lret
mov
jae
sbb
insb
imul
jno
mov
gs
std
lret
ret
pop
sahf
xchg
stos
jmp
lods
jb
enter
lock
shlb
dec
out
push
mov
lret
mov
fwait
cs
stos
mov
arpl
pop
out
pop
out
lret
lahf
or
xchg
lods
pusha
lret
push
mov
cmp
loop
scas
mov
out
arpl
xchg
xchg
xchg
mov
mov
shlb
pop
cltd
gs
lret
mov
xor
lret
ficoms
lods
fimull
or
xlat
andb
push
xlat
ljmp
in
mov
mov
push
imul
movsl
mov
mov
pop
ror
dec
fcom
and
mov
jnp
jne
jg
repnz
mov
jecxz
ss
add
jge
xor
ret
enter
lret
daa
inc
push
or
dec
xchg
pop
xchg
dec
pushf
add
fldcw
mov
add
in
shlb
add
pop
mov
xchg
lret
inc
aam
sbb
mov
hlt
fcmovne
adc
jbe
sub
out
gs
cli
sub
bound
lods
icebp
in
xchg
mov
jae
sub
repnz
push
push
loope
mov
jg
stos
fadds
jne
mov
mov
mov
lret
imul
ror
lret
shlb
scas
and
lret
pop
push
cltd
jne
cmp
out
jecxz
dec
dec
push
cmpsb
insl
lret
int3
push
sbb
daa
dec
inc
sbb
rorl
add
cmp
movsl
enter
add
push
js
mov
mov
lret
or
pusha
sbb
lret
lds
mov
lret
mov
pop
les
int3
lret
sub
pusha
push
jno
lret
and
push
xor
hlt
lret
cmp
cli
clc
add
cli
cmc
rorb
popa
xlat
imul
or
test
int
sub
jae
jbe
cmp
fdivs
jns
ljmp
rolb
cmp
inc
lret
dec
iret
adc
jecxz
dec
pop
mov
pminub
cmpsl
stos
mov
add
out
sub
sbb
shrl
cmpsb
jmp
cli
xor
lea
les
push
cltd
out
cmp
subl
sarl
push
inc
cli
int3
sub
push
dec
jl
fidivl
enter
dec
je
into
lret
fmulp
push
ret
pop
outsl
add
in
push
or
movsb
lret
jo
mov
shrl
sbb
push
jbe
test
cmp
cwtl
cmpsl
sub
dec
lret
mov
cmp
repnz
or
xor
or
and
push
sbb
push
aas
dec
sbb
arpl
mov
andl
push
lret
sahf
ret
ficoml
jmp
cmp
mov
pop
repz
test
into
testl
out
call
adc
in
mov
gs
xchg
mov
cmp
int3
lret
outsb
test
mov
scas
lret
lea
lret
cmp
cwtl
mov
xor
lret
daa
dec
stc
cmp
xlat
mov
pop
sti
cmp
fcmovnb
imul
cli
or
fsubs
xchg
arpl
ja
shlb
iret
sub
lretw
pop
jecxz
xor
in
movsb
xchg
sti
imul
push
lret
stc
push
fiadds
mov
fs
or
xorb
lret
addr16
sti
clc
test
xchg
sahf
xor
pop
sbb
jge
shlb
cmp
or
les
push
mov
ja
pop
stos
sbb
es
push
inc
pop
lods
or
add
mov
ficoml
test
push
xchg
jo
pushl
pop
lret
jg
jle
adc
jb
push
and
movsl
mov
mov
aam
fdivrl
int
arpl
mov
lret
pop
xor
pop
fistps
and
mov
dec
mov
push
arpl
jle
adcl
sarl
adc
add
es
mov
push
pop
sbb
cmp
aas
ret
pop
cmp
xlat
cli
add
imul
lret
add
fmul
inc
mov
adc
lock
cmp
jl
das
dec
cmp
rcrl
outsb
add
push
jnp
lret
fbstp
out
lret
fadds
je
fstl
cli
and
popa
lret
mov
pop
dec
aaa
leave
lret
test
jnp
push
cmp
les
int3
inc
lret
jb
sbb
push
lret
push
stos
mov
lock
lret
loop
repz
mov
lret
ss
sub
mov
stos
push
out
sbb
jb
rcl
lret
in
add
fsubrp
cmp
not
jl
xor
cmp
pushf
ja
mov
lret
adcb
jno
push
stos
mov
hlt
cwtl
ss
lret
jne
fs
les
pushf
aam
sbb
cltd
push
lret
cmp
pop
xor
push
test
subb
vunpckhps
fs
nop
lock
test
mov
pop
push
icebp
jmp
jbe
sti
aam
mov
ds
ljmp
lret
subb
jb
cltd
adc
jnp
mov
inc
sub
push
fs
pop
mov
lret
add
sub
push
and
inc
test
lret
pushf
cwtl
sahf
shll
and
add
adc
sti
in
jl
lahf
ja
add
sbb
or
cmp
jecxz
iret
cmp
cli
insb
add
xor
pop
ds
fwait
xor
push
lret
dec
inc
mov
mov
out
mov
js
leave
lret
sub
jne
fucomip
dec
add
lock
fcom
inc
lods
mov
shl
mov
fidivl
sub
or
cli
lods
or
cmpsb
lods
lret
aas
aad
xchg
jl
cli
or
xchg
push
and
dec
pushf
aad
mov
jbe
in
sbb
mov
jge
inc
mov
js
lret
jb
cmp
pop
or
or
cmp
xchg
lret
dec
test
mov
insl
mov
pop
push
lret
jle
bound
and
not
xchg
or
lret
cmpsb
jecxz
shrb
pop
mov
popf
cmp
lods
mov
leave
shr
shrl
cli
cwtl
or
jle
push
test
push
pop
or
stc
jb
mov
mov
shlb
inc
das
xchg
xor
arpl
add
cmp
lret
cltd
add
cmpsb
add
inc
in
lret
push
or
int3
bound
jo
jbe
shl
loope
test
lret
xacquire
lcall
rcr
cltd
dec
lret
and
mov
sub
xor
xchg
mov
pop
mov
lret
mov
cmp
sarb
adc
in
pop
insb
sbb
push
ljmp
lea
jle
ret
mov
add
push
push
movsb
add
out
insb
add
and
lcall
cli
push
cmc
push
sbb
push
cmp
inc
mov
xchg
sub
xchg
push
lret
inc
push
jae
roll
lret
add
int3
or
lret
add
jae
fnstcw
mov
cmp
ljmp
fs
test
adc
cli
int3
hlt
clc
push
mov
cld
mov
iret
les
dec
lret
cli
xchg
movsb
jmp
inc
mov
stos
dec
fs
pop
dec
rolb
pop
add
dec
add
lret
ja
ret
mov
ja
xlat
scas
and
adc
into
lret
cmp
or
addr16
sar
fidivl
daa
xor
rolb
pop
mov
fidivl
jl
loopne
pop
jo
ror
rcrb
les
xchg
in
addr16
cltd
sbb
add
je
int3
popa
mov
mov
aad
add
jnp
jne
cmp
in
cmc
mov
push
daa
mov
cwtl
repz
push
xchg
mov
fmul
sbb
inc
outsl
lds
xor
or
mov
sub
lret
xchg
push
mov
inc
dec
mov
sub
xchg
cmp
daa
into
in
icebp
xchg
inc
push
sar
or
into
push
adc
dec
xchg
pop
lret
xor
adc
mov
xchg
pop
out
push
mov
push
stc
mov
iret
addr16
clc
ficompl
inc
movsl
or
jb
inc
aam
and
lret
xor
push
jne
das
stos
ss
xchg
sub
lods
mov
cltd
push
mov
lret
push
stos
decb
out
pop
loope
out
stc
sti
lret
mov
mov
ds
loope
popf
clc
push
rcl
bound
lods
xor
lret
mov
jp
jle
pop
jge
push
ljmp
out
jmp
jl
lret
and
cmp
fcmovu
sti
pop
mov
dec
xchg
lret
cmp
ja
int3
clc
mov
test
sub
add
pop
add
fildll
xor
inc
iret
ror
cli
sbb
lods
mov
in
adc
inc
mov
popf
pusha
lret
pop
xchg
out
and
sub
ret
add
aad
rcrb
push
dec
jb
cmp
lret
nop
repnz
shll
filds
test
pop
mov
scas
les
clc
out
push
adc
sub
test
loop
jnp
mov
mov
dec
loopne
cmp
sbb
lods
dec
adc
lret
mov
lret
mov
add
scas
cmp
in
sub
pop
add
stos
sbb
lret
push
fstpl
lret
push
inc
mov
mul
lret
sbbl
movsl
cmpsl
lret
out
outsb
mov
sub
sub
pusha
lret
dec
icebp
mov
inc
push
pop
mov
or
fadds
repz
cli
je
push
cmp
sbb
lret
dec
ds
pop
cli
sub
pop
movsl
push
jp
int
inc
sbb
mov
inc
ds
adc
je
xor
nop
mov
xor
mov
int3
int3
aad
mov
jns
pop
gs
and
aas
inc
or
pushf
xchg
rcrb
pushf
lret
pop
loopne
adc
loopne
loope
xor
pop
or
fmuls
inc
mov
ret
shlb
subl
stos
mov
adc
out
cli
inc
aam
mov
xor
call
or
adc
mov
cmp
hlt
mov
pop
sahf
or
fbld
push
rcrl
jns
lret
and
nop
adc
cmp
bound
dec
cmpsl
sub
lret
pop
xor
mov
jae
inc
push
neg
sbb
mov
mov
icebp
imul
mov
mov
in
and
in
xchg
lret
mov
cmp
or
or
dec
jge
jl
addr16
mov
sbb
add
and
mov
fistps
rcr
mov
mov
movl
inc
lret
rorl
jg
movsb
mov
jnp
roll
stos
aaa
adc
jns
jns
in
adc
cmp
xchg
or
push
cmp
mov
push
cmp
std
sub
jae
lret
jle
adc
data16
add
jmp
fimull
pop
mov
mov
cmp
add
mov
lret
rolb
cltd
scas
sub
nop
dec
stos
sub
pop
enter
ja
cmc
into
leave
addr16
mov
notb
pop
push
mov
mov
mov
xor
cmpsb
scas
pop
ficompl
lret
mov
mov
cmp
lock
cmp
push
inc
insl
scas
subb
movsl
aam
or
xchg
rol
push
add
pop
inc
inc
repz
ficomps
mov
jns
push
fwait
lret
mov
in
dec
loope
pop
jmp
dec
mov
sarb
mov
adc
cmc
lret
into
push
cmpsb
test
pop
add
out
sbb
mov
mov
xor
mov
fdiv
dec
cmp
rolb
add
leave
lret
mov
xor
out
arpl
cld
push
add
lock
daa
and
lret
sti
sahf
pushf
push
dec
out
orl
shlb
cmp
xchg
loop
inc
lret
add
lcall
jmp
aam
cld
lret
out
adc
pusha
sti
rcrb
std
rcrb
push
push
je
add
das
pop
and
movsl
or
bound
lret
arpl
jp
sbb
mov
mov
add
into
out
push
inc
cmpsb
into
shlb
mov
test
adc
loopne
test
out
lods
xchg
loope
lret
and
mov
int3
xor
dec
adc
gs
out
bound
pop
insl
mov
lret
push
jle
cltd
push
lea
xchg
scas
outsl
jp
jmp
mov
sub
lret
fucom
repnz
add
lahf
mov
mov
adc
jle
mov
fxch
push
pop
not
jmp
jbe
lret
rcrl
cmp
shll
subb
lret
pop
hlt
dec
insb
scas
lret
out
sbb
les
ror
sti
into
lahf
adc
lret
mov
ljmp
jl
adc
mov
add
and
cmp
insl
lret
xor
mov
mov
push
dec
lret
push
xchg
pop
arpl
pop
jp
fidivrs
mov
lret
loop
adc
int3
and
push
pop
jmp
mov
push
cmp
iret
lret
or
mov
dec
mov
sahf
and
mov
dec
sarb
add
mov
lret
fnstenv
ds
rorl
jmp
in
jnp
and
shlb
lret
sbb
repz
and
lret
and
shlb
lret
scas
in
imul
movsb
lcall
lret
pop
and
add
pop
xchg
push
pop
cltd
add
fcomps
dec
aam
aas
or
inc
les
rcrb
adc
mov
fnstenv
xor
jno
aad
shr
mov
inc
cwtl
cli
inc
mov
pop
pop
sub
jecxz
inc
xchg
insb
sub
enter
aas
cli
mov
xchg
lahf
inc
insl
push
rol
xchg
sbb
cmp
push
test
lret
pop
outsb
push
jg
mov
enter
jge
rclb
sbb
inc
xor
dec
or
mov
pop
lock
and
ror
lcall
lods
cld
jo
sub
pop
push
in
lret
mov
test
lcall
fadds
popf
std
and
insb
movsl
loopne
adc
outsb
add
inc
orl
call
movsb
lea
std
aad
jmp
fnsave
mov
cmp
rcrb
ljmp
xchg
fcomps
dec
xor
rcrb
das
or
std
lret
adc
jae
jl
and
insb
dec
jbe
lret
fwait
in
jo
icebp
push
cli
or
std
jno
cmp
mov
pop
or
fwait
loopne
lret
mov
fimuls
repz
out
rolb
lea
cmp
jge
xchg
lret
gs
jns
pop
aas
lret
jae
pop
ja
clc
mov
outsl
mov
pushf
pop
int3
out
or
es
lret
push
enter
adc
inc
xor
mov
and
stos
mov
ljmp
icebp
dec
push
lret
or
or
out
lock
fcmovb
sbb
fadd
iret
cmp
inc
add
mov
dec
dec
lahf
ret
stos
jmp
roll
lea
pop
jp
sub
inc
jb
mov
test
xchg
mov
and
push
mov
movsl
cli
lahf
dec
xchg
xchg
aam
pop
insb
cltd
push
lret
out
js
arpl
lret
aam
inc
inc
mov
lret
clc
add
fwait
imul
fwait
inc
sub
lds
mov
push
jl
sbb
dec
ficompl
jmp
inc
out
lock
xchg
sbb
lea
jnp
and
mov
or
xchg
outsl
pop
addr16
ret
das
leave
rolb
and
sbb
std
push
mov
xchg
dec
dec
stc
pushf
lret
out
aas
xchg
ror
dec
lahf
fcmovnu
or
xchg
lret
or
pusha
pop
sub
lret
mov
repz
cli
sbb
cltd
fwait
or
jp
ds
loope
les
add
lret
rcr
sbbl
jbe
jmp
dec
into
mov
daa
mov
xor
mov
lret
cmpsb
mov
in
pop
outsl
roll
into
pushf
add
leave
repz
xor
pop
cs
sub
xchg
cmpsb
cmp
ret
ror
dec
mov
test
pop
int3
mov
push
les
loope
and
push
cs
sub
xchg
lret
adc
mov
jae
pusha
out
lret
dec
sbb
lret
ljmp
jge
loopne
mov
sub
pop
iret
in
orb
mov
push
add
loope
leave
sahf
loopne
mov
ret
mov
jecxz
jo
push
mov
insl
enter
insl
or
outsl
jbe
daa
sub
jne
aaa
xlat
mov
dec
or
inc
nop
xchg
and
inc
pop
dec
pop
push
lret
aas
dec
data16
or
push
push
dec
popa
sahf
sbb
cwtl
clc
cli
cmp
orl
pop
data16
xor
xor
xlat
fdiv
std
mov
sbb
lret
sub
inc
inc
lret
and
outsl
lret
xor
int3
adc
jnp
fisubrl
icebp
mov
mov
sbb
mov
sbb
insl
lret
and
dec
xchg
cmp
adc
cltd
mov
or
xor
jg
xchg
and
or
ds
lret
fcmovu
lock
mov
or
mov
lret
dec
dec
push
int
mov
cli
movsb
iret
xchg
push
jg
pop
cli
sbb
pop
cmp
xchg
push
pushf
mov
inc
sub
lret
push
fwait
pushf
jns
inc
iret
lret
lcall
jge
inc
sahf
mov
aad
fimull
insl
add
lret
jno
call
shrb
ljmp
shlb
lret
sub
stos
cmp
add
xchg
mov
dec
aam
cmp
mov
dec
adc
into
sbb
movsb
add
mov
insb
cmpsl
cwtl
xor
sub
ret
jge
lret
xchg
sbb
in
rclb
dec
inc
mov
mov
lret
pop
aam
jp
lret
jmp
adc
lret
out
je
sbb
lret
mov
pop
sub
mov
nop
movl
xchg
cli
sub
fwait
or
rclb
test
and
popa
dec
push
mov
or
cwtl
xchg
lret
push
cmpsl
in
xchg
cmp
or
push
mov
lret
fs
dec
outsb
jl
pop
dec
daa
add
fidivl
sub
push
jno
pop
fdivrs
test
hlt
add
les
pop
adc
cmp
push
cld
inc
lret
outsl
sbb
jbe
lret
or
xchg
inc
sub
lret
sti
inc
mov
fcmove
fisttps
lret
mov
lret
mov
mov
jns
or
or
adc
inc
cld
or
ret
mov
mov
dec
loope
movsl
inc
pusha
jge
dec
push
call
mov
std
into
ficoml
sub
cmpsl
rcr
mov
cli
dec
movsb
test
mov
dec
pop
popf
cli
iret
mov
pushf
xchg
pop
add
or
sbb
test
sbb
mov
mov
addr16
lret
loope
pop
adc
lret
les
imul
call
mov
lret
mov
jl
in
mov
xlat
lret
scas
push
sbbb
mov
dec
mov
stos
rcrl
sti
fucomip
sub
cmpsl
pop
outsb
int
fildl
or
dec
jg
out
cmpsl
add
fs
ret
pushl
int
pushf
xor
pop
je
add
shlb
mov
sbb
stos
push
dec
gs
fs
mov
add
sub
mov
loope
jno
in
aad
fisubrl
dec
mov
or
cli
popf
fcom
pop
push
pop
push
das
movsb
lret
test
clc
mov
pusha
test
and
inc
mov
mov
aad
inc
sub
ret
lret
push
xchg
or
pcmpeqw
mov
sub
adc
inc
mov
ret
dec
dec
cmpsb
ret
insl
mov
sbb
roll
cs
xor
mov
fwait
gs
and
loopne
fisubrl
jge
fsts
push
lret
sub
cld
mov
add
std
xchg
dec
dec
inc
inc
add
cmpsb
push
fmull
mov
rcrl
bound
iret
mov
add
or
mov
xlat
lret
dec
mov
popf
fsubr
lret
addr16
xor
fidivrs
or
or
xchg
inc
insb
in
adc
lret
push
push
mov
xor
imul
cmc
lret
jnp
outsb
pop
pop
xchg
stos
sub
stos
ror
add
stos
mov
out
or
jl
jbe
icebp
test
gs
aad
mov
lahf
jns
decb
or
cltd
pop
jo
cvtps2pd
inc
xorb
lret
mov
xchg
cmp
xchg
cmp
ljmp
lock
dec
neg
aaa
in
stos
mov
sub
push
cmp
lcall
js
cmp
fdivrs
inc
stos
dec
fadds
cmp
loope
adc
mov
lret
dec
or
nop
cltd
add
cli
xchg
dec
call
adc
xor
mov
push
stos
rol
stos
adc
aas
jg
fistpl
push
hlt
lret
imul
mov
lret
jmp
inc
dec
cmp
pop
int3
or
push
push
lret
dec
pushf
shlb
lret
inc
in
jecxz
mov
shrl
add
popa
outsb
out
xchg
fcomps
cld
cmp
push
std
orb
cmpsb
add
lret
pop
push
ss
add
push
jns
mov
aam
and
sub
lret
mov
and
lods
lret
rorb
cwtl
jns
aad
push
lds
mov
mov
lret
jg
inc
push
mov
or
lret
lods
in
popa
sti
push
aad
test
hlt
subl
push
cld
dec
adc
shrb
decb
out
dec
lret
sub
lret
xchg
or
lret
jle
fcoms
hlt
xchg
push
or
ficompl
jne
cmp
pop
dec
mov
cmc
flds
cli
xor
ss
in
push
inc
jp
popa
icebp
lret
inc
call
stc
imul
mov
pop
bound
pop
xor
lret
mov
mov
xor
or
loope
loop
repz
lret
push
cmc
push
arpl
mov
jne
mov
fcmovne
xor
outsb
push
push
lret
mov
pop
popf
jo
int
hlt
stos
sti
pop
lret
in
lods
hlt
cltd
loopne
pop
int3
lret
imul
pop
js
fcmovnbe
ss
lds
lret
mov
lret
ficoml
fbld
mov
in
ret
pop
ror
lret
push
jnp
ss
lcall
jne
xchg
inc
dec
pop
cmp
push
jl
lret
and
pusha
rolb
ljmp
or
or
jnp
cmpsb
imul
cmp
xchg
or
jecxz
push
sbb
test
pop
jmp
lret
rcll
test
xchg
pusha
int3
cli
lock
call
mov
int
lret
dec
mov
pop
imul
out
lahf
dec
lock
fs
pushf
jae
sbb
xchg
lret
jo
xchg
push
inc
jmp
imul
push
adc
ss
adc
lret
int
fs
bnd
cmp
pop
movsb
sbb
into
fsave
fcoml
xchg
xor
movsl
jb
cmp
mov
adc
stos
inc
pop
mov
sbb
hlt
adc
sbb
lret
jae
mov
mov
pop
testl
insl
test
sub
aad
jp
sti
negb
out
rcrb
fcompl
fisubl
lret
inc
dec
inc
mov
xor
sbb
xchg
cmpsl
pop
lods
jbe
nop
fcoms
loop
sub
xrelease
mov
and
scas
lods
ja
loop
outsb
jnp
shll
loopne
loop
cwtl
movsl
outsl
data16
jg
and
dec
or
orb
fwait
mov
push
cli
pop
fsubrs
pop
push
loop
lret
push
xchg
lods
arpl
mov
lret
fdivs
add
stc
lret
add
fimuls
xabort
fldenv
scas
dec
pop
push
push
inc
arpl
sbb
jge
mov
cld
lcall
mov
push
cli
push
cwtl
cmp
mov
icebp
lret
pop
loope
or
push
lret
rorb
mov
mov
mov
or
ss
ds
int
mov
fcoms
lret
movb
fwait
bound
cs
jbe
pop
sbb
xchg
rcr
loope
lret
int
in
jle
fwait
mov
lret
leave
hlt
push
dec
cmp
lret
stos
adc
adc
add
out
in
lods
adc
or
mov
lods
mov
lret
pusha
scas
pop
xchg
mov
cmp
cmpsb
inc
outsb
jae
mov
popl
push
add
pop
and
xor
push
pop
cs
jne
int
int
push
lret
push
daa
fidivl
imul
inc
push
movsl
lock
daa
dec
shrl
jmp
mov
out
and
pop
ja
cli
or
aas
jae
dec
cmp
cmp
dec
in
filds
pop
cmpsb
fmull
cmp
pop
lret
or
xor
mov
pop
shlb
cli
lret
cmp
xor
lret
ret
xor
rcrb
cmp
add
ret
aam
incb
mov
lret
fwait
cmp
das
arpl
mov
fs
lret
insl
icebp
pop
inc
cltd
or
daa
adc
stos
dec
movsb
push
ror
popf
cmpsl
ret
lret
sahf
mov
lret
xchg
lods
cmpb
test
insb
mov
and
stos
pop
push
dec
mov
xchg
xchg
xor
je
pop
xacquire
ja
add
and
arpl
mov
mov
std
adc
out
xor
adc
xchg
ss
push
mov
aas
fidivrl
add
loop
mov
ror
fmuls
lret
and
pop
shrb
cltd
inc
lret
xchg
mov
push
adc
add
pop
jbe
lret
mov
hlt
lock
lret
and
sbb
lret
popa
mulb
jg
lret
fisttps
aas
sub
dec
push
shll
int
rclb
loop,pt
cmp
xor
mov
sub
cmp
sub
pushf
aam
mov
pop
lret
lret
mov
loop
pop
or
inc
jo
test
stos
jne
sbb
imul
icebp
push
sbb
mov
xlat
int
lods
mov
mov
int3
and
adc
inc
xor
cmpsb
bound
lret
in
sbb
mov
in
vprotw
sub
inc
icebp
add
cmpsl
push
mov
mov
mov
fstpt
cmp
lret
xchg
icebp
cmp
mov
ja
push
jnp
jg
sbb
mov
test
xchg
into
mov
dec
test
cmp
sub
mov
fs
add
nop
jne
push
cmc
cmp
xor
sub
mov
pop
push
xchg
pop
dec
cld
add
cmpb
repnz
push
fimull
jo
fs
dec
lret
ret
out
popa
leave
mov
aam
fcompl
ror
pop
push
insl
sbb
lret
push
cmp
xor
xor
mov
std
lret
int3
mov
nop
mov
outsb
fisubrs
sbb
mov
ljmp
or
fldcw
hlt
cli
ficoms
push
neg
shlb
dec
jmp
sub
jne
ret
out
aaa
int3
pop
sti
mov
cmp
fisubl
roll
cld
cmp
adc
push
jp
rol
je
xchg
aad
stc
mov
icebp
mulb
inc
stos
fisubl
push
xchg
fadds
lret
add
lock
and
lret
ljmp
iret
leave
inc
mov
in
pop
fcmove
jbe
cmp
pusha
lods
loop
add
sbb
out
inc
int
jp
pop
fs
xchg
cmpsl
dec
mov
xchg
clc
aas
add
xchg
mov
inc
fisttpll
cwtl
lret
sub
imulb
lret
sub
mov
xor
int
pop
push
inc
mov
fisubl
jb
xlat
ljmp
and
ds
ss
mov
lret
pop
loope
push
stos
xor
adc
fidivl
sti
stos
ret
or
add
lret
sub
out
stc
or
pop
repz
xchg
daa
jo
lret
shll
or
lret
jge
cmp
add
cli
xor
imul
lcall
add
enter
aaa
cld
xlat
movsl
sub
stos
bound
aad
xchg
out
clc
sbb
mov
mov
jecxz
stc
xchg
sub
sbb
testb
mov
fdiv
in
lret
mov
pop
lret
jb
jns
fisubrs
fimull
sarl
and
dec
inc
inc
xor
daa
or
fldt
lret
sbb
jge
in
loope
lret
push
cmpsl
inc
mov
sub
mov
dec
leave
dec
pop
cmp
in
sub
mov
jbe
icebp
rorl
inc
test
dec
adc
faddl
push
sub
xor
xchg
out
test
orl
lret
cvtps2pd
or
cmpsl
lret
push
xchg
dec
cld
in
lret
xor
daa
lret
sbb
mov
ds
dec
adc
popa
cmp
and
ja
lret
insl
sub
movsl
pop
test
or
jmp
loope
fwait
test
cmpsb
cmp
mov
jle
sub
test
mov
or
jnp
xchg
adc
leave
lret
jb
xchg
push
dec
jns
lret
and
cmc
negl
cli
jbe
lock
lret
orb
jnp
lret
jb
shrl
xchg
bswap
xchg
fs
mov
lret
frstor
sahf
mov
lea
mov
mov
mull
cli
jecxz
inc
mov
jg
ljmp
push
adc
fidivrl
push
jbe
insb
lret
cs
fwait
repnz
lret
pop
dec
push
loop
std
pop
into
xchg
lret
adc
pop
add
ljmp
fcomps
cmp
mov
push
jne
into
stos
lods
or
mov
jnp
fdivl
adc
mov
mov
loopne
test
out
jg
shlb
mov
lret
mov
mov
push
mov
mov
sub
movsl
lret
push
push
ret
inc
lret
fldl
lods
jmp
jle
push
dec
mov
aad
cmp
dec
xchg
cmp
pop
into
lret
arpl
movsb
cld
jle
cli
fiaddl
in
cltd
sbb
mov
lret
testb
lret
std
loopne
xchg
pop
mov
add
jnp
cmpl
sbb
int
xor
inc
jle
xor
cmp
lret
lods
rclb
push
fwait
ror
out
jl
cli
mov
shl
and
ljmp
and
jns
or
mov
out
or
push
cmp
popa
and
mov
add
rolb
pop
aas
push
insl
xchg
lret
or
stos
ds
ljmp
repz
pop
cli
loop
aad
jne
aad
loope
lret
in
pop
fiadds
add
jno
pop
mov
pushf
dec
ds
pop
daa
cmp
ret
adc
dec
lret
dec
jb
daa
nop
lret
rolb
das
xor
out
cmpsl
aad
andb
mov
push
cmp
loop
daa
int3
ret
addl
pop
inc
push
enter
iret
ror
xchg
or
jge
xchg
add
sahf
add
add
repz
lret
lds
jp
in
jl
loop
out
mov
and
leave
jbe
xlat
fistps
mov
adc
shlb
mov
mov
jmp
addb
out
xchg
adc
xlat
lret
sub
call
jg
repnz
push
stos
outsb
cmp
ds
jns
shrb
inc
jno
fcoml
cltd
lret
pop
push
std
sbb
ret
lret
int3
out
dec
pop
lock
incl
lret
adc
lret
mov
pop
mov
rcrb
sub
inc
inc
lea
lret
pop
mov
mov
les
xor
lret
test
clc
add
pop
inc
sub
or
sarl
or
xor
xchg
jbe
and
sahf
hlt
aad
push
xchg
stc
inc
lret
mov
mov
addr16
pop
xchg
pop
in
pop
pop
add
inc
enter
xchg
jns
lret
subl
xchg
or
mov
push
jmp
fisubl
testl
cmpsl
cmp
xchg
imul
shr
xlat
clc
pop
inc
dec
pusha
lret
jbe
push
cmpsb
mov
adc
idiv
mov
lret
dec
xchg
daa
mov
adc
mov
mov
or
das
cmpsl
pop
rorb
mov
xor
jp
fsts
lret
andl
inc
xlat
mov
cmp
dec
jae
dec
fdivrs
stc
adc
sub
pop
mov
push
jg
mov
cmp
lret
inc
cld
lret
sub
xchg
repz
lret
mov
pop
lret
insb
adc
jp
lds
lock
je
or
imul
aad
xor
xchg
movl
shrb
ljmp
loopne
jg
xor
ja
jo
adc
adc
pop
scas
imul
jmp
bound
xchg
add
jmp
int3
sub
or
lret
loopne
lret
pop
cld
mov
pop
jmp
xchg
push
test
icebp
xlat
lock
mov
nop
mov
test
fldenv
jge
dec
sbb
pusha
aad
pop
jmp
xor
bnd
sbb
std
push
jmp
pop
pop
sbb
imul
rclb
mov
pop
cmp
int
out
aad
xchg
xor
pop
cs
jle
and
inc
lds
fwait
mov
cli
cltd
xor
in
fsub
sub
lret
xor
iret
repz
xchg
ret
mov
or
fadds
loopne
mov
cmp
lret
dec
xchg
pop
fcmove
cmp
mov
iret
lret
sti
icebp
sahf
push
cmp
stos
pop
jno
lods
jp
leave
lret
mov
in
add
stos
jle
bound
filds
ficoms
lcall
xchg
arpl
xchg
adc
jp
inc
lret
mov
inc
adc
leave
push
pop
ljmp
jle
push
test
mov
jne
loope
lret
hlt
ljmp
out
xor
mov
lods
lret
or
push
dec
mov
jmp
jp
jns
test
push
xor
dec
adc
sub
pop
mov
in
cmpsb
mov
aad
inc
lret
jns
pop
mov
loop
mov
stos
pop
lret
mov
xor
stc
lcall
inc
or
mov
add
ss
pop
sbb
lret
sahf
add
fisubl
arpl
in
rorl
push
cmp
mov
cmp
aam
sbb
mov
pop
push
cmpsl
jle
dec
xchg
lret
xor
mov
aad
cmpsb
pop
or
ficoml
mov
cmc
adc
fcmovu
stc
loop
outsb
jne
push
daa
pop
test
lret
fxch
jp
lret
adc
cmp
fisubrl
cwtl
and
aad
lret
pushf
int
mov
jae
and
add
aas
jmp
rclb
iret
sub
lret
dec
es
cwtl
in
test
fcmove
lods
aad
mov
jo
mov
loop
imul
jl
pop
mov
mov
xchg
mov
std
dec
rorb
sti
jno
adc
dec
lret
sbb
imul
js
loope
pop
sub
mov
outsb
mov
jns
lret
add
lret
cmpsb
aaa
out
mov
js
mov
lret
insb
pop
xor
xchg
mov
ret
ss
fwait
outsb
mov
loope
or
lret
push
orb
out
dec
push
in
aam
mov
cli
inc
xor
push
mov
pop
fistl
cltd
pop
arpl
lret
popa
fnstsw
stos
pop
stos
fwait
in
aad
into
lods
mov
cmp
stc
push
mov
cmpsl
push
xor
lret
pushf
push
jg
push
lret
pop
inc
sahf
push
push
adc
inc
in
mov
or
xchg
pop
add
pop
lret
push
loope
pop
ret
mov
xor
lods
push
lret
mov
pop
lret
fistpl
outsb
lea
mov
into
ficoms
mov
jecxz
test
jl
sbb
pop
mov
test
and
and
fistl
jl
stos
stos
addr16
or
data16
pop
pushf
fidivrl
fists
negl
fldenv
mov
inc
out
mov
pushf
aaa
adc
xchg
ss
cmp
lds
stos
lret
fcomps
cmp
aas
mov
pop
lret
jo
pop
sub
lret
jne
push
dec
mov
jmp
or
pop
shl
nop
sbb
int3
sub
sti
outsb
dec
int
lret
add
mov
clc
fcmovbe
movsl
ret
rcrl
mov
add
sahf
nop
test
es
mov
leave
adc
adc
lcall
or
dec
mov
stc
mov
cmp
lcall
adcl
adc
lret
out
sbb
pop
pop
adc
cwtl
aam
in
xchg
mov
sti
cmp
fimull
cmp
xchg
add
jmp
cmpsb
mov
rcrl
jo
lret
sub
inc
mov
or
fdivr
ret
dec
push
sub
inc
stos
mov
inc
lret
cmpb
cmp
xor
mov
in
sub
lret
cmp
dec
mov
mov
sbb
xorl
sbb
idiv
outsb
adc
lret
daa
test
mov
xchg
lret
and
shl
push
cmp
push
or
iret
movsl
push
jbe
cmp
or
testl
repnz
icebp
push
lret
shlb
jg
dec
in
mov
and
cmpsl
cli
cmp
ss
jmp
pop
xchg
jo
test
pop
or
addr16
mov
mov
popf
or
push
out
loope
inc
push
pop
ss
call
xchg
push
insb
outsb
mov
test
pop
fimull
mov
loop
std
jmp
setns
fcmovnbe
hlt
mov
mov
dec
fidivl
pop
xor
or
pop
xchg
mov
rcr
std
and
lret
cmp
fwait
push
and
sbb
jg
ss
daa
lret
rclb
mov
pop
dec
add
testl
fnop
lret
cwtl
inc
pop
notb
lret
cmc
cmpsb
jno
enter
and
test
std
inc
lret
xchg
jne
fwait
ljmp
fs
orl
add
sti
idivb
fadds
xor
sub
aaa
in
pop
fbld
movsl
shlb
adc
mov
pop
cmp
lret
xor
nop
leave
jnp
cmp
add
call
mov
sub
mov
sbb
cwtl
jmp
pop
and
and
nop
testl
jecxz
loop
jae
out
mov
adc
enter
lret
sub
push
mov
sub
ret
dec
insb
imul
and
or
lret
adc
icebp
xor
subl
ja
outsl
cwtl
mov
mov
in
dec
pop
lret
lock
push
aam
cmp
lret
push
sbb
lret
xor
mov
mov
adc
xlat
sub
cmp
iret
int
mov
imul
in
push
sub
stos
jnp
iret
push
inc
and
cmp
aad
fs
addr16
mov
push
sbb
xchg
mov
loopne
cmp
addr16
fcompl
iret
dec
scas
mov
bound
push
lret
loop
sahf
xor
ja
mov
jg
sub
add
xchg
jmp
lret
fidivrl
int3
push
and
adc
jg
out
imul
dec
repnz
mov
sub
dec
out
ret
pushf
in
lock
cltd
or
mov
mov
jle
push
mov
je
or
ja
lret
xchg
in
pop
and
lret
fcoml
jge
lret
cltd
add
int3
lods
and
hlt
sbb
mov
test
ror
sbb
pushf
jnp
mov
movsl
insl
push
inc
fldt
jp
or
shlb
mov
ud2
jp
and
sti
fstps
outsl
mov
std
test
adc
fwait
sbb
xchg
into
loop
adc
call
dec
xchg
jbe
mov
inc
into
cmp
in
pop
jnp
pop
adc
repz
lret
mov
xor
mov
and
inc
rcrb
addr16
mov
fcoml
pusha
test
cli
dec
add
inc
dec
adc
ficompl
and
mov
mov
push
rcll
adc
adc
loop
hlt
mov
fimull
rolb
mov
clc
xor
mov
inc
push
jp
movsl
cmpsb
mov
sbb
int
fs
in
cmpsl
into
xor
mulb
sbb
icebp
ja
out
sub
clc
out
push
mov
jbe
or
dec
scas
pop
jecxz
pop
dec
mov
sub
jg
fcoms
push
and
es
push
xlat
cmp
sbb
adc
jg
popf
xchg
xor
xchg
dec
lret
jl
sub
or
cmpsl
adc
sub
imul
sub
sub
and
into
sbb
shl
or
roll
mov
jmp
cmp
pop
lret
ljmp
out
sub
lret
jl
jb
pusha
int
push
sarb
mov
notb
inc
dec
cmp
inc
pop
xchg
pop
cmp
lret
pop
in
lods
pop
out
fnstenv
jl
rolb
mull
mov
lret
imul
jmp
shlb
push
sub
mov
sahf
push
les
ljmp
xchg
fstps
mov
aad
sub
imul
addr16
xchg
outsb
inc
shlb
lret
sbb
stos
adc
and
fwait
push
adc
mov
cmp
shl
inc
push
es
cs
sbb
stos
movhlps
sarb
rcl
jmp
cli
out
icebp
cmp
add
jge
xchg
int
ja
inc
jns,pt
pop
bound
jg
andb
lea
jbe
mov
out
jmp
lret
into
mov
mov
stos
lret
fcomip
je
jp
lret
and
adc
cmp
aad
mov
mov
imul
lods
cmc
div
cmp
inc
out
jns
jge
ds
dec
cli
sbbb
inc
cmp
pop
pop
cmpsl
mov
sub
loop
imul
mov
add
pop
xor
mov
enter
add
les
push
aaa
push
xor
cmp
push
subb
cwtl
dec
and
lret
pop
or
add
sarb
inc
push
lret
loopne
sarl
dec
xchg
daa
int
pop
lret
xchg
sbb
rcr
lret
cmp
popa
icebp
lret
mov
pop
sub
and
and
stc
aam
lret
daa
sbb
mov
ret
pop
push
inc
and
lret
jbe
dec
lahf
stc
lret
ret
nop
enter
xor
sbb
shrb
repnz
adc
lret
push
mov
jp
cmp
psrld
mov
outsl
lret
mov
mov
push
iret
mov
pop
data16
lret
jne
pop
mov
pop
or
xchg
aaa
jno
inc
mov
xor
ss
cmpsb
iret
pop
lret
mov
lret
in
ret
or
xor
adc
mov
jns
mov
test
push
lret
jp
call
sahf
mov
or
aas
sub
and
lret
outsl
outsb
fists
push
popa
les
sbb
push
rcrl
data16
dec
in
cwtl
sarl
data16
push
int3
pop
dec
and
mov
lret
sub
imul
inc
jno
xor
xchg
shll
pop
aas
mov
lret
sarl
lret
sbb
lret
in
xchg
jo
sbb
cltd
jno
bound
cmp
sarl
dec
movl
loope
lret
xor
inc
pop
das
outsl
lret
mov
mov
rcr
push
add
mov
pop
xchg
leave
mov
fcomps
mov
xchg
ret
inc
mov
jg
cmp
ja
inc
or
outsl
in
adc
add
xor
lret
push
mov
dec
jmp
movsl
mov
xor
scas
mov
int3
shl
fwait
mov
and
dec
jne
push
mov
ljmp
repz
mov
pop
fidivrl
shl
pop
mov
add
daa
lret
pop
pop
inc
fidivl
loop
push
dec
out
lret
aad
js
cmp
sub
adc
fcmovbe
push
pop
pushf
lret
push
push
nop
or
lret
push
aas
sub
lods
ljmp
in
lret
stos
hlt
sti
mov
inc
pop
jb
stc
out
or
inc
push
test
pop
aam
lret
inc
or
insl
mov
sub
mov
outsl
mov
add
sahf
loop
arpl
mov
cli
ss
xchg
mov
ljmp
repz
or
ret
roll
hlt
mov
mov
adc
and
or
and
int
mov
stc
adc
mov
lret
cmp
es
rcr
mov
adc
cli
test
roll
in
loope
xchg
int3
sub
lods
jo
add
xor
test
push
daa
xchg
lret
sub
sbb
xchg
ja
adc
das
push
repz
dec
fwait
insb
jl
xlat
sub
dec
sbb
push
std
sub
push
sbbb
mov
addr16
jns
stos
sbb
jo
in
push
pop
popa
cltd
mov
and
bound
mov
lret
jmp
scas
mov
inc
fldl
xchg
adc
cmp
jnp
sbb
repnz
loope
stos
cmp
test
and
imul
decb
push
mov
test
daa
mov
jge
sub
repz
sahf
mov
lret
adc
mov
mov
mov
dec
outsb
cmp
lret
adc
rolb
sbb
repz
mov
test
push
add
iret
mov
or
dec
loope
movb
xchg
cmpsb
addr16
lret
and
lret
sub
jno
outsb
or
mov
xchg
fs
lock
popf
out
mov
mov
aam
mov
je
test
cmp
jl
pop
adc
or
cli
out
lret
sarb
or
push
xor
and
pop
pusha
lock
lret
mov
push
pop
mov
mov
mov
repz
pop
mov
cwtl
dec
adc
roll
pop
movsbl
int
add
xor
ja
jl
popf
mov
mov
xor
int3
sub
ret
lret
push
or
insb
ljmp
ret
stos
popl
fistpl
add
mov
aad
mov
dec
test
mov
push
lock
dec
in
out
test
cli
sti
and
imul
jae
pop
fiaddl
xor
ret
enter
mov
xor
cmp
insb
and
push
xchg
fmull
xlat
and
cmc
lret
sbb
add
lcall
int
psubd
dec
into
xorl
pusha
jb
mov
push
push
or
xlat
mov
cmp
mov
lcall
insl
cwtl
adc
mov
sbb
sub
rcll
push
mov
cli
jne
pop
xlat
pop
add
daa
mov
sar
or
cmc
roll
lret
lret
repnz
and
bndldx
fmuls
out
imul
mov
inc
push
rcrl
popa
lret
jmp
loopne
mov
in
push
sbb
std
popf
push
inc
mov
lret
inc
pushf
sub
dec
out
aaa
cwtl
mov
push
rcrb
xchg
pop
push
stos
push
loope
jae
xchg
aad
lock
ret
fiaddl
mov
cmp
jle
dec
mov
test
stos
sbb
add
out
cwtl
cmp
ret
or
push
jns
mov
inc
mov
and
mov
pop
xor
sub
lret
inc
push
push
les
pop
scas
xor
std
cmpb
fs
pop
and
push
push
mov
lret
in
jae
xchg
adc
jbe
fisubrl
mov
adc
and
aam
add
cwtl
pop
xchg
mov
repz
lret
add
inc
insb
jle
add
out
rclb
dec
test
push
test
ret
or
sub
sbb
or
inc
rcrb
cmp
aaa
fisubrl
test
jmp
lret
mov
imul
push
sub
jb
lods
add
fs
leave
outsl
insb
lods
mov
cmp
jp
int3
jecxz
rorl
lret
test
push
mov
cmpsl
and
lock
inc
in
aaa
pop
icebp
in
mov
lods
pop
sbb
pop
loope
add
ja
int
ljmp
in
lret
fcoms
jo
lods
and
inc
dec
mov
lret
pop
popw
cmp
lret
pop
cwtl
testb
and
lret
int3
stc
cltd
xchg
jbe
push
outsl
lret
loopne
cmpsb
ret
mov
adc
mov
xchg
sti
pop
cltd
inc
push
sub
repz
in
je
std
mov
xchg
mov
mov
call
ss
in
lret
mov
imul
fldt
adc
cmp
push
or
sbb
and
lret
gs
mov
xchg
rclb
incb
lret
cmp
jmp
mov
icebp
mov
lret
int3
in
jno
ds
cmpsl
pop
inc
fwait
sub
mov
ret
mov
or
dec
test
push
out
mov
jmp
fsubp
insb
cmp
sbb
mov
mov
cmp
cmp
lret
cwtl
fnstsw
in
mov
inc
cmp
lret
xchg
loop
pop
mov
lret
fwait
xor
lret
out
pop
aam
ljmp
fimuls
in
adc
dec
sub
js
and
pop
mov
or
fimull
mov
jne
sub
xchg
xor
lret
bound
enter
jb
cmp
jg
lret
sbb
nop
orl
into
ret
dec
stc
lret
pushf
mov
lea
dec
out
outsb
lret
jno
push
mov
dec
adc
jb
jae
movsb
mov
fstl
subb
fwait
lods
stc
outsl
lahf
sbb
add
mov
pushw
lret
push
add
xor
fisubrl
popa
mov
shl
addr16
stos
add
sarb
cltd
lock
mov
sub
push
fwait
popf
loope
jp
inc
add
push
daa
shll
sub
rorb
cmp
imul
xchg
testl
call
lret
push
jmp
les
repz
das
xchg
mov
in
or
lret
mov
cmp
mov
dec
dec
lret
mov
add
or
push
lret
sbb
push
mov
lret
sbb
add
add
les
lret
fdivrl
lret
adc
xor
lret
popa
jbe
repz
sbb
lcall
aam
dec
add
loope
enterw
lret
aad
jl
dec
sbb
fstpl
jle
dec
loop
shll
int
mov
inc
pop
pop
mov
sarb
sub
xchg
dec
mov
xor
add
pop
cltd
in
int3
mov
jo
lret
insl
pop
testl
insl
daa
in
jno
out
mov
imul
shrb
mov
out
or
push
adc
push
psubb
mov
cmp
stos
push
insl
push
sbb
outsl
jmp
popa
or
sbb
lret
jno
shlb
or
cmp
lret
loope
push
push
pop
lret
mov
xchg
lods
dec
jecxz
dec
js
pop
gs
lret
sub
adc
inc
rolb
fimull
add
js
sarb
add
cs
xchg
lret
das
int3
dec
adc
xchg
add
mov
or
rcr
mov
pop
cmpsl
cmpsb
mov
int
js
test
out
cmp
fucomip
test
imul
lret
sti
test
lret
xor
popf
lret
sahf
nop
scas
gs
int3
add
lret
aas
or
xchg
test
cmp
pop
push
sub
push
xchg
mov
mov
mov
lret
bound
lret
dec
mov
clc
and
mov
movsb
add
sarb
lret
and
mov
shl
mov
jb
mov
pop
push
lcall
stos
cmpsb
push
inc
dec
repz
ja
lret
add
fchs
icebp
dec
adc
pushf
fxch
push
stos
or
hlt
addr16
sbb
ss
into
int3
and
int3
mov
lds
jbe
jp
adc
popa
std
add
push
sbb
ss
sbb
scas
shl
xorl
repz
and
and
sub
inc
cmpl
outsl
int3
xchg
push
dec
xchg
pop
gs
xchg
fsub
pop
lret
jp
jecxz
subl
shr
out
mov
mov
std
lahf
loop
xor
mov
dec
lret
test
fadds
push
sahf
movsl
push
lret
mov
dec
subb
or
push
push
loop
mov
popf
or
jp
test
push
outsl
adc
jl
lret
es
jae
enter
lret
sub
stc
xchg
and
aam
push
push
mov
int
cmpsl
rcrl
lret
fs
ficompl
aaa
fnstenv
adc
cld
pop
fadd
stos
mov
mov
pop
adc
and
rol
stos
and
jo
jno
ja
pop
mov
mov
fs
cmp
push
fstpl
data16
aas
stc
cmp
mov
and
aaa
loope
and
lret
insb
repz
ds
mov
shll
ret
sarl
jne
sbb
lret
mov
xor
or
and
xorl
lret
cltd
aam
aas
out
mov
call
push
out
movsl
lret
pop
cld
fs
xchg
lods
lret
ret
movl
sub
pushf
lret
xor
lret
lods
test
cmp
lret
pop
jg
and
daa
imul
lret
mov
xor
mov
in
mov
pop
mov
or
jo
pop
js
lcall
adc
fs
out
mov
faddp
ljmp
into
sahf
sbb
lret
out
data16
inc
lret
in
mov
cmp
adc
inc
sub
in
push
out
je
push
jge
loopne
cli
xor
testb
ret
xlat
rol
lret
jnp
and
ss
push
jo
cmp
adc
out
stc
pop
into
push
mov
nop
es
ja
inc
lret
sbb
mov
mov
inc
jbe
cmp
mov
mov
popa
imul
dec
add
jnp
lret
fs
lret
pop
mov
fisubrl
movsl
xor
rcll
inc
add
int
lret
test
xlat
mov
mov
push
cmpsl
add
addb
mov
cmp
jns
subl
lret
sbb
jnp
pop
jne
and
sub
mov
in
lret
xchg
movsl
je
mov
into
mov
mov
rcrl
cmovne
adc
adc
push
xor
push
mov
jmp
xchg
ret
orb
jecxz
dec
inc
lret
mov
push
xchg
data16
mov
mov
jl
jecxz
stos
scas
jne
xchg
sti
pop
xor
ror
cmc
mov
mov
jbe
loop
outsb
push
lret
add
stos
mov
inc
lret
pop
in
push
cmp
lret
mov
mov
jmp
add
jne
inc
pusha
pushf
lret
stos
shll
mov
cmp
sub
sub
fisubl
adc
pop
jno
push
pop
push
xchg
lret
enter
mov
push
dec
out
pop
and
test
es
shrb
cli
mov
bound
mov
push
or
mov
sbb
stos
and
out
sbb
add
inc
xor
int3
arpl
mov
idivb
sub
jne
and
push
mov
add
jmp
mov
xor
cmc
sub
stos
aas
fmulp
xchg
jg
rcrb
or
mov
es
cmp
imull
add
enter
lds
gs
lret
out
push
sahf
push
loop
adcl
out
xchg
push
mov
jg
cmp
movl
push
loop
pop
lret
jne
imulb
lret
pop
pop
sbb
cmp
xchg
push
rcll
jmp
pop
dec
xor
lods
popf
imul
push
jmp
add
push
add
xchg
lock
pop
call
dec
pop
add
ss
dec
std
nop
into
mov
adc
and
dec
lret
jecxz
push
pusha
in
lret
fsubr
cmp
cmp
sub
int3
subb
lock
pop
stos
in
xchg
or
lret
jge
insb
jle
push
lret
dec
cltd
scas
push
inc
sbb
mov
rcl
mov
fwait
lret
enter
xabort
mov
das
lret
cmp
ror
ds
aam
gs
add
out
dec
xlat
or
or
outsb
filds
lret
jg
cld
mov
outsb
xchg
pop
add
ss
push
add
jge
cmc
rcl
jne
sub
and
les
pop
inc
mov
in
or
dec
stos
push
aam
xor
adc
fsqrt
push
gs
pop
adc
out
add
imul
in
push
jmp
cmp
xbegin
lret
cmp
lret
xor
mov
fdivs
shrb
jge
jl
push
sbb
sbb
lret
mov
xchg
sub
xor
add
mov
mov
rclb
xor
dec
lcall
rcl
mov
lret
sbb
loope
jb
push
add
fdivs
outsb
add
xchg
sub
push
xlat
or
in
rorl
movsl
mov
loop
jne
pop
lret
xchg
cmpb
push
inc
loopne
xor
inc
xchg
mov
movsb
fwait
inc
ret
push
pushf
push
xor
dec
push
lret
shl
js
inc
mov
add
cmp
ja
jmp
stos
mov
add
push
ficompl
insb
popa
dec
mov
pop
dec
lret
ret
sbb
inc
add
lret
in
cmp
lods
mov
es
into
mov
shlb
push
mov
or
fsubrp
lret
cmp
into
cwtl
shl
stos
pop
sub
push
arpl
inc
jnp
ja
lcall
dec
nop
cmp
out
adc
sub
rcr
sub
shlb
add
test
mov
push
iret
push
test
lret
test
fdivl
lret
adc
cwtl
ja
inc
inc
sub
rorb
xchg
in
fistpll
or
or
pop
jbe
movsl
fsubr
imul
push
cli
cld
and
adcb
gs
fcoml
ss
jbe
lret
fisttps
jp
mov
and
jge
fcomps
jno
aaa
jne
add
cmp
test
and
push
loopne
jle
push
stc
arpl
xchg
enter
fwait
movsl
push
int3
lret
mov
fsubp
sbb
addr16
sub
out
ljmp
mov
loopne
out
enter
fwait
lret
jne
popa
pop
daa
or
outsb
lret
lcall
jecxz
mov
mov
mov
cmp
ror
adc
subl
lret
mov
or
inc
aad
and
stos
mov
cmp
cmova
sbb
out
dec
and
in
mov
pop
cmp
jg
sub
cld
inc
syscall
lret
stos
adc
imull
ss
add
cli
fldcw
or
adc
lret
xchg
push
in
stos
or
cwtl
push
popw
mov
dec
pop
add
fidivrl
pop
xchg
sub
fisttps
and
ret
aam
xchg
lret
test
cmp
mov
fsincos
inc
adc
lret
test
cmpsb
xchg
xor
stos
leave
hlt
dec
rolb
fmull
dec
lret
lea
lret
data16
mov
jecxz
or
aas
arpl
test
jb
lret
adc
xor
add
push
lods
repz
dec
mov
jb
lret
inc
sbb
stc
lret
mov
lret
mov
dec
cmpl
popf
xchg
sub
arpl
dec
or
add
aam
add
mov
sbbl
ljmp
mov
imul
loopne
ds
int
mov
ljmp
and
aad
jecxz
lcall
cmp
pop
sbb
lret
mov
inc
lret
bswap
cmpsl
daa
dec
out
push
jp
stc
int
cmp
repz
rcrb
arpl
xor
loope
sbb
loop
mov
lods
call
xlat
jp
gs
insb
and
lock
xchg
arpl
pop
sbb
shlb
add
dec
adc
negb
imul
mov
push
test
mov
jle
lret
jo
add
popa
cmp
into
aad
fs
lret
inc
and
mov
fisttps
mov
inc
lret
cmc
into
and
jno
sbb
cmp
scas
lret
adc
sbb
popf
int3
lods
ljmpw
inc
sbb
std
push
sbb
xchg
rcrb
lods
lret
mov
ljmp
cmp
jbe
or
addr16
subb
or
shll
sub
pop
jb
adc
std
pop
adc
lret
mov
jne
iret
sarb
dec
mov
push
shr
lret
hlt
push
enter
lret
call
das
cmp
xor
add
jge
lret
orb
rorl
loop
mov
into
lret
sub
push
aaa
xchg
ss
lret
or
int3
out
inc
xor
subl
dec
jg
pop
pop
mov
je
stos
lods
push
popf
mov
lret
jb
mov
mov
cli
add
mov
testl
movsl
jbe
jo
je
xchg
dec
test
or
dec
cmp
mov
lret
mov
sbb
pushl
mov
sub
fdivrs
push
lret
stc
jmp
lret
adc
bndldx
cmp
aas
jne
outsb
loope
jp
rcrl
rolb
lret
outsl
adc
scas
sub
mov
mov
out
ret
ss
pop
adc
mov
push
and
int3
out
jge
scas
and
dec
out
xchg
aas
lret
xor
cmc
dec
pop
and
mov
add
pop
fisubl
sub
lret
in
imulb
mov
std
jbe
cmp
aad
mov
lods
cltd
cmpsb
sbb
dec
lret
push
shr
aam
fmul
enter
mov
xor
pusha
push
scas
add
mov
out
roll
repnz
into
mov
mov
mov
shll
lods
stos
xor
fisubl
add
mov
ljmp
into
cmp
lret
out
orl
sbb
xor
dec
lods
icebp
add
adc
cld
dec
cmp
fsubrp
mov
xchg
xchg
mov
jnp
or
push
mov
xlat
mov
ror
pop
dec
mov
stos
repz
nop
into
test
sub
lret
dec
stos
fnstenv
jmp
pop
das
pop
sub
and
xlat
cli
or
mov
lahf
imul
mov
dec
test
vxorps
fisttpl
lret
gs
xchg
in
pop
pop
mov
inc
loope
mov
xchg
pushf
fwait
stc
aas
lret
lret
xchg
xchg
repnz
push
mov
adc
jp
push
jbe
pop
adc
mov
add
adc
fsubrs
xor
cltd
mov
lret
mov
pop
jmp
lret
mov
cmp
inc
loop
in
push
pop
mov
mov
fcmovne
cli
pop
xlat
and
fisubl
testl
jge
push
cmp
and
mov
test
push
adc
mov
sub
out
and
lret
aad
imul
sti
xchg
xchg
and
lret
addl
xor
sbb
jae
loope
and
jno
into
push
fisttps
push
lret
movsb
loop
inc
and
lret
popa
mov
mov
xchg
inc
or
dec
dec
hlt
lret
in
sbb
mov
insl
lret
push
push
int
ret
lret
cmpsb
daa
in
mov
outsb
rolb
sub
pop
or
pop
push
cmp
in
add
ret
ror
xchg
fs
cmpsb
lods
mov
rclb
lcall
out
stos
pop
mov
cli
test
movsb
mov
sub
push
inc
in
jno
cltd
push
lret
test
jmp
push
sbb
xchg
sub
es
out
lret
jae
fidivs
pop
call
outsb
jbe
ljmp
xchg
and
jae
fidivl
aas
insl
test
mov
lret
fwait
push
stos
sti
push
addr16
shll
hlt
mov
xlat
push
or
mov
mov
das
jge
cli
ficoml
lret
cmp
jns
ficompl
lcall
pop
or
addl
std
pop
addr16
mov
int3
sahf
cltd
lods
jb
sub
aas
push
dec
mov
jge
mulb
jno
sbb
cwtl
into
mov
mov
ret
sbb
push
loope
mov
lret
test
xor
xchg
lret
cltd
and
jno
sbbb
rcl
sub
es
add
or
repz
mov
xor
hlt
js
mov
push
adc
fcmovbe
or
sub
xchg
test
adc
sbb
outsl
mov
mov
icebp
jno
lret
lods
test
cli
les
cltd
cld
aad
xor
jg
out
push
or
and
out
pop
mov
sub
lret
in
mov
js
jns
and
sbb
push
stos
jno
in
mov
int3
loopne
dec
mov
lcall
mov
std
dec
dec
jbe
lock
mov
sub
or
jge
insl
xchg
cmpsl
xor
sub
sub
push
sbb
lret
enter
adc
sub
jae
das
jp
push
cli
clc
and
cwtd
jne
jno
mov
lret
xchg
es
add
add
cmc
pushf
call
fldcw
mov
xchg
mov
pop
sarl
sbb
popf
icebp
jns
adc
lret
mov
cmp
test
mov
pop
or
xlat
adc
push
mov
or
sub
das
into
shr
mov
lret
jo
enter
mov
sub
test
fcomps
sti
lret
cwtl
es
push
inc
lret
fidivrl
mov
sub
aas
lret
arpl
ss
out
jbe
xor
jne
fstps
lock
fdiv
stos
mov
xchg
push
xlat
or
or
push
and
lret
jns
stos
cltd
call
shrb
mov
push
add
test
mov
ror
enter
aas
stos
inc
and
jle
into
push
iret
bswap
push
inc
pop
cmc
sbb
mov
lret
loop
pop
clc
and
sarb
popa
gs
lret
mov
movsl
lret
sub
add
imul
mov
aam
lods
push
add
inc
ja
test
mov
push
imull
add
mov
or
in
rcrb
adc
icebp
ret
std
push
js
lret
mov
pop
dec
in
cmp
fidivs
push
cld
into
lret
in
sarl
mov
aad
inc
lds
lret
inc
sbb
fidivrl
mov
out
test
cli
shlb
sub
dec
xchg
lret
xor
dec
cmpl
lret
in
cmp
daa
jnp
mov
sbb
pop
out
jo
pop
mov
in
scas
cltd
jge
shlb
xor
fnstenv
stc
daa
movsb
ret
xor
lret
lahf
add
xchg
fmulp
mov
es
add
xor
jl
push
mov
push
or
dec
cmpsl
and
mov
inc
into
out
scas
cmc
lret
jns
push
stos
fstpl
pusha
test
daa
cmp
mov
vpsrlq
ror
jae
mov
movsl
es
push
in
bswap
cmpsb
scas
popf
bound
clc
and
jbe
test
inc
fdivs
dec
push
movsl
push
xor
mov
mov
or
popl
cmp
fnstenv
cmc
iret
jmp
popf
imul
pop
jg
mov
lret
jecxz
leave
out
jle
lret
stos
outsb
adc
and
fmuls
enter
xor
clc
and
movl
mov
jge
lahf
aam
jo
lretw
xchg
popf
int
lret
push
add
cld
lret
lahf
pop
shl
mov
lret
adc
push
jne
sti
lret
loop
std
imul
mov
ljmp
addr16
lret
sbb
or
js
lret
mov
jge
inc
add
popf
jmp
loop
or
mov
lret
mov
adc
das
out
ljmp
push
nop
push
cltd
test
das
je
xchg
ljmp
fs
push
sbb
stos
cld
test
insb
jno
lea
mov
loope
and
sbb
xchg
pop
rcl
push
insl
lret
test
fs
xor
popa
loop
push
dec
int3
push
cmp
test
ss
ret
lret
mov
xor
xchg
mov
sarl
insl
lret
push
push
sub
icebp
pop
adc
mov
hlt
sub
lret
push
pop
dec
mov
jmp
mov
pop
jmp
and
xchg
dec
lcall
minps
push
and
cmp
add
adc
jp
ficoml
mov
addr16
movsl
fimull
fsubr
xchg
dec
ljmp
rcl
out
cmp
mov
sahf
mov
rcrb
sbb
lret
inc
aad
lret
daa
push
sbb
lret
xor
stc
orl
popf
pop
inc
xor
roll
lret
insl
or
sub
xor
dec
xchg
clc
lret
mov
flds
lret
out
dec
xor
testl
addr16
inc
test
aaa
adc
jbe
scas
cmpsl
xchg
push
inc
jle
xor
adc
lds
rcll
andw
cmp
inc
movsl
fcmovbe
je
cltd
ds
dec
decl
fildll
loopne
loopne
push
int3
mov
ror
cli
pop
mov
add
inc
lret
jmp
push
lret
out
cmp
loope
outsl
enter
or
push
xchg
fwait
pusha
repz
out
icebp
fcmovu
lret
or
sbb
lret
cmpsb
clc
cmp
movl
lret
shr
mov
repnz
cs
aaa
stos
scas
into
inc
xchg
push
lahf
es
or
out
dec
jge
inc
pop
shll
insl
sti
rcl
pop
and
push
sarb
mov
cmp
mov
nop
shrl
mov
add
or
mov
arpl
outsb
dec
loope
lret
jne
mov
xor
cmp
xlat
xor
xchg
fcmovu
add
jns
int
inc
jge
adc
repz
lret
imul
test
mov
mov
pop
rclb
stc
pop
popf
and
aam
ficoml
fwait
clc
lret
ret
push
jae
sbb
add
aad
xor
cwtl
adc
mov
mov
and
mov
sahf
lret
lahf
xchg
mov
arpl
mov
out
lret
test
test
jae
lret
jne
into
sahf
lret
div
adc
loop
push
mov
ds
jmp
inc
xchg
adc
fstl
mov
mov
jb
repnz
adc
imul
iret
fisubrl
cmp
push
push
stos
xchg
push
inc
xlat
int3
ss
ja
or
int3
mov
sbb
xchg
dec
xchg
lret
fsubrs
inc
cmp
cmp
dec
enter
call
lret
loop
lahf
ljmp
pop
mov
pop
jle
leave
cmp
aam
mov
fdivrs
cltd
in
pop
lret
dec
sub
outsl
out
mov
fcompl
pop
xor
xchg
mov
movl
cmpsb
adc
dec
pusha
rcrl
cmp
mov
lea
xlat
leave
and
sahf
lret
push
sbb
mov
fwait
add
sarl
sti
lret
push
mov
mov
lods
lret
lahf
and
outsb
fcmovu
mov
mov
adc
push
fbld
mov
push
lahf
cltd
rcrb
xchg
add
xorb
push
sbb
mov
xor
test
mov
or
sti
adc
lock
aaa
cmc
fadds
sbb
xchg
push
loope
push
push
movsb
aas
inc
xlat
mov
cmp
out
add
rcrl
repnz
lret
dec
cmpsl
push
inc
cmp
in
add
ljmp
rorb
lods
lret
and
scas
push
cmpsb
inc
and
xchg
stos
out
enter
jb
outsl
int
stos
xor
subb
sahf
pushf
cli
dec
outsb
out
xlat
arpl
and
push
jp
lret
mov
inc
lret
or
out
rcrl
rolb
aaa
mov
fldcw
clc
scas
sbb
stos
add
mov
add
or
sub
jns
add
push
mov
cmp
push
cltd
lock
cltd
je
les
repnz
sbb
pop
jnp
ret
test
jb
lret
pop
stos
andb
push
aad
xor
jo
scas
flds
cmp
push
ret
jmp
mov
js
or
mov
jmp
inc
hlt
jns
in
ljmp
into
jg
and
pushf
add
jns
dec
outsl
cli
fwait
pop
xchg
movsl
cwtl
push
mov
aaa
lcall
push
psrld
fldt
ljmp
testb
inc
jno
push
mov
adc
pop
mov
adc
mov
stos
sub
mov
mov
int
pop
push
pop
adc
lret
dec
adc
mov
divl
lret
adc
sbb
cmpsb
add
mov
je
push
ljmp
lcall
adc
cmp
pop
cli
mov
std
push
xchg
cmp
or
insb
or
int
mov
lret
lret
xchg
lcall
sub
in
in
and
sub
sbb
loop
mov
or
pop
push
out
int3
test
cmp
mov
enter
imul
test
pop
mov
xchg
mov
scas
int3
mov
mov
test
add
lret
inc
stos
fcoms
ljmp
pusha
sarb
arpl
and
out
das
and
in
subl
fidivrs
mov
inc
push
and
jo
pop
sub
sub
push
mov
test
ret
inc
and
int
sti
lret
jbe
imul
lret
xchg
pop
insb
test
loope
or
inc
jnp
sahf
lea
push
enter
ror
lret
add
inc
jne
gs
mov
loop
mov
movsl
nop
in
lods
lret
inc
xor
push
add
in
xor
ret
mov
cmp
lret
lea
jp
and
or
loope
or
lret
std
dec
jmp
dec
int
out
inc
ret
insl
xor
push
bnd
in
adc
aas
orl
sbb
xchg
cmp
cld
mov
lret
push
test
popf
and
sahf
or
iret
fiaddl
mov
in
rcrl
dec
lret
sbbb
fcompl
pop
cmpsl
into
xlat
push
loop
lret
adc
xchg
xor
mov
int3
or
inc
and
mov
nop
adc
aaa
aas
lret
push
or
adc
cmp
lret
call
xor
cli
sub
fstps
loope
and
jbe
jns
sahf
push
dec
fmul
sbb
or
test
pop
xor
dec
sti
pushf
ljmp
inc
rcrb
cmpsl
xchg
shlb
fisubrl
inc
xchg
mov
in
lret
pop
ja
stos
arpl
lret
sub
imul
and
mov
movsb
aad
xchg
fdivl
in
outsl
lret
cmp
lret
dec
jns
clc
inc
inc
fsub
push
and
sahf
sarb
xchg
popa
lret
leave
push
bound
mov
hlt
or
outsl
fwait
loopne
adc
rcrb
and
mov
nop
push
push
mov
decl
cmp
lret
test
aaa
mov
ror
and
sbb
repnz
mov
adc
sub
mov
cmp
mov
cli
pop
jle
loop
arpl
in
pop
mov
into
cmpsb
xchg
xor
add
bound
dec
and
aam
movsl
scas
stos
inc
pop
sbb
and
aam
jo
adc
data16
cmp
adc
xchg
sbbb
icebp
insb
pusha
pop
and
int
or
movsb
loopne
dec
push
xchg
nop
lret
icebp
mov
lret
push
jnp
push
scas
je
ds
xchg
test
test
sub
lret
into
insl
adc
jecxz
imul
and
fisttps
mov
fnstcw
add
jecxz
jns
lret
test
pop
fistpll
and
sti
test
enter
inc
lock
add
pop
cmp
int3
scas
fs
pop
cmp
push
clc
push
int
add
lret
inc
mov
mov
mov
push
aas
lret
sbb
dec
push
and
into
add
sahf
int
push
in
gs
and
loopne
ss
dec
xlat
jno
mov
jnp
xor
lret
sub
lret
pop
xchg
push
inc
mov
clc
dec
adc
pop
shlb
lret
arpl
lods
loop
lret
xor
mov
or
stos
imul
mov
xchg
lea
lret
movsb
dec
pop
cmpsb
dec
int3
lret
cmc
fdivl
inc
or
mov
and
repz
mov
or
popf
lret
xchg
divb
jg
out
idivl
lret
mov
out
mov
rcrb
sbb
sbb
popa
pusha
lret
adc
lds
mov
mov
push
bnd
add
or
gs
jmp
cli
ljmp
sti
jle
lret
jge
jg
ror
mov
add
lock
or
test
mov
jge
inc
xchg
mov
aas
or
mov
cmp
es
shlb
addr16
sbb
mulb
cmp
and
jecxz
pop
ljmp
lret
lcall
add
jne
and
insl
flds
mov
enter
mov
rcr
lret
sahf
xor
jg
fwait
jbe
sbb
sbb
inc
mov
insb
pushf
popa
inc
lret
in
sub
pop
loop
mov
test
cmp
sub
xor
ret
adc
into
lock
adc
mov
cmc
jmp
rcl
xor
inc
bound
lret
add
insl
dec
pop
dec
out
or
stos
imul
mov
xor
pop
rep
arpl
popf
mov
popa
lock
lahf
movsl
loopne
add
imul
and
data16
xor
sbb
ds
fs
cltd
mov
enter
push
mov
mov
int
fcmovne
cmpsl
sbb
shrl
dec
pop
push
outsl
int
ret
lret
pop
fs
dec
dec
xchg
clc
cli
nop
pop
xchg
adc
pop
inc
mov
fs
cld
mov
or
fxch
cmp
mov
cmp
lret
and
sub
in
test
sub
inc
ljmp
jne
sub
aaa
loopne
mov
aad
push
mov
movsl
sub
or
add
fcoms
mov
or
mov
lret
pop
shll
ljmp
and
je
xchg
xor
pop
fisubrl
jl
cwtl
insl
add
loopne
cmp
out
cmp
scas
insb
addr16
dec
rclb
mov
jmp
movsl
lret
nop
jnp
dec
xor
xor
cmp
testl
ret
ljmp
test
cmp
sbb
call
push
mov
inc
or
cwtl
cmp
cmp
sbb
xchg
loop
dec
lds
lret
and
cmp
pop
pushf
arpl
iret
outsb
pop
leave
sbb
fstps
mov
inc
pushf
inc
or
adc
sbbl
aad
mov
lea
xlat
push
pop
xchg
test
lret
sbb
pmuludq
stc
inc
lret
xchg
push
xchg
sub
shl
inc
aad
lock
mov
pop
fmull
int3
push
and
pop
je
lods
lds
stos
mov
add
shlb
fldenv
or
shlb
out
sbb
pushf
in
and
int
ret
ss
enter
push
mov
jge
lret
aam
in
dec
pop
or
addb
cmc
icebp
int3
pop
sub
pop
lret
pusha
in
jge
jmp
push
cmp
cmpsb
xor
or
shlb
pop
xor
pusha
ret
jo
inc
pop
lret
inc
jg
jp
stos
repz
sbb
stc
add
movsl
stos
daa
int3
adc
mov
lahf
jl
jbe
loope
lret
aam
lods
adc
outsb
lret
xor
packsswb
cmp
mov
mov
pop
mov
scas
lret
ljmp
push
pop
fwait
mov
xor
das
xor
dec
add
push
dec
lret
fistpl
mov
in
and
cmp
lret
push
lret
rorl
sti
data16
or
jmp
div
cli
scas
xor
add
mov
pop
test
cli
or
in
pop
xor
add
pop
add
cmpsb
lret
dec
and
cmp
or
inc
jmp
jae
mov
or
push
movsb
lret
and
ror
mov
outsb
imul
lret
xor
arpl
scas
int3
popa
cmovo
sub
arpl
stc
rcrb
popf
clc
push
sub
lret
jne
ficompl
and
ret
lret
inc
stc
lret
scas
mov
lret
dec
cmp
lahf
pop
sub
push
mov
shr
lret
pop
test
adc
sub
mov
or
insl
pop
ds
and
jb
imul
cmp
adc
xchg
popa
sbb
loopne
and
mov
mov
xchg
adc
pop
pop
cmp
adc
cli
ss
movb
fcoml
stos
adc
fst
and
pop
popa
jno
sub
xchg
sub
rcrl
fucom
add
lret
int
push
xor
in
icebp
mov
aad
pop
mov
aas
xor
bound
xchg
pop
inc
xchg
in
sub
sub
inc
xor
lret
xchg
rcl
loope
or
dec
or
fwait
ror
sub
scas
jae
pusha
dec
xor
mov
cli
sub
push
sar
or
sbb
jae
push
mov
sti
sbb
hlt
mov
lcall
rorb
mov
fdivrs
mov
mov
aaa
xor
lahf
lret
dec
fbstp
lretw
rolb
inc
and
push
sub
mov
cmp
sbb
aas
sub
cmp
add
shrl
lret
push
daa
pop
push
jae
mov
in
lret
xor
and
ljmp
ror
sub
cwtl
add
or
pop
pop
adc
aaa
inc
mov
hlt
popa
pop
cmp
incb
lret
movsl
mov
jnp
lahf
jle
jbe
or
lret
xor
cmp
pop
xor
mov
nop
mov
xchg
rcl
add
mov
and
fsubr
inc
inc
gs
push
sarb
movsl
int3
fadds
into
stc
jmp
add
repz
lods
mov
fsub
sbb
fmul
call
out
mov
pusha
mov
shlb
into
stos
mov
jo
fbld
or
aam
lret
notl
sbb
icebp
lret
mov
shrb
int3
lret
aaa
inc
cmpsl
cmc
mov
rorl
adc
jmp
aad
clc
popa
stos
pop
jecxz
pop
inc
cmp
adc
out
lods
pop
call
cmpsb
lret
jl
int
add
cmp
outsb
jb
aad
ficoml
jo
mov
jae
mov
mov
loop
lret
test
ret
push
mov
dec
mov
or
mov
cmp
sahf
push
lret
or
fmull
fwait
jl
pusha
rorb
add
cmp
dec
in
lret
push
mov
lret
xchg
notl
sub
les
aas
pop
fmul
popf
lods
orb
insb
stos
cli
xchg
int3
sbb
loopne
jmp
cld
lret
mov
push
fs
lret
sub
jmp
das
iret
clc
or
cmpsb
xor
dec
lret
pop
rcrl
and
shrl
mov
inc
add
mov
jne
mov
clc
lret
jecxz
repz
fs
jno
cmp
add
mov
inc
fsubs
lea
push
xchg
lods
stos
push
rclb
pop
xor
push
pop
xor
add
sbb
test
lea
xorl
addr16
sub
sti
rol
clc
mov
jge
mov
xor
fs
lret
aam
push
push
stos
das
lea
lret
mov
lods
sbb
leave
lret
and
iret
xorb
cmp
mov
push
mov
loope
push
cmp
inc
mov
stc
adc
sbb
rdpmc
and
lods
pop
pop
sub
push
testb
orl
push
sub
mov
je
mov
lods
ficomps
incl
jae
jecxz
hlt
lret
in
aad
lea
cmp
lret
sbb
sbb
pusha
lret
call
cmp
mov
imul
andb
stos
enter
sub
pop
jno
push
fcmovnu
cli
xchg
imul
pop
inc
push
and
popf
mov
mov
xor
mov
not
mov
aad
cli
in
push
sahf
xor
and
rclb
decb
fbld
xor
int
dec
in
insl
mov
cmp
lock
stc
pop
mov
inc
inc
leave
cltd
xor
mov
test
dec
es
repz
cltd
push
lea
dec
and
mov
test
sarb
adc
into
lahf
cltd
int3
mov
dec
stos
mov
rclb
in
lret
dec
movq
push
sbb
dec
mov
lret
or
mov
sub
dec
sub
pop
xchg
outsb
lret
in
popa
ret
cmp
jmp
pop
call
mov
pop
add
stc
or
in
pop
into
xchg
inc
push
jmp
or
dec
pop
enter
push
loop
adc
add
daa
je
sbb
push
lret
inc
xchg
mov
cmp
rcrl
lret
das
rclb
lods
push
cld
sub
or
and
pop
push
mov
out
push
in
push
cmp
and
sub
daa
nop
lret
imul
mov
shl
xchg
or
lret
cmp
mov
das
cmp
xchg
es
out
mov
lret
fxch
xlat
insl
jbe
lret
out
aas
ja
test
cmpsl
dec
xor
push
data16
insl
cli
loope
inc
aad
mov
and
lret
jecxz
out
cmc
ss
lcall
lret
cmp
sbb
nop
inc
pop
fs
adc
lret
mov
sbb
out
sub
pop
add
stos
arpl
dec
test
loopne
xchg
scas
lret
jbe
loop
jne
lret
pop
scas
push
addr16
in
adc
xchg
jns
lcall
scas
andl
push
pop
test
inc
cmc
push
int
lret
jns
adc
sarl
mov
lret
aad
sbb
subb
arpl
in
test
mov
sahf
es
stos
incl
cmc
sbb
enter
lea
inc
xchg
nop
fcmove
testl
out
mov
inc
push
jo
subb
and
jp
sbb
enter
xchg
test
dec
cmp
mov
mov
cld
mov
in
pop
or
add
out
xor
add
scas
lea
lret
enter
ror
stos
mov
jne
add
jae
imul
jle
mov
pop
sti
je
hlt
jecxz
enter
pop
fcoml
ror
cmp
pop
or
pop
mov
or
outsl
adc
or
mov
mov
popf
movsl
and
sub
dec
call
mov
insl
xchg
aaa
mov
popf
xor
clc
pop
cli
dec
mov
rclb
popa
cmp
mov
dec
loopne
cltd
iret
cmp
inc
sbb
add
cli
mov
add
cli
cmp
inc
mov
push
lea
cmpsl
loop
mov
dec
mov
pop
mov
popf
je
cli
outsb
lret
xchg
push
xchg
ficompl
xchg
call
mov
mov
lahf
pop
test
jp
xchg
push
mov
lods
fnstenv
xor
dec
and
stos
push
stos
lret
movsl
ret
push
inc
mov
add
push
xlat
cmp
lret
xchg
mov
and
cmp
lret
lahf
mov
lret
bound
push
pop
lcall
mov
or
dec
adc
lea
jg
xor
mov
fadds
lret
add
jg
xchg
adc
mov
lret
inc
shll
sbb
fldt
cli
clc
sbb
dec
lret
shl
ja
lds
mov
repz
fwait
addr16
lret
rorb
dec
lret
mov
sahf
lret
out
cmp
stos
lret
daa
mov
push
fmulp
push
dec
dec
add
subb
dec
inc
mov
sbb
data16
in
xorl
or
subl
mov
lret
fdivl
jl
daa
lret
pop
data16
lret
dec
stos
and
mov
cmp
cmc
pop
jecxz
add
xor
in
sbb
outsb
and
cmp
jmp
mov
mov
fs
movsb
mov
jp
pop
aad
fxam
pop
pushf
lret
inc
lods
fadds
dec
lret
sbb
jle
dec
lret
cwtl
dec
mov
mov
lret
dec
push
cld
sbb
repnz
in
gs
mov
cmpsb
fisubrl
leave
jno
pop
movsb
lret
mov
daa
xor
inc
sbb
xor
mov
and
cli
sar
lock
rcrb
push
lret
adc
fimull
sbb
int3
sbb
mov
ror
add
mov
clc
sbbb
lods
ljmp
lea
jg
je
adc
sbb
dec
sti
add
lret
mov
test
cmpl
mov
lret
or
lret
xor
pop
pop
lret
cmp
lret
lods
pusha
sbb
pop
mov
add
movsl
clc
push
sbb
aas
lret
std
out
nop
pop
jmp
js
mov
adc
push
insb
dec
mov
fwait
popa
nop
loop
pop
jp
xor
iret
dec
scas
mov
int3
mov
cli
push
cmc
jae
push
xor
adc
sbb
sbb
ljmp
inc
pop
lret
pop
xor
mov
movsb
mov
adc
in
mov
and
mov
leave
cltd
pusha
dec
xchg
mov
lret
leave
add
lret
insb
out
push
into
mov
mov
xchg
jle
imul
lret
and
lret
xlat
inc
xchg
or
mov
fsub
cmpsb
mov
add
mov
into
mov
enter
aad
out
sub
outsb
js
aad
jg
push
lret
rcr
jge
push
ja
outsb
pop
inc
arpl
dec
pusha
bound
dec
clc
add
ficompl
fsubrs
cmp
sbb
or
and
subl
push
push
push
fwait
or
xchg
in
push
jb
shlb
shll
mov
mov
adc
mov
std
nop
pop
call
pop
int3
mov
imul
xor
inc
shrl
enter
mov
movsl
add
ret
aad
dec
push
pop
pop
in
lock
xlat
stc
vpshufhw
es
cld
pop
mov
mov
sti
int3
lret
cmpl
xor
outsb
dec
cwtl
lret
mov
jnp
sbb
lret
ret
push
std
lret
sub
or
mov
lea
and
test
mov
cs
sbb
fidivs
xchg
lret
sbb
lret
cld
fisttpl
mov
les
out
jbe
ror
repz
sahf
shrl
xor
inc
in
lret
mov
ss
jmp
and
insl
cld
fmulp
popf
dec
icebp
mov
push
sbb
lret
aam
mov
and
fadds
lret
add
popf
lea
lret
cwtl
and
add
cmp
sbbw
cmpsb
into
repnz
outsb
sar
pop
dec
cli
push
test
in
jg
mov
mov
xchg
out
das
jl
mov
mov
inc
icebp
mov
test
push
or
mov
adc
gs
fidivl
ret
clc
ss
cmc
add
pushf
movsl
nop
sbb
imul
pop
popa
mov
stos
inc
xchg
cli
jns
aam
xor
sbb
add
lds
dec
xchg
lret
mov
je
xor
shlb
mov
loope
lret
mov
divl
lods
fisubrl
pusha
adc
mov
dec
xlat
stos
add
cld
sbb
movsb
pop
and
cmp
adc
push
mov
testb
xchg
or
in
pusha
xchg
mov
fnstsw
cmp
jge
sub
sub
mov
push
lret
cli
dec
lds
jb
cwtl
sub
inc
int3
jmp
push
mov
lret
lret
fwait
hlt
push
cmpl
rclb
push
and
test
gs
popf
stos
add
fdiv
mov
inc
or
out
std
into
jl
dec
mov
push
adc
pushf
mov
ror
dec
push
rcr
lret
rol
adc
xor
pop
sbb
jae
jns
or
and
xchg
nop
lret
rclb
cmp
addr16
pop
clc
rclb
sbb
mov
jns
mov
jl
pop
mov
cmpsb
push
jecxz
stc
daa
mov
arpl
in
inc
popf
aad
test
lret
cwtl
fsts
cmp
and
in
inc
scas
fmull
cmp
rorb
ja
jne
xchg
jmp
lret
mov
adc
test
push
jns
loop
xchg
cmp
outsl
lret
push
xorl
pop
aam
das
lret
add
loope
lret
outsl
scas
lahf
in
push
ljmp
sub
xchg
nop
push
repz
cltd
das
stos
sbb
push
sahf
inc
pop
mov
ret
push
push
jb
mov
lret
cmp
xchg
jne
sbb
insl
psadbw
mov
and
jg
xorb
xchg
cmp
mov
outsb
out
or
dec
push
in
pop
push
lock
out
pop
movsb
dec
ljmp
fsubs
cltd
lret
sub
inc
outsl
dec
lret
addl
jg
dec
adc
fisubl
mov
mov
ljmp
mov
lea
pusha
rorb
cmc
push
addr16
push
repnz
adc
lock
lods
sub
std
aaa
cli
adc
sbb
ljmp
cmp
stc
ss
push
loop
test
xchg
lret
cmp
fs
mov
add
and
test
fdivrp
mov
sub
divl
mov
test
pop
lret
jns
cwtl
aas
adc
out
loop
movsl
pop
rclb
clc
xor
lret
in
push
sahf
push
leave
fcomps
mov
sub
adc
mov
lret
dec
and
mov
and
inc
fidivrs
orb
loopne
pop
mov
insl
or
push
push
test
les
lret
aam
lds
mov
orb
pop
adc
es
idiv
hlt
cwtl
and
sahf
add
lret
jns
mov
test
mov
pop
mov
lods
push
pop
repnz
mov
or
jmp
xor
rcrl
cltd
mov
inc
stos
sbb
int3
sahf
lahf
add
cmpsb
shlb
lret
test
das
lret
jmp
aas
lods
add
add
xchg
cmp
fs
test
notb
stc
push
xchg
popf
mov
lret
mov
dec
adc
js
pop
dec
sbb
mov
mov
and
out
lds
test
inc
pop
mov
push
test
into
push
inc
jae
adc
mov
mov
mov
cmpb
inc
scas
sahf
lret
pop
movsl
add
push
lret
insl
pusha
and
mov
popf
sub
cmp
sbb
sub
xor
jb
pop
dec
je
mov
and
rclb
jmp
pop
fbstp
and
test
mov
jno
and
adc
lods
sub
push
or
es
ror
or
ror
repnz
inc
xchg
push
nop
pop
or
inc
xchg
rorb
outsb
popa
mov
cltd
imul
dec
loopne
daa
mov
icebp
dec
lret
lods
nop
xlat
popf
mov
inc
rol
popf
mov
lret
push
es
testb
popf
movsl
ds
lret
ss
mov
mov
pop
dec
je
cmpsb
outsb
js
cli
mov
jg
mov
sub
dec
ss
jl
pop
mov
push
lret
popf
adc
movsb
xor
mov
sub
push
lds
adc
jbe
xchg
push
lret
adc
mov
cli
cmp
or
cld
mov
jbe
fimull
add
pop
push
fwait
lret
mov
fdivrl
leave
sahf
jbe
fldlg2
mov
std
cmpsb
sub
jle
lret
repz
loopne
push
fisubl
or
sbb
lret
push
scas
mov
inc
leave
repnz
test
out
add
fidivrl
aam
pop
mov
pusha
rcrl
loope
sub
sub
sub
int
mov
lret
outsb
mov
push
popf
jns
lret
pop
dec
inc
call
cs
pop
loopne
and
cmp
push
or
into
xchg
sbb
int
push
out
xchg
lret
int3
dec
into
adc
repz
cwtl
pop
xor
cmc
cmp
stc
jecxz
leave
mov
popf
inc
repnz
repz
lret
mov
cli
pop
lret
dec
jecxz
inc
scas
or
out
mov
mov
add
cltd
jg
scas
icebp
lret
xchg
mov
xor
dec
lret
popf
loop
cmp
xor
sbb
in
inc
push
mov
or
sbb
ds
xlat
xchg
dec
or
sbb
lret
enter
mov
aam
jmp
pusha
repnz
add
shll
lret
popf
inc
xor
ja
fidivl
or
dec
sub
out
fdivrp
aaa
shlb
push
add
cmp
insl
rcrb
addr16
movsb
push
repnz
inc
lods
cmpsl
cmpb
and
in
out
mov
lret
pop
jo
cmpsl
shrb
jl
mov
lret
aas
jns
or
ror
loop
mov
aaa
lret
ljmp
mov
add
lret
mov
adc
test
add
lret
inc
push
jne
push
lret
std
popl
lods
adc
xchg
neg
in
int3
xchg
or
mov
aas
jb
lret
rol
xor
sbb
jbe
shlb
into
mov
lods
lret
add
xchg
adc
scas
loopne
incb
inc
mov
into
xchg
aam
lcall
xchg
push
sbb
cmp
loopne
lods
push
data16
scas
ficomps
cmp
mov
mov
es
mov
jg
test
pop
arpl
mov
out
or
mov
rcrl
imul
mov
and
xor
cli
shlb
add
add
add
xlat
out
fdivp
ret
jp
mov
fstl
cmp
lret
and
mov
sub
cli
push
mov
jp
xor
and
sbb
daa
js
lret
mov
pop
lret
adc
dec
lret
jne
mov
and
add
sbb
mov
inc
lret
pop
lcall
imul
jno
sub
push
mov
ficompl
bound
shll
leave
fs
gs
std
pop
cmp
cltd
rcrb
lea
dec
dec
xlat
aad
add
cmpsl
mov
mov
aam
pop
jae
addb
fwait
jp
out
fstps
mov
add
cs
lret
xor
popf
scas
xor
add
sbb
mov
lret
dec
loope
nop
out
lods
mov
xchg
xchg
inc
mov
in
jns
stos
sbb
lret
push
cmp
add
pop
push
or
push
cmp
fisttps
es
mov
in
xchg
push
dec
add
sahf
and
pop
cwtl
cmp
cmp
or
aad
mov
lret
mov
adc
jl
lret
mov
adc
or
mov
add
jns
ror
or
inc
push
jno
jl
insb
dec
hlt
pop
lret
jne
js
lret
arpl
dec
or
lret
idivb
stos
add
cmp
sbb
aaa
cmpsl
sarb
fcmove
out
dec
cmpsb
sub
jbe
cmpl
aaa
adc
addr16
xor
stc
inc
mov
call
xchg
iret
jmp
mov
mov
cld
lret
sub
cli
inc
ljmp
dec
int
mov
test
fstps
cli
shll
enter
lret
adc
cli
shl
cmp
pmuludq
lret
popa
jno
sbb
jo
cwtl
cld
sub
sbb
sbb
out
cmpsb
leave
subb
ss
lods
xchg
mov
adc
mov
cmp
pop
lea
stos
in
movsl
or
sbb
lret
fsubs
cmp
add
in
shlb
inc
sub
mov
mov
or
call
push
mov
sbb
cmp
or
dec
and
stos
xchg
push
jmp
jl
dec
mov
push
and
mov
dec
push
gs
loopne
cmp
adc
jmp
sub
xor
adc
mov
sbb
idivl
lret
xchg
js
xchg
ficompl
ljmp
and
test
aad
stos
lret
xchg
std
or
pop
jecxz
mov
push
mov
sub
enter
loope
fdivrs
xor
mov
jb
sbb
cmp
inc
push
data16
add
mov
inc
xchg
sbbb
mov
test
adc
scas
ljmp
fcoms
jmp
mov
xchg
push
cmp
mov
gs
filds
lea
rcrl
cmp
sbb
ss
leave
rorb
lret
xor
ja
aaa
fisubrl
sbb
cmp
inc
mov
outsb
inc
mov
fmul
pop
lret
cmp
jne
add
aas
adc
pop
mov
ficompl
ror
push
cmp
rolb
movsb
fmull
test
and
mov
test
outsb
fcomps
pop
mov
add
ret
pusha
lret
add
cmp
addl
jbe
push
fimull
cmp
bound
mov
lret
movsb
es
cmp
sub
sub
imul
lcall
cmpsl
mov
lods
jle
fmul
cwtl
xchg
stos
lret
jae
push
add
sbb
lret
roll
sub
imul
div
dec
iret
lret
and
jle
dec
pop
and
and
push
rcll
lret
add
mov
push
pop
aam
dec
inc
iret
adc
ret
lret
test
js
ljmp
fidivrs
pop
test
pop
jmp
nop
out
push
pop
rclb
cli
inc
pop
push
or
fisubrl
mov
imul
or
popa
aam
inc
push
sbb
jae
movsl
xchg
cmp
xlat
sahf
int
arpl
push
nop
lock
cmc
sub
cli
or
xchg
test
fwait
mov
int3
lret
or
adc
add
xchg
jg
mov
gs
xchg
cmpsb
arpl
push
lret
and
aaa
cmp
sbb
ja
popa
data16
lret
jge
lret
mov
sbb
lcall
jno
rcl
pop
aad
or
jp
jb
sub
cmpsl
lret
test
pop
cmp
sbb
push
xlat
mov
out
andl
scas
scas
shrb
cmp
lods
gs
pop
lret
lcall
inc
ret
popf
cmp
pop
mov
std
mov
xor
lret
icebp
and
rol
int
pop
hlt
lcall
lea
ret
pop
rolb
movsl
xor
or
push
cmp
jbe
push
fisubrl
pop
push
int3
fucomip
pop
pop
notb
int
rorb
sarl
cmc
mov
push
test
adc
cwtl
dec
mov
rcl
inc
arpl
ss
lret
cmp
repz
iret
rcrb
clc
stos
push
lret
and
pop
pushf
fdivrs
in
push
jg
rolb
ljmp
leave
lret
aas
push
xor
es
dec
or
rcl
jl
dec
fistpl
sub
push
testl
jmp
adc
cli
jl
xchg
inc
push
sbb
repz
push
lods
scas
icebp
aam
sub
inc
leave
cmp
mov
jnp
jp
lret
cmp
ret
lret
xchg
ljmp
imul
repz
push
cmp
jnp
push
or
stc
xchg
mov
sbb
lret
shll
cltd
mov
inc
cmpsl
lret
aaa
icebp
xchg
mov
out
inc
lret
sbb
cmp
pusha
push
loope
movsb
jne
hlt
pop
add
lods
sbb
or
stos
loop
dec
out
and
mov
movsb
cwtl
lret
repz
lods
lahf
insl
cli
lret
imul
mov
sub
xor
rol
inc
mov
lret
fimuls
lret
leave
insb
push
push
mov
movsl
int
andl
stos
rolb
scas
or
cltd
add
pop
fs
jg
jl
fldlg2
inc
mov
out
out
or
fisubl
ss
or
or
lret
cltd
push
fiadds
mov
ficoml
je
shll
push
sub
mov
int3
inc
sub
cwtl
mov
insl
hlt
xchg
pop
or
outsb
mov
js
loop
lret
pop
adc
pop
push
mov
test
cld
rolb
jge
int
sarb
and
data16
xor
add
lret
bnd
test
dec
mov
xlat
push
push
cmp
jnp
push
addr16
pop
int
in
insb
mov
jno
mov
lret
movsb
jmp
dec
mov
or
cltd
adc
and
ret
mov
push
mov
pop
notb
xchg
mov
jne
mov
sti
adc
lret
sub
inc
push
lret
adc
add
pop
lret
xchg
sahf
sbb
mov
cmp
aam
push
push
jl
scas
xchg
pop
mov
sub
repz
adc
fucomp
lods
jp
popa
inc
lret
sarb
cmc
push
subl
adcb
jge,pn
mov
pop
out
imul
jae
test
jns
fnstenv
popf
fs
xlat
push
pop
shll
call
lahf
movsl
scas
inc
lret
or
repz
out
js
pop
sbb
inc
dec
test
push
mov
fnstsw
ret
jecxz
mov
cld
fsts
int3
lret
sbb
inc
lret
outsl
add
lret
cmp
dec
push
cmp
mulb
in
rcll
mov
pop
lret
add
lods
cmp
pop
sarb
mov
cmpsl
push
lock
lret
sbb
cmp
inc
xchg
xor
sbb
insl
das
call
bound
in
aam
cmp
lea
dec
fstl
cmp
jno
push
cli
sti
inc
mov
cmp
cmp
sub
leave
cmpsl
lcall
and
pop
sub
cmp
aad
jne
std
inc
xchg
pop
outsb
xchg
pop
stos
sbb
cmp
pop
rcr
cli
lret
fnsave
fisubrl
movsl
cmp
popf
jge
shl
mov
lock
int3
int
ja
push
sbb
fisubl
cmpl
imul
enter
into
inc
and
fmul
sbb
test
fs
in
lret
ret
je
mov
push
mov
adc
rsqrtps
mov
sub
xlat
pop
lret
in
out
loopne
dec
mov
das
sahf
and
sti
jp
in
call
adc
lret
lds
or
xor
por
cltd
jp
adc
lods
subb
aaa
ror
shll
mov
ret
fidivrl
jns
jl
sbb
push
aad
mov
notb
jmp
xchg
lret
xor
cmp
into
daa
out
or
mov
and
jmp
rcrl
aad
pusha
pop
sbb
lret
and
dec
lcall
inc
jle
push
push
lret
or
imul
arpl
sub
stos
or
lret
mov
data16
pop
sub
aaa
cmp
cmp
negb
push
cmp
test
dec
adc
fldt
roll
pop
mov
jecxz
aas
mov
out
mov
scas
inc
inc
mov
out
lret
add
mov
cld
jb
mov
mov
in
xchg
iret
cmp
ja
sub
lret
fdivrs
or
or
mov
inc
jl
xor
mov
imul
in
call
aad
fwait
push
adc
lret
sub
ss
jmp
mov
mov
mov
lret
mov
mov
mov
icebp
sarl
inc
ds
push
lret
bound
pop
int
lret
cld
filds
xchg
loop
out
mov
dec
in
jecxz
jns
pop
stc
outsl
cli
pop
scas
cmp
les
neg
mov
lret
int3
testb
lret
lahf
cli
pop
mov
adc
lret
mov
movsb
lret
lcall
push
add
xchg
ficompl
or
lods
fildll
js
sbb
std
or
lret
mov
pop
push
sbb
lret
jns
pop
push
or
or
fimuls
lret
std
enter
lret
data16
mov
mov
jmp
xor
cwtl
popf
pusha
aaa
cmp
mov
sub
fsubr
mov
stos
lret
sub
ret
dec
popf
out
jae
jmp
repz
lods
xor
push
lock
data16
sub
pushf
ror
out
nop
and
push
lret
in
cmpsb
js
cmpsl
sahf
movsl
xlat
addr16
push
cli
cmp
fisttps
mov
pop
cmp
lret
xchg
sahf
test
fs
lret
loope
outsb
push
stos
jo
sub
ja
std
sbb
fld
fidivrl
cltd
lods
add
lret
pmaxub
or
lea
icebp
fstpt
add
int
or
fmul
or
or
cli
adc
aad
int
add
sti
cmpsl
imul
imul
xor
repnz
and
fucomp
ret
cmp
lret
popf
and
fldt
or
xlat
mov
push
lcall
and
fisttps
cmp
sti
test
inc
dec
rclb
and
daa
jle
xor
add
repz
add
cli
push
ret
pop
jge
lret
ror
jno
mov
scas
and
into
jg
out
inc
dec
cmpb
fxch
cmpb
lret
fistps
mov
lret
fimuls
inc
dec
fidivl
jne
fldenv
mov
add
fs
fldenv
movsl
aas
inc
test
push
bound
sub
ds
pop
lret
imul
lret
loopne
dec
ret
cmp
lret
mov
int
lret
adc
icebp
lret
jge
mov
mov
call
std
sbb
aam
out
test
inc
ljmp
in
repnz
lret
mov
inc
test
jae
lods
les
cmp
outsb
pushf
sub
ficoml
xchg
sbb
lret
loop
mov
jno
jo
xor
mov
mov
pop
ret
jg
shlb
mov
and
bound
pop
loope
xchg
mov
xlat
test
shl
lret
or
in
loopne
push
fsts
ficompl
cwtl
test
lret
gs
pop
lret
in
mov
cmp
cmc
dec
lret
mov
xor
mov
or
sti
lret
sbb
rcrl
rcrb
lret
fisubs
cltd
lret
adc
lret
in
push
dec
pop
sub
fnstenv
popa
dec
lret
out
je
lahf
ljmp
fwait
dec
popa
pop
dec
repnz
pop
mov
iret
aam
shll
lret
fnstcw
lret
adc
mov
scas
lret
int
jne
cmpsb
cmp
nop
lea
stos
push
lret
xor
xor
and
in
psrad
adc
sarb
cmp
fs
dec
jp
fisubl
aam
pop
lret
cmovno
xor
dec
lret
adcb
cld
dec
jecxz
ja
sub
test
imul
jp
pop
leave
fcoms
or
xchg
pop
xor
lret
pop
jbe
roll
icebp
mov
push
push
stc
sti
addr16
sbb
rcrb
inc
hlt
cltd
or
lret
enter
adc
lret
or
sbb
inc
icebp
mov
lret
dec
stos
jp
stos
push
xchg
arpl
ret
pop
push
cmp
sub
lret
xor
dec
inc
ds
imul
lret
jno
pushf
mov
mov
mov
jns
sbb
je
cmp
data16
in
pusha
call
notl
mov
adc
lds
cmp
mov
cltd
dec
add
cmp
push
icebp
gs
aad
xchg
mov
movsb
lret
seto
push
js
lret
pusha
in
jae
and
jns
push
lret
rolb
dec
sbb
out
fcomps
pop
in
jnp
add
mov
cmpsl
sub
mov
add
test
pop
lret
push
xchg
icebp
outsl
sub
andps
lret
clc
mov
ljmp
pop
sbb
sahf
test
mov
sbb
pop
mov
scas
mov
xor
cmp
mov
movl
lret
out
jae
leave
aad
lret
es
jns
lret
lret
fbld
les
and
pop
clc
lret
stos
xchg
rorb
dec
enter
lret
xor
push
repnz
sub
mov
call
stos
jge
sbb
pop
pop
sbb
outsb
sbb
insb
jne
mov
pop
shlb
test
xchg
dec
pop
dec
movaps
outsb
enter
cwtl
sbb
jbe
sbb
movsl
push
int3
push
mov
sbb
cltd
mov
push
fistps
sbbl
pop
inc
int
je
dec
stos
mov
lret
push
jae
adc
sub
push
jge
sbb
lret
add
sbb
mov
insl
lods
movsb
push
fmuls
stos
pop
pop
ljmp
int
pop
inc
jnp
cltd
mov
repnz
jns
dec
dec
outsl
shl
es
out
cwtl
mov
xchg
scas
int3
xor
pusha
jmp
fisubrs
hlt
std
test
mov
or
mov
js
shr
pop
cld
cmpsb
test
lock
lret
les
mov
jb
cwtl
and
fimuls
rcrb
cs
and
inc
lret
pop
stos
rcrl
jmp
rcr
mov
jns
shrb
sub
fisubrl
ret
add
and
cmp
mov
sarl
adc
movsl
fwait
add
addr16
jno
mov
mov
add
sbb
jge
mov
lret
or
lret
ja
cld
adcb
lret
pushf
es
outsb
shlb
leave
sbb
ja
lods
rorl
push
movsb
lret
aad
popf
shlb
or
push
adc
xor
ja
test
push
pop
lods
fst
clc
sbb
adc
mov
fmul
stos
cli
out
mov
xlat
lret
xchg
inc
xchg
push
shrb
add
mov
movsb
mov
cli
jmp
sub
xor
sub
test
pop
arpl
rcl
in
pusha
cmp
ljmp
sub
sub
out
xor
mov
xchg
cwtl
pop
lret
adc
mov
pop
fldenv
lret
cmp
testb
mov
xor
mov
push
ljmp
shlb
xchg
lret
push
mov
fldcw
push
adc
movsl
cmpb
mov
or
mov
pusha
lahf
xor
sub
mov
mov
dec
push
cmp
dec
pop
fsts
jno
enter
pop
inc
mov
jl
or
dec
cli
clc
aad
dec
std
ficoml
xchg
and
and
inc
popa
mov
or
sbb
push
lret
call
pop
mov
rclb
popa
sbbl
cmpsl
fs
sahf
rcl
xchg
mov
mov
mov
dec
xchg
inc
sbb
pop
fldt
xchg
sti
lret
clc
lods
jge
or
jns
cltd
aaa
lret
fs
loop
decb
sti
add
incl
mov
adc
test
adc
push
andl
ret
xchg
insl
cwtl
jle
add
imul
xor
in
out
push
pop
and
pop
loop
mov
cwtl
lea
pop
mov
fucom
cmpsl
lret
sbb
imul
mov
aad
lds
xor
dec
into
pop
call
or
loope
dec
bnd
psrlq
lret
test
int
sbb
movsb
xchg
fwait
ds
cld
cli
push
and
insl
aaa
pop
mov
movsl
add
jo
lret
loopne
cltd
push
inc
dec
mov
dec
mov
movsl
lret
adc
xchg
fwait
or
sbb
in
add
testb
xchg
lret
mov
lret
sub
pusha
cmp
push
adc
push
sbb
lret
add
mov
gs
loope
cmp
icebp
loop
mov
lret
pop
mov
mov
call
fldcw
dec
ret
arpl
ds
mov
fldcw
sbb
sbb
xor
jbe
mov
inc
cmp
nop
repz
sbb
popl
jnp
xchg
sbb
mov
dec
sub
lret
rcl
ds
fdivrs
mov
in
mov
jne
dec
cmp
loope
sub
outsb
and
push
xchg
and
scas
mov
lea
pop
and
fidivrl
cmp
pop
push
sahf
xor
lds
sub
jno
mov
je
int
and
int3
decl
xlat
iret
lret
inc
jno
insb
cmpsb
mov
movsb
ret
jge
jns
push
cmpsl
cwtl
dec
lret
lods
cmp
fwait
jmp
mov
push
push
lret
lods
pop
mov
inc
add
pop
not
inc
fmulp
sbb
add
sub
imul
inc
jne
sub
pop
jae
jle
inc
lret
jecxz
cwtl
mov
mov
sarb
nop
pop
lret
testl
mov
inc
arpl
ljmp
mov
add
sarl
lret
adc
xlat
cli
mov
pop
push
sub
and
lods
sub
xchg
lret
xor
push
xchg
pop
sub
cmpsb
roll
sbb
je
xchg
and
fdivr
jp
lret
dec
pushf
int3
shll
iret
std
daa
data16
xchg
add
lret
pop
test
cli
xchg
jne
cmpsb
cmc
pop
adc
jecxz
int
addr16
into
je
xchg
jmp
lret
cli
sub
popf
xor
fists
aaa
jle
lret
add
orl
and
dec
push
negb
ljmp
fstps
cmp
dec
aad
sbb
sbb
mov
inc
test
movsl
nop
cmp
lret
rorl
pop
push
mov
pop
stos
mov
jecxz
xor
jle
movsb
or
push
sub
sbb
pop
mov
test
lret
imul
je
or
pop
mov
mov
jno
cmp
mov
jl
cmp
add
cltd
push
fsts
test
lret
pop
fwait
movsl
jecxz
mov
mov
sub
mov
rcrb
fsubrs
fisubl
jle
xor
outsl
jb
shl
sub
adc
cmp
movsb
rcrl
cmp
jle
cmp
sbb
xchg
out
jge
enter
imul
lcall
shl
lds
stc
cmp
lret
shrl
dec
scas
mov
aad
mov
ret
std
jnp
stos
loop
rclb
fiaddl
fisubs
mov
and
cli
repnz
sub
sbbl
shr
jge
jecxz
push
add
fstps
jne
sub
jge
shlb
decb
pop
shrl
lcall
mov
and
adc
sbb
xchg
cmp
shrl
sub
add
sub
mov
add
call
out
and
adc
mov
aam
hlt
stos
cmpb
push
lcall
out
mov
or
cmpsl
jne
hlt
imul
lret
repnz
aaa
cmp
test
and
mov
sbb
je
sti
clc
jle
outsl
into
mov
aam
pushf
sbb
mov
rorl
sub
js
inc
xor
cmp
movsb
xor
mov
cmpsb
add
cli
loop
int
or
aad
insb
jae
andl
movsb
pop
data16
mov
into
or
pop
mov
push
add
xchg
cltd
lods
mov
adc
push
ljmp
sbb
lret
and
lret
cs
xor
outsb
pop
call
sarb
adc
les
enter
pop
lret
cmpsl
loopne
ljmp
outsl
inc
mov
je
mov
push
scas
shlb
div
cmp
jp
xchg
std
jmp
je
xchg
xchg
lret
jp
not
xor
lret
jmp
jg
std
test
sub
pop
xchg
lods
popa
sbb
pop
mov
jp
adc
sbb
or
fstps
std
xchg
cmp
adc
inc
lret
push
mov
pop
leave
hlt
cmp
or
loop
insl
jnp
xchg
cwtl
imul
push
loope
jp
rcl
imul
je
insl
add
or
inc
outsl
mov
inc
into
mov
or
cmpb
lds
xchg
mov
fmuls
xor
lcall
rcpps
das
mov
dec
jae
loope
inc
int
mov
sti
aam
cmp
add
ds
pusha
sbb
push
jo
lret
orl
loop
fiadds
adc
sub
test
xchg
sbb
mov
sub
or
out
mov
push
mov
cmp
aad
cmp
into
jl
mov
pop
mov
pusha
lea
mov
aam
xchg
notl
xor
xchg
popf
pop
mov
sbb
loopne
flds
adc
and
cltd
lret
ret
sub
cmp
pop
popa
fldcw
leave
jge
lret
lea
dec
jb
ret
inc
lret
or
cli
add
jbe
adc
cli
mov
mov
stos
mov
jae
mov
push
cmc
stos
push
mov
push
in
jae
push
fistps
mov
cmpsb
fwait
jns
lret
pushf
cmc
orl
imul
fcmovnu
cmp
scas
scas
jbe
jg
leave
pop
stos
push
inc
add
out
mov
ja
jecxz
into
lret
inc
repnz
imul
or
aam
mov
test
cmpsl
mov
inc
jle
ret
lret
sub
stos
adc
mov
jns
lret
aad
pop
cld
xchg
test
das
push
add
js
mov
sbb
pop
popf
cmp
outsl
andl
xor
sbb
xor
outsl
push
lahf
stos
notb
mov
ljmp
jmp
pop
pop
lret
add
lret
cmp
and
push
aaa
cli
push
lret
lea
xchg
lret
adc
dec
add
lret
xor
push
adc
outsb
lret
mov
push
in
jmp
cs
jb
dec
cmp
mov
shlb
cmp
mov
ds
push
das
fdivrp
lret
adc
sbb
inc
mov
xchg
jp
sti
shlb
sub
cmp
cld
jno
subl
mov
add
adc
inc
push
and
ljmp
into
call
xor
or
mov
lds
cmp
mov
enter
sbb
ss
outsl
and
lret
das
int3
sahf
jae
jg
rclb
pop
jge
lret
fsubr
push
out
and
not
fwait
lret
fnsave
dec
stos
cwtl
pop
mov
iret
rorb
or
mov
scas
andl
cmc
lods
jge
fcmovbe
xor
shll
lret
cmp
push
adc
lret
adc
sbbl
add
popf
enter
or
lods
call
lea
repz
inc
or
pop
cmp
pushf
lea
mov
sbb
lret
lcall
aam
test
out
push
xor
imul
cmpl
les
lcall
sub
inc
and
ljmp
rolb
push
loope
pop
xchg
dec
aad
icebp
bound
lret
pop
shlb
test
ret
daa
adc
mov
sbb
xchg
jbe,pt
loop
xchg
inc
nop
inc
push
add
cmpsl
cli
outsl
inc
cs
mov
movsl
es
mov
fidivrl
out
out
push
pop
lret
jg
mov
aam
or
sti
lret
xor
mov
into
loop
xchg
cmc
sub
scas
and
ds
lods
movsl
icebp
jne
lret
jo
jno
fsubrl
into
xchg
clc
jnp
imul
jae
lret
mov
sub
aam
subb
adc
test
jle
mov
pop
scas
lret
rol
popf
je
cmp
and
jne
fwait
mov
push
into
inc
stos
stos
xor
mov
lcall
pop
push
loope
jge
cmpsb
inc
mov
dec
rcrb
pop
xchg
lcall
pop
jne
cli
mov
push
dec
inc
addr16
xchg
mov
sbb
inc
add
lret
lea
lret
push
les
and
ret
lcall
ljmp
rorb
jp
jecxz
xor
mov
or
sbb
lret
pop
sti
adc
xchg
mov
and
jecxz
sarb
add
cmp
jl
pop
mov
mov
or
dec
inc
mov
push
lods
cmpsl
lock
loopne
dec
std
jbe
push
push
out
pop
lret
repnz
inc
aaa
dec
push
lret
or
mov
mov
adc
xchg
lret
add
ror
cmp
std
pop
or
test
pop
mov
das
mov
dec
popf
aad
mov
push
xor
loopne
cmp
aam
cltd
cmp
dec
hlt
pop
add
mov
insb
or
cs
push
lret
jbe
cmp
xchg
mov
test
or
sub
mov
jnp
icebp
fcompl
jb
lret
cmp
lret
pop
inc
inc
lods
jo
lret
ljmp
mov
test
jbe
mov
jo
push
int
or
enter
push
jmp
or
aaa
cmpsb
push
jp
lret
lret
cld
inc
xor
mov
rorb
je
sbb
hlt
push
out
idivl
lret
call
lds
stos
sub
rorb
and
inc
lret
push
mov
mov
cli
push
scas
movsb
and
xchg
faddl
cli
cmc
in
repz
jp
push
in
out
adc
call
or
lret
insl
pop
add
int
push
adc
bound
ljmp
rol
adc
rolb
inc
cmp
xchg
lret
sahf
adc
bnd
lret
mov
rcl
push
push
in
adc
sbb
xchg
lock
xor
cli
out
sub
test
sbb
or
addb
out
std
xchg
lods
xchg
lret
mov
pop
mov
fildl
lcall
push
adc
pop
add
cltd
cmc
lret
aam
rorb
xor
mov
fs
jno
arpl
push
lret
cli
aam
inc
mov
cltd
out
jne
xlat
adc
mov
lret
mov
cmp
or
int3
loopne
shr
sub
fimuls
pop
mov
cltd
pop
cwtl
lret
sub
adc
sub
ret
and
xchg
daa
rcrb
in
lret
mov
ljmp
inc
jle
and
stc
add
add
xchg
push
jae
cs
or
sub
lret
mov
daa
mov
arpl
inc
mov
outsb
fmul
sub
push
mov
push
negb
add
or
push
push
inc
jbe
pop
dec
jle
jns
push
xchg
mov
addr16
fcoms
rcrl
std
sbb
dec
mov
dec
push
data16
loope
sub
sarb
lods
sbb
movsb
lret
das
popf
jbe
cpuid
lea
or
push
dec
jl
cmc
lds
pop
leave
pushf
or
scas
int
dec
lret
std
sbb
sti
inc
or
ficoml
arpl
jb
lods
daa
lret
cli
out
sub
lret
inc
and
sbbl
aad
lret
xchg
push
es
lret
mul
jmp
fisttpll
lret
shrl
jns
lret
data16
and
inc
lret
test
lret
lret
cmp
mov
lret
sbb
scas
sbb
jp
jge
lret
rorb
movsb
inc
add
push
mov
xor
lcall
push
lret
dec
dec
xchg
enter
push
fwait
das
xchg
xchg
push
js
lret
loope
cmp
std
pop
lret
sub
cli
aas
xchg
sbbl
lret
sbb
cmpsl
lret
xchg
mov
xchg
iret
adc
das
add
jbe
add
dec
fcmovbe
adcb
cli
pop
aad
lret
mov
or
in
lret
sub
cmp
adc
js
insb
xchg
das
cmp
shlb
pop
cli
mov
push
into
mov
dec
icebp
movsl
stc
cmp
push
test
stos
add
or
jp
imul
lret
sub
add
lahf
jbe
aad
pop
xchg
lret
mov
and
lods
pop
sar
mov
testb
sbb
or
push
insl
nop
popf
jg
lret
fdivr
push
pop
or
inc
cmp
lods
lret
push
and
popa
sbb
inc
movsl
inc
ret
inc
jae
mov
jne
insl
jg
mov
dec
pushf
lret
rcll
cli
fadds
xor
cmp
pusha
mov
inc
xchg
test
jns
sub
aas
inc
push
dec
imul
or
and
lea
or
lret
jns
inc
data16
lret
pop
mov
lret
stos
sbb
jae
sahf
lret
mov
jge
xor
cmp
popa
xor
movntq
push
lret
fucom
js
je
js
lret
push
push
into
in
xor
pop
jg
lret
jl
cltd
mov
mov
mov
jnp
adc
inc
or
adc
outsl
mov
lret
in
loop
sti
push
adc
mov
mov
cwtl
add
lret
popl
out
xor
jns
push
xchg
lret
jecxz
lret
js
sahf
pushf
pop
repz
mov
popa
adc
into
out
gs
in
sub
and
jmp
jmp
loop
mov
xor
jo
adc
mov
and
fadds
ds
add
lcall
fists
stos
stos
arpl
in
mov
mov
nop
jge
lcall
jae
cmp
xor
jmp
ss
mov
stc
push
adc
loop
push
cmp
ror
in
aad
inc
daa
lret
sub
xor
notb
dec
lret
cmc
mov
mov
movsl
xor
cld
cmp
cmp
mov
or
rcrb
jno
rcr
and
sub
adc
fidivrs
push
or
jo
loop
mov
inc
mov
mov
mov
inc
insb
xchg
sbb
and
test
adc
popf
push
jle
loopne
lret
data16
and
jnp
cwtl
sub
fdivs
mov
lret
popl
or
mov
fwait
xchg
inc
shlb
insl
sub
inc
jecxz
shrl
js
dec
jp
or
shlb
pop
jp
ljmp
call
mov
jmp
daa
es
and
lret
movsl
mov
or
cmp
es
in
lret
push
xchg
insb
sbb
jb
cmp
xchg
mov
cwtl
imulb
adc
mov
stc
jno
lret
sti
jl
mov
cmp
fsubrs
out
mov
into
push
shll
lret
ror
push
das
pusha
xor
inc
pop
sarb
cmp
add
and
outsl
cmpsl
dec
sbb
mov
push
inc
jg
lret
xchg
lret
stos
xchg
cmp
pcmpgtd
into
xchg
mov
mov
xor
or
jl
out
xor
loop
ss
push
pop
cmp
into
mov
xchg
cmp
repz
inc
cwtl
in
test
iret
lret
sbb
mov
out
lea
aaa
inc
cmpsl
in
lret
xchg
or
inc
sbb
aam
lret
sbbb
cmpsl
rol
in
sbb
xchg
xor
jb
outsb
scas
ljmp
jle
shll
pop
into
pop
push
test
lret
inc
push
adc
jle
lret
jnp
cmp
mov
mov
mov
push
mov
lock
mov
sbb
lods
sbb
jge
xor
loopne
shll
or
mov
mov
adc
pop
push
int
xor
lods
cmp
push
sbb
shlb
adc
push
fwait
sbb
sub
mov
loop
cmp
test
pop
push
lret
iret
xor
sub
xchg
pop
int3
or
pop
xchg
out
imul
push
lret
cmp
popa
stos
lds
rcll
jno
add
aam
cmp
cli
mov
inc
testb
lret
in
cmp
push
pop
lretw
out
cmp
bound
add
lret
lcall
mov
push
pusha
pop
lea
leave
js
stc
movsb
pop
dec
fcmovu
daa
lds
xor
inc
mov
nop
mov
and
push
dec
rcrb
sbb
inc
shlb
jnp
mov
mov
add
int
push
scas
xchg
cmp
rolb
das
popf
jnp
lret
fsts
adc
ficompl
sbb
sub
in
fimull
xchg
test
mov
add
mov
sub
inc
mov
push
dec
mov
xor
stos
iret
aaa
pop
add
pop
push
lret
inc
daa
mov
dec
fidivs
dec
mov
xor
pop
push
pop
pop
mov
ljmp
xchg
insl
imull
pop
lret
mov
xchg
lret
xor
popa
lret
outsl
xchg
jnp
aad
dec
loop
xchg
and
mov
out
jge
fsubs
pop
loop
test
call
xchg
jge
fwait
push
mov
fisubl
ret
sub
sbb
stos
adc
imul
leave
pop
fsubrs
std
or
push
shrl
or
mov
imul
xor
pop
or
lret
and
jle
xlat
push
dec
fnstcw
loope
jns
call
ret
inc
loop
shl
push
jnp
enter
or
fadds
pop
sub
pop
push
shlb
fidivrl
pop
std
cltd
push
adc
xchg
mov
xchg
lret
sub
cli
xchg
aam
jle
pop
xlat
cmp
mov
mul
cmc
vfrczsd
popa
or
jo
fs
and
dec
mov
xchg
mov
jb
aad
cmp
xor
sbb
out
test
sahf
lret
xchg
jno
xchg
lds
jge
roll
pop
pop
add
or
fdivrl
insb
xor
xor
pushf
mov
cld
fcoms
insl
mov
fcom
aam
fprem1
lret
add
stos
mov
inc
xchg
xchg
jmp
cmp
sbb
cmpsb
and
lret
dec
outsb
adc
fdivrl
mov
shll
out
lret
adc
test
ljmp
add
mov
loopne
pop
je
sarb
das
lret
adc
scas
dec
pop
addr16
mov
push
mov
adc
push
in
pop
mov
jmp
js
in
xor
popa
mov
clc
xor
inc
aaa
mov
lcall
lret
mov
hlt
imulb
adc
sahf
jns
mov
sti
jge
xor
fstl
xchg
popf
je
or
or
sbb
in
jge
test
jb
lock
stos
incl
jle
cmc
cwtl
dec
mov
adc
ror
and
add
mov
pop
mov
mov
sbb
cltd
cli
mov
xchg
test
jnp
jns
scas
cmp
clc
cmp
push
lods
add
jl,pn
mov
cmp
movsl
jb
pop
add
pop
insl
push
popa
cld
xor
enter
sbb
lret
das
jae
pop
movlhps
outsl
int3
ds
cmp
cli
push
iret
cmpsb
scas
and
sbb
ret
cmp
or
imul
sarb
arpl
std
jp
icebp
aas
fidivrl
xchg
int
mov
pop
call
push
mov
sahf
into
lret
pop
cmp
jmp
stos
sbb
orb
inc
fdiv
pop
mov
mov
scas
mov
mov
dec
cld
lret
jl
lret
in
loope
xchg
int3
sbb
or
addr16
inc
mov
or
jbe
add
stos
into
cmpsb
fcmovne
cmp
cmp
fdivs
or
pop
ret
xor
scas
and
ss
mov
lret
xlat
stos
repz
rorl
xor
mov
pusha
inc
in
fsubrs
or
cmp
dec
or
test
mov
push
pop
mov
fidivrs
mov
sbb
pop
dec
sub
jnp
cld
in
out
aad
push
cmp
lret
repnz
dec
jge
popf
jno
inc
test
xchg
movsl
sti
xchg
mov
xchg
jmp
ficompl
inc
fstp
test
fs
icebp
push
xchg
dec
cli
lea
xchg
stos
mov
inc
in
sbb
sbbl
pop
data16
lret
inc
outsb
stc
jmp
lret
cmpsl
jge
int3
clc
jle
orl
or
movsb
cmc
les
ficompl
sub
sar
mov
mov
adc
mov
dec
inc
push
mov
mov
addr16
adcl
lret
ljmp
xchg
repnz
push
push
sub
fdivrs
cld
jns
ficomps
and
jecxz
lret
and
sahf
fistps
or
mov
dec
rorl
inc
outsl
fidivrl
jmp
pop
xchg
sbbb
xor
mov
mov
lods
lret
bnd
mov
ljmp
mov
xchg
jg
lret
stc
in
ja
sub
lret
icebp
pop
scas
push
test
lret
lods
or
lret
sbb
sahf
roll
xor
sub
lret
fistl
iret
inc
shlb
cld
lret
mov
push
lret
jl
fnstcw
loop
sti
roll
lret
inc
imul
xor
cmp
pop
sub
mov
ljmp
hlt
aam
fldcw
lret
aas
pop
adc
jnp
cli
in
test
jne
loopne
into
mov
int3
mov
arpl
out
in
nop
cli
lods
pop
dec
jbe
jle
ss
mov
add
jecxz
cmp
and
fidivs
insb
shll
stc
lret
adc
or
cmpl
jg
shlb
fnstsw
insl
std
dec
pusha
mov
add
mov
dec
repnz
daa
sbb
cli
div
jnp
sbb
push
adc
or
pop
loope
pop
lret
ret
cmpsb
fnstsw
mov
xor
int
dec
add
in
int3
cmp
iret
loope
fs
push
les
dec
adc
sub
sub
mov
insl
in
cli
pop
and
insl
cmp
lret
push
test
mov
sar
xchg
rorl
dec
ficompl
daa
sbb
out
test
mov
je
xchg
into
xchg
dec
stc
cmp
mov
frstpm(287
arpl
push
js
cmpsl
mov
mov
dec
lds
mov
cs
data16
cmc
mov
les
dec
or
xor
push
lea
dec
jge
mov
aam
ljmp
in
or
movsl
fldt
inc
cli
sub
jmp
inc
mov
and
cmp
add
mov
mov
cmc
xchg
psrld
jecxz
rcrl
in
inc
mov
stos
fsubl
pop
lret
lret
pop
loop
hlt
mov
cli
dec
mov
cli
or
xlat
sarb
cmpsl
arpl
adc
mov
lret
test
dec
fs
push
or
and
mov
fisubl
aam
xchg
or
adc
cmp
jg
lret
sbb
pop
daa
push
and
sub
push
xchg
mov
sti
mov
lcall
fcomp
inc
lret
push
cli
sbb
xchg
jge
sbb
xchg
xchg
repz
scas
stos
in
dec
out
xor
nop
pop
xchg
lcall
mov
adc
es
lret
mov
inc
xchg
sbb
dec
xchg
rcrb
cltd
gs
std
lret
cmpsl
sub
mov
loop
xchg
test
lret
movsl
in
mov
mov
hlt
push
lea
jno
adc
cli
insb
xchg
ret
fstl
cmpsb
lret
sbb
xchg
scas
or
cmp
roll
aad
dec
push
ficompl
pop
push
ja
aad
stos
lea
and
mov
lods
xchg
or
inc
inc
push
mov
fdivs
xchg
jp
in
push
xchg
sti
mov
dec
lret
sub
mov
iret
adc
lret
cmp
lret
lds
aas
adc
call
inc
lret
in
movsl
adc
jbe
sub
lcall
scas
push
inc
lret
scas
dec
ljmp
pop
test
clc
adc
push
sbb
out
jl
lret
stos
pop
jecxz
or
cli
adc
in
mov
mov
incb
ficompl
fnstenv
dec
lock
lret
loopne
push
mov
jl
aaa
gs
mov
stos
jns
push
mov
cmp
enter
rcr
dec
shlb
cmpsl
and
sbb
int3
inc
or
jno
sbb
mov
jmp
lret
and
pop
shl
mov
xor
iret
xor
dec
or
dec
lretw
sbb
inc
inc
or
mov
mov
adc
mov
fwait
in
cmc
push
mov
addl
loop
push
sbb
lods
or
or
lret
inc
cwtl
neg
lret
jno
insl
jae
cmp
push
fwait
add
xor
or
mov
or
fmull
mov
pop
mov
andb
cmp
gs
jmp
cmp
push
pop
pop
xchg
sahf
popf
lret
mov
mov
test
sar
sbb
adc
lret
fsubl
aad
ja
lret
nop
sbb
cmp
loop
adc
into
pop
pop
lcall
test
lcall
sub
int
repnz
push
lret
mov
je
xchg
lret
mov
subl
lret
sbb
shrl
shll
addr16
mov
stos
lods
ret
arpl
sbb
push
push
mov
xor
pop
fdivs
ret
das
or
dec
add
mov
mov
dec
lret
xor
push
add
pop
rol
cmc
jns
and
es
mov
mov
cmpsl
sub
mov
lret
ret
xchg
fs
xchg
fisubs
or
sti
insb
lret
mov
dec
lret
arpl
mov
and
jg
dec
mov
mov
xor
mov
dec
or
and
lret
cs
lret
cmc
cmp
enter
loopne
js
mov
adc
je
dec
sub
pop
pop
ror
add
outsb
push
cmc
sbb
fimuls
in
rclb
bound
adc
push
inc
lret
lret
fs
gs
insb
lret
pop
push
push
jne
stc
lret
aam
mov
nop
fisubrl
scas
mov
stos
test
xorb
lea
lret
and
xchg
imul
std
pop
push
lret
int3
shrl
jb
repz
movl
and
lods
std
inc
lret
cmpsb
pop
push
daa
add
negb
movsl
dec
scas
outsl
ja
lret
mov
dec
inc
notl
lret
lahf
sahf
xor
lods
lret
fsubrs
or
add
mov
inc
out
int3
js
mov
jnp
scas
add
rcrl
dec
lret
stos
fwait
repnz
popa
in
lret
dec
cmc
cwtl
scas
xchg
mov
sbb
xchg
mov
nop
jecxz
jge
push
inc
ja
xor
iret
ret
lret
into
jne
xchg
pop
loope
scas
pop
push
sub
sbb
loopne
rcll
sbb
cltd
fstps
es
inc
stos
push
lret
cmp
push
mov
cmp
xor
lret
fwait
jge
icebp
pop
mov
cmp
imul
xor
stos
lods
inc
call
cs
lret
dec
or
sbb
and
std
mov
sub
sub
shrl
mov
cwtl
gs
iret
xchg
lret
notl
cld
lods
mov
dec
imul
adcb
ljmp
imul
lret
push
pusha
daa
in
mov
aaa
and
push
lret
pop
push
pushf
pop
xchg
lret
loopne
into
jle
fs
pop
mov
xor
lods
into
aaa
out
cli
mov
js
cmp
data16
jecxz
xchg
xchg
popf
mov
sbb
out
ds
push
lahf
mov
movsl
fs
sub
inc
subb
ret
sbb
jne
movsl
dec
shll
adc
test
test
jbe
push
pop
sub
push
or
aaa
call
cmpl
pop
in
lret
xor
pop
loop
stc
lret
aas
and
out
call
jge
popf
mov
popf
add
mov
sub
into
icebp
shl
dec
aas
add
jmp
push
adc
jge
mov
imul
or
ret
fimuls
and
int3
sub
lds
stos
mov
inc
fidivrl
insb
jno
aad
adcb
iret
or
cli
insb
lret
movsl
out
loope
lret
test
ficoml
push
ret
xchg
int
fcmovbe
pop
mov
rcrl
lret
gs
outsl
aas
jg
stos
pop
fistps
lret
shlb
imul
sub
push
stos
divb
push
out
push
inc
lret
and
ss
xchg
cmp
in
sbb
aam
mov
or
andl
push
test
mov
sub
inc
enter
jg
inc
js
add
xchg
mov
test
mov
fadds
add
das
shll
lcall
aad
sbb
mov
shl
addr16
lret
push
mov
mov
in
gs
lret
and
lret
stos
insl
mov
test
lret
andb
push
or
jb
int
jns
sbb
ret
or
lret
adc
or
imul
lret
jecxz
mov
ss
mov
pop
cltd
jle
sar
out
lret
xchg
sbb
lds
dec
jne
cmpsl
sbb
aam
out
lret
mov
adcb
pop
out
lret
outsb
pop
cltd
or
into
out
lret
jb
lock
xchg
jno
popf
out
aas
sub
stc
jb
xchg
lcall
or
add
jmp
jnp
cmp
out
inc
cmp
inc
push
rolb
cmp
mov
cld
lret
in
or
xchg
jl
int
adc
pop
sarl
cmp
and
cmp
push
sbb
in
lea
adc
shll
jne
xor
mov
push
xor
cmp
mov
jle
jbe
inc
test
lret
test
stos
repnz
sbbl
fistpl
es
pop
in
mov
cmp
push
jg
mov
push
stos
mov
add
es
imul
gs
and
xlat
mov
adc
jl
sbb
xor
fldenv
mov
jae
or
mov
cwtl
mov
movsb
jl
lock
adc
int
lret
scas
ds
xchg
cli
lret
jb
cmp
inc
xlat
mov
shl
cmp
idiv
push
aam
aas
pushf
lret
lret
daa
or
adc
lahf
cmp
xor
push
or
inc
jl
lret
push
dec
cmp
in
pop
je
jns
push
shrb
mov
add
lret
mov
dec
dec
ret
rcll
aam
lea
push
mov
push
adc
into
mov
inc
addr16
out
xor
adc
ja
dec
pop
xchg
lods
call
pop
mov
sbb
mov
arpl
add
add
pop
lret
push
rclb
in
mov
mov
pop
outsb
je
cmp
movsl
mov
pop
pushf
pop
xchg
push
fwait
repnz
insl
rcr
mov
cmp
cld
test
jb
lret
popf
lds
jge
lret
mov
or
add
jae
scas
addr16
pop
add
fsubrl
popa
rol
into
or
sbb
aad
out
fwait
mov
jae
stos
icebp
push
neg
aam
jge
cmpsl
sbb
outsb
mov
lods
dec
nop
push
fisubl
adc
or
xor
lret
mov
pop
out
fisubs
push
cs
cld
lret
xor
inc
adc
lret
pushf
or
sub
insb
into
lret
inc
adcb
xchg
lock
scas
or
mov
vpermt2d
aas
out
and
das
add
imull
xchg
stc
mov
repz
negl
mov
mov
mov
push
mov
lret
imul
lock
clc
sub
pop
mov
dec
mov
lret
push
scas
clc
and
cld
roll
xchg
test
pop
shll
jae
mov
dec
sub
test
cmpsb
xchg
add
mov
dec
call
pop
test
sbb
lret
jno
sbb
sahf
stc
xor
jp
fcmovbe
adc
push
arpl
stos
mov
aam
jg
jge
or
push
mov
sbb
add
mov
mov
fsubr
sbb
fcmovbe
push
jl
pop
or
mov
sbb
or
jbe
js
gs
lret
shrb
and
mov
roll
add
lret
mov
ja
lret
and
jp
xchg
pop
shrl
aaa
cli
movsl
loopne
mov
add
lret
mov
pop
icebp
xlat
dec
lea
lret
std
adc
fwait
cwtl
leave
stos
lret
pushf
notb
imul
cmp
test
xor
mov
call
imul
ljmp
or
fcoms
ficoml
pop
jnp
mov
pop
pop
lahf
lret
or
jo
mov
lret
hlt
daa
pop
in
sbb
jnp
mov
fwait
push
and
push
pop
gs
addb
mov
dec
push
jnp
push
lret
hlt
shl
xchg
cmp
cmp
xchg
mov
push
push
xor
aam
lret
and
leave
pop
sub
pushf
in
inc
cmp
cwtl
mov
iret
stos
jae
inc
in
enter
scas
mov
shlb
sub
ficoml
jp
inc
addr16
push
mov
push
ror
fimuls
xchg
adcb
js
arpl
mov
jbe
inc
xchg
push
xor
adc
outsl
lret
jge
push
fnstcw
aam
lret
movsb
call
cmp
xlat
pop
testl
cs
inc
cmc
lret
pop
movsl
cmpsl
mov
pop
enter
dec
pop
shlb
push
fisubrl
ret
jg
sarl
lret
mov
mov
test
push
or
sbbb
mov
jl
xorb
int
sbb
icebp
xchg
in
rclb
mov
sahf
sub
dec
int
test
xchg
jns
lret
mov
out
or
xor
push
add
mov
in
leave
stos
subb
rclb
lret
mov
aaa
adc
test
vsubss
push
fstl
inc
aas
gs
fld
push
jge
negl
mov
lds
pop
das
insb
ljmp
xor
enter
sub
and
jno
insl
cmp
jb
data16
xchg
cmp
lret
add
mov
aas
popa
cmp
xor
iret
fcompl
inc
jbe
psubb
dec
test
jl
mov
iret
int3
xlat
test
mov
jmp
dec
inc
stc
lret
test
lcall
sub
dec
push
int
lret
jnp
push
imul
cmp
pop
jne
out
aam
enter
clc
gs
pop
inc
lret
lea
or
aad
mov
arpl
sub
dec
add
pop
jo
mov
popf
mov
je
rolb
or
fistl
or
into
pushl
not
movsb
cmc
subb
lret
dec
mov
outsb
ret
lret
push
xchg
lret
test
stc
push
lret
iret
mov
xor
pop
fdiv
pop
aam
mov
sub
adc
rcrl
aad
pop
sbb
adc
adc
lret
jecxz
xchg
push
mov
adc
mov
ficoms
test
push
push
rcll
add
pop
cmp
or
pop
cmp
stc
lret
jmp
mov
fwait
mov
pop
lret
call
add
ror
fdiv
stos
ret
xor
cmpsl
adc
mov
addr16
insl
les
mov
inc
mov
gs
dec
icebp
mov
loopne
rcl
repz
ljmp
scas
stos
inc
mov
test
inc
lret
dec
jge
jne
cmp
sub
adc
lret
pop
dec
inc
int3
call
mov
iret
lods
sub
push
sahf
lret
pop
repnz
xor
dec
dec
fmuls
outsl
mov
xadd
test
push
sub
jle
test
imul
int
negb
sti
inc
dec
lret
push
jns
and
insb
aad
lret
inc
lret
xorl
sbb
data16
stos
jns
int3
aaa
add
notb
aad
xchg
push
ljmp
std
jb
add
fiaddl
outsb
adc
es
ja
pop
cmp
sbb
movsl
mov
movl
call
adcl
jg
rolb
sub
sbb
fsts
jb
mov
jo
xchg
ja
or
sbb
or
inc
loopne
pop
mov
test
pop
stos
xchg
ror
pop
shll
mov
sti
sahf
xchg
mov
cs
js
mov
lret
shrl
mov
inc
mov
clc
push
lret
sbb
cli
lods
xchg
loop
das
icebp
cli
clc
fwait
cltd
jl
xor
cli
jno
adc
mov
mov
push
movsb
mov
mov
push
mov
lret
daa
inc
push
loop
adc
jg
and
push
lret
push
or
rorl
pusha
cmpsl
lret
or
aas
into
lret
sbb
adc
mov
arpl
or
mov
pusha
adc
sbb
jno
lea
test
push
ret
stos
imul
fcoms
push
ja
lret
mov
ljmp
call
scas
push
into
pop
adc
jno
mov
cwtl
les
lret
ss
out
in
xchg
or
test
mov
jge
lret
adc
jmp
loope
test
sub
out
iret
cmp
lret
mov
repnz
xchg
cltd
fmulp
cmc
inc
xchg
mov
cli
sbb
clc
xlat
mov
sub
daa
lret
nop
and
push
push
pop
mov
cmc
enter
frstors
lret
je
imul
or
shrb
dec
mov
jg
push
hlt
lret
stc
fdivrp
outsb
push
xor
xchg
cmp
in
dec
sub
jb
xor
divb
lret
cs
lret
jle
rcrb
lret
loopne
sbb
fistl
movsl
imul
xchg
lret
mov
dec
ret
pop
mov
add
out
lret
mov
in
push
push
je
cltd
out
cwtl
mov
pop
dec
lret
lahf
stos
out
hlt
adc
push
push
dec
jle
add
sti
mov
xor
imul
aas
inc
fildl
ret
mov
negb
test
xor
es
cltd
addb
stc
in
into
leave
testb
add
fwait
push
jno
mov
mov
xchg
in
sub
adc
cli
fidivl
std
insb
adcb
inc
xlat
mov
sti
ljmp
cmp
fldcw
xor
cmpsl
lock
sub
cmp
rolb
imul
mov
fcmovbe
test
mov
icebp
mov
ficoml
xchg
sub
push
mov
pushf
xchg
xor
add
aad
ja
adc
lret
stos
xor
movsb
into
jmp
lret
icebp
cmpb
mov
push
or
lret
mov
in
lret
pusha
cmpsb
jnp
adc
arpl
mov
call
enter
and
out
loope
lret
dec
cmp
cmp
fistl
xlat
jmp
shr
dec
adc
sbb
or
inc
aas
mov
aaa
fsubrs
add
lret
pop
dec
leave
iret
xchg
jmp
daa
mov
lret
jb
sbb
sub
scas
jno
sub
stos
sub
xchg
push
xor
lret
dec
mov
lret
pop
inc
push
ss
stos
movsb
mov
inc
cli
cmp
sub
icebp
xchg
lret
loope
pop
sarl
lret
aas
jge
jmp
aam
xor
add
lods
push
xchg
mov
ret
dec
lret
loop
sbb
hlt
xorb
rol
test
add
pop
mov
lea
fdivrl
jp
push
dec
xchg
sbb
fwait
cmp
nop
cmpsb
jp
sbb
fwait
cli
jl
sar
jbe
mov
xor
or
out
lret
push
lahf
loop
or
data16
sub
cmp
mov
and
fisubrs
lea
mov
popa
aaa
repnz
jp
or
mov
add
xor
dec
xchg
or
scas
add
fsts
push
jno
push
rcl
lcall
mov
pop
dec
js
or
bound
dec
adcb
stos
roll
pop
shrb
testb
inc
cmp
lret
dec
in
shrl
mov
jns
ret
jecxz
ffree
pop
pop
iret
lret
mov
jle
adc
bound
clc
xchg
out
xor
jnp
xor
push
lret
mov
std
cli
mov
rorb
rol
stos
bound
shlb
outsb
movsl
ja
lret
cld
imul
pop
sbb
pop
shll
lret
out
nop
or
lret
in
mov
lret
hlt
or
lret
and
mov
dec
cmp
mov
xor
sbb
and
push
out
mov
mov
stos
cmpsb
push
adc
outsl
xor
lret
vmovmskps
out
lret
xor
xchg
cwtl
jmp
lret
add
jo
or
xor
stc
repz
cmp
jae
dec
push
sub
and
push
push
jp
pop
lret
cs
cmp
adc
pop
je
out
rorb
lods
pop
cli
mov
xor
push
pusha
push
clc
popf
pop
pushf
sarb
out
lret
in
je
inc
popf
pop
lret
pop
cmc
pop
push
icebp
xchg
stc
mov
int
shrl
adc
jno
out
shrb
sub
lret
cmp
jbe
mov
pop
stos
cli
jmp
lret
loop
scas
add
jns
lock
dec
pop
adc
add
cli
ror
mov
inc
mov
lret
pop
out
xor
mov
cli
mov
fsts
sbb
lret
jno
out
cmp
xor
mov
push
inc
es
cli
xchg
dec
scas
sbb
jbe
push
in
lock
outsl
add
and
cli
daa
test
in
nop
pop
xor
bound
fidivrs
cmp
jle
out
leave
jge
mov
insb
fisubrl
lret
inc
add
lret
sbb
push
cmp
lret
mov
dec
xchg
les
cmc
push
adc
jmp
shrl
add
lahf
mov
dec
lret
bnd
ljmp
into
pop
add
cli
loope
mov
mov
call
cmp
iret
je
xchg
enter
inc
mov
js
lret
add
es
loop
pop
rorl
pop
pop
cmp
shl
pop
les
mov
xor
pop
mov
lret
xchg
xchg
mov
aas
sbb
fs
mov
cmp
pop
sbb
aam
ljmp
mov
int3
mov
out
dec
sub
in
ljmp
fcoms
push
lret
test
pop
lret
adc
lret
ret
aam
stc
xchg
jno
lret
mov
lret
stc
repnz
mov
pop
or
sbb
out
and
lret
stos
cld
fs
ret
insl
leave
xchg
and
lret
inc
repnz
mov
jmp
mov
testl
enter
mov
mov
hlt
mov
mov
ret
cmp
lret
stos
pushf
xor
sarb
ret
rorl
lret
sbb
mov
sub
or
mov
stos
mov
int3
push
icebp
je
jmp
fdivrs
pop
mov
push
xchg
xor
rolb
in
jge
cmp
cmp
cmpsb
outsb
adc
sub
scas
sar
cli
xor
mov
repnz
sub
inc
sarb
or
sbb
cmp
stc
mov
sub
pushf
sbb
das
movsb
adc
std
mov
out
pop
mulps
jle
dec
in
sbb
push
mov
sbb
jp
psubusb
and
ffreep
xor
lret
mov
dec
mov
andl
lret
dec
ja
pop
mov
shlb
or
mov
lret
add
clc
xor
pop
mov
mov
pusha
jnp
aad
sbb
lret
jge
jne
insl
gs
rcrb
jmp
inc
and
icebp
lret
sbb
and
jo
ficomps
sbb
in
imulb
lahf
mov
stos
and
inc
popf
mov
js
std
aad
lea
lret
jecxz
loope
rorl
and
cmp
or
or
jae
cmp
mov
pop
push
and
mov
or
loop
shr
ja
mov
jnp
lret
xchg
bound
enter
cmpsl
xchg
inc
fidivrl
sti
mov
mov
pop
inc
dec
mov
inc
mov
rcrb
popl
adc
inc
ror
cltd
pop
xchg
or
mov
je
cmc
add
pop
cli
lcall
insl
scas
or
cmp
dec
mov
push
stc
ds
adc
cmpl
rolb
shlb
lret
lahf
rorb
push
enter
xor
iret
clc
mov
lret
cmpsb
push
ljmp
dec
pop
xchg
in
fimuls
cmp
mov
cld
lret
shll
add
and
fldt
out
mov
xchg
int
movsl
or
std
sbb
jne
push
loope
jae
add
lea
add
or
add
xor
imulb
xchg
pusha
lret
jbe
test
mov
xor
pop
dec
push
mov
ds
cmp
in
push
add
mov
les
adc
push
cmpsb
xchg
arpl
pop
nop
mov
jo
jno
fcmovb
add
iret
jae
push
pop
fs
inc
and
lcall
fdivrs
cmp
enter
rcl
sbb
shlb
adc
lret
inc
and
into
cli
xchg
add
call
lret
scas
je
lock
sbb
inc
push
rolb
sub
fsubrs
in
jg
dec
mov
adc
mov
lret
je
das
cmp
scas
cmp
out
flds
push
xchg
dec
leave
push
ljmp
mov
mov
ficoms
mov
pushf
adc
and
mov
cli
sti
mov
push
sub
fwait
repnz
xchg
adc
outsb
aad
cltd
rorl
cmp
cld
add
cmp
and
sbb
repz
dec
cmp
sub
fisttpll
in
call
jge
repz
ljmp
cmpsl
scas
cld
negb
pop
rolb
lock
mov
mov
inc
test
push
in
xchg
mov
jmp
popa
mov
mov
lret
push
xor
fsts
mov
jg
out
and
mov
fiadds
push
outsb
pop
mov
add
sub
rcrl
out
scas
and
aad
lret
cld
dec
insl
je
in
lret
stos
pop
xor
add
or
icebp
push
dec
push
out
cli
dec
cmp
into
push
cmp
lods
mov
nop
lret
push
pop
das
data16
lret
mov
out
fdivs
inc
dec
in
push
mov
hlt
repnz
sarb
sbb
and
stos
cs
insb
lret
rol
and
and
aas
push
sbb
loop
sarb
sti
cli
lret
into
xchg
cmpl
mov
test
and
lea
and
lret
xchg
subl
cmp
or
ret
and
fisubrl
enter
pop
icebp
mov
inc
out
lret
jbe
lret
pusha
push
pop
push
subl
cli
jg
lret
aam
cmp
bnd
dec
dec
movsl
xor
fwait
loopne
cmp
lret
push
iret
mov
imul
sub
repz
lret
fdiv
jo
xchg
ror
xchg
add
fs
mov
xchg
lret
xorb
add
sub
cmc
xor
mov
rol
push
jge
punpcklbw
mov
shrb
lret
test
push
in
sarl
add
mov
mov
jne
pop
jp
mov
xchg
push
pushf
lods
push
lret
and
stos
inc
dec
addr16
push
mov
dec
sbb
jno
mov
in
push
mov
div
ja
fwait
test
and
mov
leave
movaps
jb
and
xchg
push
imul
adc
pushf
pop
rolb
mov
je
jge
mov
movsb
lods
aaa
jl
rolb
adc
mov
cmp
mov
or
lret
pop
pop
add
outsl
adc
xor
test
repnz
mov
mov
dec
mov
push
jae
fcoms
add
cs
push
inc
lret
data16
jg
sti
or
movsb
test
jge
js
and
call
loope
inc
push
xor
test
in
or
aam
adc
rorl
movsl
push
lret
add
outsb
scas
and
test
sbb
xchg
add
jo
pop
jg
insl
push
dec
mov
lret
fwait
mov
mov
push
push
lods
mov
cli
xchg
lret
mov
mov
dec
lret
sub
xor
mov
sahf
cwtl
cmp
out
pop
xor
sub
push
shlb
ss
push
mov
jmp
adc
mov
popf
adc
adc
lret
pop
aad
cltd
or
int
sbb
mov
cmpsl
mov
xchg
hlt
test
inc
mov
xor
mov
mov
mov
dec
pop
frstor
push
std
inc
lret
push
or
jne
or
mov
xchg
xchg
jmp
inc
stos
in
iret
ret
hlt
int3
int3
jns
xchg
loopne
push
mov
fsubrs
xor
subb
ficoml
into
pop
cwtl
cld
sarb
jo
push
lods
incl
lock
outsl
push
test
jl
icebp
cmp
and
mov
ss
lret
xchg
and
iretw
lret
mov
sbb
xchg
pop
dec
mov
and
mov
iret
sub
lret
inc
out
daa
push
inc
mov
in
or
jns
outsb
test
mov
xchg
fmul
lret
ret
mov
idivb
insl
ret
lret
imul
mov
cmp
lds
sti
aad
aas
push
mov
add
xor
sti
and
lret
jne
xlat
outsb
aaa
idiv
add
lret
cld
pop
push
popa
popf
sbb
lret
and
or
jae
out
repnz
movsb
cmp
leave
mov
insl
fidivrl
sarb
addb
jl
push
loop,pn
pop
movsb
dec
xor
das
xchg
inc
or
ljmp
into
aas
mov
adc
jb
and
dec
cwtl
lea
mov
test
jmp
mov
xchg
setl
mov
sbb
ljmp
ljmp
or
movsb
cmp
pop
inc
lea
and
in
in
je
inc
addb
cmp
push
fwait
cld
outsl
jb
push
into
lea
lret
and
push
fsubl
mov
mov
sub
dec
jmp
sub
pop
js
jecxz
inc
lret
shlb
sub
cld
gs
sbb
insl
lret
mov
fisttpl
jle
scas
or
das
lret
pusha
ljmp
adc
or
jnp
and
adc
movsb
sub
lret
lcall
pop
jne
stc
cmpsb
push
push
jecxz
sub
sbb
nop
xor
movsb
jge
fsubl
dec
lods
lret
inc
shrb
and
ret
xor
ljmp
add
or
mov
ss
cmp
stos
cmp
or
push
lret
scas
cmp
lret
dec
das
aad
pusha
clc
fwait
int3
lret
sbb
pop
sub
xchg
jl
jge
push
lret
test
xchg
push
pop
lret
or
sub
test
sub
test
repz
testl
cmp
fsubr
jl
bswap
xchg
pop
repz
daa
int
fst
sti
lret
pushf
loop,pt
iret
and
addb
xchg
lret
push
shll
sahf
stos
mov
scas
rolb
add
jo
or
hlt
lods
in
pop
add
xlat
stos
cmpsb
imul
stos
cmp
shrb
mov
lcall
push
adc
dec
lret
arpl
rcrb
push
cmp
cmp
mov
lret
gs
inc
cmpsl
jno
jno
cltd
loop
in
lret
int
jecxz
inc
lahf
lret
decb
or
dec
lret
lret
or
cmp
lret
vmread
lock
add
xor
lret
aaa
fldl2t
sti
or
out
and
xchg
lea
repz
pop
outsb
inc
adc
dec
mov
lret
pop
jg
faddl
cltd
lret
inc
sbb
lret
pop
stos
jp
fmulp
lret
bound
mov
push
xchg
clc
movsl
mov
lret
mov
and
jl
stos
into
sbb
jg
pop
pop
pop
fdivrs
enter
cmpsb
popf
sub
scas
fmul
scas
xor
aad
jg
sahf
les
popf
push
mov
pusha
std
inc
test
ds
arpl
cmp
adc
sarb
fnsave
add
fcmovnbe
ja
jmp
lds
fwait
fwait
mov
xor
inc
add
int3
xchg
aad
xchg
ds
inc
lret
jns
and
lcall
or
lret
jns
fdivl
xchg
xor
mov
lret
jb
shl
popf
mov
repz
or
popa
lret
nop
xchg
ja
std
cwtl
adc
fwait
lret
cmp
jge
add
dec
mov
mov
mov
cmp
shrb
aad
lret
adc
sti
jp
sub
lock
fdivs
xchg
lods
repz
push
mov
inc
pop
mov
inc
xor
int
call
add
cmpsb
push
lret
std
xchg
add
add
adc
mov
mov
and
jg
dec
pop
mov
fsubs
lods
and
mov
std
pop
outsb
lret
pop
jle
pmaxub
in
pop
sbb
and
pop
pop
push
popf
lret
adc
lret
sbb
lret
test
shll
dec
mov
push
cmp
fstpl
pop
rcr
mov
xchg
and
lret
out
add
mov
shll
lret
js
iret
scas
movsb
dec
lret
aam
sub
aas
sbb
cmpsl
mov
mov
mov
xchg
stos
int
dec
mov
icebp
loope
cmp
lret
push
pop
shl
add
push
gs
js
mov
decl
mov
icebp
daa
cltd
dec
scas
pusha
lret
push
fidivl
mov
sbb
jle
negl
xor
adc
inc
cmp
jmp
push
int3
enter
stos
mov
or
fs
lods
pop
mov
lcall
inc
jg
sbb
jp
cmp
movsl
aaa
nop
lret
xor
rcll
mov
adc
fsub
mov
sbb
inc
shl
mov
xlat
jp
push
inc
into
shll
push
loope
shll
rcl
cwtl
mov
stos
idivb
outsb
lret
int
mov
insl
cmpsb
or
shrl
pushf
fwait
pop
and
or
lret
inc
xchg
jnp
cmp
add
jo
rcr
sbb
lret
addb
inc
insl
lock
stc
mov
lret
cmp
mov
enter
jle
or
aam
jp
into
dec
dec
scas
lret
lcall
icebp
cs
and
push
jbe
test
lret
in
out
dec
les
xchg
sbb
pop
fyl2xp1
and
lret
daa
dec
adc
es
jmp
xor
lret
retw
jge
rcl
xchg
rolb
stos
inc
or
xchg
test
aas
lea
gs
push
dec
cmpsb
ror
or
or
xor
daa
cmp
int3
ja
outsl
sar
xchg
add
add
insl
cmp
and
out
dec
mov
jno
pop
js
lret
leave
aas
mov
fcmovb
fimull
es
dec
stc
mov
pushf
stos
negb
add
and
jbe
clc
ds
jmp
xor
arpl
ljmp
in
push
testl
or
ret
rcrb
and
dec
or
push
add
and
stc
jp
sub
nopl
cmp
xlat
jmp
xchg
iret
cli
inc
das
divb
push
sbb
lret
mov
insb
mov
ds
imul
pop
jns
add
lret
call
filds
mov
sahf
cmp
pop
xchg
sbb
out
cs
lods
stos
ja
in
fst
cmp
jl
lahf
out
cmp
and
js
xchg
lret
and
aas
fsub
and
pop
or
int3
loope
es
lods
stos
lret
pop
and
lret
lds
cmpsl
nop
sub
dec
out
inc
js
inc
push
popf
pop
out
ret
xor
mov
lret
add
shl
cmpsl
add
in
in
and
popl
inc
push
push
lods
out
xchg
push
insl
rorb
les
ret
outsl
mov
lret
jo
xchg
loope
cli
out
add
cmp
jo
lret
lock
repnz
daa
xor
loope
inc
jb
jnp
out
sbb
out
fs
add
cwtl
test
gs
mov
ficoml
xchg
sub
int3
cwtl
movsb
fisubrl
daa
in
xchg
js
inc
fstps
orb
cli
dec
jne
sbb
sbb
shrb
jmp
es
jne
push
adc
jns
inc
or
adc
not
sub
jle
jg
sbbl
push
cmpsb
sbb
lret
adc
aam
int3
out
popf
dec
or
out
rol
inc
push
dec
adc
adc
and
in
inc
jge
push
lods
in
lret
push
adc
xlat
sti
sahf
ljmp
and
inc
jae
fildll
xor
lret
adc
and
push
and
in
stos
push
cli
xchg
mov
add
lret
xchg
dec
rorb
mov
mov
cmp
sbb
cmp
cwtl
imul
mov
lret
mov
jmp
test
push
sub
and
jnp
cmc
mov
xor
jns
cmp
mov
jl
mov
inc
dec
xlat
movsb
fs
iret
repnz
cmp
testb
fwait
or
mov
fcomp
icebp
sysenter
inc
lret
or
mov
rcl
inc
push
je
sarl
sub
ja
sub
and
fwait
xor
lret
hlt
xorb
jb
icebp
jmp
pop
push
scas
call
cli
psubb
adc
insl
lock
test
push
rep
aas
push
jae
fisubs
lret
fsubl
lods
inc
xlat
lret
mov
lret
aaa
mov
lret
loop
shrd
mov
xchg
adc
xchg
or
rcll
arpl
sarb
sbb
xor
mov
xchg
lret
xor
hlt
push
jns
rclb
lret
notb
pop
cs
inc
mov
or
sub
or
rorb
fnstcw
fmul
test
lahf
cmp
lret
push
lret
sub
or
shll
cmpsl
fucompp
ds
cmp
ror
lock
lret
cmpsl
or
lret
loopne
es
xchg
pop
lods
lcall
jge
jnp
jg
fsts
push
jb
cltd
pop
mov
sti
jge
aad
pop
aas
outsl
lret
sahf
ret
ffreep
lret
testl
adcl
ud1
lock
inc
lret
or
pop
fiadds
fisubrl
or
and
pop
test
insl
adc
xor
loope
roll
add
in
cmpsl
sbb
fsubl
pop
stc
imul
idiv
lahf
sbb
pop
lret
test
jnp
or
shl
mov
aas
imull
fucompp
popf
sub
pop
cmp
jecxz
cmp
aad
shlb
dec
push
dec
mov
lret
cli
add
dec
push
pop
dec
push
lret
or
xchg
xchg
jne
xor
stos
out
popf
idivb
cmp
sub
xchg
into
mov
sub
out
cmp
mov
dec
push
into
jmp
sbb
dec
pusha
add
jae
lods
inc
ret
fucomp
out
and
pop
lret
mov
dec
fiadds
rcrl
lret
cs
push
jae
pop
iret
fs
cld
shlb
pop
scas
dec
bound
lret
adc
aam
sti
or
int3
cmp
lret
dec
jmp
outsb
das
sub
mull
aas
mov
cs
lret
lea
add
push
ss
mov
and
les
lret
mov
movsl
lret
mov
outsb
shll
fcmovbe
popf
cmp
inc
inc
adc
mov
jae
stos
cmp
imul
das
lret
frstor
test
xor
cli
adc
push
imul
xchg
lds
cwtl
push
push
inc
mov
test
fsts
lcall
sbb
xchg
pop
push
dec
pusha
push
lret
dec
mov
popf
cmp
mov
nop
xchg
adc
lea
jns
pop
xor
lret
dec
nop
and
or
std
mov
shll
sub
cmp
jge
inc
out
pop
pop
outsb
fnstcw
mov
xlat
shlb
lret
and
dec
lock
fsubrs
jb
mov
inc
lret
xor
xor
adc
add
mov
fisubs
rcr
cmc
xchg
rcrb
insb
xchg
stos
xor
jae
pop
inc
lret
push
loopne
repz
std
lret
sub
mov
in
aad
fildll
lret
or
adc
popa
lret
xor
out
inc
adc
mov
inc
mov
aaa
and
shlb
xchg
push
icebp
inc
mov
adc
xchg
test
sub
cmp
mov
dec
mov
push
and
sahf
addr16
xchg
mov
sub
add
xchg
adc
add
lods
mov
cmp
fistl
mov
xchg
test
pop
ret
mov
xlat
lret
pop
sub
rclb
and
sbb
int
fs
stos
rcr
lret
stos
cmp
xchg
das
or
pop
lret
js
xchg
cmp
add
jp
stos
ret
ficompl
cmp
data16
lret
cmp
ffree
jbe
stos
div
sub
rclb
mov
pop
popf
aam
shlb
dec
repnz
push
adc
jecxz
cli
shll
jno
lret
mov
sbb
cmp
rcl
lret
sbb
add
movsl
cmpsb
inc
lret
sub
add
ds
scas
sbb
rclb
lret
jl
sub
mov
push
xor
lea
push
adc
mov
popf
add
test
fldcw
lret
and
out
repz
add
pop
adc
fcmovbe
mov
mov
xlat
insl
mov
out
outsb
mov
mov
adc
mov
lock
shlb
pop
fmuls
clc
add
add
fisttpl
out
outsl
leave
or
dec
daa
cmp
jmp
or
add
scas
enter
xor
insl
pop
pop
push
push
cmp
inc
addr16
mov
roll
lret
mov
lret
lret
mov
ret
dec
int3
add
out
xchg
inc
push
out
daa
cmp
fcompl
cmp
add
cmp
lds
fwait
cli
aad
lret
push
xor
mov
cmp
push
lock
js
sahf
ror
pop
ficomps
add
cld
cs
fs
mov
ror
gs
aam
sub
cmp
cmp
dec
pop
lods
insl
pusha
add
push
dec
jle
xor
call
out
sbb
mov
and
sarl
dec
into
ljmp
cmpsl
dec
adc
lret
cwtl
xor
mov
dec
ds
rclb
outsl
sub
inc
repz
mov
in
cltd
fnstsw
lret
cmp
cli
fcom
out
mov
pop
stos
push
mov
lcall
xchg
lret
leave
jo
pop
rorl
stos
sbb
repz
lret
mov
movsl
sub
stos
aam
or
das
int3
ljmp
cmp
clc
out
into
xor
fwait
lret
mov
icebp
or
fcmovbe
lret
mov
fdivs
loope
xlat
out
lods
je
mov
addr16
int3
inc
adc
dec
mov
decb
pop
loopne
cli
xchg
lret
rcrl
enter
ljmp
inc
mov
mov
cmp
stos
arpl
ss
sbb
loopne
enter
inc
sub
push
fisubrl
cmc
ret
rclb
jp
mov
sti
iret
xor
fcoms
xchg
rorl
clc
jno
cmp
sbb
cmc
mov
cmp
outsb
popf
and
fcoms
or
daa
fmul
mov
fsubl
mov
divb
fwait
mov
push
sahf
lea
jl
xchg
aam
lret
ds
dec
mov
das
inc
lret
popa
aam
call
jns
leave
cmp
xchg
push
sti
mov
ror
xchg
pop
cli
subl
lret
pop
fisubrs
mov
push
aaa
test
push
cmp
aam
popf
cld
xchg
lret
lret
pop
je
cmp
dec
dec
jp
sbb
sub
gs
add
cmp
lret
popf
or
lock
push
mov
cmpsl
lds
lods
lret
es
add
insb
sahf
lret
icebp
mov
lret
xchg
mov
js
jnp
lods
mov
cmc
jmp
out
dec
fistpl
push
jnp
aam
jg
cld
out
dec
mov
cmpsb
in
push
ja
lret
jl
xor
lcall
pushf
mov
int3
shrl
mov
cmp
push
test
xchg
rol
aad
sub
in
scas
cmp
xor
lret
test
mov
mov
push
outsl
pushf
push
dec
lret
xor
pop
test
stc
or
or
pop
pop
lea
into
dec
jmp
xor
loopne
adc
leave
dec
fsubrs
lret
mov
pushf
cmc
push
lret
mov
insb
xlat
lret
cld
ja
xor
sbb
lahf
fistl
jae
stos
cmc
mov
xchg
aam
fwait
xor
loope
cmp
int
mov
adc
repnz
popa
inc
or
stos
mov
dec
mov
dec
xchg
and
and
icebp
cmp
jne
mov
xor
push
cmpsl
xor
lret
jbe
mov
cmpsb
popf
lret
inc
jo
data16
lret
cmp
stc
jno
mov
out
call
dec
imul
mov
inc
inc
xchg
lret
lea
mov
jg
mov
enter
jo
lret
sub
lret
pop
imull
xchg
insl
cli
pop
mov
inc
and
ficompl
stos
pop
ljmp
loop
dec
dec
add
stos
lcall
test
std
fsubrl
mov
cmp
cmpsl
pop
repnz
imul
dec
mov
ficompl
imul
rcrl
movsb
lret
hlt
pop
orl
lret
clc
sbb
insl
cmpsl
lret
mov
cwtl
lret
cmp
inc
push
lods
jns
stc
out
xor
jp
hlt
sub
add
jl
lret
push
stos
mov
sbb
lret
mov
or
mov
shrb
xchg
push
sub
lret
jmp
mov
push
in
pop
push
fcmovnb
int
adc
add
fisubrl
enter
dec
lret
call
jl
push
or
clc
stos
dec
shl
out
inc
aad
adc
cli
lret
int
lahf
jnp
and
lret
popa
pop
loopne
xchg
lcall
push
fs
fcomps
mov
mov
leave
cltd
addr16
pop
aad
es
cld
xlat
imul
push
out
les
int3
pop
pop
sbb
sub
popa
sbb
jg
mov
lahf
movsl
dec
lret
popf
mov
jns
in
into
leave
int3
pop
movsl
jbe
lods
test
insb
adc
imul
jb
jae
inc
mov
lret
push
mov
dec
cs
inc
cmc
std
out
and
out
mov
js
scas
fiaddl
cmp
rorl
rclb
sbb
lret
cmc
fwait
icebp
push
stc
adc
push
lods
jmp
inc
jmp
pop
cmp
pushf
stos
dec
lret
stc
pop
gs
fmull
lret
scas
xchg
pop
cwtl
jmp
push
out
rclb
and
data16
sti
lret
popf
sarb
jecxz
inc
lret
fistpl
test
nop
lahf
std
mov
lret
pop
mov
mov
das
adc
shrb
popf
inc
add
add
add
dec
inc
ficoml
test
popa
fisttpll
sub
pop
sbb
push
movl
popf
les
mov
mov
int3
pavgb
pusha
mov
testb
clc
lea
xor
cmp
mov
mov
movl
adc
test
mov
sub
aad
dec
rolb
enter
sub
pop
psubw
es
mov
inc
leave
mov
cmp
lret
pop
shrb
xchg
and
xchg
loop
mov
lret
sub
adc
popf
pushf
ret
lea
and
ficoml
dec
les
dec
lret
add
add
xchg
lret
lods
pop
xchg
pop
stos
nop
lret
sbb
lret
mov
fsub
ljmp
xor
mov
cmpsb
inc
cs
scas
rcl
mov
mov
push
int3
mov
fwait
cs
rclb
lcall
int
dec
add
shlb
mov
cs
stos
sahf
cmp
add
cmpsb
movsl
pop
cmp
push
xor
mov
lret
fwait
daa
leave
push
lret
mov
pop
lret
jl
mov
xchg
fsubr
js
sbb
popa
aam
lret
cmpsb
pop
in
adc
inc
rclb
pop
mov
ret
popf
lret
negl
add
fwait
ds
rcl
cmp
sub
sbb
mov
mov
add
pop
dec
pop
cs
fmuls
inc
lret
jg
pop
adc
xchg
sub
and
fwait
xor
movsl
sar
in
add
jmp
push
push
fs
ljmp
iret
inc
jnp
lcall
push
ret
jge
cmp
rorb
test
lea
insl
bound
rcll
xchg
push
in
lret
lock
dec
sbb
dec
push
cmpsl
fdivrs
stos
mov
je
mov
jns
jle
inc
adc
jg
or
push
pop
push
test
fsubs
stos
xchg
test
int3
lock
lret
cmp
rcll
fdivl
notl
add
cmp
xlat
mov
dec
mov
popf
lret
and
imul
lret
in
jmp
mov
popf
mov
rolb
cmp
int
jge
mov
rcl
adc
pop
xchg
sub
add
mov
xorl
outsl
std
mov
cmp
enter
into
sbb
pop
mov
xlat
loope
imul
lret
and
sti
cld
inc
jp
cwtl
cmp
xlat
mov
pusha
and
sarb
adc
push
cmpsb
lret
popa
sarb
arpl
cmp
mov
cmp
loope
ja
cmpsb
xchg
jno
lret
push
cltd
adc
out
inc
fisttpll
insl
mov
pop
adc
lret
jns
inc
inc
jp
cli
mov
jmp
loop
nop
sbb
lretw
xor
mov
push
cmpsb
ljmp
sbb
add
xor
out
ds
and
hlt
outsl
xchg
mov
mov
iret
cli
and
jl
data16
adc
sbb
iret
xor
in
lret
lcall
dec
lods
or
xchg
push
stos
mov
lret
push
std
cmp
sub
jl
lret
inc
ret
xchg
xchg
lret
jp
push
push
je
cmp
inc
stc
sbb
aam
ja
push
lret
add
xorb
lret
outsl
adc
jge
push
lret
xor
in
mov
test
pop
mov
xchg
push
cmp
and
xlat
insl
movsl
adc
lret
flds
push
pop
add
sbb
stos
lret
jl
pop
mov
mov
out
adc
out
push
pushf
into
rclb
or
cmpsb
lahf
fiadds
pop
mov
lret
pop
aas
das
imulb
mov
pop
ror
add
dec
push
jb
xchg
das
cmp
cmp
mov
mov
shl
add
pop
js
cld
jmp
jo
mov
mov
jne
popf
js
lret
xchg
in
dec
std
cwtl
lret
out
push
pop
pop
ss
and
xor
imul
lret
orb
gs
lret
xchg
sahf
xor
dec
jo
or
xor
adc
jge
push
out
jp
ja
add
mov
lret
scas
scas
mov
test
lret
add
mov
xlat
lret
sub
dec
and
lret
std
ror
pop
inc
es
lret
dec
loope
subl
stos
mov
lret
mov
mov
fcompl
cld
leave
int3
dec
in
add
ljmp
imul
insl
call
lret
xor
aaa
outsl
bswap
sub
std
stos
addr16
flds
lret
inc
xor
lret
icebp
out
outsl
pop
sub
lods
mov
and
stc
lret
aam
shl
add
lret
bound
test
adc
sbb
cmp
insl
or
iret
or
fisttpll
push
jbe
cmp
sbb
repnz
pushl
js
in
mov
outsb
shrl
insl
clc
cmp
pop
xor
cli
pop
pushf
push
sbb
xor
lret
push
push
jl
dec
cmpl
mov
sub
nop
jbe
or
ret
lret
mov
pop
add
sbb
fcomps
push
or
cli
lret
xchg
ficoml
mov
ret
adc
lret
sbb
add
lea
sbb
cli
jle
lods
iret
fsubrs
sbb
lret
test
stos
testl
jle
fidivl
mov
mov
cmpsb
jg
stos
fucomp
cli
mov
fsubs
and
lock
and
fildl
mov
loop
inc
pop
push
in
adc
lret
add
call
xor
mov
mov
mov
into
lret
lds
lret
cmpb
fidivl
mov
sub
loope
insb
mov
mov
lret
pop
mov
xchg
adc
lret
mov
jge
lds
fcomps
in
in
pop
jno
roll
lret
inc
stc
inc
imul
mov
cmp
mov
clc
pusha
cmp
rolb
roll
inc
and
jl
sub
sub
jne
cmpsl
push
fsts
push
test
pop
aaa
lret
addl
out
cltd
inc
mov
xor
cmp
inc
jbe
and
adc
or
sbb
stc
pop
int3
fs
insb
cmp
lret
icebp
pop
pop
repnz
jl,pn
cmc
pop
out
mov
mov
cmp
fs
mov
cmpsl
in
dec
and
push
sbb
fstl
xor
dec
and
mov
repz
fildll
mov
inc
mov
add
lret
dec
loopne
mov
outsb
pop
or
stc
cmpb
repz
mov
popa
sub
and
mov
nop
fsubrl
leave
test
mov
dec
inc
mov
and
lea
fcoml
enter
arpl
mov
lret
ds
adc
xor
negb
jge
lret
inc
repz
or
push
cwtl
nop
dec
add
lret
hlt
push
adc
inc
ret
jge
outsl
lret
xchg
dec
jecxz
fdivrs
popf
stos
cld
rcl
fwait
push
mov
popa
popa
lret
stos
push
and
shl
xchg
or
fidivrl
stos
mov
dec
movsb
lret
xchg
cmp
push
pop
xchg
imul
roll
ljmp
into
sbb
std
lret
insl
js
int
shlb
xlat
or
adc
cli
push
mov
pop
dec
mov
sbb
int3
jae
lock
stos
xchg
call
mov
jecxz
cltd
repnz
jl
push
add
jne
jnp
xchg
lret
jge
movsb
arpl
dec
sbb
or
ficoml
subl
stos
fcomps
ss
out
adc
jb
jg
push
mov
call
lret
push
mov
in
dec
ret
mov
cli
adcb
enter
xor
sar
insl
rep
aam
fwait
movsb
scas
rorb
pop
lret
xor
lahf
xor
lea
and
or
lret
bound
mov
lcall
cwtl
shrl
cli
sub
sbb
mov
cmpsl
lret
ror
mov
lahf
mov
push
lret
movsl
gs
enter
cmp
mov
popf
jecxz
or
icebp
mov
js
add
popf
cli
push
in
lods
xchg
pop
lret
dec
push
pop
jbe
lret
adc
cli
out
mov
je
pop
lret
data16
jecxz
shll
test
mov
std
pop
or
lret
mov
gs
cltd
jb
push
push
int3
cmp
and
lret
pop
icebp
call
cmp
bound
xchg
cmp
jle
lret
jbe
outsb
xor
xchg
gs
movsb
es
push
lock
lret
mov
test
in
lea
xchg
inc
insl
aad
ror
pop
in
pop
cmpsb
pop
or
cmp
loope
mov
mov
add
mov
sub
das
rcrb
inc
xchg
lret
xor
mov
xor
paddusb
mov
ja
pushf
addr16
and
movsl
jb
mov
fwait
mov
fmull
hlt
clc
scas
lret
mov
test
inc
es
movsl
push
addr16
andb
mov
mov
mov
js
cmp
stc
cmp
jp
pop
push
and
fcmovnbe
push
aad
pop
lods
cmc
push
lret
xchg
cmp
add
imul
ja
lret
les
das
sti
lret
cmp
mov
insl
jle
sbb
lret
xlat
and
lret
aaa
sahf
dec
cs
lock
push
cmpsl
mov
lret
ficoms
sub
pushl
aad
es
fldenv
mov
add
cld
sbb
popf
cvtps2pd
daa
sub
bound
imul
subl
loope
js
adc
jbe
jg
in
cli
icebp
inc
dec
cmp
xchg
lret
cmc
adc
movsl
nop
xor
mov
jmp
push
mov
and
lret
and
rorb
shrl
lret
js
test
ljmp
out
cld
mov
sbb
pop
jnp
in
into
mov
imull
lret
es
xchg
aaa
dec
ficoml
ja
jns
adc
sub
mov
xor
mov
mov
pusha
dec
mov
adc
in
aam
lret
aaa
mov
cltd
and
into
and
dec
lret
mov
jne
sahf
lret
leave
xor
fildll
scas
cli
rolb
add
sub
test
adcl
lret
cmp
popf
pop
push
lret
jb
jno
ror
ds
pushf
shrb
out
lret
jp
popa
lret
adc
mov
mov
sub
xchg
call
pusha
repnz
nop
xchg
xchg
jmp
fs
xor
lret
push
cmp
or
lret
jge
inc
xor
jl
bound
flds
out
sahf
jb
mov
stos
push
mov
adc
jnp
lods
mov
mov
mov
pushf
or
mov
rcrb
cmp
cli
jo
out
ret
xlat
xchg
int
mov
movsb
cmp
mov
iret
insb
lret
push
pop
lret
outsb
push
inc
jg
fwait
lret
xchg
add
lret
shlb
mov
dec
stc
lret
pop
mov
xor
lret
out
jmp
xor
lret
mov
mov
sbb
mov
lods
and
and
int
lret
cmc
dec
lret
loope
test
xchg
cmp
mov
je
pop
or
and
cmpsl
mov
decb
sbb
sbb
rolb
add
dec
push
in
jno
xchg
lret
cmpsl
xchg
out
jae
lret
fxch
into
dec
mov
mov
icebp
add
cmp
out
pop
repnz
add
push
pop
sub
jns
push
mov
mov
jbe
rolb
iret
mov
adc
call
lock
add
or
int
mov
push
test
dec
sub
aad
out
ror
or
dec
ja
lret
lock
sub
in
fstps
ror
test
mov
cs
insl
mov
push
and
dec
iret
push
pop
xor
lret
mulb
lods
sub
in
and
les
add
pop
ds
mov
ja
movsb
popa
lret
jecxz
pop
pop
shll
fidivrl
mov
mov
repnz
and
dec
xchg
bound
mov
sbb
insb
inc
fdivs
daa
sbb
sar
add
pop
sub
xchg
loopne
inc
xchg
enter
mov
jge
subl
lret
cmc
andl
lods
add
push
cmpsl
popf
lret
mov
ljmp
pop
jle
cmp
push
fcoms
rclb
sub
cli
pop
dec
rclb
test
lret
hlt
lds
sahf
dec
mov
mov
fldt
mov
pop
std
test
into
call
lret
les
popa
sarb
lret
pop
shrb
push
std
adc
fwait
push
pop
mov
add
cli
cmp
mov
adc
lret
cmpsb
arpl
aaa
pushf
or
scas
cmp
aam
mov
lock
sti
scas
hlt
lret
test
into
adc
out
add
outsl
loope
and
mov
mov
cmpsl
sub
pop
cmpb
aad
jo
cs
clc
insb
aaa
sbb
lea
jmp
lret
movups
test
xor
jg
testl
sbb
and
push
mov
aas
stos
mov
cmp
nop
or
dec
in
icebp
mov
pop
shlb
xchg
pushf
or
add
int3
lds
subl
rorl
xor
lret
dec
mov
stos
inc
movaps
mov
push
sbb
mov
test
push
scas
repnz
enter
xchg
xchg
idivb
sub
or
hlt
test
sbbb
xor
out
and
jg
xchg
lock
daa
mov
lret
push
jp
xchg
mov
divb
mov
out
sbb
fimull
and
mov
jmp
jnp
jge
dec
mov
stc
and
cmp
or
mov
cli
lea
in
adcb
inc
mov
lret
jmp
sarl
sbb
pop
daa
add
iret
inc
mov
outsl
lret
movsl
inc
jl
fcompl
lret
in
adc
fs
push
xchg
jae
test
xor
test
xchg
mov
push
mov
fmul
sub
sahf
das
push
jno
adc
inc
or
ret
push
xor
sbb
scas
push
mov
push
jge
lret
test
cmp
shll
xlat
or
testl
jp
pop
stc
dec
rcrb
insl
cmpsl
and
mov
sub
test
cmp
mov
fdivs
pop
lret
jge
sbb
dec
fstpl
pusha
pop
leave
lret
mov
dec
mov
lret
lods
inc
mov
mov
addr16
add
mov
cli
sbb
sbb
pop
or
pop
ror
neg
movl
jnp
ljmp
cmp
shlb
sahf
in
rolb
adc
lea
fbstp
lret
jmp
adc
dec
arpl
cmp
jnp
or
ljmp
adc
sarb
jne
and
jp
lret
dec
cmp
or
mov
cmp
bound
aaa
jno
in
cmp
pop
inc
add
cmp
push
pop
adc
add
std
das
jl
test
jecxz
iret
xor
movsl
lret
pop
or
and
lock
mov
xchg
popf
cli
adc
mov
jnp
popf
mov
sarb
cmc
dec
lret
adc
enter
lret
cmp
jo
sub
mov
out
in
ret
inc
jge
fcmovnu
xor
or
mov
outsl
lret
pop
inc
jne
fcmovne
insb
add
mov
mov
std
mov
xor
sarl
cmc
into
sarl
pushf
int3
adc
jg
push
testb
lret
or
test
xchg
sti
aad
inc
mov
iret
xchg
data16
mov
in
jnp
mov
sub
lret
xchg
lods
dec
jge
hlt
mov
adc
js
mov
imul
cli
dec
inc
sbb
lock
adc
push
mov
aam
ljmp
cli
xor
cmp
pop
and
fiaddl
pop
insb
sub
xchg
cmc
int3
inc
test
or
mov
lret
mov
lock
aam
cli
stos
iret
sar
cltd
sar
cmp
push
pop
ror
jns
xchg
and
lret
sti
subl
les
lret
lahf
es
jecxz
xchg
xchg
pop
push
jns
jb
popa
or
xlat
sahf
js
cltd
sarl
rorl
cmp
xchg
add
imul
mov
cmp
insl
out
rcrb
outsl
or
repz
add
dec
lods
aas
adc
lret
or
iret
add
rclb
mov
rol
fwait
sub
jp
dec
xchg
into
cmpsl
jg
jmp
mov
clc
jns
test
das
dec
sub
scas
enter
xchg
xchg
dec
and
jns
push
lods
lret
cmp
sbb
loop
cmpsb
push
repnz
jo
ja
dec
stc
dec
jbe
pop
mov
pop
mov
lret
lods
dec
jp
and
and
sub
lods
cmc
mov
pop
cmpsl
mov
cli
ljmp
subb
rol
xchg
mov
shrl
sub
lret
gs
pop
lret
push
and
sti
leave
sahf
sbb
xor
push
shl
or
lret
pusha
mov
mov
cwtl
enter
lret
xchg
pop
sub
jbe
fcomps
lret
in
aad
cli
push
sbbb
movl
out
cmp
pushf
and
cmp
cwtl
rcrb
lret
jp
fnstenv
pop
imul
xchg
add
mov
lret
sbb
lret
add
lods
push
mov
in
jle
lret
movsb
sbb
cmc
call
popa
cmp
arpl
idivl
popf
jb
xorb
sbb
std
or
shll
dec
push
push
in
push
sub
icebp
dec
pop
aas
lret
cld
neg
pop
xchg
fmul
cli
xchg
inc
pop
ljmp
jg
loop
jae
shlb
push
test
lret
aaa
pop
addr16
xor
push
out
xchg
xchg
jmp
fwait
jge
or
mov
push
pop
xor
lret
sub
dec
dec
adc
lret
jp
inc
and
jmp
add
lret
lahf
cmpb
bswap
pop
and
data16
and
testb
fdivrs
lret
jle
outsb
push
and
xchg
sub
sub
cltd
int3
ror
pushf
aaa
cs
aas
push
aad
mov
lret
adcl
lock
in
shr
mov
fidivrl
mov
adc
push
sbb
mov
pop
ss
cmp
cwtl
stos
dec
xchg
jecxz
sub
cmp
int3
les
mov
lods
fcomp
adcb
iret
ds
lret
inc
out
ss
inc
mov
frstor
test
mov
rorb
arpl
loop
xchg
gs
xor
xchg
lret
and
icebp
xor
shlb
imul
pusha
dec
rcrb
or
cli
cmp
outsl
hlt
add
callw
cmpsl
cmpl
push
int
jnp
mov
cli
push
test
lret
or
gs
hlt
in
cltd
sub
lret
in
push
fnstsw
lret
or
cmpl
sbb
shll
loopne
push
lock
lret
mov
ljmp
cltd
dec
fs
insl
or
sub
cmpl
mov
rcl
mov
stos
sub
rclb
and
pop
lret
test
and
lret
shll
sub
cli
ds
icebp
test
push
sbb
les
adc
into
add
lret
jbe
add
push
mov
addr16
insb
pop
icebp
lds
cmp
lret
inc
mov
jp
mov
scas
lret
addr16
lret
rorl
loop
mov
sub
outsl
sub
lcall
je
hlt
aam
cs
xchg
daa
lea
pop
pop
xor
mov
icebp
mov
xlat
pop
lods
lret
sub
je
push
fadds
or
inc
push
sub
mov
cmp
cmp
jne
inc
mov
mov
ret
jmp
adcl
pop
sbb
in
idivl
push
outsl
stos
call
fwait
or
mov
js
lret
lret
push
add
popa
lock
fs
out
into
jp
inc
enter
pop
cmp
ficoms
lea
rcl
pop
add
neg
xchg
mov
lret
adc
lret
cwtl
test
jnp
or
xchg
ret
xchg
mov
xchg
lret
or
lret
add
call
rcl
bound
push
mov
pop
lret
jge
dec
shlb
lret
jnp
adc
decb
xchg
mov
mov
lret
lods
aaa
enter
mov
mov
add
aas
jp
xchg
fs
stos
dec
ljmp
cmp
fsub
xchg
std
sub
xchg
sbb
stos
mov
push
ror
lret
dec
out
mov
pushf
les
nop
xor
insl
testl
lret
or
inc
rol
lret
pop
decb
mov
cmpl
pop
lret
imul
roll
xor
dec
cs
hlt
cltd
and
in
fistps
and
in
jne
enter
test
sub
xchg
sahf
jp
ret
jl
lret
sbb
xor
jb
repnz
dec
pop
xchg
adc
lods
cmp
xor
xchg
sub
js
fwait
pusha
stos
std
add
xchg
cmp
aad
cltd
pop
lret
test
mulb
int
cmc
aad
pop
pop
pop
xor
sti
adc
mov
add
sahf
sub
mov
push
mov
or
mov
inc
xchg
lock
out
mov
push
pusha
cli
movsl
and
push
add
daa
fwait
lcall
cmp
popf
insb
mov
add
mov
mov
mov
ss
push
mov
pop
lret
push
jns
ljmp
call
or
mov
lret
sub
stos
sti
dec
push
pop
xchg
jmp
rcrb
jae
mov
jbe
cmc
jmp
out
out
push
mov
sbb
push
movsb
pop
shlb
lock
lret
xchg
popa
or
ficompl
dec
mov
mov
mov
sbb
lret
mov
and
outsl
cmp
aad
les
test
fmuls
popa
lcall
lock
push
mov
xor
mov
cmp
mov
or
outsl
in
cmc
fimuls
cmp
lds
mov
jl
dec
sub
lret
push
stos
loope
xchg
lret
pop
adc
call
loop
jp
mov
lret
pop
xchg
aas
fisubs
outsb
or
pop
lret
out
cmp
shll
push
mov
and
dec
mov
shll
ljmp
lret
sbb
sbb
inc
rcrb
ja
sarb
std
push
lret
shlb
test
cwtl
adc
jge
mov
jecxz
jbe
dec
pop
cmpsl
inc
fidivl
call
roll
cmp
xchg
pop
cmp
fnsave
dec
pop
and
iret
out
cli
lods
lret
mov
les
clc
dec
je
cmp
stos
popf
xorl
inc
stos
mov
push
mov
xchg
ja
lret
iret
enter
lcall
das
mov
jge
mov
sub
mov
mov
or
addr16
sbb
cmc
fwait
jbe
pop
ljmp
push
fisttps
gs
and
out
mov
cmc
jo
fisttpll
sub
pop
in
int3
mov
mov
push
insb
cmc
pop
nop
xor
dec
ja
cld
jo
in
or
std
or
lret
test
orb
lret
stc
lahf
hlt
adc
mov
test
mov
insl
lret
lock
inc
gs
aas
xchg
and
or
movsl
inc
push
outsl
aad
xlat
mov
mov
loopne
fs
test
shr
ss
xchg
aam
out
cmpsb
das
insb
mov
mov
push
movsb
mov
push
ja,pt
lret
sbb
cwtl
pop
add
out
push
mov
push
mov
je
and
push
or
test
mov
jnp
push
pushf
adc
lret
rorb
dec
in
fcoms
in
jbe
lods
cli
pop
test
fsubs
sub
mov
pop
enter
mov
cmp
add
jne
aaa
or
dec
lret
dec
push
enter
popf
jecxz
cmp
cmp
rcll
out
popf
fiaddl
rclb
xchg
jge
inc
outsl
cmpsl
jns
rcr
aad
imul
xor
sbb
shlb
mov
and
cld
lret
inc
pop
add
add
lods
enter
push
lret
test
cmp
jp
sbb
mov
out
mov
jle
cmp
in
and
pop
lret
sbb
popf
sahf
loop
lret
js
mov
jl
xor
or
dec
jae
dec
mov
ss
das
rorb
cmp
push
icebp
xchg
sub
iret
test
fs
inc
repnz
add
fstpl
notb
lret
fbld
lret
ret
sbb
cs
xor
mov
sub
fildll
mov
std
hlt
and
lcall
pop
and
fidivrl
fstpt
mov
cli
aaa
mov
push
sbb
inc
mov
add
sub
lret
xor
lahf
pop
fwait
rcll
push
call
into
mov
ja
dec
rorl
xor
fsubl
shlw
stos
dec
pop
and
jne
aaa
adc
mov
mov
add
inc
adc
aad
lret
cmp
or
sub
lret
cld
xchg
and
sbbb
jmp
adc
fisubs
fcomp
lock
push
jnp
xchg
into
cmp
add
lods
lret
popa
js
xor
roll
xchg
cld
lret
jns
loopne
cmp
push
adc
and
mov
jg
es
add
xor
cltd
inc
sub
push
or
mov
leave
sbb
mov
cli
push
xor
push
lahf
jge
shrl
aam
mov
lret
pop
shrl
mov
test
cmpsl
movsl
scas
lret
dec
add
push
insb
fdecstp
cmp
cmp
cmp
imul
pop
pop
add
lret
popf
inc
xor
inc
lret
test
mov
mov
fsubr
pop
cltd
cmp
xor
dec
cmp
daa
stos
repnz
and
mov
cld
push
xorl
jnp
xor
and
jecxz
mov
lret
jge
in
outsb
push
inc
lret
je
add
xor
pop
adc
aaa
inc
mov
xor
mov
scas
add
lret
mov
ror
jb
push
cwtl
ficoml
add
pop
repnz
mov
aas
jmp
jnp
lret
and
cld
and
dec
adc
ror
orl
mov
sbb
adc
fsubs
aaa
dec
push
fwait
iret
mov
shr
xchg
out
or
pushf
xor
fmuls
cmc
inc
stos
shrl
shlb
jecxz
lret
xchg
cld
mov
les
xchg
ljmp
and
mov
push
aas
lret
stc
divb
xor
lret
fmul
sbb
lret
sahf
rolb
dec
xchg
cmpsb
lret
add
mov
js
add
cmp
mov
cli
add
xchg
ror
stc
aad
lret
push
int
mov
ss
adc
xor
insl
ljmp
xor
fstpt
lret
ds
add
repz
outsl
fldcw
xchg
lret
xchg
inc
jmp
mov
fwait
imul
int3
dec
outsb
repnz
test
xchg
outsl
icebp
jb
or
push
pusha
lret
in
dec
loopne
cli
sahf
fidivrl
and
cltd
mov
jb
push
ficompl
rorl
mov
mov
xchg
mov
push
addps
mov
ja
cld
mov
sbb
insl
lock
lret
mull
inc
mov
mov
adc
lret
lret
mov
push
lret
mov
lret
or
ret
jl
sbb
mov
jbe
pop
xlat
cli
addr16
std
imul
fidivs
sbb
jmp
dec
lret
out
mov
dec
dec
lret
test
pushf
fisubrs
lret
xor
xor
lret
outsl
inc
sub
lret
std
mov
mov
fidivl
psrld
in
dec
stos
adc
ret
lret
sub
std
push
arpl
out
loope
imul
lret
mov
push
hlt
cmpl
mov
cmp
lds
dec
mov
lods
cmp
inc
cs
mov
mov
stc
pop
imul
cmp
xor
inc
dec
cmpsb
mov
aas
pop
test
stos
mov
xchg
lret
mov
push
popa
cli
mov
vhaddpd
and
jno
xor
mov
pop
bound
aas
jl
in
das
nop
imul
in
call
push
xlat
push
sbbl
pop
out
pop
add
sub
mov
mov
mov
push
scas
aas
push
sub
cmpsl
test
adc
loope
xchg
inc
dec
lret
nop
out
mov
fisubrl
call
scas
cmp
and
and
in
out
add
aam
inc
outsl
add
lret
xchg
add
mov
enter
clc
mov
jae
rcrb
pop
adc
lcall
inc
icebp
pop
inc
imul
mov
or
imull
lret
out
insl
push
add
xor
lret
loop
dec
das
inc
ljmp
in
or
lds
mov
in
adc
sbb
push
mov
mov
ret
lret
popf
jb
lahf
or
jns
mov
cmp
sub
loop
aas
loope
cwtl
orb
lock
repz
xchg
jb
fisubrl
fwait
stos
push
rol
lret
xchg
push
add
lret
jecxz
out
push
pop
outsl
xchg
xor
lock
dec
cmp
repnz
xchg
adc
fstpl
ss
enter
or
jle
sbbb
and
pusha
popa
or
lret
add
pop
dec
xchg
jno
fwait
and
add
mov
sbb
ror
mov
sbb
xor
mov
jo
loop
scas
icebp
mov
fdiv
addr16
cmpsb
inc
mov
out
jne
aas
xor
mov
jmp
shlb
lret
mov
pop
jge
in
mov
lret
dec
cmp
pop
fidivl
daa
mov
fists
mov
push
stos
and
adc
fdivr
rol
pop
jl
adc
idivl
pusha
and
shlb
mov
or
mov
lret
mov
xor
aad
addb
or
jns
push
adc
sub
add
ljmp
cmpsb
or
out
push
xlat
fdiv
pop
jge,pn
cmp
das
push
bswap
inc
sub
xchg
popf
test
jo
push
shll
imul
scas
repnz
or
sub
adc
xchg
jnp
jge
mov
push
inc
fldenv
inc
loope
cli
adc
das
stos
xchg
fs
xchg
cmp
pop
xor
cmp
arpl
jo
sub
test
lret
jns
mov
cld
insb
lret
clc
sub
pop
mov
mov
sub
aam
cmp
and
lahf
movsl
pop
bound
add
int
pop
lret
push
lods
mov
xor
cltd
xchg
inc
shlb
jl
jnp
mov
cmp
jg
fidivrl
cld
lds
and
mov
cs
cmpsl
pop
hlt
test
mov
mov
mov
or
mov
pop
lret
lods
mov
or
xchg
dec
sub
je
jb
add
mov
inc
cli
int3
mov
gs
adc
std
mov
shrb
in
xchg
lret
pop
adc
int
arpl
pusha
cld
jg
pop
and
mov
in
std
and
daa
lret
push
inc
and
imul
shrb
jne
add
xchg
xor
arpl
mov
dec
lret
cmp
sarl
in
rorb
cmp
mov
cld
shll
pusha
xchg
insb
adc
lds
daa
lret
int3
hlt
pusha
mov
mov
ret
and
aaa
jmp
movsb
dec
xchg
andl
insb
lret
fwait
mov
lret
pop
mov
mov
aad
sub
sub
sbb
mov
adc
aas
or
push
stos
or
insl
jp
push
cli
dec
xchg
in
ja
jle
xlat
and
adc
sub
mov
pop
orl
faddl
pop
test
ljmp
loope
sbb
or
sub
add
cmp
jbe
lret
sbb
add
mov
sarb
pop
inc
jo
jge
aam
xchg
and
cmpsl
or
sbbl
mov
dec
mov
in
lret
push
sbb
fadds
cwtl
sub
stos
and
inc
insb
call
jmp
pop
das
ja
fcmove
pop
add
push
lret
loopne
shlb
and
popa
fmul
cwtl
dec
jg
aas
pop
mov
jp
pop
adc
ljmp
sbb
and
cmp
lret
jp
lds
mov
cwtl
sub
int
mov
test
mov
aaa
add
or
sbb
and
jb
out
cltd
cmovae
xlat
test
cli
hlt
insl
sub
lcall
or
aaa
mov
or
cld
adc
xlat
xchg
ret
sub
cld
fsubrl
dec
pop
movsb
xchg
and
stc
cltd
jns
div
fdivrl
inc
xlat
stos
mov
rorl
call
repz
arpl
shlb
add
lahf
loopne
aas
fidivrs
jne
inc
cmp
inc
jg
cmp
sub
stos
push
lret
rolb
ja
std
inc
lcall
add
pop
fdivrp
jge
ljmp
into
or
dec
lcall
pop
cmp
lret
dec
arpl
lret
mulb
es
cli
mov
aaa
or
xor
iret
xchg
push
lret
lods
clc
pushf
ret
and
mov
mov
insl
xor
lods
movsb
mov
cmc
ret
xlat
inc
es
rorb
xchg
jae
push
test
xchg
shr
outsl
pop
mov
xor
mov
lods
adc
cmp
pop
loop
lret
fmulp
or
mov
out
sti
pop
gs
push
add
dec
stos
sbb
movsb
jmp
push
subb
inc
idivl
mov
jo
jnp
aaa
addb
adc
js
push
and
popf
int
scas
lret
inc
aaa
jl
jle
lret
add
jb
pop
pop
cmp
ds
lret
ficoml
mov
mov
aaa
std
pop
sbbl
xchg
add
push
xor
cli
in
jae
shr
add
xchg
lret
ret
add
jnp
mov
out
mov
sbb
lock
cld
mov
add
imul
jbe
ljmp
and
lret
jne
in
pop
cli
in
jp
xchg
sbb
push
or
popf
ja
scas
cwtl
movsb
lret
xchg
mov
mov
or
mov
iret
ds
movsb
lret
in
jbe
or
lods
not
insb
cmc
mov
rorb
cmp
leave
iret
cmp
shlb
xchg
cmp
lret
arpl
dec
mov
adc
cli
pop
test
sbb
lret
xchg
dec
mov
enter
adc
sub
ret
stos
cli
movsb
cmp
les
mov
and
cmp
sub
imul
popa
ret
sbb
jb
jecxz
cwtl
xor
movsb
fimull
or
and
outsl
pop
fwait
push
lret
test
xor
xchg
and
xchg
insb
into
push
dec
mov
mov
lret
popf
xchg
xor
cmp
jb
aad
sarl
lret
cmp
sti
or
lret
testl
lret
mov
mov
lret
fs
push
dec
sbb
pop
aam
mov
into
fists
fidivrl
mov
jbe
pop
out
gs
mov
xchg
lret
or
cmc
mov
out
cmp
clc
in
push
icebp
pop
cld
mov
fsubrs
mov
movsl
dec
cltd
pop
lret
sub
rcll
dec
sbb
dec
iret
icebp
add
xlat
ljmp
mov
insl
mov
inc
dec
test
lret
pop
add
inc
stos
push
lret
mov
xlat
inc
stc
lret
cwtl
repz
jb
cmpsb
lods
cmp
adc
mov
test
mov
imul
lret
outsl
filds
cmp
mov
les
lret
addr16
dec
push
lret
xchg
das
rolb
loopne
sbb
push
stos
cmpsb
jbe
je
lret
shrl
xchg
into
xchg
fwait
nop
mov
imul
rcr
pop
jnp
adc
repnz
sub
out
test
pop
sbb
mov
test
into
decl
cmpsl
cmp
or
push
fdiv
fistl
int
cmp
jp
inc
sbb
js
pusha
call
push
cmp
pop
xor
pop
mov
xor
stos
mov
or
jbe
xchg
pop
repnz
loopne
inc
sub
shlb
or
push
or
nop
lret
ljmpw
push
push
mov
and
bound
cli
repnz
xor
push
and
jne,pn
je
adc
ret
test
in
mov
stos
loop
movsb
add
cmp
lahf
loope
cmp
int
push
mov
sub
lcall
aaa
inc
sub
mov
dec
jne
adc
in
pop
lret
sbb
jmp
sbb
add
notl
mov
es
fcoms
fwait
cmpsl
js
lret
cmp
push
lret
inc
mov
aaa
lock
lret
cmp
leave
jae
fidivrl
frstpm(287
push
sub
call
arpl
lret
das
leave
jne
push
addr16
gs
cltd
xlat
xchg
xlat
xor
cwtl
push
push
sahf
stc
sarl
mov
lret
or
stos
loope
sti
rcl
adc
or
mov
xor
repnz
dec
push
cmp
dec
stos
inc
insb
jae
aam
insl
jge
stos
lret
fdivs
movsl
rclb
fwait
adc
push
js
mov
cmp
pop
sbb
push
mov
adc
ret
test
mov
lds
ss
mov
int3
jecxz
inc
sti
xchg
ss
cmp
and
lret
mov
and
repnz
xchg
mov
rol
aam
mov
push
xor
sbbl
lret
fdivrl
js
mov
insb
fldt
imul
xchg
xchg
xlat
fwait
mov
lret
push
or
insl
lret
adc
inc
adc
pop
stos
shrb
cmp
adc
mov
dec
arpl
sti
push
and
lret
sub
gs
lret
push
jae
jle
mov
push
xchg
lock
dec
mov
lret
sbb
stos
or
mov
popf
sub
nop
lret
decb
lret
mov
mov
addb
rcr
dec
arpl
push
lret
mov
int
cli
addr16
add
xor
sbb
lret
pop
jl
lret
or
ficomps
cmp
pop
fs
lret
daa
sbb
lahf
inc
jae
jo
aam
inc
lret
mov
or
cmp
stc
stos
sbb
and
jbe
clc
loope
mov
cmp
lods
cli
ret
cmp
aam
int3
push
pop
std
out
mov
imul
jno
sub
scas
data16
cli
and
mov
std
or
out
pop
fxch
loopne
cmp
and
jg
cli
adc
adc
add
cmc
fcoml
cli
scas
jae
aad
push
orl
mov
mov
scas
sti
mov
push
or
pop
into
xor
mov
js
lret
xchg
xchg
fiaddl
in
rol
outsb
fs
lret
dec
icebp
out
ss
dec
andb
into
aaa
mov
ret
leave
mov
std
mov
ss
and
push
rolb
mov
dec
lret
and
fwait
adc
xchg
push
cmp
mov
adc
add
and
lret
ds
sub
pop
test
imul
fadds
mov
outsb
push
push
dec
enter
fcmovu
out
shr
lea
xchg
ret
aad
inc
lret
add
pusha
lret
in
mov
int3
mov
jbe
lods
andl
nop
ftst
mov
out
lret
xchg
sbb
lret
sahf
shr
mov
and
cmp
push
lret
lds
push
sbb
dec
loopne
add
mov
icebp
jl
xor
dec
jbe,pn
es
insb
test
push
cltd
jno
pop
dec
lcall
in
imul
outsb
jns
rolb
rorb
mov
stos
mov
push
inc
mov
sarb
cmp
jns
jmp
out
lret
jl
sbb
push
js
es
adc
ss
jne
lret
adc
mov
lret
cmpl
fs
in
jae
stc
xchg
mov
and
lret
nop
mov
lret
xchg
push
pop
cli
xor
lret
jg
push
out
lret
inc
sbb
dec
fimull
aaa
push
fst
cmpb
inc
lret
inc
cmp
ss
pop
dec
dec
cmp
nop
sbb
xor
mov
lret
ret
and
xchg
inc
lret
shlb
leave
jecxz
lret
mov
shll
lds
xchg
cmp
lea
lret
lcall
inc
icebp
sub
mov
mov
lret
lock
cmpsb
xor
lret
mov
sub
xchg
aad
mov
in
rcrl
popf
add
jle
pop
aaa
sahf
inc
cmpsl
lret
ljmp
mov
call
mov
pop
mov
movsb
divl
mov
xchg
ret
rcl
sub
dec
lret
ja
and
jns
in
aaa
cld
push
scas
mov
xchg
xlat
cmp
lret
mov
movsl
xor
xchg
push
aad
cmp
fs
xchg
loopne
loope
xorl
hlt
popa
jnp
adcl
jg
stos
inc
sub
xchg
cs
add
jge
sbb
mov
and
mov
rorl
jmp
rcr
jl,pn
cmpsb
fidivl
adc
popa
int
xor
dec
daa
lret
xor
lret
jbe
mov
out
push
mov
lret
daa
in
push
sbb
pop
popf
push
or
movb
push
roll
jmp
jl
push
and
lret
arpl
dec
add
jl
jmp
into
and
and
pop
lds
out
mov
rcl
sub
in
jnp
out
cmpsb
icebp
jle
int
lret
in
inc
adc
jg
test
jmp
imul
mov
lea
mov
xchg
ds
jns
push
lods
lret
int3
inc
jo
and
sti
mov
lret
or
cmp
xchg
inc
aam
cld
mov
or
push
lret
xor
sti
or
cmpsl
lret
addl
mov
jno
adc
aas
hlt
mov
xlat
push
cmc
mov
loope
stos
lcall
out
pop
add
fdivr
ljmp
loop
mov
out
or
and
pushf
add
fwait
add
push
xor
inc
and
push
int3
push
xchg
sbb
bound
adc
scas
xchg
sbb
lret
loope
push
imul
xor
pop
popa
aaa
shr
fimuls
dec
adc
lcall
inc
mov
pop
cs
adc
push
jae
lret
or
lret
test
fisubs
dec
scas
pop
pop
ret
lret
sbb
cli
mov
push
stc
insb
stos
cli
dec
in
aas
fdivs
mov
jne
call
pop
aam
sub
cmp
mov
lret
cltd
shll
push
sub
adcb
lret
cmovge
scas
stos
lret
pop
cmp
jno
ljmp
lock
fstps
out
pop
sub
mov
inc
test
sub
xchg
dec
xchg
cld
loop
inc
test
in
sbb
sub
mov
xchg
in
inc
rorb
pushf
sub
fs
mov
and
jne
stos
jg
outsl
stos
jmp
rcll
arpl
pop
inc
mov
shl
and
or
and
rcrb
pop
fldt
sbb
std
scas
pop
aad
shrl
mov
pop
mov
ds
or
shlb
mov
addr16
jns
or
scas
push
cli
fldl
mov
rol
jecxz
or
icebp
xchg
in
in
jae
xor
sub
cmp
js
out
pusha
je
add
lret
test
push
lret
sahf
mov
xor
fmul
xchg
ljmp
mov
push
into
out
lds
lods
gs
mov
call
mov
adc
clc
or
pusha
int
lods
push
xchg
ret
adc
fbstp
test
pop
pop
arpl
mov
mov
pop
icebp
xor
cld
push
repz
dec
call
lret
int3
mov
and
dec
dec
in
mov
ss
pusha
repnz
xchg
ret
fadds
sbb
ja
lcall
es
xchg
xor
outsb
add
inc
sbb
mov
out
shlb
push
push
ja
loop
or
cmp
jg
std
jne
cmp
adc
and
xchg
aam
test
add
fidivl
dec
rclb
rcrl
scas
cwtl
push
jo
inc
int
mov
lret
adc
and
repz
mov
mulb
insb
ljmp
into
popf
adcl
lret
mov
inc
mov
jbe
and
dec
lahf
xchg
xor
pushf
jb
mov
lret
icebp
cmpsl
cmp
add
in
notl
pop
nop
popf
dec
inc
mov
lret
insb
dec
insl
or
fidivrl
xchg
push
mov
add
cli
adc
cltd
aad
sub
ss
aam
and
inc
in
sbb
fyl2xp1
lods
push
mov
sub
test
lret
movsl
adc
push
lret
enter
jbe
jge
dec
shl
test
nop
push
xor
inc
sbb
stos
lea
pop
out
subb
inc
pop
sub
out
lods
sbb
xchg
lcall
adc
add
add
mov
lret
pop
xchg
fs
not
ret
mov
cmp
das
mov
ss
js
mov
lods
stc
aam
xchg
dec
loop
lret
rcr
mov
mov
and
xlat
mov
lret
loop
cmp
push
stos
lock
mov
xor
cli
xorl
mov
lret
lods
mov
lret
lcall
pop
add
push
fcoml
stos
pop
pop
jmp
xchg
xchg
in
fstpl
sar
push
cltd
outsl
fucompp
adc
lret
cmpsb
and
scas
mov
aam
ja
out
jle
and
sbb
test
ret
cmpsl
or
fincstp
ljmp
adc
lret
and
stos
xchg
jb
cli
test
cmc
pushf
repnz
ret
lret
add
push
mov
xchg
sbb
sbb
inc
scas
xor
adc
push
shr
cli
jns
xorl
xchg
push
sub
leave
lret
test
out
data16
nop
cmp
push
adc
fwait
ljmp
dec
dec
lret
lods
add
test
sti
jae
lcall
add
mov
inc
sbb
jae
js
ljmp
bnd
fisubl
loopne
sbb
add
dec
xorl
out
dec
push
std
pop
int3
aam
fcmovu
je
es
or
cltd
fildl
jbe
cmpsb
xchg
mov
pop
sub
add
stos
ret
xchg
aad
lret
push
or
aad
cmpsl
cmpsb
les
fcmovbe
and
stos
sbb
push
js
lret
pop
loopne
jecxz
xor
lods
inc
cmp
push
lret
sbb
mov
inc
int3
jno
fcmovb
add
push
cld
push
jbe
lret
imul
mov
repz
cltd
push
or
in
jne
das
es
fiaddl
dec
outsl
sbb
stos
push
push
sub
nop
dec
jns
cmp
or
mov
imul
mov
push
adc
sbb
mov
pop
fmulp
call
ret
repnz
enter
lret
jp
xchg
mov
aam
add
lods
xlat
xchg
fwait
mov
lret
fisubrl
mov
sub
cmp
imul
mov
cmp
inc
xor
fsubrs
and
add
int
xchg
push
pop
jp
jmp
add
dec
lret
push
and
jns
lret
dec
jbe
mov
lret
stos
inc
xchg
jb
mov
iret
pop
rcl
rclb
dec
xor
ljmp
shrb
lret
sbb
ss
jg
mov
push
lret
hlt
lock
shl
sbb
icebp
int
popf
ljmp
sub
inc
xor
ret
ljmp
add
aam
and
lret
cli
shll
mov
cmp
adc
lret
insl
in
je
inc
sahf
lret
add
enter
lret
into
loop
or
lods
lret
int
jo
out
cmp
xchg
mov
or
push
test
xchg
mov
jmp
adcb
mov
mov
ss
lret
arpl
mov
dec
xchg
dec
lret
test
iret
mov
mov
push
sub
movsb
jp
pop
test
jle
ds
lock
dec
imul
pop
stos
std
cmp
loop
in
mov
xchg
rolb
lret
dec
xor
push
xchg
push
or
cmpb
and
push
lret
mov
jp
fld
inc
lret
rcrl
mov
fucomi
push
mov
cmp
and
mov
aaa
xor
in
inc
pop
jmp
adc
dec
nop
in
lcall
or
imul
outsl
enter
adc
pusha
mov
push
lret
jo
sub
xor
imul
jno
fbstp
xor
push
ja
or
push
xchg
xchg
pop
lock
mov
fdivrs
add
dec
adc
stos
lahf
imul
into
jno
cmpsb
adc
xchg
pop
lret
pusha
imul
jle
cwtl
fcmovbe
lret
out
sbb
outsb
cli
cli
lret
add
push
lods
push
cmp
fnstsw
lret
and
xchg
mov
clc
mov
ljmp
mov
lret
or
add
insl
lret
pop
call
fwait
push
xchg
inc
js
mov
stc
inc
or
fwait
lcall
jecxz
mov
adc
jns
shlb
aaa
icebp
jg
shll
fimull
jnp
push
sbb
ret
ljmp
add
gs
adc
rcrb
out
cmp
lret
std
sub
and
repz
scas
xchg
mov
adc
je
push
sub
ljmp
inc
xorl
fwait
sar
ret
inc
movsb
mov
push
insb
cmp
in
movsl
pop
or
sti
dec
int
stos
stc
pop
lret
cmpsl
or
lret
cwtd
insl
jne
arpl
into
lret
mov
imul
pop
xchg
mov
push
int3
lret
sahf
in
add
xchg
and
lret
aam
fs
ja
lret
fwait
jno
jo
stos
fidivl
jecxz
add
cs
mov
pop
xchg
scas
hlt
mov
aad
mov
es
jge
push
sti
test
lret
movsl
rorl
lret
adc
cmp
cmp
push
aad
jnp
fidivl
int
addr16
mov
lret
out
fwait
sti
push
push
adc
cltd
imul
cmp
push
lret
xchg
push
rclb
in
mov
xlat
ja
sbb
push
ret
lret
xor
lret
in
push
lea
insb
sub
stc
push
cmp
inc
cmpsb
inc
int3
sub
stos
test
idivl
jne
sub
daa
xchg
lret
jo
int
sbb
sahf
cmpl
xchg
xor
pushl
lret
ret
std
add
sub
adc
lret
loope
cmp
inc
nop
fwait
mov
xchg
movsl
xor
aad
xchg
icebp
mov
mov
cli
lods
fs
push
add
dec
xlat
pop
cwtl
dec
jnp
lret
pop
adc
push
and
inc
cmp
fst
pop
xchg
lea
cmpsb
add
mov
mov
push
cwtl
insb
sbb
fdivrs
push
mov
inc
test
add
mov
cli
inc
jae
jns
scas
aad
sbb
das
cmp
xor
out
ficoml
push
rorb
mov
gs
or
jns
cmp
push
popa
imul
lret
adc
out
arpl
sbb
pop
dec
lret
shr
ljmp
jnp
mov
and
mov
aad
lea
xchg
shrb
lret
sub
lret
addr16
in
mov
xchg
lret
add
sahf
and
mov
sub
sbb
loop
cli
lea
jp
cmp
mov
push
cmovg
sarl
test
es
in
pop
popfw
lret
pop
push
sub
mov
cmpsl
sbb
dec
aad
jecxz
push
sbb
inc
jge
lret
ljmp
imulb
lea
loop
dec
pop
and
lret
repz
mov
jl
mov
sarl
add
lret
outsl
mov
lret
movsb
in
scas
fidivrl
push
mov
push
daa
and
mov
leave
dec
sbb
repz
pop
fisubrl
fmulp
mov
addr16
lds
jle
cmp
mov
pusha
ret
lea
lret
cld
add
les
lret
sub
pop
push
lret
dec
jp
xlat
iret
xchg
pop
cmp
clc
repz
push
xchg
mov
out
push
lret
cmp
outsb
insb
aas
out
js
jp
lret
sbb
xor
pop
sub
lret
cmpsb
pop
ja
cmc
fimull
sbb
nop
or
testl
pop
jle
mov
aam
out
lods
int3
imul
mov
mov
mov
into
adc
pop
push
mov
setp
xor
sbb
jl
loopne
inc
push
dec
nop
xor
mov
leave
das
aad
lret
cltd
mov
lret
push
scas
pop
mov
fdivr
stos
into
fldl
aas
mov
dec
cmp
or
or
es
or
sbb
dec
and
push
push
lret
push
das
lret
fcoms
cmp
call
push
dec
outsb
out
adc
adc
jbe
push
inc
sbb
dec
mov
mov
call
in
ret
bound
test
dec
cmpsl
or
dec
inc
dec
or
pop
fmuls
mov
cmp
mov
mov
mov
dec
mov
jbe
inc
sarl
imul
mov
adc
loope
cwtl
sub
sbb
fs
shll
sti
in
dec
jbe
dec
inc
ljmp
loop
mov
pop
stos
cmpl
dec
xor
pavgb
and
push
icebp
hlt
lret
ja
lret
lret
cmpsl
in
out
mov
dec
push
pop
mov
cwtl
mov
shlb
or
ret
lret
loopne
push
aas
xlat
lret
sbb
ret
lret
in
and
add
sub
and
int
adc
lret
imul
mov
lret
mov
stos
fwait
xor
sub
inc
jg
cmp
fimull
mov
dec
push
cmp
lret
or
les
sbb
sahf
cli
xor
in
cli
sbb
out
icebp
jb
adc
mov
push
xor
sbb
shl
sarl
cmpsb
pop
inc
rclb
pop
cmp
shlb
dec
xchg
cmp
cltd
xor
rcr
enter
scas
lret
jmp
fwait
or
cmpsb
mov
rol
fidivrs
mov
cld
lret
xchg
rorb
test
lret
xchg
dec
lea
stos
rcrb
rcrb
fdivl
lret
pop
adc
pop
mov
sbb
lea
in
hlt
mov
lret
add
aaa
repnz
pop
lret
adc
shlb
fwait
std
fdivp
bswap
scas
xor
jnp
popa
cmp
push
call
pop
arpl
push
push
lret
pop
push
fidivrl
mov
xchg
inc
gs
and
test
lret
inc
sub
xor
lcall
lret
mov
lret
pop
add
lret
push
adc
lret
out
sbb
negb
add
cli
inc
stc
into
enter
jnp
mov
inc
mov
popa
jns
pushf
and
xadd
lret
inc
ret
mov
jb
cmp
sub
popf
xchg
iret
divl
xor
adc
fists
hlt
lret
inc
dec
mov
mov
xchg
lret
cltd
push
inc
jge
repz
pop
pop
pushf
into
pop
pop
ds
aaa
shll
scas
testl
out
out
movsb
mov
cwtl
pusha
into
lret
loop
pushf
jno
sbb
popa
cmp
insl
fldln2
aaa
loop
xor
fwait
mov
out
push
aam
ret
int
ror
sbb
gs
sub
mov
mov
jmp
into
iret
enter
jge
in
jb
lret
cwtl
jmp
inc
sub
inc
cmpsb
cld
call
or
js
inc
lret
jb
aas
cmp
aad
cltd
int3
mov
test
sub
imul
jae
lret
cmp
dec
ljmp
icebp
lods
aad
mov
aad
mov
cmp
pop
push
xor
aad
bound
pop
dec
lcall
pushf
shll
lock
lret
roll
in
out
xchg
stos
fimuls
test
sar
pusha
pop
push
notl
push
lock
lret
mov
dec
ficompl
out
xchg
call
pop
les
xlat
cmp
sti
add
inc
jg
xchg
fcmovbe
dec
into
mov
bound
cli
cltd
push
les
push
mov
mov
jns
scas
inc
cs
xchg
xor
pop
stos
shll
ds
fs
xor
add
scas
in
jp
orl
inc
test
data16
das
jmp
decl
lea
xor
pop
sti
cmp
in
out
and
cmp
add
stos
fdivr
cltd
popf
ja
lret
lcall
push
das
ret
cltd
or
mov
push
cld
inc
pop
xor
popa
fsubrs
lret
jge
mov
stos
je
lret
sbb
loop
mov
ja
inc
pop
push
mov
lret
movsb
pop
loopne
jecxz
mov
aam
dec
hlt
stos
cmp
movsl
popf
jns
mov
fidivs
ficompl
in
adc
out
scas
aam
mov
ss
lret
pop
push
push
jge
cmp
into
pop
test
and
lcall
popa
test
jle
xchg
fs
stc
pop
lret
sti
outsl
pop
loop
sbb
clc
dec
jecxz
xor
push
and
xchg
adc
test
aaa
xchg
xchg
mov
push
sti
xchg
or
movsb
sub
dec
mov
lods
enter
stos
fisttpll
clc
inc
cli
fwait
cmc
or
sbb
les
add
leave
out
shr
jno
sbb
lods
ss
shrb
mov
cltd
scas
lret
std
xor
fisubl
sbb
cmp
sbb
add
imulb
aam
or
xchg
lret
out
cmc
dec
data16
loopne
fisubs
pop
cmp
ror
repnz
movsb
dec
mov
mov
jno
aad
subl
insl
iret
sbb
fwait
or
ror
mov
push
loope
fcmovb
cld
jnp
and
cltd
push
mov
jl
xor
shlb
mov
xlat
pop
insl
mov
pop
sbb
shrb
rcr
call
adc
inc
or
mov
mov
push
shl
xor
mov
cld
repz
pop
bound
fdivs
rcrl
lret
mov
cmpb
xchg
testl
mov
sbb
lret
add
mov
push
mov
push
push
push
pop
daa
inc
xchg
lods
cli
sub
mov
aad
cmpsl
xor
lret
pusha
xor
stc
lret
dec
lock
cmp
and
lret
pusha
stos
and
jp
loop
inc
adc
sub
mov
mov
mov
dec
aad
fwait
jne
bound
loop
fwait
push
and
pop
cli
adcl
or
pop
lret
mov
inc
mov
mov
dec
cli
push
mov
push
idivb
les
inc
mov
into
cmp
pop
enter
imul
lret
stc
mov
lret
mov
pop
mov
mov
int3
dec
or
mov
lret
xchg
jae
mov
fisttpll
out
push
mov
rcrb
dec
pop
xor
aas
pop
lea
add
test
xchg
in
dec
pushf
xchg
clc
flds
mov
or
adc
fnstenv
stos
sub
add
sbb
pop
cld
fwait
test
cmpl
push
in
inc
sub
adc
stos
or
adcb
js
dec
into
inc
or
sbb
shl
xchg
inc
stc
fcmove
scas
pop
mov
sub
je
cli
fsubrs
inc
xor
mov
sbb
dec
cltd
mov
std
lret
cwtl
fiadds
mov
lret
cmpsb
and
iret
sbb
fisubrl
lods
ret
jp
mov
stos
lea
add
sar
mov
push
lret
jp
cmp
cmpb
xchg
add
ljmp
cmpsb
ficoms
and
mov
and
icebp
in
xchg
or
stos
mov
popf
mov
lahf
stos
sbb
lret
es
xchg
xor
fcomi
mov
dec
cwtl
lods
lea
ljmp
aad
ret
lret
inc
and
add
adcl
add
xchg
in
fwait
pop
pop
or
inc
mov
out
jae
aas
aam
and
cli
dec
push
sub
lds
sub
cmpsb
add
xchg
aam
lret
popf
jecxz
aaa
jmp
mov
sub
pop
pop
loopne
std
daa
lret
scas
mov
stos
mov
imul
xor
lret
es
sti
sbb
fmul
mov
in
push
push
xor
mov
adc
mov
pop
cmp
mov
lret
sub
popa
pop
fwait
cli
push
test
rcrb
jg
sbb
mov
fsubs
pop
pop
mov
sub
icebp
jmp
scas
mov
lret
mov
insl
lret
mov
sbb
or
mov
pop
jo
mov
lret
cmp
imul
jge
inc
ljmp
sbb
xlat
lret
jmp
adc
loop
xchg
es
repz
aam
stos
stos
cmp
dec
popa
mov
ficompl
push
mov
in
sbb
cli
sbb
shrl
cmp
push
aam
cmp
fwait
push
aas
std
iret
jmp
inc
bound
sub
das
fisttps
and
lret
xchg
pusha
lea
outsl
and
lods
sbb
out
scas
jo
out
std
push
lret
ret
mov
rorb
imul
lret
bound
jp
dec
mov
lret
mov
push
jmp
lret
xchg
imul
je
cmp
add
mov
mov
cmp
daa
lods
or
dec
test
lret
xchg
cmpsl
ljmp
test
sbb
dec
dec
je
xchg
stc
push
mov
lret
and
jnp
cmp
cld
xchg
mov
mov
adc
stc
inc
cmp
pop
add
sbb
mov
lods
mov
lret
aam
sub
mov
mov
mov
in
icebp
inc
lret
pop
pop
jecxz
aas
int3
rorl
jbe
je
push
aad
lret
mov
inc
pop
lret
inc
jne
rclb
lret
movsl
lds
or
mov
and
mov
ljmp
lock
pop
cmp
xchg
sarl
lret
call
mov
ret
jnp
push
les
imul
lret
shrl
push
mov
cmp
sahf
addr16
ljmp
lret
jo
jp
sbb
adc
mov
sbb
lret
or
sub
cld
xchg
xor
imul
jp
dec
rcrl
cmp
lds
mov
xchg
in
push
shrb
xor
mov
cld
shlb
nop
inc
xchg
push
pop
jl
add
push
into
jp
cwtl
lret
push
mov
stos
jbe
and
xchg
add
jno
lret
pop
sbb
pop
lcall
call
mov
mov
jge
inc
lds
nop
sar
and
movsl
in
addr16
xor
mov
pop
push
push
and
inc
je
lcall
xchg
les
insl
sbb
stos
in
push
pop
inc
lret
int
popl
fcmovne
and
pop
cld
lret
fcoms
mov
lret
fdivr
stos
mov
call
sarb
cli
jnp
cmpsl
add
push
inc
or
icebp
iret
loope
lret
xchg
sbb
in
mov
jb
scas
cwtl
cltd
ror
or
cli
test
lret
mov
jp
mov
fimull
add
add
insb
in
xchg
cmp
sbb
fcoml
icebp
hlt
lret
stos
push
mov
test
or
call
jg
ficompl
lods
xchg
mov
ljmp
lret
in
stos
popf
xchg
or
aam
push
sbb
ror
cmp
and
das
inc
cmp
lods
lret
jge
gs
dec
mov
mov
shrb
les
ljmp
lret
inc
out
sbb
cli
rcrl
js
lret
in
dec
pusha
cmp
or
sbb
das
lcall
ljmp
icebp
adc
jmp
cmp
ret
dec
xchg
mov
dec
cmpb
jl
outsb
sub
mov
lret
sub
mov
daa
outsl
mov
push
stc
aam
hlt
push
xchg
mov
add
fisttpll
or
test
popa
into
popf
addb
pushf
lret
push
std
nop
scas
lret
fistpl
sbb
lcall
fmulp
insb
push
mov
xor
sub
cmp
out
dec
in
mov
jno
lret
cltd
jne
cld
and
lret
mov
cmp
stos
mov
ficomps
push
xor
pop
xchg
lret
pop
mov
lret
fildll
mov
push
inc
ficoml
jl
call
mov
clc
js
dec
ss
and
sub
add
jb
mov
mov
mov
and
rcrl
adc
mov
xor
xchg
cli
inc
mov
push
pop
add
sbb
mov
xchg
je
fs
int
js
lret
sub
jae
xorb
mov
and
push
xchg
mov
test
mov
or
repz
dec
stos
lea
cmp
or
jno
dec
in
adc
inc
xor
jle
out
add
push
mov
divb
cld
gs
cwtl
ds
sbb
loopne
mov
lods
pop
outsb
cmp
inc
cmp
in
in
iret
fwait
cli
pop
mov
push
data16
mov
leave
std
sbb
push
push
push
daa
lret
pop
aaa
jl
jb
ficompl
jmp
icebp
or
loope
add
jnp
stos
loop
mov
pop
push
cmp
push
push
loopne
mov
lock
sub
pop
test
popa
lret
out
neg
inc
xor
sub
jp
cmp
cli
mov
pop
xlat
pop
loop
lret
cmp
cmp
ljmp
mov
aas
and
or
jmp
outsb
sti
pop
mov
pop
add
cmp
dec
fldt
in
dec
lret
mov
pop
lret
sarl
cli
stc
dec
and
lret
jl
lret
loopne
inc
stos
into
xchg
loope
mov
std
mov
aam
aaa
sahf
bound
addr16
mov
mov
ja
mov
pop
xlat
sbbb
cmc
sub
hlt
scas
fwait
lahf
pushf
pusha
into
cmp
enter
cli
mov
mov
scas
mov
fisubl
popa
outsl
mov
pop
cli
clc
jecxz
repz
push
mov
jmp
std
daa
dec
out
mov
fcomp
push
lret
clc
cmp
push
fmul
repz
pop
icebp
negl
out
xchg
mov
fstl
sar
mov
int3
out
push
mov
das
lods
mov
xor
jns
insl
aaa
inc
shrb
mov
or
les
cmp
jp
and
lret
xor
insl
push
stos
ret
push
xor
fs
mov
test
scas
xchg
push
lret
js
mov
dec
icebp
ljmp
enter
sbb
xchg
fidivl
xchg
adc
sbbl
in
mov
xor
insl
lea
mov
adc
sub
xlat
mov
mov
cmp
sbb
xchg
xchg
popf
adc
adc
sub
aad
pushf
adc
test
mov
xchg
fnstcw
lret
rcl
xchg
stos
daa
adc
sub
test
sbbl
data16
mov
push
lret
incb
lret
inc
test
lock
pop
dec
aas
aad
std
jb
cmp
outsl
shrl
js
jl
lret
test
sub
ja
adc
cli
adc
and
lret
pop
add
cli
lahf
fldl
dec
data16
inc
ds
ljmp
lret
stos
and
rol
pushf
cli
pop
ret
mov
dec
xchg
sarb
push
mov
xor
jb
ds
cwtl
xor
lret
mov
loopne
mov
clc
mov
pop
into
call
mov
dec
shll
fisubl
and
or
movsl
push
or
loop
sub
cmp
dec
movsl
cmpb
push
test
out
xchg
sbb
xor
add
shrl
lds
fsubs
stos
xor
adcb
xchg
cmp
mov
xor
inc
jns
lret
adc
sbb
mov
lret
pop
ljmp
jo
inc
xchg
adc
sarl
in
imul
cmpsl
cmpsb
mov
outsb
dec
fidivl
xchg
xchg
mov
das
cli
dec
or
cld
jne
leave
sub
or
daa
xor
push
mov
decb
sarb
lret
out
in
das
hlt
lret
cmpsb
fildl
mov
int
xchg
aaa
cwtl
jae
lret
cmp
cmp
es
lcall
movsb
pop
sub
iret
jl
repnz
lret
adcl
mov
std
push
rcrb
lret
add
sti
arpl
lret
pop
stos
xchg
jecxz
int
pop
lret
dec
sub
das
cmc
pop
pop
jecxz
sbb
or
inc
sbb
aas
xchg
sbb
dec
ror
mov
jge
dec
into
fbstp
adc
mov
popa
xchg
pop
fsubrs
ja
mov
dec
cmp
mov
adc
dec
cmpsl
dec
adc
xchg
push
lods
lret
sub
dec
jge
jnp
pop
cmpsl
cmp
repz
jb
lret
and
fiaddl
sub
push
push
or
xchg
jmp
and
loopne
jns
adc
fimull
jb
pop
clc
rclb
cmp
inc
cwtl
fcmovu
mov
out
stos
stc
cmp
xchg
ror
fstpl
mov
jb
cwtl
lret
nop
cs
test
cli
icebp
mov
shr
mov
rolb
test
sub
and
in
push
imulb
lret
fs
std
cmc
pop
loope
fwait
push
into
mov
or
mov
rolb
sarb
lret
lods
lds
repz
pusha
sbb
insl
sbb
movsl
enter
lret
mov
or
testl
jle
cs
insb
lret
sbb
or
lods
ret
insl
in
jge
lret
mov
bound
out
aam
fnstsw
stc
dec
imul
faddl
rcr
loope
pushf
ret
pop
scas
adc
push
imul
xchg
out
aad
pop
sti
lret
cmp
dec
xchg
xchg
lahf
or
loop
inc
or
mov
lret
aaa
mov
lret
popf
cltd
mov
pop
xchg
lret
and
rolb
bound
mov
cmp
cltd
mov
mov
nop
adc
cmp
dec
cmp
mov
int3
insb
sub
mov
stos
aam
test
mov
add
imul
pop
cmp
dec
jb
cmp
jl
adc
ficoml
mov
subb
sub
enter
jb
imul
push
mov
andl
lret
sub
mov
and
mov
xchg
mov
lret
cld
ja
insb
je
lret
fs
data16
xor
cmp
call
cmp
test
xor
ljmp
fcomps
ficompl
pop
push
sub
test
xchg
cmpsl
lret
enter
stc
in
mov
mov
pop
loopne
or
test
pop
cld
or
mov
lret
xchg
rorb
push
sub
cmp
rolb
std
aas
lret
sbb
dec
insl
mov
cmp
fldcw
rorb
pop
mov
loope
pusha
dec
and
lret
xchg
and
fldl
cmp
jnp
popa
std
or
xor
arpl
inc
mov
aad
push
in
nop
test
stos
stos
jbe
sbb
xor
inc
cmp
sbb
int
hlt
sbb
ljmp
rolb
repz
test
fadds
lods
stos
adc
mov
jbe
stos
jae
push
lret
inc
lods
jl
lock
lret
or
cmp
mov
clc
xor
sbb
mov
xchg
gs
pop
mov
cwtl
push
rcrl
popa
dec
xor
fdivrs
dec
adcb
sbb
shrb
lret
testl
mov
cli
lret
pushf
add
mov
jp
or
nop
popf
sarl
lret
xor
push
dec
stos
test
fs
pusha
push
leave
xor
loop
fisubl
in
jge
adc
lret
mov
gs
inc
sbb
pop
loop
adc
idivl
lret
mov
fmull
ret
cwtl
loope
test
cmp
cmp
repnz
rol
mov
pop
lret
and
lretw
xchg
clc
add
or
pop
leave
fst
ror
and
sub
xchg
repnz
das
into
inc
mov
test
and
js
jae
icebp
xchg
jp
std
or
decl
mov
pushf
ljmp
mov
xor
mov
jmp
fcmovne
lcall
clc
lret
adc
pop
dec
outsl
sar
les
cmp
shlb
aas
rcr
adc
fstpl
push
pop
aam
dec
jmp
inc
cmp
leave
lret
lea
popa
addr16
lret
ja
cmp
mov
rcl
lret
bound
mov
push
test
mov
pop
or
filds
mov
test
lret
mov
pop
adc
pop
int3
rclb
mov
cli
mov
lret
xor
in
lret
push
ds
or
lret
shll
lret
loope
stos
sub
ror
andb
outsb
fcmovbe
fimull
scas
add
stos
fldenv
mov
and
inc
sbb
pushf
jns
push
sub
jb
ret
ljmp
stos
jge
sahf
rcll
mov
cltd
and
icebp
outsb
inc
dec
mov
jecxz
push
jge
lret
loopne
mulb
lret
repz
cmpsb
mov
lret
xchg
pop
push
in
pop
gs
push
loop
andl
mov
xor
cs
inc
pop
push
push
fsubrs
push
dec
sub
ret
dec
into
lret
aam
shrl
mov
jae
out
idivl
mov
shlb
pusha
lret
sub
lret
sub
stos
lret
mov
xor
mov
loope
adc
mov
rclb
cmpsl
aad
cmp
fdivr
out
add
lret
dec
cmp
adc
cli
push
outsb
pop
add
lret
sub
adc
mov
out
jbe
sbb
sub
popf
addr16
test
test
lret
packsswb
sub
mov
ret
or
icebp
fsubrs
shlb
popf
lds
add
cmp
loopne
neg
popf
call
vmovaps
sbb
cmpsb
inc
test
lret
imul
ds
pop
je
add
das
xor
jb
outsb
ror
inc
lahf
scas
cmpsl
cmovg
loop
lcall
mov
lret
cs
cli
mov
adc
cmp
jp
lret
and
test
les
jecxz
jl
cli
pusha
xchg
jo
outsl
hlt
sub
insb
sahf
lock
cmpsb
ljmp
lret
shl
daa
rcr
lret
testl
dec
inc
mov
bound
lret
jo
lahf
mov
dec
mov
cwtl
inc
iret
lret
mov
ror
adc
mov
pop
stos
adc
jno
fcmovbe
fstps
lret
into
cld
frstpm(287
mov
gs
faddl
out
mov
rcr
mov
mov
rclb
leave
loop
xchg
jl
sbb
pusha
call
lea
shll
xchg
mov
lret
mov
les
scas
push
xchg
mov
mov
cltd
call
xorl
jno
mov
fwait
sahf
loop
jb
push
cwtl
lret
mov
mov
pop
cmpsl
mov
movsl
fiaddl
cs
psrlw
sub
cwtl
mov
in
adc
bswap
mov
inc
popa
mov
xchg
inc
jns
pop
stos
gs
js
in
inc
rclb
lret
xor
lret
dec
fbld
sahf
dec
cli
or
inc
stos
les
out
out
lret
cmp
cmp
rcl
int
push
and
mov
lret
inc
in
pop
cltd
test
lret
mov
push
sub
xor
imul
nop
je
mov
shlb
ds
leave
mov
pop
sarb
pop
stos
scas
in
pop
fmul
xor
jge
fidivrl
in
and
bnd
inc
mov
mov
adc
cwtl
fcoms
push
or
lret
xchg
dec
ds
inc
test
cmp
outsl
push
jns
jb
xchg
arpl
test
sbb
mov
aam
dec
imul
daa
lret
pop
add
outsb
pop
xchg
lret
mov
cmp
inc
sti
and
xchg
add
fisubl
andb
xchg
ficompl
adc
jne
push
lods
xchg
dec
mov
mov
mov
clc
movl
lret
push
rcrl
adc
cmpsl
pushf
mov
mov
imul
lods
jg
test
lret
pusha
test
lret
lret
lock
adc
lret
mov
cmp
push
cmp
cmc
mov
aaa
pop
mov
and
into
js
imul
sbb
push
sub
fmul
or
imul
out
xchg
or
inc
pop
lret
xchg
inc
aad
inc
lret
sbb
lcall
fadds
lret
mov
push
fcmovbe
adc
sbb
xchg
mov
lret
daa
xchg
shlb
sbb
xor
test
pop
pop
ja
jmp
mov
push
into
xchg
sarb
lret
sahf
mov
fwait
ljmp
popa
jne
mov
push
out
negb
mov
mov
sbb
adc
data16
shrb
shll
lret
daa
out
test
or
inc
add
scas
xchg
dec
pop
mov
pop
int3
pop
and
mov
fs
fstl
sarl
jbe
add
lret
es
clc
and
mov
pop
fwait
lret
icebp
mov
mov
sub
ret
push
test
int3
and
pop
mov
cs
cmpsl
test
lods
lret
xchg
stos
out
test
leave
jno
push
cmp
lret
loopne
sbb
push
lds
stos
sub
ffreep
inc
outsl
mov
xchg
aam
pop
inc
sub
pusha
xor
mov
mov
adcl
movsl
jp
js
in
lret
pop
scas
cmp
jnp
xor
out
sarl
fisubs
xchg
push
add
jo
and
mov
lret
sub
lret
insb
mov
lret
sbb
sbb
sbb
fcmovbe
test
add
inc
fsub
sub
lret
cli
call
cli
sub
push
fs
js
daa
or
out
dec
sub
scas
lret
xchg
std
mov
lds
dec
lods
js
fcmovu
xor
cwtl
jno
dec
stos
lods
lret
cmp
pusha
dec
cs
sbb
adc
or
loopne
mov
imul
sbb
xchg
pop
mov
loope
inc
loope
inc
scas
dec
inc
adc
andl
jbe
test
pop
cmp
xor
cmp
cmp
insb
fldcw
mov
icebp
cli
lret
lods
push
cs
jmp
call
inc
stos
mov
outsb
inc
mov
dec
dec
push
mov
inc
imul
sub
cmp
fidivl
pop
idivl
sarl
rol
add
push
jg
pushf
cltd
pop
addr16
filds
das
and
lret
add
lods
xor
mov
and
xor
mov
rcrl
nop
pop
inc
rcl
cmc
fadd
sub
divb
ficomps
out
sub
out
fmull
push
adc
jge
xor
add
inc
repz
jmp
xlat
lret
cmpsb
push
sub
cld
push
out
dec
fcmovne
dec
sbb
adcb
shr
test
les
or
inc
popf
iret
lret
mov
adc
scas
testb
mov
fwait
pop
mov
in
roll
xor
inc
fstps
pop
ret
sbb
lret
pop
add
lret
mov
mov
out
mov
lret
cli
jle
lret
sbb
sbb
pushf
lret
jmp
fcmovbe
sbb
addr16
lods
ror
sbb
nop
lret
mov
xor
into
dec
out
mov
jg
mov
lret
xor
decb
movsl
dec
lret
add
scas
xor
mov
lods
cmp
fdiv
or
cld
int
movsb
aas
lcall
dec
dec
stos
stc
pop
icebp
aam
pop
fstpt
cmp
aam
or
pop
out
test
loopne
inc
mov
jge
sbb
jnp
subl
aad
clc
sub
fnstenv
push
push
jns
cmp
dec
push
cmc
mov
inc
inc
enter
rcl
int
jle
mov
push
jge
leave
jge
lret
adc
ficompl
sbb
or
pop
mov
sbb
repz
scas
leave
mov
icebp
jnp
push
sbb
lret
add
mov
test
inc
clc
cld
mov
aas
out
pop
jno
lret
adc
push
insb
mov
iret
cs
mov
test
lret
mov
sub
iret
mov
xchg
loopne
pop
and
inc
sub
test
mov
mov
fsubs
jne
push
mov
fdivrs
sub
rcrl
adc
outsb
in
inc
pop
repnz
adc
jmp
sub
fimull
and
lret
stos
xor
inc
or
push
and
push
xchg
fdivrl
mov
call
jp
hlt
adc
sarb
in
cwtl
jg
mov
cs
push
loopne
push
adcl
imul
sbb
or
ficoml
push
or
cmc
popf
cltd
jmp
int
xchg
bound
leave
fdivs
inc
dec
lret
mov
sub
int
sub
sti
lret
in
outsb
enter
lret
or
or
push
lret
xchg
sbb
dec
pop
cmp
lret
and
lret
cs
in
sub
addr16
push
sbb
cli
mov
push
pop
xor
scas
or
sub
loopne
xor
inc
movsb
mov
xorb
adc
test
fmuls
jnp
push
mov
mov
out
leave
cmc
int3
sahf
mov
outsl
lret
es
mov
insb
jno
pop
call
dec
ja
xor
and
push
test
stos
lret
dec
fmulp
fdivl
pop
subl
loopne
sti
out
mov
loope
lret
add
mov
imul
push
cltd
pop
lret
fisttpll
faddp
sbb
das
shlb
fwait
push
test
out
ror
or
out
enter
push
fistl
imul
jle
or
movsb
cmpl
xchg
sbb
mov
fdivs
cwtl
stos
cltd
mov
int3
inc
dec
ja
pop
cli
neg
orl
cmp
cmp
inc
inc
ss
or
lret
dec
fyl2x
mov
xor
adcb
hlt
cmc
cmp
mov
lret
add
and
dec
dec
lret
leave
xchg
xor
sbbb
stc
mov
rol
push
jl
push
sbb
cmpsb
sub
mov
xchg
lret
mov
sbb
pop
push
cmp
repnz
aaa
fwait
add
popa
lret
jl
adc
mov
and
push
inc
inc
lret
push
rolb
pop
addr16
ds
xchg
pop
mov
ret
fcom
nop
mov
outsb
pop
sbb
stos
add
outsl
mov
daa
or
sbb
in
insl
mov
lret
movsb
jecxz
mov
mov
jae
push
pop
jg
lret
adc
mov
lret
push
mov
insb
data16
lcall
scas
jnp
xlat
lods
xchg
xchg
dec
or
mov
lret
jl
push
fiaddl
mov
xlat
aam
cli
inc
dec
clc
scas
movsb
gs
xor
push
cmp
ljmp
sub
out
lahf
sub
fwait
or
xorb
mov
sbb
inc
stos
out
enter
aam
mov
lret
add
cmp
push
fsubr
in
je
push
xor
in
cs
orb
fildll
push
test
into
addr16
lret
test
jp
fwait
xlat
fimull
lea
sbb
dec
sarb
stos
lret
push
xlat
fstpl
mov
add
jmp
ret
ror
lcall
fcmovne
cmp
push
jbe
aas
dec
fs
adc
pop
push
fmul
push
xor
popa
out
jb
lret
dec
cltd
jnp
jmp
lret
and
mov
xchg
xlat
fs
bound
dec
rorb
jno
stos
aam
xchg
adc
cmc
pushf
dec
mov
insl
bound
fstps
or
sahf
or
sub
fidivl
imul
stos
lret
jmp
pop
std
adc
fmuls
sbb
sbb
lret
cmp
sbb
sub
sub
out
push
out
lds
dec
jae
mov
lret
pop
cmpsl
mov
mov
out
dec
xor
inc
xchg
push
push
popf
cli
or
loop
std
sub
or
adc
inc
lret
jle
ljmp
mov
cs
jae
loopne
mov
insl
mov
inc
sub
lret
mov
lret
xor
lret
inc
jecxz
out
dec
jp
scas
stos
inc
push
xor
std
fcomps
xchg
fwait
sbb
into
push
negb
mov
fisubrl
or
std
popa
sub
mov
xor
dec
into
sbb
add
push
adc
lret
jmp
loope
gs
imul
cmpsl
loopne
test
fwait
mov
fidivrs
leave
ss
fs
dec
dec
pop
adc
jge
jb
add
jae
jp
insb
mov
pop
sub
push
pop
scas
and
mov
and
insb
pop
rcrb
sub
lret
aam
leave
sarl
ret
mov
lret
lock
add
or
ficoms
int3
icebp
ror
adc
test
xchg
lcall
lret
lods
aam
sub
push
sub
in
lds
sbb
xchg
jne
pop
adc
push
mov
push
xor
daa
pushf
int
lret
push
mov
lret
in
cld
push
outsb
loope
jmp
sahf
add
js
ds
xchg
adc
jbe
xchg
lret
out
out
inc
xor
jmp
adc
lret
icebp
sbb
stos
adc
jnp
adc
or
jne
sub
cmp
mov
jecxz
mov
ds
adc
scas
jge
fs
fidivs
push
call
lret
data16
es
in
cs
arpl
shll
or
loop
or
addl
lods
xchg
mov
aad
lret
inc
dec
sahf
cltd
pop
popf
xchg
std
lret
xchg
and
xchg
lret
add
lods
test
jge
insl
call
pop
sbb
push
cmpsb
shrl
inc
cmp
xchg
std
fbld
mov
jge
jno
xchg
push
dec
div
mov
ja
popf
sub
dec
lret
push
sub
fcomip
mov
hlt
dec
cmc
hlt
clc
push
mov
add
pop
jnp
and
sub
int3
cli
int
add
or
and
pop
sbb
jno
mov
jecxz
add
lock
dec
insl
in
lret
fistpll
das
cld
mov
sbb
mov
mov
push
lret
jg
gs
xchg
push
lret
mov
pop
or
inc
cli
mov
scas
in
testl
scas
mov
add
pop
mov
js
rclb
lret
leave
push
jmp
add
fidivrl
mov
pop
xchg
dec
sbb
pop
bound
cs
push
je
mov
cmp
aam
js
sbb
dec
movsl
or
xor
lcall
push
inc
cltd
sub
mov
adcl
fwait
push
cmp
shll
lret
xchg
into
sbb
mov
jo
lretw
sbb
cli
sub
jmp
ljmp
aaa
sbb
jge
push
shlb
movsl
enter
xchg
ret
in
lea
lret
jnp
sbb
mov
sarb
xor
dec
lret
and
jae
popa
sarl
inc
push
mov
push
mov
lret
dec
lods
cmpsl
jp
push
arpl
adc
repz
repz
shll
jo
mov
cli
and
in
sbb
lret
mov
fstps
in
jg
mov
adc
or
xor
shrl
xlat
outsb
ret
aad
mov
and
jns
push
inc
mov
shrb
and
cmp
pop
lahf
scas
arpl
lret
mov
jmp
out
add
fcmovnu
sbb
mov
outsl
sarb
xchg
pop
dec
mov
dec
jle
js
lret
aas
mov
lret
mov
mov
out
lret
mov
int
lret
sub
lret
add
lods
test
ja
sahf
mov
ficoml
ljmp
mov
lret
loopne
enter
dec
out
aam
xchg
pop
std
js
sub
mov
ror
data16
lret
cmp
dec
or
inc
lret
loop
pop
mov
ror
add
jnp
xchg
mov
add
inc
cmp
xchg
jge
pop
flds
and
dec
into
test
sub
lret
mov
sbb
lret
push
sbbb
jo
lret
stc
jno
xchg
push
sub
test
mov
cmp
sbb
mov
push
sbb
mov
mov
push
stc
adc
mov
adc
fldt
std
fwait
insb
sub
push
je
gs
ds
mov
decl
loopne
lret
je
imul
aam
push
stos
and
xchg
adc
rolb
and
add
aas
xchg
repnz
repz
mov
das
aad
xchg
cld
lods
cs
rclb
lret
mov
sbb
jnp
lret
rcl
fnop
push
lods
mov
jecxz
xor
fstpl
dec
lret
jl
push
lahf
jnp
ljmp
movl
jnp
dec
adc
fdivs
stos
test
pop
hlt
pop
cvtpi2ps
xor
mov
clc
dec
rcrb
add
lods
subl
shlb
xor
sbb
and
xlat
jo
out
hlt
jns
cmp
aas
inc
push
stc
pusha
lods
jno
popf
jmp
cli
loop
sahf
loopne
pop
ja
stos
or
xchg
ror
shl
add
cli
fnsave
cli
adc
sarb
cmp
idivb
test
arpl
dec
xchg
dec
mov
xor
sbb
popa
ljmp
mov
leave
stos
push
add
lret
jb
ljmp
into
sbbl
cmp
lret
xchg
jl
adcb
addr16
stos
mov
out
mull
dec
push
loope
push
in
dec
adc
lret
mov
stos
subl
jl
push
dec
ret
fmul
mov
stc
jmp
repz
mov
adc
mov
sbb
xor
imull
pop
xor
out
cli
mov
into
movsl
sbb
mov
dec
fs
sbb
lret
pushl
pop
or
mov
and
push
xchg
in
imul
mov
fdivr
jo
push
adc
iret
push
mov
outsb
addr16
dec
jl
std
mov
lret
adc
jnp
mov
dec
mov
xor
sub
lds
fwait
xor
ljmp
pop
lret
mov
add
pop
mov
aad
cs
push
lret
clc
incb
loop
mov
int
mov
lret
call
jne
mov
mov
popf
pop
jecxz
testl
lret
clc
jo
cmpsb
xchg
jns
loope
aad
rcll
lret
movsl
mov
and
ja
jnp
mov
popf
call
in
add
xor
mov
lret
scas
js
add
cmp
jno
mov
cmp
cwtl
shll
aam
ficoml
popf
sti
mov
movsb
lret
fists
xchg
xchg
cmp
cli
into
jbe
xlat
push
pop
cltd
or
push
pop
hlt
mov
mov
bound
outsl
cli
rolb
lds
cmp
js
in
rclb
sahf
daa
cmp
lret
std
cmpsb
lret
mov
pop
in
cli
cltd
mov
rcrl
shl
stos
test
adc
std
adc
cli
loop
and
mov
cltd
lret
fildl
mov
fistps
iret
sar
adc
lret
add
sbb
adc
xor
pop
adc
mov
shrl
or
xchg
dec
sarl
xor
sub
incl
cmp
or
mov
addr16
test
insl
sub
sub
and
adc
xchg
xor
inc
fdivrs
pop
add
mov
jo
push
cmp
ljmp
add
jns
pop
clc
inc
cmp
adc
sub
pushf
cmpsb
push
add
xor
sbb
mov
cli
out
mov
fildll
mov
lret
in
insl
add
in
inc
mov
jg
repnz
add
adc
sbb
fs
lock
pop
lret
loopne
sbb
or
aaa
rcrl
xlat
push
mov
lret
scas
roll
int
push
test
lret
xor
push
pop
sbb
lret
sub
xor
mov
cli
xchg
pop
mov
jbe
inc
aas
add
rorb
lret
push
adc
lret
adc
fwait
imulb
dec
sub
and
mov
mov
cmp
mov
lret
dec
in
and
in
pop
lret
std
push
lret
loope
movl
je
repz
xchg
into
ds
dec
lret
sbb
jbe
lahf
pushf
sbb
fldcw
push
ret
sbb
lret
cwtl
dec
add
notb
aas
mov
ficompl
dec
cmc
cltd
in
cli
pop
pop
mov
data16
enter
cmpsb
jp
lds
leave
lret
fsubrs
cmp
jb
sub
movsb
lret
xor
lret
dec
mov
inc
add
fcmovu
sbb
push
mov
jge
ss
stos
popf
cmp
xor
jae
fistpll
jo
pop
cmp
ret
adc
lcall
cmp
and
push
pop
push
xor
xor
xor
fwait
pop
fadds
leave
repz
pushf
push
mov
fidivrl
mov
adc
loop
popa
cmpl
or
adc
inc
je
std
dec
or
add
xchg
pop
jecxz
and
mov
ds
dec
xchg
fiadds
sbb
mov
int
sbb
mov
loopne
shll
adc
pop
shlb
repz
out
mov
dec
add
fistps
lret
std
mov
cmp
jno
ret
sti
sbb
movb
push
push
cmp
mov
sbb
ja
mov
add
xchg
ror
pop
push
fwait
ret
lret
lahf
mov
lret
xchg
mov
bswap
fnstcw
shrl
lret
sbb
xchg
xchg
fadd
pop
sbb
mov
and
lret
jbe
js
lods
cmp
xor
cmpsb
sar
lret
push
cmc
xchg
out
ss
sbb
lret
mov
xchg
adc
loop
inc
loope
lret
stos
insb
xchg
inc
dec
add
addr16
cmp
cmp
mov
daa
ror
inc
or
lret
mov
dec
mov
and
pop
xchg
lret
clc
pop
rcrl
sti
and
jne
pop
jns
push
shlb
rorb
lret
ret
dec
cmpsl
loopne
push
fisubrs
sarl
jns
and
mov
ljmp
iret
cmc
xor
movsb
lret
xor
insl
cwtl
cmp
cmpsl
mov
aam
inc
push
sub
lret
push
pop
jns
and
xchg
or
stos
sbb
lret
adc
and
cli
jge
and
xchg
inc
xorl
aaa
mov
sbb
lds
imul
mov
jb
fwait
cmp
arpl
movsb
dec
xchg
aam
xor
fdiv
lret
in
test
lret
ljmp
pop
pop
and
jecxz
cmp
ss
inc
aad
cmp
lret
into
inc
jmp
dec
pop
jns
das
push
fwait
lret
imul
xor
mov
cwtl
cmp
add
lret
adc
cmp
jne
adcl
repnz
leave
clc
xchg
jbe
ret
inc
cmp
icebp
mov
pop
lret
sub
push
push
sti
adc
lret
mov
xchg
clc
push
fimull
or
inc
jmp
bound
ret
in
ja
test
loope
lret
pop
inc
cmpsb
sub
mov
fucomip
xchg
loope
and
xor
addr16
push
test
dec
jmp
outsl
nop
mov
out
mov
stos
imul
mov
shrl
int
fidivrs
fdivl
frstor
jp
push
xchg
fimull
std
mov
sbb
and
lahf
out
inc
es
cltd
push
jge
fdivs
in
xchg
loopne
sbb
aam
jle
pop
insl
out
sbb
mov
lret
add
mov
xchg
dec
inc
popl
mov
in
mov
mov
cmp
sti
add
lret
lea
mov
or
xchg
lret
lock
jnp
das
js
push
lahf
scas
loope
movsb
ds
xchg
mov
cs
fwait
test
push
cmp
pop
lret
dec
jb
sbb
rolb
lret
inc
inc
push
enter
inc
add
in
cld
xchg
lahf
inc
lret
add
cmp
test
cmp
mov
cli
xchg
in
in
lret
lods
mov
add
lods
add
imul
stc
clc
addl
pushf
xchg
popa
cmp
pop
out
in
fcmovbe
mov
pop
bnd
push
lret
cmpb
xor
into
push
addb
mov
cmp
aad
leave
shl
lret
or
fistpl
frstor
sbbb
lret
andb
pop
and
rcrb
shl
adc
fidivl
cmp
imul
cs
or
lret
mov
and
jno
lret
sbb
sub
pop
mov
loope
inc
and
and
sub
jp
push
inc
and
inc
test
fdiv
add
fdivrs
mov
cli
insl
in
or
cmpsb
lret
fcmovu
and
addr16
lahf
sbb
sti
cltd
sub
mov
out
ret
cmp
pop
inc
add
flds
lret
dec
inc
into
lcall
push
cmpsl
mov
jno
subb
mov
lret
ficomps
lret
cmc
or
sub
fs
dec
flds
js
push
stos
lret
mov
add
ja
pop
push
push
mov
enter
test
cltd
lret
adcb
cmp
jle
mov
mov
addl
es
jbe
lret
pusha
dec
hlt
cmp
lret
mov
mov
push
sbb
sub
add
sub
insl
push
test
lret
jp
pop
les
xchg
daa
aam
cmp
inc
shr
xchg
or
or
sbb
gs
push
pop
insb
inc
mov
lret
jl
out
cmp
xchg
xor
nop
outsb
fadd
mov
aam
lret
mov
loop
jg
jbe
cli
cmpl
dec
lret
dec
hlt
repz
lret
popf
push
jb
call
mov
into
push
rolb
rolb
shrb
push
aaa
xchg
add
cmp
lret
sub
fstpt
jp
or
jno
push
lods
jmp
shlb
sbbl
iret
mov
sbb
cmp
push
lahf
inc
sub
lret
push
shl
aaa
subl
jnp
mul
mov
jb
mov
out
lods
xchg
stc
pop
repnz
adc
fmuls
jnp
lret
fidivl
jle
fdivrs
or
push
push
into
and
sbb
lret
mov
sbb
scas
cs
rclb
pop
mov
push
jmp
out
lret
aam
mov
rol
lret
movsl
inc
in
imul
into
jbe
movsb
mov
scas
xor
xchg
lret
int3
jge
addr16
das
lret
jae
cld
xchg
gs
shll
push
in
mov
outsb
fcomps
or
push
push
mov
js
fmul
push
idiv
ss
mov
ficompl
rcr
mov
das
sub
jp
repnz
mov
int
fcompl
dec
out
rcrb
xor
pop
scas
inc
mov
mov
loopne
das
mov
out
sub
test
xor
xchg
sub
xorb
cli
scas
enter
test
stc
jp
xchg
out
cwtl
lret
jl
push
sbb
insb
cmp
incb
or
out
lret
pushl
out
int3
les
xchg
shll
mov
in
inc
stos
dec
mov
into
inc
pushf
fistpll
imul
mulb
gs
shrl
out
loopne
lret
or
icebp
popa
in
pop
sub
adc
ljmp
lret
cmp
aaa
inc
inc
and
shlb
mov
cltd
inc
jne
adc
push
ss
jle
test
cmp
arpl
popa
loopne
mov
jecxz
insl
jb
xor
jnp
cs
addl
push
movsb
scas
pop
mov
cld
lds
mov
stc
xchg
cli
xor
inc
adc
jg
sahf
fmuls
mov
les
daa
mov
jae
xchg
dec
push
imul
lret
es
xlat
out
xor
lret
or
lret
fadds
fcmovu
xor
dec
pop
ret
out
test
es
movsb
dec
or
mov
pop
mov
or
divl
adc
out
ja
inc
into
lods
mov
lret
jno
int3
loopne
popa
mov
adc
pushf
lods
or
push
shll
push
lret
nop
lods
subl
jle
lret
or
xlat
call
out
into
iret
push
lret
cwtl
das
jl
arpl
sbb
jae
inc
push
data16
pop
mov
jno
int
shrb
xchg
jns
push
aas
mov
shll
push
call
jl
and
mov
mov
mov
loope
cmp
jge
loopne
int
mov
lret
cmp
and
les
stos
mov
ss
pop
dec
aad
jns
lea
insb
sub
enter
fwait
jae
jle
loope
sbb
sahf
pop
cltd
jmp
xchg
add
cmp
scas
lcall
test
mov
xor
pop
fst
mov
dec
scas
clc
pop
inc
jp
outsb
jecxz
mov
fimull
pop
mov
cmp
cmp
cmp
lret
jae
pop
loop
jnp
add
popa
push
sti
adcl
inc
aaa
lret
fstl
lret
and
push
adcb
or
xlat
pusha
clc
dec
movsb
cli
divl
int
xchg
xchg
inc
ror
jae
push
xor
mov
lret
mov
aam
cmpsb
cli
pop
push
fwait
xor
mov
or
popf
mov
push
stc
inc
stos
fsts
shl
add
outsl
xor
pop
nop
adc
or
stc
loop
mov
xchg
lret
jnp
pop
arpl
imul
rol
sbb
lret
push
adc
jo
orb
mov
idiv
xchg
lret
mov
dec
int3
lods
and
mov
mov
mov
fstpt
aad
out
dec
loopne
or
lret
bound
and
add
sbb
and
push
sub
cmp
leave
dec
adc
imul
sbb
or
mov
add
push
fwait
stos
sbb
out
hlt
mov
sbb
sbb
cld
sti
mov
mov
daa
xchg
popa
ljmp
fsubs
mov
lret
mov
inc
lret
dec
sbb
mov
sub
add
cmp
test
insl
inc
mov
inc
cmpsb
mov
or
xchg
lods
ss
mov
nop
mov
mov
jnp
push
idiv
pop
into
sarl
out
mov
popa
or
loopne
or
sub
mov
jo
add
lret
rep
cmpsl
adc
xchg
lret
cltd
leave
sbb
sbb
stc
cwtl
inc
inc
jbe
sub
lret
iret
sbb
lret
popa
cmp
out
movsl
lret
dec
jmp
jp
jge
adc
inc
lret
pop
mov
jl
in
call
cmp
cli
pop
stos
ds
or
lret
call
lret
dec
jb
hlt
gs
lret
and
inc
cmp
add
mov
mov
and
cmp
loope
loopne
dec
mov
lret
dec
mov
fiaddl
pop
xchg
pop
pop
cld
lods
js
mov
push
pop
stos
xchg
sbb
sbb
push
lret
push
push
xchg
jl
mov
xchg
or
ss
rorb
mov
push
wrmsr
bound
rorb
cwtl
jp
pop
mov
pop
sbb
js
movb
int
insb
mov
bound
mov
aas
insl
add
cmp
dec
cwtl
shlb
pop
xchg
mov
jge
pop
mov
xchg
push
inc
push
mov
push
mov
dec
mov
pop
lret
loop
scas
cltd
mov
jmp
and
andb
pop
ror
push
int
lods
sub
inc
shlb
mov
push
pop
ret
xchg
xchg
push
loop
add
dec
xor
or
add
cmp
mov
sub
pop
cli
clc
pop
movsl
mov
sub
fisubrs
inc
lds
jle
adc
stos
cmp
and
pop
cli
dec
xchg
push
call
jno
or
sar
cmp
stos
jle
mov
fimuls
iret
pop
lret
ficomps
cli
enter
ljmp
push
mov
jp
jbe
sub
shl
lret
adc
xchg
fmul
sub
loopne
push
jmp
outsb
lret
jb
cmpsl
dec
stos
jg
mov
mov
dec
lret
scas
mov
ficompl
lock
inc
sti
sub
cwtl
testl
cmpsb
rorl
lret
sub
xchg
or
lretw
shlb
sub
inc
dec
out
push
dec
outsl
popa
inc
dec
mov
adc
jno
adc
mov
shl
cmp
mov
jbe
push
cwtl
jl
mov
filds
mov
dec
cmp
lret
mov
roll
pop
subl
ficomps
out
cmp
lret
sbb
push
and
mov
sar
dec
jae
adc
pop
or
mov
push
sbb
adc
cli
pop
fwait
repz
addl
lret
cmp
lret
outsb
jp
loope
mov
inc
fisubl
xor
leave
cmp
push
push
ficoms
lret
sbb
mov
inc
adc
lods
dec
fisubl
jae
in
push
push
cld
ljmp
mov
pop
bound
fcomps
push
sbb
stos
fdiv
sub
ljmp
adc
dec
loop
dec
cmc
push
adc
cmp
lcall
push
out
xchg
int3
push
push
mov
stos
test
mov
or
sarb
sub
pushf
fisubl
dec
scas
dec
cmp
iret
pop
into
imul
jl
icebp
loop
or
pop
push
int
add
adc
ljmp
test
xchg
pop
cwtl
fstl
push
adcb
pop
pop
push
test
hlt
mov
int
iret
lea
push
dec
loopne
pop
add
or
sub
das
loop
in
adc
out
push
fsubs
scas
jo
lock
mov
inc
nop
pop
xchg
jnp
out
xor
repnz
push
inc
and
in
insl
mov
lods
lock
cmp
or
test
fcoms
push
lahf
movsb
sub
xor
xor
xorl
ror
pop
inc
cmp
out
insl
mov
insb
mov
mov
or
into
hlt
das
jne
lret
mov
cmp
test
clc
sarb
into
mov
inc
hlt
lret
sbb
cmpsl
stos
cmp
push
js
iret
incb
pop
out
fsub
sbb
rcll
bswap
insl
pop
push
or
ja
daa
fidivs
nop
xor
imul
cmpsl
or
xor
mov
fisttps
push
mov
sub
fcmove
insl
sbb
outsb
sbb
pop
jne
cmp
and
mov
sbb
jmp
lods
xlat
xchg
mov
inc
fs
out
lret
push
mov
in
dec
lret
ror
xor
data16
xor
push
push
adc
push
les
or
push
ret
lret
iret
add
hlt
stc
dec
incb
mov
jmp
sbbl
scas
cmp
mov
xor
ror
inc
popf
and
push
sti
xor
nop
addr16
mov
and
push
xchg
aas
xchg
push
jb
decl
dec
xorl
dec
stos
push
daa
xor
setno
jle
xor
and
jnp,pt
push
inc
aad
push
lret
into
xor
pop
or
xchg
and
and
repz
xorl
shrl
fwait
add
add
test
aad
add
lret
xchg
xor
or
push
sahf
fidivl
cmp
sbb
jg
aad
stc
cmpsl
jmp
insl
fwait
sbb
lods
dec
lret
out
int
push
scas
pop
ds
push
xchg
push
call
cli
or
repnz
cwtl
clc
inc
lret
popf
fiadds
mov
stc
mov
nop
push
push
jle
and
jb
sbb
mov
aas
jmp
movsb
scas
notb
lds
add
pop
cmp
iret
inc
imul
mov
outsl
sub
scas
mov
push
divb
dec
in
int3
pop
int3
insb
sarl
daa
fldcw
lods
pop
add
repz
arpl
bnd
cltd
sar
pop
dec
sahf
fdivl
pop
inc
pusha
push
loopne
sub
loopne
and
retw
in
lea
add
fwait
rcrb
cmp
adc
pop
sub
fsubrl
sub
mov
sarl
mov
pop
cmp
cli
pop
or
repnz
inc
mov
into
push
and
in
lcall
shl
fcompl
jge
sbb
push
dec
xlat
shll
xchg
xor
add
or
and
push
into
mov
push
push
mov
and
lds
cltd
mov
fnstsw
adc
cltd
add
and
and
sahf
push
add
clc
movsl
pop
jne
xor
push
js
push
ss
cmp
inc
jp
imul
clc
dec
push
stos
push
bound
sub
jmp
sbb
popf
push
stos
mov
movsl
je
std
pushf
mov
loop
pop
or
into
jp
pop
push
jnp
fdivl
sarl
sbb
dec
insl
ficoml
and
mov
xchg
xor
std
mov
fcmove
lods
imull
out
lods
repnz
lret
pushf
push
and
sub
lret
mov
lds
mov
jns
lret
inc
repz
inc
ret
pop
xor
lret
xchg
cmp
lret
xchg
pop
inc
pop
sub
add
hlt
jo
clc
pop
mov
jns
dec
mov
xchg
cli
in
xor
std
pop
sbb
lret
cwtl
cmp
ficompl
push
dec
wbinvd
es
das
rcr
fisubrl
jae
int
sub
inc
shlb
xorb
push
xlat
sub
sahf
call
pop
inc
mov
sbbb
int3
xor
pop
repnz
out
nop
cli
jo
push
shrl
lea
xchg
mov
push
dec
mov
lahf
lret
or
dec
in
xchg
enter
inc
lret
xlat
and
stos
xchg
fistps
test
pop
push
pushf
mov
xchg
push
xor
enter
xchg
lret
push
add
xchg
mul
mov
add
jb
cmp
push
adc
push
out
xchg
lret
lods
jae
insl
sti
lret
jg
arpl
dec
xchg
jmp
push
or
push
rorb
shr
pop
pop
jge
mov
imul
jns
rol
pop
clc
inc
adc
cmp
psubq
or
fwait
add
sbb
adc
outsb
push
out
push
push
pop
and
gs
push
inc
jne
cwtl
inc
jno
rcrl
mov
lret
jb
das
push
jnp
jmp
jo
lret
push
iret
mov
js
dec
pop
jecxz
addl
lret
test
push
xlat
cwtl
test
pushf
or
lret
lcall
pop
loopne
lret
test
test
push
mov
ljmp
jp
pushf
sub
lret
adc
fistpll
dec
xchg
xchg
jbe
or
push
sub
sub
xor
mov
aas
pop
push
lret
cmp
xchg
shlb
xor
adc
into
out
mov
sti
aam
pushf
test
or
lret
je
out
insb
test
lea
lods
dec
mov
dec
daa
jo
aas
jns
push
fcmovne
lret
xor
cmp
into
cld
lret
pushf
xchg
jecxz
leave
subb
sub
cmp
push
imul
xchg
push
scas
sub
adc
mov
sub
int
ret
cmp
dec
cli
enter
std
adc
or
lret
pop
jnp
cmp
fbld
cmp
cltd
repnz
lret
insb
int3
push
add
mov
scas
cmp
lret
and
add
inc
push
outsl
inc
leave
ret
fsubrs
xor
iret
xchg
call
or
push
inc
or
stc
mov
and
pop
adc
rcrb
push
lock
stc
les
cli
cmp
jae
adc
lret
in
jge
icebp
ja
stos
testb
movsb
into
scas
inc
sub
fmul
fisubl
pop
ror
pop
or
pop
pop
js
imul
sub
mov
and
mul
and
mov
xor
pushf
push
adc
je
mov
loop
test
fidivs
lret
sub
cld
outsb
loopne
lcall
neg
ljmp
pop
mov
clc
iret
aam
jg
cmp
inc
or
mov
shr
add
movl
sub
pop
rcll
mov
aam
mov
sahf
shlb
lret
pusha
iret
mov
mov
sub
adc
sub
xor
test
add
push
push
sahf
and
lret
mov
lcall
xchg
cli
das
inc
js
popa
lret
mov
sbb
ret
dec
sarb
int
xchg
xchg
mov
lret
cs
inc
add
push
fs
add
fwait
lret
pop
ljmp
pop
lret
enter
js
pop
inc
ja
lret
jge
lock
scas
cmp
inc
add
lret
push
lret
pushf
push
movl
aad
imull
divb
inc
movsl
repz
fnsave
sub
sbb
xchg
test
fistpll
cmp
jbe
add
ret
clc
push
mov
sub
mov
pop
sub
mov
pop
dec
mov
fstl
sbb
jnp
call
lret
in
lods
sahf
mov
lret
or
rcrl
das
fmul
into
cmp
add
dec
cmp
int
lock
jb
mov
sbb
lret
repnz
addr16
insl
stos
lret
jg
push
jno
xor
pop
adc
mov
pop
sub
adc
lret
dec
xor
fiaddl
sub
xlat
lcall
int
mov
push
xor
lret
mov
xchg
lret
mov
push
sub
pop
fs
or
lock
lret
jno
xchg
mov
adc
sti
sbb
dec
mov
ficomps
shlb
or
and
mov
xor
jb
cli
ret
dec
mov
aad
call
push
mov
sarl
insl
xor
mov
les
inc
and
fsubs
in
lret
dec
fsubr
and
jmp
mov
push
push
pop
sar
lret
fsub
lahf
pop
or
scas
or
leave
cmc
add
movsb
sarb
cmp
push
sbb
leave
xchg
ljmp
mov
lds
cmc
ljmp
xchg
jmp
sbb
sbb
and
pop
dec
in
lret
es
inc
mov
jg
inc
adc
fisubrs
add
sarb
pop
nop
fdivrp
lret
movsl
push
pushl
dec
test
ds
mov
sar
cmp
loope
int3
lret
jp
xor
adc
lods
movsl
xor
mov
int3
jno
mov
inc
cmpsl
pop
lods
lret
sahf
inc
push
mov
jns
lock
icebp
pop
jl
fmuls
lret
hlt
xchg
enter
sti
and
test
ficoml
stos
xchg
test
inc
push
int
lret
das
push
inc
fldenv
pop
mov
cmc
pop
lret
es
imul
bnd
mov
or
mov
mov
lret
das
lods
iret
std
shrl
ds
pop
adc
clc
les
sub
jle
lds
sbb
lret
fst
cmpsb
scas
in
pop
lret
shlb
jae
or
lret
sub
add
scas
into
in
movsb
loop
or
int
imul
or
mov
sahf
sub
lret
jno
add
cmp
push
fisubrs
data16
notl
ret
push
inc
scas
add
scas
shll
fsubrl
push
orl
cmp
pusha
rorb
insl
inc
bound
pop
cmp
ja
ds
nop
sti
or
and
dec
xchg
lret
mov
imul
lods
push
sbb
daa
jno
push
arpl
in
inc
mov
cli
scas
sbb
out
cmpb
or
push
sub
mov
pop
ss
lret
sbb
mov
repnz
dec
ret
fimull
ljmp
rcll
fmull
cltd
fstpt
pop
outsl
pop
dec
cmp
mov
test
mov
cmp
cmp
rcll
mov
push
xchg
adc
jge
push
stos
repz
bound
mov
mov
inc
add
adc
lret
inc
and
push
lds
adc
lret
dec
or
orb
adc
stos
stos
sbb
sub
xor
add
nop
cmp
int
icebp
sti
bound
fsqrt
pop
sub
push
popa
stos
or
mov
jle
fsubp
ljmp
mov
mov
sub
sbb
mov
add
pushf
aas
into
lahf
test
lods
insl
cli
lret
in
push
mov
push
sbb
push
or
xlat
pop
ds
lret
les
shll
jmp
mov
jecxz
push
cmp
adc
mov
push
test
fimuls
lret
push
das
les
lret
pop
lock
dec
lret
pop
jp
cltd
stos
jae
add
dec
cmp
out
movsl
mov
lcall
stc
pusha
jo
cwtl
mov
xlat
jl
adc
out
out
mov
fisubl
mov
mov
iret
int3
scas
and
lret
daa
lret
sbb
ja
sbb
mov
mov
das
int
jnp
push
test
cmp
rolb
popf
dec
lds
into
or
mov
jns
addr16
test
movsb
cmp
loop
cmpsl
mov
xchg
xor
js
daa
push
inc
fisubl
add
mov
icebp
rcrl
lds
lret
push
enter
stos
jmp
cs
adc
jnp
lret
leave
jo
shrb
popf
inc
cltd
cmp
enter
sti
sar
enter
insb
xchg
adc
fistl
cmpsl
mov
adc
out
cmp
dec
call
or
mov
cmc
pop
add
jae
flds
cltd
adc
cmp
push
pop
push
and
cmc
jnp
jle
or
fidivrl
xchg
gs
inc
pop
lret
jne
xor
jae
sti
das
in
out
dec
mov
xchg
push
shrb
outsl
into
jns
dec
pop
hlt
sub
mov
xor
inc
js
sbb
push
lret
mov
jecxz
lret
jge
xchg
cli
sti
scas
and
inc
imul
pop
rclb
ds
gs
and
aaa
lret
mov
test
rolb
mov
negl
xchg
xor
insb
and
notb
fs
pop
mov
and
sub
nop
mov
lret
fisttps
data16
test
mov
ljmp
inc
aam
fdivl
fcmovu
in
mov
mov
mov
dec
inc
cli
mov
pusha
lock
fucomp
adc
mov
mov
jecxz
inc
iret
lds
cmpsl
inc
jl
pop
stos
push
xchg
addr16
dec
aad
ljmp
jnp
fcmovu
lea
pop
mov
cmp
aad
xchg
dec
sbb
push
icebp
ret
and
cli
jmp
das
lret
inc
pop
ss
push
xchg
lret
pop
adc
cwtl
or
inc
inc
stc
add
or
jo
fisubrs
lahf
shlb
mov
inc
insl
addl
dec
push
insb
sahf
inc
cli
ljmp
sub
cmp
daa
mov
and
dec
das
inc
loop
mov
fildll
push
push
mov
ficoml
inc
cmp
int3
daa
jb
call
jne
in
lret
fimuls
adc
pop
jnp
push
nop
imul
movsl
js
dec
lods
scas
mov
mov
pop
or
dec
js
mov
lret
and
push
out
sbb
push
xchg
rorb
popa
sbb
cmc
es
xor
mov
lret
xor
mov
into
mov
dec
sti
sub
mov
mov
outsb
lods
loop
pop
inc
in
mov
leave
dec
cld
push
cmc
fcoml
insb
flds
das
mov
loope
rcrb
sub
adc
outsb
xlat
cld
call
xlat
cltd
leave
mov
hlt
xor
jp
inc
ljmp
test
imul
shrl
push
cmp
push
bound
std
fsubrs
mov
outsb
jecxz
aam
sub
cmp
repnz
dec
cwtl
add
out
dec
adc
fisubrl
xlat
jge
jne
pop
rcrb
push
mov
sub
sbb
push
add
pop
mov
mov
pushf
shlb
lods
mov
dec
inc
pop
push
int3
aam
pop
push
loope
or
out
inc
lret
push
das
test
xor
lods
in
sub
test
aad
repnz
cs
mov
push
inc
mov
push
fcmovnbe
ja
pushf
xchg
sbb
in
jns
mov
mov
repnz
dec
cmp
shrl
insb
push
sbb
push
andl
rcr
jmp
add
insl
ljmp
mov
pop
mov
dec
xchg
aam
push
in
mov
mov
lahf
fwait
jmp
sar
xchg
ret
add
ss
lret
cmp
lret
xor
push
mov
lret
sbb
mov
es
stos
out
xor
or
lcall
fisubrs
xor
outsl
dec
mov
mov
xor
fmull
dec
nop
xor
mulps
xchg
mov
lret
xor
mov
or
lret
add
scas
lods
lret
mov
jge
scas
nop
lret
xor
sti
xchg
push
lret
cmp
pop
and
lods
and
mov
gs
cltd
inc
into
xor
clc
fbstp
lret
xor
add
sahf
adc
sub
arpl
test
mov
imul
lret
push
jo
cmp
lret
dec
fsubs
xchg
adc
sub
cs
mov
mov
fwait
jge
mov
xchg
bound
shlb
ret
int3
cmp
lret
mov
sub
mov
shlb
jb
dec
pop
mov
mov
pop
add
jno
fidivl
sub
fidivrs
gs
push
fxch
mov
cltd
rorl
cli
jbe
xchg
cld
mov
ret
lahf
mov
xor
sbb
lret
clc
stos
mov
push
push
into
adc
imul
dec
lret
jl
push
inc
cwtl
pop
lret
xor
and
lock
mov
xchg
stos
adc
xor
mov
scas
push
lret
sar
mov
popf
pop
lds
pop
and
lret
idivl
push
adc
bound
ss
dec
test
sti
test
push
sahf
int3
or
cmp
hlt
mov
ljmp
mov
enter
out
sbb
imul
inc
lret
xor
aad
dec
stos
sub
lods
fisubl
rcrb
lcall
add
inc
fsts
pop
int3
sbb
adc
or
dec
icebp
imul
test
xlat
jb
push
mov
mov
xor
jg
jp
test
push
xor
pop
data16
lret
in
aad
popa
jo
mov
cmp
in
cmc
das
inc
popa
mov
push
pop
leave
mov
into
mov
lds
xchg
in
scas
mov
xlat
lret
push
xchg
pop
pop
ret
out
cli
addl
fmuls
lahf
or
shll
outsb
dec
mov
push
mov
or
xchg
sub
add
sub
push
aas
mov
xchg
cmp
sbb
sub
push
xchg
or
or
lret
out
push
cmp
mov
call
cmp
inc
leave
sti
lret
xor
fsts
popa
adc
xlat
pop
cltd
cmp
popa
inc
mov
lret
cmp
and
loop
mov
lds
lret
dec
popf
daa
rol
pop
lret
xchg
mov
cld
mov
ss
mov
cmp
and
lods
lret
loope
sub
dec
mov
mov
pop
xchg
aad
sub
add
cmp
sbb
orl
outsb
and
lret
cmp
movsb
sbb
and
nop
mov
outsb
mov
jp
int3
cmc
lds
dec
inc
jge
push
ljmp
lret
pop
iret
mov
xchg
or
clc
popa
fnstcw
jp
shll
lret
int
xchg
test
sub
ficoms
cli
xor
add
arpl
subl
into
push
push
jae
icebp
jns
daa
adc
mov
lret
stos
popf
pushl
sar
cli
pop
cltd
cmpsl
or
push
dec
jb
jbe
popf
jp
xchg
scas
ret
into
les
or
fstps
or
sahf
jbe
fisubl
lods
cmpsb
or
loopne
addr16
pop
out
lret
outsb
test
and
mov
push
lret
xor
push
lods
idivb
inc
stc
cmp
in
dec
lret
mov
fisttpll
daa
cmp
mov
lahf
add
fisubrl
adc
sar
or
insl
xchg
cmp
int3
lcall
sub
adcb
fsubs
mov
dec
cltd
cmp
fidivl
hlt
jecxz
into
aas
mov
sahf
lods
adc
push
inc
stos
adc
or
rclb
aad
lret
dec
push
hlt
cmpsb
mov
lret
inc
jo,pn
lret
pop
retw
gs
dec
scas
into
idiv
mov
or
insb
xchg
push
fdivs
mov
jecxz
repz
sbb
scas
push
lods
jmp
cwtl
cwtl
push
in
pop
lret
push
xor
jge
lret
pop
das
add
imul
sbb
sub
insb
inc
hlt
lret
addr16
test
bound
and
ja
dec
int
lretw
mov
leave
and
int3
shl
pusha
mov
nop
fstps
and
ret
movsl
ret
adc
int
enter
stos
insl
test
ret
outsb
mov
int3
cmpb
mov
popa
dec
push
add
mov
addr16
mov
xchg
loop
mov
inc
arpl
sahf
inc
fimull
cmp
lcall
or
cmp
pop
das
jae
lret
mov
jge
idivl
pop
stc
adc
int
fwait
sarl
pop
adc
mov
dec
lret
push
sub
sbb
test
xchg
add
fisubl
push
popa
iret
cld
add
push
movsb
ret
xor
out
cli
dec
fidivl
pop
cli
fcmovbe
cmovnp
pusha
cld
ds
je
pop
push
fimull
mov
lods
push
xor
mov
shl
cltd
jmp
push
and
mov
jmp
clc
rcrb
sbb
push
jg
imul
in
fisubrl
pop
mov
aaa
xor
sbb
les
mov
arpl
loop
push
ds
mov
sub
pop
push
es
int
dec
or
add
push
or
xor
mov
cmc
or
rcrb
loope
pop
fisubrs
mov
iret
cmpsl
ss
jae
pop
or
inc
push
stos
pushl
inc
mov
lret
mov
lods
cli
int3
jns
out
aad
or
pop
outsl
into
cmc
or
rorb
xchg
stos
into
jmp
xchg
divb
cmp
cmp
cwtl
lret
jns
sub
in
popa
rorb
or
push
into
insb
cmpsb
cmp
push
or
iret
pop
jp
rcrb
pop
dec
lea
mov
cmpsb
movsb
ja
pop
push
fdivrs
xor
cltd
jmp
es
in
cli
out
int3
pop
movsb
fwait
out
imul
inc
adc
sub
mov
xchg
aas
add
mov
xchg
sahf
xor
mov
ss
xlat
addr16
pop
pop
ret
clc
outsb
xchg
popa
mov
push
call
fadds
push
or
repnz
ret
xchg
sbb
cli
mov
movq
orl
dec
cli
iret
imul
pop
xor
fimuls
lea
xchg
inc
sti
jb
bound
and
push
or
test
or
pop
movsl
sub
cmp
addr16
js
mov
int
clc
jp
lcall
rclb
repnz
xchg
push
ret
or
xchg
rorb
iret
xchg
cli
negb
jge
shl
das
imul
xor
jge
mov
loopne
xchg
push
cli
cmpb
aaa
outsl
mov
xchg
lret
cmpsl
testb
add
movsl
mov
in
jp
adc
lock
sti
in
add
aam
or
sbb
push
inc
xchg
repnz
inc
jae
ficoms
lret
das
push
fimull
aaa
xchg
dec
mov
xor
xor
mov
int3
cli
cmp
popf
stos
mov
mov
int3
lea
sbb
out
adc
push
pushf
pop
rorl
push
jne
in
push
cmp
lods
lret
add
jbe
adc
sub
pop
lret
jo
mov
out
sbb
stos
imul
bound
cltd
push
xor
and
sub
es
fcompl
or
ror
icebp
dec
sub
lahf
sbb
dec
push
jo
cmp
out
mov
data16
sbb
push
cwtl
ja
push
xchg
repnz
int3
jno
lahf
test
in
dec
add
stos
jge
dec
shrb
into
cmp
xchg
sub
fwait
add
or
addr16
cs
jmp
ficoms
jnp
fldt
fimull
cmp
stos
clc
push
cmp
xchg
bswap
mov
leave
outsl
lret
loop
in
sub
jp
fcoml
icebp
cs
int3
pop
scas
pop
sbb
loop
fsubrl
jecxz,pn
rcrb
push
imull
in
repz
inc
je
push
popf
push
pop
cmp
jmp
sub
push
lret
inc
jnp
sub
imul
insl
sub
lret
testb
mov
add
out
xor
adc
pop
jnp
adc
ret
fdivrs
lret
lcall
adc
jb
fidivl
ret
lret
shrl
xlat
xchg
pop
ljmp
cli
dec
loope
dec
lds
pop
push
imul
mov
add
js
cli
cmpsb
int3
sahf
inc
or
cmp
inc
lahf
lret
jae
outsb
movl
xchg
ljmp
pop
fnsetpm(287
sbb
fisubl
cmpsl
leave
mov
pushf
pop
inc
lret
cmp
mov
add
cmp
mov
adc
aam
pop
dec
mov
push
add
orl
or
ret
sub
std
push
ffreep
cltd
pop
lret
daa
mov
jne
idivb
lret
rolb
cmp
loopne
jno
adc
cmp
push
loope
dec
lods
mov
pop
push
iret
das
push
test
idivb
xlat
mov
adc
rcr
xor
shrb
pop
push
outsb
and
inc
fdivrs
inc
xor
or
dec
fcmovb
dec
repz
sub
lock
out
mov
lcall
cmp
sub
mov
lret
add
mov
insl
jg
push
shrb
fidivrl
frstor
and
cwtl
lret
jnp
test
dec
stc
lret
repnz
add
or
pop
mov
cmp
xor
cli
insl
movsl
push
int3
mov
pop
fucom
stc
xchg
or
push
push
adc
pop
rcl
mov
imul
flds
lret
cld
xchg
pop
pop
outsl
and
scas
inc
mov
push
inc
leave
cmp
movsl
cwtl
push
cmp
popf
or
loop
lods
sahf
icebp
cmp
adc
sbb
pop
stos
sub
dec
fsubrs
xor
lret
ds
sarl
sub
cmp
lret
in
addr16
xor
adc
jge
mov
jecxz
bound
nop
inc
lret
push
push
ljmp
shlb
lretw
mov
pop
rclb
cmp
in
fmulp
into
adc
sbb
dec
cwtl
lahf
sub
cmp
jo
andl
push
fnstenv
lock
dec
push
daa
cmc
inc
jmp
shrb
movsb
mov
xlat
cmp
push
xchg
pop
jne
jne
lret
mov
stc
out
sub
cs
pop
or
ficompl
pop
fsubrl
js
jp
daa
sarb
int
lock
mov
pop
mov
int
insb
bound
dec
testb
into
dec
in
lret
dec
aaa
jns
dec
dec
fiaddl
les
sub
jae
cld
mov
loop
mov
mov
and
pop
in
int3
pushf
repnz
push
push
test
xor
cmp
clc
mov
shlb
dec
jb
insl
fcmove
jno
jecxz
loopne
xchg
adc
les
and
push
jne
rcrb
movsl
rcrb
sbb
mov
lea
jg
dec
xor
mov
lret
addr16
int3
xchg
lds
lods
and
dec
lock
pop
jns
shrb
popa
dec
cli
push
mov
pop
sub
mov
pushf
lret
fiadds
cmp
mov
dec
lock
fdivrs
popa
lcall
pop
loopne
add
lret
or
pop
int3
mov
adc
stos
dec
loop
mov
sbb
loopne
or
pusha
xchg
and
test
test
lcall
xchg
int3
xor
lahf
into
or
sub
nop
add
lock
fiaddl
sbb
scas
lret
mov
cmp
dec
jl
dec
sub
lods
rcl
inc
call
jns
loop
iret
cld
paddq
lret
xor
jnp
jbe
or
into
cmp
fs
xor
scas
lods
sbb
adc
mov
stc
lret
dec
mov
mov
mov
push
fs
sbb
and
push
pop
roll
icebp
iret
mov
sbb
stos
daa
mov
inc
repnz
sub
jmp
push
pop
sub
lret
in
lret
mov
clc
stos
inc
sbb
add
cmp
add
lcall
repnz
lea
jmp
rcr
sbb
jne
mov
sbb
mov
or
pop
dec
imul
cmp
call
and
into
int3
lea
sub
stc
sbb
mov
gs
mov
mov
and
lret
xor
fwait
or
fldl
lret
fs
mov
pop
xchg
sub
xchg
adc
mov
shrb
push
int3
sub
fcom
into
sbb
mov
and
pop
sub
sub
pcmpgtw
dec
js
pop
ds
insl
fiadds
mov
adc
ficoml
stos
rorl
pop
push
nop
pop
imul
push
cwtl
cmp
clc
mov
pop
push
mov
adc
sbb
int3
lret
rcrb
test
xlat
aas
jne
rclb
inc
lret
mov
or
jbe
xor
xor
lret
mov
js
xor
push
pop
push
lock
lret
inc
sbb
movsl
das
stos
add
mov
jno
sub
adcb
cmp
clc
push
mov
mov
into
mov
int
fcomps
scas
imul
and
and
mov
ljmp
cmp
add
xchg
xchg
rcr
stos
mov
loope
sbb
sbb
inc
pop
xchg
outsl
sub
jne
cmp
lcall
lret
mov
sbb
int
jmp
std
sub
ret
mov
loop
sub
arpl
sbb
inc
fisubl
mov
jae
mov
ret
inc
jbe
shll
scas
mov
aam
pop
arpl
cld
shlb
add
iret
int3
lret
mov
mov
push
adc
aad
movsl
lds
jecxz
and
cltd
lret
mov
mov
mov
inc
or
add
jecxz
jmp
fwait
mul
lret
in
mov
lret
js
out
xchg
cmp
add
sti
sbbl
xor
lods
jmp
ds
les
shrb
jl
xor
lods
fldcw
repz
sbbl
jp
movsb
ljmp
pop
mov
cli
add
pop
int
cmpsb
test
cmc
xchg
or
and
lcall
cwtl
into
nop
repz
jmp
test
into
stos
pop
mov
fildll
dec
out
scas
sbb
add
aad
popf
shrl
pop
cmp
add
mov
lret
mov
les
dec
jp
or
dec
pop
mov
insl
cmc
xchg
sub
pop
jne
and
into
out
cli
inc
adc
or
ret
hlt
pop
add
push
stos
dec
sti
orl
lret
mov
push
sbb
js
mov
cld
fdivrl
orl
pop
out
jbe
push
push
js
sbb
or
cmp
dec
test
jbe
xor
and
mov
fdivrp
aam
jmp
or
pop
mov
and
fs
cmp
dec
xor
dec
cmp
mov
ficoms
lret
or
push
mov
lret
aam
mov
jmp
ja
ret
aaa
adc
sub
push
pop
jp
test
jge
xor
sub
mov
mov
mov
das
cmp
cli
insb
in
rorb
rorl
jns
icebp
pop
cmp
pop
outsb
cmp
fmuls
cmp
popf
inc
pop
shrb
arpl
mov
mov
mov
mov
in
lret
add
popa
outsb
add
push
and
call
in
mov
lret
mov
fsubrs
mov
add
outsl
push
fimuls
jo
nop
adc
das
icebp
push
lret
in
je
jae
pushf
movsl
popa
inc
lds
adc
fisubrs
leave
push
fistps
mov
add
sub
lret
repnz
cmp
cli
clc
mov
pushf
jp
dec
xchg
cmp
push
rorl
loope
mov
cmp
add
cmp
add
pop
data16
push
jbe
inc
imul
fstps
sti
cli
dec
mov
stos
push
jecxz
insl
test
inc
mov
dec
lret
add
xor
cmp
sub
jns
push
cli
aam
push
fwait
imul
lret
fcmove
out
sbbb
aam
jp
xchg
les
iret
sbb
push
push
bound
jne
cmpb
lds
or
ljmp
dec
xor
xchg
sbb
cmp
lret
xor
adc
stos
inc
lock
imul
mov
jo
mov
or
mov
out
lea
jp
xchg
test
stos
dec
mov
loopne
xchg
push
jl
sahf
outsl
push
mov
icebp
sbb
adc
inc
or
mov
das
pop
mov
call
incl
sbb
sbb
xchg
jns
into
cli
pop
sbb
lea
mov
or
ds
lret
scas
jg
lods
push
cs
nop
and
rol
lods
fsubrl
xchg
std
inc
xor
mov
pusha
inc
sub
popa
int
pusha
mov
int3
pop
add
dec
lock
sbb
mov
andl
mov
and
fists
xor
inc
shlb
andb
inc
lret
and
jmp
leave
or
clc
dec
xor
out
int3
addr16
mov
pop
pop
fcoms
movsl
mov
or
jp
xlat
js
jns
shlb
add
loop
push
pop
lods
js
xor
aas
bound
ror
pop
scas
dec
sbb
add
xchg
fidivrl
xlat
pop
lcall
scas
sub
xchg
aad
inc
sub
imul
dec
punpcklwd
inc
ficoms
in
mov
xchg
push
pop
inc
shrb
sahf
ljmp
sbb
prefetchnta
push
sbb
jl
call
mov
insb
in
jl
fiadds
pop
aad
pop
dec
gs
push
dec
dec
push
sahf
xor
inc
iret
push
cmp
ret
xchg
mov
jmp
sbb
stos
ficoml
xor
add
mov
lret
push
or
lret
mov
sub
faddp
push
sbbb
fxch
cmpsb
dec
jp
mov
mov
leave
sbb
stc
idivl
lods
lret
push
mov
and
jnp
mov
outsl
mov
stos
fmul
dec
ror
xor
loopne
xchg
daa
mov
rorb
pushf
add
lret
fdivrs
push
clc
out
and
push
fnstsw
adc
mov
insb
lret
pop
clc
push
mov
mov
cmpsb
xor
mov
xor
rorb
push
push
ror
pop
adc
not
std
mov
mov
mov
or
xchg
stos
add
jo
push
or
push
pop
sbb
push
or
out
lret
decl
adc
add
mov
mov
push
cmp
scas
or
dec
std
xor
rclb
testl
fidivl
mov
pop
mov
push
jmp
imul
ja
xchg
bound
cmp
dec
lret
sub
or
or
add
cs
rol
ljmp
jle
sar
cmp
push
lret
mov
fidivl
and
jmp
lret
adc
das
and
loop
into
nop
sahf
jo
jl
mov
int3
mov
ja
xchg
or
push
pop
loopne
push
add
push
stos
jnp
fistpl
ficoml
cs
inc
push
stos
adc
or
enter
or
xlat
into
sub
std
mov
pop
jge
xchg
fcompl
pop
decb
dec
loop
xchg
pop
mov
push
dec
mov
gs
and
int3
jecxz
cmp
cmp
and
repnz
dec
fisubl
ret
out
out
and
shll
popa
gs
pop
cs
sbb
push
fsubrl
lds
cs
mov
fistps
outsl
or
dec
ffree
cwtl
aaa
pop
lret
lods
sti
test
sar
mov
mov
adc
sbb
out
fcoms
lret
mov
call
mov
lret
sbb
out
push
xchg
fistpl
adc
mov
repnz
leave
lret
and
cli
inc
jecxz
jno
adc
or
test
call
ds
fcoms
fcmovb
xchg
push
push
push
mov
mov
shrb
jno
fs
xchg
aaa
lret
mov
mov
fistpll
out
inc
inc
bound
cmpsl
push
ljmp
dec
lret
mov
iret
lret
test
scas
test
fwait
outsb
mov
fidivrs
int
dec
cli
jle
and
mov
lret
mov
outsb
lret
push
out
mov
push
lret
in
push
icebp
bound
fucomp
rol
push
mov
pusha
fs
mov
dec
rclb
inc
mov
jge
push
jns
lea
arpl
jbe
xor
les
lea
lret
cmc
mov
lret
lahf
insb
dec
mov
sbb
fs
in
movsb
andl
lret
int3
push
jg
lret
addl
jnp
je
cs
add
pop
in
sbb
std
xchg
sub
xor
data16
xor
mov
int
mov
adc
adc
mov
pop
dec
jmp
sbb
push
loop
xor
xor
lret
xchg
pop
cmc
scas
add
pop
jl
xlat
pusha
adc
cmp
stos
inc
bnd
pop
mov
clc
sbb
int3
and
test
insb
add
lret
mov
mov
aad
daa
repz
mov
insb
push
lods
lret
add
lret
frstor
cmp
cmp
mov
push
pop
jo
cli
and
cwtl
jp
add
ljmp
sbb
fdivrs
mov
pop
icebp
xor
repz
dec
in
lret
push
push
popa
ljmp
lret
in
fdivrl
jge
scas
lahf
pop
jecxz
jg
add
mov
cmp
pop
lret
repz
pand
dec
pop
jecxz
in
xchg
cmp
fidivl
stc
xchg
sub
mov
mov
adcl
push
aam
das
or
into
adc
mov
lret
fmuls
and
mov
sub
lret
loop
div
mov
sub
mov
shl
jle
js
not
dec
sub
lret
pushf
pop
inc
jl,pn
cmp
lret
jmp
or
mov
pop
ljmp
lret
or
push
or
lret
mov
mov
push
aas
stos
jge
add
popf
fisttpl
jecxz
mov
adc
int
fisttpl
jb
lret
and
lret
pushf
int
mov
or
jo
push
ret
lret
inc
fdivrl
xor
mov
sub
ss
inc
push
add
lds
inc
lret
fstpt
add
add
out
or
xchg
idivb
or
js
sbb
inc
mov
popa
aam
sub
cmpsb
cmp
lret
and
sarb
aas
xor
pop
test
aaa
push
sbb
pop
lret
sub
mov
fnstenv
dec
nop
mov
sbb
iret
push
out
mov
jg
hlt
lea
xchg
add
ret
cmpsl
or
dec
cli
lods
daa
aad
flds
addr16
mov
sub
xor
mov
cmp
push
or
adc
cli
imul
mov
xor
cmp
dec
aaa
and
cmpsl
lods
cmp
bound
stos
std
hlt
sub
lret
cli
nop
push
mov
stc
repnz
cmp
imul
cltd
lahf
je
sbb
ss
or
mov
shrb
dec
insb
orb
lods
and
sti
loopne
int
push
lret
or
lahf
idiv
push
fimull
jbe
mov
xchg
inc
ss
cmp
fstl
adc
push
pop
mov
loope
push
shll
xor
cmp
fiaddl
outsl
inc
subl
push
push
mov
lret
das
out
or
xor
mov
repz
loope
ljmp
xchg
or
stc
aad
insb
ja
inc
cmp
xor
mov
mov
adc
and
fisttpll
push
dec
dec
xchg
fcompl
ficomps
mov
call
push
dec
outsl
fsubrl
sahf
and
and
ss
pop
pop
and
call
or
rorb
jp
mov
push
je
inc
ss
rcrb
dec
fs
sub
hlt
lret
or
mov
dec
movsl
mov
pop
cli
inc
lret
fimuls
inc
ror
scas
fmull
mov
lret
jbe
xchg
mov
push
addl
insb
mov
xor
sub
push
adc
lret
xchg
pop
sbb
mov
arpl
clc
jb
cmp
lret
push
pusha
xchg
insl
mov
ret
xchg
es
ja
mov
pop
lret
and
ss
sti
jns
inc
jno
jmp
out
mov
fcmovnu
mov
and
iret
test
sbb
popa
stos
push
sbb
and
addr16
out
mov
jmp
mov
pop
mov
xor
and
push
test
jp
stos
mull
lods
int3
loop
or
aas
fwait
xor
inc
pop
sti
add
add
lea
fildl
pop
jno
mov
cmp
sbb
lret
xchg
fdivs
cltd
int
sti
mov
adc
xchg
shrb
mov
sbb
mov
jb
xor
out
mov
mov
fadds
mov
fisubrs
sbb
ror
mov
add
lret
add
fmuls
in
mov
pop
mov
bnd
ljmp
mov
lea
test
fisubrs
out
mov
rol
lret
addr16
repz
popf
pop
rcrb
scas
pop
push
into
xchg
cld
adc
fidivl
aaa
ror
lock
xor
pop
ljmp
fucompp
dec
lahf
push
mov
cmp
lret
pushf
out
arpl
scas
stos
fnstsw
jp
mov
lods
cmp
jne
call
insl
push
lods
xor
jmp
outsl
fxch
shrb
pop
jl
adc
pop
popa
lods
loop
stos
leave
jmp
jnp
cmp
pop
lret
mov
mov
and
lods
out
mov
push
mov
dec
outsl
mov
lret
cmp
push
push
jp
dec
sbb
sahf
or
imul
push
pop
or
pop
xchg
dec
in
outsb
out
inc
jmp
pop
mov
loop
push
lret
clc
pop
nop
outsb
push
push
sub
cld
scas
gs
fiaddl
jae
in
or
notb
mov
adc
fstpt
testb
dec
adc
rcll
xchg
sbb
jns
push
int3
cwtl
dec
or
jne,pn
fs
neg
movsl
rcll
jp
pop
outsb
fadds
imul
and
loope
fcmove
jge
jb
cmp
loop
test
pop
mov
sahf
dec
mov
neg
mov
pop
mov
out
dec
cltd
add
popa
xchg
mov
pop
outsb
ret
std
xor
jb
scas
loopne
repz
mov
or
pop
fistps
lahf
cmc
jae
pop
dec
stos
pop
xor
sub
scas
mov
lret
mov
cmp
mov
into
popa
rcrl
cli
jge
std
mov
jns
jmp
mov
shr
xchg
dec
mov
andb
sub
stos
inc
lret
adc
outsb
lret
mov
pop
adc
add
pop
cs
lret
shl
dec
push
mov
lret
push
dec
adc
push
dec
sub
sbb
dec
or
stc
out
imulb
fmuls
or
enter
shrb
jbe
ret
jmp
test
jnp
lcall
sarb
jmp
xchg
cmp
cwtl
xchg
lock
inc
pop
cmp
or
out
popf
mov
mov
cvtps2pd
in
sahf
cli
and
aam
xadd
xor
lcall
sub
incl
push
jb
and
mov
pop
and
push
mov
inc
int3
lds
gs
jp
addb
lock
mov
jge
int3
movsb
or
adcb
or
out
icebp
ret
sbb
cmp
pop
xchg
int
xor
fisubrl
sub
ds
int3
mov
jb
xchg
lret
iret
xor
stos
pop
pop
pusha
cli
je
hlt
lods
test
int
jno
cmpsl
mov
and
scas
xchg
hlt
push
fmuls
and
pop
mov
mov
jp
lret
add
ret
hlt
xchg
xchg
flds
dec
sub
and
stc
pop
cmp
test
and
sbb
lds
insb
pop
sub
test
sti
add
enter
stc
sbb
outsl
fwait
add
or
lret
test
int
in
lret
lea
repz
lret
mov
hlt
mov
mov
ja
or
push
sub
add
shll
xor
mov
inc
fcmovb
shll
push
xor
popa
iret
push
or
xchg
data16
daa
sbb
enter
in
nop
mov
push
sub
push
jbe
add
mov
rclb
lcall
inc
das
and
mov
loopne
adc
mov
adc
lret
xor
fiaddl
in
jmp
loop
push
inc
mov
push
in
repz
mov
sub
dec
sbb
ret
mov
inc
lret
xchg
fimull
jbe
sub
xor
dec
imul
fdivs
insl
pop
xor
and
push
mov
adc
push
dec
xor
mov
xchg
push
out
mov
sub
rolb
test
xor
sbb
adc
repz
sub
out
rcrb
add
enter
hlt
and
dec
mov
repnz
arpl
lret
xchg
cmp
push
lds
lret
fsubs
dec
sbb
push
leave
data16
shll
xlat
fimuls
aas
stc
xchg
mov
mov
insl
push
jge
mov
cmp
push
dec
xlat
lods
jmp
and
pop
hlt
mov
sbb
out
dec
and
int3
mov
lret
push
cwtl
mov
xchg
aad
push
mov
inc
xchg
jne,pt
cmp
adc
enter
arpl
mov
dec
fwait
sti
add
lret
pushf
daa
add
push
xor
inc
les
xchg
sub
test
xlat
insl
or
in
cmpsb
rcr
mov
lret
lea
lret
jecxz
outsl
add
add
subl
in
push
pop
mov
cli
stc
addb
test
ss
push
xor
dec
cmp
mov
aam
out
ljmp
fsubs
add
lret
push
cmpsb
jecxz
int
adc
popa
repnz
xor
and
stos
sbb
inc
push
mov
cmpsb
rcr
xchg
mov
les
cltd
stc
out
test
dec
jge
cmp
mov
push
inc
lret
cmc
outsb
mov
dec
mov
xor
xchg
sbb
jge
inc
adc
fsub
enter
mov
loope
lret
sbbl
lret
js
repnz
fidivl
jmp
cltd
or
lods
repz
pop
sbb
stos
outsl
in
dec
stos
mov
inc
enter
add
add
jbe
mov
add
or
mov
xchg
sti
lds
stos
iret
popf
dec
loop
jge
les
sbb
aaa
xchg
loope
dec
sbb
repnz
pop
ficompl
mov
add
loope
aad
xchg
pushf
into
cli
mov
xchg
lcall
lret
lahf
mov
jp
cmpb
xchg
or
shr
lock
dec
sub
lret
push
movsb
mov
leave
cmp
in
insl
mov
lret
pop
jg
lret
mov
push
fimull
icebp
push
hlt
dec
andl
std
lret
shrl
inc
lret
sbb
push
xchg
dec
cmp
fdivl
add
fsubs
into
push
mov
mov
icebp
sahf
push
bswap
jns
fildll
test
or
lret
je
nop
adc
icebp
pusha
lret
test
jl
divb
negl
scas
daa
shrl
and
mov
push
pop
fucomi
jp
jns
lret
into
sarb
mov
cmp
movsb
icebp
ficoml
hlt
ret
fstp
xor
cli
jp
addr16
ja
test
fadds
inc
push
icebp
daa
bound
outsb
fdivrp
int3
push
jns
sti
mov
xchg
mov
push
cmp
or
or
and
xchg
inc
into
jb
lods
fsubs
out
inc
es
and
lcall
cmp
loop
add
andl
push
sbb
aas
leave
add
aaa
or
sub
dec
cmp
sub
cmp
nopl
inc
fwait
jecxz
or
jl
xor
and
mov
imul
jne
scas
xor
jle
fst
cli
push
into
add
stc
adc
xor
dec
out
jge
push
or
mov
sti
xor
push
mov
repnz
es
push
dec
pop
popf
stos
lahf
lcall
hlt
testl
sub
sub
scas
xchg
shl
lret
addb
pop
adc
lret
adc
inc
clc
inc
lret
fcomps
sub
lods
mov
int3
adc
clc
lret
jb
fsts
pop
push
sbb
insb
les
repnz
sub
jno
rclb
lret
xchg
pop
push
aas
push
jl
fcmove
xchg
addr16
cmp
rolb
ljmp
lret
mov
cmp
jbe
sub
ret
fisubrl
sti
divl
lock
rclb
test
or
shrb
out
loope
in
loopne
out
mov
add
inc
or
dec
pop
sar
loope
lret
mov
cltd
xor
xchg
aad
mov
sub
dec
rcr
shlb
stc
adc
and
rcrb
xor
mov
stc
and
xor
push
jb
cmp
sub
or
aad
and
idivb
xchg
pop
push
cltd
scas
push
add
dec
int
popf
mov
ret
fiaddl
not
lods
or
int
clc
xchg
adc
into
clc
cmp
jae
stos
int3
jle
aaa
repnz
push
in
or
mov
mov
dec
or
mov
jl
mov
jmp
popf
pminsw
adc
fdivrs
xlat
test
push
movsb
pop
sahf
lcall
rorb
loopne
jno
adc
stos
pop
outsb
popa
lret
adc
lret
ret
scas
mov
lret
add
ret
aad
lret
mov
in
mov
in
pop
mov
jp
mov
fdivs
add
jle
shlb
cs
push
icebp
lret
add
adc
jge
fwait
inc
shlb
xchg
and
cmp
dec
xor
sarb
enter
or
jp
push
and
mov
neg
pop
mov
jno
cmove
sub
sub
cltd
cs
scas
loopne
lret
xchg
push
repz
push
jns
jge
aam
dec
lret
or
dec
aam
xchg
mov
fistpl
aad
lret
or
pop
lods
adc
add
sarb
dec
cmp
cli
dec
push
mov
outsl
push
sbbb
xchg
jae
out
int
mov
ficoml
mov
rcll
xchg
fxam
push
ficompl
icebp
repz
dec
dec
jne
arpl
call
mov
xor
loop
cmp
shlb
pop
out
mov
mov
dec
jmp
or
mov
lret
mov
dec
inc
aaa
add
sub
push
stos
jmp
cld
lcall
pop
add
or
lret
fdivrl
popf
or
push
pop
ffreep
lret
jg
lret
cmp
lret
rcr
lea
sub
add
shlb
and
popf
fs
gs
inc
jle
mov
test
lods
sbb
aad
mov
stos
push
mov
sub
pop
mov
stos
lret
scas
sbb
cmpsb
pop
cmp
xlat
or
sub
jmp
pop
sub
lahf
push
push
bound
test
stos
mov
xchg
dec
dec
scas
and
or
xor
stos
pop
sarb
mul
and
lret
test
xchg
push
cwtd
lret
jl
xor
mov
into
cmp
fstpt
out
std
cmc
ss
or
lock
aas
aam
lahf
xchg
mov
fwait
jae
popa
mov
sbb
loope
mov
mov
mov
or
cmp
repz
mov
out
nop
mov
lock
jp
sub
push
imul
lret
push
fs
scas
jmp
daa
cmpl
xchg
fldcw
fimuls
jmp
push
add
fsubs
inc
cli
push
adc
mov
pop
outsl
add
roll
mov
scas
xchg
and
sub
dec
jno
mov
xor
jg
iret
mov
into
lods
dec
aam
sub
mov
cmp
stos
or
and
mov
pop
int3
dec
jle
ss
cmp
insl
pop
movsl
jne,pt
push
lret
adc
mov
test
mulb
mov
xchg
cld
mov
xchg
sub
and
adc
jae
bound
fdivl
mov
inc
mov
sahf
stos
xor
imul
mov
enter
pusha
or
into
push
in
lret
push
fisttps
and
nop
mov
xchg
mov
mov
adc
mov
and
pop
jnp
lret
les
lods
jne
lret
mov
dec
mov
lret
pop
scas
or
adc
or
addb
xchg
ffreep
pusha
lahf
loope
cmp
daa
mov
shrb
sahf
shrl
jb
mov
dec
add
stos
movsb
push
int3
xchg
inc
xchg
fdivrs
xchg
and
dec
div
xor
xlat
out
mov
mov
rolb
test
sbbb
out
dec
xchg
rolb
mov
cmp
mov
loop
or
sub
int3
mov
in
aad
subb
mov
mov
shlb
int
xor
andb
repnz
push
loop
stos
mov
int
cmp
dec
jge
pop
bound
das
pop
add
push
cli
rclb
inc
ljmp
sub
ss
mov
sub
enterw
push
outsb
dec
mov
mov
sub
fsts
or
scas
mov
dec
mov
or
mov
cmp
jl
lret
mov
sbb
pop
pop
inc
lret
loop
outsb
mov
scas
lock
lods
fisubs
mov
mov
push
cmpb
jb
pop
cwtl
ds
enter
add
int
mov
lret
mov
cmp
ja
mov
inc
mov
lods
das
imul
cmpsl
push
lahf
lret
movsb
pop
cmp
mov
cmp
addr16
and
lret
int3
sub
les
push
fs
mov
xchg
add
dec
push
psraw
xchg
leave
push
icebp
sub
jae
push
lret
lds
call
repz
push
sbb
pop
mov
push
or
sbb
mov
imul
add
popf
sti
pop
out
popa
flds
aas
cmp
push
mov
sbb
fildll
repnz
out
mov
add
inc
bound
or
imul
loope
rolb
scas
dec
inc
adc
mov
add
or
fucomp
loopne
test
lea
dec
sub
in
lock
lds
push
insb
and
cmp
aam
lods
loope
adc
push
lcall
aam
je
or
lods
xchg
mov
adc
enter
or
pop
push
scas
loop
imul
pop
dec
lcall
push
dec
test
test
push
mov
negl
push
mov
pop
stc
stc
js
out
jmp
sub
insl
imul
cmp
repz
xchg
xor
cmc
lahf
pop
out
imul
aas
pop
pop
clc
or
mov
add
pop
jl
test
in
imul
rcrb
mov
push
jmp
jb
lret
std
out
mov
dec
sbb
pop
rolb
xor
mov
dec
cmp
and
push
mov
mov
sub
xor
arpl
inc
lret
sarb
xchg
gs
lret
mov
mov
lahf
cmc
cld
mov
testl
fstpt
lret
addr16
sub
pop
cmp
into
lcall
dec
jle
mov
mov
fcmovbe
mov
lret
popl
xorl
and
in
mov
fcmovu
movsl
das
cltd
pop
stos
push
sbb
insl
fidivrs
repz
lret
imul
orl
fcmovbe
xchg
xchg
dec
into
lea
jne
jb
aaa
testl
fwait
push
xor
inc
add
add
pushf
scas
add
aas
push
enter
fwait
aam
cli
in
add
stos
fdivrs
push
into
test
cltd
in
cmp
xchg
lret
jo
push
lret
js
fwait
cmc
orb
jle
imul
xchg
cmp
fiaddl
push
mov
test
dec
lret
dec
mov
jmp
pushf
cmp
fdivs
cmpsl
sub
in
lret
xor
lret
jecxz
pop
inc
loope
lret
stos
dec
repnz
je
lret
mov
mov
push
dec
pushf
pop
mov
fcmove
cltd
or
and
lret
nop
xlat
insl
push
out
js
popa
push
cmpl
adc
or
rcl
add
mov
sbb
jge
and
adc
lcall
dec
in
and
cmpsb
push
inc
xor
mov
lret
jle
stos
gs
cmpsl
xor
add
into
lahf
push
dec
xlat
repnz
xor
enter
scas
inc
mov
sub
adc
jecxz
cmpb
xchg
xchg
rol
xor
add
xor
into
aaa
xor
adc
iret
push
jmp
into
sarl
stos
fmuls
outsl
adc
hlt
jp
dec
int3
xchg
lods
mov
lret
pop
je
cmc
dec
mov
push
lods
mov
sub
xor
aam
mov
fsts
mov
mov
lods
lret
xor
out
rcrb
pop
shlb
xchg
es
push
mov
addr16
test
imul
cmp
or
add
push
mov
ficoms
sub
repnz
dec
lret
xchg
stc
mov
movsb
lds
pop
notb
mov
pushf
les
lret
clc
movsb
fistpll
lret
imul
testb
loop
lret
out
mov
jmp
popf
xchg
shr
pop
push
stos
sub
lahf
sarl
xor
pop
data16
lods
sub
clc
xchg
push
ret
in
andl
lret
mov
int
fmull
ljmp
pop
xchg
pop
lret
lcall
lret
aaa
mov
fdivrl
shr
inc
icebp
andl
or
lahf
lods
lods
shl
stos
xchg
sub
outsb
cmp
arpl
movsl
cld
mov
mov
btc
movsb
cwtl
rcrb
loope
jp
and
inc
push
test
sub
adc
inc
jb
mov
movsb
and
lret
bound
clc
dec
lret
fs
sbb
lret
cmpb
dec
lret
xorl
cld
mulps
lret
rclb
sbb
push
out
add
sahf
cld
push
cli
rcll
shrl
mov
cmpsb
test
or
ret
cli
push
rcr
cmpsb
pop
mov
jmp
dec
test
sbb
mov
test
dec
push
or
js
in
fdivl
sbb
cmpsb
int3
fldcw
dec
mov
push
rcrl
and
test
and
addr16
iret
xchg
mov
cltd
adc
adc
jecxz
clc
pop
pop
jmp
mov
hlt
cs
cltd
inc
mov
rcl
jmp
mov
aaa
add
jge
gs
mov
mov
pop
jno
test
push
mov
lret
scas
jl
sub
loope
lret
jnp
popa
iret
xchg
aad
cmp
jmp
mov
xchg
or
mov
mov
decl
mov
mov
jne
lcall
jnp
ret
fsubs
cs
add
subb
mov
push
sti
cmp
dec
lds
lods
inc
jo
sarl
add
xchg
mov
lret
mov
std
rclb
pop
xor
inc
adc
nop
rorb
sub
lods
imul
and
jge
fcomp
add
cmpsl
mov
aaa
jno
lret
ljmp
rcll
push
outsl
adc
movsb
aam
cmp
rcrl
je
fcmove
jle
jbe
push
test
lods
push
sub
dec
inc
xchg
add
int3
sub
es
into
data16
lret
and
mov
mov
adc
dec
pop
sub
leave
mov
adc
lret
pop
imull
add
inc
jg
stc
add
fdiv
rorb
imul
movsb
cmp
sub
push
sbb
add
adc
lea
inc
scas
inc
xchg
test
aaa
idivl
fidivl
jb
mov
test
subb
push
pop
cld
gs
cwtl
cltd
outsl
fldcw
xor
iret
int
int3
fldenv
or
mov
xchg
imul
xchg
fadds
aad
ljmp
out
pop
jo
pop
xor
or
ret
sub
pop
out
xchg
inc
cld
mov
and
dec
stos
cmp
fmulp
xchg
ja
dec
jbe
cmp
inc
cmpsl
test
sbb
sti
xchg
dec
into
lret
jp
push
and
repz
jge
jne
mov
dec
lds
fdivrs
sub
into
pop
cmpsb
fimuls
cs
cwtl
sarl
push
adc
xor
data16
lret
pop
xchg
icebp
cmp
xchg
xor
in
mov
mull
je
pop
mov
jl
rcr
xor
movsb
jnp
pushf
test
es
mov
pop
lods
mov
mov
iret
sbb
push
bound
test
lret
rolb
sbb
pop
mov
lods
jecxz
pop
lret
enter
jl
xchg
add
notb
loop
and
push
jnp
inc
push
data16
jae
xor
xchg
and
js
outsb
mov
cli
lret
pop
fstpt
cltd
lret
dec
and
fmul
adc
fadd
dec
mov
gs
loopne
cmp
cli
lret
push
dec
scas
es
lds
push
imul
mov
add
lret
sti
cmp
test
mov
jl
shll
xchg
push
lret
stos
sbb
pop
cli
lret
in
jmp
gs
loop
inc
dec
mov
leave
pop
inc
lods
les
rcrb
mov
rorb
shlb
cltd
das
push
xchg
dec
mov
cmpsl
lret
std
ret
les
int
mov
cli
adc
xchg
sbb
fmul
repz
and
mov
sti
popa
insl
xor
add
je
mov
int3
mov
mov
xor
push
sub
rcl
push
jae
lret
cwtl
in
inc
pop
lret
int
mov
mov
cmpsb
stc
lahf
loope
nop
popf
cs
and
lret
push
mov
les
mov
aam
lea
test
bound
xchg
decl
popf
ud2
mov
ljmp
insb
repnz
out
cli
mov
add
aas
sbbb
int3
push
jg
adc
das
inc
inc
sub
std
ficompl
pop
vhsubps
pop
into
mov
inc
mov
cmc
notl
ret
addr16
inc
and
out
test
enter
mov
adcl
int3
addr16
test
sbb
pushw
mov
fiaddl
shr
jno
dec
lret
add
or
repnz
lcall
int3
jmp
xchg
outsl
into
push
mov
adc
push
mov
ljmp
hlt
cmp
pop
or
imul
push
adc
dec
mov
lret
jl
jge
aam
lods
ljmp
inc
fcomp
fcoml
lret
adcb
xchg
pop
push
outsl
push
into
lods
xor
int3
add
jnp
lret
xsave
pop
bound
mov
mov
inc
stos
pop
cmp
pop
dec
xchg
ss
pusha
lods
cli
mov
popf
xchg
lret
xlat
pop
pop
es
rcrb
jge
dec
lods
fistpl
mov
dec
mov
dec
lahf
lret
xchg
or
add
stos
jne
mov
out
aaa
ficoms
fldt
dec
lret
mov
adc
lea
push
outsl
scas
push
mov
jnp
push
cld
ficompl
stos
aaa
fwait
or
mov
clc
int3
inc
xchg
jb
xchg
int3
aas
mov
lret
nop
pop
cmp
xor
les
movsl
cmp
mov
lock
push
ret
xor
in
popf
je
lret
or
fcoml
fidivl
sub
ljmp
and
ss
inc
mov
add
inc
sub
xchg
mov
cmpsb
adc
mov
xor
push
sbb
fdivl
ds
mov
inc
pop
in
xchg
sbb
lods
lea
dec
in
fldl
out
lret
lods
pop
sub
cltd
inc
adc
rorb
mulb
bound
arpl
shlb
adc
cs
testl
mov
xchg
sarl
add
lods
mov
fstps
lret
xchg
ja
cmpsl
ds
cmp
mov
mov
jno
aas
imul
sub
sub
loope
cmovge
enter
push
loopne
sbb
stc
pop
ror
insl
inc
mov
push
addl
ja
lret
lret
adc
stos
lock
or
test
and
mov
sbb
cwtl
punpckldq
fucomip
fimull
adc
out
cltd
imul
dec
sbb
jp
scas
pop
and
cmp
loop
adc
pop
jle
imul
shlb
inc
pop
push
cli
push
inc
in
rolb
daa
clc
rolb
lret
inc
pop
push
cmc
scas
cli
xchg
jl
inc
iret
push
lret
sbb
cmpsb
inc
dec
jge
mov
mov
mov
mov
sub
jb
mov
repz
aam
movsb
repnz
sub
cwtl
cltd
ds
jmp
out
push
scas
cmp
mov
adc
jo
clc
loop
sbb
dec
sub
mov
and
xchg
pmulhuw
push
xor
sti
shrb
jp
inc
lret
jg
sbb
mov
or
add
xor
rorl
push
xchg
lea
in
inc
hlt
aam
jg
dec
iret
lret
or
fisubs
mov
mov
mov
mov
ds
movsb
ficoml
or
jg
mov
mov
push
push
adc
repnz
cli
ficoms
mov
mov
mov
aad
sub
loope
lret
sahf
aad
arpl
sarb
pusha
pop
xlat
aas
pop
sbb
dec
pop
lret
mov
js,pn
clc
dec
lret
sti
cltd
adc
cmp
push
mov
fadd
xlat
pop
jge
add
loope
fldt
dec
mov
pop
lret
cltd
jb
popa
sbb
fcmovbe
inc
je
mov
push
pop
sub
cmp
mov
iret
ljmp
mov
jmp
xlat
lret
fmuls
cmp
lret
or
xchg
and
rcrl
and
push
imul
scas
aam
popa
adc
fwait
jbe
into
dec
aaa
and
int
int3
sub
je
insl
daa
jns
scas
cmc
push
in
repnz
sub
lret
stc
frstor
mov
lds
push
int
fsubrs
jp
push
add
lcall
mov
cmpsb
dec
or
psrld
sub
mov
mov
or
sbb
jmp
lret
mov
jg
outsb
nop
xchg
mov
jb
dec
dec
loop
pop
mov
pop
jecxz
test
loop
hlt
lcall
mov
icebp
lret
pusha
imul
add
aad
test
enter
flds
jne
icebp
cmp
mov
imul
mov
popa
inc
sbb
lret
cwtl
fadds
cmpl
add
lret
sbb
or
mov
test
mov
mov
test
mov
inc
or
outsb
in
mov
adc
lcall
add
fs
pop
mov
cmp
mov
mov
call
mov
pop
jb
fisubl
push
jmp
lret
mov
movsb
lret
jp
push
lds
push
lret
scas
sub
mov
xor
rolb
xchg
mov
rclb
pusha
sub
push
inc
lret
fiadds
jmp
sbb
lret
fisttpl
adc
jp
add
cmpsl
loope
movsb
fcom
mov
pop
ss
pop
cwtl
fxch
int3
cli
push
cli
fsubl
cmp
rol
push
rcrl
inc
insl
mov
pop
and
pop
cmp
sub
and
pop
jbe
lret
pusha
ja
jns
mov
lret
or
rcl
lret
xchg
repz
hlt
popa
cmp
mov
mov
neg
scas
cmpsl
fsubs
int
imul
pop
mov
and
pushf
jmp
mov
sub
fisubl
outsl
cmp
shl
push
mov
xor
pop
or
mov
pop
pop
jmp
mov
adc
shll
mov
xchg
shrl
enter
fmul
out
dec
xor
lret
ror
jae
inc
and
lret
insb
aad
mov
js
stos
cmp
dec
pop
pop
jge
pop
inc
push
rcl
in
mov
pop
mov
dec
xlat
lods
fdivr
fidivrl
es
outsl
cltd
fstl
and
cmp
fs
dec
icebp
lret
aas
mov
fstps
cmc
lret
fcmovne
mov
stc
lret
and
mov
cmp
in
fsubrl
mov
jae
es
iret
xchg
or
aad
push
out
dec
adcl
aaa
gs
lea
mov
loopne
insb
xor
mov
or
cs
sbb
out
in
jbe
mov
mov
rcl
add
add
jg
mov
xchg
jb
xchg
mov
lret
dec
daa
rcr
sbb
dec
and
aam
push
pusha
mov
shlb
jbe
fcmovnbe
cmp
pop
sbb
into
repz
sbb
jo
cli
ret
leave
fwait
push
or
movsb
lret
mov
sub
ret
lret
pushf
cmp
cmp
xchg
mov
lret
int3
outsl
add
cmp
fucomip
xchg
fdivrs
mov
je
lretw
adc
dec
mov
inc
sub
add
or
xchg
movsb
fwait
lea
cli
rol
mov
sti
or
cmpsb
into
cmc
sbbl
mov
mov
jmp
dec
pop
pop
or
out
std
xchg
pop
cwtl
lret
movsl
mov
mov
xchg
cld
outsb
cmp
out
mov
sub
nop
inc
sub
icebp
mov
jg
bound
mov
sub
sub
mov
pop
arpl
sbb
jp
sbb
fstl
cmp
jns
push
insb
scas
mov
add
fsts
pop
mov
or
mov
mov
pop
shll
movsl
push
ljmp
xchg
push
cli
out
rclb
out
pop
xor
sbb
jne
sbb
or
dec
jle
test
mov
mov
xchg
push
lret
push
in
xor
xor
loop
adc
dec
loop
pop
loopne
add
rolb
mov
push
cmp
add
pop
dec
mov
sarb
add
mov
enter
nop
pop
xchg
xor
xorl
xor
mov
sbb
movsl
outsb
xor
aaa
xchg
sbb
mov
jmp
inc
mov
xchg
cmp
sbb
lret
xlat
icebp
push
dec
mov
sbb
jmp
shrb
cmpsb
mov
popa
sub
push
int
ja
movsb
insb
or
push
ljmp
iret
mov
mov
push
je
adc
dec
in
test
or
neg
cmpb
jl
int3
dec
mov
dec
dec
fcomps
pusha
in
xchg
in
cmp
stc
lock
push
inc
in
inc
insb
dec
jge
adc
xor
push
dec
es
sahf
pop
sub
sub
jge
arpl
leave
jmp
add
rorb
xor
mov
or
adc
mov
orb
ret
push
dec
lret
mov
rorb
mov
mov
pop
cwtl
sbb
call
mov
clc
and
jnp
in
fs
leave
and
jle
cli
mov
push
cmc
or
out
adc
adc
test
pop
mov
push
sahf
sub
std
sbb
jecxz
ljmp
scas
xchg
sub
sbb
scas
rcl
aam
or
add
rorl
xchg
sti
out
imul
rorb
in
push
add
in
xorb
push
sbb
fnstsw
add
push
push
mov
neg
test
rcrl
jp
outsl
addr16
insb
or
sarb
xchg
pop
sub
adc
andb
push
xchg
lret
sahf
dec
out
test
cltd
lret
mov
mov
adc
enter
dec
cmp
int3
mov
sbb
fsubrl
lret
cwtl
test
inc
push
ljmp
sbb
lret
enter
adc
push
aas
fbld
aad
and
rol
notl
test
dec
into
pop
pop
pop
and
or
aam
jns
lret
aam
int3
add
stos
imul
cmp
push
mov
dec
cmp
inc
jns
aad
stos
push
loop
into
mov
lahf
add
xchg
sub
lds
loop
mov
fwait
leave
rcl
stc
sub
cmpsl
xchg
cltd
cmp
xchg
rorl
dec
fidivrs
in
xchg
loope
pop
sub
into
xchg
push
adc
out
aaa
leave
pushf
mov
stos
mov
pop
int
das
push
aas
dec
dec
testb
add
mov
jge
lret
fdiv
sub
cli
xor
mov
inc
pop
inc
fiaddl
pop
and
aam
lret
inc
adc
mov
sub
pop
and
add
and
xor
adcl
lret
cli
mov
stos
and
iret
int3
fisttpll
orb
push
pop
out
cmp
pop
stos
popf
lcall
mov
lret
jnp
icebp
in
mov
sbbb
sarb
or
stos
sbbb
lret
outsl
stc
mov
or
inc
jmp
jmp
aas
jbe
xchg
fimull
cmp
dec
jp
in
imul
dec
ret
cmp
inc
in
scas
loopne
test
dec
fsubl
sub
xor
in
lods
push
cmp
cmp
xchg
mov
add
mov
fiadds
pop
dec
mov
int3
xor
sub
pop
test
xor
cmp
jo
pop
imul
mov
push
push
sbbl
cmp
push
or
adc
repnz
gs
pop
aam
lds
lret
inc
adc
pop
xchg
sub
push
jns
push
mov
dec
shl
movsb
lea
ss
lret
dec
mov
cmp
ljmp
xchg
pop
mov
inc
lret
and
sbb
fstp
pop
out
or
sbb
push
imul
jecxz
jmp
lret
xchg
and
test
dec
ret
cmp
cld
lret
add
dec
fisubrl
jns
mov
push
push
adc
ja
push
push
xor
cmp
outsl
xor
mov
rclb
lret
or
lret
mov
dec
cmp
or
ja
ds
popa
or
push
lret
stos
pop
xor
inc
or
in
xchg
cmpl
xchg
daa
dec
in
hlt
lock
psubd
jo
arpl
sub
dec
jge
aas
push
jns
nop
lahf
loope
cmp
leave
push
pusha
inc
stos
add
mov
xor
inc
repz
test
aad
in
push
pop
fcomps
and
hlt
xchg
psubd
add
push
lret
icebp
jnp
push
cs
scas
jae
mov
cmp
mulb
sarb
pop
or
fcoml
or
or
and
fisubrl
rcrb
cmc
clc
or
pop
lret
int
jo
scas
gs
dec
push
shl
xchg
xor
les
jle
and
outsb
xor
je
lds
negb
adc
mov
fcmovbe
stos
pop
sub
repnz
daa
fcmove
repz
aaa
pop
cli
insb
lret
push
mov
js
mov
and
mov
sbb
icebp
stos
iret
push
add
testb
cwtl
sbb
stos
aas
cmp
aad
test
pop
inc
in
or
stc
mov
inc
repnz
call
pop
push
aas
repnz
pop
pop
in
push
push
ret
jge
and
mov
cld
rolb
sub
enter
adc
cmp
dec
lret
outsb
xchg
ficomps
test
outsl
cmp
stos
mov
dec
lret
jno
xor
or
xor
pop
es
cs
outsl
int
xor
mov
lock
push
or
lret
adc
rcrb
stos
jge
cld
int3
jae
mov
add
repnz
mov
out
pop
divl
fidivrl
loope
addr16
int3
adc
cli
inc
cmp
mov
jae
rcr
xchg
iret
jno
imul
mov
sub
bound
push
sarl
pop
fnstenv
test
push
stc
sbb
mov
ss
xor
xchg
lahf
jmp
outsb
inc
sbb
outsl
mov
add
cmp
xchg
or
mov
lret
mov
mov
pop
rcll
adc
mov
sbb
xor
pop
lock
stos
mov
pop
out
test
mov
lret
sub
adc
cs
insl
es
fidivl
inc
fimull
stc
movsb
stos
sbb
pop
pop
pop
lret
push
int
jnp
lods
pop
hlt
mov
xor
mov
pusha
stc
jle
mov
or
adc
hlt
mov
insb
fisttpl
dec
ja
sub
dec
rcrb
pop
into
sbb
leave
insl
adc
and
ficoml
test
sbb
shrl
std
jp
mov
inc
imul
clc
sbb
push
jns
lret
pop
in
gs
lret
mov
cwtl
lret
inc
mov
lods
mov
or
lret
lock
out
dec
fsubrs
lret
outsl
add
lret
xor
arpl
stos
push
lret
add
into
mov
stos
lahf
mov
lret
xor
mov
or
ss
cmp
fcomps
sub
shll
imul
in
xchg
jp
sub
fstpl
shlb
mov
addr16
xor
mov
mov
dec
int3
inc
mov
xchg
lret
adcl
mov
or
pop
xchg
hlt
inc
loop
xor
pop
popf
mov
imul
mov
icebp
cmp
movb
lret
ret
fsub
mov
pop
aas
aam
inc
or
lds
in
out
inc
lret
in
stc
pop
daa
mov
mov
push
addb
xor
imulb
ficoml
in
lcall
cmpsl
lret
dec
shrl
mov
lret
dec
xorb
jl
mov
aad
lret
dec
mov
lret
call
push
lret
ss
mov
sbb
fidivrs
xor
cmp
aam
pop
push
cli
scas
fildl
cmp
xlat
mov
das
jnp
out
stc
iret
push
or
outsl
cmove
add
scas
sbb
mov
leave
rcrb
cmc
ljmp
mov
dec
mov
jno
imul
leave
imul
xor
xchg
add
jge
cs
lret
push
out
scas
dec
clc
daa
in
cmp
mov
fstpt
insl
sti
cmpl
inc
sbb
xchg
xor
cmp
jecxz
pushf
xchg
in
dec
fmuls
lret
incb
faddp
cmp
shll
lret
cwtl
mov
sar
mov
mov
cmp
sub
in
out
adc
mov
pop
pusha
push
inc
dec
lret
out
add
or
fnstcw
lret
stc
imulb
cli
lret
sub
xchg
adc
and
adc
jg
push
add
mov
pop
loop
iret
jl
sar
mov
pop
test
lret
sub
xchg
out
data16
and
loop
mov
mov
lock
sub
adc
daa
or
test
aam
dec
fcomi
fiaddl
jle
xor
xor
outsb
rcrb
das
leave
jne
jecxz
out
mov
lahf
mov
adc
sub
ljmp
fcoms
loop
das
je
inc
inc
test
mov
dec
pop
inc
pop
jp
jbe
arpl
or
mov
ficompl
add
xor
ror
je
adc
sbb
lret
pop
aam
jno
lods
lods
mul
add
js
jecxz
and
in
dec
inc
push
cmp
lret
je
pusha
dec
sbb
aam
loope
lods
mov
loop
jmp
stos
xor
sbb
lret
aam
cmp
cmp
mov
push
mov
mov
xchg
cmp
lock
lds
shlb
out
cli
mov
xor
push
repz
cmp
testb
pop
dec
xchg
mov
inc
fiadds
cs
add
lret
insl
je
cld
cmpsl
movsl
das
or
daa
mov
xchg
cmp
xchg
sbb
inc
repz
pop
mov
hlt
pop
cmp
sbb
or
bound
lcall
testb
fldcw
fwait
pop
cli
mov
fcoms
das
xor
ss
mull
pop
xchg
test
mov
in
xchg
bound
mov
and
mov
push
and
mul
out
cltd
pop
ja
out
ret
pop
pop
lret
mov
pop
lods
push
xchg
scas
enter
push
ja
jo
push
sbb
and
cmp
jns
mov
mov
mov
sar
int3
in
mov
sub
xor
push
dec
test
aam
add
ljmp
inc
pop
sarb
lret
pop
push
ret
or
test
fistl
mov
inc
sbb
push
test
mov
test
stc
stos
xorl
pop
sbb
popf
sbb
push
fsubr
jo
inc
jbe
mov
shll
mov
cmp
pop
rclb
mov
inc
cli
fsubr
lods
adc
aad
cmp
inc
stc
dec
data16
inc
xchg
shl
stos
sbb
movsl
sub
push
xchg
adc
xchg
add
lret
xchg
repnz
xchg
and
push
pop
and
sahf
std
lret
dec
ret
fcmove
rorb
hlt
cmp
mov
jae
xor
gs
adc
or
lret
jbe
pop
movsl
jecxz
stos
stos
mov
daa
mov
mov
sbb
lret
jne
sbb
xchg
je
or
pop
xor
loop
fdivs
mov
or
lret
mov
jae
adc
popa
xorb
xchg
scas
bound
or
roll
sbb
cmpl
lret
lods
insl
add
lret
lahf
jno
inc
pop
push
lret
jp
jb
iret
out
or
cs
fwait
push
pop
xchg
mov
ja
sub
outsl
inc
pop
insb
int3
or
aam
push
cld
out
lret
out
jmp
and
ret
push
sbb
pop
jo
insb
ss
out
xchg
call
in
push
pop
dec
sbb
pop
imul
push
inc
push
push
aad
jle
loope
or
rolb
jg
cmp
mov
mov
sub
dec
call
and
dec
dec
mov
out
fs
mov
xchg
in
pop
ret
loope
rcr
push
push
das
fisttpll
test
cwtl
mov
jmp
lret
aad
xlat
rclb
sbb
sub
ficompl
out
sbb
fdivs
mov
loop
inc
ret
mov
sbb
imul
mov
adc
lea
repnz
sub
negl
dec
aam
push
jle
movsl
push
orl
imul
pop
push
fdiv
push
jmp
pop
int
repnz
imul
mov
lret
push
jbe
movsl
aaa
imul
out
pop
mov
hlt
cmpsl
sub
lret
xchg
in
js
sub
pop
or
cmpsb
jl
dec
nop
adc
sahf
sub
sbb
fcmove
push
arpl
cmp
movsb
fs
lret
inc
inc
pop
jle
out
pop
stos
cmp
mulb
lret
fst
int
pop
das
mov
fidivl
add
add
mov
sub
mov
sbb
push
or
subb
lahf
pop
push
sbb
daa
inc
loope
dec
or
mov
mov
out
mov
inc
outsb
or
xlat
inc
push
lret
nop
stc
and
mov
faddl
mov
jmp
jo
mov
pop
out
inc
int3
sub
cmp
lret
inc
inc
cli
rorb
adc
stos
xor
adc
cli
loope
add
sbb
xor
jp
ret
lret
pop
mov
lret
add
testb
loop
push
inc
mov
aaa
add
xor
cmp
push
push
mov
roll
pop
popf
aam
ror
xlat
add
cmp
mov
fnstcw
cs
inc
jl
sub
ljmp
mov
loop
shr
js
aas
jns
nop
int3
repz
lock
scas
dec
adc
imul
sub
cmpb
dec
xchg
scas
ret
inc
adc
xorl
sbb
xor
int3
in
scas
push
dec
dec
jp
stos
add
push
mov
lods
mov
cmp
push
leave
push
dec
inc
clc
cmp
mov
orb
push
sbb
cltd
sbb
in
jmp
jns
sbb
fcoms
leave
cmp
fcmovbe
push
add
rorb
aas
jecxz
pop
aad
push
pop
add
rclb
cmpsl
cmp
xchg
in
add
int
cltd
sti
insb
adc
out
scas
cmp
lret
xor
sub
sbb
lret
shlb
push
lret
mov
lret
jbe
xor
and
loopne
addr16
xor
jp
adc
aad
xchg
fcmovb
pop
cmp
rorl
dec
fsubl
test
fiadds
jg
mov
lret
xchg
fs
scas
jmp
shl
popa
das
xchg
vmwrite
mov
mov
jmp
ror
lods
jg
mov
test
push
push
out
into
negb
pop
dec
pop
push
cmc
es
into
ret
scas
pop
or
cmp
data16
test
test
lret
cmpb
mov
push
mov
es
add
shl
dec
ja
loope
pop
mov
cmp
jno
int3
outsl
fldcw
movsb
lret
sub
mov
in
inc
insl
cwtl
and
aad
addr16
pusha
sub
dec
int
sub
lret
stos
sbb
push
scas
lret
add
dec
cwtl
mov
enter
stos
loope
fnsave
lods
ror
lods
bound
ficomps
sub
fwait
popa
fildl
into
notrack
jecxz
test
xchg
sbb
aaa
shl
stos
cld
fdivrl
sbb
xchg
mov
push
imul
hlt
mov
in
add
in
cmpsb
xchg
iret
mov
mov
push
jno
enter
xchg
mov
push
in
and
lods
push
mov
fimuls
xor
decl
push
aaa
inc
and
stc
arpl
outsb
es
xor
adc
mov
negb
lods
js
lahf
cli
inc
pop
data16
mov
add
lret
scas
adc
out
int
cmp
jnp
mov
and
daa
lea
inc
stos
xor
aad
fwait
lods
and
fsubs
pushf
cmpsl
shrb
and
aam
popf
mov
inc
xorl
sbb
lret
mov
pushf
aad
jge
mov
gs
jbe
idiv
enter
int
push
and
or
lods
rcr
push
adc
sbb
test
or
sub
jo
je
jge
mov
sub
mov
mov
lret
pop
xchg
cli
and
sbb
mov
cmp
adc
cmp
dec
and
lret
arpl
das
pop
rcl
pop
lret
pinsrw
test
lret
or
scas
loope
or
inc
mov
aaa
adc
in
mov
cmp
add
cltd
lock
sub
dec
push
out
or
mov
aad
mov
inc
sub
sub
adc
mulb
jns
repnz
imul
pop
lret
mov
mov
push
pop
imul
mov
lret
mov
gs
add
js
lret
xor
pop
rclb
and
ret
xor
pop
mov
insb
mov
aas
adc
les
pop
in
sbb
jmp
in
push
sub
mov
adc
dec
sub
addr16
cmpb
xchg
sbbl
pop
andb
mov
std
loopne
fwait
push
cmp
push
push
mov
out
mov
in
fcoml
cmp
loope
pop
fildll
dec
push
addr16
or
sarb
push
insl
insl
cli
adc
lods
xchg
sahf
fstps
pop
mov
or
lret
and
mov
rolb
mov
arpl
inc
mov
les
adc
lret
imul
jp
mov
lret
mov
mov
pop
cmc
inc
iret
jb
inc
add
or
test
lea
ljmp
lret
pop
dec
int
xor
rcrl
cmp
rol
sub
dec
cltd
icebp
lret
test
movsl
mov
mov
imul
jecxz
mov
mov
mov
scas
aad
leave
rcl
pop
divb
jne
imul
cli
test
dec
rol
sbb
cmp
outsb
sub
mov
outsl
in
dec
ss
mov
fsubl
idivl
cmp
xchg
dec
jge
mov
mov
iret
jnp
arpl
stos
bound
hlt
sbb
lret
lcall
pop
loopne
push
and
enter
lods
orl
dec
add
shlb
push
gs
mov
in
inc
xchg
repz
dec
cmp
cmp
std
mov
lret
pushf
push
pop
add
xor
cmp
cld
push
fisubl
sub
mov
or
pusha
push
cmpsb
inc
leave
inc
rclw
dec
xchg
lret
movsl
into
test
lret
pop
addr16
xchg
adc
insl
sub
cmp
popa
pop
adc
jle
push
lods
and
dec
shl
push
iret
stos
lods
fwait
add
dec
mov
lret
test
jg
popa
lock
inc
fndisi(8087
mov
fdivrs
jmp
xor
pop
jle
and
sub
xorb
cmp
int3
fstpl
rcll
mov
mov
stos
lret
adc
rorl
pop
dec
ss
xor
pop
lods
les
test
push
shr
sub
inc
or
fists
xchg
rcll
clc
mov
enter
jnp
fidivrl
sbb
aad
imul
out
jno
lock
iret
xchg
cli
jg
pop
push
js
pop
push
lods
adc
nop
aam
aad
lret
pop
out
pop
vminsd
push
dec
add
ret
shlb
mov
ljmp
ficoml
repz
inc
xchg
sbb
push
imul
cmpsb
lret
cmpl
cli
into
shl
push
sbbb
mov
and
hlt
mov
aas
shlb
jle
sbb
fistpll
push
cs
fwait
insl
and
sbb
mov
aam
mov
fadds
iret
lret
in
inc
add
je
xchg
orb
push
sub
flds
push
ljmp
adc
daa
jne
cli
sbbb
jbe
rcll
cmpsb
call
and
push
pop
sub
lret
outsl
push
ss
pop
test
test
inc
or
cltd
lret
fs
out
pop
or
and
pop
adc
rclb
lock
in
dec
or
sbb
test
outsl
xchg
or
xchg
cmp
cli
pusha
outsb
sbb
lret
sti
cmp
sub
or
or
mov
lret
ds
iret
inc
call
mov
in
fwait
add
pop
jbe
lret
rol
cwtl
inc
xchg
outsl
lret
mov
loop
jl
lret
rorl
inc
insl
dec
clc
xor
cs
cmp
add
jge
clc
lcall
aad
add
push
leave
pop
lret
test
or
adc
mov
xchg
fwait
cmpl
sub
fisubrl
leave
add
cmp
dec
sbb
xchg
int3
aad
out
push
inc
pop
push
sub
lods
jno
out
jb
cmp
cltd
ficompl
arpl
sbb
and
dec
lret
in
outsb
mov
aam
push
icebp
lret
and
mov
filds
mov
inc
mov
sti
jno
lods
dec
frstor
jae
jmp
aas
pop
fadds
or
into
and
data16
pop
mov
push
lret
repnz
sub
cmp
add
push
ret
jecxz
rorb
fxch
and
and
push
lret
test
sub
sub
neg
inc
fsts
mov
ljmp
imul
subl
scas
adc
pop
loope
lret
repz
popa
lret
in
jle
pop
push
and
test
dec
adc
stos
jne
and
pop
push
sub
inc
aam
xchg
movsl
fists
mov
popa
pop
adc
push
sub
jecxz
stos
jge
aam
pop
ds
add
mov
sbb
sub
lret
and
adc
mov
popf
push
fsub
inc
push
dec
add
lret
nop
leave
xchg
cmc
or
mov
jae
rcrb
jge
xchg
sahf
mov
xlat
stos
or
pop
ret
popf
dec
shlb
jl
loop
push
mov
sbb
fsts
ljmp
jns
sbb
fidivl
mov
testl
ficomps
inc
adc
push
push
xor
push
sub
shrb
fiaddl
push
repnz
sbb
rclb
aaa
jns
and
lret
push
jp
push
or
lret
repnz
sahf
lret
inc
cmp
sbb
test
scas
mov
xor
jle
xchg
sbb
in
adc
push
lret
repz
mov
lret
jg
mov
stos
lret
mov
sub
dec
and
loope
mov
cmp
pop
sub
and
xorl
push
sti
pop
adc
or
xor
js
fbld
mov
fcomps
jnp
add
or
mov
jge
push
gs
sub
cmp
mov
lods
pop
sub
push
in
xor
jne
das
lcall
ficomps
movb
add
lcall
loop
and
mov
pop
daa
fdiv
cwtl
outsb
push
loop
mov
mov
jmp
movb
lods
stc
jecxz
push
je
mov
jmp
or
mov
mov
fwait
in
fs
pop
gs
mov
jmp
dec
in
shlb
push
lret
push
jns
sti
cs
push
jg
popa
outsb
jno
push
repnz
mov
add
dec
push
gs
std
cmpsb
mov
push
lret
adc
mov
pop
add
lock
cmp
push
enter
mov
shlb
mov
mov
inc
mov
dec
enter
sahf
and
les
mov
pop
inc
js
ficoml
push
imul
sub
daa
sbb
jb
lret
movsb
stos
and
mov
addr16
into
jp
in
dec
dec
mov
jle
sahf
push
mov
lahf
loopne
fimull
mov
lods
mov
imull
xorl
inc
push
lret
data16
sbb
sti
cli
insl
or
mov
xor
cmp
mov
adc
push
hlt
xchg
dec
loope
stos
shll
imul
fnstsw
jle
sbb
pop
shrb
push
fisttpl
lret
mov
shl
jnp
lret
or
aas
icebp
daa
ror
inc
mov
pop
mov
sbb
jo
stc
add
iret
or
loop
je
sbb
or
dec
push
ficoml
pop
es
inc
inc
hlt
data16
lods
aas
lods
lret
mov
mov
push
xor
inc
sbb
sbb
push
sub
lret
xor
je
mov
jnp
ret
push
mov
je
insb
jae
shrb
mov
cmp
stc
pop
cli
out
push
xor
aam
fadds
mov
cmpsb
push
bswap
mov
push
faddl
pop
leave
daa
lahf
sub
pop
add
push
lret
inc
insb
int3
push
jge
ds
dec
push
and
cmpsb
mov
sub
jl
test
insb
pop
lret
xchg
mov
lret
push
jo
faddp
in
lret
and
add
xlat
decb
sbbl
mov
fsubr
fbstp
xor
lret
mov
in
lret
stos
push
adc
jae
popa
mov
aad
or
mov
mov
leave
loop
in
rorb
lret
add
lret
mov
adc
rcll
push
shlb
lret
jp
cmpb
imul
fisubl
push
mov
mov
sahf
movsl
fbld
lret
push
cltd
test
push
or
mov
cmp
dec
fdivs
lret
cmpsb
lods
add
lods
xchg
sbb
loopne
xor
mov
xchg
push
jecxz
jg
inc
cmpl
inc
negb
in
sbb
mov
hlt
inc
mov
inc
or
pop
and
dec
out
sbb
xor
mov
jecxz
movaps
imul
fiaddl
ffreep
push
outsl
xor
dec
movsl
sahf
push
pop
test
and
mov
inc
jp
in
in
push
lret
sub
in
or
rorl
lock
stc
push
dec
dec
iret
or
pop
ds
int3
xor
stos
mov
dec
popf
lret
mov
aam
ror
push
in
xlat
cltd
aaa
dec
mov
fcmovb
scas
imulb
xchg
add
stos
push
cltd
pop
shlb
scas
inc
imul
fsubl
pop
xor
es
pop
jnp
xchg
clc
xchg
sbb
push
lret
test
push
cmp
dec
mov
ret
loopne
lcall
out
clc
pop
add
lret
mov
gs
ss
adc
stos
fnsave
or
jmp
cmpsl
xlat
push
es
mov
scas
and
jne
ljmp
into
sbbl
iret
fdivrs
xor
fcmove
inc
dec
andl
and
pushf
sarl
lret
scas
aad
jmp
mov
and
loopne
rorl
mov
mov
int3
pop
cmp
sbb
mov
xor
fisttpll
push
imul
mov
push
lret
adc
and
jno
cmp
mov
aam
cmp
aas
dec
std
lret
jns
push
sahf
push
outsl
pop
or
or
lret
dec
pop
imul
rcrl
lret
inc
push
mov
sbb
jb
xchg
es
xchg
rolb
lea
roll
dec
jp
jne
sbb
out
mov
sbb
cmp
dec
mov
in
lret
pop
xor
fucomi
into
mov
shrb
and
or
lret
jno
sub
lret
xchg
mov
cli
xchg
fwait
xor
push
sarb
cmp
mov
pop
inc
pop
lret
aad
pop
jo
repz
out
nop
ss
cwtl
lret
int3
movsl
push
shlb
movsl
ret
test
imul
lret
in
mov
in
shrl
lret
data16
rclb
and
lret
mov
out
fwait
clc
rorb
adc
ja
fmulp
outsb
xlat
out
dec
pop
js
lret
xor
lods
out
mov
xchg
xchg
pushf
ljmp
sarl
push
test
add
loop
aad
ret
cltd
mov
popf
sub
pop
push
js
cli
and
mov
inc
xor
push
or
loope
mov
out
jae
or
lret
cltd
mov
jecxz
push
cs
andl
arpl
lods
and
mov
jle
cltd
ljmp
ror
je
mov
or
imul
sub
iret
daa
ds
popf
push
dec
shr
adc
fwait
sarl
das
lret
mov
adc
inc
ss
arpl
xlat
bts
cmp
or
push
sbb
sarb
mov
cld
in
lds
insb
fs
pushf
outsl
xchg
dec
gs
aad
xor
lret
mov
xor
repnz
popf
dec
push
xchg
shll
int3
rclb
out
lret
and
lret
xor
ficompl
cld
jb
in
out
cltd
adc
pusha
adc
mov
sbb
lods
lret
sahf
clc
stos
add
out
fisubl
enter
iret
ficompl
test
xor
cli
dec
ficompl
mov
stc
popf
mov
mov
adc
gs
and
sbb
sub
fstl
add
mov
aam
sub
jno
in
addr16
xchg
xor
add
pop
cwtl
mov
mov
movl
xchg
mull
out
or
pop
loop
leave
or
mov
clc
pop
shlb
inc
or
pop
jnp
jns
test
push
mov
shrb
cli
mov
cmp
mov
push
xlat
cmp
mov
pushf
into
inc
add
cmp
lret
inc
push
jmp
aas
sub
cmp
pusha
fsts
leave
in
lret
cld
and
cmp
push
into
and
ljmp
rolb
lcall
outsb
push
insb
mov
add
mov
adc
lret
insl
xchg
xor
push
jp
data16
es
pop
pop
sbb
lret
arpl
push
stc
les
jp
test
in
and
aas
int
clc
xor
pop
mov
leave
mov
xchg
inc
pop
xchg
mov
cld
fucom
lret
fcoms
and
push
lahf
roll
inc
shlb
cmp
lret
sub
fsqrt
adc
push
lea
enter
cmp
push
or
add
leave
in
repnz
inc
fcmovb
cmc
or
mov
push
call
jbe
ret
push
jno
lret
adc
aas
jmp
data16
popf
cs
mov
mov
mov
adc
pop
xor
dec
lret
add
std
jb
lret
dec
jae
cltd
xchg
jno
cld
lret
and
pushf
mov
jge
sbb
add
cmpsl
jno
jecxz
pusha
and
mov
push
push
and
sub
aad
or
scas
lret
in
sub
test
rorb
ss
into
push
jne,pn
push
push
popf
mov
cwtl
lods
gs
lret
mov
push
pop
imul
lret
sbb
repnz
lret
pop
das
jnp
jmp
lret
into
jl
rclb
xor
mov
subl
mov
or
inc
das
sbb
mov
cmpsl
jmp
mov
mov
aam
push
cmp
lock
adc
push
pop
lret
mov
cmp
std
es
rorb
lret
xchg
pop
frndint
fwait
mov
adc
pushf
out
adc
aad
sub
push
mov
cmc
les
or
sub
in
test
lret
adc
mov
mov
jbe
adc
sub
xchg
or
ss
lret
push
data16
inc
popa
and
shll
sub
inc
mov
clc
jg
or
orl
sub
jb
dec
push
jge
sbb
inc
rcl
or
mov
loope
adc
xor
xchg
lret
frstor
iret
or
fdivrs
push
sbb
pushf
adc
inc
lret
jns
scas
sub
push
lret
inc
mov
inc
push
mov
push
xor
pop
mov
jno
or
inc
loopne
dec
add
jns
cmp
inc
lcall
js
lret
sbb
push
jb
decb
xor
push
ret
shr
mov
dec
lret
dec
lahf
outsl
and
cmp
daa
int3
jo
adc
mov
sbb
mov
lret
pop
imul
int
test
ret
leave
xor
flds
fstl
lods
lret
push
fisttps
in
sub
dec
pop
pop
adcb
fidivrs
jae
jb
pop
xlat
mulb
or
test
fdivs
insl
jle
mov
xlat
les
out
sbb
icebp
and
and
cmp
cmpl
jle
leave
push
jmp
pop
cs
sub
push
cmp
daa
inc
sarb
out
jge
cltd
gs
ror
fst
or
cmpsl
mov
fimull
sub
lret
cmp
in
je
xchg
sbb
inc
gs
xor
stc
lret
mov
lret
cmc
scas
lret
or
sbb
or
repz
cmp
sbb
inc
sbb
ror
jmp
and
lret
sub
lret
jl
popf
xchg
insl
pop
sti
inc
les
lret
arpl
mov
mov
push
xorb
movsb
lret
sbb
gs
fxch
mov
pop
mov
fwait
mov
mov
rclb
hlt
lret
sub
or
sub
cmp
in
lods
shr
int
jl
mov
jno
jg
fldt
mov
add
fimull
push
lret
insl
stc
sub
dec
lret
shl
or
jmp
js
jae
sahf
fld1
pop
sub
ret
push
fimull
xor
nop
ror
or
mov
xchg
stos
lods
adc
dec
inc
mov
cmp
inc
icebp
out
fadds
mov
cltd
addr16
fld
lret
dec
cli
out
imul
pop
lcall
xor
add
add
orb
xor
outsl
lcall
sahf
push
cmpb
loop
nop
jb
cmp
add
sub
mov
cli
movsl
data16
dec
pop
lock
push
lret
popf
inc
xlat
out
sub
lret
mov
mov
lock
pop
mov
aam
pop
pop
inc
push
sbb
xor
dec
lret
cmp
stos
mov
xchg
loopne
idivl
fmulp
lods
xchg
arpl
jmp
cmp
and
aad
jo
fisubl
push
push
xchg
dec
lret
into
pop
das
jl
fnstcw
mov
mov
shll
pop
cmpsb
mov
ds
mov
scas
sub
mov
pop
push
cmp
or
or
adc
push
pop
mov
pop
lret
imul
scas
xchg
lretw
add
iret
xchg
xchg
add
shrb
and
orl
pop
cmpsb
fincstp
lret
pop
mov
stos
push
fs
xchg
lret
cmp
fdivr
or
add
lret
aad
cmp
push
xlat
loopne
movsb
imul
pop
scas
xor
shll
xchg
js
jge
in
jb
je
enter
pop
imul
xchg
bound
dec
pop
leave
push
pop
lret
fucomip
rclb
test
jmp
xor
jl
mov
lret
inc
cmp
add
lret
cmpsb
mov
fisubl
scas
push
pop
inc
inc
in
sbb
cmp
fcoml
clc
cmp
iret
xchg
addl
cltd
fimuls
frstor
jl
jnp
lahf
dec
mov
fcmovu
or
dec
arpl
jnp
pop
std
cmp
cmpsb
mull
cmp
pop
xchg
fs
push
push
sbb
xchg
iret
js
outsb
repnz
xor
dec
pop
lret
bound
lds
mov
in
stos
and
add
push
shl
je
cs
mov
inc
mov
mov
dec
sub
leave
mov
cmp
orl
mov
xchg
inc
fstl
cmp
jmp
and
imull
aam
sub
mov
add
ds
or
in
sbb
int
lds
xchg
sbb
pushf
cmp
lods
or
cwtl
outsl
or
mov
ss
xchg
scas
xor
rcll
cmpsl
test
repnz
fistpl
jo
xchg
lret
ljmp
push
adc
push
pop
lret
push
out
idivb
ret
lret
enter
xchg
jl
sarb
fbstp
out
shlb
mov
sbb
jecxz
mov
add
cmp
mov
pop
lret
pop
adc
inc
std
cmpl
cli
outsl
movsl
repnz
shrl
lcall
inc
push
lret
testb
or
lret
inc
pop
shrl
jg
test
cmpsl
fcmovne
sub
fdivp
or
cmp
pop
xor
sti
into
sub
push
sbb
jne
xchg
movsb
jns
dec
rcrl
xchg
insb
test
xchg
mov
lea
inc
repz
shll
push
jp
cli
sahf
in
lahf
push
pop
mov
lret
fildl
jge
jg
jmp
daa
xchg
stc
adc
inc
das
stos
mov
or
lret
aaa
hlt
push
and
add
or
inc
dec
lret
push
fildl
pop
sbb
sbb
mov
fsubrs
cli
cmp
xlat
xchg
jb
lret
xchg
aad
out
fimull
les
roll
lods
push
rcr
cli
lods
int3
sbb
push
lret
jb
jbe
sahf
pop
lret
mov
dec
cmp
sub
pop
int
xchg
mov
cmp
cli
push
out
cmp
cmp
mov
and
hlt
lret
int
fisubs
sub
and
pop
jg
push
pop
lret
sarl
mov
lret
xchg
fmull
out
fdiv
repnz
lret
inc
pop
sub
pop
pop
lret
xchg
lret
inc
sbb
lods
lret
jae
xchg
adc
push
mov
pop
and
jecxz
sbb
fisubrs
shrb
sub
push
sub
mov
jnp
mov
lret
cmp
es
push
insl
jle
push
stos
lret
sbb
sub
hlt
mov
mov
sbb
outsb
mov
push
out
inc
out
sbb
push
pop
shr
mov
sti
mov
jle
fcmove
dec
xchg
add
mov
mov
pop
js
mov
inc
mov
in
pop
cmpsb
pop
lret
stos
mov
or
scas
mov
lret
dec
push
or
xor
or
adc
mov
es
ficoml
and
adc
cwtl
shll
lret
jge
xor
aaa
out
mov
push
mov
fcomps
and
icebp
push
sti
lret
inc
push
xchg
in
mov
jbe
mov
lret
mov
mov
inc
adc
mov
sti
mov
bound
dec
cwtl
cmp
cmp
xchg
jno
and
mov
push
sbbb
adc
loopne
imul
ja
repnz
addl
test
mov
or
lret
movsb
ja
loop
jo
repz
mov
mov
and
sbb
aam
dec
lcall
jl
inc
test
sti
lret
fwait
enter
ret
inc
adc
jne
inc
cmp
rcr
mov
sub
xchg
xor
cmp
xchg
xchg
std
dec
into
iret
inc
mov
push
xchg
lret
sub
roll
push
insb
add
or
pushf
xor
hlt
sbb
pop
cmc
inc
lret
mov
sbb
pop
mov
andl
sarl
or
lret
lods
jb
adc
movsl
mov
mov
inc
sub
mov
pusha
jo
out
lret
stos
push
and
pop
nop
lret
imul
out
lods
cmp
hlt
cmp
mov
clc
cmp
push
mov
dec
insl
cmp
push
outsl
icebp
jp
lret
mov
fiaddl
fstpt
push
ror
xor
test
mov
fwait
sub
jnp
push
sub
lret
fldl
add
jns
inc
sbb
dec
aam
divb
lds
jmp
lret
jne
xor
sub
lret
lea
cmp
xchg
out
pop
rorl
ret
push
sahf
cmp
or
pop
xchg
gs
aaa
lret
pop
xchg
dec
mov
jmp
cmp
imulb
js
lret
sbb
lret
xchg
aad
mov
push
fisubrl
test
add
jne
ret
xchg
jge
sbb
or
ret
popa
cwtl
push
imulb
pop
mov
and
pxor
jp
pusha
dec
mov
pop
adc
xchg
lret
jb
les
push
fisubrl
arpl
jns
andb
cmp
cmp
dec
int
shlb
popf
repnz
lret
movsb
sub
mov
daa
in
cmp
aas
loopne
stc
inc
mov
lret
and
lret
push
fcomps
and
int
xor
cmpsb
mov
insl
lret
mov
xor
xchg
mov
aaa
xchg
aam
leave
adc
mov
shll
xchg
mov
stos
js
and
lret
push
mov
bswap
ljmp
pop
lret
mov
xor
int3
jle
fldenv
lret
ljmp
xor
jne
pop
loopne
out
pop
in
jnp
idiv
sbb
sub
or
pop
mov
lret
cmp
hlt
leave
pop
mov
inc
popf
mov
adc
lods
insl
stos
sti
xor
cmpsl
shlb
lret
cwtl
fldcw
jns
stos
icebp
jo
push
mov
adc
imul
loop
jmp
mov
xor
or
and
xchg
cld
ret
subl
loop
cli
mov
adc
das
mov
scas
cmp
add
std
fcomp
cmp
sub
mov
lret
je
fadd
pop
dec
mov
int3
and
cmpsl
add
shl
mov
insb
or
and
xchg
cmp
loope
mov
in
add
xchg
dec
pop
jle
sbb
push
xchg
mov
daa
int
rolb
pop
scas
cmc
lret
jp
shl
popf
inc
sub
pmuludq
cmp
stos
mov
cmp
sub
enter
push
cmpl
insl
and
fadds
xor
push
add
cmpsb
lds
sbb
pop
mov
mov
sub
jno
insl
sbb
mov
adc
mov
mov
repz
out
fisubrl
fidivs
repnz
lretw
adcl
inc
mov
inc
jbe
sbb
or
repz
mov
into
pop
fwait
xlat
daa
lret
xchg
ffree
aam
and
sti
shll
lret
enter
push
ror
ljmp
mov
loop
add
cmp
cltd
mov
cmp
lret
test
and
scas
jmp
add
pop
sbb
cltd
dec
loopne
cli
mov
xor
cs
pop
in
lret
sub
stc
adc
insl
mov
pusha
pop
imul
sub
cs
mov
lret
adc
push
lret
cmpsl
xchg
jmp
xor
popf
xor
in
mov
dec
fidivl
xor
push
dec
fwait
int3
cltd
call
and
ss
mov
mov
jp
bswap
loope
in
pop
jnp
jo
xchg
je
daa
cwtl
out
and
das
lret
cmpsl
add
rcr
mull
daa
push
cmp
cmc
lret
pop
subb
leave
out
movsl
push
jno
in
jle
dec
jecxz
cmc
lret
dec
imull
sti
leave
fmull
cmp
cmp
sbb
lds
add
push
imul
push
jge
fld1
gs
lcall
shrl
xchg
aam
dec
xor
push
mov
push
jae
sbb
and
lcall
push
out
lret
inc
and
lret
icebp
lods
push
sbb
mov
lret
pusha
fmuls
and
inc
pop
lds
cmc
mov
into
les
repz
pop
lret
and
std
daa
jae
fucom
lret
pand
scas
ds
fwait
sub
mov
push
dec
xor
rclb
je
sub
rolb
sub
ljmp
mov
pop
bound
pop
inc
sar
mov
add
jg
rcrb
xchg
pop
sti
jecxz
push
ljmp
sbb
ljmp
movsl
inc
insl
cltd
ror
push
cli
pushf
int3
dec
dec
mov
sbb
lret
mov
push
nop
iret
cwtl
ret
fdiv
rorb
fwait
std
jge
leave
or
or
outsl
lret
fsubl
lret
mov
push
and
dec
loop
mov
lret
inc
rcr
push
add
sbb
mov
adc
sub
mov
das
ljmp
lret
jae
sub
mov
test
cmp
and
lret
imul
jno
cmp
sbb
sahf
inc
js
mov
test
into
icebp
push
ljmp
cwtl
ret
jmp
lret
sbb
xor
and
stos
mov
shll
mov
rclb
in
and
std
dec
lds
mov
fsubr
sbb
inc
flds
xor
ret
push
jp
aaa
inc
cmp
lret
std
jecxz
jb
cmp
call
push
xor
push
cmc
adcl
pop
xor
imul
inc
enter
shll
pop
sbb
mov
notb
push
popa
aaa
jae,pn
mov
andb
mov
in
adc
cmp
outsl
cmp
popa
stos
lret
sub
inc
mov
push
mov
inc
dec
or
in
jo
xor
cmp
aam
shl
sbb
and
xor
test
test
mov
and
pop
cmpsl
mov
fnstcw
adc
insb
or
fiadds
cli
mov
push
mov
pop
sbb
arpl
cwtl
pop
nop
mov
or
shlb
lret
xor
ljmp
scas
or
sbb
mov
xchg
sbb
pop
cmc
rcr
scas
inc
jns
lods
push
insb
ss
xor
cmpb
lret
or
sub
fs
ds
clc
push
xor
dec
insb
lret
xlat
out
adc
jb
mov
les
lret
fs
mov
in
cmp
sbb
fldcw
push
push
outsb
push
out
lret
mov
movsb
inc
mov
cmp
pop
jno
aad
aam
lret
nop
adc
mov
ror
sti
mov
jbe
push
push
shr
push
rcrb
lret
ficomps
inc
pop
cmpsl
fcmovb
inc
xchg
aam
inc
pop
pop
lock
int3
into
outsb
adc
lret
jl
sub
inc
xchg
scas
in
jge
jbe
sub
cltd
fdivrp
adc
dec
lret
cld
lock
push
fildl
mov
mov
add
jecxz
dec
jbe
fcmovbe
inc
addr16
shlw
cmp
mov
dec
xor
sub
insl
sbb
adc
mov
jl
pusha
js
out
and
sarb
cltd
pop
int3
js
lret
push
dec
push
jmp
loop
adc
jg
mov
out
cmp
lret
test
push
dec
filds
lock
idivl
pushf
loope
sub
lret
mov
lret
mov
sub
jns
mov
rorl
lret
jmp
mov
roll
test
mov
popf
xor
sbb
out
ds
push
scas
js
in
lret
lret
push
cwtl
push
pop
lret
xchg
mov
sbb
das
cmpsb
mov
rcl
lret
push
scas
aad
pop
lret
jecxz
aas
movsb
movsl
lret
out
pop
rcr
int
ficoml
mov
add
insl
arpl
cltd
dec
sub
mov
shlb
addr16
lret
aam
movsb
arpl
fdivs
pop
xchg
fucom
iret
and
stos
icebp
jge
adc
scas
int
shlb
adc
aad
les
aam
pop
or
outsl
lret
sti
imul
mov
lret
xchg
cmp
or
inc
jmp
movsl
pop
pop
cld
ret
fmuls
lret
nop
fcoml
pcmpgtd
sbb
hlt
rclb
clc
adc
mov
lret
push
xchg
out
lds
jae
adc
pop
popa
xchg
sub
loop
lea
sbb
mov
movsb
push
fstp
idivb
mov
pop
and
jmp
repz
cli
jp
jae
popf
aam
out
rorb
sbb
push
xor
sbb
ss
cmpsl
sub
push
push
movsl
pop
fidivl
push
pop
je
and
int
add
std
inc
stos
rolb
pop
test
mov
int3
mov
xlat
movsl
inc
lret
shll
xchg
pop
fidivrl
lret
mov
sbb
push
movsb
mov
fiaddl
das
jno
and
xchg
fildll
mov
stos
call
loopne
fstps
lea
xor
loop
lea
aas
add
js
lret
cwtl
xchg
shll
scas
dec
jg
in
mov
mov
jp
popa
cmc
xchg
fs
xchg
mov
dec
int3
aaa
mov
int3
xchg
lret
shrl
lods
dec
mov
shlb
cld
lret
adc
test
mov
jge
jecxz
lret
pop
push
jmp
arpl
xor
jmp
mov
adc
add
jle
xor
jb
jno
mov
push
xor
inc
jo
inc
mov
cli
filds
shll
mov
mov
in
pop
mov
or
push
hlt
mov
mov
lret
lret
xchg
fsubl
out
push
es
scas
mov
pop
xchg
or
pop
arpl
cli
lret
sbb
sub
lret
mov
shlb
mov
call
mov
lret
pop
add
std
jg
shlb
shl
mov
xlat
inc
inc
ficoms
jecxz
dec
lret
loope
jle
dec
lret
sbb
mov
add
cmpsb
je
cli
dec
test
inc
cltd
out
dec
push
dec
push
add
mov
sbb
mov
jne
jle
add
fnstsw
xchg
push
lret
addr16
dec
dec
sub
cltd
mov
ja
movl
lret
cwtl
mov
idivl
push
mov
push
rorb
shr
daa
shl
cmp
rcll
push
lret
int
mov
and
iret
mov
sub
add
ret
lret
lret
xor
lret
xchg
mov
xor
adc
cmpsl
pop
lret
js
fimuls
cld
xlat
stos
and
testb
nop
xchg
test
popf
scas
inc
lret
das
jns
ss
insl
cltd
add
pop
dec
xchg
lret
adc
movaps
sub
aas
popa
nop
mov
sbb
test
sub
sarb
lret
mov
inc
adc
popf
fisubl
daa
rcrb
dec
aam
stos
push
lret
cmp
lret
ret
out
jnp
lret
aas
sbb
test
mov
jge
std
inc
xchg
dec
pop
insl
lret
inc
and
mov
aas
mov
pop
inc
sahf
lret
es
push
lret
push
adc
xor
lret
mov
subl
mov
outsb
daa
add
adc
data16
lods
xor
adc
sbb
popa
in
rcrb
mov
add
repz
fisubrs
cltd
shlb
sbb
shlb
fwait
lret
aaa
les
nop
jae
cmp
lahf
add
int3
in
lret
leave
xchg
mov
jae
lret
jp
fdivrs
fstps
jecxz
mov
cmp
hlt
cmp
pop
int3
nop
push
and
fsub
paddw
cmp
sbb
test
lcall
in
xchg
mov
fmul
sub
ficoml
divps
repnz
mov
shll
cltd
jg
xlat
add
jb
sub
fmul
dec
fwait
data16
xorb
lret
xchg
out
cwtl
cmc
pop
fimull
mov
adc
lret
mov
hlt
push
into
push
jns
inc
lock
sub
aaa
mov
or
sub
arpl
shlb
outsl
jns
ficompl
cmc
jo
shlb
imul
call
fnstcw
cltd
lret
loop
stos
mov
pop
adc
inc
lret
push
cmpb
lods
inc
fdivs
out
int3
mov
sarb
stos
xor
jae
shl
xor
lret
icebp
push
push
int
je
inc
scas
mov
and
sti
loop
cmp
mov
je
test
push
out
fucomp
push
int
stos
fidivl
hlt
sbbb
push
lret
sbb
ss
sub
inc
notl
xor
jnp
add
imul
js
inc
and
aas
lret
arpl
sub
movsb
je
mov
cmp
shr
mov
gs
pop
roll
test
xchg
add
mov
dec
stos
lcall
icebp
mull
lret
mov
inc
lret
mov
rol
std
mov
shl
pop
jo
xor
daa
jb
roll
inc
dec
mov
lret
sti
es
sbb
ss
and
lret
lods
mov
js
lret
out
xchg
push
jb
cmp
jecxz
or
fdivs
xchg
mov
ja
iret
icebp
jnp
jmp
mov
xchg
ret
dec
cmc
movsl
sarb
fmuls
jp
sbb
mov
aas
adc
xchg
hlt
ror
xor
pop
mov
lret
xlat
js
push
push
inc
lret
sbb
sub
mov
pop
mov
mov
lret
bound
pop
xchg
out
pop
dec
sahf
adc
jno
or
jnp
fst
adc
push
pop
inc
or
lret
rep
and
stc
pop
fildll
movsl
aas
jecxz
decl
sbb
unpcklps
pop
add
inc
mov
fadds
js
adc
push
out
cmp
test
sahf
aas
pop
dec
push
dec
jae
mov
sbb
sub
popa
aad
lret
shr
jecxz
les
jg
cmp
icebp
mov
mov
std
push
stos
lret
sub
jge
pop
popa
rcrl
not
and
sbb
lret
jl
decb
jmp
scas
mov
xchg
loop
pop
addr16
lret
push
dec
add
cmp
out
dec
cmc
sub
lret
pop
rclb
rol
pop
jle
popa
dec
das
inc
fs
jne
movsl
mov
aad
gs
add
int3
cmpsb
push
xchg
jp
jnp
xchg
inc
hlt
sub
ja
push
roll
xor
push
aad
fstpt
cmp
and
inc
mov
push
push
pop
jecxz
cmp
aas
jl
push
sbb
mov
ficoml
sti
lret
clc
inc
movsb
call
sub
addr16
movl
jae
aas
sbb
add
es
dec
mov
fimull
push
ja
lret
mov
sbb
mov
notl
int
outsl
xchg
push
sbb
lret
popa
leave
dec
sub
lret
cmp
mov
shll
mov
xor
jbe
test
popf
cmp
mov
lret
orl
bnd
ror
aad
xchg
jno
mov
sbb
and
in
gs
mov
mov
cmp
jg
jnp
mov
adc
pop
leave
negb
mov
cli
or
adc
xchg
fstp
and
dec
lret
loope
inc
and
push
jp
lods
cltd
jae
and
dec
jo
pop
andb
ret
sbb
fmull
push
aaa
lret
sarb
lret
aas
jb
sbb
inc
mov
outsb
mov
fstpt
dec
rcll
inc
push
push
cmp
sbb
aam
fimuls
dec
mov
cmc
repz
push
jno
test
sbb
pop
cmp
cmp
shl
test
push
sahf
xor
enter
or
push
add
test
clc
push
lret
xchg
mov
xor
jl
cmp
ds
mov
mov
pop
push
inc
mov
mov
ljmp
fcom
mov
sub
in
sub
adc
lcall
jb
cli
loop
jns
repz
lea
cld
mov
sti
push
into
dec
mov
lret
popa
xchg
insb
pushf
and
or
cs
clc
movsl
pop
jbe
or
into
sbb
xor
loopne
test
sbb
mov
pusha
push
cmp
into
test
jmp
lret
insb
pop
lods
xor
lret
pop
push
mov
push
fisubrs
lahf
push
mov
push
pushf
stos
mov
hlt
lret
enter
outsb
push
int
aas
jb
dec
fnstsw
subl
xchg
stos
aad
mov
enter
cwtl
ljmp
push
iret
inc
repnz
es
add
jle
push
dec
lret
and
adc
mov
aam
test
ficoml
pop
lret
xor
xchg
or
xchg
fsubl
dec
cltd
test
cs
rol
ljmp
pushf
aad
cmp
lret
add
mov
aam
jle
xor
lret
cmp
mov
es
xchg
adc
push
lret
das
cmp
push
mov
jno
add
jg
int
sub
mov
loope
ret
sti
jge
lret
push
mov
fstpt
mov
out
mov
sbb
inc
addl
aad
jo
lock
lret
mov
sti
lcall
dec
adc
jno
sbb
lods
push
rol
mov
jg
dec
push
add
xor
or
lret
enter
xchg
lret
jmp
scas
mov
pop
lret
jp
rcrb
call
and
pop
movsl
dec
mov
jge
aam
xlat
js
lret
sub
mov
ret
outsb
add
dec
sahf
cltd
into
cmp
pop
cs
pop
arpl
sbb
aaa
aam
lods
fisubrl
xlat
popa
unpckhps
cmpsb
inc
rorb
fistps
xchg
cmp
test
imul
lret
push
stc
inc
jg
lret
stos
ret
pushf
sarl
xchg
outsb
rcll
sbb
ljmp
jp
xchg
sub
insl
cmp
mov
fildl
adc
pop
xchg
push
dec
pop
xchg
lods
inc
cli
xchg
std
fmuls
xlat
out
lret
divb
lret
scas
fwait
aas
inc
rorb
lret
push
cmc
or
jbe
sub
jo
mov
mov
xorl
mov
leave
rcr
in
rcl
out
lret
lahf
cmc
cltd
jnp
or
aad
sbb
out
sbb
lods
enter
stos
and
mov
rclb
cwtl
jo
dec
in
ficoml
mov
fsub
xchg
mov
cmp
shlb
mov
or
and
pop
cltd
xchg
mov
dec
das
sub
mov
inc
pop
sahf
push
popa
movsl
jns
rcrb
or
inc
ficompl
fiaddl
cmc
sbb
fsubs
stos
adc
test
and
iret
and
dec
mov
sbb
cli
movsl
scas
outsl
inc
mov
push
pop
loope
mov
pop
nop
inc
lret
pop
cwtl
push
push
lret
movsl
jmp
ljmp
es
in
mov
and
aad
jb
cld
lods
shll
mov
imul
pop
outsl
int3
inc
cmp
push
push
fadd
sbb
dec
stos
out
cmp
dec
mov
sbb
push
inc
jnp
fiaddl
je
hlt
cmp
pop
dec
daa
insl
mov
mov
cmpsb
hlt
xchg
pop
pop
push
dec
fdivrs
xchg
dec
lods
dec
enter
lret
cmpsb
jl
cmp
inc
ret
or
or
mov
and
fisubrs
sbb
pop
stc
mov
jae
fninit
je
cwtl
jb
lret
bound
lret
dec
inc
insb
orb
adc
mov
lret
loop
lods
out
hlt
sbb
or
mov
jp
mov
daa
jo
mov
pop
cmp
push
jbe
aam
dec
add
sub
inc
mov
lret
cld
test
ss
int3
enter
lahf
lret
xchg
sub
and
stos
arpl
sbbl
fcom
xchg
mov
lock
mov
mov
mov
pop
mov
testb
jmp
jnp
inc
lret
and
and
push
lret
cmp
sub
sarb
dec
lret
push
xor
lret
test
ljmp
shl
or
fbstp
rolb
ficompl
push
xchg
pop
jecxz
sub
xchg
push
mov
fldl
ss
out
adc
fmuls
out
in
push
clc
or
lret
sahf
lret
popf
pushf
jmp
lret
imul
popf
mov
adc
jmp
xor
out
xchg
pop
fisubl
sti
adc
cmpsb
lret
adc
movsl
pushf
jecxz
sbb
jge
mov
ds
mov
mov
or
push
lods
gs
ss
sub
mov
addr16
push
mov
lret
cmp
lret
pop
mov
lret
ss
pop
arpl
into
cld
rclb
roll
lret
pop
gs
and
clc
xchg
add
inc
lret
xor
cmp
mov
mov
pop
fadds
push
jnp
mov
ljmp
add
sub
pop
int
sbb
lret
jno
jnp
out
icebp
jg
xchg
add
shl
cmp
lret
orl
dec
out
lret
or
inc
daa
push
popf
sbb
cmp
lret
adc
in
loopne
mov
call
sub
lret
cs
add
add
lret
add
push
mov
jo
daa
sbb
jns
mov
scas
add
in
add
mov
loop
add
int3
sbb
lret
repnz
insb
dec
test
cli
sbb
xchg
inc
mov
push
pop
sub
xchg
inc
scas
inc
push
loope
mov
and
sar
jge
xor
pushf
jmp
aam
jle
jne
push
cmp
into
push
jnp
ret
push
lret
imul
rol
lret
ret
mov
les
xor
pusha
sbb
stc
sub
add
pop
sahf
jp
lret
leave
xor
imul
inc
cmpsl
cwtl
or
lods
mov
out
insl
xor
rolb
xchg
dec
in
mov
loop
je
sahf
repz
lret
cmp
jno
xchg
ljmp
lret
add
scas
fidivl
dec
jns
lret
adc
mov
mov
movsl
stos
out
adc
lret
pop
stos
xchg
mov
test
pop
aam
inc
sbb
cmp
and
xchg
jnp
stos
enter
dec
jb
sarb
test
xchg
inc
jmp
jbe
lret
cmovl
ret
lret
ss
xor
je
lret
sbb
or
lret
mov
dec
xchg
mov
pop
push
out
jnp
lret
or
lret
ud1
push
fs
addb
lret
inc
arpl
add
jno
lret
sarb
lret
push
cmpl
add
and
xor
inc
pop
xor
lds
cmp
jne
aas
stc
mov
pop
add
int3
add
outsl
lret
and
jno
push
xchg
or
sub
pop
or
mov
mov
popf
out
sbb
inc
cs
add
ret
shrb
or
mov
mov
mov
popa
fincstp
test
lret
das
mov
jl
adc
jns
pushf
mov
aad
inc
sti
fadds
lret
icebp
std
add
or
dec
mov
xor
std
sbb
pop
mov
jns
je
cmpsb
lret
arpl
lret
lahf
lea
push
cmp
ja
movsl
ljmp
outsb
sti
loope
mov
sub
pop
push
test
xor
jbe
cmp
sbb
sarb
xchg
bound
jmp
lret
dec
adc
cmp
lret
cmp
push
inc
push
or
das
mov
sahf
add
adc
ss
pop
lret
or
fwait
pop
xchg
adc
hlt
mov
int
xchg
sub
lret
mov
pop
in
adc
mov
fwait
xchg
lock
xor
clc
lret
gs
lret
pop
test
lret
outsl
enter
es
lods
xlat
test
jne
pop
jmp
mov
dec
cmc
sub
stos
insb
fincstp
dec
into
xchg
and
add
js
aaa
add
mov
push
pop
testb
cmpsl
out
cmp
push
lret
sub
lret
jnp
test
dec
jmp
pop
push
lahf
lret
lcall
lret
or
dec
lret
lds
xlat
popa
pop
add
and
cli
mov
or
out
test
dec
mov
icebp
lret
xor
in
push
inc
add
and
lret
ss
push
lcall
in
roll
mov
subb
roll
ficoms
inc
xor
lock
sub
mov
movsb
xor
pop
add
sub
insb
ret
mov
sbb
dec
mov
aaa
fst
push
je
push
lret
jbe
jae
mov
lret
cwtl
xchg
mov
das
loop
jle
sub
ljmp
fcomps
cli
ror
sub
jae
jns
stos
add
sbb
aad
lret
outsb
stos
pop
push
das
dec
lret
or
dec
xor
lock
into
or
mov
shr
and
adc
push
imul
test
loop
cmp
mov
xchg
loop
jo
ljmp
pop
mov
cmp
mov
lret
pop
rcl
cmpsb
aas
scas
lret
inc
or
mov
lods
ds
push
lret
popa
arpl
shlb
push
add
mov
orb
lret
stos
ds
lret
int3
arpl
int
xor
outsl
inc
jg
pop
mov
and
test
out
scas
sbb
xchg
cmp
dec
aaa
mov
cmp
sarl
and
lret
xor
je
lods
mov
pop
mov
cld
xor
xchg
dec
int
inc
jl
test
cltd
fst
lret
hlt
pushf
adc
xchg
lret
xor
and
lret
cmpsl
out
xchg
in
lret
int3
sbb
lods
sahf
idiv
stos
roll
mov
test
scas
cmp
lret
jl
sub
lret
pop
leave
pop
shlb
add
stos
push
mov
mov
stos
insb
mov
lret
ss
cli
xor
out
and
into
call
arpl
jle
sub
stos
inc
mov
lret
aam
jecxz
or
lret
call
jbe
je
cwtl
pop
push
jle
fwait
shll
lret
sub
movsb
ret
and
sahf
lret
mov
and
jbe
in
pop
cli
dec
leave
dec
and
xchg
pop
pop
ror
mov
lret
rorb
outsl
fwait
lret
add
inc
pop
dec
ror
mov
imul
aam
roll
mov
jns
sub
cmp
mulb
insl
popf
mov
dec
cmp
insb
push
data16
ret
insl
sbb
rol
rcll
loop
mov
push
test
mov
xlat
lds
out
inc
sbb
jns
dec
pop
mov
es
pop
xor
cld
cmp
dec
cltd
rcr
jecxz
adc
loopne
mov
sbb
sbb
xchg
int3
sub
insl
aas
mov
mov
testb
cld
iret
jnp
xchg
sub
out
rcrl
pop
sahf
bound
mov
fcmove
adc
and
mov
push
aad
lret
push
fisttpll
sub
leave
adc
pop
cmp
mov
bswap
fdiv
inc
sub
and
dec
xchg
xchg
inc
fimuls
ret
mov
push
test
mov
jb
pop
lret
cltd
cli
pop
call
loopne
daa
fdivl
cwtl
lret
sbb
pop
cmpsb
cmp
out
call
xor
ret
daa
xchg
imul
int3
or
movsb
add
inc
lret
cwtl
and
add
jbe
and
pop
dec
push
mov
rorb
fistpl
sub
jmp
aad
pop
add
xchg
sbb
fadds
cmp
mov
insl
test
add
stos
cwtl
shll
jl
int3
adc
lods
jb
aam
ds
popa
or
les
dec
xor
cmpsl
out
out
fistps
rcr
inc
in
cmpb
mov
xchg
mov
jo
xchg
stos
xor
int3
push
xchg
pop
xlat
icebp
lret
add
xchg
adc
sbb
inc
ja
cli
mov
shrl
lahf
in
jecxz
pop
into
repnz
sub
mov
push
push
mov
pop
roll
fcmovu
xchg
or
leave
adc
xchg
cmp
mov
pop
mov
pop
pop
orl
sahf
mov
mov
shrb
sarb
outsb
stos
fsubr
mov
and
mov
mov
lret
enter
push
or
or
xchg
and
inc
lds
outsb
and
loop
dec
outsl
roll
arpl
int
mov
pop
jb
xchg
pop
push
nop
pusha
lret
pop
xor
inc
add
fcoms
jns
xchg
pop
jb
lret
je
sahf
mov
lods
mov
sbb
rorl
xchg
outsl
pusha
daa
lret
pushf
rol
lret
push
cmp
sbb
mov
in
mov
lret
mov
subl
js
mov
push
in
lret
test
push
xor
cltd
sub
daa
lock
in
jae
dec
inc
aaa
lret
cmp
pushl
lret
xor
push
sub
hlt
pop
sbb
mov
cld
rcl
inc
nop
lret
xchg
movzwl
lret
in
int
adcb
cltd
stos
lock
aad
js
cli
jmp
xchg
jne
stos
mov
add
int3
test
loop
hlt
jnp
into
xchg
add
lret
dec
fisubrs
dec
movsb
push
lret
xchg
test
cmp
mov
sbb
out
cltd
lret
jle
lock
pop
imull
dec
sbb
loope
jb
into
mov
loop
push
aas
lret
push
out
adc
lret
dec
push
pop
mov
pop
lret
sbb
lret
mov
push
fsubs
aaa
lret
or
movsl
ror
test
adc
lret
jmp
xor
pop
lret
mov
adc
xchg
es
or
mov
push
mov
jb
movsl
dec
adc
mov
mov
push
out
mov
mov
xchg
int3
cmpsl
aam
sbb
int
push
lret
jle
test
mov
frstor
lret
in
lret
push
xor
test
xor
insb
xchg
mov
xchg
push
stc
or
fisubl
xchg
mov
lds
pop
popa
xchg
stos
js
mov
or
mov
cmp
pop
add
roll
adc
xchg
lret
icebp
insl
ja
stos
and
insb
sti
add
mov
mov
cmpsb
push
dec
cmp
xor
iret
push
push
repnz
mov
jle
jne
add
xchg
stos
ror
add
mov
inc
mov
mov
in
add
lret
mov
stos
lret
push
cltd
push
push
adc
pop
sbb
cmpsb
xchg
flds
jmp
adc
shlb
ljmp
test
sbb
sbb
mov
push
es
dec
push
xchg
lret
mov
std
mov
loope
pop
fwait
rcr
push
imul
mov
sti
fdivrs
mov
sbb
lret
sbb
pop
test
or
jno
sti
aam
jle
nop
mov
mov
lret
sbb
jmp
out
jnp
add
sbb
mov
lret
mov
adc
rorb
int3
xchg
dec
xlat
jno
lret
clc
pop
pop
lods
sub
lret
sbb
lods
das
sub
xchg
fs
cli
loope
sbb
cmp
fcoms
stos
fmul
mov
xchg
ret
dec
inc
sub
cltd
movsb
popa
sbb
dec
mov
in
outsb
lret
sub
adc
xorb
sbb
clc
addr16
leave
cmpsl
adc
lret
repz
sub
mov
lret
inc
mov
mov
jb
add
xchg
pop
aas
inc
xor
sbb
lret
loopne
outsl
push
pop
and
mov
mov
dec
lret
scas
mov
and
scas
cmc
push
xor
pop
ss
sahf
inc
mov
rcrl
adc
sbb
sub
loope
lret
xchg
cmp
test
icebp
rcrl
mov
mov
mov
pop
cmp
rclb
fcomps
sub
mov
add
lods
lret
dec
mov
push
shll
mov
pop
add
mov
loop
fiaddl
lods
push
sbbb
sbb
pop
movsl
push
and
mov
sub
int3
cmp
or
lret
jb
sub
gs
ficompl
mov
push
fnstenv
inc
lret
cs
std
mov
cmp
and
and
push
sahf
mov
rcrb
mov
enter
ljmp
mov
cli
jg
scas
inc
cmp
dec
lret
int3
out
fs
mov
arpl
lret
ror
push
popf
cmp
lret
rcll
mov
sbb
cli
outsl
and
int3
mov
lret
pop
mov
lret
cmp
test
std
das
mov
cli
adc
adc
dec
scas
popf
inc
xorl
xchg
mov
jg
in
loope
cmovle
jne
sub
cmp
lret
call
mov
mov
cmp
les
sub
stos
inc
add
lret
inc
mov
adc
lret
and
xor
add
xor
mov
popa
cmpsl
orl
pop
adc
testl
jae
aas
jns
scas
jo
scas
xchg
daa
and
stos
fsubs
lea
dec
out
lret
xor
xchg
mov
sbb
lds
push
jns
outsl
aad
fs
icebp
out
pop
mov
popf
idivb
fbld
dec
out
xchg
jp
sahf
adc
adc
pause
or
lret
xor
lret
lcall
or
das
inc
lret
xchg
fdiv
jle
lret
and
push
mov
ja
nop
arpl
rolb
cmp
xor
imul
test
push
lret
jge
out
fnstcw
popf
imul
xchg
stos
mov
mov
sub
add
push
cmp
in
loopne
mov
jge
add
out
mov
dec
js
aam
jns
dec
mov
rcll
dec
fidivl
in
jb
and
shrl
movsb
jbe
or
pop
mov
int3
xor
jns
mov
xchg
lret
push
pop
mov
jle
lret
xchg
insl
inc
aad
int
orb
cmp
out
pop
adc
gs
cltd
cmpsl
lret
push
lcall
push
fsubl
adc
cli
push
je
mov
pushf
mov
mov
gs
dec
rorb
fldl
sub
jo
lods
pop
test
lods
clc
dec
gs
inc
push
idiv
jge
lock
addl
fs
lret
mov
cmp
mov
lret
or
xchg
lret
pop
lods
mov
pop
shlb
roll
sbb
aas
push
add
sahf
sbb
xor
inc
pop
lods
xor
push
les
sbb
xchg
lcall
lds
aam
test
jne
sub
scas
adc
sbb
lods
ret
fimuls
sarb
cmpsl
mov
sub
pop
int3
cs
adc
mov
mov
lret
jmp
nop
pop
dec
jl
dec
cmp
push
rcrl
jg
and
call
mov
arpl
lahf
xchg
stos
int
shll
adc
addl
sub
mov
test
aad
jnp
loope
xchg
and
jmp
mov
mov
pushf
inc
imul
sti
fmul
lret
add
pop
sbb
pusha
outsb
sub
dec
inc
stos
pop
adc
and
mov
loope
setg
inc
jno
mov
sbb
nop
sub
outsb
xor
inc
dec
mov
arpl
or
lret
xlat
fdiv
pop
dec
enter
or
mov
xchg
inc
adc
sub
mov
stos
lret
arpl
lret
cmc
mov
lret
popf
jl
out
es
jge
loope
inc
adc
cmpsb
jnp
cli
push
jl
js
sbb
jge
mov
test
dec
and
fwait
pop
lea
repz
xchg
jae
xor
jecxz
mov
cwtl
sub
mov
mov
push
xchg
data16
int3
dec
pop
and
lret
jl
add
scas
cmp
pop
lret
fdivrl
scas
dec
cmp
dec
imul
out
lcall
lret
dec
clc
orl
sub
and
mov
dec
shlb
and
or
notl
lret
sarb
adc
cmpsb
popa
shl
sub
push
push
lret
aad
int
test
lret
test
clc
call
in
push
cmp
cmp
push
sub
ss
outsl
cli
aam
inc
cltd
adc
adc
pop
pusha
aam
call
xchg
or
outsl
pop
loope
loop
rcrl
inc
sbb
test
dec
pop
bnd
pusha
pop
std
shr
call
fiaddl
clc
subl
jmp
xor
mov
and
xor
shll
lret
mov
mov
test
mov
xchg
jns
lret
jbe
mov
lret
aas
pop
test
sbb
dec
xchg
aad
cmp
in
gs
test
push
insb
push
vmread
in
mov
pushf
lret
and
cltd
scas
jg
lea
repnz
mov
outsb
test
lret
loope
inc
insb
push
sbb
sti
je
pop
imul
cltd
insl
stos
lret
jo
fstpl
leave
xlat
sub
int3
mov
aam
or
mov
push
hlt
in
xor
push
ds
mov
gs
lret
lahf
subb
sbbl
lret
mov
pusha
or
pop
and
and
lret
pop
data16
rcl
adc
mov
sbb
pop
cld
rolb
dec
pop
jge
hlt
sarb
jnp
out
dec
fimuls
sarb
pop
adcl
arpl
sbb
jno
mov
es
push
adcl
and
and
push
pop
les
sub
movsb
lret
push
xor
ljmp
pop
rcl
iret
test
fwait
hlt
or
lret
popf
or
add
and
sti
lret
inc
sahf
mul
loopne
lret
mov
rcr
jnp
lods
xlat
mov
popa
cmp
add
test
xlat
scas
mov
pop
cmp
dec
push
lret
arpl
lods
jp
lret
mov
xchg
int3
mov
mov
js
lds
sbb
lret
daa
adc
lret
movsl
je
fadd
or
dec
sub
out
lret
and
js
fisttpll
cltd
jecxz
add
popl
or
jmp
mov
cmp
adc
stos
mov
push
mov
sahf
inc
in
pop
lret
adc
lret
fisubrl
lea
cmp
add
incb
jmp
xorl
cmp
loopne
out
dec
enter
xor
clc
std
inc
cwtl
dec
mov
xor
jns
adc
scas
pushf
outsl
cli
mov
push
push
xor
lret
jl
stc
push
popf
ret
mov
hlt
mov
cmpsl
push
shlb
mov
ror
lret
pushf
sbb
xor
xor
or
mov
lret
lahf
add
ficomps
lret
sbb
int
jnp
cmp
xor
fimull
aaa
ljmp
ja
lret
and
lret
scas
cli
ror
mov
mov
and
int3
xchg
insb
adc
movsb
mov
jp
pop
je
rclb
out
loopne
cli
insl
cs
or
enter
dec
cmp
mov
adc
jnp
in
lea
fcmovb
pop
stos
jo
cli
mov
and
xchg
cld
jg
cmp
adc
aad
fs
mov
gs
push
push
lret
outsb
stc
mov
fnstcw
cwtl
ror
and
std
sbb
out
mov
in
sbb
dec
das
sub
xor
ret
popf
scas
lods
jle
mov
push
pop
push
mov
mov
js
mov
mov
daa
xchg
outsb
pop
nop
lret
push
and
jg
mov
sub
aam
and
lret
xchg
repnz
rorl
mov
lret
add
shlb
mov
nop
in
cmp
xchg
popf
dec
aam
and
sbb
stos
hlt
lret
jbe
jl
jp
xor
sub
ja
addb
enter
fmulp
rclb
jecxz
fisubrl
pop
lcall
sahf
mov
orb
jmp
mov
lret
adc
icebp
xchg
repz
test
add
movsb
mov
lahf
cmpsl
pushf
lret
jbe
loopne
insl
pusha
int3
ror
lds
add
lret
or
shrb
inc
mov
inc
sbb
das
mov
xchg
cltd
sub
sahf
cmp
xlat
mov
fisubl
jns
xchg
add
mov
into
xlat
ror
stc
mov
les
cwtl
outsb
aad
mov
adc
popa
jno
fdivrs
fcomi
les
cmp
notb
push
lret
fptan
sbb
push
lret
mov
xlat
aad
insb
call
inc
mov
xor
scas
pop
int
xchg
lret
into
stos
xor
inc
or
rclb
xchg
cmpsb
sbb
lret
enter
lcall
je
pop
lret
dec
sub
or
loope
mov
iret
ss
mov
scas
sbb
mulb
fmul
mov
mov
shll
sub
mov
inc
cmp
sub
dec
in
movsb
lods
sahf
cltd
cld
mov
cmp
hlt
and
test
mov
add
pusha
fidivl
cmpsl
pushf
lods
ret
pop
push
jno
fidivrs
rcll
or
roll
xor
adc
aad
aam
cmp
adcb
in
cmp
jge
lret
xchg
test
mov
mov
pop
out
gs
cmpsl
xor
ret
adc
sub
lret
pop
xchg
cmpsl
cmpl
cmp
mov
gs
sbb
and
jno
sbb
push
lret
push
fildll
lret
cmp
rcrb
pop
rcrb
add
cmp
sub
fwait
int
and
push
sub
sti
sahf
mov
xchg
adc
xlat
pop
sub
or
inc
ds
mov
int3
and
jno
shrl
test
in
call
enter
lret
leave
nop
loopne
cmp
lret
sbb
sbb
inc
lret
xlat
or
or
cli
adc
push
sbb
inc
out
pusha
push
dec
shlb
pop
mov
in
cmp
call
dec
loopne
sbb
inc
ficompl
xor
add
jo
lret
fildll
dec
inc
insl
ja
jbe
loopne
negl
popf
or
dec
sti
rcl
lret
testb
pop
sbb
lret
jnp
jg
inc
xchg
sbb
sub
or
lock
mov
test
pusha
pop
push
call
inc
sub
fisttps
jo
int
cwtl
pop
lret
cmpsb
jp
aad
add
dec
add
lods
not
sar
loopne
int3
jecxz
iret
or
pushf
sbb
mov
cmp
jo
jno
int3
popf
lds
stos
sahf
in
fwait
inc
sub
xchg
lret
insl
xchg
xchg
mov
mov
cmpsb
sub
pop
data16
ja
ret
lret
in
out
pop
pop
sub
mov
stos
lret
scas
fimuls
add
push
lret
pusha
adc
or
sbb
cs
xlat
mov
mov
cli
outsb
push
je
jne
fdivrs
pop
push
lahf
lret
xor
ret
scas
pop
loope
lret
cmp
or
add
mov
or
adc
cltd
lret
imul
sub
inc
sahf
ficoml
addb
lret
out
pop
pop
pop
xor
inc
rclb
inc
jne
mov
sbb
mov
mov
fldcw
cwtl
cmp
imull
cld
ror
dec
lcall
lret
mov
ljmp
jnp
or
jo
sbb
lret
mov
shll
mov
mov
lds
pop
xchg
or
and
insl
dec
add
stos
or
std
pop
xlat
xor
dec
lret
push
and
scas
mov
rcrb
lret
cmp
adc
mov
test
mov
std
stc
lret
ljmp
inc
ficoml
mov
mov
int
cld
xor
test
sub
mov
addr16
sub
into
xchg
xor
ss
insl
xchg
rcrb
mov
std
adc
decl
inc
adc
lret
add
and
cmp
pop
xor
lret
xchg
outsb
outsl
sarb
and
shr
out
jnp
push
sub
int
xchg
lret
add
imulb
jp
xchg
add
lret
jmp
dec
push
jmp
daa
mov
cmp
pop
lret
mov
xchg
inc
mov
loop
pop
repz
dec
pop
jno
push
mov
out
lret
mov
jbe
pop
xchg
shr
add
lret
lcall
das
stc
xchg
jmp
lret
add
mov
xor
push
or
jo
lcall
jp
into
nop
lret
scas
inc
ja
inc
dec
lret
mov
cld
add
lcall
loopne
mov
sbbb
xchg
cltd
lret
sbb
lahf
enter
lret
dec
cmpsb
rcl
fxch
mov
mov
pop
lret
pop
in
inc
cmp
lret
xor
lret
flds
lret
push
and
xor
push
pop
lret
xor
and
cli
or
out
stos
je
fcmovnb
aam
cld
sub
fmul
sarl
movsl
lret
cmp
mov
sub
xchg
nop
or
lret
fcmovnbe
arpl
sub
add
dec
pop
mov
jmp
push
pop
and
insl
mov
stc
cwtl
test
lret
movl
jns
insb
cwtl
mov
and
sbb
add
pop
add
lock
dec
and
mov
lea
sti
mov
dec
dec
fnstenv
sarl
lret
jmp
into
mov
in
test
lret
jp
dec
ljmp
mov
cmp
xor
ficoml
mov
addr16
sub
outsl
xchg
sbb
insl
fs
lret
inc
jge
nop
inc
jno
lret
lea
lret
push
or
mov
scas
fmul
cmp
pushf
dec
lret
adcb
inc
lret
mov
add
cmpsl
push
dec
andl
enter
fisubl
cmpsb
test
lret
mov
sarl
jle
push
fwait
dec
fwait
cmp
into
div
data16
lcall
sbb
ficoml
jbe
adc
inc
stos
lret
sub
lret
jecxz
cmp
andl
out
fisubl
je
std
push
ljmp
jg
les
popa
lret
sbb
cltd
addr16
lret
fsts
out
popaw
cli
jl
shll
inc
xor
enter
aam
xchg
pop
into
out
mov
ret
mov
data16
daa
xor
jbe
stc
push
mov
adc
pop
lods
lret
jecxz
mov
inc
test
mov
popf
outsb
lret
test
ja
cmpsb
mov
test
sub
xchg
mov
inc
andb
in
push
ja
int
movsl
xor
rolb
and
or
ss
insl
cmp
shrb
cmc
sbb
mov
ljmp
into
pop
jmp
sahf
lret
xor
fdivp
pop
aam
push
mov
and
movsl
lret
rolb
pop
cmpsl
cli
leave
pusha
inc
test
in
in
dec
outsb
jge
movsb
lret
mov
xorl
iret
loop
jno
fildl
or
ljmp
mov
shl
mov
insl
call
outsb
pop
push
lret
js
jb
mov
fadds
lret
insl
xchg
rorl
inc
jae
lock
lret
or
rorb
xchg
shlb
add
or
fucomi
in
jle
clc
lret
aad
insl
sbb
lret
push
push
cld
or
lret
daa
fwait
jno
out
cmp
cli
and
or
xor
jmp
lret
mov
mov
ror
roll
sbb
ss
lret
pusha
cmp
outsl
mov
es
pop
mov
jae
aaa
or
in
das
gs
mov
loop
sbb
mov
lds
xlat
jnp
stos
sarb
xor
mov
getsec
mov
mov
test
cmp
pop
fwait
enter
xchg
fwait
xlat
aam
into
insb
mov
inc
jecxz
lret
bound
cld
sti
xlat
pop
out
mov
or
lret
jle
cmpsl
fstpl
sbb
in
pushf
lcall
lret
nop
jns
and
xor
mov
fdiv
lret
addr16
insl
loopne
lret
inc
xor
push
dec
cli
roll
sub
mov
popf
insb
les
mov
and
cld
fs
lret
pop
jl
jo
aas
lret
jle
js
pop
jge
mov
loop
dec
lret
lock
add
mov
lret
or
jecxz
icebp
das
mov
scas
xor
lock
call
fcoms
pop
xor
lret
and
cmc
jp
adc
jae
rcrb
bound
dec
inc
or
clc
adc
ds
adc
cltd
pop
cmp
fadds
mov
pop
lret
fnstenv
mov
dec
aad
in
dec
mov
fiaddl
popa
xlat
mov
int3
xchg
jo
sub
jno
sub
adc
sub
pop
jl
jg
or
aam
lods
and
into
and
fidivrl
mov
scas
lret
cmpsb
out
adc
mov
ss
dec
inc
test
inc
dec
lret
sbb
sbb
mov
dec
add
push
js
mov
mov
add
adcl
lret
repz
push
daa
jae
adc
mov
mov
cmp
popf
rol
adc
xor
push
xor
xchg
inc
ss
inc
lret
lds
and
test
into
das
roll
xor
xor
aam
fs
mov
data16
in
ret
jle
scas
lret
hlt
cmpsl
cmp
sub
iret
push
lret
xor
push
nop
lock
sub
iret
pop
aam
sbb
pop
fwait
dec
mov
gs
cld
xorl
push
dec
sbb
sarl
sub
push
mov
lret
jg
mov
gs
andl
iret
mov
lret
mov
lret
cmp
stos
repz
int
sarb
dec
repnz
pop
sbbl
adc
jg
icebp
sbb
lret
push
test
js
cwtl
mov
jmp
add
lret
jmp
xor
mov
or
rep
mov
cmp
addr16
mov
mov
incb
dec
lods
push
lea
arpl
lret
cmpsb
dec
pop
jmp
sbb
cmp
sub
mov
out
adc
cli
lret
sbb
xchg
lret
mov
sub
nop
mov
lret
xchg
daa
push
cwtl
out
fiaddl
sti
inc
push
or
cmp
je
or
mov
cli
fidivl
push
jmp
mov
stos
jae
pop
int
stc
lahf
lock
xchg
or
ja
clc
lret
jl
in
or
jmp
sub
lea
and
hlt
cmpsb
mov
mov
inc
lret
stos
int3
ffree
jle
lret
jp
call
inc
xor
mov
xchg
jg
aad
mov
cmpsb
push
repz
and
dec
sar
and
sub
jnp
lret
imul
sub
insl
enter
in
repz
inc
push
loop
mov
sti
clc
sbb
lret
push
pop
mov
ret
aaa
gs
rorb
and
lret
adc
sub
mov
cmp
inc
cmp
insl
ror
xor
lret
scas
push
xor
rorb
push
jmp
or
movsb
mov
pop
ljmp
fiadds
jae
add
sahf
mov
lahf
mov
loop,pt
xchg
lret
repz
mov
das
lret
and
add
mov
ror
xor
cmp
xor
cmp
cltd
push
mov
lret
lods
stc
insl
aam
lret
aas
mov
mov
gs
repnz
lret
sub
loope
imul
add
lret
in
rorb
cmpsl
jg
sti
cltd
test
lret
sub
jge
pop
lret
scas
jecxz
ja
lret
sbb
loopne
add
enter
daa
stos
push
mov
shr
dec
test
std
lret
in
push
lods
add
mov
lret
lret
scas
add
dec
or
push
jnp
mov
push
cld
js
lret
mov
lds
loop
push
leave
xor
ficompl
ds
scas
out
jno
iret
cli
push
shr
sbb
cmpl
mov
mov
lret
cwtl
cmp
sub
mov
adc
test
xor
mov
gs
nop
push
mov
int
push
lea
cli
xchg
aad
or
fstl
push
addr16
in
dec
inc
clc
loope
lret
popf
insl
mov
aaa
inc
lcall
dec
lret
fs
jl
ret
outsl
xor
adcb
mov
push
xchg
lret
cli
adcb
or
jno
clc
jb
ficoml
or
rcr
push
mov
rorl
fcoml
jg
push
pop
ljmp
rcrb
aad
loope
lret
add
pop
push
std
cli
mov
push
jecxz
sbb
and
aaa
add
jo
mov
mov
adc
stos
or
fdivrl
xlat
lods
lret
xchg
mov
mov
aam
mov
mov
pusha
shr
popf
xchg
jp
cld
xchg
push
aam
clc
jge
cmp
stos
loopne
ljmp
test
inc
mov
fiaddl
cmp
dec
fdivs
int
pop
mov
pop
popa
stc
push
or
dec
push
lret
push
into
mov
lret
mov
int3
fisubl
cmp
cltd
aaa
inc
dec
mov
lods
cmp
shrl
test
dec
pop
mov
mov
lret
std
dec
and
add
test
inc
jne
scas
pop
mov
rcrb
mov
xchg
mov
pushf
pop
xor
lret
or
fimull
pop
lods
fnstsw
int
and
js
stos
pop
pop
mov
adc
sbb
mov
mov
mov
imul
mov
popf
lcall
cmp
dec
push
movsb
mov
idiv
sti
jne
cmp
out
test
and
inc
lret
and
icebp
into
lret
cmp
cmp
lret
jg
mov
inc
mov
mov
lcall
ret
and
xchg
xchg
sbb
and
mov
inc
add
xor
outsb
and
bound
stos
es
xchg
lret
test
cld
popa
sbb
pushf
out
and
xor
fadds
cmp
push
cmp
lret
or
push
push
sub
jg
push
lret
xchg
pop
imulb
xorb
cmpl
xchg
push
rcr
and
mov
cmp
lea
xor
pop
lret
out
adc
xchg
out
xchg
add
lret
xchg
adc
inc
pop
ret
inc
in
lret
add
adc
out
and
dec
pop
jo
jp
mov
xchg
jnp
repz
in
cmp
out
cltd
mov
mov
or
lret
mov
in
mov
sub
mov
icebp
imul
push
cmp
iret
ret
sub
sub
lahf
mov
mov
and
or
xlat
je
cmpsl
imul
fisubs
lret
das
std
andb
cmp
daa
dec
or
and
jecxz
sbb
test
aaa
mov
cltd
rcrb
cli
pop
stos
pop
scas
lds
jecxz
mov
or
test
lods
pop
cmp
xchg
adc
sub
sub
cmp
mov
cmp
push
xchg
sarb
cmp
add
lret
mov
aad
push
dec
lret
outsl
jnp
push
xchg
sbb
int3
jp
popa
inc
adc
lret
sbb
les
add
add
adc
push
movsb
and
dec
lret
mov
adc
mov
aad
fwait
mov
fdivrl
or
outsl
lret
sbb
wbinvd
rorl
dec
jle
or
roll
lods
ss
outsb
stc
int
add
fwait
jns
mov
xor
mov
cmp
xor
movsl
rorb
pop
and
andb
jp
sub
pop
cmp
lock
sub
sbb
gs
push
xlat
scas
int3
adc
std
adc
mov
lods
leave
nop
out
aad
mov
ljmp
xor
xorb
out
jnp
pop
cli
andl
cwtl
into
idiv
mov
lret
mov
xor
xor
cmp
fidivl
sahf
clc
cwtl
mov
jge
das
or
mov
lds
xlat
insl
adc
movsb
test
and
scas
cmp
pop
sti
mov
cwtl
lret
in
xchg
addr16
mov
inc
and
hlt
adc
mov
lret
sub
lret
cmp
add
jbe
pop
pop
lret
mov
sti
aad
ret
xchg
inc
mov
xchg
jmp
js
pop
stos
xlat
sti
test
aam
arpl
cld
lret
movsl
icebp
dec
rolb
inc
sarl
shlb
decl
addb
loope
inc
rcr
popf
inc
ret
pushf
dec
rclb
jae
fnstenv
aas
and
adc
lret
push
in
inc
pop
cmp
mov
cld
sub
into
stc
adc
inc
lcall
cwtl
mov
mov
mov
lds
lret
loopne
sbbl
clc
dec
add
ret
cltd
xor
test
jle
lret
adc
push
mov
jb
push
shll
add
nop
lret
cltd
dec
mov
movhlps
mov
in
mov
jb,pn
lods
jno
loopne
cli
data16
dec
push
add
jmp
add
xor
movsb
mov
sbb
inc
cltd
or
xor
mov
mov
sbb
clc
repnz
iret
pushf
dec
ljmp
out
fimuls
fsubs
lret
push
repnz
lret
lods
movsb
mov
xchg
daa
lret
std
sahf
test
dec
sbb
jb
out
lahf
push
add
mov
cwtl
pushf
jbe
mov
jmp
pop
aad
jle
jecxz
lret
aas
mov
fistpll
repz
jne
testb
xchg
in
std
inc
int3
cmc
js
pop
lret
outsl
test
adc
outsb
adc
mov
dec
sahf
fbld
iret
pop
fstl
sub
lods
shrb
or
fs
stc
add
hlt
test
mov
mov
aad
cmp
add
jmp
ficompl
addr16
xchg
leave
cmp
dec
je
push
insl
pop
loop
popf
test
shlb
xchg
out
mov
roll
bound
insb
lret
test
cmp
and
mov
jecxz
iret
cmc
test
pop
dec
lret
loop
fmull
lcall
sub
addl
test
test
pop
sbb
popa
mov
lret
insb
mov
roll
sbb
arpl
lret
mov
stos
loopne
mov
add
mov
inc
or
rorb
xlat
pop
fs
mov
xchg
add
mov
ds
pop
cli
pop
ja
or
pop
inc
call
in
lds
addr16
lret
ds
push
add
hlt
pop
adc
lret
cmp
ficoml
jge
pop
or
mov
loopne
dec
push
mov
adc
jecxz
lret
mov
cmp
xchg
lret
push
stos
cmc
pop
cmp
in
push
sbb
and
lret
dec
outsl
pop
dec
lds
mov
repz
cli
cmp
cmp
mov
icebp
dec
aam
xor
mov
ss
adc
sub
push
lea
add
sarl
sub
pop
dec
pop
sar
push
cltd
lock
iret
add
or
mov
push
mov
jne
fcoml
daa
ss
jg
addr16
jl
inc
repz
jae
pop
outsb
sbb
dec
sbb
popf
inc
lahf
lea
or
test
fiaddl
pop
scas
pop
lret
bound
sahf
cmp
lret
fldl
in
cltd
xchg
inc
lret
scas
movsb
cmp
clc
jmp
jo
mov
les
cmpsb
sbb
cli
push
adc
pop
and
ret
popf
lret
pop
loop
hlt
push
int3
ficoml
sti
inc
push
aad
outsl
test
mov
pop
mov
scas
test
out
lret
adc
lret
fmuls
lret
mov
cmp
or
and
inc
ret
pop
inc
rorb
test
lea
xor
mov
ror
cs
push
lret
and
rcl
xchg
or
pop
or
jae
test
cmp
jns
ret
jg
fidivrl
sahf
into
cmc
std
xchg
movsl
jbe
jge
mov
jae
cs
mov
fiadds
cltd
shl
lret
and
sub
popa
adc
das
xchg
rcll
cmp
lahf
mov
lret
inc
popa
sub
enter
pop
xchg
dec
cli
mov
mov
shl
aaa
jno
dec
lret
sub
or
push
lret
scas
test
jp
ja
daa
rorb
cli
jb
aaa
mov
pop
repz
mov
push
add
lret
data16
pop
lret
ficomps
mov
mov
out
push
jnp
lret
jno
mov
mov
loop
cld
fnstcw
or
aaa
mov
int
cmp
popa
lret
xor
sub
mov
cmpsb
insb
jno
mov
sbb
jg
dec
mov
xor
jns
jmp
adc
jb
xor
pop
sub
sub
mov
add
pop
cmp
push
mov
dec
dec
std
lret
mov
daa
lock
outsl
dec
dec
shl
xorb
shr
jae
call
jl
int
fistpl
lret
push
adc
sbb
popf
je
cmp
lret
cmp
enter
mov
es
dec
mov
into
push
add
mov
lret
scas
xor
ficoml
mov
test
jmp
mov
fiaddl
iret
inc
mov
sar
int3
inc
arpl
mov
sahf
in
fsubrl
xlat
mov
jo
mov
lret
push
mov
jp
aam
cmpsb
or
into
mov
xchg
xor
mov
adcl
inc
fdivrp
pop
jmp
push
push
cmp
popl
push
data16
shl
lods
lret
sbb
mov
mov
dec
dec
lret
adc
push
lods
mov
and
lret
scas
cmpsb
pop
notl
cmp
or
sub
and
lret
mov
inc
jle
out
sbb
lret
icebp
fildl
pop
xor
rolb
sub
addr16
and
test
lret
xchg
lret
outsl
movsb
test
cli
test
sub
mov
rolb
lock
cwtl
mov
sti
sbbl
loop
jp
pop
xchg
ret
sarl
lret
je
fmull
or
mov
pusha
or
cltd
pop
pop
sarb
std
ret
and
push
int
push
dec
movsb
inc
loop
pop
jecxz
cmpsl
sbb
das
sub
cmp
xchg
lods
stos
jo
iret
dec
pop
mulb
cmp
inc
mov
jp
add
shrb
aaa
pop
add
sub
lea
addr16
cmp
lret
imul
cmp
xor
into
out
test
lret
pop
pushf
mov
jnp
lret
xchg
mov
pusha
das
daa
fsub
lret
dec
and
popf
insl
dec
push
stc
lret
dec
rorl
aad
lret
rcll
ret
jl
ficompl
aam
xor
jmp
flds
rorl
dec
fistl
cltd
sbb
rol
addr16
aas
aaa
pusha
test
iret
movb
add
or
stos
pop
mov
inc
int3
cwtl
enter
sbb
stos
es
rclb
and
cli
negl
mov
mov
inc
test
xchg
xchg
popa
pop
lret
mov
push
lret
push
aaa
js
xlat
or
mov
out
or
js
lret
cmpsb
fwait
add
xchg
mov
add
xor
inc
popf
mov
xor
cmp
mov
and
aad
jno
and
jns
jnp
mov
sbb
cmp
popf
adc
lret
test
fidivrl
hlt
call
int
addr16
xchg
out
sub
fstpl
lock
mov
xchg
imul
cwtl
or
and
push
add
sbb
jl
lret
dec
loop
std
mov
lret
sub
lret
icebp
cmp
daa
sbb
pop
push
rcrb
push
cmc
fcoml
xor
lret
ret
scas
jmp
cmpl
push
fistpl
lods
jp
xor
sti
cmp
out
mov
dec
in
int
or
cmp
pop
mov
rolb
int
lret
sahf
sbb
cmp
xor
fcomi
mov
cli
sbb
scas
jnp
push
aad
add
insl
lods
test
or
out
das
xchg
xchg
lret
shrl
loopne
dec
jns
xchg
out
loope
jle
and
repz
inc
popf
scas
add
ss
jmp
fidivrl
incl
jge
lret
jbe
pop
sub
and
push
adc
test
pop
pushf
push
shr
sbb
lret
push
xor
pop
lods
cs
pop
enter
ss
loop
outsb
lret
mov
cmp
fmul
lods
cmc
pop
in
rcrl
cmp
push
stos
shrb
xchg
sub
cli
lret
outsl
xor
insl
testb
mov
fsubrs
mov
lret
cmp
jae
or
sbb
pop
lahf
jge
mov
in
in
jae
shlb
and
add
es
add
stos
movsb
mov
shrb
pop
stos
hlt
cmp
test
push
add
shlb
mov
fwait
pop
stos
xlat
shlb
call
pop
fwait
jge
mov
lret
lods
xorb
sbbb
es
repnz
xchg
test
testb
push
out
sbb
inc
lret
jnp
scas
mov
lret
lahf
mov
lret
mov
sbb
push
in
stc
mov
add
push
and
dec
popa
jp
xchg
dec
xchg
lret
test
enter
cli
cmp
imul
aam
dec
add
popa
call
cmpsl
and
sbb
xchg
aad
xchg
outsl
mov
sbb
jge
add
enter
ret
int3
out
test
ror
fwait
mov
lods
lret
push
or
and
mov
outsb
into
rcr
dec
lret
push
sub
out
int
in
adc
add
sub
sbb
jmp
popa
cs
fisubrs
mov
das
sahf
add
push
ret
push
mov
sub
mov
loope
xor
and
rolb
push
adc
js
push
lret
and
cmpsb
xchg
scas
xlat
jge
mov
cld
fistl
cmp
mov
fnstcw
into
lret
xchg
adc
and
xor
add
andl
insb
push
push
inc
int
jo
push
lret
add
and
das
ja
cmp
push
mov
shl
ret
mov
movsl
mov
mov
lret
or
pop
lret
jle
aas
stc
addr16
cltd
xchg
data16
call
dec
add
test
or
scas
mov
cmp
mov
or
cwtl
sarl
cld
adc
call
xor
lret
jg
mov
lods
sbb
push
mov
pushf
lret
pushw
xchg
pop
lret
bound
mov
adc
jge
pop
fstpl
dec
popa
lret
insb
fwait
mov
mov
sub
lret
or
xchg
cmp
mov
lret
cbtw
mov
sub
or
fwait
lret
jge
sbb
xchg
adc
dec
sub
jp
pop
mov
mov
sbb
mov
ljmp
lock
addl
pop
or
jge
ret
sbb
lret
mov
cltd
lret
or
mov
pop
xor
xor
dec
gs
in
and
or
or
aad
adc
mov
mov
push
shl
xchg
sub
xchg
sbb
or
xchg
and
xchg
pop
call
aas
lahf
mov
popa
lods
fidivrl
cltd
jns
iret
pop
lret
mov
add
lret
aad
in
into
adc
xchg
outsl
adc
sbb
lret
out
dec
xchg
lret
mov
add
cli
pop
mov
push
mov
lret
sti
mov
imul
lret
shr
sbb
sub
je
cmp
stc
lret
outsl
and
add
mov
ret
movl
and
dec
stos
mov
mov
jle
mov
shll
pushf
cmpsb
jecxz
sub
sarl
pop
inc
mov
into
mov
mov
jl
jae
scas
sbb
add
mov
add
es
dec
xor
xor
sub
mov
shlb
test
add
lret
mov
inc
xchg
int3
nop
lret
adc
cmp
lret
mov
mov
sub
fmul
incb
xchg
aam
mov
int3
ret
arpl
icebp
fcomps
cmp
xchg
ja
mov
fwait
lcall
les
jno
xor
lret
inc
xchg
push
adc
das
lret
lock
push
mov
lret
sar
or
mov
or
aam
into
pop
mov
std
add
in
mov
loopne
ficoml
cmpsb
push
xchg
lret
dec
fucomi
insb
cmp
adc
push
xlat
cmp
mov
lods
fdivrl
ja
xchg
sbb
mov
xor
andl
ja
out
and
fiaddl
jge
adc
mov
lret
mov
imul
sar
insb
xor
out
push
cmpsl
add
push
xor
mov
ror
movsb
inc
mov
bound
or
divl
pop
push
lret
cwtl
mov
sub
lret
dec
mov
cld
dec
or
sbb
inc
lret
pop
stos
popf
mov
xor
hlt
icebp
into
lret
xor
idivl
std
mov
lret
mov
stos
in
add
iret
lcall
clts
cmp
fsubl
push
stos
scas
mul
aam
test
mov
ret
push
push
rcl
xchg
sub
lret
movsl
inc
flds
xchg
pop
lret
int
pop
mov
sbb
in
dec
test
lret
rcr
and
in
pop
pop
mov
mov
cmp
and
rcll
push
jle
adc
js
and
call
jge
cmp
dec
lret
js
out
sbb
lret
jg
and
daa
push
movb
aam
dec
pop
clc
lods
lcall
pop
and
add
adc
inc
into
inc
popf
aas
lret
inc
aam
adc
ficompl
pusha
cltd
xchg
lret
jmp
add
sti
stos
data16
cwtl
mov
mov
int3
bsr
stos
inc
mov
cmp
int
sti
stos
sarb
stos
into
adc
push
xchg
cli
mov
lods
out
and
ss
lret
fimull
lret
sub
mov
dec
stos
data16
jg
movsl
jno
daa
repnz
adc
cwtl
mov
lret
push
mov
adc
push
inc
lock
arpl
movsb
mov
jae
sub
ljmp
roll
mov
test
mov
sub
insl
push
adc
shll
lret
punpckhdq
lods
sbb
jne
std
mov
push
lock
lahf
clc
jne
or
out
push
call
xor
push
test
mov
fiaddl
jno
aad
int
shr
stos
jp
adc
adc
adc
mov
out
xor
scas
pusha
jecxz
xchg
fcoms
dec
icebp
pop
lret
fdivrp
add
nop
mov
sbb
jb
pop
mov
cltd
sbb
xor
mov
pop
jb
hlt
lret
out
sub
push
cli
push
inc
mov
xchg
xchg
xchg
pusha
lock
add
xchg
cli
inc
aam
jmp
mov
popf
leave
mov
fsubrl
fyl2x
inc
mov
xchg
movsl
mov
in
fs
shl
lock
sub
iret
cmp
std
lret
out
dec
shl
lret
adc
aam
daa
inc
and
cmc
cwtl
cmp
outsl
test
hlt
popa
or
movl
cli
sub
pop
or
shrb
repz
lret
sbb
lret
lods
cmp
popl
jbe
fsts
inc
cmp
lock
pusha
test
lods
rcrb
mov
cwtl
mov
ret
inc
cmp
lret
in
xlat
call
xchg
int3
dec
sbb
sub
pusha
xor
dec
scas
or
or
jecxz
mov
shrb
sbb
cmp
add
pop
mov
mov
aam
cmpl
jecxz
adc
xorl
je
push
or
cmp
fcom
add
cltd
popa
lret
push
jge
add
lret
jl
setge
jg
bound
push
jno
loopne
aam
xor
xchg
xchg
cmp
mov
in
aad
cmp
lret
fwait
adc
xor
cmp
dec
lods
dec
cmp
ja
inc
jne
pop
xchg
push
push
in
add
or
pop
fmull
daa
push
lahf
test
sti
sbb
cs
xor
jmp
nop
shll
add
cli
add
xlat
xor
lret
add
mov
outsb
jmp
add
les
imul
lods
mov
and
cli
shlb
data16
cli
mov
nop
push
push
jns
dec
jno
add
fistl
xchg
mov
ret
dec
pop
xlat
lret
fsubrp
jmp
push
xor
sbb
inc
sbb
adc
or
loop
jl
mov
push
jbe
aad
add
lret
dec
pop
mov
pop
subl
pop
in
lret
sbb
leave
ljmp
sub
cli
or
lea
inc
and
push
jo
fcmovbe
pusha
fcomi
mov
lret
ret
add
mov
out
xor
jle
lods
popa
js
jne
sbb
idivl
ljmp
sbb
xchg
pop
sub
sarb
dec
test
push
daa
sbb
gs
lret
add
adc
cli
mov
sahf
loopne
out
mov
notb
push
fsubrs
shl
pusha
sbb
sbb
lret
shlb
add
lret
sub
cmp
shlb
shrd
js
pop
adcb
push
fldcw
sub
pusha
sub
mov
and
lret
es
push
lret
add
push
int3
push
jge
stos
lret
mov
rorl
leave
adc
fidivl
mov
push
xor
ficoml
ss
mov
or
ror
mov
icebp
xchg
push
xchg
or
push
sbb
or
mov
cli
mov
out
mov
leave
cmpsl
lret
sbb
enter
lret
js
jmp
jg
push
lds
test
pop
movsb
sub
repz
das
nop
xchg
lret
icebp
mov
sti
cmpsl
xor
lret
cmp
mov
lods
popa
jb
mov
insb
jbe
mov
stc
mov
cmp
bound
cld
cmp
fldenv
xor
xchg
pop
inc
xlat
lret
test
lret
mov
loope
or
lret
adc
mov
and
push
test
mov
dec
cmpsb
pop
out
pop
daa
mov
mov
adc
fdivp
and
sub
js
mov
neg
dec
jecxz
fcmovu
xchg
aad
test
aam
cwtl
lret
mov
in
jp
ret
mov
clc
jo
adc
dec
pusha
xchg
push
ljmp
fbstp
cltd
pop
loope
sbb
lret
lock
xchg
enter
bound
cmp
mov
rorb
lret
push
add
cwtl
cltd
js
jnp
xor
jmp
repnz
cmp
jo
xor
je
rcr
sbb
inc
xchg
mov
and
sbb
and
pop
mov
lret
mov
repnz
les
into
jae
push
inc
push
mov
in
andl
mov
jge
call
lods
push
mov
repz
int3
xor
lret
aad
icebp
jo
push
lret
sbb
ds
mov
sbb
xchg
xchg
lret
es
outsb
push
or
fwait
callw
mov
lea
shll
push
sbb
mov
mov
lds
fwait
mov
nop
lods
xor
inc
lret
dec
add
test
stos
pop
dec
xor
fcomp
in
lods
insb
lea
xor
loope
lret
shrb
xchg
sbb
sbb
sub
shl
bound
fidivs
jae
ja
adc
lret
insl
fs
adc
jae
jno
mov
mov
mov
sub
cmp
ficompl
cmpb
sub
stos
pop
shll
mov
pop
xchg
jnp
addl
ror
jge
inc
sub
repnz
add
and
add
push
js
adc
std
ss
pop
loopne
adc
sub
adc
xor
data16
mov
mov
cmp
or
nop
aas
repnz
ror
adc
inc
mov
jecxz
adc
push
fmulp
mov
pop
adc
jns
and
cltd
pop
add
lret
inc
adc
shll
mov
into
popf
or
sub
add
add
ds
pop
push
lret
inc
jb
cmp
jecxz
xlat
sub
or
int3
dec
push
jns
ss
test
inc
stc
or
sub
mov
lret
or
mov
lret
sarl
inc
into
dec
aaa
lea
test
pop
gs
adc
stos
or
mov
pop
pop
dec
xor
outsl
int3
xor
lret
nop
sbbl
dec
inc
dec
push
call
push
ret
pusha
rcl
fidivl
mov
pop
hlt
inc
scas
mov
lret
jnp
movsb
ret
iret
jbe
out
xchg
pop
shlb
lret
mov
movsl
xor
lret
cmpsl
or
inc
adc
cmpsb
pop
mov
dec
fidivrl
xchg
mov
mov
cmpl
je
lret
pop
push
dec
adc
pop
movsl
shrl
push
data16
and
cmp
mov
or
xchg
push
sbb
fadds
ficoml
mov
sbb
cli
scas
adc
pop
adc
cmp
fadd
sub
loope
ror
iret
aad
xlat
add
inc
repnz
add
lret
sbb
xlat
mov
aaa
and
rcll
push
dec
cmc
clts
mov
dec
fscale
lret
iret
xor
mov
imul
add
ficoml
push
pop
push
lcall
mov
cmp
ss
sub
clc
push
bound
ret
rol
pop
push
mov
and
lret
outsb
in
dec
in
mov
mov
jp
cmp
mov
mov
xlat
mov
adc
lret
loop
arpl
mov
push
sub
pop
lret
test
xor
rcl
fistpll
lret
pop
movsl
jmp
outsb
scas
push
sahf
icebp
imul
sub
das
adc
lret
rolb
mov
cmp
fildll
enter
push
lret
xchg
imul
pop
mov
mov
mov
mov
aad
xor
lret
fildll
jle
jnp
jge
push
lret
jmp
aam
push
out
pop
mov
inc
pop
mov
subl
push
mov
mov
shlb
js
cmp
cmp
rcll
mov
add
mov
mov
call
cld
pop
sub
xor
lret
cmpsl
sbb
push
rorb
aam
and
mov
mov
sub
lret
setae
fxch
mov
adcl
sbb
mov
dec
mov
mov
mov
sbb
jae
fsubs
sbb
rcl
mov
scas
mov
outsb
inc
lret
sub
lea
mov
mov
lret
jb
cmovp
cmp
add
jp
dec
lret
xchg
jl
push
clc
mull
mov
sbb
add
xchg
out
repz
sti
sub
bound
mov
fidivl
lahf
pop
cmp
jecxz
xor
lret
jl
in
lahf
call
mov
jno
add
popa
fnstcw
enter
mov
jne
lret
hlt
es
lret
leave
sarl
sbb
sub
sbb
sub
cmpsl
lds
mov
lret
dec
movsb
fcmovne
clc
in
lock
cwtl
lret
adc
and
mov
ljmp
into
test
rcrb
xchg
xchg
lret
xchg
cld
enter
push
test
in
mov
mov
loopne
sub
jb
fwait
dec
or
and
repnz
mov
lret
jae
imul
lret
frstor
xchg
mov
or
notl
mov
arpl
loop
jns
lret
pop
sub
das
into
xor
lret
cmp
adc
shrb
test
int
stc
call
pop
imul
lret
in
cli
cmp
inc
cmp
fsubs
out
mov
fdivrs
gs
sbb
popa
sbbb
jno
adc
lret
adc
lret
es
pushf
sbbl
jb
mov
sbb
mov
or
lret
mov
lock
ret
and
dec
xchg
in
iret
mov
lret
lods
pop
mov
bound
xchg
sbb
test
aad
sbb
fsts
rcr
mov
adc
or
mov
lret
int
fnstenv
hlt
test
lret
cmpsl
dec
push
add
test
shlb
hlt
leave
jo
fsincos
push
jae
popa
xchg
push
push
or
jbe
mov
push
lods
add
mov
mov
stos
mov
dec
sub
into
ret
daa
int3
lret
cmpsb
fwait
dec
xor
lret
mov
lret
fiaddl
jecxz
out
repz
popa
pusha
cmp
int
mov
insl
xchg
shll
int
xor
adc
lret
adc
shl
pop
fcmovu
dec
mov
dec
xlat
aas
scas
or
sar
nop
das
jle
cmp
icebp
cmp
leave
mov
sub
ret
cmp
xor
mov
mov
mov
lret
test
jbe
adc
lret
jg
mov
sbb
lret
sahf
mov
lret
sbbb
sar
cmp
std
stos
lret
or
ficompl
lret
sbb
xchg
jno
mov
aam
filds
je
mov
stos
inc
test
in
add
rcrl
pop
je
lret
dec
jae
test
lds
mov
fwait
mov
dec
sub
pop
pop
lret
mov
lret
or
lret
aam
push
inc
fwait
lret
and
xor
jge
dec
loope
or
fiaddl
inc
sbb
lock
sub
fimull
mov
test
addr16
sub
xor
add
push
sbb
xchg
les
je
dec
in
insb
lret
imul
loopne
cmp
andb
mov
stos
std
dec
mov
sub
jmp
lret
outsl
adcb
add
divb
rcr
shll
rcl
pop
enter
nop
xor
in
mov
je
mov
jae
add
fs
icebp
cmp
int
pop
mov
lret
sub
repz
je
imul
test
pop
scas
movsb
addr16
lret
outsl
mov
mov
or
int
cltd
fisubl
ja
sbb
xorw
jp
std
dec
jae
xchg
repz
pop
xchg
lret
in
mov
jb
lret
shll
sbb
xor
sub
fcompl
cmpsl
jne
ss
cmp
or
adc
cmpl
test
mov
mov
xchg
dec
mov
jp
pop
mov
lea
loop
cld
push
rcrb
pop
pop
pusha
jecxz
pop
imul
aas
pop
hlt
dec
arpl
sub
xor
lret
adc
lret
dec
and
outsb
testb
lcall
lds
shr
cwtl
push
push
fcmovu
lods
inc
inc
dec
sti
fldenv
cmp
sbb
sbb
loop
scas
push
sarb
je
cwtl
lret
les
jmp
cmc
mov
jno
das
pop
adc
mov
shrl
push
lret
inc
add
mov
xor
lret
flds
lret
jns
sbb
repnz
pop
mov
xlat
shrb
pop
mov
cmp
cmc
push
jl
es
int
add
xchg
fildll
dec
jno
lret
dec
add
cltd
fmul
pop
sbb
add
xchg
fstpt
les
push
push
adc
push
cmp
iret
out
orl
jg
insl
mov
xor
lret
push
sbb
ss
cmp
cmpb
cmp
mov
xchg
sarb
mov
and
adcb
mov
aas
add
lret
out
ret
inc
ljmpw
xchg
push
int3
adc
pusha
stc
mov
fsubrl
fnstsw
cmp
sub
mov
std
or
inc
lahf
aad
aad
lret
sub
in
add
jo
incb
lret
sbb
mov
iret
sbb
pop
add
inc
xor
push
lret
push
mov
adc
add
sbb
or
jge
ds
imul
inc
jo
rol
sbb
sbb
daa
aas
insb
lds
stc
lret
push
and
or
xor
mov
mov
mov
mov
cmc
int3
data16
repz
adc
jnp
mov
fmul
ds
out
cli
cmp
out
lret
iret
ljmp
pusha
int
scas
addr16
enter
dec
mov
push
les
int
jb
lret
repz
aas
int3
pop
add
cltd
not
add
adc
subb
test
cmp
fwait
sub
push
jo
xchg
push
faddl
jg
push
push
test
rol
lret
xor
xchg
cmp
cwtl
jnp
lret
or
in
ss
push
cmp
or
lret
jo
les
fsubr
dec
mov
xlat
or
mov
mov
loop
lret
lcall
hlt
sti
in
repnz
test
sbb
lret
xchg
divl
mov
popa
xor
and
out
das
outsb
mov
mov
lret
xlat
out
scas
out
cmpsb
lret
popf
outsb
mov
ljmp
ret
aaa
xor
cmp
mov
and
adc
pushf
inc
pop
shl
xchg
rolb
and
imul
xor
jnp
add
add
movsl
into
mov
fcoms
mov
inc
push
ror
inc
lods
xor
jl
lret
jo
shrb
popf
js
lret
fisubrs
test
sub
xlat
lret
pop
mov
je
cmp
push
cmp
loop
fprem1
stc
lret
xlat
and
aad
lret
inc
adc
sub
lret
dec
push
fcmove
and
push
out
fldt
loop
push
sarl
mov
fstpl
jg
shll
xor
sbb
xor
adc
mov
push
sti
lcall
mov
mov
dec
lret
pop
push
sbb
sti
mov
sub
fdivrs
push
lret
mov
lds
or
push
jge
movsb
jae
and
xchg
mov
xor
imulb
lret
lock
aam
push
test
push
lret
push
je
cltd
add
or
push
inc
cli
jnp
add
jle
push
mov
hlt
cmp
fwait
xor
or
or
push
cmp
or
xor
fstp
fmul
inc
cmp
in
cwtl
add
testl
mov
add
xor
pop
lret
imul
hlt
clc
ror
pop
sbb
jp
add
pusha
aam
dec
lret
inc
gs
cmp
fwait
pop
xchg
jp
lret
xor
mov
sub
cwtl
mov
shrb
repnz
stos
fcom
dec
push
lret
add
pop
add
lcall
cs
sbb
push
push
lret
and
inc
adc
jmp
xor
mov
push
leave
mov
inc
sbb
fcomps
daa
cmp
lret
pop
int3
sbb
lock
out
mov
insb
lret
test
jnp
and
mov
lods
aad
and
mov
loop
hlt
daa
lret
scas
or
xor
lods
sbb
and
jae
clc
pushf
or
inc
jl
dec
in
add
xor
repnz
add
jmp
lds
lret
push
enter
pushf
pop
lods
and
mov
fidivrl
or
dec
add
movsb
sbb
mov
jle
sbb
cld
xchg
stos
jnp
sub
add
es
sub
sarb
adc
mov
inc
loop
jae
pop
push
dec
shl
and
sbb
push
pop
hlt
or
je
inc
lcall
sub
stos
jg
pop
fmul
xchg
aam
cli
xchg
loop,pn
addr16
addb
sbb
lahf
in
adc
fdivrp
sti
test
push
stos
fadds
mov
lret
push
rcrb
pop
lret
jmp
mov
add
sti
lret
xor
ljmp
jns
fs
dec
aaa
xor
jbe
stos
pop
lods
push
aam
int
in
xlat
negb
lret
jne
in
cmp
push
or
aam
mov
lret
pop
xor
xchg
lret
adcb
loopne
add
sub
sbb
pop
xchg
dec
movsl
sbb
pushf
or
jl
outsl
cmp
sbb
sbb
lret
cmp
test
das
aam
mov
jne
lret
mulb
jge
imul
pop
js
test
push
inc
jg
cli
icebp
insl
cs
sbb
inc
dec
push
inc
fwait
lret
inc
cmp
mov
aas
mov
clc
popa
lret
mov
dec
adc
jl
jne
mov
mov
sti
cwtl
lret
popa
orl
xchg
cmp
fwait
cmp
fcoml
fwait
mov
jecxz
xor
lea
xor
iret
cmp
loope
lret
das
mov
pop
int3
jbe
dec
cmp
sti
fwait
dec
popf
jo
shlb
sbb
popa
mov
out
mov
xchg
fsubs
lret
lods
xor
pop
sbb
fiaddl
fadds
iret
mov
sub
rcll
rcr
les
int
fimull
sub
bnd
cli
sbb
and
mov
dec
clc
or
incl
xchg
stc
ljmp
mov
or
mov
add
ss
sbb
cwtl
inc
mov
dec
cmp
lret
dec
or
insl
and
jbe
sub
lcall
in
lret
loopne
adc
xchg
fs
cwtl
aaa
into
sbb
lret
jg
lds
mov
lret
fwait
popa
inc
lret
dec
jg
ja
rcrl
jne
lret
push
mov
fdivs
lret
loopne
call
pop
outsb
lcall
mov
loope
leave
dec
xchg
cmp
jp
and
mov
icebp
popf
rcrb
aaa
pop
stos
add
mov
xchg
jno
fwait
enter
push
pop
cmp
sub
jbe
ficoml
movsl
ljmp
aaa
repz
sub
pop
add
push
rorl
into
or
fidivrs
lret
loopne
pop
mov
into
adc
xchg
js
fs
pminub
movsb
or
mov
cmp
xor
cmp
cmp
out
dec
cmc
and
mov
stos
ret
xchg
jge
xchg
test
sub
jo
lret
fs
clc
adc
aam
lret
sbb
in
fwait
push
and
push
insl
xchg
xchg
xor
mov
mov
adc
inc
add
repz
xchg
lret
inc
or
jge
enter
lret
mov
lahf
adcl
das
dec
ret
dec
aas
fbstp
bound
or
icebp
push
fistl
xor
adc
mov
ja
and
push
mov
dec
loop
cwtl
fmull
jp
push
mov
das
cli
dec
mov
push
bound
mov
lret
or
sub
jl
mov
ss
xchg
cmc
push
lret
sub
fiaddl
pop
fidivs
call
xor
repnz
push
push
imul
mov
cltd
aad
pusha
dec
mov
int3
push
scas
adc
lret
cmp
lret
mov
clc
fldcw
push
cld
push
or
mov
cmp
pushl
sub
push
movb
lret
inc
inc
and
es
mov
out
lahf
push
adc
flds
out
mov
lods
outsb
test
das
in
and
ds
push
aas
adc
sahf
mov
leave
daa
sbb
aam
inc
lret
xchg
adc
push
inc
mov
xor
fidivl
aas
inc
pop
mov
int3
cmp
outsb
xchg
faddl
into
rcrb
iret
out
jno
mov
lret
xor
lret
les
cmp
rcrb
stos
pop
jge
loopne
push
push
mov
xchg
dec
xor
leave
in
jmp
into
into
cmp
lret
in
lods
outsb
inc
sub
fimuls
stos
jmp
cmp
push
or
sbb
into
shrb
xchg
mov
aam
divb
adc
jp
pop
cmp
aas
sbb
adc
rcr
lret
xchg
sub
repz
mov
cmp
icebp
sti
adc
sub
lret
pop
jle
dec
lret
push
sub
dec
or
sbb
lods
push
mov
inc
jge
cmp
mov
inc
add
jae
lret
push
cmovs
sub
cli
xchg
testb
adc
cmp
lret
fmull
lret
cld
repz
and
inc
nop
cmp
arpl
push
sbb
push
sarb
iret
xor
sub
repnz
aam
jae
lret
dec
xor
adc
and
lret
mov
stc
jge
xor
sbb
adc
popa
mov
dec
ret
inc
pop
lahf
pop
enter
dec
scas
shlb
lret
ds
lahf
xchg
loopne
dec
jns
cmp
sub
ret
imul
outsl
jnp
inc
xor
xchg
mov
xchg
clc
or
xor
jns
adc
aad
or
push
stos
push
push
lahf
fisubl
dec
out
xchg
arpl
cld
fs
fstpt
test
test
lret
imul
ljmp
inc
mov
lcall
clc
enter
loop
mov
push
push
stc
rclb
mov
push
mov
rcll
fistpll
sti
out
mov
or
inc
cld
in
add
fs
jge
aad
dec
in
fdivrs
roll
push
js
xchg
ja
lret
dec
sahf
and
jo
lret
fs
lret
inc
cltd
pop
cmp
or
lods
hlt
fsub
sub
jp
pop
aaa
pop
dec
data16
lret
gs
fdivr
push
lret
jo
push
dec
scas
cmp
lret
xor
aas
andl
cmp
add
pop
stc
ds
xor
cmpsb
and
push
fildl
popa
ror
pop
pop
cmp
loopne
ljmp
adc
lods
cli
insl
dec
inc
adc
aam
and
lret
push
jno
xchg
pmulhuw
insb
xchg
add
push
fs
push
std
lds
fidivrl
dec
lahf
or
clc
or
sub
lret
sbb
movsb
into
push
cmp
lret
inc
ss
lret
mov
mov
les
scas
inc
adc
lret
daa
mov
sbb
es
leave
xor
ss
gs
or
cltd
aas
stos
pop
cld
shr
hlt
sub
mov
push
add
popa
imul
sub
inc
dec
mov
aas
mov
fdivrs
mov
iret
js
jg
lret
mov
movsb
fidivl
imul
add
dec
cmp
mov
outsl
inc
jbe
lods
lret
in
pop
mov
loopne
mov
shl
push
add
push
lret
fstpt
scas
jmp
ds
test
hlt
xor
fcomp
sbb
iret
dec
xchg
outsb
aaa
jle
pop
js
lret
jae
insl
or
call
xor
lret
xorl
xor
loope
mov
pop
lret
lds
inc
add
loope
insl
jmp
xlat
mov
jbe
sub
fdivrs
pop
jno
icebp
call
cltd
aaa
cwtl
dec
xchg
lret
dec
dec
daa
mov
inc
pop
sbb
inc
sub
xor
fdivs
xor
mov
or
rolb
lret
divb
mov
cwtl
pop
adc
lret
call
cmp
push
and
das
sub
lahf
push
sub
lea
add
in
loop
pop
pop
call
xchg
xor
rorb
mov
xchg
loop
cmp
xor
daa
jb
push
int
repnz
mov
inc
test
cmp
push
pop
sbb
xor
rolb
mov
fidivl
mov
or
sub
lret
inc
iret
cltd
pop
xchg
mov
push
jp
stc
adc
add
sbb
push
add
add
in
and
stos
push
cld
lret
das
push
xchg
fmul
decl
add
rcr
mov
cmp
cmpsl
mov
test
cltd
stos
mov
outsb
xchg
xor
lret
out
mov
mov
mov
pop
mov
sbb
repz
xchg
or
dec
pop
jae
out
add
ss
inc
cmp
ja
lret
repz
stos
sti
push
add
mov
add
mov
sub
pop
sub
lret
xchg
push
ljmp
adc
imul
int3
lret
pop
sub
add
not
mov
sbb
fidivs
aad
in
xchg
lret
lcall
fisttps
cld
fldenv
sarb
stos
mov
icebp
dec
enter
inc
jae
lds
push
mov
pop
ret
mov
inc
jbe
cmp
aad
mov
lret
or
cmp
adc
loopne
xor
enter
lret
imul
sbb
imul
or
cli
into
xlat
aam
in
lret
sbb
fcoms
out
lret
xor
mov
in
mov
jo
xor
and
dec
out
sub
mov
stos
popf
loop
and
out
lret
mov
jle
movsl
add
arpl
mov
and
ficoml
inc
insl
mov
in
add
repz
dec
cmp
or
psubd
sbb
push
mov
aad
xor
push
xchg
adc
mov
les
xchg
and
add
cs
jb
cmp
mov
nop
loope
lret
mov
push
push
repz
outsb
lret
mov
jg
imulb
cli
pop
mov
mov
lret
mov
gs
mov
or
or
rolb
in
and
outsl
test
daa
dec
cmp
stc
mov
dec
imul
lds
lret
aam
sbbb
and
fcmovu
icebp
out
jb
lods
xlat
or
int3
add
popa
xchg
std
inc
xchg
jno
lret
rcrb
xchg
ror
xor
aaa
or
hlt
lods
sub
add
addb
lods
fiadds
and
and
call
dec
lret
mov
xchg
imulb
pop
movl
stos
repz
pop
sub
stos
not
mov
push
out
pop
jp
or
icebp
push
lea
add
ret
jbe
fcmovu
xchg
outsl
pop
pop
push
cmp
popf
mov
mul
pop
lds
push
sbb
push
sbb
xchg
aaa
daa
push
sbb
mov
je
push
sbb
addb
fists
fwait
shrl
jno
rclb
popa
jmp
cmp
fs
daa
lcall
ret
shrl
jb
add
lret
cmpsb
stc
jecxz
mov
outsl
mov
xor
inc
loope
lret
cli
mov
cmp
push
ds
push
add
mov
xchg
cs
mov
dec
stos
xlat
adc
push
mov
or
cltd
mov
dec
sbb
xchg
rorl
rcr
mov
aam
imul
xchg
adc
fnstenv
mov
aaa
rorb
pop
cmp
das
ja
lret
in
bound
mov
fwait
inc
lret
loopne
jp
sub
std
mov
mov
push
lret
cmp
mov
repz
jns
stos
xor
mov
pop
xchg
cli
and
gs
or
stos
cmp
into
outsb
cli
pushf
or
das
lret
je
sarl
and
cmc
in
std
in
push
pop
xor
mov
cmp
into
out
xchg
fwait
popa
insl
inc
loop
or
sub
daa
outsb
xchg
adc
pop
fcmovu
out
adc
repnz
adc
mov
dec
je
jno
lock
fsubrl
lret
mov
fxch
fcoms
push
cmp
pop
int3
lret
add
and
or
pop
sbb
test
inc
pop
mov
iret
stc
fiaddl
fwait
mov
leave
int
int
test
cmc
lds
add
popf
loope
in
mov
pop
mov
push
bound
movsl
lret
ret
inc
push
dec
insl
mov
sub
xor
mov
or
xchg
sbb
cmp
lret
push
adc
mov
lret
adc
lret
je
out
mov
fimull
xchg
dec
insb
out
jmp
loopne
insl
mov
lret
dec
call
out
mov
scas
test
pop
rolb
gs
out
lret
into
shrb
xor
test
out
fsubp
notl
xchg
xlat
jno
inc
push
shrl
sbb
aas
cltd
xchg
dec
insw
push
xchg
sbb
outsl
pushf
adc
loope
cmp
lret
sbb
fstl
lret
adc
lcall
adc
mov
data16
int3
aaa
push
sti
sbb
fldcw
out
pop
stos
addr16
jg
lret
pop
cld
or
pop
lret
jno
mov
cmp
lret
lods
inc
les
sahf
mov
aas
add
shll
pop
jmp
icebp
scas
loope
lret
sbb
add
mov
lret
and
inc
aad
lret
adc
lret
in
rcrl
ret
push
out
pop
lret
lret
dec
and
lret
stos
out
cli
or
lret
dec
mov
jp
jbe
and
mov
sbb
lret
or
sub
xlat
je
mull
and
ljmp
insb
dec
shlb
lret
dec
into
push
icebp
std
fcmovu
lock
jo
sub
xchg
adc
mov
mov
xor
sbb
int3
cmpsb
bound
sub
lret
pop
mov
mov
lret
cmpsl
mov
mov
lret
pop
icebp
push
out
mov
push
mov
lret
jl
movsb
movsl
das
sub
arpl
jne
std
jns
jno
lret
ficomps
lret
jecxz
mov
jo
sub
pop
pop
dec
lock
lret
cmp
rol
inc
mov
call
push
les
mov
ss
cmpsl
fiadds
mov
aas
fnstsw
inc
lret
pop
or
jbe
inc
xchg
adc
pop
lcall
mov
jp
mov
imul
sbb
sub
inc
xlat
hlt
cmp
sti
iret
mov
dec
scas
lret
shlb
test
xchg
iretw
stc
fwait
cwtl
ror
push
fs
out
ret
mov
push
gs
lret
je
push
lahf
jmp
lret
mov
insl
lret
mov
shrl
push
shr
jle
insb
add
push
popa
pop
xchg
repz
push
lret
and
fwait
lret
sbb
iret
mov
sbb
lcall
pushf
lea
dec
iret
pop
xchg
pop
ror
adc
rcr
pop
outsb
push
xchg
clc
pop
push
inc
fisubrl
pop
outsl
xchg
cmpsb
insl
fisubrl
sahf
xchg
sbb
mov
inc
lret
outsb
cmc
mov
dec
and
lret
sub
cmp
push
adc
loopne
pop
mov
rclb
inc
lea
ret
scas
dec
out
jp
insb
stc
dec
lret
in
jnp
push
mov
popa
stos
push
divl
sub
fbstp
js
xchg
or
and
inc
and
lret
dec
jle
aam
out
push
mov
mov
cmp
dec
imul
stos
xchg
lock
mov
mov
pop
add
or
mov
das
loop
jge
testl
mov
xor
inc
add
push
ds
xchg
cltd
inc
jno
movsl
aad
shlb
pop
push
mov
rcrl
or
movsl
bound
lret
aas
xchg
inc
insl
ljmp
mov
push
dec
push
shrb
push
hlt
insl
inc
rclb
cmc
addr16
xchg
xchg
or
cmp
lret
int
ret
in
pop
pop
clc
xor
push
add
sbb
shlb
lock
adc
xor
ror
mov
cmp
lret
roll
lret
addr16
cli
cmpsl
mov
pop
std
pop
loope
in
test
inc
rorl
es
arpl
and
out
xlat
lret
jnp
popa
xchg
lret
adc
pop
and
mov
fmul
stos
jae
cmpsl
lret
dec
loop
imul
pop
into
enter
rcll
cli
mov
fcmove
xchg
aas
shll
jnp
or
pop
lods
ret
lret
mov
leave
cmp
rcrb
rcr
push
adc
mov
mov
xchg
cmp
rclb
rorl
popa
int3
mov
int
push
lret
xchg
pcmpeqw
pop
adc
adc
lret
out
push
and
mov
in
mov
cmpl
pop
sbb
test
out
mov
or
divl
lds
out
push
ret
outsl
shlb
cmpsl
cmc
cs
or
add
aad
mov
sub
and
lret
mov
mov
fstl
js
fcmove
lds
pop
mov
stos
int3
mov
mov
scas
scas
test
movsl
int
mov
mov
xor
cltd
xchg
lret
sub
pop
adcl
sbb
mov
shl
push
js
fcomi
cmp
iret
lods
cmpsl
in
and
push
sub
insb
cmpl
sahf
movsl
inc
lret
add
lret
xor
lods
lcall
incl
into
lret
pop
inc
cmpl
ror
mov
xor
outsl
or
popf
idivb
sbb
xlat
inc
sahf
lret
jne
fcmovne
inc
xchg
pop
mov
mov
ret
fiaddl
pop
lret
jp
test
sti
mov
hlt
test
cli
rolb
adc
pusha
dec
mov
les
ficompl
cmp
dec
mov
lods
fldl
jns
ljmp
rcl
ss
xchg
hlt
lret
outsb
stos
test
push
lret
sbb
and
aas
fcmovne
bound
sbb
lret
mov
ret
testl
imul
adc
sti
out
jl
lret
das
clc
imul
lret
cmp
call
push
lcall
ficompl
ficoms
jp
shr
imull
lret
pop
pop
shlb
lret
addb
test
mov
out
jb
sbb
fidivl
movsb
nop
lret
fdivs
lods
adc
cmp
leave
sar
pop
mov
lret
sub
fs
loopne
popf
xchg
js
cmp
lret
xchg
jae
dec
lret
xchg
stos
mov
mov
frstor
mov
mov
shlb
js
lret
or
iret
dec
push
jae
push
lret
sbb
notl
in
cmp
dec
cli
mov
xlat
ret
lret
cltd
dec
pop
daa
adc
lea
pop
jp
scas
mov
dec
lock
sbb
dec
jns
stos
out
les
push
fcoms
add
lods
stos
xor
jbe
int3
cmp
faddp
fsubr
int
pop
jo
mov
lods
ret
std
lret
fcoms
lahf
jno
xchg
lret
fisubrs
cmc
insb
jnp
ja
push
movsb
lret
or
adc
ret
xor
add
mov
or
mov
xchg
lret
pop
cmp
or
lret
pop
inc
sbb
data16
sub
popf
lret
ret
xor
push
mov
xchg
cmpsb
adc
jecxz
je
push
mov
jge
fdivrl
push
cmc
rcrl
adc
jge
xchg
lret
or
sub
dec
lret
psubd
pusha
dec
lret
jns
xchg
lods
inc
mov
sbb
lret
into
push
or
mul
in
insl
cmp
mov
fidivl
gs
jge
xchg
xor
lret
imul
loope
int
rcrb
jmp
cmp
mov
mov
lahf
adc
cmp
pop
lock
pop
andl
icebp
lret
dec
pop
movsl
or
mov
sahf
jbe
push
sbb
flds
stos
xchg
cmpsl
inc
sbb
dec
pusha
jne
imul
push
push
fnstenv
jmp
lret
rclb
mov
mov
fcmovne
loopne
int
push
mov
mov
shrb
in
aad
and
popf
cmp
nop
sahf
frstor
sbb
mov
addb
and
jbe
push
and
sub
lock
out
mov
rcll
aaa
cmp
mov
lahf
fs
pushf
fisubrl
or
jno
in
dec
sub
fxtract
mov
mov
pop
sbb
lcall
push
mov
clc
bound
data16
js
mov
pusha
jno
cmp
lcall
ror
fs
mov
ss
shlb
mov
xor
das
shrl
cmp
push
pop
sbb
lcall
inc
and
mov
rorb
fidivrl
sub
clc
pop
lret
ss
mov
xchg
lret
push
xchg
cmp
in
imul
push
lret
ud1
xor
adc
lret
sbb
pop
inc
pop
cs
mov
pop
bswap
xchg
push
jl
xor
fiaddl
outsb
inc
mov
stos
cmp
mov
testb
xchg
test
pop
lret
add
das
sahf
mov
dec
lret
pop
lret
jnp
stos
xchg
mov
and
mov
dec
lock
xchg
ljmp
leave
into
std
inc
stos
stc
imul
pop
mov
sub
hlt
rol
mov
negl
dec
fists
test
in
push
sbb
lret
outsb
nop
push
sub
insb
mov
lret
adc
lret
pusha
or
aas
push
jecxz
jno
nop
in
fnstenv
ljmp
into
sbb
outsb
mov
lret
xchg
aad
fists
push
sbb
mov
int3
push
pop
movsb
adc
adc
cmpsb
sub
cmp
lret
mov
lret
xor
sbb
mov
cmp
dec
aaa
sbb
mov
push
add
adc
push
mov
sbbb
fs
lret
inc
xor
cli
ss
in
mov
add
das
pop
xorl
xchg
inc
rolb
adc
pop
lret
lcall
fldlg2
sbb
jg
pusha
pop
lret
sub
scas
sub
lods
and
sbb
add
dec
test
xchg
hlt
mov
jae
dec
fsubl
lret
sbb
or
out
cmp
outsb
lret
sbb
imul
mov
icebp
js
test
and
sub
cwtl
jae
xchg
mov
or
scas
xchg
js
sub
lock
lret
mov
popa
clc
fisubrl
inc
fstp
or
sbb
lret
xchg
add
xor
idiv
adc
pop
rorb
addr16
lret
in
cmp
sub
add
das
mov
or
nop
popa
xchg
iret
flds
cmp
jb
xor
loop
or
xchg
fmull
lahf
push
orb
inc
sti
pminsw
pop
cld
out
pop
mov
pop
cmpsb
mov
inc
scas
mov
and
push
add
add
cmp
xchg
pop
dec
push
and
mov
fidivs
xor
pushf
lock
into
lret
adc
jp
rcrb
sbb
and
lret
dec
clc
pop
cmpsb
cltd
or
sbbl
mov
loope
mov
dec
mov
cli
lret
lahf
jecxz
popa
pop
push
fwait
mov
test
lcall
shr
mov
das
ja
dec
test
inc
leave
lret
movsl
cmpsl
pop
cmp
lcall
jno
lret
xlat
xchg
outsb
mov
sub
movsb
clc
orl
leave
xor
pop
insb
shl
out
outsl
lret
dec
and
repz
pop
fdivrs
pusha
cmp
movsb
xchg
mov
loopne
mov
add
ss
xchg
cld
repnz
mov
std
lock
xorb
pop
xchg
bound
cmp
mov
xor
pusha
lock
lret
leave
aaa
cmp
sbbl
xor
push
hlt
xchg
add
xchg
adc
adc
out
sbb
je
push
lods
pop
lret
pop
sti
lods
cltd
in
cmp
jp
sbbb
fcoms
mov
lods
movsl
dec
out
in
inc
lock
mov
dec
lret
test
cmp
pop
out
stos
xor
mov
test
daa
popa
push
sbb
push
call
dec
cli
and
mov
and
ss
shlb
lret
add
jae
jns
push
push
ljmp
pusha
and
mov
ljmp
pop
or
jne
jo
sti
cltd
pop
movsl
lret
mov
push
xchg
xor
adc
dec
sahf
mov
rclb
push
sarb
fwait
xor
shrb
adc
lret
and
adc
sbb
mov
jl
int3
sbbl
insl
aam
hlt
mov
rcrb
sbb
aaa
dec
jmp
data16
hlt
push
into
and
test
jl
lret
loope
imul
and
test
mov
jl
lret
ficomps
pusha
into
or
lret
add
dec
popf
mov
jp
push
add
lds
cmp
cmpsl
sti
xchg
out
or
dec
mov
lret
js
imul
lret
mov
outsb
stos
or
push
cli
and
lret
or
aaa
loope
lret
dec
xchg
jnp
call
cmp
mov
stc
dec
ret
pop
jo
lret
mov
pop
lret
sub
lret
mov
mov
stc
inc
sbb
push
es
cmpsl
cmp
xchg
popa
cmp
unpcklps
pop
lret
cmp
popf
hlt
add
test
jae
rcll
inc
fxch
bswap
loopne
pusha
jecxz
ja
mov
out
mov
test
iretw
inc
mov
add
stos
mov
cltd
sub
lret
scas
dec
cmpsb
or
iret
mov
es
hlt
adc
aas
lods
mov
popa
pop
pop
scas
ficoml
jmp
xchg
sub
les
push
push
pop
fdiv
mov
inc
mov
jae
jnp
aam
jo
dec
gs
push
lret
leave
sub
mov
scas
xchg
sub
jl
bswap
sbb
fwait
out
out
jnp
in
add
sub
clc
fcmovb
les
sbb
adc
fsqrt
xchg
lret
pusha
or
mov
lret
xor
pushf
nop
sbb
lret
pop
xchg
inc
mov
out
pop
test
iret
leave
add
or
nop
adc
fldenv
lds
mov
fwait
popf
rolb
sahf
xchg
faddl
fwait
negb
add
je
cmp
push
fwait
int
lret
dec
pusha
ret
movsb
fmul
and
push
xchg
cli
or
adc
mov
icebp
jb
sub
out
inc
pop
xchg
add
mov
outsl
adcl
cli
or
aad
add
mov
dec
or
push
jb
push
into
mov
mov
mov
enter
lret
jnp
imul
adc
ljmp
rolb
push
cmp
leave
sbb
xor
sbb
andl
lret
movsb
into
add
cmc
adc
aaa
fmulp
mov
mov
lahf
lret
ret
les
push
cmpsl
pop
in
xchg
fcmove
insl
mov
pop
sbb
sti
cmp
rcl
mov
xor
push
and
kunpckwd
mov
lret
and
lret
mov
jl
jne
mov
aad
push
xor
into
mov
lret
cld
mov
je
cli
incl
fadds
das
dec
fimull
sbb
rcl
dec
cmp
cli
iret
push
pop
popa
loopne
lret
cltd
repnz
pop
or
ljmp
sub
add
cmp
xor
lods
sub
stos
adc
into
jge
or
dec
lret
mov
jl
push
dec
test
inc
loope
pushf
addr16
cmp
lret
shll
sub
or
push
lret
sbb
jnp
test
je
ljmp
fisttps
in
cmp
rcll
push
call
stos
mov
cmp
jmp
and
nop
dec
insl
lods
mov
roll
jmp
js
lret
test
or
cld
lret
jl
fimuls
lret
insl
subl
inc
imul
sub
sub
cltd
mov
sub
mov
test
sbb
push
xchg
jbe
xor
mov
repnz
lret
in
xchg
cmp
sbb
sarl
lahf
xchg
jb
sti
mov
xchg
cmp
popf
mov
call
loopne
insl
inc
sub
test
pop
dec
cmpsb
hlt
in
pop
test
cmp
push
nop
cli
cmpsb
jo
addr16
sbb
lret
out
push
pushf
es
push
repnz
lret
jno
mov
fcmove
cmp
xor
sub
nop
pop
adc
dec
cmp
jns
cmp
imul
sub
jb
or
rcl
mov
test
lret
aaa
adc
pop
jo
rclb
loop
outsb
and
fistpl
fnstenv
fmuls
fnstenv
inc
lret
push
cmp
or
jmp
pop
mov
inc
lret
sub
sbb
cltd
xlat
mov
ror
inc
lcall
loop
jno
mov
inc
lret
push
enter
mov
or
jp
xchg
pop
push
aaa
pop
outsl
sbb
in
lret
xchg
shr
inc
repnz
jae
xlat
sbbb
fisubl
out
xchg
ret
add
sub
lahf
in
stos
in
shll
rol
out
xor
popa
loopne
mov
dec
push
clc
sub
shlb
test
mov
pop
aas
add
fdivp
lret
mov
sub
lret
pop
decl
mov
hlt
lret
repz
test
xor
lret
insb
enter
fcmovne
jb
xchg
cmpsl
jle
dec
push
lret
inc
sbb
xchg
and
mov
push
test
lret
sbb
jg
push
enter
js
inc
cmpsb
mov
add
mov
mov
mov
lret
loope
lret
push
pop
jmp
push
lret
or
mov
jecxz
stos
cmp
push
in
mov
xchg
mov
pop
sub
lds
cld
or
stos
push
retw
aas
add
dec
pop
jmp
mov
icebp
or
loope
fwait
repz
test
dec
or
mov
sbb
es
in
lcall
fisttpll
fidivrl
mov
and
jae
int3
loope
push
or
lcall
repz
in
aad
pusha
mov
pop
nop
jno
popf
push
fcoml
and
or
popf
int
xchg
mov
jmp
ror
mov
out
fcmove
mov
fs
and
mov
test
lock
dec
mov
lret
test
lret
jae
aas
rcr
cmp
iret
and
mov
sbb
lret
loopne
push
jae
add
imulb
mov
shrl
pop
cltd
cmp
lret
cmp
lret
inc
jns
stos
jmp
aaa
cmp
aas
ja
mov
loope
lret
imul
lret
fimull
adcl
data16
adc
mov
fildl
xor
nop
cmp
shrb
clc
fcmovnu
sbb
inc
jns
dec
loopne
mov
xor
push
and
aad
xchg
in
pop
insb
lret
cmpsb
lret
push
push
scas
fwait
lret
jno
icebp
pop
mov
cmp
dec
sub
xchg
bound
fcmove
hlt
lea
stos
lret
enter
push
mov
fisttpll
pop
add
aam
cli
jl
lret
into
cmc
out
push
push
lret
cmp
inc
pop
xchg
lret
int3
lods
movsb
clc
pop
je
das
imul
jne
lret
cli
ljmp
adc
out
jge
lret
or
lret
leave
mov
push
push
sar
stos
cmp
aam
push
push
xor
mov
les
cmpb
bound
andb
inc
push
pop
xchg
out
mov
lret
out
adcl
inc
xor
loopne
out
sbb
outsl
lret
xor
cwtl
scas
lret
cmc
jno
dec
jle
lret
fcmovu
xchg
mov
sarl
xor
fdivl
xchg
lods
leave
lret
mov
lret
fstps
lret
mov
inc
xor
ss
daa
add
sub
xchg
and
dec
ret
xor
push
inc
lret
push
cmp
js
xor
pop
xchg
mov
leave
das
pop
flds
cld
fiaddl
or
sbb
arpl
xor
push
inc
outsb
mov
in
cmp
sub
lret
gs
dec
repnz
lret
shll
popa
mov
push
and
pop
enter
mov
lret
movl
int
adc
push
mov
fcoml
iret
mov
push
call
or
xchg
cmp
call
adc
inc
fiaddl
mov
xchg
insl
or
cmp
test
cwtl
cmpsb
mov
pop
outsb
cmp
addb
mov
mov
mov
sar
aad
mov
sbb
clc
pop
mov
cmpsl
lret
mov
mov
ret
push
out
pop
mov
dec
lods
adc
xorb
stc
cli
mov
sbb
jg
mov
and
sti
pop
mov
cmp
adcb
stos
ljmp
sar
std
lret
push
cmpsl
jo
cld
mov
or
icebp
stos
lret
push
xchg
mov
mul
btc
mov
int
mov
clc
sahf
and
mov
xchg
and
or
adc
cmp
dec
int3
jns
jnp
lret
and
pushf
lret
mov
lret
mov
and
pop
pop
lret
or
xchg
lret
jbe
cmpsb
pop
mov
sub
xchg
lods
lret
arpl
imul
pop
fbld
aaa
dec
lret
mov
sub
bound
or
add
sbb
ja
roll
addr16
hlt
fstpt
pop
inc
sub
fcomps
mov
lock
mov
ljmp
cmp
mov
loop
jne
shr
aam
sahf
pushf
hlt
ret
mov
sub
outsl
xchg
cli
data16
ja
mov
sub
lods
movl
push
or
adc
lret
in
or
shlb
jno
stc
clc
fidivl
stos
rcrb
xchg
lret
js
pop
shrb
cmp
mov
xor
or
imul
lods
sbb
mov
fdivr
lret
mov
inc
pop
mov
xor
mov
in
cmc
ret
or
aad
stos
cs
and
adc
lret
pop
mov
inc
and
out
ret
loop
stos
fidivl
adc
cmpsl
cltd
cmpsb
insb
sbb
mov
imul
out
stos
mov
testb
rcrl
mov
lret
cmc
nopl
cli
push
and
in
js
das
add
sub
lret
cmp
jge
fnstsw
pop
mov
lret
sti
pop
scas
jmp
lret
insb
subb
or
lcall
and
pop
xchg
fistl
inc
sar
call
fidivs
mov
nop
imul
mov
cmp
fldenv
je
xchg
insl
lret
ljmp
movsb
lret
es
cmp
cltd
sub
adc
cmp
stos
and
sub
sbb
add
cs
push
mov
mov
push
popa
dec
pop
loopne
jmp
aad
test
lods
jle
pop
shlb
xor
stos
stc
data16
mov
movsl
mov
daa
popl
loop
mov
iret
xor
jle
fimull
lods
or
and
flds
lret
fucomip
mov
lods
repnz
xchg
pop
fs
and
les
in
rcll
loop
lret
mov
lret
mov
sub
aam
lret
xchg
cmp
xor
jmp
imul
dec
push
lret
xchg
and
or
adc
mov
repnz
aas
out
pop
fsubrl
lods
cmpsb
lret
pop
mov
lret
push
cli
dec
xor
iret
notb
sbb
lret
dec
out
stc
leave
cmp
stos
xchg
je
or
orl
mov
push
xchg
dec
sti
mov
lret
xchg
xchg
pop
pop
clc
xchg
jns
lret
nop
aaa
sub
inc
int3
lret
rcrb
mov
sbb
dec
cmp
lret
sub
mov
lods
inc
in
scas
lds
mov
aam
bound
dec
adc
adc
lret
repnz
xor
ret
add
mov
lods
fbld
shlb
imul
ficoml
jb
es
fcomps
into
lret
xchg
pop
push
pop
scas
xchg
lret
test
aam
sub
pusha
add
xlat
jnp
mov
test
lahf
dec
and
and
add
lods
lret
fisubl
shll
inc
lret
stos
pop
fs
pop
lret
mov
icebp
lret
pop
iret
and
inc
stos
lret
bound
push
ljmp
sbb
out
or
jbe
lret
add
movsl
sbb
jae
mov
xor
mov
aam
lret
and
test
in
idiv
test
add
outsl
rcl
test
insl
pop
cmp
roll
mov
mov
ficoms
fcmovbe
cltd
mov
pop
jbe
fcmove
outsb
loope
jle
dec
cltd
and
cmp
jmp
mov
mov
adc
add
mov
lcall
out
jp
and
sbb
mov
loop
mov
inc
mov
jns
jmp
repnz
loop
test
inc
clc
jmp
xchg
push
mov
fcom
shrl
or
lahf
jno
cmp
stos
adc
out
inc
mov
sti
nop
mov
add
hlt
mov
insb
in
cmp
adc
or
cli
repnz
test
or
aam
jmp
mov
cmp
pop
scas
sub
mov
jecxz
mov
jb
lcall
fildl
bound
pop
add
scas
and
jns
mov
cmc
lret
ja
outsl
fnstcw
mov
imul
pop
add
xchg
or
mov
jne
jnp
popa
dec
out
bound
jp
enter
shl
out
inc
andl
fcmovne
and
cmp
pop
push
enter
cs
cmp
ret
clc
stos
xor
mov
icebp
shl
insb
sbb
iret
xor
test
clc
test
xchg
push
cltd
ret
js
push
pop
lret
orb
adc
fmul
insb
sar
lock
mov
xor
imul
loopne
mov
jle
insb
lret
xchg
add
popa
pop
mov
scas
or
out
lret
or
cmp
hlt
jg
mov
add
rclb
shrb
push
es
sub
pusha
cld
push
data16
movsb
fsubr
clc
lret
or
lret
jns
pop
sub
repnz
or
fidivl
sbb
inc
dec
fs
fisubrl
lret
mov
pop
ljmp
rorb
mov
push
stos
mov
sbb
lret
pop
dec
mov
ljmp
xor
mov
outsl
cwtl
callw
bound
mov
jne
enter
faddl
jecxz
push
popl
sub
pop
push
add
jno
and
pop
loop
shl
xchg
cmp
dec
or
lret
sti
insb
mov
lret
gs
movsb
fs
push
outsb
or
inc
lret
mov
in
mov
lret
jno
leave
cmpsl
addr16
xchg
jae
scas
ljmp
pusha
mov
pop
mov
dec
rcl
mov
mulps
andb
hlt
dec
cmp
mov
stos
mov
pop
loopne
push
xchg
int3
sbb
repnz
xchg
movsl
push
mov
scas
adc
xchg
xchg
fldl
mov
ficomps
xor
test
rorb
movsl
push
mov
orl
das
lret
pop
add
sub
inc
jge
xchg
mov
loop
test
mov
lods
push
cltd
inc
test
sarb
add
pop
xchg
je
inc
sub
jo
lods
test
or
jle
cmpsb
or
pop
cmp
sub
je
lret
pushf
icebp
jbe
sub
sbb
push
sbb
add
aaa
into
les
test
int3
cmp
imul
inc
mov
lret
ret
and
push
xchg
push
stc
stos
mov
aam
lret
icebp
inc
gs
std
and
mov
mov
lods
lret
imul
outsl
cmp
mov
lret
mov
and
sub
mov
cld
dec
mov
xor
inc
mov
push
mov
mov
insl
jb
aaa
sbb
cmp
pop
fmuls
xchg
sahf
cli
sti
xchg
add
jp
adc
popf
push
pusha
sub
shlb
jb
ja
dec
xor
mov
imul
pop
mov
lret
mov
or
mov
cmpsl
neg
add
ret
push
add
addr16
lret
insb
xchg
dec
pusha
mov
fildl
rcr
jge
ds
iret
mov
cmp
push
sbb
jl
mov
ljmp
fadd
mov
cmp
xchg
push
push
dec
lret
repnz
cmp
lds
xchg
es
nop
sbb
add
stos
push
or
ror
inc
add
lret
cld
enter
xor
and
pop
pop
dec
arpl
out
loope
scas
push
rolb
shlb
sti
lret
jmp
lret
out
clc
aam
es
adc
in
and
fidivrl
sub
and
lret
fbld
das
sbbb
ss
scas
dec
mov
cmpsb
idiv
xlat
push
lods
test
ror
cmp
sarl
adc
pop
fidivrl
jecxz
cmp
rcr
pop
or
or
mov
stos
movl
mov
xchg
movsl
ljmp
loop
dec
ficoms
scas
or
mov
push
sbb
and
in
dec
fisubl
fldenv
fcmovnb
fisubl
iret
mov
dec
lret
mov
mov
ss
addr16
jae
rcl
push
aas
cmp
jle
sub
std
xchg
loope
or
lgs
cltd
jp
fdivl
xchg
xchg
insb
ficompl
mov
dec
jmp
cmc
pop
cltd
xchg
mov
add
mov
mov
mov
ror
jle
xor
xchg
js
inc
mov
push
cmp
xor
push
adc
or
iret
jbe
clc
mov
push
out
cmovb
rol
inc
je
insl
das
mov
add
mov
ret
or
pop
pop
push
jl
hlt
mov
cmpb
adc
loopne
mov
lret
mov
mov
mov
jbe
inc
lret
stos
inc
and
popa
fmul
push
adc
xchg
dec
xor
cwtl
cmp
dec
jb
mov
std
test
imul
add
fnstcw
xchg
pop
jecxz
lret
push
addb
in
cltd
push
pop
pop
stos
pop
mov
adc
stc
leave
jns
jecxz
test
cmp
stos
cmp
loope
dec
xlat
int
stc
rcrb
int3
jae
jle
clc
scas
lret
aad
add
xchg
call
mov
jmp
jbe
in
adc
rolb
sub
sub
outsb
adc
mov
js
div
xchg
cmp
cmpsl
test
xor
lret
inc
es
pop
mov
jne
cmp
inc
fadds
adc
sahf
adc
xlat
scas
ficompl
mov
loope
xchg
lcall
dec
leave
outsb
xchg
lahf
fwait
dec
popa
add
cmpsl
mov
je
pop
adcb
add
leave
and
icebp
lods
roll
add
roll
push
mov
lock
lret
mov
lret
addr16
das
roll
movsb
loop
sbb
sbb
movsl
lods
ret
jb
data16
pop
sub
xchg
lret
or
mov
cmpsb
cmp
pop
cmp
jp
jnp
loope
lret
mov
lret
inc
xchg
pop
hlt
fdivrs
popf
xchg
enter
test
pop
lret
and
push
jle
inc
jmp
rcrl
lret
ficoms
cmp
mov
dec
loope
push
ret
pop
mov
pop
lret
aam
jp
or
xor
adc
cmp
lret
mov
cmp
jecxz
ret
mov
clc
sbb
mov
je
movsb
dec
int3
pop
sbb
jle
push
fcomps
cmp
push
dec
cmc
and
cmp
inc
lret
mov
pop
cld
test
lret
push
das
in
xchg
or
lret
xchg
jnp
or
mov
pop
out
jae
les
test
sub
mov
add
and
jns
cmpl
outsb
or
dec
xchg
inc
jmp
lock
mov
outsl
dec
lods
pop
mov
sub
jl
cmp
clc
jmp
sbb
add
dec
mov
sub
push
push
mov
lret
addr16
cmp
jmp
rorb
fstps
std
lret
sub
out
adc
repnz
xor
movsl
sub
lret
popa
inc
xor
mov
xchg
test
and
mov
push
sbb
xchg
pop
es
shlb
lret
add
pusha
fcmovu
pop
mov
subb
xor
adc
push
push
test
stc
popf
pop
xchg
sbb
lea
fst
cli
sti
push
pop
cmp
xor
lods
int
rolb
xchg
pop
add
mov
test
push
xchg
jno
pusha
mov
add
stos
sub
and
movb
dec
lret
fbld
jne
imul
push
adc
lret
inc
in
pop
jnp
call
cmp
add
ret
cltd
scas
push
icebp
adc
rclb
cmpsl
dec
push
push
sbb
mov
outsb
xchg
cmpsb
in
enter
jmp
lret
or
sbb
and
scas
insl
in
xchg
sub
mov
cwtl
jnp
lret
mov
movsb
fcmovu
adc
lds
lret
push
sub
and
push
lret
es
push
dec
stos
jbe
ret
sub
lret
fwait
cltd
cld
loopne
cmp
fnstenv
adc
adc
loop
mov
stos
fisubl
sbbb
mov
pop
insl
dec
push
aad
adc
dec
rcrb
pop
jp
lret
sbb
sub
lret
adc
sbb
cltd
data16
xchg
push
mov
adc
js
pop
pop
sti
pop
lret
jns
sub
mov
lret
test
stos
cld
inc
jno
xor
add
push
and
cmpsl
cmp
jmp
push
cmp
int3
pop
cmpsb
cmp
lret
mov
push
popa
cmp
ret
notl
popf
push
movsl
lret
adc
jmp
mov
xchg
int
insb
lock
mov
jnp
adc
xchg
lret
dec
fs
jp
enter
lret
fisubrs
mov
lods
lret
push
or
xchg
jo
fsub
sbbl
jmp
test
fstpt
ljmp
inc
add
inc
mov
hlt
cmp
lret
sarb
fldl2e
pop
lret
shlb
out
sub
lret
loopne
fcompl
fldcw
dec
mov
sub
adc
lret
push
mov
mov
dec
pop
dec
lret
mov
ret
lret
js
pop
stos
inc
dec
stc
cli
jmp
inc
in
jne
dec
or
jno
push
scas
cmp
fdiv
cwtl
inc
fcompl
xchg
test
xor
cmpsl
ljmp
lret
inc
sbbl
mov
xor
bt
sub
icebp
cwtl
cmp
movsl
pop
aad
fwait
stc
push
dec
jbe
xchg
xor
xchg
iret
std
ja
loope
sub
push
repnz
int
leave
ss
dec
jbe
rcrb
pop
int3
push
fsubrl
xor
and
stos
jne
icebp
adc
fidivl
xchg
mov
mov
pop
stos
test
rcrb
mov
xor
inc
jg
mov
sbb
aaa
ljmp
mov
lret
mov
sbb
mov
ja
fxch
sub
push
stc
movsl
sub
outsb
cli
sbb
push
fs
data16
xchg
or
push
jo
pop
xchg
ja
shlb
cltd
mov
and
jge
jp
loope
out
rol
imul
push
xchg
cmp
mov
mov
in
scas
adc
mov
cwtl
jl
xchg
call
shr
adc
cltd
lret
inc
cmp
rolb
lret
ret
push
aas
mov
lret
lcall
ret
mov
js
mov
push
out
cs
lods
shll
push
jbe
sbb
dec
inc
ret
jns
test
dec
dec
xlat
movsb
xchg
pusha
test
lret
cs
bnd
adc
lret
pop
cmp
fwait
jge
lret
cmp
add
ret
jl
in
inc
push
sbb
or
jbe
outsb
or
cld
lods
xchg
lret
cmpsb
jo
xlat
and
push
lret
inc
mov
sarb
rolb
or
cmp
xchg
push
fsub
in
repz
lock
lret
sub
shll
adc
mov
and
jb
divb
ja
pusha
rcr
lret
sub
push
nop
inc
sbb
repz
sbb
test
or
jl
ljmp
and
cmp
fldcw
mov
rcl
mov
fists
xchg
mov
lret
sarb
inc
lret
jmp
fmul
mov
cmpsb
mov
lret
jg
in
push
mov
mov
lret
test
lret
sbb
cli
addl
lea
and
dec
mov
push
lret
xor
iret
lods
cmp
mov
or
jne
leave
add
adc
dec
imull
fsubs
flds
loop
sub
lret
add
popf
adc
lret
jp
xchg
sub
lret
push
mov
pop
mov
rorb
push
fwait
xchg
inc
sub
cwtl
xorb
xor
inc
sub
call
and
mov
xchg
dec
dec
add
xchg
cld
mov
lret
jns
or
pavgw
sbb
out
cmp
negb
mov
lret
fiaddl
lret
xchg
or
push
mov
cmpsb
inc
adc
inc
lret
test
repnz
shrb
xor
and
gs
xor
pop
ret
negl
lahf
mov
imul
cwtl
lret
adc
or
and
stos
cli
lret
insb
xor
into
pop
lret
loopne
ret
mov
imul
sub
mov
add
sub
lret
test
inc
jns
lret
pop
out
sub
pop
and
gs
lock
dec
lret
lea
jmp
mov
jnp
fsts
insb
cld
fnstenv
sarl
mov
jnp
in
lret
ds
adc
insb
repnz
dec
movsb
push
aas
cltd
stos
mov
int
in
repnz
mov
sbb
dec
cmp
mov
dec
xlat
test
js
shlb
pushf
arpl
repnz
jns
sti
icebp
and
psrld
add
cmpsb
ljmp
xchg
adc
out
aad
outsl
pop
xchg
cltd
pop
insl
lret
mulb
lret
ret
scas
int3
inc
jp
mov
lcall
aad
mov
lret
int3
mov
popl
fwait
in
ffreep
lcall
es
not
leave
pop
into
roll
push
out
dec
out
mov
test
fmull
sbb
or
cwtl
hlt
test
icebp
pop
jo
pop
fistl
js
mov
jnp
xchg
mov
jno
lret
cmp
push
repz
lret
jmp
pop
lret
clc
adc
lcall
rcl
xchg
lret
push
add
push
daa
rol
test
dec
test
fldcw
mov
lret
es
popa
mov
outsb
xor
sar
xchg
out
mov
shlb
lret
into
bsf
dec
xor
lret
and
xchg
mov
lods
xor
push
nop
jg
dec
sbb
insl
mov
ret
xlat
rcl
sarl
pop
dec
popa
xchg
xchg
xchg
icebp
lods
cmc
dec
insl
mov
jmp
ljmp
es
sub
cmc
mov
mov
push
dec
cli
das
jo
sub
adc
pop
xchg
push
push
add
cli
loopne
jle
xchg
xlat
hlt
mov
push
push
mov
pop
mov
add
popw
mov
fidivrs
int3
or
adc
xor
and
fwait
lcall
sub
aad
lret
dec
sub
push
outsl
lret
ret
jl
or
lret
jp
jmp
rcrb
pusha
jl
cmp
enter
push
or
dec
pushf
jge
or
les
cld
rorb
pop
add
mov
es
out
cmpsb
pusha
mov
rcll
lea
ss
push
lret
stos
mov
mov
sbb
fldenv
insb
mov
mov
jne
mov
lret
scas
mov
lret
les
cli
in
std
pop
pop
psubsw
jp
arpl
push
adcl
push
xchg
or
js
or
xacquire
pop
lret
jne
mov
adc
jb
mov
fdivrs
testb
int
pop
or
fwait
leave
aad
arpl
mov
xor
pop
dec
and
inc
lret
jle
popa
cmp
or
or
mov
mov
lret
sti
add
mov
cmp
push
icebp
andl
cmpsl
pusha
ljmp
jl
test
xchg
pop
mov
lret
in
nop
sbb
fidivrl
aam
push
ljmp
or
sub
dec
loopne
das
out
fimull
mov
fsubrs
in
popf
stos
xor
cmp
ficompl
dec
ficomps
mov
into
mov
insl
mov
clc
leave
loope
pop
cmp
push
mov
mov
lret
rcrb
cmp
leave
lret
adc
das
mov
fdivrs
insb
sbb
cmp
scas
sarb
adc
aad
or
push
and
mov
insb
mov
lret
inc
adc
subb
pop
add
adc
fidivl
xchg
cmp
or
adc
lods
xchg
fidivrl
adc
popa
icebp
lret
es
loop
inc
lret
or
or
sub
lret
inc
xor
xor
outsl
mov
je
sbb
jns
push
xchg
or
lret
int
in
inc
fcmove
xchg
lcall
lret
mov
lret
push
mov
mov
movsl
jmp
and
xchg
xchg
enter
cmpb
mov
mov
arpl
jp
push
movsl
sub
cmp
adc
sbb
stc
sbb
popf
cmpsl
pop
sub
xchg
lods
mov
mov
lret
icebp
addb
mov
iret
inc
cli
jp
out
cld
push
aam
fidivl
pushf
lret
das
jmp
dec
outsb
adc
push
or
jmp
shrb
lret
orl
inc
inc
pop
xchg
xor
movsb
fsubp
mov
and
adc
ficomps
push
sub
push
or
imul
fs
push
sarb
lret
mov
daa
lret
int
les
test
jge
ss
orl
lock
into
jmp
lret
movsb
loopne
jbe
cli
call
ja
outsb
and
lret
xor
into
lret
jmp
or
mov
lret
push
ds
adc
cwtl
lret
push
mov
and
loop
add
inc
add
lcall
and
pop
aam
lret
cmp
rcll
outsb
lret
cltd
rcr
fstps
lret
jg
aas
arpl
lods
in
cmp
pop
dec
shll
mov
pop
xchg
cmp
sbb
in
push
ja
lret
pop
adc
sbb
cmp
cli
out
push
lea
inc
push
cmp
lret
std
or
cmc
jmp
xor
aad
ss
lret
push
out
mov
stc
mov
push
inc
in
jne
xor
xchg
push
mov
in
xchg
jnp
lret
push
out
adc
pop
xchg
fidivrs
cwtl
mov
es
call
fxch
mov
out
subb
mov
mov
and
repz
sbb
add
mov
pop
mov
xor
mov
inc
jle
push
imul
lahf
push
lcall
cmpsl
subb
and
aam
pop
lret
imul
xchg
stos
xor
outsb
in
testl
dec
into
pop
rorb
or
cmc
sub
ljmp
sbb
loop
shr
stos
and
cmp
nop
dec
xchg
pop
stc
dec
pop
push
or
fdivr
imul
push
aaa
pusha
scas
mov
imul
mov
daa
fadd
out
repz
cmpsb
imul
rclb
push
pop
sarl
dec
jae
jnp
push
xchg
push
lret
push
mov
dec
jno
lret
fs
notb
test
sbb
dec
sbb
mov
dec
inc
shrb
popa
clc
jge
in
cmpl
lret
bound
mov
lock
es
add
jns
cmp
pop
pop
sarb
imul
cmp
test
mov
mov
jnp
lret
inc
inc
sbb
aas
lret
xor
and
lret
js
inc
int3
push
xchg
mov
in
adc
int
mov
shl
xor
and
lret
stos
adc
and
out
mov
cltd
fisubrl
lret
test
lret
fadd
inc
inc
bswap
ljmp
ss
into
sti
mov
push
mov
pop
insl
dec
push
mov
cli
pop
faddl
lock
adc
fldenv
test
fsubs
jae
loop
stos
lret
arpl
adc
xchg
testb
add
pop
mov
mov
push
push
mov
or
insl
fistpll
scas
lock
xchg
pop
jge
cs
hlt
clc
xchg
and
stos
int3
cmp
pop
aam
sti
mov
lods
push
inc
dec
icebp
and
mov
sarb
addr16
xchg
lret
cmp
lret
dec
jecxz
cmp
cmp
xorl
xchg
inc
mov
in
hlt
add
jg
lret
dec
lcall
push
iret
sub
jmp
lret
mov
fidivl
add
lds
repz
or
scas
je
mov
std
cli
jns
scas
jne
mov
clc
lret
out
mov
ficompl
rorb
push
push
fxch
cmpb
jno
cli
mov
adc
in
scas
jmp
mov
mov
ret
mov
and
bound
lret
scas
mov
mov
iret
cld
xchg
pop
dec
mov
push
cmc
int3
xchg
inc
les
jns
pop
lock
enter
out
fdiv
add
stos
clc
inc
pop
mov
cmp
xchg
dec
cmp
fildll
or
inc
bound
out
xchg
dec
cmp
mov
popf
or
out
out
ror
adc
test
mov
or
dec
lret
inc
rorl
xchg
cmp
call
adc
mov
pushf
out
mov
push
sub
shlb
mov
or
cmp
lret
cmp
popf
sbb
movsb
cmp
aam
dec
jno
cmp
jge
sub
fs
lret
mov
lret
adc
cmpsl
jne
pop
lret
jnp
in
mov
push
add
inc
cmp
ljmp
inc
scas
loop
fs
lret
fmuls
push
pop
pop
adc
call
ffreep
or
jge
mov
jg
dec
cli
sti
movaps
sub
fadds
mov
jno
shlb
ja
lret
or
inc
sbb
push
int
movsl
cmpsl
jp
xchg
fs
cli
shrl
pop
ljmp
aas
loop
nop
jge
sbb
cli
or
inc
sub
push
lds
int3
lock
mov
das
push
iret
notb
test
xchg
dec
add
pop
cmp
jp
jns
sub
jmp
insl
imul
cmp
sarl
mov
outsl
push
mov
loopne
dec
mov
repnz
xchg
sbb
dec
jecxz
cs
xor
dec
imul
mov
fnstenv
mov
sbb
push
sub
shrl
out
pop
inc
mov
jg
rcll
push
push
mov
aaa
cmp
add
addb
pop
pop
jle
lret
lds
xor
stos
ret
rcl
mov
clc
sar
out
sub
cmovo
into
sbb
add
cmp
push
xchg
addr16
add
or
xor
xor
add
dec
xchg
loope
ljmp
hlt
insl
repnz
cwtl
push
js
dec
pop
jae
lret
sbb
xor
cs
cmp
xchg
or
inc
rol
data16
lret
dec
lods
sub
leave
xchg
lret
mov
cmp
test
ret
test
push
mov
ds
mov
lret
adc
orl
cmp
dec
or
sub
test
in
and
dec
lret
popa
push
pop
or
add
xchg
sarl
ficompl
pop
sbb
dec
lret
jne
push
fldln2
jbe
cmpsb
packsswb
lret
mov
cmp
aad
push
mov
mov
mov
adc
cmp
pop
into
jecxz
add
dec
push
addl
lret
pop
arpl
pop
aas
mov
or
lahf
ljmp
dec
sti
sub
lock
out
into
js
hlt
ds
inc
cmp
lret
inc
scas
ret
mov
imul
aas
cwtl
aam
pop
arpl
inc
fwait
lret
cld
jno
push
mov
pop
insl
pop
inc
jns
sahf
or
outsl
sub
mov
in
std
mov
push
sbbb
insl
lods
jns
push
add
in
lret
mov
cmc
lret
dec
call
and
insb
iret
ret
mov
cmpsl
sub
push
cwtl
in
mov
outsb
and
stc
add
xlat
je
jmp
mov
insl
adc
sbb
icebp
sti
mov
lods
outsl
dec
push
lds
int
jge
lahf
lret
shll
xor
add
ss
cmp
and
popa
leave
jb
fprem
or
mov
shl
cmp
lret
pusha
outsb
rcr
mov
fcomp
aam
push
add
mov
cmp
cmp
or
and
pop
in
ljmp
pop
mov
cmp
lret
add
push
or
sub
sbb
cmpsb
lret
inc
and
mov
mov
das
push
mov
sbb
sbb
cltd
sbb
out
lret
outsl
xchg
pop
decb
push
mov
adc
out
pop
mov
aad
je
test
pop
lret
push
cld
sub
dec
pop
fsubrl
jne
sub
ret
sub
jno
mov
add
into
mov
movsl
lret
mov
dec
lret
stos
in
divb
insb
aam
cs
push
call
into
rolb
std
inc
mov
ror
bound
add
ljmp
shrb
shrl
lret
shlb
lret
movsl
scas
repz
lret
rorl
clc
pop
stos
enter
cltd
lret
cmpb
sub
or
fidivs
pop
mov
loop
mov
push
inc
push
lret
inc
lahf
test
cmc
mov
jge
repnz
push
and
stc
jp
pop
imul
out
dec
lret
xchg
std
jge
or
sub
jb
or
cmp
adc
jp
imul
or
mov
gs
mov
pushf
lods
cltd
add
loop
scas
fsubp
add
jno
lcall
lret
pop
jp
jns
mov
sbb
leave
lret
into
add
xchg
repz
sub
ror
push
push
insb
jns
and
mov
aad
cmp
pop
lret
mulps
inc
push
adc
mov
lret
add
push
or
pop
lods
loope
shrl
jno
lods
ljmp
inc
call
lcall
cmp
lret
push
and
jnp
mov
mov
add
sbb
jo
leave
xor
jbe
mov
lret
dec
xor
adc
mov
fcmovb
mov
data16
push
mov
pop
fidivs
adc
lret
mov
xor
pusha
fisttpl
push
xor
dec
lock
enter
mov
sbb
inc
dec
out
dec
sub
cltd
loopne
pop
enter
cmp
mov
ror
bnd
push
fdivr
push
push
or
mov
shrl
pop
jg
jge
xor
add
dec
lret
lret
pusha
test
or
xchg
inc
pop
fisubl
adc
pop
leave
fldl
cmp
xorb
pop
sub
jae
xchg
xchg
movsl
lret
cmp
dec
addr16
lret
imul
rorb
js
fidivl
ret
fs
int
push
dec
stc
fistps
test
xchg
jp
clc
mov
inc
jge
addr16
fwait
ds
and
jno
jg
xlat
lret
push
dec
and
lret
call
mov
addl
das
in
jle
pusha
adc
lahf
jb
mov
mov
stos
sbb
aam
pop
movsb
movsl
lret
rorl
xchg
in
jmp
dec
add
cmp
mov
push
lret
jnp
lea
sbb
into
xor
lret
xor
test
lods
cmpsb
sub
repnz
in
lret
adc
mov
add
sarb
clc
and
outsl
sahf
in
lods
jno
ret
repnz
lret
mov
push
lret
add
mov
ficompl
sbb
push
cmp
daa
sbb
jns
dec
pop
mov
lret
push
jo
test
dec
cld
imul
cmpsb
cli
mov
fwait
in
enter
rcr
cmp
adc
or
pandn
ljmp
cmp
inc
sub
lret
sbb
sbb
mov
mov
xchg
cs
int
jb
scas
cmpsl
and
jmp
pop
loopne
aam
inc
or
aas
pop
xchg
test
jp
sarb
fimull
rcl
lock
inc
xor
lret
dec
push
pop
inc
in
mov
mov
lret
xchg
add
pop
shrb
sbb
ss
adc
inc
and
push
mov
jae
dec
rorb
pop
add
xchg
pop
mov
leave
lret
pop
xor
sub
adc
ret
pop
call
pop
stos
push
and
lea
adc
imul
sahf
outsl
add
add
iret
faddl
stos
bound
push
cmp
ljmp
mov
lret
sub
decl
iret
sbb
or
or
or
adc
jmp
cmp
mov
lds
popa
repz
mov
fimull
notb
xor
fldenv
cld
mov
pop
negb
popf
add
jp,pt
mov
in
lret
pop
fwait
jno
push
inc
aad
test
mov
mov
es
push
adc
fcmovb
leave
mov
int3
imul
int3
pop
dec
or
fcmovbe
dec
dec
adc
xor
mov
and
inc
lret
cltd
scas
add
ret
mov
lds
push
fmuls
fcomi
cwtl
sbb
rorl
shrb
out
fiaddl
inc
mov
lahf
inc
into
push
push
mov
adcl
movsl
mov
xor
testb
bound
cmp
sti
pop
mov
xchg
lret
lds
dec
mov
incl
jnp
mov
dec
lret
outsb
fstpl
xor
fdivr
into
jp
in
lret
ja
xor
add
and
push
xchg
lret
sub
jbe
xchg
ljmp
out
out
jne
xor
mov
jp
mov
popf
stos
negl
mov
mov
add
jg
and
das
test
loope
lret
loopne
inc
dec
ret
out
clc
jmp
fldcw
sbb
pop
gs
loopne
stc
dec
cli
mov
pop
fdivs
cmp
mov
mov
jl
ficoml
aas
cltd
pop
pop
js
or
insb
fists
icebp
mov
orb
lods
pop
ficoms
lret
lret
cwtl
or
les
pop
daa
pop
push
mov
rolb
mov
inc
nop
cmp
mov
or
pop
lods
jne
inc
repnz
and
push
jg
outsl
jbe
push
mov
lret
pop
jae
aam
lret
push
cmp
mov
movsl
ljmp
lret
jne
dec
cli
xchg
mov
test
inc
aad
jns
lret
push
push
sbb
lret
mov
mov
dec
mov
out
aad
stos
rclb
push
sbb
cmp
add
mov
movsb
subl
lcall
push
loopne
jnp
add
lret
adc
jge
lret
sbb
inc
push
lcall
xlat
ret
outsl
xor
inc
jge
cmp
filds
cltd
mov
push
xor
xor
and
test
je
inc
sbb
mov
mov
sub
mov
jne
repz
lock
int3
and
jns
xor
mov
into
cmp
xchg
mov
jecxz
loop
into
mov
popa
hlt
dec
cmp
mov
std
mov
and
fildll
es
mov
lret
fstpl
lret
stos
in
mov
mov
inc
mov
out
cmp
and
mov
lret
fnstsw
lret
mov
shll
bound
lret
mov
mov
jne
xor
flds
or
lret
clc
lret
aad
arpl
sbb
int
mov
sub
aas
and
shr
popa
shl
enter
jns
push
adc
outsl
and
xor
mov
dec
mov
fdivs
xchg
outsl
daa
adc
sbb
fimull
test
cmpsl
dec
push
lret
aam
cmp
add
mov
push
cmpsl
pop
stc
mov
dec
sub
adc
push
lret
adc
in
inc
movsb
sbb
stc
popf
cli
jns
push
add
testb
jp
bound
inc
jl
shlb
test
sti
ror
in
loopne
leave
jmp
into
push
lret
sbb
lret
sub
out
pop
into
jns
jge
std
mov
mov
out
lret
xchg
sahf
jge
lock
mov
jnp
dec
lret
jp
cmpsl
or
icebp
lret
mov
iret
aas
lahf
leave
lret
xchg
ret
inc
into
lret
mov
lods
addr16
fcmovbe
jb
call
mov
fs
xchg
out
mov
cmpsb
mov
jno
adc
mov
mov
jecxz
pop
ficoml
lock
or
push
jns
sbbl
mov
mov
or
mov
js
lods
push
fistpll
jno
lret
push
pop
xlat
out
sbb
lret
outsl
aad
hlt
dec
cs
dec
test
xor
mov
push
lret
aaa
jle
sub
outsb
lea
dec
or
cli
or
pop
mov
add
aas
sarl
inc
push
mov
cltd
cmp
int3
jmp
xchg
lds
sbb
lret
inc
jbe
into
inc
aad
pop
mov
mov
ds
dec
imul
xchg
cmp
and
ljmp
and
adc
adc
pop
mov
inc
mov
jmp
out
lret
lds
pop
nop
adc
shlb
add
je
xorl
xorb
imul
xchg
dec
or
loope
lret
in
loop
rcr
fwait
sub
mov
push
stos
out
ss
into
outsl
mov
mov
fimull
and
sbb
add
jne
pop
adc
lret
push
jnp
adc
test
mov
sub
lret
sub
inc
xor
push
mov
push
lret
xor
das
and
add
mov
mov
push
pushf
xchg
xchg
add
push
lret
mull
addl
jae
movsb
and
mov
aad
mov
gs
cmp
inc
sahf
arpl
out
test
lock
sarb
rcrl
or
in
sbb
dec
lret
testb
sub
adc
add
adc
sti
adc
lret
imul
cmp
cmp
jecxz
mov
outsl
fdivr
cltd
rolb
icebp
and
nop
outsb
mov
call
sbb
adc
pop
fidivrl
rcl
mov
mov
xchg
lret
pushf
out
outsb
xor
lret
fisubrl
loop
lcall
or
sbb
mov
stc
push
lret
push
pop
sub
pusha
sti
lret
xorb
movsb
add
daa
shl
jl
inc
add
cli
ror
cmp
pop
inc
push
inc
mov
mov
arpl
les
rcll
cmp
inc
shr
jnp
xchg
jo
cltd
adcl
mov
xchg
mov
pop
xor
sub
shlb
xlat
ret
jnp
ficoml
sbb
and
sti
lret
dec
stos
fwait
les
out
cmp
mov
sarl
aam
outsb
js
mov
fdiv
nop
and
lods
adc
mov
dec
inc
jns
and
lret
xor
push
popf
scas
lret
and
psubd
test
sbb
into
adc
jne
jnp
push
add
pop
xchg
into
pop
sbb
lret
ret
enter
int
iret
xchg
xor
or
lret
arpl
mov
jmp
int
inc
lods
jne
xor
lea
call
mov
mov
sti
xchg
aaa
push
mov
into
pop
mov
lret
or
sub
add
push
inc
repnz
xor
adc
addr16
loope
shlb
sarb
test
cli
pop
lcall
rcl
lret
dec
ret
xchg
jg
cmpb
mov
pop
fmulp
xchg
sbb
lret
lods
inc
loop
xchg
cmp
ret
push
in
push
test
out
jnp
les
dec
add
inc
mov
scas
pop
xchg
sub
fcmove
pop
mov
xor
pop
adc
ficoml
in
xchg
inc
ret
popa
inc
lret
lret
xor
int3
add
pop
sar
leave
imul
loope
lret
out
or
xchg
mov
cli
push
loop
xchg
pop
shrb
mov
test
aad
xor
loop
jne
dec
sbb
fidivl
lahf
fcomps
xor
ja
lret
fidivrl
jbe
inc
mov
add
mov
or
push
dec
fcomp
popa
aaa
ljmp
or
push
int
cmp
js
daa
xchg
ret
aad
outsl
leave
lret
mov
stos
lret
jp
dec
clc
scas
mov
sub
jge
imul
shlb
mov
mov
jno
mov
push
push
inc
adc
dec
ror
jg
rol
pushf
jne
aaa
mov
and
lock
lret
dec
nop
lds
lea
dec
mov
movsl
lret
outsl
rcll
xchg
or
loopne
movsb
mov
inc
and
pop
jg
pop
cmp
repnz
push
int
mov
add
sahf
outsl
pop
or
push
pop
xchg
pop
mov
cmp
fisttpl
into
and
cmp
gs
stos
fdivp
xor
xchg
push
iret
sti
mov
lret
imul
popf
mov
push
repz
dec
sub
mov
jle
in
mov
lods
xchg
pop
xlat
push
lret
clc
xor
sarl
sti
xchg
and
push
cli
dec
jl
dec
push
lret
lock
test
pop
lret
add
push
shrl
inc
adc
int
fwait
sbb
jge
xor
cmp
push
push
fiaddl
push
loope
push
pop
xlat
repnz
pop
ja
in
out
dec
xlat
ret
mov
lds
stos
jge
and
shlb
mov
add
popa
loope
orb
sub
cmp
fldl
mov
pop
fidivs
insb
jl
arpl
cs
xchg
xchg
cltd
mov
xor
lret
xor
inc
enter
xchg
cmp
pop
cmpsb
bound
dec
lret
adcl
into
stos
xchg
pop
mov
roll
and
stos
fldln2
loope
dec
outsl
cs
mov
es
shr
lret
xchg
leave
pushw
inc
add
fmuls
movsl
cmpps
or
xorb
ljmp
into
ret
lret
xchg
and
jo
das
fidivl
inc
rclb
shll
negb
xor
sub
xor
adcb
cwtl
sti
sbb
outsb
cld
icebp
std
jae
inc
inc
pop
ficoml
adc
jg
test
lahf
sbb
ja
or
pusha
add
rcrb
fimuls
lret
jmp
fisubrl
push
fs
xor
jge
sbb
lods
mov
lret
inc
cmpsb
lret
je
in
jbe
test
dec
cmc
dec
sub
dec
sti
out
test
daa
popf
popf
inc
xchg
loop
and
idiv
insb
repnz
pop
jno
or
aas
mov
stos
imul
jbe
push
xchg
out
pushf
xlat
test
xchg
or
pop
lock
insb
lret
repnz
sub
mov
lret
movsb
mov
lret
stos
mov
lret
jge
and
insl
mov
dec
pop
jne
int
cwtl
fs
adc
xchg
and
subb
lods
cli
cli
in
push
xor
pop
pop
lock
push
mov
fistpll
or
dec
cmp
mov
adc
xor
fs
mov
imul
std
enter
ror
lret
dec
xchg
int
aad
lret
mov
jnp
push
pushf
fiaddl
add
sbb
mov
lret
dec
adcb
lret
jmp
push
ficoml
or
or
pop
sbb
cli
outsb
ja
lods
cli
addr16
sbb
lret
cli
xor
int
and
sub
pop
in
ljmp
mov
nop
sub
jo
mov
dec
pop
jnp
jecxz
dec
cmp
cwtl
rcl
fiadds
inc
push
push
mov
lods
fwait
out
std
stos
pop
ljmp
lret
imul
push
jae
pop
push
shlb
stos
in
rol
push
iret
lret
pushf
mov
sub
shl
jo
and
xchg
fs
icebp
hlt
adc
mov
or
jp
mov
pop
shl
das
inc
sbb
lret
daa
mov
lret
mov
loop
dec
lahf
jno
sbb
lret
sub
add
cmp
inc
dec
movsl
loopne
pop
std
lret
cli
sarb
dec
mov
inc
pop
pop
faddl
cmpsb
xor
cmp
add
add
dec
mov
dec
pop
mov
lret
loope
add
fiaddl
insl
shrl
pop
out
ror
mov
xor
iret
mov
lret
jg
add
lret
test
scas
inc
outsl
lret
lret
push
pushf
jae
jmp
xor
nop
js
test
pop
dec
mov
sbb
cmpsb
mov
inc
mov
dec
xchg
sub
aad
adc
cli
dec
cs
loope
stos
inc
push
ljmp
cwtl
ljmp
out
cmpsl
push
aaa
jb
cmp
pop
mov
or
shrl
and
and
push
mov
lcall
lret
inc
mov
lret
test
mov
repnz
cli
mov
lods
data16
fisttpll
inc
and
or
push
dec
repz
fadd
cmp
sbb
fldenv
pop
jmp
inc
jns
aas
add
imul
xor
sub
inc
and
loopne
out
nop
jnp
lods
jae
fidivl
lret
push
pop
leavew
sti
and
jnp
scas
test
adc
pop
stos
mov
stc
inc
inc
icebp
cmc
lret
dec
rcrl
jge
fimull
push
mov
jno
incb
js
mov
dec
mov
outsl
lcall
test
cwtl
sbb
cmp
out
loop
stos
aad
stc
test
outsl
pop
lret
in
cli
fisubrl
jno
lret
ja
push
xor
loope
insl
or
int
jno
lahf
sbb
adc
cmpsl
cmp
sub
push
dec
imul
cmp
ficoml
fcomps
inc
or
mov
mov
dec
mov
dec
mov
pusha
push
sbb
jbe
and
lret
int
inc
or
andl
xchg
adc
jge
pop
lock
xor
push
nop
mov
call
cmpsb
xchg
aam
mov
push
shlb
in
sbb
sar
fcoml
jbe
iret
jge
cmp
inc
add
mov
sub
mov
mov
cmc
push
mov
dec
lcall
cli
imul
sub
test
jae
or
jo
stos
dec
out
dec
ljmp
xor
insb
into
cmp
movsl
fsubrs
loope
pushf
nop
lret
push
lock
mov
add
mull
into
jmp
lret
xor
jp
imul
push
xchg
jns
add
rcl
and
int
mov
pop
sub
sbb
aad
xor
pop
dec
mov
rcl
daa
lock
jp
sbb
mov
cli
cmp
pop
sbb
clc
pop
mov
xchg
adc
inc
sbb
mov
adc
ljmp
scas
inc
mov
push
scas
test
cltd
repz
into
and
cmpsb
shlb
jbe
jp
insb
shl
and
xchg
lods
and
pop
pop
data16
pop
dec
xor
aam
mov
jae
aam
imul
scas
jae
nop
movsb
mov
jae
repnz
cltd
lret
push
mov
into
or
pop
pop
cmp
sbb
xchg
inc
rcl
cltd
repz
stos
inc
ljmp
mov
cli
sub
xchg
lret
pop
mov
cmp
mov
cltd
shl
scas
shll
add
cwtl
int3
dec
dec
xor
cmp
jp
lret
rolb
nop
lret
daa
out
test
test
lret
bound
push
cmp
mov
rcl
mov
repnz
pushf
aaa
fwait
cs
subb
cwtl
sbb
pop
lret
lds
fwait
or
ror
fistpll
cwtl
out
jg
cmp
aad
jl
cmp
push
push
inc
jnp
or
mov
outsl
popa
xchg
or
push
pop
loope
into
pop
cmp
daa
lret
fisttpl
push
and
jmp
stos
sub
add
cmp
pushf
sbb
jg
xchg
and
loop
push
aam
adc
scas
int
or
jg
sub
int3
lret
mov
pop
cli
pop
pushf
dec
out
pop
jecxz
fwait
xlat
jne
fmul
lcall
pop
lret
orl
sub
mov
mov
adc
iret
mov
cld
cmpsb
lahf
push
sbb
jge
int3
scas
push
push
inc
dec
in
inc
add
outsb
sub
push
icebp
loope
lret
xchg
out
iret
test
lods
dec
and
popf
adc
lret
push
xchg
rorl
lret
jg
int
sub
les
into
and
jae
mov
push
aaa
test
mov
es
lahf
cmpsb
lret
adc
dec
xchg
idiv
mov
into
into
jb
and
ss
pop
sti
in
mov
ror
inc
push
imul
icebp
loope
or
push
ret
in
pop
lret
loopne
or
popa
xor
xor
xchg
or
daa
cwtl
loop
pop
or
cld
iret
mov
int
cmpsb
sub
mov
push
into
sbb
xchg
pop
icebp
sub
mov
outsl
sub
push
loop
mov
adc
lret
or
sub
dec
stos
pusha
rorb
cmp
push
add
and
scas
add
lret
pushf
cli
cwtl
add
rorl
test
std
mov
imul
icebp
mov
xor
jge
xchg
mov
cltd
lret
pop
xlat
cmp
sbb
cmpb
fcmovnu
in
cmc
jle
lret
mov
out
aad
imulb
lret
pop
pop
mov
ret
icebp
das
add
adc
fidivrl
cmp
pop
push
mov
mov
loope
lret
xchg
add
inc
lret
inc
xor
dec
xchg
cmp
xchg
ljmp
add
shl
leave
adc
inc
stos
rorl
into
mov
jne
lret
xor
mov
scas
inc
popf
xchg
out
inc
ficompl
js
cmpl
stos
mov
pop
dec
movsl
adc
cs
and
mov
sbb
idivb
push
loope
adc
test
gs
pop
rcrb
ja
clc
rcrb
push
mov
lret
push
jno
xor
fisubl
pop
mov
sbbl
push
push
loope
shl
fisubl
pop
popa
mov
int
cltd
xchg
mov
xor
popf
stc
cmp
pop
cmp
sti
insl
mov
and
ljmp
mov
ficompl
xor
out
loop
adc
rcr
mov
mov
idivl
inc
pop
mov
imul
jp
sub
pusha
mov
pop
xchg
jl
add
or
fcmove
sbb
fcomps
jne
insl
fbstp
mov
mov
cmp
jno
cmp
loop
leave
mov
call
fimull
cmp
ss
mov
pop
cli
mov
notl
sbb
test
inc
add
jecxz
test
pop
push
mov
fdivp
sub
cmpsb
pop
jecxz
push
sub
mov
xchg
dec
stc
adc
cmp
push
into
bound
push
lods
les
mov
mov
int
push
mov
xor
mov
pop
in
ljmp
cli
repnz
xchg
push
pop
mov
das
enter
lret
in
jmp
mov
stos
push
push
or
or
aaa
push
jg
lret
fwait
and
lret
xor
cltd
fwait
ds
xchg
in
and
aam
xor
fisubrl
testb
or
cld
mov
ret
push
lret
mov
lret
lahf
or
sub
mov
test
dec
mov
sahf
nop
test
jae
test
cmpsb
dec
pop
sbb
insl
pop
aad
test
mov
mov
mov
dec
lret
and
lea
dec
insb
stos
adc
sbb
push
xor
jo
pop
lret
scas
cmp
jecxz
jl
push
lret
or
stos
cmp
push
sbb
push
sbb
dec
cmp
enter
pop
setns
scas
mov
testl
mov
mov
and
mov
cltd
and
pop
sub
xorl
lcall
dec
mov
fstpl
pusha
or
xchg
int
fdivs
repz
jo
aam
lret
sbb
addr16
mov
fcmovne
lret
lcall
shll
negl
push
push
cwtl
jne
jge
jns
or
dec
rcl
xorb
lods
dec
out
lret
addr16
cmp
sub
jns
xchg
jae
xrelease
imul
or
add
cmp
aas
stc
xchg
mov
add
mov
leave
xor
xchg
push
cmp
cmc
lret
stos
jg
inc
push
les
or
pop
in
jae
lret
sub
je
cmc
sub
mov
sub
divl
test
int3
ficompl
mov
lret
test
fidivrl
repnz
subb
mov
cmpsl
sub
sbb
cli
mov
push
inc
rorb
pop
or
int3
lcall
cli
lods
fstps
jb
xlat
out
and
lret
jge
daa
insb
mov
mov
test
lret
sub
xor
add
xchg
sbb
inc
in
inc
cmp
into
jp
pop
and
cmp
push
mov
orl
lret
and
xchg
lret
outsb
jno
pushf
and
lret
cs
ljmp
xchg
or
cmp
repnz
fmul
sbb
mov
stos
int
fisttpll
add
icebp
pusha
stos
mov
xor
fisubrl
popa
xchg
loopne
dec
jecxz
stc
into
cltd
or
or
aaa
jge
rorb
xchg
sub
daa
adc
ljmp
dec
jle
cmp
jle
stos
fists
mov
and
std
jg
aas
movsb
inc
push
xchg
popf
push
jne
fisttpll
mov
out
ret
stc
lret
fs
or
xchg
mov
faddl
cmpsl
iret
mov
lret
xchg
mov
std
jle
repz
inc
stos
sub
or
outsl
sarb
lods
fidivs
cld
sbb
inc
ljmp
rolb
cmp
je
push
pop
push
ret
nop
mov
testb
add
mov
mov
lret
inc
dec
mov
lret
es
or
ret
inc
lret
sub
xor
push
adc
into
sbb
fdivl
jo
sbb
xchg
add
pop
bound
push
inc
or
dec
int3
cmp
insl
push
push
cmp
mov
sbb
jge
dec
loope
movsb
ffreep
ss
inc
andl
test
push
push
mov
lret
fsts
popf
xchg
dec
dec
rorb
int3
lret
mov
lods
sbb
jae
out
imul
iret
fbld
clc
addr16
insb
mov
fmull
aad
pop
out
fwait
jb
mov
and
mov
xor
mov
mov
aas
mov
ds
mov
jae
insl
rorl
mov
nop
push
out
add
sub
inc
mov
fs
fstpt
pop
xor
xchg
cmc
lret
dec
push
inc
pop
push
adc
sahf
lock
enter
scas
shll
cmpsb
mov
xor
adc
shrl
cwtl
les
pop
imul
lret
push
out
out
mov
lcall
inc
adc
jl
out
sbb
pop
test
sub
popf
inc
rcl
mov
lret
sti
pop
pop
xor
aas
or
adc
popa
iret
fwait
loope
mov
add
xchg
insl
mov
aas
pop
xchg
mov
lret
je
and
fisubl
push
rorb
ljmp
xlat
test
push
popf
ja
pop
decl
jnp
add
cli
mov
enter
or
stos
out
or
mov
ficompl
in
adc
outsl
idivl
dec
shrl
fists
lcall
push
dec
fs
inc
jo
aaa
int
test
sbb
out
ljmp
shlb
sbb
mov
dec
push
out
jnp
sbb
fldcw
jb
roll
enter
pop
sub
mov
sub
mov
fadd
adc
loope
push
xchg
xor
lret
pop
mov
lret
adc
mov
lret
inc
outsb
dec
mov
hlt
add
inc
jns
in
mov
stc
shlb
fsubrs
mov
lret
cwtl
or
out
inc
dec
jns
cmp
loop
ljmp
subb
lret
scas
popf
cmpsl
add
mov
mov
repnz
dec
popa
ret
sub
xor
or
sub
pop
push
xchg
jmp
aad
dec
je
jno
lret
mov
mov
add
rcrl
mov
int
pop
jno
adc
lret
jne
sbb
xchg
subb
push
jecxz
or
sub
lret
mov
sbb
cli
xor
xchg
fwait
pop
sbb
movsb
ror
stos
incb
loopne
cmp
mov
fisubl
test
xlat
stos
leave
lret
mov
popf
aad
and
cmpsb
jnp
mov
pop
into
jge
icebp
fadds
add
inc
mov
subl
test
lahf
lret
or
out
lds
mov
in
sub
inc
add
ret
cli
sbb
xchg
cmp
imulb
jmp
jo
mov
cmpsb
xchg
and
in
lret
outsl
ret
in
mov
ror
jle
push
fstl
push
cmp
inc
lea
in
xchg
out
xchg
push
repz
addr16
into
mov
adc
xchg
ror
mov
scas
rclb
jns
inc
or
xchg
add
inc
xor
mov
ret
push
call
mov
cltd
adcb
lret
adc
cltd
fsubrs
dec
ds
pop
or
in
stc
loope
cltd
push
sbb
mov
lret
pop
int
push
mov
nop
lea
jmp
cld
xchg
mov
popa
ret
mov
fsubrp
cmpsb
enter
dec
cmp
mov
lret
xchg
cmp
into
lret
mov
adc
mov
cmp
inc
inc
cltd
fmull
popf
test
pop
mov
sbb
in
jp
lret
ds
test
or
loop
mov
sbb
mov
and
into
aam
dec
sbbb
pop
stos
out
lret
adc
fildll
mov
lret
sbb
and
and
add
and
call
test
mov
jl
or
fwait
sub
sahf
dec
or
into
jge
dec
adc
enter
add
push
sub
pop
sahf
repnz
pop
xorl
jle
or
incl
sti
fcomip
dec
pop
sub
mov
mov
sbb
loop
dec
jle
inc
ljmp
jo
inc
push
xor
adc
xor
inc
mov
push
xor
push
push
mov
xchg
sbb
rcl
sbb
dec
sub
test
add
xor
ljmp
dec
loopne
lret
sub
push
and
cmp
push
ss
jle
jecxz
test
mov
loope
mov
test
divb
mov
jl
aaa
lret
mov
test
sarb
scas
xchg
jecxz
sbb
mov
cmp
jmp
sub
jle
xlat
aas
popa
push
js
xchg
ficompl
sbb
lods
cmp
lret
adc
lret
fidivs
sub
and
test
movntps
shlb
cmp
lret
and
xor
into
lcall
push
lret
xor
ds
fs
xor
lret
adc
xchg
mov
ds
daa
or
mov
or
push
push
aaa
aas
lret
lds
mov
mov
lret
lock
out
adc
lret
adc
stos
dec
scas
imul
ljmp
push
js
pop
fs
js
lret
fidivs
movsl
repnz
popa
inc
not
xchg
pop
and
leave
addr16
lret
inc
pop
adc
dec
out
popf
sbb
dec
lock
add
out
jae
xor
lret
jmp
icebp
sbb
lret
or
outsl
push
pushf
ficompl
dec
rcr
cmp
fcomps
lds
nop
lods
pop
shlb
lret
into
ret
cltd
dec
lret
cmp
stos
lds
mov
orb
shrl
lret
sbb
cs
or
inc
add
jge
pushf
int
fadds
call
fs
sub
hlt
lret
lret
mov
lret
daa
add
sti
inc
xor
lret
mov
test
cmp
or
inc
push
aad
cli
test
xlat
cmp
fsubs
subb
mov
hlt
pop
mov
dec
lret
push
aas
icebp
mov
mov
call
pop
fldcw
lret
or
lret
aas
int
mov
fmulp
add
push
mov
mov
cli
adc
and
stos
sbb
xor
sub
push
dec
subl
cmp
sub
clc
lret
sbb
sub
js
push
xchg
jl
or
cmp
lahf
jmp
lock
lret
xor
bnd
sub
andl
mov
testl
lret
call
dec
sti
aam
std
cmp
dec
int3
imul
mov
or
jns
js
pop
and
out
xor
jbe
fdivs
xor
test
sbb
mov
pushf
jno
pop
cltd
fcmovnbe
pop
mov
sbb
mov
data16
scas
mov
jns
lret
movsl
jo
mov
mov
inc
into
adc
adc
cli
fwait
lahf
mov
pop
adc
push
sub
xor
mov
cmp
loopne
in
pushf
test
cmpsl
stc
rclb
aad
das
ss
jp
icebp
jl
fbld
lcall
dec
mov
sub
subl
push
ss
jnp
cwtl
ljmp
lret
sbb
mov
in
jp
lret
dec
in
and
lret
popa
mov
xor
mov
repz
xlat
lret
ljmp
cs
loope
push
xor
lret
and
je
dec
lret
inc
aam
push
push
lods
lret
test
or
mov
inc
dec
ss
lret
sbb
push
int
imul
mov
jl
lret
idivl
lret
jbe
fdivrs
ret
push
jg
int3
cwtl
into
mov
sbb
insl
sbb
cs
xchg
sub
mov
inc
ret
imul
cli
insb
nop
inc
and
or
dec
dec
jmp
push
lret
push
adc
scas
lret
add
aam
imul
jnp
jns
jle
dec
fildl
dec
lret
pushf
mov
mov
repnz
subl
mov
or
cmpsb
push
es
push
sub
dec
lods
push
stc
movsl
loop
in
jbe
inc
clc
lret
inc
xchg
cmp
push
pusha
insb
mov
xor
adc
shlb
shrl
mov
and
cmpsb
js
xor
dec
lret
aad
xchg
popl
rorb
je
repz
bound
cltd
push
pop
xor
xlat
xchg
mov
xchg
dec
repnz
sarl
lods
lret
push
cmp
sbb
in
mov
repnz
std
lret
push
mov
pop
mov
mov
jae
jbe
mov
dec
lret
dec
cmp
xlat
cli
lret
ja
imul
and
sbb
outsl
loop
xchg
push
push
dec
fsubr
jge
or
loop
js
mov
add
and
mov
ss
mov
cmp
cmp
pop
xchg
insb
mov
loop
scas
lahf
cmpsl
or
cmp
dec
fldcw
loop
xor
dec
js
mov
cmp
mov
loope
imul
shll
mov
or
es
dec
dec
cmpsl
mov
mov
in
mov
push
aas
mov
shr
mov
xor
push
mov
cmp
stos
shl
lret
bound
lret
jp
push
mov
xor
mov
or
cmp
dec
out
dec
push
xchg
lret
add
pop
adc
cmp
shlb
in
adc
adc
pop
lahf
lock
cmp
add
mov
out
push
fcmovu
xchg
repz
lock
pop
loop
xchg
mov
pop
mov
xor
lret
mov
lret
lret
aad
and
lods
lret
int3
sub
in
jae
ret
mov
add
out
push
loopne
cld
mov
fnsave
insb
xchg
fmulp
mov
cwtl
mov
mov
dec
xchg
fndisi(8087
lret
imul
and
mov
pop
fldenv
ror
sbb
and
inc
imul
out
cmp
in
mov
je
cs
fsubr
pop
inc
repnz
mov
pop
in
shll
xor
cli
fnstcw
mov
not
mov
lret
jo
lret
sbb
push
mov
lret
fidivl
fcmove
mov
jae
sub
lret
sahf
loope
fcmove
shrl
pop
xchg
sbb
push
xchg
xor
push
mov
hlt
gs
mov
cmc
mov
push
add
sqrtps
lret
or
mov
jp
adc
lret
and
xchg
sti
xchg
imul
mov
fstps
jmp
fldenv
xor
add
das
push
adc
cmp
lret
fisubs
icebp
push
cs
ds
xchg
pop
cmp
into
mov
std
cmp
inc
aas
dec
addr16
nop
dec
lret
dec
es
mov
or
test
fs
pop
iret
rorl
cltd
sub
or
dec
mov
push
or
mov
mov
rcrb
xor
inc
in
test
dec
mov
lods
xor
lret
movsb
idivl
rol
lret
jle
fimull
sub
jb
gs
mov
rcrb
cmp
std
xchg
sbb
inc
and
lret
dec
imul
cmp
cltd
jbe
pop
mov
or
pop
shl
cmpsb
lret
jl,pt
nop
stc
cmp
inc
push
loop
add
sub
fisubl
mov
pop
sbb
lea
lret
out
inc
int
test
sbb
lret
mov
xchg
popa
cltd
lret
or
rcl
fimull
leave
sbb
fidivs
popf
xchg
mov
pop
lods
sarl
or
lds
imul
aaa
and
pop
cli
das
pushf
mov
ja
aam
push
xchg
dec
andl
lret
outsl
add
psubsb
lret
cld
std
pop
jae
push
stos
cmc
rorl
aad
mov
lret
mov
cli
mov
repz
sub
fimull
lahf
cmp
sbb
dec
inc
out
dec
jmp
xchg
shlb
rcl
xchg
mov
insl
or
lret
andb
lret
xor
fcomps
sub
add
shrl
icebp
dec
lret
mov
cmp
jmp
insb
popa
inc
mov
jns
mov
insl
lret
fldcw
pop
xlat
pushl
xchg
xor
aad
popa
jge
lea
inc
clc
imul
jmp
jb
xchg
mov
sbb
sbbl
xlat
icebp
pop
inc
push
fldcw
ficompl
mov
sub
push
xchg
jmp
ret
inc
rcr
stos
ficoml
jnp
imul
out
gs
sbb
cmp
leave
jbe
ret
pop
lret
sub
and
pushf
inc
lret
rol
faddl
dec
aaa
mov
test
mov
test
add
adc
sub
mov
out
pop
dec
lret
ss
mov
nop
lret
notl
shll
mov
pop
and
lret
enter
mov
add
push
xchg
sub
dec
mov
jge
lock
and
lret
movl
mov
jns
fcmovne
inc
jge
shrl
movsb
adc
lods
push
sub
inc
shlb
fnstsw
xchg
loope
popf
es
int3
test
fcompl
dec
js
push
sbb
sbb
jno
pop
push
insb
es
rorb
or
gs
add
fcom
andl
mov
lahf
dec
mov
sbb
sarl
jmp
sbbb
pop
fiaddl
imul
shrl
xchg
cmc
cmp
mov
push
out
ficompl
cmp
add
or
out
sar
mov
scas
xor
sub
sbb
rol
jo
out
mov
add
sbb
movsl
int
lret
lods
and
pushf
sti
lretw
lahf
enter
inc
lret
xchg
clc
shlb
out
xlat
cmc
and
lock
loope
adc
paddw
aad
nop
add
lret
hlt
mov
bound
cmp
pushf
lret
jmp
sti
cmp
mov
lret
mov
icebp
mov
rolb
lret
nop
xlat
jmp
daa
into
lret
fsubrs
fisubl
and
lret
mov
ljmp
call
jbe
push
aas
aaa
jnp
jmp
cmp
pop
pop
lret
in
shl
lret
and
lret
mov
inc
test
push
decb
icebp
adc
imul
hlt
cmp
push
sbb
push
jmp
fucomip
and
lds
cli
cli
add
ja
add
push
mov
push
ljmp
out
mov
jbe
adc
sub
jns
xor
pusha
cmp
lret
mov
bound
ds
das
sarb
lret
mov
fcoms
jbe
xchg
push
int3
popf
bound
sub
sub
stos
lret
xchg
mov
push
mov
test
push
push
lret
in
les
inc
fldt
ljmp
lods
dec
lret
repz
xlat
or
aam
or
mov
movsl
daa
pop
int3
js
inc
mov
test
leave
mov
fsubl
mov
jnp
fiadds
jg
inc
or
adc
jns
pop
cmp
mov
rcrb
inc
in
fldenv
xor
cmp
in
cli
xor
test
test
push
sar
popf
loopne
lret
lcall
jae
mov
mov
sbb
sbbb
jbe
out
rcrl
jge
insb
lret
mov
lret
inc
fs
jmp
call
lret
icebp
lods
testl
jbe
int3
jno
adc
add
cs
or
into
fldt
or
jae
lret
mov
scas
cld
push
jo
outsl
sub
push
cmp
pop
mov
mov
jmp
fidivl
cltd
mov
scas
lret
and
inc
mov
and
sbb
adc
lret
cld
cmp
int3
sahf
mov
mov
mov
insl
lret
mov
xchg
mov
in
add
xor
ljmp
fimuls
xlat
imul
or
adc
repz
loopne
lods
addr16
cmp
add
mov
cmp
xchg
fdivs
add
cmp
jno
cmp
imul
divb
scas
xlat
push
mov
or
fcmovbe
leave
outsl
shl
test
mov
lret
lods
adc
lret
bound
lret
xchg
imul
add
gs
lret
bound
lret
adc
sbb
mov
sub
and
sahf
cmp
pop
jbe
pushf
out
mov
stos
cmp
aad
mov
roll
lret
and
pop
out
mov
or
or
dec
fs
in
stos
sbb
push
dec
pop
fbld
jmp
jp
cmc
jae
inc
cld
adc
cmpb
jge
dec
rcrl
add
xchg
push
push
jbe
adc
adc
fdivrl
mov
cmpsl
cltd
mov
shl
jae
push
mov
iret
lret
xor
int3
in
pop
popf
mov
sub
icebp
inc
loopne
lret
lods
scas
mov
sub
jmp
leave
stos
dec
lea
int3
js
fcmovbe
push
lret
loope
xchg
out
and
lret
cmp
mov
scas
ficompl
sbb
mov
pop
imul
xchg
dec
mov
sub
xor
aas
rorb
leave
cli
push
add
cs
dec
js
lret
pop
lods
mov
dec
lret
hlt
fidivl
cmpb
xchg
gs
mov
ret
mov
cmc
cli
adc
push
cli
insl
neg
inc
je
inc
js
lea
push
fwait
loope
pop
xlat
jbe
outsl
pop
lret
mov
daa
add
fisubrl
adc
inc
jecxz
push
add
lret
inc
nop
or
imul
sbb
push
ret
xchg
and
jbe
out
gs
pop
mov
dec
lret
push
aad
std
lcall
adc
mov
fs
jb
mov
mov
lret
add
mov
lret
rorb
inc
test
stos
dec
imul
movsl
push
int3
lcall
fisttpl
jl
mov
lret
fldl2e
test
repz
or
mov
ret
jmp
lcall
fadds
cmp
ds
mov
loopne
lret
test
lods
adc
mov
shlb
sbb
pop
jg
mov
cmp
aaa
stos
movsb
inc
arpl
and
lret
gs
push
incb
lretw
out
mov
ret
cmp
push
jmp
fwait
push
arpl
xchg
outsb
and
bound
fwait
stos
lret
in
mov
scas
xchg
pop
and
push
outsl
xchg
sarb
lods
int
lcall
inc
mov
fisubl
test
in
xchg
adc
daa
mov
jmp
pop
lock
leave
lret
sti
cmp
mov
mov
outsl
lret
lcall
push
lret
mov
pop
fsubp
cmpsb
lret
in
mov
fwait
ds
mov
scas
lret
aad
cli
pop
je
jo
cwtl
rcll
or
fwait
nop
pop
and
cmp
outsl
push
rolb
or
mov
adc
das
and
pop
xlat
out
ficoms
cmc
xchg
cld
movsl
lret
or
popf
jge
xchg
lret
inc
lds
rcrl
lret
cltd
movsl
fnsave
ja
lret
xor
nop
addr16
cmpsb
mov
dec
or
int
mov
cmc
jns
mov
xor
arpl
leave
xor
stos
rol
xchg
addr16
jl
and
pop
bound
mov
lcall
je
fidivrl
test
mov
jl
fcomps
rcl
add
sbb
push
push
leave
cli
lds
inc
pop
mov
mov
lret
adc
or
and
cli
lret
outsb
outsl
enter
or
mov
pop
push
test
aas
dec
or
inc
fsubr
sub
push
jmp
fbld
add
or
xor
lods
shrb
mov
into
sub
mov
sub
in
xor
addl
push
test
jne
cmp
xchg
cmp
jecxz
rcrb
inc
add
jl
out
pop
loop
popf
cltd
lcall
add
daa
outsl
lret
mov
xor
or
cltd
lret
mov
xchg
lret
mov
push
lret
sbb
test
stc
dec
pop
or
fcmove
fisttpl
dec
inc
shll
mov
sbb
mov
fldcw
out
mov
loopne
movsl
into
shrb
sbb
jp
cmc
add
push
push
mov
fdivrs
das
scas
inc
mov
sbb
mov
lcall
adc
mov
inc
outsl
lret
push
xlat
inc
or
and
cmpsl
pop
lret
es
ljmp
stc
sub
adc
mov
xor
arpl
fisubl
out
into
shl
cmp
jge
out
lret
push
hlt
sbb
jg
dec
push
stc
cmpl
mov
xchg
jne
lret
push
and
sbb
xor
lret
jecxz
xchg
sbb
add
xor
xchg
xor
scas
scas
jno
out
pop
shll
test
cli
mov
or
sbb
xchg
nop
inc
lret
mov
in
pusha
fmulp
data16
mov
pop
shrb
xor
push
inc
stos
jle
pop
inc
cmp
sub
fldcw
mov
cmp
rorb
xchg
shrb
dec
and
ljmp
rorb
mov
loopne
and
arpl
sbb
cld
sub
jns
fwait
xchg
iret
pop
popf
ficoml
arpl
push
mov
in
adcl
movsl
aaa
mov
loopne
aam
imul
xor
fdivs
xchg
push
push
xchg
adc
push
cmp
js
stos
out
repnz
sbb
sbb
jge
mov
mov
jecxz
or
lret
inc
jmp
lret
gs
xor
mov
lret
pop
mov
mov
push
xchg
add
mov
dec
sbb
imul
mov
cmp
adc
add
stos
jne
mov
mov
adc
mov
lds
xor
ror
mov
inc
push
enter
lret
scas
popf
mull
ret
cltd
lea
testb
dec
lods
pop
icebp
and
rorb
push
and
lret
fiaddl
scas
xor
in
sbb
je
ret
arpl
cs
frstor
rcl
lret
jmp
dec
mov
cmp
call
mov
in
adc
sbb
dec
hlt
rolb
lret
mov
lret
dec
sub
lret
roll
lret
dec
sub
mov
fwait
ror
mov
push
andb
mov
pop
test
dec
lret
mov
lods
mov
mov
or
outsb
jg
adcl
icebp
int
jp
fwait
cli
jo
aad
jge
bound
sbb
cli
lret
cwtl
push
pop
leave
adc
lret
cltd
sbbl
negb
jo
cwtl
cmpsb
dec
lock
inc
sub
or
clc
xchg
rcll
or
daa
lret
mov
bound
and
mov
pop
notb
jmp
jg
sbb
repnz
scas
arpl
cltd
mov
xchg
pop
ja
sub
and
dec
jo
ds
xchg
lret
push
fimull
imul
ljmp
mov
mov
icebp
mov
popf
shrb
movsb
pusha
inc
sarb
xlat
popa
push
push
lock
and
dec
ss
jecxz
adc
mov
sub
xchg
ljmp
cmp
push
jp
sbb
cld
and
mov
shlb
cmp
fs
pop
stos
mulb
pop
rolb
add
mov
out
or
outsb
add
push
or
xchg
sarb
aas
jae
mov
pop
mov
add
outsb
out
or
lret
gs
lahf
in
push
clc
lret
pop
cmp
sbb
push
lcall
lods
lret
or
adc
fdivs
in
mov
inc
mov
pop
jbe
lret
rcr
daa
jmp
int
cmp
imul
fimull
xchg
int
mov
fsubrs
jno
and
fidivrl
pop
clc
popa
lret
inc
test
mov
lret
jle
inc
push
and
pop
jb
rcrb
imul
sahf
sbbb
inc
loopne
and
jge
xor
or
test
into
hlt
aas
mov
cmp
out
addl
xchg
jb
cli
lods
mov
or
push
push
in
lret
je
xchg
lcall
mov
std
pop
and
xor
sahf
fidivrs
fucomi
xchg
xor
dec
lret
jno
mov
xor
push
add
mov
push
dec
ret
addr16
dec
mov
push
repnz
insl
inc
jns
push
lret
mov
mov
inc
dec
sbb
push
lds
outsb
mov
push
stc
dec
cmp
stos
ds
xlat
and
cmp
fs
pop
fldcw
aas
add
cwtl
mov
mov
ds
cltd
lret
mov
fisubrs
xor
xchg
bound
pop
xor
cmc
push
xchg
pop
xor
mov
lods
popa
mov
pop
sbb
jne
mov
sub
lret
mov
es
lret
add
mov
lret
out
and
mov
add
dec
xchg
sub
call
xchg
icebp
popa
stc
test
xchg
shlb
mov
in
insl
jae
add
data16
loopne
sbb
dec
dec
imul
jbe
pop
fdivs
xchg
leave
push
lret
ds
test
out
mov
insl
jle
mov
ss
add
adcb
jne
dec
add
xchg
push
cli
in
pushf
xchg
sbb
sbb
sub
daa
icebp
les
cmp
loopne
fcomp
and
stc
xor
sub
lret
out
dec
cmpsl
inc
imul
sub
add
lret
inc
xor
lret
xor
js
cld
aad
fmuls
sbb
lss
cli
ljmp
fadds
cwtl
push
adc
into
ljmp
xor
sbb
sbb
andb
jbe
cmp
inc
loope
jle
int3
into
lock
mov
test
pusha
ficompl
mov
pop
mov
lret
sbb
or
and
mov
lret
aam
outsl
adc
push
sub
xor
jp
xor
cmp
add
xchg
and
lods
xor
xor
lret
adc
js
insl
cld
lret
loopne
pop
mov
and
popaw
orb
push
fisubs
lret
out
loop
sbb
cmpsb
push
in
push
popf
push
popa
rcrb
arpl
pop
outsb
lret
lods
lahf
or
mov
cmpsl
lcall
pop
dec
push
push
popf
push
jo
fadd
sbb
add
aad
adc
mov
loope
lret
jno
sbbl
fnstsw
lret
add
jb
mov
jbe
test
lret
push
sahf
addl
cmpl
cmpsb
jmp
fistl
repz
cs
and
sbb
or
leave
cltd
ror
cmp
push
ds
xchg
scas
popf
push
or
dec
or
and
mov
insb
fld
push
sbb
xchg
push
or
xlat
xchg
mov
sbb
xchg
or
and
mov
in
xchg
sbb
mov
imul
add
xlat
cli
or
xchg
cmc
adc
lret
in
mov
addl
xor
outsl
addr16
sbb
lret
pop
dec
cmp
mov
lret
ret
bound
and
pop
adc
fs
stos
xor
fwait
lret
ror
outsl
cmpsb
scas
les
lret
add
cmpsl
or
xchg
push
shl
sbb
lret
leave
mov
mov
lret
cld
fldenv
out
mov
arpl
inc
xchg
and
jg
test
lret
lock
xlat
jmp
adc
test
lret
aad
repz
sub
jns
lret
sub
pop
mov
shl
or
dec
arpl
add
outsb
icebp
imul
lock
mov
inc
into
movsb
cmpsb
test
jns
popf
stos
data16
fmul
nop
ss
mov
xchg
sbb
xor
push
into
jp
mov
sub
lret
rorl
cmc
xchg
cmpsb
das
jno
lret
jnp
adc
jmp
jo
adc
into
xor
pop
rorl
stc
outsl
lret
icebp
sub
xorps
lret
fisubrl
adc
pushf
sub
movsl
lret
cs
sbb
inc
xor
lahf
call
movsb
cmp
ret
in
and
sbb
xor
mov
mov
lret
push
jae
outsl
shlb
and
andb
repz
lret
cmp
or
adc
mov
lcall
test
lret
outsb
sbb
xchg
add
jmp
mov
icebp
pop
dec
jbe
dec
clc
adc
out
pop
adc
and
aaa
fcmovne
js
mov
mov
int
je
stc
jmp
aam
cmpsl
xchg
inc
dec
inc
sub
filds
movsb
mov
cltd
add
sub
pop
fldl
bound
lret
aad
stc
cmc
pushf
xchg
rclb
and
in
adc
and
repz
lock
subl
pop
lds
into
jecxz
xor
and
in
lret
cltd
mov
mov
xchg
lahf
sbbb
adc
mov
push
xchg
movsb
in
push
add
shr
lret
mov
mov
jno
inc
mov
lret
push
inc
call
xor
cmp
cmp
add
and
into
ljmp
in
rol
lret
push
ficoml
rclb
outsb
xchg
lret
hlt
imul
pop
ret
lret
adc
jge
xchg
lret
push
jb
adcl
clc
dec
jg
jl
sbb
lret
sub
into
xor
dec
push
cmp
pop
lret
jge
fisubl
lret
sbb
lret
xchg
jns
lret
mov
push
adc
jle
out
add
stc
push
xchg
rcl
mov
shll
movsb
cmpsl
pushf
mov
iret
std
arpl
mov
xchg
popa
jno
jle
es
sbb
dec
push
fwait
or
hlt
aam
test
pop
popa
fdivp
idivl
sarl
lret
mov
xor
in
dec
rcr
popf
push
shrb
mov
pop
lret
mov
std
mov
sbb
add
pop
inc
pop
lret
fisubl
fimull
pusha
cwtd
mov
icebp
push
iret
inc
aad
dec
ficoml
cmp
dec
test
das
and
mov
mov
xchg
shrl
pop
js
xlat
lret
push
sub
pop
jmp
push
jge
neg
repnz
loope
ja
out
sbb
mov
sub
lcall
dec
sbb
daa
push
ficomps
fcmovu
mov
xchg
pop
leave
sbb
lods
push
pop
and
sbb
lret
jb
and
and
ret
push
and
lret
cmp
fucomp
pop
mov
add
jmp
add
std
mov
pop
cmpsb
lret
pop
mov
lret
clc
stos
scas
push
rcrb
lret
rcrb
or
pop
movsl
addr16
jl
pop
aam
pop
xor
mov
lds
ret
xchg
xchg
xor
mov
hlt
shlb
test
movsl
sbb
cmp
pop
mov
xlat
arpl
xchg
lret
mov
mov
lret
jno
or
xor
fwait
push
mov
mov
cmp
call
cmpsb
lret
xor
xchg
jno
out
nop
mov
adc
repz
lret
mov
cmp
mov
adc
push
inc
aad
andl
ja
fpatan
push
cli
addr16
sahf
shrb
xchg
out
stc
mov
dec
or
out
into
xor
jbe
mov
push
sbb
jp
cwtl
mov
cmp
mov
xor
incl
ss
jle
dec
adc
bnd
sti
out
push
test
lret
jnp
stos
inc
je
adc
les
jg
int3
sbb
push
fcoms
movhps
iret
mov
xchg
push
lret
jbe
repz
add
call
jle
dec
cld
mulb
iret
add
or
mov
fwait
cmp
adc
xchg
sbb
enter
rcl
fwait
jb
cwtl
sbb
pop
into
cltd
inc
and
jo
jmp
dec
fcmovne
inc
push
mov
lret
mov
pop
sub
orl
shr
jnp
xchg
add
xchg
inc
mov
jae
lret
lcall
dec
lret
cmp
lock
std
cmp
cmc
mov
adc
lea
jp
mov
sbb
into
or
bound
lret
adc
add
dec
mov
jp
xchg
pop
push
lret
cmp
mov
out
sub
pop
loope
scas
aaa
daa
arpl
add
lret
outsl
test
je
lret
repz
push
mov
lret
lret
push
rcrl
cmp
daa
int3
add
adcl
dec
rcl
pushf
xchg
mov
les
je
dec
sbb
jne
jae
push
xor
inc
sbb
add
add
pop
enter
push
xor
xor
inc
mov
leave
fisubrl
jmp
cli
pop
andl
icebp
mov
test
sbb
mov
sbb
lret
cmp
shrb
xor
sarb
roll
push
out
out
jae
js
mov
dec
das
lret
push
enter
and
sbb
ljmp
popa
inc
repnz
sbb
in
add
int3
mov
fidivl
inc
cwtl
sbb
imul
mov
pop
mov
push
lods
aas
mov
cli
inc
scas
sub
hlt
push
push
test
cmp
lret
adc
mov
push
lea
int3
cmp
dec
lret
stos
fdiv
jmp
bswap
fnstenv
cmp
roll
fwait
and
push
lret
sub
movsb
push
sub
mov
xchg
scas
push
lret
les
lret
cmpsl
cmp
sub
lret
test
lret
push
jge
hlt
or
int3
sahf
lahf
outsl
cmp
sub
pushf
sbb
add
lret
lock
outsb
jmp
sub
popf
inc
adc
lret
sbb
sub
fisubl
jo
adc
and
lret
adc
cmpsb
mov
test
inc
cwtl
out
lret
lcall
mov
addr16
pop
sbb
sarb
push
inc
mov
dec
lret
out
icebp
mov
and
fs
xchg
cmp
sar
das
jle
mov
js
cmp
ss
mov
test
es
imul
fcmovbe
mov
leave
cli
mov
inc
cmpsl
adcb
xchg
xchg
cmp
lds
into
jno
mov
inc
push
lret
pusha
and
lret
jae
repnz
adc
push
or
push
lret
mov
push
lret
ret
dec
xchg
adc
add
fmuls
push
jno
ror
idivb
in
in
dec
inc
inc
lods
int
add
nop
or
push
repz
push
jle
ja
inc
jno
sti
push
ljmp
push
pop
mov
adc
cmp
data16
pop
shr
iret
in
loope
mov
pop
push
mov
leave
fwait
inc
imul
test
aam
loop
jnp
sahf
cmp
mov
mov
xor
xchg
push
pop
lret
int3
jg
incl
in
fildl
and
push
or
add
iret
cwtl
or
cmp
fxch
mov
push
and
cmc
dec
lret
js
sbb
mov
lret
cmp
or
cmp
mov
fidivrs
ljmp
mov
and
les
in
sub
mov
nop
fnsave
in
sbb
mov
pop
mov
lods
cmp
push
xlat
ss
sahf
mov
or
lret
nop
xor
dec
pop
aam
inc
fmull
push
adc
stos
outsb
push
dec
je
bound
mov
sarl
stc
jno
cmc
mov
cmp
sti
fs
sbb
out
fldenv
ss
out
cld
lret
lret
aaa
mov
lret
adc
out
lret
in
cltd
fildll
cmp
rcrl
int3
lret
mov
loop
adc
imul
and
pop
icebp
sub
pop
cld
sub
iret
rcr
inc
out
pop
scas
lret
push
xorb
cld
movsb
or
aam
scas
lret
js
stos
cli
mov
mov
jae
aad
lret
adc
adc
lcall
subl
jmp
call
mov
inc
push
out
push
into
lret
pop
cwtl
and
repnz
jns
push
mov
cld
mov
mov
insl
idivl
lret
mov
mov
aas
mov
outsl
add
mov
imul
cmp
pop
lret
cltd
mov
mov
ror
scas
hlt
arpl
shrl
dec
aas
and
lcall
fucom
add
lret
add
fwait
in
sub
sbb
jl
je
pop
sbbl
jmp
xchg
lret
xchg
cltd
lret
inc
shr
into
stc
jl
fmul
cld
xor
mov
test
push
sbb
call
shlb
push
cmp
cmc
or
lret
add
lret
ss
icebp
mov
mov
inc
adc
cmp
xchg
test
mov
int
iret
dec
xchg
xchg
insb
mov
pop
fs
orb
jb
push
sub
lds
fdivrl
dec
jmp
xlat
fcomps
cmp
push
xchg
mov
pusha
mov
inc
cmp
ret
fistl
mov
into
jge
pop
stos
les
into
nop
popa
shll
mov
dec
jecxz
leave
fsubrs
mov
jae
shlb
cmp
adc
lods
mov
inc
xchg
cmp
sbb
mov
lods
movsl
test
sbb
mov
jns
shrl
hlt
push
jnp
in
push
pop
mov
xlat
aaa
stos
test
or
add
fwait
mov
out
sub
xor
loop
sti
mov
test
or
stos
ret
mov
or
mov
mov
xchg
mov
pop
and
clc
sti
mov
lock
rcl
push
inc
jno
push
lret
mov
iret
lret
je
mov
mov
mov
cltd
lret
in
sbb
lods
pop
ss
or
pop
movsb
in
jmp
lret
popf
jp
pop
dec
jnp
jl
sub
inc
sbb
xor
lock
stos
lret
cmp
add
lret
jl
lds
daa
pop
inc
sub
loopne
lret
mov
es
lret
rorl
mov
mov
shlb
fnstenv
in
pop
lret
into
scas
loope
sbb
sbb
add
out
add
ret
or
ret
mov
leave
shll
cmp
pop
aam
mov
lret
lods
cli
mov
pop
jecxz
fimuls
inc
stc
movsl
rcrl
std
mov
ficompl
loope
cli
cli
loopne
rcrb
lods
xchg
std
ljmp
jmp
cli
mov
sub
cmp
out
loopne
int
pushf
push
or
xlat
orb
ret
push
pop
lcall
sub
orl
fdivl
aad
into
jbe
xchg
xchg
push
mov
mov
ret
rolb
pop
stc
pushl
lret
adc
lret
bound
loope
je
fs
iret
daa
inc
inc
fwait
add
cmp
cmpl
mov
lret
pop
xchg
mov
aas
push
lret
dec
cld
jle
inc
subl
jne
lret
sub
pop
push
adc
into
pop
lock
pop
push
lret
rcrb
ljmp
rcr
lock
lret
addr16
or
and
stos
data16
and
mov
fmul
cmp
movsb
or
sbb
mov
lret
jmp
fs
or
cmp
lret
into
mov
leave
inc
hlt
pop
jl
ret
sbb
stos
push
mov
lret
notb
sub
jb
inc
lret
aaa
pusha
sub
xchg
cmp
pop
sahf
xor
shrb
mov
addl
push
sar
xor
push
lret
stos
call
pop
cmp
lret
jo
pop
fs
xchg
mov
call
mov
int3
inc
orl
jecxz
pop
fsubl
lret
add
inc
mov
movsb
fimull
pop
popa
xchg
sub
dec
inc
rorl
lret
aaa
loopne
sub
cld
mov
mov
and
out
lret
push
pop
xchg
dec
xor
out
in
mov
mov
test
jecxz
fstpl
roll
lret
bound
adc
adc
push
dec
fbld
stos
movsl
subb
or
inc
lret
cmp
mov
ss
mov
sbb
int
cmp
add
lock
jle
mov
jmp
inc
mov
xchg
xlat
lret
mov
dec
pop
sbb
lods
fisubrl
push
lret
or
bound
aas
ret
lret
pop
jno
push
dec
add
std
out
out
inc
xor
cmp
mov
adc
es
push
iret
lret
push
xchg
adc
test
add
jne
pop
outsl
into
icebp
mov
pop
in
popf
lret
dec
lcall
push
or
loope
inc
sbb
push
cs
fadd
xor
and
mov
fstpl
jns
lret
lods
lcall
shll
jp
sbb
cmpsb
hlt
and
lahf
xchg
out
cmc
mov
je
roll
ret
icebp
mov
adc
fimuls
pusha
fidivl
add
fimull
push
cld
movsb
mov
lret
js
shrb
xor
scas
divb
popf
sub
subb
or
jle
cli
jmp
fidivrl
jo
push
outsl
int
outsb
cli
sbb
xor
push
push
sbb
ret
imul
rcll
test
sub
inc
lret
in
cs
repnz
in
int3
lret
or
pushf
lret
and
fcmovnu
in
out
xor
lret
jb
stos
pop
xor
lret
sub
jl
cld
add
pop
pop
push
push
mov
or
mov
shl
stos
jo
cmp
push
mov
dec
imul
xchg
mov
inc
lret
pop
jns
sub
sbb
int3
fs
adc
lret
and
sub
or
lcall
lock
rcl
cmpsb
adc
in
filds
pop
rcl
sti
lahf
insb
lret
mov
sahf
cmp
mov
xor
lret
call
mov
pop
leave
dec
movsl
or
cmp
mov
push
push
mov
ret
xchg
sbb
inc
cmp
xor
add
dec
lret
xchg
js
xchg
mov
and
negb
jmp
scas
dec
cmp
mov
adc
mov
rcr
add
xor
ds
cltd
xchg
inc
mov
dec
mov
test
pushf
push
mov
or
scas
jecxz
sbb
inc
mov
push
cli
or
fs
mov
jge
sbb
or
push
sub
out
jmp
xchg
xchg
cmp
jo
insl
mov
cmp
iret
lret
ljmp
lret
insb
cmp
and
jb
stos
pop
loop
cmp
fmuls
mov
sub
mov
fxch
push
xlat
push
jno
test
sysenter
test
and
lret
adc
aam
xor
faddp
or
cmp
sub
lcall
jg
loop
adc
sti
jb
push
pop
daa
lret
cltd
inc
cmpsl
push
aad
stos
mov
int3
push
mov
lret
rorb
inc
mov
in
rorb
lret
jne
imul
popf
mov
lahf
lgs
mov
lret
sbb
and
push
cmp
add
cmp
lret
add
push
insl
mov
push
push
lret
lret
inc
in
mov
xlat
lret
movsl
outsb
pop
adc
adc
nop
add
dec
pop
lahf
dec
cld
jge
add
lret
call
ljmp
sbb
xchg
popa
cmp
cld
xor
test
pop
sub
hlt
or
aas
lret
mov
xchg
mov
adc
push
lahf
out
mov
aad
jns
mov
pop
inc
jo
arpl
mov
shlb
xchg
mov
cmp
lock
fimull
cmp
cmpsb
dec
cwtl
xchg
lret
pop
jp
sub
lret
xor
gs
or
pop
iret
lock
flds
js
dec
jp
inc
adc
jl
xchg
bound
cmpsb
lret
cmp
pop
mov
bswap
cltd
aas
inc
lds
push
xor
out
lret
dec
mov
fmulp
or
xchg
mov
and
stos
cmpb
sub
mov
mov
repz
cmp
and
jl
mov
lahf
stos
mov
into
adc
lret
pop
xchg
aaa
fnstcw
xor
les
push
cmc
loope
mov
mov
sub
jg
sbb
test
xor
lret
lret
jne
sbb
scas
lret
jnp
lret
push
ljmp
ror
and
or
inc
out
loop
test
mov
jmp
xchg
sarb
inc
lock
pop
dec
lret
pop
add
jno
lahf
inc
xorb
repz
imul
lret
pop
test
sahf
push
imul
add
lcall
mov
mov
sbb
pop
das
jg
dec
mov
mov
fsubr
or
push
jnp
lahf
lret
sub
out
int3
pop
dec
xchg
into
cmp
les
cltd
lret
stos
insl
sbb
pusha
xchg
lret
add
lret
loope
mov
in
ret
scas
sahf
fwait
push
adc
sub
push
lds
jbe
pushf
xchg
xchg
mov
jmp
fldcw
mov
jge
repnz
push
xchg
stos
lods
mov
imul
push
lret
dec
inc
fisubrl
insb
in
add
lret
leave
pusha
rcr
rclb
lret
decl
lret
jp
out
outsl
repnz
lret
leave
mov
lret
pop
cmp
sbb
lret
clc
and
popf
cltd
adc
pop
mov
jge
jnp
sbb
add
lds
iret
push
insb
fisubl
imul
cmp
aaa
lret
xor
push
ljmp
into
test
and
test
scas
lret
lret
xor
mov
lods
adc
xor
mov
out
scas
repz
outsl
aas
fwait
movb
arpl
dec
ljmp
rcrb
test
jmp
das
lds
outsb
test
lret
into
push
shrl
mov
out
mov
std
mov
xlat
mov
pop
in
jle
and
cli
xchg
je
pop
bound
nop
inc
sbb
andl
or
pop
fcoml
sbb
push
lock
rclb
add
lret
iret
fbstp
jmp
mov
sbb
pop
mov
jns
rep
mov
mov
cmp
sarl
jb
sarb
adc
adc
stos
xchg
add
pop
lcall
cmc
rclb
jae
loopne
jo
fisubrs
mov
cmp
arpl
jne,pt
dec
int
cmp
lret
jo
mov
sbb
rcrl
ficompl
push
xor
fsubs
cli
divl
aam
mov
sbb
jo
mov
adc
lret
lods
outsb
fs
xor
and
push
push
jae
sub
cli
sub
rorb
das
rcr
mov
aas
dec
ds
cli
out
xor
jle
test
xor
pushf
add
cltd
lods
int
ljmp
rorl
rorl
lret
sbb
imul
dec
icebp
enter
repz
js
pop
jecxz
lret
xchg
lea
sarb
lret
inc
out
mov
pushf
lods
pop
pop
lret
cmp
fnstenv
mov
fcomps
inc
sbb
lret
and
inc
jge
das
push
or
jmp
in
fisttps
sub
adc
lcallw
pop
clc
mov
lret
ja
popa
std
mov
out
add
xlat
jecxz
hlt
lret
sti
pushf
loopne
cmp
push
enter
sbb
or
dec
sub
fidivrl
adc
or
cmp
push
adc
rolb
lret
mov
test
lret
jnp
cmp
testb
inc
stos
xchg
jle
adc
pop
mov
cmp
xchg
nop
push
loop
adc
and
shll
pop
push
inc
cld
sub
push
mov
pop
dec
add
push
fidivrs
and
lret
pop
add
xor
rcrl
ret
xchg
sti
sarb
xor
pmovmskb
cmc
inc
hlt
ja
mov
cmp
lock
lods
lret
aaa
mov
xchg
adc
cmp
cmc
fdivrs
das
lret
lret
repnz
stc
push
insb
lret
sbb
pop
cmp
jnp
test
ds
lret
icebp
cmc
fmuls
aam
xorl
adc
cmp
add
xor
in
and
cmpsl
push
mov
lret
rcrl
ja
cli
les
mov
ljmp
nop
mov
leave
cmpsl
or
inc
or
and
xlat
xor
mov
xchg
addr16
repnz
sub
jmp
mov
push
adc
icebp
or
cli
add
ja
and
cmp
shrb
andl
iret
out
sbb
lret
xor
daa
int3
xchg
lret
mov
cmpb
lret
imul
das
lret
adc
cmpsl
dec
pop
dec
xchg
fmul
stos
stos
inc
pop
loope
xor
sbb
test
push
fiaddl
rcrb
cmc
lret
push
rcrl
cmp
lods
mov
cmp
jnp
mov
mov
stos
mov
dec
jge
rcll
pusha
and
cmp
dec
bnd
dec
push
test
lret
test
out
hlt
xor
cmp
call
imul
lret
stos
inc
and
insb
mov
fcoms
cli
sbbb
dec
push
test
lret
push
jp
es
lret
adc
mov
push
rorb
std
mov
popa
cli
imul
pop
ficoml
aas
add
push
daa
mov
push
rolb
dec
and
lret
cmp
push
sbb
into
xchg
cld
xorb
mov
mull
pop
jnp
jp
lret
mov
and
scas
lret
ss
cwtl
cmp
mov
inc
stos
inc
xchg
pop
shrl
fcomps
and
shlb
pop
scas
stos
cmp
ret
sbb
lret
jnp
lret
xor
dec
ljmp
fdivs
mov
xchg
sbb
jl
dec
lret
pop
push
push
jne
fimuls
xchg
lea
xlat
pop
mov
cmp
cld
clc
xor
into
cmc
jnp
push
cmp
sub
adcl
aad
add
push
cld
lret
cmp
mov
sbbb
and
lret
addr16
pop
mov
dec
jnp
add
jg
inc
xchg
dec
ljmp
xchg
lret
mov
test
dec
pop
pop
push
ja
lret
push
mov
shlb
cmp
cmp
enter
js
push
xor
sbb
add
out
lahf
mov
pusha
lret
insb
adc
aad
lret
hlt
jmp
mov
sahf
in
ret
aam
mov
pop
sti
lret
ret
mov
mov
fidivrl
fnsave
push
push
mov
mov
sahf
xchg
test
into
mov
add
dec
or
call
mov
mov
stos
enter
mov
out
fsubl
lods
cmc
stos
inc
and
das
push
lock
ja
mov
repz
out
jns
sub
dec
push
push
xor
roll
subb
and
lds
adc
sub
addb
lret
ljmp
idivb
ror
xchg
adc
lret
subl
sbb
into
out
mov
fmulp
or
push
mov
lret
int3
xchg
sbb
cmpsl
mov
sti
das
into
lret
popa
jo
cmp
lock
sub
lret
fs
sub
stc
add
dec
nop
jecxz
insl
or
lret
xchg
jmp
andl
jbe
into
push
cmpsl
lret
js
mov
pop
fnstsw
push
aad
mov
fnstcw
or
popf
add
adc
sbb
cmp
adc
jbe
lret
les
in
inc
lret
iret
leave
xor
xchg
fbstp
or
hlt
mov
or
push
mov
es
idiv
neg
popf
sub
imul
aaa
inc
je
dec
leave
and
data16
xchg
xor
int
sub
xchg
clc
sbb
sbb
dec
mov
imul
int3
outsb
sub
std
inc
mov
ss
sub
loope
pop
fisubl
pushl
cwtl
cld
insb
sub
cs
jne
xchg
les
leave
lret
push
iret
sbb
ret
ljmp
jns
lcall
push
lret
push
jae
push
mov
movsb
das
xchg
imul
lret
shrl
cli
loope
xchg
jae
int3
push
nop
dec
push
lret
xchg
lret
sbb
cli
push
pop
lods
icebp
movsb
cmp
rclb
sbb
mov
xlat
paddb
pop
test
lret
ret
jns
sbb
call
and
mov
loope
out
push
fimull
jp
inc
cltd
mov
iret
sub
add
jp
mov
and
sarl
pop
int
add
mov
je
lock
mov
inc
enter
xor
jle
add
ret
inc
push
sub
dec
jns
lret
jb
and
lret
aam
sub
test
leave
adcl
dec
sbb
jo
shrb
dec
mov
in
dec
cmp
mov
lret
add
mov
stos
ds
pop
gs
sbb
pop
cltd
or
dec
lods
push
inc
dec
cli
pop
adc
sarb
imul
inc
and
test
pop
in
imul
ret
int
gs
sub
lret
sub
jge
mov
mov
fidivrl
shl
ja
lret
mov
jg
loop
mov
xchg
ret
adc
std
add
pop
jns
lock
andl
stc
and
jl
pushf
mov
pop
outsl
in
pop
add
adc
jo
rcrb
lock
dec
lret
and
pop
lret
sub
fcmovb
cmp
add
cmp
filds
das
bound
inc
xchg
sbb
repz
fistps
fs
insb
icebp
xchg
nop
push
js
jns
mov
cld
arpl
jb
lret
jp
addr16
movsl
and
jecxz
testl
into
xlat
lods
les
fcoms
cmpl
lret
pop
mov
stos
mov
shrb
inc
adc
mov
push
js
xor
push
stos
jne
jl
mov
sarb
cmpsl
lret
xor
addr16
scas
lret
sub
and
cmp
aas
and
pop
lret
mov
fiaddl
mov
int3
adc
or
loopne
add
jne
mov
lea
pop
in
iret
jge
inc
lret
mov
sahf
cli
int
lcall
jge
pop
sbb
xchg
pop
lcall
lret
pop
add
sub
int3
xor
jnp
sti
fidivrl
repnz
jecxz
xor
loop
dec
push
pop
add
or
mov
fs
fmuls
lret
loop
mov
mov
xchg
insl
fidivl
sbb
or
sbb
push
cwtl
js
adcl
sub
in
scas
adc
or
gs
push
sbb
in
test
jge
ds
lahf
sbb
les
in
jmp
dec
pop
fnstcw
insl
in
ljmp
in
cmp
insb
lret
push
jne
clc
popa
or
jae
out
rcl
call
inc
sbb
das
sub
push
lret
adc
cmp
mov
sbb
mov
mov
or
lcall
fcom
test
out
jbe
js
sub
pop
lds
push
jae
push
lret
enter
jnp
lret
fsubrs
inc
sub
adc
movsl
lea
pop
mov
pushf
pusha
insl
xor
fisubl
je
aaa
mov
or
movsl
lds
cmc
xchg
jns
les
popa
repz
xor
aad
add
in
cli
adc
inc
sbb
jle
imul
cmp
movsl
fnstcw
jno
and
mov
call
and
insb
iret
and
mov
mov
scas
sti
sar
sbb
adcb
ret
popa
sbb
fcmove
dec
jb
sbb
imul
aaa
ljmp
js
test
pop
push
or
lret
mov
clc
lret
sub
xor
push
mov
stos
cmp
mov
pop
shll
popa
cmp
ljmp
jp
dec
pop
fstpt
es
push
out
xchg
andb
xchg
mov
fwait
sub
add
sbb
jl
sbb
int3
in
or
js
outsl
push
pusha
adc
popf
lret
xchg
mov
inc
sub
fs
push
gs
loope
lret
add
int
pop
fcmovbe
rclb
cli
mov
je
iret
jp
lret
sub
inc
test
pop
imul
adc
ljmp
cmp
jmp
pop
xchg
sbb
stos
push
hlt
gs
mov
lods
arpl
daa
push
aas
sbb
fidivrl
out
adc
dec
dec
lock
neg
aam
in
dec
mov
repz
inc
mov
stc
aas
fiadds
fmul
sbb
lret
mov
xor
stos
jmp
push
pop
fidivrl
ss
pop
ror
lods
xor
sti
push
mov
dec
push
test
cli
mov
divl
jmp
ret
or
or
cwtl
andl
mov
icebp
lret
dec
or
pushf
mov
iret
lret
insb
das
dec
lret
mov
jno
fldt
lret
sub
xor
sbb
pop
jnp
cmpsb
pop
ljmp
xchg
int
ficoml
mov
cmp
inc
iret
sbb
or
lcall
dec
lret
xchg
mov
lret
cmp
lret
xchg
es
clc
lret
outsl
sbb
mov
mov
dec
jecxz
js
data16
ror
sub
sti
push
lea
push
pop
pop
pop
sahf
arpl
mov
mov
nop
xchg
pop
cltd
or
sub
xor
rcrl
jo
sub
sarl
lock
jge
pop
in
lahf
xchg
xchg
aam
push
add
jbe
out
rol
dec
cmpsb
in
or
xchg
popa
rcrb
and
scas
lret
das
jnp
les
js
dec
cmp
rcrb
fsubrl
mov
push
adc
cmc
mov
insl
dec
mov
mov
stos
movsl
sarb
lret
sub
outsl
mov
pop
stos
icebp
mov
fwait
push
push
clc
fs
add
iret
lret
dec
mov
cmp
xor
sbb
sub
mov
cmpb
lret
pop
or
lods
call
add
or
out
adc
mov
push
mov
icebp
dec
ss
adc
imul
lret
add
pop
enter
push
mov
dec
xor
adc
repnz
push
add
inc
rcl
cld
in
ljmp
push
mov
lret
and
push
mov
clc
lret
pop
daa
pop
mov
jge
push
mov
cltd
mov
jp
xlat
push
and
lret
imull
int3
sbb
mov
in
push
mov
or
lret
xchg
mov
lret
mov
cs
cmp
push
popa
repnz
inc
dec
imul
addr16
popf
xor
jae
leave
test
jns
gs
les
std
aam
dec
insl
inc
fcmovu
sbb
xchg
ljmp
xchg
repnz
loope
mov
popf
loopne
fcomps
test
sti
inc
xchg
xchg
push
xchg
sahf
lret
ja
push
xor
cli
fiaddl
add
cmp
imul
flds
lret
mov
and
jle
lret
xchg
pop
push
sbb
lret
xor
mov
mov
push
je
std
or
xchg
adc
dec
lret
arpl
push
out
ja
lret
cmp
call
mov
mov
add
pop
and
fbld
cmp
int
outsb
jno
lret
ljmp
test
or
roll
lret
jno
aaa
inc
xor
lret
dec
jne
fcmovnbe
or
imul
push
jp
lret
xchg
std
mov
mov
push
push
pop
or
xchg
jb
mov
fisubrs
or
mov
in
pop
jne
xor
inc
adc
jle
test
mul
add
test
repnz
lret
xchg
pushf
fbstp
adc
lret
cld
jae
mov
xorl
pop
mov
jmp
or
jg
and
lret
xchg
mov
lret
lds
jns
lret
cmp
lret
push
lcall
xchg
xchg
jp
push
lret
push
out
loopne
mov
xchg
movsl
push
xor
push
jo
lret
aaa
or
cmp
movsb
push
mov
mov
xor
aas
pop
outsb
adc
push
dec
mov
lret
xchg
cltd
xchg
or
xor
pop
data16
stos
popa
int3
jnp
mov
movsb
inc
js
sbb
pop
sbb
xchg
imulb
sbb
mov
jno
lret
xor
pop
mov
in
xchg
test
lock
sahf
addr16
gs
pushf
mov
sbb
xchg
lret
xchg
loope
loop
fprem1
lret
cmpsl
bswap
hlt
and
lahf
aaa
cmp
dec
ljmp
mov
lock
gs
xchg
and
ljmp
mov
pop
push
lret
aad
cmp
sahf
int
stos
imulb
pop
ret
mov
adc
leave
movsb
jb
loope
sbb
add
shr
pop
ja
int3
lret
jecxz
aad
sti
fidivrl
fwait
aaa
dec
push
aam
mov
imul
addr16
mov
mov
jns
sub
enter
mov
stos
iret
lea
in
stos
xchg
xchg
rcl
popa
xchg
int3
out
sub
stos
std
hlt
stc
xchg
shlb
adcb
lods
jno
mov
sbb
rorl
push
push
and
mov
jbe
mov
lret
cmc
xchg
sbb
and
movsb
mov
in
cwtl
leave
jp
dec
sahf
sti
bound
cmp
test
test
cld
in
lret
adc
lret
sbb
clc
mov
sbb
push
lds
jns
lret
and
les
xchg
stos
mov
lret
ret
scas
pop
ds
pop
cmpsb
xchg
mov
jns
into
cmp
cmp
jmp
nop
es
mov
repz
add
inc
pushf
out
add
or
or
rorl
fimull
loopne
mov
xor
int3
into
push
cmpsl
lock
mov
add
cmp
cmc
push
stos
mov
or
out
adc
lods
lods
lret
mov
mov
mov
scas
int3
test
jle
lret
jns
and
dec
and
mov
xchg
ds
insl
arpl
lret
and
lret
cmp
jb
sub
stos
xor
mov
fwait
cmp
fisubrl
pop
lret
push
dec
xchg
jg
jno
les
mov
lret
jb
sub
ds
enter
mov
lret
jbe
lret
push
fdivl
loope
mov
or
jmp
into
lcall
cmpsl
mov
dec
jle
lods
mov
imul
jae
jmp
out
fnstcw
adcl
add
xchg
cmp
or
push
mov
adc
lods
pop
sti
fst
popa
lret
fdivrp
mov
ss
stos
jl
adc
push
sbb
pop
pop
push
lods
sub
jge
push
cmpsl
lret
or
test
push
push
inc
cwtl
sub
data16
xor
dec
inc
fcmovu
lret
fisubs
lahf
data16
outsl
cmp
sbb
dec
cld
cmp
lret
mov
rsm
jbe
imul
cmp
sub
push
inc
and
lahf
std
dec
add
lea
imul
lret
dec
in
inc
cli
xchg
jp
addr16
mov
test
and
jns
xor
lret
mov
push
mov
xchg
mov
inc
add
sub
lret
subb
adc
inc
dec
std
insl
inc
and
addr16
enter
jno
sub
or
adc
lret
cmc
mov
inc
dec
filds
push
mov
sub
cltd
fwait
mov
adc
rol
lret
lret
es
mov
mov
into
cltd
lahf
sbb
paddsb
lret
mov
pop
popf
push
addl
jnp
lret
sti
fildl
xor
or
lret
hlt
or
sbb
cld
dec
aaa
cwtl
xlat
sub
pop
jno
shr
shll
add
fdivr
jecxz
xchg
mov
jmp
hlt
xchg
shll
sbb
out
jns
icebp
lret
imul
mov
sbb
and
iret
inc
cmp
mov
dec
mov
lret
mov
sbbb
sub
fisubrl
pop
fld1
scas
xlat
push
lods
lret
mov
jmp
in
sbb
mov
adc
ljmp
fcomp
mov
lret
cmp
xchg
mov
lret
imul
int3
xor
call
cli
out
inc
ret
shlb
or
cs
inc
popf
dec
jno
iret
add
pop
or
jp
repnz
xchg
mov
nop
lret
inc
jmp
lret
and
lret
aad
int3
and
notb
cltd
pop
mov
int3
pusha
mov
mov
adc
aas
sub
pop
xchg
imul
sbbb
xor
xor
enter
int
sub
fsubp
lret
or
shll
xor
mov
fidivrl
lret
fadd
sub
repnz
jns
shlb
xchg
or
xor
mov
insb
dec
or
addr16
push
adc
xchg
cmp
in
lret
mov
sti
add
incb
ss
cmpsl
cmp
lret
push
mov
and
xchg
pop
iret
add
repz
cmpsb
mov
lret
test
push
push
pop
popf
cmpsl
lods
rol
repz
or
add
jnp
add
outsl
cmp
pop
push
push
lret
push
fisttpl
jmp
repnz
jg
sub
cwtl
cmc
sbb
lret
insb
es
cmp
nop
or
aam
pop
lret
or
lret
cmp
dec
sbb
into
push
and
pop
addr16
aas
lret
xchg
jge
div
jno
lret
sbb
jl
pop
stos
pop
mov
inc
sub
pop
lret
test
mov
jne
insl
fmuls
jb
stos
shlb
xchg
lret
mov
pushf
lret
cwtl
testl
fisubl
ljmp
cmp
sbb
rolb
jg
lret
fwait
and
stc
dec
stos
cmp
mov
mov
shr
sub
int3
pop
push
jge
xchg
lret
fdivrs
popf
dec
push
lret
jns
sub
sbb
fidivl
adc
lret
enter
mov
ficomps
xchg
inc
lret
js
and
subb
loope
cld
mov
push
shrb
pop
mov
lret
in
ret
push
repnz
inc
xor
shll
lret
outsl
mov
lret
sbb
in
push
les
rcl
dec
cmp
lea
inc
gs
pop
ret
inc
mov
lret
sub
and
lret
and
int
jno
lods
or
movsb
push
stc
bswap
sub
je
std
mov
ret
fidivl
mov
add
fcomps
sub
sub
inc
and
sbb
pushf
cmp
enter
jo
lods
jnp
push
lret
push
loope
icebp
rcr
loope
lret
xor
mov
add
mov
test
add
lret
movsb
cld
mov
lea
xchg
sub
mov
jl
adc
inc
lret
test
cs
test
and
shl
mov
mov
cmp
push
xchg
sub
lods
hlt
inc
sbbb
inc
ss
cmpsl
iret
xchg
lret
testb
sub
into
test
push
lret
mov
lret
das
shrl
mov
movsb
daa
pusha
js
sbb
ja
mov
lcall
cmp
and
fnstsw
pushf
inc
add
cmpsl
xchg
xchg
pop
push
dec
push
dec
shlb
lret
jo
and
pop
cli
dec
sub
pop
adc
and
pop
lret
outsb
cmp
cli
sti
mov
add
cmc
lret
out
mov
xchg
lret
xchg
xor
push
sar
dec
jne
in
jbe
fs
mov
aam
scas
sub
lret
mov
or
jne
inc
cmp
rcll
mov
hlt
ljmp
inc
int
sbb
rorb
jne
cld
aaa
mov
add
adcb
xchg
xlat
and
outsb
sub
lret
mov
cmp
pop
lret
out
dec
sbb
mov
add
cmp
mov
sbb
jno
loope
adc
iret
xchg
das
cli
push
jo
inc
mov
cld
dec
mov
inc
shlb
pop
lret
mov
fists
jge
shrb
lahf
cmpsl
call
mull
mov
inc
lret
or
and
enter
cs
lret
subl
inc
mov
je
sbb
mov
ljmp
mov
rorl
xchg
movsl
xchg
push
jecxz
dec
cmp
fwait
xor
sub
in
imul
aas
lret
xchg
mov
pop
fnsave
cmp
cmp
mov
sub
lods
push
lret
pop
out
imul
ficoml
and
dec
push
lret
test
sbb
lcall
push
and
sbb
xor
shrl
into
xor
lcall
lret
test
andl
lock
cmpsb
lret
shlb
dec
dec
les
inc
lret
push
mov
lret
jecxz
pop
and
mov
lret
sub
adc
lret
dec
adc
sub
ret
movsb
shrl
ret
fs
xchg
stos
pusha
push
adc
les
into
pop
subl
push
stc
xor
sahf
push
dec
icebp
mov
add
leave
rcll
sbbb
dec
inc
mov
aas
mov
lods
jbe,pn
scas
insb
lret
hlt
pop
mov
push
ficoml
cli
aas
ret
stos
lret
inc
int
loopne
adc
in
outsb
or
pop
dec
mov
lret
pop
test
pop
stos
jp
gs
push
lret
add
push
xchg
pushf
inc
cmp
outsl
and
daa
scas
mov
lahf
shrb
scas
aaa
lcall
popa
sub
lret
js
sbb
lret
notb
cmp
out
int
push
lret
int3
repnz
push
push
mov
js
rolb
pushf
xchg
iret
imul
btc
mov
sahf
stos
cld
adc
fs
pop
cli
jecxz
mov
shll
push
adc
add
mov
aad
outsl
sub
loope
sbb
sbb
mov
push
andl
movsb
mov
mov
mov
out
mov
dec
push
and
inc
std
cmpsb
sti
inc
inc
cli
or
mov
sbb
sbb
lret
sub
lods
xor
sub
adcb
cmp
sub
xor
cld
mov
loop
lret
daa
ret
xor
cmp
push
stc
mov
insl
lret
repnz
push
mov
pop
stc
lret
stos
daa
adc
loopne
fdivp
cld
leave
jg
mov
push
int
pop
mov
lahf
mov
mov
and
and
mov
out
fimuls
adc
sbb
jecxz
shlb
inc
sub
xchg
out
insl
mov
jmp
push
push
test
fldt
xor
push
insl
in
int
rolb
push
dec
add
mov
add
cmpsl
repnz
es
mov
fsubs
xor
lods
imul
dec
push
ficoms
testl
cltd
insl
cmp
sub
aad
mov
cld
fcom
push
xchg
pop
cmpsl
lret
jle
loop
jl
cli
movsl
daa
mov
fcoml
push
aad
fstpl
mov
mov
lret
mov
jg
xchg
mov
xchg
idivl
mov
mov
lret
fstp
sub
xchg
std
fiaddl
jmp
xchg
jp
fisubrl
ret
inc
sub
pop
xchg
jne
pop
add
insb
stos
jmp
mov
filds
scas
stc
stos
adc
inc
ds
push
ret
mov
out
mov
dec
loopne
scas
in
or
stc
push
fisubl
sub
fcompl
repz
xchg
sbb
subl
xchg
or
adcl
cmp
sbb
lret
aas
cwtl
adc
mov
mov
mov
and
sbb
icebp
adc
shlb
lock
lret
pushf
scas
dec
ljmp
sub
push
jmp
mov
stc
movsl
jb
int3
xchg
jl
pusha
pop
mov
into
sbb
test
outsb
fxch
mov
fs
xor
scas
addr16
jl
cmc
rolb
mov
cld
ret
add
call
or
or
dec
fdivs
or
test
inc
mov
rcrb
ljmp
lods
pop
aam
mov
jmp
cwtl
push
mov
mov
popf
or
mov
aaa
ljmp
lret
stos
push
add
xchg
insb
push
lret
mov
out
cwtl
outsl
fwait
addr16
inc
cmc
loopne
xor
or
aam
lret
pop
out
movb
jge
pop
lret
mov
lret
pushf
mov
fsubr
sbb
sarb
cmp
icebp
test
aam
aad
icebp
fidivrl
inc
jl
sub
and
decb
pop
ret
xor
dec
popa
push
pop
dec
mov
lret
stc
sahf
loop
sub
lret
dec
adc
adc
test
add
out
cmpsl
xlat
xchg
lret
cmp
stos
sbb
push
lret
push
mov
icebp
loope
lret
mov
jecxz
gs
fmul
pop
movsl
dec
mov
mov
pop
cs
lret
and
test
pop
lret
cmpl
pop
mov
lods
insl
hlt
sahf
out
push
lret
inc
pop
xor
push
pop
stc
and
xor
sbb
or
adc
enter
mov
dec
lret
test
out
ret
pop
mov
in
cmpsl
cmp
lret
sub
mov
add
lds
cli
les
fldt
int3
cmc
and
add
push
movsb
lods
sarb
add
xchg
aas
lret
fdivrs
inc
pushf
test
mov
sub
pop
xor
cmp
lret
mov
cmp
dec
inc
cwtl
out
and
pop
adc
and
lret
fadds
lret
adc
pop
mov
inc
rcr
cmp
aas
out
or
add
out
sti
mov
pop
lds
ja
push
fnsave
cmp
mov
cmp
mov
add
inc
test
je
and
out
mov
sub
lods
sbb
in
sub
xor
fidivs
in
shrb
out
fwait
bound
mov
mov
xor
mov
lret
dec
push
push
stos
pop
std
lret
mov
imul
sbb
pop
jecxz
mov
xchg
jle
sub
lret
scas
icebp
add
inc
and
iret
jae
pop
lret
jmp
insb
fwait
std
add
mov
es
lret
aad
cmpsb
sbb
adc
lds
push
scas
lret
jae,pn
lret
sub
sub
push
lret
leave
movsl
xchg
push
lret
dec
pop
adc
mov
sbb
std
and
xchg
cmp
lret
xchg
adc
fnstcw
ja
pushf
les
fwait
mov
or
push
jg
push
lds
popa
mov
subb
outsb
cmp
sarl
iret
in
out
jno
push
clc
xchg
inc
das
sub
cmp
aaa
jl
sar
ljmp
fcoms
jecxz
jg
fs
jno
mov
mov
push
jp
add
pop
fdivrs
cmp
dec
outsb
xor
pop
lret
dec
inc
mov
xchg
out
lret
nopl
repz
mov
add
mov
lret
push
mov
mov
lods
xchg
rol
loopne
sub
aad
call
mov
dec
inc
dec
cmp
mov
add
jo
xchg
sub
jmp
lret
out
xchg
jne
inc
stos
adc
sub
mov
jge
adc
xor
call
pop
push
vcmpsd
xorl
stc
and
lret
movsb
xor
les
inc
jecxz
add
mov
add
cmp
adc
in
lret
mov
cli
jmp
test
leave
mov
shrb
xchg
mov
ljmp
test
imul
sbb
mov
loope
xchg
xchg
or
lcall
or
sub
aad
mov
aas
xchg
fistpll
cmp
ret
inc
jb
shll
mov
push
xor
mov
or
sarb
je
fmulp
fimull
jo
jge
xchg
mov
str
inc
lret
fists
nop
in
sti
lods
orb
fstps
popa
lret
aad
mov
and
jne
imul
shll
inc
jp
mov
aad
mov
mov
mov
in
xchg
out
sti
jmp
rcrl
cmp
lret
push
push
dec
pusha
insl
int3
lret
addr16
add
cmp
iret
pop
lahf
test
xor
jae
xchg
iret
jmp
mov
lret
push
mov
movsl
and
loop
stc
xor
lret
test
lret
sbb
jle
and
lret
pushf
sarb
and
mov
push
xlat
lods
lret
sub
fdivp
pop
lret
and
jp
jecxz
lret
mov
push
lret
inc
push
rcll
inc
pop
mov
adc
inc
pop
mov
xchg
cld
lret
pushl
add
push
iret
mov
mov
aad
gs
mov
ret
lret
data16
sti
out
aaa
gs
inc
je
stos
lds
testb
mov
aaa
out
or
rcr
jl
rcr
jnp
sbb
mov
push
xor
jge
stos
cltd
cmpsl
or
fdivs
jbe
lret
stos
arpl
test
xchg
sub
push
mov
add
out
repnz
jo
fmuls
dec
push
out
lret
adc
bound
arpl
insb
hlt
pushf
jnp
push
stc
ror
jp
lock
out
xor
hlt
clc
fwait
push
aam
push
lret
cs
stc
adc
push
mov
aas
lret
sub
xor
repnz
jmp
pop
sub
sahf
xor
or
xchg
inc
lret
sbb
lret
mov
dec
cmp
pop
or
int3
xor
jne
xlat
mov
stos
lcall
pop
stos
xchg
lret
imul
lret
nop
fnstcw
dec
femms
jno
out
sbb
mov
aas
pop
outsb
test
lods
add
rorb
dec
pushf
adc
fsubs
jbe
xchg
aad
test
lret
jns
dec
or
fimull
gs
sub
rcrb
fwait
mov
dec
ror
inc
scas
jnp
lods
xchg
cmp
fldcw
xchg
fimull
lret
mov
mov
jo
cmp
pop
sbb
add
add
add
adc
nop
mov
lret
jge
sub
sti
mov
pop
cmpsl
pop
cltd
jg
out
and
or
push
jne
adc
cmc
nop
jmp
sarb
pop
jns
cli
mov
xorb
in
add
and
mov
push
xor
iret
imul
push
test
pinsrw
rcrb
adc
cmp
pushf
lret
and
mov
dec
xchg
pop
xor
inc
aam
insl
xlat
dec
sub
lret
xchg
insb
lahf
cld
dec
mov
rorb
lret
cmp
lret
leave
adc
pop
dec
add
sub
in
cwtl
add
pop
dec
inc
insb
add
repnz
shrb
or
inc
mov
pop
testb
daa
lahf
adcb
lret
add
dec
mov
cli
imull
or
pop
inc
ficoml
stos
push
cmc
mov
sub
push
clc
lret
fyl2x
xor
dec
sub
lcall
mov
cmp
into
mov
pop
xor
fs
into
lcall
mov
xchg
sbb
sahf
push
mov
loope
or
adc
or
shlb
pop
sti
lret
push
sbb
sub
xchg
stos
incb
fisttpll
adc
cmpsl
lret
call
mov
pushf
ret
jle
fsubrs
cmpsb
dec
jp
nop
loope
cmp
aad
out
pushf
inc
lret
dec
loop
enter
xor
lock
into
pop
inc
adc
dec
cmpsb
push
or
mov
cmp
pop
pop
inc
add
adc
add
jbe
js
push
decl
xchg
fs
cli
dec
jl
jecxz
cmp
xor
push
lret
cmpsl
imul
ret
xlat
and
or
cmc
icebp
adc
push
pop
dec
inc
into
inc
pop
in
aaa
lret
loope
insb
in
or
les
mov
add
lret
jo
mov
mov
jb
sub
into
fmull
jno
mov
sub
jns
arpl
jno
mov
mov
shll
clc
add
push
fwait
or
andb
lret
lret
jp
jb
push
lret
and
into
lret
push
push
movsb
push
addr16
push
idivb
lret
sahf
pop
shlb
fiaddl
jo
popf
dec
lock
xlat
dec
xchg
sub
shlb
sub
in
xor
loope
xor
movsl
lret
sti
fwait
inc
stos
mov
lret
fstl
cli
add
add
fwait
mov
push
and
pop
jb
cmp
test
xlat
or
jmp
inc
sti
mov
iret
stos
bound
je
lret
es
negl
lret
xor
cmpsl
test
cmp
jecxz
into
inc
sub
stos
mov
mov
lods
lret
push
ror
imul
push
mov
fidivl
testl
nop
fbld
inc
lret
mov
mov
jno
xor
or
push
add
cltd
pop
fcmovne
jl
int
adc
push
inc
cmpsl
dec
fisubrl
xchg
roll
lret
push
sbb
lea
cli
xor
ds
adc
lret
jae
mov
imul
insb
mov
xor
movsb
ror
addr16
or
add
loopne
adc
cmp
jo
lret
mov
lret
push
sbb
lret
fists
sub
dec
mov
mov
jbe
push
inc
inc
fnstenv
test
enter
xchg
scas
popa
xor
mov
cmpsl
popa
push
xchg
cld
mov
lret
in
pop
pop
mov
popl
clc
xchg
or
pop
dec
add
inc
mov
jp
adc
mov
scas
xor
rcll
gs
aas
in
leave
or
xchg
stos
cli
push
cmp
iret
movsb
sub
sbb
or
cld
mov
mov
aad
fbstp
or
lcall
sti
scas
loope
lret
xchg
hlt
add
dec
clc
loope
movsl
mov
add
pop
call
adc
mov
mov
sbbl
test
dec
sub
mov
imul
loop
dec
lret
mov
add
xchg
inc
mov
fstl
fwait
insl
gs
repnz
cwtl
and
ror
cmp
fldt
rcrl
cmp
repz
bswap
and
dec
mov
rorb
pop
cmp
ss
enter
cmp
jg,pt
popa
iret
jnp
lret
mov
xor
xchg
mov
sti
pop
lahf
rclb
add
imul
xchg
popa
insl
lret
idiv
or
push
lret
inc
push
fstpl
jg
sbb
mov
push
dec
jp
inc
aas
mov
jg
and
test
lret
pusha
aaa
inc
clc
xor
int
lret
push
sarb
dec
push
daa
ss
ficomps
cmp
pusha
js
push
shrl
jp
mov
rclb
mov
es
arpl
popa
insl
icebp
cmp
mov
popf
aaa
jg
cmpsb
adc
or
ss
iret
lret
and
adc
call
xor
push
adc
out
mov
lret
clc
or
mov
stc
lret
jbe
inc
adc
lret
setl
jl
push
inc
pop
mov
pop
xchg
and
lret
inc
and
dec
hlt
test
int
xchg
add
divl
out
cmp
mov
jns
in
fcmove
ret
aam
jle
sbb
aas
lret
cwtl
dec
cmp
sbb
cmc
sub
xchg
xchg
lret
arpl
popl
adcb
clc
or
xor
lret
sti
stc
ret
inc
and
sarl
test
push
fldt
pop
inc
fwait
cmp
sub
call
in
dec
or
ret
into
and
add
pop
xchg
rcrl
jne
add
jnp
sbb
fmuls
lret
sub
dec
lret
pop
jl
lret
fnstenv
frstor
xchg
ficoml
mov
jb
push
test
and
and
jecxz
push
inc
jmp
jmp
out
mov
divl
sbb
lret
repnz
xchg
pop
add
je
and
dec
sbb
mov
lret
fnstcw
shrl
gs
dec
mov
sub
fwait
mov
sbb
dec
cwtl
jne
idivl
pop
je
dec
stc
pop
lret
rcll
mov
fwait
fs
sub
movsl
cli
subl
imul
int3
pushf
fadds
lret
out
pop
insl
mov
fwait
mov
ja
std
cmp
lahf
cli
mov
sar
nop
in
sub
shlb
pop
cmp
push
sub
ss
cwtl
into
icebp
fidivrl
sub
mov
ljmp
sbb
aaa
inc
clc
xor
and
in
dec
jne
sbb
sub
test
lret
xor
push
sbb
lret
imul
mov
lret
sbb
loopne
mov
fldt
cmc
xchg
or
int3
jp
negb
inc
in
rorb
lret
and
cmp
xchg
mov
mov
movsl
bound
xchg
lret
loope
insl
mov
push
hlt
inc
std
lret
imul
mov
lret
scas
push
or
rorb
and
stos
cmp
cmp
add
sub
pushf
xchg
sti
daa
inc
adc
push
push
lret
call
cs
int3
pop
popf
sahf
or
xchg
and
lock
lret
pop
adc
fwait
lret
lods
cli
sbb
stc
jns
jecxz
mov
and
lds
stos
mov
mov
insb
push
cltd
pusha
dec
pop
xchg
addr16
movsl
add
repz
pop
fwait
gs
sarb
cmpsl
adc
or
lods
loop
dec
out
adc
jmp
dec
pop
stos
mov
cmpsl
pop
lret
mov
mov
dec
lret
mov
fwait
mov
in
sub
or
add
dec
inc
leave
xchg
lret
pop
xchg
lds
xchg
lret
call
pop
clc
cmpsl
lret
cmp
test
mov
dec
xor
and
jns
add
pusha
push
sbb
pushf
repz
cld
and
xchg
pop
rclb
push
idivb
push
ljmp
mov
das
jmp
xchg
movsl
inc
sarl
mov
mov
repz
lret
inc
pop
mov
sub
pop
movsb
or
mov
and
sub
pop
lret
pop
jmp
jb
dec
lret
pop
push
adc
aad
lret
enter
iret
lea
jmp
pop
cmp
mov
mov
rorl
adc
out
lods
xlat
bound
push
into
jmp
leave
mov
pop
sbb
into
roll
cmpsl
inc
cmpsl
lret
cltd
lods
push
xchg
cld
stc
xchg
fwait
bound
mov
jo
pop
int
jb
cmp
add
dec
xchg
inc
cmp
iret
adc
and
js
jmp
test
test
stos
loopne
pop
into
mov
rol
lcall
dec
cmc
ja
popf
lret
pop
enter
mov
adc
imul
adc
mov
loop
xor
sahf
vpaddd
sbb
loope
test
and
js
xchg
push
mov
ss
lcall
or
inc
fidivrl
jge
mov
push
pop
mov
data16
popf
lret
jb
mov
aam
orb
cmpl
xchg
mov
addr16
dec
lcall
sub
aaa
cmp
mov
jo
cld
push
push
idivl
sahf
cmc
insl
sbb
mov
sbb
or
movsl
lret
outsb
movsb
sbb
lret
push
jg
daa
imul
iret
xor
lret
xchg
testl
pop
js
shrb
nop
inc
jae
lret
xchg
mov
lret
bound
adc
mov
mov
sub
dec
mov
sbb
sbb
popf
cmp
pop
imulb
aaa
mov
xor
lret
sbb
hlt
mov
cs
mov
imul
mov
mov
shrb
inc
add
lret
push
jb
cmpsb
add
dec
and
mov
orb
xlat
or
divb
pop
stos
adc
test
cld
mov
push
lods
lret
shl
imul
xor
push
fcomip
mov
dec
out
pop
adc
mov
cmc
sbb
lret
mov
push
lods
mov
add
shll
in
jns
lcall
cwtl
fwait
push
sub
scas
cmpsb
setns
ljmp
sub
test
cwtl
or
pop
adc
and
cmpb
lret
mov
xchg
lret
cmpsl
cltd
cmc
scas
push
ror
inc
inc
jns
push
xchg
out
sub
push
lret
xlat
addr16
jno
or
jmp
shr
pop
mov
lret
jae
push
andl
mov
cltd
mov
cmp
jb
sub
rorl
xchg
lret
outsl
lock
pusha
fs
add
adc
mov
inc
pop
lret
pop
shll
xor
push
lret
pop
sti
stos
bound
mov
xchg
pusha
int3
lret
xchg
imul
jnp
into
xchg
xor
mov
aad
pop
lea
test
bound
sar
push
jbe
dec
xchg
mov
jp
xchg
lret
inc
and
in
inc
lret
test
orl
dec
cwtl
dec
mov
out
rcll
imul
test
int3
ret
inc
out
mov
adc
xlat
jmp
mov
je
mov
lret
cmpl
sub
outsb
mov
lods
push
cmpsl
cli
icebp
clc
and
jl,pn
stos
dec
movsl
sbb
fcoms
jbe
push
lret
add
sbb
cmp
movsb
mov
dec
insb
arpl
into
push
cltd
push
sahf
or
lret
mov
popf
xor
lret
movsb
aaa
fstpt
mov
pop
dec
fwait
or
sbb
ret
cmc
sub
jp
stos
lds
fdivs
decb
pop
aas
or
idivl
lret
test
into
xchg
movsl
sti
lret
shlb
imul
leave
cmp
push
jmp
lcall
xor
mov
or
fcmovu
xor
nop
pushf
outsb
fld
fwait
lret
insb
mov
cmp
std
mov
cmpsl
hlt
out
in
lcall
out
inc
adc
test
xorl
pop
flds
enter
ror
movsl
scas
insb
push
add
fdivs
jmp
inc
dec
mov
leave
add
xchg
push
push
lcall
sub
in
jnp
inc
cmp
outsb
stos
mov
enter
xlat
in
xchg
lret
sub
xor
add
jle
sahf
sbb
mov
or
mov
lret
mov
jae
cmp
xchg
scas
out
dec
cmp
push
sahf
das
inc
lret
loope
cmp
pop
lret
mov
xchg
mov
arpl
addl
mov
into
sub
push
lret
push
clc
cltd
mov
aad
cmp
ds
cmc
lret
jecxz
sub
hlt
mov
sub
ret
lea
mov
cltd
or
cmp
test
push
cmp
cmp
lret
push
push
sub
cmp
mov
sbb
inc
inc
int
xchg
adc
or
call
arpl
cli
mov
lods
aaa
sbb
push
xor
lret
ficompl
pop
or
lret
add
lret
enter
dec
sub
adc
sbb
lret
push
push
aas
xchg
cmp
cli
jle
mov
jbe
sub
lock
mov
xor
loop
in
outsb
out
ja
int3
push
mov
adc
int3
pop
pop
lret
icebp
pop
pop
or
mov
out
in
cmpsb
in
lods
fxch
jmp
xchg
sub
shrl
add
push
lret
lret
push
es
jge
or
int
adc
sbb
ficomps
push
stc
cmp
aaa
or
out
test
clc
mov
xor
jge
or
scas
mov
shr
mov
sbbb
pushf
cmp
jbe
add
lret
aad
lret
inc
movsl
pop
insl
sbb
lret
xor
xor
bound
or
push
jno
add
gs
adc
mov
repz
lcall
mov
mov
xchg
scas
shrb
dec
mov
sbb
sub
pop
shlb
shlb
jp
pop
mov
stos
ljmp
sarb
pop
mov
ds
adc
jmp
stos
jns
and
inc
jne
mulb
ljmp
hlt
mov
jo
subb
cs
fadds
pop
inc
lret
addr16
mov
shrb
sub
lret
andb
lret
lea
mov
cwtl
lret
fwait
arpl
sbb
stos
push
lret
aaa
out
nop
mov
sub
inc
lret
leave
inc
xor
scas
mov
in
push
mov
jno
lret
dec
ss
pop
lret
lods
sub
ret
repnz
call
mov
jmp
adc
pop
sahf
push
jg
mov
rcrb
rorb
cs
test
je
js
into
mov
fs
inc
sub
cli
scas
xlat
jne
mov
in
lret
jge
cmp
lret
je
dec
lcall
xchg
dec
jl
pop
sbb
stos
push
les
xchg
lret
cmp
add
jno
and
mov
cmp
mov
dec
mov
dec
mov
aaa
and
mov
xchg
lods
sbb
lret
orb
inc
insb
loop
dec
addr16
inc
rol
in
jl
scas
add
fsts
lret
sbb
xchg
jp
mov
bswap
xor
stc
fnstsw
es
je
xor
cli
and
push
push
mov
rolb
sbb
popa
fbld
loope
cmp
sbb
and
pop
shl
mov
lret
sbb
stc
push
test
int
arpl
lret
icebp
dec
dec
or
addr16
add
cmp
pop
mov
das
and
cmpsl
lret
jns
and
gs
mov
icebp
in
cwtl
jo
and
loopne
cs
jp
inc
pop
fdivrs
push
into
mov
aam
sbb
cmp
fists
push
sti
ljmp
fsub
pop
cmp
daa
jge
cmpsl
ds
int3
mov
jmp
or
cltd
out
push
dec
xlat
mov
add
fldenv
lret
pop
pop
mov
pop
aas
mull
xor
mov
add
mov
fs
dec
clc
lret
cmpl
sbb
or
sbb
mov
sub
mov
fisubs
mov
adc
int
test
rolb
out
lret
outsl
stos
cmc
inc
add
sbb
adc
stos
inc
das
aad
xchg
cwtl
lds
test
js
lret
cmpsl
ret
mov
jp
mov
pop
sub
je
add
mov
rsqrtps
repnz
int
cli
ficoml
or
sarl
nop
pop
push
dec
mov
roll
lods
mov
ss
lret
fsubrs
cwtl
sbb
jbe
pop
repnz
fidivl
jge
fwait
push
sub
imul
lret
cmpsl
mov
rcr
cli
rolb
fcomps
test
pop
cmp
daa
dec
sub
lds
mov
cmp
xchg
push
shlb
pop
sub
lret
mov
and
sub
ret
jp
inc
cs
icebp
leave
or
mov
mov
xchg
jmp
fld
jo
imull
jne
mov
adc
add
test
jae
testl
lods
sbb
or
addl
mov
nopl
push
pop
or
cmp
push
arpl
iret
lods
roll
imull
xor
lret
pop
dec
fidivrs
rolb
das
jb
and
xor
mov
jae
lcall
int3
lret
sub
sub
ljmp
pop
add
leave
mov
xchg
or
cwtl
pop
cmp
mov
icebp
and
into
test
dec
jg
cmp
sahf
lret
mov
mov
ljmp
push
lret
adc
js
cmpsl
icebp
lret
and
imul
mov
pushf
lods
insb
mov
mov
xchg
cmpsb
shr
and
jnp
dec
aas
cmp
loop
push
jmp
sbb
add
cli
insb
mov
jb
loop
fs
dec
adc
call
std
ret
lret
mov
mov
pop
jg
or
push
lahf
pop
cli
in
add
ss
push
xchg
cs
adc
test
sub
cmovo
cs
cmp
lret
adc
lret
push
pushf
mov
sbb
fwait
inc
mov
fistps
add
lds
mov
jb
cmpsl
sbb
in
push
xor
jl
xor
lret
adc
dec
movsb
and
sarb
lret
or
xchg
mov
or
insl
push
and
in
loop
cmp
fsubrs
jns
inc
bound
lret
xor
stos
leave
inc
out
push
adc
lret
and
sbb
push
daa
fidivs
cmpl
cmp
add
push
jl
xor
xor
push
stos
push
cld
pop
xchg
pusha
int
out
lret
bound
pop
dec
in
pop
cli
shrb
jns
sbb
lret
or
dec
lret
push
test
out
inc
cmp
cli
xchg
mov
and
pop
fwait
adc
rclb
cli
mov
cmp
out
cmp
xorps
pusha
adc
add
inc
lcall
bnd
mov
scas
push
jmp
stos
shll
rcll
jmp
xor
stc
mov
jae
je
sub
add
jo
sbb
daa
sbb
sarb
adc
xchg
aaa
cmp
rorl
pop
lahf
arpl
push
icebp
xchg
movsl
push
jno
dec
ljmp
push
mov
icebp
popf
mov
inc
jle
rcll
repnz
notl
lret
pop
xor
std
cmp
cmc
sbb
popf
outsl
push
mov
das
and
cmpl
aaa
and
lret
insl
push
ss
push
mov
or
lcall
adc
cs
pop
mov
out
cli
jp
and
mov
or
mov
sub
bound
ja
lret
clc
jne
add
inc
xlat
xchg
add
sub
dec
insl
add
fldcw
mov
rolb
lret
aad
test
loope
lret
sub
xchg
ficompl
xchg
xchg
je
lret
sti
dec
cmp
sub
mov
pop
lret
pop
push
lret
cmp
cmp
daa
iret
cmp
mov
cmp
jecxz
push
lret
lds
lret
rcll
add
lret
jbe
imul
inc
sti
insl
cmpsl
loop
outsl
out
fbld
lret
mov
lret
std
xchg
cmp
xor
push
mov
nop
mov
jp
adc
xchg
or
jnp
inc
lret
push
gs
or
mov
fs
cmp
clts
lret
subl
jnp
xchg
shl
test
lods
lret
pop
fsubrl
push
mov
mov
mov
inc
fwait
test
mov
or
lret
cli
push
adc
cmc
popl
xor
pop
ja
add
push
fcmovu
hlt
das
sub
stos
or
sbb
xor
dec
fldenv
pop
or
out
icebp
xor
push
jp
lret
clc
xlat
pop
ss
mov
cli
mov
jecxz
push
inc
lret
inc
and
sbb
xchg
cmpsb
sub
adc
push
jle
inc
aas
arpl
inc
pop
stos
fcmovne
or
push
mov
jp
popf
xchg
cs
lea
pop
push
lcall
enter
xchg
vrcp28ss
cwtl
sbb
into
aad
lret
xor
adc
arpl
xchg
pop
pusha
ret
push
lret
mov
lods
lret
cmp
push
cmpsb
clc
imul
fidivrs
out
orl
mov
push
mov
jl
jecxz
inc
lret
dec
xor
xchg
or
aam
std
mov
rclb
or
fadds
push
in
cmp
mov
push
lret
test
clc
cmp
inc
std
dec
fistl
jne
jae
mov
arpl
or
mov
xchg
sbb
movsl
ds
add
adc
xor
push
inc
ds
cmpsb
cli
push
jge
pop
xchg
scas
out
inc
out
mov
shlb
xlat
int3
or
push
sub
daa
icebp
lret
push
ja
mov
add
add
stos
data16
cli
lret
mov
adc
loope
lret
adc
leave
les
addr16
lahf
aaa
cmp
stc
insl
lret
pop
mov
sub
adc
mov
inc
jge
xchg
sub
mov
mov
lret
push
ss
or
out
daa
lret
add
iret
xchg
dec
lret
jle
inc
cld
pushf
sub
lret
jp
mov
mov
mov
cmc
dec
mov
dec
and
ror
sbb
int3
rcrb
test
and
xchg
inc
imul
or
sbb
sbb
and
rcrb
dec
scas
push
lret
or
lret
and
sbb
roll
emms
loope
push
lret
data16
push
rorb
add
mov
hlt
loope
lds
test
ror
inc
aad
xlat
cmp
fnsave
mov
ror
ljmp
into
lret
es
xlat
arpl
cmpsb
rcrl
ljmp
insb
or
fisubl
test
dec
sbb
xor
push
lret
cs
lret
icebp
jae
jp
ficompl
push
inc
cmp
lret
fisttps
lret
sti
ja
test
and
iret
js
sarl
add
or
pop
loopne
dec
fisubl
and
lret
dec
scas
jb
push
cmp
rorl
xor
addb
sti
lret
mov
and
cmp
sub
lret
pop
cmp
push
cmpsl
in
lret
dec
cmp
out
addb
lret
lret
iret
les
mov
cmp
std
jecxz
fcoms
cmc
fidivl
jmp
aaa
inc
dec
movsl
push
adc
mov
inc
mov
lret
call
cmc
lret
adc
repz
or
sub
xchg
jno
xor
lretw
mov
into
insl
push
ret
pop
out
add
out
scas
imul
pop
mov
add
ret
stos
aas
outsb
inc
shlb
rcl
push
xor
movsl
adc
jmp
lret
mov
xor
clc
xchg
icebp
add
lahf
pop
movsl
lret
inc
shl
dec
mov
push
lods
push
sbb
dec
popf
pop
dec
sti
scas
xor
rcrb
inc
pop
xor
inc
mov
sbb
or
jns
mov
pop
mov
fwait
xchg
movsl
xchg
jae
pop
or
lea
lret
outsl
add
inc
add
andb
adc
jg
xor
mov
mov
dec
xlat
pop
mov
ja
sbbb
dec
sarb
in
push
inc
or
pop
fucom
inc
lea
adc
jge
bound
mov
ror
xchg
pop
mov
rorl
das
andb
rcrb
inc
inc
lea
push
ss
or
cmp
ret
cmp
mov
lret
aam
push
aad
popf
lret
fs
xchg
ret
lret
push
testl
push
sar
add
ficompl
repnz
ret
sub
push
pop
adc
xchg
fdivrs
dec
lret
aaa
ret
imul
inc
cmpsb
push
and
test
jbe
xchg
jge
out
xor
stos
pop
test
fwait
lock
inc
mov
push
pop
mov
loopne
lret
jns
cmp
pop
ficompl
or
mov
gs
cmp
jge
lret
test
out
push
insb
lret
lea
push
dec
out
popa
lret
or
outsl
loopne
xchg
lret
aam
mov
cmp
fadds
es
ss
mov
mov
add
jle
mov
pop
xchg
or
mov
sub
jge
jae
or
inc
in
mov
out
inc
cmc
push
lret
pusha
fstpl
dec
mov
out
or
dec
dec
add
into
or
out
repnz
mov
sub
sbb
lret
mov
or
into
pop
nop
ljmp
push
push
xchg
pop
jne
es
inc
or
push
dec
mov
dec
jb
sub
mov
push
xchg
cmp
dec
imul
xor
inc
cmc
xorb
jg
insl
jl
stc
fwait
sub
push
in
ret
add
mov
lret
pop
fs
xchg
dec
inc
cmpsl
pop
outsl
cmpsb
or
or
dec
rclb
lret
pushf
je
mov
or
or
sbb
mov
rorl
dec
icebp
jo
and
stc
sbb
jbe
mov
add
out
loop
rcrl
ja
fdivs
xchg
fisubl
loopne
cltd
adc
pop
outsb
lret
in
pop
or
push
or
mov
push
push
mov
pusha
lret
shr
out
iret
popa
sub
push
icebp
push
lret
xchg
xchg
movl
insl
pop
pop
lret
push
cmp
lret
pop
dec
inc
or
rcll
cli
std
jle
or
int
sub
cmp
lods
mov
loop
adc
cwtl
cmp
sar
xchg
lret
ss
push
push
inc
push
mov
bound
rorl
lock
sbb
ror
jbe
jo
inc
outsl
lret
lods
scas
push
pop
mov
xchg
jnp
cmpsl
cwtl
mov
lahf
nop
lea
or
decl
mov
cs
fldcw
insl
lret
push
sub
in
dec
mov
mov
dec
dec
cmp
push
ljmp
add
inc
int
imul
lea
dec
inc
cltd
popa
mov
lret
and
into
lret
adc
adc
rorl
lret
fists
xchg
pop
pop
pop
lcall
imulb
mov
inc
movsb
outsb
enter
inc
lret
cmp
sbb
sti
cli
xor
push
cli
xchg
lret
imul
push
cltd
fsubs
xor
stc
mov
lret
repz
adc
int3
lret
adc
xchg
pop
lret
jge
mov
lock
xchg
fcomps
icebp
add
aas
push
xor
into
cld
jl
mov
orb
loopne
enter
mov
push
xchg
sbb
xchg
movaps
push
andb
lret
mov
add
pop
mov
lret
daa
add
lret
out
inc
adc
mov
sbb
jmp
xor
sub
lret
push
cmp
mov
into
lret
inc
adc
push
sahf
outsl
lret
xor
adc
stos
rol
subb
push
sub
push
loope
popf
addr16
rolb
pushf
cs
jns
pusha
sti
test
lret
jae
cmpsb
sbb
ror
or
aad
stos
ljmp
mov
pop
pop
sub
mov
lret
xchg
or
cmp
dec
stos
stos
and
lret
mov
loop
inc
enter
sti
lret
push
int
in
and
mov
shlb
lds
loop
jle
push
pop
insl
sbb
ficompl
add
sbb
in
repz
lret
add
inc
lret
cmp
pop
bswap
jl
outsb
pop
inc
sub
push
lret
lock
jns
js
ficoml
add
adc
fdivs
lret
jp
mov
adcl
push
in
sti
sbb
adc
mov
pop
hlt
lret
aam
lret
popa
sub
xor
lret
pop
add
lret
push
rcl
dec
dec
movsb
lret
inc
jo
out
xchg
lret
add
or
or
mov
ds
pop
pop
bound
or
out
fcmovnb
hlt
cltd
addr16
clc
push
sub
mov
dec
pop
test
test
lret
rcr
add
cltd
out
mov
add
lret
lret
and
mov
push
or
add
stos
sub
aam
mov
shll
and
adc
stos
inc
aam
and
jmp
ljmp
fidivrs
push
cld
ror
push
cli
dec
push
sub
lret
jg
frstor
add
jge
lret
xor
pop
cld
sbb
lret
inc
rclb
lds
mov
push
jge
sub
lret
stos
mov
jnp
cmpsb
lret
sbb
push
xor
sbb
arpl
jne
sbb
fidivs
test
in
or
lret
sub
mov
xchg
stc
push
lret
iret
adc
fidivrs
jmp
lret
jno
movsb
sbb
insb
lret
and
mov
inc
lea
lret
mov
or
or
es
rorl
lret
gs
insl
push
lret
outsb
ss
push
sbb
cmp
mov
fcomp
loop
rorl
xor
les
jl
je
arpl
xor
sbb
and
xchg
sub
nop
addr16
add
cmc
movsb
js
jecxz
lret
push
pop
cmp
mov
lret
roll
call
es
rcrb
icebp
lret
xchg
stos
clc
dec
dec
or
cmp
lret
sar
dec
mov
mov
das
stos
in
inc
lods
fcoml
mov
pusha
sbb
mov
mov
ds
test
lods
push
loopne
ret
popf
pop
adc
shlb
sub
xchg
fs
mov
mov
xchg
into
mov
out
cmp
sub
push
aad
sbb
mov
xchg
jg
mov
ficompl
sbb
push
xor
dec
lret
pop
pusha
mov
mov
lret
std
aaa
ret
fistpll
lcall
sub
stc
xchg
lret
pop
shlb
flds
sbb
cli
mov
cli
mov
inc
lret
cmc
mov
stos
xchg
push
xchg
mov
rclb
mov
sbb
ficoml
mov
mov
int3
mov
lods
push
ljmp
pop
cmp
fidivl
mov
pop
jmp
inc
xchg
push
pop
mov
dec
jns
cmp
rcl
outsl
scas
shlb
sub
icebp
dec
lret
divl
ljmp
repz
fcompl
mov
out
pusha
sub
repz
lret
std
xorl
lock
cli
inc
fdivrs
jo
insl
stos
sbb
gs
mov
scas
jb
dec
aam
push
popa
inc
cmp
out
call
push
mov
pusha
test
mov
adc
adc
lret
add
addr16
jne
xor
nop
insl
dec
ss
sbb
into
cmc
xchg
mov
loopne
gs
jg
jae
or
inc
sub
lock
shlb
inc
and
popf
test
shlb
push
push
inc
lret
stc
fisubs
pop
mov
jp
pop
jge
or
mov
loopne
cmp
jl
mov
jns
stos
push
es
xorb
mov
inc
std
unpcklps
aad
mov
int
pop
gs
addr16
pop
pop
jae
mov
js
rcl
dec
jge
iret
lret
ficompl
lret
outsl
frstor
mov
jb
sarl
jp
mov
pop
jecxz
iret
ret
xor
sub
jle
jne
xor
popf
sub
ljmp
mull
repnz
lret
lret
adc
inc
call
inc
lods
shlb
stc
out
arpl
insb
cmpb
pop
mov
cmp
fidivrl
push
out
jge
cmp
lret
sbb
mov
mov
mov
popl
adc
sub
out
lret
ficoml
push
push
ds
lret
mov
out
lret
add
lret
jmp
out
fwait
lret
aaa
or
cmp
fisubl
mov
jo
sub
push
push
xchg
jmp
inc
idivb
rclb
lret
nop
add
pop
js
cli
insl
test
mov
pop
lret
push
je
lock
jmp
stos
cmp
mov
es
adc
int3
pusha
aas
lret
fisubrs
lret
inc
and
push
idivb
lret
fwait
sbb
cli
push
xchg
push
outsb
jecxz
pop
daa
push
and
mov
adcl
stos
push
idivb
lret
loopne
fscale
ret
cwtl
lods
xchg
jecxz
cmp
xor
jmp
sbb
mov
dec
int
mov
test
inc
dec
push
scas
add
push
pop
loopne
lret
cmpsb
xchg
lock
movsb
mov
test
jp
pop
jae
cmp
arpl
fnstsw
aad
aaa
daa
mov
xlat
out
cmp
sbb
lret
adc
pushf
stc
fwait
aaa
cs
mov
ret
push
lret
dec
fmull
cmc
aad
lret
test
dec
add
or
popa
out
mov
mov
subb
pop
rcll
inc
jl
testl
or
repz
inc
xchg
xor
fisttpll
lret
insl
pusha
pop
popa
fisubl
or
xchg
inc
ja
rorb
jl
test
pushf
add
clc
mov
mov
cmpsb
adc
cli
repnz
pop
lcall
push
int3
sahf
lods
test
jns
xchg
out
and
cwtl
into
push
mov
es
xor
insb
cmp
lods
pusha
aas
rorb
xchg
jecxz
lret
sub
push
insb
inc
lret
mov
ror
push
push
ds
mov
cltd
imul
aam
and
or
fmuls
repz
dec
pop
lret
fs
aad
xchg
stos
lret
lcall
icebp
mov
arpl
sub
dec
jno
lcall
inc
dec
jbe
pushf
in
add
mov
roll
fbld
mov
lcall
mov
jl
sar
jbe
adc
dec
pop
add
ret
mov
jno
aam
in
mov
or
test
rorl
fs
outsb
repnz
inc
gs
rclb
push
xor
sti
inc
out
adc
add
icebp
rcl
push
jno
fsubl
in
mov
mov
lret
inc
inc
shrl
lret
mov
xchg
lret
push
add
cmp
and
jb
mov
mov
add
lds
stos
call
jbe
inc
lret
push
mov
shlb
pushf
lret
pusha
in
test
lret
mov
jg
fs
stos
cltd
mov
pop
mov
out
sbb
rcrl
xchg
mov
pop
ljmp
dec
aad
lret
push
add
cmp
cmp
lds
jle
cltd
mov
stc
stos
sbb
add
pop
dec
sub
or
notl
mov
das
js
mov
mov
js
lret
mov
ljmp
mov
sti
cmp
repz
or
sub
rorl
dec
mov
shlb
fsub
ljmp
add
mov
std
lret
xchg
fisttpll
into
xor
sub
jl
mov
out
leave
mov
mov
push
popa
dec
lods
cli
add
jp
fidivrl
jns
lret
inc
or
mov
add
mov
out
push
mov
add
pop
lret
pop
push
imul
scas
test
xor
pop
or
cwtl
sub
outsl
fwait
es
cli
scas
mov
clc
jl
inc
insb
push
out
stc
jnp
shlb
push
movsb
pop
aam
aad
scas
pop
mov
lret
jl
test
lret
into
mov
lret
clc
cmp
mov
pop
stos
fbld
adc
lret
mov
out
push
ret
lret
mov
ja
loope
push
jl
sarb
lret
xchg
mov
lret
sbb
sahf
insb
inc
mov
xor
inc
lds
or
jbe
inc
lret
adc
push
lret
pop
xor
movsl
loope
sbb
add
cmpl
icebp
jne
stos
shlb
ficoml
lret
sub
dec
and
pop
ja
xlat
sub
enter
jg
out
out
mov
and
mov
fmul
aas
popf
fs
mov
mov
jmp
cmp
out
pop
sbb
out
insb
adc
jmp
and
xchg
std
aaa
stos
adc
push
divb
je
ror
push
or
inc
stos
xchg
in
inc
das
pop
lret
rcll
stc
jae
xchg
lret
xchg
dec
imul
fbld
jbe
add
mov
aad
sub
jp
push
fisubs
rorl
cli
pop
fcmovu
pop
xchg
aad
adc
cmpl
xchg
fstps
xchg
aam
sar
jl
xor
push
daa
or
jo
cmp
push
jmp
push
mov
pop
xchg
lea
dec
lds
call
movsl
test
fildll
out
pop
lods
push
mov
mov
js
lret
dec
bound
repnz
sub
pop
fs
and
int3
or
pop
pop
lods
sub
xor
adc
mov
rcl
sbbl
dec
push
mov
xchg
mov
lret
pop
iret
ljmp
mov
sub
xchg
and
fistps
test
mov
lea
lret
fadd
aam
lret
push
addr16
rorl
rcl
sbb
pushf
int
repnz
mov
lret
sub
je
add
push
lret
add
mov
and
sbb
sbb
inc
lret
jl
stos
bnd
lret
lea
cli
jle
add
ficomps
inc
inc
sub
and
lret
es
pop
lret
aas
jl
int3
mov
roll
mov
mov
mov
dec
mov
nop
xor
hlt
push
loop
scas
xchg
push
js
push
mov
dec
mov
lret
fnstsw
inc
pop
sbb
lret
cli
mov
lret
in
pop
push
hlt
divl
mov
insb
icebp
bound
into
lret
sub
imul
mov
iret
dec
bound
cli
xchg
repnz
push
pop
fcomps
pop
fimuls
cli
jo
lret
inc
test
cmovs
inc
sahf
ss
dec
lret
xchg
pop
jae
stc
stos
scas
test
test
add
mov
and
lret
enter
jp
lret
sub
xor
lcall
hlt
pop
test
add
mov
clc
mov
lret
jecxz
ret
mov
ficomps
cmpb
divb
movsl
fsubrs
push
fs
mov
lcall
inc
rcr
dec
pushl
rolb
outsl
lods
ret
cmp
outsb
sub
mov
push
sbb
jo
daa
xor
xchg
inc
mov
rclb
lret
xor
xchg
xor
sub
lods
fcmovne
push
rep
adc
aas
ret
popf
ljmp
fcoms
push
fdivl
lcall
nop
cmpsb
push
mov
les
ds
add
push
dec
adc
and
lret
jbe
lret
xchg
mov
jo
cmpsl
data16
sbb
jnp
push
pop
lret
ds
jno
aam
lret
dec
shrl
jmp
xor
cmp
out
pop
pushf
rcll
movsb
lret
js
jns
mov
lret
test
cltd
lret
je
test
inc
iret
stos
mov
sbb
fsubrl
lret
add
jns
xor
lret
shr
xor
jns
pop
push
stos
into
test
bound
jae
sbb
daa
inc
movl
fimuls
int
ljmp
rorb
pop
js
add
lret
or
mov
or
sarb
lea
cli
rorb
fwait
fs
mov
pop
pusha
test
or
pop
lret
xor
push
sbb
inc
inc
lret
shl
pop
dec
mov
xor
inc
fcomip
or
jge
lret
mov
call
enter
jo
cmp
cmc
imul
ret
mov
and
bound
push
jle
mov
lds
int
dec
cmp
icebp
jecxz
lret
sahf
leave
xchg
sub
xor
popf
sbb
xchg
stc
cmp
xchg
xchg
rclb
and
and
push
sbb
ljmp
cmp
insl
mov
lret
mov
in
divl
in
pop
dec
sbb
mov
in
insl
mov
bnd
out
adc
or
mov
sbb
shrb
push
jmp
push
dec
out
dec
and
shl
scas
xchg
hlt
nop
rcl
dec
mov
stos
js
cmp
cmp
shrb
and
xchg
cmp
cld
enter
pop
shrl
mov
shlb
mov
fmuls
mov
add
mov
xor
in
xlat
and
push
lret
cmp
lret
push
mov
lret
dec
ret
push
test
rolb
add
lret
or
vmaxps
lret
adc
aas
cltd
clc
mov
xor
mov
pop
cli
add
lods
push
das
arpl
fsubs
lret
js
pop
test
cli
shrb
das
or
inc
xchg
or
sti
adc
inc
dec
add
cwtl
sub
in
push
mov
and
lret
mov
lret
mov
inc
lret
mov
mov
xor
cli
sub
stc
loopnew
lods
mov
stos
and
lret
cld
mov
lret
sbb
lret
xchg
subps
jns
inc
adc
mov
mov
jne
xor
fsubrp
int
and
sbb
pusha
sbb
xor
fcomps
mov
rcll
cmc
jae
mov
lock
fstl
and
ficoms
push
lret
sub
scas
clc
lret
cmp
jb
icebp
in
lret
adc
dec
and
daa
pushf
dec
aad
int3
fs
sub
mov
iret
icebp
test
xchg
shrb
mov
mov
mov
and
adc
lret
insl
mov
cli
cmpl
pop
sub
fisubl
adcb
aaa
dec
lret
or
xchg
loopne
lret
orb
push
lret
adc
xlat
jbe
lret
and
mov
dec
lret
pop
rclb
jnp
mov
jns
mov
dec
fs
clc
xor
jge
pop
sub
jle
mov
add
mov
lds
mov
mov
aam
loope
cmp
xor
push
mov
pop
pop
repnz
inc
mov
mov
outsb
pop
cli
sub
imul
test
cltd
lret
dec
movsl
dec
cmp
enter
testb
movsb
lret
lods
ja
push
cmpsb
cmp
xchg
and
je
sub
lds
mov
dec
mov
add
hlt
popa
nop
xchg
sub
lea
fbld
lods
lret
addr16
sbb
jp
lret
jmp
sbb
shlb
adc
lret
stc
add
inc
rcrl
mov
pop
jno
lret
adc
mov
jp
ja
rcl
addl
fwait
int3
es
repnz
movsb
sbb
fcmovu
nop
lret
cmp
pop
mov
sbb
je
pop
lret
push
outsb
adc
clc
popf
out
aad
push
mov
arpl
lcall
lret
scas
popf
pop
add
adc
sub
mov
call
lahf
aam
nop
fsubs
mov
add
sub
mov
cmp
jns
fidivrl
adc
stos
sub
and
mov
sub
jo
pushf
fistpll
lret
adc
in
lret
bound
add
pop
xchg
dec
mov
and
ffreep
jecxz
fidivl
aam
xlat
repz
fiaddl
loop
dec
int
xchg
imul
sbbl
mov
add
ljmp
mov
xchg
inc
adc
lret
mov
ror
dec
ficoms
inc
xor
lret
sahf
fcmovb
dec
mov
js
cli
mov
call
adc
daa
inc
push
xor
scas
fs
ret
rorb
cmp
mov
mov
ror
test
clc
popa
lret
icebp
mul
sub
lock
call
test
dec
sbb
xor
aaa
adc
jnp
jae
adc
xorb
in
ja
gs
fs
jnp
lret
xchg
into
adc
mov
mov
dec
shlb
sti
sbb
lods
cli
xchg
out
enter
fwait
lret
push
xchg
jbe
loop
lret
or
lret
sbb
lret
sbb
aam
and
lret
enter
movsb
cmp
pop
mov
xlat
inc
dec
pop
lret
add
cmpsb
or
out
cmpsl
jp
inc
loope
sbb
or
scas
rolb
adc
sti
psubusb
cwtl
cli
popf
outsl
call
ljmp
test
jp
mov
fyl2x
lret
mov
add
lret
sub
add
sub
shll
mov
das
dec
push
jbe
add
loop
inc
lret
std
enter
mov
push
push
loope
mov
sarl
push
sbb
mov
outsl
fsubrp
xchg
out
fistpl
outsb
mov
xchg
mov
mov
or
inc
mov
int3
js
dec
push
daa
lret
call
inc
lods
sti
or
fimuls
pop
inc
rorb
or
enter
sbb
xor
ror
mov
adc
sub
gs
test
addr16
mov
mov
sbb
lret
pop
ret
jmp
outsl
inc
mov
arpl
cmp
enter
mov
ljmp
inc
test
cmp
lret
lret
pop
xor
mov
mov
pop
ret
mov
push
mov
aaa
xor
jnp
fisubl
imul
lret
mov
push
cli
fnstsw
lods
aam
insl
xchg
lret
sub
pushf
cli
int
cmp
xchg
data16
lret
xchg
stos
js
mov
lret
jecxz
cmc
lods
in
stc
inc
lret
xchg
sbb
jge
out
lret
into
mov
mov
or
cld
jmp
pop
dec
mov
jg
dec
cmp
das
adc
push
push
mov
out
loop
mov
jbe
lret
jnp
add
and
jecxz
cli
mov
mov
lret
inc
mov
or
insb
lret
and
lret
push
jle
mov
dec
lock
scas
cltd
jb
mov
mov
add
icebp
addb
lods
aad
lds
lret
inc
sbb
lock
dec
fwait
mov
sub
mov
cli
arpl
clc
push
ds
xchg
lock
pop
sti
mov
xchg
jge
int
js
xor
push
lret
fistl
lret
and
or
ljmp
mov
lret
pop
popf
mov
aam
inc
mov
adc
fisubrl
xchg
test
mov
mov
out
inc
sbb
or
push
and
sub
enter
adc
movsl
mov
ret
into
jmp
popa
addr16
cmp
push
xchg
sub
into
lret
fisubrl
and
mov
fmuls
lahf
adc
mov
insl
movl
sahf
std
pop
xlat
push
pop
inc
xor
pop
jno
adc
rcll
or
cmp
ds
out
lret
sbb
lret
subl
ss
xor
aas
mov
outsb
mov
lret
mov
xchg
jge
pop
lret
push
sbb
mov
xchg
adc
mov
sub
mov
push
xchg
adc
or
shr
bnd
fdivrs
push
dec
in
dec
mov
jae
jp
dec
stos
into
nop
sbb
mov
or
int3
fcoms
addr16
push
aas
cmc
add
das
sarl
adc
lret
cwtl
cmpsb
add
xchg
jge
xchg
inc
or
stc
add
dec
mov
ds
inc
or
mov
cmpsb
shrb
sub
out
fsubr
sbb
lahf
cli
sbb
inc
sti
push
insl
mov
lret
fnstsw
mov
mov
out
cmp
adc
pusha
fisttpll
cmp
aad
jbe
loopne
fst
lret
mov
add
pushf
dec
xor
loopne
lea
lahf
roll
push
cli
daa
je
subps
add
mov
mov
xchg
bound
lret
repz
or
lea
movsl
js
orb
jmp
shll
lret
mov
dec
pop
xchg
and
jmp
pop
inc
clc
mov
pop
cltd
dec
mov
xchg
fsubr
xor
fdivl
pop
inc
sbb
sti
lret
cmp
lret
fildll
cmp
sar
rcr
dec
out
ljmp
rclb
push
repz
dec
jno
lret
ss
lret
mov
loope
lods
pop
xlat
or
lret
arpl
push
daa
stos
add
ss
ret
shlb
inc
lret
lcall
clc
jecxz
sbb
test
cmp
add
jbe
lret
repz
shrl
ret
pusha
into
push
mov
aaa
test
out
cmp
out
lret
mov
in
stc
mov
fdivrs
nop
js
arpl
sbb
jp
jb
insb
rorb
mov
stos
int3
mov
push
sbb
vandps
lods
adc
iret
mov
lret
jg
inc
in
mov
lret
out
adc
or
lret
adc
insb
lret
cmpsl
es
repz
push
dec
xchg
std
dec
lret
sbb
and
repnz
in
push
mov
out
sub
cmp
xor
lret
icebp
int3
repz
leave
xchg
fmuls
cltd
add
xor
push
cli
mov
xchg
push
sahf
mov
mov
enter
pop
xchg
push
test
shrl
mov
and
in
lret
arpl
add
or
sbb
jno
cmp
cmpsl
xchg
inc
lret
mov
insb
xor
sub
inc
lcall
testl
mov
cmp
dec
jge
sub
pop
insl
inc
pop
ret
daa
imul
jne
push
push
pop
and
aam
lahf
xchg
mov
push
arpl
fcmove
lret
lock
imul
pushf
sti
inc
or
sub
imul
sub
dec
mov
lret
sbb
addr16
leave
cmp
lret
jnp
push
aam
push
cli
xchg
push
and
push
cmp
cmp
pop
xlat
mov
bound
mov
fmull
into
mov
xchg
adc
cltd
dec
push
stos
pop
rcll
fldt
outsb
sub
lcall
jmp
stos
pslld
lret
pop
push
test
lret
shll
mov
pop
sbb
mov
leave
cmpsb
or
and
or
lret
scas
push
inc
or
lahf
lret
out
mov
sub
ss
pop
push
cmp
xor
lret
mov
dec
push
cmp
pop
leave
jbe
xor
sbb
jp
lret
inc
jne
xor
dec
mov
mov
xlat
dec
pop
into
dec
lret
cltd
cli
sbb
add
mov
sbbb
cli
pop
cmp
addr16
xor
mov
pop
sbb
mov
mov
cmp
jo
mov
pop
cmc
adc
mov
cli
pop
insb
xor
push
das
and
outsl
stos
push
jmp
out
push
and
or
lret
dec
pop
xlat
mov
mov
add
cmc
inc
lret
cli
fdivrp
mov
lret
lock
in
fwait
sbb
shrb
arpl
std
inc
fs
xchg
xor
mov
and
loope
iret
aaa
xlat
or
lcall
data16
shll
cwtl
clc
aad
jno
lret
jo
push
push
aas
mov
movsl
inc
in
xchg
mov
push
mov
insb
dec
aad
mov
fnstcw
dec
stc
into
jmp
sub
jmp
in
lret
adc
cmp
dec
mov
shrl
sbb
rcr
enter
mov
outsb
cmp
and
sub
aad
xchg
mov
xlat
cmp
sar
out
ret
ja
outsb
pop
push
andl
cmp
cmpb
sbb
sub
sub
mov
mov
mov
fisttpl
sbb
sar
mov
lret
cmpsb
push
in
movsb
sbb
push
or
rep
jo
aam
lret
lds
test
inc
lret
dec
xor
imul
adc
sbb
adc
mov
mov
push
pop
pop
pusha
adc
mov
js
lret
mov
inc
andb
clc
mov
insl
mov
adc
lretw
int3
filds
xor
pop
xor
dec
dec
into
in
aaa
fwait
addr16
or
sbbb
jne
int3
xchg
dec
mov
xor
inc
mov
mov
sbb
out
mov
lret
int
xor
fwait
ror
aad
scas
sub
lret
aam
cmp
sub
rolb
adc
or
rorb
lret
mov
imul
xor
stos
xlat
fisubl
dec
dec
ss
mov
cmp
lret
add
dec
mov
lret
shr
lret
enter
loopne
cmp
sbb
mov
test
repz
xor
lds
shll
out
ds
jge
dec
lret
xor
lods
notl
and
push
mov
lret
inc
cli
or
ret
mov
dec
or
fidivl
dec
sub
xor
mov
lret
shrl
int3
decb
or
rol
jle
add
loopne
adc
cmp
push
or
pop
js
lods
ds
addr16
cmp
lods
sub
xor
lret
sub
and
daa
sub
jo
gs
mov
sbb
fmul
in
sahf
icebp
inc
je
adc
lcall
loopne
mov
rolb
fisubrs
inc
cmpsb
lret
sub
cmc
xchg
scas
fidivl
pop
sti
xchg
outsb
push
ss
jb
lods
shr
sbb
mov
adc
pushf
into
andb
cmp
int
cli
cwtl
or
mov
ret
lret
pop
lock
mov
stos
shl
enter
or
adc
lcall
rcr
dec
cli
jp
data16
mov
lret
out
mov
lock
add
xchg
popf
ret
lds
lea
std
mov
icebp
and
lcall
push
mov
insl
pop
mov
or
hlt
jbe
lret
or
cmp
enter
inc
inc
add
mov
cmp
adc
rcrb
mov
dec
cmp
lret
loop
cwtl
pop
mov
lret
mov
call
es
out
lret
cmpsl
leave
test
inc
mov
mov
and
in
jecxz
pop
sub
pop
cld
xor
sub
cmp
and
lret
aaa
popa
fcoml
dec
lret
dec
jbe
sub
add
mov
pop
mov
mov
push
outsb
lret
pop
jecxz
dec
mov
sub
lret
mov
fidivl
testb
test
sbb
fwait
or
push
jns
mov
out
les
fstps
loope
mov
mov
xchg
or
inc
or
add
mov
lret
pop
adc
jo
stc
lret
shlb
shll
xor
into
xor
popa
lret
sub
adc
cmp
inc
xchg
jle
and
and
pop
sub
push
call
xor
fcmove
inc
in
and
mov
fwait
jae
mov
dec
mov
or
lret
jg
mov
mov
push
into
les
roll
lret
push
cmp
adc
lret
or
aam
inc
lret
sbb
lcall
int
pop
mov
dec
ret
jae
mov
add
sbb
loopne
or
scas
inc
lret
pop
cld
mov
sbb
cmp
dec
and
mov
sub
stc
mov
jmp
icebp
xlat
xchg
jb
lret
je
dec
addr16
cmc
lret
push
sub
loop
cld
sub
movb
addl
idivb
mov
mov
push
and
adc
testl
inc
adc
fmulp
sbb
add
lods
push
push
or
mov
iret
and
sbb
sbb
xor
and
in
cwtl
jnp
mov
fldenv
fsubs
lods
nop
cmp
int
aam
dec
xlat
icebp
scas
lret
mov
pop
es
std
repnz
pop
in
out
xor
jmp
lret
cmp
xor
ss
les
gs
pop
pop
imul
push
sarl
clc
stc
jge
mov
daa
lret
xor
xor
out
push
outsl
lret
pop
sub
mov
sbb
stos
sub
pop
dec
push
jns
lret
push
jb
push
jecxz
cmp
sub
mov
add
pop
inc
cli
daa
xchg
pop
insl
inc
rcrb
or
and
lret
test
mov
sub
fsts
ljmp
sarb
lods
jg
xchg
push
js
mov
pop
sub
in
aad
stos
imul
push
lret
xchg
int3
lret
das
sub
ljmp
cmp
xchg
repz
into
lret
pop
xchg
das
incl
jecxz
dec
or
fisubrl
int3
mov
fimull
mov
or
lahf
mov
imul
daa
xchg
lret
fdivrs
cwtl
jb
jae
cmp
lock
push
push
xchg
stos
dec
inc
adc
sarb
jb
in
lret
pop
lcall
test
cli
mov
fs
xor
test
lret
adc
shrb
lret
rol
inc
pop
mov
and
push
pop
mov
std
pop
sub
in
int3
push
dec
stc
adc
fisubrl
hlt
mov
push
fdivrs
push
mov
lret
int3
insl
icebp
dec
adc
jnp
mov
xchg
lret
jae
inc
cmp
icebp
lret
mov
or
into
rolb
dec
mov
mov
mov
lret
ret
inc
mov
jne
mov
push
ror
sub
scas
jp
cmp
repnz
dec
mov
leave
jbe
inc
pushf
loope
lret
pop
fsubs
or
lret
or
or
shrl
lret
mov
fcmovne
in
mov
imull
jns
add
lret
shrl
shl
lret
cmp
or
aam
mov
adc
ljmp
add
pushf
fcmovb
dec
dec
sub
mov
stos
and
dec
repz
jae
mov
out
or
in
pop
stos
push
dec
mov
mov
push
outsb
lret
mov
out
and
lret
xchg
or
add
push
hlt
xchg
stc
lret
sahf
mov
outsl
shr
jmp
jne
lret
jl
hlt
mov
dec
sub
rcrl
and
xchg
adc
add
lret
outsl
mov
out
lret
push
push
xor
adc
and
lret
pop
xchg
or
mov
cmp
add
mov
mov
rorb
cmp
scas
mov
lret
add
xor
sub
dec
mov
or
lret
mov
aaa
and
sub
data16
clc
inc
cmp
mov
inc
jbe
ret
mov
jmp
fisubrl
subl
lods
cmpsb
imul
into
sub
mov
lret
psraw
push
mov
fcomp
jo
and
lret
ljmp
loope
movsb
sub
dec
out
adc
cmp
lret
popa
subb
out
jns
cli
adc
xor
mov
mov
shrb
imul
cmp
int
fisttpll
lahf
lret
cltd
xchg
lods
push
mov
lret
cs
pop
pusha
sub
test
stos
pushf
and
imul
sahf
insb
lcall
add
mov
lret
push
test
adcb
cmp
jmp
lret
mov
push
mov
cmp
lret
movsb
or
shrl
in
inc
mov
sub
mov
cmpsl
pop
fwait
xchg
inc
clc
cwtl
adc
and
fidivrl
cmp
rol
ljmp
leave
int3
jnp
addb
lret
push
data16
dec
dec
loop
cmp
es
ret
lret
cmpb
mov
or
test
xlat
dec
xor
dec
mov
ds
mov
insl
inc
cmp
cmp
rcr
mov
popf
push
rolb
push
das
cli
mov
mov
fwait
movsb
dec
mov
cmp
mov
aam
lea
lret
and
or
sbb
addb
inc
stos
leave
xchg
pop
push
rcr
lret
jecxz
std
mov
cmp
out
sbbl
sub
lret
dec
clc
xchg
or
hlt
lret
ret
fwait
pop
aaa
pop
inc
stos
ja
cmp
popa
or
push
jbe
mov
imul
cmp
mov
cmp
or
sarb
fcmove
dec
sub
pusha
cs
int3
lret
movsb
xor
inc
xchg
fisubrl
mov
out
or
mov
test
iret
and
arpl
fadds
sub
lret
mov
cltd
fmul
lret
frstors
jp
mov
inc
popa
mov
or
jo
mov
mov
jecxz
mov
negl
lret
cli
in
loopne
mov
xlat
xchg
mov
jae
inc
loopne
jg
into
rcrb
mulb
xchg
repnz
test
jle
aas
ret
inc
mov
sbb
pop
or
mov
add
mov
arpl
push
pop
es
or
cltd
idivb
popa
push
push
fidivrl
adc
sbb
lret
jo
cltd
insb
and
jmp
cmpsb
aam
lret
mov
adc
lret
cs
mov
mov
std
fildll
or
rcll
dec
mov
ja
loope
cmp
xchg
cmpsb
fmulp
cltd
test
adc
jge
popf
add
inc
dec
mov
adc
add
in
jno
lret
lret
lahf
adc
sub
or
rolb
out
stos
jb
negb
out
xchg
popa
stos
lret
push
jnp
hlt
jle
cmc
jno
adc
mov
fmulp
aaa
sbb
pop
pop
out
fstpt
std
xor
bound
je
jne
aas
push
xor
dec
xchg
pop
sbb
sub
std
xor
in
xchg
insb
adc
xchg
xchg
insl
mov
cli
jmp
inc
shlb
pop
lret
adc
lret
icebp
ret
xlat
lret
cmp
pop
das
je
les
xlat
divb
xchg
xlat
fmull
fsubs
sti
dec
jne
lret
adc
fwait
jp
rolb
sbb
inc
mov
lahf
mov
sub
fisubl
xchg
fwait
xchg
lret
out
jg
push
repz
lret
ss
mov
mov
inc
dec
rcrb
stos
inc
stos
gs
int3
in
ficomps
mov
and
lret
sub
cli
mov
push
jae
aas
push
out
lret
ss
adc
inc
sbb
sub
add
mov
adc
xorl
out
out
shlb
or
mov
jns
shrb
cli
jle
movsl
fcompl
pop
sub
lret
orb
ja
fcmovne
sti
mov
add
or
lods
orb
int3
add
jle
fnstenv
cmp
outsl
cmp
add
xorl
inc
cs
xchg
cmp
lret
jbe
xchg
enter
data16
imul
popa
mov
lods
rcr
add
in
add
xor
loopne
jo
mov
pushf
dec
lret
sahf
jne
dec
sub
and
cmp
cmp
jo
xchg
lret
mov
lods
pop
mov
or
pushf
mov
inc
sarl
xor
cmp
icebp
dec
std
test
mov
mov
or
fimull
sarb
out
lret
out
inc
xor
pop
shl
adc
insl
inc
pop
lods
lret
js
mov
sub
inc
adc
xchg
and
aaa
loopne
popa
data16
xor
and
inc
in
fimuls
je
cmpb
push
mov
into
aas
cmp
stc
jo
shrl
loop
fst
mov
dec
aas
fwait
and
sbb
cmp
and
test
inc
jp
push
dec
idivb
cmp
lret
daa
push
inc
repz
hlt
jecxz
int
dec
lret
inc
or
test
loopne
fcmove
pop
xor
gs
cmp
hlt
inc
ss
push
das
out
push
pop
add
ljmp
jmp
call
mov
jle
div
jg
lret
push
xchg
lret
mov
jp
loope
pop
lods
insb
stos
cli
es
incl
and
test
rorb
fistl
cmp
cmc
into
cmp
mov
pushf
adc
stos
cld
decb
push
lret
jle
insb
lret
xor
fldenv
pop
lret
push
jge,pn
in
lods
sbb
movsl
mov
mov
daa
in
notb
add
lret
imul
lret
push
mov
xor
subl
mov
xchg
lods
inc
in
mov
xchg
jmp
lret
adc
lret
iret
xchg
andl
vgetmantps
cmp
ss
xchg
stos
inc
inc
push
test
out
repz
or
mov
std
test
push
sbb
rclb
lahf
fmull
mov
lods
or
pop
sbb
lcall
data16
aad
push
mov
lret
ljmp
lret
ja
test
jbe
inc
sub
std
lcall
inc
rorb
xchg
inc
lret
sarb
mov
mov
jo
add
inc
lret
ljmp
int3
push
outsl
cwtl
cmp
cmp
lret
mov
cld
lea
nop
pusha
mov
sarb
sub
lret
mul
xor
jle
scas
push
icebp
push
xchg
gs
pop
or
rolb
cwtl
xor
aam
dec
mov
lret
push
inc
and
ss
jb
mov
dec
push
mov
sub
add
pop
mov
lret
adc
lret
jno
stos
movl
mov
sbb
lret
mov
mov
xchg
mov
stos
fwait
inc
mov
or
subb
cmp
aad
aad
bound
ror
add
fwait
sbb
cli
dec
and
inc
scas
loop
cld
adcb
sar
cltd
cmp
add
iret
push
push
or
test
lods
pop
sub
insl
lret
xchg
adc
push
cmp
lret
or
je
outsl
dec
es
lret
mov
pop
mov
push
add
shll
jne
xchg
fstl
rcl
jp
add
xchg
dec
aaa
lret
stos
ljmp
roll
inc
cli
pusha
and
les
inc
inc
pop
lret
xchg
adc
repz
cmp
insb
test
sub
scas
out
in
mov
jnp,pn
pop
lea
xor
shll
pop
daa
add
insl
jp
fsubr
lcall
std
enter
inc
shrb
push
lock
adc
fsub
jmp
sub
fistpll
inc
hlt
pop
les
lret
jb
rorb
das
and
stos
or
mov
or
ror
pushf
mov
xchg
lret
mov
pop
lret
jnp
popf
xchg
inc
mov
jo
inc
add
adc
xchg
push
jnp
lret
aas
or
or
add
ss
out
and
in
cltd
xchg
add
mov
push
cs
and
add
imull
push
and
jb
cmp
in
orl
mov
mov
cmp
lret
in
js
ljmp
mov
mov
lods
dec
push
cmp
nop
dec
cmp
cli
and
lea
enter
out
push
das
bnd
push
dec
push
xchg
jb
sub
lret
stos
outsl
out
iret
movsb
add
adc
sub
dec
xchg
test
pop
out
sub
shlb
in
mov
popa
and
lret
or
xchg
jecxz
sub
jmp
mov
insb
aas
adc
xor
mov
int
ds
lret
sarl
ja
lret
loop
lods
pop
lret
adc
rep
mov
outsb
popf
shrb
dec
cmp
mov
fmul
or
xchg
mov
xchg
adcb
push
xchg
je
mov
or
shrb
lea
mov
add
out
icebp
xor
and
mov
inc
pop
outsl
ja
push
dec
lret
cs
xor
and
mov
into
pop
push
dec
jnp
lret
add
repnz
shl
jne
mov
cltd
loop
sub
pop
outsl
cmp
xor
lret
leave
or
cli
scas
data16
mov
mov
xor
pop
lods
iret
push
sub
test
test
call
out
lret
ss
xor
xchg
lret
push
sarb
lcall
add
sbb
sahf
es
cli
aam
jle
leave
xor
cmp
lods
mov
sbb
in
ror
and
xchg
int
dec
sub
jb
sub
or
lret
add
outsb
and
jmp
mov
dec
dec
inc
test
inc
repnz
mov
inc
je
push
xor
xor
hlt
fadds
dec
sarb
mov
cli
adc
push
push
test
insl
ljmp
movsb
or
dec
lret
jmp
stos
clc
ds
sbb
jno
dec
xor
push
sti
or
fcmovnbe
fsub
lock
test
push
add
insl
or
sarb
fucom
in
xor
cli
lret
mov
xchg
subb
stos
sub
jne
fsubrl
stos
inc
cmp
sti
imul
jp
mov
pop
push
cmp
and
or
movsb
mov
jmp
sub
inc
add
mov
cli
adc
fldcw
shll
mov
fisubrl
xor
int3
cld
ss
and
or
leave
pop
sbb
dec
xchg
rcrb
cmp
fdivrs
xchg
and
lret
sub
pop
cwtl
lret
pop
jnp
and
lret
sub
pop
inc
mov
lret
push
sbb
xchg
stos
pop
cs
outsl
daa
sti
test
mov
stos
and
mov
lret
lret
in
test
sti
adc
xchg
cmp
sub
sub
stos
insb
jmp
rcrb
mov
cmp
add
and
mov
cli
mov
mov
imul
ja
inc
add
rorl
add
out
sbb
jnp
call
push
rcrb
data16
inc
or
sub
nopl
pop
sub
inc
es
and
mov
or
into
mov
xor
lods
lods
int
ja
lret
hlt
cmpsb
insl
dec
repz
sub
sub
and
add
xchg
in
aam
pop
lret
mov
adc
adc
dec
fists
pop
int3
inc
lret
mov
cs
hlt
cmpsl
inc
sbb
cmpsl
lret
clc
dec
fdivrl
pop
lret
mov
ror
pop
stos
outsl
fs
mov
dec
rcl
cmpb
mov
mov
scas
sbb
jb
xor
jge
push
sbb
pop
push
or
ja
out
and
and
es
lret
xchg
leave
test
jp
xchg
pop
dec
loopne
sub
sub
push
int
cmp
mov
adc
sub
bndldx
rolb
sahf
lret
cltd
movsl
mov
pop
stos
cmpsl
add
add
loope
ja
fcom
jne
sub
push
mov
addr16
ds
pop
sbb
mov
xchg
enter
lret
shll
fnsave
mov
add
and
popf
loop
rcl
inc
loopne
lret
adc
int3
lret
push
pop
sbbb
and
out
lret
xchg
pop
mov
inc
lret
in
stos
popa
jns
iret
lret
pushf
pop
sbb
adc
mov
jl
lret
les
cltd
into
xchg
lret
sahf
outsl
stc
or
xor
jns
sub
dec
lret
inc
sub
mov
outsb
sahf
xor
jecxz
adc
cltd
mov
shlb
sub
mov
mov
mov
rcrl
inc
lods
add
lret
adc
lret
std
dec
fs
lret
add
mov
subb
loope
push
lods
lret
inc
mov
stos
xor
lret
mov
xchg
lret
or
jmp
sbb
cmp
add
cmpxchg
push
inc
fwait
gs
lret
and
pop
lret
cwtl
outsb
or
mov
dec
sbb
fisubrl
sahf
stos
mov
cmp
stos
mov
xchg
icebp
lret
ss
lret
sbb
xchg
das
ljmp
or
enter
in
test
add
cmp
subb
das
mov
lret
mov
cmpb
xlat
ljmp
in
push
cmp
les
mov
mov
xchg
adc
lret
enter
cltd
lret
fwait
negl
mov
xchg
and
or
shlb
or
lret
mov
pushf
fwait
mov
arpl
pusha
ret
mov
add
je
or
loope
jle
jge
sbb
repz
sub
gs
cmpsb
fdivs
dec
mov
test
or
into
stos
sarb
dec
flds
scas
fmul
mov
xor
dec
ss
lcall
pop
mov
adc
xchg
popa
popf
lret
std
push
sbb
push
out
cmpsl
xchg
rclb
cmp
lret
bound
lret
xchg
push
dec
add
lret
mov
jle
insl
or
lret
out
push
jns
sbb
cmp
dec
xor
sar
add
sti
ljmp
das
scas
sub
inc
stc
mov
cmpsb
call
mov
test
subb
and
jp
mov
mov
dec
sub
lret
mov
dec
lret
aas
in
sbb
cwtl
mov
lods
inc
mov
or
fidivrl
add
lret
dec
movsl
pop
repnz
pop
cli
loopne
aad
pop
lcall
mov
push
scas
xor
push
cltd
push
xchg
mov
pop
dec
mov
mov
mov
mov
xor
cmp
popa
in
xchg
fucomip
mov
int3
jne
lcall
mov
es
lret
int3
lods
cs
ret
icebp
lret
jne
lock
cli
jae
sbb
sbb
xlat
scas
mov
lods
aad
rcrb
jns
lret
lahf
rcrb
jg
in
leave
mov
dec
jge
addr16
xchg
and
jge
pop
in
dec
fcmovu
jno
shll
lret
or
xor
adc
dec
inc
jno
iret
lret
pop
inc
push
popa
sbb
lret
mov
adc
insl
inc
jl
inc
sarb
xor
lret
cmp
outsl
jmp
dec
lret
dec
and
orb
daa
and
stc
xchg
sub
cltd
stos
xor
lret
mov
jb
cmp
cli
popa
jmp
not
fiadds
lret
hlt
int
xor
lret
and
add
push
push
lret
lahf
jo
lret
iret
jmp
inc
imul
adc
lret
fs
xchg
ss
aas
mov
lret
jle
popf
mov
test
dec
das
aad
fadds
push
and
int3
shll
movl
popl
lret
jmp
or
jle
fwait
cmp
cmpsb
lret
stos
fisubrs
fidivl
cmp
mov
int
xchg
mov
fsubs
xchg
push
mov
loope
dec
mov
or
jle
jne
cmp
enter
fsubrl
enter
test
out
cwtl
fisttpl
mov
inc
mov
js
or
xor
sbb
add
cmp
je
push
pushf
ds
lret
sahf
arpl
js
stos
test
je
xchg
enter
mov
sub
shlb
icebp
xchg
jbe
out
xchg
mov
int
mov
aam
in
sbb
shl
mov
into
mov
or
cmp
dec
push
into
ret
leave
lret
ds
shlb
mov
rolb
inc
sub
and
push
xor
insl
xor
lret
inc
mov
pop
xorb
in
add
arpl
mov
cwtl
fs
sub
andb
lret
icebp
sub
lret
cs
mov
and
js
lods
xchg
shrb
push
pop
scas
call
push
mov
sbb
dec
cli
inc
je
pop
jno
testb
lret
lahf
mov
dec
mov
rorl
stos
ljmp
bound
inc
or
sahf
mov
sub
xor
adc
fnstcw
in
in
pop
fdivrl
add
and
lds
fadd
call
xor
ret
dec
jp
shll
adc
cmpsl
mov
arpl
mov
lret
jns
shrl
fnstcw
insb
jmp
inc
jne
jns
adc
movsl
lret
pusha
cmpsl
push
rcl
lret
sub
mov
push
stc
xchg
cltd
add
fcoms
jno
bound
mov
sbb
or
or
xlat
mov
sub
pop
mov
push
decl
test
mov
shl
jecxz
pop
and
dec
jo
ja
lods
cmp
rcll
push
in
cmpsb
xchg
lret
imul
dec
aas
mov
dec
fwait
insb
fsubr
stc
inc
pop
lret
ret
sbb
aaa
sarb
jbe
insb
mov
lret
cmpsl
and
ror
adc
cmp
dec
stc
xor
lret
pop
cmp
cli
inc
testl
scas
in
xchg
idivb
movsb
lret
ficomps
mov
shl
pop
mov
insl
cltd
sub
xor
cmp
aad
mov
inc
lcall
lret
xor
lret
mov
lret
xor
adc
lret
stos
mov
add
lret
leave
xchg
cmpsl
mov
jno
push
cld
jnp
dec
scas
push
xor
popa
xor
pop
ret
ja
test
popa
jno
xor
or
mov
mov
cs
insb
pop
lds
out
dec
popa
lret
es
sbb
ret
inc
cmp
xchg
pop
pop
sti
mov
int3
jge
cmc
pinsrw
in
sub
sbb
adc
sbb
popf
lock
rolb
lret
sbb
stos
xor
lret
lahf
push
add
ss
xor
lret
or
sbb
mov
lret
adc
aam
iret
cmp
lret
jg
pop
xchg
popa
cmp
adc
out
rol
stos
call
into
ret
in
orl
movsl
mov
outsl
rcr
jp
mov
sbb
pop
lret
push
add
loopne
imul
lret
sub
cmp
fiadds
ss
stos
repz
fmul
dec
cmp
rcrb
out
aad
dec
cmpsb
jae
cmp
lret
in
test
mov
rorb
lret
push
test
pop
cmpsl
xor
cmp
add
cli
rcrb
push
shlb
loopne
adc
sbb
jl
mov
jnp
fcoml
rcl
add
lret
jo
mov
cmp
idiv
cli
push
pushf
xor
mov
sbb
lret
jno
cld
mov
push
fsubp
inc
add
mov
cmp
out
cwtl
rcl
pop
adc
inc
pop
insl
pop
cmp
out
test
sub
lret
lds
push
add
lahf
mov
loopne
inc
inc
adc
jbe
cmp
cwtl
popa
xchg
lret
into
stos
movsb
adc
jno
popa
and
neg
dec
lret
push
scas
jne
scas
jnp
ret
lcall
sti
inc
lret
in
xchg
pop
mov
mov
out
or
and
repnz
ret
dec
dec
push
lret
adc
pushf
ror
mov
or
cli
or
inc
rorl
nop
cmp
dec
or
mov
stos
ffreep
fidivl
rolb
xchg
inc
pop
movb
lret
jge
pop
fstl
jo
dec
pop
ret
arpl
addl
test
rorb
popf
pop
bswap
pop
jae
push
fisubrl
jo
ror
push
jbe
cli
xor
push
add
mov
les
lds
and
or
xchg
jle
mov
push
jns
pop
into
lock
ret
pop
test
lret
pop
fcoml
push
jnp
scas
movsb
mov
cmpsb
ds
lret
inc
lods
or
fcomps
inc
lret
or
sub
jge
or
jne
xchg
repnz
sti
inc
push
push
jae
enter
fwait
and
mov
mov
lds
xchg
lret
test
mov
push
jns
aaa
push
mov
cli
in
gs
push
out
push
ret
pop
jmp
lret
shr
adc
stc
mov
fwait
inc
push
test
mov
int3
inc
push
fmull
fisubl
xor
mov
mov
pop
jge
cmpsb
shrb
cmp
push
cld
lret
js
push
mov
popf
dec
sub
mov
mov
rcll
stos
mov
cmp
shlb
and
cwtl
jns
mov
or
jnp
xchg
inc
sbb
lret
mov
aad
pushf
imul
push
addr16
jg
gs
iret
lret
push
mov
popf
mov
stos
cmpsl
test
dec
out
xor
lret
or
cli
pop
loope
lret
sub
aam
add
insl
mov
loop
mov
dec
or
pushf
lret
sbb
sarl
push
lret
push
flds
jmp
insl
sti
hlt
lret
sbb
js
lret
xlat
stc
mov
aaa
adc
cli
sarl
fisubl
jno
inc
xchg
dec
cltd
push
mov
add
pop
out
dec
pop
gs
lahf
push
inc
and
imul
sbb
fcomip
lret
shlb
daa
mov
dec
jge
nop
int3
adc
lret
outsb
jg
mov
jne
push
mov
xor
fs
insb
jmp
lret
in
lahf
pop
ja
sub
aam
lret
xchg
mov
inc
dec
aam
push
enter
shr
andb
lret
cli
pop
adc
nop
ljmp
xchg
push
lahf
pop
cs
pop
popf
adc
sbb
out
xor
loop
xor
lret
sub
out
div
movsl
lret
sbbl
lret
and
add
js
rorb
push
leave
mov
lret
into
xchg
cs
and
les
leave
jns
dec
mov
xor
movsb
fwait
adc
lret
jmp
outsb
sub
dec
mov
imul
jno
out
pop
repnz
lret
xlat
mov
lret
ret
and
jne
mov
mov
lret
mov
pop
mov
sbb
mov
or
lret
push
push
adc
sub
dec
xor
ljmp
cltd
mov
inc
pop
js
sbb
out
lret
and
lret
ret
mov
lret
ljmp
push
pop
popf
or
push
mov
jmp
xor
lret
add
lea
cli
mov
xchg
push
adc
addl
mov
gs
xor
jbe
cmpsb
cmc
xchg
icebp
mov
sub
sub
cmpsb
insl
cmp
mov
movsb
aad
jp
push
stos
mov
test
aas
inc
insb
push
neg
pop
lret
js
cmp
in
pop
jo
sub
cli
outsb
lret
call
fcmove
shll
dec
loopne
popa
sbb
sub
lret
ret
scas
ret
sahf
popa
icebp
cli
aad
jecxz
sarl
jo
xchg
pop
sub
jns
dec
sub
mov
xchg
aam
mov
xor
lret
mov
xlat
lret
popf
cmp
inc
movsl
lret
aas
mov
jp
out
rcll
inc
insb
push
rcll
lds
shl
lret
mov
cmpsl
fwait
lahf
jmp
fwait
mov
lret
rcrb
xor
push
mov
cs
lret
and
fisubrl
adc
sbb
rorl
or
pop
inc
xor
lret
add
push
daa
lret
sub
sub
testb
xlat
jns
sbb
dec
int3
rorb
add
push
xlat
fwait
pop
dec
pop
test
insl
test
mov
mov
pop
sbb
testb
mov
mov
insb
lret
jg
pop
iret
cmp
cmp
cmc
pop
mov
cmp
aas
jns
daa
cli
leave
lret
add
cmpsl
lret
fcmovb
movsb
push
pop
push
js
fnstenv
adc
push
xor
neg
outsb
ret
push
push
iret
xchg
cmovs
adc
mov
mov
mov
stos
sbb
cmp
push
roll
or
xchg
dec
loop
xor
fsubl
in
je
push
cmp
push
mov
int
or
cmp
imul
lods
mov
add
pop
cmpsb
xor
jle
inc
jg
push
sti
push
xor
fisubs
cmp
push
pop
ljmp
lret
pop
add
push
dec
inc
cli
dec
xchg
aas
subb
jne
into
dec
add
jno
cli
pop
add
data16
xlat
pop
mov
lock
lret
inc
shlb
lret
dec
jae
mov
fsubrl
jne
pop
push
push
mov
cmp
mov
mov
mov
jae
fdivs
lret
xlat
sub
inc
push
addr16
out
out
and
mov
sub
loop
roll
rorb
cmp
hlt
aad
ss
pop
mov
sbb
or
cmp
sbb
pop
aas
lods
aam
mov
lret
cmp
dec
hlt
add
dec
outsb
xchg
and
into
mov
insb
ficoml
test
repz
lcall
aad
adc
dec
fdivrs
js
mov
jbe
push
lret
in
mov
movb
add
mov
into
int
scas
popa
cli
pop
push
fidivrs
ljmp
sub
lods
jnp
pop
lret
mov
in
cmp
push
out
rorb
push
mov
addr16
rcr
push
ret
fst
mov
add
inc
mov
ljmp
xchg
cmp
aaa
jae
pop
popa
js
jb
arpl
cmp
mov
movsb
clc
fists
aad
jmp
adc
lds
xchg
fldln2
lret
ds
arpl
lret
push
test
push
ss
and
imul
lret
movsb
insl
das
shrl
jl
popf
fildl
mov
jae
and
rclb
mov
lret
sub
roll
aam
fisubl
and
lods
xor
jb
and
mov
mov
lret
mov
pop
mov
bound
into
add
stc
cltd
add
pushf
mov
push
jo
loop
gs
xchg
lret
push
loopne
call
outsl
xor
stc
aad
ficoml
mov
popf
fs
dec
mov
rol
popa
add
test
sti
fcmovu
pop
dec
pop
add
cmp
ror
jle
aas
loop
mov
jmp
push
push
cmp
out
in
dec
pop
call
xchg
mov
addr16
sarb
jecxz,pt
in
lret
mov
push
add
insw
es
rolb
xchg
lret
mov
popa
lret
or
lret
lods
mov
and
xchg
sbbb
jne
int3
test
cmpsl
shlb
mov
mov
call
push
lcall
adc
mov
mov
push
or
ljmp
ljmp
es
add
jo
popa
out
xor
cli
addr16
cmp
sbb
lahf
jno
and
mov
mov
in
aam
cmp
inc
xchg
mov
or
leave
fistps
fdivl
out
cli
gs
push
loopne
pop
aad
bound
fcoms
mov
insb
lret
jbe
dec
xor
mov
mov
push
xor
sbb
pop
mov
and
imul
lea
mov
lret
pop
enter
andb
pop
aaa
dec
in
lret
dec
push
lret
xchg
lret
sahf
push
xchg
in
xor
lret
dec
ss
sub
sbb
int3
sub
jmp
jnp
cmp
and
rolb
out
lret
push
cmpsb
dec
test
sub
movsl
pop
mov
mov
aam
aas
stos
insb
data16
insb
mov
lcall
stos
out
daa
shlb
imul
jmp
cmp
mov
dec
mov
lretw
notb
lret
or
sahf
or
adcl
scas
dec
cmova
pop
shr
pop
test
add
lret
pusha
cmp
and
subb
mov
rcrb
ret
test
lret
fcmovu
and
sbb
jnp
jno
pop
fisubl
push
xor
test
push
add
mov
xchg
popf
movsl
stos
repz
aad
out
jnp
dec
mov
xor
sub
iret
sbb
dec
addr16
faddl
lret
cwtl
xor
fcoms
lret
data16
adc
shrl
daa
fcoml
add
sub
shrb
addl
enter
in
ja
sti
xchg
pop
dec
push
call
xor
lods
sub
filds
mov
lret
xchg
or
mov
fs
jo,pn
lds
add
sbb
sbb
shl
jno
xlat
lret
and
leave
rclb
lret
ds
mov
cmc
test
mov
bound
loope
lret
and
dec
in
lea
test
int
mov
popa
pminub
or
push
add
xchg
ljmp
stos
inc
sub
sbb
mov
pop
cwtl
mov
push
dec
mov
dec
mov
mov
test
lret
ror
lds
clc
inc
jo
push
mov
adc
lret
call
addr16
or
lret
adc
jle
inc
sub
movsb
lret
and
inc
fs
out
inc
hlt
push
aad
xchg
stos
add
inc
xor
ret
pop
lret
mov
add
lret
cmc
jae
inc
insl
pop
mov
insb
fdivrp
lahf
out
mov
xor
int
lret
mov
daa
insl
xchg
dec
dec
mov
mov
ljmp
shlb
cmp
push
scas
bound
int
ljmp
inc
add
inc
mov
test
push
pop
inc
sub
adc
loopw
push
xchg
lret
jecxz
int
inc
movsb
fwait
mov
xchg
sarb
jmp
mov
mov
nop
cwtl
sbb
lret
addr16
aaa
ja
xchg
lret
dec
or
cli
xchg
shlb
ret
dec
lret
imul
repnz
mov
inc
xchg
xchg
stos
xchg
outsb
repz
insb
shr
dec
cs
jmp
pop
add
outsl
xchg
mov
push
lods
adc
repz
ja
pop
push
jno
dec
dec
movsl
ror
lock
cmp
dec
lret
int3
das
testb
sub
les
xchg
arpl
jns
rcrb
cs
inc
push
cmp
imul
mov
js
je
xor
or
inc
lods
lret
and
or
or
cmp
rorl
scas
inc
cli
or
shl
ficoms
rcll
fstpt
mov
das
aaa
mov
mov
pop
jno
dec
out
rolb
daa
mov
cmpsl
cmp
ja
xchg
xor
ds
cmp
cwtl
adc
or
repnz
pop
mov
xchg
inc
sbb
aas
cmp
push
testb
adc
add
dec
pop
and
mov
lret
sbb
xor
jle
add
je
or
stc
adc
or
lret
aad
cmp
mov
loope
test
sub
and
fmuls
cmp
fidivl
insb
scas
outsl
popf
or
dec
jo
fwait
inc
ret
and
and
je
mov
lea
das
test
xchg
add
movsl
insl
xchg
pop
icebp
mov
mov
inc
orl
mov
cmp
dec
loopne
lea
out
jl
xor
sbbl
dec
popa
pop
and
mov
lret
jb
sarb
jo
lret
dec
mov
call
jne
push
imul
xor
sbb
aad
xchg
test
fdivs
lret
or
jl
movsl
lret
fnsave
mov
leave
lret
fistpl
mov
jmp
add
dec
lret
fistl
inc
xchg
or
aad
enter
jnp
in
clc
insl
hlt
pop
cmpsb
add
js
gs
dec
shrb
lret
pop
adc
into
loopne
test
ja
jecxz
add
fcmovbe
in
insl
pop
negb
xchg
jle
push
add
lret
test
mov
das
fldl
ds
sti
dec
sbb
cmp
cmp
into
sub
test
lret
fsts
and
lret
or
aam
pop
loopne
pop
mov
mov
pop
arpl
cmp
or
sbb
stos
lcall
mov
in
mov
mov
mov
cli
cmpsb
adc
push
negl
fcoms
ds
rorl
and
neg
pop
in
xchg
xor
gs
mov
inc
lret
out
or
xchg
adc
push
pop
xor
pop
mov
pop
sbb
dec
mov
pusha
mov
cmp
ret
std
inc
es
fldcw
mov
cmp
lret
add
out
dec
faddl
das
inc
or
nop
pop
or
test
or
lret
mov
movsb
cmpsl
stos
in
lretw
add
and
popa
lret
lcall
pop
sub
lods
pop
add
sbb
inc
lret
insl
outsb
cltd
xchg
mov
add
rcrb
into
dec
and
outsl
loopne
sub
loop
fcomps
dec
lret
xchg
movsl
imull
ret
cmp
sar
dec
add
pusha
adc
cmp
lret
cltd
icebp
mov
fwait
lret
imul
arpl
mov
xor
and
jle
cmc
lcall
jecxz
push
mov
xor
and
nop
dec
into
jge
and
xchg
cmp
stc
sub
dec
jmp
pusha
cmp
fisubl
enter
test
stc
std
dec
and
mov
lock
mov
rcrb
ds
int3
pop
lahf
lods
lret
je
mov
pushf
inc
lret
push
or
cwtl
aas
mov
lahf
cli
inc
cmp
pusha
enter
out
lret
hlt
cwtl
orps
dec
shl
mov
push
lret
dec
out
sbb
mov
xchg
rorl
mov
pop
lahf
jmp
outsb
sbb
adc
ret
cmc
pop
addr16
dec
push
fwait
mov
adc
push
outsl
dec
fldz
pop
or
fcoms
daa
xchg
mov
mov
lret
or
cmp
push
js
stos
loope
jbe
push
clc
cli
dec
std
xor
clc
pop
mov
lods
and
orl
push
clc
ror
aam
paddsw
sbb
or
or
and
dec
jmp
push
addl
shlb
pop
mov
out
push
add
mov
xchg
mov
daa
lahf
sbb
aas
or
fs
xchg
lret
lods
sbb
int3
cmp
dec
xchg
cs
pop
pop
test
add
test
ja
xchg
and
insb
sti
out
ret
movsl
inc
cmp
jno
jecxz
push
and
movzbl
xchg
cmpsl
ljmp
mov
push
pop
lret
add
fimull
cmc
lret
cli
ds
mov
push
lret
xor
inc
fs
inc
jno
cmp
xchg
faddl
inc
cli
icebp
jmp
jp
test
xchg
in
nop
lret
mov
dec
les
ss
in
pop
push
lret
imull
inc
xchg
lret
push
pop
pop
icebp
xchg
es
jne
cmc
sub
fcmove
pop
dec
ret
jmp
lods
lret
add
ja
jge
fmulp
sbb
sbb
or
inc
push
ficompl
push
cltd
jge
arpl
lcall
lret
ja
popa
pop
leave
loopne
repnz
subl
inc
in
out
push
push
lret
dec
dec
enter
lret
sbb
out
inc
or
mov
cmp
mov
jecxz
sbb
daa
cs
fsts
lret
mov
adc
jno
stc
inc
lret
dec
in
mov
test
fs
rclb
push
stc
test
jecxz
sbb
jmp
jae
lret
and
mov
dec
xor
inc
movsl
jbe
mov
js
mov
push
rcrb
stos
movb
jmp
adc
dec
jle
lret
cld
jno
dec
sbb
adc
ss
orl
pusha
push
mov
fdivs
mov
mov
add
incl
dec
lret
ret
out
xor
pop
imul
mov
loope
inc
dec
pop
movsl
dec
push
lret
fstps
cmp
loopne
lods
jg
cs
adcl
lret
jno
fs
test
adc
xor
int
shr
lahf
lret
cmp
ds
mov
popl
in
lret
sahf
cwtl
and
dec
sub
dec
xchg
pop
cmp
out
stos
flds
clc
lods
test
fwait
lret
push
inc
stos
add
lret
jg
xchg
lahf
pop
cmp
lock
shl
rolb
inc
test
fsubs
lret
jnp
push
lret
xchg
lret
cmpsb
loop
push
adc
jp
jge
xchg
shlb
lret
sbb
xor
mov
lret
test
stos
stos
mov
rorb
cmp
movb
inc
aaa
mov
fcmovbe
jl
test
pop
in
stos
cmpb
dec
dec
cmpb
dec
das
fcmovbe
in
push
pop
xor
into
fmul
mov
in
stc
push
ljmp
incb
push
jno
stc
lret
pop
push
push
inc
sub
adc
add
imul
mov
mov
cltd
inc
cmp
and
cwtl
pop
mov
lret
loope
lods
mov
sub
int3
pop
test
xchg
hlt
mov
aad
fwait
adc
jge
inc
xchg
fcoms
dec
aad
and
mov
cmc
leave
or
jo
sbb
xchg
cmp
aad
add
lret
jno
loopne
stc
lods
cmp
pop
adc
aas
push
pop
mov
sbb
fidivs
movl
cmp
lret
adc
sub
mov
hlt
and
das
cmp
aam
pop
add
cmp
adc
and
xchg
cmp
ljmp
lret
hlt
aam
sbb
mov
call
push
lret
inc
pop
jae
loope
lret
fists
js
test
inc
mov
pusha
jns
sbbl
dec
and
out
xlat
and
add
inc
ss
jo
mov
inc
lret
int3
je
push
dec
dec
xor
push
stos
mov
into
sbb
pop
sub
je
test
mov
mov
push
int3
flds
lret
leave
push
jbe
inc
and
bound
repz
popa
pop
xchg
pop
and
test
sbb
jmp
inc
inc
or
fldenv
add
lret
adc
insl
adc
lret
jl
jnp
nop
lret
jae
or
gs
mov
fwait
add
xor
xlat
jbe
add
mov
and
loope
mul
push
mov
inc
mov
push
sbb
mov
fwait
cmpsl
cmp
jo
lret
sahf
or
xor
lret
xor
js
dec
push
lret
jae
mov
mov
xchg
notl
insb
or
push
test
aas
cld
cmp
mov
lock
xchg
xor
mov
or
int
or
out
mov
into
fidivrl
jb
mov
xchg
ftst
add
xchg
jp
dec
loopne
fs
mov
inc
and
shrb
fisubrl
or
lret
sbbl
add
and
lret
shlb
lret
imul
push
xchg
clc
scas
lret
mov
lret
loop
xchg
cltd
lret
cwtl
sub
fcmove
pop
sub
test
sbb
out
sbb
je
inc
xchg
pop
and
rorl
dec
rorl
push
ret
fnstsw
sbb
inc
aad
dec
push
jne
shll
andl
or
push
rcrb
xchg
cmp
mov
or
jae
jle
mov
rorb
cmp
cwtl
adc
push
imul
add
dec
mov
mov
pushf
sub
fmuls
in
lods
je
mov
push
in
in
stos
lret
add
stos
mov
ret
mov
scas
push
cmp
enter
int
jo
and
insl
cwtl
nop
insb
lret
xchg
scas
or
mov
lret
xchg
mov
lea
push
lret
aaa
cmp
dec
dec
jne
popa
cltd
push
fmull
pop
aaa
dec
out
aad
fbstp
inc
xchg
cli
int
in
dec
add
xchg
lahf
cmpsb
lret
gs
mov
shlb
jmp
lret
mov
stos
push
stc
cmp
jno
and
fwait
aam
sub
mov
stos
pusha
iret
push
hlt
shlb
lret
jns
repz
ss
lret
jnp
aam
cli
mov
inc
mov
test
rorb
ljmp
pop
pop
mov
loope
mov
mov
lret
lahf
and
int3
int
cwtl
pop
sbb
lret
pusha
repnz
inc
cltd
lret
and
xor
xor
jb
dec
lret
out
and
ds
push
pop
std
cmp
sub
add
icebp
xchg
fsts
lds
pop
je
mov
sub
movsl
popa
cmp
sub
push
lret
sarb
cmc
inc
sti
popf
jae
lock
lret
and
stos
loope
es
imull
cmp
mov
bound
outsl
pop
shll
mov
and
xlat
rcr
lret
mov
push
lea
test
popa
xchg
lret
jecxz
das
ficoml
fimull
ret
push
cld
pop
dec
repz
or
cli
lret
int3
fisubs
cmpl
dec
adc
fimull
jge
cmpsl
mov
pop
jns
enter
mov
push
inc
adc
push
inc
and
mov
js
ror
sbb
test
dec
lea
pop
outsb
mov
push
jl
lret
push
adc
sub
lret
and
mov
call
pop
cs
add
lret
repnz
inc
aad
lret
out
mov
repz
sub
nop
lret
mov
xchg
sbb
sbb
shll
push
out
out
fistpl
jl
enter
movsb
ds
fwait
pop
adc
outsb
mov
lret
sbb
stos
cmp
fcmovu
ret
imul
push
jae
sub
lret
adc
ljmp
mov
and
mov
mov
inc
add
lret
push
out
rep
lret
jmp
fnsave
lret
sub
jge
jge
subl
lret
mov
icebp
pusha
popf
movsb
lret
xchg
lock
ss
lret
jle
dec
cli
jns
stos
mov
xor
mov
stos
decl
shrb
fwait
or
jns
adc
push
mov
mov
mov
stos
std
cmp
cli
ja
lahf
in
scas
sahf
lret
ss
outsl
fldt
mov
fidivrs
and
int3
jecxz
lret
adcl
stos
push
lahf
and
push
sbb
call
decl
pop
lock
sbb
enter
pop
fstps
push
jge
or
push
outsb
pop
int3
rclb
or
xor
into
push
mov
xor
dec
cmp
es
push
pop
les
negl
sub
fs
in
nop
or
imul
lret
movhps
push
jg
lret
lea
xor
mov
and
pand
lret
dec
push
mov
xor
mov
addb
ja
jo
xchg
pop
stos
lret
out
mov
cmp
cltd
testl
cmp
in
aam
xor
call
cmp
icebp
add
and
and
ljmp
inc
mov
pop
lret
insb
mov
cli
imul
mov
into
adc
xlat
enter
xor
cmp
repnz
dec
shr
pop
sub
and
or
cmp
aaa
mov
fmuls
fldpi
sbb
cmpsl
inc
fistps
mov
dec
jne
jno
ljmp
into
push
aas
ficoml
lret
add
and
dec
push
fcmovne
hlt
mov
stos
pop
shl
shll
sbb
popf
cmp
inc
push
pop
std
jbe
lret
jns
xchg
into
sub
cld
xchg
inc
mov
sbb
js
add
stc
cmp
pop
adc
push
dec
into
xor
dec
nop
jmp
mov
adc
push
in
cmp
imul
or
imul
icebp
inc
lahf
xor
adcb
mov
std
das
lret
lods
and
lret
jmp
push
lret
enter
cld
add
xor
lret
inc
xchg
mov
dec
or
xlat
movsl
ficompl
mov
int3
push
mov
jmp
lret
loopne
repnz
jb
popa
jns
xchg
js
lret
and
sbb
or
cli
mov
dec
dec
mov
fcompl
loope
js
lret
push
xor
mov
ret
lea
into
jl
ds
cs
adc
push
inc
popf
icebp
dec
shlb
in
repnz
lret
jae
push
clc
aad
adc
shlb
dec
add
mov
int3
test
mov
inc
lret
and
fimull
cmp
dec
cmp
inc
inc
mul
xchg
dec
mov
mov
lods
lret
fadd
movsb
or
jbe
lods
lret
mov
add
movsb
jecxz
jge
lret
cltd
in
call
push
fdivrs
inc
xor
das
xor
daa
out
fsts
lock
and
xchg
jnp
int
outsl
xchg
fstpl
cmp
mov
jmp
aas
int3
lret
mov
pop
mov
mov
mov
loop
imul
push
imul
cli
ror
cmp
in
aam
xchg
fcmovne
cltd
sbb
enter
lret
mov
addr16
sub
jno
push
jmp
jg
dec
or
sahf
inc
jo
mov
push
rcrb
das
cli
aam
jp
lret
adc
ss
data16
mov
es
ljmp
dec
lahf
xor
mov
cmp
xchg
js
jne
or
push
xor
test
out
pop
cld
gs
mov
push
mov
mov
dec
cld
faddl
rcll
stos
lret
test
sti
cmp
mov
dec
pop
lods
clc
lret
pop
outsb
lea
popl
lret
dec
faddl
ds
cmp
inc
negl
test
dec
mov
xchg
out
cltd
cmpsb
lret
test
ror
jo
cli
cmpsl
enter
mov
or
mov
call
lret
mov
jmp
aad
xorl
js
mov
or
dec
lret
stos
mov
lret
add
sub
cltd
mov
imul
popf
lret
rorl
rolb
outsb
mov
xchg
aam
ret
mov
addr16
hlt
mov
lods
sub
push
and
add
sub
out
in
cwtl
pop
add
and
lret
shr
ljmp
mov
jg
jp
inc
xchg
rorl
sbb
xchg
cli
into
mov
int3
jnp
lret
popf
push
xchg
test
pop
das
xor
data16
inc
mov
sbb
sbb
sbb
xlat
mov
ror
lods
cmp
lret
repnz
sub
push
mov
push
push
add
pop
mov
cmp
lret
cmp
xor
mov
lret
insb
aad
dec
int
out
bound
lret
nop
pop
xor
pop
lret
ud1
insl
sahf
test
popa
call
push
sbb
jns
fcmovnbe
mov
jno
test
cmp
mov
inc
in
in
sub
aam
fisubrl
test
push
ljmp
lret
jo
mov
lahf
sbb
cli
out
and
call
jmp
stos
fistl
icebp
aam
out
psadbw
fs
cmp
sti
out
xchg
jge
ret
out
mov
and
jmp
aam
inc
ret
stos
lret
pop
fcmovbe
sbb
icebp
sub
stos
fnsave
cmp
addr16
repz
mov
fcomps
icebp
push
pop
rorl
push
cmp
jns
mov
out
dec
rcrb
mov
jge
pop
pop
arpl
call
subb
in
mov
inc
repz
iret
ret
cmp
add
pop
jbe
fs
aad
addr16
or
stos
dec
hlt
inc
fmulp
ja
mov
and
sub
arpl
jb
xchg
mov
outsl
sbbb
daa
ficompl
into
ret
pop
jecxz
lret
jnp
sub
cmc
cmp
dec
lret
ret
fdivrp
lret
adc
xor
addr16
ds
in
sbb
mov
lahf
xchg
in
pop
jp
repnz
mov
mov
daa
lods
xchg
xchg
loop
std
push
xor
in
xor
mov
lret
sbb
scas
push
mov
outsl
or
or
inc
push
js
jmp
sbb
lret
imul
adc
fpatan
pop
ds
or
cmpl
call
stos
inc
jo
fnstsw
in
xchg
call
out
bound
ret
rcl
cmpsl
xchg
adc
mov
rol
and
mov
mov
or
loopne
pushf
cmpsb
lock
lret
sub
or
fwait
pop
add
xor
lret
sub
sbb
lret
mov
arpl
or
cli
sti
pop
dec
adc
mov
jge
and
push
ds
inc
stc
push
icebp
sbbb
inc
repnz
bswap
push
rorb
inc
lods
sub
xlat
lret
loopne
xchg
loop
mov
sub
xchg
inc
jne
sub
mov
cwtl
or
js
fcom
pop
pusha
lods
mov
jmp
imul
dec
ret
push
lcall
push
rcrb
mov
inc
gs
imul
loopne
dec
das
fs
push
testb
push
repnz
or
fidivrl
sarl
fcoms
stc
sarl
loope
push
arpl
pop
jmp
mov
cmc
adc
test
adc
jl
xor
inc
rclb
lret
jp
decb
mov
loop
test
lret
sbb
lret
cmp
movsl
mov
lret
add
mov
and
dec
sti
adc
mov
pop
mov
xor
mov
loop
mov
lahf
aad
cmp
mov
addr16
lret
es
mov
enter
mov
lock
push
xchg
lret
insb
popf
pop
mov
cmp
shlb
lret
cwtl
mov
mov
loop
push
cs
lret
in
orl
shr
lret
fdivr
inc
shlb
xor
pop
leave
add
subb
sarb
lret
inc
mov
mov
jl
rclb
dec
xchg
lret
enter
stc
out
pop
push
sub
mov
lret
stos
mov
cwtl
cli
push
in
jge
xorb
pop
dec
idivl
push
sbb
push
cli
add
inc
xchg
or
lret
fidivrl
sbb
lock
push
int
mov
lea
xor
mov
lret
mov
adc
dec
sahf
nop
mov
out
cmpsl
sbb
repz
add
sub
pop
jae
aaa
pop
mov
sub
mov
and
lret
sbb
gs
mov
into
add
dec
mov
outsb
adc
cs
cmp
in
xchg
shrl
lret
pop
stos
addr16
cmp
inc
jge
jmp
adc
sub
rclb
xchg
sbb
xor
dec
lret
fcoms
lret
mov
push
add
testl
sbb
cwtl
cmp
push
adc
fwait
adc
and
cmp
inc
adc
int
sarl
cld
dec
arpl
fiaddl
rcrb
sbb
lret
popa
movsl
and
dec
lret
ss
dec
jnp
shlb
fidivs
add
push
mov
out
insb
adc
popf
sub
psllq
sub
ss
xlat
cld
cmp
fimull
test
arpl
insl
mov
sbb
cmovne
rcl
push
xor
lret
fcomps
ficompl
push
fstpl
fs
inc
adc
popf
or
adcl
or
lret
lds
lret
adc
nop
shlb
inc
int
xchg
rorb
into
xlat
dec
push
rolb
jmp
call
lods
je
fwait
rcrl
mov
cmpsl
clc
mov
xchg
add
mov
sub
out
push
fisubl
aad
int
lret
lods
in
mov
cmp
xor
mov
sbb
lret
loopne
movsl
lret
pop
add
xor
icebp
push
cli
cs
adc
jg
pop
xchg
jp
pop
cmp
sbb
push
push
mov
scas
mov
std
jnp
pop
or
xor
dec
mov
bound
stc
xor
call
jnp
jo
lret
das
xor
pop
xchg
jb
add
into
xor
xchg
mov
fs
xchg
call
rclb
pop
test
mov
das
xlat
ljmp
into
aad
or
mov
lock
jl
mov
loop
in
int3
call
jp
inc
jp
shrb
popf
and
bound
mov
stos
mov
in
rol
sbb
lods
sbb
inc
hlt
mov
cmp
cs
xchg
sarb
push
mov
push
pop
mov
popf
mov
leave
lahf
stos
inc
pop
hlt
add
xchg
dec
pop
push
jo
lret
and
out
xchg
test
outsb
lds
pop
out
adc
dec
mov
dec
scas
mov
pop
adcl
lret
mov
ja
and
outsl
loop
xchg
jbe
dec
mov
es
std
lret
scas
fwait
fs
mov
lret
and
push
mov
ljmp
fmuls
inc
lret
mov
aaa
popa
adc
inc
push
fmulp
dec
xchg
xchg
add
add
xor
and
lret
jle
clc
xchg
mov
js
xchg
fsubrl
jae
dec
rorb
fwait
lods
gs
push
sbb
push
stc
mov
std
mov
imul
lcall
lret
repnz
leave
sub
sub
xchg
int3
mov
xchg
rorb
rorl
cwtl
stos
jge
cmp
and
pop
lahf
lret
in
sti
fldt
lret
jmp
jecxz
jge
lret
pop
add
mov
lods
push
out
mov
inc
xchg
fs
lret
mov
lret
out
cmc
scas
lea
fsubrl
fcomps
sub
dec
fdivrp
pop
dec
and
xor
mov
push
lret
sbb
mov
adc
jb
xor
push
cmp
into
nop
lods
dec
shll
sbb
roll
add
rorb
in
iret
lret
movsl
and
lcall
dec
mov
pop
adc
fcomps
aas
movsb
cmp
stos
es
rcr
add
mov
mov
mov
add
jo
rorl
shlb
stc
add
cmp
nop
mov
lret
and
lret
shrl
testl
stos
xchg
pop
inc
int3
add
mov
xchg
push
pop
lahf
filds
push
or
inc
pop
ljmp
push
fidivrl
mov
xchg
mov
lret
push
push
scas
mov
ljmp
jns
lcall
pop
enter
leave
and
sbb
ljmp
imul
lret
mov
pop
push
je
lret
repz
inc
and
popf
xor
cmpsb
lret
mov
sub
push
sarb
adc
fdivr
mov
lods
push
movsb
jge
sarb
mov
fwait
cmpsb
ja
mov
gs
cmp
loop
andl
lret
xlat
daa
dec
and
int3
ds
adc
lahf
loope
fiaddl
and
sub
cmc
fidivl
gs
fmulp
rclb
mov
lods
jb
lods
rcrb
inc
lret
arpl
lret
xor
mov
loop
into
lret
in
xchg
cld
sbb
mov
ficoml
subl
stos
and
scas
inc
bnd
and
mov
cwtl
cli
popf
or
jns
pop
out
jnp
xchg
fcomps
mov
lret
out
repnz
jle
popf
push
mov
lret
cs
xorb
cmp
or
sbb
lret
shrl
ret
lret
rorb
pop
test
lret
sub
sbb
fwait
lret
pop
das
cli
aaa
mov
jnp
xor
stos
fucomp
mov
cmp
lret
adc
xchg
lret
jae
mov
inc
adc
fisttpl
jb
lret
dec
or
repz
daa
lret
inc
push
lret
mov
sub
ds
xor
sar
mov
mov
lret
and
lret
lock
cmp
int3
sbb
adc
pop
in
dec
fists
add
cmp
adcb
shrl
jnp
xor
int3
gs
loopne
movsl
jne
out
leave
xor
aam
rcr
xchg
sub
decl
cmpsl
inc
push
icebp
mov
sub
std
push
je
cmp
lret
and
jno
lret
push
std
repnz
push
sub
or
incl
inc
fldcw
mov
adc
and
int
dec
pop
mov
lahf
dec
mov
cmp
ficoml
std
mov
pop
out
sub
jp
dec
ja
lds
push
inc
or
xchg
je
xor
imul
adc
push
out
shrb
lret
dec
add
lret
inc
aaa
sbb
xchg
pop
lret
jle
decl
add
lods
xor
and
mov
into
jmp
add
dec
rcrl
fisttpl
xor
mov
les
sbb
addr16
bound
aas
popa
mov
xor
dec
lret
fisubrs
cli
add
sub
lcall
in
xchg
adc
cmp
cs
mov
popa
push
lret
negl
mov
cmp
fadd
aaa
clc
int3
pusha
sbb
pop
lret
loopne
movsl
jmp
loop
lock
xchg
mov
into
sub
xchg
in
outsl
lret
ficomps
lea
lret
dec
mov
lret
ljmp
lods
jle
cld
dec
lea
jno
sahf
xchg
lret
add
lret
insb
in
pop
or
push
xorb
or
out
sub
mov
pop
enter
xchg
insl
test
sbb
scas
test
jne
push
add
ljmp
inc
xlat
lret
insl
xchg
xor
loope
lret
hlt
les
daa
xor
and
xor
jno
sub
jg
lret
out
push
dec
push
fimuls
ret
adc
daa
scas
cwtl
je
sub
loopne
push
push
jg
mov
lret
pop
push
mov
mov
faddl
sub
jge
out
xchg
push
fcomp
dec
push
add
fcmovb
push
lds
fidivrl
fcoml
mov
in
test
mov
add
adc
popa
aas
fcomip
scas
mov
pop
cli
dec
sub
pop
mov
shrb
and
out
lret
out
xchg
xchg
sub
sub
pop
fwait
test
mov
push
push
sarb
inc
mov
stc
repnz
mov
andl
xchg
lret
and
jne
out
lock
repnz
adc
push
and
pop
loopne
or
mov
jb
rcrl
repz
lret
jbe
pop
and
mov
mov
xor
lret
jb
test
bound
fimull
lret
and
addr16
call
pop
lret
idivb
sub
into
push
lret
insl
cld
gs
in
adc
jo
xchg
rcrb
add
shll
mov
lret
mov
inc
xlat
pop
fimull
and
sarl
ja
clc
aad
lea
outsb
lret
inc
pop
sti
lods
hlt
dec
je
lret
cmp
mov
fsubs
out
sub
and
cmp
inc
inc
mov
xor
rcr
lahf
cmp
push
enter
dec
jecxz
fnstsw
sub
xchg
pop
into
and
sbb
andps
jmp
mov
lret
pop
pop
lret
hlt
pushf
adc
icebp
lret
loope
cld
imul
sti
inc
inc
dec
mov
jns
sub
stos
arpl
or
je
or
into
lret
mov
mov
cli
stos
div
dec
orl
loope
jecxz
nop
or
movsl
mov
test
fiaddl
adc
push
inc
dec
xchg
in
lret
jne
mov
pop
jmp
fisubrl
js
lods
mov
lret
aad
adc
lret
movsb
add
lret
fwait
cmpsl
pop
jae
icebp
lret
sar
daa
add
jecxz
push
pop
mov
fcompl
aas
pusha
lret
and
inc
lret
hlt
in
stc
sbb
pop
lret
sti
mov
add
iret
pop
cld
test
je
lret
dec
xchg
in
aam
pop
mov
or
popa
sub
scas
mov
fnstenv
ret
into
lret
cmp
cli
jno
rclb
aam
xor
aaa
push
loopne
jp
push
test
fbld
add
pmuludq
ljmp
dec
jo
or
sarb
jns
mov
jg
jno
loopnew
adc
inc
adc
ret
pop
stos
mov
dec
repz
or
or
mov
fcoms
ljmp
cmpsl
clc
inc
out
add
cmpsl
mov
das
xlat
lret
cmp
scas
jle
mov
rep
dec
or
adc
and
pop
xor
aas
or
bnd
sbb
pop
lcall
mov
jbe
outsb
aam
in
lret
inc
lods
ljmp
mov
stos
cmp
mov
int3
mov
lret
xor
push
insb
pushf
lret
aad
jns
imulb
jno
stos
dec
push
pop
sar
push
push
orb
movsl
mov
cmc
xchg
rol
js
int3
pop
push
cli
jnp,pt
push
cmp
xlat
dec
jmp
sarb
adc
mov
lret
pop
pop
test
adc
xor
mov
lcall
lea
push
pop
mov
fbld
jno
fidivl
jmp
into
inc
frstor
cmc
inc
lret
push
scas
sti
pop
pop
dec
popa
xor
test
mov
jnp
cmp
faddp
divb
sbb
data16
inc
cwtl
mov
mov
mov
inc
and
leave
ss
pop
push
out
lret
or
lret
cltd
xchg
push
iret
insb
pop
lret
jne
pop
jle
rep
fnsave
mov
pop
lods
mov
dec
or
mov
pusha
lret
pop
cld
ret
dec
cmp
lret
out
push
dec
icebp
xchg
lret
sbb
aas
sub
sarl
jl
fsubs
aam
das
push
cmp
sub
les
lret
bound
fimull
ss
pop
mov
dec
adc
jp
repnz
lcall
jo
or
add
jbe
fisubrl
les
mov
xor
in
mov
xor
ljmp
subl
sbb
or
cmp
and
pop
test
aaa
xlat
das
dec
mov
jle
push
out
sarl
je
add
sub
ret
jno
lds
shl
cs
dec
mov
ds
int
shlb
fs
xor
test
sbb
pop
scas
adc
iret
rcl
push
ror
repnz
adc
lret
sub
push
xchg
test
repnz
mov
lret
push
aaa
loop
jecxz
sbb
fisubrl
mov
pop
and
lret
stos
inc
xchg
pop
lock
lret
ret
adc
and
dec
adc
cmp
mov
mov
lahf
inc
mov
out
mov
fmul
jl
out
repz
lea
mov
scas
stos
nop
cwtl
dec
mov
mov
and
lret
jo
fwait
pop
lret
enter
xor
push
stc
neg
adc
sbb
inc
lret
add
test
ret
mov
addr16
or
lahf
lret
shll
shr
lret
cmpsb
scas
xchg
sbb
inc
out
xor
repnz
push
jmp
inc
add
addl
sbb
mov
cmpsl
mov
stos
mov
cld
add
addr16
or
inc
inc
lret
mov
test
ss
mov
or
mov
movsb
repnz
mov
stos
popa
ret
and
out
push
cli
adc
lret
xor
mov
mov
jb
clc
inc
pusha
rorl
mov
push
sbb
mov
sub
xor
jnp
sbb
pop
in
sub
mov
fstl
inc
popf
sbb
rcrb
ljmp
shl
xor
imul
or
jg
or
movsl
push
sub
mov
mov
ret
ja
lock
push
mov
adc
jmp
jnp
add
fisubl
pop
pop
int3
mov
mov
xchg
pop
cmp
in
aas
xor
fildl
jecxz
std
shlb
pusha
addr16
cwtl
mov
pop
pop
stos
mov
inc
sahf
mov
repz
xchg
lret
cwtl
inc
xchg
mov
or
mov
push
push
in
arpl
lret
sbb
test
int
dec
mov
in
test
cmpsl
inc
jl
push
mov
dec
sub
inc
ret
pop
or
xor
je
adc
stc
mov
imul
pop
cmp
push
mov
xchg
or
inc
cwtl
jno
and
lret
xlat
xchg
fwait
push
pop
fs
loope
hlt
mov
idiv
pushf
sbb
xlat
in
mov
push
cmc
aas
xchg
xchg
xor
stos
dec
jge
imul
add
scas
mov
decb
cmp
shlb
mov
leave
out
fiaddl
test
mov
xor
aam
push
cli
das
adc
pop
mov
scas
lret
push
pop
aam
iret
cmp
mov
pop
pop
xlat
lret
add
mov
add
stos
mov
cmpb
and
jge
outsl
lret
inc
jnp
mov
ljmp
in
cmp
lret
and
push
inc
lret
pop
ret
add
bound
and
adc
jp
shll
lret
imul
pop
mov
mov
pop
in
mov
sub
das
push
lock
dec
enter
push
mov
mov
sub
mov
fsubs
jl
fmul
mov
int3
ret
lret
mov
insl
pop
jl
sub
aam
lret
push
cmp
cwtl
cmpsb
js
cs
mov
gs
xchg
lcall
shlb
stos
adc
cwtl
sbb
lret
jmp
mov
adc
xchg
mov
xor
jge
popa
inc
fistps
fisubl
or
lods
out
loop
and
repnz
xchg
adc
lret
les
mov
negl
das
lea
xchg
test
cli
test
dec
jnp
or
or
out
fnsave
lret
dec
pop
sub
fcmovne
add
outsl
jo
lea
adc
jmp
dec
stos
shll
or
cmp
leave
jle
shrl
pop
xchg
ljmp
push
mov
stos
sbb
mov
sbb
lret
es
pusha
lret
std
jns
bound
stc
sbb
mov
dec
addr16
incb
push
inc
test
cli
movsb
adc
push
jno
test
mov
insl
addl
lret
mov
adc
aas
lret
cmp
fs
xor
pop
mov
sub
lods
popf
fxch
pop
sub
das
je
lret
adc
push
sbb
sbb
call
add
mov
push
lea
hlt
movsl
fidivrl
in
ja
mov
push
lods
aam
push
or
cltd
je
cwtl
xchg
sti
mov
push
mov
mov
xlat
test
mov
adc
int3
mov
xor
or
push
arpl
mov
cmpsl
movsl
int
sbb
xchg
fdivs
jo
cli
push
stc
or
mov
dec
and
jno
push
mov
rep
sub
cmpsl
adc
lods
mov
aaa
add
sbb
mov
ljmp
jnp
xlat
lret
mov
in
mov
adc
sbb
loope
jp
dec
lds
repz
rcrb
hlt
or
shll
test
lret
fisttps
cltd
push
ss
jb
fidivrl
mov
nop
ficompl
loope
push
adc
lret
xchg
push
push
mov
mov
pusha
mov
lcall
xor
lret
mov
inc
mov
lret
pop
inc
and
outsl
popf
lret
stc
inc
call
int3
xchg
sbb
gs
mov
mov
lret
fstps
add
sbb
pusha
cli
ljmp
jnp
stc
andb
mov
jbe
pop
sbb
mov
inc
loop
inc
lret
add
xor
dec
mov
lea
jg
sub
les
push
sbb
cli
test
jmp
push
mov
lret
shlb
out
mov
cmp
sbb
sub
ret
mull
xor
push
push
cmp
pusha
inc
mov
fcmovb
nop
mov
lret
mov
pushf
cmp
xor
lea
mov
add
mov
push
enter
fidivl
inc
push
roll
adc
xor
fwait
lods
add
imul
cmp
sarb
or
movsl
pop
pop
or
dec
mov
ljmp
jp
add
and
fidivl
jae
int
lods
cmp
les
enter
insb
cwtl
mov
or
dec
xchg
in
or
jge
pop
lock
stos
es
into
pop
pop
shll
push
xor
dec
or
cli
jecxz
mov
inc
fsubs
lret
sbb
and
add
or
inc
std
jnp
in
mov
sarl
subb
lret
dec
outsb
in
jle
lret
dec
je
cmpsb
fisubrs
pusha
push
or
movsb
lret
dec
push
mov
cmp
ljmp
ficomps
cmp
push
pop
cmpsl
aad
adc
sub
jle
pop
mov
lret
repnz
sub
gs
inc
test
lods
sbb
daa
pop
out
fs
lret
jno
jb
add
mov
lret
mov
sahf
aad
or
xchg
push
movl
leave
cli
cmpsb
sub
stc
and
test
add
into
je
fcomps
adc
xchg
aad
cmp
mov
out
in
jge
mov
cmp
shll
icebp
jae
aas
fldenv
push
lret
das
repnz
sahf
lret
adc
fcompl
or
dec
imull
stos
mov
cmp
addb
dec
push
rorb
shrb
gs
add
push
pop
insb
stc
ror
fsub
stos
or
inc
lret
mov
push
jno
mov
outsl
test
inc
inc
int3
gs
jge
sbb
adc
in
ret
inc
xor
addr16
cmpb
movsl
mov
rolb
aas
or
out
rcrl
ds
fmul
xchg
popf
dec
lret
enter
adc
sbb
ficompl
stos
xor
cltd
aam
popa
addr16
xlat
adc
out
adc
loope
lret
mov
lret
pop
test
les
fiaddl
int
fdivrl
xchg
and
mov
std
aam
movsl
fwait
lret
loope
pop
add
ret
add
jg
mov
lret
and
stos
mov
lret
lahf
test
js
lret
jae
fucom
adc
ficompl
loop
je
pop
incb
or
insl
sub
rcrl
ja
repnz
rcl
fadd
ljmp
fcmovu
pop
push
aam
or
dec
sti
les
into
mov
inc
jo
sub
cmp
enter
pusha
jno
bound
ds
cmp
cmpsl
arpl
jecxz
addr16
int3
pop
or
mull
pushf
and
repz
loope
push
test
sbbb
movsb
sti
out
into
mov
lret
loope
pop
pusha
and
dec
lret
pop
adc
cwtl
pushf
fucompp
mov
ret
shrl
fidivrl
add
mov
jne
xchg
test
xor
xlat
stos
lret
sbb
popf
nop
and
loope
mov
push
lret
pop
jb
mov
lret
xchg
jbe
mov
or
push
cmp
xchg
loop
and
add
stos
or
stos
dec
rclb
scas
ss
mov
and
outsb
inc
in
push
mov
arpl
cwtl
leave
cld
mov
dec
and
imul
mov
jbe
rcll
popa
aas
cli
push
pushf
sub
inc
cli
push
test
or
cmp
inc
mov
jl
push
dec
and
and
pop
add
shrl
push
adcl
mov
jp
push
cli
into
dec
mov
cwtl
jmp
lea
sub
sub
or
add
inc
mov
stos
mov
cmc
andb
lret
add
out
push
sub
cmp
sbb
adc
inc
and
jmp
add
xchg
int
int
fistpll
xlat
out
lret
xor
lods
cmpsb
scas
lret
arpl
or
push
jp
in
mov
lret
popf
sbb
push
jecxz
rol
aad
fwait
add
shlb
sbb
rcll
dec
pop
hlt
and
push
fmul
xlat
movsb
aaa
jle
push
shr
in
pop
mov
in
push
mov
lret
add
lods
outsb
fmul
lock
cmpsb
pop
fmulp
stos
movsl
iret
jmp
xor
in
sbbl
push
aad
jmp
mov
lea
xchg
int
aad
or
lret
stos
sbb
pop
mov
push
xchg
fcmovbe
or
push
cli
mov
movsb
dec
cmp
lret
jp
and
fnsave
mov
lcall
cmp
lret
jns
dec
int3
pop
stos
sub
adc
fcmovnu
je
cmp
insb
xor
lret
mov
push
ret
movl
xor
lahf
cmp
int3
fwait
xlat
sub
test
pop
sbb
daa
mov
push
out
fists
cmp
pop
sti
lret
sbb
xlat
movsl
mov
repnz
test
xor
lret
xchg
rorb
cmp
ja
iret
lret
mov
mov
adc
lods
pusha
dec
lcall
add
ljmp
pushf
mov
rorb
or
lret
jne
jmp
inc
ror
push
dec
xlat
sbb
inc
fisubl
std
sti
xchg
pop
xor
sub
addb
daa
lret
add
cmpsb
stos
les
mov
js
pusha
aam
cmp
sub
adc
and
hlt
lret
xchg
inc
pop
push
int
pop
mov
xor
lret
rol
std
repz
ror
sub
cmc
lcall
int3
popf
cmp
lret
jns
movsbl
xchg
inc
jnp
mov
outsl
lret
pop
sahf
sti
lds
sub
imul
mov
into
or
pop
ljmp
in
cmc
sub
shll
mov
into
cmp
repz
mov
push
bound
cli
lret
inc
sub
popf
hlt
inc
lret
cmpsl
mov
arpl
jecxz
cmp
jns
add
mov
lret
test
rcll
nop
out
fmul
and
loopne
mov
loope
lret
in
cltd
pop
xor
ljmp
push
ja
cwtl
push
jns
adc
cmp
lret
jp
inc
pop
inc
xchg
fsts
ja
jp
sbb
mov
mov
outsl
jl
cltd
hlt
lock
inc
lret
cli
sbb
or
je
les
add
xor
ficoml
add
push
mov
jbe
mov
jns
and
or
xor
xchg
aas
push
addr16
fdivs
xlat
cltd
nop
mov
or
xor
mov
sbb
aad
aam
mov
xor
jmp
imul
mov
pushf
lret
repnz
mov
andb
pop
xor
xchg
push
cmp
adc
shlb
push
pop
add
std
xchg
xchg
pop
ds
sbb
jge
push
cmp
repnz
lret
jae
ss
jg
xlat
in
inc
jbe
pop
fwait
pop
mov
mov
iret
pop
aam
pusha
lret
rorl
jmp
fwait
lret
out
and
add
mov
sub
loope
shlb
fadd
push
cmp
cmp
push
into
fidivrl
sub
add
xchg
leave
jp
lret
add
jle
call
and
clc
rolb
movsl
or
mov
adc
fisttpll
lea
xchg
shl
into
in
scas
xlat
pop
out
jo
pop
imul
xchg
aam
add
aas
mov
inc
sub
fildll
popa
js
rorb
mov
addr16
push
divb
jbe
lods
loop
mov
data16
enter
aas
push
fmull
iret
xchg
lret
sbb
xor
cmp
lret
in
scas
pop
jl
stos
int
lahf
repnz
lods
es
ds
stos
call
test
push
je
clc
dec
imul
xor
lret
jnp
push
insl
pop
add
inc
cmp
popf
lret
and
push
movsb
fidivrl
mov
lods
aad
je
int
daa
xchg
cltd
inc
dec
inc
loopne
cmc
mov
leave
push
adc
test
lret
xlat
roll
test
mov
lret
or
mov
popa
add
inc
push
sbb
stos
mov
pop
repz
int3
loopne
sahf
mov
dec
and
and
insl
adc
lret
icebp
xchg
retw
lret
mov
push
mov
jge
loop
inc
dec
sub
inc
pop
dec
in
fs
push
mov
or
lret
fstps
mov
mov
lds
stos
repnz
mov
xor
sub
ljmp
xchg
lods
loopne
sub
or
mov
popf
push
inc
shlb
imulb
pop
sbb
jg
and
lret
jmp
and
repnz
lret
cwtl
add
adc
push
mov
nop
je
cld
cmp
out
xor
imul
shll
lret
inc
mov
sbb
ja
add
lret
inc
cmp
push
or
fldl
in
aam
push
or
and
jbe
add
sbb
jecxz
jne
bound
lret
mov
inc
ret
xchg
xchg
pushf
stos
cltd
arpl
inc
int
aas
flds
adc
rcrb
out
jge
cld
pop
add
lods
lret
mov
inc
push
orb
ja
jecxz
js
cmpsl
fsubrs
xorl
jmp
add
pushf
inc
call
iret
ror
int
fisttpll
push
cmp
icebp
rcrb
pop
in
ja
or
loope
popf
dec
enter
push
or
or
lret
pop
xor
negl
sbb
xchg
and
stos
cmp
sbb
cmp
pop
lret
cli
mov
data16
loop
mov
fs
xor
jno
lret
mov
xchg
sub
cli
je
dec
sbb
push
ljmp
pop
aam
dec
lds
pop
xor
add
popa
sub
nop
inc
pop
jg
or
dec
js
or
testb
xchg
lret
add
jmp
adc
cli
jno
cmp
aad
mov
inc
push
test
jge
xor
dec
rcrb
std
test
adc
push
xchg
cltd
ficoml
ret
sub
mov
andb
mov
xor
push
pop
mov
push
push
inc
pop
ss
and
ret
aad
leave
dec
xor
pop
dec
inc
and
mov
mov
orb
out
mov
roll
outsb
lret
jmp
xchg
sbb
xor
adc
inc
and
jne
dec
stos
pop
mov
imul
popa
pop
lret
sbb
iret
sbb
sbb
imul
push
int3
nop
aas
fwait
popf
sbb
sbb
mov
mov
nop
jmp
clc
jge
mov
div
cwtl
aad
jl
or
inc
lahf
lret
push
pop
pusha
fcoml
lret
xchg
mov
lret
adc
outsl
lret
ljmp
mov
mov
test
out
cltd
stos
repnz
std
sbb
dec
sarb
push
sub
or
sub
popf
xor
aas
push
mov
sub
gs
dec
sbb
mov
jge
cmp
jg
out
jnp
and
mov
insl
fmulp
lret
sub
mov
mov
inc
mov
sbb
mov
stc
imul
ss
vsqrtpd
out
xchg
lret
bound
xor
stos
cwtl
sbb
cmp
dec
add
out
fstl
in
mov
ret
int3
sbb
rolb
mov
fstpl
adc
in
xor
ffreep
pminub
lret
out
lods
adcl
jmp
rorl
loop
out
test
sub
rorl
dec
data16
outsl
fistl
fcomp
push
or
mov
ds
push
xchg
sub
enter
into
lret
int
and
jecxz
dec
test
sub
inc
pop
out
xchg
out
scas
lret
mov
ror
cmp
es
lret
mov
lods
adcl
scas
rcll
pusha
inc
mov
lret
sti
ret
mov
lea
fidivl
aam
jp
lret
add
mov
mov
pusha
mov
push
int
lret
repnz
cmp
pop
das
mov
lret
push
mov
cld
test
jmp
xchg
sti
dec
jle
or
mov
jmp
pop
dec
aaa
outsl
lret
stos
cmpsl
in
xor
in
out
pop
mov
sub
sbb
ret
mov
test
push
aaa
lret
mov
add
xor
lret
scas
test
imul
cmp
lret
or
sub
pop
aaa
add
sbb
or
lret
adc
test
mov
negb
arpl
push
xor
loop
mov
pop
cmp
stos
mov
aam
shl
loope
test
dec
lds
popf
mov
mov
in
lcall
mov
aaa
dec
jecxz
insl
iret
fsubrs
cmc
outsw
das
fsubrs
pop
adc
lock
xchg
mov
or
lods
stos
fisubrs
jmp
mov
push
in
push
push
out
shrl
nop
ret
lret
mov
outsb
lret
xchg
outsb
lret
jmp
ja
lret
fsubs
dec
popf
mov
cmp
nop
shll
inc
in
mov
mov
lret
xor
ds
jp
stos
inc
push
fiaddl
jb
lret
or
cwtl
cmpsl
test
push
lret
popf
push
stos
xor
fcmovb
jge
sahf
mov
in
lret
and
xor
scas
inc
in
sbb
cmp
repnz
push
nop
das
bound
ds
or
xchg
lock
xlat
loop
sub
mov
jns
xchg
pusha
or
adc
icebp
xchg
movsb
shlb
and
aaa
jecxz
jbe
pop
pop
push
cli
aam
ret
push
inc
daa
cli
lret
mov
dec
lret
icebp
in
cmc
cwtl
adc
pop
shrl
inc
dec
loopne
insb
mov
mov
cltd
lock
enter
int
rorb
stos
xchg
icebp
xor
cli
mov
jo
dec
lret
popf
int
pop
stos
xor
mov
test
std
fs
adc
cli
cs
dec
imul
mov
insl
push
sbb
inc
sbb
add
hlt
jg
lcall
lahf
cmpsb
inc
ror
inc
or
in
pop
jg
mov
mov
pandn
cmp
jge
clc
aad
mov
cmp
shr
ljmp
scas
out
adc
mov
mov
stos
pop
sub
lret
inc
lret
push
sbb
aas
xchg
xchg
and
xorl
andb
mov
lret
cmp
jge
lret
rcrl
push
ficomps
rclb
lret
xlat
movsb
or
mov
leave
rep
enter
sbb
stc
test
lret
mov
pushf
jns
lret
pop
dec
ds
icebp
dec
lret
add
lret
pusha
lea
mov
cmp
mov
xor
lahf
loope
imul
sub
addr16
lods
or
popf
mov
cmp
flds
arpl
outsb
sbb
fidivs
cli
dec
and
fldcw
inc
push
lret
test
lret
orb
test
jl
pushf
mov
or
out
cltd
mov
mov
push
sub
pop
mov
pop
and
test
std
cmp
insb
add
enter
cmc
cltd
inc
xchg
fisubl
cld
mov
pop
sbb
mov
test
add
out
cmp
mov
xchg
outsl
divl
push
ror
sbb
ljmp
into
imul
and
mov
xor
inc
lret
ljmp
xchg
mov
push
shll
xchg
sbbb
icebp
mov
mov
pop
lret
aad
adc
cld
xor
pop
icebp
cmp
xor
iret
jmp
cmp
xlat
aam
lea
imul
mov
lret
dec
jnp
lcall
insb
ds
pop
lret
jl
out
pushf
adcl
jnp
lret
fsubs
lret
mov
aas
or
nop
dec
cmp
call
jb
popa
imul
or
mov
push
cli
and
jl
rorb
sahf
cmc
bound
cmp
mov
dec
sub
icebp
sub
xor
movsb
adc
lret
cmp
lret
add
outsl
out
mov
out
inc
sub
aam
test
lret
fnsave
mov
mov
into
dec
mov
adc
pop
or
fst
gs
int
mov
sub
imull
dec
popa
int3
lret
gs
xchg
or
pop
fdiv
adc
int3
jb
in
lret
mov
mov
arpl
jne
add
movsb
lret
je
xchg
sbb
lret
adc
jns,pn
cmp
lret
test
mov
fcompl
mov
fsub
push
mov
in
ror
cltd
add
inc
repnz
mov
lret
jmp
push
or
shrb
in
jne
stos
sbb
cmp
push
lea
cli
shlb
xchg
sub
jg
dec
mov
js
dec
fmul
xchg
movsl
jns
cwtl
dec
test
mov
aas
jb
and
lods
rcrl
dec
mov
sub
js
pop
ljmp
outsl
push
push
lea
mov
lret
repz
adc
dec
shlb
psrad
je
jns
shrb
mov
or
mov
daa
adc
fmull
cmp
adc
xchg
fnstcw
ret
mov
sar
xchg
lods
mov
imul
xchg
jmp
sbb
in
cmc
push
jo
dec
imul
xlat
or
and
shlb
jmp
orl
into
jo
sbb
xor
cmpsb
push
cmpsl
or
cli
mov
pop
cmp
mov
lret
rorl
fs
ret
cmpsb
mov
sbb
cmpl
lret
dec
test
std
cs
shll
lret
and
push
mov
jp
addb
aad
lock
ljmp
cmp
fcoms
xor
js
dec
jg
jns
push
xchg
pcmpeqw
fcmovbe
and
push
xlat
jl
mov
or
pop
inc
jns
cli
fistl
adc
add
rcrl
pop
repz
mov
imulb
bound
sub
inc
sti
mov
cltd
mov
fdivrl
adc
or
subl
shll
sahf
popf
ror
adc
xor
cs
sbb
lea
mov
movsl
sbb
inc
or
adc
sbb
dec
pop
pop
lret
fstl
je
lret
sbb
mov
movsl
mov
xchg
add
push
stos
addb
sbb
pop
nop
ret
and
rorb
ror
into
mov
sub
push
stos
popf
aam
stos
fadd
mov
push
pushf
outsb
clc
fsubrs
lret
cmp
adc
mov
push
lods
dec
push
lcall
neg
inc
pop
pop
lret
add
stos
mov
shlb
mov
ret
mov
repnz
aas
inc
out
scas
pop
cmp
inc
nop
mov
stos
icebp
movsb
ret
popf
lea
iret
xchg
mov
or
adc
insl
jmp
lret
repz
push
jne
xor
mov
jle
das
jmp
cli
sti
shl
stos
notb
and
xor
cltd
sub
xor
loopne
cmp
xlat
bswap
les
loop
jl
cli
cli
ret
mov
fisttps
xlat
insb
jecxz
cmpsb
inc
lret
sahf
loope
movsb
mov
and
outsl
rorl
pop
js
out
fnstcw
inc
sbb
cltd
icebp
mov
lret
mov
mov
aas
pop
mov
ja
add
shll
dec
orl
mov
lret
movsb
fldl
mov
jbe
mov
ret
hlt
jg
lahf
lods
sbb
sbb
pop
or
add
gs
lret
pop
push
pop
in
imul
fistps
fadds
lock
fmull
jne
mov
dec
int3
movsb
in
adc
adc
loop
int3
sbb
sbb
xor
xor
inc
cmc
cs
dec
mov
loope
jne
sub
jae
jb
lcall
mov
lret
out
lret
repz
lret
cmp
lret
jbe
xchg
push
dec
inc
lret
mov
dec
lret
lcall
roll
and
call
xchg
out
xor
inc
jae
xchg
js
movsl
push
jl
bound
aaa
cmc
fwait
in
jne
aam
mov
inc
outsb
bound
loop
inc
lret
pop
mov
xor
fstpl
mov
loop
xchg
ror
fadds
jl
mov
stos
push
fldcw
into
mov
js
or
inc
dec
mov
jo
adc
xor
cwtl
jmp
or
rol
jnp
mov
xor
cli
jge
inc
mov
movsl
cmp
jp
mov
int
push
popf
sub
je
or
xlat
mov
stos
mov
lret
jecxz
sbb
mov
push
xor
stc
in
xchg
add
cmp
cmp
stos
aaa
push
jno
into
data16
ss
lret
mov
or
mov
mov
mul
sbb
sub
jmp
fimull
push
pop
mov
lret
test
int
pop
add
aas
cld
nop
ss
mov
add
or
ja
xor
xor
mov
jmp
dec
inc
fwait
jmp
lods
mov
pop
out
mov
pop
jno
es
pop
sbb
fimull
or
aaa
into
daa
inc
lahf
out
dec
pop
mov
dec
or
lret
push
push
inc
enter
sbb
inc
int
and
xor
jne
sbb
jecxz
push
adc
and
xchg
dec
lret
push
je
out
in
mov
mov
lret
pop
pop
sub
bswap
push
cmpsb
addr16
aas
jmp
pop
lret
dec
mov
lret
xchg
lock
jle
test
jae
enter
and
ljmp
sar
int3
push
lret
test
cli
or
add
ljmp
fstpl
inc
jle
jmp
mov
lret
xor
cmp
push
shrl
lods
mov
sbb
shrl
adc
je
fcmovu
xor
stos
pop
inc
cli
xor
leave
lret
hlt
arpl
scas
jmp
mov
scas
push
jecxz
fcomps
lods
call
pop
lret
mov
jl
rclb
lea
insl
xchg
cli
mov
mov
outsb
nop
mov
inc
ficompl
fists
sub
fcomps
jb
stc
lret
imul
adc
rorb
test
push
movsl
je
inc
inc
xchg
aaa
fwait
aas
ds
lock
sub
sbb
test
sti
jo
xor
fnsave
jbe
dec
cli
lret
sbb
insb
pushl
ror
or
lret
jne
pushf
xor
sarl
and
mov
add
lret
sbb
lret
cmp
rcll
lret
sbb
mov
jns
loopne
mov
outsb
fdivl
ja
cmp
mov
cmpsl
in
lret
pop
and
jne
mov
adc
adc
lret
ret
and
xchg
shlb
ss
repz
lcall
push
dec
aaa
xor
mov
mov
or
lret
aam
xchg
test
ss
pop
fdivr
mov
popa
inc
jno
cs
test
jnp
rcll
mov
or
in
lret
sbb
add
aam
loopne
push
jg
lret
cmp
and
jbe
loope
lock
pop
iret
cmp
aad
pop
xchg
and
inc
mov
nop
movsb
cwtl
ror
sub
or
fnstcw
imul
lret
cli
gs
sub
ljmp
fadds
inc
loopne
test
outsl
nop
sub
into
int3
xchg
sbb
dec
or
aad
test
push
sbb
inc
rcrb
sbbl
imul
and
jne
cltd
mov
lret
lcall
lea
jnp
or
cmp
aad
push
lcall
jo
push
pop
push
mov
test
cmp
and
lret
inc
in
shll
enter
js
push
lret
push
outsb
out
jne
lret
add
ljmp
shll
sar
sarb
dec
mov
nop
lods
push
jg
rolb
xor
pop
mov
lret
out
outsl
lods
sub
lea
lret
xor
push
xchg
lret
ret
push
mov
int
lods
andl
out
cmpsb
sub
dec
mov
mov
sbb
aad
inc
ret
jl
lret
jmp
scas
insb
data16
mov
mov
mov
or
mov
lret
add
push
iret
lret
xchg
xchg
cmp
adc
fimull
call
cmp
outsl
xchg
add
gs
mov
rolb
xchg
xor
out
cli
mov
and
mov
and
mov
fxch
cmp
sbb
mov
int
dec
pop
enter
mov
loope
call
cmpsl
sbb
jae
subl
dec
lret
stc
pop
out
clc
dec
lret
or
mov
inc
js
xor
fisubl
clc
cmp
iret
sti
mov
insb
lret
sti
push
fldenv
lods
cmp
test
xor
lea
mov
xchg
push
push
inc
psubd
xchg
push
sbb
icebp
lret
cli
cltd
or
xchg
mov
aad
mov
ret
fwait
adc
lea
lret
movsb
andb
mov
and
fadds
ficoms
or
lods
lret
inc
jg
sbb
jno
imul
sti
inc
adc
jl
and
int3
bound
shll
or
pop
add
in
mov
addr16
sbb
sbb
adc
mov
jne
es
js
jle
ficoms
fcmovb
cmp
sarl
cmpsb
lret
sahf
push
and
fs
ljmp
cmp
or
jle
cmp
add
scas
sub
lret
jbe
cwtl
mov
inc
cmpsb
push
cmp
popa
and
mov
lret
in
mov
xchg
movsl
scas
sbb
jbe
cmpb
lret
dec
xor
xor
lret
mov
ficomps
cli
jge
push
or
cmpb
aaa
fbld
test
adc
ret
pusha
pop
icebp
lret
loope
pop
mov
dec
sbb
jecxz
mov
aaa
jno
fstpt
imul
lcall
popa
or
and
sbb
mov
ficompl
iret
lock
lret
stc
mov
ret
repnz
icebp
xchg
mov
mov
jb
aad
cmpsl
sbb
ficoml
sahf
lahf
inc
lret
pop
mov
lret
aaa
pop
into
or
and
add
adc
xor
fsubs
popa
ljmp
into
lret
ja
lret
rcll
and
dec
icebp
push
cmp
inc
sbb
dec
lret
loop
paddd
pop
loop
or
inc
mov
scas
out
jge
push
cmp
mov
pop
or
in
aaa
je
mov
lret
adc
jae
xor
cmp
stos
xor
rclb
scas
int3
rcrl
jo
loopne
mov
fdivl
icebp
push
lret
ret
mov
cmpsb
dec
in
and
lret
pop
lcall
xor
pop
lds
je
rcrb
test
popf
lods
mov
test
cwtl
xchg
lret
sti
lock
cltd
pushf
sub
xlat
inc
jo
das
lret
in
pop
je
pushf
lret
enter
pop
or
pop
lea
mov
jbe
and
ss
btr
shl
adc
xor
mov
pop
es
sub
repz
je
ficoms
cld
addr16
in
pop
xchg
mov
cmp
loop
push
mov
sti
fldcw
mov
dec
test
mov
ljmp
rorb
cmp
stc
aad
sahf
pop
mov
push
aad
cmp
ret
pushf
adc
dec
sbb
repz
pop
add
lret
pushf
inc
int
dec
lret
adc
push
mov
mov
sti
lret
repz
arpl
push
es
sarl
pop
lret
sub
daa
lret
and
outsl
or
sar
pop
sbbl
js
mov
int3
insb
call
mov
jb
scas
pop
push
lret
adc
dec
sbb
in
hlt
xchg
iret
and
lahf
pop
xchg
push
sarb
call
or
dec
sub
in
cmp
lret
popf
into
in
xor
lret
mov
cmp
jo
cli
sub
pop
fwait
and
inc
lret
cmc
movsb
jle
push
lret
outsb
iret
add
push
jmp
cmp
lret
sub
push
lods
lret
in
shll
mov
in
lret
inc
add
pop
jecxz
fdivrs
repz
xor
lret
gs
mov
mov
int
ret
inc
cli
js
mov
shlb
call
xor
aam
gs
inc
icebp
and
push
mov
mov
stc
mov
fcmovnu
jo
ret
lods
mov
imul
outsl
movsl
imul
mov
mov
fsts
jle
fcmovbe
push
push
cmp
lds
mov
outsl
roll
sbb
lret
inc
pop
aas
jnp
in
xor
push
push
sbb
cmp
fadds
and
lret
mov
lea
data16
lea
cmp
shlb
rol
jle
rcll
aad
movl
push
fwait
nop
adc
hlt
sbb
or
xchg
gs
mov
movsb
cmp
jmp
jne
or
and
sbb
mov
fcoms
lret
sub
lret
addr16
dec
aad
push
lret
mov
inc
inc
mov
into
cmc
and
ljmp
cmpsl
repz
ficoms
fnstcw
pop
cli
ljmp
or
lea
loop
pop
pop
stc
lret
or
adc
pop
lret
repz
mov
in
cli
scas
hlt
std
fimull
push
ror
scas
cmp
lock
repnz
pop
mov
imul
sbb
shlb
sbb
lcall
cmp
inc
in
lret
or
and
inc
inc
out
dec
or
xchg
fiaddl
mov
push
sub
jne
lods
in
fidivs
cmpsb
mov
into
xchg
sub
sub
lods
in
sub
push
out
int
inc
call
inc
pop
inc
iret
fisubl
or
sbb
shrl
sbb
xchg
adc
inc
pop
xchg
lret
and
push
dec
stos
cmp
test
shlb
lret
push
mov
cwtl
sbbl
and
mov
lret
or
mov
inc
enter
mov
mov
popf
fs
push
lea
mov
fwait
lret
xlat
ja
fisubrs
sbb
or
sbb
stos
fildll
ret
xor
fcompl
popa
cltd
fnstsw
shlb
mov
xchg
xor
lret
in
fcoms
lcall
push
ret
into
aas
adc
shll
in
fmuls
inc
in
lahf
movsl
negb
adc
fidivl
fistpl
lret
out
shrl
sbb
cmp
ja
lret
mov
mov
fadd
mov
cmpsb
cmp
gs
rcrb
mov
xor
aam
mov
popf
out
hlt
inc
sar
xor
sbb
ret
jno
cli
jp
mov
xchg
hlt
rolb
cmp
inc
push
adc
jae
sbb
mov
fistpll
lcall
push
lea
mov
lret
mov
lret
jb
xor
xchg
ja
rolb
repz
sarb
rcrb
enter
test
xchg
jge
fwait
sarb
inc
sub
stos
lcall
sbb
mov
data16
mov
lret
stc
cmpsl
test
scas
sub
rcr
outsl
ret
pusha
push
xchg
jns
aad
xor
test
mov
lret
mov
sub
fdivrp
mov
lret
cltd
test
lret
pop
rcr
shrl
lret
icebp
mov
cmc
or
mov
or
adc
sub
jl
sbbb
sahf
stos
lea
lret
aam
jge
fwait
or
or
xor
rclb
lret
xchg
push
test
test
loop
cs
popf
test
xor
pop
and
pop
stc
into
mov
or
sub
int
jp
inc
hlt
mov
out
add
imul
jne
fnsave
stos
incb
call
rolb
mov
lret
pop
lods
imul
or
aad
cli
dec
cmpsl
sarb
jle
mov
mov
adc
idivb
leave
pop
aas
lahf
inc
int
psrad
lret
out
cld
xor
int
jmp
mov
frstor
mov
lret
stc
jae
pop
in
adc
dec
xor
lret
pop
sarb
imul
add
pusha
jb
shl
orl
push
lret
ret
ss
mov
mov
mov
cmp
ret
cs
incb
in
fwait
imul
ljmp
cli
lds
sti
cmp
sub
rclb
xchg
hlt
loopne
push
push
jp
sub
into
lret
ret
insl
nop
fcmove
icebp
ds
lret
rcrb
push
push
enter
aas
movsb
mov
into
jp
shr
out
lret
jle
xchg
lret
pop
out
push
mov
sub
mov
rcr
cmp
cmp
jl
cmp
adc
add
mov
jne
scas
xchg
mov
sbb
lret
mov
sub
pop
lahf
lret
push
or
xchg
mov
mov
lret
addb
nop
pop
repz
push
jmp
jnp
mov
push
dec
loopne
shrb
cmpsb
nop
hlt
stos
and
fs
pop
sub
aad
inc
imul
and
adc
js
enter
in
or
mov
mov
scas
lret
xor
lds
lea
popa
ljmp
into
ds
dec
lret
pusha
pop
cmc
push
pop
jle
xor
aad
inc
aad
and
jns
and
cmp
movl
ret
sub
xchg
xor
repz
lret
lret
cmc
sbb
mov
movsb
cmp
mov
pop
lret
iret
add
addr16
dec
lret
pop
ja
push
ffreep
lret
in
mov
pop
jmp
cmp
ret
test
jle
xlat
cmp
pop
lret
xlat
cmp
les
jb
ja
rorl
leave
dec
push
pop
sbb
shrb
lret
mov
sti
cmp
int3
jmp
dec
pop
adc
rcrb
in
jp
lret
add
xor
pushf
sbb
pop
rorl
inc
inc
sub
mov
test
xor
movsl
pop
or
imul
addr16
and
shll
lret
or
in
lret
sub
lret
vaddpd
loop
out
movsb
push
inc
pop
stc
jnp
cmpsl
mov
rcll
es
mov
sbb
lcall
jp
xchg
mov
into
iret
pop
inc
iret
movsl
je
lret
dec
dec
jb
cmpsl
pop
pop
jp
ret
mov
hlt
dec
lret
fs
popa
sub
xchg
mov
or
push
push
push
lods
ret
pop
les
pop
mov
lret
scas
mov
fcomip
and
fsubrs
les
lret
gs
push
and
call
push
lret
cmp
into
lret
cmp
xchg
cld
fwait
lret
dec
lahf
sub
push
or
inc
jns
shl
insl
ret
xlat
cmp
jp
add
sbb
rcl
test
mov
and
mov
lret
jge
or
push
lret
jb
dec
jns
mov
xchg
dec
mov
push
fmulp
pop
sub
in
inc
rorl
add
xor
ret
mov
pop
and
into
fucompp
es
iret
loopne
mov
testl
mov
stos
push
das
xor
push
shlb
int3
sub
cli
xchg
out
push
adc
lock
sub
adc
insl
out
mov
ja
xchg
inc
dec
or
gs
movsl
lea
dec
xor
ret
adc
cltd
mov
inc
aad
scas
bswap
aas
fs
dec
fndisi(8087
test
add
lods
cmp
addb
cli
dec
fidivl
or
fsubl
lret
popf
pop
rolb
pop
lret
addr16
xchg
mov
mov
mov
scas
lret
mov
insl
sub
fidivrl
adc
pop
icebp
loopne
cltd
push
inc
lods
scas
stc
xlat
inc
test
lret
dec
shr
sti
or
lret
and
loope
imul
fwait
xchg
inc
sub
dec
cmpsl
lret
fsubrl
push
mov
iret
cmp
aam
sbb
xchg
aad
fdivr
fiaddl
xchg
and
roll
mov
outsb
fcoms
dec
aam
bound
lahf
mov
mov
xor
arpl
ss
lret
data16
loope
xchg
mov
imul
mov
ficomps
jno
loop
xor
lret
mov
cli
jecxz
sarl
neg
ret
cli
xchg
adc
sub
push
jecxz
cwtl
xchg
add
fisubrl
in
je
jno
addr16
sbb
loop
inc
ss
lret
push
out
cmp
xchg
lret
std
enter
mov
shll
lret
jge
push
or
push
pop
lret
pop
outsl
mov
addr16
pop
fisubs
rorl
jmp
xchg
lret
test
loop
xchg
jbe
jg
lods
sub
idivb
out
pop
or
mov
cwtl
mov
clc
inc
into
movsb
nop
push
xor
sub
lcall
imul
sbb
jbe
push
stos
sbb
aas
pop
into
push
inc
rcl
ds
test
xor
lret
rorb
hlt
push
or
icebp
shl
andb
lret
sbb
cmpb
test
mov
je
insl
dec
pop
pop
fcmovbe
test
aad
ret
pop
xchg
or
jg
fisubrl
cmp
loopne
sbb
pop
push
pop
out
dec
xlat
stos
lds
xor
fistpl
cmpl
lock
xchg
or
jo
sti
jmp
mov
push
das
cli
add
pop
in
push
mov
fmul
lret
fstl
test
lret
sub
imul
push
xor
push
aaa
addr16
adcb
xchg
push
in
lret
cmc
jmp
stos
push
xor
sbb
popf
cmp
and
jb
movsb
and
push
pop
addl
jl
push
scas
lret
jae
inc
xchg
sbb
lret
xor
fucomi
popa
xchg
sbb
sarb
idivl
dec
fiaddl
outsl
fwait
mov
imul
push
ja
xchg
out
mov
jmp
xor
cmc
sbb
ja
popa
lret
add
pop
mov
dec
inc
mov
fcmovbe
or
jg
fistps
fisubs
push
iret
sub
xchg
sbb
push
dec
fcoms
and
adc
jg
dec
lock
ror
loop
movsl
sbb
hlt
int
mov
mov
insb
and
lret
pmulhw
out
add
into
inc
mov
fistps
sub
nop
lret
outsb
lret
dec
mov
jns
stc
jge
mov
cltd
mov
mov
xchg
fwait
jb
bound
outsl
mov
pop
mov
cmc
nop
lcall
mov
pop
lret
test
lret
xchg
addr16
aaa
loop
xor
jnp
jno
js
dec
inc
sub
sub
into
sub
jl
test
ja
rolb
jecxz
and
cmp
xor
sbb
ret
adc
xor
fiaddl
rcrb
inc
xor
cmpb
negl
lret
cmpl
ds
add
mov
inc
sarb
adc
mov
push
ror
fwait
xor
clc
sbb
bswap
dec
and
xchg
sbb
scas
ljmp
dec
add
push
cwtl
in
dec
sub
adcl
xlat
lret
and
imul
clc
inc
inc
in
sbb
pop
lret
dec
out
pop
loop
mov
repz
or
pop
dec
lret
xor
cmp
jge
jg
sub
fisubrs
inc
jne
mov
push
out
lret
add
fildll
imul
lock
sbb
fs
sub
rolb
js
data16
lcall
sbb
sbbb
lret
shl
push
pop
ja
push
lret
inc
xchg
sti
call
mov
xchg
mov
pop
insb
lret
xchg
fildll
and
mov
and
out
stos
loop
aas
dec
pushf
call
push
inc
and
mov
sbb
scas
notl
in
imul
imul
lock
int
mov
mov
cmp
pop
lret
stc
dec
icebp
or
mov
addr16
xchg
xor
int
test
lret
test
rorb
mov
mov
test
pop
movsb
lea
mov
sbb
nop
dec
ret
popa
sbb
pop
sbb
pop
fsubs
push
push
ja
mov
loop
jmp
adc
jmp
lret
das
mov
fdivr
mov
lret
mov
push
lret
addr16
pop
mov
lods
and
cmp
xchg
jae
cmp
lret
mov
sbb
lret
pusha
stos
fisubl
jb
mov
inc
sub
cli
xchg
repnz
test
fcmovnbe
lret
testl
sub
imulb
in
outsl
lret
sbb
inc
fistps
lret
cmpsl
jae
jle
ror
gs
add
and
add
outsb
add
ficomps
cmp
mov
ja
popf
fwait
bnd
mov
cmp
pop
jle
cli
sti
pushf
in
pop
insb
push
into
cltd
dec
sti
movsl
cmp
lret
test
and
lret
and
aas
lret
test
pop
sub
inc
inc
arpl
int3
add
lret
ja
xor
rolb
cwtl
and
lock
aad
sbb
xor
imull
mov
fcomip
lret
into
mov
lret
adc
sahf
leavew
dec
cli
fidivrs
dec
or
rcrl
lcall
mov
ficompl
jno
shll
cmp
fincstp
arpl
loope
pushf
fidivl
sbb
fnop
mov
into
mov
stos
insl
cmp
popf
and
fadds
mov
xchg
in
imul
xor
mov
cmp
jo
push
loop
bound
mov
xor
mov
lret
insb
fwait
cmp
test
or
movsl
fs
sub
jmp
push
ljmp
cmp
or
repz
mov
xchg
fistpll
das
push
jno
rol
mov
loopne
sbbl
repz
mov
jp
inc
adc
mov
popf
cmp
push
jns
adc
xor
in
mov
shl
outsl
test
fmuls
pop
lret
fldt
pushf
subb
sub
lcall
push
rcrb
xor
scas
out
popf
clc
mov
mov
shll
lret
cli
jecxz
and
xchg
out
fists
into
hlt
movsb
lret
cmp
outsb
and
sbb
inc
scas
sarl
adc
iret
clc
add
cmpsb
push
lret
sbb
push
jne
jg
imull
pop
leave
lret
xor
enter
lret
lret
popw
pop
icebp
cmp
sbb
xor
inc
dec
mov
call
lret
pop
mov
push
inc
stos
adc
dec
loop
and
xchg
lods
push
fcmovnbe
xor
lret
push
lods
aad
lret
pop
cli
movsb
fcoml
xor
push
aam
aas
adc
pop
lret
cmpsb
xchg
mov
insb
out
aaa
pushf
stos
imul
sti
std
push
xor
mov
sbb
bound
and
lret
jb
jbe
inc
dec
push
clc
jns
cs
or
fwait
pop
test
lret
aad
sbb
add
aaa
add
int3
or
repnz
fcmovne
add
push
inc
fwait
sar
data16
cli
push
sahf
xchg
std
pop
inc
stos
aad
push
fcmove
cwtl
xor
loope
cli
add
xchg
mov
lret
dec
lea
hlt
dec
sbb
push
fcompl
jno
ss
mov
jmp
shrb
lret
addb
out
mov
aam
cmp
call
enter
mov
mov
imull
neg
lret
push
adc
test
lret
sub
dec
nop
popa
es
xchg
jns
cmp
xlat
insl
sti
test
out
ljmp
cli
in
push
pushf
mov
lret
adc
pop
inc
js
mov
adc
shrl
arpl
cltd
pop
jl
mov
insl
fdivrl
mov
je
addl
aam
push
cmp
scas
aam
sahf
sub
jp
out
dec
repnz
repz
popf
lret
cwtl
cmp
xor
xchg
fs
adc
addr16
cmp
cmc
jl,pn
sbb
lret
or
fisubl
adc
xchg
mov
lret
xchg
lret
insl
aas
scas
sub
sbb
fildll
push
lret
pop
push
arpl
push
call
in
pushf
mov
sub
fldenv
adc
ljmp
xor
scas
add
push
xchg
movsb
lahf
lret
mov
popf
fimull
adc
daa
fstpl
les
popa
or
mov
scas
decl
rclb
out
test
sbb
jp
xor
lahf
pop
lret
mov
and
ljmp
addr16
mov
imul
mov
jl
pop
jb
call
pop
pop
sub
rorb
std
xor
jl
inc
scas
sbb
mov
lahf
mov
dec
xchg
scas
lret
out
popa
aaa
inc
sbb
mov
cmp
mov
mov
xor
dec
dec
and
pop
cltd
in
dec
pop
inc
lret
fs
jnp
fsubl
xorl
mov
sbb
inc
mov
add
or
inc
fisubrl
inc
rolb
ror
or
mov
das
sbb
jbe
into
or
add
xor
mov
cmp
push
jle
fcomps
push
loopne
ret
mov
or
or
fninit
lret
mov
pop
xchg
lret
cmp
cmp
lret
out
test
or
dec
push
lret
mov
mov
or
popf
pusha
sub
push
inc
mov
mov
xor
ret
outsl
lret
cmp
call
lret
push
mov
or
sbb
pusha
pop
mov
mov
dec
mov
pop
movsl
loopne
lret
test
xchg
xchg
in
lahf
add
push
xor
push
insl
lret
xor
xchg
cmp
cmpsl
out
jne
loopne
sbb
rcrl
lret
xor
cmp
rcrb
inc
or
push
cs
jl
shl
mov
xor
les
dec
mov
xchg
aas
fsubrp
enter
nop
lret
cmc
push
outsb
mov
sbb
xchg
loopne
xchg
sub
clc
mov
rorb
iret
rcr
lret
cltd
sbb
rcr
dec
repz
cwtl
or
jmp
je
das
lret
and
enter
add
lret
repnz
push
adc
lret
sub
int3
lret
mov
lret
pop
mov
popf
cmc
movsl
ficompl
nop
adc
int
pop
lret
mov
or
aam
inc
cmp
xchg
adc
add
mov
dec
lret
call
xchg
inc
lret
mov
inc
add
or
pop
lret
jl
mov
ss
stc
call
lret
sbb
mov
dec
shll
push
mov
adc
in
lea
and
lret
jno
xchg
fadd
push
fsqrt
cmp
insb
inc
popa
sub
lret
push
fs
dec
and
add
mov
xor
pop
das
out
cwtl
mov
movsb
xlat
inc
jb
pop
lcall
lret
jl
mov
and
pop
leave
add
lret
mov
inc
data16
and
jnp
push
les
enter
lret
jg
xor
daa
inc
push
jecxz
lods
clc
mov
push
cmc
jge
adc
pop
jmp
sub
stos
jne
mov
stos
mov
pusha
cmpsb
roll
lret
sub
ret
lret
mov
lcall
rcll
mov
jle
insb
fidivs
scas
jne
pushl
mov
in
outsl
sarb
mov
psubusb
jl
lock
and
das
fdivl
inc
xor
xchg
sbb
mov
sub
test
adc
sahf
out
stos
xchg
lcall
lret
ds
in
insb
add
fistps
punpcklwd
mov
pushf
inc
lret
imul
iret
cmp
cmpl
rolb
lret
dec
add
stos
in
cmp
insb
mov
push
push
push
fisttps
mov
lret
push
jae
fnstcw
ficompl
cmc
lods
inc
daa
fsubr
fistps
xchg
lock
xor
rcl
fnstenv
sub
lds
add
xor
jae
jmp
xchg
out
dec
push
pushf
aas
fmuls
xor
lret
in
cmp
lret
int3
ds
jmp
shrl
lret
xor
divb
mov
loop
inc
and
int
lods
sbb
loop
pop
dec
pop
mov
pop
iret
addr16
dec
cli
mov
es
cmp
lret
mov
test
xor
les
gs
cwtl
lret
rcll
xor
sub
cli
mov
and
aad
push
enter
mov
sarb
rcl
sub
lea
xchg
push
adc
add
loop
movsb
jnp
cmp
pop
sti
and
pop
pop
or
jb
sbb
shrb
or
add
shlb
cmp
push
lret
cmp
jecxz
enter
ror
cs
lret
loope
mov
xor
lret
test
in
scas
leave
pushf
push
outsb
popf
cmpsl
test
mov
sub
gs
or
cmp
stos
mov
imul
bound
inc
lret
repz
repnz
lahf
into
cmp
xor
and
jge
jb
xchg
push
scas
rorl
je
lcall
mov
adc
mov
lret
scas
arpl
insb
imul
and
jge
call
dec
sti
sarb
sar
mov
mov
inc
cmp
cld
cltd
stc
adc
push
stc
inc
in
arpl
popf
lret
dec
xchg
mov
lods
icebp
fst
push
cmp
jle
mov
sbb
xor
scas
mov
nop
push
fadd
xchg
lret
popf
cmp
imul
fcmovne
mov
movsb
inc
pop
sub
mov
dec
sbb
scas
mov
int
inc
mov
int3
aaa
popa
lods
popf
mov
mov
cltd
pop
push
lcall
cmpsb
shll
lock
fs
sub
adc
push
jp
sub
ror
sub
lds
or
jmp
adc
lret
in
push
lock
lret
les
lret
lods
call
mov
mov
dec
clc
test
or
and
pop
lret
fidivs
lret
out
jle
or
js
jl
ret
repz
or
lea
fcoml
outsb
pop
xor
cmp
and
test
fiaddl
xor
adc
outsl
ds
and
adc
inc
lret
push
and
sub
pop
ljmp
into
dec
das
nop
cmp
test
rclb
dec
xor
cmc
cmp
jae
lret
ret
cmp
inc
sub
push
ja
add
xor
pop
sub
loope
jbe
xchg
mov
dec
pop
sub
cli
sbb
lret
jo
pop
loop
arpl
push
add
sub
fistpl
call
std
aad
mov
fcmovbe
mov
ret
sub
cli
xor
inc
cmp
stos
data16
xlat
mov
shrb
lcall
push
aad
bound
std
xchg
sti
cmp
cmp
xorb
lret
push
mov
popa
in
or
fisubrl
repz
ret
pop
stos
mov
pop
add
mov
sub
and
dec
cmp
int3
adc
xchg
repz
xor
lret
inc
jno
stos
and
sub
inc
push
pop
cmpsb
cli
pop
popf
das
adc
push
pop
test
lret
xor
push
push
jp,pn
push
out
lret
adc
fs
subl
xchg
jnp
shlb
jb
sub
adc
push
mov
xchg
pop
jmp
cli
in
gs
aas
push
lret
out
fucomp
jecxz
lret
add
xchg
lret
idiv
test
add
das
mov
sti
sub
fadds
lret
or
lret
call
cmp
js
lret
push
insl
imul
test
adc
xor
mov
xchg
mov
xchg
in
xchg
xor
add
dec
pop
push
dec
and
add
in
pop
lret
testl
stos
jecxz
push
sbb
sub
movsb
rcll
sar
sbb
pop
xor
pop
xchg
cmpl
dec
mov
xor
jns
pop
push
push
shr
call
fwait
mov
jge
repz
lret
jmp
in
mov
mov
fsin
ret
sbb
imul
mov
inc
rcrb
xchg
js
gs
ljmp
sarb
push
sahf
cmpsl
jg
repnz
sbb
adc
lret
aaa
test
mov
dec
xchg
loopne
test
add
push
pop
mov
mov
push
lret
pop
roll
cld
in
pop
inc
pop
shrb
jns
adc
lret
jmp
aad
push
lods
lret
nop
pop
or
or
add
pop
or
xchg
push
bnd
daa
out
lret
cwtl
xorb
lret
int3
xor
xor
into
adcb
addr16
and
xor
cltd
gs
xchg
nop
xor
jb
aad
dec
icebp
cmp
ljmp
pop
inc
ljmp
daa
push
rcrb
je
dec
iret
lods
rorl
aaa
pusha
or
lods
sub
adc
dec
xchg
push
rcl
test
mov
jne
cs
fsub
lret
cmp
mov
test
dec
mov
ret
sub
rclb
test
sub
cli
pop
sahf
sub
cltd
in
cmp
add
push
dec
push
arpl
and
mov
dec
sarb
fisubrl
dec
int3
test
lret
push
aas
cltd
mov
jecxz
dec
cmp
add
lea
fs
dec
mov
fidivl
aam
inc
jae
lcall
xchg
cmpsl
push
ljmp
into
ljmp
faddp
xlat
xor
lahf
ss
xchg
dec
mov
jge
mov
lret
pusha
add
cmp
jb
pop
lret
loop
cmp
ja
lret
call
cs
sbbb
dec
lret
or
fs
mov
fstpl
lret
cli
cmp
add
mov
push
adc
mov
out
cltd
mov
fwait
jno
lret
sbb
add
xor
je
pop
lret
cmpl
test
add
and
ljmp
fcomps
xor
sbb
into
xchg
stos
scas
and
mov
xchg
xchg
add
mov
xlat
lret
sub
pop
push
or
rolb
hlt
adc
inc
pop
mov
ss
push
mov
ficoml
lret
loope
scas
push
and
test
push
divl
nop
jecxz
addl
xchg
inc
fsubs
pop
fadd
lret
dec
ret
scas
call
xor
mov
sarb
lret
xorb
push
in
xchg
mulb
xchg
aad
lret
fistps
lret
movsb
pop
ss
or
fistpl
xchg
popa
popf
das
test
mov
sub
shl
cli
sarb
cmp
push
sahf
ret
mov
inc
rorl
jno
add
dec
bswap
cmp
int3
mov
scas
mov
cltd
stos
inc
add
cmp
and
scas
in
push
aad
ja
cwtl
sbb
rolb
inc
fucomp
dec
or
stos
sarb
pop
push
int3
adc
filds
pop
adc
mov
dec
sub
sub
cld
mov
outsb
adc
push
mov
xor
dec
aam
push
push
inc
push
fisubrl
in
xchg
test
rolb
adc
out
push
and
add
inc
push
ror
insl
pop
pop
shll
fwait
inc
jae
shr
mov
sbb
xlat
icebp
hlt
not
out
std
xor
adcb
sbb
ret
shrb
push
or
repnz
fwait
adc
cmp
lret
dec
adc
push
and
inc
rcrb
sahf
insb
sub
pop
lret
and
lret
adc
sbb
jl
int3
dec
sub
mov
xchg
inc
int3
loop
push
cld
mov
and
jbe
repz
cwtl
cmp
pop
jns
das
sub
push
loope
stos
lret
xor
lret
aaa
push
idiv
dec
lret
jno
cmp
pop
lret
add
sbb
push
push
fcompl
adc
rcr
cmc
push
xchg
popf
test
push
loopne
inc
lret
adc
push
lret
jecxz
xlat
nop
and
jo
pop
mov
mov
lock
pop
outsl
es
and
out
inc
and
std
mov
roll
sub
out
inc
je
cmp
sbb
rcrb
mov
mov
sbb
dec
idiv
push
gs
orl
push
clc
lret
mov
fmul
and
subb
lret
sahf
pop
push
jae
aas
lret
pop
test
ja
sbb
stos
and
mov
lret
adc
and
cli
or
push
sbb
inc
mov
lret
daa
cmp
imul
sub
push
mov
fwait
or
shlb
xlat
jno
push
cs
push
ljmp
shr
pop
jle
cmp
out
lret
sti
xor
rorb
pop
dec
lahf
stc
lret
popf
lea
outsb
bnd
dec
loop
sub
lret
dec
lahf
push
xchg
push
xchg
or
shlb
add
xor
cltd
inc
lods
xor
lret
scas
or
cwtl
cli
fabs
jbe
movsl
ret
and
and
popf
sbb
lret
pop
mov
ss
mov
lret
sahf
adc
inc
ja
lret
gs
fistps
sub
adc
lret
mov
lret
adc
add
mov
cwtl
in
movsl
nop
jp
repz
xchg
aas
ror
add
cmp
pop
push
adc
lret
aaa
in
add
fidivrl
shll
mov
fisubrl
mov
dec
lret
aaa
lcall
pop
lret
loop
ss
in
fcmove
sbb
and
dec
jg
loope
mov
push
add
popf
cmpsl
mov
inc
push
int
icebp
jbe
mov
mov
aam
and
outsl
xchg
mov
mov
stc
push
push
lret
repnz
sbb
cmpb
arpl
sub
mov
outsl
popa
cmp
int3
repz
xchg
arpl
aam
test
rorb
lret
cs
dec
repz
lret
call
jle
movsl
mov
and
mov
jmp
ret
add
lret
xchg
lret
sub
inc
mov
fidivrl
push
nop
push
dec
cli
stos
mov
cmpsl
adc
jae
leave
stos
hlt
lret
push
insb
mov
shll
rolb
fcom
or
lret
psrld
int
mov
and
lret
fwait
shl
sbb
inc
lret
js
add
jecxz
lods
xchg
or
sub
xchg
lret
pop
push
xor
mov
lret
das
cmp
fldl
iret
jns
sbb
ljmp
xchg
pushf
int3
mov
dec
mov
inc
mov
mov
jge
cli
ja
add
push
fists
xchg
push
lret
inc
stos
hlt
fnstsw
adc
test
jnp
pop
lcall
aas
out
fadds
mov
inc
cwtl
loopne
adc
mov
movsb
aam
dec
pop
jo
roll
lods
sub
sarb
ss
ljmp
fcoms
jae
lret
adc
lret
push
jb
pop
ja
cmp
sub
cli
cmc
cmpsl
bnd
lret
orb
mov
cmp
dec
int
pop
in
xor
xchg
movb
pop
lret
mov
ror
jo
loope
push
jecxz
jmp
jne
or
lret
pop
jp
pop
je
shlb
cmp
sub
or
fisubl
in
fxch
add
fidivrs
lea
mov
dec
mov
outsb
adc
xchg
lret
cmp
mov
jns
jge
xor
fs
ret
and
jg
jnp
lret
cmp
stos
sahf
mov
fdivrs
aaa
inc
xor
sbb
movsb
lcall
add
fdivr
xor
jo,pn
ss
loope
testb
cltd
dec
pusha
into
mov
lahf
pop
dec
jl
popa
inc
imul
fistl
mov
push
adc
call
add
popf
jno
lods
das
cmpsl
lret
enter
lret
leave
imul
cmpsb
mov
cmc
cwtl
cmp
scas
push
ds
mov
jmp
fdiv
imul
out
pop
fsubrs
lret
js
loop
ja
mov
xor
pushf
cltd
rcll
inc
push
nop
adc
es
inc
push
lcall
lret
mov
in
cmpsb
jmp
cltd
icebp
arpl
sub
push
scas
data16
lret
jns
push
stos
cli
rcrl
dec
loop
outsl
cmpsl
xchg
pop
movsb
mov
and
mul
cmp
push
and
jno
push
pop
popa
stos
negb
enter
lret
xchg
jne
fcmovbe
lret
pushf
lahf
in
inc
repnz
ficompl
mov
pop
push
insl
lret
jne
push
mov
shlb
stc
lret
mov
push
fidivrl
ja
int3
ljmp
xchg
jle
out
and
pop
loop
out
sbb
arpl
icebp
xor
add
cmp
sub
mov
push
in
dec
sub
or
int3
or
mov
dec
leave
std
push
fdecstp
inc
mov
lret
lods
sub
xchg
lret
in
rcll
dec
jge
dec
aaa
xchg
mov
cmpsb
sub
dec
ja
dec
mov
outsl
cmp
daa
lret
jmp
fsub
ds
lods
lret
mov
in
mov
dec
sbb
sbb
lret
das
add
push
std
fs
lock
jnp
mov
sbbl
sbb
mov
shrl
rorl
sbb
push
cmp
jl
xor
out
pop
mov
lret
jp
push
dec
xor
jbe
fnstenv
es
mov
loop
xchg
sbb
jl
jge
xor
cli
mov
pop
fwait
mov
lcall
lods
sbbl
push
popf
jge
rorl
loop
lret
pop
ss
lcall
dec
xchg
dec
jmp
mov
loop
and
xchg
test
lret
adc
jns
pop
ror
push
loope
fwait
mov
jle
sbb
fs
mov
lret
adc
cwtl
add
rcrb
cli
std
iret
sbb
lahf
adc
and
enter
dec
cmp
sbb
and
into
stos
insl
push
sbb
bound
sub
mov
inc
lret
push
cmp
lods
pop
jp
aaa
xor
lret
orl
xchg
pop
adc
and
rorl
or
pop
add
xor
xor
lret
and
and
js
dec
sub
pop
lret
mov
ja
jmp
mov
ror
mov
add
lret
orb
enter
push
cmp
lret
xorl
lret
pop
sbbb
mov
hlt
mov
sar
outsl
in
lret
inc
push
xchg
adc
mov
lahf
lcall
xor
cmp
adc
inc
insl
pop
rclb
ret
lret
cs
inc
xor
lods
shrl
sbb
jl
out
nop
sbb
jb
rolb
pop
loopne
repz
mov
jp
inc
loope
cmp
mov
push
mov
sbb
adc
mov
sub
stc
mov
inc
lret
mov
or
adc
mov
jae
mov
push
jmp
dec
adc
jno
or
popf
les
cld
bnd
out
push
fistps
sar
lahf
fwait
imul
leave
lret
xchg
cmp
mov
loopne
sarb
push
out
leave
aam
push
xlat
loope,pn
lret
insl
and
jle
push
lret
ljmp
pop
mov
es
sub
test
push
dec
scas
test
jns
inc
dec
nop
out
and
shlb
lahf
mov
lret
sti
mov
and
and
out
hlt
jnp
xchg
jae
lret
shl
cmpsw
sub
push
add
xor
cmp
add
mov
lret
sti
leave
inc
add
sub
aam
es
jle
xor
mov
out
repz
fdiv
into
sti
mov
pop
cwtl
lock
sarl
imul
pusha
pop
lret
mov
sti
mov
out
imul
sbb
sub
or
xchg
add
fnstcw
adc
jno
jne
popa
cli
pop
xchg
fidivs
and
mov
ror
nop
into
leave
fldcw
adc
mul
cld
sbb
xchg
fstps
mov
sbb
fistpl
lret
lds
add
sbb
cmc
mov
push
lret
sbb
loop
or
in
out
add
sbb
xor
xchg
rclb
cld
xor
push
jge
imul
fsubs
mov
fsubs
cli
dec
and
in
or
nop
jl
lret
add
inc
dec
pop
mov
cltd
lret
sub
push
mov
xor
pushl
jle
in
dec
xlat
and
lret
pop
jnp
loop
es
pop
mov
cmp
lret
sub
cmp
das
lret
push
imul
imull
stos
ret
lret
jmp
nop
out
sbb
dec
je
pop
loopne
cli
popf
loope
cltd
lret
push
cmc
mov
jo
daa
add
into
mov
push
push
jg
push
and
sbb
ret
lret
out
mov
and
lret
iret
push
mov
insl
stos
inc
loop
jne
rcl
push
jbe
fiaddl
stc
ljmp
lods
and
roll
adcb
lea
call
sbb
or
mov
sbb
arpl
or
rclb
jb
adc
outsb
lret
xchg
add
lret
cmp
lret
adc
lret
xchg
int3
jl
add
push
and
cmp
jae
xchg
shrb
jmp
cs
outsl
test
testl
pop
clc
mov
ljmp
inc
repnz
sbb
mov
mov
mov
int
cltd
mov
in
push
lret
sub
add
das
rorl
shrb
psubd
dec
xorb
movsl
xchg
lret
pop
push
jecxz
test
es
sbb
dec
fisubrs
xchg
sbb
ja
sub
es
mov
fmull
mov
inc
cwtl
jbe
pop
insb
ficompl
lods
push
inc
jo
shlb
dec
mov
fbld
sub
inc
cmpsb
arpl
rcl
lret
sub
jbe
mov
adc
lods
je
pop
fs
rcrl
das
lret
push
mov
lret
loopne
movsl
arpl
mov
rorb
push
lret
sbb
daa
pushf
inc
cmp
sub
ds
mov
lock
minps
lret
repz
cmpsb
iret
pusha
lock
bswap
jns
adcb
xchg
add
push
xchg
cmpsb
loop
bound
mov
xor
shrb
ficoml
leave
sub
fwait
je
push
aas
mov
stos
sahf
cs
cwtl
rcll
pop
mov
int
fiaddl
xchg
jmp
push
in
outsl
arpl
in
mov
pop
lret
or
test
jnp
cli
fists
jmp
pop
pop
sub
mov
pop
dec
hlt
adc
push
push
mov
ja
and
push
jmp
incb
pop
xchg
ret
adc
xor
sbb
es
dec
pop
repnz
shrb
addb
jmp
in
xchg
mov
aam
fstp
push
adc
cltd
cwtl
mov
inc
xchg
push
cmp
inc
push
js
xchg
stos
fmuls
in
imul
lret
daa
jl
cli
mov
lds
or
or
or
inc
lea
mov
ret
in
cmpl
mov
push
call
std
xchg
mov
out
adc
pop
and
ss
xor
lret
xchg
into
or
mov
mov
cli
ljmp
ficompl
sbb
or
push
rolb
push
lretw
mov
pop
adc
add
push
mov
stos
int
imul
inc
stos
mov
cld
xor
sti
pop
lret
lret
xchg
inc
push
testb
scas
ficompl
mov
int3
lret
push
sub
or
adc
cmpsl
push
jp
aam
jno
sub
repnz
cmp
shr
add
jle
lock
movb
push
inc
mov
ljmp
and
ret
xor
xor
pop
ljmp
fmuls
fmulp
push
cmpsl
mov
add
pop
mov
cltd
lret
mov
push
cmp
arpl
mov
jl
mov
inc
inc
lcall
jo
aaa
outsl
adc
lret
orl
leave
lret
insl
mov
jne
and
sub
ret
test
mov
sbb
jmp
xor
dec
mov
into
mov
aad
out
mov
cmp
inc
out
pop
lret
in
std
pop
xor
mov
inc
das
mov
and
es
push
sbb
jle
fucomp
mov
lods
cmp
nop
mov
fwait
cwtl
pop
rcrl
sub
ficoml
test
stos
pop
and
lret
out
cmp
jns
insb
or
loop
jbe
jae
fs
cli
pop
xchg
add
lret
insl
mov
cmp
and
cmp
pop
in
leave
fnstenv
repz
sub
push
mov
xor
jbe
iret
test
std
call
lods
xor
inc
ljmp
lret
dec
orb
mov
incl
lret
add
nop
sbb
cmp
adc
test
outsb
mov
mov
push
push
or
sub
ret
leave
mov
mov
fisttps
inc
add
sbbb
ljmp
fisttpl
mov
std
jbe
fisubrl
add
pop
xlat
pop
lret
xchg
mov
fcompl
out
popf
pop
into
test
arpl
or
test
dec
jge
jno
loope
sub
lahf
iret
dec
lret
mov
fimull
test
pop
pusha
roll
fiadds
sbb
pop
fstpl
loopne
cli
cmc
sar
mov
sbb
or
mov
xor
inc
dec
sbb
lret
xchg
pop
xchg
jge
dec
lret
dec
repz
pop
jb
lods
inc
lcall
cltd
daa
lret
jne
or
aaa
xor
nop
push
addr16
sbb
adc
or
testl
add
inc
cltd
mov
dec
jno
aam
in
int3
mov
rol
and
push
push
incl
cmp
sbb
sub
fiaddl
in
fcompl
mov
clc
push
gs
pop
mov
loop
mov
popa
pop
cmp
lret
push
jo
cmp
ja
dec
xchg
in
dec
lret
fisttpll
lret
pop
adc
test
jo
dec
xchg
or
lret
push
push
gs
add
popa
std
push
lret
das
pop
sub
mov
xchg
pmulhuw
ret
arpl
xor
pop
jnp
fsub
lret
pop
cmp
push
movsb
sbb
lret
int3
scas
adc
ret
pop
iret
daa
xchg
or
mov
inc
loope
xor
roll
inc
int3
stos
mov
ret
mov
vsqrtss
lods
test
mov
rcl
fsts
add
sbb
aam
lcall
sub
xchg
push
jp
push
cli
jmp
push
xor
cli
cmp
cmp
aad
mov
lret
sbb
mov
lret
mov
jp
mov
jmp
add
popf
in
cmp
iret
jbe
lret
mov
push
outsb
cmp
icebp
lods
in
nop
xchg
and
ss
js
lret
mov
jmp
push
mov
hlt
adc
xor
shl
jns
lret
xchg
jecxz
xchg
xchg
gs
out
or
cmp
lret
adc
pop
in
jns
push
pop
mov
call
in
ret
int3
into
out
incl
inc
mov
add
xlat
inc
lret
fistpll
push
dec
shlb
jno
cli
in
xor
ja
out
lods
lret
faddp
sti
mov
cmp
rolb
das
cltd
lret
push
scas
cmp
lret
imul
js
mov
mov
dec
lret
jmp
mov
inc
loopne
jno
imul
daa
adc
cmp
push
pop
ret
pushf
push
xor
insb
pop
sub
pop
dec
lret
jg
inc
mov
popa
andb
and
mov
xchg
lods
sbb
pop
lds
mov
lret
pop
rolb
cli
cmp
iret
loop
ret
cs
iret
pop
loope
fwait
cld
stos
add
mov
sub
mov
shlb
dec
mov
mov
or
push
lret
dec
xorl
mov
and
or
mov
xlat
jp
js
cld
xor
test
gs
dec
push
and
mov
lret
lea
lret
mov
loopne
lcall
mov
mov
jbe
push
fwait
cmpsb
cmpb
push
adc
ljmp
addl
imull
inc
lret
jp
pop
sub
out
adc
movups
imul
ror
mov
xlat
and
mov
ljmp
push
inc
mov
sbb
jecxz
shr
jne
scas
xor
xchg
aad
stc
mov
xor
mov
je
sub
inc
outsl
mov
lods
dec
lret
mov
call
jg
shl
add
cmp
or
int
lea
lret
shlb
rcrl
lret
sub
xchg
xchg
sub
dec
into
jne
sbb
cld
mov
rcl
xchg
in
jo
movsl
xor
out
out
mov
lret
ja
mov
and
push
fs
insl
jo
push
bound
ljmp
jp
loope
out
rorb
mov
ljmp
stos
lret
dec
lock
out
xor
lret
fcmovne
inc
cli
cmp
pusha
mov
lret
repz
xchg
call
push
jae
adc
sarb
sub
mov
fucom
lcall
ret
inc
lret
fisubrl
ss
fadd
sbb
dec
lret
xchg
jns
jb
or
jbe
pop
mov
mov
outsl
lret
and
ret
push
js
imul
add
movsb
hlt
and
lret
inc
cmp
adc
lods
lea
push
cld
pop
in
mov
lret
into
outsl
gs
inc
push
dec
pop
fmulp
sbb
and
movl
sahf
xchg
ror
test
aas
jmp
jo
jnp
mov
inc
roll
push
ljmp
push
mov
movsb
cmp
pop
lret
adc
insl
mov
hlt
lret
test
xchg
pop
pop
xor
lret
daa
cwtl
dec
sbb
cli
adc
push
sti
xchg
sub
ror
push
repz
pop
lret
fwait
cmc
mov
add
mov
and
sarb
loope
mov
xchg
aam
fs
imul
adc
xchg
mov
pop
xor
cmp
lret
adcl
cmp
cli
loopne
ss
cltd
popf
test
sbb
mov
ljmp
repz
adc
and
insb
pop
sbb
cli
xchg
outsb
sub
lret
or
push
das
daa
push
lret
mov
dec
lock
add
add
push
mov
fwait
loop
out
movsb
lret
cmp
adc
divl
lret
dec
mov
sbb
repz
pop
cld
jmp
and
mov
int
fbld
jo
sbb
ret
lods
fnstcw
filds
jmp
and
and
lret
in
inc
in
out
jb
mov
daa
sub
jno
xchg
lret
in
loope
in
lock
or
inc
jge
sub
pop
rcrb
repnz
mov
loopne
adc
lret
in
push
sub
lret
in
mov
mov
clc
scas
icebp
xor
sbb
xchg
sub
and
pusha
dec
mov
int3
enter
ds
nop
mov
add
and
push
sbb
lret
xor
xor
jns,pt
inc
data16
and
decl
popa
leave
cmp
loop
jecxz
test
cmp
lret
sbb
cli
mov
mov
popf
lods
ja
setl
shl
in
lret
rorl
arpl
add
or
scas
jmp
lret
mov
and
stos
mov
push
push
js
dec
inc
adc
dec
mov
pop
sarb
imul
inc
dec
test
xorl
fcomp
adcb
popf
jnp
dec
dec
or
fistps
bound
imulb
mov
push
cmp
fdivrs
lcall
into
mov
mul
xchg
cmp
in
sub
into
adc
movsl
adc
loopne
inc
lret
mov
push
mov
iret
sub
movsl
lret
nop
je
sbb
mov
jge
rcll
pop
cli
insl
pop
fidivl
sahf
mov
in
adcb
mov
popa
inc
mov
aad
push
lret
sbb
lret
inc
ljmp
jle
sbb
aaa
mov
mov
dec
rcl
fisubrs
dec
or
fdivr
xor
mov
inc
push
or
lret
mov
mov
imul
or
ret
lret
add
je
cli
stc
adc
push
and
push
movsb
pop
xchg
ficompl
in
mov
sbb
xchg
lret
jg
mov
push
lahf
adc
xchg
imul
sbb
in
jbe,pt
jle
inc
into
movsl
sbb
cmp
sbbl
fwait
mov
jne
mov
sbb
push
mov
xchg
xor
jae
jns
testl
shrl
lret
push
ljmp
repnz
pop
rcrl
sub
cmpl
or
lret
incb
mov
xor
loop
mov
jmp
ljmp
jp
addr16
mov
test
lods
mov
add
and
add
mov
cltd
cmp
mov
xlat
rcll
cmp
lret
lds
mov
or
cmp
sbb
stos
xadd
sub
adc
or
pop
outsl
and
jle
andl
cmp
mov
je
mov
xchg
fs
lods
dec
imul
out
jnp
xchg
pop
cmp
and
sbb
lret
cltd
cmp
fiaddl
mov
out
inc
mov
push
jmp
xchg
mov
fucomp
fs
dec
push
in
imul
clc
loop
mov
cmp
xor
mov
shlb
mov
mov
push
lret
mov
jp
enter
icebp
jecxz
or
lea
int
xor
sbbl
mov
stc
ficompl
mov
fs
shl
push
fisubl
jge
cltd
jo
inc
fsubs
aas
and
nop
jnp
add
xchg
loope
rclb
out
jecxz
mov
mov
and
dec
sarb
lea
lods
rcl
loop
push
lret
cmp
dec
mov
add
push
fsubrs
fcmovbe
imul
xchg
push
dec
lret
and
lods
popa
push
lret
sti
out
push
mov
lret
or
lret
js
push
and
test
xchg
lea
inc
mov
fstps
xor
xchg
mov
outsb
xchg
ja
popa
lret
sbb
push
cli
shll
jge
lods
push
mov
sbb
jp
mov
lret
test
outsb
mov
cmp
or
cltd
loopne
adc
push
xor
je
fsub
adc
jbe
insb
lret
shll
lock
jg
sti
popf
in
ret
fwait
fwait
mov
adc
js
nop
xor
mov
push
imul
fmul
movsl
popa
roll
gs
sbb
lret
icebp
nop
outsl
js
sub
dec
imul
aad
xchg
adc
and
subl
cwtl
cmp
popa
jg
and
jae
les
jle
push
shlb
mov
iret
add
pop
movsl
mull
add
fsubrp
fdivr
pop
sub
test
shl
lods
lret
jbe
dec
mov
sub
retw
jnp
inc
lret
cmp
mov
js
add
pop
lret
jmp
arpl
sub
cli
mov
and
hlt
mov
das
and
sub
lcall
out
cmp
lock
xlat
in
xchg
add
lret
outsb
pop
xchg
inc
lret
push
pop
fisttps
lcall
sub
ret
cli
stos
inc
in
ss
cmp
jmp
mov
add
adc
push
and
xor
xchg
add
dec
sarl
movsb
repnz
mov
into
movsl
insl
outsb
ficoml
or
int
add
jle
lods
je
mov
pop
scas
add
popa
mov
sbb
inc
and
ja
adc
lock
push
sti
out
jmp
fsubs
inc
cli
in
aas
pop
mov
lret
lret
push
and
test
icebp
lret
push
paddsb
sub
push
fdivs
pop
cmp
scas
loop
lods
lods
aad
loope
or
lret
mov
gs
or
mov
loop
cmp
int
imul
or
cmp
sbb
mov
into
mov
push
test
int
cmc
sti
lret
jecxz
sbb
pusha
test
sub
out
mov
xchg
stos
movsb
fucomi
lret
mov
mov
and
fidivl
push
rclb
ffreep
xchg
sbb
cs
mov
fisubl
inc
cwtl
aam
lret
lods
inc
pop
xlat
repnz
pushl
in
jae
sti
pop
test
cli
or
mov
inc
in
mov
cmpsb
adc
mov
push
adc
fxch
jne
or
inc
iret
cld
jmp
pop
jp
rcll
fldenv
in
ljmp
push
xor
and
xchg
ret
adc
shlb
call
test
enter
mov
mov
cltd
lcall
dec
jo
popa
pop
inc
leave
push
push
mov
lret
loope
lock
push
hlt
mov
jmp
gs
fstps
ds
ja
pop
jb
test
dec
aaa
and
inc
bound
dec
cmc
and
shll
xor
push
jle
ret
dec
sbb
jmp
repz
daa
jbe
mov
leave
lret
jmp
test
fdiv
ret
lret
cmp
pop
les
notb
mov
rolb
cwtl
mov
in
sti
dec
cmc
mov
or
xor
jae
adc
outsl
cmp
test
pop
in
lret
pop
xlat
pop
int3
hlt
mov
es
insl
xchg
lret
enter
push
scas
lret
cwtl
xor
ds
sti
jae
mov
sub
xchg
and
or
inc
outsl
es
test
fmulp
inc
xchg
dec
add
jmp
stc
in
mov
xchg
push
aam
icebp
ja
dec
xchg
jge
mov
pop
ljmp
and
lret
in
cmpl
xchg
jb
testl
and
mov
lret
fmuls
cwtl
mov
adc
paddq
mov
fimull
clc
js
sub
cld
lret
push
xchg
outsb
sbb
inc
lret
iret
push
rcrb
cltd
xchg
pop
inc
sahf
shl
ja
iret
add
add
add
imul
loope
lret
xchg
outsl
rolb
lret
xchg
pop
adc
movsb
push
jnp
push
mov
inc
xchg
dec
push
gs
mov
rcl
ror
nop
fsubs
fxch
or
fs
or
lds
jg
movsl
pop
or
jge
mov
test
loope
lret
mov
cmove
mov
out
lahf
add
cmc
mov
dec
das
pop
inc
lods
iret
in
push
stos
ljmp
xor
xchg
cwtl
dec
lret
arpl
cmp
add
pop
mov
fs
mov
imul
mov
sbb
xchg
push
pop
xor
lret
test
jo
push
dec
outsl
lret
sbb
stos
and
xlat
jmp
rorb
sub
int
mov
jle
fxch
shlb
fs
sub
sub
and
lret
jno
push
push
mov
test
ss
fidivrl
mov
push
dec
mov
aad
lret
ljmp
pop
adc
adc
lret
ss
xchg
test
fisubrs
sbbl
or
jl
nop
pop
cli
xor
jo
sbb
xchg
lret
roll
repz
hlt
xor
scas
or
les
lret
adc
test
movsl
mov
cmp
inc
inc
out
lods
mov
dec
push
dec
ror
mov
shrl
xchg
lret
xor
cmp
je
mov
mov
cld
and
scas
cltd
loope
mov
or
push
and
clc
stc
mov
int
cmp
aam
fildll
push
xchg
pop
jge
loop
fldl
lret
outsl
mov
lret
add
dec
mov
mov
jne
push
inc
ds
adc
inc
std
push
sbbb
outsb
insb
inc
testl
lahf
cld
cmp
cli
xchg
mov
xlat
and
bswap
aad
stc
push
sbb
pop
stos
popf
and
call
pop
push
mov
pusha
lods
lret
or
adc
sub
leave
xchg
push
lcall
push
sub
stos
xor
imul
addr16
sbb
ret
and
adcl
lret
sbb
cmp
push
xor
fdiv
and
fwait
je
lret
xorl
cli
sub
add
mov
lret
mov
inc
push
loop
lret
add
fiaddl
les
lret
jne
insl
and
xchg
xor
jmp
leave
sub
jae
lock
ds
paddb
rclb
icebp
lret
filds
sarb
jo
add
or
inc
xchg
or
jmp
mov
mov
shr
lret
es
or
mov
jge
or
pop
pusha
outsb
jmp
add
cmp
cli
mov
jnp
push
adc
lret
push
dec
pop
sti
jecxz
pusha
movsl
loope
mov
push
ret
test
mov
adc
fwait
pop
cltd
outsb
aad
faddp
add
adc
dec
lret
es
dec
bound
inc
xchg
cs
shrl
outsb
call
enter
lret
ja
aad
or
loope
pop
add
jle
add
std
mov
jne
adc
out
xor
add
into
hlt
jns
lea
cmc
iret
das
mov
mov
fsubs
sarl
in
inc
lahf
rcrb
lret
jbe
fldt
sub
sub
aad
sub
push
jae
popl
mov
inc
cmp
std
xor
add
lret
push
jp
ja
lret
hlt
add
outsl
cmp
dec
cs
je
rcr
dec
or
ret
xchg
in
mov
shrb
test
fldcw
adc
add
shll
sbb
iret
js
lret
adc
arpl
cmp
and
imul
adc
cmpsl
mov
adc
fidivl
cmp
aad
inc
sub
cmp
lret
add
lret
cmp
sub
xor
call
imul
xlat
jns
sub
sahf
int
fldl
loopne
jno
rclb
fs
xchg
push
aas
dec
pop
popa
lods
sbb
lret
fidivs
jno
dec
stos
aad
mov
dec
mov
sarb
or
sti
mov
popa
or
mov
mov
sub
mov
inc
test
pop
ljmp
mov
cmc
add
mov
add
lds
fisubrl
jecxz
int3
scas
shrl
lock
popa
jno
pop
test
push
xor
lods
stos
or
push
es
add
data16
pop
aad
lret
leave
adc
ljmp
add
mov
push
lock
movsb
lret
cld
or
repz
mov
mov
fistpl
scas
xor
aam
fistpll
lret
int
mov
rol
fwait
jns
dec
xchg
bound
jecxz
and
lret
jns,pt
xor
push
add
mov
cld
cwtl
out
and
pop
cmpb
mov
sub
in
add
outsb
push
cmp
mov
mov
push
xchg
dec
imul
push
dec
popf
push
mov
stos
lret
and
ror
dec
push
popa
fcmovnu
xlat
cmpsl
lret
aad
sbb
lret
out
jmp
aas
xor
cmp
rcrl
push
sbb
lods
ficompl
lods
pop
lret
jno
push
icebp
popa
rclb
mov
mov
jbe
nop
fmull
fnsave
les
or
lret
xor
shl
inc
xchg
xor
sti
fiadds
aam
mov
lret
sub
mov
dec
stos
add
pushf
and
fxch
dec
outsl
cltd
cmc
mov
inc
int3
lret
hlt
test
fidivrl
inc
imul
shl
lret
pop
push
pop
int
add
pop
rclb
dec
std
dec
xchg
sbb
lret
mov
popa
lret
cmp
in
lret
aam
pop
xor
cmp
mov
cmp
scas
aam
sbb
dec
rolb
mov
stos
sar
jb
mov
ficompl
inc
and
mov
or
aam
fsts
lret
adc
add
lods
xchg
ljmp
push
pop
push
aam
mov
fistl
lret
hlt
mov
aad
xlat
mov
call
leave
push
aam
int
mov
out
rol
bound
cld
pop
gs
mov
lds
mov
lcall
sti
jnp
rcrl
int3
push
nop
pop
lret
mov
push
aad
cli
jb
xchg
lcall
lret
pop
lret
mov
sub
lret
xor
aam
push
nop
pop
jae
pop
dec
inc
stos
aaa
push
xor
into
aad
pop
into
jge
repz
popf
test
mov
inc
jp
rcrb
lods
cmp
mov
test
test
add
pop
movsl
aas
shl
adc
lret
mov
out
push
inc
sub
xor
jae
or
call
sbb
or
shl
movsb
inc
push
add
jecxz
negl
mov
ret
fiaddl
pushf
mov
clc
or
xchg
addb
lret
movsl
push
imul
inc
inc
out
lods
int3
cld
cli
cmp
xlat
push
adc
sbb
or
out
int3
push
inc
push
mov
out
mov
cwtd
sbb
or
xor
repz
push
popf
push
mov
dec
addr16
dec
pop
mov
cmp
aam
mov
lret
cwtl
rorl
adcl
and
push
jb
cmc
idivl
lret
cli
add
jecxz
movsb
loope
jns
ss
lret
fwait
rol
xchg
addr16
jo
pop
fisubs
sub
lret
cmpsb
out
dec
xor
lret
sahf
cmp
add
fcoml
cltd
cmp
gs
ficomps
jp
xchg
nop
lret
test
adc
out
add
out
mov
repz
xchg
pop
dec
mov
cmp
mov
lods
push
sahf
lret
sbb
or
or
mov
dec
xchg
lret
inc
dec
cmp
test
stos
in
cltd
popa
lea
pusha
mov
xor
int
lret
pop
out
loope
rolb
test
push
mov
dec
in
xchg
push
xor
xor
negb
mov
add
out
pusha
lret
dec
inc
mov
inc
test
inc
in
loope
adc
fiadds
shlb
jmp
movsl
in
lret
pop
pop
jge
inc
mov
or
icebp
fldl
lret
test
jecxz
fisubrl
std
or
pop
andb
lods
aaa
pop
lret
push
je
xchg
ficoml
push
dec
xchg
cli
andl
test
lret
into
adc
lods
stos
scas
ret
sti
xchg
std
dec
mov
ficompl
mov
jbe
sbb
add
fwait
lret
jg
dec
mov
shrl
int
xchg
stc
cmp
add
aad
mov
fimuls
fcomp
mov
inc
sbb
mov
or
dec
ja
test
xchg
push
push
or
mov
mov
bound
enter
call
lret
cmpsl
notb
into
lcall
add
insb
pop
mov
mov
enter
jno
lret
pop
xor
lods
jnp
add
in
dec
rorb
lret
ljmp
out
lods
aad
rclb
xchg
into
lret
ja
test
loopne
mov
adc
push
jns
inc
sub
vmovddup
repz
sub
sarl
test
or
repnz
xor
or
pop
cmp
ret
je
cmp
mov
ficoml
and
test
jnp
sbb
jno
into
lret
pop
lods
xchg
pop
pop
push
inc
cli
cld
add
test
lret
lock
nop
mov
push
stc
lret
imul
aam
lret
sub
lret
inc
mov
pop
cmpsb
clc
push
sar
sbb
mov
lret
cmc
imul
cld
vmovlps
arpl
cmp
addr16
sub
js
mov
rclb
mov
add
mov
mov
repz
ds
lret
mov
xchg
inc
fs
into
push
lret
add
lret
stos
pop
scas
xchg
les
mov
sarl
pop
ficoml
mov
jge
lods
imul
fldcw
lret
inc
movsb
pop
mov
stc
and
fmul
adc
loopne
cli
orl
bound
ljmp
fcoms
std
cli
xor
inc
push
test
mov
pop
lret
inc
inc
cmp
std
mov
xchg
inc
cmp
jae
loopne
sahf
dec
lret
popa
ficoms
inc
lret
je
xchg
gs
ljmp
sub
arpl
push
mov
int
jp
pop
inc
jne
lret
clc
push
cmp
stos
mov
nop
push
rcll
dec
cmp
es
xchg
gs
cltd
fwait
out
dec
jno
push
cmpsl
jmp
ss
lret
mov
mov
fists
xchg
and
mov
add
mov
lret
jecxz
xchg
in
pop
lret
mov
rcrb
or
mov
outsb
pop
sbb
das
or
shll
loopne
aam
and
lret
inc
or
pop
cmp
pop
lret
push
mov
ds
fs
ret
xchg
jno
mov
aam
push
iret
fiaddl
add
and
stos
xchg
sbb
jbe
push
and
jl
lret
mov
scas
mov
sbb
lret
lcall
or
es
sub
push
lret
arpl
lock
mov
jle
test
sub
jno
or
dec
push
cmp
test
mov
jo
testl
es
call
out
xchg
popf
sti
aad
in
shr
cmp
test
or
ret
pop
mov
jno
pop
fstps
aas
mov
lods
inc
nop
or
movsb
cmc
fists
mov
ds
fldcw
lret
add
sbb
pop
mov
inc
mov
push
pop
jb
cmpsl
fisubs
lret
lods
or
leave
add
ljmp
or
mov
scas
lret
sarl
adc
push
lret
stos
mov
lret
cmp
das
fidivl
cwtl
sbb
jbe,pt
fists
pop
in
sbb
mov
xchg
jae
inc
shlb
and
lret
andb
sub
lret
mov
fmulp
ja
mov
and
adc
gs
stc
xlat
fs
ret
xor
xchg
fimull
int
movsb
loope
push
dec
dec
xchg
add
sub
inc
popa
int
jb
dec
lret
sbb
add
mov
movsl
movsb
ljmp
shlb
jge
mov
movsl
roll
std
xchg
int
lret
shlb
fidivl
fisttpl
pop
sub
icebp
pop
mov
or
rcrb
inc
shlb
pop
cmp
loope
mov
xchg
cwtl
lret
in
scas
pop
add
outsl
insl
jno
sub
and
cmp
cld
shlb
pop
inc
pop
movsl
icebp
add
fcomip
in
mov
push
xchg
lret
mov
dec
lret
push
add
movsb
mov
add
out
mov
xlat
int
lcall
pop
lret
mov
test
adc
add
cmp
dec
data16
out
lret
repnz
into
shr
mov
mov
or
xchg
dec
mov
ficoml
sub
mov
imul
lret
jp
insl
shl
sbb
sbb
insb
arpl
xlat
lods
add
pop
stos
and
sti
in
jne
sub
mov
pop
adc
daa
lret
fnstcw
les
sbb
cmc
pusha
mov
cmp
pop
lret
push
inc
mov
pop
mov
push
cmp
ja
loopne
and
push
mov
lret
jb
das
mov
jnp
xchg
lret
cmp
inc
imull
das
int3
hlt
test
sub
lret
aam
and
lcall
fildl
lret
sbb
shlb
cli
hlt
pop
repnz
or
jmp
sub
lods
pop
xchg
loopne
aas
test
lods
mov
lret
sub
iret
mov
jmp
adc
adc
addb
lret
cmc
stos
outsb
dec
add
ret
xchg
movb
jb
sbb
nop
mov
lret
mov
test
pusha
hlt
lret
adc
add
sub
pop
xor
sbb
aad
pop
iret
lret
cmpsb
ret
ja
lret
xor
imul
lret
adc
aaa
ror
lods
int3
mov
lahf
lret
mov
inc
xchg
mov
push
pop
in
jl
pushf
ret
sbb
lret
mov
scas
mov
jb
es
inc
cmc
pop
sbb
lods
mov
rcr
cmpsb
mov
lret
push
das
fwait
jl
or
fidivrl
cld
test
in
je
mov
mov
ljmp
dec
jmp
push
pop
add
inc
lret
popa
xorl
pushf
pop
popf
sarb
and
mov
cli
clc
cmp
add
in
fldenv
ds
and
fimuls
mov
je
mov
pop
xchg
mov
cmp
jl
jecxz
into
mov
int
frstor
lret
push
dec
sti
iret
popf
push
cmp
inc
and
jnp
adc
fstps
jle
jno
sbb
pop
lret
mov
dec
lret
daa
jns
mov
add
jae
pop
inc
in
and
sahf
inc
push
js
xchg
mov
cld
sub
out
faddl
and
xchg
insb
fcmove
jb
ljmp
out
mov
mov
pop
inc
sub
lods
out
shr
cld
insb
mov
push
jecxz
mov
mov
in
out
dec
pusha
sub
mov
jnp
aad
lret
push
jl
cmpsl
ror
sub
scas
fcomi
stos
jnp
lret
cmp
dec
sub
lea
push
clc
into
pop
add
push
pop
fimull
dec
iret
and
and
lret
lahf
js
xor
pushf
push
popl
aam
cli
dec
dec
mov
cmpb
dec
ds
sub
fs
popf
push
in
rcrb
and
test
shll
inc
adc
lret
xor
or
add
lret
icebp
xor
mov
mov
mov
call
icebp
fisubl
sbb
arpl
je,pn
rcr
leave
mov
inc
dec
popf
inc
cmpsl
ret
lret
cmp
outsb
lret
xor
mov
cli
or
sbb
pop
into
loop
add
es
in
fxch
rcrl
clc
adc
sub
lcall
push
vcvtdq2pd
repnz
lret
adc
stos
lahf
pop
push
rcr
dec
pop
mov
push
push
leave
mov
xchg
fsub
mov
call
and
mov
sbb
inc
addr16
adc
jbe
int3
scas
xchg
fistpl
in
mov
add
push
mov
lret
xchg
lret
repnz
mov
mov
or
pop
sub
dec
xor
std
push
pop
dec
addr16
dec
fmul
xor
movsb
clc
mov
in
jg
nop
lret
cs
lret
dec
fcomip
dec
fiadds
cmpsl
xchg
fisttpl
mov
dec
mov
push
jp
std
adc
dec
popa
shl
or
lcall
sub
push
mov
lret
les
lret
add
cs
ljmp
sar
mov
lret
leave
stos
pop
sbb
cmp
aam
mov
and
xor
push
lret
rcrl
or
ror
repnz
rcll
movb
lret
bound
mull
pop
sub
test
fsubrl
js
cmpsl
jae
lret
pop
and
icebp
lcall
or
lret
mov
inc
sbb
sar
inc
imul
arpl
inc
leave
lret
test
lret
jne
out
push
jbe
lret
jmp
rcrb
dec
lcall
lret
and
cmp
shrl
xchg
add
mov
in
ss
addr16
cmp
mov
jno
push
cli
scas
in
sub
test
aam
mov
adc
pop
lret
lret
jb
out
loopne
push
and
lea
ret
lods
xor
sbb
lds
neg
inc
mov
shll
in
lret
pop
mov
int3
lret
out
ljmp
rolb
jbe
mov
pushf
insb
lret
shl
add
int
fisttps
xor
icebp
inc
sub
ficompl
out
int3
shr
sahf
insl
add
lret
imul
fisttps
mov
xchg
or
ds
ret
adc
stos
std
sub
dec
mov
lcall
stos
inc
sub
daa
dec
pop
mov
repnz
inc
rolb
or
lret
outsb
test
leave
cmp
pop
adc
push
shrb
mov
sbb
push
push
lock
and
add
sti
mov
rorl
cltd
and
arpl
es
aaa
cli
inc
hlt
bndldx
mov
push
mov
mov
negl
mov
cwtl
popf
pop
push
inc
dec
das
adc
pop
dec
adc
cs
cwtl
cltd
xchg
lret
fmuls
lret
fwait
test
sti
and
inc
rclb
dec
movsb
or
mov
lods
in
push
jbe
jae
dec
fidivl
sub
or
ret
jne
cmp
fwait
mov
scas
cmp
push
pop
incb
mov
cmp
fwait
push
and
imulb
stos
les
ret
lret
out
fstps
leave
adc
xchg
pusha
jo
mov
test
mov
fcmovne
cmove
js
cli
fwait
push
push
mulb
inc
mov
push
dec
mov
stos
rcrb
xor
mov
sti
repnz
outsb
xorb
cmp
cmp
iret
pop
pop
int
lret
shll
jg
loop
lea
dec
mov
int3
jnp
cli
fwait
mov
sub
jmp
or
xlat
sbb
aas
mov
cmp
adc
push
ret
and
mov
mov
jp
and
cmc
or
push
jns
xor
lods
mov
stos
xor
push
mov
repnz
imul
xchg
push
dec
adc
adc
cmp
or
lret
pop
jle
add
lret
insl
xbegin
sub
jns
push
inc
jne
cmp
push
cmpsb
jae
dec
jmp
push
lret
shll
fdiv
stos
push
js
rorb
mov
mov
mov
xor
jae
fwait
dec
sub
loop
push
pusha
lods
aaa
cld
mov
aam
push
jno
and
xor
lret
mov
push
lret
xchg
test
inc
mov
mov
pop
xchg
cs
std
ret
mov
cmc
pop
rclb
lret
push
mov
dec
pop
push
in
add
test
divb
xchg
imul
in
in
popa
subb
push
addr16
cld
repz
mov
stos
fiaddl
mov
push
jns
out
sbb
icebp
lret
roll
inc
outsb
mov
rol
xchg
cmp
mov
push
mov
pop
xchg
jge
xor
rcrl
mov
xchg
cli
mov
insl
shrb
mov
lret
pop
iret
push
and
mov
imul
dec
lea
lret
mov
ret
inc
sub
mov
dec
rcrl
lret
shlb
xchg
mov
fcmovb
push
lret
pop
cli
clc
aam
sarl
cmp
jp
insb
inc
xchg
dec
in
lret
iret
sub
lods
faddl
jb
scas
mov
sbb
mov
mov
xchg
lock
mov
lret
xor
dec
lret
shl
push
and
jecxz
push
inc
cmp
push
test
cmc
add
dec
dec
cmp
push
push
push
jle
dec
sbb
leave
les
cmpsl
or
sub
ja
cmc
and
adc
jno
add
push
cmp
test
pop
std
pop
call
subb
pop
xor
lret
movsb
jo
out
lret
loope
mov
or
lret
repz
mov
leave
lret
jmp
int
pop
xor
hlt
mov
ljmp
add
imul
cmpsl
push
inc
in
pop
and
lret
adc
loope
push
lret
jl
js
subb
rol
sarb
sub
adc
push
pop
sub
jo
jl
insl
test
dec
push
xor
popf
pop
sbb
hlt
inc
testb
lret
scas
dec
out
pop
add
jecxz
daa
mov
aam
jmp
fidivl
pop
dec
cmp
lret
daa
sub
inc
orl
sub
scas
mov
lret
push
jnp
adc
mov
mov
jp
push
fcomps
rclb
roll
and
inc
fidivrl
addr16
mov
xor
outsl
inc
daa
out
add
cmp
add
adc
lret
add
inc
mov
into
jnp
adc
cli
lret
xorl
or
sub
lock
or
mov
xor
lret
fisttpl
lret
loopne
pop
sbb
lcall
pop
sysret
lret
bound
nop
sbb
or
pop
lods
out
movsb
fnstenv
sub
into
dec
inc
adc
mov
lret
addr16
popa
xchg
adc
lods
jge
lds
fildl
and
lret
lods
inc
push
rcr
sub
insl
mov
test
sti
fldenv
adc
sbb
addr16
out
and
dec
lret
into
and
jp
push
stos
jns
push
pop
inc
push
mov
ret
into
mov
mov
inc
mov
push
into
mov
popa
es
addr16
xchg
fwait
lret
cmpsb
jns
or
push
std
lret
mov
xchg
dec
cmp
dec
inc
mov
rorb
rcrl
dec
stos
in
cwtl
fidivl
ja
arpl
lret
mov
cmp
mov
dec
jmp
lods
xor
or
jl
jno
lret
shrl
sarb
jo
xchg
sub
iret
fiaddl
stc
add
mov
lret
test
das
xchg
adc
fisubrl
jno
nop
sbb
cmpsl
mov
mov
fiaddl
imul
cmp
fcmovnu
sub
mov
outsb
jb
or
lret
cmc
pop
loop
fwait
or
aaa
jle
dec
or
pop
mov
lret
mov
ret
xor
mov
sbb
lret
gs
insb
xchg
mov
mov
sbb
mov
iret
inc
ret
cmp
dec
insb
xor
addr16
subb
push
cmc
sahf
std
mov
add
fsts
loopne,pt
adc
and
mov
mov
fcmovu
je
push
and
filds
xchg
mov
scas
scas
add
xor
mov
mov
xchg
imul
mov
mov
mov
xor
cmp
lret
push
jns
xchg
jae
or
ficoml
jge
movsl
dec
loopne
sti
mov
mov
pop
lds
mov
mov
mov
lret
mov
and
sub
jno
popa
lret
and
mov
shrb
pushf
dec
fcmovbe
mov
fadds
int3
das
push
jl
mov
lods
adc
out
stos
cltd
mov
inc
xor
iret
pop
sub
lret
jmp
loop
imul
and
call
sub
movsb
pop
cmp
popf
sbb
cmp
into
jo
nop
push
lret
inc
das
daa
iret
fmulp
pop
add
rclb
mov
mov
xchg
lea
mov
push
fwait
ljmp
mov
clc
fidivl
adc
gs
scas
ret
pop
mov
ficoml
outsl
sub
lret
mov
dec
pop
mov
stos
lret
jns
xchg
cwtl
imul
sub
ret
mov
lret
push
and
add
push
cmp
lret
nop
push
add
pop
xor
rclb
imul
in
scas
sbb
cmpsb
fadd
movsb
stos
and
xor
into
or
mov
inc
push
fucomp
mov
sbb
aad
sarb
sub
out
inc
lret
jge
push
sbb
sbb
mov
cmp
mov
arpl
adc
ffreep
xchg
les
and
jbe
pop
xchg
and
insl
xchg
lods
lret
pushf
mov
dec
in
lret
mov
fildll
aam
pop
dec
sbbb
adc
pop
push
bound
jp
movb
jae
movsl
dec
pop
lret
cli
les
into
inc
fbstp
insl
int3
lret
lock
mov
neg
ss
int
mov
movsl
dec
jle
adc
js
pop
adc
cmp
fsubr
sbb
lret
push
push
sahf
mov
push
mov
aam
ret
jmp
and
lret
lea
std
and
xchg
lret
pop
add
popf
das
lds
jmp
int3
push
sbb
mov
sub
lret
pushf
ret
fsubrs
mov
outsb
cmp
mov
xchg
shll
mov
lret
fsubrs
and
mov
data16
outsl
inc
fimull
test
xlat
iret
xchg
cli
out
xchg
dec
inc
leave
push
mov
and
int3
pcmpgtd
shl
push
loope
cltd
cld
lret
jb
movsb
in
sbb
cli
mov
xor
repz
outsb
and
addl
ljmp
fmuls
mov
test
icebp
inc
push
aas
fs
adc
loope
popf
call
jge
jns
test
lret
daa
andl
lret
mov
xchg
call
test
cwtl
shlb
lret
movsl
cli
or
xchg
adc
jle
adcl
and
push
cltd
push
lret
jge
adc
adc
dec
adc
jb
inc
add
fnstsw
sti
lock
in
repnz
idivb
mov
jo
adc
mov
lret
add
lret
lods
cmpsb
div
bswap
jl
inc
rcrb
mov
lahf
or
cltd
subl
es
xchg
lret
xor
cmp
in
mov
lret
scas
adc
lret
icebp
push
inc
rcrl
jmp
lods
std
lret
dec
fnstcw
cmp
in
out
mov
and
insl
adc
add
dec
xchg
add
repnz
add
ljmp
dec
cltd
lret
fildll
lret
das
adc
addr16
dec
rcrl
clc
lret
adc
mov
xchg
pop
and
rorb
pop
mov
das
repnz
jae
ljmp
fcomps
mov
in
int3
mov
mov
sbb
clc
and
lds
jg
inc
jl
mov
shlb
and
cmpsb
xor
pop
or
and
stos
bound
push
sub
dec
fimuls
orl
aam
xchg
push
mov
es
cmc
lea
and
mov
sbb
and
rcrl
adc
sahf
mov
dec
sub
cmp
fucompp
push
shll
adc
in
sti
sbb
lret
pop
popa
aam
cmp
lret
xchg
mov
ljmp
out
imul
xchg
or
cs
dec
shrl
decb
in
mov
shl
imul
inc
cmp
xchg
push
outsl
mov
sarb
xchg
adcl
int
or
lret
in
push
insb
cmp
lret
pop
into
adc
nop
psubd
sbb
dec
sub
jns
lea
mov
stc
mov
inc
mov
cli
push
imul
fistps
je
mov
hlt
imul
loopne
ficompl
sub
int
jp
test
cmp
lret
jo
adc
jecxz
pop
and
and
pop
shr
sub
mov
or
cmpsl
adc
sahf
cli
loopne
mov
iret
rclb
call
lret
jle
lret
idivl
popf
iret
push
jbe
sbb
rorb
add
and
lret
jmp
int
sub
int3
mov
lret
cld
pushf
mov
lret
lea
pop
jns
mov
lret
mov
add
je
adc
dec
popa
cmp
lret
pop
mov
and
mov
lret
ret
mov
add
movsb
aam
sub
mov
jecxz
out
mov
fiaddl
mov
test
push
cmpsb
sbb
lret
add
fs
inc
shll
jno
in
lahf
pop
xchg
int
lret
and
fisubrl
jecxz
xchg
sub
cmp
fnsave
lock
stc
cmp
out
fs
xchg
mov
into
cmpsl
pop
in
mov
jmp
sbb
sti
mov
cmp
mov
push
or
lret
jp
aad
mov
lret
xchg
xor
lcall
and
lret
and
sbb
arpl
lret
es
mov
or
iret
leave
test
sub
pop
xor
stos
jecxz
xor
pop
mov
xchg
cmp
mov
dec
lret
insb
repz
stos
lret
and
push
add
lret
mov
and
je
insl
mov
ret
mov
inc
stos
jmp
lret
loop
jne
ret
push
lret
or
into
out
xor
lret
lret
add
push
clc
push
push
and
cld
subl
mov
lcall
fnstenv
repz
sarl
enter
push
lret
fldenv
pop
out
jg
lcall
sbb
lretw
test
testl
pusha
mov
decl
cli
cmpsl
adc
adc
dec
out
push
mov
lret
out
add
lods
sbb
or
add
lods
loop
adc
push
dec
pop
fidivrl
xchg
lods
inc
clc
int3
jb
int
hlt
xchg
stos
lcall
ja
add
lret
sbb
cltd
icebp
ljmp
sahf
xchg
lret
insb
icebp
into
sub
and
addr16
push
jle
inc
stos
in
ljmp
pop
pop
lret
inc
addr16
ja
cli
or
dec
sbb
sub
adc
nop
lcall
stc
xlat
jae
lret
inc
mov
inc
inc
cs
cmp
jmp
pop
xchg
pop
sarb
adcb
jge
in
stos
lret
xchg
jmp
lret
push
fdivs
bound
dec
movsl
fnstcw
push
dec
inc
iret
test
lret
or
xor
clc
jp
and
inc
lret
movb
inc
daa
lret
arpl
lret
out
mov
mov
add
aam
jg
jns
lret
xor
xor
mov
cmp
pop
mov
adc
sub
adc
inc
testb
cwtl
in
lea
ret
mov
xchg
push
lret
xchg
stos
cli
int3
inc
mov
xor
addl
dec
and
cmp
rcl
inc
testl
lods
xchg
fcmovu
stos
daa
inc
fadd
cli
pop
insl
and
das
xlat
adc
mov
sub
mov
cltd
rol
mov
inc
fmull
outsl
lods
dec
cli
cmp
aam
loopne
mov
mov
clc
ja
jb
or
cmp
jns
lret
pop
push
mov
cmp
push
adc
pop
and
xchg
jg
js
pop
and
cli
dec
cmp
addr16
fisubrl
mov
dec
or
dec
jnp
or
faddl
push
out
leave
clc
cwtl
mov
rol
adc
stos
popf
lret
jmp
lea
shlb
mov
loop
or
mulb
xchg
ds
or
rclb
cltd
push
lret
clc
mov
ret
mov
fidivl
pop
mov
mov
lahf
lret
stos
or
ljmp
jp
adc
lret
imul
cmpsl
cld
add
je
lret
outsl
dec
mov
xor
cltd
jmp
pop
or
leave
cmp
test
cs
in
lret
stos
push
test
jae
shrb
mov
fwait
push
mov
rorl
jg
in
shrl
in
inc
mov
mov
jne
lods
stos
test
push
inc
leave
lret
add
adc
lret
inc
insl
scas
mov
lret
pop
cmc
jmp
daa
movb
lret
int3
pop
dec
in
ljmp
fildl
fsubs
fwait
mov
icebp
cs
jp
lret
cld
mov
lret
or
fcmove
xor
push
loop
fisubl
test
mov
inc
jmp
jnp
mov
shrb
mov
or
sbb
fnstsw
addl
pop
pop
xchg
lret
jecxz
pop
out
subb
std
or
cmp
cs
hlt
sub
insl
pop
adc
into
xor
les
lods
push
or
mov
mov
orb
cli
out
inc
push
not
dec
pop
jge
scas
rcr
cmc
inc
mov
sbb
fidivl
sti
push
adc
lret
jg
shrb
cli
lahf
aad
xor
sbb
out
inc
lret
icebp
lods
xchg
pop
imul
lahf
xor
mov
inc
loopne
fcmovb
add
cmp
mov
adc
mov
inc
pop
lret
bnd
and
mov
add
sub
cs
sub
lret
pop
inc
out
jae
out
lret
push
push
add
loope
jbe
repnz
mov
push
int
enter
cmp
aad
jbe
or
in
adc
cmpsl
jns
lret
fidivrs
fidivrl
and
pop
nop
and
popa
cmp
add
lcall
loop
dec
push
xchg
lret
mov
imul
out
jge
test
das
lea
rcl
pop
fcmovnb
mov
mov
cmpsl
xchg
cs
js
push
lret
xchg
mov
add
scas
fisubl
jns
ds
mov
shll
add
jp
pop
ja
lret
into
repz
add
mov
add
icebp
cmc
imul
es
stos
mov
movsl
sbb
inc
mov
enter
xchg
push
mov
jae
dec
aaa
inc
shlb
mov
sbb
sarb
dec
movb
or
push
out
push
cld
lret
push
leave
cmpsb
ss
dec
stos
outsb
mov
shlb
dec
xchg
arpl
jge
int3
jbe
cs
lret
pushf
movsl
cmp
xlat
lret
fwait
sub
dec
pop
in
test
xchg
cmp
test
lret
stos
jo
inc
clc
lret
cmp
push
pop
imul
scas
jmp
dec
movsb
mov
push
add
add
aas
lret
pusha
cmpsl
insl
addr16
stos
roll
hlt
xchg
xchg
aas
xor
dec
test
jge
int
jb
dec
jnp
lock
pusha
shrb
or
test
outsl
fmulp
xchg
ljmp
lret
scas
insl
lods
or
lock
jle
cmp
mov
pusha
sbb
mov
mov
ret
fndisi(8087
push
jp
mov
rclb
fidivrl
scas
mov
cmc
fmul
jmp
mov
pop
inc
jge
and
fistps
in
iret
dec
and
lret
add
jg
ror
call
insb
cmp
aas
into
jnp
and
push
mov
dec
cmp
cs
ja
aas
mov
shrb
cmp
cld
xor
jns
pusha
mov
popa
test
inc
in
sub
pop
int3
insb
imul
aas
arpl
fcomps
cltd
sub
push
pop
test
pop
hlt
into
mov
lret
lds
into
test
sub
jl
out
dec
int
jp
fcmove
cmp
call
pop
jnp
xchg
push
xchg
lret
dec
fbld
xor
fs
mov
mov
movsb
ljmp
mov
or
or
fwait
enter
lret
test
std
les
cli
and
inc
cmpl
lret
and
push
xor
bound
lret
ret
out
das
cli
enter
xor
pop
cmp
aad
loope
hlt
lea
fimull
rol
pop
ret
lea
ret
popa
lret
into
xchg
loop
shll
lret
push
sarl
xor
cwtl
outsl
dec
adc
sbb
xorb
and
repz
stos
adc
dec
mull
pushf
pop
fisubl
xchg
xor
push
lds
lods
or
arpl
xchg
stos
std
cwtl
leave
adc
mov
xor
orl
and
xchg
lret
pop
jg
push
inc
lret
sahf
or
push
enter
xchg
pushf
or
pusha
leave
fptan
data16
loop
out
es
xor
cmp
ret
adc
lret
cmpb
jns
call
cmpsl
mov
lret
out
cwtl
cmpsl
imul
cmp
into
xchg
movsl
outsb
stc
lret
pop
iret
idivb
pop
lret
or
sub
lret
xchg
mov
mov
pop
xchg
xchg
jmp
subb
or
arpl
ds
jg
push
mov
or
aas
fldenv
mov
lret
fwait
push
addr16
mov
out
sub
mov
popa
xor
push
ret
jns
push
add
adc
dec
inc
or
imul
andl
jg
or
aam
mov
lret
loope
scas
push
loopne
push
pop
and
or
dec
adc
mov
xchg
mov
xchg
lret
cmc
jmpw
es
imul
ss
std
popl
xchg
lret
add
and
add
repz
das
pop
pop
stos
je
or
add
and
pop
jae
shlb
push
mov
jp
inc
jno
dec
popa
popa
stos
mov
or
hlt
dec
ficoml
pop
pop
fxam
js
call
push
push
cwtl
inc
push
lret
dec
mov
out
addr16
sub
jle
loop
lret
fs
mov
jecxz
imull
aaa
push
lret
xchg
or
lret
notl
sub
adc
mov
push
testb
lret
cmp
and
lret
roll
cmp
jbe
movsb
fcmovb
lret
fsts
icebp
pop
lret
repz
mov
and
mov
lret
jg
xchg
push
cmp
fdiv
aam
and
lret
pop
sub
cli
cmp
mov
adc
xor
stos
sbb
mov
sahf
outsb
ljmp
cmp
fdivrs
leave
cmp
push
mov
shrb
aaa
mov
lea
sbb
push
xor
cmp
lret
cmc
cmp
and
lcall
sbb
fsub
iret
cli
movsl
das
adc
push
dec
cmc
mov
xor
sub
lret
mov
add
out
push
dec
lret
jns
pop
pop
sbb
lret
mov
jecxz
fidivrs
daa
into
mov
pop
mov
xchg
xor
push
lret
push
adc
mov
lods
mov
cmp
pusha
or
mov
lret
and
adc
in
add
lods
lahf
add
sbb
xchg
inc
adc
mov
mov
lret
bound
hlt
mov
fimull
pop
mov
add
shrb
cmp
fsubrs
lahf
cmpsb
dec
scas
xor
xchg
sub
jmp
into
mov
mov
xor
and
aam
xchg
lret
aaa
stc
fnstsw
jp
jmp
adc
int
pop
cltd
ror
repnz
data16
pop
cmc
sbb
sub
and
fadds
repz
push
iret
jg
je
lret
lcall
xchg
dec
outsb
sbb
aam
pop
lret
sbb
stos
adc
lods
mov
in
mov
sub
adc
shlb
lcall
pop
push
cmp
jb
push
loope
popa
sub
adc
rcrl
push
add
fsubs
lret
push
sub
stos
cmp
sbb
push
shlb
sahf
ljmp
fisubrs
ljmp
pop
into
cmp
cli
insb
sbb
push
cli
rcl
outsb
nop
xor
lds
mov
jg
lock
lret
xor
js
repnz
es
inc
int3
inc
lret
add
test
xchg
lret
fidivs
repnz
cmp
jle
xchg
inc
and
stc
add
pushf
lret
daa
std
dec
lahf
and
hlt
shlb
cmp
lret
and
or
stos
fcomps
or
mov
cld
gs
lret
mov
clc
test
mov
rorl
je
xor
repnz
aaa
and
lret
out
push
stos
pop
js
rcrl
lret
sbb
in
jno
or
adc
jbe
cmp
lret
mov
mov
fidivrl
mov
mov
push
mov
cli
or
out
mov
sub
mov
lret
es
and
jae
push
adc
movsb
and
sbb
cmp
repz
pop
lret
xlat
gs
xchg
js
dec
cmp
jne
test
adc
rcl
jae
je
cli
add
cmpsb
test
or
cwtl
xchg
imul
lret
out
jb
lret
pop
idivl
in
fcmovne
cmp
inc
cmp
popf
sahf
pop
fwait
and
in
mov
sub
int3
cmp
mov
stos
bnd
lret
jge
rcl
dec
lret
push
scas
xor
and
sbb
daa
lret
sub
lret
cld
aas
stc
pop
inc
test
mov
mov
lret
sub
mov
int3
inc
mov
in
sbb
in
inc
mov
hlt
lret
or
add
jno
cmp
adc
mov
cli
lret
out
push
xor
dec
ljmp
fdiv
mov
lret
les
lret
sar
lret
repz
lret
lcall
clc
jl
pop
push
push
pusha
or
dec
dec
sbb
movsl
and
lret
arpl
lret
or
cltd
push
lret
cmp
pop
outsl
mov
cmp
pusha
aad
pop
lret
lods
scas
mov
imul
gs
iret
push
push
xchg
lret
add
bswap
inc
dec
xor
pop
fisttpl
mov
leave
adc
mov
jp
mov
mov
lret
lds
stos
push
and
sbb
pop
add
lcall
sbb
out
cltd
cmp
jbe
inc
xchg
mov
xchg
int3
pop
lods
ljmp
lds
lock
jmp
xor
dec
mov
int
testb
cmp
dec
daa
pop
arpl
out
pop
lret
adc
xchg
gs
lret
insb
int
adc
lretw
je
lea
pop
jnp
call
push
movsb
aaa
sub
lret
bnd
push
jo
outsl
inc
xchg
push
pop
mov
stc
loope
enter
and
lods
xlat
ljmp
fldl
out
mov
movsb
xchg
dec
adc
inc
ljmp
into
mov
je
dec
repnz
add
mov
lret
add
xchg
xor
lret
xchg
rcrb
add
leave
out
adc
pop
cmp
inc
lret
push
lcall
jmp
push
lret
insb
dec
xorl
insl
push
movsl
push
imul
stc
aam
add
dec
mov
xchg
mov
sub
mov
jnp
ja
push
push
pop
lods
out
test
aas
xchg
popa
push
sbb
mov
push
mov
lret
add
sbb
adc
lret
sbb
push
cmp
icebp
hlt
repz
mov
sub
aam
or
scas
dec
cmp
aaa
xchg
fldenv
xor
push
in
ret
lret
in
cmp
xchg
mov
pop
movsl
mov
mov
cmpsl
outsl
fcmove
enter
stc
pop
pop
popf
or
inc
cwtl
pop
mov
fdiv
mov
aam
aam
adc
stc
jecxz
sahf
lcall
into
icebp
jmp
ljmp
out
sbbl
xchg
out
and
or
ss
scas
stc
in
jo
iret
mov
xchg
lret
fldl
insb
mov
sbb
or
lret
scas
mov
mov
pop
clc
pop
pop
scas
mov
pop
rcr
into
push
cli
lahf
ds
adc
push
and
sub
insl
cli
lret
notb
cli
pop
pop
sbb
xor
cmp
dec
inc
iret
adc
push
jns
popf
push
jge
int
sbb
cmp
sbb
and
fsub
xor
repz
xchg
movsb
popa
push
cli
mov
mov
aas
jnp
subl
pop
out
cmp
rolb
mov
jp
in
loopne
shlb
mov
icebp
lretw
aam
lds
js
loop
stos
rcr
scas
inc
jg
jle
pushf
imul
aam
jno
sbb
lret
xchg
iret
cmp
pop
int3
sub
cs
lods
sub
outsb
outsl
lret
les
cmp
push
mov
push
shl
mov
inc
cmp
cmp
das
mov
mov
test
lret
call
lods
jge
mov
imulb
add
push
jg
and
sbb
sbb
gs
shrl
lret
cmpsb
xor
inc
dec
push
mov
mov
jb
add
cwtl
sub
push
push
dec
or
aam
scas
cmc
out
or
ret
outsl
xchg
push
dec
push
lret
or
or
out
test
mov
adc
lret
dec
push
lock
ljmp
push
ja
in
roll
sbb
enter
push
stc
lret
xor
add
inc
dec
mov
rorb
jmp
push
cmp
sbb
mov
aam
jle
movsl
pusha
lret
add
repnz
cmp
mov
cmp
imul
add
and
pop
sub
ficoml
rorb
xor
push
pop
add
out
incl
cli
pop
sti
push
mov
repnz
enter
stos
imul
shlb
sbb
loope
and
icebp
xorl
cmp
jo
out
sbb
out
or
inc
jmp
cmp
iret
mov
fmul
loopne
stos
cmp
out
clc
lret
push
and
das
mov
popf
lret
jne
stc
inc
cmp
outsb
sub
jmp
dec
inc
lret
jp
int3
mov
push
das
xchg
pop
lock
cli
std
cmpsl
bound
mov
pop
xchg
cmp
dec
jo
ja
mov
fwait
in
push
into
jne
lock
repnz
pop
addr16
lods
push
insl
and
adc
pop
out
fwait
rcl
leave
bound
mov
icebp
lret
inc
xor
arpl
out
pop
cmpsb
lret
mov
adc
jb
mov
adc
scas
xchg
out
int
ss
xchg
bound
mov
inc
jne
sbb
pop
lret
jbe
lcall
jae
ss
xchg
mov
int3
push
add
pop
jmp
enter
cwtl
in
sbb
repnz
addr16
cmp
rcrb
mov
lret
cmp
lret
mov
or
pop
adc
into
add
push
lcall
loopne
lcall
jno
and
lret
push
jl
rclb
lret
add
bound
out
lret
fmuls
or
add
mov
xchg
mov
pop
popf
mov
push
add
pop
lret
aaa
xchg
jno
add
jge
pushf
lret
pusha
dec
pop
and
lret
cld
rclb
cli
mov
mov
pop
cmp
push
inc
cmc
and
mov
addr16
push
inc
negl
subb
push
jno
into
fwait
ja
xchg
lret
mov
push
stos
cld
ds
pop
std
ror
dec
fwait
orl
sbbb
or
int3
and
push
mov
lret
les
sub
pop
lods
sbb
dec
cltd
push
sub
popa
sti
fcompl
ss
pop
lret
rclb
mov
dec
lret
push
xchg
or
aaa
rclb
lret
xchg
rcrl
push
ret
push
out
sahf
cli
das
shlb
mov
andb
jge
dec
lret
std
sub
inc
mov
cli
or
push
fisttpll
sub
aad
mov
mov
mov
lret
dec
sub
test
repnz
std
xchg
cmp
pusha
or
adc
pushf
push
fidivrl
and
adc
and
push
leave
int3
test
jle
jecxz
aam
pusha
or
sbb
cmpl
cmp
es
mov
push
push
mov
loop
adc
xchg
cltd
call
ret
fsubr
push
xchg
mov
lods
cmp
je
cld
push
fcomps
mov
lahf
lret
xor
into
inc
lret
imul
insb
mov
movsl
xor
lock
push
add
pusha
pop
shrl
rolb
cli
lds
cs
pop
cmp
dec
jno
and
es
aam
inc
xchg
fwait
mov
and
dec
int3
add
cmp
push
cmpsl
pop
push
dec
xchg
dec
sbb
dec
adc
or
sahf
loopne
loop
push
stc
out
ficompl
mov
push
mov
xchg
xlat
fisubl
pop
jbe
shrl
lock
or
push
sub
and
mov
sub
lret
je
mov
insl
jl
shlb
mov
push
push
imul
sbb
inc
fimull
leave
iret
add
sarb
fidivl
fisttps
nop
ror
fdiv
insl
inc
dec
shlb
cmp
fiaddl
in
ret
mov
lods
mov
fwait
sbb
fldcw
pop
movsl
shr
xor
mov
inc
xchg
lret
sbb
lret
cmp
xchg
lret
hlt
es
insl
pusha
ljmp
adc
inc
lret
mov
jle
or
imul
or
adc
push
xchg
lret
pop
and
pop
or
mov
movsl
rcl
lret
push
add
popa
mov
iret
add
lods
and
loop
jp
jmp
fstps
push
in
push
lret
roll
loope
xchg
insl
dec
jle
jge
inc
xor
js
lret
mov
ss
gs
test
call
ja
cli
push
scas
fnstenv
mov
ss
or
fbld
xchg
faddl
movsl
pop
stos
xor
mov
mov
mov
jecxz
jle
out
lret
lcall
fmulp
movsb
inc
pop
test
xchg
lret
mov
mov
in
jl
push
js
int3
xor
lret
lock
cmp
jge
adc
sub
jbe
xor
loope
lods
cmpb
push
xor
dec
pop
sbb
or
cmpl
shl
in
call
dec
and
inc
ss
mov
adc
dec
push
stos
cmp
push
dec
mov
stc
ds
movsb
jne
and
fistpl
les
incl
mov
stos
mov
pushf
test
xchg
or
rcl
fwait
test
push
cmp
mov
hlt
in
mov
cmp
cld
dec
mov
fnsave
inc
add
pop
mov
inc
fs
xlat
out
pop
inc
lret
push
jp
mov
stos
lret
dec
rolb
add
jno
push
jne
mov
je
call
iret
xchg
lret
mov
mov
fs
lret
mov
lahf
mov
lret
ret
jbe
sbb
pop
sbb
into
shll
fxch
mov
ja
mov
cs
lret
pushf
push
xor
xchg
js
stos
rdpmc
iret
lcall
mov
add
dec
push
loope
lods
clc
mov
sbb
sub
xor
popa
movb
loope
fwait
xchg
sahf
rolb
mov
and
fdiv
push
or
dec
lret
je
sub
lret
or
into
cmp
in
inc
add
cli
sbb
jg
loop
ficoml
daa
lret
lahf
xlat
lods
test
lret
push
in
out
mov
repz
lds
jae
lret
pop
push
or
jl
push
es
into
push
imul
sarb
push
mov
or
and
mov
clc
pushf
xlat
movsb
jno
je
adc
or
lret
hlt
jl
int
cld
lret
sbb
es
xchg
int3
rclb
jg
mov
stos
insb
inc
rcrb
push
nop
ficoml
mov
cmc
or
stos
xlat
ja
fcmovnbe
xchg
jle
and
lret
inc
pop
cwtl
inc
sbb
lret
push
xchg
es
dec
cmp
xchg
push
and
fnstenv
jns
fadds
sbb
mov
sbb
out
mov
mov
push
jg
pop
mov
ret
push
lret
adc
ss
cli
xchg
dec
cmpl
int
mov
and
xor
fidivrl
mov
outsl
inc
or
jnp
fucom
sbb
mov
lret
adc
mov
jno
push
rorl
enter
repz
and
jle
lcall
cmp
sub
inc
sbb
and
dec
jno
leave
lret
push
xchg
mov
xor
bound
jge
lret
mov
jb
jp
lret
mov
xor
and
jb
int3
or
jl
xchg
fwait
xchg
movsb
scas
lret
dec
xchg
adc
ljmp
push
cmpsb
push
mov
xlat
jbe
mov
outsl
lret
ds
mov
cmp
repnz
ret
pusha
inc
out
cmpsb
mov
jle
movsl
push
stos
pop
loop
cmp
pop
jo
and
lret
xor
dec
mov
test
push
scas
sub
jge
stos
loope
rclb
sahf
and
lods
lret
jmp
jnp
pushf
adc
dec
xchg
push
cltd
outsl
xor
pop
lret
xor
test
mov
into
decl
adc
lcall
xchg
cli
adc
dec
dec
aad
pop
cld
fxch
arpl
dec
popa
push
cwtl
bound
lret
imul
in
lret
xor
dec
out
and
orl
jo
sarb
lcall
push
jno
lret
jmp
out
sbb
fcmovbe
call
sbb
js
lret
cmp
adc
ret
jno
mov
test
fsts
mov
fcmovb
icebp
std
int3
fsubs
sar
outsb
cmp
jbe
out
lret
cli
dec
fwait
repnz
xor
jl
xor
cmpsl
jecxz
jbe
loop
mov
int3
xor
imul
roll
insl
jecxz
lods
lret
ficomps
loope
lret
or
cmp
pop
shrb
shlb
icebp
lret
dec
hlt
jmp
stos
add
popf
aas
scas
call
push
sbb
sbb
fidivl
jecxz
cwtl
sub
push
mov
xor
mov
fidivrl
jmp
sarl
lret
nop
lock
iret
cmp
out
scas
sbb
push
or
jbe
std
pop
cmp
sbb
stos
lret
js
outsl
cmp
iret
lret
cld
and
mov
pusha
jge
ja
lret
jb
pop
es
lret
mov
sbb
and
mov
insb
inc
into
outsl
push
mov
fidivrs
nop
stos
lahf
and
jmp
sbb
fdivs
aam
lret
xorl
xchg
lcall
lods
subb
mov
aam
jae
lret
mov
adc
clc
xchg
stos
push
mov
jge
or
lret
adcl
mov
mov
loopne
loope
jp
and
popf
movsb
cld
pop
lods
jno
fisubl
daa
mov
push
out
pop
stos
push
insb
sub
rcll
mov
lret
push
and
xor
aam
mov
test
xchg
jp
add
mov
lret
imul
icebp
mov
mov
stos
push
enter
bound
mov
mov
mov
dec
lret
cmp
shl
pop
and
xchg
call
mov
scas
clc
shr
test
dec
adc
cmovge
xor
dec
push
mov
in
cmpsb
roll
xor
icebp
sub
mov
out
lods
mov
lods
dec
push
pop
push
pop
lods
sbb
lods
pop
stos
aam
dec
lret
push
loope
and
mov
popf
repnz
movsl
arpl
cwtl
xor
pop
mov
inc
ror
lret
ret
cmp
lods
loope
fwait
xorb
lds
int
jge
sti
lret
pop
enter
mov
push
insl
inc
xchg
addr16
loopne
mov
pop
pop
dec
inc
arpl
fiaddl
and
je
mov
xor
pushf
jo
cltd
shl
pop
xchg
bound
or
repnz
adc
sub
pop
nop
cmpsl
fs
lret
or
lret
inc
leave
mov
push
add
dec
xor
cmp
mov
inc
lret
sahf
xchg
pop
pop
inc
cmpsl
lret
lea
addl
ret
call
sub
adc
shlb
test
xchg
lret
lock
ficompl
xchg
mov
inc
movsb
aam
fldenv
jle
bound
scas
outsb
xchg
test
push
dec
lret
ljmp
outsb
lret
mov
inc
cmp
adc
stc
xor
lret
jb
pop
mov
lret
jae
inc
aad
xchg
cltd
sub
rol
mov
lret
shl
aaa
dec
and
fwait
stos
nop
loop
out
rclb
aam
mov
ficoml
pop
movsl
and
add
lret
rcrb
sbb
cli
mov
aas
adc
fidivl
push
sub
test
pop
jne
in
cld
sub
sub
xlat
mov
popf
pop
lret
dec
inc
cmp
mov
inc
fildll
push
and
jecxz
and
inc
fs
loope
out
or
mov
xor
pusha
jae
loope
inc
lea
cli
fisubrs
fdivl
lret
xor
lret
jbe
add
and
mov
push
scas
sti
addr16
fiaddl
jg
inc
and
shll
or
pop
sub
sbb
mov
jo
bound
sub
adc
jecxz
dec
push
mov
out
fs
fidivl
push
inc
cld
dec
leave
push
into
ja
and
test
push
std
or
jne
lret
aad
in
push
sbb
ljmp
ret
ss
lret
pusha
pop
call
cmp
repnz
incb
outsb
adc
ret
adc
rcll
lahf
inc
xor
lds
sbb
pop
mov
repz
adc
movsb
lret
sbb
lret
insb
mov
adc
jns
aad
pop
inc
xchg
aaa
lret
mov
mov
cmp
pop
cli
jecxz
aam
js
aad
lret
mov
sbb
xchg
add
jle
leave
push
fmul
mov
cwtl
dec
mov
in
cmc
xorl
or
loop
mov
mov
sahf
mov
add
push
lret
mov
pop
mov
jle
cld
ss
mov
cwtl
shrl
lret
push
mov
jmp
ret
stc
fsubl
ficompl
lret
push
xor
lods
movsl
mov
test
ret
mov
rcr
lret
cmp
push
arpl
lret
stos
push
lret
cld
shr
mul
sub
fwait
pusha
xchg
adc
adc
in
lret
dec
pop
out
insl
aam
dec
sbb
shrb
mov
jo
cmc
aad
cltd
cmpsl
fisubl
movsl
mov
jae
add
lret
cmp
sub
cmpsb
lret
idivb
xlat
inc
pop
mov
inc
push
lods
mov
aad
arpl
test
add
and
jg
mov
stos
imulb
mov
data16
rolb
fdivl
fisubs
mov
lret
jae
adc
dec
xlat
lret
sahf
push
mov
ficomps
push
mov
enter
adc
sti
and
das
int
jb
lods
ljmp
out
mov
lret
add
ljmp
ja
inc
or
add
xor
xchg
icebp
shll
ljmp
rorb
call
or
mov
xor
je
lcall
lahf
xor
or
int3
mov
or
xchg
cmp
icebp
repz
jno
inc
rolw
hlt
dec
lahf
inc
imul
pop
push
cmc
ljmp
push
pop
jge
xor
fisttpll
retw
loopne
pop
mov
lret
ljmp
repnz
jns
lret
pop
iret
jae
or
lret
cmp
lret
adc
outsl
inc
lcall
mov
shlb
dec
popa
xchg
mov
mov
push
xor
lret
shl
insb
adc
push
xchg
cli
mov
adc
mov
fidivl
lret
add
lret
mov
fucomp
mov
not
sbb
popa
jg
out
bound
xchg
mov
mov
lret
sbb
lahf
dec
cmc
ljmp
sarb
mov
iret
sub
lret
les
inc
push
inc
cmp
cmp
shrb
popf
sbb
lret
std
aam
cmc
jo
fidivl
fcmovne
je
jbe
sbb
push
pop
addr16
xchg
rcrb
sbb
rcr
test
adcb
mov
lret
push
mov
mov
cli
mov
push
add
pusha
pop
fstpt
fcomps
mov
sarb
lea
ficompl
and
or
push
in
cmpsl
jae
repnz
sarb
rolb
mov
xchg
mov
leave
push
mov
cmc
cmp
adc
mov
sub
lret
lods
mov
leave
ljmp
mov
mov
and
cltd
pop
stos
int
dec
sahf
test
pop
movsb
sub
lret
push
repnz
cmpsl
mov
pop
push
cmp
xor
lret
sub
sub
push
filds
jge
xor
outsb
or
adc
test
or
fisubl
and
add
xchg
jns
arpl
inc
in
jge
test
aaa
sbb
dec
pop
loopne
mov
aam
dec
lods
sub
lret
or
int
stos
lret
and
push
movsb
add
fcmovnbe
push
aad
scas
sub
adc
inc
push
xor
inc
sti
rorl
xchg
pushf
jge
mov
enter
mov
repnz
lret
jno
insl
aaa
lahf
dec
clc
ret
lret
jmp
stos
and
repz
inc
or
rcll
sub
idivb
pop
enter
xor
or
pop
push
adc
inc
and
movsb
inc
cli
outsl
fwait
adc
pcmpgtw
sub
pop
adc
pushf
das
push
outsl
pop
push
enter
rcr
out
mulb
and
je
jge
arpl
xchg
sub
ss
orl
inc
adc
sbb
ljmp
sarb
jl
daa
fstpt
mov
mov
push
fisubl
inc
mov
loopne
stc
push
lret
push
dec
xlat
lret
nop
cmpb
in
fisubrl
cmp
mov
push
inc
xchg
insb
cltd
mov
fadd
push
or
sti
add
xor
dec
lret
sarl
stos
addr16
sahf
out
loopne
or
arpl
inc
repnz
mov
lret
out
lds
call
inc
pop
xchg
out
and
push
out
lret
jge
pop
popf
fldlg2
lret
ss
inc
cltd
scas
lret
dec
imul
dec
movb
mov
outsl
imul
sub
icebp
cmpl
jbe
outsl
mov
out
xchg
out
add
push
fidivl
into
and
insl
int
or
pusha
mov
mov
lret
pop
rcll
mov
xchg
dec
lret
push
inc
cwtl
cmpsl
and
outsl
aas
data16
push
imull
mov
xor
inc
xchg
fcmovne
es
mov
jmp
lods
repnz
lret
in
or
gs
lods
mov
pop
ljmp
movsb
xchg
mov
scas
push
or
aam
int
adc
lret
lea
fiaddl
mov
xchg
xor
ljmp
xor
sub
or
sbbb
movsl
std
xlat
sbb
lret
mov
fnstcw
rcll
iret
adc
cmp
fmuls
adcb
inc
and
pop
int
jno
sbb
idivl
adc
loop
inc
dec
dec
lret
mov
sbb
addr16
fcompl
mov
lret
xchg
lods
mov
stc
lret
xchg
ja
or
stos
aad
mov
jg
icebp
jbe
cmp
in
lret
mov
adcl
inc
or
lret
in
pop
pop
mov
mov
sbb
movsb
push
jge
push
xchg
hlt
add
mov
pop
sahf
pop
pop
rcl
fwait
jle
mov
pushf
fwait
sub
les
mov
mov
push
push
mov
mulb
xchg
cmp
dec
dec
lahf
shll
inc
or
jmp
xor
cmp
cli
sbb
lods
xchg
pushf
mov
jae
je
loope
push
outsl
push
sub
or
popa
adc
lret
enter
and
mov
lea
sbb
add
movsl
mov
inc
mov
pop
xor
fcomps
out
popf
jae
jbe
mov
cltd
inc
js
faddl
mov
lods
pop
lret
sub
lret
lock
cld
and
lret
cmp
mov
mov
cmp
sbb
shlb
jbe
jns
inc
pop
mov
adc
sub
int
ss
cli
call
arpl
jle
cli
into
pop
sbbb
aam
loope
cli
push
mov
push
pushf
fnstcw
iret
fcmovne
adc
cmpsl
sub
js
pop
mov
or
setnp
mov
insb
and
ret
and
aas
testb
pop
mov
into
stos
cwtl
mov
leave
lret
cli
imul
bsr
mov
test
push
faddl
push
popa
int
loope
mov
push
cmpl
xor
sbb
outsl
rclb
sarb
mov
inc
mov
mov
add
test
outsl
sub
mov
or
int
sbb
mov
xchg
lret
dec
jle
cmp
lret
aam
test
and
hlt
out
mov
xchg
push
lret
pop
xchg
lcall
mov
testl
add
rcrb
mov
ss
mov
rclb
push
rolb
add
dec
lods
jnp
dec
sbb
sub
and
das
or
lret
rclb
sahf
aam
lret
jne
mov
xchg
cli
pusha
sbb
push
xlat
jmp
cli
bound
xchg
mov
in
lret
pop
adcb
lret
stos
adc
mov
pop
mov
rcr
clc
inc
into
fidivs
cmpl
stos
cmc
mov
lret
dec
sub
or
mov
aam
push
rcrb
test
sub
jmp
aad
mov
push
mov
cmp
test
lret
fisttps
adcl
loope
inc
sub
mov
fisubl
sbb
add
and
jp
lret
arpl
popf
or
mov
xlat
mov
rorb
lret
add
or
sbbb
and
xor
push
cmpsb
stc
es
mov
mov
jge
rcl
iret
ja
inc
and
aaa
mov
sub
sub
mov
popf
enter
dec
adc
cmc
dec
dec
adc
cmp
inc
xchg
je
mov
mov
repz
into
popa
decw
lret
push
push
fidivrs
jge
enter
inc
sbb
inc
popa
adc
mov
push
xchg
adcb
push
adc
jp
sarl
movsb
xor
int
fmuls
pop
test
divb
or
sbb
inc
rcrb
jns
popa
mov
cmp
div
outsb
sbb
lret
pop
pop
jp
leave
fisubl
mov
lret
sub
and
into
mov
add
cltd
std
mov
fmul
lods
sbb
cs
pop
insb
push
les
or
clc
jae
or
add
pop
stc
or
sti
jl
xchg
xor
test
rcr
ljmp
push
inc
sbb
das
pop
add
in
jge
jno
xchg
and
add
fsts
test
cli
push
cmp
push
inc
popf
movsl
lret
bound
cltd
mov
inc
mull
inc
jnp
loope
lret
test
pop
cmp
mov
dec
sbb
lret
dec
or
lret
xchg
push
jg
pop
jne
inc
jae
popa
lret
cltd
mull
push
popf
aad
xchg
sti
flds
push
push
mov
mov
lret
xor
xchg
lret
pusha
dec
movsb
or
mov
lret
push
cli
ljmp
jmp
shlb
lret
mov
testb
cmp
mov
into
adc
mov
into
jge
sub
test
js
mov
enter
mov
mov
inc
ror
mov
in
es
aam
stc
cmpsl
jp
mov
loop
aam
mov
mov
and
lret
rcl
insb
push
push
loope
xchg
jp
scas
cmp
loop
out
xor
cmpsb
ljmp
or
mov
cmp
xor
dec
aas
jge
and
insb
fbstp
jp
adc
sub
pop
repnz
test
mov
test
xlat
sbb
fidivrl
rcll
into
mov
push
sarb
mov
xor
sarb
jno
and
inc
cmp
add
lret
push
aam
repnz
mov
hlt
xor
mov
aaa
and
aas
adc
mov
popf
inc
test
pop
lret
xlat
inc
je
push
fstpt
inc
or
mov
pop
or
lcall
lret
call
stc
or
pop
inc
lret
dec
adc
lds
loop
cmpsb
adc
push
adc
mov
arpl
sbb
fwait
pop
dec
and
jle
xchg
add
sub
ljmp
scas
cmpsl
push
xchg
push
jp
gs
mov
mov
movsl
mov
lret
xor
lret
les
jbe
adc
mov
lods
dec
lret
fwait
jp
cmp
lret
or
sub
into
xor
jge
int
or
mov
lahf
add
push
xor
test
sub
mov
xor
lret
and
vpaddd
sbb
adc
jg
pushf
inc
dec
sbb
popa
lret
std
mov
mov
ljmp
into
pop
jmp
ljmp
rcrb
scas
cmp
sub
sbb
xchg
ds
test
xor
fidivl
stos
lahf
fsts
xor
dec
popa
test
int3
pusha
jmp
lds
xor
lret
pop
or
jno
incl
push
scas
mov
popa
sub
jno
loope
pop
mov
lret
or
mov
leave
test
xchg
cmpsl
lret
xor
mov
int3
xor
xchg
or
jns
pop
loop
into
lcall
sahf
mov
jecxz
xchg
cwtl
mov
or
and
pop
cmpsl
addb
dec
sub
mov
add
out
insl
dec
adc
pop
stos
lods
aas
stos
pop
fdivs
int3
out
pushf
stos
mov
jns
lret
mov
js
ret
shr
mov
lret
subl
mov
daa
push
orb
mov
lret
and
ja
loop
cwtl
loope
pop
sbb
mov
push
xor
adc
xchg
pop
dec
or
push
pop
lret
push
dec
push
push
lret
mov
mov
sub
inc
mov
sahf
mov
aam
fwait
cmp
lret
leave
jl
hlt
lret
bound
or
mov
adcb
fildll
dec
leave
jp
cs
adc
and
push
inc
jecxz
pop
lret
int3
xchg
adc
pushf
inc
insl
rorl
mov
mov
lret
adc
stos
dec
cmp
shrb
pop
adc
lahf
cld
imul
pop
sti
mov
fwait
mov
es
data16
test
push
mov
mov
adc
iret
test
push
loop
lret
xchg
adc
jb
imul
movsb
js
scas
lret
sbb
mov
ljmp
shlb
fiaddl
push
out
pop
pop
mov
xchg
pop
lds
lret
jnp
adc
fcmove
icebp
bound
or
into
add
insl
lret
cmc
adc
sub
pusha
pop
mov
add
in
fistl
pop
lret
inc
mov
daa
popl
shlb
jmp
lret
stos
mov
test
cmp
int
add
pop
cmp
imul
xchg
push
push
insl
or
jp
xchg
sbb
sub
pop
je
repz
pop
ror
jge
xchg
mov
into
test
fwait
cs
dec
jmp
mov
jne
in
or
cmp
dec
xor
pop
dec
ficomps
xchg
sub
lret
add
mov
pusha
fsubs
sbb
in
mov
and
xchg
lret
xchg
adc
int
ret
mov
fiaddl
in
cltd
fsubr
mov
int3
movsb
mov
scas
sub
cld
push
lret
or
test
jno
dec
xor
lret
mov
arpl
xor
push
cltd
ja
ret
cmp
adcb
in
movb
test
mov
lahf
adc
sbb
lret
pop
sub
fadds
lea
lret
or
mov
cmp
sub
shr
pop
jle
pop
pop
adc
out
in
jbe
sub
into
lret
js
xor
les
js
clc
and
sub
out
adc
shrl
push
mov
mov
sub
lret
rol
dec
movsb
jne
cli
lods
jl
clc
fcmovne
loop
add
mov
jmp
je
mov
push
fwait
jmp
imull
movsl
pop
fldenv
scas
je
push
cmpsb
add
dec
aad
lret
in
lea
hlt
rcll
imul
xchg
negl
int3
xor
xchg
int3
ret
adc
push
lret
call
enter
lret
jle
mov
sub
pop
push
rcl
pop
addr16
sub
mov
rcrl
shlb
push
lret
adc
lods
inc
aaa
test
cmpl
pop
mov
into
test
icebp
pop
stos
imul
cwtl
sarb
lret
dec
ss
add
fwait
stos
int3
dec
ds
lock
xchg
popf
mov
int
mov
adc
push
fstps
push
sbb
cmp
imul
imul
sahf
dec
subb
int3
inc
pop
out
adc
add
cmc
xor
mov
inc
mov
mov
lret
mov
ret
mov
pop
shll
mov
xor
mov
cwtl
std
or
cmc
add
test
sub
sub
add
lret
fwait
dec
ss
call
cld
adc
ret
cs
cmp
mov
cmpb
and
adc
arpl
cmpsb
sar
data16
inc
xchg
dec
fwait
pushf
je
ljmp
xchg
jg
add
adc
inc
stos
ror
push
lcall
lea
fisubrl
inc
outsl
outsb
lret
and
mov
loopne
in
in
lret
in
dec
mov
sub
cltd
fsubrl
pop
pop
addr16
in
fadds
add
mov
push
in
mov
lret
pop
pushf
hlt
xchg
jl
lret
xor
jp
lock
ja
lret
pushf
push
jo
aaa
jle
dec
dec
jp
mov
data16
pop
push
addl
sub
lret
outsl
xor
in
push
ret
lret
push
add
bound
mov
pop
mov
pop
push
imul
mov
lret
out
shll
popf
lret
adc
mov
pop
mov
out
out
jp
test
sbbl
popf
pusha
rcl
bound
enter
ret
ljmp
xlat
lret
popa
cmp
pop
cwtl
test
mov
mov
push
mov
cmp
xchg
mov
in
rcr
adc
push
push
int
fiaddl
pop
loopne
cltd
sbb
lret
cmpsb
jnp
cwtl
push
cmp
js
lret
push
daa
dec
loopne
xchg
lret
sbb
dec
cld
lret
xchg
imul
divl
xchg
psubusb
lret
dec
lret
or
xchg
sbb
ss
lret
inc
cmp
insb
and
lret
repnz
outsb
jae
stos
sbb
shrb
sub
leave
lret
decl
xchg
lret
test
mov
icebp
mov
mov
movsb
pop
lret
and
lret
imul
enter
mov
aas
bswap
push
cmpsl
out
sbb
jbe
dec
lret
adc
loop
repnz
cmp
jp
mov
ds
xchg
inc
fdivrs
mov
xchg
jge
shrl
test
cld
jbe
lret
sub
xor
mov
push
addr16
cli
leave
jecxz
lcall
lret
jnp
les
fwait
pop
cmp
iret
lahf
movsb
leave
lods
lret
inc
shrl
cmp
xlat
jge
outsb
mov
cmpsl
aad
lret
pop
outsl
sub
pop
sub
lret
hlt
das
and
mov
ja
inc
leave
cmp
lret
fbstp
mov
pop
lret
sbb
js
into
iret
adc
fidivrl
or
push
arpl
pop
mov
in
lods
pop
jne
mov
inc
mov
fucomi
movsl
add
cmp
dec
bnd
aaa
mov
jae
ror
in
cmpsb
mov
xchg
imul
lret
push
bnd
sbb
sti
sub
or
js
sahf
push
mov
mov
or
add
loop
lret
jae
cmpsb
push
test
push
cmp
pop
int3
pop
push
adc
and
inc
jmp
bound
push
cli
lcall
sbb
mov
add
lret
test
xchg
sti
lret
mov
dec
inc
je
cs
mov
sub
orl
and
and
je
mov
movsb
dec
in
aad
arpl
mov
gs
lret
jnp
cmpsl
xchg
mov
mov
movsl
fcmove
mov
std
inc
sbb
lret
cmp
in
and
inc
mov
movsl
jbe
repnz
add
dec
or
xor
ds
lds
jge
dec
rcrb
ffreep
lret
or
lahf
mov
ja
sbbb
int
out
shr
insl
cmp
push
insb
add
sarb
lret
imul
mov
and
push
xchg
mov
addr16
mov
inc
lret
daa
aaa
inc
inc
xchg
ret
ljmp
fldenv
push
xchg
f2xm1
or
cmp
aad
cli
lret
jbe
repnz
rorb
stc
jmp
rolb
and
into
xor
xchg
jb
inc
repz
dec
xor
jmp
xor
stos
dec
add
out
fiadds
lret
xchg
dec
mov
cmp
fdivl
int
lret
sbb
out
sbb
xor
ja
jp
pop
bound
rolb
lods
and
lret
sub
clc
stos
push
mov
scas
mov
fdivrp
dec
or
cmp
lods
jns
push
or
push
inc
and
dec
pop
xchg
mov
jp
ds
cmp
mov
mov
push
dec
gs
fsubl
and
cs
rcrb
lret
sbb
aas
les
mov
push
jle
jns
fidivrs
mov
cmpsl
orb
lds
scas
jnp
inc
stos
mov
adc
inc
or
cwtl
cli
mov
and
and
inc
lret
push
jmp
adc
and
lret
pop
incb
fisubrl
jp
ss
call
lret
pop
jo
scas
add
scas
out
lods
test
nop
rcr
mov
mov
ljmp
clc
lea
repnz
popa
lret
dec
pop
xor
jmp
sahf
inc
das
jg
aas
js
adc
mov
xor
aad
jbe
sbbb
dec
lret
dec
stos
icebp
mov
int3
roll
test
outsl
aaa
fwait
pop
sahf
mov
rcrb
fsubs
jl
xchg
and
lret
out
sahf
into
jg
shrl
ss
popa
fs
lret
inc
xchg
sahf
aaa
push
cmpsb
mov
outsl
daa
pop
divl
lret
call
imul
pop
adc
popf
shrb
xchg
cmpsb
sub
and
push
add
xor
xlat
mov
lret
sub
subl
inc
lret
setp
jns
sbb
fxch
add
cltd
dec
andb
bound
sub
int
pop
lds
xor
cmpsl
popf
jne
sub
jge
inc
addr16
test
bound
or
js
ret
flds
out
mov
pop
in
pop
jbe
sub
cmpsb
addb
sub
adc
mov
inc
sbb
loope
shll
or
aad
lret
movsb
pop
push
mov
mov
loope
or
addr16
ja
movsb
nop
or
lods
shrl
lret
fnsave
push
loopne
mov
lret
dec
dec
jb
inc
lods
jp
rorb
or
aaa
lret
xchg
aad
mov
jb
or
cwtl
push
ror
inc
mov
bound
dec
pop
mov
and
pop
fcmovb
rorl
cmp
jmp
js
lret
dec
call
lret
aam
push
xchg
popf
and
cli
xor
outsl
sbbl
lret
insb
sahf
je
lret
sub
or
add
outsl
leave
fstpl
sbb
jmp
or
cmpsl
shlb
lret
mov
stc
and
inc
sbb
andb
ret
lahf
dec
sub
jne
adc
call
popf
cli
fstpt
sbb
lret
ljmp
push
adc
push
sbb
jecxz
xchg
pop
scas
and
cmp
or
sar
dec
cmp
pop
lret
testl
lret
mulb
lret
pop
stos
fwait
pushf
xchg
ljmp
rolb
enter
lret
mov
or
cli
lret
or
mov
in
mov
lret
jl
inc
rcrl
mov
scas
sbb
mov
into
adc
adc
sub
je
lret
mov
jmp
sbb
sub
mov
lods
js
sbb
inc
xchg
cmp
cmp
pop
jbe
fstps
push
rcll
dec
ja
jb
cmpsl
repz
lods
les
ret
imul
loope
and
xor
aaa
cmp
inc
jle
pop
shr
dec
push
inc
jo
cwtl
xchg
mov
popf
popa
rclb
jb
mov
lret
sbb
lret
dec
lds
mov
sbb
add
in
fcmovu
movsl
fdivp
inc
call
mov
inc
ds
in
pop
shrb
sbb
ss
inc
add
add
lret
test
xchg
dec
lret
cld
inc
and
and
shr
mov
loopne
mov
scas
fucomp
addr16
cmp
aad
jno
out
cmp
xchg
push
into
lock
cmp
out
mov
jge
aad
sahf
fists
sbb
inc
popa
inc
xchg
inc
sbb
lret
xor
scas
add
inc
sarb
js
pop
in
call
mov
inc
aam
adc
xchg
fidivrl
loopne
repz
test
dec
push
lret
mov
outsl
mov
lret
out
inc
popa
dec
int3
sub
jge
ficoml
stos
add
movb
jmp
int3
mov
loope
popa
sub
movsl
iret
mov
cmp
scas
push
insb
ror
add
and
sarb
enter
pop
push
dec
lret
dec
fucomp
xchg
stos
out
jns
fs
sub
add
out
jae
xchg
adc
popf
repz
out
int
cmp
mov
pop
imul
hlt
mov
lret
push
sbb
lret
inc
sub
xor
lret
inc
nop
mov
lret
in
cmp
sarb
sub
mov
lret
add
test
loop
stc
pop
push
loope
fcom
inc
mov
jecxz
mov
bound
adc
fimull
dec
adcl
lret
stc
push
mov
xor
lret
std
push
test
cmpsb
xchg
xchg
sub
pop
jl
mov
sbb
icebp
lret
jle
mov
out
sbb
xchg
push
add
lcall
std
lret
sti
inc
jge
lret
sub
dec
sub
add
jbe
orl
test
mov
inc
pop
aas
out
inc
or
hlt
mov
push
test
fbld
sbb
xchg
std
ret
ficoml
leave
cmp
mov
or
or
adc
into
mov
adc
ret
cmpsb
jg
jecxz
leave
enter
or
aam
rcrl
or
mov
pop
aam
mov
in
lret
pusha
js
push
jb
cli
sbb
xor
rorl
sar
xchg
and
mov
lret
adc
imul
stos
pop
test
loop
push
cld
xorb
fidivrl
arpl
jnp
xchg
cwtl
pop
cmp
jge
les
data16
sarb
push
jns
xchg
lret
je
xchg
push
aas
mov
dec
lret
mov
cmp
sar
add
cltd
lret
rol
lahf
dec
mov
jae
inc
sahf
jl
out
loope
dec
mov
sbb
xor
inc
out
add
lret
rcr
adc
ljmp
fcomps
sub
cli
and
pop
lret
push
out
cmp
aam
jnp
rclb
loopne
or
fwait
lret
lcall
out
sbb
pop
sub
lret
mov
mov
push
push
lret
loopne
pop
pop
xchg
dec
lret
mov
out
adc
inc
mov
lret
pop
out
jns
jo
mov
in
shll
and
fwait
clc
mov
push
cmp
jmp
xchg
xchg
cmpsl
rcrl
or
xchg
adc
sub
lods
add
cli
lock
dec
add
insb
lret
mov
ja
mov
loope
lret
out
setp
mov
cmp
adc
rcr
xchg
lods
xchg
lret
and
aad
jno
lret
mov
arpl
fcomp
mov
mov
aaa
inc
inc
cli
cmp
movsb
cmpl
and
mov
lret
mov
inc
mov
in
xor
into
mov
and
lret
adc
push
cs
dec
lret
xor
mov
shlb
pop
lret
cmpsb
adc
cmpsl
popa
lret
es
xor
xchg
lret
mov
addr16
cmp
jmp
inc
sub
add
ror
adc
sarb
mov
pmullw
cmp
insl
lret
inc
jo
stos
lret
xor
fisttpll
xor
mov
lcall
push
mov
cmpsb
push
and
xchg
mov
jmp
pusha
jns
cli
es
xchg
adc
das
xor
out
into
sub
sbb
lret
xor
lret
or
jne
jp
jle
icebp
test
pop
test
jecxz
imul
mov
dec
mov
std
and
js
fcmovb
jl
and
icebp
leave
fdivrs
fiaddl
outsb
mov
push
flds
lret
sub
inc
cmp
mov
mov
into
cmpl
inc
shlb
sti
push
cmp
ss
cmp
mov
cmp
sahf
shl
or
jmp
adc
lret
dec
pop
sbb
pop
jb
popa
xchg
xor
pop
cli
mov
or
cld
negb
int3
and
cltd
xchg
lret
mov
je
cld
gs
fxch
adc
ret
movsl
xor
jo
adcb
mov
or
sub
pop
lret
sub
ret
fmul
lea
sub
mov
sub
jl
pop
push
in
push
dec
jb
loopne
xor
pop
push
lahf
enter
jmp
aad
lret
push
inc
sbb
inc
xor
dec
fmulp
add
or
xchg
and
shlb
cli
loopne
ja
into
xchg
push
fimuls
sbb
arpl
mov
inc
addb
lret
xchg
sub
and
or
std
mov
cmp
sbb
pop
scas
xor
mov
loopw
fistps
adc
movsb
popa
lret
sbb
lret
dec
mov
pop
movsb
icebp
es
push
cmp
sub
xchg
lret
fbstp
leave
add
shl
divb
stos
movsl
cltd
lret
rolb
sbb
stc
fmuls
into
cld
push
dec
movsb
jo
int
sbb
or
cli
lret
and
jp
ret
leave
lret
je
insb
xorb
adc
arpl
loop,pt
movsl
push
rcl
and
mov
lock
lret
movsl
xchg
mov
les
xchg
xchg
dec
sub
js
mov
lret
push
je
sahf
fistps
popa
movsl
rclb
mov
jne
dec
or
jnp
call
cmpsl
mov
out
stos
xor
dec
push
sbb
lcall
stos
jge
test
popf
add
in
jb
xchg
cmp
cmpsl
std
xchg
mov
leave
int
add
scas
jl
mov
test
jbe
xchg
cltd
outsb
and
xor
add
int3
xor
xchg
imul
icebp
fst
sar
pop
enter
pop
jecxz
lahf
sbb
out
mov
adc
xor
fcompl
sub
test
push
jnp
lret
inc
adc
jns
into
in
lods
pop
jl
mov
mov
movsb
mov
mov
mov
jo
ja
pop
pop
lret
push
cld
outsb
bound
ret
test
lret
data16
arpl
jmp
sahf
stos
cmp
mov
ret
out
ja
in
push
xor
loope
cli
aam
test
jns
rcrb
sub
xchg
push
or
sbb
imul
lret
shl
das
adc
leave
enter
test
pusha
aaa
insl
std
cmpsl
cmpsb
lret
aas
pushf
add
sbb
mov
int3
push
aaa
jle
dec
stc
inc
jp
test
popa
jmp
leave
popl
es
pop
sbb
and
stos
div
mov
adc
jl
imul
aad
imul
stos
not
sub
fwait
leave
mov
repnz
cmp
aaa
push
loop
xlat
xchg
and
std
test
push
jecxz
xchg
mov
daa
sub
insl
imul
cmp
jge
clc
lret
rcll
or
jno
lret
pop
sti
cmp
jp
or
ret
cs
loopne
rclb
xor
and
imul
add
ror
add
js
add
sahf
push
rcrl
xchg
mov
stos
sarb
aam
pop
fs
jp
ds
es
sarb
inc
lret
shr
pop
jae
lret
or
aad
das
iret
mov
repz
jecxz
and
jns
lret
lret
push
mov
and
popf
and
add
adc
sarb
out
jmp
sbb
jo
lret
lea
inc
fiadds
push
mov
push
lods
mov
out
inc
movsl
test
pop
dec
scas
ret
jecxz
fimuls
loop
in
pop
mov
cmpsb
sbb
push
in
leave
inc
aas
lret
js
scas
xlat
pop
jge
rcll
inc
hlt
dec
fldcw
rcrb
fisttpl
sar
jae
xchg
lea
loopne
or
int
insl
jo
adc
in
and
cmpsl
push
xchg
insl
jb
scas
outsl
mov
adc
xor
fbld
xchg
ret
in
adc
mov
push
mov
mov
jnp
xchg
adc
out
cltd
leave
sar
addb
lds
aam
arpl
rcll
add
andb
sbb
jg
push
gs
add
sub
sbb
cli
push
sbb
jns
lret
stc
insb
jne
lods
xor
shll
add
mov
scas
xchg
push
dec
xchg
pop
sub
xchg
addb
pop
mov
rcr
rorb
sub
inc
imul
mov
enter
and
inc
jb
out
mov
sub
daa
cmp
add
or
bound
xchg
ret
jb
adc
inc
jae
es
rclb
mov
xchg
sub
fwait
stc
dec
push
push
mov
cmp
dec
xchg
les
lds
xchg
cli
loopne
xchg
add
fwait
xchg
mov
cmp
rcrl
fimuls
mov
cmpsl
lret
mov
cmp
cld
mov
cmp
or
inc
rorb
shrb
pop
pop
inc
sbb
mov
mov
xchg
loop
xor
je
xlat
cmpl
cmp
shrl
cmp
and
and
push
cmc
add
mov
rorl
enter
test
outsb
repnz
lret
pushfw
sub
xor
mov
mov
sub
cmp
sbb
pop
mov
flds
rclb
daa
xchg
lret
pop
push
push
push
aas
xchg
lret
cmpsl
sub
jne
sar
pushf
pop
jae
cmp
jge
mov
lahf
loopne
negb
lret
clc
hlt
mov
or
jae
ds
call
mov
fisubrl
outsl
pop
and
int3
and
lret
das
sbb
pusha
rclb
cli
mov
adc
or
lret
adc
outsl
mov
shll
pop
iret
xchg
or
repz
outsl
or
icebp
lret
js
lea
lret
adc
mov
cmpsb
jmp
je
ss
lret
or
jo
loope
dec
or
stos
xor
ficomps
sbb
or
rorb
jge
movsb
xchg
pop
int3
cmp
push
inc
xchg
fcmovu
or
stos
aad
xchg
pop
lret
cwtl
mov
stos
mov
lret
lret
scas
aam
or
popa
fwait
push
cmp
lret
mov
push
xchg
jo
insl
shrl
incl
xor
mov
rcrl
cmpsl
jae
leave
out
out
jmp
push
cmp
lahf
repnz
icebp
lock
push
dec
adc
xchg
sub
pop
hlt
jmp
fdivrl
jno
jbe
mov
dec
lret
sbb
fwait
in
xchg
push
lret
jo
add
mov
fidivl
sub
cmp
pop
insb
lret
sub
divb
mov
dec
adc
test
push
repnz
push
inc
or
inc
xchg
jmp
std
lret
ja
orb
lret
jno
or
stos
push
daa
int3
fnstsw
adc
mov
sbb
mov
lret
pop
add
movl
test
jmp
stc
jp
sub
sub
add
mov
pusha
lret
pop
dec
xor
into
xor
cltd
push
aad
sub
out
pushf
xor
pop
add
fistpll
sbb
mov
push
sahf
inc
sub
fcoms
cli
sti
jg
lods
xchg
push
sbb
les
lret
pop
insl
or
mov
pop
xchg
pop
subb
xchg
data16
rorb
cld
mov
icebp
ror
xor
xchg
bswap
in
aas
push
push
adc
cmp
cs
mov
into
sbb
lret
test
std
cli
sub
dec
mov
in
push
adc
and
mov
push
sub
mov
lcall
push
in
pop
lods
add
lret
xor
and
add
and
stos
inc
xor
ss
dec
int3
or
cmpsl
std
call
fmul
aam
in
xchg
stos
pop
jecxz
push
and
sbb
inc
test
loope
jno
scas
add
mov
lret
in
mov
adc
scas
lret
outsl
arpl
pop
dec
ficoml
std
xchg
or
push
call
xchg
push
jbe
add
imul
test
push
cmpsl
push
repnz
mov
jge
adc
sarl
ret
hlt
sub
xor
push
xchg
cmpsl
jno
lret
int3
xchg
and
add
movsl
cld
mov
fucomp
lret
lock
and
and
mov
jo
mov
je
cmc
lret
shrb
daa
sub
hlt
fcmovbe
mov
enter
sbb
and
pop
testl
rcl
lret
mov
test
jecxz
fsts
cltd
shl
ljmp
into
lahf
dec
cmp
ja
lods
pop
push
je
iret
repnz
ror
push
aad
into
fcompl
mov
lret
add
les
push
ds
bound
lret
mov
loop
mov
dec
mov
shrl
cwtl
negb
aaa
cmpsb
iret
cld
xor
movsl
mov
sub
lret
xchg
loope
inc
ja
int
add
arpl
sub
dec
add
mov
lret
pop
mov
lods
jmp
cmp
arpl
hlt
mov
xchg
in
ljmp
inc
clc
push
mov
insw
lret
dec
aaa
or
cmp
fidivl
subl
stos
ljmp
lds
or
dec
cmp
push
fnstenv
dec
sti
cmpb
scas
cltd
lret
jecxz
inc
xorl
lret
xor
rol
xchg
loop
jns
jle
iret
lock
mov
data16
xchg
adc
in
outsl
addl
adc
cmp
push
insl
mov
lret
mul
jno
leave
sbb
dec
push
subb
and
push
fildll
sbb
rorb
mov
icebp
push
lret
dec
divl
gs
xor
jno
out
dec
mov
adc
inc
and
xor
lret
or
dec
repnz
cmpsb
or
mov
mov
mov
test
stos
push
loopne
add
push
sub
pop
aas
sar
lret
pop
out
imul
rorb
pusha
dec
fwait
sbb
mov
loope
lret
push
mov
lret
leave
sahf
hlt
xlat
mov
lret
push
inc
push
mov
push
fs
sahf
lret
icebp
lds
and
popa
dec
mov
je
sub
jmp
cmp
clc
adc
lret
les
in
and
sahf
xor
adc
rcll
repz
ljmp
or
shlb
pusha
sbb
and
or
dec
cwtl
rcrl
xchg
cltd
lds
inc
push
mov
push
jb
xor
in
call
xlat
push
and
xor
lods
jno
icebp
lret
xor
cwtl
add
pop
pop
add
xchg
push
test
sub
jmp
dec
lret
pop
xchg
out
jo
ror
and
dec
lret
jno
xchg
mov
cmpsl
fsubr
sbb
xor
lret
rorl
push
fidivs
inc
hlt
xchg
cli
mov
add
jp
push
lds
subl
int3
mov
lret
pop
sub
fcomp
jns
cmp
xor
les
lret
and
xchg
and
xor
stos
cmp
ror
clts
xchg
adc
loopne
cmp
aam
ljmp
pop
cmp
test
lock
add
and
push
fnstcw
rolb
lret
mov
test
jnp
aas
and
scas
push
jo
lret
sub
mov
movsb
mov
pushf
lret
sub
lret
xchg
call
add
cmp
jl
lret
sub
insb
mov
lret
popa
out
or
sub
adc
mov
rcrb
sti
aam
imul
pop
and
ljmp
jge
test
icebp
mov
repz
jp
push
jo
adcl
inc
sub
xor
pop
adc
cmpsb
sarl
inc
into
pop
into
cmp
cs
jae
lret
aam
xchg
adc
lret
pop
mul
xor
push
lret
push
int
and
jge
add
gs
sub
or
add
jne
xor
sbb
movsl
fwait
sbb
sub
popf
dec
lods
rclb
iret
mov
clc
adcb
dec
adc
xchg
inc
cmpsb
sub
fidivl
add
sbb
lret
mov
in
jnp
adc
xchg
fcom
pop
jge
repnz
pop
jmp
shl
in
lret
pop
xlat
jns
movsl
notb
xchg
lret
inc
ret
incl
cmp
push
lret
out
iret
mov
jno
mov
lret
mov
aad
jle
fwait
jb
inc
mov
push
outsl
add
lret
add
or
roll
mov
fldl
test
adc
adcb
lret
dec
xlat
jp
mov
lret
push
shl
jecxz
repnz
jb
mov
mov
nop
jmp
ljmp
loop
out
mov
mov
ret
adc
je
mov
inc
cmc
arpl
xchg
jns
sub
lcall
cmp
lret
jle
out
lret
aas
xorl
cmp
adc
int
test
cld
shlb
in
cmpl
outsb
mov
mov
jg
test
js
xor
sbb
lret
rorb
push
pop
mov
cld
sub
scas
pop
pop
roll
mov
or
stos
int3
jne
add
mov
xchg
int
inc
jno
or
xor
ss
mov
data16
fisttpll
cli
and
dec
jbe
fdivrs
mov
push
adc
test
cwtl
ret
xor
insl
lret
ljmp
push
jb
aad
inc
cmp
rolb
cli
lret
ds
inc
inc
popa
cltd
or
mov
pop
sub
inc
lock
mov
sarl
cmp
lret
and
lret
call
mov
jb
sbb
push
lret
xchg
dec
fs
and
cmp
xlat
cmp
dec
pop
fcmovnu
cli
repz
push
rolb
aad
add
lret
jmp
lret
lcall
lret
rcrl
das
orl
cmc
mov
loope
lret
pop
jno
ljmp
fdivs
repnz
testb
packsswb
ror
mov
mov
sar
sbb
cmp
stos
pushf
fmul
sub
stos
ja
pop
dec
shr
sub
dec
imul
mov
fisttps
lret
int3
dec
aas
xchg
sar
jns
lret
mov
fdivs
cmp
into
iret
pop
out
jge
lret
and
mov
fst
orl
dec
popf
sbb
mov
xchg
lods
cmp
pop
and
lret
daa
aas
push
rcll
aad
lret
jl
sub
push
call
cmpsl
jno
dec
lret
mov
adc
pop
push
push
lret
jp
imul
fdivs
test
lret
push
pushf
into
jo
mov
xor
nop
je
cmp
sahf
lret
cltd
fists
int3
aam
mov
pop
mov
sub
mov
ss
inc
fidivl
ds
fcom
or
lods
insb
loope
lret
fs
add
lret
push
fwait
repz
mov
push
aaa
lahf
lret
lods
jle
int3
lret
push
rcrl
es
mov
inc
jmp
mov
shrb
repnz
push
inc
xchg
iret
jb
fistpl
daa
shrb
test
adc
das
pop
cmp
lret
cld
pop
add
adc
mov
add
cmp
je
fists
jne
pop
sbb
mov
lret
mov
sub
movsb
ljmp
rolb
popf
xor
mov
mov
sbb
lret
loopne,pn
dec
lea
dec
cmp
jb
loop
ljmp
sarb
sbb
out
lret
cmpsl
stos
hlt
in
mov
sbb
sar
adc
lret
jns
cmp
fxch
aam
sbb
inc
pop
xchg
ljmp
into
sti
cmp
and
mov
xchg
mov
sbb
out
repnz
lret
sub
imul
xchg
pop
push
cmp
jecxz
aas
psubsb
xchg
pop
mov
mov
xor
lret
or
pop
lret
ret
jg
jmp
inc
inc
xchg
test
cmp
mov
sbb
in
mov
adc
xchg
out
xor
cmp
sub
mov
lock
lods
popf
sbb
jae
out
aas
or
cmp
xor
lea
mov
jge
stos
sub
lret
aad
jne
or
cmp
cmp
lret
pop
popf
hlt
inc
mov
dec
jg
call
faddl
lret
inc
mov
jge
push
lret
out
paddusw
and
sub
or
jle
cmp
jnp
sti
fwait
xor
sub
mov
pushf
ss
cltd
cltd
mov
adc
call
mov
mov
xchg
lret
add
insb
xorl
nop
test
addl
lret
jmp
sub
fcmovb
xchg
mov
jns
ficoml
cwtl
pop
not
mov
fwait
push
xor
add
in
rcrb
sbb
add
push
cmp
ljmp
dec
pushf
lds
sub
nop
data16
mov
mov
xchg
sub
add
test
fistpll
lret
rorb
push
adc
ss
stc
add
incl
push
aad
out
jnp
pop
pop
dec
push
pop
cmp
scas
inc
cltd
pop
fs
push
sbb
or
fdivs
ror
lret
mov
xchg
shll
rclb
lret
aad
mov
xor
loopne
xlat
rorb
test
sbbl
mov
lret
mov
mov
adc
push
addr16
cmp
pop
mov
cli
cmc
es
pushf
aam
aas
sbb
lret
or
dec
loope
cwtl
jp
lret
arpl
lret
pop
fnstenv
fwait
cwtl
add
lcall
in
pop
popf
adc
xlat
push
cmpl
lret
js
cmp
ljmp
inc
loop
mov
mov
or
scas
push
jecxz
lods
fiaddl
mov
call
lret
stos
xor
dec
sub
mov
test
xchg
hlt
inc
lret
call
pop
pop
or
xor
lret
pop
test
or
push
sbb
int
xor
cs
cmp
loop
inc
iret
cmpsl
pop
cmp
push
xchg
popa
fwait
adc
mov
push
testb
mov
pusha
lret
jo
adc
push
sub
loope
pop
pop
cmpb
lret
mov
pop
add
pop
stc
add
mov
fstpl
lret
je
fsubp
fcmovne
ss
test
out
push
lret
fsubrl
push
jge
pop
mov
fdivr
sub
test
pcmpgtw
ret
sub
cmp
in
cs
in
sbb
mov
sbb
mov
add
cmpsl
fsubl
fwait
pop
or
ret
int3
mov
pop
lock
outsb
xor
pop
pop
adc
mov
frstor
push
in
or
fs
cld
fdivrl
lret
cmp
push
stc
pop
lret
popa
ja
xchg
inc
test
push
ror
cmp
xchg
pop
xor
lret
dec
jnp
sub
jmp
aam
cwtl
xchg
cs
imul
lret
jb
push
in
lahf
dec
pop
mov
xchg
call
cwtl
and
pop
shrb
mov
ja
mov
rol
incb
fistl
and
xor
sub
mov
cmp
or
adc
sub
and
lret
rclb
sbb
out
test
add
pop
fmuls
lret
and
inc
jg
mov
cmp
xchg
lret
cmp
fmul
sbb
jmp
inc
inc
or
mov
push
push
mov
jb
and
popf
das
out
into
or
xor
push
jne
outsl
cmp
lret
cltd
nop
pusha
xlat
pop
lret
mov
lret
pop
iret
push
push
in
mov
inc
lret
cmp
lret
sub
jo
lret
push
lods
ljmp
jecxz
mov
mov
out
mov
call
les
sbb
pop
xor
orl
mov
xor
push
and
aad
and
inc
cmp
inc
shll
es
stos
adc
cli
add
push
ret
xor
or
xlat
push
cmpsb
ja
jns
mov
ljmp
loop
pop
mov
arpl
lret
add
mov
and
xor
mov
lret
push
sbb
pop
or
lret
into
in
rol
aas
lret
out
pop
jno
adc
lret
mov
and
lret
popa
sub
pop
daa
jns
in
jno
sub
mov
add
insl
adc
lret
mov
out
sub
stos
data16
and
adc
repnz
xor
fsts
add
pop
add
es
lret
or
ss
pusha
addr16
test
ror
leave
std
repnz
xchg
inc
jne
gs
test
dec
stc
mov
push
lret
xchg
mov
jne
in
mov
fsubrs
lret
xchg
aad
mov
cmp
pop
cmc
push
cs
imul
pop
mov
pop
ficoml
cmp
sbb
stos
xor
insb
mov
pop
lock
dec
stos
test
roll
add
or
rcr
test
in
es
add
push
nop
lea
in
movsl
sub
fwait
sti
or
aas
imul
data16
xchg
add
or
push
arpl
sarl
mov
stos
mov
cmp
add
pop
and
std
cli
ja
test
insb
and
push
add
aaa
push
adc
and
lret
mulb
lret
xchg
aas
jae
lret
repnz
inc
test
xor
pop
push
in
pop
ja
jae
dec
mov
inc
loope
jne
add
sbb
rorb
shrb
pop
inc
adc
je
xlat
and
sbb
sub
dec
add
outsl
lahf
shlb
repz
mov
call
dec
test
in
sar
push
lret
sub
jno
imul
fsubrl
aam
dec
fldenv
cwtl
je
push
mov
xor
orb
int3
stos
push
mov
arpl
and
ret
and
fcmovu
pop
test
rcrl
or
ljmp
mov
cmp
lret
fsubrs
lret
sbb
jae
adc
addr16
in
sub
lret
sub
xchg
in
add
mov
popf
mov
ret
orl
shll
lret
cli
inc
add
scas
ror
jle
jecxz
add
inc
xorl
add
fistpl
cmp
aas
int3
aad
dec
inc
arpl
dec
inc
sbb
xchg
lret
fs
xchg
mov
lahf
ljmp
into
fwait
int3
dec
stos
mov
cmp
add
aad
lret
inc
orl
loopne
out
enter
sub
adcl
hlt
lret
ja
push
cmp
jg
in
subb
xchg
push
hlt
jp
lret
and
outsb
fmul
cli
add
jns
pop
push
ror
adc
lret
jnp
mov
mov
pusha
sbb
ss
lret
std
pop
pop
dec
lahf
mov
adc
pop
dec
mov
add
ret
sti
fldcw
ds
and
out
mov
lret
dec
lret
int3
cmp
dec
cld
in
sbb
lret
leave
pop
data16
sub
pop
jle
out
cmpsb
lret
in
mov
jo
cmp
out
test
cmc
dec
ss
mov
enter
push
rep
mov
cld
lret
bound
xor
leave
fs
roll
mov
jnp
scas
aaa
inc
xlat
lahf
or
and
cmpsb
lret
nop
fdivrs
sub
andb
test
xchg
rcr
push
cmp
stos
fldcw
and
rcll
fwait
xchg
lret
adc
into
and
sbb
fs
pop
aad
sub
adc
and
xchg
xchg
nop
mov
jle
insb
xlat
push
add
pop
sti
push
pop
lret
leave
loope
fwait
lret
rorl
sbb
aam
xor
jo
xor
cmp
jmp
pop
fisubl
mov
pop
jbe
push
cltd
mov
out
jnp
inc
mov
cli
int3
sarl
cmp
insl
rorb
pop
bound
dec
add
xor
pop
sar
jbe
adc
add
pop
insb
lret
pop
mov
lret
jae
negb
mov
lret
pusha
cmp
lret
add
cs
add
adc
shlb
sbb
out
adc
mov
inc
pop
aam
xchg
cmp
or
pop
push
mov
push
lret
dec
sbb
xchg
lret
subl
cmp
mov
mov
inc
lret
sbb
jp
mov
inc
sub
dec
and
jnp
cli
das
fwait
shrl
add
rcr
js
inc
push
cmp
mov
cmp
mov
int
pop
aaa
imul
or
xor
pop
lret
pop
xor
into
lret
xlat
imul
repz
cmpb
loopne
push
xchg
pop
jl
mov
mov
add
stos
xchg
adc
out
push
mov
scas
adc
or
mov
fisttps
fs
pushf
cli
mov
andb
mov
ret
jae
loop
ljmp
xchg
mov
jne
mov
or
push
fdiv
fcmove
mov
adc
in
mov
adc
inc
push
ror
adc
lods
imul
outsb
push
fcmovnb
pop
mov
push
cmpb
mov
insb
gs
lahf
das
lods
cltd
sbb
cmp
outsb
in
push
push
sub
loope
aaa
psllw
cwtl
or
lret
and
sbb
loope
sub
out
ljmp
xor
add
pop
xchg
in
stos
int
aad
test
push
and
data16
inc
and
mov
xor
popf
imul
test
jae
and
popa
outsb
addr16
ds
pop
call
shl
lret
arpl
mov
pop
ror
mov
cmp
jp
push
xorl
adc
std
andl
mov
or
test
xchg
out
mov
push
inc
sbb
and
movsl
sbb
int3
push
push
enter
and
mov
mov
filds
mov
lret
ljmp
add
push
mov
xchg
jne
dec
rcrl
lret
pop
dec
lea
dec
pop
pop
xchg
pop
sbb
cltd
cmpsl
je
dec
push
and
mov
add
pop
sbb
adc
fs
sub
xor
dec
xor
or
sbb
jle
aas
sbb
cmpsb
lret
mov
dec
inc
aad
stos
cltd
out
sahf
mov
xor
fucomi
popf
add
je
jl
push
mov
daa
cwtl
mov
xor
in
jle
aaa
scas
pop
clc
xchg
sahf
cmp
gs
inc
rorl
fnstsw
mov
rcrb
lods
je
sarb
insl
xchg
ljmp
into
mov
cmp
into
aad
mov
pop
popa
pop
stos
mov
loope
int3
mov
mov
aam
push
std
int
lret
push
scas
cmp
pop
mov
push
mov
inc
cmc
add
inc
mov
stos
movsl
mull
pop
push
adc
scas
lret
notb
jnp
cmp
iret
sub
mov
lret
cwtl
das
xlat
hlt
push
out
lret
div
or
mov
fdivp
dec
insb
fnstcw
lret
pop
sub
push
mov
repz
cld
lret
pop
jle
aam
fwait
xchg
jae
cmpsl
inc
lret
fxch
sti
or
sbb
cmp
mov
outsb
mov
sahf
mov
jo
add
out
adc
sbb
or
lret
aam
dec
xor
lret
hlt
lea
je
fwait
stos
pop
sub
movsb
pushf
shr
adc
xchg
jb
ljmp
jl
aam
xchg
lret
mov
or
lret
push
and
fwait
dec
jbe
adc
lret
xorl
ja
push
rorl
orl
pushf
repnz
sbb
cmp
pop
mov
cld
notb
lret
aaa
std
loope
jmp
lret
in
adc
or
sbb
lcall
dec
dec
and
aam
rclb
daa
mov
pop
lret
sti
cmpsl
inc
xor
stos
cmc
inc
inc
pop
shr
cmp
or
push
rcrb
cli
dec
xor
inc
sbb
popa
hlt
int3
mov
xchg
pop
rorb
lret
in
popa
and
lahf
add
jle
popf
sbb
icebp
lret
push
gs
call
out
lock
ljmp
pop
test
inc
in
aam
inc
cwtl
out
lret
xchg
inc
fstl
adc
pop
lret
iret
pop
xlat
or
call
faddl
and
into
gs
outsl
ror
adcb
lret
repnz
xchg
jge
out
push
ja
jmp
mov
push
bound
lea
loop
shl
xchg
xchg
insb
int3
fwait
test
int3
mov
rcrl
fcmove
jp
addb
sub
lret
loope
int
inc
mov
out
inc
inc
ja
in
xchg
push
lahf
cltd
fcmove
lcall
movsb
ror
iret
dec
rcl
xchg
push
cmp
int3
int3
xor
or
pop
push
shl
dec
insb
in
pushf
push
add
adc
jge
lret
rorb
adc
test
adc
mov
mov
shlb
mov
repz
cmp
push
jge
cmp
jns
rol
lret
sbb
jecxz
mov
lret
fnsave
fldl2t
ret
shld
pop
sbb
inc
jne
cmc
ret
mov
sbb
xchg
std
xorb
aam
lret
arpl
js
push
cmp
mov
fisubrl
fiaddl
and
sub
lret
inc
movsl
mov
popf
test
mov
fwait
pop
js
pop
scas
sub
movsl
add
fdivrs
inc
insb
pop
cmp
cli
cmp
xor
and
sbb
push
icebp
movsl
lret
push
dec
cltd
into
pop
cwtl
lret
mov
jb
shll
shrb
jno
and
stos
dec
dec
push
shlb
sbb
push
movsb
shr
pop
cmpl
jge
pop
ret
lret
jg
dec
cmpsl
in
adc
sbb
fld
loopne
imulb
cld
fs
lret
push
test
les
or
xor
cmp
sbb
int3
mov
mov
and
lret
push
add
lret
std
jo
in
fnstcw
adc
cs
test
es
movsb
into
sub
mov
push
push
lret
jo
roll
or
loopne
lret
int
jl
popf
mov
inc
and
fwait
mov
movsb
cmp
xchg
lret
or
jb
test
dec
scas
lret
lret
xor
movsl
int3
stos
jl
dec
enter
sarl
adc
xchg
ja
jg
roll
mov
xor
jae
lret
dec
fisttpl
lret
movsl
inc
decb
orb
mov
gs
and
stos
add
lcall
cwtl
push
aaa
push
mov
push
aad
ss
pushf
sbb
push
ss
jg
cli
fcmove
dec
in
adc
xchg
push
rcr
andb
push
pop
call
and
mov
dec
lods
sbb
dec
mulb
das
mov
fcmovne
sbb
mov
jge
pop
inc
shl
cmp
push
dec
repnz
shrb
dec
jg
in
xchg
lret
or
notb
mov
push
repnz
mov
xchg
and
cwtl
popf
jo
mov
dec
lcall
sub
dec
mov
lret
mov
xchg
jmp
cli
cwtl
sbb
adc
pop
pop
add
sbb
cmp
mov
or
or
ljmp
fadds
repnz
lret
xchg
mov
in
int
fsub
fxch
pop
fildl
sbb
shlb
add
pop
ljmp
lret
hlt
mov
add
mov
dec
add
mov
jmp
jle
rcl
jp
repnz
cmp
jmp
sbb
mov
sub
mov
sbb
stos
fcomp
and
ret
mov
mov
mov
add
inc
js
pop
lret
push
std
mov
dec
cltd
lret
popa
stc
leave
imul
lret
sahf
add
inc
in
popa
cli
inc
outsb
sbb
and
sbb
mov
inc
lret
fnstcw
inc
hlt
pop
out
shrl
push
imul
pop
push
lock
or
fmuls
cmp
setne
lret
popa
lret
inc
pop
add
int
inc
ss
es
std
dec
lret
call
inc
icebp
sar
and
sbb
add
mov
mov
aam
xor
jmp
push
lret
jne
xor
mov
ret
jecxz
mov
fwait
and
fistps
lret
les
pop
in
mov
rcr
in
adc
hlt
lret
mov
push
lret
or
mov
lret
arpl
jnp
pop
inc
lods
dec
or
and
cmpsb
lret
and
cmp
xor
push
and
xor
lret
add
mov
cld
test
shl
sub
lret
mov
lahf
out
clc
clc
nop
cmp
ljmp
sbb
or
das
into
inc
cwtl
pop
lret
mov
lret
mov
pushf
stos
cmp
and
loopne
pop
sub
mov
fisubrl
and
jnp
jne
lcall
xor
call
pop
insb
lret
movsb
mov
aad
xor
mov
test
cwtl
adc
or
aaa
mov
into
fs
std
movsl
into
xchg
ds
fbstp
add
cld
fstp
cli
mov
xchg
or
out
inc
push
add
shl
mov
lret
mov
daa
es
lret
cli
jo
dec
jge
lret
xor
mov
push
push
adc
lock
cmp
inc
mov
or
and
jo
outsl
pop
adc
data16
lret
pop
test
stos
push
ret
cmpl
sbb
imul
mov
pop
lret
cmp
ret
sub
fimull
pop
scas
loopne
xchg
stos
imul
lret
enter
lods
pop
ficompl
jecxz
fcomps
out
and
pusha
lret
cwtl
imulb
mov
mov
iret
ror
inc
aam
fldlg2
lret
sub
or
pop
add
pop
lret
jne
adc
cmc
and
xor
mov
insb
clc
xchg
lret
ficoms
inc
push
test
add
or
xchg
jp
fnstsw
dec
push
out
lret
jle
pushf
adc
lret
sub
mov
jbe
stos
loope
dec
lods
rorb
fwait
jg
ror
call
xchg
add
push
jle
into
mov
in
pop
add
lret
pop
daa
dec
mov
lret
lods
sbb
int
fmul
fiadds
test
lods
stos
dec
orb
cmp
xchg
mov
jge
rolb
pushf
rclb
sub
jmp
mov
ds
cmpsb
xor
adc
add
jl
insb
loop
je
sbb
mov
sti
xchg
cmpsl
dec
pop
cmp
jne
cmp
or
lods
outsl
jecxz
lret
call
fcmovne
out
adc
mov
jae
shlb
lahf
lods
dec
dec
in
cli
iret
cltd
jns
scas
push
stc
push
or
pusha
dec
out
adc
sbb
imul
rorl
push
fistpl
adc
rorb
lret
insb
das
mov
in
lret
rcll
notl
repz
mov
ror
idivb
imull
dec
pop
int
fidivrs
sbb
out
jle
mov
cli
mov
add
push
out
sub
pop
mov
mov
stc
jnp
mov
jo
ffree
mov
lret
xor
cmp
shl
xchg
movsb
ja
test
insb
pop
stos
push
ljmp
push
dec
push
mov
les
jnp
gs
lret
scas
fsts
call
xor
aaa
repz
cmpb
xchg
popa
aas
jae
fisubl
cmp
push
adc
sbb
or
sbb
sub
mov
icebp
xchg
lret
cmp
ljmp
fadds
lcall
icebp
aad
mov
ljmp
inc
lret
xor
lret
xchg
mov
sti
add
pop
xchg
inc
sub
inc
scas
aam
fsubs
mov
stos
ss
pop
out
push
mov
xchg
inc
or
mov
jl
inc
and
shrb
pop
lret
shlb
mov
popf
mov
xchg
push
jo
dec
mov
faddp
mov
shl
ret
stos
xchg
xor
outsb
or
test
cli
cmp
jecxz
mov
lret
aad
xor
jle
popa
out
dec
adc
mov
lret
sub
das
lret
sbb
arpl
lret
lcall
fwait
push
adc
pop
lret
dec
ljmp
push
sub
cmp
adc
lahf
add
lret
lds
fwait
adc
fcomps
sub
clc
jns
lret
pop
ret
rorl
sub
test
es
in
out
fnstcw
scas
pop
push
popl
rcll
inc
rcl
mov
jle
add
jbe
clc
mov
lret
jecxz
adc
mov
jns
xchg
addr16
bound
ja
adc
sbb
fwait
lret
mov
mov
arpl
or
mov
movsl
mov
xchg
ret
sbb
aam
and
icebp
in
push
shll
in
scas
ret
or
mov
xchg
push
test
in
inc
mov
xchg
lret
sbbl
xchg
movsl
aad
lret
pushf
sbb
push
pop
mov
enter
out
aam
sub
add
xor
std
imul
aad
ficoms
sahf
rcll
bound
jge
mov
repnz
jae
push
fsubs
notl
lret
adc
inc
pop
adc
daa
imul
xor
xchg
clc
sarl
fwait
mov
sbb
lret
push
adc
sbb
push
dec
mov
xchg
gs
and
sub
ret
xchg
mov
lret
adc
inc
jnp
mov
push
pushf
and
jg
aaa
pop
xor
mov
sub
add
roll
cld
lret
mov
jmp
sub
cmp
shlb
jp
push
jg
adc
mov
fwait
or
fmul
rorl
sub
mov
jmp
push
jbe
lret
push
mov
lret
mov
inc
aam
add
into
xlat
xchg
push
es
dec
cwtl
xchg
or
popf
lret
mov
ret
xchg
cmp
mov
mov
imul
cmpsb
lret
push
jmp
stos
mov
fcomps
into
or
loop
mov
orb
inc
dec
aad
lret
ss
ja
aam
decb
shrb
ret
push
cmp
push
shlb
lret
or
lret
cmpb
jl
pop
or
xchg
adc
lret
in
mov
mov
ja
cmp
cmpsb
cmpl
inc
cmp
xchg
mov
lret
int3
pop
call
jle
outsl
daa
popa
add
mov
mov
inc
lret
enter
es
or
les
stos
imul
outsb
push
cli
mov
push
push
out
jbe
sbb
adc
lods
pop
rcrb
cmp
push
arpl
incl
inc
adc
cmp
jecxz
sub
cld
push
jnp
xlat
add
inc
fs
stos
gs
mov
lret
push
fmull
lret
pop
or
scas
jns
lret
dec
movsb
and
iret
lcall
sarl
lret
add
lock
mov
loopne
adc
icebp
test
xchg
pop
cld
iret
mov
pushf
ret
cmp
mov
fisubrl
aas
lods
sarb
lret
insb
cltd
dec
dec
popf
mov
lret
pop
testb
in
pop
ret
pop
es
cwtl
lret
bound
lret
scas
popa
push
and
jl
xchg
xor
lret
add
movsl
jmp
cmp
cmp
mov
push
inc
or
stos
stc
jl
ja
les
inc
in
lret
stos
and
js
stos
lret
loopne
add
pop
and
call
mov
xor
imul
jbe
fimuls
inc
scas
out
mov
adc
push
mov
in
pop
jge
fmulp
mov
lods
jno
jge
lret
cmp
inc
push
sub
push
jp
pop
jno
fiaddl
sbb
test
sub
inc
lods
and
push
xchg
cmp
or
ror
out
jae
in
mov
stc
pusha
jmp
lret
push
mov
jp
sub
adc
fwait
push
je
inc
dec
outsl
jae
or
mov
out
sbb
push
cmp
fldcw
mov
mov
aam
mov
fstps
fmul
fnstsw
bound
iret
xchg
clc
jnp
sbb
sub
add
subl
out
xchg
pop
ljmp
push
clc
lret
mov
and
xchg
les
imul
lret
insb
into
and
mov
lret
or
or
mov
int3
std
movsb
bound
inc
jne
mov
lret
std
fisubl
xchg
insb
lret
movl
scas
cmp
push
cli
sbb
xchg
in
lret
idivl
ja
test
mov
cli
xor
cmp
mov
cmp
pushf
int3
jl
pop
cld
cmp
fsts
lret
stc
int3
jne
push
jp
dec
in
shlb
jnp
lret
pop
dec
pop
and
lret
add
dec
pop
cmp
mov
xchg
lods
sub
daa
enter
fs
into
arpl
lret
and
aam
dec
lea
lret
dec
sbb
cli
in
cmpsb
repz
aad
pop
out
sahf
or
pusha
addb
lret
outsl
movsb
ljmp
mov
popf
popa
shlb
mov
dec
and
lret
mov
dec
lret
xchg
popf
mov
xchg
xchg
cli
loop
inc
movups
mov
ret
mov
add
jae
aam
mov
ret
shrl
jp
xor
cld
leave
lcall
push
lret
sbb
sub
lret
lret
push
cltd
jcxz
ds
xor
xlat
dec
mov
inc
or
lret
xor
xchg
push
push
lret
jbe
jne
add
lret
icebp
inc
cmp
or
cli
and
mov
aas
cmpsl
pop
lret
into
int3
ret
popa
outsl
mov
xchg
jbe
loop
mov
lret
sub
ljmp
test
mov
mov
lods
fxch
shll
push
jl
clc
lret
std
cltd
xchg
xor
int
xchg
imul
leave
outsl
pop
aas
dec
hlt
push
cmc
lret
pop
dec
fwait
jmp
xor
mov
cwtl
xchg
lret
dec
dec
std
mov
sbb
cmpsb
jge
popa
xchg
cmp
ficompl
mov
rclb
lret
fwait
rcl
sub
ja
push
mov
pop
mov
sub
lret
ja
fistps
les
cs
in
jb
xchg
add
test
fidivl
fstpl
lea
int
cmp
pop
dec
scas
add
rcrl
push
lret
mov
sub
test
jo
add
imul
call
add
dec
mov
add
or
out
test
lret
fdiv
jo
loope
lea
xlat
mov
xchg
data16
lret
jecxz
xchg
ja
clc
lret
daa
mov
test
or
inc
lea
xlat
mov
int3
nop
lret
pop
add
scas
cmp
fstl
lea
mov
jge
mov
dec
icebp
popa
mov
loopne
pop
outsl
jl
push
stos
xchg
fisttpl
or
inc
add
push
sbb
sbb
imul
pop
add
xchg
arpl
xorl
out
fs
fidivs
stos
push
push
push
stos
int3
into
pop
roll
adc
fsqrt
lret
pop
inc
mov
aaa
xor
leave
cmp
data16
adc
jl
bound
shrl
in
jae
cmp
adc
std
xor
lret
mov
repz
int3
lock
lret
ret
movsl
dec
pusha
popf
add
rcl
push
cmp
xor
dec
lret
shl
inc
lods
loope
iret
rcrl
clc
xchg
pop
lock
mov
jnp
loope
sbbl
sub
in
sub
cmp
lret
jno
popa
orb
and
arpl
cmp
das
cmp
xchg
sub
cmp
ljmp
leave
lods
lret
fs
mov
sub
ficoms
adc
mov
jnp
mov
out
xchg
cmpb
inc
lds
ja
rcll
mov
push
push
add
into
aam
dec
xor
add
mov
scas
sti
aaa
aad
test
lds
insl
jo
movsl
lret
lret
int3
inc
loope
add
adc
fstpl
sub
dec
stos
xchg
out
int3
fidivrs
add
mov
or
rolb
adc
js
sub
cmp
in
pop
lret
cli
and
sub
add
mov
sahf
mov
lret
repnz
scas
mov
shlb
jns
mov
rol
fnsave
pop
fidivrl
mov
inc
lea
or
pop
push
mov
jae
push
cmp
mov
dec
xor
push
xor
and
sub
out
xchg
mov
mov
add
repz
xor
gs
jmp
or
xor
outsb
adc
adc
and
jl
or
lret
pusha
pop
clc
adc
mov
mov
lock
sbb
or
pop
enter
jmp
adc
lret
pop
jne
and
iret
mov
fidivrl
into
imul
push
sti
mov
clc
dec
lret
push
jo
xor
in
lret
xlat
imul
xor
lret
mov
scas
sti
xchg
sub
lret
add
lret
ss
shlb
out
jae
add
push
pusha
cmp
inc
sti
push
fxch
sub
cmpsl
inc
sbb
pop
xchg
mov
mov
lret
pop
subb
aad
lret
test
mov
das
add
jg
fdivrs
enter
adc
lret
adc
lret
push
push
mov
pop
fisttpll
shrb
or
xchg
sbb
add
in
fistpll
pop
movsl
jge
jnp
mov
aam
or
mov
lret
movsl
adc
shll
mov
lret
lret
jecxz
push
dec
sbb
lret
outsb
mov
lret
test
mov
and
or
stos
xchg
lret
jg
lcall
movsl
adc
jns
cmpsb
lods
and
lret
mov
fstp
fwait
ds
inc
push
loop
shll
loopne
mov
cmp
xor
or
stos
fdivrl
ficompl
clc
xchg
inc
inc
cli
mov
add
jg
jmp
push
mov
lret
sub
pusha
cmp
ret
sub
nop
lret
repz
in
pop
scas
fidivl
into
fnstenv
push
lret
jmp
jecxz
int
lret
push
inc
mov
aaa
cmc
rclb
fsts
xchg
mov
ret
into
xchg
xchg
repz
loop,pn
cmp
mov
pushf
and
xor
lret
lea
lret
cmp
stos
data16
stos
lret
cwtl
mov
add
loop
dec
xchg
add
cmpsb
jge
lret
mov
jmp
cmc
test
sub
lret
cmp
push
or
pop
push
repz
ss
cld
xchg
jmp
cmp
mov
inc
out
adc
mov
int3
mov
inc
mov
cltd
inc
cwtl
sarb
into
stos
ljmp
jg
cli
or
cmp
and
mov
mov
daa
sbb
outsl
aad
adc
lret
aas
stos
shrl
jb
inc
sbb
movsb
lret
rcrl
lret
sub
hlt
mov
mov
pop
lret
mov
lret
addl
hlt
and
inc
stos
jl
lret
sbb
dec
lea
xor
jo
pop
push
cmovns
add
push
imul
mov
ljmp
ja
test
mov
sbb
std
pop
cmp
es
lret
pop
sbb
sahf
pop
cmpsb
push
lret
xor
mov
ljmp
rcrb
js
lret
movsl
mov
xor
lret
mov
jo
inc
mov
mov
dec
out
lock
stos
or
mov
lret
cmp
loop
add
lret
gs
in
dec
cmp
stos
and
dec
pop
imull
mov
repz
xchg
xor
mov
or
dec
in
sbb
cwtl
fwait
push
rclb
aam
sub
push
or
and
enter
jmp
popa
cmp
lret
and
in
repnz
pop
cmp
fimull
loop
addl
xchg
push
lret
and
dec
and
push
lret
loope
lods
in
ror
xchg
out
cli
in
insb
bswap
rcll
leave
lret
jbe
jecxz
push
lret
xor
popa
sbb
push
fstpt
adc
push
in
nop
lds
imul
lods
fwait
mov
sti
add
ror
push
shlb
ss
jae
mov
out
mov
lret
push
ret
sub
and
push
pop
jno
adc
sbb
mov
cld
movsl
shrb
inc
outsb
arpl
es
cli
push
lret
add
bound
jge
add
popf
lret
orl
das
xor
sti
push
lret
mov
and
lret
or
lods
cwtl
filds
cmp
lea
sbb
or
int
dec
add
and
test
lret
push
aas
sbb
repnz
stc
nop
dec
mov
lret
add
push
mov
shrb
ss
xchg
pop
push
in
push
inc
cli
sbb
and
lret
inc
shlb
mov
mov
imul
lret
xlat
adc
add
jp
adc
lret
mov
rcr
nop
inc
std
mov
or
lret
fidivrl
cmp
xchg
xor
sahf
pusha
pop
sub
push
lret
shrb
xchg
je
idivb
bound
push
jg
lret
jge
fidivrs
popf
sub
sbb
negb
push
std
aaa
ror
lds
insb
pop
push
arpl
sbb
fcmovbe
jmp
mov
test
sbb
and
loopne
gs
cmp
loopne
push
and
out
sub
xchg
fisubl
rol
pop
sub
test
mov
jp
adc
lret
ficomps
lret
mov
clc
iret
cmp
sarb
jmp
lret
lcall
je
movswl
pusha
and
popa
mov
fidivl
or
sbb
lret
out
jns
sbb
push
push
inc
lret
aas
fwait
ret
mov
lret
out
shlb
lea
ljmp
in
fcomps
nop
sahf
or
lods
or
add
loopne
jg
mov
sub
mov
xchg
xchg
cmp
fmuls
mov
shrl
mov
mov
imul
rcl
out
lock
or
into
mov
fwait
lret
pop
fdivrs
jp
lret
pop
sbb
iret
xor
add
sbb
mov
dec
pop
insb
cld
inc
xor
pop
stos
inc
lea
lret
pop
iret
lret
push
daa
mov
adc
lret
fs
fbstp
mov
xor
lods
and
cli
icebp
aas
test
leave
rcl
out
clc
sbb
ljmp
lds
cmpsl
mov
adc
sbb
mov
dec
insl
cmpb
scas
push
mov
mov
or
xchg
jmp
imul
rolb
and
in
push
int3
jmp
add
xchg
ficoml
dec
lahf
mov
inc
test
loop
add
lds
leave
lret
inc
sub
enter
dec
js
or
cli
aaa
fwait
and
into
cmp
mov
cmp
stos
movsl
xor
mov
lret
sbbb
aaa
test
mov
lret
cld
movb
mov
inc
int
xchg
out
in
fistpl
stos
mov
lret
mov
push
lret
jne
dec
lds
lret
adc
jbe
xor
mov
push
jmp
jge
lret
sub
xchg
inc
lret
movsb
in
push
mov
and
adc
push
xor
sahf
add
repnz
cli
cltd
push
cmp
rorb
mov
dec
push
cwtl
lret
mov
pop
lret
fisubrl
lret
mov
sub
pop
stos
fwait
push
dec
rep
hlt
pop
aam
jl
mov
arpl
aaa
inc
mov
mov
cmp
or
mov
mov
push
and
adc
in
fwait
idiv
sub
flds
mov
lret
sbb
lcall
mov
loope
fwait
mov
inc
jb
push
push
insl
and
popa
cli
lret
add
ds
mov
cwtl
add
fmull
sarl
mov
mov
jmp
js
push
pop
lret
push
loope
scas
sbb
push
xchg
inc
cli
fwait
xor
or
jmp
push
jae
xor
sbb
push
lret
xor
fmull
js
add
ffreep
fcmovb
into
mov
cltd
inc
mov
dec
mov
popa
sbb
notb
jge
fwait
inc
int3
rclb
push
mov
lret
test
inc
cltd
jnp
xor
sub
cmpsb
fmul
mov
mov
adc
addr16
push
cld
xchg
fimull
cmp
pop
movsl
inc
sarb
hlt
cmp
xchg
lea
js
cli
adc
mov
emms
mov
std
xlat
jnp
mov
and
gs
and
push
lcall
lret
cmp
mov
jg
lret
in
xchg
jae
sbb
lret
xor
sarb
jg
rcll
stos
bnd
mov
or
leave
fstps
jo
cwtl
lret
push
xor
daa
jno
lret
jg
call
mov
fmuls
gs
test
mov
cltd
out
xchg
out
add
psubw
jge
jl
outsl
or
jecxz
lret
loopne
inc
xchg
lret
xchg
or
addr16
mov
push
nop
lds
stos
pop
pop
pop
aad
iret
jge
ret
dec
push
sub
cmpsl
xor
in
jnp
aas
mov
and
push
sar
jge
add
push
jbe
outsl
les
shrb
dec
lret
inc
push
adc
xchg
lret
pop
jp
inc
fstps
xchg
lret
lret
or
lret
xchg
out
dec
pop
xor
cs
sbb
bnd
lret
test
and
push
push
mov
movsb
lret
data16
fwait
jns
cmp
vpshuflw
lret
loop
pop
test
lret
xor
inc
gs
adc
js
dec
inc
cli
pop
outsb
test
pop
bound
loope
and
flds
js
fwait
mov
insl
lea
std
sub
out
gs
shlb
mov
roll
into
fwait
and
pop
xor
mov
fdivs
mov
mov
pop
and
xchg
test
xchg
enter
and
adc
std
loope
jecxz
cmp
pop
aas
pop
fwait
pop
and
cs
lret
or
xchg
jmp
inc
xor
jae
mov
insl
int
add
ja
lds
ror
mov
push
fsubl
mov
jmp
aas
and
cmp
mov
ret
sbb
nop
shrl
cli
mov
inc
ljmp
fadds
popa
mov
jp
sub
lret
jbe
movsb
pop
je
stos
adc
xchg
dec
xor
ljmp
into
sbb
fcmovnu
in
test
and
push
sbb
popf
ret
movsb
mov
mov
scas
mov
jecxz
incl
xor
cmp
or
flds
adc
push
cmp
and
dec
aam
pop
pop
lret
cmp
sub
add
stos
mov
inc
mov
or
dec
negl
pop
lret
mov
int3
fcomip
lret
ret
dec
aas
lret
or
jns
stos
scas
lret
outsb
mov
mov
mov
inc
fcmovbe
test
cmp
lret
mov
or
stos
jo
mov
sub
ror
mov
xor
subb
lods
cmc
sub
sub
sti
fmuls
adc
lret
insl
out
pop
pusha
pop
aad
mov
sub
lret
add
lret
pushf
and
lret
adc
push
fcmovne
out
jnp
lret
sbb
rcrb
xlat
cli
std
mov
push
fidivl
outsb
lret
cld
jno
jb
lret
lret
pop
mov
hlt
push
lret
and
dec
lret
push
sahf
pop
sub
mov
ret
test
and
rcrb
outsb
mov
test
stos
popf
adc
pushf
pop
push
gs
scas
sbb
jns
pop
fucomi
into
or
div
shll
cli
add
punpcklbw
fsts
ds
sbb
lret
mov
mov
jp
hlt
mov
xor
aaa
icebp
pop
scas
lret
loope,pt
orl
lret
loopnew
pop
mov
test
and
lret
jne
jb
mov
push
sub
xor
lods
jle
dec
cli
or
je
out
pop
add
std
push
int
mov
lods
xchg
ror
aad
fstl
inc
sti
ljmp
into
jmp
sbb
in
lret
jecxz
xchg
and
stos
loop
mov
std
fsubs
popa
inc
clc
jl
cli
cmp
dec
fidivl
pop
popa
pop
jp
aad
mov
and
pop
daa
lret
aaa
gs
and
xor
inc
mov
and
jne
mov
lret
sbb
lret
cmpsb
sbb
andb
sbb
cmp
rcrb
mov
xor
cmp
mov
movsl
nop
push
lret
inc
dec
in
sub
dec
rcl
xor
cmp
pop
stos
sbb
mov
pusha
ja
or
xchg
mov
mov
mov
mov
lret
jge
out
xlat
sub
lret
das
cmpsl
call
sub
test
or
mov
lret
lret
or
lret
or
lods
loope
lret
mov
sbb
pop
dec
pop
inc
jnp
jne
sbb
lods
jbe
jno
jmp
xchg
out
addr16
in
lret
jl
mov
out
imul
push
clc
cmp
sbb
cs
add
sub
xchg
mov
or
mov
lret
sbb
mov
out
imul
pop
clc
adc
cmp
dec
sbb
pop
pop
push
adc
bound
popa
inc
dec
out
lret
repnz
jb
gs
push
xlat
adc
je
jp
adc
add
mov
subb
ret
lret
addr16
add
cmp
imul
adc
xor
lret
fsubrs
mov
mov
insl
and
inc
lahf
and
dec
int3
mov
or
sub
inc
lret
scas
fbstp
popa
inc
dec
pusha
les
cwtl
dec
cltd
push
lret
fisttps
or
lret
gs
xlat
pop
xchg
lret
sbb
jae
out
es
sbb
sti
call
jle
mov
int
sbb
xchg
inc
push
cmp
int3
jnp
sbb
fidivl
cltd
inc
pop
add
dec
or
std
js
es
aaa
fcmovne
mov
sub
mov
lret
jge
sbb
lret
inc
imul
pop
dec
lea
pop
rorb
ffreep
sti
xchg
push
mov
and
xchg
enter
aaa
hlt
lretw
mov
dec
lret
and
cmp
lret
outsb
and
fwait
xor
stc
dec
jns
xchg
jae
lret
add
sahf
cmp
movsb
dec
cwtl
mov
push
scas
jne
jmp
pop
fisubrl
shr
and
lea
ss
sub
ret
in
lock
or
mov
xchg
aam
xchg
mov
add
pusha
call
or
inc
iret
pop
rolb
jo
sahf
fimull
mov
inc
ss
insl
inc
inc
ficomps
bound
jle
shll
gs
jnp
mov
arpl
push
fisubl
outsl
ds
and
mov
leave
movsb
xchg
ficompl
xchg
dec
add
les
sarb
cld
stos
fidivl
mov
lea
sbb
lret
add
push
push
cmp
ss
popf
push
mov
sbb
mov
pop
leave
cmp
mov
xlat
xchg
int
lret
les
lret
mov
dec
inc
add
sbb
fiaddl
jl
cld
pusha
lret
in
cltd
jp
addr16
bnd
lret
add
js
lret
int
inc
mov
mov
mov
cmp
ret
int
lcall
fucomip
xlat
test
cli
inc
movsb
fnclex
jecxz
xlat
jne
fs
add
inc
cmp
lret
lcall
ret
sbb
cld
jp
stc
add
lret
insl
iret
jmp
or
pop
int
mov
dec
fcmove
out
and
or
push
int
sbb
mov
fsub
fstp
gs
cltd
fistl
int3
mov
and
fiaddl
push
xchg
jmp
cmp
addr16
jmp
jecxz
jp
loope
sub
lret
ss
sub
lret
mov
ljmp
lea
mov
adc
cmp
sbb
xchg
lods
cmp
pop
sub
xchg
cli
adc
ja
jns
lret
mov
push
mov
test
cli
jmp
lss
and
clc
jle
lret
mov
ja
xor
sub
cltd
int3
lock
mov
jne
pop
adc
pusha
repnz
xchg
insl
or
xor
lret
sbb
xor
or
aad
mov
xchg
lret
add
lea
pusha
jns
push
xor
push
cmpsl
test
dec
pushf
dec
and
stos
sub
xor
rolb
pop
popa
mov
loop
ficompl
xchg
add
sub
ljmp
pop
jge
cmp
jb
lret
cld
jmp
jne
add
xchg
jl
xchg
mov
pop
xchg
test
jne
shlb
cli
les
dec
int
push
sbb
push
sbb
inc
fcoms
mov
out
pop
lret
in
ret
test
cmp
sbb
int3
sub
fisubs
daa
cmp
int
adc
dec
push
mov
imul
in
cmp
loop
sti
and
aas
dec
sub
xlat
js
mov
stos
inc
cmp
dec
movsb
shrl
inc
adc
in
stc
pop
push
dec
int
mov
or
push
xchg
mov
adc
fs
xchg
cmpsl
scas
fisubrl
push
inc
arpl
xchg
push
popf
out
outsl
cmp
lret
inc
shrb
add
mov
mov
sub
xor
rclb
mov
xchg
pop
xchg
sbb
test
sbb
fldcw
and
mov
ret
mov
rcrl
jne
rcrl
mov
cmpl
in
dec
lret
idiv
sub
ret
sti
mov
pop
sbb
xchg
mov
mov
mov
lds
ljmp
ror
or
mov
cmp
xlat
mov
xor
push
push
xchg
mov
add
movsl
popa
out
lods
lret
call
mov
push
jb
add
js
std
mov
in
inc
cmpsl
and
cwtl
lret
jae
cmp
addr16
jo
outsl
push
loopne
push
mov
arpl
stos
enter
inc
pandn
dec
adc
and
rorb
cmp
insb
cltd
insl
call
shrb
dec
addr16
or
mov
sti
lret
inc
add
orl
add
imul
or
xor
or
cmp
lods
fdivl
stos
xchg
fsubr
fidivs
jne
insb
je
fidivrs
or
ss
pop
into
mov
je
jne
jbe
into
mov
pushf
mov
xchg
jmp
lret
sbb
mov
scas
orl
mov
lret
dec
testb
pushf
pop
add
jle
pusha
fisubl
fsubrl
out
fsubr
sub
shll
int
lret
test
outsb
lock
loope
daa
divb
clc
and
push
pop
sub
out
mov
popf
sub
pop
or
or
leave
cs
jae
pop
insl
xlat
fwait
cli
dec
jno
fdivs
push
sbb
js
lret
sub
orb
popa
inc
lret
popa
sub
inc
mov
xchg
cmp
cmp
in
xor
lret
addr16
test
cmp
pop
dec
addb
mov
shll
lret
iret
test
fiaddl
mov
pop
jl
push
and
pop
repnz
mov
leave
lret
jns
cmp
lock
lret
pusha
sub
sub
loopne
sub
xchg
fadds
bound
lret
arpl
aas
popa
mov
stos
cmp
popf
in
mov
dec
into
in
das
shrb
fsub
lcall
out
mov
icebp
sarb
xor
sbb
sub
lret
dec
inc
fcom
lret
nop
dec
loope
jbe
ficoml
std
loop
add
fptan
aad
lret
and
aad
mov
rorb
insl
or
push
lret
mov
mov
mov
iret
lret
mov
lret
mov
dec
push
sarl
ss
lods
hlt
sub
dec
jecxz
jno
stos
lods
xor
jg
and
clc
dec
fisubrl
or
ja
jns
es
cmp
jnp
add
div
lret
loope
loopne
jmp
lret
xor
lret
pop
roll
mov
fbstp
bound
nop
lahf
lret
into
stc
test
inc
or
or
inc
rcrb
push
jno
lret
lret
mov
cmp
and
inc
outsb
rcrb
adc
lret
out
loopne
dec
das
pop
lret
lcall
ret
jge
es
cltd
fucom
scas
shll
jb
inc
lock
lret
inc
pop
add
inc
jae
addr16
les
inc
cmp
faddl
mov
sub
lret
hlt
in
mov
mulb
mov
push
enter
cmp
inc
fidivrl
stos
lret
jns
sub
fwait
jg
hlt
pop
mov
jnp
lret
xchg
notb
test
xor
mov
mov
xchg
sub
stos
daa
iret
stos
xchg
out
rcrb
fwait
repz
ljmp
jp
cmpsb
cli
xchg
xor
xchg
in
lret
fdivs
js
sbb
stos
daa
lret
and
dec
rcrb
pop
loopne
icebp
sub
inc
dec
lret
call
sub
mov
cmc
es
jo,pn
fcomi
xlat
out
cwtl
ss
cmp
mov
scas
test
mov
mov
jnp
mov
cltd
fsubl
imul
das
sbb
and
jmp
mov
adc
call
inc
sub
inc
insb
in
cli
rorl
repnz
or
stos
sbb
adc
lahf
mov
addr16
sti
xchg
scas
icebp
mov
dec
pop
or
pushf
loope
lret
xlat
mov
repz
fcompl
inc
stos
in
fcmovb
mov
frstor
add
lret
subb
imul
mov
xchg
jecxz
int
sub
dec
jbe
lret
add
or
lret
fldl
gs
icebp
lret
fwait
xchg
mov
xorl
out
rolb
out
xor
or
pavgw
mov
jp
adc
ljmp
mov
mov
stos
mov
push
sbb
sub
stc
or
mov
lret
in
mov
mov
or
inc
shr
fmulp
int3
lret
scas
mov
fsubrs
and
imul
mov
fbld
shll
es
and
daa
jecxz
push
lods
push
ja
cld
lret
outsb
pop
aad
or
add
jns
out
cli
inc
movsl
std
mov
daa
jo
dec
mov
mov
pusha
addr16
lret
sub
insb
lret
xchg
and
lods
scas
or
mov
push
popf
fdivrp
lret
dec
add
cs
adc
push
stc
inc
xor
mov
jmp
push
cmp
mov
pop
xor
fisubl
inc
xlat
mov
lcall
fisubl
test
lods
or
push
xor
inc
sub
add
jbe
mov
ret
movsl
or
lret
xchg
addr16
xor
pusha
push
sbb
jg
jp
pop
adc
shl
xchg
popa
loope
lret
inc
mov
cld
in
rorl
lret
push
mov
mov
adc
arpl
orl
nop
and
int3
cld
fmull
jno
add
lret
mov
mov
lret
loope
jns
cld
jmp
les
sub
sbb
dec
clc
pop
add
jnp
cli
xor
mov
push
jno
enter
and
rcrl
das
lret
sbb
int
leave
lret
dec
xor
jno
das
lret
jmp
push
sbb
jl
or
fisubrl
sbb
add
sub
lret
int
and
lret
int3
xchg
dec
jl
call
out
ret
add
cli
mov
rcl
jne
cmp
or
or
dec
rcl
jmp
repnz
leave
mov
and
imul
bound
mov
xor
sbb
stos
cmp
shr
aam
lret
lea
xchg
sub
test
lcall
cmc
xchg
in
int
fmull
dec
dec
js
or
popa
iret
fcmovnbe
push
and
sub
pop
inc
adc
ljmp
mov
cwtl
inc
rcrl
xor
dec
negl
notb
pop
xor
lds
rolb
lret
mov
cmp
lret
ja
or
xchg
lret
sbb
jmp
cmp
mov
sub
repnz
lods
rorb
cs
xor
shlb
or
into
aaa
sbb
lret
sbb
inc
lret
fcmovb
dec
adc
mov
fsubrl
shrl
lret
les
mov
subl
lret
popf
fcoml
push
lods
lods
sbb
inc
in
out
enter
shr
arpl
nop
je
add
lock
add
mov
stos
das
add
fcomi
sbb
addr16
push
aaa
lret
insb
mov
lret
sub
jae
aad
lret
stos
in
gs
cmp
shlb
jns
add
lret
fisubrs
les
loope
pop
int3
or
sbbb
dec
jmp
lret
movsb
mov
push
pop
sub
xchg
lret
das
xor
and
rcll
sub
mov
mov
add
push
rcrb
lret
add
cmp
pushf
jmp
rol
stos
sti
adc
ja
cli
fisubl
mov
add
jno
mov
inc
lret
mov
nop
mov
out
loop
xor
rolb
movsb
movsl
push
sub
imul
inc
lret
fnstsw
adc
inc
dec
loopne
icebp
popf
pop
mov
mov
push
fwait
test
int3
bswap
pop
jge
lret
lcall
ja
sub
dec
fildll
dec
xor
out
jnp
loop
mov
fwait
inc
or
pop
pop
out
cmpsl
addr16
sub
mov
jo
test
mov
xchg
aaa
popa
or
movsb
sbb
dec
ret
bswap
mov
imul
hlt
and
xchg
into
cld
or
inc
push
mov
fidivl
add
out
rorb
and
cmc
das
mov
notb
lret
jns
mov
mov
pushf
pinsrw
mov
push
dec
imul
jno
mov
lods
movsb
jmp
in
pop
fmul
lret
pop
lock
stc
adc
dec
push
pop
lcall
scas
dec
mov
mov
aaa
orl
jp
std
jno
lret
mov
jo
loopne
jg
movl
int3
test
aad
lret
insb
call
lret
cwtl
adcl
gs
into
cmpb
lret
out
daa
and
jno
lock
into
or
test
cmp
sarl
inc
lret
jae
popa
jg
add
or
out
lcall
pusha
lret
xchg
push
pop
mov
add
lret
adc
and
xor
push
lret
int
xchg
sub
ss
cmp
mov
fsubs
in
rcrl
scas
insb
cmpsl
movsb
cmp
int
mov
ret
test
pop
outsl
dec
mov
jg
in
js
shl
mov
rcl
or
add
lcall
and
out
fiadds
lret
int
icebp
lret
or
lret
ret
add
mov
insb
shrb
enter
inc
mov
loope
je
sbb
cmp
aas
inc
popf
outsl
pop
into
daa
ficoml
mov
je
fadd
xchg
iret
sbb
aad
stc
mov
push
ret
lret
icebp
xchg
inc
mov
fsubr
ffreep
lock
mov
mov
insl
cli
xlat
dec
push
sahf
cs
mov
pop
sub
pop
scas
shll
in
sbb
out
out
out
cmp
fsubs
jno
lods
dec
mov
jp
fidivs
je
jns
lret
pop
inc
push
pop
or
push
mov
mov
xchg
scas
jge
int
sub
jno
lret
loope
fldlg2
sub
inc
xchg
loop
pushf
cltd
insb
js
push
push
dec
scas
jl
ds
push
mov
fisubrs
std
gs
lahf
pop
sbb
out
movsl
xor
inc
push
lret
pop
pop
stos
push
loopne
lret
jb
or
ja
and
outsb
inc
into
xchg
incb
jo
jae
xlat
cmpsl
in
pusha
lret
jge
outsl
sahf
arpl
pop
imul
lret
cmp
sbb
xor
inc
jnp
scas
push
sub
xchg
jne
fmulp
dec
int3
repz
movsl
pop
jae
or
and
fs
lret
iret
jno
stos
mov
sbb
out
sub
sbb
rorl
mov
xchg
popf
sub
mov
in
push
mov
das
or
inc
pop
imul
jle
cmp
xor
xchg
xchg
mov
or
in
in
cmp
adc
and
lret
lea
xchg
lahf
ror
fidivrl
dec
mov
sarl
adc
aad
and
insb
loop
inc
adc
loope
inc
pushf
xorb
push
jnp
inc
pushl
sub
lret
test
lret
jmp
dec
movb
xchg
pop
push
lret
mov
or
pushf
xchg
and
sbb
inc
out
in
inc
mov
loopne
jg
fiaddl
mov
lret
xor
scas
lock
lret
ds
daa
repz
adc
stos
aam
ljmp
sub
in
xor
xor
mov
int
rcl
lretw
mov
inc
popf
loopne
lret
testb
cmp
out
aas
adc
aad
adc
or
and
insl
test
lahf
xchg
jne
sbb
lret
idiv
sub
pop
faddl
inc
jb
pop
or
mov
fnstcw
and
or
lcall
adc
dec
lret
fistpl
dec
mov
lock
mov
mov
lret
std
in
jmp
adc
fisttps
cltd
in
cmp
fcmove
cld
addb
lret
jmp
mov
mov
fadds
xchg
jnp
andb
xor
and
push
push
fxch
cmp
xchg
and
lret
fwait
add
gs
or
out
ja
fcmovu
mov
xchg
mov
out
shrl
lock
cli
ljmp
into
dec
xor
cmp
sub
or
movsb
or
arpl
pushf
loop
lcall
insb
xchg
lret
pop
adc
stc
cmp
dec
add
lcall
xchg
into
in
mov
adc
xchg
and
test
aaa
mov
popl
jmp
movb
lods
pop
in
adc
mov
cmp
fidivrs
push
adc
mov
shll
lretw
mov
stos
sbb
mov
fiadds
xor
cmc
sub
xchg
or
and
call
mov
mov
sbb
or
rcr
lret
pushf
mov
xor
inc
sbbb
shlb
pop
and
jle
lret
fisubs
aam
inc
fcmove
xchg
mul
mov
lret
dec
shrb
ljmp
fadds
pop
lret
mov
sub
dec
cmpb
mov
xchg
jb
adc
mov
ds
lret
sbb
lret
lods
popf
cld
cmp
mov
pop
fimull
pop
mov
shrl
out
mov
sti
xor
imul
or
shrl
lods
dec
fs
sbb
lret
leave
mov
sub
imul
dec
xor
jo
insl
sbb
je
popf
lret
fisubs
aam
xchg
dec
lret
andb
push
mov
push
xor
sub
inc
sahf
lret
add
test
sbb
jnp
dec
pop
sarb
push
jae
leave
pop
sbb
or
lret
out
sub
mov
cmp
jne
lret
mov
clc
lret
repz
sub
daa
and
xor
mov
pushf
fsubl
cwtl
cmp
ljmp
ss
ds
bound
lret
mov
jmp
lea
pop
lret
loopne
add
das
jle
popf
out
jge
add
jmp
push
add
adc
test
lret
pop
in
enter
cli
push
cltd
sub
cli
jo
lret
dec
sub
roll
lret
hlt
xchg
adc
stos
frstor
inc
lods
ror
fildll
pusha
outsl
mov
pop
aam
call
xor
mov
lods
iret
stos
push
adc
lret
insl
cmp
imul
clc
cli
das
lea
push
fsubrs
dec
faddl
lret
xor
cmp
scas
or
mov
lret
mov
aas
icebp
leave
test
flds
call
ret
shrb
cs
mov
test
pop
mov
mov
jb
jmp
loop
adc
jl
mov
xchg
push
gs
ficompl
sbb
xchg
sbb
push
jecxz
mov
dec
sar
dec
mov
lret
pop
movsb
pop
push
in
jo
repnz
test
adc
fwait
or
cli
adc
repnz
xchg
xchg
ljmp
cs
adc
jecxz
lret
mov
mov
push
dec
stc
movsb
int3
shlb
lods
lret
adc
dec
test
lret
cmpsb
and
jbe
lret
jecxz
out
or
fxch
xchg
adc
inc
inc
lret
stc
cmpsb
push
hlt
sti
xor
mov
xor
lret
push
int3
jg
mov
jl
insb
xor
cmp
ret
push
mov
cmp
xlat
loope
add
outsl
cmp
jge
add
dec
cmp
loop
lret
pop
ja
addr16
cmp
inc
push
test
cmpb
test
pop
stos
loop
jecxz
lret
pop
inc
icebp
pop
out
ret
or
cwtl
lahf
ficompl
cmpsl
enter
xchg
inc
jp
loope
lret
xor
icebp
push
cmpsb
addr16
sub
scas
out
sub
out
push
lret
clc
lea
inc
lret
push
dec
cmpl
push
and
jge
out
mov
inc
or
icebp
rolb
jnp
lret
jmp
mov
sub
flds
stos
pusha
xchg
jo
lods
adc
jp
mov
mov
lret
fnstsw
outsl
adc
scas
adc
mov
mov
xor
sub
and
xor
fildl
xchg
pop
fs
popa
lock
push
and
pop
loop
icebp
jnp
pushf
js
or
jl
lret
movsl
cmp
lret
jae
mov
xor
push
push
pop
push
gs
and
mov
inc
lret
xlat
loope
inc
test
add
jns
aad
lret
mov
roll
je
mov
loop
test
pop
push
push
lret
rorb
mov
cli
push
into
push
push
in
je
lret
aad
nop
jb
mov
addl
test
fisttps
push
or
icebp
and
fwait
nop
sbb
mov
fnstcw
subl
fdivrp
xchg
push
sbbl
sbb
gs
jle
mov
mov
addb
test
mov
rcrb
mov
mov
push
lret
push
or
clc
in
or
loope
inc
inc
out
lret
fistpll
pop
jmp
sub
inc
sbb
fisubl
ss
fcompl
and
shl
faddl
mov
lret
push
mov
jge
stos
push
mov
cltd
rcrb
push
sti
xor
mov
mov
into
imul
add
call
xchg
lcall
ror
mov
push
add
mov
fistpll
xor
lret
xor
arpl
xchg
lret
stos
out
inc
pop
or
push
out
adc
out
cmp
cmpsl
dec
test
loope
and
shl
dec
lret
xor
pop
rolb
adc
into
mov
push
mov
mov
jecxz
in
sti
jge
movsl
xchg
ficoml
fdivrl
pop
and
inc
pop
adc
xlat
mov
int3
cmpsb
loop
mov
dec
jge
mov
pop
pop
sub
imulb
jp
test
adc
subl
aam
inc
xor
enter
imulb
popl
fisubl
leave
movq
lret
add
sub
lods
pop
in
mov
pop
pop
sarl
pusha
aam
shl
scas
out
mov
mov
inc
in
movsb
lret
ljmp
movsl
fwait
mov
lret
popa
mov
cmp
frstor
lret
inc
xlat
insb
out
sarl
in
adc
xchg
ljmp
mov
lret
inc
fiadds
out
dec
loope
jbe
push
test
cltd
lcall
stos
sub
ljmp
into
loopne
mov
call
cli
lret
insb
push
mov
inc
sarl
inc
cmpsb
xor
xchg
movsb
jmp
addr16
popa
call
mov
adc
stos
or
aas
lret
push
push
outsl
sbb
lret
pushf
xchg
pop
dec
cmp
add
xchg
incl
mov
inc
sbb
and
xchg
or
xchg
outsb
sti
mov
jle
ljmp
in
pushf
dec
sbb
subb
mov
mov
dec
lret
fcomps
jl
xchg
ficompl
or
pop
adc
mov
mov
xchg
shlb
or
ror
mov
sbb
andl
lret
pushf
and
jnp
push
lret
ret
mov
filds
adc
shll
jb
xchg
mov
fdivs
xor
push
xchg
cmp
dec
add
sub
movsl
stc
in
mov
mov
and
xor
inc
cltd
aad
pop
rclb
fcom
pop
sub
shlb
cltd
inc
push
fcomp
mov
jecxz
add
loope
mov
aam
push
inc
stos
and
inc
add
jne
jle
dec
jle
xchg
lret
inc
aaa
ja
cmp
jmp
rolb
add
cwtl
lea
scas
lret
xor
inc
xchg
jle
lret
jmp
mov
shlb
mov
sub
or
dec
pop
xor
and
push
fdivrs
fwait
cld
push
cmpsl
xchg
pop
and
inc
mov
enter
lods
aam
xor
dec
mov
lret
ds
lret
sub
push
inc
js
lret
add
aaa
cmp
mov
rorb
ret
mov
lea
lds
mov
xchg
flds
push
push
xor
repnz
stc
push
cmpsb
inc
dec
dec
lret
xchg
pop
aas
outsl
mov
cli
scas
in
cmp
mov
push
jge
or
sbb
xchg
xchg
adc
icebp
sbb
push
adc
mov
loope
lret
scas
xchg
inc
sti
call
rclb
repz
jae
into
lret
dec
xchg
cmc
lret
xor
sbb
inc
clc
push
in
jmp
inc
mov
imul
mov
lret
out
repz
jle
or
dec
fidivl
jge
addr16
sub
pushf
lret
fsubrs
lret
bound
fcoms
jne
int3
out
outsl
shlb
hlt
mov
fcomip
fsubrl
fcoms
lret
aad
out
mov
out
or
movsl
mov
xor
jecxz
push
mov
push
outsl
lret
cmp
data16
aam
push
push
xchg
lahf
lret
cmp
int3
rorl
lret
ror
xor
push
xchg
negl
xlat
test
mov
les
fnstcw
pop
pop
test
fucom
leave
ret
push
xchg
popf
in
inc
mov
lret
jb
je
in
nop
lret
les
dec
rcr
in
mulb
push
fldcw
fsubp
cli
jp
add
decb
jno
add
rorb
lret
lods
ret
lods
cmc
xlat
and
mov
fwait
notb
pop
cli
inc
jecxz
or
push
xlat
mov
xchg
mov
and
jbe
lret
popf
push
push
sti
push
mov
pop
and
hlt
cmpsb
lea
inc
lods
test
out
imull
leave
sahf
add
cli
jp
and
xor
or
sbb
sbb
test
sub
andl
out
bound
xchg
btc
push
call
sbb
aas
cmpsl
cmpsb
cmp
int
or
inc
cmp
test
jo
add
lods
shrl
fnstenv
or
int
and
cmp
enter
je
push
lret
and
add
ljmp
fdivs
lret
test
jne
fcmove
pop
add
lret
push
or
sub
lret
push
in
pop
lds
std
sub
mov
dec
and
fldcw
sbbl
arpl
mov
ret
dec
sbb
jne
cmc
pop
repz
mov
fsubs
jne
call
xor
into
imul
mov
insb
or
loope
lret
pop
mov
lret
pop
inc
nop
xor
lret
jecxz
mov
fldcw
popa
lret
cltd
mov
into
cmp
sbb
mov
orl
mov
lret
shlb
jae
cmpsl
lret
pop
stos
fisubs
loopne
lret
mov
mov
or
imul
mov
lret
lahf
in
lods
cwtl
loop
ror
popa
cld
and
loopne
aas
pop
data16
ss
imul
lret
das
stos
inc
ljmp
mov
pop
scas
aas
lret
mov
push
xchg
lods
xor
and
or
hlt
lret
mov
and
ja
fld
jnp
xchg
shll
daa
test
test
mov
xchg
iret
adc
out
mov
rcr
ret
jle
ljmp
lret
mov
fmulp
test
push
ret
mov
shr
fiaddl
loope
push
jmp
sub
or
cmp
pop
iret
scas
dec
insl
in
lret
iret
loope
sbb
lret
jbe
aad
test
lret
xor
cli
outsl
lret
add
loope
lods
lret
xchg
add
daa
mov
lret
jbe
push
test
inc
xchg
lret
cli
jle
sbb
mov
xchg
out
sti
jge
and
sbb
icebp
imul
and
push
cmp
cld
mov
lret
cmp
sbbl
shrb
inc
pop
mul
bswap
xchg
xor
insb
dec
das
lods
cli
lret
jle
jns
and
repnz
das
xchg
subl
adc
insb
and
mov
es
pop
sub
xor
fiaddl
shr
adc
pop
cltd
and
sbb
dec
adc
fmuls
cmpsb
shll
push
push
sub
aaa
mov
pop
push
lret
mov
out
mov
inc
push
scas
and
jno
fimull
cmp
fcmovne
aas
dec
pop
std
and
mov
cmc
ficomps
outsl
dec
ljmp
nop
jge
jbe
xchg
sbb
pop
mov
ret
push
rcrl
sub
mov
xchg
dec
call
xchg
daa
enter
jne
fs
xchg
loopne
leave
mov
jp
sarl
lea
inc
cmp
daa
js
push
int
das
jae
lret
adc
xchg
test
xor
aas
data16
das
xor
mov
lret
loopne
jmp
lret
insb
cmp
adc
fsts
into
xchg
ror
inc
fadds
dec
jmp
sbb
lret
mov
mov
lret
push
lea
or
ljmp
sti
lock
sub
lret
add
bound
mov
in
cmp
lahf
push
fmul
xor
and
fmul
stos
idivl
in
outsb
inc
lret
cwtl
jecxz
mov
andl
rclb
data16
pop
push
mov
sarb
sub
push
ret
pushf
inc
fsubrs
cmpsl
lahf
incl
mov
mov
inc
lret
cltd
lds
ret
dec
mov
lret
ja
loope
cmp
sbb
dec
xchg
pusha
fmul
or
int
test
and
mov
jne
add
inc
lock
jge
xor
leave
lret
popa
and
sbb
add
xchg
push
inc
jmp
or
out
sbb
adc
xor
mov
fcompl
lret
inc
sub
gs
xchg
pushf
jns
xlat
xchg
lret
dec
dec
stc
fstl
lret
jae
xchg
push
nop
lret
fwait
cmp
or
mov
sahf
arpl
lret
push
scas
aaa
insb
push
aam
lock
push
push
je
mov
or
in
jno
lret
mov
or
lret
jl
lret
orb
ljmp
imul
out
in
jp
sbb
or
jmp
dec
mov
rol
add
mov
add
and
enter
std
mov
sub
mov
lret
cmp
std
les
call
add
fs
xchg
idiv
dec
fnstsw
lret
dec
pop
dec
mov
leave
lret
mov
mov
xchg
add
sub
fcoms
inc
cwtl
aas
jb
jp
in
fstps
cltd
dec
test
jmp
mov
xchg
add
lret
fucom
data16
cmc
stos
inc
or
int3
jno
add
cmp
xchg
inc
pop
xlat
xor
sub
loope
or
lret
and
lds
notb
enter
mov
push
or
popa
sahf
jl
inc
cmp
out
mov
xchg
ljmp
adc
pop
xchg
iret
fidivrl
xchg
adc
in
test
inc
rcrl
dec
cmp
in
lret
inc
dec
xchg
cmpsl
lret
loop
sub
ljmp
adc
cmp
inc
fsubrl
lahf
cmovle
imul
fsubr
lret
pushf
mov
push
pop
out
xchg
imul
clc
lret
add
insb
outsl
andl
clc
fwait
push
jle
filds
cltd
xchg
mov
icebp
mov
mov
add
lret
roll
dec
lods
sub
jp
data16
nop
fistl
sbb
insb
lcall
movsb
cmpsl
stos
pusha
and
push
shrb
fimuls
scas
shlb
cwtl
dec
cmp
fwait
adc
cld
outsb
jmp
popa
daa
pop
lret
cltd
push
bnd
ret
push
sarb
pop
stos
jbe
dec
sti
icebp
call
sbb
cwtl
out
lret
or
xor
push
das
lret
xor
out
cli
imull
push
aaa
pop
xchg
mov
in
lret
dec
stos
inc
popl
sar
mov
flds
sub
xchg
popa
mov
rcr
mov
loopne
and
lret
in
in
inc
dec
cwtl
pop
lret
lock
mov
add
xchg
and
xor
mov
lret
push
add
jb
cmp
xor
imul
arpl
dec
ror
add
jae
inc
xchg
pop
dec
inc
cmp
es
or
lret
ljmp
mov
cmp
shrl
out
stc
pop
mov
mov
pop
roll
in
mov
inc
imul
es
scas
jl
mov
pop
imul
iret
xor
movsb
lretw
dec
test
jg
xor
jmp
lods
pop
cmp
scas
add
out
out
ds
mov
or
add
mov
gs
aas
js
lret
lock
lds
lret
fiaddl
cli
cmc
sub
xor
mov
dec
dec
jg
mov
sub
xchg
aad
lret
push
cmp
adc
test
rclb
int3
fnstcw
cmp
cmp
lea
mov
lret
adc
bound
push
jmp
aas
xchg
xor
fwait
cwtl
sahf
int3
lret
inc
fs
ret
ret
push
mov
lcall
sbb
lret
dec
jecxz
test
aaa
out
jbe
sbb
dec
push
sbb
push
pop
rcr
aam
fistpll
leave
addl
lret
cs
or
mov
insb
adc
jnp
lcall
in
das
inc
loop
js
jno
and
or
rclb
pop
mov
mov
jo
stos
xchg
mov
loope
push
and
sbb
popf
shr
push
and
dec
sahf
rorl
cli
adc
push
idivb
dec
xor
inc
mov
or
xchg
mov
pop
lret
cmp
adc
cmp
lret
aad
push
inc
daa
test
jne
and
mov
or
in
frstor
stos
lret
in
negl
or
push
fisubrs
les
sbb
dec
fsubs
sti
sti
jo
lret
pop
push
cltd
jl
add
cmpsl
sarl
lret
test
or
rclb
pusha
cmpsb
das
ljmp
fwait
jmp
nop
lret
fstpl
lret
cld
stos
call
rcrb
bound
inc
shrb
dec
pop
lret
xchg
cmp
lret
inc
cltd
sub
icebp
jae
cmp
and
pop
cmp
pop
xor
stos
fcmovne
inc
push
sub
outsb
dec
cmp
cmpsb
pop
mov
lret
dec
dec
outsl
xchg
jo
lret
cmp
arpl
dec
lret
mov
push
aam
aas
out
push
cmp
mov
sub
loope
mov
ljmp
das
mov
fdivl
cmp
pop
jo
lret
pop
int3
push
sbb
jnp
cmp
jge
clc
lret
mov
pop
rolb
hlt
inc
or
push
pop
mov
add
dec
or
adc
addr16
xchg
and
dec
je
sub
dec
inc
dec
lret
push
cmp
add
int
rorb
pop
xor
jmp
pop
cmp
scas
popa
dec
lret
or
adc
dec
push
enter
jecxz
stos
jmp
rcll
int
fidivrl
lea
lret
mov
jae
jl
aam
jbe
mov
aaa
mov
int3
in
xchg
lret
fldcw
xor
mov
cltd
xor
sbb
mov
rorb
add
cli
mov
mov
cmpsb
cmc
dec
lret
neg
clc
or
int
sti
sub
jmp
jbe
jb
adc
push
jno
lret
enter
or
ficompl
xchg
jle
push
cmp
inc
imul
in
adc
sub
clc
cli
xchg
imul
adc
dec
push
mov
aam
pop
or
lret
and
jmp
sbb
xor
lret
fldenv
ss
into
lret
lods
push
lret
lds
lret
mov
pop
inc
cli
imul
lock
mov
push
ljmp
stos
xor
insb
jbe
verw
lret
nop
cmpl
sbb
clc
xchg
sbb
xchg
ss
aad
cli
push
mov
sar
pop
and
xchg
jbe
add
lcall
into
push
je
js
and
mov
test
out
lret
push
daa
fisubrl
rolb
pop
fs
inc
cmc
lret
movsb
push
mov
xchg
push
nop
mov
out
push
sub
test
in
aam
or
les
lret
add
adc
repnz
outsl
sbb
sti
insb
mov
je
adc
and
fs
push
rclb
ss
adcl
int
or
test
dec
sub
jge
shll
lret
in
dec
fisubl
lret
cmp
fcomps
pop
lret
push
shrd
lret
jp
add
sbb
jle
stos
dec
shrl
ret
mov
popf
loop
sarb
cmpl
jae
leave
add
inc
cmpsl
pop
and
hlt
dec
aam
or
out
xchg
mov
and
adc
lea
inc
fdivrl
pop
arpl
out
sbb
shlb
adc
lret
lods
xchg
dec
mov
test
mov
mov
outsl
popf
clc
lret
shrb
and
pop
adc
lea
ja
cmp
add
lahf
fisttpl
push
test
fcoms
inc
cmp
adc
sahf
cmp
lea
fadds
xlat
cmp
push
mov
out
out
pusha
lret
mov
jbe
aaa
ljmp
and
pop
or
out
xchg
js
imul
and
in
lret
xchg
mov
add
fcmove
mov
jo
push
sahf
mov
test
lret
in
sbb
pushf
adc
rcrb
jne
call
iret
push
push
lret
xor
arpl
sbb
lret
fists
orl
ret
lds
inc
pop
mov
adc
pop
adc
sti
hlt
lret
mov
sbb
xchg
xor
mov
mov
mov
pop
fcmovnbe
rcl
sbb
call
push
lret
insb
popf
in
std
inc
cmp
cmp
fidivl
lret
insb
mov
insl
cli
mov
flds
pop
push
lret
mov
arpl
icebp
jno
outsl
fcmove
imul
lret
sub
orb
push
fcmovbe
lea
and
push
lret
push
cltd
mov
cmc
ret
cmpl
cwtl
cli
xorb
repz
push
addr16
out
out
int
cli
ss
inc
inc
aad
lret
or
jp
sub
xor
sub
in
inc
out
mov
mov
jns
ja
testl
mov
cmp
dec
popa
add
inc
and
repz
push
movsb
jo
cmpsb
fwait
jnp
ja
push
clc
pop
mov
into
lods
mov
out
int3
pop
pop
jnp
mov
dec
imulb
rolb
hlt
fdivs
out
lock
lds
or
insb
dec
stc
std
cmp
lret
or
daa
lea
lret
and
and
sbb
mov
call
lahf
into
lret
sahf
or
cmc
xchg
js
cs
out
mov
insl
call
lret
imul
pop
mov
dec
pusha
push
lret
lods
cmp
pop
call
iret
test
and
das
or
mov
fcoml
adc
cmp
test
push
pop
mov
and
repnz
sub
icebp
cmc
aad
nop
out
scas
jp
aaa
das
cmp
mov
jns
adc
fmull
sti
clc
and
lock
sub
pop
cmp
roll
dec
lret
subl
in
rcrb
and
cmp
cmpsb
jle
std
cli
xor
lret
fcoml
fisubrl
test
rorb
outsb
enter
outsl
and
mov
imul
loop
cmp
ljmp
icebp
arpl
xchg
into
xchg
and
scas
test
aaa
outsb
jne
fiaddl
stos
jae
pop
into
mov
lret
pop
sbb
pop
insl
dec
ljmp
into
ljmp
shlb
mov
fnsave
arpl
or
sbb
je
push
jmp
mov
push
mov
loopne
lret
repz
scas
inc
jbe
dec
fcomps
aas
cli
lret
or
pop
pop
jecxz
mov
dec
and
lret
mov
mov
add
inc
cwtl
or
enter
xchg
pop
in
cmpsb
xchg
lds
insl
xchg
mov
in
pop
push
aam
sbb
cmp
push
jmp
cmp
mov
sub
add
or
push
cld
push
inc
fcmovne
and
cmp
ror
hlt
or
push
add
mov
lret
pusha
push
popa
imul
cmp
xlat
sub
lret
cmp
and
fimuls
adc
fucom
imul
cmp
aaa
fistps
add
adc
shlb
pop
adc
icebp
jns
rorb
cwtl
shlb
mov
adc
roll
stos
sar
clc
ds
push
add
lret
xchg
adc
cmp
dec
jne
pushf
xor
mov
shrb
lret
test
movsl
leave
cmp
test
and
lret
cmp
or
or
les
push
cli
push
sti
push
jbe
xchg
lret
int3
test
mov
mov
add
xchg
mov
sbb
data16
subl
test
in
jle
push
mov
or
xchg
mov
xchg
idivl
aas
insb
cmp
iret
cli
sbb
fwait
sbb
dec
lret
lret
sub
lret
sbb
dec
mov
and
jle
pop
sub
push
fs
shlb
int3
xchg
lret
push
jge
and
popf
lock
or
xchg
pop
mov
push
lret
data16
and
pop
jmp
mov
add
imul
lcall
lret
ss
add
and
pop
and
aam
push
xchg
xchg
jne
test
fwait
lods
mov
lret
stc
out
pop
mov
push
adcl
sbb
dec
xchg
push
dec
and
ficompl
shlb
mov
add
dec
fdivl
dec
push
ljmp
outsl
pusha
sbb
push
sub
push
popl
lret
arpl
pop
roll
faddl
xor
push
in
push
mov
cmp
scas
sub
add
loop
add
jne
stos
js
lret
cs
sbb
je,pt
and
pop
mov
lret
mov
cmp
rorb
cli
inc
xchg
stc
xor
fisttpll
loopne
jecxz
mov
add
icebp
lret
movsb
repz
sub
adcb
lock
out
and
pop
fidivrs
sub
jmp
push
cmp
into
cmp
or
sub
push
and
lret
pop
or
ret
insb
pop
ja
popf
aam
and
cmp
mov
int
or
jnp
jno
dec
jle
xchg
mov
lret
cld
fninit
dec
sub
mov
or
adc
out
lds
je
int
movsl
and
jecxz
lcall
mov
int
jge
test
int3
lahf
pop
popa
aam
fistl
cmp
sbb
out
xchg
iret
mov
push
xor
inc
fincstp
lahf
out
fidivl
lret
xchg
mov
push
sbbl
xchg
fwait
imul
lret
push
jns
inc
jne
cli
loope
pop
pop
cmp
fcomp
andl
xchg
sub
jmp
loop
mov
or
lret
inc
add
lret
inc
in
mov
jns
and
test
inc
lret
lahf
movsl
cmp
test
orl
incl
in
pop
popf
popa
mov
dec
xorb
shrb
xor
js
lret
add
inc
sub
xchg
pop
xchg
xchg
ror
jg
mov
pop
mov
dec
adc
stos
lret
repnz
sbb
fidivl
jno
fsts
jb
jae
xchg
lret
test
jp
add
lret
mov
cmp
imul
cmp
sahf
add
fisttpll
lcall
adc
fwait
ror
pop
outsb
and
hlt
ja
mov
dec
ret
fimull
in
sub
dec
aaa
lret
sub
jno
in
lret
in
out
inc
lock
sti
lret
adc
mov
jns
arpl
mov
movsb
lret
loope
loop
iret
lret
push
or
mov
dec
push
fistl
push
mov
aas
fcom
push
pop
push
and
xchg
ds
cli
into
mov
sbb
mov
in
mov
aas
ljmp
loopne
mov
jae
pop
dec
movsl
movsb
adc
dec
cmp
lret
cmpsl
add
mov
or
xor
jae
lret
leave
adc
rcrl
mov
adc
inc
enter
mov
inc
pushl
mov
lret
xor
scas
cmp
lret
xor
jmp
adc
xor
clc
rclb
lret
or
aas
xchg
add
lret
mov
out
mov
xchg
dec
icebp
or
aas
lea
push
mov
cmpsl
cmpsb
int
mov
mov
cli
xchg
adc
pop
mov
xor
mov
pop
or
lret
or
je
lret
fsubrs
fwait
scas
xor
pop
into
aaa
pusha
add
jno
pop
lret
cmpsl
inc
or
fisubrl
out
inc
mov
popf
push
mov
lock
in
xchg
mov
insl
add
test
mov
dec
rorb
lret
mov
sbb
std
pushf
int3
lret
xrelease
fistpl
ret
loop
push
enter
out
push
imul
and
cmp
jg
lret
push
jecxz
sbbl
lcall
fidivrl
mov
cli
push
in
cwtd
pop
cmp
mov
xchg
dec
lret
fistl
cltd
jbe
mov
mov
or
dec
enter
push
xchg
lret
aam
loopne
lret
mov
add
lret
cmc
cmpsb
and
xor
and
dec
mov
test
pop
shll
xchg
xchg
movsb
mov
add
sbb
fwait
shll
pop
lret
xor
jp
add
lret
mov
sbb
test
lret
dec
mov
xchg
scas
mov
testb
xchg
lret
shrl
pusha
das
jne
call
adc
lret
arpl
lret
aad
jns
popa
cld
stos
aaa
inc
and
cmpb
lret
test
mov
mov
and
rolb
adc
fnstcw
scas
lret
xor
xlat
xor
lret
adcl
pushf
ja
push
mov
or
popf
fs
repnz
push
insl
pop
data16
push
sti
mov
xor
rcr
cmp
inc
cmpsl
sbb
inc
mov
sbb
jno
shr
int3
loop
lret
in
push
iret
xor
fidivl
or
pushf
adc
mov
adc
int3
test
pop
inc
ret
daa
int
sarl
movb
aam
xor
sbbl
clc
mov
fbstp
jmp
ja
mov
shrb
insl
adc
sarl
out
inc
lret
nop
popf
inc
adc
add
or
int3
mov
out
lret
jns
adc
jmp
mov
lahf
lret
push
mov
fldenv
arpl
mov
mov
into
repz
mov
lret
in
sbb
ljmp
jmp
adc
push
inc
lret
testb
mov
xchg
dec
sub
sub
cltd
adc
jae
pop
xor
mov
inc
loop
inc
dec
rcrl
outsb
lret
pop
ds
call
movsb
pop
adc
lret
popa
xchg
insb
sbb
xchg
push
or
into
cmpsb
test
push
leave
push
dec
or
add
lret
dec
mov
test
lret
movaps
cmp
popf
fldt
mov
arpl
int3
jg
pop
lret
push
inc
mov
add
cmp
adc
and
jg
loope
jecxz
lret
loopne
in
push
bound
mov
inc
xchg
icebp
lock
imul
inc
mov
push
imul
pop
cmc
mov
ret
ret
fdivs
push
or
add
lret
fprem1
mov
std
faddp
subl
bswap
imul
enter
mov
jnp
out
pop
lret
clc
mov
hlt
cmp
lret
ds
inc
push
js
adcl
sbb
pop
pusha
adc
daa
test
mov
jl
lods
inc
xor
sbb
pop
aas
mov
cli
pop
cmp
lods
push
lret
pop
pop
daa
ret
adc
mov
loop
push
aam
xor
or
cwtl
sbb
cmp
pop
lret
xchg
popf
divl
in
fwait
out
out
rolb
mov
xchg
pop
and
test
addr16
enter
or
arpl
and
dec
dec
dec
lods
idivl
repz
loope
lds
gs
into
dec
repz
add
lret
push
or
sub
cs
addr16
cli
sbb
rorl
xchg
roll
lret
xchg
jecxz
stos
fisubrl
xchg
add
pushl
repnz
insb
int
jg
pop
lret
cwtl
repz
fsts
or
pop
adc
imul
movsl
xchg
sbb
xor
and
ds
dec
add
cmp
into
push
flds
lahf
cmc
les
cmp
jmp
sub
lret
pop
cmp
sub
das
push
movsl
mov
stos
and
sub
lret
push
and
lret
div
jl
popf
and
loope
cmpsl
add
xor
or
mov
aad
push
notb
insb
cmpsb
lahf
addb
add
cld
jge
push
cmp
cmp
pop
aam
addr16
jns
jnp
push
mov
inc
mov
sahf
mov
fcmove
pusha
sub
movsl
lret
xchg
stc
mov
xor
ret
dec
pop
xchg
or
lret
popfw
cwtl
scas
cld
jp
jbe
xchg
ret
in
xchg
lcall
rcl
shlb
jbe
lret
imul
dec
pop
ja
lods
stos
mov
fbld
sbb
int3
mov
sbb
mov
shl
test
imul
in
sub
or
xor
lret
lea
fstps
jecxz
pop
ret
lret
adc
sbb
xchg
fidivrl
bound
sub
ja
cltd
jns
lret
push
clc
and
lret
jg
bnd
int3
lret
sbb
in
xchg
dec
fdivs
and
int3
arpl
lods
cmp
shl
aaa
xor
xor
subb
gs
sub
int
pusha
lret
mov
mov
int3
pop
rcll
cmp
lret
aaa
cltd
std
gs
or
xor
push
pop
jmp
bound
out
es
hlt
add
dec
mov
rolb
imul
cmp
sbb
push
fs
lcall
pushf
lea
mov
mov
xchg
sub
lret
stc
cmp
cmp
daa
out
gs
mov
lret
and
roll
testb
js
bound
sbb
mov
cltd
fnstcw
mov
aam
push
mov
outsl
adc
decb
adc
sub
aam
dec
lret
shrb
cmp
out
xchg
pop
ret
sbb
xchg
jnp
lret
mov
and
mov
push
fistpl
xchg
stc
sub
xor
stos
pop
mov
lret
adc
sub
fnstsw
insl
aad
mov
push
pop
xchg
mov
or
movsl
mulb
jo
mov
imul
outsb
mov
into
inc
clc
xorb
and
jmp
mov
add
jp
or
ret
fbld
cmp
cltd
mov
jmp
lock
or
and
loopne
mov
mov
test
dec
sbb
fadds
jnp
pop
adc
jle
sub
movups
lret
pop
sub
hlt
ljmp
rclb
and
mov
shrl
into
sahf
ljmp
loopne
jno
xor
fimull
mov
ljmp
pushf
mov
jno
xor
ds
movsl
dec
loopne
mov
aad
ficomps
fdivl
cs
mov
mov
stos
popf
rorl
cwtl
mov
loop
lret
ret
pop
test
and
add
lock
and
lret
cmc
cwtl
push
popa
adc
arpl
push
or
fsubs
add
movsb
lods
xchg
lret
mov
jle
inc
or
jp
rcrb
mov
in
stos
iret
mov
lods
mov
push
add
aad
sarb
lret
mov
ss
nop
push
mov
sarb
push
pop
sub
shr
lret
ds
rcrb
cmp
aam
in
dec
xor
test
sbb
lret
and
push
sbb
mov
mov
lret
into
mov
cwtl
adc
sbb
xor
iret
dec
out
lret
push
repnz
les
cwtl
movsb
ljmp
lahf
lret
icebp
dec
das
fimull
ror
xlat
popf
popa
ficoml
adcl
into
lret
test
cs
xor
imul
jg
push
in
lret
sbb
faddl
jecxz
shrb
out
push
jns
mov
in
mov
inc
jp
bound
jmp
inc
push
lret
jge
aam
stos
pop
lret
pop
popa
push
and
lods
push
ror
imul
int
mov
or
iret
push
fldt
or
pushf
pop
mov
xchg
xchg
mov
test
xlat
adc
das
xor
xchg
fwait
cmc
add
mov
shlb
into
add
fdivrs
lret
test
ror
adc
jbe
testl
dec
mov
cmp
mov
push
push
ror
push
in
mov
adc
mov
leave
adc
ficoml
bound
pop
pop
and
sbb
add
mov
inc
fists
cmpb
lret
adc
ds
ret
xchg
ficompl
or
mov
lods
daa
pop
and
inc
inc
push
inc
fimull
fwait
or
mov
xor
lret
xor
shr
mov
inc
andb
mov
lock
or
movsb
rcl
pop
lret
clc
push
lret
test
inc
fwait
dec
cmc
and
dec
add
lret
clc
cmp
rorl
sub
es
ret
fstps
test
mov
push
push
lods
mov
sub
jmp
mov
add
or
mov
add
sub
pop
movsb
jge
mov
iret
jbe
hlt
adc
xor
pop
icebp
out
fcoml
lret
lcall
insb
xor
inc
lret
int3
sbb
jno
scas
inc
xchg
ret
aaa
lret
lcall
div
addr16
pop
imul
inc
cmp
adc
push
cmp
mov
and
pop
lret
xchg
ds
outsl
xchg
push
ficompl
int3
push
divb
cltd
rclb
pop
lret
arpl
pop
andl
lret
cmp
test
push
inc
test
rcrb
lods
xlat
mov
xor
adc
adc
lret
dec
clc
cmpsl
sbb
lret
rcrb
jae
mov
das
test
lret
aaa
jge
adc
inc
jmp
push
int3
loop
and
xchg
lcall
cli
pusha
xchg
sti
movsb
les
lret
cwtl
rorb
hlt
ret
lret
xchg
icebp
aas
out
inc
out
stos
cmc
xlat
sbb
vrsqrtss
add
clc
or
pop
repz
imul
mov
add
and
nop
pop
mov
dec
mov
mov
js
mov
aas
aad
lcall
ret
fisubs
mov
lret
pop
dec
test
pop
jb
jno
leave
lret
inc
mov
lret
fwait
push
push
xchg
clc
add
fs
or
xor
dec
enter
inc
mov
into
or
push
pushf
insl
lret
xlat
aas
dec
dec
adc
lret
push
mov
sbb
out
lea
lret
leave
daa
jg
in
imul
shl
ret
out
mov
mov
idivb
mov
mov
cwtl
push
push
lret
sbb
lods
inc
jo
lret
xor
or
mov
cmp
or
jb
lret
test
pop
cmp
aam
mov
cltd
mov
xchg
push
jg
clc
stos
add
cmpsb
into
inc
lcall
inc
cs
or
xchg
cli
lret
xchg
fisttpll
pop
cmp
push
and
stos
pcmpgtd
pop
sarb
jo
xor
lods
inc
or
into
fisubrl
mov
sub
xlat
inc
dec
jns
lret
mov
jl
cmpsb
loopne
lds
scas
mov
dec
cmp
xchg
sbb
iret
cmp
leave
lret
or
mov
push
out
add
cmc
mov
fnstcw
loop
dec
leave
pop
clc
xor
scas
stos
rcll
sahf
inc
inc
movsb
lret
ret
push
lret
minps
and
movsl
lret
test
dec
dec
cmp
lea
rclb
pop
mov
push
imulb
mov
jo
sub
gs
arpl
movsl
inc
mov
lret
xchg
lret
push
mov
inc
movsb
into
popf
xchg
scas
mov
dec
into
mov
and
leave
and
loop
notb
push
xchg
int3
cli
stos
lods
icebp
mull
push
das
aam
lret
fidivrs
xor
out
inc
fdivrl
hlt
xor
lret
mov
or
outsb
jp
cltd
cs
lret
sbb
movsb
lret
xchg
mov
lods
push
hlt
cmp
dec
sarl
lret
in
loop
pop
and
imul
xchg
inc
pop
xor
jg
sub
xchg
mov
into
adc
inc
dec
sarb
pop
or
fwait
cmp
push
sub
sarb
out
cmp
push
stos
dec
lret
adc
xor
ljmp
inc
into
jne
hlt
jo
cmpl
lret
adc
inc
xchg
lock
lret
or
inc
cld
cmp
addb
push
leave
in
rorb
mov
dec
ret
jo
push
imulb
inc
rcr
dec
lret
or
dec
mov
stos
dec
ss
outsl
lret
add
test
push
fmull
lahf
lcall
test
insb
sbb
mov
in
insl
xor
add
mov
incb
daa
in
movsl
stos
mov
adc
xchg
test
or
mov
add
out
cli
jl
addr16
inc
pop
lret
jp
shll
jo
lret
int3
pop
mov
cltd
or
sbb
lret
pop
add
mov
lret
iret
jns
xchg
adc
cli
daa
adc
sub
lret
setno
jno
mov
cmpsb
lret
aam
outsl
jecxz
mov
sbb
lods
into
adc
lret
out
mov
sub
xchg
jo
shlb
fcomp
jge
xor
mov
mov
mov
push
test
push
adc
rcrl
xchg
push
mov
xchg
lret
cmp
call
sbb
pusha
int3
pop
cwtl
fcmovu
mov
mov
dec
push
lret
rclb
inc
cmp
mov
sbb
bound
in
xchg
mov
in
mov
out
and
mov
loopne
mov
push
mov
lret
inc
pop
push
roll
sbb
lret
jb
scas
jbe
adc
cmpb
jno
pop
inc
mov
lret
mov
cmp
movsb
loop
jbe
jae
je
xor
lcall
lret
jne
mov
mov
mov
leave
mov
js
fimull
lcall
fs
and
mov
cmp
push
es
sarb
inc
daa
out
gs
stos
lret
xchg
xchg
leave
pop
into
movsb
lret
jnp
xchg
mov
cmp
test
push
or
jns
es
push
ljmp
loop
fsubrl
shlb
aam
in
mov
enter
test
cmp
mov
insb
and
dec
bsf
jl
add
xchg
cmpsb
mov
inc
ret
mov
pop
inc
jae
inc
lret
imul
xchg
add
mov
mov
in
mov
lret
out
loopne
cld
daa
aam
test
cmpsl
add
and
shlb
mov
cmp
lods
xchg
xchg
lret
jecxz
jmp
and
ja
jae
inc
into
popf
cmpsl
stos
lods
std
or
cmp
cmp
push
mov
pushf
push
add
lret
xchg
mov
lret
in
shl
aaa
push
lret
pop
ja
push
or
shrl
lret
cmpsb
or
lret
shrl
lret
cmp
stc
add
cmp
in
mov
fmuls
cli
and
jne
cmp
aam
push
js
and
mov
sbb
sbb
test
push
shrb
ss
cmp
and
xlat
out
lret
pop
lret
xor
int3
mov
lret
jge
rorl
cmp
leave
push
xor
and
test
lahf
out
sub
xchg
adc
mov
movsl
inc
je
adc
push
mov
mov
jb
push
xchg
lret
ret
xlat
pop
subl
and
or
dec
loop
lret
xor
loopne
test
xor
lret
mov
lret
cwtl
pop
add
xchg
xor
scas
into
sti
sbb
lret
rcr
push
insl
sarl
mov
shrb
inc
xor
sub
out
stos
sbb
dec
jge
fimuls
mov
shlb
les
inc
xchg
stos
lock
mov
mov
ss
fucomip
jg
push
shll
fisubl
lods
scas
fdivl
sub
xchg
enter
lret
add
sub
les
and
push
adc
jp
inc
push
or
ficompl
mov
data16
dec
subb
mov
dec
push
in
les
mov
jge
xchg
lret
fs
mov
mov
xor
nop
jle
sub
clc
xchg
lret
push
dec
les
popl
imul
xor
ljmp
ds
movsl
mov
adc
js
jb
pop
ror
les
sub
dec
mov
sarb
cmp
jae
inc
lret
add
cltd
mov
lods
enter
pusha
cli
lock
lret
fcmovnb
test
psrlw
jp
cmp
xlat
push
xor
lret
dec
cwtl
icebp
cmp
or
imul
lret
sti
inc
dec
cld
stos
pop
lret
push
incb
ficoms
and
ljmp
inc
cmp
rcl
mov
pop
outsb
int3
mov
cmp
sbb
int
lcall
mov
mov
lret
arpl
call
xor
push
cmp
sbb
or
das
pop
shlb
sub
cltd
test
lret
and
lret
daa
rcrb
pop
aaa
icebp
cltd
add
lret
aam
adc
shrb
inc
sbb
and
stos
xchg
add
insb
cld
notl
test
das
xor
push
cmpsb
mov
int
lret
mov
pop
jge
cmp
lret
subl
iret
push
mov
push
sub
push
lret
sti
pop
les
jo
dec
sub
jmp
jnp
je
lret
lcall
clc
dec
xor
sbbl
enter
jle
lret
inc
and
lea
or
repnz
adc
mov
fwait
jge
adc
in
test
je
pop
jno
or
pop
sub
loop
lret
mov
loope
lret
das
adc
mov
pop
jmp
xchg
lahf
add
mov
int3
out
xor
or
out
add
mov
imul
xchg
fcmovne
jecxz
mov
ret
mov
movsl
jne
mov
lds
fcoms
lret
pop
aad
movsb
loope
lret
lcall
jne
shrl
adcb
push
adc
stos
dec
xchg
jno
lret
aad
mov
repz
push
adc
jle
out
jbe
mov
icebp
inc
cmpsb
mov
jg
push
xchg
xor
lods
sbb
inc
aam
shll
adc
fs
add
pushf
and
and
cmp
imul
xchg
pop
dec
mov
inc
out
stos
cwtl
leave
into
sbb
push
lret
pop
stc
xlat
lret
ljmp
push
pop
shr
pop
push
scas
int3
jmp
hlt
adc
and
lods
xchg
insl
or
mov
data16
lret
mov
int3
hlt
push
mov
addr16
cld
mov
add
repnz
lret
enter
roll
sbb
sub
cmpl
fwait
dec
out
push
mov
fwait
aad
inc
add
addb
mov
pop
into
add
rcll
or
stc
mov
cmp
movsb
dec
cmp
insl
or
inc
dec
mov
inc
jne
xchg
jl
pusha
nop
push
std
cwtl
fstps
stos
stos
sahf
repz
and
adc
test
push
lret
mov
mov
cs
movsl
jae
xchg
out
add
andl
push
xchg
nop
cli
dec
xlat
loopne
adcl
shl
loop
jecxz
jl
sub
mov
and
add
fstl
imul
ficoml
xchg
subl
jns
ljmp
into
inc
andb
lret
mov
pop
xchg
movsb
sarl
sarb
mov
push
pop
movsl
lret
lds
les
push
add
sub
push
or
dec
pop
sbb
cmp
push
hlt
inc
adcl
fdivs
sub
mov
sbb
inc
sub
push
mov
movsb
lret
sbb
lret
mov
xor
daa
call
in
fcmovu
adc
inc
idivb
out
fs
add
rolb
ljmp
dec
sahf
push
inc
lret
test
out
push
push
scas
xchg
jnp
imul
xchg
cmc
cmp
daa
jno
cmp
adc
insl
mov
lret
divb
es
cmpl
and
push
push
div
imul
popf
mov
lret
inc
mov
xor
mov
mov
icebp
push
rorb
ja
sub
andl
pop
mov
inc
inc
jmp
sbb
aad
mov
or
shlb
cmp
xor
aaa
shr
xor
pop
stos
mov
pop
mov
sub
xchg
stos
lret
fldcw
cwtl
insb
stos
lea
cmp
clc
push
inc
mov
and
lds
mov
aas
rcr
adc
test
aad
js
lret
cmc
lods
lock
xchg
stos
std
fucomp
test
lods
aaa
lret
nop
xor
cld
js
dec
ljmp
rcr
mov
or
dec
and
jo
inc
int
adc
pop
jge
add
lret
aad
cltd
xchg
lret
sahf
add
or
cli
push
xchg
mov
mov
push
cmc
lock
jle
mov
xchg
call
cltd
movsb
mov
dec
stos
ss
xor
ret
scas
jns
xchg
leave
lret
les
fiaddl
jno
or
mov
flds
mov
aaa
mov
mov
cli
lret
popf
cmc
ja
or
lret
gs
lods
aaa
xchg
pop
lret
jecxz
dec
and
cmp
mov
xor
pop
lret
xor
shr
lret
push
cmp
jmp
adc
pop
inc
adc
mov
push
lods
pop
or
or
adc
and
dec
lret
fwait
mov
pop
xchg
lret
adc
insl
pop
loope
lret
stos
rcl
fidivl
pop
lret
add
fnsave
push
cmp
pop
push
mov
stos
mov
xchg
xchg
into
les
xor
lret
shlb
inc
popf
mov
mov
data16
out
mov
ret
jo
jno
stos
xchg
inc
jecxz
fisubrl
mov
test
add
jmp
aam
dec
cmp
out
in
mov
push
mov
divb
or
lret
ror
pop
cld
out
cmpsb
lret
fsubs
sub
rorl
or
mov
sub
xchg
scas
dec
xor
stos
cwtl
lods
stos
rorb
mov
in
sbb
mov
or
mov
fisttps
xor
stc
xchg
mov
call
push
pusha
movsb
dec
ss
fiaddl
add
cmp
adc
ss
loopne
lea
xchg
popl
in
sub
jle
dec
orl
out
adc
sahf
mov
jns
jno
popa
add
inc
nop
lahf
lret
ja
int3
mov
lock
or
push
fsts
lret
repnz
pop
push
lret
or
popa
cmp
mov
or
fistps
cmp
push
lret
xchg
cwtl
jmp
xor
add
popa
cmp
xchg
lret
cmp
mov
popf
addr16
push
enter
cmp
jp
mov
fldl
mov
sbb
loopne
sub
insb
xor
cli
jmp
dec
push
add
ss
sti
imul
movsb
mov
insb
mov
dec
arpl
pusha
js
fidivrl
movsb
int
mov
fstpt
aas
lcall
rcrb
dec
mov
and
lret
and
mov
inc
pop
xchg
movl
fidivl
lret
hlt
loopne
sub
lret
ja
pop
cmp
dec
ficoml
mov
repnz
lret
scas
xor
xchg
cmp
fdivs
xchg
lret
jno
dec
out
sbb
lret
mov
lret
fadd
repnz
pop
mov
shrb
dec
int3
sbb
xchg
and
push
loop
and
data16
aad
test
mov
stos
inc
mov
xlat
not
lret
ret
clc
movsl
mov
pop
fcomp
sbb
jno
loope
aam
std
xor
je
ss
mov
add
cmpsb
lret
pop
shll
stos
sub
inc
mov
loope
int
mov
loopne
sub
pop
pop
mov
fistl
adc
adc
orl
fnstenv
lret
addr16
mov
cmp
rcr
ror
bound
xor
shrl
std
ja
pop
fwait
sbb
popa
fldt
lret
sub
lret
sti
gs
dec
jp
lret
mov
xchg
cmp
and
xchg
fistps
mov
hlt
mov
mov
mov
test
jnp
xchg
subl
cmp
iret
inc
push
xchg
dec
movsb
sahf
xchg
add
xchg
lret
jle
lcall
mov
aam
jmp
hlt
push
cmp
xchg
bound
inc
scas
int
xchg
add
mov
jne
xor
lcall
int3
add
cmp
int
mov
loope
add
testb
cltd
sbb
pop
ret
mov
jecxz
outsb
lret
inc
inc
xorb
push
repnz
mov
lret
nop
mov
sahf
pop
dec
lret
lods
out
mov
jp
popf
andl
insl
mov
call
aaa
lret
out
mov
or
adc
fsubp
sub
push
dec
fcoms
leave
mov
int3
cmpsl
mov
push
ljmp
adc
or
mov
imul
cmp
dec
insb
jmp
das
and
cmp
push
push
sub
mov
test
lret
push
mov
ret
push
cmp
out
loope
mov
or
pop
sub
mov
mov
lret
pushf
pop
mov
xor
lret
fistl
shll
adcb
ja,pt
push
dec
test
insl
xor
std
nop
lret
sbb
gs
stos
push
fldl
int3
or
lret
stos
push
xchg
push
addr16
xor
pop
and
lods
dec
sub
jl
xchg
aas
pop
bound
sbb
loop
test
jae
mov
cli
ds
out
aas
sbb
lret
sbb
mov
into
jg
lret
xor
clc
fstp
push
ficompl
and
jg
mov
repnz
mov
adc
lahf
xor
and
lret
lea
lret
arpl
stos
cmpl
lret
mov
psubusw
out
sbb
lret
cmp
pop
dec
pop
lret
push
xor
rcrl
inc
fiadds
leave
fisttpll
popa
xor
stc
fiaddl
pop
mov
cli
jg
and
mov
insb
xchg
dec
xor
xor
pop
mov
fisubrl
lds
cmp
inc
jne
shlb
lret
lcall
or
lret
add
xchg
sub
pusha
shl
out
adc
dec
lret
in
popf
imul
ljmp
or
push
ds
mov
insl
pop
outsb
lret
pop
lock
pop
lret
fs
jg
stos
lret
push
push
push
fistpl
xchg
adc
sbb
xor
sbb
je
fbstp
cmp
or
xlat
xlat
mov
enter
movsl
push
cmpsl
lret
das
adc
fisubrl
mov
out
int3
push
fucompp
int
mov
add
pop
lret
movsb
nop
add
jl
lock
fnstsw
pop
lret
inc
xor
or
popa
sub
ja
test
movsl
lret
cmp
lret
jae
mov
lods
pop
imul
enter
subb
push
call
movsl
mulb
pop
mov
mov
fsubrs
jp
push
xor
mov
or
aas
cmp
lret
iret
movsl
xorw
shrb
mov
jecxz
nop
xor
sub
push
ror
icebp
dec
mov
or
pop
repz
inc
adc
imul
lret
shlb
add
in
pop
adc
lret
cmp
rclb
add
push
in
pop
sbb
fwait
js
fstpl
lcall
jg
sbb
idivl
mov
pusha
sbb
push
jmp
lcall
dec
lret
ds
stos
push
icebp
push
or
lret
sub
pop
iret
ret
cltd
lret
xchg
mov
cmp
shll
lods
inc
fucomi
in
aas
jmp
mov
or
ret
popa
mov
cld
in
outsb
fadds
mov
mov
lret
arpl
mov
cli
lret
add
sbb
test
xor
lret
hlt
cmc
out
mov
lret
pop
outsl
lods
jbe
mov
lret
and
sbb
mov
adc
cmpsb
inc
adc
mov
cmp
ficompl
add
adcl
ja
push
mov
push
adc
lret
aaa
loopne
xor
loopne
sub
mov
mov
ret
adc
jl
rclb
popa
sbb
mov
ds
test
repz
and
pop
leave
or
imul
mov
ficoml
cmpl
adc
push
fwait
mov
mov
in
ret
xchg
inc
xor
insb
jle
fsubr
push
push
icebp
mov
pop
inc
pop
vpminub
fwait
or
movsb
lret
mov
cmp
fiaddl
push
lods
jle
xlat
cwtl
xchg
test
in
cmpl
sarb
ret
sbb
lret
inc
pop
adc
sahf
mov
out
xchg
xor
mov
mov
push
mov
xor
dec
or
sub
cmp
pop
sbb
and
or
sub
mov
jge
call
mov
sahf
mov
addb
lret
push
jp
jmp
incl
adc
or
mov
mov
dec
mov
xor
push
jecxz
rcr
inc
outsb
lret
fucom
jb
aaa
push
mov
or
lret
es
aas
outsl
cltd
enter
push
mov
and
inc
lret
mov
fdivl
je
jmp
bound
and
sub
enter
mov
leave
pop
jb
stos
daa
test
shll
dec
add
mov
inc
push
push
fucomi
jmp
cli
js
pop
and
jge
imul
es
loop
cmp
push
frstor
sahf
jno
push
mov
arpl
jns
popf
stos
push
ret
mov
pop
pop
jno
lret
adc
cli
mov
aad
pop
movsb
insl
loop
mov
ljmp
not
fldt
push
into
cli
push
and
push
inc
jno
fisubl
insl
shlb
cwtl
inc
fsubr
jne
aam
addr16
jno
jl
sbb
mov
jp
cmp
into
add
loope
dec
aam
pusha
mov
lods
lret
and
lahf
jle
ljmp
mov
pushf
das
cli
fiaddl
dec
push
shlb
lret
in
rcll
stc
cmp
and
pusha
inc
lahf
cld
popf
inc
adc
pop
fsincos
sub
cwtl
or
mov
dec
test
sub
dec
push
arpl
int3
dec
jmp
bound
or
rorb
lea
jo
stos
adcl
sub
lret
pop
push
fistps
sub
mov
mov
mov
aad
and
mov
mov
rcll
lea
sbb
jl
add
add
call
xchg
push
sbb
lret
insb
cli
add
push
call
or
pop
xchg
jae
repz
dec
cmp
jg
mov
sbb
into
loop
pop
push
lret
aaa
or
xchg
lret
lcall
in
jnp
fisubl
and
mov
xor
int
dec
push
dec
cmp
dec
mov
mov
mov
xchg
add
jp
or
jp
lret
orl
adc
es
mov
pop
lret
call
lret
out
mov
rcll
lret
mov
push
cwtl
pushf
lret
pop
jge
int
pop
cli
sti
outsl
ret
mov
add
mov
leave
fs
jbe
jns
xor
sbb
add
or
jg
jp
lret
xor
ret
add
sub
push
cmp
shl
ljmp
fidivl
mov
mov
dec
pop
lret
lcall
cmc
in
outsl
lret
pop
mov
sarb
cwtl
in
lret
ljmp
or
push
das
mov
icebp
mov
xchg
bound
mov
mov
outsb
lds
mov
mov
cmc
loope
sub
arpl
aad
and
sarb
lahf
fst
inc
lret
or
arpl
and
and
adc
lret
inc
pushf
or
icebp
sbb
loope
lods
jge
adc
loopne
test
cltd
add
sbb
mov
test
adc
pop
aad
add
fimull
push
sbb
xlat
or
push
dec
enter
push
imulb
xor
lea
aas
lret
sub
aam
lret
and
test
push
mov
xor
lret
test
lret
clc
cwtl
fwait
or
adc
into
pop
shlb
sub
mov
loope
orl
test
lret
fwait
in
jmp
lret
push
ds
xor
ficompl
add
inc
aam
pop
lods
lahf
aad
lret
push
pop
inc
aas
imul
les
pop
test
jge
lret
xchg
bswap
fsubrs
cmp
lret
test
mov
cmpsl
lret
rol
ljmp
stos
cmp
and
xchg
ja
sub
add
dec
repnz
cmp
shrb
push
sbb
or
lret
add
lea
loope
mov
add
inc
flds
scas
or
gs
jg
xchg
movsb
aam
mov
iret
pop
stos
sbb
psrld
sbbl
testl
out
lret
sub
pop
les
cmp
jmp
int3
shlb
dec
fisttpl
cs
jb
in
jle
nop
lret
xchg
adc
mov
sbb
pop
mov
lret
sub
out
sahf
pop
bswap
aaa
call
mov
lea
rcr
clc
mov
fnstsw
ss
lret
pop
rorb
dec
jno
jge
lret
shll
leave
test
sub
dec
sub
call
out
push
ret
flds
lea
jbe
fdivrl
lret
bound
jns
cmp
rolb
and
lret
leave
in
fimuls
and
pop
jge
cmp
xchg
jp
or
and
pop
adc
mov
aam
dec
jmp
lcall
jne
cli
and
sbb
add
lret
xchg
call
out
out
lret
sub
or
push
inc
inc
mov
or
mov
addr16
lret
mov
pop
dec
mov
sub
or
test
xchg
pop
jle
add
mov
mov
xlat
aam
inc
push
fisubl
in
pop
and
lret
xor
dec
in
loop
push
inc
mov
push
sub
mov
pushf
lret
das
and
mov
dec
inc
xchg
jge
xor
pop
shlb
pop
sub
jb
loope
lret
je
cld
jecxz
jno
int3
mov
xor
lret
push
add
or
and
mov
sub
cmpsb
stos
mov
jge
insb
cli
xor
nop
lahf
iret
fcos
mov
pop
lret
sub
adc
push
aam
mov
movsl
cmp
inc
int3
movsl
inc
cli
mov
push
xor
fmul
lods
sub
xor
cli
xchg
inc
adc
sub
stos
xor
sub
push
hlt
and
gs
xchg
les
lret
mov
ds
int3
in
jl
insb
pop
lret
pushf
fwait
sub
jae
in
lret
xor
cmp
out
pop
in
sbb
cmp
mov
aad
cli
mov
lcall
ja
cmpsb
jg
in
ljmp
xchg
lcall
mulb
lret
xchg
pop
add
dec
imul
pop
lret
shr
aad
lea
fwait
orl
xchg
sbb
add
push
dec
cld
xor
dec
mov
gs
adc
lods
aam
xchg
lret
jo
push
pop
push
lret
dec
push
mov
cmpsl
adc
push
mov
sub
data16
sahf
daa
cmp
aas
js
mov
int3
lds
lret
test
mov
ror
lret
out
cld
mov
lret
jmp
mov
inc
lret
loope
adc
cmpxchg
mov
adc
mov
lret
enter
pop
ljmp
out
out
lret
test
jmp
pop
jns
jecxz
mov
push
mov
in
stos
push
imul
lret
mov
pop
ror
fiaddl
mov
push
adc
mov
shl
in
sbb
jmp
insb
es
lret
sub
cmpb
inc
pop
out
ds
xchg
mov
xor
lret
std
rol
adc
jo
or
mov
cmp
call
je
rol
lret
jbe
fisttpl
xchg
and
rolb
sbb
lret
in
dec
mov
mov
into
das
ficoml
gs
cmp
push
xchg
lret
cld
mov
xchg
lcallw
sub
repnz
pop
inc
popa
push
pop
lret
imulb
dec
call
mov
lock
and
rolb
cmp
push
mov
push
lret
hlt
out
andb
int
push
lahf
scas
or
outsl
sub
aam
aad
adc
lret
push
xor
cmp
xchg
mov
add
in
lret
leave
sub
lret
jbe
test
mov
lret
shrb
push
lret
and
pusha
dec
enter
cmpsl
adc
inc
inc
pop
pushl
sub
nop
mov
repnz
mov
mov
dec
jle
test
add
and
pop
push
push
mov
out
dec
ret
jp
jno
cwtl
ja
out
adc
stos
jb
ss
mov
or
push
adcl
fidivl
pop
ss
inc
cld
lret
andl
lret
fisttpl
cltd
pop
jo
push
mov
mov
ret
jno
das
ficompl
call
cmp
and
test
add
sub
popa
dec
jmp
loopne
sti
fwait
loope
adc
out
pop
popa
add
pop
dec
lock
fsts
xor
mov
cmpsb
inc
mov
lods
mov
push
mov
pop
dec
inc
fcomp
clc
sub
jge
xchg
mov
inc
add
dec
arpl
sub
push
scas
popa
fcmove
or
cwtl
mov
lods
xchg
and
jle
push
mov
cs
add
jbe
negl
mov
inc
mov
pop
stc
jl
shlb
mov
push
mov
sar
lret
and
sbb
inc
sbb
js
shll
lods
int3
pop
dec
mov
sahf
jae
mov
jb
mov
push
sub
inc
push
add
stos
mov
sbb
xor
out
pop
fcmove
addr16
mov
push
pop
cli
xchg
and
pop
fs
sbb
mov
mov
and
ror
add
adc
ja
xor
lret
insl
aam
and
clc
cmpsb
mov
pop
pop
jae
enter
push
xor
lret
jg
mov
sub
lock
lahf
jbe
aas
push
and
dec
scas
pop
lret
xor
and
mov
lret
xchg
imul
aam
cmp
scas
push
nop
out
popa
lcall
push
rcl
cmpsb
pop
stc
in
aad
fwait
cs
ljmp
pusha
mov
mov
popf
xchg
inc
lret
pop
adc
bound
push
jae
mov
sbb
std
inc
and
cwtl
fs
or
pusha
mov
mov
into
das
je
adc
lret
adc
sub
sbb
mov
rol
stc
cmp
inc
jae,pn
aam
insb
jnp
or
sti
cmp
shrb
js
scas
aam
or
in
aaa
xchg
out
dec
cmpsl
cmp
ljmp
lret
inc
sbb
xor
addr16
adc
xlat
add
movsb
dec
inc
pusha
stc
pop
sub
cmp
hlt
dec
arpl
mov
in
fsubl
popf
and
dec
or
ret
fcmovne
cmpsb
lret
stos
aad
loopne
lock
and
mov
lret
pop
jp
pop
add
je
sbb
test
mov
repz
in
lret
inc
nop
ja
sub
lret
scas
je
sbb
ret
rcrb
fldenv
stos
loope
mov
into
push
xor
lret
cmp
lret
out
fdivr
in
mov
inc
test
mov
ror
adc
movsl
mov
mov
sbb
xor
lret
and
and
push
shrl
mov
test
repnz
sti
loopne
push
lret
out
out
mov
js
scas
stos
jne
imul
insb
inc
fcoms
inc
cmp
xor
lock
cmp
cmp
add
loope
test
sbb
roll
mov
mov
cli
cld
lock
pusha
loope
sbb
pop
imul
pop
sub
jno
insb
scas
lret
xchg
lahf
int3
and
push
lret
jl
testb
inc
cmp
loope
lret
in
cmp
arpl
lret
divl
jmp
stos
add
mov
lcall
mov
ja
xchg
cmp
push
les
lret
mov
shll
dec
sub
movl
inc
mov
sbbl
cmpl
xchg
and
xor
cvtps2pi
push
cli
rclb
test
xchg
adc
pop
aas
arpl
outsl
movsl
jno
mov
movsb
dec
mov
and
pop
lret
mov
jne
jae
xchg
out
and
mov
jecxz
test
scas
mov
cltd
mov
fs
lret
pop
lcall
or
fs
lret
mov
test
pop
xchg
rclb
or
jo
movsb
int3
mov
pop
mov
out
pop
sbb
cmp
ljmp
fdivrs
push
fmul
pop
mov
add
lret
push
rdtsc
inc
int3
cld
lret
dec
movl
rclb
push
pop
push
pushf
int
and
and
js
loopne
adc
ljmp
lret
stos
movsl
sbb
sbb
push
outsb
push
loope
lret
popl
fucomp
jmp
or
lret
movsl
test
cli
gs
mov
fwait
mov
add
cli
mov
jnp
mov
inc
mov
fcmovb
add
lret
js
incl
dec
pop
lret
fbld
rcll
lret
imul
inc
fdiv
lret
cmp
test
mov
les
adc
sub
pushf
mov
mov
jmp
push
arpl
lret
dec
sbb
xchg
jmp
lret
pop
rcrb
mov
adc
adc
jnp
add
inc
cmp
fbstp
lret
inc
test
sub
lret
jns
and
jae
inc
and
jg
pop
lret
lods
in
cmp
mov
mov
pop
xchg
inc
adc
push
inc
sbb
dec
stos
pop
clc
jmp
jg
bnd
mov
icebp
xlat
mov
out
flds
or
jmp
lret
imul
push
loop
pop
dec
jb
xor
sub
mov
in
lds
lock
inc
ret
ja
push
sub
stos
int
add
jae
std
mov
rcll
mov
cs
aad
fmul
lret
dec
push
pusha
or
lds
fadds
test
sub
lret
jbe
addr16
dec
xchg
pop
pop
sub
cmpsl
lret
jge
xor
sub
xchg
ja
stc
lret
dec
mov
sub
xor
lret
dec
decl
push
and
mov
adc
and
insl
jmp
ret
hlt
lret
dec
nop
inc
inc
fiaddl
rclb
div
xchg
jp
lret
aad
adc
pop
popa
in
mov
adc
xchg
pop
xlat
push
mov
bound
add
pushf
adc
lret
mov
nop
lret
out
ret
sub
cmpsb
adc
push
xchg
inc
and
cmp
pop
cmp
mov
enter
out
aas
mov
push
dec
jne
stc
xor
pop
sbb
add
inc
dec
rolb
inc
pop
lret
outsl
sub
lret
nop
popf
pop
mov
xor
and
test
frstpm(287
shlb
jno
lret
jle
add
int
lret
pushf
jmp
pop
insl
je
fmul
sbb
and
das
sbb
movsb
repnz
andl
mov
adc
mov
stos
rcrb
inc
mov
xchg
xlat
adc
or
lret
add
mov
xchg
outsl
je
mov
push
lret
xor
jmp
xor
arpl
jl
cmp
adc
gs
lret
pushl
popa
lret
sbb
inc
or
or
out
rol
lahf
mov
lret
cmpsl
sub
xchg
sbb
lret
dec
push
js
xchg
mov
outsl
mov
pop
sbb
push
ss
xor
lret
add
xchg
or
sub
cmp
or
cmpsb
repz
lret
fucomi
jbe
lcall
std
jg
cmc
cwtl
lahf
lret
sub
inc
lret
lea
pop
pop
neg
pop
in
inc
lret
cltd
or
lret
cmp
mov
mov
inc
inc
rorb
cmp
aam
jmp
push
sbb
out
jg
imul
testl
test
movsb
mov
out
cmpsb
in
scas
lret
xchg
and
xor
mov
cmp
lcall
dec
scas
push
sarb
lods
aad
lret
dec
cmpsl
es
jae
lea
cmp
leave
mov
scas
push
rolb
inc
nop
lret
mov
lods
jmp
fmul
loope
fs
or
mov
mov
insl
fnstsw
rcrl
shlb
imul
clc
push
cmc
leavew
lret
test
icebp
lock
lds
lret
insl
fwait
leave
pop
dec
out
mov
mov
stos
or
rcr
addr16
pop
add
mov
xor
imul
adc
je
test
mov
fsubl
inc
sub
addr16
shll
cmp
fiadds
bound
mov
fadds
add
lret
ret
mov
fcmove
sbb
sub
pop
xchg
movsl
push
mov
ret
lret
mov
stc
xor
pushf
lret
and
add
negl
sub
cwtl
fimuls
dec
or
mov
dec
stos
or
xchg
xchg
outsl
fsubs
lret
das
ret
popf
xchg
adc
mov
or
pop
lahf
xor
fcmovbe
jecxz
leave
sbb
mov
lcall
nop
push
lret
scas
aaa
pop
mov
or
inc
pusha
lret
cmp
xchg
push
mov
aam
jecxz
xchg
fdivrs
jo
lock
or
mov
test
xchg
jmp
in
cmp
lahf
call
int
lret
idiv
test
xor
lods
les
fisubl
sub
cmp
rorl
pushf
fmul
mov
inc
test
mov
lret
ror
mov
repnz
mov
cmpsl
lret
pop
pusha
addr16
inc
add
jbe
nop
adc
notl
jno
xchg
push
cmp
mov
data16
sbb
ficoms
add
push
das
stos
cmp
into
mov
ja
sub
sarb
lods
add
out
mov
push
jg
cli
pop
shlb
adc
jo
adc
out
jmp
es
fwait
mov
lret
mov
mov
test
or
mov
nop
lret
jne
sbb
push
int
jo
xor
fdivl
roll
outsl
mov
inc
and
cltd
fildll
addr16
fcmovne
aam
stos
jo
xchg
add
sbbb
push
adc
pop
mov
mov
mov
cmp
cwtl
adc
or
push
or
shrb
mov
fdivs
stos
xchg
test
add
sub
and
push
out
and
sbb
lret
add
cs
movsb
fldenv
lcall
xor
adc
dec
push
iret
aas
lock
xor
sbb
lret
ffreep
daa
cmpsl
inc
mov
ret
adc
in
pop
xor
popa
pop
lahf
aad
lret
in
adc
pop
jae
lret
mov
pop
out
xchg
push
lret
push
repnz
or
insl
js
mov
pop
jl
inc
dec
xor
push
add
lret
movsb
mov
sbb
cli
rorl
and
leave
fdiv
imull
sar
xchg
lods
je
shlb
mov
lret
mov
aas
insl
xchg
mov
lods
ljmp
xchg
lret
loop
cld
xchg
cmp
sbb
adc
lret
jnp
inc
int
lea
stos
fs
ljmp
mov
jge
lret
sbb
out
jne
rclb
sub
enter
push
jae
call
pop
ret
mov
sbb
ss
cmp
fcmovu
add
cltd
lods
push
dec
sbb
mov
sub
lcall
cli
adc
pop
xchg
into
pusha
movsl
lds
pop
cwtl
cmp
ds
jbe
inc
rcrb
mov
lds
lahf
adcl
xchg
lret
adc
push
xchg
cmpsl
push
lret
pop
rolb
test
addr16
xor
lock
into
xlat
outsb
xor
cwtl
dec
jge
out
jl
add
mov
fdivr
adcb
sti
push
add
cmpsl
aaa
push
cmp
mov
lret
and
cli
cwtl
jle
lret
sub
lret
sbb
call
bound
lods
mov
mov
adc
lds
addr16
add
lret
and
cmpsl
lds
mov
jp
pop
pop
sbb
lret
push
add
shrl
push
pop
mov
outsb
mov
sub
mov
idivb
ja
aad
test
cmp
gs
mov
iret
inc
sbb
mov
int3
xlat
push
and
int
wrmsr
inc
jo
gs
ficoml
lret
xorl
lret
add
movsl
lret
fs
shrb
inc
push
cltd
sahf
inc
cltd
lds
repnz
or
pop
lea
lret
xchg
xchg
sub
inc
push
sti
dec
xor
mov
ljmp
ljmp
js
lret
sbb
sub
ds
jmp
mov
mov
js
int3
rclb
mov
jp
loopne
push
aaa
ja
mov
adc
mov
shlb
imul
out
pop
scas
mov
lods
push
rorb
sub
mov
shlb
mov
pop
cmp
xlat
fisttpll
adc
fidivl
out
icebp
sbb
ror
mov
movsl
shrl
lret
loop
sub
add
or
and
sti
mov
in
jl
mov
inc
mov
ficoml
jnp
cmp
mov
push
fwait
in
ror
push
or
add
mov
call
mov
jae
aad
lret
pop
inc
popa
xchg
xlat
push
lret
jno
push
js
dec
addb
sbb
mov
pop
mov
push
pop
pop
jl
pop
outsb
lret
pusha
push
jge
fisubl
mull
ror
xor
mov
sbb
inc
addb
sub
push
xchg
push
jbe
and
imul
lret
jo
jns
cmp
mov
neg
lds
sahf
dec
lret
stos
xor
cmp
sub
fcomp
cmpsb
inc
dec
flds
lret
pop
das
out
add
xchg
pop
inc
or
pop
iret
cli
testb
shrl
stc
mov
cmpb
loope
lret
push
les
outsb
lret
add
cli
xchg
enter
neg
test
lods
lret
jmp
mov
mov
push
aaa
and
push
clc
lret
inc
lea
dec
mov
lret
mov
out
sbb
lret
sbb
cmpsl
xchg
rcr
sbb
add
sbbl
int3
lret
pop
fimuls
cmp
fwait
mov
push
orb
and
jle
nop
mov
dec
loope
and
lret
mov
xchg
add
xchg
or
cli
das
outsl
insb
shl
inc
fstps
mov
mov
insl
mov
inc
pop
int3
je
cmp
test
xchg
xchg
cmp
inc
out
push
stos
test
lods
jg
sub
das
test
xor
loope
cmc
out
daa
std
xor
call
lret
lret
adc
popa
ljmp
cmp
fists
js
mov
int
call
mov
ret
dec
icebp
fimull
cltd
adcl
cmp
imul
dec
test
cli
add
mov
or
vsubpd
lret
sti
push
sub
pop
lret
jns
mov
addr16
xchg
lahf
movsl
xor
xchg
mov
mov
mov
inc
in
xor
lret
cmp
cmp
mov
or
cmp
insb
sub
loope
in
ret
insl
adc
adc
add
inc
icebp
mov
pop
aad
imul
lret
mov
pop
mov
fcomp
jno
jne
cli
or
scas
fcom
xor
mov
sahf
ja
mov
cmp
add
dec
mov
adc
popf
je
mov
lods
lret
loopne
mov
aad
cli
outsl
int
dec
fcoms
push
push
mov
int3
xlat
jp
adc
lret
negb
fisubs
pop
lret
xchg
imul
js
lret
cmc
fs
pop
cmp
xchg
out
or
iret
mov
jne
sbb
lret
cltd
repz
adc
ljmp
cmp
popa
adc
lretw
cmp
jp
stc
in
jge
xchg
lret
test
cli
mov
adc
js
leave
lret
jl
inc
sahf
mov
lret
adc
cmp
mov
xchg
shlb
cmp
cmp
test
add
ja
std
cltd
inc
xchg
aad
enter
mov
lret
cmpsl
add
mov
and
mov
popa
ret
fwait
jnp
cltd
shlb
int
loop
jle
sub
mov
scas
iret
psrad
lret
lcall
adc
out
cli
imul
push
ret
lret
je
xor
mov
int
std
mov
inc
pop
shrl
mov
lods
cwtl
iret
lret
add
je
mov
dec
adc
mov
xchg
mov
out
mov
sar
mov
fstps
dec
pop
lret
das
jge
ja
fcmovne
push
out
aad
push
call
pop
sti
cwtl
repnz
xchg
clc
pop
lret
push
out
sbb
test
xor
fidivrl
rcrb
mov
iret
jno
mov
jge
add
push
xchg
mov
rclb
lret
test
add
gs
push
xorb
lret
sub
dec
pop
dec
pop
lret
jecxz
mov
and
cmp
fisubs
add
jle
sub
sub
adc
mov
jge
mov
clc
push
push
mov
lret
jnp
fwait
or
push
jns
test
notl
cmp
xchg
mov
cli
scas
insl
inc
or
mov
and
int
sub
ficompl
aam
mov
out
ret
sub
pop
lret
lods
push
pop
xchg
fs
lret
adc
dec
ret
cmc
push
lret
jl
jge
test
stos
fsubs
mov
xchg
stos
cmpsl
mov
cwtl
sub
xor
ja
shr
mov
hlt
lret
sbb
mov
popf
or
mov
push
xor
sub
xchg
xor
test
sti
fcoms
push
push
in
jne
mov
mov
les
inc
aas
xchg
std
xchg
rcl
lret
lods
xor
loope
lret
push
ja
mov
lahf
mov
ljmp
mov
mov
adc
jmp
mov
lret
mov
push
lret
add
mov
js
ficompl
jno
shlb
bts
popa
sub
sub
sub
sbb
jge
jecxz
lret
insb
pushf
jbe
pop
test
sbb
xor
jne
jecxz
das
push
cmpb
fnstcw
test
es
fdivs
dec
sbb
fstp
in
inc
scas
mov
and
sbb
push
xor
gs
lret
mov
xor
cld
sub
movsl
fisubrl
rcll
dec
jmp
ret
fmul
adc
jne
or
lret
push
ret
mov
clc
push
cmp
cmp
loope
push
pusha
xchg
add
mov
test
lretw
lds
sti
outsl
lret
mov
cmp
mov
add
sbb
xor
int
adc
fldcw
inc
cwtl
or
cli
ret
jnp
mov
aas
fucompp
nop
fistl
jecxz
subb
rolb
jge
aaa
cli
mov
mov
fcoms
inc
mov
lret
inc
mov
arpl
inc
mov
and
fwait
adcl
and
sbb
pop
shlb
lret
pop
add
xchg
test
lret
mov
lret
sub
rorb
or
into
jge
sti
in
in
in
enter
fucomi
sbb
inc
mov
fidivs
xor
lret
jbe
jnp
inc
lret
addb
out
lret
into
push
mov
sarb
pop
or
xchg
fsubrp
xor
push
aad
lret
mov
push
sbb
lock
es
xor
mov
icebp
push
cmp
out
repnz
ss
aam
mov
push
fnstsw
mov
in
push
sbb
leave
sbb
lret
lds
inc
enter
roll
lret
lock
aaa
pop
ret
and
bound
sbb
or
lret
xchg
call
lret
jge
sub
inc
xchg
stos
mov
mov
cs
adc
lret
xchg
pop
ficoms
adc
mov
cld
and
jp
fidivrl
clc
lret
xchg
xchg
sub
pop
add
cmpsb
mov
lret
movsb
mov
popa
cmp
cli
xchg
out
stos
xor
repnz
mov
fdivs
jecxz
pop
cmpsb
sbb
out
mov
or
into
in
jno
lret
lret
sub
jnp
aaa
and
mov
inc
je
flds
ud2
jp
inc
adc
mov
insl
sbb
add
push
xchg
dec
cmp
fiaddl
xor
jae
fcmovnu
pop
pop
loope
ret
roll
xchg
bnd
outsl
test
jg
lret
adc
in
rolb
jno
lret
sub
lret
cmp
and
lret
pop
push
int3
ljmp
lods
xor
fxch
xorb
mov
sub
call
mov
pop
sahf
rorl
sbb
cmp
fnstenv
gs
es
negb
pop
inc
stc
outsb
stos
push
jne
into
dec
call
insb
icebp
pop
add
out
fcmovu
pusha
pop
arpl
sbb
aam
pop
lret
cmp
or
es
xchg
mov
lret
adc
cmp
fbstp
aaa
jb
dec
dec
testl
inc
test
jb
loopne
fmuls
outsb
inc
pop
in
cmp
mov
lret
jo
idivl
loopne
cmp
push
lret
enter
fdivp
xchg
pop
movsl
leave
cmp
jnp
cmc
pop
ljmp
lret
mov
lretw
rcrb
xchg
sub
cmp
jne
lds
popf
imul
xor
cli
adc
in
fsubl
lret
inc
aas
mov
xchg
arpl
cmp
clc
das
mov
mov
cmpl
add
sub
sbb
dec
cmp
jmp
sub
lret
push
in
dec
and
in
mov
jbe
mov
dec
jns
push
cli
jp
mov
mov
loop
clc
push
test
mov
sbb
push
mov
icebp
cmp
xchg
jl
dec
and
sbb
stos
push
inc
pop
lret
sbb
cmp
das
lea
push
lret
std
aam
test
jl
psrad
xchg
cmp
faddl
mov
test
nop
jns
push
lret
lock
dec
adc
cmp
roll
sbb
enter
dec
mov
loop
inc
jae
stos
aas
xor
jnp
imul
into
fstl
lret
or
lret
xor
leave
fnstsw
inc
sub
pushf
loope
xor
bound
lret
test
mov
lcall
cmp
or
sarb
mov
stos
scas
aaa
mul
jne
fsubr
push
dec
loop
nop
fiaddl
scas
mov
jnp
shrb
lcall
fisttpl
les
ja
mov
mov
lret
loope
and
lret
leave
sub
cmp
cmp
lret
sbb
mov
fwait
lea
and
push
shlb
sub
aam
ret
repnz
adc
aad
adc
lds
sbb
in
nop
call
gs
xor
sbb
or
mov
fmulp
notl
scas
pop
sbb
push
lret
or
ja
sarb
lods
mov
sbbb
sub
adc
xchg
lret
clc
jns
xor
insl
lods
cmpsb
sarb
dec
ljmp
sub
insl
lret
mov
xchg
pop
and
int
push
cmp
popw
or
aad
leave
jmp
dec
test
pop
outsl
push
lret
loopne
out
enter
xor
cli
cmp
or
testl
adc
shlb
lret
mov
cmp
out
scas
inc
xchg
imul
sbb
jle
push
test
mov
xlat
xlat
adc
arpl
mov
out
fstpl
lret
mov
pop
lods
push
cmp
shrl
loope
mov
dec
bnd
push
add
sbb
lret
xor
or
xchg
ret
cwtl
xlat
loope
ja
lret
mov
cmp
and
add
lret
push
lret
mov
inc
fisubl
cltd
les
out
xchg
outsb
hlt
or
test
int
push
pop
ljmp
loopne
icebp
int3
jmp
fiaddl
push
test
fstpl
stos
ror
sahf
movsb
lret
imull
out
pop
and
hlt
pop
repz
add
cld
sub
int3
ljmp
fmuls
and
or
add
mov
sti
sub
mov
and
inc
or
shll
xor
lret
mov
ljmp
add
jp
and
sbb
testb
jns
and
or
andl
pop
inc
shrb
mov
loopne
lret
cmpsb
mov
pushf
pop
adc
mov
iret
cmp
daa
enter
shll
popa
mov
ljmp
push
shrl
into
icebp
leave
stc
push
pop
stos
push
out
rcl
adc
fiaddl
add
movsl
fnstenv
fisubrl
int3
lock
in
and
cmp
gs
and
sub
aam
push
ror
inc
push
cmp
or
inc
lret
mov
pop
add
sub
pop
das
jp
xor
into
aas
cli
orl
cmc
push
data16
fldt
nop
jmp
dec
xchg
push
pop
lret
filds
lret
sub
lret
mov
lret
inc
pop
xchg
xchg
lock
push
sub
rol
rolb
jl
sbb
icebp
xchg
and
cmpsb
cli
mov
xor
call
jge
clc
jbe
pop
lods
ss
push
cs
mov
lret
stos
mov
lret
mov
xchg
dec
adc
lret
mov
ljmp
into
sti
and
pop
dec
jmp
pop
into
lds
lret
and
sar
jg
mov
and
lret
sub
lret
hlt
dec
in
es
lret
fnsave
lret
notl
lret
js
mov
out
sub
fwait
lret
test
mov
sahf
mov
or
pushf
int3
adc
fwait
jle
mov
jl
pop
roll
cli
cmp
mov
pop
enter
mov
lret
ds
lret
cmpsl
xchg
and
push
xlat
lret
icebp
mov
stos
in
mov
aam
jmp
idivl
pop
mov
fsubrs
pop
call
or
mov
xchg
mov
pop
xor
lret
xchg
push
mov
mov
jg
lret
cmp
jecxz
push
mov
dec
sbb
adc
clc
jl
add
cmp
mov
test
mov
or
iret
sbb
lret
sbb
enter
lret
xchg
ds
js
lret
push
ficoml
pop
aam
fstpt
movsl
test
mov
push
mov
rorl
sub
cli
adc
sbbl
movsl
or
sub
lea
and
add
jle
push
pop
lret
xor
pop
or
stos
lret
loopne
addl
or
and
jle
pop
ss
popf
stos
sub
cmp
adc
rcrb
mov
inc
mov
push
mov
cmc
clc
sub
adc
loop
lret
sub
sahf
push
adc
and
inc
shll
mov
xor
mov
lret
or
cli
cld
cmp
aam
pop
mov
orb
mov
test
mov
mov
cmpsl
shlb
push
mov
push
lret
pop
je
sbb
cli
fisttpl
mov
xor
stos
fidivrs
lret
xchg
aas
stos
out
cmp
mov
fdivr
sbb
cmp
testb
jne
into
xchg
inc
or
lret
xor
movsb
stos
scas
dec
int3
cmp
lcall
and
aaa
int3
cld
lret
out
mov
jnp
push
and
fiaddl
lds
pop
dec
adc
jne
pop
jo
lret
push
scas
pop
lods
mov
jae
jg
sbb
dec
mov
cmp
jl
pop
jns
or
fdivp
jmp
lods
fisubl
pop
fstps
jbe
lret
xor
rcll
dec
leave
data16
and
and
xlat
xchg
and
int
jbe
lea
sub
pushf
fnstcw
pop
adc
aas
lret
pop
jbe
mov
ljmp
stos
fidivrs
lret
repz
out
icebp
mov
or
dec
aam
aam
sub
scas
sbb
or
popl
xchg
push
ret
test
loopne
jmp
data16
lret
rol
std
loop
cmpsl
mov
add
les
push
cmp
xor
adc
lret
test
cs
cmpsb
and
fisubrl
mov
sbb
ret
aad
cmp
stc
lahf
imul
clc
cmc
stos
ds
rclb
jmp
dec
call
mov
dec
addr16
mov
fs
outsl
sbb
inc
inc
jecxz
pusha
cli
lds
aam
xlat
lret
xor
outsl
mov
push
fidivl
mov
clc
inc
lret
repnz
rcrl
lret
add
mov
jne
add
sub
push
adc
fisubrl
dec
mov
andb
sbb
dec
aad
rorl
dec
cltd
andl
and
pusha
clc
es
lret
xchg
in
dec
pop
nop
cmp
aad
jl
pop
lret
popa
cli
lret
pop
xchg
add
mov
adc
cmp
jne
add
shlb
mov
into
inc
popa
icebp
loop
lret
pop
repz
lods
xchg
lret
pop
inc
add
nop
or
add
ss
dec
pop
and
dec
jge
lret
adc
sbb
sbb
fcompl
or
stos
jae
sub
sub
mov
add
cmp
pop
shrl
push
mov
sub
fcomps
lret
js
xor
insb
scas
fwait
out
ror
dec
sbb
loopne
in
aas
sbb
daa
inc
fidivl
shrl
test
xor
mov
xor
out
in
mov
fwait
je
adc
dec
mov
shll
adc
idivl
rclb
test
fdivrp
mov
fs
inc
add
lret
and
push
adc
or
inc
test
mov
es
int3
pop
lock
xchg
sub
lret
inc
cmp
stos
pushf
inc
adc
hlt
jp
ror
jae
scas
stos
mov
je
cmp
mov
nop
aas
clc
dec
cwtl
add
jo
out
cmp
push
jl
mov
xchg
push
mov
daa
lret
test
imul
dec
into
inc
flds
lret
das
cmp
xlat
dec
mov
mov
cmp
and
shlb
and
mov
cli
shlb
mov
cmpsl
fcoms
ret
pop
out
clc
mov
dec
les
es
sbb
popa
mov
mov
lock
pop
pop
mov
cmp
in
or
aaa
or
aad
inc
sub
jae
shrb
jg
mov
mov
pop
lret
movsl
mov
cli
test
in
daa
or
xlat
sub
jo
lahf
loopne
fmul
fnstsw
lret
and
cmp
lret
sbb
loop
cmp
xchg
push
scas
lret
ret
call
lret
mov
sti
lret
rcll
pop
push
push
hlt
mov
inc
pop
jns
sti
mov
mov
pop
andl
sub
mulb
pop
jbe
sahf
in
clc
pop
lret
lock
in
mov
mov
adc
dec
roll
lret
fstpl
rclb
lret
sbb
sbb
int
inc
lret
pop
and
and
mov
sub
and
cwtl
mov
push
cmp
jo
call
xchg
mov
or
lret
cmpsb
add
sub
aad
inc
inc
fmul
es
pop
fidivrl
xchg
dec
scas
xchg
adc
xor
add
pop
mov
lret
sbb
xor
test
int3
addr16
or
lret
out
bound
xchg
lret
adc
cmp
add
inc
pop
jbe
rclb
ja
fmull
xchg
jg
lret
stc
adc
mov
add
fldt
jbe
lret
mov
xor
adc
imul
js
lea
fidivs
fisubrl
sub
push
lret
outsl
fildl
cmp
lds
sbb
adc
dec
nop
movsb
pop
fimull
out
jbe
fdivr
pop
lret
ss
sbb
and
lods
xchg
inc
cmp
jne
stc
insb
lret
pop
stos
xchg
ss
xchg
lret
mov
cmpsl
jb
pop
push
adc
imul
or
fdivr
pop
sub
lds
cli
push
inc
es
push
sub
jno
fsubs
fistpl
rcr
xchg
lret
lods
in
mov
dec
lret
and
fwait
aad
mov
mov
lcall
lods
ljmp
adc
cmc
lret
mov
cmpsl
lret
or
data16
pop
cmpxchg
mov
stos
popf
lret
pop
enter
aas
cltd
je
sub
lret
out
jbe
subl
push
out
out
dec
sub
in
sbb
clc
add
or
mov
push
outsl
ficoms
lret
cld
repnz
pushf
cs
add
cmpsb
wbinvd
push
lret
test
outsb
lret
add
pop
and
popf
cmp
out
dec
icebp
sti
cs
in
lret
repnz
dec
lcall
stc
ficoms
mov
and
inc
insl
testl
lret
stos
jnp
push
loope
cltd
cli
lock
jle
ficoml
dec
push
xor
lret
dec
lret
add
into
jae
sarl
shlb
lcall
jbe
sarb
pop
jmp
cmp
shlb
movsl
jbe
mov
mov
lret
jmp
movsb
lret
int
mov
lea
in
icebp
ret
sbb
mov
sbb
jne
adc
pop
lods
sbbl
jae
testb
lret
sub
push
mov
mov
cli
pushf
sti
or
cmpsb
xor
pop
gs
mov
jge
stos
repnz
lret
insb
add
xchg
das
cli
data16
lds
rorl
mov
cmp
adc
lods
xor
repnz
out
mov
xchg
and
clc
lret
pop
int3
in
imul
push
rclb
lock
lret
sahf
cmc
mov
aad
push
add
xchg
adc
jp
xor
shlb
lret
out
jnp
loopne
enter
xlat
pop
rcrl
cli
mov
repz
mov
push
pop
fsts
out
push
les
sti
outsl
and
xchg
jno
into
and
ficompl
add
leave
lret
mov
movsl
subl
xor
fstpl
mov
mov
lret
out
mov
dec
hlt
cmpl
mov
vpsubq
ret
jbe
mov
mov
pop
shll
aad
sbb
stos
repz
and
negl
ljmp
sbb
xchg
clc
mov
sub
rcl
xor
mov
into
fistps
imul
ficoml
or
lret
divb
daa
push
lods
gs
mov
pop
mov
xor
or
cmp
pop
inc
hlt
cltd
jge
movsl
scas
pop
cli
mov
lock
lret
int
loopne
cmp
ss
adc
dec
outsb
test
aad
into
jno
pop
cmp
lret
push
scas
hlt
movsl
sub
or
adc
rcrl
xor
or
lods
xlat
jnp
cmpl
fcomp
jge
loop
aas
push
in
sbb
out
mov
dec
and
rcrl
out
add
out
xchg
rolb
pusha
or
dec
push
sbb
and
dec
xor
pop
sahf
in
mov
xchg
jb
pop
cmp
dec
and
inc
outsl
sbb
inc
ret
lret
mov
test
call
jle
dec
inc
jno
cmp
int
lea
sbb
test
dec
lock
sbb
ljmp
dec
adc
lds
sbb
into
jp
sbb
add
rcl
xchg
xor
cs
adc
lds
scas
mov
and
lret
xor
fsubrs
push
lret
pop
loopne
mov
imulb
and
push
cmc
imul
stc
out
popa
lret
add
fucomi
xchg
sarb
xor
lret
sbb
int
add
sub
imul
test
sbb
ror
cmpsb
call
bound
popa
lret
test
je
adc
or
ror
pop
push
clc
or
or
or
sub
cmp
lret
mov
add
mov
mov
aad
shl
into
xchg
icebp
leave
jge
ret
ret
pop
lret
mov
bound
lret
fidivl
lret
mov
mov
subl
aam
mov
ds
xchg
mov
xchg
dec
js
lret
jle
loopne
sub
nop
movsl
data16
lret
sub
popf
lret
jmp
cli
jge
adc
gs
lret
rorl
loope
lret
int
cmp
aad
lcall
cmp
or
fidivs
sub
pop
or
rep
mov
push
lcall
push
mov
lret
das
mov
lret
arpl
cltd
jae
addr16
cmp
mov
mov
adc
repz
push
and
hlt
jmp
lret
push
idiv
ds
lret
imul
add
xchg
mov
movsl
into
pushf
jmp
ljmp
fwait
sbb
lret
lret
and
lods
repnz
xlat
lds
mov
mov
push
in
inc
mov
lcall
nop
testl
addr16
jne
add
paddsw
orl
sbb
pop
lret
fnsave
jge
sub
and
push
pusha
test
jle
or
leave
sub
cmp
lret
push
xchg
test
scas
popf
shll
les
pop
popa
mov
in
jbe
enter
xchg
lret
mov
rcr
int
loope
jmp
push
sub
jnp
jp
ret
lret
jle
mov
cs
adc
pop
test
mov
cmpsb
into
jl
nop
pushf
pop
hlt
loop
outsb
pop
xchg
lods
xor
stc
dec
mov
and
push
lret
arpl
jge
rol
sbb
ficompl
sbb
push
xchg
xlat
or
stos
ror
jo
data16
or
ljmp
nop
lret
dec
bound
sbb
jmp
in
loope
mov
mov
and
lea
xchg
push
insl
lret
js
mulb
lret
scas
jmp
lret
xchg
repz
aas
ficompl
jle
adc
push
cmp
jae
js
xlat
or
dec
ror
cmpsb
cld
mov
lret
repz
imul
scas
or
xchg
sub
daa
call
fs
push
gs
jecxz
jmp
or
jne
dec
pop
xchg
fidivrl
xchg
and
jecxz
jmp
ss
les
push
in
adc
cmpsl
into
adc
repz
xor
pop
push
mov
xor
aas
jns
js
jno
dec
hlt
pop
loop
out
gs
into
lret
xor
lcall
dec
aaa
push
lret
push
ja
jnp
inc
loop
sub
mov
xchg
sbb
cwtl
shll
stc
or
fidivrl
in
and
and
add
pushf
push
mov
mov
pop
loope
aas
xchg
add
mov
je
mov
jno
fimull
mov
in
fcoms
sbb
and
imul
lea
mov
lret
cli
sbb
cmpsb
mov
ljmp
xchg
fs
lret
das
arpl
add
sub
loopne
xchg
dec
stos
inc
daa
lret
jnp
inc
add
lock
add
dec
cli
sub
js
loop
lret
pop
lret
inc
and
test
cmp
jge
cmp
ret
push
addr16
mov
dec
sub
shlb
inc
mov
stc
jg
push
add
imul
rcrl
xlat
pop
pop
fstp
mov
xchg
xchg
aam
lret
andl
inc
loop
add
nop
pop
xlat
imul
xchg
lret
jg
mov
lea
divb
xchg
clc
cltd
lret
cmpl
ficompl
pop
push
or
imul
dec
inc
aaa
or
cmpsb
ror
xor
lret
adc
icebp
stos
jmp
lret
sbb
dec
lret
rclb
sbb
add
sub
call
mov
das
lret
mov
mov
push
stc
mov
nopl
cld
push
cmp
push
outsl
xor
ss
notl
aam
sub
in
fs
daa
mov
jno
pop
rolb
fcmovu
inc
xchg
sub
push
jp
dec
xchg
lret
jecxz
push
xchg
xchg
loop
pop
or
out
in
lret
cld
cmp
mov
pop
stc
pop
fnstenv
cmp
or
shrb
or
ficompl
and
pop
mov
lret
push
stc
inc
pop
sbb
or
mov
mov
repz
dec
xor
scas
jnp
out
sahf
bound
enter
lret
and
jge
sbb
sub
push
xchg
sub
add
sub
into
and
xor
sub
outsl
push
push
xchg
repnz
stos
mov
notb
xchg
lds
jle
das
fistl
inc
sahf
fwait
lods
iret
int
mov
or
xor
bound
inc
push
xchg
lret
pop
test
sub
mov
and
lret
sub
mov
xchg
add
into
push
ficompl
mov
fdivr
lret
js
aam
dec
mov
sbb
imul
lret
add
jp
pushf
mov
add
inc
mov
cmp
rorb
pop
in
movsl
rcrb
lods
popl
jge
jle
sarb
lret
mov
in
rol
insl
out
mov
push
icebp
lret
mov
pop
gs
dec
inc
dec
lds
fadds
repz
lea
xor
cmp
fxch
push
dec
andb
xchg
jmp
lret
dec
or
das
lret
inc
imul
mov
lret
lret
xor
enter
cld
lock
adc
add
gs
mov
add
xchg
mov
rcl
sub
lret
ljmp
add
out
and
fcmovnu
lret
push
ljmp
pop
sbb
cli
es
lret
sub
mov
aas
jmp
jae
shlb
out
adc
loopne
divl
mov
jb
xchg
and
movsb
lret
push
cmp
sub
cli
add
push
sbb
jno
mov
and
mov
inc
push
push
lret
icebp
sbbb
ret
add
sbb
loop
mov
jne
sarl
arpl
icebp
push
pop
jge
in
push
xchg
aaa
popf
lret
inc
clc
stos
pop
fnclex
jns
lret
bound
lret
sub
push
pop
push
lret
xchg
jne
push
lods
lret
rcrl
sub
lret
or
xchg
ficompl
or
int3
cwtl
sbb
dec
xchg
dec
aas
insl
push
xchg
mov
xchg
popf
xchg
xor
jle
pop
negl
stos
jns
lods
mov
stos
jo
loop
jne
rorl
call
mov
add
fldenv
xor
inc
xchg
mov
mov
rclb
fs
divl
cmp
push
pxor
fidivrl
mov
lret
adc
xchg
clc
loope
ret
icebp
xor
inc
lret
push
sub
xchg
add
lret
mov
or
btr
out
cmp
mov
jno
lock
into
loopne
cli
and
lret
icebp
addps
lret
addl
test
popa
sbb
int
jle
in
aad
mov
lret
clc
movsl
sar
xchg
bswap
mulb
icebp
out
xchg
cmp
inc
cmc
push
leave
aam
repnz
lret
sub
andb
sbb
mov
add
and
lahf
stos
cmpsl
call
jmp
pop
bound
jb
pop
jl
mov
stos
inc
aad
ret
ds
pop
shl
mov
and
mov
mov
sarb
pop
cmp
xchg
test
jge
fisttpll
insl
xchg
sub
loopne
enter
lods
fcos
pop
sbb
rorb
hlt
cmpsl
bound
scas
jb
push
arpl
and
lret
je
fiadds
dec
jp
shlb
rorb
ja
dec
arpl
loopne
ds
mov
xor
mov
in
js
shrl
cmc
dec
cs
mov
sbb
hlt
add
insl
movsl
dec
stc
xchg
jbe
xchg
lret
push
inc
mov
adc
sub
stos
lret
mov
ror
push
mov
cmp
jne
add
fidivrl
lds
lret
in
xchg
push
rcrb
cmc
mov
fstpl
jle
pop
fidivrs
mov
int3
xchg
xor
jp
bound
inc
mov
dec
dec
fwait
and
dec
ror
xor
fs
xchg
cmpl
jmp
jle
cs
pop
adc
xchg
mov
jno
mov
shlb
jle
mov
std
adc
mov
js
fcoml
push
int3
add
push
sub
pop
xchg
jno
lret
jb
and
imull
xor
adcl
push
aam
sub
xchg
jg
inc
ret
scas
shlb
push
js
outsb
loop
loop
cmpsl
fst
pop
cltd
lret
sbb
cmp
pop
cli
inc
add
stos
push
and
imul
ret
xor
sub
adc
pop
xchg
sub
fmulp
bound
popa
inc
imul
insb
adc
push
pop
lret
add
xorl
scas
mov
lret
repz
aam
adc
in
add
hlt
clc
sub
mov
lret
mov
pop
into
lret
out
out
jne
mov
mov
call
jmp
test
xlat
adc
ljmp
out
jecxz
mov
jbe
test
pop
and
outsb
lret
add
lcall
jo
or
dec
test
daa
in
and
xor
dec
cmpb
cmp
mov
jmp
daa
and
mov
dec
imul
add
xor
popf
lret
aam
scas
mov
jg
hlt
adc
out
in
mov
jnp
inc
into
fs
sbb
lret
ret
ljmp
test
lret
stc
jns
jle
sti
insl
pop
popf
shlb
push
daa
adc
ljmp
gs
int3
movsl
lret
pop
and
iret
jne
out
lock
add
lret
sub
pop
push
mov
fidivs
mov
lret
adc
cmp
out
stos
and
test
mov
scas
inc
out
icebp
xchg
mov
xor
lret
mov
xor
sbb
out
cwtl
rol
aaa
lods
subb
fs
sbb
add
je
mov
aad
out
sti
lret
xchg
xchg
hlt
add
sbb
rcl
mov
loop
ret
cltd
cbtw
lret
fimuls
dec
jl
mov
stos
inc
xchg
lods
xchg
rcrb
lret
cmpsl
mov
stos
lds
outsl
pushf
cld
and
fsubs
lahf
lods
dec
jnp
pop
pop
outsb
stos
lret
lret
call
lret
sub
xor
pop
int3
lret
push
sbb
lret
daa
xchg
or
mov
mov
xor
mov
in
ret
mov
jnp
lods
pop
je
adc
repz
and
jg
inc
pusha
or
mov
mov
push
rorb
ljmp
sbb
in
js
dec
mov
xor
xorb
adc
mov
cmpsl
imul
ja
mov
inc
mov
mov
mov
dec
lret
jns
bound
inc
push
sub
fsts
mov
mov
jg
lret
and
fisttps
push
mov
push
mov
inc
data16
sub
mov
test
jae
test
xchg
mov
fadd
ror
rolb
lret
int
mov
sbb
add
fwait
sub
mov
fs
outsb
cli
inc
push
pop
shrb
push
sub
ds
fcoms
int
jb
and
push
push
push
pop
fadd
movsl
mov
test
cli
add
dec
push
pop
aam
iret
cwtl
lret
adc
sub
ret
int
clc
cli
in
push
push
ljmp
or
shr
or
push
push
jecxz
out
stos
push
add
fwait
jmp
imul
mov
int3
setnp
dec
pop
lret
inc
daa
dec
adc
hlt
lret
pop
sbb
xchg
cwtl
insl
sub
xchg
mov
fnstcw
and
lret
push
push
cmpsl
movsb
mov
lret
ss
sarb
insl
mov
and
inc
mov
mov
mov
in
xchg
dec
xchg
or
xor
xor
lret
adc
mov
ja
jo
push
scas
pop
mov
add
inc
decl
rcr
icebp
push
fsubrp
cmp
xlat
cmpsl
push
add
rorb
aas
mov
dec
sbb
jb
cmp
jmp
lock
xchg
icebp
imul
insb
or
int3
sarl
mov
pop
lret
shrl
mov
movsb
jle
sbb
rorb
lret
xchg
sub
push
nop
arpl
lret
aaa
mov
adc
sbb
in
push
leave
repz
js
xchg
ss
movsl
fisubrl
xchg
fldenv
pop
mov
sar
daa
xchg
mov
imul
mov
lret
push
cs
dec
das
ror
sub
mov
scas
lret
xor
stos
cmpsl
stc
fcmovne
inc
inc
jno
into
xchg
daa
add
mov
call
sbb
out
movsb
or
sahf
lret
es
jns
push
push
cli
cwtl
mov
push
js
mov
iret
sbb
cltd
stos
aaa
cli
xor
inc
dec
dec
sbb
jmp
sub
lret
in
sub
ja
out
pop
xchg
outsl
jae
xlat
ret
lret
rolb
lret
mov
aaa
fisttpll
imul
xlat
mov
lods
lret
cmp
lret
scas
mov
xor
je
sahf
mov
add
sti
mov
ljmp
and
fcomps
jnp
ja
movsb
into
aad
scas
adcb
add
adc
push
jns
cmc
sbb
rclb
ljmp
into
inc
or
and
mov
lret
int3
push
in
or
movsb
rorl
push
sub
mov
lret
add
sbb
or
addb
xor
add
call
or
imul
mul
pop
cli
pop
mov
test
outsb
push
lret
hlt
nop
in
push
scas
pop
inc
addr16
inc
cmp
mov
aas
movsl
sbb
jb
addr16
mov
int
fs
cmp
loope
xchg
fimull
add
ja
lret
popf
pop
enter
lret
in
iret
mov
or
pop
mov
mov
jg
popa
push
cmpsb
push
mov
push
adc
fiaddl
jp
pusha
mov
sarb
lahf
movl
in
lret
or
lret
inc
ljmp
je
lret
mov
insl
arpl
jne
pop
addr16
sbb
xchg
inc
dec
ja
mov
add
loopne
flds
cli
lret
mov
movsb
xchg
sti
fcmovne
jbe
push
add
sub
mov
sbb
popf
scas
or
lret
test
jmp
fwait
sti
inc
cwtl
neg
inc
shlb
xor
fwait
lock
or
adc
ret
push
xor
push
mov
xor
orl
fistps
enter
dec
cmc
mov
loopne
rorl
sub
mov
push
fldt
xchg
lret
bound
lret
in
xor
jmp
inc
mov
mov
fistpll
fwait
mov
sahf
jno
lret
xor
lret
mov
mov
xor
sbb
cs
divl
ficompl
inc
in
ss
xlat
pop
mov
push
sbb
rolb
lret
dec
ss
xor
imul
xor
jl
mov
dec
jg
sahf
mov
jno
xchg
ret
xor
cmpsb
dec
mov
data16
lret
and
inc
repnz
pop
loope
lret
pushf
inc
int3
mov
lret
ds
outsl
ret
mov
push
or
lock
sub
add
enter
cmc
jae
xchg
cmp
ret
lret
scas
mov
lret
leave
xor
mov
xchg
rorb
lcall
lahf
in
aaa
aas
test
test
adc
fisubl
dec
adc
rcr
rcll
dec
push
call
mov
or
fwait
mov
mov
jo
in
aam
in
xor
or
loopne
mov
cmp
lret
jecxz
pop
rep
mov
sbbb
test
testb
lret
fnstsw
fcmovbe
clc
das
push
rorb
roll
xchg
lret
out
arpl
lret
lret
fisubrl
xchg
stos
jno
loope
pop
nop
or
int3
scas
mov
mov
lods
xor
pop
xchg
mov
and
test
mov
or
leave
sahf
push
cmp
inc
adc
sbb
or
xchg
add
loope
inc
mov
int3
sbb
or
mov
dec
ja
rorb
cmpps
adc
mov
cmp
and
adc
xlat
pop
sub
adc
rclb
aas
sbb
xchg
mov
inc
ss
lret
pop
shlb
jecxz
lods
addb
mov
hlt
shl
cltd
lds
fsubrs
aas
ds
out
dec
lods
jne
inc
and
fidivl
enter
push
int
sti
adc
push
lret
in
ss
fidivl
adc
inc
sbb
and
xor
mov
jno
repz
mov
mov
dec
push
and
jle
cld
inc
repz
loop
push
lret
cmp
cmp
int
imul
lock
popf
lret
xchg
sar
aaa
adc
pop
std
jecxz
xchg
sahf
ds
pushf
mov
xlat
dec
rcl
push
cmpsb
lret
popf
mov
lret
lock
ds
adc
or
or
fwait
mov
cli
fs
mov
pop
repz
push
dec
iret
cs
jmp
mov
cmp
xchg
inc
iret
inc
sub
fwait
dec
mov
xchg
stos
scas
cltd
sbb
dec
lret
test
xchg
push
or
push
jno
jg
mov
daa
lds
fsqrt
out
rcrb
repz
rol
lret
lcall
cmp
inc
scas
xchg
lds
faddl
test
daa
mov
stos
das
scas
data16
js
fidivl
inc
popa
mov
push
lret
test
dec
shrl
stc
pop
fcoml
mov
in
sbb
lret
sbb
outsl
pop
in
lret
pop
adc
jecxz
lods
mov
push
scas
mov
jl
call
leave
sub
jne
lret
iret
push
movsl
mov
jp
into
sub
mov
lret
fwait
mov
repnz
lret
mov
inc
xor
fisubrl
das
outsb
xchg
pop
inc
cmp
ljmp
jb
ljmp
fcomp
sahf
dec
lret
je
gs
aad
lret
sti
jmp
lret
movsb
int
dec
insb
lock
stos
cli
sub
pop
rcr
lcall
cs
pop
jno
movsb
jbe
add
mov
pop
cmp
int3
adc
dec
add
aam
lea
push
mov
int3
jne
lret
inc
scas
pop
je
sub
xchg
fisttpll
iret
cli
dec
xlat
scas
insb
lret
dec
cmpb
shl
into
xor
xchg
xor
mov
js
fmul
shlb
pop
cmp
outsl
shrb
mov
inc
mov
lret
sub
lret
clc
pop
ljmp
sbb
jns
lret
rorl
int3
les
cmp
cmp
lret
ficomps
rcl
cltd
adc
test
dec
mov
sbb
jle
cmp
xchg
stc
pop
ss
mov
jmp
repz
or
popf
call
int
hlt
or
in
adc
and
pop
xlat
xchg
sar
sbb
imul
hlt
fiaddl
or
jno
sbb
repz
cli
fs
jb
ss
jge
pop
orb
mov
push
lret
arpl
dec
add
rclb
sbb
lock
shlb
loope
mov
sti
inc
in
jne
ret
sub
stc
dec
popa
push
add
lret
stos
ss
mov
in
push
stos
std
sbb
mov
out
ds
loope
or
test
dec
orb
arpl
jb
jmp
mov
sbb
lret
icebp
call
push
mov
mov
int3
cmp
xchg
lea
xor
cmp
aad
xor
scas
fildl
or
pop
stos
cmp
rcr
mov
xchg
out
lret
cmpsb
and
xchg
icebp
sub
push
cmp
aaa
or
mov
fildl
mov
jecxz
addr16
fdivrl
or
adc
int
lret
push
cmp
lret
mov
dec
cmp
pop
out
mov
mov
sbb
rcll
adc
outsb
lods
rorb
xchg
cmp
ret
mov
lret
loope
adc
jo
aam
stc
inc
ljmp
fsubr
lods
cmpsb
stos
rcr
or
scas
rep
push
adc
dec
divb
cmp
popl
adc
xchg
and
mov
jne
es
shrl
clc
rorb
adc
lret
leave
out
mov
mov
ficomps
test
imull
or
sbb
lea
aad
sub
or
xchg
pop
sub
xchg
lods
push
insb
mov
cltd
mov
lock
lret
mov
lcall
daa
push
mov
xchg
dec
movsl
lret
or
lcall
pop
cmp
cwtl
into
push
ror
sahf
lret
cmp
ljmp
adc
mov
aas
lret
call
jnp
mov
lret
inc
movsl
jmp
inc
ljmp
test
jns
cmp
loopne
ss
push
cmpsl
ljmp
fists
lret
cwtl
xlat
push
mov
mov
cltd
lock
lret
insl
and
pop
and
mov
mov
xor
or
jnp
ja
push
fwait
jns
lret
jecxz
clc
mov
mov
enter
cmp
mov
imul
rcrl
mov
mov
in
jno
adc
fmul
fdivr
cmpsl
test
cmpsb
dec
push
lret
scas
adc
sub
leave
pop
jno
lock
jp
fcoms
or
in
xor
rclb
fisttpll
fistpll
leave
inc
and
pop
pop
pop
jae
push
jnp
or
mov
test
jge
push
rep
pop
cli
push
mov
mov
inc
sbb
cld
jns
aad
mov
add
lret
mov
or
sahf
jbe
rol
push
fistl
lret
movsb
enter
sbb
cld
aad
sbb
xchg
lret
mov
clc
lret
pushf
mov
cli
pop
pusha
inc
xor
sahf
pop
bound
sar
xchg
fimuls
ss
push
cltd
push
repnz
pop
icebp
add
mov
sub
ss
pop
mov
std
lret
dec
push
jle
jge
mov
mov
add
mov
jns
pop
arpl
aas
lret
or
shlb
clc
shlb
cmp
repnz
out
arpl
mov
add
cmpsb
mov
lahf
lret
mov
sub
push
pop
lret
cmp
push
rorl
leave
mov
dec
fsubrl
push
xor
sub
add
or
dec
lcall
mov
push
pop
cmp
push
cltd
repz
stc
decl
sub
xor
pop
xor
jg
dec
leave
lea
ror
inc
mov
xor
imul
add
mov
jmp
jns
shlb
stos
stos
mov
and
ficomps
pop
mov
add
jns
jmp
inc
mov
mov
bound
lret
pop
mov
mov
stos
xchg
je
sarb
ss
lret
test
jp
aad
lret
sub
dec
pop
push
dec
dec
sub
ret
out
outsl
pop
lret
xchg
add
leave
jg
sub
and
cmp
jnp
sub
int3
mov
shld
mov
mov
shlb
ficomps
push
pop
sarl
fwait
add
mov
test
ficoml
lret
mov
stos
lret
xchg
sbb
push
or
cmp
notl
sbb
sbb
movsb
decb
xchg
cmp
lret
or
push
dec
jbe
lret
xor
add
push
lret
pop
out
push
pusha
lods
lahf
lret
cmpsl
je
add
inc
pop
and
xchg
sub
xor
inc
xchg
aad
cmp
stc
and
insl
into
inc
sar
add
push
int
in
insb
mov
out
xchg
xchg
popf
xor
lret
mov
add
pop
push
or
jge
test
rcrl
mov
mov
inc
fsubp
mov
xor
roll
mov
push
inc
cli
test
into
fcomp
xchg
lds
dec
shr
push
pop
push
pop
fcmovne
shlb
push
gs
into
imul
in
sbb
inc
out
enter
adc
lret
mov
fdivl
lret
loope
mov
bound
sbb
adc
daa
in
call
repz
pop
xchg
movl
mov
lret
int3
push
icebp
es
subb
fcompl
mov
stos
jo
ficoms
pop
pop
inc
lret
pop
sbb
xlat
lret
and
add
mov
aam
pop
xor
dec
sub
cmpsl
test
xor
lret
lret
fwait
inc
ljmp
popa
and
pop
ds
push
or
push
push
sbb
lret
mulb
lret
mull
mov
push
nop
cwtl
adc
push
mov
pop
repnz
or
shlb
jle
lret
lcall
pop
loope
dec
shll
xlat
cmp
pop
add
push
mov
fmuls
xchg
nop
xor
cltd
push
sub
xchg
lcall
sahf
xchg
lret
mov
dec
sti
inc
ljmp
jmp
and
xchg
xchg
xchg
xchg
pop
sub
hlt
lret
push
lock
cmp
dec
xchg
xlat
popa
jp
xor
pop
xchg
xor
xchg
lret
gs
xlat
adc
mov
imul
inc
sbb
dec
or
lret
jmp
pop
inc
dec
test
loop
pop
leave
imul
ljmp
mov
add
sbb
xor
shll
cmp
mov
mov
es
pop
int
out
loope
mov
imulb
aam
fstpt
cmpsl
mov
aas
lret
popf
push
dec
xchg
sbb
lock
test
sub
cmp
dec
lret
pop
and
jmp
and
out
pop
sarl
shrl
aam
push
adc
call
lods
cwtl
or
lock
add
dec
aas
jns
lea
out
ljmp
into
aas
push
xchg
bound
push
jns
lret
lcall
lret
adc
dec
mov
lret
and
xchg
popa
sti
orb
jp
ja
scas
lret
test
jg
sbb
cmp
nop
or
xchg
popa
sub
fnsave
lret
ret
xchg
js
lret
push
adc
neg
push
push
sub
add
stos
mov
scas
cli
shr
fs
bound
in
shrl
cmp
sub
shrb
das
lret
adc
mov
mov
lahf
enter
cmp
inc
jl
stc
test
lret
imul
lret
in
mov
mov
lret
sahf
add
shlb
ljmp
int3
push
lahf
popa
lds
icebp
cmp
bound
lret
ds
insl
inc
roll
and
adc
loope
lret
int3
test
push
iret
lret
sub
xchg
out
inc
stc
dec
add
ret
mov
lret
gs
jns
add
or
push
mov
enter
int
fcompl
jne
stc
stos
clc
scas
lret
inc
in
mov
sub
shlb
cli
fiaddl
push
addr16
fsts
ds
sarb
sub
lret
pop
pop
aaa
cld
daa
adc
shrb
mov
add
cmpsl
dec
mov
adc
cmp
test
lret
mov
mov
filds
sbb
je
inc
or
push
sahf
xchg
loop
lret
and
and
jo
iret
add
lods
and
sbb
lods
sti
xchg
adc
pop
rorb
jo
xchg
imul
push
lret
sbb
dec
jae
cmp
xchg
mov
jecxz
jo
insb
sub
cli
lret
cmp
lcall
mov
sub
jbe
lret
mov
dec
mov
cli
cltd
xchg
lds
test
aam
push
test
enter
mov
and
dec
jo
rorb
mov
jg
xchg
cmp
mov
pushf
fs
xor
lret
dec
jae
out
lods
dec
rcrb
insl
xor
mov
lret
xchg
push
cmp
movsl
inc
dec
pop
mov
jb
std
mov
lret
pop
cli
test
lods
lret
movsb
arpl
mov
fisubrl
pop
sbbl
xor
cmc
add
adc
pop
ficompl
inc
pusha
xchg
rcll
jmp
fadds
jecxz
lret
std
jae
lds
jne
mov
clc
jmp
imul
out
cmp
mov
inc
xchg
js
add
or
inc
call
je
test
mov
mov
xor
popa
or
xchg
jo
mov
jb
add
lods
xlat
shrb
das
jns
sbb
inc
rorl
test
mov
daa
lret
cld
cmp
mull
jno
fildll
call
jnp
lret
and
jmp
inc
lret
shl
xchg
or
jmp
mov
ficompl
dec
push
sbb
pop
cmp
sub
out
or
push
cmpsb
hlt
and
sub
aaa
jb
sbb
lods
mov
adc
js
bound
inc
mov
lret
leave
xchg
add
mov
mov
and
inc
loop
inc
push
push
mov
les
push
push
fcmove
test
scas
add
cmpsl
sub
xchg
mov
mov
loopne
xchg
fmuls
pop
jbe
pushf
repnz
sub
xchg
mov
hlt
jmp
push
ss
lret
push
xchg
cmp
insb
cmp
imul
adc
xor
cmp
dec
scas
lret
data16
in
add
mov
ror
cli
push
adc
xchg
mov
mov
or
and
outsl
mov
in
call
scas
lret
cmp
adc
cmp
adc
dec
mov
shrl
xor
fstpt
inc
jecxz
and
sub
shl
lret
push
inc
idiv
rcl
lret
fcomip
outsl
cmpsb
add
test
negb
lret
sub
cmp
je
or
mov
ss
js
mov
jecxz
mov
inc
outsl
fmul
mov
add
cmp
insb
ljmp
xor
test
lret
jge
call
add
inc
jbe
sarb
push
mov
lret
incb
cmp
jecxz
pop
jl
enter
cmp
int
test
mov
pop
rclb
pop
fwait
ss
lret
xchg
xchg
push
jecxz
cmp
bound
pop
and
lret
mov
add
fmul
arpl
mov
lods
xor
lret
dec
push
lret
imul
mov
stos
addr16
mov
sbb
mov
daa
fisubrl
cmp
adc
xor
jno
loopne
pop
push
scas
or
sbb
fistpll
gs
popa
cmp
fstl
xor
push
stos
xchg
push
std
loopne
test
aad
insb
lahf
lret
jg
sub
pop
lret
fiadds
scas
mov
stos
lret
xor
je
outsb
jp
sub
pushf
scas
movsl
lret
mov
adc
push
cmpsl
lret
fbstp
push
lret
pop
bound
aam
in
sbb
in
lret
mov
inc
push
pop
lret
into
sbb
loop
xchg
loopne
lret
add
lret
pop
addr16
in
and
xor
sub
lret
inc
or
add
div
int
pushf
fisubrl
push
imul
add
rcrb
inc
std
lret
push
out
jb
and
je
outsl
fsts
xchg
es
push
xchg
data16
call
xchg
cli
sbb
mov
ja
fsubrs
lret
shrl
aam
jns
add
lret
icebp
lds
push
mov
sbb
loop
jne
push
lret
imul
in
push
out
and
popf
xor
sti
xlat
lea
incl
mov
test
push
mov
mov
adc
adc
lret
leave
dec
ja
and
lods
stos
repz
je
stos
lods
arpl
movsl
xchg
mov
sub
sarb
loopne
pop
jae
xor
pop
out
bnd
ljmp
js
push
dec
sub
bound
int3
jae
cli
sub
ljmp
out
sub
mov
dec
and
push
fwait
js
repnz
xchg
sub
in
pop
lret
mov
outsb
pushf
mov
test
push
adc
pusha
mov
sbb
into
lret
mov
icebp
dec
add
int
dec
mov
lret
movsl
add
jecxz
popf
xor
lret
sbb
sti
imul
add
shll
lret
ss
stos
mov
clc
mov
outsb
xor
sahf
xlat
addr16
lods
dec
test
test
adc
inc
fisubrl
xchg
int
loop
sbb
cs
xor
pop
add
pop
cltd
test
and
push
push
sbb
stos
iret
dec
cmp
int3
not
pop
stos
fistpll
pop
xlat
call
mov
push
movsb
pushf
daa
cmp
push
sub
out
cmp
icebp
xchg
cmpsb
cwtl
scas
mov
loop
rcl
sbb
les
test
in
mov
pop
cltd
cmc
pop
daa
lret
test
lret
xchg
inc
push
aaa
in
stos
popf
sub
push
je
pop
shrl
cmp
int3
stos
sub
push
imul
roll
hlt
inc
pushw
or
insb
int
es
or
lret
orl
jle
div
dec
cmp
aad
gs
mov
sbb
movsb
shr
das
ljmp
fcmove
push
call
cmpl
xchg
lret
stos
jmp
cli
push
jns
sub
js
xlat
cmpsb
imul
data16
pop
and
addr16
clc
scas
es
imul
fstpl
in
jmp
addr16
cmpl
ficoml
mov
shrb
in
out
sub
add
inc
pop
fldenv
dec
mov
loope
lret
dec
mov
imul
mull
outsl
lret
mov
stc
lret
adc
sub
outsb
std
out
add
lret
mov
dec
stc
mov
psrad
mov
mov
aam
sbbl
pop
sbb
addr16
in
outsl
push
sbb
stos
jb
push
xchg
stos
int
nop
repz
lds
mulb
inc
imul
fwait
int3
cmp
inc
stos
sub
fiadds
mov
sti
dec
sbb
imul
cltd
lret
cmp
jle
cltd
sub
addr16
sbb
pop
sbb
inc
aam
mov
lret
jns
in
scas
repz
push
stc
cld
in
dec
mov
loopne
mov
mov
add
cmp
mov
sbb
sbb
push
movsb
fimuls
push
inc
cmp
fadds
adc
lods
es
cli
pop
push
xchg
dec
inc
jge
ds
lret
popa
outsb
dec
push
cltd
stos
lret
or
fs
dec
dec
and
lret
adc
out
and
mov
loop
jne
fwait
mov
cli
mov
jns
cmp
add
dec
mov
arpl
out
cmc
mov
xchg
in
int
insl
es
int3
out
pop
dec
and
ja
test
sbb
adc
stos
pop
stc
test
aas
push
aam
daa
cmp
je
push
mov
into
pop
int
cmpsb
xchg
sbb
aam
xor
pop
and
cwtl
dec
repz
mov
mov
lods
dec
fwait
mov
push
mov
cmpsb
fistps
into
ja
jl
cmp
lret
dec
test
and
xlat
enter
sub
mov
repz
in
push
ret
lret
popa
outsl
jecxz
in
lret
cmc
dec
popf
mov
lret
arpl
std
out
lret
jo
inc
sub
int
nop
sbb
adc
sbb
imul
fidivrs
xchg
rclb
leave
lret
sub
sub
jno
imul
clc
daa
std
lret
add
int
mov
in
out
bound
xchg
je
pop
mov
lahf
cli
or
jmp
xlat
aam
ljmp
sahf
xor
mov
xlat
xchg
sub
dec
lret
inc
ret
pop
push
sbb
mov
shlb
sub
pop
or
in
ljmp
subb
xor
test
addr16
sahf
mov
shl
mov
fldcw
sbb
mov
xor
dec
sbb
dec
lret
cltd
xorl
lret
dec
push
insl
cld
lock
mov
and
lret
lods
scas
insb
sbb
clc
mov
addr16
cmpsb
mov
cli
inc
or
cltd
imul
mov
mov
push
dec
adc
loope
gs
nop
adcb
adc
xchg
cmp
xchg
arpl
or
inc
rolb
jl
cltd
lahf
js
cmpsl
and
or
lret
mov
xor
imul
or
inc
xor
aaa
push
lret
add
mov
out
mov
rcrb
leave
push
hlt
lret
loopne
cmc
pop
out
inc
cmp
lea
cmp
dec
or
add
cmp
mov
mov
les
jle
dec
adc
sbb
add
mov
into
dec
push
mov
jle
sub
lret
sub
xlat
es
or
inc
dec
dec
nop
cwtl
lret
repz
lods
fwait
pop
mov
and
xorb
into
mov
push
push
push
jo
mov
jmp
ret
cmpsl
lret
dec
cmc
int3
leave
arpl
lret
hlt
mov
fidivl
mov
or
or
lret
xorl
xchg
pop
repz
out
mov
lret
adc
sbb
adc
lret
or
lret
jmp
mov
cmp
repnz
js
mov
lret
in
movb
push
mov
imul
push
jl
int
inc
loopne
pop
pop
pop
fidivrl
inc
stos
roll
ja
inc
cmp
jo
imul
imul
out
rolb
call
pop
inc
lods
fidivrl
xor
fmuls
push
lds
clc
aas
mov
sub
mov
insl
push
adcb
mov
xchg
cmp
push
addb
rcl
popl
in
push
fidivl
outsl
push
mov
sbb
mov
jmp
and
arpl
mov
xor
lret
icebp
loop
std
dec
sbb
cwtl
inc
aas
out
popf
in
stos
inc
sbb
pop
shlb
jbe
test
lret
adc
cmp
mov
sub
movsl
adcb
add
lods
int3
rcr
lret
push
popf
adc
lret
enter
mov
lret
fcmovnb
push
out
sbb
cvttps2pi
mov
jns
mov
imul
into
fisubrl
pop
popf
xchg
add
fistpll
adc
cmp
jnp
mov
sbb
aad
jg
adc
lret
in
pop
cwtl
popa
addb
clc
lret
popf
or
or
out
lret
or
sbb
lret
arpl
pushf
add
cmp
aam
pop
inc
adc
mov
xchg
pop
mov
jle
lret
out
scas
in
jb
ror
mov
out
mov
pop
sub
jne
repnz
or
daa
add
imulb
lret
ss
dec
gs
lret
dec
xchg
cld
inc
ret
aaa
or
lahf
mov
push
std
adc
lret
ret
cmp
push
shlb
jle
inc
pop
adc
push
filds
cmp
lret
js
aaa
or
lret
stc
mov
jge
inc
ficompl
xchg
cmp
lret
cltd
inc
aas
aaa
mov
lret
out
outsb
xchg
iret
lret
and
lret
movb
ret
insl
mov
out
xchg
stos
ds
ss
scas
rcr
dec
pop
pop
adc
add
jae
or
ret
lcall
pushf
ljmp
negl
ljmp
call
lahf
lret
repnz
jle
lret
mul
fs
scas
nop
lret
out
test
mov
data16
jl
sub
test
cli
jle
mov
stos
loopne
lret
hlt
and
popf
ret
les
rolb
jbe
pop
pop
push
add
xchg
adc
jl
iret
and
or
xchg
popf
and
mov
aam
sbb
cwtl
je
add
jecxz
cli
mov
cmp
and
std
inc
movsb
aad
lret
cmc
addl
jnp
lret
rcrb
fidivl
mov
js
mov
aas
xor
sbb
jl
lock
dec
repnz
test
insl
rcrb
pushf
popf
daa
cli
sarb
out
je
xor
xlat
mov
adc
mov
xchg
popa
push
mov
je
mov
lods
add
fwait
pop
gs
or
mov
push
dec
flds
cmp
dec
pop
int
or
dec
lret
fiadds
addr16
cmp
roll
dec
pop
dec
jmp
push
mov
xchg
lret
jmp
scas
lret
test
fstpl
sub
out
jns
in
xor
mov
movsb
aas
inc
sbb
lret
mov
loopne
ficoml
ret
aaa
mov
call
cs
jne
orl
loopne
cmp
data16
push
mov
sub
aaa
lea
mov
test
mov
pop
pop
insl
ds
add
out
int3
fnstenv
and
stos
inc
sub
vunpckhps
cmp
and
lret
inc
pop
push
test
cltd
cbtw
pop
mov
lret
int
cmc
xor
add
gs
dec
push
ds
ljmp
push
clc
out
sbb
xor
push
pop
or
jo
popf
sub
mov
sarl
in
filds
insl
stos
int3
cs
shl
ja
jne
sub
sbbb
jno
in
cmp
and
jecxz
mov
aas
iret
ret
cmp
sbb
sbb
mov
ret
shrb
jns
test
adc
lret
arpl
mov
test
add
and
pop
lret
pop
push
outsb
jo
sti
lret
pop
fldenv
jg
js
lret
adc
add
inc
dec
push
mov
out
dec
xor
cmpsl
mov
in
cmc
xlat
push
cmp
int3
ja
pop
iret
lret
xor
stos
xchg
loope
jg
pop
adc
iret
sub
push
xor
and
dec
or
mov
int3
jbe
fsubs
lods
sub
add
inc
push
lret
sbb
ljmp
out
test
mov
sti
or
add
lret
test
icebp
jmp
aam
sub
loop
cld
into
loope
lret
mov
leave
repz
mov
mov
scas
shlb
sbb
fs
incb
mov
cmp
loope
lret
lret
dec
mov
subb
in
lret
enter
pop
xor
std
test
movsl
daa
orb
inc
fwait
pop
inc
mov
push
loopne
inc
mov
pop
lret
insb
in
xor
int
lret
out
and
jbe
lret
icebp
call
mov
inc
cmc
jmp
mov
mov
daa
lret
aam
addr16
mov
xchg
out
pusha
or
aad
and
pop
scas
push
pop
shlb
ret
data16
push
xlat
aad
mov
jne
dec
mov
fcompl
adc
bound
push
lock
lret
out
iret
mov
sbbl
test
mov
aad
lret
lock
mov
xor
nop
mov
into
add
test
outsl
lret
inc
aas
and
cli
cvtpi2ps
sub
mov
pop
cmpsl
out
scas
dec
dec
mov
pop
test
xor
loopne
lret
andl
cmp
jnp
sub
out
sti
out
stos
pop
cmpsb
pop
lret
ret
scas
pop
xor
cmp
or
int
adc
jmp
mov
mov
cs
faddl
adc
pop
ret
cmp
mov
sub
dec
inc
xchg
mov
cmpsl
mov
cmp
mov
add
and
jae
jge
addl
push
mov
aaa
and
mov
hlt
lret
jp
jl
jns
lret
mov
mov
inc
and
sub
mov
outsl
sub
lret
aad
mov
sub
pop
push
jp
sbb
pop
xchg
into
decl
xlat
cmp
cmp
jbe
mov
loop
dec
adc
lret
cwtl
sahf
jb
jo
lret
fsubrl
add
jecxz,pn
into
mov
lret
pop
lock
out
or
ds
call
jg
pop
and
hlt
fs
stc
fwait
inc
sarl
lcall
sbb
lret
sub
inc
mov
pop
mov
outsl
sahf
push
aaa
push
cmp
in
stc
aam
jno
lret
pop
testb
imul
cmp
sbb
jmp
lret
xor
or
lock
lret
pusha
mov
lret
or
cmpsb
cmp
lret
cld
or
xor
ljmp
cmp
js
aam
in
dec
lcall
cltd
pop
lret
jmp
lods
popf
lret
addr16
cli
xchg
sbb
icebp
mov
mov
imul
pop
cmp
xor
mov
push
or
push
in
xchg
xor
aam
mov
cli
push
pop
jecxz
lret
nop
cmp
lret
pop
les
and
clc
xchg
pushf
pop
bswap
mov
adc
iret
movb
loopne
sbb
xchg
lret
cs
sbbl
lret
sbb
lret
mov
mov
aaa
lea
mov
or
jns
push
mov
into
outsl
lret
jae
in
jp
mov
cmpsb
lods
mov
shl
lret
cs
add
mov
adc
sub
cmpsb
popa
mov
loop
dec
cli
icebp
adc
aam
push
push
sti
lret
mov
add
shrb
movsl
adc
jecxz
mov
lods
daa
aas
jns
movsb
xor
repnz
call
mov
pushf
cli
mov
into
mov
mov
or
js
into
pop
test
aad
lret
out
out
stos
jnp,pt
mov
mov
lret
scas
cmp
mov
sub
mov
int3
pop
push
jl
adc
add
sti
psrld
dec
jp
clc
add
loop
add
push
or
cld
dec
mov
cmp
repz
xchg
pop
or
mov
fneni(8087
call
shll
aam
add
rcr
inc
repz
lods
jae
nop
in
jmp
jbe
out
or
mov
add
test
aam
or
mov
fimull
pop
int
sahf
lcall
lret
call
and
adc
imul
imul
insb
loop
test
jecxz
cs
enter
or
cmp
lret
movsl
popf
xchg
cmp
cmpsl
push
ror
shr
cmp
push
call
mov
cmp
jmp
add
test
jle
or
push
clc
adc
lret
ret
and
jle
lahf
stos
idivb
dec
rcl
add
sti
rorb
lret
in
jns
in
lret
test
push
jp
mov
cld
lea
into
lret
lods
stos
loop
or
sbb
cli
lret
cmp
or
lock
xor
xor
call
push
jno
out
test
lret
xor
sti
sub
ficoml
xchg
xor
lret
in
out
outsb
sahf
xchg
mov
andl
adc
xor
mov
push
lret
jo
rolb
bound
ficompl
adc
lret
cltd
bound
mov
xchg
fstps
xchg
fmul
inc
fidivs
or
and
mov
add
je
and
fidivrs
pop
pop
clc
jbe
cs
call
fsubrs
xchg
imul
or
sub
repz
cwtl
lcall
test
cli
cmp
and
cmc
arpl
adc
outsl
stos
adc
aam
inc
inc
cmpsl
into
clc
lret
aas
mov
adc
push
pop
int3
lret
dec
into
ret
mov
xchg
cltd
adc
insb
lods
outsb
or
lret
in
lds
cmp
loope
jle
out
ljmp
rol
lods
stos
sbb
rolb
arpl
cmpps
aaa
fistpl
inc
push
lret
cli
out
adc
aam
stos
loop
lret
adc
in
orl
or
scas
je
in
rcrb
and
push
mov
sub
addr16
notb
fwait
push
jns
test
dec
adc
add
insb
push
dec
movsl
cli
mov
out
push
sub
scas
dec
add
or
pop
sub
es
fadds
sub
and
pop
movsb
aam
dec
repz
dec
shrl
sbb
lret
icebp
lock
mov
sub
loop
popa
and
mov
push
and
lea
lret
or
out
lret
lret
mov
inc
cmp
xor
jnp
xchg
outsl
sub
push
loope
lret
call
inc
lret
cmp
dec
fisttpl
int
mov
xchg
test
xchg
lret
mov
lds
pop
pop
mov
adc
pop
add
mov
lods
testb
cli
pop
sti
ja
xor
push
icebp
enter
rolb
int
push
pushf
mov
pusha
sahf
mov
ret
lret
mov
test
lret
cltd
push
pop
mov
jne
lret
pop
inc
scas
inc
cmp
mov
dec
out
push
mov
lret
jnp
in
jl
lret
pop
dec
mov
pop
lret
in
stos
or
cli
lret
mov
sarb
mov
push
fwait
or
xchg
lret
push
xchg
clc
mov
pop
gs
mov
fs
mov
xchg
xor
shrb
shlb
jp
mov
mov
cmp
and
sub
lret
jmp
repnz
lcall
pop
std
xor
ficoms
setb
loopne
inc
jmp
sti
and
nop
jle
sbb
xchg
lret
fisttps
imul
lret
out
inc
mov
les
das
mov
arpl
pop
adc
push
lret
mov
inc
or
pop
jg
push
data16
lret
lods
in
cld
iret
jmp
enter
or
repz
lods
mov
fiadds
push
cmp
sbb
mov
andl
and
jmp
inc
push
cmc
std
xlat
or
fisubrs
popf
sbb
inc
popa
adc
or
and
mov
push
mov
cli
sbb
push
jno
mov
insl
popa
push
lret
add
pop
into
jle
push
pminub
add
adc
jne
jbe
lret
xchg
sub
pop
add
push
pop
clc
sbb
push
pop
cmp
sub
ljmp
jmp
lcall
cmp
int3
mov
mov
cmp
push
mov
add
adc
out
pop
push
xchg
aaa
sub
push
xorb
pop
sub
jmp
pop
sbb
jge
in
pusha
clc
and
bound
jns
fcmovnbe
scas
leave
and
cmp
aas
inc
movsl
iret
cmp
je
cmp
aam
jle
lret
jmp
lret
insb
mov
sub
enter
loop
out
inc
lret
mov
stos
lret
sbb
lret
movsl
in
lret
int
cmp
movl
shlb
sub
cmp
or
loop
cmc
adc
loopne
aas
fnstenv
xchg
dec
rolb
addr16
out
cs
loop
int
push
inc
xchg
mov
lret
clc
add
xlat
cmovno
adc
adc
mov
push
xchg
testl
ds
in
out
mov
lcall
fwait
inc
pop
add
test
xchg
imul
mov
mov
lret
inc
sub
ljmp
lret
mov
scas
and
and
repz
mov
lods
fisttpll
mov
jno
lret
imul
in
dec
lret
mov
or
jns
mov
pop
pop
lret
pop
loope
mov
lret
shll
out
cld
lret
imul
mov
andb
inc
xlat
sub
or
lret
xchg
jle
imul
inc
lret
pop
call
cmp
lods
xchg
loopne
scas
mov
fcmovb
lods
ret
push
mov
adc
ror
frstor
inc
scas
sub
jno
and
pusha
sbb
lret
pop
pop
cmpsl
movl
mov
xchg
cmp
fisubrl
pop
and
jge
pop
lcall
outsb
movsb
icebp
cmp
inc
adc
aad
push
dec
hlt
mov
cld
mov
iret
inc
jp
ds
sub
data16
cmpsb
imul
add
xor
push
xor
mov
lret
xorb
and
lret
push
xchg
loopw
fcmovnbe
lds
cmp
sbb
test
inc
lret
xor
push
in
test
popa
mov
mov
outsl
movsb
mov
xor
fstp
push
mov
lret
fwait
lods
inc
or
jecxz
addl
out
adc
je
jns
mov
sub
xchg
out
push
xchg
or
lods
outsb
xchg
lret
mov
push
incl
jl
fcoms
jnp
inc
pushf
inc
lea
aaa
pop
adc
aas
add
nop
les
fisubrl
xchg
test
jo
xchg
cmpsl
lret
inc
fisttps
in
out
mov
and
inc
lcall
jg
ret
sbb
jecxz
cmp
clc
add
mov
inc
xchg
cltd
cli
cmc
repz
adc
push
cmp
sti
outsl
mov
pop
pop
mov
dec
add
pop
cmc
into
out
aaa
mov
jno
js
inc
push
ficompl
ret
add
dec
cli
and
jecxz
iret
push
mov
call
and
mov
xchg
shr
stc
pop
shll
lret
jb
mov
hlt
lret
cli
inc
daa
fs
lret
jp
pop
push
and
dec
inc
loop
jne
cmc
test
mov
fcomp
and
jb
lret
cmp
adc
out
pusha
std
sbb
mov
loopne
mov
adc
lret
pop
add
lret
lea
jne
lret
push
jg
cmpsl
dec
call
sbb
stos
mov
adc
in
add
int3
stos
dec
lahf
repz
cltd
or
and
enter
lret
sub
loop
rcrb
test
ja
inc
add
mov
pop
xor
sbb
mov
ror
push
jbe
push
cmpsb
out
leave
or
mov
xchg
lcall
xchg
pop
int
lret
pushl
jecxz
lret
ficompl
cmp
cwtl
in
or
out
jle
call
mov
jecxz
shlb
stc
xchg
pop
sbb
lret
icebp
inc
aam
sbb
xor
mov
fs
test
cmp
lret
mov
ss
xor
jl
sub
ljmp
incb
aad
or
lret
sahf
adc
mov
mov
dec
cmp
mov
loop
jmp
stos
sbb
pusha
mov
mov
xchg
sub
into
push
inc
aaa
mov
rorb
mov
push
arpl
or
aas
sub
pop
pop
ds
sub
pop
sbb
sub
outsb
xor
lret
add
fiaddl
aad
fldenv
call
fcoml
shr
push
cmp
push
out
cmc
adc
popf
lret
mov
jp
popl
push
imul
jno
lock
aam
lret
mov
pop
lret
call
gs
ficomps
repnz
cmp
mov
fstpl
pop
adc
add
pop
adc
or
add
jns
lret
loope
pusha
jle
cwtl
lret
add
iret
movsb
pop
aam
or
sbb
movsl
leave
orb
pop
xchg
lret
push
mov
xor
iret
flds
pop
xchg
adc
push
aam
rcr
fdivrs
add
xor
lret
sbb
js
lret
dec
cli
mov
insl
mov
sub
add
add
into
in
stc
gs
cmp
sarb
fldl
ret
sub
mov
cwtl
stos
dec
lret
fnstcw
call
adc
push
mov
xor
leave
lret
sub
jg
xor
cmp
inc
mov
push
inc
or
aam
stos
scas
cld
xchg
leave
repnz
cmp
icebp
and
mov
xor
out
je
call
dec
sub
aas
fnstcw
lret
mov
adc
mov
xor
mov
cmp
je
mov
lret
pop
cmp
fisubrl
lret
rcrb
xor
lret
adc
lock
lret
shl
sbb
adc
sahf
fcoms
dec
mov
dec
dec
cmpsb
std
pop
lret
sbb
jnp
push
push
mov
mov
scas
repz
xchg
nop
pop
lret
lret
xchg
sbb
loope
in
gs
hlt
or
out
sub
sti
int3
dec
ret
lret
in
mov
lea
stc
shrb
aas
scas
aaa
sbb
in
xchg
cld
in
mov
dec
sbb
and
add
add
xorb
lret
lods
stos
std
jp
dec
or
fidivs
add
incb
xchg
mov
faddp
aas
shrb
call
dec
fistps
or
jmp
adc
jb
lret
sahf
cld
mov
fnstcw
add
push
sarl
push
test
xchg
arpl
stos
add
mov
adc
jmp
xor
mov
or
inc
std
ficompl
lret
xchg
test
inc
lret
jb
jno
je
or
aam
adc
insl
pop
mov
in
sub
shrb
cli
sub
push
mov
or
insl
push
rcr
cmp
jmp
fiadds
lret
icebp
out
mov
bound
add
fwait
mov
lret
sbb
dec
dec
sbb
dec
lret
lret
arpl
insb
enter
mov
pop
mov
add
or
std
ret
js
loope
lret
outsb
pop
mov
dec
mov
sbb
jo
sarl
xor
arpl
mov
lret
neg
xor
dec
adc
out
int3
sub
fidivrl
dec
in
ret
cmpsl
nop
xlat
cli
push
cmp
or
or
cs
lret
ss
xchg
sub
adc
lods
lds
das
addr16
outsl
call
xchg
mov
lret
lods
xchg
push
cmp
push
adc
iret
loope
lods
pushf
ror
add
xchg
js
or
cmp
ds
xchg
dec
jae
sarb
ret
fidivs
push
sub
mov
mov
cs
jp
cli
ret
in
jnp
pop
jb
lret
xchg
and
dec
stc
int
sub
mov
aaa
nop
mov
xor
lret
out
jmp
mov
cmpsl
sbb
pop
lret
add
push
stos
jp
lret
sbb
xchg
dec
cltd
js
fstl
fsubrp
sbb
adc
mov
fxch
popa
cld
addr16
lret
xchg
xchg
test
ja
lret
cmp
imul
fiaddl
lret
xchg
test
jge
jecxz
sub
xchg
lret
rcrb
sub
inc
enter
imul
xchg
xchg
xchg
xchg
mov
inc
lahf
mov
jl
xchg
mov
mov
sbb
shrb
jae
fisubl
lods
mov
shld
mov
add
daa
push
lret
movsl
cltd
jp
xor
cld
pop
mov
push
insl
dec
lret
cwtl
adc
and
out
sbb
mov
call
jb
ja
mov
pop
or
add
shll
mov
movsl
sbb
lds
or
adc
inc
fsubrl
idivl
cmpsl
ljmp
sub
aas
mov
loope
lret
sub
loopne
mov
in
lret
aas
xlat
lret
call
mov
cs
add
lret
out
dec
and
xchg
adc
adc
push
mov
fstps
dec
lahf
lret
into
lods
cmp
mov
jne
dec
sub
pop
ss
test
or
lret
aam
dec
sbb
std
mov
hlt
mov
inc
jp
fdivrp
repnz
dec
lret
ljmp
imul
lret
repz
xor
shr
stos
scas
in
push
pop
ljmp
add
cmp
and
cwtl
out
push
sbb
pop
cld
aam
xchg
pop
or
bound
mov
add
jecxz
inc
push
cmp
mov
popf
cmp
fdivs
push
sub
mov
cmp
ds
arpl
lret
hlt
pop
roll
stos
test
mov
push
mov
cmp
je
lret
adc
mov
dec
inc
test
aam
xor
and
mov
inc
out
and
int
pop
test
icebp
dec
ficompl
dec
call
lret
cmp
call
orl
pop
into
fs
lret
mov
jo
lret
je
push
and
call
xchg
aad
mov
jbe
mov
mov
inc
sbb
and
iret
mov
aad
lcall
mov
pop
ret
push
lret
lods
dec
mov
int3
sbb
icebp
cli
rol
adc
mov
or
je
jae
out
sahf
cmp
lea
push
sub
lods
repnz
fcmovb
or
dec
adc
aas
cli
xchg
into
cwtl
xchg
pop
lahf
push
add
lret
pop
mov
lret
mov
and
or
rcrb
sbb
test
add
push
pop
pusha
mov
andb
cli
sahf
rcl
in
sbb
stos
cs
popa
shrb
push
inc
into
adc
sub
ret
push
or
mov
mov
fldl
lret
or
insb
sub
lret
cmc
rorb
sub
jp
mov
and
inc
aad
out
fmulp
xchg
jne
fwait
iret
testl
clc
sbb
popf
jecxz
dec
pushf
push
mov
shrb
in
add
imul
out
not
sub
ja
lods
jg
into
aad
mov
popf
mov
jne
stos
shufps
into
jnp
loope
pop
cmpl
push
push
sbb
stos
pop
jae
cli
std
sti
adc
lret
xor
jbe
mov
push
mov
xchg
hlt
jge
cld
data16
pop
push
mov
stos
mov
sub
mov
std
mov
adc
pop
lret
scas
sbb
loope
mov
repz
adc
stos
pop
lret
idivl
dec
sti
pop
jb
or
jo
stc
shlb
mov
inc
pop
lret
rorl
bound
add
push
jbe
lret
loop
es
dec
lods
and
test
inc
test
lret
fdiv
inc
ljmp
lret
mov
xchg
inc
sub
lret
xchg
lret
dec
dec
add
insl
shll
cmpb
mov
call
cmpsl
pushf
insl
movsl
fstps
lret
and
mulb
adc
lret
mov
push
jns
lret
stc
lcall
aas
sbb
mov
cs
xor
xchg
aam
stc
mov
and
mov
lret
cmpsl
fidivs
sub
les
lret
dec
mov
lret
push
dec
ret
sub
insl
mov
xchg
addr16
jecxz
jp
mov
fcomp
lret
jbe
movsl
push
aas
push
lret
stos
cmp
daa
cld
inc
std
loope
dec
dec
lret
rolb
or
fstpt
icebp
cmp
or
movsb
bnd
sti
cli
dec
push
hlt
sarb
ret
decb
lods
fcmovne
fld
lret
add
mov
pop
jmp
and
and
out
adc
xchg
and
push
cmp
in
sub
leave
popf
adc
scas
lahf
stos
xlat
inc
adc
lret
sarb
sbb
add
lea
in
adc
push
jmp
dec
psrlw
test
cmpsb
cwtl
mov
mov
js
mov
inc
push
adc
inc
xchg
mov
lret
jbe
hlt
loopne
pop
lret
xor
lret
xchg
sbb
fadd
mov
loop
xchg
popf
movaps
je
mov
fidivl
loopne
std
pop
lret
psllw
js
pop
cmpsl
lret
xchg
push
movsl
sub
imull
lret
iret
xor
shrb
loope
fidivs
cmp
popa
inc
jp
add
ret
call
and
sub
out
cmp
daa
xchg
xchg
jl
lret
mov
arpl
fidivs
jg
cwtl
or
and
popa
outsl
jo
mov
ret
lret
in
mov
cmp
lret
pop
adc
lret
sarl
lret
dec
sbb
fwait
mov
das
scas
xor
sbb
pop
fidivl
insb
cld
push
fiadds
lods
lock
lret
movsl
adc
jno
jp
sub
push
lret
cmp
lret
out
sbb
les
lret
pop
sub
pop
outsl
cmpsb
mov
inc
lods
lret
out
push
push
pop
jb
mov
repz
dec
mov
lods
fsts
fwait
imul
add
sub
mov
push
inc
loope
and
jecxz
scas
push
decl
jnp
push
inc
daa
xor
out
mov
push
lret
and
and
hlt
mov
lret
shll
pusha
jmp
xchg
lcall
negl
push
sbb
lret
mov
iret
add
add
xchg
aad
push
dec
lret
xlat
mov
jb
and
mov
cmp
daa
lret
movsl
pop
push
loop
fwait
lret
test
out
fimull
imul
hlt
rcr
dec
loope
filds
cmp
mov
lret
mov
iret
addl
in
lret
loopne
xchg
aas
or
push
mov
rcl
in
mov
mov
idivl
mov
inc
adc
roll
or
hlt
cmpsl
lods
mov
or
mov
pop
adc
mov
lret
dec
or
inc
cmp
shrb
lock
pop
sahf
pop
pushf
rorl
sbb
lret
cmp
mov
rcrl
pop
xchg
fdivr
pop
enter
mov
scas
mov
es
and
mov
in
ljmp
into
and
xor
mov
mov
adcb
xchg
pop
int3
mov
adc
fcom
sbb
adc
test
js
sti
lahf
lret
imul
add
test
dec
sbb
xor
in
pop
cs
insl
popa
push
lret
xchg
mov
xchg
das
push
stos
pusha
mov
repnz
stos
lret
mov
inc
xor
cli
nop
mov
mov
lods
es
ficompl
fstpl
rorl
lret
mov
adc
xor
jecxz
cvtps2pd
adc
add
inc
loopne
mov
cmp
icebp
xchg
sti
xlat
mov
fsubr
lahf
cmc
sbb
rclb
call
test
clc
dec
lret
mov
mov
mov
dec
xchg
fcos
jge
aas
lret
test
fstp
jno
nop
push
sahf
jmp
push
test
int3
aam
pop
das
xchg
shrb
roll
and
scas
das
jge
push
mov
mov
inc
addr16
mov
push
or
aad
mov
push
lret
push
xor
dec
jge
mov
test
lods
popa
daa
cli
test
sahf
push
imul
adc
dec
lret
mov
sbb
cmp
jp
push
das
push
in
mov
loope
insl
inc
pop
popf
xchg
cli
lds
cmp
aad
aam
xchg
or
mov
pop
rorb
mull
sbb
lret
int3
stos
dec
adc
or
mov
add
add
jge
mov
pop
insl
pop
into
ja
jg
icebp
mov
lret
push
ret
ljmp
lret
ss
dec
cmc
mov
loope
in
sbb
pop
jecxz
add
jl
add
dec
add
lret
data16
adc
ds
inc
push
push
iret
cld
popl
fisubrl
dec
add
pop
fldcw
lret
negb
xor
xor
cmp
das
lods
std
mov
and
mov
outsl
mov
pop
adc
pop
loope
sti
sahf
lret
adc
inc
or
lods
sbb
aaa
inc
roll
lret
mov
push
inc
jnp
cltd
mov
es
adc
jb
or
mov
sahf
fcomps
push
lret
dec
lds
mov
push
jo
mov
fists
cwtl
add
jge
fidivrl
mov
cmp
xor
mov
iret
jmp
lret
orb
lret
xchg
sbb
out
fwait
ds
imul
ret
outsb
pop
push
stos
cmp
xchg
adc
je
adc
mov
jbe
mov
sbb
mov
lret
call
or
inc
inc
lret
and
sbb
lret
iret
scas
push
cmp
or
scas
movsl
icebp
inc
push
in
fdiv
mov
into
mov
push
mov
xor
loope
lret
sbb
push
data16
cli
push
pop
jnp
test
push
jne
stos
lret
ljmp
or
mov
scas
in
test
shlb
sub
mov
frstor
mov
lds
cs
subl
mov
cmpsb
popa
arpl
xchg
lahf
lret
or
fisubl
fistps
cmp
repnz
in
xor
add
popf
xchg
cwtl
xor
pop
aaa
lret
sbb
lret
jbe
lcall
push
push
imul
sbb
xor
lea
dec
fidivrl
cli
cmp
adc
lds
inc
fiaddl
sahf
out
push
insb
and
into
mov
dec
stos
pushf
and
js
cmp
xchg
or
sub
adc
inc
fiadds
cmp
clc
test
push
mov
sbb
and
lret
lahf
call
or
lret
mov
ja
mov
inc
scas
clc
jmp
cmp
sub
xchg
sti
add
popa
lret
mov
lret
lock
loope
and
in
adc
stos
sub
jb
mov
loope
push
cmpb
mov
add
sbb
xor
mov
sbb
leave
pop
and
lret
dec
or
out
in
lret
and
test
aas
ljmp
scas
idivb
fildll
sbb
push
fsub
mov
cmc
sbb
cmpb
add
scas
sbb
cli
cld
jbe
xchg
int3
jge
ror
enter
and
dec
mov
divb
fcoml
inc
lods
shll
xchg
mov
test
add
jge
jno
xchg
fs
adc
ds
pop
inc
lret
xchg
popa
adcb
xchg
dec
xlat
ss
adc
insl
jne
jp
cmp
lret
jl
dec
test
lret
mov
cmpsb
lret
mov
jae
repz
pop
lret
fisttpll
add
or
imul
lret
mov
xlat
lret
inc
or
out
aas
lret
or
stos
adc
xor
inc
mov
mov
lret
test
sbb
mov
dec
mov
aaa
lods
xchg
sarl
test
cmpsb
hlt
out
or
sbb
ror
mov
sub
negl
sub
adc
repnz
lret
pop
adc
je
outsl
fidivrl
rcr
jae
xor
jle
mov
ficompl
cmp
inc
xchg
lret
xchg
jne
test
pop
lret
mov
xor
lods
loop
sarb
pushf
popa
pusha
jae
sub
fwait
or
std
shrb
jnp
jb
dec
and
lea
push
cmp
and
push
lret
xchg
je
aad
subl
cmp
inc
jmp
loopne
mov
xchg
or
add
fidivrl
cwtl
push
faddl
sbb
aam
lds
call
bswap
pop
xchg
jg
cmp
push
mov
into
divl
push
inc
sub
push
fbstp
jbe
lods
inc
push
dec
push
or
mov
into
shrb
cmp
aam
fnstcw
jge
sarl
xchg
mov
mov
lock
cmpsl
out
in
xor
mov
ss
stos
adc
jo
mov
shlb
in
lret
cmp
pop
lahf
lret
icebp
je
cmp
cmpsl
push
jno
jb
mov
fucomi
shll
pop
in
inc
push
test
inc
lret
push
cs
adc
retw
pop
or
lret
mov
or
push
adc
add
mov
push
pop
fimull
jb
sbb
jg
fcomp
mov
mov
into
mov
lret
call
mov
js
push
into
cmp
sbb
mov
mov
dec
out
dec
lret
jnp
popa
sbb
lret
cmc
jbe
mov
sbb
sarb
fs
jmp
xchg
into
sbb
inc
cmp
inc
adc
lea
xlat
mov
enter
dec
lods
lret
xor
gs
adc
lret
and
lret
fucom
push
ret
lret
xchg
sub
mov
dec
sub
sti
jns
je
and
mov
scas
out
fcmovbe
adc
cli
imul
aam
dec
or
pushf
xchg
adc
aad
sbb
mov
nop
xchg
mov
into
mov
repz
stos
aas
ror
pop
loopne
dec
std
popa
push
mov
icebp
iret
or
popf
fwait
lret
push
jo
rcrb
outsl
mov
inc
adc
sbb
add
xor
jge
cld
lret
test
rorb
fnstsw
mov
outsb
lret
cwtl
gs
and
push
adc
lods
sub
lea
ficompl
cwtl
sbb
lret
in
inc
adc
or
shl
movsb
xchg
inc
xor
mov
xor
lock
test
xchg
pop
js
lret
sahf
xor
xor
out
fildl
subl
in
mov
mov
dec
mov
xorb
and
scas
imul
daa
aaa
lds
js
cmp
inc
in
les
jnp
clc
cmp
test
mov
int
fmulp
push
loopne
pop
push
test
lret
sbb
jo
jb
sub
pcmpgtw
mov
xchg
repnz
inc
roll
or
aaa
cld
jge
mov
xor
fstl
iret
stos
scas
sbb
js
dec
stc
lret
ljmp
jb
inc
xchg
cli
jnp
pop
lret
pushf
xchg
cmp
add
imul
inc
jno
sub
inc
test
ljmp
add
nop
push
pop
cltd
jb
aam
lock
lret
sub
xor
or
jmp
das
lds
lock
cli
cmp
lret
mov
and
stos
scas
int
xor
shrl
add
mov
fimuls
or
push
and
fdivl
jns
lret
imul
repz
adc
jg
mov
mov
rcrb
and
dec
enter
popf
push
lret
in
sbb
std
lret
mov
bound
out
lret
into
dec
push
mov
pop
mov
fiaddl
imul
leave
add
xchg
addl
mov
lret
jb
jp
lret
sub
add
cmp
lret
jo
cmp
inc
mov
mov
lret
mov
fdivs
mov
and
je
fidivl
cmp
pop
jmp
orb
rcrl
adc
push
pop
loopne
test
push
fdivs
push
cs
xchg
sub
cmp
pop
push
inc
fsts
and
add
daa
cmp
jle
cs
stos
inc
icebp
mov
lds
int3
and
lea
lret
inc
dec
mov
jg,pn
dec
cmpsl
lods
test
push
ja
inc
jne
stos
or
adc
cld
loop
cwtl
ror
jp
push
in
add
mov
shll
rorl
lods
mov
sti
dec
push
sub
pop
sbb
stos
testb
cmp
lret
mov
cmc
cli
dec
ficoms
jno
lret
dec
inc
inc
or
xchg
cmp
roll
ljmp
sbb
mov
dec
test
mov
push
into
in
push
in
jbe
xorl
add
insb
inc
mov
fidivrs
jg
add
mov
pushf
and
clc
add
mov
int3
in
mov
cmp
shrl
xor
adc
out
into
popf
lret
mov
mov
or
lret
cmp
inc
fcmove
push
mov
cwtl
jno
lret
adc
cmp
dec
daa
pop
and
movsl
outsl
shrl
ljmp
mov
jns
sub
lock
or
inc
ljmp
aam
mov
add
ror
addr16
in
enter
lret
mov
lret
inc
loop
rclb
gs
mov
mov
sbb
xchg
out
out
mov
js
in
fcmovne
lock
pop
add
aam
lahf
inc
hlt
xor
icebp
jle
lret
mov
sbb
and
adc
mov
pop
lret
jns,pn
shll
shlb
pop
adc
push
or
subl
push
cmpsl
lret
mov
pop
lods
lret
and
es
scas
jecxz
or
fisubl
cltd
call
test
or
mov
adc
jmp
outsb
mov
movsl
dec
push
ja
insl
int
cmp
test
mov
or
xchg
xor
jle
and
inc
sub
shr
jbe
jnp
fidivrl
mov
rclb
fbstp
push
fidivl
fildl
test
mov
repz
mov
jbe
out
xor
lret
and
or
fcmovbe
dec
mov
mov
and
add
and
inc
inc
add
adc
dec
ja
sahf
push
pop
les
mov
ljmp
fsts
outsl
jmp
cmp
lret
out
stc
loop
lret
fstpl
xchg
pop
push
lret
pop
jbe
dec
mov
fcomps
jno
lret
mov
jecxz
testb
ds
aam
push
cli
xor
add
add
push
pop
push
in
inc
mov
xor
ret
mov
lret
scas
fildll
and
icebp
in
stos
enter
dec
jbe
pop
cwtl
mov
fucomip
dec
sub
ljmp
or
fwait
out
fisubrs
lret
jae
fisubl
cmpsb
lret
and
jmp
imul
fstps
fs
scas
test
and
dec
push
sbb
push
pop
movsb
lret
ror
repnz
pop
dec
loop
lods
and
xchg
lret
les
jnp
pop
stos
xor
inc
dec
pushf
lret
mov
mov
inc
test
sbb
int
sub
jnp
into
jecxz
arpl
pop
xor
xor
push
push
lret
rcrl
mov
pop
push
pop
idivl
repz
add
fadd
inc
ret
fwait
daa
lret
mov
in
lods
arpl
push
jp
ljmp
jl
and
fiaddl
sub
add
inc
lcall
mov
leave
cmp
mov
gs
into
in
lods
sbb
push
test
and
insb
jbe
psubq
int3
jae
rcll
in
dec
sub
data16
push
adc
jle
fxch
mov
adcb
adc
cmp
pop
add
shrb
jbe
rep
jb
in
das
adc
dec
es
clc
mov
jp
inc
divl
lret
shll
out
stos
lret
push
mov
sarl
mov
testl
mov
cs
fidivs
mov
jb
xchg
cmp
or
push
cmp
dec
cmp
pop
cmp
and
fnstenv
cmovb
and
shrb
lret
mov
dec
mov
out
lock
jne
inc
test
into
push
adc
dec
cmp
popa
rclb
stos
or
aas
xor
into
lret
scas
daa
pop
push
inc
loope
and
dec
mov
sub
nop
mov
lret
pushf
push
mov
enter
lret
xchg
push
push
ror
push
testl
lret
rol
lea
lret
cmp
loopne
add
pop
mov
fs
out
push
add
lods
lret
cmp
les
shll
jmp
jbe
cltd
push
mov
aad
and
cmp
test
sbb
lret
jns
dec
sub
fcmove
gs
lods
das
iret
enter
xchg
nop
xchg
shl
jne
cmp
adc
cmp
lret
mov
bound
adc
lret
cwtl
lret
lods
inc
and
fwait
ret
shll
sbb
test
data16
int
stos
xchg
add
lock
or
lret
dec
mov
lret
mov
out
lret
nop
hlt
es
dec
push
xor
dec
fs
mov
xor
mov
hlt
cmp
int
fwait
sbb
mov
pop
xor
mov
mov
js
inc
es
sbb
ljmp
push
jb
lret
cmp
loope
aad
rorb
inc
test
xor
lret
js
dec
cli
pop
popa
jp
pop
lret
roll
sbb
cmpsl
lret
icebp
stc
mov
xor
cmp
ret
cmp
into
mov
jmp
mov
test
lret
fisubs
adc
mov
sub
jae
aam
imul
pusha
gs
adc
mov
testl
jmp
or
pop
or
mov
data16
mov
aam
inc
dec
inc
lret
pusha
das
and
or
jecxz
filds
into
xor
roll
dec
lods
je
jnp
imul
or
jns
jg
fistps
or
pop
dec
fs
les
lret
call
sbb
xchg
decb
cmp
data16
sarb
lret
cmpsb
rclb
loopne
ljmp
xchg
mov
ficoms
mov
fidivl
cltd
cmp
mov
rcrb
sti
jbe
loopne
cltd
popf
push
addr16
mov
xchg
mov
lret
lahf
xor
fadds
add
lret
shlb
inc
lds
sub
add
imul
movsb
cmc
sar
lret
mov
loopne
mov
shl
push
push
gs
add
lods
mov
fwait
cltd
ret
mov
into
cwtl
dec
lock
cmp
jb
rolb
sti
cltd
out
jno
cltd
mov
sbb
rcrl
fidivrl
dec
leave
into
movsb
lock
mov
lret
or
jecxz
or
test
popa
repnz
sbb
fdivr
stos
pushf
lret
test
or
jle
lods
and
mov
insb
loopne
add
xchg
pushf
adcl
fsub
or
int3
call
clc
cmp
int3
in
fcmovne
lret
loope
rep
jns
mov
sbb
push
mov
xchg
iret
test
inc
xor
in
lock
sbb
pop
jg
fwait
addr16
ret
or
inc
cmp
sub
add
mov
add
mov
inc
lret
daa
sub
lret
lods
in
mov
mov
jl
rorl
jmp
pop
dec
lret
mov
push
repz
jb
lcall
mov
movsl
add
subl
push
mov
push
lret
stos
push
dec
into
in
in
pop
addr16
push
bound
lods
mov
xor
mov
movsl
lret
xor
jge
ficompl
out
pop
iret
mov
lret
sbb
mov
lret
mov
cli
inc
lret
stos
lcall
ja
dec
sbb
mov
mov
dec
dec
lret
sbb
jbe
gs
aad
lret
jae
aad
cmp
push
xchg
xchg
test
div
cmpsl
mov
push
mov
lret
es
aaa
sbb
scas
lret
cmpb
cmp
xchg
add
adc
dec
cli
ljmp
xchg
pop
movl
cwtl
stos
loop
shlb
loope
out
flds
or
mov
xchg
shrl
sub
clc
shll
pop
xor
stos
sbb
stc
aam
rorb
push
cmpsb
sti
loope
mov
mov
shrb
cli
mov
out
das
movsb
rcr
cmp
scas
inc
call
shrl
repz
loope
cmc
lret
xchg
sbb
cmp
loopne
sub
decl
sbb
pushf
mov
sahf
lret
shrb
dec
in
lret
push
outsb
mov
and
rorl
inc
lret
dec
jns
xor
mov
lret
add
inc
pop
pushf
lret
mov
and
xor
adc
sub
jno
dec
xor
out
arpl
nop
mov
fdivl
das
lret
pusha
fxch
outsl
mov
lret
ret
das
lret
xor
adc
and
test
push
cmp
lret
inc
jns
mov
cmp
fists
ret
das
pop
dec
rcrb
pop
jg
insb
cmp
lret
shld
imulb
jg
pop
jae
lret
pop
fadds
mov
cltd
push
mov
and
add
xchg
lret
outsl
andl
mov
or
jge
push
fcoms
in
lret
cwtl
test
xchg
dec
sub
insl
adc
lret
and
dec
sbb
scas
lret
iret
xor
ds
push
test
out
out
cltd
cltd
xchg
loop
stos
dec
push
mov
dec
push
cmp
inc
dec
jmp
sbb
mov
stos
mov
xchg
lret
jno
adc
cmpsl
xlat
pusha
inc
sbb
stos
jmp
jle
pop
shlb
dec
inc
shll
leave
cmp
or
sbb
cld
mov
jnp
stos
jo
pop
mov
push
push
rcr
lret
fwait
sbb
imul
pop
cmp
movb
pop
mov
fildll
lahf
jecxz
repnz
lret
push
aaa
cmpsb
xchg
stc
in
jns
mov
mov
jmp
mov
push
add
adc
pop
or
add
jno
jg
mov
adc
lret
push
divps
stos
sti
enter
inc
cmp
inc
nop
call
jmp
lret
cltd
adc
lretw
inc
xchg
cmpsl
jge
push
lret
mul
gs
pop
lret
add
lret
loop
jbe
icebp
int
mov
fs
rcr
adc
mov
mov
into
lock
popa
das
lret
cmpxchg
in
mov
imul
jmp
sarb
xlat
mov
sub
lahf
sub
xlat
jnp
popa
insl
lret
imul
loope
aad
pop
cmpsb
sbb
inc
xor
clc
lret
or
sbb
push
cltd
lret
push
xchg
or
push
lret
ror
in
xor
jns
jle
dec
pushf
fmuls
rorl
lock
mov
jecxz
jbe
and
mov
mov
xchg
push
sbb
sbb
lret
ret
dec
das
lahf
cmp
jb
mov
push
lret
mov
ret
loop
add
mov
lret
clc
sub
lret
xchg
shlb
lret
shll
fwait
cmpsb
mov
inc
loopne
aad
aas
ljmp
mov
mov
push
dec
stos
dec
rolb
aad
and
inc
sahf
push
pop
outsl
scas
in
iret
and
adc
dec
je
test
daa
xor
dec
dec
into
sub
pop
lret
add
mov
aad
lret
je
rol
xor
test
scas
push
rorb
enter
lret
adc
int3
loop
lret
pop
mov
cmp
jo
call
cmpsb
mov
cmpsb
rcrl
imul
lea
jbe
pop
dec
insl
aas
mov
mov
js
outsb
xchg
rorb
inc
cmp
lret
dec
repz
int3
data16
xchg
lret
or
lret
lock
sub
das
hlt
cld
ds
call
push
sub
inc
int3
add
and
mov
mov
cmc
xor
pop
mov
insb
jnp
cmp
fistps
sbb
mov
inc
pop
ret
ss
jns
push
dec
mov
into
cltd
add
push
fsubs
sbb
jo
test
stos
jne
lret
push
xchg
dec
das
popa
clc
cwtl
inc
dec
lcall
mov
aad
sbb
cmpsl
fs
pop
repz
cmp
cmc
into
in
dec
xchg
xlat
imul
jmp
enter
cmc
pop
add
jnp
sbb
sub
jg
ja
gs
in
notb
push
cmp
loopne
lds
push
lods
pop
scas
push
mov
inc
fisubrs
pop
inc
cmp
lret
pop
cs
cmp
stos
aam
fisubrl
das
into
insb
push
add
ss
lret
adc
xlat
cmp
sbb
cmp
shrb
hlt
add
dec
das
mov
pop
pop
stc
insb
lret
push
popa
loopne
jg
lret
push
xchg
out
add
xor
enter
lock
loopne
xor
push
mov
cmpsb
clc
pop
roll
pop
sbb
inc
pushf
jno
ljmp
outsb
ds
stos
inc
sti
lret
int
add
cmp
in
fistpl
pop
js
lret
je
repnz
sub
out
ds
sbb
xlat
shlb
fwait
push
xchg
mov
or
into
in
jno
jne
xchg
inc
out
fnstcw
mov
pushf
mov
sub
jae
int3
pop
shlb
inc
fwait
out
push
mov
ja
les
pushf
mov
xor
inc
or
sub
outsl
jae
and
inc
clc
stos
iret
fmul
insl
xchg
mov
in
mov
into
lea
mov
lret
xchg
pop
lcall
lret
aas
or
dec
pop
push
cli
pusha
bound
mov
jmp
add
fcmove
jl
int3
mov
jo
cmp
pop
sub
ficoml
xor
inc
bound
popf
mov
je
dec
push
xchg
loope
lret
sub
cmp
add
dec
nop
inc
add
lahf
lret
subb
or
enter
or
into
mov
or
mov
sbbl
xor
lret
inc
push
add
dec
or
adc
test
add
mov
lret
lahf
fmul
jg
pop
pop
lods
test
lods
mov
inc
add
clc
fmul
out
xor
aad
pop
and
rorb
push
sub
loop
into
movsl
popf
incb
jae
mov
cli
mov
addr16
aad
test
stos
mov
xor
rcr
mov
in
pushf
lret
leave
mov
dec
xorb
dec
scas
mov
test
or
pop
and
mov
arpl
dec
lret
movsl
xchg
std
enter
repnz
mov
clc
push
neg
mov
cmpsb
lret
jnp
inc
cmp
jp
shlb
lret
lcall
and
imul
pop
adc
hlt
cwtl
faddl
lret
cmp
or
xchg
enter
test
call
stos
jg
inc
xchg
mov
jnp
mull
cmp
movsl
mov
ficoml
add
push
mov
arpl
orb
mov
push
adc
push
fs
bnd
pop
mov
add
stos
xchg
loope
out
sub
jno
ljmp
mov
lock
shll
cmc
inc
fists
sbb
xlat
fstl
fdivs
sub
ljmp
neg
shlb
pushf
xchg
lret
int3
push
mov
mov
push
mov
lret
out
loop
rcrl
dec
sub
sub
push
sbb
cmp
pop
pop
cli
xor
mov
popa
jns
xlat
shlb
dec
cmp
ror
xchg
mov
and
nop
fnsave
inc
rclb
scas
cli
sub
mov
rorb
lret
dec
call
cwtl
sar
stos
movsb
sahf
or
ljmp
add
pusha
add
lret
pop
subb
xorl
push
mov
cmp
or
fdivrs
mov
mov
push
xchg
and
dec
dec
popa
push
mov
insl
push
xchg
loopne
scas
fcoms
pop
mov
shlb
or
mov
push
sbb
fidivrl
out
ret
push
push
test
jp
and
fiaddl
mov
xor
jl
lret
rorb
lret
aam
push
test
fistps
stos
loope
incb
test
push
inc
cli
lret
cwtl
cmp
or
adc
push
mov
cmp
sub
rclb
push
insl
inc
outsl
lds
xchg
test
adc
fcoms
in
lret
add
cwtl
orb
mov
sar
mov
mov
lret
vpmadcsswd
ljmp
fadds
addr16
sbbl
xorb
ds
mov
lcall
jne
fisttps
je
js
lret
call
dec
lret
xchg
repnz
in
cmpsl
push
mov
outsb
popa
dec
or
nop
sub
mov
sahf
shrb
imul
fs
jns
dec
pop
push
cli
into
push
jmp
dec
pop
and
lods
cmp
out
inc
stos
lret
push
sbb
and
pop
cmp
cmp
ror
dec
mov
cmp
dec
jne
lret
push
out
add
mov
ret
sbb
xor
xor
mov
cltd
sar
sub
fldcw
inc
cmp
cmp
jno
fldln2
test
mov
lret
jg
xchg
pusha
rcr
push
mov
sub
lret
cmp
pop
int3
or
add
dec
mov
loope
lret
aam
test
movsb
add
ss
int3
ljmp
mov
arpl
xlat
cli
inc
shlb
pop
into
lret
jge
mov
lcall
lret
pop
add
stos
push
lret
fs
cmp
in
or
mov
push
fdiv
lcall
mov
lret
sbb
mul
aam
leave
insl
adc
and
mov
sahf
clc
cld
lret
xor
cmp
dec
mov
or
jl
lods
ficoml
push
call
pop
pop
or
lret
rol
sub
inc
lret
out
push
ds
adc
ret
or
mov
jl
xchg
in
lret
adc
add
pop
lahf
mov
add
add
pop
testb
dec
cmpsl
mov
das
adc
and
cwtl
int3
mov
dec
lret
mov
or
divps
test
mov
cwtl
lods
lret
sub
push
shll
out
push
nop
cmc
rcr
xchg
enter
jno
cmp
or
mov
xchg
sbb
jno
fwait
inc
xchg
popf
mov
rolb
insl
and
add
cli
lcall
mov
or
repnz
bound
mov
out
mov
jmp
repz
mov
in
nop
imul
ds
mov
mov
or
push
and
dec
lret
mov
sbb
cmp
sub
jge
imul
mov
icebp
xlat
ja
cmp
mov
lret
cmp
push
xor
cmc
into
loopne
imul
lret
inc
sub
mov
sub
cmp
lret
in
or
sti
add
fidivrl
in
cmp
lret
cmp
pop
mov
jns
aam
xchg
stc
jb
decl
out
ds
test
lret
pop
cmp
mov
and
addl
xchg
jl
sbb
push
shll
push
inc
jmp
cmp
push
repnz
push
xor
into
jge
cltd
lret
in
adc
mov
add
loope
lret
and
mov
in
xchg
xchg
out
mov
sarb
movsl
push
aad
lret
mov
lret
cmovbe
cli
sbb
lret
mov
shr
mov
stos
cmpsl
shrl
ficoms
mov
cli
mov
cmp
pop
mov
fstpt
notl
test
adcb
pop
inc
stos
cli
jbe
mov
inc
loop
push
pop
push
fdivl
xchg
scas
lret
pop
cwtl
in
push
movsb
lret
xor
jge
xchg
cmp
int
inc
loopne
shrb
jnp
and
mov
decl
mov
dec
rol
jns
push
lret
js
mov
addr16
fstps
mov
cmp
cli
add
fst
sub
iret
xlat
push
popa
lods
lods
sub
add
loope
lret
push
mov
jbe
bswap
das
aaa
inc
mov
pop
adc
jp
mov
push
inc
cmp
push
pop
lret
jnp
lret
jle
cli
dec
enter
xor
int
loop
mov
mov
mov
push
cmp
and
xchg
in
jg
fadd
stos
lret
mov
dec
sub
cmp
xlat
hlt
cmp
in
test
in
jns
push
push
gs
call
fwait
outsb
push
fmul
mov
mov
into
pop
push
std
pop
and
cmp
cmp
sti
pop
daa
add
jne
adc
bound
int3
mov
mov
rolb
or
xor
addl
xchg
inc
lret
dec
std
cltd
insb
lahf
lret
sub
lret
hlt
test
cltd
lret
add
xchg
lret
imul
inc
jne
mov
dec
ds
int3
idivb
adc
fxch
or
mov
ss
lret
sub
dec
into
pop
lea
cmovg
jnp
dec
and
insl
and
sbb
jge
push
push
enter
jecxz
js
lret
repnz
das
pop
insb
sbb
cmp
sbb
fimull
mov
sub
jg
sar
outsb
cs
and
lret
call
outsl
lret
pop
xor
push
mov
adc
enter
mov
mov
in
ficoml
cmpsb
fs
or
lret
xorb
pop
cmpsb
adc
out
jns
fisubl
mov
pop
sbbl
lret
arpl
pop
jmp
pop
push
ljmp
jg
ja
pop
sbb
lret
testb
mov
adc
xor
ret
sbb
test
push
je
leave
lret
xchg
ret
enter
push
loop
push
loope
fcmovbe
cmp
add
mov
and
cmc
push
sub
adc
mov
add
cmp
pop
inc
pop
jg
push
ror
mov
and
cli
fsubl
out
jp
test
mov
fs
cmp
fnsave
lret
imul
dec
push
xchg
outsb
sub
inc
mov
mov
lock
aas
xor
sti
jb
mov
int3
js
jmp
insl
lret
jmp
in
xchg
fcompl
pop
mov
jbe
or
push
xchg
pop
rol
mov
mov
cmp
mov
aam
sahf
addr16
cmp
sbb
dec
lret
filds
adc
push
pop
clc
mov
pop
cld
lret
outsb
insl
cmp
arpl
mov
hlt
jno
or
ficompl
loopew
in
fcompp
xchg
push
lret
stos
mov
xor
or
add
fwait
and
xchg
add
lret
test
sub
or
xor
lret
stos
inc
xchg
mov
and
dec
fcompl
pop
outsl
dec
lret
dec
inc
add
fstpt
xlat
sub
mov
into
or
stos
aad
scas
mov
lret
jbe
adc
popf
cld
inc
into
and
jne
imul
add
xchg
lret
xchg
inc
sub
inc
xchg
jge
cmpsb
rolb
bnd
mov
mov
fldcw
int3
jo
lods
stos
lret
cmp
adc
repz
out
rolb
mov
inc
clc
xor
out
sbb
cmp
aam
lahf
fldcw
negl
stos
out
pop
inc
cmp
aaa
scas
iret
in
mov
aad
sub
cli
adc
dec
and
add
mov
stc
xor
fisttpl
jecxz
lea
int3
sahf
fdivr
mov
or
sbbb
ret
adc
add
adc
imul
or
lret
jge
enter
lret
mov
jno
mov
push
add
inc
mov
sub
jecxz
shrb
dec
pop
add
jb
test
mov
stos
lret
lahf
pusha
mov
das
into
or
hlt
inc
and
ja
stos
lds
lret
dec
lcall
inc
lret
jns
mov
sub
add
mov
dec
out
in
add
das
jne
cmpl
and
sub
cmp
cmpsl
test
adc
cmpl
jae
xor
sub
scas
lret
adc
iret
cmp
add
dec
ja
sub
jne
mov
lret
or
pop
fisubrl
lret
out
or
lret
cmp
popf
imul
int
push
or
cmp
lret
movsb
stos
into
cli
mov
les
pop
mov
mov
sbbl
inc
push
fdivrs
call
xlat
add
lret
jmp
enter
andb
and
mov
mov
or
xchg
pop
xchg
sub
cmp
clc
xor
mov
scas
jmp
fcoms
clc
loopne
or
push
pop
std
fs
lret
sub
sarl
mov
inc
adc
popl
jecxz
cmp
pushf
lcall
mov
jmp
insl
and
cld
and
push
cli
ficoml
enter
fldenv
lret
ss
sub
std
and
cmp
arpl
pop
inc
cmp
leave
push
mov
push
sbb
mov
or
push
pop
push
int
xchg
pusha
enter
test
das
lret
addr16
lret
mov
xchg
pop
pushf
push
dec
int
mov
mov
xor
mov
mov
cmp
or
call
and
lret
add
lret
and
ljmp
inc
into
pop
shrl
sub
add
pop
test
add
lret
rclb
rclb
iret
aad
jl
imul
pop
movsl
out
cli
mov
insb
xchg
fcomps
mov
movsl
inc
sub
push
pop
cli
hlt
popf
adc
fs
cs
jbe
jg
mov
pop
pop
repnz
push
shl
sub
dec
lret
pop
inc
sbb
lods
and
dec
outsb
sarl
xor
sub
dec
mov
mov
rcrb
jnp
push
sub
adc
pop
pop
out
divb
test
lret
gs
ret
movsl
fsts
and
lret
cmpsb
dec
push
xchg
sbb
popl
inc
lret
scas
push
pop
sbb
push
xor
leave
lret
call
inc
lret
jp
xchg
lods
cmpsb
stos
fnstcw
xlat
jne
in
fucomp
jno
lret
loope
ret
jae
mov
pop
aaa
add
push
lret
cmova
sbb
cltd
and
mov
inc
scas
and
repz
cmp
push
fs
loopnew
add
lret
ljmp
test
int3
cli
pop
mov
cld
jae
adc
mov
mov
lret
add
cmpsl
ret
popa
cmpsb
cli
inc
outsl
addr16
aam
xchg
mov
push
lret
push
dec
adc
dec
lret
test
cmp
dec
ds
bound
pop
dec
rorl
lret
in
outsb
fisttpl
and
nop
je
cld
fdivs
mov
insl
lret
mov
cmp
std
ret
stos
xchg
add
dec
push
loope
outsl
mov
into
mov
sarl
stc
cltd
jnp
vmovdqa
push
data16
xor
sbb
das
mov
push
jp
adc
mov
out
push
xor
add
inc
jb
mov
dec
xor
stc
fnstsw
xchg
push
inc
pop
or
fwait
dec
push
mov
ret
stc
lret
xchg
inc
and
xchg
dec
lahf
lock
ret
jge
jecxz
out
insb
and
shlb
adc
std
jbe
aas
dec
jns
push
popf
nop
jecxz
cltd
pushf
sub
shll
pop
loope
fsubrp
fs
mov
sbb
mov
sbb
lret
notl
mov
lret
adc
sbb
sbb
or
lret
imul
lret
jns
push
jmp
add
sbb
mov
mov
xor
in
fildll
sbb
das
enter
or
pop
pop
insb
paddusw
inc
lret
push
pusha
ficoms
stos
mov
cwtl
sahf
adc
fstps
jbe
ja
jnp
repnz
xchg
call
lret
bound
cmp
test
scas
or
lea
das
lods
inc
sub
xchg
sub
dec
iret
xlat
inc
stos
dec
adc
loop
movsl
inc
pop
out
add
int
test
adc
xor
lret
cltd
mov
xchg
pushf
idivb
pop
sti
cmp
leave
sbb
lret
mov
mov
pop
scas
mov
jbe
leave
or
popf
xor
pusha
mov
daa
adc
xorl
jp
in
push
dec
cltd
lret
aaa
sti
jecxz
mov
lret
pop
imull
mov
mov
xchg
mov
push
mov
cmpsb
enter
sub
hlt
sbb
idivl
stos
std
in
mov
aam
mov
push
aad
mov
rolb
fidivrs
add
and
fs
icebp
enter
or
ljmp
sub
shl
dec
jge
lcall
faddl
fs
ror
enter
mov
jae
xor
aaa
fistpl
outsb
iret
sub
sbb
mov
decb
adc
xor
lret
pop
mov
out
iret
ljmp
insl
lods
insb
cld
inc
push
sbb
int3
ja
out
pop
dec
jno
lret
pusha
subb
ljmp
addb
mov
sub
inc
imul
adc
jle
lret
test
or
jge
lret
shll
out
fcmovbe
push
subps
daa
xor
js
xor
lret
scas
pop
dec
inc
dec
dec
lret
pop
fcoms
sbb
ljmp
cmp
lret
sti
push
pop
push
notb
lret
pop
add
add
lret
mov
adc
in
jns
lret
iret
ds
cmc
movsl
jo
loop
rcrb
shll
jb
add
xchg
icebp
aas
lret
and
lret
pushw
loopne
add
or
xchg
pop
xor
jb
sub
jns
xchg
adc
arpl
add
mov
jle
inc
lret
mov
cltd
lret
add
lret
dec
lock
jo
nop
lret
jle
mov
push
sbb
fistps
sub
leave
pop
push
mov
in
push
lcall
adc
roll
lods
das
mov
fsub
pop
sub
rorb
or
mov
adcb
shrl
mov
fstpl
into
movsb
and
cmp
mov
fldenv
lret
faddl
out
xor
lret
push
pop
ds
lret
pushf
out
cmp
xchg
repz
inc
cmp
dec
cli
iret
lods
cwtl
sub
push
loop
or
mov
adc
cmp
adc
jnp
push
mov
out
xor
lahf
push
lret
cmp
iret
insl
lret
mov
pop
lret
shr
lret
mov
or
imul
inc
ror
fildl
rorl
push
fimull
cmc
pop
iret
inc
mov
or
rcll
jp
loope
sbb
inc
xor
mov
nop
push
cltd
fisttpll
sub
inc
lahf
push
mov
pushl
xchg
cmpsb
je
lret
mov
xor
outsb
sbb
push
adc
rorb
lret
in
mov
dec
or
or
push
jmp
cld
mov
sahf
lret
pop
popf
outsl
mov
jp
and
addb
bound
sub
rorb
or
jns
cmp
cmp
daa
test
push
push
mov
push
imul
push
lar
cmp
lret
and
mov
lret
mov
lret
sbb
mov
nop
fidivrl
push
aaa
jge
lret
xchg
pop
push
mov
lret
sub
lret
cld
das
mov
mov
mov
movsl
cmp
push
mov
lods
fidivrs
cmp
insl
add
push
out
xorb
inc
push
lahf
xchg
stos
sub
mov
lret
dec
popf
mov
fistpl
cltd
pop
inc
cld
popa
lret
repz
ds
stos
lret
cli
xor
lret
lret
ljmp
ja
push
aad
jnp
inc
pop
push
and
jae
xchg
dec
int
jno
inc
lret
pop
push
jg
push
pop
lret
into
or
repz
sbb
mov
loopne
mov
and
cli
inc
dec
mov
xor
dec
mov
jae
lret
fildll
dec
fdivl
xor
loop
fwait
jmp
enter
adcl
adcb
nop
stos
in
xlat
xor
fisubrs
cs
lret
incb
ss
lret
mov
jns
and
or
lret
iret
jmp
sub
lret
add
hlt
test
lret
push
mov
mov
push
aad
xchg
in
jmp
mov
mov
or
xchg
shrb
mov
cltd
cmpsl
sub
adc
xchg
aam
mov
push
push
add
clc
jmp
mov
jae
inc
dec
repnz
loopne
fbstp
lret
lret
push
and
out
cmp
push
loope
cltd
mov
mov
lret
test
lretw
test
jmp
js
movsb
fsubrl
in
lret
in
cwtl
xor
pop
jmp
addl
adc
sbb
icebp
dec
ret
pop
adc
inc
jmp
or
lret
fdivp
imull
dec
adc
cld
pop
xchg
outsb
arpl
or
pop
enter
int
push
daa
hlt
mov
loopne
sub
cli
xchg
xlat
cli
ds
popl
into
or
mov
pop
add
lds
lret
xor
pop
add
into
aad
pop
mov
ja
pop
daa
xor
icebp
fsts
xchg
ss
jmp
jae
lret
dec
inc
call
jb
loop
cmp
sub
and
adc
aaa
fdivs
pop
sbb
xchg
aas
lret
sahf
int
jbe
lret
push
ret
mov
stos
xchg
xchg
je
loopne
add
mov
bswap
dec
popf
push
xchg
push
and
test
lret
xor
rcrb
js
lret
gs
rorb
lret
dec
loope
pmaxub
xchg
pop
mov
adc
scas
int3
jmp
adc
aam
mov
mov
mov
ja
bound
int
nop
pop
repz
pushf
es
mov
pop
or
and
or
ficoml
loope
rcl
insl
lret
jp
leave
xchg
test
lret
jge
push
sub
inc
lahf
aam
pop
add
cli
leave
loopne
stc
into
or
cmp
loop
add
inc
sbb
lret
clc
pop
xor
lods
lret
xor
jmp
rolb
push
lret
pop
pop
adc
inc
cmp
push
lret
xlat
sub
xor
or
xor
in
lea
shlb
in
dec
ficoml
push
nop
jmp
jp
add
in
jae
jo
cltd
idivl
outsb
mov
lcall
shr
jmp
andb
dec
mov
mov
fld
and
std
ds
mov
mov
popf
cli
lcall
dec
lret
mov
ss
test
outsb
leave
pop
jb
sub
stos
cmc
inc
mov
add
lret
pushf
hlt
push
jmp
test
int3
jl
insb
fpatan
lret
pop
aaa
mov
dec
mov
xor
js
and
nop
rcrl
mov
inc
scas
lock
mov
movsb
bound
lret
lcall
xor
fcmovb
mov
je
lret
cmpsb
cmp
xchg
popa
sbb
cwtl
in
jns
lea
add
ljmp
mov
jg
fwait
in
xchg
sbb
dec
fnop
std
in
lods
mov
cmp
lret
push
sbb
cltd
push
lret
in
std
test
adc
sbb
lcall
lret
xor
xor
sub
mov
aaa
cmp
mov
scas
pop
push
pop
push
lret
or
cmp
cmp
lahf
or
mov
out
and
xchg
lret
daa
add
inc
push
icebp
add
repz
imul
in
lods
int3
clc
ret
fxch
call
mov
lret
jge
inc
sub
cwtl
das
xchg
leave
push
imul
push
pop
xor
mov
mov
ds
mov
xor
fadd
dec
adc
enter
clc
loopne
ficompl
bound
fmulp
cld
arpl
inc
jno
push
lahf
pop
pop
lret
es
cwtl
inc
stc
stos
in
add
jge
imul
ja
scas
test
pop
int3
pop
cwtl
aad
xor
aaa
je
daa
mov
jecxz
in
decb
ficoml
mov
cmp
xlat
in
movsl
ror
xchg
roll
sahf
lret
enter
add
jp
in
rcrb
mov
add
movzbl
mov
xor
mov
aam
jbe
hlt
stc
and
inc
fimull
shlb
sub
popa
rcrl
push
lret
inc
and
push
addb
sbb
enter
lods
jecxz
jbe
jnp
xchg
mov
push
fsubrs
rorl
stos
lret
and
push
or
flds
lcall
imul
jge
sarb
mov
into
mov
sub
adc
fcompl
lret
js
fidivl
decb
mov
jmp
inc
pop
sub
arpl
or
xchg
dec
bound
push
jo
lret
adcb
mov
inc
inc
pop
clc
dec
fcmove
mov
adc
mov
push
jmp
and
xchg
sbb
je
enter
fisubrl
cwtl
xchg
pusha
lret
add
lret
jmp
clc
or
jo
lret
xchg
mov
dec
push
add
and
rcll
push
out
in
xchg
mov
cmp
cmp
cmp
lret
pop
test
addr16
orb
mov
les
clc
or
cwtl
fistl
sti
test
out
xor
sub
in
in
lret
lods
pop
mov
pusha
lret
sbb
jne
mov
ljmp
bound
ror
mov
push
mov
mov
pop
sti
xor
rol
imul
int
mov
cs
lret
or
cmp
out
aaa
ret
sbb
cmp
xchg
mov
and
repnz
mov
push
into
mov
mov
outsb
rorb
test
xchg
pop
loop
shlb
in
or
push
jbe
stc
std
lret
imul
call
jecxz
loopne
inc
nop
push
imul
push
pop
leave
sbb
pop
out
scas
dec
out
adc
lret
add
xchg
mov
jge
pop
mov
out
int3
sbb
scas
mov
pop
in
ficoml
incl
fdivr
cmp
lret
pop
mov
and
in
cmp
popa
lret
sbb
pop
jmp
dec
sbb
fidivl
pop
pushf
jae
dec
jbe
xor
out
push
lret
fstps
add
es
jo
in
inc
dec
xchg
lret
jne
loope
cmp
leave
and
xor
dec
lret
ret
cltd
inc
icebp
lret
outsb
and
dec
dec
or
mov
push
scas
cmp
push
lret
or
sub
es
push
pop
lret
sbb
fnstcw
adc
cmpsb
jg
jne
lret
jmp
cmpsl
add
sbb
dec
imul
or
mov
les
iret
ficompl
cli
in
xchg
and
push
ret
pushf
cmp
lret
dec
leave
pop
sbb
dec
adc
cmp
or
ret
pop
addr16
push
dec
int
sub
inc
or
xor
shll
jmp
test
stos
sub
popf
xchg
pop
ror
sbb
xor
cmp
mov
adc
mov
pop
sbbl
mov
and
jns
lret
dec
ror
inc
and
mov
adc
out
cwtl
pushf
nop
mov
add
shl
and
loop
xor
int
dec
jb
mov
cmp
mov
sarl
xor
pop
pusha
js
scas
rolb
cwtl
sub
sbb
es
lret
mov
adc
mov
fidivrs
pusha
cwtl
cmp
dec
jbe
mov
ret
fbstp
xchg
mov
push
push
es
or
mov
adc
fdivrs
fimull
js
push
xor
cmc
cli
ja
in
arpl
jno
and
cli
mov
pop
dec
add
fcomip
push
sbb
lret
js
add
idivb
andl
xchg
stos
lret
xor
das
mov
lret
leave
movsb
add
sti
mov
mov
push
cmpsl
imul
and
or
xchg
fcoml
call
int
mov
dec
shlb
mov
out
dec
int
aas
lret
jl
rcll
lret
movl
into
or
cmpsl
into
mov
out
sbb
das
mov
xor
mov
lret
outsl
inc
add
xchg
pusha
test
stos
and
outsb
cmp
pop
subb
bound
sbb
cltd
or
ds
rolb
mov
mov
pop
push
ja
out
pusha
cmp
mov
and
addr16
cmp
jb
insl
out
in
shlb
xor
jp
mov
sub
adc
pop
gs
aas
and
cli
adc
mull
in
cmp
out
into
xchg
js
and
lcall
jns
psubw
data16
push
pop
cmp
aam
push
sahf
scas
jmp
shll
jge
pushf
inc
inc
ljmp
rol
or
cmp
push
adc
xchg
lret
andl
lret
in
xor
movhps
out
ds
xor
into
jl
push
mov
cmpl
lret
xor
jp
sahf
jg
mov
sub
arpl
lret
inc
sub
mov
cmc
jns
sub
mov
sub
and
pop
lea
stos
insl
rorb
leave
fcoms
pop
repnz
lret
je
incb
sub
push
xor
xchg
int3
lret
sbb
jmp
pop
fdivr
and
inc
sti
repz
jbe
sub
lret
scas
arpl
push
mov
xchg
cltd
int
xchg
adc
mov
gs
pop
cmpsl
dec
jge
xchg
roll
xor
fisubl
lret
ss
test
jns
add
push
ror
adc
xchg
mov
push
sahf
ds
lret
jge
ss
xor
popa
mov
sbb
mov
lret
std
pop
fidivl
sbb
sbb
out
test
shll
lret
shrl
fwait
adc
inc
in
xchg
lods
lret
dec
xchg
mov
cmp
lret
lret
add
sahf
sub
stos
scas
mov
lret
push
push
xchg
mov
cmpsb
stc
repz
frndint
int
movb
push
or
jnp
mov
and
popf
idivl
xor
dec
pop
jge
inc
shlb
xor
or
test
loop
adc
rolb
test
lret
mov
sahf
add
stos
jno
mov
dec
fstp
adc
rclb
sub
aam
lret
mov
lret
push
cs
mull
pop
popa
imul
test
bound
push
fiaddl
ja
pop
cmp
lret
fnstenv
fwait
pop
insb
xchg
stos
cmpsb
xchg
sbb
cmp
lcall
xchg
cmp
pushf
cmpsl
pop
inc
insl
inc
jg
mov
call
movsb
xchg
inc
mov
fsubrl
fidivs
je
rolb
popa
sub
and
dec
in
fs
daa
mov
xor
out
push
pop
add
ret
lahf
add
sti
sarb
lret
xchg
sub
adc
cmp
push
ficompl
dec
inc
out
dec
xchg
fadds
pusha
cld
and
mov
and
dec
sub
and
mov
fdivs
jns
mov
out
pop
xchg
scas
popf
cmp
add
shll
mov
lret
repnz
xlat
in
ret
lret
push
dec
add
inc
insb
jns
jmp
push
mov
pop
mov
shrb
jo
je
and
push
clc
lret
push
add
pop
insl
mov
lret
push
lret
repnz
cli
mov
lret
arpl
or
dec
imul
shll
ror
ljmp
data16
stos
flds
fisubs
push
sub
fcmovnu
lret
push
jnp
push
scas
lret
fstl
sahf
loope
mov
imul
lahf
cmp
dec
lret
cmp
fwait
lret
add
iret
dec
pop
pop
lret
je
xlat
pop
sti
mov
stos
into
or
int3
cmc
ret
ljmp
and
subl
lret
sbb
xchg
mov
shlb
cmp
imul
frstor
dec
movsl
or
sub
jecxz
dec
lret
sbb
lods
lret
adc
les
sar
lret
sbb
nop
mov
or
pop
cmp
jns
xor
and
mov
xor
and
cmp
xlat
fs
mov
mov
mov
outsl
in
out
mov
testl
mov
js
push
sti
adcl
cmc
stos
add
std
mov
ljmp
xor
loop
mov
or
pop
inc
xchg
push
inc
add
dec
shlb
insl
cmpl
mov
xlat
insl
movsb
or
movsl
and
cli
mov
imul
or
shrb
sbb
jae
or
pop
or
jg
inc
fwait
mov
aam
sub
movsl
data16
in
pop
lret
inc
mov
inc
js
lret
mov
aam
inc
xor
test
test
fs
fcmovne
xchg
push
pop
push
adc
xchg
stos
test
repnz
mov
jb
lea
cmpsl
fcmove
pop
adc
sti
lret
mov
imul
out
in
rorb
pop
cmp
push
xor
add
pop
lcall
lret
sbb
or
js
jmp
aad
mov
pop
jns
and
mov
add
xor
push
daa
mov
das
stos
mov
lret
fadds
lret
iret
arpl
sub
and
xchg
inc
shl
jae
sub
push
fxch
pop
imul
jl
out
and
mov
scas
mov
cltd
xor
xchg
or
sbb
push
jmp
add
xchg
jne
cli
xor
pop
push
sbb
cmp
aam
jbe
pushf
sbb
mov
cmp
inc
mov
or
mov
hlt
pusha
idiv
out
mov
inc
aam
in
jge
lret
or
mov
ficomps
and
lret
xor
lret
pop
adc
dec
ja
cli
mov
rcr
mov
cli
push
dec
adc
inc
mov
inc
call
mov
ljmp
stc
adc
xchg
nop
add
shll
popa
call
iret
data16
or
rcrb
jmp
mov
int3
mov
pop
mov
lret
inc
outsl
jnp
jp
cli
mov
xor
fistl
xchg
mov
lret
lds
repnz
push
arpl
sti
int3
pushf
push
test
xchg
lret
mov
ret
lret
loop
test
jnp
xor
das
ja
sub
ret
clc
dec
movzwl
lret
dec
into
mov
or
push
jae
mov
push
lock
or
dec
mov
cmp
mov
ss
mov
lret
test
sub
and
out
xchg
xchg
test
mov
lret
adc
popa
gs
cmpsb
or
into
pop
lret
mov
push
lret
ret
fs
fwait
push
mov
out
lret
aas
pop
je
testl
cmp
and
imul
jg
and
lret
out
cmpsb
dec
lods
sub
loopne
mov
outsb
sub
mov
iret
mov
lret
jge
jnp
test
lret
lret
rolb
leave
inc
lret
pop
jbe
imul
pusha
bound
pop
stos
xchg
in
rorl
rorb
lret
int3
addb
int
mov
rcll
mov
into
lahf
pusha
pop
jle
jp
jb
mov
cmp
lret
or
or
outsl
pop
stc
xor
arpl
mov
fdivr
add
out
fsubr
fst
lret
mov
stos
lret
fidivrl
fwait
fs
dec
into
pop
popa
adc
cmp
xchg
push
xor
or
not
rorb
lret
shl
pop
jne
and
int3
sar
push
stc
cwtl
cmp
xchg
inc
push
dec
fldenv
test
push
imul
dec
stos
lods
popa
mov
mov
xor
outsl
nop
pop
mov
push
lods
xor
xor
es
movsl
and
add
xchg
push
shlb
push
cmp
sub
mov
mov
jbe
ss
lcall
test
aaa
mov
movsb
cltd
ja
idivb
stos
dec
sbb
rclb
xor
in
add
mov
cltd
repnz
sbb
add
inc
rclb
adc
out
cli
xor
jb
pop
xchg
in
lret
not
mov
mov
pop
or
xchg
fwait
jbe
xor
les
out
adc
push
xor
jns
mov
mov
insb
je
mov
add
mov
sub
lret
lock
lret
mov
iret
lret
pop
lods
das
fsub
popf
dec
cmc
rolb
out
sub
pop
add
mov
js
push
cmp
inc
inc
lret
adc
sbb
lret
mov
add
ror
mov
loop
lret
cli
call
cli
xor
movsl
sub
pop
ret
sbb
push
fidivs
dec
test
xchg
push
xor
test
push
cmpsl
adc
repnz
add
das
mov
ror
popa
aad
pop
clc
or
ja
in
jbe
insl
push
ret
mov
aam
jp
js
lret
sbb
fldcw
lret
mov
xor
js
je
outsl
cli
push
hlt
stos
into
pop
rclb
xor
ficompl
arpl
scas
inc
lret
popf
ja
sub
mov
xchg
mov
mov
sub
je
lret
xchg
adc
cmpsb
test
stos
imul
mov
in
pop
lods
lret
pop
call
lret
shrl
in
ficompl
mov
xchg
test
daa
jnp
cmp
xor
adc
adc
mov
push
jmp
scas
pop
cld
lret
push
rcrl
jno
icebp
in
xchg
xor
enter
scas
add
push
mov
mov
rcrb
xor
jle
sbb
imul
lret
inc
sbb
push
mov
movntq
jo
in
push
push
jns
lret
repz
fstpl
add
push
fsub
push
dec
xchg
insb
sub
ds
xchg
add
or
mov
add
push
lret
ljmp
cs
je
sbb
gs
sub
loope
adc
lret
dec
adc
xchg
xor
cwtl
lret
aaa
adc
cmp
aad
cli
popa
hlt
aas
out
lahf
xchg
pop
inc
je
lret
rcrb
mov
pop
xchg
mov
add
mov
andl
or
mov
clc
test
lods
popf
sbb
mov
out
add
loopne
ljmp
inc
repnz
repz
popf
cmp
andl
pop
ret
inc
dec
xlat
push
and
icebp
in
or
jnp
xor
push
lods
div
mov
lret
js
jns
jecxz
mov
repz
xor
dec
ja
mov
pop
push
pop
lret
and
nop
aas
xchg
lcall
mov
js
add
lret
insl
out
and
out
mov
cltd
in
pop
popf
dec
add
test
fisttps
lret
pop
fimull
jno
and
loopne
adc
lret
inc
cmpsb
je
int3
stos
xchg
pusha
fidivrl
stos
leave
shlb
fdivs
mov
jae
dec
stos
jns
sub
stos
dec
jg
dec
lret
xchg
mov
lret
sbb
pop
sbb
hlt
push
jb
rolb
push
retw
cli
shl
sbb
cmp
jo
lret
inc
cmp
cmpsl
lcall
mov
xchg
arpl
lret
pop
push
lret
adc
int3
or
lret
jbe
push
push
shll
lret
jo
push
adc
out
push
gs
int3
mov
lret
scas
stos
sbb
je
jecxz
or
add
pop
pop
cli
scas
jb
enter
push
cmp
jns
sbb
and
dec
xor
icebp
jnp
rep
stos
jp
or
xchg
lret
pop
sbb
pop
xor
stos
inc
lret
les
lret
push
push
test
subb
xor
jecxz
lret
enter
call
not
sbb
push
lahf
mov
ljmp
push
inc
sbbb
lret
popa
xchg
rcll
cmp
test
mov
iret
cmp
testl
pop
lret
arpl
es
lret
ja
mov
and
popf
lret
movsb
ljmp
cmp
shll
mov
push
enter
cmp
dec
mov
fdivrl
adc
lea
cld
pop
test
lret
adc
push
add
fiadds
lahf
imul
test
mov
iret
sbb
push
arpl
sarb
fisubs
nop
jb
addr16
jns
mov
push
mov
sbb
rorl
in
fs
sbb
inc
lret
inc
int
addl
fwait
sub
lret
das
and
xchg
imul
fxch
mov
xchg
sahf
cmp
jge
pop
mov
fxch
aaa
rorb
test
add
icebp
insb
pop
push
jae
lret
jmp
data16
ret
lret
xchg
outsl
in
push
ds
repz
mov
xor
int
test
bnd
sbb
stos
xchg
ds
xchg
aam
xchg
pushf
dec
adc
push
dec
lret
sbb
scas
rcrb
lret
fstps
lea
lret
push
push
sub
stos
xchg
js
inc
cltd
dec
aad
pushf
add
loope
lret
mov
jns
and
scas
sbb
popa
sti
lret
mov
and
inc
lret
lret
inc
cli
lret
jno
loop
xor
jecxz
fldt
sub
mov
or
push
mov
jne
out
mov
mov
sub
push
aas
cmp
cmpsl
jle
mov
pushf
lret
inc
mov
lret
fstps
insl
insb
mov
sub
add
cmpsl
leave
mov
mov
fucompp
push
cmpb
inc
aaa
arpl
lret
mov
lret
call
out
mov
fstp
push
js
lret
decb
stos
pop
jns
lret
cld
daa
mov
gs
pop
fcmovne
sbb
in
or
loopne
lret
out
fdivl
adc
fsubrs
lret
lret
ljmp
inc
ud1
rcrb
je
cmp
stos
xor
jae
sub
push
das
cli
lret
jbe
sbb
mov
or
or
pop
int
cmpsl
mov
movq
pop
sbb
xchg
sarb
pop
mov
data16
lret
gs
lret
fsts
xchg
mov
test
fdiv
push
ja
rcll
and
push
flds
lret
and
dec
xor
lds
jne
xor
add
push
jg
test
sub
lret
mov
cmp
xchg
fistpll
cmpsb
lret
aaa
mov
popf
cltd
out
add
sbb
lret
jno
dec
inc
adc
mov
aam
lret
ss
movsl
enter
xlat
lods
std
pop
lret
ja
ret
dec
adc
or
mov
or
xlat
fst
pop
lret
loop
out
sub
push
jne
sarb
and
pop
lods
pop
out
lret
test
cli
in
cmpsb
push
lret
daa
loope
sti
fidivrs
lret
loop
xchg
xchg
sbbl
and
push
pop
bnd
dec
push
in
lret
jmp
jg
jge
lret
das
icebp
adc
sahf
int
mov
lret
pusha
lret
inc
jnp
enter
xor
das
nop
scas
xchg
lret
int3
mov
sbb
cltd
dec
sbb
xor
mov
lods
or
rclb
es
cwtl
push
stos
lea
push
in
aad
lret
xchg
xchg
out
inc
cmp
lret
orb
push
fxch
add
adcl
cmp
sbb
mov
shll
mov
fistl
lret
push
lret
mov
push
fsubp
dec
cmpl
lret
test
sub
rcrl
aas
xor
or
add
dec
fdivrs
dec
mov
out
cltd
movsl
lret
xorb
jae
lret
xchg
out
outsb
loop
lds
cs
push
add
lret
cltd
insb
pop
hlt
inc
ror
and
pop
mov
aam
rcrb
into
mov
or
xor
sub
mov
ja
xor
cmp
push
inc
fdivl
xchg
rdtsc
xor
jmp
push
sbb
pop
rolb
mov
mov
cmpsb
pusha
repz
dec
sbb
gs
fiaddl
push
jne
mov
mov
sub
lcall
lret
das
and
mov
out
push
cmp
push
lcall
stc
lods
sub
outsb
sbb
jge
pop
rol
sarb
ss
sub
cmp
mov
fiadds
rorb
shll
dec
ficoml
mov
xor
add
enter
pushf
jmp
sarb
xor
imul
cmp
sub
stc
imul
or
dec
pop
or
roll
jbe
add
xchg
push
std
dec
adc
fs
jecxz
mov
test
push
xchg
lea
cli
inc
jp
mov
lods
jne
shlb
pop
fidivl
and
push
sahf
imul
mov
sbb
je
aam
push
into
mov
fwait
lret
std
push
negb
mov
jns
lret
scas
xchg
pop
lret
mov
fs
fmull
ds
repnz
mov
lret
mov
mov
es
inc
or
lods
jnp
cmp
xchg
cmp
xor
sub
fwait
into
out
xorl
adc
xor
mov
aam
js
sbb
mov
jg
into
jns
sbb
jmp
lret
or
stc
pop
inc
gs
stos
in
adc
call
out
adc
cld
inc
xor
shl
jg
mov
repz
xchg
mov
push
cmpsb
lret
xchg
cmp
xchg
lret
mov
xchg
lret
ret
int3
jmp
mov
xor
rol
and
jecxz
inc
cmp
adc
fmul
cli
sbb
lods
add
insl
clc
dec
xchg
add
xor
push
add
cmp
int
cmp
into
lret
imul
jge
push
ret
xlat
cli
xchg
pop
push
xlat
lds
stc
fidivrl
in
jge
cmc
das
lret
mov
hlt
dec
cmpsl
push
lret
pop
in
imulb
adc
int
fdiv
lods
and
xlat
pop
bnd
cld
lods
dec
negl
into
xor
cmp
fimull
outsb
popf
pushl
addr16
mov
dec
sub
jb
lret
aad
push
orl
sbb
cltd
dec
scas
lret
pop
xor
iret
ss
lret
sub
jge
dec
or
inc
lret
dec
daa
clc
sub
enter
out
cmc
aam
popf
loop
jno
sbbb
cmp
sub
cmp
lret
pusha
push
ret
in
push
dec
mov
sbb
cmpsl
mov
and
mov
sbb
jbe
mov
inc
in
shlb
stc
test
movswl
cs
sub
fstp
adc
mov
outsl
mov
mov
jle
cli
mov
pop
pop
icebp
cwtl
ficoml
push
jp
out
inc
fadds
es
mov
fnstsw
xchg
out
cmp
sarl
fidivl
xor
shll
push
scas
and
xor
std
ljmp
rorl
in
push
or
lret
test
sub
mov
pusha
ret
pop
lret
dec
sbb
test
mov
lret
push
mov
lock
xlat
cmp
mov
xchg
dec
xchg
fs
aam
mov
sub
mov
sbb
lret
cmpb
push
sub
arpl
pushf
and
movsb
xor
ret
lret
clc
ss
and
lret
icebp
push
out
inc
mov
mov
push
in
or
test
lret
loope
sub
rcll
lret
aaa
std
dec
out
mov
sahf
mov
dec
lret
push
ss
insl
mov
fdivrs
mov
enter
xor
out
rcr
xor
mov
loop
inc
or
fwait
xchg
jge
loop
leave
push
imul
push
mov
mov
stos
mov
or
fdivrs
pop
pop
out
xor
sti
mov
dec
mov
data16
lret
lcall
cwtl
cmp
mov
cmp
xor
push
xchg
jle
stos
aad
mov
inc
fisttpll
fcmovnu
andb
jle
pop
or
outsb
dec
push
xchg
sbb
nop
lea
cli
sub
aad
or
lret
jecxz
pop
int
stos
lret
mov
lret
repnz
pop
imul
int
mov
and
scas
into
jecxz
pop
xchg
repz
rcl
xchg
es
xor
xchg
into
cltd
ljmp
call
mov
sub
lds
int3
leave
cltd
xchg
cmp
call
insb
outsl
in
mov
and
xchg
and
jp
pop
aaa
xchg
lret
std
jo
lret
sbb
adc
ds
sti
cmpl
shrb
mov
adc
in
lret
adc
add
lret
pop
stos
xchg
je
lret
push
insb
jae
jecxz
lret
jbe
outsb
cmp
orb
leave
adc
out
pop
fcmovbe
scas
cmp
sbb
jecxz
hlt
dec
rclb
aaa
fadds
shr
mov
dec
rorl
aam
push
lcall
insl
out
sahf
hlt
pop
scas
pop
lds
lret
aad
andb
int3
ret
push
std
cmp
icebp
rol
fsubs
pop
call
sbb
pop
andl
fsubs
ljmp
push
out
cs
dec
popa
and
pop
mov
and
xor
loopne
lea
push
fwait
push
lret
sub
pop
sbb
into
mov
or
jle
lret
sti
arpl
or
push
jb
negl
pop
mov
xchg
pop
sub
or
inc
mov
shlb
or
or
idivl
cmpsb
mov
xor
jl
and
lret
mov
lret
jae
inc
fmulp
popa
aas
cmp
cltd
xchg
sub
push
push
adc
inc
or
mov
lods
aad
sar
mov
icebp
test
loop
cmpsb
mov
mov
xchg
pop
lcall
pushf
lret
rolb
xchg
and
lea
pop
lods
push
call
movsb
aam
and
add
jo
imull
in
lret
shrl
dec
and
mov
mov
outsb
sbb
mov
adc
shll
imul
fsubr
ljmp
fmuls
cwtl
aad
jmp
loopne
lret
faddl
es
or
or
nop
fcomps
pop
lret
sbb
fimull
push
lock
or
sti
push
rclb
cwtl
cmpsl
lret
icebp
push
xchg
das
lret
and
or
jne
mov
arpl
test
into
add
jmp
faddp
lods
dec
jle
cmpsb
scas
xor
jae
jge
push
inc
push
inc
pop
movsb
shr
das
push
mov
es
ret
mov
xor
and
int
movsb
daa
shlb
lahf
stos
fidivs
cmpsl
sub
lret
mov
jmp
push
dec
scas
repnz
xchg
adc
add
popa
addr16
imul
adc
xlat
mov
lcall
fs
stc
lock
fwait
xor
addr16
inc
aaa
lret
jae
lret
iret
call
cmp
push
pop
pop
and
adc
cmp
fwait
cmpsb
jp
rorb
jmp
pop
jnp
jno
lret
adc
dec
xchg
addr16
mov
lock
cld
movsl
mov
rcl
jno
lret
sub
mov
add
fwait
pop
xchg
jp
sub
cs
sbb
sbb
inc
jle
repnz
in
fimull
and
lods
mov
scas
cmp
aam
mul
inc
push
cli
push
shrb
fwait
dec
sub
aas
das
call
iret
in
add
sti
mov
repz
add
lret
pop
cmc
and
mov
fcmovnbe
adc
pushf
out
adc
sub
add
pop
int
cmp
nop
cmp
not
mov
pop
fcoml
rclb
pop
xor
shrb
test
ret
std
xor
mov
ja
pop
pusha
cmc
mov
imulb
rorb
push
sbb
sarb
adc
ljmp
shlb
push
sti
stos
aad
jp
outsl
into
fcmovbe
ja
test
cmp
lret
mov
mov
sbb
dec
addl
in
cli
jne
jmp
lea
pop
and
xor
stos
call
loopne
scas
scas
xchg
sbb
lret
lcall
lret
xor
jle
sub
xchg
in
in
sbb
repnz
add
lret
dec
loopne
sbb
jge
lahf
loop
fisubrs
adc
sbb
testb
out
fnstenv
iret
cs
cld
push
out
push
xchg
add
mov
add
and
into
test
mov
lret
mov
inc
cmp
rcl
flds
stos
insb
dec
xor
push
out
movsl
cs
leave
xchg
cwtl
fdivrs
pop
mov
or
aas
push
ljmp
adc
dec
int
cmp
in
clc
adc
add
pop
pop
dec
pop
xchg
inc
xlat
inc
lret
jp,pt
xor
lret
sahf
stos
scas
cmpl
cmp
sbb
movsb
mov
repnz
shlb
jne
lret
stos
out
pop
cmpb
xor
nop
cltd
pop
push
add
pop
sbb
fcmovne
jo
fimull
or
out
cmp
addl
out
in
mov
sbb
dec
aam
fmuls
xor
mov
stos
inc
jecxz
into
mov
gs
stc
out
insl
loopne
push
sub
or
lret
cmpsb
adc
js
mov
popf
inc
jb
push
add
test
in
fs
clc
loop
arpl
pop
int
mov
scas
dec
lret
jmp
cltd
ljmp
fdivrs
pop
lret
mov
movsb
lret
rolb
outsl
pop
jb
out
mov
inc
cs
jle
sub
pushf
js
lcall
mov
pop
pop
lret
lea
stos
fildll
cmp
jge
mov
add
rolb
pop
rorl
or
js
addb
jo
rol
and
or
sub
mov
mov
cmp
mov
pop
lods
sub
dec
push
mov
inc
xor
mov
aad
sub
dec
and
lret
int3
stos
fcoms
jle
cmp
nop
cmp
lret
mov
ljmp
add
int
cli
xor
mov
vphsubbw
cmpsl
scas
lret
mov
inc
pop
lahf
ret
lret
xchg
jge
out
xor
lock
js
pop
mov
lods
add
lret
mov
jbe
arpl
xchg
mov
lret
jle
add
push
ljmp
add
adc
dec
jl
jns
mov
lcall
or
mov
into
or
mov
xchg
push
pushf
popf
push
mov
fdivr
push
cmc
stos
mov
jge
lods
push
inc
mov
mov
rcrb
adc
ss
lret
out
aam
mov
enter
xchg
out
or
scas
fnsave
pop
mov
fwait
repnz
and
test
out
decb
xchg
lret
or
fnstsw
and
das
dec
rclb
dec
lret
adc
je
movsb
inc
cmp
or
xchg
fwait
repnz
pop
nop
sbb
dec
cmp
pop
ror
repnz
dec
shlb
add
cmpsb
les
ret
lahf
lret
mov
repnz
inc
and
mov
push
in
push
out
mov
xchg
sbb
push
lret
lds
push
pop
xchg
in
mov
fcmovne
mov
xor
fistps
mov
mov
xor
pop
add
ud2
push
je
lret
xor
jb
adc
xchg
aam
gs
inc
pop
push
cwtl
xor
push
xchg
fisttpl
cli
add
mov
or
hlt
in
dec
ror
mov
rclb
sub
push
mov
add
fdivp
xchg
stos
lret
and
dec
pop
insb
lret
mov
ror
stos
rolb
lods
push
or
mov
mov
lret
arpl
cmp
sahf
add
adc
jg
shll
fiaddl
sahf
sbb
test
faddl
in
pop
psubusw
loopne
mov
pop
insl
lahf
jne
push
and
imul
rorl
jo
xchg
out
subl
dec
mov
mov
cmp
mov
xchg
dec
push
xor
lret
cvtdq2ps
iret
gs
mov
xor
push
adc
add
mov
inc
hlt
adc
jecxz
xchg
inc
sub
lods
cwtl
or
push
mov
push
imul
cs
xor
fucom
sti
push
cmp
push
mov
int
jnp
dec
test
pop
mov
data16
jg
jmp
lret
jbe
mov
lret
mov
push
loop
js
sub
iret
and
cmp
lret
popa
int
aam
and
dec
loop
pop
inc
jmp
fwait
adc
rorl
xor
rolb
in
and
leave
xchg
lret
jg
jo
int3
nop
shlb
test
cmpps
aam
dec
mov
sbb
lods
mov
out
lret
cmc
push
add
mov
adc
stc
push
push
icebp
mov
mov
into
js
lret
fistl
cmp
std
mov
mov
sub
dec
sbb
mov
cwtl
bnd
ja
lcall
lret
leave
cld
cs
push
mov
in
jp
sbb
into
shrb
enter
xor
mov
lea
movsb
or
mov
adc
or
imul
or
imulb
lret
mov
xlat
pop
rcrl
lret
or
and
cmp
shr
addr16
cmp
stos
lret
xchg
cmp
cli
pop
nop
imul
cli
jb
lahf
fidivrl
push
push
mov
lret
imul
pop
test
aad
shrl
popf
dec
inc
int
mull
sahf
adc
mov
lret
into
lock
or
inc
shlb
push
fwait
pop
cmp
push
rcl
aam
bound
lret
xchg
add
push
ljmp
xchg
push
cli
scas
ret
inc
inc
shr
push
pop
popf
push
adc
int3
mov
inc
loop
lret
mov
push
sub
cmp
data16
or
insb
pop
cmp
xchg
or
fiadds
in
sti
ficoml
inc
out
mov
cmp
clc
cs
xchg
out
adc
sub
mov
lret
push
je
fmul
fidivrl
inc
push
mov
rorl
sbb
cmp
push
movsl
mov
pop
mov
shll
lret
scas
into
fistps
jns
adc
xor
jae
outsl
in
mov
lock
aam
int
mov
mov
xchg
lret
cwtl
adc
test
cli
adc
lret
cmc
lock
imul
test
pop
mov
jmp
lea
add
cmp
jg
mov
movsb
repnz
mov
aad
add
cmp
int
sbb
lret
inc
and
sbb
jl
ljmp
push
rcrb
cltd
imul
int3
insl
shr
cmp
cmp
aam
mov
jle
sbb
or
or
mov
mov
scas
lods
clc
jno
sbbl
push
rorb
subl
xorb
movsl
into
gs
pop
lret
imull
dec
bound
pop
dec
mov
lret
loop
sbb
mov
movsb
incb
lret
adc
lret
xor
lret
cmp
out
movsl
mov
jmp
outsb
cs
jecxz
dec
aam
adc
or
cmp
int
dec
insl
cmp
lret
cmc
pop
mov
inc
lret
jmp
icebp
xlat
lret
add
movsl
fsubs
arpl
loop
push
jno
lods
pop
leave
call
pushf
add
cld
aaa
dec
into
xchg
int
ljmp
or
xorl
aam
ljmp
push
cmp
push
test
push
in
mov
lahf
mov
je
and
and
xchg
lods
push
cmpsl
and
fcomps
pop
push
sbb
in
mov
popf
push
mov
ds
lret
xor
repnz
adc
leave
les
sbb
mov
jle
test
out
lret
lods
dec
mov
xor
adc
pop
rcr
lret
cmpsl
mov
jecxz
mov
lretw
sub
lret
js
dec
adc
mov
mov
hlt
cltd
aad
aaa
fistl
das
sub
lret
adc
or
fcmovu
not
jb
sarb
idivb
and
jecxz
mov
jp
fwait
mov
inc
into
cmp
push
ljmp
fdivs
stos
or
pop
popa
into
adc
and
lea
notl
add
push
and
lret
pushf
inc
ret
pop
lret
insl
loop
jg
arpl
aas
lret
push
jb
enter
std
testb
inc
fsubrs
jmp
in
adc
std
arpl
xchg
mov
mov
js
add
xchg
loope
mov
mov
call
inc
cmpl
testb
mov
rcrb
in
xchg
inc
in
insl
cmp
sbb
sti
xchg
iret
sub
sbb
mov
call
inc
jge
add
int
ror
and
mov
jl
jg
stos
adc
pop
lret
popf
aaa
dec
push
lret
cmp
pop
adc
lret
jle
push
pop
push
aad
add
mov
sub
pop
icebp
dec
scas
movsl
movsb
mov
das
mov
lock
pop
mov
dec
or
cmp
mov
dec
sti
mov
inc
lret
xchg
sub
out
adc
or
jbe
cli
ja
in
aaa
or
mov
cmp
arpl
pusha
loop
sti
adc
outsb
adc
add
inc
jg
fs
lea
es
sub
ficompl
adc
dec
mov
lret
sahf
xor
mov
fidivrl
aam
int3
dec
ret
sbb
mov
outsb
jmp
loopne
movsb
sbb
sub
lret
xchg
inc
xor
dec
xor
lret
cltd
iretw
mov
jmp
ret
push
push
cmp
xchg
mov
lret
mov
stos
sub
lock
idivl
cmp
into
xchg
ss
cli
adcl
lret
testl
aam
fldt
mov
lret
or
and
push
mov
mov
sub
mov
inc
push
out
loopne
lret
lahf
test
or
leave
lret
dec
mov
cltd
sbb
je
mov
sub
movsl
mov
call
jmp
out
rorb
and
sub
scas
add
cmpsb
sub
add
mov
inc
lret
sbb
shlb
jbe
lret
js
dec
jle
call
out
cs
clc
dec
div
roll
xor
scas
jle
or
cmp
and
loopne
es
jne
call
fidivs
ss
sub
cli
or
mov
fincstp
cli
subb
mov
sub
push
inc
dec
stos
fidivl
mov
lret
sar
ds
dec
sahf
dec
orb
or
dec
fsubs
fwait
nop
xchg
sbb
aaa
dec
sahf
push
iret
lret
into
movsl
mov
adc
int
xor
into
sbb
jmp
in
ret
mov
fstps
dec
mov
fimuls
fidivrl
mov
into
sarb
outsb
xor
adc
sub
push
cmp
fnstcw
jb
lret
inc
cmp
mov
cwtl
cmp
sub
adc
aad
xlat
push
jge
insb
cltd
loop
test
icebp
sub
cmpsl
cmp
pop
fadds
or
xchg
and
lret
ja
test
loop
lret
xchg
xorl
mov
mov
mov
lret
je
lcall
jno
fcos
fisttpl
outsl
and
aas
out
cmpsl
push
push
repnz
int
repz
popf
jmp
sub
adc
loope
or
int3
pop
sbb
mov
pop
mov
jge
popa
xlat
jnp
pop
cwtl
decl
outsb
in
adc
lret
dec
sub
mov
call
fstpt
mov
push
xor
lock
insl
stos
lret
xorb
jmp
adc
rcrb
sub
jl
jb
sahf
sbbb
dec
aad
jns
mov
jnp
lret
lcall
add
xorb
xchg
lret
int3
sub
lret
cwtl
jbe
xor
lret
scas
xchg
mov
cli
rcl
nop
mov
sarb
mov
xchg
sub
or
mov
mov
lret
push
adc
enter
aad
das
xor
mov
mov
pop
pushf
in
mov
stos
jnp
aaa
and
cltd
lret
fwait
stc
jne
addr16
lret
sti
push
push
xor
pop
cli
lahf
mov
sbb
push
hlt
and
lea
shrb
out
notb
mov
mov
pop
outsb
lret
pop
mov
cmp
ja
jg
mov
mov
cwtl
sbb
sbb
xchg
mov
jg
cmp
out
jno
ret
push
or
icebp
lret
xlat
inc
cltd
notl
lret
lret
adcl
mov
inc
sbb
imul
mov
divb
sbb
sub
pop
outsl
aas
shlb
in
test
popa
subl
fwait
mov
inc
mov
ja
scas
cs
rorb
lret
xor
into
lock
dec
mov
out
outsb
lret
int
and
pop
ljmp
andl
push
pop
lret
pusha
mov
scas
repz
iret
cmc
cld
sub
rcr
adc
lret
jns
mov
pop
das
aad
lret
adc
scas
lods
or
ljmp
fiadds
lret
pop
dec
xchg
imul
and
sar
lret
mov
sbb
mov
out
sub
mov
ds
lret
lods
and
out
lret
jle
js
cmp
lret
push
test
aad
lret
ljmp
adc
mov
lret
cmpsb
std
enter
popf
icebp
imul
adc
out
xchg
lret
mov
dec
lret
loop
pop
or
in
xchg
cmp
push
jl
sti
into
pop
aad
mov
add
addr16
icebp
jnp
and
ljmp
jg
mov
xchg
mov
add
inc
pop
lahf
std
cmc
mov
mov
cmpsl
rorl
call
add
cmp
jmp
scas
dec
movsl
in
cmp
repnz
out
fdivp
testl
cmp
ror
les
jmp
xor
jae
ret
jmp
ret
scas
xor
ja
xlat
je
lret
push
pop
mov
adc
or
lret
xcrypt-ofb
cmpsl
lods
js
add
xor
clc
in
and
inc
mov
push
jge
xchg
pop
les
inc
rorl
scas
stos
test
arpl
lret
aam
imul
lret
ljmp
or
inc
lret
jge
pusha
push
or
add
fadds
subb
fiaddl
stc
clc
and
shlb
insl
sbb
test
xorl
cmc
xor
test
imul
out
stos
add
test
cltd
mov
push
sub
mov
stc
lods
or
bound
clc
lret
ret
ljmp
shlb
dec
xchg
jns
lret
sarb
lock
dec
dec
push
rcr
jnp
rcrl
scas
ret
les
xor
lea
sub
stos
lods
and
lret
add
int3
jmp
lcall
aaa
sbb
xchg
scas
add
adc
mov
fists
add
sbb
lret
mov
and
push
jecxz
mov
frstor
cmp
lret
pop
lahf
adc
push
push
or
test
dec
rcll
stos
cwtl
mov
sti
into
aam
mov
adc
mov
popf
inc
jb
xchg
lret
lret
jae
je
iret
and
pop
push
cltd
push
lea
sub
out
pop
jg
ljmp
imul
mov
sub
xor
ret
and
pop
lret
dec
cmp
pop
div
rcrl
mov
lods
and
and
fidivrl
xor
loopne
lret
inc
sub
rcl
mov
hlt
lods
sbb
xor
mov
jmp
dec
pop
push
lret
cmp
inc
repnz
push
sbb
mov
lret
cwtl
cmp
pop
cltd
lret
rolb
sbb
mov
orl
mov
aad
lock
jl
mov
fidivrl
adc
sbb
fistpll
shll
pop
js
stos
and
loope
loopne
jmp
jmp
test
cli
pop
pop
aam
rclb
push
lret
dec
movsb
mov
push
jmp
mov
fldt
dec
push
push
lret
in
jo
test
dec
shrb
xchg
ret
lods
dec
cli
stc
mov
test
add
ljmp
mov
divb
pop
in
out
cmpsl
into
rolb
cmp
jb
sbb
sbb
xchg
jmp
stos
push
mov
in
cli
xorl
mov
cmc
push
mov
ds
lds
cmp
and
mov
clc
jne
add
cmpsb
cltd
sbb
das
mull
jns
inc
xchg
in
sub
mov
into
sub
setg
mov
jmp
shll
sbb
leave
lret
cwtl
xor
lret
imul
into
sbb
cmp
pusha
lret
testl
mov
mov
mov
lret
pop
add
popa
lret
dec
sub
push
cld
jnp
dec
sarl
mov
pushw
lret
aam
mov
and
rol
sbb
adc
fistl
mov
fdivrs
lret
jne
test
jns
fidivrl
pop
icebp
in
xchg
mov
aaa
aas
lret
xchg
sub
sbb
lret
int
xchg
hlt
mov
in
in
cwtl
lahf
xor
sub
outsl
es
xor
out
mov
jnp
push
jo
or
add
scas
pop
mov
mov
or
test
pop
cmp
rcrl
or
mov
xchg
sub
jnp
jle
cld
ror
or
call
mov
icebp
inc
pop
pop
cli
cmp
test
cltd
cwtl
popf
pop
cmp
pop
or
xor
fwait
mov
repz
fldenv
push
fiaddl
movsb
mov
aas
sti
inc
push
mov
rcrb
fucom
lret
lret
mov
icebp
cmp
setbe
sub
mov
mov
cli
loop
inc
outsl
xor
pop
jecxz
mov
mov
inc
shl
shrb
cmp
pop
ja
mul
sti
push
push
icebp
mov
insb
mov
mov
and
cmp
dec
fldt
jne
mov
lods
lret
roll
sbb
jae
mov
pushf
scas
lds
stc
cmp
rcll
rcrb
pop
fmul
mov
ret
lods
mov
movsl
mov
push
pop
jb
sbb
dec
inc
shl
lret
push
push
push
jae
call
jo
cmp
push
lret
dec
and
ss
fists
jmp
outsl
lret
cmp
enter
jno
lret
and
lret
in
sti
outsb
mov
mov
add
sahf
adc
fisttpl
sub
and
jb
fwait
sbb
stos
mov
into
lea
and
lret
test
out
les
stos
out
pop
repnz
or
inc
push
lret
sub
movsb
lret
xchg
out
clc
ss
adc
pop
pop
pop
jp
aaa
push
stos
pop
or
xor
aam
jae
js
lret
jno
sub
push
stos
lret
add
cmp
xchg
pop
into
popa
or
fs
mov
xchg
or
jbe
lret
dec
lcall
cmp
adc
rcl
push
xchg
cli
mov
aam
setge
lret
out
mov
adc
and
pop
dec
lret
mov
lret
pop
insb
sub
jg
fimull
je
clc
mov
xor
xchg
mov
test
aas
lret
hlt
adc
cmp
add
lret
sub
out
inc
fidivrl
stc
in
cli
mov
push
mov
lret
scas
pop
insl
mov
mov
xchg
sub
push
lret
popf
lds
mov
xchg
lods
and
inc
push
or
mov
push
xchg
lahf
sarb
adc
mov
jle
jno
mov
stos
add
subb
popf
lret
cmp
lret
fsubs
dec
aam
adc
insl
pop
out
imul
lock
jae
lret
dec
ss
or
push
fistpll
popl
xlat
mov
pop
lret
shlb
mov
pop
mov
daa
cmp
push
lret
in
xor
imull
sbb
inc
pop
jmp
popa
mov
mov
sbb
pop
pop
or
gs
push
mov
cmp
xor
push
jl
lret
dec
aad
add
pop
gs
ret
and
jae
dec
mov
xchg
mov
out
sub
push
or
mov
nop
jl
xor
cmp
dec
pop
mov
lahf
mov
dec
fwait
orl
arpl
pop
sub
sub
jecxz
push
inc
loopne
test
nop
add
imul
in
clc
or
popa
loop
sbb
sarb
sbb
xor
and
cmp
inc
lods
jmp
lret
fcom
fwait
js
inc
lret
pop
jge
dec
in
sti
imul
cmpsb
inc
sti
inc
adc
cmpsb
adc
fs
sub
add
xchg
sar
mov
sahf
aaa
lret
fidivs
lret
mov
stos
mov
sbb
xchg
push
sbb
lretw
nop
add
sbb
lcall
rdmsr
faddl
adcl
and
dec
lret
mov
sbb
mov
cli
or
push
js
lods
jl
sti
jb
addl
ret
xchg
fsubrs
bound
lret
popa
mov
lret
aam
and
cmpsl
test
rcrb
push
lds
fwait
popf
mov
xlat
or
in
out
int
cmp
int3
in
lret
jp
pushf
and
jge
lods
xchg
mov
outsl
pop
sub
or
sub
lret
mov
bswap
xor
pop
fistpl
jp
dec
jecxz
lret
mov
leave
popf
scas
stos
rolb
les
or
test
jge
mov
push
pop
xchg
add
lods
lret
ja
or
or
cltd
mov
insl
fsubrs
data16
ljmp
lret
xchg
shlb
mov
mov
mov
testl
and
mov
and
dec
mov
aaa
cld
int
jno
pop
jecxz
lret
sub
xchg
test
stos
pop
hlt
xchg
ret
std
ljmp
dec
lret
xchg
pop
adc
pusha
sbbb
sbb
add
add
pop
fbstp
xor
cmpsl
ret
lods
adc
lret
idivl
sub
test
ficoml
cmpb
push
mov
push
outsb
cld
jge
mov
lret
push
std
in
jg
lret
insb
adc
pop
out
inc
shr
std
push
in
sbb
jns
xor
sti
and
out
fistps
lret
aad
cld
mov
addb
sbb
loopne
lret
pop
popf
push
xchg
or
jne
or
adc
std
cwtl
fisubl
aad
lahf
movsb
repnz
cli
push
lret
jmp
push
lret
and
mov
sub
jmp
fwait
sbb
cmpsl
stos
xlat
stc
lret
in
cltd
icebp
and
testl
adc
nop
cmp
test
je
into
cmp
iret
mov
sub
jl
int3
stos
dec
push
mov
test
xor
lahf
cmp
out
sub
and
pop
mov
jne
aam
nop
lret
aam
jmp
or
pop
sar
gs
jle
ficompl
ja
test
mov
sub
pop
into
mov
inc
cltd
or
insb
lret
mov
mov
push
cmp
pop
add
cltd
rol
jo
insb
cmp
rcl
lret
cmp
sarb
xchg
or
xor
inc
insl
xlat
cmpsb
int
and
jle
sbb
cmpsl
inc
sbb
pop
lret
push
pop
push
or
and
mov
lret
pushf
shll
pop
lret
pop
add
enter
xchg
in
fmuls
and
out
gs
jl
jno
lret
repz
jo
enter
out
lcall
sbb
pop
sarb
lods
lret
inc
xchg
push
data16
aad
push
inc
push
lret
loope
cli
data16
jnp
push
out
in
jo
dec
lret
imul
imul
jecxz
push
mov
cmp
sarb
xchg
dec
into
adc
fidivrl
dec
push
out
daa
cltd
add
dec
adc
push
jnp
mov
lret
xor
xchg
xchg
out
lret
xor
pop
mov
ret
sbbb
ficoms
xor
cltd
adc
test
lret
stc
push
fisubrs
xchg
loopne
inc
imul
jmp
mov
enter
xor
fwait
push
mov
or
inc
xor
or
scas
sbb
enter
add
mov
pushf
dec
iret
push
mov
cltd
in
and
mov
ljmp
ret
insl
xor
push
int3
imul
lret
nop
int
push
pop
repnz
cmp
cmp
cwtl
fildll
lret
adc
pop
cmp
cmp
mov
cmp
push
add
aas
adc
cmp
jns
cld
inc
inc
lret
push
and
ljmp
mov
lcall
push
mov
add
clc
shll
push
xor
addr16
pop
shlb
mov
jp
fsts
sbb
xchg
add
insl
out
fldcw
push
lret
jbe
stos
fidivrs
push
outsb
mov
push
adc
cmp
dec
and
gs
cwtl
int3
sub
inc
push
rcll
mov
shrb
add
lret
iret
mov
xor
lret
imul
sbbb
pop
jmp
int3
test
jnp
fldenv
cmp
pop
mov
adc
inc
pop
cmp
mov
sbb
je
xchg
add
jg
gs
ret
or
xchg
push
mov
int
mov
push
pop
sbb
lods
movsb
xor
into
lret
ja
pop
sbb
push
pop
push
pop
xchg
mov
lret
cltd
mov
mov
xchg
sbb
sub
int
jle
mov
nop
mov
adc
rorb
clc
lret
daa
loopne
push
repnz
test
in
or
sbb
das
jmp
fldlg2
lods
nop
lret
push
push
orb
lret
rorl
xor
sbb
popf
int3
push
mov
int
jl
js
mov
or
mov
into
add
sub
fimuls
std
jle
int3
cmpsl
test
out
mov
mov
scas
imul
cli
pop
in
cli
dec
push
mov
push
cmp
jle
ret
pusha
lret
xchg
call
lret
xor
adc
sti
lret
cmp
lret
push
mov
lret
xor
stos
pop
cwtl
ss
addr16
dec
mov
aaa
stos
add
xor
xchg
stos
daa
enter
fldl
insb
js
lret
faddl
lret
je
pusha
pop
jecxz
lret
and
push
mov
lret
xchg
push
cmp
addr16
aad
inc
sub
repnz
pop
imul
mov
stc
outsb
add
and
test
mov
push
popf
mov
sbb
notb
inc
imul
cltd
jecxz
ret
inc
push
sub
mov
lret
and
lret
out
icebp
sbb
lret
lret
fcoms
pushf
sub
insl
inc
xor
aad
jae
lret
mov
xchg
int
fisttps
out
add
arpl
jmp
into
cmp
jb
dec
mov
fwait
lret
sti
aaa
loopne
dec
cld
lret
fstpt
add
lret
adc
add
stc
push
dec
bound
lret
sub
lret
inc
sbb
jns
mov
and
lret
pop
shr
xchg
cwtl
lret
imul
mov
or
out
xchg
inc
push
sub
ljmp
into
or
xor
lds
xchg
sub
shl
bnd
lret
fs
sbb
lods
jno
xchg
xor
sub
pop
adc
das
jb
inc
ja
rorl
push
jge
xchg
shrb
rorb
aas
pop
or
mov
out
fsubrp
sub
lahf
rclb
or
mov
in
cli
lret
adc
mov
inc
int3
jmp
push
inc
mov
push
inc
and
pop
fimull
insl
adc
ds
lret
mov
lods
inc
je
lret
lret
sti
std
shll
dec
mov
and
aam
lret
mov
jecxz
lock
test
out
repz
out
sub
stos
jg
outsl
sub
fiaddl
and
rcrb
scas
daa
scas
jno
into
push
xchg
lcall
sub
cmp
jp
cmp
int
aad
lret
div
lea
xchg
shrl
xor
xchg
xor
cmpsl
lret
clc
pop
imul
rclb
jns
inc
sbb
pop
add
cmp
int
or
ret
lret
in
and
sub
xchg
lret
int
add
push
bswap
and
add
push
inc
pop
jae
iret
lock
negl
cmp
dec
ror
sub
popf
call
jmp
push
sub
fldl
dec
fcmove
out
pop
xor
popf
fisubl
stc
sub
in
push
adc
push
out
stos
or
xor
lret
dec
icebp
aam
add
cmp
lods
sarb
adc
lret
xor
or
fldcw
cmc
out
mov
subb
enter
lret
in
cmp
mov
lret
leave
push
adc
or
repz
cld
rcrb
icebp
add
add
cmc
out
sub
insl
jmp
shll
call
lea
idivl
stc
hlt
ficompl
js
lret
cli
jg
sarb
lret
hlt
inc
test
jle
lret
xchg
daa
dec
icebp
mov
push
mov
test
hlt
ds
mov
lret
mov
dec
lret
pop
jnp
push
lahf
or
xor
loope
pop
in
cmp
mov
dec
icebp
jae
repz
add
dec
adc
lret
jmp
lretw
and
mov
lods
lock
lcall
pop
pop
fimull
dec
arpl
and
mov
cmc
mov
lret
add
ja
xchg
inc
lods
mov
and
hlt
dec
pop
lret
stos
aaa
mov
jnp
es
shll
mov
repnz
stos
mov
inc
lret
and
sub
lahf
fsubs
cli
mov
push
enter
clc
pushf
sbb
jecxz
fiadds
sbb
or
mov
sbb
sbb
pop
dec
pusha
mov
test
jecxz
mov
xchg
fisubs
push
lret
fldenv
mov
sbb
negl
stc
mov
int
test
sub
ficomps
dec
cmpsb
imul
ds
adcb
ficoml
aad
mov
or
push
incb
clc
jle
int3
movsl
sahf
lret
rclb
lret
rcll
push
fdivr
mov
cltd
rcll
roll
lret
xor
std
fwait
cwtl
cmp
jae
push
add
aam
sub
aad
popf
sbb
popa
daa
jmp
negb
nop
pop
jbe
cmpsb
sub
cld
add
test
repz
out
mov
loopne
lret
filds
inc
outsl
cmc
adc
jmp
lahf
shll
lea
xor
push
jp
or
cmp
stos
or
jecxz
pop
and
dec
mov
cmp
lcall
outsb
mov
test
or
inc
bound
imul
fidivrl
fidivrl
mov
lret
inc
adc
imul
ljmp
hlt
lret
in
mov
jle
cli
lahf
mov
fcomps
lret
mov
pushf
mov
into
lods
test
pop
add
xchg
jnp
jmp
push
mov
mov
call
fldenv
lret
push
pop
std
mov
lret
test
jnp
inc
add
pop
or
gs
adc
test
das
push
cmp
lret
mov
xchg
filds
push
mov
and
dec
testl
ss
stos
cmp
mov
pop
mulps
aam
add
push
cltd
or
inc
adc
cmc
jbe
cmpsb
insl
scas
lret
sbb
add
fstpl
adc
lret
int3
cmp
daa
ja
popa
out
and
jb
xor
je
lods
sub
call
cmp
mov
fwait
mov
add
push
leave
push
fsubp
mov
xchg
sub
adc
nop
adc
push
insb
jbe
call
sbb
push
add
dec
lret
dec
mov
repz
mov
mov
mov
idiv
xor
fstpt
xor
sbb
ss
mov
test
orb
pop
cli
xchg
loop
lcall
test
inc
cmp
cmc
mov
fcomps
int3
lret
rclb
pop
sub
popa
xlat
mov
rcl
in
sarl
fidivrl
push
inc
dec
jle
scas
das
jp
pop
ror
jno
rcl
mov
mov
and
lret
xorb
cltd
dec
lret
mov
add
lret
lods
pop
mov
mov
pop
movsb
mov
sub
push
xchg
arpl
sbb
lods
lds
insb
and
xor
divl
sub
lret
in
xlat
lahf
out
or
lret
add
lret
mov
loopne
xchg
xor
pop
test
xchg
into
mov
pop
cmpl
lret
dec
jbe
cltd
ficoml
adcb
ror
ds
adc
sub
inc
scas
mov
test
dec
push
xor
lret
xlat
in
xchg
cwtl
jmp
adc
jb,pn
bound
ja
js
je
es
hlt
pop
fstps
xchg
retw
movsb
ds
cmp
lret
call
dec
fiaddl
jecxz
pop
cltd
mov
cmp
xor
jae
in
cmp
stos
jns
xor
sbb
pop
movsl
arpl
xor
ss
xchg
stc
lret
mov
add
dec
pop
xchg
cwtl
out
lret
daa
std
jb
out
mov
jno
pop
jne
sub
jns
inc
mov
dec
mov
mov
popf
xchg
mov
xchg
popa
aaa
push
int
cld
insl
dec
mov
dec
ljmp
lret
out
icebp
gs
lods
cmc
lret
adc
mov
dec
inc
push
mov
sbb
test
cli
xor
sti
add
aam
jne
lret
push
xchg
or
aaa
and
mov
out
aam
mov
iret
xor
inc
mov
stc
shr
mov
into
ret
lret
in
mov
push
jge
pop
push
dec
shrb
sub
popa
lods
push
aad
pushf
pop
push
xchg
cmp
sub
add
jo
movsl
jl
lcall
ret
stos
mov
cs
push
mov
imul
ficomps
cmp
xchg
scas
mov
cmp
into
pop
sbb
jg
loope
fisubrl
das
scas
sub
sbb
int
repnz
loope
adc
orl
jnp
adc
mov
outsl
dec
enter
mov
sub
movsl
mov
out
lret
lods
iret
jo
lretw
mov
lret
dec
mov
lret
mulb
lahf
fnstenv
mov
es
fistpll
lret
mov
popa
adc
lret
outsl
js
mov
cmp
lea
aas
cmp
in
mov
xor
ret
fdivrl
lahf
push
test
ljmp
inc
xchg
and
xor
sbb
ja
punpckhdq
xor
fisubs
dec
daa
js
adc
neg
add
mov
mov
ja
lret
cmp
lret
bound
lds
fwait
in
cmp
shlb
sbb
jecxz
lret
ds
lcall
out
mov
add
push
into
and
inc
popa
lret
mov
out
mov
pop
push
jp
and
in
jne
push
pminsw
cltd
fdiv
stc
sbb
sbb
push
rolb
pushf
sbb
jo
mov
or
test
add
repnz
xor
subl
pop
add
xchg
lret
inc
rcr
ja
into
fwait
out
cmp
and
mov
daa
push
inc
sbb
cmp
cmc
lret
jno
jmp
dec
cmpsl
xchg
jmp
and
test
sahf
jo
ljmp
jns
insb
cmc
sbb
add
cmp
mov
call
or
adc
jg
pop
outsl
sub
fisttpl
jo
cltd
mov
orb
fxch
sub
xchg
in
mov
bswap
cmp
jo
imul
xchg
adc
fwait
dec
or
ficoml
addr16
cltd
push
xor
pop
lret
jo
jae
push
inc
push
jecxz
out
xchg
mov
lret
outsb
cmc
iret
fcoms
stos
jmp
xor
mov
ljmp
ror
leave
adc
test
mov
clc
cmp
push
lods
jnp
int
pop
sub
adcl
dec
and
shlb
scas
pop
lock
pushf
push
push
in
mov
jne
dec
int3
lea
je
popa
into
dec
jno
stos
pushl
push
lods
adc
jo
lret
fistpll
js
outsb
mov
pop
pop
mov
adc
lock
lret
stos
sbb
and
inc
fmuls
out
sti
mov
jbe
test
out
lret
in
xor
shlb
cmp
test
scas
in
jnp
inc
insb
lret
mov
ss
aad
ljmp
shll
cmp
pop
inc
imul
fcomps
xorb
push
sub
cmp
inc
cli
es
mov
movsl
xlat
mov
in
scas
jno
dec
loope
lret
add
fsubrl
int3
cmp
lret
mov
stos
lret
adc
movsb
pushf
stos
aad
stos
movsl
cmp
aam
lods
test
cmpl
scas
cmpsb
int3
lea
push
push
cmpsl
data16
add
movsl
lods
and
sti
sbb
xchg
add
xlat
fs
stos
push
xchg
mov
mov
enter
nop
lret
pop
insl
cwtl
mov
lods
in
test
mov
mov
push
dec
lret
pop
push
out
lcall
inc
jns
jmp
cwtl
add
lret
addr16
insl
scas
push
outsb
ss
fs
mov
imul
jl
int
dec
or
pop
insb
lea
pop
out
xor
and
jae
lret
in
neg
push
fnstcw
mov
dec
cld
pusha
xlat
push
lret
hlt
or
inc
inc
lret
mov
cwtl
testb
cld
shll
das
xchg
in
fcmovb
bound
xchg
fistl
popf
pop
frstor
xchg
adc
sub
mov
mov
pop
mov
inc
xor
in
cmp
add
jno
jns
cltd
push
repz
lret
pop
mov
dec
cmp
lods
stos
subl
popa
mov
lret
andb
dec
pop
adc
stos
or
daa
or
or
loopne
fadds
add
or
imul
inc
mov
int
lret
push
aad
cld
je
fiaddl
cmc
cmp
ror
and
repnz
xor
sti
cmp
and
jnp
mov
pop
ret
test
sub
movsb
cmp
cmpsb
inc
sti
lea
cmp
ja
lret
in
push
and
mov
or
cs
add
js
sub
mov
mov
jecxz
push
paddq
fwait
cmp
aaa
test
int
cltd
stos
ss
pop
mov
clc
cmc
lret
sub
imul
lret
cld
mov
lret
dec
xchg
mov
int3
push
inc
push
sar
ret
sub
pushf
jmp
dec
jno
frstor
push
cli
cmp
jae
mov
sub
stos
loop
fsubrs
movsl
or
xchg
popa
dec
dec
dec
mov
jnp
aam
lods
push
sub
ret
hlt
push
insb
fstps
dec
xor
sub
mov
lret
dec
dec
jmp
xchg
lret
imul
xchg
inc
sbb
sbb
push
lret
cmp
xchg
shlb
lret
fwait
sbb
daa
out
mov
insb
mov
mov
mov
pop
xchg
mov
sbb
rcrl
fnstcw
lret
add
imul
gs
cmp
lret
mov
mov
jle
dec
lret
loop
jmp
fld
cwtl
mov
in
jl
fcomps
dec
shll
jb
js
stos
lcall
cld
out
mov
lock
jle
inc
stc
add
mov
shrl
mov
fucomi
xor
leave
lret
xor
xchg
hlt
xchg
bswap
xchg
int3
mov
pushf
lret
xchg
das
into
ja
inc
mov
push
adc
fmul
mov
dec
int
mov
inc
js
test
leave
sahf
fidivs
fwait
ja
lret
rcl
or
lret
pop
rol
dec
call
rcrl
push
sti
aaa
xchg
adc
mov
xor
mov
into
testl
inc
mov
push
inc
movsl
iret
cli
adcl
loopne
pop
sbb
mov
dec
inc
popf
and
out
inc
mov
fs
cmp
imul
dec
lret
jmp
sbb
mov
xchg
inc
cmp
mov
cld
lret
bound
shl
not
test
jl
aam
inc
fisttpl
aam
enter
mov
fsubrs
pop
fwait
adc
into
inc
sub
in
lret
fimull
sbb
xor
fcmovb
mov
mov
loopne
xchg
idivl
lret
sub
andl
mov
adc
out
dec
fldenv
add
mov
aam
in
push
mov
shrb
mov
imul
dec
cwtl
dec
jno
adc
jne
jle
repz
mov
adc
push
ficompl
add
and
jo
xor
imul
pop
shlb
pop
xchg
xlat
call
test
lret
xchg
or
jl
cmpsb
lret
mov
js
sbb
lret
sarl
out
loop
rclb
orb
push
push
jb
adc
out
add
bound
shll
sub
dec
aas
aam
sub
dec
rorb
lock
nop
lret
inc
mov
rcrl
adcl
lret
cwtl
stos
or
add
jecxz
out
cli
lret
jb
stos
fiaddl
xchg
xor
inc
andb
push
add
inc
lret
loopne
mov
add
push
fsubp
add
and
sbb
iret
pop
outsl
lret
js
testl
insl
pushf
and
ja
push
sbb
mov
dec
or
lret
pop
pop
push
adc
shrb
mov
in
lods
jb
lret
mov
jge
dec
and
mov
aaa
in
popa
cld
cli
ja
and
push
pop
ljmp
mov
sub
lret
jne
jmp
lret
dec
gs
sbb
xchg
mov
lret
cmp
mov
and
outsl
mov
lret
mov
pop
lret
adc
lret
add
jge
jnp
lret
movsb
pop
sub
inc
mov
add
adc
insl
mov
xchg
or
pop
cmpsl
and
scas
fdivl
fldt
inc
aad
inc
idiv
xchg
mov
ror
into
fwait
cmp
ljmp
xchg
pop
insb
inc
xchg
sub
lods
out
adc
lcall
xchg
jmp
rorb
add
fcoms
jmp
lret
rorb
sbb
xor
in
js
push
and
lret
mov
insl
add
aam
or
lret
pushl
cmp
cwtl
cmp
dec
ljmp
and
lret
cmp
xlat
cmp
cmp
frstor
out
mov
inc
lret
jecxz
loope
xor
add
pop
and
xor
push
out
or
pop
jl
ficoml
out
cmp
invd
aam
mov
mov
lret
je
lea
inc
mov
pushf
lret
or
arpl
xchg
lret
add
test
lret
int3
shlb
movsl
rcrl
sti
mov
jl
mov
jp
rclb
inc
or
cli
jb
and
sbb
jl
mov
loope
cmp
mov
inc
jge
push
fwait
gs
xchg
cld
rcl
mov
cmp
orb
push
lret
fildl
lret
stos
clc
andb
dec
sbb
repnz
fs
pop
jnp
cmp
adc
cmp
lret
cmpsl
push
lret
sbb
or
mov
jmp
lret
repz
pmullw
xlat
xchg
sbb
dec
shlb
dec
fisubl
and
push
pop
cltd
mov
add
lret
jle
and
out
jge
jg
decb
mov
or
cmpsl
fisubrl
lods
iret
mov
jb
test
mov
ror
out
cmp
gs
dec
sahf
lret
shrl
outsl
test
mov
pop
cli
add
mov
lret
mov
mov
cmp
testl
jg
lret
xchg
popf
cli
jnp
dec
adc
mov
xchg
mov
daa
lret
xor
jg
cli
ds
inc
lret
pop
mov
stc
cs
rcrb
loop
jp
pop
sar
rolb
dec
outsl
and
sbb
lret
leave
iret
pop
cltd
sahf
lret
out
adc
and
mov
or
scas
push
ficompl
and
cmpl
push
fmuls
psubusw
and
mov
sub
dec
sbb
lret
cmp
mov
xor
imul
dec
stos
pop
xchg
test
lock
loope
and
test
or
cmp
cld
cmp
test
pop
mov
lock
sbb
lret
inc
outsl
cli
cld
imul
fwait
push
xlat
sub
in
lcall
outsb
lret
pop
mov
pop
stc
mov
call
cmp
mov
cmp
lret
les
lret
leave
pusha
aad
mov
dec
cld
mov
js
fdivrs
jne
int
push
icebp
mov
push
push
add
and
lret
adc
dec
mov
lret
cmpsl
out
pop
push
xor
fidivrl
or
xchg
lahf
sbb
push
jl
sbb
in
fisubrl
addl
inc
scas
mov
cld
ja
or
jecxz
cltd
icebp
loopne
lahf
pop
cmp
jno
adc
mov
into
adc
ret
add
inc
dec
fbstp
imul
mov
movb
lret
sbb
js
jae
ss
sti
lea
jo
rclb
imul
jne
negl
adc
stos
jmp
xchg
dec
repz
ficompl
xor
out
jl
inc
ret
nop
xorl
idivl
clc
add
dec
cmpsb
loop
lret
dec
jno
aaa
xor
jnp
shll
add
lret
into
scas
insl
loop
push
lret
je
jnp
jb
lret
mov
out
cmp
rclb
mov
inc
lret
jb
inc
loope
mov
or
add
mov
aam
push
mov
cli
jae
cmp
out
in
push
es
fildll
aaa
sub
and
dec
mov
add
mov
popa
push
rorb
pop
insl
lret
pop
cmp
mov
xlat
shll
lahf
jnp
jmp
sub
and
cli
mov
lahf
push
out
mov
lret
jb
scas
add
out
call
lret
leave
out
mov
fwait
mov
out
cmp
dec
xchg
ds
mov
mov
sbbb
arpl
mov
jl
adc
mov
mov
lds
lods
lret
testb
push
les
lret
clc
repz
rolb
lea
negl
inc
xchg
subb
cmpl
lret
dec
loopne
and
cmp
roll
inc
add
les
stc
push
cmp
cmpsl
xor
mov
xchg
stos
or
add
push
jle
sbb
out
or
loop
push
movb
and
gs
xchg
in
mov
push
jmp
aas
aad
push
pop
mov
fsubrl
cmpsl
xchg
adc
push
push
lret
xchg
mov
lret
sti
xor
dec
pop
lret
xchg
int
push
adc
lea
lret
inc
shrl
leave
outsl
out
pop
xchg
iret
lds
popf
lret
orb
ja
out
andl
lret
push
ror
sbb
jecxz
lret
dec
mov
lret
les
dec
int
arpl
mov
lret
jg
lret
mov
hlt
ret
mov
clc
xchg
popa
imul
jle
pop
mov
xor
movb
inc
lret
sti
scas
repz
add
cmp
sahf
popa
jbe
clc
or
or
add
jae
scas
mov
cmp
stos
ljmp
jno
sub
std
aas
insl
mov
push
mov
cmp
aam
insl
lods
push
lret
data16
xor
call
out
xchg
jns
rolb
les
movsl
pop
pop
mov
iret
insl
fldenv
lret
shrb
lret
call
cmp
cmp
ds
lret
mov
lods
lret
mov
call
and
cmp
aad
xor
fcompl
or
shlb
xchg
lock
into
jecxz
loop
in
jns
cli
loopne
xchg
pop
or
push
lds
or
or
fisubrs
xchg
bound
sub
lea
xchg
mov
lret
sub
mov
add
in
sbb
pop
shl
mov
shll
push
lret
mov
dec
lret
xchg
push
rcll
insb
mov
iret
mov
xlat
xchg
cmp
add
pusha
lret
pop
jae
repnz
in
lods
cs
lret
mov
fisubrl
in
sbb
fnstcw
mov
imul
lods
roll
rclb
popa
jp
jge
popf
lret
lret
xor
sbb
pop
roll
mov
push
lret
push
inc
xchg
lcall
ret
xor
lret
in
pop
jecxz,pn
lret
sbb
pusha
test
lret
rcr
into
lret
outsb
sbb
dec
jle
xchg
xchg
xchg
fs
rol
xchg
iret
dec
pop
pop
scas
push
adc
clc
jne
or
push
outsl
aam
cmp
pusha
sbb
push
lret
mov
cli
lret
mov
add
out
cltd
jo
in
mov
adc
shlb
test
adc
push
aas
lret
pop
les
push
lret
and
dec
pop
lods
sub
int3
roll
xor
movsl
pop
add
sub
and
in
icebp
jp
or
mov
and
out
lret
sbb
push
mov
mov
in
or
mov
pusha
mov
mov
push
push
lret
cmp
add
jmp
clc
sub
sbb
into
dec
jo
jge
lret
jle
mov
lret
outsl
push
sub
jns
jp
in
cmp
and
int
lahf
mov
adc
dec
pop
lret
std
mov
push
lret
shll
dec
int3
es
inc
aam
cmp
inc
push
imul
add
inc
mov
mov
divb
loopne
outsb
push
xor
adcl
push
outsl
clc
pop
mov
movsl
cli
jp
jns
es
dec
ja
xchg
adc
xlat
imul
mov
fmuls
pop
jge
mov
mov
stos
push
rclb
rcl
nop
lret
sub
icebp
imul
iret
xor
push
into
cwtl
or
lret
jno
and
inc
addr16
cmp
cmpsl
cli
sub
pop
or
sbb
sbb
test
mov
fs
cmp
insl
and
push
or
adc
repz
adc
jno
sbb
xor
lret
in
pop
popa
mov
lret
add
mov
les
jmp
lret
mov
jno
xchg
cmp
fwait
lret
fistpll
xor
pop
lret
jns
or
mov
push
scas
lret
aam
cs
scas
test
movsb
push
loop
pop
jmp
mov
lret
iret
ss
cmpsb
mulb
popf
dec
out
jo
pop
cltd
js
pop
pop
sbb
pop
add
push
es
lret
popa
mov
lods
ficoml
movsl
xor
sarl
lret
dec
push
jp
inc
mov
xchg
daa
rcl
mov
outsb
mov
movsb
out
sti
pop
shll
lea
inc
jl
adc
xchg
cmp
fiaddl
dec
in
sub
movsb
shl
lahf
into
scas
lret
jb
jnp
cltd
popa
mov
lret
aaa
bts
ds
jl
xchg
jnp
xchg
cmp
in
repnz
inc
sbb
insb
lret
xchg
aam
orb
inc
adc
add
adc
lret
pop
cmp
lret
and
inc
fisubl
push
inc
fsts
test
sar
and
lret
xchg
lds
adc
cmp
in
lea
dec
rclb
push
lret
cmc
cmp
cmp
cmp
adc
lret
aam
fst
lcall
cmpsl
jmp
cmp
pop
and
rsm
dec
jmp
mov
out
inc
fnstenv
push
mov
int3
push
insb
loope
nop
int3
sahf
xchg
lret
in
xor
jne
leave
mov
lret
es
int
negb
jo
mov
push
fisubl
cmpsb
test
or
xor
fistl
mov
loopne,pt
mov
lret
mov
and
sub
and
iret
gs
stos
inc
and
adc
ret
fdivrs
fildll
insl
mov
fcmove
xchg
sbb
add
imul
mov
mov
mov
int3
and
and
mov
stos
xchg
imul
stos
popa
cmp
lahf
xor
jbe
pop
rcll
out
cmp
sbb
or
push
int
lret
pop
jle
or
lret
cs
arpl
lret
sarl
jecxz
push
sub
dec
fisubs
lret
lock
xchg
pushf
cwtl
in
lret
jns
sbb
add
addr16
out
mov
jno
rcrl
daa
xchg
add
aad
mov
out
mov
fldl
mov
in
adc
push
fcomp
mov
lret
stos
int
dec
mov
sub
scas
into
or
sbb
insl
cmp
sub
shrb
lods
lret
sbb
lret
movsb
or
cmpsb
mov
cld
stos
jne
negl
cmpsl
ror
mov
inc
sbb
lret
mov
inc
in
out
sahf
push
ss
divb
or
cmc
mov
and
xlat
mov
cmp
int3
add
lahf
cmp
idivl
sub
lcall
mov
fwait
pop
cmp
lret
xchg
jecxz
and
xor
arpl
into
xchg
je
dec
mov
mov
sub
mov
cli
jbe
and
shl
scas
loope
ficompl
aam
jns
test
pop
ss
cmp
mov
xchg
scas
notl
lret
mov
mov
scas
test
dec
int
jne
sbb
lea
lret
mov
sub
push
push
shl
push
adc
pop
dec
push
xlat
lret
in
mov
out
dec
fisubrs
lret
push
test
fbstp
pop
push
in
aad
mov
push
test
inc
mov
mov
xor
jno
lock
xor
ljmp
mov
lret
inc
xchg
neg
sbb
mov
lock
xor
lret
cli
dec
bound
lret
xor
sbb
lret
into
adc
popf
repnz
add
rolb
jno
sub
mov
imul
mov
lret
xor
hlt
movsl
stos
lret
cmpsl
push
mov
xchg
push
xchg
outsl
jae
sub
out
dec
call
sbb
daa
cwtl
mov
or
bound
pop
xchg
push
ficoml
outsb
xor
mov
lcall
lret
mov
repz
cmp
dec
insb
cmp
cmpsl
test
daa
es
icebp
jecxz
shl
pop
lret
cwtl
sbb
loope
stos
mov
mov
std
in
cmp
lret
inc
ljmp
lods
shlb
xchg
xor
inc
lret
push
daa
add
sub
mov
dec
cli
xrstor
mov
int3
outsb
dec
lret
aad
adc
lret
movsb
test
mov
jmp
lret
adc
mov
pop
sti
xchg
clc
cli
inc
add
repnz
xlat
sarl
xlat
insl
lods
sbb
test
in
les
add
xchg
mov
aaa
cli
cs
mov
pop
pop
mov
mov
jno
push
scas
lret
cmpsb
fimull
add
xchg
lret
pop
leave
mov
mov
into
ljmp
lods
popl
cmp
popa
out
add
ficoml
out
aam
jle
lret
mov
fadd
cmpsl
push
mov
dec
rorb
mov
sbb
dec
test
movsl
gs
test
out
lret
fs
jl
jns
adc
push
inc
lret
test
cltd
sahf
mov
aam
pop
rolb
mov
popf
movsb
pop
fmul
push
jb
ja
out
or
test
outsl
into
inc
push
ds
add
loope
mov
add
pop
mov
jb
lret
xor
jle
mov
lret
and
lret
ret
into
cli
jb
test
mov
aam
ja
xchg
mov
add
in
push
push
lock
stos
xchg
mov
add
cmpsb
ror
push
add
rorl
xchg
lret
add
lret
dec
ds
inc
mov
push
cmc
xchg
rcll
imul
inc
fidivrl
and
xlat
cltd
lret
fs
out
fisubs
dec
lret
stos
gs
mov
fcoms
dec
mov
or
dec
test
aas
dec
fstps
pop
shlb
dec
cli
sub
icebp
addr16
les
ror
cli
cmpsb
js
aam
push
pop
testb
lret
cltd
lahf
fdivrl
loop
dec
lods
inc
push
push
mov
sahf
mov
jmp
aam
ds
lret
push
add
pop
es
add
sub
cmp
shlb
insl
je
adc
lcall
ds
popa
pop
or
mov
xor
cmp
and
addr16
lret
inc
pop
jl
pop
mov
mov
es
xlat
pop
add
add
mov
inc
loop
add
or
js
rcrb
ret
mov
repnz
lret
je
jg
andb
or
fisubrs
scas
or
mov
adc
xchg
dec
sbb
shrl
xchg
push
js
and
psubb
lret
out
inc
adc
movsl
lret
xchg
pop
inc
mov
shll
mov
jmp
scas
push
lret
sahf
mov
mov
movsb
xchg
fwait
pop
sbb
lret
push
inc
cmp
mov
jl
popf
xchg
add
xor
pop
js
jae
rcrl
nop
je
jno
sbb
sbb
lret
add
push
stc
inc
lret
mov
jle
movsl
mov
mov
mov
lret
xor
inc
sub
mov
cmc
add
jg
into
sarl
mov
lea
xchg
je
jno
je
js
lret
sub
add
sarl
mov
cmp
xor
push
cmp
loopne
daa
mov
mov
hlt
add
fcmovnbe
dec
pop
mov
cmp
cld
outsl
lret
cli
sbb
and
pop
xchg
inc
es
and
fs
into
jecxz
gs
pop
ljmp
mov
mov
cmpsl
leave
add
aad
fildl
jae
pop
mov
push
lds
or
dec
push
movsl
lret
jnp
mov
fcompl
cmpsl
rclb
test
lahf
js
lret
scas
imul
jns
loopne
pop
lret
or
pop
fcmovu
cmp
mov
mov
in
jp
mov
adc
lret
cmp
push
imul
imul
enter
jmp
outsb
fmull
or
pop
sub
and
push
inc
fmul
imul
pop
popl
loop
ret
lret
push
jl
xchg
lds
cmc
inc
pop
loopne
gs
shll
lret
push
mov
pop
lret
sti
out
xor
cmp
xchg
sbb
nop
cli
testl
bound
xchg
lret
cwtl
cmpsl
inc
add
or
sbb
or
pop
iret
add
mov
out
cmc
jle
andb
jbe
leave
sub
stos
mov
sar
mov
andb
inc
xlat
push
leave
push
cli
inc
ss
adc
sbb
and
ror
cli
jbe
push
inc
pop
or
outsl
cmp
js
loopne
inc
mov
shrl
pop
and
mov
push
jns
out
dec
cmp
das
ss
lcall
fnstcw
popa
fcoml
cli
jno
jmp
int3
test
pop
aad
mov
pushf
loop
fwait
std
adc
dec
pop
addr16
sub
stos
cli
mov
add
jp
and
mov
imul
adc
dec
rcrl
xchg
sbb
ret
mov
movsb
lods
mov
stos
daa
outsb
sub
andb
inc
xchg
ror
xlat
jno
sbbb
dec
ficomps
mov
and
test
push
in
ds
dec
dec
dec
shlb
jno
jmp
fstl
pop
shrb
lret
mov
in
pop
cmp
inc
push
or
les
pop
sbb
push
lods
push
cli
mov
jle
jge
fs
pusha
inc
lret
loop
subl
cli
dec
or
cmpb
mov
notb
mov
test
push
imul
subl
sahf
mov
arpl
aas
or
ds
dec
add
mov
dec
inc
int3
xchg
mov
mov
jns
jno
pop
lret
pop
icebp
ds
push
xor
xchg
repnz
sub
or
jmp
mov
nop
fcompl
imul
enter
gs
insb
adc
pop
mov
xor
hlt
sbb
sbb
cmp
decl
js
in
iret
mov
lcall
lret
fiadds
mov
adc
bound
xchg
push
stos
sub
out
stos
movsb
mov
pop
dec
out
inc
sbb
jo
stos
divl
lret
jne
xchg
mov
or
sub
icebp
push
fnstsw
movsb
lret
scas
cmp
les
push
shlb
nop
sub
lret
imul
cwtl
cmp
xchg
call
pop
dec
lret
into
in
sub
push
inc
inc
mov
popa
pop
sub
clc
lret
pop
pop
je
add
hlt
mov
test
sub
jb
inc
and
aam
jl
clc
int
inc
cwtl
or
fidivl
cmp
sub
xor
scas
pop
push
mov
mov
hlt
fsubs
shlb
add
jo
lret
adc
sbb
push
stos
mov
scas
gs
cmc
mov
test
insl
frstor
add
mulb
inc
aas
xor
inc
jne
lret
mov
test
xchg
outsl
cmp
sbb
push
lret
and
loopne
ljmp
rcrb
rol
sub
out
dec
push
addr16
repnz
inc
movsb
hlt
sub
aam
daa
push
lret
stc
xor
int
lret
xchg
cmp
lret
pop
adc
popa
jb
sbbl
sbb
sub
xchg
mov
pop
jae
mov
call
dec
fmulp
xchg
test
cmp
out
inc
adc
mov
fiaddl
pop
into
mov
fdiv
cmp
mov
leave
mov
adc
sub
mov
fimuls
adc
js
clc
lret
insb
push
fadd
mov
push
in
lret
sti
lds
pop
lret
pop
incb
xchg
push
lret
mov
push
lret
mov
lret
mov
inc
fcmovb
and
int3
pop
sbb
into
or
dec
mov
clc
in
out
mov
mov
rcrb
ror
insb
push
sbb
or
out
aaa
mov
loope
cmp
lahf
mov
mov
cmp
dec
sbb
sti
sti
ljmp
xchg
xchg
mov
add
xorl
mov
gs
mov
lods
fs
adc
mov
lret
mov
or
xchg
call
ss
mov
push
scas
sahf
lret
push
jae
insl
stos
lret
xchg
lcall
mov
imul
lret
in
adc
aas
pop
mov
test
fwait
push
fcomps
lret
mov
mov
fidivl
cltd
es
add
lret
out
test
sbb
lret
popa
dec
icebp
int
mov
lea
cmc
lods
fstl
push
lret
push
test
and
xchg
pop
cmp
mov
push
xchg
adc
lret
pop
jle
std
cmp
lock
lds
stos
push
idivb
arpl
xlat
pop
cmp
lret
inc
and
mov
loopne
mov
lret
inc
not
push
cwtl
lret
mov
inc
je
rcrl
cmp
loope
lret
testl
sub
lret
es
push
pop
xchg
or
or
ss
inc
dec
xor
push
mov
pushw
sbb
lods
lret
jle
and
movsb
jp
add
lret
adc
jl
fwait
and
mov
inc
sbb
sub
bound
sahf
loop
in
cmp
or
cmp
mov
add
sbb
cmp
repnz
adc
lret
adc
clc
mov
mov
xlat
cs
mov
dec
enter
xchg
adc
into
lods
es
hlt
lret
js
mov
icebp
fidivl
sbb
fsts
scas
pop
lods
cli
arpl
mov
int
push
cli
add
and
rol
xlat
enter
jo
add
cmp
jnp
inc
aad
into
push
lahf
lret
fmull
sub
out
fisubrl
cwtl
lea
jmp
lret
mov
sub
shlb
lret
xchg
daa
push
dec
sbb
lret
lods
add
popl
lretw
es
stos
xchg
pop
or
js
icebp
shl
ja
insl
pop
stos
mov
hlt
push
xor
cmp
stc
call
dec
in
or
cwtl
dec
jae
push
lcall
lods
lods
cwtl
rorb
cltd
mov
js
push
mov
movsb
mov
cld
imul
inc
push
inc
push
push
testb
aad
or
mov
xchg
lret
pop
ret
lret
inc
out
xchg
rclb
rcll
lret
bound
cmp
dec
fyl2xp1
xchg
icebp
repz
mov
mov
insl
jns
imul
xchg
das
xchg
in
leave
push
lods
or
lahf
mov
int3
jbe
mov
ds
test
lret
aad
ret
test
out
push
repz
std
dec
int
imul
xchg
bound
int
inc
pop
daa
iret
das
cmp
push
xor
xchg
cld
cmp
rclb
shrb
sbb
movsb
ret
shlb
cmpsb
fisubl
fsubs
push
mov
cli
and
push
aas
pop
stc
lret
int
mov
fs
push
out
inc
jge
push
or
sub
sbb
int3
pop
lret
test
pop
pop
fs
push
stc
shlb
in
mov
lret
add
sub
icebp
imul
in
orb
sarb
jnp
adc
rolb
mov
mov
sbb
mov
fdecstp
jp
cwtl
cmp
ss
test
aam
lea
call
mov
stc
or
xor
push
push
and
cmp
ret
dec
lret
xor
mov
sub
and
scas
inc
cs
aad
stos
or
dec
mov
inc
cmp
cmp
mov
pop
das
shr
jp
mov
sti
ror
popa
dec
neg
lret
ret
pop
sbb
or
or
negb
mov
xorb
cmp
sub
push
push
out
lret
ret
ja
and
xlat
cmpsl
fs
sti
xor
shlb
jle
cli
lret
in
aas
adc
ljmp
shrl
jno
andps
pushl
fsubs
clc
fidivl
les
fcomps
push
icebp
adc
sbb
or
mov
mov
lret
repnz
cmpsb
jmp
and
mov
adc
out
stos
mov
push
pop
cli
and
repnz
shrb
dec
sbb
aam
push
sbb
mov
lret
cmp
lcall
cli
lret
fs
lock
xlat
ret
nop
and
popf
and
push
xchg
adc
mov
inc
repz
cmpsl
or
rorl
cmp
mov
mov
sbbl
push
and
fdivs
dec
fnstenv
cli
add
fdivrs
pop
in
popf
inc
or
push
lds
out
rclb
pop
lret
bound
cmp
push
aam
cmpsb
add
lret
jne
cmp
xor
ret
mov
xchg
imul
pop
jbe
test
lcall
add
mov
xor
call
xor
xor
mov
int
test
fistps
stc
push
ljmp
rcrb
jns
dec
shl
xor
xchg
fisttps
lret
inc
mov
inc
mov
loop
cmpsl
mov
lret
xchg
push
fldt
mov
into
roll
out
loop
clc
std
dec
mov
fs
inc
sbb
fildl
jo
cld
mov
call
adc
mov
dec
inc
dec
cmp
int3
lret
mov
in
outsb
jo
lret
loopne
add
pop
inc
stos
sbb
and
out
lret
pop
movb
push
dec
push
push
stos
mov
lea
push
xlat
cmp
pop
add
hlt
lock
inc
cmp
mov
xchg
popf
int3
sbb
jle
js
sbb
insl
and
lret
pop
gs
dec
test
jmp
adc
movsl
arpl
stos
mov
pop
je
stos
push
push
loopne
cmpsb
lret
cwtl
mov
es
scas
xor
add
in
sub
add
adc
cmp
sahf
pop
cli
fsub
lock
aam
and
cli
js
mov
hlt
arpl
bound
sti
sub
shl
jle
fsts
lret
cmpsl
into
insl
push
xor
insb
jle
in
inc
pop
mov
cmp
lret
xor
push
jge
nop
test
sub
mov
into
cli
test
jp
pop
addr16
cmp
test
nop
dec
push
sbb
bound
dec
push
cli
xor
aaa
fisubl
pop
inc
repz
fdivrp
mov
xchg
mov
push
les
jnp
shrl
xor
inc
ret
and
mov
lret
gs
push
sub
mov
or
aaa
lret
cmp
ja
roll
lret
and
stos
mov
rcrl
ror
xor
inc
or
cmpsl
jb
loop
fwait
es
mov
in
sbb
lret
inc
loopne
jmp
fmul
into
fistl
fs
jne
pop
icebp
stc
gs
xchg
sub
in
push
in
clc
jo
ficomps
pop
fisttps
ss
lds
dec
sbb
cmp
pop
xor
sub
int
push
xor
fldcw
nop
dec
pop
rorb
mov
mov
movsl
jmp
gs
mov
adc
add
ss
ficoml
sub
pop
in
faddl
lret
xor
das
sbb
lret
add
imul
test
addr16
or
cltd
mov
stc
popf
inc
lock
add
lret
test
pop
lret
xor
ja
sub
jae
scas
lcall
ficoml
xchg
stos
stc
icebp
rcl
pop
imul
push
add
adc
adc
jb
jp
pop
jle
xchg
rclb
stos
out
aas
test
pop
fmul
jl
fstl
jmp
lret
hlt
mov
int3
cli
fisubrl
adc
fwait
mov
in
mov
jge
call
mov
stos
insl
dec
mov
dec
out
dec
aam
push
and
inc
mov
fsubs
mov
xchg
in
daa
xchg
inc
or
rcrb
jnp
mov
lret
imul
cltd
out
sahf
dec
rcrl
pusha
push
insl
fistpl
push
jg
lds
lret
mov
jbe
jo
cmp
dec
sub
pop
mov
jle
test
mov
lret
decb
dec
push
mov
inc
mull
cmp
loopne
and
aad
xchg
push
jo
inc
stos
divb
lret
insl
data16
fisubs
cmp
aad
push
fucompp
aaa
ja
cmpl
inc
in
les
je
loop
int3
fs
mov
jne
jno
mov
enter
neg
xor
cmp
cmp
inc
jns
lret
push
xchg
mov
daa
stos
mov
shr
pop
clc
jge
hlt
popf
movsl
ljmp
and
lret
pop
in
mov
out
dec
fdivl
and
lret
sub
pop
mov
push
repnz
frndint
sbb
lret
dec
push
push
mov
xchg
sub
subb
add
mov
cld
ret
xor
test
and
lret
das
mov
lret
repz
mov
push
pop
sbb
ljmp
lea
outsb
int3
jle
call
push
lods
cltd
lret
cs
lret
sub
lret
lahf
in
ret
xchg
fsts
lret
cmp
jo
rorl
push
lret
fistl
push
sbbb
jp
xchg
mov
sarb
jnp
idivb
xchg
repnz
adc
add
pop
lret
test
lret
out
push
push
adc
leave
out
mov
lret
imul
inc
cmpb
shlb
fadds
out
xchg
outsl
jp
mov
jl
and
fisubrs
out
lret
mov
inc
mov
push
lret
aad
cmpsb
enter
dec
fst
loop
xchg
jge
fmulp
jns
inc
mov
dec
js
lods
push
sahf
sbb
jp
repnz
inc
pop
out
movsl
lret
lret
push
fisttps
js
or
testl
lret
adc
xchg
cmp
enter
addr16
clc
xchg
mov
cltd
std
mov
ja
in
mov
inc
inc
scas
rorb
sub
insl
mov
jp
pushf
jne
push
aas
lret
js
inc
mov
lret
scas
mov
jmp
cld
push
mov
into
sub
lret
mov
xchg
out
in
lret
in
pop
or
lret
insl
cmpsb
jnp
aam
lret
fwait
or
sub
jns
adcb
stos
mov
bound
cmp
sub
add
dec
enter
es
dec
lret
xchg
or
or
movsl
stos
pop
mov
lret
push
out
push
js
or
es
jne
add
nop
leave
shrl
sub
sub
stc
push
push
jo
ja
lret
outsl
mov
in
loop
jp
push
clc
push
lret
xor
mov
cmp
sbb
pushf
shlb
pop
lcall
out
or
push
xchg
push
sbb
stos
pop
ror
xorb
loopne
call
jns
icebp
cmpsb
mov
in
or
mov
repnz
data16
mov
ret
xor
lock
in
loop
jnp
mov
cld
insl
dec
out
lret
flds
and
outsb
push
add
push
bswap
pushf
or
cmp
addb
push
jb
ljmp
rorb
mov
rolb
sub
dec
mov
arpl
mov
inc
fsubl
dec
mov
sarb
mov
jp
out
jne
cmp
stos
xchg
xchg
sub
push
cmp
dec
mov
dec
lahf
jge
fisubrl
outsl
daa
xor
mov
icebp
scas
test
or
inc
inc
and
jg
leave
stos
nop
std
cmpsl
ds
pop
ljmp
mov
ret
jae
xorl
pop
or
dec
jbe
testb
pop
push
pop
inc
repz
iret
aaa
and
pop
jecxz
mov
sarb
insl
dec
sub
cli
pusha
stos
pop
jmp
xor
dec
in
mov
or
aas
inc
lret
cli
xchg
lods
add
lret
mov
inc
or
fdivs
lret
cmp
ds
xor
sbb
cmovs
mov
mov
sarb
dec
das
cmpsl
decl
pusha
mov
xchg
ror
or
fists
inc
cmp
stos
shlb
pop
lret
xchg
neg
jl
outsb
xor
in
jns
or
cmp
mov
adcl
jmp
mov
cmp
push
mov
stos
sti
mov
mov
aam
cwtl
sub
push
mov
flds
sub
fisubrl
cltd
mov
es
sbb
pop
mov
fstp
xchg
ret
ds
lods
rclb
mov
stos
pop
cld
stc
fidivs
or
mov
sub
mov
push
mul
mov
fiaddl
sub
mov
into
sub
test
cld
or
lea
lret
sahf
jmp
lret
push
loope
add
mov
xchg
xchg
xchg
cmp
call
and
pusha
lret
test
enter
push
lret
and
lret
fdivrs
pop
cld
jo
pop
lret
stos
sbb
lret
mov
inc
lret
adc
inc
cwtl
test
dec
xchg
xlat
cmp
xor
lock
mov
ret
stos
xor
popa
aam
daa
pop
out
xchg
lret
push
sbb
call
push
ror
aaa
xor
mov
shrb
pop
xchg
sbb
nop
ficompl
lock
shrl
or
shll
push
dec
lret
lret
sbb
or
dec
inc
sub
fs
adc
sbb
les
push
xorb
cmpl
fnstsw
mov
out
mov
cwtl
fcmovne
lret
popl
lret
leave
dec
or
mov
and
js
cmp
mov
jecxz
sarb
lret
pop
mov
loope
jns
jg
jge
repnz
dec
xlat
mov
shlb
mov
push
sub
insb
sbb
mov
loope
cmp
sub
sub
roll
popa
jo
pop
mov
adc
push
sub
rcl
cmp
jnp
or
shr
std
repz
lret
jg
loope
jb
xor
push
imul
pop
shrb
push
ljmp
add
or
lret
shlb
xor
and
lret
pop
cwtl
sbb
xchg
lock
jmp
cmp
push
mov
into
push
and
into
ja
aad
leave
pop
jnp
popa
test
or
outsb
mov
pop
ds
adc
ror
push
mov
push
cmp
sti
push
cmp
cmpsl
cmp
scas
ss
iret
popa
lret
sahf
and
sub
xchg
mov
imul
pop
sbb
lret
cmp
stos
lock
sarb
mov
dec
pop
stc
xor
jecxz
and
mov
lret
sbb
jg
xchg
lret
jo
movsl
out
inc
mov
fnstenv
stos
cli
fdivrs
sbb
jne
sarb
cmp
pop
cmp
ds
sbb
lret
les
lret
lahf
ss
xchg
mov
add
lods
dec
push
pop
jbe
lret
fs
pop
cmp
pop
lea
push
fnstenv
jge
mov
loopne
push
int
pop
lret
xor
cmp
inc
cmpb
inc
lret
push
fcmove
shll
xlat
sub
iret
mov
cmp
popa
inc
add
mov
in
inc
into
dec
aaa
mov
ret
push
jge
xchg
rolb
fstl
lret
adc
sbb
pop
std
sub
out
insl
sub
sbb
lret
and
xchg
lret
fistpll
inc
cmp
add
pop
aaa
call
mov
shll
lret
pop
dec
in
aaa
xor
insb
jp
scas
lret
shrb
es
or
pop
push
xchg
adc
mov
mov
into
pop
inc
inc
fsts
int3
mov
mov
add
cmp
sbb
arpl
cs
subb
mov
mov
pop
or
mov
lret
mov
fmulp
out
pop
jb
mov
daa
shll
xor
push
sub
fcmove
stc
add
mul
lret
inc
mov
cli
dec
ljmp
shl
mov
hlt
aad
lret
pushf
jno
ss
lret
adc
dec
inc
push
lret
pop
cmpb
mov
push
repnz
lea
cmc
test
mov
stos
fs
add
imul
lahf
ja
arpl
andnps
stc
push
ret
rcll
add
sbb
adc
jno
mov
aam
into
mov
lret
mov
pushf
fdivrs
mov
jge
stc
cmc
lret
xchg
loope
pop
loope
stos
leave
sbb
das
into
fs
mov
aam
or
subb
subb
mov
dec
int
jns
rcr
sar
inc
call
lret
cs
pop
aad
adc
movsb
out
push
mov
js
out
mov
lret
out
mov
cmp
xor
lret
shlb
mov
xchg
dec
adc
stc
sub
push
sub
addl
orb
aam
insb
addr16
jmp
or
nop
sbb
or
pop
in
dec
lret
mov
ss
push
dec
lret
jae
jecxz
jno
lret
push
jge
mov
mov
jp
cs
into
mov
scas
or
mov
popa
into
jmp
lret
or
dec
fwait
mov
mov
lret
jns
cmp
pusha
mov
je
jno
lretw
mov
insl
mov
movsl
lret
ret
lea
mov
adc
clc
sbb
out
xchg
pop
jge
and
adc
lret
negb
mov
jae
lea
mov
jns
dec
xchg
icebp
jmp
adc
fstpl
sahf
inc
lret
xor
cmpsb
test
pop
mov
xorl
sub
inc
xchg
lret
stc
test
xor
inc
cmp
push
movsb
dec
pop
int3
ficompl
call
push
push
mov
lods
imul
fisttpll
mov
xchg
not
xor
or
lret
lahf
push
stos
loopne
cmp
adc
sahf
jle
arpl
jp
lret
sub
rcr
lahf
adc
stos
dec
insb
lret
pop
test
ret
stos
xchg
cmc
jmp
ja
mov
sbb
and
or
mov
jp
dec
rorb
lret
mov
stos
mov
inc
lret
pop
aas
sbb
inc
gs
stos
pop
adc
mov
pop
dec
mov
sahf
mulb
pop
fwait
ds
jge
mov
mov
lods
or
fistps
sub
mov
cmp
jae
std
pusha
stos
movsl
dec
insl
outsl
out
test
shll
mov
inc
pop
jmp
xlat
push
bswap
pop
sub
xchg
lret
push
or
icebp
push
lretw
int
mov
mov
mov
push
shl
sub
add
jb
and
mov
lret
xchg
fldcw
inc
stos
push
lret
cmp
inc
cmp
push
mov
pop
cmp
push
in
dec
movsb
ljmp
fs
dec
mov
ja
popf
or
fwait
cmp
pop
lret
mov
cmp
sub
scas
xchg
push
xor
and
addb
rol
push
loope
mov
int3
lock
lret
or
stos
mov
cmp
lret
pop
xchg
jb
inc
ret
inc
dec
mov
test
cmp
lods
leave
or
push
into
rcll
es
push
lret
push
and
test
xchg
or
pop
test
push
test
in
xchg
sahf
sbb
idiv
mov
pop
aad
lods
cli
rorl
push
xor
cmp
pop
aad
sarb
fists
addb
ret
ror
stos
sub
outsb
push
lret
imul
fwait
mov
cld
in
xlat
mov
sbb
dec
and
mov
lret
adc
loope
mov
stos
jo
push
call
in
add
cmovb
xchg
mov
lret
aam
enter
adc
inc
lret
in
xor
jmp
jo
lret
mov
cltd
loope
imul
mov
mov
leave
mov
rorl
dec
or
xor
test
pop
add
fcoms
xor
insl
mov
pop
lret
int
iret
aas
lret
add
inc
cmp
imul
iret
rclb
pop
aas
mov
dec
add
movsb
mov
cmc
rcll
push
or
mov
inc
clc
mov
cmpsl
lock
push
daa
and
inc
lods
lds
test
daa
adc
and
scas
lret
testl
rcl
inc
push
sbb
mov
jo
outsb
test
shrb
js
lret
add
fsubrl
test
std
adc
push
repnz
pushf
mov
ds
push
adc
aam
rcrl
stos
mov
out
icebp
jge
add
lret
cmc
in
loop
jle
mov
jb,pn
jnp
pop
lret
addb
aad
push
lret
xor
rcrb
push
lret
and
jecxz
rolb
fiadds
ret
cmp
push
in
push
jp
mull
fldcw
dec
mov
imul
add
mov
mov
rorl
scas
and
cmpb
lret
jno
outsb
mov
enter
cli
mov
xchg
or
add
lret
or
sbb
jae
inc
test
mov
xorl
lret
push
add
jl
push
inc
aad
lock
sub
pop
lret
aaa
pop
mov
dec
ret
loopne
push
lret
fs
cli
mov
lret
jne
gs
shll
rorl
mov
push
popf
adc
dec
cltd
ljmp
out
in
xchg
cmp
add
cld
cmp
rorb
inc
jne
cmpsb
dec
sahf
out
shrb
or
mov
and
addb
rolb
lret
jmp
lret
mov
push
mov
or
cmp
sbb
cmpsb
aad
dec
outsb
add
cltd
push
jmp
lret
cld
or
lret
lret
jo
aaa
adc
mov
fnsave
jmp
adc
lret
inc
popf
test
cli
mov
and
outsb
imul
and
cli
adc
leave
dec
in
aam
lods
arpl
pop
or
jo
movsb
sbb
rcrl
push
stos
sub
stos
cld
sarb
fwait
jl
jmp
daa
imul
fcompl
dec
mov
cmp
popl
sub
and
dec
lret
jg
stos
ret
lret
push
pop
add
ja
mov
sbb
stc
std
mov
mov
mov
xor
cmp
adc
and
stos
sbb
xor
repz
ja
push
push
pop
les
push
add
movsb
cld
loop
enter
sub
xchg
fwait
lret
scas
or
mov
cld
xchg
addr16
sbb
fisubrl
dec
popa
rcrb
test
mov
mov
jb
lret
dec
fidivs
leave
repnz
sub
mov
adc
rorb
mov
nop
lret
inc
lods
cli
fmul
ja
aam
std
mov
lret
xchg
mov
cld
lret
adc
xor
add
cmc
sarb
outsl
pusha
mov
and
rclb
fstl
lret
outsb
xchg
es
icebp
stos
lret
xlat
push
adc
mov
test
pop
xchg
stc
xor
lods
in
jne
movsb
mov
fstl
jecxz
ja
lret
shlb
mov
mov
ss
cli
lret
push
lods
flds
cmp
xchg
xor
inc
mov
sbb
int3
add
sbb
lret
sbb
lret
leave
mov
or
or
adcb
iret
in
scas
arpl
add
cld
cmp
hlt
push
mov
dec
xchg
lret
pop
movsl
sbb
and
outsl
mov
adcb
add
aaa
cwtl
ljmp
dec
lret
xor
fbld
lret
sbb
lret
shll
in
lret
sub
lods
in
fwait
mov
mov
lret
loop
das
push
pop
lret
adc
pop
out
mov
sub
inc
repz
fwait
adc
xchg
stos
ljmp
cmp
push
sbb
inc
add
mov
push
xor
lret
popa
scas
cmpsl
mov
jle
test
ret
int3
dec
fsub
lock
cmpsb
or
xor
sbb
cwtl
add
out
mov
shlb
adc
aaa
je
lret
cli
push
int
xchg
and
insb
clc
mov
cmp
push
pop
sbb
push
xchg
and
xor
sbb
xlat
jo
lret
hlt
ret
jg
in
pop
and
out
jmp
cmp
mov
mov
dec
arpl
cmpsb
lret
adc
mov
push
mov
inc
dec
mov
jne
xor
sbb
sub
lret
adc
sti
mov
sbb
popa
and
mov
add
jnp
ss
sbb
cmp
shrb
sbb
and
andl
fmuls
fstl
lret
nop
popa
pop
test
jp
sub
ja
fdiv
ficoml
aam
dec
xlat
call
pop
mov
pop
jge
sub
jle
sbb
loope
cli
mov
les
ret
inc
pop
adc
lret
xchg
xchg
mov
stc
hlt
insb
xor
cmp
icebp
popf
mov
add
fcom
jae
daa
outsl
lret
dec
ds
mov
outsl
adc
inc
dec
pop
cmpsl
aam
push
mov
lret
ja,pt
faddp
fxch
out
jl
xlat
lret
pop
push
lret
fcomi
jae
lods
inc
lret
lahf
push
mov
loopne
mov
pop
cmp
clc
into
call
mov
int
imul
in
dec
jo
or
jmp
mov
ljmp
jg
lret
mov
mov
clc
loop
pop
or
sub
push
jmp
lret
cmp
jp
pop
ss
adc
clc
rcrb
mov
divb
rcl
add
cmp
aam
sbb
inc
lea
push
lock
cmpsl
cli
mov
stc
push
and
imul
mov
mov
mov
cwtl
lret
or
fcmovu
mov
add
lret
cmp
mov
push
adc
mov
mov
xchg
sub
dec
ficoml
sbb
sub
out
enter
jne
inc
fs
lret
dec
sbb
shll
test
xchg
push
or
mov
movsb
iret
rclb
or
jecxz
cmp
lods
ffreep
mov
xchg
bound
inc
dec
lret
adc
lret
push
xlat
cmp
inc
shl
and
or
ja
and
arpl
sbb
pusha
fiaddl
jb
xchg
ljmp
popf
jl
orb
shr
xor
lret
mov
pop
mov
inc
into
xchg
mov
in
lret
xchg
jb
pop
or
dec
test
cmp
in
fsubs
lret
nop
test
pop
adc
push
pop
sbb
pop
xchg
out
mov
or
je
std
rclb
xchg
lods
out
in
pop
movmskps
orl
mov
iret
shlb
inc
lahf
add
popf
clc
pop
mov
std
lock
pop
in
repz
jecxz
rcrb
call
jg
stc
sarl
sub
mov
clc
rorb
das
mov
lret
daa
sbb
cmp
inc
imul
dec
xor
lret
movsb
sub
mov
inc
out
mov
push
insb
fcmovbe
push
test
scas
sub
mov
jmp
mov
pop
xchg
insb
cs
cmpsb
sbb
fs
ljmp
sub
mov
push
xchg
or
lret
cmp
jge
mov
inc
sbb
xchg
hlt
cli
push
clc
mov
call
cmp
shrb
or
mov
inc
add
std
adc
out
lret
lahf
mov
lret
flds
push
xchg
push
lret
add
cmp
insb
cli
shlb
mov
pop
lahf
inc
nop
lret
dec
scas
sub
ss
mov
add
xchg
cmp
ret
mov
mov
jb
sub
movsl
je
or
repnz
pop
fwait
inc
sti
inc
cmpsl
lret
scas
mov
add
fcomps
add
arpl
jp
xlat
cmc
pop
pop
or
and
into
jae
xor
mov
jb
aad
jl
cli
inc
faddl
xor
jns
xor
inc
inc
and
int
mov
push
lret
iret
sub
sub
xor
and
lret
sahf
test
aad
pop
mov
sar
es
xchg
incw
repnz
test
cmp
fcmovne
jl
mov
pop
div
dec
lret
cs
xor
sub
mov
shrl
lret
cmc
jle
inc
pushf
mov
lret
sahf
add
ficompl
mov
mov
into
xchg
in
pop
pushf
lret
cs
mov
add
clc
sub
push
add
or
cmp
int
push
dec
popa
cmp
rol
jno
sub
push
rorb
shll
aaa
xor
xchg
insl
nop
cmp
push
ret
in
pop
outsl
inc
lret
xchg
loope
out
cmp
jns
cltd
popa
mov
adc
sbb
push
sarl
pusha
imul
add
sub
sub
lret
cmpsl
outsl
push
nop
popf
sbb
fcomip
lea
lret
bound
push
in
movsl
jns
lret
icebp
stc
jns
sti
mov
or
inc
dec
jp
cli
jmp
fwait
xchg
ss
adc
cmp
dec
insb
daa
jmp
jae
adc
xor
sbb
mov
cwtl
jno
mov
insl
lea
adc
inc
cmp
ror
jl
repz
int
dec
mov
add
mov
hlt
in
mov
and
leave
iret
mov
inc
cli
or
sarb
dec
rolb
sbb
sti
cmp
test
xor
test
orl
aad
xchg
push
lret
sbb
mov
loopne
cli
cwtl
jb
notl
lock
add
push
and
ss
mov
out
sub
shll
mov
mov
popf
mov
mov
adc
lret
jmp
and
xor
cmc
scas
lret
cli
dec
cld
jnp
mov
xor
cs
aad
in
insb
std
fiaddl
ja
test
xchg
xchg
add
int
pop
xor
lret
xchg
lret
push
cmp
fcmovu
stos
in
je
out
sbb
shll
lret
pusha
pop
fldl
lods
cmp
and
pop
and
popf
decl
in
ds
ficoms
xlat
add
cmp
jb
cmp
pop
popa
adc
inc
aam
or
leave
call
dec
mov
mov
loopne
fcmove
inc
stc
lret
cpuid
pop
cmp
xchg
lret
mov
roll
sub
popl
ss
add
sbb
shll
lret
xor
mov
frstor
fadd
add
js
ds
ret
push
iret
lret
addr16
icebp
mulb
in
sub
lock
imul
xor
ret
xor
jl
pushf
mov
fisttpll
popa
outsl
jg
dec
add
xor
xor
imul
ret
xchg
lock
add
outsb
inc
mov
movsl
push
dec
lds
push
cmp
mov
inc
lret
rcll
lcall
add
lret
dec
push
xor
inc
loopne
outsb
lret
aam
sbb
les
sub
lret
and
clc
test
arpl
mov
pop
mov
push
aaa
pop
lret
cld
adc
jl
jge
add
out
movsl
push
inc
pop
jle
jb
das
mov
mov
or
cmpsl
sbb
repnz
push
sub
test
loop
outsl
jbe
or
fcmovu
pusha
mov
daa
add
mov
sbb
push
xchg
sahf
out
push
jecxz
cld
jmp
out
fwait
lret
mov
mov
cmp
cli
incb
and
orl
test
or
xor
fldt
lret
push
pop
xor
adc
inc
and
jno
bound
add
rcrb
sub
rcr
icebp
out
in
cmp
push
fcmovu
inc
cmpsb
shll
ret
mov
insl
jb
or
cli
push
in
sub
push
sbb
mov
mov
rclb
mov
xchg
jno
cmp
sub
aam
ds
aaa
jbe
cs
push
adc
xchg
loop
mov
daa
mov
lock
out
imul
sub
je
rorl
sarb
addr16
pop
xor
cmpsl
mov
dec
mov
subl
inc
inc
and
std
mov
imul
enter
lret
inc
pop
mov
aaa
mov
push
jns
daa
lret
sub
jle
and
test
sub
xchg
xor
movsb
out
jg
sbb
xor
loopne
fcompl
sbb
insb
cvtdq2ps
lret
test
xchg
lret
sarb
sti
add
lret
xchg
or
mov
mov
inc
cmp
mov
mov
cmpsb
adc
outsl
std
lret
call
in
pop
inc
dec
shrl
fisttpll
mov
mov
lock
pop
cmp
sub
mov
ror
inc
movsb
or
push
mov
push
iret
js
dec
lret
cwtl
adc
mov
andb
push
stos
out
lret
test
lret
push
add
inc
xchg
or
sbb
stos
cmp
iret
aad
sbb
pop
cmpb
or
int3
dec
fisubrl
pop
xor
mov
fstl
xchg
lret
xchg
dec
loope
mov
lret
xor
lret
sti
dec
push
out
and
adc
pop
dec
push
cmpsl
and
sub
adcb
mov
cmp
mov
aam
mov
sub
mov
sbb
push
neg
cmp
fsubrs
mov
js
lock
push
mov
dec
lret
inc
lret
scas
ss
push
mov
inc
jb
fdivrs
mov
jno
or
movsb
nop
jbe
in
fsubs
jg
pop
mov
mov
lcall
movsl
mov
insb
sub
fldenv
and
xor
mov
shrb
cmp
movsl
dec
rcl
lds
in
clc
popf
lret
or
lret
adc
lret
mov
and
adc
icebp
xchg
or
fidivrl
or
inc
and
lret
push
sub
add
jmp
and
inc
imul
loope
sbb
movsb
mov
mov
or
imul
fwait
add
outsb
push
xor
fidivl
lds
into
inc
xor
lret
or
loopne
test
outsb
jecxz
inc
jbe
leave
imul
stc
dec
nop
fsubs
loope
out
cmp
xlat
adc
xchg
push
sub
or
push
xchg
mov
outsb
mov
xlat
in
sub
mov
fwait
rorb
mov
lret
popf
das
bound
stos
adc
pusha
cmc
or
fidivrl
lret
repz
add
lret
xor
test
push
and
or
lret
cmp
mov
iret
cs
sbb
sbb
xor
aad
mov
popf
push
sub
push
lret
xor
cmp
mov
and
jg
loopne
daa
mov
sbb
in
push
lret
inc
mov
dec
xorb
fidivrl
in
jge
cltd
lret
fmuls
cmp
xor
scas
sahf
or
mov
pop
or
cmp
jnp
mov
cltd
push
shl
test
or
lret
in
es
cltd
daa
lret
push
lahf
cmpsb
lods
fldenv
ss
divl
aad
rcrb
loop
movsb
test
lea
adc
lds
imul
out
push
jmp
mov
adc
leave
in
stos
sub
mov
mov
or
adc
xorb
popf
stos
cmp
icebp
repnz
pop
sbb
mov
xchg
or
push
ja
int
add
and
mov
pop
scas
das
or
xorb
jno
aam
pushf
arpl
cmpsb
imul
pop
lret
sbb
js
lret
xchg
iret
ja
stc
out
clc
mov
test
lret
movsb
cmp
xor
icebp
lcall
cli
sub
cmp
ret
repnz
movsl
push
xchg
aam
sbb
lret
jb
test
jns
mov
es
outsl
in
hlt
pop
int
mov
inc
add
aas
aad
lahf
mov
pop
add
scas
or
fucomi
sbb
push
mov
cmp
push
and
or
fsubl
fmul
cwtl
lret
dec
clc
lret
mov
push
lret
jb
xchg
mov
mov
mov
mov
add
dec
iret
fs
out
lret
jmp
pushl
nop
cld
ficompl
ds
jge
lret
arpl
add
push
mov
jg
sub
xchg
dec
dec
adcl
pusha
push
cs
xor
test
sub
pop
lea
or
int3
iret
adc
fwait
sub
inc
adc
push
fldt
stos
and
xchg
mov
xor
jmp
lret
and
out
lods
xor
lret
pop
cli
push
cmp
push
ret
pop
xor
popf
fcmovbe
push
xchg
xor
insl
cltd
lret
enter
je
lret
cs
out
popa
mov
inc
icebp
cmpl
and
cli
out
cwtl
xchg
lret
jp
push
lcall
xchg
jo
pop
loope
adc
sub
jnp
lret
sbb
mov
ja
mov
xchg
mov
lret
sbb
divb
cmp
fdivs
jmp
sub
stc
dec
pop
sbb
sub
fwait
adc
lods
mov
lret
add
mov
popa
jbe
jns
pop
test
inc
fs
lret
rcr
and
mov
iret
xchg
or
stos
mov
xor
lret
rcr
sbb
mov
mov
mov
adc
mov
cli
pop
idiv
cmc
pop
ret
fcomps
ret
call
mov
fsub
shrb
stc
rclb
mov
mov
cmp
dec
gs
call
loop
adc
andb
lret
out
and
mov
aaa
xchg
stos
test
cld
loopne
xor
lods
jb
into
cmp
clc
mov
pop
dec
dec
lret
adc
hlt
ljmp
shrb
mov
mov
xchg
scas
fucompp
popa
icebp
mov
imul
lret
movsb
gs
add
lret
bound
cmp
pshufw
push
and
pop
mov
adc
aad
sbb
push
std
lret
int3
mov
mov
leave
enter
jnp
jl
cli
dec
sarl
jns
push
dec
cpuid
cli
int
dec
add
sbb
xor
aad
pop
cmp
push
jge
pusha
mov
sub
lret
addb
out
jb
cli
push
lret
rorb
movsl
lret
mov
mov
dec
xchg
mov
mov
in
inc
lret
aaa
inc
sbb
dec
out
pop
lahf
les
lret
pop
adc
jae
push
lret
movsb
js
xorb
out
sbb
inc
sub
or
stos
adc
pop
add
cli
leave
push
xchg
out
push
adc
lret
jge
test
cltd
xchg
fisubl
pop
and
mov
out
aaa
push
lret
out
mov
xor
lret
addr16
testl
mov
das
mov
mov
push
adc
sub
imul
and
xchg
xor
xchg
nop
cmp
mov
inc
shl
aas
mov
adc
mov
mov
xor
mov
clc
scas
ret
or
pusha
jp
rorb
add
lret
scas
aad
pushf
addr16
popf
xor
xchg
in
mov
cli
sub
pop
push
aaa
mov
cmp
imul
mov
xchg
dec
lods
bound
fidivl
rcrb
sub
fstpl
push
xor
fidivrl
dec
cmc
push
test
cmp
inc
xchg
ret
cld
lret
jle
mov
adc
arpl
not
push
xchg
pop
add
push
mov
stos
fimull
sti
add
data16
ficoms
jle
push
gs
add
cmp
std
lret
stos
push
push
sti
cli
xchg
mov
js
rolb
adc
test
cltd
push
shll
lret
xor
ds
push
mov
ret
aam
pop
push
add
pop
cmpsl
mov
aas
mov
sbb
and
mov
sti
fwait
and
movsl
pushf
xorb
mov
push
dec
sub
lret
icebp
and
call
in
sti
sarl
decb
lret
inc
repnz
lahf
mov
in
les
adc
rol
jle
sub
sbb
jg
jo
bound
scas
out
mov
pop
mov
push
or
push
or
inc
pusha
add
add
outsl
cli
push
sbbl
add
lret
sti
mov
push
insl
sbb
lret
mov
sbb
dec
pop
adc
out
mov
int
gs
nop
adc
jae
or
pop
push
out
lret
imull
sub
repz
xchg
or
pop
lret
xor
adc
add
adc
cmp
cmp
fs
clc
sbb
out
cmp
outsb
add
addr16
xor
leave
push
test
cmp
sbb
mov
lcall
fs
popa
fidivl
out
movups
fisubrs
or
fwait
cmp
sarb
adc
scas
pop
and
out
jp
sbb
mov
hlt
js
test
cmp
in
je
inc
lret
sbb
cwtl
pop
push
sbb
ja
inc
es
cmp
push
xor
pop
push
mov
filds
fucomi
cmp
mov
cmp
xchg
sbb
iret
mov
aas
xor
in
lret
mov
insb
pop
pop
pop
fidivl
enter
mov
iret
xor
test
imul
stos
adc
je
es
cmp
add
jns
mov
sbb
lret
push
dec
add
pop
pop
mov
ret
cli
jae
insb
cmpsl
lret
xchg
mov
mul
pop
lret
xchg
inc
ret
push
push
lds
mov
iret
lret
sub
or
je
ds
lods
sub
lret
outsb
cmp
lret
cmp
mov
dec
adc
rclb
and
adc
sbb
gs
or
imul
hlt
fwait
add
ss
packsswb
lds
dec
insb
les
lea
lret
rcll
xchg
outsl
sbb
jmp
cmpsb
mov
mov
xlat
fnstenv
dec
push
inc
in
imul
inc
int
cmc
push
rorl
cmp
lods
mov
sub
repz
pop
and
in
pop
mov
sub
lods
in
push
imul
mov
cmp
mov
insb
mov
cmp
enter
fldt
lods
clc
pop
fsubrl
cmp
push
adcb
and
nop
sbb
bswap
cltd
lds
adc
pusha
loope
xor
sahf
push
push
fadd
pop
lret
fs
ds
stos
js
arpl
or
xor
scas
sti
pop
push
lret
cmp
test
mov
sbb
fisubl
pop
adcb
mov
incb
cmpsb
add
dec
dec
cmp
and
xlat
shll
in
lret
jle
pop
outsb
imul
or
mov
stos
cmp
mov
push
add
xor
jns
stos
aam
imul
or
or
and
insl
lret
jmp
les
insb
cs
jge
mov
dec
xchg
lret
std
add
and
mov
sbb
dec
adc
fisubrl
adc
cmp
in
lret
and
xchg
fptan
lret
push
sub
add
fnstsw
mov
adc
and
les
jle
pop
or
sub
shrb
subl
mov
hlt
dec
and
sbb
icebp
lret
sub
cmpl
jmp
inc
mov
jnp
fcmovu
int
cmp
pushf
inc
push
scas
stos
repz
inc
dec
cmp
push
lret
and
push
sub
mov
push
jmp
mov
pop
add
out
xchg
out
xchg
xchg
and
lret
test
cmpsb
sbb
add
das
jb
mov
movsl
fs
mov
shrl
lret
mov
pop
lret
and
lcall
mov
mov
pop
lret
cld
pusha
in
push
mov
cmp
lea
out
push
mov
push
insl
inc
add
xor
xchg
inc
dec
add
cwtl
mov
pop
jnp
jl
jge
jmp
dec
cmc
pop
rclb
add
push
add
lret
mov
imul
dec
adc
pop
mov
loope
xchg
add
pop
inc
outsb
ficomps
sub
dec
jecxz
inc
cmc
lcall
jb
outsb
lods
ds
lahf
aad
push
ja
xor
push
stos
out
pop
andb
pop
lods
xchg
cli
outsw
pusha
push
sub
mov
leave
fdivr
push
mov
fucompp
adc
insl
mov
int3
push
into
pop
mov
loopne
mov
lret
or
mov
inc
pop
lret
dec
movsl
fldt
lret
andb
mov
pop
sbb
lret
std
cmp
lret
jno
sub
sbb
jbe
lret
out
and
in
push
pop
orb
sarb
sbb
cs
mov
aas
mov
sub
repz
push
sbb
mov
popf
jg
lret
leave
cld
pop
xor
cmp
jp
mov
cmp
dec
add
iret
movsl
imull
cmp
je
sub
stos
pop
in
lds
sahf
ljmp
xor
les
ds
scas
lods
push
lret
xor
inc
and
lret
aas
ret
into
mov
mov
cmp
push
fcmovu
sbb
in
mov
xchg
jmp
xchg
cmp
push
clc
pop
lcall
outsb
aam
jp
insl
pop
repnz
sbb
dec
mov
adc
xor
loop
jns
adc
and
pop
jbe
inc
lret
les
cmp
lea
in
ror
jecxz
addr16
bound
jg
mov
jge
lcall
subb
in
xor
ror
ljmp
into
xor
jl
jge
pop
mov
lret
int3
shrl
mov
push
inc
jp
ja
sar
fwait
xchg
mov
adc
push
loopw
push
ljmp
pop
pushf
rol
xchg
iret
mov
mov
push
adc
test
cwtl
lret
cld
xchg
mov
jno
lret
jp
mov
push
movsb
mul
or
movsl
rorl
fldenv
negl
adc
xchg
stc
addr16
adc
xor
shlb
sub
sub
jge
xchg
mov
lret
jnp
cld
mov
imul
add
pop
mov
ds
push
gs
lret
fidivs
inc
mov
lret
jg
adc
mov
test
hlt
andl
and
dec
movsb
stos
cmpsb
lea
xor
inc
inc
clc
and
mov
ret
sbb
lods
aam
lret
inc
cltd
xchg
test
inc
out
pop
sarb
repnz
in
add
cmp
xor
fidivrs
sbb
lret
cmpsl
or
pop
nop
stos
movsb
sti
jge
insb
lret
out
push
push
or
mov
jl
mov
sub
ds
mov
lret
mov
fimull
aad
inc
out
or
clc
mov
lret
or
cmpsb
stos
cli
imul
sub
rcr
stc
jg
ljmp
popa
push
xlat
scas
icebp
lret
jge
stc
sub
inc
pop
int3
lret
xchg
dec
aas
cmp
sub
push
sub
xor
jno
lahf
xor
shrl
mov
test
cwtl
mov
into
sbb
insl
fisttpll
stc
inc
lret
insb
fdivs
testb
repnz
dec
pinsrw
call
pop
repz
lahf
out
movsl
sti
arpl
jns
inc
leave
mov
jmp
js
or
popf
rcrb
jl
test
xor
add
movsl
and
lret
std
fs
xor
out
cmp
inc
and
fsubrl
xchg
icebp
cmp
mov
xor
xchg
sarb
inc
ficompl
xor
cwtl
stos
lret
lea
ljmp
loop
pop
jp
fdivs
ja
stos
mov
iret
fiaddl
cltd
mov
inc
cmpsl
inc
aad
sbb
loopne
xchg
test
inc
sbb
mov
jnp
shrl
mov
data16
lea
sbb
imul
fildll
xor
test
cmp
jbe
mov
dec
pop
popf
cmpsl
or
insl
loopne
sarb
les
cli
cmpb
and
stos
sarl
xor
lret
cltd
jno
fcompl
adc
jle
mov
ret
pop
lcall
imul
lods
lret
or
ja
inc
repnz
call
jb
xchg
lret
xor
lahf
sti
xchg
insl
cmp
add
stos
aad
mov
pop
sbb
rcrl
push
mov
lret
mov
mov
call
pushf
loop
into
lea
fwait
sub
lock
xchg
xchg
loopne
mov
mov
mov
imul
hlt
push
mov
adc
jo
lcall
daa
add
icebp
int
scas
stc
dec
cmp
pop
aaa
or
lods
jle
je
dec
nop
rclb
jo
pop
xchg
lret
and
lret
inc
dec
xchg
jg
pushf
in
fdivl
sub
inc
push
xchg
clc
lret
shrl
and
ja
add
shlb
out
fucom
jns
testl
bts
ss
js
cmp
rcr
popa
int
push
les
lret
adc
fisubl
sbb
xchg
push
sub
mov
jmp
aas
mov
mov
hlt
cmpsl
add
lret
inc
test
sub
lahf
jl
das
jns
stos
aad
test
fstpt
lret
mov
xlat
push
xor
outsl
mov
xchg
xlat
ljmp
lds
lret
sbb
cmc
jecxz
sahf
mov
iret
call
lret
pushf
jnp
xchg
cmp
jno
lret
pop
scas
adc
mov
xlat
add
fstpl
stos
or
mov
push
dec
int3
stos
outsb
cmovp
repz
xlat
loope
inc
lret
testb
cld
lock
push
jl
inc
int3
sbb
xchg
aam
inc
stos
push
not
lret
sbb
rcrl
ficompl
mov
jnp
sti
lods
dec
jo
sbb
rol
in
sub
sbb
inc
mov
jg
scas
cli
loope
mov
out
push
dec
sbb
ds
mov
sub
pop
test
jo
in
mov
rcll
sbb
cld
fdivrp
pop
jg
mov
out
lods
push
lret
es
divl
mov
cli
mov
inc
repnz
rcrl
lret
dec
jb
fmuls
lret
cmp
mov
adc
sub
lods
dec
mov
in
inc
inc
fsubl
lret
enter
das
cmpsl
mov
in
nop
dec
lret
mov
mov
stc
testb
mov
mov
sub
or
fistpll
test
lret
sub
sahf
adcl
sbb
cmpsb
pop
or
lret
test
sbb
mov
lods
cwtl
shl
and
sti
cli
xchg
loopne
cld
imul
fcmove
push
pop
out
or
mov
cmovbe
cmpsl
jnp
out
lret
or
xchg
scas
addr16
jl
sbb
dec
cmp
ja
mov
xchg
lods
jp
leave
nop
lret
imull
dec
test
pop
cwtl
scas
pop
adc
sbbl
xlat
mov
idivl
xchg
lret
mov
or
cs
popf
jecxz
ficompl
xchg
bound
ds
add
lret
jg
arpl
lods
lcall
xchg
mov
das
pop
stos
adc
inc
xchg
pop
cld
pop
call
and
ret
sub
or
lods
adc
mov
xor
mov
add
shl
popf
sbb
lret
or
iret
fdiv
cmpsl
aas
mov
pushf
lret
inc
adcb
imul
push
push
clc
lret
mov
xor
inc
or
and
mov
jp
cmp
lret
imul
pop
pop
sub
mov
cwtl
mov
mov
or
and
int3
or
lret
sbb
pop
loop
lret
js
into
stos
gs
dec
add
shlb
or
repz
cli
mov
adc
lret
ljmp
nop
ljmp
rcl
fbstp
stos
lock
lea
jne
sub
sti
inc
loopne
rolb
clc
sbb
inc
ljmp
rcl
in
lret
mov
or
mov
jae
cmp
push
add
fcmovne
mov
fimull
mov
cmp
cli
sbb
repnz
mov
sbb
fmul
dec
aas
pop
decb
adc
cmpsb
sub
mov
sar
jecxz
scas
fdivrs
pop
fcoml
fisttpll
add
xor
dec
inc
jne
shrl
mov
lock
inc
mov
js
push
mov
sahf
clc
dec
dec
into
jmp
mov
jecxz
cld
inc
lret
fidivl
outsb
fxch
sahf
ljmp
sbb
lret
dec
sub
push
out
or
pop
aaa
mov
jns
adc
cltd
mov
lock
cmpsb
sbb
ss
outsb
lret
mov
cmp
or
lret
les
inc
sbb
cmp
pop
jle
mov
icebp
or
dec
push
sub
stc
sbb
rorb
lret
mov
je
fcmovbe
lret
inc
sbbb
pop
lret
sub
mov
sahf
inc
mov
fisubrl
pop
sbb
scas
mov
shll
xor
sbb
test
inc
push
jg
xchg
lret
inc
jno
and
inc
dec
cmp
fs
rclb
lret
jge
adc
stos
fmulp
int3
xor
dec
push
pop
add
lret
xor
mov
ret
push
pop
adcl
fstpt
sbb
test
ds
lock
fxch
xchg
rolb
pop
cmp
out
adc
xchg
push
or
xchg
shlb
mov
lret
insb
mov
lret
pusha
std
sti
cmpsb
fsubr
lret
clc
xor
and
xchg
rcl
cmp
inc
mov
icebp
push
cmpb
pop
pop
inc
fmul
jnp
enter
mov
or
in
cld
push
push
outsl
mov
cmp
ss
fnstenv
pop
inc
and
iret
jl
add
mov
adc
push
lret
test
push
push
cmp
insl
sahf
nop
sbb
xor
jnp
sarb
mov
int
sub
and
inc
or
mov
mov
cwtl
xchg
fisubrl
mov
push
mov
testb
mov
es
adc
jae
rol
xor
pop
mov
into
jne
leave
mov
pop
mov
sbb
mov
not
out
push
ja
push
sub
insb
aad
lahf
sbb
fcmovbe
mov
xchg
mov
xchg
mov
stos
ja
sti
int3
xor
push
fsubrl
outsb
shl
sahf
shr
mov
stos
fcmovne
xchg
mov
cwtl
xchg
fstpl
lret
and
mov
mov
pop
aam
ss
mov
pop
in
mov
lret
xor
jecxz
popa
lret
hlt
loope,pt
fwait
ret
lret
cmp
cmp
mov
and
sbb
push
into
sbb
xor
adc
arpl
sub
push
xchg
mov
dec
lcall
leave
js
cli
ss
xor
cmp
adc
xor
dec
inc
das
cwtl
mov
sarb
cmp
into
bound
lret
hlt
mov
lret
pop
jbe
enter
imul
arpl
mov
jp
ja
ds
ret
xor
fistpll
iret
lods
sbb
pop
int3
dec
push
xchg
shrb
int
lds
sub
pop
cli
rorb
lods
out
mov
fwait
icebp
jne
mov
pusha
xlat
sarb
out
loop
movsl
int
and
imul
shlb
lret
shll
xor
addr16
cs
add
pop
xor
or
js
push
xchg
lret
lea
and
popa
lcall
add
lret
sub
out
lret
adc
jp
xor
testb
lods
dec
adc
cmp
lret
f2xm1
pop
xchg
lret
ja
outsb
push
in
leave
lret
inc
pop
mov
jmp
std
and
add
stos
aam
or
mov
mov
stos
pushf
adc
jo
into
lret
test
imul
cmp
dec
fs
pushf
sub
imul
lret
scas
mov
popa
inc
ficompl
mov
test
adc
nop
addb
lahf
rcr
test
adc
mov
cli
xor
pop
lret
lret
and
addb
pusha
inc
xchg
lret
pop
mov
lods
mov
lret
mov
fcomps
imul
call
xchg
nop
jne
int3
pop
in
loop
lret
lock
imull
xor
loopne
jae
sti
shll
mov
std
xor
pop
dec
cmc
xchg
lret
setl
adc
xor
mov
sub
pop
lret
cmpsl
fldl
lods
shl
mov
into
cld
arpl
js
ficompl
outsb
mov
push
pop
lret
ja
fstl
xor
pop
rcll
popf
xchg
dec
adc
clc
out
xchg
jmp
cmpsb
aaa
bound
lret
mov
or
imul
mov
lret
insl
ret
mov
js
and
sahf
lret
fcoms
sub
in
lret
sub
or
pop
aas
fidivl
adc
lret
popf
pushf
sahf
scas
mov
or
or
out
aas
outsl
ds
cmp
sbb
dec
jne
jnp
cld
ljmp
shl
mov
mov
mov
loop
loopne
mov
lret
sbb
fwait
jecxz
lret
inc
mov
fcomi
dec
lret
insb
in
sub
mov
sbb
mov
bound
rcrb
lret
mov
pop
pop
add
cli
push
mov
adc
shrl
jp
push
loop
imul
cli
mov
lea
lret
or
rorl
jno
push
cmpsb
xor
adc
or
inc
out
xchg
imul
test
jl
lahf
fnstcw
movsl
out
lret
push
xor
fs
mov
or
shlb
jp
test
mov
call
sarl
shr
out
and
mov
cli
or
xor
ret
js
or
fdivrs
cltd
mov
pop
andl
les
xor
daa
lret
sbb
out
mov
and
xchg
cmpsb
lret
scas
jmp
popf
fldcw
lret
push
inc
lods
int
mov
ljmp
fadds
adc
push
add
jb
and
enter
mov
out
push
push
mov
iret
mov
adc
xchg
sub
cli
dec
lea
cmp
jae
imul
mov
mov
add
sub
lods
lret
pop
cmp
lret
jmp
out
or
mov
fisubl
in
lret
pop
sti
stc
mov
mov
dec
fxch
loop
jmp
ret
stos
mov
or
cmp
lret
and
fcoms
adc
push
mov
lock
stos
enter
mov
add
jge
or
sbb
or
dec
es
movsb
push
fwait
loopne
into
pop
cmpb
mov
lret
lret
mov
xchg
aad
sub
adc
call
cmp
jp
rcr
mov
scas
hlt
lret
cmp
xchg
jmp
cmc
cwtl
cmpb
mov
mov
lods
dec
cmp
into
lret
scas
repnz
stos
sbb
sbb
push
cs
fsubrl
repz
insb
movsl
xchg
pop
jecxz
lret
xchg
fwait
je
lret
pop
mov
lret
sbb
pop
sbb
pop
cld
loopne
in
jnp
sti
lret
inc
push
into
or
mov
rcl
faddl
mov
and
sub
clc
xor
lret
push
in
packsswb
sbb
shlb
sar
daa
fdivrs
mov
jns
fcoml
cmp
cmp
leave
mov
xlat
and
mov
lret
iret
scas
out
gs
int
into
add
xchg
mov
mov
stos
pushf
sbbb
bound
cmpsl
mov
adc
rcrb
mov
in
jg
pop
aad
fidivl
mov
rcrl
lret
repz
shll
cmp
ja
lret
movsl
pop
adc
lcall
sbb
sub
jl
lods
sbb
outsl
add
pop
jno
mov
in
mov
aaa
cmp
add
sub
or
in
xchg
adc
dec
mov
pop
and
jne
das
push
xchg
mov
pop
js
push
lret
stos
push
or
cmc
lret
or
rclb
cmp
cli
pusha
xor
xchg
cli
in
scas
push
fsub
aam
sub
movsb
and
add
mov
out
jne
rorb
pop
jmp
jbe
dec
or
lret
xor
lret
gs
mov
mov
shrl
aad
hlt
fldlg2
cmp
cltd
lea
aaa
and
imul
pusha
sub
sbb
add
movsl
in
repz
les
push
leave
std
xor
cmp
sub
mov
push
mov
lret
jb
adc
lret
sub
lret
fs
inc
dec
push
lret
repz
cmp
jp
xchg
lret
das
cli
addr16
push
push
insl
and
cmp
lret
lsl
sbb
arpl
shlb
scas
sub
lds
mov
sub
stos
mov
cli
mov
jp
or
jnp,pn
mov
cmpsl
lret
mov
scas
cmp
cmc
fidivl
shll
mov
push
xor
into
in
not
loop
ss
imul
cld
lret
outsb
dec
je
xor
cli
sarl
push
push
or
cli
inc
xchg
dec
inc
push
fs
or
lret
mov
rcrl
and
and
aad
lea
sbb
push
gs
mov
lahf
jne
fabs
movsb
lret
push
movsl
lods
or
xor
sbbb
icebp
dec
lret
mov
bound
or
dec
cli
loope
dec
lret
imul
lret
dec
push
lods
add
fcmovbe
lcall
lret
mov
fisttpl
lret
subb
jnp
lret
jge
test
sub
mov
aam
mov
adc
cmp
test
in
mov
lods
mov
ss
add
sbb
inc
insb
sbb
test
lret
mov
test
addl
add
adc
jne
into
mov
fsubrp
shll
out
lret
imul
jmp
lret
or
dec
xrelease
lret
mov
xor
inc
xor
jbe
and
mov
mov
movsl
sub
mov
cmp
xor
lcall
in
jle
xchg
inc
sub
lret
mov
daa
fcoms
or
mov
cli
xchg
dec
divl
push
add
movsl
mov
lret
jecxz
mov
je
lret
and
mov
mov
sbb
pop
aas
dec
push
test
push
fs
sbb
inc
add
lret
adc
pop
lret
loopne
pop
loop
stos
cltd
sbb
mov
mov
mov
and
loop
cmp
into
adc
cmp
pop
fidivl
or
popa
jmp
inc
adc
or
loop
xor
lret
scas
mov
jle
lock
add
pop
pop
dec
jno
pop
mov
mov
cwtl
pop
aaa
sarl
pop
xor
push
shrl
push
cmp
std
ds
aad
mov
inc
pop
push
jnp
lahf
lret
mov
and
sahf
lret
mov
dec
movb
popf
shrl
mov
or
outsl
lods
stc
mov
jns
push
and
loop
clc
popa
dec
test
stc
sbb
lods
pop
mov
lret
ret
dec
cmp
outsl
cli
pop
sahf
in
adcb
push
inc
xchg
push
ret
loop
jmp
js
movsb
mov
ficompl
insb
or
inc
ja
mov
lret
data16
mov
inc
pop
shlb
jbe
mov
lret
enter
mov
stos
adc
add
xchg
lret
or
cltd
cmp
or
sbb
ja
dec
add
lret
roll
push
or
pushfw
jnp
push
aad
cmp
lret
scas
les
cmpsb
inc
aad
lret
adc
mov
lret
xchg
lret
and
cli
cmpsb
pop
cmp
push
jb
or
scas
repnz
dec
xorl
mov
dec
ja
or
lret
repnz
push
cmc
xchg
lret
clc
pop
into
sti
stc
ds
shlb
dec
mov
fwait
stos
insb
pop
or
sbb
cmp
fnstsw
mov
xlat
icebp
fsubrs
gs
jle
fwait
lret
neg
xchg
mov
jge
jl
xor
in
pusha
sti
mov
or
cltd
xchg
and
lret
sub
mov
loope
lret
pop
xchg
cmp
rorb
add
sti
fs
jb
mov
xor
test
xchg
scas
lret
dec
xchg
cmp
arpl
push
add
mov
xchg
jne
push
mov
sar
test
rcrl
push
stos
or
mov
pop
decb
rcl
xchg
jl
ret
scas
xchg
cmp
mov
push
mov
mov
mov
push
outsb
pop
out
adc
lret
add
pop
mov
lret
les
ljmp
js
sbb
inc
dec
or
mov
insb
push
push
push
pop
lret
cld
faddl
test
dec
lahf
cli
xchg
lret
das
in
pusha
cmpsl
xor
fs
and
inc
xlat
shr
push
lret
popa
out
fwait
orl
cmp
cmp
push
inc
push
pop
xor
mov
adc
subb
add
es
movsl
pop
dec
in
xchg
test
push
inc
pop
stos
or
sbb
cmp
pop
sub
sub
and
out
popf
ss
pop
pusha
pop
or
insb
fidivl
imul
call
out
or
adc
call
jecxz
sbbl
aad
outsl
loopne
iret
pop
mov
repnz
ret
mov
cmc
mov
inc
arpl
and
jns
dec
mov
iret
aaa
push
js
mov
es
idiv
cwtl
lret
and
lret
and
mov
sub
ljmp
insl
mov
das
lret
jnp
out
cmp
ror
push
fdivp
jbe
push
cmpsb
jge
push
mov
cwtl
mov
xor
inc
fisubrs
iret
into
lret
mov
hlt
popf
sarl
adcl
bound
inc
leave
lret
mov
mov
push
add
lock
mov
adc
lods
movsb
addr16
or
outsb
enter
add
outsb
lock
pop
call
lret
mov
mov
cmp
dec
rorb
fs
push
lcall
adc
ja
pop
fidivl
pushf
and
and
ret
call
test
push
sti
lds
cmp
ficoml
jne
leave
fstps
dec
xor
lret
mov
sarl
cmp
sub
jp
fs
ret
xchg
test
cltd
fmull
xor
or
cmpsl
xchg
clc
pop
test
les
mov
push
xchg
jo
mov
push
lods
lahf
scas
mov
cmp
lock
in
pop
pushf
insl
scas
or
fs
mov
mov
sarb
inc
and
pop
dec
pop
faddl
fidivrl
in
jge
repz
ja
jp
sbb
xor
and
sahf
mov
stc
shlb
xchg
mov
hlt
fidivrs
aas
pop
in
xchg
sbb
stos
stc
dec
add
sbb
jp
mov
sub
ja
lret
push
push
int
jbe
cmp
push
mov
mov
and
jp
and
sbb
jne
lret
xchg
mov
add
test
lret
and
dec
sahf
repz
pop
clc
cmpsb
lret
imul
cwtl
out
push
in
outsb
jg
lret
xchg
pop
imul
popf
add
or
dec
cmpsl
jecxz
clc
imul
xchg
sbb
out
or
in
mov
jecxz
icebp
add
mov
push
or
inc
sub
mov
ljmp
xor
inc
sub
and
imul
lret
sbb
pop
dec
inc
adc
push
jae
xchg
lret
addr16
push
xor
cmp
imul
jl
das
lret
iret
stos
loop
repnz
fiaddl
pop
adc
sahf
jbe
mov
daa
cmp
xor
movsb
not
mov
inc
sub
lret
mov
mov
inc
lret
mov
dec
loopne
cmp
push
sub
js
cmp
fsubrs
mov
pop
lock
jae
lret
cmp
xor
cmp
cmp
lret
jo
cmpsb
es
and
add
shll
pop
lret
pop
jge
mov
lret
dec
inc
mov
cmp
add
fst
xor
inc
andb
lret
push
cmp
jmp
and
nop
jle
and
cmp
pop
fwait
cwtl
movl
jnp
pop
loopne
popa
xor
push
pop
inc
cmp
in
dec
rorl
lret
dec
add
leave
out
jge
mov
inc
and
jnp
mov
pop
dec
lcall
and
jg
insl
cli
push
mov
push
pop
es
adc
adc
gs
cmpsb
popf
mov
and
test
dec
out
push
loopne
repnz
lea
or
stos
fwait
sub
and
lret
pop
push
lods
ret
cwtl
faddp
cs
mov
imul
mov
aam
dec
hlt
xor
lret
gs
mov
iret
jbe
pop
mov
pop
dec
clc
std
lret
push
ja
inc
insb
bound
int3
mov
arpl
sub
dec
jo
cltd
push
and
push
iret
dec
lea
mov
or
mov
cmpsl
sub
ds
dec
push
je
or
xor
shrb
into
mov
lock
jb
pusha
mov
lahf
and
lret
add
xchg
pop
mov
enter
cmp
jmp
lret
xchg
lahf
mov
xchg
dec
jns
imul
xchg
rorb
out
cli
addb
sti
pop
rcll
mov
aam
repnz
xor
lret
push
nop
adc
add
lret
dec
insl
mov
mov
and
popa
xor
sub
push
pusha
push
es
jns
shrl
mov
stos
int
into
xor
ret
jb
adcl
adc
test
lret
aaa
dec
bnd
aad
popa
ret
mov
push
mov
scas
push
in
mov
lret
loopne
jnp
ljmp
sub
in
add
jl
sbb
stos
out
mov
sub
xchg
cmpsl
cltd
and
pop
stc
lret
mov
punpcklwd
mov
adc
and
test
sbb
adc
sti
adc
int
or
jno
or
fcomps
fistl
pop
sbb
lret
or
push
sub
lret
ficomps
sbb
fisttpl
leave
xchg
sub
and
test
mov
clc
ret
lret
fisubrl
sub
out
cmp
imul
push
inc
pop
lret
mov
lret
lret
addr16
cmpsl
adc
icebp
dec
pop
idivb
ljmp
dec
cltd
adc
hlt
dec
inc
lahf
ds
and
mov
adc
fwait
dec
mov
cli
mov
pop
adc
shlb
push
test
inc
fisubs
out
movsl
dec
inc
inc
lret
lea
lret
fstpt
pop
das
cmp
push
test
jmp
pop
mov
sbb
fildll
mov
push
imul
mov
or
fildl
and
mov
cmp
or
iret
faddp
int
and
push
push
adc
mov
mov
mov
imul
insl
or
scas
rorb
xchg
xor
jbe
dec
test
dec
insl
lret
cld
cmc
in
jg,pn
lret
push
scas
pop
stos
pop
cmp
xchg
inc
roll
adc
test
or
jmp
sahf
lret
ret
insl
inc
mov
push
push
mov
jp
lret
popf
dec
test
std
cmp
das
loopne
cltd
loop
dec
mov
inc
loop
rol
xor
add
ds
imull
pop
loop
lret
fstpl
data16
leave
push
repz
pop
jge
mov
mov
lods
cmp
pop
pop
jbe
lcall
mov
pusha
push
popa
lret
jecxz
in
in
rcl
test
setno
sbb
xor
pop
sbb
lret
fwait
lret
inc
rcrl
loopne
cmc
pushf
dec
lods
test
bound
lret
outsb
mov
inc
lret
scas
je
mov
mov
jnp
lret
insl
xchg
stos
pusha
sahf
sub
cs
xor
lret
test
pop
lret
les
xchg
das
mov
inc
rcrl
fidivrl
cmp
lret
xor
add
lret
lret
ja
fidivl
js
test
sub
and
jecxz
jbe
fstpt
test
loop
in
lret
push
fnstcw
das
lret
clc
cltd
mov
arpl
sub
fwait
push
sbb
or
ficompl
neg
icebp
dec
sbb
cmpsb
adc
insl
cmc
adc
cmpl
push
mov
pop
mov
sub
sub
adc
xor
lds
cwtl
jle
jg
es
mov
cmp
push
out
pop
xor
mov
lret
xchg
icebp
cmp
outsl
xor
mov
jmp
xor
push
fwait
and
cmp
lret
in
ss
lretw
std
sahf
fisubl
sbb
mov
mov
das
pop
push
and
inc
outsl
mov
outsb
jnp
mov
addb
jns
clc
test
cli
inc
add
es
xor
outsb
xchg
imul
je
cmpl
jne
xchg
sub
lods
mov
fistpll
cwtl
in
fdivrl
lods
setne
pusha
push
lret
jl
sbb
xchg
stos
jo
jae
pop
pop
sbb
push
aas
mov
int3
arpl
inc
pop
ja
lcall
inc
scas
inc
imul
xorl
lret
cwtl
mov
mov
cmp
xchg
sahf
cwtl
xchg
das
out
lret
mov
hlt
mov
jecxz
mov
les
into
dec
pop
into
sahf
repnz
and
push
push
sbb
jb
xor
lret
popf
mov
xchg
lods
inc
lret
sahf
mov
cmp
dec
dec
mov
pop
fcoms
xor
imul
inc
ja
repz
or
push
sbb
fnsave
bound
cmp
test
dec
sbb
pop
jmp
push
or
xchg
lret
js
fwait
mov
outsl
scas
inc
hlt
jns
mov
xchg
mov
rcl
mov
sbb
es
adc
mov
xor
mov
cmp
lret
lret
add
lret
add
stos
movsl
lds
and
mov
stos
mov
sarl
in
xor
jbe
xchg
aaa
jle
sub
lret
lods
ror
mov
and
lret
add
sbb
jecxz
mov
mov
inc
fdivrs
lret
shlb
mov
push
jle
mov
popf
pop
or
dec
movb
xchg
cli
clc
cli
loopne
fists
popf
mov
cmp
aam
sbbb
lret
shll
mov
push
repnz
cli
jp
loopne
mov
cmpsl
lds
xor
lret
inc
mov
lods
out
pop
stos
ja
add
mov
dec
fldcw
arpl
lret
inc
repnz
lret
js
dec
loop
add
subl
movsl
lret
lret
add
aaa
lret
lock
imul
dec
test
jne
push
clc
cmp
xor
dec
add
pushl
out
mov
out
push
adcl
xor
push
sub
pop
lret
mov
pop
mov
mov
scas
data16
fs
push
lcall
adc
rcll
or
and
cmp
lea
adc
xor
hlt
lds
sbb
lret
sub
inc
insl
push
pop
ljmp
rolb
insb
ret
shlb
repz
and
loope
push
mov
jne
shlb
pop
sbb
adc
lret
jmp
mov
push
xor
xor
and
outsb
or
rclb
les
mov
adc
push
ja
js
lret
shl
ret
cmc
dec
push
lret
daa
adc
sbbl
ror
xchg
cmp
ficoms
test
sbb
mov
fiaddl
imul
xor
stos
lock
out
lret
mov
sbb
push
insb
mov
scas
std
testl
or
sub
dec
aam
ljmp
mov
test
xchg
loop
cmpb
in
push
lret
push
cmc
cmp
hlt
lea
sub
add
mov
dec
mov
lock
pop
adc
fidivrl
shlb
fisubrl
xchg
mov
arpl
inc
in
pusha
add
lea
rolb
incb
ja
shl
aam
sub
sub
adc
cltd
into
jmp
push
lret
inc
sub
shlb
lret
test
std
dec
pop
das
lret
lods
incl
fcmovbe
cmp
pushf
mov
push
shrl
and
lret
shll
icebp
cli
fdivr
pop
clc
xchg
rcll
insl
loop
pop
add
dec
out
and
stos
cmp
nop
into
cld
int
xchg
cmp
adc
scas
xchg
lret
inc
pusha
fildl
fcmovne
pop
add
lret
test
ret
insb
lret
or
lret
adc
add
dec
jge
rolb
sub
stos
iret
pop
sbb
xor
lret
jg
sub
lret
mov
lret
mov
loop
enter
out
lds
fisubrl
or
and
clc
adc
negl
xchg
adc
cli
call
mov
lods
jae
add
inc
ret
xchg
xchg
mov
lret
repz
sbb
popa
cwtl
rolb
pop
inc
fisttps
jmp
testb
cmp
shlb
push
in
cli
push
hlt
push
cmp
mov
iret
or
nop
and
cld
dec
sub
sbb
shrb
leave
jle
movsb
mov
int
lret
int3
aam
jp
ror
pop
sbb
rclb
lret
fldenv
lret
shr
add
mov
int3
inc
jae,pt
adc
out
dec
mov
out
call
pop
sbb
inc
lock
int
idivl
lret
nop
lods
xor
loop
adc
or
mov
lahf
negb
mov
add
sbb
addb
movsb
lret
add
sahf
lret
icebp
cmp
stos
stc
xor
cmpsl
mov
push
sahf
lahf
imul
push
stos
adc
lock
setl
push
mov
pop
xchg
addl
cmc
mov
out
sub
adc
mov
mov
sbb
push
mov
xchg
dec
mov
mov
dec
imul
ret
cmp
sub
xchg
pop
xchg
lret
loope
enter
lret
leave
or
imul
jb
jecxz
xor
mov
jno
lret
mov
ret
dec
inc
jle
idivb
lret
es
dec
sti
lret
shl
sbb
notb
lret
outsb
repnz
jne
lret
test
sub
loop
rcrb
sbb
or
clc
daa
int3
and
cmp
mov
mov
out
call
pushf
and
xor
mov
jae
mov
mov
lret
adc
ret
lret
push
out
loop
or
cmp
jle
scas
fstl
out
adc
sbb
sqrtps
out
sub
jle
cli
dec
ret
fisttps
push
movsb
cmp
fldcw
dec
push
sahf
ljmp
rcrb
lret
rcr
jmp
pop
stc
dec
cs
fidivrl
mov
rcrl
cmp
push
and
pop
push
cli
jbe
repnz
int
fcoml
gs
inc
sub
lret
outsl
adc
ljmp
mov
std
pop
stos
stos
in
xlat
divl
pop
mov
jp
push
out
mov
in
int
push
int
mov
in
stos
ljmp
inc
cmp
xchg
xchg
push
std
lods
ret
rorl
mov
data16
scas
mov
into
dec
fcoms
or
dec
inc
xor
pop
data16
mov
lcall
lret
stc
jbe
or
xor
call
jg
dec
test
cmpsb
stos
stc
jecxz
ret
scas
outsb
aam
xchg
call
jns
dec
inc
inc
sbbl
inc
push
ficoml
cli
sbb
add
lea
and
dec
lcall
rcrb
pop
push
add
shlb
jl
shlb
nop
cmpsb
sbb
ror
jae
fdivrl
xchg
ret
sub
bound
and
lret
push
adc
out
add
aad
icebp
roll
lret
mov
xor
sub
outsl
xor
nop
lock
jne
push
out
mov
in
gs
dec
push
cmp
sahf
fmul
enter
xor
loope
lret
push
jp
xor
lret
lea
mov
pop
xchg
and
fdivrl
sbb
shll
pop
int
jl
ds
cltd
inc
das
lret
and
into
inc
lret
jae
cli
sub
imul
rorl
cltd
movsl
out
mov
enter
test
and
lods
cld
inc
test
xchg
add
pushf
push
in
inc
or
dec
jbe
lret
ret
push
cmp
lret
nop
cld
fwait
and
lret
ror
cs
mov
push
xchg
adc
and
fwait
insl
outsl
lret
inc
mov
mov
rcrb
add
imul
jne
fstpl
lret
shrb
test
xor
int
ss
mov
mov
and
lock
lret
mov
shr
lret
js
and
fidivl
stc
aas
sbb
push
lret
add
test
lret
mov
jge
ss
sbb
sbb
rorl
data16
dec
addr16
je
sbb
hlt
movsl
mov
xchg
pop
xor
mov
lret
lcall
and
repz
or
mov
call
adc
mov
sbb
dec
mov
jbe
lahf
push
or
mov
outsb
jns
adc
aam
into
in
dec
lret
lea
jns
mov
clc
xchg
sbb
lret
mov
or
and
outsl
sti
in
inc
jp
sbb
sbb
inc
dec
dec
int
shl
pop
iret
aad
mov
xor
shlw
jno
repnz
aaa
dec
mov
xor
cmp
ja
dec
lods
lock
xchg
lret
jge
stos
dec
or
hlt
test
sub
scas
pop
lods
mov
shlb
adc
xor
sub
lret
adc
and
lret
push
jp
push
add
stos
or
xchg
ret
into
bound
lods
dec
cli
not
daa
sbb
repz
pop
or
or
stos
dec
lret
and
mov
add
cmp
push
in
and
jb
lret
jecxz
bound
jge
out
movl
add
mov
and
inc
adc
lret
sub
loope
jecxz
cmpb
in
and
mov
xchg
lret
negb
aad
lret
movsl
lock
or
dec
imul
xchg
pop
cmp
lock
push
mov
repz
lret
cmpsb
aam
fcomi
pusha
cli
enter
push
and
flds
cli
cmp
out
mov
fnstenv
iret
pop
pop
scas
int3
fcmove
fwait
rcrb
cmc
lret
xchg
cmp
ret
movsb
test
or
loop
or
mov
pop
sub
xchg
push
mov
lret
and
inc
shll
lret
xchg
cmp
popa
xorl
xor
outsl
lret
and
add
or
mov
mov
mov
imul
aas
int3
lret
push
lods
xchg
decb
das
mov
adc
mov
inc
shll
test
pushf
mov
add
shrb
pop
clc
xchg
scas
lret
call
shll
mov
lret
es
sbb
loop
push
movsl
add
jb
push
xchg
cmp
cmp
fs
pop
pop
adc
cld
sub
in
cmp
add
sub
rcrb
add
out
jge
fs
sbb
sbb
mov
inc
push
or
stc
ja
bsf
lods
fldt
xor
xor
lret
jecxz
push
inc
pop
mov
into
pop
pop
scas
cmp
lret
loopne
xlat
scas
call
mov
je
jmp
mov
inc
sbb
rcl
leave
fsub
out
repnz
and
push
and
cmp
arpl
mov
test
hlt
lret
inc
out
std
mov
loope
lret
aas
cmc
jbe
xchg
rcr
lret
ret
mov
jno
push
scas
jo
fldl2e
stos
cltd
cmp
adc
and
fimull
lock
ror
xchg
fbld
popf
popa
push
lds
hlt
aam
mov
push
lret
jle
test
std
pushf
lret
dec
mov
lret
mov
call
test
adc
ljmp
fsubrs
or
sub
pop
mov
out
or
jge
into
sub
faddl
add
fcompl
mov
adc
push
cmpsl
lret
inc
lret
cld
cltd
mov
repz
mov
fldcw
adc
mov
cmp
adc
xor
inc
aam
fdivr
popf
mov
mov
mov
adc
lret
or
dec
lret
in
rcrl
xchg
cwtl
cwtl
lret
pop
mov
lret
dec
fcomip
sub
xchg
lret
mov
push
das
loop
mov
dec
lret
fs
xor
test
inc
mov
lret
mov
mov
mov
stc
or
jnp
pop
lret
cmpsb
fs
pop
pop
lcall
pop
xchg
adc
inc
lods
das
and
incl
aam
pop
push
call
jae
lret
lods
xchg
cmp
mov
lret
movsl
in
xchg
bound
mov
push
inc
hlt
imul
cmpsl
stos
xchg
sub
imul
je
jg
in
loop
lret
in
xor
daa
ds
clc
lods
mov
or
xor
xor
lret
addr16
mov
sahf
stos
popf
dec
cmp
movsb
push
adc
sub
push
xor
cmp
hlt
lret
test
fimuls
mov
lret
in
mov
pop
mov
cmp
enter
lret
xor
fwait
popa
test
sbbl
js
jmp
push
aaa
in
inc
test
push
sub
js
mov
jge
cmp
mov
jge
mov
cmpsl
cli
or
mov
jae
lret
je
push
xchg
lea
mov
lret
add
clc
jl
fxch
ss
ficoml
dec
xchg
sahf
xlat
lahf
sbb
aad
pop
in
lret
daa
ss
cmp
sti
out
push
hlt
push
imul
pop
adc
mov
mov
xchg
dec
pop
and
arpl
mov
scas
add
lret
sahf
std
pop
push
sbb
pop
sbb
cmp
push
mov
sbb
fwait
xor
jl
out
or
dec
jge
mov
sub
jne
ljmp
fmuls
sti
lret
or
loope
test
xor
js
aad
lret
fmull
ds
pop
lret
cmp
mov
js
adc
das
lret
add
stos
arpl
lret
mov
cltd
fstps
adc
xlat
ds
fstpl
lret
jb
orb
mov
filds
cmc
cli
push
dec
jmp
inc
push
ror
pop
arpl
pusha
inc
cltd
aam
stos
xor
lock
lret
inc
jle
mov
fcmovne
aaa
test
dec
popa
in
lret
aam
sbb
cmp
cmp
lret
mov
pusha
ljmp
fmuls
pop
mov
repnz
lret
mov
in
test
mov
fldcw
movsl
les
out
xor
sub
out
fistps
and
out
shrl
add
icebp
jbe
jle
xor
and
mov
paddsb
mov
ss
inc
add
lret
outsb
aad
cltd
sahf
xchg
adc
psubsb
out
lret
daa
nop
mov
or
lret
cwtl
sbb
xor
pusha
pop
int3
sub
or
movl
pop
inc
push
lret
or
lret
out
mov
xchg
imul
mov
push
xchg
stos
imul
into
mov
insl
sbb
aad
dec
pop
push
ja
mov
dec
popf
repz
mov
sub
lret
adcl
xchg
mov
popa
pop
and
push
xchg
std
and
inc
cmp
into
test
out
rorb
aam
push
mov
cltd
cli
adc
shl
stc
lret
mov
or
data16
jp
inc
ljmp
ljmp
rorb
clc
lret
push
popf
push
test
xor
mov
or
inc
add
rorb
pop
push
ret
push
adc
inc
lret
pop
adc
lret
jno
or
lret
mov
sbbb
stos
and
lret
decb
mov
or
push
sbb
fsub
popf
sarb
sbb
out
cmp
pop
sti
jp
lret
pop
loop
addb
mov
pusha
push
xor
icebp
and
pop
or
jns
jbe
stos
dec
jb
in
jg
push
sub
lret
lods
dec
add
xchg
iret
mov
and
push
add
lret
aam
enter
lret
sub
js
mov
adc
cmp
jae
xor
mov
lret
test
xchg
cmp
sub
in
frstor
mov
dec
out
cmp
cmp
lret
inc
lretw
adc
out
movb
mov
aam
jmp
cltd
dec
out
or
sub
hlt
adcl
cmp
mov
movsb
mov
lret
adc
mov
dec
sub
rcrl
mov
fwait
lret
or
xchg
rorb
cmp
leave
jae
jno
lret
enter
ret
loope
xchg
jne
ret
into
and
cmp
lret
mov
cmp
pop
outsb
inc
rcl
icebp
mov
neg
mov
push
imul
jl
pop
adc
pop
lods
rep
fstpl
mov
test
pop
dec
cmp
cmp
into
xor
push
lods
lret
mov
test
pushl
mov
pusha
std
mov
stos
popf
shr
shrl
mov
jp
inc
push
add
into
mov
je
lret
out
or
rcrl
adc
cltd
lret
rcll
ja
push
sub
lret
rorb
mov
les
inc
lret
jmp
scas
das
testl
test
jo
ficompl
ret
test
xor
fwait
rcrb
hlt
lret
push
mov
lret
push
sub
lret
xor
xchg
mov
movsb
std
cmpsb
and
dec
cltd
jnp
lret
mov
xchg
ror
mov
xchg
push
fidivl
in
shlb
pop
out
adc
jge
repnz
sahf
fcmove
xchg
jmp
lret
iret
inc
jbe
inc
pop
lret
xchg
int3
insl
cmp
mov
stos
hlt
xchg
fstl
lret
fnstenv
sub
lret
cli
fisubs
fdivrl
jl
lret
xor
push
mov
lret
sub
cmp
xchg
bndstx
pop
add
push
push
push
lret
out
int
in
aad
mov
inc
xchg
pop
test
loope
idivl
xor
cmpsl
or
xchg
push
mov
lret
stos
js
cmp
repz
or
lret
movd
xor
mov
lret
mov
ror
push
xchg
in
sub
fmul
jle
push
push
mov
xor
adc
inc
xchg
fidivl
xor
int3
jge
mov
jge
pop
lret
or
lret
sbb
cmp
xchg
scas
xchg
outsb
adc
repz
jno
dec
sub
ret
and
xor
aad
lret
jno
in
push
mov
or
fldt
mov
xlat
ljmp
pop
fs
cmp
negl
push
pop
jbe
mov
adc
leave
add
stc
lret
in
mov
lret
fwait
cmpb
mov
mov
lret
fldenv
push
fmul
lret
mov
mov
mov
js
xchg
cwtl
xor
shll
jns
gs
loopne,pt
mov
lret
fucomip
cwtl
jmp
aad
sbb
icebp
mov
lcall
and
mov
jo
add
lret
into
xchg
and
pop
dec
insb
or
lret
or
adc
stos
ljmp
xchg
add
pop
mov
scas
dec
fidivrl
lret
inc
mov
sbb
or
shrl
xchg
popf
in
inc
add
int3
cmp
fcmove
je,pn
imul
push
addb
sub
popf
ror
mov
or
pop
push
cmp
lret
mov
jge
shll
jp
fistps
lret
mov
xchg
adc
push
addr16
sub
lret
or
jge
jp
outsb
mov
mulb
xchg
mov
lret
out
stos
add
pop
push
dec
out
outsl
lret
arpl
imul
rolb
call
lretw
out
in
scas
jmp
sbbl
mov
enter
in
lret
sub
mov
and
out
xchg
insb
jp
lea
js
pop
out
into
lret
mov
mov
sahf
imul
xor
arpl
jmp
lret
js
sub
xchg
lret
rolb
push
mulb
push
in
sub
mov
movsb
test
mov
imul
lret
mov
aam
sahf
lret
lock
xor
lret
repz
adc
pop
stc
cmp
sbb
mov
lret
or
fimull
stos
jnp
xor
lret
xchg
insl
ret
movsb
aas
or
cmpsb
ss
inc
das
sarb
lods
rclb
and
mov
mov
ds
fcomps
or
xor
insb
and
lret
fdivp
dec
inc
cs
sbb
xlat
insl
sbbb
mov
mov
or
pop
mov
sbb
dec
add
out
xchg
add
ds
call
mov
cs
adc
addb
mov
lret
mov
fwait
ss
outsl
pushf
out
incb
in
xor
xchg
in
hlt
sbb
subl
fidivl
jne
xchg
cmp
cli
push
leave
shl
mov
fistpll
adc
lret
js
mov
mov
pop
cli
imul
adc
call
push
mov
fwait
and
adc
cmp
xchg
pushf
sbb
dec
mov
mov
lret
sbb
cmp
jmp
call
aad
shl
xchg
aas
mov
xlat
add
sub
ret
jmp
cwtl
loope
mov
int3
xor
stos
mov
or
ds
xor
add
lods
movsb
iret
jb
push
mov
lret
mov
xor
fsubrs
popf
fwait
rcrl
lret
xchg
xlat
loopne
movsl
lret
sbb
sub
sbb
mov
fmull
push
sub
subb
ss
dec
movsl
ficoml
xchg
push
enter
jge
xor
inc
add
int
fisubrl
adc
xor
jge
lret
cmp
and
lret
test
dec
aam
dec
or
insl
fmul
jmp
scas
xlat
mov
lret
add
cltd
icebp
inc
add
adc
call
sub
xchg
push
push
stc
push
ret
test
sub
inc
cmpsl
dec
clc
jmp
sbb
inc
xchg
lret
mov
outsb
cmc
cwtl
xchg
cmp
shl
push
int3
scas
jb
push
fcmovbe
mov
pop
cwtl
cmpsb
adc
clc
cmp
aam
fstl
sbb
push
test
int
mov
xchg
dec
push
xchg
mov
xchg
fiaddl
andb
cmp
stos
add
jnp
fists
sbb
pop
and
mov
addr16
xor
sub
cmp
push
ret
adc
aam
clc
inc
outsb
and
cs
dec
cmp
int
fnstcw
push
dec
mov
inc
popa
lret
sbb
xor
sbb
leave
icebp
mov
out
jge
mov
sub
xchg
lret
ds
add
cli
xchg
rcrl
xchg
lret
push
shlb
and
test
mov
push
lret
add
mov
rorb
add
and
jmp
cmpsl
lret
insb
cld
mov
push
lret
and
cmpsb
fisubrl
bound
dec
inc
lret
mov
out
xlat
pop
movsb
pop
mov
das
pop
iret
jno
and
aam
mov
jne
in
mov
adc
lods
fisubs
fmuls
lret
imul
cmp
inc
mov
test
add
es
into
dec
pop
jmp
sarl
lret
dec
mov
sbb
mov
dec
lret
insl
sbb
push
sub
cli
dec
cli
dec
add
mov
pop
fs
sbb
adc
cmpsl
fstl
data16
mov
cmp
stos
lret
insb
inc
nop
xchg
leave
pop
rcrl
pop
jnp
mov
push
int3
jp
in
sub
fcmove
inc
pop
imull
dec
adc
or
pop
pop
cmpsb
cwtl
and
stos
fldenv
push
push
push
push
lret
adc
stos
jge
scas
ret
add
cld
dec
lcall
imul
push
mov
int
fdivr
bswap
loope
popa
pop
faddl
repnz
xlat
jbe
ret
aam
xchg
int3
and
and
push
es
jmp
mov
sbb
cmp
popl
gs
sbbl
cmp
testl
stos
push
inc
inc
cmp
loop
call
lret
fidivrs
enter
sub
add
cmp
mov
and
sbb
dec
fisubrs
in
lret
push
pop
test
cmpsl
xor
jnp
rcl
jp
enter
ja
adc
xlat
jo
hlt
clc
repz
cmp
jns
mov
pop
xchg
lret
cmp
or
movsl
inc
or
out
lret
dec
stc
mov
int
cmp
lret
pusha
xchg
lods
jmp
ljmp
out
and
jl
or
lret
inc
cs
xor
push
mov
aad
sub
out
rcr
add
or
lods
rcr
xchg
clc
or
mov
icebp
imul
pop
inc
addr16
int3
out
cmpl
loop
push
pop
pop
call
lret
in
scas
mov
lret
int
sbb
out
aam
push
iret
dec
pop
xchg
lea
add
lret
or
xorl
in
lcall
mov
std
inc
stos
cli
test
xor
adc
fmull
ficompl
hlt
ret
mov
pop
cmpsb
lret
stos
jle
xchg
test
aad
lret
push
in
sbb
mov
cmp
mov
sub
dec
inc
mov
push
outsb
lret
lret
lods
gs
push
lea
repz
jb
push
cmc
push
lret
and
adc
sbb
int3
sub
aaa
lret
dec
adc
adc
pushf
loope
lret
mov
dec
lret
sbb
push
daa
cmp
lret
xchg
fcompl
popa
fiaddl
adc
fcomps
sbb
lret
sbb
lret
nop
mov
mov
adc
lret
fldcw
cwtl
mov
push
scas
aam
iret
sbb
insb
popa
dec
fwait
mov
dec
negb
sub
sahf
pop
fwait
jns
sub
adc
daa
ja
cmp
orl
fsqrt
mov
adcl
sarb
mov
inc
mov
shrl
adc
inc
loope
inc
hlt
ficoml
push
or
sbb
sbb
fldt
mov
mov
dec
mov
sbb
insb
out
mov
into
dec
xor
imul
std
jg
add
jnp
mov
push
inc
pop
shll
mov
lret
xchg
pop
jge
cmp
cltd
out
dec
ja
ret
lods
fcompl
xor
mov
pop
popf
lret
fcoms
lret
add
rorb
jmp
mov
loopw
cwtl
mov
adcl
out
ret
add
loope
lret
xlat
cmp
lret
xchg
xchg
test
imul
sahf
sub
lret
stc
andb
and
stos
adc
adc
or
xor
orl
xor
test
jl
call
scas
into
stc
jmp
sti
scas
lret
dec
and
lods
lret
out
mov
daa
lret
sub
push
lret
xchg
fistl
xchg
nop
lret
pop
pop
aam
add
mov
into
pop
rolb
dec
lret
dec
rorl
lret
mov
dec
fisubrl
ljmp
adc
lret
lods
sti
insl
xor
add
adc
in
lretw
jno
shlb
and
xlat
or
mov
insl
xor
fstpl
push
push
lret
vunpckhps
icebp
inc
lret
dec
xor
mov
mov
pop
in
xchg
mov
int
add
dec
mov
xchg
js
sbb
add
sbb
jnp
or
leave
sbb
cmp
xchg
stc
jecxz
cld
mov
jp
fptan
clc
xchg
setne
stos
mov
lods
and
and
clc
xor
mov
lret
cmp
movsb
lret
mov
lds
mov
lret
cwtl
dec
inc
mov
insb
sbb
jbe
jns
add
dec
test
dec
xchg
mov
xlat
adc
mov
cltd
or
mov
in
jp
dec
fistpll
stos
mov
cmpsl
lahf
lret
js
aas
sbb
in
inc
jb
mov
push
cmp
jns
or
xor
ret
xchg
pop
jl
sub
lret
mov
push
dec
cmpsb
or
adc
xchg
lods
lret
in
pop
dec
iret
jge
lret
pop
jo
cld
cwtl
out
sbb
add
xchg
outsb
stos
inc
sbb
lret
jmp
out
ds
int
push
mov
pop
cmp
xchg
fsubs
iret
das
stos
roll
cmpsb
jae
lret
out
arpl
mov
jmp
enter
sub
mov
mov
fsts
int
and
nop
cltd
mov
icebp
and
adc
adc
call
adc
sbb
xchg
lret
lods
in
sarl
cld
add
out
jbe
dec
ja
arpl
push
fwait
outsb
dec
pop
mov
adc
ror
lret
aas
mov
push
rolb
stos
fwait
test
scas
gs
jbe
divb
or
lret
dec
ds
ror
lret
mov
lret
cmp
mov
arpl
fmull
sub
aas
pop
push
adc
xor
sbb
cmp
jbe
das
stos
into
xor
mov
stc
lret
jmp
test
lods
dec
cmp
jns
sub
xor
jbe
les
xchg
outsb
add
and
push
data16
or
aad
mov
inc
cmp
sarl
shlb
rolb
sti
out
js
hlt
call
loopne
in
shrb
loopne
in
lahf
pop
or
push
mov
inc
push
cli
xor
add
out
xchg
lret
loope
lods
lds
lret
pop
push
add
xor
lret
cld
enter
jge
dec
clc
mov
call
lret
fcompl
and
cli
leave
sub
popa
mov
scas
push
lret
pop
cmp
pushf
jle
pop
and
repnz
or
stos
das
sbb
lret
mov
add
sbb
lret
cwtl
inc
pusha
aam
sbb
pop
jb
lret
outsb
push
mov
ret
scas
mov
xor
lret
adc
jbe,pn
lret
adc
adc
and
pop
mov
cmp
xlat
cmc
mov
jmp
in
or
imul
mov
and
out
out
inc
das
or
fimull
push
xor
in
ss
push
es
inc
cltd
roll
cmp
cli
inc
xchg
push
pop
outsl
fmuls
gs
fs
repnz
add
sub
lret
scas
mov
or
lret
mov
sub
in
mov
inc
adc
fidivrl
sbbl
mov
mov
repnz
inc
imulb
jb
or
jbe
mov
dec
aam
call
fidivs
test
mov
xchg
and
lret
out
jp
xchg
popf
shll
lods
ficompl
fisubrl
push
int3
inc
or
inc
fmull
in
jecxz
shrb
lahf
push
lret
push
mov
mulb
loopne
movsb
mov
out
stc
ficoml
rorl
lret
pop
push
lret
popa
lods
inc
mov
lea
sbb
fiaddl
test
mov
cmp
push
data16
sarl
sbb
jae
je
cmp
stos
insl
sbb
loop
pop
lret
add
mov
push
test
lret
jp
dec
lret
xchg
inc
rol
fs
mov
int3
pop
xorl
fcomps
cmp
popf
into
jbe
ljmp
jmp
shlb
mov
dec
sti
inc
pop
fwait
push
lret
pop
lret
mov
fdiv
lret
std
gs
in
lret
clc
xchg
cld
mov
ja
nop
fcmovu
pop
mov
lret
outsb
inc
stos
jb
lret
jg
rorl
dec
jns
inc
xchg
lret
outsl
insl
andl
out
sub
mov
lret
outsl
jle
pop
mov
mov
dec
and
mov
lock
xor
lret
jmp
mov
test
in
movsb
jl
push
adc
cltd
shrb
lods
daa
loopne
repnz
les
sbb
icebp
cmp
loopne
or
mov
clc
lret
jno
xchg
inc
stos
push
and
lret
inc
push
pop
lret
pop
scas
js
sbb
sub
int
dec
mov
pop
xor
cmc
push
les
mov
mov
sub
aad
in
lahf
pop
mov
shlb
fidivrl
fwait
cltd
add
int3
xor
mov
jge
push
xchg
sub
jmp
cli
mov
dec
sub
dec
pop
fsubr
or
and
add
insb
cmp
into
out
push
mov
icebp
xchg
rolb
int3
xchg
jge
in
shl
and
jne
lret
movsb
pop
inc
and
fmul
mov
adc
cmc
jmp
loop
insb
push
ficompl
lret
push
ds
test
pop
stos
out
push
pop
in
dec
insl
lret
imul
mov
lret
icebp
cmpsl
pop
add
cmp
fadds
lods
lret
stc
aad
test
inc
jmp
xor
cmpsb
arpl
lret
add
push
xchg
imul
pop
iret
enter
cwtl
into
stc
cmpl
rclb
jmp
repz
add
pop
sub
add
pop
pusha
int3
mov
or
or
std
inc
dec
xlat
outsl
sub
cmc
ret
push
push
ficompl
lahf
fsts
cmp
push
push
mov
cmp
mov
js
push
subb
int
lock
test
lret
mov
sarl
lret
outsl
jb
sti
fwait
cmpl
into
in
fistl
pusha
stos
xor
push
sti
dec
mov
xchg
inc
xlat
lret
or
jb
and
cmp
mov
rclb
rorb
cmp
push
mov
mov
add
setg
push
mov
insl
rclb
pop
mov
cmp
mov
andb
rcrb
out
je
ljmp
xlat
std
ror
xor
xchg
roll
mov
outsl
xchg
dec
jae
repz
outsb
xlat
clc
rcr
ss
aad
pusha
scas
pop
sbb
jbe
rcrl
pop
jb
lods
aas
cli
lret
push
xchg
in
pop
lret
dec
inc
insb
jg
mov
nop
jmp
cwtl
dec
lret
inc
pop
dec
mov
xchg
lret
pop
test
lcall
xor
adc
rorb
movb
dec
mov
jb
and
jnp
push
lret
xorb
sbb
rorb
inc
mov
stos
mov
repz
push
fcmovb
mov
and
jle
movsb
insl
lods
mov
js
push
leave
test
mov
push
xchg
xlat
lret
jno
cmpsl
aam
lret
repz
mov
xor
pop
lret
das
fstl
lret
push
in
xchg
push
lods
lret
sbb
outsb
sbb
mov
fmulp
cwtl
or
mov
dec
cltd
ss
push
cmp
in
xor
das
aaa
xadd
rolb
lret
adc
inc
dec
xlat
test
or
dec
sub
out
out
mov
fldenv
lret
dec
push
pop
sub
stos
jmp
psubusb
pop
cld
or
lock
or
leave
or
mov
xchg
lret
popa
inc
icebp
pop
cli
dec
int3
jne
push
arpl
or
adcb
inc
dec
jl
lret
out
lods
push
push
cltd
cli
punpckhwd
orb
mov
cmp
ffreep
out
sub
cld
stos
inc
sahf
lret
mov
mov
ja
mov
cld
ficompl
hlt
cmp
inc
mov
cmpsb
shll
inc
addr16
mov
pusha
mov
sti
lahf
test
xchg
lret
sub
adc
lret
inc
outsl
lahf
and
repz
cmp
sub
fbld
pusha
fwait
sub
int3
rolb
pop
rcll
jbe
push
and
pop
cmp
lret
loope
xlat
jbe
push
sub
mov
inc
pop
xchg
mov
adc
mov
mov
mov
sub
lret
imulb
or
shll
cli
cmp
push
sbb
shl
cltd
lods
add
cld
mov
push
gs
push
outsl
shr
in
xchg
testb
out
movl
lret
in
int3
adc
fisubs
call
ds
cld
rclb
lret
mov
fmul
in
dec
mov
mov
cmpsl
stos
data16
test
xor
jnp
jae
cmp
lret
lret
pop
jp
inc
stos
lret
mov
xor
mov
testl
dec
lret
mov
sub
jecxz
mov
adc
dec
add
lret
mov
testb
scas
enter
cld
fcmovu
cvtps2pi
dec
bound
rorb
cli
ja
push
xor
or
jo
mov
imul
into
sub
insb
push
lret
jg
and
mov
hlt
addr16
inc
jns
clc
pop
lret
dec
mov
push
pop
lret
mov
aaa
cmp
xchg
pop
sbb
add
daa
and
aaa
int
sub
notb
lods
lret
mov
popf
mov
das
je
sbbl
sub
loope
test
loopne
cmp
adc
fadd
mov
lret
js
and
cmp
addb
push
push
mov
lret
pop
jl
movsl
push
mov
or
lret
leave
inc
fildl
add
xor
inc
jne,pt
or
pop
stos
jmp
das
inc
mov
ja
inc
pop
cli
sub
rorb
dec
xchg
test
stos
sbb
add
int3
rorb
jb
std
andb
out
into
push
leave
fwait
test
push
out
cmp
ja
ljmp
stos
jge
lcall
sbb
mov
fwait
push
pop
jge
sub
jmp
pop
ror
mov
push
mov
pop
inc
dec
xor
fldt
aas
rcr
lret
cmp
xchg
call
jl
sub
mov
dec
sub
shl
stc
lret
push
cmp
pop
cmp
fmull
ror
in
outsb
scas
mov
mov
jecxz
mov
dec
iret
repz
repnz
sti
adc
or
pop
sub
lret
repz
lds
xor
dec
lret
push
dec
pop
cmp
lods
lea
scas
jae
jp
lret
and
cmp
xlat
rolb
jne
test
push
push
aad
lret
and
cmc
lret
inc
xchg
dec
adc
ror
mov
mov
xchg
arpl
pusha
sub
fxch
sub
dec
jmp
stos
mov
lret
xchg
cmp
test
stos
bound
or
pop
clc
insl
dec
adc
jbe
cmpsl
jae
into
jmp
xchg
fisubrl
push
sbb
cmp
xor
jge
repnz
mov
shrb
nop
mov
cmc
lret
cmpb
je
lret
mov
adc
lret
pop
jp
mov
dec
lret
out
mov
loopne
test
imul
dec
cld
test
test
push
adc
dec
ljmp
in
lret
rcll
call
jge
push
ljmp
fadds
mov
rcrb
inc
mov
lcall
pop
cmp
lret
cmp
mov
add
ficomps
shl
and
mov
jae
push
lret
push
push
jne
sbb
sbb
sbbl
pop
mov
sarb
int3
mov
sbb
xor
pop
lret
sub
push
mov
sbb
in
out
push
cmp
push
add
inc
mov
into
push
or
idiv
insl
bound
lret
push
mov
pop
negl
mov
iret
xor
cmpsb
in
sarb
cs
in
jge
icebp
loop
scas
adc
fxch
ret
mov
test
mov
stos
ja
xor
cmpsb
cmp
add
pop
add
add
pop
pop
and
inc
iret
pop
inc
es
cmp
xor
shl
aam
jo
add
adcl
out
lret
ljmp
pop
adc
das
or
jnp
lret
lret
adc
sti
or
popf
lret
fsubs
and
lret
stc
xchg
js
insb
xchg
out
sub
stos
lret
cli
jmp
push
out
push
add
std
add
lret
in
pop
imul
adc
adc
sbb
lret
sub
cs
pop
mov
sbb
and
into
or
mov
ja
sbb
sbbl
mov
rolb
es
adc
rorb
lcall
mov
cmpsl
ret
test
repnz
cwtl
mov
dec
call
and
mov
imul
stc
lret
adc
cmp
cmp
xlat
push
jl
xchg
cmp
inc
leave
pop
mov
sub
mov
lret
test
mov
jmp
das
pop
cld
cli
adc
je
sbbb
cmp
xchg
or
pop
and
lret
push
mov
mov
dec
shll
filds
cmc
sbb
test
push
ror
xchg
or
mov
mov
shll
aas
ljmp
hlt
xor
or
ror
dec
inc
push
mov
adc
stos
out
and
stos
adc
fwait
ss
cmp
loop
out
std
inc
jecxz
lock
cmp
mov
xchg
loop
inc
sahf
outsb
lret
clc
jmp
xor
lret
cs
fst
mov
int3
in
outsb
lret
movb
es
xchg
out
jp
push
cmpsb
enter
dec
lret
fimuls
test
jno
push
and
cmpsl
test
sbb
lret
inc
or
mov
popf
imull
mov
sbb
pop
sti
in
xor
pop
hlt
insb
stos
and
fwait
mov
cmpsb
js
jecxz
push
lret
sub
jno
xor
push
inc
xchg
xchg
iret
xchg
subl
daa
add
mov
sbb
scas
xchg
cwtl
xor
and
lret
loopne
mov
rorb
ja
or
test
xlat
movsb
das
xchg
jmp
mov
xorl
mov
jns
lret
js
sub
enter
sti
push
es
mov
mov
pop
or
les
mov
rclb
dec
icebp
aad
lret
insb
jne
xchg
inc
adc
lret
sbb
adc
fdivr
lret
ds
xlat
mov
jmp
jb
stc
xchg
popa
sarl
sub
xor
xchg
or
adc
lret
test
insl
mov
push
popa
call
jne
xlat
push
sbb
lret
mov
fiaddl
mov
sbb
pop
in
ret
into
stc
stos
or
mov
fsubr
js
lret
gs
mov
pop
mov
fcoml
lds
loopne
leave
imul
or
stos
sbb
outsb
into
adc
inc
fmul
xchg
mov
insb
or
inc
les
std
lret
xchg
stos
xchg
lock
lods
cmp
xor
ror
adc
mov
ljmp
inc
xor
xchg
insb
inc
push
mov
or
cs
shrb
xor
or
addl
sti
adc
and
lret
cmpsb
xchg
test
fadd
dec
mov
inc
mov
lret
jo
insl
out
dec
mov
sti
fldenv
aas
pop
jne
clc
lret
cltd
push
dec
sub
and
outsb
lret
in
add
and
jle
int3
pushf
sub
or
xor
and
mov
sub
jb
inc
clc
inc
mulb
push
insl
jbe
iret
or
xchg
jmp
popl
fdivrl
imul
jnp
lret
inc
lds
mov
decb
cli
mov
or
cld
cmp
arpl
cli
pop
icebp
cltd
fwait
int3
insl
inc
sub
mov
jnp
lcall
shll
adc
push
fwait
scas
mov
scas
fwait
aaa
dec
addb
add
movsb
adc
hlt
cld
sbb
out
std
icebp
fcomps
inc
add
inc
jbe
inc
xchg
lret
dec
loope
cld
icebp
mov
mov
xlat
xor
fidivrl
push
sub
hlt
cwtl
mov
shrl
lret
out
leave
das
test
into
mov
loop
xor
lret
mov
push
mov
aas
mov
shl
sbb
dec
adcb
jb
lods
and
mov
xchg
fadds
pop
in
stc
ret
outsl
inc
in
lret
mov
sub
jbe
sub
mov
cltd
pop
mov
cli
icebp
xchg
mov
sti
fsubp
lock
mov
mov
cmp
mov
jnp
pop
test
js
clc
lret
rorb
dec
mov
ret
call
into
into
arpl
adc
scas
nop
mov
mov
lret
pusha
pop
test
outsl
imul
inc
cmp
and
mov
sbb
mov
dec
aaa
loope
mov
stos
ja
pop
or
mov
lret
sub
cmp
sbb
out
mov
and
dec
sbb
and
xlat
push
push
pop
inc
lret
cmp
les
cmp
inc
inc
mov
stos
insl
bnd
mov
add
cmp
in
pop
mov
xchg
inc
push
lret
adc
call
fistpl
jbe
fldl
dec
cmp
adc
push
jl
push
inc
lret
lea
adcl
cmp
cmpsl
cli
mov
adc
adc
cmp
lret
mov
outsb
lds
push
cli
out
aaa
push
jae
sbb
jge
int
int3
mov
int
call
sub
es
popa
stos
je,pt
dec
int3
jge
into
and
mov
push
sti
or
adc
lds
pop
and
and
or
push
mov
xchg
pop
xor
std
jl
mov
into
fidivrl
mov
xor
ret
mov
rclb
dec
cs
dec
fwait
lret
dec
inc
jnp
fidivrs
lds
mov
adc
mov
enter
test
lret
sbb
les
int3
mov
xchg
hlt
mov
fsts
and
sub
shr
test
dec
xchg
sub
cmpl
jecxz
sub
add
ljmp
punpckhdq
pop
sub
or
orb
test
mov
mov
aam
test
mov
fcmovu
test
pop
xchg
sub
push
pop
fdivrl
aam
inc
outsl
jg
cli
std
popf
mov
cmc
dec
fnstcw
dec
cmpsb
outsb
scas
inc
cmp
xchg
lret
add
sub
stos
mov
iret
nop
int3
daa
xor
dec
or
cltd
sbb
dec
lret
jge
lahf
cmp
jle
cmp
pop
fwait
cmpsb
in
cli
gs
or
cs
lret
mov
sub
and
dec
cmp
jle
lret
rcrl
insl
mov
jnp
pop
pop
and
jp
ror
imul
test
icebp
lret
ss
test
lret
lret
out
repnz
outsl
cli
add
lret
fidivs
or
push
mov
push
sahf
test
cwtl
lds
dec
lret
jno
pushf
loope
and
xchg
sbb
cli
imul
pop
stos
icebp
pushf
add
int3
outsl
sub
or
sub
in
dec
dec
icebp
lret
in
repnz
shl
pop
mov
int
mov
push
sbb
pop
adc
add
jmp
cmp
push
loopne
xor
inc
sti
ljmp
sar
das
ret
incb
movsb
icebp
jecxz
fwait
inc
fimull
add
add
pop
nop
lret
push
jb
mov
lret
and
fildl
mov
fs
test
mov
cmpb
push
mov
into
push
jecxz
aam
pop
lds
je
adc
mov
insb
add
pop
lods
fld1
out
aaa
std
pop
loop
shlb
js
addr16
imul
daa
xchg
in
mov
jb
lret
adc
xchg
lret
xor
imul
lret
or
lret
sub
mov
jl
lret
cmp
aaa
mov
fidivs
lea
add
insb
dec
rcll
lret
lahf
std
out
ficomps
aad
jnp
into
clc
cmp
sbb
mov
test
xchg
fildll
lret
rolb
xchg
outsl
and
sub
ret
sbb
sub
insb
nop
lret
loopne
jl
pop
pop
stc
out
cli
sahf
in
push
outsb
test
ljmp
fdivrs
lahf
add
loopne
out
xchg
mov
in
fs
xor
xchg
jae
add
and
push
das
lcall
mov
bound
cli
push
ficoml
andl
cmp
push
subb
mov
xor
push
jmp
lret
mov
dec
loop
mov
pop
add
lods
clc
and
scas
lret
sbb
sbb
stos
and
stos
dec
pop
inc
inc
pop
pop
pop
mov
pop
dec
imul
rclb
jns
in
stos
mov
outsb
mov
pop
lea
cmp
and
mov
es
lret
mov
pop
fbld
xchg
std
mov
loop
xor
lret
aam
add
dec
cmc
xchg
lret
loop
std
inc
adc
mov
cwtl
jb
adc
cwtl
in
mov
nop
pusha
or
std
sarb
out
push
lret
add
lret
js
cltd
mov
jle
sahf
sub
push
adc
xchg
lahf
lret
push
and
lret
sbb
adc
lret
push
xchg
in
js
jo
fwait
and
out
sub
sbb
stos
sub
add
lret
cmp
test
jae
lods
push
mov
add
jp
popf
xchg
data16
cmp
lret
and
in
ficoml
jge,pn
outsl
test
inc
xor
aam
int
ds
mov
cmp
mov
nop
fsubs
gs
fistps
cmp
lret
int3
adc
addr16
rol
into
dec
dec
add
repz
hlt
mov
mov
lret
xorl
js
cmc
lret
xchg
inc
push
rcrb
lret
rol
and
mov
jl
fwait
add
popf
jno
lret
aas
mov
les
into
xorl
iret
lret
ja
xchg
mov
ror
adc
pop
fdivr
inc
dec
jmp
into
sahf
je
lret
push
pop
cli
jmp
fs
daa
adc
movsb
push
push
adc
imul
jp
push
sti
lret
ficoml
lret
push
xchg
inc
scas
and
push
in
adc
push
mov
xor
xlat
cmp
loope
cwtl
fdivs
outsb
mov
and
cmp
push
icebp
cmpsb
jae
rcrb
scas
add
ret
lret
sbb
shrl
mov
cmp
pop
or
rclb
sub
insb
or
push
jl
stc
lret
repz
and
pop
jmp
shrl
push
mov
or
sbb
lret
mov
and
jle
mov
aaa
lea
insl
cmpsl
mov
dec
or
les
dec
inc
lret
pop
lock
sub
subl
adc
adc
sar
and
and
ds
dec
lret
and
mov
nopl
mov
cmp
into
and
and
mov
sub
popf
sbb
xchg
add
test
push
lret
clc
or
lea
orl
pop
adc
leave
add
xchg
pop
cld
iret
popf
shrb
mov
xchg
pushf
test
cmp
sbb
cmp
adc
dec
xchg
out
or
fbstp
push
repnz
dec
out
in
in
popf
int3
jmp
lret
lock
push
xchg
stc
lret
push
test
lret
out
data16
outsb
adc
dec
sbb
pop
mov
cmpsl
test
mov
lret
test
es
mov
fsubl
lret
xor
sub
lret
dec
test
fnstsw
popa
cmp
imul
dec
addr16
or
int
inc
mov
sarb
add
lods
mov
sarb
add
mov
and
or
mov
mov
lret
stos
mov
lret
inc
sub
loop
ficoml
mov
push
sarb
lds
cmpsb
add
cli
push
adc
shl
push
push
fwait
or
aad
fwait
push
lret
fidivrl
cli
xor
incb
dec
push
sbb
cmc
mov
into
pusha
lret
loope
sub
xor
fmuls
push
outsb
adc
fwait
pop
sub
sbb
inc
cmp
sbb
mov
rcll
sbb
in
push
lret
jmp
aaa
lret
mov
cli
mov
scas
cli
repnz
pop
les
mov
mov
ret
adc
sbb
shld
imul
lods
fptan
stos
jo
xchg
pop
int3
inc
sahf
rcrb
cmp
inc
inc
arpl
xor
movsl
mov
adc
fiaddl
lret
outsb
imul
scas
mov
sbb
ret
mov
push
out
ja
out
test
push
lcall
xchg
loope
fsts
or
jp
sti
push
lret
data16
or
shlb
pop
sbb
ror
test
rep
sbb
lahf
cmp
lcall
in
xchg
sub
sbb
popf
test
cmp
dec
cli
lock
pusha
lret
mov
or
pop
mov
jo
sub
ret
iret
es
xlat
xchg
sbb
and
into
lret
pushl
adc
xor
or
out
fxch
lret
mov
sbb
jo
ljmp
shlb
repz
in
int
rcl
lret
out
fs
imul
mov
pop
sub
cmc
scas
ficoml
sbb
jl
lret
rcrb
cmp
clc
cmpsb
repnz
push
jnp
xor
sub
cmpsl
adc
inc
std
mov
jecxz
xchg
dec
sub
flds
stos
or
mov
fdivr
and
ljmp
fsubrs
jns
xor
inc
cltd
pushf
lcall
movsl
sub
clc
mov
mov
xor
movsb
aad
inc
jns
data16
stos
lock
sahf
or
inc
lret
icebp
pop
add
pop
pop
adc
rorb
sub
pop
data16
mov
jl
fcompl
dec
popa
je
mov
lret
sub
xchg
enter
subb
mov
mov
mov
cli
adc
sub
popf
lock
cli
lret
and
cwtl
pop
push
xchg
hlt
pop
fcmovbe
fnsave
mov
in
jns
xchg
lahf
push
aad
rcl
cli
or
cmp
aam
aam
cmc
push
and
sbbl
stos
rcrl
mov
cmpsl
mov
pop
call
push
or
ss
push
or
xchg
lock
xchg
push
dec
and
int3
out
std
ror
pop
adc
leave
test
dec
dec
xor
dec
pop
mov
and
mov
cmp
push
ficoml
mov
xchg
cmp
mov
sub
sbb
movsl
adc
and
lret
ret
shrl
jle
mov
dec
pop
pop
xchg
es
mov
sbb
add
dec
jmp
stos
in
mov
xchg
mov
xlat
sbb
inc
adc
repnz
mov
popf
add
scas
inc
lret
push
inc
cltd
or
cmp
gs
xor
lret
inc
out
das
or
dec
ja
loop
cmp
aas
orl
mov
iret
ja
add
jl
test
mov
cmp
push
out
insl
sti
outsb
mov
sbb
scas
js
adc
cmp
jbe
shlb
adc
sub
lret
mov
or
cmp
jp
in
sub
dec
mov
fdivrs
and
xchg
test
std
pop
jle
pop
lret
dec
push
jmp
or
lret
xorl
repnz
pop
fdivr
xlat
mov
mov
sub
mov
lret
jnp
cmc
cmpsl
enter
lret
data16
mov
mov
pop
dec
out
scas
or
orb
mov
push
imul
cli
mov
cmp
mov
arpl
sub
and
lret
jle,pt
mov
je
shll
xor
xor
leave
jge
lret
push
cmp
icebp
dec
fcmovb
mov
cli
mov
into
or
or
es
mov
push
dec
fnclex
call
sti
data16
ficoml
jle
inc
dec
fdivrs
jge
adc
cmp
sbb
lret
mov
nop
test
xchg
add
inc
pushf
pop
dec
pop
pop
lret
das
outsb
imul
lods
dec
xchg
out
ror
gs
xor
arpl
xchg
shll
cli
push
add
xor
bound
cmpsb
jecxz
lret
test
cmp
push
popa
push
cwtl
lret
outsb
jp
movsb
std
fs
adcl
lret
fimull
cli
and
es
adc
add
lret
jecxz
xor
inc
movsl
ljmp
xchg
js
insb
test
xchg
pop
in
aam
xchg
xor
dec
rol
push
jmp
int3
sbb
cmp
jne
jmp
add
jle
mov
lcall
imul
lret
mov
push
mov
out
mov
outsb
lret
je
flds
test
sbb
sti
scas
mov
pop
xor
ficompl
mov
pop
aaa
inc
js
lea
lods
xor
adc
std
repz
mov
pminub
lret
mov
hlt
gs
pop
aas
lcall
add
bnd
stc
iret
adc
pusha
fs
xor
jo
xor
movsl
mov
lret
fstl
pop
mov
scas
rorb
cmp
pop
ret
shll
fwait
mov
iret
dec
arpl
fmulp
mov
lock
mov
cmp
lret
pop
lods
pop
hlt
sbb
outsl
sbb
inc
mov
add
cwtl
pop
push
cmc
fsubs
inc
jne
std
les
mov
cld
fiaddl
sub
cmp
mov
or
xchg
outsb
lret
js
loope
pusha
xchg
lret
ja
or
jno
lret
cmp
push
xchg
lock
push
pop
mov
fnstenv
push
test
int3
pop
ret
xchg
stos
mov
cmp
aad
fldl
insl
mov
lret
mov
into
xchg
mov
mov
and
pop
lret
cmp
cmp
xchg
sub
push
lea
jns
dec
jl
jbe
fnstcw
pop
out
push
lret
pop
sbb
cmp
rcr
stos
enter
int
xchg
cwtl
fwait
lret
fisttps
lret
dec
in
in
fwait
lret
sbb
xchg
std
scas
ficoml
test
rcll
xchg
fldcw
push
into
cmpsb
lret
xor
jbe
or
je
cwtl
jmp
xor
and
add
loopne
mov
adc
in
push
inc
adc
lret
fucomp
jge
stos
adc
aas
jb
in
jo
arpl
jne
icebp
into
imul
xchg
daa
int
pushf
push
call
mov
lods
cmp
std
imul
inc
xor
dec
pop
lret
in
jne
dec
icebp
lret
adc
sub
xor
rcrb
cmp
pop
sub
scas
clc
mov
sbb
je
sbb
fs
int
shlb
jg
mov
icebp
lret
jo
xor
hlt
das
arpl
and
mov
and
insb
xor
out
icebp
mov
lret
jno
out
js
sub
inc
dec
and
pop
fsubrs
ror
push
jp
fiadds
xor
outsb
push
cli
in
push
add
jns
nop
jbe
xor
lret
dec
cmp
mov
push
stos
sub
out
add
adc
xchg
push
adc
and
inc
dec
dec
xchg
call
mul
pop
cmp
xlat
lret
adc
fdivr
mov
xchg
call
cmc
dec
cmp
xchg
mov
test
fisttpl
cs
mov
lret
add
cmp
inc
test
aaa
push
cmp
ret
ja
fnstsw
xchg
int3
repz
cli
dec
lret
cmp
add
lret
inc
adc
testl
and
fldenv
or
jae
lret
lds
cltd
pop
test
mov
mov
lret
call
jbe
or
movsl
push
lahf
lods
xchg
push
sbb
xor
lret
rcll
lods
push
js
out
jmp
mov
testb
aas
push
aaa
lret
fs
xor
lret
pop
inc
add
dec
add
mov
sarl
pop
cmp
jno
adc
mov
jecxz
clc
cmp
inc
lret
ljmp
jle
mov
mov
jmp
movsb
repz
sti
dec
rcr
test
ret
pushf
int3
sub
mov
pop
lret
in
lret
sbb
cmp
jmp
lods
dec
xchg
std
inc
pop
lret
mov
sti
xchg
pop
dec
stos
sub
inc
adc
mov
mov
cs
pop
push
lret
sub
cmp
ror
mov
fiaddl
cli
dec
lods
xor
mov
push
xchg
shr
daa
inc
xchg
push
fadds
pop
lret
les
cltd
inc
mov
std
sub
aam
pop
xchg
lret
roll
mov
scas
xchg
std
int3
jo
pop
jge
push
jno
dec
movsb
add
lret
bound
dec
sub
add
xchg
fnop
mov
and
test
hlt
stos
mov
jne
xchg
mov
fildl
jae
dec
sbb
lret
movsb
icebp
iret
fwait
movsl
std
lret
fs
adc
lcallw
mov
shrb
and
out
lret
jnp
xlat
jo
dec
lret
push
mov
cmp
jne
dec
push
shlb
push
jge
sub
popa
imul
lret
sbb
jns
lret
mov
in
mov
push
sub
imulb
adc
int3
add
cli
push
lret
dec
xor
sbb
leave
or
cmp
jecxz
adc
jb
stos
int3
into
bound
pop
stc
push
ret
pop
daa
xor
add
inc
rcrb
mov
adc
daa
sbb
int3
aaa
enter
push
push
test
lret
ja
inc
mov
cmpb
sarl
je
call
push
int3
and
cmp
xor
movsl
rorb
pusha
mov
pop
lret
fdivr
roll
ret
lret
mov
roll
cli
mov
adc
popa
ror
push
andb
mov
mov
test
enter
shll
inc
mov
sub
out
mov
add
and
popa
mov
mov
lret
test
mov
lods
push
aas
repz
cmpsl
jno
jae
lret
inc
mov
into
das
into
outsb
ds
push
jno
lret
mov
pop
sarl
in
xchg
cmp
push
cmc
xchg
jae
pusha
xor
add
push
or
faddp
push
repnz
loop
push
lret
mov
sbb
and
jae
cmp
pop
or
sub
scas
into
aam
rolb
cmp
mov
aaa
insl
cwtl
fsubrs
in
dec
lret
outsb
test
adc
xor
ret
sbb
bound
not
cwtl
mov
fistpll
fdivr
cmpsb
jl
push
cli
pop
test
cmpsl
lret
add
orl
push
dec
jae
insb
ficoml
mov
cwtl
xchg
in
xor
lahf
cmc
add
roll
rolb
lret
mov
lret
jae
mov
cmp
lret
inc
sub
nop
jno
lret
fimuls
mov
imul
lret
pop
cmpsl
faddl
mov
lret
mov
inc
pop
lret
lcall
add
int3
cmp
add
aas
push
sub
inc
repnz
imul
int3
and
mov
int3
jae
adc
jb
push
imul
test
mov
add
loopne
lret
or
or
mov
into
lods
jb
xchg
cltd
lret
aad
mov
out
daa
cmp
and
adc
mov
shll
mov
push
clc
sub
stc
sbb
test
mov
adc
fcmovnu
pop
mov
xchg
jmp
sbb
cmp
fsubrs
jns
xchg
in
loope
pop
dec
xchg
jp
out
inc
lret
push
and
lds
push
fimull
insb
test
out
ljmp
pop
lods
loop
rolb
out
lret
les
and
lret
sbb
imull
lret
pminub
fcomp
fisubrl
ror
mov
shrb
lret
jno
cmpb
mov
jb
test
loopne
test
shlb
sub
into
xchg
mov
mov
out
into
cmp
jl
mov
ret
sub
imul
jae
cmp
lret
cld
sarl
add
mov
into
sbb
ficoml
mov
push
outsl
popa
lret
xchg
aas
and
and
mov
xor
aas
lret
dec
mov
loopne
cmp
xlat
mov
ror
out
loope
push
movsb
pop
fidivl
mov
cmp
fadd
ror
jne
adc
hlt
lcall
iret
dec
jno
lock
cmp
lret
cmp
lret
jmp
out
sub
into
cmp
lret
and
lret
popa
xchg
pop
arpl
lret
sbb
rolb
fwait
je
andl
inc
cs
insl
ret
fucomp
cli
stos
mov
or
inc
fldenv
xchg
sub
lret
testb
push
scas
xor
mov
pushf
test
clc
sarl
or
or
push
pusha
repz
or
outsb
lret
pop
jecxz
xor
push
stos
testl
lret
fldenv
add
call
adc
xchg
mov
mov
xchg
rorb
das
pusha
inc
insb
lret
inc
pop
ja
mov
loope
hlt
out
test
pop
cmpl
sub
lret
ds
lret
in
xor
mov
xor
iret
fdivp
adc
faddl
sahf
jg
rcrb
mov
sub
dec
push
ljmp
adc
lahf
ror
cmp
cs
roll
inc
xchg
pop
inc
sub
std
or
sbb
mov
cmp
cmp
or
sahf
rol
aad
mov
push
lret
or
jo
insb
lret
fwait
outsl
shlb
jmp
icebp
mov
test
ja
jnp
mov
push
sub
xchg
imul
jge
in
popf
cltd
cmp
fs
lret
adc
mov
pusha
lret
mov
ret
inc
aam
xchg
mov
rcll
sub
adc
shr
das
lret
cmpsb
pusha
in
gs
jnp
inc
inc
shrl
jno
mov
divl
sbb
aaa
adc
add
lret
xchg
inc
dec
in
add
ljmp
dec
shr
pop
push
lret
test
jns
mov
lret
test
cmp
into
lcall
dec
cmp
pusha
cmpsb
aad
mov
stos
cmp
neg
mov
aam
fistpll
lds
push
and
mov
mov
popa
sub
cli
addb
scas
push
test
mov
sahf
dec
daa
lret
add
arpl
insl
shlb
xchg
test
push
cmp
or
das
lret
and
int
arpl
or
daa
lret
fwait
pop
jbe
mov
jae
lahf
aam
and
mov
push
pop
ljmp
out
enter
sub
fidivrs
int3
ja
mov
push
pop
jge
faddl
js
push
icebp
lret
mov
mov
scas
stc
lret
dec
aam
je
mov
mov
cmc
or
or
stos
lret
add
lods
test
dec
cmpsb
push
xor
stc
push
popa
fisubl
jmp
push
adc
ja
xchg
adc
ljmp
mov
mov
imull
cmp
xchg
cmp
and
pop
rorl
data16
jmp
cmp
sbb
lcall
call
rorl
lret
ljmp
mov
in
dec
sbb
int3
cmp
loop
repnz
sti
roll
fdivs
shrb
xchg
iret
xchg
inc
inc
lea
call
cmpsl
sbbl
and
mov
pop
aad
cmp
fs
flds
call
pop
test
stos
fdivrl
subl
mov
cmp
rcrl
scas
jecxz
and
jbe
pop
subb
cld
adc
mov
movsl
cmp
sarl
shll
sub
inc
xor
out
lcall
ret
out
add
je
arpl
pop
mov
lods
in
add
xchg
pop
aad
or
loopne
inc
sbb
cli
out
inc
mov
adc
mov
and
jbe
test
fidivrs
lret
xchg
rclb
gs
and
jmp
cs
lret
push
jne
repz
cli
sub
jo
and
cmp
lret
es
movsb
jmp
mov
lret
push
cmp
inc
pusha
cmp
shlb
lret
jno
and
mov
add
rcl
inc
lret
pop
addr16
mov
add
adc
dec
push
bswap
mov
push
imul
or
sub
rcr
das
jae
push
cmp
inc
ds
nop
xor
pop
lock
std
mov
icebp
pop
push
lret
iret
mov
lret
cltd
jae
test
js
popf
add
add
add
and
mov
xor
dec
push
xchg
movsl
aaa
adc
stos
data16
insl
jb
lret
dec
dec
or
pop
fiaddl
fisubrs
lret
mov
repz
or
jno
arpl
mov
mov
je
lret
stos
fadd
outsl
dec
mov
idivl
pop
sub
iret
lret
push
mov
mov
mov
repnz
and
ficoml
xor
repnz
pop
jae
mov
mov
cmc
loope
lret
mov
test
xor
cmc
test
push
mov
mov
mov
jno
arpl
xlat
push
xchg
or
test
pop
jp
sub
fldcw
xchg
sbb
jg
pop
inc
daa
repnz
push
push
pop
or
aam
cmp
dec
dec
int3
mov
cwtl
pushf
lret
jg
pop
xchg
push
pop
lret
xor
ss
add
sub
lret
push
int3
cmp
pop
sbb
mov
icebp
jbe
das
push
inc
mov
lret
add
shll
lret
lret
xchg
mov
fcmove
mov
jbe
cmp
int3
les
insb
sarb
cwtl
mov
lret
incl
cmpsl
stc
adc
les
int
mov
pop
cli
mov
inc
jae
lret
daa
xchg
push
xor
enter
fsubl
mov
imul
lock
sbb
xchg
cmp
add
lret
hlt
jmp
lock
push
jno,pn
out
lret
outsl
mov
rclb
mov
inc
testl
push
mov
mov
mov
cs
pop
mov
pop
jmp
out
and
fisttpll
pop
fs
mov
lret
jle
outsb
push
inc
xchg
or
push
xlat
ror
or
lahf
jno
sub
int3
jecxz
leave
loopne
mov
fdivrs
test
and
shlb
xchg
dec
ja
inc
push
test
sbb
shll
lods
cmp
push
std
fisubrl
pusha
outsl
xor
sub
lret
cs
mov
dec
cmp
and
xchg
dec
mov
mov
insl
and
das
push
lods
cltd
nop
test
push
cmp
jo
fcmove
jmp
sub
cli
mov
out
mov
ret
inc
lret
mov
xchg
push
mov
call
lret
ss
in
test
lret
xlat
sti
adc
clc
inc
pop
pop
sahf
lds
lret
les
push
jb
fldt
push
sub
cmpsl
ret
ficompl
xor
xchg
pop
cwtl
cld
insl
lret
push
clc
ret
rcll
lret
push
xor
cltd
push
push
sbb
ror
mov
add
xor
adc
xor
lret
fwait
pusha
cmp
ret
adc
test
shrl
cmp
sbb
sbb
int3
cmp
cmpsb
rcrb
adc
pusha
popa
sub
or
sbb
lret
adc
fists
jg
and
jecxz
pushf
dec
lea
pop
rcrb
fnstcw
push
cmp
scas
sub
adc
dec
shll
mov
mov
lock
lret
gs
push
enter
lods
outsb
xor
xor
fistpl
adc
lret
mov
mov
ja
dec
rcrb
rcrb
pextrw
rcrl
jl
and
repz
lret
xchg
mov
and
repz
or
lret
add
popf
test
rorb
fsubrs
or
adc
xchg
push
sbb
mov
loope
repz
jns
inc
cmp
xchg
mull
ss
lret
and
cli
adc
jle
sarl
roll
fistpll
aaa
dec
sub
rcr
xor
lret
add
negl
lret
push
push
shrl
xchg
adc
test
push
cmp
lret
xor
xlat
rorb
xor
sbb
jmp
xchg
lret
cmc
addr16
mov
pop
xor
adc
dec
ds
adc
js
mul
incl
call
lret
movsb
lods
cmp
mov
dec
sbb
ljmp
jg
mov
xchg
add
shlb
in
loope
jge
xor
movsl
fwait
push
mov
lahf
nop
mov
gs
mov
orb
sub
int
dec
lret
aad
shrl
sub
call
xlat
mov
dec
lret
jb
sbb
out
mov
das
aad
and
cld
lods
std
cwtl
lret
mov
lret
insb
ds
dec
fmul
daa
jp
mov
lret
mov
push
lret
sub
add
sbb
lret
bound
pop
push
lret
adc
pop
stos
jl
cmp
popf
loopne
jbe
out
mov
pop
loop
out
jb
push
sbb
cli
xchg
xorb
cmp
add
lret
or
push
lret
xor
int3
jge
lret
lds
lret
cli
sub
sub
and
enter
negl
mov
rolb
dec
shll
lret
xchg
arpl
enter
hlt
or
xchg
lret
data16
mov
push
lret
je
mov
jbe
stc
loopne
out
testb
int
ret
lret
aaa
mov
stos
sbb
sub
repz
dec
mov
lret
dec
shl
add
cmpsl
lret
out
push
insl
push
xchg
lret
mov
out
sub
das
pushf
sub
or
xlat
lret
out
push
or
mov
push
fcom
mov
stc
pop
cli
cmpb
imul
push
mov
ficoml
adc
lret
push
cld
sub
ret
dec
ljmp
hlt
sbb
jno
add
cmp
pop
rcl
rcr
sbb
outsl
cmp
inc
mov
mov
mov
pop
aas
sbb
jecxz
and
xor
fs
add
or
pop
add
jno
lret
push
mov
or
popa
xor
data16
or
ja
mov
cltd
insb
lahf
aaa
mov
enter
cmpsb
push
or
ret
lea
lret
aam
sbb
mov
adc
cld
xor
or
out
lds
jo
pop
dec
fadds
cmp
outsb
push
pop
mov
mov
xchg
rcl
test
mov
fldl
cmp
inc
fcomps
adc
xchg
mov
inc
das
pop
inc
and
fwait
dec
pop
sub
mov
mov
leave
ja
mov
and
xchg
sbb
adc
cmpsb
cmp
or
pop
insb
adc
ror
mov
ret
mov
test
dec
dec
ficoml
aas
jp
lret
jl
iret
xchg
insl
pop
ds
loope
clc
and
mov
pop
sbb
push
jbe
lret
jnp
lds
mov
lods
cli
fildl
sahf
aad
cli
insl
bound
movsl
cmpsb
cmp
in
ret
dec
pushf
dec
push
mov
lret
or
cmp
test
sub
push
and
inc
jnp
cmpsl
cmp
test
addr16
inc
xchg
push
sub
add
loop
or
add
out
pop
pusha
pop
or
lret
icebp
mov
aam
pop
icebp
imul
inc
iret
sbb
ljmp
sub
lret
adc
mov
js
dec
sbbb
stos
and
and
lret
push
xor
pop
cmpsl
test
push
jns
or
xor
lretw
xchg
aas
gs
out
lcall
sbb
inc
test
test
fwait
push
sub
or
lret
lea
lret
sbb
lret
or
mov
loope
lock
cmp
and
les
xchg
int
dec
add
int
icebp
adc
sarl
xor
ljmp
mov
and
mov
jl
rcrl
sbb
jmp
jecxz
or
ds
or
into
push
lret
ret
fwait
jb
jno
lret
aaa
outsb
mov
xchg
mov
fstpt
call
inc
jl
push
loope
mov
or
icebp
lret
jmp
adc
es
mov
or
lret
xchg
pop
jl
sub
jle
sbb
imul
test
jmp
insl
push
ljmp
loop
and
mov
lret
fsts
push
lret
movsl
xor
sahf
mov
fmuls
lcall
in
loopne
cmpsl
mov
dec
dec
cmp
lret
push
shll
lret
das
mov
jae
xchg
in
push
int
mov
mov
add
flds
lcall
jnp
stos
mov
shl
xchg
test
jno
lret
mov
inc
lret
push
xorl
lret
stc
jecxz
imul
mov
xor
sbb
push
orb
lret
xor
aaa
jl
fidivrl
cmp
add
popa
pop
pushf
mov
jmp
lret
pop
mov
cmp
inc
clc
lods
lret
mov
cmpsl
lret
dec
int
jle
ljmp
and
ret
lret
mov
in
lret
lds
addr16
pop
scas
lods
lret
sub
push
mov
cmp
test
repz
and
lret
fcmovbe
fsub
and
sti
mov
sub
cmp
scas
outsl
pop
int3
pushf
lcall
stos
lods
fwait
xor
ffreep
cs
xor
hlt
jb
cld
faddp
mov
and
jcxz
mov
sbb
inc
mov
push
jns
imul
sub
shlb
pop
push
add
data16
jle
xor
xchg
aas
jge
test
int
push
pop
pop
cmp
adc
xchg
sti
ds
mov
jg
push
clc
loope
lret
xor
cwtl
imul
in
pop
dec
cmp
push
shl
inc
loopne
and
mov
xchg
sub
in
mov
push
mov
lret
cmpsb
faddp
int3
dec
cmp
enter
es
fwait
xor
lret
sti
mov
test
pop
sub
push
popf
stos
jnp
xchg
fidivrs
inc
shlb
jb
lret
add
push
insl
sbb
lret
dec
push
mov
xchg
cmp
stos
pop
sbb
fisubs
lret
mov
aaa
shrb
mov
addb
cli
push
mov
push
xchg
jle
and
lods
lret
mov
and
add
cli
sarl
jmp
mov
decb
fidivl
flds
pop
push
fadds
loope
jecxz
pop
and
lret
mov
mov
pop
cltd
push
mov
cmp
into
add
sbbb
and
xchg
fs
icebp
inc
lret
fcoms
pop
xor
xchg
xor
cmpsb
insl
rsqrtps
sbb
pop
lret
test
sbb
enter
icebp
jl
lahf
fstps
cmp
test
jnp
aam
lahf
and
cltd
and
dec
lret
xchg
sub
cmc
aad
sbb
jp
ljmp
sub
lret
fidivrl
lret
or
mov
pop
mov
mov
lret
sbb
sub
fidivs
clc
iret
cmp
cli
es
aaa
dec
adc
aam
inc
sub
loope
pop
in
or
xchg
mov
inc
push
jb
lret
jl
dec
and
pop
mov
imul
shll
mov
popa
xor
xchg
push
incb
dec
int
or
arpl
xor
push
pop
fwait
mov
jbe
push
or
adc
and
gs
mov
pop
xchg
lret
inc
jmp
stos
add
das
lahf
fsubs
lret
shr
imul
mov
std
jmp
or
xchg
xchg
mov
mov
das
hlt
or
aas
sub
out
mov
inc
and
lret
cmc
mov
insl
mov
inc
out
mov
cmp
cmpsl
dec
stc
orb
cli
pop
in
iret
insl
addr16
push
nop
inc
sub
enter
or
add
or
mov
xchg
cmp
cmp
push
clc
or
cs
mov
xorl
aas
inc
lret
enter
jg
rcrb
jne
scas
dec
push
lret
stos
push
les
aad
adc
jmp
and
pop
lret
mov
push
push
into
loope
pop
icebp
test
inc
add
mov
stos
jns
bound
aad
lret
lea
sub
das
or
cmp
lret
xor
bswap
icebp
iret
xor
lcall
lea
inc
sahf
pushf
sbbl
out
mov
int
popa
add
mov
sub
mov
stos
mov
lret
mov
mov
add
lret
mov
cmp
mov
jnp
jne
mov
out
fs
pop
rorb
lods
sar
into
adc
lret
inc
loope
mov
dec
xchg
cwtl
test
sub
push
lea
lret
dec
jae
or
les
push
arpl
dec
cwtl
int3
push
push
mov
jle
mov
inc
loopne
xchg
int
xchg
test
popa
sbb
shl
lret
test
cltd
lret
xor
lret
idivb
lret
out
pop
push
dec
xchg
sti
stc
xor
es
loopne
dec
xchg
add
lret
lret
aaa
rclb
dec
lret
icebp
sbbl
fwait
ljmp
shlb
addl
int3
sbb
xor
loopne
add
mov
arpl
lret
and
push
ficompl
stc
outsl
test
sbb
str
clc
dec
push
inc
fiaddl
and
mov
mov
pop
pop
fbstp
lret
ljmp
lret
xchg
add
push
jmp
lret
and
mov
jle
mov
fcmovnbe
mov
ss
lret
cmpsb
iret
scas
mov
xor
lods
xchg
dec
fcmovnb
lret
cmpsl
les
test
mov
cmp
push
sub
loope
push
xchg
out
fimull
mov
js
dec
inc
aad
jg
stc
inc
fwait
daa
mov
dec
inc
out
mov
mov
shlb
pop
daa
xchg
into
mov
lret
js
sub
lret
fistpll
pop
cmp
fnstcw
rcrb
iret
fisubrl
les
push
jb
xchg
adc
sub
dec
inc
fcmovne
sbb
dec
pop
lret
jmp
xchg
lret
inc
add
lret
and
hlt
fiadds
daa
push
lret
sub
sbb
push
lret
addr16
scas
cmp
pushf
lret
mov
inc
pop
sbb
mov
imul
jb
xlat
lret
push
aas
lods
insl
mov
shrb
int3
add
sti
mov
push
lret
jge
cli
cmp
xor
or
arpl
adcb
fdivrs
and
repz
leave
out
in
cmp
lcall
pop
fcmove
lds
cltd
insb
xor
sub
fst
add
cli
and
add
inc
dec
mov
mov
rorb
xor
pop
imul
in
mov
das
mov
dec
inc
lret
bound
popf
lret
scas
inc
cmp
inc
xchg
push
icebp
fisttpll
mov
inc
pop
in
lret
sbb
lret
rclb
lret
scas
in
neg
enter
ljmp
cmp
pop
fcomps
sbb
xchg
fwait
mov
jmp
lret
cmp
cli
pop
scas
dec
lret
jae
inc
ja
test
adc
stc
xor
test
cs
cmpb
fs
addr16
pop
pop
lret
and
mov
fisubrl
loop
nop
mov
cmp
sub
sub
outsb
push
fwait
jb
mov
mov
test
lret
rorl
mov
aad
ljmp
stc
push
pushf
sub
lret
ror
in
in
lret
adc
xchg
ljmp
mov
fs
popf
sbb
mov
and
insb
xchg
lret
ret
popa
bnd
dec
fs
cmp
lea
jnp
or
mov
repz
lret
nop
aam
mov
sahf
lret
xor
sar
popf
push
lods
mov
push
pusha
push
cmp
lahf
jnp
push
xchg
jne
rcrb
cmp
push
lret
cmpsb
ljmp
xchg
in
into
call
stos
arpl
xor
fdivr
das
shl
or
mov
xor
fisubl
andb
sbb
insl
dec
ret
daa
xchg
lret
push
jecxz
jae
inc
cli
inc
insb
out
sbb
pop
aam
cs
push
lret
cli
test
js
mov
push
in
inc
push
les
sub
lret
fs
pusha
repnz
fwait
into
mov
and
jae
icebp
mov
mov
dec
lds
dec
aas
mov
lret
iret
imul
mov
scas
leave
sub
and
pop
fmuls
pop
cmp
sub
jp
or
adcb
fmulp
scas
mov
decl
aaa
clc
inc
lret
lods
push
lret
pop
int3
adc
cli
test
ss
fbld
add
repnz
and
push
sbb
push
gs
dec
cmp
ds
adc
mov
shlb
cli
adc
ret
in
dec
xchg
jae
xchg
and
or
cwtl
mov
lret
leave
mov
add
or
jl
xchg
ret
sbb
cmp
inc
sub
out
mov
fs
insl
push
cli
lods
or
mov
lret
sbb
aas
cwtl
cltd
and
push
mov
xchg
add
pop
fimull
cli
fs
dec
sbb
in
loope
push
cwtl
dec
lret
cmp
mov
fidivrl
push
sub
inc
cmp
addr16
lret
cmp
xchg
xchg
fsqrt
sbb
arpl
shll
mov
andnps
test
xor
sbb
fsts
pop
sahf
outsw
lods
rcrl
jecxz
enter
divl
lret
cmc
sbb
stos
mov
imul
popf
sbb
std
push
xor
sub
mov
rcr
mov
cmp
xchg
imul
lret
cmp
add
and
cmpsb
test
mov
lahf
rorl
lret
pop
xchg
mov
leave
mov
sbb
lcall
pop
gs
int
sub
cmpb
mov
int3
or
scas
mov
test
popa
es
push
mov
xor
inc
xor
enter
add
fisubrl
mov
int3
fsubl
lret
loope
hlt
mov
adc
pushf
pop
arpl
sar
je
jae
lret
jmp
inc
rcrl
into
mov
movsl
repnz
decb
dec
jl
push
pop
cmp
mov
aaa
aas
adc
rcrl
lret
in
call
lret
xchg
in
mov
add
js
adcb
lret
adc
fimull
cvtpi2ps
fcompl
jne
mov
and
lods
lret
pop
push
leave
jge
lret
aaa
adc
mov
inc
pop
mov
stos
je
into
pushf
mov
daa
inc
fldenv
lret
out
mov
test
jno
fmul
std
pop
mov
add
rolb
xchg
or
lret
cmp
cld
testl
mov
sbb
lret
push
mov
lret
mov
int
out
outsl
and
jmp
lret
push
and
mov
push
cs
mov
jmp
fwait
aas
enter
aad
cmp
mov
test
mov
cmp
shlb
int3
mov
or
repnz
cmp
lock
jl
xor
movsl
pop
lret
push
add
mov
push
mov
mov
movsl
adc
and
jae
mov
and
dec
mov
sbb
jb,pn
mov
shll
xchg
adc
fistps
lret
sub
pop
add
lret
adc
xchg
sub
cmp
mov
stc
mov
mov
movsb
jno
cmc
and
lret
mov
mov
sub
xor
icebp
inc
mov
xchg
mov
lret
lret
stos
adc
outsl
pop
jbe
nop
xor
lret
jg
cmp
sbb
xchg
mov
push
lcall
xchg
int3
ret
ficoms
mov
fwait
lret
fdivl
stos
mov
inc
loope
cmp
lret
aaa
xchg
fldcw
xor
xchg
lcall
push
rcl
lods
push
pop
cmp
popa
and
jecxz
pop
mov
aaa
push
movsb
clc
scas
push
push
bswap
ja
push
sub
pop
mov
pop
loope
int3
or
dec
lret
push
xor
sbb
lret
sub
fildll
hlt
cmp
add
xor
dec
test
ret
scas
jl
push
loope
test
xchg
insl
mov
hlt
pop
rcrb
mov
daa
lret
int
inc
ret
xor
lret
mov
enter
lret
cmp
je
xor
ja
lea
adc
cmpsb
xchg
insb
f2xm1
cmpsl
dec
bound
jae
push
add
push
sub
call
or
rcr
pusha
jae
dec
into
inc
lret
filds
mov
std
jns
lret
mov
ds
inc
mov
fs
adc
or
mov
jmp
mov
icebp
or
jp
fdivr
add
cmp
xchg
lods
stc
pop
leave
iret
mov
push
adc
mov
loop
inc
pop
mov
hlt
sbb
cwtl
lret
adc
pop
into
sbb
xchg
xor
lds
xor
ljmp
stos
aam
xor
bound
test
mov
inc
sahf
dec
inc
dec
jo
fsubs
stos
sub
loopne
mov
mov
lret
lret
in
xchg
xchg
jno
movsb
pop
cmc
mov
mov
adc
and
cmp
pushf
icebp
xchg
ljmp
ljmp
sub
testl
dec
inc
sub
push
push
dec
xchg
xor
sbb
pop
data16
lahf
inc
lret
mov
cmpsb
sbb
and
into
arpl
imul
leave
lret
imul
xor
xor
cmp
rcrl
lret
push
sub
sahf
xchg
add
pusha
fdivs
lret
cmpsl
push
lret
jle
ret
adc
push
test
sbb
loope
stc
sti
icebp
ret
fiaddl
out
mov
mov
inc
sbb
lret
xchg
xor
push
fcmovb
rcl
fldl
aaa
lret
test
mov
push
sbb
push
shll
ror
or
cmp
push
xor
loopne
add
push
fnstcw
xchg
dec
rorb
loope
pop
lret
inc
push
stos
imul
movsb
push
mov
adc
sbb
cmp
xchg
mov
add
movsb
lcall
push
push
cmp
insb
xchg
sub
push
shll
or
lret
and
mov
mov
lea
jle
in
xlat
scas
add
adc
mov
lret
jmp
cmpsl
les
jbe
add
shl
addr16
aas
fwait
cmc
fcomi
push
sbb
out
lret
fisubrs
push
mov
lret
jmp
cmpsl
sub
adc
cmp
dec
xlat
lods
adc
xchg
lret
sub
outsb
lret
aas
int3
lds
adc
push
js
pop
orl
xchg
push
xchg
mov
sarb
das
ret
mov
jge
fisubs
or
imul
idiv
outsl
out
popa
lret
test
xchg
adc
sbb
into
roll
mov
jmp
jns
orb
adc
adc
cmpsb
mov
cli
jp
es
xchg
outsb
movsb
fldz
lret
mov
xor
repz
and
pop
dec
fcoml
pop
mov
in
andl
lret
jbe
mov
xchg
outsb
mov
aaa
push
lret
stc
ret
add
pop
shll
pop
xorl
lret
cmp
sahf
mov
lret
lret
test
jno
mov
lret
pop
sbb
push
addr16
inc
rorb
or
mov
ljmp
movsl
inc
cmc
daa
lret
jbe
mov
add
dec
push
pop
sub
sbb
cs
popl
fisttpll
es
icebp
pop
push
sub
lret
imul
repz
mov
fs
clc
jnp
sbb
lock
xor
js
arpl
or
lret
test
or
inc
pusha
loope
xchg
sub
sbb
int3
lret
inc
cmp
or
shll
xor
and
adc
popa
lret
adc
inc
fs
push
sbb
add
add
ja
lret
dec
dec
bound
and
jg
loope
cli
stos
lods
sbb
sbb
pushf
lret
icebp
mov
dec
lods
jno
lret
sub
lret
popf
cmpsb
mov
and
cmp
shrb
cmp
ret
cltd
arpl
jl
push
sub
push
pop
inc
push
mov
mov
sti
jp
rcl
adc
mov
add
jne
lret
mov
cmp
mov
mov
mov
sti
sbb
mov
daa
flds
cmp
subb
out
addr16
lock
add
or
clc
inc
lret
pop
sub
dec
sbb
adc
mov
loope
lret
pop
ss
jb
inc
pop
fprem
js
ljmp
sar
insl
fcmove
out
fisubrs
mov
sti
add
fcoms
cmp
inc
push
rcl
pushl
lret
call
add
les
adc
mov
popf
cmc
sub
pop
sbb
es
lret
out
aaa
fiadds
sbb
xrelease
in
mov
xor
cwtl
repnz
stos
cmp
push
jbe
loop
outsb
mov
or
test
outsl
movsb
rorb
jp
mov
repz
dec
cmp
xchg
push
and
mov
push
dec
push
xor
lret
jle
loop
lret
mov
out
int
ja
fwait
es
notl
imul
test
add
icebp
cmp
into
divb
dec
clc
mov
lret
call
insl
popa
push
shlb
dec
ror
fs
mov
lret
repz
mov
sti
mov
stc
pop
push
loop
in
mov
out
loopne
fnstenv
pshufw
fisubrl
add
fsubs
mov
lods
fdivs
pop
jns
push
lret
ljmp
cltd
cli
jp
shr
sbb
shrl
push
negl
lret
cmpsb
ficoms
out
or
sbb
mov
pop
scas
into
dec
arpl
lret
mov
lret
fisubs
repz
dec
js
cli
mov
rolb
stos
lret
xor
int
inc
mov
loopne
fsts
icebp
scas
adc
jbe
push
das
mov
sahf
inc
repnz
pop
lock
mov
and
push
std
push
hlt
cld
mov
mov
out
jl
test
shlb
daa
cmp
stc
cli
orb
push
inc
mov
pop
mov
cmp
dec
lret
push
jno
lods
mov
push
fdivl
rorl
out
js
mov
lret
jge
cmpsl
leave
push
jo
lea
scas
dec
mov
faddl
dec
lock
lret
xor
shll
mov
xor
xlat
in
insb
cmp
xchg
mov
out
mov
and
add
ret
lret
jge
das
faddl
in
mov
jle
adc
les
lret
and
outsl
sub
push
mov
cmp
xlat
ficoms
sub
push
pop
lea
add
inc
cmp
bound
lret
inc
cmp
mov
repnz
push
cwtl
adc
xchg
jnp
fnstenv
xchg
ds
arpl
shrl
add
and
aaa
mov
mov
or
push
inc
scas
jnp
xor
sub
and
lret
push
bound
fs
mov
fsubs
push
push
jne
jmp
pop
outsl
sarb
mov
lret
popa
xchg
ljmp
cmp
mov
push
xor
aad
fsts
fbld
adc
loope
adc
mov
push
lret
mov
inc
ljmp
into
cmc
dec
xchg
lret
ljmp
xor
xchg
out
lret
push
aaa
cmp
sub
lret
imul
into
lahf
jne
movsb
lret
dec
sbb
lret
sahf
sbbl
je
inc
rcll
sub
lret
mov
xor
lret
pop
and
lret
and
xor
stos
aam
mov
scas
insb
arpl
imull
push
lods
push
cmp
pushf
cltd
jnp
mov
je
push
mov
dec
ja
sub
add
or
lret
ret
mov
lret
inc
rep
and
lds
test
rolb
lret
pop
aad
mov
inc
push
add
into
bound
inc
cs
lret
push
jecxz
ljmp
test
dec
push
fwait
stos
cmp
cli
sti
xchg
pushf
pop
ret
cmp
pop
shlb
and
arpl
dec
push
mov
lret
scas
push
mov
je
lret
insb
and
lods
daa
mov
push
lret
gs
push
mov
and
jno
test
test
lret
repnz
lret
jge
aas
sub
imul
push
mov
push
sbb
jl
jge
inc
int3
in
das
mov
aas
lock
push
into
adc
push
adc
mov
call
lret
data16
or
popf
jo
shlb
jp
shrb
loopne
cltd
jle
icebp
lret
mov
into
lret
xor
cmp
fdivrs
test
lret
xor
add
mov
cmp
out
pop
cmc
and
cmp
sbb
arpl
sarl
xchg
pop
jne
je
xchg
pop
sbb
ljmp
pop
pop
mov
mov
fstps
rorb
pop
lret
xor
lret
movsl
xchg
xor
test
lret
shlb
lret
mov
cs
lcall
mov
cmp
cmpsb
or
loopne
mov
cwtl
xchg
bound
lods
mov
and
and
cmp
jno
mov
xor
pop
pop
das
add
lods
cli
paddq
flds
ror
xchg
jl
and
jbe
lret
repnz
loopne
ljmp
clc
lock
xchg
cmpsl
pop
stos
mov
sbb
adc
ljmp
into
lret
mov
loope
mov
imul
in
pop
lret
shlb
xor
lret
adc
cli
pop
sbb
rclb
aas
aad
dec
pop
jecxz
insl
jmp
mov
and
xor
fwait
sbb
push
or
incl
cld
lret
test
cmp
loopne
lret
scas
ret
jmp
in
add
in
mov
lret
inc
cltd
movsl
addr16
pop
mov
push
cmp
jmp
ret
es
dec
mov
stos
cmp
push
enter
inc
pop
fcmovbe
lret
hlt
aas
or
cli
aam
iret
jmp
popa
xor
add
cmp
mov
xor
movsl
insl
lret
ret
fxch
aaa
hlt
sbb
bound
sbb
repnz
mulb
xchg
mov
xchg
outsb
cld
dec
sbb
repnz
mov
out
ds
in
jp
mov
aas
jl
sub
sub
test
xchg
in
or
cmp
and
or
ljmp
cmp
jp
mov
inc
jge
cmpsb
test
adc
mov
movsl
add
lret
cmpsb
fs
imul
fsubs
movsl
lret
sub
xchg
cltd
cmp
jbe
loopne
andnps
fiadds
cld
xchg
jno
ljmp
rcrl
in
adc
cmp
cmp
add
movsl
add
lret
adc
lret
jno
dec
popf
ss
cmp
and
jge
hlt
pop
incl
test
mov
sti
mov
lret
xor
insb
test
int3
repnz
int
dec
rcrb
scas
aad
cmpsb
mov
outsl
add
es
lods
push
jmp
xor
push
mov
int3
lret
xor
repnz
jnp
mov
mov
lret
test
insb
inc
push
stc
adc
lret
mov
sbb
jnp
loope
movsb
sbbb
pushaw
jae
fldenv
imul
jne
fucom
lret
jb
cmp
loop
repz
mov
adcb
jl
jmp
push
lret
ljmp
movsl
mov
xchg
lock
js
mov
mov
mov
test
xor
pop
rcll
and
out
sub
push
push
jns
das
aam
adcb
adc
mov
leave
fdivs
inc
jg
push
xchg
mov
cwtl
leave
push
std
sub
and
lds
nop
push
loop
fst
outsb
std
mov
sub
lret
fabs
in
jl
lret
lahf
ljmp
mov
test
outsb
mov
lods
lret
cs
sarb
inc
jnp
or
and
fmul
cmp
jne
adc
fwait
sub
sub
jecxz
pop
sub
fsubrs
adc
add
xchg
xor
stos
fwait
dec
ficompl
push
in
pop
fwait
dec
lods
bound
lret
cmpsb
cld
fimull
fidivrl
xchg
adc
mov
icebp
movsl
int
int3
mov
xor
rcll
adc
inc
lret
je
adcl
mov
add
loopne
mov
cmp
push
cmp
jecxz
xor
xor
cli
andl
push
mov
sbb
popf
push
dec
incl
sbb
fcomps
stos
xchg
out
jge
shlb
lret
xchg
mov
sbb
push
lret
cmpsl
and
jp
cli
aam
imul
mov
dec
inc
into
fcoml
popa
sub
add
xchg
lret
jmp
jp
push
sbb
out
pmaddwd
hlt
stos
lret
mov
insl
cli
push
adcl
movsb
sti
jle
in
mov
mov
dec
and
pop
xor
mov
mov
add
in
or
xor
stos
jbe
outsb
or
xor
lret
dec
cvtps2pi
lods
dec
adc
notl
lock
lret
push
test
lret
sub
lret
jns
xlat
pop
sbb
add
pop
add
dec
and
leave
lret
mov
arpl
or
sub
mov
cltd
jp
insl
sub
add
adc
sub
clc
sub
fisubl
push
pushf
jne
push
xor
pop
fmul
fcmove
cmpsb
mov
sbb
lock
mov
lret
cwtl
pop
push
cltd
lods
lret
jl
xchg
call
fcmove
scas
hlt
dec
mov
popl
lret
cmovbe
fs
loope
mov
pop
mov
lahf
loop
jl
mov
loopne
or
cli
push
test
jns
push
std
xchg
into
out
pushf
mov
mov
push
lock
pop
pop
lret
xchg
sbb
ss
int
pop
pop
repz
lret
nop
or
and
sbb
sub
pop
sbb
fidivs
or
xchg
into
inc
dec
bound
cmp
movsl
cli
mov
lret
mov
add
lret
loopne
mov
jae
inc
push
int
push
xor
daa
lret
cmpsb
into
dec
popf
in
mov
cmp
cmp
lea
pop
jno
lret
add
test
dec
dec
cli
adc
pop
jmp
cs
cmp
into
push
mov
sbb
xor
cmp
shl
das
jl
mov
mov
loopne
and
jns
call
lret
pop
dec
mov
jmp
nop
push
stos
sti
fdivr
daa
loop
push
mov
mov
ja
test
xchg
fucomi
fstl
add
cwtl
jbe
add
xchg
fcmovne
pop
mov
xor
and
lret
nop
in
addr16
jns
mov
sub
inc
cwtl
push
xor
mov
arpl
aaa
lret
pop
hlt
sarb
stos
insb
lods
out
xchg
jnp
xchg
and
mov
sub
mov
lock
mov
lcall
adcb
imul
xchg
ror
movsb
jae
lret
sbb
enter
cmpsl
int
pop
push
lcall
mov
lret
fwait
mov
push
and
into
int3
push
xor
movsl
jo
adc
and
mov
dec
and
mov
sar
mov
out
cmpsb
lret
int3
mov
mov
inc
push
mov
pop
mov
mov
call
aad
nop
mov
repnz
jb
adc
sti
arpl
daa
inc
in
bound
push
mov
sub
pop
mov
mov
xchg
cmp
std
pop
sub
push
cmpsb
iret
dec
dec
idivl
dec
jp
ficoms
jb
sbb
icebp
ret
lret
shrl
and
lock
push
ret
push
xor
pop
test
mov
repnz
es
scas
rclb
aam
lret
call
cmc
lret
pop
jg
hlt
pusha
mov
movsl
sar
pushf
sti
out
call
jae
adc
lret
insl
jb
xor
jle
fsubs
inc
das
mov
xchg
outsb
mov
int
mov
lret
rolb
jae
lret
mov
aad
jp
lret
sbb
ret
push
jo
icebp
inc
or
lret
mov
insb
es
or
dec
inc
pop
lods
cwtl
mov
xor
in
mov
lret
fstpt
int
sub
fs
dec
push
cltd
push
mov
mov
loope
push
call
imul
popf
lds
pop
sbb
mov
xchg
sub
jnp
cmp
in
lret
cs
mov
inc
mov
xor
leave
pop
subb
int
sbb
adc
ljmp
sub
cld
sub
insl
xor
lret
cs
xchg
loope
and
xchg
inc
out
cmp
mov
lret
test
js
cmpsl
jge
outsb
shl
fistpl
shlb
test
iret
push
stos
adc
loope
add
aam
inc
pop
push
lret
jl
clc
inc
mov
lret
push
sarl
cmp
std
sbb
mov
arpl
push
rcr
lcall
add
movsl
aam
lret
mov
xor
jae
sub
arpl
lret
fidivrs
mov
movsl
scas
in
push
push
add
sbb
sbb
pusha
fmulp
mov
and
cli
lret
es
xchg
and
pop
fiaddl
loop
xchg
adc
iret
xlat
aad
lret
and
add
orl
lret
popf
dec
pop
lods
sub
orl
jo
test
sarb
push
or
jae
mov
xchg
dec
cmp
arpl
push
cmp
pop
shll
outsb
cmp
push
cmpsb
repnz
jmp
pop
lret
inc
mov
outsl
sbb
pop
xchg
das
pop
jo
insl
cmp
imul
outsb
mov
lret
mov
aam
sub
lret
shrl
sub
pop
lret
sub
mov
cmp
mov
lret
lret
scas
in
add
stc
lea
xchg
lret
sahf
push
push
mov
xchg
lret
ret
pop
xor
push
movsl
popa
push
lret
mov
xor
cwtl
add
fidivl
pop
roll
jbe
outsb
mov
lret
aas
pop
mov
lret
popf
inc
out
insb
inc
stos
rcl
add
push
push
dec
int
lcall
lret
test
cld
xchg
mov
scas
out
add
fwait
inc
push
jno
fidivrs
dec
leave
lret
fiaddl
push
adc
loope
cli
filds
mov
ss
jg
push
lret
mov
sbb
imul
adc
pop
mov
cli
or
sub
cmp
fimull
cmp
mov
push
cltd
xchg
jnp
fmul
subl
pop
xchg
and
sbb
shl
pop
mov
dec
ss
xchg
lret
aam
mov
cwtl
adc
jge
addr16
std
out
mov
enter
push
ficoml
sub
pop
add
lret
inc
stc
jle
ds
jb
adc
loope
sbb
jecxz
adc
cmp
dec
cmpsl
shlb
movsb
lret
pop
xor
lret
sub
lret
insb
sbb
sub
in
mov
add
sub
adc
push
mov
std
je
lret
push
lods
mov
ja
lret
xor
pop
das
loope
mov
cmp
rcll
mov
rcl
fldpi
inc
leave
push
pusha
and
jb
ljmp
lock
int3
ficoml
jne
gs
pop
push
pop
and
pop
pop
sahf
xchg
pusha
sbb
test
or
mov
jmp
dec
lret
sub
lret
and
loope
push
push
mov
int3
repnz
cli
lret
sbb
sub
rolb
es
clc
in
or
lea
inc
sbbl
divl
nop
stc
inc
gs
cli
arpl
push
jno
push
sti
and
mov
outsb
xchg
fmul
jne
leave
xchg
pop
pop
cwtl
xor
imul
mov
in
or
mov
mov
lock
mov
setno
rcr
arpl
lret
ret
or
push
lret
loope
clc
outsb
and
lret
shl
stos
mov
test
mov
xchg
or
cmpsb
inc
pop
shlb
cvttps2pi
lret
in
jmp
dec
inc
lret
mov
test
in
xchg
dec
or
in
inc
test
ljmp
iret
lods
lock
test
add
dec
mov
mov
movsl
mov
lods
call
mov
lret
mov
jo
xchg
jge
leave
dec
push
mov
test
out
push
push
cwtl
bound
fimull
xor
xchg
clc
pop
push
cltd
xchg
mov
xchg
stos
sbb
cmp
mov
add
xor
jbe
jg
loope
fiaddl
cltd
pop
mov
xchg
or
dec
std
mov
xchg
pop
jg
lret
out
call
push
sahf
xor
sub
ljmp
mov
std
add
sar
jg
sub
cmp
lret
lock
ds
pop
xor
mov
dec
xchg
out
iret
inc
mov
cmpsb
shr
addr16
push
lcall
cli
push
xor
adc
or
ret
jmp
pushf
jge
ss
test
adc
lret
mov
jle
cmp
and
cli
dec
ds
mov
rcrl
mov
pop
insl
lods
rolb
ja
lret
add
fcompl
mov
stos
and
mov
movsl
or
fisubs
aaa
lea
out
lret
popf
mov
out
lret
pop
movd
aam
pop
add
lret
call
lret
mov
lods
dec
daa
inc
lea
movsl
jne
shlb
pop
sbb
adc
test
add
aam
enter
lret
fwait
inc
ret
repnz
adc
sbb
subb
stos
jge
xlat
xchg
push
xor
mov
xorl
lock
push
and
dec
es
fstl
lret
dec
and
pop
pushf
jmp
dec
cli
jle
mov
scas
cmp
pop
mov
bound
sahf
iret
loope
lret
out
xchg
lods
jno
adc
sbb
add
lret
jns
jp
mov
jns
lret
add
lret
rdmsr
or
add
cmp
fcmove
inc
cmc
pop
or
fmuls
lret
leave
push
or
sbb
mov
stos
testb
out
ljmp
daa
lret
inc
adc
sub
outsl
lret
mov
sbb
mov
fnstcw
mov
ficoms
daa
stos
mov
sarb
sahf
cmp
lret
adc
mov
lret
outsl
inc
jnp
in
lret
or
fiaddl
ds
into
push
dec
rcll
dec
mov
lret
cs
inc
stos
stc
lret
mov
rorl
daa
subb
mov
std
inc
fisubrl
imul
in
jl
sub
dec
shl
out
pop
lahf
lret
push
jmp
mov
add
ror
cmp
mov
mov
jne
push
fistl
shlb
sbb
pushf
mov
mov
arpl
inc
mov
cmp
dec
hlt
dec
int3
inc
cltd
enter
lret
adc
out
sarb
ficompl
std
xlat
adc
jnp
mov
icebp
xor
cwtl
aad
bound
das
and
adc
sub
sub
fmull
bound
imul
lret
sub
ja
add
xlat
mov
mov
rcrl
pop
dec
stc
mov
into
std
push
xchg
lret
and
mov
sub
sub
sahf
scas
mov
ficompl
ja
pushf
xchg
std
cmp
xchg
jb
test
dec
cmp
cmpsb
push
mov
xchg
xor
xor
mov
push
lret
bnd
sub
jns
cld
xchg
cmp
lcall
in
stos
sub
fcmovnb
and
lret
jns
repz
lret
add
inc
xchg
lret
arpl
push
call
jg
jno
test
popf
int
or
sub
dec
sbb
sbb
test
pop
pop
lret
mov
repnz
push
lret
rcrl
icebp
ljmp
sbb
cltd
bound
lret
test
mov
xchg
ror
mov
jge
bswap
push
xor
ljmp
mov
mov
aaa
mov
pushf
push
push
testl
outsb
and
clc
jle
enter
pop
lret
xor
in
mov
xor
test
lods
and
adc
lret
movsl
lods
inc
ss
lea
lret
in
push
mov
cli
lret
and
sbb
sahf
fldenv
jl
mov
xchg
ror
cmc
inc
or
lret
sub
xchg
jo
push
jge
enter
jle
fdiv
or
lret
jno
add
mov
je
iret
mov
inc
fimuls
dec
stos
adc
mov
mov
icebp
lcall
push
int
popf
outsb
push
loop
roll
jb
push
dec
clc
lret
aad
pop
or
cli
lret
pop
xchg
pop
out
lret
cmp
mov
lret
xchg
aam
shlb
pop
into
push
push
fwait
dec
mov
movb
jbe
xchg
jnp
push
stos
aad
fs
mov
pop
xlat
sub
lret
xchg
xchg
jnp
mov
nop
repnz
ljmp
ss
mov
xor
pop
lods
jae
scas
adc
lret
mov
xchg
repnz
ret
jle
xchg
lret
xchg
cs
shrb
jae
pushf
lret
out
daa
lds
mov
jg
push
lret
inc
push
sbb
lods
lret
daa
dec
lret
nop
pop
gs
lret
aad
cmp
lock
cli
mov
dec
jbe
mov
lret
pop
dec
hlt
in
icebp
pop
fidivrl
dec
inc
imul
stc
sbb
lret
mov
dec
sub
in
lret
frstor
xchg
adc
xor
cs
mov
icebp
dec
push
arpl
ja
iret
mov
push
and
nop/reserved
jmp
fnstcw
lret
hlt
je
push
jle
les
push
cli
sub
jb
add
push
mov
xchg
icebp
mov
sarb
int3
or
test
rcrb
mov
loope
sub
repz
push
sbb
js
cmp
and
jp
add
or
lret
stos
rorb
iret
sahf
fidivrl
push
out
pop
mov
je
aas
xor
add
adc
jbe
xchg
sub
pop
fidivl
mov
jne
adc
stos
adc
rcl
push
push
mov
add
insb
in
mov
lret
js
scas
outsl
jmp
lret
sub
ja
mov
adc
pop
mov
xchg
dec
mov
xor
xchg
and
call
loope
sbb
xlat
dec
pop
out
sub
push
jle
adc
leave
lret
in
clc
imul
imul
dec
lret
ja
cmp
fadds
mov
icebp
mov
rclb
rclb
push
lret
sub
lret
mov
xor
cmp
int
icebp
lret
aam
lret
scas
inc
ss
push
lret
insb
pushf
pop
loope
cmp
inc
negl
pusha
lret
xchg
xchg
add
sti
cwtl
sbb
call
loop
lret
cmp
lret
fwait
je
dec
lds
xchg
mov
adc
call
cs
pop
dec
ds
xor
insl
sub
xchg
ja
test
xor
sub
insl
xchg
mov
cmp
pop
mov
xor
pop
mov
add
ds
imul
push
sarl
add
pop
fisttps
push
bound
lret
jo
das
cmp
inc
dec
sbb
lret
jns
jmp
push
rclb
dec
mov
mov
mov
insb
and
add
idiv
scas
rol
inc
and
or
pop
dec
cmpsl
movsb
cmp
inc
push
mov
loopne
mov
int
test
xchg
daa
xor
add
lret
and
or
cwtl
cltd
cmc
dec
mov
push
cmp
nop
call
rolb
or
push
dec
xchg
cld
lret
push
arpl
mov
mov
cmp
jge
and
mov
sub
dec
sub
mov
cs
lret
inc
mov
stc
mov
rcl
shlb
mov
pop
push
scas
cli
add
or
ds
push
int
pop
lret
je
cld
std
pushf
inc
lret
test
loop
add
xchg
mov
sub
mov
cmp
cld
jge
fldenv
mov
dec
das
ror
ficomps
mov
stos
lret
jg,pt
push
out
mov
data16
add
movsb
cli
flds
inc
loope
inc
adc
ja
cli
scas
jp
add
aaa
add
xchg
lret
adc
pop
dec
shlb
jne
bnd
add
mov
or
ljmp
sarl
mov
jecxz
into
ljmp
je
push
lret
pop
or
in
push
cs
dec
movsl
mov
ds
push
pop
cld
add
inc
mov
rorl
lret
dec
push
movsb
adc
int3
inc
fs
jmp
repnz
gs
push
icebp
push
mov
add
cmpsl
sub
cs
into
stos
cld
push
sti
push
fcoms
jle
sub
sub
mov
outsl
push
out
test
push
add
xor
or
mov
movsb
cmp
dec
push
in
push
fiadds
xchg
cwtl
fwait
shl
fcmovne
xor
scas
cmp
data16
xlat
cmp
in
lret
outsb
outsl
xchg
push
test
cmp
movsb
out
lret
and
lret
or
repz
cmp
and
pop
mov
jbe
lret
icebp
add
adc
lret
xchg
mov
mov
or
lret
out
push
lret
movsb
sub
fs
clc
ljmp
leave
inc
lret
sti
fs
pop
ja
xor
or
mov
lret
rcr
and
lock
jp
jae
cmpsb
pop
lret
or
inc
jmp
inc
cmp
addr16
mov
mov
push
mov
imul
and
and
mov
outsl
mov
aas
je
into
jge
popf
mov
add
cmpl
or
pop
lret
lret
mov
lret
lahf
and
sahf
int3
subl
dec
or
xchg
arpl
popa
ja
je
jecxz
cltd
xchg
cli
aam
push
movsb
lret
dec
sahf
lahf
call
cmpsb
mov
mov
ror
div
stos
xor
cmp
xor
decb
mov
lret
cmp
sarl
or
lret
inc
roll
rcrb
lret
inc
cmp
inc
or
xor
push
jno
lret
adc
or
fpatan
or
in
shl
ja
dec
mov
test
cmp
or
adc
aam
icebp
push
mov
fimull
inc
insb
adc
or
test
push
shrb
sub
arpl
mov
sti
mov
jae
sub
shrb
shrl
lret
adc
bound
out
xor
cmp
into
jno
push
pop
popf
lret
in
rcl
ficomps
sbb
lret
fistps
lret
dec
stos
mulb
xor
fimull
sub
enter
jge
inc
in
add
lret
cmc
repnz
adc
popf
aaa
and
lds
ret
cld
mov
adc
imul
jp
push
stc
insl
idivl
rolb
in
ss
stos
cli
lcall
inc
es
mov
pop
jg
daa
aam
push
pushf
push
nop
in
push
fstpl
xchg
stc
lret
sahf
jecxz
sarl
inc
adc
xchg
xor
in
mov
negl
push
shll
xchg
nop
lret
clc
imul
cmp
push
ljmp
pusha
mov
and
cltd
insb
xlat
call
jne
rol
es
int
lret
inc
jns
pop
pop
push
andl
push
mov
roll
call
fucomi
push
data16
dec
leave
xorl
pop
jne
cli
clc
adc
jmp
lret
cmpsb
xor
xchg
ljmp
jp
dec
lret
aas
gs
js
fmuls
jae
push
jb
je
ja
xor
push
fmulp
and
lods
mov
mov
rorb
sti
or
cmp
adc
aad
aaa
jecxz
pop
lret
xchg
sahf
insl
outsb
test
out
rclb
loope
imul
movsl
in
cli
sbb
loopne
push
sub
add
mov
push
into
or
push
lds
shrl
shll
mov
jb
xchg
fwait
shl
xchg
xchg
into
lahf
inc
or
sub
es
out
cli
fsubl
into
xor
fistpll
fdivs
pop
jmp
cwtl
stos
jo
jp
mov
test
lret
pop
sahf
ss
cmpsb
es
jg
subb
jnp
js
sahf
hlt
lret
arpl
push
xchg
lret
jecxz
stos
shll
lret
add
fimull
ret
push
pop
leave
fxch
iret
fisttpl
inc
cld
lret
or
lret
cmp
cmp
adc
test
mov
sub
xchg
xor
test
push
add
xchg
push
lret
addr16
sub
xchg
out
loop
call
dec
lret
fmull
mov
filds
dec
mov
inc
and
int3
lret
push
mov
sub
pop
cld
jle
std
fmul
add
cmp
or
test
cltd
ror
sbb
ljmp
and
push
or
aas
and
lret
dec
popa
pop
rorb
lcall
cmp
jmp
call
leave
inc
xchg
arpl
pop
aam
add
cltd
data16
pop
mov
push
add
scas
push
repnz
lret
pop
idivb
cmp
xchg
scas
lret
out
push
mov
jns
inc
cltd
pop
dec
dec
sub
mov
mov
orb
xchg
xor
sbb
mov
sbb
int3
fsubrs
jbe
or
adc
out
gs
xor
ja
fptan
lret
fstps
hlt
in
cwtl
daa
lret
test
and
stos
and
adc
sub
outsb
ja
lret
ds
popa
xlat
mov
lret
cmpsl
repz
lret
aaa
jns
mov
out
ret
in
test
sub
sbbb
mov
lret
mov
mov
stos
inc
jne
lret
sub
push
lret
and
mov
enter
and
sbb
pop
or
inc
mov
not
les
imul
push
lret
or
sbb
lret
adc
mov
adc
cmp
mov
pop
cwtl
lret
jb
adc
addr16
shl
or
mov
sbb
movsb
in
dec
adc
mov
cmp
xlat
xchg
cmp
addb
rolb
inc
shrb
lret
clc
or
outsl
jg
xor
and
cld
cwtl
push
mov
sbb
aaa
mov
shlb
push
and
loop
iret
insl
add
popf
testb
sar
int3
xor
fiaddl
push
mov
push
sub
lret
push
repz
or
fwait
pop
aad
fidivrl
lret
shlb
xchg
fdivrs
iret
pop
arpl
xchg
push
ljmp
mov
lret
pop
sub
adc
stos
ja
test
jns
call
xchg
push
cwtl
lret
push
inc
lret
fsubs
push
add
lret
in
icebp
xor
out
lret
mov
repz
in
jne
push
mov
mov
and
pop
mov
xchg
ss
icebp
lret
hlt
cltd
mov
lret
repnz
lds
outsl
mov
cmc
or
lret
dec
mov
testl
leave
movsl
arpl
lret
lods
cmp
sbb
add
jo
or
les
das
movsl
cmp
seto
pop
or
xchg
add
xlat
cmpsb
lea
addr16
sti
stos
jmp
mov
lret
dec
cld
jl
lods
lret
cmpsb
adc
gs
arpl
js
lret
es
and
cwtl
pop
fiaddl
imul
push
int
push
int3
into
popf
movsb
lret
pop
adc
shlb
lret
dec
loopne
aad
lret
lret
js
repz
sarb
nop
sbb
jecxz
scas
test
cmp
mov
out
call
in
lret
pop
or
xchg
nop
test
ret
dec
out
sbb
cmp
lret
or
lret
stos
outsb
inc
cmp
bound
mov
cmp
mov
sub
aad
mov
cli
jne
lret
lea
xchg
std
sbb
jecxz
sbb
aas
lret
pop
or
add
xor
lret
lods
dec
push
push
pop
push
mov
push
lret
cli
clc
adc
add
cmpsl
or
stos
push
lret
in
mov
clc
sub
and
dec
stos
das
lret
sbbl
inc
sub
cmpsl
add
xchg
lcall
aad
lods
xchg
cmp
int3
mov
inc
lret
stos
in
shr
lods
clc
mov
sub
imul
lret
lods
cmc
shlb
outsl
rorb
mov
cltd
rcrb
aad
std
test
xchg
fcom
cmp
push
jb
add
stos
nop
shlb
xchg
lret
pop
lret
mov
add
add
shr
jno
inc
mov
daa
lret
int
xor
ror
aaa
mov
jle
cmp
into
in
lock
cwtl
jae
int3
scas
test
add
push
mov
mov
ror
inc
xlat
xchg
int
mov
loop
lods
lret
ja
jg
stos
into
lret
push
stc
in
cmp
pop
sbb
enter
mov
mov
lret
cld
es
out
sbb
mov
rolb
dec
push
lret
mov
xor
clc
push
adc
mov
fnstenv
mov
push
jge
pop
fsubl
mov
shlb
cmc
icebp
ss
push
roll
xchg
mov
sbb
add
fstl
or
fsubrl
gs
sub
lret
jne
std
and
mov
and
mov
stos
pop
mov
ds
xchg
jge
in
lret
xchg
and
lret
rorl
cmpb
es
rclb
lods
fisubl
das
jge
mov
mov
add
pop
lret
xchg
mov
pusha
push
aas
lret
cmc
jbe
jp
ror
cmp
mov
ljmp
push
jns
fwait
push
inc
repnz
lret
and
iret
cmp
xlat
mov
je
lret
xor
or
add
sbb
mov
dec
stos
pop
popf
lods
lret
cmp
ret
mov
cmp
push
lret
xlat
cmp
scas
push
fst
dec
mov
leave
lcall
fildll
fisttpll
bound
inc
cmpsl
mov
ljmp
aaa
rcl
xchg
mov
and
lret
movsb
sub
mov
inc
test
sahf
lret
mov
mov
xchg
lret
dec
jl
shrl
push
adc
inc
shlb
js
stos
xlat
fidivl
std
in
cwtl
adc
mov
pop
xlat
or
cmpsl
push
adc
lahf
ja
sub
pop
xchg
mov
rclb
or
xor
jge
inc
sbb
mov
lods
add
pop
test
sub
fistpll
not
sub
sub
or
in
shrb
mov
jp
sub
lret
aam
cmpsb
sti
jbe
lret
dec
int
aas
dec
cmc
lret
inc
test
lock
inc
out
das
mov
cltd
lret
out
sub
pop
jno
push
or
push
lret
dec
push
inc
mov
fmul
fdivs
subb
mov
dec
in
push
lret
out
imul
mov
xchg
rclb
popa
cmp
inc
lret
cli
mov
leave
test
lret
cmp
sbb
push
je
in
sub
call
outsl
std
pop
cli
ret
cli
xchg
cmp
or
js
movsl
mov
adc
lret
or
push
pop
cmp
dec
jno
ficomps
fsubr
mov
into
cli
call
lret
inc
sbb
cmp
cmc
jne
sub
and
cltd
lret
stc
sub
fcmovb
mov
enter
jecxz
popa
pop
dec
repz
aam
xor
and
pop
xlat
pop
inc
imul
push
lret
outsb
push
movsl
mov
dec
popf
ss
cmpsb
lret
sub
jne
je
scas
lock
cwtl
sbb
shl
in
and
push
ljmp
lret
inc
idivl
push
out
sti
cmc
inc
pop
lret
push
mov
rcrl
imul
jns
push
sbb
rolb
push
movsl
scas
std
jne
or
mov
jle
pop
push
stos
ljmp
and
dec
mov
lret
cmp
ret
push
push
inc
ljmp
lret
test
into
sti
dec
lea
lret
xchg
mov
cmp
pop
lret
jge
and
sub
ficoml
cmpl
out
mov
and
das
adc
or
push
jnp
aas
mov
push
and
sbb
pop
aam
jle
sbb
pop
subl
lret
addr16
dec
fisubl
adc
lret
mov
and
jne
pop
jns
fistps
or
lock
lret
xchg
pop
cltd
mov
roll
jle
mov
leave
loope
xor
js
sti
ljmp
rcl
iret
gs
pop
push
inc
iret
cmp
xorb
outsb
cmp
rol
jp
mov
in
push
pusha
cmp
inc
push
xlat
lcall
and
inc
movsl
add
bound
and
pop
test
jb
sarb
mov
mov
sub
mov
in
dec
int
pop
repnz
mov
xor
mov
dec
bound
push
sti
dec
sbb
fnstsw
js
sbb
daa
ja
arpl
lret
inc
xor
push
test
loope
test
lret
sub
adc
data16
roll
dec
lret
int
std
pop
icebp
hlt
rcl
mov
add
lret
les
lret
psubsb
iret
dec
pop
cmp
lret
adc
lret
mov
sti
lods
ret
xor
shlb
jb
lret
and
xchg
sbb
push
lret
sub
xchg
cmp
je
mov
push
fcmove
int
stos
add
fcmovne
jl
lret
addl
lret
cmp
and
sub
mov
call
dec
fwait
jl
xlat
cmp
fwait
dec
mov
gs
sub
dec
jns
lahf
roll
arpl
dec
fwait
sbb
mov
adc
ljmp
rolb
popa
in
lret
xor
shll
loope
mov
daa
aam
add
fdivl
sarb
adc
xchg
insl
mov
test
jo
mov
out
cld
cli
js
rol
pushf
jp
mov
and
rorb
xchg
stos
arpl
fcmovnu
mov
mov
lret
fldcw
pop
push
int3
mov
rcl
xor
dec
fiaddl
inc
or
sub
shl
push
sbb
aaa
enter
faddl
lret
jne
mov
pop
fiaddl
int3
inc
int3
stc
imul
cltd
jge
adc
or
lret
sbb
cmpsb
sbb
leave
stos
or
lahf
clc
sbb
mov
cmp
vdivss
pusha
in
dec
add
lret
gs
in
int
pop
xor
cli
lock
in
sbb
adc
add
sbb
inc
lret
jle
pusha
aam
push
xor
lret
pop
iret
cmp
lret
xlat
jecxz
xchg
jmp
lret
lcall
aam
cmpsb
jg
cltd
and
add
dec
xor
lret
in
fs
nop
mov
das
ret
jnp
fdivrl
or
jl
sahf
test
out
jecxz
mov
fcomps
leave
mov
dec
add
jge
pop
fsubl
pop
push
lret
arpl
inc
icebp
bound
jne
add
cmpsl
xchg
fwait
push
sbb
push
sub
or
mov
and
jnp
mov
sub
test
lret
enter
dec
xchg
lret
xor
inc
dec
shrl
add
add
pop
and
lahf
aas
xchg
lret
push
xor
jge
sub
and
push
adc
dec
mov
aad
in
outsb
lret
jle
lock
jns
ficompl
mov
pop
ss
push
incb
xchg
ret
lret
cmpsl
cmp
fidivrl
out
sbb
pop
popf
pop
pop
jmp
inc
imul
fdivr
push
pop
psubd
and
jl
repnz
mov
or
loop
lods
push
xchg
lret
stos
hlt
mov
pop
cmpsb
push
ror
xor
dec
xchg
fidivl
pop
mov
fadd
lret
xor
jmp
mov
lret
pop
jae
xor
xor
shl
out
xchg
lret
arpl
js
std
mov
lret
jmp
push
cld
add
lret
xchg
and
push
jg
jns
lret
push
lahf
and
movsb
lret
call
daa
lret
popf
lcall
mov
push
lret
sub
jp
sbb
daa
cmp
out
xor
lret
fsubrs
stos
dec
repnz
out
sub
hlt
xchg
push
lret
mov
movsl
xchg
jle
stc
sub
repz
dec
les
dec
cli
insl
data16
pop
push
cmpsl
insb
sub
fidivrl
jl
outsl
aad
push
xchg
pop
roll
loope
cmp
cmp
xlat
int3
sub
jns
cli
xor
leave
mov
mov
stos
sti
arpl
lods
popf
xchg
mov
rcrb
shll
insb
stos
mov
enter
ja
icebp
or
mov
outsl
mov
lret
out
add
jo
xchg
in
lret
xor
movsl
fimuls
lret
dec
inc
inc
mov
inc
loop
and
hlt
cmpl
sbb
mov
test
in
lods
sti
lret
pop
mov
pop
xchg
lahf
lret
cmpsb
jnp
stos
mov
sbb
shl
rcll
adc
add
xor
xlat
jne
stos
mov
out
shrb
ljmp
lret
adc
stos
xchg
mov
arpl
mov
addb
cld
scas
aas
ja
rcrl
mov
mov
cmp
fcoms
push
mov
lret
mov
xlat
lret
mov
mov
push
mov
adc
je
shl
and
shl
das
mov
mov
dec
jecxz
pop
jmp
mov
lods
fisttps
jno
jb
pusha
lret
cld
or
mov
negb
sub
sbb
cmpl
and
inc
add
cwtl
push
lret
mov
mov
js
in
cwtl
mov
push
out
jl
pusha
lret
pushl
mov
call
pop
repz
lret
xchg
xlat
std
add
lret
rcr
mov
nop
pop
mov
cli
dec
mov
lret
sbb
lcall
movsl
ds
movsb
lea
lret
jns
mov
cvttps2pi
iret
repnz
mov
lea
testl
inc
cmp
sub
jle
lods
fsubs
out
push
das
fwait
iret
loope
pushf
clc
sub
inc
subl
loope
pop
xor
mov
mov
cs
and
loopne
fxch
lock
jge
xchg
outsl
cmp
fidivl
jno
xchg
sti
jb
mov
mov
adc
lret
test
sbb
xlat
lret
sub
add
lret
dec
filds
sti
pushf
adc
out
ret
xor
lea
sbb
mov
negb
lret
sub
out
cmc
cli
adc
lret
mov
mov
andl
bound
inc
cmp
push
sbb
cmp
cmpsl
lret
or
fwait
or
out
shlb
xchg
add
lret
fdivl
fwait
push
popf
int
xchg
mul
jge
dec
dec
mov
mov
aam
jnp
lret
mov
in
insl
out
lret
bound
movsb
inc
dec
xchg
add
rcr
xchg
ljmp
cmp
mov
add
xchg
lret
les
ja
add
fstps
pushf
andb
mov
push
mov
mov
movsl
mov
and
xor
dec
mov
fnstcw
xchg
scas
dec
std
lea
pop
sbb
icebp
or
shll
push
adc
lds
lret
push
repz
lret
jb
fisubrl
xorb
stc
mov
into
test
scas
nop
jnp
xchg
pop
in
mov
adc
fmull
mov
leave
lret
adc
lret
sbb
in
lret
dec
aam
inc
jmp
cld
xchg
out
adc
adc
roll
mov
mov
cmpb
xor
rol
pop
mov
sar
ss
aaa
mov
dec
sub
jge
lret
adc
or
data16
lret
test
lret
addr16
ljmp
into
sbb
imul
xchg
jmp
mov
rep
enter
push
dec
sub
lret
jne
sbb
pop
lds
dec
out
scas
xchg
lret
and
mov
cs
into
push
add
repz
lods
cli
jle
std
dec
stos
fcom
jl
mov
lret
pop
outsb
jno
imul
rorl
pop
dec
jno
lret
repnz
mov
bswap
call
and
inc
es
mov
pop
clc
lock
xor
lret
xor
fcmove
movb
and
cmpsl
pop
lret
mov
mov
jp
mov
cmp
push
lret
adc
lods
outsl
pop
jp
arpl
xor
rcrb
mov
jmp
icebp
or
negb
cmpsl
pop
push
leave
and
or
andb
xchg
sbb
insl
loop
lret
mov
ljmp
into
xchg
mov
lret
push
pusha
das
popl
mov
push
dec
int
pop
lret
movntps
lods
leave
cs
jnp
loope
lret
outsb
clc
insl
inc
adc
cli
loop
jp,pt
sub
aam
js
xchg
cmp
icebp
pop
std
addl
xor
aad
pusha
jno
pop
sbb
popf
repnz
sub
add
lret
sbb
lahf
lret
adc
idiv
mov
cld
mov
seto
outsb
push
mov
in
loope
in
lret
testb
shll
lahf
outsl
cmpsl
xchg
lret
bound
lret
cwtl
out
jmp
add
hlt
ret
push
and
pop
lret
mov
add
cmp
cmp
lret
repnz
lret
inc
dec
daa
je
cmp
jge
stos
pop
lret
inc
xlat
xchg
sbb
loope
popa
xor
push
sub
and
imul
dec
scas
sbb
adc
jge
ljmp
sub
jle
xor
cmpsl
and
stc
sbb
out
lret
dec
sub
lret
jae
sub
insl
xchg
jnp
ds
lds
lret
xor
dec
movsb
insb
mov
mov
lcall
call
cs
pop
mov
fwait
xor
add
jecxz
pop
and
loop
jae
dec
int3
push
mov
fsubrs
and
mov
imul
stos
sub
addr16
int
sbb
stos
or
cs
pop
cmp
rorl
inc
mov
cltd
jle
sar
xlat
push
push
psrlw
lahf
and
lret
addr16
cmp
xchg
mov
cmp
lret
sub
mov
fsubrs
pop
gs
mov
and
mov
sbb
pop
pop
add
mov
test
fs
xchg
jbe
js
rclb
lret
jmp
mov
mov
fstl
lret
adc
ljmp
fadds
add
aaa
cwtl
jnp
int3
and
stos
stos
sahf
push
mov
or
leave
testb
loop
mov
aam
pop
rol
push
lret
jb
sahf
sbb
loopne
lock
pusha
mov
lret
sbb
int
outsl
lret
inc
push
adc
inc
lret
pop
imul
fcmovne
sbb
pop
xchg
xchg
rcl
pop
out
pop
loope
daa
inc
mov
aam
sbb
mov
shlb
je
jp
into
fs
jns
int
add
sbb
out
iret
push
jbe
pop
and
fucomp
gs
mov
daa
lret
jcxz
adc
popf
jmp
je
inc
push
in
lret
add
ss
call
loop
js
sub
lret
lcall
imul
mov
ss
cmp
xchg
pushf
mov
test
loop
fs
popf
sti
loopne
lret
dec
iret
jg
insb
aaa
lret
andb
push
lret
mov
xchg
sbb
js
push
jns
cmp
jle
out
mov
adc
stos
mov
fsubs
imul
adc
push
cltd
lret
pop
and
insl
jmp
fisubrl
jno
aam
stos
lret
in
popf
cmp
lret
movb
push
rcr
lret
xchg
outsl
gs
and
popf
shrb
xchg
sbb
sarb
in
in
mov
xor
lret
inc
and
movsb
int3
cmp
push
mov
lret
clc
stos
fcomps
xlat
jle
jb
and
lret
xor
mov
jnp
dec
lret
mov
es
lods
mov
mov
dec
push
rolb
stos
mov
lret
rolb
push
cmpsl
dec
lret
adc
xlat
idivl
push
outsb
push
icebp
pop
repz
popf
test
mov
cli
sub
lret
dec
sbb
mov
arpl
in
cmpl
enter
adc
jg
jnp
adc
mov
cwtl
add
fstps
push
lret
repnz
push
cmp
fidivl
or
ss
and
out
leave
scas
insb
cli
and
cwtl
lret
xor
fsubrs
mov
test
inc
test
pop
or
cld
mov
sbbl
lret
ja
push
pop
mov
push
cmp
push
mov
repnz
fs
pop
add
pop
push
hlt
dec
add
lret
inc
or
fildll
cmpsl
mov
pop
sarl
mov
xchg
gs
adc
push
push
jae
out
mov
dec
lret
push
jl
cmpsb
shrl
sub
fsubrl
inc
aad
lret
test
lret
inc
lods
or
aas
sbb
sub
lret
sub
lret
clc
lea
ljmp
pop
cmp
lret
cmpsl
jle
fadd
mov
fsubrs
test
jmp
mov
adc
or
fs
sahf
mov
xchg
fimull
jo
ss
push
inc
pop
int
fcmovu
xchg
fstpl
lcall
mov
lretw
pop
shr
scas
mov
lret
dec
jne
dec
test
or
adc
dec
scas
hlt
mov
scas
mov
lret
testl
lret
sbb
insb
leave
or
ficompl
daa
add
js
lret
pop
mov
push
sub
adc
int
ljmp
shlb
call
add
fcmove
lds
in
sbb
add
movsl
push
imul
lret
add
repz
add
lret
pop
inc
mov
xchg
push
jmp
int
sbb
out
bound
dec
cmc
lret
mov
xor
hlt
lret
pop
sahf
xor
sbb
jo
out
mov
fcoms
cmpsb
xchg
sbb
orb
pop
fiaddl
cmp
mov
arpl
push
add
mov
add
push
ret
rclb
mov
shrl
lret
jl
out
mov
lret
push
in
lret
cwtl
sti
xchg
fs
cmp
mov
call
pop
pusha
cli
fwait
outsb
popf
mov
or
mov
sbb
mov
xchg
mov
cmp
dec
push
mov
fdivrs
into
in
fcmovb
movsl
push
mov
jo
sub
lret
inc
lds
nop
lret
push
mov
mov
dec
mov
fldcw
lret
and
ja
add
xchg
sub
loop
cli
lcall
push
fldenv
adc
pop
push
sub
sbb
pop
pop
mov
sub
mov
mov
cmpsb
push
imul
repz
lret
daa
inc
dec
xlat
dec
insb
xchg
inc
or
sbb
das
test
inc
popa
and
shlb
xchg
lret
dec
rclb
lcall
adcb
imul
push
out
hlt
add
pop
out
cmpb
inc
mov
and
clc
mov
aam
out
subb
incl
push
stc
sbb
pop
lds
sub
out
arpl
sbb
mov
cmpsl
and
sub
test
fsubrs
movsl
sbb
arpl
mov
and
js
adc
lret
push
pusha
sub
cmc
rorb
pop
cmp
adc
iret
add
pop
outsb
fidivl
in
mov
fs
inc
sub
sahf
fcmove
mov
pop
sub
sub
cmp
push
cmp
addr16
stos
push
ja
sub
sti
mov
imul
xchg
cli
fisttpll
mov
pop
sbb
lret
int3
daa
lea
lret
movsb
and
insl
and
shr
sub
shll
inc
mov
cli
bound
fadds
mov
aam
in
lret
sbb
imul
out
outsl
mov
add
xchg
fs
cmp
xor
mov
ss
sahf
xor
fists
dec
daa
adc
imul
cmp
pop
sti
sbb
aad
popa
lret
ficoml
dec
xchg
das
sub
mov
mov
push
les
lret
stos
inc
sarl
pop
pop
repz
xor
jle
in
jb
dec
sub
mov
add
ret
test
out
cmpsl
iret
mov
lret
xchg
addr16
pusha
lret
stos
out
test
lret
hlt
xchg
mov
inc
cmp
push
into
fwait
cmpsb
push
shr
xchg
sarl
call
dec
orl
out
pushf
or
in
int
dec
out
ljmp
fnsave
mov
xor
xchg
inc
stos
loope
and
fdivs
jge
xor
loopne
stos
sbb
les
mov
pop
je
push
jl
lahf
or
sbb
lret
mov
adc
xchg
sarb
fstps
push
repnz
mov
fstps
pusha
xchg
repnz
fcompl
cmpsl
cli
pushf
fsts
divb
cmp
xchg
cmp
imul
push
lds
pop
aaa
sub
sub
dec
lret
ret
pop
mov
lret
cs
lcall
lret
clc
loope
idivl
jg
xchg
popf
mov
out
and
xchg
hlt
lea
push
lret
jl
sbbb
lret
int
add
test
lret
mov
scas
mov
sub
mov
push
push
rcrb
lret
sbb
xchg
lret
cmpsl
loop
scas
movl
sub
push
dec
add
ror
ja
mov
jbe
push
lods
dec
test
xchg
jne
lret
lds
loopne
repnz
lret
in
mov
add
xor
stos
or
xchg
movsl
into
pop
bnd
push
cmp
add
inc
fcmovb
ss
cmp
mov
int3
pop
xor
in
insl
jb
pushf
or
lret
and
pop
icebp
xor
pushl
push
loope
jbe
cld
cli
add
adc
jne
pop
js
lret
fdivrs
xchg
mov
lret
iret
fcoml
xchg
mov
fwait
lods
adc
xor
cmpsb
cmc
loope
popa
mov
mov
pop
adc
pop
loopne
lret
out
dec
add
mov
lret
sbb
mov
lret
sub
lret
mov
dec
subb
and
loope
pusha
por
sbb
test
outsb
out
mov
cmp
push
fwait
jnp
mov
push
and
push
fcmovne
rcr
cmc
inc
jmp
sbb
pop
pop
mov
repnz
pop
bound
lret
outsb
mov
dec
ss
and
rolb
lret
push
fimuls
xlat
xor
push
mov
mov
ds
cli
mov
in
aad
pop
mov
sub
out
push
je
insl
jno
add
xchg
push
mov
lock
mov
jg
jo
lret
jbe
and
cltd
pop
inc
sar
mov
lods
ret
lea
lods
lods
inc
shrb
out
mov
out
lret
ret
inc
xchg
jae
jb
pop
add
std
mov
xchg
xchg
subl
sarb
sti
inc
cmc
dec
lret
les
leave
jg
fdivrl
pop
or
xor
pop
sarl
jnp
stos
in
mov
imul
iret
les
xor
mov
nop
sub
lds
mov
lret
repnz
sub
pushf
jg
xor
fdivs
movsb
cmp
push
lret
loopne
int3
and
sbb
or
dec
int3
sbb
lcall
mov
into
std
dec
js
add
inc
jo
or
outsb
mov
aam
mov
in
sbb
leave
call
lret
pop
sbb
and
ret
popf
sub
sahf
pop
lret
pop
pop
and
imul
push
repz
push
in
imul
xchg
sbb
mov
pop
mov
repz
lret
or
stos
ret
jne
mov
xor
in
pushf
loope
test
sbb
lahf
loop
and
xchg
pop
scas
insb
rcl
int3
pop
mov
sbb
lret
dec
inc
cmp
dec
clc
popa
test
sbb
cmp
lret
int3
test
jl
xor
imul
lret
push
or
sbb
mov
sub
into
mov
in
jecxz
push
mov
arpl
add
jp
ret
out
fwait
out
lret
xchg
out
jle
pop
das
fidivrl
xchg
xlat
pop
xor
fcmove
push
xchg
and
leave
int
adc
cltd
sarl
cltd
fisubrl
push
andl
fmul
mov
shlb
cld
fisubrl
popa
mov
in
imul
push
xor
lret
fldcw
mov
jmp
mov
mov
push
and
jno
cs
aas
xlat
push
repz
outsl
mov
cmpl
cwtl
sub
and
xchg
cmp
pop
cld
jecxz
sbb
jnp
lret
or
cmpsb
push
pop
jo
shl
daa
ljmp
nop
shl
std
aam
lret
sub
inc
cmp
push
lret
push
mov
adc
stos
lret
xor
in
mov
sti
push
or
pop
xchg
dec
cmp
test
sub
jns
dec
cwtl
adc
sub
out
xchg
movsb
push
scas
or
lret
pusha
sti
add
sbb
lret
mov
jb
in
ret
pop
jg
lods
movsb
orl
cli
popf
jb
cwtl
lods
and
sub
xor
subl
mov
sarb
pop
pop
gs
out
push
pop
mov
pop
lret
adc
mov
inc
lcall
push
ds
sub
mov
fstpt
sti
cmp
adc
ja
std
cmp
dec
fcompl
scas
xor
into
test
dec
repz
cmp
fbstp
push
ret
cld
lret
lret
xor
jle
push
scas
cwtl
mov
das
pop
jbe
push
rcrl
add
lret
cli
or
arpl
pminub
mov
jnp
lods
fisubrs
lret
push
push
cld
sub
xor
into
stos
mov
xchg
cltd
rorb
jae
movsb
sub
int
xor
aam
push
xchg
insl
cmc
rolb
mov
arpl
lret
mov
test
outsl
xlat
lret
sbb
daa
adc
mov
adc
int3
mov
push
xchg
scas
jae
jmp
daa
and
test
pop
nop
lret
adc
je
lret
fsubs
and
int3
vcmpps
in
lret
xlat
sub
jb
lret
pop
mov
or
popf
push
in
fs
addl
adc
pop
adc
into
push
xor
dec
cmp
inc
adc
rcl
or
es
mov
jl
daa
sub
repnz
pop
pop
and
add
pop
push
push
and
mov
aam
xchg
mov
adc
rcr
sti
mov
pop
mov
idivb
sub
das
lret
mov
sub
fsub
lcall
ret
dec
sti
nop
hlt
pop
inc
cmp
loop
pop
int
lret
out
lret
sub
setbe
pop
lret
or
mov
xchg
lock
adc
out
sbb
mov
test
mov
lret
adc
mov
scas
dec
lret
lock
dec
push
out
jecxz
jbe
lds
insl
sub
push
in
stos
ljmp
cmp
lret
js
inc
inc
popa
lret
fadds
aad
lret
insl
cli
insb
xor
lret
push
lea
in
das
sub
mov
mov
loopne
xor
fld1
ficompl
outsl
add
lret
bound
sub
test
xchg
clc
fdiv
inc
dec
mov
shr
push
lcall
loop
repnz
mov
push
cmpsb
shl
mov
xchg
xor
jb
scas
push
out
ja
nop
mov
leave
and
or
sbb
in
sbb
sahf
cmp
pop
xor
mov
repz
in
mov
lret
pushf
mov
jp
dec
mov
and
fnstcw
cli
fs
or
push
cmp
xor
xchg
jl
rcr
mov
dec
ret
movsl
js
inc
cli
mov
sub
xchg
rcrb
sbb
iret
je
rcll
or
clc
addr16
jmp
inc
lret
add
ret
and
lret
xor
pop
shlb
jp
dec
cmp
lret
scas
dec
pop
cwtl
pop
aam
pop
jno
ljmp
lret
scas
add
test
fidivrl
pop
lret
push
sti
insb
mov
or
jb
cli
mov
imul
shlb
ficoms
fstpt
mov
aaa
ret
into
rcr
inc
mov
loop
or
lret
mov
push
mov
lret
sub
cli
dec
xchg
mov
jecxz
push
bound
std
popa
lret
push
movsl
mov
rolb
jns
or
mov
sbb
inc
pushf
mov
ret
loop
test
push
rcll
jo
add
notb
lret
cmp
pop
push
lahf
xchg
clc
jno
pop
les
in
cli
xchg
inc
add
dec
push
jg
and
mulb
jmp
es
xchg
sbb
jb
push
adc
push
lret
cli
clc
call
mov
sbb
pop
push
jne
test
or
mov
push
push
test
lret
xchg
push
loopne
or
das
xlat
or
ret
inc
repnz
out
lcall
lret
pop
pop
pusha
add
sub
xor
sar
adc
pop
pop
mov
sub
lahf
test
pop
cmc
cmpsb
nop
xor
dec
mov
mov
shll
sbb
add
push
lret
ret
fstpl
sub
ljmp
mov
cli
leave
out
loope
xchg
lods
or
cli
les
mov
imul
lret
insl
vpunpcklwd
inc
lret
test
jecxz
fsubrl
lahf
hlt
into
dec
aad
adc
mov
cmpsb
cmpsl
cmp
pop
into
lret
jo
rolb
jg
fistps
cmp
inc
lret
push
lea
cmc
push
lahf
lret
je
mov
js
xchg
push
mov
xor
cmpsb
sub
cmp
lahf
nop
fs
mov
into
lret
push
mov
add
push
leave
push
push
lret
pushf
push
fisubs
sarl
lods
lret
in
les
push
or
sub
inc
imul
bound
push
insl
fcoms
cmpl
out
hlt
adc
lret
jle
xchg
int
sbb
push
aad
lret
mull
pop
cwtl
outsb
cmp
loopne
cmp
int3
sub
dec
lea
or
cld
stos
bound
jmp
loop
mov
push
mov
cmp
xchg
cmp
mov
push
or
test
stos
add
mov
movsb
notb
cmp
jns
dec
mov
xor
fs
aad
mov
xchg
lcall
fcom
and
jmp
jno
das
mov
dec
or
lret
lcall
and
add
lret
mov
cmp
and
jnp
lods
mov
addr16
sbb
add
cs
test
jo
repz
lret
xchg
imul
and
jmp
sbb
jo
shl
lods
mov
mov
mov
xor
lret
sub
lret
test
addl
pop
insb
cmp
cmp
and
ror
or
and
sbb
xchg
and
lods
lret
fimull
sub
nop
fidivrs
sar
sarl
push
rcrb
cmp
popf
mov
ds
mov
xor
pop
mov
rep
or
aad
stos
xchg
cmp
pop
and
dec
sarb
cmp
sbb
and
divps
lret
je
mov
push
cli
dec
and
jo
push
pop
dec
push
rcr
popa
xor
jp
das
or
mov
jmp
adc
push
or
lret
jns
add
pop
mov
rolb
lret
xchg
enter
outsb
stos
mov
loope
shlb
mov
js
lret
movb
fwait
scas
inc
ljmp
call
push
lret
cmc
fimull
add
jecxz
test
mov
ret
inc
jl
jno
sti
shll
je
stos
test
xchg
inc
cld
dec
clc
pop
stos
pusha
dec
arpl
cmpsb
jbe
fld
fistps
ds
or
shll
lret
pop
int
pop
lea
cld
inc
dec
hlt
imull
dec
jp
add
mov
and
mov
aad
insl
adc
shlb
out
jns
mov
scas
ds
mov
pop
mov
xchg
ror
mov
mov
popf
inc
push
lods
rcrb
jmp
lret
test
aam
mov
dec
and
cli
ss
mov
mov
in
inc
fildll
fisubl
adc
adc
cmp
repnz
clc
cmpsb
test
lret
xor
ficoml
fisubrs
sub
xchg
xor
lret
pop
imulb
push
lret
clc
scas
mov
push
sub
bnd
lret
shrl
stos
add
gs
pop
adc
lret
imul
test
mov
iret
add
push
mov
xchg
int3
clc
cmp
rcl
iret
add
stos
sahf
mov
dec
adc
jbe
adc
cmp
pop
fisubrl
in
mov
xchg
xlat
dec
stos
les
lret
sub
adc
mov
scas
std
or
cli
in
jns
test
fdivrl
sub
ja
cwtl
rorb
jmp
lret
mov
into
fwait
call
mov
js
aaa
cmp
out
mov
mov
rorb
sbb
into
cmp
mov
push
rolb
mov
jo
stos
test
movsl
out
pop
aam
inc
pop
sbb
adc
nop
movsl
mov
jle
imul
pop
jo
mov
lret
popl
push
je
fdivl
inc
dec
fwait
push
lret
mov
hlt
adc
push
adc
inc
push
mov
mov
std
int3
imul
call
nop
fmuls
add
push
add
rol
dec
xorl
sbb
inc
in
lret
sub
lods
sbb
add
loop
iret
jg
sbb
jp
icebp
call
cli
jne
adc
pop
lret
stc
cwtl
lock
lret
mov
sti
cmp
add
xor
and
fldl
rorl
xchg
fcomps
pop
scas
jae
lods
stc
cmpl
jbe
mov
sub
cmp
or
sub
adc
test
mov
lret
loope
in
pusha
inc
mov
sbb
shrb
fidivrs
fcmovne
jecxz
pushf
enter
dec
lret
push
cmpsl
sti
mov
and
jno
hlt
fcom
adc
lret
cli
or
ja
adc
mov
jmp
shl
outsb
das
cmpsl
fwait
setb
sub
inc
daa
loope
dec
cmp
inc
and
add
rcrb
lahf
xor
lret
fadd
or
sar
xor
dec
test
fs
cli
in
jle
jne
mov
lret
outsb
ds
test
pop
push
lahf
lret
divl
and
scas
add
mov
mov
dec
leave
mov
jns
into
jb
int
jl
sub
add
and
lahf
lret
cmc
fwait
cmpl
mov
adc
xchg
adc
pop
or
loopne
and
iret
imul
int3
pop
xchg
sbb
push
sub
inc
test
and
dec
je
mov
add
mov
pop
pop
sbb
mov
pusha
add
cli
mov
icebp
es
fldcw
mov
inc
lret
aas
nop
repz
or
xor
out
lret
adc
lret
loopne
lods
test
mov
and
lret
xchg
lret
push
imul
arpl
rcl
mov
shll
lret
add
xorb
push
mov
mov
lret
into
adc
pop
xchg
cmp
rclb
cmp
pop
adc
es
int3
mov
and
sti
xor
popf
xchg
sbb
repz
test
insb
jl
lret
push
and
mov
sbb
enter
lret
sub
lret
fsubrp
cwtl
xor
inc
stc
mov
imul
lds
jecxz
mov
rorl
cli
mov
jbe
xchg
mov
cmp
mov
xor
movsb
lret
cmpsl
sbb
sahf
dec
aas
lret
pop
mov
lret
rclb
sub
call
sub
fimuls
jp
in
push
pop
ret
pop
pop
adc
lret
pop
aaa
pop
lret
insb
and
or
sbb
rolb
sbb
mov
mov
cmp
dec
push
gs
mov
dec
push
push
lret
pop
es
in
cli
sbb
mov
icebp
mov
cmp
inc
int3
inc
or
adc
fisubrl
sub
cltd
mov
lret
or
lret
int3
js
in
add
repz
or
mov
test
sub
push
add
mov
cmp
into
out
mov
fnsave
adc
test
int
inc
rcrl
push
call
mov
lret
test
test
sub
lret
adc
imul
das
xor
mov
decb
or
hlt
int3
push
cmp
push
mov
lret
roll
mov
or
test
inc
lock
pop
jbe
mov
push
sbb
mov
or
fucomi
push
fcmovne
pop
jle
pop
roll
lahf
mov
mov
sbb
test
aad
pop
sub
scas
lret
jo
xchg
sbb
sbb
shll
aad
push
mov
add
push
int
dec
adc
aam
or
mov
shll
xor
pop
stos
lret
cmpsb
cmp
mov
shlb
jle
fnstsw
inc
in
sub
xor
out
andl
pop
cltd
and
lret
push
cltd
and
js
sti
inc
hlt
and
or
cmc
xchg
xor
mov
dec
sti
test
or
mov
cmp
fwait
data16
rorb
add
lret
mov
dec
lret
std
test
stos
sbb
fwait
mov
cmpsb
lahf
lret
mov
aam
and
push
dec
rcl
mov
lret
test
jmp
js
imul
pop
fs
sub
test
mov
rolb
xor
mov
out
sub
jg
stos
rorl
addl
fldenv
lret
andl
xchg
add
hlt
jnp
aad
jl
and
addr16
in
and
arpl
int
push
pusha
add
lret
jae
aad
cmp
push
ljmp
hlt
inc
cwtl
or
into
jae
xchg
or
in
mov
mov
popf
lret
daa
test
adc
lods
mov
sbb
add
filds
xchg
jmp
fstl
lret
shr
and
repnz
insb
mov
cs
lret
or
lret
add
pop
outsl
pop
sbb
ss
lret
aas
out
out
stos
add
jnp
test
adc
cli
sub
gs
ljmp
dec
popa
subl
jmp
or
aas
dec
push
and
lret
jo,pt
fstpt
stos
add
aas
push
push
pop
fiadds
adc
fwait
lret
jmp
clc
push
jne
lods
xchg
movsl
in
cld
lret
idivb
fcmovbe
sbb
fwait
in
out
loop
into
sti
jmp
lret
or
aam
push
out
sahf
xchg
lret
cmp
push
flds
cmp
in
or
sarb
sti
lret
add
jno
rcl
mov
mov
add
and
push
roll
xchg
or
filds
push
nop
and
inc
dec
add
jmp
scas
add
jg
push
pop
stos
cmp
int
push
je
fcomps
stc
loope
andb
lret
faddp
lcall
mov
mov
lods
xor
aam
pop
aad
cmp
lret
ja
mov
nop
jg
in
aas
jp
lock
movsb
mov
lret
add
sbb
mov
push
imul
mov
pop
sub
insb
lahf
add
outsl
out
out
cmp
lret
loope
and
mov
dec
jno
adc
into
stos
cmp
fwait
adc
dec
add
sbb
jmp
cmp
ror
pop
movsl
in
pop
outsl
lods
cwtl
adc
pop
and
hlt
mov
add
cli
nop
cmp
ss
int3
pop
cltd
xchg
adc
ljmp
outsb
into
jb
mov
pop
daa
imul
popf
push
test
aam
mov
das
mov
loop
push
lret
dec
sub
dec
stos
xorb
out
or
fstp
mov
daa
insl
or
fwait
jg
xchg
mov
in
add
jo
jl
scas
into
mov
scas
jb
mov
mov
and
lret
ret
jb
cmpsl
cmp
xor
lret
mov
add
dec
xor
cli
sub
jnp
out
inc
int3
je,pt
lret
gs
sub
mov
fidivl
mov
cmp
fsubrs
fwait
dec
lock
cmp
stos
sbb
sbb
push
adc
popa
jae
jp
test
cltd
pop
pop
stos
clc
jbe
into
xchg
frstor
sub
lret
jo
jmp
out
add
sub
xlat
mov
or
fucomi
push
jp
pop
lret
in
jnp
popf
jmp
cwtl
push
lret
cmc
inc
pop
or
mov
pop
dec
aam
pushf
sar
lret
or
fcmovne
test
pop
fwait
cwtl
mov
imul
sub
cmpsl
mov
cmp
adc
repz
fsubr
out
adc
popf
or
xor
cmp
jecxz
insb
jp
push
int
lret
pop
cli
mov
pop
or
adc
in
loopne
lret
lods
mov
sti
and
pop
lret
shll
xor
adc
lea
adc
cli
cs
sub
mov
dec
lock
lods
into
sbb
jecxz
dec
jbe
mov
xlat
adc
lret
push
test
lret
or
jae
pop
mov
sub
ja
aad
push
fcmovb
dec
xchg
add
in
adc
incb
sbb
cmp
add
cltd
mov
scas
push
sbb
cwtl
and
dec
sub
sarl
into
xchg
lret
fldt
fidivl
or
sub
hlt
cwtl
divl
mov
test
pop
jl
sbb
adc
int
sub
iret
or
je
jbe
push
lret
mov
fdiv
popf
xor
and
aad
mov
sti
xchg
scas
fs
lret
ljmp
aad
dec
lret
mov
mov
lret
ficomps
pop
add
scas
shrb
insl
outsl
dec
test
xchg
orl
push
push
mov
lret
xchg
mov
sub
fwait
lret
fnstsw
out
push
or
push
sbb
mov
mov
and
cmp
inc
xlat
out
mov
adc
add
mov
lret
pop
je
movl
mov
outsb
lret
sbb
mov
push
lret
test
push
mov
and
inc
repz
std
add
loopne
icebp
mov
pop
push
push
aad
sarl
in
mov
dec
lret
jne
scas
int
xchg
and
lret
or
dec
icebp
cmp
test
insb
sbb
ficoml
fwait
dec
pop
ljmp
mov
lahf
test
loope
add
mov
sub
cmp
repnz
leave
jl
jmp
imul
xchg
pop
iret
lret
dec
ss
jl
or
jg
repnz
mov
lret
xor
push
sub
popa
lahf
mov
pop
lret
xchg
jbe
inc
sbb
lret
pop
mov
jmp
or
cli
and
push
in
lret
int
sub
lret
repnz
shl
and
sub
sbb
lock
mov
jge
iret
jmp
mov
and
cmpsb
lret
fwait
xor
cmovno
fldl
rcrl
pop
ret
or
movsl
xor
add
cwtl
lods
jle
mov
lret
add
ds
cli
icebp
inc
test
rclb
jbe
stos
lods
sbb
cmp
adc
fs
inc
and
cmpsl
popa
das
fwait
mov
xchg
les
dec
clc
add
nop
sub
rorb
cmpb
pop
fadds
and
cld
push
sub
mov
or
call
rclb
lret
pop
xor
popf
lods
lret
mov
pop
lret
lret
inc
mov
jns
lret
sbb
or
jbe
leave
lret
fiadds
jno
dec
xchg
popa
adc
loope
lret
sub
sbb
imul
adc
cs
mov
lret
inc
jne
and
mov
movsb
and
cmp
lret
sbb
cltd
dec
nop
addr16
jne
fcomps
xor
or
int
jp
push
push
js
lret
mov
sbb
sub
and
or
mov
popa
inc
lret
lds
lret
dec
fwait
cmpb
loope
lret
dec
push
movsb
mov
sti
mov
xor
fwait
jge
cmp
test
mov
cli
dec
nop
sub
adc
leave
pop
movsb
push
lds
fucom
aam
mov
ret
pop
inc
cmpsb
aam
scas
ljmp
repnz
xlat
rolb
dec
xor
stos
xor
push
addr16
mov
push
pop
orb
mov
mov
lret
adc
mov
push
jo
dec
lret
jne
fwait
pop
fadds
cltd
lods
ljmp
in
sub
es
lret
pop
mov
mov
lea
rorb
xchg
mov
addb
mov
mov
cltd
ret
insb
aam
cmp
lret
insl
mov
fmul
rcrb
add
mov
mov
jb
push
call
in
sti
lds
insl
mov
insb
outsl
negb
add
mov
pop
xchg
sub
rorb
mov
loopne
in
pop
mov
push
mov
mov
fcmovnu
inc
mov
das
ja
push
and
fsub
add
push
inc
mov
push
sbb
jle
add
jo
std
cltd
lret
subb
jp
xchg
lahf
mov
dec
iret
pop
cmp
test
shrb
test
out
sbb
cmp
pop
leave
pop
lock
ficompl
inc
jno
lret
mov
lahf
push
pop
orb
test
cmp
add
mov
rcr
lret
lcall
ret
lret
inc
testl
dec
xchg
inc
int
or
fwait
aaa
ja
push
mov
add
push
test
adc
xor
mov
das
sbb
pop
mov
aad
rclb
insl
mov
js
lcall
pop
pop
lret
or
mov
cmp
mov
jmp
aad
adc
call
xchg
or
ffreep
cmp
ljmp
fsubrs
push
add
cmp
xor
dec
xchg
loop
and
dec
cmp
jbe
mov
add
fcomp
fiadds
and
sti
mov
cmp
fidivl
jp
push
xchg
stos
lret
and
ret
sahf
lock
lods
inc
pusha
fidivrs
xchg
pop
jecxz
or
inc
add
fdivrs
movsl
push
sbb
xor
xchg
xchg
adc
lret
imul
cmp
dec
nop
and
pop
adc
inc
push
cmp
mov
bound
repnz
ja
xchg
push
addr16
movsb
mov
cmpsb
mov
mov
ss
lret
fs
jbe
das
mov
pushf
out
fiadds
mov
sti
dec
xchg
lret
push
pop
or
mov
mov
repz
jno
push
add
mov
into
aam
mov
pop
xor
nop
inc
ljmp
adc
ror
out
cmpsb
lret
fistps
bnd
mov
mov
aam
push
cmp
mov
xor
jg
stos
cmpl
and
jno
lret
lcall
test
mov
inc
cwtl
scas
test
inc
sbb
xchg
lret
ret
push
into
pop
sbb
lret
jmp
stos
cmp
inc
rcrb
lret
das
pop
push
lock
mov
add
scas
pandn
jo
pop
pop
push
lret
mov
jl
into
scas
lret
or
cmpsl
lret
pusha
and
testl
out
fmuls
add
pop
cmpsb
xchg
popf
icebp
movsl
mov
jo
push
call
jnp
nop
pop
negb
add
mov
sub
lret
pop
mov
cmp
cwtl
cmp
fsubs
push
flds
bound
xor
mov
adc
sbb
push
lret
pop
mov
and
mov
pop
rcrb
fdiv
ds
outsl
popf
push
hlt
dec
sbb
push
mov
daa
jmp
sbb
lods
lret
push
inc
lret
cs
xor
les
lods
and
xchg
hlt
pop
lret
fcoms
rcrl
pop
icebp
add
push
push
or
xchg
pop
sarl
sub
loopne
pop
jmp
fadds
pop
jl
lret
fsub
les
ret
lods
xor
insb
nop
xchg
push
mov
lret
and
cli
inc
daa
stos
dec
outsb
arpl
cmp
mov
and
lret
push
inc
mov
sbb
dec
sub
cmp
push
ljmp
rolb
enter
insl
push
sbb
setl
cmp
iret
imul
cmp
sarb
lret
notl
aam
hlt
fimull
push
stc
aas
imul
xor
cmc
mov
lret
aam
cli
mov
add
cmpsl
push
xor
add
sbb
or
or
mov
popf
ljmp
cmp
or
shlb
shl
jb
pusha
mov
xor
jle
lea
push
mov
mov
sub
lret
pop
jl
mov
mov
xor
inc
cmp
sahf
shlb
push
ds
push
movsb
mov
xlat
push
test
pop
xchg
js
lods
pop
push
jp
je
pop
arpl
and
or
sbb
pop
mov
sahf
hlt
rcl
loope
pop
inc
jge
fcmove
popa
shll
mov
cmc
into
and
pop
jae
sbbl
fisttpl
pop
lret
dec
lcall
mov
lret
push
cmp
add
cmp
cmp
mov
in
iret
mov
adc
and
sar
loopne
jbe
lret
test
lret
pop
idivl
orl
outsl
repz
push
into
jno
dec
loope
pop
cmp
mov
rcrb
shlb
ror
dec
dec
xor
stc
mov
out
add
movsb
out
adcb
call
push
notl
jle
icebp
int
sbb
cmpsb
scas
lret
cmp
mov
aas
mov
shrb
rcrl
ja
sub
lret
mov
rcll
mov
lcall
sarb
jno
mov
and
cli
dec
call
scas
repnz
or
jge
push
daa
inc
cs
mov
jo
sti
les
xchg
lret
dec
mov
add
repnz
or
adc
xchg
enter
pushf
sbb
popf
lods
jnp
dec
rcll
gs
add
sub
in
sub
cmp
adc
in
push
lret
out
mov
cwtl
jg
lds
std
push
mov
lods
and
add
dec
sti
popf
lret
push
dec
jno
fmull
lret
jle
dec
fwait
sub
add
pop
or
aad
pushf
outsl
mov
mov
arpl
pusha
mov
push
xchg
fcomps
mov
xlat
mov
sub
push
mov
test
mov
mov
pusha
or
mov
pand
jmp
dec
lret
jne
sbb
cmp
inc
mov
rclb
stos
cmp
xchg
test
fcompl
push
lret
repnz
int
xor
cmp
mov
jl
imul
cltd
inc
pop
cmp
jmp
dec
mov
lret
adc
loopne
popf
jl
mov
mov
int
pop
sbb
sti
xchg
pop
rolb
jno
jp
fucomip
lret
adc
data16
cli
cld
and
rorl
loopne
push
in
sbb
cmp
imulb
pop
test
pop
sti
lcall
pop
ss
sbb
mov
lret
inc
stos
orl
outsb
mov
cmp
jns,pt
addr16
push
call
das
and
rorb
inc
xchg
test
xlat
das
push
push
je
cltd
lret
daa
fdivrl
js
lret
and
jecxz
dec
lods
andl
lret
add
pop
pop
shll
lret
xchg
jmpw
or
mov
es
lods
lret
dec
and
cli
mov
fsubrs
andl
in
xchg
popl
push
jl
pop
bound
lret
out
outsb
and
jnp
mov
cli
mov
inc
sub
shll
dec
lret
pop
mov
lret
push
lea
add
lret
sbb
aas
xchg
fwait
lret
insb
sbb
mov
arpl
and
sub
and
fcmovnu
das
push
repz
push
stos
mov
jmp
int
jb
sub
lret
cmc
jge
sahf
mov
cmpsl
lea
aaa
pushf
movsl
push
sarb
fcomps
cmp
sbb
into
fwait
jge
popf
rclb
push
cli
dec
inc
mov
xorl
ficoml
insl
loope
xor
mov
xchg
lret
mov
push
ljmp
dec
int3
xchg
insl
mul
call
mov
push
cmpsb
push
add
xchg
in
adc
jo
or
das
add
stos
sub
xchg
mov
lret
adc
out
dec
ror
jno
xor
pop
mov
fsubl
and
mov
jecxz
cmp
pop
lret
sub
std
ds
popf
lret
iret
xchg
cmp
cmp
rcrl
enter
lret
push
cmpsl
call
test
bound
outsb
adc
addb
sub
mov
stc
jo
jp
rclb
clc
aaa
cli
repz
rcl
adc
dec
push
lret
push
xor
sub
fucomip
mov
ds
flds
icebp
stos
popa
push
cwtl
jo
test
addr16
lret
jae
std
dec
inc
cmp
outsl
jle
sub
push
fisubl
pop
es
wbinvd
fcoml
mov
cs
xchg
es
push
and
clc
lret
loop
ja
sbb
lret
mov
hlt
xchg
lret
add
mov
pcmpgtd
ret
pop
or
or
jo
test
test
sbb
sub
iret
insl
stos
aad
je
fmul
mov
fdivl
push
mov
movsb
out
pop
xor
fiaddl
xor
and
fwait
int3
arpl
or
test
aaa
sbb
aad
fstpt
ja
or
nop
pushf
mov
ret
int
xor
mov
cli
sub
call
push
lcall
sbbb
sbb
cmp
pop
adc
lret
insb
push
inc
int3
inc
or
dec
sub
xchg
mov
cli
or
sti
xchg
fldcw
nop
and
mov
lcall
movsl
ds
outsb
sti
push
xchg
in
ficompl
jge
fldpi
push
lret
pushf
sub
cli
outsb
aaa
sbb
inc
inc
sbb
add
fnstenv
enter
sbb
rclb
insl
iret
inc
aam
jl
mov
lret
test
dec
test
fdiv
outsl
mov
lret
sbb
sub
jb
cltd
pop
aaa
push
in
pop
push
mov
lahf
sub
dec
lret
movsb
daa
out
int3
test
lret
rclb
ljmp
shl
repnz
fdivrp
rcrb
aam
stos
cmp
push
push
pop
fcomps
mov
test
sub
xchg
pop
adc
imul
leave
lret
mov
mov
icebp
mov
cwtl
sbb
jae
leave
xor
fnstcw
out
adc
or
and
sbb
outsl
push
lret
jecxz
xor
rcl
or
lret
loope
call
sbb
mov
lods
or
xor
jmp
rclb
pop
lods
loope
push
jg
lret
and
dec
lret
mov
push
ret
fldcw
mov
loopne
dec
mov
cli
push
pop
inc
insl
in
mov
lock
and
imul
and
push
jae
cmp
xchg
loope
xorb
adc
lret
ss
sahf
stc
ror
push
imul
outsb
pop
cmp
push
loopne
pop
adc
dec
js
lret
cmp
inc
ds
mov
std
bound
loop
push
aas
sahf
push
lret
xchg
pop
adc
dec
mov
ds
movsl
pusha
sarb
jo
das
lret
test
outsl
lret
leave
push
mov
sub
xlat
jbe
movsl
jp
xchg
pop
push
jg
dec
push
mov
roll
ret
lret
mov
lret
xchg
mov
leave
daa
arpl
xchg
add
mov
sbb
rclb
xlat
push
fisubrl
cmpsb
jnp
mov
lret
cmp
cli
ss
cltd
push
sbb
xlat
cld
mov
push
rorb
ror
sub
movl
int3
mov
push
rcrl
jmp
inc
xchg
inc
lret
jp
repz
lock
lret
scas
or
cs
jp
xchg
sahf
movsb
push
adc
stc
jns
inc
jbe
aad
movsl
cwtl
inc
add
dec
jp
gs
sbb
push
or
cltd
rolb
les
mov
lods
add
lock
clc
enter
dec
movl
scas
fnstsw
cmp
rcll
shlb
sbb
fdivrl
xor
sbb
roll
xor
pop
sbb
loop
push
and
jae
lret
insl
jmp
pusha
cmp
and
inc
mov
testb
lods
sbb
lret
or
cmp
lret
sbb
pop
push
mov
popa
xchg
int3
into
testb
movsl
push
sbb
ret
add
cmpsb
aas
fwait
data16
jp
and
cmp
dec
mov
stos
mov
es
in
dec
mov
lret
int3
popf
out
jb
lret
cltd
inc
in
and
lret
testl
and
lret
pushf
dec
dec
xchg
test
mov
push
std
leavew
mov
push
bound
inc
clc
fisubrl
add
push
xchg
pop
jbe
in
out
fwait
mov
daa
rcrb
sbb
addl
add
cmpsl
push
ror
data16
lret
outsl
adc
test
lret
mov
lahf
lret
fistpl
cmp
mov
inc
rcl
cmp
iret
cs
lret
sub
lcall
jmp
sub
mov
loope
stc
inc
mov
cmpsb
mov
fcomp
mov
pop
popa
lret
push
cmpsl
xor
mov
lret
mov
loopne
inc
xchg
ds
cmp
or
sar
pop
dec
and
das
fidivrl
cmp
js
dec
xor
or
dec
jno
int3
insb
pop
or
gs
sbb
in
arpl
pushf
jge
out
fisttpl
es
mov
cmp
dec
lret
push
fstp
daa
push
lret
cmp
sarb
and
ja
scas
inc
push
lret
adc
fsubs
shrl
sbb
sbb
and
fdivrp
enter
lcall
push
pop
popf
mov
xor
dec
push
lret
adc
lahf
aas
popf
scas
lret
ror
addb
inc
pop
inc
jne
test
add
dec
mov
into
xchg
mov
mov
iret
jp
mov
cmp
push
sub
and
stos
lret
push
mov
cmc
push
sub
mov
xor
sbb
inc
les
fwait
mull
lock
testb
daa
mov
xor
sbb
rolb
jl
mov
mov
ret
fisubrl
inc
lret
lret
add
push
test
sbb
pop
and
pop
xor
inc
mov
andl
bswap
test
dec
ficoml
dec
push
mov
xor
stos
lret
addr16
mov
xor
cmp
push
or
je
out
repz
sub
pop
repnz
adc
sarl
lods
push
push
lret
out
pop
pushf
shl
xchg
cmc
out
or
fidivl
ljmp
sbbb
ss
lds
loop
jle
cmp
inc
in
pop
cld
cli
lret
dec
mov
lret
pop
add
test
lret
ret
sbb
das
sub
cmc
insl
mov
addr16
scas
or
insb
pop
cmpsb
in
mov
decl
push
stos
xor
and
stos
cltd
fs
and
fnstcw
cmp
movsl
int
push
repnz
mov
fisttpll
ficompl
test
sbb
xchg
adc
lret
loopne
scas
bound
lret
imul
or
cmc
xor
js
test
jns
jae
movsl
dec
dec
divb
pop
popf
fidivl
inc
jo
rorl
lds
das
cmp
xor
mov
or
or
lods
pop
adc
jp
std
sub
rolb
lret
sbb
and
lret
sbb
pop
and
lret
adc
mov
repnz
divl
movsl
ret
mov
xlat
insb
mov
mov
cli
pop
inc
nop
std
rcll
lret
cltd
inc
lods
fsts
lret
lcall
pop
dec
xlat
movsl
cmp
lret
lahf
or
or
cmp
mov
fldcw
gs
lret
js
stos
jns
loop
cmpsb
fiaddl
jp
inc
cld
arpl
mov
dec
cmp
mov
lret
test
test
repz
pop
fnstenv
inc
jae
sub
push
stos
push
dec
mov
popf
bound
mov
gs
or
lds
lret
fstpt
das
loopne
lret
mov
lret
sbb
lret
jl
jle
jmp
icebp
dec
bound
inc
lret
mov
or
jmp
rcrb
or
pop
clc
push
lret
js
shl
and
dec
dec
mov
inc
or
mov
lret
aaa
xlat
cmp
lret
mov
and
or
pushf
imul
or
lret
ja
xorb
imul
sbb
aad
dec
xchg
mov
and
cli
mov
xchg
fiaddl
fimull
jae
and
pushf
scas
or
sub
push
lret
xor
pop
loopne
jmp
jp
imul
lret
xor
fcmovnu
mov
scas
shlb
mov
adc
mov
mov
sub
out
incl
jno
cmpl
aad
xchg
inc
into
add
mull
lock
dec
cs
out
ficoml
add
or
lret
andl
sub
outsl
jo
rorl
dec
lret
and
rcrl
jge
out
inc
cltd
aam
inc
add
shrb
cmpsb
mov
sbb
test
shr
rcrl
stos
popa
mov
inc
jg
fdivs
popf
mov
clc
into
in
xchg
nop
lret
dec
mov
lret
jecxz
imul
enter
adc
popf
pop
xor
xchg
js
mov
inc
add
imul
add
jb
sub
out
jp
sti
movsl
inc
xor
mov
pop
push
lret
andl
dec
xchg
add
test
pop
mov
adc
inc
sahf
lret
xlat
xorl
push
jp
mov
rcrb
pusha
jb
cmp
iret
outsb
cli
rorb
repz
rcl
sbb
dec
adc
sarb
mov
jnp
cmpb
lret
ja
jecxz
out
mov
ret
mov
lret
enter
push
mov
arpl
rcl
popf
subl
out
rcr
push
dec
mov
fldl
lahf
xchg
cmpsl
cmp
jmp
push
sbb
adc
cmp
ss
ds
inc
ljmp
into
push
int3
cld
lret
sar
mov
gs
ret
jmp
in
aas
hlt
test
inc
push
shrb
cli
pop
push
dec
jno
lret
lcall
push
add
mov
add
xchg
mov
lret
movb
mov
into
out
fimuls
push
insl
jnp
sub
fwait
sub
push
mov
gs
fisubl
sbbw
or
loope
xor
cli
jo
and
xchg
and
lret
mov
stc
jle
xor
push
cmp
or
cmp
pop
push
mov
jbe
lret
insl
popf
iret
xlat
scas
mov
fdiv
iret
ror
add
ljmp
into
xchg
push
mov
lret
js
mov
mov
es
inc
inc
repnz
fwait
pop
sbb
mov
mov
mov
adcb
xlat
push
mov
sub
sbb
mov
fprem1
aaa
shl
lret
adc
in
test
xchg
inc
cli
lret
scas
pop
add
adc
add
lret
dec
sar
push
fcmovbe
out
lret
das
test
xchg
inc
sub
in
push
adc
cmp
or
inc
lret
mov
lds
jge
xor
mov
push
inc
cmp
push
lods
pop
sbb
iret
or
stos
jne
dec
filds
mov
mov
xchg
addr16
out
rclb
dec
and
lret
filds
fdivp
cmp
jle
add
push
lret
aas
xchg
add
mov
out
jne
js
je
negl
pop
cld
sbb
inc
mov
loopne
rorb
lret
or
data16
std
lret
insl
xchg
lock
fcmovbe
into
in
les
mov
mov
out
lea
repnz
rep
div
lcall
pusha
adc
lock
xor
cli
sahf
not
test
add
dec
repz
lret
xor
cmpl
pop
mov
adc
xor
and
les
subl
xchg
in
test
fnstcw
out
pop
hlt
jg
xlat
cld
inc
mov
lahf
lret
mov
pushf
lret
mov
sub
sarb
pop
js
mov
mov
mov
repz
jp
outsl
fwait
adc
out
out
or
rorl
lret
inc
orl
jbe
pop
pop
xchg
lods
jo
mov
adc
dec
sti
xchg
cli
cld
mov
inc
pop
push
in
sub
fidivrl
int3
xchg
inc
dec
insl
hlt
mov
inc
lret
pop
mov
arpl
popa
cmp
int
sub
fwait
aam
sub
mov
insb
ljmp
rorb
push
pop
cmp
jmp
rol
lret
mov
imul
inc
xchg
in
lret
mov
mov
add
dec
mov
lret
and
test
test
jne
jge
fxch
in
mov
mov
sbb
adc
pop
aas
dec
mov
lret
add
lret
daa
add
mov
cltd
xchg
mov
fisttps
cmp
push
sbb
push
push
mov
pop
sahf
lret
adc
add
jge
cmp
xlat
ds
xor
sbbb
dec
inc
lret
out
inc
push
sub
shrb
mov
lcall
sub
and
rorb
sbb
mov
rclb
cmpb
pop
fisubs
or
lret
stos
ljmp
push
andb
ja
lret
rorb
lret
cwtl
mov
cmp
outsb
push
pop
stos
fcomps
mov
and
cli
lods
subl
adc
lret
mov
mov
lods
insl
mov
stos
clc
fildl
mov
pop
out
mov
jmp
or
xchg
pop
je
xchg
mov
xor
push
insl
fimull
idivb
aam
ja
inc
fs
lret
ja
popf
or
lret
leave
out
mov
cmp
in
stos
mov
mov
jno
xchg
stc
lret
dec
push
test
scas
mov
loopne
lds
inc
sbb
dec
ds
add
lret
fildl
cli
sbb
xchg
cmpb
dec
mov
push
xlat
sbb
loope
in
and
dec
add
lret
shr
push
cmp
lahf
into
add
jnp
sub
in
filds
mov
roll
and
pop
pavgw
shlb
lret
mov
mov
nop
jo
test
or
mov
call
ret
or
and
dec
or
mov
cmp
add
xlat
adc
adc
cmpsb
clc
loopne
mov
lret
test
fwait
add
mov
mov
lret
pop
jg
fisubrl
pop
jo
cwtl
mov
cmp
lret
dec
loope
fidivrl
int
pop
pop
adc
iret
fsts
negl
lret
ret
cli
leave
insb
pop
pop
mov
shlb
pop
rcrb
clc
fcmovne
out
bound
cmp
lret
sbbl
lret
adcb
mov
lret
outsl
sub
in
mov
sub
xchg
inc
shll
cs
mov
fmul
pushf
jbe
adc
sbb
jnp
cld
data16
lret
push
cmc
adc
movsb
repz
add
pop
lock
rclb
inc
insb
pop
cmp
movsb
and
sbb
mov
inc
push
dec
or
xchg
lret
fidivs
jecxz
push
stos
cli
mov
sbb
sbb
push
ret
pop
shrb
xor
lret
add
jp
cmp
sbb
iret
inc
popa
mov
mov
pushf
fadd
mov
lret
cmp
mov
or
mov
jbe
dec
lret
and
cmp
cmc
mov
std
lret
xor
mov
lret
mov
enter
jmp
sub
lret
dec
xchg
cmp
lret
outsb
shl
arpl
in
mov
lret
adc
test
lret
sub
cmpsl
rcr
jl
push
jns
or
enter
pusha
ljmp
mov
test
lret
jge
jmp
mov
cmp
idivl
imul
lret
jmp
dec
pop
cmp
adc
jge
push
aam
and
lret
and
cld
xchg
add
cs
daa
jl
les
fcomp
loope
jmp
rorl
cli
or
lret
push
popf
lret
scas
xchg
into
fidivrl
adc
pop
jle
cmp
add
fidivrs
dec
leave
iret
cltd
mov
lret
or
jmp
mov
enter
popf
or
adc
stc
cltd
cmp
push
mov
out
push
xchg
or
outsb
push
imul
pop
dec
cmp
fstps
lret
mov
and
inc
dec
popa
lods
loope
fsubr
mov
rcrb
stos
sub
adcb
and
notb
stc
dec
notl
lea
insl
cli
push
mov
sub
lret
fadd
out
mov
mov
adc
lods
xchg
testl
pop
mov
push
cmp
arpl
cmp
into
jo
or
lahf
out
cmp
lret
in
add
shll
pop
test
inc
inc
mov
pop
lret
pop
lret
shrl
ficoml
or
popa
cli
addl
lret
lahf
outsb
aam
out
jmp
add
jae
xchg
inc
mov
adc
add
inc
mov
lret
and
mov
popf
fmulp
xor
cmpsb
cli
fmuls
push
je
xchg
xchg
and
rorb
lret
or
mov
aam
xchg
and
lret
ficoml
mov
or
sbb
push
aaa
sbb
mov
mov
mov
cli
xchg
rcrb
jle
xlat
repz
iret
mov
xor
cwtl
add
lret
or
mov
es
cmp
repz
adc
dec
fldcw
lea
and
pop
push
into
addr16
mov
mov
bswap
ds
popf
test
lret
push
push
push
in
sbb
fsubs
xchg
xor
mov
mov
mov
jecxz
pop
mov
adc
add
jns
fldenv
shrb
dec
lret
dec
out
pop
or
push
jl
lock
lret
adc
fcomps
call
push
lret
xchg
iret
mov
shl
lds
fldcw
cld
jp
je
bound
cmp
pop
push
pusha
jns
ds
mov
jmp
rol
or
out
xchg
pop
ret
push
int
and
stos
xchg
sbb
mov
dec
mov
rorb
fcoms
mov
int
add
push
stos
dec
adc
cli
in
lret
mov
mov
or
xchg
xchg
dec
pop
xor
repz
rcl
dec
popf
clc
jbe
mov
scas
into
jl
ficoms
mov
push
sahf
lret
inc
stos
movb
add
cmpsb
lret
lock
push
fsubr
lcall
daa
push
lret
mov
lahf
adc
adc
mov
lret
lods
lds
imul
data16
jge
mov
cmp
cmc
outsl
movsb
lret
sbb
adc
dec
xchg
into
mov
loope
loop
cmp
jmp
xchg
inc
aas
push
pop
add
mov
mov
add
into
cwtl
inc
pop
sbb
pop
and
movsb
outsb
ljmp
fcoms
scas
fidivl
push
cld
xchg
popf
adc
push
add
lret
int3
jb
sbb
lret
xor
ljmp
fdivrs
das
pop
lret
pop
sbb
and
push
lret
mov
jmp
or
das
or
sbb
ss
inc
jecxz
test
js
mov
fistpl
std
add
mov
aam
loopne
sbb
xchg
stos
std
mov
int3
and
out
lret
mov
imul
jge
iret
out
popa
fcmovnb
push
lret
pop
mov
mov
dec
shrl
ret
sbb
cmp
mov
lcall
add
xchg
stos
sbb
adc
cs
lret
scas
shll
jl
repz
into
sub
mov
xor
xor
leave
or
das
movsb
lods
xchg
mov
sub
cmc
lahf
sar
cld
ljmp
into
xchg
mov
push
lret
jo
rcll
jno
dec
in
shlb
rorl
inc
filds
aam
xor
stos
mov
jnp
push
lods
int
pop
mov
mov
repnz
sbb
cmp
adcl
push
iret
sub
out
adc
shlb
pop
sub
mov
push
xorl
pop
shlb
dec
mov
mov
xchg
loop
pop
adc
fstpl
in
xchg
fsubs
sub
fmull
iret
sbb
lds
push
jb
cmpsl
jmp
sbb
add
fdivrl
lret
comiss
dec
jg
lret
rcrl
add
cwtl
adc
pushf
data16
js
mov
add
rol
js
mov
rorl
sbb
jae
xchg
push
lret
push
mov
cwtl
pop
rorb
xor
pop
dec
rorb
pop
and
mov
or
pop
loop
pop
mov
and
lret
inc
fistpll
adc
add
lret
push
adc
fldl2e
outsl
or
fsubs
sbb
inc
push
pushf
outsb
inc
mov
jmp
stos
and
xorl
sar
xchg
sahf
mov
cltd
add
in
mov
and
stos
dec
inc
cmpsb
cli
sub
outsb
inc
ret
adc
aas
mov
push
lret
xor
shrl
xchg
xor
sub
push
jge
iret
xchg
ss
ja
pop
sbb
mov
lods
jbe
mov
mov
or
dec
sbb
sbb
test
pop
mov
dec
lret
add
mov
jge
sub
popa
cmp
and
lret
pushf
mov
decb
icebp
shl
pop
int
sbb
rol
fwait
jnp
movsb
sub
stos
add
sbb
mov
push
cld
int3
pop
loop
cmp
hlt
pop
ja
mov
or
int3
xchg
test
addr16
push
xor
jbe
xchg
clc
mov
aas
inc
sbb
je
xor
rcrb
mov
mov
enter
jle
mov
sar
setns
mov
dec
sbb
shll
mov
shrb
nop
cli
fbld
pop
or
sub
dec
push
hlt
xlat
sti
mov
into
dec
imul
shlb
ret
sub
adc
insb
pop
testb
rcr
mov
sbb
mov
jle
aam
adc
shlb
xor
pop
xchg
loopne
xchg
test
int
push
mov
out
scas
iret
jns
test
scas
and
je
hlt
push
inc
sub
in
mov
xor
inc
es
das
mov
or
mov
jne
popa
push
arpl
push
adc
push
or
jnp
hlt
sahf
push
push
sbb
rcll
nop
repnz
and
cld
xor
popl
rcr
lret
stos
jl
or
popa
cmp
ficompl
jne
in
sahf
inc
add
mov
loopne
aam
lock
test
popa
adc
mov
stos
out
pop
sbbb
jl
mov
pop
bound
lods
mov
push
subl
ljmp
fnsave
and
mov
jge
mov
push
into
out
push
add
leave
mov
cmp
punpckhbw
pusha
lock
xor
lret
jmp
jmp
adc
mov
fadds
stos
call
stc
sub
or
adc
dec
addr16
mov
scas
adc
cmp
rorl
int3
into
test
fimull
adc
lret
push
inc
xchg
push
fstpt
lret
fwait
lds
mov
insl
cmp
popf
mov
pop
dec
test
out
lret
js
lret
xchg
lret
shrb
mov
ret
jl
push
mov
rol
lret
cmp
or
mov
adc
xchg
lret
or
sub
leave
fidivl
add
xlat
xchg
data16
lret
and
fmull
pop
cli
sbb
pusha
mov
pop
or
fidivl
lcall
xchg
or
daa
aad
stc
lea
push
mov
ror
outsb
sub
mov
and
push
aas
lret
inc
fsub
int
cmpsl
dec
sub
mov
dec
and
loop
lds
lret
addr16
ret
sub
inc
mov
repz
test
ljmp
mov
jnp
xchg
call
js
lods
sbb
lret
mov
mov
pop
pop
test
cwtl
in
aad
rcrb
call
fwait
xor
outsl
iret
orb
jmp
push
adc
jnp
mov
fsubrp
jbe
mov
sbb
movsb
in
dec
or
cltd
stos
xor
mov
adc
lret
lret
and
adc
rcr
dec
adcl
fdivr
jns
sbb
aad
adc
fwait
shlb
lret
pop
clc
pop
pushf
stos
loopne
aas
dec
cmp
adc
inc
pop
sbb
lret
mov
sbb
or
inc
outsl
cmc
push
fimuls
je
adc
adc
leave
aad
and
js
sub
cmp
testb
or
das
bsr
lret
dec
pop
adc
push
mov
add
imul
ret
int3
popa
pop
dec
push
push
lahf
aaa
dec
mov
scas
mov
les
rcll
mov
enter
in
dec
or
push
shrb
ror
push
add
mov
lcall
pop
sbb
out
xor
ljmp
repnz
aad
jno
lret
sbb
iret
lret
sarl
xchg
jb
mov
jbe
xor
ret
xchg
add
lret
in
fwait
xlat
and
dec
push
pop
add
das
movsl
cli
repz
test
mov
sub
stc
sets
sbb
lret
push
pop
cmpsb
inc
lret
sub
cli
scas
ret
stc
movsb
popf
fst
adc
lret
push
pop
mov
inc
fsubrl
pop
inc
adc
push
push
sub
xor
js
sub
repnz
push
mov
mov
int
bound
rclb
rcl
mov
adc
mov
mov
mov
cmp
push
mov
sub
call
or
mov
and
cwtl
push
cmpsl
or
pop
push
sbb
pop
in
pop
dec
push
repnz
mov
sbb
imul
pop
lcallw
cmp
xor
aaa
push
xchg
std
imul
jnp
popf
pop
out
test
pop
inc
mov
outsb
inc
icebp
fmuls
insl
pusha
add
cmpsl
add
mov
mov
nop
and
sub
push
and
insl
mov
test
push
add
xor
fldl
jb
push
adc
xor
call
sti
into
push
fmul
rcll
repnz
sbb
xchg
xor
pop
scas
dec
xchg
in
cli
fs
leave
scas
out
bound
aaa
lret
mov
lret
adc
add
mov
mov
xchg
push
cmp
xor
add
xlat
add
ror
sub
fwait
mov
shrb
aam
lret
es
xor
imul
lcall
dec
cmp
jp
shll
punpckldq
lret
nop
mov
leave
data16
dec
pusha
lds
orl
push
cmp
lret
popa
mov
lahf
inc
lret
lock
pop
outsb
in
lods
pop
sbb
and
mov
xchg
dec
jle
cli
out
xor
sbb
jg
inc
lret
fwait
mov
mov
xchg
insb
shrl
sbb
xor
mov
in
into
mov
clc
pop
fiaddl
inc
mov
mov
mov
xchg
lret
test
call
mov
inc
lret
sub
repnz
int
ss
or
push
loope
nop
or
jae
dec
mov
jmp
testl
pushf
nop
mov
imul
pop
push
and
pop
xor
cli
push
test
icebp
rorl
mov
lods
push
daa
xor
sub
scas
outsl
sub
push
lret
cmpsl
iret
jns
fimull
lret
add
mov
fwait
lods
lret
cs
fisttpll
lret
jle
mov
inc
pop
lret
jno
pop
mov
outsl
roll
stc
inc
adc
mov
popa
and
lret
jg
int
sub
ds
pop
dec
xchg
call
inc
fcmovbe
shrb
adc
pop
sbb
pop
scas
aam
in
ja
lret
mov
cmpsl
shl
int3
pop
push
cmp
repz
repz
push
int
jg
lcall
pop
out
jmp
out
popa
loopne
mov
cmp
aam
jle
adc
fisttpll
xorb
mov
xlat
in
mov
sbb
int3
sarl
lret
idivl
loope
lret
push
fwait
lret
pop
loope
jmp
jge
cmp
pushf
jno
int3
mov
mov
xor
je
das
push
stos
inc
pop
lret
js
insb
out
lret
pushf
xchg
push
xchg
roll
adc
or
dec
fisubrs
es
fcmovbe
fldenv
mov
ds
sbb
ljmp
addr16
push
insb
or
lret
enter
mov
das
scas
mov
push
lret
jmp
repz
adc
ljmp
cmp
out
push
out
ljmp
rclb
xchg
test
mov
gs
xor
insl
dec
cmp
mov
lds
inc
andb
xchg
ror
gs
faddp
jbe
lret
cltd
cmp
adc
popa
sub
orl
out
mov
mov
scas
shr
pop
popa
add
push
mov
out
psubd
stc
mov
pop
cmpsb
add
mov
dec
ret
iret
sub
adc
jae
xor
loop
lcall
inc
enter
into
mov
inc
lret
test
shll
add
and
push
adcl
lret
pop
dec
mov
mov
das
aas
adc
jp
cmp
dec
fsubs
shlb
stos
or
push
out
inc
loop
das
fxch
push
pop
sub
pop
push
pop
dec
test
jmp
lret
shrb
xor
xor
sub
sub
or
jbe
adc
into
mov
std
lret
and
addb
push
test
lret
add
insl
fadds
lret
les
mov
notl
je
mov
xchg
movsb
lret
cs
loop
cli
mov
dec
mov
lods
pop
and
sbb
cmp
mov
adc
xor
std
lret
and
sub
jnp
sub
dec
dec
jg
lret
test
jbe
jecxz
loopne
inc
sbbb
stos
loope
lret
lock
xchg
hlt
std
push
das
lret
fldl2t
cmp
xor
stos
or
push
jae
shl
addr16
std
xorl
test
cli
in
hlt
sub
and
lret
jmp
mov
sub
adc
stos
in
and
stc
insl
adc
xchg
lret
adc
sbb
sub
jge
test
and
sub
sbb
fs
mov
pushf
xor
lret
scas
pop
jmp
mov
rcrb
rolb
jp
push
adc
lahf
fisubl
xor
jl
sub
lods
jns
outsb
pop
popf
xchg
xor
ljmp
jne
pop
inc
push
lret
adc
les
rcl
aam
ss
ljmp
or
or
mov
daa
stos
pushf
adc
push
adc
xor
int3
cli
lret
cmc
subb
jno
pop
xchg
add
in
pop
mov
mov
add
mov
xchg
repz
or
call
cltd
pushf
xchg
shrl
aad
ljmp
or
cmp
movsl
test
push
mov
dec
adc
xchg
jns
sub
pop
lcall
xchg
out
dec
paddsb
dec
inc
adc
pop
mov
xchg
ret
push
jns
rcl
cmp
mov
iret
dec
adc
xchg
mov
fiadds
ret
popf
int3
adcb
sbb
pop
pop
push
comiss
mov
pop
insl
cwtl
pop
adc
pop
xchg
xor
push
decb
fxch
scas
dec
push
mov
mov
push
push
adcb
adc
pop
and
es
add
push
scas
loopne
inc
mov
cltd
pop
int
adc
xor
xchg
loope
orb
fwait
decb
push
pushf
mov
pop
or
cli
mov
cmp
imul
pusha
call
ljmp
shlb
repnz
xchg
pavgb
cs
lret
fsubl
mov
jo
lret
pop
js
cmp
inc
nop
lret
xchg
lods
lret
lret
jp
push
mov
dec
aad
adc
int
out
ja
lret
inc
mov
pop
pop
sti
xor
test
mov
mov
imul
mov
xor
cli
push
mov
push
bound
into
sbb
rol
leave
push
mov
daa
add
and
mov
lahf
push
rorb
push
jmp
sarb
in
push
ljmp
cmp
mov
cli
inc
mov
lahf
cli
imul
sbb
loop
dec
nop
data16
fs
lret
adc
cmp
imul
mov
int3
lret
fcmovnb
in
outsb
cs
pushf
fiadds
test
inc
mull
xchg
jg
pop
pop
cmp
in
les
ret
push
addl
out
test
stos
aam
lock
lret
cwtl
imul
bound
je
mov
lret
adc
scas
jp
fucomi
dec
fsubp
and
cld
lret
std
cmp
lods
xor
lret
ret
mov
loop
lock
fcmovne
arpl
sub
movsl
push
mov
negb
lretw
nop
push
dec
enter
lret
stc
out
pop
cmpsl
mov
mov
push
xchg
call
std
pop
dec
dec
sbb
iret
xchg
clc
cli
adc
push
rclb
sbb
sub
xchg
sbb
push
push
cmp
loop
test
loop
daa
movsb
pop
ror
fmul
push
add
fnsave
fistpll
imul
sbb
jns
stos
pop
mov
rcrl
in
and
sbb
inc
inc
fmul
stos
mov
dec
jl
data16
rcll
inc
adc
sub
mov
push
mov
cmpsb
out
lret
das
xchg
xchg
mov
lds
cmc
adc
pop
js
fst
in
sbb
psubd
xchg
jg
mov
das
bound
shlb
mov
leave
pop
out
shll
lret
call
sbb
into
enter
sub
mov
inc
call
lods
lret
rcrb
xchg
pop
movsb
ja
fisubl
mov
std
jne
lret
or
lret
xor
int3
insl
pshufw
les
mov
lret
and
movsb
jnp
xchg
popa
fnstenv
in
mov
mov
lret
dec
cli
mov
or
addr16
pop
xchg
in
movsl
and
stc
or
lcall
aaa
sbb
push
xchg
and
inc
mov
push
pop
imull
fimull
xlat
inc
in
adc
shll
sub
mov
fdivs
stos
mov
adc
shrb
push
or
and
dec
imul
lea
push
aad
mov
int3
inc
cmp
sbb
jae
dec
into
fimuls
test
outsb
and
insl
out
fmul
or
or
push
add
cmpsl
jmp
dec
sbbb
jae
shll
scas
push
lret
bound
adc
lret
mov
int
sbb
mov
ror
lret
add
popf
or
shrb
stc
scas
aad
adc
outsl
shr
cld
cli
or
cmpsb
sub
or
cltd
or
adc
sub
fimuls
je
cmp
pop
mov
mov
xlat
repz
stos
fmul
xchg
lea
inc
sbb
and
jae
shl
cmpsl
loope
mov
mov
sbb
mov
or
and
out
jb
into
mov
lret
ds
fcoml
cmc
es
jl
push
lret
push
lret
mov
pop
dec
notl
cwtl
movb
mov
outsb
jl
lret
les
and
pop
decb
push
mov
dec
sub
cmp
loopne
movsb
add
decl
push
add
mov
ror
adcl
mov
pop
andb
mov
pop
push
add
mov
cld
or
or
in
repz
pop
in
push
ficoml
movsb
xchg
aam
fwait
sti
dec
push
lret
aas
mov
sti
push
out
lret
pop
jne
insl
mov
lret
das
fnstcw
icebp
add
cmc
addr16
add
popa
jp
or
or
add
mov
lea
dec
std
mov
rorb
sbb
sbb
mov
or
dec
movsl
mov
lret
xchg
addb
dec
mov
adc
int
mov
aad
stc
repnz
fs
dec
sub
xor
dec
repz
or
loopne
and
fldenv
xchg
xchg
and
add
pop
sbb
int3
neg
jge
or
les
lret
test
dec
xlat
sahf
sub
dec
adc
xchg
pop
sbb
lret
jmp
lods
cmc
insl
adc
rcrb
imul
ss
or
adc
push
lret
aaa
cld
idivb
pop
cmp
test
lret
hlt
push
or
jmp
js
sbbl
mov
insl
sahf
push
iret
lock
sub
mov
xchg
sub
or
sahf
lock
pop
imul
jp
lret
in
inc
adc
xchg
mov
dec
cmpb
fwait
out
lds
jno
dec
add
into
imul
shrl
lret
mov
sub
jne
ljmp
xchg
test
jge
test
fwait
rclb
imul
push
mov
adc
aam
inc
test
ret
sti
addl
push
pushf
sti
or
jecxz
xor
aas
or
repz
mov
push
dec
ret
and
fcmove
idivl
adc
aaa
dec
mov
rcl
push
push
mov
cmp
or
pop
aas
repnz
or
sub
push
pop
xor
or
push
xor
dec
xor
mov
scas
dec
mov
pop
jb
mov
imul
pop
mov
in
rcl
sub
push
pop
or
or
xchg
push
jl
jp
and
loopne
sbb
dec
push
pop
sbb
pop
and
std
fstpt
mov
and
cmp
cmpsl
std
mov
xor
hlt
mov
cmp
mov
xchg
test
out
mov
adc
iret
xchg
lock
fisubrs
outsb
faddl
out
leave
lea
movsl
js
cmp
sub
into
mov
fisttpll
or
or
je
xchg
loop
sbb
lret
push
stos
push
rorl
outsb
lret
pop
mov
and
lret
pop
sub
lret
xchg
mov
nop
or
fbld
popa
lret
aas
jl
cmc
arpl
cltd
lret
xchg
mov
xor
sub
ror
mov
arpl
shrb
cmp
mov
int
ljmp
int
leave
pop
fnsave
mov
sarl
jge
push
pop
push
cmp
adc
pop
mov
dec
stos
idiv
ds
into
push
mov
pop
sahf
lret
mov
scas
pop
fsubrs
xchg
sub
sub
push
or
mov
pop
ljmp
push
ljmp
iret
cmp
ficoml
aad
cli
jl
les
insb
dec
push
or
xor
enter
inc
lds
lods
pmaxsw
dec
mov
shrb
mov
test
lret
add
ja
mov
movl
dec
lcall
out
lret
inc
mov
cmp
jns
rol
mov
push
cmc
push
lret
pushf
sub
pop
adc
jp
pop
mov
lret
sbb
inc
dec
ljmp
fdiv
add
rol
subb
pop
pusha
sub
mov
cmpl
stos
dec
rorb
rol
cmp
insb
lds
cmp
push
jnp
inc
icebp
movsb
lret
dec
gs
shll
loope
fwait
mov
sub
test
xor
insl
mov
stos
lods
push
into
cwtl
dec
push
popa
inc
ljmp
pop
dec
or
int3
pop
imul
jns
xchg
or
in
dec
xchg
jecxz
cs
rorl
jg
into
fs
fimuls
ret
mov
cmpsb
loope
lret
andb
enter
mov
xchg
cmp
jnp
push
jmp
sarl
jle
lods
xchg
test
fimuls
mov
in
jge
xor
or
das
and
or
shlb
inc
dec
adc
loope
push
shrl
subb
mov
adc
adc
xchg
insl
popf
cmp
pop
jno
xlat
int
rcr
cli
jae
pop
ret
sahf
fistps
jmp
imul
scas
test
imul
adcl
jg
inc
into
imul
jge
addr16
cmp
ss
dec
xorl
jo
iret
bound
mov
cmp
pop
pop
fcmovbe
jne
mov
mov
pop
out
hlt
and
in
jp
adc
int3
push
and
lcall
cwtl
cltd
imul
insb
aas
push
shr
pop
adc
out
jo
sub
sbb
adc
fnstcw
fbstp
js
xchg
and
push
fs
xchg
jle
mov
inc
rolb
fwait
mov
imulb
rorb
mov
cmp
or
or
pop
adc
push
sbb
divb
ja
fcoml
mov
lret
mov
inc
sbb
lret
or
cli
mov
fistps
mov
lret
dec
leave
pushf
fwait
je
mov
ficoms
push
inc
pop
pop
movl
mov
jnp
push
pushf
gs
ficompl
fs
xlat
mov
and
mov
lret
jns
adc
mov
stos
idiv
flds
popf
aad
test
push
xchg
lret
cmc
jecxz
xor
cli
int
insb
loop
sahf
in
mov
test
lret
mov
sbb
loope
sub
ja
testb
push
decl
into
push
das
sub
mov
push
hlt
bound
pop
testb
stos
iret
mov
xor
adc
cli
rcrb
adc
stos
sarb
pop
repnz
scas
mov
int3
fimuls
in
jnp
sbb
inc
out
and
and
shlb
shlb
test
scas
fmul
jp
shrb
xchg
cmp
sti
or
pop
cmp
sbb
pop
xor
dec
rorb
inc
push
rcr
push
roll
or
std
push
orl
nop
mov
sarb
stos
call
or
dec
out
sbb
adc
sub
push
jmp
mov
nop
lret
aas
push
fiadds
outsb
and
test
decb
push
mov
lret
cmp
or
adc
xor
test
aas
cltd
push
mov
lret
repz
cmp
outsb
les
and
das
push
loopne
add
or
sti
inc
and
inc
mov
lods
add
mov
mov
stos
andb
sarb
adc
call
insl
mov
idivl
dec
test
negb
push
sti
or
pop
xor
scas
loopne
sub
dec
or
fdivrs
ss
adc
in
push
dec
pop
jl
dec
fldenv
fcmovbe
pop
loope
pushf
cli
test
push
jno
push
sub
jp
in
mov
push
sahf
int
cmp
xor
adc
je
pop
shlb
dec
ud1
mov
xchg
cld
je
bound
lret
push
cmpsb
ficomps
jo
or
mov
js
in
inc
or
adc
fidivrl
lret
xor
das
shlb
push
rcrb
push
stos
sti
mov
cmp
rolb
ljmp
mov
lret
cmp
cwtl
mov
icebp
arpl
add
xchg
repz
sbb
mov
mov
jp
aaa
pop
sub
and
pop
push
mov
dec
adc
sub
pop
or
mov
dec
and
mov
dec
inc
in
mov
mov
sti
cltd
or
leave
fisttpll
adc
std
xchg
mov
addr16
js
pushf
mov
xor
idivb
fwait
ret
push
lret
lcall
jmp
push
jmp
ret
or
push
popa
push
sbb
repz
push
xchg
add
add
rcr
lods
fsubrl
dec
fcompl
aad
cs
xor
and
xlat
push
imul
sbb
dec
mov
movsb
push
rorb
pop
int
subb
mov
icebp
xchg
stc
and
aad
imul
bound
mov
out
sbb
jmp
mov
js
push
ficompl
mov
dec
xchg
mov
lret
mov
push
xchg
fidivl
cld
inc
popa
pop
lea
lahf
xchg
mov
xchg
push
add
mov
lret
fwait
inc
inc
push
iret
cld
lret
or
cmp
and
cwtl
ss
or
jo
or
cmc
dec
fidivrl
mov
lcall
rorb
int
loope
cwtl
in
andb
or
popf
push
dec
aam
shll
std
lahf
stc
cmpsl
and
lcall
and
sbb
das
add
movsl
dec
jp
mov
mov
ja
lret
mov
aad
movsl
rol
jae
inc
cwtl
inc
lret
gs
leave
cs
xchg
sub
jl
out
dec
pushf
lahf
inc
push
xchg
sbb
in
mov
push
arpl
fldcw
ret
loop
add
vmwrite
mov
adc
push
jbe
andb
shrb
add
inc
out
popa
xor
or
movsl
call
mov
or
mov
shll
lret
sti
mov
cmp
cltd
add
xchg
mov
sub
dec
mov
insb
pushf
cli
shlb
arpl
jno
mulb
mov
int
mull
mov
xor
push
pop
sbb
fidivl
dec
stc
fst
out
jb
push
in
clc
ss
jbe
cmp
dec
test
cli
loop
mov
test
out
js
neg
mov
cmp
mov
ds
pop
divb
outsb
cld
mov
shlb
call
dec
xchg
pushf
lcall
fwait
mov
xchg
xchg
iret
push
lret
dec
outsl
out
sub
push
int
test
loopne
jo
adc
sub
add
and
jecxz
fdivp
mov
cmp
dec
inc
dec
int
lods
inc
addr16
aaa
rcrb
fisubrl
inc
fucomip
stos
xchg
add
pop
adc
ljmp
mov
push
dec
jge
rcrb
add
mov
fidivrl
dec
movsb
mov
add
cwtl
scas
mov
push
cmp
fisttps
in
rcrb
mov
repz
int3
cli
stc
lcall
pop
mov
sub
movl
addr16
lock
mov
sbb
and
jge
lret
sbb
pushf
dec
pop
push
lret
jae
rcrl
push
jbe
push
lret
cmp
scas
mov
adc
in
in
sarl
push
lahf
inc
push
jne
push
cli
mov
push
push
cmc
xchg
jecxz
shlb
int3
pop
cmp
or
mov
stc
dec
mov
sbb
testl
dec
mov
pusha
rcrb
inc
lret
lret
idivb
fnstcw
repnz
lret
or
lret
in
fsubs
loopne
pop
lret
pop
add
aad
jns
push
lret
mov
sub
mov
or
ds
lea
pusha
bound
dec
stos
repnz
loope
fcomps
rcrl
mov
mov
push
mov
iret
jmp
lret
mov
mov
or
lret
mov
lods
push
ret
mov
sbb
imul
shrl
adc
pop
mov
lret
in
jge
lret
outsb
test
lret
repnz
xchg
add
pop
cli
jle
mov
lret
push
popf
adc
shrl
push
lret
out
adc
scas
cmc
iret
mov
outsb
ror
out
push
mov
cmpsb
in
sub
cmp
inc
out
cli
test
xor
jbe
and
add
cmpb
push
lret
inc
lret
mov
loopne
data16
mov
jae
idiv
cmp
lret
xchg
sbb
in
test
pop
pop
inc
test
lret
rcrl
roll
and
mov
mov
aad
mov
rcr
jp
dec
test
cmp
lret
xchg
mov
lret
adc
cwtl
bswap
pop
enter
cmp
repnz
test
aad
movsl
sbb
push
cmp
popf
insl
mov
xlat
jne
fiaddl
lret
xor
add
pop
ror
xor
push
mov
into
dec
pushf
xchg
xchg
jmp
out
jecxz
call
dec
inc
test
and
cmc
lret
push
mov
lret
pushf
adc
fisttpl
mov
jg
pop
notl
subl
sbb
fsts
xor
lret
repz
test
lret
nop
adc
lret
in
loopne
lret
xchg
mov
add
shlb
add
test
enter
jnp
pop
loop
xchg
dec
sbb
lret
xor
lret
xor
mov
inc
jns
loopne
sbb
repnz
andl
lcall
jge
inc
rcl
std
rolb
pushf
lret
cld
fs
sbb
cmp
mov
inc
ret
ror
lret
lea
test
adcl
mov
xchg
cltd
pop
cmpsl
mov
jle
addr16
xchg
hlt
mov
lret
out
loop
ja
adc
inc
xchg
sub
xlat
lret
jnp
lea
xchg
inc
dec
fdivs
jmp
pushf
mov
push
into
aaa
pusha
cmp
push
outsb
mov
shl
jecxz
sarb
pop
stos
test
lret
jns
sarb
add
push
cmc
call
loopne
imulb
lret
in
ja
push
lret
sub
enter
or
aaa
sbb
cmp
fwait
adc
xlat
inc
leave
rol
dec
mov
xchg
dec
sbb
push
xchg
cltd
and
aam
popf
xor
shlb
cmp
mov
adc
mov
popa
in
cld
cmp
inc
cmove
fadds
daa
cltd
enter
lretw
dec
idivl
cmp
repz
dec
pop
movsl
sub
mov
pop
lret
dec
out
cs
test
lret
add
inc
lret
mov
mov
jbe
jg
xchg
xlat
repz
sti
xchg
notb
jne
ficompl
popf
xchg
mov
ror
dec
jmp
xchg
decl
jnp
push
and
adc
xor
mov
add
enter
ret
sarb
fisubrl
jle
xchg
addr16
call
fidivl
jae
xor
stc
pop
jecxz
lret
mov
jmp
mov
out
dec
sub
inc
daa
or
mov
jg
jbe
pop
addr16
fcomi
and
cltd
sub
mov
mov
cmc
mov
push
and
jecxz
dec
mov
dec
jnp
ja
int
lret
and
sub
push
lret
cs
jp
lret
test
mov
or
pop
inc
cmc
inc
lret
adc
push
sarb
je
xor
pop
nop
sbb
add
mov
lock
sub
loopne
cltd
lcall
pop
pop
lret
pushf
mov
sub
fstpl
xor
and
cltd
adc
inc
pop
push
xchg
popf
push
ljmp
into
add
cmp
fsub
lea
push
arpl
xchg
jecxz
mov
pop
jnp
lret
sub
fcomps
out
cld
dec
sti
faddl
rcr
adc
mov
shrb
jbe,pn
sub
lret
push
and
ds
popf
int
sub
lret
rol
jl
adc
iret
xchg
cld
adc
jmp
push
cwtl
mov
and
in
scas
cmp
rolb
sub
popa
test
mov
fcomp
or
lret
xor
cltd
mov
fcmove
mov
adc
push
fdivr
jo
push
ficomps
mov
out
fwait
pusha
out
inc
cmp
jle
cmp
jecxz
sub
inc
lret
out
jg
jmp
fisubs
cli
push
addr16
cld
cmp
int3
sbb
mov
aad
cmp
insl
js
cltd
lret
dec
sub
shlb
fisubl
push
ficoms
mov
xor
push
inc
lret
xchg
nop
stos
repnz
rorb
push
lret
xor
mov
lret
mov
das
xchg
cli
add
ljmp
lret
stc
dec
sub
or
adc
add
lret
jns
lock
arpl
in
push
repz
ljmp
shl
xchg
adc
push
fildll
iret
push
inc
popf
mov
lret
arpl
push
cmc
inc
lret
in
fwait
and
test
int
mov
push
out
pop
imul
cmc
arpl
test
sahf
pop
sbb
int3
add
shrb
incb
roll
jg
and
mov
mov
rcl
push
sub
dec
jg
cwtl
sarl
aas
out
mov
sub
in
mov
lds
push
sbb
mov
decb
inc
lahf
and
mov
fnstcw
mov
push
rol
aaa
andl
pop
push
xchg
fwait
xor
outsl
pop
push
lods
loop
lret
mov
lret
cmp
xor
gs
xchg
fisubrl
push
stc
stos
cmpsl
in
stos
or
js
push
lret
pop
int3
xlat
cmp
fdivs
push
push
mov
cmc
xchg
sbbl
xchg
push
test
rcr
xlat
nop
inc
loopne
sbbb
xor
adc
jbe
das
lds
cmp
icebp
shll
add
imul
loop
add
fldlg2
xchg
pusha
jmp
mov
lret
in
orb
lret
xor
xchg
jp
or
pop
or
aaa
data16
jl
push
and
jno
in
pop
sbb
xchg
imulb
in
jmp
mov
fcomps
out
xchg
pop
xchg
xor
cmp
add
adc
xchg
mov
sub
inc
scas
and
inc
sti
leave
pop
add
mov
dec
push
inc
pop
push
push
lret
adc
int
push
add
push
push
xor
dec
mov
ret
rclb
jmp
clc
cmpb
stc
lcall
fcomps
push
subb
sub
and
or
mov
mov
jne
aad
jp
cmp
cmpsb
sub
pop
mov
imul
sub
mov
cmpsl
lret
or
mov
lock
pop
xor
push
xchg
adc
fnsave
fstpt
stc
cmp
push
fdivrs
into
push
and
bound
jb
fwait
dec
dec
add
fdiv
push
scas
divb
imul
jno
test
jbe
rorl
xchg
xchg
ret
pop
push
xchg
adc
mov
jmp
cltd
in
push
or
int3
push
sti
iret
xchg
sbb
pop
mov
cmp
sub
iret
dec
xor
loop
mov
leave
xor
push
pop
sub
sbb
push
ljmp
xor
sbb
add
leave
xor
adc
idivl
cmpl
pop
inc
push
in
push
mov
rcrb
lret
or
fs
adc
push
pop
std
lods
in
mov
movsl
fwait
cmp
pop
add
push
loope
ljmp
push
or
loopne
rcrl
cmp
test
shr
add
jmp
sbb
out
sahf
or
jecxz
pop
cmp
mov
jl
sub
ficompl
fldcw
sarb
testl
push
add
and
in
push
adc
je
mov
pop
lret
cltd
sub
sbb
mov
xchg
xchg
popa
cli
dec
imull
pop
adcl
hlt
pop
dec
dec
movsl
and
sub
loope
pop
push
mov
dec
or
fisubl
or
xchg
in
or
push
pop
roll
xchg
jecxz
int
pop
mov
ret
sbb
push
test
xor
cli
xchg
cld
sub
dec
jmp
subl
sbb
push
clc
mov
cs
xchg
cmpsb
ret
bound
xor
jg
mov
fcomip
out
push
mov
fstpt
out
cli
movsb
mov
dec
pop
fimull
test
arpl
or
pop
repz
test
sbb
sti
cmp
pop
in
outsb
lret
shlb
mov
and
inc
iret
cmpsl
adc
addr16
jp
mov
les
ds
jecxz
cmp
add
in
addr16
cwtl
pop
rclb
or
decb
mov
pop
pop
mov
and
in
lock
rcr
or
inc
lea
mov
and
or
lret
push
mov
inc
iret
pop
dec
shr
push
mov
das
cmp
cmp
imul
push
mov
push
out
dec
test
ret
dec
mov
add
fcom
xor
mov
sub
pushf
aas
fnsave
loope
pop
call
imul
push
mov
pusha
in
cmp
sti
mov
or
inc
sub
shl
cwtl
inc
cmpsb
xor
icebp
dec
and
jmp
adc
push
sub
dec
js
dec
mov
pop
ror
push
lret
push
or
add
add
mov
dec
inc
aad
mov
hlt
xor
test
iret
mov
sub
fiaddl
rorl
cltd
sbb
rolb
clc
loop
xor
aad
movsb
xor
mov
daa
jns
aas
and
push
dec
lcall
ljmp
lret
sarl
mov
pop
or
test
arpl
xor
push
aam
clc
inc
int3
inc
ja
sbb
gs
dec
mov
rorb
push
add
cmp
lret
jg
adc
dec
or
mov
les
xchg
xchg
push
shlb
pop
aaa
or
insl
rdpmc
push
sbb
cmp
mov
mov
xor
sub
xchg
jp
or
int3
push
movsb
xchg
aam
xchg
cmp
les
shlb
mov
insb
imul
or
sbb
enter
scas
mov
ret
adc
call
mov
test
xor
fisubs
jl
dec
sub
dec
mov
mov
out
sub
arpl
mov
out
and
stc
xchg
jg
pop
push
xorb
loop
loop
jb
mov
sbb
mov
or
stos
shrl
pop
xchg
adc
push
or
mov
fnstcw
dec
push
push
push
jecxz
inc
lret
test
push
mov
add
pop
rorb
mov
lods
popf
int3
mov
sub
mov
xor
jb
adc
cli
cmpsb
jo
das
out
fcmovne
rorl
vpcomb
jnp
loope
cs
push
pop
pop
sahf
pop
xor
sbb
sar
and
cmpsb
push
xchg
dec
lahf
lods
clts
pusha
add
mov
addb
jmp
pop
call
push
pop
into
test
pop
aad
lcall
lea
pop
push
push
push
pop
mov
push
sub
ror
in
sub
mov
jae
add
ficoml
aad
push
lock
int3
or
xor
push
jmp
sarb
push
mov
xlat
es
xlat
push
pop
add
arpl
push
jle
jg
add
or
and
sub
cmp
rcr
je
icebp
das
aad
push
daa
loop
jns
shrb
pop
mov
cmpsb
xor
int
add
and
or
jo
dec
call
icebp
cmc
push
arpl
push
out
adc
lret
cmp
push
pop
mov
insb
lea
pusha
or
or
negl
pop
and
or
aam
xchg
test
insb
outsb
mov
int3
movsl
pop
xor
inc
ficomps
mov
lret
pop
inc
iret
outsl
pop
add
or
addr16
push
jl
sbb
js
fmul
or
xchg
ljmp
push
loopne
mov
dec
push
lods
sbb
repnz
in
out
xchg
adc
imul
dec
xor
jg
push
pop
xor
int
movsl
and
jne
and
je
daa
into
push
out
mov
or
push
push
cmpb
inc
or
sub
in
adc
sbb
ffreep
xor
js
out
mov
dec
int
rcr
pop
lahf
mov
mov
stc
mov
push
and
sahf
sarb
punpckhbw
jne
repnz
iret
sbb
jns
pop
adc
pop
orl
mov
fcomi
cmpsl
data16
mov
pop
dec
add
push
xchg
xor
push
lcall
sbb
gs
jbe
xor
xchg
in
mov
out
pop
in
push
fcoms
filds
in
scas
loop
shrl
lcall
lahf
rcrb
sbb
sbb
pop
sbb
dec
jge
out
and
gs
repz
mov
fwait
push
iret
or
xchg
fs
lret
add
fs
push
imul
pop
cmp
jne
pop
dec
mov
and
cmp
outsl
push
clc
hlt
inc
shlb
inc
and
pop
es
popf
mov
fidivrl
push
je
loope
rcrb
sbb
into
popw
push
mov
test
cmp
outsl
and
sbb
test
dec
sbb
loop
push
cmp
cli
shr
mov
lods
mov
dec
movsl
bound
shlb
mov
push
movsl
lret
or
maxps
sbb
jns
xor
pop
mov
cmp
adc
inc
push
lcall
mov
lods
stos
mov
mov
or
fisubrl
sbb
cmp
dec
repz
call
or
or
pop
int3
test
out
neg
xchg
mov
rcrb
je
out
aas
lea
add
push
ja
xchg
out
dec
push
repnz
cwtl
and
push
push
call
pop
scas
ja
mov
pop
mov
iret
out
dec
lret
adc
call
sub
sub
cmp
in
xor
lcall
fwait
js
jae
es
aaa
sbb
cmp
adc
rcll
cltd
sbb
rol
mov
fstl
cmpsl
dec
xchg
into
jnp
into
jne
adc
cmp
cmc
daa
fsubrp
fs
xchg
ret
pop
ss
pop
pop
fiaddl
fisubl
pop
pop
int3
fimull
mov
pop
sbb
dec
fdivr
rcrl
or
out
rcll
push
fstpl
loopne
lea
rolb
dec
xchg
int3
and
into
and
das
repz
jbe
push
and
sub
add
out
dec
or
or
push
and
sahf
push
dec
adc
das
repz
out
push
or
mov
push
and
push
fmull
adc
inc
stos
sbb
pop
dec
rcll
or
xchg
and
lahf
and
dec
dec
push
das
pusha
adc
xchg
pop
push
in
ror
or
push
cmpb
dec
into
adc
mov
iret
adc
repnz
cmc
dec
push
aad
adc
js
cmpsb
aam
push
ficoml
adc
jo
push
cmpsb
dec
pop
xchg
or
or
es
adc
xor
xchg
das
pop
or
and
dec
fcom
cmpsb
rcrb
test
mov
mov
shl
dec
out
push
jmp
push
int
sahf
rcrl
in
dec
dec
adc
or
lret
fstps
mov
and
pop
dec
push
push
out
imulb
cmc
bswap
mov
adc
repnz
sti
dec
clc
movsb
mov
jb
push
mulb
xchg
add
jae
std
adc
push
das
lret
dec
das
dec
lea
aaa
rcr
dec
sub
ficoms
push
ficomps
pop
xchg
pop
push
fimull
pop
dec
or
cs
xchg
sub
mov
lret
push
dec
pop
push
xchg
adc
fmull
or
jl
or
xchg
arpl
sbb
and
mov
xchg
roll
daa
sub
lods
push
mov
pop
or
pop
sarl
or
notb
imul
inc
sub
jns
jae
mov
dec
sub
outsl
pop
dec
push
or
push
loope
fidivl
out
push
sub
repz
xlat
add
fdivp
cmp
pusha
test
mov
sub
ror
or
cmp
push
hlt
cmovnp
cmp
push
jmp
jle
inc
add
push
push
jns
stc
movsb
pop
jns
lahf
jmp
jbe
inc
addb
sbb
pop
call
sbb
iret
clc
mov
shll
int3
dec
push
rolb
aad
mov
push
lcall
pusha
ret
mov
and
fwait
push
xor
sbb
jb
rcrb
mov
into
add
pop
outsb
sti
fisubrl
or
out
pop
pushf
mov
inc
lret
cmp
or
push
js
lea
test
popa
cmp
ljmp
sbb
rcr
out
repz
rcl
icebp
out
jg
out
es
xchg
jecxz
mov
addl
ds
call
int
jbe
lret
push
in
or
cmp
push
imul
test
adc
stos
add
push
divl
pop
dec
cmpsl
das
xchg
out
sub
test
jp
and
jns
out
lcall
sub
loop
in
pop
sbb
sub
sub
adc
mov
out
mov
jecxz
stc
xor
or
xlat
pop
pop
inc
cli
test
xor
lea
mov
sub
xor
stos
mov
pop
andb
sub
ret
js
mov
jle
pop
xchg
jne
daa
sub
aad
bound
lret
leave
mov
dec
xchg
mov
loop
cwtl
mov
in
imul
push
xor
jecxz
pop
mov
sti
out
test
jecxz
cli
and
cmc
cmp
int3
add
leave
add
out
or
ret
jbe
xlat
xchg
sbb
mov
out
sub
ljmp
pop
rcl
add
push
shl
repnz
shlb
jbe
int
pop
adc
repnz
rcrb
out
xchg
cli
mov
mov
cmp
cmp
call
insb
fisubrs
and
cmp
pop
rol
cltd
das
jno
mov
sti
or
cli
into
inc
lods
cmpsl
mov
sarb
xor
push
lock
in
lret
pop
cli
rol
mov
push
pop
cmp
jecxz
dec
jge
sub
pop
repnz
xor
addr16
or
out
push
in
mov
jns
adc
sbb
fnstcw
scas
enter
sub
cmpsb
aas
notl
daa
adc
sbb
stc
xchg
or
mov
ss
paddq
or
fst
and
push
into
call
or
xlat
cwtl
aad
mov
into
sub
mov
stos
or
std
adcb
imulb
out
dec
pop
mov
pop
mov
subb
sbb
pop
repnz
mov
mov
cwtl
push
xchg
pop
sbb
sbb
sbb
lods
dec
lret
sarb
pop
mov
mov
les
pop
sub
and
cli
dec
pop
push
push
or
or
push
iret
sbb
nop
fstl
add
mov
jbe
mov
jmp
jnp
int3
mov
and
dec
pushf
test
xor
dec
ljmp
addl
mov
mov
das
outsl
jmp
push
mov
dec
jmp
daa
push
lds
add
lret
in
ljmp
cmp
fucom
push
jle
xlat
pop
insl
lods
cmp
and
loop
pop
stc
add
mov
jp
cs
rorb
fs
pop
ffreep
or
loopne
pop
shrb
dec
out
dec
loopne
lods
push
mov
inc
rolb
push
dec
pop
sub
sub
cmc
ret
js
xchg
sbb
imul
push
mov
stos
cwtl
pop
mov
imul
cmp
mov
push
pop
clc
inc
mov
pop
nop
jo
cmpsl
and
cmp
or
clc
lcall
hlt
xchg
sti
xchg
inc
aad
lgdtl
bound
cmp
lea
pop
dec
sub
insb
loope
jle
jp
cmovbe
out
pop
shl
adc
int
pusha
sbb
push
cwtl
std
and
dec
testb
ret
or
xchg
adc
adc
dec
lret
stos
pop
pop
push
xor
push
movsb
stos
and
push
add
shlb
cld
and
cwtl
push
loop
push
sarl
nop
clc
pop
repnz
hlt
pop
mov
pop
cs
lret
mov
push
shll
adc
imul
enter
in
loop
add
cmp
xchg
mov
in
shlb
icebp
loope
insb
pop
sub
push
pop
int
pop
jmp
std
ljmp
in
jno
push
pop
mov
hlt
dec
lea
xchg
shr
imul
sahf
arpl
mov
scas
jecxz
push
int3
jg
add
cs
push
mov
pop
sub
push
into
scas
and
jp
out
push
push
mov
or
dec
shr
xchg
cld
push
loop
cmpsb
dec
push
pop
imul
sub
insb
cmp
lret
lock
ds
pop
mull
sbb
bound
and
iret
pop
add
imul
in
int
sbb
das
cmp
mov
add
sub
adc
out
pushf
or
pop
rorb
inc
loope
lock
mov
push
sbb
mov
push
stc
subb
and
rcr
push
ds
and
jb
or
xchg
stc
cltd
repnz
push
dec
push
or
ret
mov
and
packssdw
neg
aaa
loop
jae
jmp
push
and
aas
ja
dec
add
push
bound
mov
int3
out
loop
or
andb
cld
push
aam
cwtl
mov
cwtl
jecxz
sbb
pop
repz
iret
sbb
add
or
out
push
mov
jp
fldt
and
or
and
pop
outsb
in
xor
enter
enter
iret
popa
jg
shll
nop
fbstp
push
icebp
pop
test
mov
daa
jg
dec
push
arpl
pop
and
push
out
shl
ret
push
fs
pushf
dec
push
sbb
sbb
arpl
gs
scas
push
lret
pop
inc
and
into
das
xchg
sbb
cmp
into
jns
pop
and
int3
rcll
ljmp
aaa
movb
aam
pop
mov
int3
mov
push
ret
pavgw
pop
push
dec
out
cmp
mov
fnstsw
cmp
imul
xchg
add
notl
pop
xchg
or
mov
mov
jbe
jbe
adc
xor
and
cmp
cmp
jg
xchg
lds
jb
xchg
mov
sbb
fsub
sub
and
inc
insb
sbb
dec
mov
mov
aas
adc
pop
jo
cmp
push
sub
or
cmp
adc
sub
sbb
pop
pop
cmp
sub
dec
call
or
push
or
test
push
cli
push
inc
addr16
cmp
push
es
pop
lea
cwtl
pop
daa
loopne
psrad
fstps
outsb
ljmp
lahf
mov
lods
sbb
and
push
xor
mov
lcall
mov
mov
mov
adc
stos
jle
sbb
ds
pop
add
add
adc
mov
xchg
jb,pn
inc
mov
sti
push
pusha
in
enter
pop
mov
imul
mov
jns
test
cmp
jmp
stc
mov
out
outsb
or
mov
mov
sti
stos
xchg
scas
mov
xchg
ffree
repz
ret
sbb
mov
or
mov
test
addb
movsb
mov
psrad
mov
pop
adc
int
das
outsl
mov
sarb
push
pushf
push
inc
cmpl
clc
inc
ljmp
movsb
dec
out
pushf
add
jle
mov
xchg
sti
call
lahf
xchg
out
clc
int
jne
loop
mov
gs
dec
dec
push
loope
cmp
data16
mov
popa
out
jmp
jecxz
stc
adc
jmp
sbb
or
fsubs
in
inc
pop
lcall
into
stc
into
lods
lret
push
push
sbb
or
xor
jnp
stc
ret
incb
dec
ss
cmpsl
lahf
push
sbb
scas
scas
std
mov
xlat
or
cmp
jb
push
mov
shl
inc
sub
icebp
clc
insb
inc
aaa
mov
inc
out
fcomp
lret
push
xchg
sbb
hlt
aad
lret
popa
stos
mov
ret
pop
repnz
sbb
adc
jno
pop
outsl
jns
hlt
sbb
adc
cmp
cli
mov
xor
jno
mov
pop
mov
out
sbb
fmuls
in
mov
ret
test
and
test
push
push
les
out
stos
jl
out
jl
out
jbe
add
int
clc
pop
data16
aam
and
imul
cmpl
shlb
filds
sbb
ljmp
mov
lods
xor
inc
shll
leave
or
or
cmp
adc
mov
jl
imul
lea
shll
xchg
push
push
add
jae
pop
pop
pop
dec
push
popa
jae
fsubrs
mull
dec
jmp
mov
push
pop
addl
and
iret
hlt
sub
lea
xchg
mov
pop
shl
mov
es
xor
out
bswap
dec
fcomps
pop
pop
dec
addr16
push
andl
xchg
adc
mov
push
dec
pop
loopne
pop
cli
xchg
add
adc
jg
xchg
dec
rcl
test
xchg
outsb
lods
sarb
push
test
in
jg
shll
inc
push
into
pop
dec
out
lods
or
hlt
mov
pop
nop
call
and
dec
sub
es
mov
addr16
lea
cmc
ret
dec
push
lret
sti
mov
and
add
jns
fidivrs
aad
fdivrp
into
in
push
xchg
and
int
in
mov
mov
pop
xlat
cmpsb
rorl
scas
shlb
lret
fcomps
jp
sub
addr16
repnz
dec
and
push
ljmp
mov
into
rcl
out
ss
xchg
pop
jle
jns
xor
push
mov
mov
fistpll
lcall
push
pop
push
imul
mov
pop
jp
dec
insb
mov
cwtl
inc
pusha
pop
addl
fdivr
rclb
iret
sub
rcll
sub
rcl
int
mov
fdivrl
jne
xchg
insl
pop
movsl
inc
imul
lds
jmp
mov
cmp
or
scas
or
jne
xchg
xchg
scas
cmp
cmc
xchg
dec
mov
adc
xor
idivb
ss
loope
lock
dec
adc
andb
aam
rcl
nop
xor
scas
lret
cmp
pop
or
stc
dec
insl
sarb
imulb
pop
sub
inc
jae
sub
dec
add
gs
sub
pop
xchg
fcoms
imul
sarb
fs
shll
lret
movsb
or
jp
push
pop
stos
in
movsl
in
lahf
mov
shll
jno
pop
mov
cli
popa
stc
rcll
test
inc
mov
jmp
xchg
bswap
cmp
adc
inc
out
inc
or
loop
rolb
cltd
push
aaa
xchg
and
or
push
out
pop
push
push
adc
xor
jp
stc
dec
mov
add
pop
ja
ret
ss
push
pop
pop
mov
adc
insb
pop
sbb
jecxz
cs
cmpsl
dec
test
in
xor
mov
dec
sar
add
adc
jo
into
cld
cwtl
cmp
adcb
hlt
mov
pusha
add
inc
dec
jecxz
loop
pop
cld
idivb
mov
movsl
mov
push
mov
push
repnz
push
inc
int3
lcall
divb
fcomp
xor
mov
pop
sub
mov
mov
adc
or
dec
enter
xchg
repnz
hlt
sbb
testl
bound
xor
or
and
dec
scas
clc
pop
jmp
adc
jnp
sti
inc
repz
addr16
pop
test
shll
xchg
jns
adc
inc
sub
cmp
push
cmp
push
sbb
fcomps
add
sbb
xlat
outsb
imul
push
xor
and
mov
add
and
and
sbb
or
jl
mov
sbb
push
pop
xchg
cwtl
xchg
pop
into
mov
pop
filds
cmp
mov
cmpsl
cltd
jmp
pop
cld
pop
dec
ds
push
push
inc
int3
sub
inc
sbb
and
fstl
imul
in
decb
inc
bound
fwait
lods
or
mov
pop
psubsw
rorl
fistpl
cmp
and
dec
fmuls
iret
fdivrs
mov
call
mov
dec
lret
xchg
cmp
or
add
nop
jge
add
add
add
xchg
dec
sub
int
or
fsts
sbb
xor
xlat
mov
pop
or
int3
add
or
fistps
movsb
fnstsw
aad
pop
aas
in
rcrb
cwtl
sarl
lret
mov
inc
or
shlb
push
sbb
fisttpl
loop
std
dec
or
xor
cli
jne
fistl
sub
jns
sub
push
push
pop
inc
push
cmpsb
clc
mov
cld
xchg
test
pop
inc
aad
mov
push
in
jecxz
push
test
xchg
cli
mov
jbe
fsubrl
popa
icebp
cmp
inc
bswap
ds
adc
stos
punpcklbw
out
iret
leave
gs
fiadds
mov
ret
add
cli
fcomp
stos
out
xlat
or
push
adc
pop
lods
pop
pop
and
push
int3
dec
cmp
ljmp
push
mov
pop
xlat
in
clc
shll
or
dec
outsl
aam
push
or
pop
insl
cli
in
je
loop
int3
sbbl
sti
sub
add
xchg
adc
xor
cmp
jecxz
push
ljmp
sub
sub
cmc
push
mov
and
push
dec
push
dec
aas
dec
push
and
push
mov
cs
mov
lret
jb
push
adc
xchg
add
in
sbb
clc
std
pop
shr
lret
aam
add
lret
rclb
mov
cwtl
sbb
lahf
jl
xchg
adc
subb
out
js
fs
imul
pop
adc
jl
pop
push
or
dec
std
mov
fucomip
cmpsl
hlt
ljmp
imul
fxch
addr16
sub
ljmp
out
dec
jne
cmp
pop
xor
fisubs
ret
rorl
mov
add
jl
mov
imull
push
jbe
aaa
dec
out
add
mov
aad
popf
inc
imul
adc
lcall
loopne
rorb
pop
pop
mov
inc
aam
lds
sbb
fneni(8087
mov
lods
ret
pop
mov
lret
repz
mov
add
pop
pop
fwait
shll
mov
adc
xor
loope
xchg
push
push
fildl
cmpsb
sbb
sbb
or
mov
loop
fdiv
pop
and
sbb
cmp
cmpsb
out
jne
inc
ljmp
aad
shlb
push
adc
shrl
imul
or
sub
pop
mov
jne
cli
mov
lret
test
and
int3
incl
pop
jmp
mov
bound
dec
int
fcmovnu
xor
push
repnz
pusha
pop
sbb
ret
dec
ljmp
flds
inc
dec
pop
inc
addr16
out
testb
mov
enter
std
push
aas
dec
shl
cmp
sahf
mov
test
jmp
fidivrl
jns
fisubrl
lret
or
adc
into
repz
dec
fcmovnu
out
into
fisubs
dec
pop
dec
push
sub
pop
fbstp
lods
aad
ss
or
dec
sub
dec
gs
in
das
lock
push
in
outsl
add
rcr
std
pop
cld
lret
add
pop
jb
xor
pop
into
xchg
rcl
arpl
pop
mov
clc
fdivrp
in
mov
into
mov
dec
into
push
scas
lock
dec
lods
test
mov
pop
fstpl
and
iret
sbb
in
shll
dec
not
jge
paddb
lret
mov
fisttpll
stos
in
stos
int3
mov
and
mov
jecxz
ds
or
sbb
fisttpl
cli
cmp
xlat
insl
in
dec
ljmp
call
xor
push
push
testb
add
cld
adc
in
push
fdivrs
rcl
sub
scas
lock
rcl
int
lret
pop
rorl
into
pop
add
iret
cwtl
rorb
orl
jmp
dec
fldt
dec
push
movsb
int
int
jmp
mov
pop
xor
aad
fstpl
push
fmull
shlb
dec
pushf
imul
mov
scas
lock
or
lea
fwait
int3
into
adc
inc
dec
pusha
popf
fmuls
sbb
xlat
int3
lahf
arpl
fldcw
jecxz
das
inc
not
aas
or
mov
jb
push
xchg
int3
push
test
dec
xchg
inc
shr
aam
mov
or
adc
inc
or
mov
push
inc
jmp
adcb
fadds
push
mov
ljmp
mov
rcr
push
push
lret
into
ret
or
jecxz
lret
xlat
mov
call
inc
int3
dec
sarb
push
mov
call
int3
in
int
int3
rorl
sbb
stos
push
push
shll
aad
mov
cwtl
pop
jb
shr
pop
hlt
adc
push
pop
leave
jmp
ret
push
pop
loope
sbb
lods
lret
lret
icebp
fsubl
aam
add
imul
lret
and
int3
sti
and
jb
xor
or
in
into
adc
pop
into
cwtl
push
das
hlt
push
fldt
mov
fsts
dec
xchg
aad
out
mov
lret
ds
mov
mov
ficoml
sbb
lret
mov
dec
adc
xchg
aad
or
add
mov
adc
shrl
add
out
ljmp
or
sub
xorb
push
in
push
xchg
dec
scas
jl
rorl
aam
sti
ficoml
xchg
iret
into
and
ret
or
and
pop
fmuls
push
imul
int3
and
shll
dec
cmp
dec
cld
dec
in
push
pop
stos
iret
jmp
push
push
push
test
lret
inc
add
aad
mov
lret
push
xchg
fmul
jae
lret
arpl
shlb
pop
arpl
lret
pop
fdivs
int3
ret
push
fisttpl
int
dec
dec
cmp
jecxz
push
sbb
mov
dec
xor
shll
neg
xchg
dec
lret
mov
jae
dec
shlb
lock
fildl
sbb
inc
lods
cmp
in
pop
lret
aam
pop
fsin
in
into
hlt
mov
pop
cwtl
sar
ret
call
adc
dec
sbb
push
adc
adc
dec
in
xor
cli
fisttps
inc
cld
lret
sbb
sub
add
lret
rclb
fdiv
rcl
sbb
nop
dec
dec
aad
jo
inc
mov
jns
je
xchg
sub
test
xchg
pushf
xlat
mov
rclb
test
int
push
xlat
fnstenv
push
inc
clc
lret
lds
imul
push
cltd
iret
mov
xchg
lods
sarb
ret
loope
clc
fsub
or
mov
pop
into
movsb
push
inc
push
clc
imul
push
jmp
movsl
sbb
iret
or
push
pop
pop
fmuls
into
pop
fdivr
imul
int
add
stc
push
das
lret
movsb
mov
push
shlb
lods
jmp
es
insl
fdivr
call
adc
mov
dec
mov
dec
cwtl
dec
pushl
rorl
rorl
fldenv
scas
fcoms
jmp
hlt
into
stc
inc
mov
push
lods
inc
push
inc
rcll
aam
add
inc
fimuls
pop
repnz
popf
ficomps
rorb
push
mov
fistpl
notl
mov
sub
or
lret
xchg
inc
lret
cltd
lods
lret
test
in
data16
dec
xor
adc
pusha
xchg
lret
mov
jns
sbb
aas
hlt
mov
or
mov
lcall
scas
pop
jnp
mov
decb
outsl
dec
sub
rcr
in
or
iret
adc
pop
and
fsubl
scas
dec
or
push
push
bound
fmul
add
cmp
iret
nop
jb
adc
mov
adc
or
mov
jmp
and
rcrl
add
and
push
int
push
fdivs
ret
rcl
into
movsb
dec
push
fsubr
adc
and
int3
pop
jecxz
push
pop
shlb
ror
iret
xchg
dec
cld
lret
inc
pop
aad
xlat
cmp
push
aam
xchg
pusha
inc
not
xchg
cmp
rcr
in
pusha
adc
fwait
aad
rcll
into
nop
lret
adc
int
scas
sbb
push
add
inc
or
dec
sub
int3
loope
in
enter
jle
fstp
mov
sub
lret
shr
fistpl
and
fidivs
lret
fcmovnbe
addr16
int3
xlat
dec
fsub
xchg
xor
or
out
rcrb
or
pop
xchg
lods
int3
pop
lods
lret
dec
pop
cwtl
sarb
ficomps
int
ficoml
push
rcll
inc
push
xchg
iret
adc
sub
jecxz
lret
xor
int3
sbb
push
int3
inc
jp
and
pusha
int
fistl
push
rclb
es
rclb
push
fcomps
cmp
fisubs
mov
int
ret
in
sarb
xchg
adc
xchg
lahf
push
int
scas
push
int3
push
dec
mov
lret
pop
rcrl
outsl
dec
xchg
push
xor
mov
shl
fidivs
std
roll
rorb
fdivl
dec
shl
out
ficoms
or
push
and
cmpsl
jo
pop
imul
int
push
into
in
dec
fadds
pop
dec
push
shl
mov
aaa
xchg
push
dec
push
testl
pop
int
cmc
fisubs
loope
addr16
inc
loope
sarl
aam
out
ljmp
push
inc
inc
int3
push
adc
gs
xlat
aad
dec
fimuls
ss
dec
xlat
push
jno
in
push
mov
fidivs
pusha
into
int
rcl
rolb
push
push
fdivr
or
hlt
inc
ror
jne
fcmovnu
mov
adc
into
sbb
dec
fldt
or
popa
sbb
stos
ljmp
or
push
pop
pop
dec
push
cmp
or
push
jp
les
push
push
addr16
pop
mov
fdivs
lret
shll
in
pop
jnp
push
int
ja
ficoml
shr
jae
loop
ljmp
rcl
call
mov
lret
aad
mov
ss
shrb
xor
fcmovne
pop
int3
rorl
ret
arpl
fstpt
lret
out
flds
pop
sub
xchg
xchg
and
push
clc
out
inc
dec
rorl
sarb
popf
clc
rorb
mov
iret
call
fsubrp
das
lret
in
or
loope
test
jmp
sub
or
add
mov
fcoms
aad
out
aad
cmc
out
mov
adc
mov
push
int
and
stc
fcomps
call
push
in
jbe
int
dec
xchg
into
into
out
movsb
dec
shrl
xor
call
out
shlb
shr
xlat
addr16
iret
call
mov
sbbl
test
ds
xor
int
mov
fwait
int3
adc
cmp
js
aam
shrb
push
aaa
mov
pushf
push
push
xlat
jnp
iret
dec
sbb
push
push
dec
pop
xlat
ficomps
scas
int
xor
mov
out
test
fmuls
mov
add
arpl
mov
mov
jp
aam
incb
cld
mov
push
cld
lcall
add
clc
dec
sahf
push
popaw
lret
pop
adc
dec
mov
int
sbb
add
dec
xlat
nop
push
clc
push
ret
lret
out
lahf
or
mov
dec
scas
adcb
loopne
jp
into
jne
lret
shl
clc
fisubrs
adc
int
dec
push
scas
mull
int
mov
iret
lahf
fsubl
cmp
push
push
and
push
or
in
push
and
cmp
lea
adc
fldcw
int3
xor
mov
mov
iret
push
dec
jne
sbb
lahf
cld
rcl
stc
shrd
fsubs
cmp
into
inc
mov
shl
pop
lret
or
int3
sar
dec
shl
decb
cmpsl
adc
inc
cmp
jae
aam
gs
cmp
ret
push
aaa
fidivrl
std
mov
out
mov
xor
pop
out
cmp
ror
test
mov
mov
jle
addr16
sarb
jbe
push
mov
sub
lds
lret
in
xlat
cmp
cli
leave
das
cmc
add
rcl
orl
jno
sti
push
lret
das
push
scas
sbb
push
mov
xchg
push
and
fisttpl
hlt
lods
jecxz
int3
jb
sub
lods
pop
rorb
mov
pop
in
int3
rorl
shrl
xlat
out
dec
push
lock
mov
sbb
pop
stos
push
push
jg
pop
int3
and
movsl
push
pop
in
ss
or
or
int3
iret
jecxz
dec
scas
lret
xlat
ret
sar
and
int
fisubrl
or
push
pop
arpl
insl
dec
jp
xchg
fldenv
push
iret
rorb
into
scas
arpl
rcr
mov
mov
xchg
mov
rcl
xchg
add
in
in
xchg
jmp
jbe
in
push
imul
xchg
jg
les
and
aad
push
push
xor
aam
mov
dec
mov
dec
lret
ret
cwtl
fcmovnbe
hlt
sbb
push
push
xor
aad
aad
test
mov
push
mov
xchg
jecxz
ret
lret
movsl
sub
cli
lods
dec
lret
fsubs
mov
int
sbb
push
push
aam
aas
dec
xlat
test
ss
add
shl
outsl
out
dec
ror
adc
ss
lret
inc
inc
xchg
cld
fdivs
xchg
cld
int3
inc
stos
sarl
shrl
out
shrb
dec
sbb
mov
ljmp
dec
push
pop
int3
jecxz
in
jmp
jp
or
imul
dec
jmp
or
dec
in
jecxz
sbb
mov
sub
stos
bound
lods
adc
fsubs
pop
pop
jmp
or
pop
or
int
adc
mov
pop
sbb
mov
std
push
insl
jge
or
ss
pop
sbb
popf
in
sub
lods
jmp
sbb
into
pop
ljmp
into
outsb
rcr
cltd
call
test
dec
call
out
mov
fldpi
fmuls
dec
rcr
rcrb
ror
es
ret
dec
out
jle
pop
in
mov
push
fisttpl
add
push
lret
cli
lds
jp
mov
rorb
fisubs
add
cmp
push
dec
mov
jge
dec
push
aas
or
orl
lret
repnz
jnp
lcall
lret
add
mov
ror
dec
mov
xchg
loopne
in
iret
fnstsw
lret
sahf
jecxz
dec
push
sbb
je
nop
enter
clc
aad
jge
cmp
or
and
fists
ficompl
push
out
into
int
mov
push
std
or
lret
rcll
lret
add
mov
fmul
xlat
mov
or
pop
mov
lret
iret
xchg
nop
xchg
popl
add
inc
rol
dec
lret
pop
or
or
jge
cmp
dec
push
lret
push
adc
adc
test
dec
lret
push
or
or
jl
mov
cmp
cmp
lret
dec
adc
adc
test
addb
ljmp
lods
mov
jmp
repnz
icebp
mov
mov
loop
fsubp
loope
sahf
movsl
mov
imull
call
fwait
cmpsl
hlt
lret
out
mov
mov
in
loopne
fbld
jbe
jns
ss
pop
imul
lret
jno
cs
gs
and
and
imul
sub
pop
lret
addr16
sbb
je
jo
outsl
xor
xor
fisubl
pop
and
and
insb
or
mov
into
scas
add
jecxz
and
cld
rcl
xlat
repnz
fldcw
mov
repnz
push
pop
pop
pop
xor
xchg
dec
adc
ds
push
shl
pop
mov
dec
lock
xor
xor
nop
out
push
push
lret
add
dec
dec
nop
jecxz
push
repz
pusha
ds
jl
iret
pop
jo
sti
ljmp
dec
cmc
fdivrs
int
jecxz
cld
into
jecxz
xchg
jns
dec
fwait
idivb
xlat
and
or
cli
fcmovbe
jb
push
aaa
dec
test
jecxz
cld
int
aad
test
mov
imul
dec
out
mov
xchg
push
push
xchg
push
sbb
push
in
push
jne
in
bound
ljmp
lret
outsb
rorl
std
fcmovnbe
sbb
adc
fisttpl
pop
aam
pop
adc
rorb
ror
iret
mov
loopne
jle
mov
fidivl
push
cmc
xor
cli
adc
xchg
bnd
test
cmp
int3
into
loop
pop
or
test
mov
dec
cmp
push
ljmp
and
lret
in
inc
push
scas
stos
jnp
hlt
int
into
ds
loopne
mov
les
lods
xor
loopne
das
push
push
push
int3
fs
sbb
sbb
lods
sub
lret
sub
dec
jb
lods
dec
into
push
mov
daa
inc
out
push
mov
data16
fsubl
iret
sar
scas
rclb
and
rcrl
adc
push
add
int
ret
int
sahf
mov
pop
pushf
insb
dec
fcmovbe
jbe
dec
int
aam
mov
insb
stos
jmp
sbb
movsb
or
mov
sbb
in
dec
fstpl
add
lret
insl
sub
pusha
nop
and
adc
sahf
fnop
insb
add
pop
sbb
push
or
pop
push
in
imul
xlat
ja
dec
mov
repnz
adc
in
dec
mov
jno
add
dec
sti
and
adc
fcoms
adc
xor
sbb
xor
repz
fildl
pop
subb
in
xor
jg
bound
mov
fmuls
pop
dec
inc
mov
mov
push
mov
into
psrlw
adc
lock
add
adc
jecxz
ss
cs
push
xchg
pop
rolb
mov
or
inc
sbb
shrb
sub
or
dec
pop
out
cmp
mov
lods
int3
sub
in
in
inc
hlt
dec
mov
add
fimuls
push
push
hlt
and
dec
jle
jno
pop
ds
mov
pop
iret
fisttps
jle
lock
adc
push
imul
loope
and
pop
aam
dec
dec
jb
pusha
and
dec
push
push
jecxz
fsubl
mov
pop
dec
push
push
cltd
pop
sub
and
lea
aad
and
lret
shlb
out
mov
xor
dec
addr16
mov
mulb
push
jecxz
bound
rorb
lahf
push
push
dec
jmp
scas
in
jae
cmp
into
add
push
in
adc
jno
int3
mov
aad
cmpsl
pop
hlt
push
shlb
bound
ret
sub
push
lods
inc
cs
mov
push
adcb
push
push
outsb
push
mov
push
xlat
cmp
xor
sbb
xor
rcrl
outsl
repz
push
jmp
cmp
outsb
push
testb
outsb
les
fisubrl
cs
int3
in
outsb
aad
pop
push
push
test
xchg
dec
push
int3
mov
lods
push
pusha
bound
inc
push
push
int3
dec
xchg
inc
sub
or
cmc
xchg
mov
int
pop
ret
repnz
dec
scas
lock
and
mov
jecxz
jl
in
xor
lret
fcmovbe
push
mov
fstpt
sbb
scas
jo,pn
lods
push
inc
mov
loopne
cmp
insl
fcoml
insb
negl
xor
mov
adc
ret
rol
inc
mov
nop
xor
mov
mov
push
stc
pop
pusha
xor
adcl
inc
push
push
inc
cltd
lret
pop
lea
stos
aad
cs
aas
mov
xchg
dec
decb
aaa
les
push
mov
in
fmull
dec
push
push
sub
xor
sbb
sub
cmp
stc
pop
pop
adc
outsb
dec
push
push
lret
sub
scas
clc
pop
or
push
loopne
push
jecxz
lret
xchg
jg
pop
xchg
sbb
inc
push
jge
mov
jg
lods
mov
clc
js
adc
lods
popa
fnstsw
aam
ror
xchg
fs
fistpll
dec
jecxz
lret
popa
out
cld
lcall
insb
dec
push
jecxz
stc
mov
push
stc
xchg
and
mov
push
xchg
inc
jmp
dec
incl
repnz
lea
xchg
add
sbbl
xor
nop
sahf
adc
or
cld
adc
mov
insl
nop
out
loopne
cmp
int3
sahf
push
mov
mov
scas
lcall
xor
mov
fnstcw
aaa
in
fwait
push
stos
icebp
pop
xor
adc
and
nop
pop
loopne
dec
adc
jns
or
and
xor
adc
lret
lea
pop
pop
sahf
xor
mov
add
ficompl
lcall
out
std
in
iret
dec
mov
nop
dec
mov
mov
mov
cwtl
fldenv
push
push
cwtl
push
aad
gs
dec
pop
ret
xor
rcl
insl
sbb
cli
push
out
or
sub
dec
lret
out
bound
jge
inc
lret
mov
push
push
adc
or
lods
stos
lods
push
movsl
fiaddl
aad
scas
adc
mov
fcmovu
fmuls
push
into
mov
test
popa
lcall
scas
push
rcr
sbb
pop
push
mov
lock
dec
ret
int3
insb
lahf
add
and
mov
dec
pop
out
dec
and
mov
push
ror
xchg
mov
adc
xor
dec
insb
dec
xchg
push
int3
rorl
ficoms
icebp
or
sub
int
into
fwait
das
inc
enter
fmull
in
mov
aam
stos
mov
jns
sbb
sub
dec
rclb
in
push
fstps
sbb
out
push
dec
insb
mov
notb
cs
fwait
push
or
adc
les
pop
xor
pop
mov
inc
iret
xor
dec
in
pop
ffree
cmp
inc
lret
hlt
xchg
xchg
bound
push
popf
push
dec
bound
sbb
xchg
scas
push
stc
jae
clc
repnz
mov
or
int3
shll
aad
into
aam
iret
in
fnsave
push
add
adc
xchg
sub
fstl
jb
lret
push
mov
pop
or
leave
push
insl
aad
test
mov
push
push
stos
fisubrl
jmp
arpl
ds
sarb
in
inc
lock
or
mov
or
sub
loop
decl
add
inc
cmc
rcll
mov
sbb
clc
push
mov
pop
int3
not
enter
or
enter
out
call
outsb
repz
push
sbbb
adc
cs
or
mov
addl
and
stos
cmpsl
dec
loopne
orb
mov
push
mov
int3
iret
test
mov
lods
add
out
test
xchg
stc
dec
mov
and
lods
jnp
movsb
cld
aam
mov
push
addl
loope
mov
jle
or
dec
cwtl
dec
hlt
mov
es
fmull
pop
push
cwtl
dec
imul
popa
loope
dec
cwtl
mov
or
mov
dec
in
cli
jnp
or
push
out
rolb
fldcw
out
lret
mov
jnp
cld
into
shr
fdivrl
adc
adc
inc
pop
jmp
add
pusha
xor
xor
fucom
mov
lret
push
xor
pop
fisubrs
adc
or
mov
or
loopne
sub
clc
sbbl
mov
insl
in
jg
push
imul
aad
push
mov
faddl
mov
aad
pusha
push
xor
xchg
add
iret
inc
dec
xor
push
push
fidivrl
dec
sahf
adc
cmc
pop
sbb
mov
loope
pop
dec
cld
lret
cmp
int
lret
jecxz
out
bound
rclb
pusha
sub
pop
int3
das
jo
xchg
push
pop
push
stos
dec
inc
xor
aad
or
push
jae
loopne
mov
push
push
bound
nop
xchg
loopne
dec
lahf
mov
clc
adc
push
iret
fidivrl
dec
fstps
pop
cmp
lea
pop
mov
and
out
fcom
or
lret
fcoml
outsl
sahf
hlt
xchg
inc
xchg
push
rclb
fstl
out
jnp
cld
and
sub
jbe
decb
mov
sbb
adc
aad
loopne
lret
sbbl
adc
dec
mov
outsl
fistl
jmp
iret
sub
xor
xlat
int
arpl
pop
sahf
loopne
shl
decl
shlb
pushw
sbb
push
data16
push
dec
test
ss
loopne
rcrl
xchg
lret
cwtl
xchg
pop
push
dec
cmp
out
or
loope
fisttpll
push
sub
cmpsl
cmp
bound
sahf
dec
and
lret
bound
fdivl
pop
fsts
lods
mov
add
in
push
iret
pop
stc
repz
call
dec
shrb
xor
fcom
orb
pop
push
pusha
leave
pop
push
dec
xchg
pop
push
pop
mov
lret
pop
sub
sub
jb
in
mov
into
es
add
cmc
push
xchg
push
rorl
repz
iret
jp
or
pop
push
dec
jp
int3
and
lcall
dec
in
rorb
aam
or
dec
or
dec
lret
push
mov
aad
add
xor
jmp
int
jne
xchg
je
aaa
dec
sbb
test
fsubrp
adc
pusha
push
mov
loop
jmp
or
push
push
sub
adcb
mov
dec
negl
or
dec
mov
addr16
mov
xor
mov
movsl
fcmovnb
addr16
in
pop
stos
loopne
xor
cld
pop
mov
dec
sbb
xchg
mov
dec
rcrl
lret
mov
jecxz
fisubrs
mov
stos
xchg
mov
xor
pop
pop
push
pop
data16
dec
int3
in
rcrb
jmp
or
push
cmp
mov
pop
mov
sbb
icebp
dec
stc
mov
shl
adc
push
aas
and
scas
dec
cmc
or
out
dec
or
lea
dec
sub
mov
adc
es
sbb
ljmp
or
fisubl
sbb
adc
dec
jns
lret
sahf
cmp
lock
jne
xlat
pop
sti
xchg
dec
push
dec
loop
jecxz
mov
pop
fcompl
cmp
mov
mov
sbb
sbb
dec
decb
out
decb
scas
jbe
lret
sbb
std
arpl
insb
call
sbb
leave
fcoml
sbb
int3
movsb
jo
mov
nop
inc
mov
ds
fistps
mov
scas
or
stos
mov
jle
scas
icebp
dec
out
jle
aaa
jecxz
das
pusha
test
data16
dec
xor
insl
mov
leave
push
scas
rorb
adc
rcrb
in
popa
xor
int3
dec
or
or
xlat
add
xor
addb
pop
pop
pop
movsb
insb
or
push
bound
or
shl
jns
sbb
adc
std
adc
data16
test
movsb
lret
ror
in
adc
mov
inc
fmuls
mov
aas
jge
push
or
insl
in
fcmovne
push
pop
ljmp
dec
dec
jecxz
in
int3
push
lods
into
bound
dec
push
imul
aad
xchg
or
dec
movsb
or
push
mov
jecxz
pop
in
into
outsb
push
dec
iret
int3
jl,pn
daa
test
lods
lret
lock
dec
es
sub
jge
loop
jmp
or
dec
push
stc
lret
outsl
cmpsb
in
js
insl
mov
xchg
mov
xchg
jmp
or
push
cmp
dec
xchg
jecxz
lret
pop
out
cmc
push
mov
stos
out
push
or
popf
sub
mov
fisttpl
sub
cmp
aad
lret
dec
nop
ljmp
in
in
pop
xchg
or
dec
xchg
push
sbb
mov
insb
dec
or
in
in
scas
loopne
pop
andl
dec
push
push
enter
push
into
jb
inc
int3
sbbl
xchg
dec
xor
dec
or
dec
fmul
mov
pop
aaa
rcrb
daa
loop
ret
sbb
cltd
xchg
ds
adc
arpl
dec
fists
jb
arpl
and
jmp
dec
dec
or
std
fdivrl
pop
scas
in
arpl
pop
orl
pop
dec
push
fisttpll
push
or
cld
xchg
sub
push
jb
adc
push
bound
out
fcmovne
sbb
es
dec
pushf
orl
sub
sahf
push
sbb
rcrb
out
pop
jecxz
dec
in
scas
push
aaa
or
out
pusha
add
aam
int3
mov
pop
push
and
arpl
out
dec
lods
cs
mov
iret
or
mov
xchg
dec
ljmp
mov
push
addl
loop
rcll
and
scas
stos
sti
inc
mov
push
mov
cmpsb
ljmp
lcall
pop
icebp
adc
repnz
xchg
xor
fmul
test
lea
or
sti
mov
cmp
ficoms
adc
inc
lcall
adc
push
pop
pop
arpl
xor
pop
fs
xchg
clc
mov
pop
mov
lods
pop
outsb
jmp
or
mov
pop
fcoms
addr16
daa
push
dec
std
pop
imul
xchg
pop
lds
mov
pop
into
mov
and
popa
or
dec
fst
push
shll
lods
push
jo
pop
sub
notl
dec
dec
jle
mov
imul
mov
hlt
sub
stos
mov
mov
inc
push
loopne
test
mov
sar
enter
bound
xchg
roll
lock
adc
fcmovne
dec
gs
std
pusha
fmull
dec
jbe
sbb
in
pop
int3
sub
in
add
inc
adc
mov
push
or
sub
add
xlat
not
inc
sbb
jmp
inc
sarb
dec
mov
fisubs
push
pop
sbb
imul
fldt
loopne
lods
nop
adc
insb
mov
add
pusha
and
sarl
std
cltd
push
iret
add
push
iret
lcall
das
aam
jmp
movaps
xchg
inc
xlat
xchg
push
push
push
jae
pop
add
mov
push
dec
fwait
dec
dec
mov
mov
bound
dec
in
pop
push
push
push
aad
lods
mov
dec
imul
push
mov
adc
push
into
adc
jmp
sub
pop
rcll
and
cs
pop
out
adc
fmull
or
int3
push
cmp
xlat
pop
rcr
dec
or
cli
lret
in
pop
dec
push
or
aam
ds
push
ret
jmp
clc
adc
adc
pop
fld
pop
push
insb
repz
push
gs
mov
pop
stos
fcompl
cli
add
cmc
fdivrs
add
adc
sbb
xchg
ds
insl
mov
add
dec
cli
int3
cmp
jnp
cli
inc
dec
mov
adc
incl
sub
jl
xor
push
jp
fldt
inc
das
idivl
outsb
lock
mov
dec
js
mov
xchg
lret
loopne
cs
sub
in
or
jp
out
fimuls
bswap
mov
push
adc
popa
push
fmulp
or
das
or
cmpsb
sahf
push
cs
push
push
adc
or
and
out
and
in
fcmovnu
jmp
sahf
dec
aam
repnz
dec
int
int3
or
int3
xor
not
outsb
mov
cmp
ss
pop
loope
cmp
mov
dec
mov
mov
popf
decb
dec
push
inc
fstpl
push
imull
or
aad
int3
sub
or
xchg
jmp
mov
push
ds
sahf
fsubp
sub
into
out
sub
jmp
int3
dec
rcrl
sbb
popf
outsl
mov
xor
add
rcll
mov
rclb
push
jg
mov
repz
adc
adcb
and
ss
aaa
out
sbb
dec
xor
xor
add
orl
or
das
stc
push
cmpsb
jne
cmc
cmp
mov
dec
rcr
pop
les
jge
cwtl
add
fcoml
cmp
dec
pop
adc
repz
or
lods
outsb
mov
cmpsl
outsb
in
jb
or
inc
dec
fcompl
push
mov
imull
daa
xchg
fdivrl
pop
iret
cmp
test
std
das
mov
mov
adc
iret
and
shrb
int3
mov
xor
jb
mov
add
inc
cmpb
fldt
lods
imulb
int3
das
mov
faddl
mov
lds
mov
dec
push
push
cmp
push
push
mov
daa
push
insl
movsb
dec
pop
clc
dec
cmpsl
sub
testl
mov
iret
sbb
mov
sti
jp,pt
add
cmp
adc
cmp
movsl
int3
hlt
mov
sbb
out
scas
adc
cltd
mov
and
push
or
fnstcw
notb
hlt
ja
sub
into
or
enter
adc
in
dec
into
int
rcll
adc
xor
mov
push
popa
leave
aaa
mov
int
lock
fdivs
adc
mov
cmp
sbb
test
repnz
adc
sub
loope
push
dec
loopne
jl
dec
push
lret
adc
jle
or
add
mov
pop
dec
dec
iret
mov
repnz
dec
cwtl
mov
ret
xor
lret
mov
lret
or
xchg
jnp
add
dec
outsb
dec
filds
pop
xchg
jl
out
push
adc
adc
fistl
sbb
mov
dec
jbe
mov
dec
aad
adc
pop
xchg
std
dec
push
lret
mov
sub
cmp
cld
idiv
mov
or
ljmp
push
int3
dec
push
dec
mov
dec
jmp
mov
fdivrl
rclb
cli
jmp
clc
push
cli
dec
push
lcall
sbb
shll
and
dec
leave
enter
sbb
shlb
pop
gs
cltd
adc
call
xchg
or
jp
pop
jmp
pop
iret
int3
adc
pop
lods
cs
add
jb
jecxz
mov
ret
sub
adc
adc
cli
movq
loopne
outsb
add
add
call
or
pop
mov
es
adc
je
es
and
mov
mov
and
xchg
mov
xchg
inc
xchg
fildl
fildll
pop
pop
out
adc
push
insb
decl
sarb
daa
sarl
dec
jmp
pushf
lret
lods
inc
sti
pop
movsl
rclb
push
lret
jp
int3
and
lret
inc
dec
imul
xchg
fwait
ret
cld
adc
in
sbb
les
mov
addr16
ljmp
xor
ljmp
ds
xchg
and
mov
sub
fildl
cmpsb
flds
insl
add
mov
ds
push
xchg
pop
nop
or
xchg
cmpsb
dec
dec
rorb
mov
sub
imul
test
xchg
dec
bound
stc
dec
xor
jbe
int3
addr16
popa
sbb
or
lds
pop
fcomps
cli
dec
sub
or
imul
iret
out
fsub
jbe
jmp
adc
jl
lret
rcl
insl
xchg
xor
xchg
shlb
push
sub
out
fstps
shrl
leave
xchg
pop
lret
ficoms
jo
mov
mov
rorl
or
jl
adc
ljmp
push
sbb
mov
inc
sbb
fdivrl
mov
stos
stc
mov
cmp
inc
sbb
mov
mov
dec
stc
pop
mov
push
aad
sub
cmp
adc
dec
mov
cltd
ljmp
imul
aas
cmp
int
mov
push
dec
sub
subb
push
dec
mov
rcr
fidivrl
jecxz
fsubr
popa
aad
cli
cmp
fsts
push
pop
shl
push
scas
xchg
sbb
mov
aas
dec
int
stc
sbb
ret
fdivs
jmp
adc
ljmp
or
lret
mov
dec
or
jmp
pop
cli
bound
iret
into
push
pop
xor
dec
iret
in
sti
fcmovbe
jmp
adc
ljmp
ret
sti
xchg
das
push
iret
xlat
push
pop
push
or
rcl
cltd
aad
shl
mov
push
push
or
push
jge
dec
mov
or
or
ror
cmc
iret
cmp
push
push
or
push
ret
push
push
xor
push
aam
mov
push
fdivrs
cld
dec
sbb
int3
sbb
int3
push
dec
or
fcoms
push
jecxz
jbe
push
mov
shrl
jb
iret
ja
push
push
fisttpll
lret
shrb
ds
xlat
push
sti
dec
sub
xchg
dec
dec
int
aas
dec
dec
sub
sbb
mov
cld
aam
mov
push
or
add
pop
pop
inc
push
clc
lret
cmp
pop
fs
movsb
push
testb
mov
sahf
or
push
dec
cmc
fmuls
loope
rorl
or
loope
mov
xlat
movsb
dec
aam
fmuls
lods
dec
lcall
dec
dec
push
int3
dec
stos
into
mov
or
rcl
stc
sarb
test
adc
rorb
cwtl
push
jb
push
push
fsubs
arpl
push
cld
lret
jmp
int
stos
into
mov
or
xlat
dec
cmc
rcrl
sbb
ljmp
dec
push
push
aas
jecxz
sbb
pop
or
loope
dec
lret
int3
imul
iret
or
retw
lret
movsl
jnp
into
push
aam
or
push
imul
into
push
fnstenv
decl
in
jnp
adc
jnp
ljmp
pop
or
jp
shl
push
aaa
dec
insb
push
push
sub
push
push
adc
adc
ret
fdivrs
jl
iret
push
push
pop
dec
mov
fwait
iret
push
int
xchg
cld
dec
mov
or
jbe
iret
xor
sar
push
lods
loop
push
mov
dec
dec
icebp
push
pop
xlat
fimuls
and
adc
inc
dec
jbe
xchg
lods
int3
fwait
dec
xchg
cld
dec
fwait
push
push
or
jbe
iret
xor
shrl
jb
iret
ja
push
push
cmp
cs
stc
push
lods
loop
pop
mov
push
jecxz
pop
push
icebp
gs
lret
idivl
sbb
mov
shlb
dec
push
mov
aad
push
lret
add
dec
adc
adcl
iret
ja
push
or
ret
dec
ficoms
mov
or
iret
xor
push
push
push
cltd
shll
or
int3
mov
lret
ja
mov
popa
dec
addr16
mov
stos
in
lret
decl
mov
iret
dec
pusha
fistl
ds
push
int3
mov
iret
adc
or
and
jnp
fimuls
out
cmp
fsubl
mov
pop
mov
int3
scas
adc
loope
jg
into
push
aam
or
dec
iret
cmc
push
cmp
push
and
jge
fisttpl
push
int
in
rorl
pop
into
or
sub
xchg
mov
pop
aas
sbb
dec
adc
and
mov
lret
iret
loop
pop
dec
or
xchg
shll
fmul
cld
xchg
cld
dec
cld
push
ud2
dec
or
dec
adc
pop
dec
mov
rcrb
dec
and
sarl
push
out
in
pop
push
push
rcl
aas
or
rcll
sbb
ret
push
or
cmp
adc
inc
pop
xchg
rclb
pop
xor
fxch
xor
dec
jmp
pop
push
or
cwtl
lods
into
jl
dec
push
mov
push
or
shll
fcomps
sbb
push
or
ror
xor
aad
or
loope
pop
lret
ror
mov
or
dec
cltd
pop
sbb
movsl
jnp
into
push
pop
xor
fxch
in
inc
dec
lret
xor
aaa
cld
into
sub
push
or
or
dec
repz
sub
mov
aam
pop
push
aam
push
jnp
fdivrs
push
fldln2
or
aam
push
push
cwtl
dec
inc
fcomps
into
cmp
push
pop
dec
adc
pop
cld
sarb
mov
push
or
fdivs
lods
into
or
hlt
push
xor
dec
or
xlat
negb
sahf
shll
cld
dec
nop
lret
xor
decl
in
dec
jnp
iret
jns
push
shr
or
iret
bound
mov
push
negl
movlhps
outsb
push
push
ja
push
push
in
or
iret
bound
lret
fcmovu
dec
dec
mov
pop
sbb
dec
or
push
mov
push
mov
jmp
push
aam
or
popa
ret
dec
lret
popa
pop
fdivs
push
push
xor
pop
xlat
push
dec
dec
insb
fbld
push
jge
fcoml
dec
mov
xlat
shrb
push
call
or
addr16
fcmovne
sub
push
aad
sbb
in
or
iret
jecxz
outsb
mov
rorl
pop
lret
or
jno
dec
dec
into
jno
inc
iret
loope
outsb
push
xchg
das
push
push
xlat
push
pop
push
or
insb
dec
pop
das
push
iret
xlat
push
pop
push
or
push
push
cltd
push
inc
clc
dec
mov
fnstcw
push
int
inc
pop
xchg
push
dec
dec
mov
lea
jb
adc
jmp
lods
cld
xlat
pop
push
sbb
push
bound
stc
outsl
sbb
dec
or
pushf
and
adc
or
fnstenv
insl
loope
fprem
xor
lock
rcr
sub
pop
pushf
jmp
dec
mov
fs
or
into
add
clc
lods
cmp
sbb
bound
lods
das
push
or
lea
inc
ja
and
mov
ljmp
das
dec
lret
mull
mov
add
sbb
int3
mov
ljmp
dec
push
int
dec
push
insl
or
push
int
out
iret
dec
push
pop
mov
rcll
lret
int
cld
shl
or
dec
loop
dec
mov
lret
or
ror
push
pop
mul
addr16
gs
aam
and
xlat
xchg
push
mov
push
jnp
jecxz
testb
or
dec
cmpsb
mov
mov
dec
mov
dec
clc
ds
sbb
xchg
int
dec
jecxz
xchg
iret
inc
jecxz
xchg
roll
fcoms
in
xchg
aad
int
xlat
in
ljmp
ds
in
cli
or
in
pop
inc
aam
sbb
push
sbb
in
lods
dec
rcll
add
std
add
popa
push
lret
sahf
adc
lret
mov
xor
std
push
add
mov
jl
dec
pop
rorl
ds
in
into
clc
push
and
push
int
sub
mov
fstps
jb
js
ds
jb
ss
fisttpl
or
adc
cld
dec
or
pop
lods
das
dec
cmc
rorl
push
push
shrb
push
mov
mov
or
shr
loop
test
mov
pop
addr16
jecxz
push
cwtl
sub
dec
ljmp
dec
dec
dec
fisubrl
dec
sbb
int
pop
dec
cmp
pop
jecxz
xchg
shlb
push
push
cli
lsl
push
push
mov
dec
fs
call
adc
jbe
shll
jnp
sub
mov
dec
stc
int
xchg
dec
shlb
mov
push
or
dec
push
push
jecxz
pop
rcl
adc
shl
cli
in
xlat
xor
jmp
gs
fdivrs
jb
dec
ror
cmp
dec
lret
pop
push
pop
fnstcw
dec
clc
xchg
push
das
push
into
in
test
push
jl
dec
into
sub
xlat
popa
iret
mov
mov
add
mov
fcmovu
lret
dec
push
rorl
and
push
push
sbb
icebp
mov
dec
addr16
sbb
push
dec
nop
lret
xchg
lret
mov
dec
fistpl
repz
lret
clc
int3
mov
push
into
and
jecxz
xchg
rolb
cs
shrb
stos
cs
stos
cs
stc
fsubrs
dec
enter
push
int3
mov
into
sbb
clc
xchg
lret
dec
cld
dec
mov
cmp
lret
adc
icebp
andb
jmp
cmp
fs
xchg
sahf
push
ret
lock
arpl
push
mov
mov
push
pop
fmul
adc
jmp
fcmovnu
ret
mov
cs
int3
xor
stc
into
pop
cli
jmp
cmp
push
dec
inc
shll
add
push
int
adc
dec
push
mov
pop
xlat
mov
pop
cvtpi2ps
jecxz
fsubr
aad
push
int3
jmp
sub
jmp
pop
out
push
or
rcr
sbb
dec
sub
xchg
in
cmp
jb
bound
pop
or
dec
push
adc
mov
jmp
or
dec
stos
jecxz
in
mov
dec
stc
loop
jmp
or
dec
or
sti
in
in
push
or
bound
jmp
or
dec
jecxz
in
jo
dec
push
bound
xor
dec
adc
jnp
hlt
push
mov
bound
dec
xchg
jecxz
in
ja
push
dec
push
popf
xchg
fmuls
xchg
push
dec
inc
lods
cld
lods
loope
mov
int
push
into
xor
shr
shrb
push
add
push
add
push
add
push
add
add
push
push
add
push
add
push
add
push
add
push
add
dec
imul
dec
jmp
push
jmp
shr
dec
mov
dec
xchg
jmp
push
jmp
adc
dec
xlat
jmp
cwtl
jmp
fstpt
fmuls
sub
stos
fs
out
sarl
inc
outsb
bound
push
push
aam
mov
mov
iret
and
push
das
inc
adc
int3
pop
mov
push
dec
or
pushaw
into
xchg
and
pop
sub
inc
lret
dec
bound
iret
mov
or
shrb
mov
pop
shrb
jbe
fldcw
push
in
dec
aad
push
clc
inc
push
sbb
into
xchg
xlat
and
jecxz
xchg
fnstenv
jb
dec
push
dec
decl
pop
int
push
into
popa
dec
jnp
shlb
jnp
rcrb
cli
dec
push
aam
ds
pop
dec
xchg
push
int3
dec
push
fiadds
int3
test
out
fiadds
push
jecxz
fcmovne
out
ret
push
fdivs
clc
loop
mov
dec
lret
fcmovnb
jecxz
ret
ret
add
adc
xor
in
push
dec
into
push
mov
in
lcall
mov
ljmp
jecxz
in
add
or
dec
rorb
cld
push
rorl
and
fdivrp
fcoms
int
mov
dec
ret
add
aaa
push
add
jl
push
jecxz
mov
dec
push
lret
pop
inc
jnp
inc
sub
lods
mov
jb
dec
push
clc
fnstsw
fnstsw
sbb
xchg
push
mov
push
mov
sarl
push
in
add
dec
jl
rcll
pop
iret
push
jp
dec
xchg
fnstenv
imul
iret
fimull
into
lea
std
dec
das
push
add
es
shlb
push
aaa
call
iret
pop
rorl
push
push
push
in
in
aam
or
push
pop
mov
dec
push
push
dec
pop
xor
ds
push
int
push
out
push
shlb
cld
int3
jns
dec
cld
stos
int
pop
loope
outsl
dec
push
push
movsb
repz
pop
dec
dec
sbb
dec
shlb
add
shlb
push
push
arpl
stos
or
aam
dec
cld
dec
popa
mov
mov
mov
cmc
dec
dec
fisubrl
fld
cld
iret
jecxz
fisttpl
push
shll
add
mov
dec
arpl
jmp
pop
les
push
rclb
xchg
flds
push
xchg
lret
mov
in
into
mov
mov
cwtl
add
lea
clc
shlb
push
sbb
dec
push
push
outsl
cltd
inc
fsts
adcb
mov
dec
in
sarb
pop
int3
testb
out
fdivp
rcll
es
popf
add
rcl
cltd
add
push
ss
out
lret
push
xchg
dec
dec
sbbb
pop
mov
outsb
test
iret
sti
clc
popa
lret
aaa
out
iret
dec
push
shlb
push
jnp
rcll
push
icebp
add
mov
xchg
mov
mov
outsl
dec
push
fcom
dec
decl
clc
dec
outsb
cmp
aam
iret
dec
cmc
int
fisubrl
dec
fistpll
lret
cmc
shll
dec
cs
stc
shrl
stos
cld
dec
jle
xlat
mov
int
fidivrl
ret
fldcw
insb
push
push
sarb
shl
xchg
jg
mov
inc
xor
stos
int3
or
inc
dec
push
es
dec
dec
arpl
dec
dec
jb
lret
pop
shlb
ds
dec
dec
mov
push
xor
xor
push
movsl
xchg
lret
adc
icebp
test
cmc
xlat
xor
stc
fnstcw
dec
push
mov
lret
mov
aaa
dec
arpl
mov
push
cs
lea
or
repnz
iret
sahf
aaa
iret
das
sbb
push
rcrb
push
mov
aad
cmp
and
fcoms
scas
out
rcll
sbb
lcall
rclb
lods
sbb
outsb
push
lret
ja
aam
push
scas
mov
das
lret
repnz
jnp
xlat
aad
dec
stc
cmp
pop
mov
fmul
mov
dec
or
mov
sub
dec
mov
ds
jmp
push
shll
pop
xor
or
out
xchg
aad
sar
push
shll
jb
dec
push
icebp
rcr
xor
dec
dec
and
pop
or
clc
push
and
cmc
aad
ror
stc
push
cmp
fbstp
sar
jecxz
in
iret
push
fcmovbe
jmp
ljmp
xchg
fcoml
shll
in
es
in
push
push
cmp
fdivr
pop
cmp
mov
test
push
push
std
xchg
or
push
mov
cli
lret
fcmovnb
sub
into
faddl
lret
cmpsb
lret
jecxz
or
cmp
sub
sahf
or
dec
dec
jecxz
in
add
pop
mov
push
popa
or
dec
adc
mov
ret
jae
stos
jmp
or
dec
aad
aad
fcmovnu
or
dec
jmp
out
sti
push
xchg
or
jmp
or
dec
sub
test
or
dec
sti
jb
push
jnp
sub
push
std
fldl
inc
ret
xchg
push
xor
sub
push
jecxz
fsubr
add
in
mov
cld
jmp
or
dec
adc
sbb
ret
push
sub
bound
and
jecxz
in
xchg
insb
aaa
bound
or
dec
cwtl
jecxz
in
dec
push
lods
ljmp
int
dec
dec
fucom
cld
out
push
loope
push
jmp
lret
push
dec
jmp
push
loopne
shrb
mov
lods
arpl
lea
and
out
lea
fistpl
ret
ret
ret
ret
ret
ret
ret
ret
mov
cmc
push
sub
test
xor
inc
xchg
push
inc
inc
orb
fnstcw
cld
dec
push
lret
cmp
into
pop
shrb
push
int
sti
dec
push
inc
bound
into
and
xchg
shlb
icebp
sbb
cmc
fnstcw
das
jnp
popa
into
jnp
fsubs
jnp
lret
sahf
dec
hlt
sarl
cmp
cmp
aas
mov
shl
fwait
cld
int
aam
or
pop
pop
xchg
push
dec
adc
xor
stos
xchg
mov
inc
push
inc
clc
push
inc
test
inc
pop
push
inc
cli
dec
inc
stos
push
inc
pop
push
inc
or
inc
mov
inc
push
push
es
in
dec
jg
dec
xor
dec
xchg
aam
mov
repz
push
push
mov
xchg
push
push
add
xchg
push
andb
rorb
dec
xchg
cld
fstps
pop
sub
cmpsb
jns
dec
dec
jb
fcmove
bound
in
push
lret
jb
dec
aaa
dec
dec
cld
dec
jecxz
cld
push
popa
rorl
fsubs
lock
sar
dec
pop
loope
mov
jmp
and
push
pop
dec
xlat
mov
mov
cmp
jmp
pop
cmp
fucomi
into
ficompl
push
rcrl
mov
dec
xor
push
into
cli
dec
dec
push
mov
jl
into
dec
sarb
dec
dec
outsl
xchg
call
rcrb
adc
sar
rcll
cmp
popa
aad
push
fcomps
pop
inc
dec
jecxz
movsl
fstpl
sub
pop
dec
lret
adc
dec
push
lret
add
dec
dec
jg
dec
int
dec
aam
das
dec
int
shlb
dec
cs
sarb
dec
push
mov
aam
jl
push
jecxz
in
ljmp
sbb
shr
loop
pop
mov
sub
and
pop
int3
or
jl
sqrtps
xchg
dec
pop
push
outsl
into
push
rcl
push
into
lea
call
push
mov
rorl
mov
aad
lret
lahf
mov
xlat
aad
dec
lahf
jmp
rcr
lcall
push
lahf
test
jecxz
pop
cmc
mov
cs
and
push
fwait
scas
out
dec
push
fcoms
sbb
rclb
push
lret
stos
add
fcmovnu
sarb
mov
rcrl
push
push
xchg
push
dec
push
push
in
scas
jnp
int
mov
fisttpl
ret
push
iret
ds
dec
dec
push
push
scas
jmp
cmp
mov
push
mov
fdivr
rcrl
sbb
pushf
int3
pop
aaa
mov
add
out
mov
dec
mov
ds
push
scas
pop
sarl
inc
sbb
fld
enter
aad
fcoml
aad
pop
stc
fsubs
shll
jmp
xchg
push
sub
rcr
fs
iret
clc
and
lret
xlat
movsl
ljmp
rorb
push
shlb
test
movsb
fistpl
rcrb
lret
mov
stc
out
mov
loop
lds
mov
push
call
fnstcw
and
cmp
mov
dec
ror
stc
iret
cmp
cmp
jecxz
xchg
shll
fiaddl
sbb
lea
sbb
icebp
push
stos
cld
dec
lock
mov
lret
ss
sbb
dec
push
or
aad
iret
mov
dec
dec
adc
mov
push
flds
push
jbe
push
push
dec
add
pop
dec
and
cmc
sarb
es
orb
fimull
int
push
dec
xchg
lret
into
adc
dec
in
adc
shll
jnp
rcrl
cli
dec
shlb
push
pop
jle
cld
push
popa
fdivrs
cld
xor
pop
adc
fcmovne
jmp
dec
lret
xor
jmp
pop
dec
jle
into
int
jb
dec
jg
pop
jle
ljmp
iret
and
xchg
xchg
sub
dec
loope
jnp
shr
mov
sbb
push
scas
rorl
push
and
aad
jmp
inc
cwtl
lret
fistps
dec
aad
inc
notb
mov
xor
dec
shll
inc
fistl
push
jo
lret
sbb
out
cmp
aam
mov
push
scas
aam
or
jbe
push
cmp
lret
push
push
lcall
xchg
pop
pop
jmp
pop
lea
jmp
push
push
dec
loopne
or
sarb
mov
dec
arpl
dec
inc
jmp
std
push
push
push
add
push
add
push
add
loopne
or
es
fistl
push
int
or
push
and
jg
lret
push
xor
and
mov
push
clc
aam
push
das
into
dec
cmc
gs
push
mov
and
jecxz
xchg
fnstenv
sub
mov
cs
in
sbb
push
mov
and
mov
pusha
clc
sarb
dec
int
aas
rcl
in
push
loop
add
jmp
push
dec
aaa
ds
pop
push
int
push
sar
rcrl
push
cmp
pop
jmp
xchg
pop
int3
sub
int
dec
pop
into
dec
jecxz
push
sub
rclb
xorb
in
dec
loop
cli
dec
xchg
jecxz
pop
inc
iret
adc
sar
jecxz
push
push
jecxz
cld
mov
xchg
push
js
dec
jmp
enter
cld
fcmovnb
lods
fcmovnb
lret
and
int3
sarb
filds
dec
andb
sub
ds
cld
adcb
inc
fistl
es
orb
dec
dec
mov
jb
mov
dec
adc
dec
dec
sub
rcl
ficoml
inc
push
fistl
and
jecxz
xchg
aam
out
test
xchg
push
add
jnp
fcomps
pop
iret
adc
mov
pop
pop
dec
iret
push
mov
jmp
dec
lods
jmp
push
push
cmove
push
xchg
push
xor
out
ror
push
pop
mov
push
cld
aam
push
dec
cs
xlat
pop
push
aad
mov
pop
clc
shll
rcr
push
jnp
int
lock
arpl
or
iret
lret
clc
fdivrs
sub
xchg
ror
jmp
or
aad
nop
out
mov
ficomps
push
push
shlb
jne
push
das
push
int
xlat
imul
jb
dec
aaa
cmp
fnstcw
dec
shll
lret
out
or
ds
sbb
cld
adc
xchg
stc
push
cmp
popa
push
jnp
sbb
mov
or
pop
or
sbb
push
int3
xchg
dec
into
and
int3
in
sbb
push
loope
dec
in
pop
dec
push
dec
pop
les
sbb
cld
dec
popa
aad
push
xlat
movsb
or
cs
call
jb
dec
aaa
push
or
fimull
cmc
push
xor
stc
dec
stos
cs
stc
nop
stos
cs
stc
shrb
adc
mov
mov
mov
mov
mov
mov
int3
mov
mov
or
or
rol
adc
adc
xlat
pop
movsb
shl
fwait
adc
lret
and
imul
aam
xlat
lret
dec
sbb
and
mov
sub
xor
push
sbb
aam
dec
jecxz
lret
and
stc
pop
lods
and
push
in
rcll
fwait
mov
rclb
inc
fsts
ret
fdivr
dec
inc
rcr
push
xchg
push
inc
jecxz
push
fadd
jecxz
stc
push
in
stc
out
mov
dec
inc
loope
mov
iret
outsl
dec
push
pop
hlt
ficompl
cmp
mov
xor
or
mov
int
dec
sub
xlat
fisttps
sbbb
fprem1
sbb
loope
mov
dec
push
loope
mov
pop
iret
mov
mov
mov
mov
mov
adc
push
mov
cli
dec
mov
pop
sbb
cwtl
pusha
lret
xchg
jmp
popf
lret
push
or
ljmp
fcmove
xor
lret
jno
dec
jle
cld
dec
popa
mov
pop
rorl
rcll
xchg
adc
jecxz
in
ficoml
gs
cltd
pushf
dec
sbbl
cs
dec
dec
das
adc
push
mov
pop
pop
mov
inc
fsubs
push
int
mov
pop
lret
push
int
pop
jnp
push
sbb
push
lret
xchg
mov
shl
into
in
and
or
adc
rcr
sbb
rcr
sbb
sbb
rcrb
dec
mov
pop
inc
fistpl
add
dec
mov
fimull
into
clc
lret
xchg
mov
fmull
dec
lret
dec
pop
or
fmull
dec
mov
lret
stc
int
rcl
stc
dec
cmp
cmp
cmp
cmp
cmp
shll
or
clc
push
adc
dec
test
mov
lret
dec
lret
in
adc
icebp
sbb
fimull
neg
fnstcw
shlb
clc
into
arpl
mov
jmp
xchg
push
and
jecxz
xchg
xchg
add
dec
dec
aaa
aas
rcll
push
dec
lock
loop
lret
aad
dec
loop
addr16
clc
pop
dec
cmp
mov
push
jp
rcl
popa
xlat
mov
sbb
and
push
pop
roll
cmp
and
push
push
into
repnz
cld
lret
cld
stos
dec
sbb
shlb
ror
xchg
mov
lea
push
clc
jmp
jb
rcr
stc
cwtl
in
adc
xchg
pushf
adc
sub
int
pop
enter
in
cld
jl
dec
rcll
and
dec
bound
mov
mov
ficompl
aad
fadds
sub
push
push
dec
adc
push
rorl
jmp
mov
into
jmp
adc
mov
and
inc
dec
push
inc
cld
addb
lea
lret
sbb
es
adcb
outsb
in
adc
and
notb
mov
lea
mov
pop
test
call
in
xor
into
jmp
roll
stc
push
pop
push
mov
and
or
cltd
dec
dec
inc
xlat
push
mov
mov
add
push
lea
pop
rol
jecxz
lret
lds
cmp
stos
dec
das
fxch
cmc
sbb
dec
cld
dec
push
rorl
inc
fcmovne
xchg
mov
push
xchg
int
jecxz
xchg
push
mov
cli
push
mov
rcrb
pop
fnstcw
adc
bound
mov
mov
or
iret
int
aam
sbb
bound
or
hlt
into
adc
mov
fmuls
scas
dec
jecxz
pop
int
shrb
and
or
push
fadds
sbb
jb
stos
rcr
cltd
cmp
jb
push
jb
cmpsb
fsub
push
push
pop
les
cmp
mov
sbbb
int3
mov
dec
ds
push
lret
inc
jb
lret
jnp
or
sbb
dec
aam
fimull
cmp
lods
dec
jge
push
pop
pop
mov
xchg
pop
int3
out
xchg
clc
mov
xchg
xor
sub
imul
aam
push
nop
popa
push
jnp
adc
cmc
push
dec
fimull
aam
inc
adc
dec
idivb
cld
iret
popa
push
mov
fdivs
cli
sti
inc
push
das
lcall
rcll
lret
fcmovb
or
psubusb
lret
mov
xchg
pushf
aas
jne
arpl
mov
repnz
sub
mov
ds
icebp
cmp
ret
mov
mov
dec
push
jmp
scas
mov
shlb
int3
jbe
dec
adc
dec
ljmp
or
adc
dec
push
pop
sbb
mov
ds
cld
std
jecxz
push
mov
add
push
insb
dec
iret
dec
ret
push
fadds
pop
es
lret
push
cltd
clc
or
push
mov
fst
xlat
clc
mov
sub
leave
dec
push
dec
cs
int
stos
jl
dec
pop
push
mov
mov
aam
pop
push
jle
push
dec
movsb
loopne
lea
arpl
mov
adc
jecxz
iret
pop
push
and
aad
push
mov
push
cltd
ret
rolb
fdiv
cltd
pop
dec
repz
cmp
mov
repz
std
dec
jbe
dec
aaa
ds
in
cli
push
push
fisubl
jle
push
xlat
dec
mov
shll
push
repz
lret
in
pop
jl
push
pop
xor
ror
push
pop
jl
dec
add
dec
mov
push
push
pop
lret
jge
test
mov
xchg
push
adc
adc
cmp
mov
sub
lret
xor
repz
mov
fdivs
ljmp
into
or
lret
jecxz
mov
gs
add
pop
ficoml
push
fmuls
and
adc
inc
lret
lods
xor
mov
arpl
popa
adc
pop
cwtl
sahf
xchg
mov
lret
ljmp
cmpsl
lret
nop
shrl
sbb
or
cli
aaa
int3
movsl
imul
adc
mov
mov
sub
lods
fisubl
ljmp
jle
dec
lret
test
leave
cmpsb
mov
sbb
push
xchg
xor
sarb
je
lret
mov
sub
dec
lret
adc
sub
push
dec
mov
add
jmp
xchg
test
cmp
into
jmp
popa
push
lret
setae
ss
in
test
pop
lds
int3
mov
inc
rcr
in
dec
test
or
dec
push
rclb
test
or
push
test
or
push
pop
lods
jecxz
in
stos
push
mov
into
push
clc
bound
jmp
or
dec
xor
adc
rorb
mov
bound
dec
or
dec
stos
jecxz
in
ljmp
bound
jmp
or
dec
mov
mov
rorl
outsl
iret
into
jmp
or
dec
mov
xor
cwtl
in
clc
push
aaa
jbe
mov
adc
jecxz
in
mov
adc
bound
jmp
or
push
dec
and
in
insb
push
lea
bound
jmp
or
dec
mov
hlt
in
push
push
jbe
fldpi
mov
mov
adc
adc
xchg
sbb
pop
push
repnz
jmp
or
dec
insl
jecxz
fisubl
fldl
sub
pop
nop
jmp
or
dec
lods
jecxz
in
dec
push
sub
xchg
js
xlat
jmp
or
dec
jae
adc
mov
das
cs
in
bound
or
push
sbb
dec
mul
andl
dec
xor
dec
in
outsb
push
in
bound
jmp
in
stc
les
push
dec
jecxz
in
xchg
push
shll
push
cs
addr16
in
jmp
in
stc
mov
mov
mul
ss
xor
bnd
or
dec
out
jecxz
in
sub
dec
push
cltd
mov
or
dec
cmc
jecxz
in
xor
xor
nop
jmp
or
dec
insl
jecxz
in
mov
lret
idiv
clc
xchg
adc
testb
xchg
in
mov
mov
jmp
add
pop
pop
sub
mov
jns
or
in
push
push
aad
jmp
or
dec
lock
in
push
push
sub
fs
pop
mov
lret
pop
ljmp
testl
xor
pop
push
or
sbbl
imul
adc
lahf
imul
pop
mov
add
in
adc
mov
fstpt
push
pop
dec
jecxz
in
or
sti
mov
jmp
or
dec
xor
or
cmp
gs
push
mov
push
pop
add
pop
bnd
xchg
mov
push
xlat
sbb
fucomi
aam
lret
or
dec
int
into
in
mov
jae
push
dec
push
jecxz
in
ror
jmp
sub
pop
and
ficoms
pop
or
mull
mov
mov
dec
in
fucomi
adc
jecxz
in
outsb
push
das
adc
jmp
or
dec
xor
push
in
push
push
push
js
pop
fisttpl
hlt
cmc
jecxz
in
or
dec
insl
jecxz
in
push
mov
push
dec
xor
sbb
pop
jmp
or
dec
push
jecxz
in
push
push
adc
bound
lea
dec
or
ljmp
push
mov
mov
aam
mov
xchg
jecxz
in
das
push
dec
sub
cld
pop
add
loope
ja
das
in
push
jecxz
in
mov
xchg
je
xor
dec
clc
jecxz
fistps
or
dec
pavgw
xchg
bound
xchg
or
dec
mov
add
out
out
jmp
or
dec
push
jecxz
in
aad
insb
push
xor
fistl
push
cwtl
mov
popa
pop
in
jmp
or
dec
shl
adc
rorl
je
bound
xchg
or
outsb
jbe
arpl
or
dec
xor
xor
jo
scas
mov
jmp
or
dec
sub
hlt
mov
adc
or
into
icebp
or
adc
mov
pop
jbe
ja
cwtl
dec
cltd
push
or
in
lea
das
adc
jmp
or
dec
push
jecxz
in
xlat
sub
aaa
rcrl
fistpl
pop
bound
fldenv
pop
fiaddl
in
and
cli
adc
negl
xlat
iret
adc
sbb
dec
xchg
loop
sub
mov
mov
rcll
jecxz
in
mov
jno
pop
push
dec
sub
or
xchg
in
call
dec
fsubrl
jge
and
jne
bound
shll
insb
xchg
cmp
dec
inc
dec
ret
lret
in
push
cmp
pusha
mov
sti
jne
popf
test
aad
sub
sub
sbb
and
mov
push
xor
push
push
in
pop
add
jp
push
add
adc
fs
dec
repnz
jbe
mulb
sub
mov
lret
push
push
add
push
cli
leave
aam
xchg
ja
aam
mov
pop
sbb
ret
fsubr
je
daa
inc
sbb
push
dec
les
scas
mov
enter
lret
or
pop
ror
cmp
xor
lret
js
ja
lds
xchg
mov
mov
adc
lret
cmp
mov
clc
mov
mov
popa
xlat
aad
lret
loopne
movb
dec
xchg
xchg
mov
mov
lret
and
xor
inc
ljmp
je
ds
addr16
jbe
mov
xor
fldcw
push
and
lret
enter
sbb
dec
shlb
mov
lret
xchg
jecxz
imul
add
loope
dec
lret
inc
jmp
int3
leave
cmp
mov
fistpll
incb
ljmp
movsb
mov
push
cld
push
jae
sbb
jge
jb
cli
jnp
xchg
movsb
xlat
imul
pusha
pop
xor
or
jnp
rcrb
inc
lret
or
mov
and
sub
out
pop
sahf
push
cmp
pop
mov
pop
add
clc
lret
bound
fcmovnbe
push
mov
in
mov
loop
mov
and
fistpll
lret
cmp
rcr
or
rcll
lret
in
stos
aad
add
pop
mov
stos
pop
repnz
stos
inc
int
sub
add
dec
mov
xchg
lret
repnz
add
add
inc
add
fcompl
xchg
push
push
xor
inc
lods
mov
jmp
lret
sub
inc
lds
pop
and
inc
jne
push
xchg
into
dec
idivl
and
or
mov
adc
out
insl
pop
push
sbb
pusha
dec
rorb
xor
jp
pop
dec
cmp
lret
outsb
add
andb
fcmovbe
aad
cltd
jp
dec
inc
imul
ror
sbb
mov
cltd
fisubrl
fimuls
rorb
das
lret
scas
cmpb
inc
nop
int3
and
mov
lret
sbb
aas
cwtl
xchg
into
in
lret
loope
or
xor
dec
push
pop
mull
inc
jp
push
sahf
sub
ss
into
int3
adc
mov
sub
or
mov
lret
sbb
test
movsb
imul
fbstp
roll
push
or
iret
lahf
lret
lret
mov
test
cmc
dec
lret
popa
sbb
repnz
les
test
and
push
cmp
inc
push
cltd
sub
clc
sti
or
lret
jns
cmp
lret
mov
lock
inc
sbb
inc
jno
shl
mov
and
lds
shlb
push
jmp
or
out
xchg
mov
insb
push
mov
jecxz
xchg
jge
mov
lea
mov
cmpsb
insl
push
sub
jge
xchg
lret
add
mov
in
xor
mov
jmp
jp
cwtl
ljmp
xlat
jmp
xor
lret
dec
inc
ret
dec
lods
lds
dec
lcall
lret
cmpsl
xor
xchg
pop
mov
xor
adc
loopne
jle
push
mov
and
sub
or
bound
nop
adc
iret
sbb
mov
outsb
insb
fisubrl
xchg
out
cmp
data16
mov
bound
push
pop
adc
inc
movsl
lret
jg
sbb
cwtl
xor
jbe
pop
cli
adc
aam
outsb
imul
push
lret
subl
lret
sarl
repnz
jbe
stos
movl
pop
leave
daa
dec
pop
jmp
cmp
out
add
sbb
int
mov
insl
jae
ror
adc
cmp
popl
mov
push
pop
cs
dec
mov
inc
mov
testb
push
es
add
and
int3
inc
insb
push
push
sahf
lcall
cmp
out
dec
mov
adc
cmpsl
pop
jno
pop
push
in
dec
loope
int
lret
xor
in
cmp
sbb
and
scas
lret
cli
ss
shl
jo
in
jmp
out
rolb
int3
or
aad
dec
adc
inc
or
cmp
int
call
pusha
or
cmp
das
int3
push
dec
xlat
push
fucomp
out
pop
int3
gs
dec
inc
push
stos
push
outsl
negb
add
aad
lret
inc
hlt
ja
pop
mov
xchg
outsb
testl
leave
and
push
sbb
inc
cmc
ds
pop
inc
movsb
adc
addr16
fstps
dec
and
mov
mov
jle
scas
jmp
add
fadds
adc
fucomi
bound
lds
lret
push
or
push
dec
stos
lcall
jne
dec
cmpsl
inc
or
pop
pop
lret
lret
sti
ja
lret
es
xorb
and
sbb
push
jp
or
sbb
mov
fsts
int
xlat
mov
je
mov
mov
and
out
jl
sbb
lock
mov
mov
lcall
imul
inc
addr16
rorb
jnp
pushf
mov
ror
xor
inc
push
cmp
into
jle
adc
push
fistpl
je
jno
xchg
vpsubusb
stos
into
mov
aad
ja
mov
or
cmp
lret
lcall
add
jg
sub
mov
lock
mov
inc
xor
out
sub
sub
xchg
andb
pop
pop
adc
pushf
fsubs
shr
jge,pn
push
fimull
mov
push
jnp
cltd
inc
lret
pop
jbe
nop
shl
rol
mov
out
jecxz
cmp
sarb
out
xchg
mov
mov
int3
es
mov
fidivrl
popa
lcall
into
aaa
mov
cmp
lock
cwtl
ret
sub
sbb
into
push
adc
out
cmp
inc
sbb
push
hlt
icebp
xchg
sub
aaa
or
or
lret
lods
jl
lretw
xchg
mov
sahf
dec
lret
pop
js
mov
ret
lret
inc
clc
mov
pusha
mov
stos
leave
rorl
stc
fcmove
aaa
add
stos
int3
loopne
cmp
sub
jae
lret
fwait
mov
inc
movsl
into
dec
lret
nop
lcall
jbe
repz
cmp
jmp
enter
out
lret
in
xchg
js
cs
pop
mov
sahf
jl
lret
sbb
cmp
cmp
lret
test
adc
out
lret
das
and
push
sar
ficompl
inc
dec
mov
into
mov
push
sbb
pop
lret
fidivrl
pop
cmc
adc
push
int
repnz
inc
mov
mov
add
push
outsl
dec
pop
gs
xchg
xchg
into
ja
mov
lods
int
cmpsb
push
pop
or
aam
mov
or
lds
out
je
mov
dec
lea
sub
out
sahf
out
sub
inc
stc
cmp
pop
out
rorb
dec
pop
cli
mov
sti
outsl
loope
push
pop
icebp
mov
mov
sub
dec
mov
ljmp
fbstp
nop
sti
xor
lock
call
jae
cmp
ret
fdivrp
push
cmc
outsl
cmp
pop
pushf
lret
dec
jmp
lcall
dec
add
dec
push
ficoml
inc
in
lods
jno
mov
clc
jno
add
scas
dec
lret
cs
loopne
mov
lcall
mov
xor
pop
addr16
mov
and
rclb
mov
clc
dec
mov
pop
lret
dec
loopne
jl
sub
lods
xlat
cli
adc
push
push
push
inc
dec
jmp
xchg
xor
dec
mov
call
inc
out
add
or
xchg
jns
inc
outsl
add
int3
loope
pop
pop
jle
mov
mov
insb
mov
fisubrl
adc
iret
cmp
pop
ljmp
loop
add
cli
add
xchg
cmpsb
in
lret
adc
popf
and
into
test
sbb
mov
lret
xor
neg
imul
cwtl
addl
aad
adc
cli
pop
jno
movsb
jge
lods
or
fsubs
xchg
lret
iret
das
sub
rcrb
cmp
dec
ret
push
imul
sub
stos
add
lret
inc
jne
sti
in
imul
mov
lods
out
jo
or
adc
sub
push
test
mov
pusha
sbb
cmc
inc
sarb
mov
fs
lret
adc
push
xor
fdiv
inc
sbb
inc
sub
in
adc
dec
push
pop
xor
pusha
mov
cmpsl
rcrb
mulb
and
daa
lret
dec
cs
imul
push
int
xor
sub
xor
stos
and
fmul
inc
cmp
notb
das
dec
leave
adc
or
sbb
fninit
lret
adc
cmp
lret
jge
stos
out
add
cmpsb
mov
scas
cltd
data16
inc
sub
jecxz
or
lahf
mov
aam
add
dec
lock
lret
push
and
sub
ror
lret
subb
out
pop
mov
adc
lret
lahf
pop
push
je
push
stos
sub
es
ret
notb
stos
xchg
sub
push
in
test
xor
lret
dec
cmp
cmp
adc
adc
pop
lret
leave
pmullw
mov
jmp
ret
push
dec
pop
push
mov
fimull
cld
xchg
sbb
lock
leave
and
lret
pop
shr
cmp
test
cmp
scas
sub
sbbl
leave
mov
ds
outsb
mov
int
pop
popf
out
jge
mov
leave
shrb
jle
adcl
sbb
lret
sub
hlt
ficoms
stc
cmp
pop
test
or
inc
int3
out
ret
xchg
adc
imul
cmp
dec
mov
lea
or
push
mov
stos
sub
jmp
fwait
pop
rolb
cli
inc
cmp
sbb
call
sub
dec
lods
lret
lret
jmp
cs
outsb
rclb
test
cwtl
push
jae
lret
sbb
xor
xchg
pop
xchg
int3
push
lret
add
imul
insb
mov
sahf
inc
or
insl
test
dec
push
mov
int3
and
insb
in
fsts
mov
mov
mov
cmp
sbb
aad
pushf
mov
xlat
jl
dec
sbb
insb
pop
cmp
sbb
ror
shlb
cmp
scas
cwtl
fstpl
push
fldenv
negl
in
rorl
push
stos
xor
cwtl
cli
rorb
pop
mov
sahf
dec
stos
jae
dec
xor
lret
leave
cmp
mov
sbb
fdivl
sub
sbb
inc
call
xor
in
fcompl
shr
sti
mov
mov
mov
enter
lcall
push
mov
cmp
mov
sbb
enter
sbb
dec
test
lret
cmpsb
push
mov
and
insl
imulb
iret
fiaddl
popl
mov
xor
cli
mov
in
popfw
popa
lret
aaa
jge
xchg
call
aad
or
leave
movsb
popa
lock
pop
mov
shrb
mov
cmp
add
xchg
addr16
lea
or
movsb
pop
sbb
push
imul
adc
or
xchg
sbb
inc
push
sbb
lret
mov
cltd
cli
stc
mov
loop
sbb
out
pop
xor
and
xlat
fdivrl
dec
sbb
sub
adc
repnz
fs
xor
lret
sbb
xor
scas
icebp
jmp
mov
out
fs
fimuls
or
stos
add
int3
rcrb
sbb
scas
ret
xor
fcomp
imul
pop
dec
dec
xor
mov
push
lret
jnp
mov
sub
repnz
and
lret
jae
jbe
lock
xor
test
jb
xor
into
sysenter
stos
outsb
adc
mov
add
js
rorl
out
test
fildll
sub
test
cmpl
int
lret
in
div
fcmovbe
inc
mov
pop
cli
push
fcoms
test
jns
ret
dec
fisttpll
mov
pushl
ret
mov
imul
popf
dec
add
out
push
adc
push
push
push
iret
dec
lret
dec
dec
mov
add
mov
add
insl
lret
cmp
mov
lret
xchg
sub
dec
sub
mov
movsl
repnz
sahf
test
out
fsubrl
pop
adc
stos
add
aas
inc
and
mov
and
adc
pusha
lret
push
outsb
lcall
mov
shll
notl
shlb
pop
fidivrs
fstpl
jmp
dec
and
add
cmp
fwait
xchg
and
lret
dec
ret
and
sub
mov
pusha
inc
xor
fcmovb
lods
cli
sbb
shlb
test
mov
mov
repz
xor
ficoms
stc
loopne
adc
enter
jecxz
int3
aad
movsl
inc
nop
lret
mov
jg
push
jge
sub
jmp
scas
jbe
insb
mov
loop
push
mov
mov
xor
lret
inc
cld
mov
pop
rorl
mov
shlb
push
and
sub
inc
mov
stos
out
xchg
jge
inc
jo
xlat
xor
iret
pop
test
lret
shll
bound
in
lods
cmp
jno
push
jmp
pop
pop
in
dec
in
push
sub
in
lods
cmp
stc
loop
mov
jle
test
mov
jnp
push
jns
push
push
ja
inc
or
outsl
mov
sarl
out
push
repnz
lods
pop
arpl
mov
push
mov
cmpsb
adc
loopne
int
rol
sarl
ds
mov
stc
xchg
or
xchg
arpl
jle
push
cli
ljmp
and
int
lret
xchg
iret
inc
cmc
sahf
in
call
cli
or
push
xlat
ds
fwait
cmp
xchg
dec
lret
mov
jge
inc
cmp
cltd
pop
popf
fistpl
paddusw
int3
dec
push
fs
jb
push
movsb
mov
lcall
and
mov
and
push
shll
pop
movsl
and
fcmovbe
cltd
mov
lret
push
mov
subl
dec
sbb
xchg
imul
rorl
xchg
or
push
sti
int
jae
dec
les
cld
pop
pop
lret
pusha
dec
jae
rcr
insl
stos
push
sahf
pop
daa
shl
sub
jecxz
and
aam
pop
filds
push
lret
in
xchg
mov
push
fwait
and
loope
lret
cwtl
mov
jp
xchg
rol
dec
sbb
push
and
adc
push
add
dec
mov
mov
xor
lret
cmp
bound
enter
xor
mov
jns
inc
loop
mov
lret
clc
jecxz
fwait
pop
and
ds
imul
pop
xor
fucomp
fimull
notb
dec
inc
movsl
mov
lret
popf
iret
adc
scas
sbb
into
mov
ret
push
std
mov
outsb
pop
adc
loop
pop
testl
int
ficompl
or
movsb
dec
lret
mov
stos
sbb
outsb
xchg
addr16
dec
rcrb
loope
notl
push
in
jle
imul
sbb
pop
mov
int
ror
bound
lods
nop
test
add
xor
es
movsl
dec
popa
push
fxch
mov
cmpsb
dec
xchg
iret
dec
cmc
lahf
mov
add
fdivrl
clc
je
lret
jp
cmp
call
insl
dec
jno
pop
fcoms
sub
das
mov
dec
fisubl
dec
add
dec
scas
in
popf
cmp
cmp
mov
mov
fwait
push
mov
jp
cmp
int3
ljmp
or
addr16
pop
mov
pop
or
sub
cli
cli
push
fnstcw
mov
lret
mov
push
aad
xor
arpl
xor
push
sub
std
out
jmp
mov
mov
push
mov
mov
mov
arpl
call
and
push
cmc
push
lret
sub
lret
xchg
lock
ficoml
rclb
cmc
aas
into
ficompl
mov
mov
mov
and
cli
lcall
mov
icebp
xor
leave
fnstenv
dec
mov
lods
xchg
mov
int3
out
stos
addr16
mov
cli
mov
dec
sbb
dec
stos
add
mov
je
cli
pop
cli
mov
aad
sar
and
add
push
push
dec
pop
fldenv
mov
fidivl
mov
cmp
xorb
lcall
cltd
pop
pop
adc
icebp
test
or
sub
pop
pop
dec
ljmp
stos
out
inc
fdivs
sbb
pop
data16
shlb
pop
lock
lret
in
pop
adc
mov
lret
cmp
or
mov
imul
lret
add
push
cwtl
adc
lods
jp
lods
cmp
push
xchg
lret
andb
xchg
jno
push
popf
cmc
xchg
ss
lret
dec
and
lret
xor
add
dec
jnp
lret
inc
xor
xchg
xlat
testl
mov
mov
xchg
into
xor
add
ret
sbb
dec
mov
push
jbe
mov
rorl
scas
arpl
gs
in
imul
jl
pushf
int3
pusha
movsl
inc
jnp
cmp
and
sbb
mov
js
mov
xchg
ljmp
pop
js
sub
fstpl
or
mov
fistl
add
lods
dec
stc
xchg
fdivrl
outsb
or
dec
or
adcl
lret
xchg
sub
add
lret
sub
fcoml
and
mov
shll
mov
ficoml
dec
in
inc
fistpll
push
insb
es
sti
add
aaa
lret
push
adc
outsb
int
mov
or
pop
ret
mov
dec
lret
clc
rclb
movsb
setne
lret
adcl
mov
into
in
test
dec
lret
scas
jbe
imul
xchg
lret
pop
cs
loop
jg
roll
rcrb
pop
in
aaa
icebp
ja
sbb
pop
outsb
adc
out
push
jb
pop
mov
in
lret
lahf
mov
mov
repnz
dec
mov
cmp
lret
sbb
xchg
cli
or
out
mov
push
lret
les
cmp
mov
or
fsts
aam
or
pop
hlt
bswap
out
xlat
lock
push
dec
mov
sub
imul
xchg
mov
int3
pop
clc
inc
sub
lcall
xchg
js
lods
lods
sbb
mov
add
mov
pushf
mov
incb
adc
xor
mov
dec
fimull
daa
enter
pusha
cmp
xor
fimuls
mov
mov
ljmp
js
sub
and
aam
repnz
jns
lret
rcrb
popa
push
stos
mov
sub
divb
sbb
rcrl
dec
in
sub
movsb
sar
xchg
fldenv
cwtl
pop
addr16
lret
mov
fdivrs
dec
pop
push
lret
mov
cwtl
push
cmp
loop
mov
popf
dec
sbb
fidivrl
or
and
lret
push
lret
and
ror
cmp
fcoms
cld
lret
dec
add
rolb
or
mov
aam
lret
mov
lods
mov
into
in
mov
mov
and
push
cmp
cld
add
xor
mov
call
shr
push
adc
or
mov
or
mov
sub
jmp
stos
dec
mov
lcall
sub
mov
into
and
int3
ret
mov
add
testl
shll
shll
cmp
rorb
jno
jmp
pop
fmul
sbbl
lcall
mov
inc
jns
lret
push
jb
sub
fcmove
icebp
jp
jge
xor
ss
dec
int3
fmuls
and
mov
adc
cld
xor
daa
fcos
dec
sbb
out
jns
lret
je
sub
iret
adc
mov
pop
mov
nop
das
jp
adc
sub
jbe
lret
xchg
mov
test
dec
imul
add
lret
push
out
sub
mov
jmp
adc
mov
pop
dec
fsts
cmp
xchg
rclb
jmp
adc
cltd
sub
loop
mov
test
fiadds
das
lret
cli
add
push
lods
mov
sub
xchg
cmp
call
pop
jmp
sbb
sbb
into
jecxz
xor
jp
ror
inc
push
aad
out
mov
cmp
sti
scas
cmc
cmp
ljmp
cmp
push
fsubr
sbb
jmp
lret
in
or
pop
jl
push
or
cmp
mov
fs
js
pop
pop
xchg
lret
ljmp
adc
add
cmp
push
aad
rcrb
dec
and
sub
loopne
mov
inc
push
push
iret
adc
pop
pop
push
pushf
lret
inc
lcall
mov
ret
filds
xchg
mov
push
add
stos
fst
sbbb
jno
or
cmp
lret
jg
xorb
outsl
sar
mov
inc
push
out
push
lret
xchg
arpl
xor
pop
nop
xchg
mov
jno
inc
mov
cwtl
mov
cmc
and
fstps
dec
subb
sarl
cmp
in
mov
mov
mov
cmpl
jb
adc
jl
sbb
add
push
jb
lock
xchg
dec
out
outsb
popf
roll
xchg
and
sbb
dec
fmuls
stc
lret
pop
ja
push
mov
dec
movsl
cmc
fisubrl
jae
jg
push
out
into
inc
xchg
leave
stos
lret
jbe
pop
mov
adcl
inc
fcoms
pop
lret
sub
daa
mov
je
loop
jecxz
xchg
jmp
into
xor
or
inc
sbb
mov
fsubp
dec
mov
lds
xor
lea
push
lret
add
mov
or
mov
and
dec
mov
sbb
andb
xchg
lret
push
mov
dec
fcomp
dec
pop
mov
sub
add
in
fisubl
daa
sti
arpl
mov
popf
lahf
or
xlat
clc
call
mov
jno
loop
ds
mov
jle
xor
enter
rcll
sar
call
lret
cmp
jg
xor
gs
loop
dec
hlt
movsb
dec
sbb
jbe
mov
ret
flds
lret
clc
and
lret
fisubrs
dec
push
push
cmovg
pop
sbb
es
cmp
enter
pop
jns
jae
iret
adc
rcrl
cmp
cli
add
jp
fwait
insl
movsl
jno
les
jne
adc
in
cmc
lret
cs
jle
lods
loope
push
sbbb
je
loop
das
in
lock
cwtl
hlt
pusha
jno
sarb
sbb
cmpb
cmpsb
test
pop
out
rcrl
jbe
lret
call
pop
addr16
cmp
into
xchg
repz
call
push
and
xor
jae
repnz
or
pop
lret
fs
inc
jmp
rcrb
pop
insl
rcll
mov
jno
xor
lods
lret
cwtl
dec
or
push
lcall
in
xchg
pop
in
pop
mov
lret
dec
out
adc
enter
pop
sbb
add
mov
mov
and
push
loope
and
cli
es
in
inc
notb
cld
in
xchg
or
scas
sub
xchg
decb
jecxz
push
fdivrl
in
movq
enter
and
jmp
and
fnstcw
lret
jecxz
dec
aas
in
mov
in
loope
or
pop
inc
sar
jae
imul
lods
mov
jg
roll
push
rorb
adc
xor
add
push
fidivl
inc
jo
pop
fsubrl
fdivs
ficoml
jmp
mov
dec
xor
ljmp
into
inc
cld
int
ss
cwtl
push
push
fcmove
imul
xchg
fld
sar
mov
push
add
mov
jp
add
fmuls
or
repz
xchg
neg
and
cmp
lret
push
mov
jns
loopne
add
or
sbb
mov
xchg
lahf
or
mov
rcll
movd
cmpsb
mov
cli
data16
in
pop
stos
rcrb
sbb
lods
mov
int
dec
inc
push
xchg
cmpsl
add
add
ljmp
into
aam
dec
shr
into
sub
lea
mov
or
mov
add
lret
call
fstpl
rorb
repz
mov
cs
mov
outsl
mov
pop
jae
mov
mov
push
jp
mov
test
mov
sbb
sub
xor
lret
jno
push
xor
lcall
imul
hlt
jmp
data16
lret
stos
mov
ljmp
dec
push
lret
mov
lods
and
push
fmuls
cmpsl
sbb
ljmp
fadds
cmp
test
sti
lret
pop
jle
stos
out
cwtl
mov
mov
cs
mov
mov
jle
adc
inc
fiaddl
cmp
mov
lea
mov
pusha
mov
jle
popa
leave
insb
cld
cmp
shr
lret
pop
sub
mov
dec
aas
dec
sub
into
orl
test
mov
lods
push
js
or
dec
push
lret
push
je
arpl
push
ljmp
add
into
popf
sbb
mov
sar
not
neg
add
sar
add
jmp
stos
in
mov
gs
stos
movsl
aaa
cmpsl
imul
jbe
jmp
aas
jno
adc
mov
iret
test
and
xchg
sbb
mov
ret
jp
mov
iret
and
pop
xor
popl
mov
push
outsl
or
push
xlat
cmp
inc
dec
enter
jns
sbb
xchg
mov
dec
sar
pop
xor
xor
ret
pop
mov
test
jmp
mov
repnz
jl
sti
int3
and
test
cmc
js
mov
push
push
in
std
lods
mov
in
loopne
and
mov
and
mov
roll
imul
insb
and
xchg
and
adc
cmp
jae
push
test
adc
mov
jb
push
and
nop
cltd
cmp
pop
lock
mov
std
lret
int3
mov
leave
int
addl
mov
pop
imul
mov
cmp
aaa
mov
jmp
cmc
cmpsb
outsb
cmpsb
rcrl
pusha
stc
inc
int
pop
ss
sub
scas
roll
and
xlat
rorl
push
dec
xor
inc
jno
jne
mov
mov
jne
jae
out
cmp
mov
jmp
call
daa
sahf
aas
scas
pop
or
popf
test
outsl
je
sete
pop
xchg
ret
dec
inc
mov
or
mov
xchg
iret
or
sbb
cmc
dec
addl
sub
test
jae
mov
out
into
adcb
sub
int
push
cmp
and
aad
addr16
mov
ljmp
mov
lcall
xchg
test
sub
bswap
sbb
xchg
push
shlb
xor
adc
inc
inc
test
mov
jne
ja
int3
and
push
fwait
dec
inc
inc
inc
push
mov
or
xchg
sbb
fcmovne
add
push
sahf
and
icebp
mov
sub
sbb
lret
sub
ljmp
shlb
fldt
push
push
pop
inc
sarb
pop
inc
jp
lock
inc
mov
pop
outsb
pushf
shrl
outsb
jge
adc
mov
sbb
aam
inc
int3
ret
bound
pushl
pop
scas
sarl
addl
cmp
ja
jp
js
mov
mov
or
ss
xor
orl
bound
mov
jmp
ss
gs
sbb
pop
dec
rcrb
leave
test
shll
movl
es
mov
mov
cld
testb
ss
mov
call
xor
cmp
push
fucom
pop
mov
mov
adc
ret
dec
pop
lods
mov
aaa
mov
jne
xor
and
clc
stos
aaa
mov
xchg
pushf
cmp
cmp
je
mov
mov
daa
in
movsb
pop
push
cltd
dec
lea
lods
jg
push
dec
cmp
push
push
pop
xor
push
mov
xor
and
mov
aaa
jns
xchg
repnz
repnz
das
testl
or
pop
rcrb
pop
sarb
push
adc
xchg
fmuls
pop
insl
mov
pushf
cmpsl
push
jb
out
lods
mov
leave
int3
cmp
mov
sub
sti
jg
xor
xor
xor
xor
scas
fs
mov
mov
call
ret
push
push
int3
outsl
js
add
ret
dec
rcll
adc
lret
push
mov
mov
mov
fs
cmp
in
mov
and
adc
fldenv
adc
jmp
stc
mov
or
xor
adc
inc
lret
int3
dec
lods
lods
fcoms
mov
mov
clc
jb
inc
push
jmp
push
pop
jp
sbb
jmp
into
aad
scas
ficompl
xchg
sbb
xchg
fcmovnbe
sbb
pop
lahf
push
int3
and
mov
ds
enter
sub
sub
cmpsl
test
test
loope
jns
fisttpl
int3
dec
fnstcw
into
enter
xchg
ror
inc
fldl
adc
pop
jmp
mov
mov
push
adc
cmpsl
rolb
mov
rcrb
shlb
je
ja
jmp
aad
lea
jg
lret
sbb
jl
push
lcall
sbb
call
hlt
jae
mov
mov
mov
lea
dec
jmp
cli
mov
in
fstpl
jae
mov
lods
cmp
mov
out
jp
jmp
popf
fwait
xchg
adc
cmp
lret
mov
fwait
testb
lcall
jne
ljmp
xchg
xchg
sahf
mov
add
push
jb
sbb
xor
dec
roll
addl
pop
sbb
xlat
ljmp
push
sahf
xchg
adc
cltd
or
xor
jbe
sti
mov
mov
mov
and
mull
mov
test
or
xchg
add
pop
push
add
rcrl
lods
xor
push
pop
jo
or
xorl
push
out
pop
nop
in
lahf
xchg
and
sarb
out
cmc
xor
xchg
or
push
add
les
lods
cmc
mov
rcrb
push
push
sbb
dec
pop
out
imul
or
test
cmp
pop
test
ja
jp
fwait
xchg
test
addb
rcr
pop
push
xchg
sbb
int3
and
popf
mov
lahf
loopne
test
push
mov
adc
mov
rcrl
sbb
push
lret
mov
add
push
jge
xchg
lds
ror
stc
jne
xchg
mov
dec
movsl
ror
adc
addr16
aad
hlt
inc
cmp
in
popa
insb
scas
jno
sub
mov
nop
lods
dec
xlat
inc
pop
cli
pop
inc
nop
push
out
add
test
pop
sbb
std
or
sahf
lea
push
dec
add
lret
add
int3
and
push
test
push
mov
inc
jge
jge
and
jecxz
loope
cmp
jo
js
mov
cmpsb
ret
xchg
cltd
mov
notl
mov
addb
fidivl
fs
mov
push
popa
out
cmc
popf
ljmp
add
xlat
dec
enter
ficoms
sub
test
xchg
clc
inc
inc
mov
addl
div
je
sbb
mov
mov
sti
mov
idivl
int3
and
add
add
rclb
inc
test
dec
test
xchg
pop
adc
inc
pop
add
xlat
inc
sbb
adcb
mov
pop
push
sbb
sub
mov
pop
pop
fisttpll
je
cli
imulb
xchg
pop
fcomp
outsb
mov
insb
cmp
inc
xchg
mov
mov
je
sahf
rcrl
test
mov
add
dec
or
cmp
and
call
push
lea
jmp
push
add
push
sbb
dec
insl
ds
loop
jle
arpl
gs
pop
push
loopne
arpl
ficoms
xchg
sub
or
pop
std
xor
adc
dec
outsl
pop
cli
jae
or
xorb
filds
adc
fimull
rorl
and
mov
pop
push
cmp
rorl
add
pop
adc
and
ret
inc
loop
imul
in
les
add
dec
les
stos
mov
xor
adc
push
orb
and
inc
mov
push
pop
loop
imul
mov
xchg
rclb
and
cs
sbb
std
ss
xor
repz
daa
push
adc
scas
lcall
dec
jae
jp
je
jbe
gs
pushf
sbb
dec
and
sub
push
rcrl
es
and
mov
jns
mov
sti
jno
jge
int3
and
pushl
xor
fildl
rcrb
or
shll
scas
fsubrl
idivb
aad
insb
imulb
mov
xchg
sbb
xchg
sbb
inc
in
loope
stos
sahf
addb
mov
cmp
clc
bound
push
jb
jnp
jmp
loop
aad
and
sub
ja
jbe
arpl
ret
arpl
pushf
add
push
pop
dec
inc
inc
pop
enter
les
orb
aam
out
in
lods
sub
mov
and
sahf
adc
aas
in
loope
mov
in
loope
repz
enter
minps
xchg
insl
cmpw
fisttpll
lret
xor
repnz
shll
inc
xchg
fdivs
mov
mov
aas
lret
xchg
mov
mov
fsubs
movsl
gs
mov
in
rcrb
sbb
push
push
pop
push
pop
ret
lock
and
lret
ja
jle
adc
or
or
and
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
mov
cmp
dec
jl
int3
jmp
movsl
sub
mov
imul
xor
sbb
adc
scas
or
fdivrs
aaa
gs
popa
mov
lods
stc
iret
add
shl
sarl
pop
imul
or
pop
pop
outsb
pusha
addr16
push
pushf
shr
in
cmc
out
scas
stc
mov
in
sti
pop
mov
sub
scas
idivb
out
bound
add
je
iret
mov
or
or
pop
xor
mov
mov
mov
or
gs
pop
cltd
pop
inc
mov
mov
leave
sbb
push
xchg
add
int
popa
sbbl
bound
shr
lcall
js
ficomps
aaa
adc
add
sbb
mov
fcoms
lret
stc
jge
mov
sub
and
jo
div
push
dec
and
fbld
push
divl
imul
lahf
xchg
addr16
jbe
mov
jmp
movsb
scas
scas
stos
in
and
mov
call
pushf
adc
push
sahf
push
fisttps
ljmp
out
push
sarb
lds
test
int
cvtpi2ps
jnp
dec
dec
pop
popl
icebp
mov
adc
pop
jle
mov
orl
mov
gs
and
adc
dec
and
push
mov
out
jno
xor
pop
xor
pop
bound
pop
addr16
jl
fs
add
fildl
jnp
nop
jg
xchg
fnstsw
xchg
fnstenv
and
sbb
xchg
jns
add
repz
xchg
out
rcr
mov
inc
fstpt
push
inc
ja
sub
insb
dec
push
jne
shl
std
shlb
mov
push
jp
dec
and
mov
dec
inc
inc
int
loop
add
jo
push
pusha
imul
or
cmp
cmp
sahf
ljmp
repz
bound
jg
mov
mov
pusha
scas
lods
adc
mov
fcmovbe
mov
xchg
movsb
pushf
xchg
cwtl
int3
and
popl
xor
in
ficoms
mov
fcmovbe
mov
aaa
push
mov
and
arpl
cld
mov
insl
cld
lods
mov
cmc
repz
push
push
adc
inc
lds
inc
pusha
mov
mov
push
sub
mov
xor
or
adc
adc
inc
sub
add
push
sahf
or
nop
push
rolb
shrl
mov
fisubrs
and
pop
adc
cld
add
mov
cmp
mov
pop
lret
add
dec
out
inc
add
mov
inc
mov
loopne
mov
cltd
out
scas
mov
loopne
jecxz
movsb
mov
and
inc
mov
pop
pop
loopne
mov
in
pushl
jo
call
pop
cmpsb
mov
and
cltd
inc
movsb
adc
leave
mov
data16
pop
test
mov
xlat
das
and
and
sub
fs
ret
push
pop
ret
aaa
lds
cmc
jno
or
dec
scas
dec
inc
pop
cmp
sub
push
push
sbb
fistl
fmul
and
add
xchg
stos
movb
mov
pushf
movb
lea
jmp
inc
xchg
push
pop
adc
scas
push
dec
dec
in
ljmp
mov
mov
insl
mov
cmp
lds
outsb
pop
nop
stc
mov
mov
dec
sub
into
dec
testl
jecxz
leave
into
xchg
stos
cmpsl
xor
jp
pop
hlt
mov
inc
jg
xor
stc
jno
mov
inc
daa
mov
mov
or
xchg
mov
push
addr16
negl
test
outsb
and
imul
and
jecxz
scas
movsl
in
int3
and
rep
mov
stos
stos
adc
into
inc
dec
sbb
cli
cmc
aas
out
ja
test
lcall
or
add
or
add
sarl
dec
out
pop
popf
lcall
mov
je
stc
inc
jge
jmp
jge
inc
mov
inc
stc
fsubrs
xor
xlat
mov
insl
dec
jl
dec
adc
pop
pop
fists
aam
xchg
sbb
and
adc
add
mov
or
mov
cmc
cmc
jle
and
sub
mov
mov
push
and
faddl
inc
dec
lods
dec
lds
in
cld
stc
jg
jno
jge
cld
cmp
cmp
and
sbb
mov
repz
jb
and
mov
add
mov
cmp
lret
in
outsb
mov
lret
pop
pop
push
fstps
mov
aad
pushf
xor
mov
xor
in
aam
xchg
push
jl
out
ds
pushf
pop
jmpw
stos
out
push
fwait
add
ds
fbld
jb
mov
xchg
xchg
fnstcw
add
mov
inc
adc
orb
fldl
repz
mov
push
xchg
or
mov
in
shlb
and
jo
inc
pop
jno
inc
cmpsb
mov
sahf
daa
scas
and
pop
and
jle
shrb
aam
ret
fisttps
inc
dec
test
idivl
sub
adc
pop
lods
pop
cmp
movl
rcr
xchg
mov
xchg
test
push
add
dec
pop
into
ja
and
ss
insl
jge
notb
push
pop
ficoms
int3
and
or
push
pop
inc
mov
ss
in
jp
jns
in
cmp
pop
mov
xchg
fs
jae
and
fnstcw
and
fistl
cmp
add
inc
roll
rol
push
jmp
mov
jmp
ret
pop
adc
jecxz
push
sti
mov
mov
jle
xor
js
icebp
int3
and
cmp
mov
daa
ljmp
pusha
fmull
add
nop
fists
add
sbb
ljmp
sbb
push
jmp
rorb
jbe
rcl
test
das
cmp
das
lcall
call
dec
or
mov
mov
mov
enter
bound
inc
cmp
xor
mov
and
out
lret
push
fbstp
jg
stos
sti
mov
iret
into
xlat
xchg
push
adc
pushf
sbb
sbb
movsl
cmpsl
push
push
mov
bswap
lea
pop
pusha
movl
push
pushl
ret
add
dec
jae
imul
jae
bound
and
pusha
mov
inc
add
imul
loop
pushl
insl
pushl
jl
jge
in
jne
daa
or
ljmp
das
or
popf
jg
mov
ds
in
dec
shr
shlb
pop
adc
push
and
jno
push
inc
ret
aam
dec
cmpsl
jmp
lea
clc
cltd
or
lods
add
inc
add
lods
pop
inc
scas
bound
dec
scas
stos
push
pop
fiaddl
dec
xchg
pop
mov
xchg
shrb
daa
sub
xchg
repnz
repnz
pop
xchg
add
rorb
mov
iret
or
int3
and
sbb
rorl
jno
dec
insl
jb,pt
insb
jg
bound
lods
sub
mov
lret
pop
push
xchg
dec
lret
aas
cld
and
out
shrb
mov
inc
sbb
clc
popl
jp
jnp
out
pop
pushf
movsl
rcrl
ds
imul
rorb
loopne
pop
push
movsl
adc
or
cwtl
rcrl
rclb
and
sbb
xchg
cltd
and
add
dec
adc
push
sbb
fcmovne
push
xchg
inc
or
movb
inc
pop
jno
js
rclb
stc
filds
and
imull
fidivrl
push
popf
xchg
js
and
sub
mov
hlt
sub
push
ret
push
fsubs
ret
gs
fucomip
aad
hlt
repz
addr16
cmp
adc
mov
mov
dec
lcall
push
fcoml
push
dec
mov
int
data16
repnz
xor
sti
lock
and
ret
into
rcrl
ja
out
in
push
push
push
xor
movsl
hlt
mov
lock
clc
and
xor
test
add
mov
je
fisttpl
shll
xchg
mov
push
cmpsb
scas
addr16
xor
out
push
add
dec
add
cmp
or
mov
inc
or
dec
push
mov
into
int3
and
les
dec
movl
jmp
xchg
mov
mov
cld
xor
scas
jl
mov
and
push
sbb
push
shrl
lcall
xor
push
and
loop
mov
imul
pusha
in
jo
rcrb
sbb
nop
or
mov
add
ret
push
es
rcrb
daa
ljmp
xchg
popf
pop
imull
jecxz
scas
imul
sarl
mov
xor
sarl
jnp
es
sbb
dec
rolb
out
mov
out
pop
mov
rcrl
fcoml
fcmovb
ds
xor
ret
gs
mov
cmpsl
and
mov
lock
popf
mov
bound
dec
test
mov
sti
lock
cmc
jnp
and
inc
mov
push
cmp
bnd
aas
xor
ljmp
jle
mov
pop
sbb
push
arpl
push
psubsb
xchg
sahf
out
dec
cmp
dec
into
jmp
cmp
xor
mov
outsb
mov
push
fstps
mov
cltd
sbb
stc
les
icebp
and
sbb
inc
orl
dec
les
fsts
jg
inc
or
call
outsb
daa
cmpsl
scas
push
lods
int3
and
fcom
mov
rcrb
jmp
cmp
sub
das
sbb
cmp
xchg
mov
cmp
or
shlb
sbb
jbe
test
inc
outsb
fadd
cmp
gs
push
mov
shll
push
dec
push
xchg
fldcw
xchg
xchg
pop
fistps
pop
pop
xchg
int3
and
lea
ja
pushf
call
dec
mov
ficoms
lods
ss
outsb
and
jb,pt
mov
push
loop
mov
push
loop
aaa
xchg
sub
mov
cmp
pop
cltd
inc
lods
popf
sahf
inc
mov
out
xor
test
sub
pop
call
enter
cmp
cmc
lds
out
xor
jb
ss
out
mov
mov
cmp
pop
jno
jno
mov
push
lcall
rcrl
popf
sub
xchg
push
push
xor
xor
fs
insb
add
lret
btc
xadd
mov
push
push
mov
bsf
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
ja
cmc
lcall
and
dec
dec
jno
lods
and
cmp
cmp
bound
pop
pop
bound
shlb
jp,pn
in
in
inc
cmpsl
outsb
or
dec
test
ret
fcomps
outsl
push
ficomps
decb
mov
push
lds
test
fisubl
cmp
cmp
or
fsub
es
add
sbb
out
fistl
cmp
cltd
jp
or
xchg
lret
scas
cmpsb
scas
jmp
jmp
loopne
popa
int3
and
fwait
dec
inc
xor
jge
and
std
scas
mov
jns
callw
push
mov
rclb
mov
add
aaa
lea
lock
xor
push
pop
test
xor
loope
loop
imul
shrb
add
sub
test
mov
push
or
mov
iret
or
inc
leave
test
and
push
xor
inc
push
stos
pushf
sbb
sbb
int3
add
inc
mov
xlat
pop
sub
jmp
jno
cmpsb
ljmp
mov
mov
insl
mov
stos
xchg
ficoml
push
push
pop
scas
imul
js
sub
lahf
jp
mov
lock
jo
aas
mov
mov
cs
mov
jb
mov
jno
insl
aam
ljmp
xor
add
push
pushf
push
sbb
repz
shr
and
sub
movsb
loope
scas
mov
cmp
push
lock
std
std
andl
insb
insl
mov
ret
ja
mov
enter
daa
outsl
loope
mov
pop
ds
jae
cld
popf
jge
or
sbbl
lret
out
sub
test
ss
add
bound
popa
push
in
xchg
push
xchg
mov
xchg
push
test
fsub
ret
enter
fimuls
das
and
sub
adc
int3
fists
fstl
rcll
fbld
jno
or
js
movsl
sbb
mov
mov
in
xchg
test
adc
insl
sbb
addl
or
mov
adc
push
ret
js
push
cmpsl
adc
jae
loopne
es
jo
push
adc
dec
call
and
addb
lea
sub
pop
push
cmp
mov
sbb
push
mov
pop
xchg
push
pop
xchg
pop
adc
int3
and
xchg
inc
aad
inc
cmp
testb
imul
mov
out
arpl
xchg
add
insl
mov
adc
add
jle
add
cmp
ret
in
cs
data16
addw
cmp
inc
fcmovnbe
mov
hlt
out
in
js
mov
or
fbstp
scas
movsb
push
xor
mov
lret
inc
enter
pop
add
pop
ret
int3
and
or
daa
addl
mov
ja
push
imul
aad
mov
les
cmp
lahf
push
mov
in
dec
icebp
add
and
push
or
je
pop
in
pop
pop
dec
dec
add
pop
pop
loop
cwtl
jmp
movsl
cmp
lods
pushf
xchg
dec
out
cli
subb
imul
iret
sarl
sub
jl
jnp
lods
testl
loopne
sbb
pushf
jl
sti
inc
mov
loope
lock
rcrb
test
sti
sub
adc
xor
sti
jae
mov
cltd
adc
and
filds
or
cwtl
pushl
adc
xchg
sbb
or
inc
dec
push
pop
xor
ds
lods
mov
loopne
push
mov
imul
and
inc
push
inc
popf
pushf
les
cmp
test
dec
sbb
mov
lock
mov
pop
push
je
and
outsb
dec
lea
fstl
pop
fistps
cltd
pop
adc
and
stos
xor
adc
pushl
push
mov
push
sbb
push
lahf
add
pop
adc
js
xchg
sbb
cmc
in
sub
rcrl
push
jmp
jp
or
sub
and
test
and
mov
cmp
in
and
sub
fs
aam
pop
out
mov
xlat
sahf
push
adc
sbb
sbb
sbb
fadd
cmc
add
into
inc
dec
dec
push
or
int3
and
add
pop
lea
jb
jmp
cmp
clc
sub
dec
idivb
aad
xchg
mov
pop
or
or
or
lahf
sub
repnz
addr16
and
xchg
lret
fbld
test
or
fildll
rcr
jecxz
sbb
cmp
arpl
ret
mov
in
je
adc
and
sub
mov
push
mov
in
repz
cwtl
push
clc
mov
idivl
cmp
ja
stc
mov
cld
sti
mov
and
and
jno
lock
cmpsl
sub
stc
imul
jmp
jnp
popa
scas
mov
sub
fldcw
dec
rcrl
loope
test
cmp
ret
mov
pop
fld
call
xlat
sub
and
fsts
sub
js
inc
cmpsb
imul
jne
adc
sbb
sbbb
cmp
mov
les
dec
aaa
jle
mov
push
cwtl
sbbl
cmpsb
insl
sub
sub
daa
sub
xchg
mov
fwait
push
repnz
lahf
push
pop
rcr
push
adc
or
cmp
shrb
add
icebp
imull
fwait
push
mov
rclb
sub
mov
push
add
std
lret
cmp
inc
or
aad
xor
inc
cwtl
xlat
out
push
cwtl
sbb
pop
or
xor
cmp
ljmp
adc
add
aam
inc
push
loop
sub
adc
in
mov
xor
jle
lea
loope
loopne
cmc
xor
or
mov
rcll
rcrl
aad
xchg
sbb
and
fcoml
add
sbb
jb
test
leave
lcall
popf
sbb
and
push
push
push
lahf
orl
cli
inc
cmp
sbb
add
cld
mov
adc
lods
add
jne
test
fistl
imul
pop
add
les
dec
rorl
dec
add
xchg
ficomps
out
out
and
cltd
pop
xchg
add
add
dec
add
sahf
dec
or
sub
fstl
lods
mov
aam
xor
pop
clc
out
icebp
xchg
test
and
aaa
jmp
rcl
inc
mov
adc
xchg
sub
or
adc
push
or
popf
rcll
aas
idiv
jmp
pop
stos
and
push
and
cmp
cmp
pop
test
lret
mov
xor
lock
int3
and
leave
fistl
jle
ret
adc
push
fstl
or
push
inc
popf
lcall
sub
clc
test
jb
mov
test
cmp
jecxz
sbb
xchg
addr16
and
fcompl
dec
cmp
pop
or
fidivl
scas
int3
or
mov
cld
xlat
mov
push
out
and
xor
enter
pop
popa
mov
in
jbe,pn
std
push
push
add
jge
sub
inc
push
mov
or
int3
and
and
adc
pushf
pusha
push
pushl
lea
jmp
add
nop
fwait
xchg
jle
inc
add
ret
rol
adc
inc
push
lcall
lds
pushf
push
mov
adcb
cmpsl
dec
or
and
push
and
or
gs
lods
fdivl
lea
cld
out
jo
jg
icebp
test
loopne
jp
les
jmp
xchg
jno
mov
push
mov
sbb
mov
mov
push
mov
xchg
push
add
mov
into
int3
and
mul
call
push
pop
cli
push
and
ja
jbe
mov
mov
cmp
xchg
mov
add
jge
cmc
xchg
sub
in
pop
pop
add
xor
xor
sti
scas
sbb
inc
sub
pop
subb
repnz
sahf
dec
dec
xchg
test
push
and
jl
jb
jle
mov
mov
test
mov
pop
xchg
cli
in
shll
mov
das
mov
out
cli
mov
rcl
icebp
dec
outsb
cmp
add
pop
movsb
add
adc
sbb
test
adc
pop
or
sarb
hlt
cld
adc
daa
pop
sbb
rolb
inc
test
xchg
scas
les
mov
xor
ficoml
mov
adc
xchg
push
rcrb
and
cmpsb
test
js
mov
scas
mov
idivl
out
call
stc
gs
mov
and
mov
setg
loopne
mov
faddp
lods
fisubrs
addr16
push
outsb
and
dec
push
roll
ret
mov
cmp
and
xchg
mov
xor
aaa
int3
and
roll
shrd
bsr
pusha
mov
clc
dec
mov
adc
bswap
test
mov
jmp
mov
fnstcw
mov
call
mov
mov
xchg
xlat
dec
mov
das
mov
xchg
out
pusha
jge
aas
mov
adc
cmp
stc
jmp
cs
gs
jp
ljmp
mov
cmp
lock
pop
pop
lahf
rolb
cmp
push
stos
movsb
xor
stos
insb
fldenv
add
and
mov
push
je
mov
mov
idivl
mov
and
add
add
mov
rcr
dec
adc
adc
dec
pop
inc
mov
adc
int3
popf
nop
add
pushf
lock
jg
out
mov
add
std
jge
push
dec
inc
mov
sub
jbe
outsb
bound
mov
pop
xchg
fmuls
iret
add
xor
jbe
cmp
pop
xchg
mov
jns
jnp
std
int3
and
dec
pusha
pushf
pushf
add
lea
jno
pushf
push
lea
jne
setbe
pushf
pushfw
popw
jmp
rolb
push
lea
ret
xor
test
je
jmp
imul
enter
add
add
pusha
add
and
sbb
std
loop
call
mov
inc
dec
aam
push
in
mov
arpl
outsl
outsb
ret
push
jbe
jl
out
and
xor
mov
xor
mov
jae
jge
mov
int3
and
add
movl
call
xchg
fcom
dec
test
push
mov
lods
scas
jg
jge
mov
push
fcmovnb
xor
ljmp
loope
std
insl
mov
cmpsb
ret
sub
imul
es
mov
stc
cmc
test
sti
add
shrb
scas
pop
push
xor
addb
sbb
xchg
adc
lock
push
movsl
jge
test
xchg
pop
iret
cmpsl
jmp
mov
pop
inc
inc
inc
xchg
es
or
rolb
push
sbb
cld
rcl
push
movzbl
adc
add
mov
jae
lods
push
inc
jnp
iret
mov
lea
push
int3
and
clc
stos
cli
ja
mov
movsl
scas
xchg
mov
or
sbb
shrb
jle
incb
in
xchg
call
inc
idivb
sbb
cmpb
sahf
xchg
leave
clc
repnz
fstps
mov
orb
sub
cld
and
cmp
push
mov
pusha
or
icebp
enter
inc
jle
cmpsb
sub
sub
cmp
mov
popl
orb
leave
lea
and
pop
xchg
pmuludq
jo
adc
sbb
lahf
nop
pop
or
sbb
aam
aam
push
jae
mov
xchg
aad
fs
sbb
push
testb
mov
and
ud2
xlat
mov
leave
mov
inc
inc
push
scas
loopne
cmp
fimull
jo
aaa
adc
insb
push
and
adc
aam
leave
sub
xchg
cmpsl
pop
push
pop
push
push
lahf
fcmovbe
xchg
xchg
xchg
xchg
pop
pushf
adc
and
lret
rcrl
sbbb
jo
xor
enter
fimull
mov
push
out
add
test
dec
into
rcrb
cmp
or
push
dec
push
out
mov
sbb
scas
adc
mov
fwait
cmp
xchg
addb
adc
cmpsl
jge
mov
mov
leave
mov
add
out
notb
out
mov
jne
loop
pop
sbb
cltd
mov
mov
leave
xchg
mov
mov
push
mov
mov
push
inc
push
out
sbb
xchg
ljmp
inc
push
cltd
fisubl
subb
pop
loope
ljmp
mov
pop
and
addr16
dec
sahf
xchg
pop
sbbb
mov
pop
dec
sarl
stos
in
aas
neg
or
inc
ss
into
dec
std
gs
rorb
push
int3
jp
jmp
ss
push
push
rcr
gs
ss
or
sbb
stos
push
jb
cmp
jmp
loop
lret
mov
add
push
lret
push
or
dec
negl
fucomip
mov
mov
xor
mov
push
cmp
xor
out
jge
mov
xor
mov
sbb
pop
jns
add
addr16
negl
js
mov
sbbb
dec
inc
add
ljmp
push
push
sbb
dec
mov
bound
dec
push
and
push
aaa
por
lods
mov
add
enter
mov
dec
cmp
cwtl
mov
test
adc
mov
sbb
pop
cmc
jg
mov
lret
mov
lea
sbb
imul
push
push
nop
push
push
jne
sbb
dec
sahf
inc
pop
stc
dec
inc
add
out
in
repnz
addl
xchg
xor
mov
imul
push
lcall
xor
int3
pop
pop
std
lods
xlat
mov
mov
push
bound
push
ja
and
xchg
mov
ret
in
lret
push
sub
mov
push
push
inc
cmpl
aas
iret
mov
cmp
addr16
testl
into
insb
or
shll
dec
mov
repnz
rclb
xchg
lods
leave
xor
loop
out
in
in
mov
stos
xchg
mov
pop
rclb
daa
jns
mov
or
pop
lret
mov
std
jmp
sub
dec
push
mov
jle
cmp
mov
decl
dec
mov
testl
sbb
jl
aam
cmp
xlat
out
sti
out
fisttps
insb
or
outsl
mov
push
xor
cld
mov
sbb
fs
rcr
out
sbb
cmp
xchg
adc
hlt
cmc
push
or
or
lret
pop
dec
sub
push
bswap
pop
xchg
nop
and
les
push
loop
repz
out
bswap
clc
push
dec
in
mov
pop
sarb
push
cmpsb
and
inc
push
mov
jmp
rsm
lcall
loopne
nop
mov
sbb
jae
iret
xchg
out
sub
mov
push
sbb
sub
mov
ds
adc
repz
loopne
fmulp
push
loopne
negl
push
imul
push
jmp
jbe
out
test
push
lret
mull
and
ds
mov
out
sbb
pop
outsb
lret
or
pop
push
or
pop
xor
loopne
fstpt
mov
out
cmpsl
std
dec
pop
mov
sbb
scas
mov
bound
pop
push
dec
pop
cmovnp
lea
mov
pop
and
std
imul
mov
sbb
daa
dec
rcrb
cltd
test
xlat
pop
mov
mov
pop
pop
iret
xor
pop
call
cli
mov
sbb
addr16
shr
jne
dec
push
mov
pop
addr16
test
dec
out
dec
movsl
imul
push
jns
dec
jne
ret
lret
push
ds
mov
test
push
pop
fdivr
jmp
or
xlat
stos
lods
mov
adc
adc
repz
lcall
lea
iret
or
imul
aad
idivb
and
dec
push
fidivrl
pop
pop
dec
xor
xor
lret
rcl
add
das
in
jge
aaa
fisubs
bound
pop
adc
std
aad
into
mov
jmp
sub
jb
mov
dec
sub
adc
xor
sbb
xchg
daa
pop
fiaddl
movsl
ficoml
ds
and
movsb
mov
mov
inc
rorl
push
push
insl
ds
push
fimuls
mov
into
popf
pop
pop
adc
push
push
xor
fwait
test
push
xchg
lods
push
jp
insl
xchg
push
dec
pop
fbstp
xor
shlb
adc
xchg
not
push
sub
dec
xlat
fbld
in
pop
or
pop
roll
pop
mov
sbb
xchg
adc
dec
jp
sub
jo
mov
stos
hlt
adc
cs
inc
notl
test
jnp
imul
jp
jge
iret
push
ficompl
imul
lret
ss
and
pop
adc
sub
insl
pop
xor
int3
pushf
sbb
add
push
fwait
int3
add
mov
adcl
mov
or
in
push
cmpl
add
cmp
int3
cmp
xor
jns
aam
fcompl
pop
mov
adc
push
scas
fistpll
aam
mov
sub
xor
or
mov
int3
push
or
adcb
fimull
fiaddl
mov
fwait
imul
or
fisubl
sub
or
push
pminsw
fidivl
out
dec
xor
sub
cwtl
js
or
add
and
or
add
mov
in
dec
inc
cmp
sbb
cli
and
sti
iret
out
mov
inc
aaa
push
cmp
and
ficoml
and
adc
cmc
arpl
push
lea
xor
add
out
mov
and
push
xchg
push
mov
mov
jmp
iret
xchg
xor
push
cmp
fidivrl
shrb
inc
mov
sub
xorb
fcomip
lds
mov
pop
insb
adc
push
inc
iret
ficompl
int
int3
mov
fwait
and
shrl
or
sti
test
aas
add
popa
mov
sub
int3
cli
cmp
and
cmp
or
cmpsl
je
mov
in
sbb
ss
addl
mov
push
mov
inc
inc
dec
into
pop
iret
fistps
imul
mov
dec
int3
fs
imul
out
push
xchg
out
into
leave
sbb
or
fists
xlat
pop
jo
push
and
cmp
fmull
pop
cld
sbb
rcr
pop
insl
enter
rcll
jno
ljmp
xchg
push
inc
sub
cmp
movl
and
push
je
adc
mov
sahf
dec
mov
out
emms
dec
lea
fwait
test
mov
mov
ret
pop
mov
mov
aas
out
fisttpl
dec
int
and
in
mov
xchg
iret
or
lret
adc
bound
and
or
xchg
mov
mov
pop
mov
es
test
out
in
mov
iret
and
mov
ljmp
mov
fadds
rorl
or
popf
cmp
mov
cli
push
or
ljmp
adc
bound
jbe
cmpsl
mov
lret
adc
push
sahf
cwtl
dec
mov
cs
dec
bound
out
mov
lods
mov
and
dec
lods
mov
lods
sahf
pop
inc
mov
and
pop
stos
push
ss
rorb
xchg
fcmovne
sub
das
or
ljmp
lods
and
fnstcw
mov
pop
or
ret
or
add
data16
xor
int
iret
or
mov
jp
push
inc
ljmp
leave
cli
dec
mov
sbb
ljmp
sbb
lret
push
mov
sub
in
or
push
iret
jae
aas
dec
call
dec
das
lret
test
jge
aas
cmc
mov
dec
gs
mov
or
pop
lret
jp
cmp
mov
stos
into
dec
shrb
sbb
imul
ret
pop
sbb
pop
sub
ljmp
lea
inc
mov
stos
push
sbb
jge,pn
push
ljmp
mov
insb
mov
inc
pop
and
vphadduwq
push
dec
jnp
pop
lods
push
arpl
mov
push
dec
lcall
sysenter
cltd
sbb
push
xor
dec
adc
adcb
sbb
sbb
sbb
push
test
iret
fcmovne
sti
fcomps
pop
lock
push
int3
or
fwait
adc
fildll
mov
mov
lea
dec
inc
sub
pop
rorb
pop
aas
sarl
int3
xor
sbb
dec
push
xchg
adc
scas
call
fstpl
and
mov
loop
sub
in
jb
jo
sub
mov
mov
dec
int3
cmp
or
lahf
dec
out
jbe,pn
fwait
sarl
sub
cmp
or
dec
mov
fucomp
jecxz
cmp
jb
int3
xchg
mov
fs
loop
out
pop
push
add
or
mov
repnz
subb
iret
jle
adc
mov
loop
scas
je
xor
iret
ljmp
lods
stos
or
sub
dec
add
hlt
leave
imul
scas
and
sub
lock
dec
xchg
fisttpl
and
xchg
mov
cs
jne
neg
pushf
popa
sbb
mov
dec
aaa
xlat
shll
ljmp
adcb
or
cs
dec
and
bound
imul
insb
xchg
pop
jb
sbb
dec
or
enter
dec
std
div
fisttpl
mov
clc
adc
aaa
int
icebp
jle
aam
jns
dec
repnz
mov
cli
fxch
push
shrl
fisttps
push
stos
push
or
ret
cwtl
lods
sbb
fdivs
dec
mov
or
ljmp
iret
mov
pop
jnp
jo
pop
jns
mull
into
xor
shr
push
cwtl
pop
cs
hlt
cmpl
xor
inc
sub
mov
mov
pop
pop
ljmp
xor
push
in
adc
add
and
lret
xchg
pop
jp
push
push
iret
fisubl
jnp
gs
adc
push
rcr
add
mov
iret
pop
push
outsl
stc
and
shll
loop
adc
xchg
fdivs
aad
out
dec
inc
out
xor
or
dec
adc
lret
jmp
out
incl
add
mov
dec
sti
jne
and
jne
adc
xor
and
scas
and
mov
pop
lret
sti
in
das
cmpsb
int
jge
and
jp
repz
in
shlb
mov
xchg
repnz
outsl
push
repnz
shr
push
popl
sbb
fucomi
bound
fiaddl
out
pop
mov
inc
aad
repnz
out
dec
out
mov
in
mov
incl
jno
or
add
pushf
mov
fimuls
pop
pop
cmpb
pop
in
lahf
and
add
leave
dec
pop
rcrl
in
lods
cli
mov
and
mov
mov
fildll
and
cmp
in
bound
jle
mov
cmp
fnclex
out
lahf
adc
cmp
std
cmp
ljmp
into
pusha
push
stc
loop
imul
lret
push
jnp
ljmp
stos
pop
and
int
sbb
ds
outsl
mov
push
fdivrl
mov
add
shrl
pop
fadd
popf
lds
adc
mulb
je
or
mov
movsl
adc
divb
sbbb
xor
decl
js
je
xchg
out
je
incb
scas
pop
push
lea
adc
pop
loope
jp
cli
pop
icebp
mov
dec
jns
lret
inc
mov
mov
leave
test
pop
test
out
leave
dec
sub
sarb
pop
sbb
xchg
dec
dec
jns
iret
repnz
pushf
scas
mov
icebp
inc
lret
jl
add
in
icebp
dec
or
mov
neg
iret
mov
loope
fsubrl
cmp
push
or
ljmp
sub
cs
shr
pushf
adc
into
jge
mov
sub
push
push
mov
into
jg
pop
fcmovu
sbb
pop
in
rol
prefetch
andl
and
mov
popa
push
dec
mov
or
mov
imul
imul
push
push
outsb
dec
lods
or
dec
jns
shlb
xor
xorb
or
bound
pop
outsb
push
mov
fidivl
mov
iret
mov
push
pop
sti
add
js
push
repnz
adc
scas
dec
iret
mov
xor
popf
sbb
dec
xor
jnp
cmp
add
pop
xor
jmp
leave
fisubrs
mov
nop
and
scas
xchg
aas
mov
sbbl
push
lods
cmc
xlat
pop
movsb
cmp
xor
jl
and
test
and
fisttpll
punpckhdq
pop
hlt
push
repnz
cmp
pop
icebp
mov
popa
or
mov
mov
adc
sub
dec
sub
add
lret
and
add
test
pop
dec
nop
and
pop
not
dec
push
pusha
ljmp
mov
or
cld
mov
sub
ret
sbb
jbe
cld
lods
sbb
mov
lcall
add
inc
push
sbb
iret
popa
int3
popa
mov
dec
iret
pop
mov
dec
bound
insb
ret
pop
adc
sub
xchg
add
das
or
pop
add
lret
and
bound
jmp
out
int
sahf
lret
xchg
loop
ret
movsb
movsb
xchg
iret
mov
push
ret
pop
lahf
dec
orl
stos
lcall
test
mov
mov
or
mov
dec
push
or
mov
outsb
jp
pop
jl
sahf
dec
push
pop
cwtl
jmp
jns
scas
out
cmp
mov
aam
jb
in
scas
lahf
mov
push
jg
jl
cmp
mov
and
imul
fbstp
mov
test
dec
int3
jns
in
push
sub
aas
fisubl
jl
js
adc
aam
dec
and
dec
pop
jae
outsb
sub
call
xlat
adc
cmp
dec
idivl
lret
into
lret
mov
popf
xchg
mov
je
pop
sbb
dec
push
mov
cmpsb
cli
ss
data16
pop
adc
fildll
mov
jns
or
outsl
stc
out
ljmp
in
mov
cmpsl
xchg
jge
stos
mov
adc
mov
out
pop
daa
adc
pop
test
push
dec
mov
adc
push
jno
or
cmp
clc
sbb
xchg
adc
push
cli
stc
inc
ds
or
stos
jno
es
push
dec
or
into
adc
cwtl
or
das
pop
pop
jo
pushf
push
test
dec
cli
adc
int3
push
inc
cmp
lea
or
mov
jecxz
adc
sbb
dec
repz
int3
adc
lret
jae
mov
lock
push
or
call
add
mov
pop
and
pop
or
notl
inc
sti
cmp
inc
push
cmp
mov
jl
or
or
add
adc
cmp
jnp
adc
mov
mov
sahf
pushf
jmp
pop
jnp
pusha
iret
push
jl
dec
mov
push
jnp
jg
stos
scas
mov
subb
jle
mov
xchg
iret
jno
sub
rorb
imul
rcrl
fidivrs
sahf
loopne
imul
cwtl
push
scas
push
mov
in
cmp
je
jmp
fnstcw
and
jns
adc
and
out
dec
cltd
popa
and
mov
xor
inc
fidivrl
out
jle
sbb
dec
mov
jg,pn
jbe
mov
add
insl
stc
mov
dec
out
mov
in
filds
pop
lret
sbb
cli
push
mov
hlt
sbb
cmpsb
aam
sub
adc
push
and
mov
adc
push
mov
mov
adc
sub
mov
mov
iret
dec
lods
lahf
shrb
jge
call
movsb
lret
cli
pop
push
push
adc
push
pop
ljmp
pop
sbb
sbb
sub
iret
mov
rcll
adc
imul
push
cvttps2pi
dec
fdivs
ss
in
push
repz
lea
push
sarb
lahf
lea
ror
sub
imul
jae
rol
popa
cltd
inc
shrl
mov
ljmp
pop
popl
pushf
ljmp
in
xlat
sub
lea
fcomi
xor
mov
ss
push
push
sub
gs
cld
je
or
and
dec
jge
dec
xchg
js
pusha
push
insl
cwtl
dec
inc
adc
in
int3
pop
and
adcb
leave
and
xchg
and
sub
dec
pop
mov
mov
in
or
add
fdivrl
dec
test
or
mov
sahf
mov
int
mov
scas
mov
mov
addr16
fcompl
ja
xlat
push
mov
shl
mov
cld
jp
xor
or
mov
lahf
pop
push
std
cmp
lret
pop
aas
adc
dec
adc
mov
scas
pop
fisubl
lret
lret
sbb
das
jo
push
sub
ja
adc
das
js
push
stos
aad
push
mov
lods
jae
pop
xor
test
xchg
rcrl
cli
jo
pop
sbb
loop
push
mov
out
orb
ljmp
mov
push
outsl
aas
sub
or
gs
xchg
jmp
iret
xchg
mov
dec
testb
insb
ljmp
dec
cld
imul
lods
sbb
push
xor
sub
idivb
mov
in
test
inc
mov
popa
pop
jge
xor
or
mov
out
popf
leave
add
mov
dec
iret
aas
fistpll
scas
xor
popf
enter
nop
out
xchg
cs
subb
add
pop
lock
sbb
lahf
repz
sbb
iret
scas
out
int3
outsb
repz
jp
dec
sub
test
gs
fwait
push
adc
xor
repz
movsl
xchg
and
call
hlt
subl
out
pop
sbb
jmp
and
std
ss
hlt
sub
adc
push
pop
jne
push
dec
leave
adc
stos
call
dec
lods
sbb
enter
mov
int
cld
cmp
ss
in
idiv
inc
fs
into
cltd
subb
xor
shlb
mov
testl
lret
push
aas
and
mulb
into
mov
imul
lock
pop
or
mov
mov
and
fiadds
or
loopne
daa
ljmp
repz
sbb
cmpsb
and
movsl
loopne
sahf
cwtl
mov
and
insb
push
cmp
mov
out
dec
bound
pop
sbb
cmp
fdivrs
pop
xlat
dec
or
inc
jnp
mov
fldt
xchg
push
loope
int
mov
outsl
fistps
xlat
in
fnstcw
pop
adc
dec
int3
lock
orb
fimuls
cmp
add
fdiv
lods
test
fcompl
bound
jno
cli
outsb
lret
repz
lret
inc
dec
iret
dec
ret
pop
scas
lea
pop
pushf
pop
ds
and
sub
cmp
or
iret
lcall
pop
adc
sbb
jae
out
fsubr
fildl
cmp
or
xchg
push
jge
mov
or
daa
mov
iret
andl
xlat
adc
stos
cld
mov
test
or
lock
and
mull
loopne
mov
lret
mov
mov
sub
jecxz
repz
xchg
lret
test
sub
sbb
jbe
pushf
mov
bound
std
pop
ds
sub
mov
cmpsb
xchg
filds
mov
mov
pop
pop
pushf
jb
mov
dec
sbb
dec
mov
xchg
xor
mov
fimull
and
push
pop
jle
lret
xchg
pand
rcrb
mov
cli
mov
cmp
pop
mov
pop
aam
xorb
push
push
mov
xchg
mov
lcall
adc
pop
jecxz
adc
pusha
sbb
idivb
pop
daa
or
mov
leave
xchg
dec
sbb
loopne
pop
rorl
out
pop
pop
add
unpckhps
shlb
sub
pop
testb
mov
jg
loopne
std
call
insl
stos
cmp
insl
xchg
add
testl
lret
stos
pop
inc
mov
mov
adc
jnp
out
push
aam
jg
cmp
lret
orb
xor
nop
push
pushf
and
mov
cmp
outsl
leave
iret
or
xor
adcb
cmp
cmp
pop
push
arpl
call
in
jbe
fs
push
jp
sbb
push
and
cmp
test
int3
fildll
sub
mov
xor
pop
insl
fmull
lods
imul
mov
dec
int
dec
jb
dec
mov
subb
adc
mov
push
sbb
repnz
inc
outsb
std
aas
dec
pop
bound
js
das
inc
or
pusha
dec
hlt
pusha
jle
lret
ss
insl
fdiv
push
and
push
xchg
add
loope
jae
add
sub
iret
add
or
or
aam
dec
lahf
push
mov
push
into
lock
or
pop
not
cmp
cld
jmp
cli
in
mov
lret
dec
mov
xlat
sbb
adc
push
jmp
and
push
sub
stos
jl
push
push
nop
mov
shll
push
jg
sbb
cmpsb
out
add
fstpl
dec
pop
adc
icebp
filds
push
jecxz
insb
pop
jb
aas
push
or
xor
gs
comiss
inc
dec
lahf
mul
or
pop
pop
out
sbb
mov
mov
fisubrs
loop
jl
lods
pop
mov
idivb
cli
xlat
jno
mov
lods
adc
les
jle
jb
pop
fmul
adc
mov
xchg
jecxz
cmpb
scas
push
inc
xchg
lret
sbb
sbb
test
lcall
mov
jae
push
clc
add
scas
push
mov
fsub
std
stos
pop
jo
sbbl
jg
mov
jbe
aas
jb
out
lret
push
std
data16
jmp
adc
sti
xor
jne
or
pop
pop
fucomi
sbb
sub
out
xchg
scas
bound
push
mov
fists
js
inc
push
lods
iret
mov
mov
or
and
outsl
mov
xchg
jb
gs
or
sbb
jecxz
adc
aam
dec
or
adc
push
inc
or
and
sbb
mov
cmpsl
iret
dec
sahf
repz
cmp
hlt
push
sahf
xor
sahf
ret
pop
cmp
dec
sub
call
add
ret
jmp
lret
jge
and
jmp
adc
adc
pop
jne
mov
lods
or
sti
mov
add
cmp
mov
push
dec
adc
mov
lods
or
jb
pop
and
jo
mov
aad
dec
add
cmp
cmp
ficoms
imul
iret
jp
mov
scas
jg
adc
xorl
and
fcompp
int3
icebp
adcb
push
pop
mov
insl
push
aam
lods
sub
sub
or
push
mov
jns
add
mov
int
fcompl
jmp
lret
int
dec
push
mov
inc
sbb
mov
inc
rcl
das
adcb
iret
cmp
fstpl
xlat
int
mov
mov
sbb
insb
int3
nop
lods
roll
lods
and
shrl
jmp
push
add
push
dec
jecxz
or
push
and
push
in
rcl
pop
push
incl
or
xor
mov
or
insl
and
jae
in
ljmp
and
lret
fcoml
fwait
dec
push
int
negl
jno
ljmp
or
lret
xor
dec
std
push
rcl
add
cmp
pushl
or
dec
rcr
aam
cmp
jno
mov
jp
cmp
adc
mov
ljmp
or
and
pop
push
sbb
fmulp
mov
ljmp
inc
pop
lahf
or
adc
mov
push
pop
jle
cmpsl
xchg
mov
xor
push
std
repnz
mov
insb
cmpsl
out
push
xchg
fwait
push
mov
cmp
into
and
adc
cs
cld
dec
lahf
pop
sbb
movsl
ljmp
mov
ja
and
or
mov
mov
jecxz
das
sub
adc
imul
sbb
sbb
inc
adc
push
mov
pop
test
xor
push
movb
push
push
das
shll
dec
repz
ljmp
adc
movsl
std
xchg
ret
dec
cmp
fisubrs
push
movl
and
and
outsb
or
push
or
lock
iret
and
lahf
mov
xor
xchg
adc
mov
xor
lahf
dec
mull
mov
pop
cmpb
dec
pop
daa
mov
pop
push
xchg
leave
fcompl
cmpsl
add
aad
in
adc
sbb
push
and
adc
dec
cld
add
inc
ja
xor
push
cmp
mov
scas
push
xchg
jnp
dec
aam
or
mov
pop
mov
dec
fistps
outsb
jge
sbb
loopne
mov
add
sbb
lock
call
fistl
mov
mov
adc
cmp
xlat
nop
inc
out
arpl
mov
sub
fwait
lret
xlat
outsl
in
pop
jae
stos
pop
add
jge
mov
cmpsb
loope
insb
pop
mov
mov
pop
xor
lea
push
dec
sti
add
lret
repnz
repnz
adc
pop
jmp
stc
lret
mov
dec
das
bound
pop
fcompl
repz
scas
jle
xlat
sbb
or
dec
out
sbb
leave
ficomps
cmp
popa
adc
pushf
mov
jo
fs
pop
rorl
dec
xchg
arpl
loop
in
mov
pop
xchg
sbb
jl
loope
and
sarl
mov
xor
sbb
jp
pusha
push
mov
das
rorb
mov
mov
fstl
cmp
ret
mov
push
adc
out
cs
out
adc
jg
insb
sbb
add
or
subb
loop
pop
test
push
jae
in
repnz
sub
xchg
stc
inc
iret
mov
stos
pop
outsl
cltd
dec
mov
aam
cmc
jg
push
ficompl
ds
decl
adc
scas
fs
push
dec
inc
or
mov
lock
aad
and
add
dec
sbb
shll
jp
aaa
or
sahf
rcr
xchg
lds
lods
sub
cmp
cmc
popf
pop
cmpsb
jecxz
mov
or
xchg
xchg
insl
test
mov
imull
pop
scas
mov
lds
cmp
mov
arpl
dec
pop
mov
mov
jp
jno
cmovl
lret
fisttpl
adc
dec
add
adc
stos
insb
adc
or
mov
into
stc
add
fildll
pop
scas
pop
push
out
lock
ja
mov
in
or
fists
cmp
jb
in
jle
int
xor
xor
cmp
dec
inc
imul
pop
mov
sub
movsl
sti
shll
adc
xchg
cwtl
outsb
lret
insl
xchg
xchg
adc
push
sub
cmc
cmp
lret
and
int
mov
dec
adc
ds
cld
mov
fcmovne
push
dec
sbb
aas
adc
sub
pop
cmp
enter
dec
in
outsb
es
pusha
dec
fs
outsl
popa
shl
push
dec
dec
addr16
pop
loop
leave
test
aad
mov
dec
sub
mov
jae
or
and
and
or
jne
negl
js
lods
shll
iret
std
or
insl
in
pop
ror
adc
mov
aaa
sbb
mov
rclb
dec
push
andb
aas
sbb
cmp
xchg
cmp
outsb
jmp
push
pop
sbb
xchg
pop
jg
insb
cmpsl
pusha
subl
and
sub
add
xlat
cwtl
incl
sti
push
test
ret
outsb
push
sbb
inc
aas
or
rcrb
adc
inc
push
cli
ljmp
cwtl
hlt
jmp
iret
gs
pusha
mov
xor
ret
stos
fucomip
mov
sub
or
or
orl
dec
jnp
and
mov
mov
pop
push
out
push
out
insb
and
ss
mov
lret
cmpps
addr16
pop
out
dec
push
dec
xchg
out
imull
xchg
cs
into
mov
push
call
nop
in
dec
mov
push
jecxz
dec
popf
cmp
add
jl
cmpb
movsb
dec
sub
adc
jl
or
or
aad
cmp
pop
adc
es
sbb
push
mov
cwtl
add
pop
sahf
push
pop
mov
in
fisttpl
testb
pop
fadd
std
pop
push
fsubr
ljmp
or
out
dec
call
imul
repnz
cmp
ja
data16
jp
stc
fsts
sub
rolb
add
test
andb
out
cmp
shlb
fiadds
out
nop
insb
and
je
arpl
int3
das
jmp
xchg
add
add
and
in
les
push
dec
add
lcall
imulb
das
filds
jno
dec
bound
cmp
inc
adc
daa
outsl
or
sbb
jbe
add
sub
pop
pop
bound
sbb
pop
je
loopne
adc
push
jne
lds
pop
roll
dec
mov
mov
das
push
adc
test
enter
xchg
iret
sbb
and
jbe
dec
inc
adc
fucomip
lea
or
jbe
scas
sti
mov
hlt
push
testb
push
test
bound
dec
ret
or
xor
lret
loopne
cmp
xlat
dec
bound
sub
outsl
fisttps
negb
push
sbb
adc
pop
loop
sbb
jp
sbb
fistl
cmp
cmp
cmp
push
popf
das
dec
inc
fimuls
ss
test
inc
cli
jbe
sub
sbb
jge
mov
cmp
test
lahf
pop
or
orl
ja
das
loop
or
fdivrl
mov
inc
xlat
mov
xor
arpl
bound
mov
cmp
imull
hlt
cli
shr
mov
pop
cld
sub
ds
pop
or
pop
dec
sbbb
sbb
adc
mov
fcmovbe
sub
push
mov
ss
iret
aas
dec
push
pop
addr16
and
into
rcr
mov
sub
fldt
adc
jl
imul
adc
cld
cmc
ljmp
adc
scas
sub
pop
jecxz
or
test
negb
lods
or
repz
add
mov
sbb
aas
dec
mov
cld
cmp
mov
cmpsl
cwtl
loop
bound
pop
dec
push
repz
jb
into
sbb
scas
out
shrl
pop
push
inc
loop
adc
jo
call
push
sbb
in
inc
xchg
stos
loop
or
mov
lahf
pop
scas
adc
sub
or
push
ret
outsl
stc
addr16
dec
mov
dec
lret
lahf
cmp
int3
mov
xor
sub
fwait
lods
sbb
stos
ffreep
pop
mov
or
dec
and
sbb
mov
push
icebp
xchg
mov
mov
adc
mov
repnz
push
inc
and
mov
js
ljmp
repnz
push
jne
push
scas
clc
ret
dec
lock
or
pop
notl
pop
sbb
daa
cmp
outsb
jnp
jmp
imul
sbb
in
addr16
mov
shlb
int
push
fists
cmp
lock
in
dec
cmp
or
fucomi
mov
jmp
bound
cmp
aaa
orl
into
repz
add
pop
cwtl
cltd
mov
shr
mov
jecxz
lret
stos
sahf
in
jl
in
push
mov
rorl
mov
lahf
in
nop
and
aam
in
mov
fwait
add
mov
xchg
adc
mov
stos
gs
adc
cld
ja
push
dec
pusha
cmp
and
outsl
dec
ss
bound
in
std
and
paddd
dec
nop
jne
subb
stos
std
sub
out
or
rol
das
lret
adc
push
mov
push
add
jmp
push
push
and
mov
xchg
jnp
mov
imul
test
and
jl
cld
xchg
sbb
mov
mov
jnp
scas
into
pop
leave
or
iret
fcomps
pop
out
jmp
or
dec
and
xor
inc
push
xchg
fucomip
fimuls
dec
pusha
jecxz
in
jecxz
and
bound
into
adcl
jecxz
or
shl
jnp
leave
inc
lea
jmp
iret
sub
cld
pop
fwait
xchg
sbb
out
ret
inc
stc
add
fbld
cmpb
movsl
add
jae
popa
lahf
lret
cmp
add
repz
cltd
cmp
jo
dec
das
rorl
inc
or
jo
mov
popf
out
negl
cmp
scas
call
les
xchg
adc
xor
adc
data16
mov
cli
in
pop
lds
dec
imul
bound
arpl
mov
pop
sub
lret
xor
mov
out
stos
pop
rsqrtps
mov
add
in
push
in
popf
mov
lds
inc
shll
cmc
dec
lcall
add
push
dec
scas
int3
sti
call
or
pop
xchg
movsb
nop
addr16
cmpsl
jmp
pop
mov
into
imul
jle
push
sbb
cld
sub
and
imul
lret
and
pop
loop
iret
lahf
out
aas
popa
xor
or
pop
outsl
sbb
ds
lea
or
push
ret
cmp
cs
pop
mov
dec
cmc
push
fnstenv
neg
movsl
in
xorb
xor
sub
push
pop
mov
push
enter
icebp
sbb
rolb
push
aad
dec
xchg
sub
xor
xchg
cmp
scas
jb
repz
aam
out
push
ss
into
clc
jecxz
aas
lods
xlat
mov
jns
imul
loope
movsb
or
push
adc
nop
or
stos
out
sub
dec
nop
push
in
push
loope
dec
mov
push
cmpsb
stos
fs
lea
lret
pop
dec
ss
les
pop
jb
pop
sbb
cmp
jns
mov
mov
out
mov
dec
jg
xor
jle
hlt
lahf
jmp
cs
cmp
movb
sbbl
ror
xchg
jne
mov
pop
je
mov
adcl
pop
push
xchg
add
xchg
and
movsb
adc
bound
por
fmuls
or
int
pusha
int3
pop
push
mov
movl
jae
in
je
iret
xchg
loope
dec
inc
cs
pop
pop
mov
and
lahf
pop
fildll
fsts
clc
hlt
xchg
jecxz
xor
xchg
pop
jmp
cli
cltd
fcomip
push
mov
fisubrl
shrl
setl
loopne
push
dec
insb
aad
jecxz
nop
dec
into
out
and
mov
jae
das
jmp
decl
addr16
push
outsb
xchg
dec
int
stos
out
mov
popa
out
mulb
ds
leave
filds
out
adc
fimull
adc
jne
lret
imul
int
push
fs
push
or
aad
xor
push
sbb
fimull
fldl2t
mov
scas
inc
and
dec
movsl
jl
stos
dec
in
push
fbstp
loop
jl
sbb
scas
jno
sbb
jnp
push
pop
and
sub
sbb
cmc
loope
into
or
jecxz
dec
in
dec
push
mov
sub
adc
cli
std
cmp
nop
js
jmp
add
add
in
push
rolb
adcb
sub
stos
lahf
fcmovnu
mov
out
mov
js
out
jmp
xor
xor
mov
fisubrl
xchg
popf
std
xchg
push
add
sub
xor
shr
loopne
pop
xchg
rcr
push
cmpsl
jl
hlt
lods
aas
bound
scas
push
pop
add
push
jge
rcrl
out
int3
cmp
mov
int
jbe
shrl
out
push
mov
xchg
rcrl
push
add
lcall
adc
and
push
sbb
shrb
pop
mov
pop
insl
dec
or
jnp
sub
jnp
xor
arpl
scas
rol
outsb
out
fnstcw
xchg
pop
ret
or
sub
sbb
inc
sar
mov
xchg
or
jns
in
lds
nop
xor
jmp
push
cli
enter
fcoml
out
and
pop
xchg
clc
test
sbb
xor
xor
in
cld
es
xor
push
dec
sbb
pusha
jp
cli
cmpps
push
mov
jmp
xor
xor
dec
jge
in
mov
cli
sbb
xlat
jb
ret
rclb
sbb
adc
cwtl
dec
out
movsl
jmp
aaa
les
or
lsl
int3
movsb
testb
dec
faddl
cld
mov
dec
ret
jne
adc
sbb
or
sbb
push
add
xor
cld
cli
imul
mov
fdivs
imul
inc
jge
lods
lret
add
xchg
push
push
push
push
int
adc
add
adc
inc
inc
insb
inc
maxps
pop
push
mov
insl
js
aas
sub
ret
repnz
das
das
ljmp
mov
sbbb
cmp
push
pop
and
out
frstor
insl
xchg
lcall
mov
cwtl
into
and
imul
rcrb
mov
test
add
bound
cmp
add
and
cmp
div
mov
push
aam
lock
mov
lcall
std
lock
pop
xor
mov
mov
sub
loop
std
leave
popf
xchg
sti
xchg
cmp
sbb
sti
int3
sbb
mov
stos
dec
imul
fs
xlat
push
push
aad
pop
pop
and
inc
mov
addl
fists
out
inc
mov
xchg
fists
pop
movsb
ljmp
and
jo
and
mov
dec
addr16
or
iret
out
inc
stos
add
push
cltd
or
dec
pminub
push
ljmp
cmp
dec
mov
cmp
mov
sub
jle
mov
je
xor
mov
pop
adc
nop
outsb
outsl
mov
xor
mov
bound
dec
rorb
jecxz
push
test
xorb
adc
pop
mov
out
and
movsl
xor
jmp
mov
inc
es
lods
mov
ds
adc
mov
sbb
pop
insl
dec
ficoml
mov
subb
and
int
movsl
cmc
lea
aas
adc
mov
call
clc
daa
adc
js
inc
xchg
and
mov
mov
outsb
imulb
rcll
inc
add
xor
jb
push
inc
cmpsl
aas
icebp
in
or
sub
lea
roll
push
adc
or
jecxz
pop
in
push
adc
pop
sbb
mov
push
cli
and
add
and
dec
aas
pop
sbb
ja
stos
das
pop
out
pop
sbb
jg
rorl
sbb
data16
popa
xchg
movsl
outsb
cmpsl
xor
cld
imul
inc
insl
push
call
pushf
xor
sub
pop
mov
in
mov
cli
xchg
mov
pop
pop
cmpsl
sbb
pop
ficompl
pop
and
xchg
loope
ljmp
sahf
or
fisttpl
insl
mov
rcrl
adc
adc
mov
or
or
mov
dec
dec
or
xchg
fldt
adc
dec
lea
pop
hlt
repz
rorb
mov
mov
adc
mov
push
xor
scas
lds
paddd
les
mov
pusha
lret
and
sub
xchg
xor
or
hlt
bswap
sbb
lcall
push
jnp
jnp
out
jg
fildll
fmulp
lods
cmpsb
xchg
in
adc
iret
pop
dec
fildll
leave
push
das
daa
add
test
or
xor
fdivrp
adc
int
out
and
stc
pop
mov
fwait
mov
and
ds
dec
cmp
int3
mov
jle
cli
and
jo
sahf
add
lock
push
stc
mov
mov
es
out
jg
outsb
in
sub
sbb
push
or
fwait
repnz
lea
push
dec
push
jb
sbbb
jp
cmp
dec
popl
sbb
or
iret
pop
out
adc
push
pop
mov
cld
push
not
jnp
adc
xor
mov
hlt
push
xlat
jl
hlt
fmul
jne
dec
cmp
scas
push
test
xlat
andb
cltd
push
cli
adc
add
dec
bound
lods
mov
aam
dec
cmp
jns
out
mov
dec
jecxz
inc
dec
das
cs
xchg
dec
sbbb
sbb
cmp
testl
fcmovnu
dec
jl
lret
ja
xlat
inc
jmp
or
sbb
or
mov
push
aad
fisubl
mov
lahf
and
or
int
ficoml
mov
rclb
ficompl
mov
iret
mov
xor
adc
dec
xchg
and
mov
shl
jecxz
push
push
out
pop
jns
std
test
push
add
jp
lret
pop
mov
add
mov
pop
jle
push
inc
jge
lods
inc
pusha
jl
dec
ret
cmp
jo
xchg
movsl
imul
dec
mov
into
mov
ljmp
push
fisubs
pushf
push
push
push
lods
in
lods
dec
push
in
mov
sub
pop
mov
dec
xchg
es
sti
adc
mov
out
dec
cmpb
int3
push
test
aam
xchg
dec
outsb
iret
movsl
mov
jle
add
sub
scas
inc
outsl
adc
in
cmovbe
mov
dec
arpl
fstpl
mov
int
lds
sbb
mov
jl
inc
insb
fsts
or
movsl
std
adc
mov
int
out
mov
shlb
push
fisttpll
stos
movsl
imul
jno
fdiv
or
adc
pop
add
stc
pop
jp
pop
fmull
mov
dec
dec
jb
in
out
outsl
fwait
cmp
rorb
pop
jl
movups
aaa
inc
adc
fs
sub
dec
xchg
push
jmp
loopne
mov
aaa
insl
repnz
in
jp
ja
adc
fimull
rcl
cmp
xchg
sub
lea
fldl
pop
clc
sub
sbb
push
ljmp
cli
fsubr
sti
lcall
lret
pop
orb
push
pop
clc
cmp
push
dec
addl
int
data16
mov
pop
xorb
xlat
jle
ljmp
lods
xor
fsubrl
pop
iret
dec
addr16
cld
jmp
jmp
push
inc
dec
and
push
js
adc
add
outsb
lods
or
inc
cmp
inc
in
int3
test
stos
cmp
insb
cmp
dec
push
add
jl
int
rcll
adc
sbb
aam
mov
dec
sub
mov
dec
push
orl
in
in
inc
jmp
pop
gs
push
cmp
add
push
cmp
imul
push
fmull
jle
cmp
outsb
das
rclb
adc
lret
cmpsl
test
push
bound
jl
sbb
inc
test
add
or
mov
jl
pop
lock
xor
jle
cmp
mov
icebp
inc
jl
dec
imul
sbb
fcompl
fldl
add
or
mov
lret
addr16
mov
lock
sub
sub
int3
add
into
in
cmp
fsubr
and
fmul
std
sarl
loopne
fnclex
or
mov
sbb
sbb
dec
cmp
push
and
xchg
xorb
repz
or
jne
ja
and
cld
dec
mov
sti
push
lea
push
adc
iret
push
lods
das
pop
mov
inc
xor
lret
out
xor
pop
sbb
sbb
enter
fistpl
in
add
mov
test
sti
sbb
push
aam
fxch
cmp
push
xchg
sbb
sbbl
pop
in
lret
xchg
jnp
dec
loope
sub
pop
ja
push
leave
mov
in
lock
das
adc
fcoml
sbb
adc
lret
into
or
or
into
mov
mov
mov
clc
or
push
sbb
cmp
popl
stos
cmp
pop
cmpsl
push
lret
sbb
push
mov
lcall
dec
sub
mov
rcrl
or
pop
cmp
dec
dec
pop
call
testb
xor
ret
in
or
pusha
xchg
int3
or
sti
jo
out
push
repz
outsl
mov
adc
mov
jmp
mov
lret
xchg
scas
stos
xor
mov
mov
fcomp
jmp
xorb
fs
push
shrb
pushf
inc
adc
adc
je
lret
insb
pop
pop
mov
arpl
cmp
sbb
or
mov
cmp
sub
jnp
jne
lcall
dec
cmp
xlat
mov
push
xchg
pshufw
push
lret
mov
scas
mov
shrl
data16
pushf
dec
pop
fcomip
jecxz
in
or
aad
sbb
adc
iret
mov
push
imul
jmp
stc
add
mov
pop
cmp
add
or
in
adc
dec
ret
sub
sti
dec
hlt
testb
int
pushf
mov
outsb
and
jbe
jl
stc
and
pop
cli
jp
ret
or
stos
shrb
pop
rorb
adc
subb
push
jecxz
ss
jl
mov
xchg
add
int3
mov
mov
ja
rorl
mov
xor
pop
push
pop
fcomps
dec
inc
aas
in
push
iret
js
fld
adc
mov
push
dec
pop
cmp
les
mov
xor
in
pop
push
cmp
bound
dec
pop
repz
movsb
sti
imul
sarb
ficoml
lret
lea
shl
fistl
imul
push
scas
ss
dec
pop
mov
cmp
mov
imul
outsl
pop
cs
push
stos
mov
std
leave
mov
imul
sub
out
aas
iret
jne
outsl
inc
mov
cmc
pop
int3
or
decb
mov
out
pop
aad
ljmp
jbe
iret
mov
mov
or
mov
push
arpl
in
mov
lds
sbb
lods
add
adc
xchg
xchg
in
iret
dec
rorb
push
testb
and
shl
pop
push
idiv
jb
pop
xchg
fistpll
xlat
fdivrl
pop
jb
jmp
test
es
adc
pop
sub
icebp
and
repnz
adc
jae
mov
ret
push
dec
xchg
shrl
ret
dec
dec
push
aad
fldenv
push
cmp
adc
mov
test
fcmovbe
fs
or
dec
insl
aas
adc
push
xchg
scas
repnz
dec
leave
push
repz
sbb
sub
mov
jmp
testb
ds
movsl
sarl
in
jmp
scas
push
stc
cmpsb
push
dec
lock
mov
jg
pop
fmull
addr16
fcmove
pop
jl
lret
insl
sbb
adc
pop
in
sbb
incb
outsb
jo
sti
jae
outsl
pop
xor
push
xchg
adc
clc
adcb
out
lcall
adc
popf
fstl
mov
jo,pt
popf
jae
inc
push
nop
arpl
push
pop
adc
out
or
fistl
aad
cmp
jne
int3
mov
push
mov
subb
das
and
imul
xchg
xor
and
push
pop
and
rclb
fimull
jle
out
imul
mov
jb
push
in
into
aas
and
sbb
adc
cld
loop
adc
mov
test
ja
lret
push
push
imul
loop
xchg
pop
ror
and
xchg
shll
scas
mov
sbb
into
mov
or
push
mov
into
jnp
stc
cmc
xchg
hlt
add
add
incl
push
popl
int3
mov
add
sub
xchg
rcl
push
sar
adc
mov
rcrb
insb
testl
pop
xchg
pop
inc
sub
push
sbb
in
jno
xlat
subb
adc
in
cltd
inc
loop
rcr
insl
push
nop
fidivs
jecxz
into
cwtl
jne
pop
hlt
xor
xchg
sahf
aad
fcmovnbe
out
cmp
fs
lret
rcrl
iret
mov
lea
dec
int3
mov
push
or
dec
test
adc
movsl
jecxz
or
sub
mov
and
push
jno
mov
out
push
pop
xchg
testb
push
pusha
inc
ret
outsl
inc
into
imul
int3
jb
ret
sub
push
mov
jne
push
rolb
arpl
stos
mov
cli
out
xchg
aas
scas
stos
neg
sti
loope
add
popa
inc
jg
cmp
pushf
ret
sbb
add
leave
sti
fdivrl
xchg
std
aaa
cmp
js
sahf
mov
pop
push
sbb
das
es
fisubrl
sbb
mov
mov
xchg
sbb
xchg
cltd
jns
lods
add
or
lea
cmc
mov
ret
stc
push
mov
out
das
fbstp
lods
sub
jns
push
mov
jecxz
add
add
fsts
ljmp
xor
sbb
ss
cmp
dec
ljmp
loopne
test
arpl
sbb
adc
in
mov
mov
and
popf
idivb
dec
fwait
movlps
jb,pn
incl
jae
push
iret
mov
and
fbld
mov
into
mov
pop
push
sbb
sahf
push
in
push
adc
dec
mov
xor
and
stos
and
dec
pop
mov
push
aam
mov
push
pop
stos
shrl
adc
shll
or
sbb
loop
mov
lea
in
mov
adc
test
insb
movsl
cmpsl
std
ficompl
and
xchg
lcall
adc
test
out
fsubrp
scas
test
and
sub
scas
pop
fucomip
das
gs
out
sahf
das
ljmp
enter
in
test
jo
loop
pop
mov
dec
sbb
int3
adc
mov
leave
in
lret
bound
mov
adc
adc
dec
lock
adc
mov
mov
cmp
add
cmp
into
jecxz
stos
and
mov
lcall
int3
daa
dec
dec
dec
cmpsl
cltd
push
sbb
leave
jae
and
sub
je
mov
int3
jle
and
sbb
xor
gs
out
fcmovne
push
lcall
pop
lds
rclb
aas
lret
imul
iret
sar
imul
xchg
rolb
loop
lods
in
mov
push
scas
outsb
or
dec
js
test
cmpsl
push
xchg
mov
daa
jge
adc
and
mov
idiv
rcrl
xor
data16
les
inc
out
fimull
fpatan
lods
sub
push
mov
mov
mov
push
xchg
lahf
add
add
outsb
hlt
outsb
andl
cmp
inc
inc
ds
and
iret
add
mov
cwtl
jne
push
ret
lret
pop
test
outsl
mov
inc
xor
ret
dec
and
jae
jmp
or
dec
int
dec
sbb
jo
mov
shrl
outsl
dec
add
aas
sbb
lea
ljmp
jmp
sbb
hlt
pop
dec
jmp
xchg
dec
mov
stc
aas
adc
mov
inc
movsb
jmp
pop
lods
xor
scas
push
or
xchg
jmp
and
paddd
xor
lds
xchg
addl
lret
aad
dec
call
mov
jo
lcall
dec
in
push
filds
arpl
pop
popf
repnz
leave
and
hlt
cmp
inc
push
dec
lret
pop
jmp
dec
loop
decb
shll
jne
les
sub
dec
sbb
in
push
bound
mov
faddl
imul
cmp
ljmp
in
add
push
mov
sahf
jns
jae
lea
push
dec
sbb
or
mov
mov
xor
sbb
lock
aad
push
andl
mov
scas
xchg
mov
jmp
addb
icebp
movb
jmp
or
cmp
dec
push
mov
insb
mov
out
out
int3
clc
inc
mov
or
jmp
in
inc
cmc
mov
xor
sub
or
or
xchg
pop
inc
lcall
cmpsl
cld
cs
out
lret
xor
add
sub
orl
dec
cltd
cs
sub
push
out
jp
xor
into
ja
cwtl
pop
mov
push
push
leave
or
inc
std
out
push
dec
lods
mov
sub
cwtl
stc
push
jo
nop
arpl
cmp
jne
inc
dec
and
and
ret
filds
lret
in
xor
ljmp
or
nop
inc
scas
mov
and
pop
push
sti
rorb
jns
movsb
outsl
push
aam
jecxz
or
addb
xchg
pop
adc
pop
repnz
jl
push
xor
push
mov
btr
cmp
aas
mov
mov
ja
mov
mov
pop
ret
imul
sub
fcoms
aam
iret
push
cs
jbe
push
push
mov
sub
fidivs
mov
or
fmulp
scas
cmp
dec
or
imull
jno
iret
and
addr16
test
pop
test
mov
ljmp
mov
loop
ljmp
xor
or
ret
inc
in
dec
popf
add
iret
dec
pop
insl
jmp
bound
ljmp
adc
pop
xor
xchg
or
pop
mov
pop
lods
lea
sbb
stos
or
in
repz
jp
shlb
lods
push
mov
sbb
in
fimuls
adc
mov
xchg
adc
cmp
jecxz
ds
dec
loopne
mov
in
pop
bound
xor
pushf
in
outsb
push
inc
push
jb
gs
or
pop
imul
mov
or
std
clc
shrb
mov
les
lret
adc
cltd
cmp
push
arpl
pop
out
jmp
or
dec
and
xor
inc
push
push
gs
iret
lret
test
shr
mov
int
sub
lds
packsswb
or
in
orb
enter
push
mov
hlt
and
dec
sbb
rcrb
sub
es
iret
or
je
jl
adc
int3
das
negb
mov
jmp
push
mov
push
adc
jae
add
xor
adc
stos
mov
mov
sub
xlat
ss
and
aam
fisubrs
adc
xchg
jno
sahf
add
lret
adc
loop
pop
sub
mov
mov
rolb
fcoms
sbb
iret
lret
push
inc
inc
hlt
mov
push
inc
clc
insl
xchg
scas
dec
pop
insb
pusha
outsl
shl
mov
inc
hlt
arpl
sub
bound
daa
push
mov
mov
sub
and
push
js
lret
jg
sbb
into
xchg
mov
fisubrs
adc
sbb
dec
in
mov
clc
dec
arpl
push
jmp
or
mov
lcall
test
repnz
addb
pop
sub
pop
jg
cmp
aaa
fcom
sbb
cs
add
pop
and
push
dec
inc
or
dec
test
xchg
loope
jecxz
bound
jo
or
rcrb
test
pop
pop
cmp
xchg
shl
pop
imul
fsubr
imul
gs
movsl
mov
sahf
push
sti
xor
cwtl
jge
dec
adc
xchg
cld
sub
filds
push
add
out
cmp
mov
mov
fiaddl
cltd
fnstenv
repz
push
movsl
mov
cmp
iret
loopne
rcll
push
ss
dec
in
pop
pop
adc
mov
push
push
or
loopne
jge
adc
in
cwtl
sbbl
fwait
or
xlat
out
fucomp
dec
pushl
cmpl
js
push
jne
xchg
adc
push
mov
sbb
pop
inc
dec
call
out
jns
mov
push
cmc
pushf
and
cli
testb
int3
mov
inc
pop
inc
push
pop
mov
das
push
cmp
push
rorb
shrb
xchg
lock
dec
mov
mov
jbe
lods
sub
push
dec
mov
jmp
call
subb
out
imul
or
adc
jb
pop
in
adc
imul
insb
pop
jne
or
push
pop
outsl
iret
pop
lahf
aam
push
dec
neg
push
in
dec
pop
push
push
outsb
shlb
xchg
in
sarb
xor
or
mov
cmp
dec
xor
iret
rcrl
cmc
mov
jns
pop
lret
sbb
sub
or
and
iret
jmp
test
push
enter
std
test
lret
cltd
stc
cmpsl
inc
call
pop
jne
fs
pop
and
jbe
dec
ret
adc
jp
push
in
cli
mov
cwtl
lods
mov
outsl
push
gs
push
pop
cmp
aaa
xchg
aaa
sarl
pop
loope
fldt
adc
push
jb
ss
int
adc
pop
sub
or
aam
pop
imul
int
ss
sbb
cmp
sbb
bound
scas
movsb
stc
pop
mov
mov
into
out
pop
jae
inc
ret
mov
or
xchg
cmp
mov
xchg
out
aad
sti
loop
sbb
cmp
xchg
mov
mov
jmp
mov
push
rclb
lds
dec
test
fistl
lret
jecxz
adc
iret
jo
pop
mov
je
dec
jo
or
xchg
add
pushf
cmp
imul
adc
xchg
jle
das
mov
shrb
ret
xchg
mov
int3
jae
and
fbld
movsb
icebp
mov
jae
pop
dec
mov
push
scas
sbb
mov
push
fldpi
imul
or
jns
fcmovne
rcll
xchg
mov
jne
sbb
pop
sti
sub
int
in
push
cwtl
ja
lds
pop
push
adc
stc
sbb
roll
xchg
push
popf
leave
loope
xor
push
dec
cmp
mov
lret
pop
pop
sub
jo
imulb
imulb
loop
add
ljmp
pop
cmp
in
mov
ljmp
or
add
dec
dec
mov
aad
pop
clc
stos
jecxz
and
mov
mov
fidivrl
push
das
out
dec
inc
bound
mov
jae
mov
jge
es
stos
adc
lock
or
fstps
into
cmp
or
pusha
pop
pop
mov
clc
jb
das
xchg
xchg
sbb
dec
push
out
repz
jl
das
xchg
iret
outsl
shll
out
mov
pushf
insb
mov
addps
dec
aas
outsb
jb
push
and
xchg
mov
insb
pop
out
subl
mov
pushf
sbb
pop
pushf
xchg
mov
shlb
jnp
test
test
sahf
sub
and
pop
rcrl
jle
movsl
roll
sbb
dec
int
les
push
pop
push
push
loop
mov
insb
call
cld
ss
popa
shll
xlat
mov
popa
pop
xchg
outsl
sub
add
mov
int3
loopne
out
cld
dec
pop
scas
into
mov
iret
stc
data16
out
add
rol
mov
out
xor
xor
lods
dec
cmp
mov
pop
dec
test
frstor
inc
cltd
xchg
mov
jp
imul
es
mov
push
imul
lock
stos
add
testl
adc
int
and
in
sbb
enter
les
lds
pop
and
testb
dec
push
pushf
push
adc
int
pop
jnp
sbb
sbb
push
jbe
fstpt
push
movsl
mov
dec
push
loop
jo
lret
outsl
addr16
mov
dec
shl
testl
insl
mov
xchg
jmp
lds
jbe
adc
mov
mov
pxor
mov
rorl
push
mov
push
inc
dec
dec
jb
outsb
cwtl
dec
push
or
or
out
adc
sti
add
inc
cli
or
cltd
lcall
adc
xor
mov
sub
iret
pop
mov
in
hlt
xchg
xchg
mov
push
lret
adcl
arpl
cs
fcoml
push
arpl
int
pop
xchg
insb
xlat
jb
call
push
add
jl
outsb
mov
xor
ret
jno
and
stos
ds
xor
adc
push
psrad
pop
out
jbe
pop
push
cltd
addr16
stc
sub
mov
scas
clc
aaa
repz
in
adc
into
inc
aas
and
sarb
and
xlat
push
nop
dec
das
shll
sub
pop
xor
aam
cmp
adc
xlat
inc
xor
movsb
mov
adc
das
shll
xorl
add
push
out
mov
pushf
mov
dec
jg
sub
adc
cmovns
imul
fsubl
adc
aad
mov
out
sbb
xchg
adc
fcmovnbe
adc
xor
push
fisttpll
mov
xor
pusha
push
das
xor
fucomp
aad
adc
lods
lret
inc
es
push
mov
sbb
jbe
test
push
fucompp
or
dec
nop
push
mov
mov
scas
ljmp
pop
cmp
stc
out
mov
std
jp
fisubrl
lds
jl
outsl
scas
das
xor
insb
fists
popf
out
js
aam
jg
sbb
push
sbb
rclb
test
jmp
push
sarb
jmp
gs
cmc
imul
cli
add
clc
add
ljmp
hlt
sti
mov
mov
or
and
loope
scas
fsubl
pop
mov
mov
fildl
jne
jl
push
rcll
or
sahf
shll
popl
rclb
loopne
nop
push
inc
adcb
cmp
into
std
or
inc
sub
add
in
jecxz
ret
inc
jae
sbb
or
push
xor
xchg
and
popf
fs
xchg
inc
fistl
jecxz
fistl
test
lods
pusha
outsb
insb
lret
adc
push
je
enter
and
jnp
repnz
aam
lds
adc
popa
aad
out
cs
sub
in
mov
add
jp
push
xor
and
dec
addl
iret
push
paddusb
mov
rcr
sbb
mov
pop
popf
mov
or
inc
insl
rclb
or
imul
jl
sub
xorl
aad
push
mov
std
dec
sbb
jl
inc
insl
lret
add
cwtl
incl
inc
push
xchg
outsw
lods
orb
repz
push
add
sbb
xchg
dec
pop
fists
or
jge
xchg
mov
inc
aaa
xorb
rcrl
mov
mov
inc
mov
inc
and
jne
pusha
adc
dec
in
popf
xchg
cltd
xchg
adc
dec
jno
pop
cltd
pusha
ljmp
or
sbb
idivl
xor
lret
cld
xlat
jge
pop
xchg
push
xorw
pop
arpl
or
jae
jge
fisttpll
fistpll
mov
pop
or
int3
lock
mov
lret
repnz
mov
xlat
pop
push
and
nop
jg
cmp
jbe
xchg
hlt
pop
and
rorl
cs
daa
pop
bound
in
out
inc
loope
xchg
rol
icebp
sarl
push
push
mov
dec
and
inc
insl
test
ret
mov
xchg
hlt
sub
pop
pop
and
add
iret
out
xchg
jb
pop
int3
jge
aam
jnp
std
dec
test
imul
jae
pusha
jmp
cmp
mulb
cmp
fisttps
push
push
cmc
xor
xchg
pop
dec
xchg
xchg
dec
mov
insb
mov
jl
aas
xchg
and
jg
bound
rcrb
adcb
int
pop
cmp
mov
mov
inc
sbbl
paddsw
and
stc
mov
rorl
andl
negb
cltd
inc
push
addr16
mov
stos
xchg
mov
xor
push
jbe
cmp
popa
mov
rclb
push
dec
cltd
xor
nop
mov
fcompl
pop
data16
dec
mov
mov
imulb
popf
stos
push
repnz
in
mov
ljmp
jne
add
xor
xlat
cwtl
cmp
shll
add
jmp
sbb
cmp
cmp
jns
stos
test
cs
cld
sub
nop
add
jne
movsb
in
xchg
lret
cmp
push
dec
sbb
inc
sbb
jb
push
or
jp
sbb
mov
cltd
scas
or
dec
or
out
dec
fmull
fisttpl
lods
mov
ret
int3
add
or
in
dec
js
fs
out
dec
fmull
push
dec
dec
dec
rorl
in
dec
fisttpll
sti
scas
pop
ljmp
out
sbb
nop
dec
cmp
bound
push
icebp
popf
jecxz
or
sbb
xchg
or
sbb
adc
xor
lds
lret
pop
pop
bound
sub
aad
pop
pop
mov
xchg
out
imul
lret
enter
movsl
loope
into
fistps
pop
scas
sbb
mov
sti
mov
insb
jp
inc
aad
xchg
add
dec
lds
adc
repnz
or
or
and
mov
adcb
jne
fisttpl
cs
xchg
sbb
sbb
sub
mov
cmp
cmovnp
cmpsl
out
imul
push
fdivrl
mov
or
inc
push
mov
mov
push
sbb
jecxz
out
jnp
sbb
lret
test
pop
inc
test
out
sahf
xchg
xor
out
pop
shl
test
insl
mov
push
lea
bound
int
jle
sti
lds
insl
int
lea
mov
in
mov
ljmp
sbb
mov
into
or
data16
jl
lods
push
xor
loopne
mov
in
stos
cmp
dec
jl
or
test
in
scas
ficomps
aaa
call
sbb
pop
adc
rcl
or
xchg
xor
ret
and
hlt
js
enter
jecxz
scas
push
rcl
rcrl
fdivl
or
std
xchg
shll
fisubs
sbb
cld
push
aaa
dec
add
lock
jmp
xor
mov
leave
push
scas
or
add
fsubl
sub
dec
adc
bound
dec
or
sub
push
sub
adc
or
mov
jge
mov
pop
mov
inc
imul
xor
iret
push
int3
stc
xor
jae
push
rorl
nop
adc
cmovg
fldcw
pop
jmp
push
or
jl
lcall
out
fsubp
subl
push
push
pop
add
dec
jle
imul
push
movsl
push
xor
mov
cmpsl
mov
and
xchg
pop
jl
cmp
xor
das
cld
in
or
clc
filds
std
outsb
out
mov
inc
nop
imul
mov
jge
adc
test
mov
fisubrs
push
je
ja
xchg
mov
emms
call
xchg
lret
std
nop
mulb
ret
or
mov
add
fcomip
and
mov
fwait
mov
imul
add
pop
adc
jo
dec
test
mov
aas
outsb
pcmpgtd
lods
mov
movq
sub
jecxz
add
mov
xor
pop
push
sarl
or
adc
mov
push
roll
dec
push
sub
mov
push
jecxz
xchg
outsb
test
sbb
mov
stc
xlat
movsl
push
outsb
clc
fdivrl
inc
inc
rorl
inc
xchg
mov
stos
pop
sub
jl
adc
jmp
je
mov
push
dec
mov
adc
iret
or
mov
pop
mov
push
ret
out
mov
inc
xchg
add
jb
sub
sbb
xor
or
inc
pop
adc
xchg
or
jle
mov
sbb
out
scas
adc
rcrl
je
sub
mov
test
cmp
ja
hlt
dec
adc
push
outsl
or
xchg
push
mov
jge
ds
cld
out
jg
sbb
mov
outsb
les
adc
adc
adc
sub
and
lret
xchg
repz
sbb
mov
dec
int3
jns
sub
jl
rorb
mov
sbb
popa
cld
lcall
push
dec
pavgw
testb
ljmp
lret
push
mov
int
dec
pop
dec
daa
adc
xchg
das
push
xchg
lcall
xchg
jg
dec
pop
out
jle
or
push
add
mulb
xorb
jmp
jo
adc
mov
iret
add
pop
mov
xor
xchg
fs
jmp
jmp
cs
add
dec
adc
or
adc
sub
in
and
xchg
mov
dec
clc
sbb
stc
xor
fidivrs
outsb
icebp
es
inc
xchg
repnz
testb
ss
loopne
sahf
out
and
fisttpl
addr16
scas
sbb
iret
out
mov
ja
mov
movsl
subps
or
arpl
or
push
into
iret
sub
and
pop
mov
loopne
lahf
addl
andl
inc
nop
lds
divl
push
fildl
ss
sub
cmp
add
scas
scas
pop
or
aaa
and
sbb
sbb
dec
xor
loope
lahf
inc
mov
pop
into
repnz
repz
cmc
or
pop
pop
xchg
push
pusha
insb
scas
aas
in
push
stos
jnp
fdivrl
lcall
or
jge
jb
iret
mov
into
ficompl
ds
or
imul
push
in
lods
jle
push
and
pop
negl
fdivp
dec
int3
fmull
mov
orb
test
dec
rorl
mov
pop
cs
movd
cs
into
xchg
sti
inc
mov
leave
ret
dec
mov
push
dec
iret
mov
sarb
addr16
scas
sbb
sbb
jmp
mov
out
lods
or
dec
jnp
faddl
fs
adc
xor
ljmp
call
pushf
lahf
out
xor
loop
jmp
repz
fisubs
push
jb
repz
pop
and
add
dec
insb
scas
out
mov
icebp
fistpl
out
cwtl
ret
sbbl
shr
or
shrl
aas
mov
stos
adc
jecxz
aam
or
lds
cmp
popf
xchg
sub
adc
pop
adc
sbb
clc
loope
mov
push
cli
es
lods
cld
lds
fildl
out
sbb
push
popf
sbb
jno
sbb
jne
adc
out
push
fdivl
push
push
scas
adc
dec
push
sbb
xchg
sub
adc
sysexit
lcall
out
lret
push
jecxz
jbe
xchg
adc
xlat
fcoml
rcll
inc
sbb
mov
sub
fildl
out
sbb
lret
cwtl
in
sub
or
push
fwait
stc
in
sbb
pop
dec
cltd
andb
adc
sbb
mov
cmp
dec
mov
lret
push
or
fisubrl
cld
out
mov
int3
lret
or
dec
lock
mov
lods
mov
adc
or
push
sbb
cmp
dec
jo
cs
xor
jne
mov
clc
out
add
or
js
in
iret
dec
pop
pcmpgtb
dec
dec
adc
sar
adc
push
mov
nop
lret
rcll
push
push
lock
pop
rorb
adc
push
cld
xchg
sbb
cmp
fwait
repz
fcoml
lret
push
push
xchg
push
aam
adc
mov
fcmovnbe
dec
adc
xchg
lret
push
push
push
push
lock
pop
xlat
dec
pop
adc
push
cld
xchg
lret
fcoms
push
pop
in
cwtl
fcmovnu
dec
sbb
mov
pop
lret
cltd
xchg
fcmovnu
insl
or
lods
dec
mov
pop
push
lret
push
inc
push
dec
cld
push
mov
stos
pop
int3
dec
or
out
dec
cld
mov
int
in
adc
dec
into
xor
popf
push
lret
cs
dec
inc
test
sbb
jl
or
clc
test
mov
jmp
xchg
das
mov
faddp
idivb
lods
mov
mov
lret
mov
pop
std
xchg
dec
or
xchg
scas
push
xchg
daa
xor
fiaddl
popf
cmpsb
iret
sahf
sub
cli
mov
sub
imul
fsubs
sti
adc
cmp
out
hlt
add
outsb
jne
out
shll
jl
or
jne
sbb
adc
leave
lods
lods
or
xchg
in
mov
std
out
and
and
push
and
rcll
mov
mov
test
imul
in
daa
xor
pop
dec
repz
bound
cwtl
pop
dec
fdivr
xor
xlat
inc
cmp
out
mov
push
push
mov
bound
movsb
or
push
jae
ficomps
mov
repz
or
jmp
ja
lea
inc
into
mov
jne
pop
stos
lret
sub
repnz
outsl
lahf
push
int
add
js
sarl
xchg
xchg
loopne
jno
subb
loop
sbb
iret
mov
lret
add
outsb
fcmovnbe
sub
sbb
rcl
cmp
adc
pop
cmpb
sub
push
jns
inc
xchg
out
cmp
jb
adc
aas
lea
dec
push
xchg
mov
xlat
adc
cmp
iret
or
push
push
sbb
xor
add
outsb
inc
mov
loop
out
jmp
dec
mov
adc
cld
dec
lea
jbe
dec
push
mov
push
add
xchg
mov
daa
dec
out
or
fdivrl
sbb
fdivrs
movsb
repnz
mov
icebp
sub
iret
mov
pop
jnp
lcall
cld
pop
mov
lea
das
inc
push
notb
outsl
mov
push
cld
lret
gs
pushf
push
mov
adc
mov
pushw
test
add
loope
xchg
mov
out
es
lret
sti
negb
je
mov
dec
shlb
out
mov
mov
inc
xchg
shl
xlat
dec
adc
test
jg
fistpl
jbe
iret
mov
mov
lock
push
dec
lods
aaa
pusha
add
and
push
adc
or
das
or
in
push
adc
sub
push
jmp
or
shll
subb
pop
and
push
andl
xlat
sbb
call
insb
loop
add
jae
je
add
jb
jp
nop
or
cmp
fdivl
jae
cmp
sub
fsubr
and
mov
lret
push
and
pop
push
test
les
shr
popa
dec
push
sahf
decb
mov
sbb
rcrl
mov
andb
shrl
cltd
sbb
in
into
cltd
pop
jge
xchg
and
xchg
inc
movsb
rcr
fabs
nop
mov
jp
xor
dec
je
bound
stos
pop
imull
sbb
enter
xor
add
mov
call
and
cmp
sti
sub
xchg
call
dec
cld
adc
mov
lods
idivl
mov
imul
iret
jo
pusha
mov
ret
push
or
fisubl
or
push
dec
sbb
add
sub
pop
lea
jp
nop
sub
dec
out
ljmp
jbe
insb
lret
ljmp
add
mov
leave
int
pop
jns
rcll
xchg
mov
ljmp
outsb
pop
filds
clc
ja
cmc
push
mov
fnstcw
into
iret
adc
mov
or
nop
xchg
aad
loop
fdivrl
mov
sub
cmp
lcall
mov
repz
cli
clc
ds
cmp
cmc
out
and
cs
or
fimuls
dec
inc
inc
pop
xor
fwait
out
ja
sub
and
sub
adc
insl
setg
add
adc
mov
aas
sbb
inc
das
cwtl
push
jle
inc
bound
mov
fnstenv
scas
out
jb
scas
add
pop
call
test
ret
and
aam
pop
scas
push
and
dec
fldcw
repz
inc
and
inc
push
hlt
jo
int3
add
sti
dec
std
pop
lods
dec
mov
imul
test
sbb
sahf
cltd
push
sub
push
out
pop
daa
push
xlat
hlt
ret
call
mov
xchg
dec
pop
pop
test
inc
rolb
fldcw
xor
lock
movhps
call
ret
test
dec
lods
add
lock
mov
or
imul
push
aas
and
jge
add
lahf
ret
imul
jle
push
sarb
sbb
push
orb
scas
fmull
or
mov
aas
in
repz
sbb
lahf
xchg
rcrl
fidivl
negb
cld
and
scas
call
pop
outsl
inc
sbb
sbb
adc
lds
xor
inc
inc
jno
adc
cmp
or
sbb
sbb
sub
sbb
sbb
ss
pop
das
xchg
or
push
sar
sbb
enter
out
dec
sbb
in
out
dec
mov
ljmp
mov
sbb
aas
outsb
sbb
jbe
or
adc
das
in
push
pushf
out
jmp
lahf
pop
xor
dec
rclb
in
lea
dec
fldt
pop
push
out
into
dec
dec
dec
pusha
or
sbb
test
jns
hlt
repnz
ds
sbb
sub
mov
dec
out
faddl
push
outsl
fldl
and
neg
mov
jno
xorb
jbe
insl
cmp
mov
adc
pop
iret
inc
fidivrl
pop
in
inc
cli
neg
sub
adc
nop
dec
dec
mov
not
xor
into
sar
push
aas
cmp
and
inc
jne
pushf
lea
jp
movsl
nop
dec
sti
scas
adc
jae
in
jae
push
add
sbb
shll
dec
ds
dec
push
mov
out
bswap
orl
jp
mov
aad
sarl
mov
daa
add
mov
or
inc
incl
push
inc
fdivrs
xlat
mov
into
out
insl
cltd
aaa
ret
lcall
add
mov
jle
xchg
dec
dec
push
lea
xchg
jo
icebp
lcall
jle
iret
pop
roll
pop
or
fsts
mov
cs
cli
inc
mov
jle
and
add
adc
push
or
sarl
add
dec
dec
and
inc
fbld
ret
gs
push
leave
jmp
and
out
push
xchg
xor
and
fcmove
or
dec
jecxz
dec
cmp
mov
cmovns
xor
adc
mov
fldcw
push
lret
push
mov
push
add
repz
sub
sbb
pop
or
push
pop
cmp
sub
scas
aad
dec
sub
xchg
sub
je
sub
hlt
ljmp
rcrb
sub
testb
add
mov
roll
mull
mov
mov
lcall
into
lret
jecxz
xor
aam
jmp
leave
mov
out
shll
loope
jge
or
iret
mov
mov
int3
jg,pt
scas
int
dec
push
sarb
mov
dec
hlt
add
clc
mov
mov
fcom
or
jle
js
movl
lret
bound
int3
out
push
mov
fnstenv
stos
mov
dec
std
pop
shl
je
pop
lret
pop
sahf
jo
push
addr16
pusha
cwtl
iret
or
pop
mov
jg
les
roll
mov
adc
mov
in
jge
fmull
loope
aad
mov
pop
mov
lock
add
push
and
lds
in
sbb
dec
ljmp
aad
or
stos
outsb
mov
stos
notl
pop
mov
jecxz
rorl
dec
repz
sub
add
push
addr16
cld
enter
jp
or
les
aas
jl
fimull
sti
mov
stos
pop
arpl
cmpsb
rcrb
fstpt
das
mov
dec
pop
jl
mov
mov
daa
popa
xchg
cmp
or
or
enter
or
fcomps
int3
dec
dec
jp
xchg
ret
cmp
shr
mov
lock
mov
roll
out
jl
xchg
fcomps
es
mov
dec
add
jmp
sbb
xor
sub
dec
cwtl
xor
in
mov
push
lahf
repz
mov
dec
daa
arpl
mov
fbstp
push
aas
xor
out
jae
fstl
decb
push
add
xor
push
mov
scas
addr16
test
mov
and
pop
xchg
mov
repz
dec
outsb
ljmp
lahf
aad
bswap
das
xlat
outsb
xchg
jo
mov
add
jg
adc
out
dec
ljmp
sub
out
scas
iret
cmp
mov
pop
mov
jle
stc
cmpsl
shll
jbe
adc
or
pop
or
int3
filds
or
or
sbb
jl
lock
or
imul
hlt
frstor
cmpsb
adc
and
jge
ja
pop
rcll
in
enter
mov
mov
js
jge
mov
push
fimuls
jp
and
scas
scas
outsb
lods
push
sub
ror
xlat
mov
lods
push
out
dec
leave
jge
lret
mov
cwtl
loope
dec
loopne
jmp
pop
aas
inc
movsl
mov
add
jmp
divb
imul
dec
jg
das
dec
sbb
jmp
mov
out
sub
enter
push
movsb
or
scas
in
push
fwait
mov
xor
cmp
sbb
mov
xchg
cmp
loope
in
add
das
fidivl
pop
stc
es
fnstsw
jecxz
int3
mov
xor
pop
mov
sbb
pop
inc
bound
int
out
mov
scas
mov
mov
xchg
jp
adc
add
jb
sub
or
popf
cli
ss
roll
mov
std
cmp
aas
mov
pop
fcomp
mov
shlb
and
mov
push
lret
mov
cmpsl
pop
rcl
jl
es
cmp
fsubrl
mov
int
pushf
mov
pop
scas
dec
in
aaa
shl
popa
dec
add
jne
fistps
mov
push
das
iret
arpl
dec
rorb
jecxz
jge
mov
inc
push
loop
andb
sub
out
cmc
jbe
fimuls
adc
cmc
lret
cmc
iret
rcl
js
out
jo
je
push
outsl
sub
xor
mov
aam
mov
cmpb
fmuls
xchg
repz
shll
pop
outsl
sbb
sub
and
int3
push
mov
and
push
xor
mov
mov
movhps
jle
rcrb
push
cmp
mov
cltd
mov
stos
mov
cmc
sarb
jns
lret
push
out
add
adc
lret
or
jne
leave
push
mov
cwtl
int
cwtl
and
dec
push
sub
out
cmpsb
aam
sub
repnz
lock
fstl
push
jecxz
mov
std
mov
fldt
mov
and
mov
in
or
pop
sar
and
inc
jmp
popf
out
dec
rcll
ss
out
sbb
addl
push
stc
cld
jo
push
sub
fimuls
popa
leave
push
mov
fs
cmp
or
jmp
jb
dec
lret
lods
add
mov
fsincos
pop
jbe
fisttpll
scas
mov
rorl
lret
push
sub
adc
loop
out
into
mov
scas
in
cltd
hlt
and
sub
mov
test
sbb
enter
stos
jo
push
outsb
test
or
lcall
sbb
adc
mov
subl
in
ret
cmp
or
mov
into
add
add
cs
xchg
imul
in
dec
cmp
mov
movsl
insl
icebp
es
pop
bound
push
mov
mov
or
repz
dec
cmc
mov
lret
jg
or
cmp
shlb
dec
adc
iret
enter
dec
and
dec
sbb
nop
jecxz
mov
jb
cmp
ficoml
mov
sub
or
add
subps
jb
fstpl
jl
mov
and
and
cmp
push
xchg
in
or
push
dec
loopne
jge
mov
int3
or
pop
push
dec
or
dec
test
cmpsl
mov
sub
dec
adc
dec
adc
or
mov
add
adc
int
cmp
dec
repnz
in
out
filds
movsb
in
and
int
adc
xchg
pop
or
push
ja
scas
pusha
inc
mov
mov
shrb
sbb
cmp
mov
push
nop
ljmp
xchg
rcrb
dec
mov
popa
mov
push
cmpb
cli
lret
pop
push
jl
sbb
or
out
ss
adc
mov
fldcw
leave
push
add
add
test
into
inc
dec
pop
mov
sbb
fadd
std
xchg
test
lock
inc
imul
cli
decb
dec
xchg
or
clc
popf
int
ss
sarb
adc
dec
and
jns
es
jne
sahf
or
lcall
je
fcmovne
popf
loope
push
pusha
shl
int
jecxz
sub
pop
pop
push
adc
pop
jle
push
mov
shrb
rcrl
hlt
es
pop
push
push
cmp
push
dec
fimull
lds
jg
adc
stos
or
cltd
sub
movsb
sahf
movsb
mov
dec
push
or
xchg
das
lds
inc
push
adc
sti
loope
hlt
fidivs
in
add
add
xchg
scas
dec
hlt
or
les
push
leave
pop
push
data16
lret
outsl
addr16
insl
xchg
lret
dec
and
jle
aam
outsb
sub
scas
and
into
loopne
jle
push
inc
cwtl
pop
jmp
fs
shr
dec
js
int
pop
push
test
mov
cmp
add
hlt
aas
xchg
bound
jecxz
jo
cmp
imul
test
adc
adc
rorl
push
and
sti
mov
dec
test
icebp
push
repnz
repnz
sbb
ljmp
jecxz
mov
sbb
orb
inc
scas
mov
fists
mov
push
push
outsb
test
mov
lret
sti
and
push
pop
add
ret
or
cmp
gs
enter
mov
push
shll
in
clc
inc
lods
xor
out
pop
jne
scas
add
mov
inc
pop
sti
jl
sbb
outsl
iret
insl
lahf
cs
mov
fstpl
mov
icebp
aas
mov
mov
or
pop
ds
sub
push
cmpb
mov
cmp
xor
jl
xchg
pop
dec
mov
in
jo
nop
test
pushf
mov
mov
ds
bound
flds
push
pusha
fdivs
cmp
vmaxps
cwtl
pop
and
mov
cld
jmp
xchg
push
and
popa
lea
fbld
mov
or
hlt
or
js
test
clc
pop
sbb
xor
into
xchg
rorb
dec
repnz
fidivrs
push
pop
lret
jmp
or
mov
fimull
inc
lock
xchg
adcl
pop
and
std
mov
stc
es
mov
cmpsb
stc
jle
cs
cmc
add
mov
into
ret
cmp
imul
mov
mov
mov
fldcw
jmp
mov
out
leave
mov
fisttps
mov
js
mov
xor
repnz
out
xor
cmpsb
pop
aaa
aaa
std
jnp
int
mov
dec
dec
or
mov
mov
in
test
bound
testb
push
push
js
les
ficomps
stos
or
mov
mov
pop
int
mov
int3
jle
cmp
jecxz
cmp
add
jecxz
xor
push
in
mov
iret
lea
pop
jmp
movsb
cwtl
movsl
lahf
sub
cmpsb
push
lods
cmc
fadds
shrb
das
mov
fwait
ljmp
pop
cmp
out
repnz
pushf
jp
xchg
push
gs
dec
cmp
jg
out
push
rol
or
xor
loop
xor
out
fdivl
xchg
lret
mov
loope
push
jne,pt
xor
lret
rcl
xor
mov
mov
in
clc
fisubrs
or
int
mov
jg
pop
mov
iret
ficoms
les
lret
loop
mov
ljmp
mov
cmc
inc
lods
push
ljmp
imul
shl
sbb
sahf
lcall
sbb
stc
push
es
pop
and
pop
mov
sbb
repz
pop
push
xor
mov
call
jmp
sub
xchg
lcall
pushf
sbb
adc
pop
pop
fisttpll
push
add
mov
mov
inc
xor
lcall
int3
sbb
inc
cli
dec
xchg
inc
sti
cs
lock
jecxz
adc
incb
lea
iret
push
loop
pop
xor
fisubrl
icebp
icebp
in
adc
orl
push
push
int3
push
pop
lea
out
adc
cld
push
sub
push
sub
adc
jnp
xchg
adc
lret
in
aad
ret
sub
iret
popf
fisubl
sar
lret
ljmp
shrb
mov
xchg
xchg
sub
adc
push
adc
shr
adc
out
dec
xchg
mov
mov
fwait
pop
test
pop
fcmovnbe
stos
pop
in
jl
push
loope
adc
xchg
pop
xlat
dec
mov
pop
pop
int3
dec
imul
ljmp
mov
sahf
pavgb
fsubr
jmp
adc
cwtl
in
pop
pop
sbb
ljmp
mov
sub
adc
and
or
dec
xor
mov
out
fcoml
xchg
jbe
lea
dec
stos
sbb
roll
cs
adc
pushf
sti
or
sbb
mov
jg
imul
add
dec
push
sub
jp
dec
and
inc
decb
push
call
push
jg
mov
test
out
jo
inc
xor
movsb
mov
cs
adc
pop
enter
pop
mov
jnp
pmaxub
jb
xor
in
leave
call
daa
pop
ds
mov
fistps
aam
jo
lret
ret
add
adc
iret
cmp
sub
lea
orb
pop
mov
in
fstpt
adc
jp
or
orl
push
jp
lds
into
fwait
mov
mov
mov
mov
sbb
adc
lret
imul
es
mov
xchg
and
dec
shlb
jnp
xchg
mov
push
lock
dec
mov
or
or
notb
sub
cmp
xor
sbb
in
mov
mov
ds
cld
or
adc
sbb
icebp
scas
pop
mov
lods
pop
ss
fcmovnbe
in
push
xchg
mov
cltd
jmp
in
in
push
push
lret
mov
mov
lret
xchg
pop
lcall
push
adc
adc
jp
mov
mov
push
je
push
pop
sbb
in
dec
pop
dec
mov
cmp
push
push
int3
sbb
icebp
out
lret
mov
jb
filds
adc
in
pop
sub
movsb
inc
dec
insl
cmpsl
pop
dec
sti
or
fsubrl
dec
in
mov
dec
pop
sub
and
and
cld
push
repnz
fcmovu
pop
xchg
xlat
push
aam
cmp
sti
es
mov
jo
cmp
insl
jbe
xor
out
mov
pop
push
xchg
mov
ss
fimull
xchg
push
dec
addb
int3
sbb
icebp
sbb
movsl
xchg
sub
inc
pop
iret
outsb
or
pop
mov
leave
push
mov
dec
mov
or
iret
js
and
cs
fidivrs
push
push
ljmp
roll
jmp
lret
fucomi
sub
lret
push
inc
dec
das
cmp
test
or
std
cli
lret
out
clc
jb
and
sbb
cltd
inc
loopne
mov
adc
adc
jns
xor
mov
mov
push
cmp
and
pushf
xlat
sbb
outsb
dec
std
push
dec
jle
or
ss
push
stc
popf
or
fbstp
add
fcompl
dec
lods
push
test
sbb
push
jmp
mov
pushf
dec
mov
pop
pop
bound
inc
je
popa
or
dec
mov
xor
dec
out
pop
and
push
jg
cld
adc
pop
cmp
iret
into
push
cld
cmpb
push
sbb
fwait
jo
pop
inc
in
mov
jge
pop
pop
dec
jae
loop
pop
jp
inc
and
fs
mov
call
or
mov
pop
push
test
icebp
loopne
add
testl
mov
in
adc
pop
cmp
jecxz
sub
das
xchg
push
pop
add
push
dec
push
inc
out
enter
insb
nop
sbb
push
scas
pop
push
iret
out
dec
dec
inc
push
push
and
xchg
outsb
stos
ds
mov
mov
adc
fmull
adc
pusha
imul
pop
mov
and
or
sub
into
or
pop
pop
or
dec
adc
mov
lock
call
and
pop
inc
jns
arpl
sub
bound
inc
mov
dec
xchg
push
int3
ret
mov
mov
inc
mov
out
xchg
nop
cmp
sahf
inc
dec
or
imul
sbbl
pop
out
pop
aas
fcomps
lods
sbb
and
mov
cmpsb
stos
push
hlt
lods
inc
xor
dec
adc
mov
cmp
mov
or
pop
dec
into
and
dec
jb
lock
push
sub
gs
mov
fmull
js
ds
and
pop
jo
int3
pop
test
dec
sti
popf
adc
mov
call
scas
fcoms
mov
mov
inc
dec
aas
pop
mov
cmp
dec
cld
cmp
aas
popa
lea
cmp
xchg
push
popf
test
rcrb
shrl
ljmp
aas
dec
test
out
jp
fisttpl
lret
in
mov
mov
dec
push
ficomps
add
fwait
sti
decb
mov
in
xor
dec
out
and
inc
cmp
dec
push
push
or
ficomps
dec
orb
push
mov
push
dec
bound
sbb
inc
push
jae
cmp
xor
jae
push
dec
leave
fwait
fwait
cmp
jecxz
push
adcb
jl
bound
inc
adc
dec
cmp
loope
out
fstpt
lret
xor
cs
into
adc
pop
out
cmp
mov
xchg
adc
xor
cmp
sub
movsl
push
pandn
mov
aad
inc
xchg
inc
js
lahf
push
dec
mov
adc
scas
stos
jmp
out
xor
outsl
fimuls
push
jl
inc
cs
arpl
mov
push
loop
jle
ret
sub
mov
inc
into
mov
adc
mov
sub
lods
shlb
aas
and
inc
push
inc
loope
adc
sub
pop
dec
or
sbb
sub
addr16
sbb
push
lods
in
mov
or
clc
mov
jl
imul
mov
sahf
or
or
jb
mov
push
call
pop
inc
jae
inc
pusha
outsl
stos
push
add
sub
inc
pop
or
push
movsb
roll
fcoml
bound
ljmp
xor
or
aas
std
mov
push
rol
add
dec
xchg
sbb
sahf
xlat
pop
xor
dec
in
cltd
or
jmp
lods
jp
adc
mov
dec
loop
and
bound
or
fimuls
movsb
jmp
mov
dec
mov
dec
mov
mov
out
mov
dec
stc
push
mov
stos
xor
rorl
push
das
fs
and
pop
pop
adc
sahf
out
add
gs
cmp
sbb
out
stos
mov
inc
pop
push
popf
xchg
mov
sub
lods
and
push
ds
pop
mov
sti
pop
and
sar
dec
stos
add
repnz
cmpsl
dec
mov
addr16
ss
out
and
and
pop
add
imul
sbb
lret
jmp
les
pop
push
loop
out
push
testb
sub
xor
icebp
cli
pop
xor
int3
or
dec
sub
or
lock
ljmp
in
sbb
jmp
repnz
xor
adc
std
mov
in
adc
arpl
pop
xchg
mov
fldenv
sub
sbb
out
sbb
ret
xor
stc
push
notb
xchg
fisubrl
ret
int
mov
push
pop
dec
in
dec
pop
ljmp
push
out
sbb
sbb
mov
dec
sbb
push
out
lret
xor
mov
mov
fimuls
push
int3
fnsave
int
loop
insb
adc
sbb
mov
mov
in
dec
fstpt
push
push
lea
push
pmaxsw
in
dec
rcr
dec
ljmp
inc
xchg
lock
mov
nop
jns
xor
add
lret
addr16
fistpl
jge
sahf
fcomi
flds
push
roll
jnp
stc
fcmove
stc
nop
sbb
sbb
cmp
adc
rclb
adc
dec
adc
in
mov
lahf
enter
loop
int3
scas
call
mov
xchg
sbbb
jmp
mov
jg
or
icebp
inc
outsb
push
hlt
and
les
inc
mov
popa
pushf
or
jmp
pop
bound
mov
jmp
daa
jno
push
bound
lret
jb
jecxz
fsubrl
lods
mov
pop
fs
orb
push
cwtl
out
repnz
pop
ja
inc
clc
js
push
jg
std
dec
jns
fisttps
sbb
inc
test
cld
pop
fidivrl
pop
dec
push
mov
aam
cmp
insb
push
pop
dec
xor
cmp
inc
fisttps
or
rdmsr
clc
shrl
pop
mov
pop
mov
fs
push
xor
push
out
jecxz
fucomip
add
cmp
daa
xor
dec
invd
mov
mov
xchg
and
fidivrs
divb
mov
push
jge
dec
into
out
pop
jg
mov
mov
pop
repnz
movsl
push
pop
mov
jle
insb
fidivrs
into
push
js
std
pop
lods
push
push
push
leave
arpl
cltd
pop
mov
xchg
push
iret
cwtl
dec
jecxz
in
xor
jnp
push
cmp
bound
es
pop
mov
or
dec
pop
push
int3
enter
bound
jecxz
push
in
je
xchg
loopne
fldenv
sti
call
lahf
outsb
pop
pop
xlat
sbb
outsl
js
inc
test
sub
sti
pop
test
fisttpll
daa
in
and
insb
dec
add
push
pop
mov
pop
repnz
mov
jecxz
or
sbbb
out
lcall
inc
push
xchg
out
and
cld
push
jo
mov
stos
xchg
nop
inc
mov
iret
xchg
bound
dec
fistps
dec
dec
dec
add
daa
and
out
sbb
push
arpl
test
shr
pop
repz
mov
testb
pop
mov
fisttpll
push
mov
and
call
push
fiadds
lret
lret
fsubs
test
add
inc
pop
popf
cmp
mov
push
or
and
add
or
lahf
call
dec
mov
adcl
sbb
xchg
outsb
in
mov
mov
bound
aam
pop
rol
push
sbb
imul
int
loopne
out
lods
orb
cmp
ret
sti
cmpsb
cmc
xchg
adc
push
in
shr
scas
push
dec
sub
out
shrl
cmp
mov
sub
dec
pop
cli
and
out
push
mov
mov
cwtl
mov
test
ss
cwtl
or
xlat
bound
fcomps
xor
sbb
xchg
mov
inc
push
shlb
or
fisubrl
cmp
xchg
nop
pop
sti
push
sbb
mov
cltd
fwait
and
les
rclb
pusha
add
inc
add
roll
mov
rclb
push
into
push
shrb
stos
cld
push
push
outsl
call
push
pushf
jp
mov
movsb
test
cli
inc
adc
push
aas
imul
ret
loopne
insb
pop
adc
negb
fwait
sub
ficompl
mov
ja
push
sbb
iret
fidivrs
push
ljmp
jne
sbb
mov
inc
jecxz
std
push
mov
into
scas
shlb
xchg
xchg
add
mov
loop
mov
adc
aam
or
cmp
das
jp
and
ret
mov
pop
xchg
aad
add
jb
lahf
or
insl
ja
and
fisttpl
pop
divb
mov
mov
and
in
popa
and
mov
lods
gs
dec
ror
adc
ljmp
inc
out
mov
ret
adc
loope
popa
pop
pop
not
sti
scas
out
push
cmp
pushf
scas
and
aam
imul
inc
jne
clc
pop
mov
les
dec
imul
into
cwtl
call
jp
adc
mov
dec
sbb
nop
stos
pop
cmp
imul
xchg
sbb
jmp
cwtl
pop
mov
mov
inc
dec
adc
jae
xor
cwtl
xchg
cmp
fcoms
dec
mov
aas
xchg
push
mov
out
jge
or
sbb
pop
adc
je
pop
pop
std
dec
sahf
jmp
int
ljmp
int3
mov
into
enter
xchg
cwtl
test
cltd
and
bound
mov
pop
fsub
pop
sbb
jnp
pop
mov
jge
lods
loop
push
ss
testb
das
mov
iret
mov
movsl
out
scas
pop
add
in
popa
adc
bndldx
mov
int
leave
addr16
cmp
ljmpw
inc
les
jmp
push
jecxz
pop
sbb
mov
mov
pop
iret
fs
lods
push
pop
insb
mov
sub
sub
adcb
in
mov
adc
mov
in
aaa
and
outsl
imul
inc
arpl
int3
cmp
mov
xchg
rcll
cmc
jnp
cmp
pop
inc
lock
incb
or
int
sbb
inc
mov
pushf
mov
xchg
mov
sar
aas
add
jle
and
ljmp
dec
jle
mov
insl
push
mov
fstps
fcoml
dec
xor
jmp
aaa
cmp
xlat
mov
fsubl
fstl
je
xchg
xchg
or
fcomip
add
rcl
outsl
cmpsb
or
aas
sub
sbb
push
and
or
fsub
js
pop
add
aad
test
hlt
pop
cmp
sub
loop
das
dec
jl
jb
repz
mov
xor
subb
push
push
pushf
lss
lret
aam
cmpsl
int
loop
adc
and
inc
push
jb
sbb
cmp
inc
test
mov
mov
lcall
popf
fsubrp
adc
lods
outsb
into
dec
mov
loop
movsb
jecxz
shrb
cs
adc
hlt
aas
out
mov
push
xchg
add
push
decl
push
sbb
mov
out
and
sahf
fcmovne
std
shlb
fstl
adc
daa
pop
xchg
jge
bound
sub
outsl
add
popf
mov
or
dec
cld
out
bound
adc
orl
fs
pop
adc
jg
test
ret
xchg
push
int
ret
orb
jge
je
fisttpll
cmp
add
push
mov
adc
mov
fnsave
les
jge
add
jg
jnp
in
in
test
bound
add
pop
cmp
rcrl
loop
cld
ss
xchg
test
lods
out
mov
mov
push
icebp
jb
stc
mov
test
inc
push
sti
push
ret
cld
jbe
imul
mov
and
jge
cwtl
pusha
and
and
sub
dec
fsubs
and
icebp
lods
mov
jle
xor
mov
into
add
ret
repnz
mov
sbb
int3
pop
int3
jg
fsubs
xorl
xor
pop
mov
jno
imul
pop
test
lock
cmpsl
lods
mov
push
mov
lcall
loope
xchg
push
icebp
dec
rcl
mov
pop
rorb
test
loopne
xchg
push
push
ret
shll
nop
fisubrs
fdivrs
scas
lods
push
das
mov
loope
gs
or
das
in
pop
mov
lods
arpl
inc
fucomi
jno
ljmp
iret
rcrb
repnz
pop
add
clc
scas
sbb
fisubl
push
cmp
jmp
hlt
repnz
dec
add
ss
stos
scas
mov
push
lods
or
dec
push
lcall
sbb
rclb
jle
int3
loope
les
mov
sahf
and
call
mov
xchg
mov
testl
jmp
out
push
pop
jmp
cmc
mov
or
dec
mov
enter
mov
and
mov
mov
in
decl
mov
loop
popa
cmp
or
dec
add
mov
xor
imul
push
or
dec
lds
leave
jb
xchg
out
out
fsubs
dec
sub
cld
fdivrl
imul
cmp
xor
ljmp
jmp
data16
mov
xor
out
pop
adc
jecxz
repnz
mov
push
jl
mov
cmp
nop
push
or
push
mov
aam
mov
jl
add
fistl
pusha
mov
dec
into
outsl
xor
xchg
bound
mov
ret
mov
outsl
dec
jle
jp
mov
sti
add
pop
cltd
iret
scas
pop
pop
dec
mov
repz
into
scas
push
jecxz
sarl
mov
nop
pop
mov
sub
fcomps
ss
push
mov
rolb
mov
cmpsb
lds
sbb
adc
fwait
and
mov
dec
mov
imul
pop
mov
or
ja
pop
testl
fldcw
mov
pop
mov
xchg
call
rol
fucomp
cmp
pop
pop
sbb
mov
dec
ja
ljmp
mov
pop
mov
adc
xchg
lret
xor
inc
nop
stos
jle
mov
mov
dec
cmp
xchg
cs
in
cwtl
cmp
cmpl
in
gs
filds
mov
jbe
das
faddl
adc
aas
cltd
lret
jb
iret
out
adc
out
push
or
outsb
in
push
jbe
inc
cmp
pop
out
rorb
inc
push
xor
xor
adc
jno
add
sbb
pop
push
cld
jmp
mov
mov
fisubl
xchg
vpbroadcastq
mov
testl
pop
pop
repnz
jge
jb
adc
loopne
lds
inc
pop
subl
in
and
dec
cmp
bound
pop
sub
add
lret
lcall
dec
std
sbb
jbe
dec
sub
mov
mov
mov
xchg
es
dec
sbb
cmpsb
mov
jmp
adc
jbe
xchg
sti
mov
adc
or
sbb
clc
sbb
pop
sahf
dec
daa
xchg
jbe
mov
int
mov
cli
aas
adc
xor
inc
imul
das
adc
mov
jg
pop
cmp
ror
dec
inc
sbb
push
xchg
fstl
rcll
inc
ret
loopne
dec
xorps
cmp
insl
data16
into
rcl
adc
das
aas
push
enter
in
jb
roll
shlb
push
sbb
pop
pop
mov
sbb
pop
or
mov
xor
nop
fmuls
dec
xchg
pop
or
inc
sbb
jns
fildll
adc
aaa
dec
in
push
rol
fisubrl
popf
jnp
and
jmp
xchg
add
inc
cwtl
dec
dec
lahf
pop
mulb
mov
jb
mov
je
sbb
mov
push
rolb
out
cli
or
ja
cmp
sbb
adc
or
fcomi
fsubs
daa
and
xor
scas
and
jnp
add
mov
mov
or
push
bound
adc
jb
mov
stos
orb
dec
push
adc
jge
enter
inc
mov
icebp
stc
dec
fsubr
pop
and
jge
push
rcrl
pushf
bound
xor
jle
push
cmp
jo
mov
clc
fs
das
mov
mov
and
daa
loope
aas
xor
outsb
push
cmp
jl
push
cmpsl
pushf
ds
or
inc
push
sub
dec
inc
jns
repnz
sti
xlat
jmp
dec
push
or
jp
iret
fisubs
xchg
sbb
pop
loopne
fidivl
icebp
shr
inc
pop
add
mov
sti
push
pop
and
mov
incl
test
ret
jmp
cmc
stos
int3
insb
and
fsubrl
dec
pop
cmc
bound
lcall
push
mov
adc
add
test
arpl
push
add
mov
xor
jle
pop
pop
in
and
outsb
inc
js
push
int3
in
xchg
fsubrl
sarl
jl
pop
jmp
mov
enter
test
jnp
mov
or
std
xchg
fmull
sbbb
add
adc
ror
dec
cli
movsb
sub
outsb
pop
xchg
jno,pt
push
push
pop
lods
lret
jne
push
push
mov
mov
fcmovne
inc
int
dec
jo
faddl
gs
es
adc
fwait
mov
rorb
das
or
popa
jg
pop
push
mov
hlt
add
xor
mov
sub
out
rolb
outsl
or
sbbl
mov
call
mov
and
test
add
rorl
ror
add
xchg
mov
int
in
adc
sahf
push
test
add
push
xchg
into
mov
bndstx
pop
mov
bound
insb
inc
sbb
insb
adc
adc
mov
jb
push
and
sub
inc
leave
mov
jle
push
mov
mov
dec
and
or
bound
and
cwtl
cmpsb
gs
hlt
mov
ss
iret
js
rorl
daa
push
sbb
movsb
push
repz
js
sbb
nop
mov
xlat
lcall
enter
pop
imulb
push
lahf
xor
pop
mov
pushf
es
call
int
in
rcrb
imul
adc
hlt
dec
or
sub
cwtl
pop
inc
mov
aad
sub
lret
mov
pop
iret
mov
jne
les
out
xchg
add
jge
leave
jmp
ljmp
push
jns
aaa
enter
ljmp
push
lret
xchg
lret
push
imul
stos
fistpll
addl
das
mov
dec
fistl
shl
inc
fidivrs
fists
jae
subb
rorl
shll
xchg
xchg
and
inc
iret
pop
out
jle
js
sbb
sbb
outsl
sbb
aas
into
adc
and
push
in
and
rorb
out
pop
jecxz
xchg
sbb
into
mov
out
int3
or
scas
push
mov
jle
jne
jmp
xchg
cmp
dec
sbb
and
stc
xor
pop
jb
mov
in
mov
push
ljmp
and
jb
daa
arpl
or
push
shrl
jbe
pcmpgtd
jp
push
loop
jge
sub
icebp
jle
popa
js
repnz
mov
sub
and
adc
mov
xor
adc
loope
xor
pop
pop
outsb
cltd
test
sub
insb
stos
sbbb
push
or
mov
cmp
repnz
jo
push
inc
sub
and
les
inc
iret
dec
mov
es
inc
jg
sub
inc
push
aas
jecxz
int3
or
inc
mov
sahf
dec
inc
add
pop
mov
outsl
xor
pop
xor
stos
push
mov
sti
inc
lods
outsl
insb
mov
jp
xchg
aas
sub
inc
sbb
xchg
aam
jge
sahf
imul
sbb
shrb
aas
imul
mov
andb
and
jns
ret
xchg
push
inc
pop
fiadds
aam
sub
jle
out
pop
sub
fbld
lret
loopne
stos
xchg
push
jne
jmp
pop
jnp
jg
and
test
jg
insl
scas
xor
xor
movsb
movsb
or
sub
or
dec
and
in
sbb
jecxz
pop
mov
push
out
ficoml
dec
pop
aad
scas
dec
mov
adc
imul
rorb
popa
jmp
dec
push
jl
ror
scas
push
mov
aam
inc
xchg
cmp
shl
pop
add
xchg
push
out
sbb
dec
stos
sbb
lret
sub
inc
pop
inc
mov
push
enter
and
clc
mov
or
cld
and
mov
pushf
jmp
sub
out
mov
out
mov
add
push
pop
sbb
push
push
dec
in
iret
lods
test
mov
cmp
push
fisttps
movsl
push
rorl
inc
std
pop
mov
insl
xor
andb
mov
inc
ljmp
in
or
dec
aam
mov
mov
add
iret
pop
lret
mov
push
mov
repz
jb
jo
inc
mov
push
bound
aad
in
es
mov
inc
mov
sbb
adc
mov
and
sbb
pop
dec
mov
jnp
enter
sti
int
ret
adc
andl
mov
pop
inc
cs
and
mov
push
dec
imul
jb
mov
and
out
sub
outsb
xchg
jno
cmp
inc
aaa
std
push
add
mov
dec
adc
xchg
add
in
adc
out
ljmp
lahf
lret
arpl
sbb
sbbb
adc
nop
popf
bound
adc
sub
orl
pop
add
jmp
lret
repz
sti
add
fcmovbe
cmp
es
xchg
test
cld
xor
and
inc
aad
or
pop
aam
dec
push
insl
mov
push
into
imul
lcall
jae
ss
adc
xchg
in
arpl
ljmp
scas
push
fidivrs
hlt
lret
dec
ds
push
add
fbstp
repnz
lock
xorl
lret
lret
cmc
sub
mov
rorb
pop
dec
push
push
ret
pop
shrb
lds
xchg
jg
inc
pop
xlat
xchg
cwtl
adcb
and
shlb
shll
ja
mov
rclb
sub
dec
js
jae
daa
push
fcom
jle
fisttpl
mov
ss
mov
popf
jge
push
inc
sbb
push
sub
call
mov
imul
push
adc
push
jg
mov
jbe
xchg
out
scas
repnz
imul
stos
popf
jg
iret
fnsave
pop
push
adc
lods
movsl
iret
jnp
mov
cld
push
push
xor
out
add
pop
jae
push
sar
divb
or
cwtl
add
movsl
xor
js
cmp
jno
xchg
and
add
fildl
mov
dec
sub
sti
rclb
sbbb
mov
int
or
fnstsw
mov
mov
filds
cmpb
divb
adc
mov
dec
push
rorb
je
xchg
loop
adc
scas
xlat
addr16
bswap
mov
mov
jl
or
jbe
sub
cmp
push
aam
mov
aad
adc
fmull
mov
adc
fiaddl
cmpsb
leave
mov
xchg
lods
movsl
fsts
testb
jno
pop
rcl
mov
sbb
shlb
int
lock
push
sahf
xor
mov
fisubl
pop
mov
popa
sti
sti
stc
fsubrl
aas
mov
mov
mov
test
iret
es
or
test
pop
push
hlt
pop
cld
outsb
es
push
pop
enter
and
adc
jp
dec
clc
jp
ficoms
lcall
sub
mov
inc
add
fistpll
fisubs
int
ss
loop
mov
pop
movsl
or
cwtl
std
arpl
push
xchg
cmp
push
loop
subb
mov
xor
jp
pop
add
sarb
sub
mov
out
stc
adc
mov
and
inc
pusha
inc
mov
sub
pop
jmp
mul
mov
call
stos
inc
push
add
idivl
int3
jg
imul
movsb
mov
imul
shl
cmp
and
idivl
jge
cmp
jmp
mov
fimuls
int3
and
rcrb
xchg
ss
bound
aam
lret
cmp
roll
fwait
ds
out
inc
aas
add
mov
mov
push
mov
imul
and
paddb
xchg
repnz
pop
inc
sub
mov
jno
mov
sbb
jo
repnz
aas
inc
ficompl
mov
mov
lcall
sbb
iret
mov
or
lret
push
dec
sbb
xchg
cli
dec
lea
test
add
popf
in
pop
add
jne
mov
mov
add
test
test
cmp
bound
pop
out
das
push
dec
sbb
fsubs
jecxz
and
ficomps
adcl
fimuls
fimull
mov
dec
push
xchg
and
loopne
cmpsl
push
bound
pop
adc
jge
mov
or
lcall
xlat
loop
sub
sbb
adc
test
ss
xchg
fidivs
icebp
jno
mov
fscale
js
pop
xchg
insl
and
rolb
flds
pop
test
stos
cwtl
adc
xchg
clc
push
enter
xor
loop
xchg
incl
sbb
xchg
out
pop
xchg
fxch
jns
decl
xor
fimull
push
iret
and
out
xor
out
fwait
cmp
adc
rcr
movsl
sbb
jmp
int3
mov
push
aam
sub
jmp
push
fldl
clc
inc
pop
aam
les
cwtl
mov
mov
jo
shlb
cs
cli
in
mov
jo
adc
push
lds
xchg
loopne
and
cmp
cwtl
adc
divl
fwait
sbb
mov
cwtl
inc
pop
enter
or
or
inc
arpl
add
lret
out
js
dec
adc
pop
add
jmp
dec
xchg
jl
dec
clc
add
repz
push
in
shlb
and
stos
aad
data16
cmp
jg
pop
xchg
mov
jmp
or
push
add
push
fbstp
repz
sub
cmp
mov
or
arpl
iret
sbb
insl
dec
ss
mov
inc
adc
xor
sub
xchg
pop
xor
sbb
aas
push
push
mov
mov
pop
jg
lock
inc
sti
jl
js
dec
cmp
shrl
imul
pop
xchg
aas
cmp
jle
sbb
mov
mov
xor
add
xor
xlat
imul
sbb
dec
inc
adc
mov
int3
adc
lret
pop
cli
test
xorb
aad
bound
mov
adc
aam
cltd
cwtl
cli
push
fisubl
jmp
hlt
hlt
push
jp
incb
or
cmp
push
sbb
or
inc
loop
push
shrl
out
mov
jecxz
dec
xor
mov
jnp
dec
cmp
gs
adc
jp
push
cmpsl
and
cmpsl
test
subl
sarl
rcl
jb
jle,pn
mov
pop
insb
jns
mov
push
cmp
dec
and
cmp
negb
dec
dec
jge
xchg
inc
incb
dec
dec
rcll
out
mov
lret
lds
notl
sbb
bsf
sbb
inc
or
ret
data16
sti
lods
gs
test
out
testb
addr16
mov
shl
lahf
dec
pusha
sub
notb
sti
in
fidivrl
add
pop
cmp
lods
decb
fsqrt
data16
mov
mov
clc
mov
mov
mov
imul
or
loop
addr16
push
cmp
mov
ss
jp
gs
mov
jmp
pop
dec
lods
jmp
int
call
ljmp
jmp
add
outsl
andl
xchg
push
stc
daa
jne
imull
mov
mov
lcall
into
stos
adc
and
push
ss
movb
test
mov
push
xchg
jmp
pop
dec
shrl
popa
dec
movsb
sub
add
lahf
shrb
fcmovne
mov
in
arpl
xor
sbb
outsb
fmuls
push
sti
mov
dec
push
cmp
ret
pop
enter
add
sub
in
aaa
data16
add
sti
pop
out
fnstsw
sbb
ret
pop
adc
mov
dec
or
mov
popa
xor
in
sahf
out
sbb
adc
cmp
push
jne
xor
push
out
je
jge
mov
iret
pop
pop
and
iret
movsb
push
xchg
loop
das
leave
inc
xchg
mov
adc
jecxz
les
jge
xchg
push
shlb
adc
loope
aam
in
sti
or
sub
mov
lock
jne
roll
jbe
scas
fucomp
inc
inc
lods
or
data16
mov
dec
add
mov
imul
out
mov
sbb
inc
mov
bound
clc
in
pop
push
xchg
rcrb
and
sbb
lret
stos
mov
xor
mov
out
push
xchg
sub
lahf
push
jbe
loopne
lahf
andl
int
fidivs
repz
repz
ss
mov
push
push
lret
and
pop
cs
scas
cld
and
stos
sub
mov
das
push
stos
pop
aam
and
outsb
fwait
pop
jae
pop
sub
ljmp
aad
adc
xchg
xor
loope
sti
dec
test
mov
outsl
mov
or
sarb
push
enter
push
or
sbb
faddl
lret
mov
and
mov
lret
xchg
push
mov
xchg
scas
out
mov
add
lcall
dec
hlt
insl
aad
mov
mov
jp,pn
idiv
in
sarb
imul
int3
out
jmp
cld
jmp
fdivrl
push
shrl
dec
pop
andb
aaa
push
fstpt
jl
pop
lret
lret
cmp
dec
xlat
dec
cmp
cmp
pop
popaw
xor
mov
jno
mov
dec
inc
mov
jb
and
pop
dec
add
int
cwtl
xor
das
sbb
ss
dec
ljmp
mov
in
mov
lret
mov
jo
mov
filds
sub
xor
mov
rclb
repnz
adc
mov
adc
sbb
or
int3
es
out
inc
cmp
push
xchg
jo
fcmovne
out
mov
lret
and
repz
stc
or
imul
bound
jnp
adc
xor
ljmp
push
out
repz
cmp
mov
xchg
mov
inc
push
cmp
cwtl
out
mov
xchg
mov
add
pop
movsl
xchg
out
out
push
in
shl
or
or
and
fmull
xchg
lret
adc
dec
xchg
sub
pop
fcoml
and
orb
xor
cmc
pop
or
adc
ret
imul
push
cld
in
sbb
in
fs
insb
into
imul
pop
lahf
mov
pop
cmc
dec
or
pop
cld
jle
xchg
or
sbb
stos
adc
inc
xor
nop
scas
inc
scas
outsl
repz
push
and
scas
sbb
lea
jecxz
mov
jnp
cld
fnstenv
imul
sub
pop
into
loop
sub
int3
es
outsl
insl
into
or
dec
in
mov
pop
mov
push
mov
scas
or
mov
into
popf
add
pop
movsl
xor
xchg
ljmp
lcall
movsl
subl
mov
movsb
adc
js
or
jno
filds
ret
mov
add
cmp
leave
pop
int3
int
scas
push
pop
shl
cld
mov
fcoml
or
cmp
dec
add
jbe
test
sbb
inc
cltd
cmpsb
pusha
fists
cld
enter
xchg
and
rol
arpl
or
out
out
jne
cwtl
dec
rorl
mov
pushf
clc
add
jno
or
ja
aam
aaa
sbb
pop
in
inc
mov
jns
jnp
sub
repnz
cltd
mov
pop
xchg
mov
mov
pop
xor
test
lods
cli
mov
push
adc
xchg
jle
cmpsl
jae
cld
bound
jg
les
cmp
repz
mov
sub
ljmp
lret
adc
xor
rcll
push
dec
push
push
jl
and
int
and
dec
cmpsl
push
mov
repz
jge
movsb
out
mov
jno
ficoms
sub
mov
cli
and
in
leave
xlat
pop
int3
pop
sub
cli
hlt
push
dec
mov
adc
mov
in
movsl
or
dec
pop
xchg
leave
loopne
mov
lods
mov
subb
out
xchg
add
lds
lea
lret
test
or
sub
sbb
icebp
lea
fistl
xlat
inc
pop
sbbb
sub
add
rorb
push
gs
xchg
test
dec
imul
cli
out
push
or
sbb
pop
dec
insl
rorb
loop
xchg
dec
ljmp
in
jl
cmp
mov
push
sbb
or
push
out
push
not
mov
push
in
stos
pop
mov
fdivl
test
add
dec
push
inc
and
dec
jne
repz
test
and
mov
sub
int3
xchg
or
hlt
mov
inc
fcomps
clc
mov
jo
mov
int3
xor
daa
aas
pop
adc
stos
add
test
jg
flds
repnz
loop
call
jnp
cmpsb
fnstcw
into
das
stc
cmp
sub
push
xor
mov
dec
fdivrp
enter
int
popf
sbb
repnz
jmp
inc
lret
int
int3
mov
push
mov
lds
movsl
jnp
out
out
in
and
bound
imul
or
mov
sbb
xlat
xor
imul
inc
testb
or
aam
adc
bound
mov
ljmp
sub
cmp
or
inc
dec
mov
in
into
rcrb
or
dec
adc
gs
cmpsl
lds
fcoms
cmp
and
mov
into
sub
pop
mov
repnz
pop
mov
and
enter
aad
out
fisubs
stos
add
pop
lods
jge
mov
mov
outsb
cmp
push
mov
push
dec
insl
into
or
negl
fiaddl
andl
mov
bound
loope
pop
or
pop
lods
push
das
xor
out
jg
push
mov
jle
xlat
inc
adc
inc
stc
stos
out
and
xchg
inc
mov
into
or
add
adc
dec
adc
ror
pop
imul
add
cmp
jae
pop
hlt
aas
test
lea
push
fiaddl
sub
aaa
sbb
fs
and
push
daa
sti
ds
call
jo
mov
into
dec
jo
pop
sub
jecxz
push
out
pushf
jge
fstpl
and
lret
je
loop
sarl
mov
jb
pop
pop
cld
add
adc
add
std
cmp
in
cmp
pushf
mov
data16
pop
into
xor
xor
aas
cmp
aad
shl
fwait
fwait
pop
pushf
inc
or
bound
sub
push
and
repz
or
cld
jp
or
aam
repz
push
cld
xlat
aad
movsb
or
and
inc
int
mov
adc
inc
outsb
int
outsb
addr16
mov
cmc
inc
sbb
xchg
or
pop
push
dec
inc
jbe,pn
mov
or
scas
std
dec
sbb
into
dec
jl
mov
std
insb
mov
fldt
jl
pop
or
dec
aas
and
xchg
test
roll
and
adc
ret
add
sbb
xchg
cmp
xchg
mov
pop
adc
imul
pushf
push
sub
repz
in
inc
nop
inc
cld
in
and
pop
adc
mov
mov
cmp
pop
fcomip
in
bound
ffree
stos
pop
lods
insl
ss
mov
scas
sbb
iret
mov
pop
dec
and
repnz
popa
add
mov
cmp
or
push
or
loop
cli
pop
outsb
mov
lret
iret
mov
push
testl
subb
mov
cmp
mov
int
xchg
jae
out
je
data16
and
jmp
in
dec
out
jge
xchg
sbb
mov
jmp
bound
fyl2xp1
das
mov
mov
pop
cmp
sbb
cmp
jbe
and
cs
inc
xchg
xchg
fwait
mov
lea
cmp
scas
inc
xchg
mov
iret
fstl
subl
out
mov
jg
sti
sbb
mov
cld
mov
push
dec
pop
xchg
dec
das
out
sub
je
mov
adc
mov
mov
mov
pop
pop
xor
jae
hlt
cmp
fstpl
push
movsl
xor
cmc
or
inc
pop
mov
aad
addr16
in
das
push
pop
bound
mov
cmpsl
sbb
sbb
test
push
mov
adcl
push
adc
push
aas
and
adc
popa
pop
pop
adc
arpl
jmp
or
cmpsb
pop
int3
or
cmp
mov
adc
push
xchg
int3
out
icebp
das
jecxz
dec
or
adcb
adc
cmp
mov
pop
adc
mov
cs
lea
xchg
les
mov
fmul
sarb
adcb
sbb
daa
xor
mov
cli
scas
std
push
adc
repz
iret
pop
outsb
cmp
jge
shl
cmp
or
das
pop
push
mov
leave
adc
insb
or
pop
xchg
mov
cwtl
xlat
and
inc
shl
jge
jecxz
filds
mov
les
cmpsl
or
adc
cmp
push
adc
in
inc
mov
adc
mov
inc
lret
adcb
das
adc
push
sub
push
scas
push
dec
and
pop
mov
dec
stos
adc
xchg
fdivrl
fstpt
cmpsb
or
pop
xor
insb
mov
into
dec
push
aad
rcrl
cmp
jmp
test
adc
aaa
int3
jno
jne
and
and
mov
arpl
mov
aaa
aas
dec
dec
sbb
sbb
or
and
in
xchg
dec
loop
cmp
mov
ret
or
mov
pop
sub
cmc
jns
int
sbb
in
frstor
sbbl
fidivs
shll
outsl
lods
adc
insb
pop
adc
dec
iret
lock
pusha
loope
push
stc
or
fldenv
cmp
cmp
out
inc
jmp
lcall
mov
inc
mov
fnsave
inc
sbb
add
mov
cmp
mov
mov
insb
leave
movsb
lahf
int3
cmpsl
jl
jo
pop
xchg
cli
lcall
lods
pop
hlt
push
pop
loop
stc
adc
or
dec
loopne
push
imul
push
cmp
push
sbb
hlt
ds
repz
dec
filds
cmp
js
inc
sub
ljmp
mov
incl
dec
jne
stc
lods
cmp
inc
or
out
fildll
dec
pop
lds
mov
xor
pop
mov
clc
jle
ljmp
imul
cli
sbb
jns
jb
je
bound
outsb
das
cwtl
insl
adc
inc
pop
push
adc
xor
add
add
mov
and
or
int
movsl
fst
data16
cmp
jmp
lods
shr
bound
pop
cs
jecxz
test
jae
pop
pop
push
or
std
cmp
inc
fisubl
mull
dec
imul
sarb
push
mov
push
cli
test
pop
cmp
dec
jo
sub
pushf
jns
mov
adc
pushf
inc
jne
in
or
mov
test
push
bound
test
jge
dec
push
loop
scas
sbb
xorl
dec
daa
push
jge
add
enter
adc
iret
stos
mov
add
ja
mov
and
pop
shlb
roll
in
nop
dec
pop
push
lret
jge
in
push
sub
inc
sbb
cs
push
cs
js
ljmp
mov
mov
data16
popf
mov
sbb
dec
scas
fwait
sub
sub
jp
or
lock
stos
and
aas
cmc
push
sbb
insl
push
sbb
aam
mov
fildl
sbb
das
pop
xor
cmp
push
mov
adc
lret
sub
mov
fcomps
pop
jl
dec
movsb
lret
mov
fistps
adc
movsl
sub
fldl
xlat
mov
das
push
into
push
cmp
iret
cld
cmp
pop
ljmpw
cmp
fistpl
std
into
jbe
inc
push
adc
out
pop
out
pop
movsl
sub
or
ljmp
sub
inc
sbb
cmp
aas
stc
pushf
sahf
into
mov
adc
out
subb
xchg
cld
cmpsl
jmp
mov
sbb
aam
addb
pop
dec
dec
clc
push
scas
or
lds
push
push
inc
shll
mov
jl
xchg
or
jb
pop
dec
pop
outsl
andps
dec
js
int
cmovg
push
fsubs
push
testb
out
dec
fistps
or
scas
out
js
jl
adc
mov
insb
ljmp
push
pop
mull
or
es
push
movsl
into
ja
iret
or
xor
mov
iret
out
push
mov
lds
out
and
imul
jecxz
jge
and
bound
call
push
lods
pop
cmpsl
adc
outsb
push
aad
bound
sbb
xor
xchg
addr16
dec
dec
mov
push
push
xor
out
gs
jecxz
imul
call
pop
insl
fdivs
adc
sti
or
imul
or
popf
or
dec
jbe
outsl
jge
dec
sub
push
cmp
xchg
or
mov
jo
sbb
xchg
scas
std
xchg
rcll
movsl
lea
cmp
mov
and
roll
aaa
aas
adc
sbb
pop
nop
repnz
repz
or
mov
adc
pop
jo
fistpl
ss
cmp
mov
pop
add
mov
cs
fcoml
push
call
sbb
dec
movsb
sbb
mov
push
mov
fimuls
jge
mov
and
cmp
mov
movsl
or
jbe
mov
dec
add
in
paddd
or
rclb
xchg
loopne,pn
rol
shlb
mov
push
xchg
out
xchg
xchg
xchg
sbb
popa
mov
jmp
stos
scas
cmp
ds
dec
jo
cld
and
jle
adc
and
mov
xchg
stc
add
ret
mov
je
iret
mov
or
fsubr
adcl
adc
inc
jle
in
ficoms
cmpsb
pushf
loopne
mov
dec
pop
sub
enter
mov
pop
lahf
and
fnstcw
pop
mov
adc
add
fmul
or
push
paddusw
cs
dec
fsts
std
shl
sbb
push
aaa
or
hlt
jecxz
in
push
push
cltd
jo
dec
pop
imul
sub
hlt
push
das
jno
stos
fcomps
inc
lahf
push
iret
pop
adc
sbb
pop
lret
mov
jne
mov
out
outsl
testb
sub
or
jle
push
jp
xor
push
stos
pop
lds
testl
adcl
push
shl
xchg
cli
dec
adc
push
aam
mov
pop
add
decl
pop
jg
stos
fcomip
xchg
sarl
fisubrl
push
je
xlat
dec
fists
dec
loop
inc
mov
pushf
cmp
jecxz
clc
jmp
fldenv
movsl
add
sub
aam
not
das
mov
into
cmp
icebp
sbb
shl
data16
pop
mov
enter
into
push
movsl
aam
lds
sub
push
and
cltd
cmc
stos
ja
add
inc
dec
cs
ljmp
out
leave
pop
sbb
jne
xchg
dec
std
sub
jnp
pop
mov
int3
lods
iret
into
adc
nop
pop
iret
jp
mov
sarl
push
dec
outsl
xchg
xchg
enter
adc
sub
xchg
fistpl
les
jmp
sub
sbb
popf
push
cs
dec
xchg
sbb
xchg
adc
mov
les
sub
nop
or
aas
dec
ret
mov
or
std
fsubrp
mov
dec
xchg
int
pusha
and
jmp
dec
push
cmp
adc
cltd
or
out
push
popf
jmp
cmp
push
xchg
push
fcmovnbe
sbb
lret
pop
add
xchg
pop
mov
inc
fdivr
and
test
cmp
dec
out
add
or
add
pop
pop
lahf
cwtl
loop
mov
cmc
out
repnz
fstpl
pop
inc
xchg
mov
sub
ljmp
xchg
aas
fldcw
or
inc
ljmp
mov
ret
outsl
xchg
pop
cltd
fisttps
jnp
mov
lret
and
mov
mov
sub
mov
cmp
loop
out
sbb
int
imul
pop
mov
sbb
adc
cmpsl
aad
push
and
adc
cwtl
jge
shl
lock
push
push
pop
cmc
xchg
cmp
lret
pop
ret
add
clc
sbb
push
inc
adc
fcoml
shrb
mov
inc
rcrl
ljmp
lea
sub
jns
mov
pop
int3
mov
in
or
inc
das
dec
adc
mov
mov
sahf
mov
sbb
faddp
jbe
or
dec
iret
cmp
pop
mov
outsl
xchg
add
inc
mov
inc
sub
int
ret
fcmovb
inc
xor
push
std
imul
cmc
jp
dec
addr16
lods
shll
jecxz
aas
mov
nop
clc
xor
push
insb
mov
outsl
xchg
mov
sbb
xchg
xchg
mov
mov
lcall
or
dec
xchg
fwait
dec
xorb
adc
iret
adc
jae
adcl
mov
jl
mov
sahf
jo
lods
or
test
xor
mov
fists
sbb
jle
jb
lcall
addr16
xor
filds
pusha
adc
adc
mov
mov
cmpsl
cmp
div
push
sub
mov
arpl
jg
dec
js
pusha
out
xchg
addr16
xchg
pop
or
imul
cmp
adc
ljmp
add
adc
iret
insb
pop
push
bound
mov
pop
daa
push
jmp
push
xor
dec
pop
test
out
adcl
pop
sbb
jnp
mov
jge
mov
pushf
in
push
insl
clc
mov
fstpt
or
cmp
push
pop
sbb
rolb
ljmp
sbb
sbb
lret
sub
mov
pop
loop
inc
imull
add
and
cs
adc
mov
in
cmp
lret
sub
out
fs
jp
out
dec
js
addr16
sti
mov
or
mov
addl
les
and
lahf
xlat
in
dec
pusha
out
jbe
xlat
and
fiaddl
in
lret
mov
pop
mov
xor
sti
call
movsb
and
mov
jecxz
pushf
fdivr
data16
pop
pop
pop
inc
dec
mov
xor
jne
pop
jmp
fisubrs
mulb
lea
scas
in
mov
lock
lea
jp
into
daa
jne
pop
sbb
fwait
inc
loop
stos
bound
mov
nop
jge
xor
cmp
push
jge
and
push
scas
cwtl
cmpsb
std
mov
push
dec
push
inc
rol
sub
inc
or
pop
dec
sub
loop
pop
push
mov
push
rclb
ljmp
push
cmc
repz
ljmp
stc
push
pop
cmp
outsl
outsb
mov
mov
sub
pop
adc
outsb
imul
adc
fmul
sbb
pop
into
xor
mov
int3
std
arpl
push
sub
pop
dec
adc
push
out
mov
cli
dec
enter
or
mov
cmp
into
loopne
sub
fcmovnu
pop
clc
adc
lret
jmp
mov
data16
jmp
ljmp
fiaddl
push
adc
mov
and
pop
xchg
sbb
xor
pop
sub
and
adc
repnz
fsubrs
xchg
cmp
dec
notb
mov
jl
inc
enter
push
aas
dec
sub
pop
lods
push
or
popf
sti
enter
xchg
leave
lret
xor
sub
cmp
imul
scas
stos
cmpsl
fcomi
out
stos
ficompl
mov
out
or
rcl
or
idivl
mov
and
mov
xlat
dec
adc
push
std
iret
in
loop
cmp
mov
test
jne
inc
fldt
cltd
push
faddp
pop
push
loopne
shll
and
push
adc
mov
ja
ljmp
xchg
sub
icebp
rolb
add
nop
and
enter
ljmp
fbld
sub
sbbb
xor
lods
jae
jp
testb
xlat
or
push
loop
ds
dec
test
jecxz
sbb
pusha
into
ljmp
gs
cmp
repz
lds
dec
lds
xor
fsubrl
sub
mov
in
insl
adc
fcmovnu
jecxz
push
add
bound
cmp
jmp
cmp
sbb
lret
mov
cltd
dec
sub
jle
in
lahf
pop
test
in
push
add
xor
fsubrp
cmp
cmp
sub
fisttpl
jle
lret
jle
cmpsl
out
push
aam
add
and
inc
pusha
fucomip
xor
sub
lcall
test
pushw
fldenv
or
mov
into
xchg
xchg
push
cmp
push
iret
in
adc
repz
xchg
daa
jp
lcall
push
mov
or
mov
scas
dec
dec
push
mov
xchg
mov
pop
pop
std
scas
dec
jge
shl
les
je
clc
push
pusha
or
enter
outsl
lods
adc
rorb
sub
mov
lds
fmuls
out
ret
add
aad
or
shlb
ret
mov
sahf
and
imul
and
cmc
inc
adc
rolb
popa
scas
int
mov
mov
lret
cld
into
int
cmpsb
mov
clc
fsts
setne
out
cmp
push
fldcw
leave
fwait
pop
das
bound
xchg
pop
pop
push
sbb
dec
sbb
int3
lods
mov
lahf
repnz
pop
push
adc
sbb
dec
push
jmp
push
cltd
mov
pminub
or
dec
inc
push
shr
pop
pop
mov
jno
cli
andb
cmp
dec
push
adc
das
push
mov
dec
jb
mov
lock
mov
sub
inc
ja
push
stos
movsl
mov
pop
inc
sti
sbb
push
std
ljmp
int
jl
cmp
daa
adcb
cmpsb
pusha
addr16
jno
xor
cmp
cld
mov
mov
push
jecxz
sbb
aas
movsl
roll
lcall
cmp
lods
dec
stc
jae
adc
adc
sbb
pop
cmpsb
adc
cld
jecxz
imul
stc
pop
add
cwtl
dec
push
mov
imull
fbstp
int
test
push
pop
in
lcall
movsl
adc
sub
mov
mov
adc
popa
add
int
lds
xor
out
scas
jg
loopne
and
dec
movsb
jecxz
in
ja
push
ljmp
jg
pop
adc
dec
xor
fwait
shr
jnp
add
outsb
int3
lods
pop
ret
add
jmp
cld
nop
mov
cmp
mov
sti
mov
jg
mov
js
les
leave
pop
pop
mov
sbb
hlt
ret
mov
jp
test
push
ret
nop
fimuls
call
imul
int
sub
imul
shll
cmc
iret
or
mov
pop
and
push
xor
mov
push
je
add
inc
push
imul
mov
jno
jle
pusha
enter
leave
outsb
inc
xchg
or
ficoms
cwtl
cmpsb
cmp
repz
pop
outsb
cli
and
pop
fxch
lcall
fstpt
inc
dec
add
jne
dec
imul
and
or
dec
or
mov
cmp
ret
in
in
pop
inc
push
movsb
adc
std
in
pop
repz
inc
mov
add
cwtl
int
fisubs
scas
inc
out
xor
sbb
das
add
dec
fs
and
popl
jae
mov
jle
mov
dec
in
dec
rolb
xchg
imul
aaa
mov
lss
stos
aas
loop
nop
daa
pop
adc
push
ja
leave
prefetch
or
inc
test
dec
mov
std
mov
std
or
push
mov
xor
adc
paddusb
push
lret
fists
inc
stos
subb
pusha
add
push
push
pop
xor
mov
in
xchg
stos
push
adc
push
hlt
push
fistl
sub
xchg
push
cli
fistps
pop
cmp
lahf
or
dec
in
ss
push
push
js
push
popf
out
loop
jmp
or
dec
test
xlat
in
sub
jns
into
decl
pop
jmp
or
das
je
aam
cmp
jp
pop
xchg
fnstsw
nop
int
out
dec
adc
cmpsb
push
insb
les
xor
and
das
lds
sbb
mov
inc
mov
cmpsb
xchg
mov
insb
sbb
in
xchg
xchg
ljmp
pop
xor
sub
int
cmpsb
pop
rorl
cli
out
scas
addr16
imul
jp
sub
addps
push
clc
inc
xchg
jno
mov
dec
aas
mov
push
inc
and
adc
mov
dec
jnp
and
or
sbb
jae
lahf
loopne
push
out
cmp
inc
fsubrl
add
movsl
push
sti
dec
cmc
sub
dec
pop
insb
cwtl
push
out
lret
lock
mov
mov
or
int
stos
bound
mov
fistps
cmp
mov
fisubrs
in
pop
sbb
push
sbb
sub
stos
ss
jo
and
push
adc
lods
pop
out
xchg
and
out
cmpsb
or
rorl
adc
cmpsb
dec
sti
adc
pop
mov
push
lret
dec
push
bound
jmp
lret
mov
dec
or
cmpsb
iret
std
ss
fwait
shrl
dec
cwtl
lret
mov
sub
rorl
fistpl
ss
repz
adc
iret
or
gs
xchg
mov
cmp
dec
sti
adc
stc
bound
adc
lock
clc
adc
inc
pop
and
sub
lret
xchg
push
sti
repnz
fwait
mov
mov
in
fdivrl
sahf
ret
scas
les
mov
sub
jg
cli
and
out
mov
dec
out
mov
mov
and
fcomip
lcall
adc
pop
mov
xchg
and
dec
int3
pop
popa
push
or
mov
dec
dec
lret
and
adc
push
sub
mov
sbb
insl
lock
cmp
pop
sbb
lret
inc
xchg
xor
in
lcall
adc
jp
mov
into
fcomp
push
fidivs
mov
xlat
iret
in
lcall
sbbl
fnstenv
data16
insb
push
movsb
out
iret
clc
ret
pop
pop
notb
sub
ret
pop
fwait
negl
pop
enter
push
aam
pop
sbb
jne
push
sahf
or
inc
pop
push
add
scas
std
leave
bound
movsl
outsl
pushf
cli
inc
or
decb
jle
push
mov
outsl
testl
push
es
imul
jle
sarl
mov
outsl
mov
clc
daa
push
mov
mov
mov
or
bound
xor
sti
lcall
dec
in
mov
pop
fmuls
fcoml
aam
push
sbb
xchg
and
adc
pop
dec
dec
aad
xchg
in
xchg
pop
fsubr
sub
adc
je
out
sti
pop
xchg
ds
and
sbb
dec
lds
pop
nop
imul
lret
lret
lret
push
mov
pop
push
pop
sti
ljmp
or
jbe
dec
pop
or
insl
push
xchg
outsb
les
or
dec
mov
stc
sarl
push
inc
test
mov
in
int3
push
xor
jle
aas
jl
push
mov
rcll
jg
push
sub
jbe
lea
push
ret
xchg
int3
fcmove
call
or
cmp
cmp
pop
push
scas
or
pop
add
cwtl
inc
or
ds
lea
arpl
dec
int3
sub
add
pop
xlat
mov
xor
jnp
pop
push
repz
and
into
adc
mov
cmp
inc
xor
and
sar
jg
mov
arpl
aad
iret
sbb
xor
mov
jle
cmp
out
loope
movsl
stos
xchg
roll
cmp
sbbl
cs
daa
in
jp
jnp
jp
aas
mov
jp
inc
jns
dec
pop
pop
out
in
mov
enter
les
stos
sub
or
sbb
jp
sub
jae
dec
test
add
test
inc
scas
into
test
mov
test
fistpl
adc
jbe
push
adc
mov
mov
pushf
out
shll
dec
fwait
int
pop
or
jmp
inc
clc
pushf
dec
imul
sub
scas
test
in
xor
ficoms
push
lret
adc
and
cmpsb
cli
orb
adc
sbb
or
lds
lret
jo
ljmp
cmp
enter
adc
adc
cwtl
lods
js
mov
cmp
repz
repz
pop
pop
into
push
hlt
shlb
fmul
sub
sbb
add
lret
push
imul
mov
cmp
pop
and
mov
jb
call
outsl
push
mov
sti
aad
in
ljmp
mov
xlat
gs
out
jb
xor
repz
sbb
clc
mov
pop
repnz
pop
mov
fwait
jno
stos
push
pop
mov
mov
sbb
rcll
fwait
xor
xor
push
das
pop
adc
shlb
or
dec
rorl
or
lea
sbb
adc
inc
or
cli
xchg
cmp
enter
xor
sub
ljmp
hlt
pop
iret
faddl
int3
sub
jne
push
sub
pop
mov
xor
xchg
or
lods
inc
in
mov
or
lea
push
pop
push
lea
fbstp
decl
sub
dec
xchg
mov
insb
mov
sti
test
in
out
lea
ret
inc
sub
jns
and
fisttpll
or
mov
scas
loop
iret
sti
add
loope
out
push
fcmove
aaa
dec
insl
add
arpl
clc
cli
pop
idivb
fsubp
imul
push
mov
sbb
mov
les
rol
jo
cld
scas
ss
ret
mov
or
pusha
lds
ljmp
add
mov
cmc
push
cld
test
jge
mov
or
jmp
push
mov
mov
rcr
mov
sub
jmp
add
je
fs
pusha
dec
rol
mov
add
stc
jmp
xchg
jmp
jns
ds
pop
jns
dec
push
dec
mov
sbb
lret
mov
outsl
movl
jl
mov
fmulp
int3
addb
pop
lock
lods
xchg
fisttpll
xchg
adc
nop
lahf
arpl
mov
push
std
cmpsl
inc
jge
add
dec
add
test
adc
mov
mov
or
mov
mov
xor
push
mov
test
movsb
inc
rcl
xchg
sbb
add
cli
fildl
popf
int
mov
pop
sbb
sti
stc
dec
mov
in
enter
mov
mov
sbb
shrb
push
xlat
ljmp
hlt
mov
lock
leave
sbb
rcl
paddw
cmp
pop
aad
cld
mov
sysenter
pop
je
adc
cmp
lock
outsb
sub
mov
dec
mov
nop
outsb
jne
xlat
mov
popl
sbb
sbb
not
push
int
stos
dec
iret
cltd
xchg
push
in
pushf
decb
cli
addb
jge
mov
cltd
sub
insl
jb
arpl
mov
inc
aaa
mov
mov
in
pop
into
push
push
dec
bound
gs
adc
les
jbe
data16
and
pop
pop
aam
hlt
clc
outsb
cmp
xor
dec
call
daa
int
add
cli
add
jmp
je
add
inc
or
push
es
sbbl
mov
fisubl
rolb
sub
mov
push
add
pop
sbb
daa
mov
loopne
adc
add
ficomps
push
jmp
pop
and
push
js
lcall
cs
out
cmp
xor
or
xlat
out
mov
sbb
and
mov
fnstsw
xchg
out
mov
idivl
fildll
test
jp
les
cmc
setno
adc
out
fisttpl
sti
pop
sbb
push
push
test
jecxz
cli
jns
and
xor
out
mov
inc
addb
xchg
outsb
mulps
int
loop
pop
mov
adcb
push
clc
iret
dec
insb
jge
loope
ja
sti
dec
out
mov
outsb
cmpsb
adc
pop
inc
push
mov
rcr
cltd
dec
xchg
iret
flds
lahf
lret
out
fwait
nop
shrl
sbb
push
pop
mov
jnp
mov
mov
push
pop
cwtl
int
and
mov
dec
test
or
pop
or
jmp
arpl
lahf
movsl
mov
adc
iret
cli
mov
enter
dec
cltd
or
in
jmp
loopne
inc
cld
jmp
fwait
shll
and
sti
pop
cmp
into
pop
fsubrp
lret
adc
mov
mov
add
pop
negb
pop
clc
mov
sbb
xor
lahf
dec
mov
pop
push
test
aam
mov
imul
or
loop
mov
or
or
movsb
push
sbb
adc
push
sub
outsb
mov
push
test
pop
lea
mov
sbb
sbb
dec
bound
inc
pop
jle
shr
add
inc
fldl
adc
and
repnz
leave
loope
out
push
lret
dec
loop
popf
call
sub
pushf
int3
scas
mov
std
xchg
push
inc
xor
fisttpll
xor
in
in
dec
scas
into
cltd
aaa
test
jno
mov
nop
int3
xor
xchg
gs
iret
outsl
aaa
stc
mov
dec
loope
push
xchg
mov
jg
add
ret
out
xchg
insb
or
xchg
fcmovb
sbb
mov
lods
xchg
sbbl
out
sbb
xchg
dec
push
inc
scas
xchg
iret
sub
push
mov
mov
addr16
aas
daa
mov
loop
pop
mov
jmp
lea
out
into
sbb
test
jno
push
std
dec
repnz
rcrl
dec
notl
and
int
push
dec
leave
mov
insb
insb
lds
insl
iret
pop
adcb
push
sub
xlat
xchg
sti
ljmp
cmp
mov
fisubl
or
fcoml
cmc
jp
sub
add
ss
into
icebp
call
bound
mov
daa
scas
mov
int
mov
movsb
dec
insb
cmp
int
mov
lret
cld
mov
arpl
pop
mov
push
jecxz
mov
and
shrb
mov
sbb
add
dec
xchg
mov
dec
adc
jle
pop
mov
outsb
sub
sbb
mov
jno
xor
fmul
pop
push
sub
movb
aaa
mov
mov
mov
ret
fwait
mov
cmp
adc
fmull
out
mov
jbe
scas
mov
outsb
or
mov
popa
std
out
or
dec
or
lds
xor
dec
dec
add
or
jmp
ljmp
daa
les
cli
loopne
sbb
sub
ds
out
adc
movsl
cmp
inc
push
pop
and
sub
int
fstpl
mov
sti
lcall
les
mov
imul
repnz
cltd
inc
arpl
lods
adc
cmc
or
ds
lock
jb
xor
jbe
push
mov
addb
adc
shr
and
fisubrs
cmp
fs
push
test
lret
lods
subb
mov
jp
mov
lret
jle
dec
sub
jle
js
xchg
fnstcw
xor
addr16
cmpsl
push
pop
jle
or
loop
enter
das
mov
push
adc
popl
jecxz
push
leave
loopne
in
dec
add
jnp
std
or
lock
pop
ds
es
in
lea
iret
or
clc
ror
int3
call
and
out
fldt
mov
test
mov
mov
loop
daa
in
jge
mov
jb
and
out
xchg
out
ljmp
in
lcall
jb
and
or
test
iret
push
cwtl
cmp
inc
sub
fwait
out
leave
fistps
xchg
or
jge
mov
xor
adc
cmc
das
je
and
scas
ficompl
into
out
push
pop
fcoml
push
jmp
mov
push
lcall
enter
aad
ss
fiadds
and
sub
call
mov
inc
stos
add
sub
mov
fucomip
lods
repnz
push
out
sub
fsts
lret
dec
aas
pop
or
or
ret
scas
xor
test
pop
xchg
out
pop
sbb
or
pop
sbb
mov
push
sub
fdiv
or
pop
icebp
pushf
aas
pop
outsb
sub
mov
les
icebp
cmp
cmpb
cmp
sti
mov
lock
roll
sbb
jo
push
outsl
or
xchg
dec
jge
les
sub
jnp
xor
dec
ds
adc
stos
pop
lds
sbb
in
push
in
sub
scas
and
sub
push
mov
or
pop
icebp
fmull
xchg
pop
cmc
or
xchg
mov
inc
fdivrl
cmc
das
inc
dec
xchg
ficompl
out
aad
sub
sub
ficompl
adc
fmull
pop
clc
das
mov
subl
test
int
or
shl
push
movsl
mov
mov
push
pop
sub
outsb
or
cs
jecxz
into
adc
pop
repz
adc
ss
push
int
add
xor
in
mov
adc
clc
pop
xor
sub
outsb
dec
mov
pop
or
mov
loope
dec
scas
jge
pushf
xchg
mov
das
sbbl
push
sbb
ja
mov
dec
test
lahf
mov
sbb
sti
mov
idivb
andb
je
xor
push
or
mov
sub
leave
jl
std
and
jne
int3
dec
in
xlat
xchg
sbb
sbb
loope
jae
lret
pop
andl
stos
mov
fidivs
xchg
scas
fldt
mov
out
or
jno
stos
jg
dec
push
lcall
add
or
idivb
aam
push
fwait
cmp
das
insb
dec
jne
jge
dec
pop
xor
fistl
adc
mov
std
push
adc
pop
jne
int
data16
dec
xchg
xlat
dec
push
adc
dec
fisubl
mov
pop
add
clc
mov
into
fisttps
and
jg
pop
xor
or
adc
adc
xor
pop
fildl
cwtl
in
fucomip
xlat
lret
ss
and
jb
dec
bound
inc
out
ret
jmp
lds
xchg
sahf
fdivrs
adc
jns
hlt
jno
test
sbb
int3
dec
pop
dec
cltd
jb
pop
sbb
dec
mov
pop
add
dec
js
pushf
cmp
inc
xchg
in
bnd
aad
jecxz
lret
lods
aam
mov
ja
cmp
icebp
iret
pop
pop
aas
lods
cld
out
mov
jo
leave
mov
lret
and
stc
lods
out
jmp
iret
pop
sub
xlat
in
stos
pop
mov
sbb
mov
popa
cli
push
inc
mov
ret
mov
repnz
mov
leave
out
in
loop
dec
push
incl
pop
arpl
or
push
xor
fcmove
mov
outsb
test
mov
mov
cmc
in
lock
das
leave
push
sarb
nop
out
out
pop
cltd
jp
cmpsb
cltd
jmp
mov
lods
loopne
je
add
add
movsl
loope
pop
xor
and
pop
xor
xor
call
int
inc
xchg
xchg
push
adc
fnstsw
xchg
inc
imulb
lret
sub
sbb
jl
jp
repnz
xchg
lret
loope
lods
cltd
jnp
xchg
out
xchg
push
pushl
int
or
ss
pop
push
iret
movntps
divl
xchg
jbe
adc
in
xchg
fidivrl
dec
iret
sbb
or
addr16
daa
ret
adc
out
mov
mov
adcb
mov
pop
fsubl
push
lret
push
das
mov
pop
xchg
jb
lds
imul
ljmp
push
lock
mov
add
rcrl
roll
setle
ficoms
cmp
les
mov
test
aad
je
bound
xor
and
test
pop
mov
xchg
lret
inc
ds
pop
adc
cmp
xchg
adc
lods
jo
ficomps
stos
fcompl
mov
cmp
movsb
fmul
mov
or
sbb
cmp
popa
or
mov
and
xchg
jae
lret
and
out
in
adc
and
scas
jne
push
adc
or
out
lret
dec
std
add
and
or
push
lahf
rcrb
adc
pop
jmp
js
pop
add
xor
mov
jne
addb
shrl
adc
rcr
jg
in
mov
xchg
cmp
adc
jl
loopne
mov
in
pop
mov
adc
sbb
mov
push
jecxz
sahf
push
pop
lcall
or
pop
inc
test
jle
sbb
fistpl
xchg
pop
mov
pop
xor
add
call
outsb
cwtl
mov
jne
sahf
das
rolb
pop
adc
and
mov
mov
adc
and
or
cmc
mov
orl
push
bound
iret
and
dec
fnstenv
push
stc
jmp
aad
push
loope
pop
movsl
fstpl
test
fwait
shll
mov
fcomps
adc
mov
idiv
sub
or
fisttps
aas
or
pop
into
fistpl
and
inc
adc
mov
push
inc
mov
dec
push
pcmpeqw
rcrl
cs
push
or
and
std
jg
adc
popa
dec
mov
pop
fstpt
add
push
jbe
dec
std
and
in
pop
push
jp
inc
sbb
and
adc
aam
bound
insl
int
and
adc
cwtl
mov
dec
dec
sbb
adc
pop
sarl
mov
fidivrs
add
mov
lods
popf
jnp
adc
movsb
cmp
mov
scas
imul
mov
or
xor
push
or
adc
push
jge
dec
mov
push
or
fcoml
xchg
les
sbb
push
cmc
add
push
dec
or
adc
adc
out
dec
pop
cwtl
lahf
jo
push
cmc
pop
fidivrl
cmpsl
jecxz
sahf
mov
out
in
aad
sub
arpl
dec
and
mov
or
pop
pop
mov
shll
stos
adc
ds
push
mov
sub
pop
inc
mov
pushf
sarl
fnstenv
dec
cs
cld
pop
or
enter
inc
fildl
sti
fistpl
das
mov
cmp
fistpll
mov
call
fwait
or
cltd
push
sbb
andb
xchg
imul
test
and
fsubrl
push
push
mov
sub
bound
push
add
xchg
pop
clc
scas
or
outsl
push
icebp
cmp
xchg
clc
int3
add
mov
stos
ret
loopne
lock
cwtl
or
movsl
repz
push
push
jb
jp
pop
mov
lea
jg
jp
aam
mov
xor
fnstcw
cmp
xor
mov
fs
iret
aaa
imul
in
fisubs
aas
push
por
bound
sbb
jecxz
mov
mov
fisttps
arpl
outsb
hlt
cmp
sbb
loopne
jo
add
mov
adc
les
mov
push
test
iret
je
stos
loop
pop
pop
push
push
jb
ljmp
stos
mov
mov
inc
dec
dec
mov
sti
stos
or
popa
dec
jne
scas
sbb
enter
jl
sub
mulb
xchg
cld
jne
xchg
outsb
repz
cmp
outsb
mov
push
aam
ret
xchg
push
jmp
lock
loop
or
fisubs
pop
cmpsl
int3
sbb
sbb
ljmp
push
dec
adc
and
outsb
push
fists
inc
jmp
or
dec
pop
xchg
pop
cmp
mov
in
add
xchg
and
das
pushf
pop
lcall
sub
pop
clc
dec
lods
bound
cmp
or
pop
push
loope
bound
imul
pop
sbb
mov
pop
cs
pop
lcall
test
cmpsl
test
in
int3
push
add
adc
fistps
mov
adc
cmp
ss
dec
pop
cmp
mov
xor
shrl
xchg
mov
adc
fcmovnbe
iret
mov
sub
dec
pop
cmp
fbld
rclb
out
adc
repnz
xorl
fnstcw
dec
or
jb
jb
mov
jmp
add
adc
ljmp
and
das
fdivl
aam
xor
adc
pushf
test
jp
sti
pop
mov
pop
mov
mov
dec
in
lds
jae
cmp
xor
push
lods
sub
cmp
mov
mov
mov
filds
out
imul
add
in
xchg
push
jg
cs
outsl
cmc
stos
inc
mov
cmp
out
enter
popa
xor
rclb
push
dec
sub
insb
sbb
cld
iret
in
stos
sub
add
cmp
lahf
and
rorl
or
pop
loop
dec
into
mov
mov
sar
inc
fcomps
shrb
and
repz
inc
xor
shrb
xchg
sbb
push
mov
lret
xchg
push
outsl
xor
sti
or
shl
int3
jne
jae
in
jae
scas
jo,pn
sbb
je
mov
xor
cs
lea
leave
xor
cmp
jo
xor
in
sarl
pop
and
test
jmp
push
aam
pop
jb
mov
test
sbb
cmc
sub
addb
jae
mov
sti
push
xor
sbb
push
testb
ljmp
add
jns
cwtl
push
scas
js
dec
sti
xor
test
push
push
hlt
bound
dec
setno
sti
out
imul
loop
into
fcoms
loope
push
jge
test
jmp
push
or
adc
dec
pop
repnz
or
add
loop
leave
and
pop
cmp
das
idivl
rorl
ds
dec
inc
or
sub
lret
adc
xchg
data16
adc
mov
stc
adcb
jmp
decb
jne
jl
out
mov
add
push
dec
jmp
xlat
mov
xor
aas
jae
out
scas
pop
outsb
stos
push
adc
popa
xor
and
mov
dec
push
adc
adc
nop
cmp
push
xchg
mov
scas
stos
push
xchg
pop
in
pop
orl
les
in
mov
cltd
mov
xchg
push
negl
sub
fwait
ret
lods
adc
das
cmp
dec
xchg
dec
xchg
dec
sub
mov
arpl
pop
pop
push
leave
mov
push
imul
lock
ljmp
xlat
cli
fldl
mov
or
outsl
out
stos
xor
aad
mov
push
or
pop
jne
mov
cmp
daa
jae
pushf
adc
push
in
xchg
adc
repz
push
shrl
hlt
in
pop
fndisi(8087
add
in
decl
or
adc
sbb
jno
lahf
sbb
pop
xor
add
js
xor
jg
pop
cmp
or
inc
jae
push
jae
push
xorl
hlt
nop
cmp
adc
jns
sub
cmp
pushf
adc
cli
les
pop
xchg
pop
cmp
orb
adc
ficoms
lods
and
out
dec
push
jns
cmp
mov
jne
out
push
stos
repz
and
adc
sub
jmp
rep
xchg
mov
jg
xor
shlb
dec
sbb
adcl
add
fdivs
or
sbb
dec
pop
pop
jne
xlat
orb
cs
rorb
mov
inc
mulb
xor
clc
dec
xor
pop
mov
sarb
push
test
sbb
pop
sbb
arpl
xor
iret
sbb
or
arpl
sbb
out
cmp
xchg
repnz
sub
fcoml
push
cs
rcrl
mov
out
cmp
bound
bound
dec
push
cmp
leave
test
sbb
stos
pop
shrl
mov
sarb
std
jo
xor
add
sub
push
or
pop
dec
leave
aaa
call
cltd
mov
and
lret
scas
sti
fsubr
jecxz
hlt
or
stos
xchg
test
and
mov
push
dec
dec
jae
push
dec
pop
mov
shrl
scas
les
mov
push
ljmp
ret
out
jns
xorb
dec
sbb
xchg
lcall
lea
fimuls
xchg
test
filds
inc
adc
xor
out
inc
or
sti
hlt
jmp
shr
dec
packssdw
pop
mov
cmp
out
insl
push
aas
adc
jo
arpl
and
adc
jno
rcrl
loop
repnz
int3
stos
or
mov
in
push
imul
movsb
jmp
into
fimuls
divb
scas
pushf
and
jmp
xchg
pop
int3
xor
or
dec
jge
pop
rcrl
idivl
rcr
mov
imul
mov
sub
mov
cwtl
in
stos
mov
sti
pop
nop
aas
popa
cmp
cmpsl
sub
pop
inc
add
sub
scas
mov
into
scas
xor
nop
test
adc
rclb
pushf
loope
mov
cmpsl
loope
sbb
dec
mov
imul
xor
or
fdivrl
jno
jmp
movsb
jp
cli
inc
stos
frstpm(287
andl
inc
loop
fisubl
cmc
out
jbe
push
fs
jns
es
cltd
push
cmp
lock
push
dec
pop
fbld
ljmp
inc
push
rcrb
dec
pop
loop
mov
push
push
sbb
ficompl
adc
ret
cmp
cmp
int
aad
xchg
decl
mov
adc
mov
push
in
in
and
jb
insb
movsl
bound
push
jg
xchg
push
jmp
mov
outsl
jle
fstps
rclb
sahf
inc
mov
xor
scas
in
in
jecxz
lret
das
subl
pop
out
jae
jmp
push
dec
and
lret
mov
scas
mov
adc
jle
mov
dec
fisubs
mov
adc
push
xor
call
sbb
cmp
adc
inc
pop
mov
bound
push
pop
adc
andl
int
aaa
adc
dec
jle
popa
and
or
sahf
mov
pop
dec
sar
jbe
dec
scas
in
xchg
and
and
pop
stos
pop
jae
out
xchg
inc
out
test
imul
push
leave
into
repz
cmc
jge
cmp
jmp
cmp
pop
into
ror
jno
xor
out
mov
mov
mov
fisttpl
cmp
xlat
sub
push
cmc
imul
data16
add
mov
nop
dec
lahf
lods
ret
push
mov
xchg
pusha
lahf
in
rclb
pop
xchg
femms
mov
add
lods
lock
dec
or
sub
iret
dec
dec
pop
sub
repz
mov
cmc
mov
icebp
scas
and
inc
jmp
add
scas
in
push
adc
xchg
sti
adc
mov
mov
js
sarl
lret
jecxz
lret
cs
outsb
pop
div
mov
cmpsb
pop
push
addr16
inc
mov
dec
stos
adc
sahf
inc
sbb
sbb
bound
and
ret
inc
adc
movsb
cmp
fisubrl
mov
xchg
outsl
in
das
cld
or
iret
mov
ss
sbb
int
mov
leave
push
push
std
sti
mov
jns
pop
dec
pop
test
adc
ret
jecxz
daa
insl
mov
fsubr
dec
mov
rclb
loop
pop
pop
rcrb
in
jo
jo
inc
rorl
and
jbe
mov
mov
mov
in
outsb
jno
rolb
dec
and
and
add
mov
push
sbb
lock
bnd
test
sbb
shr
jmp
sbb
push
xchg
lahf
dec
in
adc
jl
mov
xchg
sar
dec
daa
pop
imul
out
mov
dec
das
aam
jo
mov
xlat
test
pop
repz
popa
add
not
pop
sub
jae
xor
push
xchg
fadd
xor
lret
dec
push
fldenv
cli
and
pop
int
push
dec
iret
fbld
sahf
cltd
adc
mov
inc
loop
mov
xor
out
jne
pop
shrl
rcpps
lcall
jmp
and
jne
pop
fwait
outsb
mov
stos
xor
cmp
pop
inc
shrb
pop
insl
std
push
add
mov
xchg
xchg
dec
stos
cmp
out
aad
pop
js
paddusb
xor
sub
data16
das
in
in
mov
jmp
jns
xor
cmp
pop
dec
iret
or
mov
dec
cmp
ja
add
cmc
fsubs
jle
push
mov
leave
mov
sub
jp
das
out
pushf
sbb
repnz
dec
dec
into
iret
pop
mov
jo
mov
mov
mov
insb
sahf
pop
gs
inc
jp
dec
pop
push
sbb
iret
mov
out
ret
dec
loope
jns
ret
xor
mov
mov
inc
hlt
jo
mov
cwtl
and
mov
push
nop
push
xchg
jmp
insl
pop
popf
dec
mov
lret
sub
leave
add
insl
mov
push
cmpsb
dec
pop
mov
pop
sbb
inc
repnz
sbb
adc
jg
into
mov
pop
pop
mov
pop
je
cmpb
push
lds
xchg
pop
in
adcl
push
fcompl
insl
push
addl
xor
out
out
clc
or
cmp
push
inc
add
or
fcomp
pop
sub
bound
sbb
in
push
cmp
inc
add
ljmp
dec
cmp
cmp
into
adcl
xchg
sub
lahf
dec
fistpl
lret
pop
add
fisttps
dec
push
loop
add
fildl
fstpl
sub
dec
rorl
mov
mov
add
stos
or
pop
fldt
push
push
leave
pop
mov
sahf
test
rorb
jnp
pop
jmp
loopne
loop
dec
jge
xor
mov
and
dec
sub
cwtl
int3
push
pop
push
hlt
sbb
ficomps
xchg
xchg
mov
sub
nop
dec
mov
push
or
ljmp
clc
mov
adc
or
pop
adc
sub
inc
push
push
jnp
fnstenv
lods
xchg
xchg
dec
xchg
mov
stos
dec
push
or
sbbb
and
xchg
sub
jae
sahf
jo
mov
add
or
fistl
pop
aam
mov
xlat
cmpsb
addl
lret
sbb
xchg
and
xchg
jbe
scas
pop
hlt
into
dec
jmp
sub
pop
push
mov
pop
mov
loopne
sbb
xor
data16
cltd
bound
mov
fistl
std
xor
push
mov
shlb
lcall
xlat
mov
add
faddl
cmp
dec
dec
mov
cmp
mov
add
rcrl
adc
lret
mov
xor
push
dec
sbb
and
and
jns
into
dec
sub
das
movsl
out
popa
xor
sub
lock
scas
into
dec
push
mov
fstpl
jg
inc
push
push
in
adc
into
dec
and
mov
int3
pop
in
xor
dec
mov
lret
lods
sahf
cltd
adc
xor
pop
aas
sbb
sahf
cmovg
pop
adc
test
pop
lock
dec
add
sbb
loope
pop
je
and
or
das
xlat
or
jns
and
mov
aas
loop
into
mov
dec
loope
cmp
in
fldcw
or
sbb
and
dec
adc
test
push
cmpsl
lods
aad
mov
jg
cmpsb
inc
sbb
inc
mov
mov
fwait
dec
jp
in
iret
loope
call
mov
adc
add
mov
xchg
cmpsl
mov
jle
dec
into
push
inc
aam
stos
or
jo
js
adc
pop
or
repz
shr
lret
shll
mov
mov
arpl
mov
sub
or
sub
xor
push
sbb
clc
adc
cmpsb
adc
loopne
mov
or
and
push
adc
fstps
sub
jo
or
sbb
sub
stos
addr16
into
fidivrs
loop
jp
xor
push
fcomip
rcrl
push
mov
stc
mov
pop
sbb
jb
dec
or
sub
sub
mov
cli
pusha
inc
jle
xlat
and
in
pop
ja
scas
sbb
loop
sbb
dec
sbb
jne
push
into
adc
lahf
fcoml
shr
test
sub
mov
data16
mov
push
inc
ret
sarb
pop
and
push
sub
adc
xchg
sti
dec
popf
mov
iret
push
cmp
sbb
or
rcrl
cmpsb
push
ds
adc
fisubrl
sub
cmp
jecxz
adc
outsb
in
bound
inc
in
cmp
lcall
lods
jecxz
pop
cld
jb
mov
jne
push
int3
sbb
mov
or
fisttpl
cmc
popa
sbb
add
into
and
push
jmp
mov
dec
mov
icebp
repnz
inc
inc
arpl
mov
fwait
hlt
repnz
repnz
bound
daa
in
int3
lret
mov
jge
inc
fcmovbe
dec
out
and
pop
push
fidivl
pop
lret
iret
ljmp
mov
stos
dec
ret
dec
mov
fmulp
jmp
das
into
lock
and
xchg
enter
shlb
cmpsl
sbb
iret
fldl2t
fstps
test
dec
mov
flds
aam
push
push
out
fcom
lret
mov
bound
cmpsl
lcall
dec
lret
push
aad
fiaddl
jl
clc
cmp
stos
pop
lock
addr16
and
daa
call
and
cli
jne
pop
fistps
mov
push
push
int3
lcall
jb
mov
and
adc
scas
pop
push
dec
sub
cmc
in
fstps
test
pop
lea
lcall
pop
scas
jo
pusha
pop
adc
outsl
sbb
fwait
push
mov
or
cmp
ljmp
data16
stos
mov
out
in
imul
jns
add
popa
mov
jb
mov
cmp
stos
xchg
adc
outsb
imul
jle
cmpsb
push
dec
cmpsb
fsubs
mov
add
ret
es
mov
push
push
push
iret
dec
pop
cmp
repnz
fcompl
inc
jbe
out
out
insb
push
mov
jle
iret
scas
hlt
call
xchg
fdivl
ficoml
fimull
push
push
xchg
daa
mov
inc
adc
pop
dec
add
xor
mov
es
cmp
int
mov
xchg
or
into
repz
mov
mov
ljmp
cmc
sub
cmp
or
in
jle
mov
iret
movsl
daa
fistpll
xchg
fiaddl
dec
adc
popf
mov
orb
sar
pop
xorb
xor
rcrb
mov
ds
outsl
fdiv
ficoms
add
mov
insl
push
popa
out
js
stc
repz
sti
pop
sbb
push
adc
sbb
pop
cmp
cmp
jecxz
repnz
mov
push
out
imul
push
imul
add
call
cld
stos
jne
mov
repz
push
scas
in
ret
mov
bound
icebp
xchg
lods
lret
pop
and
das
adc
mov
orb
lea
and
lods
into
pop
sub
xor
or
or
cmc
push
sub
sub
pop
int3
add
scas
mov
jmp
inc
repnz
jecxz
fbld
shrb
hlt
xchg
adc
sarb
push
sub
cmpl
mov
dec
daa
dec
lea
jg
sub
jmp
std
cmp
adc
jne
xchg
insb
inc
iret
jb
cmp
in
jl
aaa
loope
in
sti
std
leave
sbb
dec
add
iret
xchg
data16
xchg
int
faddl
pop
mov
fdivrl
loop
pop
popf
mov
mov
dec
mov
fmulp
adc
mov
push
push
mov
arpl
jecxz
fisubrl
js
push
xor
add
ljmp
addl
jle
ficoml
shrl
lret
mov
dec
neg
pop
and
in
mov
es
dec
pop
lret
push
out
cmc
sub
scas
xor
fs
mov
push
out
sbb
or
les
daa
push
and
jne
and
stos
dec
lcall
fdivrp
in
sub
cld
xor
cmp
in
push
fwait
pop
add
nop
pop
jb
mov
inc
aas
dec
aaa
inc
outsl
std
pop
mov
sbb
adc
or
test
stc
jae
mov
es
cmpsb
mov
pop
cmp
mov
adc
and
xor
mov
jo
mov
scas
and
lcall
scas
clc
cli
jmp
aas
xchg
test
ljmp
cld
jle
jne
test
dec
pop
cmp
mov
ret
inc
and
lods
std
into
aam
in
gs
add
lcall
pop
sub
cmp
pop
std
jbe
notl
dec
dec
adc
stc
cmp
test
or
popf
or
sti
ss
leave
jmp
xchg
sar
and
xchg
xchg
fisttpll
idivl
jle
lahf
fdivrs
fcomps
pop
pushf
sti
xchg
pop
inc
popf
rolb
or
enter
jg
loope
push
xor
in
es
and
test
cli
aad
push
mov
jne
or
into
add
mov
aam
dec
aam
add
cli
add
roll
mov
cs
insb
mov
cs
ficoms
sub
fistps
push
pop
ficomps
mov
iret
push
and
in
rolb
jbe
lcall
fimuls
outsl
mov
dec
into
test
cwtl
lea
leave
cmc
loop
lret
or
rorb
mov
lods
inc
pushf
sub
insb
pop
mov
push
cmpsl
pusha
and
insb
lea
fisubrl
dec
call
push
scas
mov
push
shr
mov
and
xchg
ljmp
aas
aas
mov
and
stc
mov
imul
inc
or
jge
decl
or
xor
xchg
int
pop
mov
push
cmp
push
mov
mov
dec
adc
lea
adc
jle
enter
adc
dec
clc
mov
popf
xchg
push
sbb
mov
jmp
lcall
mov
jmp
pop
cld
ss
fldl
fnstenv
mov
mov
test
inc
mov
cmp
inc
cmp
mov
imul
jl
lea
insb
dec
sub
sbb
pop
aas
jns
add
js
jb
push
loop
xchg
into
lcall
cmp
aam
push
sti
outsl
sbb
mov
repz
sahf
cld
push
adc
xchg
mov
mov
cmp
mov
jo
pop
cwtl
int3
sti
fcomps
inc
cs
sbb
bound
or
mov
pop
arpl
or
nop
xor
mov
mov
jp
mov
int
cltd
scas
dec
cmp
mov
and
lea
mov
pushf
fisubrl
cltd
lds
xchg
sbb
pop
out
mov
xchg
inc
cmp
mov
pop
into
jbe
cmp
sub
jecxz
and
outsb
testb
aas
pop
mov
sarb
lea
or
cmp
addr16
add
out
jo
or
lret
jno
sub
push
in
movd
sub
push
adc
mov
fidivrs
push
addr16
jge
mov
dec
inc
or
je
push
jnp
es
jg
cmp
rcrl
idivb
stos
pop
mov
jb
xlat
jg
pushf
jns
out
jl
adc
cmc
into
data16
lret
int
ficoms
fistps
dec
clc
iret
mov
scas
cmp
int3
ret
iret
bound
imull
mov
jnp
cmp
or
mov
out
clc
or
and
lcall
add
in
or
cld
mov
shlb
lret
push
pop
pop
xchg
aam
sbb
out
mov
or
adc
jns
dec
imull
mov
gs
pop
fst
outsb
into
and
xchg
sbb
cmpsl
adc
mov
inc
movsl
rorl
adc
cwtl
aad
adc
sti
dec
push
stos
shl
bound
mulb
mov
mov
sbb
out
or
adc
dec
and
cwtl
mov
push
adc
dec
inc
mov
push
test
mov
insb
in
inc
adc
stos
dec
lods
in
das
shlb
cmpsb
jmp
lcall
pop
in
pop
jmp
jge
sti
sub
cmc
pop
cmp
aam
xchg
mov
in
xchg
or
mov
xor
mov
test
cld
or
mov
mov
dec
jnp
das
push
and
or
inc
stc
imul
cmovp
fbstp
sbb
push
dec
mov
adc
add
lret
dec
inc
cli
ret
jge
outsl
insl
es
or
mov
stc
sub
negb
dec
pop
stos
dec
pop
jecxz
in
insl
lds
or
ljmp
sub
sbb
pop
cmp
pop
les
lret
bound
sbb
mov
cmc
ljmp
iret
jp
adc
adc
push
enter
dec
inc
pop
scas
aas
xchg
cmp
pop
std
mull
jecxz
dec
jmp
pop
pusha
sti
xor
outsb
pop
xchg
lock
push
lret
and
test
sbb
pop
pop
push
rcrl
lock
dec
rclb
or
into
or
outsl
dec
cmpb
lret
dec
mov
cmpsl
xor
dec
in
test
pop
dec
cmp
push
loope
lcall
int3
std
or
lret
adc
mov
leave
mov
in
pop
sbb
sub
ljmp
inc
push
xchg
repz
js
int
mov
out
cli
or
adc
stos
jmp
ds
imul
mov
movsb
sbb
and
in
aam
cmp
cmp
mov
insb
mov
stos
lahf
arpl
sbb
mov
bound
mov
push
mov
bound
mov
push
inc
add
mov
out
insb
or
sub
fcoms
mov
adc
mov
es
lea
sub
testl
ss
fcmovu
mov
jmpw
cld
push
das
mov
sub
gs
add
test
int3
mov
dec
lret
int3
mov
dec
cwtl
in
out
and
or
testb
lock
aas
xchg
dec
sub
adc
sarb
les
mov
jo
pop
cmp
daa
imul
mov
cld
and
xor
and
pop
pop
dec
shrb
sub
pop
pop
adc
xchg
rorb
sub
or
movsb
sbb
test
je
or
es
pop
iret
popa
push
and
mov
adc
push
hlt
sbb
inc
xor
jle
add
addr16
mov
shlb
pop
sbb
dec
jb
jecxz
incl
frstor
faddl
aaa
sbb
jecxz
and
inc
movsl
add
sub
into
cmp
icebp
inc
imul
aad
mov
decb
sbb
cmc
push
jge
xchg
xor
sub
pushl
adc
mov
inc
adc
outsb
dec
or
in
xchg
stc
imul
int
and
dec
fidivs
mov
jle
xor
xchg
das
into
jb
addr16
jno
lret
jge
and
push
mov
pop
popa
mov
mov
aas
xchg
stc
inc
fistps
mov
adc
adc
mov
mov
add
mov
std
cmp
inc
data16
je
dec
pop
or
cmc
or
stos
cli
jbe
cmpsb
loope
cli
shlb
pop
jbe
icebp
adc
ficoms
les
cmp
outsl
pop
add
stos
xor
sub
jae
mov
loop
pusha
inc
movsl
clc
hlt
lahf
cmpsl
mov
sbb
fimuls
pop
sub
bound
jb
sbb
pop
ret
push
push
mov
mov
lahf
mov
sbb
mov
mov
xlat
xor
sub
flds
cs
xchg
cmovae
hlt
out
cmpsl
popa
ja
push
lret
push
dec
fs
lock
adc
rcrl
and
rcll
cmp
out
mov
mov
pop
xchg
mov
mov
int
rcrl
inc
jb
rol
daa
dec
xor
and
dec
rclb
aam
cmc
jns
dec
mov
sbb
add
dec
aam
pop
lret
and
stos
out
push
bound
mov
fmull
push
lret
jl
sbb
mov
jbe
icebp
loopne
mov
shrl
aam
arpl
int3
pop
stc
int3
mov
push
mov
mov
jae
rcl
pop
shl
cmp
outsb
push
arpl
pop
repnz
lea
fists
aaa
jecxz
pop
jno
stos
scas
sbb
loope
les
popa
aas
sahf
imul
xchg
sahf
mov
sub
imul
inc
or
pop
fmuls
orb
xlat
mov
inc
sub
imul
dec
out
jl
lahf
into
jne
test
jmp
sub
xchg
fcoml
lret
hlt
sub
scas
or
into
push
mov
mov
xor
mov
push
or
xlat
sarl
adc
sti
pop
cmp
cmp
dec
mov
std
pop
mov
lds
scas
mov
mov
call
mov
dec
in
push
push
fcmovne
and
out
insb
push
and
mov
arpl
dec
fldcw
dec
in
in
and
and
fcomps
clc
daa
mov
fistps
dec
iret
jg
and
mov
xchg
push
mov
into
add
pushf
int
or
jb
xor
dec
fcmovne
pop
mov
xchg
outsl
enter
mov
int3
icebp
std
mov
ljmp
adc
push
icebp
sbbb
push
dec
dec
lods
cli
and
push
mov
mov
inc
cmp
pop
push
adc
pop
cmp
subb
xor
loop
int3
and
das
out
adc
adc
movsb
cmovg
dec
arpl
jae
pop
lds
sbb
mov
adc
shl
push
pop
xor
sarl
jg
stc
pop
pop
mov
cwtl
iret
push
js
jmp
stc
rcr
add
and
fisubrs
dec
movsl
das
pop
sbb
cmc
fwait
int
sub
iret
bound
dec
rcl
xor
fcomps
xor
rcr
sub
pop
int
shll
cltd
fmul
add
dec
push
cmp
jge
shll
pushf
dec
push
mov
and
dec
lcall
jp
rorl
pop
fidivrl
or
mov
adc
scas
mov
xchg
leave
jg
hlt
add
adc
adc
jne
sub
fs
lods
cwtl
mov
sub
addr16
stos
xchg
xor
sub
sub
xor
and
mov
cmp
cmc
adc
dec
lahf
inc
in
int3
mov
mov
imul
mov
mov
repnz
jl
jo
addr16
call
mov
jg
pslld
lret
and
popf
out
ljmp
sbb
cltd
fucomip
in
mov
mov
cmp
mov
jnp
xchg
mov
pop
mov
inc
pop
imul
hlt
mov
push
push
outsb
out
xchg
data16
mov
mov
gs
cwtl
test
pushf
push
fiaddl
mov
pop
inc
lret
adc
arpl
mov
bound
add
add
mov
test
scas
or
scas
lods
mov
cmp
add
pop
dec
into
mov
pusha
mov
bound
aad
xchg
pcmpgtw
sub
and
bound
xlat
or
aas
jne
aaa
daa
ss
test
scas
mov
mov
jl
lods
adc
int
and
mov
xor
rcl
mov
lods
cli
imulb
jecxz
or
mov
int
inc
or
rcrl
mov
test
lds
xor
dec
pop
test
int3
into
ss
pusha
in
lods
or
dec
push
pusha
adc
inc
xchg
mov
push
aaa
jne
jnp
dec
sbb
in
fcmovnbe
int
int3
rclb
aam
cli
flds
cli
jnp
jge
ficoms
xlat
aas
xchg
out
iret
mov
lret
test
popf
lods
or
dec
out
cli
pop
push
enter
aad
mov
in
bound
in
dec
movsl
fsub
mov
dec
aaa
or
in
pop
es
les
int3
pop
add
dec
jo
xchg
inc
mov
inc
pop
mov
arpl
fimull
addl
jle
jmp
fs
mov
mov
iret
mov
mov
adc
ljmp
dec
aas
xchg
cmpsl
mov
inc
fmull
dec
add
dec
push
stos
push
push
std
lock
mov
jae
cmpsl
ss
mov
fidivrs
int
into
push
dec
adc
push
xchg
dec
cwtl
lock
lret
mov
jge
inc
push
aad
mov
bound
std
rol
dec
mov
push
dec
cmp
dec
adc
xor
out
mov
imul
lahf
bound
lods
jo
ds
movb
dec
add
jns
adc
stos
pop
inc
cwtl
xchg
sub
adc
mov
scas
mov
jo
or
push
mov
mov
lret
ss
cmp
shl
movsb
dec
sbb
xchg
cli
mov
dec
cmp
cmp
lret
nop
jb
into
lock
jmp
pusha
push
ret
bound
cltd
jge
repz
icebp
icebp
inc
jmp
ds
stos
rorl
inc
and
push
pop
mov
pop
aaa
test
fcomps
add
cmp
inc
inc
add
cld
divb
push
adc
xor
xchg
xchg
push
pop
dec
fcomps
mov
cld
jb
mov
sbb
loop
xchg
mov
into
in
mov
addr16
mov
inc
dec
sub
or
jne
into
ljmp
cwtl
sbb
rolb
pop
data16
sbb
or
les
pop
mov
rcrb
mov
mov
push
cmp
mov
shr
cmp
jmp
jle
add
shrl
outsb
shll
mov
push
push
cmp
xchg
cs
insb
std
cmpsb
mov
or
push
insb
call
push
push
sub
push
shlb
test
test
push
inc
pushf
aas
sahf
or
cmp
mov
sti
push
loop
inc
push
xlat
gs
mov
test
loopne,pn
mov
dec
xor
dec
cmp
or
adc
sbb
jp
mov
pop
ljmp
jmp
sbb
addr16
cmp
sbbb
fsubl
call
outsl
clc
mov
cmovs
incl
pop
scas
jnp
and
cmp
pop
xchg
ljmp
jg
outsb
inc
sbb
lock
popa
test
cmc
mov
out
jp
xor
pop
cmp
fstl
bound
jp
push
jecxz
into
xor
orb
sbb
test
subl
cmpsl
sub
pop
sbb
icebp
dec
sbb
pop
or
mov
cmp
or
repz
xchg
and
xchg
test
jnp
mov
sbb
stos
pop
into
and
dec
cmp
inc
pushf
loop
jb
repnz
pop
cmp
movsb
pushf
jno
jno
ret
iret
or
push
sahf
dec
cltd
insb
stos
cwtl
pop
adc
jmp
inc
cwtl
repnz
and
add
mov
lds
xlat
push
mov
pop
or
repnz
jbe
mov
push
sbb
sti
sbbb
ss
int
xor
push
jo
ljmp
jge
fidivrl
sub
pop
adc
stc
sbb
mov
mov
pop
xchg
jg
imul
lret
imul
add
sub
out
inc
test
pop
or
lret
pop
pop
push
into
shlb
or
mov
mov
aaa
pop
or
into
push
and
imul
xor
rcrl
mov
cmp
imul
ror
and
test
pop
inc
je
sti
das
loop
cmp
mov
stos
push
fldcw
and
into
pop
add
aas
xor
push
push
cs
jbe
xchg
and
mov
adc
sub
into
test
add
push
push
jo,pt
jg
ds
pushf
lock
in
in
ljmp
mov
cs
cmc
mov
mov
sub
jb
cld
push
lahf
push
jp
xchg
push
sbb
inc
outsb
dec
dec
std
sbb
pop
mov
pop
in
sub
pushw
sbb
outsb
push
cs
add
std
sahf
xchg
enter
dec
pop
std
and
sub
dec
push
and
lods
cmp
pop
out
cmp
jl
ret
xchg
jbe
mov
add
aaa
push
push
jecxz
js
lcall
insb
sbb
push
push
mov
xchg
xchg
out
jge
mov
adc
cld
mov
ss
fidivrs
mov
jge
into
and
aas
out
xchg
lret
insb
jo
sbb
push
shrb
ss
pop
je
dec
addb
add
into
sbb
sbb
mov
insl
adc
in
rorl
jo
cmpsl
mov
aas
jle
das
sti
loop
sahf
sbb
mov
bound
int3
test
movsb
mov
gs
push
pop
cmp
pop
mov
in
in
or
int
sub
aaa
ffreep
ss
inc
rol
mov
imul
lock
adc
bnd
pop
sbb
sbb
scas
shlb
adc
repz
sbb
cwtl
and
jl
sbb
mov
push
inc
pop
rcr
imul
fisttpll
sahf
jecxz
jo
add
sbb
jnp
repnz
dec
sbb
xor
pop
int3
pop
or
in
aas
scas
mov
cmp
push
and
lcall
inc
cmp
insl
stos
lret
aam
scas
adc
ss
and
adc
ficompl
adc
mov
adc
sbb
cmpsb
push
repz
pushf
jb
and
into
repz
push
cli
pop
out
adc
jnp
gs
pop
push
imul
adc
sbb
int3
int
adc
dec
pop
int
lret
pop
push
dec
aam
int3
mov
push
and
xchg
jle
pop
mov
and
cmp
rorb
cltd
shl
cwtl
cmp
ficoml
xchg
or
xlat
leave
cmp
in
mov
jge
cmp
push
ret
lcall
bnd
shrl
xchg
xor
jl
push
into
or
cmp
sub
sbb
pushf
push
add
jmp
mov
jp
xchg
add
bound
adc
and
or
pop
xchg
iret
fwait
repz
push
sbb
xchg
and
scas
sub
cmp
bswap
mov
pop
into
add
insl
out
jno,pn
dec
mov
addb
negl
lods
stos
sbb
cmc
bound
jge
out
add
aad
clc
xor
and
or
and
mov
mov
dec
ret
fldl
cmp
jle
in
cmpsb
dec
lahf
loope
rcll
cmpsb
lret
sti
lock
add
push
es
lods
ss
adc
or
xchg
bound
lret
pop
lods
outsl
call
sarl
or
cltd
xchg
iret
or
inc
sub
dec
out
in
ljmp
shlb
call
pop
add
pop
push
pop
xor
out
fldt
hlt
inc
ljmp
lods
addr16
insl
jns
loopne
insb
sub
leave
adc
fisubl
rcrb
mov
xchg
les
out
dec
mov
ror
dec
ljmp
dec
rclb
rorb
cmp
enter
mov
pop
scas
out
pop
fidivs
mov
xlat
mov
loope
fsubp
sub
mov
cmc
push
push
xlat
rorl
mov
cmc
les
push
fnstcw
es
addb
adc
gs
lret
adcl
jg
fucomp
push
ss
movq
push
pushf
xchg
stc
sbb
and
cmp
dec
sbb
mov
mov
nop
stc
inc
push
push
shl
inc
push
jmp
xor
pop
xchg
adc
push
and
xorb
jno
fstpt
pop
sar
aaa
jbe
decl
adc
dec
and
mov
mov
mov
xchg
cld
or
jp
jp
pop
push
mov
mov
negb
bound
inc
mov
push
das
jl
jo
fstps
out
inc
jl
sbb
adc
lret
push
mov
sbb
dec
dec
ret
lahf
pop
pop
mov
sbb
dec
sbb
xor
inc
push
and
fwait
push
daa
loope
inc
into
adc
jle
jns
stos
insb
loopne
sbb
fwait
push
mov
and
in
shr
mov
daa
into
jle
inc
fmuls
mov
dec
adc
imul
or
lods
stos
cli
xchg
pop
and
add
loop
loope
jg
icebp
loop
xchg
adc
push
aas
xchg
push
push
mov
data16
outsl
das
mov
pop
lods
mov
inc
xchg
sbb
out
lods
sub
pop
push
in
cmp
jnp
inc
mov
jnp
sbb
lahf
xchg
repz
paddusw
cwtl
pop
cmp
iret
push
test
sub
pop
push
mov
into
es
aam
ret
ss
movsl
sub
mov
int
dec
xor
ficoml
push
and
mov
cld
aad
into
sbb
lea
ret
test
and
sbb
in
xlat
jg
lret
repnz
aad
dec
lods
mov
mov
les
scas
adc
shll
mov
jg
mov
add
add
pop
cltd
jge
push
mov
cmpsb
lcall
cmp
dec
testl
int
data16
push
scas
into
pop
adc
loop
call
ficomps
test
mov
out
push
iret
das
xor
fcmovnu
in
gs
mov
fdiv
rorl
rorb
shll
fbld
cmp
das
adc
sub
sbb
adc
jmp
scas
mov
sbb
dec
or
xor
sub
ljmp
inc
cmp
cmp
jecxz
mov
dec
jecxz
fdiv
inc
mov
fcmovbe
or
dec
out
mov
push
jne
or
fidivl
xor
xchg
imul
lods
ret
addr16
ror
aas
pop
lods
and
roll
push
punpckhbw
mov
rcrl
push
mov
pop
fidivrl
lcall
arpl
adc
dec
bound
and
es
scas
cmp
js
and
push
cs
sub
cmpsl
dec
jle
fistl
xchg
in
pop
push
sbb
lret
xchg
pop
dec
mov
in
int3
mov
stos
xor
push
stos
xor
pop
adc
mov
hlt
dec
test
movsb
rclb
in
subb
loope
aas
jge
leave
push
xlat
nop
inc
popa
pop
pop
test
stc
bound
sahf
or
stos
or
filds
and
out
fsubp
insb
das
xor
lea
jp
enter
mov
jp
mov
int3
mov
xchg
ror
jge
xchg
popa
xor
test
mov
mov
lods
pop
stos
in
fbstp
pop
negb
dec
push
dec
ret
repz
dec
or
shlb
and
adc
mov
dec
cld
scas
shrb
repz
sbb
in
scas
nop
mov
pop
mov
dec
xchg
loop
push
or
jae
inc
je
das
jmp
lret
mov
in
jns
add
enter
aad
popa
lds
testb
pop
imul
inc
pop
repz
addps
outsl
add
mov
bound
iret
lret
lret
inc
push
mov
mov
ss
lahf
jg
movsb
adc
fsubrl
xchg
jp
add
std
lods
iret
inc
inc
mov
or
outsb
inc
mov
enter
and
dec
mov
cwtl
sub
hlt
adc
pop
scas
outsb
insb
bound
adc
inc
stc
imul
mov
mov
ljmp
and
push
jecxz
xchg
adc
popa
pop
cmp
push
out
xor
cld
cs
fidivs
inc
pusha
xor
pushf
jge
dec
inc
and
adc
addl
and
xor
cmp
mov
push
inc
pop
in
orl
into
es
adc
pop
repnz
testl
sti
dec
mov
stos
js
sbb
orb
push
sbb
icebp
loope
mov
stos
stos
adc
xchg
mov
adc
cmp
or
pop
pop
dec
jle
sub
insl
iret
ret
xchg
xchg
inc
push
pusha
dec
mov
aam
insb
xor
lods
and
in
fistpl
mov
mull
jge
mov
add
mov
gs
mov
cmp
push
cmp
addr16
fiadds
dec
sub
or
jp
nopl
push
pop
add
lret
divb
repz
popa
add
je
ljmp
and
shll
iret
mov
call
int3
push
je
dec
adcl
mov
fistpll
insb
mov
outsl
inc
lds
mov
inc
jp
pop
dec
rcrl
mov
add
lcall
mov
xchg
movsb
mov
sub
lcall
aam
push
in
sbb
std
fwait
into
mov
jg
or
dec
cli
dec
adc
dec
nop
dec
test
mov
inc
xchg
loope
fmull
xor
mov
mov
xlat
std
jecxz
adc
xchg
mov
int3
gs
cmpsb
cmc
repz
mov
jge
shll
hlt
cmp
inc
enter
push
loope
cmp
and
scas
jecxz
fsubrl
outsb
xor
lcall
sub
sub
in
xor
cmpl
pop
outsb
jns
int
call
cmpsb
inc
insb
mov
push
shlb
es
mov
lahf
frstor
jno
out
cltd
clc
testb
mov
pop
jae
rcr
add
fmull
dec
lock
gs
mov
cmp
ljmp
cmp
dec
ja
ficoms
shlb
pop
push
mov
xor
pop
lret
dec
sbb
pop
loop
call
and
pop
cmp
insb
jbe
add
je
gs
dec
xchg
mov
ret
inc
pop
push
rcll
mov
adc
adc
mov
gs
mov
and
jmp
lret
test
andl
or
jmp
in
rcrl
in
push
mov
dec
jl,pn
fs
dec
push
sbb
shlb
jge
int3
std
call
push
test
or
testl
pop
cmovp
push
out
sub
dec
hlt
mov
push
cmp
stos
and
loopne
ljmp
loop
mov
mov
icebp
imul
ljmp
testb
test
xchg
add
sbb
sub
and
jno
sub
loope
sarb
data16
or
ret
pop
xchg
push
repnz
push
pop
xchg
push
iret
nop
call
call
cltd
and
jne
push
in
sub
sub
mov
mov
out
cld
js
jmp
lret
test
or
mov
or
ret
in
mov
fimull
xchg
test
jae
dec
aad
addr16
sbb
je
add
sub
pop
inc
mov
dec
mov
pop
sbb
xor
mov
xchg
mov
cmp
jp
mov
outsb
or
mov
test
cli
scas
mov
paddd
dec
mov
adc
mov
shlb
popf
out
lret
cltd
mov
dec
arpl
pop
fstpt
mov
sub
scas
fsubrs
sbb
cmpsl
dec
mov
dec
pop
pop
adcb
mov
adc
jne
rorl
bound
jl
leave
and
test
ljmp
push
push
addr16
popa
sbb
aas
jne
jl
dec
ret
rcrb
jno
call
in
shl
dec
out
adc
aaa
sbb
mov
dec
mov
fisttpll
scas
push
or
sbb
ss
inc
test
fsubrp
jmp
les
and
cs
sbb
sub
dec
bound
pop
aas
aam
dec
call
pop
pop
sbb
dec
push
test
sahf
dec
xchg
mov
pop
enter
mov
and
roll
push
cmpsl
push
loopne
lahf
bound
mov
cs
aad
fildll
jno
mov
jb
and
iret
outsb
or
cmp
jbe
push
adc
cs
scas
jge
and
cmp
stos
pop
sbb
stc
test
dec
fcomi
nop
jp
and
xor
fistpll
dec
in
idivb
rcll
lcall
icebp
sub
or
mov
int3
lds
jns
mov
cmp
pop
daa
mov
mov
mov
xor
fnstsw
or
shl
rorl
das
test
lods
int3
notb
lahf
popa
cltd
and
cmp
loopne
or
int3
je
and
inc
into
add
insl
test
cld
mov
pop
aas
cld
and
outsb
mov
fidivs
and
jge
push
push
mov
cmpb
mov
testl
fidivl
hlt
les
pop
das
or
mov
lods
mov
mov
add
aaa
xor
add
adc
inc
rolb
cli
pop
sub
adc
aam
arpl
icebp
push
pop
mov
hlt
xchg
lret
lock
and
dec
dec
fcmovnu
in
dec
cmp
xchg
cmp
and
dec
dec
or
mov
mov
cmc
adc
add
push
jle
cmpsl
inc
and
push
sub
out
insb
loope
dec
cmp
into
dec
dec
mov
xchg
rcll
fdivrs
adc
test
jbe
stos
dec
pop
fnsave
or
cmp
outsl
arpl
arpl
adc
pop
push
mov
or
push
cmp
mov
lcall
or
test
mov
outsb
mov
in
out
nopl
xchg
out
xor
cmp
cmp
or
dec
and
flds
jl
jge
adc
dec
out
xor
push
dec
cmp
imul
sub
or
mov
pop
push
jp
pop
mov
insl
mov
jmp
xlat
sbb
call
scas
or
pop
jmp
into
add
rclb
adc
cmp
dec
ss
in
add
mov
movsb
pusha
fidivrl
iret
movl
pop
enter
scas
lret
bndstx
sub
loope
das
inc
fidivrl
dec
sub
inc
dec
mov
and
xchg
sbb
jecxz
lock
outsb
test
add
cmp
mov
insl
int3
inc
into
sbb
imul
sbb
jmp
mov
or
push
out
and
les
adc
das
pop
push
pop
or
in
adc
sub
mov
push
dec
pop
jecxz
ret
xor
fistpll
xchg
cmp
pop
sbb
push
pop
adc
loopne
into
out
pop
mov
dec
iret
in
dec
dec
push
sub
sub
test
int
adc
xchg
adc
push
dec
and
les
fbstp
pop
add
jmp
movsl
cmp
cli
push
imul
jae
dec
imulb
xor
mov
dec
xor
out
test
mov
dec
fbld
fcmovne
aaa
scas
mov
pop
int
jo
pop
test
or
pop
adc
or
dec
mov
dec
pop
push
shlb
lret
push
pop
cwtl
pushf
test
loope
dec
sbb
dec
add
add
or
jge
or
jo
sbb
shl
sub
idivl
and
mov
pop
das
fistps
push
and
push
sbb
fsubp
push
int3
icebp
pop
aas
iret
xlat
jmp
and
pop
mov
repnz
sti
out
lret
pop
pop
pop
mov
cmp
in
fs
scas
jno
jg
mov
mov
in
cmp
out
pop
in
adc
xor
inc
mov
and
mov
jbe
xchg
add
mov
push
rclb
out
das
mov
xchg
or
imul
lock
mov
push
add
je
pop
mov
pop
push
mov
and
cli
std
or
mov
dec
jg
test
rcrl
pushf
sub
adc
or
sti
push
ljmp
sub
push
hlt
repnz
lods
bound
arpl
insb
popa
cmp
pop
xchg
adc
add
lahf
mov
pop
mov
test
fldenv
mov
mov
push
cs
push
xchg
sub
mov
pop
and
ja
jb
stos
pop
cmp
cmp
out
sahf
into
mov
push
jmp
hlt
stos
je
sub
loop
mov
pop
dec
or
jo
js
push
cltd
sahf
clc
cmc
fmul
lods
jle
rcr
pop
stos
iret
aas
fsubrl
and
roll
add
mov
je
push
inc
cmpsl
fiadds
fmulp
daa
push
out
or
push
es
dec
iret
dec
out
pop
aad
movsb
xchg
pop
lret
test
or
add
jo
sti
rcrl
xchg
adc
xor
xchg
or
mov
dec
xchg
mov
sbb
jo
mov
sti
pusha
aam
aam
mov
sub
aas
push
adc
scas
add
jne
pop
mov
lcall
pop
pop
dec
jo
pop
int3
xor
jae
jo
dec
cmp
lret
push
test
mov
out
jo
sub
insl
xchg
push
lock
push
push
cltd
jmp
mov
cmc
push
xor
jle
jp
xchg
push
arpl
mov
jmp
xchg
inc
aam
add
xchg
or
jmp
ljmpw
jge
adc
dec
inc
mov
rclb
mov
ljmp
xor
jge
stc
repnz
or
hlt
cmp
hlt
add
out
je
push
mov
mov
ljmp
into
mov
leave
repnz
adc
cld
sbb
jmp
in
or
sahf
aas
idivl
jle
int3
out
lods
out
mov
clc
lcall
push
inc
push
dec
sub
cld
out
and
out
mov
mov
ss
adc
in
or
int
inc
sbb
adc
inc
jae
adc
and
int3
test
mov
mov
xor
daa
in
sbb
mov
mov
loopne
sbbl
pop
push
mov
in
lcall
push
punpckldq
or
push
fiaddl
dec
cmp
sub
or
add
mov
lret
mov
fmull
lahf
out
pop
or
lds
movsl
add
gs
pop
fucomi
out
pop
sbb
arpl
pop
sbb
movsb
rcrb
mov
add
push
aam
adc
jle
out
push
mov
xor
pop
lcall
bound
dec
pop
sbb
or
scas
pop
push
mov
mov
dec
ljmp
lcall
mov
adc
xor
loop
jne
jo
push
or
sti
adc
icebp
add
imul
cld
jmp
mov
js
cmp
cmp
pop
or
sub
iret
roll
faddl
or
push
lahf
add
fmull
push
dec
test
out
cli
in
pusha
mov
push
cmp
pop
xchg
scas
lods
mov
jb
lods
mov
pop
push
daa
or
pop
or
aas
mov
fists
test
sub
mov
inc
cmp
cmp
icebp
fxch
fcmovbe
sub
int3
call
lds
repnz
pshufw
rorl
dec
sbb
loopne
sti
cmp
jmp
mov
jb
adc
mov
fcoml
lret
push
adc
out
sbb
and
aas
aas
addr16
jns
sbb
push
popl
fcmovnbe
shr
or
dec
and
fdivrs
mov
test
cmp
out
outsb
sbb
fdivr
nop
int3
test
mov
aaa
jnp
cli
inc
clc
xchg
jecxz
add
out
repnz
call
lods
cmpsl
adc
adc
cli
daa
les
adc
dec
inc
xor
daa
lret
adcl
mov
es
jge
ficoms
and
sarl
pop
out
shl
adc
arpl
insl
pop
addr16
je
push
sub
aas
mov
daa
jns
or
adc
mulb
ss
das
dec
push
adc
push
lahf
ljmp
fcoml
cmp
lods
fmull
dec
lods
and
dec
test
pop
push
js
shr
mov
inc
pop
fwait
repz
mov
or
xor
imul
stos
and
jmp
and
cmpsb
lret
shrl
cli
notb
and
push
sahf
and
and
sbb
sub
xchg
or
shrl
mov
add
icebp
mov
adc
in
mov
push
scas
into
mov
or
fcoml
jge,pt
in
shll
addr16
adc
stos
cld
push
addr16
stos
cld
xchg
sbb
pop
pop
add
push
call
out
ljmp
mov
mov
ror
cmc
je
mov
leave
or
push
pop
nop
xchg
into
jo
cld
es
push
and
adc
or
arpl
cld
ss
adc
push
scas
adc
in
rcr
jae
and
in
lret
dec
lea
jne
into
adc
mov
lock
rcll
and
aad
sbbl
and
out
rcll
mov
je
pop
stos
lar
repz
add
stos
pop
rorb
shlb
mov
subb
dec
aas
or
mov
xor
repz
dec
mov
rorl
inc
in
sbb
das
ja
imul
or
pop
jecxz
les
mov
pop
mov
adc
fcmove
push
lods
push
mov
jg
les
mov
lea
xor
sbb
xchg
mov
ljmp
scas
shll
jo
ljmp
adcl
mov
mov
aaa
iret
mov
jp
out
loope
or
pushw
inc
pushf
mov
sti
scas
or
pop
loope
repnz
cmp
inc
out
and
pushf
inc
mov
mov
dec
rclb
push
xchg
mov
lea
jl
test
pop
mov
mulb
shl
dec
mov
or
mov
and
mov
leave
xchg
push
andb
mov
rcrl
addr16
push
push
ljmp
out
push
jns
sbb
cli
inc
in
imul
mov
sub
jb
clc
push
ds
addr16
add
pop
ret
in
jge
xchg
popf
pop
and
rorl
mov
adc
mov
xlat
ss
mov
les
mov
jmp
inc
ljmp
cli
nop
inc
lods
cmp
add
ljmp
sub
lahf
push
iret
int3
idiv
pop
dec
mov
mov
lods
shlb
jl
outsb
and
push
mov
sub
into
jge
pop
sbb
aas
in
mov
fwait
sub
xchg
push
dec
xlat
or
aaa
bound
out
push
dec
mov
pop
mov
pop
enter
mov
out
fwait
or
jns
xchg
xchg
pop
loop
mov
cltd
outsl
jbe
rorb
and
shrb
fistl
mov
scas
out
mov
sbb
ss
dec
outsl
lretw
sti
push
xlat
mov
ljmp
leave
out
pop
inc
dec
dec
testb
jae
lret
add
or
dec
cli
fstps
xlat
jns
fimull
ja
mov
push
lahf
int
xchg
ret
mov
dec
ss
iret
insl
fdivl
push
cli
lock
pop
dec
in
dec
jp
pand
fldl
push
insb
ljmp
fidivrl
cmp
sbb
mov
int
lahf
mov
xchg
imul
sbb
pavgw
fsubl
xor
cltd
dec
or
in
push
sub
fiaddl
jl
dec
push
movsl
xchg
jge
mov
pop
jp
jns
push
fwait
jbe
iret
xchg
dec
sub
lds
test
call
push
fwait
mov
cmpsb
nop
cmp
imul
data16
in
pushf
ljmp
rol
popa
mul
int
mov
in
lock
nop
div
cmpsb
push
or
aaa
fldl
pusha
sub
call
inc
adc
icebp
call
cmc
mov
push
push
dec
insb
mov
cwtl
pop
mov
adc
test
dec
pop
xlat
xor
outsb
arpl
pop
das
test
add
aas
dec
mov
movsl
jecxz
cmp
arpl
inc
pop
sbb
pop
pushf
loop
fmull
bound
cmp
arpl
mov
stos
jb
scas
inc
notl
mov
sbbb
rorb
xor
and
mov
mov
push
testb
daa
push
sbb
test
mov
aaa
popf
xchg
inc
pop
and
mov
bound
adc
or
pop
sbb
adc
jl
pop
fmull
inc
cmp
pop
inc
dec
cli
push
jo
decb
mov
xor
fwait
dec
jb
aad
dec
loop
hlt
in
in
mov
inc
rorb
mov
adc
divb
cmp
loop
inc
or
add
shrl
sarb
mov
fiadds
lahf
sub
and
xchg
adc
pop
out
push
frstpm(287
sarl
jl
mov
out
adc
ds
add
scas
fisubs
int
dec
pusha
mov
or
mov
mov
sub
mov
test
stos
pop
pop
sbb
test
xchg
inc
jae
cld
pop
and
fs
inc
lahf
lret
push
pop
leave
lds
mov
xchg
pop
and
mov
pop
push
shrb
cmp
dec
leave
int3
rorb
aas
sbb
dec
mov
sbb
mov
loopne
cmp
ret
cmp
jnp
fwait
push
int
push
and
cld
jge
and
loop
jl
fmul
push
cmp
test
jle
push
add
jmp
lea
mov
and
jecxz
pop
jle
xchg
stc
or
pop
mov
jmp
lret
sti
bound
xchg
jb
outsl
mov
dec
adc
pop
xchg
push
in
insl
lahf
inc
lahf
cmc
jle
arpl
cmpsb
aad
push
es
push
mov
lret
or
or
or
ret
aas
xchg
mov
insb
lods
lahf
or
dec
and
inc
nop
jl
or
lods
sti
xchg
pop
or
add
mov
jl
test
pop
int3
pushf
mov
ficoml
mov
inc
lret
cltd
xor
in
stos
dec
mov
mov
loopne
pop
inc
jo
push
test
fiaddl
nop
out
popf
pushf
lahf
mov
xchg
push
sbb
fcomip
arpl
rorl
and
loope
pop
outsb
out
lods
rclb
ja
icebp
lret
imul
jl
dec
mov
push
out
daa
pop
cmc
fnstenv
sbb
pop
repnz
mov
in
inc
scas
sbb
jg
dec
dec
fisttps
dec
int
cld
pop
das
xchg
roll
mov
sbb
add
hlt
repnz
out
loop
sti
outsl
adc
rcll
pop
pop
notl
sahf
pushf
rcr
pusha
lds
cmpsl
pop
les
mov
call
xchg
rcr
push
mov
loopne
jl
loopne
stc
push
pop
mov
jbe
jp
sbb
arpl
insl
mov
dec
leave
or
fists
mov
cltd
inc
pop
xlat
inc
fstpt
and
pop
or
pop
or
jge
lret
add
and
mov
rolb
dec
cmp
mulb
xchg
jp
inc
push
or
mov
leave
push
or
sub
ljmp
pop
daa
dec
dec
add
mov
fimuls
repz
fcmovnu
sub
movsl
cmp
leave
cmp
inc
xchg
enter
ficomps
fisttpl
iret
out
mov
push
jecxz
jecxz
dec
ds
fbstp
mov
shll
in
mov
inc
and
adc
push
das
int3
stc
lahf
add
pop
rcrl
dec
pop
dec
insl
sar
mov
sbb
mov
pop
mov
leave
xchg
mov
cmp
or
mov
or
shrl
stos
mov
movsl
or
push
and
in
notb
fildl
sbb
sahf
lock
movsl
fbstp
mov
mov
mov
fstpl
adc
test
and
stc
call
and
orb
inc
mov
movsl
mov
mov
insb
mov
mov
sbb
mov
lcall
inc
mov
int3
jl
add
pop
jle
outsb
arpl
fcomps
dec
mov
testb
push
cli
inc
xor
js
pop
cmp
shl
sbb
cmpsb
push
rep
shr
bound
pop
or
stos
and
mov
cmpsl
add
sbb
push
xchg
dec
push
ds
neg
pop
lods
cltd
xchg
outsb
adc
hlt
into
imul
fstl
xchg
je
test
sbb
sbb
nopl
clc
aas
dec
das
push
mov
pop
dec
jns
or
mov
or
and
pushf
mov
push
jae
pushf
cmp
xor
pop
push
or
xchg
dec
pop
sbb
cmp
push
mov
mov
out
sub
repnz
push
xorl
pop
lock
cmp
shrb
mov
rcr
shr
into
in
push
jnp
jns
pop
inc
cs
add
jo
mov
out
ss
fisubrl
jp
loope
push
shl
inc
pop
outsb
jmp
aaa
cmp
mov
or
or
push
aam
add
lcall
inc
out
out
pop
cmp
cmp
aas
aad
aam
imulb
pop
and
jmp
and
push
repz
les
ljmp
rorl
pop
cli
fists
test
in
and
cld
or
and
shl
xchg
dec
jmp
cmp
loope
jp
xchg
jg
mov
stos
pop
xchg
cmp
or
jecxz
fs
or
inc
js
sub
or
fistpl
out
in
sbb
pop
and
icebp
jecxz
in
dec
pop
hlt
adc
mov
mov
arpl
dec
adc
push
repz
cmp
adc
aad
pop
insb
jb
repz
scas
insb
pop
mov
or
xchg
dec
dec
sbb
leave
push
and
push
sahf
sbb
loop
pop
enter
sub
scas
cwtl
out
stos
dec
sbb
lds
outsl
js
xchg
sti
or
or
cwtl
cltd
push
push
daa
imul
pop
push
test
jp
dec
andb
mov
xchg
bound
mov
xlat
loopne
cmp
sub
pop
dec
ljmp
cmp
fdivr
scas
and
mov
lcall
xor
mov
ret
and
aas
and
jle
out
xchg
fldenv
in
cmp
lahf
das
mov
pop
pushf
inc
hlt
andl
call
shr
imul
cltd
idivl
into
out
jecxz
adc
xchg
push
outsl
push
test
dec
or
mov
adc
cmpl
das
int3
lea
loope
repz
mov
dec
imul
pop
push
lds
fucomp
std
andl
and
adc
fisubrs
lcall
test
or
sub
je
arpl
or
cmp
out
sbb
or
flds
pop
mov
adc
andl
adc
cmp
sbb
jp
pop
testl
push
ds
pop
xchg
inc
outsb
out
pop
or
lahf
cmpsl
sbb
cmpsl
data16
mov
pusha
int
addr16
mov
outsl
das
jp
xlat
push
jno
fimull
sub
mov
out
int3
cltd
pop
das
pop
mov
push
arpl
imul
pushf
shl
in
jle
or
fistpl
js
mov
lds
push
pop
sbb
dec
add
inc
sarb
xchg
adc
lds
in
mov
pop
das
rcrl
push
sbb
dec
jp
dec
lock
mov
cmp
data16
mov
inc
push
mov
rcr
data16
lods
gs
pop
dec
ret
or
fildl
mov
sub
mov
repz
mov
scas
out
out
pop
js
lods
xchg
dec
shrl
or
xor
mov
fisttpl
or
dec
or
arpl
push
in
xchg
pop
mov
inc
lea
stos
mov
cmpsl
js
add
bound
or
dec
mov
cmp
or
iret
scas
xor
ss
mov
movsl
push
pop
lock
ficompl
stos
or
push
and
jns
mov
add
dec
jp
inc
test
push
test
jle
dec
call
in
rdmsr
stos
pop
or
or
dec
daa
repnz
inc
mov
ffreep
repnz
cli
into
lods
aam
out
and
sbb
pop
insb
cmp
outsb
mov
pop
scas
jmp
das
dec
mov
clc
jl
cmp
repnz
sbb
std
into
iret
xchg
pop
stos
cwtl
pop
add
jp
cmpsl
lret
mov
in
push
cmp
or
mov
repz
iret
xchg
lret
mov
sbb
cmpsb
loop
mov
mov
sbb
pushf
stos
enter
or
or
xor
mov
lcall
mov
in
push
sub
pop
rol
push
fistps
pop
push
push
sti
repnz
in
in
xchg
leave
icebp
fsubr
cltd
xchg
ret
jecxz
into
rcrl
lds
enter
daa
xor
mov
xchg
lods
ss
jnp
or
arpl
jmp
lahf
mov
pop
mov
jb
and
ja
imul
xor
jns
js
mov
pushf
mov
stc
inc
int3
setle
shlb
scas
je
push
pop
xor
inc
sub
out
sbb
enter
add
push
in
in
int3
cmpb
sti
pop
arpl
jmp
sub
movsl
jg
cmc
mov
movsb
mov
mov
adc
mov
mov
out
sbb
add
xchg
dec
ds
xor
in
cli
xchg
fstpl
cltd
mov
add
decb
lea
or
sbb
inc
rcrl
dec
mov
xor
push
popa
movsl
or
pop
jae
data16
push
nop
xor
std
xor
sbbl
in
jbe
imulb
das
sahf
cli
pop
mov
fisttps
nop
mov
das
add
jmp
cld
movsl
mov
aas
stos
stc
std
pop
pop
push
roll
test
repnz
dec
sbb
pop
adc
fistpll
test
push
cs
jmp
jnp
xor
push
loop
std
adc
mov
aam
pop
rorb
mov
inc
dec
push
fcoms
scas
pop
sbb
dec
push
cmp
xchg
insl
loop
fisttps
mov
push
mov
or
adc
dec
movsb
push
jg
adc
ljmp
dec
cltd
pop
test
xchg
mov
or
add
dec
daa
sub
dec
loop
out
mov
mov
mov
push
or
fcoms
inc
jle
int3
iret
mov
pushf
pop
daa
dec
sub
repz
cmc
cmpl
xchg
mov
cs
lahf
ds
mov
out
add
lahf
adc
mov
and
push
imul
mov
or
adc
ret
jo
mov
xchg
push
je
lret
adc
ljmp
xor
push
jmp
push
outsb
inc
mov
in
pusha
adc
out
lods
push
lret
sub
dec
dec
jmp
mov
mov
mov
push
or
push
cmp
movsl
test
inc
mov
imul
loop,pn
add
adc
ss
pop
cmp
jl
sub
and
add
mov
int
mov
adc
ja
add
sbb
cmc
enter
cmp
jmp
ret
pop
mov
aad
adc
mov
add
in
pop
into
push
iret
punpckldq
mov
xchg
pop
insb
add
mov
iret
pop
insl
jl
xor
adc
and
push
mov
jne
push
imul
jmp
cmp
cmp
jno
ret
aas
dec
dec
mov
pop
pop
sti
mov
jmp
or
mov
sub
outsl
jnp
push
cmp
mov
addl
aas
or
bound
and
cmp
sahf
mov
xchg
testb
jge
mov
decl
and
add
xchg
inc
pop
dec
lock
popa
add
int3
outsb
cmpsl
and
test
pop
call
and
jb
pop
movsb
cs
and
or
bnd
push
mov
fstl
fwait
xchg
mov
shlb
jo
sti
pop
cmp
stc
dec
insb
fucomi
push
lahf
std
mov
cmpsb
ret
pop
jae
in
jno
push
fdivrs
mov
xchg
fcomp
pop
sti
xor
mov
into
orb
sbb
push
jo
sbb
sub
iret
aad
sub
pop
std
test
sahf
jge
adc
movsl
loopne
shrl
mov
lret
outsl
or
in
insb
mov
or
cs
ret
rclb
xchg
ds
mov
adc
fdivrl
jmp
or
shlb
cmp
jbe
stos
adc
fcoml
rcrb
in
hlt
jb
movsb
dec
jns
jp
xor
xchg
or
imul
mov
sub
loop
mov
and
pop
adc
inc
enter
jmp
inc
ficompl
test
loope
pop
jmp
push
jb
into
bound
pop
out
cld
les
iret
jo
and
inc
mov
shrl
shrb
fstpt
hlt
popf
cmp
lcall
pop
cmc
fninit
test
fisubl
mov
push
jge
pop
mov
mov
inc
push
push
jno
sub
leave
outsb
aas
js
pop
inc
inc
lret
fimull
sub
push
jmp
mov
ljmp
movsb
lahf
jb
int
fdivl
push
inc
imul
loopne
mov
pop
sbb
rolb
test
sarb
mov
fwait
sahf
jb
push
mov
jg
decb
in
push
mov
ret
pop
cmp
int
pop
dec
ljmp
push
out
cli
arpl
pop
jnp
push
fistpll
and
lods
pop
cwtl
dec
inc
mov
cs
in
cmp
dec
push
mov
outsb
pushf
imul
cmp
push
dec
lret
sbb
enter
adc
sub
sti
dec
stos
mov
cmc
popf
cmp
filds
push
stc
dec
pop
shll
push
and
dec
mov
jo
fisttps
mov
mov
testl
and
mov
push
js
sarl
imul
insb
add
or
cmp
int3
fcoms
pushf
push
adc
das
add
dec
jbe
scas
faddl
clc
test
bound
hlt
cwtl
mov
shll
and
dec
daa
int3
push
push
scas
push
int
dec
xchg
or
in
lds
sbb
xchg
sub
adc
repz
daa
and
push
lret
push
mov
push
lcall
fsubs
das
aam
xor
std
imull
sbb
int
xchg
dec
iret
lret
mov
scas
imul
jge
stc
mov
push
faddp
out
or
pop
fbld
int3
dec
aam
push
jo
das
cmpsb
imul
cmp
int3
shlb
leave
add
jb
sahf
push
cmp
int3
mov
push
xor
clc
and
mov
xchg
scas
lcall
mov
test
movsb
das
ss
aas
lock
adc
ja
aaa
mov
adc
mov
stos
xlat
popa
add
dec
mov
scas
outsl
cmp
pop
iret
stos
call
aaa
cli
or
in
or
jmp
cmc
xor
mov
pop
fidivrl
jae
xor
or
aas
or
stos
aam
lcall
jmp
icebp
and
pop
cmp
out
pop
mov
out
inc
daa
push
loope
pop
mov
adcl
pop
mov
fsubl
push
sbb
push
cli
bound
pop
scas
sbb
xor
push
sbb
pushf
mov
cmp
xchg
mov
lret
hlt
sub
adc
inc
data16
push
push
loop
dec
and
pushl
sub
fsub
push
and
pop
or
lahf
dec
adc
test
xchg
sti
cli
pop
dec
int
fistpl
add
les
jecxz
fildll
or
push
int3
cmp
imul
cld
nop
jp
mov
mov
fdivrl
xor
rcrb
iret
pop
bound
or
or
mov
push
mov
dec
loop
rcrl
fsts
shlb
fsubrs
ss
sti
int
rorl
lods
push
out
rcl
repz
add
sbb
add
push
loop
adc
inc
dec
sub
add
lea
sti
mov
ficoml
int
dec
fisttpl
mov
out
and
sti
arpl
clc
mov
mov
pop
jmp
push
test
movsl
jno
lea
push
int
addps
sbb
bound
cmovns
mov
and
outsl
fisubl
out
add
daa
popf
popa
shlb
and
fisttps
dec
mov
movsl
mov
lods
or
dec
mov
cli
rorl
out
rcrb
adc
fs
mov
mov
cs
jl
stc
push
jl
out
mov
sbb
xchg
mov
jno
pop
mov
pop
mov
cmp
shrb
push
jmp
cmp
xchg
aaa
sti
out
out
dec
icebp
dec
ja
cmpsb
mov
fistpl
sbb
xchg
push
es
es
jb
push
xlat
inc
ljmp
mov
rorl
test
push
int3
rcll
inc
or
iret
mov
or
test
cmp
cltd
jle
out
inc
clc
xor
fwait
push
rorl
lods
mov
xchg
dec
mov
inc
stc
or
int3
ljmp
fistpl
push
mov
push
or
scas
jns
xor
jns
push
clc
lahf
arpl
shr
pop
mov
pop
add
inc
test
jge
int3
or
das
sbb
scas
jmp
sbbl
pop
ret
inc
or
movsb
jbe
shrl
jl
bound
mov
inc
hlt
jbe
jnp
push
sub
pop
outsl
sub
fmulp
iret
or
mov
jg
or
dec
dec
lcall
adc
aas
xchg
mov
pushf
into
dec
pop
or
and
jns
rol
repz
fisttpll
mov
roll
mov
xchg
test
or
inc
inc
fmuls
sbb
sub
and
addr16
orb
sub
xlat
and
js
cmp
int3
jecxz
fbld
mov
pop
addr16
aaa
or
sub
dec
adc
arpl
inc
sub
orb
in
sub
push
nop
and
mov
mov
dec
ja,pt
xor
pop
fldenv
mov
pop
popa
mov
fnstenv
incb
and
in
jmp
sbb
pop
sbb
loop
xorl
lret
outsb
aas
out
pop
cltd
and
sbb
mov
mov
bound
out
mov
jae
or
mov
and
xor
push
sti
lcall
in
xchg
mov
mov
pop
sbb
test
xor
arpl
int3
add
sbb
movsb
out
mov
stc
adc
lcall
mov
jmp
ret
std
call
lret
jbe
push
fstpl
mov
sub
or
idivl
testb
xchg
rcrl
cli
and
rcll
and
lret
fxch
mov
dec
fstpt
inc
and
xor
pushf
dec
pushl
fidivrl
int3
sbb
sbb
mov
roll
neg
andl
lods
pop
or
dec
imul
mov
sbb
dec
pop
fldl
cmp
andl
adc
or
dec
aad
dec
faddl
adc
dec
jle
nop
cmp
cli
bound
std
inc
mov
icebp
cwtl
ffreep
mov
outsb
cli
xor
sbb
push
xlat
jle
loop
mov
aas
push
jns
add
xor
xchg
gs
mov
adc
rolb
lcall
cmp
or
loopne
sbb
lds
aaa
push
sarl
xchg
out
rorl
iret
test
lods
stc
addr16
into
push
push
outsb
int3
leave
push
mov
movsl
cwtl
int
jl,pt
in
mov
mov
dec
lret
popa
cwtl
mov
loop
ljmp
push
adc
xor
cmp
popa
pop
jbe
pop
sbb
movsl
fwait
iret
cli
mov
int
mul
enter
or
xchg
mov
ljmp
insb
jl
dec
loopne
dec
mov
mov
test
hlt
jecxz
inc
cmp
pop
cmp
mov
xor
inc
mov
pop
dec
xchg
and
sub
aam
cmpsl
cs
scas
mov
dec
dec
loop
shrl
int3
lock
mov
push
repnz
and
dec
xchg
insl
repz
pop
in
mov
lods
cmp
out
je
aas
fisttpl
imul
mov
jle
push
jb
mov
push
mov
jl
int3
ds
sbb
lods
inc
hlt
lods
lea
dec
jbe
adc
push
out
lret
xor
icebp
inc
cmpsb
cmpsl
leave
mov
add
js
je
mov
or
into
cli
testb
dec
dec
lret
or
pop
into
inc
adc
subb
rclb
jl
out
dec
dec
and
pop
sahf
popf
xchg
notb
test
pop
xor
jb,pt
repnz
sub
sbb
ss
gs
shlb
into
push
das
pop
mov
out
pop
cltd
inc
sub
pop
and
data16
test
mov
mov
shrl
jmp
not
leave
jle
dec
lret
push
push
iret
sub
jmp
xchg
jge
dec
jo
cmp
outsl
fistl
outsb
aas
fs
pop
sub
push
leave
sbbl
pop
jno
fwait
pop
into
adc
ds
mov
loop
lahf
shl
mov
mov
shrl
call
cmp
inc
lock
shl
cli
cmp
into
add
xor
pop
jle
pop
pop
dec
push
bound
movntq
dec
test
rcl
les
hlt
mov
and
pusha
mov
cmp
and
ljmp
mov
inc
xchg
jne
adc
pusha
into
ss
test
or
cmp
sti
mov
jg
sbb
dec
stos
push
push
stos
ja
jp
mov
out
dec
jge
add
xchg
ret
leave
nop
jb
int3
jbe
pop
add
add
dec
insl
jge
mov
shll
out
adc
pop
repnz
jns
call
xor
dec
les
jecxz
xor
push
test
dec
sub
stos
or
xchg
lret
or
cmp
jge
shll
idivb
in
inc
xchg
daa
lret
cli
push
pop
test
push
pop
sarb
jecxz
out
lret
lods
pop
in
inc
sbb
test
pop
bound
andl
mov
das
inc
pop
divb
rorl
fbld
adcl
pop
xchg
push
or
jbe
hlt
mov
xor
test
or
inc
xlat
neg
fidivrl
sbb
dec
repnz
rorl
mov
popl
shlb
jb
sbb
addr16
scas
scas
nop
test
or
mov
xchg
movsl
das
arpl
popl
shll
mov
ljmp
push
dec
push
or
pmuludq
mov
pop
cmp
mul
test
add
push
je
and
sub
mov
inc
call
mov
fisubrl
fimuls
sbb
xchg
ss
aaa
imul
arpl
cmp
xchg
in
rcl
loop
lret
pop
inc
pop
outsb
jmp
mov
or
jg
cltd
or
insl
repz
inc
pop
mov
and
sub
in
xor
sbb
out
daa
loopne
out
sahf
pop
add
loop
ljmp
mov
int
into
or
dec
int3
sub
xor
or
dec
sub
ret
mov
jge
idivl
in
adc
push
pusha
jne
dec
cmp
les
or
rep
test
lahf
dec
push
mov
push
dec
shll
shlb
and
outsl
inc
in
mov
nop
dec
ficomps
jb
rcll
push
jmp
sub
jg
sbb
push
xor
bound
push
xchg
xor
rcr
adc
push
mov
bound
test
jg
push
pop
sub
or
jmp
dec
sbb
dec
sahf
por
push
xor
pop
xchg
pop
scas
dec
and
outsl
subl
or
mov
or
mov
jle
popf
mov
icebp
aam
xlat
ret
icebp
ficoml
sub
js
jp
imul
lods
add
push
dec
add
adc
mov
adcb
lret
sub
imul
push
mov
adc
jb
enter
cltd
sbb
outsb
cmpsb
jmp
and
xor
bound
jmp
std
jle
adc
out
jmp
sbbb
inc
mov
or
pop
add
push
jle
mov
out
clc
pop
push
unpckhps
sub
lret
orl
stos
push
push
test
dec
push
jge
add
cs
lret
out
shrb
pop
sbb
movsl
ret
dec
adc
mov
int3
int
xchg
fnstsw
add
or
cli
js
jg
in
xlat
pop
sub
cld
sbb
jl
push
pop
aaa
mov
pop
loop
cli
jecxz
sub
add
add
loop
jecxz
sbb
cmp
mov
xor
int3
loop
out
jnp
outsl
scas
test
dec
das
mov
dec
push
insb
cli
imul
pop
fimull
lret
ret
mov
xchg
or
lret
nop
inc
sub
push
ds
stc
repnz
popa
sahf
repz
stc
hlt
jle
xor
movsb
cmp
clc
outsb
fbstp
lcall
jge
divl
mov
xor
into
popa
fwait
xor
rolb
sti
sar
idivb
pushf
pop
ljmp
push
dec
loopne
inc
test
sarl
xlat
pop
dec
adc
or
cld
xor
nop
jbe
into
pusha
das
out
ffreep
out
push
lret
call
cli
mov
lahf
pop
stos
scas
pop
jns
int
mov
pop
dec
loope
jg
sbb
and
pop
test
dec
dec
gs
or
mov
sub
dec
pminub
mov
mov
movsb
hlt
ficoms
push
scas
dec
bound
dec
pop
decl
fstpl
mov
sbb
mov
mov
jg
data16
loopne
leave
dec
xor
adc
ss
xchg
popf
fisttps
fcmove
sti
mov
pinsrw
push
imul
bound
mov
mov
das
mov
adc
mov
outsl
mov
out
adc
repnz
mov
dec
pop
pop
out
push
out
or
lret
mov
shl
mov
lock
rol
or
mov
cld
icebp
xchg
mov
push
inc
stos
fsts
sub
jo
fsubrs
push
movsb
aam
pop
mov
dec
addb
mov
or
xor
sar
ss
pop
xchg
push
push
sub
or
mov
jnp
sub
jmp
shrb
sbb
movsb
pop
arpl
add
rcrb
mov
push
push
cltd
aad
ficompl
cmp
push
lret
dec
adc
xor
imul
sub
ljmp
mov
rcll
add
jmp
adc
mov
sbb
leave
ljmp
add
scas
pushf
jecxz
push
ljmp
lret
or
jne
jb
adc
pop
shlb
adc
imul
mov
mov
enter
ljmp
mov
leave
std
mov
dec
inc
adc
push
int3
push
fisubl
mov
int3
imul
lock
shr
dec
bound
leave
xchg
xchg
fstps
inc
xor
or
out
scas
adc
dec
scas
sbb
lahf
sub
pop
mov
movsl
insb
or
mov
jge
add
pop
xor
out
filds
hlt
jno
movl
xchg
les
pop
sti
pop
out
jns
insb
cli
fistpl
inc
testb
pop
sbb
add
in
insb
sahf
je
daa
jae
fdivrl
and
nop
cmp
fimull
adc
mov
xor
out
pop
leave
or
or
outsl
sub
into
add
movsb
scas
arpl
pop
fs
pop
sti
or
fimuls
sub
mov
jae
mov
jmp
stos
mov
fsubp
jl
jge
dec
add
xor
ficoms
cmp
mov
movsw
mov
push
cli
sbb
or
push
mov
inc
jmp
ljmp
adc
das
mov
jbe
cmp
lret
dec
push
aas
sub
nop
lock
dec
push
shr
fnstcw
imul
or
xor
mov
dec
xlat
gs
aad
enter
xor
xlat
mov
sbb
mov
ret
fidivrs
orl
push
in
mov
push
mov
push
fnstcw
inc
testb
push
or
in
xor
pop
cmp
mov
orb
ficomps
repz
dec
leave
mov
mov
sbb
xor
decl
pop
out
pop
bound
jp
fwait
xor
add
jl
into
call
aas
int3
adc
add
test
dec
popf
push
cmc
data16
test
pop
sbb
inc
rol
sbb
sub
add
dec
pop
push
ret
sti
sbb
jmp
pop
adc
sub
shrl
and
sbb
cmpsb
push
das
pop
sub
and
ja
push
test
rcll
subb
mov
pop
cmpsb
adc
jb
in
mov
push
add
sar
cmp
cmp
shlb
enter
mov
scas
or
cmp
xor
push
into
popa
imull
into
xchg
lahf
stos
cli
push
out
ljmp
dec
bound
mov
lret
jnp
pop
iret
adc
xor
inc
add
mov
pop
jl
sarl
pop
das
dec
ret
push
aad
jl
shr
mov
sbb
int
in
pop
fldt
out
movsl
loopne
loop
xchg
and
rolb
dec
xor
dec
loop
loopne
pop
ss
mov
or
fimull
add
and
cmp
cmpsl
outsb
pop
jb
sub
sbb
int3
movsb
mov
mov
adc
aad
arpl
loop
pop
dec
inc
into
aam
mov
scas
mov
mov
test
jg
adc
idivb
aaa
mov
aas
inc
and
or
dec
hlt
jle
sbb
adc
out
movsl
pop
lret
mov
cmp
cmp
aas
ljmp
pop
insb
mov
cld
pop
das
lods
sbb
mov
xchg
std
mov
ds
cli
adc
sbb
or
xchg
mov
inc
lock
mov
in
add
mov
cs
jge
aas
mov
inc
fisttpl
das
push
aad
inc
jp
and
fdivl
inc
jmp
push
and
repnz
gs
and
test
mov
bound
jmp
or
pop
nop
outsl
mov
pop
xor
xor
mov
jcxz
adc
push
cli
or
fidivl
sarb
mov
mov
push
fnsave
scas
int
ljmp
lods
add
clc
sarb
das
sub
jle
in
fistps
fsubl
adc
xlat
ljmp
sti
sbb
dec
dec
and
cmpsl
bound
popf
ror
ret
pop
sbb
repz
pushf
inc
loopne
fdivrl
dec
lds
inc
movsb
xchg
xchg
call
xchg
sbb
jl
or
and
loop
cmc
or
gs
mov
fdivrl
sub
jecxz
mov
int
ss
cwtl
mov
add
imul
mov
out
cld
dec
pop
mov
loopne
in
adc
loop
mov
cmp
pop
ror
jle
mov
aas
pop
cmp
cmp
add
shrb
cmp
mov
pop
xlat
mov
iret
jae
lock
jo
mov
repnz
mov
daa
sub
fidivrs
jne
arpl
push
and
cmp
xchg
adc
xchg
mov
jl
lea
jnp
push
outsb
je
jnp
xchg
fcoms
pop
adc
mov
mov
inc
push
mov
nop
push
in
inc
ds
popa
shrl
roll
or
out
pop
popf
mov
testb
pop
sub
dec
push
test
lret
push
push
lret
and
jge
push
out
push
cmp
das
dec
out
push
daa
bound
jmp
or
or
or
adc
movsb
fisttpll
mov
inc
ret
cmp
adc
jnp
jecxz
shll
dec
cmp
rcll
int3
jecxz
icebp
xchg
fmuls
imul
icebp
movb
mov
cmp
mov
bound
adc
stos
jmp
xchg
rorl
dec
adc
sbb
mov
dec
xchg
inc
lock
and
xor
mov
lahf
mov
rolb
pusha
int
mov
rcrl
add
pop
cs
es
sbb
mov
scas
dec
stos
mov
imul
in
add
dec
ss
inc
aad
test
adc
loop
scas
pop
test
sub
xchg
mov
jne
nop
es
pop
cmp
fldl2e
inc
xlat
add
int3
fwait
out
cli
lods
xchg
mov
bound
pusha
lahf
jg
push
jecxz
ret
xchg
cmpb
decb
imul
cs
mov
mov
rclb
dec
aas
push
dec
cmp
ficomps
in
dec
mov
sbb
aas
ss
sub
pop
mov
fmuls
pop
mov
inc
outsb
pop
ljmp
sub
mov
or
mov
mov
repz
mov
fst
mov
cli
dec
xchg
outsb
sub
shll
dec
nop
adc
pop
cmpsl
dec
mov
leave
cmp
adc
pop
movsl
in
aam
fildll
loop
pop
and
cli
andl
scas
pop
jge
shlb
jns
orb
xlat
jno
mov
mov
adc
sti
or
sbb
scas
movsb
sbb
or
xchg
ret
jge
js
icebp
imul
loopne
testl
adc
pop
mov
lcall
cmp
fidivrs
adc
xchg
pop
data16
mov
or
and
push
and
dec
push
fwait
shrb
or
test
xor
fwait
push
cmpsl
enter
lret
negb
cmp
jle
sub
xchg
dec
inc
outsl
in
mov
jge
ss
outsb
adc
push
cwtl
notb
movsl
fnstenv
mov
mov
ss
hlt
rcll
int3
pop
out
pop
inc
mov
dec
jle
or
aaa
call
mov
sub
js
seta
dec
add
lods
mov
cmc
in
fwait
mov
xchg
lods
mov
bnd
xchg
fstl
outsb
sbb
pop
out
and
stc
cld
dec
mov
imul
jbe
push
xchg
pop
daa
gs
inc
push
cltd
pop
push
lcall
push
jmp
ss
sub
xor
jge
mov
xchg
xchg
dec
out
mov
mov
nop
mov
adc
repz
fmull
pusha
test
and
stos
rolb
fsts
mov
js
lods
loope
sbb
push
jmp
arpl
hlt
jb
mov
rolb
aam
jbe
jmp
mov
rcl
adc
stos
in
mov
adc
push
or
cmpsb
orb
pop
push
lahf
inc
inc
jg
lods
and
sub
movsb
test
ss
push
out
ljmp
in
aas
repnz
in
push
ja
sbb
loop
push
insl
cli
scas
add
mov
cmpsl
mov
test
cmp
pop
push
orb
jmp
mov
jp
sahf
popa
out
or
inc
pop
repz
es
daa
clc
test
bound
outsb
or
test
or
jne
sbb
out
sarb
into
repz
pop
idiv
inc
mov
popf
or
or
mov
mov
inc
int
adc
fs
dec
into
sub
mov
dec
mov
mov
push
mov
cmp
mov
aam
add
aad
insb
or
mov
pop
fsubl
aam
cmp
aam
push
and
ja
insl
js
pop
stos
test
xor
bound
outsl
sahf
repnz
out
mov
or
jae
pusha
pop
lods
and
jno
fnstcw
fs
pop
bound
pop
cmp
xlat
orl
loope
into
push
and
scas
mov
mov
dec
inc
dec
ljmp
aad
xchg
aad
sub
dec
negb
jl
mov
xchg
scas
aam
aas
xor
cmc
push
outsb
lret
dec
shlb
xor
std
jl
mov
jno
rcr
leave
jbe
add
iret
dec
or
les
mov
shr
and
mov
aaa
call
cs
sbb
pmulhw
push
hlt
sbb
adc
push
test
and
lahf
call
inc
mov
pop
rcll
repnz
mov
dec
int3
pop
es
mov
xchg
cmp
lret
inc
ja
aaa
psubw
scas
dec
push
iret
gs
push
or
mov
pop
xchg
insl
jns
ret
dec
and
mov
repz
or
push
loop
imull
sahf
popf
repz
pop
enter
sahf
insb
lods
repz
fisttps
inc
jge
jns
pcmpgtw
out
mov
jb
pop
jne
pushl
and
into
adc
ljmp
das
dec
jae
pop
push
packssdw
sub
adc
or
aas
jae
adc
mov
test
add
pop
pushf
loop
rcll
jge
add
insb
cmp
dec
mov
loop
dec
jg
push
mov
push
into
scas
xor
pop
cmpsb
sarl
jb
mov
mulb
adc
adc
popf
jecxz
sbb
lock
xchg
dec
jecxz
mov
pop
pushf
iret
jecxz,pn
xchg
std
xorb
cmp
cltd
cmc
fistpll
insb
test
lds
std
mov
stos
or
scas
push
cmpsb
insb
or
ds
pushf
aaa
or
loop
push
shll
shrb
pop
bound
jmp
int3
push
in
add
jp
push
mov
pop
dec
pop
sbb
lods
inc
out
lahf
pop
lahf
xlat
cs
inc
pop
cmp
aad
mov
pop
aam
repz
mov
push
lea
add
jg
sub
and
rcl
pop
and
mov
aad
pop
jg
cmp
mov
sbb
sub
cmc
dec
cmpsl
pop
dec
sbb
into
mov
mov
xor
shlb
into
int3
scas
aas
notb
mov
frstor
push
sub
outsl
fdiv
cmpsb
pop
jmp
in
jp
xchg
testb
mov
push
sbb
xchg
or
ret
mov
lcallw
fildl
ds
in
adc
mov
pop
dec
or
rcr
adc
push
push
mov
repz
addr16
shlb
arpl
push
jle
push
es
mov
in
scas
mulb
bswap
in
leave
or
out
iret
bsf
fisttpll
hlt
std
imul
int
ds
lahf
push
loop
mov
movsb
cltd
push
jo
push
lcall
inc
decb
lock
or
test
rolb
imul
add
pusha
test
ds
cs
jo
lret
push
push
rcr
pop
lds
lret
movsl
jbe
and
mov
lret
and
jne
lods
sub
dec
pop
out
pop
adc
sub
cltd
pop
mov
add
test
adc
xchg
dec
push
outsl
fs
adc
cli
pop
sti
loopne
in
push
sbb
mov
movsl
cltd
fldt
and
or
insl
lret
shr
incl
imul
loop
mov
pop
das
sub
aaa
fs
pop
ljmp
ljmp
idiv
sti
fsts
push
subb
push
ljmp
idivl
in
shlb
and
addr16
mov
jle
adc
push
cmp
lret
push
xchg
outsb
leave
mov
xchg
into
ljmp
fdivl
push
pop
cmc
cmp
sub
jecxz
xorb
jmp
dec
je
test
and
outsl
xchg
lret
cld
into
jns
mov
rorl
pop
sarb
arpl
adc
dec
dec
push
mov
inc
dec
push
push
mov
dec
or
sbb
or
cld
add
into
fsubrl
push
adc
push
adc
aad
aas
scas
rcr
xor
ror
roll
into
fidivrl
mov
ror
push
cld
xchg
pop
pop
clc
push
pop
dec
scas
dec
lahf
add
cmp
push
xchg
jle
add
jle
int
push
inc
or
lds
and
fst
jmp
or
scas
pop
jecxz
fadds
mov
sahf
jle
mov
add
gs
addl
push
bound
cmpsb
mov
ljmp
sub
dec
xchg
leave
out
mov
mov
mov
fldenv
jbe
inc
out
add
or
jp
xchg
mov
out
out
sbb
adc
jbe
sbb
mov
stos
mov
or
repnz
or
push
notb
shl
push
xor
test
loop
mov
jge
pop
mov
or
adc
adc
push
jmp
mov
clc
aas
out
xlat
leave
or
jle
push
out
daa
in
imul
incb
push
cs
ljmp
out
arpl
cli
sbb
in
pop
lea
loopne
jo
mov
pop
lea
push
insb
jo
lods
xor
fmuls
push
out
dec
imul
xchg
and
mov
push
mov
out
push
call
jp
data16
das
or
ds
pushf
pop
jno
ret
sub
lods
pop
push
or
dec
in
add
jmp
jmp
sbb
adc
enter
clc
les
dec
test
outsl
test
repnz
cltd
icebp
jp
or
lods
dec
mov
data16
add
dec
push
daa
cli
and
jno
in
push
sbb
add
cli
in
and
mov
das
push
jnp
xchg
addl
dec
jge
jl
cmp
cld
stos
push
decb
cmp
inc
mov
pop
adc
or
mov
sbb
cli
out
mov
xchg
nop
push
pop
sub
ds
pop
and
cltd
mov
add
fxam
xchg
mov
pop
leave
out
les
mov
fistps
push
xchg
lods
mov
fcoml
push
cmp
ret
push
fnstsw
lret
fs
and
dec
nop
jae
or
lods
dec
mov
rcl
scas
or
pop
jbe
das
add
notl
popa
mov
loop
mov
fisttps
adc
pop
test
stos
dec
pop
frstor
nop
adc
jmp
mov
scas
sub
ret
mov
sahf
fisubs
fsts
cmp
imul
test
jge
sbb
pop
imul
adc
int
lret
negl
xor
loop
add
test
data16
add
decb
mov
imul
aas
scas
jp
cmp
and
stos
mov
jmp
lcall
cmp
or
pop
dec
pop
xlat
push
inc
xchg
jg
stc
mov
adc
push
lret
sub
ja
pop
dec
pop
push
fidivrs
mov
rcrl
jecxz
sti
rorb
std
jg
inc
aad
pop
out
mov
scas
leave
mov
mov
into
ds
push
in
imul
ljmp
jmp
adc
fmulp
pop
pusha
jo
out
inc
mov
dec
ror
cmc
mov
xchg
int
jbe
sbb
xchg
test
jo
pop
out
xchg
dec
fidivl
or
cs
xor
dec
mov
pop
mov
add
iret
adc
mov
imulb
dec
out
jmp
lock
adc
lds
cwtl
shl
mov
loop
scas
inc
pop
sbb
sbb
adc
pop
lea
ret
jnp
out
xchg
mov
lret
sbb
and
pop
scas
fwait
sbb
enter
out
and
mov
in
or
mov
imul
push
pop
dec
and
out
movsl
imul
push
faddp
xchg
xor
and
scas
hlt
xchg
dec
and
inc
cmpl
nop
lahf
sub
and
dec
mov
pop
and
jmp
arpl
imull
dec
pop
adc
dec
scas
fdivrl
roll
or
adcb
and
mov
xor
fcoml
xor
call
push
mov
sub
repz
scas
pop
shrl
sub
push
loope
jp
test
jp
pop
inc
test
pop
jl
inc
repz
call
jl
cmpsl
sbb
fstpl
mov
fs
in
sub
lock
pop
add
mov
or
ja
cmp
outsl
push
fwait
mov
fldcw
pusha
movsl
adc
xchg
push
test
ljmp
mov
xchg
arpl
aas
rcrl
ljmp
jmp
scas
ret
inc
stc
dec
pop
ds
rcll
mov
pop
or
push
ds
or
dec
mov
jnp
cmp
and
pop
mov
pushf
pop
into
dec
dec
adc
add
sub
push
test
xlat
jecxz
popa
push
mov
add
and
jecxz
and
jns
outsl
mov
xchg
repz
fs
jns
mov
lret
rclb
outsl
lock
shl
clc
sub
add
cltd
jmp
lret
stos
or
icebp
ss
lahf
loope
mov
ret
xchg
aad
cmpb
mov
fidivrs
imul
mov
pushf
lods
push
mov
gs
test
test
imul
pop
pop
fistpl
lds
cwtl
inc
iret
stos
or
pop
je
hlt
jo
push
adc
mov
loopne
negb
push
sbb
push
sbb
sbb
iret
sarl
and
cmp
dec
dec
pop
je
cmc
xlat
dec
cwtl
xchg
cltd
pop
outsb
pop
in
fstps
std
insl
int3
mov
lock
out
push
ficompl
or
popf
stos
in
sub
scas
xchg
and
jp
jns
push
pop
jns
jmp
les
stc
fnstcw
movsl
scas
cwtl
fsubs
xchg
imul
push
or
dec
sbb
cmp
adc
jmp
mov
out
adc
fdivrl
lret
push
or
test
xor
jge
mov
inc
mov
sti
jb
bound
or
mov
mov
loop
pop
sub
out
jmp
les
jns
or
sbb
iret
or
int
sub
cli
lahf
and
mov
xor
mov
insl
adc
in
xchg
inc
pop
sbb
repnz
leave
jb
ja
rcrl
stos
xchg
cmp
inc
and
cmp
cli
mov
mov
mov
andl
mov
pop
dec
add
mov
fsubl
out
fs
or
xor
iret
pop
lret
mov
leave
imul
mov
jle
and
into
out
jl
mov
cwtl
or
test
movsb
or
fidivrl
rcl
jo
add
fwait
pop
and
adc
lcall
jne
lods
push
jmp
or
xchg
pop
fidivrl
cmp
inc
adc
into
jle
push
repz
cli
in
push
adc
pop
push
out
jl
adc
or
pop
dec
sahf
or
mov
or
inc
ljmp
ja
fisttpl
pop
adcb
sti
pop
cs
fmull
mov
dec
repnz
rorl
and
lret
pop
xchg
lock
adc
fstpt
shrl
inc
or
ljmp
lret
push
fdivrs
dec
xchg
xchg
repnz
rolb
push
jmp
iret
and
out
lcall
pop
out
pop
lea
pop
sbb
lret
iret
fcomps
pop
mov
out
pop
sti
dec
push
call
leave
pop
in
xchg
mov
ljmp
fildl
push
jmp
scas
push
inc
push
into
inc
aaa
shrb
je
push
jle
popf
cmp
std
add
push
notl
in
adc
adc
stos
arpl
jle
or
fldcw
lods
pop
faddl
fdivrl
pop
iret
mov
pop
iret
jl
faddl
fdivrl
iret
pop
pop
fcoml
iret
dec
pop
fcoml
outsb
iret
cmp
fmul
outsb
iret
sub
fmull
fmull
fcomps
outsb
and
cld
pop
jge
arpl
pop
sub
pop
or
fcompl
push
fimull
pop
cs
dec
or
out
pop
aam
pop
jl
dec
aam
pop
out
ds
pop
xchg
ds
pop
enter
imul
jp
std
pop
xor
imul
push
out
loop
and
push
push
mov
push
dec
sub
scas
mov
out
stos
and
ds
int3
sub
dec
pushf
aad
int3
adc
pushf
sahf
cmp
xor
rorl
ljmp
lret
sbbb
repz
lret
mov
cld
mov
movsb
sbb
repnz
adc
adc
loop
jmp
sahf
lret
loopne
stc
adc
mov
bnd
hlt
int3
fdivr
in
out
in
out
rclb
lret
out
in
out
lret
push
insl
out
jmp
lret
mov
outsl
ljmp
das
stc
and
adc
clc
adc
push
and
scas
lcall
idivb
sub
mov
insb
fisttpl
pop
test
push
push
fisubl
repnz
hlt
and
push
sbb
adc
mov
repnz
fcmovnb
int
aaa
or
pop
push
jle
in
gs
lret
push
mov
fucomp
push
pop
inc
xchg
cmpsb
mov
idiv
lods
outsb
xchg
shll
ret
sub
add
push
pop
clc
cmp
push
dec
xlat
test
ljmp
lahf
or
push
mov
push
adc
int
inc
jg
jecxz
cmp
xchg
pop
add
jp
fwait
dec
in
arpl
mov
fists
out
or
sub
in
lret
push
pop
mov
leave
pop
mov
and
int3
pop
enter
or
sbb
daa
fs
or
loop
mov
or
pushf
mov
cmc
xor
in
push
in
rcrl
iret
sbb
fisttpl
lea
lcall
and
push
mov
xor
in
push
push
sbb
lds
inc
pop
hlt
adc
call
sbbb
in
test
cmc
dec
ljmp
repnz
adcl
lock
outsl
out
or
std
cmc
jecxz
orb
inc
test
loopne
mov
out
test
scas
sbb
jmp
push
rcrb
cmpsw
jno
scas
dec
enter
hlt
and
int3
into
mov
xchg
repz
fisubrl
and
and
mov
mov
xor
lods
lds
pop
jge
mov
mov
cmp
push
jnp
sbb
fstpt
lret
into
jns
fistl
inc
dec
arpl
jg
push
push
push
rcll
insl
jmp
jae
mov
idiv
cmp
or
pop
mov
dec
and
dec
mov
les
add
paddsw
adc
popa
imul
sub
adc
loop
adc
pop
add
test
jecxz
or
sbb
adc
hlt
sub
adc
leave
jle
test
fs
in
stos
dec
inc
jo
xor
pop
push
push
mov
dec
push
push
dec
pop
mov
bound
jecxz
xchg
mov
imul
div
jnp
sahf
mov
hlt
jbe
lods
call
lods
aam
fmull
sti
andb
out
cmp
pop
les
hlt
lret
test
mov
cmc
mov
fnsetpm(287
mov
lock
jp
stc
sub
xorb
and
or
or
mov
cmp
push
jmp
mov
xor
jle
ja
out
cli
scas
in
mov
repz
std
xchg
ret
cmp
pop
js
mov
cli
pop
aaa
lock
pop
out
cmp
jl
adc
imul
mov
fstpt
jo
adc
sbb
gs
in
aas
cmpsl
adc
dec
imul
mov
in
ja
or
push
jl
loop
or
mov
int
mov
sbb
fidivrl
outsl
dec
aam
shl
lret
dec
and
or
mov
out
fstpt
xor
jns
cmc
je
pop
fistl
test
xchg
adc
jbe
movlps
sahf
and
mov
dec
dec
and
out
or
pusha
jle
xor
in
pop
dec
pop
jmp
push
mov
dec
cmp
mov
repnz
clc
inc
fisubs
dec
lds
sarb
into
jge
out
outsl
movsl
mov
or
lea
dec
pop
fisttpll
jb
mov
lret
sbb
cmp
pop
push
shrl
adc
int
xchg
in
mov
ds
push
pop
es
and
cli
push
lods
js
iret
sbb
clc
jmp
cs
pop
popa
aas
cld
dec
and
or
std
dec
test
xchg
leave
or
ds
stos
out
dec
jmp
jo
and
shll
cli
or
dec
scas
mov
and
mov
lea
iret
dec
fnstcw
mov
mov
nop
adc
sahf
rorl
mov
pop
inc
dec
jmp
std
or
mov
adc
test
pop
adc
or
fs
cmp
push
dec
test
xor
mov
or
sbb
ljmp
xchg
sub
loope
or
inc
jne
mov
out
mov
out
ficompl
repnz
sub
mov
pop
adcb
pop
mov
dec
loop
fildl
adc
stos
outsl
dec
ret
call
jbe
push
pushf
out
mov
push
into
sarl
push
jo
scas
sbb
outsb
xor
in
mov
scas
mov
dec
jmp
fistps
movsb
cmpsb
adc
shrl
push
or
cmp
dec
mov
pop
or
pop
or
mov
inc
loop
adc
pop
adc
dec
js
dec
and
adc
mov
mov
or
sub
push
sti
mov
sbb
test
imul
insb
lret
xor
das
pop
cld
and
les
test
enter
shlb
sbbl
jb
pop
int
mov
xchg
sub
pop
shr
rclb
ljmp
ljmp
fprem1
push
dec
daa
stc
dec
pusha
outsb
inc
cmpsl
jno
aas
shlb
adc
shlb
sub
mov
mov
iret
fidivrl
mov
add
dec
adc
mov
das
push
adc
in
jbe
lret
imul
mov
pop
pop
dec
test
js
dec
jmp
clc
or
popa
mov
aaa
inc
cmp
mov
push
fisubl
cli
decb
and
and
dec
push
pop
pop
mov
xchg
mov
inc
cmpl
sub
fstpl
inc
dec
faddl
xchg
lods
dec
mov
dec
sub
rcrl
fldl
sub
sub
or
stc
pop
clc
push
mov
scas
fnstenv
push
inc
jle
pop
and
outsl
pop
out
imul
jne
ljmp
push
push
std
sub
decl
lahf
inc
push
mov
bound
fs
sub
push
mov
jo
xor
shll
jmp
cmp
and
push
pop
jle,pn
mov
dec
lret
inc
stos
fcmovne
lea
cmp
xchg
mov
leave
xchg
loop
mov
dec
shlb
xor
mov
cmpsb
inc
aas
dec
lret
pushf
outsb
test
imul
push
in
gs
cltd
lcall
xchg
and
dec
sti
or
negb
mov
subl
pop
push
mov
and
int
or
in
cmp
dec
add
jb
xor
cvtpi2ps
dec
stos
scas
das
inc
cs
das
cmp
fimuls
jmp
int3
pop
cli
or
push
sbb
sahf
sub
or
dec
mov
lods
or
cmp
xor
xchg
shrb
and
in
bound
sar
into
iret
filds
add
jnp
fimuls
addr16
lods
mov
out
rorl
push
pop
ds
sti
mov
dec
in
dec
or
in
pop
cld
fisubs
int
add
cmp
aas
lea
int
xchg
dec
or
lea
dec
aam
push
imul
scas
popa
cmpsl
mov
add
adc
mov
push
orb
mov
push
fwait
lret
mov
pop
cs
mov
ljmp
icebp
pop
pop
mov
ret
jle
add
jnp
pop
out
ss
fnstcw
mov
das
into
adc
leave
jno
fisttpll
push
imul
adc
xor
inc
decl
mulb
int
pop
aas
dec
or
adc
dec
xchg
jge
inc
loope
cltd
pusha
cltd
pop
adc
push
bound
fldpi
fcmove
xor
sti
adc
leave
int3
adc
cmp
adc
cmp
int3
out
fcmovnb
jp
xchg
rorl
mov
mov
lahf
mov
inc
shll
push
int3
mov
leave
cmp
xor
fimuls
pushf
test
int
fimuls
xchg
in
or
push
and
scas
and
dec
dec
sub
shlb
outsb
push
lock
in
adc
lret
insb
aam
dec
in
cmp
setge
mov
cli
subb
aam
mov
and
jl
neg
arpl
icebp
mov
or
and
popa
int
movsl
add
mov
fsts
repnz
cmp
sbb
and
cli
insb
xchg
or
xor
and
sahf
fnstcw
aas
pop
mov
pop
emms
pushf
inc
mov
ret
popa
xlat
iret
dec
fidivl
dec
pop
push
scas
sbb
repnz
pop
ds
clc
lcall
bound
ss
xchg
leave
adcl
into
pop
bound
iret
fisubl
cs
rorl
cld
push
adc
test
cmc
lds
dec
inc
xchg
cmp
lds
bound
jae
pop
pop
xor
inc
or
loope
jle
and
mov
insb
jge
cli
lahf
cmp
fimuls
lods
dec
fcmovnbe
jp
mov
or
fdivr
dec
sub
dec
inc
fistps
and
mov
gs
dec
or
imul
mov
fidivs
mov
mov
sub
arpl
das
add
or
cmp
in
movsl
cld
cmp
and
jmp
adc
push
cld
into
das
insl
ret
clc
test
pop
mov
mov
mov
inc
jo
test
mov
pop
insb
jmp
scas
shrl
std
xor
aas
cmpsb
sbb
pop
outsl
stc
test
xlat
or
ret
jo
in
and
jecxz
int
mov
aas
inc
pop
cmp
pusha
ss
or
pop
jns
pop
cmpsb
orl
mov
adc
jge
pop
jecxz
xchg
jle
xor
sub
xchg
add
jecxz
mov
ja
xor
and
pop
aas
adc
mov
mov
jns
fsubrl
jge
jns
inc
push
cmp
sar
imul
jl
adc
sub
mov
fninit
adc
jmp
add
insb
push
xchg
or
or
adc
cmc
inc
mov
cmp
gs
and
push
enter
dec
mov
cli
inc
or
rcrl
sub
jge
sarl
mov
jne
cmp
adc
mov
pop
and
push
and
fdivrl
cmpsl
mov
xchg
dec
lahf
jb
lret
popa
aaa
pop
mov
outsl
dec
jge
arpl
xor
dec
repz
hlt
push
push
add
dec
mov
adc
pop
sti
pusha
mov
adc
addr16
xchg
xchg
push
jo
imul
cmp
xchg
xchg
lea
out
mov
and
ss
and
hlt
and
notl
inc
lret
push
xchg
mov
into
inc
add
call
sbb
int3
lret
into
push
jge
negb
xchg
pusha
in
dec
mov
cli
pushf
push
or
pop
xchg
pop
add
ja
mov
mov
adc
push
lea
aas
fwait
or
cmp
in
pop
mov
sub
out
mov
xchg
adcl
punpckhdq
ljmp
ret
das
sti
mov
sbb
cmp
and
and
cld
pushw
fmul
mov
mov
orl
jp
iret
aas
pop
mov
push
push
fs
adc
adc
insb
jns
jle,pt
out
xchg
push
cmp
sbb
mov
xor
xor
cld
nop
les
inc
mov
popa
or
out
cmp
add
and
mov
test
jmp
push
xor
in
pop
out
das
push
nop
loopne
jge
jmp
lret
mov
or
push
sub
cmp
je
jle
mov
mov
push
fldt
or
lret
ja
jo
hlt
cwtl
xor
test
push
je
pop
mov
test
xor
or
add
and
xchg
pop
int3
clc
push
setp
pop
fidivrl
or
add
iret
mov
pushf
imul
lcall
fstpt
repnz
sbb
add
outsl
mov
es
scas
js
xchg
scas
in
sbb
mov
adc
int3
lods
clc
jg
dec
adc
insl
fwait
sub
adc
push
mov
fmull
lock
fwait
scas
ljmp
ja
lahf
push
cmpl
dec
or
fistpll
or
out
cmp
cmp
add
push
decb
sub
jns
dec
dec
scas
jg
fadd
in
rorl
and
lods
jp
rcr
fsubr
popf
sbb
stc
push
pop
cld
aas
sbb
sub
or
imul
lret
dec
xchg
cmp
cs
ljmp
notl
sbb
inc
push
fwait
push
pop
mov
cmpsb
push
jo
adc
dec
mov
or
inc
or
out
outsb
sbb
js
or
pop
xlat
loope
mov
iret
and
pop
or
or
ljmp
sub
pop
mov
in
sti
and
into
mov
add
pop
and
pcmpeqb
push
dec
xor
sbb
pushf
stc
iret
imul
shr
pop
or
mov
pop
dec
or
test
jae
dec
lcall
mov
dec
pop
sti
scas
mov
int3
fildll
shrb
dec
pop
cmp
jmp
cmpl
cmp
mov
push
stos
or
scas
nop
test
dec
mov
or
sub
insb
mov
hlt
xchg
mov
push
xchg
bound
jmp
add
sbb
in
adc
fisttpll
jmp
xchg
out
jmp
or
sarb
fninit
int
xchg
jmp
in
data16
dec
or
repnz
jmp
fnstsw
fistl
ficoms
bound
inc
addr16
cs
das
jmp
lds
aas
mov
adc
cmp
call
jg
xchg
lret
cld
ljmp
aam
out
fildll
push
xor
and
test
and
ljmp
sbbl
push
xlat
cmp
out
je
testl
inc
or
and
mov
push
lods
test
cmp
ljmp
rcrb
push
xchg
jne
gs
pushf
or
dec
loop
inc
sti
orb
or
lret
pop
jb
aad
and
and
xchg
leave
mov
dec
outsb
push
out
ljmp
mov
sbb
lds
aas
in
and
push
cli
cmp
sub
cwtl
inc
xor
iret
push
mov
mov
jg
iret
out
jp
in
adc
jl
inc
cs
int3
mov
insb
mov
cmp
mov
hlt
jge
pop
push
lcall
mov
and
push
xchg
in
icebp
ficompl
mov
insl
loope
pop
outsl
nop
pusha
inc
pop
pop
outsl
clc
inc
fnstsw
inc
push
out
sbb
inc
call
data16
dec
dec
dec
shrl
and
imul
push
jns
jp
push
das
adc
out
cwtl
xchg
outsb
pop
int3
pusha
sub
xor
cmp
inc
and
pop
in
lret
in
out
mov
stos
out
pop
std
lret
jmp
rorb
ljmp
fisttps
and
mov
in
sbb
sub
call
lods
ljmp
xchg
call
pop
xor
add
rolb
mov
dec
inc
and
idiv
pop
pop
mov
dec
popa
aas
xlat
sbb
fwait
or
mov
pop
daa
or
test
in
xor
adc
xchg
fcoms
sub
in
jmp
test
nop
es
mov
call
mov
inc
add
jecxz
mov
in
mov
pop
fistpl
scas
stos
test
lcall
jno
sbb
or
sub
sbb
mov
popf
mov
int3
dec
out
in
leave
in
jp
aaa
push
mov
jae
adc
cld
stos
mov
aam
pop
ds
cwtl
nop
js
cmpsl
cwtl
lds
cltd
stos
adc
ficoms
xor
jge
xchg
aad
pop
pop
shrl
or
ret
ljmp
cmp
sbb
pop
push
mov
mov
pop
dec
mov
inc
js
fsts
fistl
sbb
push
shrl
mov
push
mov
iret
xchg
mov
push
sub
sub
adc
adc
clc
sti
icebp
mov
xchg
pop
push
call
leave
push
push
dec
bound
xor
adc
mov
xchg
xor
les
push
xor
adc
call
popf
sbb
lock
adc
js
jle
cmc
jne
push
dec
sub
dec
outsb
mov
jnp
repz
mov
pop
fistpl
xchg
sub
fwait
or
js
mov
cli
mov
jmp
dec
or
imul
dec
testl
pop
lahf
xchg
mov
lods
repnz
mov
lock
xchg
fisttpll
lods
cmpsb
loope
mov
sbb
in
sub
imul
nop
dec
inc
lahf
imul
popa
mov
push
lods
fsubr
out
dec
pop
fwait
sub
sub
sub
lret
jae
das
cmpb
adc
inc
out
fs
mov
push
cmp
pop
sub
push
dec
out
test
inc
push
or
cmp
mov
push
mov
iret
aam
or
cmp
and
push
or
fs
aam
dec
pop
shll
sub
loop
pop
fs
jno
mov
jmp
jb
lods
jg
lock
dec
mov
mov
mov
bound
test
or
cmpsb
mov
out
inc
dec
adc
shrb
jae
ret
push
outsb
mov
sub
lret
daa
mov
bound
in
fisttpl
inc
dec
mov
mov
pop
fs
pop
shrl
jo
shr
mov
aas
out
jo
adc
add
iret
pop
in
ds
dec
pop
fldt
dec
xor
fisubs
rcrb
push
lahf
cs
aad
iret
mov
movsl
sbb
gs
fadds
push
inc
jnp
repnz
sbb
pop
sbb
sti
xlat
cli
push
packuswb
cmpsb
sbb
mov
lret
sbb
pop
hlt
pusha
or
das
and
adc
xchg
mov
into
test
cmp
nop
sub
adc
lock
xchg
daa
dec
cmp
dec
mov
sbb
push
push
push
push
sahf
out
je
mov
add
pop
clc
jp
cmp
xor
jnp
push
inc
outsb
pop
cmp
xlat
clc
jp
pop
cmp
cmp
pop
shrl
adc
shr
mov
mov
stos
pop
pop
sbb
leave
cmpsl
mov
push
push
inc
jne
cwtl
fadds
leave
and
jnp
imulb
outsl
adc
ljmp
pop
out
pop
inc
push
arpl
ret
xchg
or
dec
sbb
jae
and
mov
mov
xor
jae
push
imul
mov
add
repnz
iret
movsl
test
pop
mov
cmp
nop
scas
pusha
xchg
jnp
sub
adc
cmp
push
sahf
jnp
ret
std
out
leave
std
push
adc
jns
int3
xchg
dec
pop
es
dec
mov
fptan
and
pusha
lea
jns
xchg
push
dec
mov
mov
dec
mov
mov
stc
lea
cli
jns
pop
movsb
cs
pop
jg
daa
dec
and
cmpsb
xor
lods
fs
movsl
xchg
lret
hlt
jb
adcl
jmp
das
dec
push
out
jge
mov
stos
mov
mov
cmp
add
pop
jl
push
adc
cmp
shrb
imul
adc
fbstp
sti
outsl
leave
xchg
clc
aaa
lds
or
mov
popf
or
sub
jne
sub
push
mov
popa
daa
popf
pusha
dec
aas
negl
mov
jns
jno
add
mov
jmp
mov
cs
sub
faddl
dec
xchg
mov
fidivrl
dec
xchg
into
dec
jl
cli
pop
pop
pop
scas
adc
enter
jmp
jmp
dec
mov
sub
cltd
push
mov
orps
in
sti
cmc
cmp
pop
cs
jle
in
notb
push
imul
stos
dec
cmp
mov
sub
jbe
or
dec
sbbb
pop
mov
jae
pop
repnz
ss
iret
sub
rclb
ss
inc
or
pop
iret
out
pop
push
and
mov
hlt
sti
aas
loop
lcall
stos
insl
addr16
hlt
out
cmp
sbb
ljmp
test
pop
leave
mov
imul
adc
data16
es
repnz
into
pop
xchg
lods
and
out
lds
adc
jno
lret
jnp
sbb
shl
int
outsl
sub
push
jno
scas
cmc
in
sbb
mov
lcall
lea
sub
mov
cmc
push
fwait
jb
das
lea
dec
pop
fisubl
cld
dec
or
inc
outsb
push
in
jp
jmp
lahf
in
stc
fisttpl
xchg
inc
inc
push
jg
mov
sbb
xor
gs
mov
adc
mov
sub
int
jo
pusha
bound
insb
mov
mov
cmpsb
fimuls
mov
cmp
or
popf
adc
arpl
push
out
ljmp
out
pop
inc
cmpsb
jle
out
stos
lret
adc
ss
jns
push
jl
aas
in
fistpl
xlat
add
push
cmp
fmulp
push
sbb
adc
or
xchg
cltd
mov
jl
jge
loopne
cmpsb
ljmp
movsl
loopne
into
jl
mov
fcomi
ljmp
pop
jmp
fisttpl
sbb
daa
dec
inc
sbb
push
and
xchg
cmpsl
xlat
outsb
mov
xchg
jge
sbb
mov
mov
aaa
je
ja
sbb
lock
dec
dec
xchg
mov
mov
mov
dec
ljmp
mov
movsl
xchg
sbb
mov
and
sti
out
mov
scas
push
mov
rolb
testl
jmp
cmp
sbb
dec
aam
sbb
fldt
loopne
mov
shrb
pop
pusha
cs
insl
int
mov
shrb
dec
mov
and
shl
or
fsts
outsl
push
pop
xchg
xchg
and
mov
xor
jp
mov
lcall
insb
mov
popa
ret
dec
sarb
loope
jmp
pusha
je
lret
call
mov
nop
cltd
mull
pop
ret
out
xor
daa
lcall
pop
ja
gs
adc
push
out
shr
and
adc
pop
scas
test
out
sub
and
push
lahf
fbstp
fidivs
je
sbbl
ret
iret
push
adc
dec
in
mov
xor
jnp
adc
inc
xchg
mov
inc
mov
popa
jo
add
and
dec
bound
mov
pop
and
jp
out
dec
pop
mov
xchg
push
jo
cmp
dec
sbb
iret
push
xchg
pop
orb
mov
jae
cmp
mov
jmp
push
movsb
mov
and
fmul
pusha
xor
hlt
dec
stos
out
dec
adc
dec
in
iret
dec
sbbl
dec
adc
sub
add
jmp
push
lods
fildll
cld
xor
test
pop
jecxz
sub
in
or
pop
sub
xchg
leave
dec
push
jge
xchg
adc
pop
push
sub
push
adc
cmc
movsl
xchg
mov
jp
ljmp
pop
out
xchg
mov
pop
push
test
cltd
push
outsb
cmp
lds
stos
loope
mov
dec
lret
repz
addr16
push
push
rorb
mov
mov
inc
clc
loope
out
filds
out
notb
dec
pop
sarb
js
sti
fnstsw
inc
inc
adc
xchg
inc
jmp
fisttps
cmp
cmp
lock
or
xor
dec
mov
aam
bnd
movsb
sbb
push
inc
xor
sarb
mov
sub
addr16
out
ret
sbb
aas
cmp
or
cmp
cmp
adc
pop
mov
lea
pop
fcoml
add
push
jns
aas
dec
scas
mov
aad
and
xchg
loopne
pop
int3
dec
iret
lods
lahf
sahf
adc
adc
pop
pop
cwtl
movsl
popa
xlat
lea
cmpsl
and
test
das
les
jnp
push
and
aam
push
and
into
sbbb
lds
popf
sbb
xchg
add
in
adc
push
mov
xor
pop
mov
and
cli
ficoml
adc
iret
int3
sub
sub
pop
lret
lcall
outsb
jle
cs
jo
out
add
pop
dec
or
push
adc
mov
xchg
jne
ss
into
iret
adc
in
enter
rcl
shll
repnz
xchg
pop
pminsw
incl
std
pop
leave
push
mov
fnstcw
aad
cld
out
mov
add
repz
pop
testb
jbe
lea
iret
adc
je
pushw
call
aad
rcll
adc
mov
jp
int3
sub
push
in
ret
out
clc
scas
insb
push
insl
or
push
mov
mov
imulb
dec
fstps
insl
fs
stos
test
xchg
lea
addr16
insl
dec
fsubl
nop
adc
popa
dec
add
loopne
add
push
aad
adc
mov
xchg
icebp
cmpsl
iret
lret
mov
push
repz
loopne
rorb
in
sub
into
pop
fsubrs
out
push
iret
pushf
jle
filds
sub
jb
jmp
mov
pop
adc
andl
add
sbb
sub
jmp
mov
data16
mov
pop
cltd
cmp
negl
ds
fwait
adc
adc
jbe
test
inc
mov
das
jmp
cmp
es
push
int3
fldl2e
mov
sbb
jg
jb
dec
and
iret
aaa
or
gs
pop
mov
xchg
lea
jo
loope
jl
cmc
loop
push
pop
into
mov
call
pop
int3
mov
push
push
hlt
repz
pop
push
and
cli
nop
dec
shlb
jecxz
inc
test
mov
fiadds
jno
iret
sti
pop
or
jnp
mov
jb
aaa
fdivrl
or
pop
icebp
dec
rcll
pop
aas
inc
xchg
dec
mov
fsub
cmp
dec
adc
push
and
dec
pop
cmp
adc
rcl
sbb
out
jmp
scas
out
stos
xchg
into
jnp
lret
pop
dec
jns
mov
xchg
xchg
cs
inc
inc
or
adc
negb
fcomps
cs
mov
dec
pop
mov
in
outsl
fs
cmpsl
imul
aad
inc
sbb
xchg
sahf
repnz
mov
aad
pushf
aas
mov
pop
lock
cmp
inc
or
imul
sub
lret
mov
jo
addr16
push
pop
mov
test
xchg
cltd
repz
movsb
pop
mov
xor
call
mov
mov
inc
call
or
aas
push
fsubrl
std
adc
xchg
push
nop
sub
insb
ds
bnd
xchg
clc
outsl
mov
add
mov
fcomps
pop
and
jge
incl
pop
repnz
bound
and
dec
pop
adc
mov
dec
cs
aas
cmp
mov
cltd
arpl
mov
jl
push
arpl
mov
iret
std
jbe
mov
mov
leave
add
faddp
jge
mov
inc
fidivrl
xchg
iret
mov
pop
add
fisttpl
pop
lret
ud0
mov
ljmp
imul
faddl
xchg
sub
jmp
iret
pop
sub
push
aam
xchg
mov
ficomps
sub
xor
fimull
dec
dec
sti
xor
xor
push
pop
orb
int
in
int
hlt
ja
es
or
aaa
scas
adc
es
xchg
mov
cmc
nop
mov
orb
push
fistps
mov
leave
fsubrl
mov
imul
jp
adc
push
xchg
out
sarb
outsl
push
scas
pop
mov
out
fiadds
push
movsl
or
enter
addr16
pop
xchg
jl
lcall
aas
iret
test
lcall
xchg
std
jns
div
adc
pop
ret
adc
fcomip
lock
jecxz
jmp
pop
lret
pop
jae
pusha
pop
push
movsl
jmp
mov
cli
pop
xchg
dec
mov
or
dec
cli
adc
dec
notb
popa
data16
addr16
int
mov
dec
aas
iret
push
cmpsl
int3
add
fsubr
sbb
daa
pushf
mov
pop
jl
and
jl
ficoms
iret
out
sbb
test
inc
mov
or
add
dec
insb
dec
or
pushf
and
int
gs
push
and
js
and
cmp
mov
jmp
add
sti
divb
hlt
scas
leave
fcom
inc
movsl
outsb
pop
loopne
cld
mov
repz
sub
jne
lcall
push
mov
ja
sub
pop
fs
jg
ja
jl
mov
sbb
mov
nop
imul
enter
int3
icebp
sub
mov
push
mov
shr
lret
stc
nop
fsubs
xor
pop
pop
pop
repnz
sub
cmp
dec
pop
out
xchg
mov
xor
inc
adc
nop
lds
es
mov
mov
int
xchg
orl
jg
pop
stc
cld
test
popl
test
xchg
into
add
cmc
clc
fwait
dec
ljmp
aaa
ds
jge
mov
fdivrl
xlat
lea
into
cmc
dec
lret
jge
mov
aam
jle
jno
nop
sarb
pop
bound
dec
push
push
sti
cmpb
push
das
dec
clc
xchg
cs
push
mov
dec
dec
loop
mov
loop
mov
in
sub
jnp
leave
adc
and
fwait
icebp
cmp
test
mov
pop
cmp
mov
xchg
jg
mov
pop
or
jl
test
and
sbb
or
xor
xchg
adc
mov
rcrl
mov
jge
mov
mov
nop
sarb
mov
pop
rorl
or
arpl
jo
notl
int3
mov
push
xlat
pcmpeqw
outsb
dec
repnz
arpl
pop
dec
xchg
divb
pop
mov
out
ret
pop
movsb
mov
xchg
inc
mov
and
pop
mov
mov
aam
adc
inc
pop
jae
xor
cli
cltd
jae
clc
outsb
inc
stc
add
scas
inc
xchg
pop
aaa
clc
sub
jbe
add
lahf
in
jno
sbb
xorb
in
sub
push
inc
sti
dec
sub
jbe
ret
pop
cltd
adc
test
jns
cmp
jnp
test
sti
jb
shrb
filds
bound
iret
inc
enter
xchg
pop
mov
subl
popf
lret
jo
adc
add
jo
aad
int3
mov
fdiv
cmpsl
out
add
sub
mov
inc
adc
bound
cmp
lods
push
sbbl
and
adc
into
xor
outsb
test
or
test
pusha
or
test
les
mov
push
iret
mov
and
or
inc
push
nop
adc
sahf
bound
xor
sti
dec
pop
push
dec
cmpsb
jbe,pt
fsubl
neg
fisttps
jmp
fcompl
lret
test
pop
stc
rcrl
push
subl
mov
jbe
jnp
inc
sbb
sub
jo
dec
or
out
jp
dec
mov
or
sbb
mov
and
int
jecxz
or
out
out
popa
jae
xchg
dec
repz
bound
adc
adc
cmp
stos
jecxz
popf
rorl
jp
shl
movsb
fdiv
rcr
fcom
mov
jecxz
bound
mov
sub
jecxz
and
fdivrs
mov
rcl
jp
pop
leave
mov
nop
ror
cmp
pusha
test
xchg
mov
dec
es
stc
aad
hlt
repz
cmp
xlat
or
jg
jb
andl
or
inc
push
pop
dec
mov
cwtl
sti
gs
pop
push
daa
jecxz
add
xchg
in
pop
ficompl
pop
sub
and
arpl
sbb
sub
mov
ds
cmp
push
int
into
sarl
inc
clc
loopne
mov
fisttpl
fucomp
shlb
daa
and
sub
gs
jp
cmp
mov
pusha
jno
jp
pop
popf
movsb
incl
sti
mov
sahf
cmp
mov
daa
xor
pop
fchs
pop
lret
sarl
fisttps
dec
icebp
sub
pop
inc
fsts
pop
cmp
mov
push
aaa
bound
scas
repz
pusha
pop
xor
rcr
inc
cwtl
mov
lahf
daa
adcl
pop
xchg
rcrb
lea
inc
dec
leave
cwtl
test
push
sub
in
xchg
push
push
xor
mov
into
jle
aad
and
xchg
xor
inc
mov
test
lahf
pop
orl
je
loope
cmp
aaa
adc
adc
scas
scas
or
ret
out
inc
mov
pushf
addr16
in
sbb
rol
lret
je
lcall
and
aad
iret
jno
xchg
and
adc
and
add
or
cli
outsl
fucomi
popf
out
lret
cmpsb
cltd
loope
int3
cmp
mov
jge
fisttpl
jmp
loop
xchg
push
lcall
lret
scas
sub
xchg
inc
int
lret
adc
dec
aaa
movups
aas
mov
iret
pop
mov
hlt
iret
pop
fisttps
pop
xchg
notl
lcall
enter
push
push
fdivrs
addr16
aam
or
dec
jno
dec
ja
jb
aaa
xor
mov
mov
repz
push
jns
aas
cmp
lret
mov
loopne
jl
xchg
lds
sahf
and
mov
or
adc
xor
cltd
jl
mov
mov
idivl
mov
mov
or
bts
mov
pop
push
in
mov
jb
int3
into
stos
pop
int
sbb
and
lret
dec
push
insb
cmc
ljmp
fcoml
repnz
nop
dec
into
popa
cli
int
inc
sub
icebp
in
int3
adc
mov
jns
imul
fnstsw
fistpl
sub
push
and
ret
jecxz
sub
mov
sbb
addr16
sub
adc
lds
das
ljmp
sub
adc
push
or
adc
pop
cltd
jge
xchg
out
aaa
cmpsb
push
shl
addr16
push
leave
outsb
jmp
mov
sbb
int3
dec
outsl
sub
cwtl
push
data16
and
enter
shrl
clc
pop
dec
or
sbb
repnz
pop
push
pop
sub
sub
movsl
mov
out
pop
pushf
sub
mov
or
test
sub
jmp
mov
cmp
xlat
sub
nop
jge
xlat
mov
xchg
ja
in
mov
xchg
push
or
sahf
out
mov
lcall
add
sbb
daa
movsl
gs
mov
cld
push
jbe
xorb
idivl
rclb
mov
add
faddl
xlat
mov
pop
outsb
dec
testb
fsubs
in
push
outsl
lea
push
pop
jge
and
sbb
pop
js
ljmp
jp
mov
and
cli
imulb
dec
repnz
mov
js
xlat
mov
outsb
xchg
fildl
mov
push
ljmp
mov
lahf
cmc
aam
mov
jp
popl
test
mov
mov
and
push
xchg
mov
cmp
int
mov
lret
lahf
leavew
xchg
sti
mov
fidivrl
push
ljmp
pushf
jns
fisubs
cmp
dec
mov
sbb
xchg
and
sbb
int3
jecxz
fmul
mov
inc
inc
dec
dec
and
jecxz
mov
loop
sub
pushl
int3
pushl
shr
ficompl
dec
sbb
andb
arpl
fcmovnu
cs
mov
sbb
shrl
cld
ja
and
sub
lcall
fdivs
dec
test
scas
les
dec
cli
lahf
ljmp
push
mov
pusha
xchg
negb
shr
sbb
push
loop
test
scas
adc
xlat
lds
mull
rclb
fstps
cmp
adc
pop
femms
mov
adc
cmp
cmp
add
cmpsl
or
stos
fwait
xor
dec
pop
dec
repnz
mov
lods
cli
test
mov
jp
fdivp
adc
xor
leave
or
fmul
in
dec
add
in
xor
and
cltd
mov
push
xchg
cmp
movsl
dec
and
es
pop
ret
pop
jecxz
int3
pusha
scas
cs
fdivl
pop
stos
xchg
add
dec
pop
sub
pop
xchg
nop
lods
cltd
push
pop
repnz
mov
fadds
dec
fiadds
and
add
sarb
push
mov
loop
xchg
pop
inc
and
push
shll
into
bound
dec
nop
mov
js
shr
gs
pop
adc
fidivs
lret
lret
fistps
mov
sbb
fs
inc
mov
jmp
mov
xchg
push
push
int3
jg
xchg
cli
fimull
les
scas
sbb
cmp
mov
out
or
xor
shl
sub
aaa
aaa
sti
test
pusha
repz
jecxz
subl
leave
ljmp
std
out
ja
les
and
push
and
negl
or
imul
and
outsb
addr16
cli
mov
mov
mov
aad
xchg
mov
mov
js
pop
fdivr
lahf
aam
scas
lcall
out
mov
std
inc
dec
int
cli
xchg
daa
adc
inc
int3
jmp
es
mov
and
mov
pop
mov
add
mov
clc
cmc
or
iret
stos
jo
xor
dec
or
loope
sub
mov
push
push
xorl
cltd
es
and
cli
pop
and
jbe
aas
cmp
xor
sti
cmp
stos
mov
ljmp
test
fisttpl
sub
or
out
out
dec
sahf
fidivrl
cmpsl
xor
fisttpl
inc
fildl
and
lret
pop
inc
jns
shrl
lea
dec
add
jp
mov
int3
insl
mov
inc
jnp
dec
sub
sub
mov
push
repz
stos
and
int3
or
cmp
jge
jno
int
cli
push
jo
xchg
mov
jno
psrad
mov
mov
scas
adc
pop
insb
mov
push
jl
in
jb
cmpsb
int3
out
dec
lret
sbb
cmp
into
xchg
lcall
and
cmp
xchg
imul
push
push
sub
addr16
cmpsb
xor
aas
fildll
jae
inc
adc
xchg
pop
iret
dec
dec
sbb
adc
out
and
and
mov
mov
mov
push
pop
mov
xchg
adc
addb
push
mov
pop
cli
mov
mov
out
cmpsb
jmp
sbb
xchg
mov
ljmp
out
out
add
or
shl
sti
fmuls
or
push
fbld
push
push
pop
pop
jecxz
xor
iret
mov
and
jnp
lahf
push
mov
mov
cmp
out
or
pop
lods
xor
push
cld
je
inc
add
inc
mov
movsl
stc
in
mov
cmpsl
cmovnp
adc
adc
adc
mov
sbb
call
sbb
push
in
and
mov
outsl
inc
dec
jl
or
repnz
push
testl
mov
clc
sbb
xlat
jmp
ljmp
fldt
filds
stos
ret
dec
add
adc
in
ljmp
bound
jnp
mov
cli
cmpsl
and
dec
mov
and
repnz
rolb
dec
cmp
pop
push
sub
fmull
or
loop
cli
push
out
xor
inc
xor
sbb
push
inc
push
xchg
daa
mov
add
test
pop
cmp
orb
cmpsl
mov
bound
leave
pusha
ret
shl
dec
dec
jle
enter
mov
inc
ja
movsl
movsl
cmp
out
push
fildll
dec
or
fimuls
ror
ljmp
jae
js
repnz
mov
daa
push
in
nop
mov
pop
mov
xor
jg
push
out
cli
testb
in
xor
mov
mov
dec
cmp
mov
jae
aas
pop
sbb
sbb
sbb
cmc
mov
push
lods
jle
enter
iret
pop
fistpll
mov
pop
loope
sbb
call
imul
push
pop
dec
clc
mov
xchg
or
bound
test
or
push
das
imul
jns
gs
or
repnz
stos
shlb
mov
or
insb
jmp
sub
inc
pushf
dec
xchg
pop
mov
cmp
mov
inc
pop
aas
or
icebp
lds
orl
jp
cli
or
xchg
fsubs
test
test
push
push
lcall
iret
jp
or
or
push
pop
mov
cli
push
mov
pop
loop
mov
dec
dec
xchg
ljmp
fdivrs
push
aam
push
popf
movsl
out
xchg
test
mov
jb
push
cmp
cmp
or
cmp
imul
out
pop
adc
outsb
cli
pop
shlb
int
out
int3
mov
jp
fwait
push
cwtl
rclb
xchg
or
into
jge
push
xchg
ljmp
push
iret
adc
pop
js
push
icebp
dec
jg
lret
xorl
adc
pop
les
add
mov
mov
mov
push
adc
jge
fistps
mov
add
jo
ret
adc
mov
aas
stos
pop
or
xchg
push
int3
pushf
fmulp
std
xor
add
cmpb
sub
cltd
inc
cmpsl
cmc
mov
dec
divb
fistps
lahf
mov
mov
stos
pop
imul
in
jmp
or
xlat
mov
xor
pop
jb
in
mov
fadds
and
jnp
dec
cmp
adc
repnz
out
jo
icebp
insb
mov
mov
dec
fstpt
mov
call
or
xor
mov
lret
mov
mov
inc
mov
aad
iret
aas
lock
loop
dec
into
mov
dec
addr16
in
cmp
push
insl
das
cs
mov
adc
int3
dec
fistpll
sbb
pop
insb
shlb
push
out
aaa
into
sub
aas
in
ficoms
ret
aaa
in
mov
jecxz
mov
imul
or
dec
gs
or
pop
inc
sbbb
sub
lods
push
int
orb
lods
and
inc
aam
xor
push
or
arpl
or
adc
xchg
in
pop
lods
sti
dec
hlt
lret
aad
sbb
adc
bound
add
sti
mov
sti
filds
cmp
arpl
mov
jbe
out
repz
das
clc
negb
pop
mov
movsb
jmp
mov
dec
or
fcoms
outsl
jae
jp
aad
xchg
aad
frstor
push
add
test
js
cwtl
and
ficomps
and
mov
repz
sbb
int3
push
jne
adc
push
inc
jo
test
or
cli
andl
mov
ja
ljmp
mov
cmp
push
mov
loop
mov
pop
fdivl
lret
jecxz
xchg
dec
add
bound
jl
fmull
mov
or
cmp
ja
dec
pop
insb
mov
das
sbb
int3
sbb
icebp
add
in
dec
mov
fsubl
mov
scas
pop
test
push
adc
or
repnz
or
loop
cmp
xor
push
inc
lcall
cmp
xlat
push
or
ss
inc
test
scas
sub
call
mov
pusha
leave
pop
std
movsb
xor
fisubl
or
mov
ds
stos
add
sbb
das
inc
push
or
xor
cs
lret
stos
enter
or
jns
les
mov
inc
insb
iret
movsl
mov
outsb
mov
in
mov
out
gs
pop
pop
cmpsb
in
xlat
jecxz
pop
in
push
cmpsl
out
aam
ficompl
subl
popa
push
aaa
stos
fdivl
jecxz
xor
mov
ret
aam
stos
xor
mov
add
mov
in
fmull
xchg
xchg
jg
cltd
je
cmp
fdiv
jp
ds
sahf
not
add
push
fistl
sbb
jnp
nop
adcb
ficoml
cmp
pop
and
pop
mov
mov
pop
add
jbe
xchg
xchg
sub
pop
add
lods
push
pop
ror
iret
pop
int3
scas
xchg
mov
mov
out
jl
cmp
sahf
aaa
mov
outsb
and
cwtl
adc
lea
inc
add
jl
add
decl
push
sbb
lods
jne
lret
or
xchg
inc
cmc
push
lds
movsl
jge
xchg
mov
add
sub
into
inc
call
addb
adc
sub
adc
out
or
shlw
push
dec
sti
cmpsl
bound
push
pop
dec
mov
xchg
xchg
jne
lcallw
inc
mov
mov
bound
dec
pop
pop
popa
clc
mov
sbb
jbe
aad
repz
inc
push
subl
pop
mov
cmp
outsl
mov
std
pushw
jns
shrl
int3
xchg
scas
sbb
std
negl
not
fldt
adc
cmp
pop
push
dec
iret
mov
or
cs
mov
cmp
cmpsl
sarl
lods
or
mov
sub
adc
ficomps
and
in
les
sub
add
subl
loop
xor
sbb
sub
mov
or
iret
lea
rorl
jecxz
in
lods
dec
jl
push
adc
out
jmp
xchg
repnz
sub
sti
push
mov
inc
test
nop
push
aad
push
arpl
mov
movsl
sbb
sub
data16
scas
mov
cld
fstpt
lret
xchg
sbb
mov
aad
ds
stos
andb
mov
adc
out
mov
or
xor
rcrl
ljmp
push
inc
in
lds
cmp
cs
loope
lret
into
xchg
cld
mov
mov
nop
out
pop
sti
mov
insb
adc
decb
xchg
in
hlt
dec
sub
ficoms
adc
or
push
push
or
iret
pop
mov
in
fcompl
mov
dec
dec
adc
inc
dec
fdivrp
or
cs
cmp
cs
in
mov
aas
xor
push
mov
jecxz
push
dec
clc
faddp
mov
sti
outsb
scas
fcom
and
cs
cmp
push
push
cld
iret
jge
out
dec
mov
ror
fadd
cmp
outsb
test
mov
fsts
mov
xchg
jmp
adc
in
add
mov
push
add
in
imul
sti
mov
fisubs
cli
or
sub
jp
fcmovb
dec
pop
call
fprem
aad
lret
sub
sub
xor
sbb
or
mov
pushf
push
sarl
mov
add
dec
sbb
xchg
and
sti
mulb
loope
jbe
mov
push
push
ljmp
outsb
decl
cmpsl
mov
int3
addr16
mov
cmp
lds
dec
inc
jb
cltd
outsl
loope
cltd
push
push
fldenv
push
and
out
mov
cmpsb
or
jmp
or
xor
adc
or
popf
int
push
into
imul
pop
inc
std
ret
das
push
push
stos
scas
dec
push
repnz
gs
or
mov
js
xor
push
arpl
xor
lea
adcb
test
and
sti
out
mov
shl
das
push
mov
jmp
repz
pop
cmp
and
cmpsb
jecxz
repz
xor
lahf
adc
fstp
dec
cld
xchg
xor
jp
iret
adc
mov
xchg
cmp
inc
imul
pop
mov
dec
lcall
push
in
mov
push
shll
ss
mov
lahf
int3
inc
xchg
jl
push
subl
sbb
mov
pop
jecxz
xor
jb
fadd
sbb
int
dec
jl
xchg
out
push
mov
out
lcall
repnz
push
int3
aas
mov
push
lret
mov
inc
ds
mov
sahf
jno
add
pop
in
xchg
fldt
dec
xor
fists
push
sub
repnz
xor
cmp
ficompl
or
outsb
sbb
push
into
push
sti
xorb
enter
dec
lods
aam
lahf
and
mov
sub
in
adc
or
and
lahf
push
cmp
mov
push
and
push
adc
sbb
lret
loopne
jmp
sbb
dec
mov
aas
fisttps
jge
cmp
cmpsb
mov
pop
inc
dec
push
shrl
push
popf
xchg
frstor
dec
ljmp
fldt
std
mov
js
test
lret
mov
das
mov
pop
xor
dec
mov
das
mov
xor
jbe
in
xchg
mov
xchg
fsub
ja
das
in
pop
xlat
popa
fsubrs
insl
add
fwait
out
scas
sub
jmp
test
xlat
jp
int3
cmc
dec
stc
andl
or
push
jge
scas
pop
ljmp
sti
adc
dec
sbb
sub
pusha
cwtl
xchg
hlt
into
dec
or
sub
out
arpl
push
int
pop
or
popa
adc
sub
or
rcll
push
les
cmp
lods
ja
push
ret
push
xor
adc
jle
jp
add
sub
jb
mov
dec
orb
in
aad
shll
xor
dec
in
inc
imul
add
fmull
jno
sbb
mov
cmp
imul
into
push
push
lret
sar
push
jmp
hlt
ret
and
ds
cld
mov
in
or
push
pop
push
mov
jbe
add
bound
nop
iret
ficoml
or
mov
incl
movsl
sarl
jle
xor
inc
pushf
int
out
mov
mov
mov
adc
push
ret
fwait
int3
mov
dec
in
cmp
cli
lods
push
mov
sbb
mov
mov
out
xlat
jns
out
xchg
scas
fwait
sub
jbe
inc
or
icebp
mov
into
out
fucomip
jbe
mov
sbb
std
hlt
and
dec
xchg
roll
cmpsb
pushf
mov
push
xchg
pop
shll
outsl
mov
dec
pop
push
les
and
pop
cmpsl
jg
cmc
dec
shll
pushf
push
mov
icebp
jo
push
push
outsl
mov
bound
iret
pop
enter
or
shlb
mov
or
pushf
aaa
xchg
xor
jle
or
jbe
push
and
js
lods
nop
es
mov
loope
add
pop
inc
rcrl
rcl
xchg
mov
mov
push
jbe
dec
scas
dec
rcr
adc
inc
jo
inc
pop
sbb
sarb
sub
dec
stos
loop
adc
or
dec
fildl
sbb
bound
adc
jb
push
push
cmp
xor
decb
fmul
pop
jp
xlat
cmp
imul
lea
sbb
stos
mov
cmpsb
jg
or
repz
dec
fucomip
jmp
out
xchg
nop
sbb
prefetch
movsb
push
xchg
push
ljmp
orb
cmc
sarb
fsts
push
push
jo
pop
hlt
dec
mov
lret
out
cmp
push
bound
dec
xor
pop
jbe
mov
int
rcr
int3
cmp
popa
imul
or
daa
mov
mov
jae
loope
dec
fsubp
adc
aad
pop
push
insb
dec
xchg
push
cmp
xor
mov
jno
push
push
and
fst
test
mov
xor
into
and
pop
hlt
mov
jl
push
inc
out
outsl
push
mov
or
bound
cmp
ror
call
repz
bound
mov
push
jg
sarl
xchg
stos
pop
push
push
repnz
xor
iret
adc
mov
in
mov
movsb
inc
sbb
outsl
inc
sahf
cld
jle
cmpsb
jl
out
pop
cs
xor
cli
out
sbb
push
das
inc
lret
push
roll
xor
lret
sub
hlt
or
fsubrs
dec
iret
outsl
xor
pusha
cmpsl
cmp
bswap
cs
outsb
neg
cmpl
movsl
push
pop
pop
sub
scas
ja
or
fs
and
mov
filds
push
adc
pop
mov
dec
push
xchg
lods
dec
aas
xchg
push
leave
lahf
daa
ds
lock
push
dec
ss
outsl
aad
daa
arpl
lods
lea
mov
sub
popf
push
inc
and
mov
push
mov
pusha
or
popa
cs
out
pop
aad
inc
sub
pop
add
pop
push
int
adc
add
js
xchg
cmc
dec
jne
push
mov
push
push
popa
inc
or
mov
outsl
mov
in
loop
mov
test
aas
je
pop
bound
pop
lret
fistps
jecxz
ljmp
fmulp
xor
adc
lods
mov
scas
outsb
loope
mov
sbb
add
xchg
xor
mov
rcrb
imul
lock
mov
incl
dec
lret
adc
pop
push
sub
sub
mov
xchg
mov
or
cmp
or
cmp
push
sbb
pushf
hlt
mov
sbb
clc
sbb
or
leave
shr
pop
jae
out
inc
sarb
inc
cmp
jle
cltd
sub
xor
push
dec
cmpsl
and
aad
adc
call
pop
pushf
cmp
pop
dec
push
mov
xor
jnp
add
adc
push
scas
pop
les
lret
addr16
pop
cltd
sub
mov
pop
sub
dec
andl
xor
fucomi
je
mov
out
in
stos
mov
rcll
mov
mov
sub
adc
pop
pushf
push
movsl
dec
sbb
dec
jnp
sub
cmp
cmp
adcl
movsl
or
push
sbb
out
cwtl
dec
out
das
jge
aas
adc
clc
adc
jns
daa
or
mov
icebp
sbb
lods
dec
das
or
mov
xorb
jl
sbb
mov
cmp
ljmp
rorb
fs
jle
mov
jp
rorb
dec
adc
lods
pop
dec
mov
mov
ljmp
jle
iret
lahf
dec
jne
cld
fistl
pop
and
loope
andl
lahf
js
mov
inc
bound
testb
lret
addr16
or
idivl
lret
mov
xor
mov
call
pop
in
stos
pop
pop
pop
push
adc
xchg
notl
mov
xchg
clc
and
mov
cltd
pop
ja
xor
xor
mov
mov
xchg
fnsave
xchg
dec
pop
mov
insb
push
out
push
dec
fistl
mov
xor
sbb
cltd
aad
xor
xor
xor
push
or
test
or
jmp
sub
sbb
loop
std
or
pushf
enter
popa
and
mov
mov
xor
pop
stos
dec
faddp
bsr
mov
aas
fsubrl
fiadds
fisubrs
inc
insb
mov
sub
xchg
ss
iret
adc
mov
dec
mov
sbb
rorl
sbb
mov
add
in
push
jl
push
mov
or
sbb
jmp
cmpsl
mov
mov
iret
mov
fnstenv
pop
pusha
and
mov
outsb
mov
rorb
sbb
das
or
mov
or
mov
cmp
scas
adc
loop
and
fisubrs
jg
dec
push
mov
sub
or
jbe
sbb
stos
out
lret
jp
inc
sbb
pop
lock
push
mov
popa
les
int
inc
pop
xorb
in
lods
je
test
leave
loope
sbb
and
int
pop
dec
dec
and
dec
scas
insl
mov
into
jmp
test
leave
lods
inc
mov
imul
ret
rcrb
adc
sti
fdiv
std
in
and
fmull
in
lahf
div
popf
decb
out
xchg
iret
jbe
cmp
in
lret
mov
fwait
or
inc
test
mov
mov
mov
aaa
fst
fimuls
nop
test
das
xchg
sbb
iret
cmp
inc
pop
sbb
adc
jo
mov
imul
lcall
adc
adc
mov
jbe
cmpsl
and
push
mov
std
into
xchg
lock
in
push
dec
jle
jbe
or
inc
lock
ss
fdivl
mov
adc
out
jmp
push
mov
nop
xchg
sub
push
sub
cmp
stc
enter
cmpsb
sbb
sahf
xorl
int3
xchg
mov
hlt
nop
xchg
jmp
mov
or
idiv
repnz
stos
into
lods
je
shrl
shl
dec
sub
pop
loopne
jb
or
pusha
push
mulb
dec
test
pushf
cmp
pop
sbb
xorb
hlt
lret
scas
rorl
iret
mov
out
loop
inc
mov
aas
fisttpl
mov
sbb
out
popf
pop
hlt
inc
in
xor
mov
mov
subb
jae
imul
popa
jmp
out
and
sub
rorl
push
gs
sbb
ret
sbb
sub
adc
inc
lcall
clc
mov
testb
xchg
aam
sarl
xor
dec
mov
or
insl
push
sbb
inc
out
and
mov
xor
pop
xchg
test
cmc
jo
outsb
cmp
enter
inc
sbb
push
jbe
nop
popa
iret
adc
cmp
fists
sub
sub
pop
mov
mov
push
mov
setne
int
mov
sti
xchg
test
fimull
into
pop
ljmp
dec
into
aas
cmpsb
inc
out
adc
roll
bound
dec
sbb
fimull
imul
sbb
jp
rorl
decb
pop
sub
mov
mov
mov
inc
addr16
and
and
fcoml
fistpll
adc
repz
scas
or
addr16
and
scas
jmp
cmc
and
outsb
jns
mov
mov
pushf
in
lret
mov
push
add
jp
clc
fisttpl
enter
roll
sub
clc
mov
rcll
jne
push
adc
cmc
inc
sbb
jbe
inc
lahf
shr
pop
xor
repz
jmp
pop
cli
test
int3
mov
sub
pop
fsubr
xor
insb
adc
inc
or
push
jo
sbb
jae
dec
dec
roll
fstps
into
mov
nop
and
das
or
gs
fldl
jle
fcmovne
inc
pop
icebp
ds
nop
adc
xchg
xchg
pop
out
lea
pop
fwait
jge
mov
rcll
push
ljmp
jmp
test
cwtl
repz
jbe
adc
iret
xor
andb
dec
and
jp
mov
sbb
bound
sbb
or
jg
rclb
vsubpd
mov
jmp
pop
fmull
mov
xlat
or
mov
les
cmc
mov
rol
je
mov
aas
fimull
in
dec
mov
ss
adc
cli
decb
adc
sbb
dec
loope
bound
pop
dec
pushf
mulb
jmp
loope
outsb
subb
adcb
sub
clc
sub
xchg
cmovae
stos
pusha
out
dec
pop
out
fildll
ss
stc
push
jp
xchg
sti
fsubr
ficoml
inc
into
push
mov
sbb
movsb
mov
mov
dec
jmp
pop
cmpsl
pop
add
out
cli
jl
pop
mov
jmp
ficomps
andb
es
pop
sbb
jl
test
stc
lcall
jnp
cmp
pop
fadds
cwtd
jmp
sub
mov
pop
sbb
mov
xchg
pop
xor
pop
sti
pop
je
xor
sahf
adc
cmc
lret
in
hlt
js
lcall
dec
testl
xchg
inc
xor
cmp
or
test
dec
mov
xchg
cld
push
shrb
xchg
dec
in
fnstcw
sub
in
fdivrl
sub
jp,pn
jg
or
pusha
sahf
dec
inc
pushf
mov
or
clc
out
xor
and
sub
and
cmpsl
sub
jg
push
dec
jg
or
pop
fwait
lea
pop
pop
fbld
push
adc
aaa
pop
lret
sti
lcall
dec
mov
mov
sti
cmp
ljmp
ss
dec
iret
in
lcall
add
push
dec
idiv
push
jl
shll
out
cmp
jmp
xchg
mov
pusha
fisttpl
cltd
pusha
xchg
mov
pop
lds
mov
rcrl
clc
mov
ljmp
movsl
das
add
pop
popf
cmpsb
jl
adc
jne
mov
es
je
jno
inc
xchg
push
daa
cmp
dec
pushf
paddq
pop
insb
pop
ret
jl
dec
mov
xchg
int
jbe
int
inc
push
mov
inc
sbb
pop
xchg
aas
pop
out
xchg
fs
fidivs
icebp
jmp
orb
push
out
sbb
pop
or
xchg
mov
ss
pop
dec
dec
add
dec
mov
mov
and
jecxz
push
fidivrl
fs
iret
inc
int3
mov
dec
jp
dec
das
fistpll
repz
loope
cs
repnz
xor
insb
jp
cwtl
sbb
fadds
ljmp
add
cmp
cwtl
iret
xchg
lods
cmp
cltd
mov
adc
sub
pop
sarl
jae
cmpsl
xorl
subl
dec
mov
add
mov
lods
adc
pop
cmp
cs
cwtl
iret
cli
pop
out
inc
push
ret
mov
adc
cmp
ljmp
fneni(8087
ficompl
js
in
pop
ffreep
jmp
and
pop
subl
mov
lcall
lret
ljmp
push
clc
insl
mov
jg
mov
mov
mov
pushf
push
dec
mov
push
out
pop
jae
dec
clc
pop
fistpll
push
nop
push
sbb
int
aaa
ljmp
jl
icebp
scas
mov
fsubl
push
cwtl
fisttps
mov
dec
out
adc
out
adc
aaa
loop
aaa
test
mov
cmpsb
fsubrs
pop
push
rcl
movsb
pop
lret
lret
add
dec
ficomps
xchg
jmp
stos
push
orb
mov
test
insl
movsl
or
inc
cmp
jno
sti
jns
cs
cli
dec
cltd
push
or
push
sbb
imul
dec
dec
xchg
push
pop
cmp
push
jp
xchg
push
mov
xchg
push
lcall
jmp
push
jmp
mulb
dec
stc
ds
inc
cmp
push
mov
sub
adc
cmp
in
into
jnp
into
cld
subl
test
int
repnz
and
pop
push
divb
bound
mov
out
adc
imul
sbb
ds
call
lea
out
leave
jmp
sbb
mov
ds
sbb
jb
jg
int3
shll
mov
insb
sbb
aad
xor
mov
sub
cmp
cmp
out
pop
jl
adc
leave
clc
or
lret
and
push
lods
mov
aaa
sbb
fs
leave
pop
add
xchg
fdivrp
jl
sbb
setae
sub
imulb
dec
xor
mov
aaa
sbb
mov
gs
xchg
dec
sahf
or
cs
jge
in
push
les
jmp
ret
jp
mov
sbb
push
or
loop
leave
stc
mov
fst
and
addr16
into
not
stos
pushf
and
sbb
push
add
mov
lret
ss
or
sub
dec
sub
insl
lea
sub
cld
mov
mov
xor
sub
mov
sar
xor
adc
mov
mov
dec
test
cmp
mov
cli
mov
ljmp
iret
sahf
push
push
and
leave
ud0
mov
pop
pop
pop
dec
test
mov
dec
jnp
out
cld
imul
lret
mov
aaa
jb
sub
mov
aas
mov
jae
adc
test
fidivl
cld
mov
xchg
repz
or
push
ss
sti
and
cmp
dec
mov
call
jecxz
add
lds
call
jle
push
mov
bound
or
add
fildll
out
cmpsl
fidivs
inc
sbb
push
add
out
in
jle
xchg
lea
xor
mov
pop
mov
push
pop
push
mov
push
movsb
push
sub
sbb
dec
mov
sbb
aas
push
lret
pusha
jp
inc
shlb
popa
lds
ss
rcll
or
mov
mov
shrl
and
sbb
jns
jae
scas
mov
lea
stos
out
mov
inc
sub
lret
add
iret
call
mov
sbb
aas
out
cli
imull
addb
dec
push
and
sbb
push
or
and
dec
cs
xchg
adc
sbb
mov
lods
xorb
push
xchg
in
dec
idiv
lcall
imul
push
pushf
test
fcmovnb
cli
pop
dec
or
sbb
pop
out
call
in
add
fsubrs
or
push
mov
pop
adc
hlt
shrl
fistpl
das
mov
fidivrs
movsb
add
test
jno
sbb
mov
aas
adc
lock
leave
adc
fsub
fimuls
cmpsl
inc
roll
jb
loopne
xchg
cmp
push
aas
or
mov
mov
pop
sbb
adc
push
sub
jp
outsl
decl
lock
fsubs
sti
pushf
loope
push
orb
lret
int
xchg
repz
and
movsb
hlt
test
ljmp
and
cmp
aam
xor
add
sbb
mov
cmp
mov
ret
dec
mov
aas
cmp
clc
pop
jge
or
int3
cmp
out
hlt
mov
lea
pop
iret
jg
ret
add
dec
cmp
mov
stos
push
sub
les
lock
mov
out
mov
mov
jbe
iret
bt
sarl
cld
in
lock
ficoml
insl
push
test
push
int3
stos
insb
pop
loop
push
push
leave
scas
or
addr16
push
int3
jmp
outsl
inc
xchg
mov
mov
add
jno
hlt
jb
rcl
mov
inc
or
daa
mov
mov
test
adc
cmp
adc
stos
push
movsb
jle
int
inc
mov
int3
loopne
lret
lods
pop
and
mov
fimull
in
test
dec
push
pop
sbb
adc
jg
jmp
sbb
jle
iret
mov
iret
ficompl
mov
jmp
mov
adc
jge
and
lods
fstl
mov
jae
xchg
aas
lcall
fdivrs
lea
push
jo
pop
cmp
stos
decb
repnz
shlb
mov
daa
mov
dec
cmp
ljmp
or
out
cmp
das
out
pop
loop
movsb
movsl
mov
cmpsb
mov
das
push
adc
adc
scas
fs
cld
repnz
sub
sub
mov
sarl
lea
rclb
mov
and
das
and
div
pop
adc
push
pop
gs
add
jns
out
add
sbb
cmp
mov
jge
movsl
adc
lock
jne
dec
sub
hlt
mov
mov
mulb
and
dec
dec
mov
jecxz
xor
pop
addr16
int3
hlt
push
adc
mov
jns
pop
mov
adc
pop
dec
jns
cli
and
pop
loopne
dec
pop
shr
mov
je
test
hlt
jle
push
xor
imul
inc
pop
jmp
test
adc
stos
and
mull
pushl
rcll
mov
xor
adc
call
out
fcmove
pop
push
outsb
xor
cmpsl
mov
flds
jb
das
mov
inc
mov
mov
pop
aas
das
arpl
and
add
lret
ljmp
jge
and
je
inc
pop
pusha
jmp
mov
dec
or
and
jg
adc
adc
adc
out
and
rcrb
sbb
push
nop
adc
xor
dec
push
xchg
push
fisttpl
push
mov
shl
adc
lcall
cmp
jmp
push
cld
mov
sar
pop
fucomip
fisubs
xchg
push
pop
push
fwait
jge
or
lds
rolb
loope
mov
je
add
xchg
test
repz
std
scas
fmul
add
jae
inc
pop
xorb
and
adc
lret
and
in
fisubl
jno,pn
fisttpl
push
fcomps
lea
cld
outsb
in
addl
mov
popf
adc
push
cmp
and
sbb
lds
aam
or
in
js
pop
lock
clc
sahf
ds
out
das
add
dec
xchg
pop
push
mov
int
adc
mov
cmp
mov
sbb
mov
cmp
xor
lods
out
inc
shl
xlat
push
pop
pushf
jmp
hlt
idiv
dec
mov
xchg
xor
xlat
popf
sti
es
xchg
xor
lea
in
jmp
lret
insl
ror
sahf
cmp
hlt
jne
dec
pop
push
jmp
and
mov
sub
pop
jne
sub
test
cmpsb
add
xor
cwtl
jae
inc
fcompl
scas
dec
mov
and
mov
pop
adc
rolb
xor
xor
dec
fisubrl
fisttpl
push
cwtl
imul
pop
setle
jb
mov
or
adc
test
inc
out
lods
stos
jl
fdivrs
cmpsl
in
insl
xchg
pop
adc
in
or
jno
inc
sub
arpl
xchg
mov
sbb
cli
lds
or
add
xor
xchg
jp
mov
push
dec
jl
sbb
enter
or
loop
flds
imul
sub
out
addr16
dec
adc
sbb
cltd
jmp
notb
sub
push
xorb
imul
jnp
cmp
aam
das
aam
xchg
mov
xchg
ret
outsb
stos
cmpsl
ljmp
iret
dec
dec
stos
dec
out
cld
sahf
sbb
ss
mov
mov
pop
dec
jo
fnstenv
hlt
lea
push
jge
adc
xor
sbb
push
mov
popf
les
dec
or
mov
ret
xchg
pop
mov
xor
inc
es
cli
fldt
fidivs
xor
or
push
out
out
js
sahf
fadds
jns
sti
notl
out
push
stc
lret
imul
pop
sbb
and
adc
cmp
into
jb
or
lock
push
sbb
pop
mov
or
xor
test
out
mov
dec
xchg
ljmp
test
adc
sub
mov
rclb
sbb
cmp
xchg
pmaddwd
inc
test
fs
and
dec
cmp
inc
jge
mov
out
jnp
mov
and
orb
xor
je
imul
push
xchg
sub
dec
arpl
push
addr16
hlt
sar
mov
jmp
test
adc
test
pop
es
lahf
mov
cmp
and
add
sub
add
pop
decl
ss
dec
push
fiaddl
sub
lret
imul
sbb
pusha
sbb
lds
and
incl
stos
shlb
mov
adc
mov
lcall
jno
iret
out
aam
int3
dec
mov
mov
or
clc
hlt
rcrb
int
pop
iret
push
fwait
pop
cbtw
int
lea
jge
and
or
inc
arpl
push
mov
adc
sub
mov
fbstp
mov
sub
popf
dec
fldt
push
sti
mov
outsb
sbb
adc
lcall
inc
pop
mov
outsb
mov
js
or
int
aas
inc
pop
mov
push
scas
dec
into
push
mov
lock
daa
pop
aaa
add
loopne
cmpb
mov
or
push
repz
inc
inc
mov
fistpl
cwtl
mov
sbb
dec
jge
loope
or
cwtl
cmp
jl
imul
push
adc
push
mov
mov
or
in
xchg
rcr
push
xchg
outsb
push
aas
jmp
or
dec
out
cmpsl
insl
fiadds
push
mov
hlt
mov
int
push
xchg
mov
xchg
bound
scas
sub
jle
hlt
mov
mov
xchg
mov
and
fsubrs
sbb
jg
adc
or
dec
jo
pushf
aas
mov
scas
xchg
pop
scas
iret
int
inc
in
fsubl
xor
std
jg
mov
add
and
push
cmp
mov
ljmp
stos
push
mov
fistl
jns
pop
xchg
aad
pop
jecxz
shrl
sub
out
lret
pop
sahf
push
stc
sub
cwtl
sti
dec
inc
aad
dec
in
xlat
mov
std
xor
pop
xor
scas
or
push
mov
repz
orl
cltd
cli
cmp
lods
ja
scas
jl
pop
movsl
jg
dec
ficomps
push
cmp
rorb
fnstcw
clc
pop
mov
inc
sbb
adc
in
push
pop
pop
cltd
rsqrtps
fidivrl
add
sar
xchg
and
fists
mov
adc
repnz
dec
push
xor
fstl
cmpsl
dec
cwtl
in
in
jmp
add
xor
pop
mov
mov
fistps
dec
lret
and
or
sarb
lret
loop
imul
sbb
les
in
and
fmuls
push
jmp
int
in
fidivl
pushf
arpl
fwait
or
jmp
bound
sti
stc
xor
fcoms
ficoms
dec
dec
xor
daa
lods
pop
push
add
int
call
shll
jl
mov
repnz
rorb
and
mov
or
addb
push
cmp
bound
adc
xchg
incb
scas
sub
pop
jo
mov
aas
lods
cmp
cli
imul
jno
sbb
js
sahf
xchg
or
out
inc
jmp
cs
sub
notl
out
test
insb
in
mov
mov
add
loope
or
push
and
shr
adc
mov
hlt
push
cmp
leave
cmpsb
stos
mov
sbb
dec
mov
inc
sub
dec
push
xor
mov
mov
shr
adc
aaa
xor
in
and
int
test
dec
scas
push
jo
pop
pop
int3
into
in
pop
lret
xchg
stos
lds
pop
xor
mov
add
inc
lcall
add
pop
jo
scas
mov
sbb
cli
dec
dec
aas
dec
dec
inc
xor
dec
ljmp
inc
out
mov
and
push
ljmp
fisubrl
mov
mov
cmp
jb
fsubrl
bound
int
ret
cs
cmpb
sub
mov
sbb
inc
ljmp
loop
iret
mov
xor
or
ds
mov
or
xchg
dec
in
pop
xchg
cld
mov
push
cmp
adc
pop
dec
cmp
push
cmp
insb
js
cltd
mov
and
negb
push
cmp
xchg
pop
jb
mov
xlat
out
push
adc
repz
lcall
mov
lcall
adcb
add
and
mov
sbb
outsl
fwait
xchg
fbld
out
and
inc
push
dec
fistpll
pop
pop
push
jmp
push
add
mov
inc
sbb
mov
push
subb
adc
xor
xchg
jge
pushf
cli
mov
or
or
icebp
inc
jg
cwtl
push
insl
mov
jmp
lahf
adc
push
dec
fiaddl
stos
lds
in
pop
outsb
sbb
cmc
adc
pop
add
jecxz
lret
ljmp
jb
into
testl
rorl
inc
outsb
push
aas
dec
add
fisubl
fstpt
cs
mov
rorb
je
pop
cwtl
and
xchg
lea
aaa
dec
insl
jbe
sti
into
jns
mov
sub
in
dec
bound
shll
jae
fs
dec
movsb
into
arpl
das
pop
lret
test
filds
mov
sbb
pop
fstpl
dec
dec
and
or
xor
in
jmp
out
fs
or
xchg
push
adc
lock
addb
sbb
xor
fstps
jecxz
fldl
adc
lods
mov
fnstcw
je
xor
jle
dec
jb
icebp
push
dec
iret
push
mov
push
or
stos
jo
jle
out
jp
pop
int3
lahf
push
mov
in
and
inc
dec
jne
jecxz
loop
stos
loopne
push
jno
or
or
lods
sub
scas
pop
xchg
dec
bound
adcb
sub
mov
data16
xchg
xchg
out
sub
xchg
jnp
aad
push
mov
dec
dec
outsb
ds
jns
in
push
fs
mov
push
dec
rcrl
rolb
or
int3
mov
mov
fimull
push
es
inc
push
sub
or
cmp
rclb
fistl
sarl
lods
shr
push
inc
and
dec
lcall
cmc
push
mov
in
std
outsb
pop
mov
cmp
mov
pop
out
lret
loop
aad
leave
push
xor
stos
outsl
adc
mov
mov
pop
lea
mov
hlt
cmpsl
repnz
mov
and
sbb
pop
sbb
daa
daa
in
pop
jb
outsb
jecxz
mov
pusha
insb
rcl
clc
and
push
pop
sub
dec
xor
sbb
pop
mov
cwtd
xchg
dec
mov
add
mov
loope
test
call
xchg
dec
lds
in
imul
xchg
shlb
mov
mov
push
bound
dec
mov
add
popa
cmp
lret
add
and
ficoml
xchg
fld1
pop
stos
stos
outsb
mov
std
fs
daa
hlt
push
or
addl
imul
int
ret
sti
imul
sbb
int3
popa
cmp
and
sub
scas
lret
and
mov
das
mov
leave
das
div
stos
cmp
aaa
fisubs
mov
ror
ret
or
mov
pop
or
pop
xchg
mov
sbb
xchg
add
inc
cld
add
das
sbb
call
test
test
dec
addr16
aam
sub
inc
addb
inc
sub
and
mov
xchg
popa
pop
loopne
dec
adc
in
mov
xchg
int
xchg
mulb
cmpsl
jns
aaa
mov
cli
or
push
lea
lods
dec
push
mov
cmpsb
push
sbb
or
mov
cs
dec
and
sbb
add
pop
dec
insb
dec
inc
push
jle,pn
js
idivl
pop
push
push
dec
sbb
push
movsl
pusha
mov
push
inc
ljmp
pop
imul
sub
pop
shll
into
push
scas
mov
adc
cmp
cmp
outsb
dec
dec
mov
inc
and
clc
ficoml
cmp
dec
lods
jne
pop
fisttps
mov
or
xor
aas
out
in
cmp
add
sbb
testl
add
dec
pop
repnz
mov
jno
or
lret
loopne
mov
pop
outsb
pop
in
jo
inc
repz
das
jb
and
push
jg
adc
out
adc
sub
mov
mov
int
add
iret
inc
or
or
pusha
jp
stc
out
inc
dec
and
mov
stc
mov
cmp
push
dec
inc
pop
int
dec
ljmp
jno
in
rorl
test
xor
mov
jmp
inc
jge
or
leave
ljmp
jl
jne
insb
in
sbb
iret
dec
xor
pop
lahf
into
pop
jne
cld
cld
into
iret
jne
mov
nop
sbb
jecxz
push
jns
adc
shrb
cmp
and
lods
repnz
bound
xor
sub
xchg
fsub
xor
xlat
hlt
jg
dec
rorb
sbb
inc
outsb
mov
and
dec
bound
enter
lcall
popa
insb
hlt
fwait
push
int
mov
sub
mov
in
pop
or
and
stos
cmp
ljmp
cmc
imul
dec
sbb
ss
fucomip
xor
and
pop
push
jmp
scas
sub
dec
lahf
lock
out
fstpt
jecxz
fistps
xchg
xchg
nop
test
add
sbb
js
xchg
push
mov
mov
mov
inc
insb
iret
into
rcl
mov
adc
js
sub
push
mov
adc
popf
popf
mov
or
mov
push
add
or
bound
ljmp
fdivrs
mov
shrl
divb
dec
cmpsl
and
cmpsl
movsl
enter
sbb
dec
out
and
cmc
push
xchg
sub
insl
mov
and
jecxz
mov
fmull
fistpll
fstpt
adc
and
in
mov
jns
std
lds
jns
imul
aas
outsb
push
movsl
jle
test
jo
push
es
cmp
dec
jmp
inc
nop
xchg
pop
pop
pop
shl
or
jle
pop
cmpsl
xchg
pop
jmp
in
pop
and
pop
xchg
movsl
ficoml
push
fucomip
xorb
adc
sub
mov
pop
jae
dec
out
dec
adc
loope
lds
lgs
cmp
insl
stos
aad
cmc
mov
gs
loope
andb
ficompl
out
ficoms
dec
or
dec
out
mov
cmp
dec
js
mov
mov
pop
rcrl
scas
or
push
inc
shlb
dec
leave
lock
inc
mov
outsb
into
pop
pushf
test
or
mov
je
adc
jbe
insb
dec
int3
int3
bound
push
imulb
lds
mov
dec
jp
dec
xor
in
mov
mov
jns
sbb
mov
call
lds
cmp
cs
out
lea
cmpsl
flds
ficomps
lret
int3
and
push
inc
push
ret
mov
xor
test
insb
cmp
push
scas
push
dec
jge
mov
xor
adc
and
inc
mov
cltd
lock
pop
int3
int3
test
mov
movsb
aaa
aad
mov
das
adc
mov
push
mov
loopne
in
jg
mov
xchg
xor
dec
mov
je
out
xor
loop
pop
pop
lcall
pushf
fwait
jo
inc
pop
inc
call
mov
sbb
adc
or
lret
inc
mov
push
mov
xchg
jmp
subl
es
lret
cmp
call
push
test
pop
lahf
pop
or
shrl
inc
negl
dec
dec
outsb
popf
imulb
ljmp
pushf
arpl
add
and
test
adc
pop
adc
sbb
bound
mov
les
dec
out
jnp
cmp
stos
in
sub
push
lcall
adc
sub
into
xor
pop
jno
jge
mov
sbb
xchg
test
dec
push
leave
imulb
mov
ss
out
pop
lret
mov
xor
ss
add
or
adc
mov
add
push
les
jecxz
lock
sbb
daa
mov
pushf
adc
in
or
sbb
test
fucom
mov
xchg
fiaddl
xor
inc
fisubl
pop
xlat
dec
lea
add
sub
mov
xchg
ds
imul
pop
fstp
dec
pusha
jecxz
sti
or
pop
scas
int3
add
or
in
setne
cs
ss
iret
aas
fsubrl
push
fucomp
sub
add
or
lds
adc
cmp
cmp
xor
movsl
push
pop
or
cld
inc
cmp
xor
subb
pop
sub
mov
aas
or
sub
movsb
pop
imul
sub
adc
mov
cwtl
jmp
scas
bound
lea
sub
aad
pop
sbb
aaa
loop
or
jns
mov
sub
or
sbb
push
sbb
lret
enter
push
mov
adc
xor
and
add
fnstcw
jle
or
add
pop
jnp
lods
and
push
xor
inc
orb
inc
dec
pop
mov
and
mov
mov
icebp
pop
int3
dec
in
pushf
jnp
mov
lock
flds
rcll
bound
jmp
or
xor
xchg
testb
arpl
xor
push
mov
xor
imul
shll
cld
fdivrs
add
bnd
or
jp
ds
bound
mov
repnz
push
scas
pop
ror
mov
sti
pop
mov
fsqrt
dec
fucomi
sbb
mov
out
lahf
mov
ljmp
pop
aas
pop
sahf
mov
jle
dec
aaa
dec
xor
cmp
ljmp
inc
scas
mov
mov
fcompl
or
dec
pop
or
mov
push
in
scas
lea
ljmp
jl
jl
sub
les
cld
rorl
xchg
nop
mov
addr16
arpl
imul
sbb
aad
cmp
into
jbe
in
inc
pop
iret
loope
loopne
pop
xor
sbb
iret
leave
push
shrl
mov
add
ss
lods
stc
and
fcompl
shll
fmuls
dec
into
pop
jmp
xor
dec
addr16
jne
lret
sub
and
push
mov
push
outsb
xor
cmp
mov
jmp
test
mov
outsl
mov
pop
inc
aas
xor
iret
inc
imul
add
mulb
int
mov
cli
pop
xor
rorl
inc
test
push
icebp
lods
int3
push
aam
xchg
jp
fdivrs
mov
push
pop
push
jne
pushl
mov
jge
or
out
cli
add
lds
clc
pop
fbld
in
repnz
sbb
lret
jecxz
fimull
mov
mov
out
adc
jle
dec
mov
cmp
insb
sahf
push
pop
bound
add
dec
pop
aaa
fs
add
mov
xor
adc
iret
adc
cld
std
mov
mov
mov
imul
sub
jo
lock
mov
nop
dec
cs
outsb
mov
pop
lods
dec
push
lret
pop
jns
xchg
jle
int
mov
mov
into
ret
lret
or
movsb
cmp
call
sub
inc
or
pop
jle
lea
pop
pop
dec
push
pop
stos
jbe
out
out
fabs
and
mov
repz
lret
pop
xchg
out
sbb
fcmovnb
or
fadds
xchg
call
imul
adc
call
or
aas
mov
jb
xor
pop
stc
push
sti
scas
lret
pop
in
xchg
pop
inc
mov
out
pop
les
jns
cs
cmp
sar
sbb
sub
jmp
cltd
add
mov
in
ss
push
adc
fsubrp
cwtl
mov
sti
dec
into
xor
dec
mov
out
or
ljmp
cmc
sub
out
mov
fmull
dec
and
mov
and
mov
call
stos
and
xor
jl
add
sub
jl
jmp
adc
adc
sbbl
ljmp
rcr
adc
cli
jecxz
test
xchg
mov
pop
popf
push
jl
outsl
pop
inc
mov
push
imul
loopne
mov
pop
fdivl
cld
out
iret
int3
subb
or
jmp
aas
mov
shrb
js
cli
cmp
fmul
ja
andl
or
fdivr
or
or
ss
into
iret
pop
xchg
cmpsb
jae
cmp
dec
aaa
pushf
outsb
adc
scas
out
in
jmp
vcomisd
jbe
or
addr16
jl
aad
insl
rorb
or
int3
bound
ror
mov
cmc
jb
bound
iret
adc
push
mov
mov
cmp
or
sbb
jl
mov
xchg
loopne
xchg
xchg
out
push
or
add
xchg
jecxz
lock
std
xor
dec
sub
sahf
and
pop
fucom
ljmp
int3
lods
dec
leave
loopne
sub
inc
xchg
into
inc
and
adc
jns
jge
mov
jg
dec
push
gs
sub
fisubl
filds
lods
or
fwait
add
das
mov
pop
xchg
jbe
lret
jle
cmpsl
jne
aad
inc
fistpl
mov
movsl
bound
arpl
shrl
and
stos
pop
into
mov
fcomps
mov
pop
pop
push
pop
movb
xchg
lret
pop
dec
xchg
iret
and
pop
push
xor
dec
dec
adc
iret
ds
and
or
out
lods
jp
jmp
mov
push
add
dec
in
or
out
mov
xor
pop
push
or
bound
sahf
push
out
mov
outsl
push
aam
ret
in
mov
dec
fldt
push
jo
cmp
clc
ret
push
push
call
iret
stc
pop
sub
dec
mov
ss
fsts
test
movsl
mov
int
adc
fnstsw
or
ror
and
call
lahf
lea
or
fstpt
or
mov
outsl
mov
mov
jmp
int3
js
rclb
fxch
lret
and
push
mov
idivb
outsl
sbb
pushf
shrl
and
lret
rorb
mov
adc
inc
jecxz
sqrtps
jb
std
jmp
clc
jo
push
scas
ss
or
in
mov
scas
pop
out
mov
arpl
pop
int
icebp
dec
mov
cmp
lods
fnstsw
dec
dec
and
div
aad
mov
dec
pop
in
sub
dec
rorl
es
fsubl
mov
xchg
jae
mov
fcoms
and
fadd
ss
adc
adc
sbb
cmpb
pop
mov
es
stos
mov
loope
mov
in
lret
mov
nop
lret
push
int
mov
cltd
outsb
mov
dec
mov
les
aad
into
lret
push
dec
pushf
std
testl
repz
or
out
xor
inc
scas
je
push
fdivr
xchg
mov
cmpb
dec
loop
iret
pushl
imul
cmp
jp
pop
push
sti
pop
cmp
loope
dec
jge
vpabsd
mov
outsb
xor
mov
inc
hlt
jmp
jnp
jl
mov
hlt
mov
ja
repnz
pop
cli
iret
loopne
orb
xor
out
test
js
hlt
xchg
sahf
ljmp
es
mov
inc
lret
rorl
jg
incl
lds
mov
mov
pop
mov
lcall
or
xchg
cli
and
insb
mov
cld
jo
pop
dec
pop
mov
inc
push
jle
leave
bnd
fmuls
xchg
or
push
jb
add
jmp
pop
sti
inc
xchg
dec
or
sbb
mov
leave
imul
cmpb
and
push
lea
nop
int3
cld
and
inc
div
loope
pop
test
shll
shl
lea
call
ss
add
cmp
cmp
leave
sti
div
mov
cld
popa
xor
or
push
mov
pop
ja
cmpb
out
test
and
testb
les
int3
or
dec
jnp
or
pop
in
hlt
clc
or
nop
pop
mov
sub
das
or
fcmove
jecxz
rcrl
mov
push
jae
sbb
mov
out
lcall
stos
mov
in
dec
adc
cs
in
divl
cmp
or
xchg
sub
shlb
mov
out
mov
mov
int
xchg
ja
xchg
jl
mov
xlat
lcall
and
mov
jmp
and
stos
push
cltd
aas
jmp
out
mov
int
scas
iret
cmpsb
xchg
inc
loope
sbb
stc
and
das
dec
push
dec
dec
and
adc
mov
cmp
xchg
pop
xor
lods
mov
mulb
inc
scas
pop
add
dec
pop
jmp
mov
jae
add
cwtl
dec
adc
sar
jl
sub
int
and
repz
inc
inc
dec
pop
leave
pop
and
fcomps
pop
mov
mov
sar
adc
jne
mov
or
inc
aas
xchg
push
or
and
fcoml
xor
push
fldcw
mov
xor
pop
and
or
sbb
andl
ficomps
jmp
or
cli
sbb
insb
fisttpl
xchg
leave
cli
pop
sti
lock
addr16
push
bound
lods
stc
aam
imul
adc
or
push
xchg
lcall
dec
mov
enter
mov
and
xchg
cmc
pusha
outsb
lcall
popf
mov
inc
arpl
int
adc
xor
push
mov
adc
sbb
cmpb
test
fcomps
jnp
aaa
pop
imul
and
mov
idivl
dec
pop
sub
sub
mov
mov
mov
nop
bound
orb
sti
mov
mov
faddl
jmp
mov
loop
int3
ljmp
out
fs
js
lods
jmp
mov
stos
cmp
std
push
mov
cmp
into
inc
in
mov
subb
ret
xlat
push
cwtl
sbb
out
lods
add
sub
and
test
mov
lret
ljmp
jne
shr
inc
pop
mov
sub
mov
jb
inc
add
push
out
sbb
pop
fldcw
out
inc
mov
or
mov
in
add
mov
aaa
call
leave
rclb
outsl
lret
mov
jno
pinsrw
pusha
sbb
inc
filds
jecxz
iret
push
jle
imul
decl
push
xchg
push
cmp
out
call
add
leave
daa
rcrl
aas
push
cwtl
dec
out
xor
adc
or
push
inc
in
mov
push
insb
inc
outsl
clc
aad
ret
or
bound
pop
inc
insl
pop
jb
aam
rcr
int3
adc
mov
inc
sub
mov
test
sarb
sbb
test
jb
fsubrl
inc
dec
lods
lahf
sbbl
dec
iret
add
std
addr16
push
les
andb
cmp
jecxz
iret
fistps
sub
int3
dec
or
pop
mov
shrl
and
out
sub
out
add
int3
push
add
or
cli
cmp
push
roll
mov
cs
inc
in
dec
mov
push
sbb
andb
jmp
out
xor
fsubs
sub
into
mov
nop
sub
push
pop
aas
mov
pop
pop
repz
in
bound
aas
in
mov
mov
lcall
or
mov
iret
push
mov
jne
or
ficompl
jg
out
cmp
ds
lods
adc
or
stos
iret
pop
testl
out
fbld
shll
jge
dec
lret
scas
into
pop
int
rorb
iret
cli
push
mov
faddl
test
int
or
out
cli
jp
xchg
and
aam
pop
jo
out
push
xor
sbb
das
or
mov
or
push
sub
out
aas
dec
lods
leave
dec
mov
sub
fiadds
adc
dec
dec
mov
cmp
in
jl
idiv
push
pop
dec
and
mov
pop
xchg
ds
mov
enter
loopne
in
dec
add
cli
sub
xchg
inc
imul
leave
out
mull
in
inc
sbb
iret
daa
lret
mov
or
cmp
dec
sahf
pushf
test
adc
repz
sbb
rorl
fisubs
dec
jo
out
push
xor
pop
mov
jne
fs
repz
data16
divb
imul
mov
adc
add
lods
js
filds
popf
inc
pop
mov
sub
mov
pop
mov
jg
popl
lahf
lods
pop
lret
sarb
int
aam
rorl
in
imul
dec
xchg
mov
mov
ja
lret
jl
stos
mov
inc
popa
imul
aas
pop
dec
adc
fisubrs
pop
or
movsb
inc
in
stos
mov
in
dec
sub
aam
jl
jp
clc
popf
in
jge
mov
cmp
add
fnstcw
imul
lcall
in
packssdw
sbb
cs
jge
xchg
in
push
push
sbb
add
repnz
mov
cs
and
mov
sub
repz
sub
adc
or
leave
aaa
data16
xor
mov
mov
adc
adc
mov
mov
mov
xchg
sub
dec
jge
stos
mov
or
dec
scas
mov
andb
subb
ss
mov
or
cmp
cli
jp
add
jmp
into
mov
pop
pop
lahf
in
jl
out
sbbl
xchg
push
pop
dec
add
aas
lods
jmp
daa
js
sub
fcoms
sub
adc
xor
inc
adc
popa
fimull
and
xor
push
shll
mov
adc
dec
adc
movsl
popa
push
mov
jg
push
push
int3
stos
mov
and
jmp
test
dec
cltd
test
adc
stc
sub
mov
mov
or
lahf
das
cs
xor
int3
cmp
int3
push
mov
add
testl
cmp
rorb
jge
or
popa
mov
hlt
pop
add
jmp
pusha
leave
js
mov
mov
pop
sbb
jle
jecxz
bsf
mov
or
repnz
pop
adc
mov
xlat
adc
movsb
pop
add
pop
push
repnz
dec
jg
pop
dec
jp
call
lods
mov
iret
push
rcrb
js
aad
pop
xor
adcb
iret
das
cltd
adc
inc
dec
push
enter
std
xchg
into
test
fimull
inc
add
mov
xchg
pop
sbb
dec
and
pushf
mov
or
and
push
in
mov
stc
fs
aam
mov
into
adc
and
mov
gs
fsubrl
pop
push
sbb
pop
mov
lret
into
sub
push
or
adcb
jge
xor
push
pop
jp
insl
adc
jge
sbb
inc
fidivrs
in
cmpsl
cmp
aas
lcall
jge
lea
adc
jle
jmp
xchg
xlat
and
dec
jecxz
fwait
or
outsb
clc
enter
jbe
sbbl
cmpsl
xor
cmp
adc
cs
mov
pop
and
sub
popf
outsl
add
pop
sub
test
pop
dec
es
shl
pushf
aas
xchg
lds
dec
or
push
sbb
scas
mov
rcrl
mov
sub
bound
lea
mov
jne
call
out
xlat
mov
xor
int3
pop
push
mov
cld
pop
jmp
shll
xchg
jecxz
stc
xchg
lret
push
cs
out
sarl
inc
cmp
or
rcrl
adc
lock
sbb
sti
in
mov
cmp
sbb
sahf
and
sbb
jle,pn
cmpsb
jmp
mov
push
ds
pop
inc
loop
push
jge
fimuls
psrad
cli
cmc
pushf
mov
pop
adc
push
xor
pop
fcoml
xor
adc
psrld
out
jnp
mov
lret
adc
push
in
push
pop
xchg
fildl
push
jmp
lret
push
out
fistl
xchg
lret
clc
adc
sbb
mov
std
repz
popa
inc
mov
cmpsl
cli
mov
jg
inc
movsb
test
data16
sub
daa
orb
icebp
in
aad
sbb
andb
cs
cmp
data16
xor
add
mov
add
pop
pop
or
push
call
pop
lods
lret
jmp
mov
cmpsl
pusha
cld
mov
push
outsb
pop
mov
cmc
subb
fildl
mov
jae
imul
int3
adcb
and
cmp
adc
mov
daa
xchg
fwait
pop
int
jmp
adc
dec
cmpsl
pushf
dec
xchg
clc
pop
pop
loope
cmc
mov
xchg
sbb
fisubl
fimull
cs
cmp
lock
dec
arpl
loop
test
push
mov
jns
int
stc
iret
bound
leave
inc
mov
sbb
push
testb
lret
lock
and
pop
cmc
imul
xor
mov
push
ret
out
repz
in
je
rcll
out
pushf
push
sbb
cmp
das
jge
enter
push
xchg
iret
mov
sbb
mov
xchg
push
inc
mov
adc
jmp
xchg
push
cmpsb
mov
loop
insb
push
push
es
cmp
fmull
push
mov
and
subl
mov
call
mov
pop
sub
and
mov
xchg
pop
dec
pop
push
inc
jp
sub
pusha
das
pop
mov
push
pop
pop
mov
jae
lret
dec
rcll
imul
mov
pop
nop
sbb
mov
in
adc
rorb
push
xchg
adc
push
cmp
dec
push
xchg
fmull
adc
dec
jmp
or
pop
xchg
jmp
clc
rcrl
js
into
push
push
int
cmpsl
or
xchg
sti
pop
fistpll
fsubs
movsl
mov
xor
add
jmp
cmc
mov
jo
jg
push
movhpd
dec
repnz
fnsave
mov
inc
xor
adc
int
int
mov
xchg
ljmp
sbbl
cmp
sbb
push
dec
push
push
xchg
aad
insl
cmpsl
shlb
inc
sbb
fcmove
daa
adc
fstpt
fcomp
filds
mov
repnz
das
inc
adc
mov
push
das
jne
in
in
js
jge
scas
adc
pop
loop
add
pop
adc
jb
jecxz
pushf
jo
cmpsl
outsb
cmp
mov
decb
mov
aam
inc
cwtl
in
aaa
shrl
sbb
cmp
xlat
jb
inc
jp
aaa
out
push
ljmp
cwtl
in
push
cwtl
jno
fs
call
add
xchg
in
insb
add
mov
adcl
or
js
push
arpl
daa
inc
imul
mov
fs
adc
outsb
cltd
push
push
add
xor
add
cs
inc
aaa
xor
push
and
aam
sbbb
jbe
call
data16
push
mov
pop
jg
ljmp
fs
cwtl
insb
addr16
pop
sbb
lods
add
pop
pop
jmp
lret
insb
adc
jns
pop
jmp
xor
adc
testb
in
or
sbb
sbb
dec
cli
dec
mov
sbb
jl
jb
sti
adc
pop
adc
push
xchg
cmp
popa
out
pushl
mov
jp
dec
adc
inc
or
rclb
dec
adc
jle
xlat
ja
loopne
pop
int
jmp
in
ret
inc
test
adc
call
mov
in
pop
ljmp
dec
scas
dec
or
loopne
inc
sti
ljmp
shlb
imul
or
dec
lret
aam
add
inc
push
lcall
xor
ljmp
jno
sti
mov
or
icebp
call
addr16
fists
repnz
push
mov
or
inc
xorb
outsl
mov
or
addl
in
lret
scas
mov
aam
add
testl
mul
jle
or
ljmp
push
xchg
inc
cmpsl
mov
and
frstor
sbb
idivl
sub
jmp
clc
and
add
bound
xchg
dec
push
mov
sbb
push
push
push
pop
fisttpll
sti
lods
ficoms
mov
jmp
in
stos
pop
es
jl
aas
sti
dec
aam
mov
add
add
sbb
rclb
je
stc
cmp
push
dec
scas
int3
pushf
mov
push
sub
push
outsl
arpl
test
test
xor
add
mov
inc
or
inc
dec
out
out
pop
lock
or
fidivl
jmp
and
push
sahf
push
xchg
cmp
pop
mov
xor
pop
or
repnz
push
or
xchg
inc
inc
stos
xorb
rcl
jp
mov
shl
call
orb
aam
arpl
or
aaa
lods
and
push
xor
sbb
add
sub
aad
fisttpll
dec
jle
in
xchg
dec
jmp
fistl
add
scas
iret
ficoms
cmpb
into
addl
ljmp
js
jb
outsb
push
mov
sbb
push
scas
add
sbb
jecxz
cmp
aad
dec
sti
push
sub
into
lcall
bound
mov
mov
mov
adc
rcr
adcl
xchg
dec
or
mov
ret
fwait
or
into
pop
and
int3
ljmp
in
loop
jb
or
pop
and
insb
sbb
loopne
sar
push
push
sub
mull
sub
dec
popf
sahf
dec
adc
push
jl
popa
jp
call
ror
cmp
rclb
inc
add
and
fiadds
adc
out
shr
jns
push
pop
mov
das
sbb
jecxz
jb
enter
pop
fistps
push
lods
sub
sub
rcr
mov
mov
cmc
dec
cwtl
jb
cmp
cli
add
movsb
cmp
into
jl
js
lret
adc
sbb
enter
jle
mov
cmp
and
cmp
add
mov
clc
sbb
adc
subl
mov
sar
dec
mov
jmp
add
sbb
andl
adc
and
dec
sbb
add
mov
ret
jl
jo
scas
pop
lret
push
inc
lret
punpckhbw
and
fdiv
std
xchg
pop
jge
jle
mov
pusha
adc
int
cmp
mov
pop
outsb
push
in
fidivl
into
cmpb
add
push
inc
sbb
mov
jb
adc
int
or
and
mov
das
into
mov
mov
xor
jmp
pop
in
inc
popl
clc
mov
jecxz
arpl
mov
pop
push
popa
in
mov
in
shr
xchg
and
or
mov
lods
xchg
fsubrs
popa
push
ljmp
ja
mov
push
mov
leave
bnd
iret
mov
and
cld
pop
ss
push
pop
out
dec
mov
jmp
pop
push
and
lret
jno
mov
scas
pusha
out
adc
cmpsl
mov
decb
dec
stos
adc
lahf
cwtl
sarl
pop
or
jecxz
pop
cs
mov
pop
jecxz
or
pop
bound
sub
push
cmp
imul
aad
pop
push
sbb
ficompl
fwait
or
jo
sub
mov
cmp
mov
mov
cmp
jmp
and
mov
pop
fcmove
sbb
fmull
push
or
lods
shlb
add
es
pop
enter
pop
scas
rclb
out
sbb
fildl
enter
cs
subps
sbb
fsubl
jecxz
dec
add
and
shlb
rorl
sbb
push
das
popf
leave
pop
and
test
ljmp
inc
inc
push
xchg
mov
cli
scas
jbe
repnz
aad
jne
lret
pop
xchg
xor
pop
in
sub
scas
or
scas
cltd
mov
ljmp
inc
fstps
xor
jmp
jmp
sub
int3
dec
xor
or
scas
popf
lock
mov
fcmovnb
loop
pop
mov
or
stc
pushf
sbb
aad
mov
jecxz
cmp
ljmp
les
paddq
xor
sar
jge
in
mov
jge
jle
push
pop
dec
mov
nop
into
pop
jb
push
iret
test
fisubs
pop
jb
mov
push
clc
imul
and
mov
iret
push
lods
inc
mov
dec
pushf
das
mov
cld
mov
or
cli
js
xor
shr
cld
jge
mov
mov
ds
ja
bound
test
jmp
or
fisubs
fsubrp
xchg
sub
lret
aam
dec
jecxz
scas
pop
arpl
hlt
int3
push
lret
lods
mov
bound
std
stos
iret
push
xchg
cmp
es
mov
fisubs
pop
push
sbb
adc
aas
jle
fdivrs
icebp
lret
das
lea
push
jmp
inc
imul
jle
mov
out
out
push
iret
dec
mov
inc
out
icebp
and
adc
jle
enter
loopne
aas
mov
mov
xor
or
jge
adc
pop
shlb
dec
fdivr
mov
and
xchg
sbb
outsb
pop
pushf
dec
jnp
imul
data16
dec
nop
adcl
sub
push
cmpl
push
inc
push
and
xchg
push
push
divb
lahf
push
sub
push
pop
push
cli
xchg
fidivl
test
dec
pushf
push
dec
dec
inc
punpckhdq
pop
mov
cwtl
icebp
scas
or
and
fidivrs
or
rcrb
jl
ss
xor
testb
mov
or
int3
jge
cld
mov
pop
scas
ljmp
jbe
test
mov
icebp
jbe
mov
and
rcl
xor
cmp
into
cmp
sti
and
aad
imul
data16
jmp
scas
pop
jmp
icebp
dec
adc
jns
dec
jae
pop
mov
std
lcall
popf
mov
cltd
scas
lea
div
fs
sbb
lahf
push
pop
bound
int3
shlb
leave
push
or
sub
sbb
dec
jnp
jnp
nop
movsl
or
out
int
jb
in
adc
push
enter
push
xlat
add
das
ljmp
pop
jbe
clc
mov
adcb
cli
ja
pop
mov
ds
mov
mov
xor
dec
pop
repz
or
adc
ficompl
fidivrl
neg
jecxz
lea
push
sbb
lock
cltd
push
lret
fcomps
negl
ljmp
out
shl
sbb
adc
aas
mov
lret
cs
into
or
nop
shr
push
and
test
iret
out
inc
inc
imul
push
dec
jmp
push
cli
mov
mov
ljmp
push
lret
add
fidivl
in
gs
dec
loopne
das
sub
cmp
cs
mov
push
mov
scas
push
sub
notb
and
sbb
ja
into
nop
cli
out
mov
push
push
sub
add
les
jge
loop
mov
cmp
jle
mov
xchg
pop
std
mov
repnz
xchg
aad
jge
push
mov
jecxz
push
adc
jo
das
fucom
and
imul
or
mov
xchg
stos
fimuls
mov
popf
push
das
in
xchg
mov
jae
or
lret
mov
icebp
sub
jbe
or
iret
rcrl
sbb
xor
push
jmp
arpl
or
pop
wrmsr
push
stos
xchg
dec
mov
dec
scas
outsl
jbe
push
jl
das
push
imul
push
push
adc
jnp,pn
sbb
or
push
int
push
mov
push
insl
into
repnz
or
push
jae
aas
loope
sub
push
dec
int3
xchg
fucomip
sbb
push
sub
dec
out
and
imul
orl
test
loopne
cli
lds
fs
int3
push
dec
in
or
cmp
or
popf
scas
jns
mov
lcall
loope
sub
roll
in
adc
mov
and
pop
in
dec
ret
cli
cmp
push
or
xchg
sbb
lea
cmc
cmp
sub
sbb
jmp
js
jle
jecxz
adc
femms
data16
cmc
or
and
adc
cmp
sbb
xchg
pop
imul
push
mov
add
decb
push
jb
mov
or
sbbl
movsb
mov
movups
jmp
insb
mov
adc
stos
notl
push
ja
sahf
test
xor
test
pop
push
dec
in
movsl
ljmp
cmp
push
sarb
imul
jno
aam
cmp
cmp
push
sbbl
shr
leave
xchg
inc
inc
addb
test
and
push
cld
or
fistl
inc
cld
or
cmp
fistpl
sub
mov
call
mov
sub
pop
cwtl
pop
mov
bswap
out
rclb
mov
test
pop
das
aad
and
jno
pushf
xor
nop
xchg
mov
mov
jle
dec
sbb
add
cmp
das
sbb
push
mov
cmpsl
sbb
mov
cmc
imul
and
in
movsb
into
cmp
pop
mov
xlat
lcall
dec
enter
pop
test
popf
shl
pop
insl
ja
loope
ss
loope
idivb
fidivrs
lods
stc
pop
or
push
jl
imull
or
fnstsw
imul
adc
push
jmp
push
shll
jmp
sub
sahf
mov
add
daa
aad
mov
jo
jae
out
mov
sbb
repnz
das
icebp
scas
mov
adc
pusha
push
xor
dec
pop
inc
mov
out
sub
mov
int3
push
clc
pop
popa
adc
divl
dec
mov
jno
leave
push
adc
stos
and
pop
ret
push
xlat
push
jecxz
sti
into
pop
test
adc
fsubrl
xchg
cli
sbb
fldenv
lcall
sbb
push
rorl
stos
jbe
outsb
fidivrl
sbb
push
push
sbb
pop
xor
ljmp
scas
gs
pop
pop
pop
mov
inc
jo
repnz
insl
mov
sti
sbb
test
adc
rcl
out
sbbl
outsb
mov
mov
cltd
int3
mov
sbb
mov
ds
or
jbe
xor
add
imul
fs
push
das
jle
pop
scas
in
insl
out
js
ljmp
lret
pop
adc
mov
mov
shlb
lahf
lods
shrl
lods
lret
push
and
pop
in
cmp
cmpsb
mov
push
popl
mov
test
or
push
dec
push
in
mov
sbb
push
std
cmp
scas
add
lcall
jmp
or
addr16
add
int3
inc
xchg
add
mov
mov
jns
ret
bound
cmp
adc
icebp
adc
mov
into
test
sbb
rcr
repnz
scas
stc
out
int3
pop
inc
xchg
mov
xchg
jmp
je
fstl
sbb
xor
gs
cs
mov
out
mov
out
rclb
add
mov
data16
sub
int3
cmp
out
imulb
scas
mov
or
pop
cmpsl
mov
ficoml
mov
inc
lds
std
and
cmp
aas
ss
ror
movsb
loope
pop
nop
pop
fbld
cmp
fisubrs
sub
push
pop
sbbl
push
and
cmp
pop
mov
pop
shlb
mov
xchg
into
xlat
xchg
cmp
fcomps
and
adc
test
xor
mov
adc
or
push
icebp
mov
sbb
sbb
clc
out
sub
pop
sub
int3
fs
dec
cmp
sti
in
lea
mov
in
cmpsb
jo
out
fs
mov
nop
and
inc
out
pop
sbb
jg
push
ret
sbb
pop
dec
fidivrl
mov
cmp
loopne
xchg
cmp
ja
insb
shlb
and
into
arpl
push
dec
mov
or
inc
add
into
lret
sbb
int3
or
dec
int
lret
sbb
mov
dec
sbb
inc
and
jp
and
inc
int
pop
lds
cltd
xchg
ret
mov
outsb
scas
add
sub
out
incb
xchg
ficoms
loop
lcall
jp
sbb
in
jl
stos
out
ljmp
imul
and
bnd
pop
arpl
or
push
enter
ret
xlat
cmp
or
pop
cmpsl
adc
and
jne
addr16
jae
mov
movb
mov
cwtl
mov
jbe
fst
pop
imul
scas
into
das
adc
ss
dec
or
push
adc
or
adc
pop
and
shlb
movsl
xor
xchg
mov
mov
int3
bound
pop
loop
sahf
ja
shll
adc
iret
push
ja
dec
cmp
push
mov
iret
mov
int
xor
pop
or
fstl
scas
je
sbb
pop
mov
ss
pop
adc
mulb
mov
sbb
pop
cltd
jl
paddw
push
sarb
adc
movsl
sbb
cmc
dec
mov
dec
dec
stos
cli
nop
dec
dec
sub
jecxz
fs
push
sbb
adc
sub
dec
xchg
stc
mov
out
dec
int3
mov
mov
jno
xlat
or
insb
push
in
mov
push
dec
mull
or
in
into
add
adc
sbbb
mov
mov
repnz
and
test
fs
inc
arpl
scas
mov
sbbb
or
mov
lret
mov
sbb
int3
lcall
sti
mov
call
ret
jl
popf
in
sbb
mov
fmul
push
andb
xchg
scas
mov
dec
decl
push
decb
lea
add
jmp
pop
dec
mov
or
or
mov
lret
jecxz
jmp
mov
push
ja
ror
lock
or
fdivrl
arpl
mov
leave
sbb
stos
aas
mov
jnp
cmp
shrl
cmpsb
jbe
scas
into
fs
fbld
in
push
inc
mov
push
mov
iret
xor
cmp
pop
mov
call
pop
and
hlt
xor
mov
mov
pop
out
push
pop
xchg
iret
out
out
les
push
mov
je
sbb
jo
cli
jmp
cmp
in
stos
sahf
pop
repz
js
sbb
jecxz
in
ja
bound
sbbb
cmc
and
xor
push
jecxz
test
or
cli
into
mov
fdivl
dec
leave
test
aad
bound
cmp
mov
or
add
std
mov
xchg
gs
sahf
mulb
mov
jmp
int3
fadds
out
out
rcll
lcall
int
sub
mov
data16
outsb
enter
sub
movsl
cmpsb
push
and
mov
in
push
mov
mov
and
push
lret
mov
jmp
dec
mov
leave
push
mov
emms
sub
scas
mulb
jle
or
cli
pop
call
jle
xlat
andl
dec
imul
bound
push
jbe
adc
jne
sbb
idivl
xor
pop
outsb
push
lds
shrb
and
nop
dec
out
fstpt
xchg
rcrl
out
jmp
loop
xchg
sbb
inc
insl
sahf
and
shrl
mov
add
in
into
cmp
iret
fists
cmpsl
pop
mov
lret
mov
mov
js
add
and
dec
imul
inc
sbb
movsb
mov
and
xor
pop
iret
es
mov
jmp
imul
adc
push
add
repz
ljmp
add
pop
jnp
dec
pop
ret
incl
rorl
pushf
sub
lods
inc
sub
lret
into
shrl
xchg
cli
cmp
push
shll
adc
roll
cmp
imul
cmp
clc
sbb
xor
inc
das
xor
mov
mov
push
and
cmp
ret
cmp
pushf
in
lret
cmpsl
fcomi
push
orl
xor
sbb
push
ficompl
fbstp
mov
cltd
and
push
in
lcall
aam
fwait
push
jb
negb
aaa
clc
shlb
mov
cs
imul
mov
adc
sbb
loop
dec
mov
imul
loopne
cwtl
sbb
out
fcmovb
mov
mov
in
mov
fcoms
repnz
mov
pop
xor
js
je
sub
std
dec
bound
push
push
xchg
mov
dec
jl
xchg
rcll
loop
dec
pop
pop
jge
dec
idivb
icebp
push
lock
cs
das
push
shlb
pop
lea
dec
in
adc
orb
les
push
mov
iret
stos
fsubrp
sahf
leave
xlat
sarl
push
dec
sbb
sbb
mov
mov
int3
cmpsb
insb
dec
xchg
iret
in
mov
fistpll
shr
or
popf
sbb
ljmp
xchg
je
lret
push
adc
in
push
mov
cmpsb
ljmp
mov
mov
mov
in
push
mov
add
push
lahf
dec
mov
leave
shrl
pop
shl
hlt
stos
push
stc
loope
loop
dec
lods
push
fidivrs
iret
iret
orb
pop
fwait
lds
dec
push
jp
fnstsw
mov
pushf
ret
in
add
ja
jb
dec
gs
sub
fsubr
out
out
cli
mov
or
dec
jl
xchg
orb
sbbb
dec
inc
xlat
call
push
mov
incl
adc
xor
scas
cmp
repnz
lods
aaa
add
sub
mov
mov
cmpb
scas
sub
das
call
mov
pop
dec
stc
dec
mov
sbb
push
or
lret
pop
adc
ss
mov
and
lret
clc
jns
pop
and
and
xchg
jge
int3
lds
push
pop
aam
xchg
jle
in
test
in
xchg
and
mov
adc
out
pop
repz
jb
out
insb
cmpsb
push
js
inc
or
mov
test
cmp
or
inc
out
dec
lahf
sbb
test
push
inc
das
pop
push
mov
pop
jne
inc
outsb
shrl
push
je
cmp
mov
adc
mov
fldcw
aam
and
add
inc
push
imul
fbstp
sub
testb
dec
sbb
jp
cmp
lretw
out
in
mov
repnz
mov
ficomps
mov
mov
jl
vorps
cmp
leave
addr16
sbb
mov
or
ss
sub
cltd
ficoml
cmp
icebp
rcll
hlt
pop
pop
add
jo
andl
push
lods
and
dec
mov
lret
push
pop
in
push
leave
xchg
push
pushf
filds
sbb
in
enter
int3
cli
aam
lret
mov
adc
inc
mov
lock
cld
pop
xchg
je
test
push
inc
inc
repnz
jbe
cmp
xchg
clc
mov
hlt
push
dec
mov
pop
dec
jnp
cld
inc
out
or
dec
jle
cli
mov
cmp
mov
inc
movsl
mov
call
cld
ret
mov
mov
aad
mov
mov
fsqrt
pop
jns
adc
nop
pop
ja
mov
imul
test
mov
mov
out
adc
mov
cld
dec
xchg
data16
fwait
aas
or
insb
ss
ds
or
xlat
ja
pop
push
dec
sub
push
es
cs
push
lret
mov
xlat
push
push
in
out
fisubl
cs
popf
dec
addr16
hlt
sar
aam
call
mov
into
addr16
mov
xchg
cmp
shlb
inc
hlt
stc
or
xor
stc
cmp
push
test
out
dec
lods
out
int3
or
mov
cltd
cld
push
out
push
int3
dec
out
es
in
leave
int
mov
jbe
push
mov
bound
into
jnp
inc
adc
jns
xchg
pop
mov
out
mov
iret
int
das
iret
lds
stc
in
lret
fcmovnbe
adcb
cmp
cmpsb
push
xlat
je
sbb
pand
test
pop
add
cld
repz
js
fwait
es
dec
shlb
into
mov
sahf
js
or
and
out
jecxz
rorb
mov
dec
adc
je
test
lods
js
cmpsb
dec
sbb
pop
lock
cmp
mov
fistl
jae
push
cli
push
cld
stc
jmp
pop
in
movsl
into
add
loop
cmp
xlat
cli
xchg
test
push
cld
pop
xchg
adc
outsl
scas
sub
into
jmp
repnz
gs
dec
je
icebp
imul
repz
lds
xor
pop
mov
in
fiadds
loop
lret
mov
jnp
push
push
jp
in
out
cmc
dec
idivb
or
inc
mov
xor
fmull
ljmp
or
push
xor
arpl
adc
xchg
loop
in
mov
cmpsb
lret
jmp
stos
xchg
sbb
xchg
mov
sub
xchg
mov
jns
and
clc
dec
hlt
enter
add
add
lods
ja
mov
push
dec
jo
rclb
fdiv
mov
insb
addr16
push
sub
jns
sbb
lret
cmp
pop
fisubs
adc
sbb
inc
lcall
jmp
stos
xchg
adc
xor
adc
or
test
adc
stos
lods
mov
mov
adc
fildll
xor
sti
sbb
sbb
xor
insb
push
imul
xor
mov
out
repz
int
pop
add
out
cltd
popa
loop
sti
imul
adc
out
addr16
jmp
stos
push
xchg
cld
mov
mov
xor
jg
jb
insb
jo
inc
fsubr
mov
dec
sub
sub
cs
adc
jp
pop
jns
adc
or
sahf
into
std
icebp
push
hlt
pop
cmp
dec
inc
imul
jp
and
add
std
xlat
add
push
push
and
in
loopne
mov
lret
lods
push
jp
aad
sbb
adc
xchg
xlat
fs
or
xlat
into
dec
pop
pop
pushf
ja
rorl
jmp
std
imul
ror
dec
mov
js
mov
nop
push
mov
push
mov
ret
std
pop
lods
fs
mov
sti
scas
pop
jge
or
jb
push
lret
mov
mov
pop
pop
dec
cmp
inc
test
jle
fs
repnz
into
cmp
push
xchg
out
int
sub
orl
notb
clc
jmp
int3
xchg
adc
insb
jns
cmp
js
mov
fldcw
add
cmpsb
stos
int3
in
inc
fs
and
enter
sbb
test
fwait
js
pop
mov
aad
pop
sbb
loop
test
andb
cmp
in
iret
dec
pop
xlat
pop
arpl
fdivrs
das
jnp
mov
xchg
mov
sub
cmp
daa
lret
sbb
jp
mov
xchg
hlt
mov
fcoms
dec
repz
rol
mov
fldl
cltd
dec
jo
out
push
dec
dec
mov
in
xchg
push
iret
fadds
push
push
ja
outsb
std
cmp
imul
pop
sbb
push
repz
pop
adc
xchg
iret
in
lods
adc
dec
inc
leave
insb
decb
sub
push
in
mov
mov
sub
sbb
test
mov
or
jmp
mov
or
imul
iret
vpmaxsw
push
jp
jg
jo
push
inc
int3
iret
and
push
push
lret
repz
mov
jo
lds
fs
cmp
mov
ret
pop
mov
enter
mov
pop
int
in
test
sub
out
adc
fsubr
cmp
push
adc
jl
rclb
push
rclb
pop
decl
bound
or
or
mov
movsb
fistps
mov
and
addr16
aam
cwtl
dec
fiaddl
lods
mov
pextrw
or
fisttpl
sbb
nop
cmp
pushf
int
xchg
int3
xchg
dec
repnz
dec
int3
and
int3
inc
xor
inc
xor
jge
mov
insl
movsl
hlt
xchg
or
mov
int
shl
pop
dec
subb
push
test
inc
insb
hlt
xchg
daa
add
jecxz
xchg
movsb
cwtl
pop
rclb
mov
and
pop
jb
scas
mov
add
ja
adc
in
mov
stos
cs
sbb
jp
mov
je
cmpl
jno
gs
je
adc
aad
cmp
jp
and
imul
insl
icebp
or
push
or
xlat
out
int3
aam
push
jl
movb
insl
insl
mov
mov
bound
jl
xor
and
mov
or
xor
out
dec
ret
sub
test
mov
cld
push
inc
lods
stos
iret
push
test
xchg
jne
fimull
sub
adcb
jno
add
xor
adc
mov
fistl
sti
mov
fistps
lret
aas
dec
nop
in
fidivl
scas
dec
add
fidivrl
icebp
pop
scas
mov
and
mov
jmp
mov
subb
pusha
jecxz
cmp
cli
add
mov
dec
sbb
fdivrl
fists
lahf
out
movsl
aas
pushf
in
cmpsb
nop
dec
rolb
das
leave
or
roll
sbb
push
push
ss
js
jb
mov
cmp
push
rolb
inc
lcall
adc
pop
jp
jecxz
jg
in
sub
leave
jbe
or
stos
jl
xorb
cmp
mov
xchg
xchg
jb
add
or
adc
shll
pop
or
dec
stos
mov
mov
mulb
jbe
sbb
sub
aas
in
mov
mov
movsl
dec
subl
stos
js
fwait
jl
jns
cmpsb
lock
out
test
jb
or
xchg
push
mov
cltd
sub
sub
testb
sub
imul
sub
jge
add
addl
push
or
fs
push
lret
or
fucom
mov
enter
pushf
xchg
mov
arpl
insl
out
aad
cltd
inc
adc
sbb
aas
sti
adc
rolb
movsl
add
xor
out
cwtl
mov
jp
bound
int
push
mov
repnz
int
mov
pop
push
cmp
dec
mov
pop
sbb
adc
push
mov
fwait
jo
out
or
pop
loope
dec
lods
cmp
enter
stos
into
ficompl
sub
mov
jnp
lahf
pop
or
pop
mov
adc
or
out
push
dec
cmp
mov
push
mov
fdivrp
bound
jne
ljmp
or
xchg
or
or
xchg
fstpl
insb
in
lcall
cld
das
aam
mov
mov
hlt
jb
push
sti
mov
outsl
mov
and
cmp
cmc
add
fdivrl
hlt
lock
sbb
dec
add
jg
and
lret
jl
outsb
in
jl
jmp
call
shrb
loop
adc
in
or
pop
and
aad
sbb
sub
aas
push
in
ficomps
dec
dec
jle,pt
fucomi
jb
das
in
push
scas
add
dec
mov
mov
cli
mov
jne
scas
and
jg
push
scas
iret
sbb
imul
push
or
fcoml
outsb
les
push
insl
out
cmp
push
dec
mov
xchg
fstpt
outsl
inc
scas
iret
jle
jp
dec
in
loope
ljmp
stos
notl
mov
cltd
and
xor
jns
sbb
filds
jns
in
dec
jg
ljmp
pop
and
lret
xchg
fistps
popf
push
imul
outsb
push
insb
adc
jo
shll
cld
std
mov
pop
mov
inc
fwait
call
sbb
out
adc
sahf
mov
xor
arpl
std
jns
stos
push
jl
and
mov
or
iret
stc
aaa
sbb
jl
and
pop
mov
int
jb
pop
pusha
fcomps
stc
pop
fisttpl
mov
inc
fldl2e
sbb
adc
addr16
addr16
jo
jecxz
sub
jg
xchg
or
xlat
sub
pop
mov
into
imul
ljmp
test
sbb
mov
xchg
shr
or
jb
pop
mov
lret
or
xor
outsb
add
lret
mov
shrl
fsubrs
pop
pushf
stos
pop
lahf
push
mov
mov
cwtl
xlat
out
sub
rcrb
pop
andb
mov
loopne
arpl
mov
sahf
out
mov
fists
mov
insl
call
inc
imul
cli
bound
out
lret
gs
repz
jg
sub
loopne
int
call
mov
je
rorb
mov
add
repnz
ficompl
add
test
pop
aaa
mov
testl
push
pop
hlt
clc
or
jle
fcoms
sbb
or
sbb
adc
rcr
ss
lods
insb
xchg
insb
test
int3
adc
ret
jmp
data16
pop
int3
cmpsb
jmp
xchg
arpl
lods
out
xorb
jb
ret
cwtl
push
push
sahf
push
xor
jp
add
cli
xlat
jbe
lods
xchg
mov
push
xchg
arpl
push
shlb
mov
fcmovu
or
xchg
cs
das
xlat
and
leave
or
cwtl
pop
jne
lret
in
push
les
sub
jo
sub
cmc
sbb
lret
xchg
aas
add
pusha
ss
inc
popf
mov
ss
aam
out
jp
cli
adc
imul
xchg
sub
lods
xchg
fdivrl
xorb
das
sbb
mov
and
fdivr
stos
test
pop
aad
notb
and
movsl
add
dec
fistpll
push
rolb
dec
in
or
lret
shl
movsl
in
mov
sbb
int3
imul
inc
stc
outsb
mov
push
xchg
sub
pop
sbb
adc
or
or
js
xlat
push
inc
sub
jno
dec
scas
fisubl
out
jmp
inc
push
insl
push
into
loop
mov
dec
mov
leave
sub
push
into
cli
xchg
pop
clc
xor
xchg
jp
xorl
xchg
hlt
pop
dec
clc
sar
adc
je
test
outsl
cmpb
or
push
fbstp
pop
fldenv
dec
add
and
adc
and
adc
lods
movsl
iret
fmull
dec
fnsave
and
adc
lret
inc
mov
lret
push
push
sar
add
clc
lret
pop
push
adc
ljmp
dec
cmp
xlat
out
fcom
xor
pop
cld
fsubl
ror
or
loop
mov
cltd
dec
inc
adc
jne
rcl
loop
and
and
dec
rolb
cmp
mov
and
fcmovu
into
mov
fmull
sbb
lret
fcmovu
cli
cmp
mov
and
or
push
sbb
fcoms
pop
cmp
addl
rorl
enter
int
push
icebp
pop
or
lea
inc
jecxz
push
jp
iret
dec
in
cli
dec
mov
mov
fmul
sbb
stos
or
fdivs
push
adc
push
sbb
dec
fucomi
imul
adc
jle
cld
xlat
jecxz
pop
rorl
mov
std
xchg
dec
push
adcl
dec
push
sub
dec
mov
fdivrs
pop
orb
lods
and
push
lret
pop
in
addl
sub
cmovne
inc
popa
lret
sbb
pop
cmp
push
push
loopne
ja
mov
sti
mov
in
cltd
pop
sbb
mov
dec
fists
sbb
jmp
jl
xor
push
out
push
shrd
in
xor
xor
nop
popf
fldl
fisubrl
pcmpgtw
call
inc
push
push
adc
in
and
ljmp
ljmp
ljmp
mov
sahf
rcrl
jge
mov
js
push
pop
cmp
jmp
cmp
rcrl
push
fsubs
out
push
jmp
insb
ds
jbe
sbb
jmp
call
nop
mov
xchg
adc
scas
fsubl
adc
xor
arpl
dec
sbb
adc
loop
push
or
insb
push
mov
mov
push
xor
push
or
ret
testl
add
fisubl
jmp
outsl
fisubl
or
cs
outsl
mov
sub
push
pop
pusha
daa
into
imul
ja
leave
sbb
ljmp
das
sbbb
adc
shll
sbb
lret
aad
je
scas
lahf
and
adc
xchg
jb
aas
loop
jle
jle
xlat
sarl
rolb
and
fimull
and
push
cmpb
and
and
les
mov
jo
das
in
jecxz
or
in
aaa
cld
and
stos
shlb
push
ljmp
sub
mov
mov
ss
lods
and
int3
fiaddl
jle
mov
insl
in
stos
decl
mov
push
adc
mov
mov
into
jno
jl
int3
imul
xor
leave
call
inc
mov
arpl
jg
in
or
fldt
dec
aad
dec
xchg
les
call
test
cmp
inc
sub
push
inc
sarb
dec
mov
adc
ljmp
je
and
or
pop
pop
flds
xor
movups
or
pop
mov
outsb
or
fsubs
and
and
cld
mov
mull
es
adc
xor
test
mov
orb
in
js
adc
cmpsl
aam
fsubl
leave
adc
xchg
fcoml
dec
mov
int3
bound
mov
mov
mov
cltd
push
out
lret
xchg
jae
minps
mov
fidivrl
push
cmp
inc
add
and
mov
push
pop
mov
jg
mov
stos
lods
in
femms
stos
inc
sub
adc
insb
test
mov
jecxz
imul
jmp
pop
xchg
test
mov
lahf
in
in
js
mov
fs
insb
test
push
lock
inc
ss
dec
pop
push
gs
loop
adc
out
loopne
jo
push
xchg
mov
dec
bswap
and
scas
loopne
int
push
pop
idivb
adc
push
fldl2e
push
dec
and
jnp
push
test
fldenv
push
int
push
ficoml
pop
jecxz
cmc
dec
sbb
adc
jmp
push
dec
int
dec
or
jnp
push
pop
jmp
mov
jne
repnz
stc
sub
fsubs
dec
int3
scas
jbe
insb
outsb
fstl
fcmovnbe
xor
sub
in
adc
lret
movsb
xchg
push
sbb
lods
je
ja
ret
fs
mov
or
add
and
jg
xchg
adc
outsl
mov
sub
mov
pop
stos
mov
mov
cli
jmp
ljmp
add
out
adc
xchg
repnz
mov
lock
and
cmp
jnp
mov
push
inc
lock
adc
enter
aas
pop
ss
add
mov
sbb
and
cltd
sbb
lahf
das
inc
cwtl
lods
mov
xchg
mov
push
mov
shll
gs
repz
icebp
dec
sub
adc
push
and
repz
adc
add
mov
fisubrl
daa
mov
shr
and
into
lds
daa
mov
into
jo
out
int3
sbb
sub
xor
sti
std
or
fistps
cmpb
les
push
cld
loope
stos
fistl
and
cs
adc
ljmp
loope
mov
xlat
sub
ret
push
pop
add
out
push
iret
push
mov
test
lahf
mov
xchg
in
dec
xchg
adc
pop
sub
xor
sub
cs
sub
push
pop
arpl
jb
add
xor
inc
and
repz
int
aas
push
jmp
fcomps
in
out
pop
loopne
and
sbb
xor
shr
pop
inc
xchg
out
pop
push
fisubrs
cwtl
in
ret
push
dec
dec
dec
ret
fdivrs
std
mov
iret
sbb
mov
in
sub
mov
loope
jl
sbb
outsl
ss
or
sbb
push
pop
inc
fstps
in
sbb
xchg
add
rdpmc
push
das
pop
and
mov
or
and
push
and
push
fistps
adc
lcall
notl
clc
dec
adc
mov
push
xchg
int3
aas
mov
aaa
frstor
mov
lods
add
es
push
jb
and
std
inc
repz
insb
ss
push
fldenv
pop
push
mov
adc
ds
push
into
xor
scas
outsb
pop
push
lods
jmp
mov
xor
imul
fbstp
pushf
pop
adc
pop
aas
out
repnz
add
loopne
call
xchg
aam
imul
daa
fldenv
dec
dec
insl
adc
hlt
mov
adc
mov
push
bound
dec
push
xchg
test
sbb
push
mov
sbb
int3
mov
out
pop
sbb
xor
pushf
fisttpl
pop
fucomi
inc
pop
push
loopne
lret
jge
into
push
mov
dec
xchg
push
shl
jp
mov
imul
sub
cmp
dec
push
inc
xor
les
sbb
sti
push
test
mov
pushf
into
les
aas
test
and
sub
out
mov
mov
xor
push
push
or
pop
int
dec
ret
popl
dec
in
or
imul
jns
outsb
out
cmp
iret
gs
fwait
adcb
xchg
sahf
iret
sbb
bound
cmp
sahf
xchg
jmp
sbb
fisubl
mov
lock
cmpl
out
add
lods
or
sbb
clc
test
push
push
xchg
inc
mov
aam
inc
mov
out
or
dec
adc
clc
ds
inc
insb
mov
or
imul
mov
xlat
bound
pop
sbb
xor
sbb
shl
cmc
mov
mov
arpl
stos
popf
dec
push
and
push
dec
aam
popa
push
dec
lock
dec
dec
sub
push
ljmp
adc
xor
scas
mov
aad
std
inc
inc
mov
add
mov
hlt
add
test
dec
sbb
lock
adc
xor
cmc
xor
fcompl
inc
and
pop
adc
out
mov
mov
add
cs
xchg
in
adc
adc
enter
pop
fdivl
ret
pop
mov
pop
dec
sbb
pusha
adc
mov
out
arpl
lcall
mov
pop
fistpl
in
mov
push
into
cmp
sub
xorb
add
aad
aad
out
jp
mov
jecxz
adc
inc
push
das
mov
mov
rclb
mov
stos
in
iret
mov
out
push
mov
dec
in
stc
movsl
jb
lret
btr
xchg
cld
bound
push
push
call
mulb
shlb
pop
packsswb
and
mov
clc
ret
icebp
cmpsl
push
and
sub
push
push
dec
mov
aad
pop
out
push
int
mov
fcoml
idivl
mov
scas
inc
dec
sbb
push
test
jmp
ljmp
lods
or
inc
cli
push
in
or
and
dec
int3
aas
sbb
lcall
imul
lcall
cmpsb
xor
xchg
push
aad
lea
insl
lret
fadds
dec
push
xchg
mov
iret
inc
loopne
pusha
fsubs
scas
cmp
lcall
sbb
hlt
aam
shll
pop
xor
pop
bound
xor
aad
lret
cmpsl
bound
xlat
arpl
xor
sbb
jmp
or
dec
aam
ljmp
mov
mov
dec
imul
and
test
mov
mov
add
in
outsl
jg
add
xchg
pop
cli
lret
js
bound
and
mov
in
jl
adc
sub
fmul
int3
fwait
dec
int
sbb
and
in
decl
pop
dec
insb
push
dec
icebp
push
cs
scas
adc
xchg
jo
mov
fistps
push
rolb
pop
rorl
inc
sti
jns
shrl
lahf
push
push
aad
iret
or
loop
pop
lahf
pop
mov
lret
add
push
cltd
gs
in
rcr
dec
rcr
out
bound
pop
out
dec
or
cwtl
push
lahf
add
bound
jecxz
push
ret
or
push
insb
xchg
and
bound
iret
sbbb
leave
adc
repnz
ljmp
cltd
andl
mov
mov
push
ja
push
and
inc
lret
and
sub
or
or
int3
mov
int
dec
sahf
dec
jl
adc
sub
or
sub
or
adc
push
scas
and
aaa
cmp
sbb
sbb
enter
or
sbb
dec
cmp
and
dec
mov
out
pop
cmc
and
sub
fidivrl
aas
and
ss
fildll
cmp
ljmp
addr16
push
and
fbld
pop
out
cli
incb
mov
pop
movsl
fwait
jmp
test
cli
test
popf
popf
mov
ljmp
fisubrl
jne
xlat
sbb
inc
and
flds
and
jne
pop
fstpt
push
pop
dec
cwtl
sub
add
das
or
test
adc
sarl
lahf
in
int3
inc
gs
mov
popa
push
or
int3
jno
outsb
mov
xor
add
lret
fdivl
outsb
ss
std
iret
mov
or
pop
leave
sbb
data16
fistpl
outsl
mov
mov
fucomi
lods
cwtl
div
sbb
jne
jb
lahf
or
adc
fdivrl
sub
xlat
ljmp
or
mov
in
hlt
cwtl
mov
xchg
ret
test
dec
cmp
or
neg
mov
iretw
push
out
xchg
push
cmp
jp,pt
dec
jp
jp
adc
in
dec
inc
loop
cli
andl
mov
inc
int
dec
daa
xor
out
push
int
mov
inc
adc
and
in
mov
mov
push
pop
out
adc
sbb
pushf
in
dec
int3
fucomip
dec
lcall
cmovle
sub
jg
pop
jbe
pop
jge
mov
mov
push
jnp
push
xchg
xor
aam
testb
or
dec
xchg
aad
jg
mov
xchg
or
lods
dec
int
add
jb
outsb
mov
stc
mov
ljmp
dec
cwtl
cmpsb
rorb
ficompl
repnz
mov
xor
ret
ljmp
outsl
or
std
jl
test
call
popa
jmp
xchg
rorl
or
jge
push
jle
aas
mov
pop
xchg
push
jecxz
adc
into
cmpsl
dec
inc
ja
outsl
int
scas
lea
insb
pop
jo
aas
clc
movsb
cmpsl
into
repnz
fidivs
ror
sub
faddl
cs
clc
xor
imul
shll
fisubrs
lds
adc
xlat
je
push
int3
dec
mov
and
stos
mov
cmp
in
dec
mov
push
ljmp
mov
inc
cs
or
mov
mov
hlt
mov
fmulp
sub
into
dec
xor
lds
or
incl
loop
in
ss
mov
int3
scas
dec
imull
scas
ds
or
cmp
je
rcrl
flds
mov
nop
repz
js
jae
xchg
pop
bound
xchg
mov
sbbl
hlt
push
test
into
leave
push
rorb
mov
fs
or
pushf
out
lret
dec
and
fisttpl
iret
mov
sti
cmp
clc
cwtl
imul
iret
push
out
movsb
leave
fildll
jo
xor
sbb
sbb
ja
dec
fbld
stos
jno
iret
mov
dec
dec
push
push
pop
sub
js
or
mov
jns
mov
int3
adc
enter
sbb
outsb
hlt
cmpsb
daa
out
or
imul
pop
dec
popf
clc
std
data16
arpl
shr
mov
sti
popf
lcall
dec
movsb
or
xor
push
outsb
test
jno
ljmp
add
mov
cli
or
popf
add
xchg
sbb
outsb
mov
push
and
and
insb
fistpll
in
push
fsubrl
ret
out
ds
je
inc
shl
jns
loope
or
push
and
mov
and
add
mov
hlt
shll
pop
add
cmp
xor
mov
in
dec
lds
lods
into
fistpll
call
lds
mov
dec
je
xchg
and
mov
outsl
fimull
jns
xor
dec
fnstenv
in
add
scas
mov
cmp
add
pop
pop
das
inc
repz
jo
mov
shlb
mov
pop
xor
mov
sub
cmp
fdivs
into
roll
into
test
fldcw
jp,pn
add
pop
loopne
sti
mov
test
mov
xor
jecxz
in
ss
or
or
jbe
jne
cmp
sub
pop
pushf
movl
pop
jecxz
mov
fdivrl
sub
push
stos
leave
sub
aas
movsl
push
or
aas
scas
loope
push
aad
or
jmp
or
outsb
cmp
adc
mov
pop
or
mul
cwtl
push
xchg
loope
dec
sbb
pusha
pop
lret
mov
int3
jmp
cmp
bound
outsl
mov
cmpsl
in
inc
popa
xor
cmpsb
xchg
push
xor
xchg
mov
sbb
adc
xlat
mov
sti
xchg
push
popf
negl
push
add
outsl
adc
movsl
push
and
lcall
inc
sub
sbb
inc
xchg
pop
or
scas
ficoml
mov
pop
mov
adc
aad
or
ret
pusha
mov
xchg
outsb
fwait
or
dec
out
pop
out
clc
mov
xor
out
pushf
dec
addr16
mov
into
cmpsb
adc
sbb
inc
or
or
loope
je
mov
sub
dec
pop
xchg
mov
daa
adcl
arpl
pop
iret
jle
in
cmp
mov
data16
aas
cmp
jl
push
jae
jo
jb
lret
lret
test
call
inc
or
and
shlb
xor
cmc
loopne
sbb
mov
stos
cmp
jle
mov
mulb
xorb
cld
inc
loop
or
mulb
jmp
inc
enter
popa
and
fisttps
mov
mov
ret
jb
incl
xor
leave
int
xchg
jnp
bound
xchg
mov
mov
push
sbb
js
ret
mov
dec
or
in
fimuls
inc
shll
mov
nop
pusha
jb
dec
leave
jle
push
mov
xchg
aaa
sarb
jl
daa
dec
nop
pop
daa
xor
jo
pop
fmul
cli
cmpsb
sub
push
iret
lods
insl
adc
call
xor
lea
push
sub
sbb
pop
popl
inc
dec
sti
mov
andb
dec
mov
mov
daa
std
push
mov
ss
push
pop
dec
pop
or
mov
mov
ret
sbb
ljmp
push
sub
inc
js
dec
pop
cmpb
jnp
mov
aas
sbb
push
push
jl
pop
int
int
mov
and
clc
daa
repnz
xchg
inc
and
pop
add
mov
jne
shll
jo
sub
cmp
mov
xchg
adc
pop
sbb
inc
ljmp
repnz
mov
push
jo
dec
test
popl
leave
stos
lcall
dec
mov
dec
std
cli
jmp
mov
or
or
in
movsb
adc
or
sti
jb
pop
pop
fwait
popa
pop
push
int3
add
jmp
xchg
lods
repnz
push
xchg
out
sti
cmp
lret
int3
into
ds
outsb
xchg
lret
data16
shl
test
insb
add
pop
xchg
loopne
outsl
sub
xchg
sbb
sbb
incb
lea
sbb
gs
pop
loopne
ja
out
sbb
sti
pop
add
xchg
cli
mov
cmp
cmp
mov
push
les
inc
sub
popf
lods
mov
push
and
dec
aad
xchg
pop
jo
push
aas
pop
outsb
sbb
or
pusha
lds
mov
pop
call
sub
es
cwtl
lods
loope
popa
adc
in
pop
pop
push
push
shlb
mov
pusha
pop
inc
cmpsl
dec
jno
mov
enter
fists
dec
push
mulb
and
push
dec
aas
cmp
dec
push
clc
dec
lret
arpl
scas
dec
rorl
cmp
cmpb
arpl
jecxz
in
sub
nop
jle
cmc
gs
iret
leave
clc
pushf
cs
rclb
stc
testb
fxam
loop
sbb
clc
dec
sub
clc
mov
fdiv
nop
movsl
insl
loopne
push
nop
rcl
dec
xor
daa
fiaddl
cmp
mov
ret
adc
es
pop
xchg
scas
cltd
test
push
pop
ss
inc
iret
loop
add
jb
and
fcmove
int
sub
dec
mov
stos
mov
pop
and
arpl
mov
into
loop
rclb
decl
je
loopne
dec
lods
and
aas
in
dec
int3
lock
loope
jmp
das
fmuls
or
sub
mov
in
pop
movsl
mov
mov
lock
fwait
pop
add
lret
and
ficompl
das
push
dec
inc
idivl
mov
fnstsw
mov
mov
cmp
mov
popa
rol
inc
test
lcall
adc
push
addr16
ja
jl
cmp
test
repnz
movsl
fidivl
fwait
sbb
dec
xlat
dec
dec
out
sbbb
leave
ror
aas
sti
fstpt
sbb
dec
mov
mov
into
sub
dec
inc
mov
cmp
xor
dec
lock
call
fcmovb
in
push
ljmp
push
jecxz
jb
or
jns
cli
cli
mov
lret
push
mov
out
jge
out
rorl
pop
int3
std
mov
adc
adc
and
push
cmp
testb
adc
and
jge
lods
fwait
cmp
shrb
xchg
push
outsb
mov
mov
addr16
inc
inc
sub
cmc
push
jl
pop
mov
cmp
sbb
and
xchg
lea
repnz
dec
addb
leave
jae
jge
lahf
outsb
mov
int
mov
cmp
jns
stc
mov
int3
push
or
push
sub
out
dec
mov
ret
flds
pop
xchg
cmpsl
mov
cmp
mov
dec
jge
int
jg
ja
or
shr
cli
jbe
js
jge
sbb
adc
into
sub
push
jne,pn
ss
mov
clc
sub
jns
push
dec
cld
insb
jmp
adc
xlat
fwait
or
mov
jb
push
sbb
bound
mov
imul
decl
mov
or
mov
outsl
pushf
push
iret
xor
dec
mov
pusha
shrb
jae
dec
ret
xchg
arpl
push
pop
jp
cmp
jnp
fildl
aam
pop
mov
in
xor
repz
lret
or
and
sub
hlt
sbb
inc
sbb
lahf
xlat
ss
dec
cld
fstpt
mov
int3
jg
rorl
jne
sarl
jle
jns
dec
jge
lods
pop
mov
xor
lock
mov
sti
jle
cmpsb
push
and
arpl
jp
jb
push
fisubrl
cltd
insb
xchg
int3
lahf
in
adc
outsb
cld
notl
mov
inc
cmp
sbb
xchg
scas
jbe
inc
fisttpll
mov
in
push
lret
sti
pop
pop
aad
jg
inc
shlb
test
ror
mov
jns
addl
adc
pop
push
mov
or
lcall
sub
insb
ljmp
jne
lret
fdivl
jp
adc
lret
bswap
dec
push
ficomps
mov
jo
or
aad
mov
pop
leave
and
adcl
shl
das
push
xadd
jb
aad
push
push
jle
pusha
int3
les
and
shl
cwtl
lds
aaa
in
push
ror
std
test
pushf
int
scas
ljmp
add
push
pop
or
sbb
inc
out
and
adc
pop
pushf
fimull
fists
daa
jl
lcall
mov
lods
test
aam
into
push
push
xchg
xchg
push
cmp
mov
adc
push
pop
in
jg
sbb
sub
adc
pop
pop
ror
adc
mov
vpshld
ss
push
push
pushl
mov
xchg
dec
orl
fistpll
in
mov
xchg
or
push
loop
lds
mov
fcmovnu
pop
outsb
iret
xchg
rorb
or
adc
outsl
jle
lret
aam
ja
rcrb
push
pusha
or
cmp
jae
cmp
test
push
jae
and
aad
fs
fists
mov
xchg
or
shll
push
lcall
sbb
rcll
lds
mov
out
pop
mov
jl
in
enter
lock
mov
jge
imul
inc
stc
test
xchg
adc
pop
adc
xchg
repnz
iret
aas
pop
push
push
cmp
lea
cli
pop
dec
test
xchg
fildl
jb
scas
int3
in
pop
mov
cmp
pop
lcall
or
int3
fwait
int3
into
lds
pop
adc
cmp
xchg
divb
int3
pop
out
mov
pushf
mov
add
cmp
mov
pop
loope
mov
adc
push
lods
adc
int
popf
xchg
and
bound
je
pop
cmp
xchg
mov
data16
mov
mov
push
jb
push
sbb
adc
ja
or
std
jmp
push
int3
or
xchg
cmc
pop
or
add
mov
test
cs
fdivl
mov
push
int
jno
sbb
inc
sbb
xchg
xchg
scas
push
dec
loop
push
test
jl
lock
bound
jl
push
push
push
and
sub
sarl
jnp
pop
cmpsb
bound
inc
pop
inc
xchg
daa
xchg
jbe
and
adc
dec
sub
dec
add
sbb
pop
mov
and
les
divl
jecxz
mov
mov
ljmp
mov
xchg
and
or
aad
dec
into
out
jp
rcr
pop
xor
dec
js
inc
mov
and
push
cltd
push
cmc
jle
pop
insl
in
dec
inc
mov
popa
xchg
fdivrl
adc
jmp
jae
bound
ret
mov
cli
repnz
ljmp
adc
bound
pop
outsb
ljmp
xor
mov
jmp
sbb
xchg
or
adc
mov
mov
cmpl
jno
inc
scas
fisttps
loop
fisubrs
sbb
sub
adc
lahf
out
lds
push
inc
dec
xchg
incl
jecxz
xor
popf
xchg
fsubrl
pop
imul
mov
mov
push
push
jge
and
add
repz
cltd
jl
stos
pop
sub
ret
and
jl
out
adc
test
add
cmc
mov
ja
ds
jg
sub
lret
aam
cmp
pop
pop
call
pop
sub
inc
insl
popf
outsb
cwtl
mov
pop
orb
out
in
pop
pop
fimuls
repz
sar
dec
sub
mov
adc
or
mov
pop
rcrl
cmp
mov
xchg
xor
jmp
inc
adc
stos
push
aam
push
jmp
fwait
sbb
lcall
pop
iret
dec
and
lea
add
sti
mov
sub
or
mov
scas
in
loopne
push
ljmp
xchg
in
in
bound
jecxz
dec
or
imul
insl
ret
dec
push
cmp
inc
dec
out
sbb
out
pushf
sub
stc
nop
pop
aad
mov
xor
pop
stos
addr16
add
mov
loop
cmp
js
movsl
xchg
int3
cld
push
xor
in
cmp
adc
and
push
and
xor
scas
shrl
inc
pushf
or
fcmovnu
push
pop
mov
mov
pushf
inc
in
call
shlb
inc
lock
lret
push
clc
inc
sbb
std
push
lret
fcmovnu
bound
jmp
fmul
loope
and
pop
dec
ljmp
in
sub
jb
daa
int
dec
std
mov
and
dec
lods
rolb
inc
xor
xor
adc
xchg
in
push
in
push
test
sub
mov
dec
scas
lahf
iret
xor
sub
cmp
mov
mov
insb
and
clc
ret
rcll
and
push
scas
xor
lret
sub
xor
cld
cmp
cmpsb
pop
ret
cltd
pop
daa
in
dec
aas
out
cmp
divl
test
inc
test
lret
pushf
inc
cs
out
int3
arpl
into
sub
push
sub
jmp
daa
in
push
pop
lret
orb
pushf
sbb
sti
scas
in
rolb
ljmp
push
add
sbb
aaa
rcr
mov
mov
pop
sbb
dec
shrl
aad
fstl
mov
adc
movsl
out
mov
cmc
dec
in
xchg
ljmp
imul
ror
xor
rolb
add
adc
adc
insb
adc
adc
fildl
mov
test
dec
pop
std
ja
lahf
push
jmp
and
jle
aam
xchg
dec
out
push
in
lods
inc
pop
fs
jnp
jb
adc
scas
jmp
pushf
mov
cs
hlt
ja
and
lock
mov
out
cmp
sbb
out
imul
and
xchg
adc
mov
ljmp
insb
icebp
adc
fwait
add
mov
or
imul
push
rorl
cmp
sbb
and
jmp
fdivrl
dec
jbe
mov
or
jbe
xlat
pop
sti
jg
in
mov
pop
test
xor
sbbb
daa
adc
adc
shlb
fisttps
and
das
mulb
andb
loope
mov
adc
cwtl
push
adc
ljmp
fneni(8087
dec
pop
and
mov
push
hlt
push
bound
outsb
pop
jmp
push
inc
add
decb
enter
pop
sub
int3
icebp
push
shlb
fdiv
cmpsl
loope
or
shr
pop
jmp
mov
decl
mov
mov
xchg
push
lret
dec
cs
push
add
push
xchg
dec
shrb
pop
mov
aaa
pop
sbb
mov
test
rcrl
pop
adcb
dec
jae
or
data16
ret
sub
les
mov
and
pop
jp
push
xchg
jo
dec
and
mov
iret
cmp
ret
das
js
push
lock
cmp
test
push
inc
xor
test
pop
xor
mov
dec
fnsetpm(287
adc
dec
test
hlt
inc
mov
loop
mov
adc
lods
aas
add
int3
dec
and
jg
sub
iret
push
mov
scas
ja
fucom
sub
dec
aas
call
lret
cmp
push
subb
hlt
add
dec
cwtl
adc
mov
push
lock
push
into
dec
dec
add
out
dec
stc
xor
and
and
sar
pop
in
pusha
repz
mov
lods
or
and
loop
sti
sub
mov
jb
dec
adc
nop
mov
fldcw
pop
fisttps
movsl
daa
sahf
imul
sub
mov
ds
sbb
fisttps
cwtl
pop
adc
fwait
jg
push
jae
lock
lahf
pop
cwtl
dec
cmp
lods
jb
pop
pusha
pop
into
xlat
pop
mov
xchg
push
test
inc
fwait
bound
paddb
lcall
shll
iret
in
cwtl
bsf
adcb
cltd
push
jge
shlb
aas
int3
lods
into
popa
and
int
dec
pop
adc
ljmp
loopne
cmp
jge,pn
pop
jl
lea
std
js
pusha
fisttpll
cwtl
lret
sarl
inc
mov
lret
mov
or
pusha
mov
and
jp
jmp
imul
jmp
inc
das
dec
scas
mov
int3
pop
jo
movsl
jae
scas
mov
fdivr
jne
lods
mov
pop
fmuls
sub
mov
je
xchg
add
sar
inc
js
aas
push
out
adc
das
scas
or
jge
sar
iret
mov
scas
add
adc
out
jns
pop
and
jl
and
inc
movsb
lcall
xchg
jmp
dec
mov
adc
jnp
stos
fstpt
mov
hlt
aam
loop
pop
inc
xor
shl
mov
loopne
add
pop
idivb
fidivs
mov
lods
or
sarb
jl
aam
fcoms
int3
sarb
mov
dec
pop
sarb
mov
sub
jb
pop
lret
push
dec
leave
enter
aaa
test
and
lret
dec
inc
pop
enter
mov
lock
jge
pop
push
mov
fsts
test
cli
ss
xchg
in
mov
inc
mov
int3
in
pop
jbe
jmp
mov
movups
test
lods
test
dec
jne
cmp
jge
fidivrs
roll
popa
into
cmp
push
mov
lret
jnp
jmp
lret
pop
and
add
adc
loop
movsl
fisttpll
and
jmp
adc
repz
jmp
xchg
les
inc
fstpt
lods
adc
fs
mov
jmp
adc
push
int
cwtl
dec
leave
xchg
inc
mov
call
dec
out
cmp
pop
imull
sbb
cmp
mov
pushf
sarl
ss
adc
jle
pop
jge
inc
xchg
mov
and
enter
push
push
shl
or
shl
cmp
std
out
andl
sbb
out
or
mov
insl
xchg
lds
scas
pop
mov
xchg
mov
shlb
dec
push
mov
sub
fdivl
inc
lods
mov
push
cmp
icebp
and
into
mov
stos
dec
mov
fildl
mov
pop
xor
inc
push
inc
int
and
mov
and
mov
sub
and
push
leave
add
adc
int3
cltd
cmpb
mov
mov
outsl
in
pop
or
lret
mov
ljmp
sbb
push
cmpsl
push
xor
cmc
or
mov
add
jmp
ds
mov
addr16
lea
add
rep
add
cs
cmp
pushl
mov
jae
or
dec
fdivrl
mov
insb
or
xlat
addl
mov
xchg
leave
arpl
daa
inc
lret
shlb
mov
cli
cs
dec
ss
cmc
stos
aas
fidivs
mov
ja
push
cli
push
sbb
xor
pop
add
mov
mov
ds
jl
ja
test
cli
jbe
mov
xchg
mov
scas
xor
push
rolb
mov
clc
mov
lock
mulb
push
int
pusha
pusha
mov
xchg
jmp
shrb
rorb
scas
shlb
lods
dec
cld
xchg
mov
or
js
mov
fistpll
fisttpl
rolb
inc
out
sub
pop
bound
lret
jmp
rdpmc
daa
push
mov
inc
subb
or
jl
sub
pushf
mov
xor
test
imul
ljmp
jmp
in
ljmp
xlat
push
push
loop
movsl
jge
divl
mov
lahf
icebp
cmpsb
testb
or
dec
mov
mov
mov
in
dec
cmp
popf
incl
lret
and
push
jl
outsl
int
aas
or
cmp
mov
das
mov
adc
sti
add
dec
loop
jbe
and
cmpsl
xor
insb
scas
pop
lods
shr
or
aas
out
mov
xlat
adc
and
and
pop
mov
lds
inc
lods
cs
and
adc
sbb
sbb
bound
and
aad
lcall
dec
in
fisttps
push
scas
mov
sub
js
mov
mov
out
aam
sbb
add
dec
xor
xchg
sti
or
inc
xor
sbb
mov
mov
or
fidivs
jno
out
outsl
icebp
bound
pop
inc
mov
dec
pop
int3
mov
jp
mul
cwtl
adc
lock
mov
mov
mov
and
hlt
and
xor
jmp
inc
out
subl
clc
pop
jb
je
adc
pop
pop
ds
adc
cmc
mov
push
and
or
lods
xlat
gs
dec
icebp
lret
xor
in
bound
test
mov
iret
cs
cmp
mov
sub
rorb
cmc
cltd
sub
sub
push
in
ljmp
cltd
lret
inc
in
ror
nop
adc
mov
imul
lahf
sti
pop
mov
subb
sarl
in
fisttps
dec
push
idivb
pop
dec
mov
dec
mov
inc
pop
in
sub
cmp
xchg
stc
ljmp
jg
lret
jl
loope
rcrl
jle
xorb
xchg
insl
cmp
sub
sbb
fidivs
mov
pop
das
dec
or
or
addr16
sbb
pop
push
mov
shll
push
sti
shrb
packsswb
and
int3
pop
sbb
xlat
adc
jo
es
out
fildl
xor
mov
mov
jmp
jns
add
insl
cmp
dec
out
or
outsl
sub
in
sti
mov
push
roll
pusha
and
jnp
pop
pop
rorb
xor
das
fcoml
sub
pop
subb
in
cli
push
adc
mov
sbb
sbb
xor
sbb
shll
jp
iret
mov
arpl
decb
add
int
neg
adc
jg
es
push
leave
xor
and
pcmpgtd
pop
nop
cmp
pop
xchg
cld
and
call
dec
xor
test
neg
test
mov
aad
out
mov
and
sbb
dec
addr16
mov
add
negb
pop
dec
or
mov
movsb
hlt
mov
out
mulb
fisubrl
or
scas
dec
mov
pop
repz
out
adc
shlb
and
fsubrl
jnp
add
clc
ds
loope
fisttps
cs
aas
in
mov
fbstp
loopne
mov
pop
subb
and
fcoms
in
mov
adc
cmp
xchg
bound
adc
cmp
fistpll
and
arpl
clc
or
or
popa
popf
push
call
xchg
out
cmp
push
clc
insb
repz
jo
dec
pusha
adc
loope
int3
out
dec
iret
or
inc
lds
stos
int
push
inc
jae
in
cmpsb
push
jl
push
dec
add
mov
pop
scas
in
cmp
or
lahf
pop
xorl
scas
aad
push
fisubs
and
into
fsubrp
fmulp
push
lahf
cmp
or
cmp
cmp
aam
dec
ljmp
push
mov
jl
xchg
xlat
jb
mov
sub
ss
ljmp
jp
adc
pop
dec
xlat
test
int
subb
lret
or
dec
iret
call
cli
cmp
stos
sahf
mov
sbb
mov
ljmp
add
mov
inc
scas
das
mov
adcb
dec
clc
fcomps
sahf
je
je
into
data16
aaa
or
jge
in
movsl
jmp
add
jp
clc
xchg
int
sbb
cmpsb
mov
les
or
jnp
push
adc
int3
dec
test
mov
fsubrs
push
adcb
or
int3
adc
pop
cmpsb
fcoml
inc
call
inc
insb
jns
orb
shlb
adc
lock
inc
adc
mov
sub
pop
faddp
mov
and
inc
jmp
imulb
cmp
mov
outsl
stos
dec
call
sub
cmp
xor
inc
iret
mov
sbb
xchg
jge
and
add
les
pop
popf
bound
sub
jle
push
or
fiaddl
fcmovnu
sub
mov
add
scas
mov
shr
mov
sub
sbb
pop
into
std
div
dec
repz
cmpsb
xor
push
push
sub
push
insb
or
xchg
mov
mov
fnstcw
dec
je
push
sub
and
lret
gs
mov
je
push
pop
aas
xorb
xchg
sar
sub
test
lret
dec
popf
push
push
mov
cmc
arpl
lea
inc
in
pop
adc
jae
sbb
shr
mov
es
test
fnsave
out
lock
inc
mov
lcall
or
push
pusha
test
rcr
decb
add
and
hlt
out
flds
dec
lock
jecxz
fstpt
outsb
test
std
or
addb
jbe
mov
jle
jmp
out
mov
jnp
adc
jecxz
inc
in
push
mov
icebp
mov
or
iret
int3
ret
test
sbb
mov
or
pop
sub
sbb
fcmovnb
or
rclb
xor
icebp
dec
mov
add
decb
fisttpl
pop
bound
jns
fildl
pusha
adc
sti
push
cli
dec
stos
dec
ljmp
dec
insb
and
and
ffreep
ljmp
mov
out
adc
or
sysenter
sarb
insl
jns
inc
jl
sarl
subl
imul
ds
xor
xor
and
ljmp
adc
adc
add
ret
mov
sbb
lret
mov
pushf
fnstcw
dec
sub
jns
sub
fisttps
arpl
or
sub
push
jmp
or
push
xchg
nop
daa
cmp
rclb
cmpsb
cld
cmp
pop
inc
push
js
into
and
jg
imul
out
mov
test
or
notl
mov
das
pop
lret
dec
inc
mov
fisttpl
adc
cmp
rep
inc
or
jg
push
and
pushf
in
and
inc
add
aad
loop
jae
add
loop
into
adc
and
sub
push
fwait
xchg
cs
dec
and
dec
or
aam
pop
rcrl
cmp
mov
dec
incl
dec
cli
jbe
fimuls
inc
xor
xchg
pop
jge
xchg
dec
gs
push
dec
mov
bound
lahf
sbb
mov
mov
test
jne
jmp
add
adc
pop
dec
sbb
fbstp
sub
out
xor
inc
mov
aam
add
fiadds
mov
cmp
xchg
push
das
mov
out
js
sbb
xor
sbb
sbbl
rcrl
inc
sahf
negb
cmp
dec
in
and
adc
mov
hlt
sub
inc
lods
lock
stc
or
xchg
mov
lret
icebp
mov
jo
push
xchg
lret
dec
push
jb
jp
pushl
iret
xor
xor
in
pop
and
push
into
orb
adc
push
sbb
je
icebp
leave
cmp
xor
in
or
mov
ds
mov
mov
fsts
jnp
stos
dec
ja
cmp
lret
rcll
or
cmpsb
cld
dec
jns
pop
sub
mov
ret
cmp
aaa
sub
out
fnstcw
fadds
and
sti
add
out
nop
or
out
das
daa
push
and
inc
in
inc
mov
cmp
fnstsw
fsubrl
pushf
pop
fistps
popa
cwtl
into
sbb
addr16
test
push
roll
add
jae
and
repnz
push
lret
sub
and
ljmp
jge
fnstenv
pop
shlb
sarl
mov
bound
lea
and
data16
out
pop
mov
test
int3
shrl
nop
int3
js
into
ror
xchg
fmul
adc
xchg
sub
cmp
dec
lret
sbb
mov
nop
popa
orb
mov
lret
dec
movsl
int
adc
dec
jno
dec
nop
xchg
dec
outsl
inc
stos
int
nop
ret
add
or
xchg
sbb
enter
push
rcll
enter
cs
call
pop
xchg
loopne
lds
rorl
mov
pop
dec
push
push
cmpsl
cmc
std
lahf
fldt
cmp
pop
mov
cmpb
xchg
lahf
ljmp
int
push
lods
jle
shll
or
push
outsl
mov
inc
mov
loop
push
into
pop
fimull
fidivrs
mov
lcall
in
ret
inc
nop
push
lock
int
fistps
push
add
xor
dec
inc
adc
adc
ljmp
sub
clc
jo
ja
mov
daa
dec
hlt
xchg
incb
rcll
fnstenv
std
and
dec
pop
imull
jnp
cmp
mov
push
jb
push
or
adc
or
dec
aad
mov
xchg
outsb
and
dec
mov
adc
out
lret
test
dec
push
push
jl
xchg
out
in
jno
cwtl
fmulp
mov
xchg
xor
popa
ds
int3
std
testl
dec
loop
or
cmp
ljmp
mov
dec
divl
scas
adc
sbb
repz
dec
inc
and
xchg
jb
int
ficompl
out
cli
push
stc
dec
fldt
das
shr
jl
mov
pop
sbb
pushf
outsl
aam
rorl
xchg
push
fbstp
mov
cmpsl
fcomi
pop
lods
icebp
pop
pop
sub
mov
sub
ds
pusha
mov
in
cmpsl
xor
insb
xor
mov
pop
add
push
dec
movaps
daa
test
into
imull
or
jle
out
sub
push
mov
mov
push
fucomi
push
mov
dec
and
jns
loope
or
mov
xchg
jle
xchg
mov
sti
mov
lahf
imul
shl
loopne
dec
add
mov
pop
mov
int3
sub
pop
mov
out
dec
mov
insl
mov
cmp
add
shlb
fmul
jmp
xchg
push
adc
fcmove
mov
fdiv
push
ljmp
jge
push
xchg
nop
mov
mov
std
adc
push
push
cmpsb
hlt
neg
push
shrl
aam
or
or
mov
addr16
jl
add
jb
dec
adc
dec
add
pop
test
adc
jnp
sbb
das
xchg
push
lods
push
jg
adc
add
mov
cmp
jae
jnp
nop
jb
scas
pop
scas
popf
add
call
adc
and
adc
cs
mov
sbb
mov
insl
dec
jo
ret
sub
mov
sbb
scas
lods
incl
xchg
sti
jbe
mov
sub
mov
in
cltd
cmp
jp
xor
outsl
dec
dec
int
or
cltd
repnz
pop
mov
dec
rcll
cs
add
jge
xchg
mov
push
notb
dec
or
outsl
mov
adc
aas
dec
cwtl
stos
dec
dec
sbb
pop
mov
mov
add
in
scas
mov
inc
cltd
push
mov
push
or
ljmp
int
cli
mov
push
jb
repnz
lods
lret
scas
jbe
stos
adc
popf
adc
clc
push
jb
inc
out
pop
adc
in
pop
adc
daa
sarb
pop
mov
cmpb
mov
mov
mov
mov
xchg
jle
adc
aam
dec
data16
cli
and
into
popw
cmp
nop
and
jo
lock
add
and
xchg
jg
stos
xlat
in
xchg
scas
lret
inc
int3
shrl
jle
fiaddl
call
lret
adc
add
int3
testb
sub
fdivrs
sbb
scas
mov
ficoml
pop
add
or
mov
lock
jge
pop
sahf
dec
sub
outsb
stc
jp
out
adc
jge
and
or
xchg
hlt
inc
sbbb
pop
loopne
jge
add
jb
and
decl
adc
dec
shlb
scas
jb
ds
leave
push
adc
andb
lock
popl
and
dec
mov
push
jns
divb
dec
cmp
jp
cmpsb
mov
inc
cmp
insl
sbb
push
lahf
push
mov
inc
js
mov
loop
pusha
add
ljmp
cmpsl
sbb
in
adc
hlt
or
pop
jmp
stos
or
jo
pushf
pop
out
xlat
add
xchg
repnz
sbb
bound
cs
fcoml
iret
sbb
notb
inc
mov
sub
fmull
xor
or
pop
into
mov
in
dec
mov
mov
popf
push
cltd
pop
pop
xchg
js
dec
das
nop
lret
iret
xlat
repnz
int
ficompl
or
outsl
mov
fdivrs
dec
and
mov
lcall
adc
cmpsb
sahf
mov
bound
jl
iret
mov
inc
mov
mov
inc
push
out
xchg
or
and
imul
jge
adc
cmp
scas
push
nopl
pop
ds
sbb
mov
jb
add
push
pop
inc
test
xchg
jb
sbb
mov
sub
pop
sub
mov
cmp
push
in
dec
adc
arpl
xchg
int3
fcompl
adc
push
dec
cli
test
inc
jg
addr16
mov
dec
push
cmp
aaa
and
outsb
call
xor
push
fwait
mov
dec
jnp
in
lods
or
add
mov
bound
mov
pop
enter
incl
dec
sbb
add
int3
and
mov
mov
je
adc
iret
sbb
jmp
ret
repz
out
out
call
or
mov
out
mov
pop
sub
into
cmp
repz
hlt
mov
movsl
decl
iret
or
cmc
hlt
push
dec
push
popl
cmp
dec
fcoml
or
add
iret
push
div
repz
jl
pop
stc
loope
fisttps
mov
test
xchg
test
sti
mov
daa
scas
push
addr16
fildll
outsl
sbb
nop
in
pop
jp
push
mov
xchg
ja
lret
mov
jns
push
ficomps
and
repz
adc
pop
mov
fstpt
lock
insb
vandnps
js
xchg
stos
loope
push
mov
cmp
popf
push
scas
aaa
iret
decb
dec
imul
pusha
iret
push
repnz
sbb
clc
testb
and
mov
pop
lods
dec
or
faddp
ss
adc
stos
and
lock
cmpsb
lahf
in
aad
stc
mov
test
pop
or
push
xlat
out
sbb
shlb
jp
cli
pop
js
icebp
jo
ljmp
stos
push
jle
or
insb
icebp
iret
adc
push
inc
test
movsl
in
cmp
fldl2e
std
leave
pop
mov
orb
push
iret
fsubr
pop
mov
mov
fs
mov
lret
pop
mov
adc
dec
leave
loop
imul
jecxz
aaa
mov
pop
push
ljmp
and
push
jnp
lret
sub
iret
fstpt
pop
bound
repz
out
in
sti
mov
jbe
mov
icebp
pop
jp
cltd
out
push
or
xor
fcoms
lock
lcall
jle
rcll
loop
out
cltd
dec
jbe
or
push
dec
xor
rclb
int3
out
push
scas
in
lods
adc
in
sub
mov
or
out
dec
push
jno
jne
pop
sti
inc
aas
jl
or
ret
adc
inc
dec
pusha
ret
cmc
mov
rcrb
mov
pop
arpl
dec
adc
popa
in
xchg
push
lock
xchg
pop
in
sbb
xor
mov
into
jecxz
sar
lret
fimull
out
or
mov
pop
push
jp
lcall
cmpb
adc
or
push
xchg
add
pop
scas
adc
movsl
icebp
push
dec
mov
mov
cmc
sbb
fnstenv
or
and
mov
loope
xchg
xchg
mov
mov
sub
in
sub
push
stos
xor
xor
xor
or
dec
add
dec
sbb
iret
jne
inc
lods
pop
bound
jp
add
stc
jg
out
xor
or
scas
cmp
jle
loop
out
ljmp
cmp
pop
imul
mov
loope
cmp
mov
push
or
mov
pop
jle
rol
cmp
xchg
sub
mov
dec
jle
dec
mov
dec
jb
cmp
jbe
cmp
call
push
mov
scas
jno
jmp
int3
jecxz,pt
add
setns
cli
jmp
decb
stos
dec
bound
ljmp
mov
subl
push
imul
int3
daa
stos
dec
das
adc
add
mov
iret
pop
mov
dec
add
pop
leave
mov
mov
mov
cld
push
push
fisubl
pop
mov
xor
test
xor
fdivrs
clc
aad
fimuls
aas
stc
das
xchg
int
popa
dec
aam
mov
stc
fs
inc
adc
jl
rcll
iret
jb
dec
test
outsb
scas
sti
adcb
add
sbb
or
std
mov
mov
xlat
sbb
lods
mov
and
lds
aas
inc
adc
iret
or
dec
sahf
adc
decb
jmp
sbb
sahf
xor
dec
jns
dec
jp
lsl
and
jge
and
adc
jge
inc
cmp
push
clc
inc
adc
pop
add
out
push
negb
rcr
push
dec
les
popa
sti
dec
mov
int3
lods
or
cli
inc
xor
inc
adc
sti
push
loop
pop
cmp
adc
fisubs
push
out
xchg
jecxz
jb
jmp
push
aas
sbb
ds
popf
push
mov
dec
xchg
sbb
dec
rcll
dec
mov
shll
xchg
negl
lret
push
or
popa
movsb
int3
jecxz
stc
pop
insl
mov
pop
push
push
and
call
mov
sbb
push
push
pop
popa
add
dec
push
sbb
scas
pop
insb
sahf
bound
mov
mov
or
jge
mov
into
push
inc
xor
arpl
dec
aas
xchg
fldt
fcmovu
dec
popf
lahf
iret
and
jb
lods
fldcw
imul
stc
in
test
imulb
stos
cli
push
push
mov
push
sbb
jg
inc
ret
popa
dec
pop
jb
cmp
stos
aam
cs
dec
cmp
fdivrs
ret
dec
pop
mov
lret
push
xchg
mov
cmp
pop
ror
sub
cli
mov
push
adc
dec
pop
stos
xor
cmpsl
mov
or
sbb
jmp
inc
fisttps
xchg
push
adc
test
incb
sbb
aad
mov
xchg
pop
mov
jb
imul
push
mov
test
out
mov
stos
repz
sahf
aam
push
and
cmpsl
imul
cmovge
mov
push
xchg
pop
fsubrl
add
jle
popf
mov
push
rclb
mov
mul
into
jnp
adc
jle
adc
out
into
orl
inc
out
popf
mov
cs
or
mov
add
xchg
addb
lock
lock
repz
mov
xor
loop
imul
inc
mov
sbb
out
cmp
push
sbb
inc
xchg
mov
sub
mov
or
or
xchg
jmp
push
test
into
mov
ljmp
pop
adc
push
pop
or
xchg
jne
jmp
int3
sti
adc
push
and
xor
dec
mov
pop
inc
pushf
repz
dec
or
je
out
dec
mov
fistpl
inc
int
ficompl
aad
jecxz
mov
mov
lock
les
and
mov
adc
adc
in
mul
push
adc
add
lcall
pop
sub
test
mov
sbb
mov
add
dec
dec
mov
cs
mov
roll
data16
addr16
mov
rcr
aam
bound
push
xchg
imulb
cs
add
iret
add
fisttpl
pushf
xchg
pop
mov
xchg
call
mov
xchg
push
pop
xchg
lret
sub
pop
sbb
mov
repnz
arpl
xacquire
fs
lock
xchg
ror
in
je
lock
or
push
pop
jp
das
sbb
fisubrl
cli
push
mov
xor
xchg
fstpt
cs
dec
sub
mov
push
xor
mov
mov
rorb
push
ljmp
dec
or
mov
fdivr
jle
mov
push
push
or
pop
addr16
outsl
pushf
into
lahf
add
or
aam
sahf
cwtl
outsb
pop
jae
outsb
xchg
mov
fnstenv
push
repz
sbb
scas
push
pusha
movsb
insb
and
mov
sbb
inc
pop
imul
push
insl
cmp
mov
xchg
mov
xchg
lret
inc
mov
cli
imul
jle
mov
mov
fimull
sbb
adc
dec
popf
stc
mov
fcoml
pop
lahf
arpl
and
xchg
pusha
movb
mov
mov
out
mov
ds
sub
inc
loop
xorb
out
and
testb
movsb
lds
push
int
lods
fcompl
bound
ss
push
jne
outsb
iret
jnp
and
bound
dec
pop
push
iret
sbb
mov
adc
pop
frstor
cmpl
or
stos
sarl
out
jne
and
xchg
lret
sub
and
cmp
dec
shl
mov
pop
lret
lret
fdivs
lret
or
push
mov
mov
ror
out
test
or
mov
sbb
cmp
mov
dec
gs
scas
pop
aad
pop
adc
es
fcmovne
sub
loopne
insl
iret
inc
add
outsb
sub
test
inc
cmp
push
adc
icebp
push
pop
cmp
sti
fmull
jge
test
cmp
sahf
and
xor
mov
mov
cli
clc
sbb
pusha
mov
cmp
adc
shlb
out
push
or
leave
fdivrs
out
xchg
data16
pop
lcall
xor
push
dec
ret
dec
sub
lods
mov
fdivrl
sub
xor
push
cmp
pop
push
dec
add
jmp
fmull
shll
faddl
inc
lret
mov
loopne
or
pushf
ret
int
push
fldcw
jl
jge
xor
pop
mov
shlb
cld
out
pop
dec
in
add
into
ljmp
out
and
cld
adc
cmpsl
and
popa
dec
cli
jns
xchg
push
stc
bound
pop
aas
jae
aas
aad
sti
dec
and
in
fwait
jecxz
push
ljmp
or
test
xchg
lea
mov
cwtl
idivb
sub
push
push
scas
xor
jecxz
or
into
js
xor
mov
out
pop
pop
sub
icebp
push
ljmp
lret
iret
adc
xchg
addr16
lret
and
pop
jb
ds
dec
mov
lret
ficoml
test
sub
ss
mov
adc
int3
pop
ror
jmp
mov
and
dec
ja
iret
popa
aaa
fincstp
push
aam
fcmove
lret
rcll
pop
int3
jge
shll
push
xchg
mov
divl
xor
cmc
in
ljmp
push
icebp
push
les
jns
jnp
mov
sbb
aaa
xor
mov
out
push
outsb
and
jge
jno
jbe
mov
and
int
out
cmp
das
cs
test
dec
cmp
rol
or
dec
call
push
fmul
out
jmp
pop
or
and
test
push
outsl
cmp
mulb
sti
into
mov
fwait
cmp
dec
mov
int3
int3
adc
dec
hlt
or
dec
mov
add
pop
rcrl
fmull
mov
sahf
add
aas
std
cmp
shrl
test
sbb
lahf
loopne
sti
insl
sbb
cmp
or
push
sbb
arpl
mov
jmp
fistpl
dec
mov
cmp
mov
sti
fimull
push
push
inc
ljmp
aas
aad
xchg
cmp
lds
stos
arpl
mov
add
or
adc
jmp
aad
dec
lcall
jns
or
lret
mov
retw
sub
inc
inc
mov
incl
xor
ljmp
fists
lret
fucomip
movsl
pop
jge
xchg
jp
lret
sbbb
or
rorb
mov
mov
add
jmp
fistl
mov
dec
xor
cs
frstor
adc
mov
repz
inc
fstpl
dec
das
and
lock
inc
into
push
lret
enter
ficoml
mov
sarl
cltd
nop
bound
cmp
cli
pop
mov
stos
cmpb
dec
ret
pop
stc
xchg
ljmp
dec
jl
out
outsb
aas
or
xchg
add
mov
jl
xchg
or
cli
jge
dec
xor
fildll
movsb
popa
aas
repnz
ljmp
aas
hlt
rolb
sub
iret
mov
or
scas
loope
pushf
iret
clc
mov
negb
scas
and
xor
int
mov
mov
jl
pop
push
push
loope
or
cmpsb
sub
jne
scas
out
mov
ds
icebp
cwtl
adc
in
sub
mov
jl
mov
xor
sub
jl
fcompl
or
push
add
imul
or
stc
xchg
hlt
mov
inc
mov
mov
cmp
call
das
mov
jl
inc
pop
sbbl
or
xor
andl
pop
jbe
push
jmp
cld
ret
leave
aas
or
jmp
or
mov
jb
dec
enter
lcall
addr16
xchg
add
or
mov
sbb
push
scas
adc
cmc
fsubrs
stc
xor
xchg
xchg
icebp
std
fldt
sbb
lock
test
xchg
popa
push
dec
jae
ds
addr16
pinsrw
cs
jnp
mov
incb
push
or
das
ljmp
sub
pop
int3
cmp
adc
test
mov
jecxz
pushf
lret
add
jmp
mov
or
mov
mov
ljmp
rorl
fmull
aas
in
out
lods
xchg
fidivs
fdivr
movsb
dec
outsl
ljmp
scas
fcmovne
cmp
mov
cltd
dec
sbb
mov
sti
fisttpll
xchg
dec
sbb
mov
int
jecxz
sbb
and
xor
js
mov
mov
clflush
popa
jg
sbb
iret
or
mov
sbb
mov
ljmp
pushf
mov
iret
dec
inc
or
jbe
pushf
call
inc
cmp
popf
jge
lds
push
mov
insb
dec
xor
frndint
orl
ror
adc
dec
fidivrl
xchg
mov
ret
inc
in
mov
sbb
out
inc
cmp
add
jp
push
sub
jae
mov
jb
fwait
dec
movsl
lds
cmp
push
hlt
mov
in
push
jl
or
enter
outsl
mov
mov
nop
in
shr
cld
or
sbb
in
sub
js
iret
jge
rorl
dec
cltd
das
aaa
je
decl
ret
jg
scas
jmp
sbb
pop
dec
mov
xor
mov
mov
out
jge
sarl
sbb
pop
sub
ja
sub
sarl
rcl
loopne
addr16
ficoms
and
xor
and
movsb
inc
inc
outsl
push
sbb
jle
inc
sbb
sbb
adc
bound
pop
pop
and
mov
or
dec
jmp
sbb
ds
dec
hlt
test
dec
addb
adc
sub
push
push
mov
pop
je
mov
adc
sub
ret
xor
scas
es
cli
jmp
adc
or
push
adc
xor
jnp
push
jmp
lret
xchg
pop
push
mov
lcall
or
scas
and
ds
sti
out
movsl
outsb
lods
add
repnz
outsb
or
bnd
jae
lahf
pop
out
int3
push
dec
add
dec
ljmp
xorb
xor
dec
in
fidivs
mov
lods
sti
sbb
xor
cmp
xor
pop
imul
mov
pop
fbstp
pop
jecxz
bound
dec
lds
lret
fimull
and
cmp
sub
stos
pop
fmull
mov
fisttpl
iret
ss
aas
mov
mov
pop
loope
and
xor
bound
add
xor
mov
popa
cmp
pop
sbb
and
adc
int3
sub
nop
or
add
loope
lods
push
sbb
inc
data16
sbb
sub
push
pop
dec
add
sbb
nop
sahf
cli
fbld
test
mov
dec
andb
or
mov
xchg
bound
push
decl
and
subb
and
push
je
dec
ret
lahf
mov
dec
add
aam
jmp
jmp
in
sti
js
mov
pop
mov
xchg
cs
outsb
ljmp
sbb
stos
imulb
std
mov
lret
sbb
imul
jnp
cs
les
in
xchg
cli
sahf
icebp
fbstp
aas
fbld
adc
fidivs
mov
out
xor
pop
dec
inc
iret
repz
ljmp
pushf
lea
das
ds
mov
cld
adc
and
iret
lret
imul
sub
or
sub
sub
adc
mov
xor
mov
mov
or
fsubrl
sub
sarb
aam
stos
out
lret
nop
nop
loopne
aam
xorb
gs
int3
in
and
idivl
xlat
push
aam
push
add
pop
sahf
jg
out
push
adc
repz
mov
cmpb
ret
call
dec
xchg
xor
int
and
in
repz
pop
ss
bound
in
sbb
in
adc
dec
sub
lock
bound
addr16
mov
mov
rcl
fwait
sbb
arpl
aas
dec
in
out
lods
mov
xor
xchg
push
or
push
mov
out
push
out
mov
outsb
notl
nop
pop
fstpl
push
fcoml
imul
jns
push
ds
add
inc
mov
repz
cmp
and
insb
or
lods
insb
iret
mov
in
lock
xchg
inc
sbb
push
in
mov
xchg
push
repz
dec
sbb
pusha
rcrl
leave
and
out
push
into
outsb
fimull
mov
out
lahf
nop
push
scas
jl
leave
aad
mov
push
ret
pop
lahf
pusha
loop
push
sar
or
jecxz
sbb
jno
cld
xchg
adc
fists
sbb
jle
adc
pusha
enter
in
cmp
bound
lds
shll
sub
icebp
int3
insb
mov
je
ror
pop
mov
push
dec
lret
adc
xchg
mov
mov
shlb
ror
jo
iret
and
hlt
jp
int3
push
or
inc
cli
lret
jns
incb
fldl
sbb
pop
add
add
bound
cwtl
dec
xor
add
push
mov
jmp
clc
mov
lds
or
push
aaa
rcrb
jecxz
out
push
add
imul
or
mov
out
dec
xchg
lret
and
xchg
int3
push
cmp
or
jmp
xchg
push
pusha
adc
pop
shrl
pop
or
pusha
dec
mov
in
mov
mov
test
mov
int3
out
ds
shlb
xor
xchg
rcll
mov
lahf
add
fsts
mov
and
mov
push
scas
outsb
pop
push
pop
sub
test
ret
scas
fistpl
ret
arpl
pmuludq
fwait
or
sbbl
repnz
roll
int3
je
dec
dec
aad
xor
into
jl
adc
add
xchg
hlt
addr16
outsb
or
jo
dec
xor
jmp
rcl
push
pop
dec
or
in
iret
sub
cltd
sbb
dec
pop
jbe
fcompl
mov
int
xlat
jg
push
mov
arpl
int3
cld
mov
fcomps
fs
and
je
pop
ficompl
mov
mov
mov
sbb
aas
bound
mov
sbbb
fsts
stc
in
mov
sbb
or
xor
int3
mov
cmp
mov
sbb
out
jl
addr16
std
jb
pop
insb
jecxz
mov
mov
sub
aaa
outsb
sahf
scas
dec
pushf
push
fsubrs
sbb
divl
xchg
stc
xor
xor
mov
insl
dec
inc
std
jno
lea
mov
test
push
insb
js
loopne
cmpb
inc
lcall
xor
jp
jge
xor
lretw
lea
jmp
adc
xchg
xor
pop
push
pop
or
mov
mov
int3
jne
rclb
push
pusha
int
jbe
out
pop
mov
fistpll
leave
fdivrl
in
nop
fidivs
int
mov
mov
adc
pop
mov
cmpsb
mov
or
movsb
shr
cli
shl
mov
lahf
icebp
lcall
pushf
mov
lods
and
mov
adc
imull
out
and
aaa
shl
mov
or
jle
out
add
clc
out
add
mov
pop
ffree
nop
aad
xchg
xor
fcomip
dec
mov
sbb
into
hlt
imulb
mov
dec
jecxz
iret
cli
sti
pop
jno
and
xlat
mov
inc
cwtl
bound
pop
dec
mov
das
addr16
fsubrl
cmc
repz
lea
pop
mov
sub
xchg
sub
xor
into
je
popa
push
dec
cmp
sahf
fdivp
jnp
and
lcall
popa
enter
repnz
dec
mov
jecxz
adcb
out
int
int
jge
outsl
dec
les
inc
adc
sbb
into
cmp
mov
mov
fnsave
pushf
fadd
mov
jb
in
enter
repz
lds
jg
enter
jp
dec
mov
out
adc
xchg
stos
xor
cmc
jne
decl
shll
sbb
mov
pop
fcmovnbe
sbb
int
shrb
fldl
mov
or
and
push
iret
dec
add
jle
xor
loop
fisubs
aad
test
pop
mov
or
fistpl
jg
hlt
fildll
push
dec
adc
fidivs
pop
pop
into
mov
fs
jp
incl
and
jbe
js
dec
nop
mov
cmp
jmp
cs
xor
mov
cmp
into
bound
mov
push
mov
jmp
cmp
cltd
daa
fsubl
outsb
and
lock
pusha
sub
xchg
adc
push
or
out
pop
push
adc
jp
pop
movsb
outsl
cwtl
ret
mov
jno
xlat
adc
jmp
push
or
scas
les
stos
rcl
fwait
xchg
add
dec
lret
fidivrl
bound
dec
out
int3
aas
seta
mov
adc
lahf
push
dec
shlb
push
adc
lds
fucomip
jecxz
scas
jb
sbb
aas
cltd
out
repnz
frndint
pop
stos
cmp
mov
push
pop
int
mov
insb
dec
into
pushf
ja
je
xor
mov
or
xlat
cli
ret
fstps
in
jle
push
cli
xor
push
pushf
bound
xor
mov
jmp
jne
sbb
movsb
and
sbb
or
xchg
dec
lret
mov
mov
enter
inc
shlb
mov
xor
add
data16
cld
stc
shll
jecxz
lret
jge
incb
add
or
testl
lret
jno
lret
adc
pop
mov
fsubrl
pop
sbb
sub
ds
dec
hlt
out
xchg
jne
outsl
sbb
dec
fstps
xchg
shll
lahf
pop
dec
subps
xor
testb
mov
push
mov
sbb
divb
lret
mov
rorb
cmp
rcrb
cli
ss
mov
cmp
xchg
in
scas
cmp
add
das
cld
add
or
jne
mov
sub
in
orl
adc
leave
bnd
mov
movsb
xchg
push
xor
dec
int
aad
mov
scas
aam
push
into
add
cld
xchg
shll
sahf
clc
jge
pop
mov
dec
or
mov
enter
push
imul
jb
daa
lds
and
mov
xchg
es
push
xor
mov
cs
fiadds
mov
fmul
mov
pop
fildll
out
ror
xorl
jae
fidivrs
pop
push
mov
push
das
or
shlb
sbb
nop
and
mov
adc
std
jns
jmp
or
repz
pop
or
daa
push
push
das
or
mov
int3
popa
fistps
mov
in
insl
or
inc
cmp
mov
cmp
jo
rol
stc
fisubrs
out
bound
hlt
push
sub
push
add
pop
lods
xchg
sub
push
cli
mov
add
dec
dec
push
aas
cmp
shl
and
test
les
mov
cmp
cwtl
int
out
into
shl
test
mov
mov
mov
dec
push
mov
fimull
fidivrl
je
pop
and
add
jecxz
mov
ljmp
dec
mov
jg
int3
cmc
out
nop
jns
mov
inc
fcompl
pop
adc
push
jge
popa
push
insb
subb
push
adc
or
dec
mov
mov
imul
cltd
jecxz
mov
ja
sti
mov
enter
test
inc
dec
jle
mov
or
out
sub
sbb
pop
adc
or
loop
ljmp
push
call
idiv
neg
std
mov
adc
and
jp
incb
ss
out
jl
sbb
lds
pop
xor
ss
imul
dec
notl
int3
gs
icebp
imul
inc
add
outsl
loopne
mov
add
mov
mov
and
test
or
dec
cmp
in
fcoml
xor
pop
loope
sti
out
mov
inc
pop
mov
sbb
int
mov
mov
cwtl
push
out
sbb
int
rorl
pop
bound
mov
shr
mov
aam
xchg
jmp
sub
or
adc
xor
xchg
xorl
fwait
cmp
push
pop
roll
lock
mov
cmp
jae
xor
adc
mov
nop
mov
jnp
pusha
and
xchg
mov
movsl
mov
pop
push
fbld
dec
pop
inc
repnz
outsb
popa
and
sbb
push
aad
lds
call
dec
cli
shl
xchg
mov
movsl
jle
pop
pop
or
ja
iret
or
loopne
xor
or
mull
lock
jmp
mov
adc
rclb
jb
jp
icebp
daa
in
or
pusha
add
or
pop
nop
lret
and
and
sub
popf
jle,pt
repz
aas
scas
inc
inc
mov
or
adc
in
mov
mov
inc
scas
jnp
lahf
mov
sti
jg
cwtl
and
xchg
lods
ret
test
pop
inc
inc
push
js
inc
sbb
les
sbb
aam
rorl
and
jmp
jp
or
inc
sbb
jae
xlat
popf
and
sub
mov
fdivrp
xchg
rorb
push
faddl
xor
dec
in
jecxz
insb
call
cld
jp
loop
rcl
int3
andl
ljmp
shll
jbe
rcrl
xchg
in
aaa
mov
sbb
lcall
jmp
mov
pusha
fisubl
lock
jno
sbb
or
dec
incb
sbb
or
sub
pop
push
pop
lods
aam
lahf
ret
and
push
loop
es
test
aam
dec
push
sub
sub
loopne
inc
sar
addr16
arpl
shrl
outsl
cli
xchg
fisubrs
xchg
out
fcmovnb
cs
ffreep
sbb
pop
and
sbb
jge
inc
stos
pop
enter
sarl
mov
je
addr16
leave
xor
mov
lds
add
adc
add
push
push
xchg
movb
jns
fwait
roll
xor
and
push
xor
fxch
add
rorb
aam
mov
dec
or
mov
and
bound
cmp
in
fcmovu
and
loopne
int
scas
aad
lret
jmp
das
lea
jae
jp
adc
push
int3
mov
sbb
push
sub
mov
push
in
pop
outsl
push
into
out
xchg
mov
lgs
jmp
push
sub
out
pushf
mov
adc
sbb
in
int3
or
std
jmp
enter
lcall
rolb
cmp
aaa
in
mov
jae
inc
out
inc
cmc
lahf
ljmp
loop
dec
or
das
gs
xor
xchg
sub
xor
je
xor
leave
jmp
mov
mulb
xor
mov
pop
mov
sub
cmc
std
or
out
dec
sub
repz
adc
pop
int3
mov
shlb
adc
and
sbb
shr
push
jl
lret
dec
repnz
mov
push
xor
mov
fdivrl
iret
cmpsl
cmp
pop
lret
adc
cmc
add
adc
into
xchg
xor
les
jae
ror
pop
mov
and
or
inc
jg
addr16
mulb
sub
test
clc
cmp
pop
clc
pop
lret
out
leave
mov
mov
push
cli
cs
push
inc
or
xor
in
xor
push
or
push
push
in
inc
test
xchg
pop
xchg
inc
mov
push
jns
mov
dec
push
xor
loope
dec
sahf
jp
mov
scas
int3
mov
repnz
imul
neg
je
pusha
jmp
jl
mov
inc
imul
sbb
leave
mov
mov
jmp
pushf
sub
pop
mov
jns
fistl
dec
jno
adc
sub
insb
or
pop
add
sbb
out
pop
iret
leave
jl
adc
pushf
inc
adc
adc
mov
mov
icebp
rorb
std
mov
dec
jnp
inc
push
xlat
cmpsl
or
or
push
dec
in
inc
adc
into
adc
cld
dec
iret
sarl
xor
inc
or
pop
inc
lret
dec
xor
sbb
cmp
xor
mov
mov
dec
jecxz
testb
adc
or
cmp
icebp
inc
push
dec
add
inc
jns
cmp
pop
push
mov
push
lock
cwtl
mov
adc
dec
or
pop
pop
mov
pop
aaa
ss
jb
lods
sbb
fdivrl
adc
pop
pop
sub
mov
xchg
or
imulb
int
push
rcl
or
lea
lods
mov
pop
ss
mov
lds
bnd
dec
rcl
mov
idivl
jl
pslld
and
fiadds
adc
loopne
nop
or
xor
rclb
jge
adc
fnstenv
out
cs
and
std
cmp
mov
rorb
lods
adc
int3
mov
scas
xchg
fdivr
or
cli
stc
pop
or
mov
cli
fidivs
xchg
test
in
mov
movsl
arpl
adc
fcoms
jl
aas
aad
sarb
mov
xchg
in
sti
test
jecxz
into
sbb
fistpl
xor
outsl
bound
pop
fadds
sbb
iret
or
jbe
loop
lret
jb
push
push
jb
scas
scas
and
arpl
pop
lret
cs
dec
sbb
adc
add
imul
dec
jge,pt
stc
fbstp
push
out
pop
xchg
insl
mov
push
add
js
mov
cltd
repz
or
scas
or
push
sbb
add
testl
icebp
es
fldt
jae
out
sub
leave
dec
shlb
inc
jo
lock
pushf
xlat
adc
or
mov
ret
sbb
mov
icebp
js
cmp
push
pusha
das
sub
sub
ljmp
es
mov
adc
sahf
inc
aam
jbe
js
dec
push
rcll
mov
icebp
cmp
adc
pushf
les
mov
pusha
lcall
mov
or
sahf
arpl
mov
xor
rcll
lret
dec
mov
mov
pushf
push
or
or
push
outsb
inc
fisubl
sahf
cld
sub
jmp
out
mov
xchg
cmp
out
rcll
dec
cs
mov
pop
pop
test
sub
jp
fisubs
sbb
jmp
mov
pop
test
jge
adc
pop
cmc
jp
jne
mov
pop
sbb
loop
lea
lock
cmp
sarl
mov
dec
dec
fisubl
mov
fdivr
push
lcall
and
jnp
mov
imul
jmp
xor
mov
into
shll
mov
mov
sbb
rclb
mov
push
jb
mov
adc
and
or
xor
dec
incl
imul
loope
std
aad
enter
and
mov
mov
mov
push
dec
int3
in
xchg
pop
mov
or
gs
iret
mov
dec
and
mov
lahf
repnz
mov
jbe
or
mov
test
gs
cmp
inc
lock
testl
mov
in
lret
mov
cmp
negl
dec
push
adc
or
or
mov
mov
adc
stc
xor
mov
jbe
sub
jbe
sti
push
push
das
clc
adc
push
sbb
dec
pop
mov
xchg
inc
arpl
sti
into
stc
adcl
outsl
sahf
loopne
stos
cli
call
fstpt
sbb
mov
cwtl
imul
cli
stc
les
mov
xchg
pop
shrl
aam
sti
dec
or
mov
inc
imul
ret
sub
fnstenv
add
not
mov
xchg
into
ljmp
aad
mov
xor
mov
mov
cmp
jns
leave
jo
dec
xor
and
jmp
shll
xchg
sub
loopne
pop
sbb
cmc
test
push
xor
fnstenv
loope
jge
and
xchg
mov
jge
mov
scas
jb
dec
outsl
mov
pusha
inc
mov
clc
push
mov
and
outsb
cld
mov
mov
cli
stc
mov
movsl
cmp
or
int
cld
adc
setb
out
add
mov
xor
in
jecxz
imul
ds
in
jns
lret
pushf
mov
imul
dec
test
dec
pop
cmp
push
adcb
test
movsb
jno
clc
pop
cmp
mov
outsb
mov
mov
stc
or
into
in
pop
fistpll
xchg
idivb
jmp
add
test
push
cltd
and
insb
xchg
dec
inc
orb
int
sbb
dec
push
daa
and
mov
fs
xor
repnz
xor
jmp
xchg
call
lods
stc
adc
adc
jle
xor
pop
sub
sub
mov
cmc
mov
nop
jle
call
pop
cld
in
or
test
out
fsubr
jle
subb
adc
insb
xchg
push
enter
arpl
adcb
pop
enter
imull
add
cmp
out
mov
cli
jp
cmc
inc
test
mov
xorb
xchg
lret
out
notb
xor
or
or
ret
push
int3
push
jo
jns
std
lret
jg
push
aad
or
mov
dec
sarb
sub
scas
jle
lret
lahf
leave
jmp
add
imul
into
mov
aas
sbb
into
jmp
mov
add
test
cmp
dec
jo
cwtl
outsb
mov
into
mov
test
xor
dec
jge
jnp
push
clc
push
cmpsl
bound
adc
mov
icebp
in
mov
mov
rcrl
jns
xchg
aaa
xor
sbb
adc
jbe
adc
dec
push
cmp
inc
xlat
jne
push
lret
pop
lcall
out
in
push
movsl
xchg
add
mov
arpl
adc
xchg
inc
loop
cli
imul
jo
jo
int3
adc
xor
rclb
insl
mov
and
push
adc
xor
bound
or
adc
push
cmp
data16
push
data16
mov
sbb
mov
push
sub
add
or
dec
dec
sub
adc
dec
sub
adc
mov
int3
mov
sbb
sti
fldcw
rcr
jmp
in
shr
dec
cmpsl
jmp
dec
fcomp
lahf
lods
cwtl
cwtl
xchg
sti
xchg
movsb
xor
shll
sbb
and
adc
mov
xor
sbb
xchg
sbb
jge
adc
push
mov
jecxz
scas
cld
cmp
mov
orb
mov
cs
out
or
dec
rclb
pop
or
fcomp
addr16
lods
in
decl
nop
or
in
loop
mov
sti
pop
and
mov
in
imul
pop
pop
cmp
ljmp
leave
fisttpl
icebp
or
adc
scas
mov
and
fucomi
outsl
into
leave
out
mov
gs
cmpsb
xor
add
aas
adc
test
jns
movsb
adc
int3
outsb
sub
mov
push
adc
pminsw
out
pop
mov
mov
clc
pop
loope
cmp
ss
pushl
or
clc
hlt
push
iret
loope
ficoml
pusha
push
mov
mov
rcrl
inc
clc
dec
mov
inc
mov
push
dec
cmp
int3
int
mov
cmp
xchg
sub
cmp
sub
aad
dec
jge
jbe
lret
movsb
jge
movsb
push
lret
sahf
or
pop
dec
mov
dec
mov
scas
stc
sbb
mov
aas
dec
out
dec
adc
push
or
mov
jae
cmp
aam
dec
stos
xor
sahf
dec
inc
and
repnz
add
jb
adc
movsb
adc
cs
dec
jo
sbb
sub
adc
in
ja
and
leave
lds
push
cmp
in
mov
push
add
xlat
xchg
add
out
dec
push
aaa
pushf
xchg
movsb
and
dec
ljmp
sar
stos
jmp
jnp
das
xchg
addr16
push
dec
mov
mov
sub
jmp
in
aam
jno
cmp
insb
out
pop
in
int
or
mov
mov
mov
sub
cli
pop
lock
and
testb
fdivrl
and
pushf
dec
iret
xchg
pop
mov
je
test
sub
inc
shrb
fisttps
mov
js
stos
je
lcall
or
jae
sbb
xchg
adc
sub
push
mov
adc
jb
int
aam
aad
inc
push
inc
jns
sbb
aaa
cli
js
push
arpl
inc
pop
pop
pop
fwait
and
or
pop
repz
sbb
out
push
out
not
icebp
inc
sarl
sub
dec
sub
or
int
push
into
push
int3
push
ror
fs
aas
sub
pop
fcomps
bound
cs
test
inc
cltd
leave
lods
ds
mov
dec
sbb
bound
rorl
xchg
orb
arpl
mov
fwait
jo
fisttps
movsl
dec
int3
xchg
fldt
arpl
daa
pop
sub
int3
sbb
mov
xor
les
pop
mov
sbb
rorb
fcoml
ja
out
imul
outsl
jecxz
fisttpl
int
mov
pop
cmp
mov
mov
aad
shr
shr
pushl
in
insl
aam
add
pop
cmp
es
in
sahf
popf
ljmp
out
push
ljmp
scas
jp
lds
les
gs
jge
inc
adc
jno
adc
stos
into
pop
lahf
mov
and
sahf
mov
fimuls
insb
fcompl
xchg
mov
pop
in
lods
push
mov
adc
stc
jge
hlt
or
popa
dec
fimuls
dec
mov
and
fistps
dec
test
in
cli
jmp
jg
fstpt
out
orl
scas
mov
pop
pop
sbb
movsl
lret
inc
cmc
jmp
dec
pop
movsl
js
sbb
pop
mov
add
push
xlat
mov
push
test
imul
adc
push
dec
sub
andl
jecxz
bound
inc
adc
ret
ljmp
xor
sub
inc
and
mov
das
pop
jmp
lock
pop
sub
ret
int
mov
cmp
movsl
mov
hlt
stos
paddusb
jmp
imul
sub
leave
inc
fnstcw
lea
adc
pushf
xor
shr
cwtl
es
mov
mov
xlat
and
and
cmp
out
outsb
decl
jp
jecxz
int3
push
jbe
fistps
dec
rorl
xlat
sub
jl
jo
mov
inc
inc
shl
gs
fnsave
dec
ds
mov
je
sti
lods
jmp
sbb
xor
jp
lds
dec
mov
dec
lret
jge
mov
adc
test
aaa
clc
call
ja
pop
sub
cld
inc
inc
sti
lods
cmpsb
pushf
mov
out
repnz
mov
out
xor
push
mov
mov
dec
out
rep
push
adc
sub
inc
adc
rorb
pop
fisttpl
or
out
inc
mov
out
push
or
lret
mov
test
leave
in
jne
repz
mulb
lea
and
mov
push
mov
aam
mov
pop
mov
rcrl
pop
outsl
nop
push
and
push
cmp
push
xchg
hlt
push
jbe
arpl
lea
test
scas
fidivrl
xchg
adc
cmp
fmull
push
xchg
fst
cmp
and
adc
sbb
negb
dec
aas
daa
repnz
add
fucomi
mov
pop
push
or
test
cmc
jns
stc
mov
sti
push
int3
cli
xchg
ss
jns
lret
mov
movsl
fs
and
pop
dec
inc
iret
inc
push
jne
shl
fucom
iret
imul
push
pop
adc
pop
cmp
f2xm1
iret
fistps
repz
lret
int3
and
add
shr
mov
mov
shlb
xor
loopne
std
cli
fwait
cmp
cmp
rcr
mov
sarb
sbbl
and
push
fldenv
icebp
dec
sarl
mov
orb
push
in
fdivrs
loopne
pop
mov
in
cltd
fcompl
sub
xor
mov
mov
sub
movsl
jecxz
lods
cltd
ja
mov
jb
add
int3
push
mov
push
mov
lods
add
dec
jp
pop
xchg
mov
add
out
mov
dec
lea
stos
outsl
cltd
xchg
xchg
dec
sahf
dec
loop
sti
cmp
mov
shr
mov
lock
jecxz
xlat
lock
dec
pushf
jae
adc
cmpsw
loop
push
sbb
out
mov
push
cltd
popf
mov
imul
test
fisttpll
bound
outsb
and
lahf
lods
pop
and
dec
mov
dec
fisttpl
test
or
pushf
dec
push
dec
push
or
clc
fdivl
adc
mov
and
out
xor
adc
mov
add
adc
out
lods
repnz
iret
pop
repnz
jne
cld
das
push
dec
mov
clc
mov
jo
cmc
pop
outsb
xor
adc
stos
pop
outsl
mov
fstps
push
adc
sbb
dec
dec
jmp
add
or
in
dec
and
inc
adc
lods
jmp
fst
jl
or
ds
add
sub
dec
psrld
cmp
fcomp
insb
jae
sbb
add
movb
adc
mov
cltd
or
notb
dec
iret
mov
loop
xchg
dec
data16
mov
pop
nop
add
mov
leave
and
mov
push
js
imul
and
ja
push
lds
sarb
sti
movsl
cs
test
adc
push
push
xchg
push
movsb
dec
sbb
bound
and
lret
xchg
push
dec
mov
out
clc
mov
cwtl
adc
repnz
sbb
sbb
push
jl
and
push
dec
jp
jns
xorb
fldt
ret
jl
das
and
popf
or
xor
push
inc
dec
inc
mov
push
dec
pop
lret
push
lahf
icebp
stos
xchg
jne
mov
divl
pop
add
cs
decb
fdivr
push
mov
mov
addr16
mov
mov
jge
pop
jne
rclb
mov
addb
shll
sub
jmp
call
rcrl
fs
cli
loope
movsl
lret
push
fcompl
movsb
test
loope
dec
jg
push
ret
push
cmc
jno
in
adc
adc
mov
fistpl
jo
outsb
shl
bound
cli
aad
mov
movsb
mov
mov
jge
clc
pop
jle
xor
pop
mov
mov
xor
dec
xchg
nop
dec
shl
scas
shrl
push
call
shlb
mov
pop
or
sbb
lahf
repnz
mov
sub
mov
insl
notb
mov
jle
lahf
jnp
or
in
mov
into
cmp
and
inc
fdivrs
insl
loop
pop
and
xlat
push
sarb
push
mov
ds
or
dec
sub
frstor
mov
jbe
jg,pt
add
cmp
pop
xor
pop
std
sti
fwait
or
xchg
xchg
xor
stos
rcl
push
mov
iret
jge
sahf
lret
sub
int
int3
push
int3
fnstcw
int3
je
adc
lds
mov
mov
dec
mov
sbb
pop
or
bound
icebp
popf
pushf
lret
data16
cmc
mov
cmp
sbb
push
fcmovnbe
scas
dec
outsb
aad
adc
dec
movd
aad
ss
cld
outsl
mov
adc
push
mov
iret
aas
xor
movnti
adc
jb
adc
sub
jns
das
cld
lret
adc
cs
mov
cli
or
dec
divl
movsl
sub
fcomps
sahf
shrl
mov
jle
or
daa
xor
inc
add
aam
rcrb
stc
sbb
int
sub
jmp
ret
aas
das
lcall
push
outsb
xorl
fimuls
cli
ss
pushl
jl
les
pop
inc
lahf
or
fwait
loop
push
jg
sub
and
rcrl
dec
aas
push
lret
jg
leave
sbb
mov
cs
xchg
push
scas
xor
add
outsb
shr
dec
sub
mov
shll
inc
das
cmp
mov
cmp
adc
mov
or
mov
sub
sahf
fcmovnbe
adc
mov
mov
jb
fcmovu
mov
int
call
push
dec
outsb
mov
ss
cmc
aas
push
and
pop
ret
arpl
mov
xchg
into
dec
add
or
fcompl
shrl
int3
movsl
out
mov
aad
push
ss
sub
insl
repnz
data16
pop
ret
and
push
mov
sub
repnz
cmpsl
nop
add
mov
or
movsl
pop
data16
jno
mov
and
fdivrp
jl
push
lcall
repz
add
push
mov
icebp
or
jnp
int3
xchg
scas
push
aad
inc
shl
xor
pop
std
and
inc
push
sbb
aas
insl
bound
sub
es
push
inc
cmp
inc
aad
mov
lods
out
fstp
push
pop
aaa
outsl
es
pop
int3
hlt
ljmp
dec
push
adc
nop
inc
and
sub
aas
mov
loop
adc
in
mov
int
jl
shlb
mov
scas
shrl
fisubs
mov
dec
mov
out
mov
into
daa
out
int3
movsb
js
adc
idivl
or
mov
into
sub
mov
call
push
scas
fdivr
pop
sbb
in
and
jbe
push
int3
adc
xor
icebp
leave
adc
jg
mov
loope
xchg
dec
das
pop
cmpl
lea
lret
mov
faddl
xor
add
pop
mov
sbb
dec
add
xchg
xchg
out
add
and
inc
lea
dec
dec
std
pop
js
repz
push
scas
jcxz
xlat
cmp
mov
cli
stc
ds
xchg
lret
mov
push
shl
imul
push
jl
xor
int3
rorl
nop
cmp
subb
add
and
xchg
xchg
pop
mov
mov
pop
outsl
sti
dec
orl
xor
push
xlat
icebp
cmp
xlat
xchg
push
mov
int3
stos
xchg
das
out
bswap
leave
jb
and
repnz
pop
pusha
push
arpl
jge
add
out
sar
jae
push
xchg
lret
cs
scas
nop
and
imulb
and
push
rolb
mov
cmc
in
or
icebp
jmp
sbb
ficompl
imul
pop
fsubrl
js
cmp
je
in
cmp
jecxz
out
lahf
cmp
adc
sbbl
scas
or
add
xor
and
into
cmp
bound
add
and
pop
rorl
jns
aad
push
and
xor
cli
xor
and
dec
shrb
adc
repz
cmpsl
or
bound
fidivrl
adc
dec
stos
dec
mov
adc
enter
stos
seto
sbb
into
loop
fcmovne
lcall
dec
jmp
andl
adc
lret
adc
pusha
or
mov
mov
rorb
inc
jmp
js
jns
pop
pop
jmp
lret
jmp
and
inc
int
sub
dec
push
pusha
jg
fwait
leave
jne
sarb
gs
mov
add
sub
loop
push
data16
into
loop
hlt
es
lret
loopne
mov
xor
in
push
fadds
leave
arpl
inc
push
aad
sti
xor
test
push
adc
pusha
into
sbb
rcrl
mov
testl
pop
shll
int
push
lds
bound
pop
cltd
inc
mov
jmp
enter
lea
outsb
test
and
lret
mov
jo
and
imul
lahf
int3
movsl
mov
xchg
sub
sbb
repz
xor
movb
cli
jb
push
or
cmc
loop
mov
lcall
test
mov
sbb
sti
push
fildll
jne
out
pop
leave
sti
rcrl
pop
mov
test
cmpsb
std
add
inc
xchg
in
leave
or
xchg
xchg
adc
sbb
sarl
sbb
push
pusha
ficoms
shll
dec
movsb
mov
call
movl
loop
divl
push
and
hlt
jnp
lret
and
xor
push
dec
cli
push
mov
fidivrl
pop
or
dec
jecxz
and
cmp
pop
ss
movsl
cs
jmp
and
cmp
data16
add
dec
ret
lods
aam
out
cld
js
inc
fucomp
mov
imull
scas
dec
or
or
jo
pop
loop
mov
fmull
rorl
jnp
xor
int
arpl
mov
dec
roll
jmp
imul
into
push
fstpl
ss
dec
dec
and
rorb
into
leave
pop
mov
into
leave
push
dec
scas
mov
adc
dec
arpl
jecxz
fmull
or
test
div
dec
cltd
or
inc
push
xchg
mov
push
jl
push
jb
or
mov
int
jl
movsl
adc
push
into
jmp
andl
cmp
sub
scas
fcomi
lcall
pushf
adc
dec
data16
or
pushf
imul
jo
xor
leave
in
bound
rorl
sub
jge
ss
fwait
push
mov
scas
dec
fstl
or
and
negl
dec
stos
mov
popf
mov
xchg
nop
nop
int3
mov
or
aad
aas
int3
decb
sbb
mov
jb
aad
inc
dec
imul
mov
lret
loope
push
dec
mov
pop
pop
mov
jne
in
inc
into
lcall
mov
xchg
shrl
test
popaw
shl
cmc
jle
mov
in
or
int
and
adc
addb
mov
scas
int3
push
jmp
pop
mov
xchg
dec
pusha
xor
jg,pn
mov
mov
add
dec
xchg
adc
imul
loop
in
imul
add
xchg
mov
loopne
jmp
lea
and
push
iret
xchg
ficompl
enter
in
sti
cli
inc
bound
insb
outsl
mov
jl
or
or
cli
leave
push
pop
lahf
adc
mov
pop
arpl
sti
mov
cmpb
push
cwtl
scas
dec
push
xor
fisubs
sbb
stos
jl
out
sub
jl
into
lret
in
int3
stos
or
or
jge
mov
stc
mov
aaa
popf
push
fimuls
sub
int3
shr
aam
or
cld
push
pop
inc
pop
lret
mov
dec
pop
mov
negl
test
call
sti
push
and
dec
int3
and
icebp
repz
fidivs
adc
mov
cmpsb
add
add
je
cmc
int
cli
cmpsl
out
lret
rcl
jp
push
fwait
dec
jns
lods
xchg
in
sub
push
ds
mov
sub
sub
sbb
pop
cmpb
stc
iret
imul
jl
dec
cmp
rcrl
ficoml
sbbl
and
push
fdivl
fsubrp
movsl
test
mov
jnp
push
into
xor
rcll
push
aad
push
push
push
popf
cmp
iret
fisubrl
loope
icebp
and
xchg
add
inc
push
mov
pop
test
cmpsl
cltd
stos
repz
stos
xlat
and
aaa
mov
dec
xor
dec
inc
dec
inc
loope
out
dec
lods
xor
and
jge
xlat
push
rorb
shl
out
ficompl
dec
or
xchg
dec
mov
mov
push
jmp
aas
sbb
pushf
sub
mov
out
cli
cmpsb
ss
pop
aam
add
jnp
pop
add
ljmp
jae
or
sti
cs
jae
clc
enter
outsb
pop
mov
jp
dec
fistpll
jl
test
dec
ror
inc
pop
sbb
das
and
jns
pushf
stos
sbb
cmp
je
test
or
sahf
add
mov
mov
xchg
or
mov
js
add
sub
xchg
daa
js
dec
mov
leave
mov
pop
in
mov
ficoml
dec
or
inc
add
addr16
jecxz
jbe
jecxz
addl
jnp
mov
xchg
aam
mov
lock
aaa
rol
adc
cmp
jle
imul
add
inc
dec
movsl
inc
pop
mov
out
into
jle,pt
mov
sbb
sti
scas
or
mov
sub
xchg
cmpsl
xchg
in
mov
inc
out
mov
add
sbb
mov
dec
scas
add
cli
incl
in
sub
arpl
or
test
pop
sub
pop
and
mov
sbb
fcoms
icebp
int3
pop
sbb
ret
popa
fnstenv
jnp
dec
mov
cltd
mov
repz
pop
and
movsl
lret
fs
faddp
dec
fdiv
jmp
fxch
inc
daa
sarl
fidivrs
and
mov
andb
dec
xchg
or
insl
pop
push
or
cli
xchg
popf
int
jne
mov
in
or
mov
movsl
pslld
add
jne
leave
div
das
xchg
ds
jge
arpl
add
pushl
push
cmp
into
sbb
aas
jae
imul
shr
sbb
jge
jle
mov
fisubrl
xchg
mov
dec
cmp
cmp
dec
jg
push
pop
rcl
mov
in
mov
jle
aas
arpl
into
repz
cmp
xchg
into
pop
cmp
out
sbb
pop
push
sub
adc
mov
sbb
or
jae
pop
es
jae
dec
push
movsb
repz
fildl
xor
and
jge
and
mov
cmp
inc
addr16
mov
push
sar
mov
mov
sbb
or
rcrl
xor
test
fcmovu
ljmp
addr16
mov
orb
xor
leave
inc
stos
mov
mov
outsb
mov
mov
or
cmc
mov
iret
xchg
pop
or
paddusb
bound
cmp
mov
iret
shl
mov
lods
or
jl
pop
dec
and
sahf
jo
adc
xor
cmc
mov
sub
scas
repz
pusha
adc
pop
jne
imul
dec
sbb
mov
adcb
jne
push
insl
mov
cmpsb
out
jb
fidivrl
out
insb
or
scas
dec
sub
or
push
mov
xor
cwtl
adc
mov
lea
push
xchg
jg
push
aas
xchg
jmp
call
jmp
pop
out
ficomps
xor
leave
pop
icebp
unpcklps
jno
lock
or
sbb
test
faddp
aas
das
iret
pushf
jg
les
jmp
dec
vpmullw
lahf
or
aad
mull
cli
lret
and
or
pop
or
mov
call
insb
bound
add
cmp
jecxz
sbb
jmp
adc
cmp
cmp
mov
sbb
fdivrl
jo
inc
or
jmp
call
sarb
adc
in
outsl
xor
mov
dec
xchg
xchg
mov
fistl
divb
test
mov
loop
push
out
mov
inc
push
sub
jns
mov
adc
dec
aaa
jmp
out
mov
nop
adc
pop
movsl
out
rclb
cld
inc
lea
mov
rorl
into
dec
movsl
subb
add
insl
outsb
or
mov
add
jl
push
clc
mov
dec
sub
mov
out
lods
jge
mov
dec
jge
addb
fldenv
pop
jne
xchg
mov
mov
jge
shll
cmpsb
mov
fsubl
sub
jne
pushf
jnp
lods
add
cmp
lock
fs
fadds
jge
mov
mov
dec
nop
cmp
jecxz
sbb
jge
sbb
shll
mov
mov
adcl
fs
mov
ljmp
int
bound
fcmovnu
dec
das
jmp
orl
push
xchg
icebp
xchg
ljmp
sub
lret
fsubl
jo
into
insb
jge
push
push
mov
into
sbb
mov
mov
mov
into
ljmp
jnp
loope
and
dec
ljmp
insb
mov
cmp
int
or
sub
mov
sub
movsl
rorl
in
push
enter
imul
lea
imul
out
dec
or
into
push
mov
cmpsl
sub
cli
mov
nop
mov
sbb
pushf
sahf
mov
fxch
or
sbb
in
and
xchg
inc
pop
int3
inc
cmp
mov
pop
out
movsl
and
jge
lahf
scas
lcall
or
and
sub
jno
adc
mov
movsl
mov
inc
cli
pop
sbb
ljmp
mov
les
xchg
or
iret
pusha
int3
ljmp
scas
das
cmp
add
or
mov
lea
dec
pop
rcrl
xor
fwait
push
jg
lahf
cmc
jecxz
pusha
test
int3
mov
or
jae
adc
out
jl
mov
cs
test
add
jge
scas
mov
ja
add
js
pop
cmp
es
xchg
push
test
add
daa
pop
sbb
mov
into
dec
shrl
pop
cli
push
and
sub
enter
int3
insb
sub
inc
iret
int
cli
in
mov
mov
fdivr
adc
push
jge
jbe
scas
fstpl
pop
xchg
jb
adc
outsl
push
mov
push
stc
in
and
arpl
jb
cwtl
mov
jbe
or
ds
stc
dec
dec
ljmp
xchg
mov
ret
jns
pop
mov
fildll
pop
or
adc
jle
dec
ljmp
rcrl
ss
sub
pop
in
int3
xchg
movb
iret
insl
or
sbb
lahf
sub
pslld
mov
loop
pop
jmp
mov
daa
mov
repz
or
push
shlb
lock
nop
divl
imul
aaa
test
stc
in
fstpt
test
mov
sti
pop
aam
cli
fstps
aaa
push
dec
xor
adc
sbbl
mov
mov
push
movb
inc
dec
push
ds
sbb
nop
or
xor
cmc
dec
or
js
scas
addr16
mov
rcr
or
pusha
mov
nop
push
dec
sbb
dec
jge
xor
push
and
mov
inc
dec
xor
dec
xor
push
adc
dec
mov
orl
nop
pop
jb
jg
xchg
fwait
dec
scas
push
test
scas
loopne
push
ss
lahf
ss
jg
xchg
cmpb
mov
and
scas
pop
push
jae
xchg
aas
das
cmp
cmp
jg
jno
scas
or
das
inc
pushf
in
xor
jne
jge
mov
and
lock
ss
jge
and
cmp
les
movl
out
outsb
dec
aam
mov
rcll
out
repnz
push
bnd
or
mov
adc
ret
xchg
jle
xor
mov
jno
xor
adc
rcl
hlt
jge
sarl
mov
ljmp
push
push
lea
rcll
pop
pop
dec
popl
or
adc
add
dec
xchg
dec
scas
xchg
xor
ss
movsb
jmp
mov
cmp
cmc
ljmp
add
dec
pop
fwait
push
mov
cmp
or
xlat
repnz
jbe
imul
jecxz
scas
cs
aad
cli
iret
daa
mov
lods
ds
rolb
inc
popa
sub
iret
out
mov
and
outsb
dec
jnp
mov
outsl
cmp
mov
ret
int3
lds
jge
rol
and
or
jnp
sbb
sbb
ss
ror
cmp
shlb
fidivrs
adc
push
mov
mov
mull
cltd
jecxz
ss
mov
mov
and
and
stos
push
and
dec
ror
jge
lods
mov
mov
and
outsb
dec
out
dec
pop
fsubl
aaa
dec
or
shll
push
testl
sbb
shll
sti
imul
pop
ret
cmc
shrl
sbbb
idiv
shrl
cmp
mov
adc
add
dec
ja
sti
lea
fs
mov
and
por
sub
gs
mov
sbb
in
adc
jle
mov
xchg
xchg
push
and
mov
into
bound
outsb
outsl
xchg
in
icebp
add
dec
lea
enter
jecxz
rcrl
call
mov
ret
jae
stc
add
mov
push
sbb
cmp
test
jbe
repnz
out
pop
pushf
mov
add
mov
popf
fisttpl
sbbb
jle
mov
adcl
notl
cmc
push
lret
and
adc
repz
dec
sub
push
rcll
inc
jmp
loope
mov
and
leave
cmc
cld
xchg
pushf
pusha
mov
adc
sub
jo
lds
fs
add
pop
jp
outsl
aam
pop
mov
lret
add
adc
adc
cwtl
aas
jge
ffreep
cmp
pop
decl
push
and
in
push
push
cmp
pop
cmpsl
roll
sub
fisttpl
and
xchg
or
or
nop
mov
stos
popa
mov
mov
arpl
decb
shl
das
jmp
cli
jge
mov
out
pop
mov
icebp
sahf
addl
sahf
gs
jae
lods
push
lret
or
es
inc
sti
lcall
dec
cmpsb
mov
fcompl
pusha
aas
or
jno
sbb
fistpll
aas
pop
movsb
pop
mov
pop
lahf
in
int3
jo
loop
lret
repnz
data16
adc
aaa
shll
out
sbb
mov
pop
mov
xchg
xchg
sti
mov
xchg
jge
iret
mov
pop
jg
or
repz
mov
cmpsb
pop
mov
stc
sub
out
mov
rorl
ds
cmp
scas
imul
mov
lret
ret
dec
push
dec
dec
and
cmp
clc
inc
jmp
mov
push
mov
shrl
std
out
mov
and
out
jp
es
add
mov
mov
push
pop
scas
inc
mov
adc
out
xor
arpl
dec
mov
push
jnp
jl
mov
ljmp
scas
mov
shrl
lcall
xchg
je
cld
dec
adc
mov
cld
mov
mov
addr16
mov
adc
push
cmp
mov
pop
scas
and
loope
in
push
ret
jmp
push
inc
mov
jp
mov
and
cmc
lea
xor
mov
pop
nop
inc
fidivrs
inc
cmp
xchg
push
and
rep
add
mov
and
out
iret
out
or
fimuls
jnp
fisttps
pushf
mov
in
fcoms
inc
fisubs
sbb
inc
fsts
std
data16
xchg
int3
dec
jle
test
std
dec
push
sub
mov
cmp
test
jge
ficoml
sbb
daa
mov
ljmp
out
sbb
in
mov
test
add
or
mov
int3
pop
dec
scas
fwait
out
push
pop
into
movsb
adc
sbb
lahf
and
cmp
and
das
push
fistl
push
inc
iret
xchg
data16
popa
call
lcall
push
stos
and
cs
out
mov
std
xchg
mov
insl
repz
mov
pushf
xchg
movsl
jge
addr16
mov
mov
pop
push
shrb
jo
out
lcall
xchg
xchg
les
sub
jle
sbb
push
call
inc
popf
fistpl
movsb
mov
pop
push
leave
sbb
sbb
xor
test
inc
addb
test
roll
stc
rol
mov
pop
mov
add
pop
mov
lea
sbb
ljmp
cmp
push
mov
fdivs
or
test
outsb
jp
fsubs
into
les
inc
out
jmp
fdivrl
xlat
adcb
fstpt
jecxz
in
lods
mulb
or
cmp
xchg
xor
out
out
mov
cmp
in
pop
fisubrs
imul
dec
jne
dec
loop
movsb
mov
adcb
push
ror
and
or
cmp
fwait
mull
push
cli
ss
imull
cmp
loopne
adcb
scas
dec
sub
pop
adc
cmp
testl
mov
jle
cmp
or
cmpsb
outsb
dec
lods
test
push
and
add
sti
mov
shl
arpl
and
cwtl
scas
mov
push
testl
sub
mov
out
loop
leave
sbb
jp
jle
jns
sahf
xchg
push
cmp
lock
hlt
pop
xor
jp
fdivrs
and
jge
pop
icebp
jmp
lretw
out
shrl
xchg
push
push
cmp
loop
mov
inc
and
jbe
mov
push
lcall
push
pushf
adc
hlt
pop
scas
popf
adc
cmp
adc
inc
xchg
es
sub
dec
push
outsb
xchg
add
push
pusha
rol
pop
stos
fistpll
fistpll
xchg
movsb
xchg
into
xchg
cmp
mov
sub
xor
ret
ljmp
lods
clc
in
je
mov
ds
enter
test
loope
std
test
inc
add
inc
xchg
je
or
call
jle
push
js
pushf
adc
sbb
das
pop
mov
push
sti
dec
loopne
jo
and
fnstcw
rorb
dec
xor
shll
roll
into
sti
rcl
lods
mov
cld
sti
pop
enter
push
cs
add
and
jg
add
sub
rorl
mov
mov
test
or
insb
cmpsb
mov
in
mov
aam
sub
pop
fcomps
cltd
lret
and
scas
push
dec
mov
mov
call
clc
sahf
fdivrs
adc
fimuls
mov
fwait
xor
pop
cmp
cs
cld
fsts
rcll
aas
test
jbe
push
add
test
scas
iret
mov
sub
movsl
ja
subb
das
out
mov
fmuls
scas
out
negb
mov
jbe
fimuls
loope
xor
sub
leave
cmp
and
mov
pop
aas
push
incl
fbld
jmp
je
lds
out
push
xchg
mov
mov
dec
shl
jl
arpl
jne
inc
xor
xchg
aad
or
call
int
mov
mov
ret
fcmovnbe
dec
sarl
es
pop
fdiv
lret
jbe
mov
dec
lahf
sti
push
dec
into
xor
repz
test
enter
or
dec
cld
and
cmpsl
jle
xchg
jl
lret
addr16
or
loop
popa
shrl
testl
or
scas
arpl
idivl
mov
mov
sbb
out
mov
int
fadds
aam
xor
and
dec
fisubrs
or
mov
jl
ss
popa
jle
xchg
jmp
sbb
stos
out
jbe
adcb
test
daa
add
dec
inc
pop
scas
pop
dec
clc
push
int3
dec
push
pusha
andb
repnz
xor
inc
push
jle
or
filds
xor
out
sbb
xchg
xor
dec
mov
xor
call
jecxz
out
sub
repz
lock
adc
rorl
mov
cmp
pop
xchg
add
loopne
pop
and
int
dec
lahf
pop
xor
inc
dec
out
cli
ja
ss
ljmp
mov
int
cmp
sub
and
jle
pop
fs
mov
lea
and
mov
out
shll
cs
xchg
in
mov
sub
xchg
mov
or
int
pop
rcrl
dec
adc
scas
out
repz
or
int
fldt
sar
jns
sub
sub
and
aas
add
je
pop
pushf
lea
aaa
push
outsb
add
std
jbe
add
dec
pop
jl
scas
aaa
and
out
sub
jmp
shlb
cmp
mov
or
jmp
mov
mov
aaa
shll
in
jns,pn
sub
mov
pop
pusha
addr16
dec
mov
pushw
dec
out
sti
adc
mov
xchg
clc
and
xor
jb
cs
hlt
insb
ja
imul
test
sbb
incl
mov
fcoms
sti
or
fnstsw
outsl
mov
adc
std
sbb
adcb
mov
addr16
push
pop
and
outsb
arpl
hlt
mov
notl
in
lods
mov
jle
addl
push
lds
jge
dec
jle
cli
scas
imul
jmp
testb
loop
adc
ljmp
mov
shl
lods
imul
and
fcompl
and
or
mov
rolb
lds
mov
and
and
mov
add
push
adc
push
sahf
movsb
fisttpll
ljmp
roll
jl
sub
cmp
mov
push
addl
dec
sub
idiv
dec
icebp
hlt
mov
cmc
int3
outsb
adc
or
and
dec
mov
xor
arpl
sti
dec
cmp
fnstcw
mov
bsf
or
fsubrl
inc
loopne
sahf
mov
andl
loop
dec
cltd
in
adc
lock
dec
mov
ja
adc
das
mov
sbb
jo
ja
sbb
mov
or
jnp
stos
pop
hlt
out
int
dec
adc
dec
adc
or
dec
sub
std
insb
mov
pop
inc
lret
pusha
fsubrl
inc
mov
fmul
push
fmulp
push
sub
jmp
mov
sub
in
fcoms
adc
stos
push
xchg
pop
push
popa
rol
fbstp
imul
or
xor
lret
xor
sub
sub
mov
mov
mov
movsb
mov
iret
add
lret
sbb
cmpb
lea
dec
mov
push
jl
push
into
sub
fs
adc
dec
insl
push
std
movsb
pop
xchg
cmp
inc
jbe
lcall
pop
push
fst
or
jne
adc
add
xlat
pop
cmc
jne
jle
mov
fsin
cmp
outsb
push
mov
std
rorb
rorb
dec
jae
stos
cli
sub
lret
cli
sub
jo
in
add
mov
push
lret
sarb
xor
mov
fisttps
pusha
mov
or
push
and
jnp
push
push
pop
xchg
add
dec
cli
out
dec
test
orb
ljmp
mov
test
add
push
jbe
push
or
mov
insl
jg
repz
fs
add
jl
cld
mov
xlat
orl
or
mov
aaa
mov
mov
push
dec
in
push
call
push
mov
cli
sub
cmc
in
or
out
mov
pop
xchg
dec
mov
inc
mov
out
or
bound
push
jp
dec
ret
mov
pop
lahf
or
int3
cld
fisttpl
mov
bound
mov
es
dec
sbb
into
jl
aam
push
mov
ss
and
leave
jp
dec
popa
adc
add
or
push
jg
imul
out
inc
ljmp
add
stos
mov
adc
das
scas
stc
mov
or
inc
xor
sub
jp
sbb
jnp
mov
dec
inc
adc
jns
cmp
adc
call
loope
repnz
mov
adc
cmp
dec
cli
mov
lret
cmovae
scas
dec
cli
mov
push
or
clc
pushf
xlat
test
cmpsl
xor
cmpsl
sub
jge
movsl
scas
xchg
or
lea
sub
stos
jno
add
out
fcomps
or
push
xchg
mov
adc
shrb
inc
hlt
jb
scas
jb
jnp
or
es
push
mov
push
add
pop
aam
jae
cld
dec
in
outsb
jg
xchg
out
and
orl
in
stos
or
add
sbb
pop
jb
cs
dec
popf
and
into
dec
xchg
pop
jge
xchg
inc
add
or
lds
loopne
inc
or
idivb
mov
into
pop
jmp
mov
aaa
inc
push
pop
adc
cmp
pop
jb
loop
mov
clc
cmpsl
rol
out
sbb
jle
repz
mov
test
jo
faddl
mov
push
jns
pop
pop
sbb
dec
dec
sbb
fsubrl
rcr
jb
adc
mov
xchg
mov
lods
daa
pop
xchg
pop
lock
int3
jns
stc
pop
lret
test
ficoml
fstps
or
adc
mov
incl
iret
divb
outsl
loopne
stc
mov
sub
jl
cmp
xchg
shlb
shll
push
mov
fisttpl
int
push
cmp
add
dec
in
lods
enter
push
sub
lret
sbb
jge
xchg
add
les
mov
bound
xchg
xor
sub
clc
push
lcall
fdivrs
add
xor
jle
pop
xchg
int3
cli
dec
ja
pop
or
dec
test
arpl
loop
jl
out
std
daa
or
stos
xor
int
mov
cmpsb
outsb
dec
cmc
push
in
int
int3
push
sub
aaa
adc
cmp
xchg
rcr
mov
pop
and
jle
xor
fwait
mov
arpl
xchg
fsubrs
lods
xchg
add
mov
aas
pop
daa
rorl
jp
sub
sub
sub
insb
jle
mov
dec
dec
mov
rep
sub
sbbb
pop
pop
xchg
fdivrs
or
inc
cmp
and
in
or
lods
bound
mov
pop
mov
sti
push
jb
fcoms
or
mov
cld
aam
in
sub
cwtl
push
in
mov
sub
test
leave
testl
iret
shl
mov
rorb
mov
mov
fiadds
or
pop
iret
pop
lahf
movsb
pop
ror
popf
adc
fistpll
adc
popa
dec
cltd
pop
outsb
mov
sahf
fisttps
cmpsl
fstps
pusha
mov
push
mov
lret
mov
mov
gs
sbb
sub
or
sub
sub
in
push
test
sub
or
sbb
sub
cmp
mov
pop
cwtl
stos
fstpt
sub
fsubl
mov
imul
dec
ret
pop
out
out
cmp
movsb
aad
and
aaa
pushf
fisttps
imul
sbb
cmc
push
lcall
int
pop
clc
movsb
adc
addr16
aaa
sti
pop
dec
sub
jbe
call
shll
mov
imul
or
add
or
mov
jnp
out
jecxz
jge
add
or
in
pop
xor
subb
hlt
xorl
andl
xchg
sbb
rclb
das
push
and
mov
in
dec
dec
fnstsw
adc
mov
adc
xor
dec
sbb
dec
ss
imul
ror
and
mov
mov
iret
xchg
jl
cmp
inc
test
out
fisttps
mov
hlt
lods
sbb
rclb
notb
dec
add
addr16
fisttpl
dec
push
mov
int
push
xchg
dec
xor
xor
mov
and
pop
add
sub
es
icebp
shrl
iret
sub
shlb
sbb
xchg
addr16
iret
int3
sub
into
sarb
roll
fmull
push
insb
aad
sbb
jb
fmulp
fstpt
mov
cs
or
xchg
or
jmp
sub
cmc
sub
dec
jno,pn
pop
int3
add
push
notb
int
pop
call
cmpsl
mov
jle
loop
jne
mov
iret
adc
loopne
xor
sub
jb
and
in
lods
or
dec
fmulp
xchg
popa
xchg
inc
iret
mov
das
shlb
aam
in
dec
fsubs
cmp
stos
idivl
inc
and
dec
adc
mov
inc
out
lcall
dec
test
push
mov
dec
lret
xor
or
mov
into
push
shlb
enter
bswap
andl
dec
int3
xor
xor
push
add
xchg
push
fmull
jb
aam
cs
pop
out
adc
stos
mov
pop
aam
dec
shl
pop
mov
sbb
adc
or
add
add
test
sub
pop
add
mov
cli
js
sub
mov
sub
test
jecxz,pn
and
add
mov
xchg
or
in
xor
lods
daa
cltd
insl
mov
outsl
pusha
jmp
mov
pop
lret
mov
outsl
movsb
psllq
popa
out
cmp
gs
das
je
dec
out
adc
mov
xchg
dec
dec
pop
and
or
scas
int
or
imul
mov
mov
sub
ds
popa
lcall
dec
int3
mov
mov
inc
icebp
cwtl
int3
xor
pop
outsl
xchg
xor
or
pop
stos
stc
xor
push
dec
push
pop
int3
icebp
mov
pop
sub
push
sarl
pop
inc
push
jae
movsb
in
dec
dec
dec
addr16
sbb
insl
mov
xchg
rolb
dec
inc
adc
xor
jmp
jecxz
adc
iret
loope
xchg
in
xchg
sarb
in
dec
mov
mov
cwtl
fcmovbe
cmp
imul
dec
xlat
ret
js
out
dec
jbe
pop
mov
or
inc
dec
jp
push
in
lods
shll
push
mov
cltd
mov
and
xchg
imul
xchg
scas
cmp
fsubrs
sub
push
mov
and
into
mov
mov
xor
cli
int3
sub
cmpb
push
jp
lret
mov
cli
cmpsb
orb
sub
stos
jl
icebp
and
inc
jmp
addb
inc
jbe
fdecstp
inc
aam
mov
pop
cmc
mov
sbb
stos
or
js
int3
and
out
add
enter
inc
adc
js
xlat
pusha
test
mov
jo
mull
sbb
push
ljmp
adc
cli
fisubrs
cmp
xor
and
inc
out
nop
test
add
mov
cwtl
outsl
dec
push
sub
push
pushf
sub
iret
cltd
sub
pop
daa
paddw
bound
js
mov
mov
stc
adc
sti
repz
mov
ficompl
repz
int
mov
sbb
mov
or
bound
and
dec
ljmp
mov
and
int
mov
adc
int
mov
mov
xchg
push
mov
pushf
dec
mov
pop
iret
or
mov
dec
into
testb
stc
xor
dec
sub
dec
sub
mov
lods
int3
or
fcmovnu
fbstp
lods
adc
adc
int
or
fistpl
xor
out
mov
daa
xchg
push
jns
rcrl
pop
sbb
mov
cmp
idivl
out
or
clc
scas
lds
pusha
adc
jl
pop
int3
or
pop
leave
sti
je
mov
sub
cmpsl
in
inc
hlt
cmpsl
cmpl
cld
cmpsl
jno
popa
scas
mov
mov
sahf
inc
pop
imul
or
imul
push
fstpt
pop
xor
in
mov
pop
or
mov
repnz
dec
adc
aas
pop
lahf
jle
lret
aad
xchg
adc
ljmp
adc
test
dec
lret
incl
in
lods
cltd
js
hlt
lods
iret
incl
xcrypt-cbc
cmpsl
adc
pop
add
push
lock
arpl
mov
addr16
add
jne
test
jmp
dec
pop
adc
dec
jbe
push
sti
shl
aas
push
xchg
mov
and
sbb
cmp
push
mov
popa
stos
ror
fisubl
push
jge
xchg
stc
pop
aas
pop
xor
cmp
push
leave
push
pop
xchg
imull
das
mov
std
das
daa
mov
testl
lret
andb
sbb
inc
sti
xchg
mov
in
xor
sub
jne
and
aas
fcoms
aaa
jo
inc
or
je
dec
dec
fisttpl
mov
adc
pop
mul
iret
lcall
stos
outsl
pop
cmp
mov
mov
cmp
cmp
mov
cmp
mov
push
lret
inc
xchg
cmp
loope
mov
loop
jp
push
ss
xor
or
sub
sbb
mov
fisubl
mov
mov
pusha
in
repz
mov
jmp
and
jae
mov
xorb
test
jns
pop
mov
jae
das
mov
cmp
mov
or
xchg
popf
push
jle
adc
fisubl
popl
scas
mov
imul
mov
adcl
mov
fs
repnz
jns
test
adc
shlb
fiaddl
xchg
fimull
push
or
insb
jb
fimuls
lods
cmc
or
out
dec
fdivs
test
fs
int3
jns
aam
xchg
lods
xchg
in
popf
dec
fiaddl
cli
rolb
adc
popa
sub
cmpsl
pop
cmpsl
cli
out
cmp
inc
adc
jle
push
xchg
lods
stos
jmp
and
xchg
push
or
dec
inc
jno
mov
xchg
sub
mov
mov
jmp
sbb
push
stos
or
sti
sbb
push
test
rolb
clc
movsb
or
cmpsl
mov
mov
xchg
imul
pop
mov
cmp
dec
iret
repnz
sbbb
aas
cmp
ds
inc
cmp
dec
xor
dec
je
popf
push
sbbl
mov
push
mov
bound
jl
xor
sbb
popa
ss
xchg
mov
mov
cwtl
fcoms
ja
movsb
and
cs
testl
adc
xchg
sbb
lods
mov
jne
fnstenv
jl
push
sbb
cmp
cmpsl
push
push
dec
neg
and
aad
loop
jbe
popf
sbb
mov
cmp
fistpl
sub
stos
ret
or
push
pop
out
in
jb
ja
add
cmp
mov
jno
add
or
cmp
cs
pop
and
adc
mov
lds
test
pop
mov
mov
in
bound
leave
push
test
fbld
inc
jmp
enter
sarb
pop
addr16
lea
pop
mov
pop
add
sbb
dec
leave
in
add
mov
ljmp
cli
or
out
repnz
enter
or
and
hlt
ret
sbb
cltd
dec
addl
sbb
lea
dec
dec
add
jae
lahf
sbb
pop
sub
repz
adc
and
pop
repz
sbb
mov
xor
jne
push
jl
or
in
xor
test
push
mov
sbb
imul
push
push
leave
aad
arpl
ret
and
in
insb
push
and
push
leave
xlat
sbb
sbb
rcl
into
inc
inc
mov
pop
lods
rcl
sbb
decl
mov
iret
addr16
aad
pop
cmp
leave
repnz
dec
add
and
dec
pop
mov
and
rol
jo
fistl
clc
lret
into
mov
mov
push
adc
push
sbb
mov
sub
add
mov
test
mov
xor
jb
adc
das
iret
dec
dec
jp
int3
xchg
jae
sub
out
das
mov
and
push
sub
lret
rol
and
dec
gs
jmp
pop
fcoms
dec
sti
pop
fs
or
sub
mov
or
cmpb
test
push
data16
xor
std
sub
push
aas
lahf
stos
lea
sti
fxrstor
ficompl
loop
testl
popa
cmp
bound
xor
xchg
jmp
adcl
insb
push
push
pushf
sbb
cs
push
ljmp
mov
and
lods
es
dec
mov
push
jns
jge
inc
stos
add
jge
in
mov
push
xchg
test
lret
mov
mov
sbb
nop
nop
and
les
xchg
and
and
xchg
adc
ror
mov
lahf
dec
adc
ror
pop
push
dec
jecxz
lcall
xchg
sbb
aas
xchg
sub
insl
or
pop
and
xchg
mov
jge
jp
ss
cmp
pop
insb
xlat
cmp
dec
stos
dec
pop
jp
les
nop
and
push
testb
mov
xlat
lcall
sbb
sub
mov
inc
lret
dec
mov
push
push
xlat
jns
shl
pop
adc
pop
lds
aam
and
adc
cmp
lea
pop
jns
mov
repz
jl
aas
je
hlt
scas
jg
mov
std
das
push
das
cmp
jns
sbb
shll
push
arpl
pop
inc
or
mov
mov
shrb
out
dec
pop
mov
sarl
jns
ret
pop
aam
jecxz
xchg
pusha
cwtl
out
mov
stc
mov
lods
in
inc
xor
pusha
pop
test
push
lret
dec
push
vpackssdw
mov
out
push
lods
ljmp
in
rorl
lds
ret
dec
sbb
xlat
jecxz
arpl
lret
dec
inc
test
in
aas
pushf
out
and
leave
out
ror
xor
iret
dec
ss
push
mov
mov
mov
lds
push
sub
sub
loopne
out
sbb
xchg
roll
pop
mov
mov
jne
and
aas
or
idivb
mov
jbe
pop
lcall
js
dec
loope
push
sub
cmc
dec
repnz
insb
inc
inc
xor
subb
imul
jo
rcr
lea
sbb
inc
push
push
adc
jle
mov
adc
mov
xor
repnz
dec
inc
jp
roll
jo
lret
bound
enter
add
cmp
ror
es
xor
sahf
aam
mov
rcr
outsb
mov
push
push
in
rcll
fisttps
pop
in
pop
cmp
pop
xor
jmp
adc
out
mov
das
push
jge
mov
mov
es
push
xlat
and
int
mov
jnp
outsl
pusha
mov
arpl
stos
repz
ret
mov
jg
or
js
mov
mov
inc
sbb
pop
xchg
adc
sub
fwait
mov
mov
pop
pusha
arpl
enter
scas
add
dec
cmc
dec
or
mov
jmp
push
push
lea
scas
jp
fists
ljmp
sbb
xor
rclb
pop
push
int
cwtl
ret
std
pxor
je
fistpl
iret
jecxz
push
mov
adc
outsl
adc
push
push
nop
dec
mov
mov
xchg
push
inc
inc
sti
shrb
into
sbbb
imul
inc
and
int3
mov
fidivrl
sbb
push
and
das
sar
xchg
fsubrp
fstpl
and
mov
pop
int3
lds
xlat
int3
and
dec
pop
sbb
nop
dec
inc
push
push
test
push
xor
adc
fbstp
mov
fwait
das
cmc
mov
int3
adc
sbb
sti
iret
aas
fistpll
xchg
std
adcb
sub
imul
aas
in
shl
popf
pop
into
fstl
jns
xlat
repz
xor
testb
aam
pop
adc
ljmp
rcrb
cmp
into
leave
or
cmpl
nop
leave
cmpsl
sub
pop
push
sub
lock
leave
imul
js
mov
stos
cli
rcrb
pop
rcll
imul
or
adc
inc
push
in
adc
or
movsl
mov
sub
mov
dec
fmul
repz
xchg
aam
dec
sbb
xor
faddl
mov
testb
dec
jb
lret
push
dec
in
pop
add
fimuls
pop
xchg
dec
shr
cmp
int3
adc
nop
aas
mov
jge
leave
ljmp
mov
stos
ficoml
arpl
or
int
pop
test
int3
jmp
outsl
jmp
mov
shr
jp
cmp
jae
jl
hlt
repz
std
sbb
adc
and
xchg
add
lret
push
dec
ljmp
sub
sbb
iret
shrb
inc
test
imul
pop
testb
iret
push
adc
adc
scas
aam
rorl
in
imul
and
inc
add
outsl
dec
stos
mov
call
inc
mov
data16
xchg
jle
into
sub
out
adc
testb
push
add
insb
lret
xchg
test
xchg
sbb
push
xchg
pop
setne
push
lds
or
mov
push
lods
dec
push
dec
and
inc
adc
jmp
ret
jo
out
mov
in
jecxz
or
push
pop
xchg
lret
outsb
or
stc
mov
mov
fnstenv
sbb
pop
repz
push
mov
cmp
push
and
fimuls
or
jge
push
mov
mov
pop
fcomip
cld
dec
ljmp
stc
xchg
mov
fadds
pop
out
cmp
arpl
notl
xchg
or
push
test
jg
test
aad
adc
and
pop
out
jmp
mov
jns
cld
sti
scas
mov
lods
test
out
pop
iret
cmc
lahf
xchg
pusha
or
jbe
fistl
mov
push
call
outsb
bound
adc
lds
or
push
or
out
addr16
rorb
push
mov
jmp
js
mov
sbb
repz
sbbb
or
daa
inc
mov
fisubl
dec
test
aaa
or
xor
repz
jecxz
pop
fsubrs
lods
lret
repz
cmc
mov
xchg
ret
jp
faddp
or
into
cltd
xchg
fpatan
in
pop
into
or
dec
test
aas
mov
jo
repnz
imul
mov
xchg
dec
dec
inc
dec
mov
iret
rolb
pop
cltd
sysenter
xor
fimuls
mov
inc
sti
mov
mov
push
mov
or
enter
mov
out
xor
adc
repz
xor
fisubl
clc
adc
xor
movsl
push
test
xor
cli
lds
fimuls
jnp
mov
sbb
jecxz
lahf
xor
push
imul
or
flds
add
fcomp
lea
leave
jmp
sahf
outsb
pop
test
and
daa
cmp
jge
or
mov
push
lret
mov
or
sti
jl
cwtl
fadds
lret
out
sbb
xchg
mov
xor
dec
cwtl
xor
dec
shrb
inc
and
mov
adc
lock
insb
push
mov
add
sub
sbb
xchg
mov
mov
mov
jns
mov
jno
mov
xor
out
pop
out
mov
fdivr
fsubrl
cmp
out
push
sbb
add
jmp
lret
das
fsubrl
mov
sub
into
popf
das
aas
push
xchg
pop
idivl
mov
lahf
das
addr16
xor
jge
mov
js
xchg
daa
jmp
ficoms
cwtl
push
dec
int
subb
idivl
imul
add
adc
mov
aad
jmp
insl
mov
adc
inc
jne
cmp
sti
fnstcw
and
push
pop
sbb
and
cmp
sti
lds
fwait
pop
aas
pop
push
aas
xchg
adc
outsl
add
mov
data16
jmp
inc
add
dec
int3
insl
dec
jbe
push
sti
insl
pop
sub
fbld
push
insb
out
imul
imul
rcrl
jnp
add
leave
repz
xchg
push
dec
les
lret
flds
lcall
jnp
sbb
jl
cmp
inc
cmp
jg
pop
jne
inc
sti
lret
jns
ficoml
cmp
test
jl
or
lds
adc
mov
lock
rorl
pop
jb
ss
xchg
rclb
out
push
out
shl
mov
pop
ljmp
sub
inc
cmp
out
fwait
dec
aas
ja
rorl
dec
mov
push
dec
push
xchg
jl
ja
fadds
into
pop
lahf
mov
fbstp
pop
rorl
into
and
push
xchg
xlat
push
lret
dec
mov
imul
stos
repnz
leave
jecxz
dec
dec
push
fnstenv
mov
mov
sbb
mov
fists
stc
repnz
scas
popf
not
ds
pop
xchg
jecxz
cmpsl
or
sbb
clc
mov
jmp
inc
out
adc
fisubs
dec
int3
and
or
aas
mov
jecxz
jno
hlt
cmp
add
adc
data16
pop
jl
mov
fucomip
mov
rorl
aam
mov
and
dec
movsl
shll
push
mov
sbb
dec
test
cltd
adc
mov
push
fxch
or
js
iret
or
cmp
testl
adc
in
sbb
xchg
push
das
push
nop
jns
jb
shl
rep
cmc
or
idiv
fmulp
inc
push
pop
lods
xchg
stc
mov
clc
fmull
jae
mov
inc
and
sbb
mov
cli
lds
bound
js
adcb
pop
aam
dec
push
adc
mov
mov
jnp
lret
xor
xchg
or
or
cmpsl
sbb
test
adc
mov
mov
cmp
pop
sbb
pusha
adc
adc
inc
subb
cwtl
test
int3
lret
shll
dec
popa
mov
int3
arpl
or
dec
push
rclb
jmp
cmpl
pop
sbb
shl
mov
push
rol
xor
std
stos
pop
mov
loop
sarl
jb
sub
pop
xchg
inc
xchg
pop
pop
jmp
adc
aam
jbe
xchg
ficoml
fcmovnu
stc
lods
sbb
imul
xchg
fld
jecxz
stc
sbb
xlat
fimuls
xchg
or
mov
jae
lret
add
fcmovbe
jns
enter
pusha
in
sti
loop
push
mov
adc
pop
bound
mov
cmp
and
mov
punpckhdq
cmp
pop
shrl
lock
aas
cmp
sub
or
inc
sbb
xchg
fisubrs
cmp
inc
xchg
xor
pop
push
or
stos
das
cmp
lret
cs
into
iret
pop
fisttpll
sbb
lods
cs
xlat
test
cltd
pop
xor
mov
xor
mov
iret
fucomip
aad
sub
jmp
in
mov
mov
add
lahf
idivb
fwait
push
add
jp
jnp
push
imul
imul
dec
mov
stos
dec
cmpsl
leave
cmpsl
stos
jns
add
sbb
hlt
mov
push
cmp
jmp
mov
dec
adc
jp
cli
jno
xlat
add
pop
cmp
lea
incb
fcomi
or
jne
pop
enter
fdivl
mov
jo
lret
jecxz
sub
pop
or
fbstp
loop
sbb
cmp
xor
hlt
mov
sar
aaa
scas
sbb
cli
lret
add
mov
or
dec
cli
and
or
pop
les
adc
dec
mov
add
jge
pop
jbe
mov
lret
fwait
bound
cltd
int
loope
and
mov
xchg
cltd
imul
adc
lret
lock
addb
xchg
sbb
pop
popa
lret
orl
cli
fcmovb
iret
xchg
roll
cmp
mov
jge
and
add
pop
test
mov
push
sub
pusha
mov
scas
dec
mov
xchg
xor
orb
fidivl
adc
pop
xchg
push
push
or
dec
cmp
loop
inc
xor
xor
mov
sbb
xchg
and
lcall
ljmp
add
jmp
out
dec
dec
dec
push
mov
and
mov
data16
out
xchg
fwait
roll
outsl
fdivs
dec
jmp
clc
repnz
push
push
inc
stc
pop
xlat
mov
cmpsl
sbb
dec
sbb
xor
int3
inc
jo
cs
addr16
pop
mov
xor
fisubl
dec
ret
pop
fldl
movsl
cld
push
in
add
xchg
mov
aam
imul
out
lret
jo
insl
dec
or
add
jb
mov
fisttps
mov
push
pop
leave
mov
mov
xchg
or
xchg
fsts
inc
adc
mov
mov
push
inc
mov
faddl
pop
arpl
push
icebp
stc
cltd
pop
lock
fisubl
sbb
in
sbb
out
repnz
test
jo
ja
push
mov
in
or
cli
iret
pop
pop
pop
adc
mov
jns
sub
push
stc
mov
fwait
mov
add
push
mov
mov
addl
xor
xchg
and
mov
scas
iret
cs
out
pop
sbb
push
lret
cltd
or
mov
or
xchg
sub
dec
adc
mov
cmp
scas
push
aas
or
dec
mov
in
repnz
lods
sbb
lcall
dec
dec
call
mov
xchg
or
jge
dec
dec
xor
fwait
jb
scas
push
ja
jmp
nop
xor
xor
std
mov
orb
nop
add
ljmp
xchg
sbb
stos
add
shll
inc
int3
scas
xchg
idiv
mov
into
jbe
push
pop
sbb
and
mov
jge
sub
je
jmp
mov
stos
pop
loope
roll
fimull
into
xchg
iret
sahf
ret
inc
test
mov
lret
rcrb
cwtl
inc
xchg
sbb
lret
shrl
pop
arpl
fistpl
or
fsubs
fistl
in
xor
or
mov
xlat
or
inc
je
sbb
jo
sub
notb
jae
xchg
pushw
push
or
in
cwtl
rcr
shl
lahf
and
sbb
cltd
pop
and
xchg
pop
fadd
mov
mov
xchg
negb
popf
pop
dec
xchg
pop
cmp
xchg
add
pop
ja
scas
push
roll
xchg
in
mov
lret
ret
or
fimuls
sbb
and
mov
int
cmp
push
ret
in
dec
fcmovbe
rol
repnz
dec
dec
lahf
rcrl
jmp
sub
mov
sbb
push
adc
nop
sub
mov
ret
lock
and
or
or
in
scas
lahf
cmp
dec
pop
jb
fwait
push
icebp
dec
stos
xor
xor
mov
test
lods
iret
or
push
jmp
es
shll
mov
jge
push
aaa
out
jmp
mov
sbbb
loop
iret
xor
or
outsb
inc
mov
mov
pushf
insl
mov
pop
xchg
cld
nop
pop
in
jno
inc
repnz
inc
iret
add
mov
leave
add
sub
cmpsb
adc
popl
mov
iret
jae
push
pop
push
push
nop
inc
mov
mov
into
shll
sti
clc
adc
testb
dec
movsl
mov
loopne
aas
adc
clc
lcall
imul
mov
push
scas
or
out
pop
fidivrl
push
insl
mov
fists
scas
dec
sub
sbb
repz
mov
in
sbb
sahf
dec
xchg
or
insb
dec
cwtl
mov
cmp
arpl
pop
or
dec
loopne
out
adc
mov
cmp
dec
add
bound
dec
fidivrl
pop
sub
daa
iret
jae
cs
pop
or
xor
xchg
pop
pop
fldl
sahf
adc
adc
imul
push
and
fisubs
dec
mov
sbb
pusha
or
push
mov
movsl
in
enter
jmp
or
call
sbb
cmpb
out
loopne
mov
or
dec
nop
xchg
sahf
cmp
dec
cmp
aaa
lret
mov
add
or
inc
popa
cli
pop
ret
push
or
adc
out
cli
call
jbe
mov
in
mov
mov
arpl
addr16
lcall
out
push
popa
popa
inc
xchg
loopne
cli
std
xchg
dec
xchg
movsl
les
mov
dec
int3
movsb
adc
push
push
call
std
xchg
lret
pop
jge
adc
pushf
push
aad
mov
push
add
lret
lahf
adc
out
or
push
xchg
pop
dec
dec
popf
fcoml
adc
and
or
jnp
out
int3
lods
push
movsl
out
arpl
mov
bound
mov
decb
dec
inc
sbb
xchg
push
out
fmul
dec
notl
jnp
sbb
jge
sub
and
cmpsl
aam
push
jns
mov
push
in
pop
insl
dec
int3
shrl
mov
or
push
out
fmuls
cmpsb
and
mov
or
sbb
mov
adc
cli
push
mov
pushf
dec
popf
fstpl
dec
insb
pop
in
mov
mov
idiv
or
lcall
sub
dec
mov
cmc
xlat
addb
xor
mov
ja
ljmp
cmp
adc
add
das
inc
pop
in
int
mov
sub
sar
aas
bound
or
dec
mov
cmp
shlb
cmp
orl
and
mov
mov
pop
scas
insb
lret
adc
or
dec
test
or
das
sbb
and
fmulp
push
mov
cwtl
mov
fwait
push
xor
ljmp
inc
mov
add
sti
cld
mov
mov
xor
cmp
ret
cmp
mov
out
sbb
dec
lret
pop
std
xchg
fdivr
push
in
dec
fwait
push
and
push
fmul
dec
pop
jno
fbld
sahf
xlat
test
pushf
popa
mov
pop
xchg
jno
fistpll
lret
mov
scas
xchg
cwtl
push
mov
cmp
mov
add
inc
inc
sub
adc
dec
xchg
adc
sbb
pop
jmp
int3
das
jbe
fadds
hlt
stc
xlat
mov
std
aam
dec
cmp
fdivs
and
pop
cs
lcall
pop
sbb
cwtl
jl
pushf
mov
iret
pop
and
je
test
push
add
xchg
cmpsb
mov
ljmp
addr16
xchg
add
dec
pop
jge
xorl
fs
aad
iret
dec
xlat
push
push
in
or
xchg
push
fsubl
sub
xchg
mov
xchg
and
mov
fists
jle
mov
bound
or
dec
ret
mov
add
rcll
aam
cmc
iret
leave
fstl
lea
mov
jb
loopne
or
mov
pop
lret
or
int3
cmp
insb
sbb
movsl
mov
jmp
push
jecxz
cmp
iret
vmovss
adc
push
lods
and
push
mov
adc
ljmp
cwtl
dec
sub
and
rorb
xchg
fnstsw
dec
out
mov
xlat
mov
adc
popf
dec
add
mov
xor
dec
dec
push
hlt
sub
mov
lret
xor
xchg
and
sub
stos
lret
dec
in
addb
cltd
sbb
pushf
cs
out
fidivl
mov
insb
in
ror
cld
int3
cwtl
add
push
dec
pop
xchg
cmpsl
jb
icebp
je
mov
pop
mov
cmpsl
loope
pushf
leave
and
aas
das
jno
sub
fildll
dec
dec
adc
pop
cs
es
pop
cmp
sbb
mov
pop
mov
or
daa
mov
add
ss
jge
mov
dec
or
ror
cmc
mov
in
push
adc
inc
pop
add
mov
stos
pop
addb
cwtl
cld
mov
nop
sbb
pop
and
nop
lret
fst
inc
test
data16
mov
les
lods
pop
leave
adc
mov
add
dec
pop
cmp
mov
mov
lcall
pop
inc
or
mov
pop
das
or
or
sahf
pop
xor
or
mov
fs
pop
or
fildll
repz
push
andl
hlt
test
jg
push
pop
mov
push
int3
jecxz
dec
aad
jle
jle
cli
xchg
jmp
mov
pop
mov
cs
repnz
cmp
lret
adc
fisttpl
push
mov
jmp
add
js
std
sub
cmpsb
call
sti
pop
jne
jnp
jno
ficompl
bound
jle
cmp
xor
mov
jp
fimuls
mov
mov
cmp
in
sbb
mov
push
ljmp
scas
aad
ret
ja
inc
mov
mov
leave
incb
test
js
xorb
and
inc
rcrl
xchg
dec
int3
adc
xor
cmp
mov
lret
iret
fidivl
nop
mov
in
lret
cmp
inc
cmp
push
inc
pop
jns
jmp
cmp
adcb
aam
sub
stos
inc
fildll
lods
mov
fcomp
pop
jno
push
ret
add
cmp
pop
pop
or
ljmp
sub
push
jmp
movsb
out
xchg
mov
loope
dec
dec
ret
mov
adc
mov
jmp
inc
sbb
sbb
or
or
or
push
loop
mul
mov
arpl
dec
pop
ret
fisttpl
dec
mov
mov
iret
inc
adcb
mov
xchg
ljmp
imul
pop
dec
or
sbb
jmp
xchg
jo
leave
inc
sub
cbtw
and
insl
sub
push
orb
xchg
push
movsl
xchg
daa
xchg
dec
sbb
ljmp
or
sub
fsubs
insb
adc
push
int3
mov
mov
mov
xchg
ss
dec
jo
dec
call
pushf
mov
and
rcll
push
jne
pushf
push
mov
lea
fistl
dec
xchg
shll
rorb
lea
mov
std
popa
or
pop
pushl
adc
js
mov
fisubl
rcrb
add
push
stos
lahf
cwtl
xchg
sbb
in
ljmp
ret
jle
daa
notb
cmpl
stos
add
in
popa
in
test
push
fisttpl
and
je
pop
sub
xor
data16
dec
das
xchg
ficoms
mov
mov
scas
jle
negb
out
fstpl
pop
mov
mov
and
adc
or
add
mov
pop
lret
insb
movsl
cld
pop
mov
dec
adc
adc
fdiv
into
iret
add
and
jl
icebp
dec
xorb
cmp
jns
loopne
or
mov
rol
add
mov
fists
sub
add
mov
loope
sbb
jo
push
in
sub
jge
imul
rcrb
or
dec
mov
cs
mov
adc
mov
xor
xchg
jno
lcall
insb
ja
idivb
popa
lret
cmpsb
mov
inc
and
jmp
sub
sti
fbstp
aad
inc
pop
cld
cmp
pop
loop
popf
sbb
test
mov
rclb
fsubl
cmp
pop
pop
push
xchg
sbb
mov
sbb
mov
jg
ficomps
ss
cmpsb
or
add
sub
imul
std
cmp
and
adc
pop
pushf
push
sub
fcmovnu
jmp
mov
call
sbb
in
rcl
sub
ficoml
cmp
ret
mov
cmp
jae
movsb
jo
mov
sbb
add
sbb
mov
test
outsb
pop
cmpsl
or
pop
stos
lock
hlt
xchg
pop
es
mov
lds
push
adc
out
hlt
jp
lcall
loop
dec
icebp
dec
sub
add
jg
scas
and
cs
roll
cmp
lret
cmp
pop
push
fwait
add
sti
lods
push
fsts
xor
lock
unpckhps
push
cmp
cli
and
pushf
or
or
sbb
inc
cli
fildl
and
test
movsb
and
jo
inc
jp
adc
lods
jmp
dec
push
sarl
mov
adc
fisttpl
int3
sbb
cmp
xlat
minps
add
push
leave
push
mov
mov
push
orps
or
push
push
iret
or
imul
cld
cmp
imul
scas
repz
lea
sarb
lret
fmull
cld
bound
push
pop
pop
xor
rcll
lret
mov
js
in
inc
mov
nop
dec
icebp
outsl
enter
fsubr
xchg
outsl
jg
stos
push
and
roll
test
mov
daa
jo
aam
les
aad
pop
mov
fwait
jecxz
jo
sbb
or
clc
and
loop
out
shl
pop
scas
int3
cmp
cmp
std
xchg
rcr
test
xchg
rclb
sub
dec
cwtl
lret
dec
dec
mov
jo
cs
out
out
xor
adc
pop
aad
imul
sti
in
call
mov
lock
xchg
inc
and
add
std
pop
sahf
mov
andl
mov
jo
pop
adc
iret
jmp
jge
test
or
push
mov
sub
jmp
xor
sub
les
fdiv
add
mov
push
inc
divb
or
xchg
xor
sub
mov
stos
scas
insl
dec
repnz
or
icebp
add
and
sub
aam
push
push
lret
aad
cmc
jp
sarb
sub
js
or
ljmp
or
fwait
aas
push
fnsave
stos
aad
xor
out
mov
xor
cmp
ljmp
movsl
lock
lahf
push
push
mov
push
jo
sbb
lods
and
scas
and
xchg
jl
fsubrl
mov
ss
sahf
outsb
js
jmp
xor
jp
mov
cmp
push
into
adc
cld
outsl
aaa
pop
push
iret
pop
sahf
sarb
loopne
cltd
lods
mov
cwtl
rcll
insb
dec
ja
push
inc
fldt
mov
jnp
mov
fisubl
jno
jns
outsb
and
fcom
mov
sub
adc
in
ficomps
das
jge
mov
lret
in
ret
jo
or
push
push
push
push
xchg
data16
fwait
jge
or
dec
adc
jae
lock
mov
push
xchg
iret
fs
rclb
jns
call
dec
mov
addr16
jmp
into
adc
jbe
dec
push
dec
dec
stos
pop
and
sbb
test
and
and
iret
test
fsubrl
and
je
push
inc
cmc
dec
fcompl
jg,pn
jmp
and
xor
push
sbbb
fisttps
xor
and
ljmp
jl
mov
mov
dec
or
in
or
pop
cltd
mov
pop
shlb
sbb
jge
dec
lea
out
pop
jns
mov
iret
mov
pop
subl
ret
push
push
mov
in
pop
mov
xlat
scas
shlb
and
out
push
or
lock
xor
pop
loop
lock
and
lds
jb
aas
cli
or
fldt
dec
adc
xchg
imul
xchg
repz
lcall
xchg
test
popa
sbb
bound
cmp
shr
sub
das
incl
fidivl
lds
int3
cmp
imul
add
fistpll
inc
insb
shlb
adc
pop
xor
sbb
mov
aaa
cmp
sar
jle
mov
dec
jns
lret
mov
inc
xor
aam
cwtl
rcr
leave
dec
push
shlb
aas
pop
jns
jg
mov
vmread
js
push
and
je
add
sub
in
mov
pop
sbb
pop
lock
push
das
arpl
sbb
or
fwait
cmp
or
jnp
mov
mov
inc
cmp
push
js
cmp
xor
nop
pop
fsts
mov
jno
add
into
lret
and
mov
pop
int3
lcall
paddd
in
mov
jns
nop
xchg
mov
and
sbb
ljmp
or
sub
pop
push
adc
ss
mul
pop
iret
fdiv
mov
fstpt
iret
into
das
sbb
mov
sbb
int3
cmp
loopne
leave
sub
sahf
xchg
fstpt
sti
jge
push
pop
iret
fdiv
cmp
xlat
fldenv
adc
dec
jo
adc
imul
jge
imull
rcrb
sub
push
jmp
jp
push
fs
outsb
push
arpl
aas
sbb
ljmp
or
iret
loopne
mov
pushf
jmp
imul
and
mov
bound
xchg
aad
out
jbe
insl
adc
mov
mov
and
add
jnp
leave
push
inc
int
fs
leave
rorl
popf
aam
out
push
mov
ret
mov
or
sub
iret
push
sbb
shll
pop
pop
pop
jns,pn
adc
loop
push
cmp
pushf
sbb
dec
int3
test
cmpsb
or
push
cmp
xchg
jb
js
or
mov
and
mov
lret
jb
loop
shl
lcall
or
add
shrb
jmp
xchg
pop
adc
adc
cmp
aam
dec
aad
push
lret
adc
stos
adc
xor
lret
lret
push
into
je
xor
pop
dec
cmp
push
mov
jae
mov
ds
stos
mov
das
stos
inc
dec
adc
ret
push
test
loopne
cmp
rclb
out
pop
inc
inc
or
ds
mov
stc
icebp
faddl
cmp
mov
push
stc
jo
out
pop
jmp
and
scas
jbe
dec
pop
mov
cltd
add
sbb
xchg
dec
adc
pop
sub
mov
iret
pop
mov
sbb
iret
sub
mov
lods
push
bound
and
adc
mov
insl
adcb
loop
jo
pop
push
xchg
mov
lea
lea
push
xlat
pop
mov
mov
push
stos
sub
xsaveopt
adc
push
dec
dec
mov
repz
out
jmp
cltd
mov
fstl
inc
pusha
repnz
mov
mov
xchg
leave
mov
mov
cmpsl
stc
add
dec
dec
mov
mov
ljmp
arpl
cld
mov
xchg
inc
sub
mov
xor
iret
push
or
iret
inc
pop
cmp
or
push
sbb
pusha
sti
jecxz
dec
aad
cmp
jne
or
dec
adc
inc
push
pop
lea
fisttpll
sti
incl
jge
jge
int3
loopne
ret
mov
adc
fadd
inc
sbb
or
add
insb
ficoms
and
xchg
in
push
repz
scas
jns
popf
push
sar
outsl
sub
or
int3
fisttpll
out
in
lods
sbb
xchg
add
pop
xor
mov
pop
or
pop
es
hlt
mov
inc
sub
and
xchg
mov
cld
and
dec
sub
and
ljmp
movsl
arpl
dec
cli
sub
lret
pop
sub
mov
lret
xchg
mov
aas
int
fildll
lret
fdivs
sar
dec
lcall
fidivrl
add
sbb
add
or
mov
dec
jmp
pop
mov
pop
int
fiadds
mov
shlb
fstl
cmp
add
or
stc
pop
pop
out
mov
mov
fisubrs
das
push
lret
aam
xor
outsl
mov
fwait
jmp
mov
pop
xorl
stos
inc
nop
dec
clc
push
pop
push
lret
shlb
add
xchg
scas
xchg
xchg
dec
bound
or
cwtl
mov
jecxz
xchg
imul
in
lret
jg
xchg
aad
mov
mov
mov
or
and
sub
dec
out
ficomps
mov
stos
mov
scas
or
outsl
mov
les
xchg
mov
daa
mov
out
xchg
scas
inc
cmc
clc
jo
aaa
daa
shrb
popa
dec
clc
push
pop
push
mov
sub
iret
cvtps2pd
jnp
pop
jnp
mov
popa
shrl
inc
lods
mov
xchg
push
rcll
adc
push
jl
fbstp
xchg
fs
out
sub
inc
xor
aad
aas
xor
sbb
shr
decb
in
push
decb
push
decb
jns
xlat
in
push
lret
or
jmp
sub
sub
push
shll
int3
int3
xchg
push
js
adc
or
sbb
bound
movsb
popa
pushf
jg
cmp
popa
sbb
adc
or
sbb
out
mov
leave
and
stos
mov
lea
push
dec
stos
les
rclb
loop
les
and
push
adc
sub
mov
push
iret
inc
mov
sbb
or
sbb
insb
cmc
jl
or
bound
pop
rcr
in
mov
stos
jmp
mov
xchg
sbb
jne
loopne
pushl
push
add
out
mov
pop
in
sub
in
ret
xchg
ljmp
rorb
dec
mov
inc
push
add
pop
rcll
push
ljmp
jg
pop
or
mov
sahf
add
inc
scas
mov
stos
mov
xor
and
repnz
push
dec
pop
aad
pusha
jbe
jae
loopne
iret
mov
pop
cmp
mov
out
ss
add
adc
xchg
das
fstpl
add
hlt
xchg
push
stos
push
cs
scas
sbb
mov
aad
jmp
jnp
jge
adc
aaa
stos
pop
jecxz
ss
push
aam
fsubl
jmp
adc
xchg
addr16
lret
outsb
add
push
xchg
js
push
js
dec
dec
pop
pop
sbbb
or
outsl
loop
xchg
jp
pop
aam
push
sbb
jnp
outsb
outsb
mov
mov
add
mov
dec
push
mov
das
add
pop
or
push
pop
mov
xchg
out
out
cmpsb
ficoms
push
scas
cmpsb
adc
mov
xchg
or
cli
jg
iret
scas
ja
mov
xchg
and
ljmp
mov
loope
mov
xlat
mov
sbbl
shrl
mov
roll
push
arpl
cli
cwtl
orl
pop
or
and
int
enter
cld
push
or
mov
nop
adc
rorl
fbld
xor
les
sbbb
shrb
rcll
pop
pop
jl
push
imulb
mov
inc
sub
ljmp
sub
pusha
sub
cmp
aam
mov
jo
cld
sahf
iret
shrd
xchg
add
add
adc
test
push
jo
or
insb
xchg
mov
pushf
lock
mov
leave
xor
mov
dec
adc
and
xchg
inc
ret
adc
rclb
and
sub
cmp
sub
mov
pop
sub
lcall
fdivrl
cs
es
xchg
lock
xchg
pop
lcall
xchg
in
xor
rolb
arpl
dec
das
dec
jp
pusha
xchg
and
push
jo
xchg
sub
sbb
jp
xlat
mov
add
mov
repnz
les
mov
fbld
lret
lods
mov
mov
xor
jp
mov
out
neg
out
loopne
jge
mov
mov
imul
pop
cld
mov
cltd
cmp
fmull
jp
dec
fsubr
cltd
or
lea
fistpl
into
xchg
dec
rcll
adc
in
shll
sarl
cvtps2pd
xor
stos
cwtl
lahf
pop
pop
scas
fimull
mov
xor
push
and
sub
jmp
xchg
cmp
pusha
sbb
xchg
adc
aam
lahf
xchg
push
sub
or
inc
pop
mov
add
lcall
cmp
rol
dec
cltd
outsl
sti
rcll
pop
ja
sbb
rolb
push
sub
dec
loop
adc
pop
push
into
test
mov
sub
insl
or
in
or
jnp
xchg
jb
sbb
fisubrs
pop
adc
jp
pop
pop
iret
stos
adc
mov
push
sbb
dec
adc
jne
xor
in
hlt
pop
or
pop
dec
push
fldt
mov
shrl
push
mov
lret
pop
sbb
repz
lds
sub
data16
stos
hlt
out
push
lret
test
pop
jmp
xchg
mov
int
pop
jo
fcmovne
adc
inc
movsl
cmp
out
imul
jbe
enter
or
cmp
inc
in
xchg
rcrb
pop
lods
jg
scas
sarl
lret
cs
ljmp
push
or
xor
decl
andb
or
add
data16
xchg
and
jb
jnp
xchg
jle
ss
dec
sub
inc
cmpsb
sbb
std
fisttps
imul
mov
mov
pop
xor
das
and
fcmovu
fs
and
jo
mov
loope
jno
imul
xchg
int3
and
std
adc
aam
jno
sbb
jns
imul
mov
push
pop
xchg
roll
pop
jns
push
mov
enter
loop
stos
into
jmp
scas
jae
mov
inc
pop
xchg
dec
ret
push
jmp
lret
sub
clc
dec
insb
lret
xlat
iret
iret
bnd
out
paddsw
dec
into
sbb
xchg
adc
pop
test
lret
jae
jnp
sbb
or
sub
push
cmpsl
imul
dec
xlat
mov
dec
or
fcompl
push
in
cmp
and
call
inc
pop
mov
mov
jne
fistps
sbb
aad
push
pop
xchg
and
decb
mov
jae
mov
movsb
cs
push
pop
rcl
sbb
clc
adc
or
rcrb
jo
imull
out
jnp
xchg
cmp
push
cmp
dec
fcomip
add
out
mov
mov
cmp
jo
pop
sbb
sub
movups
pop
fisubl
ret
negb
loope
aam
mov
pop
jne
add
xlat
outsb
xor
sub
or
mov
test
or
jge
push
and
and
push
sahf
fstpt
dec
mov
mov
into
daa
cmp
mov
movsb
xlat
push
and
jge
mov
inc
fnstenv
bound
cmp
in
int3
fwait
dec
jne
data16
lret
and
cmp
mov
jb
stc
sti
mov
dec
dec
arpl
adc
sbb
xchg
push
pop
mov
cmp
mov
fcmove
test
xor
addr16
int3
and
pop
lock
sbb
mov
loope
and
mov
adc
jb
and
add
int3
and
push
lods
mov
jns
or
mov
stos
bound
mov
into
cmp
daa
push
cmp
leave
ja
mov
cwtl
pop
testl
bound
jg
sub
push
iret
ret
sub
pop
lea
sbb
and
out
or
xchg
sbb
xchg
jbe
sbb
cmp
pop
push
int
xor
dec
or
insb
out
das
insl
fimuls
mov
cmp
ljmp
mov
push
insb
mov
adc
xchg
pop
mov
jg
bound
das
sbb
in
out
fimuls
int
pop
dec
pop
mov
dec
xchg
repnz
insb
fisttps
mov
lret
pop
jl
stos
xor
mov
or
sti
push
pop
or
jno
pusha
mull
js
stos
test
xor
adc
mov
rorl
inc
sbb
lret
fildl
aas
jae
out
les
push
cmpsb
sub
aaa
pop
aad
xchg
push
add
scas
pushf
push
adc
ficomps
aas
inc
roll
and
pop
pop
or
dec
adc
push
out
pop
adc
mov
cmp
fdivp
or
mov
loop
dec
lret
dec
or
pop
cmp
test
lock
pop
ljmp
inc
cli
add
sub
mov
shr
aas
pop
xor
sti
imul
insb
out
xlat
in
cmp
loope
xlat
fisubrs
leave
sarl
arpl
pop
sbb
cmc
sbb
out
lret
out
ret
pmaxub
dec
outsl
dec
std
repnz
iret
in
dec
xchg
stos
lcall
cs
adc
pop
movsb
add
lods
jmp
push
and
mov
outsb
scas
popa
pop
lods
stos
add
int3
pop
jge
fsubs
call
aas
xor
mov
pop
pop
lcall
pop
push
aaa
xchg
dec
xor
cmpl
or
inc
push
imul
sti
dec
jmp
in
jb
mov
add
scas
mov
popa
dec
out
or
and
stos
lret
pop
and
xchg
mov
and
cltd
pop
aam
add
lods
aaa
aaa
repz
mov
lods
push
mov
push
fwait
mull
or
cmp
lds
outsl
or
divb
stos
dec
lods
out
ror
rcrl
mov
pushf
add
sbb
cli
fstl
stos
mov
push
mov
subb
loopne
lahf
add
mov
cs
iret
dec
lahf
inc
inc
scas
insb
mov
lcall
cmp
pop
repz
icebp
push
repnz
dec
cmp
filds
pop
popf
insb
mov
xor
mov
fimull
cwtl
push
out
clc
jl
lahf
sti
stos
mov
fidivrl
xlat
insb
jecxz
call
dec
xchg
xor
adc
lods
aas
hlt
mov
hlt
jmp
mov
fisubrs
insb
cwtl
dec
sub
dec
or
sbb
nop
push
jge
mov
dec
push
mov
mov
adc
mov
lret
js
in
pop
rcrl
sbb
sub
bound
xlat
inc
insb
dec
mov
out
adc
mov
sahf
mov
jne
repz
out
divl
out
cwtl
xor
lret
jg
out
pop
jae
adc
add
push
clc
or
les
push
pop
push
and
push
out
test
fwait
int3
cmp
lds
out
cmpsb
or
mov
gs
xlat
cld
mov
nop
jp
push
pusha
lret
push
aam
and
cli
ret
subb
cld
xlat
out
and
bnd
inc
jmp
mov
pusha
pop
add
fstl
in
or
mov
mov
jecxz
aas
decl
nop
and
sahf
xchg
push
inc
cmp
and
ret
xchg
lods
out
fdivr
push
test
mov
fwait
sbb
cmp
iret
sub
and
fs
iret
pop
fdivl
mov
push
xchg
out
pop
sti
test
rcr
mov
push
mov
inc
outsb
stc
std
or
mov
cmp
repnz
and
mov
sbb
scas
pushf
popf
pop
imul
in
mov
fbld
push
fsts
or
jo
xor
adc
sub
pop
xor
or
jo
push
xchg
loope
xor
scas
hlt
and
in
std
stos
notl
rcrl
aas
mov
fimuls
out
stos
sub
xor
mov
or
test
mov
push
dec
adc
adc
cmp
inc
hlt
sub
decl
stos
jge
pop
xchg
pop
mov
int3
stc
dec
or
outsb
or
push
ficomps
mov
inc
enter
cmp
mov
and
nop
into
lahf
mov
call
adc
hlt
jno
add
cli
xor
bswap
inc
pop
or
mov
cmp
mov
jp
sbb
adc
jmp
jmp
scas
dec
jl
push
test
lods
sub
fsubl
rclb
cli
add
and
sub
sub
adc
mov
repz
push
push
rorb
or
lock
jp
pop
test
push
dec
and
aas
cmp
pop
sbb
pop
lahf
out
repz
cli
mov
push
sbb
jmp
add
dec
shrb
adc
mov
mov
shlb
pop
sub
js
aas
jmp
pushl
xchg
insb
adc
mov
repz
out
dec
fcmovnu
pop
scas
push
push
mov
sahf
xchg
out
in
ffreep
scas
inc
je
or
pop
jnp
jnp
inc
imul
mov
xor
adc
int
adc
adc
mov
iret
cmp
into
or
push
rorb
fwait
stos
push
das
mov
stc
loop
scas
dec
sarl
addb
mov
jge
int
pop
pop
jl,pt
and
mov
adc
push
push
mov
add
jg
inc
and
aas
push
and
js
cmp
rorl
dec
pop
and
mov
xor
fstpt
mov
imul
insl
and
adc
adc
out
pop
icebp
jle
ja
pop
iret
pop
lds
adc
shll
lret
lock
pop
push
xchg
shlb
pop
mov
cs
mov
stc
dec
jle
inc
int
xor
pushf
in
sub
mov
dec
push
inc
mov
or
mov
in
jbe
rorl
mov
or
xchg
lahf
fldcw
inc
sub
and
add
mov
sbb
mov
xlat
xchg
mov
in
mov
dec
fwait
scas
pop
mov
dec
fsubrl
hlt
inc
push
dec
cmp
pop
sbb
sbb
sbb
mov
and
mov
mov
jle
sub
sbb
mov
sbb
push
dec
pop
pop
and
pop
imul
imul
roll
adc
and
dec
movsl
jo
push
fdivrl
sbb
jg
jae
mov
push
ds
adc
cmp
imul
mov
rcl
jno
into
inc
sub
pop
pusha
sbb
fwait
sbb
jp
leave
rcrl
data16
out
outsl
mov
out
loop
sbb
addr16
mov
aam
sbb
lock
mov
mov
sarl
mov
xchg
push
mov
jecxz
xor
inc
lahf
lret
mov
sti
add
or
lcall
xlat
lret
sub
dec
cwtl
dec
dec
mov
and
rcrb
or
insb
jno
mov
xchg
imul
adc
aas
or
lods
rcr
push
cs
repz
dec
sub
rorl
jno
out
add
jg
repz
jg
adc
jg
fadds
insb
sbb
ja
pop
data16
pop
orl
out
into
xor
cmp
push
imul
ret
sbb
pop
call
stc
or
and
rclb
test
jle
adc
xchg
sbb
push
jb
or
lods
cwtl
cmp
or
mov
adc
out
jo
aaa
mov
cwtl
iret
les
fisubs
sub
jl
dec
addr16
repz
mov
jnp,pn
dec
lret
ja
outsl
popa
popf
adc
pop
and
dec
push
dec
scas
insb
dec
adc
andb
sub
incb
mov
sbb
aad
xchg
lcall
insb
push
mov
inc
mov
cwtl
bound
or
jl
cmp
mov
and
cmpsb
insl
fstpt
clc
ds
pop
sbb
rcrb
lret
inc
cmc
xor
adc
ret
sbbb
scas
push
imul
mov
sbb
popa
cmpsb
adc
sub
cmp
int
sbb
imul
ljmp
pop
iret
ret
pop
ret
inc
xchg
stos
mov
out
push
testl
cltd
xor
or
adc
mov
insl
scas
data16
dec
mov
pop
inc
sbb
lcall
out
push
push
call
shr
xchg
sub
xlat
sub
pop
push
loop
ljmp
fimull
pop
jge
jno
dec
ret
movlps
push
mov
aad
mov
scas
mov
push
push
pop
jae
shll
jbe
lds
xorb
push
je
push
pop
jno
pop
js
cwtl
jb
mov
pop
xchg
dec
ret
cmp
jnp
cwtl
pop
mov
popa
mov
iret
pop
add
shrl
mov
sub
ds
push
push
cmp
cmp
adc
sub
xchg
push
inc
mov
mov
mov
push
repnz
ja
push
lcall
xchg
ficoml
repnz
mov
leave
or
cmc
sub
or
cltd
adc
jmp
ja
ljmp
jp
pop
mull
pop
dec
fs
sbb
gs
sub
mov
in
in
aas
inc
lods
lcall
fs
xor
hlt
dec
xor
inc
pop
in
and
cld
xor
mov
dec
cwtl
adc
jb
dec
test
fisttpl
data16
fcompp
out
dec
int3
lahf
sti
jb
mov
jmp
movsl
insb
aaa
jmp
dec
mov
sub
pop
inc
inc
push
dec
cmp
cmp
and
xor
sub
adc
faddl
xlat
and
sbb
fwait
out
fcomp
jle
push
scas
scas
dec
pop
je
das
lahf
inc
jle
pop
mov
into
inc
jo
cmp
test
jmp
fcoms
mov
dec
pop
aas
xor
mov
push
mov
ja
push
repnz
jno
pop
mov
sub
xlat
into
fcoml
mov
addb
jns,pn
out
call
xchg
mov
mov
lea
mov
or
xchg
fistpl
ss
clc
cmp
mov
or
movsb
cwtl
mov
jle
dec
mov
adc
jb
pop
push
arpl
mov
pop
jae
push
xor
ss
icebp
pop
mov
inc
dec
inc
jge
lret
sbb
adc
sbb
xchg
cmp
ss
cmovo
jle
leave
int
inc
sub
in
inc
sub
mov
outsb
mov
sbb
popf
adc
fdiv
and
mov
dec
outsl
or
cmp
insb
pop
pop
test
or
das
lahf
fldt
flds
scas
cmpsl
and
jmp
outsl
aas
mov
loopne
mov
lret
rorl
mov
and
dec
mov
jae
adc
add
sub
or
sarb
icebp
mov
sub
pushf
and
subb
sbb
test
sbb
add
pusha
adc
scas
jle
mov
add
push
sub
lcall
in
jge
sub
push
clc
dec
or
push
inc
xor
mov
loope
scas
std
or
pop
lods
aad
fisubrl
mov
loopne
lods
mov
pop
mov
and
cmp
fwait
or
and
pop
popf
lea
and
jae
daa
clc
mov
mov
pop
adc
adc
and
xlat
push
fcomi
pop
dec
jo
into
jg
call
std
out
push
sub
aad
inc
scas
out
cmc
jae
dec
movsl
jecxz
inc
sahf
lcall
xlat
and
pop
mov
es
pop
jbe
xchg
mov
pop
jnp
jno
or
pop
hlt
and
enter
aas
push
int3
lds
jecxz
popl
lods
iret
sbb
jl
push
jle
sar
xorl
jmp
inc
sub
xor
or
jb
testb
cld
js
loop
inc
mov
sub
inc
mov
xor
ret
inc
pop
xchg
push
xchg
hlt
movsb
and
repz
or
and
mov
dec
popf
jg
push
sbb
ret
inc
iret
xchg
cs
dec
add
mov
mov
ljmp
test
subl
iret
lret
mov
jmp
aam
int
stos
jbe
pop
jbe
xor
shl
inc
jno
jp
shll
push
sbb
mov
xchg
jb
cwtl
push
out
movsb
adc
repz
and
mov
mov
inc
scas
cmc
sbb
rolb
inc
rep
fcomps
out
push
ljmp
mov
mov
das
dec
jne
int
in
loop
push
or
jo
data16
pop
lods
push
fistl
adc
pop
adc
xchg
scas
cwtl
xor
fmull
xchg
inc
jmp
stos
loope
push
pop
adc
leave
pusha
int
ljmp
or
leave
fldl
mov
fistps
lds
and
loopne
les
int
addb
xchg
sbb
je
dec
mov
jp
mov
or
or
jnp
ss
aad
stos
xchg
repz
xchg
dec
or
sar
add
iret
std
and
cmp
jg
shrb
sub
add
aas
ljmp
bound
push
pop
repnz
dec
jno
frstor
aam
mov
pusha
sbb
lods
xchg
leave
lods
or
mov
adc
fs
fcmovbe
int3
out
push
ljmp
ljmp
mov
push
push
xchg
mov
stos
push
std
std
lcallw
jo
fidivrl
sbb
sub
mov
mov
out
adc
ss
adc
or
scas
stc
scas
or
or
xchg
arpl
cmp
mov
or
jo
jecxz
xor
subl
mov
push
jo
or
add
dec
movsb
hlt
push
lret
adc
pop
repnz
jecxz
mov
dec
or
pop
iret
inc
outsl
sub
out
jnp
mov
ror
adc
repnz
aam
outsl
push
leave
xor
mov
dec
call
push
sub
lods
clc
fs
insl
ret
or
mov
jo
test
mov
popf
add
or
pusha
or
das
xor
mov
cmp
or
cwtl
xor
dec
sbb
jb
aaa
xchg
push
in
jns
sbb
pop
dec
mov
dec
in
ljmp
and
or
mov
lock
in
lock
sub
clc
ljmp
lods
jo
fcoms
mov
pop
mov
xor
cmpsl
cmc
jg
call
fwait
shrb
rclb
outsl
or
mov
pop
in
mov
mov
xor
or
leave
loope
cwtl
dec
cmp
outsl
lret
sub
in
notl
or
mov
mov
mov
push
cmp
out
mov
insl
into
and
cmp
movsl
or
fistps
lea
pop
and
sub
mov
lock
shrl
sbb
cmpsl
xor
push
int
jecxz
or
mov
adc
or
les
std
cli
sbb
dec
movsl
cmp
popa
mov
nop
adc
dec
cmp
jbe
dec
mov
or
decb
push
cwtl
adc
push
mov
ljmp
pop
push
mov
sub
incl
in
inc
or
mov
cmp
fsub
add
add
push
nopl
ss
inc
cmpsl
pop
popa
inc
jp
xor
mov
lcall
pop
xor
cmpsl
int3
xor
adc
mov
aad
pop
pop
ret
fildl
xchg
inc
mov
mov
jno
mov
fucomi
cld
and
cli
adcb
push
int
jnp
sti
inc
jns
sahf
sbb
ja
add
mov
pop
leave
into
lret
sbb
mov
push
mov
data16
lret
or
fbstp
jmp
dec
cmp
ja
sub
imul
lock
iret
mov
cmp
shrl
scas
adc
mov
xor
mov
je
hlt
in
jp
xor
jge
push
int3
mov
call
mov
push
std
ja
mov
sbbb
add
ret
push
and
pop
loope
pop
push
in
mov
cs
out
popa
aas
sarb
dec
xchg
mov
movsl
ss
push
lret
nop
loop
mov
mov
out
lcall
pop
push
or
in
pop
push
or
pop
es
ss
in
test
hlt
je
dec
sti
add
and
fbld
sbb
leave
pop
shrl
add
dec
sarl
or
je
lahf
mov
or
add
stos
ljmp
cltd
out
lret
rclb
push
mov
fildl
ss
and
or
stc
mov
lahf
cmp
mov
icebp
pshufw
pop
loopne
or
cltd
cli
cmp
int3
mov
aas
dec
lahf
xor
push
sub
imul
jmp
sub
std
icebp
std
inc
jp
or
adc
mov
rorl
icebp
mov
rclb
sub
mov
push
inc
into
mov
out
pop
mov
std
cli
add
or
mov
je
pop
in
decb
lods
lret
dec
int3
sbb
imul
les
jl
in
lret
dec
jae
pop
fstpl
dec
push
pop
mov
iret
ljmp
sub
jns
jecxz
add
pop
cmp
sbb
dec
rcrl
mov
out
mov
dec
jae
pop
scas
fsubs
mov
sbb
mov
negl
or
ja
mov
adc
jle
xchg
into
dec
pop
jge
dec
fs
jp
or
enter
push
push
adc
pop
dec
xchg
push
sub
xchg
popf
ret
adc
outsb
lret
jge
lret
fstl
sub
push
mov
cli
lds
mov
push
bound
dec
jnp
insb
arpl
jp
push
dec
into
or
mov
push
lds
xor
mov
cs
cmp
rcl
mov
mov
xchg
insb
sbb
push
xor
pop
out
dec
xchg
rclb
xchg
and
xlat
sahf
mov
mov
call
aam
in
xchg
inc
int
shlb
dec
test
cmp
out
push
mov
adc
adc
pop
cmp
pop
fcmove
sub
jno
int
mov
mov
jnp
sbb
adc
sub
or
inc
call
aad
les
and
inc
jmp
adc
push
dec
mull
aam
sbb
dec
xchg
mov
jmp
loopne
mov
stos
pop
lods
stc
xchg
ss
adc
pop
adc
fs
lret
push
into
call
inc
lea
sbb
sub
adc
gs
lret
lock
dec
fisttpl
lret
subb
out
aas
das
mov
arpl
sub
dec
pop
jnp
dec
sti
sub
sub
imul
daa
loopne
mov
mov
iret
cmpsl
fisubl
dec
pushf
adc
inc
cmp
mov
mov
out
adc
ret
or
jge
pop
mov
insl
lahf
push
sarl
pop
dec
push
fstl
flds
mov
dec
mov
out
leave
dec
fmul
lods
add
inc
push
xchg
je
push
addr16
bound
inc
dec
push
out
inc
int
and
sbb
push
mov
ja
rcr
sub
scas
jo
outsl
hlt
sti
imul
aas
ljmp
push
pushf
repz
lcall
or
ds
pop
das
popl
or
mov
cmpsl
repz
rorl
mov
lret
dec
std
negl
outsl
dec
rcrb
iret
jge
jbe
inc
dec
mov
mov
dec
and
sub
fcompl
add
and
dec
mov
out
test
pop
pusha
adc
push
and
es
clc
aas
int3
xchg
clc
adc
adc
fstpt
jecxz
and
aam
in
mov
push
aas
js
pop
scas
in
cmp
cmp
leave
imul
xchg
scas
pop
lcall
add
arpl
test
push
xor
push
or
movsl
jecxz
insl
push
cmp
fistl
movsb
cli
xchg
and
dec
in
xor
sahf
dec
inc
fcmovne
fucomp
lock
pop
ficompl
dec
call
or
push
lock
js
lret
adc
in
scas
icebp
roll
dec
bound
or
fwait
enter
rcl
xor
xchg
loopne
in
cmpsl
lods
aad
and
movsb
mov
stos
call
adc
or
and
or
sbb
xorb
mov
inc
ja
sahf
adc
mov
cld
test
sub
out
push
push
in
nop
push
sbb
xor
mov
aas
adc
addr16
fists
mov
pop
das
xor
aad
cmc
iret
xchg
push
jp
and
ret
dec
mov
sbb
pop
pop
fistpl
jmp
shlb
sti
ljmp
jns
addr16
mov
mov
pop
and
iret
je
cmp
dec
pop
add
stos
push
xchg
or
xor
test
fnstcw
add
js
sub
add
cltd
dec
jb
push
mov
in
sub
test
lret
mov
xlat
ficoml
dec
add
sub
nop
dec
fs
and
loope
out
mov
jp
leave
bound
pop
lods
jp
stos
mov
lock
cld
hlt
dec
and
nop
mov
pop
mov
push
pop
imul
cli
mull
sbb
mov
xor
das
mov
or
in
sbbb
mov
xor
lcall
ret
jp
pop
aad
and
xchg
push
inc
mov
movsb
fnstcw
push
push
test
pop
mov
and
fcomip
pushf
jbe
das
clc
js
xchg
int3
leave
ficompl
fs
cmpsl
and
daa
lahf
mov
push
or
pop
cmp
fs
mov
inc
or
cmp
test
push
dec
cmpsl
xchg
xchg
loope
fsubl
addr16
xchg
fs
dec
aam
bound
out
jo
push
mov
cmpb
inc
push
clc
adc
icebp
adc
dec
lret
fcompl
push
cmp
jecxz
jecxz
mov
inc
in
sbb
inc
and
mov
adc
sub
cmp
ljmp
sbb
push
add
lahf
adc
es
mov
and
push
nop
inc
sub
cmp
out
push
sbb
sarb
mov
mov
adc
xchg
lcall
mov
and
mov
xchg
mov
adc
inc
xchg
or
jns
stos
pop
dec
push
and
xchg
adc
cmp
or
iretw
or
push
mov
or
fldt
aam
pop
pop
pop
jmp
gs
mov
daa
ljmp
mov
fdivl
jbe
fidivl
out
clc
or
adc
pop
pop
fcmovbe
iret
and
sbb
scas
jg
insl
pop
ror
fimuls
fsts
int3
insl
mov
shll
ret
shlb
ljmpw
ds
xor
sahf
fstps
decl
xlat
xor
or
bound
shl
sub
jl
adc
out
cmpsl
mov
cwtl
mov
push
dec
mov
js
or
mov
test
and
jge
div
int
rorl
sbb
sarb
push
pop
adc
dec
push
add
mov
push
ds
cli
cltd
cwtl
xchg
dec
push
xchg
sbb
xchg
xor
sub
mov
dec
and
call
out
rorl
test
stos
push
or
ret
pop
adc
hlt
xor
push
sbb
add
scas
stos
push
xchg
cmp
mov
xorl
xor
fcoml
test
out
cmpsl
fisubs
xchg
int3
adc
lret
cmc
lods
push
fistl
or
fidivrs
lock
aad
fcompl
pop
cmp
lds
lock
outsb
ljmp
aad
pop
orl
test
por
scas
sbb
xchg
pop
push
mov
iret
cmp
push
dec
xchg
rclb
cltd
jns
adc
adc
and
lods
into
cmp
adc
jle
jecxz
sub
or
pop
insl
pop
mov
and
fdivr
push
mov
out
iret
or
pop
dec
mov
ret
movsl
inc
sbb
cvtpi2ps
decb
push
rolb
fsts
fidivl
lds
lret
or
les
or
jbe
add
lds
pop
fcom
leave
leave
adc
xchg
lea
ret
mull
mov
stc
loopne
mov
add
iret
sub
dec
mov
fadds
mov
dec
movsl
mov
mov
gs
paddd
andb
test
loopne
jg
cld
pop
adc
xchg
daa
popa
inc
pop
jle
movsb
adc
dec
jg,pt
icebp
push
and
or
or
fdivl
adc
mov
jo
pop
imul
xor
xchg
add
or
and
push
jge
xlat
dec
push
dec
daa
out
xchg
hlt
xor
jno
sahf
push
adc
xchg
sbb
jle
sbb
jb
cmp
pop
cli
ret
aaa
sbb
adc
icebp
negb
mov
nop
out
cli
fsubrl
xchg
push
repz
adcl
das
hlt
in
add
inc
xchg
aam
mov
adc
xor
add
cli
push
sti
in
inc
mov
ds
jmp
ljmp
push
daa
ljmp
ds
cld
aad
xor
adc
mov
fcmovne
mov
out
xchg
enter
out
mov
jb
xchg
mov
rcl
push
test
jb
sub
jle
cld
xor
cld
xchg
xchg
push
cmpb
stos
dec
shll
adc
loope
fcmove
mov
inc
jbe
fldt
ss
ds
daa
and
mov
adc
fwait
in
mov
xchg
mov
dec
arpl
mov
mov
xchg
lock
pop
mov
push
sti
sub
jp
fisubl
das
mov
push
fisttpl
and
notl
int3
push
aas
xor
mov
push
jne
dec
pop
fwait
xchg
jb
xor
stos
gs
out
mov
jnp
push
mov
xchg
push
aad
cmc
jmp
or
outsb
hlt
movsl
xchg
pop
add
out
cmpsb
xchg
out
adc
pop
pop
inc
test
cmp
shll
add
mov
and
push
pop
xchg
nop
xchg
std
leave
mov
add
out
nop
test
mov
bound
jne
xchg
ret
lods
mov
sahf
lret
push
lods
jle
add
push
iret
mov
adc
push
xlat
mov
mov
push
add
aad
pop
fmul
jge,pn
xchg
int
out
jl
mov
or
pop
jmp
subl
add
outsb
mov
aas
jge
xchg
nop
daa
or
subb
ja
or
cmp
into
pop
mov
clc
aaa
ja
sbb
fstps
out
lds
dec
scas
scas
loopne
scas
bound
mov
xchg
fbld
lods
fcmovbe
and
mov
push
mov
push
push
jnp
into
scas
jno
inc
mov
mov
push
push
bnd
leave
or
adc
cmp
sbb
rcl
pop
xor
dec
repnz
pop
push
push
pop
mov
sbb
lea
or
out
fst
adc
fidivrl
mov
std
and
adc
adc
mov
adc
mov
xchg
shr
jo
ret
aas
orb
adcl
iret
jno
test
lcall
in
fmul
repnz
scas
dec
adc
mov
mov
adcl
jne
ja
push
adc
cmc
lret
sub
xchg
lods
adc
sbb
fstpt
repz
push
dec
orb
dec
ficoms
inc
push
pop
mov
mov
ljmp
repnz
cmp
adc
loopne
clc
pop
jnp
les
cmpsl
pop
jmp
mov
loope
sub
out
movsl
gs
dec
popa
repnz
jge
icebp
enter
idivl
cwtl
sbb
or
cmp
push
loope
out
cltd
or
mov
movsb
xor
xor
pop
ss
sbb
dec
fistpl
in
test
fistpl
into
shr
mov
xchg
pushf
push
xorb
xchg
jecxz
push
lret
jb
out
mov
popf
scas
cli
outsl
sub
or
aas
dec
inc
into
cwtl
test
lea
out
push
leave
fwait
movsb
stos
movb
adc
das
jge
clc
adc
jl
out
dec
sahf
scas
in
jbe
scas
rcrl
sub
push
out
ljmp
ljmp
leave
inc
out
push
dec
xchg
pop
in
add
cltd
jbe
divb
and
movsl
adcb
jno
push
pop
mov
cmp
out
jecxz
xchg
movsl
stos
push
mov
mov
cmpsb
out
fisttpl
sub
and
addr16
or
fstps
push
push
xor
inc
jns
and
push
cli
xor
sub
cmc
in
jnp
mov
mov
sub
mov
jo
jp
push
xchg
loop
loop
dec
mov
roll
mov
xchg
icebp
pop
rep
lcall
adc
push
iret
popa
xchg
dec
pop
enter
xor
xchg
and
iret
inc
imul
add
clc
inc
iret
shll
cmc
mov
sub
dec
push
daa
jno
movsl
nop
pop
lea
pop
pushf
jmp
and
xchg
loope
lret
out
dec
imul
inc
jge
xchg
repz
pop
sub
jbe
popa
js
mov
mov
cmpsl
push
int
xor
call
jmp
inc
mov
sub
xchg
fcmovnbe
push
pop
rcr
divb
sbb
push
rorb
into
test
add
or
add
push
mov
cmp
stos
adc
pusha
cli
cmc
test
dec
cli
std
and
imul
lahf
or
jmp
adc
pop
lods
sub
mov
xchg
scas
xor
adc
es
or
pop
dec
adc
cli
inc
fldt
sbb
mov
adc
add
insb
sbb
add
aas
sbb
push
testl
out
inc
loop
cmp
pop
add
push
pop
mov
repnz
adc
push
cld
sub
push
pop
push
and
and
pop
js
xchg
aaa
mov
das
dec
clc
sub
shll
jbe
jp
xor
inc
or
fcoms
fwait
xchg
push
push
mov
int3
bound
mov
mov
sti
aas
mov
pop
pusha
sbb
lock
and
dec
iret
and
stos
mov
sbb
je
push
cmp
stos
jle
aad
jge
push
add
mov
fsubr
out
push
jb
pop
mov
out
or
xchg
sub
bound
mov
scas
lahf
xchg
and
pop
scas
jp
out
pop
mov
loop
pop
movsl
es
ss
nop
int3
inc
loope
arpl
test
pop
push
xor
or
dec
inc
xor
stos
ljmp
dec
or
fcmovb
push
or
push
fidivl
clc
xchg
addr16
and
sti
lods
or
popf
insl
and
mov
pop
dec
je
gs
adc
in
push
sub
or
and
xorb
mov
sbb
mov
sbb
cmp
jg
cld
or
imul
std
xchg
sbb
imul
adc
sub
pop
jae
mov
int3
in
dec
pop
jb
mov
add
xchg
aaa
xor
call
push
outsl
adc
int3
jae
mov
mov
mov
popa
adc
sti
sub
mov
push
lods
cmp
ficoml
adc
inc
jl
pop
insl
adc
out
jmp
pop
fldcw
and
adc
xchg
push
imul
repnz
and
sti
test
je
outsb
jge
ja
jp
lret
sub
mov
pop
mov
sahf
stos
cmpsl
sahf
inc
sub
mov
nop
or
sub
dec
or
arpl
sbbl
pop
pushl
mov
dec
sbb
push
sub
pop
sub
hlt
push
sahf
mov
add
jmp
nop
push
mov
dec
loopne
sbb
psubusb
daa
xchg
or
cs
add
sbb
xchg
inc
lret
pop
sti
adc
lret
pop
pop
cmp
mov
stos
dec
scas
sbb
out
outsl
lock
xor
lock
pop
xor
sbb
sub
cwtl
adc
stc
jno
mov
or
addr16
and
jp
lods
aaa
clc
mov
and
out
stc
add
dec
aam
dec
std
outsb
or
sub
push
rorl
dec
push
or
mov
imul
paddd
mov
pop
mov
cmp
stc
pop
test
lret
call
xchg
sbb
leave
fidivl
and
leave
push
sub
or
sbb
and
std
push
data16
cmc
mov
insl
mov
insl
push
cmpsl
adc
sub
pop
push
stos
push
cwtl
cltd
and
inc
int3
xchg
inc
enter
lea
ljmp
in
lret
push
jge
arpl
scas
or
stos
push
mov
push
jle,pn
iret
jge
scas
in
test
jnp
xchg
subl
cli
mov
and
sti
xor
sub
std
dec
mov
repz
jecxz
jecxz
jmp
popa
mov
jl
int
mov
mov
lea
loop
repnz
push
dec
flds
xchg
fdivr
call
lods
pusha
ds
xchg
jmp
jecxz
inc
pop
xor
mov
push
out
jecxz
push
push
add
fwait
shlb
addr16
mov
inc
dec
outsl
jecxz
fstp
push
ds
pop
repnz
out
dec
adcl
push
or
mov
cmp
fildl
add
imul
push
mov
pop
dec
es
pushf
xor
aas
pushf
aad
lea
xlat
inc
stos
data16
mov
and
lret
adc
out
add
push
dec
dec
sarl
xchg
popa
xchg
pop
mov
sti
stos
dec
sti
mov
mov
or
jp
sbb
mov
or
xor
fimuls
dec
into
jge
xchg
xor
mov
fmul
mov
jns
or
imul
loop
push
inc
in
ficompl
fldl
rep
pop
inc
xchg
mov
mov
out
sub
insl
push
mov
mov
sbb
sub
push
mov
add
fstps
sbb
rcrb
jge
pop
push
sbb
xorb
jl
jo
adc
imul
mov
ss
aas
jecxz
xchg
sbb
repz
xor
inc
mov
scas
fisubs
adcb
pop
das
imull
cmpsl
adc
push
jge
imul
pop
sub
mov
adc
in
sub
lcall
push
jmp
aam
mov
xchg
cmc
jae
std
loop
andl
out
pop
lret
and
pushf
push
leave
popf
pop
sbb
in
stos
leave
outsb
mov
xor
leave
xchg
mov
dec
mov
push
insb
or
xchg
fs
mov
mov
jp
aaa
popa
mov
and
adc
xchg
imul
stos
xchg
dec
les
stc
pop
jl
mov
xchg
int3
lock
push
out
jmp
ds
sub
cld
jge
cwtl
fwait
pop
add
lret
cmp
push
lods
push
dec
inc
and
adc
jae
or
in
or
adc
inc
xor
push
push
sar
xchg
std
cmp
js
out
movq
push
dec
mov
int3
and
sbb
repz
sti
fdivr
das
push
mov
pop
mov
xchg
cs
imul
aam
sub
pop
les
andb
out
out
decl
mov
ss
mov
xchg
je
jl
jge
mov
and
push
aas
mov
scas
push
pushf
inc
pop
and
push
or
rorl
adc
mov
pop
ljmp
adc
fdivl
mov
jns
lcall
aad
movsb
test
mov
or
or
jmp
mov
ds
es
sbb
mov
dec
jecxz
adc
jno
sbb
pop
sbb
dec
xor
dec
int3
push
adc
jge
push
and
pop
fmul
loope
mov
out
or
sbb
cmp
xchg
jne
push
pop
push
mov
adc
outsb
iret
xor
adc
je
ja
cmpsb
dec
scas
cltd
sbb
fs
lds
lea
rcr
mov
dec
rep
mov
mov
adc
scas
arpl
jp
mov
inc
imul
mov
sbb
adc
out
xor
icebp
cmpsb
xchg
pop
xchg
mov
sbb
jmp
shlb
fimull
sub
faddl
inc
add
int
dec
rorl
rclb
movsb
test
lock
das
push
add
lcall
jnp
div
mov
push
xchg
ds
pop
cmp
ss
stos
sbb
sbb
fdivrs
add
adcb
lret
lods
loop
jle
int3
bound
xchg
outsb
cltd
add
xchg
pop
lret
ret
mov
jp
add
fsubp
jb
cmp
adc
xor
jmp
int
sbb
xchg
inc
imul
ljmp
sub
and
or
lods
add
js
jo
xor
adc
pop
orb
push
lret
mov
imul
jp
sub
fnstsw
and
xchg
in
shll
mov
bsr
dec
in
sub
call
adc
sub
push
cld
push
iret
cmp
push
push
mov
sbb
push
xchg
sbb
out
mov
int
imul
push
or
fsubl
fdivs
sahf
inc
mov
aaa
sbb
xchg
bound
push
stos
mov
pop
js
test
pop
cmp
xchg
xor
ljmp
dec
pop
lret
inc
and
mov
pop
popf
in
cmp
aas
push
mov
push
sbb
mov
jg
arpl
adc
rep
lahf
mov
into
btcl
xor
bound
xor
fisubrl
jmp
and
pop
dec
mov
mov
dec
xor
cmp
ds
mov
xchg
pushf
ljmp
push
lods
out
in
repnz
imul
int
and
jg
cmpsl
jmp
fldcw
mov
test
push
pop
and
cmp
jo
mov
cmp
mov
xchg
mov
iret
clc
dec
jg
cmpsb
jecxz
push
inc
int3
jge
mov
dec
out
hlt
pop
sbb
jno
loopne
push
adc
push
out
jae
or
xor
jo
sbb
pop
arpl
ja
pop
pop
jmp
sbb
bnd
push
pop
dec
ds
fdivrl
gs
push
scas
pop
push
mov
xchg
std
pop
dec
mov
gs
cld
xchg
outsb
sbbb
pop
pop
ret
cmp
jmp
loop
pop
insl
jge
xor
sbb
xor
dec
pop
bound
scas
hlt
cwtl
dec
sbb
in
int
add
jmp
cld
mov
adc
jp
sbb
mov
iret
roll
pop
adc
stc
test
cmp
fists
or
cltd
inc
jmp
push
ljmp
mov
adc
or
data16
out
xchg
out
xor
mov
out
sti
pop
aad
faddl
sub
testl
fs
mov
test
sub
lahf
std
jmp
data16
jmp
fsubr
mov
mov
add
xchg
int
into
mov
test
ss
adcb
mov
mov
push
sahf
push
jno
mov
rorb
push
adc
mov
ljmp
dec
cld
mov
jmp
lods
mov
push
loopne
sbb
sti
in
shrl
push
daa
into
cmp
inc
fbstp
faddl
xor
jmp
shll
xlat
lret
pop
adc
xor
pop
pop
in
add
mov
pop
int
mov
add
pop
aam
out
jo
jne
fprem1
push
jmp
mov
rcll
sub
push
in
cltd
adc
mov
fisttpll
ffreep
and
cli
jmp
or
push
insb
imul
sarb
xor
divl
jns
pop
dec
xlat
call
insl
mov
lret
or
out
dec
in
cli
jbe
int3
lret
pop
lret
sub
stc
cmpsb
mov
cwtl
mov
xor
fcmovne
push
cmc
pop
pop
sti
inc
addr16
test
stos
push
aad
cli
add
dec
ficoms
pop
lods
stos
fistl
fdivrp
cltd
mov
in
movsl
ljmp
jne
or
fcomp
lds
leave
sub
fpatan
pop
adc
pop
push
hlt
add
jmp
jno
decb
or
sahf
push
iret
fistps
insb
into
leave
cmp
jns
std
lock
or
cwtl
dec
rcrb
jle
mov
sti
push
pop
cmp
rorb
int
sbb
pushf
hlt
lahf
sbb
ljmp
mov
pop
push
js
mov
mov
rcrl
xchg
ret
dec
clc
push
jb
in
addr16
inc
sbb
add
add
addr16
stos
lret
jmp
mov
or
mov
sbb
sti
push
xchg
and
cmp
mov
mov
inc
outsb
fcompl
dec
lods
mov
pop
or
iret
andl
xor
lods
dec
sar
inc
jo
pop
je
dec
fnstcw
jno,pt
fildll
mov
jns
punpckhdq
fs
sub
fdivl
or
shr
sub
jecxz
jae
or
jmp
stc
imul
cltd
fxam
xor
push
adc
mov
jne
mov
mov
in
add
aam
jg
adc
cmp
cli
fimuls
push
inc
stos
pop
es
cli
fdivrl
cmp
dec
sbb
mov
jp
lret
and
xlat
xlat
sbb
mov
loop
int3
iret
popf
jp
cmp
push
aad
test
fcompl
adcb
mov
repnz
pop
sbb
pop
ret
addr16
adc
dec
or
push
jb
loope
dec
jp
dec
cld
jg
push
or
or
adc
jb
fidivrl
test
dec
rep
cmp
iret
outsl
xchg
sub
push
push
add
sbbb
or
mov
dec
sbb
mov
out
stos
adc
fcoms
data16
push
rorb
and
push
cltd
push
js
fadds
and
xchg
lcall
sub
mov
or
jae
push
mov
mov
outsl
aas
out
stos
pop
scas
scas
sub
das
xchg
sbb
jge
push
or
push
xor
adc
or
and
imul
mov
inc
inc
popl
mov
and
cmp
pop
ds
pop
out
dec
push
mov
mov
pop
stos
adc
pop
jl
dec
mov
xchg
jmp
aam
les
mov
sbb
stos
pop
call
lret
mov
aas
mov
xlat
sti
cwtl
xor
scas
adc
jnp
fwait
push
lods
pop
insl
xlat
pop
pop
jae
lock
cld
mov
dec
pushf
pop
inc
dec
imul
in
pop
push
xchg
ficoms
rcll
or
aam
pop
and
push
mov
dec
or
add
outsb
mov
add
sub
sbbb
dec
mov
cli
xchg
mov
jb
cs
test
or
out
out
scas
mov
jecxz
ret
pop
xchg
pop
sub
stos
cwtl
adc
and
daa
ljmp
loop
pushf
fsubrl
cld
pop
cld
out
pop
pop
paddb
pop
lock
push
mov
psubw
mov
ss
paddsb
iret
stos
shl
in
push
pop
movsl
cli
cmp
int3
and
lret
pop
cmp
pop
imul
fwait
mov
js
jge
mov
ss
mov
sub
jbe
pop
dec
cwtl
imul
mov
sti
adc
roll
fcompl
gs
fidivs
cld
out
mov
xor
outsl
jp
dec
cmp
insl
add
and
scas
and
sub
outsl
imul
aaa
stos
sti
jp
jb
and
fdivrs
and
inc
xchg
movsb
xor
mov
xchg
or
dec
sbb
fildll
out
lock
stos
pop
mov
cltd
dec
dec
fimull
jo
pop
sbb
lret
inc
and
cvtsd2ss
scas
xor
dec
dec
inc
sbb
clc
sbb
aas
adc
aad
jnp
pop
ror
add
std
outsb
pop
push
iret
stos
pop
out
mov
lods
ljmp
pop
cltd
popf
inc
mov
xor
in
rorb
mov
jl
lods
mov
js
push
push
sbb
fimull
aas
jno
loopne
icebp
mov
adc
sub
scas
loop
add
fadds
movsl
sub
inc
or
xor
in
pop
xor
arpl
jecxz
je
sbb
cmp
sub
ret
xor
into
lock
ficoms
push
pop
adcl
fwait
dec
and
fisttpl
or
cltd
je
popa
mov
or
out
int3
lods
or
inc
sbb
and
inc
push
pop
notl
dec
int3
sbb
jb
fnstcw
mov
pop
cltd
in
cwtl
mov
std
call
inc
pop
adc
insl
pop
sbb
cmpsb
jle
mov
xchg
pop
pop
dec
out
fistpl
push
pop
lcall
push
dec
fcoms
dec
aas
push
xor
mov
mov
int3
mov
sbb
cltd
push
mov
sub
mov
push
dec
jp
push
xchg
fimull
xchg
mov
pop
pusha
mov
int
sbb
and
push
xchg
adc
cmp
mov
lock
xor
jns
test
pop
jne
add
pavgw
add
xor
jbe
cmp
inc
daa
or
shrb
mov
insb
or
dec
das
ljmp
jnp
cld
mov
cmp
jp
sbb
mov
gs
sbb
int3
cwtl
dec
movsl
xor
sahf
lahf
addb
das
aaa
enter
sbb
fistl
cli
cltd
xchg
pop
add
mov
cli
mov
add
dec
dec
mov
jp
xchg
orl
xchg
mov
sahf
or
fstl
jle
pop
inc
mov
jecxz
icebp
mov
push
dec
stc
mov
clc
push
dec
into
mov
roll
scas
lahf
enter
adc
inc
mov
cmp
es
lret
daa
ss
ljmp
idivl
sbb
add
mov
nop
aaa
pop
sbb
fistpl
sti
adc
xlat
xor
add
incb
xchg
testl
loope
add
sbb
lods
ror
por
sbb
rcrl
in
lcall
je
pop
cmp
out
cmp
fmull
test
into
jmp
jecxz
dec
jle
decb
cwtl
sub
pop
jg
icebp
sub
sbb
fimull
mov
dec
pop
int3
lods
and
add
sub
fimull
cli
cs
idivl
fcompl
les
shlb
or
lock
mov
fsubl
push
and
ds
mov
subb
fistpll
or
jl
xchg
sub
pop
or
push
dec
fidivrs
in
int3
rorl
sbb
xlat
rcr
mov
add
ljmp
repz
mov
fcomip
inc
dec
sbb
out
jne
vsubsd
sbb
nop
subl
push
inc
jp
arpl
cmp
jmp
stc
pop
loopne
xchg
shl
dec
cli
push
sti
cmp
xchg
mov
adc
dec
gs
add
loope
mov
movsb
jmp
jmp
frstor
push
mov
aam
jecxz
inc
adc
mov
mov
jp
and
mov
je
mov
push
ds
sbb
repnz
jecxz
call
mov
jmp
mov
push
adc
push
add
sub
cld
jmp
mov
pop
xor
gs
std
out
mov
fistpll
rcr
shlb
mov
adc
jb
cmp
loop
and
idivl
gs
in
pop
stos
ljmp
push
sub
out
push
inc
push
mov
and
xor
test
les
stos
push
xor
mov
dec
cs
hlt
push
pop
jns
pop
pop
cmpb
mov
dec
aam
lock
fimull
adc
sahf
pop
test
mov
fisubs
lcall
dec
sub
push
xchg
into
cmpsb
dec
stos
adc
rcrb
mov
leave
mov
cltd
inc
out
cmpb
popf
xchg
pop
lock
or
ficompl
add
daa
jle
mov
cltd
mov
popl
inc
dec
jnp
fnstsw
test
pop
xchg
inc
sti
push
mov
push
xor
pop
call
and
push
int3
daa
gs
or
int3
push
fistpl
cmp
xor
ficoms
lret
cmp
dec
adc
xchg
mov
loop
jb
mov
inc
popf
shll
repz
lea
fisttpl
adc
cmpb
jmp
sbb
sbb
push
into
inc
add
pop
sub
std
add
in
mov
or
push
data16
outsl
jp
std
pop
cmpsl
or
mov
pop
push
cmp
add
adc
dec
dec
inc
fisttpl
repz
js
or
lock
cs
lret
fildl
mov
hlt
dec
imul
fimull
out
addr16
push
push
jp
xchg
daa
mov
push
mov
sub
out
stos
jge
lea
lea
loopne
xor
scas
adc
ss
clc
add
cmp
idiv
aas
add
dec
mov
lret
shll
sti
push
popa
jnp
dec
or
clc
mov
lret
push
mov
jnp
int
testb
scas
mov
fwait
xchg
or
mov
push
push
orb
sbb
lret
cmp
mov
push
mov
fistpl
sahf
lret
xchg
push
mov
jbe
adc
sbb
cli
ss
jb
pop
mov
scas
dec
js
clc
and
out
ljmp
xchg
pop
or
or
dec
mov
jne
fwait
add
icebp
mov
push
int
int3
into
sub
stos
mov
fistl
xchg
jecxz
aam
cld
out
push
push
cmp
fiaddl
jmp
adc
out
xchg
mov
sub
jge
cmp
xor
pop
rorl
cs
ds
imul
mov
or
cwtl
bound
jmp
insb
dec
stos
mov
mov
pop
lods
jecxz
cwtl
push
in
sbb
pop
lods
jecxz
cltd
pop
mov
xor
pop
or
push
es
jmp
push
rorb
mov
dec
mov
in
jns
jmp
adc
ja
jp
out
adc
mov
xchg
pop
repz
rorb
dec
lcall
dec
lret
dec
repz
fldenv
fldt
jl
push
cmp
dec
sub
pop
xor
int3
jnp
xchg
cli
lcall
mov
push
fwait
int3
scas
adc
mov
out
xchg
insb
jbe
dec
jg
jle
jb
xchg
or
repz
outsl
push
cli
out
arpl
xchg
or
dec
xchg
jecxz
in
inc
fs
mov
mov
dec
adcb
jne
lret
adcb
jne
dec
adcb
jne
push
sub
int3
xlat
in
lcall
xchg
adc
push
out
aas
adc
or
mov
enter
mov
pushf
adc
cmp
ficompl
imul
pop
inc
add
rolb
nop
aas
out
push
ficoml
fisubs
cmp
test
icebp
cmp
fcmovnb
ljmp
xor
xchg
lret
push
pop
xchg
xchg
scas
pop
cmp
inc
jle
or
pshufw
xchg
pop
dec
out
push
push
or
mov
xchg
sbb
mov
xchg
in
xchg
push
notl
dec
movsb
or
dec
idivl
sti
in
jl
sub
sub
inc
stos
inc
mov
lods
fdivp
push
rcrb
in
sbb
dec
mov
push
fnstcw
or
mov
leave
inc
jbe
leave
xchg
rcl
sub
scas
call
push
sub
dec
clc
into
mov
imul
or
add
mov
int3
aam
mov
js
mov
and
in
inc
or
cwtl
sbb
inc
sub
push
cltd
lcall
pop
enter
ljmp
fildll
or
inc
pop
enter
lret
popf
sub
ja
push
or
loop
mov
insb
and
dec
mov
cwtl
push
lcall
jns
mov
bound
pop
test
and
psubsb
jl
push
xor
insb
mov
lret
ja
xchg
pushf
mov
sub
inc
or
push
loop
mov
push
or
xchg
mov
inc
inc
pop
imul
popa
mov
dec
sbb
push
aaa
pop
add
mov
out
dec
jg
mov
je
pop
jno
push
outsl
lds
cli
mov
jnp
cwtl
rorb
imul
ss
loop
pop
int3
and
mov
lcall
mov
out
push
cwtl
ja
adc
jge
mov
xchg
cwtl
mov
std
scas
jns
das
add
scas
enter
les
leave
mov
cli
xlat
mov
out
imulb
sub
int3
loop
mov
negl
push
dec
div
cmc
cmc
mov
adc
mov
or
insb
testl
push
cmp
shlb
pop
lahf
in
and
push
jo
pop
pop
push
dec
sbb
or
sbb
sbb
mov
jo
pop
cmp
mov
jmp
mov
ja
xchg
or
loopne
pusha
sub
sub
mov
xor
das
pushf
push
sub
lcall
nop
int3
ret
dec
scas
iret
and
lds
mov
push
pop
xor
dec
jp
xchg
repnz
jo
xchg
out
mov
sti
fadds
into
inc
dec
popa
jo
repnz
fstps
jmp
fdiv
bnd
push
add
push
dec
mov
or
pop
jecxz
adc
fisttps
lea
add
sbb
jge
xchg
fwait
mov
in
cltd
dec
sub
rcr
inc
mov
push
in
pop
or
outsl
lods
push
mov
cmp
fstps
outsb
sbb
scas
cli
outsl
push
je
loop
lods
bound
xor
mov
push
pop
cmp
pop
iret
and
scas
adc
das
aas
mov
push
outsl
insb
movsl
cmpl
mov
insl
jge
xor
cmpb
into
cmp
dec
lahf
rorb
aaa
sti
fcomi
sub
mov
mov
add
imul
add
mov
dec
inc
dec
fstl
bound
pop
pop
loop
imul
sti
ret
push
int3
mov
imul
pop
mov
popf
aam
xchg
dec
xchg
js
jne
int
jmp
sbb
and
mov
xor
popa
popa
push
imulb
int3
fsubp
jns
jg
xchg
out
push
adc
fcmovbe
popf
iret
xlat
movsb
das
iret
scas
lret
push
pop
gs
jge
mov
cmp
lret
jl
pop
ljmp
cs
mov
out
sbb
mov
sub
negb
or
cmc
pop
dec
xchg
cld
int3
xchg
adc
ds
pop
pop
cs
mov
dec
fsubp
or
or
sbb
jp
xchg
lcall
stc
pminsw
or
popf
and
lret
popf
adc
xchg
arpl
fnstsw
mov
sbb
imul
dec
movsl
mov
add
mov
or
mov
pushf
push
cmp
inc
push
dec
push
sub
pop
xchg
inc
aaa
and
lret
jo
pop
rcrl
jbe
in
subb
in
pop
iret
add
push
xor
sti
addr16
shll
pop
int3
fldenv
mov
dec
mov
imul
aad
xchg
data16
mov
cmp
stos
iret
inc
lods
jo
jmp
pop
out
fidivrl
or
sbb
roll
jge
das
out
jnp
pop
pushf
gs
scas
rorb
call
push
loop
mov
mov
xor
or
pop
mov
dec
fnsave
jecxz
dec
lcall
add
ljmp
dec
addb
outsb
dec
add
push
outsb
dec
fcmovbe
push
cmp
shrl
push
divl
lahf
pop
xchg
adc
adc
push
mov
add
jnp
jae
orl
pop
lds
and
add
sub
stos
out
dec
jp
inc
sti
scas
mov
add
and
sbb
outsb
fidivrl
sbb
cs
xlat
out
sbb
outsl
jp
sub
jp
or
sub
dec
mov
mov
or
adc
adc
out
dec
fsubs
popa
push
std
fdivrp
and
xor
cld
out
cld
lcall
jb
pop
outsl
mov
jnp
push
inc
and
jne
pop
cmp
jl
mov
inc
push
sub
mov
mov
dec
iret
mov
fstl
push
dec
stos
adc
std
jge
inc
mov
hlt
js
ljmp
inc
push
dec
mov
xchg
sub
add
adc
in
in
ljmp
scas
lahf
mov
pop
mov
fs
jle
or
adc
push
fwait
pop
sub
jecxz
dec
testb
sti
jb
out
dec
inc
stos
out
popw
shlb
test
push
aas
repz
lret
das
jmp
push
dec
cmp
xchg
or
jmp
cltd
ss
sub
or
call
sbb
dec
push
pop
mov
in
cmp
mov
sub
dec
push
adc
xchg
call
and
dec
ljmp
in
xchg
cmp
fcoml
mov
add
cmc
insl
adc
test
roll
ss
adc
add
stc
mov
dec
addr16
jb
dec
test
cmp
pop
push
inc
mov
shll
push
lahf
adc
hlt
pop
aas
lea
mov
pop
mov
imulb
pop
pushf
cmp
lret
stos
jb
fimuls
arpl
inc
ror
and
mov
cmp
push
cli
stos
std
ss
mov
xchg
ror
dec
arpl
dec
or
aaa
sub
sub
divl
pop
lods
out
jge
int3
mov
into
aas
pop
push
dec
xchg
dec
lahf
dec
push
lods
mov
cmp
test
sub
dec
or
mov
mov
dec
cs
sub
mov
inc
iret
add
fsts
jg
pop
or
out
cli
jb
sbb
mov
insl
xchg
popf
out
mov
cmp
dec
pop
das
fsubrs
iret
and
rcl
in
test
arpl
jp
mul
in
clc
idivb
lea
lcall
outsb
repz
into
data16
imull
in
out
nop
dec
push
mov
jmp
sti
mov
sbb
cmp
lret
mov
out
push
or
pop
dec
push
imul
scas
sarl
pop
and
sub
cld
orl
fwait
sub
mov
jnp
imul
ret
inc
or
sub
push
jno
stos
icebp
mov
lret
addb
out
or
int3
int
in
das
stos
xor
inc
std
es
add
fistpl
insb
mov
mov
sbb
jp
jns
test
insl
jmp
into
sti
mov
mov
sbb
jp
pop
adc
adc
cltd
or
jno
test
jp
xor
outsb
jno
scas
dec
lcall
stos
movl
out
pop
mov
add
loopne
mov
mov
adc
in
jp
and
adc
repz
dec
fisubrs
dec
mov
mov
test
cwtl
add
mov
add
cmp
mov
insl
xchg
mov
adc
rcrl
iret
inc
stc
mov
push
outsl
sbb
fmul
lods
test
in
mov
mov
aad
leave
cmp
mov
pop
push
add
cmp
pop
fwait
les
leave
mov
leave
sbb
outsl
in
mov
pop
fnstenv
mov
cmp
xchg
int
mov
loop
mov
ss
fcomps
and
pop
das
pop
je
hlt
dec
test
dec
fs
mov
ret
mov
push
dec
pop
adc
sbb
push
dec
adc
aad
mov
scas
pop
pop
ret
add
scas
data16
fldt
fcomps
fdivrp
fdiv
and
xor
mov
cs
jmp
jmp
push
in
fsubp
je
outsl
loop
dec
loop
dec
lds
cmpsl
lret
clc
jge
cmp
out
mov
jl
xor
lret
mov
or
cld
ss
lret
and
lret
jo
xchg
sbb
dec
clc
or
lret
adc
sub
in
cmp
int
test
and
mov
or
mulb
dec
sbb
std
iret
leave
xchg
and
sbb
pop
push
imul
inc
fwait
or
sti
out
xchg
ret
mov
dec
sti
xchg
mov
jmp
sahf
xor
mov
push
roll
adc
jge
inc
mov
sti
stc
push
xchg
test
pop
lahf
xchg
mov
and
shrl
adc
cltd
dec
pop
fstpl
out
ljmp
outsb
out
jmp
popf
add
dec
dec
pop
jns
jle
aam
insb
and
fidivl
ss
fcoms
pushf
aad
dec
mov
mov
cld
popa
jo
mov
push
or
outsl
dec
cmc
push
and
in
cli
jb
das
das
aas
cmp
fdivp
mov
les
push
pop
popf
and
imul
ljmp
shll
call
add
or
mov
jo
sbb
push
xor
mov
jecxz
push
or
cli
mov
pop
bound
push
pop
loope
push
test
xlat
and
dec
cltd
xchg
inc
xchg
push
add
popl
add
and
sbb
push
pop
mov
clc
sbb
mov
jmp
das
fsubl
insb
cwtl
jae
gs
pop
xchg
faddl
out
pop
hlt
dec
push
outsl
fs
orps
lcall
inc
mov
pop
popf
sbb
out
ds
sti
inc
mov
or
stos
dec
or
pslld
fs
and
int
adc
shl
jmp
jle
iret
scas
pop
movsl
es
dec
xchg
sbb
pop
or
and
jle
jp
add
xchg
sbb
push
xor
mov
xor
jne
cs
cmpb
into
in
lods
mov
push
lods
dec
cltd
leave
cmp
fsubs
and
push
lods
mov
mov
dec
jecxz
in
mov
or
jb
into
aas
lock
lods
jmp
jmp
in
aam
and
sub
aad
dec
dec
mov
dec
arpl
pop
rcrb
movsb
into
fs
stos
inc
or
jo
jbe
shlb
pop
push
jmp
or
dec
xchg
jecxz
in
dec
and
int3
lret
arpl
lea
lahf
cmp
hlt
push
add
xchg
fidivs
ret
xchg
mov
jnp
jl
out
pop
dec
fmull
leave
iret
pushf
mov
pop
out
divl
xor
iret
push
pop
rorb
and
fsubs
movsb
fisubrs
mov
aad
adc
push
and
push
jl
pop
mov
push
mov
or
pop
sahf
mov
pop
mov
or
ret
mov
xor
nop
push
xchg
adc
movsl
cld
mov
in
jnp
xor
jl
in
aad
and
adc
rcl
adc
and
inc
pop
pop
mov
sub
jo
cmp
mov
jns
jp
jns
push
and
or
lret
pop
jbe
mov
add
sub
test
inc
push
pop
outsb
inc
push
jns
lcall
outsb
bound
add
movsb
das
cmp
in
and
call
into
mov
xlat
fistl
loop
jb
fsubrp
mov
sarl
lcall
addr16
sahf
out
ficomps
daa
or
fs
mov
push
outsb
cmpsb
call
mov
shrl
nop
mov
jp
imul
xor
clc
aas
and
mov
push
insl
sahf
jp
pop
dec
inc
out
push
lods
add
lret
or
outsb
add
jle
sbb
gs
pop
mov
xchg
sub
test
pop
das
pop
std
sub
rorl
lar
pop
fs
sub
mov
push
dec
jne
punpcklbw
daa
push
bound
or
sbb
addl
lret
in
jno
sub
inc
lcall
jb
insl
mov
ds
mov
dec
mov
scas
mov
jge
out
inc
pop
test
or
dec
sahf
pusha
xor
adc
dec
scas
jb
aas
dec
sahf
lret
push
sub
sbb
enter
int3
fwait
ljmp
mov
jo
push
inc
into
sub
and
dec
cmpsl
mov
pop
addr16
sub
jo
dec
jae
dec
aas
inc
sub
int
adcl
addl
sbb
fcomps
xorb
mov
dec
sarl
mov
mov
in
in
and
mov
out
and
pop
mov
adc
mov
sbb
push
pop
push
mov
sti
pop
cwtl
pop
cwtl
pusha
jbe
inc
lods
sti
imul
fdivrs
fwait
and
out
sbb
jne
or
sbb
mov
cmp
paddsb
cld
fs
dec
ret
pop
out
pop
inc
dec
mov
push
jp
jge
mov
fmull
push
lods
push
mov
xchg
jmp
dec
fisttpll
pop
sbb
push
lods
push
or
jge
jmp
bound
lret
dec
lods
bound
jmp
fcmovnu
jmp
or
in
or
dec
dec
cmp
xor
and
dec
dec
fistpl
jle
jmp
fdivl
roll
movsl
pop
jno
bound
sbb
and
mov
jmp
mov
fdivrl
pop
push
cmp
stc
or
xchg
pop
or
outsl
add
sbb
pop
scas
out
inc
out
mov
and
pop
ret
sahf
sub
jge
dec
mov
jp
shlb
scas
test
push
pop
and
sbb
loop
pcmpgtb
das
pop
mov
adc
arpl
dec
sub
lcall
push
das
sbb
or
jb
mov
fidivs
jl
out
pop
arpl
lods
pop
sub
dec
cli
out
pop
sahf
xchg
cmc
add
sub
inc
mov
pop
add
push
fucomi
out
jo
cli
imul
in
inc
mov
fdivl
int
imul
mov
inc
dec
add
out
rcrb
jp,pn
ljmp
pop
stos
mov
rolb
jmp
leave
scas
js
dec
stos
mov
pusha
mov
mov
jge
je
adc
aam
repnz
into
cmp
sub
xchg
hlt
scas
jp
cmpsl
xchg
out
pop
mov
pop
in
rcll
leave
xlat
push
inc
xchg
and
push
push
jp
ret
and
adc
cmpsl
xor
mov
or
or
push
mov
rcrb
insb
mov
adc
popf
hlt
xor
fsubr
stc
jmp
and
mov
popf
loopne
ds
fwait
iret
out
pop
lea
in
or
lret
loope
jge
icebp
and
xchg
mov
test
std
sbb
test
push
xchg
in
jae
or
fcoms
in
ljmp
icebp
pop
mov
mov
pop
adc
or
jo
imul
in
fnstsw
add
dec
test
add
sbb
mov
daa
cld
jb
fistpll
popf
imul
dec
mov
stos
insb
jle
xchg
sub
push
pop
mov
add
cwtl
mov
xor
fildll
cmc
movsb
xlat
jmp
data16
sub
pop
fbstp
adc
es
lahf
test
sbb
jmp
out
lock
movsl
jmp
loopne
and
lock
pushf
pop
fcmovnb
mov
ror
mov
pop
and
jge
xchg
xor
push
inc
clc
and
push
ret
sub
stos
xchg
sub
dec
jo
jecxz
push
lea
mov
jp
xor
cli
fdivs
cmp
lds
lds
adc
sbb
mov
adc
stos
cmp
jp
xor
aas
popa
pushf
in
lret
mov
jmp
sub
fcompl
pop
sti
or
incl
lcall
mov
lods
mov
faddl
dec
loope
sbb
out
sbb
stos
cs
rorb
sub
or
arpl
mov
fnstsw
push
pop
stc
rcrl
mov
pop
xor
or
ret
jo
pop
pop
and
pop
inc
out
push
out
cli
in
jb
lea
lcall
mov
jnp
and
pushl
int3
or
fidivl
scas
in
adc
cmc
scas
imul
fs
push
jb
pop
xor
or
push
adc
mov
int
clc
cwtl
xor
das
bound
xor
aas
outsb
or
loop
jle
sbb
push
add
mov
icebp
mov
mov
inc
stc
jbe
push
sbb
imul
mov
dec
jne
sub
push
or
and
dec
les
rorb
loop
mov
or
mov
shll
sub
out
mov
scas
cli
jnp
mov
inc
and
jne
pop
out
xor
push
push
cld
cmp
xchg
sbb
cmpsl
pop
dec
leave
mov
in
ljmp
ss
pop
cmpsb
inc
sbb
mov
lret
pop
mov
cmpsl
mov
sbb
adc
push
insl
orl
iret
stos
xor
cmp
push
mov
jmp
rcl
push
xchg
cmpl
loop
imul
inc
imul
inc
cmp
pop
push
pop
call
fistps
rclb
push
adc
loop
imul
leave
popf
setl
enter
int
mov
loop
negb
repz
mov
or
xorb
cmp
loop
cmp
mov
dec
dec
sti
jo
mov
sbb
sbb
lret
cli
mov
pop
push
sti
out
inc
inc
roll
aad
sbb
and
out
mov
sarb
dec
into
into
mov
data16
cli
negb
outsl
insl
pop
mov
dec
xchg
stos
mov
jecxz
jge
mov
fstpl
xor
and
adc
adc
repnz
push
sti
sub
dec
mov
dec
pop
xchg
sar
xor
xorb
lds
cmpsl
push
out
cld
or
je
xchg
and
xchg
sbb
testl
push
push
adc
mov
jno
pop
scas
inc
sbb
repz
testb
push
leave
inc
outsb
cmp
popfw
sub
int3
rcrb
dec
dec
dec
popa
push
fdivs
sbb
icebp
xor
sbb
cmp
xor
sbb
outsl
and
sub
adc
int
std
xchg
lcall
xchg
mov
rcl
jo
pop
and
cmpsl
mov
pushf
sarb
sar
repz
sarb
lods
ret
not
fsubs
cli
stc
aam
and
loope
std
call
xchg
jnp
pop
out
mov
cmc
clc
fimull
jns
dec
pop
mov
fistpll
xchg
cmp
lret
mov
pusha
shlb
iret
and
mov
or
sbb
pop
aam
mov
mov
add
int
dec
das
lret
jo
sbb
mov
test
outsl
push
sti
mov
mov
sub
shll
fisttpll
sub
dec
inc
xor
test
or
add
int3
cs
mov
in
add
dec
stc
sbb
rcrl
pop
sbb
fwait
jo
and
lahf
es
jnp
push
lods
call
mov
mov
pop
dec
adc
popf
mov
test
out
incl
push
idivb
push
xlat
out
and
loope
pop
vsqrtps
test
scas
mov
frstor
lret
mov
fucomi
imull
lods
push
xor
test
cmovb
push
sub
int3
xor
into
mov
in
iret
faddp
out
and
cmp
je
mov
hlt
and
jge
movsl
xchg
mov
sarl
lret
inc
inc
or
repz
dec
shll
dec
into
dec
mov
sub
mov
or
jle
ljmp
repz
push
pushf
pop
or
add
and
fdivl
pop
push
popa
mov
pop
add
testl
popa
leave
testb
inc
das
ss
cmp
daa
push
int3
hlt
lret
xor
fistl
mov
jg
dec
and
pop
sub
test
shll
cmp
mov
test
mov
sbb
jmp
cbtw
in
sbb
xor
sbb
lods
cmp
pop
sti
sub
insb
cs
xchg
push
insb
cltd
jp
mov
and
outsb
pop
pushf
adc
test
insb
inc
mov
lcall
push
leave
inc
xor
pop
jmp
jmp
jmp
ds
insb
lds
pop
pop
lcall
lock
jmp
lock
rcrb
sti
sbb
xlat
xor
xchg
mov
push
push
adc
push
sbb
and
cmp
pop
or
gs
inc
dec
std
mov
js
jl
ficoms
cli
mov
bound
ja
loope
add
leave
jo
xlat
mov
push
jns
scas
or
push
push
or
adc
stos
das
lahf
mov
imul
adc
pop
dec
fistl
insl
add
push
mov
fstpt
rorb
lret
jb
fistps
and
ror
push
mov
lret
pop
repnz
rcl
bound
ficoml
lds
mov
outsl
fldl
out
int3
imul
loopne
sti
push
jl
stos
mov
mov
pop
sahf
bound
scas
ja
dec
mov
shlb
jmp
test
pop
loop
mov
scas
leave
xchg
cmp
push
adc
dec
lret
bnd
cli
jns
add
imul
push
mov
scas
in
mov
data16
dec
mov
rol
jg
ds
mov
pop
and
test
out
sarl
and
test
dec
and
mov
xor
pop
sub
popa
ret
xor
pop
sbbb
mov
inc
mov
das
or
mov
scas
push
dec
push
fsts
inc
inc
jp
aaa
dec
cmp
aaa
adc
xchg
dec
mov
pop
lcall
jge
mov
out
call
stc
cmp
pop
repnz
popf
adc
fwait
int3
out
cli
pop
jge
xchg
clc
mov
repz
pop
inc
sbb
out
mov
loop
lret
scas
popf
jecxz
adc
lods
popf
out
add
fisubrs
or
adc
stos
popf
repz
cmp
jb
ljmp
bound
stos
mov
fistpll
pslld
mov
mov
mov
mov
lcall
pop
in
add
push
loop
lea
sub
aad
add
pop
or
and
fld
in
test
mov
xchg
adc
aad
pop
cltd
inc
pop
dec
repz
cmpsb
in
and
push
fstp
cmc
das
mov
cs
jb
int
lcall
sub
jo
decl
fsubrl
pop
test
dec
push
jg
jmp
gs
xor
or
insl
test
in
lea
fstps
jle
cmp
movsl
and
dec
push
int
jg
pop
jge
leave
jmp
inc
lret
push
mov
out
dec
lret
pop
pop
aas
pop
pop
push
push
sarb
xchg
mov
stos
jge
push
int
sub
sub
mov
test
lahf
leave
mov
pop
loope
fisubs
fwait
mov
stos
jmp
dec
js
sbb
jecxz,pn
in
cltd
fidivl
or
pop
rcl
pop
jle
mov
loop
dec
lret
cmpb
scas
pop
test
add
mov
add
cmpl
aam
call
out
hlt
stos
xchg
xchg
pop
test
insb
inc
outsb
xor
pop
cmp
dec
xor
add
mov
inc
and
or
and
inc
mov
xlat
xlat
bound
insb
rorb
xchg
cli
push
jb
fcmove
jbe
faddp
pop
mov
cmpsl
sar
mov
mov
sbb
into
mov
daa
jb
mov
xor
xchg
or
mov
jmp
sbb
ja
add
stos
inc
cmpsb
int3
adc
icebp
and
push
cmc
push
jle
leave
mov
mov
xchg
push
fcom
jb
iret
sbb
mov
dec
jecxz
movsl
inc
les
and
and
or
decb
and
dec
out
inc
mov
lcall
sbb
arpl
ficompl
mov
mov
mov
stos
adc
push
sub
xchg
repnz
push
outsb
les
push
mov
lods
lcall
data16
int3
in
mov
pushf
jne
movsb
push
sahf
int3
test
push
cli
add
ret
jb
pop
lahf
push
loop
in
out
jo
pop
adc
hlt
or
scas
mov
mov
and
fnstsw
loop
xchg
out
mov
dec
or
push
cmp
jmp
fisttpl
imulb
test
and
pop
sti
push
pop
mov
in
iret
neg
xor
loopne
sbb
dec
and
sar
jl
pop
sub
out
xor
into
sub
scas
aaa
dec
mov
ror
shrb
in
or
push
notl
jne
mov
insl
pop
mov
sahf
push
xor
and
xchg
out
out
lcall
jae
loop
push
mov
mov
mov
push
fidivl
adc
add
mov
mov
sbb
jl
cmp
push
mov
xor
pusha
sbb
jp
test
sbb
call
mov
imul
mov
dec
mov
scas
jecxz
pushf
push
mov
jb
or
sbb
gs
dec
ret
jbe
mov
dec
daa
fcmovne
or
flds
stos
inc
rcll
gs
mov
ss
push
dec
mov
int3
mov
iret
sbb
cmpsb
sti
mov
jno
out
insl
cwtl
aas
push
dec
mov
jge
pop
sbb
subb
pop
xchg
adc
pop
iret
popf
push
mov
cmp
je
imul
ljmp
add
push
rorb
xchg
dec
into
jp
stos
cmpsl
ljmp
and
scas
xchg
jg
in
sbb
fisttpl
std
mov
lds
inc
jge
dec
dec
pop
jb
push
ficompl
dec
and
sbb
cld
adc
je
jge
mov
out
outsl
mov
orb
push
mov
mov
shrb
jge
xchg
mov
or
incb
loop
test
dec
fdivrl
jo
dec
mov
add
dec
mov
sub
shlb
adc
imul
jnp
inc
or
lods
jecxz
sbb
shrb
xor
push
orl
add
out
sbb
or
data16
or
cmp
leave
je
adc
shrl
ds
daa
push
push
pusha
shll
movsl
in
fdivs
push
xor
push
out
std
jg
leave
fcomip
cmp
out
xor
iret
mov
fdivrs
clc
jbe
sarb
sub
mov
mov
push
sub
mov
xchg
loop
lods
inc
inc
add
mov
cld
lods
mov
sub
int3
in
scas
ss
push
scas
pop
add
call
sahf
outsl
and
orb
push
cli
lcall
stos
js
and
cs
lds
por
mov
icebp
sbb
scas
out
bound
mov
xchg
imul
movsl
push
in
fninit
jmp
jmp
icebp
leave
cld
inc
ljmp
push
roll
add
cmc
mov
sub
ds
inc
ret
push
xlat
push
loopew
aam
dec
mov
loopne
adc
jno
or
pop
repnz
out
jo
push
mov
out
in
xor
out
dec
imul
lret
adc
ljmp
sti
adc
into
jnp
adc
mov
js
dec
adc
fwait
pop
sbb
sub
repnz
push
rcrl
mov
pop
sbb
mov
stc
jo
pushl
cmp
adc
pushf
push
pop
pop
pop
scas
cwtl
lock
shlb
jecxz
cli
fisttps
push
icebp
out
and
adc
dec
sbb
sti
add
movups
andb
xor
lcall
mov
push
and
inc
push
sub
mov
mov
popf
pop
push
xor
jns
jge
int
dec
idivl
adc
dec
cmp
or
popf
dec
into
pop
sbb
mov
cmc
pop
mov
decb
into
add
loopne
mov
inc
xchg
in
das
pop
flds
dec
lahf
scas
inc
and
imul
lea
adc
orb
xlat
or
ja
dec
ja
cltd
ficoms
sbb
lahf
lds
mov
aam
jnp
or
callw
mov
lahf
in
jo
shlb
mov
arpl
push
xchg
ret
fimuls
int3
or
sbb
push
dec
sbb
cltd
insl
sbb
sbb
mov
mov
jle
adc
mov
fcoml
cltd
shl
pop
in
loopne
pop
rolb
sub
rclb
cmpsb
push
sbb
sarb
movsl
inc
leave
clc
ficomps
jmp
cmp
cli
jge
jnp
cmp
rcr
mov
shll
lcall
pop
xor
or
jge
and
push
jo
lods
aad
and
sti
int
push
cmp
loop
imul
mov
xor
pop
and
imul
xchg
sbb
jo
inc
pop
push
adc
sub
jbe
in
jae
aas
jns
setb
movsl
ret
clc
sbb
sbb
stos
in
les
lcall
lret
int3
fiaddl
dec
lock
icebp
mov
sub
dec
mov
fnsave
adc
cmp
cmc
je
xor
lcall
in
scas
insl
test
mov
subl
dec
cmpsl
sbb
stc
fs
fldl2t
push
xchg
xchg
and
cmpsb
sahf
subl
dec
mov
stos
mov
inc
jg
dec
pushw
add
pop
mov
ss
mov
test
adc
iret
push
cmp
push
push
inc
pusha
test
in
sub
sbb
xor
dec
in
and
mov
popa
shlb
pop
sbb
sub
cs
or
adc
or
daa
sbb
mov
jbe
sbb
xor
popf
sbb
mov
lcall
push
into
jl
test
cmp
jne
mov
jb
into
daa
xor
scas
cmpsl
call
icebp
dec
mov
loope
adc
and
jnp
in
pop
sbb
xor
push
sub
sbb
bound
int3
cmp
mov
pop
mov
aam
nop
sub
das
iret
jge
xor
fs
shll
data16
xor
insb
xor
sub
mov
xor
pushf
mov
jbe
mov
cli
ret
out
xlat
repz
push
dec
jo
jle
out
and
sbb
or
loop
int
pop
loopne
fwait
dec
pushf
lahf
dec
scas
je
adc
sarl
push
lods
iret
mov
ljmp
and
cltd
sahf
mov
push
inc
adc
out
pusha
popf
pop
loope
mov
xor
mov
and
sub
scas
lret
out
inc
push
into
push
fidivrl
push
cs
fisubrl
dec
xchg
jecxz
add
xlat
insb
test
xchg
imul
stos
mov
mov
mov
xchg
xor
in
add
cmp
aad
and
imul
mov
lods
aas
in
or
or
jge
lods
and
sbb
sub
xchg
shll
sub
rcl
jnp
cmp
mov
cli
cli
cmpl
mov
mov
int
mov
addr16
out
dec
cmp
aam
int
mov
scas
sbb
mov
dec
pop
ljmp
fidivrs
imul
sub
outsb
cmp
cltd
xchg
inc
push
aas
and
dec
repnz
fcmovbe
leave
adc
insb
pop
pop
fcoml
mov
jge
xchg
das
cmp
dec
xchg
sub
push
sub
in
sub
inc
and
xor
adc
mov
mov
or
out
cmp
test
clc
mov
xor
in
pop
mov
or
dec
es
scas
out
pop
test
outsb
sbb
jbe
lret
out
scas
repnz
mov
push
repnz
je
pop
les
xor
dec
sub
or
scas
mov
and
shlb
push
and
icebp
or
mov
jmp
mov
out
and
pushf
sbb
or
imul
xchg
mov
jmp
cmp
into
scas
mov
test
fsubrs
out
pop
cs
xor
or
cmp
test
mov
push
cli
or
inc
int3
jb
loope
push
int
test
sbb
jge
loope
fisubs
notl
or
in
xlat
fucomp
insb
lods
push
push
pop
ljmp
std
jnp
mov
push
push
mov
addr16
cld
push
faddl
int3
pop
push
test
rorb
lcall
add
mov
or
push
cli
adc
das
les
into
and
add
in
sub
and
cltd
mov
jb
sbb
and
push
push
fsin
cmp
push
scas
xor
imul
lcall
adc
faddp
pop
iret
ljmp
sbb
sub
xor
out
xchg
jo
lock
lret
adc
push
add
lret
rcl
jno
sbb
sbb
xor
scas
ljmp
fwait
or
test
scas
in
xor
push
sub
and
ss
cli
xchg
dec
xchg
mov
imul
loop
movsb
sbb
push
lret
add
lret
leave
cld
and
das
hlt
jl
push
out
lea
sub
test
jne
fdivs
enter
push
push
xchg
call
push
jno
mov
arpl
mov
jmp
lods
sub
movsl
lock
pusha
fmul
adc
adc
orl
cs
clc
pop
insl
testb
mov
mov
inc
push
movsl
xchg
lcall
repnz
inc
imul
push
rcll
fdecstp
sbb
jb
and
test
mov
jno
pop
fadd
scas
xchg
pop
mov
je
sub
fisubrl
sub
xchg
call
xchg
bound
cmpsl
mov
in
mov
jbe
dec
xlat
mov
add
fs
inc
pusha
movw
xor
imul
xorl
add
popf
dec
sbb
ficoms
mov
push
leave
rcll
mov
add
fdivl
mov
xchg
fs
lods
push
rorl
push
and
ret
jmp
push
cmpsb
outsl
outsl
imul
hlt
cs
mov
fmul
xor
pop
mov
pop
push
insb
mov
ret
hlt
lea
mov
adc
pop
fsubrl
dec
lcall
cmpb
and
sbb
fidivrl
data16
mov
fwait
mov
fsubl
sub
mov
inc
cwtl
dec
cld
mov
push
out
or
or
cli
inc
xor
or
pop
cmpsl
mov
mov
std
mull
filds
dec
push
gs
pop
push
or
or
aas
das
cmpsl
jb
or
stos
call
inc
dec
pop
scas
inc
xchg
mov
vunpcklps
shl
cld
push
stos
addr16
imul
mov
aaa
iret
aad
repz
sbb
les
add
loope
and
pusha
rcrb
pop
and
mov
sbb
xlat
ja
lret
push
mov
iret
dec
cmp
outsb
mov
xlat
aam
and
fdivl
notl
and
pop
sti
dec
into
scas
stc
xchg
mov
inc
pop
ja
insb
inc
cwtl
cmpsb
push
cmp
cld
call
xlat
adc
and
adc
stc
rcrb
xor
pop
call
xchg
inc
sub
add
sbb
jle
ficompl
sbb
add
shrb
loop
lods
add
ljmp
adc
dec
les
cmp
jmp
cli
test
sahf
in
jno
jp
fdivrs
int3
js
pop
shl
dec
lahf
iret
sub
aam
jmp
xor
mov
in
adc
dec
xchg
jmp
or
xor
push
popa
roll
mov
andb
dec
outsl
arpl
das
insb
ss
and
icebp
lea
xchg
sti
jg
mov
and
aaa
arpl
lcall
pop
dec
pusha
or
dec
stos
in
jmp
jl
loop
ljmp
cmpsl
jle
push
mov
movsl
sub
or
shrl
push
jae
ret
int
xchg
dec
out
cld
xchg
clc
enter
jp
scas
mov
add
sub
mov
push
int
addl
xchg
out
push
test
mov
mov
push
fsubrs
add
lret
push
or
or
mov
stos
cmp
test
sbb
aad
aam
fcoms
out
or
mov
loop
jge
and
add
cli
mov
fisttpl
xor
push
into
ret
bound
cltd
lcall
lret
int3
or
mov
dec
mov
lcall
mov
mov
pop
lret
shrl
dec
clc
mov
or
mov
jge
xor
mov
outsb
dec
lret
mov
movsl
jae
mov
cli
pop
sti
seta
and
enter
aad
xchg
push
es
add
mov
sti
mov
bound
dec
dec
ljmp
iret
movl
call
sbb
cmp
mov
pop
inc
lret
scas
fimull
stos
popf
sub
iret
push
rorb
jmp
sub
cmp
lock
jmp
cld
jbe
dec
inc
pop
cmp
cli
outsl
cmpsl
into
or
jecxz
sub
aas
aam
dec
mov
cmp
or
fidivrs
mov
testb
push
sub
push
rcll
pop
loopne
fimuls
test
sti
push
lret
cltd
in
push
sbb
dec
push
fdiv
aam
cld
adc
push
push
loop
xchg
pop
dec
pop
lret
push
in
and
imulb
mov
sbb
mov
mov
int3
gs
enter
dec
push
cs
mov
push
sbb
pop
ja
mov
push
ljmp
push
jb
out
imul
push
stos
cmpsl
and
ret
lock
ljmp
adc
test
jp
dec
mov
mov
xchg
jl
cmove
cmp
jp
pop
push
in
cmp
jb
jns
sub
sub
cli
fsts
aam
mov
adc
lock
mov
in
loop
out
sub
sahf
ljmp
jo
xor
lret
hlt
dec
mov
shrb
xchg
stc
cs
jb
je
shlb
jo
imul
and
sbb
pop
shr
mov
cmpsl
shll
xor
adc
insb
adc
mov
sbb
or
sbb
pop
lcall
sti
mov
aad
aaa
test
sbb
push
insl
adc
call
fmulp
scas
add
lea
pop
mov
mov
mov
and
xor
mov
stos
cli
sarl
scas
pusha
scas
aaa
xor
es
dec
mov
pop
push
push
int3
aad
push
push
outsl
jge
mov
adc
or
or
jb
xchg
sub
lea
sub
cmp
sub
dec
data16
jns
nop
out
mov
nop
aam
stos
xor
jp
mov
pushf
mov
fsts
mov
or
mov
scas
pop
mov
sub
leave
into
add
push
pop
rcrl
xor
xchg
aaa
cmp
xchg
cmp
data16
jecxz
cmp
sbb
dec
lahf
xchg
sahf
insl
out
div
mov
icebp
mov
mov
push
data16
adc
xchg
push
repnz
sbb
std
data16
dec
or
loopne
mov
and
jmp
fisubrl
or
sub
enter
or
sti
sbb
cld
mov
fs
xchg
jb
cmp
sti
orb
pop
stos
rorl
xor
loop
push
sub
or
mov
mov
pop
stos
jb
xchg
mov
mov
cld
pushf
pop
and
cmp
mov
bound
mov
xchg
repz
lret
push
jmp
jmp
add
jnp
cmc
pop
xchg
jae
outsl
or
mov
iret
adc
testl
jb
testl
stc
stos
shlb
bound
cmp
xchg
lea
repnz
lods
lods
xchg
popf
dec
jnp
add
cmpsl
and
cmp
pop
outsl
repz
jmp
mov
fisubl
clc
and
ljmp
adc
ljmp
push
cmpsl
movsl
psubd
sarl
int
mov
pop
sbb
push
int3
scas
push
add
mov
jl
stos
bound
icebp
dec
std
push
imul
sbb
mov
fmull
pop
mov
movsb
pop
or
push
pop
sub
and
pop
dec
shlb
xchg
pop
mov
cmpsl
sbb
cmp
add
pop
mov
mov
sub
int3
lods
imulb
sbb
bound
and
and
cltd
mov
mov
and
rolb
in
lret
xchg
mov
popf
jb
loopne
xor
dec
rcr
jb
pop
stos
cmp
mov
incb
sti
mov
push
add
aas
xor
scas
bound
shlb
xor
test
jo
sub
and
sub
xor
in
adc
cmp
pop
cmp
xchg
push
in
pop
or
mov
sbb
sbb
cli
sub
mov
push
xlat
and
out
xchg
sub
out
cmp
addr16
mov
mov
or
bound
jbe
dec
mov
fcomp
mov
push
mov
stos
sbb
xchg
jae,pn
mulb
dec
xor
pop
stc
stc
and
jae
adc
aaa
sbb
insb
mov
push
jle
inc
push
mov
xchg
or
mov
adc
sub
mov
xchg
cmp
xor
push
lods
inc
dec
cmp
pop
popf
cmpsb
sub
dec
sub
mov
out
cmp
mov
inc
lea
xchg
fs
pop
xlat
jnp
mov
std
xchg
popf
add
lods
push
scas
adc
dec
cmp
fstpl
sahf
ds
or
mov
stos
xlat
push
rcll
test
test
sub
push
out
test
push
aad
push
out
lahf
ljmp
jl
mov
jbe
scas
jo
out
jbe
das
xchg
jbe
jle
mov
cs
in
adc
sti
mov
dec
xchg
pop
das
cltd
ljmp
dec
push
fcoms
sub
imul
xchg
mov
ret
rclb
push
xor
push
fcoml
dec
inc
insl
mov
xchg
outsb
scas
fsubr
lret
xchg
mov
xchg
pop
cli
pop
mov
cs
adc
mov
push
adc
xchg
aad
mov
mov
cmpsb
dec
scas
mov
out
cmpsb
xor
mov
cmpsl
in
mov
sub
adc
sti
mov
pop
xchg
mov
decl
mov
mov
scas
ja
imul
mov
test
ret
adc
imull
push
adc
dec
jb
mov
cld
jge
or
dec
sti
add
cmp
insl
std
std
fmuls
lcall
scas
movsl
std
sahf
inc
dec
cwtl
dec
idivb
hlt
pop
push
xchg
pop
push
mov
push
pop
mov
dec
or
dec
mov
and
cmpsl
push
das
xchg
mov
or
push
push
mov
ds
hlt
xchg
mov
cmp
jbe
xchg
and
lahf
push
mov
scas
cld
pusha
mov
out
mov
cmc
stos
fwait
dec
imul
push
sbb
pop
sbb
dec
sbb
fistpll
fsubrs
sbb
sbb
addr16
jp
stc
rclb
cwtl
scas
test
adc
pop
sub
fmul
sub
fsubrl
adc
lock
pop
and
insb
xchg
dec
sbb
mov
or
lcall
adc
mov
or
imul
imul
popf
dec
add
dec
push
or
or
dec
fcom
repnz
xchg
jnp
dec
lea
push
dec
jne
pop
jmp
mov
dec
divb
in
dec
stc
cmp
dec
mov
mov
scas
dec
fwait
leave
pop
add
pop
int3
push
mov
push
loop
push
icebp
push
bound
or
adc
mov
jecxz
in
mov
xchg
sti
lcall
fimull
popf
xchg
repz
pop
mov
pop
stos
cmovl
or
stos
out
push
aam
int
insl
xor
pop
das
cmpsl
adc
mov
rcll
mov
jnp
lea
sahf
lret
ljmp
or
or
xor
leave
sub
pop
mov
xor
out
insl
adc
dec
jnp
std
mull
fs
ljmp
fmulp
outsl
push
sbb
inc
or
jp
adc
imul
mov
mov
lahf
in
dec
dec
popf
mov
inc
dec
jbe
fisttpl
fidivs
push
fmuls
sbb
test
ja
dec
sub
bound
push
cmpsl
adc
mov
sub
cmc
jne
nop
test
jl
ffreep
sbbb
loop
mov
push
addr16
or
stc
push
das
fisttps
jmp
adc
mov
aaa
lret
adc
mov
adc
int
sbb
scas
push
dec
and
add
sbbb
mov
ret
or
inc
test
aas
and
jns
dec
repnz
sub
stos
mov
mov
shr
scas
pop
cwtl
xchg
hlt
leave
rorl
add
rcl
cmpsl
je
or
data16
ja
inc
xor
or
test
mov
inc
xchg
xor
pop
push
mov
sub
push
enter
mov
mov
add
push
outsl
test
cmp
cpuid
fisubrl
lds
imulb
pop
jo
jnp
adc
inc
dec
mov
out
bnd
mov
mov
mov
pop
pop
enter
sub
mov
divb
and
cltd
jo
xchg
dec
orb
punpckhdq
dec
cmc
cltd
pop
jnp
into
pop
sub
es
out
or
cli
scas
fidivrl
lea
ljmp
pusha
rsqrtps
mov
je
movsl
mov
cmpsl
sbb
pusha
lods
pop
adc
out
jge
call
adc
sub
bound
or
jbe,pt
push
push
xchg
sub
popf
dec
insl
aad
das
adc
dec
test
sub
mov
movsb
aaa
or
push
pop
adc
adc
jp
sti
cs
in
orl
cltd
pop
mov
out
lea
or
in
xchg
and
push
scas
add
dec
gs
shrb
dec
aad
jecxz
pushf
mov
add
or
sbb
jecxz,pn
dec
or
into
or
sub
outsl
adc
mov
sarl
mov
jl
ds
push
pop
into
dec
xchg
jnp
pop
dec
cld
push
ljmp
fcmovnbe
sbb
or
jmp
je
incb
xchg
cmp
jecxz
les
dec
or
dec
lea
cs
mov
sbb
out
mov
add
and
aam
pusha
aas
inc
mov
mov
push
pop
imul
popf
lret
fmulp
notl
mov
pusha
aas
pop
data16
ss
mov
push
jb
cmp
iret
adc
iret
add
xchg
lret
dec
movsl
cli
bound
cmp
fwait
imul
test
push
jo
jo
arpl
cmp
push
jge
lods
dec
mov
cld
or
lock
mov
popa
js
push
dec
dec
mov
cltd
push
mov
pop
jb
fcomi
mov
ds
mov
adc
popa
aas
fistl
add
idivb
nop
daa
cs
inc
inc
icebp
inc
out
adc
pop
add
ds
dec
outsb
cltd
imul
aas
mov
or
dec
mov
xor
je
push
mov
rclb
das
inc
cmp
mov
jle
xchg
push
cmpsb
das
lods
cmp
iret
loop
add
add
push
or
jns
add
leave
bound
pop
or
movsl
aaa
stos
push
das
leave
clc
adc
mov
jle
mov
dec
dec
scas
int3
push
in
xor
int3
dec
mov
add
mov
push
or
or
je
aas
mov
test
icebp
push
stos
out
jle
fidivl
cli
and
mov
sub
out
push
nop
call
mov
mov
stos
dec
into
mov
dec
pop
lret
ss
cwtl
jp
lock
int3
test
loop
imul
jnp
lea
out
push
and
and
in
insl
cltd
pop
aas
enter
popa
jecxz
bound
cld
stos
cltd
jge
dec
mov
rcll
jns
lds
cmp
cmp
mov
jne
sti
out
push
or
mov
cmp
mov
lret
cmc
popf
fiaddl
xchg
sahf
pop
jae
add
shr
sub
sub
lret
mov
clc
sbb
mov
lock
lcall
fldl
ljmp
out
or
adc
shlb
push
lds
push
sbb
aaa
ja
fldenv
popl
stos
push
adc
jl
int
data16
fistl
mov
leave
push
pop
cs
in
or
pop
inc
movsb
sub
call
push
fxch
pop
add
xchg
jb
shll
adc
lret
lds
subb
call
repnz
fpatan
cmpb
adc
shl
fidivl
lret
push
sbb
adc
push
jb
iret
push
push
shrb
cwtl
add
test
cmp
or
pop
lods
mov
mov
int
stos
cmc
test
sbb
shl
and
pop
test
loop
js
add
push
sbb
adc
test
sub
xchg
jmp
push
ds
push
fsts
sbb
aad
jo
lods
cwtl
daa
adc
mov
int3
sti
xlat
add
push
adc
mov
xor
ss
fcmovnb
sub
notb
jno
jb
enter
sbb
mov
out
or
mov
imul
push
icebp
mov
lret
std
sbb
sub
sbb
and
ds
dec
into
bound
mov
lret
fs
sti
imul
aas
sbb
cmp
mov
sbb
inc
cmp
sub
aas
cs
loopne
sub
nop
sub
push
das
adc
mov
mov
and
test
dec
shrl
scas
jns
sub
xchg
insb
call
xchg
nop
nop
mov
hlt
push
pop
insl
cmpsb
ds
sub
mov
pop
jmp
inc
jae
mov
jle
and
or
push
bound
popa
lret
sbb
adc
shl
mov
add
adc
test
mov
scas
cltd
pop
ret
sub
stos
pop
or
scas
ficoml
and
loopne
ret
loope
test
or
leave
pop
push
aas
push
and
outsb
mov
ficomps
or
and
sub
or
addb
or
ds
lret
pop
fstpt
push
adcb
outsb
scas
pop
add
cmp
pop
cltd
sub
por
push
adc
in
xor
or
nop
in
push
sti
into
mov
mov
add
mov
lock
sub
push
mov
xor
mov
iret
cmp
adc
das
std
mov
dec
and
das
and
aas
xor
cld
xchg
adc
jmp
adc
sarl
inc
adc
and
lock
das
adc
jns
push
sub
dec
out
out
mov
ds
mov
sbb
mov
sahf
pop
int
mov
mov
out
push
push
dec
push
or
xchg
mov
cmp
fistl
jmp
push
je
sarl
push
xlat
div
movsb
int3
fwait
dec
cmp
mov
pop
in
inc
jle
cmpsb
repz
fidivrl
fucomip
or
ss
lcall
mov
negb
sub
mov
in
leave
pop
jbe
push
pop
mov
cmp
xlat
negl
scas
mov
imul
ljmp
lahf
pop
mov
push
mov
test
ficoms
loop
pop
rcl
adc
inc
cld
loopne
shlb
mov
std
and
aam
xchg
push
sarl
push
shl
sub
jmp
xlat
mov
inc
das
jae
test
mov
loop
aas
pop
outsl
cli
test
jle
cmpsl
push
xchg
enter
xchg
pop
cmp
add
lds
ljmp
mov
lods
xchg
mov
pop
data16
ljmp
jp
aaa
or
daa
in
jl
sub
pop
sub
mov
loopne
inc
mov
fimuls
adc
push
xor
fcmovbe
outsl
scas
imul
xchg
test
lret
adc
push
lret
mov
push
dec
pop
pop
outsb
cmp
push
push
push
push
cld
js
add
and
outsl
gs
ret
ljmp
stos
sub
loopne
sbb
sbb
fwait
and
jmp
int3
jl
mov
pushf
stos
mov
testb
push
jae
jnp
out
fmul
push
or
out
pop
subb
fsubrs
xor
push
fcomi
fdivl
or
pop
lds
int3
imul
cs
fisubl
or
data16
repnz
pop
pop
stos
pusha
lret
gs
iret
fwait
or
fsubrp
jecxz
push
pusha
dec
ljmp
std
in
pop
cmp
pop
test
or
lods
or
cmpsb
inc
push
daa
in
stos
xor
sbb
sti
std
cmp
push
jae
in
aas
adc
or
jne
push
pop
sti
repnz
push
test
push
bound
lds
insb
ljmp
lret
xor
push
push
leave
push
insb
mov
push
scas
jmp
mov
xor
stc
and
lock
dec
out
or
or
ljmp
push
ficoml
dec
adc
cmp
fstpl
mov
push
cmc
jge
aaa
shrl
pop
push
pop
adc
in
add
negl
mov
sahf
ds
js
adc
dec
xchg
pop
fcoms
xchg
adc
push
aas
jmp
lahf
lcall
mov
or
das
sub
ljmp
mov
movsl
or
loope
loope
or
xor
notl
mov
repz
or
outsb
out
sbb
cmp
ds
push
loop
mov
lea
data16
aad
les
xor
popf
mov
cltd
idiv
xchg
gs
mov
enter
jecxz
mov
lcall
sbb
dec
lcall
jns
push
xchg
cld
leave
push
aaa
jp
fcom
shl
cmp
mov
cmc
sbb
push
pop
sbb
or
push
adc
ficoml
scas
dec
pop
dec
pop
pop
mov
rolb
and
fmuls
movsl
imul
push
test
gs
xchg
push
lret
or
cmp
cmp
mov
fdivrl
les
ret
call
push
shl
movsl
or
dec
and
jecxz
cld
dec
sbb
or
jp
lret
nop
mov
xlat
push
lret
jecxz
mov
mov
push
test
push
data16
shrb
arpl
loopne
push
fidivrl
sbb
jnp
fsubrl
add
fcmovne
rclb
push
lcall
loop
mov
out
dec
push
pop
lock
rcrl
jl
iret
dec
loop
push
jle
or
sbb
mov
mov
das
data16
fiadds
mov
jl
mov
pusha
data16
sub
jae
sar
sbb
pop
pop
cli
xchg
cltd
sub
cmp
mov
mov
mov
sbb
leave
mov
jno
sahf
mov
out
or
into
mov
outsl
lods
cmpb
xchg
dec
and
stos
test
pop
rolb
mov
or
lret
push
push
mov
repnz
mov
outsb
pop
fcomp
mov
fcompl
out
sub
or
cli
add
dec
jmp
sbb
lods
pop
mov
or
pusha
mov
sbb
inc
dec
sbb
and
or
scas
jge
fwait
xor
subb
pop
lcall
adc
pop
mov
dec
loope
dec
lret
mov
mov
mov
iret
jne
cli
or
jae
fucom
sbb
btc
adc
jne
andb
xchg
push
scas
mov
or
stos
lahf
enter
ja
mov
adc
pop
out
dec
movsl
adc
and
xor
mov
jmp
shlb
int3
push
sahf
mov
mov
popa
repnz
in
rclb
pop
pop
jecxz
es
mov
pop
sbb
lret
inc
icebp
push
das
in
fdivl
js
adc
dec
div
sub
int
push
insl
sub
in
and
in
xchg
dec
hlt
lcall
roll
cli
dec
mov
stos
out
mov
push
or
leave
aaa
int3
jecxz
decb
mov
cltd
mov
adc
ja
dec
push
mov
stos
shlb
push
ljmp
jmp
movsl
or
pusha
mov
xor
lret
jl
fistps
inc
addl
bound
rol
bound
inc
pop
mov
fistpl
fld
jg
sti
mov
in
push
mov
repnz
sbb
cld
xor
jle
dec
or
mov
out
popf
and
aaa
popf
les
or
xchg
std
das
cmpsb
aas
in
repnz
pushf
aam
dec
jp
add
fxch
cld
out
or
xlat
int3
mov
dec
jp
sarl
lcall
pop
pop
mov
push
push
mov
add
cld
popf
inc
cld
dec
jge
lahf
sbb
dec
push
or
add
popa
xorb
dec
cmp
addr16
mov
xchg
or
fstpt
pop
pop
mov
insb
lcall
pop
dec
in
lea
or
mov
dec
ficompl
decb
fs
leave
mov
push
mov
sub
lods
jns
jnp
cltd
in
adc
push
xchg
rorl
bnd
outsb
jge
mov
dec
imul
jge
adc
jmp
mov
adc
adc
push
jp
leave
mov
aad
loopne
in
and
int3
xchg
out
mov
mov
decb
lock
xor
ss
and
icebp
push
lcall
ljmp
xor
mov
mov
dec
push
lcall
ficompl
or
mov
ljmp
jbe
add
jecxz
fidivs
cld
ret
pop
xor
arpl
bound
xor
imull
jno
insl
mov
mov
cmpsb
imul
inc
and
dec
hlt
je
xchg
jmp
cs
out
and
jnp
mov
sub
mov
loopne
fldl
inc
movsl
sbb
vmovq
mov
adc
xchg
repnz
lcall
sub
mov
lods
jb
imul
aas
adc
jp
push
or
cltd
and
leave
arpl
fldenv
sti
jmp
cltd
aam
stos
push
mov
lock
test
jmp
arpl
mov
sbb
dec
mov
xor
negb
and
lahf
bound
push
adc
inc
mov
pop
sub
fcomi
or
adc
subl
or
shll
aad
cs
and
or
and
pusha
bound
cwtl
adc
jo
out
int3
cmp
in
jae
mov
push
je
sub
mov
pop
in
cmp
insl
add
scas
lret
in
outsl
je
nop
sbb
add
cwtl
or
idivb
lock
push
dec
iret
fdivr
bound
int
pusha
mov
repnz
outsl
imul
dec
into
dec
inc
sub
fmulp
outsb
or
mov
xor
dec
push
cmpsl
mov
push
lret
lret
push
ror
xchg
std
xor
dec
pop
sahf
jb
mov
jmp
add
and
ror
jge
inc
lea
ds
dec
stos
or
push
cwtl
mov
cltd
mov
flds
fisttpl
inc
rclb
cld
sbb
sbb
mov
inc
sbbb
mov
pop
inc
jecxz
mov
xor
test
fmulp
rcll
mov
mov
xchg
cmc
int3
sbb
cmp
mov
scas
shlb
cli
pop
push
or
shlb
dec
imull
iret
xor
push
dec
and
pop
jp
push
rcrl
or
sbb
cmp
jl
sbb
lahf
sbb
fmull
les
xchg
sub
mov
mov
mov
jnp
jmp
xor
mov
mov
dec
jp
int3
add
mov
out
sar
jl
or
dec
xchg
in
xchg
scas
rcll
mov
pop
and
shll
int
jl
fisubrl
mov
xchg
xor
shrl
leave
std
or
xchg
mov
mov
mov
xchg
insb
jg
xchg
mov
mov
sub
stos
mov
xchg
lret
cmp
leave
scas
sti
mov
mov
cmp
gs
xor
insb
mov
lret
std
jle
dec
adc
mov
pop
mov
mov
int
inc
sbb
cmp
insb
pop
push
test
lcall
or
jle
mov
std
mov
sti
push
push
pushf
scas
adc
insb
orb
pop
and
pop
sbb
pop
paddsb
lods
or
nop
push
mov
adc
or
stos
mov
jge
jo
jno
inc
dec
loope
int
repnz
cli
cmp
in
xor
jle
xor
mov
mov
dec
push
lock
pop
mov
out
mov
mov
in
popa
xor
scas
push
into
mov
and
call
int
shl
leave
lcall
push
stc
aad
int
int3
pop
mov
jg
ficomps
gs
lods
cwtl
rclb
mov
mov
xor
mov
dec
into
insb
jle
mov
pop
mov
pop
aaa
iret
sbb
daa
or
les
cli
jge
and
add
push
mov
mov
fimull
push
pop
aad
sbb
int
inc
add
adc
or
sbb
xchg
push
in
test
jmp
test
imulb
out
push
in
dec
adc
loop
mov
inc
xchg
or
jp
push
inc
scas
jae
lds
lret
push
jge
add
loope
xor
out
loop
mov
loop
shll
test
cmp
push
loope
pop
mov
mov
shl
push
push
popf
repnz
xor
fstl
aam
cmp
imul
sub
add
xchg
decb
jecxz
pushf
or
fsubr
inc
fstpt
repnz
jecxz,pn
sbb
cwtl
jl
leave
imul
push
push
cmp
jne
and
es
or
pushl
iret
push
mov
or
lcall
adc
inc
lea
and
loop
repnz
enter
mov
iret
sbb
movsl
sbb
sub
popa
dec
leave
push
int3
outsl
push
dec
or
xor
enter
mov
pop
or
frstor
push
mov
mov
iret
aaa
cmp
sbb
ss
fmulp
xor
es
icebp
mov
adc
sub
fnstsw
sti
jne
mov
jge
stc
icebp
int3
movd
stos
push
jg
in
jl
jne
fwait
imulb
pop
mov
mov
imul
xor
fmull
dec
fcmovnu
inc
into
or
cmp
and
leave
sbb
adc
pop
sub
inc
push
add
je
sub
fs
aas
xchg
ja
adc
mov
push
jo
dec
int3
sti
inc
jl
popf
add
cmp
std
fmuls
xor
ljmp
pop
xchg
xchg
imul
xor
call
dec
xchg
shlb
dec
in
dec
sub
push
xchg
sub
loop
rclb
dec
sub
es
out
add
xchg
pop
or
fs
mov
push
adc
xor
mov
cs
sbb
nop
and
stos
pop
mov
dec
ficoml
jo
jecxz
aas
ret
mov
mov
clc
push
inc
mov
std
stos
jl
adc
cmp
ljmp
subl
in
dec
repnz
inc
fcmovu
aas
das
pcmpgtw
jg
inc
negb
pop
push
imulb
pop
dec
shl
pop
cltd
jecxz
neg
xchg
imulb
and
jne
arpl
xchg
fildl
repz
imul
out
popf
mov
cmp
add
pop
pop
sbb
sub
scas
mov
out
fisttps
push
pop
cli
sub
xor
or
cmpsb
mov
sbb
pop
in
cvtdq2ps
xor
ja
pushf
jl
bound
stos
in
pop
iret
dec
mov
xchg
mov
test
and
fisubrl
mov
mov
ljmp
cmp
xor
add
fcmovu
pop
jp
mov
mov
sub
int3
jb
adc
cli
dec
shrb
push
lret
lret
jge
add
jb
dec
adc
dec
push
scas
sarb
lret
mov
adc
scas
data16
pop
pop
in
sbb
inc
xchg
pop
pop
push
and
ret
iret
sbb
or
cli
out
and
pop
movsl
stos
loope
sub
mov
shrb
mov
and
pop
and
in
mov
orb
in
pop
in
arpl
lret
or
mov
cmp
add
dec
pop
push
pusha
or
or
push
jge
fprem1
inc
shrl
jmp
adc
fsubs
in
frstor
or
fmull
das
xor
jbe
cs
ror
dec
ds
jge
or
xor
xchg
lock
push
ljmp
add
pop
pop
ljmp
inc
adc
sti
fcmovnu
insl
add
dec
out
push
cli
xor
sbb
out
nop
jb
jo
test
jl
xor
mov
xor
rorb
ds
adc
push
add
cli
cli
jl
cwtl
test
ffree
or
or
mov
sbb
push
mov
loop
mov
and
test
aas
dec
mov
rcll
push
std
lret
cwtl
sub
cmp
int3
scas
cmp
call
xor
sbb
or
add
jl
sub
mov
xchg
sti
push
push
rcr
mov
pop
fildll
int3
adc
mov
cmp
pop
sub
cmp
stc
add
call
push
or
xchg
xchg
pop
pop
push
nop
int3
adc
push
setl
mov
xor
mov
mov
adc
rol
jbe
jecxz
ljmp
and
jns
sub
push
or
dec
sub
cmpb
push
mov
sub
pop
mov
stos
xor
ljmp
sbb
jge
inc
fnstsw
pop
xchg
xchg
push
add
popf
push
int3
fcmovne
inc
movsl
push
fdivrs
lret
jbe
jecxz
int3
sub
or
cmp
mov
fimull
subw
dec
and
jg
add
outsl
mov
pop
mov
jge
stc
das
sbb
sahf
icebp
mov
inc
mov
dec
pop
inc
cwtl
ret
ss
in
xor
mov
idiv
push
cmp
dec
dec
in
add
rcrl
in
shrl
jmp
dec
pop
hlt
int
mov
mulb
sbb
jo
fucom
jmp
sbb
cmpl
jb
out
and
pop
fiadds
shl
pop
pop
out
aaa
scas
mov
pusha
or
xchg
into
sbb
dec
jne
fistpl
push
int3
sub
into
cmpsb
rol
pop
movsl
adc
jno
nop
cmpsb
sbb
int3
pop
fisubl
or
push
inc
jb
xchg
fbld
dec
fiaddl
sub
mov
fisttpl
adc
es
cltd
ljmp
push
mov
cmc
das
fldpi
sti
dec
lcall
js
mov
dec
push
rolb
jl
shrb
dec
out
outsl
sbb
dec
dec
push
xchg
in
sti
push
jae
mov
sub
les
sbb
outsl
cli
repnz
loop
pop
add
pop
or
pop
sub
dec
movsl
mov
xlat
adc
enter
dec
outsl
xor
fldcw
bound
add
fwait
lea
mov
lret
add
sbb
loop
shlb
jle
in
push
sub
repnz
cmp
fcmovne
ss
int
xchg
pop
sub
sbb
sbb
lods
cltd
mov
mov
bnd
push
hlt
pop
fdiv
int
and
sahf
add
movsb
xchg
push
cmp
scas
lea
ficoml
imul
pop
sti
cmpsb
adc
fsubrl
es
push
dec
push
jecxz
scas
pop
xchg
rorb
lret
adc
sub
or
or
xchg
ljmp
in
fmull
insl
pop
pop
addr16
cmc
lock
cli
adc
int3
repnz
fimuls
sbb
push
xor
popa
pop
push
int
adc
mov
push
pop
mov
fisubrs
into
xchg
and
pop
into
inc
arpl
mov
fmul
dec
pop
pop
inc
mov
and
sbb
fwait
ljmp
lods
add
xchg
test
or
and
sub
mov
fwait
xlat
fistl
seta
xchg
pop
pop
pop
stos
insb
repz
pop
ja
sub
push
cmp
push
sarb
sbb
pop
jmp
lock
scas
jne
rorl
adc
ret
jle
das
daa
aad
lahf
dec
or
lcall
int3
xchg
cmp
cmc
or
xchg
lcall
mov
les
sub
add
das
xchg
adc
in
shl
lods
push
xchg
lcall
int
cmp
sahf
cwtl
push
repz
or
sub
inc
sub
adc
mov
out
int3
jp
jl
pop
sub
sbb
adc
add
sub
in
mov
das
das
pop
jmp
pop
sbb
js
mov
sub
pop
push
in
loopne
pop
pop
imulb
fisttpl
xor
jge
repz
daa
rclb
xchg
mov
js
push
clc
cmpsl
sar
out
dec
or
lods
repnz
xchg
xlat
sub
or
sbb
adc
movsl
popa
xor
adc
adc
sub
popa
inc
addr16
pop
adc
punpcklbw
scas
jno
pop
test
xchg
cmc
arpl
dec
xchg
dec
or
aam
push
jae
pop
aas
push
add
mov
pop
or
out
jb
pop
lods
ljmp
rcll
push
xchg
pop
ret
lret
and
add
movsl
xorb
sbb
jp
or
sub
cmp
or
mov
sub
orl
mov
in
cmp
sar
jg
jnp
inc
lods
cltd
lods
adc
lcall
ret
and
mov
icebp
inc
push
add
mov
cli
sbb
das
lods
mov
add
fcomps
mov
sub
fiadds
xchg
repnz
inc
xchg
jo
call
cltd
mov
imul
test
bound
mov
scas
add
mov
xor
jbe
pushf
pushf
sbb
faddp
push
push
pop
push
pushf
pop
out
jne
pop
or
stc
mov
mov
insb
inc
push
rcrl
andb
lcall
pop
in
lret
jmp
cmp
cmp
fwait
mov
nop
cmp
leave
jb
mov
clc
pop
push
iret
out
adc
scas
jmp
aas
jo
pop
pop
fidivrs
mov
add
dec
lret
das
outsb
in
lret
dec
out
ljmp
or
adc
sbb
and
loop
xlat
or
dec
jne
stos
mov
push
jmp
or
xor
out
lcall
jge
xor
pop
in
rol
pop
sbb
int3
inc
jg
movsb
adc
pop
add
cs
pop
aam
int
es
scas
sbb
adc
mov
fdiv
push
and
or
imul
out
lods
jl
sbb
or
iret
shrl
insb
stos
mov
xor
in
sbb
scas
cltd
int3
pop
xchg
push
bound
mov
clc
mov
cmp
insb
xlat
sub
dec
jmp
pop
sbb
cwtl
aad
lret
mov
jne
mov
cmp
mov
inc
out
int
pop
cmp
jb
sti
pop
mov
dec
int
decb
sub
xchg
push
sub
jp
pop
sbb
jb
jge,pn
bound
dec
xor
or
repz
xchg
stc
sti
inc
mov
cmp
add
mov
dec
into
stc
dec
lds
adc
cmp
fidivl
jnp
ss
and
clc
lods
xor
cmp
stc
mov
in
sbb
and
sbb
rcrb
sbb
div
pop
cmp
leave
cmp
cmp
arpl
mov
push
push
pop
mov
lock
dec
mov
or
mov
push
lock
sub
sbb
dec
into
test
rcr
mov
subb
lahf
mov
mov
rolb
cli
push
fcmovu
lds
scas
mov
pop
jb
xchg
outsb
mov
jb
callw
sahf
push
outsl
adc
ljmp
test
adc
fwait
cmp
fcoml
fwait
cs
cltd
icebp
sub
xchg
inc
loope
jno
adc
push
mov
lcall
jmp
adcl
mov
xchg
repnz
dec
jle
mov
xchg
push
lods
push
pop
mov
andb
sbb
mov
into
out
addb
cmc
push
jp
mov
push
push
and
jg,pt
pusha
test
sbb
mov
adc
fbstp
icebp
ljmp
dec
ror
xor
gs
inc
or
push
cmp
fistps
xchg
rep
xor
inc
push
scas
add
or
popf
nop
adc
imul
mov
add
xchg
mov
jns
lret
push
in
shlb
mov
push
jg
inc
cs
push
xchg
mov
call
push
mov
push
push
push
pop
enter
ret
in
mov
loopne
mov
sbb
mov
ja
cs
add
movsl
xor
lret
sub
push
imul
mov
inc
or
rcll
push
outsb
js
pop
leave
mov
sbb
push
or
fisubrl
jno
sbb
sti
nop
mov
fadds
popf
jno
dec
insb
in
outsb
mov
mov
scas
stos
insb
xchg
aad
popf
cs
punpckhdq
push
mov
sub
add
sub
ljmp
xchg
xlat
mov
sub
and
outsl
push
xor
nop
cmp
jmp
sub
mov
push
cmp
mov
daa
jmp
pop
pop
incb
and
jb
jle
xchg
xlat
fwait
mov
rcr
pop
mov
pop
mov
pushl
decb
popf
int
leave
mov
add
cmc
fisubrl
std
add
push
mov
inc
dec
lret
add
or
cmpl
sub
mov
pop
stos
mov
lods
call
repnz
in
dec
xchg
cmp
xor
push
ret
and
ret
pushf
mov
jmp
call
or
mov
push
mov
push
adc
or
xchg
scas
lods
cmp
loopne
jp
adc
cmp
push
sti
jl
and
pop
pushf
and
in
in
popf
ror
imulb
and
jo
push
cmpsl
push
inc
aas
pop
pusha
mov
bound
dec
cwtl
mov
pop
daa
and
sbb
push
mov
and
pop
data16
jns
fmuls
fdivl
xchg
sbb
rcr
test
lock
aas
cld
push
and
sbb
cs
stos
stos
stc
ljmp
mov
or
notl
push
and
stc
aas
pop
sbb
sub
cld
cmp
pushf
and
sbb
xor
sub
jl
mov
dec
fsubl
mov
cs
inc
push
inc
inc
insl
fsubr
adc
sti
push
sub
scas
push
icebp
mov
adc
sbb
into
aam
addr16
xchg
sub
mov
iret
mov
iret
pop
dec
push
clc
in
lret
and
pop
out
out
out
and
sub
and
mov
xor
jns
fstl
mov
xor
mov
push
push
add
push
and
leave
sbb
sbb
push
xor
sub
or
mov
jns
pop
and
xor
int3
sub
ret
adc
sbb
jp
loopne
dec
sarb
in
sti
inc
mov
imul
in
ljmp
fdivrs
fndisi(8087
stos
push
sbb
sub
int3
push
ljmp
add
adc
or
dec
jo
shrb
dec
insl
jo
loopne
lret
jg
test
pop
shl
repnz
mov
ds
jecxz
mov
sub
mov
mov
loop
cmp
sbb
ret
mov
cmc
lock
inc
int3
sarb
mov
mov
imul
imul
out
or
out
jge
divb
xlat
or
fdivr
dec
imull
fnstcw
xorb
daa
ljmp
lret
xchg
mov
in
xor
adc
xlat
and
mov
in
arpl
or
cli
and
dec
imul
cmp
ficomps
arpl
pop
xchg
imul
pop
ja
aam
mov
pop
push
jo
xchg
mov
mov
imul
xchg
std
or
push
and
out
mov
outsb
fidivrs
dec
frstor
lret
or
jae
into
pop
mulb
fisubrs
cltd
cli
mov
dec
xchg
mov
imul
scas
pop
pop
in
icebp
xlat
call
outsl
sbb
cli
or
into
and
dec
in
mov
shr
das
cmp
icebp
in
in
aam
and
add
and
pop
jmp
dec
add
or
loopne
and
icebp
ss
pop
scas
cwtl
imul
and
push
rolb
or
int3
lods
and
pop
and
inc
pop
in
aam
or
sbb
pop
pop
mov
pop
xchg
rolb
insb
pop
mov
mov
pop
mov
jmp
adc
lahf
fld
and
into
push
dec
mov
cli
scas
jb
pop
inc
mov
into
push
pop
cmpsl
mov
into
push
imul
sub
sbb
and
or
jl
mov
push
leave
adc
or
test
push
xchg
test
arpl
push
out
push
addr16
dec
push
cmc
int
mov
insl
es
testl
nop
out
dec
cli
mov
jmp
adc
jge
push
sub
nop
negb
ficoml
test
lret
ja
xchg
jl
xlat
mov
dec
fisubrl
decb
adc
ljmp
insb
jne
shll
pop
jae
das
jecxz
call
fsub
mov
add
dec
xor
add
gs
sub
js
call
or
lcall
pop
adc
lret
dec
mov
dec
stos
iret
iret
push
sbb
test
fidivrs
xlat
enter
sbb
andl
or
jbe
mov
push
pusha
mov
int
les
pusha
sbb
dec
filds
xchg
sub
mov
movsl
das
addr16
add
adc
dec
hlt
xchg
lahf
jmp
pop
cmpsl
mov
mov
jge
mov
aas
adc
xor
sbb
adc
cmp
int
mov
loope
stos
leave
outsb
inc
push
pop
daa
push
enter
out
pop
or
xchg
xchg
sbb
push
add
repnz
inc
aas
sbb
out
sub
dec
movsb
pop
push
ficompl
dec
je
sbb
loope
jp
dec
inc
inc
ficoml
loop
ficoml
fwait
aas
and
push
or
xchg
mov
repz
pop
adc
cmp
cmp
lcall
cmp
push
lea
test
dec
ljmp
mov
mov
roll
adc
iret
inc
negb
lret
scas
sbb
out
leave
bound
or
mov
stos
sbb
lods
mov
jae
mov
push
push
movsb
test
icebp
stos
push
mov
mov
mov
loop
mov
fiadds
pop
or
into
cmp
inc
inc
add
lret
cmp
push
or
int
sub
push
adc
pop
inc
mov
cmp
ljmp
push
aad
jmp
mov
push
lea
cmp
or
ss
jns
xor
jg
adc
sbb
mov
pop
cmp
fidivl
push
int
push
adc
imul
mov
pop
add
lcall
lahf
imul
scas
push
gs
lock
int
repnz
adc
or
xor
mov
pop
cli
push
pop
sbb
xchg
xor
ss
push
scas
shlb
xor
sub
jge
aad
dec
mov
fidivrl
loop
cli
push
jge
jp
mov
xchg
jb
lea
mov
lcall
ss
push
pop
push
int
dec
push
into
rorb
repz
cmp
ljmp
incb
xchg
les
fimull
xlat
insl
mov
bnd
cld
outsb
cmp
mov
sbb
lahf
ja
and
lods
cmp
mov
xor
cmp
lret
push
push
fstpl
mov
jge
xchg
jp
cmp
pop
mov
xchg
mov
out
pop
hlt
ss
mov
xor
push
add
mov
clc
pop
lahf
adc
sbb
push
into
push
sub
push
fnstcw
cmp
sbb
imul
rcr
lret
push
fsubr
stc
and
fsts
push
mov
int3
dec
scas
cmpl
pushf
add
jo
jg
loop
les
push
mov
dec
cmp
sub
iret
rolb
or
ret
dec
mov
shll
stos
mov
lfs
ja
add
scas
inc
int3
call
push
jle
stos
mov
mov
int
lret
subb
stos
xlat
fsubrl
mov
ljmp
fsubr
loop
into
pushf
mov
shlb
xchg
lcall
mov
fstpl
cmp
push
xor
iret
dec
pop
fidivrl
adc
rorb
es
dec
pop
sti
xor
outsl
cmp
mov
dec
mov
jle
repnz
push
sub
insl
aas
setns
jp
adc
sbb
mov
push
dec
inc
loopne
push
daa
mov
in
ficoml
pop
mov
outsb
xchg
pop
pop
mov
push
and
lea
cmc
dec
out
jmp
lahf
lods
fsts
sarl
ljmp
inc
js
aad
sbb
clc
push
lret
bound
jmp
in
out
mov
jnp
loop
insl
cli
and
repnz
xchg
sub
or
xor
call
ljmp
out
cwtl
mov
ret
add
pop
jle
jp
jb
mov
mov
or
shll
or
into
or
mov
jbe
xchg
xchg
push
out
lea
xchg
pop
stos
cs
sbb
shll
push
imul
test
fisubrl
or
sub
push
jb
lods
out
lods
or
outsb
push
xchg
fbstp
js
dec
jg
test
ficomps
cmp
rcr
movsl
push
jne
inc
mov
inc
cwtl
inc
and
dec
movsb
push
lret
loopne
xchg
testl
or
jmp
fdivrl
dec
repnz
adc
dec
into
stos
jle
or
adc
pop
sub
dec
dec
dec
mov
and
sbb
std
iret
or
aad
ljmp
test
or
or
iret
aad
xchg
fcoml
cs
mov
lahf
add
and
inc
sub
push
sub
jmp
ss
mov
data16
das
push
cmp
leave
jl
enter
mov
rcr
dec
and
shl
stc
and
adc
scas
cmp
jg
cli
pop
aad
in
divl
lods
insb
enter
das
jno
mov
push
cmp
out
mov
mov
sub
leave
rclb
rolb
fidivs
outsl
xlat
lds
sub
in
cld
pop
mov
popf
jp
cs
adc
lahf
dec
jp
mov
add
push
dec
xor
leave
bound
mov
arpl
in
dec
ljmp
scas
add
add
in
fstl
pop
adc
das
pop
rolb
or
aas
loopne
out
pop
in
out
mov
dec
mov
lds
stos
scas
add
es
in
pop
jmp
jg
xchg
and
sub
bt
arpl
push
cmp
push
shll
add
dec
jne
inc
lret
pop
cltd
inc
fucomi
lea
data16
mov
fsts
repnz
bswap
lds
jb
adc
inc
lcall
testb
jp
push
bound
push
fmul
ljmp
addb
jle
mov
test
mov
stos
or
jge
mov
or
test
push
andb
sahf
dec
out
sub
mov
mov
shr
mov
loop
xchg
enter
inc
jl
cmc
outsb
mov
ficompl
jmp
ljmp
in
push
push
shll
add
and
jp
inc
dec
sahf
lret
add
test
sbb
pop
mov
pop
shl
out
mov
push
pop
pop
inc
jb
lcall
bound
repnz
scas
mov
test
add
jge
pop
pop
pop
fsubs
jmp
scas
adc
sbb
dec
in
dec
sbbb
lea
pop
fwait
xor
aam
outsl
add
mov
cmc
sbb
push
ss
js,pt
adc
pop
idivl
out
iret
jns
loop
fcompl
mov
mov
lret
mov
call
dec
stos
jbe
push
and
mov
cmpsb
cltd
sahf
fst
std
lar
dec
mov
add
divl
int3
cli
in
stos
rcl
and
int3
push
push
lods
cmp
pop
push
stc
daa
fildll
fdivrp
in
xchg
adc
outsb
push
cmp
or
scas
fnclex
adc
or
jecxz
cmp
push
sub
mov
in
jbe
add
std
iret
stc
adc
fidivrs
cli
mov
outsl
in
je
add
cli
xor
aas
jp
mov
mov
adcb
insb
movsl
sbb
testl
ljmp
mov
lahf
mov
popf
push
cmp
das
push
mov
push
cld
dec
pop
add
icebp
pop
xchg
xchg
push
dec
out
addr16
mov
jecxz
sbb
cmpsl
int3
lds
xor
adc
mov
fidivs
int3
or
cmp
cmc
xchg
outsl
inc
fwait
sub
rorb
jp
pop
sbb
mov
or
mov
jg
or
in
fs
pop
adc
dec
out
adc
xchg
lahf
xchg
adc
lcall
out
pop
adc
stc
mov
fwait
sbb
mov
int3
cld
mov
or
pop
aas
sbb
stos
iret
fcmovbe
sbb
hlt
cli
xchg
mov
adc
iret
sbb
in
dec
mov
xchg
dec
and
dec
sbb
aas
sti
or
push
xor
mov
lds
xchg
mov
add
push
ljmp
pop
ljmp
cmc
push
push
orl
mov
scas
cwtl
jge
xlat
mov
cmpsb
lds
mov
inc
fimuls
mov
dec
sub
fisttpll
xchg
cmp
sar
mov
insb
mov
enter
pop
out
dec
and
lret
add
andl
imul
push
mov
sbb
das
out
loopne
stos
fwait
or
imul
cmpsb
cli
fdivl
frstor
shrl
lods
push
pop
jp
rdtsc
jg
or
sub
shrb
out
pop
int
jo
cli
enter
dec
sbb
inc
sti
mov
dec
push
jge
mov
cmpb
movsb
push
jmp
stos
repz
adc
dec
sbb
dec
mov
xor
jecxz
dec
lret
mov
add
mov
mov
fmuls
cmp
ucomiss
sahf
into
sub
out
mov
fistpll
dec
testb
mov
add
out
mov
adc
mov
mov
dec
lcall
lcall
jge
xchg
cltd
inc
insb
fdivrp
adc
push
aaa
dec
movsb
test
jmp
dec
pop
ss
or
test
mov
mov
aam
or
mov
imul
xor
mov
loopne
push
pop
dec
inc
ljmp
adc
adc
jp
xchg
xchg
insb
adc
push
out
xchg
fistl
push
dec
add
dec
jl
cmpsl
mov
mov
dec
fwait
jle
test
leave
stos
in
adc
xor
hlt
jmp
rcl
or
sbb
mov
mov
mov
or
xlat
inc
cld
mov
leave
rcll
pop
mov
addr16
pushf
cmp
jo
dec
stc
scas
iret
pop
or
pop
cmp
xchg
xlat
sub
jo
dec
jmp
or
or
cmp
int3
dec
fisubrl
mov
loop
das
and
sbbb
lds
loopne
aaa
movsl
and
mov
call
dec
stc
sub
jae
xor
jmp
jne
lret
xchg
scas
rcll
jge
mov
int
mov
lret
jg
push
push
repz
push
xorl
push
stc
or
dec
fcmovb
int3
dec
pop
mov
xchg
push
jbe
xor
pop
jecxz
sti
jmp
adc
pop
mov
pop
mov
xor
or
sbb
adc
sub
stos
popa
and
scas
lret
iret
add
xor
lret
or
arpl
out
mov
lret
cmp
jl
add
leave
pop
clc
pop
mull
sub
aad
mov
mov
call
mov
mov
cld
xchg
stc
xchg
mov
sbb
push
mov
mov
pop
push
pop
adc
fcom
arpl
pop
sbb
push
pusha
mov
mov
into
adc
mov
or
loopne
dec
insl
gs
xor
or
outsb
jne
scas
mov
pop
scas
arpl
stc
add
scas
jle
adc
pop
hlt
push
aam
jl
outsl
or
xchg
and
scas
pushf
fdivr
mov
cmp
stos
push
bound
enter
or
sub
stc
pop
into
jge
adc
dec
push
mov
mov
mov
xchg
xchg
dec
or
shrl
outsb
and
hlt
test
test
mov
pop
sub
lcall
and
orb
dec
sub
dec
arpl
mov
in
and
cmp
scas
aaa
ror
push
cld
mov
xchg
pop
jp
idivl
xchg
xor
add
lods
cmp
clc
frndint
mov
sbb
jg
dec
out
dec
pop
iret
dec
push
xchg
mov
jl
mov
lret
bound
fisttpl
and
inc
xchg
popa
fsubrs
xor
dec
mov
in
loop
dec
push
addr16
jb
icebp
scas
sub
das
addr16
mov
mov
test
sub
adc
cmp
outsl
mov
add
or
mov
push
jmp
push
inc
dec
dec
in
mov
inc
fldcw
cmp
jle
jmp
push
pop
mov
lea
sarl
jbe
fnsave
adc
and
push
pop
test
dec
or
fs
int3
ficoms
xchg
mov
jge
jbe
cmp
das
fstpl
push
mov
add
cmp
sub
sbb
and
in
push
or
inc
scas
in
jmp
iret
out
lock
ror
adc
and
outsb
int
jp
aas
pop
popa
fwait
leave
into
outsl
lcall
lea
shrb
int3
and
rorl
out
rcll
xchg
repnz
mov
nop
notl
sbb
or
jbe
div
sbb
fists
jb
pushfw
mov
and
jno
jne
lahf
cmp
outsb
or
sub
inc
das
mov
inc
jb
fsubs
insl
mov
lret
outsl
push
lret
into
inc
and
shlb
iret
jge
jmp
pop
sbb
clc
dec
push
gs
mov
jg
mov
fisttpll
lods
out
or
jmp
pop
lods
xor
inc
repnz
push
outsb
cs
push
das
pop
mov
aas
mov
pop
or
andb
push
movsl
dec
fistpl
sbbb
imul
cli
inc
push
ja
lcall
aaa
movsl
testb
ja
bound
andb
cli
out
sub
leave
cmp
push
aaa
orb
out
cld
and
jmp
pop
addr16
shlb
cmp
adc
sbb
ror
shll
lea
inc
jle
push
push
jmp
pop
lds
dec
loop
dec
xor
scas
fimull
push
test
add
jp
push
xor
clc
mov
push
mov
fwait
sbbb
out
mov
dec
jmp
into
pushf
loop
mov
or
jae
dec
xor
dec
paddd
jmp
jns
xchg
dec
mov
ljmp
xor
int3
sub
mov
pop
and
sti
inc
sub
jmp
adc
mov
jo
js
sbb
sub
iret
frstor
jge
cmp
sub
cmp
imulb
sub
or
bound
cmpsl
cs
or
data16
push
stc
mov
jo
jp
daa
pop
or
lods
in
push
mov
lret
sub
dec
loope
adc
das
inc
sbb
call
add
fwait
inc
inc
inc
mov
adc
mov
and
aas
cwtl
rorl
and
aas
push
movsl
mov
iret
xchg
and
inc
mov
repnz
lret
pop
sub
insl
out
push
push
loope
fstpt
ljmp
int3
fisttpll
jge
mov
das
adc
scas
jns
or
lahf
mov
lds
cmp
mov
pop
adc
bound
inc
sub
cld
in
sub
inc
sbb
pop
lods
mov
repz
or
cmp
mov
or
fisubs
int3
pop
mov
adc
pop
sbb
jns
test
ljmp
lahf
xchg
adc
push
jnp
insl
pop
inc
sti
dec
mov
pop
stc
dec
lods
icebp
or
jbe
movsb
into
test
outsb
cmp
pop
out
and
insb
fstp
dec
mov
xor
lret
push
cmc
cmpsl
push
sbb
cmp
out
jo
inc
or
inc
daa
push
dec
repnz
sub
lock
adc
xor
lahf
pop
lret
sub
push
mov
pop
bswap
xchg
and
and
sub
sbb
popa
sbb
adc
aaa
push
jno
repz
loopne
or
rcrb
lods
cmp
pop
push
mov
push
mov
pushf
lock
mov
lods
lahf
inc
xor
pop
arpl
dec
adc
ss
add
lcall
pop
and
jnp
lcall
aad
fisubrl
test
repnz
lret
jle
ds
out
loop
or
stos
and
fidivl
pop
and
insb
pop
mov
sbb
pop
out
stos
cli
pop
ja
rcr
mov
stos
adc
adc
in
ljmp
rclb
inc
push
movsl
push
fcom
sub
int3
sbb
pop
cwtl
leave
and
jno
std
int3
adc
je
stos
mov
sbb
lcall
sub
adc
inc
inc
ljmp
rorb
push
sarl
push
lds
push
rclb
lods
adc
pop
adc
ljmp
inc
ret
sti
dec
mov
nop
fsubr
mov
ret
hlt
mov
xchg
sbb
out
mov
jle
sub
in
xchg
jb
push
js
loop
push
mov
ljmp
add
ret
sti
jo
lds
mov
push
mov
mov
mov
dec
pop
ja
mov
hlt
mov
test
sbb
fisttpl
xor
jp
add
pop
mov
in
gs
pop
add
mov
xor
mov
mov
stos
pop
mov
jp
into
fs
jbe
lds
xchg
and
bound
loope
ljmp
sbbb
gs
ljmp
fisubrl
daa
enter
test
fnsetpm(287
cmc
movsb
jge
aas
add
inc
aas
jmp
mov
sub
xchg
push
scas
push
or
adc
aam
jo
mov
jbe
fsubs
cmp
test
pusha
in
push
pop
xchg
lock
fadd
pop
movsb
dec
mov
int
and
mov
adc
ja
test
xor
imul
bound
push
cmp
shlb
rcrb
call
or
inc
clc
and
push
mov
cmp
mov
arpl
mov
fbld
fildl
mov
add
mov
pop
lret
cmp
pop
push
lret
shlb
cli
mov
adc
dec
pop
fmull
sub
xchg
dec
outsb
or
cmp
bound
add
pop
dec
jecxz
sbb
outsl
in
push
sbb
fdivs
fsub
and
lret
dec
int3
xchg
push
jl
mov
pop
movsb
clc
lahf
lret
jno
mov
sub
pop
pop
xchg
adc
push
sub
imull
scas
insl
popf
aad
push
movsb
daa
fisubs
mov
or
mov
mov
lcall
roll
or
adc
mov
sahf
mov
or
mov
pop
ljmp
cwtl
scas
sbb
fstpt
pop
pop
pop
aad
ja
sbb
clc
int3
mov
push
jp
bound
jl,pn
mov
icebp
adc
push
push
mov
insb
or
mov
dec
into
lds
inc
imul
je
cwtl
rcl
scas
fmuls
xchg
inc
rcl
mov
enter
and
pop
and
stos
fsub
leave
fnsave
pop
iret
inc
sub
ljmp
addr16
push
lock
imul
adc
popa
fcomp
leave
mulb
imul
shrl
push
and
push
sbb
lret
sbb
dec
stos
sahf
mov
sbb
pop
jge
cwtl
cli
das
aas
add
stc
push
cltd
sub
ret
mov
scas
pop
lahf
jp
pop
fwait
inc
in
test
pop
cli
xchg
fcmovnu
add
outsb
aad
push
into
push
pop
mov
sbb
pop
addl
int
or
mov
sbb
ljmp
test
pop
aas
cs
scas
jo,pn
and
notb
lock
pop
rolb
fimuls
or
sti
stc
sbb
or
andl
lods
arpl
lcall
pusha
iret
sbb
and
arpl
or
xchg
out
lret
add
sbb
xor
adc
ret
js
mov
sub
das
sahf
es
adc
fidivl
filds
xchg
in
lock
in
aad
xchg
mov
dec
mov
xchg
das
loope
adcb
cmp
pop
icebp
sbb
push
xor
add
dec
xor
or
cmc
iret
pushf
mov
into
pop
mov
test
leave
push
fldenv
testb
or
fprem
xchg
jecxz
and
jns
das
push
inc
cmp
and
cmp
iret
sbb
jo
daa
push
adc
xchg
pop
dec
or
or
mov
ret
adc
xor
leave
stos
int
dec
dec
in
cld
je
testl
mov
or
loope
or
sbb
imul
jge
or
add
dec
stc
out
imul
adc
in
test
mov
shll
shll
mov
pop
push
faddl
loope
push
xchg
cli
cwtl
cmp
mov
leave
ljmp
pop
or
sub
lock
mov
cmp
pop
mov
push
hlt
xor
pop
jge
or
js
adc
push
out
movsl
jmp
in
sub
adc
fnop
mov
mov
push
iret
out
cli
jnp
push
dec
int
outsl
pop
out
add
arpl
pop
movsl
stc
lret
imulb
dec
dec
fnsave
fsub
pop
cs
or
rcrl
sub
lods
dec
fists
sub
sbb
adc
pop
aaa
lret
dec
pop
mov
dec
in
jmp
push
jnp
push
rcl
mov
xchg
or
sbb
inc
js
aas
in
xor
mov
adc
jl
or
outsb
pop
je
add
int3
addr16
or
pop
out
dec
aam
mov
lahf
push
iret
xchg
imul
or
and
das
nopl
pop
cmp
scas
ret
xchg
pop
mov
inc
cs
sbb
and
cli
in
sub
out
mov
shrl
pop
fs
das
iret
mov
out
cltd
jns
sub
cli
jns
xchg
clc
shll
rcr
fistpll
inc
mov
xchg
jg
jmp
pushf
jp
in
mov
inc
and
pop
jmp
lret
mov
sbb
jno
repnz
lahf
in
test
icebp
mov
dec
divb
lahf
imul
cmpsl
movsl
or
addl
in
jge
cmpsl
jno
mov
aaa
cmp
jle
cmp
and
and
xchg
out
or
and
shl
aas
inc
or
sahf
aam
mov
ret
dec
dec
test
inc
xchg
sbb
xor
test
bound
push
dec
dec
pop
roll
mov
out
rorl
lods
cmp
stc
cltd
imul
jp
bound
fwait
dec
jnp
pop
or
mov
into
jno
inc
scas
lret
pushf
push
mov
pop
jge
sahf
das
cld
lret
scas
into
mov
xchg
decl
sub
xor
aas
push
mov
inc
mov
adc
fs
pminsw
outsl
jb
mov
jg
lcall
sti
call
push
and
xchg
pop
dec
daa
test
hlt
push
mov
popf
movsl
mov
divl
sub
loop
leave
bound
repnz
jns
xchg
and
andb
jb
test
push
sahf
cmp
push
pop
fimuls
cmp
mov
insl
ret
fisttpl
mov
add
sbb
cmp
pop
jmp
or
dec
mov
cwtl
in
test
mov
subl
mov
mov
jp
mull
stos
daa
clc
ret
fs
push
fisttpll
fcmove
or
push
push
inc
pop
jno
adc
mov
pop
test
dec
mov
cmp
jp
sbb
cs
inc
adc
loop
lock
pusha
fsubrp
push
lods
push
iret
int3
imul
fwait
push
dec
sbb
mov
out
pop
orb
lret
fwait
cld
lods
repz
cmp
mov
push
sahf
push
mov
dec
inc
and
test
mov
data16
push
mov
fidivrl
xchg
hlt
mul
mov
mov
push
iret
faddl
pop
shlb
loop
jns
sbb
icebp
sarb
int3
pop
ficoml
cmpl
std
adc
xchg
lods
in
mov
rorl
ret
adc
mov
fwait
mov
and
dec
xor
ret
mov
sbb
loopne
lods
test
pop
and
shlb
loop
or
mov
adc
mov
sarb
xchg
jge
mov
and
mov
sbb
and
psubb
xchg
ret
das
inc
sub
xchg
popa
jb
mov
xchg
or
in
stc
mov
xor
dec
cltd
gs
imul
mov
fmull
jmp
into
xor
cli
mov
addr16
fmull
fcoml
or
arpl
mov
int
cli
push
outsl
sbb
addr16
int
dec
add
mov
inc
out
xchg
cmp
movsb
jle
clc
popf
pusha
jle
lods
add
sub
push
mov
shll
pop
cld
negb
loop
rcl
xor
je
push
in
mov
sub
push
inc
hlt
jle
xchg
mov
dec
and
ljmp
pop
das
insb
and
pop
mov
cmpb
sbb
stos
dec
mov
insl
and
mov
and
sub
jp
in
push
repz
or
cli
mov
ss
insb
dec
mov
sbb
sbb
dec
jmp
xor
sub
out
dec
cltd
add
fstpl
jns
cmpsb
inc
pop
rcrl
ljmp
pop
and
mov
dec
mov
rcll
or
push
test
mov
or
es
lods
sub
in
js
imul
sar
cmp
sub
stos
sbb
push
inc
inc
fisubrl
xchg
xchg
jmp
cwtl
fimuls
push
jle
dec
js
scas
cwtl
cmp
mov
cld
inc
mov
ret
popf
imul
test
ja
je
clc
or
cmp
xor
push
push
push
stos
jbe
lret
xchg
mov
mov
sbb
inc
add
leave
sbb
aad
jo
lret
jge
scas
ljmp
add
hlt
leave
mov
push
xor
nop
inc
dec
adc
dec
sub
sti
mov
mov
xchg
lcall
lret
movsb
out
push
nop
addr16
lods
pop
shr
add
mov
dec
mov
sbb
lret
jg
clc
leave
insl
in
or
das
aas
out
add
lods
fwait
cli
data16
loop
adc
or
mov
lahf
or
lret
sbb
rcll
outsl
cmp
dec
mov
aam
test
mov
clts
xchg
pop
mov
fcmovbe
pop
inc
xchg
fcmovbe
pop
pop
sub
sub
push
addr16
and
mov
fadds
adc
call
outsl
idivb
jp
push
dec
or
aaa
jo
pop
push
scas
jmp
inc
mov
pop
push
pop
push
mov
call
sub
cmp
or
push
or
push
add
aas
mov
inc
push
push
lea
cmp
ret
ja
mov
dec
fiaddl
inc
cld
bound
add
rcrl
cmp
adc
out
add
pop
xor
mov
adc
add
cmp
add
sbb
stos
jns
adc
sub
sub
in
in
mov
rclb
fisubl
dec
cmp
in
adc
sub
mov
jne
loopne
pop
sub
mov
cmp
push
test
dec
jle
xchg
and
jmp
jnp
or
add
sub
pop
cmp
and
mov
fidivrl
pop
in
xchg
stos
insb
sahf
sarb
xchg
in
ficoms
add
and
into
pop
mov
jl
mulb
jecxz
out
mov
jl
aad
clc
fld
fmul
stos
enter
shlw
jb
fyl2xp1
cmpb
scas
js
jae
cli
jecxz
cli
mov
imul
mov
in
or
popf
jns
aam
das
bound
push
or
dec
stc
inc
fmull
sub
jo
push
xlat
adc
pop
add
shrb
jge
or
jmp
dec
cli
out
fwait
popf
and
mov
jl
les
pop
or
rcll
pop
jg
mov
mov
ja
aas
insb
pop
add
xor
inc
ds
cmp
test
jp
cld
das
call
insb
sbb
inc
lds
movsb
cmp
adc
fs
push
scas
int
jnp
lods
fdiv
imul
repnz
pop
dec
xor
rcrb
adc
cmovo
fldt
xor
jecxz
and
jecxz
aaa
mov
cmp
dec
push
mov
pop
pop
inc
jo
push
lret
daa
iret
gs
pop
cmpsb
xchg
dec
pop
inc
cli
or
xor
fisubl
fdivrl
adc
add
ret
add
cs
js
mov
shrl
and
pop
out
mov
sbb
mov
lods
adc
xchg
pusha
jp
gs
add
cmpsl
rcll
call
push
aaa
fs
jo
cmp
inc
iret
dec
cld
xor
inc
push
xlat
leave
mov
popf
push
adc
pusha
repz
fcmovu
sbb
cmpsb
jne
jmp
insb
cld
jmp
mov
rcrl
fcmovnb
dec
push
into
adc
sub
lock
or
in
mov
xchg
push
icebp
and
dec
sbb
cld
aam
jo
popa
scas
decl
sub
pop
js
sub
out
mov
push
sti
xchg
fcmovb
or
adc
jp
adc
out
and
iret
mov
push
inc
push
shr
dec
lds
inc
sbb
fistpll
push
shll
or
ljmp
das
shl
mov
pop
xchg
sub
mov
add
or
in
inc
pop
cld
sub
jnp
mov
push
mov
aam
ss
or
pushf
aas
or
lods
dec
sbb
outsl
ficompl
or
and
leave
test
jecxz
rorl
push
scas
fnstcw
pop
mov
outsb
mov
mov
mov
sbb
mov
repz
xchg
test
xchg
push
jl
pop
into
mov
mov
add
insl
xor
pop
xchg
push
icebp
pextrw
xor
xor
das
aas
subb
or
sub
lret
pop
paddq
rcr
mov
and
orb
popl
add
push
jge
loope
xchg
shrb
push
std
pop
ret
push
sbb
fcoml
mov
cs
divl
cmp
sbb
jbe
dec
cmp
in
pop
daa
pop
ja
cmp
push
xchg
not
jo
jmp
mov
test
rorl
or
mov
inc
mov
push
cs
sbb
sbb
shrl
mov
and
scas
push
add
jmp
pop
pop
mov
and
mov
inc
dec
xor
push
or
in
or
xchg
into
pop
pop
scas
fwait
enter
pop
sbb
sbb
dec
mov
out
lret
dec
sarl
jne
or
into
push
push
adc
adc
push
or
mov
icebp
fistps
xor
push
mov
int3
add
sub
cld
stos
fcmovne
es
jo
jns
adc
shll
imul
dec
int3
mov
data16
push
out
push
and
add
dec
mov
lret
cmpl
gs
testb
xchg
mov
adcl
push
scas
xchg
jl
mov
mov
movb
mov
push
mov
or
dec
adc
jo
rorb
dec
mov
xchg
sub
out
sbb
jl
sti
out
sbbl
xchg
shl
daa
or
mov
ljmp
repnz
push
pop
fldl
movsb
int
push
movsl
fucomp
mov
cmpsl
popf
or
xor
pop
cmp
sub
fbld
push
daa
rep
test
aas
lahf
cmpsl
out
lods
cmp
dec
dec
push
push
iret
popf
out
jge
jl
adc
pop
cmp
adc
xchg
mov
fidivs
mov
arpl
rcll
mov
insl
or
mov
mov
pop
jle
sub
xchg
jg
adc
pop
aad
adc
fldl
xchg
mov
sarb
into
mov
dec
jle
popa
push
mov
int
rcr
mov
imul
rorl
cld
mov
adc
cs
sub
cltd
lods
add
cmp
mul
push
icebp
xchg
in
cli
int3
and
xlat
shl
adc
cld
cmp
rcr
mov
fstpt
pushl
mov
nop
pop
add
adcb
dec
add
push
stc
clc
pushf
lret
leave
add
mov
xlat
scas
call
jg
cltd
mov
popf
in
lds
hlt
out
jp
fildl
adc
cmpsl
adc
cmp
push
and
insb
sbb
cmp
jmp
sub
pushf
xchg
xchg
add
pusha
mov
fcomp
lahf
push
sbb
fisttps
jp
lret
mov
mov
std
pop
rcrb
cmpsl
or
fucomi
pop
xor
add
or
or
lret
mov
in
ds
dec
mov
aas
mov
andb
jb
jmp
les
ljmp
or
repnz
idivb
sti
mov
inc
call
cmp
in
out
enter
cwtl
jmp
sbb
aad
iret
mov
mov
mov
jno
lea
sub
out
sbb
cmp
stos
test
add
in
mov
roll
popf
repz
fisubrl
fxch
add
rorl
ja
nop
push
sbb
sbb
aas
cltd
jne
mov
jmp
out
insl
fstps
xchg
outsb
or
mov
rcrl
pop
mov
mov
bound
adc
es
push
popf
imulb
ljmp
int3
test
xchg
dec
sub
fmuls
imulb
out
les
mov
ficompl
loope
and
cmpb
pop
mov
les
cmp
cmp
aaa
pop
jmp
or
clc
pop
push
scas
test
xchg
jge
and
je
add
mov
or
sbb
dec
sarb
decl
lret
lea
push
mov
push
fisttpll
adc
or
push
out
and
add
xor
jae
and
jno
sub
stos
or
bound
mov
pop
repnz
push
fisubrl
sub
dec
push
push
mov
or
in
aam
fnstcw
dec
arpl
in
sbb
inc
pop
lock
xor
push
outsl
sahf
lret
adc
fwait
adcb
xchg
int
or
mov
lcall
push
outsb
push
outsb
mov
sub
inc
push
jg
cmp
jbe
test
mov
stc
aas
jmp
jmp
sbb
leave
or
and
inc
test
mov
test
or
lock
jbe
test
pop
sbb
pop
xchg
cmp
repz
mov
sub
jle
out
mov
shlb
push
or
outsl
or
leave
sub
fcmovne
push
dec
adc
sub
ljmp
jne
mov
jae
lahf
or
and
xor
setnp
adc
pop
negb
dec
adc
jmp
std
cltd
pop
hlt
inc
repz
outsb
mov
or
addr16
in
sub
int3
push
orl
ljmp
pushl
shr
mov
mov
mov
repz
fldcw
push
pop
iret
inc
imul
add
push
or
jmp
scas
xchg
lock
pop
adc
cmp
mov
pop
add
sbbl
dec
mov
push
lret
xchg
jno
cmp
mov
jge
aas
fnstcw
lret
sbb
push
dec
fmuls
push
mov
sbb
xor
pop
and
fadds
into
cmp
into
or
hlt
or
or
mov
adc
or
fistps
mov
mov
and
and
sub
and
sbb
imul
cmp
lock
movsl
outsb
clc
test
notl
pop
in
scas
mov
xor
push
xchg
shld
mov
mov
jmp
adc
push
or
mov
movsl
je
push
cwtl
jns
inc
inc
push
insl
pop
inc
add
stos
mov
mov
cmpsb
pop
dec
bound
ljmp
arpl
cli
pop
dec
and
mov
hlt
icebp
sarl
les
add
xchg
xor
out
call
adc
lods
sub
sti
in
jo
push
push
mov
bound
movsb
xlat
in
dec
jnp
push
mov
div
adc
scas
out
bound
or
leave
or
jg
outsl
add
mov
mov
mov
clc
test
cmp
mov
call
insb
std
add
lret
out
test
cmc
pop
ret
lahf
stos
out
or
mov
imul
sub
insb
or
stc
leave
pop
pushf
fs
daa
outsl
mov
and
sti
pop
add
iret
fists
adc
sub
pop
and
out
dec
or
out
ror
gs
adc
jmp
or
insl
jae
adc
jo
mov
fistpl
jmp
in
clc
pusha
or
icebp
dec
outsb
or
js
loop
sti
ljmp
aam
ljmp
int3
scas
addr16
inc
mov
xchg
pop
push
sbb
push
push
or
int3
mov
add
adc
enter
mov
loop
ret
or
xor
adc
iret
dec
inc
pop
lods
jno
cmc
cmpsl
popa
out
into
ret
jp
or
sbb
cmp
insl
mov
mov
je
mov
add
out
jmp
mov
sti
fwait
bound
stc
es
stos
pop
xorb
mov
filds
stos
int3
dec
push
or
push
cmp
aam
pushf
pop
daa
or
and
jae
add
pop
xor
sub
outsl
adc
cmp
out
loop
int
add
mov
sbbl
mov
ss
pusha
out
mov
je
dec
lcall
ja
add
cld
pushf
lcall
add
mov
fsubrs
inc
in
mov
icebp
pop
shll
cmpsb
push
shrb
pop
insl
test
sub
mov
dec
mov
mov
mov
jecxz
cwtl
scas
dec
test
mov
jo
bound
or
or
or
jb
aas
xchg
fisubl
lret
jmp
sub
aaa
and
negl
scas
add
repnz
adc
push
xor
fwait
dec
sbb
mov
sbb
loope
insl
push
mov
imul
dec
cltd
out
adc
jo
and
scas
xchg
ror
sub
and
or
out
cwtl
pop
jmp
dec
pop
jbe,pn
and
call
and
dec
adc
mov
mov
xor
aas
inc
sbb
xchg
and
push
push
int
lret
push
push
loop
out
rcr
pop
sub
aam
xor
in
movsb
inc
jmp
mov
lcall
jge
and
dec
fcmove
dec
pop
jo
xchg
pop
test
jae
leave
mov
jne
sbb
lock
not
or
dec
pop
dec
ret
shrl
or
dec
dec
mov
pop
std
dec
data16
testl
mov
lret
sub
pop
mov
fldt
cmp
js
hlt
stos
in
xchg
mov
jno
into
pop
movsl
push
lret
data16
or
out
pop
in
dec
stos
mov
xor
inc
xchg
imul
sub
fidivl
or
fisttpl
scas
and
les
and
cmc
jle
testb
or
jmp
movsb
imul
movsb
jle
or
scas
cwtl
sub
les
fisubl
xchg
cld
adc
imul
mov
outsl
pop
cs
xchg
nop
jo
sarl
daa
push
xchg
dec
pop
inc
jl
xor
imul
xchg
sub
mov
imul
push
int
push
mov
shlb
push
insl
hlt
cli
or
sbb
mov
shlb
in
test
mov
rorb
sahf
lret
mov
xor
stos
cld
mov
pop
neg
dec
add
xchg
add
pop
daa
add
scas
mov
cmp
dec
jg
mov
sub
jg
sti
sub
mov
stos
or
jmp
mov
mov
push
xchg
jp
mov
push
ret
hlt
sbb
or
frstor
adc
gs
repz
xchg
adc
push
mov
cli
push
jl
xchg
jle
sub
into
sbbl
inc
fisubrl
call
mov
addr16
dec
and
dec
jbe
push
ds
adc
test
ljmp
sub
inc
dec
movsl
lret
data16
into
mov
push
loop
mov
jge
xchg
pop
test
jl
pop
or
push
idivl
fcompl
pop
xor
pushf
dec
push
fldenv
iret
xor
push
pop
in
fists
testl
in
fldcw
out
mov
leave
sbb
or
or
pop
jp
xchg
jo
ret
std
cmpsl
repz
ret
push
sbb
pop
mov
jns
mov
sarb
ljmp
fnstsw
pop
mov
jp
mov
lock
icebp
je
fmuls
fndisi(8087
out
sti
mov
sbb
imul
adc
icebp
adc
adc
add
lcall
scas
inc
inc
xor
mov
jae
not
mov
aam
loop
insl
sbb
push
mov
fs
push
ret
jge
xor
xchg
mov
adcb
pop
scas
loop
xor
and
in
sbb
stos
push
inc
or
mov
pop
fsubrs
stos
push
add
in
sub
dec
pop
inc
pop
ss
mov
mov
sti
mov
dec
das
es
les
mov
sti
out
fstpl
jecxz
dec
cmpsb
ret
pop
xchg
sti
pop
dec
loope
out
sub
hlt
ror
out
call
loopne
dec
imul
stc
mov
xor
mov
and
fdivr
test
inc
les
cld
jmp
xchg
mov
cmovno
or
insb
fsubl
mov
fisttpll
call
mov
cmpsl
imul
cli
mov
jnp
dec
inc
jmp
out
gs
lods
dec
aaa
mov
out
or
push
xchg
add
jecxz
out
je
and
pop
loopne
mov
and
xchg
test
rcrb
loope
clc
jno
adc
les
and
add
bound
inc
bound
or
pusha
mov
or
pop
lcall
stos
outsb
or
push
mov
xlat
jae
das
dec
pop
mov
dec
pop
and
add
sub
mov
add
test
xchg
mov
mov
sbb
fnstenv
add
sbb
cs
and
xor
fidivs
popf
js
bound
lahf
xchg
dec
cmp
xor
mov
fimuls
shrl
scas
fdivs
lock
dec
mov
jl
in
add
inc
fucom
jge
out
fisubrs
lret
les
xchg
mov
int
in
sub
and
inc
pop
dec
inc
mov
or
mov
jg
out
and
inc
inc
mov
js
data16
xor
shlb
jmp
jle
xchg
push
push
mov
sti
jno
ficomps
or
testb
fstp
pop
jnp
cmp
push
aaa
dec
or
loope
push
jmp
scas
pushl
mov
sbb
adc
jp
inc
imul
push
lret
dec
dec
addr16
testb
in
xor
or
push
jmp
fs
out
sub
daa
out
pop
sub
mov
lahf
push
divl
std
outsl
notl
xor
test
stos
cwtl
jecxz
pop
les
dec
ret
sub
mov
std
cmc
pushw
test
repnz
aas
adc
push
pop
rcll
inc
insl
push
or
leave
fstps
mov
adc
out
dec
das
scas
mov
add
or
mov
cmp
pop
pop
jg
xchg
bound
push
xor
mov
dec
outsl
jp
or
scas
mov
push
in
mov
rdmsr
ljmp
pop
and
push
in
pop
cltd
and
insb
lret
sahf
repz
jmp
and
pop
dec
dec
inc
movsl
pop
xor
movsb
jg
adc
xor
ds
add
mov
loop
cmp
pop
dec
xchg
rorb
out
jge
pop
add
pop
mov
jb
dec
out
pushf
lret
pop
or
iret
xor
and
movsb
popf
iret
int
mov
cld
xor
imul
inc
or
and
adc
dec
push
dec
sarb
push
add
pop
sbb
pop
daa
aas
or
std
test
mov
fdivl
adcb
xor
lea
test
shll
xchg
push
mov
jge
icebp
sbb
cmp
xchg
pop
xchg
bound
movsl
jge
pop
lret
pop
or
cltd
push
movsl
mov
in
dec
sbb
lods
dec
out
or
jecxz
bound
push
pop
fnsave
push
pop
cltd
and
add
clc
xchg
xchg
daa
lret
cs
call
jno
cmp
push
mov
test
cmp
jb
cmp
mov
xor
je
and
neg
das
fisubrl
mov
out
clc
push
lret
xor
cld
mov
push
pusha
dec
sbb
aas
repz
pop
lahf
loope
aam
mov
and
xor
jne
mov
xchg
sbb
in
hlt
popa
or
das
test
jle
xor
xchg
sbbb
sbb
leave
into
inc
pop
mov
movsl
inc
push
idivl
jge
pop
pop
push
jmp
sub
das
mov
cltd
push
push
bound
cmp
inc
or
lods
and
push
sub
pop
in
xchg
adc
lcall
loop
mov
jb
fdiv
inc
repnz
sbb
cmp
clc
lock
popa
cmp
jmp
pop
sub
aam
stos
fiaddl
push
sbb
xchg
stos
clc
hlt
hlt
pop
fiadds
add
or
pop
mov
or
in
aad
cli
cltd
xlat
mov
push
inc
push
into
int3
iret
gs
les
shlb
push
pusha
imul
dec
cmp
inc
in
lret
jmp
push
sarl
adc
sbb
push
xlat
push
and
fcmovne
fcmovu
push
lret
lock
cmpsb
push
or
push
ljmp
push
ljmp
jnp
hlt
addr16
sbb
dec
dec
cli
pop
mov
xchg
mov
in
das
sbb
hlt
jne
fcmovu
cmp
mov
lds
lret
adc
or
icebp
rcr
faddl
aam
dec
inc
add
rcl
adc
rorb
sbb
fs
mov
mov
inc
jb
popf
jo
lret
or
pusha
sbbl
push
mov
pop
sub
mov
jmp
sbb
ret
mov
fs
push
out
xchg
sahf
and
je
add
mov
mov
lods
jmp
popa
dec
inc
sti
sub
movsl
adc
push
dec
adc
loope
sti
sbb
sbb
shl
sbb
int3
ja
pop
call
imul
out
sti
pop
dec
cmpsb
fs
int3
pop
mov
pushf
add
add
mov
jge
cltd
mov
addr16
bound
jae
icebp
rclb
mov
imul
xchg
push
or
ds
cli
bound
jo
lock
aas
in
rcll
stos
leave
pushl
mov
jl
dec
cli
push
lret
mov
add
sahf
mov
in
xchg
imul
imul
mov
push
pop
sub
inc
repz
add
loope
adc
int3
out
fcos
push
add
mov
out
out
sti
fistps
pop
fsubr
repz
or
pop
cld
aas
inc
dec
xchg
out
fcmovnb
insb
ds
pop
push
jle
pusha
lret
cmp
fdivs
xchg
push
and
out
lahf
scas
je
ds
mov
lret
rorb
dec
outsb
xchg
or
pop
add
xor
scas
outsb
dec
and
in
sub
adc
sbb
sub
cmp
mov
stos
sbb
jl
std
ret
cmp
add
mov
fldcw
fcompl
sub
out
gs
or
sbb
cli
xor
pushf
mov
mov
sbb
cltd
jmp
stos
lcall
sub
dec
bound
jnp
ret
fmull
lods
xchg
pop
and
jge
adc
scas
mov
adc
adc
inc
jle
dec
mov
pop
mov
lea
mov
and
sub
push
rcll
pop
lods
outsl
daa
scas
mov
pop
cltd
jecxz
inc
cmpsl
push
push
in
xchg
in
xchg
jl
iret
adc
sbb
jns
pop
inc
push
test
es
jp
mov
push
or
mov
mov
jge
push
hlt
aas
mov
jbe
xor
xlat
sarl
push
or
iret
cltd
cmp
aad
dec
push
inc
loop
pop
inc
mov
push
inc
jb
sub
imul
rcrb
repz
out
or
cmp
loop
cwtl
test
mov
fwait
pushf
or
repz
movq
into
mov
mov
dec
dec
imul
mov
ljmp
mov
iret
sti
cltd
jb
xchg
and
imul
pop
add
repz
in
mov
push
arpl
mov
scas
adc
addl
es
adc
adcb
cli
out
xor
shrl
mov
fs
push
adc
jge
inc
push
or
das
jo
push
mov
scas
mov
push
mov
push
int
mov
add
push
dec
pop
testb
iret
and
andl
into
pop
and
cmp
jp
mov
xor
enter
jns
or
inc
mov
push
loop
push
mov
movsl
lret
lahf
mov
arpl
cmc
int3
inc
cmp
test
push
pop
inc
and
push
xchg
dec
movsb
pop
inc
inc
jbe
bt
int
mov
push
lret
inc
rclb
ds
repnz
fidivl
jmp
mov
sti
jmp
insl
das
mov
ret
sbb
add
aad
dec
mov
add
andb
add
push
std
pusha
pop
dec
leave
or
out
sub
cmp
fwait
xchg
loopne
sub
aas
insl
pop
dec
push
rolb
aam
mov
mov
sbb
ljmp
jg
add
jbe
out
pop
jmp
repnz
push
push
out
daa
mov
push
leave
mull
or
lcall
scas
sbb
jnp
rcrl
nop
fiadds
mov
push
sti
xor
mov
push
aad
mov
mov
int3
js
stos
mov
les
loop
cwtl
shl
xchg
pop
cld
out
enter
adc
ss
mov
push
jg
aam
fsubr
cli
jl
js
sbb
sti
gs
fdivp
mov
cmp
jne
fcmovnbe
aam
add
dec
sarl
fsubrl
push
in
inc
into
and
push
mov
xor
xchg
insb
push
jecxz
iret
pop
movsb
inc
fimull
out
cmp
pop
jo
mov
jns
fisttpl
cmpsl
mov
sti
mov
scas
mov
cli
lods
xchg
lahf
pop
mov
jl
iret
fistpll
imul
pushf
rolb
pop
stos
aas
rorl
outsb
daa
and
or
data16
mov
jge
mov
mov
in
lods
scas
pop
addr16
lret
or
xchg
jb
pop
mov
mov
jmp
and
pop
rcll
out
sti
xlat
cli
mov
and
mov
mov
adc
cmp
ljmp
add
xchg
or
or
xchg
scas
adc
lcall
jle
and
mov
add
jo
mov
push
pop
mov
shrb
into
ret
js
jle
and
aas
int
stc
pop
jns
jl
add
xchg
es
jmp
xlat
mov
aad
or
xor
adc
jb
cmp
stos
insb
dec
cld
cmpsl
xchg
leave
cltd
jecxz
sti
ds
adc
pop
into
sub
adc
or
and
dec
outsb
imul
outsl
lods
xchg
mov
xor
push
lods
adc
mov
lahf
mov
fisubrl
push
mov
call
pop
iret
sahf
test
lret
pop
insl
cmp
push
sub
lods
call
std
lcall
add
pop
adc
xchg
jne
int
dec
test
cmp
lcall
das
cwtl
pusha
and
mov
push
ret
jle
push
jmp
dec
cltd
lds
orl
stos
iret
repnz
rorl
inc
jno
loop
paddd
push
and
std
mov
stos
outsl
sbb
sbb
push
jne
and
pop
mov
shll
in
ljmp
daa
sub
jnp
test
push
test
xor
fistpl
mov
addr16
dec
pop
dec
cwtl
mov
daa
jmp
int3
fdivs
sbb
daa
add
jae
aaa
in
sub
xchg
dec
cmpsl
dec
push
pushf
lods
pop
repz
xor
loop
push
mov
xchg
in
shrb
lahf
in
mov
dec
ficompl
shr
pusha
pop
pop
jb
mov
cli
inc
scas
into
mov
in
stos
dec
pop
loop
dec
mov
dec
mov
lods
and
add
push
dec
out
pushf
ljmp
xchg
rcr
push
xchg
dec
lcall
mov
cmp
and
lret
jo
mov
cmp
ljmpw
mov
cmpl
das
ss
into
les
int
loop
clc
mov
inc
fisttpl
aaa
or
iret
fwait
push
flds
mov
push
pusha
bound
repz
pop
mov
bound
xchg
mov
jle
test
cs
add
jp
stc
pusha
push
push
adc
fidivl
popl
jnp
rol
fidivrs
shrl
dec
ret
stos
sbb
mov
in
push
pusha
lods
add
jmp
lds
cwtl
int3
sti
call
arpl
imul
xchg
jae
inc
mov
cmp
cmp
xor
mov
pop
bnd
popf
arpl
and
sbb
test
cmp
rorb
ljmp
dec
and
xor
mov
mov
mov
push
inc
bswap
mov
mov
jge
iret
mov
add
leave
notb
adc
lea
in
mov
jmp
or
mov
in
cmc
and
fs
dec
mov
adc
xchg
add
lds
cmp
aam
push
dec
or
inc
mov
mov
ficomps
xor
into
int
fcom
xor
rorl
and
int3
movsl
sub
push
rcll
mov
hlt
jb
adc
pusha
xchg
mov
or
fdiv
cld
jae
dec
pop
xchg
cmc
idivb
jb
imul
scas
mov
jo
sbb
jns
lret
ds
jnp
cmpsl
iret
and
scas
mov
push
pop
sti
rcll
sti
push
xchg
mov
fwait
test
mov
sbb
jmp
fidivl
pop
orb
ljmp
jmp
cwtl
cmp
cmp
mov
imul
in
lret
data16
ficoml
pop
loop
mov
je
cmp
pop
into
mov
ljmp
mov
insl
je
sbb
sbb
mov
lods
scas
outsb
fsts
cmp
push
xchg
mov
lods
xchg
add
adc
std
lock
cwtl
enter
lahf
imul
or
rcrb
cld
jmp
lcall
cmp
or
in
adc
cld
jmp
fildll
add
push
lret
cmc
in
fucomi
popa
std
loope
xor
or
leave
sub
lahf
lods
push
xchg
sub
leave
inc
lods
dec
jnp
clc
inc
sbb
mov
int3
jmp
shlb
sub
sub
iret
sbb
xchg
cmp
pop
ss
jge
sti
icebp
mov
pop
pushf
pop
loope
jge
sbb
and
jnp
scas
scas
nop
adcl
out
cmpsl
xchg
add
jno
or
jp
pop
fildl
xchg
ret
push
mov
or
inc
mov
out
loopne
adc
fisubrl
fcoml
aas
pop
test
xchg
pop
sbb
dec
fnstenv
xor
loope
pushf
into
push
dec
mov
push
add
jo
mov
js
jbe
jns
push
iret
lock
outsb
jge
scas
movsb
adcb
inc
pop
and
mov
lret
add
or
dec
dec
mov
push
lcall
add
shr
lcall
outsb
daa
adc
das
dec
dec
cmp
xchg
sub
jl
clc
cmpl
out
jecxz
jge
imul
jg
pop
sub
cmpb
mov
jmp
js
pop
adc
add
dec
cmp
pop
mov
xchg
xchg
hlt
xor
adc
sbb
je
movl
fmuls
movsb
adc
pop
dec
mov
jge
mov
pop
insb
ret
insl
lret
pop
cmp
dec
cmp
rcll
jb
mov
enter
or
adc
clc
outsb
int3
dec
sub
cmp
fsubr
aad
adc
cmpsb
jns
adc
lods
pop
or
in
jmp
loopne
mov
lods
addr16
sub
xchg
std
mov
icebp
mov
mov
std
js
repz
stc
das
mov
testl
pop
leave
aas
std
mov
and
mov
jo
or
sbb
push
xlat
sub
aam
int3
std
int3
adc
repnz
pop
movsb
hlt
push
push
inc
imul
push
xchg
outsl
inc
cmpsl
les
mov
rcll
fstl
push
or
pop
jge
popf
pop
and
sub
adc
mov
add
mov
add
fwait
push
dec
mov
lcall
xchg
cmp
sbbb
cmp
adc
xchg
cmpsl
dec
mov
dec
adc
adc
fists
mov
jge
addr16
xor
pop
loope
aad
add
sbb
aam
int
or
cmpsb
pushf
vunpckhps
nop
scas
mov
pusha
pop
sti
jmp
adc
inc
out
ds
fnsave
fdivs
mov
jg
lea
in
cmpsl
adc
loopne
jl
lret
xor
dec
adc
or
jnp
mov
xor
mov
push
or
dec
out
dec
and
lock
xchg
or
jg
hlt
inc
jle
xchg
and
cmp
test
push
sbb
inc
fisttpl
jo
xchg
outsb
pop
sub
mov
shr
sbb
or
sbb
out
lock
call
xchg
add
and
cltd
push
xchg
push
push
lcall
daa
sbb
xchg
push
dec
mov
sbb
rcrb
lcall
and
mov
in
rcll
in
mov
lea
cmp
das
sub
iret
fistl
lods
adc
inc
jae
and
push
lods
mov
xor
push
and
cmp
mov
pop
in
std
popa
int3
mov
mov
adc
ljmp
dec
dec
sub
pop
icebp
shll
mov
pop
test
dec
mov
sti
pop
fcomps
stos
out
push
jp
or
ss
repz
push
dec
lret
adc
mov
cmp
mov
lods
dec
jo
enter
stos
aam
jo
lcall
imul
mov
xchg
inc
test
xor
dec
es
out
mov
fisubrl
fwait
sti
sti
das
jne
xor
adc
dec
jns
outsl
test
lea
jge
fldenv
mov
sbb
cmp
mov
xor
pushf
in
and
out
clc
fnsave
fsubr
scas
jnp
sub
ss
jbe
int
inc
into
cmp
fwait
int3
sahf
dec
mov
fcomps
sub
and
pop
pop
ror
fcompl
cltd
mov
ds
in
xchg
xchg
or
push
mov
xor
fisubl
cmp
pop
or
push
and
push
add
lods
lahf
scas
add
push
mov
in
xchg
pop
pop
cmp
and
enter
fldcw
mov
out
mov
pop
stos
cltd
shrb
mov
mov
test
push
push
jg
jp
mov
repz
scas
pop
inc
add
adc
push
jo
das
lods
mov
xchg
or
sbb
and
cmpsl
mov
aas
mov
sbb
lea
jbe
dec
jmp
sbb
std
dec
adc
loop
sbb
pop
enter
push
or
dec
orb
rorl
ret
adc
push
mov
or
xor
cmp
or
xchg
out
nop
lahf
mov
test
int
cwtl
outsl
push
negl
sahf
jo
sbb
orl
push
das
movsl
inc
mov
xchg
loope
shrl
cs
add
mov
pop
movsl
imul
add
adc
subb
and
aam
scas
push
dec
mov
adc
sti
sbb
lods
mov
in
adc
or
aaa
sti
xchg
adc
pop
cmpsl
fldt
mov
or
inc
aad
and
and
in
xor
out
inc
sbb
cltd
sarb
hlt
pop
cmc
cmp
lcall
sub
pop
out
scas
mov
sbb
and
ficompl
xchg
mov
xchg
adc
mov
mov
add
aam
dec
and
insl
ror
pop
mov
into
cli
das
xor
and
arpl
cmp
sbb
enter
or
pop
test
out
pop
mov
out
cs
mov
daa
lods
mov
fadd
test
out
into
lahf
pop
xchg
xchg
call
mov
jno
xchg
mov
inc
or
jg
adc
dec
test
outsl
pushf
mov
imulb
inc
pop
fstp
mov
xchg
push
scas
test
cmpsb
and
shlb
bnd
loop
add
or
sbb
aas
movsb
push
pop
outsl
cwtl
xor
sbbl
jmp
cld
aad
pop
lock
mov
push
mov
sahf
or
shr
push
in
xchg
adc
mov
sbb
dec
in
pop
fldt
inc
jecxz
lahf
push
ds
outsl
sti
jae
mov
inc
cmp
movsb
push
mov
adc
pop
push
aas
imul
and
adc
xor
dec
cli
push
iret
dec
cs
cmc
je
push
gs
dec
sarb
sahf
fnstenv
mov
pop
leave
sbb
fmul
sub
lret
lret
fdivrl
sbb
mov
inc
mov
imul
pop
daa
jnp
aaa
sbb
jne
inc
pop
xchg
jl
out
test
cwtl
adc
shl
pusha
ds
dec
fisttps
scas
pop
pop
adc
xchg
mov
inc
clc
xor
andb
rorl
lret
bound
mov
lahf
mov
xchg
pop
jmp
ds
sbb
jp
fidivrl
cmp
popf
xchg
pop
jo
mov
mov
jmp
pop
cmp
adc
sahf
jmp
dec
enter
fisttpll
and
int3
sahf
inc
mov
mov
xchg
cmp
push
lods
aam
fxch
push
int3
mov
fldl
out
movsb
and
add
jp
push
xchg
and
rcrb
enter
divl
aas
ja
push
inc
or
filds
ror
ret
push
paddsw
cli
bound
sar
push
xor
or
mov
test
sbb
cmpb
mov
mov
cmp
and
pushf
sub
adc
cmp
xlat
mov
cmpsl
negl
fnstsw
or
inc
js
daa
push
jg
ficompl
mov
scas
cmp
hlt
jecxz
inc
dec
cltd
mov
or
pop
das
movsl
pop
cs
fs
and
push
sarl
and
or
add
loopne
popf
jl
xlat
push
dec
dec
jecxz
stos
pop
mov
inc
pop
lds
iret
out
std
and
insl
fs
mov
cli
cli
mov
pop
movsl
jnp
mov
dec
aas
imul
cld
cli
add
sub
xlat
adc
js
jg
or
pop
stc
sbb
loopne
xlat
or
jl
add
out
and
pop
push
push
fwait
jg
sbb
iret
int3
in
in
fnstcw
jne
mov
jnp
outsl
cltd
inc
xlat
jle
pop
mov
and
adc
scas
or
and
mov
jmp
fs
jmp
jo
xor
lret
jo
inc
jg
lock
sbb
push
jle
je
add
or
scas
fcom
dec
movsl
sbb
mov
rcrl
mov
xchg
int
xlat
xchg
mov
mov
mov
xor
pop
js
das
jns
sti
xchg
in
push
xlat
je
jno
push
mov
sbb
ja
popa
lret
in
sub
cltd
pop
out
shl
jle
adc
test
pusha
adc
mov
mov
into
mov
xchg
inc
lods
inc
mov
cs
cltd
cmpsl
scas
sbb
add
push
jbe
xchg
aas
mov
ljmp
or
mov
pop
jl
repz
out
xchg
and
das
movsl
sbb
jp
pop
pop
xor
xchg
lret
cwtl
aaa
dec
sbb
lea
loop
mov
rcll
into
sbb
adc
lcall
push
out
lds
dec
or
dec
or
insl
add
xchg
or
popf
pop
ds
mov
fidivs
loopne
jnp
adc
inc
pop
leave
scas
or
aam
inc
mov
sub
pop
add
jno
adc
sbb
lea
in
adc
rolb
in
mov
xor
jge
add
or
mov
jg
decl
or
dec
dec
jo
out
pushf
pop
outsl
adc
cmp
pop
imul
xchg
jae
inc
sub
or
dec
lahf
jp
inc
nop
mov
orl
dec
fmul
inc
adc
adc
insb
mov
mov
pop
clc
sbb
jecxz
lcall
cld
int3
inc
jns
out
push
shl
sbb
nop
stos
rorb
aam
cmp
jno
mov
dec
iret
int
pop
aas
addr16
sti
test
sbb
pop
stos
push
call
or
or
sbb
or
jle
push
xchg
mov
call
outsb
push
jge
repnz
jne
or
mov
xchg
or
mov
out
test
addr16
mov
dec
test
mov
add
mov
repnz
nop
icebp
cmp
xchg
pop
push
cmp
xor
inc
gs
iret
in
push
push
xchg
insl
xorb
cmp
dec
jns
sbb
loopne
xchg
insb
inc
add
leave
mov
mov
out
test
push
jcxz
add
jmp
inc
sahf
push
lods
xor
cmp
mov
sti
jbe
lret
dec
icebp
pushf
cmpb
dec
or
mov
inc
cmpl
sbb
mov
mov
sti
cmp
ljmp
lahf
shr
mov
jg
mov
int3
dec
or
lods
mov
int3
repnz
fcmovu
pop
mov
popf
push
dec
dec
arpl
dec
xchg
jge
pop
jl
pop
test
out
push
push
gs
int
lods
in
repnz
pop
dec
aaa
aad
or
inc
lock
push
jae
dec
icebp
stos
outsb
push
mov
pop
fwait
jmp
mov
jmp
sahf
stos
xchg
je
in
mov
clc
or
loop
rclb
push
pop
cmp
xchg
out
notl
in
negl
into
fs
daa
das
lcall
cld
add
test
les
mov
push
pop
jmp
fistps
idiv
mov
setge
or
lock
lahf
dec
mov
ds
pop
xchg
inc
mov
pop
pop
bound
mov
or
pop
mov
inc
mov
iret
and
mov
dec
fcomps
shll
adc
inc
loope
gs
xor
pop
pop
mov
or
xchg
pop
pop
sbb
sub
push
imull
mov
iret
push
cmpsb
or
push
push
out
fldt
outsb
push
pop
pop
mov
bound
outsl
cmc
pusha
or
fcoms
add
dec
fisttpll
test
loopne
movsb
pop
and
cs
loope
jp
jl
pop
sbb
sbb
push
cltd
mov
sub
mov
dec
aaa
hlt
push
cmpsl
sub
jp
cltd
inc
arpl
jae
stos
scas
dec
leave
dec
adc
inc
insl
push
leave
jnp
cwtl
sbb
pop
mov
ss
sbb
notl
pop
fstpt
inc
outsl
das
imul
pop
sbb
aas
push
push
clc
stc
push
jb
int
ret
aaa
push
sub
mov
mov
sbb
mov
cwtl
adc
push
aaa
xor
mov
mov
sbb
cmp
adc
push
fdivrs
cmpsb
lret
ds
daa
mov
int3
sbb
pop
pop
sbb
sub
mov
icebp
mov
out
notl
sub
jg
dec
lock
test
pop
mov
sub
and
dec
psrlw
push
cmp
divl
and
push
ror
adc
outsl
fsts
sub
jp
sub
idivb
lahf
aad
repz
pusha
fnstenv
nop
cmpsl
aam
jo
adc
or
and
lcall
sub
loop
call
lock
mov
push
push
daa
sub
out
mov
aam
jne
sub
roll
sub
loopne
push
mov
push
cmp
mov
fwait
stc
hlt
das
rolb
hlt
clc
sbb
mov
mov
ds
adc
xorl
loop
push
dec
lods
aam
mov
jle
icebp
or
scas
inc
inc
fwait
hlt
mov
push
arpl
jb
cmpsb
or
subb
dec
xchg
push
lods
mov
rcll
in
sub
in
aam
sbb
cmp
test
sub
mov
cmp
aas
push
mov
loop
jbe
shlb
and
mov
push
popa
dec
in
pop
mov
mov
lret
sub
mov
sti
pop
xchg
push
fidivrs
xchg
jg
pop
or
cld
mov
sub
cmp
add
insl
mov
push
adc
aaa
js
adc
insl
imul
stc
cmp
dec
cmpsb
push
push
xchg
add
enter
sub
std
addr16
fcom
mov
jge
mov
cmp
jge
dec
test
jg
push
nopl
pop
pop
loop
pop
xchg
mov
movsb
fldt
in
xchg
bound
dec
rclb
orl
fcompl
jbe
sub
adc
shl
testb
push
push
mov
jo
jp
sbb
popf
cmp
adc
dec
sub
pop
dec
pop
fistl
sub
in
push
dec
push
scas
in
dec
aaa
xor
int3
sub
cmp
rorb
mov
and
cltd
jo
push
lahf
mov
pop
jg
cld
mov
ficoms
mov
lea
lcall
dec
lods
cmpsb
mov
pop
xor
outsb
cs
inc
daa
pusha
cmp
stos
or
leave
mov
sbb
aas
cltd
pop
pop
push
stos
pop
inc
and
fsubs
dec
pop
aaa
mov
aam
lcall
addb
pop
mov
mov
push
cld
lret
dec
int3
pop
xorb
push
loope
and
xchg
fdivl
mov
xor
nop
loope
xchg
jl
ljmp
mov
sbb
xchg
mov
fdivr
jno
xchg
iret
adc
sbb
push
into
mov
bswap
xchg
push
xor
pop
int3
lahf
into
mov
pop
mov
pop
leave
das
inc
ds
and
sbb
xchg
aam
iret
and
mov
mov
subps
pop
fildl
in
mov
inc
leave
sub
dec
cmp
push
jmp
jmp
adc
push
cwtl
sbb
stos
push
fisttps
fnstenv
or
andl
ficoml
fmul
mov
filds
mov
out
pushf
test
int3
in
fs
cmp
and
mov
or
and
addr16
fstpl
fwait
bound
and
pushf
jge
and
into
and
push
fmull
mov
das
cmc
push
test
add
mov
sub
and
cmp
jno
jecxz
xor
ret
sbb
mov
sub
inc
pop
sbb
xor
out
fisubs
call
inc
mov
mov
repz
pop
test
sbb
loopne,pt
pop
pop
in
mov
sbb
or
int3
dec
pop
push
pop
loope
pop
jno
jo
bnd
jae
or
hlt
dec
jecxz
in
push
pop
cwtl
or
mov
pop
pop
push
pop
cmp
int
mov
loop
inc
adc
or
mov
ljmp
xchg
jmp
inc
mov
push
outsb
pop
push
testl
insb
stc
insb
jle
inc
mov
testl
jbe
cmp
idivl
repnz
out
pop
jno
or
fbstp
fsubrl
push
jge
test
lods
ss
or
xchg
adc
pop
lea
call
push
les
add
lcall
mov
rorb
fsubrs
es
pop
scas
sbb
out
imul
fwait
mov
sahf
cmp
dec
stos
pop
jbe
lods
aas
fistpll
or
inc
pop
out
mov
mov
cmpsl
repnz
or
loope
cmpb
push
inc
xchg
mov
pop
mov
jno
push
in
fimuls
daa
shll
in
xchg
dec
push
aad
aam
xor
and
xor
and
aad
cmp
jp
cmp
xchg
mov
jo
xor
loopne
mov
pop
and
jo
xor
jae
out
gs
test
loop
xchg
dec
xorl
adc
xchg
sbb
pop
pop
stc
stos
mov
jmp
xchg
mov
pop
mov
jbe
in
push
push
sub
inc
sti
mov
icebp
cli
dec
inc
push
popa
mov
jno
nop
lret
dec
inc
xor
jp
mov
hlt
iret
iret
sbb
push
sahf
dec
mov
jbe
mov
lock
mov
stos
shrb
adc
scas
inc
sbb
je
bsf
pop
xchg
mov
call
adc
jno
push
and
push
mov
lcall
insl
enter
popa
cwtl
stc
dec
xchg
mov
pop
inc
lock
icebp
sub
por
mov
stos
dec
inc
cmp
push
dec
ljmp
leave
xor
or
iret
arpl
test
mov
and
push
out
sub
arpl
insb
dec
adc
add
in
arpl
or
jg
aam
fstps
adc
and
repnz
adc
and
adc
iret
ljmp
mov
push
jb
stos
and
mov
xchg
mov
dec
mov
pop
jne
rcrl
xor
jge
xchg
lret
jne
repnz
aaa
adc
fwait
push
push
jo
or
stos
into
movsl
pop
fcoml
ret
push
or
jp
dec
fldenv
sbb
add
jno
mov
shll
arpl
ret
scas
pop
rcrl
cmp
mov
mov
xchg
pop
or
mov
ss
dec
fldl
sahf
push
stc
or
push
inc
jnp
cltd
cwtl
mov
stos
pop
mov
dec
pop
jg
mov
int3
stos
pop
push
pop
scas
fs
std
aaa
faddl
dec
ficoms
jge
push
mov
xor
sbb
mov
iret
loop
mov
xchg
icebp
mov
dec
bound
mov
out
fwait
sbb
cmpsl
rolb
jne
mov
fs
adc
add
mov
jmp
in
xor
push
lcall
enter
dec
mov
cmp
fdivrs
cmpsb
testb
scas
xchg
fadds
and
jmp
pop
pop
jp
das
sbb
cmp
dec
ret
mov
and
cli
push
mov
popf
test
xor
mov
ljmp
xchg
call
scas
sbb
ficomps
popf
call
cmp
mov
popa
loop
mov
sbb
pop
loope
loop
pop
imul
pop
cmp
movsb
or
xor
jno
rcrl
dec
add
push
ljmp
pop
mov
es
mov
xor
in
dec
pushf
cli
sbb
sarb
cmp
mov
sti
int3
ss
add
lods
repz
lock
outsl
xchg
gs
cmpsb
rclb
xor
and
mov
outsl
cld
sti
fimull
js
lahf
negb
xchg
jecxz
decb
hlt
loop
lcall
sarl
sbb
outsb
scas
adc
cmpsb
into
sbb
sbb
loope
xchg
out
add
iret
pop
ficomps
das
push
mov
adc
xchg
xchg
dec
push
sti
pop
je
outsl
and
add
cmc
call
inc
js
and
lods
adc
xlat
hlt
lret
fstpt
sbb
sti
push
dec
push
out
mov
jns
ret
sbb
shll
clc
push
sbb
sub
jmp
xor
out
bnd
mov
mov
cmp
inc
inc
xor
mov
pand
cld
dec
jmp
push
xor
mov
out
and
addr16
mov
or
ss
iret
sub
fwait
push
add
mov
xchg
pop
insl
lods
shrb
mov
sbb
clc
pushf
dec
xchg
jle
jp
or
mov
sbb
sbb
mov
mov
pop
xchg
leave
mov
pop
sbb
js
negl
into
aas
js
fwait
iret
mov
fsubrl
add
hlt
inc
jl
repz
adc
loope
xchg
mov
hlt
pop
and
cli
mov
mov
xor
add
test
out
in
or
and
jmp
and
mov
pop
mov
add
cltd
ret
xchg
pop
ffreep
jmp
pushf
mov
jle
xchg
je
and
xchg
mov
in
fcmovb
shrl
shl
xor
mov
sbb
movl
xlat
mov
mov
sbb
in
mov
daa
sti
aas
test
jae
lahf
mov
or
insb
jle
int3
xor
jne
ret
out
mov
lahf
and
insb
and
daa
ret
mov
sahf
pop
mov
jge
dec
repz
fldt
adc
leave
add
push
ret
push
inc
push
dec
pop
jmp
adc
lret
repz
jb
xor
mov
pop
push
xor
aaa
cwtl
push
repz
movsb
mov
cmc
lds
shlb
mov
scas
adcl
mov
mov
into
pop
jp
movl
mov
and
aad
aas
mov
or
mov
pop
into
ds
xlat
pop
jo
fnstcw
pop
sbb
lret
mov
in
int3
inc
nop
push
test
or
aam
into
and
dec
mov
ret
scas
pop
jmp
aam
sub
xchg
les
adc
scas
pop
push
mov
mov
push
pop
jb
das
jmp
xchg
inc
pop
stos
aam
inc
sbb
jbe
sbb
add
xchg
or
sub
loopne
out
pop
and
push
adcb
pushl
fisubrs
cmp
push
int3
adc
jle
cmp
scas
lret
fdivr
out
js
cltd
lahf
jge
arpl
cmpsb
mov
xchg
pop
pop
pop
out
lea
mov
xchg
cli
jns
fcmovnu
xor
mov
adc
cmovl
mov
lods
push
cmp
jl
repz
mov
call
push
lret
test
fnsave
fdivrl
inc
add
pop
or
pop
adc
cmp
adc
rolb
adc
pop
push
pop
stc
dec
jge
push
adc
hlt
or
sti
pop
cwtl
call
pop
sbb
subl
pop
dec
stc
mov
test
jp
aas
cmp
sub
les
dec
jo
xor
repz
pop
sub
and
subb
cmp
mov
and
outsb
jmp
out
stos
ret
jmp
mov
lcall
imul
sbb
push
dec
jnp
sti
sahf
xchg
leave
lds
int3
loope
inc
roll
mov
push
out
push
adc
push
mov
pop
mov
cmp
pop
push
stos
out
mov
adc
daa
lret
inc
and
mov
mov
rcrl
imul
sub
clc
rorl
fwait
icebp
cmp
leave
add
mov
inc
xlat
pop
sbb
sub
adc
pop
inc
cmp
mov
jg
push
push
adc
xchg
sarb
pop
rcl
sub
in
jno
arpl
mov
mov
mov
out
es
ret
dec
pop
adc
aas
cli
pop
rcrl
push
pushf
lahf
js
sub
jmp
push
jmp
cmp
and
leave
mov
and
repnz
aas
push
cs
scas
dec
arpl
xchg
sahf
push
cmp
or
leave
pop
lock
into
jo
pop
mov
push
jb
orl
pop
rclb
and
cmc
push
mov
cld
rcrl
push
lea
and
add
pop
mov
iret
pop
push
adc
inc
idivl
add
push
ret
mov
push
mov
xor
shrl
and
xchg
pop
mov
cmp
xor
insb
es
fcomps
ret
or
fcoms
nop
mov
jmp
es
adc
lret
call
cwtl
pop
pop
lds
loope
pop
jmp
stos
mov
loopne
lods
sub
mov
jle,pn
sub
dec
aam
jp
fadd
xor
mov
jg
insw
rorb
mov
push
jne
aas
xlat
aam
fiadds
mov
fwait
call
pop
loopne
cmp
mov
movsl
jnp
lea
adc
inc
jno
push
cmp
int
inc
roll
clc
push
cmp
push
in
mov
mov
xchg
pop
dec
xor
loop
lock
jp
leave
int3
mov
sahf
or
dec
push
into
dec
jmp
xlat
fsubr
dec
mov
lods
xchg
push
das
dec
mov
leave
mov
mov
push
xlat
pop
sti
xchg
jo
pusha
cmp
xchg
sti
xchg
in
negb
sub
std
mov
mov
sbb
fldcw
mov
cli
arpl
scas
inc
int3
sbb
imul
into
call
mov
ljmp
int3
lds
and
inc
mov
je
cmp
ljmp
jno
pop
push
mov
sahf
addr16
mov
adc
or
ljmp
xor
mov
pop
pushf
lcall
fwait
jmp
sbb
loopne
fists
jp
fldcw
sub
dec
mov
adc
jge
xlat
int3
lret
xchg
ficoms
sbb
push
enter
iret
ljmp
xchg
and
adc
mov
loope
mov
xchg
sti
adc
dec
test
or
out
pop
iret
lcall
dec
mov
push
xchg
nop
mov
ret
jb
fwait
adc
xchg
rclb
ds
jl
je
mov
shrb
into
pop
aam
mov
pop
cld
fwait
in
fimull
or
push
jo
pop
loope
dec
and
pop
cld
pop
jns
mov
jmp
lret
sub
test
fiadds
jl
rcll
and
jl
and
arpl
mov
fiaddl
jne
das
mov
xchg
aaa
mov
loopne
xor
pop
dec
pop
xchg
inc
push
sub
add
bound
data16
jb
dec
cli
or
scas
mov
cmp
stos
or
push
iret
gs
xor
dec
cmpsb
mov
or
in
and
fimuls
popl
and
das
push
cmp
push
push
int3
and
jp
movsl
jp
fcmovnbe
rorl
adc
and
stc
stos
mov
fldenv
movsb
mov
div
pop
xchg
sbb
test
and
cmpsl
pop
popf
fwait
iret
sub
xor
shrb
adc
push
cmc
jge
fidivrl
int3
outsl
fmuls
inc
inc
cs
and
dec
pop
pop
jl
ret
in
orl
mov
mov
jl
testb
flds
pop
lods
push
add
lock
cwtl
int
mov
pop
adc
cmp
sub
scas
pop
mov
cmp
out
push
or
stos
push
xchg
dec
lods
push
mov
dec
pop
ja
stos
sub
repz
shll
add
jl
hlt
not
jns
mov
adcb
add
push
icebp
push
xlat
jp
and
hlt
iret
inc
hlt
clc
imul
push
jp
or
fs
stos
jo
jge
push
outsl
dec
ficomps
xor
mov
push
xchg
mov
jnp
mov
mov
das
pop
mov
cld
aam
push
xchg
mov
mov
hlt
in
jnp
jg
xchg
out
push
push
out
lret
pop
cmp
addl
dec
adc
pop
aad
dec
mov
out
mov
repz
lahf
push
outsb
shr
push
aas
pop
ljmp
fbstp
mov
or
not
or
mov
mov
aaa
jne
out
adc
arpl
jp
xchg
mov
scas
xchg
addr16
mov
inc
int3
pop
rorl
out
int3
les
add
dec
or
dec
pop
pop
call
mov
or
push
or
mov
rcrb
scas
movsl
and
inc
add
cmp
ficompl
and
jmp
push
lret
and
iret
js
sub
cmp
mov
xor
xor
inc
test
in
gs
repnz
cwtl
shr
jnp
xor
es
idivb
xor
hlt
aad
mov
iret
sub
pop
imul
insl
xorb
add
pushf
push
pop
aam
push
mov
insb
xchg
notb
jmp
xchg
movb
cmpb
add
xchg
jb
inc
pop
fists
mov
test
rcr
jo
add
sbb
cmc
pusha
jae
pop
cmpb
rorl
sub
xor
xchg
cmc
aam
and
fcomps
imul
adc
push
mov
outsl
lcall
lods
fimuls
or
sbbl
inc
sbb
movsl
push
adc
or
mov
sbb
in
popa
push
repnz
push
and
dec
adc
dec
lds
rclb
push
scas
mov
jecxz
mov
or
bound
int
pop
push
aad
popa
lock
xor
mov
out
rorb
nop
scas
adc
and
xchg
sub
xlat
lds
outsl
mov
ss
shrb
daa
iret
adc
push
rolb
pop
mov
xlat
push
out
imul
jae
iret
push
loop
mov
adc
negb
jns
xchg
fadd
fmulp
push
dec
test
test
ljmp
fiaddl
xchg
out
lods
adc
push
cmpsl
cmp
hlt
sub
in
mov
push
lcall
xlat
sub
leave
into
mov
sahf
lahf
imul
incl
sti
jge
test
or
cmpl
cltd
rcrl
mov
mov
ss
loope
pop
mov
sub
add
push
mov
out
jle
pop
jns
pop
sbb
pop
notl
orl
mov
ljmp
aas
popf
mov
or
out
or
idivl
jmp
mov
lret
dec
or
dec
push
push
adc
jno
fdivs
mov
push
or
enter
cltd
mov
jbe
push
int3
sub
imul
mov
fcoms
mov
xchg
dec
inc
dec
loope
dec
dec
sbb
cs
lret
lods
jmp
cmp
cmp
pop
and
cs
mov
adc
or
andb
push
jb
loopne
mov
pop
lret
call
xchg
int
int3
dec
int
xchg
pop
adc
les
jmp
iret
jle
mov
in
insl
adc
insl
andb
or
pop
scas
insb
mulb
mov
les
sbb
aas
outsb
xchg
cmpsl
scas
stos
and
xchg
int3
mov
fsubrl
pop
inc
mov
clc
inc
jg
cmp
out
ficomps
sub
mov
jmp
sbbb
jbe
rcrl
pop
iret
mov
or
popl
and
je
mov
push
les
pop
mov
jmp
enter
push
cmpsb
adc
mov
and
mov
pop
sbb
lret
outsb
cltd
pop
fstp
shrb
shrl
xchg
or
pushf
push
xchg
repz
push
fsubrs
push
dec
sbb
loopne
push
fs
aam
mov
ret
repz
and
sub
xchg
xchg
lock
sub
jp
fistps
jp
outsb
xchg
ljmp
sbbb
lahf
or
fwait
push
pop
fs
leave
sub
and
rcrl
int
addr16
jl
xor
lods
int3
jae
roll
xchg
std
pop
scas
jp
or
dec
cmp
dec
lcall
int3
aaa
jnp
or
mov
xchg
dec
sbb
adc
sbb
push
imull
cmpsb
or
test
sarl
xchg
fcmovbe
scas
mov
lods
push
inc
aas
mov
ljmp
cmpsl
mov
out
pop
pop
cmpsb
test
jg
cmp
pop
dec
sbb
xlat
clc
stos
fistpl
xchg
into
xor
mov
push
pop
mov
jle
ss
sar
mov
jmp
mov
into
lds
in
mov
mov
pop
inc
pop
push
imul
pop
cmpsl
mov
das
jmp
xchg
jb
mov
xchg
repnz
mov
adc
int
popf
rorl
adc
fldcw
jae
enter
inc
div
mov
bound
or
xor
insl
dec
xchg
rcrl
lds
jecxz
jp
aad
rcrl
xor
idivl
out
cmpsb
push
push
mov
loop
cmp
fidivs
dec
add
addr16
mov
sbb
jle
rclb
mov
jl
fxch
pop
xor
cmp
rclb
pop
pop
pop
shrl
bound
pop
in
mov
jp
dec
jg
add
fsts
cmpsl
jle
imul
test
cmpsb
pusha
or
inc
adc
inc
jl
mov
roll
mov
cmp
pop
xor
sbb
lea
xlat
sub
inc
lcall
mov
cmp
lds
add
adc
jb
or
add
xlat
mov
xchg
xor
cmc
dec
repnz
loop
mov
lret
aam
ret
mov
in
popf
cmp
jl
lret
sbb
inc
lds
pop
fisttps
rcl
or
jge
adc
dec
ljmp
add
movsl
sti
ficoms
lretw
xchg
push
fscale
push
das
pop
nop
and
push
ljmp
shll
imul
xlat
fcomi
bnd
mov
das
pushl
push
ljmp
stos
sbb
fdiv
imul
sub
mov
mov
mov
adc
aam
jge
movsl
imul
inc
incb
icebp
mov
pop
lret
sbb
fisubrl
dec
dec
fwait
xchg
xor
ja
inc
movsl
imul
sti
insl
addr16
ljmp
xchg
or
jmp
in
xor
mov
pop
out
insb
jb
in
mov
movsb
lret
fcoms
pop
add
jo
mov
or
and
pop
push
icebp
sti
fistps
jne
movsb
push
mov
dec
lds
jge
add
pop
rcrl
jns
xlat
pop
rorb
add
outsb
aad
mov
lds
jl
mov
cmp
push
pop
or
or
or
mov
leave
add
in
ja
adc
je
mov
mov
pop
adc
inc
into
repz
fstpl
and
push
mov
arpl
add
sub
sub
inc
stos
std
fnstsw
pop
test
fiaddl
out
fisttpl
mov
fstpl
cmp
push
jp
push
in
das
stc
scas
in
and
mov
push
jg
rclb
pop
mov
push
sbb
push
lods
ljmp
lret
mov
decl
popf
ljmp
jmp
loop
js
add
addr16
xor
scas
cmpsl
jp
std
sbb
aaa
fstpt
push
pop
stos
stc
jmp
outsb
sbb
adc
sub
and
add
sahf
cltd
pop
sti
dec
les
jl
push
adc
out
push
insb
xchg
mov
sti
jl
into
into
mov
pop
int3
sti
and
mov
xor
les
xor
jns
push
mov
in
inc
pushf
or
imul
fstpl
scas
mov
ljmp
js
cmp
mov
adc
add
push
stos
cmpsb
imul
jns
fs
scas
insl
mov
push
pop
lahf
repnz
xor
int3
adc
push
adc
inc
lahf
cmovae
test
jo
mov
inc
add
and
push
aad
int3
push
fldenv
jnp
xchg
adc
sahf
add
pop
into
push
pop
sbb
loope
fmulp
mov
pop
cmp
je
mov
and
sub
fwait
mov
fxch
xor
imul
popa
sbb
addr16
mov
and
lods
dec
inc
stos
cvtpi2ps
push
push
jg
push
jle
or
jmp
xchg
icebp
dec
push
test
dec
cmp
dec
or
fsts
sub
pop
faddl
mov
inc
leave
lock
sub
push
mov
and
pop
lds
popf
mov
std
and
cltd
jo
decl
inc
and
sbb
cmp
mov
in
rorb
fisubrl
sti
add
sar
push
or
mov
jp
cmp
xor
push
mov
and
fwait
cli
imull
dec
push
lret
iret
inc
pop
pop
in
pop
push
pop
scas
push
sbb
lcall
sbb
mull
enter
addr16
jp
jl
mov
inc
mov
scas
jno
jo
imul
je
icebp
psubusw
lock
pop
sub
decl
push
aam
fmull
das
jo
addb
pop
testb
outsl
cmp
les
xchg
shl
fiaddl
je,pn
hlt
or
inc
sub
mov
mov
sbb
rorb
sub
out
scas
or
gs
fsubrp
out
inc
movsl
fistl
add
shll
pop
inc
cmp
out
std
stos
dec
mov
jle
push
sub
sub
imul
mov
fstps
bound
cwtl
sbb
mov
data16
jmp
push
stos
and
out
jo
mov
shrl
fmul
sub
push
cld
insl
frstor
stos
mov
repz
jecxz
into
adc
and
cmp
mov
ds
cs
mov
xor
pop
jb
into
xor
mov
inc
outsl
cltd
push
jae
out
imul
divl
negb
stos
stos
rcr
fstpt
mov
pop
push
iret
sbb
fists
hlt
mov
out
inc
sbb
nop
xor
jecxz
adc
shlb
mov
lcall
rcrb
or
sub
fsubrl
or
sub
push
pushf
jecxz
mov
mov
mov
push
and
mov
cmp
bound
das
out
dec
dec
adc
push
push
lcall
clc
and
pushf
or
ds
ja
es
in
fldt
shll
push
int3
push
push
repz
or
rcrl
mov
or
leave
mov
int3
int
xor
or
dec
orl
push
sub
int
dec
lds
cmc
aas
pop
lcall
out
cmpsl
xchg
ss
les
xor
jmp
rorb
fwait
ret
fimuls
mov
ds
pushf
fdivrp
cld
in
push
sarl
push
mov
mov
test
xchg
mov
inc
lods
xchg
in
adc
bound
push
sti
and
ljmp
leave
push
add
inc
mov
mov
dec
push
sbb
ljmp
cmp
pushf
push
pop
push
xchg
jmp
jbe
bound
fiadds
mov
cmp
mov
test
inc
jg
xchg
stos
pop
clc
les
outsb
outsb
xor
xchg
ret
pop
popf
jge
aaa
fxch
fxch
push
test
mov
fcomp
lods
sbb
pop
cli
lret
andb
test
daa
jge
nop
in
out
mov
xchg
jge
test
mov
imul
cmc
mov
dec
mov
es
pop
dec
outsb
and
jnp
lea
jp
sti
dec
or
leave
adc
fidivrl
mov
lret
out
scas
decl
mul
jl
popl
push
or
pop
jne
xor
or
loopne
inc
pop
mov
sbb
jle
vcvtsd2ss
push
mov
cs
push
xor
and
filds
sbb
xor
sbb
adc
jmp
xor
scas
jg
and
bound
push
ljmp
outsb
or
or
fldl
sti
testb
or
fsubr
movsb
in
sar
fistl
dec
lret
push
ret
daa
add
cltd
xchg
cmpsl
inc
into
imul
out
and
xchg
test
cwtl
fsubs
jl
push
lds
aas
add
sar
or
int3
push
sbb
lcall
fcmove
cli
push
add
movsl
dec
mov
push
pop
in
sbb
lea
ret
test
pop
or
loop
iret
add
es
bound
clc
adc
push
or
movsl
mov
test
cmp
xchg
shlb
pop
jmp
adc
in
mov
xchg
push
dec
cs
and
xor
sub
xor
mov
ror
fs
jge
lock
outsb
fs
fistps
arpl
mov
pop
out
cmp
sub
lret
mov
iret
stc
push
and
sbb
push
jmp
into
iret
jo
pop
cmpsb
fcomi
test
sub
inc
cmp
jb
testb
adc
push
push
bound
pop
nop
loop
loop
ljmp
adc
xchg
sub
sub
fcomp
inc
fsts
adc
mov
jmp
stos
or
sub
mov
fsubrl
xlat
rcll
push
push
cwtl
imul
jmp
insb
imul
push
stos
fdivl
jnp
mov
cmp
in
mov
jnp
jp
and
mov
andl
out
fldt
out
jle
jp
out
aam
mov
aas
xchg
das
ljmp
dec
sub
stos
pop
ret
mov
jle
call
xor
gs
add
fsubr
ss
inc
out
ja
dec
mov
rorl
xchg
stos
push
adc
push
push
in
mov
pusha
outsb
pop
mov
sbb
sub
fisubrl
sbb
push
into
test
mov
pop
testl
mov
int3
and
out
pop
mov
or
or
mov
lahf
or
das
popf
repnz
into
and
mov
ja
xlat
daa
and
adc
mov
xchg
dec
test
sbb
or
leave
frstor
and
push
test
adc
or
cmp
out
cltd
dec
xchg
decb
cli
test
jae
into
in
sti
dec
jne
xchg
fwait
ljmp
test
stc
scas
or
xchg
aad
push
and
dec
inc
sbb
shlb
fucomip
ljmp
xchg
dec
mov
lcall
pusha
dec
push
xchg
xor
dec
pop
jmp
mov
pop
scas
pushf
dec
dec
je
rorl
cmp
test
dec
xor
into
movsl
jl
push
cli
pop
or
xchg
and
cmc
fs
scas
pop
out
jl
iret
fimuls
mov
mov
xlat
mov
sbb
movsb
lret
or
pop
push
hlt
rorl
int3
push
and
les
mov
sbb
out
cmp
push
js
jns
and
subl
jmp
mov
bound
push
lret
adc
mov
mov
dec
test
mov
dec
push
bound
aaa
imul
stos
sar
cmp
inc
mov
push
adc
cwtl
lahf
ja
movsb
lods
fcomp
xchg
dec
das
cwtl
push
inc
int
stos
outsl
jmp
xchg
call
or
mov
jmp
bound
ljmp
fsubs
mov
dec
or
or
lret
push
push
in
jp
mov
out
push
mov
pop
test
insb
mov
sbb
dec
xchg
js
neg
cld
xor
sti
pop
jo
xchg
or
out
cmp
ja
xor
in
out
or
sub
or
mov
stc
sbb
in
cmpsl
mov
repnz
or
jg
push
data16
pusha
sub
xor
jmp
aas
in
call
push
sub
jle
mov
mov
cmp
cmovl
scas
test
test
shl
dec
addr16
dec
or
pop
jle
pop
mov
sti
push
xor
adc
lea
sub
xorl
push
dec
inc
jle
jl
dec
mov
subl
mov
in
in
jle
insb
aas
mov
icebp
inc
mov
push
hlt
sub
xor
int
pop
inc
and
movsb
clc
out
aad
pop
jmp
bound
out
mov
addr16
lods
adc
pop
fdivrp
cmpl
orb
pop
mov
std
and
movsb
push
mov
stos
outsb
xor
inc
clc
sbb
dec
cmpsb
or
stos
ljmp
call
xchg
mov
ss
sti
pushf
scas
out
jge
dec
dec
rcll
xor
sbb
ficomps
mov
or
xor
sbb
orb
aaa
pop
xchg
add
cwtl
cmp
lret
pop
insl
cmpsb
mov
rorb
mulb
es
mov
icebp
scas
mov
das
cmp
aas
aas
dec
into
or
rol
decb
aas
iret
jge
mov
hlt
cs
aas
adc
rcrl
and
sbb
iret
ret
jmp
mov
xchg
in
aad
xor
lods
test
adc
inc
ljmp
call
xor
ret
out
mov
sub
cld
dec
in
fcomps
shl
cmp
scas
lods
pop
jne
repnz
mov
popw
fs
in
cmp
inc
ss
jle
cld
pop
pop
jle
je
mov
out
mov
sbb
mov
push
pushf
mov
outsb
into
sbb
idiv
pop
push
cmp
lahf
stos
xchg
xor
cs
out
imul
xchg
or
sbb
aam
out
mov
lods
jmp
lahf
xor
cli
dec
fadds
das
mov
sbb
pushf
imul
enter
add
pop
sub
out
pop
loopne
test
inc
jg
and
pop
repz
imul
and
mov
add
popa
loopne
xor
add
jns
popa
aas
or
adc
fimuls
mov
sub
sub
mov
imul
stos
bnd
sub
pushf
pop
out
dec
xchg
jb
jp
mov
ljmp
xchg
daa
mov
pop
fsts
inc
fdivr
and
cmp
bound
test
sbb
fistl
int3
cmp
lea
jle,pn
mov
mov
movsl
xorb
outsb
rcrl
out
imul
lods
mov
mov
shr
iret
dec
rcrb
adc
adc
cmpsb
call
mov
pop
loopne
jle
jo
pop
into
mov
jae
sbb
sbb
popf
and
cmpl
rcrl
cld
jno
out
stos
push
je
in
mov
hlt
pop
pushf
sub
jno
mulps
loopne
dec
push
dec
xchg
pusha
fdivr
ds
push
mov
and
xchg
in
pop
gs
cmpl
add
inc
sub
lea
cmpsb
inc
push
lret
out
pop
xchg
scas
stos
clc
enter
leave
and
sub
sti
inc
adc
mov
mov
rep
dec
aad
inc
inc
and
adc
rorl
in
push
movsb
pusha
jl
pop
xlat
push
push
in
pop
stos
xchg
jl
sub
cmp
and
jge
notl
xor
jecxz
push
adc
or
dec
ja
pop
cmp
in
stos
inc
or
dec
in
loope
stos
adc
or
mov
sub
ljmp
or
fwait
lods
movsb
adc
sub
jmp
xchg
fbld
not
push
sub
jb
stc
into
cld
cltd
insb
lret
int3
push
int3
rorl
xchg
fildl
xchg
test
int
int3
pop
js
ret
sarl
xchg
into
scas
ds
push
in
xchg
jnp
test
stos
sub
xchg
cmp
mov
pushf
sbb
dec
adc
and
repz
lret
loopne
dec
xchg
leave
cmp
pop
inc
lahf
jns
jg
sbb
out
iret
adc
fisttpl
dec
adc
xor
lea
and
or
adc
pop
in
or
jle
sbb
cmp
stos
xlat
fistps
xlat
int
lcall
jmp
fidivrs
loop
fcomp
iret
mov
cmp
sub
push
add
dec
stc
in
dec
mov
dec
daa
dec
mov
out
dec
ss
into
imul
jb
jp
cmpsl
jge
mov
repnz
mov
movsb
push
mov
sub
sub
pop
addr16
adc
rcr
lcall
jnp
lcall
inc
shlb
push
out
push
mov
icebp
mov
cld
jg
sti
and
fdivrl
les
sbb
add
mov
inc
mov
jp
stos
mov
push
cltd
adc
cltd
std
add
add
mov
imul
or
jl
jecxz
iret
xor
adc
cmp
int
nop
mov
xchg
jecxz
repnz
ret
push
xchg
dec
gs
cld
jle
sub
aas
test
iret
daa
fistps
sar
cmovnp
add
mov
mov
std
jp
out
dec
stos
mov
add
sub
int3
repnz
lret
xchg
in
sti
into
jecxz
and
pop
dec
push
xor
cld
int
test
mov
pop
jo
mov
pop
mov
mov
sub
cmp
xlat
ljmp
pop
dec
jns
test
lret
and
mov
mov
and
adcb
cmp
inc
dec
push
dec
pushf
out
inc
loop
lods
xor
fcoml
add
popa
sahf
ljmp
pop
sbb
jae
mov
fnstsw
lahf
ficoms
mov
inc
icebp
lahf
or
out
scas
dec
jge
insl
stc
insl
adc
or
mov
andl
shlb
aaa
je
push
mov
lret
pop
push
jae
sub
jl
push
add
sti
mov
lcall
cmp
mov
push
sub
dec
fisttpll
jns
and
das
mov
mov
aaa
gs
mov
mov
pop
push
sahf
push
inc
sub
sub
inc
jl
lea
or
adc
add
lahf
cltd
jge
inc
cli
and
insb
repnz
pop
ds
aam
cmp
lret
mov
xchg
hlt
insb
fidivl
dec
or
mov
imul
xchg
mov
jp
arpl
sub
push
jl
cld
in
fcoml
inc
mov
xchg
cltd
mov
jae
sub
push
mov
movsb
jge
and
dec
movsb
sahf
sub
adc
pop
and
or
lret
filds
outsb
xchg
mov
and
decl
movsb
fisubrl
push
jmp
in
test
pop
mov
push
push
fnsave
adc
aas
xchg
pop
or
mov
jno
std
scas
rorb
and
jge
insb
adc
loop
leave
decl
cmp
sbb
lods
pop
mov
mov
dec
inc
and
lahf
adc
adc
sub
jecxz
sub
mov
hlt
push
push
addr16
or
scas
lcall
push
hlt
and
xor
sub
push
rol
jne
cmp
divb
jp
scas
mov
jmp
fcmovnb
push
xchg
ficompl
push
repz
out
xor
insb
stos
pop
icebp
movl
cli
out
add
xor
loop
dec
jne
iret
aam
out
dec
test
ja
mov
call
add
fildll
add
mov
pop
inc
mov
call
inc
or
cmp
xchg
lret
xor
sbb
xchg
inc
inc
push
imul
mov
ficoml
hlt
cs
sub
repnz
pop
and
pop
dec
push
outsb
sbb
outsb
les
rclb
xchg
decb
and
mov
popa
out
cltd
sar
shrl
loope
stc
mov
xchg
mov
xor
push
jl
fadd
adc
xlat
test
fnstsw
insb
xchg
iret
mov
fiadds
addr16
ss
jo
repnz
dec
ja
gs
add
mov
clc
sbb
dec
push
push
xlat
xchg
add
fld
mov
push
jmp
add
cmc
inc
or
pushf
call
enter
out
jecxz
sub
ljmp
mov
test
mov
sbb
sbb
and
das
or
cltd
out
sti
inc
mov
add
orb
repz
ss
test
nop
fwait
testl
xor
fisubrl
mov
ss
addr16
jbe
jns
movsl
addr16
adcb
inc
jge
inc
pop
inc
mov
ret
sbb
decl
pop
cmp
jmp
mov
jb
outsb
aad
adc
and
dec
add
movsl
test
ss
adc
lock
lret
dec
enter
jg
iret
mov
or
lcall
adc
jbe
std
sbb
mov
repnz
add
lcall
int3
outsb
dec
push
cld
mov
divl
test
push
enter
pop
dec
pop
bound
pop
ljmp
and
mov
mov
push
cmp
cs
notb
push
mov
dec
je
and
lods
into
sub
mov
inc
mov
pop
cmp
inc
sbb
arpl
imul
adc
out
and
test
shl
fcoml
jnp
in
jle
or
in
pop
int3
inc
pop
or
js
pop
jg
sbbb
out
outsl
ljmp
jns
or
adc
fistps
xlat
cld
out
add
scas
scas
call
int3
fsub
xchg
pusha
paddusw
adc
leave
mov
mov
sti
mov
and
dec
jl
std
testl
inc
cmp
je
data16
outsb
push
pop
subb
imulb
fimuls
fcmovb
inc
cltd
outsb
jne
fisttpll
cmp
push
mov
test
fidivrs
cmp
daa
pop
cltd
mov
mov
out
inc
daa
xlat
outsl
and
imul
lahf
sbb
push
push
fnstenv
adc
in
xchg
cmp
jge
xor
pop
rcl
and
add
lds
icebp
jns
int3
mov
insb
mov
outsb
mov
cmp
dec
je
pop
lahf
mov
mov
jge
xor
imulb
or
cli
arpl
mov
cs
mov
dec
xchg
adc
pushf
adc
vsqrtsd
sub
scas
jle
das
int3
xchg
cli
imul
out
xchg
sbb
and
mov
rcr
xchg
or
inc
jge
out
mov
adc
cmpb
xchg
fmuls
mov
xchg
xor
sub
daa
push
sub
imul
jmp
add
pop
mov
cmp
pop
dec
push
lds
mov
dec
das
imul
scas
pop
outsl
pop
leave
adc
andb
adc
cmp
jno
out
inc
sbb
and
loope
loope
sti
fnstenv
inc
das
add
shlb
jb
dec
mov
in
outsl
push
bswap
shll
fisubl
jmp
cmp
dec
dec
ret
sbb
pop
lret
and
rcr
dec
lret
faddl
aaa
out
fstp
int3
fimull
and
or
jl
sbb
mov
pop
jns
sbb
test
lret
inc
mov
or
sub
inc
push
push
push
sub
cmc
ret
and
js
sub
jl
xchg
add
movsl
cltd
xor
pop
gs
cltd
sub
sbb
push
pop
arpl
push
xchg
mov
jge
jb
lods
adc
inc
xlat
mov
mov
lods
mov
and
bound
mov
cmpsl
orb
push
outsl
sub
mov
and
xor
pminsw
lret
push
or
sbb
push
mov
test
movsl
stos
and
xchg
inc
ss
icebp
cmpsb
or
dec
and
idivb
jnp
push
and
andb
inc
inc
sub
adc
jnp
xchg
mov
lds
mov
data16
sub
push
in
in
xor
mov
and
inc
outsl
cmp
xor
dec
cli
lret
dec
ret
mov
std
int
push
stc
push
fcomps
repnz
mov
push
sub
pop
sub
and
add
pop
fnstcw
clc
or
mov
adc
pop
cmp
cmpsl
das
sub
fmull
test
outsl
mov
ficomps
insl
rcr
mov
stos
cmovl
mov
jl
mov
sub
adc
loope
les
xor
mov
test
add
lahf
lret
stos
lahf
jg
jmp
mov
jmp
lcall
cmp
xor
shlb
cmpsb
call
fcmovne
xchg
mov
int3
lret
bound
adc
sti
mov
xor
cmp
cmc
and
scas
ffreep
mov
in
andb
les
leave
sbb
mov
mov
pushf
iret
mov
sbb
andb
repz
mov
or
jp
sub
mov
in
in
fidivrs
xchg
push
fld
jns
pop
fisttpl
mov
repz
mov
push
ljmp
divl
mov
imul
sub
sbb
int3
scas
cwtl
ja
push
fucomp
ret
sub
pop
cld
lock
xchg
imul
pop
outsl
xor
dec
sbb
mov
pusha
or
or
enter
mov
adc
xchg
mov
jmp
enter
cmpsl
dec
bound
data16
mov
add
sub
into
adc
outsl
iret
mov
dec
cmp
add
dec
pop
and
rcll
cmc
xchg
cmpb
push
jg
sti
jl
add
mov
sbb
shll
insl
rcr
push
xlat
stos
call
mov
adcl
and
andb
das
lods
cltd
std
and
or
ret
cltd
imul
fimull
outsl
pop
lea
call
shrb
sbb
pop
dec
mov
ds
fnstsw
lret
jge
or
pop
or
jnp
cltd
cmpsl
es
push
shl
mov
aad
ljmp
jge
adc
and
adc
add
cwtl
les
stos
inc
mov
into
mov
mov
mov
and
or
insb
out
xchg
in
fsubl
popf
push
sbb
cs
aas
mov
mov
jl
cltd
loopne
shlb
pop
mov
pop
sub
adc
stos
jecxz
hlt
mov
fistl
in
ret
ret
and
push
dec
dec
pop
xlat
dec
sub
or
or
imul
xchg
jmp
rcll
lods
and
dec
aas
adc
sbb
imul
aaa
jbe
pop
in
and
inc
aaa
es
bound
lods
out
add
mov
stos
or
mov
inc
dec
push
mov
lock
mov
pop
aad
dec
jbe
sub
mov
insl
sbb
test
ret
jb
sbb
adc
mov
xchg
push
jp
dec
dec
pop
pop
adc
dec
pop
dec
or
or
push
xlat
es
iret
aam
pop
or
add
add
lods
xchg
push
in
aad
mulb
mov
add
push
push
cld
outsl
stos
test
and
sub
push
sbb
cmp
popa
push
sbb
mov
adc
mov
fsubp
clc
int3
int3
pop
cltd
cli
inc
pcmpgtw
push
daa
in
push
leave
push
lds
cmp
sti
js
xor
sbbb
inc
ficompl
jl
rcl
fistps
ss
dec
adc
mov
xchg
scas
call
lock
dec
sub
mov
or
data16
xor
stos
jo
add
leave
jecxz
lret
jge
inc
mov
fwait
je
inc
lahf
mov
iret
bound
arpl
xorl
insb
imul
xchg
aaa
rclb
cmp
add
mov
pop
add
loop
mov
adcl
ret
iret
arpl
pop
in
popf
out
mov
jmp
scas
jne
cmp
fmul
lea
and
addps
sub
es
xor
sub
xor
or
mov
sbb
inc
push
mov
into
inc
bnd
dec
adc
fcoms
bound
dec
nop
fisttpl
sbb
arpl
inc
rorl
mov
ja
adc
mov
sbb
pop
add
or
push
push
mov
dec
adc
adc
ljmp
xchg
cmp
test
inc
dec
sti
mov
and
xor
outsb
scas
fnstenv
mov
sbb
xchg
inc
sti
sbb
pop
sar
stos
sub
mov
lock
in
loope
push
enter
jge
mov
jmp
jmp
call
cmc
dec
fsts
mov
sbb
xor
dec
sbb
loopne
ds
push
add
push
mov
ds
lcall
jecxz
sbb
or
sub
es
addr16
imul
add
inc
adc
mov
leave
xchg
push
push
and
jecxz
dec
rcrl
ljmp
fstps
inc
or
rorb
comiss
jecxz
lock
je
cmp
pushf
push
cmp
pop
push
cs
scas
and
jp
scas
fnstcw
hlt
jge
jae
xchg
movsl
xchg
popf
mov
push
pop
pusha
mov
inc
push
int3
jmp
out
mov
les
dec
add
inc
jmp
shll
aam
aas
sbb
dec
mov
cmp
mov
jg
out
je
out
std
push
adc
sub
fimull
dec
mov
xchg
jp
jmp
daa
mov
sub
stos
test
mov
fs
pop
adc
inc
adc
js
repz
es
fisttpl
scas
mov
adc
cltd
insl
or
arpl
sbb
shlb
inc
mov
and
or
mov
test
mov
xchg
or
lock
fists
repnz
movsb
xchg
test
clc
push
mov
sbb
stos
adcb
es
dec
js
pusha
outsb
outsb
lods
stos
add
lret
jbe
jne
push
dec
or
test
jne
mov
jge
jecxz
lret
adc
int
xorl
test
dec
or
imul
jne
ficomps
repz
pop
jnp
gs
add
push
out
and
mov
mov
mov
js
add
sarl
dec
addr16
cs
into
cmp
jne
mov
daa
jmp
lods
add
sbb
or
jp
mov
mov
add
sbb
adc
dec
cmc
sbb
aam
and
ret
cmp
dec
test
inc
ret
loopne
pop
mov
stos
fmull
push
dec
mov
addr16
sub
xor
lahf
push
outsb
rcrb
xchg
pop
cmpb
cmp
pop
scas
and
lods
lds
imul
adc
dec
push
ret
mov
sub
sbbl
jl
test
mov
mov
lahf
add
pop
in
in
jo
sub
push
mull
cmp
sbb
loop
arpl
out
sub
outsl
lcall
xchg
orb
fs
repz
cld
dec
repz
pop
in
hlt
pop
inc
clc
cmpsb
xor
das
loop
mov
jp
add
loopne
push
sbb
xor
push
or
icebp
sbb
dec
insl
mov
out
sbb
or
shrl
or
mov
mov
and
sub
pop
shll
mov
mov
mov
mov
das
orl
pusha
aam
js
jo
addr16
xor
jb
lcall
in
test
ljmp
je
int3
xor
hlt
or
pop
movsb
insb
jp
outsb
jp
iret
dec
or
xor
cmp
adc
pop
popa
or
add
insl
mov
pop
pop
into
dec
sub
dec
and
call
das
pop
out
fwait
dec
nop
es
jp
adc
cmp
lock
test
mov
dec
mov
divb
mov
xchg
xchg
inc
sub
mov
or
cmp
jecxz
adc
inc
repnz
sub
inc
push
xor
inc
repz
jns
bound
adc
mov
or
fnstsw
xchg
xchg
std
ljmp
dec
inc
out
loopne
push
fsqrt
testb
popa
mov
rorl
repz
aad
adc
or
stos
pop
imul
mov
sub
mov
int
cwtl
adc
test
in
out
adc
ljmp
out
mov
xchg
adc
lret
pop
inc
adc
arpl
rorb
cmpsb
stos
lods
push
inc
mov
int
fwait
test
xlat
add
fildl
outsb
jg
pop
xor
xor
pop
cmp
cmp
fstps
pop
cmp
loop
insb
or
inc
lods
xor
push
pop
xorl
cmc
cltd
imul
out
int
fsubs
jb
out
out
push
cld
cltd
xchg
sub
sti
gs
enter
rcrl
push
movsb
negl
add
hlt
cmp
in
push
dec
xor
dec
lret
push
inc
push
jae
dec
lret
stos
fldenv
mov
cltd
imul
cmc
dec
dec
sbb
iret
sub
stos
push
sbb
push
push
push
nop
push
shll
aam
pop
push
movsb
push
fucomi
adc
dec
adc
std
lock
jmp
nop
dec
or
out
rcr
push
cmp
in
pop
jl
sub
test
mov
jbe
dec
sbb
aad
mov
rcl
dec
loop
dec
pop
xor
and
dec
lret
flds
xlat
sub
aad
rcll
push
in
dec
lret
das
gs
cmc
push
and
outsl
mov
dec
jmp
repz
cmp
dec
xchg
lock
xor
xlat
xor
xor
fbld
xor
in
jbe
inc
popa
or
xchg
mov
push
imul
push
ja
xchg
ret
jns
sub
push
mov
lret
aad
jne
repnz
and
in
xchg
loop
cmp
sbb
in
imul
test
popa
dec
dec
mov
dec
mov
ljmp
outsb
ror
xchg
jno
int3
adc
inc
add
out
pusha
and
add
xor
mov
push
mov
outsl
out
dec
fldt
jge
sbb
adc
jge
push
mov
dec
or
or
push
push
movsb
adc
pop
jecxz
fisttps
dec
push
add
adc
cmc
mov
cmp
repz
dec
test
push
ret
or
push
xchg
pusha
ds
jo
pop
cmpsb
xchg
sahf
inc
outsb
mov
jg
scas
add
push
or
stos
push
pop
or
push
sbb
sub
cmp
fcmove
in
mov
repz
cmp
push
jle
imull
jp
lea
push
push
pop
fmul
push
stos
or
iret
test
shrd
jle
int3
dec
push
adc
pusha
push
mov
mov
add
and
arpl
rclb
fmulp
mov
ljmp
notb
inc
lahf
dec
add
scas
xchg
jmp
inc
sub
jno
jl
and
mov
cmp
adc
in
fisttpl
aam
inc
pop
std
mull
iret
mov
into
int3
or
dec
jmp
aam
mov
sbb
dec
pop
fisttps
cmp
int3
jb
stc
sub
dec
js
dec
mov
stos
int3
or
nop
rorb
imul
jge
rclb
pusha
dec
test
cld
adc
cld
and
scas
sarb
sub
lret
lods
push
nop
ds
lods
pop
xor
popf
ja
shll
rcll
cmp
push
or
iret
dec
sti
out
xchg
ret
jne
dec
cmpsb
jno
dec
push
pop
addb
adc
scas
xchg
mov
out
scas
or
pop
movsl
imul
push
dec
out
mov
popa
int3
mov
out
cmp
popa
mov
out
pop
out
rolb
data16
in
mov
int
jp
call
stos
movsl
pop
subb
in
scas
adc
dec
adc
cmp
sbb
push
fstps
sbb
pop
pushf
ss
leave
ljmp
cmp
mov
out
or
in
and
sbb
adc
out
movsl
mov
jns
imul
push
add
shll
sti
leave
push
lea
dec
js
scas
daa
jae
les
dec
push
ljmp
mov
dec
into
icebp
fsubrp
nop
jnp
jp
pop
sub
std
adcb
xchg
adc
mov
fwait
dec
ret
repnz
mull
jmp
pop
js
mov
cmp
out
fisttpll
jo
stos
aas
sub
add
lahf
or
movsl
xor
jb
fcmovnb
add
inc
test
cltd
fildll
pop
xchg
or
js
js
lret
les
ljmp
push
sub
jns
jns
pop
fisubrl
ror
fistps
outsl
pushl
test
mov
mov
jno
push
insb
test
roll
sub
cmp
loop
enter
mov
mulb
rcr
xor
es
inc
pop
inc
and
out
gs
xchg
dec
mov
jmp
cmpsl
sub
mov
mov
push
cmc
popa
cmpsb
cmc
mov
xlat
nop
mov
mull
or
mov
dec
ret
and
cmp
fisubrs
mov
jnp
add
dec
sarl
rcl
js
push
sti
scas
xchg
or
dec
mov
mov
jmp
ret
out
out
push
ljmp
push
pop
mov
push
outsb
sarl
push
push
mov
insl
stos
sbb
iret
mov
loope
jge
jg
adc
lcall
repnz
pop
daa
arpl
and
test
xchg
adc
cs
lret
mov
out
or
out
xchg
bound
push
scas
lret
or
xchg
jg
mov
xchg
sub
mov
mov
into
push
scas
push
or
dec
xchg
push
mov
mov
pop
push
mov
imul
ficomps
out
arpl
aas
mov
sbbb
scas
add
push
gs
cwtl
int3
add
sub
or
fsubrs
mov
aam
movsl
leave
mov
push
mov
in
cld
imul
mov
dec
cs
and
sbb
icebp
push
fisttpl
mov
in
push
in
rolb
je
add
adc
mov
inc
xchg
mov
add
sbbl
xor
hlt
inc
shll
jno
lock
daa
add
push
pusha
std
xor
or
cli
mov
mov
mov
mov
loop
dec
icebp
push
adc
mov
adc
popf
lret
mov
pop
dec
adc
not
mov
loopne
cltd
leave
ss
lfs
mov
cmp
and
out
ja
test
mov
lea
push
mov
andb
mov
in
or
mov
ficomps
cmpl
and
nop
stos
dec
int3
mov
sbb
lds
pop
mov
cmp
scas
aas
dec
fsubs
pop
in
adc
in
sub
andl
push
int3
sbb
and
sub
insb
xchg
fildl
inc
lret
xchg
mov
add
mov
pop
fdivl
and
mov
nop
ud1
cmp
lcall
mov
out
sti
pop
pop
cmpsl
sbb
data16
int3
push
in
xorb
in
mov
loop
cmp
adc
lcall
into
and
or
cmpl
aas
jle
orb
bound
shrl
ror
inc
inc
data16
fsubrp
aaa
dec
push
push
xchg
cwtl
sub
mov
adc
dec
jne
add
xchg
pop
dec
xor
lock
jae
lock
sbb
incb
push
lods
test
addr16
into
xor
filds
pop
imul
lcall
push
xor
jmp
cmpl
insb
lcall
aam
or
lds
mov
int
mov
fs
mov
fisttpl
mov
adc
imull
inc
jge
or
popa
pop
mov
movsb
jne
xor
daa
inc
shlb
bound
push
stc
shrb
bound
pop
add
fcomi
mov
ret
push
add
daa
jmp
cli
cmp
or
inc
mov
jbe
sub
and
push
dec
sbb
arpl
stos
cmc
dec
aad
cld
shr
xchg
pop
aam
adc
lods
inc
clc
adc
xchg
mov
push
inc
xor
push
insl
sub
orb
push
xchg
lahf
and
fdivp
mov
loop
loop
cmp
sahf
adc
jbe
cmp
jmp
int
adc
out
and
dec
push
or
mov
and
dec
mov
insl
sbb
push
sub
or
fildl
or
rorb
repnz
fidivs
pop
out
pop
fwait
xchg
fldt
jns
out
push
adc
cwtl
aaa
leave
mov
xchg
arpl
in
aad
mov
test
test
mov
fistpll
mov
int
arpl
jge
scas
push
scas
xor
dec
or
push
fimuls
clc
insb
bnd
sarb
xchg
idiv
adc
bound
test
out
jp
fistpl
in
in
imul
push
or
mov
dec
cmp
cmp
popa
mov
lods
or
push
push
sub
adc
push
lods
into
movsb
int3
jp
mov
mov
xor
push
lret
sbb
cmpsl
subb
push
push
push
test
push
xchg
xor
jecxz
push
js
push
mov
icebp
dec
push
lcall
dec
jg
cs
mov
lcall
jns
mov
cs
test
fistpl
mov
filds
push
mov
mov
out
dec
pop
or
fcmovnb
push
fabs
int3
cmp
shrl
add
pop
push
cmp
mov
jmp
jmp
repz
aad
fdiv
sbb
pop
mov
data16
mov
cli
jo
jg
mov
fidivrs
mov
out
leave
mov
jecxz
mov
sub
dec
dec
jge
xchg
bound
mov
cmp
jmp
loop
fs
lahf
mov
and
jns
and
ret
lret
pop
mov
cmp
adc
int
roll
mov
std
dec
xlat
cmp
push
out
push
lock
out
fmuls
iret
inc
imul
sbb
mov
xchg
loop
add
outsb
sarl
sbb
shrl
xor
int
jp
insb
sbb
lea
jmpw
jp
push
xchg
sbb
int
rol
dec
cmp
jno
lds
cltd
loop
push
enter
mov
aad
pop
jnp
mov
fimuls
int3
sub
or
lret
in
std
push
jmp
cmp
wbinvd
xchg
cmp
sbb
add
fucom
lods
dec
adcl
dec
cli
or
push
loopne
dec
cwtl
ret
fnstcw
gs
sbb
mov
lock
mov
lods
and
mov
xchg
adc
mov
mov
mov
sahf
aam
dec
mov
ret
icebp
shl
or
mov
cmp
icebp
lret
mov
inc
jle
dec
cltd
pushf
enter
adc
mov
negl
push
inc
fcoml
pop
aam
dec
jmp
xlat
stc
inc
es
std
testb
mov
pop
lret
rcrl
push
cmp
jno
cmp
repz
or
mov
lret
int
inc
sub
das
scas
loop
in
stos
push
xchg
scas
pop
inc
sub
jmp
es
ret
cmp
into
xor
rcll
dec
nop
sbb
lret
stos
loope
or
adc
test
pushf
scas
repnz
mov
and
rolb
cli
xor
push
iret
push
cs
test
or
sub
and
loop
mov
pop
bound
dec
sbb
pop
cld
notb
int3
movsl
pop
mov
mov
push
cmp
mov
xor
inc
pop
and
stos
fisttpll
xor
sub
push
and
lahf
scas
cltd
inc
fcoms
mov
pop
push
cmc
cld
push
pop
pop
imul
mov
xor
insb
loope
dec
cs
and
lret
in
aad
scas
mov
sbbb
push
push
pop
sbb
and
push
dec
add
sar
out
in
loope
in
nop
push
push
addr16
xchg
fistpl
ffreep
xor
mov
aaa
in
jb
rorl
call
sub
mov
jmp
and
mov
xor
push
leave
push
pand
cs
jp
loopne
add
imul
or
dec
xchg
clc
or
lret
scas
psadbw
xlat
and
cmp
jle
jns
mov
push
sbb
outsl
xorl
and
mov
pop
push
jmp
pushf
loop
popf
and
fs
xorb
or
xchg
fdivr
fmul
fadds
jecxz
dec
cs
push
gs
or
insb
outsb
mov
fcoms
sub
inc
or
or
cltd
push
mov
sbb
add
int
inc
sbb
sti
jo
add
sti
mov
push
or
add
jle
adc
rcr
pop
and
rolb
xor
clc
dec
cli
pop
jbe
scas
movswl
inc
mov
dec
jnp
ror
int
jl
push
push
ror
mov
scas
or
jmp
sbb
mov
lcall
dec
into
lods
push
dec
scas
lret
incb
mov
xor
test
cs
ljmp
roll
mov
sub
xchg
cmp
push
mov
lret
sub
mov
popa
loopne
mov
sbb
and
clc
pop
pusha
sarl
dec
aaa
dec
push
add
pop
pop
ss
add
movb
int3
cmpsl
lret
das
and
sbb
or
into
push
add
pop
rclb
daa
and
lret
dec
inc
int
add
sarl
mov
push
sbb
push
leave
lcall
sbb
xchg
dec
dec
mov
je
sbb
stos
cmp
dec
test
or
mov
std
xchg
pop
mov
inc
jp
jp
cltd
nop
mov
adc
or
sbb
pop
loop
mov
lcall
imul
add
jbe
es
sbb
jle
mov
cmp
pop
es
int
bound
insb
and
sti
sbb
int3
repnz
shll
or
xchg
or
sbb
jns
fidivs
std
jp
pop
push
cmpsb
sbb
leave
repnz
mov
aaa
pop
es
cmpsl
lcall
adc
outsl
lret
add
outsl
sti
clc
outsb
in
pop
mov
repnz
sbb
pop
adc
shl
pop
lret
jl
in
aaa
int3
pop
mov
aad
outsl
sbb
test
std
cmp
ja
mov
xor
xchg
dec
sbb
test
adc
mov
xor
fwait
xchg
mov
xor
stos
mov
mov
xor
push
mov
push
jns
and
mov
scas
cld
xchg
jmp
sub
dec
pop
incl
in
mov
add
mov
int3
out
iret
jnp
xor
jl
xor
mov
jo
xchg
fisubrs
add
xchg
int
push
daa
push
dec
cld
dec
les
shll
dec
push
push
movsl
adc
mov
out
push
add
push
mov
int3
mov
or
or
push
cltd
adc
mov
push
lret
pop
xor
or
xor
mov
push
int3
shll
push
or
xor
jno
mov
push
aam
in
dec
cli
fistl
xor
inc
call
fisttpl
cmc
mov
adc
lds
mov
movsb
or
rorb
pop
mov
js
fisttps
stos
push
cmp
lret
in
jge
xchg
dec
inc
stos
btr
pop
and
pop
lods
mov
mov
data16
sti
jns
cmp
adc
addr16
rorb
pop
fiaddl
psubsw
roll
jp
outsb
clc
inc
inc
mov
mov
aam
in
jmp
clc
push
aas
jmp
jne
sub
push
push
push
mov
xor
lcall
aad
fildl
cmp
neg
das
adc
push
out
test
mov
pop
push
adc
mov
mov
mov
outsb
sbb
mov
sub
loop
popf
sarb
push
xor
mov
call
mov
leave
lea
or
outsb
cmc
stos
cmp
int3
jmp
or
int
cmp
cmp
fidivrs
mov
idiv
scas
jae
adc
sti
mov
test
pop
cmp
out
dec
mov
xchg
ljmp
js
dec
push
inc
fidivrl
push
xchg
xchg
jmp
bound
push
mov
adc
sub
scas
lds
push
or
repnz
sbb
cmp
mov
les
xchg
xchg
mov
shlb
jns
xlat
out
jns
or
in
pop
lret
iret
ljmp
or
leave
loope
addr16
ljmp
loope
in
push
dec
or
push
pop
pop
pop
mov
mov
rcll
or
add
and
jae
dec
pop
out
mov
xor
pop
das
dec
or
cmp
dec
mov
js
jp
inc
inc
sbbl
cs
and
outsl
outsb
pusha
and
daa
fst
lret
jl
push
mov
es
sahf
mov
dec
and
cli
add
scas
push
lods
add
test
xlat
dec
shlb
mov
sbb
sub
jge
mov
sbb
insb
or
xor
pop
fistl
stos
mov
cli
popa
push
or
and
mov
mov
inc
lea
aas
or
pusha
clc
pushf
xor
in
jle
jge
imul
mov
jge
movl
xchg
cmpsb
bound
push
push
inc
test
les
pop
ret
push
or
adc
mov
or
mov
cwtl
push
jnp
adc
and
push
push
push
test
or
in
xchg
jbe
imul
lret
enter
xchg
or
int3
ret
stos
add
inc
or
mov
mov
fistpll
inc
incl
outsl
cwtl
out
movl
in
pop
cmpl
push
push
lret
out
mov
stc
pop
fucomip
movsb
popa
mov
add
mov
push
fisttpl
xor
add
cmp
jge
aas
std
scas
pop
cs
popf
scas
hlt
out
mov
pop
sbb
sti
mov
out
xchg
scas
cwtl
hlt
mov
xor
lahf
push
movsl
iret
jecxz
mov
sbb
mov
hlt
ficoml
cld
lods
icebp
adc
mov
inc
cmp
lcall
sbb
sti
xor
js
testb
jp
mov
jg
scas
pushf
jmp
mov
pop
aas
mov
and
inc
mov
jbe
das
xchg
gs
sarb
cld
lods
cmp
std
mov
dec
mov
das
ljmp
xor
outsl
sbb
xchg
test
mov
or
xor
pop
and
sub
stos
aas
lret
ret
insb
bound
je
and
and
xor
dec
cltd
mov
xchg
and
jns
dec
dec
mov
stos
push
or
int
pop
sbb
cmp
daa
pop
mov
mov
repz
rorl
aaa
jecxz
jmp
int3
mov
push
sbb
jmp
pop
pop
mov
jle
int3
lret
jmp
dec
jge
mov
sbb
fwait
iret
mov
xor
push
jns
inc
nop
pop
push
ret
jp
dec
xchg
sbbb
into
lret
andb
jo
lahf
loopne
pop
aas
push
outsl
sub
ror
dec
cmp
jle
inc
lret
aad
jle
test
mov
insl
bound
push
xchg
pushf
pop
rolb
jmp
sub
add
hlt
sarb
fcomps
nop
orl
jl
shrb
mov
sbb
lahf
and
pop
dec
pusha
cli
ret
aaa
nop
push
lahf
and
mov
mov
sub
xchg
cmp
sahf
imulb
cmp
push
pop
fbstp
outsb
out
pushf
sbb
dec
jl
sbbl
bound
mov
in
push
dec
jl
mov
int3
rclb
mov
adc
mov
add
shr
js
mov
xor
pop
repnz
inc
insb
mov
mov
jg
pop
shll
rcr
or
iret
js
scas
aad
aas
add
mov
stc
rclb
repz
rcll
mov
lret
add
or
rcr
sbb
or
jge
sarl
ja
mov
mov
fstl
or
lods
fidivrl
das
push
pop
pop
and
shr
pop
inc
scas
dec
das
push
push
movsb
pop
mov
fcmovnu
sub
into
imul
repz
sbb
aas
das
dec
sbb
pop
subps
loopne
mov
out
jbe
aad
out
pop
stos
mov
fmulp
adc
fimuls
dec
bound
outsb
dec
test
mov
call
es
jae
mov
lahf
dec
lods
cmc
imull
xchg
imul
fwait
imul
push
mov
inc
xchg
push
movsb
popa
out
loopne
mov
jecxz
scas
sub
xlat
pop
sub
shrl
fwait
loop
dec
icebp
mov
pop
sti
or
ljmp
mov
mov
notb
mov
push
xchg
hlt
lret
repnz
pop
loop
push
imul
xor
mov
pop
out
testl
jmp
inc
cld
cmp
pop
scas
jne
movsl
sti
bound
cltd
fucomp
and
or
cwtl
pop
xor
lods
jbe
or
dec
xchg
push
inc
lock
sbb
out
insl
fdivl
xchg
push
out
dec
add
cmp
sbb
ja
mov
adc
and
mov
addb
idivl
insb
push
mov
lahf
es
sub
sub
lwpval
add
push
dec
pusha
outsl
mov
or
iret
inc
pop
xchg
cli
pop
push
adc
fidivrl
int
jnp
mov
mov
cmc
rol
data16
sarl
and
and
adcb
repnz
repnz
mov
mov
scas
push
arpl
int
pop
nop
jmp
test
test
jp
out
ss
push
hlt
out
inc
mov
mov
es
inc
fdivrl
dec
jge
roll
pop
out
jb
data16
jl
dec
ror
adc
inc
mov
stos
jg
sbb
js
cld
int3
pop
dec
frstor
aaa
cmp
fcoml
mov
int3
js
push
hlt
push
dec
fcmovnbe
call
in
movsb
or
cmpsb
lds
jg
lahf
in
movsl
jg
pop
or
xor
pusha
cltd
cwtl
shlb
jge
rcll
adc
loop
adc
mov
out
andb
add
xchg
repz
push
stos
mov
mov
clc
lcall
jmp
push
sbb
cli
fsubrp
orb
jae
and
das
int
adc
sbb
aad
jl
sarb
adc
icebp
jbe
pushf
dec
mov
aam
or
in
pop
mov
pop
sub
mov
xchg
es
into
data16
les
xchg
aam
mov
and
fldt
mov
outsl
pop
cltd
sahf
push
mov
mov
jge
jmp
push
sub
xor
in
in
jae
xlat
inc
faddl
insl
rclb
push
ljmp
clc
adc
jo
repnz
sub
rolb
iret
mov
jmp
xchg
add
xchg
nop
and
push
push
mov
sti
test
dec
and
fmul
xor
jmp
out
mov
fsubs
ljmp
iret
pop
movsb
dec
loope
ret
aaa
and
pop
rolb
int3
subb
and
inc
xchg
add
mov
push
pop
or
fldcw
mov
mov
popf
pop
jmp
inc
pop
dec
int
add
lea
cmpsb
shll
imul
sbb
mov
cmp
shll
rorb
mov
fbstp
jge
pop
jmp
sbb
inc
mov
cli
test
push
jo
data16
sarl
jne
pop
pop
cmp
push
les
out
or
adc
das
cmpsb
bound
aaa
cmp
es
cmc
test
fisttps
add
fs
jl
sub
mov
dec
fsts
imul
jge
repnz
sar
sbb
mov
cs
add
and
push
into
mov
sbb
lahf
dec
sub
push
pop
push
iret
cmp
loop
mov
cmp
outsb
popa
scas
lret
pop
aaa
jmp
cmp
into
pop
cmp
xor
mov
or
icebp
sbb
push
pop
mov
jle
gs
popf
rcl
mov
scas
adc
push
sub
cltd
inc
jbe
xchg
sbb
jl
out
sbb
lret
aam
rorb
pop
test
mov
pop
push
push
rcr
mov
mov
and
jl
rorb
push
insb
mov
mov
cs
rcl
adc
aas
push
out
iret
data16
es
or
jge
xlat
outsb
fsubrs
pop
dec
je
loopne
inc
xor
jmp
inc
dec
movb
xchg
push
lcall
sub
sub
or
lods
in
andl
in
sbb
mov
lea
adc
loop
lahf
xchg
pusha
cvtdq2ps
mov
mov
lods
pop
dec
and
ljmp
pop
loope
xchg
addr16
xor
jmp
dec
fistpl
or
out
adc
xchg
push
pop
stos
jmp
inc
or
or
and
adc
daa
ja
cld
xchg
or
sbb
and
arpl
pop
cmp
push
xchg
jmp
aam
and
call
mov
js
enter
int3
mov
cmpsl
push
xor
fwait
inc
cmp
push
popf
scas
push
movsl
filds
inc
fs
and
cltd
jp
push
cmpsb
adc
adc
shrb
outsl
dec
cwtl
mov
cmpsl
aad
mov
lret
or
mov
xchg
dec
jmp
xor
fidivrl
mov
fmull
sbb
cmp
mov
lods
lret
bound
mov
scas
ss
out
dec
xchg
lds
es
push
ret
adc
or
and
cmp
cmp
xor
insb
adc
jb
mov
andl
mov
push
data16
popf
je
and
out
lock
mov
mov
iret
sub
out
jbe
xor
imul
sbb
push
xchg
leave
insl
or
inc
outsb
sti
ljmp
adc
fisttpl
sahf
xlat
cmp
and
sub
adc
or
decb
add
aam
ret
iret
adc
push
cli
add
adc
mov
jg
in
out
test
cwtl
ret
bound
mov
inc
leave
pop
fwait
leave
lret
repz
adc
push
enter
and
or
mov
lds
jo
in
rolb
add
outsl
push
nop
push
xchg
and
or
sub
loop
mov
mov
mov
fadds
inc
xchg
jnp
sub
cmpl
or
outsb
mov
stos
push
divb
mov
push
test
mov
push
stos
push
loop
mov
fsubs
mov
cld
push
or
mov
jno
idivl
push
cmp
fdivrs
mov
in
stos
lcall
dec
pop
jle
adc
int
ja
or
out
mov
cld
mov
dec
adc
into
mov
and
inc
sbb
jmp
and
mov
ss
enter
filds
test
sbb
pop
adc
mov
push
loop
test
lahf
xlat
dec
cld
outsl
test
xchg
mov
stos
dec
rcr
cmp
or
adc
faddl
push
ja
pop
testl
pop
ss
sub
pop
rcr
cmp
das
leave
stos
cwtl
push
and
sbb
sub
jecxz
lret
push
cmp
and
mov
mov
fsubs
or
pop
dec
push
pop
adc
std
inc
mov
call
add
fcompl
inc
stc
addl
add
xchg
sub
popa
mov
pop
xchg
xchg
lahf
xchg
jns
push
lea
movsl
adc
mov
mov
sarl
aaa
adc
xchg
test
scas
xchg
fsubs
xor
add
sub
arpl
jge
in
icebp
test
hlt
mov
xor
rclb
cmp
push
jp
mov
lret
dec
xor
mov
dec
mov
repnz
sti
dec
mov
stos
mov
add
lret
and
flds
add
testb
adc
lcall
dec
add
xor
dec
push
mov
pop
push
pop
dec
pop
mov
sbb
ffree
sbb
js
push
xchg
jg
lods
or
jecxz
call
iret
icebp
jp
pop
cmp
jl
xchg
add
push
orb
jns
push
dec
mov
or
pop
sub
pop
lret
dec
mov
add
sub
adc
xchg
scas
scas
mov
add
cmp
pop
push
jge
fldt
fcmove
pop
jo
xor
aad
hlt
add
pop
movsb
les
mov
mov
setl
test
int3
push
into
pop
ljmp
je
or
dec
sub
push
push
test
xchg
sti
fcomi
fwait
leave
or
mov
cmpsb
lock
bound
push
stos
imul
dec
add
fistps
mov
sbb
fstps
pop
loop
jge
sub
mov
dec
mov
dec
pop
addr16
lret
fldpi
int
enter
pop
test
in
int
les
mov
jo
push
push
popa
sti
pop
rcrl
push
jg
out
ss
cld
iret
idivb
pop
cli
stos
sbb
push
mov
mov
fdivrl
repz
mov
sbb
push
and
outsl
dec
bound
in
inc
jp
stos
pop
and
mov
pushf
mov
adcb
dec
mov
out
sbb
pop
jp
sbb
rorl
mov
stos
cli
and
vcvttsd2si
fwait
push
jecxz
push
push
pushl
xor
iret
push
adc
jo
or
shrb
pusha
pop
lret
mov
fadd
or
out
jae
in
pop
fsts
jg
push
stos
or
rcl
and
mov
push
pop
adc
pop
out
rclb
mov
mov
lock
dec
out
dec
xor
mov
sub
dec
ja
divl
mov
inc
push
or
das
lret
cltd
es
and
int3
adcb
mov
loop
fsubl
test
mov
mov
cmp
bswap
movsb
mov
push
int3
mov
es
repz
push
imul
loopne
jl
push
call
push
cmp
lahf
dec
jg
push
ror
movsl
cwtl
dec
inc
mov
sbb
jmp
pop
xchg
ret
sbb
pusha
sub
adc
inc
xchg
adc
daa
push
adc
fcoml
dec
pop
adc
notb
shlb
xchg
rcrl
mov
mov
test
jl
shlb
mov
dec
fs
push
dec
jb
outsl
pop
dec
shrl
push
fucomp
adc
test
add
les
lret
cmpsl
shlb
pop
mov
jp
sub
ret
fisttpl
and
out
sti
in
add
xchg
push
xor
or
loopne
sti
imulb
fsincos
add
call
add
push
cmp
push
add
scas
or
sbb
sub
jo
adc
sub
inc
iret
std
push
mov
rcl
das
fmuls
xchg
std
fisubl
ret
nop
push
std
xor
rclb
push
jge
push
daa
and
mov
pop
pop
push
xchg
sbbl
stos
lods
in
jge
repz
js
rclb
cmp
sti
out
fsubrs
int
sub
lcall
jle
push
cli
push
lret
push
dec
jp
jno
dec
dec
mov
sbb
outsb
lret
hlt
inc
pop
cmp
push
lret
push
shl
or
lcall
imul
push
ficoml
lret
push
push
push
push
mov
jnp
and
ds
in
mov
pop
push
adc
stos
xlat
dec
cmpb
int
cmp
push
int3
pop
fnstcw
out
ror
dec
or
mov
mov
aad
jo
rcrl
push
xchg
insb
push
cmp
adc
dec
fucomp
inc
into
arpl
adc
ret
fcoms
outsb
shl
int3
shrb
xor
pop
mov
dec
mov
out
std
and
sub
lret
in
popf
enter
push
ljmp
dec
inc
sub
ror
dec
add
dec
push
dec
aas
into
data16
cmp
push
in
mov
pop
jo
mov
mov
mov
cmpsb
dec
mov
or
add
mov
lret
push
int3
push
jae
imul
fsubr
add
bound
sarb
xchg
in
int3
cmpsb
pusha
dec
push
push
cmp
sbb
arpl
push
push
movsb
iret
add
mov
mov
lret
mov
mov
sub
rorl
out
pop
fadd
push
int3
sub
shl
sub
pop
push
lret
jecxz
mov
or
or
or
rcl
xor
jp
sbb
icebp
lods
popa
push
mov
stos
push
xchg
enter
out
pop
dec
fistl
mov
sub
lret
push
outsb
mov
jl
ds
cmp
jbe
shll
arpl
inc
pop
iret
or
cltd
iret
push
dec
xlat
in
in
dec
sbb
repnz
jno
outsb
xchg
ljmp
shrl
mov
push
lahf
rclb
iret
sarb
xor
adc
inc
or
dec
loopne
fcompl
jle
push
sahf
into
adc
out
shr
dec
int
rorb
push
dec
and
rcl
xchg
push
int3
int3
out
les
clc
push
mov
sub
fldcw
out
pop
lea
rorl
xchg
dec
testb
into
and
into
or
push
fstpt
ret
fwait
or
int3
fdivrl
inc
and
lret
cmp
rcl
xchg
imul
adc
add
push
ljmp
loope
dec
mov
ja
pop
push
scas
xor
lret
pop
xchg
mov
dec
dec
lods
inc
lret
cld
push
aad
scas
mov
test
fldlg2
mov
orl
fsubl
dec
mov
sub
ror
inc
jecxz,pt
lret
lea
jecxz
sbb
dec
adcb
dec
pop
shrl
lds
push
iret
ds
adc
push
in
mov
push
cmp
pop
shrl
dec
pop
sbb
mov
into
push
mov
out
push
fdivrl
push
out
rcl
mov
js
into
movups
insb
loopne
cwtl
dec
adc
fcomp
lds
dec
dec
push
insl
ret
and
dec
dec
int
xor
jb
decb
int3
push
inc
dec
pop
mov
fnsave
push
fcompl
in
mov
aad
push
movsl
mov
sub
ret
lods
fcmovnu
dec
push
xor
push
pop
iret
add
ret
in
push
fists
sub
int3
dec
dec
jno
int
into
dec
and
jecxz
push
dec
inc
mov
or
jmp
lret
aam
dec
jge
inc
mov
mov
or
fadd
jo
xlat
jl
sarl
pop
push
dec
aad
out
push
dec
or
out
push
fdivrl
fstps
in
cmp
xor
jle
add
dec
addr16
add
push
dec
adc
in
int
cwtl
jl
shrb
push
mov
xor
jp
fmulp
or
mov
ljmp
out
insl
jecxz
xor
pop
adc
dec
push
push
push
outsb
dec
xchg
adc
jo
gs
out
or
fcoml
mov
cld
xor
push
fisttps
jae
lret
push
xchg
dec
mov
lret
adc
fists
lock
xchg
push
pandn
dec
xlat
out
dec
xor
insb
push
xchg
push
xor
das
mov
mov
jl
stos
lret
int3
xchg
fmull
dec
fdivr
sub
mov
out
sbb
push
aaa
dec
adc
out
push
push
xchg
push
jne
aad
fisttpl
cli
push
scas
dec
icebp
xchg
fcmovnbe
in
or
lock
aam
or
mov
push
push
dec
xchg
int3
fisttpl
into
sti
push
test
iret
pushf
push
sub
popf
fistl
dec
out
pop
sti
xchg
pop
xchg
iret
cwtl
sub
data16
iret
cmp
or
pop
stos
push
pop
push
dec
dec
push
adc
insb
push
xchg
out
outsb
cmp
dec
lea
or
inc
adc
out
xor
push
dec
lret
jno
fistl
scas
hlt
adc
iret
push
push
lret
out
hlt
xchg
fisttpl
aad
xor
dec
pop
xchg
dec
xor
lret
pop
and
int3
mov
push
dec
in
testl
push
shr
xor
push
push
xchg
in
jae
out
aad
cltd
cmp
dec
int3
lods
sub
out
xchg
or
or
out
stos
or
mov
sbb
dec
insb
fcoml
sbb
dec
sub
out
mov
cmp
lret
lods
jmp
mov
out
outsb
scas
int3
in
iret
mov
push
dec
inc
test
fistl
repnz
aas
cmp
rorl
push
cld
fcmovnb
dec
into
fdivrl
xchg
outsb
sub
lret
rep
cwtl
dec
push
int3
sbb
adc
dec
cmp
outsl
out
push
out
dec
rcr
enter
in
rcll
iret
xchg
mov
push
loope
ljmp
aam
dec
lret
pop
and
sub
fsubr
pop
in
push
fmulp
rcrl
mov
adc
mov
and
mov
dec
sti
inc
addl
in
lea
xchg
outsl
loope
outsb
in
dec
sub
mov
add
adc
int3
fcompl
mov
mov
ds
out
fcompl
push
sub
mov
cmpsl
fsubrl
call
mov
inc
cld
ret
push
or
loopne
out
stos
ds
push
push
out
or
lret
push
jo
imul
jp
ja
or
xlat
js
adc
out
adc
loop
jbe
pop
imul
xchg
stos
jmp
adc
fstpt
scas
jns
pop
dec
inc
dec
jmp
aad
call
rcr
dec
lret
shlb
rclb
dec
arpl
adc
popf
mov
push
pop
iret
jmp
repnz
add
out
xchg
lahf
jns
psadbw
pop
dec
sub
pop
ljmp
nop
ret
jb
sbb
shrb
dec
mov
mov
mov
and
push
cld
dec
push
push
jg
imul
loop
mov
in
int3
dec
xchg
lret
lret
shr
pop
xor
push
fistpl
jnp
loope
add
cmp
dec
push
adc
adc
dec
cmp
lock
and
stos
sub
in
out
iret
jp
pop
adc
cmc
in
mov
jb
mov
lret
pop
dec
fmuls
push
push
ret
sarl
rcrb
decl
testb
out
dec
aas
sub
cmp
fisttpl
xlat
int3
fdivrl
loope
cs
mov
iret
pop
int3
dec
adc
js
lret
adc
mov
push
push
in
lds
or
adc
out
ljmp
rorl
xor
scas
or
fwait
mov
jb
pop
rcr
iret
popa
push
aaa
push
aad
iret
lret
cmpsl
or
dec
out
icebp
inc
push
jp
cmp
mov
add
dec
fdivl
inc
fstpt
aad
mov
jle
push
xor
push
enter
fisttpl
dec
ror
out
adc
shrl
iret
push
mov
bswap
push
leave
xchg
pop
inc
and
and
out
dec
ljmp
jmp
sbb
cld
sarl
movsb
dec
sub
lods
out
cli
in
cwtl
mov
inc
xor
push
xor
jp
adc
faddl
adc
push
jp
xor
call
add
mov
icebp
pushf
xchg
push
cmp
mov
in
mov
shr
fldt
hlt
cmp
xchg
out
stos
dec
cmp
ja
imul
pop
jno
in
xlat
push
adcb
push
mov
clc
mov
imul
mov
out
test
sbb
jnp
jmp
xor
adc
in
cmp
adc
adc
dec
outsb
bound
insb
loopne
iret
cltd
jp
iret
push
jg
in
jle
sub
sbb
push
int
cld
andb
or
inc
roll
mov
push
imul
int3
fdivrl
fwait
loop
fstpt
mov
pop
int3
pushf
enter
mov
lret
jle
jl
lcall
dec
sar
jns
aam
add
push
es
lcall
cmp
std
pop
les
dec
xlat
jb
push
dec
lret
inc
and
dec
xlat
in
mov
rcrl
rcr
pop
aad
cs
int3
pop
push
std
dec
fcmovnbe
mov
iret
pushf
push
int3
and
outsl
inc
push
inc
jno
loope
mov
ficompl
push
movsb
or
enter
xchg
mov
int3
fadd
push
adc
sub
movsl
jp
stc
in
sub
dec
push
xchg
xchg
push
push
mov
add
rorb
xchg
test
mov
sbb
dec
mov
iret
dec
int3
push
mov
mov
sub
dec
int3
scas
rorl
imul
lret
hlt
scas
fstpt
xor
push
mov
fadd
jno
dec
sbbb
int3
les
adcl
fisttpll
in
xchg
enter
sbb
or
sub
int
ja
cmc
fcmovnbe
dec
and
adc
lahf
iret
mov
pop
push
cmp
int
rclb
loop
cmp
int3
inc
push
imul
rorb
iret
push
imul
jp
add
xchg
jbe
push
pop
out
insb
ds
add
ret
into
xor
ror
rcrl
and
or
push
mov
dec
dec
mov
test
jb
out
int
dec
pop
pop
lret
int
push
fs
adc
pop
ljmp
sub
imul
jp
adc
fisttpl
push
dec
push
sub
adc
hlt
mov
adc
inc
fisttpl
dec
adc
adc
mov
mov
pop
sub
dec
in
pop
dec
adc
or
aad
pop
push
cwtl
push
cmpsl
fisttpll
negl
dec
inc
xor
aam
xchg
rcll
dec
mov
femms
insb
in
rcr
mov
or
out
push
out
jp
jmp
push
pop
sbb
sub
fmull
sub
fsubs
andl
inc
inc
push
pop
adc
addl
dec
mov
call
or
mov
call
inc
mov
push
int
pop
out
sub
call
jo
and
scas
push
cmp
in
sbb
aad
mov
add
sbb
stos
lret
fisubl
push
mov
xor
push
sti
jns
pop
push
dec
xchg
dec
in
ljmp
dec
push
adc
cwtl
cs
adc
add
das
and
inc
push
push
in
popa
or
adc
orb
in
lahf
or
mov
cld
mov
rorl
xchg
shll
adc
testb
stos
mov
bound
fmull
pop
adc
stos
jp
jecxz
fucomi
sub
dec
push
cwtl
jae
pushf
adc
mov
cmp
in
sbb
jp
or
mov
fdivrl
dec
jp
adc
fsubrl
paddsb
sbb
addr16
out
frndint
and
rcll
es
dec
adc
faddp
jl
push
in
loopne
sbb
push
das
add
addr16
xlat
pop
xor
fmul
rcr
clc
sub
push
push
mov
loope
lretw
push
fstpt
pop
lahf
xlat
out
int3
mov
pop
scas
pop
or
out
push
fcmovne
das
fadd
jno
lret
xchg
lret
dec
in
lds
in
ret
fwait
roll
cwtl
adcb
fdivrl
adc
mov
mov
out
rcr
int3
or
mov
mov
push
push
gs
hlt
jp
pop
fcompl
fsubrs
push
or
dec
mov
cwtl
dec
lahf
out
cmp
aad
clc
lock
push
in
inc
pop
lea
repnz
and
popa
sbb
xor
xchg
fidivrl
jp
aam
mov
leave
jmp
bnd
pop
adc
mov
adc
popa
arpl
ret
cmpsl
mov
dec
jle
popf
push
mul
mov
cmpsl
mov
adc
push
ficoms
lret
aas
aas
push
pop
jmp
rcl
xchg
out
imul
lret
jg
in
push
dec
repnz
dec
dec
or
pop
jp
in
orl
inc
cmc
addl
push
push
out
dec
inc
sub
xlat
and
mov
rcr
mov
lret
std
int
adc
cmp
fcmovne
lea
cld
push
out
pop
pop
cmp
pusha
hlt
lret
hlt
rcl
sbb
mov
insl
dec
fisttpl
test
repz
aam
insb
imul
clc
cli
dec
xchg
fcoms
cmp
push
xchg
pop
mov
push
fldt
rol
pop
mov
out
cmp
int
dec
jl
push
inc
or
lret
push
push
pop
push
push
add
adc
fisttps
outsl
cmp
jl
push
call
cmp
into
adc
in
ror
dec
lret
mov
xchg
adc
dec
int3
rorl
inc
popf
adc
xchg
neg
mov
std
xlat
mov
int3
add
lret
dec
fadd
sbbb
xlat
mov
adc
inc
shlb
lret
out
dec
popf
mov
mov
shlb
int3
mov
dec
ret
cwtl
mov
dec
addb
pop
les
bound
or
hlt
jb
out
dec
test
adcb
push
adc
sub
xlat
lret
inc
and
in
push
in
lods
lds
leave
jbe
push
jp
outsl
fwait
jb
jmp
rcl
arpl
cmp
mov
cmp
int3
jmp
sub
xor
push
fs
dec
push
push
cs
mov
icebp
and
jmp
repnz
push
jge
ds
push
popf
pop
enter
out
xchg
fcomp
dec
lahf
pop
int3
outsl
dec
dec
jp
mov
ror
dec
push
adc
inc
inc
cmc
fldenv
scas
xlat
rcr
dec
or
pop
rcl
xor
mov
mov
push
push
sub
iret
dec
fisttpl
fdivrl
jae
or
in
mov
mov
mov
sub
push
lret
dec
aaa
out
push
dec
fadd
jo
out
ds
push
push
les
dec
insl
hlt
loopne
ret
pop
jmp
fcmovnb
stos
push
push
push
dec
in
mov
outsl
cs
push
sub
push
jae
push
rorb
into
out
push
or
push
push
lret
dec
mov
lret
dec
dec
lock
and
int3
adc
int
inc
inc
into
adc
xchg
fmul
rclb
jno
into
or
sub
dec
mov
mov
scas
inc
repz
mov
int
popa
mov
jp
or
pusha
mov
lret
pop
sbb
pop
loope
or
add
rcr
inc
loop
dec
cmp
cmpsl
mov
int3
in
lods
sbb
push
sbb
mov
fdivl
into
sub
dec
pop
jl
aam
dec
cmp
jp
fsubrs
push
fwait
int3
call
push
lret
fimuls
dec
mov
push
push
adc
sar
xchg
testb
into
ret
push
mov
push
in
cmp
or
mov
int3
lret
lds
lods
int
into
jno
fcomps
push
jbe
insb
cmpl
stos
push
dec
test
mov
sbb
fwait
jg
cmp
rcrb
cltd
rcl
and
scas
shl
push
popa
test
mov
pusha
fdivp
push
iret
aad
pop
adc
cmp
rclb
hlt
cmp
rol
lods
fildl
sbb
ja
imul
in
xchg
imul
in
xchg
imul
push
sbb
ret
leave
cs
add
sbb
jb,pn
cwtl
out
in
sbb
test
ret
add
sbb
push
mov
out
dec
rorb
dec
repnz
push
push
inc
sarl
cltd
leave
and
repnz
sbb
sub
loop
push
fucomp
das
adc
mov
cli
cmp
in
cmp
pop
inc
cmp
lret
cmp
lock
pop
push
dec
stos
push
int3
push
enter
adc
int3
sbb
jp
sbb
outsb
fmull
lret
xor
sbb
iret
adc
adc
lret
push
adc
cmp
mov
scas
add
cmp
out
loope,pt
inc
fwait
mov
cmp
pusha
arpl
sti
out
aam
jne
adc
or
fnstenv
int3
fxch
in
push
dec
inc
outsb
sub
fst
xchg
sub
imul
inc
sub
adc
pop
push
ret
outsl
scas
lret
jp
xor
lret
jo
adc
scas
repnz
mov
sub
jmp
fstpt
sub
or
fcompl
aad
push
fcompl
into
adc
sbb
rcll
sub
dec
and
add
rcll
pop
pop
bound
mov
jbe
push
push
xor
fists
fisubrl
sbb
inc
fcmovne
rclb
popa
adcl
adc
mov
sub
movsl
imul
aad
fcmovne
fcom
mov
or
js
int3
incb
loope
ficoms
mov
rcr
sar
testb
dec
mov
push
neg
icebp
aad
push
mov
add
cld
xchg
stos
mov
and
or
fldcw
fmul
dec
and
aad
adc
call
int
fistl
nop
push
addb
lret
mov
dec
out
cld
paddsw
push
nop
rcl
xchg
xchg
adc
jne
test
jl
xchg
into
push
fstps
fwait
lret
mov
cli
adc
mov
mov
or
dec
loopne
inc
nop
adc
mov
fisttps
mov
lret
scas
clc
decl
rcll
jmp
sti
push
cli
imul
mov
jb
int
dec
call
mov
in
push
fisttpl
adc
shll
xchg
push
push
je
and
rorb
dec
aad
push
fisttpl
mov
ljmp
iret
out
int3
les
repz
sbb
int
adc
decl
testb
push
push
and
sarb
mov
loope
push
aam
out
mov
inc
inc
scas
push
insb
mov
push
dec
shrb
push
sub
push
mov
into
shld
mov
dec
xchg
outsb
aam
jge
xor
push
lock
pop
fadd
adc
sarb
mov
outsb
movlps
adc
mov
dec
shr
dec
mov
dec
add
fisttpl
dec
out
mov
pop
inc
es
mov
mov
pop
fistl
pop
insb
pop
mov
in
loope
mov
cwtl
movntps
sub
data16
or
rcll
popf
jb
sbb
faddl
outsb
dec
push
or
inc
inc
movsb
test
test
aam
add
xlat
es
push
push
mov
lods
fnstenv
or
inc
fmull
jmp
sub
add
into
lret
cli
cmc
rcr
dec
enter
out
jg
ror
xchg
ds
xchg
in
inc
imul
stc
cltd
xor
fsubrs
in
xlat
cmp
in
push
adc
icebp
lea
adc
int
pop
dec
xlat
sbb
dec
inc
and
in
add
mov
repz
mov
sub
xor
sub
mov
hlt
xor
pop
aam
push
mov
dec
push
or
into
int3
mov
enter
add
add
pusha
dec
inc
pop
xchg
arpl
push
dec
lahf
mov
aam
or
inc
mov
mov
iret
push
or
hlt
push
or
mov
adc
sbb
pop
cmp
inc
mov
push
sub
jl
or
inc
arpl
or
in
outsl
xor
dec
sar
pop
ds
sbb
dec
or
pop
push
dec
adc
mov
in
jp
out
rcr
lret
popa
lret
dec
test
scas
mov
or
scas
mov
push
dec
or
pop
pop
push
lret
loope
push
lds
dec
push
in
je
fimull
out
testb
jbe
xor
in
bound
or
inc
rclb
adc
add
jecxz
push
dec
rorl
lret
pop
and
test
aam
push
fimull
shrl
mov
stc
jge
or
aam
mov
mov
int3
dec
dec
xchg
jne
cltd
mov
sbb
inc
mov
mov
dec
scas
out
push
stos
and
fmul
push
sbb
rorb
insb
es
aam
ret
sub
push
mov
out
xchg
loope
out
push
iret
stos
dec
push
mov
int3
xchg
bound
in
sbb
xor
dec
sub
sbb
dec
nop
movsl
sbb
shrl
sti
xchg
data16
shlb
mov
push
mov
outsb
xchg
dec
sbb
fistpl
pop
sahf
lret
and
xchg
dec
fwait
pop
push
inc
sub
loope
mov
sbb
jmp
push
push
or
dec
fcmovnbe
mov
adc
push
push
mov
jno
iret
or
adc
add
adc
fcmovne
mov
mov
popa
dec
or
jge
jbe
rcr
cmp
in
or
out
pop
in
push
adc
fcmovne
dec
dec
dec
adc
aad
test
in
push
dec
mov
ror
xchg
fcmovnb
faddl
mov
dec
fildl
lcall
push
pop
iret
push
sbb
add
jnp
sub
or
lret
fwait
ror
into
adc
outsb
adcb
dec
or
jg
imul
push
jb
shrl
sub
int3
mov
lret
jecxz
mov
aas
cli
into
pop
repz
fs
or
imul
xchg
add
adc
cmc
rclb
push
inc
jnp
lret
cwtl
mov
int3
repnz
inc
mov
dec
jmp
dec
sti
sbb
and
sub
push
iret
out
mov
mov
jbe
pop
xchg
jmp
adc
jg
jns
mov
inc
push
add
imul
push
push
adc
stos
jmp
rcr
pop
add
dec
xlat
pop
out
cmp
mov
pop
fimuls
cmp
or
push
mov
mov
xchg
sub
xlat
cmp
adc
dec
dec
push
popa
loope
dec
jp
push
xchg
std
push
dec
mov
in
pop
stos
icebp
push
loop
sbbl
fadd
in
lret
or
shll
outsb
outsl
xchg
rclb
pop
mov
sar
or
cld
cmp
xor
lahf
and
inc
xchg
xchg
push
dec
inc
sahf
pop
push
loopne
cmp
dec
pushf
mov
aam
cmpsl
dec
sbb
mov
lret
xchg
dec
or
inc
mov
int3
push
out
add
pop
push
dec
in
ret
stos
rcll
out
adcl
icebp
clc
fisttpll
xchg
imul
cld
dec
adc
loop
scas
pop
jl
adc
jge
adcl
fcompl
cmp
notb
inc
dec
rcr
bound
mov
xchg
and
fisttps
or
cmp
dec
push
mov
or
push
dec
loopne
jb
xchg
push
dec
xor
iret
stos
rcl
pop
push
int
pop
test
xchg
lret
dec
push
inc
shlb
fildl
sbb
add
int
sub
mov
push
dec
push
and
fisubrl
lods
out
stos
test
rorb
sbb
cmp
adc
jnp
movsl
or
sbb
adc
popf
cmp
cs
xchg
cltd
adc
mov
dec
push
or
pop
subb
sub
dec
jl
fmul
rcll
xchg
add
dec
inc
pop
jl
rol
adc
in
out
mov
add
and
scas
testb
les
sbb
mov
xchg
aad
imull
cmpsb
or
cmpsb
shrb
mov
insb
xchg
or
sub
jbe
mov
jmp
dec
in
sbb
lcall
sub
lods
sti
xchg
adc
cld
pop
pop
sbb
cmp
orl
or
adc
cmp
push
sbb
pop
inc
mov
xlat
dec
pusha
dec
pop
jg
fs
cmp
cmpsb
push
push
push
aad
mov
add
dec
iret
rol
pop
scas
roll
in
lret
int3
rcr
sbb
or
lret
jo
xor
sbb
pop
fcoml
jp
xchg
addr16
ljmp
decb
adc
cmp
iret
push
pusha
fmull
sub
ljmp
sti
cli
aam
pushf
push
inc
xor
mov
add
sarl
adc
in
dec
add
lds
mov
or
jb
add
mov
test
in
sub
xchg
adcb
rolb
enter
xchg
sti
mov
sub
pusha
sub
xchg
fwait
pop
loope
xorl
sar
stos
pop
daa
mov
idivb
push
xor
loopne
clc
jne
sbb
sub
xlat
or
cmp
mov
jge
push
icebp
mov
adc
rcll
lcall
xchg
daa
movsl
jno
or
enter
inc
push
pop
lahf
adc
dec
ret
mov
cwtl
shrl
sbb
stos
mov
jne
scas
dec
mov
std
aam
icebp
stos
iret
mov
stos
jle
int3
sub
sahf
pop
add
adc
mov
inc
jecxz
xor
dec
jg
data16
shrl
add
iret
es
xchg
fisubs
cmp
pop
sbb
sbb
pop
adc
pop
int3
sbb
inc
xchg
sbb
mov
pop
or
fstl
sahf
dec
push
pop
xchg
push
sti
or
movsb
notl
push
das
mov
sub
mov
xchg
sub
mov
mov
jecxz
lahf
es
cltd
add
in
lods
test
jmp
leave
xorl
lahf
aas
lock
gs
add
inc
mov
dec
int3
sbb
dec
cmpsl
imul
in
sub
sbb
pop
push
add
fisttpll
fisttps
dec
pop
push
jge
xchg
enter
mov
pop
or
dec
loopne
push
push
fnsave
je
lcall
pop
inc
cmp
or
push
les
add
lds
mov
mov
lret
shlb
add
mov
mov
shll
sbb
scas
icebp
divl
mov
add
data16
xchg
and
and
arpl
jmp
sbb
jae
xor
sub
cld
xor
and
scas
mov
idivl
cs
mov
int
xchg
shr
and
push
dec
popf
push
pop
adc
icebp
loop
xor
aaa
adc
hlt
push
push
xchg
add
fwait
dec
movsl
add
xchg
xor
push
fsts
sahf
xchg
push
jmp
add
pushw
ret
mov
insb
aad
leave
cltd
aad
out
stos
lods
out
fs
push
sbb
mov
das
pop
bound
adc
mov
or
fadd
lret
fsts
xchg
and
xchg
pop
les
popl
jnp
test
test
into
pop
gs
std
cmp
pop
push
inc
loop
pop
adc
fsubs
ficomps
out
mov
in
jmp
loop
in
divb
iret
rol
fsubrp
rclb
movsb
imul
xor
adc
sbb
jecxz
js
mov
xchg
sbbl
mulw
arpl
ret
dec
insl
jbe
sub
mov
repnz
sti
imul
adc
enter
mov
rcrl
scas
mov
mov
xchg
cltd
roll
in
mov
adcl
rcrl
fcoml
sub
mov
cwtl
or
std
imul
mov
mov
sbb
rcrl
mov
cmc
jb
scas
inc
push
pop
dec
adc
mov
in
lret
jnp
mov
fcoml
fisttpll
jecxz
pop
ret
push
ja
stos
das
push
xchg
or
pop
adc
and
push
js
mov
cmp
lock
lods
test
das
mov
loopne
cltd
fisubs
or
mov
mov
cmp
add
test
cltd
mov
sahf
pop
pop
fwait
nop
cwtl
int3
sbb
lea
je
bt
or
pushf
push
lea
je
or
inc
shl
bswap
xor
shrd
test
bsr
aad
mov
call
sub
scas
cmp
fsubrs
aaa
adc
inc
adc
pop
adc
ficoms
add
call
imul
fidivrs
lret
out
xchg
xor
hlt
popl
dec
jnp
cmp
xor
sub
insl
scas
xchg
clc
ja
sub
lret
inc
dec
xchg
push
rorb
cmpxchg
in
or
xchg
sbb
or
insb
iret
arpl
rcrb
or
inc
into
mov
inc
int3
sbb
je
adc
add
stos
or
sbb
dec
sbb
inc
or
mov
mov
pop
sbb
addr16
aaa
sbb
aad
enter
mov
stos
lods
and
mov
insb
sti
jp
push
ja
push
cmp
and
ljmp
in
sbb
sbb
fiadds
xlat
fld
push
lret
int3
andl
xchg
idivb
cmp
cmpsl
imul
mov
adc
inc
mov
push
xor
imul
dec
hlt
icebp
jle
dec
loopne
hlt
cmp
sbb
in
pop
insb
pop
add
dec
add
sbb
pop
fwait
pushf
pop
pop
push
scas
movsl
dec
enter
mov
dec
and
js
pop
insl
and
das
data16
stos
and
sbb
ljmp
insl
dec
push
or
adc
lds
ljmp
and
js
mov
sub
das
mov
das
leave
xor
mov
pushf
push
ficoml
mov
xor
adc
rcrl
push
in
popa
ret
xor
sbb
ficoms
cmpsb
fwait
push
sub
push
dec
arpl
outsb
icebp
jb
dec
test
outsb
test
iret
ficoms
bound
mov
add
or
sbb
loope
fcmovbe
xchg
jo
add
movsb
int3
xchg
popf
rcrb
dec
mov
out
sub
inc
add
aaa
xlat
bound
cmpsl
data16
stos
mov
test
loope
in
sub
int3
sbb
jns
inc
cwtl
push
jbe,pt
mov
sbb
mov
mov
sub
cwtl
nop
pop
lret
or
sbb
adc
ja
sbb
fdiv
dec
cli
cmp
jnp
xchg
stos
and
pop
das
in
cmc
jmp
mov
dec
add
ss
rclb
idivl
inc
and
cmc
dec
add
mov
sub
or
movsb
mov
scas
sub
imul
scas
mov
imul
call
iret
fisttps
push
rorb
adc
fcmove
ret
bound
test
pop
mov
xchg
lret
add
leave
out
jne
out
adc
cs
pop
call
daa
outsl
sahf
addl
sub
mov
fisubs
add
and
push
mov
dec
add
aad
fistps
cli
insl
rcrb
shrl
int3
inc
pop
push
pop
mov
rclb
inc
and
xor
popf
push
imul
call
xlat
xchg
lcall
adc
popf
cltd
adc
sbb
mov
mov
pop
sbb
mov
outsl
loopne
and
mov
cs
mov
cmp
mov
pop
popa
pop
xchg
mov
push
int
cmpsb
pop
xchg
sbb
enter
mov
pop
sti
insb
rcrl
fwait
add
add
sbb
or
cmc
lds
jl
in
fcoms
mov
and
gs
push
add
pusha
scas
ljmp
xor
sub
mov
stc
std
jp
mov
cmp
add
pushf
call
adcb
xchg
xchg
jbe
push
xor
hlt
in
mov
mov
pop
dec
outsl
mov
adc
stc
inc
cmpsb
adc
mov
ss
lea
and
dec
test
xor
inc
jmp
bound
jno
mov
pushf
stos
or
gs
fstpt
lods
add
clc
popf
into
push
dec
lret
dec
dec
int
int3
xchg
sahf
pushf
movsl
test
mov
iret
xchg
cmpsb
jmp
mov
popf
xchg
push
cmc
int3
test
xchg
out
jg
mov
scas
add
lds
jns
decb
lret
sub
or
adc
push
xlat
stos
cs
clc
sti
imul
xchg
cld
les
pop
in
imul
setbe
fs
loope
divb
jg
mov
cmp
repnz
rorb
jb
lock
mov
bound
aad
or
pop
fadds
lds
repz
add
pop
lods
ret
mov
adc
pusha
adc
push
xchg
cmpsl
out
mov
fs
scas
loop
nop
jecxz
lods
ja
mov
adc
sub
push
pop
outsl
pusha
jae
gs
lcall
fsts
mov
movsb
sub
lahf
out
mov
mov
stc
xor
clc
lock
sbb
inc
adc
or
testl
fcoml
pusha
out
clc
aaa
and
jge
call
ja
insb
mov
jle
and
and
lahf
es
pop
pop
xor
insl
fcoml
adc
lods
adc
mov
insl
pop
jmp
dec
adc
rclb
xchg
fxch
out
pop
add
fcmovu
adc
test
adc
das
movsb
in
outsb
cmp
lret
lods
fsubrs
and
in
push
sbb
pushf
call
loop
add
xchg
adc
repz
fimull
push
les
adc
or
int
sahf
cmp
ror
into
push
dec
stos
sahf
imul
mov
fstpt
fs
aad
fadd
pop
fdivr
rcrl
and
dec
inc
xor
sahf
out
mov
or
or
test
lret
cli
cmc
mov
roll
xchg
in
inc
repz
lea
push
jmp
xchg
js
sti
jb
mov
jg
int3
sbb
lea
jne
pusha
call
movb
lea
jae
cmc
clc
clc
push
xor
pusha
call
repz
rep
cmpsb
loop
data16
and
cld
jno
sub
cmp
xchg
jmp
or
inc
push
mov
imulb
bound
les
in
das
data16
jnp
pop
mov
outsb
data16
lods
daa
sub
push
inc
int3
mov
inc
enter
xchg
push
pop
push
sbb
sbb
ja
aaa
stos
loopne
adcb
mov
leave
add
fcoms
add
adcl
lods
cmc
js
pop
insb
cld
out
aad
addr16
push
scas
sub
push
adc
es
mov
sbb
pop
mov
cmpsl
lods
call
sub
int3
sbb
sbb
sbb
mov
sbb
or
push
xchg
sbb
lcall
pushf
jg
jno
inc
or
addb
in
aad
stc
mov
shll
addl
mov
mov
int3
xor
and
stc
scas
in
xor
shrb
roll
mov
push
inc
adc
fbstp
mov
xor
xor
cmp
sbb
lock
nop
pop
inc
and
xor
sub
sub
sub
push
xchg
insb
lea
ret
ljmp
push
cltd
xor
imul
sar
mov
aaa
outsl
push
pop
and
outsl
sbb
push
lods
out
cmp
xchg
pop
rcrl
and
push
mov
cmp
call
adc
push
or
cli
jb
and
add
shl
arpl
inc
or
jl
dec
push
dec
shr
cmp
dec
push
lds
inc
int3
test
int3
sbb
ret
popl
btr
repz
pop
dec
inc
adc
inc
int
sahf
push
aaa
popa
push
ret
lods
je
push
push
inc
dec
push
jnp
cmp
fs
call
adc
push
repnz
stc
shl
ja
or
and
xor
test
test
xor
les
xor
push
xor
ljmp
movsb
sbb
pop
mov
loopne
mov
out
jl
lods
mov
push
or
cwtl
das
jno
inc
pop
ret
jnp
out
imul
rol
fwait
adc
mov
xchg
or
push
push
or
sub
or
xchg
mov
pusha
outsb
jo
push
daa
xor
mov
mov
out
aas
lock
out
movsl
insl
jne
mov
rcrb
hlt
sub
jle
rcr
cld
adc
rcl
sbb
sbb
test
cmc
pushf
mov
pushf
pushf
jmp
test
mov
add
pushf
pushf
lea
jmp
mov
push
lret
subb
dec
test
imul
mov
lods
movsl
fcoml
mov
mov
in
lret
shr
sub
jnp
jns
cmp
xchg
icebp
xchg
pusha
pop
fistpll
add
push
pop
lcall
icebp
mov
sarl
in
cmpsb
scas
inc
add
or
scas
xchg
jo
imul
sub
addr16
push
jecxz
sbb
bound
loop
mov
pusha
gs
xchg
ret
push
adcb
xchg
mov
test
icebp
movsl
stos
ficoms
movsb
mov
jmp
cmpsb
jns
icebp
aaa
mov
outsb
and
and
jno
out
jl
fstpt
sub
push
test
pop
pop
adc
cmp
pop
adc
iret
imul
imul
pop
push
mov
inc
lds
cli
pop
cli
xor
xor
adc
std
push
enter
and
xchg
push
pop
push
dec
test
add
ret
mov
dec
int3
sbb
fimull
test
das
dec
lods
ss
xor
std
icebp
dec
rolb
and
mov
leave
loopne
jp
sbb
aas
or
inc
dec
std
mov
cld
repz
push
dec
push
inc
inc
dec
test
leave
add
dec
orl
out
mov
xchg
insb
stc
sub
xchg
sbb
mov
popf
push
pop
pop
dec
jne
cmp
cmp
iret
cli
mov
xor
stos
push
and
mov
xor
xchg
adc
fisubrl
xor
mov
jge
push
sahf
test
pusha
or
mov
mov
arpl
mov
in
xchg
dec
adc
xchg
and
dec
icebp
cmp
popf
add
push
fldenv
mov
and
cmp
or
sub
mov
in
push
jno
das
and
jae
call
push
outsb
je
bound
call
out
out
out
lods
int3
sbb
or
aam
or
mov
xor
rolb
pop
adc
push
pop
dec
enter
aad
cmp
in
mov
jmp
sar
in
aad
or
ljmpw
repz
xchg
addr16
xchg
sub
pushf
out
inc
cmpsl
aas
or
lcall
push
imul
push
push
les
nop
xor
ficoms
push
orl
inc
mov
sbb
rclb
rorl
mov
sbb
in
sahf
stos
insb
ficoml
int
stc
out
mov
mov
mov
jbe
sbb
dec
sbb
sti
ret
adc
dec
pop
push
add
aad
ret
or
mov
fstl
flds
rol
xchg
and
stc
mov
push
out
mov
sub
call
dec
int3
pop
jne
cltd
sar
out
jp
es
mov
arpl
outsb
fistl
mov
push
push
stos
movsl
and
out
in
popa
pop
add
ds
push
outsl
push
xchg
loop
push
add
mov
scas
cmpsl
outsl
cmpsb
outsb
ljmp
das
and
sbb
sub
ljmp
movsl
std
insb
and
mov
jmp
dec
or
notb
dec
inc
add
movsl
aad
xchg
loop
sub
jg
loop
mov
adc
inc
cmp
fcmovb
mov
pop
in
and
lea
push
push
loop
jns
adc
test
fs
mov
fdiv
mov
decb
das
fs
icebp
mov
sub
icebp
sti
mov
icebp
divb
mov
dec
ret
sbb
adcb
test
roll
fwait
xchg
lcall
mov
xchg
pop
lods
test
push
sbb
rorl
sub
cmc
push
inc
mov
push
test
outsl
pop
je
lods
mov
lods
adc
cltd
fidivl
sub
inc
std
movsl
test
fldcw
mov
lahf
add
aas
test
xchg
dec
xchg
add
pop
push
fidivrl
fcomi
aad
out
fs
lret
push
push
mov
xor
popa
stos
loop
das
call
data16
sbb
fwait
jmp
and
and
dec
pop
or
cwtl
push
fadd
dec
add
bound
aam
jecxz
xchg
dec
push
lods
or
or
sbb
push
ja
icebp
inc
rorl
mov
sbb
add
cltd
test
mov
mov
jno
sbb
adcb
setae
leave
jo
mov
mov
cs
popa
xchg
adc
aas
push
outsl
in
leave
pop
push
nop
push
insb
push
cwtl
or
or
fstl
test
add
iret
mov
int3
sbb
bswap
mov
mov
movsbw
pushf
mov
not
xor
shl
or
mov
call
cld
das
mov
fs
inc
sbb
test
adc
sbb
adc
mov
das
jno
xchg
sbb
mov
orb
sub
test
mov
in
mov
sub
in
pop
fsubs
jne
imul
cmp
pushf
xchg
clc
pop
push
xchg
fwait
cmc
ss
popf
adc
push
pop
push
xlat
fstl
jle
push
not
mov
seto
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
pushf
pushf
push
lea
je
xadd
sbb
add
add
xadd
adc
inc
sub
neg
pusha
push
add
shr
sub
pop
btr
mov
cmp
bsr
shl
cmp
add
cmc
add
sub
setge
rol
mov
cmc
pusha
clc
pusha
shr
pushf
stc
push
clc
cmp
pushl
lea
je
bt
stc
cmc
cmp
pushf
lea
je
jle
stc
pusha
movb
cmp
pushf
call
or
or
movsb
or
lock
out
jle
mov
and
cltd
or
push
pop
inc
inc
int3
push
dec
outsb
inc
cmp
mov
mov
orb
jno
pop
add
and
mov
sbbb
jne
in
out
fs
daa
outsl
push
ljmp
int
dec
dec
dec
dec
cs
insb
add
sub
cmp
mov
loopne
loope
pusha
lods
arpl
jg
jg
sti
in
xor
mov
push
insb
cmp
pop
lods
outsb
pop
add
add
movsl
and
push
sahf
sarb
mov
add
aad
insl
mov
cltd
jbe
mov
cmp
in
xchg
pop
shll
jb
sub
les
cld
jno
mov
or
fdivl
ss
js
je
add
ret
mov
cmp
or
rcrl
repz
les
stos
loopne
mov
data16
fistl
int3
xor
movsb
dec
sub
jo
lods
test
fwait
int3
sbb
insl
mov
inc
adc
pushw
pop
mov
dec
sub
ret
stos
loop
repz
cmp
loope
cmp
mov
cmpps
pop
dec
or
add
or
fxch
mov
pop
rorb
shrb
data16
hlt
mov
mov
mov
fimull
das
inc
xchg
lods
jge
enter
fwait
ret
rcrb
scas
xor
mov
xchg
add
push
or
mov
sbb
rcll
loope
loopne
int3
ret
clc
fildll
sub
adc
push
pop
cwtl
lahf
push
int3
sbb
add
ja
clc
sub
cmc
cmp
pushf
mov
lea
ja
stc
call
mov
adc
sbb
addr16
sub
repnz
insb
mov
movsl
test
pop
cwtl
enter
inc
mov
inc
sub
inc
shll
xor
pop
xor
push
add
dec
xchg
popa
insl
jbe
hlt
loopne
inc
push
inc
jg
mov
add
dec
je
push
popf
sbb
aam
mov
arpl
insl
mov
shlb
mov
mov
mov
loope
mov
repz
mov
idivb
stos
jbe
sub
insb
jmp
xor
repz
ljmp
mov
mov
lds
adc
sarl
icebp
sbb
lods
or
push
arpl
movl
jmp
jle
das
mov
shr
aaa
add
lods
jge
and
or
jbe
pop
dec
sahf
push
rcrl
sahf
pop
nop
fcomps
int3
sbb
push
pushf
pushf
dec
bt
push
clc
movb
rol
cmc
add
jmp
or
setle
fiadds
mov
mov
out
cmp
outsl
test
mov
lret
mov
mov
pop
jecxz
test
jae
scas
das
and
fadd
insb
mov
adc
dec
mov
jo
fcoml
or
xchg
push
cmc
xor
or
repnz
sbb
lahf
mov
flds
sbb
add
mov
xchg
pop
mov
scas
imul
sub
sbb
cmpsl
sbbb
sbb
xchg
mov
xor
sbb
xor
mov
outsb
push
and
cmpsl
insb
sub
int3
sbb
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
outsl
mov
xchg
sti
js
insl
bound
loop
popa
lods
ljmp
bound
sub
mov
push
mov
mov
add
sbb
mov
fwait
xchg
leave
clc
jbe
popf
ljmp
and
mov
out
lods
out
push
jnp
pop
xlat
dec
sbb
push
and
loop
xor
push
aam
ds
mov
inc
fmul
jmp
js
dec
cmp
sub
sub
jmp
bound
in
imul
aaa
mov
jmp
call
adc
aas
inc
popa
cs
jo
jae
and
xor
stc
dec
sbb
or
dec
and
mov
pop
popf
cmp
jno
enter
push
push
ror
sbb
das
add
popf
lods
mov
test
jecxz
or
imul
clc
dec
icebp
stos
repz
or
out
insb
cmp
loope
ret
loop
adcb
push
mov
cwtl
shll
out
and
out
and
mov
and
es
imul
jb
add
push
pusha
pusha
mov
pushf
lea
jmp
mov
clc
mov
pushf
pushl
repnz
movl
lea
jne
lahf
pusha
call
call
mov
sub
xchg
dec
loop
jbe
daa
push
aaa
cmpsl
ja
push
xor
lods
imul
pop
adc
lods
cltd
push
leave
cwtl
leave
mov
xchg
fwait
arpl
or
repnz
xor
ljmpw
out
scas
sub
daa
sub
sub
sub
mov
push
adc
shlb
test
cmpsl
jecxz
fs
sbb
pushf
pusha
lea
je
clc
pusha
cmp
sub
test
cmp
cmp
push
lea
ja
bt
imul
test
call
jmp
inc
stos
addr16
out
lret
pop
push
pop
mov
lahf
xchg
or
fwait
pop
jecxz
push
pop
push
pop
stos
ds
lea
in
push
sarb
jmp
xchg
xor
repz
js
scas
mov
testb
inc
jg
and
dec
or
js
lcall
xor
movsl
sub
aas
jne
cli
pushl
mov
outsl
insl
pop
in
fs
xchg
repnz
scas
and
repz
imul
and
sub
cmp
lea
jmp
imul
sub
jecxz
push
test
test
push
movsl
insl
push
lods
mov
xchg
leave
popf
pusha
ftst
xor
repz
add
shlb
xor
push
pop
pop
lods
mov
or
ficomps
mov
or
xchg
out
add
arpl
push
sbb
jnp
pop
push
cwtl
sbb
fcoms
sbb
sbb
xchg
lret
or
cwtl
rorb
adc
push
or
xor
mov
inc
ficoms
enter
repnz
in
call
jo
xchg
pop
vmovaps
push
adc
movsl
xchg
pop
movsl
push
cmp
fldln2
bound
jge
lret
pop
pop
aam
xor
enter
xchg
adcl
aam
pop
test
lods
mov
pop
push
ja
jno
mov
xor
push
mov
loope
call
push
fstp
push
adc
lods
cmpsb
addr16
push
lea
and
dec
orl
lock
sbbb
dec
push
shr
fcompl
push
rcll
pop
cltd
pop
int3
sbb
fnsave
dec
mov
adc
lret
mov
adc
popf
repz
clc
aam
int3
shrl
mov
inc
adc
xor
mov
ja
lret
aas
xor
lods
cld
xchg
leave
div
test
mov
into
jno
test
dec
loop
xor
cwtl
adc
les
inc
dec
or
int3
sbb
cmc
and
jle
and
stc
mov
ja
test
cld
bound
mov
out
sbb
addl
mov
jg
fisubrs
insl
fcmovu
xchg
jbe
imul
jno
cmp
lods
mov
test
xor
pop
test
cwtl
sub
dec
std
mov
cltd
mov
lret
sbb
sbb
divl
or
mov
rol
mov
mov
out
ljmp
sbb
add
pushf
lea
jmp
sub
sub
loop
mov
sub
xor
scas
and
pusha
mov
insl
std
in
and
pop
repz
xchg
lds
sbb
or
xchg
mov
in
ds
jl
cmp
or
js
add
mov
lret
cmpsl
jbe
push
pop
arpl
jne
repz
jl
stos
pusha
sub
sub
jmp
je
cmp
enter
dec
pop
push
inc
inc
loopne
mov
xor
xor
mov
inc
outsl
and
sub
and
mov
js
or
hlt
aad
adc
lret
sub
pop
scas
pop
xchg
test
popl
adc
xor
pop
dec
leave
pop
inc
pop
dec
repnz
andb
inc
out
pusha
mov
ljmp
jnp
jns
mov
jo
push
xor
imul
add
or
in
mov
jle
jge
jo
cmp
idivl
int3
sbb
xor
fs
pop
add
xchg
xchg
or
mov
lods
adc
outsb
mov
mov
sahf
out
dec
cld
testb
cmc
cmp
loope
jo
xor
lds
int
dec
xchg
push
out
push
pop
mov
pop
addb
cmpsb
pop
sub
or
scas
jg
js
dec
dec
cld
mov
inc
inc
lret
dec
les
sbb
idivl
addr16
sbb
adc
flds
or
push
data16
mov
mov
outsl
inc
repnz
xchg
mull
and
cmp
movsl
sbb
jbe
inc
cmp
sub
xor
imul
mov
jb
popl
daa
xchg
push
inc
xchg
dec
addb
dec
ret
or
ret
sbb
int3
add
cmp
jo
push
sahf
push
ret
adc
ret
subps
or
adc
shll
int
movl
sbb
icebp
xor
mov
gs
data16
mov
lahf
cld
clc
mov
adc
push
fnstcw
in
aad
sub
test
cmc
mov
fists
or
add
mov
sub
jae
xor
gs
adcl
ret
stos
mov
je
enter
xchg
cli
xor
mov
jne,pt
mov
mov
add
mov
lret
repnz
dec
xchg
pop
fistl
or
dec
inc
pop
xchg
pop
inc
dec
lret
loope
ret
addl
and
xor
gs
fsubrl
or
jnp
dec
sti
xor
repz
cmp
xchg
sub
xchg
push
shrb
std
out
mov
dec
inc
popa
mov
mov
push
aas
mov
rcll
or
insb
jge
fcoms
jl
mov
mov
add
jae
repz
jle
jnp
xor
sbb
dec
pushf
mov
jmp
fsts
push
mov
add
pop
push
ret
push
fstl
lret
popa
std
jae
fcmovu
scas
sub
loopne
inc
call
aad
in
and
sbb
je
xchg
pop
and
cmp
mov
jne
pop
xchg
jne
jae
jne
pop
xchg
push
mov
mull
ss
bnd
out
daa
into
sbb
jg
daa
in
dec
adc
push
mov
and
test
jo
mov
xchg
sbb
ret
or
rcr
xchg
ret
addl
imulb
mov
dec
xor
cmp
sub
dec
pop
std
add
mov
add
sub
pop
add
pop
test
lret
pop
cmp
ljmp
adc
cmp
sbbl
and
lcall
push
pand
mov
sbb
mov
out
pop
push
mov
add
fnstcw
pop
enter
mov
or
inc
inc
add
push
test
sbb
pushf
stos
movb
lea
jmp
push
xchg
bound
push
jo
jae
lods
std
jo
lods
cld
in
mov
adc
mov
dec
jle
mov
call
sahf
mov
ret
enter
sub
lahf
adc
nop
les
test
xchg
movsb
push
aaa
mov
lock
stos
scas
mov
stc
adc
icebp
je
xchg
loope
ss
insl
xorb
ljmp
xchg
mov
and
les
pushf
cmp
icebp
inc
sahf
loopne
insb
imul
and
lods
out
int3
sbb
inc
push
andl
fistl
push
enter
push
sbb
dec
addb
add
cmp
xor
jle
mov
cmc
jbe
popf
adc
rcrl
push
pop
lods
ss
lret
xacquire
adc
inc
sbb
jmp
jae
je
pop
mov
mov
pop
pop
xlat
push
push
pop
fistpl
pop
int3
sbb
inc
inc
dec
xor
cs
insb
add
pop
fidivs
sahf
mov
stos
fs
ja
jmp
int3
fnstsw
cltd
xlat
xchg
mov
sub
call
or
jecxz
es
mov
mov
js
cmc
cmp
sbb
jg
out
mov
clc
idiv
lcall
sub
pusha
mov
jno
cmp
fildl
aas
dec
loope
pop
lahf
xchg
add
loop
nop
sahf
subb
push
jb
scas
in
add
inc
mov
jp
insl
std
cmp
cmpsb
add
and
mov
inc
push
mov
mov
out
movsl
insl
test
and
addr16
sbb
mov
movl
imul
clc
jmp
jmp
adc
adc
int
inc
iret
sti
clc
pop
dec
inc
int
xchg
adcl
or
jne
cli
inc
adc
and
inc
mov
cli
ljmp
in
or
adc
dec
jno
adc
push
rcrb
push
fcoml
xor
sub
sti
dec
add
stos
je
lcall
ret
adc
je
popa
sub
call
out
daa
imul
rol
mov
and
mov
shl
jnp
sub
adc
jns
lret
or
pop
ffree
sub
test
call
and
jmp
sbb
xchg
test
add
jns
mov
mov
jmp
push
arpl
ljmp
jmp
aaa
adc
add
mov
es
mov
sub
or
xchg
jne
ljmp
cs
in
mov
mov
pop
xchg
je
xchg
dec
adc
movsl
gs
jb
pop
xchg
mov
push
inc
cmp
std
imul
inc
dec
lret
fiaddl
rcrl
fcompp
mov
into
pop
lds
dec
pop
popl
lret
int3
sbb
cmc
cmpsb
je
es
out
outsb
dec
add
pop
leave
add
push
or
mov
repz
repz
inc
sub
mov
adc
jo
ds
int
inc
insb
bound
dec
dec
push
xchg
inc
stc
shll
and
int3
test
add
out
jno
cld
enter
lahf
push
pop
jl
dec
push
rcrl
out
dec
mov
mov
add
out
pop
or
inc
dec
adc
lods
mov
sbb
cltd
cmp
stos
loop
adc
es
adc
xchg
aaa
push
aaa
sub
stos
out
sub
out
imul
insl
adc
ljmp
lods
or
or
dec
push
aad
xchg
add
cwtl
or
rcrl
jno
insl
jo
enter
outsb
sbb
pop
add
fs
pop
dec
call
pop
or
jle
out
lods
adc
dec
stos
repz
push
mov
mov
pushf
sbb
hlt
int
int3
test
scas
push
push
push
mov
pop
aaa
addr16
and
test
mov
jo
jae
jge
std
aaa
ds
sbb
jb
jno
sub
push
adc
or
popa
icebp
and
jns
scas
loop
sti
sbb
fadds
mov
lcall
cmp
adc
and
add
jnp
cltd
std
add
leave
ret
mov
ds
scas
imul
sub
inc
jne
jge
call
mov
xor
or
into
pop
xchg
arpl
xchg
cmpl
add
xchg
rol
xor
mov
or
scas
and
pop
out
cmpsb
insb
movsb
insl
gs
sub
int3
sbb
or
test
les
mov
sub
jmp
je
test
mov
stc
popa
lea
xor
xchg
test
rcr
xor
mov
sub
cli
es
rcl
aam
hlt
xor
mov
arpl
push
fldt
sub
rorb
rolb
lret
push
add
sbb
mov
lods
mov
aad
push
cltd
dec
fisttpl
les
lahf
das
mov
dec
sbb
pop
xor
in
stos
movsb
mov
sahf
cmp
sub
cwtl
lahf
in
in
xor
pop
mov
stc
icebp
pop
nop
test
fwait
mov
mov
adc
data16
adc
xchg
gs
stos
aam
stos
bnd
addr16
mov
fs
push
std
jge
pop
dec
xadd
std
divb
dec
stc
repz
popl
das
mov
mov
mov
ds
imul
fwait
add
call
ret
add
inc
lea
enter
add
orl
adc
out
inc
popf
push
sub
jmp
push
push
call
dec
imul
jle
xchg
sti
repz
push
fstps
dec
idivb
mov
sub
push
lods
jg
jge
xor
or
shrl
mov
jg
jo
mov
xor
sbb
fidivl
jnp
and
repz
jno
in
aas
xor
scas
loop
mov
push
sbb
scas
and
mov
or
fmull
popf
cmp
aam
mov
pusha
jb
sub
hlt
pop
das
aad
mov
fists
fisttps
leave
pop
into
lcall
pop
and
xor
mov
push
rclb
data16
sub
and
js
cmp
cld
mov
hlt
jg
jb
int3
sbb
lret
push
fisubl
jmp
add
cmp
mov
imul
cmpsb
test
and
jne,pt
inc
mov
fadd
pop
bound
lods
and
sbb
xchg
or
fildll
pop
rorb
pop
adc
dec
scas
mov
and
inc
push
or
lret
popa
leave
jp
insl
sub
and
out
pusha
int3
sbb
test
cmp
call
jmp
pushf
pushl
jmp
pop
les
or
aam
or
sbb
sbb
rorl
add
sti
and
and
mov
das
jmp
or
out
rcrl
push
dec
jo
cmpsb
cmp
fcoms
push
dec
add
xor
dec
rclb
pop
dec
xchg
jl
mov
push
pop
lret
add
pop
adc
xchg
imulb
jg
stos
jno
repnz
sahf
mov
push
enter
add
push
int3
or
jg
inc
dec
inc
ret
or
rorb
push
lret
cltd
mov
adc
jae
mov
stos
and
out
cmp
jns
mov
adc
mov
in
dec
jb
push
pushf
inc
adc
dec
shl
stc
xchg
loop
jo
cltd
push
fsubrs
mov
daa
xchg
pop
xor
leave
pusha
mov
push
mov
add
mov
std
inc
rcll
mov
std
je
cmc
jo
jo
jb
jl
int3
sbb
out
and
loopne
pop
popf
cmp
xchg
lcall
enter
sbb
js
aaa
outsl
repz
and
jo
popa
sbb
dec
xlat
scas
cmp
ljmp
adc
add
in
lock
push
xchg
sub
subl
xchg
test
push
pop
cmp
rorb
js
lods
ret
add
xor
sub
scas
sub
das
jmp
stos
insb
stos
int3
sbb
fstl
faddl
cmp
mov
xor
popa
outsl
cld
in
and
rorl
sub
xor
cmp
or
in
or
popf
lahf
jp
mov
enter
push
adc
adc
xlat
xlat
ja
cmc
mov
ficoml
testl
push
inc
xor
pop
push
aas
cli
rorb
push
or
aaa
je
sub
jge
xor
mov
aas
clc
mov
int3
sbb
mov
mov
insb
add
call
dec
inc
mov
xchg
xchg
rorl
pop
loopne
loopne
mov
or
in
mov
mull
ror
lods
int
xchg
xchg
jmp
adc
insb
sub
xchg
adc
outsl
rcrb
shlb
add
and
xchg
test
jne
pop
das
or
lret
or
mov
into
int3
sbb
daa
push
insl
icebp
push
push
idiv
stos
jp
fs
mov
aaa
cmp
jecxz
jb
sbb
loope
stos
jb
and
sbb
xchg
adc
sbb
push
out
iret
out
mov
push
inc
inc
mov
sub
sub
test
xor
jle
or
arpl
push
or
ret
sahf
pop
xchg
lcall
xchg
fwait
push
int3
sbb
xor
mov
jmp
fisttps
adc
inc
fists
sbb
mov
xor
mov
and
orl
pop
push
sarb
shll
and
mov
mov
xchg
lods
pop
and
cs
iret
jge
add
cmp
lods
mov
cmp
push
lahf
rcrl
add
lret
lods
or
jl
xor
arpl
mov
and
movsl
lods
int3
sbb
pusha
push
lea
call
push
lea
jae
setl
xchg
pusha
inc
mov
call
jbe
dec
pop
push
int
xor
xchg
add
or
xchg
pop
inc
dec
push
jmp
mov
jge
add
push
sbb
pop
add
fcoms
rcrb
dec
int3
cli
imul
cmpsl
adc
in
jge
dec
pop
in
lods
xchg
in
mov
xchg
xchg
jg
in
push
ret
mov
mov
add
pop
test
outsl
push
fldt
into
push
mov
add
loop
mov
sbbb
sub
mov
adc
bound
scas
data16
push
sbb
push
sbb
div
icebp
aam
push
inc
push
pop
pop
push
dec
test
adc
sub
aaa
push
jbe
sub
loope
jecxz
int3
xchg
sbb
mov
xor
dec
iret
xchg
adc
jo
in
sbb
mov
jle
add
pop
out
sbb
aad
ror
or
rorl
dec
inc
dec
int3
sbb
xchg
seta
mov
mov
not
movsbw
mov
xchg
mov
bswap
movzbl
lea
mov
pusha
pushl
ret
jmp
out
cmp
mov
dec
push
out
arpl
cmp
mov
mov
mov
mov
xchg
sub
xchg
mov
lods
lock
les
out
popa
pop
daa
test
pop
sub
push
or
int3
ret
inc
cltd
sbb
sbb
xor
jg
test
nop
lea
addb
pop
shlb
std
xor
jbe
loop
push
ja
fadds
jp
scas
iret
push
dec
push
rclb
adc
fstl
push
pop
push
int3
sbb
pop
adcb
mov
fwait
push
lcall
or
xchg
xchg
fstl
mov
pop
pop
out
lahf
fwait
jge
adc
mov
lcall
lea
ljmp
je
dec
adc
mov
popa
movsb
cld
pop
sub
icebp
mov
bound
xorl
arpl
aaa
test
enter
jns
pop
push
push
inc
push
mov
popl
or
enter
add
sbb
xchg
dec
sahf
add
jl
xor
clc
pop
dec
ficoms
xchg
rclb
dec
pop
xchg
addl
add
xchg
test
cmc
jmp
and
sbb
pop
push
jo
rolb
push
popa
scas
das
xchg
aam
mov
jne
dec
and
mov
sbbl
sbbl
out
sub
sbb
rolb
fs
ljmp
insl
jmp
int3
sbb
rep
pop
bswap
mov
pushl
push
pushf
lea
jmp
sub
cmp
xchg
mov
sub
out
and
jge
jb
push
push
jp
shl
scas
arpl
jnp
icebp
push
outsb
daa
cs
fcoms
push
pop
lret
push
hlt
cmp
jns
enter
xor
adc
sbb
add
and
insb
scas
jge
inc
jle
scas
bound
mov
in
adc
xchg
xchg
dec
int
addb
dec
popl
int3
sbb
icebp
mov
push
icebp
xchg
push
faddl
pop
xchg
sbb
pop
pop
inc
leave
sbb
lret
cli
cmc
shlb
aam
lock
jl
cli
inc
into
rol
enter
mov
les
add
sub
push
xchg
mov
stc
pop
pop
xchg
mov
std
push
sub
aaa
cmc
dec
std
xor
and
xchg
and
inc
add
push
sbb
rolb
push
dec
sbb
cmp
cwtl
jecxz
adc
cmc
cmc
jle
pop
push
dec
out
arpl
cmp
fadd
dec
cltd
pop
mov
je,pn
orl
popf
out
sub
outsl
out
sub
fs
stos
and
hlt
inc
jns
and
idiv
adc
mov
dec
lahf
push
orl
nop
imul
cmp
push
mov
js
aam
out
icebp
sbb
mov
insl
cwtl
jnp
mov
repnz
mov
into
inc
out
xlat
lret
pop
arpl
xchg
add
mov
mov
inc
lds
flds
je
jne
popa
lods
jo
push
inc
pop
pop
adc
inc
inc
xchg
clc
jbe
lds
inc
jg
in
sub
xchg
imul
xor
gs
jg
jle
mov
hlt
jno
repnz
sbb
arpl
mov
jb
xor
lods
and
loop,pn
mov
xchg
xor
xor
mov
frstor
test
fcompl
daa
push
nop
mov
cmp
and
pushf
out
lock
mov
das
fists
in
popa
mulb
lahf
push
les
push
fisubl
add
icebp
out
or
or
cli
icebp
xor
out
jae
popf
push
fsubrs
add
loope
ror
jns
mov
dec
dec
mov
or
or
dec
int3
sbb
xchg
xchg
in
in
ret
inc
cwtl
push
pop
dec
fmul
sbb
add
pop
push
dec
mov
sub
push
xchg
dec
pop
adc
push
jns
dec
out
mov
aaa
push
std
inc
pushf
clc
jae
sti
je
outsl
ljmp
pop
js
sbb
in
cs
insl
and
push
xorps
sub
mov
test
inc
sub
lods
sub
scas
imul
mov
mov
dec
lock
rcl
dec
pop
mov
adc
lods
mov
jo
mov
jg
mov
mov
sbb
lock
dec
loope
pop
lcall
mov
push
popf
add
pop
push
and
sub
out
leave
adc
xlat
push
aaa
xchg
ss
loopne
mov
test
push
mov
lock
pop
mov
fwait
loopne
jns
fs
shrb
cmpsl
push
popf
push
andb
fildll
jnp
jg
rcrb
xchg
in
dec
cmpsb
ss
into
fnop
ret
xor
xor
xchg
rcr
mov
fcom
fcmovbe
xchg
nop
sbb
sbb
or
das
mov
adc
or
int
push
add
popf
lea
fsubrl
dec
adc
js
inc
inc
inc
or
hlt
jl
push
mov
or
shr
pop
pusha
pop
xchg
and
loope
dec
sbb
sbb
mov
adc
iret
or
and
je
jo
xchg
sbb
adc
push
inc
mov
xchg
enter
int3
sbb
mov
insl
inc
jle
pop
adc
push
pop
pushf
dec
add
dec
inc
dec
cmp
push
inc
mov
or
add
xlat
pop
inc
outsl
inc
fadds
movsb
jbe
repnz
jp
outsb
xor
push
cltd
or
sbb
adc
push
popf
insb
dec
test
inc
out
xchg
dec
dec
jno
xor
cld
sbb
leave
cmp
rcr
or
and
enter
pop
dec
int3
add
add
int3
sbb
bt
cmp
lea
jno
push
pushl
pusha
lea
ja
jmp
gs
lock
js
cmpsl
sub
jp
aaa
dec
aam
in
mov
lea
adc
and
or
jns
or
inc
int
in
clc
ret
loopne,pn
out
stos
shl
mov
push
mov
and
es
adc
fs
pusha
pushf
mov
xchg
mov
mov
insl
loopne
outsb
or
cmp
jns
loop
jp
int
sbb
imul
push
xchg
rcrb
pop
nop
push
push
fsts
sbb
sbb
cli
or
add
add
add
add
add
leave
and
add
add
inc
add
add
add
add
pop
das
add
add
add
add
add
sub
add
add
add
add
add
add
hlt
jg
add
add
add
add
addb
add
je
add
jle
sbb
add
add
mov
xor
dec
jg
add
push
sbb
cmp
and
add
add
sub
mov
inc
nop
fmul
ret
dec
add
ret
lea
push
sahf
or
sbb
xchg
aas
pop
jo
xchg
int3
shlb
inc
lods
mov
cltd
and
mov
mov
fs
lea
mov
sbb
stos
scas
jge
add
hlt
jg
or
xchg
test
mov
mov
or
int3
sbb
repnz
loopne
push
outsw
dec
add
or
xchg
popl
adc
les
ss
cmp
jl
xor
dec
out
stc
xchg
mov
lahf
and
xchg
in
cmp
ljmp
fsts
mov
xorb
rorb
imul
mov
insl
lea
adc
in
mov
pop
ret
cli
stos
out
add
mov
jle
cmpsl
flds
pushf
push
adc
sahf
ror
sbb
inc
pop
les
mov
clc
mov
mul
sub
jne
test
and
stos
ret
std
mov
adc
les
dec
mov
jp
mov
adc
leave
jo
into
dec
xchg
adc
dec
push
daa
sub
out
fidivs
mov
inc
jnp
insl
pop
iret
pop
js
push
test
sub
out
and
loopne
call
sub
cmp
bnd
push
call
xchg
add
adc
lret
dec
inc
mov
xor
dec
sbbl
ljmp
push
out
fldl
jg
sub
ret
adc
popa
sub
mov
pop
fisubs
cmp
daa
arpl
es
scas
cmpsl
bound
cmpsb
int3
sbb
push
lea
call
jmp
lahf
dec
pop
inc
int3
ret
adc
pop
dec
add
adc
adc
and
mov
mov
dec
lret
pop
cmc
ss
cs
inc
push
dec
xchg
insb
popw
xchg
sbb
jnp
pop
cmp
in
fdivrs
mov
sub
test
dec
inc
mov
out
mov
push
pop
cmpsl
das
pop
push
xor
repnz
pop
xlat
sbb
adc
fistpl
sbb
dec
inc
clc
lods
jo
jge
sub
inc
leave
sub
icebp
pusha
mov
in
push
mov
jmp
inc
or
mov
mov
mov
mov
jecxz
clc
cli
in
xor
icebp
mov
pusha
pop
xchg
mov
mov
push
mov
add
mov
push
xor
repz
stos
adc
sbb
mov
in
push
outsb
gs
data16
int3
sbb
pop
or
pop
test
jno
out
push
orb
xchg
fmull
push
inc
test
xchg
pop
inc
mov
and
inc
dec
pop
hlt
push
out
sbb
add
xchg
shrl
sahf
stc
repnz
xchg
lcall
stos
or
sub
mov
loop
pop
test
inc
cli
and
lds
mov
out
and
add
cs
mov
or
push
insb
cmpsb
mov
ljmp
mov
pusha
call
pushf
push
adc
mov
call
add
push
gs
jb
popa
je
dec
gs
js
add
outsl
xor
pusha
mov
imul
xor
jge
out
out
dec
roll
test
jge
out
sbb
jns
xor
xchg
call
mov
ljmp
lea
jmp
add
xchg
enter
std
lods
mov
in
sub
shlb
xchg
push
sbb
je
cli
in
call
arpl
lods
sub
test
aaa
xor
and
mov
cmp
call
add
dec
outsl
popa
fs
imul
add
pushf
jmp
divl
xchg
or
insl
jbe
adc
add
dec
lret
push
fidivrl
repz
jno
xor
lahf
push
xor
cmp
dec
add
movsb
jmp
sub
jae
and
sti
clc
xor
pop
icebp
or
sub
xchg
xor
jmp
pushl
or
mov
test
mov
outsb
sbb
movb
mov
or
push
sbb
insl
popa
addr16
imul
je
outsl
jns
testl
add
int
fcoml
orb
sbb
xchg
or
cmpsl
inc
gs
bound
adc
jp
lret
out
mov
jmp
mov
dec
sbb
push
insl
gs
in
xor
adc
jb
test
mov
mov
mov
ret
mov
and
ret
add
jp
mov
mov
test
mov
inc
int3
test
lret
mov
sbb
nop
pop
iret
push
rolb
pop
and
inc
cltd
leave
les
adc
adc
add
popa
jbe
ss
gs
xchg
jb
movsb
jnp
sbb
lock
ljmp
mov
and
mov
loop
cltd
out
add
in
mov
mov
daa
jb
js
push
mov
push
xchg
add
fisubl
sub
xor
mov
ljmp
jmp
movsb
in
push
insl
call
sbb
not
stos
pushl
call
xchg
inc
dec
pop
aam
jg
lahf
leave
dec
adc
dec
popf
rcrb
dec
inc
dec
mov
arpl
fildll
xlat
lret
jge
enter
mov
push
cwtl
lods
enter
in
lcall
inc
jnp
imul
call
subb
push
nop
xchg
mul
fwait
in
scas
fiadds
push
orb
or
push
push
push
jecxz
hlt
cmp
rol
hlt
in
out
mov
stos
scas
mov
jl
xor
jge
jo
push
add
sahf
loope
popa
dec
shrl
je
dec
sahf
push
or
jmp
mov
jno
mul
cmp
mov
xor
jge
xchg
inc
idiv
pop
mov
std
cmp
jp
jns
je
int3
sbb
pushf
mov
mov
pushf
mov
movw
lea
jmp
into
and
outsl
popa
mov
scas
mov
cltd
aad
or
push
inc
xor
jne
dec
add
xor
sbb
and
and
aad
rclb
mov
lahf
sbb
enter
pop
sbb
dec
jmp
mov
adc
hlt
cmp
or
lret
popl
dec
xchg
les
aaa
cmp
in
xchg
dec
adcl
inc
test
lahf
loopne
out
jmp
daa
jecxz
loope
lods
stos
insl
stos
and
cld
inc
pop
pop
or
pop
mov
fwait
mov
nop
aam
or
inc
dec
sbb
lret
xchg
xchg
popf
orl
lahf
cmc
andb
mov
stos
in
pop
test
cmp
pop
testb
cwtl
adc
daa
cwtl
jge
jmp
jge
das
push
xor
ja
add
out
movsl
test
jnp
outsb
fstp
int
xlat
rcl
rclb
sbb
pop
aam
aam
xchg
cltd
int3
sbb
pushf
lea
ja
clc
pushf
imul
clc
add
pusha
movw
lea
jmp
daa
push
les
sub
push
fwait
or
cltd
mov
dec
int
stc
xchg
xlat
fimuls
jl
push
xchg
sub
rorl
mov
xor
bound
fldenv
jnp
mov
and
mov
test
rorl
mov
lods
test
pop
ficoml
fwait
xor
lahf
xchg
fcoml
ljmp
jne
fistpl
loop
ror
pop
pop
cmp
push
mov
lods
lods
test
je
incl
pushl
sub
fistps
iret
test
idivb
jmp
int3
jne
mov
dec
test
pop
sub
popl
pop
int
jg
mov
mov
or
addr16
ljmp
jnp
mov
cmp
jae
sbb
mov
sbb
inc
add
inc
push
ret
push
orb
or
push
push
rorb
or
push
jns
icebp
loop
cltd
xor
inc
sbb
mov
fstl
jp
and
mov
les
or
sbb
push
xlat
dec
rol
mov
jb
add
pushf
push
fs
gs
mov
shl
imul
cmp
sub
and
aaa
cmp
sbb
out
pop
adc
in
jae
inc
lahf
int3
or
icebp
mov
or
rcrb
mov
sbb
push
sbb
call
adc
xchg
divl
add
mov
fisttpll
or
sub
call
add
cmpb
out
adc
push
sbb
mov
scas
jbe
push
add
ljmp
lods
dec
cli
push
rcl
adc
cmc
and
xchg
cmp
xchg
lret
out
and
out
outsl
and
jp
pop
sbb
fs
sub
je,pt
sti
inc
push
add
popf
or
mov
adc
sti
fldt
sbb
ja
dec
cmc
gs
loop
sbb
push
mov
popf
pop
xchg
rol
jecxz
xor
movsl
daa
ss
cmc
js
dec
lret
loopne
pusha
movsb
imul
sub
adc
movsb
sbb
mov
dec
xchg
inc
push
pop
shlb
pavgw
in
adc
repz
pushf
adc
sbb
icebp
cmp
or
xorps
data16
mov
addr16
cmp
in
cs
ds
jp
loop
subl
or
inc
or
jae
pop
fsub
xor
or
xlat
pushf
add
cwtl
call
shrb
ljmp
mov
repnz
sbb
and
enter
or
stos
bnd
add
cmpsl
push
out
xor
popf
xchg
xchg
dec
lcall
add
sub
sbb
lahf
ficompl
imul
and
cmp
dec
cmpsb
dec
arpl
mov
cmpsb
sbb
insl
mov
jno
jns
lea
out
ss
fwait
and
out
xchg
inc
push
inc
dec
cmc
repnz
mov
mov
xor
cmp
xchg
fwait
js
ja
pop
aad
mov
adc
sbb
hlt
cmpsb
das
cmp
test
cmp
rolb
adc
inc
pusha
pusha
cmp
inc
mov
lds
int
push
jnp
leave
sbb
hlt
mov
rcrb
adc
sbb
ror
inc
js
mov
in
xor
ficoml
cli
cmp
ret
pop
outsl
xchg
or
loopne
and
sub
mov
sbb
xchg
das
out
icebp
and
ret
xchg
inc
mov
sarb
xchg
leave
hlt
lods
pop
pop
pop
imul
jl
cmp
cwtl
mov
jecxz
xchg
mov
test
hlt
out
aas
sub
in
mov
es
mov
push
inc
jns
daa
xlat
push
adc
and
jecxz
ret
filds
fsts
mov
outsb
sarb
cmp
xchg
adc
push
mov
cwtl
nop
jns
xchg
lret
test
shl
cld
jbe
mov
adc
push
pop
shll
roll
mov
gs
jns
push
fdivrs
movsb
cmpsl
adc
pop
mov
jg
ret
jl
xchg
fstl
pop
push
mov
mov
mov
test
jmp
repz
dec
jecxz
mov
mov
mov
dec
mov
ja
xor
cmp
mov
inc
fsubr
cmpsb
aas
mov
sbb
js
decl
inc
push
fists
jo
mov
and
pop
cmp
xchg
nop
dec
cwtl
or
cltd
pop
je
push
dec
pop
push
pushl
sbb
mov
ficoml
mov
cmp
fimuls
inc
outsl
loop
aad
cmp
stc
lock
lock
lock
test
adc
xor
mov
daa
movsl
xchg
mov
mov
and
int
sbb
mov
pop
fistpl
lods
popa
lahf
adc
mov
call
popa
mov
mov
loop
xor
jecxz
xchg
push
xchg
inc
push
push
clc
icebp
sub
xor
mov
cmp
or
or
adc
movsl
cmc
and
je
adc
xor
sahf
xlat
push
scas
pop
loop
sbb
daa
outsl
in
aam
push
pushf
rcl
out
jbe
in
mov
adc
mov
int
adc
ret
jle,pn
out
insl
mov
sti
je
jno
inc
or
xchg
and
jmp
cmp
iret
jbe
loop
repz
dec
adc
xorb
inc
daa
mov
adc
rcr
aam
xchg
test
in
mov
lock
aas
xor
inc
stc
jbe
lods
loope
jne
or
push
aaa
addb
mov
loope
in
imul
sub
mov
out
pushl
cmp
inc
pushl
xchg
lods
cli
mov
mov
scas
jle
ljmp
cmp
and
or
fwait
adc
insb
movsl
call
xchg
sub
xor
xchg
ss
add
dec
jne
insl
and
push
rorb
std
shl
or
fmul
inc
jg
ds
xchg
popf
aad
xor
mov
popf
xchg
aas
lret
xor
sub
fisttps
xchg
mov
addb
arpl
push
jp
jne
inc
in
mov
shll
cltd
sub
mov
xor
push
clc
push
push
pop
ret
mov
mov
stc
jno
sbb
add
mov
scas
idivb
xchg
xor
loope
rcrl
xor
pop
inc
lds
fstl
test
xchg
dec
mov
sub
rclb
push
lcall
inc
dec
push
inc
and
mov
xor
sub
cmpsl
jbe
push
pop
xorb
stc
lock
jb
push
and
cmp
mov
or
adc
mov
add
sub
lods
movsl
xchg
sbb
hlt
add
xor
div
xor
imul
mov
hlt
sub
lea
jmp
loope
ds
daa
jae
mov
mov
cmpsl
mov
test
xor
fnsave
xor
cmovo
add
xor
xor
or
xchg
push
jae
push
mov
ljmp
lahf
adc
aam
lods
inc
cmp
cmpb
inc
jmp
cmpl
xor
cmp
mov
cld
jl
aad
push
xchg
add
xchg
loope
mov
inc
dec
sbbl
add
imul
out
inc
dec
mov
les
mov
push
pop
mov
sbb
xchg
sbb
out
sub
jns
dec
inc
pop
fsub
lret
mov
arpl
sbb
pop
pop
adc
out
jo
mov
in
call
jp
pushf
hlt
pop
fucom
test
cmp
push
movsl
sub
aam
jge
pop
ror
loop
pusha
cmpsb
sbb
dec
mov
sub
fnsave
aas
jae
lods
add
enter
push
mov
mov
das
jl
cmp
rcrb
add
add
push
in
outsl
push
push
push
xlat
inc
and
ljmp
das
jmp
and
adc
insb
and
or
cwtl
inc
xchg
fdivrs
and
fsubs
fsub
faddl
inc
inc
setae
or
incb
pop
dec
pop
fmul
jecxz
mov
lods
cs
inc
xchg
fists
insl
fsubp
push
pop
iret
inc
outsl
arpl
cmpsb
push
inc
iret
adc
mov
mov
mov
jle
pop
xchg
xchg
jmp
les
cld
iret
dec
je
cmc
mov
xchg
xor
dec
insl
mov
mov
dec
jp
push
frstor
fcmovnb
sub
xor
int
ljmp
jecxz
mov
mov
cmp
cmc
and
mov
push
lcall
inc
aad
push
push
pop
xchg
xchg
mov
inc
mov
xor
sbbl
gs
ds
dec
and
xor
jle
jns
jmp
dec
pop
mov
dec
dec
ret
cmp
cmp
test
test
push
inc
bound
push
or
xchg
test
rclb
fldt
pusha
jae
mov
test
sbb
jb
cmp
push
out
xchg
notb
addr16
mov
cmp
movsb
sub
shlb
dec
ret
ljmp
idivb
jmp
pop
iret
inc
lret
push
rclb
rclb
sahf
popa
inc
gs
lods
mov
cmp
outsb
test
pop
rcrb
adc
jns
in
xor
xor
mov
lahf
cmp
inc
inc
test
jge
int
es
xor
adc
repz
stc
mov
cmovge
sbbb
adc
sub
cli
add
dec
popl
sbb
in
push
pop
enter
inc
or
into
je
mov
and
cmp
inc
mov
faddp
les
call
xorl
repz
out
mov
pop
inc
popf
inc
sbb
in
inc
leave
push
add
movsl
and
jno
stos
movsl
jge
in
xchg
movsl
test
pop
ret
or
fcompl
cmp
imul
sbb
xchg
adc
cmp
xchg
or
test
fxch
lock
pop
gs
jle
xchg
xchg
fwait
imul
cmp
and
pop
adc
jbe
sahf
xlat
fistl
jg
addr16
or
xor
jecxz,pt
adcl
nop
or
stos
and
xchg
sub
pop
repz
inc
push
push
mov
inc
dec
or
sbb
jno
cltd
insl
loope
into
pop
ret
jp
dec
pop
push
pop
fnstenv
sbb
movsl
sub
adc
xchg
push
das
ljmp
push
ja
stos
pop
lahf
inc
icebp
mov
insb
sbb
lret
insl
pop
div
sub
imul
movnti
add
push
lods
cmp
movl
mov
sbb
and
dec
xchg
dec
fisubrs
or
cmc
xor
or
pop
push
cmpl
adc
lods
neg
iret
pop
loopne
and
cld
sarl
sub
xor
aam
add
je
enter
adc
fiaddl
lret
cmp
mov
dec
cmpsb
mov
add
rorb
mov
xor
sbb
imul
insl
loopne
mov
pushf
mov
fdivrl
and
sbb
mov
jae
mov
xchg
fwait
xchg
dec
decb
arpl
movsl
mov
inc
rclb
bound
mov
mov
mov
mov
cmp
add
pop
cwtl
movsl
test
mov
lret
rcrl
push
sbb
pop
dec
xchg
add
jnp
arpl
xchg
xchg
iret
pop
push
sbb
add
push
fs
adc
inc
xchg
xchg
add
pop
iret
lret
adc
call
fwait
ud0
dec
out
in
clc
cmc
sub
push
dec
loope
xchg
xlat
and
outsl
inc
cs
pop
cwtl
xor
fcoms
je,pn
popl
pop
call
test
dec
adcb
pop
aam
jno
hlt
mov
sbb
or
dec
loopne
int
lds
in
repnz
ret
lret
mov
inc
and
lds
lods
into
call
ljmp
inc
aaa
jnp
or
xor
fisubs
adcb
mov
imul
mov
or
or
nop
jb
sub
dec
pop
cli
scas
fildll
cmpsl
dec
mov
movsb
popf
dec
fcoml
rcl
xchg
fbld
cmp
mov
in
popa
jns
jns
mov
and
in
movsl
jp
xor
dec
fildll
lea
pmulhw
and
cmp
sbb
cmp
xchg
cwtl
lret
xor
push
fsts
mov
jmp
fs
enter
sub
push
push
outsl
movsb
stos
jge
ret
adc
and
dec
fildl
into
mov
out
inc
shlb
mov
aad
push
popf
push
fists
bound
sahf
add
jno
pop
in
gs
push
into
sahf
dec
push
mov
push
dec
aam
dec
mov
int3
or
dec
sar
mov
push
fimuls
push
dec
call
push
pop
lods
mov
out
loope
sub
shl
dec
pop
shrb
mov
je
jmp
sbb
mov
lods
out
insl
cmpsl
mov
push
cli
mov
gs
std
lret
test
into
jne
dec
adc
or
pop
mov
and
jo
cmpsl
sti
and
push
pop
sahf
mov
pop
enter
xchg
ret
add
mov
inc
mov
aas
jl
adc
jae
ja
mov
stos
es
dec
les
divl
pop
into
xchg
daa
imul
cs
int
cmp
mov
xchg
fcompp
dec
ljmp
add
stos
add
push
xor
repnz
fldl
ret
aas
je
push
mov
mov
push
in
jnp
jae
out
add
push
imul
cmpb
sub
push
fisttpl
lcall
sub
cli
xor
cli
cmpsb
pusha
pop
push
and
mov
ret
dec
xor
xor
repz
std
daa
xor
ret
pandn
or
push
or
hlt
push
inc
or
loope
stc
lock
add
jmp
aas
in
lret
sub
jmp
hlt
js
sbb
sti
add
loope
adc
jns
cs
imull
ljmp
add
aam
in
enter
arpl
mov
xchg
f2xm1
stc
mov
push
dec
mov
addb
insl
leave
or
inc
int
filds
scas
fcomp
push
dec
imul
test
cmp
dec
es
add
push
mov
or
mov
pop
inc
iret
data16
scas
mov
pushf
dec
sahf
and
and
inc
push
in
lds
ret
arpl
adc
push
jmp
jp
xor
stos
add
mov
dec
jl
aas
stc
add
xchg
lcall
push
movsl
ljmp
fwait
pop
movsl
xlat
and
push
dec
insb
into
pop
mov
test
leave
das
mov
xor
cmp
lods
add
fisttps
ret
cmp
pop
dec
jbe
out
sbb
nop
mov
roll
sub
mov
pop
in
and
pop
cltd
pop
sti
rorl
dec
pushf
or
or
inc
and
jecxz
subb
push
fwait
mov
xchg
fs
push
inc
lret
aad
push
xchg
dec
add
cs
ret
cltd
in
jns
xor
xor
push
pop
test
repz
dec
inc
pop
xchg
mov
jle
ja
jg
addr16
pusha
mov
sub
pmullw
jp
mov
repz
mov
mov
pushf
in
fiaddl
or
sub
jo
push
and
fiaddl
and
lret
cmovo
pop
jns,pt
cltd
or
xor
jnp
sub
dec
dec
dec
jae
test
popa
mov
aad
pop
loop
cli
arpl
push
dec
xchg
cwtl
sub
lahf
insb
aaa
push
lcall
push
jl
in
adcl
fiaddl
xchg
jl
arpl
lock
into
mull
lods
push
adc
out
hlt
jg
ficompl
inc
ficomps
mov
cmp
pop
idivb
mov
push
gs
aaa
jecxz
add
fwait
xchg
nop
imul
outsl
std
movsl
sub
or
nop
or
ret
aad
ret
dec
dec
xchg
les
adc
sbb
mov
sub
jg
lods
add
cli
sarb
rcl
leave
int3
mov
cmp
sbb
rorl
bound
and
scas
fistl
jle
addb
out
fst
or
adc
and
xchg
decl
loope
sbbb
pop
push
or
adc
cmc
mov
inc
loop
jge
sbb
mov
out
stc
cmp
and
jo
jno
je
push
mov
mov
pop
into
into
adc
pop
pop
out
imul
push
pop
je
int
out
adc
aam
cmp
repnz
mov
orl
loop
inc
add
loopne
ret
cli
or
mov
cmp
js
xor
imul
xchg
lcall
ljmp
sbb
fdivl
inc
jae
mov
xchg
fs
ss
lock
mov
ja
ja
push
xchg
push
mov
or
popf
pushf
push
hlt
jns
into
push
push
mov
mov
fimull
cmp
pop
xor
inc
std
jo
leave
dec
imul
das
ss
in
popf
xor
or
mov
inc
cld
insb
in
sub
adc
jp
xor
daa
jmp
dec
jo
jnp
jae
push
aaa
out
arpl
sub
cli
repnz
pop
mov
lods
and
mov
roll
insl
mov
or
xchg
out
inc
or
cmp
or
aam
jb
lret
pop
sub
fwait
mov
pop
daa
stc
iret
push
out
mov
xchg
popf
ljmp
sbb
in
outsb
push
sbb
add
xor
sarl
cs
or
or
pop
iret
fistps
fwait
or
es
add
flds
xchg
gs
adc
jnp
lahf
mov
faddl
sti
xchg
popa
pop
rclb
push
sub
fs
mov
or
mov
or
out
mov
clc
pop
sub
or
cld
jae
fdivrl
leave
jle
out
inc
or
daa
or
int3
adc
stc
lock
loopne
mov
push
and
or
fst
or
stos
mov
ds
mov
xchg
cmp
shlb
test
push
pop
sub
adc
pop
dec
inc
and
aas
mov
xchg
jecxz
xor
cmc
mov
stos
xchg
ret
push
mov
lock
shrl
xchg
int3
ret
sbb
outsl
mov
sbb
or
or
sahf
mov
push
aaa
inc
sbb
imulb
sarb
push
mov
dec
push
jg
mov
cwtl
adc
int
idivb
jmp
jae
push
adc
testl
cs
bound
sbb
mov
or
daa
push
call
rcrl
das
sbb
or
adc
cmp
ljmp
ret
push
mov
pop
sub
adc
sub
outsl
daa
mov
ffree
jns
jb
cmp
mov
xchg
cmp
in
or
or
push
sub
xchg
fsts
call
enter
popl
fmul
idivl
idivl
mov
sub
dec
jb
push
jno
loopne
test
insl
and
xlat
jne
in
aam
xchg
nop
js
or
mov
in
adc
in
rcrb
push
cmp
pop
popf
movsb
je
xor
lret
aaa
outsl
jg
pop
push
dec
mov
xor
loop
insl
push
test
adc
in
adc
loop
psubw
out
out
fwait
pop
femms
xchg
rcl
ljmp
jl
cmpsb
mov
ljmp
inc
fcmovnu
xchg
push
push
push
cli
inc
dec
bound
aaa
mov
push
cs
imul
out
aaa
call
imul
mov
rcrb
mov
es
scas
jg
jle
inc
sbb
aad
cmpsb
mov
inc
dec
mov
imul
cmp
pusha
jb
inc
ss
mov
call
cmpsl
fs
adc
lock
stos
inc
push
push
dec
dec
xchg
filds
lret
xchg
sub
add
gs
dec
sarl
cs
jmp
repz
ljmp
es
popf
imul
push
das
jge
outsb
out
xlat
fwait
inc
jae
add
popf
xchg
cmp
pop
repz
test
les
pop
sbb
enter
into
mov
inc
xor
xchg
inc
pop
inc
cmc
pushl
mov
adc
dec
fsubrl
stos
sub
pop
xchg
les
hlt
ss
sbb
cwtl
fstpt
scas
lds
stos
jp
mov
ficompl
fistpl
inc
push
in
dec
ss
mov
or
dec
ror
jle
sbb
or
xchg
mov
sub
ja
in
add
out
mov
mov
je
and
xor
jne
push
rorb
or
pop
jge
xchg
sub
incl
in
bswap
dec
je
mov
xor
sbb
xor
rcl
aad
sbb
repnz
and
mov
cmpsb
imul
mov
jnp
or
sarl
xchg
sahf
xchg
push
pop
add
cltd
dec
push
das
and
jg
rol
std
icebp
jle
or
cld
movsb
xor
xor
shr
mov
cmp
jne
cmp
cmpb
mov
jno
inc
push
pop
jae
fs
sub
sub
mov
pop
lds
ss
xchg
es
add
vpmulhuw
add
fcomi
jg
or
jbe
aaa
js
lret
loope
mov
sbb
mov
mov
mov
fucom
insb
jecxz
fwait
adc
push
call
lahf
push
fwait
add
or
mov
sti
jl
add
mov
sbb
cltd
and
clc
mov
pop
dec
push
arpl
nop
mov
mov
dec
aas
cmc
lods
and
ret
sbb
nop
movb
repnz
push
sub
inc
movsl
cs
sbbl
popa
mov
fwait
jno
shr
and
sub
popf
xchg
leave
inc
inc
ret
out
jb
idivl
pop
dec
jbe
adc
push
mov
sbb
push
shrl
xchg
inc
xlat
pop
push
jmp
out
pop
bts
push
aam
push
sbb
insb
loope
mov
lret
subb
jnp
dec
lret
mov
lods
jge
clc
jae
lock
or
adc
pop
and
cs
mov
inc
jg
pushl
add
sub
xlat
adc
dec
add
cmp
xchg
dec
lahf
ud2
inc
ret
mov
cmpsb
pop
jmp
sub
sub
xchg
push
push
mov
jno
lock
jae
push
testb
loop
xor
sti
into
daa
jg
ret
addr16
adcl
ljmp
mov
mov
inc
dec
and
jle
inc
rcrl
jecxz
sti
pop
adc
xchg
xor
jo
push
cmpl
pop
mov
fcoms
out
xor
iret
lret
adc
rcr
push
int3
adc
xchg
adc
insl
enter
les
mov
aas
mov
cs
outsb
mov
cltd
sub
or
add
gs
lret
repnz
or
cmp
inc
or
out
dec
lea
ret
cmp
mov
inc
leave
cmp
mov
lds
push
pusha
and
jl
push
stos
and
adc
call
mov
cmp
mov
sub
sbb
pop
pop
xchg
mov
mov
xor
addr16
cli
jle
pop
popl
cmp
scas
out
add
xlat
sub
sub
in
pop
jmp
push
mov
and
or
imul
cmp
mov
mov
filds
and
imul
cmc
jns
mov
mov
dec
repz
les
loope
jns
push
pop
add
mov
xchg
imul
jno
das
cmp
popf
push
popa
stos
pop
mov
xchg
fcoms
je
stc
addr16
ljmp
xchg
cmpb
outsl
jecxz
mov
inc
mov
int
pop
push
sub
sahf
xchg
dec
mov
in
cmp
js
pushf
shrl
push
jb
xchg
mov
jns
cmpsb
push
fistps
rcll
xlat
outsb
jle
cli
pop
sub
or
test
pusha
mov
inc
xor
push
jbe
lods
jl
clc
arpl
and
dec
mov
stc
xor
movsb
mov
adc
or
cld
cmp
sub
pop
inc
subl
or
int3
mov
push
pop
insb
and
pop
into
inc
outsb
bound
in
add
sub
cmp
aas
mov
sbb
xchg
sub
mov
ret
or
mov
lret
iret
leave
inc
lret
addl
xchg
or
rcrb
mov
adc
push
fisttpll
rcrl
pop
dec
inc
dec
push
fcoml
push
push
ficoms
cld
mov
mov
or
fwait
shl
or
js
mov
movsl
test
mov
out
and
mov
test
repz
jl
add
dec
mov
std
lea
mov
pop
pop
movsl
lods
inc
mov
cmp
stc
repnz
jbe
mov
int3
sbb
arpl
fs
xor
cs
insb
add
mov
sar
mov
call
xor
insl
mov
out
sub
pushf
dec
sahf
roll
lcall
adc
inc
fwait
rcl
mov
sub
popf
ljmp
out
push
xlat
mov
mov
push
cmpsl
lcall
out
or
adc
lods
inc
add
inc
rolb
fadd
test
cmpsb
mov
fadds
inc
dec
push
movsb
das
cmp
sbb
in
mov
lods
and
outsb
jle
inc
dec
inc
aad
cmc
cmpsb
ss
mov
addl
add
rolb
push
add
inc
or
outsb
inc
inc
clc
hlt
sti
test
and
and
mov
and
adc
cmpsb
mov
add
mov
xor
jo
sub
fists
fwait
mov
popa
ud1
mov
test
xchg
and
pop
and
pop
shrb
mov
call
mov
adc
pop
sbb
insb
xor
inc
jp
jne
dec
inc
push
scas
out
insl
mov
fimull
inc
fisttps
inc
out
daa
sub
out
stos
scas
and
sbb
push
dec
pop
xchg
inc
std
xor
inc
inc
pusha
cs
jo
scas
cmp
pushl
xor
jb
xchg
out
lcall
rcrb
sbb
mov
bound
pop
adc
shl
mov
cmp
stc
push
mov
imulb
out
xchg
pop
or
cwtl
sub
lahf
sbb
fstpl
or
or
push
cltd
fldenv
into
testl
push
push
pop
mov
sti
je
lret
inc
test
pop
mov
stos
je
xchg
inc
xor
xchg
cmp
jmp
push
dec
mov
push
rolb
iret
add
or
xor
or
push
mov
inc
fisttps
bound
lock
icebp
mov
cmp
leave
dec
push
mov
dec
lret
push
inc
inc
fcoml
sub
cmc
int3
gs
test
addr16
pop
repz
sti
and
push
iret
or
sbb
in
pop
fsubs
pop
lret
enter
shlb
loop
ficompl
mov
xlat
push
push
stos
das
and
mov
stos
loopne
add
cmc
cmp
ds
test
and
and
mov
fwait
mov
call
push
push
mov
pusha
lea
jmp
lds
mov
mov
jo
sub
out
out
imul
adc
mov
sub
je
xchg
cmc
shlb
add
or
testl
mov
pop
rep
push
daa
sub
cmpsb
addr16
scas
orl
jnp
stc
dec
popf
sbb
xor
scas
call
arpl
in
jmp
sbb
lods
insb
mov
mov
pushf
xchg
add
into
push
push
rorl
adc
cmpsb
jmp
jmp
fcoms
jmp
mov
dec
ja
gs
mov
dec
pop
lods
shr
cmp
pop
rclb
fiaddl
cmp
test
and
push
out
aam
sub
jmp
inc
jns
dec
addl
push
adc
es
or
and
divl
inc
rorb
std
clc
orb
or
jge
cs
sbb
mov
lcall
rcr
rcrl
push
ficoml
pop
int3
sbb
test
ljmp
add
or
pop
rcl
pop
and
mov
iret
addb
cld
jle
outsb
add
jbe
add
mov
leave
or
jne
arpl
jge
loop
push
lock
mov
pop
push
cmp
ret
loop
loop
hlt
test
mov
insl
pop
rorl
jae
imul
or
arpl
fmulp
imul
scas
in
daa
insb
sub
stos
outsl
movsl
int3
sbb
mov
popa
out
dec
push
arpl
lret
dec
pop
aam
pop
adc
mov
mov
pop
or
sbb
push
push
pushf
enter
les
xchg
sbb
rcll
movsb
es
faddl
call
dec
push
out
xlat
fwait
sbb
test
lds
dec
inc
int3
sbb
push
adc
ficoms
cmc
dec
sbb
ret
push
adcb
mov
sbb
add
dec
fsts
mov
push
or
or
iret
jnp
test
cli
ret
loope
mov
shl
cmp
mov
or
dec
flds
inc
lret
pop
pushf
enter
cmpb
sbb
pushf
xlat
es
and
xchg
or
dec
jp
sbb
sub
imul
imul
in
mov
mov
aaa
loopne
jbe
int
adc
call
mov
adc
sbb
call
push
sbb
jmp
fcoms
adcb
shll
push
mov
add
mov
pop
inc
pushf
xlat
pop
dec
jbe
ljmp
cmpsl
arpl
das
imul
cs
int3
sbb
cmp
pushl
movzwl
sub
clc
adc
mov
bt
pushf
pushl
pushf
add
pushf
cmp
mov
stc
test
mov
jmp
lret
push
imul
add
pop
and
inc
iret
into
rcll
aad
stc
cmc
ljmp
jo
ljmp
mov
int3
push
int3
addl
int3
fmul
cli
shlb
into
xor
lret
rcll
std
shr
push
stos
dec
int
sub
movsb
iret
adc
push
fstp
ret
in
cmpsl
int3
jnp
push
pop
insl
into
je
into
and
pop
imul
jl
out
ss
dec
int
fdivrl
int3
insl
pop
int3
mov
data16
sbb
lret
out
mov
addr16
mov
lcall
out
out
jae,pt
sub
cli
cmp
cmp
sub
fistps
pop
jmp
or
dec
dec
arpl
popa
jp
pop
shrb
pop
je
iret
and
mov
addr16
inc
cmpsb
stc
dec
dec
imull
ja
into
jo
lret
test
mov
imul
decb
in
inc
je
push
dec
or
or
push
mov
mulb
jno
adc
mov
and
adc
js
pop
neg
push
daa
cs
lret
fnsave
dec
inc
aaa
fiaddl
mov
lret
push
cmp
ljmp
fisubrs
push
push
add
cli
rcll
pusha
shlb
cli
scas
rclb
and
ret
icebp
and
xor
cs
nop
and
hlt
add
sbb
int3
xchg
add
cwtd
and
dec
shl
shll
in
sbb
xchg
mov
es
pop
xchg
lahf
cmp
xchg
xlat
add
jns
fdivrs
bound
push
xor
mov
test
aad
ficompl
cltd
in
xchg
jecxz
adc
adc
into
bound
fistl
dec
lea
nop
add
push
and
mov
test
mov
sub
insl
iret
fistpll
or
and
and
or
sub
or
dec
ja
xchg
fmull
repnz
xchg
fisubrl
cmp
aam
out
ficoml
push
or
or
pop
cltd
sahf
or
dec
inc
ja
adc
mov
int3
fimull
push
adc
mov
scas
rcll
fisubl
pop
push
and
or
data16
push
comiss
dec
or
adc
or
fwait
push
and
adc
push
adc
adc
iret
push
push
jne
adc
int
mov
inc
and
mov
cmc
dec
ds
adc
decl
sub
sbb
push
iret
je
lret
imul
dec
mov
jno
push
fisubl
pusha
mov
test
movsb
shll
mov
lret
push
sub
jb
dec
das
and
jmp
xor
test
sbb
mov
jae
scas
shlb
sbb
js
out
or
adc
lea
stc
addr16
rcll
pop
mov
rclb
in
outsl
das
or
inc
pop
mov
push
lahf
jmp
xchg
mov
adc
dec
jns
dec
or
data16
and
xchg
or
mov
test
aas
or
mov
js
sti
ljmp
jmp
mov
xchg
ljmp
jne
dec
push
ljmp
adc
iret
jns
mov
inc
mov
sub
xchg
int
testl
popa
test
mov
hlt
fcmovu
rclb
sbb
rclb
scas
iret
out
jbe
or
arpl
adc
rcl
outsl
push
pop
mov
xchg
leave
test
outsb
or
mov
out
ljmp
sti
mov
jmp
stos
mov
add
je
inc
outsb
cmpsl
dec
pop
pop
jmp
pop
aas
push
sub
mov
and
or
ljmp
testb
dec
movsb
adc
xor
dec
cmp
test
add
std
repnz
xchg
out
out
out
out
out
out
out
movsl
lcall
fwait
or
movsb
ljmp
mov
sub
ljmp
lcall
or
loop
shr
dec
and
mov
stos
cmc
cmp
mov
stos
scas
jp
stos
mov
and
inc
dec
push
leave
xchg
jg
dec
add
popf
inc
add
adc
ljmp
in
daa
adc
fstpt
scas
mov
neg
mov
jmp
dec
into
stos
aam
lcall
dec
sub
scas
enter
xchg
dec
test
mov
cmpsb
xchg
dec
popa
push
or
jbe
dec
js
mov
lret
addr16
out
test
sahf
ljmp
test
aas
dec
pop
inc
ljmp
dec
lcall
adc
sbb
leave
pop
pop
pop
shl
mov
shll
fsts
ljmp
sub
mov
scas
lret
dec
mov
sub
push
lahf
push
or
roll
mov
xor
inc
and
pop
adc
add
xor
and
lahf
jmp
stc
or
and
leave
adc
and
pop
icebp
or
xchg
mov
or
jmp
mov
shl
fdivrp
fnstenv
into
push
pop
iret
add
fcmovnbe
adc
aam
fcmovnu
pop
lret
sti
in
pop
mov
or
pop
push
or
push
cltd
jns
fxch
call
loope
lcall
sahf
rorl
icebp
dec
fidivrs
and
cli
pop
add
icebp
xchg
stos
xor
and
pop
jle
mov
xchg
dec
into
xchg
call
mov
test
mov
fcom
mov
lret
mov
divl
or
in
aaa
push
lods
xor
inc
push
out
xchg
dec
dec
mov
xchg
sub
dec
aaa
and
mov
mov
and
jbe
add
notl
jmp
int
xor
out
pop
jmp
test
in
mov
xchg
inc
xor
test
push
movsl
jecxz
aaa
pop
push
xchg
fldenv
pop
push
dec
xlat
rclb
dec
or
dec
fxch
mov
add
push
adc
push
in
mov
jnp
aad
inc
fsubs
in
fmuls
repnz
aam
dec
inc
xchg
push
mov
lret
inc
hlt
aaa
fidivl
test
aas
leave
push
dec
int
imul
and
sbb
dec
dec
or
dec
pop
in
inc
push
notb
js
or
xor
or
pop
pop
or
fldl
in
push
iret
fwait
push
lds
aad
mov
movl
push
loope
popf
xlat
clc
movsl
push
insb
xlat
pop
and
sbb
lret
sub
sbb
pop
or
add
push
push
pop
movlps
sbb
dec
nop
int
push
inc
iret
fs
lods
or
hlt
pop
cmpsb
sbb
or
push
dec
fs
mov
popw
push
rcl
mov
add
inc
jb
push
adc
int3
sbb
dec
mov
mov
stos
push
mov
dec
aaa
dec
sbb
out
movsl
pop
cld
hlt
pop
daa
mov
pop
push
pop
loopne
insl
lock
into
lret
decb
fstpt
mov
cmp
mov
pusha
roll
or
into
mov
push
push
stc
cltd
ficoml
ja
inc
add
push
dec
push
mov
aam
xor
inc
push
stos
lahf
movsl
std
into
pop
mov
aad
jae
repnz
or
or
data16
rcr
sub
sbb
inc
je
push
int3
cs
imull
mov
mov
or
repnz
jecxz
fsubr
fmul
stc
sbb
aaa
adc
int3
inc
and
push
jbe
jb
fcmovnu
dec
incb
popl
push
pop
or
jns
mov
pop
xchg
ss
clc
fsubr
mov
mov
icebp
and
pop
xor
or
out
jmp
ljmp
mov
mov
scas
jmp
lret
stos
mov
pop
mov
aad
and
pop
outsl
int3
movsl
repnz
push
pop
mov
shrl
arpl
lcall
int3
cmp
into
adc
stos
sahf
push
stos
mov
dec
loopne
inc
je
ss
cs
sub
sahf
int
out
ror
iret
nop
loopne
popa
lds
push
mov
and
sbb
push
out
or
stc
inc
xchg
jmp
lods
or
jg
xchg
outsb
mov
push
sub
leave
xor
sub
mov
cmp
stos
xor
mov
fs
divb
insb
pop
ss
lret
scas
mov
pop
sbb
stc
sub
cmp
lock
jbe
mov
xchg
popf
lock
out
xchg
dec
das
or
jmp
push
fisttpll
sub
movsb
cmp
mov
aaa
add
and
lret
fisttps
int3
mov
or
insb
in
std
aam
dec
mov
fmulp
int
mov
adc
sbb
nopl
add
push
or
mov
shrb
pop
dec
ljmp
das
push
sti
and
out
pop
aas
ds
decl
movsb
inc
or
inc
lods
adc
cltd
popa
adc
or
push
dec
rorl
push
cli
rcrl
mov
adc
call
push
sti
jae
adc
stos
es
or
out
gs
dec
pop
and
xor
push
cmp
push
push
stos
push
xor
fsubrs
cmp
dec
sti
testl
movsb
ds
sub
dec
inc
scas
push
pop
dec
repz
out
fnstsw
fldcw
loopne
or
xchg
lcall
in
int3
xchg
mov
xchg
cltd
ret
not
repnz
xor
mov
pop
add
das
mov
mov
rolb
cmp
stos
lahf
xchg
or
pop
sub
lds
xor
xor
xchg
xchg
test
in
in
and
adc
jecxz
cmpsb
mov
jbe
int3
pop
in
in
insl
sub
icebp
aam
adc
hlt
lods
dec
or
sahf
dec
aam
iret
adc
dec
cmpsb
iret
sub
std
xor
sub
sub
xor
or
sub
or
dec
in
dec
lods
sahf
dec
pop
lods
dec
lock
or
dec
push
push
fisttpll
inc
xor
fcompl
dec
dec
fisttps
sub
push
add
das
dec
das
xor
push
outsl
xchg
movsb
ss
not
aas
pusha
mov
cs
pop
shrb
mov
rolb
xlat
sti
xchg
iret
fstpl
or
roll
fcmove
sbb
shr
aad
push
mov
dec
stos
mov
ficoml
or
dec
and
in
push
push
xor
bound
jmp
or
dec
or
int
inc
sbb
sub
or
call
or
aaa
mov
cmp
addr16
shr
xchg
mov
or
fcmovne
jecxz
in
mov
or
jmp
or
dec
int3
jecxz
in
mov
dec
dec
bound
or
dec
lret
jecxz
in
mov
dec
or
dec
or
stos
shll
fistpl
pop
dec
fninit
sbb
jmp
fsincos
bound
dec
sbb
sbb
sub
fdivrs
bound
dec
pop
jecxz
in
imul
jnp
xchg
jmp
or
dec
fwait
jecxz
in
stos
push
mov
or
dec
fsub
adc
cld
bound
sbb
xchg
in
sub
adc
shr
dec
or
dec
pop
jecxz
in
insb
push
adc
jmp
or
dec
pushf
jecxz
in
lods
push
adc
nop
dec
fucom
push
in
in
push
adc
shr
or
jecxz
in
sub
iret
mov
adc
inc
push
pusha
jo
nop
lret
shl
icebp
add
and
xor
popa
jno
adc
dec
cmp
mov
sub
sbb
jmp
pop
cli
fidivrl
or
sub
and
rolb
nop
cmp
adc
fmul
fwait
jl
sbb
mov
imul
lret
insb
stos
dec
sub
cmp
or
int3
sbb
jo
lret
icebp
xor
shlb
dec
pop
imul
stos
mov
cld
icebp
mov
imul
jo
mov
fdivr
fcmovbe
inc
push
out
ljmp
jle
cld
imul
shl
sub
addr16
arpl
mov
cmp
dec
iret
dec
pop
jmp
push
int3
ljmp
sub
mov
and
lcall
jl
ds
jl
in
xlat
mov
lret
xor
ljmp
imul
dec
and
push
dec
cld
sbb
sbb
ljmp
in
cmp
dec
dec
jnp
out
imul
int
ljmp
or
fwait
or
ljmp
fdivrl
push
adc
bswap
push
mov
push
sbb
scas
ljmp
ljmp
lret
sbb
cmp
insb
dec
sub
rorb
xor
cmp
test
ljmp
dec
repnz
or
mov
pop
shrb
iret
ljmp
mov
jnp
fsubrl
pushf
lea
lods
pop
ljmp
push
mov
cvtdq2ps
popa
sub
sub
std
decl
mov
jl
add
pop
lea
cmp
lods
push
dec
sarl
push
scas
ljmp
insl
in
ljmp
ljmp
in
mov
mov
dec
ljmp
out
addr16
notb
mov
push
ljmp
mov
or
dec
inc
adc
mov
jp
cs
mov
ss
pop
and
fistps
sahf
ljmp
pop
outsb
rcrb
dec
das
mov
jle
outsb
dec
cld
ljmp
in
scas
imul
mov
pop
jnp
dec
addr16
push
cmp
stos
and
insb
in
fbstp
mov
pushf
ljmp
push
in
ljmp
jnp
imul
psrld
xchg
pop
int
in
das
arpl
aas
pop
dec
jmp
dec
ljmp
mov
dec
stos
in
jg
fwait
mov
cs
mov
ljmp
lret
arpl
rclb
mov
loopne
jl
cld
or
pushf
stos
and
rorb
loop
dec
ljmp
mov
rol
fsub
xor
pushf
ljmp
cmp
pusha
outsb
push
or
dec
jl
subb
ljmp
mov
cli
mov
dec
ljmp
jl
rcl
dec
ret
icebp
sbb
push
pop
adc
and
mov
shrb
and
sub
or
push
cmp
out
lock
cmp
sub
lods
push
cmp
pop
ljmp
ljmp
dec
into
mov
xchg
ljmp
lcall
idivb
add
cmc
dec
lret
adc
adc
cltd
mov
cs
add
shlb
and
in
pop
inc
int
arpl
fwait
mov
pop
pop
insb
jmp
lods
cs
and
dec
sub
in
ljmp
jp
adc
push
ljmp
dec
jnp
mov
mov
pop
ret
rorl
ljmp
pop
fcompl
sub
mov
push
adc
and
stos
jl
ljmp
lods
lods
in
xor
mov
fwait
push
cmp
push
fs
arpl
int
in
push
jae
lcall
sub
sbb
fsubr
stc
jnp
and
mov
push
cli
dec
insb
or
sub
in
dec
push
hlt
push
ljmp
mov
xchg
into
ljmp
xor
dec
push
rcll
mov
jl
ljmp
mov
push
shrb
fildl
fwait
mov
dec
ret
and
fdivl
addr16
sub
ljmp
stc
mov
xor
mov
or
cmp
pop
and
mov
cmp
lods
icebp
dec
fildl
dec
cmp
insb
xchg
int
sbb
cs
push
sbb
lea
mov
imul
or
ljmp
cmp
aas
rorb
jl
mov
sub
lds
in
ljmp
fwait
jbe
ljmp
mov
ss
inc
pop
mov
and
add
jbe
popf
ljmp
paddw
mov
shlb
mov
or
stos
xor
xor
sbb
xor
rcrb
not
mov
pop
int3
addr16
cli
daa
xor
movsb
ljmp
mov
and
ljmp
lcall
addr16
in
push
or
imul
mov
and
pop
mov
fdivrl
pop
in
fidivl
pop
sbb
jnp
xchg
imul
dec
in
mov
xchg
cmpsl
dec
mov
cmpsl
mov
fmull
mov
lcall
dec
jo
mov
dec
add
shr
pop
dec
mov
imul
pop
ljmp
or
lret
sub
ljmp
jl
ljmp
and
dec
push
js
dec
mov
out
fwait
ljmp
lret
xlat
test
das
mov
cs
dec
mov
insb
bound
pushf
mov
in
in
jmp
sbb
push
shr
sbb
jl
ljmp
sub
dec
and
pushf
addr16
mov
or
adc
loopne
rcrb
imul
and
dec
dec
ljmp
in
sar
dec
cld
stc
pop
arpl
sub
fs
mov
dec
xchg
fwait
mov
cmp
loopne
rclb
in
test
ljmp
pop
cmp
ljmp
loop
lcall
ljmp
push
jmp
xchg
out
mov
or
jp
cld
cmp
jle
call
cmp
dec
sbb
or
pop
jmp
ljmp
mov
stos
xlat
pop
ljmp
mov
iret
jl
lret
mov
ljmp
ljmp
fwait
ljmp
sbb
xor
lods
das
cmp
or
out
ljmp
ljmp
in
add
imul
ljmp
jnp
dec
mov
ljmp
out
cld
fcomps
mov
dec
test
fucomip
xchg
fstl
rcr
or
cwtl
cmp
popa
in
imul
fwait
inc
ljmp
js
aas
sbb
cmc
sbb
dec
out
insb
ljmp
int
fwait
std
or
ljmp
jnp,pn
pop
loop
inc
sbb
dec
adc
inc
ljmp
sbb
mov
pushf
mov
fcmovu
dec
ljmp
jnp
pop
imul
or
stos
push
mov
add
push
cld
or
mov
sub
out
ljmp
cmp
ljmp
and
fwait
add
insl
xchg
int3
movsb
ljmp
dec
stc
or
insb
in
or
or
ljmp
in
dec
sbb
dec
fimuls
sub
out
dec
ljmp
ljmp
ljmp
fcompl
cmp
push
fsubr
cmp
fimull
fcompl
mov
cwtl
sbb
cld
jp
int3
lret
or
push
ficompl
mov
push
xchg
lcall
rorl
mov
in
push
lret
sub
cld
jle
push
cli
add
mov
xchg
dec
dec
sbb
scas
mov
mov
mov
pop
mov
cmp
fcoml
sarl
jl
lret
add
fstl
sub
dec
dec
cmp
nop
jp
shlb
insb
jmp
xor
xchg
inc
lea
push
xor
push
adc
je
sbb
stos
push
inc
loopne
imul
int
jl
insl
jnp
jp
dec
sub
adc
xor
hlt
lods
orb
rorl
cmp
sbb
fdivrs
cmp
in
add
insb
lcall
imul
iret
dec
or
sti
push
ljmp
xchg
adc
imul
in
cmp
push
sti
xlat
sub
sbb
imul
pushf
sahf
fnstcw
adc
pop
xchg
aam
int3
lret
sub
xchg
fwait
jne
mov
arpl
int
bound
mov
or
repnz
sub
mov
imul
adc
push
push
lcall
loop
pushf
cli
mov
mov
in
fisttpl
insb
and
push
ficoms
sbb
adc
ljmp
lret
call
outsb
hlt
add
dec
into
in
mov
ja
sbbb
test
xor
or
out
dec
add
adc
sub
pop
push
adc
int
stos
or
mov
jge
imul
fsubrs
adc
cmp
or
int
pop
hlt
or
lock
pop
das
cmp
pop
sarl
in
repz
xchg
js
pop
cmp
insb
dec
dec
lods
fists
ljmp
push
or
ljmp
cli
mov
mov
sbb
fwait
dec
mov
push
mov
and
sub
dec
shlb
cmp
sahf
cli
push
fcomip
xor
xor
adc
xor
dec
aas
loop
icebp
mov
dec
lods
dec
mov
xor
pop
pop
dec
pop
jecxz
or
mov
out
hlt
jmp
outsb
ljmp
mov
decb
outsl
int
mov
sbb
ljmp
adc
dec
jp
setnp
xchg
into
sub
mov
or
fsts
fnsave
pop
stos
int3
into
jnp
dec
stos
adc
sub
push
jg
add
aam
pop
scas
jne
or
pushf
push
int3
push
pop
or
sti
outsb
push
mov
or
adc
push
jno
adc
lods
ljmp
jmp
lcall
or
jmp
shrl
fdivrs
loopne
jmp
adc
lock
cmp
fimull
fidivrs
insb
int3
pop
xchg
sub
add
xlat
rcl
mov
ret
sarb
jae
aad
mov
aam
lock
shrl
int3
fimuls
shll
sub
or
xchg
cmc
fldln2
adc
xlat
adc
adc
or
outsl
push
pop
cltd
insb
shrl
shll
jo
adc
pusha
adc
adc
aad
std
cmc
pushf
jo
imul
ja
mov
or
push
stos
push
into
rcll
repz
cltd
jmp
mov
pop
int
cmp
dec
dec
mov
cmc
cli
add
xor
dec
pop
cmp
mov
adc
add
push
dec
pop
and
dec
sbb
into
cmp
pop
sbb
dec
fistl
ljmp
jmp
or
xlat
mov
lcall
lods
sub
call
dec
fcompl
idiv
nop
loop
mov
lret
or
mov
cli
xlat
mov
shlb
jmp
jl
imul
in
pop
mov
aad
fsubrs
mov
mov
test
aam
dec
mov
add
jne
push
fidivs
fdivl
ja
out
imul
ljmp
imul
sarb
shl
cmp
mov
in
aad
pop
jne
sbb
inc
inc
ja
sub
pop
pop
loope
jb
dec
jmp
stos
unpckhps
push
icebp
sarl
aad
push
mov
mov
add
jecxz
adc
adc
repz
xchg
sub
std
and
dec
fcoml
sbb
push
push
aad
imul
xchg
xchg
jl
or
loop
or
insb
lods
mov
nop
add
pop
iret
mov
lret
aaa
shr
ret
mov
int
pop
push
xor
sbb
push
jne
push
cmc
popf
dec
cld
xor
sbb
insb
inc
adc
push
cmp
sbb
or
push
cmp
or
loop
sbb
sub
loop
mov
lods
fcoml
or
adc
aam
sub
dec
xchg
sarl
and
dec
mov
in
fwait
mov
jmp
std
mov
inc
popa
xchg
mov
sbb
or
jmp
lret
adc
dec
push
mov
fcoml
shll
push
sahf
adc
or
mov
rcl
rcrb
jnp
jae
or
push
pop
mov
or
push
ret
ljmp
pop
push
lret
adc
ficoml
in
dec
adc
scas
mov
shll
fwait
fs
adc
push
shr
jmp
jp
push
imull
xchg
dec
insb
aam
mov
xchg
cmp
loop
loop
ficompl
sti
stos
pop
insb
dec
bound
xlat
out
sbb
xor
jnp
dec
mov
xor
fcomip
pop
cli
pop
cmc
imul
push
sub
mov
push
loop
mov
mov
inc
cmp
lret
and
out
imull
jb
xchg
adc
and
or
or
sti
std
sub
cmp
aad
adc
fcoml
out
push
negb
nop
repnz
out
mov
push
cwtl
test
mov
cs
push
and
push
adc
mov
dec
lret
sub
sbb
push
sub
pop
xor
jne
push
in
pop
adc
mov
xor
sub
pushf
sbb
push
pop
sbb
sbb
loop
xor
mov
dec
mov
in
mov
fwait
stos
imul
dec
into
cmp
loop
hlt
lods
xchg
xor
sub
cs
sti
mov
cmp
pop
mov
cld
iret
add
inc
jo
or
dec
dec
aam
xchg
loop
mov
sbb
or
xor
xchg
mov
into
ja
pop
mov
int
aad
int
mov
pushf
xchg
push
or
push
ja
push
in
dec
sub
dec
dec
sbb
lcall
jp
lods
test
push
push
ret
or
push
mov
int3
sbb
rclb
mov
xor
dec
mov
loop
push
loopne
or
out
shl
repz
sub
int
dec
and
mov
dec
push
bnd
xchg
out
je
xchg
mov
sub
das
stos
fidivs
sbb
lods
add
add
sbb
sub
ss
push
or
dec
cmp
pop
int
imul
pop
cmp
or
xchg
insb
aam
jbe
dec
and
jb
xor
mov
adc
mov
pop
in
xlat
rcll
or
or
mov
sbb
jo
adcb
sub
mov
mov
imul
not
icebp
xor
push
rcr
xchg
sbb
xchg
jae
add
mov
push
test
icebp
shrb
cmp
orb
fwait
notb
into
pop
mov
jbe
jl
xchg
shrl
push
inc
dec
and
xor
std
shrl
repnz
mov
sub
adc
je
jb
pop
xor
pop
std
mov
repz
or
loopne
sub
out
lea
sub
mov
push
lea
adc
notl
jecxz
cli
sbb
sbb
repz
xchg
lret
scas
xchg
sahf
or
test
aaa
fsubr
fidivl
ficoms
xor
ja
cmp
jl
or
dec
jmp
or
pop
fstps
push
imulb
into
pop
ss
mov
push
cmp
inc
sbb
lock
out
fistpl
adc
or
outsb
cmp
adc
outsb
or
int3
xchg
jno
dec
subl
mov
sti
cld
jp
or
movsb
int
sub
rorb
ja
jo
or
or
mov
in
sbb
push
mov
cmp
pop
mov
pop
rcrl
xchg
das
push
mov
mov
adc
js
dec
push
or
pusha
sti
gs
insl
push
pushf
pop
ret
xor
fstl
xchg
and
sbb
ror
iret
xchg
dec
into
xchg
aam
sub
sti
pop
adc
xchg
in
or
xor
jnp
sub
lret
hlt
loop
mov
add
std
push
mov
faddl
loop
pop
outsb
clc
xchg
adc
and
xchg
dec
pop
xor
aam
outsl
cmp
xchg
push
mov
outsb
and
dec
adc
adc
icebp
mov
pusha
lea
clc
repnz
pusha
xor
hlt
sti
fnstcw
lahf
mov
lea
pop
repz
adc
mov
adc
sbb
call
je
lock
bound
rcll
pop
or
xor
stos
and
fdivp
xor
inc
xchg
int3
mov
in
cmp
xor
aam
push
loop
adc
lret
xlat
pop
imul
jmp
cmc
cmc
not
sti
xchg
testl
test
pop
aam
or
xchg
mov
out
mov
aam
insb
push
repnz
pop
mov
sbb
cmp
xlat
jb
aad
sbb
iret
dec
xor
sbb
adc
movsb
loop
dec
fidivl
pop
pop
dec
mov
xor
cmc
mov
stc
cmp
aad
out
push
sub
in
imulb
popf
sahf
cmc
dec
js
or
adc
xlat
pop
or
nop
or
xchg
dec
push
or
in
cwtl
xchg
imul
or
lret
repnz
pop
xchg
loope
jns
ja
das
xlat
pop
inc
or
pop
cld
push
mov
sbb
out
or
bswap
pop
sbb
mov
ljmp
int3
repnz
ret
les
in
fnsave
insl
jno
jp
fsubrs
mov
sub
mov
bound
mov
jae
cli
fstps
mov
pushf
cmpsl
nop
cmp
je
mov
sub
dec
push
xchg
hlt
xor
mov
xor
in
in
push
pop
xor
mov
push
aas
dec
pusha
adc
mov
aad
imul
bound
notb
adc
sbb
lret
lods
jp
inc
nop
mov
jge
cmp
loopne
fstpl
hlt
dec
ja
push
aad
dec
sbb
mov
rcr
xchg
ja
mov
int
fisubrl
sahf
mov
clc
sub
cli
mov
mov
lea
call
icebp
imul
imulb
or
fnstsw
loop
push
push
mov
sub
sub
adc
pslld
popf
pop
rcl
pop
xor
scas
push
cs
notb
stos
jmp
out
stos
push
mov
xor
repnz
dec
jmp
or
iret
mov
adc
xchg
imul
or
lods
ficoml
icebp
xor
pop
dec
in
sbb
lods
adc
icebp
jo
mov
sub
xchg
push
insb
scas
sub
pushf
push
sub
mov
negb
fstps
stos
pop
jne
mov
xchg
sarb
push
lret
mov
jno
jbe
test
xor
imul
jmp
xchg
jbe
mov
std
fdivrs
fsincos
shl
jae
out
movsl
and
int
push
into
dec
adc
repz
cld
hlt
cmc
mov
mov
cwtl
mov
lods
sub
xchg
fstpt
dec
aad
sar
pushf
fidivrl
iret
mov
aaa
ss
scas
fisttps
fnsave
rsqrtps
repnz
adc
mov
cmp
mov
jns
mov
outsb
imulb
inc
xor
fwait
or
pushl
adc
cwtl
mov
pop
sub
push
adc
out
push
pop
call
adc
push
push
xor
adc
adc
loopne
cmp
aam
cli
cld
inc
aaa
les
stos
xchg
das
cmp
push
sbb
push
lret
repnz
sub
cmc
stos
adc
pushf
bound
dec
jl
mov
or
xchg
test
jmp
sbb
je
xchg
dec
mov
loop
ficompl
xor
mov
jo
or
es
jns
repnz
jmp
adc
inc
push
repnz
jl
xchg
mov
ss
xor
jb
dec
mov
in
push
sbb
clc
mov
shr
cmp
pop
lcall
cwtl
fimuls
test
push
fcoml
imulb
out
adc
xor
adc
in
pop
out
adc
sbb
mov
dec
lret
mov
inc
rcll
jo
clc
cld
xor
mov
dec
push
cmp
mov
mov
dec
jns
insl
dec
sahf
sti
jo
push
push
mov
lea
lret
adc
cs
jnp
pop
adc
push
xor
adc
adc
lods
dec
cltd
mov
lahf
sbb
pusha
int3
jp
pop
sub
xchg
stos
daa
mov
jmp
sarl
mov
xchg
sub
adc
and
aad
sbb
mov
lods
jp
or
loop
mov
dec
lret
or
dec
ljmp
testl
push
adc
jl
clc
cmpsb
rsm
sub
xor
repnz
xchg
jle
mov
mov
mov
scas
fst
in
or
icebp
repnz
push
push
cmc
std
adc
lret
sub
or
popf
cmp
xchg
dec
sbb
push
hlt
xchg
jbe
test
sbb
mov
nop
fwait
dec
mov
sbb
negl
js
fisttps
sub
mov
je
adc
sub
cmp
and
shrb
cmp
jle
lcall
xor
cli
jl
loop
add
mov
dec
int3
out
mov
iret
lods
xlat
fnstenv
fcomip
lea
pop
rorb
cmp
pop
push
iret
div
int3
jae
sbb
sbb
iret
or
stos
push
sbb
nop
lods
negb
jge
sbb
mov
adc
dec
pop
loop
inc
dec
mov
mov
out
mov
out
mov
dec
xor
push
dec
push
mov
jle
bound
lea
sub
nop
inc
je
into
push
jmp
sub
orb
sub
adc
outsb
xor
cmp
jo
xlat
push
mov
push
lods
or
pop
not
inc
mov
lret
sbb
push
cmc
bound
fldt
xor
int
out
pop
icebp
adc
jp
pop
repnz
idivb
stc
dec
xchg
xchg
in
mov
aaa
mov
xchg
push
sbb
push
xchg
mov
mov
sub
movsb
cmp
cli
push
mov
or
sbb
sbb
pop
sub
fidivs
adc
stos
and
aad
flds
adc
or
outsl
nop
jmp
sahf
xor
push
push
divb
pop
push
repnz
push
cwtl
pop
jp
or
and
lods
lcall
imul
nop
adc
orl
xor
xchg
dec
repnz
pop
xchg
dec
pushf
adc
push
psubusb
rorl
out
push
fsubrs
pusha
stos
insb
nop
mov
mov
adc
adc
ljmp
shlb
divb
imul
setnp
fwait
sbb
push
xor
or
cmp
jb
adc
jns
clc
pop
push
adc
push
cmc
push
cwtl
dec
iret
sbb
in
mov
or
sbbb
jo
je,pn
jecxz
int3
cmp
imul
cld
int3
sub
cmp
scas
jmp
xchg
inc
icebp
mov
adc
xor
das
cmp
or
test
sbb
push
stos
pop
dec
ljmp
aad
mov
sti
sub
adc
add
fwait
das
adc
popf
int
adc
mov
fcompl
push
add
cwtl
jnp
lcall
mov
sbb
adc
or
nop
fdivl
imul
push
int3
xlat
hlt
in
repnz
loop
scas
push
xor
cmp
jl
push
push
push
lock
das
scas
movsb
xor
stos
push
adc
cmp
data16
and
sub
mov
xchg
adc
mov
js
push
jg
nop
or
hlt
and
jmp
insb
xor
or
lea
adc
cmp
mov
push
xor
mov
out
sub
cmp
adc
push
call
jne
stos
out
idivl
jge
hlt
notl
cli
jle
dec
test
push
negl
xchg
out
mov
jo
and
ljmp
jne
pop
adc
into
mov
and
outsl
mov
xor
pop
jp
or
pop
dec
push
xchg
xchg
sti
in
out
push
in
inc
dec
lret
xor
sub
fcoml
adc
sub
pusha
push
pop
or
lret
nop
pop
mov
pop
fldl
pushf
dec
or
sub
aaa
or
mov
xlat
adc
jmp
in
ljmp
mov
mov
jbe
in
ficoml
cli
add
fists
int
xchg
fisttpll
xchg
jp
rcll
divb
push
jmp
inc
xchg
test
stc
lods
stos
mov
mov
xor
mov
pop
sahf
lcall
mov
out
in
imul
sbb
fwait
sub
dec
mov
int
cmp
mov
sti
test
sub
ficoml
inc
jmp
orb
iret
or
movsb
pop
clc
cmp
clc
fldcw
pop
jg
and
cli
jecxz
pop
sbb
lcall
push
jmp
fs
xor
and
cwtl
sti
jmp
out
jmp
mov
xor
pop
fistpl
cld
mov
fs
sub
mov
notl
sbbb
pushf
push
in
mov
and
jne
sub
push
lret
sub
xor
pusha
lcall
sub
pop
mov
sbb
aad
sbb
das
fisttpll
sub
in
ret
pop
fstpt
cmp
pop
push
mov
jb
inc
lcall
mov
dec
adc
ss
mov
sbb
mov
or
jo
gs
dec
cmp
sbb
lret
es
lcall
sbb
adc
lcall
cmpsl
lcall
iret
cmp
pushf
lcall
or
push
fildll
adc
push
ljmp
stos
jne
dec
fldt
mov
shll
call
pop
mov
sbb
cmp
sub
jnp
jmp
roll
sti
sub
lcall
fisubrs
imul
jb
xorb
push
jbe
movsl
mov
sub
int3
sub
fdivrs
pop
in
dec
and
jecxz
mov
adc
mov
mov
sbbb
ret
lcall
and
cwtl
shrb
jmp
lods
jae
sbb
fwait
and
xchg
ficoms
int
jle
mov
push
mov
mov
dec
cs
mov
cmp
jmp
or
jbe
out
adc
push
push
sub
and
sbb
jb
sub
mov
out
sub
lcall
and
das
sub
aam
mov
test
add
sub
push
mov
sub
cmp
fisttpll
jnp
mov
pop
sub
jbe
or
pop
pop
mov
xchg
das
mov
sub
fstpt
cmp
sub
out
lcall
lcall
dec
int
bound
fnstsw
inc
fwait
dec
and
je
lcall
jmp
sbb
repnz
sub
aaa
fxch
sub
bound
jmp
insl
or
sub
or
jne
lcall
scas
imul
push
sbb
fisubrl
into
pop
mov
insb
push
mov
stos
pop
or
pushf
mov
mov
adc
adc
inc
lods
lcall
imul
xor
sub
xchg
pop
mov
inc
lcall
sub
cmp
and
adc
in
fimull
cmp
push
das
repz
dec
xor
stos
push
je
je
icebp
in
or
sbb
dec
mov
into
sub
or
push
cld
cmp
dec
out
lret
ds
jo
push
ljmp
xchg
subl
mov
or
insl
lret
xor
fstpl
cwtl
lcall
dec
je
sbb
lods
or
stos
sahf
dec
in
jb
fcomps
insb
bound
sbb
pop
arpl
cmc
dec
ljmp
fimuls
mov
imul
cmc
sub
adc
sub
lods
adc
pop
insb
sub
lea
sub
xchg
ja
sbb
jnp
xor
mov
fdivl
or
adc
dec
mov
ficomps
sbb
in
jbe
or
add
sbb
lret
in
sub
stos
lds
sarb
es
stos
insb
mov
cs
adc
sahf
ljmp
pop
outsl
cmc
adc
pusha
icebp
mov
je
fisubrs
mov
sub
push
sti
hlt
outsl
xorb
cmpsb
push
sbb
adc
push
pop
dec
cmp
test
imul
stos
repz
sbb
lcall
lods
mov
out
mov
fs
das
jns
pop
xchg
cwtl
out
adc
mov
cmp
fwait
cld
fcomps
mov
pop
sbb
fistps
sti
in
jg
mov
add
iret
das
pusha
dec
cld
cwtl
sbb
repz
ljmp
pushf
pop
aaa
jmp
pop
cmp
dec
fdivrl
fstp
lods
sbb
popf
and
stc
jae
in
xchg
stos
jno
push
nop
adc
imul
jbe
pop
int3
pop
dec
clc
sub
lret
lods
push
dec
es
fidivrl
xchg
js
and
in
jp
or
outsb
pop
xor
nop
out
sub
bnd
shrb
mov
in
pop
push
mov
addr16
int
cmp
adc
sub
pop
adc
push
or
mov
pop
cmp
dec
pusha
sub
lcall
cmp
fmull
or
ficoms
ror
and
mov
cld
xor
ljmp
mov
fisubrs
sub
bound
push
or
je
stos
or
jg
icebp
push
dec
mov
cmpsl
pop
gs
adc
cmp
pusha
sbb
rcrl
sub
xchg
and
and
das
adc
or
push
push
ljmp
and
lock
push
mov
pop
dec
aaa
sbb
sub
in
push
cwtl
aaa
in
and
lret
dec
scas
imul
jb
jecxz
and
pusha
fld
loopne
pop
push
mov
fucomi
push
and
or
sub
mov
rcr
inc
pop
in
les
add
dec
cld
and
lcall
shlb
and
sub
mov
fbld
add
add
dec
icebp
jecxz
in
loope
jo
bound
pop
mov
adc
adc
dec
mov
xor
jg
pop
jno
and
mov
cmp
dec
cmp
dec
xchg
sarb
fisubrs
cmp
aaa
xlat
fistl
mov
shl
mov
int
lahf
pop
cltd
xlat
mov
insb
in
mov
sbb
dec
ljmp
push
jmp
inc
hlt
test
dec
dec
mov
movsl
ja
xchg
les
jno
add
or
cmpsb
xchg
ss
xchg
pop
adc
or
jl
xchg
jecxz
inc
cmovg
ljmp
aad
aas
fmulp
das
jge
sahf
pop
push
xlat
dec
lcall
mov
xchg
sbb
adc
in
xchg
jnp
adc
mov
pop
inc
test
sub
pop
adc
or
int3
ffreep
pop
dec
pop
lret
jmp
lods
fcmovne
pop
iret
in
pop
fsubs
jmp
or
dec
jecxz
in
aad
push
aam
push
jmp
or
dec
shl
push
in
rorl
push
shlb
cmp
mov
dec
push
push
into
bound
dec
int
mov
dec
push
or
bound
lret
or
in
int3
pop
mov
fsubr
push
or
dec
jecxz
in
push
push
xchg
shll
jmp
or
dec
shl
paddsb
int
or
or
push
sbb
in
push
push
adc
adc
dec
adc
shr
xchg
fcmovbe
dec
adc
pop
out
dec
jecxz
in
push
push
cs
pop
or
dec
jle
mov
sahf
push
scas
mov
or
dec
jmp
paddsb
push
das
aas
bound
pop
sbb
xchg
mov
add
mov
mov
xchg
mov
arpl
pop
loope
icebp
or
dec
adc
and
xor
inc
push
bound
jno
rorb
adcb
imul
mov
mov
lods
jecxz
sbbb
in
imul
mov
pop
ljmp
push
and
out
pop
loopne
push
adc
sbb
push
pusha
xor
cs
sbb
inc
dec
imul
push
dec
imul
jecxz
stc
in
lods
push
fnstsw
push
incl
or
popf
add
mov
call
inc
push
incl
xchg
pop
ret
push
ret
rcl
int
lcall
cld
dec
jecxz
push
sub
pop
std
mov
mov
mov
fidivrs
or
or
or
or
or
or
cmp
or
pop
jecxz
push
aas
sbb
icebp
pop
pop
jnp
cld
iret
push
mov
pop
mov
cld
pop
jecxz
push
sbb
icebp
push
pop
push
fwait
cmp
mov
rolb
insl
mov
dec
shrl
adc
and
inc
pusha
pop
outsb
iret
ds
inc
out
sahf
enter
pop
cs
pop
das
mov
in
out
pop
xchg
jg
cmpsb
xchg
pop
or
cs
sub
adc
out
cmp
push
sub
js
fs
cmp
int
or
push
daa
push
mov
mov
jecxz
mov
data16
mov
add
mov
int
ljmp
dec
fcmovne
or
dec
pop
mov
jecxz
lret
cwtl
pop
iret
mov
bound
adc
stos
test
ja
add
cmp
add
iret
add
cli
xlat
in
lret
mov
aad
cltd
or
dec
mov
adc
jns
shrb
shr
pop
or
dec
dec
jecxz
in
cmp
or
sbb
dec
or
sbb
jmp
or
dec
jecxz
in
aad
mov
dec
or
dec
or
mov
bound
pop
outsl
ljmp
dec
dec
into
jmp
or
dec
sub
or
sbb
dec
or
pop
loop
jmp
or
dec
xchg
jecxz
in
push
push
adc
jmp
or
dec
mov
xchg
in
or
xchg
sbb
addr16
dec
push
jecxz
in
inc
push
adc
bound
daa
or
dec
pop
jecxz
in
pop
push
dec
mull
jmp
or
dec
xlat
jecxz
in
int3
cwtl
aas
push
mov
bound
dec
xchg
jecxz
in
rorb
jbe
bound
dec
or
dec
or
push
ss
bound
fistpl
xchg
dec
push
adcb
stos
out
fcmovnbe
jecxz
out
push
fcmovnbe
or
dec
in
mov
xchg
movsl
bound
xchg
or
dec
test
paddsb
push
bound
or
dec
inc
push
xlat
pop
push
bound
dec
pavgw
in
mov
in
aad
pop
enter
push
push
sub
fsts
out
flds
jmp
in
cltd
xlat
mov
sub
mov
clc
mov
shrl
dec
int
test
aam
out
mov
push
iret
inc
inc
ss
push
in
fsub
mov
adc
xchg
je
xchg
gs
xchg
sub
aam
adc
out
cltd
mov
push
or
pop
sub
scas
gs
js
lcall
in
cld
into
mov
gs
inc
in
adc
pop
mov
push
pop
adc
pop
xor
inc
aad
fs
test
push
xor
and
lods
sti
repnz
xlat
cltd
jle
adc
mov
adc
pop
aaa
das
push
icebp
push
int3
jb
rorl
imul
push
or
or
push
out
in
scas
cmp
fs
jb
mov
dec
jg
push
push
sub
lret
pop
mov
into
jle
and
adc
push
aaa
jns
xchg
adc
inc
rcl
jnp
mov
mov
jne
sbb
pop
out
les
pop
cmp
inc
or
ret
ja
adc
movlps
iret
int3
lcall
mov
dec
out
mov
hlt
testl
push
mov
stc
fsts
fmull
int3
lods
repnz
cmc
push
dec
dec
or
xlat
in
fsts
dec
adc
lret
lods
sub
sbb
lea
xchg
das
push
out
lods
adc
adc
sbb
mov
fwait
mov
je
hlt
sub
mov
xlat
sbb
icebp
push
out
das
cmovb
push
pop
into
ds
movsb
in
in
xor
dec
fisubrs
int
adc
fsincos
fimuls
pusha
push
xorb
adc
jmp
data16
aam
or
xchg
push
push
in
imul
and
or
int3
aam
mov
lret
mov
mov
fwait
cld
sub
das
les
rcrb
icebp
or
xchg
push
adc
arpl
scas
pop
fs
sbb
cld
inc
lods
rcl
in
push
mov
sub
int
lods
inc
outsl
fs
stos
push
jge
aad
movsl
inc
int3
lock
push
jne
lret
add
xchg
sbb
in
mov
aas
xlat
shll
jnp
xchg
jmp
inc
push
sub
or
inc
stos
test
das
push
lds
fisubrs
cmc
ljmp
cmp
push
xchg
push
xlat
out
pop
lret
repz
lret
repnz
dec
sbb
fcompl
and
scas
pop
push
xor
cmp
data16
stos
cmp
cltd
and
int
or
enter
pop
scas
xlat
es
jmp
cmp
add
jmp
int3
lret
in
jns
sub
test
pop
push
cmc
mov
dec
fisttps
pusha
push
pxor
dec
jns
pop
pop
repz
scas
jecxz
adc
gs
dec
mov
into
out
jne
es
cmp
shl
repnz
cmc
adc
testb
int
nop
cltd
add
sbb
je
push
push
rclb
pusha
add
repnz
out
cmp
test
adc
aas
fimull
mov
push
inc
iret
push
dec
out
dec
pop
imulb
ljmp
movaps
fistps
push
cmp
and
vmovupd
pop
xor
or
pop
in
sbb
push
sub
push
cwtl
pop
mov
or
out
js
mov
adc
negb
mov
data16
in
inc
pop
or
push
lahf
cmp
idivl
dec
xor
not
sbb
cmc
movsl
iret
cmp
mov
cli
movsl
call
adc
mov
xor
pop
xchg
fdiv
add
adc
dec
push
jg
bound
dec
shl
loopne
lock
pop
xchg
jecxz
in
push
push
aad
aam
push
or
push
cmpsb
xchg
push
xchg
adc
notl
dec
fadd
test
xchg
pop
dec
pop
xchg
fnstsw
sbb
pop
pop
xchg
or
lret
or
xchg
scas
add
cmp
mov
lret
testl
popa
adc
mov
pop
xor
add
not
shlb
push
push
push
sahf
dec
sub
mov
stc
xor
outsb
ljmp
sti
push
loopne
adc
shrl
and
test
jmp
lret
xchg
adc
test
or
xchg
cld
into
fcmovnbe
xchg
ljmp
scas
into
leave
dec
dec
scas
int3
mov
add
or
dec
dec
fisttpl
jmp
shrb
into
lret
push
int
dec
pop
lret
jae
sub
push
fcmovnbe
xchg
sub
ss
push
iret
push
push
push
or
int3
sbb
fcmovnbe
adc
aad
in
push
lret
push
cld
rcl
add
jb
es
push
dec
push
aad
in
iret
and
push
lret
ror
adcl
test
into
xchg
movsl
jne
in
xchg
jns
add
ljmp
mov
xchg
int3
pop
cwtl
lret
jp
pop
push
push
push
popf
pop
aad
dec
push
out
xchg
lea
into
rorb
sahf
into
dec
dec
cmc
out
push
into
push
mov
xchg
pop
dec
in
dec
jge
inc
into
or
mov
adc
xlat
xchg
lret
jae
pop
int
dec
inc
out
add
dec
push
cld
into
cld
ror
fcoms
into
pop
push
test
dec
lret
out
jne
ror
out
shrb
push
stos
mov
jno
mov
pusha
adc
dec
dec
jbe
adc
xchg
pop
int3
inc
je
repnz
dec
int
xor
pop
scas
mov
rcl
outsb
iret
push
pop
ds
stc
call
sub
fimull
dec
ljmp
mov
sbb
jbe
in
sbb
imul
push
stos
and
dec
fimull
leave
fists
nop
pop
cltd
adcb
mov
arpl
roll
sbb
nop
arpl
fcoml
push
rcr
cltd
pusha
movsb
or
fcoml
into
xor
rcr
jl
push
dec
cs
das
rorb
push
shl
lret
stc
or
xchg
inc
lea
xchg
fmull
lock
xchg
xor
std
adc
xchg
and
orl
or
push
rol
jecxz
cld
rcrl
push
dec
adc
test
or
icebp
mov
jmp
lods
push
dec
dec
mov
or
mov
lret
fldcw
pop
pop
xchg
pop
pop
fistl
pop
in
adc
push
push
xchg
xchg
pop
adc
dec
or
jmp
or
dec
pop
mov
pop
adc
or
dec
adc
pop
xchg
pop
rdpmc
or
dec
pop
jg
push
hlt
notl
sbb
dec
and
js
mov
dec
in
loopne
test
roll
and
xchg
xchg
sbb
int3
insl
call
loopne
rcrb
idivb
dec
orl
insl
lahf
sarl
mov
fldt
xor
sub
shll
adc
pop
jbe
push
push
jno
dec
cmp
jns
xchg
xor
ljmp
add
xor
xlat
pop
lret
mov
add
fs
mov
lret
xchg
aaa
xlat
cmc
test
shrl
mov
adc
dec
sbb
pusha
nop
and
push
xchg
outsb
shr
lods
lret
inc
jmp
jne
cmp
in
xor
aaa
mov
pusha
push
mov
or
loop
movsl
in
pop
and
or
push
out
repz
lods
es
sub
or
rcrl
jno
dec
mov
push
sahf
shl
and
inc
pushf
aaa
adc
push
pusha
or
pusha
movsl
or
push
pusha
not
lret
xor
dec
into
lds
pop
adc
les
sbb
and
insb
cwtl
dec
push
xor
adc
test
lods
xchg
rcl
sti
and
bound
push
adc
lret
repz
movsl
test
sub
notb
hlt
push
or
test
aam
pop
sti
aaa
mov
mov
je
xchg
mov
test
pop
insl
das
xor
notl
out
into
bnd
aad
push
or
aaa
test
repz
stos
push
mov
mov
fstl
lret
hlt
or
cmpsb
fiadds
xor
dec
push
xchg
in
push
dec
sbb
inc
hlt
xchg
test
cmp
xor
fsts
adc
adc
xchg
add
ror
outsl
unpcklps
jbe
mov
adc
mov
sbb
fldt
sbb
or
ss
aad
xor
push
shlb
push
aaa
je
ss
push
cmpsl
divb
shlb
adc
outsl
inc
xor
or
fmull
dec
shr
stc
adc
xchg
nop
push
cmpsl
dec
insl
xlat
scas
cmpsb
or
jno
mov
adc
mov
fisttps
xor
push
out
jmp
lcall
jb
pop
xor
jae
cltd
dec
push
adc
outsb
rep
inc
jb
clc
int3
cmp
call
jns
insb
sbb
pop
jae
out
xor
test
call
jnp
pop
push
inc
es
mov
fldcw
cmpsb
adc
mov
je
or
mov
xor
xlat
sub
fsts
or
xor
iret
sbb
xchg
jb
cmc
lds
or
into
inc
dec
cmpsb
push
rorl
repnz
fdivp
xor
mov
ljmp
js
dec
jo
push
push
jns
xchg
test
aam
repnz
xchg
je
dec
fs
dec
xchg
inc
xlat
int3
insl
daa
or
xor
outsb
sbb
dec
stos
pop
into
out
or
icebp
fs
out
adc
sbb
dec
das
lods
xchg
mov
push
mov
stos
push
stc
enter
inc
mov
mov
jo
adc
icebp
mov
mov
stos
pop
testb
mov
js
jne
insl
int3
cld
icebp
cmc
jno
call
jle
dec
shl
jno
push
adc
jo
jle
shll
jbe
jae
push
or
fcompl
push
or
fisubl
fisttpl
jne
and
cmp
sub
mov
sahf
push
out
pop
cs
nop
into
sbb
rcr
or
outsl
xor
and
push
fcmovnu
fcmovne
in
scas
xchg
mov
enter
int3
clc
dec
and
jp
jo
lcall
pusha
mov
int3
mov
icebp
popa
int3
adc
mov
or
mov
aas
inc
mov
xor
jb
in
jge
dec
icebp
push
xlat
sub
push
push
movsb
xchg
add
ud2
iret
loopne
mov
and
iret
xchg
in
dec
dec
out
icebp
or
add
xchg
psrad
push
inc
lods
dec
cs
daa
pop
aad
and
mov
sub
fisttps
and
mov
adc
loopne
icebp
inc
and
or
inc
pop
dec
push
push
pusha
lcall
iret
push
pop
pop
mov
add
pushf
mov
rcr
psllw
add
iret
test
fidivrs
jno
std
jno
xor
leave
call
iret
adc
xchg
cmc
adc
dec
jle
and
out
and
ss
pop
cmp
shlb
push
dec
push
rcrl
push
dec
push
push
jle
pop
hlt
arpl
push
mov
sub
inc
rcll
mov
mov
shlb
dec
out
sbbl
icebp
lret
mov
push
iret
xchg
and
add
push
push
das
push
out
jl
push
scas
cwtl
ljmp
cs
dec
and
iret
sub
jmp
adc
lret
icebp
and
adc
fisubrl
scas
xchg
push
in
out
jmp
sahf
pop
sahf
into
addr16
push
jmp
xchg
mov
and
test
shr
pop
mov
adc
mov
or
pop
ja
stc
add
xor
mov
ljmp
leave
pushf
dec
sub
push
push
dec
sahf
imul
and
fmull
push
fdivl
push
aas
jmp
icebp
adc
dec
cld
inc
out
sbb
dec
pop
add
jb
mov
push
xor
mov
mov
iret
xor
pusha
dec
rol
sbb
sbb
shlb
sbb
icebp
in
jbe
out
push
aad
pop
out
aad
add
int3
cmp
push
dec
pop
ja
dec
repz
fwait
mov
push
iret
jnp
or
ret
or
cmp
pop
leave
xchg
stc
push
adc
xchg
mov
orb
scas
mov
pop
rolb
jb
add
jae
sbb
add
push
aad
and
cld
mov
es
sahf
fisubrs
andl
xchg
sbb
push
std
pop
mov
or
rclb
outsb
dec
divl
sti
or
fstps
neg
out
popa
adc
and
xor
sbb
push
jmp
loope
and
pop
aas
bound
push
lss
call
mov
lcall
dec
mov
jbe
jbe
inc
or
shll
pop
loop
dec
adc
mov
sub
popa
dec
adc
adc
push
jmp
enter
push
sbb
jnp
test
iret
out
jno
push
out
push
xor
das
add
iret
cld
int3
push
pop
arpl
out
fcoml
pop
and
int3
dec
adc
inc
iret
adc
shlb
arpl
sub
int3
push
out
das
inc
int
push
adc
int3
jbe
fstps
and
dec
shl
push
adc
dec
push
pop
dec
rcll
loop
inc
dec
repz
mov
aad
out
int3
adc
pop
jno
jmp
imul
lret
add
sbb
sub
cmpsb
nop
lret
xchg
ret
or
das
mov
dec
jne
xabort
mov
adc
sahf
cmpsb
imul
es
jb
jecxz
sub
int3
sarl
xor
jecxz
fldz
and
jmp
repz
cmpb
dec
hlt
iret
pop
and
add
sub
adc
cltd
or
fcmovbe
fdivrs
aaa
xor
ljmp
cmp
push
sar
push
jbe
out
mov
inc
xor
das
cmp
ss
sbb
pop
or
test
dec
gs
mov
mov
leave
add
inc
jmp
fidivl
xor
lret
mov
pop
mov
or
adc
notl
jnp
aad
aas
in
or
aad
push
pop
push
jecxz
in
rorb
dec
iret
jmp
or
dec
or
push
or
bound
rcll
cli
loop
jmp
or
dec
cwtl
jecxz
in
sbb
xchg
xlat
bound
dec
int
push
in
aad
push
xchg
bound
jmp
or
dec
push
jecxz
in
nop
push
dec
iret
inc
push
stc
aad
sub
in
or
dec
sbb
jmp
or
dec
cmp
mov
dec
jecxz
jbe
mov
jp
sub
dec
lret
xor
push
fucomi
xor
loop
fmull
fdivrp
adc
or
in
dec
aas
arpl
pop
mov
mov
mov
icebp
xchg
sub
rorb
push
int3
cld
add
adc
jecxz
pop
pop
mov
and
shll
rcll
inc
icebp
inc
gs
mov
inc
mov
dec
cmp
dec
call
shl
popa
sbb
or
xor
dec
out
in
int
ret
cltd
or
mov
std
push
stos
loopne
add
pop
int3
ret
shlb
mov
out
and
push
xor
dec
imul
pop
cld
jg
sbb
in
push
sbb
ja
inc
mov
lods
ljmp
fnsave
jp
xchg
fwait
pop
or
jecxz
push
mov
ret
rcrl
jecxz
repz
roll
stc
cli
mov
pop
push
fdiv
hlt
dec
popa
add
lret
add
fists
push
fsubrs
int3
pusha
xchg
lret
pop
push
rorl
push
std
rolb
xor
bound
push
sbb
pop
or
dec
imul
in
jnp
into
mov
jmp
or
dec
popa
push
pop
or
jno
pop
push
cltd
ror
test
push
and
and
fisubrl
leave
shrl
xchg
inc
inc
and
xor
in
into
pop
push
rorb
dec
sub
pop
cmp
test
cli
and
mov
or
adc
sahf
fdiv
out
inc
pop
loop
lea
sbb
hlt
ja
data16
out
fprem
or
mov
jns
aad
stos
in
jl
stos
cwtl
cld
pop
sbb
mov
dec
pop
jecxz
in
xchg
push
stos
push
bound
dec
adc
push
sbb
stos
jmp
or
dec
xchg
jecxz
in
push
push
mov
bound
push
or
dec
shl
mov
push
push
pop
shll
jmp
or
dec
shl
sub
dec
push
cmp
in
jmp
or
dec
dec
jecxz
in
push
mov
mov
jle
push
jno
mov
mov
lret
mov
dec
int
outsb
add
subl
repnz
push
pop
push
fbld
mov
jmp
dec
sar
xor
jge,pt
jbe
cmp
mov
push
in
ja
or
dec
js
fldlg2
cmp
cltd
ljmp
pop
or
dec
outsl
jecxz
in
mov
mov
bound
dec
stc
mov
pop
in
in
out
push
aas
loope
xor
xor
dec
mul
aaa
in
cmp
mov
into
mov
scas
or
dec
jno
jae
ret
push
gs
mov
stc
cld
push
adc
lods
dec
jecxz
in
lock
repnz
jmp
or
dec
dec
push
fcmovb
fldt
in
sub
insl
out
jb
ficoml
sar
ret
nop
int3
fsubs
iret
adc
fimull
out
in
mov
xlat
les
cld
lret
adc
in
hlt
loop
ljmp
repnz
int3
and
pop
xchg
shrd
or
mov
pop
jmp
fs
mov
fisubl
or
pop
mov
push
pop
push
pop
sbb
jb
js
pop
pushf
lcall
mov
fcmovnu
enter
decl
movsl
clc
iret
push
xchg
test
xchg
xchg
hlt
dec
mov
jg
pop
lret
icebp
or
xchg
out
push
insl
jecxz
in
inc
push
xor
or
dec
mov
jmp
cltd
push
sbb
mov
adc
fs
dec
dec
jecxz
in
sarl
lods
fisttpll
xchg
into
push
xchg
pop
inc
or
sar
push
loopne
not
ljmp
dec
jns
jg
xchg
mov
iret
push
mov
jmp
shlb
push
sub
int3
xchg
mov
rorb
lds
jnp
or
mov
testb
scas
lret
mov
sarl
mov
xlat
lahf
test
mov
pop
mov
loope
inc
and
stos
sbb
imul
loop
ret
or
daa
xor
leave
pop
mov
lret
xchg
push
lret
ficoms
ficompl
dec
rcr
xchg
out
fldenv
mov
in
xor
xchg
stc
pop
lret
loop
push
dec
lret
cmp
or
push
jns
mov
or
call
push
and
xchg
inc
jecxz
xor
aam
mov
aam
mov
loop
cmp
lret
sahf
dec
out
sbb
pop
jge
push
cmc
test
dec
xlat
sub
cmpb
xor
in
lret
xchg
cmp
icebp
outsl
lret
lahf
bound
inc
je
and
cmp
hlt
push
sbb
addw
ljmp
mov
cmpsb
xchg
or
fcmove
mov
add
in
pop
fldcw
lret
mov
add
mov
pop
clc
dec
cmp
xlat
mov
sbb
into
xor
pusha
nop
les
sbb
std
popf
xchg
out
fidivl
daa
adc
aaa
dec
fdecstp
test
adc
inc
xchg
test
fnstcw
push
mov
and
xchg
push
repz
jge
push
cmpsb
or
jae
fnstenv
pop
push
movsb
stos
in
enter
mov
jge
loopne
jno
aam
pop
out
mov
call
inc
mov
mov
and
mov
push
dec
push
and
pop
push
cmp
shrl
in
xchg
adc
pop
lods
add
cmovno
leave
jecxz
add
jno
sbb
xchg
fsubl
dec
repnz
inc
push
lret
jge
push
dec
lret
in
or
xor
pop
ss
out
cmp
xchg
cld
fldln2
lret
shrl
xor
mov
aas
ja
repnz
and
cmc
fildl
push
pop
lret
mov
sbb
mov
adcb
or
adc
mov
mov
stos
mov
push
outsl
aas
jecxz
lret
add
dec
scas
jle
lock
adc
ret
mov
push
or
cmpsl
xor
cltd
mov
mov
xor
out
mov
stos
adc
stos
fdivs
rolb
inc
dec
xchg
or
sbb
or
xor
arpl
or
sahf
or
sbb
lcall
cmc
ret
mov
or
jecxz
lret
fists
lock
shl
cmp
sbb
fadds
cltd
push
jnp
ljmp
jp
in
jmp
rcl
popa
std
ret
adc
fdivs
or
das
xor
xchg
sub
adc
mov
dec
out
insb
mov
pop
lret
dec
and
int
or
push
mov
repnz
bnd
lret
add
jl
lret
xchg
xchg
sbb
call
in
aas
mov
or
mov
pop
pop
xchg
sti
out
daa
xadd
pop
lret
iret
sbb
sub
pop
call
lcall
iret
ret
push
mov
jg
add
push
imul
icebp
icebp
das
mov
pop
shl
outsb
ficomps
stos
or
mov
test
shll
outsl
sbb
inc
mov
outsl
push
cltd
mov
test
into
dec
or
lods
jle
sbb
repnz
hlt
cvttps2pi
in
dec
dec
cmp
push
in
ljmp
pop
push
or
cld
in
and
mov
stos
mov
push
mov
jle
dec
clc
cli
jmp
pop
ret
adc
das
int
pop
scas
mov
dec
sahf
in
mov
lea
ds
lods
repnz
adc
cmpsb
or
mov
icebp
aad
ljmp
add
push
ret
add
and
or
aas
sbb
ret
mov
jns
repz
hlt
pop
mov
mov
lcall
shlb
sbb
rorl
mov
loope
and
cmp
dec
push
mov
jb
or
out
jle
sbb
lea
rcr
jl
lret
mov
iret
in
loop
fcmovnu
std
ljmp
push
ljmp
fsubs
add
cmc
addb
pop
push
or
xchg
outsl
push
mov
rcrl
lret
add
js
pushf
lea
call
jmp
mov
mul
stos
jg
add
xor
scas
pusha
jae
das
loope
pusha
xor
sub
push
inc
arpl
inc
sbb
test
lock
cwtl
lods
sub
or
test
aam
in
or
jb
ficoms
jnp
and
xor
push
xchg
add
pop
inc
jbe
es
ja
std
cmp
fmull
ret
add
gs
inc
nop
mov
inc
iret
pop
push
inc
dec
lret
int
or
add
outsl
cld
stc
pop
data16
add
ret
nop
pushf
add
dec
pop
push
push
add
sub
cltd
or
mov
mov
and
outsl
aam
add
jne
mov
pop
or
mov
sub
das
ja
into
sbb
fdiv
mov
subb
addb
cmp
je
jne
push
or
in
out
imul
mov
cld
lds
cmpl
jmp
add
xor
test
sub
sti
clc
pusha
mov
dec
bsr
mov
cmp
pusha
sub
call
rcll
out
jge
cmp
mov
xor
jecxz
ja
in
xchg
mov
out
aas
repz
mov
mov
push
dec
inc
cltd
in
mov
sti
xor
mov
xchg
nop
clc
xor
shll
jb,pt
les
scas
cmpsl
dec
shl
mov
xor
cmp
mov
or
lock
mov
add
inc
or
sbb
add
add
or
lods
into
mov
mov
mov
insl
mov
push
adc
or
ret
inc
jo
xor
mov
pop
xchg
fnstenv
sti
jb
xchg
incl
adc
insb
push
mov
xor
cmpsb
scas
mov
lods
lds
outsl
ljmp
das
out
fs
sbb
hlt
jbe
clc
cmp
test
pusha
push
movb
lea
je
shrd
ror
add
bt
sbb
rcl
mov
jmp
jle
add
shlb
push
cwtl
mov
dec
pop
mov
sbb
test
sub
gs
pop
js
jge
rclb
and
add
shlb
and
fistpl
mov
inc
dec
or
outsb
adc
xor
fmul
out
popa
push
mov
mov
jb
ds
jg
jb
xor
int3
sbb
leave
ret
negb
leave
inc
pop
push
ror
mov
ss
fs
stos
stc
xor
loopne
pop
scas
xchg
dec
xchg
mov
insl
push
clc
imul
sarb
ja
test
in
jecxz
or
mov
in
xchg
movsl
data16
mov
inc
out
sbb
sub
xor
int
sbbb
out
xor
clc
mov
imul
jmp
jle
leave
setbe
neg
cmc
not
rol
call
sub
jae
loope
insl
pop
or
and
and
std
jo
insl
gs
dec
sbb
xchg
popf
out
inc
addr16
mov
jae
jae
xchg
mov
stos
push
mov
mov
orl
pusha
outsl
call
adc
dec
inc
int
jmp
frstor
adc
cmpsl
push
mov
mov
ljmp
sbb
cmp
or
imul
lods
and
push
fcoms
push
pop
mov
xchg
push
push
pop
mov
push
and
sbb
jle
insl
xchg
mov
cmp
or
and
dec
lret
mov
xchg
and
mov
mov
mov
xchg
aam
mov
cmpl
pop
nop
xchg
xchg
inc
push
xchg
add
or
add
inc
add
add
inc
dec
pop
int3
sbb
loopne
orb
imulb
or
add
cmp
stc
pusha
bt
add
pushl
pushl
movb
lea
jmp
movb
jmp
dec
push
sbb
dec
scas
rcll
sbb
sbb
pop
iret
add
cltd
rcl
ficoml
fnstsw
and
push
xlat
lcall
js
mov
outsb
sar
sub
ret
fwait
es
lods
cmp
and
add
inc
insl
mov
shr
mov
jnp
int
rol
or
fstl
outsb
das
jg
and
test
pop
push
add
add
or
push
nop
pop
imul
mov
and
sahf
push
xor
mov
pop
sahf
mov
pop
jnp
add
cmp
call
pop
push
mov
std
xor
sub
inc
repnz
or
mov
test
fcomps
in
dec
shll
xchg
rcrb
rcll
pop
xchg
push
pop
adc
frstor
insb
js
pop
inc
dec
cmpsb
cmpsb
mov
push
jge
bound
mov
jae
popa
sub
jne
cmp
scas
ljmp
out
cmp
pop
mov
push
das
and
add
cmpsl
cmp
inc
rcl
inc
inc
sti
mov
outsb
adc
pop
inc
insb
pop
push
cmp
inc
adc
push
jb
stc
icebp
repz
test
adc
in
bound
cld
mov
lods
mov
int
lods
flds
inc
mov
icebp
xor
nop
xor
rcr
dec
or
pop
sbb
sbb
rcrl
dec
adc
loop
nop
push
mov
aad
lahf
sbb
jl
mov
mov
mov
push
gs
sahf
cmpsl
sahf
into
inc
xchg
fcoml
pop
addb
shl
pop
sbb
xchg
jl
push
outsl
fcmovb
pop
fs
ja
jle
in
add
mov
inc
cmp
iret
inc
dec
mov
movsl
cmp
sbb
adc
push
push
cltd
nop
cwtl
push
pop
lods
cltd
sub
loop
dec
jns
add
mov
adc
sbb
lods
scas
fwait
rolb
lea
add
es
enter
dec
jns
cmpl
pop
dec
jnp
xchg
add
add
jb
js
jnp
out
xchg
mov
jb
dec
dec
test
inc
add
xchg
or
or
test
idivl
int3
sbb
or
cmp
ds
outsb
in
add
fmuls
fistl
leave
sbb
leave
push
push
sbb
in
repz
sub
mov
lahf
xchg
fdivrs
sbb
jnp
jp
aaa
shlb
cmp
nop
pop
xchg
mov
inc
xchg
xchg
dec
movsl
mov
pmulhuw
jle
test
mov
jp
push
push
cwtl
add
dec
push
jb
adc
cld
xchg
fldt
jmp
inc
inc
iret
or
add
push
dec
or
ficoml
loop
out
jl
mov
push
fcoml
pop
or
fstl
popf
push
and
add
rclb
mov
roll
mov
jg
or
fsubrs
outsb
sbb
pop
push
jg
negl
into
mov
mov
sub
aad
fcmovbe
js
ja
dec
push
mov
aaa
push
xchg
mov
sbb
inc
pop
int3
pop
adc
rcll
pop
push
pop
adc
int3
sbb
pop
push
ljmp
push
add
jmp
jl
jecxz
xor
inc
adc
cld
stc
inc
dec
adcb
adc
push
sbb
orl
pop
bound
inc
xchg
sbb
mov
jl
pop
cld
dec
xor
mov
cmpsb
and
jno
pop
data16
mov
cld
push
and
inc
out
in
dec
test
ror
sbb
push
cwtl
setg
cmpsb
incb
cld
das
add
hlt
mov
in
fistpl
aas
cltd
jae
int3
pop
into
xchg
add
mov
int3
inc
int3
sbb
sbb
insl
xor
lret
mov
push
rorb
pop
roll
mov
mov
mov
lret
sbb
sbb
sbb
stos
mov
aad
pop
pop
cld
mov
mov
push
xchg
dec
into
xchg
aam
outsl
rcrb
mov
adc
jae
or
mov
sbb
in
cmc
and
mov
sbbb
adc
pop
cwtl
xchg
lcall
mov
shrb
add
bt
pushf
neg
cmc
pushf
rol
cmp
pushf
shr
call
les
xor
repnz
fsts
add
aad
xchg
fmul
inc
mov
dec
imul
fistpll
orb
jnp
sbb
mov
dec
jo
movb
std
mov
movsb
int3
popa
iret
pop
sbb
mov
or
idiv
cmpsl
mov
cmp
adc
dec
xchg
shl
and
xor
rcl
sbb
movsb
xor
and
xchg
rclb
pop
push
push
pop
pushf
xchg
fwait
int3
sbb
insb
outsb
push
jmp
fmull
adcl
mov
jo
jb
repnz
mov
orb
mov
cmp
fcomip
jg
dec
mov
orl
adc
cmp
push
push
push
addr16
mov
sbb
ja
or
shlb
cmp
pop
push
adc
sbb
pop
pop
cltd
fists
sbb
sub
xchg
cmp
cld
jecxz
fildl
rorb
pandn
in
sub
popf
mov
cmc
cs
adc
mov
xor
and
dec
rclb
cs
fcoml
pop
ficoms
adc
fld
dec
and
cmpsb
mov
mov
cmc
sti
in
std
aam
es
sbb
repz
sub
popf
or
inc
roll
mov
rolb
pop
sbb
inc
fimull
mov
adc
int3
jns
xor
nop
outsb
push
in
fcoml
ficomps
je
pop
sbb
adcb
mov
adc
pop
mov
pop
aaa
xorb
jno
sub
push
data16
std
lods
mov
sbb
fmul
cwtl
sub
out
mov
cmp
cmpsl
push
lcall
jb
pushl
icebp
jl
sbb
inc
lds
push
and
jp
imul
mov
cmp
mov
sub
jp
aas
lock
inc
neg
lcall
fstl
push
rcr
fcoml
push
int3
sbb
and
sub
xor
arpl
mov
adc
dec
lahf
adc
mov
mov
jmp
inc
sbb
sub
adc
jg
jp
rcrl
out
cmpsl
jmp
inc
lcall
aad
pushf
scas
xchg
rcll
cwtl
andl
bound
cmp
out
xchg
cwtl
pushf
dec
ret
jae
xchg
xlat
hlt
cmpsl
adc
out
movsl
ret
xor
roll
movsb
ljmp
sbb
cwtl
lahf
aad
pop
xchg
int3
sbb
imul
lock
movl
or
mov
stc
pusha
cmpb
pusha
call
stc
sub
sub
and
jae
rcrb
fwait
or
add
bound
out
cmpsb
push
je
push
or
cmp
pop
push
push
push
or
mov
mov
push
sahf
ljmp
pushf
test
test
into
sbb
test
lea
pop
in
repz
cmp
xadd
xlat
fiadds
mov
mov
xor
jp
cmp
mov
inc
lds
push
sarl
mov
jbe
sub
addb
jae
pop
ret
add
cmp
sub
push
aad
inc
lock
jl
int
test
cmpsb
xor
pop
test
dec
fmuls
popa
clc
xor
mov
movb
int3
push
loope
xchg
jmp
sbb
lret
pop
pop
xchg
xor
repnz
pop
rcl
popf
and
iret
xchg
dec
lea
sbb
pushf
push
sbb
mov
adc
test
int3
fstl
rcrb
push
inc
xchg
ret
sahf
imull
jae
out
aas
sbb
cs
inc
sbb
cmp
and
pop
ret
addr16
sahf
ja
mov
insl
mov
dec
imul
cli
xor
loope,pn
int3
pop
outsb
cmp
out
and
imul
insb
and
mov
push
fs
push
mov
pushl
ret
orl
pop
xor
pusha
lods
and
and
cmp
in
cwtl
mov
jo
lods
popa
push
mov
lea
sahf
dec
push
scas
mov
sub
cmpb
sub
cmpsl
sbb
jbe
sub
repnz
rcrb
sarl
xor
inc
or
add
add
mov
aam
fiaddl
arpl
and
out
mov
js
mov
adc
jecxz
adc
pop
repnz
pop
stc
lock
jp
sub
sbb
dec
jno
inc
push
cmp
lret
dec
rolb
int
aam
and
orb
aam
int3
and
add
test
mov
jg
repnz
ja
sub
cmp
inc
repz
sub
pushf
push
mov
jecxz
mov
out
stos
bound
int3
sbb
stc
jae
ret
or
orb
xor
mov
adc
sahf
push
pushf
push
popf
push
inc
adc
shrb
daa
mov
stos
leave
outsb
dec
xchg
fwait
inc
aaa
push
stc
filds
fcompl
mov
sbb
mov
xchg
out
mov
movsb
push
in
mov
mov
mov
movb
or
fwait
mov
push
push
mov
bound
sub
ds
push
loope
ficompl
dec
ficoml
pop
idivb
rcrb
clc
mov
pop
loopne
lods
mull
ljmp
sub
sbb
repnz
imul
insl
push
jb
jo
jb
jns
ljmp
arpl
xchg
push
or
adc
mov
lds
aas
mov
lods
or
jle
dec
pusha
jmp
dec
scas
xor
mov
rcll
lcall
loop
dec
pop
stos
and
xchg
popf
into
pushl
mov
pop
add
dec
inc
pop
mov
lods
or
insb
mov
push
bound
out
movsb
insb
push
das
and
push
cmp
and
mov
fwait
sbb
fstl
nop
fisttpll
mov
mov
or
fildll
add
icebp
test
in
or
cwtl
rol
cli
dec
test
inc
lds
fldt
fsubrs
mov
pusha
add
push
inc
std
and
pop
lea
xchg
mov
movsb
imul
jnp
mov
mov
sbb
xchg
xchg
and
cwtl
dec
xchg
push
adc
inc
adc
push
or
jb
pushf
sbb
out
subl
dec
pop
mov
pop
imul
jo
aam
insl
adc
call
jne
mov
outsl
sub
imul
mov
sahf
sub
test
cmpsb
lret
or
popa
inc
arpl
xor
jl
mov
cmp
adc
cld
testb
pop
or
adc
pop
mov
ret
and
clc
xor
add
mov
push
jbe
jb
mov
cmpl
fistpl
or
sti
mov
mov
in
pop
pop
xchg
fmull
or
movsb
mov
insb
inc
sub
cmc
xor
jo
mov
cmp
int3
sbb
enter
sar
mov
adc
rcr
mov
stc
stc
cmp
cmp
push
push
call
dec
add
or
jns
push
js
pop
mov
xchg
cwtl
lret
xchg
test
fcmovne
iret
rcl
pop
pop
les
jne
inc
push
icebp
sub
in
out
xchg
test
xor
mov
inc
out
popf
out
mov
push
dec
adc
cmp
sub
cmp
pop
sbb
stos
add
sub
jmp
sub
xchg
or
ficomps
pop
sbb
push
lahf
xchg
rcrl
int3
sbb
inc
cmp
and
add
jbe
aaa
mov
test
popa
repz
pop
adc
lret
paddusb
mov
jmp
cmp
xor
inc
stc
gs
pop
jns
adc
outsb
push
pop
and
sub
sbb
jmp
pop
lods
in
mov
xchg
add
push
cmc
ss
sbb
data16
fists
mov
leave
inc
in
jge
mov
rcll
push
sti
sub
sti
sub
jmp
sub
ljmp
pop
pop
jmp
xchg
xor
push
and
and
jg
push
dec
jo
xlat
out
mov
loope
jle
mov
mov
sub
and
mov
mov
ficomps
mov
xor
jnp
addb
adc
xchg
test
jne
inc
enter
stos
xchg
push
or
test
enter
xchg
inc
inc
push
int3
sbb
push
lret
clc
lea
js
stc
neg
call
pusha
imul
jmp
xor
das
mov
jmp
mov
sub
scas
jb
test
sarl
dec
mov
into
rorb
xchg
aaa
mov
out
pop
lods
pop
pop
add
jg
test
push
and
std
in
xor
and
loop
ret
in
icebp
divb
insb
es
decl
rclb
dec
push
jmp
dec
xchg
cmp
mulb
aas
mov
cmp
clc
cmp
xor
sbb
prefetch
and
mov
enter
enter
mov
dec
inc
jb
gs
ret
adc
push
mov
dec
cmpsb
inc
out
lret
and
add
and
sbb
jecxz
cmp
outsb
xlat
out
jg
clc
xchg
shl
je
jo
add
xchg
call
sahf
ret
and
and
std
cmp
cli
xor
int3
sbb
lret
shl
mov
cwtl
lea
pusha
push
call
cmp
mov
paddusw
fisttps
sbb
lea
aad
or
lock
dec
mov
inc
sti
leave
das
push
pop
fcoms
enter
dec
loope
add
cmp
push
xchg
lret
and
pop
lods
pop
insb
arpl
bound
in
mov
das
mov
pop
add
inc
fstpt
fiadds
lcall
lds
jo
mov
inc
jg
stos
adc
push
movsl
ja
lds
cwtl
pushf
pop
rcl
ficomps
xchg
int3
sbb
cmp
xchg
mov
lahf
int3
sub
cli
cmc
addr16
sub
jp
lret
mov
or
popf
movsb
stc
aaa
imul
xchg
out
cli
add
adc
std
lcall
pop
pop
jl
push
lret
sub
decb
loope
sub
xchg
dec
dec
enter
push
mov
movsl
jge
jns
xchg
lea
jl
adc
jp
sub
mov
je
xchg
push
imul
mov
into
or
dec
push
add
leave
inc
or
les
push
loop
pop
and
sub
cmp
mov
bts
mov
bt
test
pushl
pusha
pushf
lea
je
shl
dec
mov
sbb
shr
rol
bsf
add
call
fisttpll
add
and
mov
and
bound
scas
cmp
loop
scas
sub
sarb
xchg
cmpsb
call
sar
mov
and
and
mov
lret
pop
or
sti
mov
or
loope
jg
insb
pushf
jo
cmc
adc
push
jp
or
fdivs
into
les
sub
outsb
aas
dec
sahf
add
lds
or
mov
dec
int3
sbb
stc
jae
les
sub
sti
fimuls
mov
xchg
adc
test
pop
fisubl
or
cmp
jno
cmpsl
sub
mov
lods
movsb
add
xchg
cmpsb
cltd
inc
das
and
popa
adc
adcl
mov
insl
scas
cmp
sub
and
mov
js
sbb
mov
mov
mov
lret
push
sbb
imull
fisubs
push
or
inc
jnp
lret
cmpl
insb
xor
cs
insb
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
sbb
add
lods
cmp
aas
lock
loopne
arpl
cmc
mov
lret
pop
aam
cmc
cmpb
jge
insl
in
nop
fmull
push
ficoms
push
fcmovnbe
sbb
sahf
sbb
xlat
dec
subb
mov
dec
pop
shlb
fsts
out
out
movsl
scas
imul
lret
xchg
lods
jecxz
jb
addr16
pop
pop
loop
jge
popa
out
jl
jl
mov
add
filds
cmp
clc
ss
cmp
fsubr
daa
cmp
and
jp
pop
out
sbb
lret
lahf
mov
jg
mov
inc
in
jbe
mov
mov
in
or
in
daa
xchg
ljmp
dec
movl
push
orl
or
leave
out
in
fsubrs
out
xor
lahf
movsb
add
inc
rcr
int3
add
sbb
add
movsb
popf
lods
int
popf
jns
dec
in
xchg
sbb
fldcw
mov
xor
xchg
lods
pop
push
sub
mov
sbb
mov
sub
cld
sbb
push
cmp
orl
cmp
icebp
jnp
jne
js
cmp
mov
icebp
int3
sbb
ret
pusha
mov
pushl
mov
pushf
pushl
ret
out
mov
inc
mov
rcll
sbb
push
cwtl
pop
inc
lea
jno
xchg
cltd
repz
xor
stos
fstl
mov
inc
dec
arpl
test
mov
xor
sahf
sbb
cmpsl
popa
scas
repnz
ret
fnstenv
in
push
dec
jae
subb
out
sub
pop
xchg
imul
pop
adc
sbb
fmul
sbb
stos
mov
adc
or
cmp
pusha
jo
outsl
mov
in
sti
je
fidivrs
adc
mov
sub
mov
xchg
cmp
cmc
and
dec
nop
out
xchg
in
mov
push
inc
cs
jecxz
insb
call
icebp
mov
in
jge
cld
shll
pushf
es
xor
sbb
pop
fcom
rclb
push
popf
push
mov
mov
pop
lret
sahf
sub
push
push
jmp
es
mov
mov
hlt
mov
int3
sbb
mov
dec
shrb
movb
jmp
cmp
js
mov
cwtl
mov
das
loop
jg
cmp
out
xor
push
fildl
xorps
iret
fcomi
dec
stos
sahf
push
dec
fimuls
shrb
bnd
mov
shlb
imul
mov
arpl
pop
adc
ficoms
ljmp
add
inc
inc
dec
int
or
int3
sbb
das
lods
stc
test
sub
push
xchg
push
sbb
add
rolb
mov
scas
sbb
out
add
clc
pop
sub
and
fwait
or
cli
inc
or
addb
push
shr
popf
push
adc
cwtl
mov
fsts
mov
and
jl
pusha
cmp
fnsave
aam
xor
cwtl
sub
cmpl
mov
out
push
xchg
bound
fcomip
cld
aad
pop
arpl
jle
pusha
xor
adc
mov
ja
mov
clc
jge
jo
int3
sbb
div
dec
jmp
call
mov
adc
mov
pushl
ret
inc
inc
push
inc
push
dec
xor
cs
insb
add
mov
or
inc
roll
pop
dec
inc
sbb
popf
mov
fists
inc
mov
test
lcall
es
push
aam
xchg
mov
lahf
adc
out
xchg
jno
out
rorb
ss
inc
lret
mov
jmp
fisttps
iret
frstor
jecxz
xor
icebp
enter
in
mov
repnz
fwait
adc
sahf
fcoms
push
push
pop
int3
sbb
and
repz
and
std
jno
mov
xor
loopne
insb
je
movsb
add
sarb
ffree
push
ret
or
push
cmp
push
cli
jmp
rcr
push
and
mov
in
faddl
jmp
cmp
arpl
movsb
gs
sbb
sbb
xchg
jl
or
lret
scas
push
shrb
or
cmpsb
int
inc
jne
sub
in
stos
das
movsl
sub
mov
jno
lds
pop
mov
push
ret
rcrb
lea
int
setnp
cmovnp
pop
push
or
and
jae
iret
lock
fldt
int
dec
and
cld
push
lahf
sub
inc
bound
sarb
ror
dec
aaa
jne
push
push
std
addr16
jbe
icebp
sbb
add
xchg
adc
cs
and
lods
test
popa
cmpsl
insl
push
lds
xor
aad
add
mov
and
loop
sub
and
mov
mov
lahf
jns
arpl
mov
pop
mov
daa
inc
cmpsb
lea
adc
mov
mov
cs
adc
push
rorb
jecxz
insl
and
clc
mov
mov
mov
mov
adc
sbb
sbb
shll
insl
out
mov
pushf
push
pop
pushf
sbb
pop
push
fcoms
leave
ret
jbe
xchg
test
pushf
or
rolb
adc
push
pop
rcrb
mov
cwtl
aad
cmp
dec
rcr
push
add
push
lock
imul
adc
lahf
cmp
jge
mov
jecxz
or
jo
lret
out
add
and
rcrb
add
add
stos
in
movsb
xor
sub
cmp
outsb
and
das
and
scas
lods
mov
fisttps
inc
int
cli
pop
or
int
jo
xchg
insb
pop
cmp
adc
mov
jp
arpl
xorb
adc
movl
pop
add
cli
orb
push
cwtl
sahf
fstps
xchg
ficoml
mov
adc
aas
jae
mov
shll
sub
call
jp
daa
mov
xor
imul
repnz
mov
repnz
adcl
test
push
jne
aad
out
mov
nop
mov
or
cmp
cmp
add
mov
bound
xchg
leave
jo
orl
adc
data16
lret
pop
int3
in
cmp
lahf
sbb
jge
cmp
pop
pop
lret
imul
pushf
aam
pop
adc
pop
fcomp
sbb
xchg
adc
int3
sbb
mov
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmp
mov
lcall
xchg
pop
push
cltd
or
inc
pop
rclb
mov
cld
adc
mov
inc
or
mov
cmp
fsts
pop
inc
gs
push
mov
cmp
ljmp
mulb
ss
outsl
idivb
arpl
cmp
jecxz
stc
dec
ljmp
js
sbb
cld
out
jnp
jge
xor
cld
js
divl
cmp
sti
int3
sbb
fs
mov
repnz
mov
fcomp
clc
ss
call
loope
repz
popf
out
mov
dec
lock
arpl
mov
push
je
push
ja
lods
mov
lret
jle
push
jbe
cmpb
jp
arpl
inc
dec
sub
xor
aam
sub
roll
call
jmp
lret
jp
popa
fstpt
cmp
cld
jmp
xchg
or
mov
fs
mov
stos
out
in
in
sbb
in
fimuls
mov
sti
call
fs
jb
pushf
pushf
push
pushl
ret
push
mov
push
movw
mov
push
mov
call
or
pop
inc
mov
jb
add
xchg
fimull
les
cwtl
mov
fwait
dec
int
sahf
rcl
and
sub
pusha
lods
rorl
cmp
testl
mov
test
dec
or
icebp
inc
adc
jecxz
testl
es
dec
rorb
mov
dec
pop
int3
sbb
ret
addr16
repz
scas
insb
dec
xchg
xchg
add
arpl
pop
in
sbb
mov
pusha
lcall
mov
or
fcoms
ss
mov
add
or
loopne
xchg
outsl
rcrb
mov
jp
jge
out
push
cmpl
jp
and
mull
cld
mov
jno
stc
cltd
aad
inc
into
add
addr16
inc
or
mov
jge
movsl
and
loope
sub
ljmp
lock
addr16
sahf
mov
jmp
mov
je
xor
lcall
ret
insl
fsubrs
xor
jl
mov
into
cld
sbb
mov
jge
ja
outsl
xchg
mov
mov
loop
outsl
out
js
std
push
out
aaa
outsl
pop
roll
inc
or
js
add
cltd
and
mov
or
pop
cmp
call
mov
int3
sbb
std
decl
ret
push
inc
lea
sub
cmp
sub
scas
mov
mov
jae
es
ja
data16
inc
adc
jecxz
addr16
xchg
mov
bound
cmpb
ds
add
fs
mov
push
cmpsl
mov
pop
push
movsl
jns
xchg
dec
clc
pushl
lret
aaa
cmp
jge
mov
aas
cmp
js
cmp
int3
sbb
or
sub
call
cmp
pusha
lea
jae
movsbw
mov
clc
call
stc
jmp
adc
dec
push
lcall
in
bound
jb
jno
mov
mov
stos
in
mov
cli
pop
dec
jl
aaa
adc
sbb
aam
sahf
ficoml
or
cs
repz
mov
in
lds
inc
inc
scas
xor
rorl
xchg
gs
cmp
mov
aam
mov
push
dec
popf
inc
or
sbb
cmp
mov
js
mov
mov
int3
sbb
rorl
jmp
jne
sub
rol
rcrl
pop
xchg
or
or
mov
fimull
mov
push
push
out
sti
or
inc
popa
imul
lds
mov
in
fisubl
pop
jbe
in
xchg
push
movsl
jg
repz
or
lahf
in
xlat
pop
pop
pop
pop
sahf
sbb
ficompl
int3
sbb
lock
push
data16
mov
nop
pop
adc
dec
pushf
or
add
fcoms
clc
dec
jne
jbe
int3
add
aam
push
lds
das
xor
js
sbb
jb
in
loopne
mov
mov
inc
push
lea
paddq
inc
roll
popa
cmc
xchg
dec
cmp
fisubl
es
lea
sbb
ds
xchg
cmp
dec
pop
faddl
pushf
mov
mov
or
sub
test
loopne
and
imul
mov
push
inc
or
dec
add
aam
push
movl
lsl
pop
xchg
in
inc
mov
or
sbb
sub
stos
jne
add
lret
movsb
sbb
xorb
dec
dec
pop
dec
enter
adc
fldcw
xor
sub
push
adc
add
xor
mov
mov
cmpsb
arpl
loopne
insl
stos
insb
addr16
or
test
cmp
mov
fmull
orb
or
xchg
pop
stos
hlt
mov
lods
mov
xchg
push
xchg
push
sub
insl
mov
popf
xchg
clc
popl
push
sub
aad
aaa
mov
cmc
xchg
sub
xor
les
pop
or
push
inc
adc
xchg
xor
lret
das
pop
leave
mov
data16
or
inc
orb
dec
int
lret
int3
sbb
jp
dec
inc
push
inc
pop
push
int3
std
ja
inc
dec
jmp
clc
push
je
push
xor
or
imul
jno
pop
lret
test
mov
pop
or
mov
pop
fsts
mov
stos
in
cs
sbb
inc
adc
pop
pop
in
add
or
push
adcb
mov
enter
les
sbb
rorl
adc
dec
pop
fisttpll
xchg
iret
fimuls
rcrl
ret
ficoms
fisubrs
mov
or
sub
enter
icebp
jae
arpl
xor
daa
ds
jle
in
dec
lcall
add
add
hlt
cmp
xor
mov
ds
add
fildl
dec
add
mov
rcr
mov
shll
call
mov
fs
sbb
stos
mov
add
or
ljmp
push
mov
push
add
adc
sbb
popf
push
wbinvd
ret
dec
or
sahf
fcomi
and
repnz
rclb
scas
fistpl
test
popf
fisubrl
andb
xchg
fistpl
pop
mov
in
mov
sbb
std
mov
dec
aas
out
and
scas
mov
adc
cmpsb
ficoml
jl
out
push
lods
movsb
roll
add
pop
test
pop
pop
xchg
sahf
subb
pop
cld
jno
adc
cmpsb
xor
xor
cmpsl
cmp
cmp
mov
scas
sub
aas
loopne
sti
call
push
ficomps
hlt
hlt
fwait
xchg
fists
dec
pop
mov
leave
sbb
xchg
push
mov
push
movl
gs
xchg
outsl
xchg
movsb
mov
mov
es
test
cltd
loop
dec
mov
mov
call
pop
dec
rcrb
push
push
fmulp
das
and
arpl
inc
loop
js
inc
sbb
jl
insb
jmp
outsb
cmpsl
out
ljmp
std
jg
jne
pushf
movb
lea
jb
stos
pushf
mov
lea
jmp
adc
or
lret
scas
mov
insb
jl
jo
clc
push
scas
or
arpl
stos
and
out
inc
and
int3
or
pop
outsb
and
leave
mov
fstpt
out
pop
fstpl
mov
pop
xlat
mov
cmp
inc
jbe
outsl
into
jmp
xchg
add
sbb
pop
dec
test
xor
mov
jmp
xor
loopne
sbb
stos
jl
inc
adc
or
popaw
sub
sub
sub
lods
test
mov
or
xor
jmp
push
jmp
jns
sub
mov
std
jecxz
jo
dec
sub
mov
cwtl
pop
mov
mov
mov
mov
push
add
lods
xchg
mov
mov
lea
loopne
mov
pop
test
lds
psubd
inc
aas
negb
jle
loope
ss
mov
pop
ficompl
xchg
pop
ficompl
daa
movsl
jge
ret
jae
sbb
sbb
test
fcoms
rol
sub
ds
outsl
jg
jl
mov
dec
xchg
push
dec
aad
test
cs
adc
addb
stc
jl
or
or
out
mov
adc
xchg
xlat
gs
lahf
rcl
icebp
add
or
int
divb
xlat
jge
mov
or
int3
push
add
or
dec
add
mov
mov
mov
dec
fldl
into
enter
pop
mov
xor
popa
jno
jo
cmpsb
imul
lods
sbb
aam
gs
or
ljmp
loope
dec
mov
xlat
into
or
mov
dec
dec
pushf
popf
gs
hlt
out
push
nop
push
loop
sub
mov
fwait
and
mov
movb
rorb
inc
lret
ret
lret
xchg
sbb
popa
pop
bound
fisubl
mov
shld
mov
call
mov
lea
ja
jmp
xor
mov
arpl
cmpps
fsts
add
fsubrs
shrb
fs
xchg
sahf
xchg
mov
xchg
mov
sbb
mov
fidivrs
ljmp
pop
adc
sub
mov
jecxz
call
sbb
mov
fadds
mov
repz
int
int
mov
jnp
addb
rolb
inc
call
repz
loop
int3
imulb
sbb
pop
adc
sbb
test
xchg
addr16
test
push
rorb
add
push
pop
add
pusha
iret
roll
cltd
mov
adc
mov
mov
mov
jg
xchg
daa
mov
mov
sub
mov
or
sub
pop
addr16
gs
js
jnp
xor
cmp
cli
lcall
push
sub
mov
push
push
rcl
rcrb
push
fcmovbe
int3
sbb
test
lds
push
mov
push
lea
ja
stc
imul
push
call
pusha
mov
push
pushf
mov
mov
pop
pusha
pusha
movb
pushf
pushl
ret
sbb
xchg
push
imul
adc
push
inc
push
pop
dec
rcll
xor
dec
stos
xchg
sub
je
test
stos
inc
cmpb
stos
add
iret
push
test
iret
mov
push
scas
sahf
nop
pop
fisubs
and
xchg
sub
lcall
inc
add
ljmp
cmp
in
add
inc
push
mov
or
jge
dec
pop
push
cmpsl
sbb
call
in
or
int3
cmpsl
push
ja
xchg
sbb
sahf
xlat
push
pop
fcompl
fstp
adc
xchg
int3
sbb
outsb
in
xor
out
mov
in
pop
sti
jne
xor
cmpsl
imulb
in
mov
iret
and
pusha
fsts
iret
iret
ret
movsl
icebp
jg
sbb
cmpsl
mov
mov
sbbb
pop
outsl
push
mov
jmp
sub
rcr
xor
shrl
cmc
inc
or
dec
ficompl
or
mov
lods
mov
inc
dec
mov
rorb
les
sbb
int
jbe
test
push
sbb
jne
mov
jo
icebp
mov
xchg
pop
mov
mov
stos
dec
cmc
clc
mov
push
mov
inc
xor
or
cmpsb
dec
loope
pop
and
outsl
imul
cmp
mov
mov
sub
mov
adc
adcl
cmp
lahf
pop
add
scas
jl
mov
jge
sbb
mov
lea
ficomps
xchg
xchg
pop
push
adc
int3
sbb
insb
out
cmp
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
bnd
inc
sti
jbe
idiv
stos
mov
sub
das
mov
arpl
mov
aaa
imull
xlat
out
mov
xlat
mov
cmpsb
cmpsl
inc
loop
push
adc
push
in
movsb
dec
adc
mov
ror
mov
jns
cmc
iret
add
inc
dec
or
inc
mov
or
rorb
push
enter
jns
add
addb
inc
push
int3
sbb
loope
outsb
push
enter
dec
gs
int3
mov
leave
ficoml
or
fstps
push
iret
add
cmc
and
push
push
in
dec
bnd
mov
aas
cmp
jmp
mov
in
sbb
mov
adc
adc
inc
jo
iret
inc
jo
je
jns
xchg
filds
into
add
xchg
xchg
jg
jp
insl
imul
lods
out
test
int3
sbb
divb
stos
adc
mov
rol
movzbl
seta
bsr
sar
not
xor
bts
rcr
add
pushf
rol
mov
bswap
inc
sub
dec
sub
pusha
movzbw
clc
shld
xor
rcr
mov
pushf
call
jmp
jmp
push
test
add
mov
pushf
push
mov
pushl
pusha
call
call
mov
jmp
lea
jb
mov
push
lea
jmp
pusha
mov
pushl
jmp
and
mov
adc
add
push
bt
mov
jmp
mov
pushf
push
mov
push
lea
jmp
push
mov
mov
pusha
pushf
lea
jmp
mov
movw
lea
jmp
cmc
sub
push
call
lea
call
mov
push
jmp
not
or
mov
and
shrd
jge
mov
test
call
pushf
popl
jmp
call
mov
movb
pushf
jmp
call
shrd
rdtsc
clc
jbe
sub
jmp
jmp
mov
movb
mov
movb
mov
lea
jmp
pusha
push
pushl
popl
push
pushl
push
lea
jmp
sub
cmc
mov
push
sub
mov
mov
call
jmp
sub
pushf
pushf
stc
add
jmp
mov
mov
pushf
mov
mov
push
lea
jmp
push
rdtsc
mov
jmp
pusha
jmp
call
pushf
popl
lea
jl
popl
push
pusha
lea
jmp
lea
cmc
bt
mov
test
pusha
clc
sub
pusha
lea
jae
push
mov
pushf
mov
pushf
mov
lea
jmp
pushl
mov
mov
push
pushf
lea
jmp
jmp
sbb
pushf
pusha
mov
pusha
mov
cmc
bt
sub
jmp
push
pushf
movw
mov
call
jmp
mov
pushf
pusha
pushl
mov
mov
push
pushf
mov
lea
jmp
shrd
rcr
movzww
pusha
test
cmp
bt
xchg
pushl
sub
lea
jae
bt
neg
stc
clc
bt
sub
push
not
movw
pushf
cmc
ror
bt
stc
pusha
sub
pushf
movb
jmp
call
cmp
add
pushf
pushf
call
mov
pushf
pop
movzbw
bswap
mov
movzbw
movzbl
mov
setbe
movl
mov
bswap
jmp
mov
jmp
cwtl
push
movzbl
not
movsbw
bswap
mov
jmp
pushf
pushf
mov
pusha
mov
pushf
jmp
mov
push
jmp
jmp
mov
jmp
mov
movb
mov
call
jmp
mov
pushf
pushl
lea
jmp
mov
pushf
lea
jmp
xchg
bts
mov
call
dec
movw
movb
lea
jmp
mov
mov
jmp
pusha
mov
movb
xchg
push
xchg
pop
jmp
sub
call
inc
jmp
jmp
movb
pushf
mov
push
lea
jmp
inc
neg
shl
movzbl
pushf
stc
bt
push
add
call
call
add
add
call
push
mov
pushf
pushl
lea
jmp
sub
clc
mul
pusha
pusha
jmp
add
ror
mov
rcl
push
test
add
setne
not
call
mov
movw
pushf
pushl
lea
jmp
bswap
call
push
jmp
add
jmp
movb
mov
mov
mov
call
mov
push
jmp
jmp
aaa
btc
lea
jmp
push
mov
movw
mov
mov
lea
jmp
mov
call
pushf
mov
call
mov
jmp
mov
mov
stc
xor
cmc
cmc
mov
clc
cmp
sub
movb
jmp
push
mov
pusha
mov
bt
sub
jp
bt
test
add
push
call
push
clc
sub
call
mov
mov
call
call
pushl
mov
lea
jnp
pusha
mov
pushf
mov
call
pushf
lea
jne
and
bswap
xorb
sets
pop
push
pusha
push
lea
jmp
pushf
popl
push
pusha
lea
jg
popl
pusha
pushf
lea
jmp
add
push
push
jmp
dec
mov
movsbw
lea
movsbw
stc
ror
lea
jge
dec
movzbw
inc
shld
sar
pusha
add
not
sub
mov
cmp
add
movw
push
movb
mov
pusha
lea
jmp
rol
aaa
sbb
mov
mov
sub
xor
ror
mov
bt
call
jmp
lea
jnp
pushf
mov
mov
cld
mov
pusha
pusha
rep
and
mov
bsf
mov
test
pushl
popf
mov
movb
lea
jmp
jmp
bt
js
cmc
pushf
sub
pusha
mov
pushf
jmp
shr
mov
clc
stc
push
add
pushf
movb
pusha
pushf
lea
jmp
mov
pushf
call
cmp
stc
jmp
sub
mov
push
jmp
or
stc
pushl
push
xor
jmp
add
mov
sar
inc
or
bt
add
xor
xor
movsbl
push
rcr
shr
mov
clc
movb
stc
pushf
shl
test
pushl
shr
push
cmp
call
inc
call
shr
pushl
mov
call
rol
push
call
push
mov
push
movb
lea
jmp
jmp
pusha
call
pushf
jmp
sub
movb
call
mov
mov
movw
pushl
lea
jmp
mov
pushf
mov
push
lea
jmp
mov
pusha
mov
jmp
pushf
mov
pushf
mov
push
pushf
push
mov
pushf
mov
jmp
jmp
movw
mov
mov
pushf
pushf
mov
mov
lea
jmp
bswap
push
pushf
ror
clc
stc
cmc
movb
add
mov
bt
jmp
mov
pushf
pusha
pushf
call
pusha
shrd
shrd
mov
movzbw
mov
pushf
inc
mov
jmp
div
mov
pusha
mov
pushl
lea
jno
push
mov
mov
mov
mov
pusha
pushf
popl
pushf
pushl
popl
pushl
pushf
lea
jmp
dec
sub
lea
push
clc
not
rol
pushf
dec
shrd
adc
xor
and
sub
bsr
mov
jmp
rol
and
notl
aam
shld
bsr
mov
jmp
call
mov
pushf
lea
jmp
lea
movb
pushl
std
pushf
xchg
call
call
xchg
bt
aad
mov
neg
cmc
dec
bsf
mov
shr
sar
clc
mov
cmp
pusha
add
clc
test
stc
shld
pusha
movb
mov
call
jmp
movw
pushf
mov
pushl
lea
jmp
pusha
pushf
popl
push
pushl
popl
push
mov
movb
pushf
lea
jmp
jmp
call
pusha
faddl
pushf
lea
jmp
pushf
push
cmc
add
cmp
xor
stc
clc
cbtw
bt
test
bt
cwtl
call
pushf
pusha
pushf
call
mov
movw
mov
jmp
jmp
sar
dec
mov
jmp
jmp
pushf
mov
pusha
pushl
mov
lea
jmp
rep
rcr
mov
shl
call
adc
or
shl
not
mov
btc
bswap
xor
jmp
jmp
pusha
call
sub
push
jmp
jmp
push
cmp
test
sub
call
not
lea
call
call
clc
push
mov
add
push
lea
jle
mov
pusha
push
lea
jmp
push
call
jmp
pushl
pushl
popl
pushf
lea
jmp
pusha
stc
clc
pusha
sub
pushf
shr
pushf
call
push
jmp
mov
pushf
lea
jne
jmp
movb
push
movb
mov
pushf
mov
push
pushf
jmp
mov
pushf
popl
lea
js
popl
push
pushf
pushl
lea
jmp
pushl
popl
pushl
push
pusha
pushf
lea
jmp
call
mov
pusha
pushf
lea
jmp
mov
movw
push
movb
pushf
lea
jmp
sbb
add
dec
jo
loop
jo
add
add
jo
xor
dec
jo
outsl
dec
jo
outsl
dec
jo
outsl
dec
jo
fnstenv
jo
add
add
inc
jo
inc
sub
add
sub
shrb
jo
shrb
jo
shrb
jo
inc
dec
jo
or
jo
imul
add
dec
jo
push
daa
jo
inc
sub
add
xor
inc
dec
jo
cltd
es
ljmp
add
cmp
movl
add
inc
jo
inc
dec
jo
adc
jo
dec
sub
jo
inc
dec
jo
inc
inc
jo
adc
jo
inc
inc
jo
xorl
add
dec
jo
or
jo
inc
sub
add
inc
jo
inc
dec
jo
aad
jo
adc
jo
dec
sub
jo
sub
jo
xor
and
xor
jo
or
jo
cmc
xor
add
dec
jo
jnp
jo
fnstenv
jo
sub
jo
outsl
dec
jo
outsl
dec
jo
outsl
dec
jo
outsl
dec
jo
movsl
cmp
jo
inc
inc
jo
lods
and
add
sub
shrb
jo
shrb
jo
shrb
jo
inc
inc
jo
sbb
add
inc
jo
test
jo
inc
inc
jo
push
daa
jo
movsl
cmp
jo
and
add
xor
and
add
inc
jo
dec
sub
jo
shlb
jo
test
add
xor
add
xor
cmp
ret
dec
jo
adc
jo
shrl
jo
push
daa
jo
shrl
jo
shrl
jo
sub
jnp
jo
add
add
sub
xor
jo
sbb
xor
add
cmp
adc
jo
dec
sub
cmc
xor
add
add
xor
shlb
jo
mov
jo
insb
jo,pt
aad
jo
inc
sub
add
xor
add
jo
inc
jo,pt
outsl
dec
jo
outsl
dec
jo
outsl
dec
jo
outsl
dec
jo
insb
jo,pt
dec
sub
loop
jo
inc
dec
jo
shrb
jo
shrb
jo
shrb
jo
shrb
jo
cmp
inc
jo,pt
sbb
daa
jo
mov
jo
inc
inc
jo
cmp
cmc
xor
add
inc
jo
inc
inc
jo
cltd
es
sub
jo
inc
dec
jo
sbb
jo
cmp
test
add
cmp
mov
jo
shrl
jo
jnp
jo
dec
sub
aas
and
sub
jo
xor
and
jo
aad
jo
mov
add
sub
and
sub
xor
jo
test
jo
inc
dec
jo
stos
inc
jo
xchg
and
sbb
add
sub
jo
inc
sub
add
jo
loop
jo
inc
sub
add
xor
movl
add
jo
outsl
dec
jo
outsl
dec
jo
outsl
dec
jo
cwtl
inc
jo
aas
and
iret
sub
pop
cmp
shrb
jo
shrb
jo
shrb
jo
shrb
jo
or
jo
insb
jo,pt
shlb
jo
cltd
es
inc
dec
jo
loop
jo
stos
inc
jo
or
jo
sbb
jo
add
add
jo
iret
sub
cwtl
inc
jo
sbb
inc
jo
fnstenv
jo
xor
jo
fnstenv
jo
dec
ss
inc
dec
jo
movl
add
dec
jo
add
add
daa
jo
sbb
add
sub
insb
jo,pt
push
daa
jo
imul
add
add
xor
xor
jo
and
push
daa
jo
inc
sub
add
sub
jo
sbb
jo
test
jo
aas
and
sbb
add
xor
sub
dec
ss
pushf
popl
movb
pushf
jmp
movzbl
shl
mov
std
test
mov
clc
pushl
popf
push
mov
pushf
lea
jmp
call
and
call
mov
push
lea
jmp
push
mov
pushl
pushf
push
mov
mov
pushf
call
add
pusha
mov
bswap
rcl
btc
add
dec
call
pusha
not
call
call
pushf
cmc
call
pushf
pushf
pushf
popl
pushf
pusha
push
pushf
pushl
popl
movb
lea
jmp
pusha
stc
bt
sub
mov
movb
pusha
jmp
pusha
call
call
call
shr
aas
seta
btc
mov
push
call
pushf
mov
push
pusha
push
lea
jmp
mov
push
pushf
pushl
mov
push
mov
lea
jmp
mov
mov
pushf
pushf
movb
lea
jmp
pusha
movb
pusha
mov
pushl
pushf
pushf
pushl
pushl
ret
pushl
popl
movb
pushl
pushf
lea
jmp
mov
mov
pushf
pushf
movb
lea
jmp
call
push
mov
mov
mov
call
pushf
mov
push
pushl
pushf
pushf
mov
call
push
call
mov
pushf
movb
mov
mov
pushl
lea
jmp
pushl
popl
movl
movb
mov
mov
lea
jmp
clc
call
mov
pushf
mov
call
movsbw
pop
xorb
movsbw
bswap
pop
pusha
mov
lea
jmp
add
jmp
jmp
mov
mov
push
push
call
dec
rcl
mov
adc
sbb
xor
jmp
cwtl
movzbw
lea
movsbw
mov
push
mov
jmp
mov
call
pusha
shl
pushf
push
mov
movl
pushf
push
pushf
popl
pushl
pushl
popl
push
lea
jmp
call
pusha
mov
pushf
mov
pushf
push
mov
movb
lea
jmp
lea
jns
pushf
jmp
stc
sub
push
mov
jmp
divl
pusha
movw
pushl
mov
mov
movb
call
jmp
pusha
call
call
call
rol
inc
pusha
dec
add
and
shrd
mov
movl
add
call
movw
mov
pushf
mov
pushf
movw
mov
jmp
pushf
pushf
call
call
push
push
pushl
popl
push
pushf
push
pushf
lea
jmp
cmc
xor
stc
clc
movb
mov
sub
movb
pushf
call
pushl
cmp
sub
jmp
setg
shl
rcl
mov
and
test
mov
jmp
mov
push
mov
mov
pushf
pushf
pushf
lea
jmp
jmp
pushf
movl
movw
call
bts
mov
clc
call
pushl
mov
pushf
mov
jmp
mov
pushf
jmp
call
jmp
pushf
pusha
not
inc
pushf
bsr
rcr
add
bts
and
mov
test
push
add
call
pusha
pusha
push
mov
movw
jmp
pushf
bt
test
stc
neg
bt
sub
clc
lea
jbe
not
stc
pushf
ror
pusha
movw
cmp
stc
sub
clc
cwtl
test
bt
jmp
pusha
mov
pushf
mov
jmp
add
sete
pushf
pusha
pushf
mov
push
pushf
mov
pushf
movw
movb
pushf
lea
jmp
pusha
movw
pushf
fldl
pushl
pushf
pushf
lea
jmp
pushf
mov
pushf
jmp
bswap
rol
clc
add
mov
setae
bsf
btr
cmp
mov
cmc
pusha
not
test
stc
cmc
clc
not
jmp
push
fildl
push
lea
jmp
movw
pusha
mov
push
jmp
mov
lahf
mov
push
mov
pusha
mov
pushf
pushf
lea
jmp
movw
pushl
dec
push
jmp
pushf
jmp
jmp
pushf
pushf
mov
jmp
shl
jmp
push
mov
mov
mov
pushf
push
movb
lea
jmp
mov
pushl
mov
jmp
decl
push
lea
jne
jmp
push
pushf
popl
mov
call
call
pushl
push
mov
call
das
aad
mov
shrd
xadd
lea
aaa
sub
aam
add
inc
sbb
lea
dec
lea
shl
ror
and
bswap
pusha
btc
sub
mov
mov
not
pushf
movzbw
mov
push
bswap
std
pushf
mov
call
btc
shl
mov
neg
cmc
mov
jne
test
stc
push
add
jmp
pusha
cmc
add
clc
xor
pushf
bt
call
sub
test
stc
cmp
push
shr
call
pushl
mov
jmp
mov
push
mov
push
pushf
pushf
push
mov
call
pusha
mov
jmp
mov
pushf
lea
jbe
push
mov
pushf
popl
pushf
call
mov
pushl
pushf
movb
pusha
lea
jmp
dec
bsf
clc
cmp
mov
pushf
stc
cmc
movw
sub
pusha
pusha
movb
jmp
push
ror
jmp
pushl
popl
pushl
movw
lea
jmp
neg
mov
pusha
stc
add
pushf
lea
jmp
lea
jp
dec
stc
pusha
pushf
add
lea
jnp
ror
call
jmp
movb
mov
mov
mov
movl
mov
mov
push
mov
push
jmp
pushf
not
cmc
jmp
pushf
inc
pusha
jmp
jmp
mov
mov
pushf
push
pushl
lea
jmp
mov
mov
lea
ja
pusha
mov
push
mov
mov
mov
call
shrd
mov
cltd
mov
movzbw
stc
shr
shrd
mov
pusha
mov
cmp
push
add
cmp
push
clc
clc
shrd
push
call
pusha
pusha
pushf
dec
pushf
mov
push
pushl
ret
pushl
popl
pusha
movb
pushl
lea
jmp
sub
clc
shl
push
mov
push
pusha
mov
pushf
popl
pushl
push
pushf
pushf
pushl
popl
pushf
lea
jmp
call
jmp
dec
clc
movb
jmp
mov
setb
mov
xchg
mov
bswap
xchg
pusha
lea
movw
mov
lea
not
call
jmp
clc
add
call
pop
bswap
pushf
bts
lea
pushl
bt
push
cmc
mov
xchg
rcr
cmc
ror
shrd
rol
dec
btr
add
bt
ror
mov
inc
mov
or
sub
mov
mov
pusha
sar
add
rcl
mov
bsf
rol
push
add
add
inc
cmp
cmp
mov
sub
pusha
xor
xor
rcr
or
xor
rcr
add
cmc
not
lea
bts
shl
shr
xor
movsbw
movzbl
lea
pusha
mov
jmp
lea
jns
push
pusha
movb
movb
pushl
mov
movb
pushl
pusha
lea
jmp
jmp
movb
mov
jmp
call
pushf
push
jmp
stc
cmp
add
pushf
rol
pushf
cmc
add
stc
call
jmp
jmp
push
pushl
popl
pushl
push
lea
jmp
pushf
mov
mov
movb
movb
lea
jmp
mov
pushf
push
pushf
mov
pushf
pushf
movb
pusha
lea
jmp
mov
shl
cmc
mov
cmp
sub
ja
sub
push
mov
cmp
shr
call
mov
pushf
mov
lea
jmp
cbtw
cmp
cmp
cmc
pushl
cwtl
pushf
jmp
cmp
movl
sub
call
ror
cmc
mov
bts
mov
pusha
push
stc
call
mov
pusha
add
jmp
call
pusha
pusha
call
mov
call
cmc
jmp
push
mov
mov
lea
jmp
and
lea
jl
pusha
pusha
pushf
popl
movw
movl
call
pushf
mov
pusha
pushf
pushf
lea
jmp
shl
sbb
add
mov
clc
jmp
rol
movzbl
bt
cmc
pusha
xor
push
jmp
shl
inc
stc
mov
clc
jmp
jmp
test
test
sub
stc
call
push
push
inc
push
mov
jmp
mov
pushf
pushf
popl
pushl
mov
jmp
add
pushf
pushf
pusha
bswap
stc
pushl
cmc
ror
mov
push
cmc
add
pushl
pushf
sub
jmp
push
movzbw
pop
mov
mov
jnp
push
mov
lea
pushf
pushf
mov
mov
pushf
mov
lea
jmp
pushl
pushl
popl
pushf
movb
lea
jmp
push
mov
pushf
jmp
movw
mov
mov
push
lea
jmp
mov
movw
pushf
call
movb
mov
pushl
pushf
pushf
push
pushl
ret
pushf
mov
call
cwtl
push
sub
call
call
pusha
pushf
mov
jmp
mov
pushf
mov
pusha
push
mov
mov
call
jmp
mov
pushf
call
jmp
movw
mov
pushl
movb
pushf
lea
jmp
mov
movb
movb
lea
jmp
push
jmp
and
movw
stc
pushf
cmp
movb
call
clc
mov
cmp
push
stc
xor
push
pusha
dec
stc
movb
ror
clc
clc
add
mov
pushl
push
jmp
dec
btc
not
mov
call
mov
pushf
mov
mov
mov
call
pusha
bswap
pushl
call
pushf
mov
jmp
mov
test
add
jmp
pushf
pushf
popl
call
bswap
push
mov
clc
lea
jnp
mov
clc
stc
jmp
mov
push
call
pushf
push
pushl
mov
push
mov
call
jmp
movb
call
pushf
pushl
popl
pushl
lea
jmp
push
pusha
aaa
jmp
mov
call
mov
push
mov
call
call
mov
pushl
pushf
pusha
movw
lea
jmp
dec
cmp
bt
jmp
pusha
push
jmp
pushf
jmp
mov
mov
lea
jmp
pushf
pushl
popl
pushf
mov
pusha
lea
jmp
call
rol
mov
lahf
mov
sub
mov
jmp
cmp
jmp
mov
jmp
call
pusha
jmp
lea
ja
dec
jmp
pushf
mov
push
pushf
movb
pushl
lea
jmp
mov
call
push
pushf
popl
push
jmp
mov
pushf
movw
pushf
popl
call
call
mov
pusha
pushf
mov
mov
pushf
pushl
pushf
lea
jmp
mov
push
mov
movb
jmp
pushf
mov
movb
mov
pushf
pushf
mov
pushf
movw
movw
mov
lea
jmp
add
pushf
pushf
call
sub
pushf
movb
push
mov
pushf
mov
pushf
pushf
lea
jmp
pusha
mov
mov
pushf
pushf
mov
pushl
pushf
pushf
lea
jmp
call
pusha
mov
pusha
push
mov
pushl
mov
movb
call
mov
pushf
pusha
call
pushf
movb
add
pushl
bt
clc
rol
cmp
pushf
jmp
call
pushf
cmp
add
call
push
push
fmull
push
pusha
pushf
push
lea
jmp
mov
push
push
jmp
call
stc
xor
test
push
test
cbtw
cmc
cwtl
clc
call
stc
ror
cmp
lea
stc
test
jmp
mov
movb
pushf
mov
pushf
lea
jmp
jmp
mov
mov
lea
jmp
aad
jne
mov
cmp
call
movw
mov
push
push
call
call
pushf
jmp
ror
pusha
pushf
push
sub
stc
cwtl
jmp
pusha
mov
push
mov
pusha
movb
pushf
movw
lea
jmp
jmp
mov
jmp
sub
mov
lea
mov
stc
stc
cmp
not
bt
cmc
not
cmc
stc
cmc
and
push
mov
pusha
pusha
movl
movw
pushf
popl
call
pusha
mov
mov
pushl
movb
pushf
pushf
popl
jmp
push
movw
lea
ja
inc
jmp
mov
pushl
movl
pushf
popl
lea
jl
push
pushf
pusha
pushl
popl
pushl
pushf
lea
jmp
jmp
add
jmp
push
pusha
pusha
mov
pushf
jmp
pushf
pushf
mov
pushf
mov
pushf
mov
pushl
jmp
cpuid
push
sub
mov
push
clc
cmpl
pushf
mov
mov
pushf
movb
mov
pushf
mov
jmp
pushf
pusha
mov
bt
or
movl
lea
je
bt
sub
test
cmc
xchg
stc
push
bt
push
sub
push
lea
jne
pushf
cmp
bt
cmp
sub
mov
pusha
pushf
xchg
jmp
mov
call
cmc
call
movl
call
pusha
mov
pushf
pushf
push
pushf
lea
jmp
mov
movb
mov
movb
mov
lea
jmp
mov
pusha
mov
call
pushl
mov
call
mov
lea
jge
jne
call
mov
mov
mov
jmp
add
bsf
or
mov
stc
xchg
bt
sub
bt
test
neg
call
shr
sete
mov
test
stc
sub
bt
cmp
stc
cmp
add
push
push
jmp
call
push
mov
pushl
pusha
lea
jmp
pushl
popl
pusha
push
pushf
lea
jmp
jmp
pushl
pushl
popl
push
mov
movb
mov
lea
jmp
bt
pushf
pushl
pushl
popl
stc
bt
add
clc
bt
cmp
pushl
popf
pusha
pushf
mov
lea
jmp
pushl
popl
pusha
movb
lea
jmp
movb
call
pushf
mov
push
pushf
lea
jmp
pusha
pushl
popl
pushf
pushl
pushf
movw
lea
jmp
pushl
popl
mov
pushl
lea
jmp
mov
call
mov
mov
pusha
movw
mov
call
not
stc
aam
movsbw
mov
pusha
lea
pop
btr
mov
cwtl
aam
mov
not
aam
pushl
popf
pop
mov
pushf
not
mov
xchg
pushf
call
cmc
and
push
pushf
mov
mov
jmp
lea
js
push
mov
push
push
pushf
lea
jmp
pushf
mov
pushf
popl
pushf
jmp
pushl
popl
movw
movb
mov
lea
jmp
pushf
push
mov
ror
pushf
pusha
jmp
mov
setp
mov
movb
mov
pushl
ret
push
jmp
dec
stc
pusha
pusha
add
bt
ror
jmp
mov
movw
push
mov
mov
pushf
mov
mov
push
mov
lea
jmp
sub
clc
shr
jmp
pushf
pushf
jmp
add
bt
stc
stc
mov
lea
je
clc
test
cmp
sub
jmp
call
sub
call
cld
pusha
push
pushf
call
push
mov
pushf
push
push
lea
jmp
pusha
pushf
pusha
mov
movb
mov
push
pushf
mov
call
jmp
jmp
pushf
mov
pushl
movb
lea
jmp
jmp
bt
mov
neg
rol
rcl
push
mov
stc
add
jl
push
sub
call
pushf
jmp
pusha
pushl
mov
push
pushf
pushf
popl
pushf
call
call
dec
movsbw
clc
pushf
ror
bts
setb
cmp
ror
add
bsr
setnp
test
add
bt
movzbw
xor
shl
rcr
movzbl
jmp
pusha
stc
shl
mov
clc
cmp
pushl
pusha
xor
clc
cmc
add
stc
push
jmp
add
jmp
pushf
pusha
mov
call
mov
pushf
pushl
mov
call
jmp
push
mov
movb
mov
push
mov
jmp
mov
call
movb
pushf
mov
jmp
sbb
mov
sub
push
inc
movb
mov
cmc
cmp
sub
bt
cmc
clc
bt
shl
call
jmp
setne
rol
sub
jmp
pushf
mov
pushf
mov
pushf
call
add
push
call
mov
mov
pushl
popl
mov
mov
mov
lea
jmp
jmp
call
mov
movw
mov
pusha
mov
call
fstpl
pushf
lea
jmp
jmp
