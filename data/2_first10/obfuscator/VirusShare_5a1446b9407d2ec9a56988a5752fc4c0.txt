push
call
ret
ret
jl
jno
pusha
cld
cmp
movsb
mov
fisubrl
orb
pop
mov
orb
mov
cmpb
out
cmpsb
out
pop
roll
aas
enter
gs
and
inc
add
lock
pushf
test
push
mov
imul
out
push
shll
pop
ljmp
dec
rcll
lcall
jmp
jg
mov
cli
out
mov
xor
dec
add
xor
jp
mov
imulb
test
test
xchg
test
mov
mov
adc
aam
add
and
cmp
jmp
xchg
ret
sarb
sub
jp
jb
jecxz
fcmovnu
pop
ret
inc
push
insl
mov
sahf
cld
xor
lret
fwait
push
dec
pushf
shl
test
into
sub
and
clc
jmp
mov
jmp
mov
test
or
shlb
xchg
shlb
stos
int3
in
mov
iret
int3
fldt
movaps
aaa
or
or
nop
inc
or
xor
or
test
sub
push
xchg
push
rcr
repnz
lods
mov
or
outsl
mov
push
push
std
js
sarb
sub
iret
xor
jae
fistpll
negl
sbb
and
popa
outsb
xchg
inc
xlat
mov
pop
and
lret
lods
adc
fstpl
dec
xchg
sbb
stc
xchg
push
lret
pop
or
loop
mov
pop
jno
mov
shlb
cs
insb
pop
xor
mov
xor
aaa
lock
mov
dec
imul
daa
jl
les
pop
mov
scas
movsb
adc
addr16
xor
fcoms
aas
cld
mulb
add
imul
add
out
pop
inc
mov
or
pusha
lods
nop
loope
jnp
jp
pop
sti
loop
push
dec
gs
pop
dec
arpl
push
xchg
mov
push
xor
mov
test
lea
pop
nop
dec
stos
push
mov
push
gs
xor
sbb
mov
mov
inc
inc
and
mov
inc
icebp
in
or
loop
dec
ljmp
xor
adc
fdiv
push
pop
mov
or
int
pop
mov
push
xchg
add
lock
enter
repnz
or
ret
fwait
and
sbb
lock
mov
inc
fsubr
mov
push
out
fidivs
movsb
cmp
push
xor
scas
out
inc
mov
das
push
sbb
nop
out
jecxz
jne
in
rcrb
sub
dec
sbb
into
add
lds
jge
dec
lahf
in
add
inc
add
test
jbe
inc
mov
icebp
adc
and
mov
hlt
imul
into
push
sarb
pop
pop
inc
repz
xlat
pop
bound
out
out
pop
push
sub
jg
inc
lcall
imulb
push
aas
or
addr16
xchg
dec
and
cmp
pop
mov
insl
xchg
inc
rorl
enter
pop
sahf
jg
push
mov
dec
ret
arpl
shrl
or
icebp
dec
pop
fnstenv
ljmp
sub
add
add
dec
fsqrt
adc
scas
cld
or
mov
push
and
les
roll
imul
jae
in
std
pop
sbb
pusha
cmpsb
add
jne
xchg
push
fsubp
out
aas
inc
sbb
test
or
loope
mov
fwait
rcrl
sbb
mov
ja
jmp
divb
push
lret
cmp
test
pop
xorl
lahf
mov
pushf
push
jp
cmp
xchg
pop
dec
add
aaa
mov
fs
icebp
cltd
insb
insb
lds
aam
iret
mov
jle
push
inc
pop
lea
cmp
call
jbe
push
fiaddl
inc
cmp
mov
pop
insl
sub
jge
push
adc
pushf
mov
sbb
xor
mov
daa
dec
pop
add
pop
test
or
mov
jnp
and
xor
mov
aaa
sbb
push
les
aas
xor
sbb
pop
adc
cwtl
cmp
cwtl
aam
jmp
xor
or
add
ds
aaa
cmp
out
lahf
sub
out
and
cmpsb
mov
negb
daa
cmp
icebp
es
fsubrs
inc
push
mov
stos
outsl
jb
dec
cmp
mov
mov
je
clc
mov
dec
fwait
orl
dec
cmc
ja
js
jnp
pop
add
inc
pop
jge
stc
outsl
lods
pop
xchg
lock
push
lcall
or
xor
dec
lds
push
mov
icebp
stc
mov
ret
lcall
jp
or
inc
mov
xor
mov
sbb
lods
jge
mov
mov
test
dec
inc
adc
push
sbb
scas
in
lret
test
fisubs
inc
in
inc
dec
mov
ret
idiv
enter
push
int3
cmp
push
or
das
lret
xchg
and
xchg
add
push
scas
cli
mov
fwait
mov
jb
fists
and
cmpsb
imul
push
ds
in
ljmp
and
jecxz
shlb
mul
test
add
outsb
es
mov
mov
addr16
mov
aad
notb
pop
fxch
rcl
cmp
fdivl
loop
hlt
ret
pop
mov
mov
mov
push
jmp
mov
xor
in
adc
dec
xor
cmp
enter
dec
jnp
pop
xor
cmpsb
push
inc
mov
mov
imul
outsl
lcall
fbld
dec
loopne
into
cmpsl
mov
push
scas
or
cmp
sub
divb
jae
cmp
rorb
andl
sub
pop
adc
ss
pop
xchg
ja
mov
fists
lods
in
mov
xlat
add
mov
pop
adc
imul
mov
mov
sti
loop
inc
nop
scas
and
js
ret
sub
ficompl
add
dec
mov
push
or
loope
outsb
pop
mov
dec
adc
and
hlt
test
fwait
mov
xor
jne
cmp
cs
mov
push
shrb
loope
dec
xchg
mov
mov
sub
cwtl
inc
lret
mov
cmpsl
adc
pop
push
or
js
ljmp
jno
xchg
pop
jg
push
jl
dec
shll
jb
push
push
out
clc
imul
sub
push
or
stos
or
int3
fadd
clc
cld
arpl
add
cmp
shlb
pop
or
aad
leave
mov
loopne
aas
ss
jg
and
push
pop
mov
xor
cld
add
ror
ja
out
fcomp
add
add
bound
ss
pop
cwtl
lcall
push
and
fsubr
ficoms
xorl
or
mov
lods
sahf
add
adc
aas
sub
dec
sub
xor
adc
dec
addb
sub
dec
adc
mov
test
inc
addr16
js
sbb
mov
and
mov
or
xchg
sbb
push
push
repnz
in
mov
xchg
dec
daa
or
lock
les
push
or
mov
fwait
mov
adc
jb
pop
iret
and
mov
xchg
push
push
hlt
lds
xor
in
fisttpll
lcall
movsl
sub
gs
pop
fdivs
lcall
lahf
mov
jecxz
cmp
arpl
lock
dec
insb
in
out
js
or
or
pop
mov
pushf
mov
and
sbb
pop
inc
jmp
imul
dec
cmc
loopne
jnp
loope
or
xlat
cmp
scas
xor
sahf
mov
pop
inc
ljmp
sbb
imul
add
pop
cltd
cmpsl
push
jl
repnz
das
mov
push
add
jle
ficoms
loope
jg
dec
inc
sub
mov
movsl
or
stos
sbb
jmp
mov
fs
mov
cmp
shlb
iret
xor
aas
aaa
jne
inc
frstor
xor
xchg
sub
mov
fildl
and
je
fisttps
xchg
jns
insl
or
xchg
pop
ficomps
hlt
movsl
mov
xchg
bound
push
mov
test
pushf
add
mov
and
xor
mov
fs
cmpsl
xor
jb
fldl
insl
lret
mov
mov
notb
aad
push
pop
mov
push
sbb
ja
lock
jnp
xorl
ss
dec
mov
aad
mov
sbb
movsl
inc
pop
pop
mov
imul
cmpsl
pop
pop
addr16
mov
mov
sub
sub
movsl
cmp
out
inc
cli
jge
push
xchg
and
loopne
mov
or
push
cmp
xchg
xchg
mov
dec
fisttpl
xor
inc
mov
dec
cmpsl
pop
dec
cmp
sub
and
mov
inc
in
inc
loop
dec
das
dec
or
xchg
push
mov
js
stc
mov
rorb
or
mov
push
addl
xor
xor
negl
add
sbb
js
cmpsb
jb
adc
pop
mov
add
cld
jg
sbb
out
sbb
or
mov
scas
dec
shlb
mov
insl
cmp
rcrb
mov
mov
mov
mov
clc
or
cs
mov
test
movsl
test
lods
mov
scas
jmp
cld
sbb
ss
cmp
cmpb
push
jle
fdivrs
and
stos
or
sub
lea
loopne
in
adc
dec
xchg
lahf
es
aas
repnz
ret
lret
stos
cmpsl
push
or
iret
pop
popf
push
xchg
or
inc
lahf
xlat
add
mov
xchg
rorl
sahf
sub
into
nop
push
add
mov
subl
xor
das
or
inc
fbld
mov
pop
adc
adc
loopne
stos
mov
ds
inc
jbe
jno
dec
call
lods
mov
adc
and
loopne
orb
pop
out
push
push
movl
jno
sbb
inc
mov
outsb
push
or
xchg
aaa
mov
mov
andl
enter
int
xor
jle
xlat
loopne
pop
outsl
pop
dec
imul
negl
jl
jle
jmp
mov
jg
ljmp
jmp
and
adc
inc
jmp
test
fnsave
pusha
cmp
mov
xlat
cwtl
and
pop
mov
inc
push
adc
orb
adc
lahf
sbb
addl
push
jl
ja
sahf
fadds
inc
cmpsl
xchg
jnp
mov
int3
js
mov
jecxz
jno
inc
xor
orb
sbb
outsb
sarb
out
push
pop
inc
sbb
cmpsl
adc
xor
fwait
pusha
in
mov
xor
mov
xchg
and
test
sub
sub
jg
xchg
dec
xor
mov
xlat
sub
lods
ss
xchg
outsb
fiaddl
mov
adc
inc
ljmp
mov
or
lods
cli
dec
daa
call
in
and
sti
push
mov
mov
outsb
mov
push
cmpb
or
or
ljmp
or
in
or
jl
inc
clc
aaa
shr
gs
movsb
clc
xchg
insb
jbe
sbb
mov
imul
mov
push
test
mov
outsl
lds
jb
push
xor
push
cmp
imul
cmp
xor
cmpb
and
faddl
pushf
into
addr16
stos
popf
lods
mov
loop
cmp
xor
bound
push
sub
test
cwtl
call
pop
xor
lahf
sbb
js
popl
mov
pop
lds
dec
clc
cmp
hlt
rclb
popa
cmp
fwait
scas
dec
jno
jne
inc
ss
mov
aaa
xchg
shlb
je
jge
lock
push
jg
shrb
scas
xchg
lods
mov
sub
test
test
loope
inc
outsb
pop
fs
aas
mov
fcmovb
and
in
cwtl
cs
jp
pop
test
out
lea
aaa
adc
inc
aas
mov
arpl
lods
dec
cwtl
cmpl
iret
mov
pop
jl
out
popf
push
xchg
adc
shrb
rorl
aaa
lcall
lret
xchg
adc
inc
andb
in
jg
pop
pop
xor
or
xor
in
les
addr16
jb
dec
and
stc
lret
aad
push
ret
and
rcrb
jge
loope
icebp
lret
xchg
add
imul
lret
lcall
dec
fs
into
fistps
es
scas
xchg
mov
push
sbb
add
jge
ja
je
add
fstpl
aad
jbe
pop
in
push
fwait
out
and
mov
sbb
mov
push
mov
mov
insl
aad
add
and
mov
mov
popaw
xor
rorb
aam
lret
aaa
enter
xor
leave
dec
dec
jns
insl
enter
and
arpl
sarl
xor
shrb
mov
rep
cmpsl
add
pop
cmp
ljmp
mov
xchg
std
popa
add
rolb
cs
stc
test
push
rcll
fstps
sub
fs
icebp
pop
test
jmp
jbe
xor
insl
aas
add
jne
and
add
movsb
mov
test
mov
inc
mov
movsl
sbb
ss
mov
lcall
lock
jmp
pusha
sub
and
test
fnstsw
sub
outsl
repz
mov
inc
or
pop
popl
adc
mov
xchg
adc
aam
aas
sbb
sub
sub
push
movsl
lcall
insb
test
xchg
jge
adc
popa
hlt
mov
fidivl
repnz
lods
push
cmp
push
jo
clc
out
in
ret
push
enter
ss
and
fcoml
mov
dec
or
mov
cmp
popa
subl
jp
sub
imul
inc
xchg
dec
imul
mov
jnp
or
sar
pop
into
rorb
dec
sub
sbb
cmpsl
and
je
sub
push
adc
jmp
daa
outsl
mov
and
out
sub
jp
jmp
mov
cld
ja
sub
pushf
outsl
das
and
add
out
mov
jl
cmp
mov
loope
cmp
adc
sub
into
fmuls
jnp
xchg
insb
xchg
sub
shr
hlt
cmpl
sub
mov
fs
xchg
dec
adc
jb
hlt
mov
jmp
rolb
pusha
cmp
or
shlb
adc
mov
lea
ret
lret
jle
ret
adc
xchg
aas
mov
in
int
aam
or
cld
mov
inc
jbe
sbb
insl
or
push
lret
cld
inc
call
cmp
clc
xchg
hlt
cli
sub
mov
push
les
sbb
cld
into
dec
loopne
sub
cmp
int3
pop
inc
fidivrs
add
dec
pop
ja
addr16
rcrl
cmp
es
mov
inc
cld
pop
cmc
push
js
andl
cli
mov
mov
iret
out
mov
mov
aas
stc
and
jmpw
stc
push
xchg
cwtl
jp
insl
mov
in
enter
gs
fsub
inc
es
ja
add
loope
pop
ja
xor
adc
xchg
stos
mov
std
xchg
jmp
jmp
lock
mov
iret
and
jae
cs
adc
fdivs
mov
inc
jle
push
addl
xchg
push
out
not
pop
fstpl
lret
arpl
sbb
cmpsl
mov
cmpb
jecxz
push
sahf
sbb
repz
ja
cwtl
mov
dec
int3
aas
jle
or
and
negl
jle
lea
jne
mov
cli
and
das
jo
xor
mov
test
testb
mov
jp
pop
out
popa
pop
xchg
jmp
cmc
jmp
pop
es
adc
out
or
arpl
fisubrs
repnz
cltd
pop
lock
mul
inc
decl
stos
sub
mov
cmp
mov
fbstp
inc
filds
fcomp
je
dec
jo
lret
loope
xor
enter
inc
cmp
daa
pusha
push
mov
pop
pop
lea
sbb
push
push
andb
sub
adc
mov
sbb
cwtl
mul
cmp
cmp
call
mov
and
cmp
or
insl
xchg
icebp
out
jecxz
fsubs
test
out
mov
inc
cmp
xor
call
push
xchg
push
cmp
nop
repz
mov
clc
arpl
jns
js
in
pop
pop
cmp
inc
jbe
mov
in
loope
lds
inc
jne
dec
mov
jne
subl
lds
popa
mov
aaa
aam
ret
mov
push
jl
imul
jg
aas
xor
scas
pop
jecxz
mov
xchg
popf
adc
movb
out
push
sarb
and
call
out
sbb
es
fmul
add
negl
dec
arpl
popf
or
sub
xor
push
inc
mov
scas
mov
dec
addr16
or
ret
inc
or
fiadds
addr16
aaa
jecxz
sbb
cld
icebp
lret
inc
jmp
sbb
and
sbb
sbb
push
bound
ss
insl
xchg
fildl
dec
add
gs
adc
out
mov
jbe
jae
jbe
loopne
jno
cmp
adc
and
or
movsb
and
rclb
sarl
mov
int
mov
aad
out
adc
cwtl
or
mov
fwait
out
lea
and
jmp
sbb
mov
and
sub
fsubr
xchg
es
mov
popa
jge
or
iret
stc
lods
call
xchg
mov
rcrb
jmp
imul
imul
mov
dec
mov
enter
xchg
or
lds
inc
jecxz
inc
jl
dec
xor
lds
test
test
push
aad
popa
push
inc
sbb
stos
insb
mov
pop
cmp
jmp
test
repz
xchg
cmp
jle
repz
xor
jle
fs
jae
push
dec
add
bound
push
inc
in
push
mov
or
repnz
imul
jnp
push
mov
add
jge
fdivl
adc
add
add
jmp
push
in
rclb
imul
shll
lret
ja
fildl
sahf
jmp
pop
ficoms
jmp
mov
jge
mov
jp
fstl
popa
inc
dec
imulb
js
adc
fcoml
push
cli
cmp
cmp
xchg
test
pop
sbb
dec
mov
push
and
aas
outsl
inc
clc
inc
xchg
icebp
push
cmp
sbb
imul
jno
and
std
xchg
cmpsb
sub
jne
in
lcall
rolb
inc
pop
out
jo
dec
or
xchg
sbb
xor
test
mov
out
into
arpl
xchg
dec
push
mov
xlat
fldl
fwait
adc
test
add
outsl
xchg
imul
sbb
addr16
xor
pop
push
out
jnp
push
dec
mov
iret
pop
cmp
cltd
or
jae
lock
adc
sahf
ret
bound
loop
lcall
clc
or
fdivl
mov
fstps
inc
sbb
loope
or
mov
add
push
adc
push
test
mov
insb
repnz
and
out
imul
sbb
pop
in
inc
nop
xor
pusha
cmp
cmp
pop
and
push
rclb
adc
xchg
pop
lea
lock
outsb
adc
cmp
cltd
es
iret
xorb
rolb
cs
nop
jne
cmp
leave
setge
dec
sub
jge
fs
repz
add
lods
mov
inc
sbb
outsl
inc
mov
popa
xchg
jmp
fs
daa
pop
dec
pop
mov
call
cltd
mov
addr16
or
hlt
js
cmp
mov
jb
hlt
sub
fwait
pop
addl
lds
cld
testl
in
lds
mov
scas
repnz
cmp
push
cmp
and
sub
cmp
xor
jg
adc
std
inc
mov
or
dec
cmp
push
inc
pushf
pop
cwtl
and
in
add
push
cmp
incb
int
xor
mov
sbb
adc
pusha
xchg
inc
sbb
jns
pop
es
and
or
ficoml
mov
lods
sbb
mov
or
mov
sbb
mov
aad
and
addr16
adc
fsts
or
add
dec
jb
push
sbb
pop
add
ds
jmp
aad
aas
call
mov
ds
pop
hlt
std
cmpsb
mov
fistpl
push
jl
leave
mov
bswap
pusha
or
sbb
sbb
dec
xor
test
push
sub
movsl
pop
adc
pop
test
push
mov
or
mov
xchg
rorb
xchg
add
fbstp
test
mov
xchg
inc
iret
pusha
xchg
mov
jmp
xchg
sti
cmpsl
sarb
xchg
and
inc
mov
and
in
daa
xchg
cltd
gs
xchg
fs
dec
mov
rorb
cmpsb
xchg
mov
xor
out
mov
in
shlb
and
or
adc
jmp
inc
movsb
and
in
out
pop
sub
jmp
rcr
jg
dec
mov
cmp
cmp
jnp
cmpb
lea
test
xchg
adcb
lock
sub
pushf
dec
addr16
mov
fidivrl
daa
dec
movsl
ja
dec
xchg
inc
xlat
es
sub
mov
xchg
leave
clc
ror
mov
sti
test
pop
jbe
sbb
jbe
jns
je
aad
test
popa
loop
or
xorps
or
mov
movsl
inc
pop
mov
mov
fldl
add
aas
mov
lds
sub
fistl
xor
iret
sbb
out
nop
in
lret
leave
add
ret
sbb
outsl
sub
ret
shl
out
xchg
cmp
popa
outsb
adc
cmpsb
out
enter
je
dec
sbb
pushf
xorb
lods
add
adc
xchg
lods
xchg
cltd
and
mov
push
mov
xchg
scas
xlat
mov
jp
mov
leave
adc
push
xlat
pushf
or
in
jge
aas
push
dec
sub
das
fwait
sti
arpl
mov
mov
ljmp
add
enter
movsl
jecxz
arpl
mov
push
repnz
daa
loop
mov
mov
sahf
cwtl
jbe
sbb
mov
mov
add
fdivrs
sbbl
push
test
arpl
pop
add
xor
dec
gs
in
sub
sar
push
rcr
xchg
popa
xchg
and
scas
out
or
inc
jg
push
xchg
push
inc
roll
cmp
js
clc
xchg
push
mov
test
sbb
sbb
add
inc
dec
js
in
sbb
out
mov
aad
mov
arpl
in
sub
sub
add
out
push
fidivrl
inc
scas
xchg
mov
mov
pop
fsubrl
arpl
outsb
lret
out
dec
lods
jnp
pop
jecxz
out
or
jo
push
mov
xchg
fistps
out
aaa
inc
mov
inc
push
pop
mov
movsl
loop
sbb
idiv
xchg
xor
cmpsl
stos
mov
mov
les
mov
fwait
leave
cmp
fisttpl
sqrtps
xor
cmc
add
xchg
mov
push
dec
cmp
mov
fnsave
pushf
addl
pop
pusha
jl
sub
cmp
cmp
inc
jnp
aam
add
je
scas
mov
lods
cld
sbb
dec
xchg
sub
pop
pop
adc
cmp
rep
bound
int3
insb
bound
lcall
push
adc
out
in
cmp
mov
or
mov
fidivrl
aas
xchg
mov
sub
adc
mov
out
pop
mov
jno
bound
loopne
lret
cwtl
mov
xlat
xchg
cwtl
adc
add
inc
and
add
bound
adc
pop
test
sahf
dec
adc
jne
or
xor
cmp
cltd
cmp
fstps
add
mov
lea
or
jne
bound
xchg
outsb
cli
xor
mov
jo
jnp
popa
or
inc
add
std
cli
stc
push
pop
inc
sbb
xor
fxtract
and
adc
int
lods
leave
lcall
cs
insl
scas
lock
lods
test
es
sbb
pop
jecxz
adc
test
test
cvtpi2ps
mov
jnp
inc
inc
jno
rcrl
gs
xlat
mov
pusha
adc
push
iret
daa
popf
sti
outsb
add
dec
bswap
les
push
and
inc
movl
out
test
add
mov
out
adc
insl
dec
fistps
mov
mov
pop
scas
mov
pusha
imull
mov
jb
negb
sub
ja
daa
add
xor
stos
imul
and
movsl
mov
inc
add
bnd
xchg
int
in
add
std
sar
ss
fsubl
out
lret
mov
pusha
dec
fdivrl
pop
out
and
mov
inc
inc
push
inc
cwtl
mov
imulb
cmpl
std
ljmp
mov
xchg
leave
loopne
ja
add
mov
sub
adc
out
and
dec
push
push
mov
aam
xchg
adc
pop
pop
or
popf
out
adc
sub
je
and
jno
daa
jbe
push
xchg
or
fcomi
adc
pop
xchg
xchg
mov
dec
ror
fcoml
adc
mov
cmp
test
rclb
dec
lock
pop
aad
push
xchg
xchg
pop
dec
lcall
fsubs
push
jne
pop
add
test
mov
dec
aas
jb
shll
repnz
cli
adc
cmp
add
mov
je
mov
adc
shll
roll
adc
fsts
jp
pushf
jge
test
call
sbb
cmp
xchg
add
jo
sub
mov
mov
mov
sbb
push
jp
fistpll
adc
loope
pop
or
aam
pop
sti
shrl
shl
pop
cmp
inc
adc
cmp
sti
pop
fdivrs
je
std
insb
sbb
sub
popa
lea
xor
mov
cmpsb
inc
lcall
inc
test
mov
adc
cmc
mov
ror
insl
in
mov
adc
les
xchg
sub
push
adc
cmc
or
repnz
test
mov
je
push
iret
out
incl
shrb
push
push
mov
sbb
mov
jg
and
cmpsb
aad
andb
and
out
movsl
xchg
cmc
adc
imul
inc
loope
in
jmp
pop
call
cmovg
mov
fcoms
rep
aad
leave
mov
iret
mov
fisubrs
mov
mov
stc
pop
add
sub
repnz
push
push
test
mov
and
and
push
dec
test
lods
sub
es
dec
sub
pop
cld
jmp
xor
in
xchg
mov
inc
sbb
cmp
or
mov
mov
test
cmp
xchg
xlat
jecxz
sahf
mov
inc
mov
in
pop
in
and
mov
sarb
rclb
or
out
xchg
jg
mov
fstpl
test
es
pop
and
test
cs
xor
into
adc
push
sbb
mov
pop
notb
sbb
add
aas
shll
sub
in
push
sub
pusha
sub
inc
repz
sahf
stos
push
push
dec
arpl
imul
and
inc
sbb
inc
aaa
scas
adc
jae
cli
sbb
in
enter
mov
lds
push
outsl
jbe
xor
pushf
mov
cmp
sbb
or
xchg
adc
sub
add
jecxz
pop
inc
fwait
mov
or
sbb
cmpsb
ret
pop
mov
inc
cmpsl
adc
dec
insl
sub
xchg
mov
dec
imul
into
push
movaps
jge
dec
cmp
movsb
jl
bound
icebp
les
jmp
adc
aad
push
das
and
es
push
sub
mov
aad
hlt
push
or
sub
xorb
pop
ljmp
cmpl
cmp
mov
xor
mov
cs
sbb
dec
mov
pop
dec
adc
int3
dec
movsb
inc
loop
cmp
test
add
leave
cld
dec
icebp
enter
lret
mov
popf
push
pop
imul
icebp
dec
fisubs
mov
mov
mov
fsubrl
lea
lret
or
mov
xor
aaa
lret
insb
add
lock
inc
loope
lock
mov
push
nop
jo
lret
jecxz
jecxz
sti
out
xor
mov
icebp
aad
scas
pop
push
dec
flds
sbb
push
fldenv
cmp
rcr
out
mov
adc
aad
xor
ss
imul
mov
mov
mov
xor
stc
xchg
outsl
cwtl
xor
pop
lahf
imul
xor
fwait
sbb
imulb
add
insl
xlat
add
sub
pop
xor
xor
adcb
std
sbb
std
and
mov
or
loop
clc
ret
sahf
add
repnz
push
in
jecxz
fstps
inc
cmp
ret
adc
stos
fwait
sbb
fstl
enter
es
js
aaa
add
xor
int
stos
imul
repz
adc
lds
pop
dec
jo
cmpsb
rcrl
cld
inc
out
mov
xor
jg
dec
dec
imul
mov
mov
jmp
sbb
fwait
in
cli
inc
inc
push
out
inc
mov
mov
inc
mov
int3
pop
ret
jne
mov
dec
sub
and
fstps
xchg
push
out
push
jae
xchg
dec
loopne
iret
and
leave
scas
adc
push
sahf
std
and
das
mov
pop
hlt
mov
inc
inc
lcall
xor
inc
int
les
gs
int
insb
dec
cmp
mov
pusha
int
or
pop
sbb
or
movsw
int3
out
movsb
or
stos
add
imul
jae
jmp
inc
xor
jbe
pop
jmp
xor
adc
movsb
jne
sbb
mov
and
adc
jmp
jmp
test
lock
dec
mov
or
out
mov
das
jge
mov
fbld
stos
push
fcompl
jae
mov
in
mov
xchg
inc
fsubr
pop
jmp
lea
xor
mov
jl
dec
push
mov
dec
lea
inc
shll
lods
cmpsl
call
lret
in
pusha
scas
cwtl
pop
push
int3
cmpsl
mul
cs
outsb
adc
lock
push
and
iret
xlat
mov
mov
cmp
inc
add
pop
fdiv
scas
and
js
pop
cmp
mov
cmp
jnp
mov
sub
mov
push
es
ss
push
out
fisubrl
sbb
loop
test
mov
aam
jp
or
xchg
or
mov
push
into
mov
lahf
fs
test
pop
int
iret
out
pop
pop
mov
in
jnp
mov
call
ret
stos
dec
and
iret
adc
das
mov
es
jne
push
fistpll
not
mov
add
mov
movd
jnp
ret
add
push
nop
push
cmp
xchg
inc
stos
push
cmp
adc
mul
in
push
push
lahf
xchg
xor
out
mov
xchg
push
jo
daa
addb
iret
push
push
or
adc
mov
ja
mov
loopne
pushf
mov
mov
push
pop
fists
test
stc
mulb
mov
fwait
and
inc
fs
call
fwait
popf
pop
shrl
out
lea
push
sbb
jp
inc
adc
fwait
fs
popf
sub
mov
lret
dec
xor
cwtl
xor
fwait
nop
leave
mov
or
pop
add
xchg
xor
imul
jb
mov
bswap
cld
ss
fisttpll
mov
scas
insb
mov
stos
loope
xchg
insb
popa
mov
mov
stos
cmp
icebp
mov
sbb
bound
jnp
popa
test
add
mov
sbb
hlt
es
lea
xchg
push
inc
sbb
and
mov
mov
test
gs
jae
push
ja
inc
mov
cmp
xor
dec
jno
in
inc
mov
repnz
jns
mov
in
pusha
fistl
mov
xor
js
push
nop
aam
mov
cld
jle
out
imul
pop
and
mov
jo
or
mull
jnp
jb
jecxz
popf
lret
lcall
fcoms
inc
push
dec
movsb
and
rcll
sbb
sub
roll
scas
fsubs
iret
ret
sub
sub
js
inc
xor
repnz
icebp
xchg
es
cmp
test
jl,pt
xor
fwait
decl
or
mov
lret
fnstcw
das
pop
push
dec
inc
jns
add
xchg
aas
inc
fwait
push
fisttps
push
jge
mov
inc
mov
lock
ljmp
lods
hlt
int3
jb
ss
mov
inc
popa
addl
jge
outsb
mov
bound
pop
lret
aad
scas
mov
inc
dec
sbb
movsb
pop
jg
cld
jp
rclb
and
shr
and
movsl
sbb
test
cmp
push
mov
xor
clc
jne
dec
pop
xchg
xor
lods
inc
cmpsl
mov
dec
out
ljmp
xor
jmp
ja
out
ljmp
push
push
xchg
add
mov
movsl
rolb
mov
sbb
adc
lods
mov
sub
dec
movsl
lcall
xor
sbb
pop
push
cmovnp
jb
popf
bound
mov
xor
dec
call
sub
cmp
push
daa
pop
dec
lods
dec
jge
int3
and
scas
out
pop
xor
mov
mov
into
sub
call
jno
iret
mov
jno
mov
push
lcall
or
daa
push
ret
addl
mov
aam
inc
negb
xorb
cmpsl
into
clc
in
dec
cltd
jp
add
jmp
push
mov
inc
pusha
fsubl
cmp
dec
xchg
dec
int
adc
or
push
jl
adc
jns
pop
push
fldl2e
stos
dec
push
add
out
mov
mov
jno
imul
add
add
loop
das
mov
push
mov
aad
add
sbb
ljmp
or
add
jecxz
pusha
push
push
add
jns
sbb
clc
aad
scas
push
or
sub
cmpsb
sub
mov
inc
sub
lods
cmp
inc
push
int
xor
ja
scas
lds
dec
xchg
int3
inc
xor
lcall
inc
fdivrs
out
daa
divb
sub
mov
jl
cs
inc
daa
or
cmp
mov
xor
ret
enter
dec
test
xor
sbb
cmp
mov
inc
jl
je
orl
movb
mov
fcmovbe
jns
fdivs
push
mov
xor
adc
push
and
ja
sti
stos
iret
fcoml
sub
repz
in
and
popa
test
add
int
mov
rcrl
das
jl
fdivrs
push
jge
and
iret
iret
xchg
push
fldcw
mov
dec
orl
cld
push
jge
imul
xchg
push
pop
cld
ret
push
insl
mov
pop
pop
jne
xor
pop
adc
das
outsl
shr
into
and
dec
imul
or
push
ds
scas
movsl
push
cmpsb
je
test
adcl
ret
fmul
int3
es
add
into
out
es
lds
test
xchg
lea
inc
and
pop
ja
out
movmskps
imul
jle
xchg
in
stc
es
ret
sahf
loope
jae
mov
data16
mov
cmp
fcomps
cld
xchg
jmp
bound
cmp
jecxz
or
ljmp
and
and
adc
sub
xchg
fucomip
std
out
jbe
leave
ret
inc
inc
add
fildll
xchg
push
cmp
xchg
test
sbb
cwtl
pop
or
andb
lcall
jno
mov
xchg
or
cwtl
pusha
je
scas
push
jmp
add
xchg
add
sbb
push
daa
clc
xchg
adc
fcmovbe
jecxz
jg
mov
sbb
add
test
into
out
fnstenv
cmp
or
imul
daa
sub
xor
xchg
in
xchg
jbe
fs
ret
pop
jbe
cmp
sbb
insl
cmpsb
mov
in
mov
inc
movsl
jp
jne
out
andl
xchg
pop
mov
daa
pusha
push
aad
lret
popf
add
arpl
xor
sub
repnz
push
test
inc
fdivrs
imul
mov
int3
mov
in
loope,pn
adc
xor
out
xor
andnps
mov
loope
or
jb
push
xchg
out
sbb
push
mov
jl
mov
mov
add
mov
shlb
sub
xor
jno
in
sahf
xchg
addr16
pop
cltd
jmp
andb
rcrb
sub
pop
or
jecxz
sti
sub
out
rdmsr
adc
aad
daa
cmpl
fstl
jmp
lret
mov
test
dec
out
and
jmp
inc
inc
add
add
pop
andl
std
dec
shll
fnsetpm(287
adc
mov
repnz
shrb
mov
lds
lds
mov
loopne
pop
jnp
aaa
jbe
arpl
nop
fnsave
or
sti
inc
mov
loopne
sub
jmp
mov
cmc
mov
je
sub
ljmp
fsubr
fcmove
ljmp
jne
or
cmpb
fnsave
js
xchg
pop
in
inc
sub
imul
inc
sahf
test
xor
addr16
mov
cmc
and
pusha
add
adc
push
mov
shll
test
dec
mov
icebp
fisubrs
or
cmp
xchg
ds
sahf
pop
pop
mov
mov
and
aam
inc
out
cmp
cmp
in
or
jmp
sahf
add
mov
or
mov
ss
fadds
dec
cmp
ljmp
outsb
xchg
cmp
and
xor
mov
cmc
lock
pushf
mov
movsb
push
dec
sub
cld
lods
aaa
fwait
test
es
lock
int3
mov
or
push
clc
lcall
inc
pop
sub
mov
xchg
mov
push
xor
popa
js
or
out
movsb
mov
pop
mov
inc
je
sub
xor
push
fmull
add
jle
imulb
mov
add
inc
mov
dec
mov
adc
fildll
and
and
stos
jne
mov
int
jl
xchg
test
jp
hlt
out
add
hlt
outsb
dec
imul
scas
call
int
dec
xchg
loop
hlt
cmp
movsl
push
aam
fistpll
iret
sbb
fsubs
push
push
xor
daa
stc
fcmovbe
cld
lea
stc
cmpsb
cmpsb
dec
and
aaa
loope
std
push
push
inc
hlt
sbb
jge
push
cmc
in
out
add
cmp
out
aad
jge
xchg
fmull
out
mov
add
push
pop
lods
rcll
mov
movsb
adc
adc
inc
dec
pop
xchg
hlt
mov
sarl
popf
mov
xchg
and
jmp
dec
and
in
jle
loopne
out
rcrl
add
in
dec
clc
xchg
mov
aam
fsubrl
pop
xchg
xchg
sbb
test
add
notl
cmp
adc
adc
cmp
shlb
loopne
mov
push
arpl
mov
ds
or
cmpsl
insb
or
xor
enter
and
cld
clc
repz
sub
daa
ret
mov
stos
cwtl
inc
add
lods
fiadds
arpl
fisttpl
pop
cmp
movl
mov
push
fs
stos
in
pop
cmp
jp
xchg
lahf
repz
lds
xor
movsb
or
xor
push
int3
das
mov
movsb
xchg
pop
rclb
pop
xor
or
ret
test
and
idiv
mov
in
out
xor
es
ret
add
cltd
mov
mov
or
mov
loope
imul
loop
js
std
cmp
inc
xchg
frstpm(287
testb
subl
pop
repnz
mov
ret
mov
sbb
pop
add
fstpl
push
montmul
cmpsb
inc
cmp
push
cwtl
adc
xchg
push
jbe
pop
xchg
xchg
fadds
mov
mov
lds
outsb
fsub
sarb
loopne
cwtl
dec
add
daa
pop
and
or
push
loopne
ljmp
outsb
lea
dec
xor
pop
das
les
daa
add
inc
shl
push
mov
push
push
jle
data16
pop
in
imul
push
inc
outsb
xchg
mov
push
mov
mov
fnstcw
mov
out
fucomip
or
dec
sub
in
adcb
into
xor
scas
call
pop
cld
dec
rolb
mov
mov
aaa
ficoml
cli
ret
out
js
jg
add
pop
popa
mov
aaa
icebp
cmp
and
out
test
out
lock
push
xor
adc
pop
xor
or
sub
cmp
das
fmull
inc
outsb
leave
imul
sbb
pop
push
jnp
std
lret
imul
bound
fdivrp
pop
jmp
cmp
aad
outsl
push
int3
pusha
and
bound
nop
fisubl
pop
xor
sbb
pop
js
push
clc
mov
call
dec
mov
repz
xchg
sti
jg
jl
xchg
repz
dec
inc
xchg
mov
cmpb
adc
out
les
in
and
aas
rorl
push
out
jmp
call
xchg
fprem
test
add
cmp
and
push
imul
int
add
mov
sub
push
cmp
iret
daa
insb
pop
jg
lahf
test
ficomps
test
sbb
jmp
imul
or
adc
movsl
xchg
lods
adc
fcompl
mov
test
jg
jo
jecxz
mov
adc
xlat
test
movsb
jecxz
sub
sbbl
ds
popa
mov
jecxz
mov
or
dec
enter
pop
dec
mov
add
rcll
mov
push
jle
inc
roll
stos
mov
and
inc
test
and
and
test
or
adc
push
sub
out
or
pop
fisubl
xorl
or
inc
hlt
ret
mov
stos
jecxz
js
lret
adc
and
hlt
or
lods
lcall
lcall
aaa
test
jnp
ret
sub
imul
iret
psadbw
es
shlb
add
push
jge
mov
sub
or
or
inc
fwait
in
pop
pop
push
jae
adc
subl
out
les
cmc
das
outsb
ja
daa
and
mov
adc
mov
out
lcall
dec
fs
and
mov
or
mov
xor
push
mov
push
push
inc
ret
cmp
add
aas
xchg
jmp
mov
ffreep
push
adc
pop
mov
or
lds
daa
popl
ret
inc
scas
fs
cwtl
xor
and
jle
imul
imul
int
fwait
ljmp
add
int
loop
xor
adc
sbb
jno
xor
inc
push
daa
stc
adc
mov
jae
pushf
sub
pop
dec
testb
insl
mov
jle
xchg
jp
les
cmp
sbb
lret
add
jp
mov
xchg
mov
ret
ja
aaa
jbe
push
data16
test
rolb
jg
xchg
dec
cmpsl
js
movsb
push
test
enter
dec
jo
bound
fsubl
push
aad
jl
xchg
mov
sbb
in
sbb
outsb
xchg
xor
daa
jo
pop
mov
cmp
cwtl
dec
addl
lods
jno
inc
popf
push
ss
subb
inc
cmpsl
mov
cmp
and
pop
sbbl
loopne
repz
mov
stc
addr16
js
adc
mov
inc
cmp
mov
xor
scas
push
push
dec
lret
push
shlb
add
jge
pop
fwait
cld
aad
xchg
dec
hlt
push
lds
aad
fsubrs
mov
leave
mov
dec
xor
or
adcl
and
les
repz
in
outsl
xchg
pushf
fmull
fisubrs
shlb
leave
jge
imul
xchg
ljmp
loop
stos
cmp
sub
jl
fbld
cmp
push
lret
ja
stos
sub
jo
pop
pop
cmp
ss
fincstp
jno
aas
sub
in
cmpsb
push
inc
popf
inc
inc
push
in
pushf
ret
sbb
out
sbb
inc
push
cmp
sbb
ljmp
test
in
cli
jmp
in
mov
cmp
es
sbb
roll
int
rcrl
adc
repz
insl
or
sub
mov
loopne
lret
inc
loop
sub
mov
pop
outsl
add
push
push
sbb
pop
xchg
cmp
cli
or
push
scas
hlt
or
jbe
sbb
inc
test
xchg
inc
push
or
push
jns
inc
shr
fidivs
add
mov
xor
jecxz
sbb
ret
mov
pop
loopne
imul
test
xor
aaa
jae
decb
cmpsl
mov
xchg
outsb
sbb
popa
push
or
pop
mov
test
stc
ss
mov
orb
movsb
adc
loopne
and
mov
jbe
in
push
xchg
dec
pop
movsb
std
aaa
sbb
pushf
cmp
pop
and
iret
lea
or
add
jge
stos
add
stc
imul
das
call
add
xor
dec
ficomps
xchg
mov
test
dec
or
pop
cmpsb
cld
adc
dec
and
stos
sbb
sbb
cmpsb
adc
adc
cmc
je
lahf
cmp
jnp
mov
dec
int
and
adc
mov
in
add
mov
pop
insb
jne
cld
fldcw
inc
jge
push
push
dec
add
dec
bound
outsb
push
bound
call
gs
in
inc
push
mov
xchg
mov
das
ret
mov
cmpsb
into
pop
jo
sti
push
cs
xchg
stos
popa
xchg
adc
loope
xchg
aaa
mov
pop
sbb
mov
sub
jecxz
lahf
pushf
mov
cmp
mov
sbb
push
movsl
mov
xchg
xor
add
pop
jp
sti
jle
loop
pop
repnz
addr16
jmp
lock
aaa
add
pop
call
movsl
inc
push
dec
mov
dec
push
mov
ds
sbb
jecxz
cmp
cld
inc
fs
fwait
cltd
std
jae
mov
je
scas
add
or
xchg
ljmp
add
scas
mov
adc
es
push
and
popf
mov
add
dec
pop
mov
or
mov
fisttpll
ret
inc
xchg
fwait
mov
sbb
ret
das
mov
add
in
outsl
or
scas
jno
stos
int3
fs
xchg
sahf
mul
sbb
sub
fstps
bnd
test
push
daa
cmc
cmp
mov
xchg
leave
and
fildl
sub
stc
das
fcmovnbe
jbe
sub
ds
fcompl
jno
xor
push
inc
push
int
adc
ss
mov
push
mov
stos
mov
fsubrs
xchg
push
cwtl
jp
mov
mov
test
outsb
adc
pop
js
ja
push
fs
jo
mov
std
shrb
mov
aam
in
push
lret
xor
out
cwtl
cmpsl
push
and
push
loopne
jnp
sbb
arpl
inc
icebp
iret
mov
ss
and
in
cmp
add
movsl
in
add
xor
fs
cmp
insl
aam
and
sub
stos
out
mov
xor
mov
xor
mov
mov
xchg
fimull
cmp
mov
movsb
and
lret
mov
xor
sahf
xchg
xor
sub
faddp
dec
rolb
shrl
bound
icebp
mov
sbb
test
mulb
jmp
push
add
ret
add
push
lret
andl
jecxz
aas
inc
insl
repnz
add
jns
fs
inc
outsb
mov
sbb
and
push
call
mov
repz
jl
or
adc
sbb
subb
lret
jns
lret
mov
outsb
outsl
jne
mov
adc
push
mov
adc
push
pop
sbb
push
sbb
inc
sub
mov
jnp
push
cmpsb
xlat
sbb
mov
orl
and
push
pusha
inc
xlat
and
add
adc
imul
stos
push
imul
sub
pop
xor
divb
in
mov
sub
xchg
mov
test
arpl
bound
add
movsb
inc
xchg
push
mov
xor
or
test
push
pushl
sbb
or
mov
jnp
xor
pop
icebp
pop
xlat
sbb
mov
mov
lds
sub
in
es
out
pusha
jge
pop
in
sbb
pop
mov
xchg
and
sbb
jnp
daa
push
fwait
ds
xlat
push
pop
and
xchg
xor
add
mov
inc
mov
push
movsl
lock
jmp
into
xchg
mov
cli
mov
mov
fisttpll
jl
or
xchg
mov
dec
cmp
and
int
pop
fwait
and
and
cli
fstl
mov
data16
pop
jle
and
push
push
mov
adcl
sbb
rolb
adc
sub
outsb
sub
mov
inc
mov
loopne
and
cmp
imul
cli
xchg
pop
dec
in
xor
push
sbb
adc
mov
pop
xchg
insb
xchg
jge
dec
ljmp
mov
push
mov
mov
int3
mov
xchg
sub
aad
subb
push
mov
mov
popf
pop
fimuls
nop
pop
fwait
cmp
fdivp
xchg
aam
in
mov
fadd
sahf
mov
cmp
shrb
cli
aaa
inc
mov
pusha
mov
out
xchg
lcall
pop
repnz
jmp
int
lret
or
imul
sub
data16
adc
aaa
mov
mov
mov
push
outsb
cmpsb
pop
jge,pt
int3
dec
mov
leave
std
negl
push
int3
xchg
push
ss
call
bound
mov
ss
xor
adcl
stos
jae
aad
push
and
mov
nop
xchg
mov
mov
fwait
push
adc
mov
inc
sub
push
in
dec
into
outsb
jmp
jge
loop
xor
loopne
push
dec
dec
jle
jae
scas
sbb
mov
clc
xorb
mov
adc
scas
andl
mov
outsl
rcrb
popf
sti
sub
aas
in
dec
jne
push
decb
or
aaa
dec
dec
outsl
mov
adc
push
stos
in
loop
jp
in
xor
mov
insl
jmp
movsb
jb
repz
sbb
sbb
inc
adc
mov
sahf
xchg
negb
das
xchg
push
xchg
xor
or
out
push
pusha
add
das
mov
add
mov
repz
andl
mov
jecxz
mov
ret
mov
mov
push
aas
mov
fildl
inc
or
out
xlat
xchg
adc
cmpl
or
inc
lods
lret
loop
and
fnstenv
scas
shrl
dec
movsb
movsb
pop
sub
xchg
loopne
gs
lahf
in
stc
mov
shrb
fwait
adc
insl
faddl
cmp
leave
sub
adc
mov
rorb
sub
aaa
mov
daa
mov
aas
test
cmp
push
aad
mov
loop
test
mov
xor
arpl
leave
xchg
pop
insl
jnp
cmp
dec
dec
mov
andb
xchg
movb
repnz
scas
mov
push
push
and
jl
icebp
jg
loopne
and
or
cmp
int3
mov
xchg
cs
sbb
sbb
outsb
sahf
in
inc
repz
cmc
xor
leave
loope
mov
or
fldt
sbb
mov
cltd
nop
popa
dec
sarb
iret
ret
or
fcomps
dec
jne
shll
les
or
lods
in
or
or
jle
out
mov
decl
xor
or
mov
jmp
loopne
cli
sbb
out
cli
ficomps
lods
inc
jbe
sub
mov
mov
test
mov
or
rorb
insb
jp
pop
enter
dec
imul
cmc
lds
clc
lcall
inc
notb
sarb
std
jno
dec
cmpsl
adc
pop
add
adc
jb
dec
sub
lret
xorb
xchg
mov
shrl
inc
dec
popa
shl
je
hlt
dec
jb
dec
and
mov
fs
jb
add
enter
jae
stos
jmp
push
stc
mov
stc
jge
shlb
add
cld
sarb
xor
mov
lcall
mov
mov
and
ret
popf
push
adc
or
das
test
nop
jmp
push
outsl
popf
xchg
jle
es
cmp
mov
or
fimuls
jno
daa
mov
pushf
xchg
in
cld
mov
xchg
mov
bound
mov
mov
pop
and
jle
popf
xchg
outsl
cmp
shll
dec
sub
lret
xchg
mov
jne
repz
gs
pop
lcall
push
out
xor
int3
mov
js
fmull
xor
or
mov
outsb
jbe
aad
sub
sbb
inc
dec
cmp
mov
push
adc
push
lret
cld
negb
sub
push
mov
adc
loopne
sub
movsb
xchg
dec
or
adc
inc
push
inc
sub
sub
repz
fwait
stos
aad
sbb
data16
xchg
mov
cltd
jne
loop
outsb
dec
or
xlat
xor
rcrb
les
sub
inc
ret
ret
fcoml
xchg
xchg
adc
pop
les
mov
jns
into
loope
loope
sbb
pop
push
mov
data16
jle
fldenv
xor
shlb
dec
inc
shll
sub
nop
fsub
mov
mov
push
mov
push
add
jnp
mov
mov
pop
xor
xchg
test
inc
and
ja
xchg
jo
push
sbb
push
mov
mov
push
mov
loope
ljmp
das
cmp
mov
jne
mov
lds
sbb
dec
dec
mov
push
stos
mov
add
or
add
fcoms
shlb
ss
sub
mov
imul
jno
arpl
xchg
dec
mov
inc
test
stos
mov
lods
push
icebp
hlt
dec
cmp
imul
add
cmp
sar
push
pop
lods
push
mov
push
lock
jg
xor
sbb
xchg
inc
sbb
aas
fucomi
addl
enter
jae
push
bound
lods
inc
mov
jb
ror
lods
pop
clc
sbb
xor
fistl
cmc
in
inc
push
sbb
and
rcll
mov
mov
jle
pop
cmp
sti
push
js
sbb
je
and
pop
mov
cmc
push
into
scas
cmpsb
cmp
jp
mov
add
mov
mov
pop
ds
mov
loop
stc
mov
mov
cmc
xor
std
inc
fcmovu
or
loop
dec
cmp
lds
adc
push
push
ja
test
pop
out
cli
pusha
push
sbbl
roll
hlt
inc
scas
popa
dec
arpl
add
push
out
jae
loopne
pop
aam
add
in
in
sbb
and
cmpsb
mov
sbb
mov
pop
or
or
inc
xchg
lods
popf
cli
rcrl
inc
pop
pop
outsb
and
sub
test
jno
out
dec
cli
fsts
in
ret
xchg
cmp
out
fimuls
je
dec
adc
adc
add
or
jmp
pop
das
stos
push
xor
or
jle
sub
sub
mov
push
sbb
sahf
ret
xchg
and
ja
test
inc
push
ret
xchg
sub
inc
mov
sbb
xchg
or
push
sahf
rcl
ja
fcomps
invd
mov
je
lods
lods
jo
and
lret
icebp
ljmp
out
popw
arpl
cmpsb
int3
and
cmc
fs
fistl
inc
push
add
push
lods
sub
mov
xlat
push
shrl
mov
ret
cmp
jae,pt
push
bound
mov
sbb
dec
add
aam
xor
push
dec
rclb
add
pop
or
divb
popf
inc
jb
xchg
sahf
aam
idivl
push
jbe
add
rcll
push
in
mov
push
jecxz
jne
loopne
pop
mov
mov
push
inc
stc
and
outsl
sub
lea
aaa
lock
jl
in
add
push
sbb
cld
sub
lods
mov
sbb
cs
pop
cltd
mov
stos
cmpsl
fistpl
ja
sbb
leave
cli
jbe
inc
add
das
xorb
pop
roll
or
jae
insl
out
insb
inc
jl
inc
add
js
sub
fbld
cwtl
out
bound
add
and
jnp
and
cmp
int3
fsubrl
fs
ljmp
andb
mov
push
jo
add
adc
je
xchg
and
pop
lret
mov
outsl
div
int3
mov
hlt
jnp
xor
push
and
mov
stos
or
mov
dec
sbb
adcb
cmp
faddl
mov
imul
mov
out
add
add
sbb
xchg
and
jge
mov
xchg
arpl
bound
xor
dec
xor
inc
jno
inc
mov
push
mov
pop
lret
mov
aas
insb
mov
scas
pusha
add
mov
xor
jge
inc
jo
jnp
cmp
or
sbb
int3
insl
adc
jns
aam
dec
aaa
sti
stos
pop
xchg
daa
sbb
xor
adcb
push
fwait
push
leave
add
sbb
push
xchg
pop
movsb
pop
movsb
xchg
mov
xor
and
test
hlt
je
mov
lods
insb
inc
insb
sbb
xor
lret
xchg
ja
stos
push
add
jno
sub
dec
cltd
add
movsb
pop
cmp
mov
push
or
mov
mov
int3
and
mov
xor
xor
inc
inc
jle
sbb
xchg
xor
pop
stc
mov
int
cld
pop
into
maskmovq
notl
pop
and
cmpsb
rcrb
push
outsb
js
mov
push
add
cmp
lcall
push
xchg
push
dec
aaa
pop
mov
mov
test
xchg
xchg
mov
adc
mov
pushf
in
jmp
xor
movsl
sarb
cmpxchg
mov
inc
ret
ror
and
xchg
and
jno
cld
adc
orl
push
jge
add
sub
shll
push
dec
add
add
ss
xor
or
inc
add
push
inc
iret
imul
add
cmpsl
jp
and
xor
mov
cmp
mov
sub
int3
sarl
addl
dec
repz
mov
inc
pop
cmp
pushl
imul
gs
mov
inc
clc
xchg
xchg
movsl
bndstx
cmp
imul
mov
mov
paddw
out
xchg
dec
cltd
mov
ja
mov
and
dec
and
xor
xchg
xor
test
inc
add
lock
sub
pop
bound
ss
push
dec
mov
mov
and
mov
lea
lret
psubb
call
movsl
stos
lret
lea
mov
sahf
cs
dec
jbe
or
das
fcompl
std
xor
cmp
je
sub
in
frstor
out
repnz
test
cmp
leave
test
xor
hlt
fidivs
subb
inc
shrb
movsb
fs
push
push
mov
dec
cli
jno
push
mov
fcompl
xchg
mov
shll
dec
xchg
lds
sar
jnp
push
int
jbe
push
dec
and
out
mov
jg
loope
lcall
inc
stos
xor
ds
xchg
sub
rorl
outsl
jge
lea
adc
scas
in
clc
mov
xor
notb
repz
sbb
xchg
xchg
sbb
shrb
popf
rorb
loope
fisttps
in
stc
lds
sahf
cmpb
xchg
sub
nop
or
mov
cltd
and
jmp
in
or
ljmp
call
xchg
repz
icebp
or
in
fidivs
cmc
or
jl
xchg
cmpsl
push
cwtl
out
jmp
fcoms
xchg
add
js
lds
insb
add
adc
xor
adc
mov
jg
sbb
inc
fwait
stos
cli
ds
and
mov
xor
mov
pop
ret
pop
sti
push
inc
pushf
jp,pt
sub
js
stos
sarl
mov
mov
xchg
mov
jae
sub
cmp
pop
lock
push
iret
mov
call
mov
cmp
test
pusha
call
aaa
dec
sub
pusha
pop
lea
cmp
enter
nop
out
aam
and
je
inc
mul
xchg
add
into
lods
fdivs
lahf
iret
popf
addr16
in
mov
test
add
sarb
dec
das
mov
xor
mov
cmp
and
ss
imul
lods
mov
add
cmpsb
mov
popa
inc
sub
jnp
lods
ss
inc
sti
mov
mov
aaa
pushf
imul
jnp
stos
sub
or
test
fisttps
les
push
adc
imulb
xor
sbb
lret
jne
sbb
clc
insl
xor
out
xchg
cmp
dec
popf
and
in
dec
dec
scas
negb
out
ds
cmp
std
flds
push
adc
adc
fsts
int
push
pop
imulb
add
pop
cltd
xchg
push
in
cwtl
test
mov
inc
push
push
push
iret
mov
in
adc
add
jle
negl
push
jge
pop
xchg
sub
imul
add
lret
push
pop
mov
dec
pop
xor
xchg
sbb
mov
loop
jl
xor
test
push
inc
inc
cmp
popf
mov
ljmp
jl
hlt
lods
test
and
inc
lea
lods
or
imul
jecxz
mov
xchg
mov
fimull
leave
icebp
push
jp
adc
jb
out
out
in
in
loop
cli
jmp
push
ja
faddl
hlt
mov
mov
push
jae
int
pop
in
leave
movsl
mov
or
sbb
mov
enter
or
imulb
addr16
cmp
xchg
mov
imul
xchg
out
cld
push
rcrb
or
pusha
inc
rcrb
mov
shrb
xlat
mov
jge
loope
add
sub
push
js
push
je
mov
push
jge
das
or
dec
decb
loopne
and
mov
cld
mov
pop
aas
push
push
mov
pop
movsl
fwait
dec
xchg
dec
push
lods
rcrb
add
push
in
push
cltd
add
loopne
mov
mov
dec
jl
sbb
in
adc
test
ds
jnp
lcall
cwtl
leave
jl
aam
adc
rcll
loope
pusha
rcr
ja
and
cmp
jns
inc
cli
std
mov
fs
aaa
ficoms
popf
sarb
and
pushf
inc
jmp
sub
loopne
adc
jmp
jne
out
cmpsb
sbb
mov
ror
out
into
push
jns
scas
jae
imul
and
cwtl
push
scas
out
lcall
inc
push
mov
xchg
imul
and
or
jnp
dec
inc
fcompp
clc
mov
repnz
inc
movsb
push
int
dec
xchg
sub
fs
add
cmpsb
lret
jbe
iret
divl
xor
jbe
inc
int3
jl
sbb
shll
mov
cmp
jecxz
inc
cmpsl
out
sarb
pop
ja
adc
lods
pop
arpl
sarl
dec
cmp
in
ljmp
cld
pop
xor
push
sbb
pop
push
arpl
inc
dec
mov
int3
dec
mov
push
jae
inc
mov
jg
and
test
sub
mov
xor
shl
out
sar
in
push
shrb
xchg
pop
mov
push
js
popa
mov
lea
jb
fs
sbb
fcompl
sub
out
aas
jecxz
mov
inc
bound
mov
out
cld
cmp
fidivl
jnp
arpl
fiaddl
dec
aam
xchg
sbb
popf
cmp
add
xor
outsl
mov
stos
adc
sbb
inc
adc
cltd
popa
out
imul
pop
mov
lock
mov
sbb
insl
inc
push
jns
push
cwtl
sarb
movsb
jge
mov
je
aam
enter
sbb
xor
aad
pop
xchg
add
pop
jnp
in
in
jg
in
jns
loopne
adc
sbb
nop
out
add
xor
icebp
jmp
mov
xor
fsubr
dec
pop
xlat
call
pusha
pop
lods
lods
push
jno
xor
insl
lea
faddl
sar
movsl
mov
lods
inc
sub
divl
jg
imul
mov
jo
adc
push
std
lods
cmp
out
outsb
push
popa
shlb
cmp
push
jno
arpl
leave
lock
aam
mov
imul
cmp
jecxz
jno
pop
sbb
mov
mov
lahf
ss
jmp
nop
and
jg
jnp
jb
pop
ret
mov
cs
call
mov
mov
and
lods
clc
mov
mov
xor
cmpsb
inc
aad
add
jge
dec
ljmp
dec
addr16
sbb
shll
mov
cmpl
aas
das
add
ljmp
out
sub
dec
out
clc
cmp
cmp
jge
adc
jae
inc
test
dec
jns
inc
sbb
xchg
data16
cwtl
xchg
xchg
xchg
jbe
sub
dec
sbbb
nop
push
rcrl
lcall
mov
arpl
pop
mov
popw
sahf
pop
add
mov
xor
xor
dec
decl
clc
mov
lret
dec
mov
push
xchg
js
jecxz
xchg
mov
and
rorl
push
jns
movsl
cmp
out
or
push
cli
fwait
scas
fs
dec
dec
jmp
adcb
pop
or
and
mov
outsl
add
bound
sti
int
cli
cld
and
push
or
inc
pop
mov
inc
dec
int
test
push
inc
cwtl
ror
decb
idivl
jo
lret
or
cmp
into
int3
arpl
int
jp
push
pop
add
xor
push
das
movsb
dec
call
mov
fnstsw
orl
push
mov
push
xchg
cmp
or
mov
xchg
sti
loop
int3
aam
test
mov
mov
dec
dec
outsb
dec
stos
bound
pushf
dec
mov
adc
shlb
imul
push
jae
rorl
out
inc
or
mov
mov
inc
loope
dec
test
incb
imulb
xchg
movsb
in
dec
sub
imulb
into
mov
pop
add
insb
test
out
or
xchg
shr
add
sbb
or
fbld
lahf
mov
jl
xchg
div
fwait
shr
test
sbb
sbb
in
add
shrb
leave
mov
push
jl
out
movsb
pushf
dec
sub
ret
cmp
jns
lahf
movsl
add
repz
sbb
mull
or
cltd
sbb
sub
test
mov
in
xchg
hlt
inc
xchg
jno
adc
mov
mov
shll
xor
rorl
imul
hlt
in
imul
mov
das
fimull
mov
inc
push
aad
inc
add
and
es
cltd
add
lea
std
out
adc
adc
shl
loope
push
jno
sbb
int
bound
mov
jecxz
or
aas
test
jecxz
xor
xchg
xchg
je
xor
xor
or
pop
pop
jle
stos
cmp
lock
shlb
xlat
fldenv
es
cmp
pop
add
mov
mov
ljmp
jmp
divb
mulb
sahf
pusha
push
addr16
sbb
push
repz
xchg
fisttps
cltd
inc
mov
dec
xchg
pop
push
and
in
lock
push
cltd
xor
aad
or
xor
jns
insl
push
dec
inc
sub
aas
pop
xchg
pop
repz
pop
sbb
cmp
adcl
and
hlt
in
jg
xor
jne
and
cmp
cmpsb
mov
test
neg
fmuls
iret
push
ret
insb
sub
outsb
leave
and
lock
shl
adc
or
jbe
inc
mov
inc
xor
xor
dec
adc
pop
fs
out
and
enter
clc
push
or
inc
inc
xchg
dec
mov
inc
jl
mov
test
adc
cmpsl
xchg
gs
stos
jl
imul
cld
cltd
pop
push
xchg
adc
clc
fcomp
push
fcoms
pusha
test
mov
jo
jecxz
jbe
xchg
mov
jbe
xchg
enter
std
jb
test
mov
lret
fcompl
bound
push
sbb
jno
sbb
fcom
lods
xchg
cmp
and
scas
mov
push
pop
rolb
sahf
scas
jns
cwtl
aas
xchg
sub
or
sbb
xchg
test
push
xor
fildl
or
add
mov
imull
out
or
mov
pop
mov
imul
xor
lds
aas
lret
push
jae
and
stos
aam
lock
fdivl
mov
add
xchg
adc
cwtl
es
cmp
jmp
js
fmuls
aas
movsb
repz
jae
push
pusha
ds
cmc
ds
clc
int
inc
or
or
and
insb
mov
adc
lods
fstl
std
outsl
mov
cwtl
popa
nop
sub
adc
inc
jno
rcr
inc
cld
xchg
mov
xor
bound
stc
arpl
sub
dec
negl
movsl
or
xor
pop
lock
xchg
shll
jp
mov
scas
and
orb
scas
or
rcrb
scas
xchg
jle
shlb
dec
push
test
sub
into
xchg
dec
mov
and
fimuls
iret
shll
jne
sub
or
jne
mov
push
ficompl
pop
pop
fs
test
enter
sbb
adc
pop
mov
ss
lret
in
test
rorl
pop
fsubr
sbbb
ret
inc
daa
mov
stc
sbb
aam
xchg
outsl
int
out
sahf
mov
xor
ret
xor
out
xor
outsb
or
mov
pop
add
mov
pop
inc
shrb
xchg
nop
mov
pushf
pop
push
cmpsb
lods
xchg
addr16
repnz
nop
cli
into
xchg
sub
jae
push
rcl
cmp
and
leave
daa
and
dec
push
loope
cmp
inc
push
jne
mov
mov
add
xlat
out
ss
dec
sahf
call
hlt
xchg
jae
loope
add
sbb
leave
xor
mov
shl
add
mov
sub
mov
pop
adc
sbb
or
or
push
stos
test
imul
mov
fimull
push
push
outsl
cmp
mov
sahf
mov
jmp
lock
pop
sbb
or
ljmp
leave
repnz
clc
push
cmp
lahf
xchg
adc
fdivr
addr16
mov
inc
mov
push
fprem
or
iret
mov
into
aas
fidivs
mov
jg
xchg
pop
fwait
aam
call
in
push
jle
iret
je
std
insb
inc
jnp
dec
mov
sub
fwait
or
mov
ljmp
add
dec
in
shrl
mov
iret
mov
push
shlb
add
js
dec
std
int3
jecxz
inc
push
fdiv
in
int
fldt
dec
pop
mov
int
ds
lods
mov
loope
push
outsb
test
arpl
loop
xlat
add
sbb
clts
push
scas
pop
stos
insl
fisubrs
daa
push
mov
dec
dec
.byte
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
les
loopne
add
pop
mov
mov
dec
adc
mov
inc
or
push
out
lret
inc
ret
jle
test
xor
popa
push
stc
rcrb
inc
cmpsl
pop
mov
add
jae
arpl
int3
movsb
scas
lods
test
into
and
mov
leave
int
inc
ds
xor
stc
cmp
lret
mov
pop
pop
enter
popa
mov
push
shlb
lds
imul
mov
arpl
arpl
xchg
mov
jbe
in
adc
scas
cwtl
in
fs
xchg
.byte
add
add
pop
push
xchg
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
pop
push
xchg
add
add
add
add
mov
add
addb
add
pop
push
xchg
add
add
add
add
add
add
enter
add
add
loopne
add
pop
push
xchg
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
pop
push
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
pop
push
xchg
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
pop
push
xchg
add
add
add
add
mov
add
addb
add
pop
push
xchg
add
add
add
add
add
add
addb
add
add
pop
push
xchg
add
add
add
add
add
add
cwtl
add
add
add
add
xchg
add
add
add
add
add
add
test
add
add
add
pop
push
xchg
add
add
add
add
add
add
mov
add
add
xchg
add
add
add
add
add
add
enter
add
add
pop
push
xchg
add
add
add
add
add
add
fadds
add
add
add
xchg
add
add
add
add
add
add
call
add
add
xchg
add
add
add
add
add
add
clc
add
add
add
add
xchg
add
add
add
add
add
add
or
add
pop
push
xchg
add
add
add
add
add
add
sbb
add
pop
push
xchg
add
add
add
add
add
add
sub
add
pop
push
xchg
add
add
add
add
add
add
cmp
add
pop
push
xchg
add
add
add
add
add
add
dec
add
add
pop
push
xchg
add
add
add
add
add
add
pop
add
add
pop
push
xchg
add
add
add
add
add
add
push
add
add
xchg
add
add
add
add
add
add
js
add
add
add
pop
push
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
pop
push
xchg
add
add
add
add
or
add
add
add
pop
push
xchg
add
add
add
add
or
add
add
add
pop
push
xchg
add
add
add
add
or
add
add
add
pop
push
xchg
add
add
add
add
or
add
push
add
add
add
pop
push
xchg
add
add
add
add
or
add
push
add
add
add
pop
push
xchg
add
add
add
add
or
add
push
add
add
add
pop
push
xchg
add
add
add
add
or
add
push
add
add
add
pop
push
xchg
add
add
add
add
or
add
add
add
add
pop
push
xchg
add
add
add
add
or
add
add
add
add
pop
push
xchg
add
add
add
add
add
add
push
add
add
xchg
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
addb
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
sti
lret
in
add
add
add
inc
in
add
add
in
add
add
add
dec
in
add
add
in
add
add
add
insb
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
pushf
in
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
mov
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
std
push
add
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
cmp
sbb
add
cmp
sub
mov
mov
jg
add
push
sub
and
pusha
cmp
leave
out
push
mov
leave
rolb
dec
insl
out
arpl
adc
dec
movsb
in
iret
dec
adc
xchg
rcrl
or
test
xchg
lcall
jae
add
push
or
out
lret
mov
inc
mulb
sahf
sub
dec
pop
or
loope
jge
dec
sti
sub
lods
ss
movsb
popf
icebp
sub
inc
std
mov
jp
scas
push
jp
lods
fiaddl
insb
cli
or
and
inc
pop
leave
mov
sbb
push
movsb
imul
jno
andl
shr
mov
cmp
dec
mov
inc
and
inc
jge
mov
adc
cmp
repz
pop
jg
xor
test
aas
fbstp
cmp
or
mov
imul
insl
jp
lahf
ja
mov
call
pop
loop
inc
je
mov
mov
enter
rcrl
pop
out
mov
xchg
mov
roll
sbb
adc
les
add
push
pusha
pop
xchg
jno
add
mov
shlb
stos
push
mov
in
pop
pop
sbb
jbe
mov
fists
nop
sbbb
in
cmp
jnp
jnp
bound
push
inc
mov
clc
cmpsb
and
push
pop
mov
rorb
mov
std
aaa
stos
sbb
add
xchg
mov
cmp
jmp
xor
jmp
leave
dec
xlat
cmp
sub
push
xchg
int
inc
in
negb
mov
mov
adc
xlat
mov
ja
ficoml
mov
sbb
or
lods
mov
inc
pop
xchg
add
aad
fimull
cmp
js
int3
lcall
ds
dec
sbb
push
stos
aas
aas
inc
test
stos
cmp
dec
enter
cmp
sarb
jecxz
adc
pop
movsl
pop
and
into
xor
mov
push
jge
not
pop
lahf
xchg
dec
xor
sbb
lods
mov
dec
pop
mov
push
lret
clc
cmc
mov
mov
jecxz
out
hlt
popf
push
ret
outsl
add
and
mov
jno
or
xor
nop
push
data16
mov
mov
sub
mov
mov
mov
shlb
push
mov
cmp
push
jmp
in
push
jl
inc
imul
xchg
fsubrs
or
xor
cmp
sbb
cmp
aad
in
xor
cmp
xchg
pusha
xchg
cmp
ss
xor
int3
pop
repz
lcall
sbb
or
repnz
push
sub
dec
cmp
xchg
shl
inc
fwait
push
addr16
andb
xlat
mov
insl
imul
sub
push
jbe
push
scas
pop
es
bound
or
insb
aam
jb
ret
push
xchg
lds
inc
stc
mulb
fisubrl
sub
cmp
pop
add
xchg
or
inc
add
stos
sub
mov
cmpb
jmp
ret
rcrl
inc
xchg
pop
inc
rcrb
dec
hlt
sbb
mov
inc
adc
and
mov
out
push
mov
mov
add
fimull
push
or
pop
mov
adc
jnp
mov
test
cmpsl
jmp
rep
pop
sub
out
sub
ds
push
adc
jge
movsb
adc
inc
fldt
pop
cmp
add
fcmovnu
push
add
adc
push
repz
jl
lret
xorb
mov
jmp
push
mov
not
jno
dec
mov
test
rcrl
xor
idivl
cmp
mov
mov
hlt
mov
mov
call
xchg
push
outsl
mov
xchg
dec
ficoml
aaa
inc
sub
pop
cs
leave
dec
adc
scas
or
jae
xor
lds
mov
std
xor
jne
aad
push
dec
add
in
mov
lret
repz
shl
push
add
xor
sahf
xor
outsb
mov
fldcw
xor
je
ret
insb
nop
test
mov
mov
ret
lret
frstor
aad
mov
cmp
jmp
push
rcrb
cmp
adc
push
push
pop
cmovns
ljmp
fisubrl
mov
adc
adcl
dec
dec
movsl
insl
inc
inc
inc
adc
fistps
push
int3
sub
add
cmp
sar
lods
dec
mov
push
rolb
addr16
out
or
loopne
or
adc
pop
pusha
adc
cmp
je
mov
imul
ret
sbb
jp
and
xor
iret
push
xor
gs
lds
jle
push
movsb
mov
sarb
outsb
xor
lret
mov
fcmovnu
xchg
mov
jge
stos
jmp
repz
jp
and
ja
jbe
jge
adcb
movntps
jmp
add
add
outsl
popf
hlt
call
aam
xchg
or
xor
xchg
cwtl
and
movsl
insl
and
mov
stc
mov
mov
lret
leave
sub
std
sub
push
popf
xchg
test
jge
lods
or
mov
mov
call
jns
mov
dec
js
mov
adc
mov
mov
scas
and
ljmp
int3
fadds
lds
push
das
push
int
jle
aam
push
jmp
jl
cs
push
mov
punpckhdq
test
rcl
mov
adc
sbb
in
adc
jl
or
add
dec
insl
loop
jnp
add
stos
nop
and
pop
negl
mov
scas
pop
mov
es
add
test
mov
data16
mov
mov
movsl
pop
cli
push
jno
adc
stc
jle
dec
cmovle
mov
cmpsl
int3
insb
das
push
adc
cmc
add
mov
push
mov
das
bound
in
into
push
mov
stos
xor
xchg
cmp
push
mov
adc
jge
gs
aas
mov
mov
xchg
push
push
lcall
cmp
aad
mov
es
fadd
lods
pop
jp
sahf
pop
inc
sbb
push
push
xchg
jl
shl
xor
pop
jecxz
sbb
cmp
push
ja
nop
adc
jbe
inc
lcall
push
lcall
sub
inc
push
icebp
fucomp
or
nop
scas
adc
ljmp
lods
cmp
mov
dec
stc
or
js
bt
and
xor
test
cmpl
push
fadds
imul
dec
jo
pop
xor
dec
das
cwtl
add
insl
iret
mov
sub
andb
fdivs
cmpsb
cmpsb
ret
leave
inc
shr
or
lea
scas
dec
ds
inc
jp
cmp
jno
sub
aaa
add
pushf
jecxz,pt
daa
lods
push
xchg
mov
sbb
add
data16
fidivrs
mulb
out
cmp
sahf
bound
jne
imul
and
cs
sbb
pop
movsb
add
ja
lret
xchg
add
or
sbb
scas
das
cmc
call
jbe
jae
sub
xchg
xchg
loopne
dec
fnstenv
test
sub
andb
lds
adc
insb
sub
out
sub
mov
mov
std
popa
push
andl
std
aas
out
add
loope
filds
add
cmp
mov
pop
add
xchg
mov
hlt
xchg
dec
sub
stos
xchg
in
bound
data16
cmpsb
ljmp
das
outsb
adc
hlt
ret
jnp
daa
dec
jecxz
mov
daa
cmp
sbb
cmp
mov
mov
cmp
out
dec
testb
into
dec
lret
mov
insl
and
mov
iret
sbb
ret
pushf
xor
dec
jbe
cmc
xchg
jns
add
add
sbb
xor
mov
mov
jns
mov
jge
cld
ret
dec
xchg
dec
lcall
lahf
ret
inc
addl
add
and
bound
sbb
jb
sbb
orb
and
mov
cmpsb
ljmp
je
ja
push
add
or
cs
bound
push
out
mov
mov
les
scas
dec
loopne
mov
into
and
xor
test
pop
jp
test
xchg
repz
lods
sub
add
scas
push
xchg
icebp
fs
xor
pop
cmp
leave
enter
fildll
popf
push
pop
test
xchg
xor
test
aas
rorl
jo
and
insl
jecxz
inc
addr16
xchg
dec
push
dec
push
sahf
andb
fst
mov
inc
push
clc
pop
ret
ljmp
push
inc
xor
out
xchg
push
inc
jo
jo
ja
scas
xchg
fwait
jg
push
pop
mov
push
dec
cwtl
sub
scas
lea
dec
pusha
daa
xchg
out
inc
pop
icebp
cli
stc
jle
jl
xor
aas
sahf
sub
outsl
loopne
jno
imul
inc
inc
and
jp
xor
ror
ret
sahf
scas
aad
stos
mov
and
adc
pop
scas
lret
add
lret
push
bound
in
mov
xchg
imul
jb
insl
jmp
movsl
mov
adc
or
mov
push
xchg
sbbb
sub
and
push
mov
push
out
adc
and
jo
push
fsubrs
ljmp
dec
pop
fdivrl
fisttpl
and
sti
int
and
call
xor
jle
orb
aad
mov
outsb
jmp
out
sub
imul
jecxz
push
mov
pop
inc
roll
xor
les
outsl
xchg
mov
jmp
repnz
xor
fadds
inc
lock
adcl
ret
xor
xor
sti
lret
pushf
lods
sub
jg
sub
or
adc
sub
pop
jns
mov
or
popf
imul
sarb
sub
popf
in
pop
mov
adc
adc
xchg
push
cltd
xchg
cmp
and
dec
add
int
adc
push
jns
adc
jmp
aaa
ss
repz
stos
mov
mov
popa
push
rcll
sbb
or
std
xchg
fwait
stos
or
rcrl
sbb
les
loop
dec
int
cld
cmp
jg
mov
pop
repnz
cmpsl
sbb
adc
in
mov
inc
adc
ror
xchg
outsl
and
add
xchg
and
stc
inc
mov
jnp
add
repnz
dec
shrl
mov
in
sbb
mov
adc
test
mov
sqrtps
or
mov
push
aaa
mov
xchg
into
xchg
std
setns
sub
mov
pop
jno
lsl
sub
adc
lret
jae
or
jno
pop
test
add
cmpsl
popf
dec
jecxz
or
inc
xlat
pop
imul
adc
fimull
jns
add
icebp
push
stc
xor
push
add
inc
pop
icebp
inc
rolb
mov
mov
mov
in
clc
lods
jp
push
test
inc
or
arpl
insl
ret
in
pop
sti
dec
rolb
cmp
popa
outsb
cld
add
adc
loope
loopne
repz
jo
pop
sub
cmp
mov
cmp
jns
pop
push
mov
cltd
aaa
mov
aad
cmp
sub
dec
sbb
into
mov
or
jnp
mov
mov
ffree
push
or
cmp
sarl
scas
add
pop
sbb
aad
inc
jp
push
cltd
call
clc
out
loopne
pop
jns
xchg
jg
lds
out
arpl
xlat
cli
or
test
cmc
dec
xchg
sub
and
ljmp
sbb
mov
mov
pushf
dec
orl
test
pop
inc
fld
and
push
call
int
test
pop
sub
stos
and
cmp
xchg
xchg
repz
sbb
xchg
mov
xor
mov
pop
mov
outsl
aam
rclb
repnz
jne
pop
inc
xor
fisttpll
add
lods
insl
mov
ja
enter
sti
and
mov
repnz
daa
mov
les
push
mov
hlt
mov
loope
aad
xchg
movsl
sbb
dec
out
int
repnz
bswap
push
setg
outsl
mov
filds
les
mov
hlt
ret
mov
push
cli
lods
add
adc
mov
pop
arpl
daa
insl
cmp
jp
or
pusha
xchg
push
add
sub
or
loop
and
addr16
shlb
pop
call
xor
xor
push
xchg
mov
xor
dec
pop
mov
in
mov
mov
pop
jbe
or
adc
and
adc
cmp
es
jno
lahf
call
dec
push
xchg
add
fisubrl
or
push
out
lea
xor
jl
mov
ss
or
and
pop
sub
sbb
addr16
mov
push
lret
sub
es
addr16
into
xchg
cmp
packssdw
push
jecxz
cmp
mov
loope
loop
xlat
lods
popa
xor
mov
jne
sbb
lcall
scas
neg
fcompl
imul
jge
loope
or
push
lcall
in
ret
adc
xchg
sub
inc
sbb
aam
push
push
mov
scas
mov
addr16
in
ret
and
xor
and
cmpsl
shll
pop
cmc
mov
push
pop
fcmovnb
jo
adc
sub
dec
es
pushf
shlb
push
mov
fcmovbe
push
testl
clc
nop
outsl
cmp
movsb
dec
cld
jbe
cmp
test
out
imul
into
add
cmp
sti
into
test
pop
icebp
xchg
call
or
xchg
pop
sti
jb
inc
xor
xchg
mov
fisttps
rolb
jae
pop
jge
push
pop
adc
push
test
js
out
scas
sbb
mov
fidivrs
popf
rcrl
cmc
hlt
int3
push
imul
pop
mov
repnz
rcrl
adcb
pop
daa
adc
mov
je
sub
mov
fadd
mov
adc
xchg
inc
dec
mov
jb
jge
movsb
rcrl
pop
rorl
xchg
imul
arpl
jb
into
dec
rolb
mov
dec
sub
cld
xor
or
jbe
jnp
pop
adc
push
mov
data16
loopw
or
shrl
xor
add
bound
push
call
add
cs
out
ret
push
int
and
sbb
imul
mov
mov
std
sbb
test
mov
neg
clc
sbb
add
cld
sub
in
repnz
and
pop
pushf
adc
jb
out
imul
xlat
mov
cmpsb
imul
ljmp
jo
inc
rol
cmp
mov
out
add
push
cmp
shll
call
dec
xor
xor
push
push
and
sbb
out
sub
pop
loopne
scas
adc
bound
pop
push
xorl
mov
dec
fwait
mov
loopne
or
pop
push
and
out
xchg
sbb
lods
xor
or
jbe
jb
inc
int
add
xchg
outsl
push
loope
adc
fsub
push
ds
xor
outsb
repnz
adc
pop
and
arpl
fmul
push
cmp
pmulhuw
imul
push
je
fstl
sub
mov
imul
repnz
movl
lds
int3
mov
adc
mov
notl
ljmp
adc
test
and
sbb
jge
imul
push
into
cld
push
add
cli
cmp
or
mov
sub
dec
pop
sbb
loopne
mov
dec
ljmp
mov
push
mov
cmp
cmp
insl
sub
xchg
and
popf
xor
sahf
pop
jmp
imul
pusha
leave
add
stos
pop
dec
call
les
inc
adcl
fadds
sub
push
cltd
fadds
in
daa
pop
mov
cld
les
incl
fisubl
cld
sub
mov
in
and
dec
cld
notb
hlt
or
jle
hlt
dec
jge
xchg
scas
push
jg
fisttpll
mov
les
das
dec
mov
leave
and
and
rcrl
inc
out
ja
add
aas
dec
imull
outsl
add
cmc
or
rclb
jns
jb
pusha
stos
xchg
notl
ret
das
fidivs
popf
sahf
xchg
mov
xchg
xchg
aam
aad
and
cmp
enter
inc
fwait
dec
dec
jbe
push
das
in
fsubrs
aam
lret
lods
mov
inc
pop
dec
call
add
push
inc
mov
pop
rol
jbe
mov
cmc
push
sti
cli
outsb
cmpsb
cltd
mov
jp
leave
xor
dec
pop
sub
mov
mov
shll
cltd
fnstenv
ljmp
scas
jmp
pop
scas
mov
pusha
mov
xor
scas
es
popf
mov
lods
div
mov
movsl
add
xchg
cltd
shrb
xorb
adc
xlat
test
or
imul
ret
xor
push
jmp
xchg
popf
sbb
sbb
loopne
fistpll
in
add
fnsave
dec
jl
sbb
ret
cmp
fstpl
jp
out
lcall
pop
mov
insl
cmp
cmpsw
rcrl
mov
outsb
ret
jmp
pop
lret
rcll
add
ret
mov
nop
push
or
xor
sub
or
ljmp
adcb
xlat
popf
xchg
lcall
and
fsubl
pop
lret
rcr
dec
xchg
dec
scas
or
push
pop
movsl
add
mov
xchg
cs
out
lods
stc
jno
imul
lret
das
fwait
je
gs
jo
push
aam
add
aad
js
fwait
out
mov
pushf
mov
jno
xorl
mov
inc
test
lcall
cwtl
inc
sbb
sub
fisttps
inc
out
repz
adc
pop
add
adc
int
pop
cmp
testl
arpl
mov
mov
out
adcl
mov
call
fistps
pushf
rcrb
xor
pop
sub
lock
dec
sub
push
cmp
adc
shlb
int
inc
js
loope
int
jno
mov
loop
sub
insl
adc
mov
lret
les
push
aaa
inc
in
lea
sbb
outsb
ds
pop
cltd
lahf
sub
jns
test
loop
mov
and
les
push
lods
cmpsb
mov
sub
outsb
push
out
int
out
ljmp
jl
mov
fidivrs
jmp
push
push
fldcw
adc
pop
dec
std
loope
cmp
int
lea
push
mov
cmp
mov
outsl
lods
xchg
jmp
jge
jno
lea
push
sahf
xchg
fists
push
jnp
decb
orb
jmp
xor
adc
mov
xchg
lds
and
jns
clc
sbb
dec
sub
fwait
addb
scas
lret
pop
and
cmp
outsb
xor
loope
pop
add
sbb
rcl
or
inc
add
sub
jg
loopne
dec
imul
outsb
std
sti
dec
mov
xor
adc
popf
fwait
jo
iret
out
xor
flds
sti
cwtl
movsl
mov
popf
pop
add
push
or
mov
sarl
loope
rorl
icebp
adc
jmp
js
sbb
call
cmp
xchg
and
shll
push
sub
dec
pop
dec
or
pop
insl
mov
or
mov
pop
loop
fdivp
or
rcrl
scas
in
mov
sub
fwait
mov
in
in
sahf
cmovl
adc
dec
scas
aas
mov
mov
inc
add
fisubrl
cmc
fsts
and
push
movsl
sahf
pop
lahf
push
cmp
pop
fwait
stos
lock
fdivl
mov
sub
mov
xor
movsb
fwait
xor
push
push
lds
or
dec
or
aam
xchg
mov
jle
pop
flds
inc
fnsave
aad
test
into
or
sahf
xchg
cltd
pushf
sbb
lret
or
or
pop
jp
mov
jge
adc
out
in
mov
arpl
lea
imul
jns
mov
out
addr16
outsl
mov
loopne
inc
jmp
out
and
jne
aam
adc
aaa
dec
mov
jo
iret
push
in
pop
js
incb
je
cmc
in
leave
lahf
fs
test
jne
mov
ljmp
push
dec
dec
adc
enter
sub
push
mov
or
mov
fisttps
xchg
adc
xchg
pop
sbb
insl
negl
popf
shlb
ja
push
lds
imulb
leave
lea
mov
test
xchg
es
cwtl
out
jmp
and
movsb
mov
dec
jg
xchg
imul
mov
subl
scas
fwait
iret
adc
sub
push
pop
cwtl
ja
lret
xor
jb
mov
add
mov
and
in
or
or
jp
int
mov
pcmpeqb
gs
fcomp
mov
fs
cmpsb
fsts
loope
call
xchg
mov
cmp
dec
adc
in
mov
adc
jge
das
fsubr
inc
push
add
cmp
cmp
xor
or
push
in
or
xor
mov
push
xchg
inc
imul
je
mov
sbb
js
sub
lds
es
mov
xchg
mov
push
xchg
pushf
add
or
sub
insb
xor
dec
fucomi
mov
xor
cmp
hlt
mov
aaa
scas
lahf
popf
jp
popa
pop
cmp
fdivrl
rcrb
lcall
jecxz
or
xor
mov
dec
repz
add
fisttpl
lea
sub
int
cmpsb
clc
loope
shll
lcall
jns
add
inc
fs
jae
or
mov
xor
aaa
jmp
inc
push
mov
lock
lcall
subb
add
incl
xor
mov
repnz
into
test
addr16
mov
daa
push
cmp
jle
lret
inc
cmc
mov
and
pop
xchg
xchg
fstl
dec
repnz
popl
dec
xchg
stc
mov
cwtl
push
icebp
and
bound
or
cmp
das
xlat
mov
dec
aad
push
and
mov
out
ret
jge
mov
sub
fisubrs
notb
test
mov
push
cmp
cmp
loope
mov
adc
out
stos
push
xchg
subb
pop
js
mov
addr16
pop
daa
jo
iret
mov
cmp
sbb
lock
mov
pop
jae
mov
shlb
aad
and
inc
adc
xchg
mov
jns
dec
pop
and
popa
cwtl
cwtl
shlb
mov
xor
fstp
fcoms
int
or
push
add
scas
ja
adc
push
mov
xlat
dec
cmc
loop
std
xor
ja
test
cltd
jb
push
mov
pushf
mov
loope
sbb
loopne
mov
xchg
inc
or
mov
xchg
nop
mov
xchg
lcall
push
icebp
cmpl
sub
jmp
mov
push
push
mov
dec
ret
inc
xor
push
ret
push
nop
stos
pop
adc
bound
or
rclb
popf
sbb
lcall
iret
xchg
pop
sti
lods
out
and
add
lcall
pop
cmp
test
add
ret
push
lock
frstor
test
popf
fwait
jge
push
cmp
push
sbb
ja
mov
mov
movsb
fcmovb
xor
lods
xchg
std
pop
into
or
sar
sbb
aad
sub
pop
push
icebp
icebp
inc
fidivrs
cmpsb
and
pop
sbb
push
xchg
mov
mov
cmc
fisubl
ja
dec
mov
ficoml
outsl
loope
in
mov
push
add
scas
fwait
cld
inc
lea
mov
mov
mul
std
xchg
int3
xchg
or
push
xchg
int
aam
or
mov
push
and
pop
ja
pop
jp
mov
and
xchg
jbe
mov
andl
sub
mov
push
pmulhuw
xchg
testb
outsl
jns
cli
pop
jmp
fstpt
inc
jne
popw
imul
inc
in
rcrb
mov
or
push
jge
xor
lret
lock
cmp
push
in
xchg
dec
jne
add
push
sarb
fisubrs
mov
inc
mov
dec
dec
and
movsb
mov
outsl
mov
mov
push
xorl
test
push
loope
shrb
outsb
in
loope
call
dec
testb
orl
inc
xor
cltd
inc
inc
mov
xchg
fcmovne
sbb
sti
push
dec
nop
decl
jne
mov
push
mov
or
mov
pushf
pop
lock
shr
cmp
mov
sub
fildll
sub
cmp
mov
xchg
call
cmc
mov
inc
call
movsb
xchg
jg
and
int3
gs
pop
fs
xchg
flds
cs
push
jne
movsb
call
jns
or
jbe
outsl
loope
in
std
fs
push
sub
idivb
in
jae
loopne
icebp
stos
cmp
xorl
mov
ljmp
aam
inc
pop
lret
mov
je
nop
stos
out
xchg
enter
out
pop
outsb
mov
test
sahf
std
dec
push
pushf
jg
jl
cltd
ret
push
lea
mov
or
mov
pop
stc
outsl
insl
or
in
sbb
push
inc
mov
inc
repnz
mov
movsb
cli
cltd
dec
adc
aaa
mov
pop
aaa
mov
addr16
out
xor
data16
popa
stos
loopne
outsl
xchg
xor
jecxz
stos
jo
xchg
arpl
sbb
out
xchg
mov
jno
icebp
pop
pusha
adc
lods
in
xchg
jmp
filds
out
sub
jmp
lods
lahf
mov
pop
test
mov
lret
roll
in
rolb
inc
sbb
xchg
iret
out
add
cmc
test
dec
push
repz
cmp
loope
adc
jmp
je
or
jg
add
arpl
xchg
add
fs
je
jle
dec
lods
add
pop
push
scas
push
jae
cmp
push
xor
mov
sbb
ljmp
in
rorb
jp
icebp
adc
cmpsb
push
adcb
pop
push
repnz
sbb
bound
adc
mov
in
xchg
dec
scas
sbb
popf
iret
and
test
mov
movsl
arpl
push
movsb
lcallw
stc
cmp
movsb
push
or
aas
into
test
aas
inc
ljmp
adc
mov
mov
neg
es
fucomp
dec
repnz
cli
fwait
and
sbb
aas
insb
mov
jp
aas
ss
divb
out
mov
sbb
and
sti
mov
xchg
pop
fnstsw
orb
adc
add
std
outsl
adc
lock
xchg
fs
mov
outsl
mov
test
pop
pop
inc
adc
cmc
loop
leave
xor
pop
inc
outsl
ret
out
cmpsb
lods
inc
fbld
xchg
sub
mov
aas
push
popf
inc
in
std
push
ret
cmp
jecxz
mov
jbe
in
test
stc
dec
aad
enter
mov
outsl
sub
lcall
and
pop
dec
getsec
insl
jns
imul
add
cmc
aaa
mov
sbb
pop
loop
popf
hlt
pop
jmp
inc
popa
fs
fisubl
fxtract
imul
jno
clc
aad
in
leave
or
xor
psrld
das
rolb
jno
in
sbbb
jge
dec
std
out
mov
jb
inc
stc
ret
nop
sub
jo
xchg
pop
pushf
push
sub
pop
daa
cmp
or
mov
push
and
stos
jae
pop
shr
dec
dec
xchg
addr16
push
cwtl
and
insb
inc
aas
mov
das
cmp
jne
movsb
lods
pop
cwtl
popf
in
fwait
nop
push
dec
adc
cmp
pop
shl
es
or
mov
lock
cmp
or
jecxz
mov
in
xor
fwait
or
xchg
inc
enter
xor
sub
addb
jb
stos
adc
dec
pop
sbb
add
xor
ljmp
lods
sub
rcr
sbb
loopne
mov
subb
sahf
pop
pop
stc
add
pop
push
test
out
loope
or
jle
mov
push
pop
ret
adc
les
mov
dec
add
pop
pushf
bound
add
xchg
cmp
loopne
insb
mov
fcomps
pop
test
aaa
jmp
mov
in
jo
cmpsl
lock
inc
jne
bound
ja
popf
jo
icebp
inc
nop
cmpsb
jne
pop
or
lock
lret
push
and
insl
popa
mov
mov
adc
aam
adc
and
mov
pop
pop
adc
dec
adc
mov
and
jg
push
cmpb
into
int
pop
mov
xor
lods
dec
stos
jo
push
shlb
ret
fwait
or
adc
and
xor
xor
mov
xor
xchg
xchg
loopne
aad
mov
inc
and
push
adcb
inc
lahf
lahf
add
jp
faddp
mov
sbb
fnstsw
fwait
and
ljmp
and
rcll
fwait
loop
xchg
lds
repz
int
sbb
lahf
fwait
pop
push
jae
popf
flds
jecxz
cmp
xlat
ja
dec
inc
xchg
jmp
sti
mov
movsb
push
xor
push
fwait
loope
int3
addb
mov
mov
lcall
push
mov
and
pop
xchg
scas
les
lahf
dec
sub
pop
jae
cmp
pop
sbb
shll
into
loopne
xor
inc
adcb
shrl
adc
pop
ja
jle
or
push
dec
inc
and
ss
dec
pop
ja
jae
mov
cli
insl
xchg
outsb
lret
sbb
cld
nop
inc
sbb
loopne
lcall
jp
mov
or
push
xor
andl
mov
push
xchg
xor
inc
xor
mov
pop
push
test
iret
pop
push
cmc
xor
jb
sti
loope
push
mov
enter
cmp
ret
imul
stc
sbb
push
test
cmpsb
dec
loope
xor
pop
sub
enter
pop
mov
cmp
rorl
mov
cs
mov
fildll
jmp
pop
dec
outsb
mov
call
or
mov
push
repz
rorb
cmp
jg
sbb
and
sub
sub
mov
inc
and
aam
jo
popa
gs
jecxz
pop
inc
push
and
aas
test
sbbl
jb
add
cmpsl
or
jg
mov
in
sti
xlat
cmp
xchg
call
mov
inc
gs
roll
adc
out
sarb
xor
sbb
aam
inc
test
mov
das
sbb
das
push
mov
sub
mov
sub
pop
add
rcrl
push
add
add
pop
scas
xchg
subl
cmp
mov
out
out
mov
in
ret
cmp
mov
mov
fs
pop
int
push
and
push
inc
jmp
jns
jg
mov
subl
lods
mov
xchg
das
fidivrl
xor
hlt
enter
shlb
push
lods
or
push
cs
inc
add
test
shrb
stos
mov
and
lock
jge
dec
mov
xor
mulb
mov
outsl
adc
jo
add
inc
jne
push
xchg
jg
divl
out
dec
in
fwait
jl
push
push
jae
sbb
xor
xchg
pop
sbb
pop
inc
cltd
mov
lods
pop
sub
xorl
push
insb
inc
stos
ss
push
push
dec
pushf
lahf
and
pop
xor
inc
mov
enter
cmpsb
sbb
inc
lcall
clc
jbe
rorb
push
xor
mov
insl
in
pop
sbb
push
pop
cltd
lock
dec
cmp
xchg
insl
sbb
cs
shl
and
loop
outsb
pop
insl
dec
push
stos
das
bswap
mov
sbb
inc
mov
sbb
xor
je
xor
mov
sti
dec
mov
cmpsl
cld
aad
sub
xchg
or
cmpsl
in
movsb
fiadds
pop
das
mov
lock
fadds
pop
std
outsb
aam
mov
lahf
into
imul
or
push
push
cwtl
mov
std
add
outsb
sarl
push
pop
outsl
lahf
pop
adc
lea
cld
sbb
xchg
adc
mov
and
sbb
insb
shll
cmpsl
fsubrs
adc
jg
shl
jle
out
mov
push
inc
sub
mov
imul
insl
movsb
pop
and
rorl
inc
cltd
xchg
sbb
sub
push
nop
roll
jne
or
jle
test
xchg
out
xchg
sub
lea
jbe
mov
inc
or
and
xor
lock
push
or
mov
aam
mov
out
cwtl
sbb
cld
mov
fimull
sbb
mov
imul
or
andb
data16
roll
bound
subb
cld
cmp
adc
add
mov
adc
mov
and
insb
xchg
js
arpl
cmp
sub
fadds
adc
xor
fisubl
loopne
outsl
xor
repz
jmp
shr
loopne
in
stos
mov
out
pop
dec
fbstp
push
push
int3
jmp
shlb
or
xchg
lret
add
push
mov
gs
adc
cltd
mov
mov
jns
jo
sbb
ds
jle
cli
sbb
xchg
scas
mov
mov
dec
jnp
aaa
jge
push
insb
into
shll
sbb
mov
fs
aad
jg
inc
or
repnz
cmpsl
cmp
jno
lea
mov
mov
push
shrl
aaa
or
or
sbb
jg
push
stc
add
mov
or
dec
xchg
ljmp
insb
sbb
xorb
lret
fstpl
push
pusha
scas
sbb
jbe
pop
popf
popf
jecxz
sbb
jmp
call
and
jae
xchg
cwtl
or
mov
jns
icebp
xchg
aad
cli
test
cmp
daa
ret
ja
or
xchg
test
xchg
xor
jl
jnp
popa
into
cmpsl
lret
aaa
daa
addr16
enter
push
popl
jecxz
stc
sub
xchg
sbb
test
lds
push
aaa
fadds
int3
sbb
cmp
mov
xchg
mov
rolb
fnstcw
out
mov
sahf
add
cwtl
xchg
loope
pusha
dec
xchg
pusha
and
stos
jmp
aaa
pusha
fisttps
fwait
iret
dec
lock
lret
push
imul
cmp
sub
ja
aaa
mov
sahf
adc
add
mov
lret
imul
dec
ret
and
cld
scas
nop
jmp
enter
mov
add
popa
mov
inc
nop
mov
out
inc
push
test
insl
adc
xorl
jmp
into
push
in
insb
subl
adc
xlat
in
fistpll
lods
or
insb
bnd
xchg
pop
rclb
jns
jns
or
adc
test
pushf
inc
xor
jle
adc
dec
hlt
cmc
mov
push
sub
sbb
pop
lcall
mov
rorb
cmp
pop
sbb
lcall
dec
mov
pop
pusha
pop
popf
enter
mov
and
cmp
jmp
stos
xchg
js
xchg
scas
ss
add
stos
xchg
ja
fisubrl
mov
in
addr16
rolb
sub
and
jb
xor
adc
dec
push
jge
or
js
movsb
mov
xchg
mov
xorb
hlt
push
dec
pop
jp
mov
iret
mov
das
ljmp
dec
fldenv
loop
xchg
loope
inc
lock
shrb
lea
mov
lock
pop
aaa
jecxz
jmp
cli
pusha
mov
add
lret
jne
jge
mov
int
or
mov
test
mov
dec
test
ja
sub
loop
and
xor
stos
pop
sbb
repz
mov
sbb
call
adc
aad
dec
xor
mov
outsl
sbb
mov
mov
or
in
inc
cld
les
sbb
hlt
outsl
inc
fwait
add
aaa
cmp
insl
call
js
push
xchg
mov
jae,pn
fs
pop
addb
addr16
or
cmpsl
pushf
ss
jns
fidivrl
je
jmp
ja
jno
out
cli
cld
push
int
sbb
aad
mov
adc
dec
push
gs
lock
addr16
rcrl
mov
push
mov
cltd
adc
dec
sahf
add
jge
xor
leave
mov
fiadds
repnz
or
push
jo
inc
cmpsl
or
pusha
test
jg
mov
xchg
mov
stc
lock
das
bound
js
lahf
cwtl
pop
sub
shll
orl
pop
and
nop
loopne
jne
dec
stc
sub
dec
outsb
jle
out
bnd
xchg
jb
stos
and
cli
cltd
xlat
mov
mov
test
les
lea
idivl
xchg
cmpsl
jmp
adc
sbb
ret
cltd
dec
ds
dec
mov
dec
mov
add
js
cltd
xchg
cmp
sbb
push
jecxz
mov
pop
inc
mov
or
aaa
cld
xorl
mov
pop
cmp
enter
adc
sub
lcall
int3
pushf
cmp
stos
add
xchg
lcall
repz
ja
int3
aad
mov
bound
data16
cmpsl
dec
mull
add
cwtl
mov
or
inc
mov
mov
sahf
jb
cwtl
shl
loopne
mov
push
sub
lock
leave
jo
mov
and
lds
adc
pop
ret
out
jb
in
add
inc
push
jne
push
or
mov
rorb
xchg
imul
or
sub
pushf
ds
xchg
loop
xchg
lea
test
push
das
mov
mov
or
jbe
dec
mov
or
ret
add
scas
jb
sub
or
push
lret
subl
or
sahf
pop
mov
scas
push
mov
cwtl
adc
dec
jle
dec
rcll
rclb
aad
cmp
das
arpl
mov
aaa
push
shlb
inc
push
shll
pop
rep
lea
dec
dec
jae
add
cli
test
nop
and
push
xchg
testb
ljmp
pop
mov
movl
in
pop
xorl
fstpl
out
jne
mov
popa
sahf
pop
xchg
push
sbb
pop
inc
cmp
mov
cmp
xchg
fmuls
push
shl
mov
mov
add
push
rcrb
push
push
iret
jns
inc
xor
scas
daa
push
sub
loopne
loope
outsl
mov
jmp
outsl
lods
mov
mov
shl
add
fcmove
mov
loop
xchg
dec
fcoml
pop
test
loop
sbb
leave
and
mull
xchg
adc
or
cmp
scas
leave
popa
sub
scas
xchg
pop
fcompl
movsl
xchg
sub
stc
mov
fldt
out
pop
int
std
pop
in
dec
mov
dec
push
int3
xchg
sbb
xorb
sarl
inc
pop
popf
xor
mov
mov
or
inc
js
sbb
sti
xlat
mov
xchg
dec
das
jl
push
jecxz
jo
addb
mov
push
int3
stos
dec
mov
sub
jbe
into
mov
inc
cwtl
xchg
int
pop
imul
mov
mov
ffree
cmc
movsl
fs
lret
mov
mov
iret
shl
lds
int3
call
xor
pop
pop
int3
pop
cmpl
ret
jno
jge
sti
pop
push
cmc
stc
lods
cltd
and
je
jecxz
sbb
jae
adc
les
outsl
shrl
adc
fs
jg
push
enter
scas
or
repnz
shrb
ret
pmuludq
movsb
test
pop
cmc
push
in
pop
sbb
xlat
aas
sarb
inc
mov
daa
pop
stc
es
jl
iret
aaa
push
test
and
lcall
lods
inc
mov
sahf
pushf
push
movsb
and
call
add
pop
xchg
scas
push
mov
and
lods
test
lods
mov
mov
xor
dec
aas
je
xchg
fs
in
mov
push
cmp
push
add
or
incl
call
filds
or
or
aas
dec
sti
mov
jecxz
or
scas
sti
fstp
mov
shlb
sti
rep
mov
dec
call
inc
pop
xor
test
dec
lcall
fwait
mov
std
sbb
inc
xor
jge
mov
xor
gs
add
cmpb
push
leave
dec
jno
mov
xor
out
lock
incb
js
jb
push
add
fadds
push
pop
lock
call
mov
sub
sbb
sarl
mov
je
pop
out
gs
adc
lea
mov
cmpsb
or
jno
lods
fldl
sbb
add
cld
data16
cwtl
fdiv
adc
xor
int3
push
ds
outsb
sbb
sti
pop
ror
ljmp
or
gs
in
jno
add
push
cmp
xchg
stos
jno
bound
lods
aaa
mov
pop
gs
mov
cmp
cltd
jecxz
xchg
mov
mov
fldt
adc
xor
sub
scas
addr16
addr16
adcb
test
sub
mov
pop
inc
cmp
rcrl
divl
xlat
pop
cld
sbb
add
repz
stc
shlb
pop
sbb
outsl
or
loope
inc
xor
sti
fadds
sub
test
mov
adc
clc
pop
cmp
stc
jno
lret
in
and
std
call
repz
mov
ss
pop
loope
push
push
neg
call
adc
jle
xor
push
push
repnz
inc
mov
fsubrl
rclb
arpl
movsb
push
mov
inc
scas
scas
adc
cltd
cwtl
push
mov
jecxz
icebp
push
mov
add
xchg
idivb
mov
mov
push
out
mov
shrb
lea
pop
movl
fld1
sub
shrb
xchg
repz
mov
adcl
lret
xlat
mov
sub
loopne
mov
push
cmpsb
mov
mov
sbb
add
fisubrs
testl
and
mov
fnstsw
push
cmpsl
sub
loope
ja
xchg
sahf
jle
xor
dec
inc
push
gs
addr16
mov
or
xchg
adc
or
insl
or
ret
pop
dec
sub
scas
leave
lret
or
cs
rcr
cld
xchg
pop
int3
push
mov
jb
or
jnp
cmpsb
push
ja
mov
push
lods
mov
addr16
mov
dec
test
cmp
sub
mov
sbb
push
push
add
imul
lahf
xchg
sbb
sub
dec
out
ja
cmp
or
repz
or
pop
inc
push
add
cld
pop
mov
pop
mov
xchg
out
inc
pusha
daa
inc
std
mov
pop
es
movsb
int3
mov
dec
pop
push
or
mov
clc
sbb
rcrl
dec
movsl
inc
in
sbb
pop
jl
frstor
cltd
mov
jecxz
fdivrl
clc
fistpll
jmp
mov
lock
fnstenv
jo
push
repnz
push
popa
push
inc
mov
in
repnz
pop
push
dec
std
int3
out
dec
xor
lret
sar
dec
xchg
shlb
arpl
and
pushl
out
out
test
fimull
or
dec
mov
xor
mov
cmpsb
es
sbb
mov
cli
flds
cli
dec
mov
outsb
cmp
push
adc
int3
mov
dec
repnz
rcl
cmp
or
lcall
jmp
cmp
dec
out
mov
push
adc
int
xchg
insl
outsb
cmpsb
icebp
cmp
pop
xchg
nop
lret
lea
stos
mov
fidivrs
add
mov
xchg
shrl
in
das
in
mov
call
cltd
or
aad
inc
mov
icebp
ja
push
sub
icebp
bound
xchg
mov
loope
fs
loop
mov
cmc
or
dec
imul
std
adc
mov
shlb
sub
fucom
mov
scas
ja
inc
pop
mov
dec
cs
and
loope
inc
in
cli
sti
pop
mov
and
fwait
mov
lds
bound
jns
pop
push
pushf
or
mov
call
movb
ffreep
push
adc
add
gs
xor
testb
mov
xchg
notl
sbb
add
dec
mov
cmp
push
into
jg
data16
icebp
jno
and
scas
xor
xor
adc
mov
or
mov
jns
xor
jae
pop
imul
stos
jns
stos
ljmp
sbb
dec
out
and
adc
cwtl
push
movsl
cltd
lods
aas
adc
pushf
sub
mov
lret
dec
add
mov
sbb
call
rolb
xchg
sub
cmp
sub
jp
pop
mov
pop
clc
sub
sbb
mov
outsl
push
jbe
fdivr
add
andl
fwait
imul
cltd
addb
mov
and
outsb
fwait
and
lea
cmp
loop
bsr
jle
or
jo
adc
mov
mov
hlt
out
add
or
ds
push
mov
lods
inc
mov
pop
arpl
loopne
jl
enter
data16
nop
cmp
cli
jmp
pop
jbe
decl
xor
enter
sbb
push
xor
mov
jmp
js
cmp
jb
push
push
jp
shrb
adc
xchg
pop
hlt
int3
test
xchg
lahf
cmp
orb
loopne
mov
jge
jns,pt
ja
inc
push
in
xor
lds
jmp
mov
enter
mov
jecxz
push
dec
xchg
pop
mov
xchg
inc
or
mov
pop
shlb
movsl
fsubrl
outsb
cmc
mov
hlt
xor
cwtl
lods
lds
lahf
add
adc
out
push
mov
and
mov
lock
test
jp
and
movsl
and
inc
out
ds
dec
cmp
mov
fsubl
inc
jmp
pop
leave
and
sbb
insl
xor
sbb
xor
dec
aas
mov
mov
push
sbb
call
xor
lods
lds
add
mov
push
push
sbb
jae
lcall
push
push
sub
fcoms
inc
shrb
fdivrs
jmp
ds
mov
jbe
mov
or
jg
xchg
pop
sbb
or
test
or
mov
aaa
in
fwait
jl
js
cmpb
mov
jl
fwait
jns
cmpb
mov
in
push
out
test
cltd
sub
cmp
test
push
xor
jae
sarl
lret
mov
xor
mov
imul
push
stos
rcr
pop
cmp
mov
push
sub
mov
sbb
pop
popa
imul
mov
push
imul
inc
mov
push
daa
add
daa
fsubrl
sub
sahf
lahf
arpl
lcall
jne,pn
pop
jo
cmc
mov
mov
dec
pop
aaa
sbb
into
xchg
insb
addb
xchg
arpl
sti
imul
dec
sub
shl
stos
push
xchg
push
call
mov
insl
xchg
cmpsb
xchg
push
xor
out
xlat
nop
mov
out
jle
faddp
mov
or
mov
addr16
dec
xchg
ss
push
inc
push
es
xchg
inc
adc
lock
es
cmpsb
lret
or
mov
call
fisubl
mov
stc
sub
sti
add
inc
movsl
jne
jbe
je
inc
sbb
andl
ficompl
gs
clc
pop
or
lret
insl
clc
ret
insb
stos
dec
and
je
sbbl
sub
jp
fcoml
out
notl
push
mov
cmp
jmp
lahf
push
mov
rcr
cmp
cmp
mov
or
out
shrl
and
aaa
rcll
popa
lret
stos
inc
ja
mov
pop
cltd
adc
inc
nop
lods
or
xor
sbb
mov
pop
inc
cmp
out
or
adc
dec
and
xlat
push
out
aam
mov
jl
xchg
sbbb
mov
or
or
dec
das
adc
pop
mov
push
int3
inc
inc
lcall
pop
xor
add
push
aas
inc
mov
imul
imul
negl
and
sub
pop
gs
adc
insl
ficomps
or
adc
jp
inc
add
into
sub
int3
sbb
and
loopne
jns
dec
test
jp
xor
lods
adc
jle
lret
outsl
fdivrs
sub
xor
xchg
sbb
std
xchg
lahf
and
fstps
cmp
fiaddl
jl
popf
pop
mov
jle
mov
sub
or
into
mov
shl
push
loop
mov
gs
jecxz
sbb
sub
out
sahf
mov
mov
push
mov
adc
inc
jg
ret
dec
out
mov
jmp
xorl
pop
inc
mov
mov
pop
test
rcll
xchg
mov
jecxz
in
push
std
and
cmp
jbe
cmp
mov
jnp
sbb
cmp
in
mov
sub
push
jo
fcmovu
jmp
dec
or
pop
xchg
int
dec
arpl
insl
les
repz
testl
lret
sbb
and
cmp
ret
dec
ret
mov
push
jo
and
jmp
and
jno
push
xchg
lock
fadds
shr
mov
pop
clc
mov
cld
lods
sbb
scas
fsubrp
sbb
jecxz
sbb
cs
test
int3
out
jno
and
sahf
jle
ret
fists
mov
mov
mov
sbb
mov
lods
inc
test
mov
sub
add
mov
adc
pop
pop
adc
pop
movsl
mov
sub
mov
outsb
mov
or
scas
xchg
pop
inc
push
stos
subl
mov
or
dec
outsb
cmp
mov
stos
inc
add
jne
jecxz
stc
cmp
jb
jmp
or
push
mov
cmpsb
aaa
and
mov
sti
imul
shll
xor
js
jl
and
subb
ljmp
loop
jb
pusha
cmp
push
out
and
clc
pop
push
dec
jae
cmp
push
lcall
fs
jno
jns
inc
mov
push
addl
pusha
add
in
std
mov
jnp
push
push
push
test
xchg
mov
adc
and
pop
lahf
shl
jae
and
dec
cmp
testl
lcall
insl
cmp
and
add
stc
inc
test
icebp
ret
in
push
nop
push
pop
std
dec
movsl
les
xchg
loop
mov
xchg
push
or
out
mov
and
push
pushf
outsl
mov
pop
dec
pop
mov
es
ret
and
and
xchg
sti
mov
out
jle
pusha
mov
mov
xor
adc
pop
cmp
jmp
push
and
mov
pop
movsb
shl
mov
adc
push
mov
pop
mov
mov
or
ret
fcmovne
pushfw
lahf
popa
fbld
jne
sbb
adc
fst
ret
lret
int
jo
dec
lock
and
xchg
sbb
xor
incb
lret
mov
jb
out
mov
and
ret
pop
insb
xor
adc
movsbl
sub
xchg
loope
iretw
fistpll
mov
and
sahf
mov
jle
mov
xchg
movsb
pop
cld
xchg
sbb
inc
sahf
jae
or
dec
daa
jecxz
sub
data16
les
lds
and
jg
mov
sbb
push
mov
cli
mov
cmp
dec
xchg
adc
addb
ja
sti
and
and
mov
sbb
push
je
push
pop
int
push
xchg
fwait
and
ficoms
hlt
lock
leave
inc
inc
push
adc
xchg
outsb
insl
adcb
push
fisttps
inc
lds
push
mov
jl
cli
jo
aad
jns
or
push
mov
inc
hlt
add
js
adc
shll
add
roll
pop
out
aaa
push
lea
cltd
dec
push
mov
popf
imul
stos
add
dec
jo
sbbl
mov
lret
push
dec
pop
rorb
xor
psubsb
cmpsb
pop
push
lahf
or
or
cwtl
jmp
mov
cltd
pop
ret
out
gs
pushf
lock
push
dec
xlat
jl
add
mov
xchg
inc
lcall
jbe
pop
scas
pmaddwd
sti
pushf
xor
out
and
repnz
dec
movsb
add
xchg
imul
addr16
bound
popf
pop
xchg
xchg
mov
into
dec
in
mov
fnstenv
push
mov
imul
movsb
mov
je
ret
daa
xchg
dec
dec
sub
jae
dec
flds
adc
imull
das
imul
add
rorl
jmp
cmpsl
sub
imul
bound
in
call
out
stc
mov
lods
inc
mov
into
arpl
push
adc
aas
push
cld
mov
push
hlt
cmp
jae
xchg
shrb
mov
fists
mov
popa
or
popa
orb
fcmovnu
dec
pop
hlt
jp
sub
pop
xchg
pop
jae
icebp
shr
test
xor
mov
xchg
mov
repz
hlt
pop
ja
inc
je
mov
out
loopne
call
andb
jnp
pop
inc
sub
shll
ss
mov
push
pop
cltd
addr16
pop
xchg
jo
add
sub
out
mov
xchg
mov
lahf
or
into
jne
movsl
jae
sti
bound
fcoml
pop
aam
pushf
jecxz
repz
mov
inc
push
xor
imul
mov
loope
jb
in
ret
test
fsubl
aad
sub
jecxz
les
mov
sbb
aam
xlat
or
mov
inc
out
stos
cmp
or
ror
pop
das
loop
push
xchg
stos
das
and
or
das
jle
xor
mov
cmp
loop
lret
dec
movsl
dec
in
xlat
jbe
cs
xor
shll
sub
or
jmp
imul
pop
mov
cmc
popf
inc
movsl
ds
ja
lahf
sub
mov
inc
out
and
scas
mov
lds
adc
fnstsw
fimull
std
mov
add
es
sub
arpl
hlt
xor
xor
cltd
push
lret
mov
in
lret
rorb
popf
sbbl
iret
insl
sbb
outsl
ret
mov
cltd
les
adc
dec
jmp
inc
fisttpl
cmp
pushf
dec
aad
push
mov
lds
mov
add
or
add
or
adc
mov
mov
pop
mov
pusha
faddl
cmp
jno
xlat
cmp
jbe
xlat
scas
jmp
jle
pop
aad
rcl
je
cmp
test
jb
adc
and
sahf
cmp
mov
and
rorl
cmpb
hlt
and
ds
ret
sub
aaa
pop
xor
popa
jnp
pop
ds
inc
mov
pop
mov
mov
aaa
xchg
and
xlat
femms
out
jge
dec
test
push
xchg
and
mov
sahf
fucomi
sbb
sub
add
loopne
mov
add
scas
imul
aas
dec
mov
jl
pusha
cmpsb
shll
jo
inc
popa
mov
mov
fcmovb
rcll
adc
iret
cmp
ficoms
xchg
sbb
test
cmp
mov
mov
arpl
test
and
xor
insb
cs
adc
int
das
mov
pop
clc
adc
sub
dec
add
pop
cmp
xor
daa
adc
mov
ds
inc
mov
sti
xor
fisubl
cmp
jmp
data16
push
ja
sti
push
subl
loopne
jo
cld
xor
jp
lds
lcall
lcall
push
mov
rcrl
push
out
add
insl
test
cmp
aaa
popa
sub
mov
in
popa
xor
sbb
std
fldcw
jb
ror
lods
mov
mov
xchg
test
std
jmp
pop
xor
aam
mov
jne
jo
inc
add
ja
into
push
sub
iret
lcall
push
or
sbb
and
rcr
sub
adc
jmp
fistpl
cltd
push
mov
in
mov
lahf
mov
dec
shrb
ds
jmp
mov
imul
cltd
dec
sahf
movsb
aas
adc
mov
pop
mov
add
scas
ljmp
add
jne
sti
jo
dec
imul
pop
andb
mov
ror
lahf
sbb
int3
sahf
pop
mov
sbb
repz
xchg
imul
and
insb
outsb
xchg
jne
mov
jg
sti
pop
outsl
jae
cmp
ss
outsb
inc
out
inc
sbb
insl
jmp
mov
js
and
and
fstps
mov
cli
es
out
test
jecxz
iret
sbb
movsl
sub
mov
sub
mov
dec
fildl
lcall
push
push
mov
mov
add
aas
jmp
lods
shlb
push
hlt
lods
xor
out
mov
fisubs
imul
push
cmp
call
jmp
inc
jge
es
xchg
mov
inc
pop
push
test
add
and
add
aas
negb
fwait
and
adc
xor
xchg
jmp
xor
aaa
js
inc
mov
inc
add
inc
in
and
ja
std
pop
or
cmp
insl
mov
jne
jnp
rcrb
leave
loope
or
loope
push
mov
mov
out
lret
xor
negb
popa
sub
sbb
cmp
das
jl
pushf
adc
push
cmpsl
ficoms
sub
lret
cli
cltd
roll
in
out
push
mov
sti
enter
pop
fiaddl
movsb
mov
jecxz
out
push
add
jp
mov
jbe
pop
push
pusha
ret
inc
cmp
mov
jne
lock
int3
lods
ret
xchg
mov
ret
add
aam
sub
bound
fs
push
mov
popa
negb
jge
jne
jae
hlt
mov
or
jb
sbb
mov
cli
and
or
xchg
in
mov
shll
decb
vpunpckhwd
dec
xor
ljmp
cmpsl
fiaddl
jnp
daa
xchg
addl
es
aaa
pop
fisttpll
mov
mov
jmp
push
test
dec
mov
lahf
sbb
orl
test
jb
std
mov
xor
mov
repz
je
jb
stos
mov
in
pop
lods
mov
add
movsb
xor
rclb
jbe
cli
inc
jg
mov
rorl
lret
mov
shll
xor
fisubrs
xor
xorb
ja
stc
and
andl
lret
add
xchg
repnz
je
mov
loopne
mov
out
mov
mov
sbb
cmc
or
shlb
negb
mov
pop
mov
lock
ljmp
and
xor
pop
xchg
int3
cmp
in
cmp
repz
jo
xchg
mov
incl
in
dec
mov
push
xor
cwtl
ret
push
loopne
or
sub
or
shll
fisttps
enter
pop
sarb
pop
sarl
loopne
mov
push
ss
fwait
enter
dec
shrd
inc
xor
andl
xor
add
jle
in
pushf
dec
mov
out
mov
fistpl
push
jle
out
mov
out
cld
in
xor
js
xchg
mov
ds
xchg
inc
mov
inc
mov
inc
arpl
cmc
ret
ja
xor
jg
int
add
loope
cmp
imul
add
cmc
push
jae
insb
jmp
lretw
gs
jg
hlt
js
push
add
xchg
pop
mov
xchg
push
inc
aas
cmp
movsb
mov
xchg
sti
sbb
adc
adc
iret
xchg
iret
pusha
aad
dec
inc
es
out
jg
ja
fbstp
pop
popf
popf
call
lcall
lock
scas
sub
sub
arpl
adc
push
call
imul
adc
xor
push
add
xchg
lcall
add
movsl
aaa
mov
lods
loopne
push
dec
das
jae
adc
inc
sub
sarb
mov
jmp
mov
dec
pushf
icebp
jge
les
sub
ds
dec
fs
cld
mov
xchg
and
in
clc
dec
jb
stos
push
aas
clc
test
cmp
rorl
mov
cmpsl
insl
xor
mov
rolb
daa
inc
jl
dec
push
mov
outsl
jns
dec
test
add
shll
or
rolb
sti
xchg
sub
inc
mov
pop
js
xor
outsb
dec
sbb
xchg
xor
es
loopne
dec
fcompl
adc
xchg
sub
ljmp
mov
inc
notrack
cmp
mov
jp
jb
lods
pop
pop
movsl
sti
or
popf
xchg
push
in
es
mov
fdivr
incl
popa
notb
rcr
cmpsl
clc
jmp
lret
adcl
mov
or
mov
es
push
jbe
pop
sub
push
jmp
cmpsb
push
data16
mov
fs
incl
mov
xchg
mov
sub
fldt
xchg
loop
shlb
cmp
inc
dec
jbe
addr16
test
add
fwait
push
nop
lret
fs
in
mov
dec
cmp
in
mov
adcb
push
inc
cli
cmpsl
lods
test
sub
pusha
pop
les
pop
jp
mov
sbb
sub
lret
mov
insl
faddl
ret
mov
mov
aaa
mov
scas
cmpl
fcoml
pop
dec
into
sbbb
inc
add
movsb
xor
mov
mov
lods
jg
jg
std
stc
clc
jns
enter
daa
sbb
aad
pop
cmpsl
sbb
push
pop
or
and
inc
lret
sub
xchg
repnz
test
adc
je
sbb
pusha
and
cmp
xchg
push
add
dec
fbld
jo
sahf
cmp
sub
mov
jle
pop
sub
cmpb
loopne
push
inc
outsb
aam
xor
arpl
sti
jb
mov
dec
xor
cmp
in
xor
fstl
gs
fisttpll
fidivrl
inc
ja
pop
fdivrl
cmpsb
or
xor
aam
popf
into
cmp
mov
popf
jne
jno
xchg
aaa
push
das
mov
mov
xor
cmp
imulb
push
ret
pop
jb
cmp
in
xor
mov
sub
cmp
ret
mov
mov
mov
nop
xor
and
cmp
adc
mov
aad
push
jnp
mov
repnz
shrb
in
pop
mov
adc
ret
mov
mov
push
sahf
pop
jae
and
loop
mov
aad
cld
ljmp
stc
js
out
icebp
les
cmp
aas
arpl
lret
jecxz,pn
movsl
subb
int3
das
and
pushf
sbb
push
xor
repnz
clc
inc
sbb
adc
sub
push
push
add
inc
dec
mov
adc
pop
shll
int
add
out
jg
pusha
xchg
cmp
push
cld
pop
and
loopne
mov
jle
inc
sub
into
mov
shrb
jmp
sub
addl
mov
push
loop
scas
sbb
or
pop
mov
aam
je
jns
lcall
test
mov
shlb
sub
jecxz
in
and
mov
add
cmp
pop
or
inc
cmp
cli
scas
xchg
out
or
mov
xor
mov
stos
cmc
cli
outsl
fincstp
jg
lods
jle
dec
cmpsl
and
xor
imul
xor
loope
movsl
or
fsts
push
mov
inc
stos
cmpb
xor
push
mov
sbb
fisttps
jb
movsb
jbe
sub
inc
jb
stos
sarl
pop
jns
push
test
or
repnz
rolb
add
pushf
jns
or
fidivs
add
cmp
pop
mov
jmp
add
jge
sub
dec
hlt
xor
pop
push
sti
movsl
jne
sub
pop
inc
loope
mov
leave
sahf
in
dec
or
mov
fsubrl
pop
jmp
xchg
test
repz
sub
fiaddl
and
imul
sub
and
pop
test
pop
jge
mov
and
jle
mov
adc
fildll
cmp
push
les
adcl
shlb
push
jg
push
fwait
inc
into
add
inc
ret
xchg
dec
xchg
jo
movsb
jo
mov
sbb
inc
arpl
out
lods
sub
rcll
push
call
in
xor
sbb
xlat
rcll
sbb
jmp
mov
cs
adc
push
arpl
out
std
xchg
cltd
lock
stos
rcr
pop
sbb
cmp
xchg
inc
repnz
mov
repnz
jge
mov
imul
adc
aam
sbb
shll
je
push
and
je
sarl
push
mov
push
jno
imul
xor
mov
mov
fidivs
add
enter
xor
jle
push
in
and
imul
fbld
add
sahf
in
popa
inc
in
pop
shrl
je
dec
test
fiaddl
cmp
push
cli
or
outsl
out
shrb
lods
sbb
inc
imul
jbe
shl
pop
dec
out
xchg
add
push
jg
enter
daa
sahf
and
mov
data16
adcl
xor
in
popf
adc
mov
xor
loopne
in
xchg
das
dec
push
dec
and
sbb
push
inc
mov
push
add
mov
pop
lods
decb
pop
loope
rorb
je
aam
out
fisubs
pop
pop
icebp
mov
pop
loope
cmp
dec
sbb
popa
inc
aaa
xchg
mov
mov
mov
out
ja
push
lds
iret
es
mov
inc
pop
lods
lods
jnp
rclb
xlat
jne
pushf
and
cltd
xor
inc
nop
dec
scas
sub
jnp
dec
enter
lds
jb
je
imul
ror
or
mulb
inc
adc
xor
or
fcmovnu
sub
sub
and
out
cwtl
mov
cs
pop
cli
aad
add
rcl
push
push
stc
push
cmpl
dec
add
cvtdq2ps
loop
lret
jo
outsl
pop
repnz
push
add
dec
mov
inc
mov
and
gs
movsb
ss
dec
inc
mov
dec
das
xchg
popf
adc
push
mov
or
fadd
enter
sbbl
or
fwait
cltd
add
orl
mov
pushf
mov
imul
std
dec
aam
fsts
test
push
mov
mov
inc
inc
dec
test
push
loop
mov
aad
xor
dec
fyl2x
outsb
mov
push
dec
xchg
push
mov
xchg
jo
out
out
pop
adc
pop
aaa
sti
loop
subb
imul
arpl
mov
cli
es
mov
addb
sbb
and
cmp
repz
cmpsb
icebp
cmc
push
pop
xor
dec
mov
pop
dec
cmp
dec
ret
nop
insl
in
pop
dec
leave
cmp
aad
xor
aaa
sub
xor
lret
jns
inc
pop
xchg
lret
lcall
cmp
pop
movl
sbb
rcrb
and
cmc
enter
shrb
test
xor
mov
jecxz
pop
imul
mov
ja
sbb
cli
add
xchg
fdivrp
shlb
pop
sbb
cld
sub
sbbb
loop
in
sub
sbb
or
adc
es
or
shlb
and
rclb
movsl
mov
mov
shrl
mov
scas
sub
sbb
push
sarb
pop
ret
xchg
mov
and
xor
sub
mov
or
mov
notb
std
or
mov
filds
cmp
xlat
inc
gs
orl
jb
pop
pop
sarb
inc
push
fsubrs
cwtl
xchg
enter
cli
xor
iret
adc
in
mov
gs
imul
adc
fcoml
idivb
pop
bound
push
fadd
dec
in
mov
gs
cmp
popf
stc
mov
mov
cmpsl
dec
movsl
mov
daa
jl
pop
xchg
iret
or
mov
add
push
inc
loopne
nop
pop
pop
jmp
aad
add
in
out
jecxz
xchg
movsl
sub
dec
mov
adc
mov
mov
push
mov
jns
inc
or
icebp
xchg
jnp
push
xchg
faddl
inc
push
fs
xlat
repnz
dec
es
test
or
and
lret
stos
mov
out
cltd
lock
clc
cmpsb
adc
xor
int3
enter
add
orl
jl
mov
ja
mov
push
xchg
imul
mov
add
cmc
mov
pop
popa
lds
lods
sub
pop
movsb
inc
jle
mov
daa
dec
push
sbb
jp
pop
imul
push
sub
adc
adc
jbe
jb
jmp
push
adc
add
addl
sbb
in
or
cmp
sbb
mov
imul
mov
push
cltd
outsb
inc
arpl
fs
sbbb
pop
je
mov
dec
push
sub
mov
sbb
das
push
jle
lock
mov
inc
push
mov
fsts
loope
and
or
loop
jno
mov
mov
jbe
add
xlat
ljmp
mov
sar
shrl
ret
pop
jmp
push
outsl
es
cmp
shl
aaa
movb
fcoms
repz
movsb
in
adcb
pop
call
xchg
mov
sub
hlt
xor
pop
rcll
es
xor
scas
or
cmp
cmc
fimuls
jl
jmp
shlb
std
fs
insb
out
adc
xor
jae
sub
dec
xor
xor
pop
movsl
inc
fimuls
dec
and
out
xchg
lea
inc
pop
fbld
add
lret
adc
mov
jle
or
imul
jae
lahf
mov
mov
insl
jge
adc
push
or
fdivrl
push
jecxz
stos
js
cmp
call
icebp
or
jo
nop
cmpsb
dec
lods
sbb
into
sub
stos
in
iret
lds
fisttpll
cwtl
and
movsb
scas
xchg
fadds
pop
addl
aaa
mov
push
inc
adcl
dec
in
push
mov
mov
sar
jb
movsb
out
shl
jge
popf
pop
mov
cmp
call
pushf
sub
add
lret
add
insl
mov
imul
lock
mov
aaa
test
push
outsb
out
inc
adc
xchg
jl
inc
lods
lret
jno
cmpsl
mov
lods
outsl
pop
pop
stos
sub
es
dec
fwait
mov
mov
ret
push
sub
push
sub
mov
sti
xchg
mov
mov
xchg
arpl
lods
cmp
pushf
dec
xlat
lods
xchg
hlt
or
dec
aad
aas
mov
int
es
xchg
lret
sub
or
fs
sub
sti
lds
add
mov
in
fwait
mov
ja
pop
aaa
and
call
aas
dec
or
fdivl
mov
bound
mov
sub
inc
ffree
in
test
adc
lret
imul
lock
aad
mov
mov
pop
mov
dec
lods
jbe
imul
movsl
or
hlt
ret
or
inc
inc
adc
mov
sahf
fadds
mov
mov
inc
inc
loope,pn
test
mov
adc
inc
cmp
inc
test
add
xor
shrb
dec
cltd
cmp
out
pop
add
data16
les
jbe
pop
jne
in
in
cmpsl
movsl
sbb
cwtl
and
fstps
fdivs
cmp
cmp
ja
cmpsb
mov
pop
mov
dec
fidivrl
lods
pop
ret
dec
jbe
mov
inc
push
inc
insl
ds
sub
push
add
arpl
pop
loopne
sub
lahf
adc
fcoml
ret
mov
fwait
and
jae
jbe
jns
ss
ja
xchg
int3
jnp
jne
into
or
push
jle
sbb
dec
sti
cmc
adc
ret
arpl
mov
sub
xor
lea
add
jae
std
iret
movsb
mov
add
xor
sti
sbb
jg
jo
mov
cwtl
inc
ljmp
xor
push
jnp
xor
es
test
cld
sub
loop
leave
mov
mov
push
push
adc
mov
pop
fmuls
outsl
loope
sahf
inc
mov
jecxz
fwait
or
mov
loope
xor
pop
push
lods
mov
mov
push
sub
aaa
lret
inc
ljmp
lcall
jno
mov
stc
push
inc
xor
in
shl
dec
lret
dec
sbb
xchg
rcl
icebp
stos
scas
dec
popl
shl
dec
or
cmp
ror
out
mov
add
mov
mov
rcrl
lods
cwtl
aad
mov
in
mov
ret
xor
movsb
add
pusha
and
sbb
in
outsl
xchg
push
cli
pop
stc
pop
and
popf
cmc
push
pop
pop
sbb
das
sar
leave
sbb
bound
repnz
popl
adc
rcl
push
jmp
cmc
xchg
adc
bound
imul
loope
test
in
push
scas
ret
sbb
repnz
and
cmp
push
in
stos
mov
jae
roll
stos
loope
int3
pop
daa
dec
mov
orl
pop
mov
cwtl
pop
test
into
mov
or
ret
xchg
mov
incl
sub
and
push
cli
pop
or
xchg
out
test
fdivs
mov
std
cmp
loop
sbb
pop
or
or
pop
out
push
jecxz
jnp
shrd
cmp
fstpl
jl,pn
pop
dec
rcll
popl
push
mov
pop
jmp
mov
push
mov
xor
inc
pop
or
xor
push
add
push
dec
jb
xorb
aam
and
sub
inc
insl
xchg
cmp
inc
stc
lea
cmpsb
sub
jnp
mov
jno
psubsb
xchg
jmp
jg
jbe
dec
adc
mov
imul
inc
subl
mov
lar
sbb
sbb
mov
and
icebp
pop
pop
int
sub
rolb
mov
mov
js
pop
xlat
dec
cmpsl
mul
jle
or
xor
dec
je
js
jl
push
jnp
shlb
cmp
xchg
inc
or
addb
filds
sbb
dec
cmp
sbbl
fxch
insb
cwtl
ret
push
xchg
push
and
addl
jne
or
adc
adc
aam
test
loope
repz
cmc
insl
push
mov
scas
out
cs
mov
cltd
sub
pop
adc
mov
dec
mov
aad
add
xor
into
psrld
adc
and
mov
mov
dec
sbb
insb
pop
int3
in
mov
mov
cmp
inc
adcl
nop
fistps
leave
repz
repz
pop
out
mov
and
fs
adc
and
and
xchg
xchg
and
scas
and
jl
int3
dec
iret
fistps
in
add
addr16
adc
js
fldt
mov
jg
sub
sub
imul
xor
ret
fsubrp
inc
xchg
jle
clc
mov
mov
sub
sbb
imul
imul
xor
shll
cmp
mov
dec
push
not
jns
cmp
iret
inc
mov
mov
loop
jle
dec
data16
out
pusha
icebp
dec
bound
insl
mov
and
insb
or
ret
xchg
jno
or
in
test
lock
pushf
and
sub
popf
adc
sub
mov
outsb
movsl
xchg
repz
inc
dec
cltd
mov
test
jnp
loope
mov
fbld
sub
cld
jae
popf
adc
enter
cli
push
mov
mov
xor
addr16
and
jno
jno
sub
xchg
jl
xchg
in
xchg
sar
xchg
or
fwait
repnz
jo
into
adc
mov
and
mov
or
pop
call
mov
testb
lahf
jno
scas
adcb
int3
enter
xlat
pop
dec
lods
sub
adc
aaa
xlat
test
mov
movsb
fsubr
cltd
jne
jo
dec
lret
dec
cld
icebp
cmp
mov
mov
pop
cmp
cmpsb
xor
xchg
in
out
cwtl
hlt
test
xchg
iret
divl
sbb
jns
cld
xor
mov
nopl
fisubl
mov
sbb
mov
cwtl
addr16
lcall
ret
mov
jns
jle
js
test
imul
pop
mov
and
adc
xchg
stos
pushw
fadds
fs
xor
idiv
mov
je
lcall
test
stos
fcomip
aaa
mov
sub
cmpsb
xor
xlat
and
jge
xchg
jo
imul
sub
push
fildl
push
enter
add
outsb
cld
out
inc
xchg
push
inc
push
inc
inc
and
push
xchg
dec
push
lods
gs
xor
pusha
push
cmp
jp
inc
xor
aaa
sub
ds
add
inc
cmp
inc
sbb
shl
cltd
lret
pop
fstl
xor
movsb
mov
cmp
push
mov
push
adc
push
aas
jns
ss
sub
shll
inc
push
jns
jle
icebp
inc
pop
mov
push
insl
dec
test
cs
mov
jnp
stos
bound
dec
add
xchg
or
cmp
notb
enter
fsubs
aas
sub
flds
js
adc
inc
fadds
push
enter
cmpsb
lock
call
es
cmp
jnp
sub
cs
dec
mov
stc
sahf
mov
mov
mov
aaa
or
xor
lahf
mov
jo
out
leave
in
dec
jg
out
iret
mov
shlb
push
jb
add
xchg
push
shlb
push
inc
dec
loop
sub
mov
daa
dec
or
push
lret
add
mov
xchg
test
inc
sbbl
push
sti
xchg
pop
xchg
dec
or
cmp
mov
push
pop
lahf
data16
dec
pop
jae
add
xchg
dec
call
push
xlat
push
mov
stc
push
shlb
pop
xor
add
arpl
mov
xor
jl
xor
pushf
fdiv
dec
dec
sub
pop
mov
or
cltd
das
add
sub
xorl
xchg
insb
loopne
int3
or
jecxz
scas
add
je
pop
pop
rcll
outsl
test
in
mov
jmp
into
sbb
lods
and
pusha
js
out
in
and
sbb
outsl
xor
mov
inc
mov
pop
jbe
xchg
clc
add
or
hlt
push
pop
call
pop
stos
xor
cmp
or
and
inc
sarb
push
dec
push
xor
jb
testl
out
cmp
stc
out
mov
add
jl
dec
cmc
or
pop
xchg
sahf
and
xchg
mov
ret
insl
push
jnp
cmpsb
addr16
pop
lods
lret
scas
ror
pop
movsb
jns
cmpb
push
mov
xchg
mov
pusha
or
shlb
dec
sbb
test
rcl
js
ficoms
xor
testb
ljmp
cmp
mov
adc
pop
test
cmp
arpl
stos
scas
sbb
std
dec
cmp
ret
mov
imul
mov
cmp
sub
std
add
fisubl
fwait
shll
inc
mov
fstpl
fnop
repnz
push
into
jmp
insl
push
mov
fcmovnb
in
mov
fldenv
pop
iret
pop
hlt
mov
mov
fprem
mov
scas
hlt
test
in
leave
out
mov
fnstenv
adc
insb
mov
in
sub
add
mov
cmc
push
call
lock
cmc
aad
mov
loope
sbb
jge
jmp
jmp
les
or
mov
dec
bound
cmp
adc
hlt
jo
jne
ret
repnz
add
nop
inc
lods
dec
insl
jbe
xchg
int3
push
and
inc
test
imul
cld
or
pop
scas
fnstsw
pop
in
xchg
push
push
jmp
mov
pop
sarb
pop
pop
nop
push
xor
out
push
fdivp
pop
sub
insl
imul
push
iret
jbe
mov
fs
jmp
les
xchg
jno
xchg
popa
push
fldt
pusha
out
mov
xchg
and
lret
adc
jne
leave
sar
mov
jbe
in
aas
outsb
cld
push
movsl
mov
add
dec
fistps
pushf
jns
xchg
xchg
or
cwtl
xlat
sub
push
sbb
mov
shrb
push
push
in
inc
push
or
lods
mov
out
addr16
les
pop
loop
stos
or
xchg
std
fisttpll
lods
out
or
stc
ja
mov
mov
std
xchg
mov
mov
les
dec
inc
clc
mov
xchg
pushl
sub
mov
fadd
stos
les
sarl
mov
iret
lret
xchg
cltd
pop
scas
xor
es
add
daa
fdivrs
lret
cli
iret
adc
jge
adc
cli
or
notb
popf
dec
dec
inc
jb
cltd
iret
lcall
pushf
int3
mov
mov
fisubl
jno
xor
mov
in
fsubl
cmc
or
mov
pop
insl
or
or
pop
iret
xchg
sahf
test
xchg
mov
call
repz
add
ss
pop
scas
push
test
lcall
fimull
int3
push
mov
out
outsl
out
xlat
add
fimuls
outsb
add
adc
cmc
sub
mov
cmp
push
cmp
cwtl
cltd
insb
js
cmpsb
test
adc
repnz
sub
inc
and
mov
out
cli
mov
out
negb
push
adc
leave
add
jae
into
ljmp
mov
jl
cmp
jo
sbb
dec
mov
icebp
bound
pop
jle
dec
push
sbb
fstl
pushf
mov
or
adc
dec
cltd
jp
nop
push
adc
pop
mov
jp
pop
mov
stc
insb
ret
out
jnp
xor
mov
mov
test
popa
loopne
mov
repz
ret
jg
pop
xchg
xchg
push
lds
inc
fwait
cltd
mov
xor
mov
mov
and
mov
push
sbb
test
mov
dec
inc
pop
movsb
mov
sbb
loop
push
ljmp
adc
lock
jne
mov
jne
push
pop
xor
std
ret
mov
and
adc
dec
jmp
sub
loopne
js
pusha
xchg
push
sub
je
mov
mov
icebp
nop
jns
mulb
loop
mov
cli
mov
push
xchg
push
adc
fsubr
dec
mov
jae
sti
dec
mov
xor
adc
xor
test
inc
mov
cs
out
or
adc
cs
sahf
js
push
cmp
jbe
inc
adcb
sub
adc
jmp
lds
loopne
cld
mov
popf
sbb
je
cmp
or
cmpsb
mov
pop
mov
sub
mov
add
out
test
pop
mov
mov
scas
sub
clc
push
and
nop
call
mov
leave
adc
gs
je
insl
paddb
cmpl
jb
popa
pop
jle
popa
punpcklwd
pop
aad
mov
push
insl
lret
jbe
hlt
nop
es
push
fistl
sub
cmp
jne
cmpsb
ja
or
insb
add
dec
xor
xchg
or
mov
mov
dec
pusha
outsb
or
imul
call
push
mov
add
outsl
dec
fwait
movsl
leave
sbb
inc
inc
xor
mov
mov
pushf
inc
ret
add
jge
fadds
mov
std
rcrb
les
lock
pop
mov
and
xchg
sub
ja
push
sarl
in
test
xchg
mull
add
enter
arpl
je
xor
adc
jnp
cmpsl
push
pop
push
popa
push
aam
mov
inc
add
je
clc
pop
divl
mov
dec
push
mov
icebp
cwtl
int3
and
pop
mov
and
popf
icebp
pop
dec
pop
into
lea
ds
pop
jge
jb
sbb
repnz
icebp
arpl
cmp
out
aaa
xchg
lret
aas
or
dec
adc
pop
adc
aad
in
popa
sbb
repnz
std
inc
or
adc
mov
pop
inc
fwait
bound
cltd
push
mov
data16
jp
push
les
lret
shll
jno
add
push
or
xchg
lret
lods
mov
jl
pop
sarl
je
sbb
mov
int
xchg
adc
imul
adc
mov
sub
int
std
bound
mov
mov
iret
cmp
or
mov
fucom
imul
cltd
and
pop
mov
xchg
jp
movsb
adc
cmp
jl
sub
loope
sbb
mov
add
and
cmpl
inc
or
inc
jnp
lds
das
pop
shl
cmp
inc
add
jp
jae
sub
jno
ret
or
mov
bnd
mov
cld
hlt
inc
inc
mov
jb
push
mov
das
add
push
xchg
cmp
xchg
call
cwtl
pop
ret
pop
movsb
js
mov
adc
cmp
sub
sub
xchg
lss
pop
shll
loop
sub
mov
jp
test
lods
and
mov
jmp
aad
jb
sub
cmpsb
repnz
xor
add
xor
mov
insb
dec
movsl
ss
add
ds
dec
mov
inc
mov
sbb
sub
movsl
nop
push
mov
pop
das
outsb
loopne
shll
neg
jg
ret
mov
add
push
add
cs
mov
dec
test
push
pop
clc
hlt
or
pushl
dec
xchg
push
shrl
xor
lcall
sub
shll
lods
sub
pop
push
mov
jbe
pusha
loopne,pn
xor
cltd
cmp
xor
push
and
xor
iret
fcoml
in
adc
lret
lea
stos
push
push
lret
popf
test
cs
imul
or
mov
hlt
mov
inc
dec
and
xchg
and
jle
dec
push
imul
insb
mov
push
dec
pop
fstl
mov
xor
test
call
inc
jne
mov
mov
cmc
pop
xlat
dec
lds
push
xor
repz
xor
sub
inc
pop
mull
and
pop
inc
or
leave
rcr
lahf
push
sbb
and
xchg
mov
push
pop
mov
popf
jne
idiv
sub
pusha
aas
rcrb
imul
sahf
scas
loope
or
sarl
dec
fists
sbb
inc
or
pop
int
push
out
pop
fisubl
out
loopne
inc
dec
cmova
pushf
sbb
pop
dec
inc
gs
sub
dec
rclb
mov
sub
sub
mov
aad
mov
ret
cmp
cmc
and
arpl
add
xor
push
xchg
test
mov
mov
idiv
xor
mov
loop
enter
xchg
fnsave
mov
add
lcall
inc
mov
pushf
int3
jns
mov
ljmp
test
bsf
sbb
push
repnz
scas
xchg
mov
je
xor
push
jbe
cmp
push
jecxz
push
sub
inc
or
or
mov
out
cwtl
mov
add
adc
call
sbb
push
mov
push
fiaddl
mov
imul
leave
testl
addr16
ljmp
icebp
shlb
or
cli
add
into
jmp
dec
xlat
and
fnstenv
movsb
and
and
movsb
mov
sar
add
pushf
aad
push
mov
cmpsl
test
sub
xor
or
pusha
jo
push
pop
add
sar
popa
cwtl
icebp
lea
push
mov
push
push
jne
xor
cmp
mov
or
and
cmp
test
jle
pop
loopne
stos
mov
or
xchg
ret
out
or
or
pusha
cmp
sbb
xor
sbb
cmc
push
fcomps
mov
push
outsb
scas
dec
mov
xchg
lods
xchg
mov
push
xor
shlb
hlt
jns
std
inc
mov
inc
and
mov
jno
inc
mov
mov
sub
test
call
cwtl
sub
jp
xlat
rol
daa
add
sbb
fstpt
jb
cwtl
inc
jo
add
jmp
cmp
out
mov
dec
inc
mov
ror
pop
fs
push
stos
jbe
mov
pop
popa
sbb
xor
ret
and
cmc
mov
add
es
push
repz
in
loop
push
repz
loopne
test
movsl
ljmp
outsl
xor
lret
adc
mov
addr16
bound
icebp
bnd
mov
andb
icebp
cltd
rcrl
stos
es
outsl
push
xlat
into
shrl
mov
or
dec
or
xor
adc
pop
dec
cmpsb
aaa
add
inc
imul
lahf
lods
aas
cwtl
movsb
cmp
xor
add
xchg
and
fwait
aam
sbb
mov
repnz
ljmp
cmpsl
mov
pop
cmpsb
cmpsl
inc
sub
repnz
in
out
dec
xor
pop
ljmp
sahf
iret
sub
fisttpll
outsb
mov
in
ret
sarl
cmc
into
fwait
push
push
inc
ljmp
sub
leave
pop
push
arpl
lock
popa
xchg
sbb
popa
cwtl
scas
inc
sarl
jmp
in
ret
pop
xchg
adc
lods
ljmp
xor
jl
cwtl
mov
movsb
pop
push
and
cmp
or
and
loope
mov
mov
xchg
jecxz
js
add
xchg
pop
fmul
sarb
push
outsb
rcrb
and
fldcw
jmp
jno
mov
and
adcb
call
shl
jno
leave
fnstsw
push
dec
mov
ret
sbb
test
cmp
push
int
push
xor
jecxz
fisttps
out
aad
xor
and
push
xchg
imul
test
and
in
push
adc
dec
loopne
cmp
mov
in
outsl
insb
notb
cmp
data16
jmp
testl
imul
scas
adc
inc
adc
imul
addr16
push
push
add
roll
insl
push
xor
out
inc
mov
cmp
sub
sub
fwait
repnz
cmp
sub
outsb
lock
cmpsl
jnp
xor
aad
inc
test
data16
ljmp
js
mov
lret
movsl
into
loope
inc
fs
ds
inc
and
out
jmp
and
test
int3
inc
sub
pop
pop
fsubp
or
out
xchg
shll
mov
incb
add
jae
icebp
mov
push
pop
pop
and
xor
fwait
mull
cmpsl
nop
mov
push
repnz
mov
je
test
inc
mov
imul
sbb
std
push
push
pop
xlat
andps
fisubl
push
push
push
sub
xor
sub
jns
xor
mov
jmp
adc
mul
sbb
outsl
push
addl
mov
in
out
int3
push
je
lret
cmpsb
add
test
lea
int3
shll
fwait
std
sub
cs
dec
dec
push
xor
push
sub
inc
xchg
add
cmp
test
pop
addr16
ficoms
push
pop
and
mov
insl
or
xor
mov
mov
pop
jg
loopne,pt
int3
or
in
mov
dec
add
jb
or
add
stos
into
pop
gs
inc
lds
out
out
sub
or
push
fs
add
sbb
mov
mov
sub
testb
fnstenv
mul
jae
stc
inc
in
jp
sbb
mov
idivb
inc
and
xchg
dec
push
mov
mov
lret
xchg
jmp
push
sub
leave
shlb
ljmp
mov
mov
push
fnstenv
orl
mov
addl
xchg
mov
cltd
test
mov
mov
sbb
cmpsl
cmp
mov
jns
iret
jle
imul
lods
loop
loop
loope
mov
lret
loop
dec
adc
cli
in
lret
sub
call
pop
xor
mov
xchg
in
and
sub
ror
push
repnz
xor
mov
sbb
mov
mov
sbb
outsb
lock
push
cld
sub
clc
ds
mov
mov
shr
fistpl
lods
iret
loope
out
adc
inc
ret
out
mov
pop
jl
repnz
or
imul
push
pushf
sahf
add
stos
lret
pushf
fldl
out
jle
fucomip
iret
ss
fidivrl
lock
cmp
test
psrad
cwtl
sbb
clc
add
jl
aaa
push
in
fwait
mov
mov
pop
test
int3
shrb
sub
sub
negb
dec
in
mov
push
lret
stc
hlt
in
cltd
push
cmp
sbb
adc
or
sbb
pop
imul
xchg
insl
popf
sbb
fistpll
push
repz
or
sti
dec
rol
sub
cmp
rcll
rorb
jnp
std
das
insl
sub
xor
stos
lea
std
fs
mov
pop
addr16
inc
or
mov
scas
shl
scas
ret
lock
add
ret
cmp
mov
leave
movsb
add
sbb
sub
push
mov
int3
nop
sub
adc
add
int
adc
aad
xor
mov
mov
subb
mov
je
adc
jbe
jp
add
arpl
push
xchg
sub
loop
insl
dec
inc
dec
call
pop
add
int3
lcall
sub
vmovhpd
test
enter
imul
jecxz
fstps
xchg
mov
mov
in
addl
push
mov
pushf
std
fs
adc
jle
imul
adc
test
test
jg
dec
int
xorl
pop
mov
or
js
mov
out
cmpb
push
scas
mov
mov
push
in
adcl
fmull
add
outsb
ret
sahf
outsb
test
mov
pop
lret
das
pop
add
das
js
mov
gs
rcrl
or
or
push
xchg
fcomps
cmp
js
and
jg
fisttps
xchg
fldcw
lret
lods
adc
stos
nop
icebp
imul
mov
mov
icebp
sbb
je
popa
cmpsb
test
add
sbb
fwait
jecxz
pop
and
and
add
xchg
daa
shrb
or
test
lods
popa
arpl
cmpsb
clc
ret
std
jg,pn
mov
ds
lret
push
dec
sub
mov
cmp
jmp
jno
loopne
loop
and
das
scas
xor
push
xchg
inc
dec
push
stos
or
imul
push
or
sbb
inc
test
push
leave
xor
mov
mov
sub
mov
fadd
or
pop
mov
inc
ljmp
adc
mov
push
jb
xor
negl
xchg
loope
xor
mov
jno
call
std
mov
mov
nop
push
nop
push
fsubrs
loopne
shl
mov
in
int3
in
pop
jp
sub
scas
fldenv
std
loope
data16
out
cmp
xor
mov
dec
stc
mov
out
jns
repz
movsb
jns
and
push
pop
test
pop
sub
xchg
outsl
pop
or
adc
fcoms
into
lock
aam
pop
mov
daa
dec
add
clc
movsb
cmpsl
mov
sub
repz
leave
shl
ret
xlat
push
jg
iret
scas
sarl
cmp
mov
std
hlt
call
pushf
shll
enter
fistl
push
mov
ja
xchg
daa
fcomi
fsubr
rcrb
add
out
push
shlb
mov
shlb
enter
into
cmc
lcall
div
pusha
and
cs
xchg
fwait
jecxz
dec
xchg
push
and
dec
push
sbb
push
mov
xchg
sbb
sub
push
fsubs
sarl
or
add
out
adc
inc
mov
or
sbb
orb
xchg
push
movsl
adc
imul
push
ror
dec
notl
stos
shll
xchg
mov
xchg
andl
push
inc
lods
mov
or
imul
mov
adcl
test
xchg
inc
and
fisttpll
pop
mov
cmp
out
or
adc
add
fdivs
out
ss
jo
push
sbb
fildll
repnz
and
sub
out
sbb
fdivl
rclb
adc
xchg
iret
leave
les
dec
pop
mov
icebp
test
fwait
ret
push
ljmp
arpl
mov
pop
lods
xchg
pop
sbbb
xor
aad
and
movsw
sub
mov
xor
dec
repnz
int
ret
xlat
xor
add
insl
addr16
dec
mov
arpl
or
pop
xchg
lcall
push
loop
pop
push
push
xchg
outsl
les
mov
mov
fists
adc
flds
std
je
xchg
jl
sar
xchg
lcall
cs
popa
cmc
hlt
push
or
sub
std
jae
out
out
add
jmp
mov
or
les
mov
fwait
mov
aaa
bswap
inc
fbld
push
push
outsl
inc
repz
or
icebp
loopne
dec
xor
jno
mov
mov
test
or
inc
mov
loop
mov
das
inc
das
and
fcmove
scas
add
fwait
jae
sub
xchg
inc
xchg
jb
fs
cltd
addr16
jle
xor
inc
mov
push
mov
mov
adc
push
jg
repnz
rclb
jl
mov
mov
mov
lret
push
fwait
lods
adc
std
sbb
push
dec
pusha
sub
push
xlat
mov
ror
dec
test
shlb
movsl
jp
mov
arpl
inc
jmp
sbb
inc
es
add
adc
mov
inc
add
adc
jg
scas
ds
add
cmp
push
push
pop
xor
aas
pop
dec
popf
or
out
inc
sti
fildll
movsl
mov
repnz
ds
mov
lock
iret
int3
adc
push
sub
sti
adc
ja
mov
insb
in
das
int3
inc
rolb
xor
data16
inc
pop
pop
sbb
jmp
adc
imul
sbb
push
and
sub
arpl
dec
icebp
mov
out
sub
cmp
jnp
sbb
das
mov
mov
cld
lret
lea
mov
je
xchg
iret
mov
imul
dec
xchg
imul
xchg
fs
scas
test
nop
and
insl
cmp
cmpsl
popa
sahf
pop
pop
scas
push
pop
out
and
adc
int
mov
jae
mov
sub
bound
ljmp
jbe
jb
xchg
cmpl
scas
lret
push
iret
cltd
pop
lods
fs
fld
xchg
pop
and
xor
fbld
lods
sarb
push
enter
ficoms
adc
add
jb
xor
push
cmp
mov
test
aas
sbb
fiadds
popf
mov
shrb
cmp
jg
jge
into
inc
dec
mov
inc
test
sbb
mov
or
iret
sub
ss
push
sub
pop
out
mov
mov
stos
pop
jmp
lds
xchg
pop
dec
xor
dec
call
lods
je
dec
inc
mov
iret
lods
shr
in
enter
mov
ret
push
test
in
push
lret
testl
xor
fcompp
adc
adc
mov
mov
aas
push
fldenv
add
sub
jge,pt
cmc
xchg
stc
mov
mov
jg
sbb
stos
test
sub
loopne
scas
nop
xor
xchg
pushl
cmp
jmp
xchg
push
out
dec
fcomps
lds
jge
fs
pop
cmp
popa
xchg
fidivl
in
and
jo
lea
sub
imul
stos
iret
pop
test
jge
fldl
jmp
and
add
jbe
mov
xchg
js
arpl
adc
push
hlt
test
add
mov
scas
test
jno
xor
leave
or
mov
aas
inc
lcall
cmp
gs
add
fsubs
mov
mov
cmovnp
sub
xchg
lea
xchg
stos
pop
mov
adc
sub
xor
data16
xchg
int
ja
and
mov
mov
or
mov
xchg
ret
push
test
nop
xchg
cmpsb
mov
pop
xchg
mov
mov
mov
lea
adc
loop
repnz
add
je
aad
and
fwait
pushf
sub
mov
mov
pop
loop
inc
cld
lods
sbb
repz
dec
ficoms
daa
icebp
repnz
xchg
icebp
lds
mov
cltd
sub
push
xor
mov
cmp
ljmp
mov
sbb
cmp
dec
das
cmpsb
mov
movsb
xor
mov
out
ljmp
xor
pop
dec
jae
ss
mov
mov
mov
xor
mov
vfrczpd
adc
in
ja
dec
sub
cld
cmp
sarb
repz
sbb
add
mov
divb
fnstcw
or
jge
out
inc
sub
aam
rcl
popa
pop
in
mulb
and
add
mov
ds
xor
mov
adc
xchg
mov
ss
sbb
ret
cmpsl
add
xchg
cmpl
insl
in
pop
imul
stos
sbb
cltd
dec
and
xor
popa
cmp
sub
rorb
and
fimull
inc
push
movsl
mov
cmp
jp
lret
popf
dec
jge
icebp
add
das
adc
adc
mov
test
push
ja
pop
sbb
or
add
mov
sbbb
or
setne
xchg
dec
cmp
push
lods
pushf
and
out
mov
fdivrs
cli
jns
or
xlat
mov
cwtl
lock
in
mov
xor
xchg
lahf
repz
mov
pop
mov
sub
adc
nop
dec
xor
int
push
js
jb
or
sub
push
pop
inc
add
inc
or
iret
rcrb
movsb
mov
inc
cmp
pop
in
dec
int
dec
test
sarb
mov
outsl
push
call
mov
int3
fstl
xchg
outsb
sub
pop
ror
mov
dec
jmp
xchg
jbe
jp
cli
pop
jnp
cmp
in
pop
inc
or
iret
mov
icebp
or
dec
mov
lcall
fcoms
or
adc
fdivrs
pop
cwtl
mov
mov
or
lods
scas
jno
fldcw
add
sar
movsl
mov
in
inc
sub
jmp
std
xor
or
sbb
mov
add
and
fnstcw
repnz
fcoml
dec
xor
arpl
or
ds
mov
jno
or
xchg
and
mov
mov
lock
int3
pop
inc
test
jbe
inc
leave
imul
xor
push
mov
repnz
cmp
and
mov
push
xor
ret
push
mov
mov
fbld
xchg
cmp
lret
scas
cltd
rcrl
into
flds
scas
out
and
sub
nop
push
push
fisttpll
jle
call
out
scas
test
jmp
dec
sbb
loope
dec
or
pop
mov
mov
outsb
rorl
mov
cmp
mov
test
jne
aam
cmc
int3
in
test
and
xor
arpl
sub
cmp
mov
inc
mov
mov
insl
loopne
popf
negb
xlat
aad
jle
mov
inc
mov
fisubrl
and
pop
add
sbb
outsl
ret
xchg
roll
cld
or
cltd
aam
outsl
test
inc
test
mov
cli
ljmp
xchg
adc
lahf
xor
inc
out
lret
pop
adc
dec
push
jp
adc
dec
xchg
out
aad
dec
pop
or
adc
xor
scas
scas
test
outsb
dec
jmp
cli
xchg
adc
push
push
andb
hlt
out
repz
xor
lock
call
pop
mov
push
xor
and
xchg
dec
sbb
add
inc
xchg
add
hlt
push
movsb
clc
imul
xchg
das
adc
dec
xchg
shrl
mov
xchg
cld
aas
arpl
call
push
pop
mov
add
mov
xor
adc
cld
in
popa
mov
orb
dec
leave
mov
and
and
sbb
cli
dec
lock
dec
xlat
mov
mov
out
pop
push
int
lock
mov
cmp
adc
addr16
movl
scas
cwtl
mov
js
or
add
xchg
and
adc
test
insb
insl
xor
fsub
in
sub
test
pop
ret
xchg
shl
out
dec
xor
jmp
push
inc
sahf
adc
sub
insl
fadds
int3
adc
xchg
out
ja
mov
in
jo
enter
fldenv
sti
fst
addr16
sbb
adc
ja
mov
shll
pop
mov
or
lds
push
xchg
js
out
xor
rcll
xchg
movsl
cmp
or
popf
out
cmp
incl
popa
call
inc
sti
push
mov
xchg
addr16
lea
inc
lds
jb
mov
cmp
lret
and
lock
ljmp
cltd
mov
dec
les
mov
loopnew
and
outsb
in
jl
add
cmpb
mov
xchg
inc
and
mov
call
xchg
mov
rol
adc
loop
sbb
repz
shlb
loope
pop
outsb
mov
jns
jecxz
and
mov
add
outsb
add
fs
cmc
mov
sbb
sbb
fstl
jne
mov
cmp
push
bound
dec
mov
test
lods
js
dec
negb
test
mov
das
xor
fnsave
testb
and
mov
std
lea
push
adc
ret
or
ret
pop
mov
std
and
mov
add
out
push
cmp
sbb
jg
popf
test
adc
xor
fsts
mov
mov
ljmp
dec
mov
pop
repz
stos
enter
mov
das
sub
jmp
and
push
leave
and
dec
or
jle
in
mov
mov
xchg
rcr
fmull
cli
xor
jae
pop
jge
fstl
mov
pop
mov
jne
mov
cmp
jge
push
fsubrl
push
mov
add
insb
mov
cmp
xchg
je,pt
stos
fidivs
push
inc
fs
or
inc
clc
out
rcl
dec
jecxz
cmp
mov
and
sbb
mov
push
out
sar
jnp
push
cs
jb
stos
sbb
stos
call
push
je
mov
or
scas
mov
mov
cwtl
adc
mov
and
in
mov
xor
ret
jbe
mov
pusha
inc
pop
cmpl
push
xchg
lods
nop
popa
sar
flds
push
inc
fcomip
adc
aaa
mov
jle
inc
mov
xor
ds
mov
pop
or
dec
xchg
pop
leave
xchg
cltd
sbbb
movb
jecxz
popa
or
decb
jecxz
inc
xor
push
gs
xor
push
pushf
mov
xlat
fildll
cmp
rol
in
outsb
call
mov
shlb
pop
mov
les
andb
sbb
pop
jb
fcoml
aaa
jb
sub
in
sarb
xchg
push
pusha
jne
popf
movsb
lds
sub
movsb
fwait
movsl
fdiv
scas
push
ds
testb
mov
aas
addr16
call
xor
push
pop
inc
sbb
sub
cli
ret
sub
jecxz
pop
imul
sub
js
inc
adc
add
jg
loope
mov
lahf
cli
es
push
test
in
scas
jecxz
enter
loope
out
das
daa
ret
jnp
sub
push
arpl
loope
ljmp
and
scas
xchg
lods
shlb
mov
jmp
pop
divb
jns
test
add
sbb
call
mov
out
or
insb
sub
dec
sub
pop
ret
inc
cmp
sbb
je
cwtl
mov
repz
loope
scas
sub
sub
or
and
xchg
imul
jecxz
insl
mov
testb
fsts
cmpsb
push
cmc
call
sub
mov
sbb
ret
imul
aaa
xor
fldcw
mov
lcall
lock
xor
lock
dec
insl
out
ss
fcompl
mov
cli
js
adc
pop
repnz
pop
or
jl
mov
popa
inc
push
and
cltd
call
out
ret
cmp
sbb
out
jbe
cld
xor
or
xor
pop
sub
sbb
dec
jae
imulb
jl
mov
shr
dec
xchg
ljmp
add
movsl
jne
add
xor
add
inc
mov
mov
mov
test
xor
int
jge
into
lods
add
cmp
flds
adc
test
jbe
into
cmp
test
gs
push
cltd
jns
fadds
fwait
insl
jbe
add
adc
cmpb
jg
add
insl
out
cmpsb
leave
push
testl
xor
jecxz
sahf
and
ret
inc
popa
xchg
push
sbbl
add
sub
or
outsl
mov
daa
cmp
jns
xor
pushl
cltd
or
stos
and
movsl
mov
dec
inc
cwtl
mov
adc
jge
bound
clc
fsubrl
inc
je
ljmp
int3
mov
xchg
jbe
dec
xchg
int
xor
adc
pop
clc
jl
push
addb
scas
jg
movsb
pop
cmpsl
dec
xchg
inc
inc
fwait
or
sti
mov
add
sub
daa
cmpsl
add
xor
subb
arpl
mov
in
xchg
xchg
and
ror
mov
movsl
xchg
out
mov
dec
iret
lret
popf
inc
loop
push
dec
sar
or
sbbb
mov
pop
clc
xlat
imul
aaa
out
cltd
scas
pop
dec
xchg
jbe
dec
dec
cmp
mov
pop
das
push
jbe
scas
aad
test
out
scas
hlt
dec
cwtl
and
push
sbb
stos
or
jge
loope
lods
icebp
sbb
in
gs
and
xlat
rcrl
lea
lret
imul
xchg
jb
dec
push
xor
adcl
movsl
xchg
xor
jne
js
sub
jns
dec
lds
adc
lret
popl
dec
push
into
mov
jecxz
in
xor
sbb
ficoml
inc
sbb
push
adc
out
jmp
iret
int
out
and
clc
xchg
xchg
adc
jne
test
mov
loope
repz
pop
daa
inc
xor
or
rcll
test
dec
negb
add
pop
mov
lock
shl
sbb
mov
loope
jb
push
jbe
xorl
lahf
xchg
cmp
pop
xor
in
not
bound
fcoms
cli
sbb
iret
and
sub
xchg
shl
das
loopne
negl
test
xchg
mov
fcomps
push
cld
addl
out
insl
rorl
stos
aaa
pop
arpl
out
or
and
mov
and
sbb
push
sub
or
jo
mov
mov
icebp
inc
ja
push
std
lret
pusha
test
mov
lret
int3
fwait
push
mull
or
push
inc
ret
enter
loope
and
sub
ja
mov
fwait
shl
mov
xchg
test
imul
aaa
and
adc
aad
shll
jno
mov
cmpsl
cs
in
xlat
nop
in
sbb
int
popa
outsb
or
xor
not
pushl
adc
and
dec
addr16
mov
push
leave
or
push
lret
sbb
sbb
popf
cmp
push
je
imul
xlat
loopne
mov
push
add
shll
negl
stc
cmp
jae
in
mov
popf
hlt
ret
xchg
out
aas
ret
sar
mov
hlt
cmp
jmp
jno
jmp
daa
dec
lods
test
jae
ret
xor
mov
jo
loopne
out
fsub
stos
sbb
js
aas
fcomi
pop
adc
xor
push
in
ror
int3
dec
push
push
sti
in
js
outsb
sbb
ljmp
sbb
mov
inc
aas
mov
test
cs
shl
les
jbe
mov
ds
mov
insb
jno
jmp
scas
stc
cmp
dec
push
aas
clc
inc
push
insl
test
sub
aaa
ficoml
mov
adc
push
inc
call
mov
mov
test
sub
in
daa
adc
xor
in
lret
addr16
mov
dec
jle
ja
repz
fdivs
ja
mov
iret
cld
ret
lock
pop
test
mul
push
lock
icebp
loope
or
loop
orl
loopne
das
mov
xor
pop
test
test
les
outsl
mov
pop
rorb
cwtl
loope
jb
in
js
or
aam
xchg
ficoms
push
inc
push
sti
jne
push
xor
add
jno
iret
nop
sub
fisttps
xor
stc
stos
inc
es
cwtl
adc
incb
or
push
imul
leave
jp
imul
dec
pop
fs
orb
out
add
mov
pushf
pop
leave
pop
lods
dec
xor
outsl
mov
dec
add
dec
push
into
sbb
or
xor
pop
cmp
aaa
fdivs
pop
and
nop
inc
ljmp
and
lods
pop
js
in
das
pop
dec
cmpsb
cmp
mov
adc
mov
fmull
mov
cli
divb
stos
pop
dec
out
cs
jge
pop
pop
adc
popa
jnp
enter
mov
inc
push
push
and
xor
addb
push
lcall
pop
mov
jg
test
aas
stos
push
popf
xchg
cld
outsb
jmp
js
jbe
dec
inc
fstps
mov
add
cmp
adc
in
sbb
sbb
je
jp
pop
std
test
js
pop
fsts
mov
push
cld
adc
add
xchg
imul
or
adc
sti
sarl
add
cmp
sub
das
stc
cmp
inc
jge
icebp
mov
test
add
and
xor
xchg
xchg
mov
bound
rorb
cmp
and
sahf
sarl
jbe
cmp
out
test
test
xchg
push
mov
adc
in
std
jg
mov
cmp
mov
jno
sbb
mov
mov
adc
jp
test
mov
pop
sbb
mov
push
jbe
mov
push
hlt
cmp
sbb
outsl
scas
pop
fistpl
pop
ja
shlb
lea
std
ds
or
lret
lcall
pop
addl
out
data16
inc
iret
pop
mov
movsb
mov
scas
cmp
pop
mov
mov
fs
sub
mov
push
es
and
pop
mov
sub
push
int
pop
ljmp
xor
jp
lods
sub
sbb
add
ss
mov
lods
jmp
or
mov
and
test
xlat
out
fwait
mov
xchg
xor
mov
xchg
mov
dec
sub
lret
push
adc
xor
dec
pop
sub
mov
fisubrs
adc
mov
xchg
jle
rcrl
loope
adc
lods
inc
xor
data16
sarb
test
movsb
mov
pop
insb
xchg
icebp
orb
dec
fildll
or
mov
out
fidivs
adc
inc
leave
push
lds
jmp
mov
and
cmpsb
cmp
shr
xor
inc
dec
or
mov
lock
ljmp
stos
loopne
push
mov
repz
ret
xor
movl
jmp
bound
test
mov
add
sub
add
xchg
repz
and
ljmp
cltd
mov
xchg
decb
jnp
mov
push
xor
mov
sbb
imul
and
push
addl
test
out
adc
jnp
pop
in
xchg
add
cwtl
xor
sub
and
sub
stos
xor
insb
xchg
mov
dec
adc
mov
and
mov
popa
dec
pushf
inc
pushf
imul
add
push
out
jge
mov
and
fbld
or
dec
stos
sub
push
pushf
fnstenv
mov
adc
push
xchg
xcrypt-cfb
cmpsl
fs
push
in
adc
mov
push
lods
gs
jg
xor
aas
mov
mov
imul
add
cmpl
addl
ret
mov
in
lods
jbe
sub
lea
inc
xchg
ret
stos
aam
shl
and
sub
fildl
cld
pop
xchg
js
test
jnp
jb
sbb
push
jnp
push
mov
push
negl
fucomi
sub
pop
jmp
int3
jo
and
fisttps
mov
lock
pushf
and
js
lcall
out
sbb
jne
stos
xor
mov
and
mov
lods
push
cmp
jno
jb
shrb
orl
inc
xchg
imul
cmpsl
xlat
mov
pop
add
xchg
jg
sub
stos
mov
dec
ja
jmp
dec
insl
xorl
inc
inc
sbb
nop
nop
sbb
rorl
daa
shr
inc
rolb
pop
subb
pushf
mov
pop
icebp
fxtract
repnz
cltd
int
insb
sbb
fisttpll
sbb
aad
lret
pop
pushf
pop
and
pop
push
mov
push
cmp
inc
add
testb
subl
add
jle
movsl
jge
push
out
jmp
xorb
shlb
jge
subl
aaa
xor
dec
push
sub
mov
push
and
pop
mov
mov
dec
das
lock
icebp
xor
xchg
cli
sbb
push
jno
xchg
arpl
inc
fdivs
push
cmp
mov
std
cmp
aaa
jle
push
inc
push
mov
lret
sarb
gs
push
jmp
adc
into
pop
movsb
cld
push
pop
jns
repnz
out
sbb
cmp
mov
nop
sar
cltd
jecxz
fwait
in
mov
leave
inc
mov
mov
jae
push
dec
je
dec
push
test
mov
inc
xchg
xchg
sub
xchg
ss
xchg
ja
lcall
add
pop
or
out
shrb
adc
daa
gs
add
out
movb
dec
push
fldlg2
enter
jmp
mov
adc
sbb
ja
jbe
ds
sarb
push
mov
into
pop
mov
pop
mov
dec
fsts
gs
ds
dec
dec
arpl
xor
xchg
stos
jmp
xorb
pop
rclb
lret
xchg
add
or
js
fld1
movsb
xor
popa
cmpsl
jp
sbb
je
or
push
sub
cmp
xchg
lods
dec
ja
mov
das
xor
fistl
mov
and
add
xor
mov
mov
or
out
stc
cmp
fdiv
test
pop
dec
mov
mov
inc
mov
jl
push
xchg
add
mov
outsb
fisubrl
fwait
xlat
adcl
mov
in
push
sub
mov
jb
ljmp
push
xchg
out
into
push
lods
lcall
mov
outsl
add
lods
inc
in
insl
ds
iret
adc
scas
cmp
jmp
push
out
sarl
cmpl
test
test
mov
dec
push
xchg
sbb
int3
clc
stos
xor
imull
xchg
mov
add
stos
pop
adc
loopne
sub
xor
lret
int3
inc
fucomip
dec
insl
loope
xchg
mov
jg
je
lods
lea
in
repnz
faddl
fs
nop
mov
mov
xor
ficoms
push
inc
mov
dec
dec
addl
ret
aam
xor
cmpb
jbe
mov
in
sbbl
adc
pushf
cs
sar
add
fstpt
xchg
adc
in
ret
pusha
jg
rclb
stc
add
xor
ret
pop
adc
out
cmp
and
inc
inc
and
or
or
inc
lock
repz
xor
lea
shlb
lcall
or
addr16
mov
negl
xlat
sbb
xor
imul
sbb
mov
jno
int
in
and
and
pop
sub
ja
cmc
pop
dec
sahf
jmp
fdiv
xchg
cmp
dec
enter
stos
inc
cmp
pop
or
inc
and
mov
add
mov
mov
xor
jae
leave
cli
dec
mov
mov
mov
popf
sub
loopne
incb
xchg
aas
ja
push
inc
pop
add
scas
out
scas
fbstp
and
dec
es
add
push
lret
mov
leave
stc
ljmp
popa
or
scas
fcomps
andl
stos
stos
pop
lds
out
xor
sub
push
cmp
adc
cmp
sbb
pop
jecxz,pt
test
jp
pop
jbe
xadd
out
loop
test
cmpsl
inc
and
clc
mov
cli
mov
add
cli
aas
jb
sar
sbb
xchg
ss
adc
pop
push
pushf
lahf
lods
sbb
gs
inc
and
lcall
cmc
int3
add
cmp
rcrb
adc
xchg
jo
pop
adc
inc
shll
sahf
mov
pop
dec
sub
enter
jmp
fsts
adc
mov
xlat
or
jae
lods
out
xchg
jbe
xor
flds
adc
insl
adc
mov
inc
cmc
jb
pusha
mov
int
dec
dec
aam
adc
push
pop
sub
adc
sub
mov
xorl
jle
push
mov
out
xorl
push
pop
in
xchg
nop
into
enter
aam
out
xor
add
stos
outsb
dec
cmp
enter
cmp
stos
push
test
jo
mov
add
aaa
adc
out
mov
pop
loope
fs
inc
jl
mov
outsl
sarb
inc
jmp
xor
repnz
aas
test
imul
cli
dec
mov
movsb
pop
sbb
sbb
pop
push
xor
mov
jg
mov
inc
xchg
inc
je
jl
movsl
jae
rcrb
or
ja
mov
dec
adc
push
pop
rcll
leave
pop
cmp
lods
bound
mov
mov
ds
push
add
mov
mov
aam
xchg
lahf
popf
xor
xor
push
out
jp
fistpl
cs
and
roll
sub
sub
and
adc
inc
aam
mov
xor
insl
mov
pop
pop
imul
stc
dec
jmp
ret
xchg
mov
xchg
sbb
sub
push
xor
adcb
xor
xchg
jg
lock
mov
sbb
ret
dec
shlb
jnp
inc
xrelease
cmp
pop
jae
jle
and
mov
jmp
and
sbb
adc
std
adc
fidivrl
dec
movsl
lret
aam
jb
and
push
call
push
pop
aaa
cltd
mov
and
iret
jns
push
insb
das
in
icebp
arpl
mov
aaa
dec
repz
dec
mov
cmc
loop
out
adc
sub
adc
int
mov
in
std
mov
inc
insb
je
mov
ds
in
imul
stc
jbe
xchg
adc
fidivrs
adc
lock
pop
xor
cs
clc
jne
mov
pushf
dec
and
iret
stc
cld
test
mov
xchg
sbb
ret
stos
xor
cmpsl
xor
pop
scas
dec
mov
in
jne
jg
jp
outsb
rcrb
fwait
adc
jge
mov
mov
pusha
add
xchg
sbb
mov
ja
ret
mov
dec
xor
adc
jg
out
xor
pop
or
sub
repnz
imul
lods
stos
cld
mov
mov
xor
cli
jns
mov
xchg
mov
push
pop
cmp
stc
inc
adc
add
fidivrs
or
xchg
popa
pusha
insb
ds
inc
mov
mov
dec
js
out
stos
push
push
cli
sbb
mov
xor
push
fnstsw
sbb
std
inc
cs
int3
inc
push
adc
lds
adc
clc
ds
fistpl
insl
xor
sub
cmpsb
aaa
in
dec
push
mov
add
jo
pop
adc
ljmp
mov
mov
push
push
mov
dec
jg
dec
add
cmp
leave
popa
mov
and
repz
inc
sbb
divb
mov
pushf
sbb
cwtl
fimull
jl
call
fldl
xor
add
lahf
mov
mov
subb
pushf
ja
iret
xor
pop
les
jg
xor
inc
das
fiaddl
shrb
lods
jecxz
fs
mov
adc
clc
or
leave
mov
aam
mov
add
cwtl
push
sbb
aaa
dec
and
add
pop
or
cmpsb
or
mov
shll
cmpsl
dec
in
cli
mov
mov
into
xchg
ja
lea
mov
mov
in
enter
adc
stc
mov
mov
sarb
sbb
adc
push
adc
andl
stc
cwtl
push
pop
repz
pop
nop
aam
imul
stos
cld
sbb
jle
leave
jo
mov
jl
xchg
push
push
mov
enter
arpl
and
xchg
xor
and
pop
rol
sbb
out
std
pop
int
in
mov
popf
int
xchg
push
cmp
sbb
push
dec
outsb
push
add
mov
test
jb
loop
test
xor
xchg
in
jmp
aad
lds
sbb
mov
mov
pop
xlat
add
movsl
dec
repz
out
cld
ficoml
decl
cmc
sbb
ja
pop
xchg
xchg
daa
test
and
out
pop
xor
imul
das
or
insb
int
lahf
push
sub
inc
adc
xchg
sahf
add
xchg
movsb
notb
and
jno
rclb
shr
xlat
lock
mov
mov
push
or
mov
cmp
and
rcl
inc
or
dec
rcll
push
xor
pop
loop
jecxz
fcoml
adc
das
inc
bound
sahf
xor
clc
dec
cbtw
xchg
mov
les
sti
sub
push
add
cmp
movsl
pop
scas
fs
and
lods
test
push
shrb
push
mov
inc
icebp
mov
jbe
movsl
sub
and
jg
jae
cmp
lods
push
xor
outsb
jb
sub
mov
adcb
pusha
notl
insb
gs
adc
mov
mov
push
xchg
xchg
rcl
bound
test
xchg
mov
pop
cmp
arpl
jb
lods
push
sbb
push
cltd
ds
sub
aam
dec
add
push
jecxz
mov
push
les
fwait
scas
clc
popa
xchg
pop
mov
push
dec
and
loope
pop
aas
jne
popa
mov
in
jl
mov
mov
adc
loop
or
dec
subl
stos
xchg
insl
add
in
fidivs
hlt
push
and
pop
add
imul
inc
fisttpl
imul
dec
mov
pcmpgtb
mov
cmp
xchg
xchg
loop
pop
aam
imull
ds
cltd
or
cmp
loop
lahf
pop
decl
incb
fcoml
dec
pop
mov
cmp
int3
add
ret
cld
jecxz
and
fsts
outsb
jg
ljmp
mov
or
scas
lcall
and
dec
fwait
mov
pop
fwait
clc
adc
test
cmpsb
push
inc
xor
mov
hlt
insl
mov
lods
dec
sbb
dec
xchg
sub
add
insl
cli
xlat
inc
xor
jb
or
pop
and
add
sbb
jno
test
shll
mov
dec
sbb
stos
insl
cmp
xchg
enter
cmp
dec
addr16
push
pushf
jl
mov
jmp
jmp
pop
fsubl
pop
and
dec
add
mov
xchg
es
mov
ret
cmc
xchg
jecxz
jl
cmpsl
pop
loope
xor
or
popf
hlt
cmc
data16
repnz
es
ds
xchg
pop
and
ret
mov
in
xchg
fwait
pop
mov
push
jbe
pop
sub
outsb
neg
jae
ja
jmp
jmp
aad
lret
inc
les
adc
jo
mov
gs
in
and
push
daa
clc
test
push
sub
pusha
sbb
sub
out
inc
insl
fs
ss
test
test
jb
out
push
out
loope
inc
push
mov
pop
add
cmp
push
out
mov
addb
inc
inc
and
sub
lahf
add
les
xor
dec
jmp
inc
mov
lods
mov
mov
in
ss
aas
nop
pop
notl
clc
repnz
adc
leave
cld
xchg
shl
cmc
adc
aad
aaa
lock
ret
xchg
in
lcall
sub
xorl
mov
in
mov
into
add
push
xor
in
adc
xor
jp
lock
push
jbe
mov
fdivrl
xlat
xor
lahf
pushf
rolb
insl
lret
je
stos
nop
inc
repnz
lods
xchg
sub
pop
insl
pop
loope
fwait
adc
cwtl
inc
movsl
imul
shl
xchg
xchg
sub
std
mov
adc
jmp
shl
shl
rclb
ret
lcall
jae
fistl
aaa
das
arpl
sbb
jo
inc
fldcw
ljmp
pop
nop
imul
mov
jb
push
andl
sub
imul
fwait
aad
in
jecxz
fwait
sti
push
jp
inc
aad
jae
ret
push
and
ret
xor
pop
mov
cmpsl
lods
dec
sbb
or
sahf
xor
cltd
or
insl
xchg
sub
pop
dec
test
iret
in
jl
hlt
test
cmp
xchg
xor
and
jg
sub
lcall
lret
imul
hlt
bound
cltd
out
test
push
movsl
jae
fwait
movsb
ja
in
push
push
testl
popf
mov
jno
fs
lret
fsubrl
notb
cmpb
icebp
mov
out
push
in
sbb
bound
sub
mov
jnp
jge
xor
cmp
mov
adc
mov
decl
push
xchg
out
test
dec
leave
mov
mov
in
inc
jecxz
xchg
xlat
dec
cmp
sub
loop
mov
xchg
iret
or
loop
in
les
scas
lock
xchg
mov
mov
sbb
insb
stc
sub
cmp
pop
add
dec
pop
pop
lahf
mov
and
push
xchg
inc
sbb
cmp
roll
xor
outsl
aad
cmp
lret
ss
and
push
pushf
ss
testb
loopne
dec
testb
aaa
jle
mov
and
or
xlat
inc
xchg
xchg
std
mov
dec
imul
imull
insb
inc
add
lret
jle
push
ljmp
add
popa
enter
imul
insb
and
and
imul
xor
ret
lret
popf
pop
popa
cmp
mov
jbe
loop
dec
inc
sub
lods
inc
je
and
sbb
arpl
shrb
js
push
lock
mov
dec
bound
test
ret
push
stos
aas
xchg
movsb
and
sarb
inc
cltd
xlat
lahf
mov
jl
adc
adc
push
pop
out
lret
mov
jo
lahf
mov
cs
xorb
bound
or
jno
mov
mov
jne
imul
cmc
jmp
xchg
add
add
sbb
sbb
inc
xchg
inc
push
cld
ljmp
add
add
push
mov
jne
mov
mov
and
sub
cmpsl
popf
and
mov
mov
and
sbb
fidivrs
lds
gs
gs
test
in
push
mov
inc
mov
scas
movsl
fwait
jp
pop
mov
cmp
inc
pusha
andb
mov
inc
mov
and
movsl
aas
jecxz
divb
push
dec
in
das
mov
pop
aam
test
mov
jns
fldenv
dec
rcr
jle
cmpsb
mov
fsts
inc
sub
jp
cmp
pop
dec
addr16
aas
dec
insb
push
cmpsl
and
je
rcrb
mov
lret
jmp
push
fldcw
dec
pshufw
outsb
movsb
mov
scas
sbb
inc
add
adc
or
adc
pop
in
sub
out
aaa
cli
jg
dec
pop
insb
out
sbb
cmp
stos
std
sarb
notl
push
hlt
push
cmp
mov
out
adc
lods
sub
in
arpl
shr
leave
lock
add
sub
cmp
ss
imull
pop
add
jl
outsb
xchg
or
sub
sti
push
add
loopne
or
repz
jns
sub
aad
rcrb
mulb
std
mov
icebp
insl
and
cs
int
adc
jmp
dec
icebp
push
sbb
sti
scas
out
test
sub
outsb
lcall
add
inc
cmp
push
xchg
sbb
ja
adc
leave
das
cmp
dec
jl
sub
in
and
ds
fnstenv
frstor
push
movsb
pop
mov
outsl
inc
sbb
imul
mov
inc
imul
sub
shlb
shll
mov
cli
mov
jo
in
push
out
lods
outsl
subl
rclb
mov
ret
mov
insb
mulb
or
icebp
xor
dec
adc
push
add
and
jbe
mov
pop
je
js
mov
jp
mov
pop
cmpsb
pop
sub
aas
pop
jo
loop
dec
call
dec
dec
iret
cmp
fwait
lods
push
js
xor
mov
xlat
push
movsb
mov
ret
sub
out
loop
cmpsl
arpl
insl
xchg
loopne
out
jmp
int3
notl
ret
xlat
add
ret
xor
bnd
testl
fnstenv
in
push
mov
xchg
popw
loope
out
cli
push
push
jne
and
lret
cs
pusha
push
mov
mov
mov
lods
jno
and
stos
mov
jl
dec
call
icebp
cmc
push
mov
inc
lea
cwtl
and
call
push
outsl
pop
data16
pop
test
pop
cwtl
xchg
mov
out
push
fcompl
lcall
dec
ja
test
jg
xlat
cmpsb
mov
add
jb
imul
ljmp
sub
jnp
scas
adc
negl
lds
mov
std
out
mov
dec
jb
add
icebp
pop
mov
mov
cmpsb
sbb
lock
jle
pop
cmc
loopne
mov
shr
pop
push
mov
pop
push
or
std
or
pushf
ret
sahf
rorl
fdivr
pop
pop
notl
scas
out
mov
outsb
sarl
jg
rcr
ret
in
mov
sbb
loope
std
jge
imul
jno
fs
cltd
inc
out
sub
adc
jnp
pop
shll
push
add
adc
ret
pop
xchg
and
sub
icebp
je
dec
rcr
mov
mov
dec
inc
mov
sbb
gs
lods
dec
sbb
into
es
cmpsl
popw
push
retw
dec
scas
fisttpl
sub
sbb
aas
divl
inc
sbb
dec
scas
dec
shll
lock
push
mov
lods
data16
and
sub
mov
jmp
sbb
xchg
sub
pop
mov
inc
es
rol
std
shrl
cmpsl
stc
push
into
fcomps
cmp
sbb
fnsave
cs
adc
andb
dec
mov
sahf
add
stos
jae
in
mov
sub
inc
mov
outsb
dec
cmpsb
cltd
mov
push
inc
lahf
inc
out
sub
icebp
addb
jno
das
push
sub
sub
lods
xchg
jp
cwtl
xchg
rol
pop
xchg
mov
xchg
cmpsl
rclb
hlt
add
loopne
pop
gs
aas
test
jbe
or
mov
push
cmp
pop
inc
in
jg
fwait
jo
arpl
jge
adc
and
cmc
lds
addr16
jle
mov
xor
pop
sub
xor
scas
icebp
in
push
out
inc
cltd
bound
aaa
jmp
jle
loop
ljmp
fldenv
inc
mov
repz
lds
icebp
rolb
mov
xchg
adc
jmp
addr16
push
push
mov
bound
jno
nop
xor
and
fucomi
mov
insb
or
fwait
xlat
or
lock
clc
fstpt
push
call
and
test
pop
pop
xor
sub
pop
sbb
jmp
xor
adc
shll
lret
dec
pop
dec
mov
mov
lods
lret
jnp
fsubrs
gs
rorl
dec
jnp
push
inc
xchg
and
mov
fwait
adc
ljmp
daa
jmp
hlt
enter
or
leave
outsl
out
divb
testb
adc
js
mov
lret
mov
mov
mov
mov
pop
pop
add
or
loope
cmpsb
inc
xor
js
into
into
scas
loopne
mov
fstpl
add
dec
lds
cmp
or
loope
mov
mov
lock
or
insb
add
repz
std
out
cli
enter
fisubl
inc
imul
icebp
mov
push
jg
adc
inc
push
cs
sub
lahf
cmp
arpl
push
fidivrl
pop
inc
fwait
insl
out
pop
push
lds
lcall
jl
jae
and
mov
inc
xchg
cmp
jns
xchg
int3
pop
mov
jne
add
enter
lret
arpl
std
dec
pop
out
adc
rcll
test
jno
push
iret
pop
jno
sarl
cmp
shlb
push
mov
push
push
nop
js
push
mov
add
dec
push
icebp
leave
push
addr16
pop
movsb
icebp
xchg
pop
jg
or
adc
push
fdivrs
repnz
push
gs
je
inc
and
and
divb
sub
pop
shl
ret
inc
pusha
xchg
mov
dec
inc
xor
lret
lods
mov
xchg
mov
push
or
scas
sub
dec
xchg
mov
cmp
frstor
jmp
sarb
or
les
xchg
pop
inc
inc
sub
sbb
mov
in
ret
jae
jle
mov
cmp
ja
pop
loopne
jecxz
pop
sub
shll
cmp
ficoms
xchg
outsb
xchg
into
daa
pop
pusha
xchg
mov
in
dec
std
dec
jne
xchg
lahf
sbb
in
mov
mov
sub
cli
imul
repz
jecxz
mov
test
pop
les
mov
or
lods
inc
pop
fwait
adc
addr16
test
in
ja
les
or
adc
and
fsubrp
jecxz
and
mov
aaa
arpl
stc
repz
adc
cmp
nop
push
in
hlt
dec
xchg
mov
sbbl
and
rol
mov
out
fimull
jecxz
lods
lahf
int
clc
jmp
daa
mov
pop
cmp
imul
jne
xor
inc
mov
inc
icebp
dec
xchg
popa
call
xchg
xchg
add
add
ja
ret
rorb
mov
inc
daa
inc
and
push
cmp
int3
inc
test
insb
cmp
push
lahf
and
imul
cmc
or
mov
test
out
pop
push
cli
mov
jae
addb
les
add
cmp
pop
cmp
sarb
mov
mov
dec
nop
dec
lds
xor
in
jg
mov
dec
xchg
xor
add
jle
faddl
dec
xchg
int3
mov
mov
pop
pop
enter
push
movsl
lret
hlt
shrl
divb
je
jne
dec
mov
mov
pop
ljmp
enter
push
mov
xchg
mov
mov
movsl
mov
daa
dec
fsubrl
or
adc
push
sub
cli
push
fcmovne
xor
lods
mov
inc
out
xor
adc
add
shlb
insb
pop
fisttpl
mov
sub
sahf
dec
mov
outsl
shlb
push
mov
rol
call
xchg
sahf
leave
mov
fsubrp
jns
fs
push
dec
lds
js
push
sub
andl
mov
fdivl
out
jp
testb
push
push
cmpsb
ljmp
mov
loop
or
movsb
out
imul
ljmp
mov
in
mov
sbb
push
popa
inc
mov
jle
test
inc
pop
pop
jns
and
add
mov
jb
adc
push
adc
pop
popa
rclb
sbb
mov
icebp
hlt
dec
mov
mov
and
fnstenv
or
rcll
stos
in
push
call
in
bound
xchg
std
jo
adc
sbb
pusha
fistpl
mov
jno
mov
mov
or
push
jae
test
xchg
or
test
fistps
lds
outsb
inc
insb
movsb
mov
in
dec
sub
sbb
inc
inc
not
imul
mov
aas
dec
dec
iret
sub
in
orl
insb
gs
adc
mov
mov
cwtl
mov
fdivrs
pop
mov
ret
mov
jecxz
out
loope
je
pop
and
jecxz
mov
arpl
mov
dec
xor
dec
je
stos
push
ret
mov
mov
adc
cmpsb
loopne
push
add
push
rorl
nop
push
cmpsl
add
ss
jmp
pop
repz
gs
fs
out
or
les
fwait
sbb
pop
mov
sbb
int
jl
xchg
into
adc
imul
les
sbb
sbb
mov
hlt
lods
in
out
lcall
xchg
push
mov
or
jmp
push
in
pushf
pop
jb
hlt
in
outsl
xchg
stos
dec
adc
sub
in
adc
cmp
cmp
mov
mov
dec
jnp
in
inc
xchg
push
pop
imul
sub
es
out
sbb
cmp
fildll
and
stc
sbb
or
sub
fdivr
outsb
out
popf
aad
mov
out
fisttpll
inc
cltd
loope
sub
loope
js
jns
inc
mov
dec
ja,pn
imul
lahf
cwtl
cmp
jnp
mov
jns
cmp
push
dec
or
psrld
inc
ja
mov
mov
xchg
mov
sti
mov
test
jne
xchg
adc
das
out
scas
xor
sbb
lods
sub
xchg
insb
mov
dec
out
xlat
mov
push
mov
mov
rcrb
or
push
test
pop
push
sub
test
mov
stc
mov
cld
daa
push
frstor
pop
mov
jl
jns
push
mov
lock
daa
pop
imul
ret
popf
cli
movsl
xor
pushf
imul
test
nop
xor
push
in
inc
cli
loopne
sub
ret
inc
sbb
fdiv
enter
stc
fidivrl
iret
or
push
out
call
ret
loop
test
pusha
pop
mov
ffreep
or
add
ret
cltd
nop
and
aam
xor
loope
lods
jno
jle
pop
or
sbb
pop
sbb
cmpsl
cmp
mov
mov
jb
or
stos
xor
cmp
sbb
mov
lea
insb
cmpsl
outsl
and
push
jmp
aam
pop
daa
loope
push
adc
push
push
mov
in
or
icebp
shl
xor
out
jns
and
jge
ret
mov
sbb
pop
cmc
mov
shl
dec
js
jns
lock
stos
mov
inc
mov
popl
lods
cli
and
mov
test
adc
cmpsl
xchg
aam
sub
movntq
out
sbb
mov
fimull
shr
adc
xchg
cld
sbb
mov
cmc
mov
and
push
xchg
sbb
lds
clc
in
xor
push
cld
aaa
loop
inc
arpl
sahf
fistpl
mov
jns
out
cmp
and
vpslld
test
jl
lea
push
out
in
sbb
pop
adc
and
hlt
lods
data16
shr
xchg
fcmovu
insl
subb
loop
pop
mov
lds
sti
jnp
hlt
sbb
rcrl
xchg
push
in
xor
fstl
inc
ds
hlt
pop
jnp
fstpl
scas
jg
test
ret
push
adc
pop
repnz
outsb
add
cmpsb
fidivrl
cmp
mov
cmp
mov
std
cmp
cmp
cmp
mov
mov
mov
cmp
pop
ret
mov
lds
sbbb
dec
xchg
in
add
mov
scas
xchg
xchg
mov
popf
sbb
orps
xor
sub
sar
fucomip
gs
xorl
mov
out
icebp
in
adc
stc
sbb
enter
sub
fstps
xor
jle
rcr
aam
mov
jo
add
jbe
push
jns
push
leave
cltd
fcmovnb
in
cmc
rcrb
fcompl
adc
push
adc
lock
sub
lretw
stc
jle
repz
out
jae
imul
jl
loop
leave
lods
dec
add
adc
inc
mov
cmpsl
cmp
cmp
sbb
es
nop
repnz
sbb
xchg
mov
mull
pop
inc
es
mov
push
loop
je
fwait
mov
adc
mov
xor
jb
aam
add
cmp
fs
roll
push
icebp
in
int
ret
xor
mov
mov
mov
cmp
pop
in
rcll
pop
push
jae
xor
pop
mov
imul
divb
and
je
pop
cmp
fcom
pop
xor
fidivrs
or
mov
push
push
pop
adc
mov
xchg
lret
xchg
sbb
dec
pusha
mov
jecxz
adc
jbe
adc
pop
add
lret
lods
pop
mov
jl
and
inc
lret
jo
sbb
sbb
je
mov
xor
adc
mov
bound
jb
dec
fprem
shlb
and
enter
xchg
icebp
or
outsl
cmp
cmpsb
mov
stos
inc
rorb
jg
jge
pop
hlt
ret
jo
cmp
int3
fiaddl
test
xchg
cli
dec
test
mov
jno
test
loop
jno
pop
fistl
pushf
or
or
add
mov
xchg
ret
clc
cwtl
clc
lds
jmp
mov
or
push
pop
shrl
repz
dec
mov
or
xlat
add
add
xchg
jae
xchg
cmp
mov
pavgw
mov
mov
inc
data16
mov
mov
xor
xchg
pop
mov
cmpsb
pop
cs
pop
lcall
pop
lret
inc
cli
or
test
fdivs
add
jno
pop
cmc
xor
sbbl
cmp
icebp
push
clc
cmpsl
xchg
ret
sbbb
jns
and
and
inc
cld
lods
xor
out
aaa
ja,pt
inc
inc
dec
fs
je
sub
mov
lret
xchg
mov
sti
sbb
test
xor
hlt
pop
inc
das
xchg
jne
xor
in
fisttpl
xor
lea
xor
or
scas
jge
mov
or
jge
add
mov
add
test
movl
les
inc
push
iret
mov
add
or
push
adc
add
jns,pn
pop
jae
cltd
mov
cli
loop
pop
adc
lock
insb
cmp
ss
push
adc
pusha
dec
mov
xchg
mov
inc
push
xchg
fisttpll
and
push
dec
dec
mov
and
push
in
insl
rol
inc
mov
mov
jo
popf
dec
xor
adcb
push
mov
jl
loope
cmp
add
subb
mov
lds
xchg
loope
es
push
push
jmp
adc
push
adcb
xchg
add
fldlg2
push
cwtl
pop
cmp
xchg
outsb
lcall
shr
jo
rol
sbb
adc
pop
aaa
test
out
push
mov
mov
xchg
push
fbld
stos
daa
fwait
lock
jmp
and
push
lock
fwait
sub
in
in
int
sbb
lret
jle
rcrl
lock
ljmp
pushl
adc
jo
adc
rcl
xor
xor
mov
push
ja
mov
in
pop
sbb
sbb
jmp
pop
je
enter
daa
push
jno
xchg
popa
std
and
adc
xor
es
fs
aad
add
or
mov
mov
xor
push
rclb
aad
movsl
sbb
arpl
and
imul
fnstcw
in
cs
pushf
cmp
jns
dec
out
test
scas
add
sub
sbb
cmpsl
inc
cwtl
subb
jne
push
mov
add
cmpsl
jne
add
xor
fsubrs
push
scas
xor
pop
addr16
cli
xchg
popa
pop
and
inc
jmp
out
pushl
popa
movsb
roll
jp
ss
lds
inc
imul
fwait
mov
test
iret
rcll
test
xor
inc
xor
jbe
shll
adc
push
xor
orl
movsl
mov
cli
fadds
inc
lahf
jmp
add
loop
jmp
scas
or
cmpsl
sub
mov
jge
xlat
andl
ss
pop
aam
inc
inc
in
mov
cmp
out
inc
fistl
cmp
jg
sbb
jl
sbb
fcompp
xor
ret
lods
std
mov
cmp
jle
lods
mov
mov
je
dec
adc
lea
mov
xchg
jecxz
xchg
cwtl
cli
popa
sub
inc
inc
daa
outsl
clc
sub
fiaddl
inc
push
push
sbb
add
popa
jns
ja
aam
repz
inc
mov
insl
cmp
mov
lret
cmp
std
mov
xchg
sub
and
popf
daa
jecxz
and
pop
loopne
data16
pusha
inc
dec
daa
int3
mov
sub
mov
xchg
jo
and
shlb
ret
icebp
lds
outsb
xchg
loope
sub
pop
xor
faddl
pop
dec
arpl
jns
imul
hlt
fistpl
aaa
jl
dec
push
dec
mov
daa
xchg
icebp
out
jns
jno
jmp
pop
std
imul
mov
cmp
pop
aaa
push
stos
mov
out
add
sbb
sti
incl
pop
dec
fcoms
pop
sbb
lock
mov
aam
aas
cli
sbb
pop
adc
leave
in
mov
cmp
cmc
inc
lods
ja
std
xlat
insb
add
mov
cmpsb
pop
sub
and
aas
sarb
or
out
mov
mov
stos
add
sahf
fwait
push
ljmp
xor
cmc
pop
adc
fwait
jp
dec
orl
mov
push
mov
fs
dec
dec
push
xor
fwait
mov
adc
std
xor
arpl
inc
out
dec
lea
out
pusha
sahf
adc
insb
int
inc
xchg
pusha
das
aad
out
in
push
push
push
push
mov
inc
add
stc
xchg
pop
stos
xchg
iret
popf
inc
push
xor
sbb
addr16
lds
add
pop
add
dec
clc
add
cld
and
movl
repnz
mov
ja
jp
add
movsl
dec
mov
inc
or
ja
test
push
cld
ror
addr16
rcll
sbb
aaa
jbe
out
out
sahf
mov
js
sahf
rorb
jo
adc
imul
pop
stc
or
cmp
and
out
mov
xchg
addr16
sarl
push
test
xchg
pop
add
in
pop
push
mov
popf
mov
sbb
daa
inc
arpl
pop
dec
inc
lock
push
cmp
mov
mov
fnstsw
mov
lahf
sbb
outsb
or
push
pop
mov
subb
movsl
sbb
bound
jl
lods
test
push
xor
jp
je
sub
das
test
adc
pop
inc
outsb
lahf
mov
mov
jae
test
xchg
xchg
fistl
jg
and
fcomps
test
dec
fildll
call
jne
xor
push
push
cli
sub
cmp
arpl
or
out
mov
push
test
int3
jae
scas
cwtl
das
dec
nop
push
mov
faddl
aad
out
mov
push
xchg
push
movsb
mov
adc
push
mov
stc
fs
cmp
lock
pusha
pop
sahf
stos
out
xchg
test
ljmp
fstps
lea
cmp
inc
mov
out
pusha
or
xor
mov
push
test
cli
add
lahf
fstp
cmp
and
popa
sbb
sti
add
adc
sub
es
mov
dec
dec
jns
mov
mull
cmp
and
dec
mov
add
jo,pt
sbbb
in
xchg
and
aam
cmpsb
cltd
bound
xchg
dec
int
push
insb
mov
imul
push
dec
hlt
mov
bnd
cltd
mov
jl
push
mov
outsl
jne
or
pop
bound
into
sub
xchg
or
lahf
in
lea
jne
sbb
jae
jne
mov
cld
test
aam
push
loopne
jmp
movsl
std
imul
and
cmp
mov
int3
out
pop
jg
hlt
sub
pushf
adc
push
or
sbb
pop
leave
mov
subl
dec
adc
cmp
inc
pop
xchg
sbb
adc
stos
in
xchg
lcall
cmp
aam
push
test
push
mov
addl
and
test
nop
push
pushf
cmp
mov
sub
sub
flds
aas
jecxz
pop
xchg
push
outsb
push
je
mov
sub
ret
int
jae
ja
test
inc
mov
mov
add
xor
es
cli
orl
lahf
sar
int
fisubrs
insl
movsl
push
nop
into
scas
push
pop
daa
out
cli
testb
cmc
xlat
in
dec
pop
mov
repz
jp
shr
push
jae
pop
pop
sti
xchg
sti
scas
cmpsb
sbb
in
xchg
aas
std
leave
repnz
inc
pop
xchg
pusha
and
pop
push
mov
push
push
sbb
lock
sbbl
pop
rol
pop
cmp
cld
negb
dec
push
ficoms
repnz
inc
loopne
lods
xchg
popa
inc
mov
lret
jb
pop
mov
test
or
mov
mov
xor
xchg
out
and
mov
fistpll
add
jp
mov
mov
fstl
cmpsl
pop
outsb
adc
xlat
dec
pop
add
int
cwtl
dec
in
btr
or
mov
out
jmp
dec
repnz
lods
aad
in
popa
cmc
jle
jl
mov
sub
xor
cmpsl
cmpsl
lock
sub
int
inc
insb
sub
push
or
stos
inc
jle
test
xchg
loopne
mov
rolb
in
test
insb
ss
or
sarl
adc
rorb
es
mov
stos
and
mov
add
aam
xlat
add
ret
sub
mov
addr16
hlt
mov
pushf
jge
sarb
xor
test
xchg
dec
iret
mov
loopne
imul
mov
jp
mov
out
jge
mov
mov
test
xor
pop
out
pop
in
mov
int3
or
mov
sub
jl
jge
neg
in
jg
dec
test
pop
jmp
jo
pop
scas
dec
scas
sub
add
inc
bnd
inc
ret
add
fnstsw
mov
push
add
mov
paddsb
mov
faddl
mov
mov
dec
fidivrs
dec
notb
jnp
cli
cli
xchg
and
outsb
mov
xchg
mov
jp
mov
adc
dec
lods
ljmp
push
and
pop
lods
shll
adc
mov
nop
mov
jmp
or
and
cld
adc
pop
call
popa
arpl
xchg
or
mov
mov
sub
bound
test
movsb
push
inc
mov
mov
fldenv
and
insb
push
insb
mov
xchg
lahf
dec
dec
out
mov
icebp
repnz
lahf
repnz
inc
mov
xchg
jae
arpl
mov
movsb
pop
sub
iret
cmp
or
bound
inc
sti
or
fnstcw
cmp
in
imul
mov
cmp
pop
shr
aas
push
adc
push
adcb
loopne
push
jbe
sub
ljmp
push
jecxz
dec
mov
xchg
mov
inc
adc
lds
sti
aad
mov
int3
jno
or
les
dec
pop
cmp
xor
dec
stos
shl
inc
add
pop
repz
mov
sahf
fistpl
sbb
loop
jge
push
fcompl
lods
and
xor
fstpt
scas
sub
xchg
data16
push
and
mov
cmovb
xorl
xchg
shll
movsl
cmp
insl
cmp
add
adc
inc
fidivl
sub
mov
mov
ljmp
sub
mov
scas
nop
cmp
sub
pop
cmpsb
in
fadds
sub
fs
fstpt
mov
push
dec
ficompl
lcall
xchg
push
sub
xchg
movswl
test
push
xchg
pop
and
loopne
inc
push
mov
je
mov
js
or
pop
lea
arpl
pop
sti
dec
insb
fnstsw
xlat
stos
outsl
jle
test
out
pop
mov
cmp
mov
xor
notl
lods
cmpsl
rcl
out
clc
outsl
xchg
and
xor
cmp
jns
fwait
xchg
lock
movntps
xchg
add
cmp
gs
lock
scas
test
test
and
add
imul
scas
aaa
je
mov
sub
xchg
sbb
push
mov
xor
mov
xchg
repz
sbb
in
xor
icebp
int
mov
mov
ljmp
inc
or
add
xchg
jecxz
pop
lods
and
sub
inc
mov
push
dec
jle
notb
insl
scas
mov
aaa
loope,pt
scas
stos
add
aad
sub
xor
imul
adc
jnp
mov
pop
outsb
xchg
fs
sub
mov
cmpsl
sub
daa
and
lea
xchg
mov
jb
ljmp
aaa
int3
gs
pop
adc
rcl
pop
cmp
mov
nop
xchg
jg
loopne
sub
jnp
jge
ficompl
inc
mov
test
es
andb
test
mov
idivl
adc
call
inc
sahf
push
jge
les
in
inc
fnsave
pop
bound
adc
pop
pushf
sbb
movsb
out
mov
mov
nop
pop
mov
bnd
jl
rclb
jb
mov
adc
cmpsb
inc
pusha
jecxz
or
push
nop
cli
sbb
stc
jmp
dec
data16
rorl
out
arpl
mov
cmpsl
inc
fistpll
mov
das
mov
leave
dec
aad
sbb
ficoml
xor
xchg
shrl
add
add
lock
lret
in
xchg
in
notl
and
mov
push
lods
pop
pusha
and
and
nop
dec
rcrl
adc
sbb
pop
mov
add
dec
push
or
add
cs
pop
push
cmp
rolb
mov
dec
cmpsl
mov
cmp
outsb
shlb
adc
mov
leave
cmpsb
sub
int
and
add
jmp
sti
pop
jns
and
cmp
int3
push
sbb
addr16
test
insl
pop
pop
das
pop
push
lds
jle
andb
xor
out
dec
hlt
sub
int
jne
loop
adc
xchg
push
fsubrl
ss
adc
mov
movsl
jmp
xchg
adc
in
jbe
inc
std
dec
mov
lods
jge
jle
sub
sub
lock
sbb
fstl
adc
xor
int3
xor
testb
shll
in
mov
lods
outsl
pushf
out
sub
pop
sbb
mov
outsl
rcrb
ror
push
loope
mov
dec
add
ds
inc
jae
dec
leave
add
adc
pop
call
inc
pslld
loopne
mov
imull
ret
xchg
in
sub
call
sbb
js
xchg
lret
adc
int
fdivs
inc
ss
dec
cmp
mov
adc
inc
mov
sub
or
les
test
and
and
xlat
sub
add
scas
loopne
xor
push
rclb
add
int3
call
jmp
insl
sahf
sarb
add
cmp
cmp
iret
scas
jno
les
movsb
sbb
out
ss
cmpsb
add
orl
popf
or
loop
push
aaa
xchg
xor
aam
fistpl
mov
sbb
pop
xchg
stos
adc
test
jne
cmp
mov
test
mov
push
into
pop
lret
mov
xchg
inc
and
hlt
mov
data16
lds
push
clc
lahf
cmp
xor
dec
mov
pushf
int
push
adc
cmpl
cli
sbb
add
call
or
dec
xchg
add
add
bound
test
aad
add
out
mov
add
fcom
or
push
ret
sub
and
repnz
loope
xchg
scas
pop
xchg
test
dec
jle
pop
out
inc
lea
pop
in
mov
push
xchg
ret
pusha
mov
aas
mov
add
push
fmuls
dec
int3
xchg
and
cltd
jge
push
mov
pop
mov
fimuls
jge
add
xchg
cmp
adc
fsubrs
cmp
mov
inc
mov
push
rcl
cmp
popf
xchg
clc
jae
cmp
scas
mov
and
mov
mov
jl
or
jl
inc
or
dec
das
iret
jle
arpl
inc
inc
xor
lods
adc
mov
dec
xor
jo
dec
aam
mov
loop
stc
fs
daa
movb
jmp
rorl
sbb
add
pop
jb
cld
and
cltd
js
mov
adc
or
cmp
pop
jmp
inc
xlat
jg
orb
add
adc
and
dec
sbb
pop
cmp
fcoms
dec
nop
dec
xor
mov
aam
test
jbe
clc
cmp
add
sbb
out
fldenv
mov
xor
or
or
scas
pop
cmpsl
jbe
subl
rcrl
pop
xor
xor
repz
or
aad
int
lods
aam
daa
out
mov
imul
sbb
sub
push
mov
das
in
pushf
add
inc
outsl
in
xchg
cmp
ljmp
inc
loope
ja
xor
jg
mov
lret
mov
sti
and
icebp
jge
in
inc
or
sbb
dec
ret
inc
or
lret
shlb
pop
into
sub
movsb
xchg
cmp
push
pop
mov
mov
shll
cs
sbb
inc
inc
mov
div
sbb
in
mov
mov
mov
jbe
and
pop
test
adc
scas
mov
mov
cs
mov
pop
jo
push
pop
jg
sti
rcrl
lea
jecxz
insl
data16
cwtl
cmpsl
fwait
aaa
jbe
push
les
lea
insb
shrl
ljmp
pushf
pop
nop
and
add
jo
xchg
fwait
sub
addr16
out
push
out
into
iret
fdivl
test
push
sub
sub
jge
cmp
inc
outsl
in
clc
sbb
and
xor
ret
push
int3
xchg
dec
popa
and
divb
jp
xchg
push
sub
push
aam
insl
in
stos
je
rcr
imulb
and
xchg
mov
mov
dec
push
push
inc
hlt
in
push
ljmp
cmp
mov
add
xor
insl
adc
inc
out
add
in
cmp
dec
xchg
enter
xor
cmp
test
in
cmp
mov
dec
xchg
cld
jae
ficoml
loop
leave
jbe
int3
enter
adc
sbb
cmp
push
scas
sbb
sub
call
pop
mov
and
into
sub
fsubs
ficoml
cld
cltd
outsb
jecxz
jmp
xchg
ret
and
andl
ret
dec
lret
jecxz
add
data16
cmp
clc
cld
add
jae
and
test
cltd
rclb
out
stos
je
mov
inc
cli
sbb
dec
cltd
push
call
insb
mov
les
in
cltd
mov
mov
jb
sahf
sbb
sbb
mov
andb
xchg
sub
mov
inc
into
call
test
ret
mov
loop
cs
xor
mov
mov
inc
or
pop
imul
jae
pushf
push
fwait
xor
push
pop
mov
pop
subl
xchg
int
mov
divl
je
xor
out
sbb
xor
push
cmc
aaa
mull
mov
hlt
int3
jecxz
aaa
std
iret
rcl
ret
outsb
cmp
mov
out
in
inc
stos
adc
orl
and
daa
xor
cmpsl
mov
inc
repnz
nop
pop
sahf
xor
lcall
mov
rcll
adc
ja
xchg
mov
push
inc
inc
stos
in
jae
daa
and
js
xor
repnz
or
fstps
test
std
jl
or
and
les
fsubs
xor
in
jge
add
sub
inc
lahf
aad
dec
in
cmpb
or
jp
fisttpl
aad
das
int3
xchg
and
in
jge
in
jae
pop
xor
inc
xchg
stos
rorb
push
shl
cmpl
iret
cltd
push
aad
xor
cmp
test
lret
jg
mov
mov
je
hlt
icebp
fistpll
addl
int
pop
pop
mov
aad
xor
in
repnz
stos
pop
aad
mov
pop
iret
repz
hlt
xlat
loopne
inc
jg
sbb
leave
test
xchg
mov
inc
fisubrl
pop
pop
nop
adc
add
lods
ret
jecxz
test
xchg
and
mov
dec
addl
bound
mov
mov
mov
or
and
push
dec
das
xor
pusha
out
jne
jns
test
sub
sub
cmpsl
dec
jmp
jg
add
hlt
ljmp
sub
cmp
push
cmp
movsl
push
dec
pushf
lea
xchg
lahf
arpl
xchg
scas
add
inc
popf
testl
adc
xchg
xor
sbb
xor
lcall
xor
imul
inc
int
mov
pusha
lret
sub
sbb
pop
jne
add
nop
ljmp
pop
bound
std
mov
push
mov
cmp
cli
dec
sub
shll
daa
xorb
lock
movsl
lds
sbb
adc
rcl
push
lock
mov
insl
in
mov
adc
pop
sar
add
out
mov
or
pop
adc
das
inc
or
adc
lea
mov
imul
and
or
lret
mov
inc
aaa
add
xor
arpl
ja
loopne
mov
xor
xchg
scas
out
push
ds
aam
mov
xchg
cmpsl
add
lods
test
pop
fmull
jmp
mov
loop
js
outsl
sbb
add
xorb
push
int3
cmpsb
out
out
out
mov
lea
test
ds
push
xor
push
lock
or
xchg
dec
or
xlat
inc
cmc
push
in
subl
mov
and
lock
cmpsl
jmp
popf
mov
popf
mov
cld
imul
add
gs
fldcw
add
dec
dec
adc
push
popf
sub
repz
mov
inc
decb
stos
aaa
xchg
cmpl
xchg
daa
out
xor
out
xchg
into
movsb
cld
sarl
cmc
aas
inc
push
cmp
push
insb
sar
in
aas
push
push
pop
push
out
aaa
ss
daa
mov
pop
pop
mov
xchg
xchg
fistpll
fimull
pop
aam
nop
lods
repnz
div
int
icebp
cmp
or
aaa
cld
cwtl
lea
cld
mov
and
aad
mov
outsb
mov
dec
in
and
pop
adc
repnz
adc
aaa
xor
inc
add
xchg
fisttpll
jle
dec
cld
push
leave
fisttps
stc
push
pop
gs
or
or
mov
das
nop
inc
cli
cmp
pushf
push
faddl
mov
jnp
or
push
mov
and
rclb
popa
fdivrl
std
int3
scas
in
xor
mov
out
shl
jo
mov
dec
push
jno
sub
or
jno
test
loop
daa
out
fsubr
jmp
lret
js
lret
int
and
enter
mov
hlt
stc
rcll
loop
mov
mov
movsl
and
daa
lcall
sti
mov
or
clc
sbb
push
dec
push
mov
inc
lods
adc
xchg
dec
fcmovnu
push
je
loop
xor
insl
nop
aas
inc
sbb
xor
xchg
xor
rolb
dec
icebp
pop
fwait
loope
mov
clc
pop
mov
pop
cmp
inc
push
xchg
int3
mov
inc
add
pusha
cwtl
mov
ss
ljmp
arpl
or
gs
std
aam
and
push
dec
ficoms
movsb
jmp
lret
dec
mov
and
hlt
and
call
xorl
movsb
xor
mov
cmpsl
scas
jle
scas
jae
insl
jne
jnp
inc
xor
add
sbbb
cmp
sahf
mov
daa
sub
cmp
pusha
jns
call
cld
mov
movsl
jecxz
cmp
popa
and
in
xchg
fmuls
mov
fcompl
test
ret
mov
jmp
xchg
mov
mov
mov
mov
push
fs
cmp
stos
imul
in
xor
jae
sbb
jns
in
xor
xchg
lods
pop
fimuls
mov
mov
pusha
test
cltd
nop
xor
mov
or
xchg
push
adc
jb
mov
mov
movsb
mov
in
out
aad
sub
mov
jmp
mov
jbe
sti
cmp
xor
add
xchg
loope
sbb
jb
imul
dec
into
pop
dec
add
pusha
mov
push
xor
nop
lods
jecxz,pn
mov
xlat
jno
stos
and
mov
mov
addr16
and
cld
inc
sbbb
pop
stos
sub
jp
movsb
dec
sub
shl
mov
mov
fisttpll
das
cmpsl
imul
push
jge
scas
cmpsb
ja
push
adc
inc
cmpsl
and
iret
xor
push
js
adc
sub
jp
jns
lods
loopne
xchg
sub
adc
incl
pop
sbb
xchg
add
and
stos
mov
dec
sbb
dec
lds
imul
jp
or
cmp
push
xchg
and
fstl
arpl
sbb
push
das
jecxz
stos
mov
int3
minps
or
inc
popa
xor
inc
or
xorb
dec
mov
push
fwait
imul
sbb
fwait
enter
cmp
ret
mov
lods
jge
rol
jecxz
scas
push
and
jl
ljmp
push
lea
stos
push
cli
cmp
sub
js
dec
out
push
push
out
ljmp
mov
into
xchg
mov
dec
pop
adc
idivl
dec
lahf
je
xchg
in
sub
inc
orb
mov
sbb
xchg
xchg
jge
cmp
push
pop
cmp
mov
add
fs
sub
pop
add
lea
dec
sbb
outsl
call
sub
aam
hlt
xchg
jl
mov
notl
mov
sbb
dec
rcll
dec
outsl
and
leave
sti
jmp
xchg
cmp
lcall
or
cmp
mov
xchg
orl
cld
fwait
xor
out
push
adc
mov
mov
xchg
stos
subl
cmp
adc
psllw
enter
mov
xchg
ss
jo
dec
loope
popl
cmc
stos
mov
lds
push
data16
cmc
sahf
sbb
xchg
inc
cwtl
mov
rcrb
sub
mov
addr16
xchg
sarb
addb
push
push
inc
push
dec
push
js
loope
jae
in
imul
sbb
cld
cmpsl
pusha
dec
dec
lods
jge
cmpsb
xchg
jecxz
int3
mov
ret
mov
movsb
mov
jns
cwtl
dec
mov
pop
outsl
mov
cwtl
mov
xlat
and
adc
pop
std
dec
xchg
add
pop
test
int3
std
jmp
adcl
fsub
mov
es
repnz
add
pop
xor
movsl
and
jno
and
inc
inc
int
jb
std
cmpsl
inc
daa
xor
js
mov
push
pop
scas
mov
insb
pop
adc
ljmp
sub
sbb
lds
xor
push
fidivrl
inc
inc
jb
and
dec
popf
xlat
inc
adc
or
dec
lahf
jne
ret
mov
test
pushf
inc
jl
mov
dec
cld
mov
hlt
or
inc
sbb
and
sarb
mov
pop
pop
jmp
push
jle
push
jmp
out
shr
mov
call
pop
and
push
jge
dec
mov
mov
sub
xchg
hlt
call
test
jmp
lods
xor
fisubl
fcomp
mov
sbb
push
adc
js
insl
fsubrs
xchg
sub
push
aam
bound
repnz
adc
rorl
and
inc
pushf
mov
dec
mov
add
outsb
mov
add
clc
push
and
inc
push
cmpsl
icebp
pop
std
xor
lret
int
mov
inc
xchg
or
pop
mov
jo
add
out
lea
cld
es
fildl
mov
lea
cmc
and
sub
imul
push
test
fs
addr16
cs
stos
in
cpuid
into
les
and
and
fimull
int3
jno
mov
and
inc
jl
ret
and
mov
jl
xor
sbb
ret
jecxz
push
sahf
movntps
int3
inc
sbb
jmp
mov
jmp
test
cltd
add
into
jmp
mov
cmp
xchg
fs
or
jbe
ss
or
gs
rorb
out
in
xchg
xor
ds
lods
sarb
jne
mov
add
cli
stc
pop
ret
cmp
jno
test
test
sbb
xchg
adc
and
mov
or
mov
rcrl
popa
sbb
cwtl
cli
sub
xchg
int
aas
bound
lods
xchg
int
hlt
cltd
mov
or
mov
jl
sbbb
mov
gs
mov
stc
xchg
mov
mov
cmp
fucomi
adc
fdivl
mov
xchg
repnz
arpl
imul
inc
sub
rorl
ja
sbb
xchg
ficoms
jl
shrb
stos
ja
scas
dec
cli
fnstenv
adc
adc
dec
addr16
out
in
add
imul
or
inc
xchg
pop
or
rolb
push
out
sub
in
xchg
dec
xor
mov
loope
xor
lcall
push
cmp
pop
outsl
and
xor
sbb
test
lods
jbe
or
xchg
icebp
push
daa
xchg
addl
xchg
in
sub
sbb
xor
fiaddl
sarl
imul
jno
addr16
fistpll
add
xor
adc
leave
adc
xchg
mov
popf
sub
sbb
shlb
xchg
out
punpckhwd
lret
mov
pop
push
xchg
mov
popa
aam
fcmovnb
ja
jno
js
les
jb
js
test
inc
xchg
cmp
mov
fstpl
cs
test
ds
and
enter
out
aas
insl
enter
cmp
xor
inc
lret
movsl
cmp
loopne
sbb
lcall
pop
xchg
pop
mov
xor
arpl
adc
dec
mov
lret
jge
test
stos
add
mov
cmpl
sbb
mov
cmp
cwtl
add
pop
outsb
gs
mov
pop
xchg
in
cmc
sub
and
dec
mov
mov
lcall
adc
clc
mov
add
out
adc
les
mov
jbe
jbe
into
sub
jmp
ja
mov
pop
lods
xor
loop
inc
xor
push
lcall
testl
js
push
mov
mov
outsl
ficompl
inc
loopne
cs
rcrb
lcall
enter
repz
notl
je
or
cs
neg
scas
push
inc
xor
or
movsl
inc
dec
mov
inc
xchg
mov
aam
stc
cmp
xchg
jbe
jecxz
or
jg
dec
push
mov
aad
pop
mov
inc
pusha
jo
adc
insl
mov
lds
and
jno
dec
negb
mov
dec
bound
push
enter
xor
sbb
sub
adc
mov
xchg
ret
leave
out
fbld
sarl
rcl
jge
mov
jnp
jmp
shl
jge
test
call
les
mov
xor
ret
nop
add
fbld
lret
ret
sbb
push
testb
mov
in
mov
mov
out
scas
iret
push
fdivrs
in
inc
fwait
sbb
out
fsubr
sbb
mov
test
adc
hlt
clc
arpl
cmp
ljmp
cmc
jle
jl
addr16
fwait
push
imul
ret
xchg
test
xchg
or
xchg
lcall
mov
cmp
movsb
ja
into
dec
mov
xor
cmpsl
or
es
xorl
pop
cmc
imul
or
ja
lret
pop
je
fidivl
lds
popf
inc
movsl
movsb
mov
ret
lea
add
inc
mov
push
loop
rclb
and
cwtl
adc
cmp
movsl
movsb
daa
fsubs
lods
data16
adc
or
push
fwait
enter
cmp
push
jg
jecxz
xchg
dec
dec
xor
mov
nop
aaa
out
mov
insl
repnz
mov
fimuls
sub
sahf
das
into
nop
push
jmp
push
xor
xchg
loopne
outsl
mov
das
popf
loopne
add
scas
int
xchg
scas
jle
mov
add
insb
ljmp
ficoms
xchg
jns
cs
pop
sbb
mov
decl
jge
jecxz
pusha
cmp
mov
mov
sahf
lcall
stos
push
mov
lea
inc
repnz
rol
push
popf
mov
inc
sbb
add
mov
jle
push
add
and
sub
fistpl
adc
mov
push
fisttps
sbb
aas
lods
repnz
add
xor
adc
pusha
aas
cmp
aam
pop
jp
pop
insl
mov
xchg
sar
mov
dec
add
mov
xchg
out
pushl
xor
or
out
mov
test
out
pop
xor
insb
mov
push
les
xchg
pop
rcll
ljmp
outsl
mov
cmpsl
dec
mull
sub
shlb
stos
ss
sub
adc
sti
aaa
fcmovnu
and
je
filds
pop
ljmp
mov
mov
inc
andl
iret
push
pop
jle
stos
iret
sbb
lock
sub
test
mov
mov
jle
mov
out
pop
push
and
jmp
loopne
mov
jmp
mov
cmp
mov
mov
mov
subl
lods
cmp
jne
sub
popf
testb
xchg
push
jo
js
add
aaa
mov
rcll
mov
mov
mov
stc
mov
js
das
mov
in
mov
xor
xchg
pop
scas
jl
aad
dec
mov
sbb
popf
mov
push
sub
mov
mov
sbb
insb
push
pop
aad
mov
or
sti
in
fcoms
ret
loope
jae
outsl
ret
js
insb
xor
insb
xor
jns
aaa
add
or
call
inc
sbb
sti
into
hlt
mov
lock
test
jo
shl
or
sub
inc
mov
lret
mov
sbb
mov
xchg
scas
cltd
adc
ss
int
inc
lahf
dec
inc
je
sub
aas
mov
jecxz
adc
pop
or
movsb
addr16
aaa
je
jnp
or
leave
jge
loop
sbb
out
sbb
cmp
pop
xlat
jge
leave
push
icebp
mov
sub
or
jp
mov
movsl
pusha
push
pusha
jae
int3
nop
jle
fcomi
popa
push
popf
jle
insl
or
mov
arpl
mov
adc
add
sub
test
xchg
mull
cwtl
sbb
repnz
shll
inc
inc
insb
cmp
stos
mov
jno
mov
sub
mov
fisttpl
mov
lods
leave
adc
fstl
fwait
xchg
and
mov
call
sub
mov
sarb
nop
mov
sub
push
mov
mov
pop
jecxz
sahf
out
outsl
xchg
pusha
loop
mov
and
xchg
cltd
pop
push
add
pop
inc
int
data16
push
adc
in
xchg
arpl
icebp
mov
mov
fildl
inc
lret
aam
das
pop
nop
les
mov
sete
or
pushf
mov
stos
mov
ja
jb
lahf
adc
fwait
ret
push
pusha
inc
out
scas
xchg
xor
shl
rorl
and
push
icebp
hlt
rolb
jmp
adc
aam
addr16
xchg
test
cltd
push
arpl
mov
jnp
test
inc
adc
fwait
dec
jle
sbbl
jmp
mov
xor
mov
inc
pusha
leave
pop
cs
inc
idivb
mov
inc
or
sti
ljmp
cwtl
cmp
ds
mov
lock
sbb
pop
mov
mov
rorl
fwait
xorb
xor
mov
les
test
jo
mov
inc
addb
mov
fwait
push
mov
push
out
xor
test
mov
inc
mov
push
inc
fwait
gs
aaa
add
mov
fildll
dec
cltd
data16
jno
mov
fisttpll
fadds
daa
test
mov
mov
or
divb
push
cs
test
out
or
xchg
xor
rclb
or
lea
movsl
andb
inc
adc
sub
in
lods
lods
xor
outsb
xchg
or
or
sub
inc
mov
mov
xchg
mov
jmp
add
mov
mov
mull
xchg
ret
sbbb
ljmp
jg
push
ds
jg
mov
test
push
call
in
leave
test
movsl
add
data16
lret
mov
xchg
xchg
jb
jns
call
jo
leave
inc
cld
add
and
jb
dec
cmp
into
mov
jg
cs
inc
repnz
scas
jb
or
xchg
faddl
lret
jnp
or
dec
or
jnp
aad
in
jb
dec
adc
int3
jecxz
cmc
push
dec
pop
cmpsb
insb
sahf
add
pop
jg
xchg
flds
jb
call
call
test
jmp
call
mov
ds
icebp
push
cmp
repz
dec
sub
inc
sub
rcl
or
adc
cwtl
dec
out
cmpsl
sub
push
adc
scas
xchg
cmp
mov
cld
cmp
pop
cs
cld
fldt
or
adc
jb
loopne
out
sub
rcr
sbb
inc
out
inc
cwtl
push
rorb
mov
aad
mov
jp
inc
push
push
push
adc
cmp
mov
xchg
push
in
add
pop
incl
cmp
jo
inc
repz
dec
xor
mov
xchg
push
sbb
je
mov
dec
shrl
outsw
xchg
sbb
xlat
sbb
divb
lret
sub
jb
dec
mov
repnz
xchg
push
xor
push
mov
mov
mov
or
pop
add
push
mov
inc
jmp
insb
sbb
addb
int
xor
stos
dec
mov
decl
adc
cmp
pushw
sti
mov
lahf
rorl
outsl
dec
mov
arpl
inc
jmp
sub
test
aas
rclb
out
and
gs
imul
orps
iret
cltd
pusha
fnstcw
xchg
clc
iret
xor
call
adc
lret
lret
das
mov
adc
xor
scas
sub
pop
sbbb
ret
lahf
cmp
ds
push
jg
xlat
repnz
jno
inc
dec
stos
and
outsl
sub
icebp
adc
jl
push
inc
lds
cs
pop
loop
xor
sti
sarl
flds
loope
je
ljmp
or
mov
and
jae
mov
jmp
lahf
cmp
ss
sub
push
lds
mov
pop
push
push
or
jl
cwtl
rolb
subl
ljmp
int
mov
arpl
adc
in
or
lods
cmp
lods
xor
cmp
sbb
dec
in
xor
pop
lods
shr
testb
movsb
sub
mov
sti
xchg
ljmp
sbb
inc
ret
xchg
pop
jl
fistpll
sbb
rclb
adc
insb
gs
out
push
imul
inc
jns
xchg
cmp
push
outsl
xchg
lock
outsb
in
cmc
and
mov
cli
ret
dec
mov
cmp
in
jnp,pt
xchg
mov
stc
xor
pop
adc
data16
cmpsl
mov
icebp
dec
mov
pop
mov
mov
add
pop
push
into
ja
aam
xchg
test
fxam
aaa
pop
add
jne
adcb
sbb
popf
adc
shrl
mov
mov
cmc
push
lahf
shlb
sti
xlat
sub
loopne
aaa
out
xor
movsb
or
ss
dec
test
sub
and
fcmovnbe
lret
mov
and
lea
lret
test
dec
into
push
rolb
adc
and
inc
push
cmc
add
xor
push
mov
add
mov
das
into
adc
push
loop
xchg
pop
cmpsl
aad
scas
lock
stc
mov
mov
fs
lcall
fadd
es
jnp
sub
sbbb
cmp
xchg
dec
xchg
loope
es
insl
outsl
and
jo
or
pop
cmpsl
mov
xchg
and
pop
xchg
pop
mov
inc
lods
pop
iret
orb
push
jmp
mov
and
in
sti
insb
lcall
add
jecxz
data16
jecxz
cmp
popa
sbb
jmp
adc
adc
and
dec
testb
mov
aaa
add
jne
iret
mov
mov
and
cmpsl
add
or
cmp
or
mov
pop
lods
test
icebp
push
imul
dec
dec
imull
ljmp
mov
push
imul
scas
sti
test
add
test
gs
pop
lods
or
inc
aas
lret
jle
push
bound
lahf
or
add
push
jnp
xchg
cmpsb
pop
fs
andl
ret
pop
mov
pop
fdivs
cmp
daa
push
inc
sub
xchg
pop
imul
dec
ljmp
mov
inc
dec
mov
sti
mov
aaa
dec
stos
insb
and
xchg
cmp
dec
pop
and
data16
mov
scas
arpl
xchg
xchg
addr16
and
in
pushf
movsb
pop
xor
or
xchg
sbb
push
xorb
adc
mov
les
add
inc
iret
sub
enter
inc
je
cld
adc
sti
mov
out
lret
test
xor
repnz
or
into
insb
xor
ds
add
mov
xlat
das
fnstcw
sub
das
enter
in
dec
std
imul
adc
icebp
or
call
mov
jle
ljmp
xchg
scas
gs
imul
push
add
push
fnsave
mov
lods
mov
inc
add
cmp
imul
sbb
fwait
jl
cmp
cmc
sbb
jae
movsb
adc
cmp
jmp
stos
sti
aam
jge
shll
pop
dec
push
jnp
or
xlat
sbb
daa
push
stos
and
orl
sbb
enter
xchg
movsl
xchg
jnp
loop
pusha
fstl
sub
sbb
insb
scas
imul
imul
mov
or
pushf
fisubrl
cltd
mov
das
jb
ljmp
xchg
cmp
dec
and
jns
sub
lods
inc
test
daa
push
cmp
sub
pop
jae
adc
cmp
xor
mov
aaa
jp
inc
inc
fisubl
pop
fsubs
and
or
fcoml
cmp
stos
add
or
por
mov
xchg
mov
push
push
ror
in
inc
popa
cmp
fwait
or
cmp
arpl
pop
mov
out
repz
cltd
mov
loope
lret
imul
lea
lods
cmp
adc
sub
cli
mov
popa
xor
insl
or
dec
aad
cmp
and
in
repz
je
outsb
and
addr16
add
and
inc
loope
xchg
cmp
and
enter
mov
cwtl
mov
mov
loope
xchg
push
xlat
inc
or
inc
negb
ss
jno
test
subl
jle
xor
xchg
push
xor
mov
lcall
cmp
and
mov
add
pushf
xchg
xchg
xor
lods
push
pop
xchg
leave
adc
movsl
and
test
xor
mov
outsb
mov
or
shl
add
adc
insb
pop
pop
insb
fsub
mov
fsubrs
push
push
repnz
xlat
bound
sub
sub
imul
cmp
jg
cmp
mov
jbe
cvttps2pi
or
ljmp
fcmovu
dec
xor
xchg
sub
cmp
mov
inc
fisubs
pop
xor
mov
adc
popa
popl
xchg
repnz
xlat
inc
pushf
out
xchg
push
push
pop
mov
addr16
arpl
jmp
inc
inc
adc
mov
add
and
stc
jmp
xchg
xchg
adc
xor
xor
scas
mov
jmp
imul
sbb
xlat
and
ja
pop
shll
pop
scas
fs
adc
ss
push
and
mov
pop
mov
cmp
shrl
xorb
outsl
xchg
test
or
addr16
scas
je
imul
cmp
loope
sbb
mov
inc
cli
je
loop
dec
xlat
or
and
idivl
xor
cmpsb
lcall
lcall
mov
mov
cmp
jb
stos
push
sub
mov
int
jae
fdivr
cwtl
sbb
pop
lahf
lock
xor
rcrl
adc
pop
sub
push
clc
loop
bound
jmp
repnz
adc
push
imul
xlat
sahf
push
mov
cli
ja
push
out
lret
add
jl
fbstp
enter
jns
in
push
sahf
movsb
push
mov
mov
push
pusha
adc
fs
imul
mov
testb
jns
popf
and
mov
movsb
aad
mov
jge
jnp
es
xor
loop
xchg
mov
dec
daa
out
repnz
add
push
cmp
cmp
and
int
fs
pop
fsubr
loope
cwtl
insl
dec
xor
lret
jb
pop
or
xchg
test
mov
jge
sarb
adc
adc
dec
sti
mov
adc
gs
xchg
in
and
shll
sahf
adc
das
lcall
mov
pop
jmp
xchg
das
and
imul
adc
cli
sbb
ss
filds
test
adc
dec
push
push
loope
xchg
cmp
cmpb
sbb
inc
jle
push
mov
das
jle
outsb
xor
cmp
pminub
jo
cmpsb
aas
inc
mov
pop
mov
js
popa
push
add
aas
push
pop
adc
in
pop
xlat
push
mov
mov
mov
inc
sbb
add
or
sbb
movl
movsl
and
je
iret
stc
imul
out
outsb
out
adc
call
lea
push
mov
in
das
cmp
jecxz
shl
mov
les
in
loope
movsb
sub
stc
jle
insl
push
adc
or
cmp
inc
daa
imul
fmul
mov
dec
or
inc
xorl
sub
jmp
lods
mov
jle
and
addr16
iret
lea
fisubs
mov
add
cli
int3
add
and
mov
int3
ljmp
push
mov
in
stos
cmpsb
mov
inc
test
mov
test
icebp
xchg
test
outsb
int3
inc
mov
icebp
mov
gs
cld
inc
sahf
adcl
cmp
punpckhdq
lret
jecxz
sub
dec
out
push
mov
sub
xchg
jp
lea
aam
push
test
push
stc
stc
call
mov
jo
sub
mov
mov
push
sbb
gs
loopne
mov
out
addb
call
inc
dec
or
ficoml
iret
and
adc
fcomps
xchg
out
pop
jns
lea
aaa
andl
pop
dec
aam
out
nop
andb
mov
fidivrl
fmuls
test
jae
cmp
cli
andb
mov
push
adc
dec
dec
dec
mov
push
roll
test
cld
xchg
repz
lods
aad
jnp
xchg
std
mov
imul
idivb
testl
into
mov
cs
pop
xor
dec
pop
lods
out
xor
insb
pop
dec
lret
adc
data16
add
push
pop
sub
jmp
adcb
jecxz
cld
xor
jg
les
aas
mov
bound
add
stc
pop
cmpsl
adc
xchg
push
testl
fcmovu
and
stos
and
ds
and
cmp
jns
pushf
or
sub
and
add
add
cwtl
or
lahf
or
jne
and
add
data16
fisubs
sarl
lret
jns
and
inc
jns
xor
cmc
outsl
fmull
jp
popa
adcl
arpl
sarl
mov
dec
pop
fcoms
aam
jge
dec
adc
dec
movsb
cltd
lods
test
lahf
and
stos
pop
out
bound
in
cmc
sub
jmp
cs
cld
fbstp
mov
sahf
mov
dec
or
add
dec
jge
sub
pop
test
push
call
push
xchg
in
jle
in
cwtl
sbb
shlb
jne
mov
dec
xchg
outsb
push
jo
push
inc
mov
cmc
stc
inc
dec
clc
push
jecxz
dec
cmp
push
add
jbe
cmp
xchg
and
adc
stos
lds
icebp
js
inc
pop
stos
adc
pop
loop
or
sbb
pop
cmp
mov
enter
push
rol
movsb
ss
stos
push
inc
lock
dec
push
leave
movsb
mov
push
xor
std
lea
add
scas
dec
cmc
stos
pop
xor
sub
mov
mov
stos
data16
cmp
xchg
inc
lods
xor
push
into
js
sbb
add
ficoml
popf
mov
xchg
push
cmp
neg
xor
sub
insb
lcall
cmp
movsb
adcl
jp
pop
pop
jmp
jmp
repnz
dec
xchg
inc
dec
andl
int3
sti
clc
adcb
and
loop
dec
or
pop
pop
leave
int3
test
add
ficomps
sub
in
ss
cmp
sub
cli
inc
jbe
or
cmp
lcall
mov
movsl
loope
cmp
popf
popf
fistps
ret
addr16
repz
cltd
in
xor
pop
lods
cmp
int3
je
int
test
fistl
pushf
inc
out
cltd
enter
loopne
add
call
xor
fistl
xor
jb
dec
xchg
sub
stos
dec
inc
cmp
int3
mov
mov
push
push
pop
cs
lock
inc
clc
push
xor
add
ss
and
std
or
mov
mov
jecxz
gs
mov
mov
mov
jo
loope
add
mov
sti
icebp
ret
mov
jmp
push
leave
xor
or
lods
jge
insb
pop
jne
fstl
or
movsl
and
push
inc
xchg
out
cwtl
mov
jg
xor
div
mov
mov
js
push
in
test
es
stos
daa
jnp
push
jae
in
repz
jge
imul
jle
adc
push
inc
ret
gs
aad
and
subb
mov
push
in
movsl
add
mov
pusha
jns
push
sub
loope
popl
cmpsb
mov
and
sub
cld
sub
mov
mov
ret
cwtl
jae
sub
cmp
xorl
std
dec
pop
jne
sub
xchg
xor
aad
adc
mov
push
mov
add
jp
mov
shrl
outsl
aas
add
aad
xchg
sbb
and
sbb
cmc
push
xor
sbb
ss
jnp
pop
add
jmp
sahf
inc
addr16
out
sbb
movsl
outsb
xor
mov
mov
nop
inc
sbb
xchg
pop
sub
fwait
mov
and
lods
cmp
pop
subl
adc
push
jno
sub
sbb
pop
push
test
arpl
int
or
and
push
cmp
out
add
xor
push
dec
outsl
xchg
cltd
mov
push
pop
jecxz
push
push
fdivp
jg
xor
jl
daa
mov
rcl
xor
and
notl
dec
outsl
shlb
mov
lea
xchg
and
loopne
ret
testl
hlt
test
pushf
and
jae
gs
sub
push
out
ljmp
sub
xor
cmp
lcall
xor
cmp
mov
imul
das
inc
arpl
push
dec
repnz
lret
or
in
shlb
fs
lea
or
dec
add
ljmp
stos
push
mov
lea
pushf
jne
popa
push
call
in
mov
dec
leave
scas
int3
es
or
nop
divb
mov
cs
nop
mov
aad
int
out
popf
push
or
hlt
es
movsl
loopne,pn
pop
imul
inc
ss
mov
enter
sub
aas
repnz
movsb
shll
dec
lret
loope
or
loopne
jg
jle
nop
in
jae
or
cld
out
xchg
leave
or
pop
jmp
hlt
mov
jne
sbb
mov
xchg
pushf
jecxz
push
pop
out
dec
loope
or
mov
add
adc
dec
push
xlat
push
xchg
mov
pop
out
ret
lcall
pop
jnp
test
into
sub
xlat
popa
mov
fisubl
idivl
xchg
adcb
jl
mov
inc
xor
push
je
mov
jle
sbb
pop
leave
inc
jno
sub
nop
sbbl
jge
inc
fwait
xorb
add
jg
sub
mov
pop
pusha
inc
imull
fldl
cmpsb
mov
lods
and
adc
push
sub
lds
cwtl
or
mov
mov
popa
mov
stos
dec
add
adc
pop
fmuls
fidivl
sub
stc
add
and
hlt
and
int
dec
or
cmpsb
pop
dec
mov
jle
pop
repz
sub
test
in
xor
sahf
ret
repnz
scas
or
push
and
sub
outsl
cmpsl
jge
or
je
add
lcall
daa
fsubr
daa
cs
inc
fwait
add
push
into
jle
xchg
pop
aas
mov
aad
pop
dec
push
lret
pusha
inc
movsl
mov
icebp
jbe
cmpsb
ss
fidivl
addl
popf
and
outsl
cmp
popa
push
sub
shll
dec
dec
loopne
aam
js
add
aad
stc
mov
jle
or
andb
pop
movsb
imul
mov
cmp
xlat
sbb
pop
or
adc
pushf
lahf
sbb
jp
cs
in
daa
aad
pop
cld
loope
mov
push
and
scas
mov
movsb
dec
dec
cwtl
mov
inc
pop
orb
mov
lret
aad
stc
push
mov
cld
pop
dec
pop
push
sub
and
sahf
inc
fsubrl
push
cs
push
inc
cmp
shll
enter
add
xor
xor
fcmovbe
std
push
outsb
xchg
fwait
lahf
fs
loopne
dec
shll
jp
dec
add
push
jg
je
in
fidivs
mov
jno
push
addb
loope
cmpsl
cmp
sbb
inc
and
orb
and
mov
cmpsb
inc
or
mov
xor
pusha
arpl
dec
fsubs
pop
jecxz
mov
pop
adc
cltd
sub
lret
cmpsb
sub
lcall
cltd
sbb
inc
cs
movb
fisttpll
mov
in
imul
pushf
data16
and
dec
pop
fdivl
cmp
fimull
scas
xchg
ds
or
xchg
data16
stos
cmpsb
shlb
and
jp
sbb
insl
dec
fstps
les
adc
aaa
cmp
add
xor
jg
in
popa
test
pop
sbb
and
push
dec
lcall
inc
cmp
icebp
inc
divl
jle
jmp
dec
test
push
daa
stos
sti
mov
fs
scas
adc
rcll
sub
sbb
cmp
xorb
push
jnp
popa
inc
les
push
pop
inc
cmp
jl
fucomp
fwait
popa
sub
rorl
dec
adc
arpl
leave
lret
aam
sub
fdivrs
movsl
imul
mov
adcb
jle
lock
push
push
ja
pushf
xor
inc
sbb
jmp
fmull
repnz
mov
cmc
push
out
xchg
shll
ret
in
ja
xchg
dec
dec
test
or
add
pop
mov
or
aam
cmp
push
into
pop
sbb
ret
test
mov
push
cmpsb
jge
out
test
mov
push
inc
stc
dec
sbb
xchg
ret
inc
dec
outsl
cmp
jge
jb
popf
testb
xchg
clc
aaa
mov
movsb
xchg
xchg
cmp
jmp
fwait
mov
pop
addr16
adc
js
adc
dec
test
out
mov
hlt
js
aad
outsb
mov
imul
es
xorb
loop
je
mov
fmulp
fisubl
inc
test
or
jae
cmp
cmc
dec
cmp
add
jecxz
js
js
gs
std
lds
push
sub
jne
inc
out
dec
test
shl
mov
insl
cltd
adc
sti
mov
jnp
pushf
aam
daa
ret
jne
cmp
xchg
mov
xor
fucomip
pushf
cmp
inc
sub
jns
cmpsl
cmp
inc
leavew
jno
sahf
jae
xor
inc
inc
jno
test
ret
mov
aam
or
jnp
jno,pn
aas
pop
subl
add
and
test
inc
jge
jmp
xor
pop
fs
push
stc
sbb
sbb
push
stc
sbb
inc
mov
scas
testb
shlb
inc
test
adc
out
scas
mov
sti
push
insb
inc
jp
cs
jp
int
orl
or
inc
into
cmp
std
fdivs
push
clc
hlt
out
rolb
mov
in
jno
lea
imul
inc
icebp
pop
leave
popf
mov
fwait
mov
sub
sahf
dec
push
cmc
dec
mov
dec
stos
nop
pop
gs
leave
mov
push
out
add
loopne
popa
jge
mov
inc
movsl
mov
int3
pop
jae
dec
dec
mov
movsb
cmp
jge
test
sahf
sub
sub
and
idivb
sub
push
cmpsb
lcall
xchg
mov
aaa
out
add
add
fnstsw
jne
pop
les
mov
mov
and
add
clc
cli
cmp
push
jno
pop
pop
jle
mov
pop
mov
ss
out
outsl
fdivrl
sarl
cs
lds
mov
pop
mov
adc
pop
dec
addr16
popf
bound
clc
dec
sbb
lds
adc
pushf
mov
inc
push
xchg
adc
adc
psadbw
sbb
mov
movsb
imull
lock
es
fs
push
pusha
push
mov
jle
pop
or
lds
and
hlt
ds
lods
inc
or
data16
adc
out
enter
dec
dec
xchg
repz
fcompl
pop
pusha
aam
and
out
push
cs
push
les
int
add
das
out
out
xor
and
leave
cmp
mov
cmp
push
es
jmp
clc
lcall
in
mov
stc
or
pop
fwait
aam
adc
and
add
and
push
adc
xchg
or
xor
imul
lret
pop
dec
xchg
and
mov
xor
mov
stc
jle
sbb
lds
mov
mov
dec
or
or
in
rol
insb
jbe
add
cmp
lds
icebp
inc
mov
jno
mov
dec
add
xchg
mov
jmp
adc
sub
xchg
push
inc
dec
mov
cmp
sub
std
bound
std
mov
xchg
push
sarl
dec
sbb
sahf
lcall
das
bound
and
dec
pop
sti
jns
into
mov
movsl
js
cmp
jle
cmp
ds
mov
int
int3
jnp
leave
pop
dec
lds
setl
lahf
mov
jnp
loope
shrl
add
loop
je
movsb
ret
test
dec
scas
and
adc
dec
mov
dec
lcall
lock
adc
ret
pushf
mov
test
mov
sbb
or
data16
popf
mov
push
dec
jnp
icebp
push
mov
out
pop
jne
and
leave
lret
sbb
pop
cmc
xor
arpl
mov
clc
dec
cmc
jbe
mov
mov
pop
test
and
mov
pop
fs
lods
sbb
pusha
push
js
shll
and
xchg
sarb
mov
mov
mov
mov
rclb
cmp
push
mov
bound
data16
loopne
inc
cmp
jge
mov
add
mov
xor
xor
adc
adc
fildll
lret
addr16
lea
enter
jnp
pop
out
dec
add
fisttps
cs
repnz
insl
sub
jle
adc
push
push
pop
arpl
lods
jns,pt
mov
test
orl
xchg
mov
lods
xchg
orb
orb
mov
or
std
xchg
mov
cmp
out
clc
ss
and
cld
stos
lods
cmp
and
xchg
fwait
or
fidivrl
mov
inc
pop
or
jae
sti
pop
out
jle
fsubs
and
sbb
fidivl
scas
mov
inc
insb
dec
fs
mov
pop
jbe
and
adc
orb
xchg
addb
imul
sub
adc
mov
mov
push
in
das
mov
ljmp
inc
cmc
insl
dec
push
test
add
test
mov
push
dec
fisubrl
fdivrl
and
les
lahf
notb
stos
call
dec
leave
lahf
xor
xchg
jg
or
pop
adc
mov
pop
in
iret
sbb
clc
inc
fdivrs
out
out
iret
mov
or
add
mov
icebp
mov
push
jae
fimull
sbb
add
movsl
cmp
pop
inc
adc
xchg
inc
mov
jle
xor
jnp
xlat
mov
shlb
jle
inc
and
movsb
icebp
pop
nop
lods
inc
jns
test
add
sbb
xor
mov
push
addb
out
push
sbb
dec
cmpsb
inc
or
jmp
int3
outsl
std
jge
mov
fimuls
mov
pop
push
adc
iret
xchg
cmc
je
das
imul
and
call
daa
pop
loopne
jns
ret
imul
stos
sbbl
mov
mov
notl
sub
cltd
and
pop
cmp
push
jb
out
or
adc
popl
jbe
push
sub
push
xor
into
and
or
aas
pushf
push
xchg
movsl
or
xchg
mov
loop
pop
or
packuswb
fiaddl
fdivrs
leave
cmpsl
in
je
adc
inc
sarb
pop
jmp
xor
fcompl
xor
jmp
loope
sbb
fstps
call
sub
or
aaa
int3
int
enter
pop
stos
mov
jecxz
mov
sbb
mov
sbb
cmpsb
sbbl
xchg
mov
mov
dec
mov
filds
pop
fidivl
sbb
cmp
in
pop
mov
jb
pop
dec
sub
mov
sub
push
inc
dec
xor
int3
frstor
sbb
jbe
sub
movb
sbb
pop
ds
nop
call
add
xchg
fisttpll
pushf
jbe
shr
into
sub
and
pop
test
fisubl
mov
hlt
mov
jbe
fidivrl
mov
inc
push
stos
inc
pop
shlb
jge
push
push
mov
adc
scas
dec
mov
scas
dec
inc
gs
xor
lock
int
addl
mov
xor
rclb
mov
push
mov
pop
jmp
inc
cmp
or
movsl
movsb
fdivrs
lahf
loope
jle
test
shll
loopne
mov
pushf
dec
mov
test
sub
mov
lret
arpl
ljmp
jmp
mov
insb
das
adc
sub
and
scas
cmp
mov
flds
lcall
out
call
push
scas
push
adc
cmp
add
gs
ds
addr16
mov
lods
sub
imul
mov
xchg
mov
cmp
push
inc
add
cmc
jnp
jmp
inc
sbb
xchg
cwtl
mov
mov
adc
sub
sbb
stc
int
pop
enter
mov
jnp
mov
push
lods
xchg
jge
inc
push
aas
fdivl
into
adc
stos
xchg
mov
repnz
xchg
push
inc
sub
and
test
xchg
mov
xchg
sub
mov
xchg
fwait
jae
dec
hlt
mov
cld
inc
jp
js
cli
ss
push
fsubl
push
push
rcrl
movsb
sbb
mov
fsubrl
pop
popf
sub
cld
sub
dec
insb
mov
and
push
add
inc
xor
es
pop
cmc
pop
iret
mov
lret
cld
in
push
subl
cmpsl
xchg
aam
cmpsl
sub
adc
pop
inc
mov
xchg
mov
jmp
dec
mov
lret
shll
pop
xchg
cmp
xchg
push
sbb
mov
adc
out
push
inc
push
sub
cmc
xchg
mov
icebp
pop
ss
fucomp
fisubs
stc
xchg
das
add
out
pop
mov
sub
dec
mov
xchg
jle
stos
push
cmp
jle
fcomi
test
call
std
and
jge
and
sbbl
add
adc
leave
in
out
fisubs
fwait
mov
loopne
fnstsw
lret
mov
mov
xor
lcall
and
shll
int
outsl
pushw
hlt
inc
xorb
xchg
mov
bound
leave
mov
or
cwtl
push
stos
push
jb
add
sti
xchg
pop
test
stc
add
int3
xor
cmpsl
push
jo
ljmp
fs
xor
jge
repnz
pop
jnp
cmpsb
lahf
dec
outsl
or
sbb
popl
dec
push
dec
in
adc
inc
pop
icebp
fcmovbe
and
imul
lea
shl
mov
or
rcrl
cmp
add
dec
mov
outsl
dec
push
adc
in
lds
fcos
mov
inc
jg
pop
cmc
movsl
xor
dec
push
xchg
add
xlat
nop
bound
mov
xchg
cmp
lcall
dec
mov
lds
or
stos
ljmp
sahf
subl
xor
negb
push
mov
test
cmp
nop
clc
fwait
jnp
xchg
dec
rorl
sti
fldcw
cmp
aam
into
daa
lock
rolb
mov
jnp
shll
imul
mov
xchg
xchg
arpl
orl
fbstp
pop
lds
or
or
cltd
xlat
test
dec
xchg
push
pop
inc
aas
fucomip
jo
or
popa
cmp
movsl
xchg
sarl
mov
add
dec
ss
mov
out
mov
ljmp
cmp
xor
jl
xor
loope
sub
hlt
jmp
adc
in
or
call
mov
jmp
push
push
mov
fidivl
ds
mov
inc
stos
shlb
nop
xchg
jo
sti
fdivrp
in
inc
dec
push
cltd
inc
cmc
mov
mov
addr16
lahf
dec
iret
dec
aad
jbe
addl
dec
mov
jne
call
mov
cmpsl
xor
jb
callw
xchg
sub
xchg
pop
lods
std
sbb
xchg
idiv
les
push
lds
pop
mov
inc
xchg
aad
inc
jbe
mov
push
cltd
or
mov
incb
sub
xchg
dec
mov
daa
xor
mov
lcall
or
cmp
loop
or
mov
sti
lock
movsl
add
mov
aaa
inc
jle
ljmp
sarb
pcmpeqd
aas
loop
sbbl
hlt
mov
inc
lds
sbb
ret
jae
movsl
inc
xchg
inc
adc
cmpsl
add
into
in
cwtl
push
xchg
or
xchg
lock
jmp
xchg
sbb
cmp
shl
push
dec
out
daa
mov
xorl
jne
cmp
bswap
xorl
or
jmp
cmp
stos
ficomps
arpl
or
inc
dec
cmp
inc
out
stc
cmp
test
inc
imul
xchg
sub
fldenv
lds
inc
call
and
cmp
adc
test
jecxz
inc
push
push
inc
mov
pop
push
fmulp
pop
test
out
push
inc
ljmp
loope
add
pminub
pop
dec
xor
pop
pop
out
xor
fidivl
inc
pop
mov
negb
adc
jo
fnstenv
std
xor
push
mov
sahf
mov
jo
cmc
fsub
cmc
out
rclb
aad
movl
jae
pop
bound
inc
adc
mov
negl
and
icebp
cli
xor
in
fcoms
les
mov
sub
in
dec
arpl
cmpsl
fimuls
ja
adc
jl
fildl
cli
mov
mov
adc
lock
jl
daa
cmp
inc
jl
and
sub
outsl
js
mov
out
ficompl
add
xchg
xchg
or
mov
jp
xor
pop
sti
xor
in
outsb
jns
loopne
pop
adc
cltd
call
pushf
xor
in
xchg
les
rorl
movsb
sbb
ret
pop
lea
and
and
cli
xchg
stc
xor
cmpl
pop
jae
or
xor
cmc
movsl
and
lock
cmp
lds
xchg
out
jg
lea
shrb
leave
and
mov
cwtl
xchg
push
inc
mov
jmp
bound
repz
mov
pop
pop
rcr
pop
pop
int3
jl
pop
icebp
adc
loope
rcll
out
cmpsl
cli
inc
cmpsb
into
mov
mov
sbb
and
push
push
dec
insb
xchg
mov
fs
push
dec
pop
sub
add
mov
loop
sbb
xchg
adc
mov
sti
insb
xor
sbb
lea
adc
fdivrp
or
in
jns
pop
mov
pop
push
xorl
xchg
xchg
jne
gs
imul
jl
lods
lea
neg
push
sub
repnz
or
push
cli
pusha
movsb
sbb
add
ret
jmp
repz
mov
pop
or
and
mov
std
testl
xlat
movsl
cld
mov
mov
pop
mov
mov
mov
add
hlt
xchg
stos
out
stc
jg
cmp
scas
mov
push
xor
sub
testb
jno
clc
xor
scas
test
cs
movsb
push
arpl
cld
cltd
in
cs
mov
or
mov
mov
sbb
lock
lcall
test
add
pushf
aam
cmp
push
adc
ja
nop
repz
pop
arpl
gs
adc
inc
ja
pop
and
jne
testl
jmp
lret
fsubp
jno
fwait
sahf
pop
cmc
fadd
bound
dec
adc
jle
scas
movsl
mov
pop
inc
xchg
aad
pop
cmp
and
jmp
loop
dec
ja
mov
fstpt
js
xchg
push
cli
push
mov
dec
xchg
and
inc
insl
jmp
in
mov
cltd
and
insl
lea
push
push
xor
insl
test
lds
gs
or
mov
rcrl
or
data16
adc
mov
imul
movb
mov
imul
ss
push
jbe
adc
push
adc
push
in
lret
ss
sub
jmp
loope
mov
mov
pop
mov
jmp
sti
mov
subl
mov
outsl
jle
push
or
stos
or
push
push
mov
pop
sbb
test
and
add
jecxz
push
stc
shrl
add
fimull
mov
sbb
push
jnp
push
into
adc
loope
fs
in
push
xchg
pop
shlb
cmpsl
das
inc
push
jle
push
xchg
and
insb
mov
in
cmp
out
aaa
mov
mov
adc
movsb
fistl
std
adc
or
xchg
adc
rcrb
xor
jno
sbb
rclb
sub
push
mov
sub
sub
adc
xor
stos
cli
lods
pop
cwtl
jae
movsl
int
or
and
dec
jecxz
sbb
jg
and
xchg
xchg
repnz
and
mov
psrlq
arpl
popf
je
push
loopne
ds
sbb
lcall
push
js
arpl
jnp,pt
dec
loop
mov
dec
in
mov
push
cs
sub
or
dec
or
or
repnz
ret
nop
add
hlt
xchg
ja
scas
xor
mov
and
mov
cmp
sarb
icebp
xor
and
cmpsb
dec
adc
adc
push
adc
lea
sbb
add
orb
je
xchg
jmp
fcoml
fldl
inc
adc
mov
xor
xor
xchg
test
lock
cmp
push
mov
in
push
scas
test
stc
sub
cmp
addl
jp
pop
ljmp
or
ss
xor
or
jb
sub
push
popa
mov
push
pop
cmp
inc
push
aas
mov
xlat
dec
out
xchg
test
ja
test
lock
cmp
push
mov
and
addb
xchg
push
test
popa
test
popa
pop
bound
mov
std
lret
mov
sbb
ljmp
cmc
pusha
aam
mov
pop
mov
sub
jae
sub
lret
mov
cmc
cmpsl
mov
cltd
lret
fprem
stc
inc
shrb
icebp
sbb
popf
pop
lahf
push
leave
jo
pop
mov
aaa
adc
movntq
adc
or
pop
bnd
xchg
cmp
cmc
jns
jg
bound
xchg
sub
mov
std
or
push
mov
pop
inc
rclb
cltd
sub
xchg
sbb
ret
adc
dec
hlt
stos
and
iret
lods
scas
adc
jbe
mov
mov
inc
jl
loop
and
je,pn
or
popa
sbb
jb
insb
push
sub
and
fwait
stc
inc
lea
xchg
sbb
ds
cmpsl
push
sbb
sub
jmp
mov
hlt
dec
and
jae
mov
imul
cmp
pop
lods
cld
ds
out
push
pop
insb
jae
testb
pop
sub
test
or
inc
in
jb
or
repz
insb
sub
stos
push
fbstp
dec
rorb
xor
pushf
xor
sahf
je
sub
cli
mov
mov
scas
mov
in
and
mov
sbb
xchg
stc
xchg
push
rdpmc
cmc
xchg
mov
cmc
in
or
aad
or
push
xchg
lret
jbe
lahf
adc
mov
and
xor
movsb
sbb
cmp
push
mov
clc
cmp
jmp
loop
lcall
loop
mov
add
inc
jle
sbbb
aam
mov
loope
sbb
adc
int3
sub
mov
ja
fsubrs
inc
sub
xchg
notb
mov
xor
xor
call
std
push
pop
aas
and
cs
pop
cwtl
je
or
jg
mov
mov
mov
scas
push
xor
cmc
sarl
in
std
dec
xchg
fcoml
cmp
lret
stos
ljmp
clc
dec
sbb
mov
inc
clc
dec
inc
push
dec
pop
out
call
adc
nop
gs
aad
nop
sbbl
mov
jge
cmp
stos
mov
je
lcall
repnz
inc
movsb
shrb
xor
xchg
or
int3
pop
jp
lods
out
repz
fdivrp
adc
and
inc
xor
loopne
out
push
clc
add
sbb
icebp
dec
rorb
and
push
push
in
das
rcrl
out
sub
sub
xchg
xchg
inc
sbb
fimuls
jns
cmp
mov
mov
jecxz
dec
in
dec
mov
mov
repz
loopne
hlt
pcmpgtb
testl
adc
add
dec
push
inc
xor
repz
lcall
cli
mov
jecxz
mov
mov
andl
xchg
cmpsl
mov
inc
mov
mov
or
adc
mov
lret
call
pop
popf
popa
jns
push
es
xor
pop
jp
sbb
jnp
mov
mov
mov
add
repnz
mov
js
jns
rcl
push
sbb
data16
jp
sti
push
hlt
inc
pop
dec
push
fsts
push
fnsave
aad
imul
push
out
pushf
add
xchg
dec
inc
pop
xchg
fwait
aaa
mov
xor
adc
pop
inc
dec
adc
adc
into
cwtl
orb
cmp
data16
in
push
ja
cltd
dec
cmp
fsubl
and
mov
mov
cmp
adc
fsubrp
mov
cwtl
add
pop
pop
dec
sahf
cwtl
add
pop
push
sub
dec
leave
inc
fsub
sbb
rcrl
adc
repz
push
aas
in
ror
outsl
add
loope
mov
imul
dec
nop
mov
dec
cmp
pop
push
pop
loop
jmp
test
lea
xchg
lret
mov
xor
mov
pop
jge
adc
sbb
mov
movsb
call
or
popf
adc
cmpl
icebp
xchg
fsts
mov
aas
enter
ja
and
add
inc
pop
into
inc
dec
cs
in
out
imul
movsb
mov
mov
pop
in
aaa
jg
xor
out
adc
mul
aam
cmp
leave
or
inc
lds
add
adc
add
call
xchg
cmc
mov
mov
xchg
or
push
idivl
adc
test
add
mov
add
mov
ret
cmp
xor
or
pop
ret
loope
adcl
repz
pushf
insl
rcr
adc
lds
std
xchg
mov
inc
hlt
div
lods
pop
inc
adc
pop
mov
xchg
push
dec
popa
xor
cmp
stos
sbb
fsubl
mov
jne
arpl
mov
push
ds
jne
out
sbb
testl
out
fmull
imul
rcll
inc
subb
sbb
cmp
push
mov
loop
sub
fsub
lds
pop
sub
adc
dec
jl
je
push
sbb
cltd
push
arpl
mov
outsl
icebp
push
mov
or
push
bound
fwait
outsl
adc
mov
mov
popf
cmc
xchg
repnz
jmp
add
sbb
sub
cli
stos
movsl
jns
jns
adc
repz
ss
pusha
jnp
and
int3
out
rolb
pop
add
mov
lcall
out
mov
add
dec
clc
and
test
cli
stos
es
mov
fcmove
fcoms
adc
xchg
out
repnz
mov
insb
ljmp
cmp
pusha
das
pop
mov
ss
stos
imul
bound
xchg
mov
shl
leave
and
fidivs
xchg
into
iret
lret
push
xlat
sub
and
outsb
cmpsl
lea
xchg
jbe
pushf
repz
dec
dec
out
sub
pop
pop
scas
ret
add
push
aam
dec
in
mov
sbb
int3
js
hlt
repnz
pushl
pop
add
cli
xchg
cmp
cmp
ficoml
ss
pop
add
push
test
sbb
cs
aad
lods
jno
std
divb
subl
test
cli
or
and
mov
arpl
sahf
in
popa
test
loope
and
add
mov
jo
jb
push
rclb
xchg
mov
or
repnz
lods
inc
add
js
popa
lcall
adc
push
outsl
sub
cmc
mulb
mov
mov
imul
shlb
fcomps
cmc
icebp
lret
ja
xchg
jl
mov
cmpsb
imul
mov
lcall
scas
fcmovne
inc
test
xchg
sti
cmpsl
push
pushf
mov
xor
mov
adcl
inc
sbb
rclb
leave
cmp
rorl
imul
xchg
clc
stos
shlb
mov
sbb
xchg
xchg
lahf
test
pushf
or
push
sub
adc
mov
adc
inc
xor
mov
lds
frstor
inc
inc
add
clc
shlb
and
lret
or
sub
jmp
push
ds
sbb
add
shrb
xchg
add
nop
inc
pop
push
rcrl
aam
jns
outsb
outsl
sbb
rcr
pop
sti
pop
and
and
or
repz
lock
sbb
stos
test
or
dec
sub
int3
addr16
adc
fisttpl
lods
dec
and
orl
sub
cmpsb
stos
pop
ja
mov
push
pushf
aad
mov
scas
cli
fsubs
mov
or
xor
add
dec
lds
out
cmpsl
leave
movsl
in
out
xor
movsb
test
sub
and
mov
push
das
pop
inc
sahf
ss
mov
jno
pop
cmc
clc
cmp
mov
jno
enter
pushl
loop
rol
mov
sbb
mov
mov
pushf
sbb
add
or
mov
fimuls
arpl
les
xlat
in
mov
jne
jne
stos
in
pop
xor
je
inc
fidivrs
dec
ds
xchg
xchg
cmp
mov
push
inc
push
shl
fistpl
int
jle
push
push
jno
jle
hlt
pop
mov
fisubs
mov
mov
mov
outsb
sbb
cmp
test
mov
loop
test
test
inc
movsb
jbe
mov
and
sub
dec
in
fsts
aam
fsubs
insl
pop
xchg
inc
sub
in
xchg
in
jno
jle
pop
push
outsb
dec
jns
jo
cld
das
inc
lahf
or
idivl
lret
sub
pop
and
lret
loope
enter
arpl
cmpsb
mov
mov
sarb
lock
clc
sub
mov
in
sbb
cli
outsl
mov
jno
rcrl
pop
mov
pusha
mov
pop
mov
fisttpll
push
xor
gs
shll
sub
cmp
xlat
xchg
ret
jne
cltd
loop
insb
cltd
icebp
stos
mov
push
lret
int
dec
popl
into
and
add
lahf
pop
xor
arpl
loop
jae
cmc
mov
mov
outsl
dec
sbb
xor
cmp
adc
daa
pop
or
cmp
out
mov
xlat
pop
cmp
fsubrl
std
aam
cmp
sbb
sbb
dec
lods
cmc
out
shlb
nop
aas
in
faddl
jmp
in
pop
fstps
lock
ljmp
xor
push
and
push
jno
out
mov
pop
lret
nop
shll
xchg
les
repnz
pop
xor
stc
popa
out
xchg
fsubrl
xchg
out
jp
aas
repnz
imul
mov
pop
add
stos
fidivrl
cmp
and
xchg
loope
mov
insb
mov
lcall
inc
gs
jb
adc
movsl
aam
push
and
lock
lds
sbb
jge
cmpsb
into
in
jg
mov
add
aad
pop
aas
popa
mov
sub
pop
sarb
mov
push
pop
arpl
ds
inc
mov
scas
or
jnp
fiaddl
in
mov
inc
imul
or
mov
jbe
cmp
jb
and
sub
stos
divl
icebp
cmp
lock
into
dec
fisubs
and
cli
les
dec
pop
and
mov
jecxz
pop
mul
nop
lret
sbb
and
fmul
cmp
popf
arpl
fisubl
push
lods
es
fisubs
loopne
push
enter
xor
lret
outsb
jne
out
cltd
shrl
push
idivl
xor
sub
imul
xchg
add
cmp
cmpsl
add
sbbl
jo
mov
inc
lods
loop
call
xchg
cs
cwtl
inc
dec
pop
icebp
imul
sbb
jns
sbb
incb
insl
push
mov
dec
xor
mov
add
pop
daa
ret
push
mov
jb
neg
ja
out
call
aas
mov
mov
pop
in
test
mov
inc
mov
sbb
pop
aaa
inc
int3
jb
aam
pushf
jae
dec
sbb
popa
dec
fmull
cmp
mov
in
or
hlt
in
mov
ss
jb,pt
dec
jle
int3
push
test
pop
rcrl
fistpl
sbb
dec
iret
cld
imul
jg
lods
sub
imul
sub
jge
push
popf
ja
pop
aam
dec
fucom
cltd
adc
cwtl
lret
mov
fiaddl
xchg
xchg
movsb
cli
mov
mov
lret
fcoml
push
xchg
inc
jne
rep
das
ss
aad
arpl
nop
fisttps
inc
lret
int3
jns
int
add
movsl
inc
jecxz
out
fcom
fsts
sub
popf
mov
mov
push
xor
ja
shrl
jb
mov
cs
mov
dec
fmulp
cltd
jb
lret
insl
pop
cmp
lods
bound
pusha
dec
dec
and
das
sub
add
aaa
push
leave
test
clc
sub
xchg
loope
xchg
jbe
hlt
push
loop
dec
mov
mov
xor
push
mov
cld
ljmp
pop
jmp
jl
imul
xchg
into
lret
mov
insb
and
std
icebp
push
sbb
inc
sbbb
lret
loop
xor
data16
test
add
add
lret
pop
jb
test
push
xchg
inc
cmp
mov
sti
test
jbe
out
popa
in
inc
lods
sub
repnz
xchg
das
loop
push
shrb
mov
mov
inc
lcall
xlat
cmp
push
in
xchg
inc
sbb
and
int
arpl
call
pop
sub
das
adc
mov
mov
into
and
adc
push
je
inc
daa
out
loop
jp
imul
push
or
mov
pusha
lods
sub
loope
mov
stos
loope
add
or
nop
inc
lock
das
xor
mov
adc
sbb
push
mov
sbb
test
into
inc
and
shrl
fcomp
repz
repnz
nop
mov
inc
mov
dec
pop
fcmovnb
push
int
inc
rolb
cld
mov
mov
aam
fcomps
add
jae
es
addb
push
aam
sbbl
jecxz
fadd
xor
mov
es
mov
adc
pusha
mov
js
mov
mov
sbb
je
adc
inc
mov
or
push
mov
cmp
xor
loopne
loop
gs
sarb
int
jecxz
mov
inc
sahf
hlt
gs
mov
cmc
outsb
add
xchg
lret
arpl
fs
ja
ja
xchg
ficompl
test
insb
sbb
lret
sbb
pop
or
jl
and
test
dec
cmp
int
push
das
and
push
fsubrp
inc
pop
xchg
pusha
cmpsb
gs
mov
shr
xchg
xchg
cld
adc
dec
add
out
dec
in
test
std
add
xchg
scas
inc
rcrl
mov
adc
dec
insl
ds
aad
inc
and
jmp
xchg
pop
jg
les
leave
subl
or
dec
fucomip
adc
cmpsb
test
aaa
mov
cmp
inc
pop
movsl
or
sbb
inc
into
mov
xor
mov
outsb
mov
loopne
std
ret
push
shlb
inc
pop
push
inc
jl
jmp
addr16
das
or
mov
not
mov
je
xchg
mov
leave
lcall
loope
dec
mov
mov
clc
filds
or
pop
xchg
xchg
pop
fiaddl
push
adcb
mov
out
bound
pusha
push
dec
xchg
outsb
in
cmp
lods
fwait
je
outsl
pop
or
dec
push
cmpsl
and
fadds
aaa
idiv
mov
lods
xor
push
push
mov
jne
aad
mov
jo
pop
add
loope
and
mov
sub
out
pop
js
xorb
popa
pop
or
and
cmp
inc
mov
imul
cltd
movsb
jmp
insl
push
sahf
lret
cltd
mov
mov
nop
lock
push
int3
push
fwait
test
ss
out
js
aad
repz
push
cmp
push
mov
push
jne
jl
scas
dec
and
imul
int
cmp
incl
das
adc
int3
mov
popf
repnz
xchg
repz
stos
ss
mov
scas
mov
in
in
insl
popf
iret
mov
jge
data16
pop
mov
daa
mulb
mov
sub
mov
mov
icebp
andb
sbb
and
mov
in
push
bound
addr16
insb
mov
push
jmp
adc
pusha
xchg
pusha
imul
mov
sub
shlb
ljmp
mov
enter
jbe
sub
jp
sbb
std
jecxz
dec
add
pop
lds
test
pusha
pushf
sub
xchg
mov
testb
xchg
repz
mov
shll
push
imul
cli
gs
jne
push
cwtl
arpl
and
or
jge
lret
pop
sbb
adc
sbb
push
cmpsl
inc
cmp
inc
lock
sbb
inc
push
mov
cmp
xor
xchg
push
out
mov
jg
shll
fsub
leave
bound
mov
cmp
dec
mov
stos
imull
int3
sti
xchg
and
add
pop
stc
pop
aam
stc
pop
out
pop
add
xor
mov
inc
jbe
push
in
xor
jp
loopne
mov
fdivl
pop
gs
imul
dec
add
dec
sti
outsb
xchg
fsubr
fstpl
adc
decl
in
xor
into
cs
mov
cmpsb
fistpl
jl
add
das
int3
iret
sahf
loop
les
jmp
pusha
mov
sti
int3
mov
ja
sub
stos
popf
or
jp
xlat
mov
cmpsl
xchg
pushf
and
pop
sub
insl
stos
pop
ds
inc
mov
push
jmp
lods
cmc
stc
pusha
sbb
mov
mov
push
addr16
es
into
and
shrl
jne
daa
rorl
adc
lods
adc
es
testb
sbb
pop
cmpsl
pop
mov
call
xchg
aad
mov
dec
sarl
adcb
dec
fwait
xchg
repnz
loop
nop
jno
mov
cmp
dec
pop
out
jne
jge
es
or
mov
or
inc
xchg
dec
push
xor
push
fstl
mov
fisttps
sub
addps
pop
movsl
scas
add
dec
and
xchg
mov
dec
std
lcall
pushf
mov
mov
inc
cmpsl
mull
xor
loopne
inc
inc
xchg
gs
arpl
xor
out
mov
jo
mov
pop
mov
cmc
out
inc
adc
call
ret
mov
mov
push
and
in
out
push
add
adc
xor
dec
cmp
mov
es
add
nop
mov
sub
je
inc
add
mov
adc
clc
nop
push
mov
ss
in
mov
sub
jl
fdivrl
xchg
xor
data16
cli
adc
push
push
rcl
stos
and
and
fists
push
sbb
mov
cmp
ja
sub
js
mov
lea
jne
outsb
cltd
popfw
xor
leave
push
adc
push
or
and
int3
mov
dec
mov
dec
mov
inc
sub
sub
repz
pop
sbb
sbbb
jnp
jge
lods
adc
inc
cwtl
ds
repnz
sub
movsb
sub
jmp
js
dec
sub
pop
scas
cltd
hlt
fwait
xchg
jg
pop
jbe
mov
fimuls
pop
les
out
call
imul
sbb
lahf
push
push
repz
xlat
pop
out
popf
gs
xor
or
scas
rcrl
mov
mov
mov
lds
push
or
xor
sbb
jecxz
and
fnstsw
bound
cmp
call
sbb
stc
push
pushf
inc
jbe
and
inc
or
adc
subl
daa
push
cmp
cmpsl
mov
flds
loope
jmp
jb
pop
mov
mov
stos
es
xor
ljmp
inc
ret
mov
cmp
xor
sub
dec
xorb
lock
aas
sub
mov
or
adc
das
out
sbb
push
jp
push
je
sub
mov
in
or
push
sbb
les
lods
sbb
enter
jb
leave
faddl
cmp
dec
popa
push
ljmp
rorb
xchg
int3
xor
repnz
mov
add
add
shll
cld
lds
xchg
xor
call
mov
leave
jg
inc
cltd
xor
pop
ds
aaa
iret
loopne
jb
call
sbb
mov
dec
sahf
sub
dec
setge
daa
fdiv
xlat
sbb
and
push
cmp
push
cmpsb
fs
cld
jbe,pt
les
jmp
outsl
aaa
lea
insb
inc
scas
cmpb
ja
push
mov
xor
stos
inc
push
test
mov
in
push
iret
int
rsm
xor
mov
ret
js
xchg
je
shll
adcl
lods
rcr
pushf
sar
mov
fmull
int
mov
test
call
or
mov
jb
out
lods
and
jg
das
icebp
fisubrs
rorb
leave
nop
lea
scas
ja
sarb
mov
adc
xorb
cmp
or
and
adc
icebp
mov
in
jnp
pop
lods
push
shl
daa
pop
rcl
movsl
imul
add
push
mov
scas
and
inc
sbb
inc
sbb
out
cmc
test
adc
and
xor
mov
adc
jmp
mov
pusha
popa
icebp
xor
jge
cmc
xchg
push
or
arpl
fwait
xor
in
push
mov
sbb
pop
add
scas
mov
gs
xchg
sbb
push
inc
fisubs
cli
scas
xor
mov
push
stos
sbb
pop
or
outsb
pop
add
jp
fwait
imul
mov
dec
imul
adc
fwait
mov
dec
mov
hlt
ljmp
mov
mov
push
push
pop
xchg
mov
pop
push
cmp
xor
out
mov
inc
in
pop
stos
fwait
out
out
dec
or
cmp
stos
sti
fmull
inc
lret
jno
movsl
jb
mov
out
std
out
sub
cli
cmp
cmp
or
cmc
rclb
movsb
in
cmp
pop
scas
in
mov
xor
fisubrl
sbb
fs
cmpsl
mull
mov
outsb
js
pop
pop
popa
jae
in
dec
ficomps
repz
in
cmp
outsb
push
push
inc
shlb
or
sbb
mov
test
stos
lret
or
mov
push
mov
xchg
lcall
add
mov
dec
add
ljmp
xor
loopne
mov
inc
dec
sub
gs
outsl
or
ss
out
and
pop
or
lret
sub
imul
movsl
xchg
and
pop
nop
pop
stc
xor
fstpt
jns
push
pand
sub
sahf
mov
xor
pop
fwait
pop
fidivs
jecxz
fsubl
adc
ja
adc
pop
lcall
sub
or
adc
pop
dec
leave
out
mov
out
lock
push
int3
or
cmp
cwtl
and
jmp
cmp
sub
repnz
mov
or
ret
arpl
hlt
sbb
in
inc
ret
push
jno
daa
mov
adc
add
lods
pushf
insl
int
xlat
jl
mov
clc
xchg
inc
mov
stc
jne
or
repz
sbb
cmp
ret
xor
es
xor
xchg
push
int3
pop
cs
inc
xchg
cli
lods
lahf
mov
cmp
mov
fisttps
fldenv
out
in
jp
lret
dec
pop
hlt
std
inc
cwtl
outsb
xor
mov
ss
lret
mov
in
call
add
aas
xor
loop
or
xchg
out
arpl
mov
repz
rcrb
xor
and
pop
pushf
test
gs
vcvtsd2si
imul
add
jo
adc
cmpsl
sbb
dec
pusha
and
xor
mov
arpl
xchg
pushf
test
stos
les
sbb
pop
or
call
pop
aam
decl
push
lea
jl
mov
movsl
in
scas
imul
aaa
pop
push
cmp
sub
sub
adc
pushf
sub
mov
fucomi
push
cmp
push
dec
movsb
mov
mov
and
iret
and
and
pop
cld
icebp
xchg
jg
push
and
cmp
es
ret
movaps
or
sbb
push
les
in
pop
pusha
dec
mov
xlat
cmpsb
sbb
mov
shl
add
outsl
pop
in
and
pop
xchg
add
mov
repnz
fucom
push
add
test
jecxz
cli
push
jo
ds
mov
loop
jecxz
popa
sbb
insb
lahf
jecxz
lahf
mov
imul
xlat
es
add
fldt
decl
inc
xor
mov
pop
xor
sbb
xor
popa
dec
rcrl
jge
in
mov
fistpll
xor
inc
cli
sti
cltd
sbb
inc
shrl
pusha
cmp
popf
add
imul
aam
inc
and
dec
jns
xchg
out
out
gs
xchg
clc
push
cs
ljmp
mov
imul
lahf
fcmovu
inc
inc
jnp
sbb
xor
ja
scas
and
cwtl
cs
popf
mov
push
repz
mov
std
xchg
xchg
sbb
sub
nop
pcmpgtb
add
pop
arpl
jmp
enter
adc
xchg
sub
in
mov
out
sarb
fdivrl
xchg
mov
loopne
insl
xchg
fistpl
mov
or
mov
mov
xor
sbbb
or
push
sbb
into
out
lds
pop
pop
mov
pop
stos
aas
mov
adc
push
inc
ja
add
test
sti
lahf
or
sahf
stos
imul
sbb
repnz
scas
xchg
sbb
js
ret
gs
sub
sti
push
fmul
popa
loop
pop
ja
jae
inc
or
enter
outsl
dec
ss
pushf
jo
adc
sti
ss
mov
into
adc
cmp
cmp
stc
mov
inc
stc
out
or
push
out
sub
sub
inc
xor
xor
xchg
ljmp
mov
inc
and
mov
aas
enter
mov
lods
adcl
sub
dec
adc
sbb
pop
ss
sub
cpuid
pop
iret
aaa
or
sub
cmpb
dec
sub
fistpl
divl
sub
adc
xor
jp
push
mov
inc
sbb
xchg
nop
or
addl
clc
cld
inc
mov
in
pusha
pop
js
cmpb
lock
xor
aad
sbb
inc
sbb
cmpl
sub
aam
loope
jne
push
lahf
xorb
mov
cmpl
jge
cmpsl
add
cmp
jns
jno
sub
sahf
and
aas
ret
dec
xchg
mov
pop
sbb
pop
inc
and
mov
jle
push
imul
popf
cmc
push
and
xlat
test
fld
leave
dec
mov
js
into
pop
sub
mov
mov
fsubs
clc
mov
pop
mov
ret
pop
or
sub
dec
imul
sbb
sbb
mov
sbb
mov
sub
cmp
ja
sbb
cs
and
xor
fmul
cmp
push
int
jg
dec
popa
push
xchg
pop
xor
xor
add
in
adc
pop
lret
mov
cmp
pop
in
push
inc
fisttps
mov
sbb
cld
inc
mov
jle
fwait
pop
js
mov
out
loope
sbb
mov
mov
and
xor
stos
scas
mov
std
daa
lahf
xchg
and
roll
daa
mov
fsubl
xor
jp
ljmp
faddl
lcall
mov
cs
lcall
xchg
or
adc
push
push
pop
stc
mov
loop
cmp
int3
lcall
xor
push
add
inc
mov
lret
pushl
shlb
mov
mov
mov
dec
cs
fiadds
mov
movsb
push
and
aaa
out
jnp
cmp
movsb
sub
cmp
push
stos
dec
testb
loope
cmpsl
rclb
insb
ss
push
xor
aas
push
fcomp
addl
stos
inc
inc
sbb
dec
sub
out
lret
test
push
test
cmp
xchg
loope
clc
add
pop
adc
js
testb
pushf
cltd
data16
xchg
cmp
mov
out
cmp
stos
aam
push
push
imul
mov
data16
push
ds
jg
je
gs
fldl
sbb
dec
repnz
sub
mov
lret
jmp
mov
shl
sub
test
lods
add
loope
leave
shlb
pop
in
cli
mov
aas
les
not
and
insb
mov
aam
jnp
imul
ficompl
xlat
scas
mov
mov
push
push
out
aam
or
push
jbe
xlat
inc
int
or
sarl
testl
sub
enter
mov
fdivr
out
cmpsb
mov
aaa
cmpsl
xor
out
ficoms
cmp
cwtl
pop
xor
rclb
ret
add
push
sub
outsb
iret
cmpxchg
or
mov
mov
push
fistpll
sti
lods
push
pop
aad
mov
cmp
clc
or
js
aaa
inc
xor
mov
dec
jb,pt
icebp
in
in
push
stc
addr16
sub
xchg
out
xor
pop
pop
fidivl
lcall
sbb
aaa
jnp
sbb
les
inc
ret
mov
add
fstp
cmp
mov
pop
popa
bound
inc
xor
popf
mov
pop
adc
add
jo
mov
mov
jae
inc
stos
sar
add
add
sub
lock
lds
scas
inc
inc
adc
in
xor
adc
mov
aam
stos
mov
ret
mov
out
push
outsl
int3
inc
int
imul
out
jge
sub
pop
aaa
clc
outsb
xchg
sub
int3
or
fmuls
ds
aas
add
out
filds
or
fcompl
push
out
jmp
pusha
mov
xlat
cld
stc
fsubl
push
mov
pop
into
jg
adc
mov
jecxz
cmp
test
jge
push
inc
add
xchg
push
and
jl
pop
mov
sub
xor
jl
mov
rolb
pop
lcall
pushf
mov
cli
mov
leave
scas
xor
cmp
push
dec
movsl
in
into
dec
jl
repz
sub
dec
insb
mov
testl
mov
scas
aam
mov
cmp
xchg
insl
cmp
ficomps
sub
das
mov
push
sbb
lock
adc
jl
inc
fs
mov
add
int3
cmp
ret
add
imul
mov
popa
lcall
mov
call
xchg
outsl
test
std
stc
fdivs
push
jae
pop
insl
push
loopne
movsl
or
fisubrs
push
pop
fdivl
imul
and
incb
xor
popf
jbe
out
das
test
ficoml
mov
es
in
iret
sub
push
ret
xchg
mov
outsb
cmp
imul
in
xor
hlt
or
jnp
ds
inc
adc
in
fs
mov
mov
mov
add
loope
cmc
subl
lret
ss
std
aaa
js
test
pop
in
insb
jnp
jle
stos
jbe
mov
adc
lret
xor
popf
enter
add
dec
cmp
js
arpl
and
or
aam
les
jecxz
mov
xchg
divb
sbb
adc
dec
nop
int3
pop
iret
sub
out
mov
shrb
mov
pop
int3
sbb
adc
cmc
mov
jg
pusha
pop
sub
mov
inc
roll
insl
xchg
loope
mov
or
movsb
jbe
test
fincstp
ds
sti
cmp
xchg
pop
push
inc
out
sub
in
jae
je
mov
xchg
dec
fwait
leave
outsb
push
fwait
and
lock
call
jae
mov
mov
dec
push
insl
sahf
out
lods
lock
adc
sub
popf
ds
sub
shlb
add
pop
fsubrp
hlt
cmp
push
mov
mov
adc
pop
in
mov
cld
fldl
jg
stos
pop
cmovge
ds
outsb
inc
pop
and
in
mov
cld
imul
xchg
push
xor
flds
mov
aaa
jecxz
mov
insb
or
mov
jo
push
aam
je
adc
je
outsl
pop
mov
or
mov
pop
in
mov
cs
js
loopne
inc
iret
cmpsl
or
pushf
adc
pop
xchg
in
lods
mov
push
jge
in
jmp
ffree
rcrb
enter
pop
xor
daa
sbb
jmp
ja
test
daa
cmpsl
pop
sbb
call
adc
test
mov
push
sysexit
adc
jg
repnz
out
jl
xor
dec
fldl
and
insl
mov
and
and
not
js
push
jno
out
shrb
pop
fdivrs
leave
inc
lods
js
lods
popa
and
mov
pop
mov
mov
dec
fisttpll
xchg
jo
pusha
cmc
push
movsb
dec
inc
test
mov
push
scas
inc
cmpsl
aam
pop
push
pop
lds
mov
into
stc
pop
pop
lds
repnz
add
push
push
adc
and
and
adc
add
cmp
inc
in
loope
push
jno
jl
lods
cs
push
and
enter
insb
jl
push
inc
test
lret
sarb
jo
and
fidivs
pusha
testb
push
xor
les
mov
imul
dec
fimuls
add
out
mov
xchg
lahf
xchg
xor
xchg
les
xchg
push
imul
sub
int3
lds
jl
jnp
pop
dec
and
int
fs
test
or
es
mov
add
addb
cmpsb
mov
dec
add
call
vshufps
mov
inc
xchg
push
sub
dec
pop
push
dec
mov
loopne
push
stc
popa
in
cmp
orb
into
mov
ret
jb
in
shr
fwait
pop
daa
fcomp
and
inc
adc
adc
xor
sti
dec
jge
cltd
loop
mov
pop
push
jp
dec
jne
xor
leave
test
push
sbb
xchg
in
xchg
fldenv
imul
xlat
xor
clc
mov
and
fwait
inc
and
stc
repz
sbb
aam
inc
fcomp
dec
add
cmp
popa
fists
mov
pusha
mov
lods
shlb
aad
stos
pop
push
rcr
xor
out
ljmp
jns
pushf
daa
and
mov
ss
add
xor
or
testl
adc
add
popf
pop
popf
lahf
push
dec
or
push
dec
inc
movsb
pop
call
dec
xor
fstl
push
pop
in
test
sub
sbb
cmpsl
jge
jbe
cmp
or
idivl
iret
dec
stos
daa
mov
js
or
test
pop
adc
lret
jnp
inc
repnz
or
sub
movsl
mov
inc
xchg
pop
inc
out
daa
xor
nop
stos
imul
or
mov
bound
or
ljmp
xor
ret
ret
lods
mov
xchg
sbb
or
mov
out
int
mov
or
push
mov
in
jmp
data16
out
fs
loope
popa
mov
inc
and
lea
dec
int
jge
cmc
xchg
aad
dec
xchg
mov
call
movsb
inc
or
decb
aaa
xchg
mov
inc
jmp
scas
add
andl
cmp
orl
adc
mov
add
lcall
push
mov
cmp
rcl
sbb
cmp
out
icebp
and
xchg
push
and
and
dec
mov
hlt
rclb
lret
lret
pop
or
lret
pop
lods
out
mov
cli
add
dec
xlat
test
adc
pop
mov
rdpmc
pop
sub
pop
lds
pop
mov
stc
and
mov
jb
pop
call
lock
insl
pushf
mov
enter
idiv
sub
pop
xchg
fs
xor
aaa
cmc
add
ds
xor
lds
fstl
xchg
inc
xchg
fistpl
or
or
dec
mov
in
sub
pop
in
cpuid
pop
adc
sub
loop
nop
or
mov
push
mov
jbe
call
sti
cld
jo
ficoms
lcall
dec
popf
jge
int3
pop
sbbb
xchg
rclb
mov
cmp
int
test
pop
lds
sbb
inc
int3
cmp
xor
cmp
add
sbb
fists
movsl
push
sti
and
andb
push
cmp
lcall
jecxz
ss
xchg
push
faddl
mov
add
popa
aaa
lods
jb
xlat
dec
dec
adc
cli
cltd
fwait
aam
cmp
push
xor
pusha
sbb
push
jbe
adc
stos
psrlw
dec
xor
sbb
les
cmp
lahf
xchg
aam
repnz
das
iret
pop
cmp
cmpsl
and
jne
and
sub
nop
inc
loope
insb
sbb
stos
addr16
int3
mov
mov
jl
shrb
iret
dec
mov
jns
fisttpll
in
cmp
rolb
pop
jp
mov
mov
adc
iret
xchg
std
cmpsl
outsb
cmpl
lret
insl
fcmovbe
movsb
xor
shrb
dec
push
xchg
ficoml
ret
mov
scas
jno
js
pop
lret
daa
ret
sti
mov
xor
mov
retw
ja
push
mov
aaa
lea
jp
sahf
jb
cmp
ss
pop
push
ss
mov
and
cmpsl
outsb
imul
sbb
roll
inc
jecxz
push
jb
mov
push
jnp
cmpsl
rcrb
cld
hlt
lea
push
jle
enter
clc
repz
push
sbb
out
pop
pusha
xchg
scas
ret
dec
in
mov
div
dec
leave
jno
jecxz
inc
js
cs
adc
jo
jge
lcall
shrb
mov
jae
cmc
popa
add
lods
sbb
outsb
or
adc
inc
loopne
pop
cmp
dec
in
add
icebp
pop
mov
dec
inc
les
mov
fwait
mov
movsl
mov
stos
lods
push
lock
pop
or
repz
add
es
leave
js
lahf
xor
add
xchg
hlt
mov
fadds
lods
inc
test
add
mul
and
and
inc
int
mov
flds
push
cmp
push
sub
pop
scas
out
pusha
push
lret
stos
xor
mov
jae
sbb
mov
and
xor
iret
push
add
push
aam
iret
sahf
mov
repnz
notl
xchg
mov
lahf
adc
jae
sbb
jle
mov
imul
sahf
or
inc
xchg
adc
push
leave
xor
add
and
ret
aaa
xchg
sti
repz
out
mov
mov
pop
adc
ljmp
addl
cwtl
xchg
js
ja
test
pop
or
xor
xchg
lret
inc
cmpsl
and
adc
int3
xchg
lods
cwtl
aas
and
ljmp
push
inc
scas
jae
std
hlt
cmc
outsb
aam
xchg
jl
sub
mov
jb
jp,pt
push
mov
pushf
inc
aas
jno
lock
xchg
lods
loop
addb
cmp
icebp
adc
addl
jmp
push
jno
es
jp
jnp
jg
sbb
inc
andl
faddl
xor
xor
or
js
flds
inc
and
nop
pop
xabort
jmp
test
rcrl
jbe
imul
cli
cmc
ficoms
fdivrs
cmp
repz
and
and
decb
in
mov
add
inc
lret
lea
inc
pop
push
in
sub
push
fld
mov
mov
ja
mov
pop
loop
and
sub
pop
jno
cld
inc
lcall
ret
lahf
test
push
mov
outsl
mov
or
mov
pop
or
mov
cmp
clc
push
push
fsub
mov
cmpsl
mov
push
lods
outsl
mov
out
sub
adc
bnd
loopne
fcoms
pop
inc
imul
loop
mov
cmp
cmp
fcmovnu
fstps
mov
leave
fistpll
out
popf
jle
leave
aad
and
test
sarb
stc
xchg
lds
int3
push
mov
jae
pop
mov
sbb
pusha
xor
sbb
fldenv
imul
push
inc
xor
in
imul
mov
jae
adc
inc
cli
mov
jb
cmp
and
cmp
stc
insb
sub
aam
push
lea
lret
out
ret
pop
les
sbb
mov
outsb
test
or
jnp
fcmovb
dec
mov
into
cmp
fistl
cmp
mov
in
imul
das
xchg
stos
addl
icebp
dec
xorl
xchg
xor
inc
xchg
je
jg
pop
mov
mov
sbb
cmp
push
shl
movsl
pushf
fcos
cmc
pusha
xor
out
dec
pop
cwtl
test
pop
lahf
cmp
mov
loopne
push
xor
call
in
cmp
mov
sbb
sub
xor
push
mov
enter
and
cwtl
jmp
push
int
mov
test
or
add
sahf
popa
jl
pop
clc
aam
ja
adc
sub
mov
lcall
and
or
jno
mov
or
fiadds
in
push
mov
bound
ret
imul
fistpll
inc
xor
sub
imul
adc
addl
into
mov
pop
mov
jae
or
mov
jb
rcll
pop
outsb
roll
and
mov
ds
sub
pop
and
enter
call
out
std
outsl
and
and
dec
das
pop
mov
data16
jle
lds
lods
cli
mov
pusha
ds
mov
mov
lods
cli
push
sub
es
scas
pop
xchg
fisubrl
mov
dec
mov
lods
pop
mov
dec
ficoml
pop
inc
add
movsl
pop
sbb
in
jl
insb
inc
xchg
stos
fisubl
push
icebp
pop
inc
fldt
ret
repz
jo,pt
in
pushf
cli
lahf
mov
je
add
mov
pop
es
and
jo
mov
nop
mov
cmp
test
inc
sub
cmc
cmp
sahf
mov
mov
in
fimull
lret
scas
jecxz
mov
or
inc
sahf
mov
or
fstl
ret
rorb
push
push
mov
pusha
sub
das
or
xchg
outsl
fnclex
lahf
mov
insl
adc
lret
mov
sub
xor
or
xchg
aam
lods
or
loope
adc
pop
insl
mov
jg
int3
out
lcall
pusha
scas
pop
testb
add
add
push
ja
in
pop
and
adc
push
out
xlat
jg
inc
stos
mov
xor
mov
hlt
rorl
add
lret
leave
jge
out
push
int
inc
or
aaa
and
xorb
jno
mov
jl
popf
push
arpl
or
inc
leave
ror
sbb
mov
push
js
addl
rcll
add
fistpll
aad
mov
cmpsl
enter
inc
xchg
dec
mov
pop
mov
into
popa
iret
push
sbb
pop
pop
jl
or
scas
pop
in
cltd
arpl
and
faddl
pop
add
xchg
arpl
jne
mov
add
fwait
push
in
mov
jp
pusha
ds
loope
adc
lods
jp
cld
push
idivl
add
jle
icebp
xchg
sub
xchg
mov
fisubrs
lret
pusha
and
sub
jl
or
xchg
cmp
jbe
subb
test
inc
xor
pop
insb
xchg
shl
sbb
movsl
popf
popa
jge
test
pop
into
mov
cs
dec
pop
subb
jmp
insl
rcrb
rorb
insl
movsb
into
cmp
loop
nop
adc
stos
fs
sbb
add
and
popaw
mov
ret
adc
xorb
pop
add
icebp
insl
mov
mov
les
or
stos
xlat
adc
icebp
out
adc
ja
in
sarl
mov
xchg
jnp
iret
and
cwtl
lock
std
ret
sbb
sub
xor
andb
xchg
push
leave
pop
or
xor
dec
pop
mov
fwait
adc
aas
imul
or
push
jno
mov
test
ja
sbb
test
sbb
jge
xchg
sub
mov
out
adcl
mov
dec
lods
push
test
push
pop
and
iret
cmc
jg
movsb
cs
pop
insl
or
sbb
xor
mov
push
pop
das
pop
fsubr
xor
movsb
and
adc
xchg
lret
adc
adc
fisubrs
roll
daa
cmpl
add
mov
dec
leave
sbb
test
adcl
jns
cmp
in
stos
imul
nop
out
insl
push
or
in
insb
sub
les
lret
and
mov
dec
popa
sub
shll
lds
cmp
pop
dec
or
stos
outsl
and
test
cs
mov
sub
data16
bound
fadds
out
jg
push
sbb
mov
je
sti
iret
pusha
fisubrs
add
mov
aaa
xor
sub
int
lahf
loopne
js
popa
xor
xchg
lcall
out
in
inc
sub
lods
dec
jmp
enter
mov
jne
lods
mov
push
mov
mov
clc
aaa
push
lret
add
add
fmul
leave
dec
jno
cmp
aaa
mov
dec
je
sar
push
fwait
jbe
das
scas
pop
push
cmpsb
mov
xchg
pop
aad
sahf
aad
cmp
leave
lcall
aam
sti
xor
cmp
loope
jnp
lea
pop
sahf
test
xor
data16
mov
jle
hlt
in
outsb
lds
push
stos
xor
ss
inc
addr16
push
fcomps
or
cltd
jecxz
push
stos
cmovg
jne
into
pop
mov
add
sahf
add
jne
cs
ffree
xor
cltd
mov
daa
xchg
ret
lods
imul
push
xor
fadd
inc
andl
and
jb
push
sbb
lock
aaa
mov
test
repz
int
xchg
sbb
mov
pop
adc
cmp
lahf
in
call
loopne
stos
loopne
cltd
stos
xchg
arpl
aam
sub
pop
push
push
icebp
xchg
insl
mov
pop
orb
dec
movsl
popa
pushf
adc
mov
std
scas
popf
jecxz
clc
shlb
lar
movsb
mov
lds
xor
int3
cmp
sbb
repnz
movsb
dec
inc
insb
movsb
divl
adc
xor
popa
cmc
push
pop
jns
or
outsb
stc
sahf
jo
pop
xor
test
test
jo
inc
push
adc
iret
and
negl
push
xchg
adc
ds
outsl
es
adc
iret
add
test
dec
jnp
inc
jb
pop
dec
je
sub
lock
push
ret
std
rcll
imul
lcall
or
filds
imul
xor
mov
imull
in
dec
hlt
cmp
pop
mov
push
mov
dec
aas
cmovbe
movl
xor
xor
push
push
in
movb
mov
push
sbb
dec
add
divl
pusha
pushf
push
jmp
xchg
ret
push
fisubrl
lods
dec
dec
cmp
cs
xchg
xor
sahf
mov
rorl
add
cmp
sti
into
jl
sbb
lods
push
mov
xor
icebp
jle
mov
div
sub
inc
xchg
aad
fwait
cmp
sbb
std
mov
mov
lahf
sbb
cmp
hlt
add
or
cs
push
inc
sarb
inc
decb
cs
lods
arpl
add
inc
outsl
scas
test
movsb
sbb
jge
mov
movsl
ffree
in
decb
push
loopne
xchg
xchg
lock
shl
xchg
daa
xchg
mul
loope
mov
add
xorb
cmpsl
hlt
mov
xor
les
dec
into
mov
push
sbb
adc
jne
dec
movsl
cmpsb
jmp
iret
mov
aad
cltd
arpl
jbe
test
inc
add
cltd
cli
scas
cmp
out
js
scas
aaa
push
sti
adc
mov
mov
cld
push
lahf
add
ss
xchg
xchg
fwait
adc
stos
fidivrl
push
push
and
and
pop
lea
mov
and
lcall
push
cmpl
xchg
xor
arpl
cmpb
in
jbe
mov
adc
cmp
lret
push
aaa
shlb
inc
shll
dec
push
push
push
add
push
jecxz
add
inc
add
pop
inc
dec
into
adc
lods
arpl
loop
fistps
fwait
xchg
xor
push
pop
push
fmull
out
subb
cmc
popf
pusha
stos
les
int
xchg
addl
dec
xchg
jbe
lods
push
hlt
jmp
in
sahf
lock
jae
jmp
mov
mov
mov
xor
fdiv
insb
push
push
ret
push
push
fs
mov
jae
in
daa
or
xchg
pop
fucom
orl
jae
jecxz
mov
sti
and
mov
mov
das
xchg
push
sub
imul
lods
mov
insl
add
jg
jae
addr16
mov
xchg
adc
sbb
js
dec
shlb
mov
push
inc
test
cltd
or
add
test
xchg
cld
lcall
cmp
cmp
into
negb
lcall
in
loope
loope
jno
dec
call
mov
dec
push
pushf
cmc
out
hlt
rol
push
pushf
jbe
lret
into
adc
andl
movsl
lea
stos
push
lds
pop
in
das
xor
test
add
xchg
xor
nop
sub
mov
callw
jle
sub
ss
icebp
mov
mov
sbb
cs
sbb
jb
mov
outsb
xor
imul
cmp
fcomi
or
sbb
rolb
dec
cmp
outsl
pop
mov
int
mov
int3
ss
fisttpl
or
fiaddl
lret
mov
xchg
sarl
jae
andnps
or
les
dec
out
scas
into
and
cmp
mov
add
xor
fldl
lds
push
js
push
testl
pop
dec
cwtl
dec
jae
icebp
xor
test
shll
jge
fistl
scas
rcll
in
xchg
movsb
iret
xchg
sbb
mov
mov
scas
cmp
cmp
mov
cli
mov
cmp
out
in
adc
aam
mov
and
mov
sub
stos
out
add
aaa
push
xchg
add
sub
push
sub
xchg
jbe
xchg
mov
mov
sub
arpl
loop
pop
jecxz
inc
lea
mov
addr16
pop
loopew
xor
leave
fldt
xor
and
ret
or
jge
adc
mov
sub
inc
dec
push
test
lret
subb
fs
push
push
pop
std
pop
inc
add
stos
test
mov
sbb
addr16
pop
gs
adc
xor
mov
push
aas
adc
push
decb
push
add
sub
roll
hlt
mov
jbe
insb
in
fwait
add
adc
jge
jge
test
sbb
adc
xchg
xor
mov
xchg
fisttpl
mov
out
and
popa
cmp
repz
shlb
xchg
jbe
add
int
push
sbb
out
mov
sub
push
stos
enter
js
imul
sbb
jbe
imul
inc
data16
je
sti
sub
mov
daa
push
jecxz
adc
mov
sub
push
arpl
das
inc
sub
ret
aaa
inc
clc
mov
or
sbb
adc
std
arpl
dec
mov
push
pop
insb
or
into
pop
push
push
fildl
inc
xchg
cltd
dec
out
nop
jns
and
ljmp
push
fisttpl
enter
mov
lret
jmp
xor
sahf
pusha
mov
cmc
sahf
popa
jne
jo
mov
fabs
mov
mov
cs
hlt
mov
xchg
out
mov
push
mov
sti
std
push
push
mov
add
imul
jecxz
xlat
fmull
lods
pop
jno
fbld
sub
push
mov
push
dec
nop
push
adcl
adc
push
xor
adc
std
push
jne
sbb
lods
cmp
aam
int3
add
adc
push
push
jae
in
cmpsb
jl,pn
inc
push
stos
xchg
test
inc
adc
movsl
pop
jmp
imul
in
mov
push
iret
ror
fwait
sub
ret
imul
or
fwait
xor
mov
mov
pop
es
mov
pop
sub
jb
xlat
jmp
mov
stos
out
ja
mov
and
les
int3
push
cmp
das
cmp
mov
mov
xchg
xor
fidivrs
pusha
fwait
push
aam
test
cmp
js
out
leave
movsb
jo
inc
shll
mov
dec
mov
adc
mov
cmpsl
and
mov
daa
push
enter
sahf
lret
pop
sbb
push
pop
inc
fs
fs
gs
jge
scas
xor
cmp
jmp
cli
sti
push
or
clc
push
stc
fldl2e
pop
fnstcw
sbb
mov
mov
ficomps
xchg
mov
mov
out
stc
xchg
call
cmp
cmp
enter
mov
andl
inc
mov
and
or
jle
push
push
xchg
jl
ja
es
pop
mov
inc
jno
repz
lret
inc
into
lcall
mov
mov
insb
test
daa
in
repz
sarl
xor
dec
call
daa
inc
mov
int
and
adc
jns
cld
scas
or
je
mov
jp
das
mov
xor
fisubs
push
inc
mov
and
inc
in
push
jb
inc
add
shlb
mov
sub
dec
std
insl
sub
cs
mov
sub
adc
aad
mov
mov
fucomi
fcomi
and
or
mov
nop
xor
mov
sti
and
cmp
jle
shrb
inc
mov
and
mov
out
push
lret
js
les
sbb
shrl
mov
scas
test
pop
or
add
roll
add
mov
xor
iret
add
lea
pusha
inc
pop
pop
xchg
icebp
jae
shrb
rorl
addl
push
mov
or
sbb
sbb
int
insl
or
inc
mov
pushf
adc
daa
push
and
gs
xor
loope
out
out
ss
pop
fcomi
inc
lahf
or
aam
jmp
jle
in
mov
push
repz
push
jp
lcall
rolb
je
imul
insb
fisubl
jmp
popa
pop
stos
call
icebp
neg
sub
in
pop
gs
cwtl
adc
fdivrs
and
push
lcall
mov
cltd
pop
pop
dec
jo
bound
shrl
xor
fistpll
add
imul
xchg
push
bound
test
or
push
in
ss
push
sbb
xchg
daa
in
in
ljmp
mov
jo
insb
pop
into
push
jb
sub
decb
imul
mov
push
mov
cltd
pusha
xchg
sbb
mov
xlat
or
cmpsl
push
adc
cmpl
pop
aaa
movsb
mov
les
das
inc
outsl
ljmp
inc
and
adc
cmpsb
adc
test
es
lods
add
pop
xor
push
cs
inc
add
jnp
pop
cmpsl
loop
mov
lret
insb
sarb
adc
xchg
loop
clc
testb
out
adc
push
rcrl
nop
fdivrp
xor
jbe
int3
push
lods
pop
fimull
inc
inc
ljmp
add
sbb
pop
movb
fwait
add
stos
lret
xor
cmc
fistl
sub
insb
sub
xor
pop
or
ljmp
lret
pop
dec
mov
call
push
xor
cmp
push
sub
loop
inc
fcoml
push
jg
leave
xlat
in
or
pop
outsl
dec
idivb
mov
push
or
adc
fmulp
int
fcmovb
mov
push
xchg
lcall
pop
inc
cmp
sub
icebp
push
or
jnp
roll
pop
idiv
lcall
scas
lods
movsl
xchg
int3
jmp
push
int3
out
movsb
mov
movsb
mov
xor
addr16
stos
mov
popf
jecxz
cli
sarl
leave
adc
and
and
aam
push
sbb
cs
mov
pusha
pop
dec
add
repz
fistpll
into
lods
sbb
and
aad
in
fistl
fcoms
test
cmp
in
xchg
aad
notb
negb
movsl
adc
cmp
ror
fldl
or
int
inc
cltd
adc
push
mov
stos
dec
icebp
jg
inc
jns
adc
xchg
popa
pushf
and
mov
mov
jle
and
mov
and
dec
dec
das
daa
repz
out
sbb
stos
lahf
cli
sbb
inc
popa
push
icebp
or
adc
cmpsl
lret
pop
nop
hlt
mov
add
es
jge
cmpsb
jbe
sti
out
lret
cmpsb
inc
add
mov
mov
push
jnp
mov
test
pop
out
push
loope
sbb
sbb
or
cs
and
hlt
xor
cltd
movsl
or
lcall
or
sbb
push
mov
push
and
out
dec
dec
data16
cmp
notl
aad
jo
jae
push
dec
mov
mov
adc
push
push
mov
push
or
inc
out
push
add
lret
enter
add
fistps
inc
enter
xlat
dec
mov
xor
jge
ljmp
mov
dec
xchg
fisubs
jnp
pop
jb
outsl
dec
idivb
call
adc
jl
jno
enter
sarl
xchg
outsb
jecxz
sub
xor
adc
out
cmp
sbb
movsl
repz
xor
loopne
movb
in
cmp
popa
inc
popa
jns
test
mov
out
lds
imul
sbb
out
pop
cmp
cmpl
adc
cwtl
clc
mov
lret
push
inc
pop
leave
jnp
outsb
cmp
mull
sbb
adc
mov
and
cmp
pop
adc
sbb
mov
xor
xlat
mov
aad
cltd
fcomps
or
sub
repz
mov
loopne
sub
loope
xchg
and
mov
adc
jl
call
in
push
dec
cmc
movsb
dec
rcr
adc
js
sbb
testb
inc
lret
cmc
jnp
orl
loopne
cmpsl
cmp
add
lds
aas
ret
pop
cmp
ljmp
inc
pop
adc
mov
fcompl
push
pop
adc
push
pop
fadds
ss
inc
in
sub
sub
push
movsb
dec
jno
xor
cwtl
add
mov
mov
mov
cltd
popa
std
ret
inc
adc
repnz
xor
sub
pop
sbb
into
ds
int
jns
xchg
mov
mov
ja
hlt
push
adcb
mov
adc
test
js
popf
xchg
mov
cmpsb
pushf
cmp
addr16
ficompl
subb
ja
jb
xor
dec
imul
or
hlt
jno
jo
lcall
pop
ljmp
push
xchg
fistpll
test
and
adc
mov
lret
stc
push
push
dec
stc
sets
pop
pop
push
fildl
enter
mov
sbb
mov
fisttpll
or
stc
dec
scas
inc
add
mov
cmp
pop
loopne
or
jp
sahf
jno
xchg
mov
dec
push
push
and
loopne
iret
out
int
jae
outsb
test
leave
sbb
push
mov
dec
cmpsb
adc
xor
push
lret
hlt
pop
lock
loope
jbe
repnz
dec
dec
sbb
push
orb
fs
adc
cmpsb
movsl
lret
add
in
mov
andb
jp
adc
dec
and
popf
insl
lds
lods
in
inc
fisttps
out
bnd
push
cmp
rcll
test
add
test
dec
mov
lea
rclb
fldcw
fwait
or
mov
inc
fucomip
nop
pop
mov
jns
adc
push
mov
push
lcall
scas
inc
push
mov
lret
xchg
push
clc
sub
pop
and
aas
push
xlat
das
cld
pop
ja
adc
adc
cltd
cmp
inc
imul
fwait
aam
cmpsb
hlt
jns
leave
mov
add
adcb
adc
in
jne
xchg
mov
or
and
es
in
mov
ljmp
mov
orb
repnz
jo
test
test
cmp
pop
inc
fidivl
and
inc
or
sub
inc
push
jno
xor
push
imul
inc
jae
xchg
mov
outsl
push
aas
push
add
cli
les
xor
imul
cwtl
mov
aam
dec
push
sbb
jmp
sti
clc
or
fwait
sub
cltd
iret
fcmove
or
sub
sub
in
or
nop
lcall
sbb
mov
cmp
xchg
int3
stos
test
push
and
push
sbb
notl
xorb
loope
clc
or
rcrb
pop
sub
mov
in
imul
js
pop
fwait
jg
fsubrl
enter
insl
pop
jae
mov
shll
push
push
pop
and
lods
je
add
aam
mov
popa
jbe
pusha
jnp
push
sub
xchg
xchg
popf
inc
xor
leave
fisttps
or
xchg
popa
add
pop
ss
jnp
cmpsb
cld
and
mov
in
pop
adc
data16
cmp
ds
call
andl
nop
das
ja
add
mov
ss
push
inc
data16
adc
mov
jo
mov
adc
std
dec
call
sub
into
sub
ljmp
mov
or
xor
std
adc
pop
outsb
mov
dec
adc
fnstsw
or
jl
jns
sbb
or
mov
push
add
mov
dec
lea
outsl
jl
push
or
and
cs
adc
push
sbb
addr16
out
jmp
cmpl
fildl
pop
sub
lcall
fsub
popa
adc
mov
push
adc
xor
xchg
and
mov
push
orb
sahf
sbb
xchg
jno
pop
mov
dec
int
sub
nop
mov
xlat
jae
scas
cmpsl
adc
dec
fwait
sbb
xchg
call
push
je
fidivrl
fwait
clc
adc
xchg
or
cltd
insl
mov
cs
sub
test
sti
and
jg
push
mov
dec
ret
xchg
ss
sbb
test
cmpsl
sub
adc
outsb
test
mov
add
fsubs
inc
push
push
or
aas
adcb
mov
mov
add
cmpsl
fsubs
xchg
pop
inc
shlb
rcrb
popf
inc
addl
cmp
ret
fstps
in
vmovapd
inc
push
insb
jbe
pop
pop
fistpll
jo
call
aaa
cltd
mov
pop
inc
add
daa
insb
pop
and
imul
xchg
sub
into
inc
jle
notb
sbb
notl
dec
addl
push
test
and
aam
lret
and
sbb
icebp
cld
mov
push
dec
ret
inc
testb
insl
cmc
std
call
repz
test
sbb
out
xor
push
cmc
hlt
arpl
nop
mov
es
dec
pop
cmp
xchg
cmc
inc
fwait
shl
in
adc
lock
ja
sub
dec
pop
iret
xchg
add
icebp
dec
adc
cmp
sarb
cmp
lock
lret
cs
in
add
mov
and
inc
lds
leave
outsl
in
add
jecxz
add
ret
iret
punpckhdq
ret
stc
dec
ret
jmp
test
jno
jg
or
mov
insl
sbb
cmp
out
loope
adc
push
xchg
int3
fst
pusha
add
stos
movsb
pusha
es
or
and
lods
pop
pop
js
jmp
test
pushf
xchg
loope
out
xor
sub
xor
scas
fldcw
adc
add
and
mov
jo
sub
mov
int3
ret
aad
mov
int
sahf
mov
std
ljmp
dec
pusha
pop
and
icebp
push
mov
jg
inc
push
insb
cs
pop
out
es
push
push
int
movsb
ja
insl
in
ss
push
push
mov
add
cmp
inc
hlt
push
std
out
or
bound
sarb
scas
inc
insb
add
cmc
pop
mov
mov
test
inc
push
cmp
lds
icebp
and
xchg
gs
idiv
test
push
shll
test
pushf
dec
loop
test
xor
es
push
push
dec
cltd
mov
add
pusha
push
adc
jns
aas
pop
setno
popf
repnz
mov
sub
pop
jge
adc
call
cmpl
nop
dec
ret
cmp
popa
push
sub
repz
std
fisubl
mov
push
dec
xchg
dec
loopne
sbb
test
jne
negb
jne
cmp
data16
hlt
std
dec
out
and
adcb
cmp
add
add
dec
sub
sbb
into
scas
iret
jge
enter
shlb
inc
ss
inc
pop
nop
insl
dec
fisubrl
test
mov
out
push
jo
mov
push
in
dec
ret
jne
add
jecxz
sarl
pop
dec
lret
in
ret
shll
pushf
in
and
fidivrl
mov
xchg
cltd
loopne
xor
jge
popf
jmp
mov
and
xchg
notl
mov
sbb
mov
fisttps
std
adc
xchg
mov
mov
adc
mov
adc
push
push
aas
push
push
and
stos
pop
push
cmc
cmp
loop
push
dec
in
test
jg
cmp
popf
bound
mov
lea
dec
out
mov
and
popf
jne
es
cmp
xchg
jnp
jle
push
call
mov
push
pop
fiadds
add
leave
enter
lcall
mov
int3
jno
stos
jmp
fistps
add
xor
xchg
in
mov
add
xor
out
stos
mov
lahf
bound
js
lods
xchg
insb
adc
or
ret
or
lods
add
jnp
sub
xchg
jo
pusha
and
pop
push
mov
xchg
fxch
jns
push
dec
lock
mov
stos
jae
hlt
inc
fcomip
and
mov
mov
mov
jb
into
cmpl
cmpsl
out
cmpsl
jno
push
xchg
mov
popa
mov
stos
popf
imul
out
add
xlat
xchg
das
push
insb
add
dec
add
pop
pop
pop
cwtl
sbb
scas
cmp
sbb
pop
push
mov
xor
mov
jmp
xor
js
jp
fisttpll
mov
lret
fstl
adc
mov
stos
push
rolb
iret
das
cmp
sahf
in
nop
ds
sarb
jb
mov
leave
mov
mov
inc
mov
dec
cli
mov
sbb
xchg
xlat
push
xchg
jge
pop
fstl
dec
lock
xchg
dec
sahf
ror
xor
jae
stc
cltd
nop
inc
stos
aas
and
cmp
mov
bound
lret
jmp
mov
push
sub
sbb
ljmp
mov
mov
std
adc
jo
jnp
inc
mulb
mov
jnp
clc
lahf
xlat
xchg
dec
dec
adc
in
nop
aaa
fmull
fisttps
loop
jge
pop
lods
loop
sbb
in
add
rcrl
mov
sub
dec
mov
mov
add
rolb
scas
mov
orl
loope
sbb
mov
cmpb
push
leave
push
and
jg
rcll
lcall
insl
jns
ds
push
jecxz
leave
mov
aad
lods
sub
fnstcw
shll
or
test
push
fnsave
mov
pop
or
mov
mov
es
mov
sbb
je
xchg
loopne
icebp
cli
pushf
pop
dec
push
and
lret
and
and
mov
sub
fs
push
popf
test
out
push
push
aam
dec
insb
fistpll
inc
push
bound
fsubs
call
ret
pop
jno
jns
jo
stos
xchg
pop
je
or
iret
jge
pop
lcall
repnz
leave
aaa
add
leave
in
pop
and
ja
stos
inc
shll
test
ffree
insb
sbb
frstor
cmp
test
pop
cli
inc
loope
lret
cmp
sbb
lock
fwait
in
or
imul
adc
call
mov
and
sbb
int
xchg
stc
leave
xlat
push
inc
bound
mov
push
sbb
push
jnp
mov
xchg
adc
push
cmp
hlt
jbe
mov
mov
sub
add
addb
add
xor
outsb
xchg
imul
pop
add
jae
rcrl
movsl
xor
jo
inc
xchg
lds
jnp
scas
pop
imul
fs
mov
sub
mov
xchg
pop
jnp
adcb
xor
push
add
sub
push
mov
inc
hlt
add
icebp
icebp
cwtl
inc
movsl
gs
sbb
outsb
adc
les
pop
jecxz
lret
xchg
jo
aad
mov
pop
xchg
mov
and
aad
lret
lds
adc
sub
popf
and
leave
sbb
mov
fbld
adc
sub
loope
mov
or
and
cmpsl
push
movsb
loop
dec
adc
mov
sbb
pop
movsl
pop
cmpsb
mov
fs
xchg
sub
imul
mov
mov
push
push
push
sbb
imul
push
sbb
or
es
and
leave
inc
out
cwtl
mov
pop
mov
in
and
add
in
shll
adc
adcl
or
ret
pop
repz
sbb
fistps
notb
dec
leave
add
pop
cmp
inc
push
scas
subl
imul
in
xchg
push
sbbb
pushf
test
dec
xor
pusha
stos
add
scas
adc
push
into
out
imul
shl
xor
pop
mov
dec
pop
shrb
mov
cmp
cmp
pop
sub
mov
rcrl
adcl
fdivrs
lcall
xor
shrb
inc
adcb
jbe
std
push
xchg
fbstp
mov
aad
ror
adc
add
or
int
sub
aaa
popf
movsb
fistl
sbb
pop
test
test
push
push
cli
push
adc
fadd
add
sbb
mov
or
xor
inc
leave
aam
lahf
stos
leave
sub
dec
cli
push
sub
sahf
loop
std
dec
stc
int3
in
dec
orl
lea
jle
test
add
in
mov
xchg
stos
mov
jns
or
sbbl
cmp
dec
adc
dec
add
pushf
arpl
adc
push
clc
mov
in
pop
dec
aas
cmp
es
mov
in
outsl
inc
push
push
js
xor
inc
rcrl
cltd
clc
jle
sub
sbb
dec
push
sbb
mov
sbb
pop
fcomi
dec
imul
cld
pop
jmp
mov
movsl
mov
pop
stc
ret
fnstsw
mov
cld
sbb
sub
and
xchg
push
stos
pop
lahf
adc
mov
jb
stos
bound
jbe
pop
mov
js
sbb
lcall
fsts
push
pushf
movsb
negb
lahf
jmp
inc
jle
outsl
fidivrs
into
in
xor
pop
addr16
inc
pop
xchg
mov
cwtl
mov
or
sbb
mov
jg
arpl
stc
cmpsl
hlt
loop
dec
sub
fimull
or
mulb
dec
inc
pop
cs
xor
outsb
xchg
pop
out
repz
fldl2e
cltd
icebp
mov
sub
pusha
push
jl
push
xchg
pusha
mov
jge
add
out
fdiv
imul
into
popf
test
xchg
push
bnd
push
push
jb
out
shl
imul
push
sahf
scas
loop
cmpsl
mov
adc
mov
adc
xchg
adc
xchg
jns
jbe
js
mov
or
push
or
pusha
lods
in
or
mov
orb
and
nop
scas
movsl
lcall
imul
xlat
out
xchg
cmp
cs
clc
inc
sbb
and
mov
loope
leave
push
dec
xor
je
pop
xchg
push
stos
jb
mov
or
lods
mov
xlat
std
cmp
inc
fsubrs
or
and
les
imul
loop
mov
xchg
fdivrl
outsl
jae
xchg
arpl
hlt
mov
inc
scas
rcr
mov
add
xlat
out
movsb
int
push
cmp
jle
sbb
fisubrs
and
imul
pop
jmp
fadds
inc
mov
sarl
popf
jbe
leave
ds
in
or
inc
notl
or
sbbl
and
jae
adc
mov
push
jns
adc
add
cltd
and
insb
sub
mov
xor
pushf
pop
mov
shrl
stos
setno
sbb
mov
push
lcall
sbb
ds
dec
xchg
xor
orl
hlt
aas
js
je
dec
fs
xor
shll
lret
mov
mov
cmp
mov
xchg
movsb
and
add
inc
adc
mov
sarb
shlb
sbb
push
shl
aad
cmp
mov
aas
dec
and
and
xor
add
leave
decb
push
mov
mov
push
jle
decb
xor
mov
jae
test
cwtl
add
jns
cmp
add
stos
sub
test
leave
mov
neg
scas
sarb
test
std
ret
or
cmp
pop
inc
and
rcll
xchg
sub
div
outsb
push
pop
sbb
add
xor
push
or
int
xor
daa
add
lcall
jmp
xchg
dec
stos
push
cld
mov
adc
sbb
jecxz
dec
push
xchg
loopne
pop
xchg
rcrl
test
negl
xor
ds
rcll
cmp
test
sub
push
adc
in
adc
ja
mov
repz
cmp
jne
add
int3
add
out
cltd
mov
or
scas
icebp
xor
mov
jmp
daa
cmp
push
cmp
xorl
lret
pop
mov
jge
fisubrs
adc
popl
into
test
inc
jmp
loope
cli
faddp
cli
ja
mov
repnz
add
ret
jbe
cmp
mov
ds
xchg
and
test
push
sub
jns
push
xchg
add
push
mov
ss
in
pop
int3
jg
mov
sub
mov
ja
in
lret
mov
pop
push
xchg
pop
pop
ss
loope
dec
adc
ss
stc
pop
prefetchwt1
dec
stos
cwtl
and
scas
pop
push
push
sbbb
xchg
std
imul
mov
mov
xchg
mov
lret
scas
cmp
je
rcl
cmovnp
mov
lret
out
push
sti
dec
xchg
ljmp
xchg
mov
sti
dec
cmpsl
jg
or
std
scas
inc
xchg
stos
mov
push
xor
jbe
xor
fadd
pop
push
xor
xchg
dec
push
js
cwtl
sbb
or
push
push
cmpsb
adcl
inc
rcrl
lcall
jmp
iret
xchg
or
cwtl
je
iret
pop
jnp
sbb
into
or
les
clc
jecxz
push
sbb
sbb
mov
fcmove
jmp
and
push
test
adc
sbb
std
sub
ss
sbb
adc
inc
dec
aad
test
test
fbstp
adcb
loopne
pushf
subb
cltd
clc
xchg
mov
jmp
movsb
xchg
xchg
sarl
fdiv
mov
mov
jb
jne
int3
shlb
or
test
insb
scas
xorl
lods
stos
jns
fwait
sbb
movsl
mov
mov
add
lods
addr16
fxch
xorb
jmp
cmp
out
imul
outsl
pop
cmp
mov
addr16
mov
andb
loop
ja
add
test
cwtl
push
stos
dec
testl
dec
sarl
cli
cmp
jp
adc
pop
mov
xor
adc
jnp
push
ja
xor
lret
pop
mov
rcrb
cmp
mov
fs
jnp
scas
cltd
leave
dec
jmp
mov
xorl
pop
mov
pop
or
or
jne
mov
sub
cwtl
or
add
add
shl
ljmp
inc
subl
dec
mov
add
push
ja
aaa
mov
mov
add
add
mov
jg
add
mov
push
mov
jmp
loope
popa
sbb
xchg
mov
dec
push
pop
jl
pop
mov
xlat
pop
data16
ret
ret
xor
pop
out
les
aaa
jne
or
inc
clc
inc
jmp
out
or
mov
mov
ret
inc
pop
adc
addl
shl
pop
and
bound
stc
cmc
mov
rcr
stos
and
pop
pop
jg
xor
push
fwait
sbb
pop
sbb
dec
dec
inc
adcb
lea
das
fldcw
sub
sub
and
aam
lods
push
aam
movsl
mov
dec
sbb
xor
movsl
push
xor
bound
repz
call
rol
xor
mov
inc
call
leave
out
mov
test
out
lds
ds
pop
out
mov
ret
iret
test
cmp
and
and
call
xchg
sbb
lret
push
test
push
js
add
andb
aad
push
jo
outsb
mov
mov
out
xchg
push
adc
mov
pop
movsl
cltd
push
sar
or
jle
push
loope
dec
xchg
cmp
add
jbe
adc
jg
push
cmp
adc
jg
ss
movb
jo
lea
or
mov
or
sbb
inc
push
push
aaa
xchg
sub
add
add
repz
ljmp
movsl
dec
out
loope
je
jno
ret
andl
jo
sbb
pop
dec
lret
ficompl
fwait
pop
lahf
or
mov
aad
dec
mov
cmpsb
adc
test
and
pop
xor
mov
aas
adc
rorl
jae,pn
jns
xchg
aad
mov
mov
lods
je
inc
mov
out
jne
subl
mov
push
mov
mov
fildll
cmp
mov
jae
push
mov
pop
popf
xor
pop
fisubs
pop
jp
fisttpll
mov
fadd
clc
fidivrl
jmp
sbb
jbe
push
push
ss
fsqrt
lods
push
les
cld
testb
xchg
push
pop
sbb
ds
mov
jp
inc
inc
inc
lods
sarl
or
mov
or
aaa
or
into
mov
jg
push
push
sub
and
out
jne
js
js
pusha
cmp
clc
inc
push
in
pinsrw
jo
xlat
test
push
pop
clc
imul
cmp
inc
int3
cmpsl
mov
dec
jmp
and
push
sbb
stos
pop
jmp
dec
loopne
xlat
dec
and
fstpt
push
test
mov
out
jmp
insl
xchg
test
pop
pop
movsl
pop
and
inc
icebp
fisttpl
inc
ja
and
leave
push
dec
mov
jne
loope
sub
repz
out
or
in
sub
into
enter
call
mov
loop
rolb
mov
iret
iret
pop
out
xor
adc
dec
scas
rcl
fdivr
jle
mov
in
push
stc
ss
inc
in
cltd
movsl
pop
loope
ret
xor
pop
rorl
xor
mov
jno
lock
shll
pop
bound
das
pop
mov
push
testl
loop
mov
mov
jne
cmp
inc
mov
mov
push
fwait
add
mov
addb
scas
shl
jo
andl
push
filds
enter
xchg
push
ljmp
pop
or
sub
mov
ds
xor
and
push
jl
or
jle
adc
push
push
push
xchg
pushf
fsubrl
into
mov
std
daa
push
cmc
xchg
test
sbb
repz
adc
aad
xchg
bound
mov
bound
sub
cwtl
mov
icebp
sbbl
fsin
leave
in
lods
xor
into
mov
inc
test
pop
adc
mov
ljmp
sub
adc
in
xchg
xchg
dec
dec
mulb
sub
jmp
dec
lods
shll
outsl
nop
cmp
and
mov
andl
xchg
repnz
lock
shlb
mov
cli
jp
dec
je
lds
and
rcl
out
leave
mov
adc
sti
or
mov
push
pushf
mov
xor
pop
inc
gs
movsb
insl
out
stos
int3
jp
arpl
jae
sbb
inc
pop
loope
sub
enter
ret
add
jecxz
and
sbb
adc
and
mov
and
stc
jnp
pushf
es
mov
js
lods
mov
inc
icebp
dec
daa
add
jne
mov
sbb
jb
loop
push
cli
push
xor
pop
insl
jns
cld
or
pop
repz
arpl
sbb
inc
jb
adc
mov
adc
int
push
in
fdivrl
mov
xorb
or
push
adc
xchg
cmp
mov
adc
jmp
ljmp
orl
jp
jmp
mov
xchg
dec
cmpsl
dec
push
pop
or
mov
out
adc
sbb
in
incl
cmp
les
loop
iret
lea
add
sub
jbe
enter
xor
sub
fcomp
addb
inc
enter
movsb
test
jne
lds
cli
push
outsb
cmpsl
dec
aaa
loop
mov
push
jns
std
sub
xchg
leave
add
out
pop
icebp
or
lock
sbb
mov
sub
enter
dec
aad
movsl
pop
pop
mov
inc
dec
push
push
test
into
leave
push
dec
pop
shlb
ret
rcll
dec
mov
fistpll
pop
mov
inc
cmc
ss
jge
gs
mov
cmp
and
movl
mov
aaa
lock
push
dec
mov
std
sub
addb
add
mul
sbb
jecxz
dec
adc
jns
inc
push
in
fiadds
pop
fisttpl
inc
xchg
ja
jnp
dec
add
sub
aaa
mov
jl
dec
fldl
cmpsb
aas
cmpsl
int
inc
ja
adc
push
cltd
inc
ss
pusha
aad
pop
out
adc
pushf
mov
mov
push
ja
stos
out
icebp
push
cmp
insb
pop
xor
xchg
push
shrl
cmp
xor
adc
pop
lock
sarl
jmp
call
shll
std
sti
cmpsl
mov
popf
mov
mov
xlat
xchg
mov
rorl
cli
push
imul
push
test
das
jecxz
ret
dec
gs
roll
adc
mov
test
or
jns
jne
and
fwait
cs
ljmp
outsl
popa
sub
fildll
cmpsl
daa
pusha
or
sub
test
xlat
je
cli
inc
mov
push
cld
pop
xchg
ret
cld
push
or
adc
gs
ljmp
mov
mov
fimull
in
push
imul
xchg
cmpsl
or
or
pop
pop
insl
popa
cmpsb
insl
aaa
inc
mov
and
mov
out
mov
pop
fstps
sbb
mov
xor
js
out
jns
shrb
inc
mov
ljmp
dec
dec
mov
insl
pop
test
pop
pop
ja
bound
test
pop
fsubrl
dec
cwtl
out
in
adc
iret
nop
jmp
jecxz
pop
faddl
pop
or
jmp
dec
dec
les
cli
sbb
pop
push
inc
and
orw
push
push
popf
js
pushf
and
jne
outsb
sbb
push
add
jge
es
or
lods
in
push
inc
mov
and
xchg
xchg
push
mov
xor
jg
or
and
loop
jno
hlt
or
push
add
add
pop
inc
pusha
in
lahf
movsl
mov
mov
cld
repnz
or
and
in
cwtl
test
push
out
mov
add
cmp
jo
sti
inc
pop
jns
cs
and
cltd
cmc
xchg
pop
mov
cmpsb
test
add
pop
push
mov
icebp
icebp
jne
mov
fidivl
shlb
repnz
into
mov
mov
pop
bswap
pop
mov
sbb
jge
or
mov
ljmp
lret
dec
inc
int
pop
hlt
incb
push
into
mov
ss
shlb
lock
pusha
dec
push
or
rcr
test
adc
leave
fsubs
fwait
dec
add
push
xchg
je
rcr
pushf
in
shlb
sub
push
push
add
pop
test
outsl
jbe
in
push
xchg
sbb
jbe
inc
in
out
nop
cmc
push
jge
inc
pop
inc
mov
mov
mov
mov
add
or
pop
fsubs
into
mov
adc
icebp
push
push
lea
add
repnz
mov
lods
cmp
icebp
loopne
inc
je
and
daa
add
inc
mov
inc
add
dec
shrl
cmp
iret
in
dec
xor
sub
lret
sbb
mov
cwtl
js
adc
cltd
dec
sub
jecxz
xchg
addr16
movsb
js
out
mov
cmc
mov
cwtl
sbb
lea
xchg
and
cs
out
xchg
pop
pop
shlb
dec
dec
mov
xor
fimuls
add
cmp
mov
xor
push
and
add
push
sbb
fidivrl
ret
cltd
or
mov
dec
and
xchg
mov
ljmp
cmp
js
loop
icebp
nop
andb
jge
mov
xor
pop
nop
pop
ds
fsts
jnp
push
or
and
add
xchg
mov
sbb
mov
arpl
clc
test
add
jge
outsb
cli
xor
pop
adc
adc
shrb
or
mov
ljmp
enter
les
or
jne
ret
aad
xchg
iret
mov
insl
popf
cmp
jl
xchg
xchg
pop
xor
xchg
pop
movsl
or
or
lock
push
enter
hlt
push
outsb
lcall
mov
int
shr
int
in
int3
inc
inc
repz
pop
rsm
jecxz
movsb
sub
stc
jno
inc
cmp
dec
dec
loop
mov
out
sub
cli
and
xchg
push
sbb
sti
pusha
mov
xchg
ja
dec
daa
lahf
mov
sbb
mov
bound
ljmp
arpl
scas
rcll
push
in
inc
dec
mov
nop
mov
scas
lea
loopne
fnstcw
or
sahf
add
shlb
push
xchg
jmp
jg
fadd
daa
adc
inc
dec
cmp
imul
fildll
cmp
mov
jns
jge
fmull
cmp
repz
or
pop
cltd
roll
xchg
stc
arpl
mov
outsb
mov
mov
mov
out
adc
inc
dec
out
pop
and
inc
movsb
add
xchg
cvttps2pi
sub
jle
mov
ret
repnz
pop
mov
mov
aas
addr16
scas
cld
pop
test
push
in
loope
repnz
xor
sub
fcomps
je
and
les
cmc
adc
out
addr16
cmp
push
ss
fnstenv
xchg
add
jg
stc
scas
dec
dec
fildl
mov
dec
jg
lahf
imul
sub
out
popa
or
mov
mov
stc
and
push
dec
push
sub
lea
out
mov
jbe
shlb
jge
adc
stos
leave
xchg
cmc
jecxz
pop
mov
adc
mov
fidivl
in
cmc
pop
lods
fsub
mov
mov
push
mov
xchg
addr16
sub
iret
pop
aas
in
lret
push
stos
pop
subl
dec
jbe
mov
dec
and
jmp
inc
data16
or
sbb
mov
jnp
dec
add
call
call
jge
push
fadds
jnp
fsincos
sarl
adc
andl
aam
adc
cmp
das
in
cmp
mov
jle
aam
loope
adc
addl
rol
add
stc
jle
hlt
sar
sub
out
mov
and
jne
push
dec
dec
adc
aaa
pop
cmp
pop
mov
pop
mov
mov
cmp
add
leave
leave
sbb
pop
dec
and
out
xor
pop
scas
push
push
sbb
scas
movsb
sub
in
insl
loope
dec
cmp
inc
xor
sub
mov
mov
push
push
in
lret
cld
div
mov
jae
aas
mov
cld
cltd
or
or
jp
sbb
lcall
fldln2
cs
mov
jnp
fcompl
xor
popa
and
push
rcll
mov
cmp
shll
pop
scas
sahf
dec
in
leave
mov
pop
pushf
mov
frstor
sbb
lret
xor
stos
jecxz
incl
and
and
add
cld
out
sub
pop
aad
pop
mov
lcall
es
les
popa
jle
xchg
enter
aad
fiaddl
sbb
int
fsubs
mov
cli
sbb
hlt
daa
sti
sbb
jbe
pop
fbld
mov
into
jecxz
mov
shr
pop
pop
jge
int3
stc
ss
mov
xor
or
mov
nop
inc
hlt
mov
xchg
in
adc
outsb
out
jle
dec
sub
xchg
mov
cwtl
jp
shl
or
test
bound
dec
loope
iret
or
mov
out
movsl
aaa
dec
push
mov
fcmovb
dec
pop
xlat
in
cli
lret
xorl
mov
jno
mov
aad
test
jne
sub
arpl
mov
push
or
insb
ss
and
jnp
enter
bound
xchg
ja
movsl
xchg
sub
jp
jo
pop
stc
mov
add
mov
punpckhwd
and
sbb
or
add
icebp
xchg
add
data16
mov
dec
int
rcl
add
xor
outsb
dec
std
arpl
xchg
lods
stos
cmp
sarb
xor
push
popa
loop
fnsave
fldt
xor
ss
ds
dec
imull
inc
jle
push
cli
add
ficompl
adc
test
arpl
pop
stos
push
xor
mov
aas
imul
icebp
data16
fcmovbe
loopne
cmp
inc
sub
repnz
popf
pop
xchg
adc
push
repnz
lret
and
xor
cli
dec
push
lret
cld
push
stos
pop
xchg
ret
jmp
js
xlat
pop
pop
flds
xor
push
in
iret
ret
add
std
jl
sbb
popa
mov
ret
push
imul
stos
shl
sarl
leave
out
pop
adc
or
lods
jnp
pop
mull
and
mov
pop
dec
dec
test
add
ljmp
cwtl
and
jg
loopne
jbe
add
pop
dec
cld
stc
decl
movb
lcall
test
add
pop
mov
mov
mov
into
pop
int3
in
cli
shll
imul
jnp
and
addr16
int
mov
mov
add
outsl
sub
test
sahf
cmpsb
call
pop
adc
test
dec
xor
mov
divb
xor
aam
mov
leave
outsb
fisubrs
jb
movsb
testl
clc
adc
push
lret
sahf
or
out
je
sbb
pop
mov
pop
xchg
divl
aam
rcrb
inc
mov
shr
outsl
mov
mov
push
cmpsl
and
mov
cmp
push
jmp
aad
xor
lcall
xchg
xchg
xchg
loopne
adc
jmp
stos
dec
cmp
sbb
push
pop
mov
cmp
xor
ror
insb
sub
push
movsl
jae
push
push
test
jno
push
in
bndstx
out
aaa
lahf
arpl
push
pop
movsl
and
outsb
imul
inc
jo
fidivl
rorb
xor
jge
cmp
and
in
add
in
dec
add
cmp
fists
jnp
testb
mov
cld
mov
aaa
cmpl
fidivrl
stc
imul
imul
push
lods
cld
mov
push
push
and
test
sar
adc
repnz
and
sbbb
mov
repnz
adc
xchg
std
mov
int3
aas
pop
out
rol
stos
inc
loop
mov
jns
movsb
popf
mov
mov
insb
sbb
mov
icebp
movsb
stos
popf
sub
popf
shll
shll
cmp
stos
mov
pop
mov
ror
jp
ljmp
jl
xchg
ds
ss
inc
mov
push
xchg
std
add
sbb
mov
loop
pop
pop
push
sbb
add
clc
pop
inc
movsl
jae
cmpsl
ljmp
sbb
sub
xor
pop
or
mov
std
in
popf
mov
mov
out
pop
push
xor
add
addr16
test
xor
cmp
mov
js
sarl
mov
fildl
adc
jae
icebp
mov
or
xor
sub
sub
xor
insl
add
test
xchg
ficoms
test
mov
jo
in
push
push
mov
jo
inc
sbb
sbb
ds
stos
out
dec
fldcw
sub
imull
pop
jbe
dec
lret
in
adc
dec
aaa
test
in
xchg
mov
jb
xchg
sbb
out
arpl
mov
cld
and
fwait
sbb
lret
insb
mov
inc
sbb
sub
mov
xor
in
cld
cmp
int
pop
icebp
into
dec
scas
adc
pop
fsts
inc
movsl
push
test
cmpsb
xchg
dec
xchg
add
les
loopne
dec
lds
cmc
mov
rcl
inc
and
cmpsl
ss
ss
cld
inc
pop
jb
insb
sti
jb
pop
movsl
cmc
mov
xor
push
xor
add
xor
push
push
dec
daa
xchg
imul
jnp
insb
mov
in
ret
sub
mov
push
in
sub
pop
mov
mov
and
push
ficomps
mov
inc
lods
push
gs
mov
pop
lret
popf
clc
test
mov
mov
adc
pop
mov
jl
test
aaa
xchg
xor
scas
daa
pop
fs
inc
sub
inc
ret
push
xchg
pop
mov
test
mov
scas
jecxz
cmp
cmp
imul
sub
sar
in
push
rcrb
pop
ljmp
jecxz
xchg
push
jnp
or
mov
push
mov
mov
or
and
icebp
xchg
fdivs
inc
inc
imul
xchg
loopne
mov
imul
jnp
pop
dec
jle
das
je
ljmp
daa
and
adc
xlat
out
in
popa
push
xor
inc
pop
ret
jns
in
sub
cld
cmp
dec
aam
ret
cmp
pushf
xchg
sub
jno
push
or
dec
movsb
stc
cmp
jae
pop
movsb
adc
mov
push
test
inc
outsb
sbb
jae
adc
std
andl
cmp
pushf
je
es
add
jp
movsl
pushf
cmpsb
ret
or
xor
xor
out
xor
xchg
ret
sbb
movsl
fsubrl
dec
xchg
cmp
adc
pushf
inc
adc
xchg
cs
negl
mov
sbb
lahf
lea
mov
dec
or
or
mov
cltd
jge
xor
cmp
rcll
push
loope
mov
fisubrl
outsb
imul
xchg
sub
xor
lds
pop
xchg
sbb
xor
adc
movl
ret
lret
test
cmp
imul
or
sbb
es
lock
pop
stos
aam
mov
jl
fidivrs
sub
xlat
lods
and
mov
shlb
and
xchg
insb
mov
int3
iret
fnstcw
out
jmp
and
rcrb
push
aam
dec
push
xor
inc
add
out
bound
das
or
addb
outsl
sub
nop
inc
or
sbb
pop
mov
ret
pop
xchg
xchg
sub
fisubs
filds
aam
ljmp
divl
dec
sbb
dec
pop
int
pop
pushf
mov
add
ret
xlat
aas
pop
xchg
push
push
out
out
dec
outsb
or
stos
fs
push
or
add
stos
jbe
sbb
loopne
into
adc
mov
in
gs
sahf
test
pop
cmp
add
mov
test
aaa
mov
out
movl
or
clc
push
in
lds
lcall
int3
lock
icebp
cwtl
std
cmc
mov
mov
xchg
mov
mov
iret
and
outsl
dec
sub
repz
adc
out
cmp
sarb
icebp
inc
push
inc
and
cli
mov
mov
dec
clc
rorl
in
jecxz
or
in
xchg
mov
push
outsl
xor
mov
je
sub
xchg
push
jg
sbb
lret
shrl
dec
dec
jne
push
sti
loope
in
and
mov
push
push
push
popa
xchg
jge
adc
cmpl
xchg
pop
popa
scas
cmc
ljmp
out
inc
and
idivl
push
xchg
lcall
movsb
or
pop
or
cmpsb
sub
les
into
rcrb
cmp
mov
bound
or
stos
jno
and
into
ficompl
adc
stos
cwtl
xchg
mov
sti
lods
add
out
ret
dec
clc
dec
jae
outsl
ljmp
outsb
lahf
sbb
shlb
sbb
pop
xchg
pop
mov
stc
scas
not
shl
shll
add
inc
hlt
cwtl
adc
cmp
or
in
pop
sub
jne
cmc
daa
and
fsts
mov
pop
fnstenv
jp
movsl
cld
setge
loope
movl
inc
jnp
stos
fcompl
and
jle
sbb
sub
push
cmpsl
jecxz
inc
sbb
shlb
cli
push
push
mov
loop
icebp
imul
adc
cmp
cld
cwtl
pop
sub
xchg
arpl
sti
test
out
push
mov
aas
jmp
dec
cmpsl
fadds
out
add
pop
mov
popa
pop
mov
das
sbb
stc
mov
dec
jecxz
cmp
cmpsb
jmp
mov
mov
dec
pop
and
cld
cld
jp
fidivs
lret
dec
push
shlb
adc
fs
adc
jecxz
inc
jl
adc
jl
or
fiadds
outsb
cmp
es
push
lods
ret
test
lcall
push
sub
mov
mov
adc
ljmp
loope
fs
ds
enter
insl
inc
cmp
mov
inc
jns
xchg
fiadds
cmp
ret
cmp
out
into
mov
add
inc
fdivrs
gs
aad
sub
lods
pop
les
fcmove
lahf
inc
or
sub
mov
adc
insb
pop
inc
insb
fldcw
pop
dec
leave
mov
movsl
pop
sbbl
sbb
pusha
lock
pop
push
addr16
pop
cmp
mov
pop
mov
adc
inc
cmp
aad
mov
movsb
mov
leave
sti
fidivrl
mov
flds
dec
mov
loope
dec
mov
and
cmc
or
cmp
or
push
call
mov
xchg
and
stos
sbb
lahf
daa
mov
loope
mov
inc
push
repnz
lret
movb
aaa
sub
mov
jge
js
outsb
enter
sbb
js
ljmp
xor
xlat
push
cmp
and
fnstcw
push
je
inc
adc
pop
dec
fnsave
test
and
inc
ror
xor
xor
push
mov
shld
pop
sbbb
stc
push
into
push
jo
xchg
repnz
pop
jbe
and
rcll
addr16
jmp
jmp
push
cmp
xor
pop
or
pop
mov
fadd
popf
jne
js
stc
add
pop
add
inc
test
stos
mov
test
popa
inc
sbb
loop
loopne
push
loopne
xor
and
xor
mov
addr16
xlat
or
push
pop
andl
mov
xchg
inc
psubd
out
fwait
stos
inc
xchg
fnstenv
leave
jb
dec
in
and
push
int3
rorl
pop
adc
and
test
mov
addl
xor
into
mov
sbb
inc
pop
mov
adc
mov
idivb
jmp
hlt
repnz
daa
outsl
mov
nop
xor
add
rclb
mov
outsl
imul
mov
add
push
pop
cmp
jnp
lahf
and
cmp
xchg
and
movsb
bound
imul
xchg
pop
icebp
sub
mov
rcl
adc
into
inc
xchg
test
and
add
subl
pop
mov
push
test
jne
push
ret
int3
cld
fcmove
test
cmp
mov
jne
add
pop
shrl
in
and
pop
cltd
nop
mov
test
push
cmp
or
dec
fildll
ret
into
fwait
sub
inc
mov
cltd
out
inc
cmp
mov
mov
clc
mov
cwtl
mov
xchg
push
inc
jge
cmp
andl
mov
jae
jp
dec
inc
ja
sbb
loop
jmp
xor
jae
pop
pop
pop
icebp
sub
pop
cmpsl
dec
xchg
loope
pop
mov
imul
popa
xchg
push
jl
mov
icebp
lods
lret
sub
fwait
ret
fs
enter
or
ret
mov
insb
push
addr16
dec
push
lcall
xor
rorl
mov
sbb
ds
test
mov
and
je
xchg
xchg
pusha
in
inc
pop
jns
and
sti
sbb
and
sub
sub
aas
lds
std
jle
loopne
dec
nop
cmp
jnp
pop
push
xlat
pop
mov
xchg
scas
push
jb
pop
pop
sti
and
cmpsb
and
dec
jns
pop
jle
inc
lea
sbb
sbb
hlt
into
pop
gs
fldl
xor
js
loopne
lret
adc
inc
std
cld
sbb
repnz
adc
sub
out
cli
mov
mov
pop
push
mov
into
add
ds
xchg
cltd
subl
lret
hlt
cmp
testl
leave
add
sub
out
aam
setno
xor
int3
push
push
repnz
pop
out
repnz
lods
add
and
push
add
xor
xchg
das
cmpl
pop
pop
add
push
aam
xlat
sbb
stos
xor
mov
es
sub
data16
addl
int
or
shlb
inc
dec
inc
les
mov
rcrb
and
mov
pop
push
mov
orl
test
repz
sbb
cmc
inc
add
mov
inc
or
fwait
clc
xchg
sub
adc
gs
scas
adc
lcall
push
and
adc
outsb
call
cmpsl
xor
or
les
stc
hlt
mov
xchg
nop
or
repz
xchg
les
cmp
sti
xor
int3
fwait
sbb
sub
pop
jns
ss
ljmp
cmpsb
cmp
cmpsl
pusha
and
add
sbb
sbb
pop
lods
and
add
jmp
sub
test
arpl
push
test
cs
enter
add
pop
add
cmp
outsl
cmpsb
pop
out
mov
mov
cmpsl
sub
es
test
lods
jge
mov
bnd
fsub
fistps
mov
mov
fistl
dec
push
sahf
inc
icebp
add
cmpl
scas
addr16
mov
push
pop
andl
lock
pop
or
dec
das
js
jl
mov
sti
inc
jmp
ficompl
pop
outsb
sub
inc
adc
outsl
cmp
mov
ffree
cmp
out
xor
in
das
scas
shrl
fisttps
fldl
sarb
sarb
shll
pop
lds
fisubrl
imul
cltd
js
aas
daa
sbb
add
cs
test
cmpsl
mov
in
fsubrs
loop
cmpb
mov
mov
mov
jae
leave
xchg
shlb
pushf
jecxz
dec
out
stos
xchg
movsl
or
mov
aaa
lods
clc
jo
or
daa
mov
in
daa
push
xchg
mul
jp
rcr
nop
lds
pop
fimull
cmp
cli
ja
dec
pop
outsl
cmp
sbb
jle
lock
lcall
push
in
das
or
adc
pop
sbb
sub
cmp
jp
adc
ja
pop
aas
inc
clc
jle
xacquire
enter
cmp
lds
mov
or
imul
ljmp
xor
scas
xchg
arpl
mov
divb
mov
loope
mov
lods
cld
scas
mov
int3
fisttpll
stos
sub
xlat
sub
ljmp
inc
mov
add
or
xchg
cmp
dec
mov
jo
sub
xchg
test
mov
xor
dec
or
mov
push
or
cmp
xor
insl
lods
jno
mov
adc
or
mov
jp
or
lea
mov
sub
jl
clc
es
sbb
xor
fstps
sub
enter
aas
arpl
sub
shr
test
addr16
inc
lahf
popf
shll
inc
inc
fisttpl
push
stos
lret
jbe
fs
in
negb
cmp
xchg
movsl
outsb
adc
mov
dec
data16
inc
xchg
inc
cmp
out
jne
ret
mov
push
lret
divl
icebp
cmpsl
sub
mov
jmp
jmp
add
push
js
daa
jb
das
xchg
pop
push
mov
adc
xchg
adc
das
or
sbb
mov
sbb
xacquire
pop
sbbl
pop
push
push
xor
adc
mov
lock
imul
movsl
loope
jnp
adcl
das
js
mov
xor
jo
aam
push
je
cs
loop
test
repz
sub
sub
sbb
test
cltd
repnz
loop
orb
std
xchg
cmp
sub
cwtl
push
push
fs
aas
dec
cmp
jnp
inc
outsb
mov
xor
aaa
shll
movsb
cld
pop
mov
add
mov
mov
sub
pusha
mov
scas
xchg
mov
mov
push
es
mov
cli
flds
jb
xchg
dec
es
pop
wbinvd
pushf
call
clc
jmp
or
push
xchg
cmp
adc
lock
movsl
cmpsl
push
jns
stc
add
mov
mov
fs
jp
dec
jno
mov
out
fiaddl
subb
in
notl
mov
push
dec
push
fcoms
cmp
out
sub
cs
rorb
sub
jg
inc
lcall
add
js
jo
fstps
clc
shrb
mov
int
mov
cmp
rcrl
adc
push
push
movsb
xchg
push
sbb
push
pop
adc
xchg
lcall
xor
ror
xor
movsl
fs
dec
pop
repnz
mov
sub
movsl
fdivp
adc
xchg
leave
jns
mov
sbb
imul
cmc
scas
mov
or
mov
int
cmpl
mov
adc
out
pop
push
mov
mov
mov
jne
xchg
mov
add
jae
push
mov
xor
jae
sar
in
cmpsb
or
sub
adc
jae
insl
orb
jno
mov
add
cmc
cmpsb
mov
or
decb
sub
lret
mov
mov
gs
ja
fisttpll
shl
fisttpll
subb
add
test
pop
hlt
pop
cmpsl
push
mov
fcmovnbe
mov
jno
push
ljmp
rcpps
in
mov
pop
or
xchg
leave
sarl
add
daa
xchg
inc
push
in
sub
cmp
and
into
sub
adc
xor
out
push
cltd
loope
cli
xor
out
int3
cmpsl
mov
xor
call
addl
or
sbb
push
add
iret
inc
or
int
shlb
clc
xchg
dec
sbb
test
mov
jnp
or
inc
test
dec
out
lods
pop
sahf
jl
and
pop
xor
inc
lret
aad
out
mov
adcb
inc
loopne
sub
push
scas
movsl
pop
or
xchg
in
cmp
add
pop
gs
or
push
ss
xor
mov
in
xor
movsl
or
enter
xor
jle
aam
cmpsb
xlat
out
sub
dec
fsubr
das
imul
lds
xor
xchg
sahf
mov
push
outsb
daa
shll
jno
les
out
cwtl
mov
push
push
aad
aad
gs
mov
jno
ljmp
popa
xchg
sub
sbb
sbb
ljmp
pop
jl
fistl
xor
movsb
push
push
xchg
cs
sub
scas
aaa
and
and
push
mov
mov
push
dec
hlt
mov
sti
cmp
enter
and
daa
shll
movsl
icebp
leave
mov
inc
inc
and
mov
into
xchg
shll
vdivss
outsb
jae
fst
inc
mov
adc
mov
push
mov
xor
lock
pop
jg
fnstenv
pop
les
aas
cltd
ds
sbb
les
mov
ljmpw
lret
in
adc
xor
mov
rolb
xchg
xchg
add
xchg
mov
mov
jb
mov
arpl
call
lods
aaa
sbb
sahf
mov
test
mov
pop
push
aam
sub
es
cmp
daa
int
iret
in
imul
cwtl
outsb
xchg
scas
adc
inc
cmp
sti
out
pop
and
cmpsl
adc
mov
std
mov
sbb
test
in
cltd
out
rcr
cmp
sar
push
mov
fwait
jl
mov
push
dec
mov
out
add
or
test
dec
cmp
sbb
out
into
loop
mov
ret
nop
test
pop
fistpl
lds
mov
pop
xor
lock
scas
push
pop
or
sub
roll
dec
and
into
movsb
fnstcw
xchg
adc
into
popf
bnd
jo
sti
sub
adc
scas
repz
rclb
icebp
ja
in
sti
aas
pop
mov
cmpsl
mov
mov
push
xchg
std
ja
pop
jnp
cwtl
ljmp
rclb
mov
pop
les
jnp,pt
aam
popa
dec
ds
dec
movsb
pop
or
adc
idiv
xor
mov
xor
push
sub
mov
rcrl
cld
out
sbb
mov
stos
fsts
xchg
xlat
test
add
int
into
mov
inc
insb
icebp
push
std
test
lea
add
mov
cltd
jmp
sub
mov
lcall
add
or
push
jecxz
mov
xchg
pop
inc
cmp
out
arpl
and
mov
outsl
cwtl
stc
aam
imul
push
cmpsl
xor
lock
sbb
pushf
jns
mov
sti
dec
in
pushf
ret
jae
adc
and
xor
movsb
arpl
sub
push
arpl
push
popa
pushf
sub
cltd
jne
xlat
sbb
insl
xchg
aaa
adc
pop
or
lret
loope
aaa
mov
test
dec
dec
mov
jp
dec
int
aad
lcall
fs
jl
je
out
xchg
sbb
gs
mov
mov
arpl
testl
out
jae
lods
shll
push
jg
sbb
cmp
jb
in
pop
loope
aas
or
adc
xchg
pop
push
add
cmp
push
popl
mov
pop
das
jno
fildl
fimull
fstpl
hlt
jmp
xchg
insl
mov
inc
add
movhps
ds
aas
rclb
enter
and
sbb
jnp
test
inc
sub
arpl
in
bound
xorl
nop
or
in
rcrb
mov
pop
imul
inc
pusha
push
in
mov
stos
xor
in
push
xchg
stc
divl
imull
xchg
popa
fsubl
jle
push
cwtl
out
lods
pop
insl
loopne
xchg
dec
lods
sbb
or
fnstenv
dec
fs
dec
or
es
pop
hlt
jns
lret
xorl
mov
fiaddl
dec
fsubrs
dec
bound
jno
cltd
mov
xor
jnp
lds
cmp
stc
popf
lds
aaa
das
popa
adc
add
mov
in
or
push
add
xchg
ret
jns
push
mov
xchg
and
inc
lock
sbb
call
push
out
push
jl
xor
outsb
dec
push
out
inc
push
fs
loopne
mov
xchg
sbb
cmpsb
popa
iret
enter
arpl
cli
cmp
in
lret
dec
adc
dec
out
push
in
pop
jb
jne
jmp
sbb
cmp
lock
gs
in
out
jno
popl
sub
scas
fdivl
adc
dec
sub
xchg
jmp
add
imul
sub
outsb
inc
nop
out
or
dec
lods
mov
or
push
outsl
and
mov
xor
jne
ds
outsl
jle
add
stos
dec
orb
stos
pop
xchg
das
xor
pop
push
or
lret
mov
in
movsb
and
imul
xor
pusha
cmp
add
jae
cmp
xchg
decl
cwtl
sahf
adc
cltd
or
jo
mov
push
out
daa
clc
or
pop
fcmovb
sub
sbb
dec
aad
cltd
mov
mov
insl
add
mov
jno
sti
movsl
fcom
pop
xor
push
dec
dec
jne
aaa
popa
dec
loop
pop
sbb
cmp
fcompl
call
mov
rolb
push
sub
xor
mov
rorl
adcb
mov
pop
jmp
ret
popa
ljmp
shlb
leave
sbb
lea
cmp
mov
test
inc
xchg
cmp
movsl
pop
lret
push
lahf
enter
jp
add
mov
push
push
lock
or
test
lahf
test
daa
xor
cmp
pop
jp
test
fnstcw
fwait
rol
or
mov
enter
mov
and
sbb
adc
lds
jae
dec
or
inc
xchg
pop
popa
pop
push
mov
mov
cmp
pop
pop
xchg
xchg
outsb
ret
and
stos
shl
or
xchg
inc
inc
pop
inc
inc
in
aaa
pop
enter
icebp
int
in
test
std
arpl
jg
dec
fnstcw
cmpsl
jp
ret
fdivl
sbb
mov
test
xor
xchg
and
mov
add
dec
cpuid
shlb
mov
in
sbb
adc
or
xchg
dec
pushf
divl
loope
test
cmpsl
mov
push
inc
mov
cs
jnp
rolb
inc
pop
mov
ja
or
mov
pop
sub
cli
mov
loope
xchg
movsl
push
dec
shrl
mov
xor
enter
push
pop
dec
repnz
shr
ror
popl
fsub
fcmovu
orl
outsl
add
push
loop
push
scas
imul
in
jae
inc
scas
xor
pop
test
sahf
cmpsl
adc
mov
cmp
loope
and
pop
pop
in
popf
ljmp
jge
repnz
mov
push
fistl
add
cmpsb
imul
mov
jb
push
imul
in
stos
jnp
inc
and
add
daa
shl
cli
jnp
sahf
or
test
inc
loopne
fisttpll
jge
xor
mov
rorl
notl
dec
loope
dec
repnz
cmpsl
xor
inc
xchg
sub
repz
xchg
mov
pop
adc
jnp
add
xchg
and
add
loopne
jnp
add
push
loopne
jne
int
arpl
in
cmp
and
lea
iret
inc
or
lock
cld
sub
enter
add
imul
jp
adc
lret
clc
xchg
mov
jg
adc
fmul
decb
xchg
sbb
mov
xlat
mov
adc
mov
movsl
inc
adc
lock
add
iret
cmp
push
add
lahf
dec
xor
daa
test
inc
jp
add
loopne
mov
inc
imul
adc
cmp
arpl
xchg
js
sub
in
dec
jle
cmp
add
sti
mov
test
aad
cmp
or
movsl
je
mov
test
add
cli
or
out
cmpl
xor
ss
mov
mov
iret
insl
and
loop
mov
fmull
dec
les
or
xor
gs
sbb
hlt
popa
sbb
and
jp
mov
js
xchg
mov
xchg
out
jno
jg
lcall
push
orl
push
push
es
sbb
jp
clc
addl
notl
rsm
outsl
or
cmp
mov
jg
int3
mov
and
jno
xor
mov
push
xor
test
loopne
clc
sbb
ja
and
pshufw
dec
mov
movsl
jne
insl
movsb
aaa
xor
andnps
sub
fidivrl
das
and
sbb
div
sbb
pop
lret
and
mov
jbe
aam
or
sarl
mov
add
lods
imul
test
mov
mov
xchg
bound
dec
jecxz
sub
dec
outsl
cmp
fcoml
cli
or
add
sbb
pop
jl
movsl
jle
lods
add
fadd
push
lock
cmc
mov
adc
pop
mov
popa
pop
and
ret
leave
lods
push
and
push
cwtl
fsubs
jo
mov
xchg
aam
pusha
jp
enter
roll
jl
and
imull
mov
mov
pop
dec
data16
stc
xchg
dec
cmpsb
mov
repz
test
lock
pop
test
mov
xor
mov
mov
cmp
jp
outsl
mov
lcall
outsl
xchg
lahf
test
dec
pop
in
stos
negl
pusha
dec
addl
dec
cld
or
add
lods
push
sub
mov
roll
cltd
cltd
and
dec
mov
pop
push
adc
or
fiaddl
push
add
nop
add
and
ljmp
popf
lahf
aad
pushf
push
cmpsl
les
or
out
cmp
pop
lret
xor
out
notb
out
enter
xor
in
ficompl
stos
lds
xchg
jp
mov
ss
movsb
and
in
hlt
pushf
in
aas
faddl
xorb
jne
popf
sbb
test
pop
scas
mov
xchg
jns
mov
mov
or
pusha
lods
call
mov
jge
xlat
aam
ffree
mov
mov
repnz
fidivrl
jns
inc
inc
jl
stos
rcl
inc
or
in
or
xor
fistpl
ss
push
call
pop
add
cmpsb
inc
je
data16
mov
mov
push
dec
out
or
test
and
pop
adc
dec
ljmp
xlat
les
push
adc
mov
addb
xchg
dec
mov
jns
dec
and
xor
stc
jns
adc
xor
sahf
push
inc
pop
out
push
ficoml
inc
inc
aad
jb
jbe
aaa
movsl
mov
push
xor
or
push
sub
cli
nop
insl
sbb
sbb
pusha
adc
mov
sub
jbe
sub
dec
adc
rcll
sbb
mov
xor
pushf
or
and
je
call
or
lock
in
xor
push
pop
pop
rorb
adc
push
shl
fsubrl
sbb
dec
ss
mov
xor
scas
and
jns
jge
into
loope
cs
mov
aaa
mov
or
pop
aaa
mov
push
pop
shr
outsb
mov
lock
cmp
enter
sub
jle,pn
push
jno
add
cmp
and
pop
push
test
fcoms
dec
fdivr
outsb
imul
mov
push
loop
pusha
shlb
or
or
mov
push
hlt
sbb
dec
mov
sbb
addl
addr16
lret
sbb
cmpsl
and
adc
leave
mov
push
cwtl
sub
stc
hlt
ds
iret
out
into
mov
push
pop
aad
mov
scas
pop
arpl
in
fmuls
mov
add
add
push
out
vpunpckhqdq
cmp
sub
inc
lea
lret
mov
cmp
sbb
push
sub
mov
cmp
xor
inc
mov
xor
mull
inc
push
subl
fisttpl
pop
jbe
aam
arpl
xor
mov
mov
mov
loop
loope
jns
popa
lret
cmp
aam
push
addl
xchg
mov
mov
xchg
je
dec
in
cltd
mov
cmp
xchg
mov
test
test
ret
mov
icebp
xchg
lds
cmpsb
andl
xchg
mov
pop
push
lock
decl
mov
out
or
push
mov
xor
jnp
or
aas
adc
xor
ss
mov
mov
ljmp
repz
add
test
adcl
pop
dec
jns,pn
or
sub
imul
mov
es
les
push
xor
adc
adc
dec
fwait
scas
cmpl
adc
sarb
xchg
adc
mov
rcll
dec
add
add
jbe
pop
and
int
cmp
pop
cwtl
addr16
adc
push
sub
test
in
or
sub
call
addr16
jg
stc
mov
lret
inc
cmp
mov
dec
shll
out
push
in
mov
fwait
lret
icebp
test
add
mov
cmp
mov
inc
push
out
cs
push
mov
out
punpcklbw
mov
sub
jbe
inc
hlt
xchg
or
xchg
mov
arpl
repz
lds
add
cs
jmp
stc
in
ss
outsb
and
xchg
jp
fisubl
pop
fdivrp
push
pop
mov
cwtl
imul
xorl
js
inc
and
loop
cltd
fdivl
stc
rcrl
and
pop
daa
testl
enter
movsl
call
popf
and
sbb
jno
sbb
fimuls
sub
clc
mov
add
xor
aam
cmp
inc
imulb
jbe
in
dec
adc
div
mov
sbb
lock
add
pop
mov
mov
hlt
int3
cmp
xchg
pop
sub
xchg
in
mov
add
je
mov
pushf
inc
filds
daa
pop
mov
test
push
mov
shl
leave
xchg
jecxz
lret
stos
cmc
pop
and
dec
or
jb
scas
into
and
in
xor
xchg
loop
mov
mov
orl
outsl
xlat
xor
xchg
sbb
js
movsl
jmp
xor
inc
sbb
outsl
fnstsw
dec
pushl
adc
rclb
fnsave
enter
cwtl
sub
ss
mov
mov
fadd
xor
das
mov
xchg
js
jbe
fiaddl
sbb
mov
mov
jp
mov
or
dec
out
xor
cmpsb
inc
dec
fisubrl
jp
and
scas
pop
mov
imul
pop
in
xchg
add
jge
or
inc
shll
or
iret
stos
scas
rol
int3
push
add
fldenv
xchg
lahf
adc
xchg
dec
lods
das
flds
loop
imul
inc
inc
or
sti
aam
pop
in
fsts
adc
lods
adc
xor
adc
jo
sbb
and
and
xchg
and
aas
adc
mov
jo
push
push
jmp
int
adc
pop
movl
add
inc
fiaddl
pop
adc
mov
cli
mov
jmp
int3
push
xor
iret
insb
xor
sub
xchg
pop
push
adc
mov
mov
pop
sti
jne
sbb
add
add
andb
pop
je
inc
add
jp
push
std
push
aam
lret
rcr
xorl
sbbl
inc
inc
adc
imul
mov
fisttpl
stos
shll
lock
fbld
sbb
outsl
mov
sti
dec
cwtl
out
sub
into
mov
dec
mov
or
scas
cmp
pop
jnp
shll
pop
lret
cli
push
test
cli
mov
mov
pop
je
lea
ja
scas
push
push
xchg
imulb
push
loop
aaa
vmread
xchg
dec
fdivl
sbb
lods
sub
jle
fldl2e
sti
push
dec
int
pop
inc
add
push
fisttps
pop
push
mov
sub
insb
out
and
sbb
mov
xchg
je
mov
test
lret
cmpsb
and
cmp
or
rorl
movsb
sub
andl
dec
in
lods
jl
sbb
dec
jl
nop
into
lds
push
sbb
mov
mov
std
das
jl
pop
dec
sbb
mov
mov
loop
out
or
nop
adc
enter
iret
mov
sbb
push
adc
and
aaa
mov
or
inc
out
mov
sbb
push
or
rorb
jmp
jne
sub
aaa
push
cmpsb
push
out
aas
insl
popa
xor
psubsb
ja
cmp
call
mov
mov
pop
xor
mov
jnp
or
popf
push
mov
pop
out
mov
stc
lret
stc
push
rcrl
mov
stos
rorl
aaa
mov
es
scas
jle
ss
out
outsb
pop
daa
pop
add
mov
jl
lods
pop
insb
cwtl
out
jge
out
and
push
arpl
les
jns
cmp
jmp
pop
push
xor
xchg
pop
imul
inc
adc
pop
lret
stc
adc
add
or
xchg
or
fidivrl
jbe
sub
or
add
pop
mov
mov
test
mov
xchg
inc
jns
pop
sub
mov
ljmp
nop
pop
mov
push
adc
jne
andb
int3
testb
xchg
adc
mov
xchg
mov
jl
pop
orl
divb
test
dec
jo
fs
stc
dec
js
mull
cmp
aam
mov
mov
xor
push
or
dec
pop
cmp
call
pop
pusha
mov
mov
loop
mov
dec
or
xor
out
popa
cmp
repz
inc
sbbl
lret
aas
xor
sub
adc
mov
jbe
mov
pop
shrb
lret
daa
dec
pusha
popa
inc
loop
and
cwtl
mov
nop
mov
insl
pop
or
xchg
and
hlt
inc
insb
test
xchg
adc
xchg
or
adc
popa
mov
orb
dec
sub
add
mov
je
inc
cwtl
aaa
adcl
ss
js
adc
lret
mov
sbb
pushf
into
jmp
je
mov
mov
push
sbb
adc
sub
scas
mov
icebp
gs
jnp
mov
out
dec
fstps
inc
outsl
pusha
in
mov
adc
mov
cli
mov
xchg
ficoml
into
cld
mov
outsl
jne
mov
clc
aam
scas
rcrb
sub
push
outsl
sbb
or
sub
mov
popf
jp
stc
pop
adc
repnz
dec
test
sbb
or
xor
in
and
mov
inc
and
sbb
mov
in
inc
push
gs
xchg
addr16
aaa
sbb
jl
adc
add
adc
adcl
pop
xor
cmc
push
mov
inc
rolb
fsts
mov
xchg
loop
pop
mov
jge
fbld
xchg
lahf
adc
sbb
stos
flds
jne
aad
test
sub
lods
jae
lea
cmp
test
rorl
cmp
test
cmpl
adc
les
jb
or
pop
or
cmpsl
jmp
pop
test
cmp
loopne
pop
addl
adc
jge
loope
out
mov
xor
pop
push
rorl
inc
push
mov
inc
sub
jb
jecxz
icebp
hlt
stc
mov
repnz
out
dec
lcall
inc
in
lahf
lret
xor
and
aas
sub
pop
jne
outsl
push
popa
mov
imul
dec
inc
mov
cmpsl
sbbb
xchg
add
sbb
sbb
jl
testb
leave
xor
push
lcall
push
mov
inc
pusha
andl
jb
aam
xor
les
jmp
push
stos
repnz
pop
aaa
cmpl
packsswb
xorl
lea
push
sub
mov
scas
popf
xor
inc
push
outsl
pop
ss
arpl
lcall
outsl
outsb
out
int3
sub
je
cmp
jp
xor
cld
sbb
lcall
xchg
jle
cmp
inc
inc
into
pop
das
pop
cmp
in
loopne
mov
mov
movsl
neg
xor
sub
jbe
shll
cld
das
hlt
mov
xor
jp
data16
cli
mov
inc
fidivrl
ret
insb
addl
jbe
push
pop
loopne
inc
ja
or
or
daa
adc
cmp
sbb
xchg
xor
mov
mull
mov
inc
pop
rcr
ds
ret
dec
pop
out
insb
lea
xor
inc
bound
pop
push
aaa
repz
movsb
mov
data16
jmp
test
mov
fldenv
and
jecxz
xchg
mov
xor
sbb
adc
jmp
sti
sbbb
or
fstps
ja
fwait
hlt
dec
enter
outsb
rcrl
xor
mov
sub
lahf
push
dec
or
cmp
test
aas
faddl
push
out
mov
sub
mov
pop
int
sahf
mov
push
rcl
jno
jp
xchg
pop
pop
movsb
adc
push
jae
inc
test
inc
pop
lea
arpl
ret
add
xor
cmp
jae
and
shl
mov
push
mov
jns
sbb
leave
sub
push
pop
pop
xchg
mov
jp
and
popa
jecxz
or
xchg
sbb
pop
mov
xchg
or
cld
push
mov
xor
cmp
lcall
pushf
xchg
movsb
cli
mov
pushf
test
sbb
add
inc
cltd
pop
lock
stos
out
out
jb
adc
sub
mov
push
sbb
or
shrb
mov
mov
mov
imulb
daa
xchg
add
pop
ret
mov
fcoms
push
mov
jg
addr16
xlat
xchg
cmp
mov
mov
shrl
or
jbe
mov
push
mov
nop
rcrl
pop
cmpsb
sbb
out
mov
push
test
insb
loop
outsl
daa
mov
mov
enter
lds
and
es
add
sahf
xchg
adc
sbb
int3
pusha
idivb
enter
test
jle
aad
sub
push
add
lods
popf
mov
lds
sbb
dec
sub
mov
push
xchg
orb
ss
add
cmp
or
lcall
mov
jmp
aam
cmp
sub
movsb
adc
orb
test
insb
cs
mov
arpl
sbb
mov
pushf
pop
testl
or
lcall
es
push
inc
divb
loop
adc
cmp
scas
jno
data16
pop
daa
ror
div
xchg
inc
loopne
int
jmp
imul
rcl
mov
pop
ljmp
cmp
xchg
add
lds
add
sbb
or
lea
clc
movsl
insb
popf
sahf
dec
test
mov
aas
adcl
push
push
outsb
add
lock
inc
pop
loope
push
test
clc
fidivrs
cmc
gs
sbb
lock
xchg
stc
sbb
divl
pop
stos
fidivrl
mov
or
push
sub
aad
cmp
and
gs
mov
xchg
cmp
dec
mov
inc
fld
scas
cmc
stc
jne
cli
iret
and
xchg
aas
loop
adc
cli
outsl
cmp
xorl
pop
push
aaa
je
mov
sti
push
rorl
imul
xchg
fdivl
andb
xchg
clc
repnz
mov
push
mov
inc
call
std
or
and
notl
pop
fwait
push
push
clc
adc
add
into
pop
fsubr
mov
jbe
fisubl
mov
xchg
sbb
fcmovu
xchg
aas
mull
cld
lcall
mov
mov
and
mov
imul
aas
xchg
sub
xchg
cmp
roll
push
and
mov
cmpsl
bound
jle
cmp
xor
or
mulb
inc
push
int3
cwtl
xor
rclb
test
call
not
inc
outsl
inc
inc
sti
inc
decl
jns
bound
and
loop
jns
pushf
cmp
mov
inc
sbb
fldenv
and
sub
mov
xor
pop
inc
mov
or
mov
mov
lock
aad
inc
xor
lock
mov
sub
add
pop
sti
jmp
ja
out
cmp
int
in
push
fwait
add
mov
sbb
test
fisubrl
add
sbb
or
fistpll
arpl
adc
cmp
in
pop
movsb
cwtl
test
jge
add
or
outsb
and
dec
sahf
mov
sub
sub
or
jo
repnz
cwtl
stos
jecxz
push
aam
xor
aas
inc
iret
inc
and
movsl
sub
shlb
insb
rorl
out
fidivrl
aad
mov
es
sub
fisubs
add
add
xchg
and
lret
add
jb
call
test
sti
cmp
aaa
cmpsb
aam
sbb
insl
icebp
push
movntps
pop
addr16
scas
mov
decl
mov
ficompl
xchg
sub
fwait
test
push
xchg
xchg
fwait
pop
shll
push
mov
in
xor
psrld
xchg
adc
xor
test
adc
sub
lcall
roll
inc
fld
jg
jb
jecxz
lret
mov
dec
mov
push
mov
or
and
lss
lcall
or
notl
jg
addr16
pop
push
sbb
ljmp
push
pop
test
and
mov
mov
scas
push
cmpl
mov
and
es
pop
push
aaa
arpl
aad
add
adc
jae
fsubp
lods
and
sahf
push
cmp
xchg
in
cmp
push
adc
xor
cmp
mov
sbb
push
sahf
in
icebp
lock
mov
outsl
lret
dec
int
bnd
pop
and
or
mov
mov
ljmp
mov
outsb
jl
jp
cmpsl
pusha
xchg
mov
movsl
dec
fcmovu
insb
mov
into
sahf
cmp
cli
mov
jge
push
or
cmc
add
cmp
mov
out
mov
ret
jnp
loop
das
cmp
jle
fisubl
sub
ss
mov
pop
jle
sub
pop
jnp
movsl
push
adc
mov
icebp
push
jmp
mov
adc
stos
ja
inc
pmullw
in
cmp
aam
mulb
dec
or
jno
add
sbbb
clc
pop
lock
or
jmp
movsl
jbe
pop
mov
ret
cs
shrb
fldcw
aaa
cmp
loop
xchg
mov
xchg
sub
sbb
daa
in
mov
add
test
jg
xor
dec
pop
aam
ja
pop
and
push
shlb
aas
fistl
cltd
cmp
xor
shlb
inc
dec
cmp
fildll
je
or
lock
mov
sub
dec
dec
fcoml
cwtl
test
rorb
js
push
jecxz
lods
mov
fwait
xor
lods
push
cmpsb
icebp
cmp
mov
shl
mov
shl
push
cld
hlt
dec
mov
dec
test
pop
and
lcall
daa
ja
cmp
xor
cld
sti
flds
push
je
add
shrl
xchg
dec
pop
add
push
add
das
mov
sbb
adc
jl
push
inc
je
insl
aaa
mov
mov
in
insl
jl
lret
sbbl
incb
inc
dec
adc
cmp
pop
lret
clc
add
test
mov
adc
enter
arpl
lret
les
mov
inc
inc
mov
cmp
push
aaa
or
mov
ja
aam
rcrl
add
movsb
cmp
dec
bound
jb
pop
fwait
add
aam
push
stos
or
fistpl
and
cltd
data16
pop
insl
in
stc
call
pop
sub
out
outsb
mov
lcall
inc
hlt
pop
cmp
ljmp
xor
cmp
adc
sub
sarl
cwtl
cwtl
mov
cmpsb
lahf
inc
clc
add
mov
add
adc
or
and
shrb
and
sbb
cltd
add
inc
dec
aas
sub
add
scas
jae
outsb
js
test
inc
imulb
add
insl
push
in
into
outsl
insl
mov
mov
and
rolb
dec
jecxz
mov
in
inc
loope
les
adc
sub
shrb
insb
loop
cmp
add
icebp
xchg
cmp
and
xchg
xchg
jo
sbb
bound
lds
mov
xchg
cwtl
popa
imul
dec
mov
mov
inc
push
push
jmp
rorb
mov
sahf
sbb
adc
in
push
jecxz
lret
or
sarb
mov
cmp
adc
or
shr
mov
xchg
imul
mov
push
xchg
push
xchg
in
inc
bound
pop
enter
sbb
mov
ljmp
mov
std
lcall
das
dec
inc
mov
iret
loopne
mov
in
cs
icebp
jno
pop
cmc
mov
ss
call
and
pop
push
shlb
fiadds
mov
aas
mov
out
inc
xor
out
mov
mov
push
popl
arpl
pop
inc
dec
fisttpll
cmp
jne
insb
sub
int3
inc
push
fucomp
leave
mov
test
es
xchg
jb
ljmp
pop
and
push
and
outsb
leave
testb
imul
jmp
xor
movsl
sub
les
ret
xchg
jle
les
sarb
push
mov
scas
xchg
sub
inc
xchg
aam
cmp
les
jb
nop
xchg
dec
or
test
mov
or
pop
jl
std
out
push
fwait
pushl
jno
dec
std
in
xor
add
pop
mov
jl
or
rcl
sub
cmp
insb
pushf
lds
movsl
push
sbb
ret
in
xchg
scas
das
pop
lock
pop
or
lds
shlb
data16
dec
push
inc
in
mov
and
les
xchg
test
dec
cwtl
xchg
push
xor
dec
shlb
insb
orl
inc
pop
sbbl
adc
iret
in
cmp
jmp
in
aam
xchg
jb
mov
popf
mov
cmp
dec
fnstenv
fdivs
aas
mov
lock
xor
fadd
sti
mov
mov
sub
mov
in
push
dec
inc
inc
push
mov
sbb
mov
inc
dec
rorl
cld
sti
and
in
jb
jmp
fsubrl
xor
bnd
sarl
mov
hlt
test
cltd
mov
xchg
cmpsl
adc
pop
jge
scas
dec
push
movsl
popa
gs
lcall
inc
lea
inc
imull
lret
pop
hlt
cmp
das
cmc
andl
das
cwtl
xchg
push
ret
sbb
int
cmp
add
out
and
adc
lret
jno
sbb
test
jo
mov
sub
pop
lret
sub
fisubl
rcrb
pop
les
or
repz
pop
inc
jne
daa
daa
es
xchg
in
ja
filds
dec
inc
sub
and
icebp
lods
cmp
test
xchg
adc
into
test
dec
push
popf
xor
push
jle
mov
lods
ljmp
ss
ss
or
mov
push
push
sbb
xor
mov
xchg
in
xchg
or
pop
mov
add
stc
enter
ss
add
push
mov
mov
mov
and
adc
les
push
push
sbb
dec
fadds
xlat
xchg
int3
and
popf
sub
and
mov
rcr
push
push
adc
lods
mov
mov
lret
cmp
aad
ljmp
fs
xor
mov
dec
dec
or
es
insl
cmp
push
pop
subl
cld
outsl
sbb
les
int3
pop
or
jns
sub
insb
nop
lcall
jns
enter
stos
jnp
test
xchg
xchg
sarl
pop
loopne
lcall
dec
adc
ficompl
retw
mov
mov
fucomip
mov
les
stc
cmp
mov
aas
dec
inc
xchg
popa
popw
xor
add
dec
add
ret
xchg
shlb
lock
push
mov
fs
ficomps
jmp
loop
push
movntq
inc
jbe
popa
xchg
hlt
dec
mov
ljmp
push
icebp
test
fwait
call
and
fidivl
xor
push
mov
jne
sbb
ljmp
mov
xor
mov
fmull
sub
std
mov
xor
push
cmp
js
js
jnp
xlat
pop
mov
mov
sub
cli
jge
mov
mov
lahf
out
fs
sub
fidivrs
fisubrs
pusha
aam
imul
nop
add
jns
jge
fmul
rcll
sbb
or
jmp
inc
leave
dec
cmp
je
sbbb
xor
lods
insb
shl
jnp
ljmp
mov
jb
popf
push
ret
cmp
loopne
xor
xchg
xchg
sub
arpl
icebp
fisubs
iret
mov
sub
ret
adc
and
mov
pcmpeqd
in
and
xchg
outsl
aaa
push
push
push
les
movsb
or
rol
inc
push
mov
push
hlt
movsb
jne
icebp
add
adc
or
mov
lods
popf
rcl
push
clc
cmp
aam
test
shll
sti
decb
or
cmp
aam
aam
ljmp
mov
les
fsubl
lcall
fidivrl
and
sub
or
pop
mov
jns
cmp
movsl
adc
jne
test
daa
subb
ss
pushf
imul
add
jns
rcrb
shl
test
stc
imul
add
cwtl
les
test
mov
ljmp
jno
ds
add
mov
push
or
or
out
daa
mov
inc
pop
nop
and
mov
pop
fists
popa
pop
ss
icebp
lret
mov
fistpl
cltd
imul
shl
fneni(8087
dec
sbb
movsl
cmp
clc
test
push
push
inc
xchg
in
ficoms
jae
jbe
jl
lds
and
nop
mov
cmpsl
mov
out
les
addr16
cmp
daa
mov
add
es
pop
fwait
roll
jns
push
adc
enter
add
jo
push
in
std
fucom
in
jp
dec
xchg
test
add
xor
adc
aam
loope
call
scas
push
mul
aas
mov
inc
mov
stc
jbe
xor
or
push
cmp
cltd
dec
mov
cmpsb
lods
lret
popl
leave
lret
push
sub
cld
jae
xlat
dec
je
mov
gs
sbb
sbb
xchg
lods
pop
fcoml
push
data16
sub
push
push
push
adc
or
dec
adc
sbbl
daa
mov
jnp
sahf
call
popf
cmc
fidivs
mov
cltd
jl
es
push
movsl
mov
in
leave
clc
inc
pop
or
jb
fistpl
sub
adc
jg
jg
push
not
mov
mov
adc
test
mov
xchg
sarl
daa
lock
and
lea
scas
icebp
adc
adc
or
inc
mov
and
int3
mov
pushf
adc
xchg
jno
sahf
xor
mov
dec
fwait
cwtl
mov
mov
mov
jmp
das
ss
xchg
cmc
sbb
hlt
mov
ret
jae
fldt
std
fmuls
mov
jo
mov
pushf
or
push
mov
es
js
mov
ds
pop
rolb
sti
cmpsl
sub
pushf
cmpsl
icebp
xor
xchg
arpl
leave
adc
sub
daa
shrb
fiaddl
les
rcll
imul
pop
dec
and
pop
push
or
fcoms
cmpsb
ss
mov
jmp
push
movsl
cmp
dec
and
inc
xor
and
mov
push
push
pop
mov
add
dec
push
inc
mov
and
testb
adc
mov
sbb
popf
repnz
cmp
mov
push
iret
adc
addb
fsubrs
bound
sbbb
ret
xor
push
shll
fsub
ffreep
sbb
lds
test
stos
loope
mov
and
gs
push
divb
cmp
cmp
dec
sbb
jo
inc
fwait
push
inc
aam
xor
dec
call
lods
imul
pop
mov
fsubr
pusha
bound
aam
xor
sbb
sub
int
out
mov
idivl
cmp
or
outsl
cmpsl
jg
push
add
insl
addr16
test
pop
cmp
pop
sbb
jae
dec
lods
aam
and
stos
push
mov
and
or
pop
mov
and
test
mov
in
or
fbstp
cmp
sbb
into
mov
ja
adcb
mov
add
imul
sub
or
and
hlt
dec
mov
or
imul
xchg
int
lret
mov
fidivrl
sbb
imul
scas
iret
mov
xchg
sbb
push
cmpsb
xor
test
sbb
inc
jge
add
stc
jae
mov
xchg
adc
mov
arpl
popf
push
pop
or
pop
test
xchg
and
push
popf
scas
cmp
and
add
or
arpl
pop
cmpsb
test
jne
sbb
jo
mov
push
jle
pop
cmc
xchg
clc
mov
lret
addr16
rol
rcrb
test
xor
sub
jl
mov
mov
pop
out
bound
data16
leave
xor
fidivrs
and
loop
jb
daa
addr16
movsb
sbb
pop
ret
mov
add
jmp
mov
mov
jo
mov
into
into
rcr
stos
or
idivb
push
mov
mov
lods
sub
clc
dec
inc
xchg
push
stos
add
aaa
pop
fstps
mov
mov
adc
dec
and
jbe
in
jne
dec
adc
clc
andl
fisubl
test
add
push
shlb
pop
sti
mov
out
fsubl
ja
out
or
push
inc
mov
sbb
cmp
jne
movsl
mov
lds
out
mov
pusha
stos
and
stos
aam
insb
jae
jbe
sub
jle
push
mov
cmc
sarb
sar
mov
in
out
addr16
xor
loopne
call
sub
xor
out
lret
add
hlt
sbb
lods
jb
jle
push
dec
aam
cmp
mov
pop
and
stos
mov
sarl
mov
push
hlt
adc
andl
jne
add
scas
out
mov
mov
out
mov
in
sub
dec
data16
pusha
shlb
lret
dec
mov
stos
out
xchg
sbb
mov
loop
xchg
mov
push
push
aaa
mov
imul
jb
mov
fwait
clc
mov
into
mov
inc
iret
ret
daa
or
sub
sub
fs
jae
mov
testb
add
mov
out
or
filds
dec
jg
inc
std
stos
loopne
jecxz
add
imul
scas
in
mov
in
adc
stos
mov
lret
adc
inc
jb
popf
pushf
xchg
loop
insl
lret
je
adc
sub
test
lret
dec
ror
push
mov
popl
jmp
jns
pop
rolb
jb
icebp
loope
push
call
clc
scas
add
pop
jo
adc
fwait
in
xchg
add
inc
scas
push
inc
xchg
dec
outsl
xchg
ret
loopne
push
outsl
fs
out
jmp
fcomi
cmpsb
jae
mov
or
hlt
sbb
scas
jl
add
lret
push
cwtl
lahf
and
ffreep
call
mov
push
lret
ret
daa
ficoml
mov
and
das
mov
jp
xor
sbb
rcll
and
pop
mov
add
cld
call
stos
or
xor
cmp
cmpl
sub
lahf
imul
sbb
andb
cmp
cmp
sub
fcmovnbe
insl
data16
sbb
lds
lret
push
and
lret
and
mov
mov
popl
pop
outsb
mov
push
xor
nop
cmp
cs
adc
inc
ljmp
and
fnstsw
sbb
pusha
inc
stos
dec
cmp
les
hlt
jo
cli
mov
in
jge
fimuls
imulb
jg
subb
mov
popf
fucom
mov
inc
dec
lea
xchg
mov
cmp
cmp
lret
xchg
jne
in
add
xchg
inc
sbb
adc
push
repnz
jecxz
icebp
repnz
or
pop
or
xchg
sbb
fmulp
or
mov
daa
xchg
mov
es
in
cmpsl
fxch
or
fildl
adc
push
cmp
dec
push
pop
push
add
push
stc
das
imul
mov
pop
stc
mov
push
xor
jl
sub
xchg
jo
xchg
rorb
pop
loop
addr16
in
jg
sbb
out
mov
dec
or
stos
pusha
icebp
jp
cmpb
push
mov
jl
data16
inc
sbb
sbb
jne
jg
pop
ja
pop
sub
dec
sub
cmc
cmpsl
fidivs
mov
pop
mov
out
sbb
mov
xor
lods
mov
xchg
mov
push
in
ja
mov
push
sbb
aam
xchg
shl
push
cmpsl
adcb
or
or
lds
shl
inc
sub
mov
jmp
xadd
aam
mov
pop
test
loop
add
fidivs
and
and
add
out
into
add
or
pop
pop
repnz
mov
push
sub
inc
nop
aaa
or
fwait
rolb
inc
mov
call
add
je
mov
pop
outsb
out
ds
and
adc
sbb
inc
mov
popa
mov
xor
and
cmpsb
lret
inc
sub
sub
pop
jo
jl
jl
aas
loop
mov
sbb
add
push
in
and
pop
rdmsr
pop
fsubs
pushf
into
mov
adc
ds
adc
xchg
pop
fmull
cld
inc
cmp
sahf
mov
je
push
add
add
sbb
mov
pop
std
mov
sbb
jne
inc
mov
mov
cmc
fnstcw
mov
fimuls
fadd
inc
xor
sub
aas
push
push
loop
xchg
adc
mov
xor
daa
outsl
pop
xchg
jnp
je
stos
cmp
dec
or
pop
scas
push
scas
mov
add
pmaxsw
push
js
cli
pushf
nop
push
iret
lcall
mov
mov
pop
pop
pusha
xlat
jp
lret
push
cmp
stc
sti
cmp
mov
push
mov
sub
imul
inc
inc
sbb
add
or
cmpsb
mov
lock
out
xchg
popf
inc
fs
enter
adc
push
mov
outsw
stos
sarb
mov
adc
dec
sub
add
jg
cmp
les
mov
ss
push
mov
call
push
pop
jl
btr
jns
divb
and
popf
es
mov
stos
enter
test
out
xor
sbb
dec
and
mov
fisubrs
nop
pop
xchg
test
andb
dec
xchg
sbb
pushf
in
mov
and
mov
pop
testl
cmpsl
or
pop
int3
pop
sub
bnd
loope
ja
pop
pop
pop
aam
lret
call
sbb
sarl
dec
mov
dec
mov
push
sarb
mov
inc
lcall
sbb
insl
push
dec
andb
xor
dec
repnz
movsl
nop
adc
es
adc
test
sbb
xor
cmc
mov
mov
dec
dec
jecxz
andb
dec
sub
je
mov
fists
addr16
lock
das
pop
fistl
call
pop
push
mov
mov
xchg
lcall
mov
push
aas
lea
add
jne
mov
sub
std
adc
std
add
popl
ss
cwtl
xchg
leave
and
popa
mov
cli
jne
into
add
ljmp
aas
addb
outsb
pop
mov
or
cmpsb
mov
jmp
adc
les
repz
fadds
xchg
jle
xchg
pop
popa
das
in
pusha
xor
int3
out
add
sti
rcrb
jmp
add
sub
mov
mov
jecxz
mov
movsb
dec
hlt
dec
int3
xor
sbb
sub
loope
in
test
leave
orb
divl
cmp
or
loop,pn
fisubs
sub
jns
es
dec
std
lret
daa
mov
cwtl
into
sbb
cmpsb
pop
jmp
adc
movsb
mov
adc
stc
call
pop
into
stc
jno
ficomps
xor
js
sub
add
repz
jo
arpl
add
xor
cli
cmp
fwait
cmpsb
das
mov
lret
int
insb
jmp
xor
dec
pop
dec
loopne
js
std
mov
das
xchg
pop
push
fistpll
push
jb
js
inc
jp
mov
popf
lret
jae
push
imul
xor
out
adcb
ret
push
cltd
mov
aas
enter
pop
lret
repnz
daa
orl
sub
push
lds
adc
pop
insb
or
in
lahf
mov
push
add
cmpb
push
outsl
cld
and
mov
int
adc
fdivrp
push
push
cmp
jmp
inc
jbe
nop
or
fmuls
jg
std
out
and
je
mov
mov
mov
mov
jp
xor
push
xchg
inc
push
xor
lea
les
cmp
cmpl
sahf
jge
movb
lods
or
adc
dec
cmp
jl
mov
imul
lods
or
addr16
push
jns
ds
xchg
xchg
wbinvd
or
lcall
ret
stos
call
iret
mov
mov
adc
dec
fucomp
jl
addr16
adc
aam
lcall
mov
std
inc
fstpt
cmp
insl
sub
je
repnz
enter
shll
adc
out
es
inc
cltd
cmp
dec
sbbb
xchg
mov
or
mov
xor
mov
jg
out
je
and
lods
mov
and
cmp
lock
mov
cs
movsb
and
out
xchg
dec
jb
addl
sarl
decl
scas
and
push
jge
lahf
fisttps
inc
push
mov
push
pop
mov
orb
inc
cmc
into
data16
sahf
scas
ja
add
sbb
jp
or
dec
icebp
repz
loop
ret
pusha
les
aam
icebp
iret
push
lret
pop
mov
pop
add
dec
leave
test
out
adc
shrl
rorb
mov
aad
mov
in
inc
cwtl
dec
dec
arpl
jne
xchg
mov
in
mov
cmc
negl
neg
pop
fcomps
add
and
and
adc
pop
jmp
sub
push
ret
pop
xchg
add
pop
and
aas
stos
sti
addl
scas
mov
dec
mov
or
lock
gs
and
xchg
mov
int3
and
dec
mov
mov
dec
lods
xchg
roll
sub
mov
addr16
adc
in
sti
xchg
pop
adc
pop
ja
pop
shll
shll
pop
fcmove
clc
js
and
or
dec
popa
in
cmp
pop
xchg
mov
and
popf
push
jbe
idivb
mov
sti
cmp
pop
dec
lds
movsb
aad
in
loope
lret
addr16
gs
cld
dec
leave
inc
popa
jnp
add
add
sti
add
mov
in
and
outsl
loop
push
sarl
jle
sbb
insb
cmp
stc
jb
or
cmpsl
sbb
cmpsb
aam
std
fstp
or
cmp
ficomps
and
push
xor
outsb
mov
and
test
lret
in
pop
cmova
pusha
adc
inc
bnd
nop
insl
mov
sub
xchg
jae
push
inc
xchg
jne
sbb
push
sbb
pushl
jecxz
mov
xor
jp
in
out
jno
push
jnp
jns
clc
std
mov
addb
mov
mov
pop
xchg
cwtl
mov
cmovb
sub
dec
enter
push
mov
dec
or
jae
sbb
addr16
sub
cs
push
arpl
push
sub
sub
aas
jae
jp
insb
push
sub
outsb
dec
arpl
addr16
adc
out
fsubrl
xlat
into
cmpsb
loop
sbb
rcrl
imul
push
in
xorb
push
aas
and
outsl
xor
or
cmp
sub
cmp
and
dec
cltd
push
sbb
out
sub
popf
rolb
cmp
cmc
jecxz,pn
cmp
jae
inc
out
pop
lahf
xchg
rcll
xchg
xor
adc
ljmp
lds
andb
lock
out
mov
pop
adc
jbe
stc
daa
aaa
jno
cmc
rol
xorb
or
mov
xor
cmp
pushf
rorl
in
jns
jle
mov
mov
dec
inc
das
popf
mov
mov
addr16
dec
in
inc
and
pop
xchg
mov
jae
movsb
and
imul
dec
int3
movsb
jnp
cmpsl
fidivs
jg
pop
xchg
repz
cld
mov
sub
popa
outsb
mov
jae
push
aam
bound
jl
std
jno
cli
sub
bound
add
jno
mov
fnstsw
jmp
add
aam
adcl
xchg
notl
addr16
mov
xchg
icebp
cmp
jp
and
popf
mov
and
icebp
lea
dec
xor
mov
fimull
xchg
cmp
push
sahf
je
mov
lods
lahf
aaa
daa
leave
inc
xor
sub
cmp
mov
cmp
xchg
arpl
push
pop
xchg
lods
bound
dec
orl
rcl
data16
int
out
inc
bound
nop
dec
ja
jg
push
wrmsr
mov
or
mov
pusha
imulb
mov
pop
sahf
lret
fdivl
fisubrl
mov
test
sbb
adc
fs
fnstcw
cld
mov
push
jno
out
insl
adc
pop
push
add
lcall
daa
sbb
push
and
incb
jecxz
lods
add
xor
test
xor
andb
ss
dec
dec
test
in
adc
inc
mov
stc
dec
mov
sub
mov
mov
push
icebp
push
add
xor
test
rclb
inc
in
das
fprem1
testl
imul
in
repnz
adc
xor
pusha
shll
cmp
or
fisubrl
jnp
aad
mov
popf
test
lahf
in
addr16
add
sub
dec
xlat
push
in
fstpl
and
sbb
inc
pop
movsl
int3
mov
dec
and
ljmp
fwait
leave
imul
hlt
testl
fimuls
js
int
pushf
push
cmp
or
ret
jmp
mov
cmp
mov
jne
stos
cld
mov
scas
jmp
cs
das
movsb
mov
in
xor
out
xchg
mov
subl
aas
sbb
fwait
fs
pop
out
daa
int3
inc
pop
cmp
xor
mov
cmpsb
pusha
arpl
jle
sarl
xor
popa
xor
popa
sbb
sbbb
mov
cmp
mov
adc
loop
out
fsubr
flds
shll
xchg
hlt
sub
pop
pop
in
dec
xorl
cmc
xor
jae
lea
ficompl
rol
repz
pop
push
ret
fcmovu
pop
push
push
add
int
mov
fbld
js
out
jmp
imul
mov
in
cmp
or
cmp
jmp
add
andb
loopne
fwait
in
sub
cmp
lahf
and
imul
cmc
xor
call
dec
shlb
cltd
dec
aam
test
pop
clc
nop
inc
or
inc
pop
and
pop
mov
jg
push
aaa
mov
jle
sub
dec
and
push
or
lcall
fisttpl
insb
movsl
jbe
add
rcrb
jnp
mov
mov
mov
rorb
jns
pop
ja
iret
push
cmp
out
pop
ret
sbb
pushf
inc
add
push
xor
std
cmp
js
inc
cmp
addb
repz
xchg
and
push
push
sub
mov
mov
sub
scas
adc
or
push
scas
fistpll
sbb
push
xchg
push
xlat
xchg
pextrw
mov
mov
cmp
mov
cmp
sub
loope
pushf
lock
xor
sub
into
insl
jnp
or
cmpsb
sbb
les
dec
push
dec
mov
out
dec
gs
add
xchg
stos
inc
scas
mov
dec
sbb
push
cmpsl
lock
daa
scas
ret
sbb
add
lret
cmp
lds
push
hlt
cltd
sub
roll
mov
xchg
push
sahf
sub
bound
or
lea
mov
mov
mov
incl
jno
adc
out
jmp
push
cmp
and
daa
mov
lock
or
push
es
push
rorb
shll
and
shrb
mov
cmp
lcall
push
mov
mov
jnp
ljmp
mov
stc
sbb
shlb
push
pop
popa
stos
mov
es
icebp
out
fsts
xchg
mov
inc
lods
mov
and
cltd
pop
scas
push
cmpl
addl
lcall
jecxz
mov
test
pop
and
pop
mov
dec
repnz
repz
aam
in
out
mov
popf
bndstx
push
jp
xchg
dec
xchg
mov
leave
ret
clc
jo
pop
adc
push
dec
or
mov
dec
fldenv
mov
adc
stos
adc
mov
pop
dec
negb
shll
ss
insb
push
adc
xchg
mov
out
daa
mov
cmp
xlat
test
sbb
insb
jbe
jecxz
mov
testb
mov
mov
xchg
push
xchg
lret
mov
std
outsb
mov
and
push
mov
ret
mov
mov
jp
ja
jl
mov
mov
jge
adc
leave
pop
xchg
icebp
add
lods
decl
or
je
repz
js
jmp
or
movsb
pop
dec
adc
test
fisubrs
adc
fmull
jmp
xor
and
cmpsb
and
mov
jbe
movsb
call
cmp
ret
sbb
sub
cmc
lret
sbb
xchg
adc
dec
cld
lods
add
mull
xchg
mov
out
sub
stc
mov
mov
js
in
out
mov
pushf
sbb
pop
leave
jne
je
adcb
sub
mov
pop
sub
push
ja
decb
loop
imul
pop
stos
xchg
sti
jmp
mov
lods
in
mov
scas
test
in
cmp
arpl
xchg
in
adc
mov
jbe,pt
push
push
lea
out
xchg
mov
add
mov
sbb
jo
fiadds
xchg
inc
pop
push
push
pop
test
jle
fwait
inc
jle
pop
shr
test
jge
fs
mov
jl
hlt
lahf
mov
les
jg
ss
jmp
dec
push
and
je
push
loopne
jecxz
mov
mov
or
add
popa
mov
dec
mov
repz
int
or
mov
sbb
add
cmpsl
test
mov
outsl
dec
xor
scas
into
out
ret
stos
insl
fcoml
dec
mov
mov
mov
stos
jle
sub
test
push
rcll
pop
arpl
xchg
adc
push
pushf
sbb
imul
cli
mov
inc
add
cmc
mov
gs
cmp
rorb
jmp
shl
es
mov
sti
in
and
pop
out
mull
aaa
lret
stc
jge
fs
inc
ret
inc
pop
inc
jb
dec
cmp
inc
xchg
xor
xchg
dec
xchg
mov
ret
shrl
pushf
negb
clc
test
or
sbb
mov
inc
jmp
jecxz
test
pop
int3
out
repnz
xchg
or
ror
pusha
in
inc
xor
inc
push
test
push
mulb
mov
stos
adc
mov
mov
pop
sbb
mov
sbb
dec
mov
sbb
repnz
cwtl
sar
imul
push
insb
cmc
or
mov
lds
sub
int3
mov
daa
fisttpll
mov
mov
mov
mov
pushf
fdivs
jmp
jb
dec
insb
mov
pop
pop
stos
sbb
mov
sbb
mov
push
cmp
jnp
call
pop
xchg
je
mov
mov
icebp
sbb
imul
dec
adc
dec
popf
hlt
enter
xchg
jecxz
jp
pop
inc
cmp
out
sbb
mov
aam
movsb
in
lret
pop
pop
flds
sbb
or
loop
popa
sub
addl
imul
jno
sbb
in
lahf
inc
ljmp
iret
sub
dec
sbb
loop
pop
shrl
sbb
push
inc
dec
jbe
adc
jmp
mov
sub
in
sbb
icebp
mov
sbb
xor
rcr
lahf
push
mov
adc
call
inc
mov
sahf
in
push
insb
shlb
repz
add
shlb
gs
sub
add
pushf
pop
lret
jle
jne
cmpsb
mov
cmp
jno
sti
stos
ret
lds
hlt
jge
movsl
jmp
sbb
cmpsl
cmp
xchg
add
jbe
pop
pop
repz
repnz
jo
mov
addps
jnp
call
adc
or
clc
pop
cli
in
mov
xchg
mov
cmp
push
xchg
scas
jg
fdivl
aam
sub
mov
or
cmp
shlb
cmp
out
push
outsb
test
or
mov
scas
xor
and
jp
inc
test
lea
mov
popa
add
mov
dec
daa
pop
jae
in
mov
add
int
aam
dec
jno
test
dec
fistl
add
sbb
mov
mov
data16
sub
aam
cmpsb
ret
rol
sbb
and
sbb
dec
xchg
pop
pop
pop
push
ss
lcall
mov
push
mov
gs
or
dec
cmp
sbb
lcall
icebp
dec
jno
and
cmp
push
nopl
lods
mov
xor
adc
dec
push
or
daa
cmp
test
shll
mov
into
in
fildl
repz
lock
cwtl
push
mov
pop
sub
jae
pop
out
lods
int
pop
sub
mov
add
push
out
mov
outsl
jl,pn
clc
int
and
or
gs
fwait
out
ljmp
inc
mov
pop
xchg
cmp
into
rorl
nop
shrb
jne
mov
sub
mov
in
jg
outsl
pop
lea
sbb
push
pop
pop
mov
xor
into
sub
das
xchg
add
mov
and
mov
inc
rclb
rorl
mov
cli
jecxz
pop
ljmp
cmc
stos
ljmp
pop
adc
adc
jg
andl
cmp
arpl
out
stos
xchg
dec
jns
sbb
mov
xchg
push
push
xor
rorl
pop
xchg
or
jae
lds
mov
mov
mov
jg
scas
push
cmpsb
xor
loopne
iret
pushf
dec
cli
mov
cwtl
add
jae
btc
adc
jecxz
push
or
cwtl
pop
ljmp
lock
shlb
and
or
mov
pop
jecxz
mov
shll
or
xor
insl
pop
je
in
test
fwait
xlat
xchg
das
adc
fdivp
iret
push
mov
stc
inc
stos
data16
or
clts
fisubrl
pop
mov
mov
cli
jns
push
xor
sub
mov
rcr
es
gs
sbb
inc
out
in
mov
inc
xchg
subl
jle
push
mov
push
or
stos
push
and
imul
out
pop
push
das
dec
and
rep
mov
sti
enter
enter
iret
lods
add
daa
or
sub
mov
mov
sbb
mov
push
push
nop
jno
fstp
mov
mov
push
inc
loop
pop
lea
xchg
xchg
fsubrp
mov
cmp
inc
js
push
add
sub
mov
push
fistps
cld
out
enter
stc
mov
jg
xor
cli
and
dec
xchg
pop
mov
push
dec
lock
iret
popf
repz
int
test
repz
pop
int3
pop
push
in
dec
rorl
sbb
and
and
or
push
xchg
test
dec
mov
repz
pop
sahf
movsl
xchg
es
or
xchg
and
hlt
mov
add
push
jns
out
push
inc
adc
adc
mov
data16
lcall
pop
or
or
cld
dec
and
jnp
mov
inc
mov
stos
inc
cmp
test
enter
orl
cmp
inc
push
xchg
scas
hlt
jbe
movsl
rorb
pop
pop
mov
subb
roll
js
call
xlat
sbb
mov
jmp
stos
mov
mov
mov
push
add
cwtl
lods
adc
stos
sub
es
push
test
mov
xchg
jg
push
repz
pop
or
repnz
mov
inc
aam
add
xchg
adc
lret
sub
mov
sub
lods
sbb
rcpps
sub
jmp
fsubp
and
inc
add
roll
shlb
sbb
out
xor
xor
cmp
lea
jle
fdivrl
inc
push
scas
fstpl
cmp
xor
sub
push
rorl
test
jne
fidivrl
sbb
or
gs
add
dec
xchg
push
mov
xchg
add
xchg
sbb
mov
outsl
lods
testb
rcrb
mov
insl
ret
xor
adc
es
or
stos
mov
adc
cmpsl
std
add
loop
scas
inc
lret
daa
jge
xchg
mov
repnz
out
shlb
mov
mov
incb
stos
xchg
mov
imul
sbb
insl
xchg
loope
xchg
sbb
xchg
in
and
mov
movsl
push
aam
inc
fsubrs
scas
push
cmp
scas
or
inc
mov
xchg
notb
imul
int3
adc
mov
xchg
insb
insl
cwtl
dec
andl
pop
ja
icebp
pop
add
add
pop
pushf
std
fisttps
xor
and
dec
sub
aam
cmp
cmp
in
lret
dec
jl
lret
jle
fwait
mov
std
lods
loop
in
add
mov
test
aas
out
xor
adc
divl
jmp
mov
pop
ja
and
popf
inc
mov
cmp
push
les
iret
lock
pop
scas
cmpsl
repnz
cmc
jecxz
cltd
rolb
dec
pusha
ja
jo
xor
dec
push
mov
sbb
push
pushf
mov
dec
test
pop
pop
xchg
cwtl
cmp
jbe
clc
mov
mov
ret
sti
loopne
mov
jnp
jmp
xor
repnz
movl
cltd
xor
jb
roll
gs
clc
sbb
push
stc
or
pop
dec
mov
or
insl
shl
mov
pop
inc
sub
add
fcoms
push
and
add
stc
push
iret
pop
outsl
adc
add
call
test
lock
lods
cmpl
jbe
push
or
sub
fs
data16
sbb
lret
popf
loope
and
mov
pushf
pop
xlat
pop
xchg
inc
adc
mov
mov
jp
inc
inc
mov
push
push
ffreep
test
mov
cmp
mov
bound
mov
pop
paddw
inc
xadd
xlat
sub
gs
test
in
arpl
in
xchg
xchg
daa
pusha
int
sub
jecxz
dec
xchg
pop
mov
sbb
jae
aam
push
mov
jp
mov
jmp
mov
insb
adc
arpl
subl
mov
mov
ret
sbb
xchg
xor
out
addr16
shrl
push
inc
xlat
mov
cld
push
shlb
out
xchg
pop
jp
mov
faddl
and
popa
push
push
mov
jnp
sahf
pop
test
ud1
mov
imul
lcall
mov
and
xor
adc
inc
aad
in
int
jge
fisttps
scas
std
xchg
dec
xchg
std
cld
ss
rclb
pop
sbb
and
dec
xchg
rcll
pop
pushf
roll
lcall
sarb
jo
shll
clc
inc
jno
fistpl
shlb
push
or
jae
adc
xchg
jns
cld
add
sbb
mov
or
push
imul
push
dec
push
enter
push
pop
sub
js
in
mov
sbb
xor
jb
and
mov
data16
xor
fidivs
mov
call
pop
mov
or
jp
mov
outsb
inc
mov
mov
mov
movsb
fisubs
mov
notb
nop
inc
mov
xlat
jmp
lods
jno
cmc
dec
xlat
rcrb
xor
xor
fsubp
mov
cltd
js
fldenv
das
inc
add
push
xchg
sbb
inc
jnp
push
outsl
push
loopne
mov
fwait
scas
sbb
dec
call
adc
repnz
xlat
gs
pop
in
inc
ret
cmp
aad
ss
sub
mov
sub
add
cli
add
mov
lds
cmp
fisttpl
movsb
pop
push
shl
dec
sbb
jae
sbb
notl
mov
mov
stc
and
fwait
jecxz
dec
ret
fsubs
popa
xor
fbld
cmp
nop
jne
sub
mov
out
jb
xor
xchg
jmp
jecxz
mov
ss
cmp
aas
dec
jno
fstps
add
sbb
icebp
cmpsl
cmc
add
shr
mov
int
mov
addr16
aaa
cmc
cmp
int
adc
outsb
mov
adc
push
mov
push
and
outsb
push
sub
add
movsl
lahf
arpl
mov
sbb
aas
mov
divps
test
mov
cltd
aas
or
ror
movq
sub
or
mov
jno
inc
test
mov
insl
adc
cmp
mov
mov
mov
imul
cmp
jb
lea
arpl
sub
les
stc
adc
add
push
fnsave
je
pop
jmp
xchg
mov
fwait
jmp
or
loope
dec
xchg
je
jge
adc
cmpl
cmp
jmp
scas
pop
jns
or
dec
movsl
das
fisttpll
sbb
lds
mov
fcomps
xchg
ja
enter
rorl
mov
pop
rolb
mov
ljmp
daa
incb
jbe
icebp
enter
pusha
sub
push
adc
and
cmpsb
shrb
mov
pusha
and
dec
xor
out
and
leave
daa
sbb
dec
xchg
lods
enter
lcall
xor
sbb
je
repz
inc
lcall
and
dec
xor
add
sahf
cmp
push
inc
xchg
jl
xchg
add
pop
fwait
stos
or
cmp
ficoml
xchg
xchg
js
cli
jno
lock
icebp
xor
jo
and
jns
hlt
and
push
lea
popa
in
cmc
fcmovnu
movsl
lods
push
mov
cltd
stos
test
xchg
xchg
sti
mov
jge
push
orl
jae
add
or
ljmp
or
xor
inc
flds
mov
jg
arpl
inc
test
cmpsb
dec
fnstcw
test
add
stc
inc
dec
mov
cli
or
xor
sub
test
push
enter
test
add
xor
pop
xchg
orb
cli
lret
push
ja
int
sahf
ljmp
clc
test
or
mov
std
bound
lds
mov
jl
cmp
test
test
rcrb
jp
xlat
adc
and
xchg
call
mov
movb
sub
add
mov
btr
jle
cltd
dec
or
sub
mov
cmp
push
mov
shll
add
xrelease
or
sub
and
lret
mov
not
dec
test
pop
adc
or
xchg
push
xchg
mov
data16
sbb
addr16
sbb
aad
sahf
cltd
aam
lds
dec
rcrb
es
add
test
inc
lock
cmpsb
fmull
addl
lea
sbb
lret
xor
dec
pop
sub
jae
scas
je
xchg
mov
sahf
add
imul
int
and
or
sub
lcall
fsubrs
ret
das
add
sbb
std
clc
lods
ret
sub
push
call
cmp
lods
mov
arpl
adc
push
js
bound
inc
adc
pop
sub
adc
scas
xor
xor
lods
in
out
mov
sahf
cmp
add
push
scas
sub
xor
push
orl
mov
pop
or
cltd
push
sub
push
icebp
cwtl
movsl
cltd
sub
aad
test
sbb
mov
sahf
lock
mov
mov
adc
mov
sbb
mov
jl
fwait
repz
ss
and
jle
sbb
fs
stos
push
sbb
xor
lcall
mov
testb
stos
and
jle
shlb
test
dec
or
enter
jne
out
push
clc
pushf
mov
adc
out
aam
cmpsb
xor
outsb
stos
inc
mov
push
adc
add
ljmp
mov
cmp
pop
gs
fsubrs
xor
dec
iret
je
jmp
fstpt
lret
es
push
adc
bound
adc
fs
push
and
sbb
mov
lods
mov
test
sbb
cwtl
inc
push
mov
aam
inc
xor
loope
mov
addl
adc
xlat
dec
cs
mov
pop
mov
call
and
fndisi(8087
into
pop
mov
sub
mov
das
xor
dec
fisubrl
jge
cld
mov
sub
repz
leave
sbb
sub
and
mov
lahf
cs
jae
push
sub
loopne
push
jp
jb
test
jbe
sbb
insb
jecxz
bswap
jns
cs
sbb
stos
mov
jecxz
sti
lock
call
insb
addr16
ret
pop
js
repnz
lahf
or
xchg
and
pop
loopne
insb
call
jae
adc
jno
enter
or
xlat
pop
dec
push
adc
dec
rorb
push
mov
movsl
sti
nop
lahf
mov
dec
dec
iret
and
js
inc
imul
fistpll
sbb
pop
jmp
aam
jl
push
ja
jle
stos
xchg
push
cmp
std
jnp
inc
out
xchg
and
into
addr16
js
fistl
std
or
lcall
xchg
or
out
add
leave
pop
pop
sub
and
fistl
inc
push
ss
push
repnz
scas
into
aam
sub
dec
jecxz
bound
xor
add
mov
pushf
movsb
sub
xor
loope
mov
fucomip
mov
pop
fs
or
push
scas
or
mov
arpl
fists
pop
aas
addr16
xchg
cld
push
mov
movq
mov
xlat
add
lret
mov
out
rcr
out
or
sub
xlat
ja
nop
mov
fs
in
dec
or
mov
andl
pop
orl
nop
lret
push
adcb
jb
gs
repz
mov
test
mov
loopne
mov
movsb
xor
or
lock
jge
push
pop
into
sub
ss
int3
pop
call
jmp
insb
test
outsl
orl
adc
mov
cmp
adc
adc
fildl
cmp
dec
imul
cli
add
sub
push
cld
sub
xchg
sbb
xchg
fists
lret
daa
bound
xlat
shll
push
flds
sub
outsl
bound
mov
enter
adc
mov
cmp
and
pop
pop
pop
push
fwait
mov
mov
xor
sbb
mov
in
cmp
call
shll
fbstp
cmp
jns
mov
xor
jecxz
bound
add
dec
push
aad
sub
jge
xor
dec
mov
push
pop
test
push
mov
add
xchg
adc
mov
pop
js
outsl
sub
orb
xor
inc
aas
inc
es
leave
pop
push
mov
dec
ret
sub
mov
nop
sub
out
push
xor
push
mov
stc
cwtl
pop
mov
jp
xchg
mov
ret
fmull
loopne
sub
lods
repz
shl
in
mov
sub
inc
dec
in
mov
mov
sbb
dec
popa
xlat
scas
mov
push
xlat
std
lods
and
bnd
pop
sti
pop
imul
jb
adc
mov
xchg
setae
xlat
lahf
xchg
xor
je
push
mov
jns
xchg
pusha
jae
cmpl
sbb
jns
mov
add
xchg
xchg
repnz
ss
push
xchg
imul
push
mov
jg
sbbl
fs
inc
jns
jne
fcoms
in
jb
push
inc
jl
pop
aam
xlat
out
leave
movsl
jg
sub
test
xchg
xchg
push
sti
cmpsb
decb
xchg
shlb
mov
jb
repnz
xchg
dec
adc
add
sub
test
mov
xchg
cmp
gs
push
ljmp
jo
aad
mov
xchg
loopne
fsubl
mov
scas
lret
lahf
inc
adc
cmp
scas
xchg
mov
add
push
pop
xor
push
shrb
dec
lret
aaa
repnz
lea
int3
jb
outsb
dec
mov
int3
sbb
inc
sub
call
leave
fwait
adc
xchg
lcall
imul
fwait
mov
cmp
subl
inc
sbb
fwait
fwait
jae
jno
pop
xchg
gs
mov
inc
ja
lahf
into
fnsave
into
xor
fcom
dec
jmp
or
mov
add
repnz
mov
or
sbb
lock
sbb
dec
and
sub
mov
pop
pop
das
in
mov
mov
lcall
push
lods
es
dec
sub
pop
lock
mov
jns
or
daa
mov
mov
fcoml
jno
dec
dec
das
mov
movsb
cmp
or
ljmp
sbb
or
loope
rol
lock
insl
fisubl
mov
in
pop
loop
dec
jo
int
lods
loope
mov
les
or
mov
test
jo
stc
mov
xchg
add
addr16
clc
jge
xor
or
scas
inc
add
add
ficoms
jp
xor
popf
je
aam
xor
adcb
mov
inc
and
jae
out
pushl
adc
jno
xor
push
push
pop
enter
cmp
pushf
stc
pop
loop
div
lret
jns
mov
adc
push
dec
addb
xchg
dec
dec
call
and
xor
xchg
inc
mov
cs
das
or
xchg
jae
inc
sub
and
xchg
and
paddq
ja
xchg
outsb
xor
jnp
punpckldq
mov
sub
xchg
shlb
mov
mov
out
inc
daa
test
xor
pop
int
xor
icebp
or
and
cmp
xchg
and
ljmp
fistl
cltd
sub
jp
adc
xor
xchg
mov
adc
sbb
push
mov
rcrl
fnstenv
mov
or
dec
shrl
add
iret
mov
testb
sub
push
mov
add
repnz
in
stc
test
mov
xlat
pop
insl
xor
cmc
mov
pop
popa
scas
push
sbb
pop
fwait
or
jb
ss
mov
mov
xchg
sbbb
out
movsl
leave
inc
movsl
pop
xchg
outsl
cmp
xchg
sbb
cmc
int3
jb
into
out
imull
push
mov
inc
jmp
jbe
popl
dec
fs
mov
repnz
or
insb
mov
inc
pusha
mov
jl
inc
pushf
jno
push
jge
idiv
cmp
inc
push
sub
xchg
mov
je
mov
inc
lock
fld
dec
and
imul
add
inc
xchg
mov
aaa
call
ret
push
and
mov
adc
add
sbb
xchg
cmp
fwait
cs
lea
and
push
inc
inc
xchg
mov
sbb
lret
into
test
dec
scas
mov
dec
sub
iret
sub
movsl
lods
mov
mov
sahf
jbe
popf
clc
enter
push
fxch
or
mov
push
pushf
sub
mov
loope
cmpsl
ficoml
jno
into
mov
add
pop
pop
inc
int
das
test
sbb
jb
in
sarl
adc
jge
fcoml
jnp
and
mov
loopne
dec
or
xor
cltd
iret
jns
add
jo
fs
sar
jge
stos
maskmovq
divl
mov
sub
or
bound
dec
ret
add
mov
mov
aaa
js
xchg
push
outsl
or
jp
cmp
pop
xor
inc
mov
xchg
cmp
pop
sbb
mov
push
xlat
jg
into
sbb
lcall
pop
stos
test
lcall
mov
mov
call
sti
into
jnp
outsb
mov
cltd
mov
add
jne
inc
push
jg
cmpsb
int3
adcl
pop
cmpsl
out
pop
jbe
cmp
mov
lds
mov
scas
xlat
cmp
out
in
pop
mov
incb
add
stc
ret
push
hlt
pop
enter
ds
sarb
test
pop
jns
dec
sti
gs
mov
imul
lcall
add
mov
loop
cmp
sbb
leave
pop
xchg
and
cltd
pop
push
adc
arpl
push
pop
sahf
imul
xchg
add
dec
fisttpll
shrb
push
dec
movsl
test
arpl
mov
repnz
add
mov
xchg
mov
js
imul
or
xchg
sbb
pop
ljmp
imull
dec
mov
ret
insl
cmp
mov
imul
xor
lock
jp
arpl
sbb
and
fmull
inc
xchg
mov
rcrb
cmp
mov
cmpsl
cmp
add
cli
pop
pop
imul
out
inc
scas
addr16
cmp
call
lods
xchg
adc
mov
lret
inc
jle
stos
scas
fmuls
dec
pop
push
dec
mov
pop
pop
aas
pop
mov
loope
cmpsb
aaa
or
loope
lret
xor
jecxz,pt
mov
test
inc
cltd
sub
cmp
pushf
xchg
or
or
cs
or
fs
inc
aas
push
mov
loopne
adc
jne
and
cmpsl
cmp
jbe
stos
imul
push
pushl
repz
fcmovu
and
pop
dec
pop
cmp
daa
mov
loop
and
xchg
inc
mov
or
sbb
mov
xchg
sbb
and
sbb
adc
dec
mov
mov
movsl
push
movsb
loop
icebp
adc
aad
lcall
aad
adc
push
and
mov
jbe
jg
inc
aad
mov
jbe
xchg
pop
pop
inc
mov
cmp
fists
aad
daa
das
xor
scas
orl
iret
jge
test
inc
xchg
int
inc
add
iret
xor
popf
movsl
movsb
mov
int3
push
and
jl
test
jno
add
push
adc
cmp
rclb
jae
pop
push
pusha
sub
fiadds
mov
adc
jge
icebp
scas
mov
out
push
dec
mov
push
movsl
enter
mov
into
outsl
adc
or
addl
dec
jecxz
fnstenv
out
jnp
stc
lret
push
filds
push
or
sbb
sub
je
hlt
stos
jmp
sub
sub
incb
cltd
popf
rol
ljmp
je
stos
xchg
fcom
icebp
or
pop
outsb
sbb
push
sub
icebp
lret
lods
rcll
faddp
cmp
arpl
gs
jb
gs
fcom
adc
pop
in
jb
pop
mov
sar
test
adcl
lods
test
out
ja
and
and
or
rorb
sahf
fisubrl
xchg
push
cmp
subl
aad
inc
addr16
or
adc
jge
cmp
repnz
pop
jge
inc
xchg
fsubr
push
xchg
int3
dec
add
enter
cld
push
xchg
pusha
lret
leave
dec
ffree
push
mov
jp
pop
xor
push
sub
inc
test
movsb
jmp
jge
bound
shll
cmp
mov
cs
repnz
outsl
push
andl
dec
popa
inc
stos
or
out
into
mov
or
aaa
pop
and
xchg
mov
fcompl
mov
push
pop
inc
sub
add
jne
in
pop
hlt
push
adc
inc
jae
jmp
shr
add
inc
sbb
loopne
cmp
xchg
jnp
mov
cwtl
lret
repnz
inc
push
dec
fdivp
push
fiaddl
xorb
and
push
lcall
jae
ret
cmp
mov
adc
or
insl
adc
lret
les
mov
pop
mov
loope
sbb
sbb
mov
call
sub
test
pop
dec
xor
loope
adc
imul
cmp
cmp
and
jg
push
mov
cmp
popa
fmull
fsub
mov
jne
push
xor
rcrb
mov
out
ret
sbb
lods
adc
push
dec
xor
adc
sbb
ret
xlat
sub
cmp
pop
jecxz
sub
push
mov
sbb
mov
cmp
sub
inc
popf
stos
je,pn
dec
rcll
cmpsb
lret
imul
sbb
sub
sbb
xchg
pop
xchg
filds
gs
lahf
jae
pop
jnp
mov
pop
lret
sbb
pop
aam
adc
les
sti
push
xorl
leave
mov
mov
out
xor
out
fildll
pusha
xchg
xchg
fistps
std
sbbb
ja
cmpsl
sti
pop
lock
mov
adc
bnd
cli
pushf
es
js
xor
mov
xor
xchg
mov
jecxz
mov
inc
push
jbe
fisubrs
outsl
sbb
ljmp
pop
shll
xchg
cmpsl
cwtl
js
aad
xchg
adc
or
aas
fs
iret
sbb
movsl
jae
and
sahf
push
adc
cmp
pop
xor
add
jp
outsl
adc
xchg
test
jg
adc
filds
insb
push
je
sbb
pop
mov
adc
shll
repz
popw
movsl
sbb
dec
xor
daa
jle
xchg
xchg
insl
add
xchg
test
movsb
sub
mov
lea
into
inc
push
daa
dec
pop
cmp
insl
andl
orb
mov
ss
mov
xor
fisubrs
lcall
dec
xchg
pop
jle
dec
cmp
stos
add
incl
or
in
inc
cmp
call
mov
sahf
sbb
sub
scas
mov
mov
fldenv
loop
add
jmp
sbb
stos
fs
push
scas
mov
and
lret
add
ds
jle
lcall
mov
pop
loope
negl
xlat
cmp
cwtl
inc
cli
jge
sub
adc
iret
clc
les
imul
dec
repnz
and
int
fstp
or
jno
cli
mov
or
andb
adc
imul
dec
or
mov
inc
sbb
mov
push
fwait
je
sbb
adc
stc
mov
sti
jbe
fsubrp
jb
pop
outsb
cmp
imul
add
scas
ret
lret
lods
jge
xchg
xor
pop
imul
lods
dec
mov
and
scas
and
outsb
scas
push
sti
incl
mov
and
dec
test
sub
loope
and
fistl
fildll
jnp
subl
jnp
pop
test
cwtl
adc
mov
sahf
lret
or
lret
push
gs
in
dec
pop
and
push
sub
and
cmp
test
adc
cmp
pop
xchg
or
and
mov
and
pop
adc
das
stos
pop
inc
push
mov
mov
pop
inc
add
dec
lods
lods
mov
fidivs
dec
mov
lahf
adc
mov
sub
sbb
mov
aam
mov
sbb
insl
aas
xchg
ret
movsb
fistps
sar
sti
stc
aas
push
jmp
mov
pop
cmp
mov
scas
sbb
outsb
jns
mov
pop
adc
repz
xchg
fists
jae
leave
gs
cmp
jae
mov
mov
adc
cld
inc
pusha
repnz
loopne
jne
jnp
and
leave
pop
popf
ret
loop
test
cmp
mov
mov
sbb
and
pop
xor
add
inc
xchg
xorl
or
movsb
rcrb
movsb
lock
xor
lret
stc
test
inc
shl
pop
sub
cmp
fwait
mov
sub
movsl
inc
call
pushf
pop
add
add
dec
aam
movsb
push
dec
push
xorl
sub
addr16
cld
fildll
cld
lds
lods
movsl
stos
mov
lock
sbb
inc
idivl
in
int
mov
movsb
add
stc
jmp
lds
frstor
cmp
push
inc
out
mov
sbb
test
pop
movsl
cld
ss
les
testl
mov
jnp
and
sbb
cwtl
stc
imul
pushf
loop
pop
aad
push
test
jnp
loop
out
scas
and
mov
and
cmp
add
mov
in
std
insl
jae
jbe
sub
push
pop
mov
mov
flds
aad
pop
sub
pop
cmpsl
xchg
out
push
inc
inc
repz
ds
sbb
inc
stos
popf
pop
out
jmp
pop
push
daa
jns
and
outsb
dec
jl
inc
lods
cmc
sub
inc
movsb
mov
mov
clc
pushf
insb
roll
pop
imul
je
xchg
inc
dec
js
xchg
xor
push
les
adc
sarl
jg
xchg
sub
icebp
push
mov
xor
aas
popa
imul
imul
popf
call
into
and
or
aam
adcl
addl
fists
jmp
icebp
adc
sbb
out
pop
pop
and
mov
mov
test
xchg
jmp
mov
jp
mov
aaa
ja
jnp
mov
jne
cld
adc
cwtl
popf
jae
mov
or
adc
inc
ss
xor
psubusb
cmp
dec
jns
xor
jmp
daa
xchg
or
inc
mov
cmp
stos
dec
es
sbb
lods
jle
lret
and
sbb
jecxz
ja
push
adc
push
mov
cmp
daa
and
rorl
push
es
or
daa
std
xchg
xlat
jecxz
xlat
jne
or
sbb
mov
or
or
lret
es
sbbb
addl
sbb
push
stos
inc
sahf
mov
leave
andb
icebp
ja
inc
pop
add
sar
movsl
test
std
stos
andb
shrl
aad
jno
int
ja
mov
adc
test
filds
fstl
inc
jnp
loope
mov
or
pop
dec
jns
je
or
fs
inc
fistpll
sub
sti
inc
mov
xlat
in
adc
cmp
ds
cli
mov
es
sbb
gs
push
insb
in
fidivrl
inc
push
mov
int
es
pop
adcl
mov
and
jne
mov
mov
dec
vsqrtps
cmp
cwtl
xor
xor
addr16
clc
sahf
pop
cmp
sbb
loopne
dec
je
mov
jle
dec
xchg
push
mov
mov
mov
insb
adc
ja
cli
in
daa
loope
nop
add
push
push
test
dec
scas
std
stos
cld
inc
fmuls
cmpb
call
pop
test
sahf
add
mov
xor
xor
cmp
repz
sti
push
test
and
out
jae
cld
mov
push
xor
add
or
cmp
inc
xchg
jecxz
icebp
loopne
cli
xchg
pop
negl
negl
sbb
aam
movsl
shll
xor
in
loop
push
data16
xchg
add
xor
adc
fidivrs
mov
and
fdivrs
cmp
push
rcr
out
popf
cmp
pop
stos
insb
es
out
insb
cmp
mov
push
fistpl
pop
inc
bts
mov
pop
ret
icebp
iret
vmovd
inc
xor
xchg
int3
jecxz
leave
adc
cwtl
idivb
mov
adc
sub
int
jnp
xchg
rcl
in
sub
push
daa
cmp
pop
insb
imul
adc
mov
jmp
pop
pop
dec
sub
jno
aad
ja
aaa
scas
lods
loop
sar
mov
xchg
out
in
addr16
adc
adc
call
loop
xchg
or
iret
test
sbb
int
xor
inc
mov
shl
out
jle
xor
lahf
int3
lea
sarl
and
mov
es
int3
jb
rcl
scas
mov
xchg
adc
cld
pusha
jae
test
sub
stos
shl
repnz
or
add
mov
mov
mov
cmp
in
std
or
es
adc
and
out
xchg
cmp
out
lock
je
mov
push
xor
cli
lret
into
push
push
inc
add
pushf
mov
sub
cmp
insl
fdivr
cmp
vzeroall
xchg
test
jl
lock
mov
jne
lahf
or
push
pop
xchg
sti
mov
dec
filds
jnp
call
mov
js
cmp
int
int3
stos
out
iret
rcrl
lcall
inc
add
pop
sbb
xchg
cli
inc
dec
cmp
pusha
pushf
clc
push
xchg
std
insl
lret
pushf
add
pop
flds
cmp
in
xchg
sub
decb
xor
jle,pn
pop
dec
xchg
out
in
movsl
push
sti
mov
push
lock
in
into
cltd
mov
push
add
daa
or
lret
xchg
shlb
pop
enter
shll
push
sub
shrb
lock
xor
xchg
repz
mov
in
push
mov
hlt
das
test
mov
lahf
faddl
cmp
dec
sbb
mov
pop
lahf
jno
out
test
pop
ficomps
lret
xchg
scas
out
and
lcall
ret
xor
cmp
sbb
movsl
sbb
je
or
jle
add
es
mov
pop
inc
aad
mov
mov
sub
test
mov
in
leave
mov
insl
cmpsb
subl
mov
in
pushf
out
lret
scas
mov
mov
jg
adc
je
popa
mov
xchg
xchg
sahf
pop
inc
out
cltd
outsl
cmp
dec
cmp
sbb
add
repz
mov
sahf
mov
sub
in
xchg
shl
sub
push
ret
mov
or
stos
int
out
das
sub
mov
adc
adc
in
jno
lea
mov
pop
cmpsb
lcall
push
cmc
sbb
cmc
push
cwtl
or
fldt
test
mov
imul
cmp
aas
dec
inc
xchg
pop
lods
mov
ds
and
cltd
and
sti
and
dec
leave
mov
pop
adc
xchg
lret
inc
movsb
cli
test
ja
dec
popf
cs
mov
jp
sbb
leave
ret
push
lcall
mov
test
add
call
cmc
inc
pop
jmp
ja
xchg
inc
xchg
and
jmp
or
mov
pusha
xor
inc
jns
mov
divl
outsb
testb
mov
subb
cmp
xor
mov
dec
out
imulb
clc
loope
fcomps
jmp
push
lods
arpl
push
mov
outsl
pop
popa
mov
test
mov
cmpsl
mov
cmp
or
and
es
adc
cld
lds
adc
add
mov
pop
push
out
call
pop
mov
in
xchg
adc
fwait
mov
inc
fcmovne
push
and
push
in
xchg
sub
jb
xor
xchg
mov
mov
std
daa
outsl
into
sub
lock
jo
dec
movl
lahf
cmp
mov
inc
dec
ffree
jp
pop
aaa
xchg
mov
outsl
into
and
jb
pop
xchg
mov
jo
add
adc
rcrb
add
xchg
cltd
sbb
and
in
xlat
mov
sub
cs
adc
mov
or
sbb
ds
xor
inc
push
and
ljmp
adc
sub
mov
sbb
cmp
sbb
cli
mov
int
insb
xor
cmp
addl
mov
pop
jmp
cld
repnz
outsl
aaa
jno
mov
lret
jmp
adc
cs
enter
jbe
es
and
sahf
sub
and
pop
jns
mov
mov
imul
push
dec
and
jle
bound
push
leave
lret
or
fcomps
rcrb
xchg
jg
dec
push
mov
mov
jno
pushf
add
mov
lock
xchg
pusha
add
inc
lret
rcr
jp
ljmp
rcll
inc
inc
out
pop
enter
shrb
das
add
dec
jns
lret
outsb
xchg
lock
testl
jl
hlt
cli
mov
stos
mov
leave
jne
out
sahf
leave
mov
jne
mov
lds
les
adc
js
aaa
shrb
push
adc
test
decb
push
push
mov
lods
leave
ljmp
pop
divl
out
imul
ret
mov
add
in
stc
push
shrb
pop
mov
gs
fimull
stos
and
xlat
mov
in
stos
lods
bound
daa
cmpl
iret
push
shlb
loop
pusha
dec
jbe
out
scas
pop
sbb
jno
scas
ja
lods
adc
sub
pop
push
out
fucomip
jge
jmp
jnp
pop
mov
repnz
inc
sahf
rcl
dec
inc
pop
jl
mov
push
xlat
or
jno
ljmp
ja
xor
jmp
movsb
jp
push
cmpsb
xor
popa
push
imul
pop
insb
into
je
pushf
fisttpl
mov
dec
mov
pop
mov
mov
iret
jbe
cmp
sbb
addr16
out
faddp
sti
rolb
popa
dec
xchg
insb
cmc
inc
cwtl
pop
or
mov
out
mov
lock
xlat
ss
sbb
push
scas
stos
lds
mov
popf
push
xchg
lock
push
sub
rorb
aad
mov
fistps
add
cmp
int3
and
mov
stos
xchg
and
mov
sbb
jl
push
xor
lret
mov
icebp
mov
xor
cmpsl
dec
or
xchg
cmp
and
inc
cmp
pminub
outsb
flds
sub
cmpsl
xlat
sub
inc
jns
pop
jbe
scas
push
jg
or
jg
add
in
mov
and
pop
mov
add
or
cmpb
mov
dec
push
mov
mov
inc
cmpsb
jo
leave
fwait
aaa
dec
shld
cmp
xchg
add
sti
jbe
and
mov
scas
pop
jno
lods
and
lahf
cmp
xchg
jno
in
cmp
dec
ljmp
movsl
icebp
dec
shlb
pusha
push
mov
inc
lea
pop
cwtl
dec
push
jge
clc
sub
mov
mov
xchg
loope
insb
cmp
mov
faddl
ds
inc
push
lret
mov
xchg
push
in
and
cmp
pushf
lods
pop
ljmp
insl
xor
scas
aas
pop
mov
lahf
or
dec
call
repnz
sub
sbb
popf
rolb
out
jb
xchg
pushf
scas
adc
push
jp
std
xchg
mov
and
test
arpl
mov
in
cmc
loop
jo
dec
inc
shll
dec
das
pop
idivb
xor
lret
pop
aas
flds
mov
xchg
ret
pop
loope
and
inc
and
dec
push
xchg
movsl
push
mov
fs
push
rolb
ret
sbb
jne
sub
jb
cmpsl
and
and
pusha
xor
dec
jns
cmp
into
aam
jb
mov
test
aad
mov
jge
inc
dec
mov
je
or
inc
fxam
sbb
pusha
scas
andb
push
xchg
lea
cmp
shr
in
dec
stos
loopne
xchg
and
es
dec
jb
loope
repz
adc
mov
push
insl
out
cmp
sub
pop
cmpsl
clc
cwtl
xlat
in
and
ficoms
into
dec
cmpsl
xchg
push
sub
pop
js
mov
fistps
cwtl
jle
movsl
jne
enter
push
xchg
push
cmpsb
call
mov
fadd
sub
pushf
dec
lcall
mov
dec
dec
fstps
pinsrw
dec
sbb
outsb
stos
cmpsl
mov
cmp
and
dec
insb
cmpsb
std
mov
stos
and
aaa
fadd
fidivrl
enter
push
mov
lds
outsl
mov
inc
xor
loopne
mov
push
add
dec
hlt
xchg
add
popf
repnz
lahf
mov
loopne
dec
dec
push
in
mov
xlat
test
out
sub
xchg
xor
mov
jg
movsl
cmpsb
das
jnp
add
imulb
mov
mov
fcoms
das
pop
mov
dec
inc
dec
push
adc
clc
dec
ljmp
adc
out
lcall
push
sub
sub
clc
filds
or
push
out
leave
inc
call
mov
adc
lds
sub
push
ror
std
enter
andb
mov
ficoms
bound
fsubl
xchg
in
movsl
mov
stc
jno
push
loop
and
mov
std
push
mov
repz
pop
imul
pop
cmp
push
cmp
mov
insb
cmpsb
adc
les
sub
sbb
cmp
insl
pop
rorb
jo
pop
xchg
pop
sbb
jno
int
sbb
cmp
ja
inc
testb
adc
es
in
push
lock
icebp
pop
xchg
icebp
lock
mov
mov
mov
cmp
jl
das
pop
sbb
out
stos
and
mov
sahf
fcoml
in
rcrl
xchg
pcmpeqd
xor
ficompl
movsl
imul
dec
pop
push
aas
sarl
rorb
jmp
mov
testb
enter
mov
arpl
sub
mov
dec
repnz
mov
jnp
scas
ja
push
or
push
je
dec
mov
rorl
inc
lds
adc
jl
std
mov
xor
subl
in
mov
inc
and
push
mov
sahf
movb
jb
ss
cmp
push
lock
test
ficoml
outsb
rcrb
sbb
push
pop
iret
jg
jecxz
mov
add
jg
inc
or
push
imul
aam
imul
pusha
jno
loopne
test
mov
sbb
or
push
in
lcall
push
ret
push
sbb
pop
les
cmp
pushf
jbe
inc
aam
dec
clc
add
test
imul
inc
inc
pop
jb
nop
adc
mov
dec
cmp
out
jge
cmpsl
and
xchg
lahf
and
adcl
std
dec
ds
pop
xor
neg
dec
sarl
sbb
xlat
mov
push
or
inc
push
jecxz
data16
mov
pop
orb
mov
jp
ds
pop
and
push
xchg
mov
sub
mov
aas
xchg
aas
js
sbb
movsb
jge
test
cmp
lcall
or
pop
mov
dec
xchg
test
mov
sti
aam
cmpsl
sbb
in
outsb
mov
ficoms
outsl
fpatan
push
pop
leave
pop
sbb
jecxz
lcall
stc
popa
adc
add
nop
mov
xchg
ss
push
mov
or
xchg
icebp
cmc
mov
fsub
sbb
data16
stc
xchg
mov
bound
loopne
fisttps
stc
lcall
pop
loop
jl
inc
sub
stos
test
xchg
add
dec
adc
inc
testb
aas
inc
push
jg
push
rcr
cltd
fnsave
push
rcrb
out
aas
inc
push
mov
out
mov
jae
outsl
test
and
bound
or
and
push
iret
movsb
sahf
repz
sbb
xchg
add
and
cmpsb
cmpsl
cmp
push
into
and
inc
pop
jmp
and
ljmp
in
add
orb
movsb
adc
push
push
stos
lcall
fs
cmpsb
bound
dec
push
pusha
add
lds
push
test
jb
adc
push
fadd
icebp
insl
fldl
idiv
das
jno
cmp
es
data16
mov
adc
jb
les
sti
in
sbb
clc
inc
and
arpl
cmp
divl
cmp
arpl
mov
xchg
out
clc
xchg
mov
mov
jo
lds
mov
out
test
push
fcoml
lcall
ljmp
loopne
add
outsb
repz
adc
push
mov
xchg
mov
and
bound
fwait
enter
lahf
add
xchg
cmp
rorb
clc
aaa
dec
movsl
popa
movl
mov
enter
ja
pop
pop
xchg
jmp
jns
daa
out
mov
jae
dec
movsb
imul
test
mov
out
jno
pop
mov
push
mov
cmc
std
pop
xchg
push
pop
int
sbb
cmp
pushf
ret
mov
aam
addb
pop
scas
adc
rcll
cbtw
add
mov
in
sub
lods
int
fsubr
repz
jo
sbbl
bound
outsb
test
dec
lea
loop
sahf
xchg
lcall
in
jp
jne
inc
sub
out
lock
cmp
shll
xchg
stc
rolb
scas
movl
pusha
out
push
cmp
lods
xlat
push
adc
or
sarl
mov
ret
dec
pop
jne
lods
arpl
loopne
mov
xchg
dec
xor
push
int3
sbb
mov
imull
movsb
fwait
rolb
xchg
mov
mov
push
push
sbbl
adc
jecxz
mov
enter
pop
and
mov
cmp
xor
les
xor
int
pop
sub
insb
pop
fs
xlat
mov
xchg
mov
fwait
pop
arpl
test
push
and
mov
mov
int3
sar
pop
rorl
mov
and
add
xor
test
pop
jne
out
mov
and
and
roll
cmp
ds
insb
push
sbb
jg
nop
cmp
jae
ret
pusha
cwtl
in
negb
push
mov
fsubp
push
xchg
mov
xchg
dec
and
insb
test
lods
mov
into
mov
ss
jns
push
hlt
pop
jns
lcall
arpl
mov
lock
test
imul
mov
push
mov
inc
jns
daa
mov
sub
push
dec
movsl
push
lret
stos
xchg
jmp
jmp
adc
nop
cmp
dec
data16
jecxz
xchg
rcrb
cmp
les
fldl
mov
pop
xchg
nopl
cmp
outsb
or
rclb
imul
dec
out
jno
pop
push
dec
enter
imul
jle
xlat
roll
jbe
int
stos
ret
xchg
mov
add
inc
dec
aad
jne
ss
ret
push
mov
lods
lea
mov
xchg
dec
pop
jne
adc
xor
pcmpeqb
call
add
push
orl
jecxz
jmp
cltd
sbb
mov
cmp
push
and
dec
cmp
adc
aam
into
test
mov
cli
adcb
shl
mov
rcll
add
shll
xorb
leave
leave
mov
or
add
das
push
mov
call
gs
or
aad
enter
pop
xchg
add
push
or
mov
mov
ret
sub
lods
xchg
jns
mov
in
subl
sti
test
push
rolb
lret
push
sbbb
imul
cmp
cmpsl
addb
push
xchg
mov
shrb
into
inc
lcall
xchg
loope
jmp
mov
cmc
add
fiadds
add
jnp
test
sbb
xchg
sub
or
sub
test
lahf
jmp
loop
sbb
loopne
sub
add
add
mov
jo
xor
pop
adc
adc
lret
and
xchg
test
outsb
pop
adc
sbb
pop
sbb
ljmp
jecxz
out
jbe
or
fidivrs
push
testb
mov
sarb
or
mov
jb
mov
mov
fistpll
comiss
aad
pop
dec
mov
mov
inc
nop
out
mov
mov
bound
xor
jbe
xchg
daa
cmp
mov
mov
xchg
adc
push
mov
pusha
fmull
mov
ss
mov
lock
sub
pop
jb
ret
fimull
sbbl
push
mov
mov
iret
and
push
movsl
lcall
std
jns
iret
jnp
or
dec
or
sbbl
xchg
jl
cmp
mov
add
lds
mov
mov
loop
cmp
sbb
mov
push
xchg
ds
xor
and
cmp
fisubl
mulb
jo
inc
push
je
into
sub
aaa
popa
mov
jns
mov
mov
loop
fs
repnz
push
cmpsl
test
push
jg
mov
jle
jge
lahf
bound
lock
bound
mulb
cltd
mov
mov
xchg
adc
lock
dec
jnp
xchg
mov
and
xor
mov
cmc
pop
sbb
enter
dec
in
dec
mov
nop
dec
sub
push
mov
lock
testl
out
aad
mov
or
les
xlat
sarl
nop
and
add
sbb
clc
jne
mov
or
loopne
and
jnp
fcoml
jecxz
loopne
sar
and
xor
jg
jns
iret
adc
rclb
jecxz
hlt
js
inc
popa
mov
cs
imul
add
jp
xorb
xor
stos
mov
pop
jno
jb
cmc
cmpsb
or
push
and
or
bound
negl
mov
test
lock
scas
enter
xor
sbbb
mov
ficoms
dec
adc
add
or
xor
mov
nop
inc
stos
je
and
popf
dec
lahf
fisubl
ljmp
sbb
outsb
xlat
adc
inc
sbb
pop
pusha
sub
mov
adc
sbbl
insb
testb
out
lret
inc
movsl
loope
push
scas
or
out
xchg
fucom
push
jmp
ds
and
xor
mov
sti
push
popa
cld
xlat
jge
xlat
outsl
mov
cmp
pop
test
std
or
addr16
aaa
push
jae
push
xor
pop
mov
lock
xchg
and
out
sub
hlt
arpl
mov
pop
push
cwtl
outsb
out
adc
jl
cmpsl
jo
pop
loopne
jl
lods
xor
test
adc
mov
xchg
add
icebp
jae
cltd
push
iret
push
cltd
lock
cmp
cmp
jno
dec
call
repnz
xor
add
cmpsl
sbb
or
scas
and
lret
aas
jle
or
sbb
ds
and
nop
or
jne
jl
xchg
cmp
aam
das
push
cmpsb
pop
add
add
addr16
sub
add
and
xor
out
call
push
xor
push
sbb
jmp
push
movsb
in
jbe
sbbl
mov
lret
in
add
jno
es
push
xchg
mov
fldenv
and
cld
testb
insb
push
nop
das
fcomp
das
jl
fnstsw
scas
addr16
or
imul
xchg
push
jl
mov
xor
ret
out
push
out
aam
add
mov
xchg
ds
cmpsl
cmpsl
push
lret
movsb
mov
mov
jl
jmp
test
pusha
jl
adc
loop
mov
incl
in
cmp
sbb
out
jns
mov
jg
sub
mov
les
cmp
popa
testb
ret
xchg
leave
or
or
fisttpll
icebp
pop
pop
ror
pop
mov
jmp
sarl
and
cs
int
sub
mov
repz
push
mov
adc
add
push
push
cmc
test
sub
jp
iret
mov
mov
xor
inc
sub
pop
les
mov
xor
rcrb
addr16
lcall
popa
les
mov
dec
xor
or
mov
sbb
mov
in
lea
scas
xlat
jmp
rcrb
cs
xchg
jbe
inc
dec
adc
adc
inc
lea
popf
js
pop
lea
aas
pop
pop
sarb
jg
sub
lahf
and
das
mov
fistpll
xchg
lea
pop
aaa
xchg
lret
cmp
rcl
add
lods
test
arpl
nop
aam
adc
scas
std
out
insb
out
jp
les
jb
bound
add
or
roll
loope,pn
outsb
test
xor
cmp
mov
ja
push
aad
lret
adc
nop
stos
test
mov
and
mov
mov
adc
xlat
mov
decb
and
je
or
xchg
invd
shrl
sub
sbb
lret
test
nop
mov
hlt
xor
or
fwait
cmp
or
adc
sahf
add
mov
or
aaa
pop
jl
or
mov
test
mov
in
sbb
shrl
stos
add
flds
data16
fldl
sub
movsb
push
jb
mov
jmp
or
icebp
and
xchg
push
mov
xchg
mov
xor
mov
out
inc
and
mov
inc
cmp
xor
scas
fists
cld
movb
std
mov
dec
mov
iret
leave
jno
mov
stc
gs
pop
jge
mov
and
mov
lods
mov
pop
rcll
out
icebp
fdivrl
jae
cmp
mov
rcrb
mov
incb
jbe
pusha
xor
int3
data16
adc
adc
cmp
adc
sub
pop
jb
jl
loop
js
js
sub
out
insb
loope
scas
jmp
stos
jne
out
push
sbb
arpl
sub
pop
adc
mov
push
and
push
add
in
arpl
aam
and
adc
aam
push
lds
xor
movsl
sbb
pop
mov
out
adc
fimull
mov
push
or
pop
xchg
and
xor
js
push
adc
mov
inc
xchg
lods
adc
dec
call
push
pusha
and
mov
mov
negl
lcall
inc
les
push
push
orb
mov
leave
insl
inc
xor
test
xor
pop
jmp
push
jns
cs
sub
mov
push
jnp
push
insl
sbb
pusha
push
repnz
xchg
test
lcall
gs
js
imul
ret
adc
out
and
xchg
loop
mov
sbb
aaa
pop
cmpsb
adc
push
mov
adc
or
daa
inc
mov
mov
lret
notl
fists
dec
cli
xor
adc
jle
add
loope
fsubl
int
lret
xor
js
jge
mov
lock
push
xor
push
pcmpgtw
int3
iret
int3
in
xchg
xchg
out
jge
cld
sub
push
jae
mov
jns
sub
mulb
aaa
inc
xor
pop
adc
or
arpl
iret
test
mov
pop
adc
push
cmc
xor
sti
ds
and
nop
test
jb
sbb
mov
adc
outsb
scas
dec
xor
outsl
sbb
xchg
sti
push
adc
outsb
in
dec
cmp
cwtl
outsb
xor
inc
sahf
bnd
xchg
mov
push
sub
jmp
test
dec
mov
or
subb
pushf
add
mov
jl
lea
leave
pop
xor
pop
sbb
stos
mov
pusha
cmc
mov
dec
mov
test
push
aas
cmp
clc
int3
out
stc
jb
inc
sbb
add
shl
cmp
lea
notl
repz
cmc
lods
pop
loopne
sub
cwtl
roll
insl
mov
inc
lods
sti
jbe
scas
ret
cmc
pop
pop
inc
xchg
mov
push
in
popf
mov
mov
sbb
and
sbb
call
movsb
jge
or
or
and
stos
outsb
call
nop
sub
js
dec
mov
mov
mov
icebp
xchg
mov
popa
inc
push
push
inc
push
dec
xchg
dec
testb
jg
add
outsb
mov
stos
popa
sub
push
adc
jo
xor
mov
fbld
push
push
jle
mov
sbb
lds
xor
and
mov
sbbl
cmp
loop
sub
out
sarb
sub
mov
fucomp
and
lret
pushf
pop
loope
xchg
or
fisubrl
and
cmp
aad
xlat
lds
mov
jmp
out
in
les
popa
pop
aas
cmpsl
mov
cmp
push
push
jnp
inc
push
out
stos
jg
mov
sbb
movsl
popa
and
xor
add
mov
sub
scas
push
ret
inc
es
mov
xchg
mov
inc
dec
dec
and
addb
sub
test
mov
sbb
lcall
inc
setg
pusha
pslld
xor
pop
js
xchg
xor
in
push
xlat
sbb
lods
xor
fdivs
loope
rorb
cs
sub
imul
sti
adc
cmp
adc
icebp
or
pop
mov
jne
cmpsl
into
cmp
mov
add
into
push
cmp
popf
dec
sub
notb
lea
inc
insl
lods
lock
jle
cmpsb
push
dec
int
negb
out
out
lods
and
xchg
add
xor
insl
cmp
ret
and
mov
outsl
mov
xor
pop
xor
adc
das
jl
dec
stos
test
pop
xchg
aam
or
add
cmpsb
xchg
add
and
mov
mul
cmpl
popa
lret
inc
xor
sbbl
add
dec
movsl
sahf
lret
dec
stos
mov
xchg
enter
cmpsb
inc
mov
mov
test
rcrb
test
mov
adc
and
xchg
cmc
hlt
test
clc
arpl
out
sub
sbb
addr16
cltd
sbb
xor
loopne
adc
shrb
pop
push
cmp
insb
mov
cmp
lret
clc
or
mov
addb
movd
rorb
dec
jge
cltd
imul
push
aas
xchg
jge
sbb
inc
dec
xor
dec
lods
jecxz
push
shrb
mov
insb
lahf
jmp
xor
dec
xor
ret
dec
push
addr16
les
wrmsr
pop
test
push
sub
out
mov
and
dec
push
lret
pop
out
divl
dec
dec
mov
pop
ret
stc
sbb
rcr
aam
ja
mov
in
cmpsl
cli
add
adc
fbld
clc
push
stc
xchg
dec
ds
sbb
and
or
fistl
or
sub
cmp
push
iret
test
mov
popa
push
clc
sti
pop
dec
sub
mov
inc
mov
rcl
movsb
jge
push
int
outsb
or
test
stos
es
loopne
jle
mov
repz
movsl
sahf
pushf
cmp
hlt
cmpsb
rorl
inc
sub
test
pop
mov
sub
sub
push
sub
mov
rorb
sbb
ja
jmp
lahf
cli
xchg
and
sti
xchg
repnz
sti
sub
ret
xor
and
or
or
or
push
icebp
sub
scas
cmp
dec
sti
sub
shlb
xor
imulb
mov
test
pop
jmp
xor
add
icebp
fistpl
jle
dec
cmp
pop
add
pop
mov
iret
xor
push
movsb
jg
inc
clc
icebp
and
mov
add
mov
mov
aad
dec
sub
and
pushf
lock
and
loop
xchg
js
pop
ljmp
cwtl
mov
jo
push
jne
jns
jno
mov
xor
mov
xor
ljmpw
xor
push
icebp
jnp
or
sbb
mov
je
shlb
rcl
cmp
xchg
mov
inc
jmp
sbb
movsb
insb
push
or
pop
mov
jne
fnstenv
dec
mov
xlat
data16
enter
sub
jp
jmp
js
rcll
enter
sub
out
xchg
repz
sbb
push
pop
and
cmp
and
lock
in
xchg
stos
cmp
aad
jmp
movsb
repnz
cmpl
cli
ljmp
adc
lods
mov
adcb
inc
cmpl
add
xchg
push
enter
add
xor
add
inc
imul
repz
notl
mov
ljmp
aam
and
xchg
ja
and
add
imul
leave
aaa
xorl
inc
dec
loopne
add
cmc
xor
inc
movb
jne
fildl
sub
add
stos
push
lock
or
fimuls
xlat
adc
jge
mov
outsl
call
sbb
test
add
sbb
lock
inc
adc
jl
mov
add
and
cmpsb
jl
mov
outsl
xrelease
mov
xchg
sbb
clc
into
mov
add
hlt
test
mov
js
dec
inc
dec
test
cmc
mov
add
out
movsl
inc
insb
jge
es
mov
fnstenv
fld
mov
jae
or
das
outsl
inc
pop
jb
adc
jecxz
xor
ds
stos
ret
shl
cmpsl
mov
in
out
test
xor
punpcklbw
mov
cwtl
xor
xchg
sub
mov
lcall
xor
mov
jo
jp
jae
shll
scas
push
mov
and
fs
jno
cmp
int3
push
xlat
adcl
fisttps
lahf
movaps
mov
out
js
leave
or
push
cld
inc
jb
adc
test
sub
dec
mov
pop
push
mov
sahf
push
push
xor
xchg
fistps
add
pop
and
or
xchg
cmpl
push
lods
pop
sbbl
adc
sbb
sti
out
sbb
mov
mov
xor
div
ret
das
scas
fbstp
sub
dec
dec
aaa
insl
mov
fcomp
xchg
fdivrl
push
mov
cltd
scas
sub
add
popf
in
mov
sub
cmc
testl
xchg
xchg
jb
push
imul
sahf
sti
scas
aad
add
or
or
fwait
cmp
loop
jbe
in
and
pop
xor
push
loopne
mov
cmc
mov
cmpsl
cmp
push
mov
or
addb
and
cmp
out
out
mov
movsb
cs
ret
test
sub
cmpsb
movsb
filds
lock
in
cmp
mov
aaa
dec
gs
xchg
inc
clc
sbb
push
pop
inc
pop
dec
dec
iret
rcrl
sub
cld
dec
stc
test
jae
sarb
cmp
dec
mov
xor
rorl
imul
lds
mov
sti
fimuls
enter
outsl
stos
cld
push
js
sub
add
pop
mov
fs
inc
xchg
and
or
outsl
or
jmp
out
aam
rcr
mov
lcall
shrl
out
sbb
mov
nop
mov
loop
mov
cmp
xchg
pop
sbb
sbb
or
sti
jnp
jle
mov
insl
push
std
insb
sub
sti
arpl
mov
pop
mov
das
cmpsb
pop
mov
rolb
cmp
lcall
mov
dec
inc
dec
inc
adc
jb
fcmovne
leave
out
int3
dec
pop
ds
repz
adc
xchg
or
jge
cmp
mov
pop
imul
repz
cmpsb
mov
movsl
addl
hlt
in
or
sti
cmp
sbb
cs
xchg
xchg
xchg
dec
pop
jl
out
push
lahf
mov
mov
sahf
and
rcrb
fdivrl
cmpsl
mov
or
xchg
add
scas
push
out
mov
shll
aaa
out
and
xor
loopne
jbe
je
pop
mov
mov
pop
subb
out
in
call
sbb
subl
mov
cwtl
sbb
and
leave
lahf
and
mov
cmpsb
inc
imul
shlb
or
jp
fldenv
pusha
push
add
test
or
out
inc
icebp
sbb
enter
mov
mov
out
idivb
into
adc
add
pop
mov
cmp
xchg
mov
mov
sbb
inc
pop
test
dec
push
or
adc
or
push
dec
push
or
mov
jns
movsl
mov
sub
les
nop
or
mov
pop
arpl
push
nop
xchg
mov
adc
sbb
ficoml
or
es
mov
sub
xchg
add
insl
aam
add
or
inc
in
fisubl
fsubr
cmp
sbb
xchg
stos
sub
sub
negb
or
jg
push
stos
stos
outsl
ljmp
popa
xor
fistpll
cmp
sub
jb
stc
xchg
sub
push
push
sbb
mov
push
sbb
lcall
push
bound
or
nop
jl
or
rcll
arpl
push
or
inc
stos
mov
fimull
in
pushl
sahf
scas
add
ret
cmpsl
dec
jmp
leave
sbb
push
std
arpl
cmp
jmp
xor
fldcw
pop
inc
push
pop
mov
ss
or
sub
jp
sbb
cltd
push
inc
shrb
xchg
xchg
test
leave
out
ljmp
mov
stc
pop
pop
jmp
nop
aas
xchg
int
js
outsb
inc
fnstcw
leave
aaa
add
cmp
and
mov
test
outsb
mov
mov
cli
xor
enter
xchg
inc
sbb
out
les
rolb
insl
test
add
loop
cmpsb
das
inc
std
movsb
add
xor
inc
test
fsubl
loopne
ja
int3
jnp
sti
std
pop
leave
pop
add
or
test
scas
out
sub
mov
xchg
movsb
jge
maskmovq
psubq
xor
sti
push
shrl
call
pop
push
stc
test
cld
cmpsb
mov
shl
sbb
aad
imul
outsl
lods
icebp
es
cmpsl
push
or
push
jno
dec
jae
test
cmp
das
xchg
mov
je
mov
sub
sbb
adc
mov
jmp
enter
and
fs
movsl
scas
mov
outsb
test
pop
lods
repnz
daa
ret
pushf
stos
mov
shlb
inc
pop
mov
add
and
enter
jle
call
in
mov
fs
lret
mov
pop
and
outsb
mov
movsl
sar
fs
outsb
std
cltd
dec
pop
fdiv
scas
add
shl
xlat
fwait
jl
add
pop
fstl
xor
or
in
testb
cmp
cmp
and
lahf
ds
fisttpll
arpl
xchg
xor
cmp
sub
push
and
and
inc
loopne
int
sub
adc
mov
add
mov
inc
push
nop
lret
add
cwtl
int3
dec
sbb
inc
or
lods
mov
push
cmpsl
push
loopne
in
stos
mov
mov
rol
popa
inc
fstl
jge
mov
movsl
jmp
mov
push
push
push
mov
or
rcl
or
xchg
pushf
mov
jbe
movsb
sbb
and
xorps
test
stc
iret
bound
xchg
push
daa
and
ss
jnp
sbb
pop
fldcw
stos
aam
cmp
sbb
mov
fdivrp
inc
repz
and
shrl
dec
mov
or
movsl
dec
mov
push
cmc
lods
push
rolb
push
movsb
hlt
xor
cmp
popa
jecxz
dec
or
sbb
pop
gs
in
dec
mov
adc
sub
add
fimull
outsl
xchg
inc
ja
pop
sbb
movsb
inc
sbb
das
ja
sarl
mov
stos
daa
pop
sub
test
fldenv
inc
popa
idivl
sbb
test
testb
in
sahf
xchg
fildl
out
ja
adc
fldcw
jns
and
xchg
jg
xor
add
arpl
repz
call
pop
xor
lock
fimull
loope
mov
push
mov
movsl
pop
popf
mov
sbbb
inc
push
mov
jl
push
lret
mov
push
xor
dec
jmp
jbe
nop
dec
adc
test
mov
out
imul
icebp
mov
std
push
sub
leave
and
lcall
add
or
scas
adc
or
add
lods
or
loope
cmpsb
imul
or
nop
jbe
mov
push
fsubl
das
clc
js
imul
push
xchg
icebp
rclb
jl
push
gs
sahf
pop
jbe
adc
inc
testl
cmpl
jle
push
insb
push
cmp
mov
shl
dec
mov
iret
and
sub
jmp
arpl
push
lea
xchg
aas
loopw
push
es
pop
int3
jp
aad
sarl
add
rcr
scas
pop
sbb
arpl
lahf
rcrb
or
mov
jg
scas
movsb
dec
and
into
loop
adc
repnz
mov
sub
mov
pop
mov
cmp
pop
xchg
push
or
es
ja
lret
sbb
cmp
dec
jno
inc
inc
data16
push
xchg
inc
mov
lret
dec
mov
mov
rol
xchg
jle
add
lret
push
mov
pusha
jno
cmp
dec
nop
in
mov
xchg
jl
and
mov
addr16
dec
push
pop
orl
mov
xchg
cmpsb
clc
sbb
fnstenv
aam
jecxz
imul
mov
loope
xor
jg
mov
push
and
cmp
mov
sbb
imul
lock
bound
push
sbb
cmp
imul
xchg
dec
stc
push
mov
out
jne
mov
fnstenv
xor
test
aam
cwtl
xchg
int3
mov
dec
sbb
mov
jecxz
pop
cmp
add
push
push
and
adc
adc
or
dec
cmpsl
sub
jmpw
pop
xchg
xor
je
cmp
and
inc
and
pop
insb
lahf
push
imul
enter
out
mov
sbb
mov
sti
lcall
outsb
sub
jp
or
cwtl
or
push
bound
push
in
pushf
popf
adcl
push
fsub
lods
lods
lahf
cmp
xchg
fsub
sbb
aas
sbb
inc
je
cmp
out
adc
inc
lahf
fcmovb
sbb
inc
jecxz
adc
sbb
fistl
and
add
loop
inc
idivb
adc
inc
std
pushf
jl
pop
and
xchg
outsb
cmp
repnz
pop
fildl
mov
jno
repz
lret
xlat
jp
call
mov
fs
xor
enter
push
mov
sti
mov
mov
or
subb
inc
mov
loopne
fisubrl
pop
xchg
loopne
je
adc
cmp
orb
data16
divl
push
daa
dec
jns
push
cmp
iret
mov
push
insl
int
mov
xchg
std
sub
jnp
dec
xchg
cmpsb
loop
cli
dec
sub
push
push
popa
jnp
outsb
cli
lahf
addr16
int3
fdiv
jmp
insb
sub
jecxz
push
je
mov
mov
or
jo
cmp
fidivs
pushf
lahf
loopne
aaa
lods
hlt
mov
scas
loope
cmpsb
fwait
sbb
scas
movsb
jo
jecxz
dec
adc
into
je
inc
sbb
xchg
sub
mov
pop
push
in
xchg
stos
sti
cmpsb
jl
lret
xlat
jge
dec
daa
push
pop
push
add
movsl
lcall
adc
or
pop
adc
adc
sub
push
daa
insb
pushf
adc
or
fsts
mov
ja
sbb
and
rcll
sti
in
loop
cmp
xor
data16
cmpsl
jns
je
mov
xchg
mull
pop
xchg
sbb
mov
cmp
push
mov
aad
fstl
inc
mov
mov
leave
inc
mov
and
mov
lods
push
ret
lcall
sub
push
inc
inc
clc
pop
jno
sbb
mov
in
adc
in
or
aaa
ss
inc
mov
movsl
pushf
ret
dec
adc
push
dec
fsubl
mov
repnz
data16
loope
sbb
inc
icebp
adc
popa
sbb
add
adc
sbb
lods
popa
lds
mov
cs
sub
adc
das
add
xor
add
loope
mov
mov
je
dec
ljmp
xchg
pop
and
pop
in
xchg
pop
pop
cmpsl
loop
mov
push
xor
repnz
das
mov
and
cmp
sbb
call
stos
sub
mov
add
add
movsb
xor
mov
movsb
jecxz
push
xchg
jg
out
lock
leave
sub
mov
lock
inc
jmp
divb
mov
jo
sub
lcall
sbb
push
mov
inc
cltd
xchg
decl
sub
sahf
push
cmp
loope
mov
and
and
mov
mov
stos
lcall
push
sbb
pop
pop
js
mov
in
inc
jnp
dec
test
imul
mov
sbb
add
and
aas
sbb
add
sub
data16
lock
pop
adcb
xchg
shll
xor
sti
xchg
std
fwait
push
push
lcall
and
imul
imul
cmp
std
out
fisttps
jb
sbb
inc
loop
data16
orb
movsl
adc
fildl
sarl
mov
incl
fs
cmp
lds
sbb
cmc
loop
sub
mov
loope
icebp
dec
xchg
cmp
daa
xchg
fstl
xor
in
cs
mov
aam
jbe
mov
and
sub
jae
bound
stos
mov
shrb
dec
cmpsb
fldpi
pop
cld
sbb
pop
cmp
mov
gs
sub
imul
cwtl
ljmp
dec
faddl
dec
mov
jl
rolb
in
decl
cmp
out
aas
dec
pop
sub
and
or
icebp
jne
jle
scas
pop
test
shrl
sbb
sbb
mov
inc
daa
mov
mov
add
mov
mov
sbb
jb
arpl
outsl
aaa
add
mov
lock
into
xor
xor
sub
pop
popf
add
sbbb
mov
jl
aad
push
cltd
push
das
loop,pn
testb
imul
push
int3
cld
lret
scas
imul
xchg
add
cmp
inc
adcb
and
add
push
adc
mov
lods
cmpsl
inc
mov
les
fldt
int
add
cmp
xchg
mov
arpl
jge
data16
cmpsb
xchg
aam
xchg
bnd
int
xlat
xor
mov
outsl
std
sbb
cltd
mov
inc
jmp
ja
out
ret
scas
jle
mov
out
pop
das
adc
adc
clc
cmp
inc
out
shl
pop
xchg
and
jmp
es
dec
adc
push
sub
outsb
xchg
push
jle
jno
in
jecxz
push
sbb
mov
xchg
jp
imul
jp
stos
or
mov
cld
orb
mov
xlat
dec
mov
mov
mov
add
push
inc
cmpsb
and
outsb
mov
lret
lods
xor
in
mov
pop
out
aam
xchg
sbbb
cli
pusha
add
push
daa
lods
test
das
cmpsl
or
mov
ljmp
test
inc
enter
sbb
or
sbb
sub
gs
sub
movups
xor
popf
add
push
adc
jb
xor
stos
orl
sarl
stos
aad
insl
jno
subl
in
adc
lea
fldl
ja
jmp
inc
xchg
pop
repz
cmp
push
mov
es
fwait
ljmp
push
cmp
shl
sbb
lock
iret
and
bound
cltd
shufps
add
mul
pop
shr
jns
lods
mov
xchg
jns
mov
test
add
pop
xor
mov
lock
out
enter
cwtl
insl
insl
call
aas
sub
scas
inc
push
mov
and
push
and
add
pop
mov
mov
push
push
jmp
test
popf
push
out
and
pop
push
and
insb
push
add
mov
faddl
lcall
sub
jecxz
push
and
jns
mov
mov
xor
or
pop
sub
sbb
imul
mov
inc
mov
ljmp
xchg
push
xor
lahf
mov
into
daa
repz
sub
lret
cmp
or
iret
adc
xor
dec
xor
mov
adc
push
popa
xor
aam
mov
push
mov
jnp
inc
sbb
pop
arpl
arpl
jl
insb
push
sbb
cltd
push
add
lcall
push
pop
add
enter
inc
insl
cmc
cmp
inc
push
decl
pop
mov
arpl
icebp
ret
mov
add
out
pusha
jl
clc
hlt
ret
pusha
jb
dec
fmull
insl
cmpsl
or
mov
mov
cs
sbb
dec
xchg
shrb
popa
mov
mov
je
pop
xchg
fwait
fwait
test
pop
mov
push
pop
pop
push
xchg
fisubrs
pop
pop
imul
inc
popf
in
cmc
stos
xor
add
mov
cmp
or
or
dec
call
js
adc
js
adc
andl
push
ja
adc
pop
dec
mov
mov
pop
jb
mov
mov
repz
mov
jae
loopne
mov
dec
jecxz
xchg
push
cltd
in
jne
cwtl
into
rcrl
and
aas
jge
std
imull
test
xchg
cmpsl
or
stos
hlt
sub
xchg
pop
imul
iret
adc
sub
sbb
fwait
mov
cs
and
push
mov
repz
rorb
dec
mov
repz
adc
fnstsw
rolb
push
jne
sbb
sub
je
push
dec
mov
sub
js
sbb
push
lea
push
or
pop
pop
js
out
fxch
shr
sbb
sub
in
and
xor
mov
scas
fstl
sar
cmp
pop
mov
movsl
mov
xor
dec
divb
xchg
stc
xor
push
sbb
fnstsw
dec
aas
in
cld
xchg
cli
rcrl
out
and
daa
mov
mov
push
push
add
les
mov
xchg
test
sub
sbb
jns
imul
jl
jno
dec
lds
xor
cli
mov
xchg
fucomip
or
sbb
jae
aaa
mov
cli
test
loop
shll
mull
pop
test
gs
test
cmp
ljmp
dec
or
iret
icebp
and
retw
arpl
sbb
outsb
push
sbb
inc
idivb
in
sub
shlb
mov
scas
call
insb
add
inc
jb
lods
orl
icebp
sub
test
xchg
adc
test
testb
sarl
dec
dec
sub
add
sbbl
jg
shl
bound
inc
inc
andb
mov
orl
or
cs
and
pop
xor
test
into
mov
aam
jg
inc
loopne
lahf
dec
sbbl
push
fwait
xchg
dec
cltd
test
out
mov
sbb
jmp
movb
pop
cmpsl
int3
scas
jg
les
ret
pop
and
loopne
and
mov
inc
sub
out
mov
bt
movsl
cmp
pop
pop
popa
jne
or
mov
notl
dec
pop
pop
adc
mov
jg
sub
pop
xchg
ss
sbb
cmpsb
mov
cmp
repnz
xor
in
imul
cmp
lret
lcall
mov
mov
mov
leave
sub
fisttpll
jp
xor
stos
sbb
outsb
cs
adc
dec
pop
mov
dec
lahf
push
cmc
mov
pop
xchg
and
icebp
and
pusha
les
loope
popa
mov
in
shrl
jmp
iret
mov
pop
scas
flds
adc
shrb
sahf
push
lea
jnp
or
imul
xchg
or
adc
mov
and
insl
push
push
leave
adc
jmp
lcall
clc
shll
rcr
push
shrb
lods
sub
cmpsl
ret
jp
dec
decb
stos
sub
cs
sbb
mov
cmp
iret
iret
mov
fs
sub
arpl
out
inc
add
mov
addr16
mov
xchg
sub
cmpsb
das
mov
push
and
call
or
xchg
xor
lods
sahf
pop
add
ret
add
jo
and
inc
xchg
hlt
mov
loopne
sub
sahf
clc
cltd
in
data16
addr16
cltd
mov
jb
es
add
hlt
jmp
add
cmpsb
lods
mov
cmp
ret
cmp
add
inc
pop
addr16
sub
and
or
cmpsb
lret
out
lcall
mov
lret
push
addb
inc
repnz
jle
xor
cmp
push
adc
adc
call
adc
jmp
paddsw
jne
xchg
and
cmpsb
and
cmc
and
jl
mov
dec
or
lcall
aam
mov
dec
dec
mov
pop
cmp
cmc
pop
dec
imul
cmp
ljmp
jb
sub
iret
pushf
jns
xchg
loop
sub
jl
inc
lods
add
mov
mov
xchg
mov
insb
add
pop
fimull
mov
into
adc
loopne
inc
rolb
aad
pop
xchg
mov
jp
mov
int3
pop
cltd
xchg
popf
xchg
movsl
xchg
mov
gs
stc
ja
nop
sbb
gs
imull
jecxz
jo
pop
jns
and
jmp
push
shr
adc
xor
das
aas
jp
shl
cmpsb
and
je
pusha
rcrb
movsb
cmp
push
adcl
pop
sub
mov
pinsrw
adc
or
and
jnp
pop
jno
jp
or
jl
subl
sbb
dec
sahf
push
push
pop
fsubs
outsb
dec
dec
lea
xchg
into
into
add
fcmove
adc
pop
pop
sbbl
mov
sar
daa
lcall
pop
out
lret
cmp
cmp
in
push
add
pop
idiv
jns
jnp
rcr
into
pop
jnp
fimull
push
int3
xorl
daa
pop
stos
xor
jl
movsb
push
and
orb
inc
les
add
lahf
mov
adcl
cmpsb
jp
test
dec
cltd
lahf
xor
scas
lea
repnz
xor
push
es
mov
pop
lcall
pop
jp
jle
clc
test
dec
pop
push
data16
rclb
repnz
cvtdq2ps
xor
ss
outsl
rorb
xor
mov
ja
jne
and
hlt
inc
mov
push
aad
sbb
std
sarl
jbe
push
mov
dec
push
push
and
sub
imul
cmp
xor
jmp
jb
or
jae
mov
testl
jmp
addr16
mov
sbb
sarl
test
aam
repz
les
iret
cld
pusha
pop
and
mov
js
dec
das
sub
mov
push
sub
inc
and
ret
loop
repz
addps
push
mov
stos
cltd
mov
inc
repnz
mov
ljmp
pop
xchg
and
lods
outsl
popa
push
mov
mov
in
fcoms
ret
sti
sbb
movsb
shlb
out
sbbb
mov
xor
jg
xchg
js
xor
jp
xchg
decb
rol
mov
adc
xor
mov
sahf
data16
pop
stc
insl
gs
push
mov
nop
test
jns
mov
pop
pop
outsl
jle
cmp
addl
sub
fdivrl
mov
cmpsb
fstp
and
mov
gs
insl
jmp
fcmovnb
fsubrs
add
push
pop
leave
sarb
and
add
jle
fcomi
jnp
mull
outsb
xchg
ss
ret
inc
mov
vpmaddwd
xlat
or
test
push
mov
pop
xchg
fs
dec
in
mov
push
sbb
mov
or
xor
test
pop
mov
out
jae
mov
loop
pop
aaa
push
add
cld
cmp
cmpsl
sar
loop
inc
stos
inc
aad
mov
sbb
pop
dec
adc
xlat
pop
inc
lret
jno
push
repnz
add
xor
pop
ja
dec
sub
add
and
in
push
out
sub
jb
jge
shll
cmp
xchg
pop
xor
stc
mov
dec
ja
mov
adc
je
adc
lret
pop
lahf
outsl
lods
fmul
cmp
leave
sbb
mov
mov
pop
lods
lcall
imul
sub
mov
mov
insl
into
ss
cmp
cli
dec
add
mov
jnp
cmp
push
rcll
sbb
out
mov
out
or
lods
aas
fidivl
into
push
jecxz
fstpl
cld
repnz
mov
jne
sbb
mov
ffreep
push
das
mov
fnstsw
imul
mov
inc
mov
ficoml
dec
in
mov
pop
sbb
arpl
cld
sub
push
jge
call
fisubl
leave
loopne
sbb
and
dec
mov
scas
fdiv
push
mov
jne
pop
adc
ja
sub
aam
mov
insb
cmp
fwait
test
je
mov
jg
or
lods
iret
aas
or
xlat
lret
dec
test
cli
mov
cmpsl
push
test
les
popa
daa
enter
aas
xchg
imul
jp
push
xchg
push
in
and
clc
push
jp
jp
push
pop
fdivrp
int
jns
sub
ljmp
mov
fdivrl
inc
scas
mov
mov
ficomps
mov
out
scas
mov
pop
inc
in
xor
test
insb
push
add
cmp
mov
lock
and
ficoms
or
std
or
jmp
in
aas
cmc
mov
and
xchg
add
imul
cmp
sbb
pusha
xchg
flds
clc
stc
sti
mov
popa
mov
adc
ss
imul
add
out
and
xor
pop
stc
stc
and
jns
in
dec
int3
data16
out
xor
sbb
adc
push
xor
push
aas
idivb
cmc
cmp
mov
je
inc
mov
pop
xchg
fiadds
rclb
mov
xchg
or
push
sahf
rcl
and
jmp
cmp
arpl
int3
sub
test
mov
imul
xor
jecxz
xchg
insl
iret
jae
mov
xor
mov
lds
int3
add
jmp
adcl
out
jb
mov
mov
in
dec
hlt
and
adc
out
push
aam
fcoms
inc
adcb
dec
lock
sub
imul
test
xchg
inc
xchg
xchg
mov
adc
pop
negb
and
dec
sbb
add
movsl
cmp
cmpl
mov
pop
ds
sub
jns
push
shr
inc
outsl
imul
call
cmp
cmp
loop
cmp
repnz
jnp
or
cmp
outsb
xor
mov
sbb
sbb
inc
inc
sub
xchg
mov
adc
cmp
sarb
daa
imul
push
mov
sti
out
fcoml
out
xchg
cmp
or
sbb
into
mov
addl
mov
aam
sub
ds
mov
push
push
pop
pop
inc
ljmp
mov
repnz
shll
test
jo
mov
dec
jg
ficomps
popa
mov
fwait
sti
mov
dec
inc
shl
pop
jae
pop
sub
xchg
add
dec
and
mov
push
rol
jns
lret
nop
jns
mov
adc
nop
mov
in
imul
mov
enter
sar
xchg
jmp
stos
sbb
mov
or
es
push
push
rorl
jb
fidivl
inc
aam
push
xchg
pusha
mov
mov
jne
loop
or
test
cli
je
add
or
fistl
sbb
outsl
mov
and
sbb
push
xor
push
or
das
pop
stc
into
shlb
fcomps
sarl
jp
repnz
mov
popa
mov
mulb
xchg
shlb
arpl
sub
or
jo
adc
xchg
fwait
xchg
sub
cwtl
repnz
insb
dec
xorb
mov
aad
xchg
test
add
mov
les
jnp
andl
xchg
bnd
int
push
add
iret
fs
xor
mov
sub
imul
xor
sbb
xchg
and
ja
stc
decl
and
sahf
ds
xor
out
pop
leave
fadds
mov
add
andb
jae
insb
inc
lcall
dec
movsb
cld
jns
jno
or
adc
dec
repz
lea
out
jns
call
mov
add
dec
ret
jg
and
pop
xchg
sub
test
les
dec
mov
das
mov
mov
data16
es
add
mov
sti
mov
sarb
push
mov
and
cmc
ss
repnz
call
mov
pop
xchg
adc
jo
pop
xor
aam
add
add
repz
add
jnp
pop
fiadds
pop
sub
jnp
popa
rcll
rorl
insl
ss
aam
popa
test
push
andb
sub
sbb
push
out
icebp
adc
inc
mov
movsb
and
jmp
out
mov
jnp
xor
out
inc
mov
shlb
les
ret
adc
insb
adc
mov
xor
xchg
insb
int3
inc
dec
cmp
pop
iret
outsl
mov
rorb
jecxz
inc
xchg
xor
xchg
mov
jp
ja
aaa
jg
idivb
mov
jg
cmp
cmp
add
dec
dec
out
push
jne
dec
mov
jno
inc
inc
je
stos
into
or
cmp
sbb
decl
push
mov
gs
into
movsl
xor
mov
fsubl
mov
cwtl
mov
cli
and
cmpsl
mov
imulb
sbb
mov
lret
lods
xchg
push
pop
adc
and
adc
bound
shrb
in
sbb
sbbb
xchg
or
lea
adc
nop
push
push
es
xchg
and
jl
cmp
std
cmp
mov
jp
hlt
mov
cmp
nop
mov
jecxz
xorl
xchg
push
cltd
jns
dec
scas
or
add
push
fs
daa
into
in
jno
sbb
sbb
jno
loopne
jmp
mov
xchg
les
adc
mov
push
xor
push
adc
pop
imul
fwait
mov
mov
rcl
add
punpckhwd
dec
sarb
cli
cmpsb
insb
adc
lods
add
outsb
jae
lret
mov
dec
mov
xchg
xchg
pop
pop
test
xor
inc
lock
or
and
call
and
pop
mov
xchg
popa
cmpsb
push
mov
sub
xchg
out
stos
jg
addr16
test
imul
inc
add
mov
push
aas
int
loop
push
mov
xchg
addr16
dec
push
cltd
add
mov
outsl
lock
dec
mov
sti
lock
adc
gs
ss
add
repnz
call
pop
pop
hlt
add
ret
aam
imul
xchg
jle
aaa
cmc
push
push
scas
lods
jo
mov
add
pop
sti
pop
mov
xchg
scas
cmpl
adc
les
pop
cmpb
add
sub
mov
cmp
loop
rclb
imul
pop
lods
cli
push
sub
mov
lock
jle
daa
mov
call
pop
sahf
cltd
dec
nop
insl
and
stos
adc
xchg
insb
insl
lock
mov
loop
lret
mov
mov
je
cs
enter
jle
add
and
sub
jne
dec
or
xor
xchg
cmp
add
mov
sti
ret
loopne
stc
fs
cmp
gs
iret
bound
inc
add
cmc
mov
xlat
jne
std
xchg
dec
popa
outsb
loopne
jg
adc
fadd
or
pop
mov
in
mov
decl
mov
pop
sti
add
push
in
imul
ficompl
out
aas
mov
mov
jns
cmpl
std
push
add
jl
in
inc
cmp
stc
cli
es
popf
imul
add
bound
out
dec
lods
lea
lock
iret
lea
in
push
cmpsb
cmp
or
sub
adc
jno
icebp
ss
pop
and
enter
add
movl
push
sbb
data16
xchg
test
dec
daa
mov
push
dec
imul
jg
dec
sub
lea
dec
push
adc
adc
aam
add
rclb
pop
mov
dec
pushf
fcmovbe
pop
stc
es
cltd
add
mov
lods
outsb
clc
test
outsb
dec
dec
ljmp
cmp
pop
in
xchg
ret
ja
in
mov
fnstenv
ret
dec
inc
jmp
cmpsl
cli
xor
minps
jo
imul
pop
outsl
jg
adc
lret
mov
mov
push
scas
cld
dec
ljmp
std
sub
movsl
add
out
jecxz
xchg
cld
stc
and
cmp
out
pop
dec
loop
ficomps
in
pop
push
imul
or
push
adc
adc
mov
mov
cmp
jb
mov
or
pop
dec
mov
jmp
sahf
popf
lret
insl
or
loop
mov
xchg
xchg
inc
jns
lock
arpl
lcall
loope
mov
push
mov
or
scas
pushl
pusha
imul
add
push
sub
inc
sub
inc
mov
add
push
mov
dec
popa
loopne
cmp
dec
or
mov
test
mov
enter
lds
dec
sub
aad
sbb
fidivrl
push
xchg
adc
and
dec
call
jl
xor
mov
bound
inc
and
arpl
xor
and
ret
aad
xchg
sbb
adc
and
lods
test
incl
add
loop
mov
mov
or
aam
sbb
movsl
mov
jge
popa
adc
add
in
out
mov
adc
pushf
inc
test
and
cmpsb
sbb
jbe
test
push
enter
cmp
bound
and
std
and
cmp
cmp
das
add
int
popf
jns
enter
test
in
inc
mov
scas
mov
sub
data16
cmp
ljmp
mov
andl
cmp
jo
xchg
sahf
je
sbb
or
dec
jge
add
adc
mov
adc
rorb
js
add
adc
mov
ss
jns
adc
clc
add
add
sbb
out
sub
ds
mov
dec
sbb
lods
xchg
lds
cmpsb
into
pop
icebp
into
lfs
and
fmull
stc
scas
add
ljmp
repnz
push
stos
outsb
ss
test
add
xchg
add
int
jge
pop
fstl
mov
movsb
push
jno
mov
mov
pusha
nop
sbb
add
mov
decl
xor
enter
jne
leave
sbb
jle
std
and
ret
adc
add
jle
loop
add
sub
or
push
popa
or
mov
repz
test
imul
popa
cmc
push
pop
rorb
arpl
push
cltd
or
sub
mov
adc
ret
pusha
fcmovb
jno
sbb
cs
jns
shll
xchg
lcall
xchg
adc
shll
push
cvttps2pi
int
mov
pop
adc
enter
push
inc
test
mov
out
test
dec
rorl
push
cmp
test
std
mov
mov
repz
aaa
jge
xorb
shrl
ja
ret
cmp
in
pop
push
add
rcrl
inc
lret
jmp
inc
mov
add
inc
jnp
lahf
leave
les
push
outsl
arpl
fsub
lcall
dec
into
call
mov
loope
jae
imul
add
xor
in
push
repz
cs
and
xchg
push
das
mov
mov
movsb
push
aas
sub
arpl
dec
lock
cmpsb
jae
lcall
lret
iret
and
xadd
pop
push
cwtl
icebp
shlb
aaa
sub
movsl
mov
xchg
pusha
xor
jmp
add
mov
or
mov
mov
js
scas
addr16
add
ror
pushf
mov
dec
mov
movsl
aas
data16
outsl
pop
pop
jmp
out
out
loopne
mov
sub
popf
aad
icebp
movsb
adc
xor
sub
xchg
in
gs
mov
and
adc
adc
xlat
sub
arpl
push
xchg
jge
xchg
scas
lods
movsl
mov
out
xor
jecxz
movsb
or
jns
popf
lods
dec
lret
cmp
sub
lea
pushf
aad
sahf
cmp
adc
aad
ret
sbb
mov
int3
dec
adc
insl
push
fcom
popf
lods
rol
jae
and
ret
mov
pop
sub
sub
in
std
lcall
bswap
outsb
inc
mov
mov
addr16
pop
andb
decl
lds
clc
jecxz
sar
xchg
add
in
jo
cmpsl
test
loop
mov
jge
dec
mov
dec
sahf
xor
xor
jo
pusha
mov
pop
pop
jl
sbb
out
sbb
jg
dec
jns
cld
xchg
jne
stos
pop
xor
mov
cmp
lcall
rolb
push
lahf
aam
push
repnz
inc
mov
and
jge
sarb
jbe
mov
lods
dec
subb
or
dec
mov
mov
jno
inc
test
push
mov
xchg
sbb
fsubl
std
mov
les
mov
mov
daa
in
jmp
mov
xchg
add
add
and
sub
rcr
inc
and
sub
jno
pop
jnp
adc
inc
adc
jo
push
in
rol
daa
fbstp
fdivp
pop
je
or
out
sub
imulb
mov
cmp
les
inc
stc
xchg
or
mov
mov
pop
stc
lret
int3
out
sub
bound
lea
fsubrs
dec
add
mov
lods
pop
lret
inc
add
rcl
scas
mov
int3
jbe
mov
sahf
push
insl
cmpb
pop
flds
jo
mov
int3
cmp
test
sub
in
pop
insl
xor
sbb
or
lret
push
cmc
rcll
insb
or
inc
in
and
pop
xchg
cmp
or
js
mov
and
in
mov
test
out
in
insb
pop
into
sarb
xchg
mov
cli
xor
cmovp
sub
lcall
arpl
test
aas
stos
pop
insb
sub
jge
xchg
sbb
pop
imul
mov
aad
lcall
fsub
lds
movsl
inc
imul
and
ds
pop
jg
aam
clc
cmpsb
sbb
or
out
xor
shlb
sub
mov
loope
inc
iret
jecxz
and
je
inc
jns
sbb
push
andb
rorl
cli
sub
lods
sub
lret
in
js
fstps
cmp
xor
sub
fucomp
inc
addr16
cli
and
addr16
iret
jbe
out
mov
jg
mov
cmpb
into
out
notl
push
xor
scas
jno
repnz
shl
push
or
call
cld
sub
xchg
pusha
dec
stc
in
cmpsb
mul
and
in
enter
pop
aam
lahf
outsl
xor
ficompl
clc
xor
pop
pop
pop
mov
push
xor
jmp
mov
scas
bound
and
repz
call
and
cmp
rol
negl
stc
inc
xor
cmp
cltd
sub
out
mov
jno
dec
in
hlt
popa
shl
addr16
mov
loope
adc
stc
fisubrl
fisttpll
push
mov
mov
in
mov
ljmp
push
xchg
mov
xor
xor
into
sbb
mov
cmc
stos
popa
sahf
lock
orb
aam
jmp
fcomi
aam
adc
mov
cld
sbb
ja
jle
add
lcall
and
sahf
mov
mov
mov
ret
test
fs
pushf
jp
lcall
adc
lahf
xchg
fimull
jge
or
loope
mov
jne
rcrb
pop
rorb
imul
cmp
dec
push
scas
push
loop
adc
lds
dec
mov
mov
mov
inc
lods
xchg
mov
shlb
jecxz
sbb
or
jno
outsl
test
lock
movsl
ret
cmpsb
jo
iret
stos
xchg
inc
pop
insb
out
std
cmp
fisubs
jo
std
les
jnp
push
lahf
sahf
shll
imul
insl
fsub
inc
or
pop
and
jne
sbb
sbb
sar
mov
and
xchg
jle
outsb
hlt
inc
fildl
and
adc
rorl
inc
mov
rcr
push
inc
dec
jb
or
xor
pop
dec
in
dec
cs
jg
pop
cmp
sbbl
cmp
sarb
fwait
imul
scas
fsts
jmp
jae
pop
je
test
bound
inc
sbb
movsl
stos
cmc
out
adc
sbb
jp
add
aam
inc
mov
cltd
clc
hlt
dec
dec
add
daa
shlb
cmpl
dec
mov
fdivl
jno
in
popa
xchg
out
push
out
sub
mov
dec
jnp
mov
inc
jge
cmp
push
aaa
jecxz
mov
sahf
push
mov
adcl
ds
mov
mov
xor
call
cmp
push
mov
pop
stc
loop
pop
loop
movsb
gs
data16
mov
push
ds
dec
mov
fidivl
add
cmpb
stos
lea
fldlg2
add
cmp
adc
xchg
ret
xchg
movsl
dec
mov
mov
add
leave
imul
dec
push
adc
cld
mov
out
push
lcall
out
lret
pushf
lret
and
or
daa
add
adc
dec
mov
das
xchg
push
add
repnz
fs
lcall
stos
call
outsb
cmp
dec
jle
xor
movsl
out
and
repz
add
aam
jno
sub
subb
pop
dec
cmp
and
rorl
mov
into
pushf
mov
pop
fisubl
shrl
inc
inc
mov
xlat
pop
loopw
gs
sbb
ret
imul
pop
imul
and
pushf
and
push
js
adc
inc
loope
ljmp
aam
push
les
repnz
imul
inc
ret
lahf
repz
push
popa
mov
inc
xchg
xor
mov
fildll
aad
xchg
cmc
mov
xchg
mov
mov
xor
shll
scas
mul
cmp
pop
mov
cld
scas
stos
dec
or
adc
rorb
sbb
cld
sub
cs
inc
inc
mov
test
cmc
lret
mov
inc
mov
rol
cli
clc
cmp
xor
movsb
and
int3
add
imul
stos
and
mov
adc
mov
xchg
pop
in
xchg
pop
cmp
icebp
jle
jge
dec
fs
add
enter
jo
rcr
sbb
xor
adc
mov
pop
jmp
fwait
popf
shrl
lds
cld
subl
dec
inc
jecxz
mov
inc
mov
iret
push
mov
inc
ror
dec
insb
test
cmp
int
lret
inc
stos
xchg
jb
iret
jbe
jl
or
pop
xchg
out
js
mov
movb
mov
in
xchg
dec
dec
push
sub
xchg
mov
popa
outsb
call
pop
jne
dec
cmp
lds
adc
cs
inc
repz
add
push
inc
mov
mov
jb
andb
xor
rclb
ret
and
mov
mov
sahf
jp
xchg
push
movsl
xchg
push
cmp
in
punpcklwd
pop
add
imul
shl
xchg
ficompl
xor
pop
in
push
inc
sub
loopne
repz
mov
out
mov
cmpsb
push
neg
push
enter
pop
data16
test
int3
sahf
xchg
adc
shrl
xor
add
daa
push
mov
add
push
and
pop
or
stos
lods
aam
and
in
mov
mov
lret
sbb
leave
jnp
sti
pop
sub
scas
clc
push
lret
cmp
clc
jle
test
test
hlt
mov
xor
rcrb
mov
or
aaa
ficomps
cmpsb
ds
dec
rolb
aam
fimull
imul
inc
jae
imul
loope
adc
cmp
adcl
and
xchg
mov
and
mov
lock
mov
sbb
mov
loope
pop
mov
lahf
jne
fwait
int3
test
dec
ljmp
data16
jmp
mov
xorb
cld
adc
jb
pop
addr16
xorl
mov
test
fs
inc
cmovnp
xor
xorb
dec
xor
dec
adc
sub
jmp
insb
cltd
pop
mov
mov
mov
dec
mov
je
imul
cmc
je
fsub
jecxz
adc
push
sbb
xchg
dec
lea
outsb
push
fdivrs
xlat
mov
cmpb
outsb
rolb
outsl
cmp
push
add
aaa
and
int
inc
rcr
sbb
fdiv
sarb
daa
scas
mov
cmp
mov
movq
sub
add
icebp
mov
out
and
das
jg
scas
mov
cs
push
in
int
xor
loopne
sub
cwtl
sub
ficompl
incb
loope
xchg
test
shlb
jmp
pop
mov
popa
fdivs
out
adc
mov
fwait
out
test
rcll
cmp
aaa
cmp
mov
push
push
adc
ret
xchg
cmp
std
rolb
mov
fistpll
mov
movsl
sbb
sti
dec
sub
sub
aad
mov
loop
fnsave
leave
ljmp
iret
ret
mov
sbb
sub
jb
push
and
gs
cld
js
sub
cmpsb
aaa
mov
jno
loop
repnz
ret
pop
pusha
stos
or
outsb
jle
push
mov
pop
nop
xor
ds
repnz
mov
enter
fmuls
fdivl
inc
mov
sbb
mov
or
andl
not
mov
jmp
ret
repnz
cmc
popf
cmp
jl
out
mov
pusha
mov
inc
ja
or
and
clc
insl
es
arpl
sub
test
int3
lods
xchg
xchg
adc
sub
roll
pop
mov
nop
inc
cmp
jecxz
mov
inc
insb
adc
adc
shl
sub
mov
sahf
pushf
int3
imul
lea
sbb
and
fimuls
sbb
punpckhbw
cmp
iret
fcmovnu
xor
icebp
cld
pop
lods
xor
imul
pop
adc
cwtl
flds
popa
add
xchg
in
lcall
cmp
hlt
jb
xor
idiv
dec
test
and
pushf
popf
cltd
inc
mov
push
and
sub
and
ja
mov
test
outsb
lods
xor
jle
lock
dec
xor
cmc
scas
sub
std
mov
cmp
into
sbb
gs
jmp
stc
clc
adcb
pop
jecxz
stos
addr16
lods
out
les
jecxz
mov
nop
pop
inc
lret
push
xor
or
cmp
enter
fwait
mov
cltd
movsl
inc
incb
js
dec
cmpsl
js
shlb
movsb
adc
or
aas
pop
call
jg
lds
mov
add
mov
push
xchg
loop
out
fcoms
mov
add
mov
fistpl
push
test
out
sub
leave
cmp
xchg
push
sub
cmp
jle
fs
ret
or
dec
pop
or
pop
pop
pandn
sub
movsl
mov
push
into
jg
adc
pusha
jl
mov
pop
inc
xor
outsb
cmp
roll
insl
ljmp
iret
imul
push
push
repz
jl
cs
pop
pop
inc
in
push
dec
cld
leave
outsl
mov
or
das
into
jp
mov
cld
adc
mov
xlat
repz
popa
cs
rcrl
loop
or
mov
test
jne
shll
mov
mov
sbb
inc
in
movsb
push
data16
out
xor
fisubrs
sub
and
adc
and
push
cmpsl
std
mov
mov
rcrb
das
lods
testb
adc
mov
inc
pop
insl
push
jno
popa
movsl
push
xchg
or
sub
das
out
aad
std
pop
test
mov
push
sbb
xor
repz
clc
inc
push
jle
ljmp
pop
add
leave
mov
xchg
pop
mov
das
sub
loopne
aam
mov
jno
hlt
cltd
ror
lods
jns
mov
dec
insb
inc
xor
mov
cmp
test
mov
in
mov
lahf
sub
or
pusha
ret
arpl
xchg
pop
test
dec
push
fcompl
push
fidivrs
push
stos
dec
and
push
outsb
std
popf
and
sub
jp
sub
mov
leave
inc
mov
stc
cmpsl
and
xor
mov
int3
sbb
popa
dec
mov
int
xor
adc
mov
add
pop
mov
adc
add
movsl
push
les
aam
pop
jne
pushf
xor
lahf
addl
mov
fisubl
scas
sahf
jo
mov
shlb
fidivrs
pushf
pusha
cmp
or
mov
cmp
and
cmp
je
xor
cwtl
sysexit
in
mov
aaa
xchg
jnp
aam
cmc
pop
cmpsl
adcb
lods
pop
cmp
pop
and
inc
xchg
fucom
pushf
or
xchg
fs
pop
xchg
cmp
cld
mov
cs
cmp
and
mov
mov
in
addr16
out
xchg
pop
mov
orl
jne
mov
fsubp
imul
pop
add
push
push
mov
and
imul
std
jg
dec
test
jno
outsb
jae
pop
scas
pop
mov
xor
mov
mov
mov
mov
filds
data16
lahf
out
adc
cmpsl
or
adc
mov
repz
sub
popf
pop
gs
mov
mov
iret
decb
jb
ja
repnz
pop
fstpl
and
inc
or
mov
shrl
repz
call
mov
lret
sub
mov
lcall
sbb
cld
pop
xor
and
stos
out
shll
gs
clc
mov
inc
adc
hlt
rcrl
xchg
fcomip
in
push
movsl
jg
aad
stos
not
fwait
cltd
outsl
dec
sbb
scas
cmp
loopne
lcall
ljmp
mov
cld
sub
fcompl
and
mov
popa
rdpmc
mov
xor
jbe
jle
out
push
out
pop
call
jo
mov
and
push
xchg
stos
out
dec
lahf
jo
lahf
push
inc
push
jne
cmpsl
std
inc
fcomps
test
mov
mov
mov
out
mov
jae
lods
xchg
imul
xchg
xchg
inc
hlt
dec
inc
add
mov
mov
mov
xchg
add
and
fdivs
fstpl
int3
nop
fidivl
in
int
push
xlat
dec
dec
aaa
xchg
adc
mov
outsl
lahf
sahf
adc
iret
ret
push
stos
mov
data16
adc
xor
pushf
into
and
pop
xor
test
pop
aam
ds
femms
ljmp
mov
mov
in
stos
inc
loopne
jns
inc
out
enter
sbb
pusha
sbb
mov
push
aaa
push
adc
test
int3
scas
orb
ja
jg
dec
aad
inc
out
push
cmpsl
fimuls
sub
push
icebp
clc
cltd
cwtl
mov
jecxz
xchg
lds
xlat
lahf
stc
hlt
add
insb
push
add
pop
shrb
add
mov
and
shrl
jns
stos
dec
js
decl
decl
mov
pop
push
lea
cltd
in
je
push
lds
pop
test
xchg
shll
mov
rol
mov
sub
icebp
jmp
aaa
filds
in
dec
ror
and
sahf
fsubs
pop
pop
mov
pop
fwait
push
data16
mov
mov
pop
aaa
sti
in
sahf
imul
repz
and
mov
pop
je
adc
mov
test
or
mov
push
lods
and
cmc
outsb
fdivl
push
imul
xor
fcompl
lea
mov
or
sbb
mov
fwait
push
add
cwtl
jae
mov
ja
jle
pop
out
xchg
mov
add
lds
mov
popl
xchg
les
ljmp
popa
sub
fisttpll
movsl
adc
test
inc
pop
rorb
jl
lock
jmp
cmpsl
shll
pop
ss
dec
testb
push
pop
pop
push
shr
into
les
jecxz
xor
dec
js
fwait
xchg
pop
bound
push
mov
inc
add
test
xchg
call
in
inc
loopne
sbb
dec
and
push
sbb
out
pop
arpl
adcb
sbb
sbb
cmp
orb
mov
add
cmc
mov
lahf
fndisi(8087
test
fcompl
sub
pushf
xor
fdivp
popf
hlt
mov
xor
fcmovnb
movsb
ds
adc
leave
aad
lahf
sbb
fucomi
test
fadds
out
add
loope
dec
dec
xor
shlb
mov
sbb
or
and
dec
push
mov
add
lret
inc
pop
lcall
in
into
or
or
or
ljmp
test
adc
xchg
push
clc
push
loop
sbb
popa
test
addb
inc
cmp
inc
repnz
je
dec
inc
xor
push
in
push
pop
inc
mov
idivl
pop
jnp
movsl
inc
add
cs
mov
stc
fisubrs
test
aaa
mov
mov
sbb
add
sub
adc
fadd
in
imul
imul
xchg
inc
inc
mov
jge
jg
push
je
dec
inc
pop
syscall
add
jne
pop
fstpt
insb
jae
or
sbb
mov
lahf
push
sti
lock
add
xor
push
into
inc
cmpl
pop
sub
fs
pop
arpl
imul
je
sbb
out
dec
sub
shlb
test
push
inc
outsb
push
psubusw
test
insl
mov
orb
mov
mov
nop
dec
int
sub
mov
bound
push
outsl
pop
bound
mov
fildl
cmp
jle
in
mov
enter
add
pop
call
roll
cmc
lds
cltd
xchg
add
bound
popf
jl
ljmp
ja
ret
mov
insb
and
gs
dec
test
aad
cmp
xchg
shrl
rcr
int
sub
push
ret
push
clc
mov
ljmp
mov
xchg
lcall
pop
rcrl
cld
repz
mov
int
scas
sub
in
sahf
hlt
jl,pt
bound
mov
cmp
clc
les
xchg
and
loopne
inc
mov
les
jno
and
repnz
xchg
fcmovne
divb
or
push
pop
xor
dec
imul
sbb
jb
xor
xchg
cmp
jl
inc
outsl
bound
adc
fidivrs
or
or
jb
outsb
jb
cs
mov
cmpsl
lahf
pop
mov
pushf
jbe
push
xchg
cmp
pop
mov
sbb
adc
imul
xchg
pop
inc
and
xchg
mov
rcll
rcrl
ret
dec
fisttps
hlt
loope
or
adc
mov
xor
dec
ret
cmp
sti
shrl
repz
icebp
xor
jl
dec
leave
inc
jp
leave
pop
fwait
sub
cmpsb
lcall
addr16
jbe
jae
jge
dec
mov
cmp
mov
add
enter
and
pop
and
and
movsl
cwtl
jg
and
stos
popa
mov
jno
lods
sahf
fsts
hlt
inc
and
cmc
mov
movsl
repnz
in
in
push
xchg
sysexit
pushf
push
xchg
out
xor
sub
mov
mov
mov
lret
ljmp
mov
lret
loopne
ficomps
add
add
fs
int
push
insb
jbe
push
inc
sub
pop
sahf
iret
pop
pop
xchg
pop
xor
or
ret
xchg
data16
sahf
mov
xchg
xchg
cmpsb
sbb
push
mov
jae
clc
mov
mov
xchg
dec
mov
mov
push
sbb
xlat
mov
push
cmp
hlt
jge
testb
xor
cmp
add
xchg
mov
fstpl
pop
movsl
or
or
shrb
adc
lods
insl
lods
xor
dec
cltd
pop
jns
aaa
test
inc
sbb
out
repnz
xchg
addr16
pop
daa
cmpsb
dec
std
push
inc
cs
mov
push
xchg
push
testl
popa
xor
xchg
icebp
xchg
into
test
outsl
out
pop
mov
dec
adcb
mov
jge
rcrl
pop
loopne
shll
xor
in
dec
scas
mov
popa
xchg
in
repz
adc
mov
in
mov
insb
aas
cld
adc
faddl
iret
adc
xchg
out
mov
jecxz
into
aam
sarb
call
xor
adc
cmpsl
or
jnp
add
cs
sub
fdivl
adc
mov
stc
push
insb
or
repz
cmp
jo
ljmp
ret
cmc
pop
jmp
es
aam
pop
add
pop
push
push
ljmp
pop
fildl
fdivl
pop
ds
add
call
add
mov
xchg
test
push
xor
mov
or
daa
add
divb
insb
in
mov
mov
mov
cmpsl
inc
std
mov
js
jns
pop
adc
shr
fmuls
cmp
loopne
cmp
inc
dec
or
inc
jmp
pop
out
stos
fidivl
rcrb
jp
iret
mov
mov
stos
or
cmp
xor
jp
leavew
cmp
out
daa
cmpsb
sbb
jnp
and
push
xor
jbe
dec
aam
xchg
in
movsl
out
cmpsb
imul
ds
shll
in
xchg
sub
xor
xchg
call
out
xchg
pop
roll
imul
fldcw
pushf
jb
cs
fcomp
push
adc
xor
sbb
sub
out
in
fisubs
jmp
inc
push
cmp
out
mov
pop
adc
cmpsb
fs
or
xchg
mov
mov
xchg
mov
or
jmp
xor
lods
mov
fidivl
jns
outsb
push
test
loope
pop
xor
inc
gs
andl
loopne
dec
dec
aad
jg
pop
mov
mov
cli
push
test
mov
ret
outsb
or
lahf
jnp
test
pop
inc
jp
outsb
popl
and
dec
shlb
shr
jbe
add
sbb
sub
lods
pop
fnstsw
data16
lahf
sub
lods
dec
mov
mov
rcl
fdivl
jecxz
loopne
xor
sar
xchg
loopne
popf
push
mulb
mov
jb
bound
xchg
call
out
push
iret
xchg
gs
and
int3
bound
jnp
sbbb
mov
mov
inc
xor
sbb
ds
add
insl
loopne
inc
das
cmpsb
jmp
mov
arpl
lock
and
flds
aad
les
jle
in
jbe
clc
push
clc
jne
mov
icebp
insl
xor
loopne
ljmp
mov
aad
scas
cmp
movsb
push
xchg
andl
imul
fadds
fsubs
test
jl
jb
inc
leave
pushf
xchg
or
and
dec
orl
mov
jne
rcll
mov
jl
xchg
jmp
lret
lds
jns
stos
cs
mov
outsl
lods
arpl
pusha
out
test
xor
xchg
and
xchg
xor
push
fs
adc
call
incl
insl
jge
dec
adc
adc
sbb
adc
adc
jecxz
sbb
xor
rcll
jmp
sub
cmp
ja
cmp
dec
data16
icebp
ljmp
xchg
fsubp
js
xor
mov
insl
fs
int3
popl
and
enter
dec
call
and
jno
ret
add
enter
and
sarb
sbb
jg
filds
dec
dec
mov
int3
into
xor
or
pusha
jne
xor
test
inc
mov
div
mov
mov
ficompl
and
xor
inc
push
flds
or
hlt
xor
xor
aam
int3
dec
into
popa
and
jbe
mov
lds
cld
xchg
ljmp
dec
jae
fistpl
pop
dec
and
lret
jns
clc
and
pushf
scas
popa
imul
dec
push
cmpb
dec
ret
idivl
lods
sub
push
fadd
push
or
shrb
and
cmp
mov
popf
popa
xchg
sub
orb
xor
pop
test
mov
mov
out
and
lret
jg
mov
insl
ret
mov
mov
inc
cmp
test
outsb
lea
jp
lret
jns
mov
in
lcall
mov
adc
sbb
icebp
and
fdivs
rol
stc
jnp
sbb
and
arpl
bound
mov
inc
call
loopne
loope
dec
pop
sub
sti
out
lock
inc
stos
sub
xchg
test
clc
js
out
mov
mov
xor
mov
xchg
sub
pushaw
adc
add
sahf
femms
inc
dec
aam
cmp
aam
lea
shlb
sub
inc
cmp
insl
fstps
pop
std
xchg
mov
lcall
fsubl
inc
xor
adc
mov
ss
roll
inc
std
aaa
dec
mov
loope
cmpsl
fs
test
cmpsl
ja
mov
fstpt
xchg
add
hlt
call
push
xchg
xchg
popl
daa
in
imul
pop
out
jns
popa
xor
sub
pop
repnz
int3
xlat
mov
xlat
mov
add
xor
jle
std
jae
adc
xchg
cmp
xchg
mov
push
jge
jge
jmp
mov
lods
movsl
push
aas
fsin
iret
mov
add
dec
mov
clc
lret
inc
inc
nop
cli
add
sbb
stc
push
loop
leave
incb
dec
xchg
int
clc
inc
jb
repnz
popf
cwtl
pop
aad
sbb
fstpt
ret
call
push
adc
stos
fimull
ret
int
mov
pop
imul
and
mov
lret
mov
loopne
mov
ret
icebp
ljmp
push
out
jle
addr16
mov
pop
xor
mov
cmpsb
push
and
or
fbld
subb
cmpsl
test
insb
addr16
xchg
lock
mov
push
ficomps
dec
cmpsl
in
enter
xchg
es
aam
dec
cmpsb
jno
cmp
pop
dec
dec
cmp
out
icebp
dec
jecxz
test
mov
in
arpl
lcall
aad
je
push
and
arpl
je
sbb
fadd
cmc
ja
pop
cmpsl
stos
mov
sti
imul
jae
sub
mov
call
test
lret
addr16
pusha
imul
mov
fnstcw
inc
fimuls
dec
jg
out
pusha
movsl
push
bound
std
addr16
movsl
cmpsb
std
or
aam
stc
jp,pn
aam
xchg
aam
sbbb
jns
pop
inc
daa
stos
stc
psubsb
sbb
mov
jo
ret
mov
jecxz
and
push
daa
sar
pop
xor
mov
ljmp
iret
rcl
pop
xchg
fs
aas
out
stos
out
hlt
cmpsb
sub
jp
movsl
xlat
adc
cmc
leave
mov
pop
jnp
xchg
int3
daa
fldcw
push
dec
mov
into
xlat
arpl
jmp
mul
jne
mov
mov
in
fistps
sbb
imul
test
xchg
out
xor
push
sbb
test
idivb
lret
or
jnp
aas
out
cli
test
jns
cmc
xor
sub
insb
lret
mov
test
test
es
daa
lods
pop
push
push
mov
in
and
pop
sbb
mov
xchg
adc
insl
push
pop
out
bound
inc
jno
loope
mov
cwtl
pop
adc
jmp
ljmp
mov
and
dec
dec
xor
dec
pop
insl
das
loope
in
int
xchg
push
jae
fidivrs
outsb
jns
push
jg
inc
pop
ljmp
inc
stos
enter
pop
mov
je
pop
inc
cmp
cmp
stos
out
push
lea
add
pop
mov
inc
or
xor
stos
ja
pop
sub
rorb
jno
xchg
mov
mov
add
loopne
dec
or
repz
push
mov
sbb
push
inc
imul
mov
insb
mov
mov
in
add
adc
bound
xchg
mov
pop
push
stc
or
stos
fmuls
and
or
mov
loop
mov
and
and
pushf
shrb
mov
das
test
pop
xchg
push
sub
mov
pop
cmp
push
lret
insl
xchg
fmulp
inc
dec
cmpsl
jne
jb
aas
sbb
or
jp
lret
sub
clc
mov
data16
mov
add
stos
out
cli
inc
popa
or
arpl
cmpsb
pop
mov
xchg
or
aas
pop
daa
mov
call
stos
and
mov
sbb
lcall
mov
imul
imull
push
aad
jg
or
xchg
cmp
cmp
jmp
aam
lcall
stos
push
lds
sbb
inc
or
lret
ss
loope
pop
outsl
cmpsl
imul
xchg
xchg
imul
lods
sarl
aad
mov
and
mov
out
mov
push
sti
cmp
fninit
jno
sbbb
cwtl
or
sbb
out
push
jne
aad
push
outsb
mov
push
adc
movsl
std
add
pop
ret
mov
jmp
cmp
sbb
imul
pop
pushf
mov
test
shll
pop
jmp
sub
loope
fistps
lods
add
mov
insl
aaa
cmp
push
jp
push
wrmsr
imul
aad
cmp
pop
xchg
insw
xor
dec
nop
mov
test
clc
pop
mov
ds
pusha
lods
cmp
xchg
add
jno
and
or
popf
mov
add
or
shl
push
mov
gs
imul
scas
xchg
lock
mov
aaa
mov
fbstp
insl
add
inc
adc
mov
inc
fs
sub
push
adc
sub
cmc
and
stos
cs
xchg
xor
shlb
pop
and
xor
mov
mov
push
cli
stos
jae
inc
pop
dec
pusha
jnp
inc
mov
push
push
fmull
xor
mov
lds
fcom
popa
iret
cmp
fnsave
lock
mov
outsl
cli
insb
dec
adc
js
iret
inc
cmpsl
push
xor
lods
jb
mov
int
pushf
idiv
mov
inc
movsl
lock
xor
push
stos
mov
mov
cmp
mov
int
popf
int
inc
addr16
outsl
adc
pop
andb
scas
xchg
out
jo
out
push
ds
into
ljmp
sarb
icebp
int3
stos
and
jle
lods
pop
mov
out
pop
ja
out
aas
icebp
lods
adc
sahf
inc
jp
adc
in
mov
in
and
jno
cmp
sub
mov
lret
mov
and
rolb
sub
hlt
or
mov
xor
sbb
arpl
inc
xor
sti
movsl
mov
test
xchg
jecxz
mov
ljmp
mov
xchg
or
inc
insb
cmp
push
dec
clc
push
and
js
ret
mov
scas
inc
and
xchg
insb
mov
jp
mov
push
ficomps
stos
sbb
or
imul
insb
sbb
jnp
test
addr16
inc
sub
addb
jl,pt
xchg
les
add
add
pop
icebp
jnp
std
mov
pusha
sbb
call
mov
add
in
jnp
daa
call
neg
cmp
and
iret
and
jp
xchg
je
aaa
loop
inc
stos
sbb
jmp
jmp
mov
ficompl
insb
mov
addr16
shlb
iret
add
or
pop
mov
and
mov
sub
or
or
mov
into
and
xor
lods
jne
jecxz
lods
lret
cld
cmp
xor
cmp
cld
in
or
adc
inc
scas
ficoms
adc
mov
or
jo
push
out
or
std
fcomps
hlt
xchg
enter
add
add
pop
pop
jp
xchg
sbb
push
testl
lcall
movsb
pop
outsl
mov
push
js
mov
xchg
push
lcall
pop
pop
adc
mov
cwtl
stos
xor
shr
and
jle
ljmp
dec
dec
pusha
xchg
mov
repz
mov
or
dec
adc
mov
inc
lods
test
fstpl
cmc
loopne
icebp
insb
enter
data16
sub
int
cmpsl
cltd
jb
push
inc
or
sahf
popf
cmp
xor
cwtl
jb
and
sbb
lods
and
inc
push
scas
fisubs
mov
sbb
cmpsl
aad
xchg
xchg
and
push
jecxz
inc
mov
gs
arpl
ret
in
sub
fdivp
jno
adc
lret
inc
xchg
pop
cwtl
push
outsb
enter
jne
lods
mov
push
dec
mov
and
sbb
or
cmp
stos
push
xor
sbb
shlb
adc
inc
hlt
adc
ret
adc
push
sbb
int3
icebp
or
sbb
les
dec
iret
xchg
adc
adc
movsl
push
outsb
mov
xchg
mov
sub
call
loop
repz
pop
mov
ja
lahf
jnp
mov
inc
mov
fstpl
pusha
test
cli
ret
out
fldl
and
icebp
push
mov
add
add
mov
stc
and
add
shlb
mov
add
mov
or
bound
lock
repnz
mov
or
pop
push
sti
int
jno
adc
mov
xchg
shrb
cli
lret
xchg
adc
add
push
inc
sbb
pusha
scas
lcall
jno
push
loope
xor
inc
cmp
jg
cmp
mov
and
lret
jnp
inc
push
fdivr
cltd
xlat
sbb
jl
pop
jl
adc
pop
movsl
pop
adc
fwait
insl
xchg
mov
sbb
mov
rcrb
mov
lahf
test
imul
lods
inc
inc
insl
dec
push
add
pcmpgtd
inc
jb
and
int
xchg
call
adc
mov
or
inc
pop
js
jg
add
ja
std
xchg
cwtl
test
int
iret
loopne
cltd
popf
cmp
sub
nop
jo
xchg
mov
push
outsb
dec
rorb
mov
andl
ret
pop
and
sti
cwtl
pop
int
xlat
daa
mov
js
and
jb
sti
rcr
xor
or
clc
scas
add
aam
and
mov
ss
arpl
xchg
dec
xchg
xor
add
push
pop
cli
xor
int3
pop
add
xchg
test
mov
and
xchg
fsubs
cltd
stos
stc
fsubp
and
xor
adc
jl
in
pop
movsl
shlb
push
insl
mov
dec
dec
pop
fucomi
ss
xchg
lods
insl
xchg
add
cmp
shlb
nopl
or
jecxz
jnp
mov
sbb
push
adc
sti
in
nop
adc
and
lahf
sub
jo
lods
int
xlat
add
movsl
test
clc
fadds
js
dec
dec
lcall
sub
aam
push
loop
gs
mov
repz
jnp
pop
pop
xor
fildll
xchg
dec
lods
push
add
cltd
in
xchg
mov
icebp
sbb
inc
shl
mov
mov
mov
adc
mov
jbe
push
sub
cmp
sti
in
jne
mov
jg
push
ret
dec
xchg
inc
or
out
pop
cwtl
pop
mov
mov
lcall
mov
in
lret
lock
sahf
inc
rcll
sub
in
xor
inc
in
inc
dec
loop
ret
out
pop
call
cwtl
aas
out
stos
hlt
idivb
push
in
fcmovu
adc
mov
pusha
bound
xchg
aas
movsl
daa
aad
fs
fnstcw
sub
jecxz
jecxz
call
aad
cmpsl
dec
cltd
sarl
fs
dec
xor
mov
push
mov
clc
rcl
pop
gs
mov
nop
adc
sub
jecxz
mov
and
int3
or
push
dec
jne
push
xchg
adc
mov
shlb
iret
pop
pushf
jo
fcmovne
cltd
xor
xchg
aam
adc
xor
icebp
lock
shlb
inc
in
adc
jge
pop
or
fildll
in
xchg
adc
xor
xchg
lahf
aam
jmp
aaa
inc
push
add
mov
cs
mov
mov
aad
push
mov
in
stos
xchg
mov
pop
aaa
add
pop
mov
lcall
jo
das
adc
inc
dec
jno
pop
int3
add
dec
ljmp
mov
jg
xchg
in
roll
dec
inc
dec
and
insb
bound
test
popa
sbb
jp
jno
push
or
sub
inc
and
gs
gs
imul
xor
pop
sbb
jns
fcoml
push
add
popf
jbe
xor
fs
aaa
div
rorb
add
add
out
sub
or
xor
mov
push
int3
mov
xorb
pop
sub
and
sbb
test
mov
je
out
mov
idivl
ljmp
sbb
push
cld
cmpsb
dec
dec
sti
xor
dec
jl
insl
js
cmpsl
inc
xchg
mov
inc
and
sbb
gs
jp
loop
std
imul
inc
fidivrl
push
test
repz
xchg
ljmp
mov
sbb
fsubrl
loopne
out
sub
cmp
imul
stc
cmp
popl
filds
mov
mov
inc
mov
add
mov
loopne
inc
subb
jnp
inc
clc
or
cmpl
fnstsw
push
in
mov
inc
out
jo
int
pusha
pop
mov
xchg
cs
jmp
push
fdiv
add
push
repnz
and
xor
or
fcomip
mov
movsl
scas
mov
dec
cld
dec
pop
mov
or
les
lock
test
lock
push
cmc
imul
mov
pop
subl
out
clc
push
ret
lret
iret
jmp
int3
lcall
dec
inc
fnstcw
mov
imul
mov
xchg
lods
or
jge
inc
out
and
inc
xor
cwtl
mov
sub
je,pt
cmp
lods
in
push
lcall
imul
xor
xor
das
cmpsb
bnd
lods
lret
cld
mov
mov
insb
sbb
in
sub
and
bound
pop
mov
push
jns
mov
push
into
mov
mov
jecxz
out
pop
push
add
and
add
leave
fldt
adc
negb
testb
divb
dec
jge
mov
gs
cs
les
es
and
loope
mov
xor
sar
hlt
inc
push
adc
mov
stc
outsb
sub
push
dec
push
mov
hlt
fsubr
xchg
ds
jmp
cmp
adc
out
cmpsb
aad
jno
add
jge
mov
lods
or
rcrb
fstpt
fs
push
nop
fnsave
dec
bound
sub
lcall
rorb
xchg
out
or
xorl
leave
stos
ret
mov
ljmp
ljmp
pusha
arpl
xchg
out
cmc
pop
and
insl
mov
into
adcb
cmp
dec
fisubrs
jb
ret
mov
or
jo
aad
inc
adc
mov
cmc
mov
test
xor
nop
adc
sahf
movsl
ret
mov
add
mov
adc
xorb
inc
sti
popf
inc
loop
bound
cmp
xchg
fsub
imul
pop
dec
jae
scas
clc
in
jno
xchg
mov
cltd
testl
mov
test
xchg
inc
inc
add
mov
add
sub
add
mov
pop
push
fs
sti
and
fildll
nop
out
repz
inc
ds
mov
xor
pop
adc
cmp
jbe
mov
ret
jnp
xor
jmp
mov
cmp
mov
pusha
enter
je
dec
aaa
ljmp
push
scas
gs
ds
jl
sahf
popf
sbb
mov
mov
gs
std
sbb
adc
dec
sub
clc
cs
inc
iret
negb
push
cmp
rolb
and
adc
mov
cmp
lret
jns
jmp
inc
lret
insl
adc
and
adc
inc
data16
out
mov
fs
jo
mov
inc
call
xlat
jbe
adc
fidivrs
or
mov
ja
cmp
ljmp
lods
ja
sub
mov
adc
pop
xchg
and
adc
adc
cmp
pop
cmpsb
or
add
shrb
add
jg
cmp
rcrb
cld
cmp
bnd
out
lea
inc
add
xorb
rcl
and
daa
loop
adc
sarb
add
sbbl
aad
push
mov
hlt
inc
addr16
adc
dec
mov
mov
pop
sarl
fs
fdiv
cltd
test
jno
lcall
mov
mov
out
int3
jo
imul
dec
xlat
mov
mov
adc
cmp
arpl
ret
add
push
cmpsl
fldcw
test
sub
xchg
xor
and
loope
cmp
negl
cmp
mov
leave
push
scas
mov
scas
shrb
scas
dec
add
fistpl
dec
and
insl
mov
cld
sti
xor
sti
inc
mov
fsubs
mov
cmp
xlat
out
pop
shlb
jbe
sub
jmp
push
xor
fisttps
jnp
popa
test
jmp
dec
repnz
inc
testb
pop
cmp
dec
cmpsl
orl
invd
popf
cmpsb
shrl
fistpl
sbb
test
scas
xchg
add
insl
rolb
pusha
leave
pop
inc
mov
and
icebp
xchg
repnz
jp
ja
ss
sarl
stc
sub
aaa
adc
and
pop
xchg
sarl
xor
inc
xchg
adc
in
jno
xor
fs
lcall
push
mov
jecxz
xchg
adc
jbe
aaa
adc
ljmp
mov
test
rolb
in
and
subl
inc
leave
sub
xor
jmp
insb
adc
sti
les
jbe
lahf
adc
adc
pop
xor
aaa
sub
xchg
popf
rcll
mov
cmp
mov
in
xchg
adcl
test
sbb
hlt
cltd
cmp
fwait
push
imul
inc
fs
mov
mov
lds
or
mov
sub
daa
pop
adc
sbb
rcrb
xchg
inc
rolb
into
cmp
stos
imul
aas
jl
scas
push
inc
insb
xchg
loope
in
xor
out
lea
call
decb
sahf
lds
cmp
mov
xchg
outsb
cmp
pop
fimuls
pushf
or
ja
dec
mov
in
aaa
jae,pt
fildl
mov
pushf
outsl
pushf
test
mov
js
or
sub
rolb
sahf
fstpl
shrl
mov
cs
bound
jg
inc
pop
lods
sbb
lcall
loop
rcll
mull
rcl
clc
sbb
adcb
mov
inc
dec
and
imul
mov
mul
enter
test
pop
popa
insl
inc
xchg
pop
jnp
std
das
out
inc
je
inc
mov
jno
adcb
sbb
subl
inc
or
lret
push
jne
pop
push
push
jb
dec
lahf
repz
scas
aaa
jmp
outsl
cltd
neg
xchg
pusha
xor
aas
sbb
out
xchg
aas
ret
imul
mov
pop
mov
fisttps
ret
movsb
call
and
imull
fwait
xchg
and
sub
mov
inc
xchg
push
or
jne
lret
inc
cmp
inc
cli
pop
xor
xor
mov
ja
in
mov
sub
arpl
int
or
jno
je
sub
ljmp
rcrl
cmp
not
sbb
mov
popf
mov
daa
out
add
scas
inc
adc
insb
and
in
add
jge
das
adc
cmp
test
ret
add
and
add
jg
sti
imull
sbb
into
pop
shrl
ret
popa
push
pop
push
les
sub
xchg
inc
cwtl
mov
scas
pop
movsb
bound
xchg
daa
je
subl
pop
adc
adc
into
movsb
add
jb
ss
lds
push
roll
jecxz
dec
mov
mov
aam
sarb
xor
fistl
stc
and
shl
push
sub
and
arpl
outsb
nop
add
cmpsb
pop
vcvtss2si
xchg
in
test
mov
adc
jnp
xchg
inc
dec
add
or
xchg
arpl
pop
jno
aas
inc
push
mov
insl
inc
dec
sub
xchg
sbbb
cmpsl
js
jns
out
and
add
cli
ljmp
repnz
jne
jne
or
das
adc
cmc
add
pusha
dec
cmpsb
sbb
lds
pop
pushf
and
neg
inc
out
les
cmpsb
mov
jb
int3
loopne
or
leave
jae
jmp
cli
mov
movsl
out
jge
cmp
loope
sbb
mov
andl
mov
lcall
decl
cmpsb
sub
jb
popf
sub
mov
cmp
shrl
jns
pop
fs
lret
jp
add
sbb
out
lcall
jne
jp
xchg
iret
push
push
inc
shlb
das
push
cmp
pop
jne
add
push
leave
mov
repz
enter
lcall
into
mov
aam
fwait
jl
push
push
jb
sub
dec
push
xor
cmpsb
sbb
es
cmpsb
cli
mov
xchg
push
mov
push
insl
sbb
inc
imul
push
roll
imul
inc
mov
les
clc
int
out
xor
scas
mov
sbb
pop
xorb
nop
jg
sti
dec
data16
lds
jno
lods
idivl
iret
cmc
cmpsb
push
movsl
call
not
pushf
pop
out
scas
mov
push
or
pushf
bound
dec
leave
xchg
cmp
popa
xor
nop
xlat
dec
loope
xchg
ja
lret
ds
stos
std
repz
push
push
mov
jl
shrb
gs
sub
stos
fistpl
sub
movsl
add
mov
pop
xor
mov
push
repz
pop
mov
insl
and
imul
jns
pop
push
insb
sbb
dec
dec
mov
out
jnp
lcall
add
xchg
pushf
mov
fwait
insb
mov
fsub
xlat
xor
pop
push
dec
arpl
push
sub
mov
sub
jmp
xchg
nop
push
test
dec
dec
push
adc
loopne
pop
mov
push
mov
inc
js
je
in
jb
clc
test
jecxz
and
dec
les
cmpsb
jle
ret
sahf
cld
sub
xor
pop
and
and
cmp
xor
fstps
test
mov
iret
mov
pop
out
xchg
sub
adcb
leave
or
cmpb
xchg
mov
or
bound
dec
outsb
stc
aaa
nop
pop
test
bound
sub
push
adc
sbb
incl
mov
out
cmp
or
fwait
jmp
cmpsb
call
jns
mov
xchg
stc
rclb
rcll
add
jp
pop
js
rol
or
and
xlat
scas
pusha
sarl
adc
cltd
pop
dec
div
lods
lret
jl
pop
pushf
sub
sbb
ja
loope
pop
dec
pop
sbbb
cmp
mov
mov
aaa
ja
pop
movb
and
cs
push
sahf
aam
dec
testb
cld
fldenv
leave
xchg
lcall
das
mov
ja
sbb
das
addr16
cwtl
mov
xor
lds
neg
jp
bound
mov
ja
jle
js
das
jmp
es
addr16
dec
movsb
mov
fdivrl
test
sbb
stos
or
lret
loop
call
sahf
sub
fwait
movsl
xchg
pop
pop
in
dec
adc
lea
ror
push
pop
pop
add
mov
mov
push
adc
insl
popf
push
icebp
jnp
mov
mov
shr
fistl
out
xchg
jno
icebp
test
inc
push
test
vcvtsi2sdl
outsl
lea
movsl
xor
aas
push
lret
mov
cmp
ljmp
pop
lock
ret
xchg
cltd
mov
in
outsl
pop
sbb
mov
lret
fcoms
bound
lret
lods
jno
push
xor
cld
xchg
mov
sub
movsb
std
dec
xchg
in
push
std
dec
movsl
mov
data16
sbb
mov
jne
scas
lea
insl
dec
mov
outsl
ds
enter
mov
jg
and
or
jo
pop
jb
cmp
xchg
or
in
sub
add
and
jae
cli
inc
das
ret
add
xchg
orb
sub
test
pop
xchg
lret
cmp
lret
adc
movsl
nop
outsl
dec
call
and
lahf
cmovae
ret
dec
mov
nop
add
repz
sub
lahf
push
in
push
pushf
ss
xchg
pop
mov
mov
jae
bnd
aas
cmc
movsl
inc
pop
pop
cmpsl
mov
in
push
push
into
xchg
xor
stc
das
lods
adc
rclb
andb
popa
xchg
in
xchg
sub
jne
sub
push
test
mov
pop
lods
adc
nop
test
add
cmpsl
dec
js
ja
sbb
jne
cmp
jge
movsl
lds
outsb
and
dec
mov
xor
xchg
lds
lea
in
pop
jbe
inc
jmp
in
outsb
add
leave
pop
cmp
sbb
xchg
xor
sub
fneni(8087
xor
outsl
stos
xchg
dec
int3
roll
sub
push
arpl
xchg
xchg
das
push
xorb
adc
ja
movsb
add
adc
lods
dec
and
lret
push
inc
lods
push
data16
sti
push
pop
cmpsb
and
jge
sub
repnz
outsl
lods
lods
sbb
shr
cmp
lods
jle
out
pop
sahf
mov
mov
jmp
jecxz
testl
mov
scas
mov
incb
ficomps
aam
lret
inc
cmp
mov
mov
in
fmull
fadds
or
std
sbbb
mov
insl
out
push
push
sbb
decb
je
movsl
inc
inc
fidivrl
jno
repnz
and
xlat
cmp
xchg
cmp
mov
scas
fs
pop
popf
mov
jl
fs
aam
iret
mov
inc
pop
stc
scas
xchg
jl
js,pt
enter
xor
les
dec
fs
jle
jns
sbb
mov
xchg
nop
repz
cmp
iret
sarb
movsl
mov
jle
sarl
push
popa
in
mov
ja
inc
test
mov
sbb
lea
clc
xchg
enter
xor
mov
in
push
pop
dec
jae
lea
jbe
xchg
cmp
lea
or
add
pop
push
ds
in
popa
sbb
pop
xor
pushf
testb
add
push
add
xorb
add
lock
daa
jmp
mov
push
mov
fbld
das
or
pop
sahf
or
rclb
imul
adc
outsb
addr16
mov
sub
lods
pop
sub
and
insb
and
push
clc
out
inc
adc
mov
xchg
pop
movsl
adc
mov
fstps
arpl
int3
mov
and
mov
xchg
ja
in
jae
ss
movsl
scas
je
and
test
insl
ret
sub
xor
mov
mov
in
sarl
cmp
ud0
ss
xchg
dec
mov
daa
mov
loope
std
mov
loop
inc
push
gs
aam
cmp
stc
jo
outsb
aaa
aaa
cmp
pusha
sub
cmp
outsl
push
pop
adc
aam
dec
scas
push
push
movsl
ret
testb
loope
add
pandn
inc
loope
mov
sbb
pop
or
int3
iret
lahf
xor
pop
pushf
icebp
ja
fldl
mov
inc
mov
test
popa
jl
cmc
xor
in
ficoml
sub
adcb
jnp
xchg
inc
testb
xor
imul
scas
push
sbb
xchg
xor
xlat
mov
call
aad
xchg
push
loope
in
xor
out
js
out
insb
test
call
or
popa
sbb
cmp
pop
test
fsts
js
mov
icebp
repz
jl
adc
or
mov
dec
add
sbb
rolb
jmp
push
xchg
outsb
mov
ror
mov
jle
xchg
xchg
mov
insb
hlt
rcl
mov
pop
push
add
ror
push
mov
push
int
sbbl
stc
repz
aas
and
xchg
arpl
sub
jae
lahf
ret
imul
lret
add
shlb
xchg
sbb
mov
dec
cmp
mov
mov
pop
sub
jge
stos
lret
stos
jg
adcb
sbb
pusha
arpl
cmp
loopne
rorl
xchg
ret
lds
fsubl
lret
out
jnp
pop
and
push
ljmp
and
add
lock
ds
mov
sbb
std
pop
sti
mov
das
jge
or
add
and
mov
jmp
sub
cld
ret
test
lret
pusha
ljmp
scas
jecxz
imul
in
mov
lea
mov
push
ret
xor
cmp
movsl
or
addl
repnz
gs
pop
insb
jl
mov
or
call
and
fwait
xorb
pop
imul
pop
mov
inc
iret
loope
jmp
fcompl
xchg
pushf
pop
xorl
data16
lods
out
fstl
sbb
push
xchg
sysexit
lret
and
mov
cmp
jno
std
mov
xchg
sub
xchg
test
out
add
inc
lock
lea
cmp
adc
into
jne
push
dec
mov
jo
jno
xor
out
push
dec
movsb
jae
fdivl
fs
add
aas
mov
xchg
pop
lds
dec
fidivs
xchg
fwait
in
clc
notl
jge
lock
rolb
add
loope
push
shll
pusha
pusha
sti
push
testl
fsubrp
jge
push
cwtl
jne
imulb
sbb
mov
mov
or
std
or
data16
icebp
rolb
xor
push
icebp
sub
push
repz
xchg
sti
repz
fisubrs
fs
sbb
push
das
rcrl
mov
out
xchg
icebp
in
sbb
rep
or
mov
imul
xorl
hlt
inc
jge
xor
xchg
mov
jg
fstpt
ss
imul
cmpb
push
cltd
fs
ror
aam
sub
aaa
sbb
cmp
scas
sub
pusha
out
add
into
push
lea
aad
fcmovnb
shlb
ds
push
scas
and
cmp
rcll
aam
cmc
imul
add
adc
out
cmpb
xor
inc
arpl
jae
push
and
cli
push
adc
jno
inc
daa
xchg
mov
icebp
call
push
push
aad
xchg
jecxz
mov
adc
ror
das
fisttpl
add
pop
into
jmp
pusha
ret
push
mov
mov
out
cltd
out
subl
gs
les
lahf
lock
pop
mov
add
mov
push
dec
stos
arpl
shlb
adc
cwtl
or
push
lret
fcom
sbb
dec
or
test
rolb
push
sub
ja
hlt
pushf
repnz
dec
mov
pop
sbb
mov
mov
sbb
ret
jno
pop
out
and
addr16
fnstenv
icebp
xor
ja
jns
push
loope
nop
pop
int
jmp
lods
or
jo
jmp
jge
inc
inc
bound
lret
rorl
je
or
cmp
idivl
cltd
xchg
outsb
or
sbb
or
lcall
jne
pop
jmp
or
fidivs
push
decl
cmp
call
pop
xor
loop
shrb
icebp
fwait
cmp
cmp
gs
ficompl
mov
lret
pop
and
adc
clc
xor
stos
sub
hlt
inc
out
repnz
sbb
out
in
in
pushf
jl
sahf
xchg
rcr
jle
lret
mov
or
sbb
dec
fstl
sub
gs
dec
in
xor
and
push
int3
add
add
fimuls
sub
add
jns
inc
mov
sbbl
aad
cwtl
call
es
add
pandn
movsl
pop
aad
outsb
movsb
adc
stc
repz
cltd
mov
xchg
mov
sub
jae
scas
pop
sub
push
rorb
ljmp
mov
jns
movsl
stc
adc
jbe
enter
xchg
out
jb
xchg
out
js
cmp
in
dec
push
int3
adc
push
adc
push
fldl
out
scas
cli
pop
ret
sarl
ljmp
test
aas
out
mov
aas
adc
push
outsl
add
mov
out
sub
andnps
stc
sbb
dec
mov
add
push
mov
adc
data16
frstor
pop
jo
mov
stc
out
repnz
cmp
cmp
xchg
pop
imul
mov
shrb
je
lret
mov
pushf
enter
imul
lods
movsb
mov
mov
or
gs
jmp
adc
jg
ret
sbb
inc
shll
lret
stos
jle
fmul
cmp
cmpsl
leave
xor
push
into
dec
out
dec
jbe
gs
aas
or
mov
or
mov
mov
into
data16
adc
lret
ja
fwait
loopne
lock
push
popa
daa
ja
in
sub
dec
mov
loope
test
dec
loop
xchg
clc
cld
rcr
add
lahf
aam
daa
into
repz
adc
or
cmp
jp
xor
inc
gs
jbe
lea
addb
fstpl
test
lock
pop
ja
mov
fucomp
fldt
mov
imul
pop
shlb
fs
clc
xchg
andl
push
pushw
fcoml
enter
mov
js
jae
clc
dec
pop
mov
daa
push
mov
cmp
xor
stos
in
loop
cmp
jne
sbbl
stc
int3
test
cmc
inc
and
xlat
fdivr
jne
inc
cltd
das
fidivrs
xor
icebp
sahf
push
mov
lods
loop
jnp
fdivrl
cs
dec
push
jge
daa
jne
iret
nop
fstl
repz
aam
movsb
jmp
in
lret
into
inc
test
or
daa
rcrb
jno
int3
icebp
int3
inc
insl
pop
mov
out
cmpsl
out
jmp
loop
mov
and
dec
out
pop
push
mov
insb
xor
sbb
cmc
mov
lret
xchg
cmpsl
lahf
cmp
mov
scas
sahf
dec
nop
aam
jbe
loope
or
xchg
dec
popa
ret
repnz
mov
pop
clc
pop
xchg
mov
xchg
mov
dec
ja
std
sbb
and
pop
fiaddl
call
nop
cmp
addr16
sub
inc
aad
pop
lds
fwait
scas
xchg
xor
adc
stos
cmp
nop
in
cmp
lret
dec
pusha
sub
and
stc
std
out
sarl
ss
xchg
popa
fcomps
or
sub
sub
dec
jns
cmp
xchg
lret
push
xor
addr16
movsb
jns
cmpsb
clc
iret
into
jge
push
repnz
sbb
fistl
ss
lea
loopne
loopne
inc
sub
dec
push
sbb
or
xchg
aam
jbe
es
sub
add
icebp
lahf
push
cmp
dec
sub
sub
push
inc
aas
sbbl
ret
mov
rol
and
mov
cmp
jl
pop
mov
jp
push
and
in
or
jnp
out
inc
int3
in
inc
sti
inc
jmp
xchg
push
inc
test
notb
or
jo
stc
push
pop
push
fildll
add
ret
pop
sar
pop
ds
mov
sub
mov
inc
xorl
pop
mov
mov
adc
enter
sbb
int3
negb
out
imul
rcrl
loopne
hlt
and
mov
and
ds
dec
sub
int3
je
outsb
leave
mov
ss
ret
jne
ss
cld
gs
leave
mov
out
in
imul
cmpsb
ds
stc
stc
adc
insb
pop
movsl
in
in
adc
cmp
das
imul
xchg
ds
gs
jno
hlt
push
dec
stos
mov
out
inc
imul
and
xacquire
xor
enter
stos
inc
mov
arpl
pop
jbe
pop
testb
inc
jmp
cmp
clc
aam
dec
fwait
sbb
inc
mov
xlat
mov
jmp
fcomip
lahf
sbb
pop
xchg
sub
cltd
and
mov
mov
lea
data16
fists
repnz
push
sub
clc
adc
xor
or
xchg
sti
push
dec
xor
mov
out
push
push
mov
jg
pop
stos
xor
fcmovu
cmp
mov
pop
lods
fisubs
test
xor
jmp
fs
sbb
mov
or
rcl
sub
mov
jae
mov
xchg
cmpsb
gs
movsl
push
jge
sbbl
xor
and
dec
add
add
imul
repnz
pop
stos
lods
adc
mov
sbb
inc
dec
fucomip
loopne
nop
xchg
add
fistpll
ficomps
dec
outsb
inc
cmpsb
daa
int
test
mov
dec
mov
and
lods
push
inc
jl
jecxz
iret
popf
xchg
mov
in
fs
sub
fidivl
push
sub
xor
idivb
add
roll
mov
out
js
pop
push
in
push
ret
inc
push
pop
test
test
outsl
cld
in
sbb
out
pusha
das
cmp
sub
cmpsb
mov
inc
movsb
lea
fwait
int
cmpsl
out
in
sub
and
pop
jne
loope
xchg
shll
popl
int3
mov
xlat
push
outsb
jp
clc
lods
inc
or
fwait
loop
fwait
xlat
and
in
pusha
icebp
sub
aad
out
xchg
push
cld
jecxz
xlat
aaa
inc
or
dec
daa
add
ja
push
test
loopne
cmc
sub
into
dec
mov
cmp
cmp
fwait
push
jbe
cmpsb
sub
push
mov
ja
jle
jnp
xchg
pop
add
dec
pop
push
cld
std
pop
scas
or
stos
xchg
lods
mov
dec
adc
dec
les
adc
lcall
fnsave
jmp
xor
loop
in
lea
cmpsb
sti
ljmp
sbb
test
in
outsb
dec
xorl
leave
iret
sbb
repnz
sub
out
xor
xchg
sub
pop
dec
pop
subl
sub
rcll
mov
mov
shll
jnp
leave
lcall
mov
jb
cld
mov
and
pop
aas
stos
or
les
inc
pop
mov
dec
cwtl
cmpsb
sbb
mov
sub
ja
cmpsl
push
cli
mov
cmp
sar
inc
in
ja
in
cmpsl
subl
cmpsb
in
mov
out
sbb
frstor
loopne
pop
les
iret
call
lods
inc
sub
sbb
dec
adc
add
sub
insl
add
orl
repnz
fwait
cli
sbb
bound
jb
add
enter
pusha
enter
push
pop
jecxz
movsb
sub
jp
imul
cmp
jl
iret
add
sbb
loope
mov
in
cmp
push
jnp
push
nop
xor
adc
mov
fstpt
xor
popa
lea
xlat
mov
dec
in
sub
xor
sub
or
sub
mov
testl
push
mov
fidivrs
lahf
in
jg
push
cmp
imul
std
and
xchg
inc
sbb
adc
jbe
push
call
lret
dec
sub
ljmp
jae
jp
lahf
loopne
aam
test
jae
testl
adc
xlat
les
jl
push
out
or
mov
inc
sbb
orb
nop
es
jg
mov
cmp
sub
cmp
rcll
xor
cmc
add
mov
sbb
jne
push
jl
dec
pop
mov
ss
add
jae
jns
fsubp
mov
mov
movsb
pushf
cmc
in
in
mov
imul
mov
mov
ret
inc
insl
dec
pop
xor
push
popl
inc
push
mov
cli
scas
inc
lcall
repz
ret
sub
in
jno
mov
insl
imul
sahf
shrb
push
adc
cmp
cwtl
xchg
loopne
dec
cmpsl
push
fs
lock
dec
insl
mov
sub
cltd
push
ret
sahf
mov
cmpl
stos
insl
into
sub
cltd
mov
sbb
in
test
pop
jecxz
imul
jle
jge
xchg
jo
cmp
adc
shll
aam
sti
bound
sbb
jb
sub
add
insb
cmp
push
pushf
adc
pushf
call
test
insl
jp
enter
sbb
pop
pop
inc
jae
pop
push
and
scas
fsubrl
add
sub
pusha
sti
js
sub
imul
xor
imul
sub
pop
push
ds
lods
leave
je,pt
jp
push
adc
or
imul
movsl
push
popf
adc
fisubs
inc
and
out
inc
push
mov
inc
cmpsb
decb
popa
subb
lret
and
outsb
fcmove
mov
ljmp
push
mov
les
mov
aas
jnp
int
call
jle
cmp
imul
rcrb
adc
sti
push
jnp
inc
test
cmp
aad
push
ja
jb
mov
addr16
icebp
add
lea
bound
mov
mov
stc
sahf
call
add
pop
inc
xchg
rolb
xchg
sar
int
ljmp
jg
pop
mov
xor
mov
cmp
xchg
outsl
inc
mov
clc
iret
scas
pop
cltd
idivb
sbb
fwait
mov
mov
mov
sbb
jle
mov
mov
push
popa
sbb
loopne
aad
mov
cld
inc
movsl
int3
lea
cli
rcrb
call
test
outsb
gs
mov
jmp
mov
dec
add
adc
xchg
adc
loop
xor
mov
xchg
jae
jl
popf
dec
cmp
popf
popa
or
adc
xchg
mov
sub
and
pop
push
int3
in
pop
xchg
jle
stos
aaa
pop
or
sub
stc
sti
std
mov
dec
imul
or
pop
push
mov
sub
imull
xchg
outsl
insl
cmp
mov
jmp
or
popf
pop
popa
and
mov
fwait
or
lods
imul
aam
push
fstpt
hlt
divl
dec
mov
mov
outsb
pop
xchg
out
mov
push
ret
sub
lret
jae
push
sub
cmp
xchg
push
imul
inc
add
movsl
push
test
push
out
es
pop
sub
cmp
je
inc
mov
add
xchg
dec
adc
inc
test
mov
sbb
xlat
test
icebp
add
ret
fisubs
pop
sub
sub
mov
jge
loop
out
pop
adc
push
mov
arpl
add
xchg
outsl
and
mov
or
inc
adc
scas
sub
push
les
xchg
pop
out
and
mov
or
bound
idiv
bound
outsb
fidivrl
jne
xor
int3
mov
pop
add
xchg
push
insb
ja
lret
mov
out
push
pusha
cltd
inc
add
stos
sub
cwtl
add
adcl
add
bnd
shrl
adc
inc
push
jae
into
stc
fucomip
mov
or
lods
idivl
test
push
mov
inc
hlt
fwait
cmpsl
dec
xchg
pop
pop
add
sbb
xacquire
mov
imull
out
mov
dec
cmpsb
stos
mov
jno
rorl
dec
dec
xchg
stos
pop
nop
mov
mov
ror
jmp
inc
test
mov
shlb
call
fcmove
cmc
test
stc
loopne
mov
ss
dec
adc
xchg
xchg
xorl
sbb
xorl
cwtl
pop
movsl
pop
mov
dec
std
and
fildll
cmp
xor
xchg
pop
arpl
movsb
jp
push
push
lods
fs
imul
stc
daa
jno
loope
mov
mov
xchg
fistpll
push
es
stos
je
addr16
push
dec
mov
pop
xchg
lods
outsb
fcmovnu
mov
xchg
in
int
or
cmc
mov
es
xchg
popf
cmpsb
cmp
sub
xorl
inc
hlt
and
fsubrl
lods
xor
nop
ficompl
xor
inc
dec
jae
or
and
lcall
xchg
js
stc
cmc
xor
fisttps
inc
sub
fsubrl
or
lret
movsl
das
pop
mov
std
and
dec
push
movsl
movsb
pop
adc
cmp
mov
popa
mov
pop
fyl2xp1
xchg
or
cwtl
inc
xchg
sbb
sub
loop
icebp
add
cmpsb
jle
aam
and
imul
idivb
outsb
cmp
ljmp
stos
adc
decl
fs
cwtl
xor
inc
pop
sbb
hlt
cmpsb
ret
cli
aas
mov
fdivp
dec
sub
sbb
mov
cmpsl
in
and
ljmp
sub
inc
in
das
and
inc
pop
popf
lcall
inc
mov
repnz
add
shl
dec
icebp
inc
test
push
pop
adc
inc
ja
subb
push
outsl
xchg
aam
das
inc
push
arpl
push
adc
shlb
je
push
shl
mov
pop
sbb
add
jb
repz
fdivl
cmp
pop
in
and
jnp
xor
mov
sbb
dec
dec
jnp
aaa
js
sub
xchg
xor
jbe
sbb
mov
mov
cltd
pusha
pop
gs
scas
stos
inc
jge
push
cmpsb
loope
addr16
sub
test
xor
mov
int3
les
adc
nop
push
push
shrl
or
or
jle
inc
mov
lcall
ret
and
int
jo
clc
fstl
shll
sub
and
mov
bound
adc
push
fwait
push
xchg
lods
out
pop
mov
call
add
jmp
adc
inc
push
inc
dec
insl
imul
jb
cmp
jnp
pop
fdivr
dec
in
rolb
dec
lcall
lahf
test
daa
movsb
jl
sbb
or
mov
mov
dec
jb
add
test
dec
jns
pop
cmpsl
test
insl
orb
mov
sti
jns
sub
les
and
stos
jg
cwtl
les
push
mov
add
fmuls
adc
sub
cld
jo
lods
jecxz
jg
mov
es
shl
xor
or
fstps
push
je
sbb
dec
je
adc
in
mov
stc
out
push
sarl
fnsave
aas
dec
lods
xor
in
cmpsl
adc
int3
cld
orb
ja
xchg
adc
mov
adc
inc
int3
and
popf
hlt
xchg
ret
push
pop
jnp,pn
mov
out
add
ljmp
pop
idivb
pop
jl
xor
inc
xchg
xchg
push
sbb
out
test
and
xlat
adc
je
repz
stos
jbe
cltd
into
daa
and
ret
fildll
jp
outsb
xchg
ljmp
lcall
pop
insb
xorb
int3
stc
xor
jno
daa
subb
dec
xchg
addr16
fcmovnb
arpl
dec
or
divl
mov
pop
xor
mov
or
aaa
fsubrl
ret
dec
jae
pop
gs
xor
pop
sub
sahf
dec
sti
fldcw
ljmp
imul
pop
orb
sub
sub
in
movsb
iret
popa
cmp
rclb
jns
daa
push
scas
lret
or
cld
mov
test
pop
and
fs
dec
inc
mov
in
jp
mov
lahf
leave
mov
leave
scas
mov
or
imul
imul
sbb
pop
fcomps
xchg
jne
or
push
push
fmul
cmp
jmp
fnstenv
insl
add
add
out
scas
fdivs
das
mov
sbb
fbstp
push
clc
call
adc
adc
and
xor
mov
mov
in
sub
lahf
out
arpl
inc
mov
dec
mov
and
pop
push
pop
and
xor
adc
dec
in
je
outsl
jge
mov
jno
cld
shl
jb
cmp
pop
xchg
lcall
pop
adc
js
stc
bound
xor
fmul
push
ret
push
push
and
fs
push
xchg
hlt
mov
mov
shll
pusha
sbb
lret
lea
mov
and
ja
out
sarl
push
pop
jno
mov
ds
mov
insb
cmpsb
mov
inc
cli
outsl
and
ljmp
lds
cli
lds
rclb
addl
mov
push
sti
cmpsl
dec
xchg
loope
cld
shll
mov
inc
aaa
fmul
jo
add
xchg
or
push
adc
fldcw
push
cmc
cmpsb
js
xchg
push
inc
sbb
sti
push
aaa
aam
adc
jmp
pop
cwtl
arpl
push
adc
ret
fldenv
mov
mov
jecxz
cwtl
gs
ljmp
xchg
pop
pusha
and
inc
out
dec
aad
mov
xchg
dec
inc
inc
mov
jns
add
aas
shr
pop
cwtl
add
lock
rcrb
test
fdivs
inc
lret
dec
in
inc
cmp
loopne
bound
mov
repz
mov
and
js
lret
xorb
addr16
movsb
mov
test
jg
or
xchg
sub
push
mov
jle
sub
inc
mov
jp
adc
inc
in
or
add
jno
mov
cli
add
mov
pop
rcrl
jno
push
adc
mov
dec
ficoms
push
pushf
sub
sbb
mov
xlat
cmpps
cmp
sub
cmpsl
test
sbb
pop
fs
dec
sbb
cmp
push
add
repz
cli
sbb
cmpb
push
dec
stos
xchg
dec
test
push
add
jo
xchg
push
iret
movsl
mov
hlt
call
dec
shll
push
or
and
jp
mov
mov
mov
pop
out
lcall
or
clc
jae
mov
inc
arpl
xchg
shl
cmp
mov
sbb
mov
sub
push
mov
cmp
push
mov
dec
ljmp
scas
xlat
into
push
cmp
ficoml
stos
cwtl
push
mulb
xor
cmp
xchg
jbe
data16
int
outsl
sub
mov
inc
shll
add
fsts
fwait
repz
adc
xchg
jl
inc
jbe
sub
xchg
sbb
xor
lahf
out
inc
mov
iret
mov
jne
mov
and
mov
fwait
int3
sbb
loope
pusha
jno
inc
or
std
mov
mov
jmp
and
xchg
xchg
shrb
cmpsb
sub
pop
add
and
and
fiaddl
and
imul
daa
fmul
popa
mov
clc
je
stc
or
inc
ds
xchg
xchg
cmp
mov
cmp
push
sub
aas
xchg
adc
xor
push
lea
out
hlt
js
sbb
adc
and
std
loopne
fadds
das
push
mov
fidivs
mov
push
mov
cmpsl
arpl
aas
in
jecxz
xchg
cmp
push
repnz
xor
xchg
stos
inc
lea
inc
xchg
mov
dec
sbb
mov
hlt
mov
wrmsr
add
bound
jae
daa
mov
mov
shlb
sbb
ret
imul
xor
test
inc
and
push
push
fcomp
hlt
jmp
test
sub
mov
xrelease
cmp
push
add
rolb
dec
xchg
jg
mov
lods
pop
lret
stos
inc
addl
pusha
pushf
cmp
mov
pushf
gs
pop
mov
inc
push
jae
cwtl
cltd
arpl
fisttpl
jns
stos
xchg
xor
and
andb
mov
inc
jb
xor
leave
push
mov
cmpsb
mov
in
das
cmp
in
cmpl
mov
sahf
and
bound
lods
xor
scas
aaa
xor
jge
jmp
jge
pop
inc
fcomp
sub
xchg
dec
loopne
arpl
clc
mov
je
cld
sub
lcall
xchg
and
jb
cmp
fwait
std
sarb
xor
adc
sub
or
lods
cmp
sarb
cmp
jae
les
mov
and
add
mov
pop
out
ljmp
inc
cmp
pop
repz
insl
shll
cmp
les
stos
add
imul
movb
ja
test
cld
ret
aaa
jnp
sub
jp
sbb
pop
mov
jns
pop
pop
or
bound
cld
mov
mov
cmc
cmp
mov
sub
xchg
das
pop
pop
jnp
es
das
pop
adc
and
jle
icebp
bound
push
mov
fisubs
dec
xor
inc
in
lea
pop
lret
insb
mov
fnstsw
mov
dec
dec
cwtl
jo
lods
xchg
int
add
lock
pop
mov
mov
nop
stos
push
or
push
cmc
xchg
sub
ror
and
add
jno
add
sahf
sub
add
cmpsl
ja
jns
push
and
arpl
aas
mov
test
pop
add
jo
inc
out
std
mov
fisttps
repz
insb
dec
leave
jb
stos
call
jl
inc
movsb
fstps
cmp
or
shrl
in
inc
enter
pop
dec
xchg
js
adc
jb
iret
in
xor
cltd
into
test
dec
fsubrp
adc
ds
icebp
dec
mov
movsl
cmp
in
push
in
jns
mov
mov
adc
subb
lea
enter
pop
push
fsubrp
xchg
fs
nop
xchg
scas
imul
adc
xor
xlat
fadd
inc
push
mov
addr16
ja
popa
pop
pop
cmp
xchg
xchg
dec
mov
test
pop
or
rorl
call
loopne
push
fistpll
push
mov
cmpsb
stos
stos
inc
add
jp
push
add
sti
cmc
push
xor
jo
das
dec
xor
insb
insl
aas
dec
jge
add
mov
nop
bswap
imul
jp
mov
sbb
mov
hlt
test
movsl
sub
dec
mov
mov
adcb
jl
outsb
out
pop
xor
push
repnz
inc
mov
iret
loopne
int
jl
ja
leave
enter
cmc
add
jb
cwtl
ljmp
aam
mov
sbb
cmp
xor
cld
je
xor
and
pushf
dec
xor
das
mov
or
lcall
mov
sti
rcr
loope
dec
pusha
or
fbld
sarl
xchg
xor
inc
test
inc
int
or
push
cmp
adc
enter
sahf
cli
add
or
lds
cmpsb
dec
jecxz
cmc
pusha
repnz
cltd
rcll
out
subl
aas
inc
cmp
mov
push
mov
out
decl
jno
mov
xor
sahf
lea
mov
scas
adc
xlat
cmp
push
dec
add
pop
dec
jae
jge
fsts
ja
push
leave
mov
imul
xchg
out
mov
fldl
xchg
popl
inc
cmpsl
sub
jmp
or
cli
iret
mov
dec
bnd
add
int
xor
aas
movsl
test
push
shrb
dec
or
test
loop
dec
cmp
test
cmpsb
mov
fldenv
xor
mov
call
aam
pop
sbb
dec
xor
push
fnstenv
jmp
fcomps
shll
cmp
out
dec
xchg
pop
dec
push
xor
xchg
add
in
pop
push
adc
cld
loop
sarl
or
shrl
mov
add
cmpsb
out
sub
push
aam
int3
fdiv
pusha
shld
pop
ret
mov
mov
mov
cmp
mov
ljmp
and
fstl
ret
arpl
inc
push
lretw
xor
loop
sbb
xor
std
adc
js
ret
push
sbb
add
xor
or
jg
push
lods
in
push
aas
mov
lods
push
jl
out
mov
sub
dec
popf
popa
pop
jle
xchg
stos
stos
test
and
push
out
xor
pop
bound
ja
pop
ficoms
or
mov
mov
in
roll
lahf
fcoms
outsb
addl
call
int
fs
xchg
inc
mov
xor
popf
outsl
fs
inc
or
imul
test
leave
or
xchg
divb
xor
inc
in
bound
adc
flds
clc
ss
cmp
or
xchg
mov
cmp
out
repnz
mov
shlb
arpl
push
scas
cmp
xor
or
das
popl
out
icebp
pusha
jge
fstpt
sbb
push
pusha
enter
enter
lahf
clc
xchg
inc
cmpsb
push
mov
lcall
mov
sbb
sarb
cmp
mov
mov
lds
mov
cltd
js
lock
cmp
mov
xchg
cs
sub
mov
repz
sub
xor
xchg
pop
cmp
mov
lods
or
dec
addr16
fld
push
pop
pop
push
push
mov
xchg
dec
inc
xor
sbb
push
or
stos
mov
sbb
pop
adc
and
sbb
cmp
sbb
clc
pushf
xchg
sbb
lcall
xchg
out
in
addr16
ror
mov
call
ret
and
xor
call
aam
and
cmp
jge
pop
push
cmc
enter
xchg
adc
mov
pop
jne
scas
mov
sbb
jnp
xor
push
out
jmp
cmpl
fwait
mov
pushf
xchg
inc
xchg
add
mov
pop
mov
push
inc
orb
ljmp
lods
or
loop
add
and
in
movsb
inc
outsl
cmpsl
loopne
shr
jno
or
cwtl
dec
mov
rcll
or
adc
pop
adc
xor
les
lcall
lds
cld
mov
popa
out
adc
and
mov
lret
dec
pop
adcb
div
in
enter
out
lcall
push
ja
in
jge
sbb
sti
mov
dec
out
cmp
lahf
mov
leave
or
cmpsl
fsubrs
daa
sahf
outsb
mov
fisubs
push
rorb
scas
imul
popf
das
ficomps
aas
js
ja
dec
mov
rcrb
ljmp
and
add
stc
lcall
sub
shl
mov
js
stc
mov
jmp
jbe
loop
pop
data16
fwait
cmp
pop
mov
xor
dec
int3
sub
lahf
jo
lods
mov
dec
stos
push
maskmovq
sub
faddl
or
sub
fisttps
loopne
es
imul
mov
mov
int3
and
mov
loop
imul
inc
ficompl
or
mov
fnstcw
fdivl
out
ret
add
mov
and
mov
fisttpl
sbb
lock
icebp
lcall
adc
cmpsb
mov
mov
into
jo
lods
aas
jp
mov
lea
push
cmpsb
jo
aam
sub
mov
cmp
sub
rcrl
mov
pusha
or
leave
jle
aaa
jmp
js
mov
jnp
mov
mov
and
enter
push
lahf
jb
push
shrb
icebp
hlt
cmpsb
orl
cmp
mov
lcall
scas
test
cmp
rorb
orb
cltd
out
idiv
jb
iret
xor
cmp
dec
in
pop
jb
lret
dec
loop
jb
fsubrl
jo
mov
jnp
or
out
cmpsb
aaa
and
pop
stc
cmp
xor
inc
gs
cwtl
mov
jns
inc
in
or
mov
sub
in
filds
loop
jbe
or
jge
xor
js
in
adc
add
dec
orb
loop
mov
nop
jmp
out
sti
jecxz
sub
xor
fld
in
in
dec
adc
aaa
repz
fnstsw
jns
pop
add
icebp
adc
cmp
shrb
xchg
sub
inc
fistpl
jbe
loop
mov
xchg
mov
inc
sub
ljmp
and
dec
mov
cmp
add
pop
sbb
adc
or
xchg
arpl
insl
femms
ljmp
jns
das
divb
rcrb
sub
cmp
es
dec
lret
test
sbb
xor
repz
mov
roll
movl
push
pop
cmp
icebp
inc
push
xor
and
add
les
add
fcmovnb
js
or
jle
jne
test
aaa
out
cmp
sahf
or
cs
xor
test
fmul
cmpl
in
in
loopne
jbe
popa
and
fs
aas
scas
std
inc
icebp
cmc
stos
cmpb
xorb
cmp
scas
movsb
jmp
incb
sbb
sahf
xchg
stos
sti
lds
xor
xor
das
sub
shlb
cmp
test
xor
lods
fucom
js
mov
scas
lock
adc
in
cmp
pop
arpl
call
mov
ret
inc
push
imull
push
jmp
cmpsl
xor
xchg
xor
or
inc
cmp
iret
mov
dec
xchg
and
fsubrp
pop
int3
das
or
imul
xchg
sar
lea
xor
ror
inc
lcall
in
pop
push
ret
fwait
push
ret
xchg
stos
cmc
push
jo
jb
stc
pop
fistps
jno
xchg
cmp
nop
mov
dec
mov
imul
je
flds
repnz
in
push
clc
shl
cmc
sbbl
adc
into
ret
adc
mov
ds
cmpsb
xorl
cltd
loopne
lods
or
jno
into
and
bound
arpl
fdiv
out
scas
xchg
xchg
dec
jne
dec
sbb
pop
mov
ret
push
jmp
das
xor
stos
adc
lret
jns
ljmp
push
icebp
das
mov
or
rclb
mov
xor
aam
fdivrs
psubusw
or
inc
fistl
andl
icebp
xchg
mov
sahf
loope
insl
dec
add
ljmp
sbb
pushf
jle
mov
in
imul
mov
mov
int3
adc
ja
aad
xchg
sbbb
mov
loope
ja
mov
mov
xchg
imul
sahf
adc
or
dec
cmpsb
pop
addr16
inc
or
adcb
cmpsl
loope
loope
cmp
dec
jg
repnz
arpl
mov
scas
cmpsb
cmp
addr16
in
or
push
cmp
mov
xor
insl
aas
cmp
call
in
sub
movb
popa
xor
xchg
pop
imul
pop
xchg
mov
cwtl
ljmp
pop
xor
add
das
or
xchg
jnp
xor
mov
cmp
fsubr
and
lahf
mov
and
hlt
fnstenv
lret
outsb
mov
in
lahf
dec
ja
mov
idivb
je
or
or
call
ret
ret
inc
pushf
outsl
mov
cmp
push
repz
xor
sahf
imul
jle
ret
cmp
orl
xlat
loopne
xchg
sbb
fs
jmp
mov
add
mov
inc
inc
mull
gs
cltd
sbb
test
aaa
xchg
enter
popf
mov
inc
int3
loopne
icebp
pop
xor
inc
adc
cmpsl
cmp
je
hlt
inc
inc
rclb
mov
rcll
fwait
sbb
lds
lcall
pop
push
and
fcmovnbe
mov
or
push
jge
xor
push
jecxz
xor
push
mov
pop
roll
cmpsl
in
aaa
cmpsl
mov
popa
call
push
es
push
test
gs
ss
inc
jnp
ja
in
sub
sahf
jecxz
aaa
mov
sub
aaa
sub
aas
shl
mov
aam
mov
rorb
or
test
imul
adc
pushf
test
add
lret
xchg
test
xor
mov
fcomip
lahf
int
push
xchg
gs
mov
xor
jmp
mov
repz
jo
push
lds
jg
dec
inc
add
int
loopne
pop
lods
fpatan
mov
mov
or
ret
xchg
dec
xor
ficompl
cld
sti
in
push
inc
call
mov
pop
cltd
and
loop
fucomi
fbstp
jne
inc
fcomi
mov
stc
repz
nop
cmp
ja
and
add
pop
aaa
leave
ja
cli
pop
arpl
fdivrl
push
out
cmp
lahf
xlat
adc
lahf
add
into
mov
or
mov
pop
ss
or
cmp
ss
test
outsb
pop
add
daa
xor
inc
jecxz
inc
dec
stos
in
mov
cmp
icebp
scas
push
subb
into
sbb
sub
and
add
push
dec
xorb
jg
inc
stos
or
out
stos
mov
arpl
sbbl
les
pop
pushf
fwait
pop
pop
mov
jmp
test
sbb
jbe
or
dec
sti
jbe
hlt
mov
push
int3
je
inc
orb
jmp
or
push
mov
rcll
movsl
pop
scas
cmp
shl
sbb
lods
daa
push
faddl
mov
outsl
jl
sbb
shr
cld
das
adc
ds
pop
cs
and
shll
lods
lds
push
mov
in
pop
jo
inc
aaa
jns
sub
fdivl
cmp
cltd
jmp
mov
out
scas
inc
sub
enter
sbb
sbb
cli
or
dec
sub
sbb
rolb
jne
pop
repnz
adc
fisubl
outsl
inc
cmp
sti
adc
mov
loop
dec
mov
stc
imul
movsl
stos
fdivrs
icebp
sbb
int
into
sub
cmp
push
out
push
lods
fildl
mov
cli
adc
aas
stos
sbb
dec
les
fildl
lcall
adc
jge
cmp
xchg
push
adc
les
cmp
fadds
cmp
repz
in
das
stos
stos
mov
in
imull
xchg
sbb
imul
pushf
dec
es
scas
push
xor
inc
inc
ds
fdivrs
sbb
jp
jge
push
inc
inc
cmp
popf
out
sbb
mov
push
cmp
jae
xchg
repz
sub
mov
and
out
adc
add
pushf
dec
mov
ljmp
jb
lret
in
lods
xchg
adc
outsl
inc
mov
in
fcompl
lret
cmpsb
xor
testl
pop
cmpsb
inc
jae
cmp
xchg
mul
push
sub
mov
out
jae
in
mov
sub
dec
dec
xchg
add
adc
jns
ficompl
arpl
ljmp
cmpl
mov
xor
jno
mov
rorl
mov
bound
jae
inc
pop
js
ret
or
sub
mov
shlb
cmp
pop
mov
leave
lcall
data16
add
push
sti
push
add
jnp
jbe
add
dec
ds
shlb
rol
inc
movsl
cltd
stos
pop
dec
sbb
int3
pop
je
sbb
jmp
push
jo
mov
fdivl
bound
cs
push
push
sbb
mov
or
push
push
inc
mov
push
jb
gs
xchg
xchg
lods
mov
mov
pop
inc
pusha
out
sub
mov
xlat
jne
xor
or
fcoml
test
pop
aaa
sbb
mov
aad
int3
repz
mulb
repnz
and
sub
hlt
sahf
cmpl
nop
in
mov
rorl
pop
mov
ds
or
subps
subl
stos
decb
inc
jno
fildll
and
xchg
sar
mov
insb
pop
dec
mov
pcmpgtb
mov
popa
ret
dec
aad
mov
add
push
aad
sti
cld
daa
mov
in
addr16
sbb
jecxz
test
call
ret
test
mov
into
add
sub
aam
dec
and
call
ret
call
dec
in
ds
fyl2x
in
sbb
mov
xor
leave
stos
das
inc
mov
mov
mov
scas
adc
sub
outsb
sahf
or
repnz
pop
ds
xchg
jae
lods
add
or
insl
dec
imul
divl
dec
pop
mov
fiaddl
cmp
int
popf
sbb
loope
ret
jp
fistps
rol
sub
call
js
and
lea
adc
call
es
cmp
add
scas
or
aaa
fwait
fs
flds
xor
push
mov
mov
ljmp
inc
sbb
sub
mov
xor
add
xlat
mov
cwtl
xchg
int3
adc
hlt
and
in
imul
cmp
jb
std
mov
and
adcb
out
push
test
and
pop
ficomps
ret
push
adc
add
test
pop
adc
pop
dec
ljmp
pop
les
lods
adc
and
jb
insb
mov
popf
pop
bswap
shl
repnz
in
rcll
loopne
cmp
lods
arpl
in
sub
xor
push
add
fstps
aaa
dec
mov
out
cmp
inc
call
and
arpl
andl
push
push
lods
jae
into
dec
xor
dec
lds
lods
fsubl
ss
pop
pop
fisubrl
scas
mov
hlt
mov
mov
sub
pop
fadds
out
sbb
cmp
push
mov
imul
cmp
jge
fcoml
cs
jo
xor
mov
iret
lods
arpl
lahf
pop
popf
lahf
cli
cmp
adc
mov
test
in
aas
xor
movsl
jg
mov
xchg
lcall
adc
mov
imul
rorb
mov
push
fwait
insl
popf
orl
sbb
pop
mov
push
xor
scas
add
rolb
cltd
or
aad
bound
pop
push
xor
xchg
sbb
movl
sub
lock
push
inc
mov
shll
xor
cmpsb
std
jl
xor
icebp
cmp
cs
fbstp
jmp
idiv
mov
sbb
mov
inc
std
andl
ljmp
int3
or
jb
jecxz
pop
fildl
add
imul
adc
add
mov
and
mov
jge
aas
dec
addr16
das
and
loopne
pop
xor
add
xlat
mov
add
and
clc
mov
xor
mov
movsb
cli
mov
dec
rcrb
andb
push
push
xor
pop
pop
pushf
into
push
dec
dec
mov
jns
scas
insb
aaa
or
jmp
sub
sbb
out
leave
jmp
pop
inc
sbb
cltd
pushl
imul
xchg
mov
call
push
jb
std
addr16
sub
cmpsl
jne
add
stos
or
ds
jle
mov
gs
xor
jbe
shrl
add
cmp
sbb
repz
xchg
clc
clc
or
add
jb
es
loope
hlt
stos
inc
push
loope
stos
jmp
imul
mov
daa
aas
arpl
icebp
bound
and
pushf
mov
fcoml
leave
or
and
cmp
fisubrl
stos
sbb
popl
xchg
push
roll
xchg
and
pop
sub
push
push
push
and
in
insb
cltd
sbb
cmc
jae
mov
negl
test
xor
leave
fdivrs
daa
mov
jnp
push
std
sbb
dec
inc
dec
sahf
testb
pusha
inc
add
icebp
aas
js
jmp
cltd
aam
inc
call
mov
inc
pop
lock
xchg
dec
inc
or
fdivrs
push
arpl
sub
jle
mov
add
xchg
mov
lret
jmp
mov
sti
lods
addr16
adc
test
aam
push
loopne
jge
pop
sti
mov
mov
xor
lea
xor
add
sub
jae
push
sbb
outsl
mov
popa
cmp
or
sbb
adc
adc
pop
mov
addb
xchg
pushf
leave
in
daa
sbb
movsb
icebp
lock
xor
or
fstpt
mov
mov
popa
pop
mov
inc
inc
lret
jnp
xchg
mov
dec
pop
insl
dec
aas
js
or
loope
jmp
shlb
jle
popa
xor
push
cmpsl
test
out
test
movsl
and
movb
loop
mov
fnstcw
insb
mov
clc
inc
inc
or
mov
jb
and
arpl
outsl
push
pop
sbb
cmc
fistl
fdiv
dec
hlt
scas
repnz
and
jecxz
cmp
jmp
into
mov
fwait
or
in
idivl
mov
subb
shll
pusha
xorl
sbb
add
loope
jnp
ret
push
dec
dec
add
fnstenv
data16
mov
mov
jb
jg
rcrl
inc
popf
cmp
insl
jns
out
mov
movsl
gs
and
sarb
les
pop
add
stos
xor
mov
push
pop
fsts
fisubl
pushf
idivb
fmul
stos
xchg
sbb
mov
push
pand
dec
mov
out
adc
pop
mov
jo
mov
mov
push
repz
xor
sbb
sub
bound
mov
mov
enter
outsb
push
out
cmp
outsl
aas
mov
loop
sbb
jo
andl
dec
lret
mov
or
add
rorl
jmp
stos
pop
rolb
data16
lods
cs
iret
inc
jg
xchg
nop
scas
mov
nop
ds
cmp
jns
xchg
cli
lret
iret
inc
int3
repz
push
sub
pop
and
mov
out
adc
jne
es
ja
mov
mov
cmp
cmpsl
jno
push
push
xor
je
and
idivb
pop
and
mov
pop
fmull
lret
ja
adc
pushf
loopne
xchg
fmuls
xor
jno
xchg
sbb
push
imul
mov
imul
jecxz
cli
lock
jmp
xchg
call
mov
jmp
add
mov
sbb
subl
fsts
and
in
cmpsb
jne
pushf
out
pop
ret
fld
out
dec
sbb
inc
ja
lret
xor
shl
mov
call
cmp
pop
sbb
mov
adc
mov
aam
or
inc
xchg
fisubs
cmp
mov
push
lock
sub
int3
cwtl
ror
popa
jge
sub
mov
inc
in
inc
call
and
xchg
addr16
and
mov
or
icebp
popf
inc
divl
lock
jp
pop
es
pop
das
add
loop
add
or
xchg
push
jmp
stc
aaa
xchg
addl
dec
cltd
cmp
into
stos
push
inc
mov
shl
push
push
adc
cmp
loope
and
mov
mov
mov
mov
jmp
cmp
dec
cmp
adc
mov
arpl
stos
repz
xchg
inc
popa
push
jo
dec
fldt
hlt
jle
mov
rcrb
mov
push
sub
mov
mov
cmp
lea
lock
ret
sub
jne
stos
dec
mov
mov
and
xchg
popf
mov
in
shll
and
mov
rorb
dec
icebp
mov
cwtl
les
mov
push
cld
pushf
insl
in
mov
out
repz
pop
mov
movsb
pop
xor
jns
jbe
or
aad
and
mov
ljmp
fdivrs
test
inc
loop
dec
and
ja
sbb
and
outsb
sub
loop
adc
adc
pop
addr16
clc
pop
jl
jb
cmc
out
xchg
adc
scas
sbb
shr
and
mov
add
lock
dec
in
dec
clc
cmp
xchg
mov
jo
scas
pop
mov
inc
sbb
mov
pop
xchg
mov
mov
xchg
xchg
jns
inc
mov
mov
test
fisttps
sarl
sbb
or
mov
imul
xchg
outsb
lret
popl
push
negb
fistpl
xor
xlat
fcomip
pop
inc
stos
sti
cmpsb
in
mov
rcrl
lods
inc
adc
or
mov
push
adc
mov
dec
test
int3
addb
push
inc
outsl
jne
xor
or
scas
and
adc
push
js
in
jg
sti
testb
cmp
popf
mov
std
mov
sbb
hlt
push
mov
out
jmp
mov
jbe
pop
aas
pusha
push
jg
mov
lahf
add
loope
pop
addr16
pop
xchg
push
and
sub
mov
rep
xchg
out
sbb
mov
movsb
cmp
or
cmp
outsl
pop
mov
mov
daa
popa
ret
fsubl
mov
mov
pop
xchg
jmp
ret
push
sti
pusha
ffree
sbb
sbb
rclb
cmpsb
sub
adc
jp
bound
pop
ja
xchg
out
stc
cmpsl
mov
dec
or
scas
in
insb
aad
outsl
fdivrs
outsl
sahf
push
sub
movsl
out
sbb
fiaddl
pop
pop
jo
xor
mov
xor
dec
shlb
jo
andb
sub
and
mov
xchg
adc
sub
fsubl
fdivp
add
jg
push
cmp
pushf
and
xchg
inc
mov
shll
aad
dec
out
push
pop
mov
add
and
jb
cmp
popa
repnz
stos
lea
bound
and
mov
xchg
jb
out
pop
jnp
adc
test
imul
and
lret
and
add
jp
sub
adc
xor
pop
sarb
dec
inc
add
stos
mov
dec
pop
xor
lcall
xchg
xchg
ds
loopne
xchg
jnp
stos
lods
rcr
xchg
jg,pn
stc
bound
pushf
cmpsb
test
test
jns
mov
mov
inc
mov
cmp
sbb
pusha
sub
dec
dec
sbb
std
push
sbb
adc
fildl
into
loop
lock
cmp
or
int
jno
pop
pop
mov
xor
pop
sub
mov
push
xchg
lret
cltd
pushf
or
gs
mov
in
inc
lea
xchg
jmp
mov
jne
sbb
jno
aaa
lcall
push
icebp
mov
mov
mov
aad
sub
dec
mov
fcmovnu
notb
mov
adc
movsb
adc
pop
xchg
inc
inc
cmpb
out
pop
cmp
lods
cmpsl
ret
in
push
aam
adcb
pop
mov
imul
in
fwait
loop
push
jae
push
jmp
inc
outsb
mov
dec
mov
xchg
sarl
jp
mov
stos
movsl
arpl
push
mov
jle
outsb
les
jmp
div
repnz
lds
dec
and
cmp
jmp
xchg
pop
inc
ret
sub
subb
xor
jbe
cmp
arpl
or
and
jb
shlb
pop
jmp
sbb
push
icebp
test
jne
xor
mov
stc
xchg
mov
pop
ret
sub
mul
sub
mov
jmp
jno
sahf
mov
repnz
sbb
cmpsb
or
das
fstl
pop
mov
aas
sti
xchg
mov
push
xchg
ret
mov
xchg
test
jno
fisttpll
addb
sbb
nop
movntq
ljmp
sbb
sbb
rclb
sbb
test
sub
repnz
xlat
jmp
push
jl
mov
in
mov
pop
xchg
adc
rorl
mov
sbb
inc
lock
inc
pop
or
sub
loop
mov
in
rolb
inc
les
shr
xor
jmp
test
mov
inc
mov
fdivr
jg
sbb
insb
adc
popf
mov
inc
out
aam
pushf
jmp
fwait
inc
mov
adc
pop
stos
push
adc
lret
pop
lds
arpl
hlt
dec
xor
rorl
push
shr
out
and
xor
iret
sbb
mov
idivb
inc
lgs
xchg
testb
scas
dec
scas
push
scas
mov
test
xor
sbb
je
cltd
mov
mov
aas
ljmp
fnstcw
adc
inc
dec
sub
lahf
sbb
test
lods
mov
fcmovbe
mov
jnp
pusha
adc
push
mov
mov
jae
mov
push
loopne
mov
jb
jb
lea
and
and
sub
test
jnp
dec
int
push
nop
mov
adc
push
add
outsb
lcall
pop
pop
mov
outsl
xchg
mov
and
inc
mov
or
je
sub
mov
call
movsl
lods
cs
jo
mov
pop
out
jecxz
mov
dec
mov
add
mov
sub
push
std
test
aam
jp
mov
and
add
mov
pop
dec
inc
lcall
xchg
mov
push
iret
add
push
in
or
adc
mov
xor
and
icebp
sub
xchg
daa
sbb
inc
test
xor
sbb
scas
enter
ds
es
pop
mov
sbb
leave
ret
mov
fwait
xchg
cmc
and
aad
xor
mov
loope
bound
rcrl
or
mov
lcall
mov
stc
sbb
or
dec
enter
outsl
add
test
add
or
dec
inc
lcall
es
lahf
test
aad
xlat
mov
iret
sbb
fists
jne
aas
insl
ja
or
fistpll
movsb
call
jge
sahf
adc
jae
scas
xchg
and
adc
outsl
and
icebp
lahf
mov
add
mov
push
cmc
test
push
stos
push
push
dec
jp
aaa
push
push
aaa
das
mov
imul
cmp
or
pop
sbb
jle
push
and
loopne
xor
mov
push
lcall
mov
scas
xor
inc
or
mov
pusha
sbb
mov
push
mov
sarl
adc
sub
fs
inc
or
jb
mov
jg
pusha
jp
cmp
in
mov
fstpl
cmp
add
pop
jae
pop
loop
pop
jecxz
and
ror
insl
ljmp
jecxz
pop
mov
push
subb
mov
test
lahf
loop
push
mov
cld
mov
jo
stos
dec
leave
push
rcll
jmp
ljmp
in
ficompl
mov
xor
scas
int
ret
stos
je
idivb
aas
fstpt
adc
inc
inc
pop
or
leave
stos
dec
mov
jae
or
repnz
in
mov
das
popf
mov
add
movsb
mov
into
push
test
sub
mov
xor
or
ret
stos
inc
cltd
into
into
pop
xor
mov
test
jb
int
outsb
push
cmp
shll
fists
dec
jge
sub
dec
jnp
fmull
lods
pop
flds
iret
and
cmc
jno
fwait
lods
cltd
popa
pop
aas
sbb
inc
insb
xor
out
push
xchg
clc
mov
cmpsb
rcrb
adc
adc
push
cs
add
cwtl
js
les
je
xor
push
push
int3
mov
js
jle
das
cmpsl
test
sub
dec
inc
rclb
sub
in
mov
ss
je,pn
lea
outsl
jge
cmpsl
lcall
dec
lcall
rclb
inc
mov
add
les
push
mov
lcall
xor
fld
push
shrl
jge
jno
sbb
lea
fiadds
loop
sarl
lret
xor
jbe
sub
and
adc
enter
mov
pop
insl
outsl
mov
inc
xchg
sbb
or
mov
mov
hlt
push
mov
popl
fidivrs
je
jg
mov
mov
out
inc
pop
adc
or
roll
jmp
stc
xor
and
jl
les
sbb
adc
cmp
shlb
lock
sub
xchg
scas
in
mov
clc
sub
out
lret
arpl
add
fcomi
mov
sbb
mov
nop
push
or
jp
cmp
inc
mov
lret
pop
jbe
mov
inc
sbb
insl
dec
in
cs
mov
sbbl
in
or
adc
test
inc
inc
pushf
pop
out
jl
mov
inc
jp
xchg
fnsave
add
push
fildl
or
xchg
adc
and
jnp
and
repz
cmpsl
mov
inc
jne
notb
push
inc
loopne
or
and
xor
sbb
xchg
addb
aas
roll
pusha
fsubrl
insl
and
push
rclb
test
out
cmp
cmp
sbb
lret
pop
sub
xor
sbb
xor
insb
hlt
clc
xchg
shlb
push
outsl
cvtpi2ps
and
test
add
xchg
jns
jl
xchg
cli
mov
int
sti
mov
shll
add
aas
pop
aam
repz
call
addr16
outsb
testl
dec
sub
jbe
jae
cmp
push
ljmp
cmpsl
dec
rcrl
aam
mov
push
jbe
mov
add
ret
popa
xchg
pop
jle
out
mov
sub
adc
jl
dec
or
or
jne
outsb
mov
addr16
std
inc
jg
push
jge
sub
loopne
loopne
mov
sub
movsl
mov
jp
fisubrl
fcmovnu
add
jp
fwait
mov
adc
mov
in
pop
add
mov
jmp
call
add
dec
xlat
cs
inc
dec
dec
hlt
aas
add
dec
add
lds
push
gs
icebp
cwtl
imul
std
jle
je
std
adc
xor
ljmp
int
and
shlb
aaa
jecxz
jnp
stc
xchg
je
lods
ljmp
addb
push
dec
fldt
clc
lcall
mov
jbe
sbb
cmpsb
iret
xchg
scas
rclb
js,pt
or
jbe
out
mov
pop
pop
mov
gs
add
cld
push
cmp
icebp
fdivrs
jg
mov
arpl
repz
imul
and
mov
cmc
xlat
lods
ret
sti
push
pop
es
rcll
popf
and
mov
bound
pop
rolb
and
call
mov
inc
or
or
cmp
push
int
sbb
mov
add
outsl
sub
sahf
mov
mov
xchg
outsb
or
pusha
add
popf
xchg
test
jo
cltd
pop
jmp
cmp
xor
or
xchg
cmpsl
mov
das
mov
jb
rclb
or
sbb
pop
inc
pushf
out
jbe
mov
mov
cmpsl
xor
test
outsl
adc
pop
mov
fdivs
pop
adc
mov
mov
mov
inc
pop
jg
stos
pop
adc
xchg
mov
adc
fcomp
ja
inc
dec
xchg
es
lock
inc
sarb
lock
inc
push
shrb
sub
paddsw
mov
rsqrtps
add
inc
or
enter
jnp
adc
js
jp
adc
adc
pop
jns
sbb
ret
pusha
movsl
push
mov
shl
or
negb
xchg
or
mov
aam
jbe
jns
sub
lret
mov
or
dec
or
jo
sbb
loopne
cmp
mov
std
sub
test
popf
pushf
pushf
stos
inc
ljmp
mov
jg
dec
cli
outsl
sbb
fldt
sar
xor
pop
shlb
and
pushl
enter
adc
mov
jp
pop
xchg
xlat
mov
adc
adc
dec
jmp
jnp
sti
out
idivb
lcall
repnz
fstl
mov
xlat
mov
bound
popa
xlat
adc
pop
fidivl
xor
mov
cmpsl
dec
push
adc
sti
dec
xchg
adc
push
jl
fimuls
adc
mov
adc
xor
jo
xchg
sbb
insb
mov
or
stc
dec
xchg
inc
mov
inc
mov
xor
cli
sub
jmp
jnp
jle
mov
orl
xor
int
outsl
fstps
adc
dec
mov
jg
xor
pop
cmp
jmp
push
mov
movb
mov
in
jl
push
aad
adc
jb
repz
push
jmp
mov
fidivl
push
add
mov
lea
gs
xchg
xchg
cld
cwtl
mov
jb
adc
pop
mov
add
and
jle
lahf
push
push
dec
pop
lds
jmp
dec
dec
pop
xchg
testl
mov
aam
xchg
js
ljmp
xor
or
insl
aas
xor
aad
dec
sub
or
sbb
lods
jmp
jae
mov
into
mov
orl
lods
inc
and
jmp
roll
dec
inc
mov
xchg
sarb
cmpsl
int3
rclb
inc
rolb
mov
fisttps
cmp
cmp
jnp
inc
aaa
jp
pop
aad
push
push
loop
sbb
xor
push
fldl2e
or
dec
dec
cltd
mov
jnp
rcl
adc
loope
mov
test
ss
sub
out
into
xchg
out
dec
aad
clc
fmul
cld
mov
dec
pop
push
dec
mov
mov
je
scas
loop
lcall
add
gs
ds
or
das
xchg
jb
dec
mov
lret
pop
xchg
int3
or
rsqrtps
addr16
sub
xchg
sub
lcall
je
add
or
xchg
cld
sub
cltd
int
add
loopne
or
popa
and
int
push
sub
mov
aam
test
nop
or
les
test
cmpsl
sub
fwait
jns
dec
cmpsl
dec
jmp
xchg
xchg
shrl
movsb
fnsave
dec
sbb
mov
xchg
call
mov
popa
xorl
inc
popf
jmp
movsl
aas
nop
call
adc
popa
cwtl
add
and
cs
cltd
jo
jae
cmpsb
cmpsb
mov
push
js
and
sbb
jl
jae
pusha
add
mov
gs
cmp
xlat
mov
aam
fmul
notb
inc
loop
or
jecxz
popa
mov
xchg
mov
gs
xlat
lods
push
jb
or
push
dec
shlb
push
insl
mov
cmc
lcall
jp
rcll
cmp
cmp
movb
bound
lock
push
mov
rcrb
rclb
mov
sbb
sbb
data16
cmp
daa
jle
fistpll
test
es
sbb
pop
jns
cmp
cwtl
jecxz
pop
adc
adc
dec
daa
push
jmp
or
mov
dec
into
ret
cmovl
pushf
jno
mov
pop
sbb
pop
rcr
push
mov
xor
fistl
mov
into
into
and
aad
pop
mov
adc
and
jo
insb
mov
inc
add
sub
js
mov
cmp
lret
sti
xor
push
pop
sub
cwtl
jmp
cmpsb
fwait
pop
inc
movsl
pop
shl
pop
call
mov
jbe
aad
add
or
jge
popf
not
adc
jae
jb
jnp
push
scas
add
ja
mov
push
jns
mov
push
inc
sbb
mov
pop
repz
loop
inc
ja
push
sub
shll
jo
mov
and
das
push
push
dec
add
sarl
lret
shrl
cmp
inc
pushl
mov
mov
mov
icebp
push
xor
fdivr
pop
pop
cmp
and
insl
push
jp
stc
jo
and
xchg
xor
or
roll
cmpsl
subl
es
jns
xchg
or
pushf
cmpsl
incb
xlat
js
out
xlat
imul
test
jge
mov
push
mov
adc
cmc
cmp
sbb
fbld
push
mov
loopne,pn
mov
mov
mov
shlb
cmc
inc
in
cs
fldenv
lods
repnz
sub
addl
stos
in
add
pop
mov
cli
pop
xor
lahf
test
pop
hlt
dec
xchg
xchg
adc
inc
outsl
scas
movsb
inc
icebp
pusha
lods
adc
inc
adc
cmc
or
icebp
jb
mov
stc
jae
or
outsb
xchg
insb
int3
inc
cmc
stos
nop
repnz
flds
dec
out
iret
gs
stos
pop
popa
cmp
xchg
jle
cmpsb
daa
cmc
mov
int3
call
loope
in
mov
sarb
adcb
je
push
push
arpl
outsb
fabs
pop
in
jge
fstpt
loop
lcall
loopne
adc
inc
mov
shll
neg
nop
pop
negb
adc
gs
inc
cmc
in
into
add
lock
jecxz
inc
insb
cmp
in
and
cmpsb
cmpsl
test
fisubrs
cld
xchg
shrb
mov
out
xor
mov
xchg
es
arpl
mov
jb
sub
pop
dec
les
cwtl
pusha
lock
je
scas
ja
sub
dec
ja
mov
jbe
xor
mov
orb
jb
dec
and
cmc
loope
jmp
dec
lahf
mov
mov
adc
mov
mov
out
dec
pop
mov
in
lret
iret
mov
dec
sahf
pop
sub
ret
mov
sub
pushf
and
leave
add
adc
aam
orb
jnp
movsl
or
xchg
xor
scas
out
mov
jp
xlat
add
movsb
xchg
enter
das
mov
ja
ret
mov
sbb
fisttpl
cmp
lret
inc
cmp
cld
imul
xor
data16
lcall
and
cmpsb
xor
and
js
jo
sti
dec
enter
push
lret
cmpl
popf
or
cmp
push
pushf
mov
adc
cwtl
call
cli
jecxz
aam
add
or
js
lret
sahf
sub
sub
enter
cltd
adc
mov
xor
stos
or
xchg
mov
pop
cmp
out
out
sbb
add
jge
adc
dec
xor
mov
mov
iret
xchg
inc
mov
or
testb
and
gs
jns
daa
lea
mov
shll
aad
push
daa
dec
xchg
xor
inc
fdivrs
test
mov
jg
xchg
cmp
dec
jle
sbb
xchg
adc
lds
sbb
aad
mov
jle
cmc
add
mov
pusha
pop
leave
sahf
inc
ja
cmc
xchg
jle
aas
neg
fidivrl
das
jb
nop
pop
mov
ss
mov
dec
lahf
mov
in
mov
inc
mov
cltd
cmp
jp
mov
fidivrs
inc
loope
push
push
pop
or
imul
stos
cmpsl
push
push
mov
mov
jp
ret
lret
mov
dec
or
cwtl
mov
dec
lret
mov
fsubrs
inc
sahf
lock
and
jp
pusha
aaa
loopne
dec
adc
sahf
push
nop
shrl
cmp
popa
bound
push
imul
xchg
cld
aaa
cmp
push
jno
clc
push
pop
cmp
inc
in
movsb
aad
pop
addb
jbe
das
aaa
push
in
into
xchg
fldcw
inc
shlb
inc
add
mov
xchg
jg
jne
out
fcmovu
jl
ret
sub
push
popf
jge
or
and
or
cs
pushf
negl
sarb
sub
js
dec
adc
mov
pop
dec
pop
loopne
pop
aaa
mov
mov
adc
jne
nopl
rcrb
mov
add
iret
push
sahf
cltd
fadd
sbb
sbb
adc
adc
fbstp
dec
add
lock
cmpsb
cmc
adc
adcb
int3
into
stc
loope
jle
in
lret
and
xchg
inc
pushf
bt
or
into
cmp
sub
jne
jo
sbb
jo
pop
add
jnp
mov
je
adc
mov
inc
insl
jg
loope
push
mov
or
jnp
sbb
pop
sahf
aam
jne
loope
fcmovbe
mov
popa
push
sti
sub
xor
lea
inc
and
sarb
sti
xor
iret
aam
insl
push
subl
and
scas
dec
xor
aaa
cld
pop
add
std
or
sbb
ss
aaa
leave
insl
mov
pushf
clc
ja
std
cwtl
and
jb
xor
ja
or
sub
pusha
mov
xchg
hlt
adc
mov
or
rcrl
sti
jno
aad
cmp
dec
sbb
pop
idiv
sbb
adc
ss
push
data16
dec
mov
lods
mov
xchg
test
mov
and
insb
bound
bound
mov
xchg
xchg
cmp
mov
les
and
pop
pop
adc
jbe
popl
jmp
inc
decl
lret
sahf
ja
in
inc
imul
dec
scas
rcl
gs
daa
lcall
insl
cmp
pop
sub
push
fisttps
dec
mov
es
ret
cmp
sub
sbb
fimull
sub
xchg
dec
jecxz
pop
jbe
pop
push
rorb
xchg
arpl
sbb
popa
add
pop
jg
mov
or
out
sub
sub
ret
inc
and
insb
test
adc
adc
or
mov
pop
rcrl
pop
lret
adc
jg
sbb
enter
push
hlt
call
push
sub
int
push
rcll
lcall
mov
insb
push
mov
xor
cmpsl
and
xchg
pusha
out
cmp
aas
bswap
jnp
or
push
cmpsl
mov
inc
push
insl
mov
lods
xor
dec
jmp
mull
lods
lds
aas
rorb
mov
dec
js
cmpsl
jmp
push
and
insb
nop
loope
push
or
out
push
fstpl
mov
loopne
hlt
inc
inc
xchg
shlb
frstpm(287
mov
cmp
popa
dec
call
nop
sar
inc
sarb
insl
mov
lock
xchg
jp
js
jle
push
inc
cmpsb
inc
push
jo
or
cmp
insl
mov
sbb
jbe
mov
push
add
jecxz
lock
cmp
adc
in
pop
or
add
cmc
or
lcall
enter
popa
arpl
dec
je
fists
movsb
mov
add
push
out
repz
xchg
mov
push
cmpsl
int
mov
jle
cmp
mov
sbb
pop
dec
sbb
popa
out
jmp
dec
je
jb
stc
xchg
ss
pop
jb
jmp
dec
mov
mov
xlat
pop
xor
mov
and
ja
xor
stos
rolb
imul
rorl
nop
sbb
pop
push
jle
cmp
arpl
ja
jge
fcmovnu
or
iret
in
sbbb
xor
pushf
xchg
daa
and
cmp
jno
pop
es
dec
add
inc
push
test
xchg
sbb
or
mov
jo
scas
aad
andb
push
lret
adc
in
in
das
out
clc
lret
jmp
loopne
enter
cmp
jnp
jmp
repz
mov
fucomp
repnz
std
icebp
test
push
iret
call
fldl
scas
cmpsb
or
addr16
out
clc
and
stos
lahf
mov
jns
loop
int
xor
in
xlat
cmp
jge
lahf
push
jl
cmpsb
dec
out
or
cmp
in
pop
aam
test
add
dec
repnz
in
lret
inc
out
in
jae
in
clc
fsubrl
je
rclb
xchg
pop
arpl
repnz
enter
fldenv
add
xchg
icebp
pop
pushf
cmp
fnstcw
add
mov
sbb
jb
gs
xor
fldcw
out
dec
mov
mov
adcl
scas
xor
inc
ret
pushf
mov
and
loop
in
push
mov
add
scas
ss
pop
fstpl
sbb
xor
es
clc
jb
jl
mov
xchg
sbbl
push
sub
stc
mov
aaa
lret
outsl
add
xchg
insl
xchg
cwtl
imul
rolb
fsubrs
insb
mov
inc
aas
sub
mov
inc
inc
push
push
arpl
xlat
and
xchg
fwait
ja
es
jecxz
xlat
mov
ds
xor
jne
inc
insb
cltd
adc
push
shr
shlb
mov
or
push
xchg
mov
shl
arpl
imul
or
pusha
jnp
cmp
xlat
push
inc
pop
xchg
adc
mov
pop
xor
adc
add
fisttpll
lahf
and
mov
orb
and
loope
add
cli
push
xchg
push
cmpsb
out
cmp
inc
mov
jle
and
idivl
jno,pt
fnstsw
pop
cmpsl
mov
mov
and
mov
lods
add
and
out
mov
das
mov
clc
jnp
js,pt
stc
dec
test
daa
inc
fsts
mov
imulb
jecxz
fisubrl
lea
dec
inc
cld
and
inc
xchg
sub
dec
mov
gs
jle
jmp
stos
jno
jmp
incl
es
fsubrs
arpl
xchg
bound
mov
xor
add
out
mov
sbb
mov
sbb
ss
call
xor
mov
insb
and
sbb
pop
mov
add
push
mov
sub
sub
iret
filds
inc
sbb
jns
shlb
xor
inc
jmp
mov
hlt
out
push
inc
outsl
mov
push
sbb
xchg
pop
fxch
fidivl
jb
imul
push
sbb
mov
rcl
jns
dec
cmp
fcoml
bsf
add
mov
movsb
push
movsb
cmp
push
adc
dec
out
xchg
inc
add
jb
or
mov
cmp
mov
iret
mov
add
mov
mov
fsubp
xchg
xchg
or
or
xchg
test
fsubs
sbb
pop
pop
xchg
cmc
mov
sub
fists
cld
pop
mov
aas
inc
inc
mov
mov
sub
das
push
orl
in
sti
in
cmp
clc
mov
inc
into
jbe
xor
sub
mov
in
cmpsb
pop
xor
clc
fnstenv
mov
out
mov
cmp
push
shr
push
mov
call
das
sbb
sarl
out
or
int
jmp
movsb
std
lret
add
mov
lds
movsl
sbb
cs
pop
push
mov
jae
mov
dec
cwtl
or
aam
push
sbb
sti
xchg
adc
pusha
test
and
imul
xor
fmuls
int
imul
inc
std
xchg
sub
push
xchg
lock
mov
and
sbb
bound
jae
imul
push
aam
jb
cmp
rorb
adc
adc
lock
insb
inc
push
push
push
push
call
or
jge
push
mov
inc
mov
leavew
xor
ss
mov
sub
cmc
push
cld
mov
push
pop
sbb
xor
cmpl
sub
loope
pushf
pop
and
sbb
movsb
pop
insl
or
sbb
xchg
or
out
pop
sub
imul
std
sbb
stos
jae
fnstcw
pop
push
popa
insb
int
pop
int
imul
faddl
pop
xchg
rorb
xor
dec
loopne
pop
int
outsb
hlt
sub
aaa
mov
fwait
cmc
add
ljmp
sbb
inc
mov
fucomi
mov
inc
insl
cmp
or
scas
lds
push
aas
xor
pop
ss
dec
mov
jp
xor
sub
inc
out
popf
push
push
cmpl
mov
out
dec
adc
or
dec
adc
jno
dec
lods
and
xchg
add
jnp
mov
scas
cmc
inc
jo
xor
scas
cmp
sub
jbe
sbb
lcall
iret
mov
int
ret
popf
stos
lahf
sbb
mov
lahf
and
pop
cwtl
mov
call
icebp
mov
mov
mov
in
adc
ds
ja
repnz
mov
test
call
mov
xchg
ds
das
jp
pop
fidivs
cmc
in
scas
mov
sbb
jae
xchg
push
cs
jecxz
ror
cmc
mov
cmpsb
sti
lods
int
cmpsl
cmp
jbe
inc
jp
icebp
mov
lcall
or
pusha
mov
sbb
cmp
mov
jle
lea
and
xchg
out
popa
push
shll
bound
add
in
insb
xchg
test
inc
mov
lock
mov
jnp
and
cmp
movsl
mov
mov
adc
and
sbb
aas
cmp
add
push
and
mov
js
dec
arpl
mov
pop
cltd
into
fcoms
lcall
lock
push
push
test
test
push
bound
pop
jge
mov
dec
inc
in
test
cltd
jo
adc
ds
sahf
in
ficoms
pop
mov
mov
repnz
ror
mov
in
popa
xor
xor
imul
in
dec
fisubrl
and
mov
inc
xchg
pop
xlat
outsl
jl
or
leave
and
ret
ds
sbb
push
shl
lahf
std
adc
sbb
shll
jmp
fnsave
xor
mov
repnz
jne
mov
add
pushf
push
mov
loopne
adc
mov
iret
and
fld
bound
int3
push
mov
es
aaa
inc
inc
xor
jnp
lret
pop
push
test
and
jp
xor
ja
cmpsb
inc
test
repnz
and
ds
out
mov
fsubrl
push
lods
mov
outsb
mov
movb
mov
adc
mov
cmp
push
xchg
pop
push
mov
xchg
mov
mov
mov
cmc
xchg
adc
pop
mov
stos
enter
dec
mov
aaa
int3
sahf
jg
sahf
lods
pusha
mov
sbb
imul
mov
jnp
sub
leave
scas
aaa
lock
mov
or
and
pop
push
movsl
sub
rcr
push
adc
popa
inc
add
fcmovnu
popf
mov
sub
pop
in
cmp
pop
inc
sbb
jge
adc
movsb
shll
fnstenv
jge
lahf
push
and
or
addl
in
adc
xor
xchg
ds
inc
test
mov
inc
mov
mov
sti
stos
es
add
int
in
les
or
fwait
in
dec
ds
sub
mov
jb
enter
lret
add
xchg
hlt
repz
and
mov
push
dec
mov
sub
push
sub
mov
and
sti
mov
test
add
xor
fstpl
dec
daa
dec
outsl
mov
push
ret
xor
out
xor
add
add
fimull
sub
or
ljmp
fwait
or
aaa
out
add
and
in
push
push
push
push
push
jmp
mov
repnz
xchg
orb
pushf
jecxz
pusha
or
inc
fadds
and
xchg
fcoml
mov
dec
cmpsl
jbe
test
out
into
lock
outsb
out
cltd
push
and
pop
push
lea
xchg
shr
sbb
stos
addr16
adc
inc
sub
shrb
addr16
jle
iret
add
mov
mov
dec
add
lds
mov
jb
in
cmc
imul
lcall
cld
jle
out
aaa
out
lods
imul
nop
inc
stc
xchg
je,pt
shrl
pop
out
add
sti
loop
imul
lock
js
dec
mov
inc
push
pop
sbb
aaa
je
sub
adc
pop
sbb
incl
jne
ret
stc
shlb
mov
imulb
mov
mov
orl
push
fimull
xor
aaa
ds
mov
cmpsb
jb
stos
inc
xor
and
int3
push
push
mov
pop
xlat
xor
js
push
jg
add
mov
outsb
dec
popa
dec
cs
je
fcomps
bound
inc
in
pop
hlt
das
xor
lahf
syscall
push
cmp
jecxz
movsl
or
fidivs
std
mov
addr16
ds
jmp
adc
stc
les
scas
mov
mov
mov
cmp
and
adc
mov
in
or
and
enter
dec
arpl
xorl
inc
cwtl
loop
fcom
arpl
xchg
testb
xchg
arpl
ja
lds
pusha
cli
pop
or
in
jge
mov
xor
nop
mov
push
xor
xor
sbb
gs
cmp
repz
adc
int
mov
scas
int3
mov
jmp
mov
inc
es
adc
push
push
ljmp
aaa
mov
inc
mov
xchg
mov
xchg
daa
dec
sub
mov
in
xlat
ss
add
inc
pop
pop
pushf
lods
sub
lcall
and
dec
das
cmp
in
dec
lds
into
jae
jnp
sub
gs
out
shr
imul
mov
dec
inc
jg
mov
lods
out
cmp
daa
mov
pop
in
xchg
in
cld
or
mov
pop
and
es
adc
fcompl
subb
cli
dec
jns
mov
loope
or
mov
mov
mov
and
iret
fisubrs
icebp
out
into
in
iret
int
mov
lret
fcom
popf
cwtl
incl
and
sub
cmp
popa
in
dec
movsb
cld
mov
push
adc
js
dec
jbe
xchg
fidivrl
inc
cltd
ljmp
sbb
jp
popf
pop
hlt
mov
mov
mov
xchg
jae
mov
loop
loopne
mov
and
or
mov
jb
adc
leave
clc
movsb
fiadds
sahf
mov
mov
outsb
jmp
jle
xor
movsl
jae
test
jae
push
push
or
adc
inc
push
popa
adc
test
stos
and
jl
dec
inc
push
imul
cmp
outsl
xchg
divl
push
loop
pop
dec
push
pop
mov
mov
mov
push
cmpsl
mov
sti
lds
lahf
dec
sbb
test
push
push
shlb
sahf
lock
sahf
push
push
cmp
std
pop
mov
aaa
jne
hlt
inc
xchg
rcrl
adc
xor
lock
repnz
lcall
jno
cs
pop
std
mov
xor
ret
xchg
les
outsl
or
mov
mov
push
lea
decb
push
pop
sub
xchg
mov
js
inc
inc
mov
add
fnstenv
mov
ljmp
xchg
insl
enter
cmpsl
adc
mov
pusha
mov
popa
rol
outsl
int
js
mov
ljmp
xor
into
xchg
push
inc
icebp
dec
std
mov
adc
xlat
fnsave
mov
cmpl
ret
inc
enter
jno
lret
test
lret
mov
jle
sbb
jle
xchg
mov
in
pusha
arpl
outsb
sbb
mov
mov
outsb
gs
psubb
push
test
inc
mov
test
ja
icebp
or
jne
loopne
add
pop
push
jb
dec
jbe
jae
mov
sub
icebp
addr16
lea
pusha
incl
sbb
mov
inc
in
cmpsl
sahf
xlat
aas
push
pop
and
iret
add
fs
cmc
and
push
push
push
inc
stos
jno
into
or
outsl
leave
in
dec
jne
pop
std
adc
sbb
jl
pop
mov
lret
cmp
fildll
das
or
push
popa
push
dec
push
cmp
mov
mov
cs
inc
aas
nop
scas
stc
mov
inc
push
add
adc
inc
iret
inc
pop
pushf
lds
aaa
fidivl
js
push
or
sbb
movsb
mov
arpl
sbb
mov
add
andb
sbb
sbbl
lahf
leave
mov
stos
dec
push
out
shlb
insl
pop
call
and
pusha
mov
or
lods
mov
aad
xchg
adc
mov
rolb
lock
mov
jns
lahf
jecxz
sbb
lahf
inc
cmp
adc
sub
gs
loop
lods
mov
mov
and
outsb
inc
xor
shrl
fldln2
push
adc
xchg
xor
or
add
loopne
sbb
pushf
test
jg
orl
mov
pop
and
mov
fs
stos
sub
mov
adc
push
arpl
orl
scas
arpl
fwait
out
cmp
adc
std
push
add
es
imul
jo
subl
and
xchg
sbb
xor
or
adc
jb
cltd
xchg
push
push
mov
lods
int
fwait
and
sub
xchg
loope
pop
imul
notb
mov
or
enter
cmp
mov
and
jge
push
mov
mov
or
hlt
pop
adc
mov
add
pop
fsubrl
or
into
fs
lret
mov
test
imul
sub
cld
xor
stc
hlt
pop
lret
outsl
cwtl
cmpsl
and
jns
lret
sarb
add
sbb
sti
mov
stc
xorb
sub
pop
mov
loope
xchg
mov
mov
sbb
or
movsl
jge
lret
sub
push
xchg
mov
sbb
inc
cmpsb
sbb
mov
adc
push
pop
sarb
into
mov
mov
aam
sbb
inc
repz
xlat
mov
pop
aam
dec
mov
pop
add
xchg
insl
loopne
xchg
sbb
loopne
and
iret
push
ds
jne
nop
push
stc
dec
nop
pop
xlat
mov
xchg
cmc
popa
dec
cld
or
cltd
sub
enter
cmp
jno
leave
ret
pop
pop
rcll
and
cmp
out
mov
push
sub
sub
xchg
or
mov
into
inc
test
andl
jmp
add
sbb
js
out
aad
das
imul
sbb
and
add
shlb
sub
mov
push
fidivl
mov
and
cmc
test
pop
inc
std
mov
adc
lds
add
xchg
jg
sbb
dec
mov
mov
loope
aas
cmp
rorl
inc
adc
cmpsl
scas
mov
xchg
mov
sub
lret
jge
aas
or
sbb
xor
rclb
loope
xlat
mov
inc
hlt
mov
rep
into
push
test
mov
sbb
cmp
test
and
out
repz
inc
in
cli
cmp
pop
call
orl
xor
in
ljmp
outsb
mov
pop
jl
leave
outsl
jo
xor
push
jo
insb
jae
mov
std
xor
jp
out
lret
fsubrl
lret
jmp
and
insl
xor
lcall
adc
push
add
mov
mov
es
daa
adc
aam
pop
insb
in
xchg
ret
and
cmp
adc
imul
push
pop
int3
push
mov
or
movb
test
frstor
std
sbb
mov
ljmp
in
pop
adc
mov
enter
xchg
fwait
jecxz
mov
enter
cmpsl
add
cld
movsb
xor
js
mov
insl
insb
push
rcll
mov
add
xchg
jo
das
out
mov
aam
xor
add
int
mov
popf
pop
push
mov
movsb
xchg
stos
inc
aas
cmp
fildl
push
je
mov
test
mov
fstps
sbb
pop
cmpsb
lds
jno
mov
xchg
sahf
mov
jmp
sbb
xor
jno
int
es
lock
out
out
add
xlat
push
std
sbb
incb
clc
xchg
out
ds
mov
sbb
adc
notb
lret
filds
mov
lock
jl
aam
push
pop
push
cmpsl
cmpsb
fstl
dec
mov
dec
add
add
fsub
popf
mov
ljmp
mov
sbbb
or
mov
dec
jge
mov
pusha
push
in
enter
push
inc
out
and
loop
jle
push
test
adc
lea
icebp
dec
or
inc
cmp
push
jp
mov
pop
inc
imul
popa
pop
mov
mov
mov
pop
push
cld
and
bound
push
rorb
dec
xchg
cmp
push
enter
mov
push
mov
frndint
cld
push
xor
mov
xchg
and
dec
sub
mov
push
mulb
test
fcoms
flds
cmp
xor
lcall
out
cli
pop
pop
stos
es
push
lods
push
cli
sets
adc
pop
inc
aaa
adc
aam
ss
dec
mulb
push
mov
pusha
icebp
dec
mov
aam
rcrb
mov
orb
jmp
cmp
xor
xorb
dec
adc
notl
out
fs
hlt
xor
fldcw
cld
loop
pop
lods
push
push
pushf
cmp
call
xor
in
xchg
inc
bound
jne
ds
fcoms
out
mov
adc
imul
out
imull
jl
xchg
in
jge
loop
data16
scas
pop
clc
repnz
sbb
adc
aaa
fwait
push
rorl
mov
push
add
fidivrl
mov
data16
std
inc
lret
add
lods
cmpsb
mov
and
jb
pop
shll
push
xchg
jp
push
jne
aaa
les
xlat
mov
into
subl
call
addr16
add
dec
sbb
cmpsl
mov
clc
cmpsl
xor
xchg
popf
mov
les
xor
xlat
mov
xlat
aas
cld
cmpb
rcrb
repz
inc
pop
mov
sub
cmp
pop
daa
xchg
clc
mov
cli
sub
or
lods
lods
xchg
movsl
and
incb
mov
iret
test
mov
or
cmp
adc
sahf
sub
and
jne
xlat
pop
jle
sbb
inc
pop
jmp
js
lahf
and
pop
fcomps
imul
push
mov
scas
ds
setg
mov
lret
push
pop
adc
adc
test
enter
popf
scas
xchg
add
movsl
sbb
jno
push
cld
out
lock
pop
notl
cmp
or
mov
add
xchg
dec
adcl
fistps
cs
cmpsl
sub
scas
push
lcall
push
nop
aas
xor
sbb
add
fcoms
pop
or
out
xor
add
sub
lea
mov
nop
inc
idivb
adc
and
scas
xchg
lahf
adc
xchg
sbb
leave
sbbb
mov
push
inc
jae
xor
push
js
lahf
mov
loopne
aad
sbb
das
jne,pt
dec
xchg
or
dec
ret
arpl
dec
cld
stos
xor
mov
jns
lds
or
scas
jb
cmpsb
imul
jmp
jno
sahf
mov
lods
push
lods
xchg
cmp
add
cltd
shll
mov
mov
movsl
leave
call
inc
icebp
jne
lods
xchg
in
or
cmp
xor
enter
in
pusha
sub
cmp
sub
dec
jle
sahf
lea
sub
mov
int3
mov
arpl
and
adc
dec
sub
jge
movsl
dec
cmpsb
xor
mov
pop
shlb
push
and
xchg
cmp
mov
sbb
jae
loopne
cmc
xchg
in
stos
rcr
addl
and
sub
or
mov
lret
inc
std
push
xchg
shr
es
icebp
sar
in
pop
inc
adc
sbb
dec
lods
popa
mov
inc
cmpsb
mov
fistpll
adc
jbe
inc
jmp
leave
popa
add
xor
ds
fcomi
dec
adc
stos
add
jmp
cmp
push
sub
cld
push
shll
cmp
ss
out
xchg
sub
or
cmc
mov
insl
in
mov
int3
mov
sbb
movsb
je
jle
add
lahf
lds
popf
cwtl
mov
xchg
daa
movsl
lods
dec
data16
lods
mov
aam
std
pop
push
imul
aas
clc
pop
std
xor
inc
xchg
sbb
pop
popf
or
popa
or
das
sub
loopne
xchg
or
jl
fnstcw
movsb
pop
orb
outsl
jecxz
sub
popf
int3
dec
inc
mov
xor
jl
push
mov
pushl
inc
scas
enter
mov
popf
add
mov
dec
fstpl
inc
pop
push
xchg
xor
repnz
mov
mov
popa
xor
ret
scas
out
xchg
inc
cmp
xchg
mov
mov
mov
mov
cmc
push
mov
sbb
jb
imul
jmp
shl
insl
ja
scas
std
cld
outsb
divb
pop
aad
xor
inc
loop
mov
ret
push
arpl
adc
xor
fdivrl
sahf
outsb
lods
inc
cs
aaa
xorb
pop
xlat
or
cmp
xchg
mov
mov
fnstsw
adc
imul
test
imul
xlat
iret
sub
pop
ljmp
inc
push
dec
shrl
cmc
sbb
cmpsb
call
mov
sub
add
fwait
bound
repz
jp
sbb
fsubrl
inc
mov
push
mov
enter
cs
out
mov
jo
lods
popa
mov
iret
mov
pop
jb
rolb
decl
cmovnp
add
cs
adc
popf
pop
movsl
arpl
xlat
mov
xlat
sbb
push
mov
dec
gs
pop
insl
xchg
sti
je
and
arpl
mov
cltd
jnp
divb
out
add
hlt
movsb
out
mov
push
push
test
insl
cmp
cmp
jecxz
aas
xchg
and
in
aaa
repnz
stos
mov
fmuls
push
cmp
test
pop
cmp
sub
test
push
jo
inc
jl
fnstcw
or
lods
dec
dec
fptan
sbb
into
push
jge
lcall
cmpsb
sub
cmp
in
movsl
dec
push
sub
lock
ss
push
je,pt
xchg
cmc
sub
xchg
mov
iret
or
fadds
daa
cmp
or
and
adc
or
sbb
cmpsb
dec
lret
and
std
div
bswap
arpl
callw
cmpsl
cmpsl
mov
pushf
xchg
push
pop
sbb
dec
cmpsb
out
push
mov
xor
sbb
or
pop
andb
jecxz
sarb
test
or
add
mov
xor
adc
or
cmp
sarb
nop
adc
es
xor
scas
mov
loopne
shlb
xor
int3
shlb
xor
pusha
nop
arpl
mov
lock
cwtl
lahf
std
int3
rorl
dec
pop
pop
out
call
notb
std
arpl
push
mov
mov
jns
cmp
imul
dec
dec
es
into
aas
pushf
xchg
jmp
test
imul
cmp
cmp
shl
ret
cmpsl
mov
pop
sti
inc
push
or
setns
push
xchg
aaa
mov
gs
push
stos
fmuls
add
jecxz
xchg
adc
push
in
mov
mov
out
notl
lods
dec
jnp
int3
mov
add
xchg
mov
inc
push
aaa
lea
popf
mov
mov
addb
sbb
in
loope
pop
sti
push
push
mov
subl
push
pop
adc
aad
inc
cmp
jp
mov
subb
int3
ret
mov
pop
out
shrb
lcall
mov
sbb
pop
or
stos
repnz
clc
ret
xchg
sub
aas
push
jbe
cmpsl
ljmp
in
add
stos
push
and
dec
movsb
or
cmp
addr16
xchg
add
mov
arpl
iret
ja
cmp
push
xor
cmp
dec
push
pushf
jne
pop
cld
fst
mov
bnd
stos
adc
xchg
imul
cmc
daa
jmp
or
or
mov
mov
mov
pusha
pop
idiv
pop
stos
inc
mov
sbb
bnd
rcl
test
jp
jae
xchg
repz
ret
clc
push
movsl
cmp
ret
mov
out
mov
andl
dec
push
xor
pop
loopne
inc
imul
xor
add
outsb
xor
xchg
xchg
cmp
pop
das
sub
or
and
xor
sub
dec
mov
ss
ficompl
or
add
fisubs
andnps
add
ss
pop
dec
rsm
rorb
ja
test
push
mov
xor
leave
mov
ret
sbb
bnd
mov
mov
subl
dec
sbb
xchg
sbb
cwtl
cmp
insb
xchg
imull
scas
aaa
pop
mov
pusha
fidivrs
adc
lods
sbb
pop
cmp
add
out
in
jle
add
and
push
sbb
mov
lock
sbbb
stc
scas
xchg
sbb
push
dec
adc
mov
movsb
scas
inc
sub
divb
aam
add
stos
repnz
xor
fsubs
mov
out
pop
fadd
xor
push
stc
test
xchg
andl
leave
push
inc
sbb
jno
fmull
es
clc
test
mov
je
fadd
adc
mov
inc
sti
or
stos
popa
fadd
jp
aam
push
ret
cmp
adc
push
stos
xchg
mov
fs
data16
adc
mov
clc
fldl
dec
rol
cmp
or
or
jo
mov
cmpsl
jge
popf
in
fiadds
jmp
mov
popf
pop
dec
and
pop
movsl
inc
mov
ljmp
rcrb
inc
jl,pt
pop
sbb
sti
popl
mov
mov
ljmp
mov
in
add
out
fwait
int3
pop
push
adc
mov
fists
movsb
jp
std
shl
mov
xor
popa
sub
xchg
ror
dec
or
test
mov
jl
inc
pop
stc
pop
or
nop
pop
cmp
ficompl
into
jle
int3
ja
nop
leave
mov
xor
xchg
or
fadds
mov
cmpsl
imul
dec
test
mov
mov
pop
xor
pop
loope
or
pop
jne
into
imul
mov
dec
sbb
fwait
adc
and
fisubrl
xor
testb
repnz
mov
imul
cwtl
outsl
adcl
cmpb
and
ret
clc
mov
jnp
sub
into
mov
pop
pop
xchg
not
mov
jno
pop
and
aam
clc
mov
insb
es
ss
mov
xchg
jb
addb
cwtl
mov
sbb
xchg
fsubl
mov
push
pop
push
pop
lods
shll
sbb
sarb
cmp
pop
cvtpi2ps
aad
push
pop
mov
iret
dec
push
decb
lahf
mov
iret
mov
pushf
mov
ud2
test
push
mov
sbb
mov
std
decl
ror
es
jle
push
sub
inc
sbb
dec
jnp
mov
sub
arpl
stos
jmp
push
add
icebp
pop
mov
mov
jbe
push
or
jmp
mov
lret
fwait
es
aas
jecxz
idivb
mov
bound
or
andb
sub
test
int
ret
sbb
nop
mov
or
mov
loopne
mov
out
addr16
into
movd
fs
dec
lock
sti
xor
cmp
jno
dec
adc
mov
jbe
popf
rcrb
or
sbb
mov
je
dec
in
popa
movsl
mov
sub
inc
add
and
iret
inc
push
arpl
fistl
mov
jno
dec
mov
push
dec
pop
imul
out
and
mov
ljmp
testb
aas
xchg
out
int3
adcl
hlt
pop
aam
xor
adc
xchg
dec
je
mov
scas
rcl
xor
push
imul
pusha
aam
xor
push
dec
ja
and
dec
sub
inc
xchg
pop
pop
test
aas
aas
fcoms
js
in
cmpsl
loopne
mov
mov
mov
push
cmp
jge
ljmp
call
pushf
daa
inc
add
sub
xor
shll
push
pop
mov
ja
fstpt
insl
cmp
repz
add
roll
adc
mov
jb
add
cmp
cmp
dec
jbe
fmul
mov
mov
sub
ss
pop
fwait
push
add
push
xorl
fsubrl
jo
pop
lods
mov
pop
test
cmpsl
adc
fld
outsl
cmp
lret
add
push
test
and
fsubp
add
mov
mov
test
ss
lret
and
das
mov
insb
push
lahf
push
cmpb
xchg
in
mov
cmp
subb
xchg
lret
std
adc
movl
cmp
imul
inc
add
dec
mov
add
cli
call
addr16
cmpsb
inc
cmp
add
lea
push
test
scas
cmp
arpl
and
sbb
outsb
or
cmpsb
sahf
cmp
xchg
dec
push
loopne
dec
faddl
dec
call
outsb
xchg
dec
negl
push
hlt
dec
pop
push
jno
adc
mov
pop
insb
push
decl
pusha
je
sub
hlt
mov
cmp
jo
jne
aam
add
mov
ljmp
dec
popa
jns
ljmp
or
adc
adc
cmp
ret
out
les
loope
jecxz
imul
mov
adc
mov
mov
dec
lahf
mov
sub
rcll
sahf
mov
push
cmp
imul
orl
jl
push
adc
fistps
arpl
test
xchg
adc
cmp
stos
std
pop
cmp
int
out
sti
inc
loop
daa
dec
insl
xchg
inc
mov
aad
clc
sub
or
loope
xor
sbb
dec
stos
push
dec
std
imul
clc
loop
adc
mov
and
cmp
sbb
jnp
cmpl
sbb
popf
sbb
jne
ret
ljmp
add
and
out
imul
ds
xor
push
ret
jmp
aas
call
lahf
int
fildll
jecxz
fs
sbb
sub
ficoml
or
cmp
mov
inc
loop
mov
mov
pop
push
cmpb
addr16
xchg
jecxz
fwait
roll
scas
xor
jl
jae
cmp
or
dec
pop
je
mov
lret
arpl
sub
jno
lahf
xor
shlb
xchg
shrl
ja
sbb
pop
jns
das
xlat
push
movsl
imul
outsl
lret
aad
and
clc
adc
pop
push
cmp
js
pop
out
adc
or
jo
cld
sub
divl
jbe
movsl
stos
adc
test
add
jmp
inc
mov
add
lret
fsubrl
loope
fisubrl
test
pop
aas
mov
xor
cmp
sub
cli
xchg
fmul
or
and
mov
insl
jg
ja
imul
mov
sti
pop
and
cwtl
add
cs
mov
cltd
aam
or
out
mov
lock
mov
sub
or
outsl
andb
roll
test
lods
inc
xlat
clc
xor
out
xchg
jl
int3
jmp
jle
jns
loop
sbb
jp
add
sub
hlt
les
into
inc
mov
or
add
stos
daa
and
fsubrs
push
roll
xlat
pusha
je
lret
push
inc
lret
adc
jno
xlat
in
jl
rolb
mov
sub
icebp
jg
js
inc
mov
cmp
clc
jnp
pushf
repz
outsl
rorb
cmp
outsb
mov
loop
mov
addl
and
leave
int
push
repz
out
lcall
hlt
addr16
xor
in
cmp
loopne
mov
nop
add
jno
mov
loopne
jle
addb
xor
dec
and
add
push
test
add
data16
cmpsl
xchg
cwtl
lret
daa
movb
xchg
adc
cmpsl
lea
sbb
inc
arpl
fs
rcrl
inc
sbb
fiaddl
mov
sbb
fcomip
mov
inc
movsb
aas
or
aam
dec
fldenv
andl
lds
sbb
push
xchg
xchg
pusha
int3
bound
push
mov
ss
insb
adc
mov
jo
testl
adc
es
push
cwtl
andl
cmp
lea
call
or
adc
stos
mov
lahf
or
jae
mov
fldl
inc
push
xchg
insl
test
pop
nop
pop
hlt
and
adc
cmp
pop
jg
inc
enter
int
mov
dec
push
int3
cmp
inc
dec
mov
fs
adc
sbb
mov
inc
push
insl
pop
aas
cmpb
xchg
in
add
mov
inc
insl
pop
push
and
rcrb
fstps
or
into
jo
popa
shl
arpl
std
cmc
sbb
inc
adc
into
add
mov
sub
pop
repz
in
and
aas
push
shlb
lcall
xchg
aas
inc
mov
or
mov
sbb
call
and
shlb
mov
add
dec
lods
out
leave
push
ljmp
stos
jo
add
mov
jp
in
cmp
sahf
jae
movsb
test
jbe
mov
push
test
add
mov
xchg
push
dec
or
sbb
sub
pop
cmc
add
fmull
mov
xchg
pop
cltd
scas
cwtl
push
stos
loope
adc
fucomip
mov
sub
push
adc
and
in
jo
mov
xor
xorb
xchg
movb
push
out
dec
int
fnsave
pop
out
fadd
dec
loope
add
mov
fs
add
out
cli
or
adcl
cwtl
dec
xor
popf
into
mov
push
test
les
xor
repz
sbb
mov
xor
add
xor
mov
push
and
sub
sub
mov
ucomiss
mov
mov
mov
mov
adc
pop
xchg
fcoml
push
jp
add
mov
inc
adc
out
andl
or
ja
popa
imulb
repz
outsb
fdivr
xor
cmp
sbb
or
fs
nop
nop
ljmp
inc
enter
sub
imul
icebp
movsl
sbb
adc
pusha
addr16
js
sub
imul
aad
decb
mov
fnsave
aad
shrl
push
std
adc
and
dec
xrelease
ds
jge
out
sbb
paddd
adc
icebp
inc
ret
in
mov
outsl
incb
cmpsb
imul
fisubrs
mov
into
pop
jge
jae
push
dec
test
mov
out
jl
xor
cld
mov
das
mov
xchg
out
inc
cmp
adc
push
movntq
sub
in
adc
jp,pt
xchg
fnstcw
ja
loopne
imul
lods
jl
shlb
push
loope
inc
cmp
mov
or
fmull
iret
mov
pushf
fstpt
mov
scas
adc
pop
in
int
outsb
lret
pop
repz
adc
push
xor
loopne
mov
lock
popa
dec
sub
xor
mov
int
lret
nop
das
jecxz
decb
fiadds
repnz
sub
pop
les
movsb
imul
cmp
mov
sub
gs
ljmp
xor
je
bound
mov
mov
jne
test
mov
out
inc
leave
fsts
iret
jle
nop
fcmove
in
push
mov
lret
aam
push
jp
fwait
lods
mov
add
insl
xchg
jg
and
fxch
outsl
inc
lcall
insl
or
iret
pop
xor
dec
jmp
sbb
cmp
cs
pop
xchg
out
js
push
lret
adc
fmuls
xor
mov
mov
xchg
cs
arpl
pop
dec
in
rcrl
xorl
fdivrs
mov
mov
jmp
pushf
subb
lret
pusha
dec
xorb
stos
jns
loopne
clc
jb
hlt
mov
jecxz
mov
cmpsl
jmp
inc
fidivs
scas
jle
filds
inc
je
and
mov
mov
pusha
out
shr
sbb
rcll
or
pop
dec
xlat
push
and
xor
neg
in
ljmp
cmpsl
dec
int
ret
les
mov
mov
sbb
push
mov
and
int3
lcall
sahf
pop
xor
in
inc
imul
int3
jnp
andb
inc
je
mov
jg
std
push
cmpsb
dec
ficoms
inc
outsb
nop
cmp
rol
ffreep
cwtl
in
je
cmpl
jo
mov
pop
cmp
lahf
or
mov
mov
aad
mov
jae
icebp
xchg
cld
xchg
xchg
jno
insb
jle
sti
add
fwait
adc
sbb
ror
addl
test
or
mov
mov
rcll
or
arpl
sbb
out
cmpsb
inc
adc
pop
adc
addr16
mov
test
lahf
xor
repnz
mov
pop
cmp
fistpl
in
inc
lods
dec
dec
mov
call
movsl
sbb
daa
mov
dec
mov
neg
push
mov
pop
les
in
mov
vpshlb
or
push
inc
lods
xor
push
aaa
and
mov
cmpsl
fwait
in
sahf
cmpsb
push
pop
sub
xlat
adc
inc
aad
ret
aaa
push
pop
and
xchg
sub
jl
jmp
add
and
or
enter
and
jg
dec
bound
testb
pop
push
shr
fnstenv
inc
ss
pop
inc
aaa
cltd
iret
push
dec
test
sub
xor
lcall
loope
lock
jo
push
add
je
xor
arpl
push
loope
jnp
ds
rorl
pop
mov
pop
cmp
jns
dec
neg
push
adc
dec
sbb
pop
mov
mov
sbb
mov
addb
repz
icebp
rol
xor
xor
lods
adc
and
push
in
lock
fwait
pop
lret
leave
xor
ds
and
sbb
mov
xchg
mov
stos
jo
pop
lcall
jp
sti
or
inc
xor
add
jle
outsb
mov
inc
mov
add
jl
iret
push
bound
cmp
xor
adc
repnz
out
mov
sub
daa
mov
xor
adc
repz
push
cwtl
outsl
or
aad
xchg
outsl
and
in
dec
jg
setl
fcoms
mov
dec
or
xor
inc
pop
stc
mov
pusha
push
aaa
shlb
cmp
data16
in
jl
push
data16
mov
scas
cmp
repz
aas
xchg
in
imul
mov
or
ds
sysexit
mov
pop
sub
hlt
cltd
out
add
cs
ret
negb
xor
addl
insb
aaa
xor
andb
loope
pop
movsl
repnz
cmp
fstps
loop
inc
mov
ret
xor
jp
add
movsl
cmp
fnstenv
mov
push
repz
push
shl
fwait
mov
out
push
xor
push
lods
push
mov
jecxz
jle
add
push
inc
in
call
inc
inc
push
cmp
in
sub
arpl
xchg
sub
call
lahf
pop
sub
stos
fisttps
ss
xor
orb
push
stc
push
push
adc
mov
push
cmp
andl
into
shlb
and
add
popf
in
sbb
or
xor
fdivrs
sub
inc
shr
insb
imul
or
push
fistl
repz
das
mov
lods
mov
sub
jae
jno
adc
pop
pop
cmp
xchg
push
xchg
pop
cmp
xchg
mov
arpl
lods
repnz
xor
mov
add
jl
push
mov
mov
nop
or
ds
and
or
movsb
mov
pop
mov
arpl
mov
fnsave
js
add
movsl
idivl
jo
les
push
xchg
adc
out
mov
jp
fstps
cmp
fbstp
push
mov
arpl
jg
dec
into
out
shrb
jg
jbe
rep
jae
insb
divb
or
scas
jns
in
and
out
cmp
cmc
inc
imul
insl
es
imul
jo
add
mov
lds
aaa
cmc
xchg
call
dec
jl
cli
das
mov
test
mov
xchg
pop
inc
mov
xor
add
add
mov
sarl
push
push
stos
push
dec
into
xchg
ret
add
out
xchg
out
roll
orl
jno
xchg
push
push
cmp
and
pop
mov
pop
out
adc
sub
fists
das
cwtl
jg
in
dec
mov
push
cmpsl
jle
int
out
out
rcr
lock
out
or
adc
push
mov
imul
pusha
sub
cmpsb
mov
andl
leave
fstps
pushf
dec
pushf
loop
subb
cli
mov
mov
pop
insl
inc
scas
cmp
sub
loope
mov
xchg
aaa
repnz
jle
out
xchg
pop
xchg
xor
inc
lret
cmpsl
or
aaa
daa
adc
cmp
dec
imul
xchg
ds
adc
adc
pop
andb
dec
jmp
pop
mov
fwait
xchg
jnp
loope
add
push
sub
push
mov
out
int
mov
mov
jg
sbb
lods
push
and
lret
mov
sub
cmp
jp
jecxz
fcmovne
pop
mov
arpl
ficompl
arpl
cli
and
mov
fnstcw
mov
sbb
push
dec
orl
shll
ficoms
push
mov
cmp
pop
xchg
pop
jns
pop
sbb
lds
stc
pop
push
mov
sti
les
lea
das
or
jmp
xchg
adc
gs
pop
in
out
scas
lret
lss
stos
bound
leave
in
js
or
xchg
imul
push
cmpl
dec
add
cmp
inc
ss
ret
cwtl
add
out
lds
test
pop
jl
mov
sub
fdivrp
mov
jge
sub
psrad
data16
push
jns
mov
sub
lods
sub
push
out
insl
call
xor
xchg
inc
lahf
sub
sbb
mov
cmpsl
aas
mov
or
mov
mov
cmp
or
int
in
hlt
andl
add
into
push
xchg
pop
mov
mov
mov
jne,pt
mov
adc
dec
mov
jne
xor
push
adc
int3
xlat
jp
outsb
adc
and
in
out
mov
cmp
nop
ljmp
sbb
cmp
test
xchg
mov
mov
push
es
cmpsb
pop
or
loope
callw
mov
xor
fwait
dec
mov
add
cmp
out
cmpsl
push
xor
jne
push
repnz
dec
in
mov
rcrb
mov
aam
adc
movsl
push
adc
sub
jb
andb
fidivs
mov
popa
xor
imul
mov
movsb
cmc
popf
imul
jbe
jg
shrb
lret
cli
sahf
scas
pop
xlat
rol
xchg
or
mov
clc
in
das
mov
lock
ror
jno
test
pop
fidivs
sbb
loop
pop
or
ds
xchg
popf
scas
std
cmp
push
repnz
push
lret
dec
imul
out
and
or
orl
lret
cmp
rep
mov
pop
jmp
jb
push
sbb
cld
movsl
shll
mov
cmpsl
xor
shl
or
cmp
dec
pushf
mov
lock
mov
cmp
test
pop
repz
fs
fwait
sub
jl
or
aam
dec
ficoms
dec
xchg
mov
fcmovbe
hlt
addr16
dec
mov
push
push
dec
loope
inc
mov
and
leave
testl
jle
sbbl
mov
mov
inc
cmpsl
in
add
insb
clc
xchg
scas
aas
testb
rol
cwtl
das
dec
xlat
sub
cmc
pop
xchg
std
loopne
mov
jmp
movsl
addl
push
xchg
push
sbb
outsb
divl
sub
orl
or
ret
xor
cli
adc
adc
test
pusha
and
and
push
push
stc
push
xlat
mov
xchg
addr16
push
jno
fwait
mov
mov
outsb
testl
insb
xorl
push
or
push
mov
mov
mov
or
mov
xor
adc
cmpsl
xchg
into
jnp
mov
into
mov
sub
fiaddl
mov
sbb
push
fildl
pop
rcrb
mov
sahf
out
jns
adc
hlt
insb
xchg
nop
add
mov
out
ret
add
pop
pop
subl
xchg
je
loopne
aad
mov
lea
lahf
repnz
jle
movsb
ja
xor
pop
mov
jnp
push
lock
aas
xor
ror
loopne
into
jno
cwtl
adc
jo
scas
jnp
cmp
mov
fs
or
push
cmp
pushf
test
insb
add
xor
jle
inc
arpl
negb
mov
insb
mov
pop
adc
and
aaa
daa
mov
xchg
xchg
inc
xchg
mov
cmp
push
xor
fcomi
push
mov
mov
xor
out
or
aad
sub
and
mov
loopne
add
add
push
icebp
in
sub
cmc
mov
push
incb
out
pop
divl
imul
aaa
sub
pusha
rol
or
jno
sarb
cmp
out
clc
adc
pop
int3
pop
shrb
xchg
mov
cmp
mov
push
dec
xor
stos
dec
imul
lea
ja
jns
sub
mov
cltd
mov
push
sub
jp
cmpsb
mov
or
ds
push
adc
cmc
cmp
inc
mov
bound
push
xchg
fs
fimuls
imul
jno
stc
push
ds
and
outsb
inc
mov
mov
sub
faddl
out
pusha
and
and
push
push
rcrl
fdiv
cmc
fs
test
xchg
mov
jno
adc
das
mov
rorl
fwait
mov
lds
add
fnsave
jg
or
or
add
loopne
jne
mov
ffree
dec
ret
sub
xor
mov
adc
sbb
cwtl
arpl
jns
cs
sub
sub
push
pop
push
mov
dec
lock
and
push
in
and
sahf
jecxz
into
pop
adc
adc
push
jl
pop
cmp
mov
inc
scas
pop
add
push
movsl
xor
sub
aad
mov
add
mov
push
inc
stos
xor
mov
jg
xor
pop
out
imul
scas
rcrl
addr16
les
stos
fstl
aaa
cmpsb
adc
cmp
shl
mov
push
adc
push
sti
xor
sbb
lods
in
push
mov
das
jo
int
pop
in
mov
mov
add
mov
dec
je
test
xchg
ljmp
mov
dec
fs
adc
into
adc
lds
xor
push
je
xchg
xchg
and
pop
or
imul
adc
push
test
dec
cmp
movl
fisubrl
out
inc
and
lds
sub
inc
inc
mov
insb
imul
flds
and
add
dec
and
sti
movsl
push
jno
jg
lcall
test
clc
mov
pop
insb
cmp
nop
pushf
mov
into
in
adc
mov
mov
and
mov
lock
adc
push
sbb
xor
roll
aaa
add
cmp
nop
jmp
push
lret
cli
sub
icebp
jle
cmp
popf
or
test
xor
fmul
shl
cmpsl
pop
add
sti
lods
cmc
in
push
rclb
or
pop
mov
xchg
push
inc
stos
xor
insl
adc
pop
hlt
push
fidivl
mov
icebp
adc
stos
mov
push
stos
xlat
jbe
jb
aaa
and
xlat
stos
add
and
xor
clc
outsb
stos
mov
add
rclb
dec
sub
lahf
mov
addb
out
stc
mov
or
fcoms
mov
push
subb
nop
mov
xor
cmp
pop
adc
xchg
mov
jp
mov
out
adc
andl
daa
cli
pop
movsl
mov
mov
add
or
call
jbe
icebp
pop
pop
mov
push
fstps
pop
push
lock
repnz
das
inc
mov
push
int
sbb
or
imul
or
daa
cmpsb
adc
shr
xchg
loope
cwtl
fimuls
fldt
mov
insl
std
call
arpl
push
test
dec
cmpsb
adc
and
cmp
xchg
out
xchg
push
movsb
push
loopew
inc
push
outsl
cmp
loopne
aas
push
xchg
sub
flds
jnp
add
mov
and
or
push
ds
aam
push
xchg
cmp
mov
mov
push
cwtl
ja
les
outsl
mov
jbe
sub
mov
and
mov
mov
mov
lods
add
lret
mov
in
daa
inc
xor
int3
sahf
scas
lea
mov
sbbb
js
push
aas
mov
xor
cwtl
in
dec
dec
popa
xor
and
push
pop
inc
mov
ljmp
shll
cmp
cld
pop
ret
cmp
out
or
or
inc
mov
adc
pop
push
add
subb
into
jb
data16
adc
jmp
jns
inc
dec
pop
cmp
mov
or
and
jo
es
xchg
push
lret
jp
mov
jecxz
dec
dec
pop
inc
and
popa
push
mov
cmc
repnz
pop
aaa
push
cmp
pop
mov
mov
sbbl
sbb
pop
xor
inc
cs
xchg
dec
pushf
cmp
stos
push
mov
or
dec
sbb
push
jno
mov
enter
sub
ficomps
sbb
inc
push
leave
stos
cmp
das
and
sub
cwtl
jmp
out
mov
ljmp
add
test
sbb
insl
jg
stos
jg
and
lock
cmp
sbb
sti
test
adc
mov
lods
xor
add
fstl
popl
push
sub
adc
loop
ficompl
lods
fsubp
add
sbb
mov
imul
fnstsw
mov
pop
sbb
lock
mov
inc
push
and
xchg
sub
mov
mov
inc
int
idivl
sbb
fstps
icebp
dec
pushl
mov
andl
mov
sahf
xchg
adc
inc
cwtl
cld
lret
mov
jl
cld
push
ss
cmp
cmp
or
adc
mov
push
test
fidivrs
sub
add
fwait
push
arpl
imul
aas
push
rcl
es
outsl
xor
cmpsb
mov
insb
imul
enter
sub
int3
sbb
mov
stos
cmp
mov
aam
xchg
or
and
fisubl
xor
ljmp
inc
push
sub
in
sbb
pop
stos
push
pop
in
clc
data16
dec
ret
ret
cli
in
inc
stc
rol
jmp
ja
push
mov
xor
xor
bound
scas
inc
push
aas
or
movsb
in
mov
mov
xlat
out
stc
call
jle
pop
in
sbb
adc
lock
cld
js
popa
push
mov
loop
movsb
arpl
and
lret
sbb
repnz
xchg
push
push
nop
dec
adc
xchg
mov
add
aaa
mov
pop
inc
lods
nop
dec
sahf
push
scas
mov
shrl
rorl
and
cmpsl
inc
fisubs
mov
loopne
add
xlat
mov
repnz
mov
adc
xchg
std
outsb
mov
inc
mov
jo
stos
push
push
shl
jne
movsl
fmulp
dec
lds
adc
icebp
lods
call
and
xchg
in
add
cld
pusha
daa
mov
mull
inc
shlb
sub
add
xchg
mov
enter
cltd
inc
cmpsb
movsb
push
mov
pop
cmp
jl
fidivs
pop
and
clc
fsts
sar
pusha
insl
int
add
jg
push
jae
pop
in
sbb
mov
ja
adc
rcll
loop,pn
pushf
out
and
pusha
imul
aam
aas
adcb
push
pop
fisubs
cmp
mov
dec
cmp
imul
bnd
ficoms
mov
inc
imul
call
je
popa
shlb
cmovg
outsl
gs
xor
mov
cmp
mov
loop
mov
push
jo
test
aad
pusha
mov
jnp
pushf
xchg
dec
adc
push
loopne
test
cmp
prefetch
or
jb
js
addr16
xchg
jae
out
loopne
adc
loop
pop
sub
xchg
ret
hlt
dec
shrl
ss
dec
pop
leave
je
xor
inc
scas
inc
mov
scas
arpl
sub
jle
xchg
adc
movsb
addl
cmp
adc
mov
cmp
add
add
in
sbb
cmp
push
jnp
adc
das
lock
jnp
push
jbe
out
sub
hlt
fstpl
bt
arpl
sub
and
cmpsl
xor
push
nop
and
sbb
dec
cmp
fcmovbe
cmp
xchg
outsb
mov
out
mov
in
into
call
into
xor
pop
dec
sub
test
bound
push
sub
ror
xor
sbb
mov
adc
pop
adc
adc
repnz
xchg
das
dec
popa
call
pop
cmp
mov
push
push
add
push
fidivs
daa
scas
xlat
enter
mov
lods
push
insb
dec
jns
mov
out
jge,pn
lret
in
fsubl
lret
in
and
loope
push
mov
add
lds
jnp
std
test
fists
cld
xchg
sbb
and
cmp
int3
xchg
pop
loopne
stos
jp
out
movl
out
stc
in
pushf
cmpsl
jl
shlb
jmp
in
dec
lahf
xchg
sub
lret
adc
mov
pop
mov
clc
jle
pop
push
dec
sbb
jg
in
mov
loopne
lahf
xchg
or
test
fsubr
gs
xor
out
push
cwtl
or
mov
xchg
push
cltd
inc
jbe
jnp
mov
les
bnd
popa
add
mov
in
cwtl
ljmp
out
push
pop
das
sbb
dec
stos
mov
push
into
movsl
and
add
inc
xchg
xchg
or
dec
aas
es
ds
jmp
arpl
or
jg
mov
xchg
popf
dec
xchg
ljmp
mov
pop
mov
cmp
xor
dec
dec
add
cli
mov
inc
outsb
es
push
outsb
scas
repnz
cmpsl
xchg
mov
jle
aam
or
xor
and
sub
jle
mov
insb
add
mov
jg
inc
lret
lret
loopne
sbb
aas
insb
cli
cmp
shl
fs
movsl
add
and
mov
jmp
sub
jmp
xchg
pop
push
sbb
xchg
xchg
fstl
fidivrs
shrl
sub
fistpl
pop
fisubs
leave
fdivrs
mov
mov
xlat
mov
movsb
cmc
clc
or
sub
pop
movsl
aaa
sub
pushl
sbb
mov
dec
cmp
out
not
loop
cli
push
xor
dec
and
pushf
sub
adc
aam
scas
jns
ret
pop
jmp
sbb
jnp
jno
ljmp
nop
shrb
ljmp
pushl
bound
dec
orb
aaa
cmp
pusha
adc
mov
loopne
cs
sbb
mov
and
jge
int
xor
dec
js
xchg
out
adc
cmp
pop
mov
aaa
mov
inc
std
add
cmpsl
dec
cs
xchg
dec
aam
jne
stos
dec
loopne
push
scas
mov
jmp
or
sub
rcrb
cwtl
enter
daa
bound
cmp
fs
bound
sarb
inc
aam
or
cltd
addr16
int
pop
rcll
les
pop
push
jmp
addr16
xchg
roll
and
add
bound
shrl
cmpsl
jmp
mov
jns
xorb
xchg
sub
shll
xor
push
add
fcmovne
mov
jg
insb
int3
insb
int
das
xor
lret
push
inc
outsl
js
dec
bound
push
pop
or
pop
dec
js
leave
pop
fwait
mov
add
sar
fdivl
pop
out
sub
pop
pushf
mov
movb
jb
inc
mov
sub
push
call
sbb
fld
mov
mov
std
and
mov
icebp
scas
ja
xor
lds
test
xchg
jne
pop
rcrl
xchg
add
jl
pop
adc
xchg
sbb
bound
aad
dec
mov
xor
inc
jl
inc
in
jl
adc
out
out
push
cltd
nop
aas
mov
inc
stos
mov
leave
subb
in
in
inc
jb
jne
addb
mov
xor
jecxz
std
stos
mov
adcl
cmc
mov
mov
lret
les
push
xchg
mov
mov
mov
enter
pop
lods
rclb
dec
movsb
or
lods
push
dec
ret
add
add
cli
lods
std
jo
jle
xorl
or
in
xor
cwtl
adc
inc
mov
xor
pusha
in
es
push
or
aam
and
and
lret
push
fmull
cmp
cmpb
mov
bnd
data16
cmp
mov
filds
cs
dec
add
out
sbb
inc
xchg
mov
pop
test
in
testb
inc
push
jne
sbb
dec
mov
pop
push
mov
xchg
pop
stos
fisubrs
popf
scas
js
fsubrs
dec
adc
imul
jo
call
dec
xchg
cmc
mov
xchg
test
mov
outsb
lret
js
add
xchg
clc
jb
and
push
adc
fdivs
dec
out
fdivs
dec
loope
cmp
repnz
xorl
es
push
dec
inc
mov
add
lea
das
cmp
shll
shlb
sub
dec
icebp
ljmp
lahf
inc
xor
fbld
or
mov
sbb
flds
int3
test
clc
loopne
sub
daa
xor
sbb
shrb
and
push
lret
add
loop
xchg
hlt
lds
inc
or
loop
cmp
into
dec
data16
inc
cmp
xor
cmpsl
jecxz
cmpsb
gs
jno
lret
push
sbb
js
rorl
push
push
jo
popf
mov
xor
jnp
imul
mov
in
jmp
pop
mov
lds
jns
pushl
mov
sti
jo,pt
fdiv
std
outsb
jbe
dec
arpl
xor
call
adc
or
aas
lods
hlt
test
notb
lods
sub
push
jne
cmp
add
mov
mov
test
jle
iret
pushf
or
cmpl
push
je
adc
subl
and
out
aad
call
mov
xchg
sarl
stos
add
sbb
sbb
cmp
int
ficoms
stc
test
loope
mov
in
pop
repz
xchg
push
xchg
sub
mov
jmp
push
int3
jb
mov
nop
xor
out
sbb
jbe
or
shrb
repnz
jp
xchg
mov
lahf
push
fbld
pop
pop
pushf
sub
hlt
adc
jno
pop
mov
test
cmp
dec
test
mov
insl
and
or
pop
and
or
sub
pop
outsb
dec
xor
pop
rcr
and
cmp
hlt
rcrb
scas
fisubs
and
lret
lds
add
sti
mov
cmc
fldt
sbb
ss
insl
push
mov
jl
pop
repnz
movsl
xor
stc
leave
loop
add
adc
movsb
into
divb
dec
shrb
cmpsb
mov
sub
add
jecxz
inc
insb
ljmp
ds
jge
cmp
adc
mov
push
jne
fldl
scas
inc
dec
or
sbb
xchg
cli
std
and
xor
mov
clc
xlat
mov
mov
into
dec
xlat
mov
test
jnp
xor
pop
xor
cld
inc
push
cmp
add
xchg
hlt
call
xchg
and
imulb
xchg
aas
es
mov
mov
jmp
cwtl
scas
mov
imul
shlb
push
insl
xlat
sahf
repnz
popa
push
insl
dec
arpl
fcoms
or
pop
cmp
xchg
jl
cmp
je
scas
cmp
mov
jle
or
dec
stc
dec
and
loopne
test
sti
xor
sbb
std
sub
fldcw
out
and
scas
arpl
and
xchg
sub
addr16
dec
and
stos
mov
sti
mov
stc
pop
mov
jg
mov
std
mov
fistl
daa
sarl
add
orl
adc
icebp
shrl
in
int3
pop
push
mov
in
mov
lock
mov
lahf
mov
popf
cmp
cld
cmpsl
or
int3
pushf
icebp
out
outsb
mov
xor
cltd
ret
fisubrl
std
gs
vmwrite
in
clc
dec
inc
cmp
arpl
ret
pop
insb
cmp
mov
popa
dec
sbb
xor
call
sbb
sub
mov
or
bound
popa
and
sub
mov
pusha
sbb
adc
jns
cmp
std
dec
test
nop
xorl
mov
mov
push
lret
fdivrl
hlt
lods
or
push
xchg
stc
stc
cmc
in
imul
mov
outsb
inc
sub
pop
adc
sub
ss
data16
cmpsb
sbb
movsl
cmp
mov
mov
fisubrl
dec
push
pushf
neg
loope
push
lahf
cmpsl
adc
lcall
sahf
dec
mov
inc
inc
ror
bound
jne
push
sbb
in
dec
repnz
fisttpl
insb
sub
out
mov
mov
mov
pop
add
orb
adc
pop
or
dec
sub
xor
es
rorl
and
loopne,pt
out
sbbl
fcomps
cmp
mov
mov
pusha
fsubp
xorl
xor
jbe
inc
inc
add
fstps
dec
stos
mov
add
pusha
xchg
jle
lods
xor
shll
pusha
jnp
imul
push
loop
lahf
into
inc
mov
in
loop
cld
data16
push
dec
xchg
push
cli
push
mov
xchg
xchg
loopne
pop
jecxz
xor
mov
outsb
adc
and
arpl
in
inc
push
aaa
cmp
mov
insl
cmpb
lds
mov
lret
add
sarb
mov
jmp
dec
mov
test
testl
cmp
lods
cld
or
pop
and
sahf
cmpsb
in
aad
xchg
pop
xchg
lds
testl
int3
int
push
ret
enter
push
hlt
jno
test
push
jmp
aam
repz
fdivp
lock
mov
ret
and
adc
or
in
jle
in
flds
mov
movsl
movsb
dec
sub
addl
out
xor
add
mov
sbb
mov
int
adcb
push
scas
out
stos
cmp
ljmp
test
outsl
shl
jne
push
adc
nop
les
push
cltd
or
pop
and
je
test
push
into
xchg
int
jecxz
or
jno
xor
stc
stc
addb
xlat
jb
mov
imul
mov
push
mov
jg
push
test
cmpsb
and
and
sbb
int3
jl
divb
sub
dec
cld
aas
lock
jg
jo
xchg
add
adc
pop
fwait
sbb
sub
inc
cld
and
mov
decb
mov
or
inc
xchg
loopne
insl
lods
repnz
or
movsl
push
mov
inc
ds
xlat
sub
repz
mov
leave
dec
sbb
lods
mov
call
sbb
jge
fidivrs
and
lahf
scas
sub
popf
aad
or
push
in
out
in
push
jo
mov
dec
cmp
pop
shrl
enter
ljmp
cs
jmp
lods
into
mov
cltd
push
jge
push
pop
shll
in
scas
imul
dec
add
push
cmp
aam
scas
test
or
jg
push
lods
xchg
xchg
sarl
test
jns
mov
sbb
cmpsl
adc
hlt
fisubl
push
inc
daa
jg
fs
or
xor
mov
mov
imul
add
jae
fmull
mov
das
bound
nop
cld
cltd
rcll
push
mov
repz
jmp
sarl
in
inc
fwait
ljmp
jae
cwtl
cmpsb
push
push
ret
int3
xlat
inc
fs
nop
pop
dec
cli
pushf
repnz
cmp
or
sub
adc
and
popf
pop
xchg
or
jl
xchg
sub
shl
pusha
out
lea
push
push
pushf
cli
stc
or
jl
movsb
cmpl
mov
shr
movsl
sub
pop
scas
and
push
ds
lret
fstp
xchg
outsl
jb
dec
mov
stos
rorl
xchg
out
in
int3
ja
sbb
xor
jle
imul
add
push
push
fsubrl
out
fisubs
dec
sub
test
cmc
sahf
sub
movsl
fidivs
gs
xor
rolb
stos
pop
mov
push
into
push
loope
jle
fldl
add
push
mov
xorb
test
iret
push
fistpll
jecxz,pn
stos
sbb
mov
outsb
jecxz
jp
daa
dec
mov
lret
aas
sbb
push
inc
push
xor
pop
push
xchg
int3
mov
mov
in
push
ds
cmpsb
xor
sub
adc
lods
cwtl
dec
hlt
rcrl
cmpsl
inc
idiv
and
lret
jb
movsb
ss
setno
gs
mov
enter
cmpsb
xor
scas
push
and
ret
push
adc
xchg
jbe
or
cmp
push
mov
jno
dec
and
dec
daa
insb
pusha
rol
movsb
push
das
inc
jns
popf
inc
jne
sub
mov
inc
int
es
lret
std
jge
repnz
out
mov
push
push
mov
jbe
in
and
stc
fsubp
mov
jns
dec
push
insb
adcl
and
cmp
mov
sarb
fsubr
jb
imul
mov
out
test
dec
dec
push
cmc
adc
adc
sahf
sub
in
jne
dec
xchg
jle
cmpsl
push
xchg
cli
mulb
sub
xchg
cld
dec
outsb
xlat
inc
inc
fisttpl
jo
cmc
mov
xchg
push
mov
scas
popf
faddl
dec
xchg
inc
sub
imul
push
sbb
pushf
jo
mov
aaa
jne
mov
pop
insl
out
bound
and
push
sbb
stc
enter
lret
ret
pop
sbbb
mov
jnp
enter
xchg
push
pop
insb
fisttps
jl
cmpl
dec
cmp
push
xlat
cmp
pop
add
sbb
sbb
add
inc
sti
pop
or
dec
sub
xor
dec
aas
sbb
es
jnp
in
bound
pop
dec
ljmp
cs
test
xchg
scas
fistpl
inc
in
jno
pop
and
mov
out
inc
ret
inc
cmp
call
movl
fmuls
filds
xor
inc
lretw
cmp
arpl
data16
loopne
cld
test
repz
push
xor
pop
jmp
stc
insb
in
int
push
push
jne
push
jbe
sbb
pop
mov
push
insl
ljmp
fsubrs
into
pop
div
or
call
mov
pop
pop
cmp
xchg
inc
xchg
pop
and
push
add
xchg
mov
cmpsl
push
popf
mov
inc
xchg
negb
rorb
cli
jmp
inc
xor
and
or
xchg
jne
popa
out
ss
jae
fwait
add
mov
imul
scas
inc
sbb
and
rclb
sub
popa
loope
mov
add
gs
add
sbb
xchg
lods
sub
sub
or
xchg
rclb
cwtl
sub
enter
gs
cli
hlt
adc
push
fs
xchg
xor
test
pop
mov
sub
orb
popa
int
je
sbbb
fstpt
bnd
add
dec
xchg
sbb
mov
lods
adc
pop
shll
inc
lret
sub
mov
mov
ds
ja
into
push
ss
sub
mov
jb
sbb
sarb
ret
scas
pop
cld
cwtl
pusha
xor
fistl
mov
dec
nop
xlat
mov
fstpl
push
dec
or
cld
int
lahf
xor
nop
xchg
jne
sub
js
add
negl
call
aaa
sub
dec
jge
mov
out
repz
and
add
push
icebp
fs
mov
jge
sub
dec
stos
cltd
mov
fistpl
lds
pop
inc
out
ret
ror
mov
add
repz
outsb
xor
inc
bound
stc
push
xchg
popf
in
push
or
mov
imul
or
jp
lahf
dec
lret
and
sub
lea
mov
push
popl
xchg
bound
jne
add
cmpsl
ret
push
lretw
xorb
filds
jae
aas
xor
sub
lret
dec
popa
jnp
lcall
mov
add
sbb
hlt
mov
inc
mov
mov
jmp
sub
mov
mov
subb
xchg
dec
and
dec
cwtl
in
nop
iret
leave
outsb
add
cli
test
dec
pop
aam
jo
add
out
or
or
rclb
inc
adc
rcrl
adc
out
fildl
jl
ret
loop
xchg
popf
pushf
out
pusha
sub
xor
or
stos
xor
aad
xor
pop
lods
bswap
iret
jmp
int3
xchg
fadds
loope
jecxz
mov
dec
adcb
ficoml
add
push
mov
fxch
out
adc
sbb
roll
clc
sti
hlt
mov
adc
int
enter
out
dec
xor
mov
mull
or
mov
clc
mov
fnsave
ret
sahf
fcompl
sub
add
jne
sub
ljmp
imul
pop
insb
sbb
dec
and
mov
roll
adc
mov
xor
dec
or
mov
gs
sti
call
cmp
mov
outsl
cmp
jmp
dec
rcr
and
ficomps
mov
mov
or
cmc
repz
mov
fisubl
push
xchg
sbb
sarb
mov
push
cmp
xor
add
add
cld
les
jae
das
in
mov
rorb
cmp
mov
sbb
push
xchg
jb
lds
js
cmp
in
lahf
int
pop
repz
mov
incb
adc
mov
mov
or
fistpll
add
fsubr
jmp
lret
popa
stos
cmc
scas
dec
js
sub
in
xor
xor
and
cmc
jl
call
push
stos
pop
mov
cmp
ss
inc
insl
adc
stc
enter
std
scas
in
adc
xchg
pop
test
sti
lret
inc
in
int
repz
popf
fwait
or
or
inc
test
xchg
cmc
mov
mov
jbe
aam
in
inc
mov
enter
addb
xchg
dec
fistpll
and
xchg
test
ret
mov
sbb
jbe
sbb
roll
mulb
xchg
fmuls
jnp
enter
mov
ret
xor
jae
sbbb
jg
jecxz
pop
insb
iret
mov
sub
jne
in
cmp
sub
enter
mov
cli
imul
ljmp
les
addr16
movb
dec
pop
push
das
popa
and
sbb
and
mov
lock
and
jl
cli
call
mov
add
ds
inc
fimull
dec
mov
out
pop
jno
mov
inc
ljmp
icebp
sti
inc
inc
shll
and
jl
lret
jae
filds
dec
cwtl
adc
push
ror
sbb
jno
cld
xor
ror
cmp
cwtl
and
xchg
outsl
daa
and
adc
adc
dec
cli
push
or
jb
je
clc
int
xor
stos
loopne
test
lea
and
mov
or
out
sub
imul
pusha
fdivl
js
insb
pop
mov
add
gs
stc
es
xchg
inc
das
bswap
cmpsb
jb
jge
inc
adc
adc
dec
add
enter
test
push
xor
cwtl
pop
mov
inc
or
mov
xor
clc
outsl
push
add
inc
aas
jo
enter
pop
mov
jae
cmp
fisubl
xor
hlt
sub
stos
addl
bound
adc
xlat
aad
dec
pop
push
call
add
inc
mov
mov
adc
insl
pop
push
sub
daa
sti
sbb
xlat
test
xor
cmp
iret
repz
testb
xchg
pop
inc
lea
lret
out
cs
cmc
popf
aad
imul
mov
in
xor
loop
xor
les
adc
inc
mov
adc
outsl
cltd
dec
in
cmp
pusha
push
rcr
cmpsl
adc
shrb
xchg
add
inc
mov
sbb
jecxz
push
cmp
and
cmp
sbb
dec
pop
mov
xchg
mov
fidivs
lahf
into
ljmp
aam
xor
mov
int
lds
add
imul
lods
push
adc
xchg
mov
adc
popa
sti
js
jb
adc
nop
aaa
adc
push
inc
stos
fsubrs
imul
xchg
lods
cmp
dec
out
mov
stc
addr16
mov
jecxz
xchg
inc
shrb
stos
mov
mov
mov
fldt
cli
xchg
pop
cmc
adc
scas
jle
loope
pop
test
testl
scas
cmp
or
adc
imul
lret
mov
cmp
divb
dec
mov
imul
aas
jle
adc
push
mov
shrb
jp
loope
pop
push
jmp
xchg
in
mov
xor
jge
and
shll
leave
enter
or
out
imul
sti
add
cmp
jbe
test
or
mov
and
popf
push
or
jo
imul
icebp
jno
ret
repnz
es
lret
popa
mov
push
fcom
push
repz
enter
gs
cli
js
popf
mov
xchg
and
pop
or
mov
xor
jne
adc
cmp
hlt
outsb
stos
sbb
xor
mov
push
lods
adc
xor
sub
enter
sbb
dec
jle
jae
rcrb
xchg
test
inc
xchg
mov
mov
dec
in
mov
mov
adcb
cmpsl
mov
mov
iret
xor
sub
fdivr
adc
pop
jmp
jle
xchg
add
push
push
pop
cmp
mov
cmpsb
es
jmp
addb
pop
mov
aaa
mov
clc
sbb
xchg
cmp
and
mov
shlb
ret
jmp
mov
and
loopne
xor
xchg
lods
dec
icebp
repnz
mov
sar
mov
and
cmp
jnp
scas
movsl
sub
adc
cltd
inc
sarb
prefetch
jle
adc
adc
es
mov
mov
loope
fsubl
sub
not
lds
push
stc
mov
mov
push
lret
out
lds
insb
shlb
fnsave
xor
lods
pop
popf
std
mov
pop
push
sti
test
pushl
loopne
sub
push
nop
fmull
xchg
sbb
sbb
in
enter
pop
pop
dec
inc
mov
push
dec
push
jmp
les
xchg
pushf
cltd
pop
shlb
mov
mov
inc
pop
mov
cs
ja
pop
mov
bound
aaa
sahf
mov
xlat
cmc
fs
xchg
lods
inc
fmuls
stos
lret
shrl
stos
sub
js
rsqrtps
push
mov
int
call
mov
jb
adc
out
bound
xadd
mov
mov
jmp
jle
xor
adc
icebp
inc
and
jbe
stos
jbe
sti
push
pop
jae
hlt
mov
and
es
movsb
adc
aas
test
and
test
pop
and
mov
or
xlat
scas
into
cmp
mov
jmp
sub
mov
adc
jl
xor
ja
pop
das
jp
inc
add
cmp
les
mov
setbe
pop
pop
and
cmp
sub
rcll
lahf
xor
adc
icebp
push
jle
jge
pop
cmp
xchg
mov
aam
or
stos
mov
bnd
sti
fadds
mov
sub
addr16
daa
iret
sti
cld
lret
dec
inc
and
pop
mov
fiadds
in
in
and
ljmp
movsb
lods
cmc
adc
mov
data16
js
cmp
jno
lea
shlb
bound
insb
adc
std
mov
bndstx
sbb
adc
add
fldl
testb
mov
in
insl
lock
lds
add
and
jmp
xchg
or
cltd
fists
ljmp
lcall
imul
stos
fcompl
inc
mov
sbb
popa
shll
test
sbb
pop
cmpsb
and
xchg
addr16
xchg
and
mov
scas
jbe
dec
cmp
dec
jae,pt
push
sbb
jo
xchg
scas
or
adc
push
cmp
sub
sub
insl
rcrb
mov
push
inc
fiaddl
push
movsb
ja
bound
sahf
jb
inc
lods
push
jb
xchg
dec
or
push
pop
mov
jl
push
hlt
and
jns
fs
fsubrl
pop
dec
test
sbb
mov
adc
mov
dec
sub
cmpsb
mov
sub
mov
iret
loopne
add
je
pop
lock
lods
das
std
mov
inc
aaa
outsl
icebp
outsb
xor
cmp
push
dec
mov
ja
xchg
pop
fs
jle
inc
push
imul
mov
enter
addb
xor
aam
leave
stos
notl
imul
jl
sbb
jns
ds
adc
idiv
clc
addb
dec
mov
sbb
pop
loope
punpcklwd
cmpsl
ret
pop
mov
mov
jmp
inc
insb
or
and
and
fidivrs
sub
jo
aaa
pop
mov
pop
dec
lods
scas
adc
mov
in
pop
mov
xlat
inc
jg
inc
mov
push
push
push
stos
insb
aaa
insl
and
sbb
mov
dec
adcb
and
les
sahf
pop
out
sub
xchg
and
cli
insl
sub
cmp
xchg
inc
clc
aam
popa
popf
outsl
jo
das
ds
movsb
arpl
mov
test
aas
addr16
btc
enter
stos
adc
and
inc
xchg
aaa
fucom
rorl
and
xor
add
insb
int3
sbb
mov
arpl
imul
inc
sub
popf
testb
jl
popa
push
xchg
cmp
inc
in
std
and
rcll
add
push
and
adc
mov
or
lahf
movsl
pop
outsb
xorl
inc
inc
push
and
mov
xchg
mov
inc
dec
in
and
dec
jno
and
int3
mov
imul
jecxz
lods
xor
jmp
enter
cmp
cli
fistpl
add
xor
mov
mov
lahf
sbb
jg
push
lods
call
test
push
xor
adc
imul
push
cmc
leave
fistl
addr16
push
rcrl
adc
sbb
jecxz
into
vaddpd
in
jle
imul
sub
xchg
loope
daa
int3
mov
and
jl
and
mov
sbb
jecxz
xor
and
aas
mov
popf
mov
pop
stos
and
sub
rcr
inc
fildll
push
inc
mov
lock
pop
inc
cmpsb
push
add
push
je
test
mov
cmp
fcmovnu
fsubrl
xchg
sub
mov
push
leave
push
test
mov
sub
cltd
inc
xchg
rcrl
imul
xchg
dec
aaa
ljmp
rcll
mov
inc
lds
iret
call
fldenv
add
int
out
outsl
mov
popa
inc
and
inc
or
mov
push
push
xor
jle
out
mov
jae
mov
call
sub
not
test
cmc
mov
pusha
xchg
ret
xchg
pop
aam
stos
dec
xor
adc
adc
hlt
pop
xchg
xor
lcall
in
mov
iret
outsb
xchg
sbb
mov
xchg
fs
sarl
and
fnstsw
push
push
int
mulb
add
jo
test
xchg
sub
pop
sbb
mov
ds
dec
xchg
rolb
ret
xorb
mov
inc
add
je
fnsave
arpl
jns
and
add
fldln2
jae
or
inc
xlat
xchg
ds
push
shrl
or
pop
mov
xchg
data16
imull
cmp
and
xor
sbb
jne
ja
enter
fstpl
lahf
adc
pop
mov
iret
lcall
sbb
push
sbbb
ret
sahf
mov
inc
int
aas
pop
out
inc
sub
fldl
mov
pop
cmp
or
pushf
add
add
push
sub
fildll
or
inc
iret
outsl
xchg
jmp
movsl
pop
ret
dec
test
inc
fidivrl
addr16
dec
test
xor
leave
mov
cs
push
dec
pop
pop
mov
rcrl
jno
divl
pushf
adc
sub
jno
imulb
mov
jp
fiadds
cwtl
pushf
xchg
imul
outsl
add
fldenv
dec
xor
cld
push
sub
fs
ljmp
mov
insb
lea
sub
xchg
xchg
loop
iret
lahf
dec
adc
push
fistl
shld
add
mov
xchg
add
aaa
or
sub
inc
pop
sbb
test
repnz
les
mov
cmp
lahf
jecxz
rol
inc
insl
ret
bnd
dec
pop
mov
jg
ss
or
push
addb
mov
push
push
jmp
fisubrl
fisttpl
sahf
adc
fidivs
inc
js
cmp
mov
mov
shlb
dec
rcll
test
out
lds
nop
cmc
out
les
lea
lods
js
mov
jg
dec
push
movsb
cli
imul
xor
imul
insl
icebp
cmp
xchg
cmpsb
xchg
sbb
inc
rcrl
and
fcomp
ljmp
stc
xchg
sarb
adc
out
sub
incb
cltd
pop
mov
push
cli
mov
negb
punpckldq
cs
mov
mov
rolb
icebp
std
pushf
adc
out
jo
dec
out
inc
xchg
loopne
jge
dec
sbb
jp
cmpl
bound
or
scas
outsb
mov
lret
in
add
sub
ret
jecxz
mov
cli
pop
lock
das
mov
lods
mov
aam
ret
or
adc
or
addps
pop
repz
out
push
and
in
sbb
push
fs
mov
dec
fidivs
adc
xor
daa
xor
jl
add
dec
and
mov
add
in
mov
gs
stos
imul
clc
jae
call
adc
popa
je
test
inc
mov
in
sahf
les
push
lahf
in
stos
jae
repnz
hlt
pop
pop
jnp
out
nop
lcall
cmp
inc
sarl
sbb
pop
das
cmp
mov
adc
rorb
xor
cmpsb
mov
cmpsl
dec
out
cmp
pop
pop
dec
aad
and
sbb
aam
mov
stc
add
sti
test
or
pop
pop
mov
push
sub
fsts
mov
dec
mov
cld
rcrl
mull
mov
es
mov
idivb
int3
jnp
lds
add
mov
inc
int3
shrl
into
sti
repnz
in
push
cmpsb
sbb
push
and
sbb
push
xor
add
adc
sbb
cs
loope
add
pop
cltd
gs
xchg
inc
jo
out
jns
int3
outsl
push
fsubs
jb
pushf
add
stos
sub
or
push
push
arpl
xchg
and
in
pop
cmpb
fwait
sbb
mov
dec
mov
push
sbb
fcompl
and
cmp
xor
and
cltd
and
pop
das
cld
xchg
repnz
arpl
xor
cmp
push
jle
mov
cwtl
pop
mull
adc
roll
addr16
inc
dec
pusha
and
insl
mov
lea
testb
lods
aaa
mov
addr16
test
rorb
jg
stc
inc
sbb
int
out
xor
pop
or
popf
gs
sbb
push
push
mov
je
mov
sub
roll
aam
and
fldl
into
lods
stc
sbb
pop
adc
sub
mull
fsubp
popa
dec
push
dec
push
notl
std
clc
dec
adc
pop
roll
cltd
loope
dec
jbe
xor
xchg
or
fsubs
inc
or
int
sub
lcall
mov
les
gs
ret
xchg
lds
xchg
add
push
xor
adc
push
dec
mov
lret
test
jne
push
add
jnp
cmpsl
and
bound
pop
add
fsubrs
repnz
and
pop
mov
mov
xor
mov
add
pop
arpl
fisubrl
push
inc
mov
std
int3
jmp
shl
lea
push
add
jmp
insl
stos
add
cs
es
sub
and
sarb
incb
push
divb
and
test
jmp
cmp
xor
test
push
mov
mov
mov
jne
cltd
divl
bound
jo
add
sbb
js
loopne
mov
fcoml
sti
int
cwtl
xchg
push
lock
fdivrl
addr16
xor
clc
clc
das
imul
xchg
les
jmp
cli
mov
sbb
es
fadds
mov
cmp
insl
or
sti
jbe
cltd
fsubrs
imul
jle
std
incb
out
enter
mov
call
sbb
ret
push
dec
test
add
fdivrl
out
or
addr16
stos
sub
rorl
sti
lock
adc
jo
dec
and
leave
jmp
inc
sub
adc
mov
inc
movsl
mov
aad
dec
inc
mov
ret
mov
outsb
push
dec
pop
test
push
xor
add
sti
pop
out
inc
push
or
pop
loop
aas
add
test
scas
ret
jno
dec
xor
push
cld
jecxz
cmc
aad
cmp
cmp
fiaddl
enter
in
dec
push
inc
lods
pop
repz
push
cmp
mov
xchg
hlt
imul
lea
dec
adc
scas
and
pusha
jl
popf
out
lods
sbb
enter
pop
push
add
clc
xor
or
sub
out
xor
pop
or
lods
stos
sub
loopne
repz
popf
pop
jmp
fwait
movsl
enter
cmp
aas
xor
mov
idiv
adc
xchg
mov
sar
aad
mov
cli
sbb
imul
cld
fimull
adc
lods
sub
es
fwait
push
mov
arpl
pop
hlt
loopne
mov
test
loope
ds
xlat
xor
and
lcall
stc
cmpsb
mov
sub
pop
test
pop
lcall
dec
xor
aad
lahf
mov
insb
ja
lods
test
add
inc
or
cmp
adc
out
jmp
sbb
pusha
fnsave
mov
arpl
xlat
adc
xchg
js
aad
rcrl
xor
dec
daa
mov
push
inc
dec
movsb
dec
push
fs
scas
or
mov
adc
jno
xchg
mov
data16
arpl
and
jge
add
out
jnp
scas
pop
and
popa
jno
lea
into
icebp
mov
mov
xor
mov
sbb
push
cli
xchg
stos
mov
push
clc
in
and
mov
and
cmc
add
rcrb
mulb
sarl
pop
sbbb
cmp
xlat
dec
xchg
roll
cmp
adc
and
xchg
and
mov
icebp
mov
fcmovne
lret
mov
jns
inc
cmpsb
test
lcall
mov
push
push
sahf
sub
pop
fildll
in
push
pop
add
rcll
cmp
sub
add
adc
hlt
hlt
jnp
pop
sbb
imul
arpl
xchg
mov
movsl
cmc
push
into
xor
jb
in
in
rorb
ret
fldenv
adc
push
xor
aaa
ljmp
xor
in
das
ja
fcmovb
cmp
jns
inc
jns
lea
xor
jg
inc
jmp
sub
mov
fnstsw
and
pop
cwtl
lcall
xchg
adc
jb
jo
rcll
movsl
adc
adc
cli
cltd
insb
or
sub
mov
into
mov
pop
inc
mov
fisttpl
jb
out
clc
mov
pop
pop
ret
lcall
icebp
invd
enter
out
xor
add
ss
push
sahf
sub
sub
imul
sub
fildll
and
or
js
imulb
fs
lods
or
xor
scas
sbb
and
adc
pop
lods
xchg
or
rcr
jg
dec
dec
mov
mov
ljmp
loop
insl
and
stos
xchg
xlat
repnz
push
dec
stos
sub
lahf
xchg
xor
xchg
pop
in
push
adc
pop
mov
mov
pop
dec
push
jno
insl
and
push
xchg
xchg
mov
ss
dec
push
xchg
xor
add
ja
cwtl
sbb
jnp
and
adc
fs
add
or
adc
inc
aas
call
push
js
pop
fldenv
pop
stos
and
push
push
adc
push
out
lea
lret
cmpsl
movsl
xchg
stos
xchg
stos
pop
cwtl
shll
and
orl
in
scas
ret
xchg
pop
add
pop
into
push
pusha
mov
or
insl
dec
xchg
cmpsb
cmp
dec
insb
or
subl
xor
push
mov
push
leave
mov
sbb
add
hlt
xchg
push
fs
lahf
and
mov
lds
push
dec
sbb
mov
imul
mov
ftst
or
pop
lods
mov
imul
mov
lret
lret
decl
mov
outsb
and
decl
pop
jle
cmp
inc
insl
sub
into
add
lods
stc
stos
and
rcll
in
xchg
ja
pop
mov
faddl
dec
int3
push
xchg
cmp
xor
test
int
ja
setbe
cmp
ja
mov
add
jmp
mov
and
pushf
cmp
bound
jae
lret
jecxz
sbb
or
insb
nop
scas
fbld
xchg
xchg
out
and
mov
sbb
insl
jnp
push
dec
test
popa
pushf
add
mov
inc
sahf
adc
jle
jge
sbb
stos
sbb
rorl
test
mov
push
inc
arpl
pop
imul
mov
xor
aaa
iret
js
daa
mov
inc
adc
push
rolb
repz
or
out
push
imul
or
fists
jg
dec
lock
clc
jg
pop
clc
test
test
xchg
lods
pop
xor
lods
or
add
xor
pop
push
sub
call
outsl
xchg
inc
fcmovu
pop
and
int3
xchg
xchg
mov
jbe
in
cld
push
adc
mov
lods
xor
aaa
and
pop
call
cwtl
push
and
rorb
cmpsb
dec
lret
popf
cmc
dec
push
dec
das
sbb
les
mov
sbb
mov
inc
xchg
pop
loope,pn
out
lods
pusha
push
repnz
or
sbb
lahf
lock
cmp
lcall
or
sarb
mov
scas
cmpsb
cmp
test
mov
xor
push
xor
mov
jo
shll
out
outsl
out
dec
stos
xchg
cmpsl
outsb
in
jmp
test
dec
sbb
imul
mov
jnp
pushf
xchg
cs
jmp
cmpsl
pushf
out
mov
idivb
mov
mov
push
dec
xchg
ds
lods
mov
and
sub
push
in
cli
sahf
jp
mov
icebp
mov
jle
push
mov
rol
sub
fidivl
loopne
outsb
lock
mov
adc
test
sbb
test
lahf
xor
adc
addl
int3
or
stos
mov
in
jno
stos
dec
stc
mov
and
in
dec
aad
and
enter
mov
das
rcrl
mov
mov
sub
stos
add
addb
push
inc
aam
add
aad
push
fistpll
insb
inc
imul
dec
cmp
out
and
pop
or
cmpsb
std
inc
xor
xchg
movsb
adc
cmp
sahf
xchg
out
outsl
adcl
popa
shll
sbb
push
xchg
push
fisubrs
mov
stos
sub
sub
out
xor
pop
pop
push
fisubrl
push
mov
shrb
push
scas
outsl
aas
cmpsb
cltd
in
loopne
je
jo
nop
mov
jle
jo
adc
pop
sub
and
xor
mov
xchg
adcb
sti
popf
or
shll
sbb
cmp
add
add
repz
xchg
sbb
pop
loop
je
pushf
aaa
push
repz
sahf
ficompl
clc
icebp
add
mov
and
push
inc
jo
sahf
cs
dec
or
adc
cwtl
outsb
loopne
lret
xor
inc
outsl
into
je
fadd
or
adc
std
push
and
push
cmp
cmp
mov
adc
xchg
mov
mov
dec
daa
addr16
addl
fsubrl
xchg
mov
add
mov
mov
mov
fists
xchg
test
mov
imul
inc
pushf
adc
push
or
lock
cwtl
mov
xchg
mov
fwait
jb
imul
imul
negb
test
enter
hlt
mov
popa
std
out
out
ds
mov
test
mov
popf
pop
jne
push
mov
and
jmp
fs
and
xchg
cmp
pop
and
and
jp
adc
mov
dec
and
xchg
gs
pusha
test
push
lahf
xor
pop
cli
ss
adc
inc
pop
test
lods
cmp
cwtl
cmp
iret
push
lods
js
lret
mov
lret
rclb
lods
sub
sub
call
fcoms
call
test
int3
push
pop
sbb
lea
mov
adc
pop
andl
push
cwtl
push
push
gs
add
sub
js
jbe
push
int
xchg
dec
dec
add
call
cmp
ret
or
popa
or
mov
out
jo
xor
jno,pt
lcall
mov
inc
sub
enter
mov
push
xchg
test
mov
fimuls
mov
xor
cltd
rorl
mov
test
lret
pop
js
sub
rcrl
gs
jmp
in
imul
loope
inc
nop
stc
mov
mov
ja
mov
lret
sti
daa
xor
or
scas
and
jbe
test
icebp
lds
inc
dec
jnp
dec
mov
inc
cs
sub
xchg
xor
adc
push
test
cwtl
xorb
jo
std
loope
adc
xchg
and
mov
mov
sbb
pusha
cmpsl
clc
hlt
or
and
and
fnstsw
lcall
movsb
adc
cmpsb
adc
outsb
jo
mov
js
pop
movsb
cmpsb
xlat
lock
inc
addb
ja
movsl
jae
loopne
cmp
scas
mov
stos
popf
xor
xor
sbbb
mov
push
and
mov
cli
aaa
mov
add
lahf
ds
push
aaa
aas
push
push
dec
mov
mov
jecxz
stos
out
or
pop
mov
incb
stc
ss
pushf
mov
xchg
imul
push
xchg
ficoml
sbb
add
xor
loopne
stc
rcr
mov
pop
fwait
aas
add
fisubrl
rorl
ss
and
out
xor
pop
bound
test
jae
jno
adc
xchg
fucomp
sahf
jns
rolb
mov
sub
in
stos
test
xlat
sub
leave
jmp
jle
jp
outsl
and
and
pop
into
jge
aad
or
jno
imul
pop
testl
mov
testb
imul
push
cli
mov
push
lahf
add
pop
mov
lahf
xchg
pop
jne
mull
outsl
xor
lea
in
jge
js
insb
pushf
imul
push
sti
clc
nop
pop
fwait
mov
xchg
lcall
das
cwtl
std
xchg
adc
jo
loopne
sbbb
test
dec
stos
sub
adc
testl
aas
xchg
jnp
dec
scas
inc
inc
mov
inc
mov
in
loopne
in
mov
imul
cmp
push
mov
dec
pop
ja
cltd
sub
stc
mov
push
add
mov
or
cmpsb
ljmp
cmpsb
data16
imul
mov
jl
lods
push
or
mov
loop
and
ret
and
aad
mov
jecxz
fwait
push
or
mov
pop
add
or
mov
pop
dec
mov
mov
addr16
mov
mov
rcrl
push
sbb
inc
loop
adc
lcall
rclb
pop
mov
push
sub
adc
push
sub
das
mov
repz
movsb
insl
data16
inc
iret
cmpsb
or
loopne
push
inc
mov
cmpsl
addr16
jnp
aas
sbb
xor
sbbb
and
xchg
and
cli
pop
jecxz
je,pn
sbb
add
mov
in
addr16
xchg
and
loop
jo
enter
lret
jl
cld
imul
clc
mov
lea
cmc
outsl
mov
dec
js
fcoms
lar
xchg
pop
add
adcb
dec
in
subl
jecxz
sarl
mov
xchg
loope
or
sub
and
leave
jne
mov
pop
push
imul
mov
dec
je
test
fcmovbe
outsb
push
xor
je
mov
sbb
push
sub
pop
dec
push
mov
dec
dec
inc
or
testl
lds
cmp
aam
jnp
call
mov
fptan
enter
shlb
cmpsl
fimull
lock
cmc
stos
pop
in
mov
push
mov
mov
push
mov
push
xchg
cmp
repnz
call
inc
lock
jp
pop
and
or
rcrl
das
out
iret
inc
repnz
lcall
sub
xor
faddl
mov
dec
pushf
and
movsl
add
lods
push
insl
mov
fcomps
jge
mov
leave
out
adc
lea
shll
dec
std
lds
push
cmp
and
jp
push
test
popf
and
cltd
or
out
testb
mov
pop
sub
jae
mov
stos
icebp
sub
ljmp
bound
jl
in
daa
mov
aad
xchg
mov
movl
sub
out
mov
adc
addl
adc
mov
pop
scas
std
adc
movl
cltd
out
xchg
jae
inc
sub
pusha
xchg
cmp
and
lret
jl
insl
jle
xchg
or
movsb
mov
ja
call
dec
sub
mov
cmp
test
add
jb
push
fidivl
jl
fisubs
arpl
xor
addr16
icebp
in
sahf
fwait
xor
inc
xchg
add
push
imul
inc
sbb
mov
stos
sbb
stc
mov
loope
outsl
insl
mov
shll
jne
sbb
addr16
push
cltd
mov
aad
push
push
xchg
sarl
inc
mov
sub
das
arpl
loop
mov
ret
adcb
adc
sahf
imul
push
push
inc
jmp
xchg
pop
cmc
das
popl
sub
add
mov
lret
imul
arpl
fistpl
addr16
or
fwait
and
jno
stc
add
xchg
jmp
pop
loope
pushf
xor
dec
in
enter
mov
int3
outsb
add
push
jo
adc
hlt
fsubrs
sbb
ret
add
mov
cld
mov
in
aad
aas
ret
rorb
xor
ror
or
sbb
jo
xor
add
mov
xchg
rcl
inc
int3
jge
and
cmpsl
repnz
inc
shrl
cmp
out
loope
loope
xchg
out
daa
xchg
push
cli
sbb
mov
push
movsl
or
sbb
adcl
mov
xchg
std
jp
mov
adc
xchg
shlb
adc
mov
jp
or
xor
mov
adc
push
pop
aam
pop
pop
sbb
das
mov
scas
es
fldt
je
in
lock
xor
push
pop
imull
and
imul
call
fs
cmp
sbb
sbb
xor
push
jmp
xchg
pushf
mov
mov
dec
cltd
addb
lods
lcall
push
outsl
jp
arpl
inc
lds
outsl
adcl
pop
sbb
adc
ja
fnstsw
cmp
mov
and
loope
and
in
and
shl
sub
add
and
jae
popa
lds
lea
xchg
and
data16
mov
iret
pop
aas
mov
sub
jo
pop
fwait
xor
lock
shrl
mov
and
jae
or
xor
daa
or
push
or
fisubs
sub
sub
sti
inc
jl
les
push
mov
gs
fisttpll
clc
jmp
sbb
adc
sbb
pop
insl
cmp
cmp
push
ss
addr16
leave
pop
leave
lcall
mov
dec
mov
out
aam
cwtl
pop
rcrl
or
sbb
popa
and
cltd
push
jecxz
add
jecxz
dec
mov
mov
in
je
sbbl
push
and
in
nop
jae
xchg
lret
mov
popa
loope
lds
jo
cld
test
push
ds
push
andb
loope
mov
into
fwait
or
movl
cmp
popl
xchg
jns
pop
mov
pop
jmp
jbe
sbb
std
adc
imul
and
popa
subb
cs
push
pop
mov
movsb
jae
dec
jmp
cli
popf
cmp
mov
xor
adc
xchg
inc
psubusw
mov
and
xchg
pop
imul
fdivrp
cltd
stos
in
jp
into
call
scas
in
add
data16
cmp
and
inc
jle
mov
xchg
enter
mov
inc
dec
and
dec
lea
aaa
dec
and
fidivs
sti
out
test
incl
and
lods
test
jle
sbb
add
data16
cmpsl
mov
sbb
jl
sub
pop
dec
repz
lret
mov
stos
and
push
rcr
pop
jno
sbb
jbe
call
mov
and
lods
jp
faddp
xor
shr
dec
popa
push
adc
cmp
stc
sahf
jnp
fidivrs
push
mov
jp
mov
mov
shrb
divb
cltd
dec
scas
add
lcall
jo
adcl
sbb
mov
sarb
cmp
sub
pop
and
iret
addr16
ret
mov
inc
setnp
mov
jecxz
outsb
sub
add
jmp
call
in
fs
std
call
std
sub
je
stos
in
imul
and
loopne
jb
js
adc
dec
inc
fs
and
mulb
or
add
fwait
cs
cmp
xor
out
insl
das
mov
in
outsl
out
insl
cltd
shlb
dec
stc
jb
push
push
nop
cltd
adc
in
ror
inc
mov
pop
and
in
in
lahf
cmp
outsl
ret
cli
mov
adc
add
loope
test
int3
push
xchg
pushf
or
lahf
push
stc
cmp
push
jge
xor
jb
stos
xor
jg
mov
arpl
lcall
call
outsb
pop
sti
incl
icebp
das
or
movsb
mov
pushf
mov
leave
pusha
subl
pop
push
sub
push
push
sbb
fildll
mov
pop
insb
pop
lods
loope
fisttps
jne
xchg
mov
jns
and
dec
je
scas
push
jl
je
ja
lods
xchg
sbb
adc
dec
mov
inc
in
jecxz
addr16
jns
pop
divl
clc
xchg
add
adc
jge
rcrl
jb
jmp
jg
cmc
dec
pop
xorb
lahf
arpl
jno
mov
rclb
sbb
jne
dec
movsb
sub
call
into
jb
sub
fdivs
lret
jmp
dec
andl
push
add
loopne
loope
add
xlat
xchg
lret
jnp
push
push
jmp
gs
xlat
or
test
jg
add
push
out
pushf
jne
jnp
test
stos
jl
sub
jbe
xchg
mov
mov
cmc
inc
outsl
shll
push
push
int3
jo
out
xlat
mov
mov
jb
fimull
and
mov
xchg
add
js
sarl
mov
sub
push
push
sbb
cmp
sbbb
aam
sbb
jb
jmp
lret
push
call
fisttpl
ret
push
dec
insb
dec
sbb
andb
mov
fucomp
gs
cmp
push
pop
outsb
or
dec
rolb
push
popw
cmc
inc
mov
mov
loopne
push
dec
inc
in
pop
iret
sub
pop
cwtl
add
testl
mov
daa
sub
and
mov
mov
icebp
jle
sbb
add
inc
pusha
adc
sti
imul
sarl
data16
sahf
shlb
mov
jb
sub
sahf
jne
and
sahf
gs
jge
int
ljmp
xor
addb
pop
mov
das
test
ja
cmp
sub
lods
mov
mov
fsubl
lea
push
lods
loope
mov
int3
push
ss
mov
daa
mov
cli
push
out
clc
push
pop
icebp
sbb
inc
add
sbbb
repz
dec
mov
jge
mov
xchg
and
sahf
cmpsb
ficompl
sbb
inc
pop
dec
pop
div
cmpsl
popa
ja
pop
sub
adc
push
shl
mov
sub
jp
jg
repz
out
adc
enter
mov
dec
mov
xor
jge
mov
cmpb
jb
mov
filds
or
sti
sbb
in
gs
jl
hlt
dec
fists
mov
mov
dec
mov
jno
sahf
xor
and
sub
aas
pop
push
mov
scas
sarl
je
repnz
pushf
insl
push
pop
xchg
dec
mov
popf
fbld
cmc
jl
mov
mov
xor
rcll
push
or
cmp
shrl
and
or
adc
cmpb
idivb
fcompl
mov
and
loop
pop
nop
jge
dec
push
mov
jp
adc
and
and
fisubrl
mov
add
fst
ret
sahf
sub
push
clc
inc
rclb
out
cmp
loopne
repnz
hlt
cmp
cli
mov
jge
xorb
push
in
jno
cmpsb
je
xchg
scas
out
cmp
bound
daa
lods
dec
pop
xor
mov
adc
pop
and
test
ficoms
pop
cltd
cli
pushf
mov
adc
shlb
dec
jae
dec
inc
aas
cmp
add
movlps
dec
and
mov
pusha
andl
sub
mov
xor
shl
adc
fmuls
loopne
and
out
and
int
add
repnz
sbb
adc
add
add
dec
popa
push
fidivrs
cmp
fcom
lret
sub
test
in
add
lahf
enter
icebp
xchg
dec
repnz
flds
into
push
int3
sbb
test
mov
push
push
pushf
cmpsl
call
jle
dec
iretw
sub
stos
xchg
add
cltd
outsl
dec
mov
add
je
aam
mov
notb
iret
mov
ja
pop
and
and
addr16
mov
jne
add
mov
int
lea
icebp
inc
jnp
lret
cwtl
aas
dec
aas
cmp
cwtl
in
imul
mov
scas
loop
xor
mov
xchg
in
and
test
stos
outsl
hlt
mov
imul
mov
sub
das
sub
je
and
fildll
ds
subl
leave
or
adc
mov
push
repz
call
mov
xchg
test
pop
add
sbb
shlb
sub
xor
mov
mov
lods
stos
adc
js
dec
adc
sbb
push
adc
clc
int3
add
pop
add
movsl
les
jmp
jl
mov
mov
inc
imul
push
inc
push
outsb
sti
mov
incl
jle
lods
aas
cwtl
xor
rcll
rorb
popf
mov
sub
mov
dec
mov
sarb
js
cmp
ljmp
repz
int
fwait
dec
cmp
inc
sub
ljmp
ret
negb
lods
or
pushf
jno
xchg
inc
cmp
adc
test
fcoms
add
xlat
push
sub
jg
lret
data16
out
mov
or
aam
out
ret
das
jne
mov
pop
movsb
test
dec
sbb
nop
dec
sub
xchg
les
dec
insb
pop
or
pop
pop
inc
push
aam
and
ds
mov
cmpsb
mov
pop
imul
mov
pop
cs
cmp
add
add
inc
xchg
xchg
xchg
inc
loopne
xor
loope
scas
pop
mov
sub
nop
dec
cltd
dec
adc
imul
lret
push
sbb
mov
jno
es
loope
and
mov
lea
jns
in
push
adc
dec
lahf
mov
sbb
lret
cltd
popa
push
dec
out
dec
mov
mov
xor
or
add
xchg
loop
mov
sti
xlat
mov
imul
ret
xor
mov
nop
or
fwait
pusha
or
mov
fistps
adc
repnz
pop
jbe
daa
in
mov
insl
out
xchg
fwait
jge
add
pop
xor
add
xor
addr16
loopne
pop
subl
mov
pop
pop
jbe
in
mov
and
jp
mov
push
fsubrs
mov
dec
mov
nop
imul
sbb
xlat
mov
repnz
inc
popf
insl
lock
mul
out
or
jne
cmp
daa
iret
mov
cwtl
xchg
pushf
sbb
mov
jle
sub
ffree
aaa
inc
push
adc
jl
lea
inc
stos
add
clc
jmp
fcom
cwtl
ljmp
or
insb
mov
dec
mov
mov
icebp
test
es
shlb
sub
pop
stos
pusha
pop
adc
add
loope
sbb
or
sub
out
jle
pushf
xchg
jl
cmp
loop
mov
mov
inc
mov
aaa
lock
cli
or
lods
and
cs
out
dec
mov
cld
cmp
adc
or
popa
sbb
ja
dec
adc
nop
ret
xchg
mov
aaa
push
fists
sbb
pusha
mov
cld
arpl
xchg
insl
adc
fistpl
xchg
fdivrs
add
divl
dec
sti
and
out
mov
shlb
xchg
push
fldl
sbb
call
mov
shl
cmp
pushl
stc
mov
cmp
add
cmpsl
lea
movsl
jbe
xchg
cmp
test
push
mov
add
xor
aam
mov
mov
testl
jbe
scas
imul
push
orb
es
into
sub
push
outsl
sti
push
cs
frstor
fs
testl
jg
popf
mov
gs
or
cmp
xchg
test
daa
cwtl
lret
jne
inc
popl
scas
lock
ret
outsl
and
leave
stc
jmp
cmp
lahf
jle
into
rcll
rol
ljmp
sbb
cltd
jle
sar
shll
subl
xor
inc
roll
push
jecxz
cli
ja
push
mov
jmp
mov
popf
push
rcrl
add
mov
push
scas
or
jbe
jo
sarb
out
scas
rcll
xchg
and
inc
js
pop
push
stos
into
inc
add
sbb
jl
push
sub
repnz
or
xchg
mov
pop
dec
pop
pop
mov
xchg
aam
mov
xor
mov
gs
faddl
inc
push
mov
dec
imull
push
jmp
loopne
push
aam
fwait
mov
pop
pop
and
add
mov
push
testl
stc
push
adc
ret
leave
mov
add
scas
xchg
shrl
jp
dec
add
mov
and
mov
pop
ret
xchg
push
aaa
push
mov
lock
and
mov
mov
add
inc
cltd
sbb
or
lods
dec
repnz
lcall
enter
xor
adc
sbb
mov
adc
jns
in
mov
xchg
pusha
push
movsb
push
lcall
sub
flds
jp
mov
fwait
rorb
out
fbstp
insl
pop
jl
cmpsb
lods
iret
sub
dec
mov
loopne
inc
cmp
test
lcall
cld
jbe
xor
xor
cmp
mov
xchg
fs
insl
fists
push
les
lods
xchg
dec
add
insb
std
cli
dec
lods
leave
arpl
mov
mov
xchg
mov
sbb
push
arpl
sub
dec
xchg
xlat
pop
xchg
fdivl
inc
js
jb
clc
xor
push
cld
push
push
jnp
sbb
jecxz
mov
xchg
enter
lcall
scas
mov
jae
lret
arpl
and
push
mov
push
gs
int3
jge
push
or
ljmp
imul
inc
cmp
mov
push
cmp
rclb
shr
stc
fnstenv
dec
adc
test
jle
fwait
fwait
cmp
jl
rclb
jne
stos
push
jno
testb
daa
mov
sbb
ret
sub
push
mov
mov
sbb
cld
xchg
ds
sub
adc
cmc
inc
inc
fsubp
or
insl
ss
popa
cmp
out
in
pop
aam
pushf
hlt
sbb
adc
push
sub
test
aam
jnp
mov
loopne
xchg
js
shr
mov
push
test
push
xor
adc
je
push
mov
mov
stc
in
in
dec
jmp
loopne
xor
outsl
inc
mov
push
dec
inc
dec
les
ret
pop
pop
pusha
or
jg
push
pop
insl
lods
lcall
hlt
mov
cmp
insb
push
jo
mov
loop
xchg
leave
mov
out
inc
mov
in
add
aas
and
clc
inc
push
xchg
dec
test
push
mov
push
xchg
mov
lret
fdivrs
push
fsubl
and
inc
mov
mov
int
mov
mov
pop
and
shlb
mov
out
loop
fwait
ror
xorb
push
hlt
scas
rcll
and
add
and
lahf
enter
xchg
pop
in
inc
std
shll
lret
lods
fmuls
push
fdivrl
sub
pop
test
cltd
fldl
or
lods
pushf
cwtl
pop
aad
adc
lret
andb
inc
sbbb
xchg
xchg
add
leave
in
jmp
insl
xchg
loopne
scas
sbb
inc
leave
idivl
xor
mov
mov
lea
ds
push
push
pop
mov
lcall
add
jne
fnsave
lds
fsubrs
scas
lahf
dec
pop
adc
jle
adc
xchg
int3
out
pop
pop
test
pop
out
shlb
push
mov
or
scas
jg
xchg
sub
insl
out
mov
dec
je
mov
addr16
cmpsl
or
stos
ss
inc
mov
xchg
mov
cmpl
iret
dec
jbe
xor
jl
cmpsl
outsl
push
inc
lods
jecxz
or
push
mov
cmp
mov
js
add
mov
arpl
jno
cli
sbb
mov
out
cmpsl
shrl
fs
fwait
sub
test
in
xchg
inc
sub
inc
fsubrs
adc
sysenter
dec
sahf
and
mov
dec
sbb
dec
mov
cmp
cltd
sbb
fldenv
mov
aam
ret
jb
inc
jbe
push
arpl
push
push
out
das
xchg
dec
push
dec
lcall
mov
ficompl
jle
mov
xchg
stos
push
out
ret
je
sub
add
ss
push
dec
scas
xlat
pop
cs
rcrl
xchg
shlb
adc
sbb
sbb
add
les
xor
jns
int
fs
mov
push
push
dec
mov
jg
stos
fidivl
fldt
xchg
nop
mov
imul
dec
mov
mov
mov
sbb
sub
push
ljmp
xor
xor
inc
ja,pn
shl
mov
push
outsl
fstpl
cltd
outsb
in
in
pop
mov
cmp
add
xchg
fs
imul
mov
fs
pop
jge
loope
sub
test
add
loopne
aaa
adc
rorl
pop
pop
mov
mov
xchg
cltd
movsl
jp
cmpsl
js
jnp
fimuls
loopne
xor
xorb
inc
cmpsb
movsb
push
out
jbe
jnp
clc
pop
pop
xchg
mov
in
js
enter
imul
out
std
jmp
adc
cld
jb
mov
addr16
testb
inc
cltd
outsl
cmp
sbb
stos
adc
pop
dec
mov
mov
add
dec
xor
jne
mov
loopne
xchg
sbb
jae
popf
push
lret
mov
pop
in
mov
std
add
adcl
test
push
sub
pop
pusha
inc
push
adc
in
popa
pop
inc
xchg
pop
pop
mov
les
inc
cmpsl
pusha
mov
in
loop
dec
mov
push
sub
pop
inc
mov
mov
mov
js
loop
sbb
add
mov
xor
dec
xlat
mov
imul
orb
pop
xchg
adc
mov
aaa
cmp
mov
and
mov
in
fiaddl
and
jmp
mov
pop
shlb
rorl
or
fistpll
loop
or
addl
stc
xchg
cld
mov
addl
sti
popa
in
inc
pop
fisubrl
xchg
jo
fsubrp
aam
cmpl
sbb
push
mov
test
xchg
or
mov
mov
enter
mov
inc
mov
int
xchg
sub
pop
repnz
add
aaa
negl
mov
pop
and
or
add
jno
aaa
push
fsub
add
jne
and
loopne
jle
sbb
sub
mov
mov
push
mov
lret
cltd
outsl
in
adc
lds
or
cmp
push
into
push
sbb
mov
and
inc
xor
ss
sbb
add
pop
adc
and
jno
jae
mov
pusha
and
adc
pop
fmuls
adc
lahf
cwtl
insl
daa
cmpsl
jecxz
shll
xchg
lcall
push
and
enter
push
fisubl
lds
in
out
std
jmp
xorl
cmp
mov
mov
cmp
ds
jne
sub
sub
jno
outsl
xor
xchg
sub
outsl
sub
mov
fnstsw
std
cmp
xchg
push
push
enter
dec
and
push
mov
in
pop
je
mov
daa
or
dec
sti
mov
aad
jae
sahf
mov
aaa
or
mov
je
adc
sbb
push
insl
cs
sbb
mov
xchg
ja
xor
fsubr
sahf
inc
sub
push
jno
and
clc
sbb
cltd
cltd
pop
and
fldl
mov
fdivrl
loop
jo
les
subl
lret
mov
cmp
mov
jle
in
les
jmp
pshufw
aaa
movsb
jmp
nop
in
sbb
inc
test
rorl
mov
lods
pop
and
icebp
dec
adc
xchg
xchg
test
insl
das
sub
out
repnz
sub
pop
aad
shrb
mov
roll
mov
mov
push
sbb
or
xchg
cmpb
ret
mov
lds
push
mov
pop
sbb
test
call
arpl
mov
fs
pop
das
mov
ja
mov
mov
xor
nop
cld
adc
add
push
ret
pop
stos
sbb
stos
icebp
mov
pop
lock
imul
dec
rcrl
repnz
mov
pop
fistpl
lock
int3
push
lds
test
pop
pop
jb
into
adc
out
ds
in
pop
jg
aam
lods
enter
jmp
jb
fcoml
les
les
mov
sbb
mov
add
pop
mov
inc
fistpll
xchg
ss
and
adc
inc
mov
xchg
inc
pop
ljmp
and
push
enter
pop
lds
and
mov
test
pop
inc
gs
xorb
andb
stos
test
dec
sub
adc
jne
push
fidivrs
mov
mov
sub
mov
das
mov
mov
mov
out
or
adc
dec
sub
std
rcrb
iret
loope
mov
idivl
sub
insb
dec
iret
popf
mov
js
in
push
xbegin
stos
pop
shll
or
loope
ret
or
aaa
sti
test
pop
lds
jne
mov
cmc
mov
jge
pop
fsubs
xchg
addr16
out
bound
sbb
mov
cmp
int3
or
add
fistl
xor
sti
mov
shlb
pop
or
ja
jp
sbb
loopne
sbb
dec
mov
jp
cmpsb
lcall
and
stos
or
jl
insb
jle
scas
outsl
sub
int
test
pop
dec
sub
jmp
inc
push
int
adc
fildl
pop
dec
mov
stos
or
div
insb
xor
add
xchg
adcl
enter
add
inc
dec
test
mov
aad
shlb
xor
mov
cmp
cltd
int
inc
mov
out
push
in
test
sarb
clc
push
mov
hlt
add
add
push
lods
pop
and
jbe
add
cmp
loope
xor
into
into
dec
sub
dec
jb
push
cmp
jae
sbb
in
rclb
jo
addb
or
push
jg
call
sub
pop
pop
pop
mov
test
getsec
stos
pop
push
pop
ja
push
xchg
jo
jnp
outsb
imul
cmp
cmp
pop
dec
lock
mov
pop
in
aad
or
lret
xorl
xor
pop
mov
shll
push
dec
loope
sub
and
mov
out
and
xor
push
insb
ss
movsb
fbstp
pop
shll
cmpsl
or
mov
ret
xor
dec
ret
mov
pop
jecxz
faddl
insb
dec
inc
std
mov
or
sub
aad
add
fsubl
mov
push
jle
mov
pop
push
out
repnz
lahf
dec
fyl2x
cmc
notb
jbe
shlb
outsb
xchg
outsb
insl
fnstcw
mov
adc
repnz
push
dec
add
test
push
or
mov
test
sbb
xchg
int3
ljmp
inc
mov
sub
iret
sahf
pop
lods
es
fistpl
in
imulb
pslld
andl
or
mov
add
int
ja
ljmp
jbe
dec
xor
pop
orb
ljmp
pop
xchg
out
cmp
iret
mov
cmp
cmc
cmpsl
das
xchg
xchg
adc
dec
xor
or
jp
inc
in
xchg
enter
mull
das
jae
lock
push
jne
mov
xor
jg
test
jae
inc
cs
and
cmpsb
lret
push
jb
out
aas
iret
jmp
fsub
cmp
add
xlat
cmpsl
nop
mov
cmc
or
outsl
adc
xchg
insl
xchg
xor
fs
popf
or
pop
jnp
inc
adc
inc
sarb
bound
mov
add
sub
es
std
stos
mov
and
enter
ret
je
dec
cmp
sahf
xor
adc
mov
push
ds
stos
mov
push
pop
xchg
ss
movsl
push
ja
aaa
push
idivb
fisttps
popa
loopne
xlat
pop
and
or
ret
jns
mov
add
mov
ret
push
mov
sti
imul
mov
xlat
push
sub
and
adc
jmp
jo
fistl
jo
adc
mov
shlb
pusha
jbe
mov
mov
mov
and
pop
pop
dec
clc
faddl
or
das
aam
cmp
orl
lcall
jnp
adc
dec
mov
mov
mov
lods
js
test
daa
in
call
or
cmp
and
gs
and
cmpl
sub
fisubrl
outsb
mov
xchg
push
xchg
mov
repz
les
sub
movsb
pop
lahf
sbb
inc
out
sbb
sbb
pop
pop
mov
inc
cmpl
sub
jne
movsl
dec
xchg
gs
inc
iret
outsb
pop
imulb
mov
mov
iret
icebp
jb
into
jae
fsubl
sbb
sub
testb
dec
pop
push
pop
xor
push
lcall
ficoms
sti
mov
mov
sbb
inc
jnp
sarb
dec
lds
sub
inc
sub
inc
enter
adc
lahf
sbb
push
ss
pop
mov
push
mov
and
cltd
ds
fcmovu
nop
fnstcw
xor
lret
data16
mov
push
inc
xchg
sahf
aaa
sub
and
ror
lods
sbb
icebp
xacquire
jae
int
push
into
int3
outsl
mov
mov
add
outsl
push
mov
mov
xchg
mov
aam
lods
mov
das
adc
push
aad
data16
lea
cmp
mov
adc
jecxz
lcall
das
add
dec
shl
stos
xor
adc
jne
test
lds
mov
es
xchg
popf
or
inc
jecxz
pop
out
mov
shl
mov
dec
es
cmpsl
xchg
sbb
cmp
pop
pop
cltd
fs
xor
cmpsl
adc
stc
pushf
push
js
adc
pop
add
addr16
aam
ds
push
push
gs
adc
pop
test
xor
sti
out
pop
das
cmp
xchg
and
aad
hlt
cmpsl
lds
lea
mov
dec
inc
nop
xchg
out
cwtl
rsqrtps
das
mov
aam
sbb
cmp
xor
gs
test
mov
lock
bound
test
data16
xor
nop
sub
testb
outsb
movsb
icebp
mov
ja
nop
cli
adc
movb
and
push
mov
jb
jbe
mov
push
sub
sti
lods
or
scas
jne
push
stc
cmp
out
mov
mov
or
adc
je
xor
fbld
mov
jo
int3
test
mov
cmp
int
pop
cmp
ljmp
sti
adc
in
sti
scas
mov
push
rcl
rcrl
or
leave
pop
jo
cltd
pop
out
mov
fldcw
rcr
pop
sub
jae
shrl
xchg
ja
or
push
push
ret
mov
xchg
dec
sub
push
js
jne
or
jecxz
sub
nop
or
inc
dec
hlt
or
leave
ror
jle
push
add
sarb
hlt
fnstenv
stos
xchg
popa
sub
mov
xchg
int3
lret
in
aaa
push
loop
push
in
cmp
pop
dec
ss
repnz
jp
inc
cmc
jae
pop
push
sbb
cmp
inc
imul
xchg
ja
pop
test
jg
mov
jmp
repnz
adc
repnz
js
mov
and
aad
xchg
push
xchg
fisubl
cbtw
hlt
shll
movsb
clc
adc
fbstp
cmp
jp
and
int3
or
aad
lock
adc
rcrb
cmc
jnp
cs
sub
lcall
adc
pusha
jp
int
lahf
lea
mov
addr16
push
cltd
out
loop
inc
inc
mov
push
pop
call
nop
les
jg
iretw
mov
stc
lea
mov
pop
add
in
inc
dec
hlt
out
sti
rorl
push
xchg
fdivrl
mov
xor
jno
xchg
inc
orl
mov
int
and
xor
xchg
cmp
mov
xor
in
mov
sti
sub
sub
pop
and
pop
fmuls
decb
ds
xchg
loopne
or
sbb
repz
dec
shr
mov
ret
push
adc
jmp
inc
in
xchg
push
add
push
outsl
rcrl
jae
shrl
xchg
sarl
es
pusha
dec
cmpsb
jae
pop
sbb
ficomps
xor
inc
shll
pop
push
cmp
pusha
xor
fwait
lock
cmovge
sbb
mov
xor
mov
dec
arpl
sbb
repnz
dec
es
bound
sbb
dec
dec
scas
popa
pusha
lods
cmovae
aaa
mov
arpl
xor
ja
pop
dec
aam
ret
scas
sbbb
dec
icebp
xchg
scas
sub
aad
jle
push
mov
adc
mov
jg
lret
les
in
testb
push
pop
test
adc
adc
or
push
adc
mov
stc
mov
mov
xchg
stos
sbb
pop
or
xchg
push
shlb
xchg
and
ror
insl
in
pop
and
pop
mov
out
pop
cmp
cmp
jo
xlat
lods
sahf
shll
push
or
lret
ret
sbb
nop
cwtl
push
nop
add
mov
jae
push
add
xor
cld
jb
jne
aam
xor
call
shll
xchg
inc
scas
ds
adc
xor
push
stc
xchg
rcr
shl
mov
xor
fwait
cmp
jbe
loope
jmp
mov
push
outsl
mov
and
adc
xor
jno
jl
andl
mov
outsl
hlt
lock
push
cs
adcl
movsb
inc
pop
and
mov
xor
mov
movsl
sub
or
lds
mov
adc
pop
in
test
pop
ja
and
jg
cmp
outsl
jle
push
into
and
adc
push
adc
mov
sub
addl
sub
xor
xor
jnp
out
cmp
mov
jne
fldl
daa
dec
adc
xlat
out
mov
cmp
in
imul
lods
mov
jae
jecxz
inc
aad
fwait
inc
dec
cmp
ffree
jp
sub
cmc
pop
stc
clc
pop
sbb
sub
mov
test
lock
cmp
jb
insb
push
arpl
clc
popa
cltd
out
data16
jle
ret
pop
out
push
xor
lahf
jae
scas
jecxz
lret
jb
ss
and
jle
fisubl
dec
es
mov
mov
push
or
adc
mov
push
add
fldl
fstps
outsl
loope
sti
dec
lds
sub
arpl
imul
mov
in
add
movsl
jo
xor
adc
jp
popf
xchg
ja
mov
movhps
fildll
sub
sbb
add
cs
or
or
lahf
ljmp
cmp
adc
insb
ds
mov
push
dec
fldt
and
mov
lret
xchg
sti
pusha
lret
pop
mov
ja
lret
lds
xchg
or
mov
add
xor
add
push
dec
hlt
iret
push
push
sbbb
stos
icebp
stos
xor
inc
daa
xchg
xor
or
movsl
cmpsl
js
lods
mov
popa
adc
or
xor
mov
and
popf
xchg
hlt
das
push
pop
addr16
insb
push
jnp
imul
pop
push
mov
inc
outsl
pop
pop
rcrl
dec
mov
sbb
stos
sbb
xchg
js
out
xchg
cmpsb
sbb
sbb
mov
adc
pop
bound
mulps
out
jns
jmp
sbb
push
inc
clc
or
pop
dec
iret
js
cmp
popf
push
mov
mov
stos
mov
lock
push
pop
push
jo
fistl
push
jb
aad
sarb
pusha
and
pop
sub
push
fnsave
es
mov
sbb
or
scas
movsl
mov
pusha
das
dec
loop
mov
adc
imul
inc
and
cwtl
and
jecxz
call
repnz
cli
fcmovb
jmp
inc
push
rcll
hlt
lret
movsl
mov
lret
scas
sahf
pop
mov
sbb
rorl
xorb
daa
mov
mull
inc
sub
test
xor
andb
fs
ljmp
insl
add
jge
ret
pushf
repz
push
bswap
test
lods
mov
out
dec
mov
daa
sbb
dec
mov
stos
mov
or
add
aam
mov
or
push
cmpsb
mov
popa
out
sbb
shlb
fs
add
fsubl
mov
inc
inc
insb
jae
pop
push
dec
loope
jg
jo
push
ss
fisubl
out
scas
fs
mov
ljmp
std
cli
mov
fmull
mov
push
add
rol
mov
out
and
and
xchg
cmp
dec
jp
pop
ja
adc
mov
daa
mov
popa
push
rcrl
xor
inc
aas
rcll
and
push
and
sbb
pop
clc
jmp
aam
faddl
ret
rcl
js
gs
shlb
sub
ret
sub
fcoms
fistps
lds
xchg
imul
sub
fwait
inc
push
lock
sub
push
jecxz
pop
dec
mov
inc
mov
pop
outsl
out
mov
cmp
clc
leave
mov
cmp
add
stos
sub
jno
mov
sub
shll
dec
mov
in
std
or
loopne
cmc
in
or
or
data16
or
mov
iret
xor
je
inc
push
push
dec
shlb
shr
push
in
sub
out
das
dec
repz
les
inc
test
pop
pop
jb
hlt
mov
lea
icebp
das
xchg
xor
mov
aad
ret
pop
gs
into
pop
pop
xchg
pop
pop
int3
clc
xchg
dec
pop
xchg
xor
dec
sbb
in
mov
stos
stc
jl
cmp
mov
arpl
aaa
xor
out
xchg
push
cmp
cmp
leave
sub
mov
in
sub
jge
and
lahf
mov
dec
and
jnp
xchg
sub
or
mov
pop
das
aas
lcall
pop
inc
bound
fs
adc
or
adc
jne
sti
andb
adc
imul
pop
xchg
out
in
adc
loope
inc
mov
jmp
adc
or
shrb
add
lret
daa
jne
mov
mov
js
movsb
add
movsb
dec
inc
icebp
inc
or
sub
xchg
jnp
pop
fisttps
inc
cld
or
or
xchg
jecxz
or
fdivl
data16
mov
mov
mov
xor
push
cmp
dec
or
fldcw
sbb
pushf
js
fisubs
scas
add
pop
out
fidivl
stos
cmp
sbb
or
mov
cwtl
fildll
orb
cmp
ss
int
insl
adc
and
and
repz
lods
and
mov
sbbl
dec
popl
ljmp
xchg
outsb
mov
jle
cli
ds
adc
or
movsl
add
pop
xchg
or
cmpsb
hlt
dec
push
and
rcrl
add
les
push
lds
sti
clc
idivb
fyl2x
cmp
jbe
bound
pop
mov
mov
cmp
mov
out
push
mov
mov
sub
pop
je
jl
mov
fdiv
rcr
outsb
add
int3
push
mov
lods
add
aas
mov
and
ret
mov
mov
add
leave
divl
movsl
call
sub
push
js
lahf
inc
movsb
xchg
fldpi
cmp
pop
push
jg
add
mov
test
in
cmp
mov
mov
scas
inc
sbb
or
sub
loope
push
pusha
arpl
mov
mov
filds
mov
stos
adc
inc
fsave
outsl
pop
add
lock
outsl
sub
ret
out
jg
sbb
addr16
mov
fcmovb
inc
in
push
stos
inc
sbb
stc
aaa
nop
jge
dec
test
dec
imul
inc
pop
inc
push
int3
adc
adcl
test
clc
sub
cld
notb
sar
pop
and
andl
or
push
ficomps
ss
rcrl
xor
xorps
repnz
pop
dec
sub
fldenv
sub
std
cmpb
mov
ds
mov
ss
and
lahf
push
testl
fists
jnp
test
fwait
xchg
aas
js
xlat
int3
divb
repnz
jb
ljmp
fsubs
lcall
mov
dec
int3
pop
scas
call
sub
mov
mov
ds
jno
pushf
fwait
pushf
xlat
jp
cmp
sbb
addr16
sbb
test
int3
push
fidivs
int
dec
inc
push
out
xor
dec
fstpt
cli
sti
dec
push
imul
xor
xchg
popl
xchg
scas
pusha
pop
lret
mov
ja
jmp
xchg
and
or
call
or
cs
push
push
cmp
mov
pop
lods
not
or
cld
pusha
xchg
out
inc
mov
scas
jbe
fstl
rcrb
jle
clc
xor
fs
dec
jg
lcall
jae
lret
jne
repz
outsl
xchg
fcomi
jbe
loop
insl
push
push
mov
pushf
push
sar
rol
cmp
mov
push
mov
jl
mov
fsub
bound
mov
ds
jne
das
fs
xchg
pop
dec
xchg
xor
mov
test
cltd
add
pop
cmpsb
mov
xchg
and
sub
mov
mov
outsb
xor
int3
push
inc
mov
popa
mov
jns
inc
jmp
pushf
es
mov
in
sbb
and
testl
cmpsl
cli
jle
jp
jno
add
and
or
divb
insb
ret
cmp
test
jnp
pop
in
js
fwait
mov
adc
add
push
test
adc
movsl
push
xchg
xchg
inc
push
cwtl
dec
popa
sarl
mov
push
leave
xchg
xor
in
xor
jp
lahf
ret
inc
andl
adc
bnd
dec
and
add
sbb
push
xor
adc
insl
popf
int3
imul
cmp
insl
outsl
cmc
jge
inc
sub
mov
rorb
or
sar
push
xor
xchg
mov
jge
cld
sub
inc
rcl
test
rcr
pop
add
adc
inc
sahf
pusha
inc
pushf
push
test
loop
jg
out
and
rolb
enter
xchg
aaa
sub
add
cmp
mov
pusha
xlat
lds
mov
mov
jnp
out
test
mov
ret
push
push
sub
cld
lcall
cmp
icebp
fcmovbe
cld
fstl
or
xchg
mov
insl
int
into
pushf
xchg
in
ret
pop
inc
inc
cs
pushf
loop
xor
outsb
mov
cmp
cltd
jne
pushf
cmpsl
test
mov
xlat
cmc
cmp
add
lods
xchg
ljmp
jne
cmp
clc
push
cwtl
pushf
adc
loope
jmp
jno
sub
mov
out
pusha
inc
decb
cltd
leave
scas
shll
mov
inc
sbb
cmp
jmp
lods
jg
nop
scas
jns
std
push
dec
add
pop
std
lahf
mov
leave
push
rcl
rol
ljmp
adc
mov
inc
xor
mov
in
je
jb
ja
sub
dec
push
daa
loopne
call
test
mov
jo
mov
lods
add
pop
mov
fnstsw
sub
push
aaa
jge
leave
cli
mov
xchg
cltd
pop
sbb
ficomps
fsubrs
aas
vunpckhps
ja
xor
xchg
ja
andb
add
dec
xchg
aad
sbb
out
mov
push
xor
repz
daa
add
and
clc
xor
pusha
sarb
sti
xchg
inc
push
add
popf
push
pop
adc
dec
mov
dec
outsl
clc
inc
into
jl
nop
xchg
pop
and
lret
je
nop
jmp
enter
cmp
movl
sub
inc
js
mov
xchg
imul
xor
push
sbb
mov
pop
inc
push
aad
cmp
mov
rcrb
adc
outsl
stos
fistps
neg
add
cmpl
aaa
cmpsl
push
in
xchg
jno
lods
jl
adc
in
mov
xchg
push
cmpsb
push
pop
movsb
inc
ja
shlb
ds
add
and
push
xlat
stc
cmp
cmp
adc
or
sti
arpl
sbb
scas
loop
pusha
cmp
mov
xchg
push
jo
cmp
addr16
jp
inc
arpl
mov
aam
hlt
mov
repz
mov
es
sbb
mov
or
sti
dec
jecxz
mov
addr16
jne
mov
cmp
cmp
clc
test
push
cmp
out
dec
sub
into
mov
int3
and
loop
inc
mov
subb
scas
fsubr
push
mov
mov
jl
mov
lea
in
add
mov
gs
aas
int
jecxz
push
fsubrl
pop
out
in
push
jo
adc
dec
inc
ljmp
ja
pop
and
push
and
and
mov
cs
fists
adcl
mov
push
cmp
test
imul
push
mov
enter
mov
dec
negl
std
pop
push
scas
push
out
arpl
mov
mov
out
inc
fldenv
sarl
mov
fldenv
mov
fimuls
lret
or
mov
test
ret
pop
out
sbbl
je
hlt
or
bound
sub
rol
sub
scas
cmpsb
mov
xor
push
lret
mov
mov
push
jne
stos
outsb
and
enter
shlb
pop
outsb
xor
or
jae
mov
jbe
fidivl
mov
push
jle
jecxz
cmp
in
push
dec
mov
sub
jecxz
addr16
sahf
je
xchg
not
xchg
aas
dec
push
call
and
cwtl
push
or
push
inc
cltd
xchg
add
jmp
lea
push
lret
fldcw
ret
push
or
push
pop
jo
aas
mov
mov
ss
cmpsb
rorl
pop
pop
pop
dec
fdivl
cmp
xchg
mov
dec
pop
mov
xlat
inc
mov
sbb
xchg
ret
mov
lret
push
jno
iret
adc
jl
mov
movsl
dec
daa
mov
xor
pop
fcomp
testl
cmp
jbe
inc
mov
mov
repnz
or
and
dec
ret
xchg
adc
or
xchg
sub
or
movsl
stos
call
mov
mov
mov
aas
add
fcomps
cmc
aad
mov
xchg
aam
lds
sub
jp
push
inc
in
enter
mov
pop
sub
scas
popf
mov
shll
mov
test
push
xchg
add
or
mov
xchg
pop
inc
mov
jb
mov
stc
pop
and
negl
orb
sub
and
stc
fs
pop
test
sar
notl
scas
cmp
jp
sub
mov
aad
jl
xor
push
mov
aam
mov
adc
in
je
xor
dec
adc
pop
dec
cmpl
mov
push
fcmovbe
lret
push
mov
repnz
cmp
and
push
adcl
cli
negb
out
jnp
incl
push
and
inc
cmovne
ljmp
scas
push
pop
leave
outsb
xchg
pop
push
fidivs
or
ss
mov
fbstp
cmp
sub
push
and
pop
jecxz
fsubs
daa
bound
pop
inc
lods
jnp
daa
xor
mov
push
in
xchg
scas
push
pushf
rcll
jae
push
test
inc
push
pop
xchg
add
dec
test
cmp
push
xchg
inc
push
dec
rolb
add
daa
add
out
ja
xchg
imul
mov
mov
cltd
push
arpl
xchg
mov
scas
fidivrl
xor
push
mov
jecxz
out
pop
lods
adc
in
sub
pushf
aad
mov
imul
cmc
mov
mov
and
cmp
fildll
in
iret
negl
pop
rcrb
popf
xlat
jo
int
ds
pop
lret
jb
jge
notb
adc
sub
cmpsl
mov
lahf
pop
bound
jno
jmp
popf
inc
scas
pop
xor
jns
movsb
adc
pop
test
push
lret
mov
sub
inc
mov
add
sbb
pusha
jmp
in
mov
push
lahf
xlat
cltd
scas
inc
mov
je
push
push
cli
jmp
cld
fdivrl
dec
lds
push
add
dec
mov
jne
lods
insl
roll
adc
cltd
jno
dec
jmp
mov
jecxz
shlb
push
fdiv
pop
rclb
notb
jae
stos
or
bound
mov
pop
add
int
inc
inc
xor
arpl
cmp
jg
dec
sbb
jb
sub
dec
lret
push
out
or
clc
dec
push
cmpsb
sahf
jne
ljmp
xor
mov
lret
insb
popf
xlat
fsubs
data16
sbb
dec
inc
ficomps
movsl
decb
ss
lds
daa
lock
mov
adc
pop
xor
arpl
cltd
jmp
repz
push
mov
mov
mov
pop
jbe
aaa
ds
jg
shll
std
addb
ret
and
push
aaa
fsubs
xor
mov
xchg
daa
or
dec
jle
jmp
in
mov
xor
outsb
iret
pmaddwd
inc
mov
aad
adc
mov
mov
pop
xor
or
push
mov
push
out
cmp
repz
sbb
daa
push
mov
jo
lea
cwtl
adc
or
or
sbb
mov
in
and
fistpl
lea
mov
mov
iret
pop
jb
xor
andb
push
imul
in
js
fnstenv
dec
or
jbe
pop
imul
ljmp
xchg
sahf
xchg
push
xchg
push
pop
push
xor
je
fistpl
add
xor
js
mov
out
jg
out
or
add
lds
pop
gs
jnp
xor
push
orb
pop
push
popa
leave
test
sbb
mov
outsb
and
data16
cmpl
push
fstp
add
lret
push
jg
xor
fisubrs
mov
inc
outsl
sbb
mov
and
inc
ljmp
mov
das
rcrb
xchg
aaa
mov
icebp
or
insb
ds
in
fsubrl
imul
jle
mov
inc
mov
jne
pop
mov
lds
out
iret
leave
mov
push
pop
mov
repnz
sub
jo
xchg
mov
cmpb
mov
or
das
and
push
mov
repnz
jns
inc
mov
cld
mov
pop
jno
adc
test
mov
xor
test
pusha
inc
mov
push
mov
loope
sub
jo
mov
stos
jbe
inc
pop
ss
out
mov
outsb
xor
sub
in
inc
aaa
clc
cwtl
push
mov
mov
dec
js
aad
xchg
repz
inc
incb
popf
test
push
inc
arpl
aas
dec
clc
and
test
ffreep
mov
sbb
mov
stos
divl
push
fwait
pop
dec
dec
jno
mov
nop
enter
das
inc
ret
mov
mov
in
add
addr16
cmp
and
add
jbe
mov
adc
mov
add
loopne
imul
push
xchg
fucom
pop
add
in
inc
jp
nop
fcomip
or
add
cltd
inc
dec
ret
icebp
sbb
jmp
cmc
xchg
pop
jne
adc
insb
cmp
fmull
cmp
adc
pusha
pop
insb
lea
xchg
lods
pop
dec
aaa
xchg
sbb
popl
cmpsl
pop
xor
mov
rcrb
pop
add
fstps
sbb
cwtl
sub
sbb
adc
or
push
add
dec
test
ds
add
test
inc
shlb
ficoml
aas
push
sub
push
neg
jnp
leave
and
dec
jns
and
pop
sbb
mov
icebp
add
scas
pop
jo
shlb
pop
loope
aaa
inc
sub
push
xchg
jae
ja
mov
xlat
pushf
xchg
or
scas
fbld
jmp
pop
stc
in
pop
mov
sahf
roll
pop
stos
movsb
jae
mul
in
int
hlt
insl
and
pop
mov
int3
stos
mov
sqrtps
and
insb
push
jl
out
pop
xor
mov
roll
xchg
sar
jne
cmp
mov
mov
pop
cmpsb
ja
clc
daa
fadds
fistps
in
addr16
leave
mov
mov
push
xchg
fidivs
loop
call
rorb
push
cmp
andb
add
imul
dec
jl
inc
pushfw
jnp
and
mov
dec
out
out
fs
xchg
jmp
xchg
jecxz
stos
xchg
jo
lcall
andl
ja
insb
pop
push
pusha
movsb
cmp
fildll
sbb
fistpll
push
cmp
inc
in
add
push
inc
ja
dec
idivl
adc
mov
sub
cwtl
mov
and
mov
leave
lods
test
in
jne
jb
mov
xor
dec
lds
addb
es
jns
mov
icebp
cmp
sub
and
movsb
pop
mov
gs
or
hlt
xchg
pop
ljmp
shl
or
pusha
xor
jp
jle
push
add
inc
jl
mov
pushf
aas
loopne
vpxor
add
jle
icebp
mov
lods
andl
movsl
cmp
xor
jecxz
mov
xchg
cmp
xor
stos
xor
add
fwait
stc
fisubl
jmp
cmpsb
js
into
jno
inc
sub
pushf
push
push
bound
aaa
sahf
jle
clc
lock
gs
int3
loopne
loopne
popa
pop
dec
mov
and
jp
jbe
inc
xor
movsb
mov
inc
in
dec
andl
jno
repnz
mov
xor
imul
out
mov
inc
pop
jecxz
jo
push
rorb
sub
ds
adc
jge
sub
sub
gs
cmpl
mov
dec
into
dec
fnsave
lods
adc
xchg
jp
test
mov
sahf
orb
mov
cmpsb
sub
test
aam
orl
sahf
jg
repz
outsb
jge
pop
mov
jno
mov
mov
es
into
arpl
push
add
xchg
arpl
or
clc
scas
dec
mov
movsb
aam
cwtl
jmp
cmpsl
popf
in
repnz
add
inc
movsb
hlt
loope
jno
adc
pop
imulb
adc
sbb
inc
sub
stos
mov
in
cli
push
pop
xchg
addr16
or
js
or
xchg
lds
ret
out
mov
pop
jne
xor
scas
or
sahf
xor
and
xacquire
fadd
mov
pop
dec
sarb
push
aas
mov
shl
out
sbbl
sarb
orl
pop
stos
aad
and
xchg
mov
cmp
mov
mov
fs
xor
mov
pop
daa
pop
mov
jp
dec
dec
inc
jbe
addb
stos
out
ljmp
mov
pop
nop
sahf
dec
adc
and
and
fwait
movsl
cmp
add
dec
push
cmp
xor
in
sahf
sbb
xor
xor
and
xor
dec
scas
repz
push
das
aaa
add
push
subl
mov
adc
cmc
arpl
pop
pop
jnp
sub
sbb
mov
xchg
ds
jmp
mov
jne
sar
outsb
xchg
push
mov
stos
lods
pop
xorl
cmpsl
loop
mov
add
pop
mov
lahf
das
push
mov
dec
cltd
fwait
inc
pop
and
adc
popf
enter
push
push
jbe
cmpsb
push
push
movsl
adc
fimuls
outsb
test
adc
xchg
dec
aad
dec
or
test
out
test
xchg
popf
enter
idivl
call
lds
xorb
and
pop
push
add
in
jbe
push
lahf
sbb
pop
scas
sbb
sahf
cmpsl
mov
xor
cmp
push
scas
test
dec
mov
imul
repnz
lds
sahf
ss
mov
sub
fisubl
sbb
add
daa
cmp
addr16
cmp
add
xacquire
pop
icebp
vandps
cmp
push
fwait
adc
cli
and
movsl
mov
xchg
dec
sbb
fld
xor
outsb
jmp
in
inc
sub
test
das
mov
jno
sub
mov
ss
pop
add
bound
jl
je
pop
fdivrl
xor
add
cld
sbb
jb
dec
and
push
jp
scas
pop
cs
dec
push
xlat
or
inc
pop
imul
mov
jl
mov
in
pop
es
push
sub
add
and
fsubl
adc
jns
imul
loope
cmp
and
cmc
jecxz
bound
pop
xlat
adc
lret
aad
cmp
push
fcomps
sbb
inc
test
aad
mov
and
test
daa
jnp
scas
in
movsb
sub
in
xchg
xor
xor
cmpsl
ja
xor
xchg
pushl
mov
js
mov
cli
mov
out
arpl
xchg
in
out
cmpsl
cmpsb
pop
aas
insl
mov
shl
mov
push
mov
rol
stc
and
mov
data16
mov
sub
xchg
test
jno
add
inc
aas
pop
test
in
jbe
stos
daa
iret
das
cmp
xlat
mov
ja
xchg
and
jecxz
and
add
cmc
push
lret
pushl
jecxz
and
lret
pop
push
das
mov
jge
add
inc
je
xchg
mov
rol
adc
jnp
sbb
js
xchg
ror
shl
cmp
addl
dec
push
into
fcomip
xchg
mov
and
add
pop
test
cmp
pop
add
sbb
dec
pop
jb
mov
call
sahf
xchg
inc
adc
and
pop
mov
fisttpl
sub
popa
fsubrs
pop
pop
push
sub
filds
sbb
inc
pop
frstor
jne
sbbb
movsl
notl
bound
je
daa
fucomi
fs
movsb
and
lcall
jg
mov
test
fcompl
pop
outsb
mov
sub
sbb
sahf
cmp
xor
pop
pop
dec
jo
pop
xchg
sbb
sbb
jl
dec
xor
fadd
ret
adc
in
dec
roll
xchg
xor
and
stos
mov
imul
xor
mov
aas
sbb
adc
push
not
jge
out
out
pop
or
cli
lods
pop
hlt
data16
mov
mov
sarb
push
je
shll
dec
imul
popa
stc
inc
push
popa
jp
adc
inc
add
cwtl
out
add
adc
cmp
sub
jne
xchg
fsincos
xor
imul
xchg
or
xchg
and
test
outsb
inc
loope
or
pop
je
sub
mov
pop
jno
or
push
ds
outsb
orl
orb
jg
repz
fnstenv
rorb
adc
inc
mov
xchg
or
xlat
hlt
scas
pop
xorb
add
and
xor
dec
jno
push
test
push
xor
dec
ss
test
xchg
adc
aaa
rcr
add
mov
nop
fwait
out
xor
int
ret
mov
mov
pop
rcrb
sti
sub
mov
mov
repz
inc
mov
bound
neg
mov
aad
mov
jae
xchg
dec
pushf
add
lret
cld
sarl
insb
jns
inc
push
adc
aas
lret
in
mov
dec
stos
mov
pop
or
cmpsb
insb
inc
push
push
xlat
pop
into
xlat
add
or
or
cltd
ss
aam
fistps
fisubrs
mov
pusha
jno
imul
jae
cmp
mov
jge
and
pop
arpl
lret
dec
imul
push
movsb
dec
inc
mov
scas
adc
lea
mov
pop
adc
mov
aaa
lret
rorb
lret
adc
adc
mov
lcall
dec
imul
std
adc
pop
adc
cmpb
sbbl
sbb
dec
add
mov
roll
jnp
xchg
cmp
pop
dec
inc
ret
fs
mov
hlt
shrl
outsb
out
sbbl
out
das
out
pop
or
bound
fwait
stos
mov
and
fs
jle
in
sub
add
enter
or
xchg
inc
bound
dec
mov
dec
in
lods
inc
and
mov
xlat
and
xchg
cmp
pop
push
mov
xor
lods
mov
ljmp
sub
cwtl
mov
add
xchg
lret
dec
sub
into
out
icebp
add
jbe
sbb
lods
jno
iret
shll
daa
xor
in
jle
inc
testl
sbb
outsl
xor
inc
fildl
iret
ja
sub
push
scas
jecxz
mov
or
xor
pop
mov
std
out
ljmp
pop
aam
mov
xchg
jl
push
xor
ret
and
popa
aas
jns
lahf
das
xchg
cmp
xchg
scas
mov
test
dec
jns
cltd
mov
faddp
lods
push
inc
rcr
pop
sti
xchg
push
pop
or
cmpsl
pop
xor
test
adc
inc
mov
or
in
imul
mov
outsb
push
nop
iret
mov
cs
xchg
std
ja
xchg
jg
sbb
aad
jmp
adc
divb
shll
mov
test
cmc
sbb
jbe
jbe
pop
int
adc
jo
push
lahf
mov
mov
pusha
clc
jae
mov
ficompl
sbb
jmp
sub
mov
adc
clc
insl
pusha
inc
pushf
mov
pop
push
push
cmp
in
cltd
pop
into
cltd
je
xor
xchg
mov
and
loope
loop,pt
lcall
outsl
pop
fidivl
pop
data16
jecxz
pop
in
pop
faddl
inc
aaa
dec
enter
repnz
outsl
jmp
and
js
xor
mov
aam
in
movsl
dec
imul
push
cmp
scas
mov
or
rorl
pop
shl
jl
out
cmp
adcl
sub
shrb
pop
mov
xchg
jno
jmp
mov
imul
test
fwait
push
xchg
aaa
mov
jns
dec
dec
mov
stos
fwait
mov
push
jae
mov
in
pop
xor
gs
cld
and
dec
lcall
fcoml
cmp
jmp
add
cli
push
sub
movsl
push
mov
mov
xor
pop
sbb
push
sarb
jecxz
in
sbb
mov
xchg
mov
xchg
xor
pop
mov
adc
push
sub
mov
push
pusha
xor
or
cltd
mov
or
lea
or
ficomps
inc
popf
cwtl
xlat
jge
push
leave
loope
sbb
mov
mov
scas
imul
mov
jmp
call
rolb
jne
lret
lea
push
jge
in
pop
dec
aas
push
jmp
and
rcrb
sbb
arpl
jae
add
stos
rorl
lret
jo
push
nop
enter
and
or
xchg
adc
pop
test
ret
sbb
or
shll
and
push
mov
mov
mov
mov
push
outsl
sbb
jne
mov
sub
jns
adc
es
fimuls
and
fdivp
dec
aas
mov
dec
push
pop
scas
adc
and
aam
les
xchg
dec
mov
mov
dec
out
pushf
popf
jne
lret
js
pusha
xor
mov
or
shlb
inc
jmp
nop
mov
add
nop
lcall
pop
mov
pop
push
mov
xlat
pusha
add
inc
pop
in
incl
out
mov
shr
je
enter
and
pop
and
mov
push
in
bndstx
rcrl
jg
fcomi
pop
jmp
cmp
mov
push
jo
xchg
js
dec
mov
cmp
les
loope
stos
sub
ret
pop
pop
sbb
xchg
ljmp
out
push
mov
sub
outsb
setbe
xor
addr16
pop
dec
sbb
push
jecxz
outsb
int
mov
cmp
lea
gs
or
xchg
jne
das
and
dec
cmpsb
push
dec
xor
stos
out
ret
insb
jp
gs
fldt
mov
outsb
bound
stc
xor
push
xor
outsb
das
testb
xchg
cmp
adc
mov
mov
push
push
stos
add
jmp
inc
push
inc
sahf
das
or
dec
inc
adc
in
pop
lods
sub
outsb
rorl
fxch
lods
sub
dec
inc
pop
ljmp
fildl
mov
push
inc
pop
aam
cmp
adc
mov
xchg
adc
push
psrlq
insl
sbb
mov
cltd
add
mov
push
inc
xchg
sbb
pop
cmpsb
gs
out
add
dec
xchg
shlb
les
dec
xchg
cmc
xor
and
dec
adc
sbb
pop
iret
inc
addl
dec
xchg
jno
mov
push
adcb
or
lret
xor
adc
rcll
add
push
xor
ja
push
xor
dec
xor
mov
adc
aad
jo
popa
scas
sbb
loopne
sti
stos
out
xlat
inc
popa
or
subb
push
popl
mov
fisttpl
nop
shll
jg
xor
jbe
xor
repnz
pop
cmp
or
push
int3
lret
daa
pop
test
cmc
mov
push
mov
mov
push
add
xor
pop
mov
mov
xchg
xchg
pop
std
mov
mov
imulb
test
push
insl
cmp
movsb
xor
lds
pop
jnp
lcall
in
repz
movl
rolb
adc
les
cli
mov
rclb
xor
std
dec
lahf
sbb
push
push
imul
jnp
mov
pop
pushf
mov
push
sub
dec
pop
xor
adc
mov
cmpl
add
or
sbb
inc
inc
roll
lahf
xor
xor
add
adc
test
sbb
div
sub
pop
add
scas
add
cmpsl
push
pop
jmp
and
outsb
push
lret
cmc
pop
pop
pop
insl
add
mov
es
stos
repz
jbe
xchg
jne
icebp
out
popf
pop
xor
sbb
fidivrl
repz
cmpsl
sbb
and
dec
xor
inc
jo
mov
xchg
sub
arpl
jno
jae
add
sbbl
add
enter
scas
repnz
popa
movsl
loop
out
inc
dec
mov
in
add
mov
and
sbb
repz
pop
cltd
testb
iret
scas
jmp
sarb
cmc
add
dec
dec
mov
push
mull
divl
mov
push
loope
mov
mov
push
pop
or
sub
insb
in
push
mov
addr16
mov
cmc
out
aam
mov
mov
into
fs
pop
inc
aad
outsb
and
test
test
xor
lret
or
lods
mull
fmul
lcall
gs
push
outsl
jb
std
movsbl
test
mov
jmp
in
push
add
jo
xor
add
mov
out
test
inc
push
scas
pop
dec
popl
ja
rclb
arpl
andl
frstor
pop
cmp
loop
fwait
rcl
xor
cmc
add
push
ret
mov
pop
pushf
jle
and
and
jmp
xlat
jnp,pn
xor
repz
push
cmc
sub
ljmp
fildl
in
shll
gs
sbb
pushf
mov
fcoml
xchg
sbb
inc
xchg
xlat
cmc
xor
gs
cmpsb
outsb
cmp
dec
adc
fwait
sub
jle
inc
pop
mov
and
cmp
mov
add
adc
shrl
dec
xor
xor
shl
mov
sub
daa
jne
and
jmp
lods
push
imul
add
pop
mov
push
clc
imul
xor
mov
pop
add
pusha
subl
mov
popa
lcall
int3
pop
int
sbb
add
adc
mov
icebp
pop
mov
xchg
cld
sub
mov
dec
test
frstor
aad
sbb
inc
inc
sahf
xchg
cwtl
in
int
ficomps
int
ljmp
dec
jbe
sbb
enter
dec
mov
fists
cmc
cwtl
push
mov
xor
sbb
push
gs
test
movsl
adc
out
call
pop
lcall
insl
aam
ret
mov
mov
jo
je
pop
inc
movsl
pop
out
cli
lods
dec
mov
push
jo
add
insl
jmp
or
scas
sbbb
adc
jmp
out
mov
mov
into
pop
push
and
pop
or
sbb
movsl
sbb
sub
add
jno
pop
add
push
ret
sahf
adc
call
sbbb
stos
lret
xchg
daa
adc
mov
mov
and
and
ret
mov
cld
je
xor
and
mov
cmpl
sub
jo
mov
fstp
call
hlt
pop
add
dec
icebp
sarl
shr
sbb
adc
mov
inc
mov
lock
int3
xor
mov
movsl
aaa
pop
xor
iret
jecxz
aas
push
stc
add
dec
mov
roll
and
jg
into
xor
add
lods
repz
mov
aaa
adc
sub
mov
mov
arpl
fists
add
xchg
psllw
or
lea
idivl
lods
sub
xlat
idiv
mov
pop
out
inc
jecxz
pop
push
mov
nop
pop
xlat
fcomps
push
aaa
or
movsb
push
leave
ljmp
inc
xor
out
test
repz
pusha
jnp
shll
xor
test
cmpsl
mov
fstps
ror
mov
xchg
sub
aas
jl
mov
mov
fcomps
dec
fldt
mov
or
push
aaa
mov
je
xor
dec
sub
outsb
sub
mov
sbb
inc
sbb
call
jmp
inc
mov
add
xor
inc
sub
jle
fwait
adc
add
or
sub
dec
cmp
jge
jecxz
and
aam
or
hlt
in
dec
jecxz
xchg
sbb
fwait
jb
repz
inc
add
ret
push
xor
mov
push
cmp
ds
dec
mov
push
andb
or
lds
jb
jmp
filds
sti
mov
aas
icebp
inc
scas
jne
mov
xchg
and
push
pop
dec
incb
push
mov
rolb
adc
mov
insb
outsb
push
cmc
in
scas
stos
dec
dec
push
or
inc
addr16
jb
int3
scas
arpl
mov
loope
mov
push
xchg
add
in
push
push
sub
mov
int3
xlat
mov
jle
rcr
xchg
push
inc
mov
sub
xchg
mov
inc
mov
inc
lret
pop
add
sub
arpl
inc
inc
jmp
mov
fstp
ja
cmpsl
or
movsbl
movsb
repnz
fwait
les
mov
hlt
cmp
push
xchg
pop
sub
add
jecxz
adc
jo
out
int3
xor
xchg
mov
sub
xor
cli
jp
push
lods
adc
and
sub
inc
stc
movsb
push
push
lods
cli
pop
adc
or
inc
sub
daa
cwtl
iret
gs
adc
mov
adc
arpl
fmul
xchg
jge
sarb
popa
xor
notl
mov
leave
icebp
pop
aas
cvtpi2ps
dec
jns
cmp
sarl
out
js
cmp
xchg
ljmp
sbb
pop
and
jg
add
lret
negl
cmp
aad
lcall
scas
sub
pop
idivb
shl
add
jno
mov
and
xlat
pop
loopne
mov
mov
inc
mov
stos
shrb
jns
mov
popf
in
imul
ret
addr16
out
push
cmp
cmp
xor
pusha
push
cmpl
jb
and
js
fldt
js
das
into
xchg
data16
xchg
jbe
test
jnp
icebp
jno
or
test
bound
xor
ret
les
repz
xor
test
arpl
dec
mov
sub
jne
ret
and
and
sub
rol
addb
sarb
insl
icebp
mov
push
fisttpll
push
push
cmpsb
xor
loop
jle
das
sbb
or
mov
sarb
pop
adc
mov
stc
xor
add
enter
sbb
iret
repz
push
popf
fmul
pop
inc
std
rcrb
cs
push
pop
ret
sub
inc
stos
sbb
add
pop
shrb
xchg
je
je
and
pop
fmuls
out
xor
sub
cmpsb
test
nop
fisubl
push
arpl
fsub
adc
dec
jl
fnstcw
insb
cwtl
pop
int
mov
imul
dec
testl
xor
xchg
daa
or
scas
shlb
loop
fs
ret
jg
xchg
or
int3
popf
push
movsb
mov
pop
mov
or
pushf
or
mov
jle
inc
mov
pushf
scas
leave
adc
xor
mov
popf
inc
imul
and
pop
icebp
sbb
rcr
mov
and
jae
inc
jp
test
roll
mov
aaa
rorb
mov
pop
xor
pusha
in
data16
outsl
jp
sbb
push
mov
pop
xchg
lds
in
xchg
lods
hlt
ffree
rcl
stos
les
and
xor
in
or
loopne
pushf
dec
dec
add
push
mov
xor
and
mov
int3
dec
jge
jl
fs
insb
sbb
les
adc
iret
pop
gs
repnz
shrb
inc
jnp
loopne
mov
or
cmp
xchg
pop
sub
jb
fimuls
adc
cmpl
jecxz
jne
push
pop
or
push
or
xchg
jae
adc
dec
xor
inc
loope
pop
mov
dec
and
sub
mov
mov
ret
mov
fcom
fstpl
xor
repnz
push
sbb
cmp
ljmp
lahf
jmp
jg
xor
jmp
cmpsb
add
xchg
aas
push
mov
in
ror
cmp
push
out
mov
mov
fsub
sub
xchg
mov
test
mov
mov
xor
inc
cmpsb
mov
inc
or
lret
inc
loope
pop
cmp
sub
cmc
mov
les
insb
lods
add
fsubr
pop
movb
pop
jl
cmp
inc
and
out
cli
or
pop
mov
and
mov
mull
test
adc
imull
pop
push
std
adc
out
hlt
add
into
cwtl
push
push
push
je
push
ret
lret
test
insl
mov
push
push
jge
cmp
inc
or
repnz
imul
sbb
cmp
inc
insl
push
cmp
neg
push
imul
push
in
test
loope
gs
sub
sbb
or
data16
mov
sbb
icebp
dec
lods
ret
orb
js
movsb
xor
xchg
sub
jge
lds
adc
mov
mov
adc
mov
hlt
jg
imul
jp
test
mov
int3
jae
scas
into
shll
icebp
xlat
xor
ret
mov
jl
sbb
sub
test
jne
sbb
sub
xor
hlt
jge
outsb
sti
mov
and
imul
popa
xor
ds
pop
push
cmp
fldenv
inc
push
mov
out
push
push
fs
ss
push
call
das
sub
mov
jb,pt
adc
jp
inc
popf
mov
xor
mov
push
sbb
mov
jp
adc
fsubr
iret
mov
std
and
js
cmpsb
lods
pop
inc
roll
mov
in
adc
cmp
inc
dec
lahf
insl
inc
fisttps
shl
scas
lds
sbb
push
ficomps
insb
lods
mov
jne
rcll
inc
xchg
add
arpl
lahf
and
dec
pop
imul
aam
std
xor
fimuls
fidivl
js
imul
xchg
sub
push
in
xchg
mull
mov
push
and
adc
push
inc
dec
jg
cli
dec
ret
mov
in
mov
test
or
and
fbld
push
and
pop
xchg
push
jg
mov
or
inc
pop
int
insb
ljmp
rcr
push
fwait
mov
or
sub
push
jg
js
lret
cltd
loopne
mov
sar
loopne
inc
mov
push
int3
and
adc
testb
jo
mov
push
mov
test
fs
cwtl
adc
adc
ret
pushf
and
test
incl
pop
sti
push
sub
xchg
insl
xchg
sbb
lock
in
dec
stos
out
outsb
inc
aam
adc
jg
jecxz
xchg
cli
mov
or
xor
adc
mov
xchg
scas
popa
inc
inc
xor
fists
stc
in
mov
jl
cmp
and
jno
fdivrp
xchg
jmp
xor
sbb
mov
or
push
shl
sahf
inc
xchg
cwtl
cmp
mov
mov
push
dec
pop
push
test
std
sub
dec
cs
icebp
lret
cmp
or
insb
mov
pop
and
cmc
clc
jmp
sbb
add
sub
fs
dec
scas
rol
mov
push
pop
repnz
xchg
pushl
dec
in
hlt
pop
xchg
mov
push
mov
xchg
mul
inc
popa
fnsave
cli
pop
pop
neg
sar
test
int3
scas
popf
cmp
sub
popa
lcall
addl
cmp
mov
mov
sti
cli
jmp
lea
dec
ss
and
ljmp
ret
mov
stos
js
stos
test
enter
jbe
and
mov
push
lock
mov
mov
cwtl
jns
cmp
lea
les
fmuls
or
pop
into
sbb
cwtl
sbb
repnz
or
dec
and
dec
jne
push
pop
xchg
pop
rolb
and
mov
lahf
and
div
and
clc
xchg
and
movnti
push
adc
add
sbb
outsb
es
idivb
pop
pop
call
pop
flds
pop
xorl
fnsave
or
pop
test
cmp
add
push
stc
inc
xchg
stos
mov
cmpsb
dec
xor
fnsave
inc
fildl
adc
push
add
cwtl
mov
adc
hlt
xchg
testl
add
shl
xchg
imul
into
shrl
mov
jae
js
jo
xchg
sbb
push
cmpsl
lahf
or
cs
aaa
mov
sarl
xchg
out
jae
push
push
mov
dec
bt
inc
loope
add
fildll
sub
dec
and
push
push
cmp
cmp
jp
dec
cwtl
adc
push
add
out
or
clc
sub
sub
mov
mov
icebp
lods
jmp
or
mov
xchg
movsl
fnstcw
add
push
mov
cmp
cmc
and
pop
and
cmp
ret
add
lea
int
popa
inc
fldcw
shll
mulb
sub
dec
xchg
push
subb
lods
cmp
hlt
dec
icebp
test
pop
or
mov
sbb
pop
add
pop
cmpsb
js
pop
or
adc
daa
stc
fistl
dec
pop
xchg
cmp
pop
inc
movsl
sub
pop
or
jb
mov
jne
nop
pop
insb
xchg
in
add
inc
scas
xor
inc
cmp
add
mov
cmp
cmp
insb
push
xlat
dec
stos
jno
push
fnstenv
mov
mov
xor
loope
ja
mov
out
or
inc
js
dec
xchg
stc
and
roll
lret
jno
movzbl
subl
jp
jnp
sbb
fcoml
fwait
andl
sahf
dec
cmp
and
iret
xchg
fldenv
in
xor
out
jp
dec
loopne
lods
test
or
nop
imul
cli
fldl
and
inc
jns
mov
xor
mov
outsl
push
aaa
inc
test
sti
xchg
dec
mov
dec
scas
or
sbb
mov
push
add
sub
xor
test
test
test
mov
imul
xchg
pushf
ret
mov
loop
ljmp
jmp
xchg
sub
ret
das
cwtl
lods
xchg
xlat
out
mov
test
ret
out
arpl
mov
dec
sub
mov
test
xor
add
out
pop
cmc
fsubrs
je
outsl
and
out
inc
or
inc
rcl
daa
add
bound
xor
arpl
pop
test
pop
add
mov
dec
insl
movsb
push
xor
inc
loopne
pop
in
cmpsb
addr16
shll
or
ret
mov
xor
iret
or
inc
push
push
mov
mov
mov
hlt
xchg
fs
mov
cmc
cmp
dec
mov
xchg
xorb
jns
in
mov
sbb
fisubl
sub
push
outsl
jg
and
test
pusha
pop
push
xor
push
loopne
lea
inc
add
call
sub
insl
repz
sbb
pusha
and
arpl
pop
loope
jle
stos
mov
scas
or
inc
loop
pusha
jno
xor
mov
inc
dec
push
cmp
ds
lods
mov
in
addr16
sub
inc
sarl
xchg
sbbb
adc
leave
arpl
cmpsb
push
ror
add
jge
lahf
test
test
fstpt
jle
pop
js
aaa
ds
mov
test
or
mov
stos
es
popa
adc
fsubr
adc
inc
xchg
icebp
mov
in
xchg
mov
xrelease
cld
aam
fmull
and
rorb
loop
xchg
xchg
lahf
hlt
inc
dec
data16
dec
sub
mov
mov
test
sbb
jns
ljmp
sub
je
sub
hlt
ljmp
cmp
fisttpll
dec
sbb
insl
fs
jge
fisttpll
xor
lds
lds
insl
cld
call
pop
aam
xchg
and
xor
shll
mov
scas
cmpl
dec
mov
cmp
stos
pop
ret
jp
and
push
dec
cmc
lea
mov
mov
push
out
rcll
xchg
in
push
orb
lods
mov
xchg
xlat
movsb
test
xor
mov
movsl
pop
push
lock
push
pop
lock
push
mov
fbstp
les
push
cmpl
lock
ret
jbe
push
movsl
xor
cmp
loop
dec
push
add
adc
xor
cmovp
mov
dec
lret
stos
pop
repz
dec
adc
xor
xchg
cmc
inc
fisubs
push
popf
movsl
jp
sub
lods
pop
dec
test
lods
dec
dec
cmp
lret
shrb
adc
cmp
mull
cmp
add
mov
idivb
push
dec
rorb
repnz
inc
call
ljmp
pop
and
daa
mov
jnp
mov
cwtl
xchg
push
sbb
jae
or
inc
das
pop
popf
test
outsl
pop
repnz
mov
mov
jge
nop
jecxz
pop
sahf
sbb
or
loope
in
or
cmpb
data16
push
mov
lock
fwait
xor
pusha
insl
mov
ja
shl
adc
pop
sbb
ja
mull
pop
jge
add
orb
jbe
fdivr
adc
cwtl
mull
subb
pop
xor
clc
lcall
sbb
int3
lret
mov
fcomps
jns
sahf
pcmpeqd
daa
pushl
pop
inc
lcall
xchg
xchg
cltd
dec
repz
lods
scas
or
movsb
adc
jnp
xchg
add
sub
adc
in
cli
push
ja
mov
popf
and
repz
pusha
and
xor
mov
add
in
xchg
repnz
push
out
lods
loop
idiv
pop
dec
ret
daa
adc
mov
out
sub
movsl
adc
inc
add
out
ret
xchg
push
out
add
scas
js
cmc
push
dec
cmc
mov
lods
inc
loopne
sbb
dec
inc
sbb
mov
cmp
xchg
imul
sub
stos
mov
icebp
mov
je
sbb
fadd
test
icebp
cmpsb
mov
mov
dec
adc
mov
adc
cld
icebp
mov
jl
lods
dec
lods
add
std
jl
loope
dec
scas
dec
sub
test
mov
or
bound
adc
popa
cltd
pop
ret
push
mov
sbb
adc
jns
inc
jo
imul
lahf
mov
sub
out
in
dec
addr16
sub
xchg
add
popa
or
xchg
mov
loopne
ljmp
mov
popa
loope
insl
push
xor
dec
ljmp
xor
ds
push
xor
leave
or
pop
adcb
or
add
pusha
in
mov
popa
imul
fdivrl
add
jl
cmpsl
ja
push
pop
jl
jg
push
movb
enter
xor
ret
push
leave
outsl
xor
or
aas
fs
sbb
leave
xchg
out
add
fimuls
rol
cmpsb
lds
inc
enter
and
push
pop
ret
sbb
arpl
add
add
cmp
mov
lret
fldenv
gs
bound
push
jl
jmp
sub
insb
repz
jno
fcoml
out
stos
nop
push
mov
out
lock
fs
in
mov
popf
int3
sahf
mov
enter
and
xchg
imul
mov
popa
mov
sub
jp
cmpsl
inc
lock
sarb
mov
aad
adc
inc
dec
dec
and
or
inc
inc
fstl
adc
imulb
lods
mov
in
je
inc
pusha
ss
out
int3
and
test
fistpll
mov
pushf
lcall
lock
in
and
jae
je
or
stc
push
mov
xchg
mov
ljmp
sbb
mov
rorb
jge
push
imul
mov
pop
pop
push
mov
push
and
sub
sbb
jbe
pop
out
sub
add
outsb
mov
jg
xor
pop
cmpsl
dec
inc
xor
out
cmp
mov
sub
jno
std
push
loope
popa
rcl
pop
out
ret
in
pop
cmp
or
into
rclb
dec
shrb
sub
iret
or
xor
dec
mov
push
neg
imul
lods
adc
xchg
cmpsb
xchg
int
xchg
add
jge
cmp
inc
sbb
push
xchg
cmpsb
dec
shlb
popf
sbb
mov
xchg
xchg
mov
dec
inc
orb
mov
dec
sbb
leave
mov
repnz
shrl
xchg
mov
aam
sub
pop
int
jp
push
add
js
mov
cmpsl
mov
pop
cmp
xchg
jae
xchg
xchg
adc
pop
ljmp
shrl
mov
mov
xor
loop
mov
rcr
aas
and
dec
leave
jo
aad
arpl
lds
jmp
inc
imulb
push
or
daa
popl
out
ss
xchg
and
sbb
jns
cld
sti
add
outsl
bound
push
fs
pop
mov
cltd
rcll
push
or
pop
sub
imul
scas
xchg
sbb
shl
mov
ds
sub
les
xor
jmp
dec
imul
push
nop
out
stos
add
mov
jmp
decl
aam
push
sbb
test
adc
cmpsl
sahf
xchg
stc
cs
sub
adc
movsl
fdivl
sbb
mov
pusha
ret
faddl
mov
lea
pop
fwait
incb
icebp
pop
cwtl
xchg
out
int
mov
inc
xor
sub
cmovl
push
clc
push
mov
call
xor
xor
into
push
test
rcrb
dec
mov
test
inc
pop
sub
mov
pop
ret
dec
xor
push
add
ret
add
mov
orl
shrl
xor
test
fimull
xchg
or
addr16
mov
sbbl
jnp
inc
sbb
jmp
mov
push
fs
lods
mov
sub
imulb
into
inc
lods
adc
negl
lea
xor
xchg
decl
mov
cmp
pop
jb
cli
mov
loope
xchg
cmp
mov
jns
scas
shll
pop
cmp
andb
sbbl
les
add
arpl
insl
xor
les
mov
dec
popf
mov
lds
sub
pop
sub
std
mov
mov
mov
stos
dec
pop
lods
mov
sbb
test
insl
mov
lret
fdivl
rorb
inc
xchg
mov
push
cmp
add
push
fists
fsubs
mov
out
xchg
lods
jns
sbb
out
mov
mov
cmc
inc
out
movl
das
outsl
dec
lcall
fwait
repz
mov
xacquire
jb
sahf
pop
jbe
or
pop
out
outsb
pop
mov
push
jg
std
adc
add
orb
jo
shl
scas
aam
push
out
jns
popf
add
loope
int3
sbb
sbb
inc
or
inc
sbb
add
pop
aad
in
mov
inc
mov
nop
jbe
jl
lods
vprotb
out
jecxz
xor
mov
sub
lret
xchg
es
xor
jbe
pop
jae
sarl
mov
jmp
or
push
xchg
addr16
inc
hlt
mull
mov
dec
cld
fwait
mov
in
cmpsb
sbb
jge
popa
jge
and
test
popa
inc
sub
and
aas
leave
adc
lock
and
in
hlt
es
lea
or
movsb
mov
or
mov
add
push
sbb
out
mov
arpl
getsec
loop
cli
repz
dec
orl
sub
inc
mov
push
outsl
loopne
add
xlat
sbb
add
sub
lock
mov
jecxz
bound
in
inc
cld
push
push
cmp
or
test
loopne
lret
pop
xor
shrl
mov
and
shll
jl
sub
and
mov
aaa
or
lcall
and
adc
iret
faddl
repnz
stc
out
mov
loopne
sbb
ret
in
inc
cmp
mov
lds
inc
cmp
bnd
shlb
pushf
mov
sbb
movsl
mov
insb
scas
loopne
adc
stos
outsl
inc
pop
push
push
orl
int
jmp
jl
imul
jnp
test
lret
in
mov
jmp
sub
and
shrl
sbb
fcomps
sahf
cmpsb
mov
jne
jmp
push
mov
mov
clc
je
mov
sbb
xor
loope
fwait
js
addl
idivl
mov
dec
mov
add
test
dec
in
push
sub
and
fnstsw
jge
mov
inc
jae
mov
jns
xor
inc
xor
dec
popa
sub
push
adc
inc
psubusb
out
out
add
shrl
adcl
ss
fxch
out
jp
loopne
out
jo
aad
and
lret
push
jecxz
mov
loope
or
movsb
stos
out
fcmovnb
adc
jnp
cmp
lock
mov
fsubrl
outsl
mov
add
push
mov
mov
loope
push
mov
es
loope
out
mov
inc
call
mov
mov
mov
jne
mov
out
lret
lret
adc
mov
jl
mov
mov
push
js
in
and
loope
insl
gs
int
or
out
xor
push
enter
pusha
and
mov
adc
in
add
add
fdivrl
jecxz
fidivrs
clc
cmpsb
pushf
adc
je
outsl
std
or
into
or
jb
je
pop
jecxz
xchg
jb
xchg
mov
pop
inc
je
xor
sbb
xchg
test
jbe
cmp
dec
push
es
clc
std
fbstp
xor
enter
loop
jle
pop
test
jnp
leave
pop
clc
mov
iret
cmc
dec
gs
aam
push
sbb
fnstenv
gs
cltd
cmp
adc
push
dec
jmp
sub
aad
inc
push
adc
rclb
je
fcompl
add
pop
push
test
cmp
fdivrs
andb
insl
insb
jne
js
sub
or
or
or
jbe
nop
out
cmp
or
ljmp
int3
xchg
add
fdivrs
lods
scas
xchg
or
pop
mov
push
add
loopne
and
push
or
insl
push
fidivl
negl
and
and
mov
mov
in
push
iret
xchg
dec
bound
lahf
mov
mov
sti
pop
add
mov
popf
js
loop
and
int3
mov
push
pop
or
add
ret
jnp
lret
sbb
fwait
rcl
pushf
cmp
enter
aam
cmp
imul
jns
xor
out
icebp
je
movsl
sbb
pop
shlb
xchg
mov
push
xor
lds
add
push
mov
insb
xor
mov
cmp
xor
mov
xchg
clc
and
push
mov
imul
lods
mull
aas
cltd
adc
aas
jecxz
inc
push
mov
xlat
cmpsb
aaa
jle
ljmp
clc
sub
fwait
lret
jmp
test
mov
call
decb
prefetchwt1
cltd
stos
popa
cwtl
cmc
sub
loope
mov
sbb
test
push
sbb
ret
adc
insb
lret
fldl
in
int3
and
insl
fs
push
xchg
sti
jo
push
xchg
xchg
loop
push
push
daa
and
out
pusha
jnp
pop
ljmp
xchg
push
test
or
push
xchg
pop
daa
stc
popa
popf
jo
cmp
pushf
or
ds
sub
push
pop
dec
pop
loope
cltd
inc
sub
in
push
in
test
cmp
push
push
jge
sbbl
pop
rclb
xor
mov
mov
jne
cmc
out
sbb
popf
dec
add
cwtl
ret
xor
sbb
jp
std
lret
cmp
sub
add
sub
xchg
or
fwait
jecxz,pn
test
loopne
jae
cmp
push
cmpsl
jns
push
push
xchg
xor
sbb
mov
jbe
jne
mov
mov
sarb
and
push
or
mov
mov
std
mov
xor
cmp
fildl
inc
pushf
sbb
add
and
xor
mov
shll
push
pop
sub
sub
sbb
js
sub
or
sub
pop
outsl
packuswb
and
xchg
sbb
fbld
sbb
lea
movsl
daa
in
dec
cmp
jle
pop
notl
and
or
mov
or
in
mov
scas
inc
repnz
je
xchg
out
inc
loop
fwait
mov
out
inc
movsl
int3
pushf
inc
pop
xchg
mov
ret
outsl
cmpsl
adc
cmp
jae
mov
and
fldcw
arpl
aam
adc
sub
push
push
push
nop
mov
push
test
or
push
mov
add
aaa
push
test
in
mov
jno
ret
negl
popa
or
push
dec
adc
stos
mov
fbstp
and
jo
push
dec
sahf
cmp
push
into
jle
inc
mov
imul
or
xchg
mov
adc
cmp
jmp
inc
or
fisttpll
jae
sbb
divb
pop
fwait
adc
arpl
ret
cmp
sbb
cmpsl
inc
sub
mov
or
xor
pop
mov
cltd
stos
pop
and
jo
filds
push
repz
mov
adc
in
ljmp
sub
icebp
out
lahf
div
push
cmp
push
mov
scas
and
lods
mov
pop
and
cltd
pop
lock
mov
inc
xchg
cmp
lret
std
mov
jmp
adc
jp
pop
fiaddl
sub
lcall
test
lret
adc
jns
jle
sbb
jl
jge
or
into
movsl
lret
icebp
fprem
outsb
dec
push
clc
add
sub
adc
mov
cmp
insb
xchg
movsl
fists
pop
out
nop
mov
pop
iret
insl
repnz
dec
adc
fisubrs
repnz
push
imul
cmp
sub
add
movsl
sahf
mov
shr
iret
cmpb
cltd
mov
loope
cmp
stc
lcall
xlat
testl
inc
inc
lret
loope
aaa
testl
out
shrb
adc
les
arpl
inc
ja
push
sti
out
leave
pop
xor
outsb
aam
mov
jge
adc
and
sub
xchg
mov
lods
leave
mov
jp
xchg
fmul
lret
cmp
pop
mov
jp
dec
jne
dec
jb
lds
cli
mov
or
scas
stc
loopne
stc
dec
lea
xor
shr
mov
lods
mov
ss
gs
mov
dec
mov
lcall
pusha
rcll
scas
sub
mov
mov
lods
sub
testl
call
xor
sub
xchg
jns
sub
mov
ss
adc
mov
push
arpl
pusha
jmp
adc
mov
cmp
out
xor
aas
call
cltd
xor
mov
jp
xor
sahf
pop
jle
push
xchg
lock
push
imull
lods
leave
ret
xor
add
push
leave
push
dec
or
ret
mov
insl
movsb
push
popl
inc
mov
dec
xchg
jg
imul
push
fwait
rcrb
cli
inc
cmp
inc
mov
lock
pop
jmp
xchg
ss
adc
std
sbb
jbe
mov
jmp
lahf
push
pop
ds
mov
in
jno
lods
xor
ss
pop
sub
or
jmp
add
ret
int
sub
xchg
shlb
enter
aaa
jns
bound
in
lock
jns
pushf
inc
mov
and
test
cmc
push
xchg
xor
xor
cwtl
ljmp
adc
loop
xor
xor
xchg
push
stos
jns
inc
cmp
dec
push
scas
adc
repnz
loopne
inc
sub
jae
jp
adc
jge
sbb
movsl
cmpsl
stos
mov
cmp
jo
jne
sub
dec
movlps
add
mov
leave
mov
jno
in
shrl
lret
fisubrl
stos
sub
lahf
out
cwtl
icebp
mov
addb
testl
adc
iret
push
sbb
mov
call
pcmpgtd
data16
cmc
and
push
in
lds
sbb
imul
sub
mov
jno
mov
mov
mov
je
ds
pusha
pop
pop
std
mov
stc
fisubs
and
xchg
inc
adc
loopne
add
jbe
mov
mov
dec
mulb
push
int
mov
mov
lods
mov
dec
std
das
and
in
push
xchg
cmp
mov
xor
mov
aaa
std
xchg
sbb
push
xorb
pop
pop
or
stc
cmpsl
mov
daa
push
mov
jmp
mov
dec
add
mov
cli
lock
notl
mov
sbb
mov
sahf
xor
pop
in
adc
out
sub
pusha
jbe
lret
jge
push
pop
sbb
push
xor
mov
jae
loopne
jns
stos
pop
cmp
test
xlat
xchg
loope
les
lea
pop
jl
pop
xchg
jae
enter
adc
pusha
inc
loop
loope
ret
cltd
int3
in
mov
xchg
dec
je
mov
pop
xor
orb
push
push
mov
dec
es
pop
jb
xor
jmp
dec
xchg
in
mov
mov
cmp
js
xchg
hlt
std
cmp
xchg
dec
jno
push
add
xchg
movl
pop
mov
sbb
xchg
dec
sbb
mov
bound
pop
gs
aad
push
ljmp
mov
hlt
outsl
jo
inc
rol
adc
cmp
pop
and
adc
movsl
dec
mov
roll
inc
sbb
sbb
adc
outsb
mov
loop
inc
mov
xor
pop
mov
scas
clc
add
dec
leave
mov
sbb
les
inc
clc
jl
loop
pop
inc
xchg
lret
mov
jo,pn
adc
loopne
iret
test
lods
daa
mov
sub
push
loop
mov
pop
in
fs
jne
sbb
test
and
xlat
jb
cmp
jbe
adc
repnz
fucomp
cmpsb
pop
mov
xchg
or
lods
and
clc
adc
flds
lahf
sub
lods
pop
fiadds
arpl
daa
popf
out
push
rolb
cltd
xchg
loope
testl
outsb
repnz
cmp
mov
ljmp
fsubl
jnp
je
out
pop
imul
sahf
fsubrl
andb
jl
lea
xlat
pop
push
popf
sub
rol
arpl
sbb
or
pop
mov
mov
sbb
mov
dec
repnz
mov
inc
fs
sub
add
adc
push
and
mov
std
lret
lds
dec
pop
fmuls
sbb
mov
fstpl
cs
push
rol
in
je
cmpsl
or
sbb
pop
sbb
inc
mov
and
cmpsl
sub
fcompp
adc
xchg
das
xlat
addl
cmpsb
in
loop
leave
xchg
jne
rorl
push
pop
cwtl
cs
sbb
icebp
fsubrl
icebp
fst
dec
pop
dec
or
fdivrs
iret
decb
and
push
dec
mov
popf
aam
loop
fildl
adc
xchg
popa
imul
inc
mov
aas
iret
dec
out
in
addr16
pop
sub
vlddqu
mov
ss
imul
data16
lret
scas
int3
inc
or
mov
or
add
jo
dec
cmp
xchg
jne
xchg
or
push
xor
sub
push
and
loopw
jge
cmp
pop
pop
in
push
test
pop
sbb
test
xor
cmp
mov
fs
in
xchg
add
cltd
mov
roll
cwtl
jo
lods
or
push
sub
shll
jmp
jmp
jne
push
xor
popf
push
mov
rorl
andl
mov
mov
add
out
iret
ret
inc
cwtl
xor
aas
inc
sarb
dec
arpl
pop
sbb
nop
jo
subb
pop
jle
andb
ljmp
scas
lea
in
out
fldt
mov
out
jmp
cmp
cmp
jbe
dec
scas
shll
mov
insl
test
lret
popa
imul
aaa
mov
add
imul
mov
sbb
enter
sub
mov
mov
push
shll
cmp
pushf
enter
xchg
mov
aas
shrb
fcomps
mov
push
add
xchg
or
lock
mov
imul
fwait
dec
adc
cld
test
jbe
inc
clc
les
push
enter
jmp
cmc
xchg
mov
sarl
mov
add
inc
es
or
push
cltd
xchg
adc
ljmp
cld
mov
in
sub
xor
mov
gs
mov
fistl
add
lcall
jbe
add
pop
mov
xchg
fisubs
inc
mov
fcoml
mov
cmp
cmp
shll
push
mov
lcall
adc
dec
and
add
mov
test
pop
cmp
addl
cmp
pop
cld
xor
js
mov
mov
hlt
movsl
cld
pop
nop
stos
repz
ret
repz
fxch
xor
add
mov
jb
xlat
xchg
in
sub
ljmp
repnz
sti
lods
repnz
inc
lods
rcrl
inc
inc
popa
or
dec
mov
in
fcomps
jo
jmp
xchg
add
sbb
xor
movsb
gs
repnz
add
cli
cmpsl
test
testl
inc
outsl
mov
test
icebp
testb
sub
jo
in
test
inc
loopne
das
adc
test
outsl
push
sub
cmp
jmp
dec
std
mov
outsl
mov
xor
pop
outsb
arpl
sbb
shll
sub
jne
jb
cmp
mov
mov
jle
insb
cmp
fcompl
aaa
mov
imul
jnp
push
xor
dec
loopne
push
movsl
imul
pop
or
ret
mov
daa
pushl
mov
or
push
or
popa
add
push
xlat
push
push
fisubs
loop
test
fs
push
movsl
lea
pop
and
xchg
test
pusha
xor
dec
jg
movsb
negl
fsubs
mov
push
dec
pop
into
mov
cmp
xchg
lcall
pushf
out
mov
data16
rcl
jg
and
dec
mov
in
aam
out
push
js
loope
push
pop
cld
mov
sbb
lods
pop
cli
sub
mov
pop
jmp
imul
dec
mov
dec
and
orl
aad
js
js
push
cmc
ss
in
sarl
adc
dec
mov
pop
jo
mov
cmp
ds
sub
scas
call
inc
mov
mov
jl
les
mov
xchg
scas
das
fs
xchg
iret
mov
dec
cmp
lret
rcrb
iret
jecxz
data16
mov
xchg
or
sub
iret
shlb
jb
mov
mov
and
fimuls
idivl
mov
pop
or
push
data16
fnsave
push
clc
inc
mov
xlat
adcl
and
or
test
ror
and
adc
cmpsl
in
mov
ds
jb
inc
adc
pop
xchg
or
jb
jbe
out
int
or
and
data16
inc
sub
mov
mov
nop
out
pop
and
fs
loop
jo
ljmp
jp
jg
pop
andb
adc
cmpsb
adc
dec
adc
mov
adc
mov
es
xchg
popf
adc
xchg
test
adc
jno
dec
sub
cld
jmp
pusha
data16
fldt
add
sub
sahf
pop
dec
cs
les
pop
mov
andb
or
xchg
call
lock
pmaxub
adc
or
push
mov
push
push
and
lods
filds
pop
divb
add
jmp
sub
push
lret
dec
mov
xor
rolb
andl
push
call
aas
repz
add
fscale
les
mov
cmp
idiv
xchg
fs
nop
rolb
and
stc
pop
cmp
push
mov
movsl
adc
iret
lea
mov
popa
lcall
fs
ljmp
jecxz
or
mov
push
and
push
cmp
dec
fwait
mov
fsubr
jo
cmp
lods
inc
je
lods
xchg
aam
icebp
mov
es
int3
or
in
dec
push
je
rol
push
mov
xchg
addb
negb
inc
repz
pop
or
or
dec
xor
sbb
jne
mov
sub
add
mov
ds
dec
adc
loop
dec
xorb
mov
mov
push
cmp
nop
xchg
out
int
cmp
test
icebp
push
xchg
test
add
push
aam
popa
mov
or
push
psrlw
xlat
sub
inc
lds
xor
cmp
in
add
add
or
jbe
popf
pop
jns
test
adc
cmp
xlat
add
addr16
lods
lock
add
mov
aaa
imul
add
pop
mov
jle
add
and
adc
mov
mov
mov
insb
adc
add
or
xchg
loop
nop
movsl
xlat
xchg
lret
jns
xchg
jo
fldt
shr
sbb
popa
imul
sub
or
arpl
fdivrl
mov
jne
mov
cmpsb
sbb
xor
sub
lods
mov
pop
sbb
mov
dec
test
pop
les
addb
lcall
out
ljmp
inc
inc
xchg
jbe
je
pop
inc
fidivl
push
dec
decl
mov
call
ds
icebp
sub
add
scas
cld
ficoms
test
out
mov
fbstp
jno
pause
cmpsl
pop
enter
sahf
out
test
sti
mov
retw
jmp
adc
pop
xchg
jno
lret
sub
outsl
repz
bound
dec
scas
loop
dec
or
push
shrl
inc
push
movsl
enter
add
pushf
gs
pop
lret
push
jge
test
push
ds
js
mov
pushf
or
dec
push
psubq
ds
gs
mov
pop
jl
lar
ror
push
out
mov
xor
adc
sbb
jns
fwait
popw
add
inc
clc
jbe
leave
out
xchg
add
leave
ja
dec
aam
or
iret
neg
sbb
jle
pop
jge
cmp
ret
loopne
gs
addl
lahf
inc
sbb
pusha
pop
fists
das
pop
fstp
mov
jle
fwait
loop
sbb
lea
xor
sti
pop
into
sti
fs
mov
xor
inc
pushf
mov
inc
popf
cwtl
cmpb
jbe
pusha
inc
enter
data16
sbbb
pushl
loopew
cltd
xor
sub
addl
daa
pusha
cld
xor
cmp
clc
xchg
xorb
xchg
inc
cmpsl
jge
hlt
lods
ss
repnz
fdivs
data16
ret
mov
js
mov
lret
pop
push
testl
test
pop
hlt
push
pusha
jmp
and
push
push
out
jge
mull
outsb
bound
mov
sbb
push
cmp
out
fstps
inc
out
adc
ret
int
jns
jg
sbb
sbb
adc
aaa
fsubr
cltd
xchg
inc
mov
and
cmp
mov
cld
les
add
xchg
cli
lock
mov
add
in
push
cmp
sub
xor
inc
loope
dec
mov
fsub
fdivr
jnp
mov
adc
iret
adc
cmc
pushf
mov
and
stc
mov
cwtl
rclb
xchg
out
hlt
imul
lret
adc
rclb
rclb
lahf
push
add
cmc
adc
enter
or
push
or
xor
int
mov
sbbl
pop
jbe
ss
scas
into
jns
xchg
jl
and
inc
pop
cwtl
or
int3
adc
sti
mov
repz
sub
push
icebp
mov
inc
outsl
cmc
cli
mov
incb
loop
jbe
test
sbb
sub
popf
mov
mov
loope
and
ja
pop
push
push
pop
sub
scas
sbb
addl
pop
and
ds
mov
pop
pop
adc
std
mov
imul
mov
shr
inc
daa
push
push
bound
mov
out
jno
ror
rcrl
call
dec
les
loope
clc
mov
mov
inc
jbe
leave
or
xchg
int3
call
inc
ret
aas
dec
ljmp
fstps
ss
dec
jge
fldt
in
sarb
sbb
jo
lock
mov
jg
jnp
fsubrs
pusha
stos
or
push
inc
sbb
out
inc
sbb
aaa
int
test
add
or
jo
xchg
and
mov
int
out
sbb
mov
push
aad
sub
pop
jg
cmc
addb
out
fisttpll
xor
popa
cmp
aas
xchg
add
cmp
sar
adc
out
mov
lret
inc
dec
fldt
inc
push
jmp
stc
sub
mov
loopne
fs
in
fsubl
std
lcall
xor
pop
pop
jae
push
mov
cwtl
sbb
scas
dec
sbb
js
jb
pop
sub
xchg
inc
clc
sub
jno
stos
or
lret
dec
mov
pop
lcall
nop
xchg
pushf
loop
push
int3
xor
ret
sbb
inc
add
dec
popl
xlat
adc
push
repnz
mov
scas
loopne
sub
sbb
nop
mov
fsub
lods
xchg
jmp
push
std
mov
xchg
aas
std
cmp
add
cltd
sarl
fsubrl
cmp
push
jb
adc
repnz
sbb
ret
mov
mov
fidivs
xor
fsubl
imulb
sbb
pop
clc
aam
enter
pop
pop
into
or
in
adc
sbb
mov
lahf
lcall
filds
cmp
sbb
adc
sbb
inc
inc
shrl
pop
xchg
aaa
jb
mov
fidivs
and
andb
sub
push
aam
lret
push
sub
add
jecxz
cld
jecxz
push
mov
bound
pop
push
popa
aaa
jl
out
and
xchg
sub
movsb
decl
and
lea
add
in
push
sub
push
mov
out
xorl
test
andl
sub
jbe
pop
mov
mov
or
dec
mov
mov
hlt
das
sbb
inc
mov
mov
ds
sbb
push
xchg
push
adc
and
mov
jl
in
lret
mov
and
jl
scas
adc
lock
pop
jae
xor
pop
sub
mov
pop
inc
mov
xchg
adc
jp
cmc
popf
pop
addl
cmp
dec
js
mov
and
and
xlat
lods
test
clc
dec
repnz
sbb
out
mov
add
call
adc
gs
shl
mov
popf
dec
insb
mov
or
mov
ljmp
scas
stos
cmpsb
xlat
test
cltd
lret
les
ljmp
arpl
mov
ret
push
mov
cmp
dec
les
shr
xchg
out
jmp
loop
ss
inc
scas
fidivs
pop
repz
mov
fdivs
push
fiaddl
ret
ja
scas
repnz
add
pusha
repz
arpl
or
inc
movb
lods
adc
sti
gs
or
jnp
rolb
mov
mov
stc
lret
xchg
mov
inc
and
xchg
addr16
xor
push
cmpsl
outsb
dec
and
popf
gs
sbb
mov
clc
fs
and
push
xchg
mov
lds
int3
dec
dec
adcb
push
jp
jb
pop
dec
repnz
mov
push
sub
add
loope
loop
lods
push
cmpsl
xor
mov
stos
in
sbb
repz
mov
cmp
and
loop
xor
scas
ror
sbb
lahf
rolb
pop
outsl
jo
mov
scas
adc
jp
loop
inc
inc
idiv
shrl
fcomps
sti
movsl
lcall
mov
out
popf
js
mov
sbb
pop
aam
push
or
mov
test
jo
testl
clc
int3
sub
lods
and
pusha
sbb
dec
mov
mov
sbb
mov
in
and
imulb
dec
cwtl
inc
rcrb
mov
inc
pop
push
shll
push
jecxz
inc
out
inc
fiaddl
mov
add
mov
sub
mov
cmpsl
xchg
xchg
jb
nop
lahf
mov
and
and
stos
sbb
nop
xchg
addb
hlt
lahf
inc
outsl
xchg
fs
sub
ja
xchg
cmc
pop
add
cmp
mov
testl
icebp
push
mov
je
int
push
dec
into
push
and
push
and
lods
ljmp
es
xchg
sub
add
ja
dec
test
dec
cltd
pop
adc
xchg
test
and
insb
jnp
fldenv
add
push
adc
negb
lret
xchg
and
je
fstps
push
enter
sbb
orb
in
sub
movsl
cli
rclb
mov
mov
fdivs
scas
cli
imul
in
hlt
negb
sub
push
notb
scas
into
jo
fldl
rorl
aas
mov
mov
xchg
mov
mov
pop
cmp
jmp
in
call
aas
into
stc
test
and
popa
fdivrs
mov
inc
sbb
dec
js
insb
stc
sub
cli
lock
mov
mov
xorl
jno
jecxz
pop
mov
pop
add
xchg
popf
pop
jne
lds
lea
xchg
test
xchg
and
hlt
mov
lcall
mov
sbb
xchg
push
dec
test
pop
cmc
fsubrl
insb
fimull
dec
or
pusha
xchg
jns
sbb
rcrl
jp
push
adc
mov
sub
dec
push
mulb
jnp
mov
jne
mov
adc
std
and
add
or
add
jmp
dec
xorb
ljmp
cwtl
cmpsb
sub
es
jns
adc
sbb
repz
mov
rep
mov
inc
filds
pop
jnp
push
je
js
lods
and
cwtl
orb
and
std
arpl
inc
push
lret
scas
mov
sarl
adc
mov
inc
and
dec
lcall
clc
sub
add
dec
imull
incb
aad
pop
nop
sub
or
sbb
jecxz
hlt
into
mov
jp
pushl
fiaddl
insb
inc
lahf
jo
mov
sbb
divl
mov
xor
les
fsubrl
inc
cwtl
mov
dec
sbb
out
leave
cmp
loopne
out
popf
xor
and
icebp
test
in
in
inc
int3
adc
add
push
jnp
cmp
push
xchg
roll
dec
rorl
mov
inc
dec
mov
mov
in
call
loopne
jp
add
mov
push
cmp
push
cmp
mov
xor
inc
hlt
mov
leave
dec
sbb
hlt
sarl
jle
xchg
loop
jmp
test
call
repnz
push
mov
aam
mov
movsb
xchg
shll
out
inc
pop
hlt
popf
mov
test
mov
sahf
xchg
push
cmpsl
int3
xorb
jns
mov
pop
repz
mov
cli
rclb
push
leave
into
dec
push
push
jle
xchg
fcoml
push
or
lret
lock
xor
push
and
dec
movsb
push
and
sahf
jne
jecxz
inc
jno
jne
adcb
sub
scas
gs
inc
xor
pop
add
stos
add
scas
es
fidivrs
orb
and
cmc
inc
mov
sub
loop
push
icebp
mov
loope
lea
test
in
lods
xchg
dec
mov
movb
stc
jae
divl
jecxz
jmp
loop
das
jmp
rep
push
out
dec
sub
sbb
jle
xchg
loopne
dec
into
inc
insl
dec
and
loopne
and
divb
stc
orl
stos
xor
jo
sbb
fcomps
push
cmp
push
push
pop
frstor
sub
cmp
lock
fmull
sub
sub
add
inc
sub
xchg
popf
ss
xchg
mov
adc
mov
out
push
sub
faddp
cwtl
add
bound
jl
jbe
mov
add
dec
jo
sti
inc
out
jecxz
jle
fnstenv
adc
push
aad
mov
jl
scas
jp
pop
icebp
jg
adc
insl
pop
sub
xchg
add
cmovg
add
jo
inc
test
jno
popf
push
in
dec
mov
pop
pop
push
rcl
iret
mov
pop
cmp
pop
cmp
jb
daa
mov
mov
or
cmp
mov
dec
lods
lret
push
insb
cs
cmp
shl
pusha
jne
movsl
icebp
sbb
xor
inc
lcall
jb
push
and
inc
adc
aaa
sbb
rcrb
sub
add
cmp
mov
xchg
push
cli
dec
std
inc
or
addr16
add
jmp
incb
leave
out
push
mov
jle
lds
pop
sub
jge
rorb
jecxz
les
sub
repnz
sub
scas
mov
cmpsl
data16
cmpsl
jnp
adc
sahf
xchg
iret
sbb
movsl
mov
lods
add
mov
mov
outsl
ds
loopne
cmp
aas
jp
jbe
lea
add
mov
out
pop
xor
repnz
push
xchg
mov
jne
add
or
in
shrb
sbb
int3
jno
rcrl
adc
mov
lcall
shll
daa
fucomp
sub
mov
lods
mov
loopne
fisubs
jg
jne
sub
icebp
mov
jl
vmovdqa
inc
xchg
xchg
jmp
pop
aad
or
clc
or
lea
and
and
mov
or
mov
xor
fsubrl
mov
xor
cmp
fwait
imul
mov
imul
push
push
mov
and
push
adc
sub
gs
idiv
aas
nop
stc
cmp
or
sarl
xchg
call
outsl
jno
push
and
xor
and
addl
and
add
xchg
inc
pusha
inc
cld
mov
mov
xchg
inc
scas
adc
stos
mov
xlat
pop
jmp
sarl
ljmp
ja
mov
or
sub
ss
pop
jecxz
cmpsl
fisubs
out
mov
out
pop
sbb
dec
and
jae
sub
jmp
jle
xchg
fsubl
movsl
loope
xchg
sti
sub
push
ljmp
and
call
mov
pop
push
pop
test
dec
inc
in
outsl
and
inc
subb
lahf
sub
adcl
mov
into
sahf
outsb
cmp
xor
testb
dec
insl
mov
and
aaa
dec
mov
aaa
sub
xchg
mov
xchg
std
pushf
jo
sub
jns
mov
mov
test
jg
add
and
mov
jmp
push
jmp
mov
movsb
dec
into
jo
filds
push
push
fs
pusha
mov
inc
add
mov
pop
mov
jne
mov
gs
insb
jns
sub
aam
fxch
test
clc
adc
notb
pusha
sub
rol
xchg
and
xchg
xchg
mov
test
cwtl
scas
ret
or
sbb
adc
xchg
jp
stos
lret
into
inc
fidivrs
sbb
jns
adc
mov
js
lods
push
insl
fwait
scas
and
mov
sub
pushf
adc
inc
xor
out
clc
sarb
jl
and
xor
insb
rorl
xchg
in
js
sbbl
fisttpl
and
out
in
pop
js
les
or
pop
outsb
shll
repz
ja
shrb
add
add
into
movsl
outsl
jo
sbb
inc
test
jecxz
xor
lock
add
xchg
jmp
pushf
das
stos
jge
adc
call
xchg
push
ret
leavew
jp
fs
das
adc
out
mov
xchg
es
mov
sub
in
jp
ret
ror
mov
daa
pusha
xor
addl
push
pop
inc
pusha
jno
ds
push
push
sbb
arpl
push
jae
jmp
inc
inc
xchg
pop
pop
insb
sbbb
adc
test
call
pushf
sub
and
mov
adc
pop
sbb
popa
inc
cmp
mov
sbb
mov
dec
dec
pause
addl
and
dec
adc
push
dec
xor
xor
jo
dec
daa
es
lret
push
in
cmp
mov
add
es
push
push
lods
or
xor
lock
jl
call
push
lods
stos
sbb
inc
out
add
test
mov
fldcw
pop
es
inc
jne
daa
jae
mov
sub
outsl
pop
sahf
push
mov
mov
or
push
int3
dec
cli
mov
push
jl
gs
jno
jo
repnz
inc
push
cs
xchg
mov
jecxz
jecxz
mov
cltd
and
mov
jge
add
lcall
lock
rcll
push
addl
mov
pop
jno
push
and
rclb
mov
mov
xor
jne
add
push
adc
push
adc
dec
pushf
pop
cmpsl
mov
push
fwait
pop
fidivl
mov
loope
mov
addb
mov
decl
mov
std
pop
cmc
mov
rcl
adc
xlat
cld
dec
jno
arpl
inc
repz
push
dec
jl
adc
in
pop
push
cwtl
pushf
fiaddl
hlt
and
inc
je
stos
mov
in
jecxz
imul
lret
das
push
ret
lock
stos
adc
push
jecxz
jbe
iret
imul
xchg
shr
ret
cmp
movsl
shl
daa
mov
std
sti
jo
aaa
mov
icebp
in
jo
into
mov
stc
pop
dec
repnz
push
insl
pop
sti
adc
lds
jp
je
arpl
push
adc
cmp
xchg
loop
xchg
test
inc
xchg
in
mov
cltd
popa
subb
pop
lods
pusha
mov
sub
pop
push
icebp
pusha
mov
push
mov
lret
adc
je
pop
std
xor
mov
adc
ds
in
and
aas
int
mov
sub
and
jns
cwtl
pop
xchg
jno
popf
mov
inc
or
mov
push
and
pusha
and
or
mov
dec
pop
out
lock
arpl
and
xchg
sbb
test
std
pop
dec
fldpi
push
xchg
jl
aam
cs
push
push
pop
inc
mov
jecxz
sub
enter
cs
les
mov
add
stos
inc
sub
sar
insl
push
mov
xchg
movsb
test
xchg
inc
dec
sub
dec
fldcw
xchg
sarl
insb
adc
ret
rorl
incb
js
mov
sbbb
pop
and
stos
push
jecxz
mov
aaa
pop
mov
mov
leave
mov
cmpsl
xor
dec
cmp
jb
inc
cmp
cmp
or
push
xchg
test
add
jno
fdiv
fildl
cli
cmp
pop
cmp
cwtl
ret
clc
imul
imulb
xchg
loope
cmp
bound
mov
stos
sbb
lds
mov
xchg
out
xor
into
aam
aas
push
pop
push
cli
push
lods
cmpsl
outsl
lea
add
cmpb
insb
mov
dec
lods
mov
mov
add
popa
lods
jbe
add
xchg
dec
movsb
inc
idivl
popf
sbb
mov
call
mov
and
inc
dec
xchg
push
or
and
push
dec
sar
jle
ds
ss
movsl
in
mov
mov
mov
mov
insl
cmp
jne
jnp
fwait
js
mov
cmc
sbbl
out
ret
in
add
and
pop
lea
test
mov
js
decl
aad
leave
out
out
push
jg
pop
cmpsb
sti
fldcw
cmp
into
cld
in
inc
and
movsl
rolb
jb
das
push
pop
rorl
dec
neg
imul
test
ljmp
inc
xchg
icebp
dec
out
jg
sarb
mov
add
ret
mov
lods
cmp
and
push
inc
xlat
aaa
mov
push
xchg
xchg
pop
addr16
pop
repz
jmp
hlt
movsb
cs
out
adc
mov
and
fidivrs
push
std
clc
les
in
outsb
jmp
dec
cmc
and
mov
lcall
je
mov
call
dec
jns
and
incl
mov
push
cli
call
cltd
fdivl
mov
push
sbb
and
mov
mov
imul
jmp
insb
and
sub
repz
adc
aam
outsl
aad
or
xchg
lds
mov
mov
cld
lret
sbb
out
sub
sbb
inc
xchg
push
out
dec
adc
inc
mov
sti
outsb
jne
push
cmp
dec
fildl
into
push
in
enter
arpl
jp
pop
ret
pop
test
test
loopne
loop
mov
xor
insb
daa
mov
imul
repnz
pop
outsl
inc
adc
int3
or
stc
rcr
mov
xchg
sti
testl
xchg
push
add
dec
shlb
pop
jo
stos
stos
js
gs
sbb
mov
inc
pushf
add
inc
push
sarl
std
or
xchg
cwtl
push
adc
mov
mov
and
mov
loop
fs
inc
movsl
mov
dec
arpl
cwtl
dec
je
sbb
or
sbb
roll
out
stos
cltd
add
jbe
stc
or
or
pushl
fstpt
adc
data16
xchg
mov
in
mov
sbb
fidivl
lds
adcb
rcrb
mov
cmp
dec
jnp
mov
adc
xchg
lret
lahf
shll
addb
xchg
and
push
aad
cs
loope
push
cmpsb
push
aaa
test
ret
add
test
sarb
pop
xchg
dec
dec
and
sbb
xchg
xor
cmp
cmp
dec
ljmp
ret
pop
scas
xor
fistpll
jg
xchg
xchg
cmp
std
xchg
mov
mov
or
ficompl
std
adc
sub
cs
push
mov
lods
jae
lahf
je
sbb
sbb
inc
dec
rorb
fsubr
fidivl
mov
out
cmp
lods
push
push
mov
lods
mov
add
sbb
jmp
fs
sub
mov
cli
xor
sbb
not
jo
scas
idivb
movsl
movsb
cltd
sbb
pop
cmp
cmp
subb
dec
jns
mov
push
je
rorb
push
fmuls
nop
and
les
notb
add
ja
xor
lods
mov
push
loopne
mov
lods
nop
fcmovbe
mov
jmp
stc
sbb
jmp
dec
sarb
jne
add
fwait
adc
fistpll
scas
test
jne
xchg
jg
mov
pop
mov
and
xor
loopne
push
stos
push
and
push
sbb
jbe
ds
cmp
jle
cwtl
lcall
fs
pop
fcmovnu
sarl
mov
cmp
and
loope
xchg
cmc
xlat
mov
mov
test
cmp
and
inc
ss
cmp
fisubrs
repz
mov
sbb
xchg
mov
popf
xchg
adc
jg
repnz
gs
jmp
push
aaa
bound
das
jns
imul
imul
inc
jae
dec
pop
fisttps
pushf
lds
aad
das
pop
mov
mov
aad
mov
sub
mov
inc
inc
mov
stos
inc
outsl
mov
andl
add
pop
pop
lods
stos
repz
das
ljmp
mov
mov
or
inc
jl
inc
ljmp
mov
pop
mov
xchg
in
lret
leave
test
popa
pop
or
test
outsl
addl
insl
xor
insl
inc
and
mov
adc
nop
outsl
dec
mov
dec
jae
adc
pop
divb
sahf
lcall
and
call
js
lds
and
xor
sub
mov
pop
and
xchg
clc
jae
cmp
icebp
add
push
push
mov
adc
loope
dec
scas
push
mov
xlat
sub
cs
push
ljmp
jno
cs
popf
cmp
bound
xor
dec
cs
mov
sbb
xchg
arpl
test
fidivl
and
and
push
and
shlb
push
xor
fsubr
mov
add
mov
push
cli
xor
sub
inc
int3
cmpsb
xchg
sbbl
push
arpl
dec
pop
adc
lcall
mov
mov
cltd
mov
push
push
inc
jl
adc
pop
xchg
mov
shrb
sbb
aas
jo
jae
cs
pop
cld
pushf
mov
add
mov
lock
xchg
js
xchg
or
pop
xchg
mov
cld
mov
leave
and
outsl
mov
mov
dec
xchg
test
roll
dec
scas
xchg
mov
popf
push
insl
test
into
push
push
and
dec
xchg
insl
pop
sub
xchg
popa
xchg
rcrb
aad
das
sbb
pop
mov
xchg
sub
inc
sahf
sub
daa
loope
cmp
xchg
mov
shll
pop
cmc
lcall
nop
rcrb
aaa
cmp
fimull
pop
sub
ja
loop
xor
insb
dec
or
in
add
adcl
push
mov
cmp
pop
sub
xchg
daa
cmp
aad
cli
xchg
add
and
ss
aad
mov
les
push
push
imul
push
cmp
pop
add
stos
and
out
rcrl
das
xchg
loopne
xchg
dec
arpl
mov
add
in
fwait
addr16
mov
flds
addr16
popf
and
or
push
or
jo
sub
dec
adc
or
xchg
cmp
fbld
push
mov
push
cmp
push
mov
and
out
fwait
imul
aam
cmpsl
xchg
or
or
insl
aas
lock
add
sub
add
ret
jne
movsl
pushf
pop
mov
mov
mov
mov
jno
leave
add
shll
movsb
cmp
sub
bound
xor
repnz
sbb
rcll
sub
jnp
dec
sub
rol
dec
cmp
or
mov
add
lock
scas
sub
sbb
sti
or
and
dec
bound
sub
jmp
mov
lea
out
mull
icebp
and
enter
or
mov
cmp
add
sahf
bound
fdivs
orl
scas
fnstenv
sbb
add
hlt
icebp
hlt
fildl
cmp
les
xchg
iret
es
dec
xor
in
subb
xchg
dec
in
push
or
hlt
mov
xchg
sbb
loopne
pusha
icebp
mov
in
lcall
cmp
xchg
lcall
xor
loopne
xlat
out
sbb
arpl
repnz
imul
xlat
push
xor
jne
mov
jne
jecxz
adc
and
jp
fcomip
insl
mov
clc
loopne
mov
hlt
mov
push
adc
mov
mov
shl
icebp
popf
or
sbb
popf
or
jp
jns
ds
shl
scas
fstpl
in
rcrb
xchg
loope
sbbb
xchg
pop
scas
sbb
push
inc
icebp
ja
shlb
and
push
je
es
cmp
sub
pop
pop
dec
push
mov
sbb
sahf
cs
and
pop
lret
lret
movsl
mov
scas
add
mov
add
pop
mov
lea
xchg
mov
mov
mov
jae
cld
ds
xchg
push
inc
and
xlat
add
fisubrs
mov
and
inc
pop
call
inc
jnp
fdivr
mov
mov
push
dec
mov
inc
aaa
or
pushf
adc
xlat
xor
loop
jmp
adc
adc
cmpsb
inc
popf
cmpsb
out
ljmp
dec
push
mov
ret
fsts
sub
add
pushf
sub
repz
xchg
push
call
jo
xchg
pop
mov
stos
outsb
scas
sub
outsb
jle
pop
or
call
pop
mov
add
push
fisubl
or
daa
or
dec
into
mov
mov
jp
sub
push
int
test
add
fmull
out
xchg
aad
movsl
cs
imulb
andb
movsl
fiadds
xchg
fdivp
ror
mov
jecxz
shl
aam
add
loop
jecxz
dec
inc
scas
push
bound
push
mov
sub
mov
lock
mov
call
lcall
or
inc
or
scas
push
pop
push
stos
mov
sbb
inc
or
call
test
and
push
mov
lret
jno
lea
lds
cld
popf
std
ret
cmp
sti
pop
adc
cli
dec
into
mov
cltd
or
scas
lea
mov
cs
sub
rcll
jl
in
ja
dec
mov
push
xor
xchg
xchg
scas
sub
and
xor
mov
test
fadds
out
mov
push
cmp
adc
int
xchg
jg
roll
push
mov
mov
xchg
cmp
push
sub
sub
mov
jecxz
sub
mov
fsubs
pop
shrl
or
ret
dec
cmpsb
mov
dec
stos
test
lds
ds
push
cmc
adc
lahf
je
mov
cwtl
sub
jmp
push
divl
adc
sub
pop
cmc
push
push
cmc
add
lret
mov
jbe
in
push
imul
mov
xchg
mov
pop
ja
and
and
mov
cmp
negb
inc
cmp
fwait
push
subb
ficoms
out
inc
bnd
add
aas
push
xchg
arpl
cwtl
test
dec
push
sahf
je
add
negl
push
sub
loopne,pn
insl
mov
mov
in
fwait
repz
lahf
push
aad
rolb
pop
xchg
bound
int
clc
xchg
jae
mov
jb
jbe
ss
in
cmp
aam
add
jmp
inc
test
rcrb
add
aas
inc
dec
push
lock
or
push
mov
adc
xchg
pop
mov
outsl
jnp
sysret
in
in
jb
lcall
loopne
not
or
xlat
stos
nop
bound
add
pop
cltd
jle
rorb
decb
jp
idivb
mov
call
push
or
aam
fistl
fs
inc
jae
xlat
repz
nop
cmp
push
xchg
push
jecxz
or
add
push
add
movl
mov
mov
push
push
mov
stos
shll
repnz
fwait
or
ds
jno
out
decb
sbb
lcall
cmp
shl
cmp
xchg
sbb
cmp
mov
mov
xor
lock
xlat
mov
or
xor
sub
and
fcomps
dec
std
cltd
lcallw
daa
jae
jecxz
testb
inc
int3
mov
push
xchg
or
dec
insl
pop
or
fistl
outsb
sub
fs
jns
push
inc
push
push
mov
icebp
xor
ret
dec
push
cli
mov
insb
inc
movsb
jnp
lods
call
mov
mov
jge
dec
cmpsb
push
sbb
out
or
or
in
in
popa
mov
mov
test
loope
push
mov
adc
shl
sar
adc
lret
rol
mov
aad
lahf
emms
loopne
aam
jg
pop
mov
movsl
mov
lret
push
pop
or
mov
jno
or
ret
es
sahf
lock
xor
and
nop
sbb
shr
push
lret
cli
sbb
jmp
scas
filds
and
js
les
movsb
mov
aas
sub
pop
dec
in
ret
mov
pop
pop
mov
in
inc
std
and
call
mov
call
xor
stos
sub
push
clc
adc
pop
lds
jp
rclb
cwtl
cmp
outsl
cmc
pusha
jge
mov
lods
push
in
mov
lods
pop
push
adc
or
mov
sub
inc
clc
cmp
jbe
sub
mov
std
xor
or
inc
sub
adc
xlat
pusha
sub
inc
mov
add
test
xchg
rcrb
iret
fwait
mov
xor
bound
imul
push
sti
lods
mov
in
enter
jp
je
test
test
testl
shlb
push
imul
mov
pop
mov
ja
lahf
mov
mov
lods
add
sub
dec
fisttpl
add
push
mov
inc
bound
sub
outsb
pop
sub
push
mov
pop
adc
pop
stos
push
and
ljmp
dec
test
lods
out
inc
or
dec
mull
xor
nop
mov
in
adc
ja
cmp
icebp
push
aad
cld
insb
icebp
in
mov
jecxz
jl
inc
inc
int3
cmp
add
stos
sbb
lds
repz
fbstp
xor
iret
mov
shrl
fs
test
push
adc
xor
mov
mov
test
fistps
cmpsb
pop
add
push
lods
int
sbb
xchg
or
fnstenv
xor
inc
cmpsb
repz
popa
xor
sub
in
out
addr16
adc
sbb
mov
or
add
popf
jne
dec
dec
mov
push
cmc
movsb
mov
mov
dec
sbb
js
mov
lret
inc
lods
add
mov
sub
ret
push
adc
cmp
jl
and
jecxz
shrb
pusha
sbb
mov
dec
pushf
jp
rorb
movsb
xchg
push
cmpsl
adc
pop
loop
sbb
ss
in
cwtl
test
mov
out
addr16
xchg
sbb
mov
inc
jb
cmp
cs
rclb
bound
hlt
adc
fdivrs
push
add
sub
icebp
out
fistpll
push
rolb
loope
pop
nop
outsl
cmpsb
jp
shl
popa
xchg
lcall
push
jl
imul
mov
rclb
xor
xchg
sub
push
ffree
xchg
jg
je
inc
lods
aaa
pop
sbb
imull
mov
fpatan
adcl
pusha
xchg
add
aas
adc
rcrl
ret
lret
mov
sbb
in
inc
lcall
out
inc
push
imul
ret
xor
pop
mov
dec
inc
or
in
sbb
jle
xchg
je
vrcpps
roll
fcomps
into
dec
rol
daa
push
lock
mov
insb
enter
fcomps
mov
mov
mov
cmpsb
addb
cmp
ds
inc
inc
push
add
mov
push
sbb
addr16
gs
pop
addl
cld
add
sub
push
push
lea
sub
mov
push
ja
ja
or
mov
pop
xchg
lods
xchg
pusha
fwait
dec
pop
sub
fstl
in
pop
lds
das
xchg
out
shrl
fxch
sub
inc
adc
sbb
jno
andb
pop
cwtl
mov
inc
dec
sbb
pop
mov
xor
cmpl
push
outsb
mov
sbb
stos
sti
fsubs
add
dec
mov
mov
add
mov
scas
inc
out
or
lahf
es
mov
lret
lret
movsb
mov
loope
imul
push
fs
adc
or
dec
ficoml
sahf
push
aad
dec
push
insb
mov
rol
test
rcrb
push
lods
rcll
pop
sbb
paddusw
ret
in
jno
cli
sbb
add
ret
lcall
cltd
lcall
xchg
jne
cmp
or
lea
leave
popf
pop
mov
pop
mov
mov
jb
shrl
sub
mov
inc
sbb
sbb
and
mov
push
ss
in
mov
mov
push
jns
int
inc
or
mov
test
mov
pop
pop
xor
push
or
jnp
mov
dec
leave
dec
add
dec
push
dec
loope
push
ret
rcrw
ljmp
push
std
and
adc
in
pusha
outsl
shlb
nop
push
sub
xchg
add
mov
xchg
cmp
repnz
enter
out
cmpsb
jae
sbb
not
ljmp
sub
xor
outsb
inc
dec
mov
pop
out
mov
dec
lods
mov
pop
daa
cmp
out
or
ds
je
jecxz
inc
das
div
dec
xor
lahf
adc
xor
inc
cmp
xor
cltd
mov
iret
adc
stc
das
sub
mov
fs
fimull
fs
xchg
add
adc
lahf
mov
popf
mov
pop
test
xchg
out
push
jp
clc
std
mov
in
xchg
shrb
xchg
into
adc
outsb
xchg
mov
movb
dec
fstpt
jge
into
lods
pop
int
sarb
es
add
xor
pushf
push
stos
ljmp
sub
out
mov
jno
lea
pushf
jno
add
mov
xchg
imulb
mov
pop
in
dec
aam
push
cmpl
in
xor
pop
out
mov
out
mov
mov
xor
leave
xor
push
pop
xchg
or
or
push
or
mov
orb
addb
andw
fstps
lds
aas
and
mov
jo
je
jne
mov
std
inc
cli
insl
movsl
xor
jno
push
jmp
dec
push
cmp
and
cmp
add
into
shr
sbb
es
inc
mov
push
push
fistps
xchg
int3
inc
lock
xchg
xchg
jmp
cmp
dec
fsubs
jle
cs
push
push
cmp
in
out
scas
cli
or
jns
jle
fdivs
cmp
cmp
xor
out
jae
ret
ret
sub
mov
or
dec
mov
dec
out
or
imul
scas
mov
cmpsb
mov
test
dec
mov
adc
mov
dec
push
shrl
and
xor
shrl
and
pusha
jge
dec
div
js
and
fdivl
test
lcall
outsb
jne
mov
dec
arpl
jne
inc
or
jb
sub
adc
jecxz
shrb
mov
movsb
ja
out
push
xchg
jl
imul
fidivl
fcomps
jl
lret
sub
test
or
sub
insl
push
iret
dec
jo
iret
pusha
outsl
shrl
decl
lods
es
dec
jo
jae
push
pop
inc
movsl
mov
mov
push
jmpw
xchg
or
fnstsw
mov
adc
push
cmp
mov
leave
xor
push
nop
mov
or
scas
je
adc
push
test
jno
jb
cmpsl
sbb
dec
fs
stos
imul
outsl
inc
xor
lds
mov
orb
xchg
mov
jge
mov
xlat
add
int3
pop
inc
push
inc
std
out
dec
mulb
push
xchg
dec
mov
cmp
mov
pop
mov
mov
ds
mov
sub
push
je
pop
jg
aad
or
out
pop
aad
jns
jns
xchg
sarl
xchg
and
stos
popa
xchg
cmp
orb
cmpsl
cmp
test
in
jp
std
pop
outsl
out
sahf
jle
inc
sbb
and
loopne
sbb
sti
iret
mov
out
push
ror
mov
sbb
loopne
push
ret
fdivs
mov
dec
mov
xchg
jge
and
sub
jne
ss
je
insb
cwtl
and
xor
cwtl
iret
or
dec
add
sbb
mov
sbb
movsl
jg
or
andl
stos
test
stos
mov
iret
mov
insb
inc
js
pushf
ja
mov
add
imul
adc
push
sti
adc
mov
test
or
stos
xchg
sbb
pavgw
sahf
inc
cmp
out
jecxz
leave
sbb
push
push
test
cmc
aas
imul
mov
mov
xor
sbb
int3
ret
jo
outsb
or
or
scas
push
cmp
vshufps
lcall
cmp
mov
int3
xor
add
daa
and
sbb
add
and
cli
xlat
adc
pop
shl
or
sub
pop
popf
push
dec
cmpsl
rorb
movsb
jnp
dec
in
cmp
jns
mov
push
adc
mov
lods
xchg
cli
ss
xchg
cmp
in
jmp
push
adc
xor
cli
xchg
insb
clc
ret
xchg
cli
inc
mov
or
inc
mov
loope
inc
or
addr16
pop
cli
filds
lds
add
shrb
in
or
mov
pop
jbe
jmp
jae
adc
lock
xchg
inc
xor
cs
in
pushf
fimull
sbb
sub
pop
mov
movb
dec
jne
jmp
pop
xchg
xchg
sub
je
xchg
bound
xor
test
push
pop
enter
pop
movsl
push
call
mov
ds
movsl
sub
xor
inc
add
jge
or
loop
sbb
movsb
int
ljmp
test
lahf
fdiv
xor
or
shlb
daa
shlb
add
push
rcrl
dec
pop
das
lock
inc
inc
xor
mov
mov
pop
push
jne
ja
je
add
xchg
sbb
daa
cmp
sarl
loop
lret
mov
mov
sbb
nopl
mov
leave
hlt
add
sub
adc
xor
jl
mov
cs
lods
sub
shll
lds
ret
xor
in
or
jecxz
push
mov
icebp
jmp
mov
out
stos
ds
push
lods
dec
cmp
xchg
xchg
in
shll
sub
sub
pop
push
sahf
inc
add
xor
dec
adc
loop
jecxz
cs
in
mov
std
sbb
adc
add
pop
fs
clc
sub
test
sbb
sub
lahf
rcrl
pop
inc
insl
fbstp
sub
movsb
addr16
inc
punpckhwd
pop
jg
inc
shrb
adc
cs
xchg
lret
add
and
xchg
push
out
gs
leave
jecxz
or
mov
push
leave
fcomps
inc
fnsave
pop
xchg
jp
insl
mov
sbb
je
outsb
popa
sub
mov
add
adc
and
inc
pop
outsb
cli
daa
movsl
cmp
adc
stos
sbb
rcrl
rorl
cmp
or
test
sub
es
in
xor
sbb
jg
adc
cwtl
add
mov
push
xchg
sbbb
repnz
push
in
and
pop
stos
jb
push
outsl
popa
orb
pop
std
sbb
sbb
pop
jnp
pop
in
lret
and
shrb
gs
or
jmp
das
push
xchg
mov
and
push
xchg
sub
mov
sti
ret
inc
ret
out
pop
adc
lea
in
inc
add
outsb
call
mov
iret
or
faddl
ja
daa
fmul
movsl
dec
repz
fimuls
inc
mov
xor
mov
test
mov
push
aaa
dec
ss
jp
add
xor
jmp
pop
aad
cmp
mov
rcrb
push
test
cld
cmc
dec
movsl
add
xlat
addb
xor
xchg
imul
insl
fdivl
sub
test
out
in
shrl
inc
push
stos
cmc
loopne
mov
push
cmp
andl
enter
lods
xchg
push
mov
lahf
movsb
sar
int3
add
jne
jp
or
pushf
in
lret
push
jg
mov
jae
or
je
iret
dec
pop
inc
dec
adc
stc
mul
or
mov
fwait
mov
pop
aas
mov
or
jmp
xorl
insl
and
fsts
sarl
sub
xchg
inc
stc
and
negl
pop
sbb
aam
and
stos
mov
xor
fxch
insb
jge
int3
dec
lea
mov
cmpb
out
sub
fdiv
jae
inc
je
xchg
mov
xchg
adc
int3
sti
mov
adc
jbe
icebp
push
cli
push
movsl
cs
lret
cmp
dec
fidivrs
mov
pop
cmp
in
scas
xchg
mov
lahf
mov
cmp
xchg
sti
xchg
test
or
push
push
pusha
mov
test
dec
gs
aaa
call
cmp
cmp
jae
xchg
dec
adc
out
repnz
mov
inc
popa
xor
mov
mov
xchg
sbb
lods
cs
push
int
cmp
shrb
clc
xchg
lea
out
out
add
xor
or
or
fnstenv
push
push
cmp
xchg
mov
jbe
xchg
mov
mov
aaa
bound
xor
add
jmp
pusha
lods
jne
xor
aas
cmp
mov
xchg
mov
add
dec
or
xlat
aaa
pop
push
push
shrb
jge
add
addr16
sti
lock
push
xchg
jle
jbe
xlat
dec
jno
cmpsb
and
hlt
push
popa
xchg
mov
add
aam
ror
fadds
mov
enter
pop
mov
stc
or
sarl
ljmp
inc
fsubrs
std
dec
and
scas
aam
out
mov
lods
aam
lods
fwait
stos
rcll
mov
mov
pop
mov
and
dec
xchg
fsubrl
inc
pop
push
add
mov
aam
pop
adc
cltd
mov
js
or
lret
jns
mov
lea
pop
pop
ss
les
mov
push
stc
pop
xchg
neg
cmp
and
pushf
loopne
push
mov
fadds
subl
inc
lcall
sub
ret
cmp
daa
mov
pop
roll
mov
iret
shll
testb
es
movsb
pop
add
out
sarb
out
sbb
test
lahf
inc
lods
or
mov
push
add
pop
das
cmc
pop
pop
loopne
mov
pop
xchg
cmpsl
xchg
mov
sti
mov
iret
sbb
cmp
push
mov
dec
imul
mov
ret
jecxz
jne
imul
cmp
iret
out
bound
rclb
mov
outsb
loope
inc
lock
jno
push
leave
adc
loopne
aas
loop
aad
jno
add
jge
dec
push
push
std
aam
punpckhwd
mov
mov
mov
add
and
push
push
jle
jle
lds
fisubrs
add
or
xor
mov
rorl
repnz
into
inc
fwait
shrl
out
lret
jae
mov
mov
add
ret
inc
mov
in
jb
repnz
xchg
addr16
jmp
lock
in
sbb
cmp
scas
cmp
loope
test
fisubs
xchg
jmp
loopne
pop
popa
mov
xor
push
fbld
inc
aam
inc
xchg
call
push
call
lret
insl
jmp
ror
repnz
enter
push
loope
push
xor
cmp
scas
mov
push
cmpsl
std
and
mov
cmp
or
sbb
sbb
loopne
insb
testb
lret
pop
cmpsb
repnz
setae
lods
push
xor
pop
mov
fidivs
or
pop
lods
insl
imul
jnp
push
ljmp
sbb
decb
xor
jne
xchg
js
adcb
out
movsl
and
mov
mov
aaa
fsubp
dec
dec
or
dec
cmc
and
sbb
fidivs
loope
clc
fdivl
pusha
xchg
repz
mov
mov
andb
shlb
sbb
dec
lods
popf
adc
and
roll
mov
xchg
in
xchg
fdiv
imul
mov
or
dec
pop
jle
lcall
in
xchg
int3
cld
xlat
outsl
lret
sahf
adc
pop
bound
fldenv
adc
jp
dec
loop
cmp
decl
sbb
dec
leave
pop
xor
fcmovnbe
xor
popa
loope
repnz
test
push
add
sub
pop
jg
stos
in
sbb
xor
lods
push
mov
inc
dec
sbb
comiss
jo
push
aaa
int3
push
gs
adc
fbld
idivb
mov
push
std
mov
push
mov
lret
pop
dec
cli
push
pop
sbb
add
pop
loopne
into
sub
inc
lods
dec
stos
sub
sub
jmp
in
test
pop
xchg
xor
inc
cs
ljmp
pop
jl
in
xor
and
lret
fadds
or
xor
ret
cltd
enter
cmp
and
xchg
push
sbb
xchg
xor
mov
xchg
lcall
inc
cmp
mov
ror
inc
fucom
push
cmpsb
jl
std
in
in
push
mov
jmp
cmpsl
pop
push
or
fmull
mov
icebp
gs
sbb
addr16
pop
scas
or
inc
add
movsb
sub
adc
add
push
std
hlt
adc
sbb
xchg
adc
adcb
frstor
movsl
dec
jl
lret
jp
push
adc
lahf
inc
int
movsl
jo
dec
inc
rcl
ljmp
pop
mov
call
or
mov
addr16
and
adc
or
lcall
lret
xor
cmp
test
aad
aaa
je
cltd
inc
cwtl
sbb
popa
add
idivb
xchg
pop
xchg
mov
mov
inc
inc
fwait
sub
sbb
bound
xchg
bound
push
adc
imul
cli
pushf
mov
inc
mov
push
and
rcrb
mov
popf
pop
adc
push
scas
adc
xchg
test
lods
pop
inc
iret
adc
add
leave
daa
jo
push
mov
or
push
or
jle
arpl
test
lret
ror
les
movsl
xchg
adc
stc
pop
push
mov
out
aaa
push
jmp
cltd
sub
sbb
xor
mov
add
test
inc
jmp
pop
stc
clc
test
add
xor
into
cmp
pusha
cld
and
adc
add
cld
xchg
jno
scas
add
inc
mov
jl
cmpsb
mov
imul
insb
icebp
sbb
sarb
lods
stc
ja
repz
jno
imul
push
aad
lahf
pop
mov
mov
test
repnz
sbb
and
scas
push
pushf
jae
jge
aaa
adc
dec
jl
mov
mov
inc
lret
pop
sahf
mov
aaa
jns
xchg
outsb
pop
lahf
int3
cmp
mov
push
inc
xor
inc
fsubs
leave
cmpl
sahf
or
jno
jno
imul
jae
aad
ret
or
cmpsl
adc
lcall
xchg
lock
testb
xor
xlat
jp
xchg
cmp
and
xchg
jnp
mov
sub
add
sub
dec
jb
jge
lods
sbb
sarb
pop
push
rolb
rolb
scas
and
inc
aaa
les
sub
aaa
mov
sub
cmp
pop
jp
arpl
inc
lcall
mov
ds
xor
fnstenv
test
mov
outsl
push
add
sbb
shlb
mov
and
jp
mov
rorl
leave
fistps
jo
or
fdivr
ds
jb
je
inc
addb
mov
xchg
mov
dec
lret
and
cmp
je
rol
xor
sub
add
inc
pop
ja
adc
lods
and
add
lcall
sbb
pop
icebp
std
pop
add
sbb
cmp
mov
mov
dec
pop
inc
pop
cmp
lods
jno
mov
mov
lods
es
inc
jge
out
aaa
fsubrl
in
fsubrp
leave
xchg
cmp
xchg
inc
mov
pop
aas
inc
cltd
das
inc
lcall
ds
sahf
dec
loope
mov
xor
mov
test
subl
xor
rcll
cmp
pop
cmp
repz
ja
push
loopne
pusha
ja
mov
push
addr16
cltd
aam
pop
sbb
xchg
push
js
inc
xchg
aaa
adc
pop
mov
js
out
xor
mov
popa
in
lds
fdivrs
pop
jno
xorb
mov
add
enter
sti
add
mov
cmp
or
es
mov
sbb
cs
jg
ss
xor
xor
pop
xchg
stos
loop
cmp
and
sub
int3
jnp
test
dec
push
pop
into
fcmovne
mov
mov
inc
mov
jge
shlb
addb
lret
adc
aad
xchg
adc
adc
sbb
adcb
adc
popf
ss
mov
cmp
jnp
gs
les
mov
into
mov
adcb
mov
lahf
inc
or
mov
aas
test
or
pop
enter
mov
in
pop
popf
subb
aam
or
pop
aas
into
ja
push
and
ret
movsb
dec
mov
bnd
inc
dec
sbb
mulb
and
insb
jnp
dec
fsubl
cmp
mov
in
enter
and
cmp
pop
xchg
or
adc
xchg
adc
pop
dec
cmpsb
jo
mov
in
in
push
cmp
fistpll
js
push
xor
arpl
sbb
das
fcomp
ljmp
cltd
cmpsl
cmp
mov
sub
mov
cli
mov
sub
lods
push
lcall
aaa
push
in
adc
jmp
in
pushf
mov
imul
push
xlat
adc
mov
repz
shll
jae
jbe
into
pop
test
movsl
cltd
push
test
lcall
push
aad
xor
or
sub
sbb
xor
stc
movsb
and
ljmp
int
inc
inc
push
in
jns
push
lea
inc
add
iret
xchg
lret
jbe
adc
mov
lds
cwtl
stos
data16
lret
mov
mov
cmp
aas
in
mov
mov
fxch
fldenv
inc
pop
or
or
lock
mov
pop
fisubrl
int
loop
or
sarl
and
dec
push
cmp
arpl
lock
push
cmp
repz
xor
sub
std
cmc
decl
or
jno
shl
mov
gs
imul
pop
lock
and
push
dec
pop
repnz
insl
sbb
je
mov
idivl
xchg
pop
loop
sti
jp
mov
ffree
in
add
pop
ljmp
fwait
mov
mov
arpl
xlat
and
mov
lcall
add
sub
xchg
inc
arpl
jle
dec
jae
jmp
sub
pop
cltd
cli
lea
leave
divl
mov
xor
fisttpll
xchg
mov
clc
or
xchg
sahf
or
push
jns
mov
add
push
mov
jle
mov
mov
cmp
sub
mov
mov
rolb
cmpsl
sarl
sub
xor
mov
cmpsl
dec
aaa
add
xchg
sub
insb
leave
xlat
insb
add
outsb
push
repz
sti
mov
xlat
imul
cmp
fldcw
es
lock
insl
ja
and
js
ja
aam
stos
cltd
lea
imul
scas
mov
xchg
out
insl
aas
cwtl
jo
push
jns
hlt
jnp
push
mov
cmp
insl
xlat
out
add
mov
xchg
xchg
call
xor
clc
and
cmp
xor
jnp
lret
jns
jmp
int3
test
fisubs
mov
add
mov
pop
pushf
lods
cwtl
add
scas
mov
mov
imul
mov
out
push
ja
fstp
sub
mov
lock
mov
sub
test
filds
int3
mov
and
jnp
bound
popf
out
movsl
nop
icebp
jl
push
test
xor
xor
mov
push
cmp
lahf
inc
bound
push
xchg
jno
sub
adc
dec
fwait
mov
and
ja
or
sbb
stos
xor
lret
mov
dec
dec
movsb
inc
cmp
aas
pop
cmp
dec
adcl
sbb
cmp
add
mov
bound
push
out
jo
adc
sbb
or
addl
punpcklbw
mov
push
call
or
inc
mov
dec
sub
in
jge
ljmp
cli
cltd
mov
add
xor
dec
sub
adc
je
xor
mov
outsb
mov
gs
cli
test
insb
icebp
mov
fbstp
js
push
aam
mov
dec
aas
pop
mov
pop
andl
xchg
mov
mov
mov
in
dec
mov
sahf
jae
or
in
dec
sahf
jp
pop
mov
xchg
iret
add
arpl
push
xor
push
push
sbb
xchg
sbb
mov
inc
xchg
sbb
pop
xchg
lret
pop
aam
xchg
cmp
add
mov
inc
mov
mov
in
xlat
mov
dec
aaa
leave
mov
mov
push
sbb
pushf
call
std
xchg
fisttpl
cmp
and
repz
fs
clc
pop
jnp
jp
jbe
cs
jns
and
jle
testb
std
jb
add
push
aad
adc
subl
xchg
push
adc
decb
iret
pop
jbe
mov
adc
mov
stc
imul
pop
jae
mov
sbbb
mov
out
ret
mov
popa
jb
imul
cmc
mov
popf
or
mov
pop
data16
test
fnstsw
hlt
sbb
fists
ja
mov
and
mov
add
push
aad
adc
xor
dec
inc
iret
jb
and
sbb
adc
test
dec
xlat
mov
aad
mov
test
mov
xor
icebp
ss
dec
add
sbb
cmpsl
jecxz
and
stos
sub
mov
ficoms
lods
outsl
arpl
ja
scas
push
mov
pop
mov
loop
mov
xor
fsub
ljmp
adc
call
jb
fwait
xchg
arpl
mov
mov
fisubs
mov
mov
sbb
xchg
mov
adc
mov
mov
pop
inc
adc
in
test
cmp
orl
sbb
push
out
pop
mov
leave
mov
and
mov
xor
fistpll
inc
int
xor
loope
mov
cli
das
scas
jecxz
iret
lret
gs
jp
test
sbb
addl
mov
sub
pop
cmpsl
enter
cmp
sub
push
out
mov
dec
push
mov
mov
sub
fcmovu
data16
fwait
test
and
or
icebp
mov
addr16
adc
lcall
outsb
scas
or
pushf
dec
aaa
lea
xor
pop
inc
xor
hlt
xor
pop
shll
xchg
fs
sbbl
mov
adc
dec
call
popa
aas
lahf
adc
repnz
mov
or
js
push
mov
arpl
inc
pmuludq
mov
imul
jo
je
pop
jns
lret
stc
gs
mov
ss
int
lret
test
xchg
adc
stos
mov
and
mov
mov
cmp
mov
lret
lods
xchg
enter
add
xorb
mov
daa
sbb
inc
pop
pusha
jmp
ljmp
and
add
out
xlat
mov
xchg
inc
lods
jb
adc
aad
jne
lcall
xchg
pop
pop
jmp
adc
push
push
lods
xorb
mov
sub
jae
jbe
adc
ret
jns
sti
scas
addb
js
loop
popa
jle
jne
push
cmp
push
xor
sti
mov
call
ljmp
cs
je
pop
jne,pt
lea
sbb
cmp
jb
or
pop
xor
stos
test
popf
scas
push
rcll
inc
mov
pop
push
mov
out
cli
mov
les
mov
fs
addr16
push
add
cs
push
jb
sbb
out
jb
mov
out
add
push
mov
mov
xchg
lahf
scas
mov
popf
pop
pop
or
inc
mov
sbb
popf
xor
jmp
mov
push
mov
jl
in
ret
or
pop
cltd
xlat
mov
and
cltd
test
faddl
fs
jno
lahf
add
sbb
mov
std
dec
bnd
outsl
add
sub
dec
mov
sbb
adc
xor
dec
int
ds
movsl
inc
jmp
mov
sub
jecxz
push
leave
push
mov
pop
rcl
sbb
sahf
cltd
out
cltd
and
fistl
push
cmp
das
enter
insb
out
sbb
fdivrl
push
outsl
dec
push
mov
sarl
lock
inc
test
imul
shll
jne
pop
sbb
dec
mov
stc
dec
adc
push
cmp
adc
pop
jo
loopne
jge
lock
cs
mov
ljmp
jp
jl
or
cmp
dec
adc
loop
pushf
mov
loop
bound
mov
and
xchg
fstpt
add
adc
cltd
sbb
fnstenv
mov
js
sbb
aas
sbb
mov
jb
scas
rcl
push
into
mov
pusha
jns
movsb
lea
add
imul
push
push
mull
jbe
lret
jo
pop
inc
xchg
mov
cmp
inc
fidivrs
lcall
rclb
cld
mov
in
dec
je
inc
rorb
jmp
jle
and
and
xchg
subl
or
scas
sahf
shrb
lock
xchg
pop
mov
incb
in
out
scas
push
add
sbb
mov
jg,pt
jbe
xchg
test
je
fwait
xchg
je
stos
daa
mov
jb
or
loopne
das
cmp
inc
lcall
mov
jo
sub
lods
stc
xchg
sti
mov
cli
dec
and
mov
jp
push
in
pop
lret
pop
pusha
aad
pop
test
std
mov
unpcklps
cmc
fists
or
fldl
int3
lock
dec
inc
icebp
mov
jnp
paddsw
shr
jg
test
add
and
mov
sub
pop
jge
repnz
jmp
loope
and
mov
add
imul
add
jo
ret
xlat
add
inc
aaa
sub
sbb
das
mov
or
xor
dec
xlat
xor
iret
xlat
test
push
sub
mov
push
pop
sbbl
inc
stc
test
int3
xchg
mov
aaa
mov
sbbb
jb
cltd
mov
pusha
leave
sub
les
mov
push
call
jg
or
loope
xchg
adc
pop
popa
dec
mov
xchg
in
or
js
dec
jnp
pop
lods
push
mov
sarl
sbb
sub
arpl
sub
cmp
sbb
add
pop
and
dec
push
repz
jg
dec
in
ds
mov
dec
incb
std
mov
jecxz
mov
xor
pop
out
mov
test
cmp
aas
push
jno
mov
xlat
ror
in
fisttps
pop
xchg
sarb
sbb
cmp
inc
add
push
mov
andb
mov
dec
lcall
xchg
cmp
test
cmpsl
daa
fidivs
dec
cmpsl
in
pop
pop
xor
xchg
pop
jp
dec
fldt
sbb
or
cmpsb
xor
out
aaa
dec
int3
int
aam
cmp
sub
iret
lea
pop
and
xchg
xchg
imulb
sub
mov
shlb
insb
adc
dec
lea
sub
gs
xchg
and
sti
ds
aad
loopne
out
imul
fs
push
pop
sub
push
test
out
rclb
adc
ret
into
js
leave
nop
mov
hlt
push
mov
inc
add
pop
outsl
sub
jbe
xor
into
pop
ficomps
xchg
lahf
mov
mov
sub
push
mov
test
cmpsb
xchg
jns
push
inc
add
int3
mov
lret
into
and
cmp
mov
shlb
add
push
jb
adc
or
sar
lcall
repnz
in
and
xchg
dec
arpl
lods
pop
jecxz
inc
ficoms
and
pop
jg
mov
popa
pop
cmp
jecxz
imul
pop
test
movsl
ljmp
movsb
xor
sahf
pop
fidivs
add
cmp
jmp
mov
and
mov
vmovaps
ss
adc
mov
sub
ja
outsl
sbb
mov
nop
cltd
lret
dec
push
aad
je
in
out
mov
faddl
js
inc
jno
mov
movsb
sub
adc
clc
js
pop
shl
cmpsl
fisubl
sbb
test
cmp
add
push
push
jne
pop
fadds
arpl
popl
ljmp
andw
push
daa
icebp
mov
ret
mov
sar
fdivl
xor
mov
inc
mov
icebp
test
aad
cli
xchg
inc
ficomps
add
aad
test
jg
adc
dec
stc
mov
sub
add
out
push
mov
jno
mov
aas
jg
ret
mov
push
cmp
fidivs
mov
jbe
lea
pop
or
adc
adc
flds
lret
sub
aaa
xchg
dec
or
lcall
xor
es
shll
call
push
mov
mul
and
dec
or
jbe
fsubp
push
test
cld
loop
aam
mov
mov
sahf
andb
popa
call
dec
shll
out
mov
sbb
adc
lods
leave
push
pop
add
adc
push
or
dec
pop
push
insb
pop
div
xchg
add
jmp
pusha
mov
push
cs
mov
and
sti
add
cmp
imul
int3
jp
mov
cmp
xor
fwait
xchg
or
int3
jns
imul
popa
testb
aaa
pop
xchg
jo
dec
inc
mov
loopne
mov
xor
stc
lret
fs
push
out
xor
adcb
out
xchg
int3
lcall
push
sbb
xchg
repnz
lcall
cmp
outsb
xchg
movsl
les
pop
mov
dec
popf
js
fcmovb
call
push
inc
in
hlt
out
mov
movsb
test
lods
cmp
mov
pop
mov
mov
out
sbb
test
inc
inc
mov
cmpsw
or
je,pn
imul
test
mov
testl
lahf
and
push
subb
sbb
sbb
ss
popa
std
ret
into
jo
fs
test
cltd
popf
mov
mov
inc
pop
xchg
pop
pop
pop
aaa
inc
cmp
ficompl
scas
imul
push
and
ss
gs
lock
push
in
ss
mov
rorl
aaa
popa
xchg
clc
jno
add
xor
sbb
inc
dec
sub
mov
or
popf
jecxz
jl
loop
addr16
jno
xchg
repz
lock
pop
or
jp
mov
arpl
cld
jo
scas
icebp
jbe
jae
mov
jle
jecxz
shll
out
fstl
inc
pop
daa
imul
xchg
cmp
into
cltd
in
andb
fisubrs
ret
movsb
and
nop
jl
in
pop
sbb
mov
or
adc
int3
mov
and
stos
fistpl
push
fnstenv
jmp
inc
test
cli
inc
pop
jns
ret
cmp
in
adc
popf
inc
adc
es
dec
imul
mov
pop
icebp
call
jbe
mov
cmp
push
int
push
xchg
lds
sub
jb
cmp
add
rorb
xlat
out
sub
mov
mov
ficoms
lret
out
adc
pop
gs
lret
push
jmp
je
test
mov
shrl
popf
mov
outsl
stos
lret
dec
pop
out
xchg
jo
mov
inc
outsb
leave
add
neg
in
and
out
ljmp
xchg
push
mov
xchg
je
pop
add
hlt
sbb
inc
sub
aad
cltd
mov
xchg
icebp
pop
mov
roll
lock
sub
call
insb
sub
mov
sub
xor
sub
xor
sqrtps
push
js
fstps
cmp
ret
mov
shrl
jnp
push
sub
data16
test
out
push
cmp
sbb
inc
icebp
mov
repz
add
scas
mov
cld
inc
xchg
sahf
test
fistps
dec
in
fsubrl
hlt
rcrb
clc
adc
imul
shlb
je
push
repz
mov
xchg
mov
mov
and
hlt
sub
jne
xor
out
add
inc
aas
mov
add
adc
jg
enter
lds
stos
imul
lods
push
sbb
je
pop
adc
insl
loopne
mov
loope
xor
mov
pop
and
pushl
sub
jne
ds
ret
sbb
cwtl
xchg
pop
xchg
and
in
adc
cmpsb
sbb
call
repnz
sub
dec
jl
inc
pop
push
lret
jo
adc
sbb
ljmp
mov
aaa
leave
rclb
scas
rcrb
outsb
jp
outsb
aaa
les
pushf
aas
lcall
out
xlat
sahf
ss
fldcw
out
loopne
and
lahf
es
adc
mov
xchg
arpl
or
lret
adc
scas
and
testb
xor
fistpll
xchg
cs
add
lock
mov
sti
stos
pop
sub
pusha
cmp
imulb
sbb
lods
hlt
add
icebp
rep
push
pop
cmp
jp
sub
and
sub
inc
xchg
pop
and
jp
ret
scas
jnp
stos
mov
push
jle
loope
repz
adc
and
pop
aam
xlat
jae
or
enter
pop
js
dec
out
jmp
cmp
arpl
sbb
lods
popf
roll
inc
mov
bound
loope
andb
rcrb
mov
addr16
out
pusha
stos
aad
ja
pop
jge
loopne
or
sub
leave
lock
pop
imul
je
mov
cwtl
mov
outsb
pop
sbb
fcoml
out
cmpsb
ss
mov
pop
cs
jns
cmp
mov
je
fcompl
push
iret
xchg
daa
enter
scas
mov
rol
stos
dec
mov
adc
sbb
pop
adc
sbb
mov
inc
fldenv
fistpll
xor
add
subl
into
push
lods
and
pop
push
sbb
mov
or
or
add
and
jns
loope
orb
sub
cmc
jo
clc
sbb
pop
inc
sub
mov
mov
mov
data16
incl
sbb
xchg
jae
sbbb
or
push
ret
mov
movsl
jle
insl
out
inc
icebp
pop
or
or
cmp
in
cs
in
mov
out
es
pop
sub
sbb
jg
cmpsl
push
mov
xchg
lods
imul
in
mov
jmp
mov
mov
aam
adc
lret
fnsave
out
shl
in
cltd
loope
xor
cmpsl
or
mov
push
stc
xor
jo
and
dec
loope
inc
js
cmp
pop
addb
dec
out
xor
ljmp
lods
push
add
inc
cmpsb
push
xchg
fldenv
repz
xor
insl
outsb
dec
aam
insb
out
push
sbb
cmc
xchg
cli
lock
dec
fs
jo
je
xchg
repz
das
push
test
mov
jecxz
lds
mov
mov
lock
cmpsl
sbb
or
ss
lods
movsb
jns
adc
lahf
dec
mov
test
cs
lods
shrl
pushf
ret
xchg
loop
sahf
xchg
sbb
add
or
test
rcl
mov
add
into
dec
shl
stos
push
and
or
lret
scas
sub
lods
pop
js
pop
sbb
nop
in
lea
ror
mov
xchg
mov
adc
mov
sbb
ret
ret
and
sbb
mov
xlat
xor
jnp
int
faddl
js
jg
xchg
push
inc
push
pop
out
imul
adc
mov
ljmp
jb
test
lahf
add
pusha
mov
adc
daa
aad
push
sti
jmp
rcl
lret
xchg
fisttpll
sti
jbe
add
fs
add
jne
popa
push
call
sti
gs
lods
in
xchg
fwait
daa
sbb
or
rcll
pop
push
sub
push
into
fprem1
rolb
mov
adc
pushf
or
and
addl
mov
mov
inc
or
push
sarb
xchg
idivl
loop
movsb
out
inc
cmp
push
push
mov
pop
in
fnclex
lods
les
stc
bound
outsb
jbe
sbb
xor
jbe
and
adc
pop
aaa
pushf
movsb
into
lods
pop
jmp
xchg
xchg
cli
pop
dec
sub
jecxz
adc
into
rcr
add
fists
outsl
dec
inc
xor
adc
in
out
bound
data16
shl
xchg
addr16
int3
test
sbb
or
test
push
jmp
lahf
sbb
lods
sbb
in
cmp
push
addr16
int
iret
insl
leave
repz
fsubrl
in
dec
fsubp
push
or
mov
or
cmpsl
mov
ret
icebp
icebp
sub
sbb
cmp
daa
out
leave
ret
sub
push
mov
xchg
psubb
xchg
fdivr
sub
adc
dec
add
hlt
aaa
addr16
xor
mov
cmp
pop
flds
inc
hlt
int3
cmc
test
xor
push
lock
in
addr16
sahf
push
nop
mov
xchg
mov
popf
pop
sbbl
nop
test
xchg
cmp
pop
out
xor
lods
push
xor
xchg
iret
sbb
pop
push
jmp
adc
mov
lahf
and
mov
pop
or
lods
popa
mov
push
lods
int
jmp
cmpb
pop
adc
inc
sub
mov
jp
mov
faddl
mov
add
mov
in
dec
dec
pop
lahf
outsl
fildl
adcl
push
shr
call
dec
addb
notb
inc
dec
call
icebp
inc
clc
ljmp
jbe
jns
push
mov
repnz
mov
push
popa
orb
mov
stos
rol
stc
xchg
push
icebp
or
xchg
iret
aam
dec
stos
fistps
jo
mov
cmpb
ret
add
cmpsb
cmp
arpl
fisubl
xchg
jecxz
mov
fldl
adcl
mov
dec
mov
icebp
xor
dec
stos
arpl
dec
xchg
outsl
out
lods
std
lods
arpl
xor
jp
movl
ret
test
je
sbb
mov
sbb
test
push
aad
sbb
mov
xchg
inc
xorb
jg
adc
shlb
lahf
push
icebp
movl
jae
jecxz
push
pop
into
fisubrs
sbb
mov
cld
mov
icebp
xor
or
or
cmp
mov
lret
imul
bound
fidivrs
cmp
push
push
test
pop
repz
xor
push
sbb
jae
outsb
sub
ficomps
je
out
xlat
sub
dec
sbb
adc
cltd
hlt
dec
roll
cmp
cmp
inc
test
ret
clc
xor
xchg
aad
xor
out
fisttpll
arpl
lods
test
mov
adc
ret
pusha
rcr
push
xor
cmpsb
pop
ds
xor
es
fsubs
les
out
inc
lcall
fisttpll
dec
cmpsl
fcomi
xor
cmc
mov
in
jno
in
push
test
test
lret
jnp
mov
dec
movsb
lret
into
or
inc
rcrb
sub
dec
mov
sbb
dec
cmp
fildl
sub
stos
cmp
jge
repz
sub
push
jbe
adcl
out
push
cmp
sbb
in
sub
stos
dec
mov
xchg
out
jbe
rolb
mov
pushf
inc
xlat
test
push
les
or
sub
add
enter
mov
push
cmp
xchg
lahf
sub
scas
int
xlat
repnz
imul
push
xor
mov
lods
lea
lds
mov
cwtl
int3
adc
push
jp
loop
insb
adc
ss
sub
scas
addb
rcrb
test
std
mov
movl
loopne
jno
test
cmp
pushf
add
data16
ds
pop
inc
mov
xchg
ret
push
repz
and
sarl
roll
out
icebp
or
lock
data16
sub
or
add
xchg
lods
xor
sbb
fildl
cmpl
lret
pop
leave
and
fwait
cmc
mov
sbb
roll
ja
sbb
or
lods
push
cs
push
repnz
push
mov
or
push
xor
loopne
enter
test
xor
cmp
xor
adc
dec
rcll
jns
xchg
mov
jno
and
jmp
lds
cwtl
into
sub
mov
lret
insb
jae
sub
xchg
out
jbe
sbb
call
push
sub
jae
movb
and
sub
sub
aaa
dec
mov
cs
mov
inc
push
les
sub
and
pop
mov
push
xor
sub
push
xor
icebp
std
dec
mov
cmpsb
stos
xchg
xor
xor
sbb
loope
lahf
push
cltd
xchg
les
inc
ret
shrl
or
push
loopne
pop
sahf
mov
pushf
cmp
sbb
mov
incl
lock
addl
movlps
add
clc
cld
and
rolb
cmp
mov
jne
sub
fwait
ret
stos
fwait
push
add
sbb
mov
jmp
mov
orl
mov
stos
mov
adc
push
mov
cmc
lret
mov
adc
push
xchg
pop
mov
insb
je
outsb
sbb
sbb
stc
and
jns
mov
sbb
sub
in
xor
mov
jge
movl
jne
xor
cmovo
aam
sbb
xchg
mov
inc
shr
clc
jbe
lods
jnp
pop
jge
je
sarb
nop
outsl
dec
divb
stos
mov
or
das
inc
sub
push
add
out
and
sbb
test
sub
dec
xchg
sub
pop
cmp
iret
xor
jg
push
or
lock
add
xbegin
xchg
pop
jge
ror
xchg
in
aaa
fistps
lret
mov
cld
adc
icebp
incb
pop
leave
cs
cmp
enter
enter
mov
pop
cmp
dec
dec
dec
outsl
mov
mov
rcl
cmp
pop
jp
add
arpl
aaa
push
andps
leave
mov
shlb
fdivrp
mov
push
mov
jo
shrb
mov
jg
jo
jb
xor
out
jae
fstl
mov
or
xchg
jge
sbb
mov
xchg
xorb
dec
lcall
xor
or
in
aas
test
sub
adc
xchg
out
jmp
mov
stos
mov
push
adc
aad
ret
loop
out
std
rorb
in
es
lds
movl
mov
add
push
fwait
movsb
movsb
movsl
push
in
xor
je
adc
xchg
push
pop
adc
fsubp
or
loopne
in
mov
mov
jns
out
mov
lods
xor
push
cld
add
test
pusha
mov
loope
inc
stos
insb
mov
jmp
xor
push
in
sahf
mov
int3
fs
ret
push
xor
inc
popa
icebp
orl
ret
pop
lock
fwait
inc
test
cmp
inc
dec
je
jno
rcl
cmc
data16
aas
nop
nop
cmc
popa
outsb
sub
insb
data16
sahf
lds
cmpsb
inc
dec
nop
add
ss
jmp
ss
mov
sub
lock
stos
xchg
ja
sbb
loop
xorb
lods
mov
mov
mov
int3
push
sarl
sbbb
outsb
fisubs
dec
pop
shrb
mov
jl
push
cmp
add
arpl
push
push
hlt
mov
add
pop
dec
imul
scas
fldcw
js
repz
push
shlb
in
mov
jle
in
dec
push
push
pop
mov
outsl
lret
mov
sub
pop
mov
sbb
cmp
xchg
jbe
in
cwtl
mov
iret
or
jne
inc
sbb
imull
mov
lret
aam
mov
test
mov
sub
adc
shr
out
sub
or
std
jbe
icebp
ffreep
xor
fcmovnbe
dec
cmp
pop
dec
cwtl
or
mov
push
repz
xor
mov
add
lahf
and
and
test
xlat
adc
lcall
cltd
pop
sbb
sub
mov
mov
ret
rcrb
jmp
and
adc
shrb
dec
inc
and
mov
jne
insl
mov
inc
popa
cmpsl
aam
notl
sbb
vpaddusb
and
ret
dec
cltd
dec
scas
outsl
adc
push
mov
in
sub
lahf
mov
cmp
jno
inc
ss
mov
lcall
mov
fucomip
jge
mov
dec
popa
lea
leave
mov
addr16
mov
xchg
ja
test
ss
push
sub
rol
or
push
mov
ja
sbb
sbb
mov
pusha
in
outsb
andl
xchg
cwtl
in
outsb
adc
sub
jns
mov
pushf
mov
aas
pop
mov
jo
and
push
ss
arpl
xor
jno
ljmp
nop
in
push
add
inc
pop
adc
add
rcrb
inc
pop
or
lea
xchg
pop
xchg
sbb
push
mulb
inc
rorb
in
mov
cmpsl
mov
xchg
jp
sbbl
pop
sahf
xor
mov
push
mov
mov
cmp
into
pop
dec
push
push
fidivrl
loope
mov
jle
repnz
mov
orl
stos
xchg
lahf
or
repnz
out
repz
xor
ficompl
jo
push
aas
dec
mov
int3
pop
loope
jns
jb
insl
shl
push
ficomps
xor
add
mov
or
aaa
in
fdivl
mov
sub
push
jb
gs
add
mov
mov
push
or
and
mov
add
mov
gs
and
adc
push
or
xchg
adc
fistps
mov
push
push
pop
pop
lds
into
pushf
or
pop
push
fld
xor
sbb
cmpsl
rcl
popa
gs
mov
mov
out
push
ljmp
inc
cmpsl
shrb
iret
push
xchg
mov
and
int3
mov
mov
push
pop
js
or
test
iret
movsl
add
push
scas
pop
cmp
and
out
fildll
cltd
push
jns
clc
xchg
xchg
lods
mov
sbb
xchg
das
cmpsl
or
test
push
xchg
mov
repz
and
nop
imul
mov
gs
imul
jmp
jns
dec
mull
fwait
in
mov
sbb
mov
scas
xchg
loopne
inc
and
ss
inc
push
jp
ljmp
mov
outsl
adc
mov
xchg
sub
popf
test
jge
mov
cmpb
sub
repnz
mov
out
insl
pushf
push
bound
inc
add
outsb
or
out
sbb
adc
ja
scas
test
cmp
sbb
jp
iret
mov
rorl
sbb
call
test
daa
fdivrs
inc
popf
je
dec
fdivrs
xchg
aad
add
xchg
xor
dec
add
adc
or
popa
sub
cltd
pop
inc
push
pop
cmpb
sbb
cld
add
sahf
xchg
inc
mov
mov
adc
imul
call
or
mov
inc
xor
add
repnz
in
adcl
xchg
mov
mov
fnsave
adc
or
dec
push
mov
cmpsb
sub
stos
or
das
scas
mov
pop
cmp
fidivs
repnz
int
add
call
out
cltd
xchg
outsl
sub
gs
or
ficoms
dec
push
mov
lds
adc
lret
lods
ret
repnz
adc
push
dec
mov
adc
cmpsl
pop
inc
sub
jns
mov
xchg
mov
jns
rorb
outsb
adc
mov
cwtl
pop
jbe
outsb
sarl
enter
insl
push
or
cmpsb
call
ret
lds
cmp
mov
daa
loopne
hlt
scas
aad
sbb
lods
sti
or
lret
add
pop
lret
push
push
fsub
dec
mov
in
or
js
aas
mov
daa
inc
test
xchg
xchg
movsl
hlt
and
cmpsb
ja
sti
repnz
mov
jns
stc
xor
iret
lcall
adc
jbe
fcmovne
adc
ljmp
add
cmp
dec
loope
jecxz
push
in
mov
and
ja
lods
xor
inc
mov
pusha
cltd
lods
test
in
call
jb
xchg
dec
push
pop
lea
push
jo
mov
jp
sti
movsb
pop
cmp
inc
add
and
push
out
popf
pop
sub
jns
xchg
imul
mov
mov
jae
and
pop
pop
pop
in
in
cmc
pop
inc
mov
scas
mov
push
in
nop
js
lods
mov
mov
icebp
addr16
clc
xor
pop
sbbb
ret
cmp
adc
push
jnp
ret
in
add
push
mov
repnz
test
rcr
jp
outsb
ja
jns
loopne
jg
negb
inc
push
dec
hlt
push
xor
jns
push
xor
jno
pop
mov
addr16
or
lahf
dec
lods
les
jg
sbb
in
std
push
mov
jbe
lods
std
xor
shl
lcall
and
fwait
and
sbb
mov
pushf
pop
mov
lock
outsl
ss
in
jp
in
stc
pusha
in
movsl
notl
mov
mov
test
leave
lahf
lea
fcomps
mov
fisubrl
add
push
aam
dec
repz
inc
sbb
lret
lahf
out
shld
lahf
mov
dec
xchg
push
dec
xchg
or
call
add
cltd
sbb
ret
stc
cwtl
das
fsub
push
push
scas
sbb
fdivl
loop
sbb
lods
lods
fwait
mov
sbb
fdivr
xchg
mov
jle
pushf
jmp
outsl
jns
push
scas
test
lcall
divb
cmc
imul
mov
in
xchg
jnp
call
pop
les
mov
nop
je
jbe
inc
movsb
inc
add
lea
in
imul
pop
jae
jnp
mov
xor
mov
stos
out
jl
add
jle
data16
pop
outsl
leave
lock
dec
push
dec
addr16
or
cmp
test
popa
dec
sub
ja
sarb
out
stos
stos
js
mov
jle
jecxz
dec
rclb
jmp
clc
int
dec
xor
xor
mov
push
xchg
stc
mov
jb
rolb
jnp
rorl
xchg
dec
icebp
sub
lock
mov
xchg
push
xchg
adc
mov
stc
cli
inc
mov
aam
xchg
outsl
out
sub
xchg
out
rclb
cmc
loop
push
iret
push
push
xor
fwait
out
add
dec
push
push
cmp
inc
jecxz
pop
push
in
push
pop
adc
sbb
outsw
rcl
lea
rolb
je
aam
push
sub
fcoml
jnp
dec
mov
xor
enter
das
ret
js
cmp
sbb
jnp
mov
push
gs
call
dec
int3
cmp
sbb
jge
cmp
pop
arpl
les
sbb
in
and
filds
dec
pop
clc
jecxz,pt
jne
add
jbe
call
mov
mov
pop
inc
jmp
fs
popf
outsb
icebp
or
je
outsb
in
lods
sti
int
inc
loope
sbb
jb
dec
xchg
jae,pt
dec
out
push
dec
movl
pop
mov
mov
lods
adc
outsl
dec
movsl
pop
dec
je
fsubs
ret
xchg
mov
rolb
cmp
push
inc
add
pushf
dec
xchg
xchg
daa
cltd
movsl
lea
inc
in
daa
mov
mov
jl
jne
xchg
inc
inc
hlt
jno
ja
sbb
lods
sbb
mov
cmpsl
iret
lret
leave
cs
pop
adc
xchg
fstpt
mov
aam
dec
xor
jmp
push
hlt
scas
mov
loope
enter
adcl
pop
inc
pop
dec
pop
jns
inc
push
pop
cmpsl
or
adc
or
ljmp
fstpt
cltd
jmp
push
and
push
add
mov
adc
mov
sbb
dec
std
add
pop
lods
nop
lock
inc
jne
jge
sub
dec
sti
xor
stos
fcos
fistps
sub
xor
jno
sahf
xchg
jns
xor
mov
movsl
test
cltd
addr16
hlt
jae
mov
mov
js
pop
cmpsb
push
jb
arpl
stc
mov
int3
clflush
mov
xchg
push
pop
data16
in
add
ficompl
mov
pop
mov
or
cmpsl
push
jo
ss
sub
loope
cmp
ja
jle
lods
lods
xchg
imull
rol
rclb
sub
pusha
js
cli
and
repnz
dec
fisttps
ljmp
sub
jl
arpl
xor
and
add
outsb
push
testl
imull
sbb
insb
pop
push
adc
xchg
pop
hlt
popa
xchg
push
dec
adc
pop
test
std
jge
loop
jns
aaa
fmull
loop
daa
pop
std
gs
jle
cmpsl
in
push
leave
add
jae
or
lea
xchg
add
gs
push
insb
cli
sub
add
add
test
adc
jmp
jne
ljmp
dec
mov
xchg
out
lret
or
je
pop
jge
sahf
repnz
repnz
pop
and
fcom
or
pusha
sbb
js
cmc
fucomi
sub
shrl
push
dec
hlt
lods
cltd
fsubl
dec
and
add
lods
mov
mov
xchg
xchg
sub
or
mov
mov
cmp
dec
jnp
std
shll
int3
dec
sub
loopne
mov
inc
mov
mov
pop
xor
aaa
sbb
stc
push
ror
outsl
ljmp
pusha
lock
insb
xchg
leave
lcall
cli
pop
push
mov
repz
xor
sub
frstor
add
mov
fcmovnb
mov
jge
les
jbe
mov
adcb
jb
mov
aad
cmp
sahf
clc
or
mov
adc
frstor
pop
int
fimuls
inc
int
hlt
cmp
xchg
into
and
xor
ljmp
data16
testl
mov
rcrb
in
ret
cmp
mov
mov
dec
dec
testl
in
imul
add
mov
stc
jns
adc
cmp
lods
cmpsb
shl
aas
cmp
and
adc
xchg
xor
outsl
pop
data16
push
lcall
mov
xchg
mov
repnz
int3
scas
call
push
sbb
xor
js
mov
sub
cwtl
bound
dec
pop
cmp
xchg
add
push
mov
xchg
mov
mov
inc
lods
pushf
jb
cmp
inc
jb
pop
lea
call
jo
arpl
nop
insb
push
sbb
jle
stos
pushf
jl
mov
or
call
out
sub
jmp
enter
pop
fwait
mov
in
test
clc
sub
int3
bound
ret
lods
push
enter
push
mov
add
popa
cltd
or
or
adc
mov
mov
es
ljmp
sbb
push
fs
shl
ds
inc
mov
arpl
push
mov
fsubl
test
fidivrs
dec
inc
jae
aad
fcomi
sahf
test
ds
dec
jle
sub
lds
leave
xchg
xlat
xorb
cmp
inc
mov
add
sub
ss
inc
inc
inc
stos
xor
mov
mov
test
inc
dec
xchg
fcoml
js
xor
or
fstps
jnp
rorb
or
fnstcw
insb
test
jecxz
and
ja
pop
add
std
fwait
ret
mov
ss
mov
fmuls
testl
xor
ret
push
mov
and
jne
push
adc
jecxz
jle
adc
std
inc
test
and
stos
adc
fists
push
sub
test
subl
mov
aad
add
jmp
mov
mov
mov
mov
jno
lahf
imul
push
dec
ret
or
and
xor
arpl
out
or
add
aam
clc
stos
add
imul
pop
xchg
lods
sbb
xor
in
adc
in
jl
imul
pop
mov
sbb
xchg
out
jns
mov
int3
lret
xchg
jmp
xchg
adc
cmpl
inc
data16
popl
cmp
and
jbe
add
ds
test
insl
add
leave
in
or
and
sbb
fdivs
stos
test
repnz
push
push
stos
cld
sub
mov
or
test
mov
inc
jbe
jecxz
jg
stc
lret
push
outsb
mov
jle
add
pushf
push
iret
sbb
outsb
out
or
movsl
adc
dec
mov
shll
push
sbb
jl
mov
cmp
or
cmp
mov
xor
inc
xchg
hlt
jae
cmp
addb
mov
mov
fbld
in
add
pop
push
or
stos
mov
mov
inc
cli
repz
push
cmpsb
fmull
scas
cltd
rolb
enter
jl
inc
fs
int
lds
mov
add
sti
pop
hlt
stc
cmovl
push
das
ljmp
test
lods
lea
mov
add
insl
cli
push
scas
adc
sbbl
or
inc
decb
insl
mov
and
sub
das
or
sbb
test
mov
out
aad
push
xchg
arpl
mov
mov
and
and
lcall
xor
jmp
sbb
jge
aas
and
loope
call
push
sub
ljmp
push
scas
pushf
push
scas
int
xchg
cmp
jl
ret
loopne
mov
xchg
sub
add
out
mov
out
xchg
mov
or
cmpsl
lods
sub
test
in
dec
cmp
rorb
xchg
xchg
add
iret
xchg
mov
adc
scas
in
xchg
xchg
sbb
pushf
loope,pt
je
push
inc
push
scas
jne
enter
xor
stc
add
in
pop
inc
mov
xchg
rcrl
jne
lock
pusha
ja
dec
inc
push
loope
mov
adc
std
cwtl
adc
dec
fbstp
mov
inc
mov
enter
cmpsb
hlt
in
mov
gs
test
ret
es
outsl
xchg
lock
add
or
jb
push
or
mov
mov
fadds
xchg
data16
push
repz
stos
lods
test
jb
push
add
or
scas
das
add
ljmp
ljmp
dec
sbb
cmp
cmp
scas
push
mov
dec
add
clc
mov
xchg
leave
fwait
sub
popf
rclb
mov
fs
bswap
pop
jle
es
sub
loop
data16
lods
fcmovne
rcr
rdmsr
push
out
repz
int3
popa
outsl
sbb
out
xor
movsb
sub
pop
pop
cmp
mov
iret
cwtl
imul
dec
fwait
out
lahf
jns
or
clc
or
lea
shll
inc
loopne
and
mov
vhaddps
outsl
aam
sub
test
insb
dec
aas
stos
movsb
jne
and
mov
repnz
jnp
cmp
lret
out
scas
inc
gs
les
push
add
arpl
pop
lahf
xor
test
test
xor
or
popa
jge
mov
je
test
sti
std
movsl
mov
xchg
ljmp
cmpl
push
lods
out
incb
adc
xchg
ljmp
aas
rcll
inc
imul
sbb
in
sbb
push
dec
sbbl
cli
push
mov
push
jns
sub
stos
bound
cmpl
pop
cmp
pop
adc
pop
ss
fwait
test
push
js
sbb
clc
subb
paddsb
call
lret
icebp
je
subb
ret
dec
popa
mov
cmp
inc
inc
mov
sub
cmp
enter
add
push
lods
mov
lahf
mov
mov
xor
psllw
cmpsb
test
inc
mov
cmpsl
sbb
jg
inc
xor
push
and
inc
cmc
adc
fnstenv
into
dec
int
arpl
fdivrs
ds
sahf
shl
mov
xor
adcb
es
jg
cmp
inc
test
and
inc
xchg
in
ljmp
lret
shrb
lahf
scas
mov
dec
and
or
ljmp
repnz
xchg
sbb
jl
or
rolb
sbb
loope
rclb
outsl
popf
xchg
cli
popa
test
mov
mov
or
add
movsb
jbe
pop
add
int
in
insb
lock
stos
mov
lahf
loope
push
xor
xchg
xchg
scas
insb
sarl
mov
inc
cmp
pushf
jae
ror
cs
out
cmp
add
jns
push
cmpsl
mov
daa
inc
or
js
rorb
mov
mov
cmp
pop
mov
cli
out
shrl
lret
lea
fstps
push
repnz
ds
daa
pop
ss
push
and
pop
cmp
pop
out
jge
je
out
push
and
xchg
hlt
xchg
pushf
push
jmp
pop
mov
pop
not
sahf
inc
push
insb
sbb
push
inc
inc
or
add
or
jbe
pop
mov
or
and
pop
rcr
push
mov
xor
insb
mov
fldt
fchs
test
and
pop
out
sub
mov
pop
rcl
add
int3
push
cmpsb
cwtl
cmp
ret
pusha
jns
xor
inc
fsubrs
xorb
int3
mov
mov
mov
mov
push
mov
push
cld
mov
mov
aas
int3
inc
scas
ljmp
push
add
sbb
mov
je
xlat
rorl
in
xchg
and
iret
nop
rcr
lods
mov
add
sub
and
bndstx
and
cmpsb
fisubrl
popa
bound
xchg
loopne
sti
mov
sub
mov
or
push
inc
icebp
loope
repnz
pop
lcall
insl
das
adc
rol
mov
adc
adc
push
pushf
je
mov
xor
mov
mov
xor
rorb
pushf
push
mov
cmp
dec
cltd
sub
shl
dec
enter
add
data16
sbb
cmp
push
cli
dec
dec
jbe
mov
into
lods
je
cmp
sahf
icebp
rorb
dec
fimuls
mov
cmp
ss
mov
add
mov
aas
into
andb
arpl
push
cmp
repz
and
cld
mov
addr16
add
enter
sbbb
shlb
mov
das
cld
sarl
add
js
imul
push
pop
adc
xchg
push
mov
stos
cmp
jbe
cltd
in
sub
arpl
push
inc
mov
mov
out
sahf
dec
xchg
pop
dec
icebp
jecxz
dec
fs
xchg
jp
xchg
out
lods
mov
pop
pop
jbe
ss
pop
pop
xor
xchg
repz
pop
mov
mov
je
fadd
outsb
jl
and
stc
pop
jmp
aam
jnp
xchg
mov
dec
mov
dec
cltd
icebp
add
mov
inc
pop
inc
jns
and
jns
mov
in
icebp
sbb
shrb
je
add
jmp
popw
push
cmpsl
scas
fmull
repz
sub
pusha
push
dec
test
and
inc
xchg
mov
xor
imul
cmp
scas
inc
stos
mov
xchg
repnz
fwait
mov
clc
cs
out
loopne
leave
js
loop
lea
bound
aas
push
iret
inc
and
xchg
add
popa
js
push
adc
jle
sub
into
push
jecxz
cwtl
jmp
add
pop
xchg
outsb
or
push
mov
sub
adc
inc
inc
fistpll
ljmp
jg
ror
mov
or
jge
out
mov
scas
enter
mov
mov
mov
push
cmp
push
sub
rcll
lahf
call
mov
ficomps
cmp
or
jae
pop
andl
cmc
in
addr16
lea
aad
cld
iret
mov
and
xor
aaa
fstps
push
pop
inc
inc
dec
stc
scas
adc
lcall
inc
test
xorl
mov
dec
iret
das
push
mov
push
mov
mov
push
das
imul
sub
jnp
pop
insb
sti
push
mov
addr16
push
mov
sbb
add
push
sbb
sbb
pop
mov
add
inc
mov
dec
outsb
pop
loop
jo
adc
out
mov
arpl
cmp
or
rolb
repnz
sbb
jne
xor
lea
sbb
sti
xor
pusha
mov
popl
cmpsb
andl
jbe
push
cmp
pop
rcl
xsave
cwtl
and
outsb
sahf
ds
repnz
std
movl
jbe
mov
fisttpl
aam
movsb
sti
loop
test
fwait
in
and
out
cmpl
out
mov
pop
mov
dec
rorb
lret
outsb
pop
mov
int
pushf
dec
sbbl
push
scas
push
add
add
xchg
xor
fstps
jo
push
sarb
add
scas
jecxz
xchg
hlt
leave
shrb
sbb
mov
ljmp
jb
adc
xor
cmp
mov
into
es
in
in
outsb
scas
pop
adc
fildll
jbe
mov
mov
jae
sbb
inc
popf
fisubs
lcall
dec
call
cmp
lds
insl
xor
cmpb
xchg
xchg
hlt
jge
push
push
loopne
test
adc
lods
movsl
ret
into
lret
sbb
mov
and
mov
enter
cltd
test
rorl
adc
enter
std
jl
jbe
push
es
sub
jb
adc
push
gs
sub
in
mov
jge
mov
push
mov
mov
imull
int
jge
xor
sbb
ljmp
pop
loopne
inc
add
jns
adc
sub
lods
adc
and
mov
adcb
flds
rcr
or
xor
mov
fnsetpm(287
cmp
mov
xchg
inc
lret
cmp
inc
mov
ja
sub
jl
shrb
lods
inc
mov
out
pop
dec
mov
fidivs
call
dec
insb
out
add
ljmp
shl
faddl
insb
add
int
ret
adc
rorl
push
lock
xchg
and
popa
js
das
ret
sub
leave
insb
adc
or
call
imul
xchg
sti
cmp
rol
lea
cltd
sub
add
sub
lahf
xchg
sbb
mov
mov
mov
data16
dec
xlat
loopne
mov
add
or
fbld
add
push
stos
cs
packsswb
or
outsb
push
inc
inc
mov
jg
jnp
mov
xor
cmc
lods
mov
pop
dec
clc
movsl
jl
sub
sub
and
nop
sbb
out
jb
mov
mov
mov
jmp
pop
imul
das
ljmp
sub
popf
push
mov
out
pushf
pop
popa
jle
movl
in
hlt
push
cmp
lock
mov
test
adc
aas
sbb
jb
cmpsl
sub
mov
dec
div
and
xorb
sub
mov
call
scas
daa
push
mov
cmc
pop
insb
pop
mov
aaa
adc
ja
ss
sub
cmp
or
shl
or
mov
out
les
pop
aas
je
popf
std
or
frstor
jo
inc
je
arpl
jb
fidivs
xchg
push
cli
jmp
aaa
cmp
mov
cmp
sbb
push
daa
push
loope
push
cli
out
mov
mov
jp
mov
xchg
xor
or
push
stos
xchg
into
inc
mov
xor
jno
xchg
jle
iret
imul
mov
cmc
push
add
fsts
dec
notb
outsb
out
sub
loope
cmc
xor
and
test
xchg
stc
pop
or
jmp
mov
out
and
xlat
imul
mov
add
test
vunpcklps
sub
push
imull
mov
scas
push
call
nop
loop
sub
ja
or
das
mov
dec
loope
out
insb
pop
idivb
fistpl
pop
das
addl
inc
divl
jge
call
out
aad
jle
mov
rorb
lea
mov
nop
mov
push
addl
or
fstl
dec
or
je
cwtl
dec
adc
fidivrl
cmp
cs
lcall
addr16
sbb
push
aad
pop
pop
iret
mov
lcall
cmp
hlt
jo
xchg
sahf
or
frstor
ljmp
inc
xor
xlat
bound
outsl
pop
adc
inc
ds
stos
pop
fadds
mov
lock
push
add
repz
sti
mov
lock
jmp
mov
jge
jnp
jbe
icebp
ds
push
int3
xchg
mov
clc
aad
lea
pop
mov
fcomps
jo
jnp
adc
jnp
xor
or
jp
int
js
jae
shll
outsl
mov
pop
pop
jg
xor
shl
lea
repz
pop
cmpsb
stos
cltd
addr16
pop
fistl
xor
les
pop
mov
cs
rorb
push
push
mov
and
and
jmp
mov
ror
or
shlb
roll
mov
mov
in
cmp
cli
jo
add
cmp
xchg
mov
or
popa
movl
push
xchg
lods
and
enter
test
in
push
gs
movsl
icebp
xor
cmp
lcall
jb
movsl
push
call
push
pop
fs
pop
jecxz
and
push
aaa
daa
or
movsl
jo
imul
das
out
pop
mov
dec
shll
or
scas
xchg
jne
xor
pushl
inc
jmp
data16
xlat
sti
add
scas
push
imul
cld
in
jle
das
add
pop
jno
insb
mov
insb
push
jnp
push
xchg
out
lahf
mov
movsb
into
repz
push
jl
out
jae
xchg
xchg
inc
inc
faddp
pop
fnsave
popf
and
dec
jne
ret
mov
dec
or
mov
inc
push
mov
mov
lahf
pop
xchg
xchg
mov
jo
repnz
add
sbb
xor
inc
mov
jno
xchg
and
test
adc
push
add
inc
cmpsb
sbb
test
cmpsb
movsl
sub
inc
repz
inc
fimuls
pusha
fwait
sbb
pusha
scas
inc
sub
jmp
mov
fwait
ja
mov
mov
js
xchg
aam
arpl
mov
or
lahf
inc
jmp
mov
int3
mov
dec
xor
adc
sbb
negb
cmp
lea
movsb
fucomp
or
frstor
pushf
jb
mov
xor
jl
iret
clc
push
cmp
sub
sub
cmpsl
dec
call
lock
arpl
lds
rcrb
push
pop
mov
mov
ljmp
cmp
repnz
cmpsl
into
bound
lret
push
cmpb
loop
mov
jge
jno
popa
sarb
into
or
cmp
lds
inc
mov
and
lock
jecxz
loop
jnp
fdivl
pushf
rcr
inc
jo
scas
iret
int3
adc
and
sbb
mov
xchg
incl
pop
call
mov
add
out
mov
rcll
push
jg
adc
stos
pop
add
add
insl
cmp
push
mov
fnstcw
call
inc
add
jbe
xor
or
pop
dec
bound
fisttps
and
scas
add
test
sub
jo
popf
test
pcmpgtd
test
pusha
mov
xor
lret
cld
jb
scas
hlt
scas
cmp
mov
pop
sbb
and
xchg
pop
push
inc
and
ljmp
mov
cltd
shrb
sbb
xchg
loopne
js
stc
movsl
sub
fwait
sub
inc
jbe
je
jmp
or
mov
int
rcll
dec
xchg
repz
mov
sbb
std
xor
sub
inc
push
push
in
inc
sub
daa
or
icebp
adc
xor
jg
jge
jmp
mov
cmpsl
and
orb
dec
out
mov
les
add
lock
js
push
inc
addl
imul
or
xor
mov
dec
in
cmp
outsl
xchg
xchg
xlat
and
imul
fsub
push
adc
scas
xchg
das
shr
jecxz
push
scas
je
mov
in
pop
inc
adc
sub
imul
or
nop
jns
decb
std
dec
and
in
loopne
cmp
hlt
mov
nop
pop
mov
push
fmull
cmp
mov
xchg
jae
mov
mov
and
pop
imul
xor
xor
xor
mov
and
pop
lcall
ffreep
in
jle
and
mov
jno
push
dec
jl
insb
mov
sub
dec
jp
sbb
xor
pop
jbe
and
jmp
pop
mov
mov
mov
divl
inc
cmp
mov
lods
fs
jns
movsl
sahf
fistl
outsl
mov
mov
mov
jmp
lods
adc
mov
test
cmpsb
push
int3
leave
mov
cld
icebp
xor
xchg
icebp
inc
insl
or
in
dec
in
inc
push
xorb
cld
add
cld
mov
push
xchg
mov
sbb
dec
inc
bound
mov
xor
aaa
jge
je
cmp
mov
dec
mov
jmp
mov
mov
ja
dec
jae
mov
cli
sbb
ja
stos
and
cmp
insl
jae
les
rcrb
lahf
and
pop
fsubs
mov
cmc
inc
popa
lcall
xchg
push
ss
mov
push
sar
fidivrs
outsb
shrl
jbe
add
xor
or
arpl
inc
inc
mov
pushf
in
test
xchg
adc
dec
push
pop
imul
pop
sub
pusha
mov
into
pop
fdivr
adc
insb
jmp
or
add
aas
cmp
fisttpl
and
xor
push
and
jns
add
sarb
test
inc
dec
shr
inc
mov
mov
inc
pushf
je
jmp
in
outsb
mov
mov
nop
mov
mov
add
adc
mov
pop
cs
cmc
mov
in
leave
xchg
rcrl
adc
cld
push
mov
xor
push
jbe
sbb
pop
dec
sbb
jle
out
xchg
sarl
pop
jbe
or
mov
aaa
push
push
fdiv
into
ret
js
fimull
aaa
movsb
cwtl
sub
dec
and
in
jge
and
push
icebp
les
and
add
fs
addb
mov
dec
mov
cwtl
adc
sbb
lahf
adc
sbb
jne
movl
andb
mov
repnz
out
pop
mov
orb
and
cltd
es
in
and
or
mov
ljmp
and
ds
imul
imul
mov
test
repz
pop
or
jbe
in
xchg
mov
and
outsl
pop
xchg
inc
es
mov
inc
inc
xchg
mov
fstpl
sti
out
into
push
int3
mov
rorb
xor
or
je
or
cmp
ljmp
out
aaa
sarl
push
jl
dec
das
dec
fwait
xchg
aaa
test
jmp
jbe
out
lret
mov
xchg
repnz
jge
push
fucomp
add
dec
push
out
xor
lcall
ret
inc
scas
push
add
stos
scas
mov
push
out
mov
sbb
adc
mov
xchg
mov
clc
lock
dec
insb
cmp
mov
push
repz
cmp
xchg
cmp
aam
inc
jne
add
adcl
movsb
xchg
jo
jns
loopne
sahf
int
pop
negb
xor
adc
xor
call
cmp
xchg
pop
mov
loope
pop
bound
mov
xor
inc
or
sub
insl
mov
in
lods
dec
dec
icebp
sbb
popa
mov
out
push
out
cmp
inc
xor
lea
cmpsl
out
jmp
push
mov
add
and
add
jp
adc
pushf
cmp
pop
lods
adc
xchg
int3
std
jnp
lea
mov
adc
xchg
xor
or
dec
inc
nop
bound
out
mov
into
xchg
lods
adc
addr16
call
cmp
mov
popf
sub
pop
lock
mov
pop
pop
adc
mov
in
stc
popf
or
adc
bound
cmp
stc
or
out
push
insl
test
mov
dec
inc
outsb
xlat
dec
iret
mov
gs
cltd
and
or
xchg
sbb
pop
mov
inc
cmp
push
adc
or
jle
scas
mov
xchg
ds
pushf
mov
divb
xor
dec
xchg
test
jl
rorb
jg
icebp
xor
xchg
mov
cmpsl
popl
insb
xchg
inc
jnp
mov
stos
xchg
fimull
pop
cmc
dec
outsl
jnp
mov
jbe
fisttpll
inc
les
jge
sbb
pusha
ds
add
popa
repnz
in
leave
popf
dec
lret
xor
pop
mov
cltd
test
cmp
xor
cmp
ret
mov
sub
push
aad
mov
adc
dec
mov
xchg
inc
lods
mov
xchg
rclb
test
xor
addr16
cmpsl
and
inc
andl
push
mov
xchg
outsl
jge
lea
inc
scas
jmp
sub
inc
push
adc
sti
mov
scas
cs
movsl
daa
mov
lahf
xor
ret
jecxz
jmp
mov
in
sbb
jns
leave
pop
xchg
mov
or
test
jle
das
jo
or
scas
shll
jmp
sahf
jmp
in
in
fcmovnbe
iret
ljmp
push
jae
out
aas
push
insb
pop
nop
sbb
shl
and
fisubrs
fdivs
sbb
xchg
jmp
fidivrl
fnstsw
fld
cmovns
movsl
dec
xchg
jl
dec
sub
sti
add
sbb
mov
imul
fsubrl
mov
pop
inc
adc
or
pop
test
jo
iret
dec
out
adc
ret
cmp
bound
pop
int
pushf
xchg
in
sti
rcl
dec
push
orps
mov
mov
cmpsl
sub
xor
andl
into
push
add
fsin
mov
gs
leave
clc
xchg
sub
jmp
push
push
mov
shlb
or
sub
dec
lea
inc
hlt
pop
loope
sub
mov
push
fcompl
push
pop
mov
addb
dec
xor
repnz
cmp
push
push
xor
notl
push
dec
pop
push
data16
js
and
pop
adc
and
fidivs
stc
add
mov
sahf
cmp
jecxz
mov
xlat
cli
repz
call
iret
sahf
popa
inc
js
lods
movsl
mov
lods
das
imul
fisubs
xchg
das
cmp
xchg
sub
add
in
jae
mov
push
jbe
repz
inc
mov
mov
in
and
jge
cltd
fwait
popa
and
xorb
fs
ret
cmp
xchg
or
popf
leave
loop
xchg
fwait
mov
push
ret
das
faddl
push
ljmp
cmpl
push
pop
xor
sti
jbe
dec
mov
rep
ret
pop
jne
sbbb
mov
mov
cltd
pushf
test
push
jl
jp
insl
mov
sti
jecxz
add
push
mov
aad
add
inc
jecxz
in
ja
ret
adcl
divb
test
mov
jo
adc
push
cwtl
or
xchg
cwtl
lret
xor
bound
lods
cmp
cmp
push
jnp
ja
inc
xchg
ret
pop
cltd
int
je
cmp
mov
mov
mov
lea
scas
mov
je
shlb
stos
fiaddl
setp
aad
bound
jns
mov
cmpsl
gs
sbb
andl
fldcw
jns
loope
out
jns
lret
or
js
scas
lea
jae
repz
jbe
jecxz
inc
inc
notb
jecxz
rcll
pop
and
xchg
pop
mov
outsl
mov
and
jecxz
mov
push
and
jg
jl
je
sarl
cmpsb
inc
push
pop
mov
mov
notb
js
adc
or
inc
jo
sub
jnp
jmp
mov
shll
lods
and
push
std
out
sub
sub
stos
sbb
shlb
inc
pushf
loopne
js
cmpsb
cltd
push
outsl
mov
pop
outsl
adc
inc
mov
ja
push
loope
sbb
mov
push
sti
cmpsb
mov
dec
or
push
loop
jecxz
out
fcomip
es
inc
lcall
ja
std
xlat
inc
mov
sbb
stc
movsl
stos
inc
into
cmp
imul
and
xor
pop
and
repz
cmpb
lock
pop
repnz
mov
enter
in
push
add
aas
inc
mov
push
mov
fld
scas
mov
lods
jg
push
daa
ja
dec
xor
lods
imul
adc
stos
jae
xchg
jmp
iret
push
std
and
mov
movsl
sti
insl
das
xchg
cmc
fisttps
adc
ret
lods
dec
sbb
imul
jle
xchg
add
cmpl
int3
cld
push
or
ljmp
icebp
ljmp
stc
icebp
std
adc
insb
rolb
mov
push
mov
push
jbe
mov
xchg
adc
loopne
push
or
in
out
xor
mov
lods
int3
loop
into
pop
in
out
fldl2t
dec
fwait
add
dec
popa
or
sbbl
add
fisttps
outsl
fdiv
xchg
adc
xlat
and
popf
mov
daa
out
sub
outsl
sbb
inc
in
mov
sub
pop
cmp
jge
cld
jns
int
shlb
dec
mov
cmp
in
icebp
in
adc
jnp
mov
or
mov
pop
fisubrs
fimuls
fisubrs
xor
aam
xorb
adc
in
into
in
cmp
xor
sub
lods
or
cmp
dec
gs
cmc
mov
loopne
mov
mov
sahf
push
xor
add
cmc
fcoms
jp
cmpsb
ficompl
sti
shl
cmc
imul
xor
push
sub
ret
add
push
mov
mov
jmp
fnsave
outsb
fdivr
js
xlat
ljmp
push
mov
gs
aam
ret
push
lret
imul
sub
sbbb
sub
orb
inc
sbb
xchg
push
cld
pop
sbb
rclb
enter
push
mov
pop
add
shll
mov
daa
lock
lret
dec
test
push
sub
out
push
cwtl
mov
sub
stos
push
loop
faddl
or
movsb
and
repnz
inc
mov
stos
cmc
pushf
push
inc
jb
sub
jo
testb
jl
ds
cmp
clc
mov
fldenv
adc
shll
jae
lds
inc
pop
or
out
mov
cmpb
shlb
inc
sbb
fs
push
test
or
adc
stos
jp
inc
xchg
mov
sbb
inc
cld
fcompl
test
aas
xchg
inc
add
add
sarb
popa
shlb
dec
lods
insb
pop
inc
xchg
inc
je
lods
sbb
out
out
pop
fnstenv
cmp
xorb
pop
lcall
jns
xchg
daa
bound
jns
xchg
in
lret
dec
in
daa
jb
pop
jb
and
shrl
andb
in
cs
ret
inc
mov
xor
clc
push
in
lds
das
imul
cld
loope
pop
mov
lcall
jge
aas
es
movsl
inc
les
or
rclb
add
lahf
stos
inc
test
pop
inc
rclb
mov
dec
cwtl
jo
sub
aaa
out
or
ret
jg
mov
mov
and
cmp
clc
xorb
mov
mov
add
int3
mov
cmp
bound
jge
data16
fbld
xchg
xchg
mov
dec
mov
jne
jno
dec
mov
shlb
daa
clc
insl
loope
add
cmp
or
mov
psubb
cmp
push
es
into
mov
push
mov
xorl
push
push
xor
sbb
mov
sti
aad
in
xchg
cmp
lret
jnp
push
mov
test
shll
dec
jge
sbb
aam
inc
mov
xchg
daa
inc
fs
add
cmp
push
sub
xlat
into
popa
ja
or
jno
push
push
jl
jae
xchg
mov
xchg
mov
mov
dec
hlt
ljmp
shlb
imul
sbb
add
mov
jae
push
add
rol
test
jae
mov
loope
pop
std
rorl
adc
push
rorl
cli
in
pop
out
dec
jnp
bound
add
scas
jnp
inc
pop
outsl
add
repnz
push
add
mov
out
mov
jl
cli
adc
mov
xlat
in
aaa
js
dec
roll
fcoml
mov
test
fcmovnb
dec
inc
dec
sbb
jbe
lods
out
xchg
in
mov
faddl
pop
jg,pn
mov
mov
lcall
ficomps
dec
push
and
bound
add
mov
jae
sbb
cmpb
mov
adc
cli
jp
frstor
dec
mov
adc
notl
int3
notl
nop
pop
cmpsl
xor
or
mov
dec
mov
into
sbb
add
lock
je
pop
mov
cmpsb
pop
test
mov
adc
sbb
into
in
int
aam
leave
outsb
jp
sti
lret
jg
lods
ss
ret
jbe
lods
add
ret
or
jge
mov
popf
scas
jmp
in
mov
fwait
cwtl
and
ret
cli
outsb
inc
shlb
xchg
mov
mov
stos
push
jne
test
shl
xchg
call
sbb
mov
mov
aad
mov
adc
into
xchg
movsl
sbb
dec
inc
xor
das
cmp
mov
push
mov
mov
fwait
jb
sbb
rclb
stos
jnp
mov
push
sub
fldl
push
mov
fwait
shll
ljmp
int3
cli
dec
jae
rcr
sahf
rcr
sbb
or
stos
mov
lock
mov
lahf
xchg
pop
pop
jae
add
sub
enter
jp
and
aaa
out
mov
insl
test
shlb
out
popf
or
rolb
fs
sbb
loopne
push
and
ja
sbb
orl
notl
repnz
pop
rorb
push
ficompl
lahf
call
cmp
sbb
cmpsl
and
rcll
ret
mov
mov
xchg
ja
cmpsb
jns
mov
fidivs
sarl
loope
ljmp
cli
dec
into
adc
ja
insb
ss
loope
jne
test
or
mov
pop
aas
sbb
cli
xor
jp
xor
sub
jg
sub
xlat
movsl
aam
xor
shlb
mov
mov
stos
mov
or
push
scas
cltd
imul
push
js
andl
add
aad
adc
in
adc
es
test
push
dec
outsb
cld
in
adc
add
mov
mov
out
in
jo
gs
sbbl
mov
icebp
imul
jp
fs
cmc
jp
sbb
imul
andl
addps
and
pushf
jns
sub
mov
and
leave
xchg
fildl
push
inc
ret
mov
mov
push
cmp
xchg
les
inc
push
pushf
or
and
out
ret
repz
hlt
ror
in
ljmp
push
push
pop
lahf
call
cld
pop
mov
arpl
push
enter
mov
int3
jge
pop
push
and
popa
idivl
jle
mov
cmc
mov
sub
fisttpl
mov
imul
xor
adc
and
add
adc
scas
sub
data16
mov
ss
mov
sbb
sub
fisubrl
addb
lretw
in
or
jbe
int
adc
inc
das
mov
out
mov
cmp
inc
insl
insb
sub
mov
sbb
mov
call
negb
movsb
xchg
push
mov
sbb
das
xor
xlat
inc
mov
lcall
inc
cmpsl
dec
scas
or
das
mov
stos
leave
popf
repnz
adc
sub
into
adc
lahf
les
add
mov
lahf
daa
mov
push
inc
icebp
mov
xor
pushw
ja
or
and
inc
subb
cli
int
mov
in
adc
test
mov
sbbl
rcl
mov
or
test
push
mul
dec
mov
sbbl
sbb
add
je
cmp
mov
pushl
push
je
xor
insl
pop
mov
or
sti
test
adc
or
jg
or
pop
test
cmp
cli
push
test
pop
push
daa
xor
cmp
dec
fisubs
mov
pop
imul
dec
popf
es
aas
push
daa
fisubrs
jbe
lahf
sbb
scas
mov
int
test
out
pop
inc
ljmp
enter
cmpsb
push
sarb
add
mov
cmp
add
or
xor
cmc
sbb
sub
arpl
in
dec
pop
aad
xchg
daa
push
fisubrs
sub
ds
push
jecxz
jge
and
xlat
mov
and
decl
rcrb
in
stos
fwait
adc
xor
idivl
pop
test
pusha
fwait
jbe
cmpsb
xorl
repnz
insb
cmpsb
test
jl
sahf
arpl
cltd
pop
xchg
xor
sub
or
cli
mov
mov
jmp
mov
popa
fwait
movsl
sarl
sub
jns
sub
pop
repnz
repnz
out
mov
fcoms
hlt
pop
dec
mov
sub
push
xchg
daa
push
ficoml
iret
popf
jmp
js
and
adc
xlat
dec
outsl
mov
push
push
rorl
in
popf
pop
cmp
sub
mov
test
adc
hlt
test
lret
aas
mov
enter
shlb
cli
mov
imul
adc
sub
mov
fs
pop
fwait
or
dec
xchg
sar
adc
jb
cmp
sub
sub
mov
add
fldenv
mul
out
fcmovu
test
dec
daa
add
and
shrl
cmp
push
adc
icebp
sub
movsl
stos
pop
jnp
push
add
jmp
xchg
mov
mov
push
xchg
rcl
repnz
or
add
xlat
das
shrb
push
and
fldt
inc
test
loop
cwtl
mov
jmp
ret
lret
jb,pn
adc
sbb
mov
aad
add
cmpsl
es
mov
sbb
adc
mov
mov
sub
inc
lds
aad
cmp
imul
iret
pop
stos
pushf
popf
arpl
lret
sbb
repz
pop
inc
pop
loop
pop
add
push
mov
sbb
enter
mov
movsb
adc
pushf
sbb
cwtl
pop
lret
jb
sbbb
mov
test
pop
pop
movsl
dec
loopne
xchg
dec
adc
je
add
hlt
or
pop
sub
adcl
fldl
push
cmp
cmp
mov
cld
push
mov
in
mov
xchg
outsl
adc
add
jge
fisubl
cmp
sbb
leave
and
ja
fnstsw
outsb
push
mov
mov
bnd
jb
pop
insl
inc
pop
add
mov
lds
xor
pop
xchg
in
out
into
adc
mov
rorb
sbb
loope
mov
xor
insb
and
and
pop
fidivs
shr
adc
xlat
xor
lret
mov
mov
pop
shrb
test
pop
scas
inc
gs
std
sub
outsl
insb
mov
gs
fistps
pop
lea
ror
loopne
ret
mov
adc
mov
lcall
adc
jp
popa
outsl
mov
sub
dec
int
pop
enter
sub
inc
push
sub
cmp
dec
int
scas
sahf
pop
xchg
xorb
mov
adc
int3
outsb
fwait
js
jno
sbb
mov
jno,pn
in
je
and
push
fdivl
xchg
loopne
sbb
andb
push
in
pop
lgs
xor
cmp
pop
dec
shl
sbb
inc
cs
fidivl
icebp
das
in
pusha
mov
stc
and
mov
cmc
movsl
divl
xor
shlb
push
xchg
mov
fwait
sub
in
imul
xchg
fucompp
test
sub
xor
or
xchg
out
ret
lret
lods
popf
in
mov
jnp
pop
scas
xor
es
in
mov
adc
pop
push
xchg
sbb
movsb
xchg
int3
dec
popf
push
fldcw
fnstenv
push
pop
add
mov
cltd
mov
into
rcll
popf
jnp
mov
subb
loopne
add
and
inc
pop
inc
fnstsw
loopne
mov
adc
mov
mov
add
mov
inc
sbb
je
ss
outsb
mov
in
sub
lcall
and
cmpsl
cmp
flds
mov
mov
mov
stos
mov
mov
or
arpl
orl
xchg
inc
imul
mov
dec
and
and
addr16
test
repnz
jp
mov
mov
sub
scas
leave
adc
adc
sub
in
testl
pusha
dec
inc
outsl
xor
in
adc
jg
cld
int
lock
js
mov
cs
adc
sarb
push
push
fmull
sub
aaa
movsb
pop
rcl
ret
scas
movb
add
into
loop
int3
lods
push
xor
dec
and
pop
add
lea
arpl
notl
int
cmpsl
cli
popa
imul
pop
movl
movsl
mov
mov
mov
bound
sti
insl
fisubs
cwtl
rcrb
jb
mov
jnp
out
orb
mov
pop
mov
push
mov
scas
sub
in
jo
outsb
adc
pop
dec
add
and
arpl
enter
sub
sub
add
xchg
add
loopne
enter
lods
ret
ret
stos
sbb
nop
out
cli
cmp
ds
lods
add
and
bound
sub
jns
cwtl
xor
mov
xchg
pop
dec
mov
add
xor
or
or
fistpl
int3
push
enter
xchg
jb
in
loopne
js
je
cmp
adc
add
int3
aaa
inc
hlt
and
push
jmp
push
push
jl
pop
arpl
xorl
xchg
sbb
int3
push
rorl
stos
cmp
daa
push
mov
xchg
mov
lret
mov
adc
das
push
mov
out
sub
push
movsl
fistpll
xchg
cmp
cli
imul
or
rol
movsb
das
pop
rcrb
push
cmp
or
dec
pop
pop
adc
push
push
xor
mov
jo
movzwl
dec
inc
mov
xorl
in
or
add
add
ljmp
xchg
xchg
pop
cld
iret
jno
mov
xor
add
push
enter
test
std
jbe
rcrl
adc
iret
std
insl
xlat
cmp
fmul
adc
lock
popf
repnz
arpl
dec
add
repnz
adc
mov
xor
jle
loop
cld
xor
cld
popf
xchg
mov
bound
and
lcall
popf
enter
sbb
cmp
jb
fnsave
jb
add
jecxz
and
lds
test
ret
mov
mov
inc
lcall
stos
dec
popa
inc
filds
xor
subb
rcll
and
mov
add
mov
pop
pop
cmpsl
iret
dec
sahf
xchg
and
jg
or
cwtl
push
push
add
loop
fsts
mov
insb
sbb
adc
pop
mov
add
es
jb
and
cmp
dec
fdivl
push
xor
nop
popa
mov
xchg
jle
push
lock
dec
sub
or
mov
xchg
cli
shl
sti
mov
outsl
insl
outsl
lea
and
aas
dec
xor
add
xchg
nop
dec
mov
mov
adc
bound
xchg
push
pop
jnp
sbb
aam
test
push
fldl
test
aas
and
add
and
loope
sbbl
out
push
hlt
sahf
cmpsb
pop
push
bound
sbb
mov
jecxz
pop
test
pushf
inc
sahf
fidivs
fs
lods
pop
outsb
pop
push
or
mov
sub
inc
aam
push
sti
call
jl
jnp
jnp
in
loopne
sub
add
addb
fs
or
lods
inc
push
or
or
dec
sbb
in
xchg
fwait
lods
mov
lods
mov
xor
inc
sbb
sub
clc
das
cmpsb
add
dec
sbb
mov
rorl
cmp
mov
xlat
imul
mov
cmpsb
pushf
iret
add
xor
xchg
hlt
lods
jl
cmp
out
sub
out
jbe
sub
sub
push
jae
mov
adc
fnsave
mov
jb
call
lods
in
push
xor
and
push
inc
pop
xchg
xchg
rcl
sahf
call
push
into
xrelease
in
sbb
xchg
xchg
add
push
mov
push
jns
mov
dec
inc
pop
cmp
push
push
fs
in
or
lods
das
aad
int3
in
jp
loop
hlt
or
mov
add
call
inc
cmp
je
cwtl
push
push
xchg
addr16
pusha
shlb
mov
push
cmc
pop
fdivs
gs
imul
jo
stc
pusha
mov
inc
rolb
in
lret
add
fildl
outsl
fst
rorl
xlat
imulb
inc
pop
sbb
icebp
add
sbb
add
ficomps
scas
stos
sub
clc
rcll
int
jns
andl
dec
sti
out
cwtl
jns
fwait
add
aas
clc
pop
xchg
mov
cli
cmc
addr16
and
mov
add
cmp
scas
push
mov
push
pop
dec
dec
and
sub
inc
loope
xchg
into
sbb
sbb
fisubrl
ret
xor
dec
mov
addl
icebp
xlat
pop
adc
dec
cmp
loop
xchg
ret
pusha
inc
mov
sti
or
push
sbb
decl
lcall
lods
jbe
fwait
bound
mov
lock
adc
jge
call
push
sbb
movsl
jbe
add
sbb
sbb
xchg
cmp
dec
jge
jo
ss
inc
ret
adcl
test
clc
movsl
add
mov
and
data16
pop
pushf
sbb
cltd
mov
sub
cmpl
outsl
fbld
mov
lods
inc
adc
sbb
push
jle
cld
sub
push
xor
test
pop
jne
xor
into
and
jmp
pop
mov
adc
push
xchg
xchg
and
aaa
cmp
xchg
xor
aad
xor
sbb
rcrl
clc
repz
mov
push
mov
mov
inc
pop
mov
sub
xlat
cmp
call
fcomps
sub
cs
sbb
jne
jno
pop
lea
andb
push
push
out
adc
out
push
mov
jno
fimuls
xchg
cld
fwait
mov
mov
mov
jg
into
add
push
cmc
and
icebp
or
or
test
std
push
push
adc
add
ret
nop
cmp
sbb
stos
ljmp
push
rolb
popa
sub
dec
rol
add
addr16
and
aad
inc
decl
pop
popa
sbb
ja
jne
jo
and
aas
negl
sbb
cld
push
in
xchg
sbb
movsl
inc
xchg
add
inc
cltd
ds
int3
add
int3
dec
xor
mov
pop
cltd
es
sub
insl
jbe
mov
fistps
outsb
adc
popf
add
jb
push
es
std
sub
arpl
clc
or
cmp
sbb
out
rcrl
lret
sub
lock
jp
cwtl
aad
clc
xchg
adcb
stc
adc
or
sub
cmp
xor
loopne
xchg
outsl
xchg
fisubs
mov
lcall
sti
scas
add
sahf
loop
pop
and
mov
add
add
je
loop
or
out
or
inc
or
fisubrl
inc
in
jmp
fmuls
mov
sub
pop
cmp
and
cmpb
out
xchg
or
aaa
scas
push
leave
ja
shrb
add
ds
add
cmp
add
test
movsb
and
stc
out
scas
xor
popa
mov
fistpl
das
lods
sar
aas
jg
in
nop
ja
mov
sahf
mov
addl
sub
xor
dec
jbe
icebp
aam
mov
lret
inc
mulb
leave
cwtl
fmull
push
shll
add
stc
outsb
push
dec
push
cs
pop
cmp
sti
pushl
sub
sar
jb
fisubs
dec
jl
pop
dec
xchg
lods
jg
sub
jb
js
repnz
push
and
jae
call
fcmovnb
mov
sbb
jbe
fwait
insb
fisttps
out
iret
xchg
pop
push
sub
into
inc
pop
jbe
pop
jnp
cltd
pop
push
jp
sub
mov
jle
dec
xor
insl
aaa
mov
sub
pop
outsl
popf
mov
sub
cld
fiaddl
mov
jecxz
popf
popf
shl
push
xor
int3
mov
xchg
mov
call
and
jno
orl
mov
cmp
lock
xor
push
shl
stos
pop
and
test
sahf
out
in
icebp
sub
sbb
mov
lahf
fidivrs
or
add
das
mov
dec
jge
fwait
insb
adc
xorl
sub
rcl
pop
mov
icebp
pop
xchg
xor
adc
loope
notl
pop
repz
and
push
cli
jno
add
call
in
stos
das
outsl
add
inc
sub
dec
mov
xchg
sbb
sub
sti
mov
sub
and
jae
cld
xor
aaa
idivl
or
and
ds
inc
sahf
cmp
ret
inc
xchg
outsb
fstps
mov
lock
sbb
xchg
mov
mov
scas
or
loopne
xor
loopne
pop
dec
cld
pop
xor
sub
or
jg
rcrl
daa
ficompl
outsb
and
push
insb
or
or
outsb
pop
cmp
bound
jecxz
pop
inc
lds
push
loope
pop
aad
les
jnp
inc
dec
push
push
adc
hlt
movl
push
cwtl
add
mov
in
pop
test
jbe
mov
or
mov
int3
dec
pop
and
call
popl
xchg
cli
dec
aas
outsw
jbe
pop
xor
pop
in
mov
fnsave
add
cwtl
sbbl
jae
jb
lods
mov
out
jnp
lret
sbb
xchg
das
xchg
cmp
add
xchg
xchg
stos
pop
adc
mov
cld
fbstp
and
mov
in
mov
mov
das
lods
xchg
cmp
add
aas
sub
repz
mov
aaa
xor
sub
lcall
sbb
sbb
and
xor
cltd
jle
test
push
mov
sbb
or
add
add
aaa
ljmp
iret
and
xchg
cltd
xchg
insb
rcll
xchg
frstor
loope
pop
imul
inc
mov
push
movsb
into
popf
in
sahf
fcomps
mov
stos
xchg
push
jns
dec
xor
movb
ret
sub
add
insb
lds
mov
mov
mov
mov
mov
mov
mov
adcl
push
inc
aam
xchg
pop
bound
cmc
xor
test
add
pushf
xchg
mov
dec
sbb
pop
dec
inc
mov
pop
repz
dec
or
lret
pop
and
or
stos
inc
add
inc
mov
sbb
lcall
jbe
mov
push
dec
sub
nop
stos
mov
xchg
or
cmpsl
in
mov
sub
ljmp
and
nop
stos
cld
imul
ljmp
mov
ja
push
fldt
dec
sahf
adc
sbb
pop
pop
cltd
sub
ss
incb
nop
inc
xor
add
xor
ret
incl
inc
mov
ds
pusha
mov
in
cmpl
jae
add
das
clc
and
inc
fs
sbb
inc
fwait
or
movsb
xor
fs
inc
mov
out
outsb
jae
scas
jbe
test
xlat
jno
icebp
stos
or
jo
push
jne
stos
sbb
push
push
ja
scas
cmp
jle
push
es
lret
xchg
cmp
in
je
ss
fisubl
pop
jns
sbb
inc
lret
cmp
loope
and
sub
clc
pop
xlat
cs
sub
xor
mov
xlat
cmp
popf
in
stos
jg
cmc
clc
sub
mov
imul
mov
aad
rorl
dec
xchg
arpl
je
pop
add
call
pop
or
jecxz
inc
rcrb
adc
scas
mov
add
push
pop
fidivl
mov
leave
ret
mov
loope
mov
and
mov
fcom
iret
inc
loop,pn
ret
push
sub
ja
call
ss
push
lret
insl
je
adc
imul
mov
pop
jb
lret
cmpsb
sarl
mov
addr16
loopne
or
ja
fisubl
icebp
sbb
sub
xchg
popa
fildll
stos
sub
mov
fs
aas
lcall
pop
jmp
xchg
and
aad
cmpb
pop
lods
ror
int3
sarb
xor
mov
jle
scas
test
lcall
xor
push
inc
cmc
and
leave
add
mov
jno
and
and
insl
adc
xchg
inc
or
in
jns
mov
pop
icebp
push
fdivr
out
gs
or
icebp
sbbb
js
ftst
jb
rorl
push
inc
data16
outsl
out
decl
xlat
dec
fwait
adc
cmp
sahf
push
les
shr
stos
dec
and
mov
shrl
add
fld
cli
outsl
insb
in
loopne
cld
dec
sub
mov
dec
iret
popf
jb
andl
and
or
mov
test
cmp
imul
mov
mov
aaa
scas
cld
bound
jmp
out
xchg
idivb
stc
cmp
xor
out
or
dec
xor
enter
mov
xchg
pop
std
mov
or
scas
dec
and
ss
add
adc
lahf
stos
pop
dec
jmp
jnp
push
filds
leave
mov
mov
or
inc
in
mov
mov
or
jp
mov
cmp
cltd
loope
lods
icebp
loope
insl
in
rcrl
mov
rcr
fwait
xchg
jb
mov
and
fdiv
lret
cmp
gs
insl
xor
stos
cmp
xorb
fiaddl
mov
xchg
xchg
sarb
cwtl
sub
cmp
repnz
and
xchg
sbb
outsl
xchg
lods
sbb
jbe
push
and
mov
sub
ret
popa
movsb
mov
mov
pushf
inc
ret
mov
mov
ficoml
insl
les
cld
test
push
sbb
jns
mov
sbb
stc
es
iret
push
pop
sbb
pop
sar
scas
cli
out
push
cwtl
inc
mov
insl
jo
mov
pop
push
xchg
int3
adc
xor
popf
mov
mov
mov
fldcw
push
iret
gs
lret
adc
idiv
sbb
xor
sub
lcall
cmpsl
nop
pop
or
mov
xor
cld
dec
incl
bound
add
inc
mov
sub
add
in
push
scas
xor
enter
cmpl
aam
lcall
jae
arpl
or
mov
ret
xor
dec
pop
into
mov
push
in
outsl
test
fnstenv
pop
xor
push
sub
mov
iret
mov
adc
aas
mov
xchg
xor
push
aaa
ret
pop
mov
add
scas
stos
cmp
pop
rorl
sub
add
mov
andb
aam
jmp
mov
push
push
js
movsl
dec
jnp
sub
loopne
dec
cmpsb
stos
sbb
fisubs
std
xchg
and
jnp
or
pop
inc
repnz
pop
test
daa
inc
mov
xlat
mov
mov
cwtl
arpl
jmp
xchg
xchg
or
xchg
aad
inc
fstl
sti
popf
jns
mov
outsl
gs
xor
pop
cmp
rcrl
xor
cwtl
jae
je
aas
testb
xchg
sbb
jg
jbe
fildl
xchg
icebp
vphadduwq
and
out
inc
dec
xor
insb
aas
jl
mov
sbb
cli
jmp
xchg
push
fxch
adcl
xor
jo
pop
inc
gs
push
inc
or
lret
add
add
pop
pop
cltd
insl
dec
dec
or
mov
pop
pop
pop
sub
jmp
and
stc
adc
movsb
int
push
les
jns
dec
xorb
sbb
push
sbb
mov
inc
push
mov
mov
lods
inc
push
cmpb
pop
and
push
inc
pop
mov
mov
das
scas
imul
cs
cltd
out
rcl
ds
xor
xchg
xor
cmp
rol
repz
test
pushf
jmp
dec
out
andl
nop
mov
inc
mov
shll
mov
or
in
loopne
movsl
xlat
xchg
test
mov
inc
ja
cmp
bswap
adc
and
cmp
jb
movsb
je
test
int3
inc
cmpsb
aaa
xchg
adc
clc
lea
test
fidivrs
loope
lret
sbb
xchg
push
mov
shrd
sti
ret
xor
out
shl
ds
jle
add
shl
lock
cs
int
push
xor
insl
int
push
push
xchg
cmp
fmull
frstor
in
fwait
in
shll
jl
out
sarb
repnz
lock
mov
shlb
fistl
jp
xchg
add
ret
mov
pop
int3
push
cltd
mov
insl
jbe
nop
or
adc
test
dec
das
or
add
xchg
adc
das
cld
clc
std
out
xor
mov
inc
test
sub
xor
or
xor
ficoml
xor
mov
and
jb
add
gs
fcoml
in
push
pop
push
insb
orb
test
pushf
lea
je
push
imul
rolb
dec
push
fmuls
aaa
sbb
pop
sub
and
ljmp
icebp
test
xchg
mov
add
fwait
add
iret
int
js
jl
in
mov
and
int
ja
insl
mov
push
fnstsw
imul
jl
lret
mov
sbb
pop
jmp
lret
jecxz
pop
or
or
dec
push
pop
xlat
mov
jns,pn
dec
sbb
and
cli
or
fwait
mov
mov
add
rcrb
lret
xchg
fs
xchg
sub
shl
addl
test
xor
adc
in
int3
repnz
xchg
add
ret
sub
stos
jo
lods
jmp
pop
add
xor
sub
mov
stc
ret
bound
push
xchg
pop
cmp
mov
outsl
mov
inc
sub
not
xor
ja
in
xor
stc
mov
jle
movl
test
lret
aaa
fadd
mov
inc
sbb
cli
inc
mov
mov
push
stos
lods
dec
rcr
push
rcr
push
insl
cmp
cmp
lcall
test
cmp
arpl
add
jae
push
pop
in
sub
xlat
out
add
popa
xor
scas
bound
jns
xor
repz
sub
sub
mov
rorl
or
je
bound
inc
loope
lahf
mov
pop
lods
out
xor
jecxz,pt
lret
into
outsl
pop
mov
mov
cmp
sbb
mov
gs
mov
cmp
pusha
imull
ss
jb
push
in
testl
jne
jno
rclb
outsb
subb
or
in
inc
lahf
orl
dec
mov
movsb
rcl
clc
xchg
mov
jle
pop
ror
loope
xchg
cld
xlat
or
mov
mov
repnz
sbb
ljmp
dec
cmpsb
adc
mov
stos
cmp
in
push
ficoml
rolb
clc
scas
insb
pop
dec
dec
mov
jo
cmp
insb
mov
addl
movsl
repnz
and
mov
push
push
dec
daa
dec
mov
iret
ljmp
cmp
mov
push
cmp
popa
xchg
arpl
pop
mov
xchg
cmpsb
popf
dec
cltd
cmc
jmp
addb
add
sbb
lock
cmp
into
stc
out
test
shlb
call
inc
dec
pop
aad
lcall
xchg
push
dec
mov
fnstenv
cld
movsl
and
loopne
mov
leave
or
jecxz
movl
imul
ljmp
xchg
mov
fidivrl
lea
scas
add
cmp
mov
mov
push
dec
add
inc
push
out
je
shll
arpl
pushf
jecxz
push
jnp
xchg
lret
pop
mulps
mov
cld
sbb
jo
orl
imul
scas
dec
cli
mov
pop
insl
aad
ljmp
pop
xlat
jp
adc
add
push
mov
xchg
std
cmp
mov
insl
or
lds
mov
imul
mov
dec
or
pop
mov
jmp
out
mov
mov
or
movsl
sete
mov
jb
dec
mov
xchg
jg
jl
push
pop
sbb
dec
ret
jns
inc
rolb
fs
xorl
loope
cli
mov
jmp
enter
cmpsb
jno
dec
or
mov
mov
dec
adc
lods
dec
scas
dec
popf
xchg
sti
xor
jbe
sar
mov
cmp
mov
and
jnp
xchg
js
sbb
push
jo
ret
shlb
into
mov
add
jl
je
xchg
and
hlt
insb
cmpsl
mov
xchg
sbb
pop
jno
insb
loopne
mov
daa
mov
repz
popf
push
adc
and
mov
loopne
cltd
jp
fimuls
popa
imul
and
subb
mov
fisubs
dec
test
sbb
stos
addr16
mov
push
mov
nop
in
inc
mov
adc
lods
js
mov
pop
jecxz
in
adc
insb
je
out
sbb
mov
in
dec
aad
xchg
and
cmp
imul
and
divl
mov
outsl
mov
movsb
out
jo
adc
mov
cmpsl
sub
inc
adc
mov
or
or
jle
sbb
sti
icebp
lds
xchg
mov
pop
mov
roll
mov
sbb
inc
cmpsb
add
shrl
jecxz
push
mov
enter
mov
call
jo
lcall
out
fistpll
push
or
jp
mov
inc
push
lahf
xlat
cli
lea
xor
fs
and
adcl
int
sbb
or
mov
inc
jge
jno
mov
int3
mov
add
jo
addr16
dec
shll
adc
popa
repz
outsl
jle
lret
dec
lock
push
movsb
cld
and
mov
aas
add
out
push
sbb
mov
aam
jl
pushf
aad
mov
out
pop
push
cs
cmp
fcoml
pusha
fisttpl
not
stc
dec
cmpsb
xor
repnz
in
push
lds
inc
aas
and
imul
lret
jg
mov
mov
adc
or
test
dec
xchg
cmpsb
es
ds
hlt
xchg
cmp
xchg
sbb
xchg
cs
mov
xor
sbb
mov
add
incl
rclb
lock
lea
es
lea
cwtl
out
lods
es
xor
loopne
jg
daa
cmp
xor
cmp
pushf
cmp
daa
jae
mov
mov
or
or
fists
aam
jns
inc
in
mov
addr16
xor
or
insl
ds
mov
fnstsw
ret
out
out
adc
pop
and
sar
mov
push
mov
ficompl
jl
mov
mov
cmp
call
or
or
cwtl
cmpsl
cmp
loop
push
loop
mov
lea
stos
scas
jp
es
push
pop
shll
push
dec
sbb
jno
daa
test
pusha
xor
inc
add
cmp
pop
mov
mov
push
push
pop
inc
cmp
jae
jle
add
sub
scas
shl
fsubrp
pop
jb
lahf
lcall
mov
fisubrs
cmp
add
xor
fldcw
jae
mov
adc
push
lock
sbb
nop
dec
call
sbb
cwtl
inc
adc
cmp
ret
push
dec
cmpl
pushf
rcl
loope
aas
mov
jmp
movsl
or
push
or
sti
jne
mov
pop
pop
pop
lcall
push
jne
push
add
sbb
mov
imul
outsl
ret
dec
nop
hlt
adc
mov
adcl
mov
cmp
lret
rcl
jne
and
push
in
nop
pop
jno
movsb
add
aam
mov
push
rorl
in
test
iret
popa
adc
mov
push
inc
insl
mov
sub
pop
sub
dec
mov
xchg
movsl
mov
xchg
jne
pop
mov
imul
out
mov
mov
cld
jbe
stos
aad
aad
rolb
sub
push
mov
jecxz
cli
popa
dec
out
push
push
inc
sbb
arpl
mov
cwtl
sarb
jnp
pop
dec
loope
push
sti
pop
mov
lcall
arpl
clc
pop
sbb
ss
xor
es
xchg
or
cmpsl
dec
mov
scas
xchg
adc
xor
stc
mov
cmpsb
dec
mov
jae
or
cmpsl
dec
xchg
add
outsl
ret
xor
dec
mov
shll
iret
ror
mov
inc
jle
adc
ja
roll
jp
aam
repnz
lods
push
sar
push
leave
popf
mov
cli
jbe
add
ljmp
and
frstor
subl
divl
xor
lods
mov
xorb
dec
dec
cmp
fcmovnbe
cmp
sbb
jge
shrl
lret
push
ja
adc
sub
in
test
mov
or
inc
mov
adc
inc
jmp
inc
repnz
mov
shll
pop
add
jecxz
mov
std
sub
or
stos
stos
mov
mov
shl
out
aas
add
repnz
push
dec
jg
cmp
pop
jbe
lods
xchg
sub
adc
pop
repz
pop
and
cltd
jae
sub
imul
push
cmp
add
outsl
push
lcall
std
sahf
and
lret
mov
and
mov
ret
sbb
adc
mov
iret
jo
jp
xchg
shlb
jbe
and
fwait
pop
addb
pop
sub
xor
daa
lcall
daa
mov
or
repz
fmull
mov
sbb
xor
test
sub
mov
and
in
lock
jl
les
lods
inc
inc
mov
push
sub
and
test
and
dec
fwait
xchg
mov
add
iret
pop
outsl
fsubs
testb
outsb
xchg
mov
sbb
inc
mov
fwait
push
mov
pop
aaa
stos
xor
sub
jnp
in
adc
adc
std
nop
lcall
mov
aas
dec
pop
xor
cmpsl
and
sub
mov
cli
sbb
in
sbb
orl
out
mov
fs
lds
push
repnz
int
mov
sbb
sub
iret
jecxz
jne
adc
test
add
add
cld
test
arpl
ret
out
lds
fcompl
cmp
adc
js
push
test
xor
mov
aaa
rclb
ss
test
fs
xchg
cmpl
adc
pop
rcrb
cmp
rclb
lret
insl
push
addb
out
ror
sarl
add
rorb
xor
mov
mov
or
hlt
cmp
mov
mov
adc
daa
aaa
scas
jmp
add
add
pop
xchg
inc
add
mov
fnstsw
xchg
jno
rorb
out
mov
xchg
enter
add
sahf
fs
outsl
je
xor
les
imul
fdivrs
sub
jae
stos
in
int
sahf
daa
xchg
or
sahf
hlt
pop
jns
loope
movsl
sub
pop
adc
cmp
mov
loop
push
or
fisttpll
outsb
jecxz
outsl
xor
mov
mov
lds
push
ret
push
push
mov
xchg
aam
inc
outsl
jg
and
or
shll
xchg
push
pop
jae
xchg
cmp
mov
ja
xlat
outsl
inc
mov
clc
mov
inc
cs
lret
pop
push
or
mov
xchg
push
jne
xor
dec
pop
enter
push
ss
jb
dec
pop
repz
sub
imul
jl
test
out
mov
inc
ror
xchg
lret
ja
sti
sub
test
ja
outsl
lods
mov
sbb
jmp
add
adc
mov
cs
dec
jge
dec
pop
sbb
test
outsb
loope
dec
adc
cmc
stc
in
xor
jne
bound
xor
outsl
je
inc
das
mov
push
dec
imul
data16
icebp
call
outsl
fdivp
test
nop
inc
shrb
jmp
dec
fsubrl
xchg
pop
or
and
jae
rcrb
stc
call
rorb
cmc
mov
imul
xchg
or
lods
mov
jg
gs
out
jmp
mulb
pusha
push
inc
es
fbstp
mov
pop
cltd
inc
adc
mov
aad
inc
loop
mov
and
cli
fisttpl
xchg
aad
fwait
mov
test
lods
jl
and
adc
push
inc
fwait
inc
mov
add
int3
pop
and
or
arpl
cmpl
inc
push
cmpsb
mov
jns
insb
test
mov
xor
dec
int
and
jnp
cmp
in
test
pop
and
jno
push
and
lret
ljmp
inc
adc
loop
push
aas
es
xchg
aam
dec
ret
push
inc
test
push
cmc
inc
jmp
daa
jb
rorb
mov
sbb
hlt
push
xchg
jge
cmp
jecxz
mov
xchg
mov
pop
pop
repz
jns
sub
mov
push
xorb
int
mov
sbb
push
mov
pop
xchg
push
scas
jbe
xor
mov
xchg
jns
loop
call
adc
inc
outsb
cmc
jle
cmp
and
scas
popa
mov
insl
pop
popa
enter
push
sbb
push
fbstp
mulb
pushf
inc
cmp
xchg
pop
jp
adc
dec
into
icebp
clc
mov
arpl
lea
aam
jp
pop
outsb
sbb
fiadds
cmpsb
filds
push
sub
clc
lcall
cmp
push
and
mov
or
sub
adc
pop
mov
inc
test
mov
lahf
sub
dec
loop
outsb
push
imul
sub
cld
ss
dec
fbstp
push
int3
pop
aas
add
cmp
jle
mov
lret
inc
mov
ss
dec
cmp
add
mov
inc
hlt
pusha
add
cmpsl
jns
lcall
ret
popa
sbb
mov
aad
jmp
jge
xchg
push
lahf
xor
fiaddl
ret
mov
aas
aad
loope
adc
or
mov
push
mov
popa
fisubs
dec
lods
xor
data16
mov
pusha
hlt
sbb
cmc
cmpl
push
inc
imul
adc
inc
out
sub
das
pushf
add
inc
jno
pop
push
lcall
aas
lock
loopne
sub
repz
outsb
inc
xchg
negb
push
xchg
idivb
xor
add
leave
mov
mov
jmp
pop
out
mov
and
inc
pusha
inc
mov
and
movsl
jmp
jg
faddl
mov
mov
mov
inc
mov
jae
jl
fsts
icebp
dec
adc
ds
aas
mov
mov
cmp
mov
inc
or
out
pop
mov
inc
mov
cld
fstpl
mov
xor
cltd
inc
add
enter
dec
es
js
repnz
pop
pop
push
jg
xchg
add
lcall
inc
aad
dec
add
xchg
jne
fucom
fidivl
sub
ret
loope
push
cmp
pop
inc
aad
or
or
push
sub
js
pushf
xchg
sub
cmpsl
add
adc
sub
jne
es
jecxz
mov
mov
jno
addr16
sub
xchg
test
ret
mov
sti
andb
sbbb
fcoml
and
mov
mov
shll
xor
mov
add
pop
jecxz
inc
cs
sbb
xlat
rcll
mov
sbb
inc
sub
call
int
jge
scas
mov
mov
mov
mov
sub
adc
mov
jmp
xorl
das
movl
sub
xor
push
jge
xchg
adc
repnz
hlt
push
test
int
cmp
shl
lret
jle
cmp
sti
fcompl
adc
cmp
cmp
loop
xchg
es
cli
out
sbb
arpl
mov
stos
inc
jmp
cld
mov
pop
push
mov
out
mov
sub
push
cli
adc
mov
adc
push
test
xchg
mov
lods
fs
add
dec
pushf
sub
out
xchg
or
pushf
shrb
dec
mov
xchg
sub
neg
dec
inc
xchg
sbb
rcrb
lock
sbb
sbb
pop
ficoms
mov
mov
je
mov
lea
in
lahf
stos
add
sbb
jmp
and
les
iret
scas
addl
push
stc
pop
inc
sub
mov
xor
xor
pop
jge
inc
repnz
mov
and
hlt
sbbl
mov
xchg
lea
push
mov
mov
hlt
cld
into
sarl
add
out
add
push
fcmovbe
lret
ret
adc
mov
push
push
mov
mov
fwait
xchg
iret
inc
ror
scas
add
dec
int
ja
mov
push
mov
cli
add
or
xchg
dec
cmp
sbbl
sub
fidivl
hlt
sub
inc
lods
icebp
cmpsb
xchg
cmp
cld
out
out
and
int
sbb
xchg
and
push
leave
scas
shll
out
sub
addr16
and
mov
sbb
shll
push
int
out
mov
and
jne
xor
mov
cltd
nop
cmp
and
jg
push
cmpsl
jo
cmp
jae
dec
scas
cmp
or
inc
insl
push
or
mov
mov
mov
jmp
mov
push
daa
sti
dec
cmpsl
inc
inc
mov
cli
and
repz
push
push
loopne
adc
sub
fmulp
das
je
or
loope
xchg
push
pop
popf
push
imul
mov
nop
dec
lods
jp
xchg
jb
lods
push
sub
adc
push
aaa
in
ljmp
out
sub
test
fucomp
inc
rol
inc
push
dec
std
lock
data16
adc
je
xchg
cmp
pop
push
in
push
mov
dec
add
or
shrl
iret
orb
jne
pop
cmc
inc
cmpsb
mov
cmp
jmp
add
and
dec
push
je
rorl
int3
out
pop
dec
dec
popf
or
aad
adc
pushf
pop
lock
xchg
push
jns
cld
add
jbe
push
lods
xorl
test
fildll
sub
inc
mov
pop
sub
push
leave
add
push
jo
aaa
dec
test
fbstp
cld
popa
adc
dec
pop
sbb
in
loope
or
xor
inc
fnsave
fwait
imul
das
lea
sub
jnp
std
cwtl
fwait
scas
adcb
xchg
je
int3
in
popa
push
dec
ss
nop
adc
fdivrp
add
stos
xchg
jp
add
lcall
lahf
inc
outsb
mov
cmp
enter
aaa
pop
jne
ret
push
addr16
pusha
inc
adc
repnz
jae
sbb
cmp
mov
mov
jbe
mov
outsb
divl
mov
cmc
push
mov
adc
mov
lods
sahf
jnp
pusha
in
cmp
mov
pop
sub
stos
mov
jne
push
sbb
aas
pop
test
pop
or
mov
jp
shl
pop
xor
insb
cmp
mov
pushf
pusha
mov
jb
and
or
fdiv
inc
shll
push
adc
push
xchg
repnz
das
mov
in
mov
pop
sbb
daa
adc
adc
ret
call
pushf
shll
sbb
out
fisubrs
jle
scas
movsb
xor
or
dec
call
test
dec
inc
das
sbb
cli
fdivr
add
das
dec
jge
bound
dec
rcrb
push
jmp
inc
pop
adc
sbb
cld
mov
sub
xor
xor
enter
mov
mov
pop
fstpt
scas
mov
mov
mov
movsl
lds
dec
jne
repz
mov
xchg
and
gs
fimull
test
xor
pop
add
sahf
out
enter
jle
aas
pop
lahf
xchg
ret
sbb
adc
or
push
inc
jmp
scas
lods
cmp
mov
pushf
aas
frstor
int
mov
xlat
sub
pop
pop
add
stc
out
jl
jne
sti
pop
jecxz
xor
test
mov
xor
mov
pop
xor
inc
pop
mov
cmpsb
scas
mov
pop
push
stos
pop
icebp
fdivl
mov
pop
out
jns
test
mov
mov
mov
lock
sbb
loop
sbb
sar
js
cs
test
mov
or
push
scas
icebp
xchg
and
mov
or
lock
loopne
push
mov
roll
jcxz
out
mov
push
inc
and
or
xor
test
rorl
mov
clc
jbe
cmp
sahf
es
sti
lahf
pop
ds
sub
lea
mov
sbb
fdivr
mov
mov
sub
fcomps
xor
and
or
enter
in
xor
jl
pop
aam
sbb
pop
push
jmp
fisttpll
push
xor
mov
push
lock
or
xchg
je
pop
adc
sbb
shl
xor
cmp
cmp
jo
dec
push
or
sahf
mov
mov
out
mov
popa
cmp
add
and
fstpt
ficomps
push
int3
inc
cmpsb
outsb
xchg
push
xchg
cmp
jb
or
jb
insb
and
fcompl
rcll
add
dec
adc
ds
pop
mov
jmp
mov
inc
and
or
xor
std
pushf
xlat
jne
adc
aaa
dec
rcrb
cld
insb
sub
xor
mov
sahf
imul
jmp
lcall
mov
inc
shll
sub
cmp
fucom
jmp
imul
pop
fimull
sti
cmp
mov
push
hlt
arpl
sub
dec
lods
lcall
data16
dec
jmp
mov
movsl
test
mov
dec
and
adc
aam
xchg
outsb
pop
mov
dec
bound
dec
inc
scas
pop
push
jne
in
fs
xchg
test
fwait
push
and
outsl
js
repz
in
mov
mov
psrlw
mov
ret
adc
divl
lahf
call
addr16
fadd
sbb
les
xchg
xchg
add
fdivp
inc
int
mov
jmp
gs
xchg
jge
mov
fcompl
fisttpl
and
lret
loop
scas
addr16
cmp
mov
ffreep
outsb
enter
jmp
add
xchg
mov
mov
das
pop
add
lret
push
mov
roll
shrl
lods
mov
jp
xchg
or
mov
sub
push
cltd
insb
push
add
cmp
hlt
and
clc
add
dec
out
jmp
and
test
cmc
cwtl
push
rcrb
pop
daa
and
sbb
mov
xor
je
xchg
aam
mov
inc
insl
cld
cwtl
push
ss
out
hlt
mov
loopne
inc
jp
xor
gs
adc
and
out
xchg
cmp
xchg
and
pop
stos
inc
sub
subb
xchg
stos
outsl
jnp
ret
stos
sbb
inc
mov
ja
push
fdivs
pop
out
incl
push
and
mov
out
ret
inc
xchg
fwait
cmp
sbb
shrl
daa
jnp
mov
xor
xchg
dec
xchg
push
mov
mov
daa
cmp
testb
push
shlb
add
stos
mov
mov
jns
mov
mull
pop
fisubl
mov
sub
push
add
mov
xlat
sub
fucom
fwait
rorb
pushf
int3
mov
fldt
fcomp
lret
filds
outsl
dec
mov
adc
cmp
int
in
pop
or
sahf
in
mov
push
mov
test
imul
pop
sub
fdivs
clc
mov
or
mov
adc
push
fsubl
mov
insl
cwtl
and
scas
test
inc
cmpsb
loop
push
das
jnp
dec
push
sbb
jl
cli
loopne
push
loop
repnz
sub
adc
sbb
mov
inc
and
xlat
or
ret
dec
addb
lods
icebp
or
aas
call
out
jb
repz
sti
xchg
xlat
mov
jge
add
xor
insl
inc
dec
mov
insb
jo
or
and
out
pcmpgtd
inc
cmp
mov
push
testb
and
aas
xor
push
adc
jle
fcomip
adc
mov
es
nop
or
adc
xor
imul
dec
lcall
dec
jecxz
test
mov
mov
dec
sub
fsubrs
sarb
ret
stc
and
es
arpl
mov
push
fidivrs
mov
cmp
dec
je
adc
lret
out
rorl
loop
lret
pop
es
cmp
mov
mov
xchg
pop
mov
rolb
in
inc
mov
xor
mov
cmp
mov
inc
sbb
mov
in
ds
inc
dec
adc
jmp
fcomip
push
mov
push
push
xchg
push
mov
into
mov
stc
jg
pop
push
mov
adc
push
or
mov
dec
cltd
daa
adc
sbb
jbe
lcall
ret
push
add
push
mov
enter
in
stos
sub
packsswb
add
cmc
fdivr
insb
sbb
cmpsl
int3
and
mov
mov
xchg
loope
data16
or
or
push
jnp
jno
sub
scas
xor
mov
xorl
cwtl
mov
jp
lret
jb
mov
push
jg
cmpsl
out
or
jmp
cld
add
std
mov
sbb
or
stc
jb
addr16
pop
pop
movsb
lock
sub
imul
sbb
icebp
xor
add
fmul
jbe
push
shrb
jl
sub
popa
inc
xlat
imul
xchg
add
dec
mov
clc
cltd
and
inc
aas
movsl
or
pushf
fwait
dec
mov
mov
stos
dec
and
adc
mov
lods
cmpsb
mov
mov
or
sti
adc
dec
adc
in
cltd
fmuls
loope
push
int3
xor
jmp
xor
adc
xchg
add
pop
xor
sub
inc
mov
dec
pop
or
cld
cmp
adc
icebp
adcb
rorb
xor
std
adc
pop
fwait
jmp
cs
jb
cld
fwait
push
orb
mov
inc
call
mov
jecxz
mov
mov
sarl
jmp
mov
pop
inc
add
into
or
jl
xchg
loopne
mov
xchg
pop
lds
rcll
mov
jecxz
push
xchg
fstl
add
add
test
aas
add
mov
xor
aam
mov
push
mov
pop
out
stc
fcomps
jp
dec
cmp
mov
jno
xchg
or
cmp
mov
push
mov
out
mov
ret
fisttpll
cld
nop
push
mov
mov
cmpsl
rcrl
pop
aam
xor
push
xchg
bnd
mov
xchg
mov
mov
push
mov
inc
loope,pt
mov
js
lret
push
pop
dec
or
mov
repz
pop
and
push
xor
stc
sub
bound
inc
inc
mov
pop
insb
cmpsb
mov
mov
repz
xor
rorb
mov
out
jge
fxch
icebp
mov
and
sub
sbb
push
lods
cmp
fstps
mov
faddl
bound
or
lods
jmp
xorb
call
mov
sbb
mov
pop
int
cmp
mov
inc
sbb
cld
into
add
out
bound
stos
sbb
inc
or
sbb
dec
push
xchg
leave
gs
and
mov
or
ja
ljmp
lds
pop
imull
sub
out
popf
xor
mov
movl
clc
jns
daa
push
jo
sbb
sub
das
ja
adc
cmp
test
stc
sub
test
sbb
lret
mov
adcb
out
cmp
iret
in
movsl
outsb
pop
sbb
xchg
shlb
inc
loope
xchg
push
mov
cmp
jno
outsb
mov
lds
test
cli
test
mov
jmp
out
cmp
icebp
cs
rorl
sbb
pusha
push
add
ret
pusha
lret
xor
inc
scas
mov
jae
sahf
insl
in
pushl
leave
out
je
inc
outsb
setae
test
enter
jge
push
lods
into
std
and
pop
lods
adc
push
xlat
outsb
adc
sub
xor
adc
bound
imul
fcmovne
rcll
pop
out
testl
jecxz
xlat
mov
push
mov
fwait
lea
sub
pop
int3
stos
sarl
int
push
out
adc
xchg
or
sbb
or
repz
xchg
loop
clc
pop
fildll
or
js
and
inc
cmp
call
cs
aam
popa
jo
dec
imul
xchg
std
push
mov
fistl
adc
enter
adcb
shr
or
pop
pusha
mulps
cmp
int3
ja
lcall
mov
insl
jbe
dec
dec
and
pop
xchg
mov
sbbl
push
stos
push
std
push
std
std
cs
fimull
fcomps
sahf
les
aas
adc
cmpsb
stos
sub
or
das
cwtl
sub
and
idivb
dec
fidivs
cltd
jno
imul
mov
adc
mov
jp
sbb
ret
gs
fcoms
pop
cltd
adcl
outsb
or
shlb
mov
push
int
xorl
add
xorb
lea
test
dec
sub
mov
repz
out
ficoms
scas
adc
push
mov
inc
lret
lea
std
xchg
pop
cwtl
mov
aad
nop
or
cwtl
lods
lods
mov
inc
jle
hlt
push
ljmp
xchg
inc
or
cmp
push
pop
ja
mov
imul
out
aaa
test
jne
xor
sbb
jnp
or
pop
sahf
jae
sbb
and
sbb
inc
mov
mov
mov
dec
jo
setnp
jle
imul
imul
jp
loope
popf
mov
lret
dec
jne
in
dec
xor
ja
mov
sbb
in
jnp
jle
aam
xor
out
sahf
or
adc
leave
mov
push
xor
ljmp
stc
pop
add
popa
scas
daa
test
enter
or
xor
aam
pop
mov
xor
jecxz
mov
fnstenv
mov
xchg
loopne
xor
shrb
xchg
pushf
xor
lock
out
xchg
mov
xor
adc
jno
mov
jb
jbe
dec
jp
dec
jno
pop
push
lods
out
jbe
mov
int
pop
dec
aad
sarb
pop
pop
lea
xchg
sbb
push
dec
rorl
and
lret
jmp
mov
ftst
imul
rol
cs
fnsetpm(287
popf
fiadds
repz
sub
xchg
es
sub
adcb
bound
shlb
leave
and
into
js
sub
outsb
shrl
movsb
test
test
cmp
cmp
les
nop
hlt
jle
sub
hlt
mov
mov
mov
rcll
sub
imul
sbb
or
inc
cmp
jp
lea
sbb
outsb
je
jecxz
and
sub
pop
jbe
mov
xchg
lods
shr
cmpsl
outsl
mov
adc
loopne
cmp
pushf
push
push
cmc
into
adc
stos
fildl
dec
stos
dec
push
arpl
pop
cld
rcl
lcall
xchg
or
mov
gs
in
sbb
cltd
movsl
fcmove
subl
pop
leave
repz
add
sbb
push
push
add
mov
add
gs
add
jo
or
or
push
sahf
stos
arpl
sub
add
rol
sbb
aad
add
adc
nop
pop
xor
mov
lcall
push
jno
adc
es
mov
scas
adc
dec
inc
rcll
imul
sbb
jne
lahf
cmc
rcll
and
ficomps
mov
mov
rolb
and
inc
andl
dec
in
mov
es
iret
pusha
xor
mov
arpl
jp
jge
cmp
inc
mov
and
mov
cmp
movsl
int3
mov
pop
add
mov
jmp
mov
inc
icebp
cmp
hlt
sbb
cmp
push
pop
leave
outsb
cmc
fisubs
mov
sub
sbb
popa
adcb
repnz
das
aad
andb
push
lret
pop
jmp
test
xor
lahf
add
dec
adc
sub
push
popf
cmpsb
in
pop
in
pop
pushf
inc
incb
and
daa
lea
inc
xchg
pop
fnstenv
outsb
push
mov
fisubrl
fists
and
mov
xor
test
xchg
nop
lret
or
push
adc
daa
pop
imul
dec
outsl
aas
out
add
jns
in
std
pminub
in
ds
lret
fistpll
ret
es
mov
and
dec
push
sbbl
mov
je
int
mov
fwait
jl
lcall
sar
jp
repz
or
adc
or
pop
notb
in
xchg
cmp
xlat
push
mov
aam
stos
inc
and
jmp
imul
insl
jl
loop
in
mov
into
cmp
jbe
jle
pop
aas
and
pushf
ds
sbb
sub
and
cmp
les
fwait
or
cmp
push
push
push
jae,pn
pop
rcrl
mov
push
or
js
xor
add
shlb
pushf
testb
je
in
cmc
mov
rcrb
xor
test
lods
mov
ja
fwait
mov
fs
stos
fisttps
aad
xlat
xlat
sub
pop
cmp
rolb
fsub
ret
hlt
xchg
adc
inc
jge
adc
enter
inc
imul
jbe
sbb
inc
imul
sahf
mov
and
pop
lcall
xlat
mov
sti
pop
in
cs
and
push
arpl
sahf
bound
push
cmp
adc
movsb
popa
mov
je
jo
inc
in
fwait
data16
mov
ret
popa
mov
pop
pop
mov
ret
push
sbb
xlat
pusha
sahf
repz
popa
popf
mov
pop
and
jge
mov
cli
mov
fcmovu
icebp
adc
fwait
inc
mov
into
mov
cmp
in
sub
rorl
dec
sub
in
loopne
adc
push
ja
and
js
mov
repz
mov
aad
fdivrs
inc
and
cmpb
shrb
ljmp
dec
in
push
xchg
aad
xlat
lods
inc
xchg
sub
les
xor
clc
jae
mov
inc
enter
cmp
push
pop
xchg
dec
sub
notl
jl
sahf
sahf
or
mov
dec
popf
cld
inc
xor
mov
adc
call
and
movsb
jnp
mov
arpl
movsl
sub
fstpl
xor
shrl
mov
add
test
rorl
cmpsl
inc
pushl
sbb
cmp
pop
dec
int3
scas
dec
mov
dec
dec
aaa
xchg
pop
test
mov
mov
je
jns
mov
shl
mov
or
or
inc
cmpsl
pop
cld
outsb
sbb
cltd
xor
dec
mov
shl
les
xchg
push
and
out
mov
test
mov
inc
adc
mov
mov
sub
fstpl
ret
sarl
cs
cmp
mov
xchg
adc
out
sbb
mov
fld
jb
fimuls
int
pop
jl
xor
mov
lods
push
push
xchg
out
add
fcmove
popl
cld
push
pop
call
js
mul
mov
dec
ja
lds
fbstp
arpl
jp
inc
cmp
xchg
and
fwait
outsl
lahf
sub
jmp
xchg
and
repnz
mov
sub
cmc
jb
inc
scas
pop
mov
ljmp
push
int
outsb
aaa
dec
xor
mov
rcrb
cli
pop
add
mull
shrl
fcoms
cbtw
gs
pop
in
jle
cmp
inc
insb
xor
imul
sahf
inc
shrl
jge
add
test
cmp
mov
daa
flds
jb
jb
xor
fs
movsl
mov
lahf
jecxz
inc
xchg
mov
cmpb
scas
xor
mov
xchg
or
xchg
das
jg
xchg
ljmp
je
mov
loop
in
in
or
fcmovnb
cmp
cmc
and
sbb
ja
sbb
stos
out
sbb
lret
stos
addb
in
jbe
loopne
mov
insb
jb
xchg
enter
xchg
sbb
pop
or
sbb
lock
aam
sbb
sbb
adc
xor
inc
js
or
rcr
fdivs
pusha
imul
push
pushf
mov
fildl
loop
loope
sub
decb
or
pop
pop
loopne
ss
xchg
push
cmc
mov
add
ss
cwtl
out
add
and
je
clc
jae
mov
xor
cmpsl
push
mov
sbb
lock
sub
adc
mov
ja
insb
sub
add
insl
dec
inc
push
lcall
mov
jns
jecxz
and
jno
jl
mov
out
xor
push
jno
fwait
pop
stc
mov
jp
cmp
movsl
stos
sbb
cmp
jg
mov
or
outsl
lock
clc
lea
adc
and
push
xchg
test
jp
inc
in
sarl
es
inc
out
push
xor
pextrw
push
jno
mov
xchg
push
adc
xchg
popf
jmp
imul
mov
jp
push
mov
daa
fiaddl
cltd
sbb
lods
dec
dec
jmp
in
and
mov
or
shl
sub
nop
sub
incb
and
int3
xor
inc
arpl
mov
or
xchg
arpl
cld
hlt
jle
mov
inc
dec
mov
push
xchg
xor
fs
ret
icebp
andl
xchg
js
popa
xchg
out
mov
xor
negb
jp
sbb
cltd
ljmp
mov
xchg
or
push
stc
sub
xor
mov
mov
push
inc
xchg
scas
push
xchg
pushf
lahf
jmp
stos
lods
ss
pop
rcrl
pushf
arpl
insl
fdivrl
ret
insb
push
decb
bound
cwtl
rorb
pop
add
aam
sub
iret
dec
cmp
sbb
fs
xchg
xorl
xor
shll
and
mov
xor
xor
sar
mov
mov
lea
mov
pop
je
loop
lds
std
push
adc
or
sarb
dec
push
dec
mov
fstps
and
out
xchg
xlat
mov
fildll
sbbb
mov
clc
push
jae
cmp
pop
mov
incl
jg
push
cmpsb
rorb
insl
pop
imul
push
push
movb
outsb
xor
lods
mov
cmp
push
xor
roll
jecxz
jbe
lds
inc
or
cmp
jp
cmp
pop
pusha
loop
mov
subl
mov
sub
push
sub
pop
fwait
int3
jge
into
fcmovb
add
xor
movb
xchg
or
xchg
repnz
inc
sbb
mov
movsb
xchg
dec
scas
mov
mov
or
les
cmp
repz
or
in
push
xchg
rcll
aad
out
add
loop
test
inc
lods
inc
cmp
add
xchg
jbe
push
call
rcll
in
jne
rolb
ljmp
loop
jb
jg
fidivrs
cmp
push
sbb
shrl
mov
mov
les
aaa
dec
cmpsl
lret
pop
cltd
xchg
aam
jecxz
mov
test
lcall
stc
pop
js
push
mov
cmc
sbb
popf
cmpsb
and
push
jmp
xchg
push
add
jl
inc
pusha
push
clc
cmp
imul
sbb
or
cwtl
dec
adc
xor
jnp
adc
iret
popa
lret
fwait
js
or
dec
jge
das
xchg
vpshab
mov
xchg
mov
xchg
mov
imulb
push
xchg
cs
cmp
inc
in
sub
push
xor
call
into
add
out
lret
mov
imul
mov
cmp
xchg
aad
or
rolb
sbb
fwait
sbb
into
psubusw
stos
ss
testb
xchg
push
jb
mov
pop
clc
leave
push
adc
push
xchg
xchg
jl
add
out
fsts
movsl
sbb
lock
scas
in
fs
add
sub
in
mov
and
fwait
mov
fdivs
leave
pop
lock
std
fidivrs
lret
push
pop
mov
sti
dec
stos
lret
cmpsb
cmp
adc
mov
mov
fldl
dec
xlat
int3
lods
xchg
pushf
xchg
pop
mov
mov
lahf
jg
sbb
push
lea
daa
add
mov
add
cmpsl
mov
pop
add
pop
loop
jne
mov
sub
add
cs
in
push
pop
pop
inc
es
pop
cmpsb
rol
movsl
aam
inc
sub
shll
and
inc
mov
ret
and
jmp
out
adc
js
dec
push
in
and
dec
daa
and
aad
push
pop
and
dec
popa
nop
pop
pop
pop
std
or
inc
jmp
mov
scas
nop
je
aas
dec
or
inc
add
jmp
negl
push
pop
icebp
and
outsl
jmp
mov
push
ficoml
add
outsb
mov
movsl
testb
cwtl
xchg
dec
dec
mov
out
jnp
ret
sahf
outsl
loope
mov
lcall
xlat
bound
push
pop
into
inc
cmp
xchg
xor
add
xorb
xchg
push
or
jb
call
push
pop
push
jne
mov
jo
flds
cli
imul
pop
cmpb
nop
mov
ret
popf
bound
xor
sub
mov
dec
dec
inc
jle
dec
scas
cwtl
adc
data16
int
je
mov
arpl
stos
test
lahf
cmp
inc
xlat
lods
ds
in
push
fiaddl
aaa
bound
jge
movsb
lea
lea
je
pop
and
mov
dec
xchg
mov
mov
bound
js
ficomps
andl
aad
dec
xchg
push
adc
enter
mov
push
leave
jecxz
idiv
inc
jns
rorl
movsb
addr16
int3
xorl
out
cmp
mov
pushf
shl
lcall
adc
lret
pop
pop
es
jno
xchg
sbb
cmp
filds
test
andl
frstor
dec
test
mov
dec
clc
pop
cmp
insb
test
in
xchg
jns
int3
and
xor
test
repz
outsb
test
or
in
pushf
addl
or
mov
adcb
fists
and
hlt
mov
popf
es
or
mov
dec
mov
sub
jb
es
add
dec
mov
jmp
pop
lods
jo
mov
push
xchg
pushf
fs
movsl
ljmp
xchg
xchg
addr16
ja
inc
orb
je
push
mov
mov
xor
xchg
adc
sahf
or
push
xor
add
xchg
or
ss
faddl
roll
jns
pop
cmp
daa
aad
repnz
mov
popa
ficomps
int3
add
imul
enter
push
mov
cld
lret
fnstenv
pop
xchg
ficoms
jecxz
adc
fxch
dec
mov
leave
test
cmp
dec
xchg
sub
cmp
out
mov
mov
in
sarb
push
push
ja
pop
cmp
dec
add
aad
std
mov
dec
push
shl
inc
pop
mov
pop
xchg
xorl
mov
add
xchg
jns
js
add
adc
imul
cwtl
mov
mov
xchg
jno
push
dec
mov
cmp
mov
push
cmpsl
cmp
mov
cmpsb
js
into
jno
jg
mov
add
cmp
idiv
xor
sbb
cmp
add
data16
lods
sahf
iret
mov
mov
xor
pop
xchg
cmp
mov
popf
xchg
push
icebp
dec
ret
pop
ds
push
sbb
jnp
sti
movsb
push
fdivs
inc
in
data16
push
and
xchg
adc
push
out
aaa
je
mov
push
ds
insl
xor
scas
adc
and
xchg
inc
pusha
lret
mov
xor
add
adc
mov
hlt
dec
xor
popf
fbld
and
ret
jge
sbb
shl
jge
add
sbbl
jp
outsb
xchg
sbb
or
mov
sar
ss
decb
mov
inc
inc
jns
mov
mov
sbb
and
mov
sbb
das
into
sbb
add
xchg
nop
or
lcall
push
cmp
insb
inc
and
cs
and
cltd
mov
dec
nop
fbld
cmp
and
jae
sbb
ja
testl
mov
ds
or
xchg
arpl
jae
sub
shl
mov
stc
je
xchg
popa
sahf
loope
adc
pop
push
inc
xchg
orb
adc
pop
and
insb
movsl
cmp
and
cs
push
lret
mov
aad
cmpsb
andl
pushf
xchg
sub
xor
js
je
pop
es
rcr
xchg
xor
pop
inc
lea
or
xchg
sarb
mov
jmp
sbb
mov
cmp
xchg
push
stos
mov
test
adc
loopne
sub
xor
cmpsl
ds
or
sbb
jg
mov
push
stos
aad
popa
dec
cmp
cmpsb
mov
cmp
jno
jl
xchg
mov
aas
movsl
addr16
pop
sub
add
popa
mov
xchg
inc
inc
pop
jg
dec
ljmp
sti
out
add
push
arpl
inc
int3
jnp
sbb
dec
sbb
dec
lods
ljmp
mov
dec
add
lods
test
cwtl
movsl
and
inc
sahf
mov
out
xor
out
les
int3
into
push
dec
imul
dec
jecxz
and
sub
lock
pop
nop
push
mov
xchg
cmpsl
lret
imul
ror
sbb
jae
mov
mov
cmp
enter
xchg
or
add
cs
push
xlat
pop
fisubs
jnp
sbbl
aaa
subl
test
mov
mov
sbb
lahf
pop
std
add
or
lea
or
out
repz
ret
divl
mov
sbb
data16
call
aad
mov
add
das
lcall
inc
lret
into
adc
ja
insb
jbe
cmpl
insl
pop
test
mov
dec
cltd
sub
pop
mov
mov
sub
pop
cmp
mov
mov
pusha
pop
iret
and
call
movsl
mov
cwtl
fs
rclb
lods
inc
ja
lahf
xchg
xchg
arpl
clc
lds
cmpsl
call
pop
je
jecxz
sti
xchg
or
icebp
inc
xor
repnz
mov
idiv
stos
sub
pop
repz
sbb
push
inc
xchg
pop
out
das
push
in
xor
out
push
negl
or
outsb
push
sbb
das
inc
shl
fdivl
xor
subb
adc
pop
jge
mov
insl
xchg
add
push
orb
inc
in
or
loopne
repz
add
push
xchg
sub
push
int
push
popa
or
popa
jo
int
xlat
addb
stos
cmpb
flds
fcmovbe
cmp
movsl
fmul
mov
adc
ds
ret
repz
shl
mov
jp
fwait
in
loopne
cs
mov
popa
adc
dec
mov
pop
jno
pop
ljmp
push
sub
aas
aaa
popf
stos
jge
insl
xor
cltd
or
jg
das
push
leave
mov
jp
inc
mov
cmpsb
mulb
incl
cmp
in
pop
adc
push
sti
cld
add
cs
xchg
jle
mov
dec
leave
repnz
push
pop
fs
pop
and
shll
mov
loopne
mov
sbb
jns
xor
inc
jne
pop
jp
jmp
add
or
das
scas
pop
insl
iret
xor
sbb
js
pop
testb
out
scas
sub
mov
pop
pop
andb
and
adcl
lods
mov
arpl
jns
adc
adc
mov
jo
push
jg
rolb
push
jnp
sahf
lret
test
bound
inc
lds
xchg
pop
cmove
leave
pushf
mov
jle
jnp
bswap
cmpsb
xchg
jae
outsb
mov
pop
pop
aas
popf
ss
add
stc
push
sbb
xchg
mov
pop
xchg
inc
pushf
imul
js
ljmp
jg
insl
pop
push
mov
jno
stos
pop
enter
imul
mov
dec
xor
inc
ret
add
cmp
int
adc
mov
rcrb
cmc
dec
or
das
inc
gs
scas
fsubrl
dec
shrb
fs
adc
adc
int
push
xorl
push
in
adc
xchg
mov
xchg
push
loopne
pop
cmp
mov
stc
adc
ljmp
in
insl
lret
jo
scas
jbe
sarb
sahf
test
push
insb
xchg
push
sbb
addb
cwtl
xor
cmc
shr
cmp
jl
es
fdivrl
lds
in
push
xlat
sbb
int
mov
repz
mov
cli
push
fisttps
push
sbbl
test
mov
in
add
sub
mov
stos
mov
dec
mov
imul
les
xor
and
dec
ss
daa
mov
cld
aaa
shrb
push
lock
mov
inc
cmp
add
js
mov
lcall
jge
cwtl
test
cmc
dec
cmp
int3
hlt
xchg
std
adc
add
jle
sub
push
iret
movsb
cltd
out
mov
jbe
out
stc
pushf
lds
cmp
lret
pop
mov
mov
add
mov
enter
pop
ror
pop
inc
jb
sti
cmp
pop
inc
dec
mov
in
jmp
xor
dec
cmp
xchg
mov
pop
fwait
push
mov
outsl
nop
lea
cld
xor
leave
dec
ljmp
or
sbb
adc
mov
push
mul
and
stos
aad
jnp
pop
mov
cmp
out
pop
sbb
and
pop
aaa
out
loop
xor
cld
leave
cltd
imul
stc
xor
jmp
in
and
dec
sub
stc
sbb
jp
or
sbb
push
test
out
xor
and
adc
cmp
pop
mov
xlat
and
xchg
push
test
inc
lods
es
sbb
xchg
and
jecxz
lods
or
arpl
frstor
imul
cld
ret
push
cmp
push
shll
cmp
mov
xor
mov
mov
ds
push
inc
call
mov
in
shll
mov
out
imul
in
arpl
int3
mov
loopne
mov
lret
in
data16
orb
cmp
mov
aas
out
push
cmp
adc
cmc
jnp
cmpsl
dec
adc
sahf
jle
mov
adc
and
pushf
cmpsl
roll
cmp
lcall
movsb
addr16
adc
mov
int3
adc
sbb
push
aam
loop
jge
sub
xor
cmpsl
pushf
popf
inc
testb
loop
adc
out
sbb
or
lods
mov
inc
push
and
mov
les
aad
mulb
sub
aam
push
inc
push
imul
sti
push
pop
mov
lcall
mov
icebp
or
add
xor
outsl
jmp
insb
mov
add
fisubrs
insb
sbb
push
lods
popf
call
mov
insb
and
je
sbbb
add
pusha
iret
mulb
fisubrl
inc
and
sub
push
cmp
pusha
inc
xchg
clc
jne
xlat
lret
dec
mov
and
xor
shll
xor
sar
push
xchg
cmp
pop
jge
je
pop
stc
dec
lea
sub
adc
fcmovnbe
nop
adc
mov
lea
shrl
push
pushf
sub
sub
sub
inc
movsl
mov
sbb
rcll
daa
sub
int3
ljmp
push
dec
push
mov
add
sbb
das
in
subb
push
shr
imul
or
stc
inc
push
inc
sub
cmp
inc
int3
bound
xor
scas
jecxz
inc
xchg
dec
dec
or
adc
jmp
xchg
add
xor
and
push
cwtl
rcrb
jo
xlat
aam
mov
pop
mov
xor
adc
jecxz
cmp
xchg
pop
xchg
gs
sbb
push
adc
pop
ror
dec
jbe
adc
out
inc
outsl
jo
or
pop
adc
fcomps
lock
adcl
fcompl
insb
push
pop
dec
aaa
adc
leave
adc
notl
and
rclb
popa
roll
mov
xchg
shll
push
shll
sbb
inc
mov
cs
xchg
jo
jb
and
mov
bnd
push
add
add
hlt
adc
rcrl
rorl
sub
cmpsb
jl
xor
mov
mov
adc
jge
punpckhwd
cmp
sub
scas
shlb
shrl
and
jle
mov
cmc
sarb
add
mov
jb
scas
add
pusha
pop
out
into
sar
mov
sbb
push
jnp
daa
repz
xchg
mov
cmc
fidivrl
mov
dec
xor
out
mov
jmp
sbb
sub
stos
or
dec
loope
loopne
popa
clts
movsb
inc
pop
cmp
pop
dec
fwait
popa
sub
leave
insl
fimull
bnd
push
out
sbb
fistl
pop
adc
out
aam
push
lcall
and
or
push
ljmp
pop
orps
lea
adc
xchg
dec
mov
push
mov
fnstcw
mov
cmp
adc
pop
xchg
sbb
push
cmp
adc
mov
nop
and
test
es
pop
xor
rcl
push
cld
loopne
hlt
fidivs
mov
fs
mov
in
jg
enter
pop
and
push
inc
mov
xor
movsl
dec
sbb
stc
xor
repz
push
fdivr
fnstsw
or
pop
rsqrtps
dec
mov
dec
aam
rcll
and
jmp
mov
lahf
mov
jle
fldt
test
sbb
imul
es
add
push
xchg
ds
clc
pop
pop
sub
mov
call
pop
shl
mov
dec
scas
and
jb
div
jle
or
push
jbe
xor
cli
or
add
jmp
ja
test
dec
xor
sub
aaa
jmp
cmp
lods
sub
lcall
lea
mov
mov
xor
inc
jbe
push
xor
fisttps
cld
xor
push
jp
outsb
pop
decl
sub
xchg
outsb
mov
push
push
nop
jecxz
stc
add
xchg
aaa
mov
aad
dec
lods
inc
mov
mov
cld
ja
jmp
xlat
and
pop
jge
and
out
out
shr
inc
xlat
jge
jle
test
dec
mov
cld
lcall
xlat
lods
frstor
ss
out
loop
lahf
int
ja
inc
pop
or
arpl
clc
inc
xor
sub
cmpsb
out
pop
insb
lret
jge
xchg
adc
inc
jp
dec
cmpl
and
xor
jmp
mov
jge
adc
fcmovb
ja
xchg
pop
xor
insb
xchg
ret
pop
or
push
pushf
dec
and
jae
test
add
cwtl
fwait
mov
out
stos
mov
sbbl
addb
stos
aaa
insl
jl
popa
pop
xchg
pop
jg
dec
fdiv
jecxz
shrl
imul
xchg
das
jl
xchg
mov
jle
push
scas
repnz
fiaddl
insb
dec
cmp
das
jl
movb
fildll
lock
daa
iret
imul
subl
fcom
pop
xor
rolb
or
or
ljmp
xor
rol
mov
mov
adc
sub
xchg
lock
popf
scas
xchg
out
sub
clc
fmul
pop
dec
js
xchg
test
cmp
mov
shll
push
or
adc
iret
push
shlb
pop
stos
inc
arpl
cmp
shr
jmp
jno
js
lods
or
in
ja
lea
scas
or
test
xchg
dec
ja
adc
repz
inc
adc
int
popf
add
in
ljmp
jecxz
sbb
dec
pusha
or
mov
jl
jp
fimuls
test
jge
add
cmp
enter
adc
sub
bound
and
mov
movsl
jmp
das
dec
and
shlb
mov
aam
mov
adc
add
mov
mov
mov
jle
stc
das
test
inc
sbb
and
sar
stos
enter
outsb
mov
stos
mov
int3
mov
and
clc
mov
xadd
cmp
add
xchg
notb
adc
mov
mov
pop
push
jge
adcb
inc
jnp
dec
dec
pop
int3
iret
daa
xchg
mov
and
repnz
add
xchg
pop
scas
movl
ds
mov
cmp
test
addr16
mov
cmp
jns
pop
add
nop
rcrl
nop
aaa
mov
iret
jo
call
jg
mov
fs
adc
push
sbbb
mov
mov
dec
repnz
pop
mov
xchg
or
jnp
pop
repz
xor
test
mov
xchg
addr16
and
jl
inc
cwtl
idiv
push
je
pop
push
stos
mov
jnp
jno
jbe
aam
or
testb
adc
out
ds
dec
and
jmp
and
mov
adc
loop
loop
mov
push
cltd
jmp
lret
jmp
lcall
push
or
mov
clc
mov
shl
mov
lock
pop
mov
and
test
into
loop
fwait
movb
mov
popf
jbe,pt
adc
movsb
fidivrs
fdivrp
stos
jne,pt
push
inc
push
das
add
leave
pop
add
dec
pop
mov
xchg
nop
aam
lock
fadd
jg
call
adc
nopl
aam
mov
outsb
inc
xor
rorl
imul
cmc
insb
sbb
lsl
mov
pusha
sub
rcr
adc
or
lods
push
push
movsl
clc
inc
sub
dec
jecxz
int3
sub
sbb
xchg
loope
xor
sbb
push
sub
adc
or
cmpsl
and
mov
xchg
arpl
icebp
sar
jo
push
or
stos
push
dec
push
sub
rcr
clc
adcl
pushf
jns
outsb
sbb
dec
sub
sub
dec
dec
int
je
adc
daa
jecxz
jbe
cmc
inc
lods
scas
stc
lods
xor
test
jle
jecxz
cmp
mov
pop
arpl
mov
pop
jae
xor
aaa
cmp
gs
loopne
adc
sbb
mov
inc
mull
xchg
pushf
mov
xchg
in
cld
inc
sbb
movsl
push
mov
fiaddl
push
lds
dec
and
sub
dec
fwait
std
add
rcrb
sbb
xor
int
add
adc
inc
push
cmpsb
test
xchg
aas
rcr
xor
pop
outsb
lret
lret
aad
subb
pop
in
adc
sbb
or
xchg
add
cltd
jmp
popf
lcall
pop
and
cmpsb
lods
pop
xchg
dec
sar
lock
imul
push
popa
lahf
add
pop
sub
dec
xchg
push
shrb
xlat
xor
xchg
inc
sub
mov
sbb
cmp
psubsb
xor
xchg
sbb
jbe
dec
jmp
push
dec
pop
pmuludq
cmp
pop
jno
test
in
mov
mov
mov
dec
sub
sub
mov
cmp
cmp
pop
subb
pshufw
ret
jmp
into
int3
or
mov
mov
jp
adc
dec
mov
lret
insb
jb
nop
out
xchg
fstl
out
xlat
addr16
jb
jb
fwait
xlat
add
xlat
adc
jbe
adc
in
sub
je
inc
loope
add
xchg
jmp
cld
ret
mov
xchg
pop
gs
sbb
out
adc
test
imulb
stc
loopne
lods
and
and
negb
mov
inc
stc
xchg
push
cmp
xchg
inc
pop
mov
popf
inc
xchg
adc
cmp
adc
pop
cmp
es
or
push
int
dec
jno
inc
stos
iret
mov
adcb
ss
movsb
mov
mov
pusha
sahf
mov
jg
or
xchg
sub
sub
imulb
push
aam
in
cmp
test
adcb
test
stos
lods
add
inc
add
fdivrs
pop
sub
push
adc
mov
cmpsl
mov
loop
popf
dec
jo
sub
fistpll
adc
add
xchg
shlb
inc
dec
and
ret
loope
scas
adc
add
pushf
dec
ficoml
cltd
andb
in
cmp
out
lcall
xor
fldcw
jbe
ljmp
push
popf
dec
mov
ret
xor
inc
xchg
dec
mov
mov
sub
popa
loopne
mulb
fsubrl
jae
loope
outsb
ss
xchg
mov
cmp
adc
xor
xchg
or
stos
mov
movsb
jl
idivl
gs
pushf
nop
mov
outsb
call
clc
lcall
call
test
testb
ss
test
rorb
mov
pop
mov
push
aas
outsl
lahf
pop
mov
pop
xchg
pop
or
insb
xor
arpl
push
aas
lds
lods
xlat
call
cmp
push
jle
or
ficomps
nop
sub
pop
jmp
fimull
push
aad
test
jnp
loop
repz
std
and
stos
aam
mov
inc
mov
xchg
pop
mov
sti
xchg
sbb
pop
daa
or
mov
add
add
xchg
rcrb
adc
and
insl
push
push
mov
js
mov
cmpl
movsl
mov
cmpsb
lods
push
lea
iret
scas
nop
dec
mov
jle
mov
mov
mov
push
rcl
clc
inc
leave
fdivr
and
cmpsl
or
andl
mov
push
repz
xor
subl
sub
jle
mov
add
cli
lret
adc
stc
pop
adc
icebp
shll
cmpsb
push
push
imul
push
loopne
jge
scas
sub
jle
call
push
dec
cld
xchg
addr16
dec
xchg
in
adc
pop
mov
push
addr16
pop
mov
or
popa
cwtl
inc
ja
add
pop
out
cmpsl
pop
xor
int
mov
adc
daa
call
ljmp
add
std
dec
pushf
or
and
fdivs
pop
jno
or
mov
xor
push
fs
mov
scas
xchg
dec
popf
mov
fdivrl
pop
in
insb
mov
and
pop
xor
out
mov
adc
sbb
lods
inc
adc
mov
ljmp
xchg
cmp
xchg
pop
pop
jp
popf
fsubp
push
aaa
push
jne
mov
mov
jo
rcr
aaa
insl
sar
test
js
or
sub
in
hlt
lods
or
aas
cmpsb
outsl
xchg
js
mov
cmp
aad
mov
fdivrl
pop
sbb
jnp
mov
sbb
lcall
xor
jg
nop
fidivrl
sub
jbe
jne
rcrl
shll
lret
push
popf
push
pop
in
jg
sbbb
sbb
dec
pop
leave
mov
lahf
insb
jno
push
popf
shll
movsb
xchg
arpl
sbb
notrack
pop
lret
into
xchg
fnstcw
and
mov
cmp
in
sti
inc
inc
dec
aaa
inc
inc
loopne
sbb
sub
hlt
hlt
sub
scas
lock
pop
cmp
cmp
add
rolb
pop
adc
aad
ja
cmpsl
lods
mov
fs
in
es
add
imul
mov
lcall
mov
pop
push
mov
push
dec
popf
sbb
cmp
cmp
xor
mov
js
mov
push
jnp
insb
sar
in
ret
lcall
lods
xchg
mov
push
mov
fimull
ror
sti
mov
arpl
add
cmpsb
push
dec
cmc
cmpsb
in
fcompl
fiadds
pop
xor
adc
jns
dec
lods
sub
dec
sub
nop
mov
gs
inc
pop
mov
push
jmp
lods
in
inc
es
cld
jge
test
scas
push
scas
cmp
sbb
inc
outsl
lea
xchg
pop
lock
xchg
js
xor
inc
push
test
inc
sub
enter
push
mov
mov
xor
shl
cltd
popa
rcr
sar
jle
and
loop
lret
shlb
testb
xchg
jbe
dec
in
sbb
les
popa
nopl
addr16
nop
cmp
jbe
jo
adc
mov
icebp
testb
rcrb
inc
fildl
imul
mov
jle
inc
add
clc
or
scas
cld
ret
dec
movsb
xchg
pushf
out
jle
jne
push
cmp
or
and
aam
xchg
faddl
pop
pop
lods
in
mov
fidivrs
sub
xchg
in
cmp
fidivrs
xor
jmp
ror
shll
and
xor
jno
xchg
call
sub
lahf
lret
mov
xchg
add
loopne
cwtl
inc
nop
arpl
cmp
testl
mov
int
pop
pop
insl
sub
push
or
insb
sub
das
movsl
xor
pusha
aam
cmpb
dec
aam
cmp
adc
cs
adc
lods
jecxz
stos
pop
xchg
push
sahf
add
lret
cmpsl
and
hlt
mov
repz
jae
sbb
push
in
and
jecxz
xor
out
out
mov
mov
adc
fs
and
and
dec
xchg
inc
sub
dec
test
subl
pushf
push
jns
jno
stos
jne
sbb
xor
jae
pop
scas
movsb
mov
pop
scas
sbb
adc
xor
jno
or
sbb
fldt
lods
mov
pusha
ficoml
ja
pushf
sub
inc
out
outsb
jns
lods
or
push
mov
test
mov
mov
add
xor
ja
loope
ds
sbb
ret
aam
xchg
jmp
scas
clc
mov
repnz
call
xor
cmp
mov
lock
pop
mov
sub
ficomps
test
jge
inc
js
int3
pusha
lahf
clc
jl
fisttpll
lret
decl
fs
xchg
mov
or
ret
imul
adc
xchg
mov
jl
jne
jg
mov
std
or
inc
outsl
imul
gs
movsb
mov
jo
fcomps
in
xorl
idivl
mull
push
ljmp
or
lret
mov
in
int3
lods
rorb
imul
scas
leave
sub
adc
mov
push
push
or
das
push
sub
pop
push
outsl
nop
repz
mov
inc
je
adc
cmp
sbb
mov
aas
mov
and
sbb
cmp
adc
lods
shl
movsl
movsl
pop
repz
mov
dec
mov
scas
push
dec
leave
call
sbb
mov
xor
out
and
fidivrs
out
outsb
jecxz
mov
or
sbb
aas
loope
add
and
mov
pop
insl
scas
xchg
popa
adc
enter
mov
int3
shrl
dec
popa
or
dec
push
ret
cwtl
divl
inc
push
stos
sarb
mov
mov
add
and
fisubs
xchg
mov
jecxz
cmp
popf
testb
js
inc
leave
repnz
fs
push
out
xchg
lods
iret
iret
outsb
rol
sub
mov
popf
inc
hlt
xchg
mov
mov
fwait
cmpsl
js
mov
loopne
dec
sub
in
mov
mov
test
in
mov
sbb
fildll
shlb
pop
lret
inc
sti
sbb
std
daa
mov
sub
int
cmp
lea
clc
add
jecxz
arpl
loop
adc
pop
fs
and
and
xor
repnz
mov
popf
jae
add
jbe
mov
gs
adc
pop
int
into
jne
or
stos
pop
je
fnstcw
fidivl
ret
int
mov
jge
sarl
inc
xor
outsb
das
sub
dec
stos
fwait
imul
push
ffreep
ljmp
mov
out
adc
popa
mov
mov
sub
push
sbb
stc
movsl
pushf
inc
in
jle
rclb
mov
xlat
aaa
aas
jbe
out
inc
and
imul
cld
iret
aaa
sub
mov
ret
mov
sub
jo
ret
in
inc
dec
cwtl
fsubl
das
xchg
into
stos
dec
mov
ss
mov
pop
push
faddl
inc
xchg
mov
xor
cmp
and
sbb
dec
sbb
das
mov
add
pop
dec
dec
ja
mov
and
pop
mov
ds
cmp
aam
sti
jg
mov
int
loope
mov
mov
jne
and
ljmp
in
xor
mov
movsl
shl
mov
dec
sub
xchg
ret
ret
jp
xchg
cld
inc
sub
lahf
jle
popa
imul
shll
fld
insb
cmp
aaa
lods
clc
mov
adc
mov
xchg
jae
jp
inc
fcmovb
and
jb
dec
xchg
hlt
std
pop
adcb
shl
cld
push
or
inc
fdivl
in
jo
mov
lods
andb
mov
fs
mov
add
pop
mov
or
or
inc
dec
sbbb
push
sub
int3
push
mov
adc
mov
xchg
add
mov
adc
arpl
pop
jo
nop
out
cmc
mov
dec
add
pop
dec
sbb
dec
sbb
xor
fidivl
xchg
popa
mov
ds
pop
orl
lods
jl
fcmove
fs
mov
out
dec
adc
add
adc
xor
cmpsb
ljmp
inc
xor
push
or
pop
xlat
inc
stos
incb
std
shrl
shlb
loopne
mov
test
lods
outsl
jns
inc
mov
inc
pop
jo
xor
jno
push
orl
pusha
jo
jp
inc
sub
orb
rep
pop
fs
outsb
dec
push
ds
jne
movsl
add
adcl
ds
or
inc
adc
vpshlb
leave
clc
aad
je
in
mov
cmp
stos
enter
outsl
loopne
in
and
addr16
les
jae
in
psubw
sbb
inc
jge
xlat
rcll
xor
lock
aam
jg
xlat
inc
jg
xchg
push
xchg
jle
dec
rolb
dec
mov
or
adc
pop
test
xchg
sbb
leave
mov
jo
jle
pop
lret
lea
cld
xor
int
mov
ljmp
andl
fisubrl
test
scas
sti
cltd
icebp
jle
mov
mov
das
push
stos
and
inc
adc
xchg
jg
fcmovnb
adc
stc
xchg
mov
ljmp
addl
lds
dec
out
mov
jnp
xor
push
pop
ljmp
or
ret
xchg
push
je
jmp
push
out
xchg
fnstcw
outsl
repnz
shll
push
pop
adcl
je
sub
rcr
jb
fstpt
push
lret
daa
mov
mov
gs
imul
push
inc
into
push
xor
adc
push
out
dec
xchg
mov
sub
and
jb
outsb
out
push
xor
lcall
mov
imul
insb
dec
fmul
mov
push
lret
lret
pop
jbe
sub
sub
movsb
push
les
push
arpl
jecxz
sbb
out
pop
ret
sbb
loopne
sarb
mov
lds
sbb
sbb
test
or
sub
in
xchg
fcmovnbe
ss
dec
adc
mov
mov
pop
mov
ja
repz
cmp
lret
mov
mov
xor
cmp
sbbb
add
xor
jnp
loope
icebp
sbb
cli
cmpsb
dec
ljmp
adc
and
adc
xorl
cmp
mov
sub
cmp
xchg
lods
fcoms
insl
lods
dec
in
jp
xchg
leave
frstor
mov
ljmp
xor
push
pushf
push
daa
xlat
ret
pop
ds
adc
ss
push
repz
sbb
shrl
imul
loop
fs
jp
iret
inc
jle
jno
push
xor
mov
add
out
jb
fcompl
in
dec
lock
mov
negl
and
sbb
repnz
enter
nop
fwait
rcr
test
sbb
jmp
jae
sti
roll
sbb
dec
xchg
fnstsw
or
mov
push
or
pop
sbb
mov
lods
cmp
push
fwait
add
mov
paddb
or
or
cmp
ja
pop
cmpsl
fs
push
clc
aas
jmp
mov
popa
sub
ljmp
adc
mov
xor
inc
addb
add
or
loop
jecxz
je
xor
xchg
aas
adc
ficoms
call
lods
notl
in
sbb
adc
or
pop
push
push
push
ret
adc
mov
xor
lret
mov
and
cwtl
fnstenv
test
adc
stos
test
repnz
xor
mov
cmpsl
jns
pop
repz
hlt
push
lret
push
jbe
fldenv
imul
aas
xchg
addr16
dec
lar
jecxz
and
jmp
and
cmp
dec
ja
mov
fwait
mov
push
pop
loop
dec
xor
dec
fwait
xchg
sub
mov
mov
out
lcallw
xchg
xchg
pop
es
xor
push
xchg
add
push
cmp
add
stc
cmpl
mov
fisttpl
dec
adc
outsl
cmc
bound
lea
test
aas
jae
lea
in
outsb
pop
aad
xor
lock
push
cmp
jae
sbb
cld
dec
xchg
push
decl
sti
shlb
loope
cmp
pop
xchg
shl
pop
scas
dec
inc
and
sub
adc
daa
xchg
jb
push
dec
mov
ja
mov
or
ror
cmp
sbb
lds
cld
mov
jle
add
inc
or
pop
dec
fnstcw
imul
insl
stc
sbb
jle
ds
ljmp
adc
clc
inc
out
out
mov
mov
inc
insb
test
mov
ret
fldl
fmuls
cmp
add
and
incl
pop
clc
mov
fucomi
sahf
inc
fcoms
mov
shll
scas
aam
pop
sub
and
leave
xchg
pop
aam
xchg
sub
push
lock
mov
pop
mov
jmp
lret
xor
insl
dec
cvtdq2ps
pop
mov
xchg
in
add
ret
inc
cmp
stos
lcall
stc
dec
and
push
jle
insb
outsb
sbb
sub
fildll
and
dec
int
out
popa
mov
js
inc
cwtl
or
mov
and
pop
sbb
xchg
scas
or
je,pn
sub
sub
push
push
xlat
cmp
shrb
add
push
or
rcrl
movsb
dec
insb
lock
sub
ja
cmpsb
lahf
sti
ljmp
mov
mov
pop
lods
adc
jns
daa
or
xchg
es
xlat
jo
xchg
shrb
lcall
fcomp
add
add
cmc
mov
mov
jae
shrl
pop
lds
out
jecxz
call
call
inc
or
out
call
mov
adc
xchg
mov
fldcw
movb
push
iret
hlt
bound
out
sub
lcall
dec
add
in
sub
hlt
pop
out
stc
or
fistpl
nop
xor
out
push
lods
mov
adc
cwtl
adc
inc
inc
cltd
in
lods
cmpsb
xor
or
loop
loopne
cltd
mov
pop
int
aad
aam
call
sbb
jbe
push
push
dec
jnp
pop
dec
int
scas
mov
sbb
loopne
test
sarl
popf
jb
adc
js
sub
call
push
inc
mov
mov
fstpl
lods
dec
jo
or
add
incl
add
xchg
ja
adc
rorl
cli
stos
inc
in
xor
stc
and
fdivs
lret
dec
lods
out
jg
cwtl
lea
stos
lock
jge
fldl
push
das
dec
iret
shrb
loopne
sub
mull
inc
xchg
cmpb
mov
cmpsl
jp
xchg
js
jl
pop
mov
dec
pop
xor
cmp
mov
jmp
jno
and
inc
rol
dec
clc
lods
cli
ret
mov
jbe
je
lcall
jnp
scas
jge
push
lea
jp
cli
aas
pusha
adc
rcl
ljmp
addr16
cmp
scas
jnp
call
dec
xchg
mov
rcl
adc
cltd
pushf
add
jo
inc
int
cmp
rcrb
je
rorb
loope
cwtl
sub
or
mov
aas
lcall
mov
mov
pop
frstor
jecxz
into
inc
push
aaa
clc
bnd
int
lret
js
cmp
fbstp
xchg
popa
cld
mov
xchg
stos
mov
subl
std
cmp
data16
shlb
adcb
sub
les
das
std
pop
dec
sub
lock
outsl
nop
jb
imul
sbbb
dec
push
mov
jge
mov
dec
jl
or
repz
mov
mov
xor
pop
lods
cld
leave
sub
lcall
mov
adc
fs
or
imul
mov
dec
mov
mov
sar
lcall
jne
fcmove
gs
jne
movswl
push
xor
es
nop
dec
inc
push
pop
mov
ljmp
xchg
or
pop
xlat
shlb
jo
leave
clc
call
lret
pop
sarb
mov
ja
shlb
mov
popf
test
les
sahf
jge
lahf
mov
sti
jecxz
pop
add
pop
lret
fsubs
push
decb
int
xor
imul
adc
or
shlb
test
xor
mov
sbb
xor
xchg
push
inc
sbb
in
inc
cli
sbb
pop
ljmp
and
adc
inc
es
inc
pop
sbb
dec
addl
push
mov
lods
enter
push
jns
lock
inc
push
jnp
out
inc
aas
xchg
adc
repnz
push
not
sub
sub
xchg
pop
push
mov
cmp
nop
inc
or
push
xor
mov
xor
cmp
fs
imul
fdivs
fildll
movsb
test
cmp
xor
adc
into
lahf
mov
aas
test
int
idivb
push
adc
das
or
xchg
int3
aas
add
xchg
sub
stos
mov
imul
sbb
pusha
mov
and
xchg
xchg
out
sub
imul
cli
inc
xchg
test
jb
aas
sbb
negl
in
jnp
jmp
pop
jg
xchg
lock
call
mov
pop
fidivl
out
mov
loope
sbb
pop
add
adc
dec
insb
jle
movsb
push
inc
rol
movsb
cli
movsl
and
jbe
and
out
push
push
gs
adc
sbb
mov
mov
mov
mov
bound
pop
sbb
icebp
pop
shll
icebp
cmp
sub
fmuls
pop
xchg
dec
mov
xchg
gs
add
sub
sahf
sub
mov
mov
add
push
cmpsl
jbe
mov
push
loopne
xor
xchg
xchg
addb
int
daa
push
divl
mov
movsl
mov
jnp
or
stos
in
and
in
mov
out
cs
out
push
repnz
outsl
xchg
jg
dec
jle
ret
mov
adc
jle
adc
pusha
add
cmpl
into
or
or
push
stos
lcall
je
pop
out
daa
pop
push
add
lock
test
sti
mov
and
adc
push
cs
test
aam
pusha
js
adc
inc
stc
popf
lods
mov
adc
test
ret
xor
repz
jecxz
xor
test
xchg
cmp
lret
mov
sub
pop
sbb
inc
lock
add
test
inc
sub
push
imul
int3
call
loop
nop
and
subb
lods
pop
das
pop
xchg
sahf
mov
mov
inc
mov
dec
mov
jl
ds
cmpsl
outsl
shlb
rcrl
ret
mov
mov
xchg
or
jg
cwtl
popf
pop
fildl
pop
jbe
lret
daa
scas
loop
adcb
into
adc
adc
xor
push
and
test
xlat
sbb
aaa
outsl
testb
sti
mov
pop
xor
dec
insl
clc
faddl
sbb
jmp
adc
dec
sub
pop
mov
cwtl
cli
not
addr16
sub
adc
jg
inc
adc
inc
mov
sbb
sub
push
mov
inc
sbb
das
daa
cmp
push
out
pop
pop
cmc
outsb
xchg
dec
das
mov
cmp
repnz
cmp
out
cmp
sub
ret
mov
mov
enter
dec
mov
stc
into
aam
loopne
sub
xchg
add
pop
out
out
cmp
sub
sub
xchg
pusha
fs
lcall
mov
adc
cmp
repnz
aaa
push
cltd
mov
inc
dec
in
andb
mov
cmp
repnz
mov
sub
add
push
lods
xchg
enter
cs
push
movsl
cli
stos
cs
mov
lea
rcl
push
jle
arpl
sahf
insl
xor
adc
sub
dec
push
int
xor
leave
popa
dec
fnstsw
ret
addr16
sahf
int
in
fcomps
add
and
out
lea
ret
testb
pop
test
add
or
outsb
or
jle
or
inc
xchg
enter
adc
mov
je
mov
out
adc
loop
mov
fsts
xchg
jns
into
mov
pop
aaa
out
addr16
push
dec
pop
xchg
aas
or
out
sbb
std
imulb
dec
lea
cmp
cmpb
add
sub
jg
sub
jl
mov
pushf
out
jecxz
sub
rcl
data16
pop
mov
inc
popa
adc
xchg
call
mov
je
sub
pop
jns
sbb
and
sub
cmp
lock
jg
stos
dec
outsl
dec
in
outsl
movsl
shr
leave
mov
lea
dec
pop
and
and
pop
adc
shrl
inc
lea
scas
dec
dec
or
clc
mov
cmpb
push
outsl
mov
cld
push
imul
iret
cmp
mov
jo
or
aaa
lcall
mov
sub
cmpsb
out
mov
fldcw
mov
arpl
pusha
mov
xchg
out
xchg
push
stc
inc
jmp
mul
and
sub
into
daa
sbb
fsts
xchg
mov
mov
addr16
aad
push
arpl
or
gs
test
sti
mov
aas
push
sub
sbb
fildll
push
repnz
lea
xchg
scas
rcl
in
or
insl
xchg
push
andl
rcr
ljmp
mov
out
icebp
addr16
and
sahf
xchg
call
xchg
sub
cmp
call
jmp
cmp
loopne
xchg
mov
adc
sti
bound
adc
leave
push
jge
sub
mov
addr16
cmp
inc
mov
scas
test
xchg
push
cltd
je
adc
rorb
cmpb
adc
sub
pop
cld
mov
test
xchg
push
push
lret
daa
adc
xchg
cltd
mov
xchg
aam
movsb
adc
xor
icebp
mov
movsl
pop
add
into
pusha
stc
cs
hlt
cmc
sbb
mov
jns
test
push
rolb
jno
dec
out
adc
ja
arpl
mov
stc
imul
cmp
testb
or
pop
insb
rcrl
out
in
test
shrb
or
cmc
lret
jnp
mov
cmp
pop
lret
std
pop
nop
cmp
push
cmp
push
jl
pop
mov
xchg
add
mov
xchg
ss
sub
test
sub
push
loope
adc
in
lahf
stos
repz
dec
inc
movsb
cltd
movsl
js
jo
fs
xchg
push
sbb
mov
and
sub
inc
and
mov
sbb
inc
clc
jns
icebp
jg
pop
inc
xor
std
and
dec
mov
mov
sahf
les
mov
xchg
test
adc
in
jb
jl
hlt
jp
xor
push
ss
push
push
mov
not
and
pushf
or
pop
and
int
clc
mov
inc
in
sbb
enter
inc
mov
outsb
sbb
mov
jge
sub
pop
cmp
inc
adc
adc
xchg
xchg
push
mov
sar
dec
cmp
jge
xchg
and
and
mov
icebp
add
fiadds
mov
and
hlt
cmp
cmp
mov
lcall
repnz
push
ds
dec
add
aad
jecxz
add
inc
ljmp
pop
fs
dec
adc
or
xor
fs
or
cmc
add
outsl
mov
lahf
in
dec
xlat
cmp
inc
ret
insl
mov
ret
das
pop
push
cs
ss
mov
sbb
push
jmp
mov
and
call
jne
mov
push
pop
lret
xchg
icebp
mov
fisttps
ret
rorl
out
rclb
inc
inc
enter
xor
fisubrs
incl
das
jp
adcl
add
add
scas
xchg
sub
iret
sahf
adc
arpl
ret
sbb
and
or
xor
mov
mov
int
cmc
jb
rcrb
les
sub
mov
shr
imul
pop
add
jbe
push
jo
sub
xchg
pop
es
ja
enter
cmp
vucomiss
inc
xor
inc
fs
insb
push
popl
or
sarb
jb
add
addr16
cltd
das
inc
jno
sahf
jl
pop
or
dec
mov
sbb
shr
cmp
mov
ljmp
inc
ja
sbb
jne
pop
inc
or
rol
mov
jmp
dec
adc
ret
sti
xchg
cltd
pushf
cltd
cmpsl
add
imul
sbb
mov
xor
aas
mov
sub
aaa
adc
pop
mov
mov
jp
sbb
outsb
add
pop
sub
jg
js
push
mov
adc
push
imul
sub
xor
lahf
sub
and
jmp
scas
adc
sbb
inc
shrl
cmp
int3
mov
jle
and
jae
and
xlat
xor
cmpsb
pop
jne
mov
cmp
subb
adc
idivl
sub
dec
push
cltd
xor
inc
jmp
rcll
mov
add
inc
jle
jle
xchg
movsl
movsl
sahf
repz
jne
cmp
int3
repz
mov
or
sub
popf
int
or
es
sub
inc
fistpll
and
dec
stos
pop
out
xchg
icebp
add
mov
test
sub
std
in
fistps
and
jg
lods
xor
jb
add
clc
dec
mov
scas
mov
std
xor
in
je
in
mov
jne
mov
pusha
push
mov
pop
and
mov
jl
lods
cli
mov
push
cld
or
xor
mov
cmp
mov
inc
cmp
mov
sarb
xlat
imul
test
sub
push
addb
lahf
add
fidivl
xchg
add
bound
imull
in
popa
out
imul
sub
pusha
mov
ds
jae
pop
mov
push
inc
test
pop
in
xchg
pop
in
cmp
iret
clc
pop
scas
fdivrs
lds
or
sbb
loope
aam
mov
inc
nop
jno
cli
call
xchg
ja
ret
iret
ds
daa
jne
inc
xor
rolb
lods
xchg
cmp
das
add
cmp
pop
imul
sbb
pavgb
sbb
dec
mov
lahf
pop
ret
loopne
popa
xlat
jl
xor
push
or
cmp
fldl
sbb
add
fcmovne
jecxz
call
test
or
xor
xchg
test
call
xor
testl
mov
adc
outsl
sub
adc
mov
dec
push
push
sti
jo
or
adc
or
inc
sbb
inc
fs
addr16
sti
mov
mov
cld
test
fisttpl
push
into
pop
pop
mov
jbe
scas
xchg
jge
nop
jl
mov
ret
or
mov
pop
adc
jle
aaa
enter
mov
jmp
into
sub
mov
or
add
popl
mov
test
xchg
adc
pop
ficompl
outsb
popa
lcall
mov
or
push
dec
orl
inc
test
sub
and
jg
decl
movsb
push
outsb
loope
push
lret
jecxz
mov
ljmp
movsl
outsl
fsubr
fnstenv
jecxz
push
and
loop
scas
or
loope
ja
jmp
inc
mov
fs
inc
jg
dec
jle
in
pop
outsl
push
cmp
sub
add
inc
repnz
fbld
jmp
sub
es
test
xor
sub
adc
test
xorl
cmpsb
jmp
subl
and
test
fs
in
bound
xchg
jmp
mov
scas
and
ds
xchg
lods
dec
sar
pop
mov
test
or
addl
adc
pop
out
xor
and
les
test
ss
push
pop
cmp
mov
movsb
jno
mov
mov
loope
pop
jb
je
mov
dec
dec
clc
mov
pusha
xchg
popf
mov
ror
xlat
ficoms
mov
gs
mov
insl
pop
int3
or
and
lods
push
gs
and
sub
dec
sbbb
pop
push
push
addr16
testl
cmp
lods
inc
movsb
in
pushf
popf
leave
or
jle
ret
xchg
add
out
imul
pop
addr16
in
jno
cmp
lcall
or
rcr
pop
out
sub
dec
pop
push
iret
stc
in
aaa
rclb
aam
or
cmc
fcoms
int
mov
pushf
mov
adc
outsb
leave
lcall
xchg
dec
or
repz
push
adc
push
adc
cltd
fbstp
xor
dec
pushf
xor
fsts
xchg
cmc
iret
test
push
add
cmp
adc
push
adc
ret
cmp
mov
xchg
test
inc
sbb
mov
push
jne
cmp
pop
loope
cmp
sahf
jp
insl
int
mov
add
bt
mov
loopne
xchg
xor
adcl
dec
ljmp
pop
cmp
outsb
and
mov
mov
push
leave
lds
jmp
mov
mov
mov
test
nop
out
xor
inc
loope
pop
insb
stos
js
mov
iret
mov
lea
push
pop
fucompp
push
pop
dec
and
lock
negl
push
les
mov
jge
test
or
and
scas
push
xchg
out
lret
sbb
in
mov
dec
mov
cmp
push
xor
sbb
test
sbb
push
lea
aam
dec
inc
jle
mov
or
pop
nop
sbb
cmpsl
inc
test
jle
xor
sub
push
mov
hlt
push
sbb
pop
pop
mov
dec
sahf
aas
repz
push
xchg
and
xchg
repnz
pushf
xor
xor
push
and
aad
xchg
stos
icebp
mov
xchg
mov
jnp
push
add
pop
cmc
xchg
subb
push
mov
and
sti
lret
jae
mov
fdivs
dec
push
pop
mov
mov
outsl
fs
fbld
sbb
sub
mov
cli
inc
push
stc
cmpsl
mov
mov
sbbl
mov
enter
insl
pop
xor
add
pop
adc
in
xchg
sub
xchg
pop
jl
clc
fdivrp
imul
mov
pop
mov
out
enter
push
sti
aaa
jbe
cmp
mov
lods
test
pop
sti
cmp
pop
cwtl
loop
insl
push
push
divb
mov
mov
mov
xor
cwtl
mov
ds
xchg
cld
cmp
rolb
lret
fimull
movsb
in
cmpsl
dec
adc
mov
or
push
mov
les
add
mov
dec
fisubs
ficompl
into
int3
adcl
mov
outsl
popf
cmc
jmp
xchg
pusha
and
or
mov
and
inc
incb
bound
mov
cmp
aad
aad
incb
daa
lock
cmp
push
mov
int3
jno
mov
ret
mov
iret
push
add
inc
pop
add
popf
cmc
jns
imul
repz
leave
rclb
lret
dec
inc
stos
bound
lret
mov
cmp
filds
jl
enter
loop
clc
jg
add
stos
xchg
dec
pop
rorl
or
repz
dec
iret
adc
sbb
mov
mov
dec
mov
test
fdivr
lret
lcall
negl
popa
xor
adc
push
mov
xor
adc
imul
inc
add
int
pop
xor
add
out
jo
repz
lods
cmpsl
xchg
imul
pushf
fldl2t
outsl
pop
mov
push
mov
dec
icebp
sub
shlb
stc
inc
adc
mov
int
mov
jb
sbb
inc
sbb
xor
xchg
repnz
mov
fwait
xchg
stos
xchg
aam
jecxz
repnz
pushf
and
sbb
xor
dec
inc
shrl
sub
aas
pop
mov
nop
fldenv
pop
aas
int3
mov
pop
jmp
call
inc
push
sbb
pop
pusha
or
adc
fistl
mov
dec
mov
lcall
pop
subl
aam
mov
sub
xlat
xor
imul
cs
or
in
dec
in
out
xchg
bound
xchg
ljmp
xchg
cld
scas
xchg
pop
jbe
inc
sahf
in
movsb
push
movsl
jo
mov
mov
sub
pushf
lea
leave
insl
dec
into
cmp
pop
clc
cmp
dec
jns
jle
pop
xchg
mov
inc
xchg
enter
lret
hlt
adc
sub
loopne
sbb
sub
daa
cwtl
xchg
cmpsl
sbb
adc
adc
loop
fcomi
xor
je
in
out
adc
mov
je
or
jmp
rcrb
cmp
mov
stos
jmp
or
fcmovnb
nop
jae
mov
or
jo
mov
add
push
sbb
mov
je
dec
pxor
cli
push
mov
push
sahf
adc
mov
pop
lods
xchg
mov
adc
mov
sub
fnstenv
sub
and
pop
adc
je
add
inc
addr16
sub
sub
fsubrs
xchg
icebp
fwait
mov
cmpsl
xor
xchg
inc
loopne
sti
cmpsl
xchg
mov
sub
daa
mov
into
shll
outsb
cmp
sub
pop
cltd
dec
mull
and
ja
sub
xchg
sbb
xchg
xchg
dec
jne
mov
repnz
xlat
stos
xchg
pop
cwtl
fnsave
cmp
adc
inc
arpl
xor
shrb
cmpsl
dec
fsubrs
mov
pop
sub
push
lea
jl
push
jmp
scas
dec
xchg
lea
jmp
lret
shlb
or
dec
jle
cmovno
pop
jp
out
imul
and
mov
cmpsl
bound
sub
add
push
dec
or
lahf
pop
adc
daa
xor
fs
inc
add
mov
inc
push
std
repz
sarl
adc
mov
or
scas
mov
enter
rcrl
shlb
jl
pop
push
shl
jns
mov
fidivs
insl
std
push
sbb
les
mov
mov
xor
or
pop
sub
rcrl
enter
mov
adc
fdivrs
jl
in
xchg
mov
jbe
and
scas
stos
sti
xchg
push
iret
shll
mov
cmp
sub
aas
aaa
inc
pop
hlt
push
testl
push
jne
les
adc
iret
mov
mov
dec
lock
mov
sub
fstl
jnp,pn
dec
pushf
push
int3
mov
cmp
jbe
inc
jl
mov
push
shrb
fldt
call
scas
js
jecxz
sbb
and
sub
sub
stos
push
je
and
jno
sbb
pushf
sbb
outsb
inc
in
and
xorl
inc
fs
and
xchg
pop
es
push
jae
lds
cmp
inc
mov
fwait
cmpsl
inc
loop
fwait
mov
aad
imul
xor
daa
xchg
push
enter
pop
cmp
dec
enter
and
mov
or
cmc
js
stos
rclb
mov
repnz
cmp
and
pusha
aaa
xchg
jbe
outsb
ret
loope
push
leave
xor
int3
cmp
fcoml
adc
out
cmpsl
insl
xchg
jbe
jl
dec
scas
aad
inc
cmp
pop
imul
movsb
loopne
movsb
mov
lds
xlat
mov
in
sub
jmp
mov
push
call
pop
inc
inc
out
sarb
mov
aas
mov
mov
adc
test
inc
fwait
sbbb
scas
jp
sbb
je
mov
sub
js
rcrl
sub
int
cltd
xor
inc
scas
lock
and
out
lock
scas
inc
xchg
jb
aad
adc
xor
push
jl
sarb
xchg
jo
push
pop
jne
adc
mov
dec
push
sub
fs
add
lock
in
add
add
mov
movsb
xor
push
jle
addb
xor
sub
sub
aam
fimull
into
test
pop
cmp
mov
pushf
sbb
lods
loope
mov
in
mov
push
test
push
pop
mov
loope
mov
lcall
int3
cld
jmp
int3
in
pop
adc
jl
inc
cmp
and
push
fimuls
xchg
stc
rcll
xchg
mov
adc
sbb
lock
icebp
mov
push
mov
lahf
incb
sub
cmc
inc
adc
and
loopne
mov
bound
cmp
test
ljmp
shlb
mov
js
ja
mov
mov
rclb
rcr
and
inc
cmpsb
stos
jg
mov
pop
or
mov
sbbb
outsl
sti
test
mov
or
inc
xor
jecxz
inc
out
cmp
into
xor
jbe
push
push
imul
mov
outsb
ss
jns
add
cltd
xchg
int
mov
mov
dec
mov
mov
bound
jne
push
mov
inc
aaa
push
bound
lret
dec
neg
jbe
pop
in
and
fidivl
jle
mov
push
jno
into
data16
mov
fistpl
dec
shlb
mov
and
aam
or
cwtl
jnp
xor
adc
lcall
xor
pop
test
in
mov
cmc
test
add
cmpsl
jmp
xor
sbb
cmp
jne
jns
negl
int
mov
or
cmp
jne
flds
xchg
frstor
dec
sub
push
cmp
sbb
cmp
mov
lcall
testl
mov
cmp
ljmp
inc
stc
jp
sbb
jno
nop
insl
ret
popf
jl
or
scas
pop
fwait
pop
jp
ja
loope
sbb
ds
mov
mov
pop
in
sub
push
stos
sub
jnp
inc
jp
iret
sbb
ret
push
js
into
dec
incl
adc
adc
loope
nop
dec
mov
xor
lret
icebp
sub
sub
pusha
sbb
sbb
xchg
jmp
inc
jne
int
xlat
xchg
jne
xor
ja
inc
clc
pop
ret
aaa
shrl
inc
xchg
fdivs
xchg
lods
lods
movsl
in
push
dec
pop
clc
dec
mov
jnp
iret
loope
rorl
das
mov
mov
dec
mov
dec
test
mov
jne
xor
negb
cmp
stc
ficomps
cmpsl
ljmp
scas
lret
inc
and
cs
test
dec
cmp
jmp
pop
or
adc
popf
push
lret
jp
inc
lret
cmp
addps
fucom
sub
add
ret
dec
push
xor
andb
aad
je
sub
pop
outsb
cltd
js
sub
pop
and
fwait
lods
and
push
sarb
jno
enter
mov
and
mov
test
xor
jg
cltd
mov
les
fdivrl
jmp
push
jmp
movsl
cmc
rol
lods
out
pushf
add
add
clc
inc
nop
mov
mov
and
push
outsb
cmp
rcll
mov
xchg
inc
push
sub
mov
mov
bound
xor
clc
jno
sbb
mov
addb
mov
aam
or
lcall
sub
xchg
sub
jne
pusha
lcall
xchg
scas
jmp
xor
nop
push
mov
xchg
pop
mov
pop
adc
xor
inc
xchg
xchg
mov
mov
ret
fcmovb
mov
dec
push
mov
cltd
pop
lret
rclb
xchg
incb
mov
sahf
xor
cmp
mov
popa
shll
mov
adc
aas
sub
add
or
xor
fnstenv
cmp
gs
pushf
jno
gs
and
dec
fiadds
add
cmp
hlt
fadd
jbe
add
in
insl
jne
lods
jbe
pop
ljmp
mov
xorl
push
mov
adc
in
xchg
sbbl
pop
fstps
mov
adc
imul
mov
hlt
ss
clc
fcomp
hlt
xor
in
shl
sbb
push
pushf
je
cmp
in
repnz
outsl
inc
xchg
aad
cmp
das
xlat
jb
div
les
iret
jmp
jne
cli
loope
add
aam
in
out
cmp
mov
sbb
dec
lahf
xchg
mov
add
fisttps
loope
mov
loope
dec
psubb
sub
inc
add
xchg
push
insb
lret
or
test
xor
lret
fcmovnu
add
pop
movsl
push
lea
cmp
js
repnz
dec
xor
push
cmp
push
orb
loopne
xchg
fstps
inc
fisubl
out
lods
dec
movsb
xchg
int
inc
pop
scas
dec
insl
push
cmpsb
shl
xchg
test
or
fs
fwait
mov
pop
pop
pxor
cltd
mov
inc
leave
fadds
mov
adc
add
adc
popl
xor
add
jg
gs
dec
dec
mov
hlt
inc
scas
cmp
sub
pop
test
das
scas
cwtl
sbb
mov
int
cwtl
out
adc
xor
int
aas
into
xchg
popf
dec
push
push
push
mov
cli
xor
jge
ret
sbb
loope
or
inc
inc
cld
dec
cmpsl
adc
scas
push
imul
mov
mov
mov
adc
xor
push
pushf
xor
push
pop
lcall
sbb
lods
call
into
inc
adc
inc
push
mov
movsl
dec
gs
pop
aaa
call
jecxz
cmp
push
pop
icebp
dec
les
and
pop
push
fbld
pushf
aas
sahf
cwtl
stos
inc
and
insb
fcmovnu
fcompl
mov
fldcw
xchg
les
push
inc
and
fdivl
ret
test
aad
pop
jbe
dec
pushf
js
mov
mov
xchg
mov
iret
dec
in
aam
js
int
sub
pop
lret
je
fisubrl
jmp
and
xor
dec
sti
negl
pop
mov
push
pop
int3
adc
repz
fmuls
inc
cmpsl
mov
stc
xor
cmc
and
enter
mov
jnp
or
movsl
or
inc
add
mov
jbe
call
push
or
dec
into
and
stc
sbb
and
push
les
mov
arpl
movsb
movsb
aam
and
mov
or
xor
mov
mov
jae
jmp
mov
scas
sbb
mov
cld
cld
aaa
ret
push
nop
mov
call
add
sub
push
fisubrl
push
or
stos
mov
in
add
and
xchg
sub
repz
mov
sbb
ja
xor
loopne
mov
push
divl
xlat
popf
pop
or
outsb
sti
into
sub
xchg
sub
ret
adc
cmp
cmp
sub
cli
inc
std
push
dec
jle
je
jg
test
out
addr16
shrl
jmp
sub
aad
mov
stos
shlb
and
mov
dec
lods
mov
movsl
fwait
repnz
fstpl
insl
repz
sti
je
dec
loop
ss
sub
xor
les
roll
arpl
push
xchg
int
xchg
add
and
pushf
dec
aam
xchg
inc
cltd
dec
outsl
lea
adcl
pop
mov
adc
adc
mov
iret
xchg
push
sub
int
out
mov
dec
cmp
std
adc
enter
add
fwait
add
call
mov
movsl
pop
push
and
test
xor
aaa
dec
mov
push
mov
es
xchg
psllw
push
xor
sub
fldenv
dec
aad
lea
xchg
push
xchg
fildl
movsl
ljmp
and
sbb
test
sbb
ja
fists
adc
mov
xchg
and
movsl
mov
cmp
inc
cmc
loope
or
add
icebp
sbb
fsub
inc
jge
cmpsl
out
xlat
sbb
mov
lret
or
int3
fildl
les
mov
roll
sub
lret
leave
push
sbb
inc
sub
push
and
sbb
jecxz
mov
jbe
loope
fnstenv
jnp
je
jmp
push
push
out
popf
dec
cmp
repz
cltd
movsl
xchg
addb
sarl
popf
push
xchg
and
cpuid
add
shrb
rclb
nop
push
aad
aas
cmp
cmp
popa
jp
aaa
lret
andb
divb
cli
sbb
and
mov
std
rorb
jecxz
cmp
xchg
xchg
dec
cmp
lahf
push
push
in
enter
test
jne
stos
sbb
cli
xchg
fildl
pop
dec
push
insl
and
xor
xchg
movl
add
lret
cmc
rolb
xor
dec
je
bound
mov
pushf
gs
sbb
adc
shlb
sub
inc
lret
ficoms
pusha
outsl
add
ja
fwait
mov
fwait
pop
and
push
xor
push
add
xor
push
add
popa
nop
rcl
pop
lock
scas
jle
pop
std
xlat
ljmp
xchg
in
fidivrs
test
push
loop
sarl
inc
jl
test
cwtl
orb
cmp
mov
clc
add
or
lds
mov
pop
inc
insl
repz
bound
subb
adc
stos
pop
push
ljmp
dec
xchg
mov
jge
and
jns
ljmp
rcr
mov
movsb
and
movsl
adc
insb
jne
scas
notl
mov
jg
xchg
fninit
clc
fldenv
add
ds
sub
jb
xchg
pop
adc
xor
loopne
inc
jo
jno
fsubr
shl
popf
pushf
sbb
xchg
ret
loope
das
nop
xchg
jecxz
pushf
pop
mov
cld
jo
sarb
rorl
add
movsl
adc
adc
push
pop
jmp
or
fdiv
aam
ss
inc
daa
out
or
shll
sti
ret
xor
push
push
setb
popf
lods
or
movsb
sub
hlt
mov
scas
stos
push
pop
mov
popf
out
mov
xor
inc
jo
popa
int3
movl
loop
sbb
dec
jb
xchg
aas
xor
mov
mov
mov
push
and
testb
lods
pushf
dec
shll
mov
lea
add
sub
dec
ja
stc
mov
movsb
dec
dec
daa
fwait
push
mov
data16
sub
aaa
daa
and
dec
xor
loop
cmpsb
add
icebp
out
andl
and
popa
xor
jno
add
adc
mov
cmpsl
dec
ds
xchg
enter
pop
xchg
add
adc
xbegin
xchg
cmc
aas
rol
xchg
out
push
clc
out
adc
mov
mov
sbb
push
clc
xlat
pusha
lret
push
dec
jg
add
cmpsb
leave
rcrl
out
in
jnp,pt
ret
in
movsb
loop
aam
test
jge
lock
divl
shll
sbb
test
outsb
repz
mov
mov
xchg
adc
or
sbb
sub
mov
mov
into
xchg
or
xchg
inc
aad
scas
frstor
fwait
sub
push
mov
shll
je
xchg
jne
packuswb
or
dec
dec
cmc
and
pop
loopne
out
popa
lcall
repnz
inc
or
outsb
stos
adc
push
adc
shl
ljmp
int
cltd
xchg
pusha
das
inc
mov
sbbl
loop
mov
aam
fiaddl
cmp
push
or
ret
ljmp
adc
faddp
push
ret
jl
xlat
jmp
fidivl
in
dec
arpl
gs
sub
pop
xor
jbe,pt
xchg
bound
xchg
lret
cs
mov
and
inc
imul
sub
movsb
pop
scas
xchg
loopne
imull
adc
mov
addr16
scas
jne
ljmp
test
cmp
hlt
push
in
mov
push
jge
add
fistps
and
cmp
and
rclb
lret
sub
loopne
shll
jmp
gs
push
orb
dec
inc
stos
outsl
faddl
mov
cmpsb
and
mov
push
and
mov
enter
mov
and
push
pop
movsl
jecxz
es
xlat
mov
push
mov
sarl
mov
jae
mov
push
ja
mov
dec
xchg
inc
mov
int3
loopne
sub
rcrl
add
mov
out
pop
jns
or
or
js
cmp
sbb
mov
int
xor
les
push
repnz
bound
testl
mov
push
test
add
std
into
cwtl
adc
mov
pusha
sbb
out
xchg
nop
test
lods
leave
loopne
and
and
js
ljmp
lock
push
dec
aas
adc
push
sub
gs
fs
xor
pop
movq
test
clc
inc
push
xor
sub
pop
out
push
test
aad
lods
pop
iret
imul
mov
cmc
out
push
outsl
jp
rcll
mov
lcall
jbe
sub
jne
sub
outsb
xchg
mov
cmp
roll
mov
test
mov
das
loope
xlat
jb
pop
jnp
xlat
pop
push
pop
icebp
repnz
bound
jecxz
hlt
xchg
xchg
jo
fisttpll
xor
xor
dec
insb
push
in
ja
jg
xchg
push
mov
ss
sub
cli
insl
aam
adc
outsl
fidivs
mov
or
jbe
ret
dec
rcl
bound
rclb
push
and
push
ret
pusha
lret
xor
dec
popf
stc
push
xchg
pop
data16
clc
inc
xchg
sbb
cltd
mov
jecxz
loope
in
add
ss
negl
jns
or
mov
mov
jns
xlat
sub
sub
sub
mov
pop
and
jo
mov
push
push
into
lds
ret
daa
mov
es
orb
jge
in
mov
xchg
sub
out
mov
sbb
pushl
or
jmp
or
jmp
cmp
call
sbb
in
clc
pushf
gs
adc
mov
push
test
fistpll
add
cmp
pop
mov
fidivrs
mov
or
daa
mov
test
rcrb
out
xlat
fsts
xchg
xor
and
adc
jg
xor
mov
cmp
mov
aas
bound
lock
sub
lahf
jne
lret
jecxz
shrl
test
dec
aad
cmp
dec
fiaddl
jge
xchg
inc
out
outsl
sub
call
stos
jb
fisttps
push
cld
repz
sbb
mov
and
push
and
call
or
mov
dec
dec
test
bound
call
and
xchg
mov
ljmp
xor
xchg
popl
mov
xchg
adc
xor
jno
or
sahf
rorb
mov
and
sub
dec
sub
mov
xor
dec
mov
jo
or
and
xor
fildl
loop
ds
test
add
mov
daa
xchg
popa
out
cs
out
cmpsl
jmp
mov
out
and
jecxz
das
pop
add
pushf
push
lret
mov
nop
sub
mov
cmp
jecxz
sbb
pop
aaa
xor
ja
cmp
ret
inc
or
or
mov
mov
adc
sbb
pop
addb
add
adc
xchg
fst
pop
adc
mov
rcr
idivl
jb
roll
fninit
outsb
stos
jbe
insl
sub
mov
mov
sbb
xorb
inc
mov
push
inc
rcrl
arpl
leave
inc
shr
insl
pop
fisubrl
push
jne
inc
fiaddl
push
xor
xchg
enter
mov
cmp
and
xchg
push
lea
sub
mov
scas
repnz
sbb
addb
push
andb
or
bound
gs
pop
push
dec
cmpl
xchg
out
sub
xchg
les
sbb
dec
ds
sbb
int3
cmc
test
ret
add
int3
bound
push
mov
fwait
xor
es
xor
adc
ficomps
mov
and
sub
cli
mov
rcrb
mov
push
xor
cli
arpl
out
stos
add
push
xchg
stc
mov
jae
imul
sub
jo
xchg
int3
cmpsl
jmp
pop
stos
jno
lahf
popa
cmc
adc
adc
iret
adc
cmp
cmpsb
push
sti
movsb
mov
bound
xchg
push
mov
js
fstpl
scas
pop
xchg
ret
les
pop
andps
xchg
mov
mov
adc
cld
and
inc
ret
cwtl
jecxz
insb
out
sub
rclb
aad
push
xor
icebp
repz
call
test
push
xlat
jno
mov
xchg
movsl
repz
jle
mov
pop
mov
stos
inc
es
pop
decl
dec
mov
jecxz
aas
dec
imull
push
sbb
es
lds
orb
or
andl
sti
sub
adc
push
shll
aaa
xchg
add
rorb
fmul
pop
mov
inc
push
pop
ds
xchg
cs
mov
divb
mov
lcall
push
pop
ret
mov
orb
jns
xor
mov
add
mov
ljmp
filds
lahf
adc
pop
sbb
xor
xor
cmp
pop
test
mov
lods
or
inc
cmp
push
bound
cld
test
jle
pop
mov
inc
fnstcw
dec
fidivrs
pop
fnstcw
das
int3
xor
movsb
pop
sub
pusha
inc
and
iret
gs
jb
pop
clc
es
fnstcw
cmp
sbb
sbbb
movsb
mov
ret
out
inc
ljmp
das
mov
ss
cmp
data16
add
shll
rol
jecxz
pop
mov
test
or
leave
shll
sub
jge
cmp
ret
fildll
loopne
scas
gs
stc
lock
gs
lahf
loope
dec
test
std
cmpsb
pop
jo
mov
adc
cmp
stc
pop
je
stos
arpl
inc
push
int3
jb
mov
push
mov
or
outsb
fidivrs
out
imul
loope
push
adc
lods
push
arpl
test
dec
out
iret
aaa
push
outsb
out
fistl
stos
outsl
insl
sbb
ret
shll
or
out
sbb
dec
shlb
das
dec
add
movsl
cli
inc
inc
maskmovq
into
or
and
add
mov
sbb
orb
and
mov
nop
xchg
les
nop
data16
cwtl
inc
sahf
fadds
std
lcall
xchg
mov
mov
jo
movsb
arpl
mov
cld
in
insl
shrb
in
mov
pop
mov
lods
loop
in
push
enter
scas
aaa
gs
or
jle
inc
out
and
pop
out
mov
jne
inc
inc
jno
cwtl
xor
inc
daa
lcall
cmp
sahf
cmp
jne
mov
push
mov
sbb
dec
in
mov
arpl
jnp
xor
xorb
sbb
sbb
ja
out
pop
fdivrs
aad
enter
test
mov
movsb
sub
in
ret
inc
enter
stos
pushf
out
push
pusha
stos
enter
xor
mov
dec
ret
lret
test
lahf
pop
rcl
insl
addb
loope
jno
shlb
mov
xchg
mov
sbb
lret
mov
push
jge
adc
push
sbb
mov
popf
sub
add
adc
push
sub
jge
adc
sub
fisttpll
xor
int
stos
adc
xchg
iret
xor
rcll
mov
cmp
data16
pop
and
push
cmpsb
or
inc
cmp
addr16
je
push
es
dec
ja
lahf
and
imul
jo
out
sbb
imull
jnp
xchg
scas
enter
aad
sahf
popa
loopne
scas
in
inc
incb
sub
mov
enter
cmp
or
lcall
mov
jno
mov
cmc
movsl
stos
pop
inc
mov
ret
aad
pusha
cmp
inc
xor
cli
in
lret
pop
xlat
mov
cli
or
jp,pt
xchg
jne
mov
in
add
shlb
js
push
out
mov
mov
push
call
xchg
arpl
mov
cmp
and
cli
add
out
and
sub
call
and
pop
out
jle
or
sub
mov
mov
adc
mov
cmp
mov
outsb
test
andl
pop
sbb
lea
push
and
or
in
stos
gs
inc
dec
mov
clc
jge
cmp
xchg
inc
pop
rcll
jno
in
push
cs
mov
ficoml
add
jbe
pop
outsl
lahf
cmp
cmc
sti
stos
dec
jle
in
cmp
cmp
inc
icebp
adc
mov
or
popa
fidivl
mov
insb
mov
out
loop
lcall
jno
dec
adc
arpl
sbb
js
cmp
or
mov
dec
dec
or
in
into
fnsave
pop
sub
mov
mov
std
imul
icebp
cmp
ljmp
iret
out
cli
lea
pop
aaa
cli
jb
pop
test
sti
mulb
inc
or
fs
cltd
mov
mov
outsb
cmp
dec
fdiv
fsubrs
jnp
xlat
adc
fisttps
andl
cmc
mov
in
dec
xor
push
and
cmp
leave
add
mov
rorb
fwait
adc
js
cwtl
xor
pop
add
and
xchg
fldcw
xchg
fcmovu
insb
repz
xchg
gs
dec
add
movsl
inc
jno
sub
push
sbb
test
mov
lock
cwtl
ljmp
insl
leave
cmpsb
negl
xchg
push
pop
inc
sub
sahf
jnp
cmp
jmp
icebp
fimull
shlb
mov
pusha
or
mov
add
pop
std
mov
cwtl
mov
xchg
mov
mov
fldenv
or
fbld
test
add
leave
dec
sbb
outsb
jl
adcb
pushf
mov
xchg
xor
and
cmp
mov
aas
jecxz
inc
out
pop
cs
ret
adc
rep
mov
frstor
dec
mov
cli
inc
leave
jnp
push
test
repnz
arpl
fdivrp
sti
and
mov
loopne
cltd
xor
jecxz
cmc
cmp
pop
mov
jp
loope
addr16
sub
pop
cmpsb
out
xlat
mov
mov
xchg
icebp
aaa
or
ss
dec
mov
jbe
or
adc
sub
nop
adc
sbb
ljmp
lods
clc
addr16
jbe
add
mul
frstor
cmp
stos
in
push
cld
pop
xchg
xor
and
in
dec
decb
hlt
daa
jae
pop
push
add
lods
add
inc
out
cld
orb
sub
lods
orb
push
fildl
xchg
mov
xor
rcr
xchg
mov
decl
sbb
and
stos
sbb
movsl
push
in
in
jnp
xor
repz
mov
jmp
into
or
push
cmp
call
push
cmp
div
jb
cmp
stc
test
dec
stos
sahf
and
adc
in
sbb
xcrypt-ecb
stc
xchg
dec
sub
dec
sbb
xchg
xchg
adc
dec
adc
sub
push
cltd
sbb
lods
adc
pushf
mov
push
mov
div
sub
idivb
mov
fisubrl
dec
in
jbe
jb
or
sbb
adc
pusha
sbbl
testl
or
mov
enter
jle
adc
stos
dec
shrb
repnz
cmp
sarb
adc
sti
aaa
fisubl
dec
cmc
jge
sbb
pop
or
repnz
cmp
mov
dec
mov
lods
popa
clc
stos
pop
mov
mov
lret
call
push
lds
test
cwtl
idivl
xor
je
add
xor
test
push
adc
add
xlat
xor
or
jp
ficoml
movsb
dec
add
movsl
push
shrl
imul
push
push
push
pop
sub
ljmp
and
movsb
adc
sahf
jle
and
push
mov
inc
cmp
loope
add
insl
test
mov
dec
mov
ja
push
sub
inc
clc
push
fisttps
gs
xor
outsb
in
mov
sub
pop
jb
adc
incb
loope
pop
xor
add
and
pushf
pop
data16
jo
push
dec
mov
lea
pop
adc
out
insb
loop
pop
mov
jb
daa
sbb
xchg
clc
and
cmp
jbe
mov
dec
mov
lods
pop
adc
fs
sbb
add
cmp
les
adcb
clc
mov
ret
inc
xor
cmp
mov
leave
mov
pop
sub
aaa
pop
insl
push
jne
lods
jl
nop
cwtl
je
xchg
popl
pop
or
lahf
movsb
in
cltd
xor
dec
xchg
sub
loopne
hlt
inc
cmp
nop
inc
sbb
test
js
imul
cmpsl
loop
stos
test
inc
repz
leave
mov
sbb
popa
cmp
or
dec
aam
mov
sahf
popl
fcmovu
mov
mul
stos
add
adc
push
shlb
sbb
mov
leave
xchg
inc
scas
ret
int
in
cmp
cmp
pop
jle
add
and
cwtl
out
imulb
les
in
xchg
idiv
pop
push
popa
and
mov
popf
or
mov
mov
sbb
das
lcall
enter
jno
sahf
xchg
and
cmpsl
out
in
xchg
js
js
inc
mov
addb
out
popa
aaa
pop
xor
das
jbe
popfw
ja
imul
push
test
push
jle
int3
dec
push
stc
sbb
mov
sbbl
pop
andb
and
cmp
cwtl
jg
lds
stos
mov
in
adc
leave
daa
test
js
addr16
mov
test
repz
sbb
shrl
jae
adc
push
lds
stos
repnz
mov
or
sbb
adc
ss
push
xchg
imul
ja
cmpb
jo
fcoml
subl
xchg
aam
add
xchg
je
cmp
xchg
repnz
lea
lea
push
xor
inc
jmp
mov
div
mov
mov
jne
adc
test
pushf
out
cmp
dec
jbe
sbb
push
mov
dec
mov
and
sbb
bound
or
and
movsl
mov
lods
xchg
adc
lret
rcll
push
push
aad
jne
or
jp
ror
popw
mov
adc
nop
xchg
addr16
mov
jg
mov
and
popf
shrl
jle
sub
in
daa
sub
cli
imul
push
mov
mov
out
mov
out
stc
gs
out
ja
test
test
xchg
shl
lods
mov
out
into
or
jge
sbbl
ljmp
fsubrl
icebp
jb
iret
xor
sti
fmuls
sub
jle
xor
fcmovbe
lods
add
imul
iret
pop
dec
andb
sub
mov
lods
out
dec
fdivr
arpl
iret
faddl
push
aaa
scas
push
jns
popa
xchg
push
cmpsl
in
push
insl
jb
test
adc
add
xlat
js
decb
push
data16
inc
jnp
adc
nop
mov
push
mov
jne
pop
mov
mov
push
sub
cmpsb
or
outsb
sbb
fcoml
pusha
jae
sub
push
or
mov
lret
in
mov
pusha
out
insl
dec
xor
mov
jg
es
mov
push
cmp
adc
cmp
cmp
push
mov
inc
adc
push
and
lret
test
divb
int
int
fisubrl
mov
sbb
shrl
dec
xchg
iret
lock
inc
test
jge
es
xchg
inc
push
adc
cmp
jae
aas
pop
cmp
fisttpl
das
shll
inc
xchg
repz
adc
ja
les
push
imull
sbbl
xchg
movsl
imul
mov
popf
xor
jne
xchg
sub
pop
push
add
lret
stc
inc
xor
fidivrs
je
adc
mov
pop
jmp
je
mov
and
dec
aad
jno
lret
dec
sbb
test
daa
mov
fwait
xchg
stos
push
cmp
xchg
fildl
enter
in
push
movsb
jmp
or
leave
out
imul
sarb
mov
dec
aam
out
adc
mov
test
pop
rorl
adc
mov
jmp
dec
sbb
dec
rcll
lods
cmc
cli
outsl
les
aad
lods
dec
xor
cmp
mov
nop
decl
sti
lahf
shll
pop
sarl
cmp
and
cmpsb
sbb
xchg
dec
jbe
sbb
call
ret
aaa
iret
out
imul
or
out
xchg
cmpsl
cmpsl
enter
ficoms
add
std
adc
xor
insl
shrl
ds
mov
cmpsb
stc
movsl
cmp
mov
jne
jno
push
fprem1
pop
mov
arpl
mov
cwtl
inc
call
mov
and
mov
xor
inc
pop
mov
inc
rolb
repz
cmp
cmc
adc
dec
scas
inc
pop
jecxz
xor
cld
add
push
shll
sbb
pop
rcl
xchg
repz
xchg
pop
loope
mov
or
mov
jnp
mov
push
movsl
push
xchg
insb
subb
push
cmp
inc
inc
mov
lret
push
adc
add
push
aas
ja
outsb
xchg
mov
mov
loope
fcomps
lds
xlat
xchg
rorb
inc
xchg
mov
inc
mov
xchg
aad
stc
jge
mov
push
add
jnp
aas
mov
cmp
addl
xchg
mov
sbb
lea
sub
adc
leave
push
pushf
hlt
out
jne
out
adc
xor
dec
sub
xchg
dec
mov
fsubrp
fcomps
xor
sbb
push
outsl
gs
jno
lcall
or
sbb
adc
mov
adc
mov
fsubrl
daa
pop
inc
jmp
negb
adc
iret
and
jg
jg
movsl
xor
negl
mov
cld
test
pop
outsl
adc
pop
push
sub
adc
rclb
mov
add
in
mov
cld
ljmp
inc
pop
pop
iret
nop
mov
cmpl
mov
fnstcw
mov
push
cmp
mov
shr
jns
pop
cmpsl
ss
cmpsl
not
mov
incb
je
cltd
xchg
lcall
rorl
xchg
fs
in
jno
mov
dec
insl
repnz
cmp
mov
jnp
pushl
in
push
int
in
inc
mov
jb
jl
xchg
add
jne
push
pop
add
cltd
cltd
mov
fs
pop
and
adc
call
test
xor
fwait
les
outsl
out
mov
cltd
fcoms
lahf
xor
pop
pop
fisubrl
loopne
cltd
dec
mov
lcall
adc
aaa
scas
pop
sub
add
lcall
loope
mov
cwtl
pop
les
daa
daa
and
mov
cmp
jmp
inc
cmp
jle
outsl
popf
popa
int
jb
xchg
pushf
mov
mov
mov
cmp
sbb
aad
xchg
add
ss
mov
notb
loop
lock
xor
jl
add
inc
and
push
cli
cmp
pop
test
jge
jnp
sub
outsb
pop
dec
data16
jae
add
add
or
mov
out
push
clc
mov
insb
leave
push
mov
cwtl
scas
fmull
adc
scas
mov
pushf
mov
ja
adc
into
lahf
iret
in
or
not
arpl
xchg
insl
cmp
xor
test
scas
das
out
subl
lcall
outsb
jo
xchg
lods
jle
dec
cmp
mov
mov
lcall
es
ss
shr
faddl
pop
inc
cmc
mov
inc
pusha
push
jo
mov
mov
out
lret
ror
repnz
sbb
fstps
es
es
cmpsl
subb
iret
outsl
cmc
popf
cmpsb
scas
hlt
fimuls
jg
test
cwtl
fmul
mov
ja
mov
lcall
clc
inc
outsl
and
in
jno
fisubrs
adc
push
adc
int3
push
popa
jnp
outsb
sub
popf
add
dec
mov
out
adc
mov
push
xlat
inc
mov
and
mov
lcall
pop
shlb
aaa
jp
lahf
jno
and
mov
and
push
hlt
dec
les
scas
orl
dec
js
inc
ret
lcall
mov
add
push
pop
or
stos
bound
add
push
add
dec
pop
or
mov
test
test
ja
inc
sub
sbb
ret
int
pop
popa
sahf
call
sub
inc
mov
xchg
mov
inc
pop
outsb
lret
loop
lds
mov
call
icebp
cwtl
mov
rcr
push
ret
sbb
insl
xchg
repnz
sub
cmp
dec
dec
sahf
pop
or
add
sub
jmp
sub
sbb
xchg
testl
std
xor
or
aad
and
pop
cmp
mov
adc
test
jb
push
cli
sub
int3
fs
das
pop
out
data16
xor
in
add
xor
add
jnp
xor
sub
call
into
arpl
push
cmp
jge
out
das
push
int
mov
push
arpl
or
test
jns
lods
jge
or
pop
leave
ljmp
cmp
mov
xor
and
iret
push
sti
insl
xchg
cli
cmp
lahf
daa
daa
dec
fnsave
mov
flds
mov
in
xor
xor
sbb
loope
test
cs
push
rolb
xlat
sbb
sbb
pushl
fisubs
jno
xchg
jnp
and
fisubl
sarb
cltd
fbstp
bt
bswap
mov
idivb
call
in
clc
lcall
pop
push
dec
cmp
xor
mov
fiaddl
jnp
movl
lahf
xchg
mov
loope
jns
mov
mov
hlt
fadd
ja
lock
hlt
adc
dec
repz
jl
jae
pop
orl
jg
test
mov
push
flds
hlt
sub
rolb
xor
xchg
sbb
popa
sub
dec
push
std
mov
xor
pop
sbb
lret
fsubr
xor
or
fdivrl
aam
mov
ret
adc
icebp
sahf
mov
inc
mov
sahf
clc
inc
sbb
mov
ret
rolb
push
jo
mov
lret
add
or
add
pop
hlt
inc
adc
leave
ret
mov
add
sub
push
xchg
mov
pop
lock
rcl
mov
cmpsb
sti
es
imul
pop
fstps
jbe
jae
cmp
pushf
cli
adc
mov
adc
pop
lahf
pop
or
and
fisubl
lds
or
lea
xchg
lret
and
xchg
lahf
fs
jl
xlat
pop
mov
jne
int3
cmp
mov
cltd
jbe
mov
stos
adc
jnp
adc
ficoml
scas
cld
add
stc
aam
xor
push
adc
cmp
shlb
outsl
mov
dec
jne
int
into
loop
fnstenv
aaa
add
shll
cmp
aas
jns
stos
lods
popf
fdivr
cmp
pop
je
inc
pop
dec
push
movsl
mov
jl
pop
fsubl
sub
and
cmp
pop
pop
dec
lock
movsb
jb
lahf
xor
cs
cmp
pop
fisubs
sub
sub
in
push
fs
iret
stc
loop
sbb
pusha
jl
aas
outsl
jbe
adc
jmp
mov
sub
inc
add
push
lcall
fwait
sub
dec
and
les
cmc
inc
aaa
popa
jae
inc
pop
jno
nop
scas
and
push
sub
inc
fcoms
es
pop
dec
lock
jns
xor
test
mov
cmp
ds
je
or
sub
addr16
push
fstps
ds
cmp
movsb
mov
fwait
mov
mov
ret
ror
cld
leave
mov
push
mov
cmp
add
test
push
or
testl
pop
subb
push
imul
push
push
out
xor
jnp
inc
ds
fs
jle
arpl
mov
ss
imul
jecxz
push
add
dec
add
scas
mov
loop
jb
mul
add
fsubrl
jp
ljmp
mov
sub
mov
mov
mov
xorb
adc
leave
iret
jae
clc
pop
push
xor
out
aaa
shrb
imul
mov
lods
push
loope
in
loope
aaa
cs
aaa
xchg
cmp
movsl
outsl
xchg
jg
into
and
andl
push
lcall
adc
inc
lret
rorb
outsl
cs
mov
mov
bound
sub
in
add
mov
imul
jp
xchg
pusha
push
ror
xchg
enter
and
es
jno
inc
push
mov
rorb
adc
into
mov
add
mov
lret
xchg
movsl
mov
in
cltd
in
hlt
sub
push
js
jb
daa
arpl
lds
mov
loope
mov
mov
mov
pusha
clc
mov
lea
shrb
adcl
jecxz
in
popa
aam
repz
jno
mov
sub
and
or
add
pop
dec
shrl
int
lret
mov
les
mov
xchg
aas
int3
xor
out
jmp
in
dec
rcrl
lock
or
jno
jne
or
inc
scas
push
movsl
lods
or
cmpsl
jmp
roll
std
loop
pop
jg
xor
cltd
nop
inc
call
into
cltd
std
pop
out
push
daa
scas
sub
rolb
lret
jnp
xor
fistpl
adc
push
jg
int3
mov
jb
xlat
pop
aaa
sbb
jnp
pop
inc
imul
adc
inc
mov
lea
call
dec
sbb
inc
je
popf
sub
inc
adc
leave
mov
inc
push
add
jecxz
imul
lret
or
cmp
lods
jg
pop
aaa
xchg
rcrl
push
or
js
xor
in
cmp
mov
clc
push
fcoml
or
dec
push
sbb
dec
test
xor
ficoms
pop
jns
or
icebp
lds
cs
and
push
lret
cmp
jbe
rcll
leave
mov
fdivrl
iret
ja
cmp
xor
cmovs
in
pop
div
stc
in
jecxz
test
stc
sarb
mov
andl
cmc
aam
adc
inc
sbb
movsb
mov
push
icebp
jnp
bound
test
push
inc
aas
or
cmp
movsl
or
jl
xacquire
jae
insl
cmpsl
jnp
and
les
cltd
mov
pop
inc
add
or
rcl
cltd
fwait
dec
cmpsb
sti
mov
add
std
ret
lcall
mov
jns
outsl
subl
inc
pushf
into
shrl
cmp
inc
pop
mov
xor
cmc
mov
in
or
rclb
in
and
push
pop
out
sub
push
sbb
out
pop
mov
mov
inc
shll
cwtl
mov
jl
xchg
aad
hlt
jbe
cmc
inc
pop
fsubl
mov
xlat
and
in
arpl
pop
xchg
int3
insl
pop
lret
mov
pop
push
fcoml
cli
outsb
js
js
js
sbbb
mov
aam
push
fdivr
lea
xchg
bound
or
cs
popa
sahf
fwait
loope
adcl
push
loop
iret
sbb
rcrl
lahf
lahf
test
sub
cmc
dec
orb
mov
jmp
and
aad
stos
popf
cmc
pop
adc
xor
pop
pslld
repnz
mul
cld
cmp
out
std
nop
out
in
sub
outsl
aaa
pop
aas
mov
in
push
pop
and
cmp
push
and
cmc
inc
push
stc
mov
dec
fstps
fiaddl
cmc
push
xchg
cmp
fsubl
xor
cs
inc
inc
xchg
nop
dec
sbb
cs
js
or
sti
or
call
es
inc
add
ljmp
fstl
mov
mov
enter
subb
and
jp
dec
pusha
jmp
sub
push
pop
lds
scas
add
in
adc
or
dec
popa
push
xor
sub
adc
pop
xorl
repz
xchg
lahf
clc
rcrl
mov
iret
js
mov
jnp
sub
sbb
aas
rcrl
aaa
sar
adc
je
adc
pusha
lea
push
test
jno
test
fbstp
movsb
inc
psraw
scas
xor
ljmp
xchg
and
jge
stos
xchg
insb
xchg
inc
mov
inc
cli
scas
dec
jl
mov
iret
mov
mov
ret
adc
xor
mull
pop
insl
nop
ret
aaa
sbb
loope
lahf
outsl
repnz
adc
iret
push
inc
and
movsb
sbb
push
inc
cmc
and
xchg
dec
orb
jb
sbbb
sti
xchg
sub
stos
out
dec
sub
ja
lds
in
push
mov
xor
pcmpgtd
addr16
add
stos
ret
addr16
sub
pop
out
sti
popl
ljmp
sarb
sub
arpl
adcb
mov
jne
shrl
data16
lock
dec
adc
test
aam
adc
lds
sahf
pop
sahf
fbstp
lcall
lcall
roll
jmp
xor
or
mov
in
cmpsb
test
push
mov
fnsave
cli
pop
push
stc
sub
loopne
mov
mov
pop
xor
or
mov
imul
fsts
cmp
fwait
popa
fisubs
leave
pushf
dec
cmpsl
stc
scas
mov
push
jl
ror
and
pop
cmpsb
lret
sarl
pop
decl
mov
dec
iret
pop
push
inc
pop
cli
cmpsl
pop
and
dec
sub
and
mov
inc
les
sub
in
subl
xchg
push
mov
cmp
jbe
shrb
xchg
jno
andb
ljmp
dec
jge
sub
addr16
test
and
nop
pop
fdiv
and
leave
push
pop
inc
mov
mov
cmp
loope
loopne,pn
repnz
cmpsb
mov
sahf
sarb
arpl
xchg
xchg
scas
inc
aad
decl
out
xor
pop
fldt
cmp
pop
pop
pop
cmp
lret
push
in
or
or
les
int
jnp
add
aas
dec
ljmp
jle
mov
dec
outsb
dec
imul
and
push
jns
pop
out
adcb
xchg
rcll
jne
mov
sub
in
xorb
add
jecxz
xor
dec
rorl
lahf
adc
or
je
movsl
mov
or
dec
mov
push
jl
shrb
mov
sti
out
loop
cwtl
jg
add
cmp
mov
cmpl
ret
insl
aad
pop
add
xor
test
lahf
lahf
ja
loope
push
je
test
xchg
fcomp
jns
pop
out
pop
pop
ljmp
imul
test
jge
call
add
and
or
sbb
sbb
sub
int3
push
cmpsl
ret
clc
push
insl
sti
xorb
xor
xor
push
pop
les
repz
jae
sbb
cld
pop
lahf
fmul
ljmp
inc
xchg
push
cld
fisubs
dec
outsb
adc
mov
je
cltd
xor
into
jle
push
addr16
jl
jae
dec
mov
cmp
cmp
adc
dec
pop
xchg
pushf
add
dec
adc
sub
leave
scas
jge
add
jg
xchg
scas
xchg
adc
add
xlat
add
andl
je
popf
js
pop
jo
adcl
sarb
pop
xchg
bound
insb
mov
es
mov
dec
xchg
xchg
push
iret
fadd
jne
cmp
out
xor
push
andl
push
xor
out
imul
sub
xor
xchg
push
aam
movsb
iret
push
nop
dec
or
jno
enter
add
ret
push
stos
mov
cli
mov
icebp
mov
aam
xor
mov
pop
fimuls
sub
popa
cmp
or
sarl
sbb
scas
pop
push
shll
pop
lods
adc
out
xchg
jbe
nop
inc
and
sub
outsl
push
push
int3
scas
inc
and
fdivl
fidivrs
insl
andl
xchg
in
ljmp
iret
fnsetpm(287
xchg
mov
pop
cmp
sahf
pushf
xchg
xchg
in
mov
in
ret
xchg
mov
sbbl
sbb
push
push
xchg
loopne
lcall
pop
repnz
leave
cmp
outsl
jecxz
xchg
in
mov
js
aam
cwtl
call
push
loop
xor
mov
sub
jmp
mov
fiadds
aaa
pop
ljmp
add
inc
or
test
mov
jno
mov
aaa
loope
pop
movsb
insb
push
jecxz
leave
outsl
mov
xchg
cmp
xchg
jae
rolb
push
add
inc
xchg
dec
pop
aas
mov
inc
and
xor
pop
xchg
clc
mov
inc
pop
pop
lcall
shl
adc
imul
jnp
xchg
dec
fnstenv
cmc
or
sbb
dec
push
dec
subl
aam
sarl
movsb
push
cmc
xchg
repz
push
cmp
pop
mov
cwtl
hlt
sarb
xchg
out
mov
xchg
xchg
enter
inc
testl
add
decl
push
subb
sub
and
scas
addr16
imul
in
adc
scas
pop
js
push
aas
data16
shrl
fadds
push
sarb
in
inc
loope
xor
daa
in
popa
mov
pop
jo
jg
scas
fsubrs
and
outsl
cld
mov
pusha
sbbb
lods
push
dec
jnp
mov
dec
sub
mov
popa
rorb
adc
icebp
or
jge
push
and
mov
xor
ret
push
adc
cli
xchg
pop
or
filds
add
fildl
xor
and
xor
sbb
or
mov
or
jmp
mov
mov
or
cmp
sti
aad
xchg
xchg
push
xchg
push
loop
jo
inc
aaa
out
sub
icebp
mov
cmp
scas
in
push
rclb
std
mov
fisubrl
and
pop
xchg
and
aaa
or
jg
dec
or
or
cmpsb
add
fnsave
or
das
mov
rorl
pusha
mov
out
repz
mov
mov
inc
inc
popa
jge
mov
ja
mov
andl
pop
lods
test
sub
data16
and
test
bound
sub
push
inc
mov
cmp
sbb
mov
sbb
inc
adc
loopne
imul
or
lds
jae
mov
bound
hlt
push
enter
xor
cmp
mov
out
fldcw
mov
loopne
or
dec
fstpl
push
mov
aad
mov
addb
jp
sub
pop
lds
loop
push
es
xor
cmpsl
pop
pop
loop
and
movsl
mov
or
popl
add
cmc
jle
pop
pop
ret
dec
lods
mov
fs
xchg
cmc
sti
pop
inc
inc
int
lods
jbe
ljmp
sbbl
fsubrs
jmp
lods
pop
mov
mov
test
lock
pop
jle
and
lahf
sahf
mov
add
xchg
mov
inc
push
mov
and
xor
jge
aam
xor
push
les
jbe
or
mov
lcall
push
repnz
mov
fs
sti
subl
mov
pushf
and
sbb
std
jnp
pop
xchg
push
or
or
movsl
inc
jno
mov
in
cmp
outsl
neg
inc
test
movsb
ret
pop
pop
in
popl
imul
lock
or
and
scas
mov
push
jnp
out
movsl
xor
aam
adc
ret
testl
incl
sub
add
fcoms
sub
stc
mov
adc
dec
rorl
out
in
lea
addr16
outsb
sub
jp
ret
adc
orb
jae
and
sub
in
add
es
push
cmp
and
jns
mov
sbb
mov
sub
cs
scas
int
leave
sub
add
jns
hlt
dec
jns
mov
adc
jecxz
xchg
data16
jecxz
ja
mov
adc
adc
aaa
mov
inc
mov
push
or
mov
orb
daa
sub
dec
lret
xchg
adc
xor
push
rorl
inc
lcall
mov
movsb
xchg
cmp
out
mov
stos
fildll
adc
xor
sub
sub
adc
lods
mov
leave
push
xchg
sub
jge
adc
ret
loopne
icebp
pushf
leave
xchg
pop
jae
sbb
or
icebp
repz
cmpsb
mov
add
pop
mov
out
adc
ret
shlb
xchg
adc
dec
pop
jmp
leave
pop
cmpsb
push
popa
pusha
scas
cmpsl
in
or
cs
push
or
imull
nop
mov
adc
push
mov
dec
mov
and
mov
mov
std
sbb
fwait
shll
in
mov
push
push
leave
addr16
pavgw
bound
push
or
jmp
ja
mov
sub
mov
mov
or
mov
xchg
cli
pop
bound
lea
push
xchg
push
push
in
pop
inc
mov
sbb
cli
test
and
push
cmp
stc
push
jge
inc
pop
out
adc
cltd
les
mov
std
dec
push
mov
jno
sbb
cmp
mov
cmp
sahf
push
das
and
xchg
inc
mov
xchg
push
add
xchg
je
frstor
pop
repz
je
mov
sub
iret
out
mov
xchg
add
out
icebp
gs
inc
fsubrs
repz
nop
test
sub
nop
inc
and
pop
and
aas
push
push
or
repnz
popf
adc
or
out
sub
add
jle
lock
lahf
xlat
adcl
pop
pop
hlt
mov
scas
lret
lock
shlb
mov
popa
pop
out
pop
and
hlt
jns
jecxz
shr
lret
jle
lock
sbb
fcmovnbe
scas
xchg
fs
sub
sub
jb
jne
incl
mov
out
insl
or
mov
insb
mov
and
mov
sbb
in
add
inc
cli
xchg
ljmp
je
adc
cmp
push
pop
jl
sub
and
push
in
sbb
js
arpl
retw
mov
int
icebp
cwtl
and
and
push
pop
arpl
xchg
jle
push
adc
popa
sbb
rclb
or
and
sub
push
xchg
dec
ja
or
pop
movsl
in
ss
into
enter
jbe
idivb
sbb
or
das
sub
jl
dec
cmp
dec
or
push
imul
add
xor
sarb
aas
xchg
add
sub
jnp
fidivrl
sbb
mov
dec
inc
insb
cmpsb
push
lods
arpl
lods
lret
lret
dec
ljmp
sub
scas
das
mov
push
cmp
movsb
fwait
sbb
pop
mov
add
adc
jmp
cmpsl
enter
ret
leave
xor
mov
push
sbb
sbb
add
lods
pop
dec
inc
les
xor
cmp
dec
dec
inc
push
icebp
sarb
cmp
jl
hlt
xor
outsl
and
cmpsl
imul
out
aaa
pop
mov
in
and
sbb
scas
adc
adc
out
gs
repz
sbb
xchg
lea
add
xchg
ss
popa
insl
fiaddl
test
cmp
test
xchg
or
sub
movb
mov
xchg
xor
clc
fadd
cmp
pop
xchg
inc
lock
rorl
cmp
pop
out
stos
fsts
push
repnz
sub
pop
in
adc
pop
pop
sahf
xchg
ss
pop
jno
mov
dec
add
push
pop
xor
push
cmpsl
fstpl
mov
jle
cmp
mov
mov
xor
sub
fwait
sahf
jns
and
rcpps
mov
pop
adc
test
sahf
push
dec
repnz
ret
jge
dec
cmp
push
and
pop
movsl
mov
push
cmc
jle
addr16
xchg
push
subb
sbb
xor
jb
cmp
lcall
jecxz
xor
mov
inc
adc
add
lahf
xor
mov
mov
cmp
movsb
aaa
xchg
xorb
aad
or
lds
xor
cmpsb
js
sub
mov
sbb
ja
mov
dec
das
cwtl
addr16
xchg
xchg
lods
add
and
rorb
xlat
pop
cmp
pop
aam
jne
mov
and
ja
mov
subb
jle
inc
mov
fnsetpm(287
jnp
cmc
cmp
mov
mov
and
dec
repz
std
mov
add
or
imul
pusha
xor
adc
add
loope
shlb
rcll
jne
mov
adc
adc
int3
adc
notl
fwait
sbb
sbb
jb
enter
in
and
fistpll
pop
gs
iret
inc
mov
adc
add
fbld
dec
jne
pusha
les
jecxz
ret
aad
xchg
pusha
idivl
mov
push
push
pop
pop
sub
jl
in
int3
rorl
cld
sub
mov
movsb
mov
aad
mov
adc
fs
sub
in
popl
aaa
mov
jnp
xchg
mov
push
cld
mov
and
mov
aam
and
cld
jl
adc
jmp
adc
inc
jle
sahf
daa
cmc
stos
and
sbb
mov
das
ja
jecxz,pn
out
adc
roll
out
add
dec
jns
mov
lods
fwait
jl
ja
add
insl
daa
or
cli
pop
pop
rolb
xor
pop
aam
xchg
push
outsl
push
or
jmp
movsb
aad
les
decl
loope
adc
outsl
cmp
fisttpll
xchg
in
and
int3
inc
inc
in
inc
enter
fwait
lcall
int3
out
or
inc
psubsb
pop
lea
outsl
sbb
push
cmp
daa
cwtl
shl
mov
mov
aam
call
pop
adc
int
mov
mov
jecxz
mov
cmp
fimuls
je
jp
cmpsb
and
mov
jecxz
sub
clc
push
ficomps
and
insl
int
iret
adc
or
dec
pop
lret
call
fimull
scas
push
inc
and
cmpsl
repz
jns
push
mov
pushf
mov
dec
rcrb
dec
movsl
int3
pop
pop
outsb
jecxz
add
adc
lcall
fistps
jne
jae
cmpsl
mov
bnd
jo
in
xchg
mov
cld
rcll
out
movhps
cmp
jne
out
xchg
inc
pop
fildll
sbb
and
xchg
pop
and
shl
scas
inc
faddp
xor
cmp
add
gs
jne
xor
sbb
out
or
cmp
pushf
or
jecxz
adc
xchg
roll
pop
mov
js
aam
sub
loope
jg
in
ss
in
xchg
movsb
mov
inc
jb
lds
dec
cmp
pop
insl
dec
and
mov
mov
hlt
sbb
inc
popf
repnz
mov
xor
or
cld
dec
sub
inc
pop
mov
into
sub
nop
inc
mov
adcb
cmp
mov
xchg
js
push
push
xchg
jnp
adc
push
jbe
and
adc
jge
pop
cmp
xchg
xor
stc
repz
gs
mov
out
mov
out
xor
stc
add
test
or
jno
push
shrb
push
out
sub
pop
pop
mov
push
sbb
lods
xchg
cmp
xchg
push
ss
shll
or
fildll
sti
sub
imul
add
ja
mov
jmp
lret
out
cmp
nop
xchg
lock
dec
mov
stos
test
sbb
out
push
hlt
cltd
mov
adc
or
ss
jo
sahf
xchg
dec
idivb
call
mov
and
add
pusha
dec
sbb
add
outsl
repz
imul
aas
je
fucom
push
loop
inc
loope
mov
dec
add
mov
out
push
and
in
dec
sbb
insb
shr
mov
dec
cltd
test
jno
rorl
loop
push
ss
cmpsl
in
and
mov
add
add
and
mov
jb
xchg
xchg
push
cmpb
loope
cmp
pop
andb
jl
movsb
fwait
cmpsl
mov
sti
fsts
aas
sti
stc
loopne
mov
or
popl
out
add
inc
push
pop
or
jno
sub
lret
push
call
je
sub
xor
sbb
dec
and
lcall
jo
adc
sub
std
mov
push
push
cmp
sahf
inc
add
sub
sub
ret
popa
out
jns
inc
jl
mov
sbb
xor
mov
xchg
push
dec
xor
adcb
mov
imul
dec
std
into
fmul
scas
mov
add
lock
cmc
mov
outsb
push
shrb
fnstsw
xor
test
adc
mov
lcall
rolb
sbb
shrb
cld
insb
xchg
pop
je
jecxz
stos
aam
and
imul
aaa
xchg
fidivrs
aam
stc
cmp
sbb
dec
rcrl
int
repnz
in
fnstcw
aad
lock
hlt
mov
ret
pop
ljmp
dec
popl
lods
out
adc
dec
mov
mov
jge
mov
cltd
xor
mov
or
add
mov
int
mov
mov
loopne
ljmp
cmc
jb
mov
test
cmpsl
int3
data16
mov
jecxz
das
mov
jle
and
dec
jbe
loopne
push
jae
fisubrs
sbb
push
pop
lock
mov
jb
rorl
pushf
adc
push
in
dec
in
loop
fisttpll
xchg
add
lds
mov
jns
jmp
xchg
scas
jnp
jmp
mov
lret
dec
cmp
inc
daa
cs
lcall
daa
mov
enter
ret
mov
popf
pop
inc
or
into
inc
jne
inc
xchg
mov
shrb
lcall
lret
adc
cmpl
sub
cmp
lock
ficoms
add
outsb
out
xor
repnz
pop
pop
daa
jp
ds
xor
fsubrl
lods
mov
pushf
fcmovbe
mov
mov
dec
test
sbb
push
stos
movsl
pop
test
push
xor
repz
jmp
aam
pop
sbb
xchg
lods
push
xor
inc
in
popf
out
jmp
int3
inc
fisttps
mov
jmp
jmp
add
jbe
pop
jns
test
insb
cli
cli
stos
push
in
and
std
mov
jnp
sub
sub
in
and
sahf
movsb
xor
fstpt
sbb
xchg
out
mov
xchg
push
enter
mov
das
testl
push
int3
lock
sbb
lahf
mov
loopne
push
daa
dec
test
jl
cmp
xor
push
mov
mov
xchg
nop
pop
inc
mov
addr16
mov
cmpsl
mov
into
jnp
sub
xor
cmp
imul
loope
leave
dec
call
ss
dec
adc
ljmp
dec
push
sbb
lods
ret
jmp
test
negl
stos
xor
das
les
sti
std
sarb
cmp
cli
pop
cmpsb
cmp
test
xchg
mov
and
mov
std
call
iret
repz
jo
scas
loope
shll
test
xlat
icebp
xchg
insb
mov
aad
rorl
or
inc
ljmp
stc
int
dec
fwait
jne
rorl
fsubs
mov
ss
xchg
adc
jno
mov
js
adc
out
sub
xchg
mov
add
jnp
add
scas
je
enter
popa
imul
mov
add
push
push
out
fstpt
iret
lds
fiadds
dec
push
pop
std
fildl
subl
call
andl
add
xchg
cmp
jae
sbb
lds
fcmovne
in
cltd
mov
mov
popa
sahf
neg
push
add
test
xchg
dec
stc
or
sbb
outsb
mov
fsubr
std
loopne
mov
dec
xchg
pop
sbb
xchg
out
mov
xchg
pushf
dec
xor
scas
repz
inc
mov
insl
push
cmpsl
sahf
loope
inc
mov
or
xchg
sarl
pop
xor
xor
pop
xor
mov
dec
cmp
inc
cmp
sbb
nop
adc
fildl
mov
idivl
add
xchg
push
lea
les
movsb
lea
ljmp
std
cmp
cmc
es
xor
xchg
adc
jle
fs
sbb
cmp
add
or
notb
mov
std
lret
fisttps
or
sub
add
mov
adc
xorb
mov
fisubs
out
shll
testl
push
and
sbb
cmc
test
pop
push
inc
jb
pop
mov
clc
pop
jo
insb
sub
adc
mov
cmp
mov
mov
outsl
mov
add
addr16
push
cmpsb
pushf
push
mov
mov
jp
inc
jmp
or
das
bswap
rclb
lretw
inc
mov
sbb
or
pushf
ffreep
arpl
sub
or
aas
cmc
mov
mov
xchg
add
xlat
dec
sub
xlat
sbb
andl
pop
mov
add
nop
push
cmc
mov
dec
mov
ss
test
adc
ficompl
and
rep
pushf
jae
jns
jnp
imulb
aaa
mov
flds
stc
pop
mov
mov
jg
mov
test
mov
sbb
sub
pop
in
dec
loope
psubq
sarl
sahf
stos
or
adc
sahf
xor
mov
cmpsl
jmp
out
stos
adc
cvtps2pi
sub
push
das
mov
int3
inc
cmc
push
adc
mov
push
cmp
aam
cmpsl
outsb
dec
insb
mov
sub
jmp
mov
mov
cltd
inc
lret
push
jge
sarl
pushf
jo
shll
cmc
cmp
adc
adc
xor
movl
iret
pop
cli
jbe
mov
xchg
lahf
sbb
pusha
xor
jmp
aam
fists
and
cmpsb
sub
xor
push
inc
or
mov
jb
popa
hlt
insl
rclb
filds
ja
sub
sub
fistps
bsr
insl
and
pop
xchg
or
sub
in
popa
mov
push
sub
xor
gs
fldenv
push
mov
clc
clc
leave
xchg
pop
push
movsl
pop
push
fildl
pop
lods
outsl
and
insl
rclb
inc
aam
loop
insb
les
mov
cmpsl
adc
jne
cld
mov
add
je
jmp
cli
jmp
jae
or
in
clc
and
mov
icebp
sub
mov
sbb
rcrb
push
sub
mov
scas
mov
mov
sub
adc
out
inc
test
ret
xchg
mov
push
int3
testl
insb
je
inc
mull
mov
cmp
pop
xchg
dec
push
sub
jecxz
lods
sbb
cmc
dec
fimuls
push
cli
adc
xchg
pop
outsb
inc
jo
lods
pop
push
pop
jmp
aad
stc
cld
fst
into
push
dec
fidivrs
inc
or
scas
dec
mov
aaa
stc
adc
push
push
dec
dec
mov
ljmp
xor
subl
dec
cmc
lods
repz
fistpl
pop
cwtl
mov
popf
clc
push
loop
xchg
xchg
shlb
add
mov
push
in
lds
sarl
in
pop
rcll
mov
push
add
sub
mov
ret
or
dec
xchg
cmpsl
cltd
add
mov
int3
sbb
mov
inc
or
pop
and
push
adc
lahf
mov
xor
loope
lcall
ret
add
shr
mov
push
mov
mov
add
jb
pop
cmc
dec
xor
push
or
sbb
push
cltd
lea
mov
adc
stc
push
ret
repnz
repnz
dec
jb
addl
cmc
mov
out
sub
div
arpl
mov
leave
add
jmp
sbb
cmp
or
les
dec
push
cwtl
fbld
arpl
cwtl
inc
sbb
arpl
test
fmuls
push
mov
cli
out
dec
xchg
ja
rcrb
lock
fnsave
imul
test
nop
aaa
pop
inc
xchg
ret
insb
stc
mov
jae
pop
pop
add
add
iret
sti
inc
pushf
fprem
cmc
arpl
mov
push
sbb
and
addb
idivb
pop
in
xchg
xor
sbb
lds
ja
xchg
cwtl
xor
fdivrl
out
jmp
xchg
insl
mov
sub
sbb
repz
sti
push
sbb
or
repnz
adc
ljmp
cmc
inc
stos
lods
insl
jnp
mov
mov
xor
inc
inc
sub
mov
out
in
xchg
pop
test
repz
mov
lea
and
sbb
jmp
jmp
data16
dec
int3
dec
adc
fcomi
pop
outsb
jns
addr16
adc
iret
xor
or
mov
xchg
leave
xchg
mov
shrb
neg
sbbl
jge
mov
out
xchg
inc
sub
mov
push
fsub
or
xchg
int3
xchg
sti
stos
stos
fnstcw
mov
xor
or
push
mov
push
repnz
mov
sbb
outsl
repnz
mov
int3
xchg
shl
ja,pt
test
push
mov
cmp
xchg
adc
stos
mov
mov
dec
mov
movsb
stos
lret
mov
call
xchg
push
xchg
push
test
dec
sbb
arpl
test
outsb
dec
dec
inc
inc
xor
cli
jle
mov
out
cltd
ja
out
pop
jnp
movsl
push
mov
fiaddl
jb
lret
repnz
out
sub
or
cmp
scas
jae,pt
into
clc
insb
add
mov
jmp
xor
mov
mov
stos
in
int
add
xor
inc
iret
jg
pop
cmp
push
insl
arpl
push
jbe
jnp
dec
cld
or
mov
pusha
out
push
shlb
xor
sub
push
pop
jle
std
xchg
bound
orb
or
sbb
pusha
sub
xor
call
mov
in
mov
pop
pop
add
mov
sub
in
push
xchg
sub
xor
or
insb
icebp
in
push
push
pop
mov
rclb
outsb
loopne
mov
ret
es
sbb
dec
sub
sbb
pop
iret
inc
or
pop
push
xor
xor
push
mov
sub
adc
int
lock
shll
sub
imul
inc
cltd
push
or
push
or
mov
test
mov
add
fldcw
rol
addl
xchg
jecxz,pt
add
dec
adc
xor
inc
jae
loope
sbb
out
jmp
stos
cld
jl,pt
inc
jp
dec
add
mov
imul
and
push
jecxz
jns
mov
pop
pusha
in
push
or
ficoms
je
jge
xchg
pop
xchg
inc
andb
out
fbstp
xchg
mov
inc
int
ret
sbb
add
mov
inc
gs
popf
ficoml
aaa
es
popf
push
sub
mov
add
enter
jo
mov
lahf
push
ss
sbb
adc
mov
js
push
nop
push
test
cmp
jne
or
xchg
or
pop
mov
lret
mov
ja
pop
sub
pop
into
dec
ljmp
iret
sbb
in
stos
jb
aad
adc
or
repnz
inc
adc
sbb
mov
push
and
push
outsl
or
movsb
lret
in
aas
daa
mov
sbb
pop
jb
pushf
and
sbb
lock
insl
or
cmp
xor
cmp
adc
insl
add
inc
sbb
std
loopne
js
add
cmp
jl
mov
popl
imull
push
and
inc
shll
add
lret
neg
and
popa
dec
jbe
add
lods
adc
sub
cmp
sub
or
xor
addr16
cwtl
dec
cmp
add
test
fsubl
ds
xorb
pop
pop
adc
int
xchg
fcmovbe
push
popa
cltd
add
jg
cltd
mov
cld
ror
enter
icebp
or
test
dec
mov
add
push
push
shrb
call
pop
sub
push
sbb
ja
dec
push
cmc
out
cmpsl
push
push
imul
neg
addb
iret
xlat
stos
test
push
add
lret
imul
mov
sbbb
ret
repnz
pop
pop
mov
inc
or
enter
sub
mov
push
icebp
stos
int3
rclb
xor
out
mov
xchg
fimuls
xchg
add
cwtl
loopne
sub
mov
mov
out
loopne
enter
or
jo
je
orb
lock
adc
sub
pop
aas
clc
jp
hlt
xchg
xchg
push
ljmp
sbb
popf
fucomi
hlt
jnp
pop
call
lahf
cmp
push
jmp
sub
dec
sahf
hlt
dec
sti
int
sub
insl
imul
lods
jl
dec
adc
lods
and
pushf
notb
jbe
lods
push
les
insb
in
sbb
or
cmpb
mov
jae
ja
mov
fsubrl
dec
fidivl
int
mov
call
mov
fdivr
test
mov
xchg
in
repz
das
scas
inc
fisttps
enter
sub
mulb
pusha
lret
or
mov
cmp
cmp
cmp
xor
and
dec
out
hlt
jns
lods
mov
hlt
push
shrl
pop
int3
sbb
pop
mov
addr16
lock
test
mov
pop
adc
adc
push
mov
je
je
pop
jb
out
cmp
fwait
jmp
add
js
inc
fwait
cmc
cltd
sbb
mov
or
sbbl
mov
call
lock
pop
xchg
fsub
xchg
lahf
mov
xchg
js
mov
jne
cli
iret
pop
in
shrb
jmp
out
or
xchg
stc
addr16
sbb
xlat
mov
movsl
cmp
lds
rcl
push
jne
iret
sbb
cmpsb
mov
cmp
shl
int3
insb
inc
pop
test
lea
xchg
ficoms
push
lea
mov
js
adc
out
or
test
adc
popa
repnz
cmpsl
sub
cmp
dec
nop
mov
push
imul
cltd
bound
cmp
movsl
stos
ja
mov
arpl
cmp
xor
shlb
insl
movsb
das
cltd
lods
push
inc
ror
push
pop
std
and
das
mov
xor
lahf
jge
test
xor
mov
jge
sbb
dec
es
xor
cmp
jns
pop
dec
push
adc
movsl
leave
inc
cmp
jnp
xchg
lock
and
in
mov
and
adc
in
xorl
mov
leave
movsb
and
push
dec
pop
iret
ja
aaa
cld
mov
sub
in
lods
arpl
scas
xor
les
lcall
in
scas
fisubl
mov
sub
aas
mov
jg
lods
movsb
mov
mov
push
cmp
lods
push
mov
out
push
jle
leave
inc
xchg
mov
or
scas
pusha
imul
out
mov
xchg
pop
mov
push
sbb
imul
aam
or
enter
pop
dec
outsl
mov
jg
nop
and
inc
or
mov
addr16
inc
and
and
dec
push
rcrb
mov
loopne
mov
sbb
cmp
push
orb
xchg
sub
cltd
cwtl
inc
or
cmpsb
cld
shrb
out
daa
dec
push
test
frndint
add
dec
mov
mov
xor
insb
sar
aas
mov
cmc
push
in
mov
mov
mov
ret
ds
mov
jmp
out
mov
cld
jmp
or
movsl
jmp
pop
jns
xchg
outsl
nop
aas
xchg
mov
cmp
inc
and
iret
fcos
aas
sub
int3
mov
imul
lods
fstpl
ret
cmc
int
cmc
cmc
and
xor
push
inc
sbb
jmp
pop
lea
jb
loope
sbb
xchg
mov
pop
xor
aad
pusha
loopne
sbb
pop
mov
mov
mov
sub
jg
sbb
xchg
aad
adc
add
or
arpl
mov
sub
xchg
mov
dec
pop
xor
sti
xchg
sbbb
cmp
sahf
iret
inc
sahf
jnp
loope
adc
adc
mov
xchg
lea
stos
stc
test
dec
push
movsl
and
jmp
add
mov
ds
sbb
scas
lea
fsubr
push
jmp
loopne
sbb
lcall
mov
or
mov
jge
not
add
fistpll
dec
pop
mov
aam
push
loop
and
std
ss
add
sbbb
mov
jae
clc
cmp
sahf
aam
loope
jg
xor
xchg
outsb
inc
add
test
inc
push
imul
mov
mov
sub
fsubs
dec
jo
test
xchg
xchg
jge
dec
inc
add
cwtl
call
push
xchg
add
mov
xor
jo
push
ret
std
fstpl
mov
lods
sub
jno
ss
xchg
xor
xchg
aas
loop
addr16
int3
insl
orb
xchg
pop
in
cmpsl
stc
int3
sub
ficompl
mov
add
jl
mov
faddl
daa
push
mov
addr16
jg
jmp
loop
mov
xchg
sbb
in
pop
xor
mov
dec
sahf
test
in
sarl
mov
enter
lea
lds
mov
fldl
pop
sbb
imul
and
push
mov
repnz
cwtl
fsubs
movsl
cmp
lahf
stc
in
jecxz
cli
mov
movsl
push
or
pop
xchg
stos
js
inc
aaa
aas
insb
insl
mov
dec
outsl
cmp
xor
jb
jbe
add
mov
enter
inc
and
int3
std
daa
insl
cld
das
push
arpl
dec
cld
icebp
stc
or
gs
pop
addl
sbb
push
int
sbb
add
in
loop
mov
das
lret
cmp
lea
and
sbb
dec
inc
xor
stos
xchg
sbb
pop
divb
pop
mov
ljmp
push
mov
clc
lea
cmp
movsl
fmull
cld
jmp
xor
xorb
arpl
dec
ss
sbb
xor
fs
cmp
scas
xor
push
negb
pop
push
fldenv
hlt
rorb
jmp
inc
test
stc
addl
inc
sarb
fbld
daa
or
stc
insb
lods
push
pop
pop
mov
jge
mov
lock
pusha
aas
testl
sub
sbb
sub
mov
sbb
fcomps
loope
mov
or
jp
jo
jmp
adc
xor
inc
or
add
dec
adc
cmp
sti
ljmp
pop
lahf
or
pop
jmp
pop
dec
push
out
loop
sbb
pop
and
call
dec
scas
pop
lds
in
sbb
stos
out
insb
jns
cmp
lret
loope
inc
in
fdivrs
mov
int3
mov
clc
gs
rep
mov
pop
mov
test
sub
dec
rcll
loopne
jno
cmpsl
inc
jno
dec
cmc
sbb
cmp
xchg
mov
push
mov
sub
loope,pn
jecxz
pop
out
jg
roll
pop
cmpsl
cwtl
pop
test
jmp
ds
xlat
in
int
cmpsl
mov
xchg
mov
and
sub
dec
or
pop
mov
das
imul
cmp
movsb
jecxz
aad
cmp
xchg
je
ds
ret
or
cmp
ja
gs
xchg
mov
cmpsb
jbe
push
mov
mov
sub
daa
shl
shlb
mov
out
pop
inc
mov
nop
xchg
adc
xchg
xor
cmp
int3
xchg
scas
insl
pop
fiaddl
ret
nop
inc
rolb
sarb
icebp
push
mov
xchg
mov
sub
mov
mov
push
psrld
repnz
mov
ud0
xchg
adc
mov
xchg
sub
xchg
fidivs
aam
mov
add
adc
dec
and
daa
fists
std
mov
pop
sub
pop
mov
ds
xchg
or
outsb
push
push
mov
fstl
pop
notl
jmp
jns
fdivrs
pop
cld
adc
enter
push
imul
loopne
popa
out
jl
sbb
loopne
cld
ficompl
sahf
stos
out
pop
lcall
xor
sub
jle
add
dec
out
stos
xor
aad
sub
fs
adc
pop
dec
push
pushf
mov
ljmp
lahf
xchg
aad
test
aas
sti
or
insb
dec
pop
sbb
mov
fidivrl
add
out
aaa
in
dec
insb
hlt
jecxz
lods
stc
xlat
cwtl
std
jnp
mov
addr16
je
mov
mov
js
jbe
pop
lret
aad
test
aas
and
mov
xchg
cs
movsb
lret
popf
jmp
jge
mov
mov
add
xor
idivl
mov
loopne
fidivl
add
cli
sub
mov
inc
dec
fdivrs
insl
imul
mov
and
mov
jnp
test
jecxz
push
ficoms
pusha
in
xchg
xor
sub
out
les
cmpl
imul
sahf
ror
iret
inc
rorb
lcall
movsb
dec
sub
xchg
mov
mov
push
cmpl
mov
dec
sub
hlt
adc
loop
sub
jno
sub
adc
xchg
popa
sub
or
dec
xchg
pop
out
sub
push
sti
mov
aam
inc
imul
xchg
inc
jb
pop
xchg
inc
push
cmp
mov
mov
or
mov
mov
call
in
imul
adc
pop
and
push
dec
or
cmc
in
xchg
insb
mov
sbb
push
jo
les
push
add
stc
xor
pop
jge
sub
shrl
mov
adc
lea
decl
lret
lahf
xchg
inc
aaa
int
cmp
mov
sub
cmp
dec
nop
cltd
mov
test
fdivrl
xor
mov
ret
xorb
pop
jae
stos
sub
pop
arpl
jge
jl
adc
lahf
jae
aaa
add
push
es
pop
sbb
das
push
push
adc
jp
fs
sahf
mov
popl
scas
les
movsb
sbb
push
scas
aaa
sub
pusha
jle
xchg
mov
jo
mov
add
loop
rorb
and
clc
pop
out
pop
lods
mov
out
ret
sbb
loop
sub
mov
mov
and
inc
das
jnp
jnp
ljmp
je
xchg
pop
push
jp
push
or
stos
repnz
mov
push
cmpsl
loopne
pop
adcl
or
aam
andb
rorl
test
xchg
cmp
xchg
nopl
sub
mov
or
fidivrl
dec
sbb
add
nop
in
mov
mov
test
in
add
dec
clc
cwtl
movsb
std
pop
adc
roll
pushf
inc
lock
mov
ficompl
mov
inc
fdivs
xchg
adc
push
xchg
aam
xorl
pop
js
lret
gs
jnp
jae
mov
out
lds
mov
movsl
nop
sbb
repz
popa
push
iret
out
sbb
adc
cmpl
pop
cld
ljmp
jns
jne
jmp
inc
sbb
test
and
sub
dec
push
fisttpl
rdpmc
and
pop
dec
test
jl
mov
roll
inc
jns
loop
cmc
in
mov
cli
dec
push
mov
dec
adc
push
lahf
fwait
or
jp
sub
iret
inc
mov
dec
repnz
mov
xor
push
pop
data16
outsl
out
clc
int
mov
jbe
xorb
jp
sub
inc
cwtl
or
mov
add
mov
cmp
mov
cltd
cmpsl
mov
mov
jae
cld
clc
lcall
aaa
push
movaps
xchg
mov
xor
lret
scas
mov
dec
jle
scas
pop
pop
sub
and
jne
hlt
sarl
popf
cmp
je
orb
pop
inc
cmpsb
push
dec
sub
je
xchg
sub
xor
jle
lea
or
push
js
xor
cmpsl
stos
cld
jp
in
adc
cmp
mov
sbb
mov
xchg
outsl
adc
div
push
push
rorl
cmp
test
sub
int
dec
push
imul
ret
push
jne
push
fwait
ds
loopne
scas
jnp
push
inc
inc
dec
in
out
xor
xchg
pop
push
or
nop
add
xchg
xor
decw
xchg
inc
dec
sub
lods
jl
sub
popa
imul
jo
sub
lret
out
hlt
mov
subb
adc
fsubl
out
xchg
enter
mov
scas
and
dec
rorl
add
sahf
pop
pushf
xchg
es
imul
aad
lock
aad
stos
out
add
inc
out
lcall
jecxz
cld
push
mov
push
xchg
mov
loopne
jp
and
pop
inc
outsl
xor
mov
movsb
lret
enter
stos
cmpsl
lea
cmpsl
out
and
sbb
pusha
push
mov
arpl
sub
sarb
or
iret
fsubl
sahf
outsb
xchg
je
cmc
adc
repnz
add
enter
sbb
cs
in
mov
add
xor
hlt
popf
push
mov
mov
jl
hlt
mov
stos
sarl
adc
jp
and
andb
pop
fstps
shrl
and
lods
mov
std
in
add
cmp
sahf
dec
pop
pop
push
sbb
pop
iret
sub
mov
cmp
repz
in
lods
or
pop
fxtract
cmp
push
xchg
mov
out
and
int3
mov
repnz
add
mov
jnp
mov
pushl
mov
clc
inc
jb
or
hlt
idivb
cmpsl
imul
cmp
mov
xor
mov
ds
or
imul
loope
push
mov
xchg
icebp
mov
and
aad
repz
jle
call
mov
xorb
fimull
sti
xchg
fnstsw
pop
arpl
loope
pop
sarb
dec
add
sarl
push
jmp
mov
mov
lret
xor
xorb
sub
popa
xchg
xchg
mov
sbb
cs
jb
rorl
cmp
cmovs
or
pop
insl
xchg
pop
sbb
jg
outsl
and
xchg
mov
add
xchg
mov
xor
cwtl
mov
xchg
repnz
and
push
jmp
jl
mov
cmp
arpl
jns
xor
ss
add
pop
inc
dec
insb
lret
mov
mov
es
adc
lods
rcl
push
mov
stc
jmp
pop
xor
lret
adc
push
or
fmull
sbb
or
mov
or
pop
xchg
jl
lcall
xchg
pop
out
or
pop
jecxz
jbe
pop
mov
push
mov
push
mov
jns
xchg
push
in
mov
mov
dec
aas
shl
gs
sub
es
stc
icebp
cmpsl
iret
bound
lret
loope
cmp
int
mov
dec
fwait
inc
daa
xchg
fldcw
cli
fimuls
pop
sub
mov
push
mov
data16
leave
pop
lret
out
imul
push
mov
mov
bound
inc
lds
insb
aas
push
mov
xchg
enter
mov
into
scas
inc
dec
or
lcall
jbe
mov
sub
addb
mov
and
mov
les
test
out
inc
or
aas
lods
jl
pop
or
jge
fiaddl
fsub
fcomps
xchg
mov
mov
lcall
in
mov
add
sub
adc
cmp
xor
imul
mov
cmp
push
insb
sub
idiv
adc
xlat
add
xchg
push
lds
loope
sub
mov
add
pop
and
xor
xor
sub
cld
and
ja
or
and
and
dec
lahf
sbb
jmp
test
adc
mov
xor
fcoml
push
sbb
ret
sub
sbb
cltd
sbb
cs
loopne
sub
subl
jnp
add
arpl
ds
stos
clc
fsubp
inc
das
xchg
stc
inc
inc
shlb
inc
cld
popa
inc
push
mov
sbb
mov
imul
fnop
test
or
cmc
hlt
insb
leave
jge
filds
pop
out
inc
mov
in
stos
movsl
sbb
cmp
in
mov
hlt
jb
cmpsl
pop
push
test
insb
int3
jne
cli
sub
clc
and
lock
dec
into
sub
push
jo
mov
shll
sub
mov
add
into
xchg
scas
in
dec
into
xchg
jne
push
and
mov
or
push
mov
out
cmovae
xchg
xor
inc
xchg
mov
push
popf
sub
xchg
jl
jb
fstp
mov
xchg
adc
cmp
rol
add
pop
jns
and
sub
mov
mov
outsb
outsb
cli
enter
jne
divb
rcrl
cmpb
out
pusha
dec
inc
lret
mov
adc
std
arpl
popf
inc
ds
dec
adc
push
ljmp
adc
test
incb
rol
adc
rorb
mov
jl
gs
dec
subb
xor
mov
test
pop
rcrl
mov
xchg
cmpsl
stos
push
sbb
in
mov
adc
iret
mov
mov
cmpsb
adc
cmp
jle
adc
pop
and
jne
push
cmpsb
push
mov
ret
dec
xor
mov
mov
mov
or
aaa
dec
movb
xchg
iret
dec
lods
sbb
dec
add
mov
fiadds
jbe
adc
daa
jl
popf
xchg
aam
aam
adc
inc
ja
js
leave
cli
iret
scas
adc
add
and
daa
sub
adc
lret
cmpsl
popf
inc
push
test
mov
daa
jbe
test
xchg
pusha
push
push
dec
aad
or
cmp
sbb
adc
sub
mov
addr16
loope
in
ja
jmp
in
jno
das
or
and
loop
jmp
scas
or
repnz
out
mov
packuswb
inc
cwtl
sbb
shl
push
repz
add
push
push
fcompl
faddl
es
jno
gs
jnp
ret
xor
xchg
cmp
adc
scas
push
xchg
mov
sub
or
cld
stc
mov
cli
mov
cmp
adcb
pop
pop
and
cltd
adc
jmp
xor
pop
mov
lsl
mov
in
cmpsb
cltd
stos
pop
dec
xor
inc
fwait
jmp
and
fwait
add
inc
jp
sbb
out
leave
push
xor
mov
cmc
fiaddl
mov
dec
sahf
out
stc
ret
pop
mov
js
jae
xchg
push
pop
jmp
shlb
mov
dec
xor
cmp
popf
sub
fstps
xchg
lret
cld
jge
fnsave
mov
sbbb
test
xchg
in
add
jge
push
add
cmpsb
in
popf
clc
sbbl
push
std
inc
sahf
push
pop
scas
lret
dec
jl
mov
and
add
adcl
call
jecxz
or
test
mov
sbb
dec
sub
mov
lret
sbb
sbb
gs
or
sar
mov
pop
lock
test
mov
lods
leave
popa
aaa
inc
cltd
sub
pop
mov
aam
jp
inc
es
aam
cmp
jbe
cmpb
mov
pop
dec
sbb
fsubrs
movsb
testl
xchg
cmc
adc
or
repnz
xor
or
xlat
lds
fdivr
int3
pop
xor
subb
push
and
mov
lcall
setno
stos
lcall
dec
dec
xchg
cmpsl
lret
pusha
mov
push
inc
mov
ret
jo
mov
fcomp
push
pop
out
sub
jmp
test
ffree
ret
mov
push
subb
ss
bound
ret
cmpsb
rorl
sbb
xor
mov
jnp
jp
daa
mov
dec
rorl
push
fcoml
jae
loope
in
in
nop
inc
jns
lock
test
inc
xor
mov
jae
fcomp
aaa
mov
shlb
add
clc
in
push
in
fnsave
sub
fistpll
fisubl
sbb
push
es
testl
or
sbb
jb
out
test
xchg
lods
fisubl
dec
mov
insl
push
jno
xchg
inc
sub
pop
sbb
pop
inc
sbb
push
inc
call
lea
test
shl
imul
or
repnz
jg
mov
cmp
jns
xchg
icebp
and
xor
verw
push
data16
xor
mov
or
aam
mov
push
test
sahf
fidivs
push
ret
mov
mov
xor
mov
dec
mov
mov
fdiv
dec
cmp
push
mov
adc
cmc
ja
les
insb
or
outsl
sub
loopne,pt
dec
mov
insl
test
loop
push
and
insl
dec
jb
cmpsb
scas
insb
xchg
mov
adcl
shrl
xor
xlat
lcall
gs
pop
mov
arpl
cld
orl
xor
mov
inc
out
xor
out
iret
sbb
pusha
cmp
xchg
push
insl
loop
imul
or
leave
es
cltd
mov
lods
cmp
push
sbb
lods
xchg
pop
mov
je
pushf
mov
xchg
mov
repz
fildll
shll
outsl
std
loope
inc
cs
movsb
xor
dec
mov
loopne
xor
xchg
enter
loop
test
xchg
mov
push
jne
mov
pop
imull
int3
popf
insb
insl
jmp
fnstenv
test
pop
loope
inc
dec
push
jg
das
jne
and
icebp
cmp
dec
loop
cmpl
les
fs
loopne
lds
mov
push
sbbb
sbb
ss
jp
enter
mov
icebp
testb
jmp
jecxz
movsl
dec
mov
adc
pop
xchg
pop
stos
stos
test
jnp
inc
sbb
pop
sahf
mov
pop
pop
scas
push
jg
outsl
loope
aaa
and
push
cmp
arpl
in
and
aam
push
pop
xchg
push
mov
mov
out
cmpsl
iret
frstpm(287
fwait
mov
addl
mov
shr
cmpsb
push
inc
jb
jle
pop
stos
add
mov
mov
mov
jb
test
sbb
imul
sbb
sbb
clc
shr
jmp
repnz
cmpsl
clc
out
push
daa
inc
adc
in
out
das
ret
mov
movsl
mov
aad
enter
lret
xchg
or
outsl
lea
push
outsl
add
in
out
in
xchg
cltd
fadds
div
clc
pop
pop
xor
sbb
fidivs
jae
lea
mov
es
push
movsb
fs
mov
sahf
popf
lret
or
and
outsb
push
or
mov
loope
mov
nop
xlat
push
jnp
sub
xchg
pop
in
cmp
cmp
aad
add
and
lods
inc
movsb
push
test
pop
test
std
xlat
sti
pop
pop
rcll
mov
pop
add
dec
sbb
pop
out
movl
shlb
mov
lods
sar
or
mov
or
insl
int
aas
cld
movsl
push
cmpsl
scas
sbb
jmp
ficoms
out
rcrb
fistpl
fstpl
fs
cltd
xchg
adc
jecxz
and
pop
mov
hlt
rclb
cmp
pop
outsl
dec
pop
test
pop
in
subps
lret
xor
push
cmp
sub
pop
mov
mov
pop
in
or
in
dec
xchg
test
push
adc
jns
push
cltd
cld
mov
push
pusha
je
aad
in
adc
push
into
dec
jo
mov
outsb
dec
xlat
pop
das
jmp
in
dec
ja
cltd
and
pushl
xor
xor
dec
sti
jle
jl
push
sub
add
jg
rolb
jb
push
test
fisubrs
iret
in
out
and
imul
xor
fldl
push
push
push
jae
int3
les
inc
lret
sbb
in
mov
hlt
and
iret
in
loopne
movsl
cwtl
pushl
add
mov
cmp
jp
es
lock
ss
and
lods
cmpsb
xor
mov
pop
mov
pop
adc
stos
scas
lds
add
xchg
or
mov
pushf
sbb
inc
popa
int
rcll
cmpsb
jg
mov
stos
jnp
das
aad
sahf
jl
into
sbb
mov
push
add
jmp
hlt
dec
lahf
out
stos
orl
mov
mov
lds
inc
jmp
scas
adc
dec
push
mov
stc
lret
add
mov
ret
popf
xchg
adc
into
or
inc
add
sbb
dec
fsub
mov
mov
jno
sarb
cmpsb
arpl
jb
int
mov
cwtl
lock
xchg
or
arpl
into
xchg
mov
loop
sub
out
adc
push
dec
mov
mov
xor
enter
cld
aam
cwtl
stos
xchg
imul
push
popf
inc
sbbl
mov
iret
loopne
sbb
cwtl
dec
jne
mov
push
dec
jle
scas
sub
movsl
lods
leave
pop
hlt
stos
add
and
rcll
dec
clc
cmp
fs
inc
push
inc
push
sbb
mov
pushf
mov
jne
or
xchg
lahf
fidivs
jle
sbb
mov
push
push
jbe
mov
call
aad
mov
or
out
mov
popa
mov
sbb
es
pop
test
ret
cwtl
mov
sti
jecxz
jns
pop
imul
aaa
ret
push
repnz
sbb
loop
jno
fisubrs
mov
jnp
out
cmp
inc
lods
sbb
pushf
pushf
mov
sbb
mov
mov
mov
stc
sbb
jno
dec
sbb
stos
ljmp
into
jecxz
adc
lock
dec
add
cwtl
xchg
mov
xchg
jne
out
adc
repnz
stos
and
mov
fimull
ficoms
xor
in
dec
fstl
adc
cmp
cmp
mov
fisttpll
mov
pusha
cwtl
pop
add
mov
pop
xor
rcrl
pop
cmp
aad
lds
or
cwtl
push
push
push
hlt
push
lahf
dec
in
aad
mov
adc
in
jmp
popa
xor
xchg
jno
sbbl
sahf
jg
dec
test
mov
jns
cmpsl
mov
mov
lret
push
dec
dec
inc
ret
inc
add
xlat
xor
add
mov
ds
mov
stc
into
or
add
ret
xor
scas
dec
xchg
jno
push
xor
inc
mov
imul
int3
test
mov
mov
push
adc
and
ja
mov
ds
shr
loope
jge
pop
outsl
push
sbb
arpl
push
adcl
das
enter
lea
bound
sahf
cmp
scas
jns
adc
sbb
cmp
jle
add
add
jmp
xor
lods
add
loop
add
sbb
mov
test
sahf
popa
sub
aam
daa
mov
test
jbe
jo
mov
stos
pop
or
mov
lret
xchg
add
mov
mov
pop
aas
add
cmpsb
pop
aaa
mov
aas
adc
jnp
inc
fwait
aas
dec
mov
and
dec
pushf
jns
mov
aam
xchg
nop
out
jne
jle
pusha
mov
push
clc
pop
imul
icebp
sbb
pop
xlat
xor
or
push
aad
outsb
xchg
enter
push
sbb
into
jp
test
mov
test
rorb
roll
add
cmp
push
ss
sbbb
call
adc
or
fmuls
imul
cmp
int
lods
dec
sbb
xor
pop
aam
nop
push
inc
lock
push
xchg
cli
call
js
cmp
mov
les
clc
popf
scas
and
inc
out
cld
and
mov
mov
lods
mov
xor
inc
lods
adc
fcmove
int3
jmp
rorb
int
add
sbb
dec
cld
cmc
mov
test
sub
add
data16
push
loopne
dec
stc
mov
loopne
mov
add
pushf
xchg
or
fnstenv
mov
loopw
jne
insl
or
and
int3
nop
lahf
or
cmpl
xchg
loopne
adc
xchg
pop
addr16
mov
or
jbe
sub
dec
sarl
inc
add
iret
inc
movsb
daa
je
adc
faddl
mov
icebp
test
pop
push
lret
lcall
push
dec
fxtract
jg
jmp
stos
punpckldq
mov
xchg
arpl
dec
idivl
stos
adc
jecxz
or
scas
jo
pusha
out
sbb
sti
jbe
sub
pop
setns
push
dec
shl
mov
test
in
es
adc
mov
or
sub
ja
jl
xchg
fs
pop
ja
cmpsl
inc
adc
mov
dec
mov
addr16
pusha
jb
enter
inc
cmp
xchg
pop
or
pusha
fsubs
out
faddp
mov
mov
mov
mov
push
cwtl
pop
in
jae
push
jae
stos
movsl
ret
xchg
pop
mov
pop
pushf
xchg
aad
ret
add
out
test
out
xor
popa
dec
rclb
lods
andb
add
dec
adc
rclb
jb
fadd
pop
les
leave
pop
cmp
cmpsb
inc
stos
or
jne
jbe
int
mov
pop
dec
add
call
cmp
pop
lea
xor
cmp
rolb
add
ljmp
ljmp
popa
jge
sbb
sbb
rcrl
mov
int
clc
lock
mov
int3
push
out
pop
add
scas
cmp
mov
adc
push
aas
dec
mov
inc
ds
adc
mov
cmp
gs
popa
out
pushf
pop
popf
sub
test
push
jmp
xor
in
pop
jbe
jnp
ret
cmp
stos
fcomps
imul
int
xchg
pop
fnstenv
icebp
popf
lcall
inc
jae
push
lock
adc
cmovnp
and
hlt
in
add
dec
insl
loope
and
xor
push
push
repz
outsl
mov
ds
shll
pop
rcrl
jp
mov
pop
out
fs
les
sub
imul
ret
jns
jle
cli
in
andnps
loope
or
mov
call
inc
es
inc
sub
nop
xchg
push
sub
adc
jae
mov
scas
out
push
or
out
scas
outsl
scas
jno
cwtl
jge
leave
add
xor
and
cmp
mov
mov
cmpb
sub
stc
adc
repnz
cmp
push
cld
and
sub
sub
push
movb
lahf
lahf
pop
js
sti
sbb
pop
sub
adc
gs
popf
stc
in
inc
add
jle
addl
fmuls
xor
mov
orb
mov
enter
jbe
lds
adc
insl
sbb
ja
lock
ret
sub
pop
push
fst
jmp
pop
mov
mov
and
adc
or
or
push
adcb
mov
lret
jae
sub
lret
out
into
aam
pop
push
ret
fiaddl
notl
jl
mov
cld
leave
ds
sbb
inc
int
pop
xchg
das
cmp
lahf
aad
cltd
decb
in
jbe
mov
cmp
incl
xor
inc
pop
mov
push
lret
lahf
pop
jp
jle
push
and
cmpsl
add
xor
sahf
pop
loopne
out
pop
inc
mov
imul
ret
mov
pop
repnz
in
fwait
or
rol
stc
inc
xchg
loop
jb
sar
push
dec
mov
insb
inc
shlb
xchg
js
xor
fdivrs
fimuls
je
jmp
pop
aam
inc
and
mov
xchg
mov
and
pop
popa
xchg
popa
sub
xor
or
sub
dec
add
cwtl
dec
sbb
pusha
enter
movsl
xchg
sbb
cs
nop
pushf
hlt
dec
sbb
out
out
lcall
movsl
rcrb
shrb
pop
cs
mov
xchg
out
lods
fidivs
into
mov
sbb
xor
movb
and
ret
mov
andl
sti
aas
loop
mov
inc
xlat
clc
stc
dec
push
test
ret
cli
add
push
rcll
aaa
loope
mov
addl
insb
pushf
aas
scas
pop
jecxz
xlat
inc
mov
mov
xor
xlat
fidivs
mov
fcmovbe
dec
nop
sbb
in
inc
mov
loope
cmpsb
mov
mov
or
pop
xlat
sti
test
push
movsl
and
push
out
je
stos
inc
test
xor
sbb
repnz
and
loopne
push
aas
outsb
mov
xlat
in
in
shl
xchg
mov
sti
lahf
int
dec
jg
out
cmp
mov
sbb
imul
inc
xchg
lahf
lods
mov
jl
push
pusha
pop
jnp
in
jbe
test
sub
inc
sub
sbb
cmc
lahf
pusha
rorb
adc
stc
dec
mov
inc
outsb
pop
pop
leave
mov
and
and
test
and
add
lock
into
aam
jmp
adc
jo
mov
pop
jge
sti
sbb
pop
cli
mov
mov
jecxz
push
mov
sbb
inc
loop
xchg
jns
cmp
mov
pop
jg
aas
dec
and
cwtl
push
mov
xor
dec
mov
mov
repnz
insb
fists
imul
and
cmp
pop
jmp
push
movsb
jge
sub
jbe
rcll
jnp
cmp
xor
loop
push
int3
pop
icebp
les
xchg
movsl
xor
xor
adc
mov
sbb
fwait
scas
jge
lds
cmp
std
int
push
stos
mov
dec
mov
dec
es
mov
and
sbb
pop
scas
out
mov
and
lock
lock
mov
fsubrp
xor
sub
fmul
rcll
xor
mov
in
dec
push
mov
and
adc
and
push
outsb
inc
gs
cs
xlat
cs
iret
pop
popa
push
into
xor
dec
ss
cmpsl
outsb
sub
adcl
inc
pop
pop
mov
adc
gs
mov
scas
imul
imul
hlt
and
dec
sarl
xchg
negl
cmp
pushf
push
mov
xchg
shll
mov
mov
dec
mov
mov
mov
sbb
dec
je
mov
lret
loop
pop
pop
sbb
mov
sbb
ffreep
pop
out
fcomps
sub
aas
ret
lcall
in
insl
sub
and
incl
aad
jnp
pop
xor
pop
out
subb
mov
iret
in
sbbb
stc
cmpsb
popf
outsl
rcl
jbe
scas
cmp
pop
ja
cmc
mov
pop
nop
or
mov
arpl
pop
stos
test
ficoms
pop
xchg
pop
clc
in
int
mov
shrl
jae
inc
mov
xchg
or
push
cmp
mov
ss
mov
enter
adc
mov
jecxz
arpl
mov
mov
sbb
fisttpll
push
xchg
push
dec
xchg
adc
test
push
jg
arpl
mov
cmp
sbb
mov
out
lods
jle
push
mov
xor
jl
repnz
test
mov
inc
fisubs
das
mov
in
enter
test
mov
rcrb
in
nop
and
scas
xchg
ret
aaa
dec
xor
movsl
mulb
dec
or
sti
daa
dec
adc
dec
sbb
mov
cmp
sti
movsl
add
xchg
cmp
mov
mov
mov
xor
fisubl
mov
push
lret
lock
shrb
imul
or
adc
pop
pop
dec
xlat
jno
das
into
jecxz
push
dec
mov
mov
fbld
add
or
dec
popa
jle
add
aas
or
clc
jp
xchg
mull
std
dec
mulb
repz
nop
jp
cmp
icebp
pop
sti
mov
cli
pop
lock
inc
push
mov
clc
dec
fisttpll
leave
in
mov
cs
cmpb
sub
shlb
dec
das
test
loope
adc
cmpsl
dec
jns
lods
pop
insb
movsb
fnstenv
push
into
dec
lahf
adc
arpl
cmp
jne
lock
jmp
addb
cmp
mov
jecxz
adc
jge
pop
stos
rolb
addr16
clc
mov
cmp
test
mov
bound
iret
enter
or
nop
adc
dec
fs
hlt
mov
adc
dec
test
cli
jge
sti
les
dec
test
aaa
std
test
mov
add
mov
in
mov
mov
pop
mov
cmpsl
lods
pop
adc
in
jnp
in
mov
outsb
dec
pop
test
ret
pop
cmp
nop
mov
lock
fld
adc
and
inc
mov
sub
jle
pusha
clc
and
in
cs
enter
xor
jbe
inc
jmp
dec
sub
imul
dec
fidivrs
lods
jecxz
push
push
lret
jns
stc
or
xor
ret
testl
lcall
and
jle
push
fsts
or
inc
test
jle
stos
cmpsb
xor
adc
xchg
out
pusha
jns
jg
pop
subb
sub
add
lret
in
cmp
jecxz
les
in
daa
jno
dec
lock
mov
or
ja
dec
jl
push
insl
cmp
xchg
push
out
adc
jno
ss
xor
push
repz
mov
or
int
pop
push
xor
jb
ficoml
push
es
xlat
pusha
in
adc
pop
jmp
pop
cmp
ret
mov
les
aam
ss
mov
popa
rol
lods
mov
out
sub
imul
je
and
mov
in
movb
xchg
mov
push
push
bnd
jecxz
jmp
xor
adc
pushf
xchg
daa
xchg
mov
es
lods
push
sbb
cmp
xlat
inc
mov
push
dec
leave
add
push
jp
pop
jns
dec
or
cwtl
pop
push
daa
mov
push
insb
call
cmp
xchg
push
push
cmp
shll
rcll
sub
test
jns
mov
cmp
add
jmp
dec
pop
mov
aaa
jbe
mov
sbbb
sbb
xchg
in
movsl
mov
xchg
cmp
push
not
scas
sub
xchg
cmp
repz
cmp
insb
jb
xor
push
dec
sahf
push
out
pusha
iret
mov
ret
idivl
xchg
pop
sbb
test
or
push
xchg
sbb
add
pop
add
jecxz
mov
mov
or
sbb
or
pushw
fsubr
push
mov
adc
orb
insl
insb
inc
pop
fstpt
xor
fadds
iret
sbbb
loopne
shrl
push
mov
sub
stos
fucomip
push
lods
arpl
clc
pop
push
mov
in
pop
cmp
push
sub
js
jbe
mov
in
xor
inc
ljmp
xor
cltd
push
sbb
cld
xchg
sub
pop
push
fidivs
sub
or
sbb
fidivrl
mov
sub
pusha
outsl
mov
in
lods
cmp
dec
jg
cli
lret
cli
inc
jle
adc
and
sti
or
test
and
pop
pop
sbb
fsubrp
std
add
das
mov
xchg
fwait
inc
or
mov
test
cmp
aam
loope
sub
hlt
hlt
or
popf
insb
outsl
rorl
cmc
xchg
mov
push
push
mov
fbld
lret
pop
xchg
scas
pop
cmp
pop
outsb
xor
out
in
sub
cld
mov
xor
sub
in
insb
movsb
mov
push
scas
mov
jmp
stos
cmp
mov
in
xchg
repz
ret
sti
js
jno
xchg
js
add
insb
and
xor
ret
int
cmp
push
cmp
jo
jae
mov
mov
push
mov
out
sbb
add
jg
cmc
shl
sub
push
out
sbb
mov
sbb
loop
divb
into
in
add
xor
cmp
inc
scas
dec
jecxz
cwtl
jg
clc
push
es
cmc
sbb
mov
mov
xor
mov
aaa
movsl
jl
fldt
and
xor
repnz
and
imul
dec
roll
jle
dec
lahf
mov
mov
xchg
arpl
orb
add
mov
mov
mov
repz
sub
cmp
sbbl
push
fsubrs
ret
mov
adcb
cs
and
mov
loope
xlat
fld
popa
push
testb
data16
add
fstpl
fdivrs
xor
pop
push
inc
sahf
pop
pop
mov
push
lods
addb
jl
call
sub
mov
adc
negb
mov
daa
sbb
push
loope
sub
mov
iret
mov
test
testl
pop
je
or
fisubrl
js
loopne
and
test
mov
jg
jne
call
repnz
push
pop
jno
push
mov
cmp
std
dec
fcoms
aad
dec
push
jle
dec
mov
mov
divl
mov
cmp
cmc
out
push
mov
inc
clc
bound
jl
xor
add
les
fs
mov
pop
push
outsl
sbb
adc
jno
js
mov
lds
out
lds
and
cli
adc
ret
adc
mov
add
cmp
lret
stos
int3
and
jecxz
and
mov
je
mov
ja
rolb
data16
pop
pop
mov
mov
xor
fcoms
mov
xchg
mov
sbb
jae
loop
add
add
xchg
mov
stos
mov
shll
loop
cld
jg
jge
das
jnp
mov
xchg
lret
out
xchg
fnstsw
in
testl
test
jnp
subb
fsubl
mov
dec
mov
push
fucompp
cld
ret
stc
xor
mov
outsl
sbb
jle
cmp
add
dec
mov
or
mov
xchg
cmpsl
push
xchg
pop
xchg
pop
lea
inc
aas
push
jnp
rorb
cwtl
je
pop
sbb
mov
inc
fbstp
mov
pushf
mov
mov
fldl
mov
dec
mov
popf
orl
jne
add
movsl
sahf
mov
push
pop
push
push
je
jle
push
scas
cmc
std
stos
cmpsl
xchg
xchg
push
add
jb
arpl
xchg
and
xchg
pop
xor
mov
inc
adc
aas
aam
mov
int
je
lds
jne
or
adc
sub
sub
incb
cmp
cmc
out
sbb
in
pop
jg
add
imul
int3
jge
jg
cmpsb
mov
int
mov
fsubs
sub
push
sub
rcrb
data16
inc
scas
xor
add
xchg
icebp
push
pop
inc
jl
lahf
adc
mov
mov
jns
outsb
cmp
imul
aas
je
mov
or
xor
inc
pop
lahf
cmp
out
stos
sbb
xchg
push
push
push
sar
out
lock
sub
jne
test
dec
jle
int
xchg
int3
mov
test
dec
mov
ret
push
fnstenv
xor
mov
pop
sub
outsb
in
gs
xor
fsqrt
pop
andb
call
adc
add
addb
mov
add
cmp
xchg
xchg
imul
mov
sarb
mov
jo
adc
push
in
enter
stc
mov
jg
sub
dec
fbstp
push
jp
outsl
test
xchg
add
jne
aam
push
out
mov
aaa
sarb
popf
or
pushf
or
stc
push
jo
push
repz
cmp
movsl
imul
mov
aad
cmp
push
imul
loope
das
dec
pop
fnstsw
fimull
pop
mov
push
pushf
mov
das
scas
ret
movsb
call
mov
aam
cs
push
cltd
jp
lret
pop
jae
jo
imul
ja
arpl
jo
rcrb
aaa
cmc
lret
adc
add
lods
pop
mov
xor
push
shl
add
inc
xchg
xchg
rcr
repz
jno
sub
sbb
mov
out
aas
ss
mov
xchg
je
ss
sub
fwait
enter
xchg
mov
pop
mov
jne
ja
cmpsb
and
and
jae
lods
pop
inc
add
mov
mov
xchg
loop
add
mov
std
inc
sar
repnz
scas
jno
xor
fildl
lds
sbb
pusha
sbb
xchg
push
sbb
pushf
push
test
add
or
xchg
daa
adc
sbb
insl
push
or
cmpsb
scas
jb
jne
cmp
dec
pop
and
fidivrl
test
daa
cmp
jo
xor
mov
dec
and
jbe
das
bound
cmp
jmp
sbb
enter
mov
add
add
lahf
xor
and
and
stos
in
push
cmp
mov
xchg
mov
sbb
stos
push
mov
outsb
pop
xchg
lock
sahf
mov
push
jae
jecxz
outsb
lods
pop
ds
xchg
inc
repz
ret
dec
pop
inc
das
inc
sbb
repz
inc
adc
add
mov
dec
fstl
dec
fs
mov
pop
jno
bnd
mov
enter
mov
jmp
mov
or
cmpsb
mov
hlt
inc
imul
sti
in
lea
lock
js
xor
xchg
div
dec
out
cmp
stos
or
addr16
push
out
loope
jge
gs
jg
ret
scas
mov
lcall
or
std
enter
mov
or
ret
nop
fstpl
fstpt
inc
insb
in
ret
jno
jnp
or
inc
cli
sbb
test
sub
mov
fldl
mov
pop
pop
icebp
std
sbb
popf
movsl
andl
adc
push
ljmp
lds
xor
add
das
dec
push
shll
lods
mov
sub
fists
and
fildl
nop
bound
arpl
arpl
js
jno
enter
jae
hlt
dec
mov
test
fwait
ljmp
adc
hlt
cld
sub
add
inc
in
sbb
mov
mov
lock
xor
and
sub
mov
cmp
push
adc
add
lcall
push
xchg
lcall
xorps
fucomi
and
pushf
sub
pop
clc
aam
inc
pushf
xchg
mov
xor
push
insl
cmp
aad
jge
jno
jb
lret
ret
sub
int
icebp
xchg
mov
and
pop
mov
jge
push
xchg
pop
outsl
pop
lock
out
or
arpl
dec
cmc
xchg
or
mov
cmc
jecxz
adc
notl
or
adc
out
kaddb
es
and
jg
mov
out
fstps
aam
test
loope
push
mov
mov
sub
movsl
popf
iret
push
imul
insl
lret
jo
pop
fcompl
and
xchg
add
xor
ss
test
mov
jmp
pop
adc
mov
inc
sti
mov
push
push
sbb
in
aas
test
ss
movb
mov
sub
push
ss
sub
mov
loop
std
push
icebp
mov
pop
sub
loop
and
rolb
rorl
sub
dec
filds
popf
add
stos
xchg
jmp
inc
push
add
in
iret
addr16
mov
jmp
adc
mov
push
push
and
clc
xor
insb
dec
pop
test
xor
jecxz
inc
fcomp
fdivrl
stos
xor
mov
test
popf
fistps
sbb
ficompl
lods
mov
pushf
or
in
and
nop
sub
cs
ss
jle
dec
mov
sbb
mov
das
cmp
inc
mov
fistps
jns
ror
gs
es
xchg
leave
mov
roll
clc
dec
inc
inc
faddp
lahf
in
in
mov
js
jp
pop
pushf
loope
imul
fdivrs
cmpsb
jb
dec
test
cmp
mov
dec
jle,pt
fildll
fwait
pushf
cli
and
mov
cmp
push
add
js
sub
jmp
lods
idiv
test
adc
mov
mov
sub
jp
in
lock
push
jae
mov
inc
pop
jb
cmpb
pop
sub
andb
lds
jecxz
pop
mov
sub
mov
loope
and
pop
inc
mov
lret
dec
xchg
or
leave
imul
es
pop
cmp
daa
scas
daa
js
cmc
shlb
mov
jae
shl
in
xchg
shl
shrb
pop
repnz
ss
dec
xchg
xchg
nop
adc
fwait
xor
sarl
cli
inc
xlat
lods
xor
fs
pop
ret
cmpsl
mov
pop
cwtl
push
sub
lock
jg
push
sbb
sbbb
cmp
in
lock
push
imulb
pop
nop
nop
mov
dec
xchg
das
decl
push
ds
arpl
jp
push
out
sbb
mov
pop
mov
jns
lock
push
ss
push
out
push
xchg
rorl
cmc
push
pop
adc
icebp
dec
ss
push
adc
push
dec
lret
fcompl
and
jbe
xchg
cmp
add
push
popf
repnz
xchg
xchg
mov
imul
pop
xchg
rcll
mov
fs
js
push
inc
bnd
shlb
dec
sub
sti
inc
leave
ret
arpl
nop
icebp
xor
repnz
aad
leave
outsl
push
or
adc
cmp
lret
enter
lock
fs
les
push
incl
inc
add
icebp
fbstp
outsb
fwait
dec
xchg
mov
les
outsl
test
mov
mov
push
fcoml
shlb
push
jne
shr
filds
mov
adc
out
gs
xor
add
rclb
das
js
out
inc
jl
das
aas
mov
dec
int
cmp
dec
pop
lea
addb
sbb
pop
test
fldcw
dec
dec
data16
test
mov
push
cmpsl
or
loope
scas
pushf
push
cmpsb
xchg
ficompl
jne
or
gs
fnstenv
jle
mov
mov
mov
adc
ljmp
sub
data16
pusha
and
insl
jo
ret
popf
in
iret
shrb
pop
or
out
pop
xor
xor
insb
inc
ds
test
adc
movsl
ds
outsb
popf
stc
sarl
adc
dec
dec
jg
mov
mov
roll
add
add
movsl
cltd
call
xlat
testl
mov
sbb
rcll
sub
inc
out
ficomps
sub
cltd
shlb
lcall
ja
xor
pop
cmpsl
imulb
lret
fidivrs
mov
outsl
mov
mov
or
sbb
cmp
jne
sbb
jno
lods
dec
insl
xor
jae
lcall
cmpb
js
lods
movsb
lods
xchg
pop
mov
cmp
aam
test
push
fbld
sti
mov
test
into
adc
inc
lahf
sub
xchg
add
jmp
outsl
in
fldt
inc
push
add
stc
bound
jle
pop
shr
jnp
inc
bound
mov
in
in
or
xor
push
xchg
and
sbb
out
test
int3
call
iret
pop
sub
sbb
lds
mov
or
jb
clc
or
cmp
jge
fsubrl
fdivrs
test
mov
push
jnp
jge
push
jl
mov
or
fistps
popf
pop
jle
ret
jg
sub
shrl
pop
xchg
xchg
pop
sbb
jo
negl
pop
or
push
cmp
mov
loopne
cwtl
jge
andl
xchg
push
ret
fdivs
push
in
and
jmp
inc
andps
mov
sub
test
xchg
mov
fistpl
and
imul
inc
push
dec
test
mov
push
inc
sti
cmp
pop
sub
push
inc
das
loopne
out
mov
add
lea
je
xlat
out
adc
addr16
ret
xchg
fwait
or
dec
or
inc
sbb
mov
imul
pop
push
xchg
mov
insb
dec
pushl
int
out
pop
stos
test
in
addb
lea
mov
rdpmc
xchg
popa
cmpl
and
shrl
ja
aam
add
fwait
cmp
out
adc
shlb
shll
inc
push
cmp
jl
fldt
cltd
ljmp
jp
test
add
divl
mov
xchg
repz
aam
xchg
mov
loop
cltd
mov
in
enter
ret
sub
leave
shlb
or
push
jmp
jl
jo
aam
or
in
xor
leave
scas
add
add
arpl
int
dec
sub
pushf
sarb
jp
sub
xchg
push
mov
cmp
sbb
in
nop
xlat
shr
xor
add
or
inc
fdiv
aad
leave
ljmp
cmpb
jnp
xor
xchg
mov
dec
leave
pop
sub
mov
sbb
push
mov
sbb
je
jmp
adc
aas
ret
inc
dec
out
pop
test
fdivp
in
jl
mov
gs
ljmp
mov
stos
pusha
mov
push
jno
test
inc
push
int3
repnz
pop
sub
lea
scas
xchg
stc
xchg
int
add
outsb
pushw
flds
xor
mov
adc
call
std
inc
mov
pushf
jnp
push
push
add
xchg
mov
push
mov
pop
mov
dec
scas
call
push
fistl
inc
add
jp
push
and
jge
inc
lahf
sbb
lcall
pop
sbb
push
mov
mov
sbb
mov
cwtl
negl
inc
jno
sti
stos
push
cmp
or
ret
insl
es
cmp
cmp
flds
sbb
ret
push
cmp
pop
fcoms
enter
jne
sbbb
mov
lods
add
and
int
in
xchg
mov
fildll
or
dec
dec
sbb
fadd
cmpsl
cmpsl
inc
mov
shlb
out
fdivrl
repnz
stos
jecxz
into
jbe
es
push
popl
sbb
imul
push
jle
adcb
cwtl
mov
sub
scas
jmp
push
test
rcr
adc
push
roll
movsl
xor
push
and
test
gs
inc
mov
iret
cmp
cmpsl
lea
or
xor
adc
iret
das
lock
xor
push
stos
je
sbb
push
push
push
je
mov
jo
inc
inc
shl
out
jb,pt
adc
loop
xchg
mov
sub
push
fstps
push
xor
cmp
jns
gs
xchg
xlat
sar
movsb
cwtl
xor
cmpsb
xorl
or
push
pushf
push
es
mov
mov
mov
int
pusha
adc
or
mov
fcomip
pop
scas
or
xchg
mov
jno
int
ficomps
adc
jge
sahf
xchg
and
sbb
sahf
fprem
push
xchg
push
sahf
sub
rcll
mov
enter
lock
mov
repz
sub
inc
pop
mov
inc
mov
out
push
dec
sbb
in
lahf
cmp
shlb
scas
push
xorl
inc
xchg
pushf
jae
xor
jne
push
enter
pop
fldenv
aam
lods
mov
mov
xor
scas
lahf
mov
push
cltd
aad
int3
mov
int
and
pop
push
call
jb
lret
mov
mov
stc
jmp
pushf
inc
es
popa
pop
les
mov
dec
imul
xchg
aaa
cmpsb
mov
cld
insb
ret
mov
jns
inc
aaa
leave
cltd
daa
xchg
fcomip
push
imul
imul
sbb
inc
mov
dec
sbb
and
scas
cmp
adc
pop
xchg
or
imul
insl
rolb
dec
xchg
fsubs
sahf
ljmp
js
jg
dec
sbb
push
gs
stos
daa
leave
jb
or
jg
mov
popa
dec
ficompl
sub
jmp
arpl
out
out
outsb
dec
jb
mov
mov
bound
out
xchg
xchg
data16
add
mov
adc
cmp
mov
mov
sbb
out
mov
jbe
bound
mov
inc
shr
movsb
fdivrp
test
push
in
cmp
and
movsl
jb
lods
dec
mov
xlat
sbb
pop
pusha
jbe
test
dec
aaa
outsl
mov
pop
jl
outsl
outsl
sbbb
dec
nop
pushf
div
shr
das
cli
or
scas
jp
sub
sbbl
daa
adc
outsl
cmp
repnz
sbb
enter
mov
mov
ja
fucompp
fidivs
cs
insb
fbstp
mov
mov
xor
xor
je
les
push
mov
nop
ret
fbstp
loope
inc
jno,pn
test
shrb
in
push
jle
dec
stos
adc
cmp
push
pop
push
pop
sarb
sbb
testl
lods
lds
mov
pushf
jle
je
mov
std
test
lds
sub
push
jmp
jno
cltd
adc
es
cmp
push
stc
adc
jo
jnp
push
xor
nop
fstpl
mov
pop
adc
jge
rol
lock
cmpsb
sub
pushf
cmp
ja
pop
jno
add
popa
mov
shrb
dec
icebp
int3
inc
pop
mov
pop
mov
sub
in
sub
popf
jo
call
add
dec
in
lahf
jo
or
mov
in
push
jmp
push
push
mov
mov
push
pop
sub
jp
push
mov
shll
mov
fwait
orl
cmpsb
shlb
pop
imul
jns
ret
lcall
andl
lock
mov
hlt
push
mov
sub
dec
or
sbbl
test
adc
pop
jmp
inc
or
shlb
cmpsb
xor
jp
sbb
xchg
mov
xor
push
add
fcomi
inc
jno
mov
pop
popf
int
fbld
dec
or
lods
adc
cmpb
or
test
das
les
pop
pop
js
jns
xchg
xchg
inc
and
adc
xor
aas
cmp
in
icebp
rcl
push
xor
mov
xor
xor
enter
pop
mov
sbb
xchg
bnd
xlat
mov
xchg
mov
and
int3
add
jne
pop
and
mov
xchg
cmpsl
adc
test
cmp
and
and
cmp
fisubrl
insb
fdivl
sub
fiaddl
xchg
adc
mov
js
xor
in
sarb
jb
mov
mov
xchg
test
jns
adc
test
inc
popa
push
loope
and
outsb
lret
xchg
pop
sub
enter
xlat
sbb
mov
mov
or
pop
inc
inc
dec
sbb
scas
push
mov
cwtl
fisubrs
pop
insb
xor
pop
xchg
sbb
cmp
fcomps
cmp
jno
fsub
push
push
xorb
test
mov
mov
sub
xchg
adc
dec
cld
lods
ja
rorl
rorl
call
xchg
push
mov
hlt
inc
add
and
xor
sub
inc
sbb
inc
xor
dec
jle
sarb
xlat
inc
jne,pn
lret
adc
push
call
fldt
mov
pop
shrb
mov
imul
push
lods
cltd
call
cmpsb
mov
mov
test
lods
push
fadds
jmp
cmp
dec
cltd
test
dec
jo
rolb
icebp
jne
das
xorb
xor
cmpb
cwtl
pushw
xor
jb
daa
loopne
roll
xchg
loopne
imul
cmpsl
pop
push
add
lea
sub
mov
pop
repnz
push
pop
sbb
or
scas
inc
in
in
mov
xchg
scas
dec
pop
cmp
xchg
out
sub
mov
out
gs
mov
dec
add
rolb
sub
sub
lods
movb
iret
mov
xchg
xchg
pop
inc
loopne
xor
push
into
scas
insb
ficomps
stc
inc
xchg
iret
push
pop
pop
scas
cs
sbb
inc
mov
repz
outsl
cmc
push
insb
sti
jbe
xor
adc
call
xor
cs
sub
ljmp
dec
pop
and
pop
xchg
loope
jno
cmp
ds
dec
adc
imul
rclb
in
icebp
ret
out
sub
inc
cs
mov
mov
and
mov
dec
test
ss
xchg
and
push
sub
push
cs
push
jle
push
int3
push
sbb
imul
addb
aad
jl
dec
daa
lods
ja,pt
imul
xchg
lcall
sbb
sub
xchg
xchg
ja
es
dec
sbb
and
mov
adcl
aaa
jp
mov
pop
outsb
jnp
in
sbb
xor
or
sub
shl
dec
jnp
std
mull
lahf
shll
imul
xor
jg
sbb
ret
mov
das
int
dec
pop
bound
stos
ret
pop
es
mov
shlb
repz
fldl
mov
test
add
fidivrl
push
adc
adcb
xor
inc
incl
jl
sbb
fsubrp
mov
repz
rol
pop
cmp
lods
shll
aas
daa
jmp
and
mov
sbb
push
pusha
cmc
mov
ja
faddl
mov
lea
mov
roll
faddp
xor
into
jae
cmpsb
sbb
pop
mov
push
mov
jecxz
mov
out
jnp
cmc
and
stos
leave
lcall
imul
adc
daa
iret
sarb
pop
xor
jecxz
xor
insb
test
es
inc
lahf
test
xlat
ficomps
aad
popa
dec
mov
mov
imulb
xchg
bnd
rolb
jne
xchg
add
das
sub
xchg
sbb
adcb
outsl
push
jbe
xchg
cmp
jnp
ljmp
pop
sub
add
gs
pop
push
and
addr16
stc
ss
lods
cmc
pop
test
push
ds
ss
loopne
test
cmp
push
cld
jo
icebp
inc
cmpsb
push
insl
int3
stc
jmp
outsl
lret
lods
add
push
pop
fmul
fsubp
push
and
xchg
adc
fs
imul
inc
enter
decb
sub
das
movsb
sub
xchg
push
push
push
jmp
xor
repz
dec
movsb
leave
add
ret
out
das
dec
fldcw
mov
int3
ret
inc
pushf
push
xor
add
outsb
dec
cs
imul
mov
xor
ja
cmp
mov
mov
inc
fcmovb
dec
pop
pop
popa
xor
sub
sub
sahf
jmp
lret
pop
int3
addr16
icebp
cli
sub
ficoms
cld
jmp
and
or
mov
fnstsw
je
jge
mov
jecxz
lock
paddq
dec
in
pop
adc
mov
ja
lret
cwtl
nop
repz
cmp
pop
push
jno
fadd
sub
push
imulb
push
ja
lcall
movsl
mov
push
inc
out
iret
xor
add
inc
sub
sub
scas
add
aas
outsb
inc
adc
xor
jnp
sub
ja
flds
jno
add
call
ret
xchg
je
je
lret
pop
push
call
insl
int
inc
inc
shrl
sbb
popa
jmp
leave
arpl
movsb
pop
out
adc
xchg
ffreep
cmp
xchg
rcrl
shr
adc
test
mov
scas
or
jmp
push
mov
pop
or
mov
fs
or
push
mov
mov
ret
popf
jp
sbb
outsl
sbb
outsb
push
rcr
pop
lcall
les
adc
sarb
cmp
mov
mov
jmp
or
out
aam
cmp
cmp
hlt
stos
pop
call
xchg
in
xchg
es
and
popa
loop
fs
push
pop
lea
dec
dec
stos
sub
popf
xchg
loope
bound
cmpb
ss
ret
ja
leave
addr16
xor
movsl
jns
jb
hlt
call
sub
cmpsl
jno
std
popa
xor
or
pop
jmp
push
or
dec
cld
fs
daa
inc
pop
into
sti
in
ds
movsb
add
cmp
ljmp
movsl
sbb
mov
or
test
outsl
jl
out
or
es
sbb
jle
dec
dec
inc
int
pop
mov
xchg
cmp
jmp
lea
das
aad
test
and
sahf
daa
cmp
xlat
mov
and
imul
repnz
in
or
dec
adc
ret
inc
cld
or
mov
call
int
cmc
cs
pusha
in
or
fisubrs
push
sbb
mov
shrl
repz
es
lods
hlt
sub
jns
dec
call
daa
test
std
lock
ficompl
xor
insl
out
cs
fs
sub
fmul
aaa
xlat
inc
test
shll
int
mov
jg
mov
or
jmp
jnp
call
sar
mov
push
xorb
sub
and
pop
sahf
popa
fsubrs
and
push
ret
movsb
push
das
cmpsb
jb
mov
pop
sbbb
adc
std
mov
cltd
pop
test
subb
sbbb
aaa
inc
imul
and
cmpsl
pop
aam
add
pop
xor
in
inc
pop
and
and
lahf
pop
pusha
inc
inc
xchg
and
pushf
std
dec
jecxz
pop
ja
repz
rclb
mov
mov
sti
shrl
and
push
add
loop
in
inc
mov
cltd
out
push
xchg
pusha
in
aaa
cmp
xchg
pop
sbb
imul
fucomi
mov
add
adc
push
pop
pop
fistpll
icebp
mov
mov
inc
aam
and
pop
jle
xor
lcall
lret
jnp
fnstsw
adc
in
cwtl
push
outsl
lahf
roll
sub
mov
cltd
sub
pushw
fwait
scas
mov
test
sbb
test
xchg
push
das
in
jmp
adc
jg
cs
jne
movsl
divl
scas
nop
push
dec
loop
std
xlat
lret
xchg
clc
or
out
leave
cmp
mov
fidivrl
pop
mov
jmp
ljmp
xchg
lahf
pop
lock
in
mov
stc
and
mov
pushf
and
insb
enter
cmpl
enter
jb
push
inc
fs
enter
out
push
push
add
inc
stos
js
xchg
xchg
test
xchg
sbb
or
add
pop
pushf
lea
movsb
imul
push
push
movsb
push
lret
pop
bound
mov
push
jle
mov
add
jnp
stc
sub
adc
and
ja
sbb
test
sub
xchg
xchg
mov
mov
dec
pop
nop
or
push
xor
pop
xchg
mov
sarl
pop
inc
mov
mov
or
or
je
ret
and
ret
ljmp
mov
mov
dec
mov
clc
icebp
mov
xchg
popa
mov
dec
jno
mov
gs
nop
imul
call
push
push
and
ja
orb
inc
mov
stos
int3
les
shl
fmull
ficoms
add
push
enter
cmp
adc
lret
repnz
loopne
cmp
jb
insb
mov
and
jo
pop
idivl
mov
push
cmp
repnz
pop
mov
int
jo
jl
and
or
inc
clc
out
push
jecxz
jecxz
negl
out
faddl
pavgb
jge
jns
jl
pop
gs
in
gs
fistl
cmc
mov
xor
fsubrl
aaa
in
jmp
lods
inc
jle
ja
mov
push
jl
add
sarb
push
jo
push
jle
xchg
xor
xchg
in
hlt
jp
and
test
iret
out
dec
out
lret
std
sub
add
pop
dec
mov
dec
inc
aaa
cmc
aas
mov
test
mov
rcr
xor
xor
hlt
pop
lcall
jle
jne
cmpsl
jp
dec
push
cmp
cld
xor
cmp
pop
movsb
mov
mov
fisttpl
cwtl
adc
jl
add
imul
in
xchg
jns
mov
lods
cmp
sbb
shll
sbb
jmp
sub
in
scas
mov
mov
lcall
inc
out
mov
pushf
push
mov
and
xchg
sarl
xchg
movb
jp
mov
clc
pop
mov
xlat
inc
mov
pop
xlat
fnstsw
int
mov
repz
icebp
mov
or
push
mov
gs
or
xchg
divb
or
and
lret
or
push
jmp
call
inc
dec
int
sbb
orw
xor
mov
push
aas
scas
mov
push
inc
cmp
in
nop
ds
gs
mov
pusha
inc
cmp
xchg
mov
and
jae
add
in
pop
push
cmp
test
mov
mov
sub
sbb
mov
push
xchg
pop
adc
sub
or
push
push
test
ljmp
mov
dec
dec
mov
inc
inc
mov
inc
in
jmp
insb
aam
in
push
mov
jbe
pop
cmp
ljmp
inc
sbb
shl
mov
ret
addr16
xor
mov
adc
ror
shr
cmp
push
sub
or
inc
push
mov
or
test
jns
std
pop
dec
ja
dec
xchg
jmp
div
jne
cmpsb
mov
pop
mov
lcall
adcl
xor
jo
push
out
sbb
popa
pop
pop
adc
cmp
push
clc
repnz
out
jne
inc
aam
sub
scas
mov
shlb
ret
pop
mov
jno
jl
cmp
cmc
das
mov
jle
adc
or
xchg
cmp
lds
mov
add
mov
shll
xorb
pop
push
outsb
stc
mov
push
lret
sub
clc
cmpl
add
or
inc
sti
faddl
adc
lods
jge
push
lret
inc
out
or
int3
push
xchg
sub
or
dec
or
out
jl
aas
in
jp
pop
xchg
jmp
les
sub
add
push
add
call
xchg
or
stos
stc
out
push
movsb
ljmp
movsb
test
mov
push
cmp
mov
out
pop
pop
xchg
insb
js
inc
pop
mov
mov
js
arpl
cmp
or
test
imul
fwait
leave
cmp
xchg
outsl
inc
cmp
data16
dec
das
push
pop
lea
mov
xor
mov
arpl
out
cld
jmp
call
mov
repz
or
jecxz
add
int
leave
fisttpll
and
and
and
roll
loop
leave
fisttpl
push
mov
dec
addr16
lock
inc
out
push
popf
xlat
movsb
ss
fadds
push
pand
xchg
sub
adc
outsb
imul
push
push
adcl
mov
mov
or
or
sbb
cmp
pop
test
lods
jbe
jge
in
insb
dec
sbb
fstps
mov
scas
out
jbe
imul
jl
push
pop
push
mov
cmp
lret
shlb
push
lcall
rcrb
int
xchg
lahf
aaa
lds
and
stc
out
js
mov
jno
push
adc
mov
scas
xchg
int
and
std
popa
or
inc
dec
inc
jle
mov
test
fisubrl
leave
mov
rcrl
jmp
mov
and
push
fcompl
inc
sub
ret
push
xchg
mov
insb
or
loop
insl
sbb
lret
cltd
push
icebp
into
lods
loope
arpl
push
ret
inc
or
sbb
mov
add
fsubrs
and
lret
or
sub
push
jns
int
shrl
inc
cmpsl
out
inc
mov
imul
sub
cmp
push
loop
jo
lcall
sbb
mov
sbb
fistps
imul
push
test
lods
pusha
sbb
xchg
rcll
push
mov
test
xor
lock
sbb
bound
push
and
xchg
fidivrs
ja
add
dec
mov
test
and
jmp
nop
xor
sti
loop
negl
jp
cmp
or
inc
inc
xchg
pop
mov
js
sub
gs
movsb
int
sbb
pop
or
addb
lcall
popf
or
dec
testl
ds
dec
mov
enter
push
clc
mov
cmc
pop
cli
addb
sub
push
es
xor
ss
sarl
mov
xchg
movsb
xchg
sbb
adc
loop
stos
cmp
popl
movsb
mov
cltd
decl
inc
hlt
mov
sbb
outsl
adc
mov
inc
clc
sub
adc
in
subl
mov
mov
sar
cltd
xorl
add
mov
data16
sbb
pop
lds
scas
faddl
sub
dec
out
sub
loop
cmpsl
dec
mov
mov
dec
inc
je
mov
subl
mov
scas
jns
lods
xor
mov
dec
in
ret
ficompl
or
cltd
dec
movsl
jle
out
dec
test
shrl
ds
jecxz
pop
into
xchg
mov
pop
addl
jne
push
rcll
dec
dec
jo
add
gs
xchg
or
add
adc
aad
jne
push
insb
dec
mov
das
popf
call
mov
pop
inc
roll
mov
loop
mov
int3
cmp
jl
and
enter
and
out
daa
pop
xchg
mov
jp
sbb
leave
push
dec
insl
and
cmpsl
loop
add
mov
mov
jle
faddl
mov
push
andnps
js
jb
add
cwtl
rorb
sti
sub
xor
out
loope
xchg
fsub
sub
xor
mov
dec
sti
add
sub
inc
les
xchg
clc
push
lret
sbb
roll
aas
cmc
lret
mov
cmp
fdivrp
mov
ds
dec
mov
repz
mov
aam
adcb
push
adc
cmp
and
push
aam
or
xchg
popl
dec
ja
and
adc
inc
push
jo
lahf
xchg
inc
das
xchg
jae
loop
hlt
adc
jb
sbb
mov
sbb
ds
scas
adc
repz
xchg
insl
add
or
rcrl
clc
sbb
and
inc
aas
mov
repnz
pop
mov
insb
out
mov
inc
enter
pop
cmpsl
mov
imul
dec
cltd
xchg
loop
iret
int
adc
in
inc
xchg
push
xor
mov
mov
push
pushf
out
jb
xor
inc
xchg
jge
movsb
mov
inc
addb
sbb
enter
adc
inc
adcl
cmp
mul
sub
cmc
lea
adc
enter
pop
cltd
mov
jno
mov
cmp
insl
lret
mov
mov
xchg
mov
jle
sahf
int
pop
cmp
enter
pop
pop
fldt
int3
add
cmp
std
push
ljmp
imul
mov
and
pusha
jns
jge
jg
pop
cmpb
mov
loop
dec
test
shll
mov
lahf
cli
repz
jle
nop
inc
subl
iret
add
sbb
loope
mov
xchg
adc
push
arpl
rcl
leave
arpl
xor
test
mov
pop
jle
push
inc
push
mov
push
sbb
movsb
ret
std
out
xlat
inc
lods
add
js
loopne
adc
lods
adc
mov
sahf
inc
mov
in
pop
test
ret
mov
pushf
loope
push
and
or
stos
jmp
adc
mov
cs
and
ljmp
shlb
enter
mov
lret
cmp
popf
pop
mov
pop
xchg
cmpsb
loop
push
pop
inc
int3
jge
outsb
dec
xor
jp
inc
or
fnstsw
loop
and
jns
frstor
xchg
pusha
mov
sub
jl
jb
inc
xchg
cmpsb
dec
iret
push
je
pushf
jecxz
dec
in
in
adc
fists
mov
fistpl
ja
xchg
outsl
fsubrl
sub
icebp
mov
test
jne
pop
aam
sbb
mov
push
xlat
outsb
jge
cmpsl
and
gs
jo
cmp
incb
cwtl
ljmp
scas
filds
fistl
fdivrs
dec
es
jmp
sub
xor
mov
stc
cmp
cmp
cmp
lock
pop
add
adc
mov
jg
fmuls
call
loop
jl
mov
in
out
icebp
mov
mov
add
jae
aad
ljmp
movsl
or
das
out
ret
and
leave
sti
pushf
push
xor
xor
mov
movsl
cld
fdiv
je
inc
mov
cmpsb
add
sbb
in
shrd
xchg
cltd
mov
ret
dec
lcall
pop
dec
inc
dec
cltd
inc
mov
adc
jno
mov
gs
push
sbb
iret
cmp
sar
test
mov
movsb
mov
jo
push
xor
cmc
sub
mov
icebp
ficoml
cmp
push
and
adc
sub
pop
pop
mov
jp
cmp
jo
bound
jle
popa
addr16
pop
icebp
sub
lock
sbb
mov
aad
push
fisttpl
imul
gs
xchg
cmp
les
push
adc
xchg
ss
push
mov
dec
cmpsb
inc
movsl
aad
leave
les
mov
or
and
xchg
movsb
imul
mov
inc
shlb
adc
scas
js
cmpsl
inc
or
fcoms
mov
inc
imul
jecxz
push
pop
pop
mov
int
shl
in
scas
fmuls
mov
movsl
lock
sti
ret
or
pusha
and
mov
pop
jl
sbb
push
jecxz
sub
aaa
lret
repz
and
push
and
pop
fidivrl
or
jecxz
mov
mov
mov
sbb
ret
cmpsl
jp
clc
pop
jmp
sbb
lahf
mov
mov
and
cmp
pop
mov
lcall
movsb
in
fxch
js
mov
jmp
fldt
jmp
xchg
jmp
xor
and
adc
xchg
ljmp
xor
push
outsb
test
faddl
imul
jp
inc
mov
pop
repnz
popf
mov
push
xchg
outsl
dec
mov
cld
int3
cmp
and
lret
lods
test
sbb
into
sub
iret
cmp
cltd
xor
cwtl
mov
adc
jo
pop
adc
mov
enter
sub
add
lods
sbb
add
lcall
in
ja
ja
gs
sbb
inc
jne
mov
stos
daa
pop
jmp
sbb
lock
xchg
xor
fbld
ljmp
cmp
insb
pop
out
leave
pop
adc
outsl
call
lret
insl
loopne
sbb
inc
addr16
fcmovne
std
icebp
xor
sub
jg
mov
push
les
jmp
or
pop
sarl
and
cltd
sub
imul
in
pop
out
mov
push
sub
mov
and
cwtl
and
test
out
pop
mov
sbb
je
or
and
rcrl
aam
push
rdtsc
or
arpl
jg
fsub
cmpsl
mov
push
daa
into
sub
fs
in
jmp
mov
test
aam
scas
movb
xchg
in
aad
pop
aaa
mov
sbb
test
popf
lret
xchg
lahf
jge
cltd
dec
lahf
jb
add
push
lret
sbb
sub
pusha
jns
adc
repz
and
popa
out
cwtl
mov
or
jge
or
mov
and
inc
xchg
jb
adc
nop
mov
jbe
mov
dec
add
leave
rcr
xor
inc
jle
or
mov
jns
mov
and
arpl
aas
inc
fsts
xchg
js
jl
shlb
andl
nop
mov
mov
sbb
inc
mov
in
sbb
push
sbb
fimuls
dec
shrb
xchg
fistps
lds
pop
pop
shll
xchg
xchg
repz
xchg
adc
jbe
pop
addr16
into
jg
add
jb
lret
aaa
inc
push
mov
je
mov
hlt
sub
push
inc
mov
xchg
or
sbb
arpl
jl
and
jne
push
stos
movsl
je
lret
je
sahf
push
mov
into
ljmp
pop
fistpll
mov
aam
xor
dec
std
sub
inc
adcl
dec
fnstsw
push
adc
sub
inc
daa
xor
cmpb
in
movsb
add
out
andl
rorb
iret
inc
jae
movsl
lret
iret
cmp
dec
fdivs
pop
mov
xchg
ret
jmp
push
jl
sti
int
jg
pop
hlt
mov
and
test
imul
add
jno
jmp
fwait
cmpsl
fiadds
hlt
call
fsubrp
scas
inc
xorl
cmp
mov
push
mov
test
into
cmp
repz
cli
leave
pop
ja
loope
pop
push
pop
cli
gs
inc
outsl
sub
or
cmpsl
add
sbb
xchg
sub
repnz
dec
out
cs
nop
es
push
jmp
mov
xor
add
test
dec
js
adc
ret
call
and
and
loopne
or
pop
movl
fisubrl
cmpb
int3
insl
dec
mov
push
adc
jae
int
cmp
pop
test
scas
daa
pop
scas
iret
shlb
cld
add
push
inc
mov
mov
mov
cmp
inc
lods
sub
dec
push
ljmp
mov
mov
inc
add
mov
fildll
inc
movsl
jp
insl
dec
xlat
cmp
inc
pop
test
clc
das
sbb
jmp
rclb
pop
imull
push
ljmp
test
call
inc
lret
lahf
or
fcmovne
xor
stos
xor
ficoml
clc
dec
stos
es
xor
bound
stc
into
cmp
dec
sbb
inc
into
vpaddw
test
xor
add
faddl
jno
sbb
mov
or
push
pusha
mov
lahf
movsb
loop
mov
xchg
push
add
mov
mov
fbstp
sti
aad
movsl
pop
cmp
sub
mov
sbb
cltd
and
xlat
and
pushl
outsl
or
sarb
push
jl
adc
lahf
xlat
loope
xlat
push
push
xchg
std
push
shl
in
stos
sbb
xchg
imulb
xor
adc
pop
mov
mov
xor
add
push
push
lods
mov
push
pusha
pop
leave
fmuls
mov
cld
lods
pop
popf
cmpsb
dec
adc
notb
mov
outsb
pusha
les
inc
loope
js
push
adc
sbb
cmp
ljmp
iret
je
mulb
iret
in
mov
pop
sti
sti
popa
cltd
xchg
in
in
xor
aas
aas
pop
imul
movb
mov
mov
xchg
xor
jo
jle
outsb
cmp
xchg
sub
sbb
pop
push
ljmp
sbb
inc
mov
jge
pushf
mov
movl
cli
dec
iret
mov
subl
sub
pop
popf
pop
mov
pop
xchg
lods
jae
flds
loopne
jmp
arpl
call
push
sahf
das
dec
bound
loope
clc
repnz
push
jno
out
clc
jnp
test
cld
dec
sbb
add
mov
notl
mov
push
lock
or
add
push
int
push
cs
pop
xor
idivl
mov
xor
shrl
lahf
into
lods
and
rcrb
in
mov
xlat
aam
cmp
ljmp
or
and
mov
xchg
lods
pop
sub
sbb
nop
and
or
iret
jg
repnz
es
arpl
pop
adc
in
inc
push
stos
jl
sub
mov
scas
fiaddl
mov
pop
outsb
std
cmp
push
sarb
push
mov
das
mov
pop
jnp
lods
add
das
rcl
dec
call
xchg
mov
and
cmpsb
xchg
enter
pop
dec
hlt
pop
movsl
pop
jb
inc
divb
dec
pop
jl
arpl
mov
cmc
aad
push
jmp
adc
jg
divb
push
popf
jnp
rep
fs
test
pop
jge
stos
in
test
add
or
push
jecxz
out
jp
cli
lods
int3
push
inc
nop
or
mov
cmp
push
dec
jo
mov
and
push
fbstp
dec
xor
and
mov
dec
ljmp
xor
and
lea
xor
inc
es
ds
xchg
outsl
and
inc
and
fiaddl
mov
out
pop
ficompl
lcall
imul
imul
mov
sbb
popf
sub
imul
js
imul
test
sbb
pop
push
jl
out
int3
mov
lods
and
sub
insb
stos
lret
inc
pop
mov
dec
dec
data16
mov
inc
das
fisttps
xlat
adc
xor
mov
or
cli
dec
push
jge
lret
cmp
scas
dec
testl
xchg
or
xchg
pusha
pop
jg
push
lods
push
mov
fwait
test
test
jmp
out
fsts
push
dec
and
ficomps
or
sahf
sahf
sbbb
in
enter
ja
add
scas
imul
bound
jge
jl
xchg
fsub
inc
lods
push
lret
jno
pop
cmc
fcmovnb
xor
push
enter
out
jnp
gs
push
xchg
dec
cmpb
out
inc
mov
mov
xor
xor
cmc
test
movsb
movsl
adc
pop
xchg
outsl
push
mov
int
daa
add
testl
inc
or
jg
out
insb
in
fstps
repz
cmp
sahf
lahf
sbb
add
data16
je
out
data16
jge
lods
daa
adc
xchg
adcb
loopne
or
cmp
adc
loope
push
mov
addr16
stos
rolb
xchg
test
mov
jg
push
call
push
mov
push
cmc
pop
cmp
mov
jle
fadds
sub
push
adc
push
daa
mov
leave
cmp
pop
or
enter
arpl
mov
sbb
shrd
adc
jge
out
repz
pop
cmpb
mov
and
push
cltd
loope
fbld
mov
sbb
loope
aaa
adc
popf
push
lds
mov
sbb
mov
and
sbb
xor
into
jb
outsl
pop
movq
ds
and
dec
xchg
lock
scas
les
loope
movsb
dec
adc
adcb
or
pop
mov
mov
clc
push
add
add
cmp
ret
int
push
xchg
mov
pop
adc
mov
push
cmp
cmc
inc
ret
add
pushf
xchg
xchg
mov
add
ds
lret
lds
dec
mov
inc
xor
imul
mov
scas
fdiv
xchg
inc
xchg
sbbl
icebp
test
lcall
ficoms
cmpsl
fwait
pop
inc
sub
les
push
fidivrl
mov
fildll
inc
or
dec
insb
sbb
mov
mov
ret
xchg
outsl
mov
xchg
cmp
rcll
fs
fnstcw
test
mov
loop
xchg
cwtl
lds
insb
adc
aam
lcall
fwait
fwait
imul
inc
out
lods
orb
inc
xor
out
inc
es
out
or
pop
inc
mov
repnz
in
repnz
xor
fldl
dec
lock
arpl
sbb
cli
mov
pop
cltd
mov
inc
push
lahf
movsl
nop
xor
loop
mov
inc
gs
mov
loopne
mov
clc
stos
jp
xchg
imul
rcr
and
xchg
xchg
sub
enter
loopne
ror
push
jle
and
push
sti
bound
mov
outsb
pop
out
pop
dec
push
sbb
adc
inc
jae
fcmove
aaa
sahf
in
push
adc
sbb
or
sub
xchg
addr16
gs
js
call
adc
gs
insl
jge
jecxz
pop
test
hlt
mov
outsl
clc
imul
mov
popf
insb
adc
jb
sbb
cltd
jnp
and
lods
cwtl
add
insb
mov
xor
xchg
mov
loopw
fdivl
out
pop
das
arpl
jl
rorl
mov
arpl
jne
les
and
scas
lahf
enter
in
loope
dec
movsb
loope
test
aaa
ss
fistpll
lods
xchg
push
push
mov
clc
sti
jo
addl
imul
pop
imul
mov
mov
pop
mov
ficompl
sub
jp
xor
movsb
jne
sarl
xchg
icebp
ret
cmc
adc
gs
xchg
lea
add
pop
add
xor
repnz
testl
nop
fistpll
rorl
cli
push
inc
inc
mov
inc
mov
call
xchg
and
lock
and
js
or
enter
stc
xchg
push
in
sub
aaa
add
fcomp
add
push
cmpl
sub
sahf
jecxz
jecxz
sahf
mov
loop
cmp
cmp
xor
mov
mov
cmp
mov
jecxz
add
sub
aad
fists
xlat
cwtl
fwait
je
add
ss
dec
jg
aaa
in
lcall
jmp
repz
mov
xor
xlat
or
mov
dec
out
add
hlt
ss
push
push
push
pushf
sbb
repnz
fs
gs
mov
rcrl
push
mov
mov
lea
lret
test
inc
sbb
in
jecxz
mov
or
mov
jp
fstps
sahf
je
loop
mov
xchg
push
rcr
mov
imul
repz
movsb
or
lds
push
pcmpgtd
jg
xor
sbbb
add
in
jno
pushf
loope
movsb
stos
push
sub
imul
xor
push
into
hlt
loope
add
movsl
fs
mov
jmp
fwait
xor
or
lds
mov
repnz
xchg
dec
repnz
jl
pop
rolb
jmp
inc
and
imul
xor
testb
push
mov
ljmp
lds
testb
ja
subps
cmpsl
loope
and
mov
dec
sti
pop
fisttpll
daa
push
btc
pop
xor
push
lret
inc
jecxz
jb
mov
mov
adc
pop
sarl
addb
cmp
loop
mov
sbbl
das
add
outsb
sub
inc
pop
sahf
notb
enter
mov
cmp
pop
xchg
and
xchg
or
call
mov
adc
in
sub
data16
sub
mov
iret
fadd
out
aas
out
adc
jp
daa
adc
lret
je
mov
inc
and
jecxz
test
inc
and
jp
fst
sbb
jecxz
shrd
adc
addl
lods
jg
fdivp
test
inc
sbb
mov
cli
add
je
cmpsb
fwait
jo
cmp
push
jns
xorl
je
int
inc
insl
mov
jl
loope
and
fadd
pop
push
fstpt
inc
int
and
test
push
imul
cwtl
ss
mov
jle
pop
repz
aam
xchg
hlt
frstor
inc
cmp
or
pop
adc
xchg
lahf
push
test
pop
mov
jbe
in
cli
xchg
dec
dec
fdiv
flds
rcr
cld
cs
or
jns
aad
and
lea
add
loopne
push
in
arpl
scas
mov
pop
pop
mov
test
jp
lock
push
imul
fistps
jbe
movsl
xor
pop
inc
xor
add
jg
pop
lods
cmp
push
scas
adc
stc
push
in
das
jo
out
repnz
lcall
xlat
jo
pop
jne
adc
cmc
movsl
mov
fadds
loop
shlb
xchg
movsl
rcrl
mov
addl
sbb
pop
pushf
jo
daa
lcall
scas
xchg
lock
into
dec
mov
popf
pop
mov
imul
dec
pop
xor
push
cwtl
es
push
inc
movsb
mov
lea
cmpsl
dec
test
cs
fcmovnbe
gs
sahf
push
lods
jmp
shlb
test
mov
lods
stc
dec
mov
add
or
data16
mov
imul
mov
shlb
dec
dec
shlb
xchg
jbe
and
cmp
xchg
sbb
xor
dec
add
out
cld
push
push
popf
and
xchg
shl
cmp
mov
or
call
test
inc
hlt
xlat
push
icebp
movsb
sti
xchg
dec
and
cs
test
loope
les
fstl
inc
push
scas
jmp
adc
push
mov
inc
xor
cmp
repz
mov
or
jge
fs
stc
inc
in
cmp
sbb
jo
sbb
inc
rcr
lret
mov
sbb
int3
mov
mov
mov
flds
push
js
loopne
push
imul
loopne
incl
and
fnstsw
xor
fimull
ret
add
and
fcmovb
cld
sbb
pushf
xchg
addl
jb
and
xor
and
sahf
xor
movsb
cmp
aaa
xor
inc
jno
inc
xchg
sub
cmpsl
in
pop
pushf
in
scas
adc
cltd
pop
aad
xor
or
pop
lea
push
lock
int3
out
mov
stos
pop
mov
pusha
sbb
test
adc
add
dec
pop
fdiv
lods
aad
dec
jnp
ficomps
addr16
jl
dec
pop
cmpsb
cltd
jge
mov
dec
mov
push
mov
and
lock
imul
xor
rcll
enter
rol
xchg
das
and
fdivr
fwait
movsb
add
push
or
mov
mov
mov
push
int3
stos
scas
push
clc
push
inc
add
je
sub
jge
inc
mov
mov
cmp
sub
lcall
xor
fwait
add
addr16
jl
stc
outsb
pop
cwtl
xchg
jge
popa
pop
and
adc
xlat
notb
cmp
pop
pop
xchg
xor
imul
mov
mov
fisubl
xor
cwtl
adc
jecxz
mov
sbb
push
aas
jne
mov
xor
mov
fsubs
pop
insl
mov
pop
call
mov
insb
out
push
cmpsl
sbb
mov
sub
lock
outsl
or
mov
sub
sbb
mov
dec
sbb
push
pop
dec
es
insb
sub
push
inc
push
cli
xor
sub
mov
jno
enter
xor
mov
and
lea
shrb
dec
daa
int
mov
xchg
fstpl
dec
jne
jae
and
cmp
jo
fwait
leave
jne
rcrb
arpl
cmp
jecxz
jle
ret
subb
in
xchg
jbe
sbb
test
xor
fiaddl
and
sbb
fsubp
sbb
in
jo
and
cmp
cmpsb
dec
jle
jnp
pop
push
js
cmpsl
daa
xor
push
dec
ljmp
aaa
lods
push
xchg
es
cmp
cmpsl
outsb
and
jae
mov
inc
popf
mov
cmp
adc
outsb
jp
xchg
mov
push
mov
push
and
or
int
jmp
or
pop
cli
mov
loop
jne
and
mov
aaa
mov
jne
mov
and
sarl
sub
frstor
adc
add
insb
inc
sub
out
mov
and
aam
sub
add
nop
jl
mov
popf
jmp
sti
mov
and
bound
enter
pop
xor
inc
lods
jae
xchg
mov
ljmp
dec
clc
jo
test
lds
mov
mov
dec
sub
bound
testl
mov
mov
icebp
stos
dec
movsb
fs
divb
inc
cmc
call
mov
jg
fwait
push
sti
test
iret
les
lods
rcl
cltd
mov
push
dec
pop
mov
popa
or
push
ret
insl
mov
push
adc
jbe
loope
inc
xor
stos
sub
cmc
sub
lock
or
gs
out
cld
lahf
cltd
lds
lcall
adc
jmp
les
mov
pop
mov
jge
repnz
mov
jae
ret
test
mov
shlb
xor
pop
inc
lds
jno
inc
flds
or
fwait
cmpsl
or
xchg
push
sbb
cld
aam
jne
jge
mov
out
leave
mov
pop
jbe
mov
dec
icebp
movsl
pop
mov
dec
mov
add
push
mov
pop
fiaddl
xchg
bound
not
psllw
or
fwait
loop
fisubs
cmc
mov
cltd
pusha
negl
sub
mov
pop
pushf
sub
xchg
icebp
fiadds
push
sti
in
inc
test
mov
pop
sti
xchg
movsb
mov
sub
pushf
inc
mov
test
sti
cltd
jno
pop
mov
adc
push
inc
outsl
stc
adc
loopne
pushf
mov
aam
inc
scas
popa
outsl
cmp
sub
and
adc
jmp
jo
sbb
lahf
test
faddp
and
in
mov
pop
jl
add
or
cli
and
fstpt
or
repz
push
xchg
sub
pop
les
js
lods
cmpsl
push
mov
loope
aas
repz
lret
nop
jo
or
hlt
cmp
pop
adc
jae
sub
mov
movsl
adc
mov
push
bound
movsb
cmc
push
pop
push
mov
mov
cmp
push
sub
fimull
sub
mov
push
xor
inc
bound
mov
out
inc
cld
jns
test
das
loope
pushf
pushl
xor
cmp
out
outsb
bound
or
xchg
mov
lret
xor
scas
and
movsb
xlat
xchg
popa
mov
mov
aaa
xchg
lods
lock
int
lret
fdivp
sub
push
scas
xor
xor
test
fnop
in
inc
cmp
icebp
pop
shll
jne
push
pop
inc
or
jle
rclb
sub
xor
mov
popa
mulb
gs
lock
ss
fwait
call
push
sub
push
xlat
pop
popa
jne
imul
push
dec
adc
mov
push
mull
jno
xchg
mov
fwait
xchg
mov
jge
add
aaa
sbb
adc
aad
adc
add
iret
mov
popaw
cld
out
lret
or
xchg
inc
jns
cmp
push
nop
movsb
jg
cmp
mov
sbb
enter
cmc
jecxz
cmp
int3
push
mov
in
sub
adc
inc
sarb
add
shrl
add
scas
loope
shlb
jmp
jmp
mov
inc
adc
fdivl
sbb
ljmp
cmp
outsb
sub
lock
xor
pop
adc
jp
nop
fsts
pop
arpl
and
xchg
lcall
stos
test
xor
adc
inc
add
jbe
jmp
fstl
testb
mov
imul
add
in
and
push
mov
or
out
mov
xchg
adc
jecxz
mov
cmp
pop
mov
sti
dec
cltd
out
mov
in
shll
insb
mov
jbe
sub
and
je
push
cli
daa
rcrb
repz
outsb
int
mov
test
xor
into
jl
ljmp
out
outsl
leave
cmp
and
push
outsb
frstor
push
outsl
xchg
pop
es
dec
push
out
cld
xchg
dec
sti
jp
cmp
aam
sub
ljmp
cld
sbb
add
and
push
mov
out
cmp
in
addr16
out
hlt
lods
fwait
insb
push
fisubs
arpl
movsb
nop
mov
mov
mov
push
cmpsb
pop
sbb
ds
std
shr
mov
std
sub
and
insl
les
jb
insb
es
jb
add
lea
sahf
jbe
mov
mov
dec
mov
jbe
mov
inc
call
out
push
xchg
cmc
jne
cs
bound
fdivr
push
pop
in
shll
mov
ret
pop
lods
movsl
les
lahf
xor
int
nop
sbb
aad
mov
pop
dec
es
out
and
bswap
or
jne
aas
cmp
push
loop
pop
mov
sbb
mov
lods
inc
xchg
sub
fcmovnb
and
inc
test
mov
imul
fisubrl
insb
push
inc
lahf
loop
int
mov
shll
ljmp
adc
sar
pop
ja
sbb
pop
mov
jbe
add
xchg
lods
sbbb
ds
and
inc
push
inc
inc
das
stos
adc
sbb
insl
push
mov
push
cmp
cmpsl
xchg
aas
and
ss
ja
and
mov
in
insb
push
jae
pop
xchg
mov
scas
pop
xchg
add
fldenv
imul
jge
jle
mov
pop
dec
lcall
pop
data16
test
mov
scas
dec
das
mov
push
push
js
mov
adc
arpl
cmp
inc
adcl
jp
mov
loop
cli
aad
sub
test
cmp
lock
adc
jne
dec
inc
and
test
addr16
dec
mov
inc
fisubrs
leave
mov
pop
cmpsb
popf
hlt
dec
mov
cmp
fs
mov
sbb
clc
popf
mov
adc
cmp
xor
mov
xchg
in
mov
fwait
icebp
push
stos
pop
sbb
mov
jb
scas
ds
in
in
xor
cmpsl
stos
divb
mov
xlat
pusha
mov
in
push
and
leave
mov
pop
mov
push
mov
enter
sbb
pusha
nop
lahf
xchg
out
jae
sub
xchg
ss
lcall
inc
mov
call
icebp
jnp
pop
frstor
xchg
xchg
mov
mov
xchg
or
cmp
xchg
dec
push
pop
lods
ljmp
jo
dec
icebp
scas
aaa
es
and
sbb
ljmp
push
dec
or
test
adc
pop
fsubl
and
fdivp
mov
nop
sub
loop
mov
loope
cmpsl
mov
cmpb
mov
dec
add
sbb
or
pop
mov
data16
and
sub
mov
mov
outsl
inc
cld
inc
mov
lods
wrmsr
adc
jl
jp
add
jmp
dec
stos
out
sbb
sub
iret
mull
xchg
lahf
mov
int3
syscall
stc
jnp
add
and
inc
int3
cmp
fldl
mov
xor
stos
ja,pt
repz
cmp
test
rclb
rorb
nop
decl
sti
inc
cmp
mov
cs
xchg
dec
mov
ret
movb
jge
cmp
dec
fwait
sbb
ds
stc
pop
cld
push
bnd
push
movq
js
lea
stos
popa
insb
inc
movsb
fldcw
popa
outsl
imul
notb
push
icebp
dec
into
addb
inc
je
je
adc
add
outsl
mov
cmp
mov
into
mov
filds
dec
jp
pop
mov
call
xchg
sahf
jo
xchg
inc
pop
sbbb
lea
mov
insl
pushf
cld
adc
lock
movb
les
cmp
pushf
les
push
mov
insl
cmp
nop
push
fcmovnbe
js
aad
mov
lods
dec
push
ljmp
mov
mov
inc
lcall
std
shr
adc
andb
sbb
or
mov
inc
movsl
fucomip
nop
dec
push
pop
loop
jmp
hlt
outsb
leave
sub
lods
lds
or
jo
mov
loop
fidivrs
mov
mov
flds
jb
and
adc
xor
inc
and
jge
jnp
pop
stos
arpl
cwtl
jns
fistl
push
jns
icebp
shrl
stc
cs
jmp
inc
mov
mov
mov
push
in
jb
scas
push
push
ret
mov
leave
fwait
shl
in
sbb
lcall
fnstenv
outsl
add
mov
int3
and
imul
jbe
sub
dec
cmc
adc
pusha
orb
ficoms
aad
inc
sub
jl
nop
jp
int3
xorb
cmp
jp
pop
cmc
cmp
mov
jno
or
add
pop
out
xchg
cmp
pop
inc
jno
cs
popa
and
mov
inc
enter
int3
testb
out
inc
popf
out
push
xchg
andb
push
stc
sbb
or
dec
adc
outsb
jae
cwtl
cmpsb
call
dec
insb
shlb
ret
pop
sbb
add
lea
fldenv
int
mov
xor
xor
scas
lahf
lcall
mov
xor
push
or
mov
push
mov
cmpsb
daa
pop
xchg
inc
loope
and
push
out
rcl
mov
testb
jns
jns
sub
int
pop
sbb
xor
arpl
lret
addr16
and
jl
int3
xchg
sbb
imull
sahf
aad
inc
rdmsr
add
les
in
sub
stos
xchg
cmp
pop
std
rcll
scas
add
aaa
jne
shll
dec
pushf
xchg
addb
outsb
loop
in
add
push
das
bound
outsl
out
inc
out
mov
push
mov
jo
lret
in
push
xchg
adc
daa
je
mov
pushf
sbb
push
lods
ror
dec
adc
mov
push
jle
sbb
adc
sbb
mov
das
jo
xchg
shlb
xlat
ds
fmulp
inc
pop
in
mov
dec
mov
sub
mov
xchg
fbld
mov
dec
int3
scas
ficoml
xchg
cltd
sub
cmp
hlt
pop
inc
adc
mov
shr
addr16
int3
sub
lret
stos
leave
shlb
fidivrs
jnp
add
mov
push
daa
rcll
rorb
stos
movsl
cs
cmpsl
cmp
sbb
jbe
inc
add
inc
popa
ss
cmpsb
jae
test
pop
aas
ficoml
push
push
pop
or
ja
and
push
jne
sarl
sub
sbb
sub
add
in
and
movl
mov
pop
sub
lock
dec
mov
fistpl
popf
cmp
jns
cmp
pop
dec
insb
jl
divb
hlt
out
int3
dec
aaa
je
xor
xor
xchg
push
cld
lods
mov
pop
ss
es
jecxz
sbb
mov
adcb
subl
push
out
in
mov
in
in
and
ret
roll
stc
ret
dec
pop
pushf
jb
out
stos
or
aas
in
shl
mulps
adc
das
xor
repz
notl
pop
mov
cmp
cmp
outsl
pop
cld
xchg
pop
or
aaa
movsb
pop
dec
fwait
pop
and
jmp
adc
inc
xchg
sti
jge
add
fst
mov
xor
ret
lea
inc
cwtl
sbb
sub
xor
loop
sarb
add
xorl
aam
or
inc
pop
icebp
mov
dec
in
nop
mov
repnz
mov
pop
push
push
ret
push
sub
sbb
add
inc
test
dec
push
or
dec
mulb
icebp
mov
cltd
mov
je
mov
mov
rcr
cmpsb
data16
xor
fnstcw
mov
jae
push
and
xchg
outsl
dec
into
repz
jae
data16
scas
sub
sub
repz
xchg
mov
fcmovnbe
mov
push
sbb
sub
add
ds
cmp
add
add
mov
hlt
sbbl
adc
icebp
xor
jp
xchg
pop
mov
sahf
xchg
fnsave
push
rorb
leave
xchg
mov
cmp
inc
lcall
enter
stc
shl
xchg
dec
out
divl
mov
shrb
addr16
fsts
fstpt
stos
push
push
sbb
push
orb
sahf
push
push
ljmp
clc
popa
or
mov
cmp
orl
es
mov
adc
mov
sbb
and
sbb
fnstsw
add
sahf
test
add
adc
inc
insl
ret
jne
dec
cli
lds
cmp
mov
aad
repz
inc
xchg
stos
sbb
ds
lss
jbe
add
scas
jmp
outsl
adc
jns
cmp
mov
movsb
mov
pop
jae
and
mov
xor
js
in
dec
cmp
scas
adc
pop
xchg
inc
ret
push
mov
mov
mov
leave
push
inc
xchg
test
and
paddusw
jmp
cmp
stos
or
adc
and
pop
outsb
or
xchg
or
or
jo
cmp
ds
out
mov
push
shlb
sub
lahf
inc
fwait
out
fisttps
in
sub
inc
mov
cld
fistpll
pop
in
jno
scas
repnz
adc
les
mov
cmc
clc
cmp
incl
pop
leave
adc
xchg
mov
cmp
into
cltd
ret
mov
dec
clc
pushf
call
dec
aas
adc
push
sbb
xchg
xchg
xchg
dec
je
xchg
fs
aam
dec
cmp
mov
lods
and
xlat
dec
daa
bound
insb
inc
xchg
ret
ss
dec
js
test
mov
lcall
mull
and
ljmp
lock
out
or
inc
lcall
rcrb
lahf
or
jo
leave
test
cmp
icebp
scas
loope
in
jecxz
shr
imul
shrl
push
jns
xor
xchg
xchg
jp
push
xchg
cltd
mov
add
mov
push
push
cmp
dec
shll
dec
sahf
xchg
inc
push
stos
in
popf
popf
popf
mov
ljmp
rcr
in
cmp
adc
adc
into
jp
mov
lsl
cmp
testb
cmpsl
outsl
clc
sub
pusha
es
xor
mov
cmp
scas
cmp
lahf
movsb
jbe
jno
rorl
xchg
pop
enter
jb
add
inc
insb
ja
stos
push
push
pop
sub
and
inc
pop
cmc
nop
repnz
mov
and
or
or
nop
mov
js
xchg
cs
into
popa
aas
xchg
aam
in
adc
icebp
popf
mov
mov
iret
dec
insb
jmp
sub
push
sbb
sub
inc
dec
adc
xchg
add
and
aad
inc
sbb
cmc
jno,pn
je
jns
andb
xor
xchg
jle
ret
cwtl
popa
cld
xor
fisttps
sti
dec
or
test
add
adc
int3
mov
enter
scas
sbb
adc
mov
push
sbb
mov
push
les
test
inc
insb
jo
scas
and
shll
sbb
xor
jl
data16
add
stos
popf
je
or
rclb
adc
fwait
jnp
jecxz
fisubl
scas
call
dec
sub
cmpsb
dec
jae
mov
cmp
push
gs
pop
add
adc
pop
in
loopne
sub
sub
faddl
or
loope
xchg
fsubl
insl
enter
mov
pop
add
xor
xchg
movsb
add
xchg
inc
pcmpgtb
inc
daa
gs
setns
pop
cmc
aad
mov
add
sti
jnp
das
cmp
stc
xchg
or
pop
popf
inc
fwait
cmp
jecxz
pop
test
inc
icebp
jg
popf
clc
pop
mov
adc
push
cmp
outsl
jae
mov
loope
mov
xor
xor
pop
jae
mov
repnz
in
fldl
sbb
neg
add
cmp
es
ret
insb
mull
push
add
xchg
push
mov
or
mov
push
lea
jle
mov
cmpsl
dec
or
mov
xor
icebp
ljmp
add
dec
test
movsl
repnz
sub
mov
mov
xlat
cs
into
cld
scas
mov
inc
jmp
or
adc
repnz
inc
adc
pop
test
outsb
dec
cmp
imul
xor
cld
je
xlat
adc
lret
mov
frstpm(287
xor
dec
cmp
mov
mov
insl
iret
jns
shr
loopne
xchg
sub
or
push
mov
addr16
pop
cmp
addb
test
out
jae
out
sbb
lahf
insb
jnp
push
insl
outsl
push
sub
rcrb
insb
pop
loop
call
das
xchg
pop
in
or
inc
jge
iret
in
mov
rcrl
bound
jl
sub
into
dec
dec
lods
fwait
sub
sbb
cld
inc
add
andl
push
dec
mov
mov
mov
idivl
push
xchg
das
lahf
mov
xchg
mov
test
fwait
inc
shl
lret
rcr
or
les
pop
sub
or
cltd
lds
jecxz
cmp
iret
sbb
xor
in
inc
push
dec
call
add
add
or
push
mov
push
or
enter
sbb
push
mov
sahf
adc
stc
cmp
mov
je
jno
les
jge
xor
rorl
pushf
mov
cwtl
fildll
lcall
shrl
adc
push
icebp
neg
pop
mov
out
mov
dec
jo
sbb
pop
aas
mov
xchg
jmp
cs
cmp
xchg
js
jmp
das
xorl
dec
or
xchg
aad
jg
lret
aas
std
mov
sub
push
icebp
test
fcmovnu
mov
hlt
push
sbb
andl
aad
hlt
je
and
mov
mov
cmp
je
mov
push
movsb
adcb
sub
in
out
pop
push
je
push
xchg
pop
ds
mov
xchg
pop
dec
adc
movsb
in
xchg
das
test
or
subb
sub
and
adcb
jne
rcll
fimull
aam
mov
inc
xchg
jle
loope
aaa
pushf
cltd
mov
into
lods
jae
xor
dec
sub
cmc
scas
add
xchg
sub
test
cmp
ja
fwait
cmc
jge
jecxz
les
inc
addl
xor
in
aas
pop
mov
rol
adc
int
jae
movl
imul
pop
inc
push
mov
loope
or
push
xlat
je
sbb
into
imul
cmp
insb
jl
pop
push
ljmp
das
iret
test
xor
adc
data16
shlb
enter
insb
xchg
xchg
outsl
insb
add
mov
in
adc
add
push
leave
xor
push
dec
call
pop
push
mov
mov
insb
cld
nop
sub
cmp
inc
jnp
hlt
insl
data16
mov
cmp
add
clc
sbb
and
sbb
mov
int
call
iret
fisubrl
mov
push
add
test
jnp
jmp
gs
jbe
ss
hlt
sarb
popa
lds
push
mov
dec
mov
cs
pop
dec
xchg
in
fists
pop
jecxz
pushf
rorl
add
mov
dec
cli
es
incl
orl
in
testl
icebp
pop
jecxz
out
pop
nop
or
mov
data16
movsb
cwtl
fidivrl
imul
jno
incb
sbb
inc
jns
ja
in
or
push
dec
xor
sbb
lock
xchg
mov
jg
shr
push
hlt
mov
inc
decb
cmp
imul
dec
mov
lock
mov
cli
jge
adc
jle
mov
out
idivb
mov
jae
fs
sbb
pushf
mov
fdivr
sbb
sbb
jns
cld
cmp
mov
dec
mov
subb
les
sahf
sbb
add
imul
bound
hlt
sti
scas
int3
sbb
push
cs
jecxz
addl
pop
insb
rorl
inc
frstor
mov
sarl
mov
ds
data16
mov
push
dec
push
fs
or
leave
pop
xchg
lahf
arpl
je
adc
mov
and
sbb
pop
int3
push
mov
jae
xchg
femms
daa
dec
jbe
mov
lea
pop
xchg
cld
fbld
sub
pop
sub
lds
pop
mov
xchg
je
in
pop
lret
mov
pop
mov
lods
mov
lods
lea
in
test
iret
mov
sub
sbb
add
hlt
int3
loopne
out
mov
outsb
clc
mov
ffreep
loop
xchg
pop
xchg
jae
imul
dec
fldenv
decb
ds
mov
pop
pop
pop
scas
pop
push
push
add
xor
mov
inc
sub
pop
imul
cltd
or
add
cmovbe
leave
pop
sub
push
cmpsb
push
xor
fdivrs
inc
mov
lret
cmp
sub
repz
test
xchg
jo
aaa
shl
jo
in
xor
sbb
cmp
gs
rorl
mov
push
bound
gs
jmp
and
mov
shrl
pop
cmc
cltd
or
lock
xor
mov
lods
push
shlb
cmp
xchg
push
push
lret
scas
mov
packssdw
dec
jbe
stos
or
cmp
or
cs
push
xlat
jecxz
sbb
andl
lret
addb
xchg
mov
aam
fmul
inc
sbb
movsl
pop
inc
call
test
adc
imul
cmp
in
pop
xor
cmp
pop
lss
sub
sub
repz
inc
push
mov
mov
jg
cltd
sub
shrl
mov
or
pop
lods
fs
pmulhuw
leave
fs
pop
cmp
sbb
cli
shrl
gs
popf
jae
mov
mov
orb
cmp
sub
jno
psadbw
fsubrl
push
int3
lods
mov
roll
shrl
int3
mov
push
inc
outsb
mov
cmc
mull
adc
lods
ss
push
xchg
enter
add
pop
jecxz
sbb
mov
push
data16
mov
sub
mov
dec
fwait
cs
sbb
out
mulb
add
pop
and
adc
mov
inc
scas
xor
xchg
pop
or
out
push
lcall
mov
out
jne
call
xor
push
cmpb
cmp
leave
cwtl
push
js
andb
movsb
dec
xor
push
pop
ds
inc
mov
jecxz
or
pop
daa
cmp
push
xchg
mov
imul
lods
nop
std
push
gs
adc
and
mov
out
lret
jg
dec
loop
mov
and
in
xchg
mull
jge
data16
rcl
mov
mov
lock
stc
cmp
push
and
ret
sub
add
decb
pop
fs
inc
or
inc
xchg
and
push
jb
xlat
pop
pop
sbb
mov
and
or
aam
jbe
enter
dec
negb
scas
ror
lods
les
shl
push
inc
cwtl
ds
xor
aas
into
mov
scas
fstpt
xchg
js
adc
test
scas
ds
repz
sub
add
in
fisubrs
and
adc
cmp
out
xlat
xchg
and
rcr
inc
pop
sbb
insb
add
jmp
adc
pusha
test
or
sbb
sti
xor
jg
aad
xchg
adc
loop
test
cmp
xchg
in
xchg
lea
jge
jo
sub
bound
pop
iret
loopne
mov
push
loopne
xor
xor
fldcw
xor
pop
xor
pop
adcb
add
nop
repz
inc
pop
push
mov
repnz
push
jmp
xor
cmpsl
aaa
iret
aas
ret
mov
dec
pusha
ds
push
ds
andb
cmp
ret
push
mov
rcrl
jle
inc
inc
dec
mov
movsb
mov
pusha
jns
add
xchg
jae
mov
jg
dec
fisubrl
andb
jo
inc
push
or
jae
lods
mov
cmp
add
cmp
mov
cmp
int3
fs
insl
dec
test
imul
dec
sub
sbb
and
lret
ss
mov
cwtl
jne
sti
movsl
mov
xchg
into
jl
lock
cmp
jb
fistps
mov
cwtl
popf
mov
es
mov
sub
xor
pmaddwd
fxch
lods
xor
bound
cmp
es
cli
jmp
cld
outsb
add
jmp
or
nop
adc
or
cltd
mov
mov
dec
mov
dec
pusha
pop
inc
insl
call
or
in
ja
xlat
test
jnp
popa
inc
mov
jnp
mov
or
nop
or
loopne
mov
sbb
lock
add
sti
ljmp
pextrw
adc
cmp
inc
leave
pop
push
mov
xor
sbb
xor
or
add
rcrb
inc
je
cmp
cmp
ret
push
adc
faddl
lods
and
inc
fsubrs
cmp
xchg
es
in
insb
mov
inc
cmp
xor
dec
or
pop
div
es
mov
mov
pop
mov
les
sub
xorb
xchg
into
repz
in
mov
ja
sub
adc
aam
add
jp
mov
das
cmpsb
cmp
test
lds
inc
xor
ret
mov
push
jge
mov
mov
in
and
ret
xor
sub
shrb
xlat
jmp
fmuls
xor
pop
cmp
je
popa
nop
push
popf
pushf
mov
cmp
addr16
outsl
loop
clc
shl
sbb
fs
mov
test
jb
jnp
pop
adc
sub
push
pop
and
outsl
xlat
mov
mov
xchg
setge
cmp
je
mov
ds
aas
shlb
jecxz
jg
fsubl
pop
mov
push
into
test
cs
xchg
pop
and
aas
adc
sbb
or
mov
stos
incl
and
add
ret
inc
mov
sbb
push
pop
hlt
out
insb
arpl
mov
dec
jge
xchg
fdivr
imul
enter
movsl
push
and
push
xchg
lcall
sub
in
testb
andl
xchg
xchg
and
jp
scas
jg
pop
test
push
in
daa
dec
or
mov
mov
jecxz
cmp
push
jno
mov
sub
adc
cmp
add
pop
mov
xchg
push
fldl
pusha
addr16
out
lock
test
outsl
or
sbb
cmp
and
xchg
iret
pop
stos
cmp
sub
mov
aad
lods
xchg
fidivs
out
dec
and
pop
xchg
aaa
test
mov
jecxz
mov
mov
mov
jb
cmpsl
jecxz
insl
repz
arpl
xchg
cs
push
jp
call
pop
xchg
adc
divl
adcl
dec
in
les
mov
adc
push
mov
int3
lods
cwtl
inc
test
out
shll
xlat
mov
mov
and
sub
in
sub
jmp
pop
fstp
adc
aaa
lea
daa
sub
adc
test
cmp
pop
cmpsl
push
or
scas
jg
xchg
in
testl
nop
frstor
pop
testb
cmp
daa
pushf
xor
out
cli
aad
push
adc
repz
mov
sbb
mov
mov
addr16
arpl
lahf
fld
jo
lahf
loop
adc
and
mov
xchg
pusha
sbb
fnstcw
int3
mov
ljmp
push
les
push
mov
movl
xchg
outsb
xor
pusha
cld
cmp
jmp
cli
call
in
inc
push
push
std
xchg
in
sti
sub
test
mov
sub
sub
outsl
ljmp
and
sub
sbb
mov
test
mov
les
scas
mov
push
pop
stos
std
xchg
cltd
aaa
fs
and
push
imul
fwait
les
mov
adc
mov
and
gs
push
and
mov
sub
cwtl
xor
into
push
mov
arpl
push
jecxz
or
xor
jnp
stos
jno
mov
lcall
loop
movsl
scas
add
xor
jo
stos
push
mov
cmp
dec
in
jle
jnp
into
in
in
inc
and
xchg
cmp
xlat
rorl
daa
rcr
mov
jle
mov
into
subl
ljmp
dec
pop
hlt
into
or
loop
push
jge
xor
cli
in
ljmp
mov
das
in
shl
sub
call
dec
push
lahf
cmc
iret
icebp
jmp
pushf
int
lods
adcb
neg
repz
inc
dec
movsb
mov
sti
imul
pushf
inc
or
add
dec
xchg
jecxz
mov
fsubr
rcl
fsub
popf
inc
fs
mov
ret
int3
add
sbb
adc
cmp
data16
jmp
aas
and
cmpsl
insl
push
and
jmp
sbb
subb
arpl
mov
cmp
std
in
jae
sub
sbb
repnz
out
stos
repnz
mov
and
bswap
aad
dec
sub
cltd
sub
dec
aas
in
jmp
leave
mov
sbb
repz
mov
jle
xchg
bound
inc
lcall
add
in
jne
cmp
dec
push
push
repnz
in
dec
adc
xchg
inc
jecxz
sbb
out
push
or
data16
addr16
add
jg
or
iret
dec
daa
and
push
cmc
imul
or
sbb
jp
pop
scas
cs
sub
xchg
out
mov
inc
push
adc
loop
adc
sub
jnp
icebp
pop
loopne
xchg
jns
jmp
fcmovnu
xchg
xor
cmp
pop
jg
xchg
aam
rep
lcall
pop
xchg
lret
or
lret
daa
push
add
fwait
lea
sarl
and
mov
fbstp
leave
adc
and
inc
or
cmc
adc
sbb
repnz
mov
cmpsb
jle
pop
push
adc
xchg
mov
mov
mov
jno
push
sbb
enter
pushf
nop
dec
add
jns
mov
aam
add
andl
scas
or
mull
jno
cwtl
loope
fwait
dec
jp
xchg
xchg
ljmp
and
outsl
ja
pop
mov
inc
add
dec
dec
divl
adc
into
sub
xchg
filds
popa
fld
fs
in
movaps
cmp
mov
fst
and
inc
int
pop
dec
mov
jo
jne
dec
cmp
incl
pop
scas
push
pop
cmp
in
outsl
int
mov
stos
fists
lahf
and
sub
lods
dec
jle
pushf
push
or
adc
xlat
loope
ficompl
mov
arpl
stos
pusha
daa
iret
adc
xor
inc
mov
add
cmp
mov
or
arpl
xor
mov
loopne
sbb
mov
cli
push
fwait
arpl
cld
imul
sbb
jnp
jns
mov
pop
pusha
subb
add
push
fcmovu
jp
mov
cli
iret
dec
iret
fwait
lcall
pop
ljmp
adc
mov
test
push
imul
mov
das
bound
lods
inc
addr16
jbe
pop
mov
inc
dec
add
ret
fldcw
sbb
push
and
mov
call
out
dec
pop
icebp
pop
cs
sbb
fisttps
cmp
adc
jne
sbb
cli
adc
and
sub
nop
rcl
ds
mov
ljmp
push
inc
mov
pop
adc
xchg
push
aad
pop
rcrb
mov
sbb
jmp
les
fidivs
lahf
leave
arpl
mov
add
push
mov
pop
frstor
jp
mov
daa
jb
xchg
btc
mov
in
andl
dec
cwtl
xchg
cmp
mov
sub
sbb
and
enter
xchg
mov
das
jle
leave
mov
pop
push
cbtw
filds
dec
lds
cmp
into
sub
cmp
jl
adc
clc
aad
cmp
sub
ror
out
pop
push
inc
jbe
mov
cs
fsubl
xchg
pop
ja
push
fiadds
jb
jbe
xsave
push
cmp
jno
mov
or
push
inc
not
jle
mov
sahf
aaa
inc
or
push
cmp
sbb
add
pop
outsb
xor
jmp
or
bound
cmp
lea
ljmp
in
add
lcall
cmp
jp
add
fldenv
inc
push
cmp
call
leave
iret
push
pusha
pand
add
jg
fucomip
ja
dec
pop
push
pop
jae
cmc
mov
sbb
sbb
scas
adc
shlb
xchg
xchg
adc
in
cmpsb
repz
push
and
cmp
fadds
mov
in
test
add
ror
push
xor
sti
xchg
xchg
sub
adc
insl
dec
sbb
inc
xlat
test
pusha
and
jmp
add
cmp
and
pop
in
cmp
sub
sub
ret
imul
in
cmp
adc
pop
xchg
mov
mov
test
stos
popa
adcb
aas
lea
sub
sti
dec
mov
lret
jae
sahf
nop
loope
scas
stc
loop,pt
pop
scas
repnz
mov
xchg
daa
test
xlat
push
push
mov
nop
sarb
inc
add
xor
adc
pop
sbb
test
loop
cmp
sub
pushf
pop
outsl
ljmp
mov
in
ja
jmp
insb
fs
sub
and
jl
cmp
adc
outsb
sbb
cld
daa
inc
or
xchg
push
push
xor
jp
clc
js
pusha
sub
add
mov
aad
stos
mov
cwtl
shlb
cmc
cmp
mov
pop
xor
sub
outsb
aas
cmp
push
imul
inc
xchg
xor
test
stos
cmp
or
jge
daa
xchg
fcmovu
jmp
mov
hlt
xlat
xor
xchg
adc
enter
jl
lods
sbb
and
dec
pop
mov
cmc
pop
divl
lods
xchg
popa
mov
mov
inc
pop
lcall
lods
push
outsl
inc
daa
js
scas
loope
mov
popf
and
aam
and
pop
aaa
mov
es
or
imul
adc
sub
push
adc
add
data16
cli
cmc
mov
push
sub
mov
sahf
scas
outsb
cmp
icebp
test
cmp
cmpsb
jae
sbb
jae
insb
ret
lcall
rcl
adc
in
mov
cld
std
les
iret
loop
xor
fisubl
in
ret
push
jns
inc
inc
enter
ja
pop
mov
fidivrs
pop
or
int3
out
cmc
div
in
push
cmp
mov
pushf
in
mov
xor
cwtl
shlb
mov
mov
inc
jg
pop
push
push
jns
popf
aam
sub
mov
cltd
push
mov
pop
or
or
cmp
push
add
mov
loope
rclb
dec
mov
xchg
xlat
cmc
cwtl
push
scas
sub
and
or
pop
test
fcomps
je
lods
je
jno
subb
mov
jle
inc
mov
fnsetpm(287
cli
sub
lret
inc
xchg
les
xlat
xor
in
adcb
mov
sbb
cmp
das
xor
mov
xor
sub
pop
rorb
mov
and
pop
adc
insb
outsl
push
push
xor
add
aas
mov
mov
insb
or
stos
ljmp
rcr
iret
outsb
popl
enter
and
adc
xchg
and
lods
pushf
mov
in
adc
cltd
repz
mov
out
mov
add
inc
pop
jge
dec
fisubrs
lock
aaa
sbb
pop
xor
push
ret
lcall
rcl
lret
notb
lahf
xor
outsb
cmp
push
fwait
jb
xor
jbe
and
add
jbe
mov
push
rclb
sbb
mov
or
jge
aas
cmp
lahf
cvtps2pd
loopne
loope
xchg
out
pushw
cmp
mov
pop
int3
insl
in
movsl
stc
jge
xchg
dec
pushf
jns
subl
in
psllw
test
daa
mov
aaa
mov
in
xor
xchg
inc
and
push
imul
xlat
out
test
xchg
out
pop
inc
mov
cmpl
stos
addl
inc
or
mov
leave
and
or
push
mov
push
inc
dec
and
outsb
mov
imul
test
iret
je
inc
pop
jecxz
mov
mov
jle
scas
pop
pop
outsl
leave
lods
inc
mov
in
or
push
and
outsl
fcomps
sbb
or
test
mov
aad
shll
push
adc
mov
enter
sub
mov
gs
or
cli
sbb
popa
cmp
shlb
jae
lds
mov
sub
inc
jb
sub
jns
xor
sahf
fsubr
jb
xor
scas
mov
cli
pop
sub
daa
or
or
nop
ror
inc
cmp
dec
pop
or
loope
sbb
mov
inc
ret
loope
clc
popl
pusha
fnstsw
sbb
jb
push
mov
mov
pop
dec
adc
adc
sti
or
cwtl
mov
cld
arpl
lods
mov
inc
xchg
mov
inc
mov
dec
push
mov
and
inc
sti
pop
pop
xor
and
mov
lea
dec
mov
insl
cmp
jle
jmp
xchg
mov
pop
add
lods
cwtl
jle
push
ror
mov
mov
adc
pop
adc
data16
mov
movsl
ja
or
push
outsb
lahf
ljmp
and
cmp
addr16
fcoml
xchg
and
popf
sub
std
cmp
push
shl
push
inc
xchg
stc
clc
mov
pusha
dec
shl
xchg
adc
dec
jmp
jno
adc
cmp
dec
xchg
cmc
inc
jmp
mov
inc
ds
sub
leave
lcall
or
push
loopne
cs
bound
rolb
pop
in
scas
jp
and
jecxz
adc
mov
jecxz
jns
in
jg
xchg
mov
sbb
ss
dec
mov
pop
sub
jno
fdivrl
mov
xchg
xchg
jno
pop
push
stos
adc
xchg
mov
dec
jo
jge
test
in
insl
push
shll
jmp
mov
leave
dec
mov
mov
lret
xlat
jp
out
cld
xchg
les
mov
cmpsb
js
sbb
lea
out
lcall
add
dec
jl
pop
add
mov
pop
or
cld
insb
jge
iret
outsb
int
bound
sub
jo
and
negb
ret
mov
into
pop
jno
repnz
sub
mov
fildl
inc
cmpsb
imul
in
mov
inc
jmp
test
push
add
test
jle
in
jae
lods
jg
pop
stos
fstps
dec
and
pop
rcl
xor
stos
mov
xor
lods
int3
out
xchg
or
push
dec
adc
xor
adcl
jae
in
mov
mov
shl
or
sbb
sbb
mov
scas
aad
or
mov
push
push
loop
out
or
add
xor
cmp
loop
ficompl
cs
sub
popa
adc
inc
and
mov
fcoml
and
in
jnp
inc
xchg
jecxz
mov
adc
clc
out
xchg
pusha
mov
dec
jle
sub
sbb
int3
mov
fisubrs
popa
dec
loopne
mov
mov
adc
pop
je
or
lcall
lcall
xlat
or
cmp
bound
rcrl
outsb
and
adc
push
in
jae
movaps
daa
mov
in
bnd
aaa
mov
xchg
mov
out
sub
sti
jnp
xor
jo
jmp
test
jge
clc
rcrb
shl
jo
push
mov
jns
pop
nop
push
cmp
insb
push
std
inc
mov
mov
addl
inc
movsl
cli
arpl
test
cltd
pop
xchg
sub
pop
test
mov
cli
inc
out
cmpsl
pop
pop
ror
mov
push
add
jno
das
push
inc
jo
jmp
sbb
popf
and
mov
cmpsl
leave
neg
andb
repnz
pop
out
jno
jp
or
outsb
fcomip
and
dec
test
and
ficompl
xchg
lods
les
hlt
and
dec
jge
mov
fdivrl
loop
adc
enter
mov
iret
dec
loop
insl
imul
js
mov
test
js
xor
repz
movsl
cs
std
das
repnz
add
jp
xor
dec
cmpsl
hlt
cmp
dec
fidivl
mov
and
pop
mov
fcmovb
or
xorb
pop
jp
int
add
pop
mov
fs
popa
lds
xor
pop
and
lock
sbb
fisubl
pop
cmp
mov
loopne
cmp
inc
and
push
dec
xor
inc
into
aam
pushf
push
push
and
int
test
rolb
add
pop
fsubrs
xchg
jl
nop
jecxz
inc
pusha
ja
sarb
mov
jo
movsb
inc
divl
mov
ds
clc
cmp
ljmp
push
outsb
mov
ret
jl
into
popf
add
add
mov
cmp
addr16
jns
xchg
pop
sahf
xchg
adc
jae
int3
cmp
dec
adc
rorl
testb
sbb
ja
sub
sbb
push
push
pop
inc
ja
dec
repnz
sti
iret
xor
test
xchg
loope
mov
sub
sbb
addb
push
bound
sbb
rcr
sbb
xor
inc
int
test
gs
lock
mov
jb
dec
out
pop
and
pop
dec
xchg
out
cwtl
clc
fistps
adc
dec
ds
rcrl
scas
xor
or
mov
push
into
int3
and
sbb
inc
bound
outsb
pusha
gs
arpl
cmp
sahf
shll
adc
jno
mov
pop
push
jb
out
pop
and
add
mov
or
pop
scas
cltd
cmp
xor
push
sbb
push
test
ds
jg
mov
sarb
cmpsb
inc
in
cli
xor
mov
adc
xchg
shrb
adc
mov
int3
mov
hlt
repnz
sub
and
pop
mov
iret
inc
daa
ret
xor
push
or
pop
mov
and
pop
cld
fisubrl
mov
scas
cmp
test
outsl
bound
in
fs
gs
mov
xchg
fisttpll
push
and
sbb
cli
or
xor
push
stos
imul
mov
pop
pop
cmc
cld
jbe
mov
imul
iret
push
push
je
cmp
cmp
sbbl
fstl
add
jns
insl
pushf
loop
lods
sub
scas
cmp
sbb
out
xor
repnz
xchg
push
pop
mov
push
mov
and
inc
dec
inc
sbb
popf
xchg
lds
out
pop
ret
int
add
pop
enter
test
mov
cmp
push
dec
jno
mov
cmpsl
repz
in
aad
xor
incb
lds
hlt
rclb
add
xor
dec
and
push
jnp
and
iret
jmp
popf
inc
xchg
dec
andl
inc
sti
sahf
dec
mov
inc
pusha
rol
mov
into
push
hlt
addr16
fwait
rolb
add
outsl
out
into
pop
add
fistl
xchg
pushf
test
sbb
loope
add
test
js
test
adc
mov
lds
dec
into
call
cs
push
push
scas
xor
jg
insl
in
lea
mov
and
lcall
xchg
inc
int
dec
jns
daa
arpl
mov
scas
fxch
cmp
in
lods
repnz
stos
mulb
adcb
stos
adc
and
dec
dec
push
loopne
loopne
mov
lea
mov
std
test
lods
bound
arpl
imul
movsb
ficomps
insl
or
clc
jns
out
test
mov
sbbb
icebp
sub
movsb
push
xor
jbe
xor
jl
and
push
fisttpl
xor
roll
xchg
inc
pop
add
add
jns
int3
sub
inc
pushf
pop
pop
addr16
inc
shr
cmpsl
and
sub
mov
push
pop
jns
and
cmp
pop
and
lods
scas
mov
mov
in
mov
mov
loop
xor
shrb
push
dec
ret
jae
mov
outsl
mov
dec
add
pop
das
xor
dec
inc
fnstenv
jbe
or
fistpll
stc
sbb
jp
divl
ret
cmp
movsb
ror
popa
fistl
pop
in
test
ret
test
cltd
test
or
add
cmp
int
mov
cwtl
mov
jae
orl
lods
scas
cmp
fs
out
aaa
add
mov
fwait
in
clc
mov
sti
dec
jbe
push
aas
lcall
arpl
repnz
fst
cmp
out
push
sub
into
xchg
mov
sbb
pop
or
push
rorl
call
inc
stos
xchg
jp
push
and
popf
sbb
cmp
sahf
push
jg
mov
sub
repnz
mov
stos
push
mov
cmpsb
cmp
cld
loope
adc
xchg
loop
aas
addr16
cmp
imul
pop
bound
stc
outsl
inc
arpl
adc
add
and
outsl
and
sbb
mov
or
sub
ds
cmp
xor
jbe
push
sbb
gs
or
add
dec
cld
inc
inc
pop
mov
dec
imul
sbb
pop
dec
push
repz
sbb
xor
in
aas
fbld
cmpsl
shll
push
xor
dec
and
push
dec
sahf
outsb
xor
roll
push
in
inc
jle
mov
inc
cmp
pusha
les
jp
mov
and
das
pop
xchg
psubsw
aas
mov
ret
push
jb
test
fstl
inc
out
int
inc
imul
lods
fldenv
jle
idivl
mov
push
xlat
mull
fs
sub
test
inc
dec
rclb
out
fwait
outsl
lret
sub
xchg
enter
inc
out
and
push
pop
pop
mov
adc
aaa
mov
mov
iret
in
not
sub
sub
test
popa
mov
das
aaa
mov
int3
cmp
adcb
pop
pop
pop
lret
jp
hlt
stos
fsubs
imul
popl
inc
mov
xor
or
mov
inc
out
sbb
mov
es
pop
das
push
jge
pop
lahf
xchg
rol
add
rolb
int
sub
mov
sbb
mov
lcall
pop
stc
jmp
jge
xor
fcompl
mov
sub
shl
push
mov
pop
outsl
push
cwtl
mov
cmpsb
xchg
xor
insl
loopne
mov
xchg
loop
and
ret
enter
fistl
das
imul
fld
icebp
imul
ljmp
or
or
addr16
lret
in
dec
cmc
lods
aam
orb
out
cmc
ret
outsl
mov
nop
arpl
jl
lock
in
lock
ret
bound
or
xlat
add
jb
xchg
in
xor
and
cwtl
outsb
xadd
mov
ror
and
and
in
in
popa
aaa
out
scas
jp
mov
inc
pusha
xor
mov
fdivrp
cs
dec
sti
adc
xchg
sub
sbb
pop
cmp
or
jl
adc
shlb
jbe
dec
mov
sbb
xchg
aaa
pop
xlat
jae
aad
movsl
insl
xchg
sar
jmp
cli
cwtl
pop
addb
int3
test
notl
call
pusha
jmp
stc
push
imul
jge
lcall
repnz
rclb
call
shll
and
xchg
popf
cmc
fdivr
cmp
cld
add
jnp
xchg
fistpl
mov
push
ret
sub
cmp
mov
cmp
and
pop
dec
icebp
mov
add
mov
sub
mov
lret
inc
imul
cmc
mov
jp
adc
jno
stos
ljmp
fisttpll
pop
jge
jp
inc
mov
mov
aam
hlt
push
jg
cld
jnp
adc
xchg
out
fwait
ret
push
outsb
int
dec
dec
fwait
cwtl
mov
incb
push
pop
ret
sbb
out
mov
stos
arpl
mov
cmp
aad
adc
or
cmp
inc
push
lcall
or
arpl
stos
fdivs
pop
in
jbe
rcl
pop
movsb
fmuls
cwtl
jbe
or
sbb
insb
bt
inc
rep
sub
imul
pop
hlt
cmp
scas
cmp
add
test
addb
cmpsl
in
pop
xchg
hlt
xchg
and
mov
sub
sub
popf
rolb
fsubrp
stc
or
arpl
addl
sbb
imul
cwtl
xor
jnp
das
int3
ljmp
sub
cmc
cmp
jno
pop
sub
xchg
and
lahf
jp
sbb
leave
stos
idiv
pop
push
cmp
outsb
movl
call
js
pusha
outsl
sbbb
pusha
inc
daa
mov
ja
adc
dec
outsb
cwtl
out
stc
into
adc
cmp
lret
test
jmp
xchg
mov
scas
lods
repz
jno
mov
pop
push
out
pop
movsb
mov
cli
add
fcompl
mov
das
lock
push
mov
or
mov
popf
loope
scas
aam
arpl
andl
xchg
mov
fcomps
dec
inc
cmc
mov
movsl
inc
jno
or
rclb
mov
sahf
imull
iret
test
dec
mov
add
fsub
cmp
mov
sarb
jmp
das
lret
out
jecxz
movsl
aas
imul
xor
dec
mov
and
or
and
ljmp
adc
mov
and
dec
inc
enter
hlt
adc
in
push
orb
negl
xchg
and
loopne
push
xchg
sti
test
cwtl
push
jns
lods
sbb
leave
mov
sarb
call
xor
aam
hlt
xor
sbb
fildl
aad
xchg
sub
and
enter
mov
in
mov
das
mov
outsb
pop
dec
jp
pop
sub
push
adc
sub
dec
or
jnp
mov
add
mov
aam
push
mov
xor
xlat
dec
mov
mov
lock
xchg
scas
call
push
xor
fwait
or
das
jbe
or
arpl
xchg
sar
adc
stc
lods
mov
mov
adc
movsb
jns
cmp
xor
ja
sbb
in
mov
and
stos
mov
outsb
fwait
inc
push
cmp
xchg
nop
add
sti
mov
sub
xchg
aad
dec
and
or
cli
rcrb
in
push
jg
jb
sbb
int
add
mov
and
jbe
add
out
ljmp
jns
hlt
mov
call
fdivl
adc
sbb
xorl
int
loop
imul
pop
adc
jmp
dec
lahf
inc
or
cltd
push
repz
dec
or
mov
dec
and
stos
rcrb
mov
cmp
idivb
push
es
inc
push
jmp
push
idivb
divl
mov
add
push
shrl
cmpsl
pusha
mov
sub
cltd
mov
cmp
pop
push
in
inc
push
stos
movsl
aad
and
cmp
push
pop
adc
test
push
adc
dec
loopne
cwtl
or
mov
ljmp
push
jecxz
pop
xchg
mov
and
fimull
scas
das
outsb
cltd
je
mov
insl
pop
cwtl
clc
mov
cmp
scas
pop
push
mov
insl
daa
js
sahf
sbbb
mov
sub
xchg
cmp
sub
aam
das
mov
or
and
mov
dec
cmp
add
or
xchg
push
xor
dec
imul
mov
fs
mov
rorl
int
mov
popf
and
insl
lods
cmpb
loopne
inc
in
xchg
sub
xor
and
dec
adc
push
push
lods
dec
fisttpll
or
pop
aaa
fmulp
popa
icebp
mov
push
sub
popf
sahf
es
push
push
adc
mov
or
lods
fstpt
jl
bound
jp
dec
loope
std
jbe
or
mov
inc
pusha
rcll
mov
dec
repz
aaa
or
push
mov
xor
and
mov
push
xchg
lds
popf
mov
jno
popa
add
inc
inc
lret
or
imul
pop
push
mov
je
mov
jl
notb
pop
pop
push
loop
xor
cmpb
dec
and
rorb
cmp
stc
cmp
adc
andl
xor
pop
test
arpl
or
mov
orb
push
adc
ss
movsl
cli
push
data16
jecxz
cmp
out
jmp
pmaddwd
int
fidivs
pop
lret
shll
ret
pop
aad
sub
adc
jmp
icebp
push
clc
movsl
jbe
data16
sub
ss
pop
lahf
leave
mov
xchg
cmp
inc
ret
gs
mov
aam
add
mov
dec
sub
sub
arpl
inc
scas
mov
fnsave
lahf
ss
pushf
das
out
dec
cltd
gs
xor
jg
push
stos
int3
xor
mov
movsl
aad
mov
xchg
dec
xchg
enter
lcall
mov
inc
addr16
xchg
cmp
mov
loop
cmp
dec
push
pusha
bound
std
and
inc
shl
out
loop
push
add
jl
cmpsl
mov
mov
sarl
mov
inc
sub
or
jg
ret
cmc
roll
arpl
lret
adc
jne
ret
stc
xchg
popf
aam
dec
jnp
push
dec
cld
xlat
bound
jo
cmp
aad
fs
iret
push
jge
fimuls
in
mov
push
sbb
scas
xor
arpl
sub
stc
inc
sub
add
or
xor
sbb
test
scas
bound
lret
fisubl
mov
inc
fiadds
mov
xchg
add
imul
movsb
mulb
jmp
mov
ret
aam
inc
xchg
xchg
test
hlt
lods
addr16
xor
stos
jmp
sbb
sub
push
inc
in
dec
cwtl
mov
mov
rcl
lods
mov
outsb
xchg
outsl
imul
ds
cmp
pop
jmp
sub
xor
pop
mov
adc
fdivrl
nop
jo
sub
jo
adc
pusha
insb
jo
adc
inc
pop
ja
cmp
adc
in
out
fs
mov
stc
jge
or
cld
adc
mov
cmp
inc
lahf
adc
mov
shlb
imul
push
rcrb
clc
in
movsb
or
or
xor
cmp
shll
cmp
movb
push
daa
je
lock
xchg
arpl
mov
mov
mov
test
add
fstps
pop
add
and
out
jno
pop
cmp
cmp
cmp
shlb
lahf
lret
pop
push
and
jnp
imul
test
or
mov
jp
clc
push
rdpmc
outsl
mov
fnstenv
mov
xlat
xor
push
and
rorl
nop
mov
sahf
sub
dec
push
lods
jo
clc
sub
popf
push
aaa
xor
sub
in
imul
js
dec
mov
pop
sbb
mulb
in
test
aas
push
mov
mov
js
std
bound
add
lret
arpl
jg
add
inc
mov
ljmp
push
scas
inc
adc
add
push
push
jg
fstps
pop
mov
mov
aas
ljmp
ret
enter
mov
jp
fdivl
inc
mov
or
out
out
rcr
ja
pop
rolb
add
call
push
jle
mov
int3
add
sahf
push
xchg
sbb
push
ljmp
fwait
push
pop
adc
inc
cld
lods
imul
jne
outsl
cmp
cmp
in
aaa
xchg
loopne
push
xor
inc
lret
js
xor
cmp
js
lock
rcrb
inc
sub
jp
addr16
lret
enter
fsubs
iret
or
lea
sbb
lcall
xchg
mov
pop
ss
rol
or
push
int3
adc
stc
mov
int
stos
imul
gs
pop
cltd
pop
outsb
cmp
rcrl
mov
xchg
mov
sub
gs
jns
xchg
push
push
sub
fcmovbe
and
cld
je
lret
das
jg
loope
loopne
roll
inc
mov
sbb
je
rorb
cs
int3
scas
and
out
insb
or
in
sub
push
fstpl
stc
mov
pusha
sarl
sub
adc
sbb
jo
inc
sti
ja
mov
insl
cmp
lock
adc
xor
icebp
movsb
sub
fcomip
cltd
test
ret
nop
aam
call
jo
fcomp
inc
pop
pop
inc
xchg
mov
ja
stc
inc
movl
sub
lret
sbb
mov
dec
jb,pn
or
push
insl
lock
paddusb
or
inc
sub
sbb
jno
xchg
mov
cmc
int
push
jno
loop
lahf
test
add
daa
mov
inc
mov
fisubrs
dec
movsb
jnp
xchg
jmp
and
xor
test
cld
inc
sbb
push
aas
pop
xlat
pop
sti
daa
iret
cmp
das
icebp
mov
sub
stos
mov
test
or
in
aam
clc
dec
idivl
xlat
pop
sbb
sub
out
push
jge
push
cmc
mov
xchg
mov
pop
pop
scas
adc
xchg
nop
pop
mov
and
cmp
or
dec
mov
mov
jo
out
pop
pop
sbb
mov
sbb
dec
fcmove
fwait
xchg
test
xchg
inc
shll
enter
dec
push
sbb
das
mov
xchg
cli
dec
mov
dec
movsl
mov
push
pusha
pop
adc
jle
jns
iret
bound
aad
call
sbb
lea
hlt
xor
fdivrs
pop
iret
lret
cmp
out
mov
mov
std
cmpsl
sub
add
rol
stos
shrb
xchg
pushf
insl
add
mov
aad
adc
imul
xchg
loopne
push
or
imul
xorl
sbb
enter
imul
rorl
outsl
out
mov
dec
movsl
push
sti
mov
sub
icebp
movsb
mov
into
sti
mov
cltd
mov
xor
pop
lahf
ja
mov
pushf
xchg
sub
data16
in
add
addr16
cld
mov
sub
push
push
enter
jne
hlt
mov
mov
cltd
in
fcoms
inc
data16
mov
dec
xchg
arpl
mov
jge
insl
push
mov
dec
xchg
rcr
dec
and
maskmovq
mull
test
iret
xorl
bound
push
lea
adc
gs
ljmp
inc
mov
out
xchg
aaa
ljmp
or
insl
mov
xchg
add
mov
sub
fisubrs
lds
cmpsl
in
fs
mov
out
jg
jmp
jmp
xor
dec
inc
rorb
mov
lret
imul
pop
test
sbb
xor
pop
and
repnz
mov
cmp
jle
leave
sub
push
xor
sti
gs
jecxz
es
fnstsw
imul
adc
lods
ljmp
inc
cs
and
sub
in
pop
sarb
inc
adc
lcall
pop
cld
mov
add
push
xor
adc
pushf
shlb
lock
and
inc
into
mov
imul
jno
sbb
push
ljmp
jae
clc
fiaddl
fistl
ficompl
mov
cs
fs
notb
push
int
aad
pop
adc
imul
lahf
lock
aas
mov
daa
cwtl
pop
lret
dec
test
mov
jbe
adc
jbe
cmp
fsub
es
xchg
inc
mov
mov
jle
mov
jnp
mov
push
popf
jp
test
sbb
insl
cmp
mov
cmp
xchg
inc
xchg
pop
push
lcall
leave
adc
pop
dec
xchg
imul
inc
mov
add
outsl
fidivrl
adc
xchg
test
pop
jno
testl
jp
fdivs
gs
push
test
mov
adc
xchg
push
fmuls
hlt
test
hlt
pop
das
sub
mov
xchg
aas
mov
fs
inc
lret
fcmovnbe
dec
mov
mov
outsb
std
insl
dec
ds
add
shl
mov
mov
jno
push
test
sbb
inc
aaa
mov
adc
adcb
jp
mov
and
cmpsb
dec
pop
lods
mov
and
add
lahf
jle
shlb
dec
jns
mov
enter
int
dec
mov
pop
add
sub
std
ret
loop
ret
ret
jle
int
add
repz
das
cmp
clc
adc
add
popf
dec
lret
dec
dec
or
jbe
xchg
or
sarl
cltd
clc
fildl
mov
mov
fs
lret
add
add
mov
mov
xchg
adc
fwait
lcall
cmp
std
in
xchg
sti
dec
sub
push
inc
pop
sub
inc
cmp
bt
push
xchg
pop
inc
xchg
ret
jno
add
jmp
inc
les
mov
sbb
mov
rcl
aam
cmp
outsb
mov
loope
mov
and
jb
mov
outsb
xchg
repnz
imul
xor
push
cltd
pop
enter
insl
loope
pop
cmp
fdivr
mov
jmp
add
es
or
mov
js
pop
inc
mov
lods
push
pusha
add
inc
div
sub
or
mov
imul
mov
push
hlt
dec
xor
xor
cmp
out
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
add
call
dec
loope
hlt
sbb
fidivrs
and
pop
jo
sub
add
jmp
shll
std
repnz
sar
lahf
in
mov
je
add
push
call
insl
mov
sbb
je
pop
pop
pop
mov
mov
sub
add
xor
adc
add
or
mov
jp
push
and
pop
sub
push
jmp
in
imul
xchg
popf
adc
loopne
pop
aas
or
pop
dec
call
or
push
das
cmp
push
jnp
pop
pop
sub
jne
mov
jmp
in
and
pushf
movsl
mov
jmp
xor
shlb
int3
adc
push
or
loope
loope
mov
mov
loope
cmp
je
adc
jno
xor
dec
cld
adc
icebp
lock
outsl
mov
aam
jmp
shr
jno
daa
jo
arpl
push
pop
les
das
push
outsb
xor
mov
lock
xor
aam
xor
dec
and
sbb
mov
insl
andb
cmc
pop
out
mov
push
dec
jne
push
repnz
mov
push
paddsb
pandn
js
loope
pop
jecxz
loope
out
mov
adc
cmp
mov
ds
js
sub
jnp
xor
or
lock
mov
add
xorl
sub
fcmovb
mov
mov
ds
movsb
mov
jecxz
mov
sbb
ret
rcr
in
fnstcw
mov
sub
fidivrs
push
lret
cltd
inc
pusha
mov
imull
ret
insl
xchg
daa
push
inc
mov
pop
rol
cli
sub
or
mov
and
xor
jle
loope
out
call
loopne
mov
push
fdiv
dec
mov
test
xor
roll
fisttpl
cmpsl
out
pop
pop
xchg
xchg
sar
nop
adc
or
dec
adc
scas
bswap
mov
sub
pop
enter
aas
loope
sub
adc
popf
xchg
push
gs
dec
cmp
pop
and
rol
stc
ja
mov
insb
dec
gs
es
andps
push
push
es
xor
add
js
in
cmp
pop
cmc
dec
sbb
sbb
dec
gs
inc
jb
cli
adc
xchg
dec
inc
xor
dec
mov
decb
mov
fs
daa
lret
push
repz
mov
inc
mov
scas
rcrb
mov
push
push
gs
dec
hlt
gs
enter
jnp
jp
insb
mov
push
and
aas
dec
mov
repnz
cmp
sbb
out
mov
and
lret
ret
xchg
sbb
add
mov
out
das
mov
ss
cwtl
mov
addl
xchg
mov
mov
jecxz
in
loopne
xchg
imul
mov
cmpsb
xchg
pop
movsb
ret
inc
shrl
insl
mov
repz
out
lock
insb
mov
pop
pop
aaa
stos
pop
xchg
ja
cmp
ja
cmp
insb
and
test
cs
xor
push
outsl
mov
inc
pop
cmp
cmpsb
xor
xchg
add
mov
sbb
jo
rolb
xchg
repz
dec
nop
icebp
push
dec
leave
add
pop
cmp
mov
jg
xor
pop
cmp
stos
pop
cmp
stos
push
fdivrl
jno
in
aas
jg
and
xor
stos
pop
movsb
or
fcmovnbe
mov
pop
out
shr
outsb
stos
and
stc
pop
xlat
pop
mov
cmp
loope
fwait
pop
cmp
stos
dec
cmp
stos
outsb
mov
stos
pop
cmp
stos
push
cmp
cmp
xor
arpl
stos
pop
and
inc
pop
cmp
pop
adc
pop
cmp
stos
outsb
mov
test
pop
aaa
and
stos
stos
pop
jle
push
jno
mov
pop
cmp
inc
pop
cmp
or
cmp
and
int3
test
jle
mov
sub
mov
pop
cld
std
stos
outsb
mov
mov
pop
outsb
xchg
mov
mov
rorl
loop
push
mov
das
ss
stos
jo
lods
ja
out
mov
out
enter
mov
mov
stos
pop
cmp
and
mov
pop
movl
stos
outsb
cld
mov
pop
cld
std
stos
outsb
mov
stos
stos
pop
mov
xchg
ss
and
mov
pop
jle
push
jno
cld
stos
pop
cmp
sahf
imul
push
and
loope
sub
push
xchg
push
cmp
stos
test
stos
pop
cmp
stos
pop
int3
xchg
cmpsl
jle
fwait
andl
cmp
gs
mov
jge
inc
jp
imul
xchg
xlat
imul
std
lahf
adc
xchg
inc
outsb
enter
stos
addr16
or
jo
jl
xlat
or
lods
xlat
popa
mov
sarl
mov
je
mov
pop
mov
adc
xchg
inc
lcall
jge
dec
add
pop
outsl
mov
pop
cmp
imul
adc
xchg
inc
sarl
addr16
pop
cmp
imul
adc
xchg
inc
sarl
xor
popa
iret
mov
stos
pop
clc
in
mov
jg
jge
pop
fsubrs
xlat
popa
mov
sarl
mov
je
mov
pop
mov
jg,pn
rorl
or
jle
jg
jmp
popa
iret
into
add
pop
test
ljmp
inc
and
cmp
xlat
pop
ss
call
leave
xchg
sbb
inc
pop
cmp
incl
loope
cmp
stos
pop
cmp
stos
pop
sub
mov
push
stos
pop
xchg
sub
xchg
cmp
cmp
and
test
dec
push
mov
and
cld
cmp
jecxz
cmp
and
cmp
jecxz
cmp
stos
adc
push
rcll
je
pop
cmp
and
cmp
stos
pushf
scas
pop
push
cwtl
out
sti
adc
mov
fcmovbe
sti
enter
outsb
aam
outsl
adc
xor
cmpsl
mov
or
and
add
ud0
mov
pop
js
rcl
loope
test
out
outsl
inc
xchg
scas
xchg
int
add
mov
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
mov
pop
push
jnp
pop
cmp
stos
pop
cmp
stos
pop
xor
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
push
jg
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
stos
pop
cmp
and
cmc
inc
enter
cmpsl
das
xchg
cmp
add
add
lock
shl
and
insb
lds
sub
xchg
lcall
inc
ret
cmp
or
adc
dec
xor
inc
inc
add
addr16
nop
cmp
inc
fildll
fstp
cmp
out
xor
mov
add
loope
mov
lods
mov
push
add
rcrb
cmp
add
or
mov
std
push
pusha
aad
push
cmp
ljmp
test
sbb
mov
inc
leave
pop
xor
cltd
cwtl
sub
je
loopne
sub
shr
rorl
jns
loop
push
mov
lea
stc
xor
push
ds
sub
ret
jecxz
adcb
pushl
movsl
fcomps
inc
inc
jge
push
mov
aad
xchg
add
nop
enter
mov
or
jl
mov
add
fdivp
adc
push
xchg
mov
add
cwtl
rol
rclb
cld
add
push
jl
pushf
cmp
stos
mov
sub
popf
jle
test
das
in
outsb
push
rorb
or
jg
shl
xor
insb
xchg
pop
cmpsl
pop
add
mov
ss
inc
decl
mov
insl
sub
enter
cltd
sbb
int
push
adc
sub
jp
frstor
jge
mov
adc
insb
push
inc
xchg
sbb
dec
out
mov
pusha
mov
repz
rolb
mov
pusha
push
dec
sub
movsb
push
fimuls
mov
rcll
pusha
push
andb
jnp
push
or
pushf
or
push
sub
xchg
ljmp
or
pop
dec
push
scas
fwait
pop
cmp
or
mov
stc
dec
jl
add
push
mov
aaa
or
add
pop
insb
popf
mov
xchg
adc
sbbb
shrl
loop
dec
sbb
jbe
xor
popf
lea
jp
sbb
push
xchg
scas
mov
inc
cmp
aad
test
in
cmpsl
pop
out
out
int
daa
sbb
xor
bound
mov
popa
fld
popa
mov
outsl
dec
mov
sbb
mov
dec
idivl
push
mov
in
pop
popf
xchg
movsb
xchg
adc
lods
mov
pop
sbb
xchg
inc
dec
mov
faddl
add
test
xor
rcrl
xor
or
cmp
pop
pop
cmp
inc
popa
or
sbb
mov
mov
int
adc
pop
out
push
add
add
add
or
add
adc
cld
push
add
cld
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
push
add
sti
push
add
cld
push
add
push
add
std
push
add
push
add
std
push
add
push
add
std
push
add
push
add
std
push
add
push
add
std
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
std
push
add
add
add
std
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
js
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
jle
test
mov
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
out
je
fbld
cmp
arpl
dec
mov
pop
pushf
and
dec
subl
pop
mov
pop
push
mov
rclb
dec
xchg
mov
mov
out
mov
outsl
in
and
in
push
sub
scas
test
lds
push
sti
pop
mov
outsb
jge
cmp
and
lods
or
jb
or
push
adc
shrb
mov
and
not
mov
push
mov
mov
lret
cltd
or
push
jo
dec
sbb
push
es
and
and
sub
adc
xchg
imul
jle
add
sbb
fiaddl
push
daa
lahf
jp
out
sbb
leave
test
fnsave
inc
jno
cld
in
addb
push
insl
mov
out
sub
cmpsl
mov
xchg
cmpsl
and
stc
pop
xchg
dec
xchg
add
push
jmp
test
outsb
pop
loope
int3
ss
pop
add
push
cmpsb
aad
mov
imul
mov
addb
push
into
mov
add
xchg
jge
lea
rorl
mov
mov
jnp
dec
add
and
fdiv
adc
xchg
idiv
icebp
or
pop
stc
lds
dec
dec
into
push
pop
addr16
push
fmul
rcrl
dec
repnz
xlat
mov
jle
sarl
and
pushf
pop
loope
xor
mov
lock
bound
lods
scas
xor
jo
inc
inc
stos
dec
imul
repz
mov
and
cmc
jmp
add
aas
sbb
jg
jmp
mov
psubq
nop
jmp
lods
xor
pop
jg
mov
sub
push
fcompl
xchg
sbb
push
stos
or
and
je
pop
cltd
xlat
push
push
stc
sub
xchg
mov
push
repnz
inc
outsl
push
and
push
inc
rol
movsb
bound
push
mov
push
sub
xor
fwait
or
data16
repz
mulb
pop
cmc
sbb
pop
enter
sub
jns
scas
fcoms
incb
aad
push
lret
mov
nop
sub
inc
xor
in
lock
es
fnstsw
and
imul
fbstp
mov
cld
push
loopne
lret
xchg
sub
mov
dec
push
sti
fs
push
mov
sarb
push
iret
lods
cs
leave
or
scas
ds
hlt
stos
add
jo
js
fnstcw
ret
nop
xchg
mov
and
andl
cmpsl
and
lods
jbe
add
in
das
xor
icebp
fsubrl
test
lds
xchg
push
xchg
dec
mov
sub
push
aad
push
cs
add
mov
push
cmp
jo
outsl
loopne
add
ljmp
dec
push
into
mov
movsl
push
imul
add
scas
fstpl
sbb
sub
inc
cmp
jbe
or
repnz
sahf
movsb
fidivs
add
push
mov
daa
pop
push
xlat
cld
jmp
push
cmp
inc
fcomp
insl
sbb
cmc
pop
sub
lahf
shlb
add
add
jo
fwait
jae
sarl
sahf
cmp
mov
mov
aam
lods
fwait
inc
inc
lret
stc
fimuls
ljmp
inc
pop
mov
sbb
add
cs
add
jae
lea
sub
movsb
push
jne
lcall
icebp
jb
lret
or
inc
shll
jae
sub
cmp
mov
aaa
rcrb
insl
dec
jbe
scas
push
outsl
xchg
loope
fwait
in
push
dec
aam
push
mov
mov
je
mov
lds
cmpsb
aam
ret
stc
jae
cmc
jmp
rcrl
adc
mov
push
sub
inc
movb
sbb
jmp
inc
mov
dec
sub
ret
push
cmpsl
arpl
fisubrl
fistl
addr16
std
fnstenv
dec
add
cmp
cmp
in
les
stos
push
adc
in
and
xchg
xor
inc
push
mov
jns
in
mov
xor
add
std
push
dec
fwait
outsb
stos
sbb
push
cmp
xlat
je
pop
mov
jle
inc
outsl
dec
insb
pop
sbb
pusha
and
add
into
sbb
sbb
into
jno
call
adc
jl
jne
xor
and
mov
cli
push
xor
cmp
lods
mov
pop
xchg
pushf
mov
or
jo
jge
cmc
push
loope
test
out
cltd
out
cld
mov
cmp
pop
loopne
mov
jae
mov
adc
xor
rcrl
pop
add
repnz
shrb
sbb
mov
pop
push
fs
frstor
and
adc
cmp
fildll
cltd
sbb
add
cmpsb
cmp
push
sub
mov
movsb
shll
stos
in
jl
or
into
cmp
outsl
imul
add
dec
add
push
ljmp
jg
mov
icebp
xlat
jp
int
dec
sbb
lret
gs
adc
sbb
mov
loope
call
icebp
lods
adc
push
stos
pop
fcmovu
test
scas
add
jle
inc
outsb
push
insl
sub
rcll
jle
out
mov
sub
adc
inc
inc
inc
sbb
sbb
sbb
dec
cmp
outsl
inc
xchg
jo
inc
xorb
stos
scas
push
jae
adc
mov
mov
in
push
jg
sub
aas
xlat
cli
jecxz
pop
movl
pop
mov
mov
int
pushf
xor
dec
das
andl
scas
lret
cmc
dec
cmp
iret
push
lods
nop
and
xchg
xchg
ljmp
pusha
mov
fwait
stc
fidivrs
push
sahf
scas
lcall
mov
mov
paddsw
ret
inc
jo
add
int3
clc
addr16
jnp
aad
fisttps
jmp
push
and
xor
enter
xchg
sahf
dec
in
push
pop
or
xorl
add
push
mov
xchg
or
sahf
mov
mov
popf
add
sub
divb
jbe
lea
testb
sub
je
ljmp
fisubs
xchg
inc
mov
sbb
add
shr
cmp
jb
lea
mov
rcr
adc
sbb
pop
rcrl
xor
or
pop
jl
xor
mov
cmp
test
jl
sbb
loope
add
sahf
mov
sub
xor
sub
jecxz
adc
cmp
sbb
imulb
sbb
mov
dec
pop
push
or
xlat
outsb
test
stos
nop
sbbb
and
xchg
mov
paddsb
fwait
mov
adc
nopl
inc
scas
mov
fwait
lcall
stos
jp
cmp
out
push
loopne
dec
inc
dec
inc
repnz
loopne
lds
ljmp
pusha
xchg
jae
and
adc
or
mov
cmp
bound
insb
ret
and
and
lea
inc
dec
inc
push
push
dec
jae
popa
sub
out
aam
lret
pop
sti
je
dec
mov
out
mov
inc
pop
and
in
push
out
inc
and
or
pop
dec
aad
insb
jns
sbb
popa
iret
cmp
mov
and
pop
jb
scas
mov
fstps
pop
pop
xor
jge
lods
pop
loop
testb
fwait
push
fnstsw
cmp
xor
push
outsb
mov
sub
adc
iret
movsl
mov
sub
dec
insb
jno
je
aam
iret
lahf
inc
enter
inc
mov
inc
xchg
movsb
push
nop
pop
sbbb
pop
mov
stos
test
mov
cmp
shlb
fldt
or
add
mov
fsubrs
or
ret
mov
mov
imul
std
jecxz
popa
icebp
jmp
rorb
pop
mov
cmp
insl
into
jno
test
cld
or
out
adc
sub
push
aaa
sub
inc
insb
loop
je
mov
mov
push
test
cmp
mov
cs
imul
cmpl
pop
leave
jl
ret
sbb
push
dec
mov
sti
dec
adc
je
inc
repnz
loopne
xchg
mov
sarl
scas
stos
sahf
mov
cmpsb
sbb
mov
movsl
pop
push
pop
pop
dec
mov
das
adc
fnstsw
stos
mov
adc
les
js
jo,pn
in
sbb
fs
xchg
aad
insb
in
mov
mov
xchg
dec
popa
jnp
test
addr16
ficoms
adc
notb
nop
sahf
push
sbb
addr16
call
stos
std
stos
repz
xor
adc
push
inc
push
scas
arpl
cmp
adc
inc
mov
imul
out
loopne
out
pop
xchg
sub
pusha
push
icebp
and
cmpsb
push
out
pop
icebp
lahf
xchg
dec
pusha
dec
lock
dec
push
pop
fsubrl
cltd
mov
xor
xor
jo
movsb
pop
sti
imul
out
inc
cltd
xchg
jbe
rcl
mov
test
jns
call
stc
faddp
jg
jne
sbb
xchg
aam
push
rorb
scas
mov
pop
sti
mov
xorl
jg
pop
push
push
adc
cmp
mov
cmp
and
imul
sub
jge
stc
jl
imul
insl
mov
push
fimuls
mov
stc
inc
xor
out
stc
xchg
sarb
sti
icebp
out
cmpsb
jle
xchg
sbb
cmp
mov
stc
cmp
fs
lret
into
xor
mov
fstpt
mov
fldcw
push
mov
mov
and
mov
lods
pop
mov
imul
xlat
aas
enter
mov
ret
push
cmp
sub
test
stos
mov
sti
jbe
dec
lock
jnp
pop
xor
push
jo
xor
sbb
data16
in
xchg
mov
iret
fldcw
stos
dec
mov
les
out
cmpl
sbb
fwait
decl
mov
pop
inc
inc
push
in
push
adc
inc
movsb
xor
inc
jno
jecxz
and
jbe
cltd
cmp
dec
cmpsl
loope
cmpsb
and
dec
lcall
mov
mov
movb
sub
test
lret
xchg
and
jecxz
sub
shlw
or
and
cs
cmp
ds
sub
sarl
push
mov
xlat
sbb
scas
andb
adcb
xchg
or
cmp
add
cwtl
loopne
fisttps
push
into
ds
aas
in
fidivrl
outsl
xchg
add
jns
pop
jmp
inc
push
ss
lcall
sub
loop
test
test
sbb
adc
rcll
outsb
arpl
adc
stos
ljmp
mov
shl
and
into
clc
or
xor
xor
in
xor
cmp
pop
arpl
sbb
add
aas
stos
dec
repnz
inc
mov
in
sbb
adc
fs
movsl
pushf
in
adc
rorl
loope
cmp
cmpsl
jge
sbb
fnstenv
cwtl
sub
aad
cld
push
dec
ret
scas
repz
data16
dec
inc
and
cmc
cmp
repnz
and
shrl
popa
mov
add
movsl
shll
mov
adc
lods
scas
fwait
repz
insl
push
mov
ret
sub
fbld
loopne
lcall
pop
mov
mov
mov
sti
sub
in
outsl
daa
mov
sbb
stos
clc
jo
repz
inc
push
push
jmp
in
jnp,pt
adc
inc
in
das
test
pop
mov
inc
add
jnp
test
in
inc
mov
push
jb
cmp
or
xchg
xor
jbe
insb
int
mov
push
fsubl
movsw
mov
movsl
or
lea
inc
std
sbb
dec
shr
push
movsb
das
adc
and
push
cmpsl
into
sub
cmc
popl
hlt
call
sbb
scas
and
add
inc
add
add
pop
popf
sbb
aaa
nop
fwait
movsl
jle
repz
xor
mov
stos
xor
inc
jecxz
mov
into
aad
out
gs
pop
cmpsl
jecxz
fsubr
lcall
cmpsl
add
cmc
stos
pop
fisubrs
mull
aaa
cmc
ds
aam
movsb
mov
mov
fs
push
stos
out
pop
push
inc
add
mov
dec
inc
subb
xchg
push
or
or
fwait
lds
iret
mov
insb
push
xchg
mov
add
cmp
xor
out
inc
mov
push
xchg
lods
pusha
enter
xor
pop
push
movsb
sbb
xor
data16
and
xchg
shlb
aad
or
xor
or
test
imul
cmp
mov
fsub
mov
mov
pop
mov
and
jp
mov
mov
pop
adc
pop
fdivs
jle
pop
fimuls
or
fld
mov
popa
ds
lret
cmpsb
ss
fwait
lods
xchg
fsts
in
rol
xchg
sub
cmc
rolb
into
cltd
or
jge
adc
jp
cmp
fstps
cmpsb
lret
add
sub
sub
or
decl
cli
pop
scas
push
or
add
movsl
mov
mov
shrl
jmp
sub
inc
or
sarb
jne
xor
xchg
ficomps
sbb
pushf
mov
imull
xchg
scas
repnz
xor
dec
out
lods
fiaddl
sahf
into
aad
add
sub
hlt
popf
dec
arpl
vmwrite
int3
mov
jl
jg
filds
fnsave
add
jnp
push
sbbb
mulb
sbb
sbb
mov
mov
aas
pop
xchg
mov
imul
xchg
cld
jae
xor
mov
push
cwtl
nop
call
inc
jno
push
adc
shl
call
jae
adcl
repz
pop
or
mov
scas
or
pop
and
push
jne
cmp
popa
fisubrs
mov
mov
cmpl
pop
in
jbe
out
pop
jns
xor
and
inc
cmpsl
push
xchg
xor
fisubl
lds
sbb
jo
adc
mov
xlat
lods
push
xchg
std
les
xchg
lock
xchg
incb
arpl
insl
stc
insb
push
cmp
dec
push
xor
jg
cmp
push
lahf
adc
loop
or
int
aad
rorl
lea
add
fstl
cmc
in
stc
lods
loop
icebp
sub
cmp
push
inc
add
cs
and
cmp
mov
loop
jl
cmp
popa
out
pop
push
inc
xor
pop
push
mov
or
mov
sarb
fstps
test
mov
sub
mov
jae
pop
paddw
push
out
xchg
mov
lahf
lret
push
push
inc
and
jne
movsl
or
inc
adcl
iret
js
je
inc
das
push
insl
data16
adc
and
and
mov
adc
cmc
or
push
cmp
mov
js
inc
hlt
sub
cmc
add
arpl
pop
mov
scas
out
push
cmpsb
sbb
dec
pop
add
mov
cmpsl
mov
mov
jmp
jns
lock
sbb
push
movsl
jle
mov
dec
push
cli
testl
loopne
push
dec
and
out
jg
nop
xchg
dec
ds
cmp
xlat
push
in
cmp
lcall
cmp
jge
mov
and
pop
ljmp
sti
jg
cmp
mov
aas
repnz
cmp
push
insb
in
lret
testl
dec
or
inc
not
sub
setbe
jl
iret
stos
xchg
enter
mov
adc
test
cmp
jne
jmp
jge
mov
rcll
movsb
movsb
mov
mov
je
xchg
ret
and
jbe
lock
aad
adc
imul
in
ja
fwait
push
cmpsb
xor
fisubrs
shll
mov
cmp
pop
lahf
fs
cmp
pop
dec
sbb
into
inc
fs
sti
inc
add
scas
test
push
jp
push
mov
push
lret
or
scas
sbb
ret
fsub
pushf
popa
inc
xchg
jb
push
das
sub
lea
push
cmp
cmp
mov
mov
inc
mov
jae
push
adc
es
mov
push
sub
jno
push
mov
ds
stc
bound
push
filds
ja,pn
cmc
sbbb
fs
lock
and
pop
jno
and
add
cmp
bound
pcmpeqb
fdivrs
mov
in
sahf
in
popf
out
push
adc
sbbb
negb
clc
push
sbb
mov
dec
insl
ret
lret
loop
call
into
out
cmp
loop
mov
shrb
jno
xlat
and
lods
push
test
dec
push
push
add
dec
faddp
ja
movsb
cwtl
xchg
push
jle
mov
sarb
xchg
mov
add
dec
stc
pop
out
iret
pop
sub
fmuls
imul
lret
mov
lds
fisubrs
and
xor
test
sbb
push
dec
xor
pop
scas
sar
ljmp
mov
push
shl
push
and
xchg
adc
and
cld
adc
lds
xor
adc
adc
aad
pop
mov
in
pop
xchg
sbb
stc
inc
mov
rolb
pop
inc
adc
mov
stos
mov
pushf
icebp
pop
mov
cmp
aam
jne
mov
lret
mov
inc
mov
push
mov
je
es
enter
shll
in
clc
arpl
add
orb
cmp
pop
xchg
mov
push
aad
push
pop
mov
xlat
andl
push
dec
aam
cmp
int
orl
mov
jp
js
cs
push
cmp
insl
dec
dec
xorb
outsb
add
fdivrs
test
into
fistps
pop
call
xor
sbb
and
pop
jne
pop
inc
dec
xchg
adc
jne
popa
mov
push
dec
sbb
movsl
and
ficoml
xchg
xor
loop
or
out
sbb
pop
xor
ds
cmpsb
add
enter
out
dec
xor
das
icebp
sbb
dec
imul
pop
mov
lret
pop
jae
cmp
int3
or
pop
push
xchg
xchg
cmp
aam
icebp
push
fcomps
clc
jbe
sub
shlb
xchg
ret
out
pop
cltd
test
sub
cmp
outsl
subb
fisttpl
hlt
add
or
fimuls
adc
scas
mov
pop
push
sti
fbstp
data16
xchg
jns
andb
push
test
jle
hlt
movb
scas
popl
adc
cli
call
lock
inc
and
jb
ret
pop
bound
test
add
outsb
pusha
lock
or
into
push
rclb
pop
sub
data16
adcl
loope
jecxz
mov
sbb
in
and
cli
cmp
dec
insl
les
adc
mov
mov
xchg
enter
in
adc
push
rclw
xor
fs
inc
aam
lcall
enter
aaa
repz
lret
mov
in
paddq
xor
sbbl
into
sub
mov
dec
adc
stc
cmp
add
cwtl
subb
and
cmp
out
subl
iret
shl
jae
mov
fstl
lea
push
test
stc
shll
test
xchg
xor
addl
or
inc
mulb
mov
out
sub
mov
std
fcomps
in
inc
idiv
cmpsl
jae
cmpl
popf
clc
loopnew
lods
adc
sbbl
and
mov
outsb
scas
cmp
jo
rcr
and
movsb
or
and
rorl
xchg
xchg
mov
pop
into
sub
pusha
xchg
out
mov
inc
aaa
fwait
mov
push
mov
dec
lret
jmp
repnz
aam
cmp
daa
stc
in
jae
fsubrl
in
inc
push
inc
mov
cs
xchg
mov
lea
imul
stos
sbb
push
add
stos
mov
push
add
add
inc
in
adc
cmpl
cld
call
mov
aas
jae
ret
aaa
ret
cmpsb
cmp
rclb
loopne
xor
pop
insl
sbb
in
mov
jle
ja
mov
add
xabort
jns
pushf
and
aad
mov
dec
or
sbb
mov
mov
mov
je
insl
cld
sbb
xchg
xchg
adc
push
push
dec
xchg
dec
sub
jmp
outsb
ljmp
cltd
sarb
cli
pop
repz
xchg
aaa
mov
mov
dec
sarl
stos
xchg
test
cwtl
adc
ficoms
test
xor
clc
rcll
xchg
mov
push
pop
mov
sub
xor
or
into
sub
or
jp
mov
test
cmp
lock
jl
fisttpl
ret
pop
loopne
jl
ja
or
xchg
jae
cmpsl
daa
inc
int
bound
jnp,pt
out
jp
fimull
pusha
and
imul
jbe
or
mov
jno
inc
iret
jle
mov
lods
sub
test
jp
add
fdivr
decl
mov
push
fs
push
cmp
xor
es
xchg
mov
adc
push
lret
mov
xchg
push
add
hlt
sbb
dec
fsubrl
mov
icebp
js
lods
adc
pop
pop
and
stc
adc
dec
xchg
sub
dec
ret
mov
or
ds
adc
movsb
jg
dec
fdivl
ja
ss
or
lds
leave
adc
adcl
das
loop
pop
popa
pop
clc
push
cmp
sarl
jno
movl
test
data16
jg
hlt
xchg
movsl
mov
dec
cmpsl
sbb
push
jg
mov
fcoms
iret
xor
adc
pop
outsl
and
fidivl
pop
ds
inc
lds
push
and
and
enter
aam
inc
hlt
mov
add
xchg
push
mov
outsb
push
out
mov
pop
popa
xor
push
lret
mov
insl
pushf
pop
fwait
imul
in
xchg
push
xor
add
insb
sbb
or
scas
je
push
sub
adcl
cwtl
mov
mov
xchg
mov
or
xor
ljmp
or
pop
mov
sbb
xchg
pop
or
sbb
pop
imul
jb
lock
scas
shr
lock
fndisi(8087
sbb
das
data16
or
rclb
addb
sbb
gs
push
cmpsl
pop
ficompl
xor
pop
cmc
mov
pop
mov
cmp
or
fdivrs
mov
push
lea
test
cmp
lahf
xor
sbb
ja
out
jge
test
push
jno
cmp
push
popl
xchg
adc
add
xor
fistps
enter
cld
push
ss
pop
outsb
or
xor
lret
bound
jne
mov
cmpsl
shll
xchg
movsl
outsl
sub
jle
popf
cwtl
insl
cmpsl
aaa
sti
jl
push
mov
pop
push
movsb
xchg
popf
push
and
stc
loop
mov
cmp
jbe
adc
adc
mov
inc
fmuls
pop
sub
push
sbb
das
leave
xchg
test
js
sbb
and
lret
fwait
out
or
xor
shlb
call
out
xchg
add
sub
out
sbb
jp
shl
jmp
idivb
adc
addb
mov
clc
stos
adc
xor
pop
addb
xchg
cmp
mov
push
out
jo
test
mov
out
hlt
or
imul
push
mov
ror
cwtl
mov
xor
dec
jecxz
cmpsb
fldt
int
jmp
cwtl
pop
push
xor
rdtsc
pushf
pushf
push
xor
sbb
pop
imul
mov
pop
xor
test
add
data16
push
cmp
sub
iret
test
cmp
popf
dec
mov
inc
mov
inc
out
pusha
loop
fldl
les
add
dec
xchg
jno
pop
cli
cmc
cmovb
test
fcom
push
sub
in
mov
lret
push
or
outsl
xchg
mov
cmpsl
and
call
mov
mov
aad
scas
jbe
mov
xor
sbb
pop
pop
xlat
mov
stos
jmp
ljmp
jb
dec
fwait
xorl
jl
fnstenv
xorl
out
nop
data16
aaa
fstpl
cli
cmpsl
fdiv
fimull
dec
and
adc
push
mov
push
daa
mov
stc
jle
lcall
mov
sub
push
mov
sub
popf
icebp
and
push
jp
pop
mov
rolb
push
dec
fistl
mov
push
push
sub
sbb
fists
ret
stos
daa
mov
sub
jmp
shl
insb
das
mov
inc
inc
pop
push
mov
mov
les
shlb
les
in
mov
daa
mov
mov
fdivs
movsb
fcom
mov
push
push
out
push
adcl
sar
xchg
addr16
sbb
mov
lods
icebp
and
bound
or
fldcw
or
adc
add
loope
sub
repz
les
scas
iret
std
stos
push
lret
loop
dec
push
inc
push
add
add
xchg
fsubl
xchg
push
shll
sbb
in
jl
popf
mov
popf
and
cwtl
in
insb
cmp
inc
dec
loope
sub
scas
mov
sub
xrelease
popf
or
je,pt
scas
cmp
cmp
movsl
mov
jl
in
xor
mov
xchg
jp
insl
lcall
les
call
xlat
inc
mov
mov
mov
ja
rolb
mov
push
test
sbb
add
mov
insl
stos
nop
ja
hlt
mov
jecxz
mov
mov
mov
insl
xchg
mov
stos
mov
push
pusha
pop
mov
push
ljmp
push
lods
xlat
pop
ljmp
lock
rolb
test
mov
dec
pop
hlt
pop
rcll
in
in
out
pop
ret
mov
or
lret
stos
aam
loopne
icebp
mov
fdivp
mov
inc
fimuls
push
inc
out
adc
mov
decl
and
je
cli
in
mov
jge
pop
xor
cmpsl
outsl
cld
pop
cs
lds
push
sbb
xorb
pop
icebp
sbb
pop
jmp
inc
test
xor
movsb
cs
mov
data16
pop
inc
sti
dec
cmp
sti
icebp
and
shll
inc
add
sbb
test
xor
jo
or
cwtl
imul
enter
lea
popf
testb
jne
pop
sbb
pop
and
lahf
jns
sahf
mov
mov
loop
pmulhuw
xchg
pop
enter
sahf
jno
lcall
fs
fcoms
or
jb
push
mov
jge
inc
arpl
pop
jl
pop
push
adc
push
imul
fdivrs
repz
push
jo
mov
xchg
rorb
push
xorb
aam
inc
orl
loop
loop
and
pusha
fs
insl
and
imul
rorl
adc
and
mov
rolb
ret
cmp
ficomps
fstps
jne
dec
repnz
xor
fnstcw
mov
pop
sbb
mov
stos
daa
add
push
jbe
inc
or
shlb
enter
push
imul
sub
int
fwait
push
or
scas
mov
ret
pop
add
pusha
and
cs
push
xchg
mov
lods
cmpsb
and
cmp
shll
iret
aaa
push
sub
inc
push
loop
inc
cmpsb
scas
mov
inc
push
mov
adc
jl
sbb
pop
es
push
push
push
ljmp
shlb
inc
sbb
inc
lods
xchg
jns
fisubrs
xor
cmp
mov
sub
dec
jge
sbb
fcmovb
icebp
jbe
pop
fisttpl
push
jo
loop
sbb
jae
inc
repnz
jb
nop
push
pop
add
mov
ret
in
rcrb
fdivs
icebp
mov
mov
jnp
xlat
pop
mov
inc
ljmp
push
xchg
xor
popf
add
push
cld
aas
jns
arpl
lret
rorl
pop
cmp
aam
mov
or
and
cmp
std
cmp
iret
push
dec
rcll
add
xor
cmp
das
push
cmpsl
mov
pop
das
mov
jp
loopne
jno
cmp
outsl
pop
icebp
mov
inc
arpl
imul
loope
rcll
mov
sbb
pop
test
ret
ds
into
dec
inc
lock
cwtl
notl
shr
rol
aam
sti
mov
ret
add
mov
scas
add
popf
andl
fcoms
popa
data16
fidivl
mov
push
loopne
cwtl
jne
sbb
jb
lock
dec
loope
push
repz
or
mov
daa
movsl
sbb
jo
mov
cli
jg
cli
sub
inc
lcall
xlat
fldcw
pop
xchg
push
xlat
inc
test
fisubs
mulb
push
nop
mov
and
int
mov
mov
ss
xorb
ret
jae
push
push
adc
jno
cmp
ficoml
nop
fisttpll
iret
sub
leave
jne
jp
cmpsb
push
aas
mov
xor
xor
adc
js
popf
ret
fstl
cs
inc
adc
fadds
popf
nop
dec
inc
cltd
inc
test
fistl
test
sub
dec
loopne
enter
shll
mov
pop
test
icebp
jge
inc
and
mov
mov
jbe
inc
mov
adc
mov
pop
out
adc
call
or
mov
mov
sub
es
bound
aaa
jge
in
adc
mov
lret
mov
or
xor
jle
movsl
test
lock
add
ret
hlt
ja
xlat
dec
push
das
cmpsl
inc
jl
nopl
mov
cmp
pop
adc
adc
mov
insl
adc
jle
pusha
mov
or
xchg
xchg
mov
mov
push
data16
sti
scas
mov
and
aam
jae
fadd
xchg
pushf
adc
push
fsubrl
sbb
mov
imul
enter
loopne
pop
fidivl
in
call
dec
stos
pop
cmp
adc
xor
cmp
xchg
aam
enter
icebp
sbb
ja
cmp
mov
or
xchg
or
and
ret
mov
sahf
jns
jns
scas
xor
pop
and
mov
outsl
arpl
mov
xor
jns
mov
or
iret
test
inc
push
jecxz
testb
gs
jae
out
lods
ljmp
push
xchg
js
adc
popa
sbb
fisttps
lods
arpl
shll
xchg
push
adc
movl
rorb
dec
jb
aam
clc
push
int
pop
mov
adc
jl
divb
adcl
fisubrs
mov
sub
push
inc
push
fildll
cli
clc
sbb
in
insb
sbb
push
jecxz
mov
push
in
xchg
cmp
lret
pushf
pop
fldt
adc
loop
pop
add
lcall
inc
and
enter
sbb
movb
push
dec
mov
loope
bound
andl
ret
xchg
push
outsb
add
push
pusha
cmpsb
repnz
push
and
sbbl
ljmp
mov
icebp
insb
push
scas
sbbb
repz
arpl
cmp
jecxz
bnd
mov
mov
idiv
icebp
lock
add
mov
outsb
and
hlt
stos
dec
cmp
nop
mov
insb
add
or
jnp
fwait
mov
aas
in
add
icebp
js
std
jle
jle
outsl
inc
adcl
out
in
pop
lock
mov
sbb
andb
stos
jl
shrb
cwtl
jmp
loope
andl
push
push
out
inc
aaa
xor
and
movsl
xor
mov
outsl
mov
inc
fwait
or
sub
and
mov
or
sahf
sar
push
mov
add
inc
inc
mov
xchg
ret
mov
mov
repz
je
stos
and
ret
inc
hlt
scas
inc
inc
imul
mov
in
pusha
dec
jae
ja
out
aad
test
or
lods
pop
scas
adc
aad
ljmp
adc
pushf
stos
cmc
add
mov
mov
or
push
push
adc
jle
adc
mov
pop
xlat
loope
out
into
test
inc
ss
sub
adc
xor
or
ja
ficomps
shrb
outsb
mov
push
pop
outsb
into
push
mov
cld
xorl
aaa
fwait
push
fisubs
or
push
daa
leave
xchg
dec
jp
sbb
mov
test
ret
sar
cmpsb
mov
jge
js
pop
inc
push
lock
in
stos
jg
adc
je
add
shlb
gs
cmp
jo
add
shlb
xlat
add
dec
push
inc
mov
cmp
bnd
jne
push
mov
push
cmpsb
subl
pop
jae
pusha
js
pusha
mov
ror
sbb
jp
mov
adcb
dec
mov
dec
popl
setb
out
lds
stos
aad
xchg
xor
or
and
push
jp
push
into
daa
pop
or
inc
test
jne
popa
mov
lret
lcall
sbb
jg
mov
mov
addb
inc
fldt
sub
add
adc
stos
xchg
or
rcrb
scas
les
jg
outsb
jl
mov
adcb
add
in
popl
js
roll
xor
les
insl
jns
call
jle
cwtl
rorl
xchg
add
pop
xchg
in
lcall
insb
out
shlb
inc
pop
push
xor
inc
pop
mov
inc
stos
or
or
pop
mov
leave
push
cmp
sahf
out
rcrb
das
mov
mov
xchg
dec
inc
xor
aas
scas
aaa
addl
nop
mov
adc
mov
sbb
jne
out
test
rorl
imul
daa
das
push
pop
mov
fstl
mov
jo
xchg
cmp
mov
or
dec
out
cmp
scas
into
out
add
enter
xor
mov
lds
imul
mov
inc
je
jb
into
mov
jbe
incb
repz
hlt
mov
imul
mov
sub
sahf
or
xor
stos
popf
subl
lcall
bound
pusha
arpl
or
shlb
ss
jge
iret
mov
leave
and
sbb
xor
pusha
adc
fistps
popf
xchg
and
std
popa
jns
aad
bound
and
imul
addb
and
push
roll
sbb
adc
xchg
or
out
add
es
das
js
adc
inc
cmpsl
ljmp
xchg
lret
fst
mov
sbb
adc
adc
rcrl
add
mov
mov
add
fwait
push
lods
orl
pop
fdiv
push
xor
sbb
jno
fcmovne
xor
fidivrs
fistpl
mov
cmp
inc
sub
mov
mov
cli
xchg
dec
in
out
push
in
lea
jne
cmp
test
add
bound
push
sbb
popl
call
push
jl
cwtl
fsubr
push
cli
cmpsl
outsl
fs
sub
inc
decb
sti
jne
jbe
ss
jg
cmp
pop
mov
jge
js
scas
mov
orl
sarl
push
xor
or
or
popf
iret
int3
dec
ja
lret
jle
mov
aad
xchg
pop
leave
roll
ljmp
es
inc
fldcw
fstps
loopne
clc
dec
mov
push
push
into
xchg
inc
mov
movsl
sahf
push
dec
push
fsubs
xchg
in
pop
lcall
push
ret
gs
das
mov
xor
jmp
mov
sub
imul
stos
add
pop
sbb
stos
xchg
cmp
ja
dec
or
dec
cmp
mov
xchg
xchg
adc
loope
shl
push
dec
mov
mov
cwtl
sbb
faddp
test
mov
pop
mov
adc
imul
adc
push
xor
mov
sbb
jo
mov
int
sub
clc
push
les
cs
aad
and
sbb
push
scas
push
sbb
push
add
test
psubb
jl
pop
lock
mov
xlat
push
and
inc
js
inc
xor
xchg
sbb
fld
pop
rep
cmpb
pop
mov
jecxz
shl
test
repz
iret
pop
enter
insl
cltd
rol
or
repnz
dec
jmp
xchg
pushf
jae
arpl
lahf
arpl
mov
adc
loopne
mov
or
push
in
inc
jl
pop
test
xchg
lret
xchg
pop
jb
mov
stos
enter
adc
xor
enter
inc
jp
inc
or
sub
xchg
jno
je
xchg
sub
inc
ja
or
mov
mull
sub
adc
or
bts
dec
subl
xchg
test
dec
adc
sti
or
adc
cmp
cmp
xor
add
cmpsl
jg
dec
dec
in
or
int3
scas
adc
js
cwtl
test
mov
pushf
jno
cmp
shll
loopne
pop
jl
in
cmpsb
rclb
mov
pushf
lret
adc
xchg
pusha
fisubrs
push
dec
subl
stos
cmpb
add
xor
ficoms
shll
je
shrl
mov
sahf
sbbb
cmp
dec
xchg
call
and
xchg
mov
xor
std
arpl
mov
mov
scas
push
mov
inc
add
stc
scas
subl
lret
repz
jg
aam
mov
pop
xchg
mov
pop
sbb
and
daa
jnp
adc
mull
cmp
loope
cli
pop
pop
bound
xor
sbb
xchg
xchg
mov
mov
jmp
decb
outsb
aam
lods
jecxz
mov
rorl
sub
inc
aad
call
sar
add
push
jle
inc
push
aam
push
hlt
jns
imul
jae
sar
cld
inc
cmp
in
test
dec
mov
in
push
pop
inc
push
mov
mov
push
sbb
sbb
push
pop
fs
loope
lods
pop
je
out
out
fidivrl
es
lock
add
hlt
dec
shrl
int3
add
mov
xlat
mov
jecxz
loop
sub
push
leave
xor
insb
ret
pop
imul
in
adc
rol
dec
call
push
mov
push
fisubl
and
pop
add
jg
mov
xor
and
sub
and
sub
mov
cld
js
jecxz
in
sbb
pop
jns
or
mov
iret
jg
mov
push
and
test
jle
push
dec
dec
pop
lock
jp
ja
popf
and
iret
lea
push
mov
and
lods
out
or
cli
xorl
cmp
xor
sub
xlat
pop
addr16
add
aam
pushf
add
in
out
cmp
shlb
jno
push
mov
sub
aaa
ret
xor
dec
jb
xchg
adc
rep
fcoms
mov
js
sarl
sarl
std
outsl
jns
adc
mov
mov
pop
adcb
mov
mov
rcrl
push
sarb
roll
inc
push
fmuls
sbb
popa
aad
popa
stos
jae
enter
adc
sbb
cmp
popf
in
jle
sbb
in
in
mov
cli
fldcw
orl
inc
add
cmp
ljmp
push
inc
ja
clc
sub
jp
xor
jo
xchg
push
fmulp
sub
xchg
repz
mov
idiv
dec
in
out
cld
xchg
jb
adc
push
push
add
popf
aaa
int
out
adc
jmp
pushf
mov
jne
ret
xchg
ss
pusha
sbb
insb
push
rcrb
mov
jbe
outsl
mov
sub
lahf
inc
test
insl
xchg
xchg
pop
lea
fisttpl
orb
push
shl
sbb
push
mov
nop
xchg
mov
xchg
jb
cmc
aam
or
jbe
cli
lret
test
fdiv
push
bnd
mov
sbb
jb
and
outsl
fwait
mov
insl
mov
clc
inc
shlb
cmp
fsub
sub
fldenv
movsl
inc
leave
arpl
movsb
dec
ret
arpl
jmp
xchg
out
outsb
dec
repnz
and
pop
mov
das
mov
rorb
loopne
jmp
or
mov
pop
xchg
lret
aas
jne
jo
popf
lcall
jp
mov
adc
fidivl
xor
iret
loopne
lret
push
mov
push
roll
mov
int3
jp
add
mov
mov
push
mov
inc
enter
out
out
popf
sub
in
faddl
sub
adc
fwait
dec
inc
stos
movsl
mov
cmp
mov
es
jo
imul
mov
iret
xchg
xor
or
add
inc
mov
stos
pop
jo
inc
iret
sbb
loopne
dec
outsl
pop
jns
push
cmp
jnp
push
pop
mov
test
add
push
daa
ret
ret
xchg
jb
std
sub
adc
mov
inc
sbb
adcl
mov
lock
jno
fsubl
fimull
roll
mov
mov
adc
cltd
adc
adc
into
sbb
aam
xorl
lcall
fbstp
add
mov
dec
inc
sub
push
or
xor
loope
jl
das
stos
repz
mov
in
adc
jnp
aaa
dec
lods
in
push
or
mov
or
fwait
shl
sti
jmp
mov
aas
pusha
cmp
ret
into
jae
pop
mov
cwtl
decb
test
adc
sub
test
pop
pop
scas
rcrl
mov
mov
mov
jo
adc
jl
jo
jl
dec
adc
adc
mov
hlt
lahf
aad
add
lret
adc
movsl
dec
sub
outsb
aad
mov
fsubrl
xor
rorb
xchg
mov
ret
jo
jp
dec
ja
mov
popf
mov
cmpsl
imul
dec
xor
mov
outsl
push
hlt
cmpb
ds
into
pop
inc
popf
xchg
sub
ret
js
lock
pop
lcall
movsb
push
jg
sbbl
inc
inc
push
cmp
jl
cmp
repnz
fucomi
in
dec
fdivrp
fisttpl
or
add
adc
sub
es
aad
lea
sar
enter
faddl
inc
daa
pop
ljmp
shlb
mov
and
aas
mov
stos
jne
xchg
data16
mov
mov
scas
lods
jecxz
jno
fdivrl
push
ret
jmp
ds
rclb
mov
sbb
leave
cmc
lods
loop
jg
and
jne
or
push
sbb
mov
xor
inc
int
xchg
sbb
orb
xchg
mov
jge
insl
or
mov
fnstsw
xchg
nop
rcrb
sbb
int3
out
loope
adcb
cld
pop
vpsubd
dec
pusha
dec
pop
mov
add
mov
add
mov
dec
push
mov
shlb
jmp
mov
lea
jb
pop
iret
push
cmpsb
inc
dec
inc
jl
mov
mov
adcl
inc
mov
mov
cmp
repnz
popa
mov
mov
add
mov
mov
xlat
rclb
clc
stc
mov
pop
pop
addr16
adc
data16
fucomp
and
xchg
adc
or
pop
xchg
jp
movl
mov
mov
sahf
dec
adc
and
aam
aad
cmc
cmpsb
and
push
cmpb
insb
std
or
push
push
mov
lds
add
mov
leave
jns
std
dec
cmp
std
adcl
dec
cwtl
push
outsl
rorb
cmp
add
imul
out
add
leave
pop
dec
in
mov
neg
inc
mov
negb
add
sbbb
mov
mov
cltd
rol
pop
mov
add
sarl
adc
stc
push
mov
in
sub
cli
mov
pop
fwait
jl
push
out
mov
xchg
test
cmpsb
jae
lahf
shlb
daa
mov
add
rolb
outsl
popf
mov
adc
fildl
jg
lds
push
cmc
xor
cs
pop
xor
pusha
dec
push
xchg
add
lock
jnp
push
dec
stos
lahf
pop
mov
movsl
jmp
insl
orb
push
movsb
mov
inc
mov
mov
flds
jecxz
data16
inc
test
sbb
fcomps
shll
mov
mov
mov
mov
jge
ret
fildll
xor
ja
andl
or
jns
fldt
pusha
in
push
push
shll
and
sbb
sarl
lahf
imul
addl
sbb
lret
daa
cwtl
ds
push
pop
in
les
dec
xchg
jmp
xchg
mov
enter
xchg
sahf
ficomps
js
push
xchg
jge
cmp
stc
cwtl
adc
pop
int
sti
mov
push
and
mov
pslld
sti
loop
and
rcrl
inc
mov
mov
mov
pop
fcoms
ret
aas
outsb
andb
push
xrelease
fdivrs
addr16
cmp
adc
jne
movaps
mov
pop
ds
or
jne
push
loope
sbb
xchg
and
lods
ficomps
add
inc
mov
push
fsub
adc
cmp
insb
lods
out
push
pop
fnstenv
adc
xor
shrb
push
adc
xchg
in
push
test
imul
cli
or
pop
pop
cmp
xchg
sub
xlat
dec
pop
jmp
and
out
inc
fbstp
mov
fsubl
in
mov
decb
inc
mov
int3
cmp
jae
rorb
pop
out
jp
and
jae
pop
dec
shll
lea
test
js
js
xlat
xchg
mov
lds
jl
pop
arpl
jo
stos
mov
inc
sub
pop
aas
mov
adc
cmp
leave
cltd
xchg
movsl
test
cmp
or
dec
inc
xchg
ljmp
stos
sub
sbb
movsl
mov
inc
jl
popa
stos
add
mov
pop
or
jle
cs
stos
xor
mov
sahf
dec
mov
adc
aas
sub
add
js
or
xchg
mov
out
fidivrs
js
mov
lahf
xor
enter
andb
mov
cmc
negb
les
jle
jle
xchg
gs
dec
imul
test
mov
push
mov
adc
repnz
sbb
push
sub
sbb
data16
insb
xorb
aaa
repz
push
lret
outsl
loope
add
cli
in
inc
or
sub
xchg
cld
imul
pop
sbb
in
testl
push
and
lea
enter
mov
sbb
mov
sbb
xchg
add
push
push
mov
or
cmc
and
inc
mov
hlt
cltd
dec
in
mov
xor
xchg
jp
clc
xchg
ljmp
vmovsd
push
int3
xor
mov
dec
popf
push
add
inc
lods
adc
xchg
lods
gs
push
dec
xor
fnstsw
ja
and
xor
in
insl
cwtl
xchg
or
out
lds
clc
fbld
leave
or
aam
pop
hlt
repnz
mul
jne
jp
popf
sbb
inc
les
or
pop
add
or
outsl
cmp
inc
jmp
hlt
lods
push
lcall
out
bound
adc
xchg
jmp
pop
lahf
cmp
std
adc
pop
mov
lcall
fisubl
jl
cs
xchg
mov
inc
loope
xchg
pushf
mov
and
lods
xor
jle
lcall
popf
jl
and
add
mov
mov
pop
add
sub
in
jg
or
xor
pop
insl
and
stc
dec
ljmp
pop
arpl
sarl
fcompl
sub
jecxz
xchg
push
pop
into
in
ret
ret
sbb
movsb
stos
jns
adc
fdivs
xor
push
outsb
out
xor
stos
stc
cld
and
add
mov
jg
add
rcll
and
and
xchg
shrl
mov
cld
pop
xchg
test
xchg
adc
xor
fldt
cmp
dec
jmp
push
xchg
xor
and
push
lock
jl
in
daa
outsl
mov
adc
fwait
jb,pt
rcrb
adc
cli
mov
mov
outsb
outsb
in
in
pop
aam
and
js
jbe
mull
sub
xchg
dec
and
pop
adc
rorl
mov
in
sub
ja
popl
sarl
jg
pop
xchg
in
int
push
jl
enter
sbb
idiv
push
adc
mov
sbb
movsb
fadd
or
mov
xchg
inc
dec
jmp
lret
dec
hlt
in
add
cmpsb
movsb
shr
jmp
mov
mov
sbb
out
sub
sbb
mov
sahf
mov
add
jecxz
mov
icebp
jb
daa
lea
push
clc
sub
aaa
js
jae
xlat
movsb
jmp
bound
insb
sub
popa
add
pushl
mov
orl
sub
add
repnz
test
insb
adc
inc
and
xchg
es
mov
mov
xchg
rcll
cmp
pusha
outsl
into
and
sub
je
push
xor
sub
lahf
cmp
mov
and
or
mov
imul
cld
inc
aam
push
fs
in
mov
dec
push
lds
add
dec
mov
ds
mov
cmp
test
mov
js
test
icebp
xor
and
cmpsl
lods
mov
in
shll
inc
adc
rcrb
cmp
pop
mov
stos
dec
xor
sarl
or
lea
popa
sbb
in
dec
rol
in
pop
sbb
fwait
adc
insb
jnp
gs
rolb
mov
pop
mov
jp
in
push
push
push
shl
das
das
test
in
mov
leave
cli
insb
fs
sbb
rclb
lods
out
enter
repz
xchg
pop
dec
negb
stos
imul
or
adcb
or
mov
cltd
cwtl
xchg
clc
mov
daa
lods
mov
test
push
inc
rorl
andl
dec
inc
dec
jb
das
ret
sbb
jl
pop
and
xchg
sbb
add
push
xor
lods
xchg
inc
in
inc
in
jl
sahf
ret
movsb
roll
notl
xor
mov
dec
sub
rcrl
push
sbb
data16
lds
xchg
gs
sahf
stc
adc
cmp
or
pop
popa
ss
or
lea
xlat
mov
outsb
xlat
and
test
repnz
adc
pusha
movsb
mov
and
je
rorl
xor
in
pop
icebp
xor
push
jo
push
stos
xor
xchg
add
push
inc
dec
cmp
ret
cmp
pop
lcall
movsb
incl
arpl
xor
aad
xchg
jne
mov
les
pop
sbb
mov
pushf
add
cmp
push
rorb
sbb
mov
push
sbb
dec
jle
push
pop
cmpsl
cld
je
ljmp
mov
mov
jecxz
iret
push
xor
gs
add
ss
jae
pusha
fadd
lds
inc
cmp
push
pop
arpl
popf
mov
mov
mov
fistpll
add
xor
out
orb
pop
add
add
xchg
adc
sbb
and
insl
es
jne
adc
outsl
stos
dec
sbb
inc
add
hlt
cmpl
xchg
gs
sub
pushf
xor
loopne
aad
dec
cs
aad
cmp
stos
and
inc
jnp
pop
gs
pop
mov
and
sbb
stos
addr16
mov
lea
ja
adcl
imul
out
sahf
stos
cli
lds
push
sub
sub
jae
imul
mov
push
data16
and
ret
ljmp
push
xchg
mov
movsb
cmpsb
cld
scas
stos
jg
jo
inc
daa
mov
lods
pusha
into
fsubrl
mov
lret
out
fnstsw
ljmp
nop
jecxz
adc
fwait
inc
out
addr16
add
sti
call
shlb
jmp
arpl
jp
pop
jmp
xorl
jbe
scas
sub
bound
pop
inc
sub
push
pop
imul
and
sbb
sbb
shrb
xor
out
into
pop
pop
mov
scas
dec
popf
dec
add
and
dec
iret
cld
pop
sbb
sbb
sub
dec
push
data16
jne
repz
jge
pop
fldt
arpl
cmp
les
stos
aaa
sbb
imulb
mov
lahf
xor
mov
jecxz
mov
dec
in
ds
rolb
les
mov
jg
xchg
std
xor
outsb
adc
adc
rcll
mov
sbb
mov
mov
pop
enter
lcall
cmpsl
add
or
mov
mov
ja
inc
jp
test
adc
add
test
fnstenv
aaa
out
or
pop
enter
mov
cmc
dec
xor
push
mov
mov
scas
mov
jp
insb
jae
sub
xor
rcrl
xchg
add
into
pop
ds
je
xchg
adc
mov
pop
jbe
out
fldenv
dec
addr16
out
lea
jno
cltd
cli
enter
loop
cmp
sti
xor
jle
push
loopne
mov
test
cmp
bound
js
in
shll
cmp
popf
add
add
jg
adc
mov
mov
sbb
mov
das
ds
and
popf
jb
and
xchg
test
iret
push
aaa
jnp
sbb
and
push
not
fnstenv
out
xor
outsl
inc
xchg
sti
std
cwtl
dec
pushf
push
mov
and
sbb
sub
loop
mov
clc
xor
movsl
popa
es
outsb
fdivr
rcrl
dec
mov
lock
xchg
hlt
das
mov
and
sbbl
aas
dec
sbbl
adc
push
scas
jp
fsubrp
incl
push
jp
shll
inc
mov
add
dec
fistpll
dec
mov
adc
sbb
ficompl
cmpsb
add
out
cs
mov
popf
or
jns
mov
inc
jbe
inc
xor
jae
outsb
or
in
xor
idivb
gs
rcll
or
cmp
testl
shll
ljmp
push
push
push
inc
jecxz
rcr
sbb
cmp
out
mov
fdiv
sbb
aas
push
jecxz
or
mov
out
sub
sahf
jp
rcr
dec
sub
outsl
xor
push
cmpsb
lret
das
inc
jno
inc
mov
or
or
cld
mov
and
pop
push
xchg
lcall
fnsave
inc
rcrl
sbb
cs
mov
arpl
dec
dec
and
push
add
outsl
mov
inc
cmp
and
and
mov
lahf
rorb
adc
call
mov
jle
mov
rorb
insb
out
addr16
addl
shlb
mov
lret
push
dec
or
mov
mov
dec
sub
cltd
insl
mov
mov
daa
mov
out
pop
push
pop
sub
and
lods
bound
lret
mov
jecxz
cld
in
popl
adc
iret
repnz
jne
dec
cmp
pop
push
xor
cmp
xchg
cmc
fcomip
testl
lds
inc
cltd
sahf
imul
sub
iret
enter
mov
mov
repz
test
jne
movsl
int3
mov
insl
loopne
movsl
mov
nop
cmp
xor
sti
jmp
dec
mov
pop
jmp
xor
test
outsb
shrb
cmp
ss
mov
mov
pop
cli
movsb
repnz
shrl
test
call
xchg
insl
jl
divl
push
movups
xchg
jne
sub
sub
cmp
les
jns
data16
lret
add
jne
dec
xchg
add
push
xchg
mov
sbb
jmp
cld
xchg
stos
inc
add
mov
jmp
lock
or
add
cli
rcll
pop
addl
inc
lods
inc
mov
push
jno
dec
fdivrs
insb
bound
xchg
sub
fistpl
push
xchg
loop
call
dec
aam
cmp
xchg
pop
int3
dec
loope
fiaddl
mov
sub
adc
imul
mov
shll
mov
pop
mov
xchg
or
lods
dec
je
add
adc
scas
cli
mov
popf
jmp
add
hlt
mov
test
out
and
out
sti
mov
inc
popa
or
xor
jecxz
test
mov
jne
pop
pop
jb
ret
mov
xchg
aam
mov
jp
inc
cltd
lret
push
jle
fsubrp
xor
cmp
cmp
mov
out
xchg
adc
pop
loopne
xchg
fimull
aad
jg
jmp
sbb
icebp
cli
shrl
jl
mov
ret
cmp
icebp
ljmp
sbb
ret
mov
inc
sub
outsb
pop
daa
add
sahf
out
add
add
add
mov
stc
arpl
or
mov
imul
cli
iret
mov
aaa
jne
orl
jp
and
mov
stos
gs
jae
and
xchg
scas
ret
or
cmpsl
mov
aam
jecxz
psrad
pop
pop
scas
add
data16
imul
inc
and
push
data16
mov
addr16
push
mov
ret
mov
das
dec
cld
mov
mov
clc
xor
popa
cmp
sbb
add
pop
shlb
cmpsl
sub
icebp
in
mov
addl
out
lret
ret
pop
or
les
out
shll
clc
aas
mov
add
fisubrl
sbb
mov
xor
push
adc
gs
cld
addr16
gs
mull
xlat
movb
je
scas
mov
movsl
int
or
pop
cmp
inc
add
and
cmc
rcrl
int
lea
push
into
pop
push
mov
pop
in
clc
mov
xchg
mov
inc
sbb
mov
mov
je
imul
in
mov
push
scas
daa
mov
jg
jno
xchg
hlt
sbb
icebp
outsb
cmc
dec
mov
mov
loopne
mov
icebp
xchg
sbb
xlat
popf
push
fsubs
jg
fst
lret
fbld
mov
or
imul
or
shlb
aam
jecxz
cmp
scas
dec
loop
push
sbb
pop
adc
jo
loopne
ficoms
dec
add
rolb
fcomi
