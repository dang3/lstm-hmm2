int
movsb
add
dec
adc
or
add
and
add
or
mov
cmp
or
add
adcb
cmp
loope
pop
adc
or
inc
movb
mov
add
add
and
pusha
and
add
add
mov
rol
sbb
pushf
or
inc
and
push
adc
add
and
jno
inc
andb
inc
adc
stos
and
jle
cmpsb
in
out
bound
shll
cmp
aad
adc
or
or
mov
call
mov
test
mov
inc
mov
dec
and
cmp
mov
push
push
mov
rolb
sbb
push
shrb
mov
fmuls
mov
cwtl
sbb
sbb
lahf
push
inc
sbb
sti
in
fcoml
gs
test
sti
rolb
cmc
sub
stc
jmp
aam
sbbb
fiadds
pushf
and
pop
pop
jg
shlb
andb
sbb
add
xchg
cmp
jae
stos
jg
leave
cli
push
outsl
popf
jmp
sbb
lahf
jle
pop
fwait
cmp
mov
cli
sbb
test
cmc
pop
mov
or
pop
stos
add
pop
mov
movsl
out
or
push
daa
mov
jp
lods
mov
fistpl
cwtl
pop
push
jns
sub
jnp
pop
hlt
stos
aas
pop
ds
fnstcw
push
decl
addr16
cmc
pop
icebp
push
cmp
mov
dec
pop
out
nop
lea
pop
pop
mov
lret
aas
cmpsb
mov
xchg
pop
lods
cmpl
mov
out
popa
rcrb
pop
lock
mov
into
fucom
ljmp
mov
ljmp
sti
sbb
cmp
lds
jns
dec
call
push
mov
push
addr16
lahf
mov
push
jns
fldcw
mov
add
enter
mov
pop
mov
movsb
mov
loopne
popf
sbb
jo
cmp
mov
outsl
jecxz
mov
sub
pushf
lahf
lock
jmp
out
xchg
pop
pop
cli
sbb
subl
fsubrs
out
sub
adc
and
mov
mov
cli
clc
subl
pop
stos
mov
cli
shlb
mov
lods
sti
leave
jnp
ljmp
subl
cwtl
pop
mov
sub
pop
cmp
lock
cwtl
mov
mov
cwtl
dec
mov
jnp
push
call
mov
sbb
mov
sbb
cmp
cmp
aam
sbb
cltd
sub
sahf
stos
mov
cli
das
xchg
mov
cmpsl
push
loop
sbb
insb
sbb
insb
sbb
sbb
fcomps
cmpsl
std
cmp
outsl
cli
aad
sbb
lcall
mov
sbb
cmc
pop
pop
int3
test
dec
mov
mov
das
sbb
sahf
clc
push
mov
jg
aas
addb
mov
dec
ds
repz
pop
sbb
aad
pop
mov
xchg
stc
pop
mov
jmp
mov
cld
lret
mov
and
xchg
dec
scas
inc
mov
mov
sbb
and
jp
clc
push
and
sbb
mov
nop
cmp
mov
imul
test
mov
adc
mov
mov
sarb
cmp
std
cmp
outsl
in
mov
pop
cmp
cwtl
mov
cmp
pop
shr
sbb
mov
cli
pop
sbb
clc
pop
inc
mov
test
push
push
lea
in
aas
pop
jle
adc
lods
std
cmp
mov
cmp
sbb
xchg
pop
pop
hlt
sbb
int
pop
lea
cwtl
pop
mov
stc
pop
stos
cld
xor
mov
into
pop
sub
mov
cmp
sbb
and
cmp
cmp
sbb
cmp
jg
sbb
nop
clc
pop
adcl
cmpsb
or
sbb
gs
dec
loop
adcl
mov
fdivs
cli
test
push
test
cmpsb
cs
nop
xchg
adc
sub
pushf
stos
stc
push
stos
pop
cmp
aam
and
sbb
mov
repnz
pop
mov
mov
fcoml
jmp
add
daa
sbb
mov
js
dec
mov
jns
mov
mov
les
mov
jns
mov
cli
add
jo
dec
cmp
out
pop
es
stc
adc
cmp
xchg
stc
sbb
and
pusha
jmp
pop
outsb
jmp
sbb
cld
icebp
int3
inc
cli
xchg
pop
push
and
mov
cmp
jp
sub
pushf
out
cmp
shl
inc
in
dec
or
cmp
ss
cltd
push
ret
pusha
adc
adc
adc
sbb
push
loope
out
jp
pop
mov
push
mov
cwtl
xchg
jnp
adc
inc
into
rorb
xchg
in
xchg
pop
mov
jge
rcrb
dec
cmpsb
mov
pop
xchg
movsb
lret
in
lods
jnp
scas
jo
push
push
movb
pop
pusha
or
mov
repz
mov
mov
adc
push
xchg
xchg
jno
mov
shll
das
jg
sub
mov
jl
movsb
mov
movsl
dec
push
test
fcompl
lcall
es
xchg
push
sub
and
xor
sub
in
mov
sarb
pop
jecxz
cld
fstpt
push
mov
cmpl
and
jns
xorb
addr16
in
dec
jp
fmuls
fistps
jne
push
enter
cwtl
ret
mov
inc
enter
lcall
mov
mov
pop
fisubs
fmuls
jo
cmpsl
inc
jae
sub
enter
fldcw
mov
or
inc
test
jno
test
push
jns
cmp
shll
mov
push
loop
and
out
and
xchg
cmp
push
aad
call
fisubl
pusha
mov
mov
out
mov
adc
scas
mov
mov
lods
lcall
pop
fldl
mov
fisttpll
out
movsl
cltd
test
mov
cmpsl
adcl
imul
xchg
pusha
or
cmpsb
jne
pop
imul
test
fisubrl
cmp
sbb
mov
enter
daa
inc
lcall
lods
loop,pt
sahf
out
inc
pop
push
lea
test
push
test
inc
push
call
add
adc
pop
sbbb
lds
pop
out
push
push
pop
sarb
add
inc
lret
mov
test
adc
mov
dec
xor
loope
pop
enter
push
cwtl
push
xchg
idivb
adc
out
adc
scas
idivl
pushf
or
lods
mov
jg
loop
adc
pushf
mov
xor
xchg
test
push
fistpll
popa
cmp
enter
mov
jg
imul
out
in
sub
mov
adc
popa
pop
mov
lahf
jecxz
lahf
add
sahf
xchg
cli
cwtl
imul
pop
call
mov
insb
fstpt
outsb
insb
mov
out
in
push
mov
std
ret
dec
clc
push
jb
hlt
stc
stos
fstpt
mov
cmp
cmp
jg
or
pop
sbb
or
sub
sbb
ds
idivl
imul
push
xor
pop
test
mov
add
cs
sbb
adc
sub
inc
ficoms
sar
mov
dec
and
aas
cmp
bswap
scas
rorb
cmp
adc
mov
sbb
aad
sti
dec
pop
pop
lods
movsb
cmp
imul
pop
jae
jmp
add
hlt
gs
loop
pop
jo
push
xchg
ds
pop
dec
cltd
dec
lock
xor
test
xchg
inc
test
mov
jp
add
fwait
mov
rclb
int
inc
dec
xor
push
and
dec
cli
cmp
pop
cmp
xor
ja
push
fs
ja
call
mov
mov
xchg
pusha
mov
pop
clc
jae
mov
or
push
lea
mov
or
adc
sbb
fsubrl
sbb
pop
cwtl
scas
jmp
jle
fdivrl
pusha
cmpsb
cmp
mov
gs
shrb
fld1
pop
aam
sbb
adc
es
mov
mov
das
cmpb
cmpsb
jl
cmp
push
fcomp
out
icebp
cmp
aas
jbe
sbb
int3
sti
in
push
dec
adc
push
fwait
lods
das
jp
rcll
in
xchg
loop
call
jno
ljmp
stc
sbb
add
dec
mov
stc
pop
cmpsb
stos
sub
sub
add
adc
js
sbb
clc
push
mov
mov
fidivrl
and
out
repz
imul
cmp
cmp
lahf
scas
mov
lods
mov
fdivp
inc
sbb
call
mov
mov
sub
add
push
cmp
jmp
sti
popf
or
fs
in
xorl
mov
sbb
outsb
cmpsb
jmp
fldenv
xor
loop
orb
mov
jl
jl
mov
pop
fsubrl
inc
aas
jno
sbb
outsb
fsubrs
xlat
and
sbb
aas
and
pushf
pushf
and
aam
cltd
adc
pop
xchg
push
sub
pop
mov
or
mov
cmp
xchg
sbb
shrl
sbb
bound
imul
mov
mov
mov
test
mov
adc
sub
test
mov
adc
ja
cmp
cmp
outsl
push
cmp
mov
cmp
fdivrl
and
fidivl
jmp
and
mov
jmp
jb
mov
rcrl
int
xchg
jne
daa
mov
jl
outsl
push
push
lret
adc
sub
xchg
mov
into
ljmp
cmpsl
scas
mov
ss
fsubp
in
roll
xor
sbb
lcall
add
daa
loop
sbb
insl
jg
negl
fsub
out
fisubrs
aaa
in
mov
xchg
test
inc
sub
xchg
sbb
loope
je
and
aas
mov
in
xchg
add
sbb
inc
mov
sti
sti
mov
out
loop
pushf
arpl
arpl
pop
pushf
dec
mov
ljmp
mov
in
call
test
xor
stos
adc
enter
sti
into
fwait
movsl
push
and
xchg
call
in
test
cli
aas
or
rcll
int3
or
mov
int3
xor
xchg
popa
fdivrl
negb
ds
das
stos
sbb
notb
clc
cmp
push
pop
mov
and
mov
xor
pop
sbb
fs
test
jb
xor
sbb
mov
lea
and
cltd
sub
mov
cmp
jne,pt
popf
push
lock
call
call
dec
inc
fnsave
add
dec
insl
scas
loope
mov
fldl
xchg
hlt
dec
ret
sub
mov
or
cwtl
ljmp
cwtl
pop
scas
xchg
and
cmp
lea
sub
cmp
paddw
aas
adc
sbb
jecxz
bsr
jae
jnp
push
push
pop
ljmp
rcrl
imul
scas
stos
cld
xchg
jle
sbb
mov
pop
jbe
sbb
xchg
stc
divl
repnz
mov
sti
pop
push
add
roll
orb
lds
dec
xchg
or
ret
lret
dec
pop
push
add
mov
inc
rclb
stos
cmpsb
pop
pop
inc
cmpsl
cmpsl
cld
cmp
sub
fsubrs
or
sub
call
cmp
jecxz
or
outsl
cmp
or
sbb
es
aas
xchg
andl
sub
adc
push
jo
jo
jle
into
cmp
jbe
lahf
mov
and
out
cmp
push
lods
fisttps
cmp
ret
mov
add
mov
enter
mov
xor
mov
push
push
scas
mov
jmp
sbb
js
cmpsl
dec
cwtl
cmpl
inc
xlat
fwait
sub
clc
mov
aas
sub
mov
inc
jl
pop
fs
xchg
clc
fsubl
arpl
push
xchg
jmp
add
sbb
stos
fdivrp
xor
fwait
lahf
pop
je
outsl
push
xor
xor
popf
jnp
push
cs
mov
movsl
cld
cwtl
add
sbb
xor
jae
imul
lcall
sub
in
das
mov
test
sbb
mov
sti
jns
cmp
and
add
arpl
adc
pop
xorb
data16
and
call
rcr
mov
jae
mov
aam
data16
clc
in
ja
mov
pop
push
lea
fdivs
xor
cwtl
js
inc
fdivl
lahf
dec
pusha
dec
out
mov
mov
mov
fcmovu
aam
in
xlat
cmpsb
xor
xchg
inc
mov
in
mov
stc
ficoms
cmc
push
movsb
jno
push
mov
push
mov
sarl
mov
push
imul
adc
out
and
jge
sub
sahf
jb
lods
sbb
test
dec
push
mov
fdivrl
mov
xchg
xchg
imul
push
fdivrl
mov
call
andl
scas
inc
clc
nop
mov
adc
sbb
mov
push
jl
repnz
adc
push
jle
cmp
xchg
sti
out
rolb
fwait
test
jl
cmp
iret
adcl
je
xlat
daa
aam
mov
push
push
shrl
xor
pop
aad
icebp
imul
push
push
mov
push
mov
sbb
lcall
out
iret
lds
sbb
in
mov
hlt
add
xor
fs
in
rdmsr
mov
stos
icebp
and
fmul
sahf
xor
or
es
cmpsl
xchg
push
test
in
fldt
mov
adc
jnp
in
mov
pop
pop
jg
fiadds
lods
push
xor
leave
sbb
add
xchg
mov
lea
lahf
sbb
cli
sub
pop
xor
cmpsb
push
and
test
add
cmp
pop
xor
push
sub
and
scas
sub
mov
out
outsb
jp
es
mov
fdivr
cs
cli
pop
cmpxchg
movsl
aas
adc
mov
adc
pop
mov
push
leave
mov
pop
sub
fisubl
inc
pushf
xor
inc
popf
jb
cs
push
jnp
popf
mov
cwtl
sar
sbb
push
mov
sbb
xchg
sub
jns
pop
sti
jp
pop
pop
js
gs
daa
call
mov
add
adc
cli
push
sbb
fbld
pop
cli
sbb
ret
enter
flds
clc
xchg
jne
mov
popf
clc
lds
enter
mov
scas
ljmp
push
mov
jo
dec
stos
sbb
fstps
mov
mov
mov
mov
aam
stos
jg
xchg
sti
push
cwtd
pop
mov
das
push
mulb
in
fdivs
xchg
lret
sti
pushf
sub
xor
push
dec
jno
popf
sbb
push
and
movsb
mov
mov
adc
mov
dec
xchg
push
push
fstpl
in
clc
fsubs
rclb
cltd
ds
clc
mov
out
lods
push
scas
xorl
stc
mov
pop
sarl
adc
insb
mov
or
and
dec
adc
cli
jmp
and
bnd
out
push
cli
fsubs
adc
fmull
bnd
xchg
sahf
into
in
popf
sbb
inc
jo
adc
into
sub
mov
scas
xchg
and
and
lcall
insb
cmp
inc
lcall
cmp
or
mov
cltd
std
ja
cltd
adc
cmpl
call
inc
ljmp
sbb
cmpsl
pop
movsb
sub
divb
jnp
add
sbb
in
inc
faddl
shrl
dec
push
xor
call
pop
int3
fnsave
into
add
cwtl
xor
and
mov
mov
ljmp
jb
fcomps
sbb
sbb
iret
jmp
pop
lods
test
pop
cmp
or
xchg
xor
add
and
xchg
loopne
xor
lea
xor
cmpsl
movsl
dec
xchg
push
call
adcl
dec
mov
mov
stc
repz
lock
xor
fimull
sbb
sub
push
jg
mov
lea
xchg
subb
push
adc
pushf
mov
les
sub
fcoml
cmp
push
mov
inc
movsb
cltd
hlt
sbb
and
mov
popa
sbb
cs
andb
sbbl
add
out
mov
xchg
mov
out
insb
imul
push
pop
mov
xchg
jge
xor
mov
test
xchg
das
fcomps
imul
mov
jg
cmpsl
fdivrl
outsb
mov
into
add
xchg
aas
je
clc
fldenv
adc
cld
mov
jecxz
mov
mov
xor
sti
pushf
outsl
mov
xchg
sub
xorb
push
fisubrs
xchg
push
push
pop
repnz
mov
icebp
data16
cld
push
imul
push
xor
out
jg
enter
sti
add
in
mov
hlt
out
sbb
test
xor
outsb
cltd
icebp
cld
cs
cwtl
subl
inc
cmpsb
aas
xor
sub
out
jo
mov
or
and
mov
loopne
push
adc
movsl
pop
cmpsb
mov
test
dec
push
push
loopne
decb
and
int3
cwtl
in
adc
pop
shlb
inc
aas
inc
int3
mov
jmp
cmp
ret
imulb
xchg
fistps
cs
adc
and
and
or
push
mov
cmp
pop
jl
sarl
mov
int3
add
test
push
pop
insb
mov
mov
mov
push
xchg
mov
push
test
xlat
mov
pushf
pop
cli
xlat
xchg
sbb
mov
mov
mov
fstps
sbb
add
or
mov
push
cld
hlt
or
pop
push
outsl
roll
sub
sbb
sub
mov
sbb
xorl
adc
adc
outsb
fisubs
pop
seta
sub
mov
pop
or
pop
sub
adc
outsb
pushf
push
xorl
fdivs
xor
in
in
mov
fbstp
popa
das
pop
mov
test
mov
es
jecxz
les
jb
scas
out
cmc
lcall
add
xlat
or
push
call
mov
call
xor
xchg
jmp
pop
xchg
pushf
int3
push
je
shl
sub
rorb
cmp
rclb
fidivrl
pusha
sub
ljmp
cmp
in
sahf
push
mov
cmp
in
ja
mov
movsl
jns
insl
sti
lods
xchg
adc
xchg
cmp
leave
adc
pushf
fadds
inc
sub
out
jp
loop
mov
adc
addr16
ss
pop
fwait
in
pop
sbb
sub
sub
loope
jecxz
sahf
mov
add
pop
cmpb
and
or
mov
mov
push
xchg
cmp
xlat
cmpsb
stos
pop
sbb
xlat
dec
xchg
cwtl
pop
aas
sbb
out
in
mov
ret
test
push
cmp
sti
ficoml
lock
out
push
mov
sbb
mov
loopne
iret
or
push
mov
mov
out
mov
push
imul
gs
pop
or
mov
and
call
mov
mov
sbb
rcrb
dec
fs
xor
iret
jle
xchg
fcompl
mov
mov
jl
dec
push
aaa
cmp
pop
and
sub
jno
cmpb
fsub
add
xor
jp
call
cmpsl
jmp
mov
shr
inc
mov
cwtl
pop
jo
push
inc
clc
lcall
sarl
shlb
push
sbb
pop
xchg
cmp
in
jno
sarb
sbb
sti
jge
jns
mov
adc
lcall
shlb
jmp
std
push
jne
shlb
xor
mov
cmpl
sbb
dec
cmp
sbb
test
jl
push
inc
mov
push
mov
sub
dec
in
lods
mov
jmp
xor
mov
or
xchg
pop
pop
add
jle
aas
fld
push
inc
pop
jle
xchg
cmp
cmp
lcall
in
sbbb
stos
mov
inc
sbb
mov
pop
mov
ljmp
dec
or
lea
xchg
ss
push
ds
mov
ficompl
fdivrl
pop
in
incl
push
mov
jl
pushf
cmp
stos
jecxz
jmp
adc
xor
gs
and
scas
out
fdivrl
cmp
cmpsl
sub
push
in
inc
xor
push
xchg
cmp
adc
push
lock
cmp
and
mov
push
dec
pop
cmpb
mov
or
sub
xchg
dec
sbb
push
sbb
jg
adc
scas
dec
dec
dec
and
xlat
clc
mov
outsb
fcomps
mov
les
jge
cli
cmpsb
cwtl
aaa
rolb
inc
ficoml
xchg
and
test
jnp
shlb
and
mov
sbb
dec
cmpl
test
mov
mov
clc
in
pop
ss
cwtl
dec
cmp
add
mov
aas
cmpb
test
popa
nop
sbb
cmp
jns
pop
xchg
xchg
add
pop
jno
or
push
inc
xchg
in
and
std
lock
jbe
icebp
add
mov
jb
cmp
sahf
add
mov
jne
jl
bound
stos
insl
pop
ds
push
sbb
mov
lret
add
pop
sahf
repnz
push
mov
sti
pop
adc
lods
loope
mov
imul
inc
sbb
pop
stos
test
mov
leave
cmc
pop
ficoml
cmp
imul
mov
mov
scas
repz
mov
and
sub
cwtl
std
push
mov
add
das
enter
fidivs
movsl
mov
fidivrl
stos
lret
aam
fcmovbe
insl
int3
cli
fcom
and
cwtl
sbb
call
xlat
js
int3
fiaddl
push
jp
dec
movsb
cs
adc
cmp
mov
scas
lcall
mov
pop
jmp
xlat
enter
insb
in
test
cmp
cmp
sub
jne
cmp
lret
sbb
frstor
clc
mov
jl
lods
in
jmp
filds
mov
adc
movsl
adcb
cmp
adc
je
xor
fdivrl
es
push
test
bnd
jnp
daa
push
test
cmp
jp
mov
pop
jbe
sub
pop
mov
xor
aam
and
aas
and
sbb
jnp
icebp
popa
lods
out
cmp
mov
std
sub
fsubl
rol
mov
aad
jmp
ja
fsubl
and
je
xor
popf
cmp
popa
repz
xchg
fldcw
xchg
nop
mov
fsubrs
xchg
mov
gs
mov
xchg
into
jbe
jle
stos
bound
rorb
pop
cld
shr
and
loope
dec
mov
jge
cwtl
stos
jg
loopne
jo
jb
cmpl
mov
jmp
mov
sbb
push
xchg
cmp
xor
mov
sub
cmp
cltd
mov
int3
cmpsl
cld
mov
jp
adc
lods
shll
pusha
test
shll
push
lret
pop
stc
loop
cmp
cmp
outsl
pop
adc
and
aam
cmp
pop
sub
mov
lret
jnp
sbb
mov
mov
push
push
push
addr16
sub
xchg
mov
lret
push
lods
ss
insb
fistl
outsl
sahf
xchg
mov
sub
xor
push
dec
outsl
call
pushf
fmul
repz
andl
sbb
mov
sti
sub
gs
mov
jbe
add
out
sbb
xchg
and
sub
es
and
pop
imul
testl
gs
mov
dec
pcmpeqd
lds
xchg
pop
push
jp
pop
xchg
mov
std
mov
xchg
sub
mov
and
inc
mov
jne
lcall
push
xor
or
push
lds
cmp
xor
push
sbbl
jo
mov
sahf
stos
push
mov
loopne
adc
xor
jg
lods
mov
mov
xchg
icebp
cmp
std
or
lea
jnp
daa
outsl
mov
pop
add
sub
inc
fwait
mov
cmp
add
push
cmp
inc
jle
jg
pushf
adc
and
jl
pop
or
decl
sub
cmp
jp
in
lahf
jecxz
or
fwait
insb
push
jb
dec
ljmp
cs
jg
les
cmp
cli
lahf
cmp
inc
add
inc
out
sbb
icebp
popf
notl
mov
pop
icebp
push
and
pop
iret
nop
cwtl
imul
jp
lds
sti
xchg
cld
daa
lret
xor
xor
and
pusha
mov
fstpt
mov
mov
into
xor
push
or
imull
lock
jle
movsb
je
and
in
or
out
dec
movsl
dec
xor
sbb
dec
aaa
fisubrl
mov
sub
nop
test
cmp
pusha
ret
out
xchg
dec
xor
push
push
cmp
loope
inc
stc
out
popw
jle
int3
sub
sbb
xchg
movsb
mov
jp
popf
scas
mulb
jae
cmpsl
and
mov
xchg
and
pop
cmp
cmc
sub
jno
loop
mov
jns
frstor
test
pop
fisttpll
stos
mov
out
or
cwtl
outsl
fnstenv
adc
daa
or
xor
push
sub
imul
out
sub
out
jo
add
xor
sbb
popw
ds
mov
push
cmpb
or
stos
ror
jl
cwtl
aas
lea
sub
aas
in
jp
add
fdivrs
ljmp
mov
sbb
fstpt
cmp
fwait
inc
sarb
mov
orb
jg
call
mov
sti
push
jmp
sub
cwtl
imul
cwtl
add
or
xchg
decb
insl
dec
inc
jl
cmp
ret
cmp
mov
jmp
pop
sahf
loope
rorb
cmp
stos
jo
mov
sbb
pop
push
aam
clc
mov
push
mov
jnp
rep
cwtl
mov
mov
cmpsb
inc
ficomps
fwait
jle
subb
outsb
add
test
std
repnz
iret
dec
mov
mov
push
sarb
jl
gs
xor
hlt
and
outsb
pop
subl
outsl
push
mov
adc
aam
cltd
fsubs
insb
aas
pop
mov
and
xor
or
jnp
stos
cmp
fs
mov
jge
fcoms
cld
jecxz
scas
xchg
sub
gs
pop
js
es
mov
and
test
std
push
test
out
xor
sub
add
out
jae
cmpl
mov
jb
push
cwtl
fsubl
cmpsb
and
iret
mov
push
cs
stc
jle
cmp
imul
pushf
sbb
les
jb
and
jg
mov
pop
mov
movsb
xchg
lods
leave
stos
mov
ds
and
es
sub
into
int3
test
lret
xchg
pushf
pop
cmp
repz
shll
mov
sub
cmp
vpaddb
jl
test
pop
xchg
cmp
orl
out
nop
icebp
cmp
mov
jno
bound
cmpsl
stos
pop
daa
push
mov
jae
aas
push
lahf
arpl
mov
mov
test
lret
sbb
mov
sbbb
mov
lea
sbb
stc
mov
pop
enter
cmpsl
mov
xor
ja
fcomps
xor
data16
ljmp
lahf
lret
aaa
fists
mov
arpl
push
cld
pop
cmp
pop
or
mov
es
je
push
mov
test
addr16
test
mov
mov
jb
cmpsb
pop
sbb
mov
sbb
xchg
and
cmp
lock
or
bound
mov
int3
add
adc
sti
push
rcll
inc
mov
fsts
scas
sbb
jmp
jl
dec
and
repnz
or
pop
push
pushf
loopne
rcl
pop
jge
cmpsb
repnz
pop
mov
mov
push
jno
pop
int3
mov
in
sbb
cld
negl
inc
pop
fdivrl
daa
jbe
repz
mov
sub
orb
xchg
push
mov
in
adc
in
sbb
pop
add
test
inc
xor
cmpsl
sti
nop
mov
push
mov
fwait
jmp
lcall
fldcw
jge
mov
pop
push
adcb
aas
movsl
push
mul
xor
cmp
mov
test
pop
cmp
pop
xor
loop
rolb
sarb
mov
jp
mov
sahf
add
sahf
lds
jbe
aas
outsb
pop
aad
mov
inc
add
cmp
push
mull
popa
inc
repz
ficoml
mov
inc
out
xor
stos
lahf
testl
subb
pushl
jge
test
leave
pushf
nop
mov
sbb
or
fwait
ljmp
add
sub
cli
js
cmp
sbbl
fcoml
icebp
xor
sarb
enter
xchg
xchg
or
movsl
xchg
jae
and
jp
mov
mov
lods
xchg
cmp
inc
ljmp
sub
xor
or
ja
mov
loop
scas
scas
mov
cmp
popa
mov
mov
out
cmpsb
std
icebp
cli
lock
test
ljmp
std
fwait
data16
call
js
rorb
push
sub
mov
cmpsb
lods
stc
mov
cmp
mov
xchg
out
aad
mov
jnp
dec
lods
ljmp
pusha
inc
jmp
xchg
imul
data16
and
and
pushf
xchg
xchg
adc
push
ds
scas
cmp
mov
jae
lods
aaa
in
shl
fcmovb
jne
leave
sti
das
int3
in
cmp
and
sbb
mov
mov
add
fadds
clc
int3
add
xor
inc
mov
clc
movsl
jnp
and
adc
inc
and
pop
dec
xchg
nop
cwtl
lods
jo
stos
sbb
xchg
push
mov
in
ret
adc
fmul
test
inc
fcompl
lret
insb
mov
push
aam
sub
jp
movq
push
les
cmp
imul
sarl
jnp
roll
stos
xchg
xor
pushf
scas
jb
dec
mov
loop
xchg
pushf
dec
mov
jnp
testb
push
out
jae
adc
push
push
mov
cmp
arpl
ljmp
dec
xor
push
sub
aaa
outsl
ja
stos
lods
and
adc
fwait
sbb
pushf
cmpsl
mov
add
insb
push
sub
or
in
out
adc
inc
mov
fmul
mov
push
sbb
jo
pop
adc
pop
arpl
das
cmp
dec
mov
mov
stos
rcll
loope
xchg
xchg
push
pop
stos
das
mov
mov
sbb
ds
cs
lods
xchg
add
xchg
test
sub
adc
mov
mov
mov
push
fdivrs
repnz
in
cmp
pop
dec
mov
mov
push
xor
sub
xchg
lcall
stc
mov
nop
jo
rcll
pop
cld
gs
lret
enter
add
imul
lea
hlt
push
push
xchg
mov
test
cmp
cmp
nop
clc
xor
cmp
pusha
int
jb
push
in
nop
sub
jg
mov
rcr
push
mov
push
stos
jecxz
pop
mov
iret
stos
fnstcw
mov
inc
or
mov
jnp
int3
inc
insb
mov
jp
xchg
out
sarl
fwait
inc
add
mov
enter
cmp
mov
pusha
arpl
cmp
mov
mov
into
ret
cmp
xor
or
pop
pushf
and
add
mov
fs
xchg
add
sbb
mov
add
cli
mov
aad
cmp
fisubrs
or
jnp
cld
loop
dec
xor
adc
test
pop
fidivrl
je
mov
jle
lret
xchg
cmpsb
mov
pcmpgtb
mov
into
ja
aam
push
inc
dec
lds
pop
cld
jbe
jmp
outsb
stos
jmp
mov
pop
out
dec
mov
and
mov
in
out
sbb
inc
cli
mov
lods
outsl
scas
sbb
jg
sbb
orb
xchg
and
jnp
jns
loop
push
jge
enter
mov
int3
int
scas
movsl
dec
sbb
andl
xchg
mov
repz
or
stos
stc
decl
in
mov
xchg
popa
lret
subb
aas
jle
or
scas
sti
mov
in
je
adc
outsl
pop
repz
leave
inc
cltd
movsb
lret
inc
mov
xor
gs
clc
pushf
mov
fcmovb
out
clc
fisttps
mov
adc
cmpb
xor
cld
jo
rcrl
std
gs
popf
ret
push
stos
push
mov
sub
dec
sub
push
mov
sub
clc
cmpsb
xchg
jmp
outsl
add
out
in
push
xor
mov
test
inc
mov
xchg
in
jmp
jno
cmc
ljmp
lahf
adc
jle
ficompl
mov
jo
aaa
cmp
pop
out
sbb
mov
mov
repz
mov
lds
mov
sbbl
in
push
js
insl
shr
and
pop
mov
mov
jmp
enter
test
pop
dec
js
jb
sub
jl
pop
cmp
cltd
mov
notb
sbb
mov
push
sbb
iret
filds
cwtl
sub
cli
ljmp
jnp
pusha
out
hlt
fdivr
js
out
jbe
out
sub
sub
sbb
sbb
inc
cmp
and
frstor
cmp
push
fidivrs
jl
jge
jbe
cmpsb
aas
jb
mov
jns
cli
cmp
adc
xor
inc
xlat
cli
fmull
scas
push
sbb
sub
push
mov
adc
clc
sbb
imul
xor
adc
mov
mov
mov
idiv
ret
int
mov
add
xchg
cwtl
cmp
sbb
movsb
pop
jle
xor
xorb
mov
stos
sub
mov
orl
mov
jb
cli
test
dec
mov
ss
mov
lock
cmp
mov
fdivrs
dec
int3
mov
imul
mov
mov
mov
mov
cmp
fs
push
cmp
push
inc
roll
in
gs
push
stos
movsl
mov
inc
pop
mov
test
dec
lahf
mov
cmpsb
rcrl
xchg
sbb
stc
xor
std
int
mov
xor
push
loopne
mov
ja
lea
mov
sub
mov
inc
clc
push
enter
lret
ss
cmpsb
inc
mov
push
fcomps
and
dec
pop
lahf
aaa
push
xchg
jge
pop
call
mov
inc
rclb
les
andl
mov
jle
sbb
inc
sbb
cld
mov
push
popa
add
pushf
notl
lret
mov
push
mov
jle
aad
sti
gs
jne
scas
fisttps
mov
and
mov
mov
xchg
mov
into
push
stos
repnz
sub
rorb
mov
mov
aad
and
mov
dec
pop
les
xchg
imul
cwtl
push
jl
push
jle
enter
lcall
ljmp
cmp
xchg
pop
lock
cwtl
scas
xchg
push
xor
adc
cmc
sbb
aas
fdivl
in
out
and
repz
arpl
cmp
lahf
xchg
mov
sahf
aaa
sub
sbb
clc
cwtl
fldenv
loopne
sbb
bound
pop
adc
mov
or
pop
mov
jp
push
xchg
cmp
mov
mov
add
cmp
cs
out
pop
adc
add
or
loopne
es
incb
jp
sub
lret
movsb
pop
ljmp
data16
xor
add
sbb
leave
sar
sub
or
mov
jne
mov
jns
out
cmp
cmpsl
push
sub
test
pop
pop
ds
jecxz
mov
insb
insl
mull
xor
inc
mov
xchg
lods
sti
adc
sbb
je
mov
je
pop
cmpsl
jnp
and
loopne
adc
xchg
xor
sti
fldt
mov
jp
ds
cmc
sub
xchg
inc
pop
ss
fadds
mov
sbb
leave
xor
mov
in
push
movsb
pop
jl
add
push
scas
cmp
sbb
ds
sbb
sub
push
xchg
cmp
fmuls
adc
xchg
nop
cwtl
sbb
enter
pop
pop
dec
nop
int3
jns
lret
mov
and
das
cmp
stos
mov
repnz
mov
idiv
dec
repnz
js
stos
subb
fs
inc
scas
loope
lock
mov
push
xlat
ja
xchg
stos
sbb
clc
cmp
lds
sub
cmp
fisubrs
pushf
and
xchg
adc
enter
popa
xor
in
jae
add
sub
lahf
jg
lcall
mov
xorl
or
adc
fldcw
push
and
adc
sbb
mov
stos
cmpl
mov
push
mov
sub
cld
pop
inc
sbb
pop
bound
cmpsl
jg
movsb
mov
adc
xlat
mov
sbb
pop
cmp
movsb
js
pop
sbb
icebp
xor
mov
mov
fiaddl
fisubrl
sbb
test
mov
int3
xlat
sarl
insb
cmp
and
stos
sti
xlat
mov
lock
xor
xchg
stos
std
lods
and
sub
adc
pop
cs
cmp
sti
sti
mov
add
repnz
inc
push
xor
pop
pop
mov
push
xchg
lahf
mov
pushl
out
lock
jl
orb
push
mov
or
sbb
add
mov
jle
xchg
mov
cltd
out
scas
add
pop
or
jmp
loope
es
shlb
jo
xor
mov
sbb
mov
xchg
cld
sbb
nop
lret
out
enter
pop
ficomps
xchg
mov
push
lock
cmc
shll
clc
aas
jb
jbe
cmc
xchg
cmp
ds
sti
jbe
sahf
or
pop
cmp
pop
cli
fdivr
ror
or
call
xor
lea
test
cmp
int3
push
push
mov
es
adc
fistps
fcompl
and
dec
push
mov
add
mov
sti
jae
rep
ret
arpl
out
mov
enter
xchg
cli
cltd
pop
sbb
jmp
cmpsl
cmpsl
mov
xchg
and
stos
sbb
pushf
sti
out
call
jge
push
push
in
mov
xchg
fs
cmpb
addr16
pop
mov
dec
sub
ds
imul
xchg
rol
loope
and
out
and
xor
call
in
data16
ret
iret
xor
cmp
jne
cmp
call
mov
pop
push
movsl
push
mov
pusha
pop
jp
cli
fadds
xor
das
or
and
inc
pushf
pop
outsb
std
mov
jp
jle
aad
fbld
mov
stos
xchg
pop
fst
jo
jmp
int
xor
pop
rolb
and
push
cld
call
pop
pop
jns
aas
mov
and
add
ss
mov
mov
testb
pop
sbb
jp
idivl
mov
mov
mov
std
adc
mov
rorb
inc
xchg
cmp
sbbb
test
mov
lea
and
mov
mov
adc
sub
mov
push
adc
or
jbe
sbb
les
cli
sbb
or
das
mov
fwait
xchg
pop
pop
clc
mov
loope
xchg
cmp
fstl
jg
jl
inc
cwtl
rorl
dec
fadd
and
and
mov
xchg
xchg
pop
mov
lcall
std
jb
cltd
hlt
test
jne
stc
mov
dec
notb
scas
xchg
lcall
sub
pop
in
pop
jl
mov
shll
pop
xchg
sti
aaa
sbb
aaa
das
mov
lock
sbb
fnstcw
fmull
xchg
jbe
scas
cmpsl
pusha
push
imul
mov
cmp
lods
loopne
rcrb
inc
fldenv
daa
jecxz
rcrb
pop
lock
int
xor
cmp
cli
mov
cld
inc
pop
or
nop
pop
mov
add
push
cli
adc
cmp
stos
shrb
fwait
mov
cli
sti
sub
and
pop
pushf
and
xchg
jae
ljmp
jle
inc
enter
xchg
fwait
pop
pop
mov
cwtl
xchg
xor
sub
fdivrs
out
jmp
and
or
js
fwait
movsb
mov
and
pop
sahf
ss
push
jle
jns
pop
and
mov
dec
mov
test
cltd
bound
movsl
mov
adc
pop
lcall
add
enter
int3
mov
ds
sarl
xor
jge
cmp
or
sub
sub
sub
mov
sti
push
lock
sahf
mov
sahf
rolb
cmp
jl
sub
rclb
sub
std
nop
dec
andl
imul
sub
inc
dec
and
ja
fcompl
xchg
push
xchg
call
adc
mov
insl
cmp
mov
clc
sub
push
sub
fists
repz
cmp
aad
cmpb
push
adc
in
and
sub
sbb
jno
fsts
aas
repnz
scas
gs
cmp
adc
adc
scas
sti
ja
lds
adc
out
sbb
push
fildl
jne
or
pop
cmovb
adc
pushf
int3
std
sbb
or
push
daa
movsl
sti
roll
iret
xchg
aaa
push
cmp
sti
inc
fld
and
les
cwtl
fwait
pop
int3
mov
mov
lods
push
je
je
fcoms
arpl
sbb
dec
mov
test
pop
shlb
in
pop
add
cmpsb
mov
lock
scas
xchg
stc
jge
notb
sbb
ds
sbb
add
add
aas
fisubl
or
loopne
cmp
roll
push
jmp
icebp
sbb
mov
sbbl
aad
sbb
inc
or
test
xchg
inc
mov
aas
inc
aas
mov
in
incl
insl
or
jp
fmull
adc
pushf
es
xor
aam
mov
jmp
pop
cmp
xor
test
popf
cmp
dec
cmp
mov
mov
and
scas
movsb
out
ja
nop
cwtl
test
nop
fidivrs
jbe
arpl
push
les
rcrb
pushf
sbb
mov
sbb
mov
pop
mov
pop
xor
xchg
mov
fisubrl
out
cmpsl
cwtl
sti
push
mov
mov
xor
mov
pop
xlat
aam
inc
pop
les
adc
cmc
sbb
movsl
jnp
pop
xchg
aad
jl
pop
enter
test
jg
adc
jmp
rcrb
cmp
je
int3
push
movsl
pop
movsl
jnp
pop
mov
dec
lret
mov
dec
movsb
xlat
cli
adc
xor
jne
cmp
out
mov
div
cwtl
mov
inc
fsubs
stos
daa
enter
imull
sar
ljmp
push
insl
adc
lahf
adc
cltd
sub
and
mov
mov
rcr
pop
outsb
push
fcmovnb
int3
adc
and
jp
fdivr
push
rorb
in
xchg
mov
xchg
xor
js
xor
scas
popf
adc
rorl
jmp
sarb
dec
pop
icebp
add
add
popa
scas
mov
adcb
aas
xor
cmpsb
pop
mov
clc
fadd
daa
aas
adc
lahf
aaa
sar
ror
in
pop
out
lcall
pop
out
das
pop
ljmp
cmp
fists
or
movsl
sti
xor
mov
mov
rcl
mov
xchg
ljmp
add
jns
mov
xor
sbb
mov
jecxz
or
sti
pop
dec
cwtl
sbb
mov
or
push
sbb
mov
pop
sub
jmp
xchg
mov
je
push
int
fsubr
leave
adc
and
int3
jb
sbb
sbb
pop
cmc
mov
icebp
loope
fwait
aad
dec
aad
test
or
arpl
mov
and
repnz
add
xlat
mov
or
and
adc
in
mov
xchg
cmp
cwtl
cmp
jne
test
shrb
jns
pop
sbb
xor
jle
mov
cli
inc
fistpll
xor
mov
aas
cmp
and
outsl
sub
xchg
lcall
cli
mov
cmp
mov
mov
cmp
imul
jbe
mov
bound
or
out
pop
and
in
sbb
rcrl
pop
ljmp
outsl
cmp
gs
cs
je
xor
sahf
add
or
sbb
pop
adc
dec
sbb
add
sti
push
daa
xlat
xor
or
mov
cwtl
dec
xchg
sti
scas
test
cmp
outsl
sub
cwtl
inc
fidivrl
jmp
inc
cltd
add
push
mov
lcall
mov
pop
push
xlat
fcoms
out
pop
add
xor
fcomip
and
mov
ljmp
xchg
test
lods
sbb
fisttpl
push
push
and
push
mov
mov
lods
pop
xor
clc
lods
je
cmp
call
dec
push
outsb
jp
fprem1
jp
mov
add
hlt
shlb
cld
jbe
cwtl
cwtl
adc
jmp
pop
outsl
xor
lret
inc
push
ret
arpl
enter
jle
sub
int3
mov
cltd
ds
xchg
cmp
lods
push
stc
std
push
jno
mov
sbb
xorl
jnp
push
push
cmp
daa
test
jmp
pushf
pushf
sbb
xlat
or
xor
dec
ja
sbb
insb
push
xor
out
adc
aaa
cmp
jb
mov
pop
js
cwtl
outsl
jb,pt
pop
icebp
in
out
hlt
adc
cmp
aad
sbb
js
and
dec
andb
test
dec
mov
aas
sub
cmc
mov
inc
mov
out
xchg
mov
lret
in
jns
shl
in
pushf
dec
push
cmp
add
xor
sbb
sti
mov
lods
xchg
jle
scas
cmc
fdivr
out
mov
stc
push
sti
fwait
mov
das
xor
sti
decb
iret
xchg
mov
imul
sbbl
dec
mov
fwait
cwtl
push
xchg
clc
mov
xor
or
cwtl
scas
sub
dec
xchg
fdivrl
xchg
push
faddl
enter
pop
inc
rcrb
cli
icebp
mov
bnd
xchg
xchg
push
push
jnp
aad
xchg
xchg
and
mov
mov
imul
rorl
mov
repz
sarb
push
inc
sub
jg
push
int
movsl
dec
lea
mov
lea
mov
sarb
sbb
lcall
andb
sti
inc
and
lahf
in
test
rcrl
inc
push
lods
mov
pop
movsb
cmp
dec
movsb
cmpsb
adc
pop
insl
ret
idivb
xlat
aad
sub
insl
dec
adc
roll
jae
pushw
insb
lahf
pop
das
call
lods
cwtl
sub
sub
jns
mov
mov
mov
jb
cwtl
pop
pop
xchg
mov
or
ffree
int
lret
push
jl,pt
ljmp
adc
cmpsl
ret
add
scas
sahf
and
push
es
pop
inc
add
inc
cmp
or
dec
shrb
fadds
sahf
addr16
sbb
adc
xchg
xor
sbb
cld
pusha
in
mov
lcall
fldl
or
aas
sbb
js
adc
sub
roll
arpl
cwtl
inc
xchg
pop
cwtl
jnp
aad
out
jl
mov
sbb
int3
lahf
clc
pop
movsl
je
stos
cmpsl
loopne
test
xor
pop
out
fsubrs
fiadds
sub
xchg
sbb
sub
mov
mov
pop
jnp
push
ds
pop
inc
xchg
mov
ja
dec
sbb
jge
jmp
je
xchg
xchg
movsl
pop
inc
fcoms
mov
std
dec
cmpb
push
or
adc
iret
jmp
gs
cmp
loop
jge
cld
sti
cli
add
rcll
cli
mov
leave
loopne
or
cltd
cmp
inc
and
mov
cmc
dec
cli
call
mov
out
pop
outsl
xchg
ds
pop
mov
imul
cs
sub
push
fwait
or
fwait
aam
jge
out
inc
lret
mov
pop
pop
hlt
adc
xchg
and
mov
inc
icebp
xchg
pop
pop
sbb
push
movsl
xor
rolb
xchg
sbb
inc
int3
mov
jmp
stc
mov
or
les
scas
es
or
mov
cltd
cmp
xchg
mov
in
fsubs
push
mov
mov
lret
scas
or
pusha
call
incb
pop
test
sbb
xor
xor
int3
fldcw
addb
cmp
push
cmpsb
add
pop
push
sub
es
idivb
aam
inc
stc
sub
xchg
loope
hlt
mov
neg
dec
andb
mov
push
fstp
jg
adc
in
jno
lcall
mov
dec
cwtl
adc
sub
lds
inc
shlb
insl
cld
stos
pop
and
mov
sbb
jecxz
stos
mov
in
test
dec
cwtl
loop
push
add
mov
lods
cld
sbb
test
inc
or
out
inc
cmp
movsb
gs
pop
xor
push
stos
xchg
movsb
mov
add
and
dec
mov
pop
clc
push
mov
loopne
sbb
sbb
mov
daa
pop
push
inc
xor
mov
out
in
xchg
hlt
pop
jae
fistpl
jns
test
xchg
xchg
sub
popf
xor
sahf
out
ss
lods
imul
pop
cld
divb
out
push
xorl
lret
cmp
out
cwtl
push
xchg
insb
aas
faddl
or
xor
outsl
sbb
adc
inc
lods
mov
aas
sbb
sbb
jo
xchg
out
outsl
jae
push
mov
mov
xchg
xchg
fcomps
test
loopne
mov
adc
lods
xchg
out
insl
jo
mov
filds
pushw
decl
jb
imul
and
adc
jg
mov
push
aam
scas
icebp
sbb
push
ret
mov
movsb
mov
mov
push
into
mov
dec
mov
cmp
cmpl
dec
or
sti
fs
jno
es
stc
sar
lock
lahf
sbb
pop
mov
sub
mov
leave
cltd
jo
mov
test
lcall
nop
stc
push
push
hlt
test
iret
cmpsb
imul
adc
xor
mov
loopne
aas
mov
test
cli
cmp
mov
icebp
movsl
push
pop
mov
cwtl
mov
jg
fcompl
mov
inc
cmp
cmc
mov
or
mov
jg
mov
pop
das
dec
and
jb
sub
into
mov
cld
hlt
adc
scas
test
push
sbb
mov
cli
or
xchg
sbb
in
imul
scas
hlt
je
call
adc
mov
xchg
arpl
mov
push
mov
adc
cmc
cwtl
shr
mov
xchg
fcmovnu
mov
cmp
loopne
stos
fidivs
cmpsl
sbb
sbb
stos
dec
sbbb
pop
sti
insl
push
push
jo
movsl
std
fisubs
out
mov
push
sub
loope
fldt
adc
lcall
jp
outsw
push
flds
push
xor
adc
sbb
mov
or
pop
lods
cmpsb
loope
jge
add
adc
sbbl
or
shll
mov
jns
sbb
aaa
loopne
or
mov
jae
ret
hlt
icebp
es
mov
enter
pop
fcmovnb
sub
lahf
sub
clc
movsl
mov
or
sub
notb
lea
in
xchg
sbb
mov
lcall
dec
fimuls
vunpcklps
or
mov
popf
push
cld
fs
xchg
mov
ljmp
pushl
push
mov
ret
pop
sbb
dec
aam
adc
jl
clc
xchg
fsubs
push
xor
sub
fwait
cmpb
sbb
lret
xor
xchg
push
mov
scas
and
pop
lds
out
push
enter
jmp
leave
ja
cmp
xchg
sbb
add
pop
out
cwtl
ljmp
iret
or
sti
push
cmp
pop
insb
push
test
jge
cli
sbb
xchg
sti
adc
decl
push
add
or
movsl
lcall
inc
cltd
lret
pop
mov
lods
aaa
mov
cmp
pop
lds
jae
ret
ficoml
repnz
cmp
jo
lahf
and
repz
cld
ljmp
cmp
push
fstl
dec
add
pop
xchg
pop
enter
in
mov
cmp
push
lea
jge
in
jp
add
clc
or
push
iret
adc
out
dec
scas
adc
roll
daa
or
jmp
sbb
mov
fmull
pop
pop
cmp
aam
sub
push
mov
jno
xchg
xor
das
xchg
inc
push
inc
xchg
jg
xchg
mov
jae
iret
push
lcall
js
scas
pop
cwtl
jb
sbb
xchg
sbb
subb
jg
imul
testl
cmpl
jl
shrl
fbld
fldt
pusha
mov
cli
push
addr16
inc
pop
mov
test
jbe
fstps
dec
cmp
xchg
mov
daa
leave
mov
call
lret
fs
pop
repnz
jb
mov
xchg
aaa
repnz
std
sbbb
aas
mov
pushf
sbb
test
add
in
sbb
mov
clc
jge
add
je
adc
dec
inc
nop
pop
pushf
pop
popf
int3
pop
xchg
aad
mov
cmp
cli
aas
mov
jo
ss
in
sub
cld
sbb
cmp
cli
pop
aad
jbe
pop
into
and
aam
or
mov
andb
cmp
push
in
push
ret
rcll
mov
movsb
pop
stos
cmp
sahf
jnp
fs
xchg
pop
ljmp
push
std
jp
wrmsr
das
jl
fisttpl
popl
xchg
lods
aas
push
ret
stos
lock
xor
fidivl
mov
cwtl
stc
icebp
sub
xchg
les
or
into
ss
xlat
ljmp
cmp
sbb
out
js
push
mov
pop
lods
nop
and
pop
int3
cli
int3
cmp
push
jo
and
mov
adc
mov
mov
ss
cmp
inc
addb
mov
sbb
iret
aas
scas
xor
jbe
out
mov
addr16
or
int3
sub
adc
repnz
jne
jle
int3
fsts
xor
scas
jg
mov
jnp
xor
cmp
in
xchg
cli
in
daa
inc
mov
scas
adc
mov
pop
mov
xchg
mov
adc
scas
jno
pop
clc
cmp
mov
mov
dec
push
adc
gs
sub
fstps
ja
lds
cmp
sbb
insl
sbb
js
push
out
lea
mov
stos
dec
ret
nop
jl
cmp
adc
jg
mov
cmp
je
jns
inc
outsl
repnz
xor
pop
nop
in
pop
mov
cmp
ss
jo
inc
cld
scas
fwait
mov
addr16
ss
mov
inc
gs
jge
xchg
cwtl
jl
test
mov
and
arpl
jbe
jmp
jae
jp
sub
mov
clc
scas
call
mov
mov
jnp
mov
andb
out
aaa
addr16
dec
sahf
jg
fcomps
repnz
mov
scas
sbb
jl
adc
sub
xor
push
decb
dec
cld
movl
mov
fdivrl
jecxz
jno
adc
shll
and
mov
push
and
clc
push
movsl
sub
inc
leave
pop
shlb
sub
fisttpll
push
mov
data16
outsl
lods
jo
adc
fcmovnu
stos
test
xchg
sbb
dec
scas
loop
inc
cmpl
nop
fdivrl
shr
mov
orb
fisubrs
jp
stos
aad
cwtl
sub
imul
mov
jb
push
test
scas
enter
jnp
mov
add
jecxz
adcl
and
std
imul
add
mov
adc
cld
int
es
mov
mov
xor
in
iret
push
addr16
inc
addb
push
fabs
cwtl
cltd
das
loope
mov
cli
push
mov
lods
adcl
mov
sub
cltd
jnp
mov
mov
mov
out
mov
mov
jmp
jle
ja
insl
push
scas
test
inc
outsl
jp
int
sbb
jg
xchg
or
frstor
mov
pop
test
test
lahf
mov
stos
cmp
mov
xor
push
push
add
ss
push
mov
lods
jnp
frstor
pop
sub
sub
jg
pop
js
into
movsl
inc
xorl
sbb
lock
jle
pushf
jns
call
sub
pop
adc
sahf
pop
in
sbb
sbb
loope
fsub
inc
jns
sbb
insb
push
inc
out
mov
xchg
stos
rcrb
inc
pop
inc
fsts
push
mov
sbb
inc
repz
mov
lods
notl
fnstsw
cmpsl
add
mov
aas
lea
mov
aad
es
fmul
push
enter
lock
fwait
mov
sbb
mov
aas
adc
call
outsl
sub
sbb
cmp
psubb
sbb
sub
cwtl
xor
testb
sahf
lahf
inc
js
and
and
lret
xor
pop
mov
and
pop
das
test
push
and
and
sbb
jmp
pusha
mov
pop
cmp
jno
add
imul
add
iret
repz
mov
rcrl
aas
das
cmpsl
mov
ficompl
sarb
xor
das
es
clc
fstpl
ret
adc
mov
cmp
ficoms
mov
aas
jno
pop
or
test
arpl
xchg
pusha
inc
int
jp
add
add
fidivl
ljmp
repnz
dec
loop
cmp
stos
hlt
pusha
mov
mov
jg
adc
es
cmp
aas
sub
mov
sbb
add
and
sbb
xchg
shrl
lds
mov
pusha
cmp
lock
and
xorl
mov
pop
std
andb
cld
cli
fdivrs
jns
sub
test
jbe
xchg
jle
xor
cwtl
adc
scas
enter
add
stos
push
jl
lds
fwait
aaa
movsl
daa
xchg
xchg
nop
cltd
hlt
xor
div
stos
xchg
fisttpll
dec
xchg
orb
pop
out
inc
cmp
and
dec
cmc
stc
sbb
xor
xchg
lods
lahf
jae
push
mov
sti
push
es
mov
movsb
jnp
xchg
cmc
dec
pop
add
sbb
or
int3
mov
xor
outsb
pop
jge
adc
imul
or
pop
sbb
scas
mov
mov
mov
imul
repnz
ljmp
fstsw
test
mov
je
jmp
pop
pop
xchg
jmp
test
or
inc
pushf
ret
xchg
mov
mov
ljmp
test
cmp
mov
cmp
or
dec
imul
mov
lea
push
dec
mov
aas
imul
xchg
insl
fidivs
movsl
lret
jge
pop
sub
sub
cmp
jae
mov
cwtl
jnp
push
jl
adc
ljmp
ss
mov
sbb
fcomps
jmp
xchg
mov
pop
xchg
je
stc
fwait
mov
sbbl
sbb
cmp
sbb
clc
pop
fcoms
mov
int
mov
js
pop
fmul
or
jb
and
sub
rolb
xchg
daa
lods
pop
mov
hlt
leave
xchg
lahf
je
lret
sub
stos
sbb
dec
mov
or
das
ret
dec
outsb
divl
leave
test
xchg
ret
push
xchg
add
and
pop
mov
pop
mov
inc
dec
push
xchg
ja
repnz
dec
fcmovu
pop
cmp
gs
push
add
inc
mov
cmp
xchg
out
orb
cmp
xchg
push
test
inc
test
in
add
push
jle
cmp
in
cmp
xor
adc
insl
in
dec
jle
out
push
loopne
mov
jp
sub
stc
mov
adc
es
jnp
loope
and
je
js
adc
dec
rclb
repz
es
sbb
dec
xchg
out
sbb
jp
pushf
push
push
adc
push
bound
call
dec
push
lcall
xor
push
mov
cmp
test
call
jge
cwtl
fadd
es
and
movsb
aas
rcrb
mov
inc
pop
or
and
stc
outsb
adc
pop
ds
cmc
sbb
xchg
into
xor
pushf
movsl
cmp
lret
cmpb
lahf
out
xor
fucomi
fadds
sbb
mov
mov
mov
cmpsb
adc
mov
cmp
fldcw
scas
fs
sub
push
add
cmp
and
popaw
mov
ret
pop
adc
sub
pop
cld
cmp
mov
mov
sbb
dec
into
mov
xchg
js
and
data16
cltd
jne
push
loope
rolb
mov
mov
repnz
negl
sub
outsl
out
cld
sbb
lcall
ficomps
xchg
pop
fwait
jecxz
fcompl
enter
add
adc
mov
inc
jno
push
push
xchg
rep
sbb
mov
sbb
repnz
mov
push
arpl
shrl
xor
mov
mov
sti
js
out
fistpl
fidivrs
adc
es
sbb
sub
add
mov
out
ds
jl
in
jno
jmp
or
jo
lcall
ret
ror
xchg
stc
mov
aas
push
dec
mov
sbbb
aas
stos
lds
jp
jl
inc
jle
loopne
add
mov
and
out
dec
stc
xor
in
mov
rolb
fisubl
jae
dec
aam
sub
mov
fldl
add
jl
pop
sub
sub
pop
scas
rorb
mov
push
clc
mov
fs
mov
lcall
jnp
into
ljmp
sbb
mov
or
icebp
sub
mov
imull
popa
stos
sti
push
push
jl
outsl
jle
lock
cld
inc
incb
daa
mov
fs
gs
and
fsubrl
fsubl
xor
fstps
cmc
orl
pop
scas
xchg
test
pop
mov
lods
loope
das
aaa
js
aam
orl
add
aas
mov
aam
enter
nop
push
mov
mov
mov
cmp
mov
sub
popf
mov
mov
xchg
add
dec
outsl
xchg
test
sbb
push
jbe
mov
int3
sub
mov
xor
fdivs
inc
insb
movsb
push
jmp
out
ljmp
enter
mov
lods
mov
lahf
inc
nop
sbb
pop
inc
ja
rolb
mov
mov
xchg
pop
pop
lcall
adc
push
aad
lret
mov
insl
adc
push
in
mov
sub
setle
sub
in
mov
or
push
push
push
popf
xchg
call
push
je
jae
int3
adc
stos
pop
mov
mov
movsl
and
repnz
mov
sbb
mov
cmpsl
das
out
xchg
cmpl
adc
test
popa
stos
mov
lcall
jecxz
cmp
dec
int3
roll
cld
push
push
xchg
cld
enter
mov
adc
cmp
jp
and
xchg
cmp
pop
jecxz
fmull
or
dec
out
jns
jns
rcr
xchg
nop
adc
cmp
mov
mov
cmp
cmp
push
push
mov
cmp
add
fists
aam
add
shl
cwtl
pop
sti
jecxz
int3
pop
sarb
movb
or
es
out
ss
jl
jae
ss
rol
push
and
fs
mov
jbe
and
xchg
xor
jle
ss
mov
mov
mov
cmp
jnp
gs
fwait
adc
pop
mov
das
pop
cmp
mov
xchg
jg
mov
inc
bound
test
xor
pop
ror
pop
xchg
test
imul
aas
mov
lds
mov
fwait
sub
fisubl
push
fwait
jns
push
incb
sub
mov
das
lea
push
iret
jg
ficoml
xor
add
sbb
xor
out
test
decl
mov
inc
mov
daa
mov
mov
sti
lret
adc
in
push
out
es
mov
nop
lock
aam
cwtl
push
push
sti
push
cmpsb
sub
mov
xchg
fdivs
pop
ficoml
pusha
mov
cltd
es
mov
rorl
aam
and
xchg
mov
fiaddl
clc
aaa
inc
fwait
mov
dec
xchg
lock
lcall
aas
sbb
aaa
xor
lds
sbb
test
jecxz
aas
jg
sbb
icebp
and
std
cmpsb
xchg
push
addr16
pop
inc
je
pop
ds
inc
mov
lea
sbb
mov
shlb
insb
pushf
sbb
sbb
sub
pop
xor
adc
mov
xchg
sbb
cmp
mov
jl
mov
push
sub
mov
ljmp
ss
fldenv
and
movsl
out
popa
xor
and
push
lock
in
sbb
aas
pop
jns
or
scas
cmp
push
mov
addr16
sbb
fsubrl
fisttpl
pop
mov
cmp
mov
loope
lods
sub
pop
jle
pop
lret
adc
cwtl
jnp
adc
xchg
mov
stos
test
fldcw
je
dec
jnp
in
cmp
adc
mov
fstl
mov
jecxz
jg
mov
adc
sbb
ret
sub
and
mov
mov
mov
mov
sbb
pushf
stos
mov
xor
pop
fmuls
ret
xchg
push
mov
test
sti
xor
fistpll
sbb
sahf
stc
mov
imul
lock
xchg
clc
es
fs
in
popf
cmp
cwtl
iret
and
adc
fdiv
mov
sub
mov
add
jno
mov
sub
mov
xor
leave
dec
lods
jl
cld
xchg
sub
mov
and
subb
cmpsl
aas
cwtl
cmp
mov
sbb
xchg
mov
push
mov
xlat
arpl
and
mov
mov
js
or
movsb
cltd
sbb
cmp
ds
xor
decl
mov
mov
pop
mov
push
sbb
ret
jp
cmp
and
add
jo
shlb
bound
ret
jg
inc
or
mov
ss
rcrb
mov
mov
jp
stc
cmp
daa
out
push
jle
cmp
rorb
pop
jp
movnti
mov
shrl
and
test
mov
scas
cmc
frstor
sub
pop
cmpsb
sbb
jns
xor
push
add
jg
mov
push
sbb
js
test
out
adc
and
pushf
cwtl
sbb
fld
es
sub
xchg
test
mov
adcb
jmp
mov
fcoml
lock
mov
jl
dec
hlt
pop
mov
inc
dec
js
ficoml
mov
mov
scas
js
sbb
lret
adc
fidivl
mov
mov
stc
push
out
jns
insl
dec
or
sysexit
mov
in
aas
and
jge
mov
cmp
fadds
jle
addb
xchg
cwtl
push
xchg
mov
mov
pop
or
sub
inc
pop
fdivrl
push
scas
jnp
sbb
loopne
pop
mov
push
mov
push
jne
cmp
mov
sahf
test
and
mov
sbb
sbb
xchg
fiaddl
pop
aas
mov
in
add
cmp
mov
xchg
rcrl
inc
cmp
jo
fbld
xor
or
decb
mov
sbb
int3
sbb
mov
es
mov
enter
into
lret
mov
inc
in
push
and
pop
ret
and
ret
dec
pop
fmull
sub
imul
mov
test
cmp
imul
dec
repz
mov
dec
sbb
stos
cltd
push
cwtl
negb
ds
lds
jbe
mov
pop
in
fs
xchg
cwtl
cmp
jne
pushf
aaa
repnz
andl
mov
xor
das
push
faddl
sbb
and
sbb
imul
lock
popa
lea
or
mov
adc
loop
xor
pop
inc
loop
in
mov
push
push
or
into
and
pop
loope
cmp
xchg
cwtl
mov
lods
arpl
arpl
and
push
insl
out
jmp
mov
lcall
sbb
scas
pushf
hlt
mov
mov
xchg
xchg
ficomps
cwtl
hlt
fadds
and
mov
aas
outsb
xor
mov
jo
cmpsb
decl
cmp
dec
fdivl
aad
out
pusha
inc
push
ss
lods
outsl
xchg
push
pop
addb
xchg
jle
mov
mov
adc
lahf
mov
sbb
mov
out
cmpsb
pop
iret
pushf
das
mov
dec
add
cmp
xchg
cmpsl
jecxz
mov
aas
mov
cmp
fidivrl
fistpll
inc
pop
fdivrp
or
clc
fsubs
sbb
scas
xchg
stc
mov
decl
sub
sub
cwtl
xor
hlt
sbb
mov
stos
je
push
js,pt
or
pop
xchg
aam
sti
jg
or
testb
aas
loop
sbb
xor
pop
sti
lock
data16
cli
sbbb
jl
xor
lcall
sbb
pop
js
add
lods
les
int
sbb
cmp
jno
outsl
outsb
aas
cmp
cs
sbb
clc
cmp
or
inc
test
xor
cmp
cli
dec
mov
cmpsb
sti
fisubrl
fcomi
pop
push
cltd
fistps
ja
popa
jbe
scas
cmp
fisubl
adc
pop
mov
in
test
mov
mov
or
icebp
fsubrs
test
cwtl
mov
push
in
int3
test
pusha
jnp
in
andl
mov
es
std
jbe
pop
cmpsl
out
sbb
outsb
pop
sarl
xor
push
test
jbe
dec
pushf
out
popf
mov
cmp
outsb
fildl
mov
pushf
dec
cmpsl
sbb
mov
into
and
jbe
outsl
addl
mov
subl
cwtl
pop
out
ret
cli
nop
mov
mov
popf
dec
shr
stos
rcr
xorl
mov
ss
cwtl
jnp
jno
and
jnp
xchg
and
push
aas
dec
fidivrl
mov
jo
scas
lock
pop
test
jo
cltd
clc
js
stc
cmp
pop
into
inc
mov
mov
add
addr16
lds
sarb
lods
repz
dec
push
filds
adc
xchg
fisttpl
lods
aas
orb
stos
filds
inc
mov
cmp
push
lock
mov
push
leave
nop
pop
ret
jae
push
push
jbe
enter
loopne
dec
mov
inc
dec
and
fstpt
imul
nop
fcomps
push
lcall
mov
mov
sbb
cmp
pushf
fisubrs
orb
or
mov
enter
cld
cmp
scas
scas
lahf
scas
test
clc
add
pop
jle
xor
loop,pn
movl
cmp
pop
adc
daa
les
int3
and
mov
push
push
jmp
inc
std
pushf
jo
xchg
scas
push
adc
fdivrs
scas
lahf
je
push
loope
fldt
in
jno
xorl
mov
sbb
xchg
shrl
cmc
ljmp
xchg
jnp
ljmp
loope
aas
ret
xlat
push
pop
pushf
pop
outsl
adc
aad
mov
es
cmp
adc
adcb
test
addr16
mov
pop
ja
fadds
inc
xorb
mov
sbb
jae
out
mov
lea
call
aas
stc
cld
scas
sahf
stc
cli
mov
dec
sub
fadd
subl
mov
int
mov
push
fildl
sub
cwtl
jae
mov
or
into
mov
sti
mov
cs
out
fsubr
movsb
or
sbb
mov
jae
jmp
les
jnp
shr
cmp
fsubrl
ret
jmp
pushl
aad
sti
aaa
cmpsl
ret
cld
popf
mov
call
in
popf
cmp
fwait
sti
fistps
pop
lock
xor
mov
xchg
inc
cmc
repz
scas
or
push
lret
kaddw
loope
xor
call
arpl
pop
mov
pushf
jno
mov
stos
imul
mov
gs
imul
fistl
mov
movsl
sti
out
fcoms
ds
push
roll
sbb
dec
insl
shll
cmpsb
sti
mov
dec
ljmp
fbstp
and
jnp
cs
jne
xor
fcomps
or
mov
mov
cmp
mov
pushl
shll
fadds
sbb
add
cmp
cmpsb
jns
inc
out
lods
dec
lret
hlt
nop
xchg
adc
mov
aaa
push
dec
enter
hlt
adc
mov
and
mov
sbb
in
sbb
negl
pop
xchg
arpl
lods
shlb
or
movsb
test
daa
and
mull
xlat
pop
arpl
and
pushl
mov
pop
test
lret
pop
or
mov
cmp
pop
lods
sti
aam
xchg
int3
adc
inc
cmpsl
dec
les
pop
cmpsb
mov
xlat
sub
xchg
mov
pop
adc
dec
fcomi
ds
lea
jp
jmp
hlt
mov
cltd
cltd
jnp
push
rclb
or
or
push
es
or
inc
cli
sbb
push
divb
fmull
call
cmp
add
cmp
jnp
rclb
jl
incl
push
addb
call
rolb
sbb
lds
inc
or
stc
js
aas
xchg
cmp
and
pushf
mov
out
mov
jnp
sub
adc
pop
cltd
adc
or
pop
shl
and
call
lcall
pop
xchg
loopne
lock
aad
dec
sub
xchg
push
int
gs
pop
clc
sti
and
ja
jle
xlat
xchg
cwtl
orb
aas
repz
lock
out
fdivrs
sbb
shrl
mov
ljmp
sbbl
mov
ffree
fdivl
mov
xor
xor
test
pushf
mov
and
fdivrl
repz
out
mov
jbe
or
mov
hlt
es
fidivrs
mov
std
lods
pop
pop
push
pop
clc
rorl
jg
rcl
loope
and
mov
je
test
inc
mov
jo
jo
ret
frstor
mov
jg
rol
pop
daa
mov
fcoml
xor
ffree
pop
and
jmp
clc
mov
repnz
cs
lcall
sti
pop
inc
test
push
jle
in
das
movsb
mov
movsl
pop
inc
mov
lret
add
mov
scas
mov
mov
dec
loop
or
or
or
cmp
int3
jb
mov
sahf
rcrb
mov
cmpsb
mov
adc
xchg
jae
aas
popf
add
lea
cli
cmp
mov
and
icebp
aas
adc
mov
hlt
sbb
push
das
fsubl
nop
push
enter
fldenv
sub
mov
dec
add
test
aad
mov
cmp
pop
mov
sub
xor
mov
scas
ja
jg
cs
jno
mov
daa
xor
movsl
je
cmpl
pushl
mov
cmc
ret
adc
or
lcall
fidivrl
decb
jb
mov
mov
aam
jne
push
mov
sbb
mov
test
fsubl
jo
pop
js
xchg
cs
cmc
loopne
int
ret
mov
push
fildl
negb
mov
jnp
mov
dec
sub
or
cwtl
inc
sub
and
das
lcall
or
fistps
pop
ror
sahf
mov
mov
cmpsl
sub
push
mov
add
popf
ss
dec
xchg
movsl
arpl
pop
andl
pop
push
in
push
push
jle
jnp
repz
xor
fcmovne
jae
sub
jo
cmc
mov
popw
mov
mov
jge
mov
outsb
xchg
and
mov
sarl
jns
mov
aam
psubsb
lods
out
xor
sti
mov
aas
lods
dec
clc
push
adc
clc
fprem1
sub
pop
lcall
push
out
pop
inc
mov
or
sbb
xchg
sub
cwtl
loope
jecxz
xchg
push
push
into
cmp
bound
popa
sarl
sub
jg
mov
mov
sti
clc
sahf
add
xor
jns
mov
push
cmp
mov
arpl
push
in
mov
lret
dec
cli
cld
push
fistpll
insb
sbb
cmp
dec
jbe
pop
mov
in
sbb
rorl
xchg
jp
out
idivl
mov
or
cwtl
add
sbb
negl
inc
enter
aaa
repz
pop
mov
ljmp
lahf
sbbb
ds
popf
and
out
insl
mov
mov
xor
sub
xor
lcall
dec
ja
out
pop
insl
test
jl
popf
stos
mov
lret
lret
rcrl
ficompl
lea
test
push
mov
aam
ficompl
push
rolb
jg
or
jno
xchg
out
xor
mov
cmp
sbb
les
sahf
mov
lods
or
outsb
sub
fstps
mov
sub
jne
cmp
repnz
stos
js
jb
dec
ret
mov
adc
aad
xor
xor
cld
mov
lret
or
mov
dec
aaa
insb
push
int3
stc
dec
push
lea
xchg
mov
and
movl
lock
mov
mov
jl
sahf
lods
icebp
sbbb
dec
pop
arpl
add
into
cli
les
rorb
js
filds
mov
sbb
cmpsb
mov
push
mov
cld
and
pop
imul
fdivp
aaa
jo
cmpsb
fldt
mov
movsl
into
jp
mov
pop
imul
jae
pushw
test
or
in
jb
mov
loop
push
jb
push
jmp
imul
in
sbb
push
jns
and
xchg
push
sbb
loop
pusha
fstl
push
es
loope
xlat
sbbb
call
aam
mov
xor
das
stc
shl
cli
enter
xlat
lods
fbstp
adc
inc
call
pop
sbbl
mov
and
loopne
xchg
xchg
data16
fsubrs
mov
adc
pop
cmp
clc
cld
popf
mov
aam
outsl
rcrb
mov
add
icebp
ror
pusha
fadds
repnz
add
mov
jp
inc
jb
dec
mov
or
outsl
ss
ja
lret
pop
jp
pop
pop
sbb
sbb
insb
hlt
jl
fmull
je
pop
mov
sti
fwait
add
je
sti
xchg
sbb
mov
jp
xor
ret
and
ds
repnz
loopne
fisttps
pop
rcrl
sub
pop
or
pop
sub
gs
js
inc
add
aaa
fsub
or
jno
enter
lea
rorl
cmpsl
sti
ljmp
pop
ret
cwtl
xchg
cltd
fistpl
clc
stc
mov
pushf
jp
sub
cld
xchg
xchg
clts
inc
insl
lods
in
cmp
lods
nop
inc
pop
cltd
jnp
arpl
ljmp
xchg
or
pop
subb
leave
std
cmpsb
push
out
and
out
fstpt
in
in
arpl
aaa
pushf
add
int
adc
je
jg
dec
imul
clc
fnsave
sbb
jno
mov
jnp
out
push
or
mov
nop
and
fnsave
mov
stos
xor
sub
mov
pop
mov
cmp
and
mov
xchg
dec
sub
ret
ficoml
es
fnstsw
pop
sbb
pop
lods
xor
xchg
and
imul
cmp
mov
push
repz
pushf
xlat
push
sbb
adc
jnp
lods
pop
mov
cwtl
adc
sub
enter
push
cltd
jne
outsl
test
les
jp
xchg
sbb
xchg
push
push
xchg
sbb
fdivl
rcrb
adc
mov
cld
jo
sbb
mov
push
push
fdivs
addl
ror
xchg
xchg
xchg
cmp
mov
xchg
lcall
out
sub
lods
adcl
mov
stos
mov
mov
fmull
jecxz
mov
lods
popf
fdivrl
dec
and
mov
mov
movsb
neg
pop
jnp
mov
pop
push
xor
mov
inc
or
push
cmp
cwtl
lcall
icebp
cmp
ret
cmpsb
push
cwtl
push
dec
cmp
inc
loope
sbb
mov
mov
ss
pop
ficoms
pop
xchg
aad
xor
pushf
sub
mov
fs
push
sub
pop
sbb
ja
pop
into
leave
xlat
cmp
mov
mov
sti
sbb
sarl
test
xor
sbb
adcl
std
sbb
cmp
adc
mov
insb
sbb
dec
jb
sti
sub
inc
movsb
xor
xchg
sti
out
mov
xor
mov
aad
mov
or
push
and
and
pop
jo
xor
jb
pop
pushf
incl
sub
jbe
mov
and
jns
mov
pop
sub
push
cwtl
add
aam
xchg
fildll
push
jle
imul
sub
pop
je
lret
sti
outsl
ss
jp
cltd
repz
push
jl
stc
xor
hlt
cmpsb
or
roll
xchg
xchg
int3
pop
stc
xchg
movl
and
xchg
mov
ret
sub
dec
data16
cmp
or
cmp
mov
pusha
or
or
repnz
jnp
and
ss
mov
xor
cld
sub
push
cmp
fcomi
pop
sbb
pop
adc
jmp
fwait
pop
sarl
mov
dec
mov
sub
cmp
outsl
xchg
mov
stos
outsb
sbb
xor
ds
pop
lea
outsl
sub
xor
lea
repnz
add
jnp
inc
aas
lea
sti
icebp
out
mov
jle
adc
cwtl
daa
xchg
and
insb
enter
pusha
xchg
popa
sbb
rcrl
push
movb
or
ja
push
gs
push
adc
adc
dec
sbbb
cmc
in
aas
add
jbe
mov
das
xor
enter
cmp
call
jnp
sbb
aas
push
push
outsl
jp
scas
fwait
clc
push
xorl
pop
hlt
xchg
pop
je
aaa
mov
and
jl
jp
mov
insb
push
xlat
inc
cmc
sbb
pop
adc
jp
fdivr
xchg
jnp
pusha
cld
cmpsb
nop
adc
adc
pushf
add
cmp
jle
lret
sti
cs
in
rolb
pop
rcll
frstor
sbb
out
and
addb
xchg
inc
mov
int
pop
push
add
push
inc
movsb
sarb
pushf
xchg
test
sub
test
ss
mov
popa
jae
or
mov
outsb
cmpsl
push
mov
rcrl
subb
xchg
sub
movsl
mov
incl
incl
lds
xchg
mov
jo
mov
cmpsb
pop
fidivrl
xchg
or
stos
dec
sub
jo
push
sbb
cmc
repnz
pushf
mov
mov
cmpsb
ja
lods
mov
icebp
push
mov
fadd
sbb
aaa
add
mov
adc
out
lods
sub
cmp
sub
jg
and
add
cmp
clc
jmp
stos
add
add
xor
movl
mov
xor
mov
icebp
cltd
mov
jbe
pop
imul
pusha
and
push
xchg
cltd
pop
out
dec
sar
mov
add
push
or
cmpsl
sub
jge
popf
cmp
or
int
cmpl
or
mov
pop
pop
sbb
mov
in
out
pop
xor
dec
rcr
mov
in
cmpsb
aas
out
lock
roll
jno
fstps
arpl
mov
lret
pop
pop
push
fldcw
loope
repnz
add
xchg
add
xorl
sbb
xor
jne
js
mov
outsb
pop
daa
aaa
lds
or
les
dec
inc
rcll
mov
dec
sub
jp
lods
or
sbb
fcomps
out
mov
jle
add
mov
adc
sbb
cmc
push
push
movsl
mov
push
int3
push
push
pop
popa
mov
cwtl
push
sub
pop
xor
xor
clc
mov
in
add
or
cwtl
add
jmp
xchg
loopne
xchg
jmp
lcall
jbe
fstpt
aad
popf
je
or
mov
cmp
loop
rcl
cmp
mov
sub
add
jnp
les
mov
xorl
push
pop
xchg
cwtl
repz
xor
adc
xchg
int
outsb
xchg
roll
push
rcrl
jg
pop
pop
or
stc
jp
iret
pop
in
fs
iret
add
pop
push
jo
fcomip
xor
call
xchg
xchg
sbb
popf
cmp
cmc
std
mov
inc
orl
dec
daa
pushf
xchg
test
fistpl
adc
jl
inc
sbb
push
cld
in
pop
fcompl
sbb
mov
aaa
dec
and
xchg
faddl
pop
xor
adc
mov
pusha
je
mov
inc
sub
les
fistpl
mov
mov
jb
mov
cmp
jnp
lods
push
nop
aas
fdivl
int3
fisttpl
bound
add
adc
daa
xor
add
rolb
xchg
in
lods
push
into
adc
out
aas
dec
jae
ror
adc
das
jmp
shlb
jle
xchg
sbb
aas
loopne
test
push
xchg
jle
xchg
popa
pop
inc
sub
jg
push
xor
sti
adc
outsb
cltd
imulb
xchg
jnp
fsubrs
stos
jg
ficoms
aad
adc
xchg
jne
add
popf
ret
mov
cli
mov
inc
inc
pop
pop
mov
xchg
sbb
sbb
aad
test
outsb
mov
push
sbb
mov
aaa
jp
mov
popl
cli
enter
pop
stos
pop
pop
mov
aam
fwait
mulb
mov
flds
push
ja
mov
sbb
jnp
jne
aad
adc
sahf
sbb
jae
sbb
mov
jnp
rolb
inc
mov
sbbb
sbb
insb
sarl
sub
test
lahf
mov
clc
loop
adc
lea
pop
sbbl
movsb
arpl
enter
pop
cmpsb
pop
lcall
sbb
test
pop
cmp
mov
mov
pop
test
pop
inc
inc
mov
xchg
adc
pop
mov
xor
jnp
or
sbb
jae
pop
test
leave
jae
sti
insb
mov
aad
ja
cwtl
pop
xlat
mov
sub
in
aad
cwtl
cmp
xor
mov
jae
jnp
popa
mov
xorb
pop
pop
jmp
push
aas
mov
imul
pop
lahf
data16
cmpb
pop
ret
dec
mov
push
pushf
xor
mov
push
test
and
mov
sti
mov
xchg
push
daa
les
mov
es
sahf
ffreep
in
xchg
dec
push
test
adcb
sub
sahf
sti
out
hlt
cmp
leave
arpl
test
adc
mov
mov
pop
adc
dec
pushaw
add
sbb
pop
and
jg
xchg
inc
out
mov
loop
adc
jp
xchg
data16
fdivs
and
push
lret
adc
popf
pop
notl
aas
inc
pushf
lret
push
fcompl
addr16
xchg
fsubrs
insb
dec
pushf
mov
fwait
aas
pop
jns
cmp
mov
nop
sbb
popa
fsubrl
jmp
mov
sbbl
or
pushl
ss
das
call
sub
ss
repz
ja
jle
jno
pop
out
mov
or
lret
fcomip
cwtl
int3
movb
bound
sub
rclb
lds
add
jbe
fidivl
test
cmpsl
in
adc
mov
adc
push
push
xchg
pop
xchg
clc
pop
mull
inc
pop
lret
shl
mov
xchg
sbb
cmp
push
or
sub
adc
inc
mov
cmp
xchg
cwtl
and
jp
imul
mov
sbb
mov
loope
mov
xchg
jnp
fstps
sbb
cmpl
cmp
push
fsubl
sub
lcall
add
inc
repnz
pop
push
inc
test
xor
in
add
mov
mov
sarb
lret
sbb
push
lret
adc
adc
addr16
push
cmp
ds
jne
xchg
jbe
add
xchg
pop
movsb
dec
mov
jl
sahf
sbb
loope
or
fstpl
cmp
mov
aad
pop
xchg
jnp
jg
or
test
xor
dec
int3
xlat
pop
jmp
jmp
push
call
cld
cmpsb
pop
sub
mov
je
cmp
jp
pop
mov
aas
imul
or
lock
rorb
imul
jge
dec
dec
mov
adc
cli
stc
sub
cli
fbld
test
sub
popa
and
out
je
inc
mov
int3
repz
push
adc
xchg
mov
arpl
imul
iret
push
mov
mov
hlt
les
xor
jge
outsl
push
pop
pand
cmpb
cmpsb
pushf
cs
popa
fs
xor
das
sbb
test
xor
cld
sbb
sbb
mov
xor
cmpsb
xchg
fisubrl
xor
scas
xchg
cmp
cli
jp
cli
push
popf
jno
and
pop
pop
jne
cmpsl
data16
int
lods
daa
push
or
jl
enter
cwtl
fldt
addr16
jg
pop
stc
dec
xor
arpl
repz
clc
cmpb
push
and
xchg
add
xor
fstpt
jg
pop
add
in
pop
dec
test
jnp
sbb
js
out
adc
ret
pop
mov
push
pop
mov
test
inc
push
pop
and
das
cli
enter
cmpsb
mov
cld
inc
xor
push
mov
sbb
in
adc
int3
mov
test
jbe
cmpsb
mov
adc
das
pushf
sti
and
in
cwtl
movsb
aas
scas
xor
fisttps
aaa
popf
jg
jnp
push
xchg
int3
cmpsb
inc
cmp
arpl
add
mov
mov
jne
sbb
aas
xchg
adc
cmp
cmpl
mov
std
push
adc
add
and
movsb
imul
sbb
mov
cld
xlat
test
xor
mov
adc
lcall
lret
dec
popa
push
repnz
mov
ret
inc
je
ja
mov
mov
cs
les
cli
sbb
lret
add
je
popl
inc
pop
scas
adc
inc
shll
xor
rcrl
mov
and
cwtl
imul
sbb
stos
adc
cmpsb
sbb
sbb
lret
stc
pusha
loopne
sti
sub
stos
sbb
lds
and
pop
mov
or
mov
push
mov
int
inc
lods
test
movsb
movsb
fmul
mov
jnp
add
sbb
aam
aaa
jno
rcl
mulb
pop
into
sbb
or
mov
stos
je
popf
push
adcl
ds
cld
sub
pop
ds
push
mov
enter
and
mov
sahf
lahf
aas
xor
mov
lret
fists
mov
add
int
aas
xor
je
sub
cwtl
push
xchg
inc
mov
sbbl
iret
push
push
fwait
pop
and
xchg
lds
xchg
in
push
xchg
mov
cwtl
loop
jnp
fstpt
pop
cmpsb
push
movl
cmp
pop
jl
pop
or
or
inc
xchg
inc
mul
xchg
mov
jg
js
lahf
cmp
jae
out
mov
sti
mov
sbb
outsb
xchg
in
xor
sub
pop
test
movsb
cmpsl
enter
push
push
xchg
mov
xor
push
jle
inc
and
scas
cwtl
cmp
stos
add
cmp
out
xor
scas
stos
subl
push
mov
jo
popf
cld
test
mov
pop
fcomi
cwtl
pop
sub
les
jp
ja
mov
lahf
das
pop
jmp
fcomps
push
lahf
test
xor
xor
jne
dec
popa
pop
and
jmp
xchg
popf
fmuls
sahf
push
fucomi
orl
push
subl
add
and
and
xor
or
xor
mov
mov
aaa
sub
out
push
lods
movsl
mov
inc
and
fstl
call
add
adc
in
fmulp
out
or
movsb
add
pop
fimull
dec
cmp
pusha
hlt
fmuls
mov
xchg
ss
scas
cmpsb
xor
lahf
jg
fldcw
xor
call
xorb
mov
shrb
xchg
sbb
jg
sbb
mov
jns
out
mov
cmpsb
aas
mov
stos
mov
jge
cmp
lea
scas
pushf
pop
fldt
rcll
insl
stc
nop
mov
out
xor
pop
lcall
mov
push
pop
movsl
mov
jecxz
adcl
faddl
mov
push
into
add
or
cli
andb
mov
jp
fdivrl
add
loopne
cld
mov
pop
mov
cs
mov
sbb
scas
sti
add
jnp
sbb
adc
sbb
fsubrs
xor
xchg
mov
cmc
inc
push
push
sub
mov
jecxz
push
jp
jns
jg
fs
fistpll
bound
sub
jecxz
sbb
loop
scas
mov
mov
aad
mov
pusha
xchg
lcall
mov
insl
cld
das
dec
sarb
call
jne
stc
cwtl
pop
mov
sti
mov
ja
mov
mov
push
neg
stos
repnz
fucom
inc
mov
xchg
flds
test
leave
sub
divb
dec
pop
xor
outsb
cld
clc
cli
cmp
push
pushf
inc
movsb
jg
inc
cmp
mov
jge
gs
fwait
cwtl
jmp
mov
sbb
xor
xchg
dec
lods
sti
out
repnz
outsb
fdivrl
push
xor
out
add
xchg
fistpll
inc
cmpsb
filds
pusha
mov
aas
lea
sbb
arpl
inc
test
mov
ret
push
inc
sub
fnclex
ja
pusha
xchg
addr16
pop
xchg
adc
insb
fisttpl
aas
or
mov
fwait
daa
scas
pushf
jge
es
into
jb
jle
cmp
xchg
push
out
ret
push
push
aaa
pop
mov
mov
add
test
stos
loope,pn
cmp
movsw
fildl
clc
jbe
addb
sub
test
adc
rcr
cmc
jl
aas
push
fs
bound
aad
pop
cli
loopne
in
mov
mov
push
or
inc
jno
add
push
push
fstps
sbb
sub
inc
push
ds
mov
add
and
xchg
add
js
scas
and
andb
jge
mov
sbb
sti
lds
fwait
cmp
pop
and
addr16
loopne
fwait
mov
fwait
orl
jecxz
fmull
add
and
pusha
jnp
movl
enter
loope
xchg
mov
sahf
xchg
mov
inc
jns
mov
shlb
int3
fs
jnp
fimull
push
fwait
mov
jne
fwait
es
fwait
ljmp
jb
sbb
mov
aas
mov
je
jl
jno
mov
aaa
int
sub
xchg
xor
adc
ja
mov
pop
push
sbb
add
leave
xor
lahf
cwtl
add
or
hlt
xchg
and
ljmp
faddl
sbb
and
inc
xor
cwtl
leave
pop
std
hlt
sub
push
mov
in
test
out
adc
xchg
mov
test
gs
jns
mov
inc
cli
mov
repz
sbbl
sti
lds
pop
pop
int
incl
or
aaa
enter
push
or
pop
mov
and
pushf
and
pop
pop
cmpsb
sbb
lahf
cmp
out
dec
xor
out
dec
nop
jae
xchg
and
dec
int3
clc
adc
pop
stos
jecxz
or
sbb
jae
pop
sti
mov
cmpsl
rcl
adc
mov
cli
icebp
add
dec
adc
scas
or
sahf
sti
mov
pop
scas
dec
sbb
inc
sub
cmp
pop
mov
mov
cmpsb
call
push
dec
aad
inc
jmp
hlt
test
jp
pop
sbb
push
sbb
sbb
sbb
fwait
ljmp
mov
popf
pop
incb
scas
pop
outsl
adc
sarb
imul
fdivrl
push
mov
adc
push
stos
adc
fstsw
lods
lret
shll
pop
fwait
mov
loopne
scas
mov
test
jmp
sbb
add
cmp
add
inc
sbb
nop
add
mov
lods
iret
and
xchg
loope
sbb
sbb
cld
mov
pop
adc
mov
mov
cld
ja
les
pop
rclb
sti
mov
mov
andl
sahf
cld
push
push
addr16
inc
pusha
stos
adc
sub
sahf
cld
jae
xor
fiaddl
repnz
adc
clc
out
push
stc
fcoms
cld
sti
mov
sbb
push
sbb
mov
arpl
push
push
push
fcomps
repz
call
sti
mov
dec
jle
cmp
out
notl
push
out
push
or
lods
xchg
das
sub
mov
ret
mov
fcmovbe
mov
mov
mov
in
fnstsw
cmp
ffree
mov
mov
xor
mov
adc
addl
lock
push
pop
mov
sbb
daa
hlt
cmp
and
imull
jg
lahf
mov
sbbb
es
repnz
decl
ret
add
push
out
aad
shll
adc
xchg
cmp
or
mov
out
sbb
int3
fwait
jb
fwait
sar
js
stos
pushf
loop
outsb
mov
cmp
inc
cmp
cs
mov
cmp
test
dec
loopne
adc
sbbb
test
fistpl
pop
xchg
pop
aad
inc
cmpsb
fsub
out
mov
insl
xor
pushf
push
insl
sub
cmp
push
mov
arpl
and
or
jmp
mov
mov
les
aaa
movsb
mov
test
fmull
pushf
nop
sarb
mov
cs
cmp
call
cwtl
fistpl
and
cmc
inc
inc
es
jp
jno
lret
and
test
or
adc
pushf
push
sbb
mov
sbb
mov
and
ret
xchg
cmp
adc
pop
jae
cmp
mov
xchg
pop
cmpb
cmpsl
sbb
addr16
popf
rorb
push
movsb
fisttpl
icebp
fbstp
jne
adc
pop
pop
push
jl
add
lea
jmp
popf
enter
fldenv
sbb
lret
dec
aad
stos
jbe
mov
cmp
mov
jecxz
scas
fcoms
gs
sbb
icebp
sub
repz
adc
inc
add
mov
ds
xchg
sub
andb
push
mov
pop
jb
and
add
in
mov
sbb
mov
imul
xor
jbe
lock
mov
ja
mov
and
aad
push
adc
sbb
push
and
ret
lcall
lahf
imul
mov
xchg
out
xlat
stc
mov
pop
jge
pushf
or
scas
cld
push
scas
cmp
push
sbb
or
dec
xchg
mov
ret
or
push
jp
mov
sub
xchg
cltd
insb
mov
fisubl
sbb
and
popa
jg
nop
pushf
aas
mov
and
je
sub
push
mov
dec
cmpsl
lcall
mov
imul
lods
fistpll
xchg
movsb
orb
or
xchg
xor
lret
xchg
popa
aad
adc
dec
push
pop
outsl
cmp
divb
and
or
mov
sbb
push
ljmp
rcrl
pop
add
mov
cli
pop
cs
xor
or
adc
popf
mov
shll
cwtl
arpl
rolb
push
neg
in
cmp
jle
sbb
mov
daa
nop
out
pop
inc
and
adc
push
nop
sbb
mov
enter
sub
mov
jecxz
popa
sahf
popf
ret
push
jp
push
cmp
mov
xchg
sti
sub
push
push
xlat
repz
in
mov
mov
sahf
test
or
loopne
xor
lahf
pop
aas
mov
mov
lcall
mov
jecxz
icebp
pusha
test
jnp
push
jp
addl
pop
rorl
mov
fbstp
leave
stos
xchg
cmp
gs
hlt
mov
int3
xor
popf
cmp
sti
movsb
xchg
pop
test
pop
popa
pusha
sub
adc
nop
repnz
jle
adc
out
pop
dec
adc
push
xchg
cwtl
cmc
sbb
mull
rclb
loopne
jl
lcall
daa
sbb
lret
inc
scas
sti
mov
movsl
and
stos
aas
cmpb
test
fisubrs
lret
repz
hlt
out
clc
cltd
cmpsl
ja
mov
xchg
aaa
push
adc
out
add
insb
cmp
jns
and
pop
in
xchg
aaa
fnstenv
daa
pop
sbb
scas
cmpsb
adc
loopne
or
rcrb
pusha
std
iret
imul
push
add
mov
sub
std
sbb
push
scas
mov
fisubs
xchg
xchg
addl
aaa
es
int3
jne
sti
jge
ficompl
mov
cli
sub
imul
pop
jne
lahf
les
icebp
scas
lcall
ds
cmp
push
lock
cmpl
ret
fildl
push
fcoms
fistpl
cs
or
xor
adc
xchg
or
pop
in
ret
mov
mov
dec
push
loop
push
sbb
cwtl
lret
add
push
js
mov
in
or
jmp
lcall
mov
add
insb
cmp
dec
enter
push
pop
jg
nop
mov
ret
lcall
gs
push
frstor
ficomps
iret
adc
push
fwait
sti
js
add
sbb
in
and
sbb
jg
jb
hlt
and
and
aas
js
dec
xchg
add
clc
cmp
cli
cmc
insl
mov
sbb
sbb
fdivs
xchg
fdivrs
int
into
shrl
cld
mov
jb
jmp
xchg
sbb
sub
sub
push
jae,pt
out
mov
jp
fsubs
mov
int3
nop
jnp
pushf
jns,pn
xchg
jmp
mov
mov
xchg
shrb
mov
fucomp
mov
cmp
jbe
cmp
dec
sarl
out
lds
lods
rcl
nop
test
cwtl
dec
loope
sbb
xor
ret
arpl
andl
hlt
pop
mov
sbb
pop
mov
cmp
mov
pop
xor
or
test
pushf
mov
xor
repnz
push
and
out
pop
inc
scas
and
mov
jnp
ret
cmp
pop
xchg
mov
xchg
mov
aas
dec
jp
subl
inc
pushf
add
mov
les
fistpl
fwait
mov
imul
pop
push
movsb
jbe
in
xor
arpl
inc
pop
add
cmp
je
sbb
dec
mov
daa
stos
notl
jns
jmp
dec
test
out
lret
aam
jb
adc
mov
iret
mov
jb
or
cwtl
int
ds
dec
outsl
dec
xchg
mov
repnz
mov
jno
sbb
cmpsb
cmp
xor
pop
fdivl
jge
xchg
xchg
pop
cmp
push
pop
sbb
and
lock
js
jae
mov
sub
orl
mov
xchg
cmp
and
push
push
sbb
cmp
mov
frstor
push
mov
or
mov
jg
stos
dec
test
out
fsubrs
sub
sub
mov
std
bnd
mov
pop
mov
pushf
fisttps
lahf
jl
mov
frstor
imul
dec
les
mov
sbb
loopne
cli
cmp
jmp
std
lcall
bound
cmp
cwtl
lock
dec
stos
ds
jne
aam
mov
inc
pop
js
and
into
add
es
pop
pop
repz
bound
pushf
es
sbb
scas
cli
pop
pushf
shr
dec
nop
cmp
stos
shrl
cmp
rcrb
pop
jns
negb
xchg
lcall
xchg
add
xchg
add
movsl
hlt
jo
mov
fimull
jl
mulb
cmpsl
xchg
mov
test
adc
popa
mov
rorl
rcrl
and
lods
rolb
cltd
pushf
push
shll
arpl
mov
les
aas
out
in
es
pusha
aaa
cmp
push
push
mov
scas
cwtl
imul
movsl
xor
enter
call
stos
cmpsl
out
push
popf
adc
mov
test
jl
aam
mov
push
jle
jl
sti
pop
adc
cmc
xor
inc
insb
push
pushf
orl
adc
jge
and
sbb
arpl
dec
aam
xor
mov
sbb
fdivrs
mov
push
sub
inc
cmpsl
decl
dec
outsl
mov
pop
rorb
cmpsl
es
mul
xchg
jae
cli
push
je
clc
jne
lahf
lds
cmp
pusha
xchg
sbb
fcomps
sub
sahf
add
mov
jmp
cmpsl
dec
cmp
cmp
aam
or
pop
insb
cld
xor
xlat
std
and
xor
or
lcall
add
mov
jnp
cmp
in
sbb
mov
in
fsubrs
shll
xlat
or
lock
iret
sbb
lcall
sbb
jg
fstl
pop
xchg
and
add
cmp
push
jnp
in
clc
lods
or
xor
push
jle
inc
je
xchg
mov
pop
xchg
push
mov
cli
mov
xchg
pop
inc
stos
fisttpll
sbb
loopne
xchg
lods
pop
lods
scas
cwtl
imul
sbb
and
sub
add
jmp
dec
push
sub
faddl
mov
call
pop
push
in
movsb
xchg
sub
mov
cmp
bound
push
inc
popa
jg
cmpsl
sbb
xor
pop
sub
stos
xchg
test
jmp
movsb
js
lods
jg
sbbb
into
cwtl
add
mov
or
mov
pop
bound
hlt
sbb
mov
shr
mov
les
xchg
into
push
jle
or
inc
in
add
out
daa
fdivrs
sbb
sbb
adc
mov
aaa
or
mov
push
push
inc
inc
push
ds
add
sbb
jnp
mov
iret
das
sub
mov
and
ja
inc
jmp
cs
fstps
jnp
mov
cld
xchg
leave
cmp
pop
dec
adc
lcall
jp
cmp
pop
scas
lcall
sbb
mov
inc
repz
je
stos
imul
mov
ljmp
xor
sbb
lcall
in
and
scas
pushf
shr
pop
pusha
shlb
adc
lock
sub
out
xor
jge
push
xchg
xor
pop
mov
xchg
xlat
ja
out
sub
mov
stos
cmp
xchg
xchg
dec
loop,pt
add
rclb
sti
in
in
mov
jb
jmp
jno
cli
inc
sub
add
pop
sub
cmc
push
in
add
adc
cwtl
lahf
inc
mov
mov
xchg
iret
mov
mov
int3
fdivrl
cmp
test
lds
push
xor
iret
mov
into
mov
pop
popf
xchg
jg
in
stc
lods
mov
fcom
push
mov
cld
sbb
pop
mov
add
add
mov
pop
insb
repz
and
cmp
mov
arpl
mov
imul
out
fdivs
and
xchg
xchg
insb
mov
jle
cmp
push
aaa
out
pop
and
cmp
cmpl
mov
jns
xor
cld
clc
orl
into
mov
sbb
vmread
cmpsb
mov
out
fmull
lret
lods
sti
gs
mov
les
cmp
mov
aas
or
pushf
shrd
ljmp
fmull
pop
into
xor
filds
nop
adc
mov
outsl
xchg
lods
cmc
push
ja,pt
aad
insb
call
xor
insb
pop
insb
movsb
stc
cmp
pop
sbb
mov
cmc
and
cwtl
mov
push
pop
sbb
insl
js
cmpsl
lahf
les
sub
xchg
aaa
leave
clc
roll
fsubs
inc
mov
sti
push
mov
fnsave
mov
xlat
sub
jle
xchg
gs
lods
add
pushf
fsubrs
mov
adc
xchg
inc
adc
clc
test
test
adc
and
push
lret
idivl
sub
cmp
popf
cmp
and
sbb
out
repnz
into
mov
fprem1
sub
lret
out
test
cmp
push
insb
inc
or
and
test
in
sarl
cmpsl
je
adc
pop
push
cmc
and
stos
xor
cmpsl
andl
lods
incl
aas
insb
flds
and
cmpsb
jnp
mov
lods
loopne
lods
cld
stc
pop
push
lock
pop
inc
xor
test
pop
mov
fimull
inc
and
and
add
out
mov
lahf
jg
cld
jae
cmp
cli
daa
sub
scas
mov
mov
xchg
movsb
push
mov
cmp
pop
xchg
daa
xor
jns
scas
out
fcom
or
fdivrl
sub
ljmp
sub
xchg
ret
pop
outsl
jge
pop
ret
add
or
rorb
adc
fisttps
or
pop
mov
out
cmp
jo
xchg
sbb
dec
into
scas
jg
mov
inc
jp
iret
subb
jp
insb
or
das
scas
lds
mov
jle
sbb
xchg
ds
dec
cli
cmpsl
push
mov
mov
sahf
or
clc
popf
sub
push
aad
mov
mov
push
fadds
cmc
cli
sub
push
pop
dec
mov
addb
inc
mov
iret
test
adc
out
in
dec
add
xchg
adc
mov
push
sti
call
jae
pop
or
test
mov
dec
mov
adc
cmp
jp
and
leave
add
pop
nop
xchg
sbbl
push
mov
stc
cltd
sti
outsb
and
lahf
daa
and
ret
adc
mov
mov
add
out
jno
xchg
pop
jge
repnz
jns
sbb
pop
jle
pushf
pusha
mov
sub
sbb
pop
jns
aas
out
fcomps
pop
push
cwtl
mov
lods
outsl
jo
xchg
cmp
xchg
sub
jae
pop
rolb
mov
dec
xchg
cld
jbe
out
loope
xlat
js
mov
cmp
je
pop
pop
add
adc
jl
testb
add
push
pop
cmp
fadd
incl
push
ror
pop
mov
xor
sbb
out
cmp
stc
cwtl
cwtl
jg
aaa
pop
xchg
mov
jnp
push
loopne
mov
cmp
and
test
jle
pop
xchg
movsb
push
jbe
test
mov
sub
jb
lea
mov
push
push
cmp
adc
testb
bound
dec
scas
es
int
bound
adc
shl
rcr
mov
mov
loopne
inc
pop
mov
pop
pop
movsb
iret
jle
pop
or
iret
xchg
xchg
cmp
aaa
aam
fsin
pop
add
push
cld
lods
lahf
mov
mov
shlb
or
add
iret
push
imul
movsl
jl
push
cmp
scas
imul
or
aad
sub
sub
scas
pop
mov
xchg
cwtl
dec
mov
jp
fimuls
mov
sbb
pop
ret
out
pop
in
xchg
lret
sub
push
lcall
cmpl
rorb
in
repnz
cmpsl
sti
mov
sbb
ds
sub
cmp
jbe
cld
cwtl
adc
cmp
fmuls
inc
sub
and
mov
adc
mov
xchg
mov
mov
pusha
sbb
jb
mov
das
jecxz
inc
fmuls
stos
scas
mov
movsb
mov
adc
xor
mov
cmp
int
ret
ljmp
shll
movsb
mulb
push
sub
aaa
fidivrs
cmpl
add
js
jle
sub
fcoml
mov
lahf
dec
mov
cwtl
bound
lds
cmp
idivl
cltd
aad
push
cmpsb
cltd
push
hlt
scas
sti
test
sarb
mov
xchg
nop
sub
pop
push
and
lds
jmp
shrl
mov
cli
mov
es
xchg
ret
cmp
inc
dec
cli
mov
jg
je
pop
fmul
cmp
xor
dec
mov
push
push
aaa
in
pop
shlb
scas
push
adc
and
pop
xchg
repz
cwtl
sarl
stos
pop
outsb
loopne
int
mov
pop
inc
jne
mov
fmuls
lahf
popf
sbb
inc
lods
fmuls
jle
pop
jp
xor
inc
ss
sbb
ret
xchg
sti
lock
out
mov
test
mov
mov
mov
xchg
out
fldt
mov
dec
push
mov
cld
out
mov
mov
inc
mov
cmp
mov
fsub
sbb
sbb
arpl
mov
jbe
sub
add
mov
mov
and
inc
mov
adc
cmpl
cmpb
inc
int3
fcompl
int
jmp
hlt
es
cli
or
adc
out
pop
jl
sub
js
cmp
popf
push
push
das
mov
dec
dec
pop
sbbl
push
jl
mov
fstpl
mov
xacquire
jg
pop
xchg
sub
clc
pop
xor
lds
scas
pop
add
shlb
mov
fdivr
enter
inc
pushf
dec
cld
sub
stos
cli
aas
lret
popf
aaa
outsb
jo
xlat
inc
xlat
cmp
adc
mov
scas
adc
out
fsubl
xor
mov
xor
jne
data16
test
aas
cli
cld
call
lahf
mov
inc
add
nop
xchg
inc
sahf
push
adc
mov
imul
cmpsb
dec
sub
cmp
or
cli
adc
sahf
imul
cmp
mov
stc
jbe
stos
lahf
jmp
xor
lcall
jne
xchg
call
mov
outsl
cmpsb
jno
mov
and
jae
mov
mov
push
pushl
dec
mov
mov
inc
nop
movsl
mov
add
in
push
pop
push
movsl
or
sub
push
testl
push
popa
mov
rclb
jecxz
mov
sarb
lods
inc
push
sbb
push
sahf
jp
in
nop
out
int
loopne
cwtl
iret
sub
pop
icebp
or
bound
in
int3
pushf
xchg
and
pop
in
jo
in
dec
int
sbb
fstps
bndcu
lods
inc
test
sbbb
jmp
mov
and
sub
fcmovnbe
sbb
out
aas
ja
sti
and
pop
mov
popa
or
jb
sahf
xchg
cmpsb
stc
pop
xchg
popf
les
jo
pop
and
jmp
adc
int3
jecxz
sub
sbb
lret
and
sbb
in
and
or
jp
sti
lods
or
jns
das
cmp
js
popa
sub
out
enter
fstps
jns
pusha
jl
js
das
push
mov
mov
jnp
cmpsb
incl
cli
pop
mov
imul
xor
add
mov
push
fldt
pushf
pushf
sbb
movsl
jns
xchg
inc
loopne
test
xor
fwait
or
sbb
aam
mov
in
mov
mov
hlt
jo
mov
ficoml
mulb
or
sbb
loopne
mov
xchg
mov
push
xchg
imul
xchg
cmpsl
pushf
sub
adc
mov
mov
fmul
lods
jecxz
mov
stos
mov
xor
fs
cmc
sub
xor
ficomps
sbb
ljmp
pop
rcl
mov
fwait
mov
fcoml
sbb
xchg
inc
sbb
xchg
and
sbb
sub
add
inc
inc
idiv
ljmp
dec
scas
push
pushf
test
xchg
pushf
sub
out
out
gs
cli
enter
pop
mov
sti
rclb
add
inc
jp
mov
aad
sti
test
cmp
mov
mov
popf
inc
mov
or
jnp
cmpl
cmp
rorl
les
stos
iret
out
rep
push
adc
inc
jp
cld
nop
call
out
dec
movsl
sbb
adc
mov
test
fmul
dec
or
scas
add
pop
sbb
jp
xor
scas
in
aam
push
or
in
sbb
mov
fnsave
jg
adc
je
xchg
sub
or
outsl
dec
xor
add
stc
sbb
and
inc
push
sahf
sti
loopne
fists
adc
add
lods
mov
mov
fs
test
adc
mov
pop
push
pop
fst
stos
mov
pop
cmp
cmp
repz
sahf
inc
stos
test
imul
fsub
sub
cld
ret
stos
fimull
nop
popf
inc
push
pushf
orl
adc
pop
sbb
cmpsl
hlt
push
fldl
sti
jns
mov
iret
pop
adc
mov
jecxz
jp
sbb
add
incl
cltd
sbb
inc
jl
adc
adc
sub
pop
in
pop
or
adc
jne
sbb
dec
in
fdivrs
push
push
in
dec
ficomps
xchg
sti
mov
cmp
add
fcomps
jnp
jl
aas
dec
fiadds
sti
cs
cmpw
stos
arpl
cmp
mov
insl
fstpl
cmpl
stos
iret
outsb
fdivrs
sti
outsb
cmp
clc
ljmp
fdivl
fdivl
or
add
jo
js
jmp
pusha
push
cmp
mov
negl
lahf
jbe
pop
dec
fsubl
pop
sub
fwait
sarl
cmp
push
push
dec
xor
sbbb
aas
call
in
lahf
or
jge
jbe
stos
sub
daa
lret
pop
cmc
inc
xchg
pop
fadd
cmpsl
mov
jmp
mov
addr16
ficompl
push
sbb
mov
out
dec
rolb
call
push
hlt
outsb
pop
int3
or
clc
cli
daa
in
lods
dec
add
into
adc
push
add
lea
mov
push
aas
push
popa
and
insb
xchg
or
test
jl
in
mov
push
subb
push
mov
jle
mov
jl
ds
xchg
into
mov
mov
inc
inc
add
mov
outsb
in
pop
daa
pop
inc
in
push
sub
mov
les
dec
pop
faddl
ja
xor
inc
insl
pop
and
jo
movsl
pop
or
add
fmuls
jge
pand
push
or
movsl
mov
mov
ret
mov
push
jmp
pop
xor
aas
aam
jecxz
cmp
mov
adc
or
rcl
push
dec
cli
jg
pop
fistps
push
cmp
in
or
lods
jmp
cs
daa
mov
dec
mov
jbe
cmp
inc
sbb
jae
icebp
lods
add
mov
xor
push
sub
cwtl
mov
mov
into
jnp
adc
movsb
popa
in
inc
pushf
test
pop
fwait
and
xchg
shll
xchg
jmp
mov
popf
je
add
jne
je
ret
test
fucomi
imul
cltd
sbb
outsl
inc
lea
lds
outsb
lods
mov
in
cmp
xchg
push
cmp
mov
sti
add
ds
dec
cltd
mov
mov
add
stos
das
cmpsl
pop
fimull
sbb
out
ret
lods
negl
mov
popf
and
and
cli
pop
repnz
pop
jle
fwait
xchg
xchg
cmp
cmp
cmp
pop
jle
push
push
sub
into
cld
into
stc
ret
pop
int
ret
pushf
js
loopne
pop
sub
daa
mov
inc
int
xchg
jne
push
cltd
jmp
or
and
sbb
push
shll
mov
scas
fistpll
out
fldenv
enter
mov
cmp
loop,pt
push
addr16
lods
or
pop
xor
insl
push
ret
lret
cli
pop
push
iret
lahf
pop
sbb
rol
push
cli
insb
jl
in
xchg
push
mov
enter
xchg
rcll
leave
fcomps
xor
pop
and
aad
lret
je
test
mov
fnsave
popa
mov
pop
movsb
adc
cwtl
imul
jns
movsl
jnp
xchg
lods
adc
sbb
push
jo
xor
lcall
xor
mov
mov
cmpsl
arpl
mov
addr16
stc
mov
adc
jmp
data16
mov
fcoml
loope
cltd
sub
and
fdivrl
rolb
sbb
mov
mov
cmp
ss
decb
jg
loopne
pop
sbb
xor
ds
push
push
mov
pop
fs
les
jbe
cs
mov
sbb
sub
lods
inc
mov
ficoms
mov
sbb
mov
dec
sbb
sub
pop
jl
gs
cmp
mov
pop
xchg
push
xor
xchg
pop
xorb
push
stos
sub
popf
jl
mov
mov
ds
pusha
stos
push
sbb
bound
aad
xchg
rclb
xchg
aad
push
and
pop
push
mov
sbb
fdiv
sbb
mov
leave
jns
sahf
xor
sti
sbb
std
cmp
xor
out
adc
or
cli
dec
xchg
cmp
into
cs
cmp
aas
shl
fcomp
aam
fwait
dec
popa
sbb
mov
aaa
leave
cmpsl
jg
ret
mov
ret
add
out
or
fcoml
fcomp
cmp
pop
push
jle
push
sar
aam
cld
lahf
pop
in
cmpsl
int
aaa
lahf
mov
mov
sahf
fsubrl
je
cwtl
cmp
cmp
inc
repz
pop
mov
push
push
fbstp
in
push
mov
jl
fsts
mov
push
adc
mov
out
sbb
scas
xchg
cmpsl
fdivs
adcb
mov
lret
nop
jge
dec
ja
hlt
push
jg
in
loop
mov
icebp
cmp
jb
je
mov
daa
dec
sbb
cmp
pop
loop
lahf
pop
imul
sub
xchg
lret
clc
loop
ja
mov
push
cmpb
mov
into
lods
cwtl
mov
pop
daa
jg
xor
lcall
bound
jno
ds
push
fisubrl
dec
js
pop
sbb
xor
mov
jno
fnstcw
cmp
cmpb
clc
inc
dec
sbb
pop
mov
iret
loope
cwtl
lods
jnp
inc
aas
xor
and
sti
pop
stos
pop
arpl
scas
mov
mov
cmc
or
jmp
movsl
insl
data16
call
sti
xchg
pop
in
mov
sarb
int3
inc
jnp
das
data16
sbb
and
cmp
scas
je
adcb
cmc
jmp
or
lahf
jp
jl
test
fiadds
sti
ss
sbbb
jno
mov
mov
xchg
mov
stc
cld
xchg
xchg
bnd
cwtl
adc
sbbl
xchg
addr16
aas
outsl
js
mov
hlt
jp
sbb
add
scas
fnstenv
sti
ret
pop
pop
std
into
pop
ja
call
jmp
mov
std
mov
int3
lret
inc
adc
insl
ret
pop
adc
ret
and
fstps
in
shlb
in
out
jle
daa
repnz
imul
pushf
inc
mov
loopne
mov
mov
sub
cmp
sti
adcl
mov
push
or
xchg
fwait
pop
or
inc
daa
push
sbb
fadds
jmp
lcall
mov
jg
xor
mov
daa
dec
push
movb
les
lea
fcmove
fmull
leave
sahf
out
inc
inc
insb
in
lock
sbb
in
inc
sbb
and
add
dec
and
ret
popa
push
ja
jg
in
inc
jmp
sbb
xchg
xorl
fsubrs
sub
add
mov
mov
mov
das
fucomp
shrl
mov
dec
mov
push
mov
mov
pop
mov
out
mov
cwtl
cmp
rcrb
inc
push
ds
inc
jle
push
bound
mov
in
aad
pop
xchg
ret
pusha
xchg
leave
fwait
jmp
mov
lret
xor
sbb
xor
pusha
lea
mov
jg
add
fs
fildl
lods
lret
xchg
int3
xchg
fwait
mov
orl
or
jbe
mov
inc
mov
fmuls
cmp
pop
and
insb
scas
adc
dec
sahf
fldz
and
movsl
mov
sub
pop
ret
out
sub
inc
sbb
push
pop
mov
lods
xchg
pop
sub
inc
jne
movsl
ja
test
mov
dec
fsts
stos
lcall
jg
jo
daa
push
ja
loop
cmp
add
jg
and
cmpsb
sbb
bound
fstpt
dec
leave
stc
enter
xor
jmp
fistl
add
sbb
popa
add
out
xchg
cld
bound
lcall
js
icebp
sub
xchg
inc
fistpll
sbb
cltd
push
cmp
pop
out
pop
dec
jle
gs
xor
adc
cmp
cmp
push
cmp
adc
mov
incl
test
fidivs
mov
cmp
gs
movsb
aas
je
adc
mov
pop
mov
adc
and
stos
inc
push
sub
cmp
cwtl
mov
xlat
cli
pop
in
std
xchg
fdivrl
test
ret
clc
ja
xor
test
cmp
xor
jne
scas
push
jle
popa
and
stc
clc
cmpsl
xorl
testl
fadd
ret
inc
lods
addr16
jne
rclb
inc
popf
xor
xchg
sbb
mov
and
mov
movsl
pop
jae
jb
cmp
test
roll
pushf
leave
repz
in
sbb
mov
rorb
popf
mov
repnz
pop
fwait
out
lods
stos
add
push
or
and
popf
jge
imull
mov
sub
inc
arpl
push
sbb
test
lret
in
push
jmp
sahf
pop
mov
mov
adc
jg
inc
enter
fwait
xlat
jp
mov
popl
adc
hlt
dec
aaa
aam
les
das
das
icebp
mov
mov
sti
add
lea
jne
sahf
jp
xchg
fincstp
pop
pop
mov
fisttps
je
and
orl
lock
cwtl
or
pop
daa
pushf
pop
mov
lahf
mov
andb
jns
test
scas
dec
push
cmp
daa
call
add
mov
imul
fsubrl
mov
pop
xor
sbb
lcall
daa
pushf
out
lret
lret
adc
pop
pop
test
pop
pop
jle
or
mov
hlt
mov
stc
mov
sub
imul
push
clc
sub
jmp
pop
out
or
lcall
adc
inc
and
cmp
pusha
dec
jle
fsubl
mov
psubd
cwtl
dec
mov
jne
fsubrl
sbb
jae
and
cmp
mov
cmpl
in
jl
movsl
mov
lea
pop
not
xchg
or
push
jns
notb
jge
mov
loopne
dec
out
ret
dec
cmpsl
pop
mov
adcb
mov
movsl
imulb
inc
sbb
and
negl
stc
fsts
pop
xchg
dec
mov
repz
test
cmc
loopne
sub
fildll
pmuludq
js
loopne
add
pushf
push
lds
sbb
pushf
inc
cs
jmp
fnsave
pop
push
xchg
mov
in
pop
cmp
pop
pop
jnp
out
mov
xor
or
xlat
jle
out
test
mov
pushf
add
sbb
in
scas
addl
int
pop
xchg
push
pop
shlb
push
sub
lahf
sbb
pop
pop
ds
mov
push
and
jns
sbb
mov
in
cmp
or
movsl
sbb
cmp
mov
inc
pop
jle
inc
scas
mov
pop
pop
push
stos
in
leave
call
xchg
add
xchg
cmp
dec
int
sbb
test
push
mov
mov
mov
sub
mov
shrb
adc
xlat
or
mov
jge
test
cmp
insl
xchg
insb
push
xor
leave
pop
push
test
adcl
mov
pushf
lfs
sbb
mov
pop
pop
mov
ror
leave
fistl
mov
xchg
xlat
inc
pushf
xor
ret
jecxz
mov
jmp
fldcw
jae
fcoml
add
lret
sbb
push
xchg
rclb
repz
arpl
nop
mov
stc
mov
imul
fcomps
mov
inc
in
subb
cwtl
dec
popa
ljmp
loop
rep
pop
popa
test
lock
sbb
adc
in
sbb
mov
cmp
lods
push
push
data16
mov
jp
mov
sahf
sub
mov
push
test
in
addr16
fcompl
outsb
push
xchg
imul
jmp
mov
mov
lea
cmpsb
ret
mov
mov
jb
pop
push
daa
xorb
ss
fdivs
in
nop
pushf
cwtl
push
out
ljmp
jnp
inc
inc
pop
push
mov
mov
fsubs
nop
inc
imul
and
and
in
mov
inc
cmpsl
pushf
fisttps
cld
notb
lds
pop
popa
aas
testb
pop
push
ja
test
fdivr
ror
aas
mov
jge,pt
lcall
dec
sub
adc
js
mov
dec
sbb
xchg
ret
scas
fdivrl
stos
adc
cltd
push
popa
mov
fmuls
mov
mov
push
out
mov
mov
mov
mov
pop
mov
ficoml
xchg
sti
ret
popf
pop
add
adc
add
adc
lea
pop
and
out
xor
push
ljmp
jno
addl
cmp
adc
aas
inc
cmp
push
add
jbe
fildl
test
jbe
subb
xor
pop
in
sub
pop
jnp
xor
repnz
das
push
daa
lea
xchg
pop
sar
in
ljmp
fdivl
mov
pop
mov
fidivl
xchg
sbb
sbb
push
pop
nop
cmp
mov
and
flds
pushf
mov
insl
imul
sbb
xchg
mov
inc
in
xchg
mov
dec
and
jg
imul
cmp
fbld
add
xchg
frstor
cld
jg
shl
fldt
dec
data16
lret
cmp
jmp
ficompl
std
pushf
shrl
sub
sub
fistpl
jbe
leave
lods
in
mov
int3
in
rcrb
push
push
jle
xchg
in
aas
rcr
sbb
sbb
dec
hlt
cmp
jne
scas
fmull
cmp
aas
jp
js
nop
adc
sbb
in
jmp
pushf
cmp
adc
arpl
stc
mov
add
mov
and
add
daa
das
sbb
fwait
rcll
insb
adc
in
xor
test
lcall
enter
mov
mov
mov
dec
in
movsb
xchg
pop
pop
sbb
addb
xchg
pusha
rol
sbb
shr
inc
jbe
cwtl
sub
or
iret
stos
lock
mov
mov
or
lret
shlb
ret
repz
clc
inc
adc
push
cltd
lock
js
mov
cli
push
fimull
mov
cmc
jl
xchg
sub
in
dec
lcall
popf
loope
sahf
clc
dec
orl
pop
stos
fs
cmp
mov
mov
stos
inc
rcl
xor
cmpsl
fstps
dec
xchg
jg
jl
or
inc
inc
mov
test
mov
jecxz
mov
inc
add
add
dec
pop
xchg
pop
test
adc
pop
fists
out
xlat
inc
mov
cmp
push
mov
lret
mov
ss
in
sub
decl
mov
mov
add
sub
xor
lret
push
fwait
cwtl
sbb
cmp
sbb
cmp
or
cltd
rcl
inc
cmpsb
pop
jae
mov
and
mov
icebp
add
movsb
mov
cld
rcl
push
ljmp
dec
sbb
aas
fstps
xchg
js
cmp
inc
jmp
sbb
mov
lods
inc
push
sbb
pop
ss
std
pop
pop
stos
jg
jl
fisubrs
repz
outsl
sub
mov
test
jge
in
push
aaa
add
out
test
mov
jg
sbb
popa
gs
js
stos
push
or
inc
jnp
sarb
hlt
pop
mov
cmp
inc
gs
adc
cmpsl
cmc
mov
mov
lock
fcomp
fistl
sbb
mov
jnp
mov
pop
cltd
jg
sti
mov
ss
xchg
dec
int3
push
iret
pop
jle
mov
nopl
lahf
cmp
add
lret
sbb
push
lea
fisttpll
int
cs
cmp
stos
mov
clc
cwtl
fwait
xor
xor
pop
mov
xchg
das
cwtl
shrl
pop
mov
and
cli
divb
sbb
jl
pushf
dec
xor
pop
adc
add
incl
push
into
icebp
int3
pop
je
inc
stos
push
pop
xchg
lods
fwait
pop
fiaddl
add
fdivrs
mov
adc
push
push
into
or
pop
jmp
jo
xor
mov
mov
movsb
cmp
sbb
add
fdivp
imul
aaa
ss
pop
std
or
cmpl
sub
nop
out
rcll
test
aaa
ljmp
cmp
aas
xor
pop
loope
push
cmp
into
mov
lret
mov
stos
cmp
pushf
sbb
mov
stos
loop
fwait
push
lods
pop
je
mov
mov
pop
sbb
mov
sub
jbe
adc
jae
add
push
sti
hlt
xor
push
mov
push
pop
je
dec
fcomps
cmp
mov
int
test
shl
inc
int
mov
jo
pop
rcr
xchg
mov
xchg
jo
jecxz
mov
pushf
mov
xchg
aas
and
int
jae
mov
sbb
addr16
xchg
dec
ficompl
xor
xchg
cwtl
jnp
add
push
push
mov
clc
xor
and
das
inc
jmp
jno
sub
jp
or
cmpsb
aaa
push
pop
and
and
cmpsl
cmp
in
mov
int3
adcb
fisubl
pop
cs
dec
xchg
xor
or
sub
ljmp
pop
fstpl
in
dec
mov
dec
push
sbb
lds
lock
stos
test
inc
ljmp
in
dec
test
xor
adc
cmpsb
insb
mov
cmpsl
adc
out
xchg
addl
jl
xchg
cmpsb
push
xor
jne
inc
lret
jg
lcall
cmp
mov
pop
cmp
jle
fstpt
xchg
mov
xchg
aas
fucomip
inc
cli
fmul
or
sub
ds
push
xchg
addr16
push
scas
lahf
les
stos
sbb
lods
sti
pop
push
jp
jg
jb
mov
pop
and
movsl
mov
cmp
or
mov
cwtl
idivb
fs
in
pushf
pop
mov
cli
dec
jle
pop
fnstenv
cld
mov
or
scas
xor
fistpll
fstpt
dec
mov
cmpsb
mov
xchg
xchg
mov
scas
cmp
push
aam
sbb
mov
dec
out
cmp
rorl
push
divb
xchg
cwtl
andb
dec
pop
mov
fcompl
adc
sti
and
fldl
fadds
je,pt
mov
xchg
lret
arpl
mov
stc
mov
nop
std
push
repz
movsl
sbb
push
outsb
mov
add
mov
stos
fcomps
and
mov
jb
loopne
push
test
pop
xor
outsl
rcrl
push
hlt
push
pop
pushf
and
out
mov
ljmp
jb
jns
lcall
mov
repnz
jecxz
inc
mov
pop
mov
aam
mov
xchg
mov
lcall
mov
push
jp
or
imul
mov
mov
cmp
mov
add
test
pop
or
mov
repz
xchg
mov
inc
jl
in
clc
xor
cmp
aas
mov
inc
cmp
addr16
fwait
or
pop
and
sub
mov
mov
pop
sbb
jo
je
enter
adc
cmp
mov
xchg
scas
out
ret
out
fsubl
sbb
outsl
cmp
mov
pop
cmp
sbb
insb
xor
repz
push
add
int3
imul
mov
orl
jge
dec
mov
popa
dec
jl
push
mov
hlt
jge
sbbb
mov
adc
ljmp
repnz
test
pop
xor
sub
cmp
lock
pop
dec
push
or
cmpsl
push
xchg
js
popw
jae
insb
mov
push
test
sub
xchg
jecxz
daa
inc
lods
mov
push
add
push
cli
and
int3
outsb
jno
inc
sbb
pop
lock
scas
and
andb
jns
and
les
sub
hlt
out
cmp
mov
mov
push
or
adc
dec
dec
jns
mov
add
jne
cmpsl
gs
push
sub
movsl
jg
push
sbb
jle
pop
jae
test
shll
mov
daa
icebp
xor
inc
faddl
xor
mov
pop
xor
pushf
pop
stos
in
addr16
pop
stc
jbe
sub
push
lds
fistl
xchg
mov
mov
pop
addr16
pusha
push
pop
jge,pt
cwtl
sbbb
inc
cmp
fidivrl
daa
idivb
xchg
and
dec
add
sbb
sbb
push
ds
sbb
or
shll
or
xor
mov
jle
cld
dec
dec
xor
push
sbb
and
cmpsb
aas
out
insl
sub
or
pushf
shll
mov
int
mov
push
jle
icebp
pop
pop
mov
sbbl
pop
jmp
sbb
add
fs
cmp
lahf
fcomps
loopne
rcll
gs
inc
or
mov
into
inc
loopne
jp
movsb
cmp
inc
ret
repnz
popf
out
jmp
cmpsl
inc
jmp
sbb
sub
in
mov
xorl
mov
pushf
je
xchg
dec
mov
iret
movsl
cmp
pop
sbb
xchg
add
mov
jo
xor
adc
add
cwtl
dec
pop
and
movsb
xor
in
mov
pop
cmc
mov
bound
mov
enter
cmp
fs
dec
aam
lahf
and
faddl
and
mov
addr16
xor
sahf
out
jl
mov
cmp
repz
fs
sbb
aas
or
sbb
pushf
cmc
add
int
pushl
mov
fmull
out
and
test
dec
pop
leave
jbe
insl
cmpb
insl
jle
cli
in
sub
sub
ja
insl
aas
mov
jecxz
pop
jl
adc
pop
adc
add
repnz
lods
cmp
push
cmp
lods
into
lret
cmpl
fwait
mov
dec
push
push
aam
and
rcrl
out
sbb
sub
push
push
jmp
imul
enter
xchg
cli
jl
or
or
decb
adc
xor
mov
stos
sub
testb
movsb
pop
xchg
cmp
push
clc
rolb
cli
lods
clc
xchg
sbb
cmp
fstl
out
fcomps
fisttps
mov
mov
pop
push
sub
xor
pop
cmp
jns
xchg
sbb
cmpsl
fwait
mov
cmpsl
pop
pop
lock
pop
xlat
mov
bound
popa
pop
mov
sbb
jmp
test
xchg
fwait
mov
mov
cld
cmp
mov
xorl
in
cmp
lcall
fwait
adc
nop
jmp
loopne
cli
mov
loop
jb
push
mov
sahf
in
pop
xlat
out
push
loopne
cmp
xchg
cmp
int3
fsub
std
xchg
jbe
lods
add
negl
aas
out
or
andl
cmpsl
sti
xorb
int3
xchg
outsb
cli
sbb
cltd
mov
adc
push
repz
xchg
das
push
scas
xchg
sti
pushfw
sarl
sub
adc
outsl
cmp
je
jne
sub
cld
inc
mov
stos
jge
inc
inc
inc
fs
mov
inc
mov
pop
mov
cmp
int3
jg
mov
add
adc
xor
in
xlat
mov
aam
cli
jg
scas
add
fsubrl
popf
enter
pusha
inc
ljmp
jp
xchg
sarb
pushf
loop
lret
cs
jno
pop
scas
xor
pushf
in
fisubl
push
sahf
adc
mov
sub
and
sub
xchg
jnp
cli
lods
call
push
rcr
sbb
lcall
adc
loope
std
shrb
pushf
pop
mov
or
icebp
clc
cmp
mov
inc
inc
adc
mov
lods
pop
leave
sbb
mov
lods
fwait
add
adc
xorl
inc
lahf
adc
out
imul
xchg
sbb
std
out
sbb
add
aad
sub
fistpll
std
arpl
xchg
mov
test
push
mov
xchg
fcoms
mov
mov
fcomi
cmp
stos
mov
fnsave
icebp
repz
movsb
je
pop
sqrtps
jmp
pop
jl
cmp
mov
mov
gs
push
int3
cmp
dec
inc
sti
fimuls
cmp
nop
mov
mov
fistl
repz
scas
pop
ret
pusha
fcmovnb
repz
mov
sti
and
cmp
aad
xchg
or
pop
cmp
sbb
mov
gs
xchg
fistl
xor
into
pushl
andb
fdivr
les
lods
cld
sti
adc
pop
imul
push
pop
xchg
call
outsl
into
mov
adc
pop
sar
cmp
mov
nop
cmp
xor
int3
inc
outsb
les
cmp
cmp
inc
mov
xor
push
sbb
cmc
pop
std
sti
push
sbb
xchg
sbb
repz
cmp
mov
adc
fldenv
mov
xchg
mov
pop
aas
mov
fstpl
dec
and
data16
and
shl
lea
push
int3
cmp
pop
insb
lret
sbb
push
inc
mov
sbb
lds
out
and
xchg
dec
mov
mov
xchg
or
mov
jb
sub
pusha
ljmp
push
or
loope
dec
dec
fsubs
ds
enter
aas
dec
rcrb
into
mov
sbb
lds
lods
aas
in
imul
and
push
subb
push
sbb
in
lcall
sbb
dec
lret
cmpb
into
pop
pop
inc
push
mov
sbbb
out
fcomps
jl
and
sub
mov
sbb
sub
les
dec
lahf
jmp
jne
outsb
and
sar
cmpsb
sti
es
movsl
mov
outsb
push
outsb
imul
into
test
mov
jecxz
push
jne
js
int3
cmp
lahf
xchg
int
test
cli
push
pop
mov
or
adc
or
imul
or
adc
sbb
movsl
xor
cli
sbb
xlat
xchg
pushf
stos
lds
fbld
and
iret
mov
sti
jns
and
sub
jmp
mov
adc
test
mov
ret
es
pushf
je
int3
xchg
sbb
nop
notb
sbb
add
insl
lahf
jg
shlb
adc
jne
mov
bound
mov
mov
dec
in
adc
add
jbe
cs
and
cmp
addr16
test
mov
pop
pop
mov
loopne
jns
mov
outsl
xor
push
fwait
dec
rol
adc
push
test
enter
dec
jns
gs
lods
lds
pop
cmpsb
push
adc
pushf
fimull
ss
xor
es
daa
stc
xchg
xchg
cmp
mov
xor
icebp
xor
jp
mov
push
jl
xor
xchg
loope
jg
mov
push
pushw
movsb
xchg
jp
sbb
andl
pop
adc
xlat
hlt
pop
sub
clc
es
les
xchg
fstp
mov
in
pushf
push
aaa
leave
ret
and
dec
imul
mov
or
push
rcr
test
fsqrt
clc
test
push
mov
fdivrl
dec
sbb
xchg
sub
idivb
pop
xor
xchg
leave
mov
pushf
mulb
jp
mov
push
jnp
out
sahf
cmp
arpl
push
test
movsl
inc
mov
hlt
pop
popf
cmp
mov
leave
mov
cli
mov
push
mov
repz
dec
mov
xchg
and
pop
sbb
std
pop
adc
dec
cmp
addr16
cmp
jle
push
outsb
cld
push
repnz
insl
cli
inc
xchg
jge
push
scas
mov
scas
std
test
sbb
bound
test
bswap
fisubrs
sbb
out
negl
xchg
cmp
jno
or
jl
mov
sbb
push
sub
add
mov
aaa
incl
sarb
cld
inc
or
add
cmp
add
xchg
clc
test
pop
and
pop
dec
mov
jle
and
stos
sbbl
mov
shrb
inc
leave
lret
hlt
aas
leave
stc
cwtl
outsb
clc
out
mov
cmp
push
mov
scas
outsb
cwtl
and
lods
pop
fcomps
shl
hlt
cmpsl
shl
fnstenv
sub
fcomps
out
sbb
lahf
cs
xchg
in
mov
add
and
add
mov
stos
sti
cs
and
out
stc
cmp
sbb
int3
or
iret
cmp
lods
cmp
sbb
out
cmp
mov
sub
fwait
jbe
pop
loop
cmp
xlat
adc
cwtl
test
sbb
out
push
pushl
xchg
xchg
jecxz
xor
mov
cwtl
jne
mov
and
iret
mov
jl
test
mov
lods
iret
add
mov
jg
pusha
pushl
mov
mov
sbb
mov
int
test
bound
xor
call
push
jp
xchg
xchg
or
inc
pop
mov
fisttpl
pushf
outsl
test
repnz
add
scas
jo
nop
sti
jb
push
jg
in
sti
ret
ss
and
push
mov
jl
jge
es
sub
adc
fdivl
rclb
clc
pop
hlt
test
xchg
cwtl
jo
std
imul
pop
les
mov
push
xchg
inc
cld
fadds
outsl
and
mov
imul
loope
sub
je
push
cmp
cmp
ret
dec
xor
bound
sub
xchg
xchg
mov
lock
sub
mov
inc
aaa
mov
outsl
cmp
push
ss
xchg
cmc
xchg
repz
mov
cli
cld
cmpsb
jnp
sbb
cmpsl
xor
jp
xchg
insb
xchg
das
decl
orl
test
pop
daa
mov
dec
fsubr
cli
rcl
fs
ds
mov
das
xchg
xor
ret
or
pushf
fstpl
adc
cmp
cld
imul
push
or
mov
jg
pushf
cli
mov
lahf
sahf
es
push
ret
mulb
cmp
ret
lcall
daa
pop
outsl
dec
sbb
add
add
daa
inc
lahf
decl
and
insl
inc
mov
nop
fistps
fdivs
aas
out
xchg
fcoml
lea
movsb
pop
aad
and
mov
mov
adc
sbb
dec
cli
lods
mov
cmp
cmp
cmp
inc
xor
lret
xchg
jecxz
ja
push
mov
fmuls
icebp
xor
mov
mov
jne
cmp
int3
sbb
sub
mov
sti
mov
mov
lods
lods
or
sub
pop
jb
inc
lahf
mov
mov
push
cmp
in
sub
sbb
push
ds
jbe
cli
cmp
cs
aas
adc
scas
jmp
in
out
mov
bound
fadd
push
sub
addr16
sbb
in
cli
pop
divb
test
jo
sub
negl
pop
xchg
lods
mov
inc
rorb
arpl
adc
mov
push
in
ret
mov
or
jle
pop
mov
mov
sti
and
push
sbbl
mov
jg
xor
adc
pushf
popa
mov
or
outsl
sbbb
or
cld
scas
mov
mov
add
cltd
mov
and
adc
fcom
cmp
in
cmpsb
mov
mov
xor
scas
mov
sbb
cmpsl
fsubl
pop
ret
jge
xchg
sbb
pop
lods
jns
jns
ds
xchg
jmp
cs
ret
adc
rcrb
testl
dec
arpl
test
test
sti
cmp
mov
cmpl
xchg
xlat
mov
cltd
mov
daa
pusha
je
and
add
mov
jmp
mov
dec
popl
and
fidivrs
mov
addl
stos
sbb
lahf
add
pop
add
cmpsb
jnp
or
xlat
outsl
aad
rcrb
mov
xor
mov
or
js
js
aas
or
sti
in
cwtl
mov
pop
rclb
fxch
pushl
repnz
pop
fistl
xchg
test
xchg
pop
add
ret
push
add
mov
pushf
addr16
dec
xchg
fisttpll
out
testl
nop
shlb
xor
mov
inc
jge
inc
mov
test
jecxz
sbb
fwait
pop
stos
arpl
and
inc
ljmp
test
scas
pop
inc
jo
out
test
sub
mov
xor
int3
insl
fsubl
sbb
loop
jae
test
aas
outsl
mov
lcall
mov
mov
sbb
mov
or
push
es
je
ljmp
lahf
pop
aam
rol
pushf
cmp
push
mov
ret
mov
sti
sbb
hlt
mov
push
push
mov
add
movsl
lahf
js
and
fisubrs
jmp
loope
dec
cmpsb
fdivrl
in
dec
sarl
mov
aas
fistpll
inc
in
sti
mov
pop
stos
xchg
pushf
fstpl
cli
adc
jno
mov
lret
ret
mov
xor
jl
jb
sti
add
lret
hlt
jmp
insl
mov
mov
or
jmp
fstp
cld
mov
cld
jl
scas
sbb
cmp
fsubrp
mov
xchg
add
loopne
add
mov
dec
and
lds
dec
sbb
movsb
sbb
jb
ret
push
jle
int
jl
pop
je
stc
js
mov
sbb
and
lahf
mov
loopne
test
pushf
js
fildll
sti
push
lods
fidivrl
ja
xchg
push
sbb
out
fisttps
mov
xor
movsl
fcompl
and
cmpb
adc
loop
sbb
insb
sbb
in
lods
sarb
rorl
ljmp
push
adc
pop
sti
stc
jge
push
sub
out
mov
or
add
jl
jae
sbb
inc
and
enter
pcmpeqd
arpl
sub
mov
sub
or
sbbl
jbe,pn
push
cmpsl
movsb
cwtl
js
mov
call
cli
xor
mov
rclb
push
lret
in
ds
aas
xor
pop
pop
pop
cmp
jnp
inc
cmp
lcall
push
cs
call
cmc
sbb
neg
inc
or
mov
dec
push
pop
arpl
adc
push
xchg
lods
jb
add
and
mov
pushf
cwtl
xchg
and
inc
sbb
dec
aas
cmp
addr16
stc
loop
push
jae
mov
xchg
lret
inc
shlb
aaa
scas
andl
sub
push
jns
lret
mov
test
push
aaa
pop
jo
mov
fwait
cs
ret
jnp
mov
dec
cmp
sarl
mov
pushf
sti
les
and
adc
dec
push
add
pop
cmp
mov
cmp
push
sbb
jmp
xchg
aaa
pop
hlt
adc
jbe
pushf
sub
pop
insl
lods
sti
into
inc
xchg
lret
sbb
and
and
lods
push
fisttpl
sub
jno
movsl
adc
icebp
aaa
pusha
pop
call
iret
insb
pop
or
or
pop
pop
repz
hlt
fadds
scas
daa
fwait
test
mov
repz
int
fwait
insl
xor
xor
adc
cmpl
aas
mov
mov
xchg
daa
fists
repz
cmp
inc
mov
lahf
dec
sub
pop
fsubrl
inc
mov
push
outsb
notl
out
mov
xchg
or
cmp
push
out
les
pop
sub
pop
mov
in
mov
xchg
hlt
shl
cs
stc
pop
mov
mov
sbb
push
hlt
clc
pop
xor
clc
test
insl
ss
dec
and
mov
sub
add
scas
cwtl
mov
inc
sbb
sub
loope
xor
pop
fstps
mov
imul
pop
xor
xchg
or
mov
seto
mov
xchg
test
pushf
push
aam
lds
cmp
inc
push
in
mov
and
jno
fmull
jle
dec
insb
lds
jl
jp
dec
out
cli
dec
fucom
mov
fwait
mov
cld
scas
or
mov
clc
fcoml
iret
push
jp
xchg
out
lods
jnp
imul
sahf
pushf
out
mov
imul
aas
imul
clc
add
and
adc
jnp
or
sti
out
add
pop
push
mov
pop
and
add
test
pushf
out
add
mov
mov
xor
cmc
lods
pop
aas
fmulp
push
jne
xchg
fdivr
in
enter
sbb
lret
or
mov
lret
ljmp
pop
das
lods
ret
dec
inc
sbb
mov
into
cs
cmp
sarb
popa
xorl
sbb
cmp
fwait
mov
adc
pop
lock
fists
dec
fistpll
fwait
pop
mov
test
loope
cwtl
dec
mov
sbb
push
xchg
loopne
andb
aas
inc
insl
sahf
xchg
mov
in
fisubrs
inc
cltd
fwait
stos
psllq
fbld
cmp
xor
aaa
adc
bound
adc
outsl
lcall
push
push
push
lret
and
out
push
outsb
xor
icebp
es
aas
je
cmp
clc
xchg
lods
inc
clc
dec
sub
call
sbb
insl
cmp
mov
rcrl
jbe
pop
mov
mov
adc
clc
and
lock
insl
push
pop
sahf
movsb
xor
pop
pop
mulb
call
pop
fcoml
jae
int3
enter
pop
sbb
or
cli
or
xor
daa
out
or
pop
adc
pop
pop
mov
shrb
sub
cli
push
cmp
popa
xchg
insl
aas
cmpsb
jg
pop
in
imul
inc
std
lcall
iret
repz
movsb
imul
cmp
or
mov
jl
test
pop
mov
push
outsb
mov
pop
es
pop
or
test
and
daa
sbb
cltd
sbbb
outsb
or
out
cld
ss
pop
push
jge
lock
sti
push
fs
push
push
push
lcall
imul
push
pop
sarb
or
sbb
add
jnp
xchg
mov
sbb
int
push
aad
cmp
movsb
sub
fwait
mov
fbstp
lds
cmp
std
pop
stos
jae
mov
lods
jge
lods
aas
push
and
jge
push
sbb
sti
test
dec
mov
pushf
xchg
dec
mov
mov
cmp
jmp
dec
test
cmp
mov
jle
add
fidivl
lahf
aas
sbb
ljmp
mul
pusha
adc
mov
pop
js
fadd
insb
jecxz
mov
jg
xchg
movsl
inc
scas
sbb
push
xor
sbb
push
pop
mov
dec
jns
cwtl
test
mov
add
mov
idivb
xchg
faddl
xor
jle
mov
jb
and
call
repz
adc
inc
jne
out
fs
inc
fstps
mov
and
lods
out
sbb
xchg
xor
hlt
mov
ja
mov
out
pop
inc
push
pop
imul
loope
popf
rcrl
dec
test
clc
fcomp
in
mov
xchg
push
xchg
icebp
mov
jg
jnp
jne
push
cld
nop
cmp
lea
rolb
xchg
loop
jbe
push
adc
xor
insb
clc
adc
push
or
fstl
cwtl
push
sti
pop
scas
mov
ljmp
fstpt
push
and
aas
mov
mov
mov
sbb
mov
pop
cmpsl
mov
aas
xor
or
fadds
aas
cmp
pushf
popa
sbb
mov
cwtl
jle
das
lahf
jno
cmp
pop
pop
test
push
pushf
cmpsl
and
lods
push
push
jns
mov
cwtl
push
xchg
push
in
loopne
decl
pop
neg
jo
in
push
in
pop
mov
insb
jecxz
mov
inc
popa
push
xor
mov
out
cmp
lahf
fsubr
lods
xor
test
or
and
mov
mov
dec
cli
iret
mov
dec
cwtl
inc
ds
sbb
pushf
inc
pop
push
lret
ljmp
rolb
cwtl
push
add
mov
and
xchg
sub
adc
sub
out
dec
pop
aaa
fimuls
add
leave
lcall
add
jmp
or
aas
or
adc
adc
jp
push
push
mov
and
lahf
lds
and
add
aaa
cwtl
js
sbb
in
jnp
rolb
dec
testb
mov
adc
ds
lods
ds
in
fists
fsubr
pop
sub
mov
cmp
or
repz
inc
pop
sub
dec
test
jge
mov
int
lods
cmc
mov
jmp
fistpl
js
mov
sub
pushf
adc
push
loope
mov
cmpsl
sti
cs
dec
sahf
pop
out
and
add
adc
xor
dec
mov
sarl
mov
imul
add
jle
xchg
cs
int3
dec
jl
pop
out
push
sub
cwtl
std
iret
pop
dec
rcrb
adc
pushf
aam
loope
mov
add
pop
mov
pop
dec
or
pop
mov
test
movsl
pop
lcall
sbb
xor
inc
int
or
mov
out
call
xor
and
xchg
dec
mov
idivb
popf
pop
adc
lret
adc
jge
aam
mov
cmpb
pop
xor
mov
ffreep
cmp
insl
nop
addr16
mov
add
and
jae
cwtl
xchg
rol
pop
sbb
inc
jle
int
add
in
lock
mov
out
and
stos
xchg
jecxz
out
dec
sbb
es
jo
sbb
mov
bound
mov
dec
and
arpl
loopne
jb
cmp
cwtl
xor
push
mov
idivb
jne
mov
fdivs
fwait
inc
cltd
int3
and
and
adc
add
int
sbb
cltd
xor
imul
jnp
je
in
enter
andl
or
ffreep
test
call
adcl
cli
in
loope
shlb
mov
mov
xor
enter
imull
cmp
outsl
adc
cwtl
cwtl
dec
les
sub
aas
cmp
mov
lea
cmpl
lods
and
cli
outsb
sub
lcall
fadds
cwtl
int
mov
or
ljmp
xchg
pop
test
jmp
xor
push
ds
xchg
scas
int3
cmp
outsl
iret
fsts
rcll
dec
test
xlat
stc
test
fmul
push
adc
mov
lock
inc
jb
popa
mov
mov
jo
rol
jno
cwtl
in
mov
int3
mov
sbb
mov
ja
or
mov
pop
sbb
out
pushf
adc
lret
add
or
push
mov
cmpb
out
mov
lcall
mov
cmp
mov
pop
sbb
mov
mov
sti
cmp
cwtl
test
xlat
insl
sub
sbb
fbld
adc
lock
orl
out
movsb
data16
fistps
lcall
in
inc
cmpsb
mov
mov
sbb
nop
arpl
data16
in
and
pop
xor
sbb
lods
xchg
pop
or
rcl
lds
sub
mov
sbb
into
fcmovb
dec
jmp
std
je
outsb
adc
gs
lods
dec
jl
aad
jge
clc
xchg
pop
sbb
mov
js
ja
xor
cmp
and
sbb
pusha
fdivl
lret
iret
clc
pushf
and
fwait
sti
push
lods
lock
sub
or
ss
hlt
mov
inc
lods
pop
test
ret
test
xchg
sti
enter
nop
movsl
testl
adc
mov
or
pushf
xlat
cld
mov
mov
mov
mov
daa
addr16
loope
mov
mov
mov
arpl
int3
mov
loope
cmp
xlat
fstpt
sbb
or
cmp
test
inc
mov
popf
inc
jnp
out
in
xchg
mov
push
fcoms
push
arpl
xor
aaa
in
nop
or
adc
push
stc
aaa
cmp
js
sbb
rcll
and
fcom
sub
in
sbb
mov
inc
mov
cmp
push
scas
lcall
cmp
inc
cmc
fsubrl
das
sbb
lret
push
push
xchg
clc
mov
in
inc
sub
xor
std
leave
mov
jp
cmp
cmp
mov
pop
or
pop
jl
cmp
fisubrl
mov
cld
inc
rcr
xor
add
jp
js
nop
mov
cmc
dec
jb
rcrb
xchg
dec
shrb
dec
fistl
push
jle
jle
xchg
pop
mov
sub
das
int
mov
cmpsl
out
xchg
sti
adc
mov
cli
scas
and
outsl
jp
jecxz
gs
mov
in
sub
cmp
sbb
jle
outsb
push
ds
mov
int
sub
and
jb
les
sbb
fistps
add
jle
and
andb
in
cltd
push
pop
sbbl
cld
inc
xor
push
mov
loope
mul
push
mov
dec
or
inc
adc
in
sbb
xor
xchg
dec
repnz
aad
repz
les
lret
das
lcall
mov
cmpsl
stos
jg
fidivl
mov
js
ljmp
push
cld
ja
mov
adc
pop
fnstenv
sahf
adc
mov
fs
jge
cwtl
pop
nop
stos
sti
out
sbb
fistpll
add
movsl
xor
pusha
jg
gs
mov
je
xor
sti
ljmp
mov
pop
adc
xor
sub
jp
sahf
pop
mov
pop
nop
sti
mov
std
aam
jne
mov
push
ret
and
xor
sti
sub
cli
add
idiv
pop
negb
adc
imul
jne
pushf
ret
enter
cmp
stos
jnp,pn
mov
xor
cld
adc
pop
mov
or
jae
mov
aam
sbb
pop
mov
inc
adc
pop
xchg
mov
sub
mov
mov
stos
movsl
ret
mov
repz
cld
fadds
cli
cmpb
pop
dec
jb
cli
adc
lds
addr16
sbb
mov
jle
add
jnp
sub
sbb
into
sahf
sbb
pop
adcb
sahf
sahf
mov
icebp
int
sbb
inc
sub
sbb
and
lock
jns
mov
popf
sbb
push
xor
xor
xor
mov
out
mov
cmp
and
mov
fadds
pop
fisubrs
ss
pushf
lods
xor
aas
dec
cltd
inc
gs
aam
or
cmpsl
add
inc
stos
add
ret
popf
xchg
rorb
jmp
mov
arpl
push
sbb
out
mov
add
mov
rorl
adc
xchg
lea
out
dec
cmp
sbbl
cmc
int3
push
adc
test
loope
ss
cmpsb
nop
aas
sbb
cmpsl
mov
xchg
out
sbb
fcomps
jle
std
add
xchg
jns
push
pop
xor
out
mov
jg
mov
xchg
jl
outsl
add
pop
icebp
jo
in
mov
lret
pop
aas
jae
sbb
dec
sbb
mov
leave
inc
cli
jp
mov
sub
lods
mov
xor
loopne
fmull
leave
dec
jecxz
das
out
pushf
stc
push
and
mov
icebp
fldt
cmp
jg
fistpl
cld
sbb
mov
bswap
and
fwait
inc
mov
jg
addb
jbe
ja
clc
pop
cli
das
or
lds
stc
sahf
jecxz
add
xchg
lret
sbb
cmp
aas
leave
jmp
sub
scas
add
mov
and
cli
jl
pop
xor
addb
jno
ret
add
test
jnp
into
std
jae
mov
jnp
mov
jne
pop
movsl
mov
or
add
mov
xchg
cmp
and
sbb
sub
mov
jp
pop
dec
je
adc
sbb
neg
mov
and
mov
add
adc
repz
cmp
shlb
out
insl
jo
sub
cmp
jge
fnsave
or
cmp
inc
sbb
xchg
xor
xchg
dec
cmp
loopne
mov
inc
enter
popf
inc
je
fidivrs
aad
xor
mov
orl
cmp
xlat
fidivl
cmp
pop
xor
movsl
imul
lahf
aas
push
sar
aas
call
xor
mov
mov
clc
fcomps
mov
sub
push
clc
subl
sbb
mov
lds
jp
lods
or
xchg
test
rcrb
arpl
cmp
addr16
add
aam
scas
cmp
out
mov
fcomps
jns
lds
negl
or
push
mov
into
imul
mov
and
push
push
adc
sahf
inc
int
xchg
mov
les
xor
test
push
out
push
lret
stos
mov
aad
enter
push
pop
ds
pop
out
mov
sbb
lahf
pop
fsts
dec
jg
adc
out
cli
or
or
inc
mov
dec
pop
ljmp
ffreep
cmp
fsub
test
pop
cmpsb
outsl
or
lea
outsl
sub
lcall
aas
or
jmp
xlat
roll
dec
mov
imul
pop
dec
idivb
push
dec
clc
es
adc
negb
pushf
rolb
cwtl
mov
jge
fdivrl
jl
mov
aas
sarb
and
icebp
mov
lret
enter
aas
inc
and
aas
fs
xchg
jnp
xor
sub
test
mov
and
divl
cwtl
movsb
sti
loopne
cmp
add
in
dec
insl
dec
popf
mov
mov
fwait
xchg
mov
add
lcall
jnp
lock
test
decl
adc
in
mov
sti
ret
lds
cmpsl
fistpll
mov
sub
repnz
les
jno
sbb
sub
mov
xchg
xchg
push
icebp
movsl
aas
mov
mov
movsb
shrl
fdiv
xor
add
leave
jecxz
xchg
jnp
scas
pop
into
mov
mov
mov
mov
jbe
jmp
ficompl
lock
popf
inc
and
ds
xor
fdivs
push
jmp
push
cmp
xchg
rcrb
test
sub
jmp
popf
lcall
xor
aam
cmp
jnp
mov
icebp
popf
pusha
lret
mov
loop
dec
cmp
sbb
in
movsl
or
fdivrs
cli
xchg
sbb
jnp
inc
scas
cmpsb
cmp
fs
fld
cld
stos
idivl
cld
add
mov
pop
in
shr
enter
pusha
rclb
das
adc
mov
sbb
pop
daa
push
insb
mov
das
mov
push
pop
lcall
pop
lea
scas
mov
pop
fcoml
mov
mov
ljmp
hlt
pop
in
fdivr
mov
cmp
adc
add
push
sbb
push
cmpb
add
push
inc
std
pop
mov
jae
or
call
cs
inc
or
repz
pop
jle
and
jg
into
enter
sub
dec
fcompl
out
scas
shll
add
stos
inc
orl
mov
fiadds
rcll
xor
cmp
jns
in
jl
lret
and
ljmp
or
shlb
and
mov
cmp
mov
test
notl
in
mov
insb
sbb
fsubrl
mov
mov
xchg
int
fwait
pop
cmp
mov
cmp
aas
xchg
popf
xchg
mov
dec
nop
int
ljmp
fbstp
lods
pop
and
fimull
mov
mov
mov
rorb
mov
jo
cmp
std
mov
push
fistps
popa
sub
das
mull
lret
jle
pop
out
and
cmp
inc
sarb
das
mov
in
mov
cmp
mov
in
mov
inc
fmull
mov
es
mov
stos
popf
pop
lock
negl
mov
fiaddl
icebp
xchg
cmp
and
movsl
mov
iret
mov
xlat
repz
scas
cmp
pop
and
dec
addr16
test
push
and
mov
cs
fwait
push
push
jns
ljmp
pushl
das
xor
pop
add
cld
and
fwait
add
test
test
mov
in
clc
cmp
pop
jno
add
xchg
clc
pop
push
mov
cltd
sbb
inc
fistps
jg
movsb
cmovb
add
sbb
or
mov
test
jle
sub
stos
out
pop
cmp
stc
fwait
outsb
js
inc
mov
dec
enter
cwtl
movsb
push
movsb
ja
ret
out
enter
subb
add
fs
ret
fs
mov
add
sbb
mov
insb
test
icebp
pop
addr16
push
pop
pop
pop
sub
mov
mov
push
pop
jb
fcompl
in
adc
xor
mov
outsb
les
adc
mov
sbb
jle
cmp
bound
jnp
fmull
fimuls
mov
cmp
inc
int3
jno
fdivrl
push
orb
mov
cmp
sbb
push
pop
mov
pop
pop
je,pt
daa
cli
in
push
aad
pop
add
jne
movsb
call
cmpsb
in
pop
and
jg
inc
ret
lcall
xchg
dec
mov
xchg
sbb
dec
pop
fdivl
sbbb
mov
pop
std
and
testl
cltd
mov
pop
js
shrl
cwtl
xchg
scas
fwait
pushf
sahf
imul
jns
mov
mov
mov
cwtl
pop
mov
xchg
ret
popf
cmp
mov
cmp
out
pop
jg
ret
mov
xchg
outsl
jb
pusha
pop
xor
dec
mov
scas
movsb
and
bnd
jnp
xor
jo
xchg
clc
je
xchg
in
fcoms
out
fstpl
cmp
and
aad
lea
ret
fwait
out
cmp
xchg
cwtl
push
dec
aaa
pusha
lcall
std
xor
mov
jb
ss
push
fdivrl
sbb
mov
jg
fwait
int3
cld
loop
mov
aam
sahf
ficomps
int
sub
sub
pop
stc
dec
cltd
cwtl
jge
sbb
leave
shlb
lret
xchg
lret
add
lods
sbb
mov
cmc
adc
enter
cmpsb
js
mov
out
shrb
daa
and
cwtl
add
mov
cltd
mov
fmull
cltd
repnz
shl
xor
cld
movsb
and
pusha
ret
fcmovnbe
stos
pop
sub
lods
cmp
les
adc
pop
lods
and
cmp
dec
xlat
jle
mov
sub
mov
aas
lret
cmp
sub
sbb
xchg
pop
cmp
xchg
mov
mov
mov
mov
int3
sbb
xchg
les
mov
daa
xchg
pushf
movsl
arpl
mov
adc
aad
stos
sti
cmp
and
rcrl
mov
cmpsl
fsubs
call
mov
fnstenv
pop
pop
imul
pusha
mov
pop
mov
cli
lods
shrl
cmp
leave
mov
xchg
loop
movhps
push
mov
enter
mov
push
xchg
lods
push
mov
rcll
scas
sbb
arpl
loop
cli
push
pop
add
movsl
cmpsb
fists
or
mov
sbb
cmpsl
dec
jge
sub
sbb
ljmp
and
sti
mov
sti
out
cmpsl
fsubl
clc
xorb
loope
sti
and
push
leave
xchg
jg
jnp
pop
adc
inc
cmp
jns
sbb
cmp
popa
dec
ret
test
xchg
loopne
mov
es
je
out
cli
int3
icebp
cs
push
push
ficoms
pop
xchg
cmp
sbb
mov
sbb
pushf
jae
aas
sbb
cld
cmpsb
out
pop
fistps
pop
sbb
xor
mov
sbb
push
int
popf
sbb
mov
repz
add
cmp
inc
lods
mov
je
jl
imul
or
fs
cwtl
sbb
push
mov
inc
mov
lret
add
inc
push
stc
cwtl
or
clc
fdivs
add
add
mov
lret
push
cmp
lcall
aas
fwait
push
lods
stc
push
negb
cmp
sbbb
std
in
fstpt
das
fsubrl
ss
dec
sbb
cwtl
dec
mov
jmp
mov
jp
cmpsb
shll
xchg
jg
std
push
test
sahf
mov
xchg
xchg
push
fistl
xor
push
in
pop
stos
pop
into
pop
out
stc
imul
jl
xor
stos
xor
test
adc
xchg
cmpsb
fistps
aam
leave
cmp
inc
lcall
movsl
mov
and
andl
scas
and
push
mov
out
jno
mov
xchg
mov
cmc
mov
ror
jae
scas
cld
fistl
lods
mov
jecxz
rcll
or
sbb
pop
add
pop
sarl
xchg
jge
or
shl
aaa
popf
cwtl
andl
push
stc
jno,pt
data16
fs
cltd
lahf
cmpb
fstpt
dec
ret
mov
inc
inc
rcrb
in
pop
nop
sbb
push
push
push
sbb
mov
inc
ljmp
sub
subl
cmp
jecxz
jl
xor
stos
jae
push
cld
jge
dec
push
test
push
pop
or
push
movsl
jo
sti
shlb
mov
ret
ffree
loopne
addb
sbb
hlt
push
jae
sti
popf
inc
adc
sub
mov
lods
sub
loopne
cmp
lea
push
lods
test
jno
out
add
scas
sti
notb
mov
hlt
and
scas
or
pop
in
bound
jae
cwtl
mov
cmp
push
mov
sbbb
cmpb
mov
outsl
pop
jle
test
test
hlt
and
mov
das
pop
in
stos
aaa
pop
data16
sbb
dec
inc
in
push
dec
inc
adc
scas
and
and
pop
jne
insb
xor
push
dec
mov
cwtl
lahf
cmp
xchg
cli
ja
fsubrl
cmp
push
jo
outsb
shrl
das
fwait
sti
push
fstpl
adc
ljmp
mov
or
xlat
int
bound
je
js
mov
rcll
xor
push
stos
into
mov
mov
xchg
test
in
mov
test
pop
cli
mov
fcmove
sti
stc
push
test
inc
xor
aam
out
xchg
inc
jge
add
jl
fstpt
aas
mov
xchg
loope
loop
cmpb
lret
clc
sarb
sbb
in
mov
mov
jae
adc
ds
push
fs
sbb
test
pop
lret
push
push
cmp
test
aas
daa
adc
lcall
ljmp
dec
ljmp
xchg
out
aas
je
repnz
mov
ss
xchg
sbb
outsl
scas
pop
pop
adc
ficomps
scas
xor
lods
outsl
mov
lret
mov
add
icebp
pop
imul
adc
mov
mov
fnstcw
xchg
dec
mov
cmc
pop
ss
cli
fdiv
add
cmp
add
sub
mov
jmp
jl
pop
xor
mov
push
inc
je
push
pushf
mov
adc
sub
negl
leave
mov
pusha
lahf
into
inc
cmp
fcompl
cmp
enter
sbb
or
and
jne
sub
in
cmp
pop
lret
pop
sub
lds
and
pop
xchg
jecxz
inc
cmpl
mov
cmp
push
imul
pop
add
loop
and
cwtl
lds
mov
cmp
leave
mov
mov
movl
enter
outsl
mov
push
cmpb
or
pop
mov
in
sbb
push
pop
out
mov
cld
pop
inc
jnp
dec
ss
jmp
in
pop
xor
mov
mov
fstl
mov
jne
mov
cld
scas
jl
movsl
jnp
inc
inc
jnp
sub
pop
cwtl
lods
xchg
sbb
enter
xchg
int
cmpsl
iret
movsb
sahf
sti
out
in
loop
fdiv
scas
sub
adc
dec
xor
js
cwtl
adc
add
dec
jb
lret
push
mov
push
xchg
xor
ficoms
push
mov
sbb
pop
outsb
iret
int3
mov
mov
jecxz
sbb
test
aad
icebp
outsb
or
cwtl
fwait
call
pop
mov
jae
push
pop
inc
lahf
cmc
mov
nop
push
xchg
in
addl
adcl
sub
pop
icebp
xchg
cwtl
jg
sbbl
rolb
mov
cs
aam
movsb
mov
add
lea
jns
pop
aas
xchg
mov
mov
out
dec
sahf
jg
je
cmp
cmp
shl
cwtl
fildl
mov
or
bound
push
sti
sub
xchg
cwtl
and
and
or
inc
mov
test
adc
daa
xchg
cmpl
xchg
pushw
push
inc
xchg
lods
inc
enter
jae
xchg
push
fwait
ja
add
mov
pop
mov
cmpb
movsb
ds
popf
fcmovnu
aas
push
out
mov
int3
cmp
mov
fsubrl
mov
adc
xchg
mov
iret
test
push
jmp
repnz
adc
push
pushf
pusha
inc
adc
cld
mov
adc
iret
sahf
jle
xchg
pop
fimuls
scas
mov
clc
sub
cwtl
pop
hlt
daa
daa
arpl
insb
test
call
aad
lea
pusha
jg
cs
dec
fcomi
xorb
push
inc
inc
dec
or
cmp
not
push
imul
sbb
mov
pop
add
push
adc
adc
mov
lret
sar
fmul
cs
push
inc
cltd
mov
ror
mov
push
cs
icebp
sbb
xor
xor
pop
out
cmpsb
xchg
out
pop
movd
cld
into
sbb
jg
inc
aas
dec
fcomps
test
loopne
test
mov
pusha
ljmp
push
mov
fdivrs
andb
inc
inc
xchg
xor
fld
hlt
sbb
fisubrs
mov
push
fstps
pop
fdivl
sub
add
pop
push
cmp
out
int
mov
pop
jb
jmp
push
negl
cmp
dec
fdivl
mov
mov
jns
sbb
xchg
add
pop
lahf
sti
mov
jl
mov
mov
negb
insl
jo
or
pop
pushf
xlat
hlt
into
test
and
imul
arpl
and
mov
cmp
mov
stc
xor
mov
and
and
sub
aaa
or
and
xchg
add
fstps
mov
iret
jmp
mov
fidivrs
inc
jae
pop
jg
mov
cmpsb
cmp
pop
ret
dec
stos
iret
nop
and
movl
adc
cmpsb
lcall
cwtl
rorl
cli
or
mov
mov
add
outsl
push
mov
inc
push
xchg
fldcw
iret
add
addr16
and
push
repz
fisttpl
mov
xor
add
data16
dec
or
jle
aam
jo
jo,pt
xor
popf
stc
ret
jg
sub
add
psllw
pop
inc
lods
adc
push
jle
shr
jg
shrl
xchg
cmpsb
xchg
xor
mov
pop
cli
xchg
call
sbb
fiadds
shrb
fnstenv
mov
mov
mov
dec
jle
push
sbb
add
or
cmpsl
push
test
cmp
sub
adc
inc
idiv
fsubr
cmp
cwtl
repnz
das
sbb
mov
sub
in
jns
ficoml
outsl
mov
jl
rcll
adc
or
int
pop
or
push
or
shlb
das
dec
fdivs
fadds
mov
mov
movsl
dec
movsb
jg
sbb
push
push
pop
jp
pop
in
lcall
mov
xor
push
jle
push
dec
out
cli
ret
xchg
push
out
lahf
nop
dec
or
dec
jle
xchg
adc
pop
jnp
cwtl
jo
sub
sbb
adc
roll
push
mov
jp
mov
pop
js
mov
test
mov
popf
enter
inc
adc
sbb
fldl
lea
xchg
pop
into
mov
test
andl
add
jbe
int
dec
dec
pop
cltd
pop
into
into
push
mov
inc
sbb
test
in
mov
cli
cmp
adc
push
aam
push
jecxz
dec
popf
lahf
mov
faddl
adc
mov
stos
sub
andb
pop
fnstenv
sub
dec
push
sbb
imul
mov
push
sub
std
out
cltd
lahf
cld
add
mov
popa
pushf
mov
push
jmp
data16
lods
add
fldl
stos
jb
inc
fmul
call
pop
dec
les
sbb
cmpb
sub
mov
dec
mov
sub
les
negl
sbb
mov
cltd
sub
dec
push
adc
mov
int
adc
inc
push
mov
pusha
orb
ret
push
inc
mov
outsb
pop
cmp
pop
cs
inc
sub
jb
cmp
cmp
cmp
out
sarb
mov
fcomps
mov
leave
jo
out
sbb
mov
push
fcompl
fsubl
repnz
or
sub
enter
sub
outsb
push
movsb
xchg
pop
out
cld
mov
ror
xchg
cli
or
fsubrs
sub
insb
and
xchg
gs
pop
insl
jmp
inc
cmpsb
push
cmp
sahf
mov
faddl
push
push
sub
xchg
mov
mov
mov
push
ds
fdivrl
sub
and
xor
fsubl
mov
insb
mov
mov
xor
mov
cmp
out
or
mov
incl
xor
xchg
adc
adc
mov
xchg
cli
faddl
sub
aad
fiadds
int
jecxz
fists
bound
sbb
push
adc
adc
sahf
jmp
addr16
pop
insl
scas
jne
in
push
jle
dec
mov
mov
adc
xchg
push
pop
fsubr
pop
dec
xchg
sti
dec
cmp
cld
ret
sbb
and
mov
xchg
push
stc
and
jp
adc
call
pop
xchg
inc
xor
jmp
xchg
aas
jne
movsb
jnp
dec
fucompp
aaa
ja
pop
mov
jecxz
sub
call
mov
and
jbe
and
or
in
fmul
and
imul
fnstcw
cmp
jg
sbb
repz
add
mov
leave
pop
ds
cld
adc
es
addb
inc
addl
jnp
add
movsb
pop
sub
lcall
lods
ss
incl
xlat
addr16
adc
lret
mov
mov
psubsw
test
inc
push
popa
inc
arpl
scas
sti
fistl
xor
test
mov
ret
and
pop
and
jnp
or
std
test
pop
jo
in
sbb
xchg
xchg
sti
enter
aas
cmp
sbb
mov
pop
cmp
mov
jb
cmp
cmpl
sbbb
scas
pusha
into
aas
jmp
xchg
jae
ret
cmp
fs
xchg
push
das
sbb
cwtl
lock
xlat
and
adc
lds
pop
mov
shrb
adc
lret
push
mov
sbbb
stc
jns
pop
xchg
test
clc
pop
sub
fmul
mov
ja
add
iret
xlat
push
pop
dec
xchg
and
imul
outsl
dec
xor
adc
fdivrp
cmp
inc
inc
ret
fsub
sbb
lods
pop
test
cwtl
pusha
lret
pushf
sub
imul
mov
dec
fdivr
ss
ds
je
adc
loopne
leave
fadd
and
mov
mov
push
shll
std
mov
es
into
ret
mov
into
popf
xchg
sbb
and
add
std
xchg
xor
mov
mov
jne
cmpl
pop
daa
inc
lds
cld
movsb
scas
lock
pop
popf
mov
repnz
xchg
push
jecxz
fwait
loopne
repz
and
xchg
cs
notb
sbb
and
and
inc
imul
sarl
in
cmpsb
bnd
scas
sti
and
dec
loop
popf
cmp
jbe
fucom
mov
das
xor
cmc
repz
pop
sbb
jmp
mov
loope
pusha
nop
int3
cmp
dec
dec
pop
stos
rol
pop
mov
loopne
mov
imul
cmp
mov
movsl
jg
or
data16
mov
shl
enter
jle
outsl
inc
loop
mov
sbb
xor
sbb
repz
out
cwtl
mov
mov
out
mov
add
icebp
mov
sbb
sub
pop
or
in
aas
mov
divb
adc
add
mov
addr16
xlat
stos
mov
jnp
frstor
push
test
or
sbb
mov
leave
fimull
pop
jp
call
imul
dec
adc
jns
jns
cli
fcomp
xchg
cld
push
in
cmp
mov
imul
cmp
mov
mov
lock
sub
xchg
outsb
cmp
test
les
lahf
adc
jo
xor
ss
cmp
ds
cmp
sbb
jnp
inc
lods
into
cli
or
je
scas
lahf
shrb
clc
sbbb
dec
and
rcrb
mov
pop
ljmp
push
pop
enter
xorl
xchg
scas
call
xchg
sbb
gs
xor
jne
jge
mov
cmpb
leave
mov
sahf
fmuls
cmp
adc
mov
xchg
insb
outsl
aas
roll
stos
add
mov
mov
iret
mov
loopne
movsl
lds
adc
cltd
xor
xor
dec
and
ja
inc
adc
xchg
jecxz
and
jns
mov
fiadds
test
sbb
repz
sti
add
mov
outsl
lret
push
hlt
pop
mov
jle
std
inc
or
lock
adc
imul
loope
les
push
in
sub
mov
ret
pop
cmp
mov
sar
or
stc
push
std
out
leave
ljmp
adc
icebp
adc
outsb
dec
jecxz
and
movsl
push
movsl
inc
mov
add
pop
push
inc
hlt
call
fwait
mov
imul
addl
cmp
stc
fcoms
ret
ret
sub
mov
cmc
push
jbe
bound
fwait
inc
cmp
gs
jmp
cwtl
cmp
mov
or
outsb
dec
pop
sahf
cld
icebp
rcr
hlt
mov
sbb
sub
xchg
mov
loop
sahf
add
daa
sbb
icebp
and
pop
xchg
lret
notl
fmuls
sbb
dec
loopne
cli
jl
fwait
mov
dec
pop
jmp
cmc
or
hlt
and
sbb
mov
ss
adc
cmpsb
and
lahf
imul
sbbl
mov
flds
jp
movsl
mov
xor
test
jp
dec
cmp
sti
mov
mov
ja
mov
insb
inc
sbb
sarb
sub
mov
aas
mov
out
mov
cmp
push
decb
jecxz
bound
and
sub
testl
aas
clc
push
rcrb
pushf
inc
add
scas
jno
gs
sahf
mov
push
pop
xor
test
orl
mov
outsl
sub
aam
pop
dec
xor
cmp
ljmp
sti
cs
jo
inc
cld
sarl
js
sub
inc
imul
pop
ss
pushf
das
test
lret
or
jmp
jns
xlat
xor
pushf
aaa
lret
xor
fwait
xchg
pushf
add
sti
aas
insb
dec
movsb
sub
lea
aas
mov
and
ljmp
fdivr
nop
js
inc
loopne
sbb
rclb
cwtl
pop
bound
lret
xor
cli
mov
push
fnstsw
mov
stc
add
fisttps
xchg
cwtl
xchg
mull
push
stc
dec
movsl
push
push
orl
ret
lea
mov
aas
cmpl
mov
add
lods
sub
xchg
mov
lock
in
cmp
mov
call
stc
cwtl
bound
in
cmp
repz
and
aas
push
stos
xchg
jg
sub
lods
mov
sbb
push
sub
mov
insl
andb
jo
sub
mov
cmp
in
add
jp
mov
leave
ret
jp
mov
jo
cli
or
add
xchg
data16
inc
pop
ret
rolb
fcmovnbe
add
jns
jmp
aas
push
les
xchg
cmp
adc
cmp
sbb
enter
scas
add
cmp
bnd
enter
daa
adc
icebp
mov
mov
push
mov
mov
out
mov
mov
hlt
push
aas
adc
fcomp
ljmp
mov
mov
insb
cltd
mov
outsb
adc
xchg
push
outsb
mov
rclb
lea
jmp
lods
loopne
inc
jbe
test
xorl
xchg
dec
cli
jmp
sbb
and
sbb
lods
seto
mov
fiaddl
addb
mov
xchg
sbb
mov
mov
pop
fmuls
repz
mov
sbb
sbb
cli
mov
test
xchg
cmp
mov
jns
xchg
add
fcoms
test
in
cli
repnz
sbb
push
dec
xlat
inc
jno
pop
pop
std
cmp
sbb
xor
dec
adc
push
ds
call
adc
push
mov
mov
adc
cwtl
ret
lahf
xor
add
push
mov
pop
pop
inc
push
fimull
xchg
mov
inc
mov
push
cmp
les
xchg
ret
aad
mov
orl
call
out
pop
lods
inc
cmc
jne
dec
sbb
jp
rcl
adc
aaa
popf
add
cmp
fstp
rcll
sahf
fsubs
jae
aaa
inc
popf
cmp
xchg
mov
push
push
mov
mov
push
sbb
mov
push
mov
pop
push
inc
mov
nop
scas
xor
pop
push
aas
sbb
in
arpl
out
jne
xchg
push
xor
pop
sbb
mov
jl
out
nop
sub
pop
xor
add
enter
addr16
xor
xchg
cwtl
pop
inc
mov
pushf
mov
xchg
out
inc
test
imul
das
mov
andb
mov
sbb
cld
out
js
mov
jp
mov
add
push
repz
test
adc
or
mov
and
mov
cmpsl
fstpt
clc
inc
stos
mov
ds
lcall
lock
stos
loop
xchg
pop
jl
adcb
popa
cmp
jecxz
les
mov
mov
xor
icebp
popf
push
and
jecxz
cmp
movsl
inc
scas
shl
pop
add
fmull
outsl
cmpsb
pop
jno,pt
scas
test
aaa
sar
push
push
xor
ljmp
mov
js
sbb
ror
imul
leave
pushf
mov
sbb
xor
mov
xchg
mov
mov
cli
enter
sub
or
and
test
inc
cld
stc
pop
inc
xchg
out
push
call
test
sbb
and
xchg
sti
fldenv
lock
sbb
jmp
pop
cmpsl
packuswb
xchg
test
cmpsl
jp
cwtl
sbb
repz
or
xchg
xor
add
sti
jae
pop
or
pop
jb
jp
or
pop
mov
ds
lcall
adc
xchg
add
pushf
xor
lds
cmp
pop
add
in
stc
pop
hlt
xchg
jp
aam
mov
mov
push
add
xchg
add
sub
test
call
jge
cld
sahf
aas
data16
push
clc
jnp
mov
pop
push
stc
movsl
stos
loope
insl
stos
jo
fmuls
xor
popa
pushf
popa
enter
jo
cmp
inc
arpl
aad
add
test
lahf
sub
in
push
jo
push
mov
ltr
aas
xor
dec
adc
xchg
sbb
mov
push
les
or
lea
fmull
xor
add
push
loopne
mov
pop
xchg
sub
sti
das
pop
mov
jmp
mov
cs
pop
in
cmp
pushf
arpl
inc
mov
inc
jne
call
inc
or
push
jle
or
lock
jg
cwtl
sti
mov
out
mov
add
jle
cwtl
or
sahf
test
add
inc
mov
or
sti
arpl
arpl
fwait
test
ss
test
gs
testl
adc
and
sti
popf
mov
in
js
jg
xchg
inc
testl
mov
fsubrs
fmul
outsb
pop
rorb
mov
aas
fs
subl
jb
int
mov
push
out
adc
sbb
sti
xchg
jbe
adc
push
and
adc
xor
sub
adc
jle
stos
mov
outsl
or
cmp
bndstx
jg
pop
push
jp
inc
psllw
inc
xchg
and
mov
pop
std
insb
movsb
add
pop
in
pop
jg
sub
mov
sbb
test
pushf
jmp
es
fdivrs
xchg
stc
xchg
sub
adc
lock
push
mov
pop
cmc
mov
mov
adc
and
pop
mov
jb
mov
addr16
sub
or
pop
push
lret
in
or
add
cmp
lock
vmread
mov
scas
jp
xor
sti
daa
xor
xchg
sbb
jbe
jnp
mov
arpl
pop
push
movsl
jg
xchg
inc
cs
addr16
shll
cs
ljmp
adc
inc
mov
xchg
outsb
pushf
xchg
xchg
mov
je
not
mov
sti
enter
mov
mov
lds
push
mov
popf
aas
scas
loopne
push
push
inc
xchg
cltd
or
cmc
or
hlt
roll
add
push
xchg
lods
sti
adc
outsl
push
inc
je
dec
dec
cli
scas
jnp
push
cmp
add
push
and
lods
mov
ljmp
push
jecxz
icebp
in
lahf
pop
aas
sbb
xchg
stc
jg
jne
popa
or
sub
sub
mov
fnstenv
lret
jae
dec
stos
dec
bound
cmpl
xchg
pop
in
and
sbb
icebp
adc
mov
cmp
cmp
fwait
lret
out
add
adc
push
fwait
jbe
inc
test
incl
lret
inc
ljmp
fsubl
sbb
stos
iret
sahf
xchg
in
xchg
push
fistpl
fld
mov
cmp
subb
push
inc
sahf
mov
pop
aas
clc
ja
mov
pop
push
dec
jns
test
mov
ljmp
sbb
addr16
pop
adc
fcoml
mov
ja
shl
jge
ljmp
pop
cmpl
add
pop
idivb
fcomps
push
pop
lods
ds
adc
mov
test
xchg
notl
xlat
rolb
adc
mov
xchg
xor
xchg
adc
mov
and
pop
mov
jns
add
incl
mov
popa
cmp
xchg
inc
repz
dec
out
dec
imul
cmp
cmpl
out
add
ficoml
mov
vmread
aas
cmp
inc
icebp
insl
cmp
nop
pop
xor
icebp
icebp
das
es
cli
sbb
lock
mov
outsl
in
mov
cs
jl
lcall
cmp
push
test
in
jecxz
push
inc
inc
fdivl
pop
pop
arpl
inc
les
enter
sti
in
nop
shrb
add
mov
xchg
pop
rclb
sbb
add
lods
mov
ret
fs
scas
jge
mov
jae
pop
mov
mov
inc
and
xchg
sti
outsb
mov
movsl
daa
mov
aam
sbb
mov
insb
faddp
pop
sub
aad
bt
mov
push
out
daa
xchg
lret
cmp
adc
scas
pop
mov
enter
xor
leave
stc
sti
clc
insl
nop
or
mov
mov
mov
gs
jg
nop
xchg
sbb
mov
das
xchg
mov
cltd
pop
push
xchg
cmp
pop
into
fwait
sbb
cmp
cmp
ret
lock
std
push
cmp
xor
int
imul
mov
sbb
or
pushf
jmp
push
lahf
shrl
cwtl
ret
push
inc
inc
jp
test
fwait
lret
lret
mov
and
push
add
cwtl
mov
lea
jb
in
imul
insb
pushl
add
iret
inc
xor
es
jmp
fsubl
lods
jnp
and
or
inc
add
repnz
lock
mov
cmp
mov
jnp
adc
mov
jbe
in
stc
mov
pushf
mov
sub
js
mov
xchg
rcl
sbb
cli
lret
mov
stos
out
out
jle
stc
lahf
sti
out
pop
push
cmp
xor
xor
inc
aad
sbb
push
shlb
pop
cli
mov
pop
fdivl
sub
fdivr
xchg
outsb
cmp
mov
cwtl
lahf
and
pop
ljmp
sbb
xchg
mov
push
jle
xorl
jae
mov
test
mov
int
inc
ficoms
mov
aaa
mov
or
mov
xchg
xlat
xchg
jbe
xor
ds
fwait
cmp
cmp
and
lods
sti
les
cmp
xchg
inc
adc
pushf
insl
and
mov
pop
sub
fwait
xor
stos
fsubrs
dec
sub
ss
sub
and
xchg
stos
out
cmpsb
aas
pop
xchg
jmp
subb
outsb
repz
push
jns
add
push
cmc
and
xchg
jecxz
pop
mov
pop
inc
sbbl
jo
fists
sub
xor
add
enter
jmp
aas
push
fbld
mov
ret
cmp
in
xchg
mov
cmp
push
int
and
dec
mull
push
mov
jg
push
jl
jnp
xor
cmpsl
testb
addl
cmc
jns
cmp
adc
xchg
or
sbb
cli
fnsave
inc
mov
sbb
std
mov
cmp
scas
add
dec
mov
in
out
fdiv
fcomp
add
inc
xchg
jnp
jle
or
cmp
add
and
xchg
cli
fimuls
addl
dec
roll
hlt
or
cmpsb
sbb
cwtl
pop
lock
ja
in
adc
sub
cmc
jbe
xchg
sahf
adc
cwtl
sub
push
xor
je
dec
inc
push
mov
and
fmull
mov
test
cmpsl
jns
mov
cld
jb
xchg
fcoms
push
pop
jle
mov
cs
stc
pop
or
fisubs
mov
xor
leave
cmpl
movsl
jg
and
sub
pop
lcall
loope
add
repnz
xchg
repnz
cmpb
popa
mov
or
push
lds
pop
pop
jo
dec
sbb
inc
xchg
aad
mov
sub
xor
repz
test
mov
inc
inc
sub
xor
xor
xchg
jbe
push
sahf
sub
stc
push
lcall
mov
jns
dec
sbbl
mov
adc
ljmp
sbb
mov
shrl
mov
or
lret
test
ds
loopne
mov
movsl
cmp
cld
in
cmp
sbb
fwait
xchg
test
scas
mov
cwtl
sbb
jbe
xchg
stos
dec
ret
adc
stos
pop
enter
dec
pusha
pop
jo
xlat
popf
sbb
cltd
jne
test
mov
sbb
pop
test
aam
cmp
loopne
add
sahf
test
mov
ret
mov
je
jecxz
fisubrs
aad
jg
cmp
outsl
dec
cs
rorl
xchg
xchg
mov
loopne
ja
pop
lods
xor
outsb
js
test
ret
movl
into
lea
outsl
push
xor
mov
cmp
jno
jno
or
jo
sbb
test
xchg
fnsave
cs
xor
dec
les
xchg
mov
xor
mov
mov
repnz
mov
mov
cmpb
popf
inc
aas
cs
je
insl
mov
int
dec
inc
push
fs
faddl
fcos
cmp
mov
rcl
rol
ds
hlt
ljmp
mov
mov
icebp
fmul
add
lds
jo
adc
lock
dec
xor
mov
mov
movsb
ret
pop
repnz
xchg
leave
fsts
pushf
push
lods
sbb
sub
inc
push
es
nop
mov
lods
dec
and
fistps
imul
mov
push
mov
lea
rcll
sbbl
sub
push
dec
xchg
or
jnp
xchg
lret
cmpsl
mov
test
cmpb
sarb
sub
pushf
ret
jle
sbb
inc
dec
pop
fadds
mov
aas
leave
cmp
xchg
sbbb
dec
jle
lahf
cmp
pusha
ljmp
lret
stos
mov
test
mov
pushf
mov
lods
js
in
stc
scas
xchg
push
inc
nop
sbb
mov
mov
xchg
inc
lret
push
dec
push
pop
incb
mov
mov
repnz
xchg
mov
add
dec
stos
cmpsl
sbb
nop
jnp
pop
and
jg
pop
fs
jo
stos
push
mov
rcpps
rcrl
cld
sar
stos
paddd
mov
xor
pop
mov
ljmp
je
push
cmp
test
add
movsl
scas
rcll
and
hlt
mov
aaa
xor
js
xor
loope
leave
imul
pop
and
dec
or
and
roll
enter
ss
xor
cmp
mov
dec
lods
sti
and
inc
mov
xor
jmp
mov
cmp
stc
sbb
lea
sbb
sahf
test
fs
dec
and
pop
ud1
push
popf
cwtl
sti
pop
mov
int3
fdivrl
popf
cwtl
jb
pop
xor
pop
mov
aam
orb
mov
imul
mov
pop
cmp
sub
arpl
popf
lret
repz
repnz
fcomps
shrb
xor
loopne
mov
es
push
inc
pop
fucom
sti
jl
xchg
mov
sub
clc
pusha
adc
sub
lock
js
sub
addl
out
xchg
cwtl
xor
das
lahf
pop
lock
and
popa
movsl
mov
inc
insl
pop
or
cmp
mov
or
inc
aam
addr16
cmp
push
sahf
imul
cmp
inc
cwtl
in
clc
ficoml
sbb
xchg
xlat
dec
nop
test
or
jns
sbb
mov
inc
sarb
scas
mov
pop
pushf
adc
fadd
imul
daa
arpl
mov
addr16
clc
lds
push
aad
pop
test
pop
sbb
xchg
adcl
es
in
or
aas
xor
das
lds
scas
mov
xchg
test
pop
fwait
pop
sbb
push
mov
mov
xor
leave
mov
cmp
aas
in
loop
sub
pop
out
test
js
add
sub
xchg
mov
pop
xchg
hlt
jns
decb
cwtl
sbb
mov
sbb
divl
cwtl
dec
mov
sub
mov
dec
mov
mov
sti
xchg
sub
push
mov
test
cli
mov
dec
mov
or
jl
push
mov
loopne
pop
xchg
arpl
les
cmp
daa
icebp
mov
and
dec
and
jae
or
repnz
mov
sbb
sub
sarb
sbb
and
in
fadd
inc
into
iret
mov
cli
es
add
sti
cli
scas
xor
lock
cld
pop
loopne
es
push
mov
jl
jg
std
shll
pop
or
sub
mov
lods
flds
and
mov
enter
cld
cmp
fcmovu
in
enter
ficomps
sbb
or
pushf
sbb
mov
cmpb
fldenv
jno
cmpsl
mov
mov
inc
out
subb
adc
push
pop
push
or
int
jnp
cmp
sub
in
fistps
sti
mov
push
pusha
pop
push
pushf
das
dec
aaa
xor
mov
ret
jmp
xor
cmp
mov
es
lea
lret
sbb
sbb
pop
xchg
push
push
jae
push
and
pop
xchg
jp
pop
cwtl
and
cmp
mov
fcompl
mov
pop
jmp
ljmp
aad
sub
xchg
fmul
icebp
sbb
aas
test
ret
push
sahf
testl
cmp
xchg
test
stos
jae
es
test
mov
mov
sbb
lahf
push
xlat
sysexit
pop
iret
sahf
cwtl
mov
aas
xorb
fstpt
flds
push
mov
adc
add
fdivrl
ffreep
scas
test
ret
shl
ds
cwtl
push
fcompl
loopne
stos
je
arpl
add
cltd
mov
mov
xchg
sbb
jb
push
mov
cmp
lahf
and
cmp
push
xchg
mov
mov
cmp
mov
cmpsb
iret
cmp
test
clc
xor
and
test
push
sbb
stos
es
cmp
or
jnp
lcall
pop
popf
xchg
leave
sbb
mov
push
out
push
dec
mov
dec
dec
pop
filds
pop
push
test
pusha
mov
int3
adc
cmpsb
sbb
sub
test
daa
inc
xor
or
lea
aad
pop
cmp
xor
vandnps
lock
jb
sti
mov
lea
sub
rcll
in
pop
jae
aaa
add
outsb
xchg
imul
add
sbb
scas
ret
stc
mov
call
cmc
in
add
cmp
mov
pop
add
ljmp
mov
loope
nop
sarb
jno
xchg
adc
pop
in
lcall
add
aas
cltd
or
mov
mov
rolb
and
aas
sbb
jl
ret
je
loop
adc
iret
jmp
rcr
test
fildll
cmp
or
sub
jl
sti
mov
inc
mov
hlt
in
rcrb
sub
dec
mov
pushf
jno
movsl
popf
repz
repnz
insb
or
add
sbb
xchg
or
jl
ret
add
jnp
mov
mov
push
in
inc
mov
sbb
xchg
clc
adc
data16
stos
pushl
inc
jne
addr16
pop
fldenv
outsl
push
cmp
dec
in
jg
xor
fdivl
out
dec
int3
test
aad
pop
fcmovu
ret
push
cmp
mulb
mov
insl
mov
orb
add
jns
leave
dec
sti
sbb
push
mov
mov
xchg
or
inc
adc
sbb
sbb
sub
outsl
dec
scas
scas
jb
cmp
stc
push
in
arpl
mov
cmp
adc
sti
in
call
mov
jp
pop
dec
xor
push
lock
jg
test
push
enter
dec
cli
cmp
pop
test
xchg
or
xchg
cmp
imul
pop
and
mov
cmpsl
xchg
sub
pushf
incl
mov
and
sub
mov
out
lods
push
xchg
lds
pushf
mov
mov
sub
shl
cmp
repnz
push
cltd
push
lcall
int3
lods
shll
push
fdivrl
push
and
xchg
mov
mov
in
fwait
mov
xchg
and
int3
lret
sbb
cld
pop
cmpsl
adc
sbb
popf
enter
lock
addr16
sarb
imul
leave
es
jg
stos
mov
mov
dec
dec
mov
gs
mov
cmp
cmpsl
ja
sbb
pop
decb
popf
stos
jnp
pop
into
int
shll
iret
sbb
out
and
popa
rcrb
xor
scas
daa
sbb
push
push
push
out
mov
cmp
add
inc
repnz
pop
ficomps
rcr
rcrb
fstl
scas
pop
jg
mov
pop
enter
mov
mov
arpl
dec
aam
mov
imul
cmp
or
inc
out
test
sbbb
es
test
mov
sti
cs
movsl
test
lcall
push
fisubs
mov
push
ljmp
adc
mov
xor
not
dec
xchg
cwtl
cli
inc
stc
add
inc
adc
mov
out
shl
xor
mov
insb
movsb
push
add
lock
pop
scas
lret
gs
inc
push
adc
loopne
dec
sahf
pop
pop
mov
push
cli
mov
jno
or
mov
in
js
repz
mov
inc
imul
inc
jbe
inc
xlat
lahf
aas
test
out
mov
movsb
mov
mov
pop
sahf
sub
mov
fcomps
out
fdivrl
dec
pop
jl
lcall
scas
sti
mov
pushf
sub
es
jo
dec
loop
test
icebp
sbb
jge
fwait
sbb
movsl
mov
mov
dec
icebp
mov
rorl
enter
cmp
aaa
clc
pushf
mov
xor
pop
mov
lret
pushf
push
aas
cmp
jg
sbb
cmc
cwtl
outsl
fistpl
xorl
hlt
xor
pop
fcoms
fwait
mov
pushf
shlb
fchs
cltd
or
mov
pop
mov
outsl
fcoml
cwtl
xor
cmp
mov
pop
dec
push
sbb
loopne
pushl
cmpb
in
icebp
es
or
cwtl
lods
or
ret
ss
test
repz
pop
mov
in
sbb
jg
repnz
mov
mov
insl
and
pop
icebp
mov
test
jg
cld
in
daa
sbb
add
adc
int
push
jo
sahf
jae
sub
out
cli
call
outsl
mov
pushw
aam
pushf
xchg
and
mov
xchg
fcomps
xchg
dec
push
mov
in
xchg
cwtl
jnp
cmp
imul
sbb
jg
clc
cltd
sub
cmc
mov
pop
mov
cli
pop
jno
mov
or
xor
enter
mov
push
push
pop
sbbb
movsb
cmpsb
jg
pop
lds
push
fstps
mov
push
dec
push
jl
js
insb
lcall
mov
sub
cld
mov
sub
mov
fcompl
cmp
xchg
pop
mov
cltd
push
lods
lcall
loopne
jnp
inc
das
pop
out
inc
jg
dec
push
mov
pop
pop
in
inc
pop
pop
popf
push
push
test
ds
jbe
mov
xor
cmp
mov
inc
jmp
pop
fdivl
int3
add
xlat
and
add
adcb
movsb
mov
add
sub
sbb
lods
jp
pop
insb
dec
popf
jl
in
fiadds
xchg
mov
aaa
jp
and
clc
pushf
jns
sub
xchg
cmp
loop
adc
xchg
rcrb
xor
pop
pop
cwtl
sti
or
cmp
enter
shr
jnp
mov
call
lods
test
rorl
mov
aam
push
dec
jp
fisubrs
xor
cltd
mov
aas
arpl
inc
sbb
adc
inc
mov
ret
mov
push
sub
jns
in
dec
and
insb
push
stos
enter
stos
sti
and
cwtl
scas
gs
mov
mov
jg
dec
leave
inc
cli
lock
push
mov
jp
jmp
fwait
sti
pushf
jae
dec
sbb
mov
pop
fcmove
int3
insl
sbb
imul
pop
or
sbbb
sbb
and
negl
loope
jg
push
pop
out
test
fwait
pop
adc
fisttpl
mov
xor
stos
cs
int3
ret
dec
inc
stc
fwait
prefetch
cmp
push
cmp
pop
mov
das
xchg
cmpsb
push
jg
fcomps
jo
mov
jg
mov
sbb
aam
js
pop
frstor
mov
mov
stc
mov
sbb
adc
pop
std
loope
in
mov
or
cmp
xchg
sub
les
fimuls
pop
aas
pop
cltd
mov
xor
fidivrl
inc
pop
lods
out
bound
lds
out
cmpsl
and
cmpsb
lret
into
jb
xor
xchg
mov
mov
test
rcr
jp
add
mov
clc
cld
cld
xchg
pop
lds
repz
and
adc
mov
arpl
sbb
pop
dec
mov
jmp
jp
fcomip
jne
lret
pop
pop
cmc
add
scas
scas
notb
adcb
test
imul
enter
fwait
cmp
dec
xlat
xchg
cmpsb
ljmp
sahf
lahf
push
mov
jle
cmp
lea
fcom
pop
dec
push
inc
jbe
rclb
jp
inc
ljmp
cmp
xchg
not
cmpsl
jg
jnp
and
fisttps
xchg
imul
jne
mov
push
add
scas
popf
pop
sbb
outsl
inc
stos
pushf
int
mov
cmp
pusha
dec
lock
sbb
stc
scas
pop
popf
inc
sub
mov
add
xor
push
sbb
jp
nop
cmp
push
lods
pop
push
cwtl
loopne
jmp
mov
into
mov
push
mov
inc
sub
daa
add
outsb
xor
sbb
gs
xor
dec
aas
dec
imul
pushl
lea
and
xlat
sub
mov
fld
pushf
jg
and
sub
push
mov
mov
test
cmp
pop
mov
lahf
jle
or
fsub
fisttpl
xchg
pop
push
movsb
mov
movsb
fwait
insl
cmp
loop
cmpsb
sub
fisttpl
jle
pop
mov
hlt
pop
mov
aas
aad
add
popf
sbb
adc
fsubrs
cli
fdivs
movsb
call
les
in
xor
jge
cs
sub
ja
xchg
cmp
push
sbb
lods
les
stos
dec
es
dec
movsl
xchg
stos
pop
sti
mov
aas
pushf
sub
ds
push
gs
rol
mov
and
xchg
in
lods
loop
std
pop
xor
iret
add
jp
xor
sar
mov
shl
ret
sub
pop
mov
cmp
xchg
jnp
and
sbb
mov
push
out
fsubl
imull
ljmp
xor
lcall
lods
or
gs
nop
shl
movsl
fstpl
xchg
sbb
lds
cmp
movsb
fimull
and
mov
cli
subb
cmp
cmp
hlt
adc
push
cwtl
cli
shll
jae
lret
cli
adc
stc
ljmp
mov
pop
sub
cmpsb
jb
cmp
add
neg
push
ficomps
addb
out
adc
push
inc
sub
mov
ja
pop
out
sti
je
push
push
jle
pop
ds
in
xchg
mov
push
cltd
nop
inc
push
jb
sti
sub
and
pop
pop
sub
push
mov
cs
sti
mov
xchg
aas
jecxz
inc
negb
leave
and
add
mov
jge
xchg
sbb
out
xchg
mov
sub
mov
lods
adc
jnp
cwtl
movsl
das
and
push
or
sbb
sbb
sti
jbe
inc
xor
pop
mov
sbb
pushf
cwtl
arpl
mov
paddsw
cmp
jp
fmuls
int
mov
dec
int
add
fxch
cmp
das
imul
dec
cltd
lret
xchg
fwait
sti
out
pop
inc
sbb
xchg
cmp
test
sbb
fistps
pop
dec
mov
lea
jb
sbb
pop
loopne
or
push
jle
jl
add
jp
js
cltd
ficompl
or
cmp
mov
jae
fstpl
adc
clc
mov
insb
loop
mov
cmpb
out
cmp
dec
xchg
inc
aam
shll
in
fdivr
cltd
mov
pop
jle
mov
or
pop
outsb
xor
xor
xor
and
cmp
mov
imul
ljmp
or
mov
fwait
mov
lods
and
xchg
push
js
xor
cmp
jae
mov
out
loopne
cli
xchg
sub
sbbl
mov
push
sarl
cmp
pop
mov
xor
cmpsb
mov
and
in
in
dec
loopne
cli
ds
mov
and
je
out
sub
pushf
xlat
mov
jns
addr16
scas
jg
mov
stos
rcrl
or
ret
cmp
les
and
pop
dec
lahf
fcoml
fcompl
out
movb
stos
aaa
test
lea
clc
sbb
rcrb
pop
out
inc
sbb
mov
scas
addr16
mov
popa
dec
les
aas
std
aad
rol
cmpb
sub
cltd
pop
mov
pop
mov
xchg
pop
fdivl
sbb
mov
add
push
or
or
or
out
les
movsb
out
fbstp
stc
mov
orl
cmpsb
sbb
add
testl
scas
ds
mov
adc
cli
lods
jg
jae
dec
orl
adc
out
mov
jno
test
fwait
push
jecxz
inc
sub
cmp
sbb
mov
jge
cmp
mov
pop
aaa
pusha
imul
lret
mov
lahf
inc
test
jl
jae
xchg
dec
mov
cwtl
out
fwait
pop
sub
adc
pshufw
dec
sets
mov
jg
xor
out
cwtl
test
jle
xchg
adc
lret
lret
xchg
and
push
cmpsb
aad
mov
sbb
cmp
cmp
jns
xor
fisttpl
pushf
js
gs
jo
mov
js
daa
lret
sbb
xor
mov
cmc
and
dec
xlat
mov
andb
mov
pop
mov
cltd
mov
mov
sbb
inc
cmp
cltd
mov
push
mov
jnp
loope
mov
hlt
push
fwait
sti
jge
add
es
pop
stc
or
cmc
mov
arpl
jbe
ljmp
jg
mov
fistpll
cwtl
inc
pop
mov
dec
add
xchg
lahf
jg
sub
push
lods
xchg
cwtl
jnp
xchg
ret
lock
mov
das
test
ret
jmp
sub
and
mov
push
adc
jmp
sub
lretw
lret
sbb
cmp
rcrb
les
andb
xchg
add
call
cld
sbb
pushf
hlt
pop
sbb
gs
neg
cmp
mov
sub
scas
xor
cwtl
popf
out
pop
xor
add
adc
fcmovne
out
std
outsl
pop
push
into
aas
xchg
jg
mov
lds
pop
adc
sti
rorb
add
js
add
adc
movsl
inc
xchg
sbb
dec
ret
lock
xchg
cmp
mov
clc
inc
mov
sbb
xchg
jecxz
push
cmpsl
pushf
mov
mov
shr
xor
xor
shrb
xor
jns
pop
jge
fidivrs
stc
add
pop
les
test
cwtl
push
add
in
stc
pop
in
mov
out
movsb
xchg
fwait
lock
orb
xorl
xchg
push
and
mov
out
push
test
mov
xchg
cmpsl
bswap
push
cld
cmp
mov
mov
push
jne
add
xchg
cwtl
add
and
fcoms
test
je
das
fildl
xchg
pop
jl
ja
pushf
jg
enter
cltd
mov
int
aas
fldenv
test
clc
mov
or
repnz
mov
adc
leave
shlw
cmp
icebp
fisubrs
jo
pusha
in
fcomp
mov
sti
xchg
out
movsl
notl
fiadds
sub
sarb
out
js
xor
int3
jg
cld
or
sahf
sbb
mov
aam
subl
xchg
cmpsl
movsl
lods
mov
scas
mov
sub
mov
aam
insl
jmp
sbb
movsb
addr16
pop
cmc
push
and
pop
jp
fnstenv
repz
jp
arpl
ljmp
push
addr16
mov
xchg
mov
flds
mov
pop
xlat
mov
mov
popa
lahf
or
xor
negb
es
ss
pop
lea
inc
pushf
ret
cmp
ds
test
sub
mov
pop
daa
sbbb
sti
scas
pop
leave
stos
shll
sbb
lds
lea
pop
arpl
xchg
in
cmp
or
mov
aaa
cmpb
jmp
mov
pop
push
pop
insl
xchg
ja
jle
mov
dec
imul
pop
pop
loop
addl
in
fnstcw
jnp
mov
sub
int3
inc
jns
iret
jg
lret
mov
mov
dec
movsl
xchg
mov
test
cmp
movsb
mov
scas
xorl
rcrl
pop
adc
aam
xor
push
fistpl
bound
jl
aas
out
cmp
lret
jno
rcrl
xchg
fsubrs
cmpl
adc
out
cmpsl
iret
mov
and
sti
xchg
ret
std
add
xor
xlat
inc
mov
jecxz
popf
mulb
xchg
imul
jo
lret
orl
lcall
mov
adc
cli
aam
adc
mov
leave
and
sub
push
lds
jmp
fwait
jnp
pop
mov
sbb
or
shll
outsl
in
out
setge
mov
sbb
sbb
test
mov
mov
cmp
lahf
sbb
push
fdivr
out
es
stc
fdivrs
mov
mov
sarb
sti
push
mov
mov
xchg
push
xor
int
fists
insb
push
jno
and
decb
dec
fcompl
pusha
jle
lcall
popf
xchg
imul
jae
je
pop
sbb
out
adc
lds
filds
das
jecxz
loop
ja
jne
jg
cmp
pop
jae
inc
testl
mov
js
imulb
xchg
test
or
adc
adc
inc
cmp
dec
stos
arpl
pushf
lods
fcmove
add
jg
fwait
jmp
sbb
cmp
loope
jnp
mov
inc
jbe
gs
testl
xchg
addl
push
adc
push
mov
fcmovnbe
inc
pop
sahf
decl
jmp
xchg
adc
dec
cltd
nop
cwtl
pop
dec
js
cmpb
xchg
ss
js
jg
adc
pop
scas
testl
push
adc
sub
stc
pop
ds
add
popf
clc
cltd
movsl
xchg
aad
mov
loope
jne
cmp
adc
xchg
cwtl
icebp
push
push
je
jg
add
daa
imul
rcl
cmc
sub
es
jle
or
inc
cmp
fwait
out
add
dec
jecxz
movsl
dec
sahf
je
adc
dec
les
ljmp
push
movsl
lock
jecxz
mov
and
or
enter
push
cmp
cmp
inc
int3
sahf
xor
pop
jbe
push
sbb
leave
sub
lret
lea
out
aad
and
mov
cs
mov
mov
pop
xchg
imul
mov
dec
mov
js
push
mov
pop
ja
cs
xchg
mov
loop
insb
inc
call
push
jle
jae
stc
jne
pop
jl
adc
aam
mov
shll
xchg
mov
adc
xorb
sbb
ds
pop
pop
mov
cmp
adc
fidivrs
lcall
je
pop
jmp
mov
dec
aas
xor
jmp
orl
insl
pushf
cmp
divb
es
push
les
dec
mov
xchg
push
std
mov
int
out
fsubrs
mov
xlat
test
mov
push
andl
fmul
jl
test
adc
call
sbb
ja
test
fadds
push
outsb
or
fcmovnu
les
sbb
ss
xor
fsubr
or
pushf
xchg
and
leave
push
mov
shll
mov
cmpsl
das
addl
sub
push
cmp
mov
scas
dec
push
jno
mov
test
cld
lret
inc
and
sbb
cmp
pusha
push
stos
cs
jl
push
les
jnp
sub
jp
fsubs
orb
daa
std
lock
jecxz
mov
aas
mov
sub
push
and
dec
add
sbb
cmp
pop
pushf
cs
xor
das
sar
mov
sbb
shll
mov
fsubrs
fistpl
fildl
xor
pushf
inc
or
add
mov
leave
pop
push
inc
cs
aas
dec
pop
xchg
arpl
into
jmp
sub
in
mov
clc
outsl
push
jb
mov
test
pop
adc
mov
mov
stos
out
mov
popa
cltd
xor
stc
cmp
mov
shlb
dec
mov
clc
xchg
jp
sbb
xor
push
jle
inc
pop
dec
lods
mov
cltd
jnp
cld
cmc
inc
mov
pushf
aad
lds
add
xor
cltd
loop
sub
cld
mov
cmp
xchg
push
jmp
xor
or
arpl
bswap
rorl
cwtl
mov
fmull
repnz
inc
add
sti
fsubl
shrl
out
sub
xchg
fcoms
ror
pop
movsb
out
nop
pop
push
jne
ds
icebp
aad
cmpl
neg
stc
push
push
xchg
pushf
fadds
add
fdivrs
pop
mov
dec
js
cwtl
popf
inc
in
pusha
xor
lret
pop
stc
pop
cmp
push
fldl
enter
cmp
std
jg
sub
push
jle
mov
lret
hlt
mov
lds
ficompl
pop
ljmp
sub
jge
ljmp
les
and
or
sub
ljmp
dec
lods
and
lret
jg
test
sbb
pop
mov
sbbb
dec
add
fwait
lods
mov
int
aam
nop
movsb
fimuls
outsb
in
mov
fwait
mov
add
inc
test
push
mov
fcom
jmp
cmp
xchg
fsubr
mov
pusha
dec
dec
pop
addb
lcall
mov
adc
fwait
scas
mov
jmp
fucom
js
jg
repz
test
xchg
fwait
imul
lret
xchg
jecxz
jns
icebp
jo
mov
dec
clc
js
sti
ret
ret
push
jge
adc
xchg
xor
sbb
sbb
mov
sbb
mov
lock
js
int
sub
fwait
ret
xor
lcall
sub
icebp
in
loopne
adc
cmpsb
decl
dec
or
outsb
cmp
js
jmp
rcll
cmp
cmc
out
orl
jle
data16
popf
scas
add
scas
mov
push
xchg
jno
cmp
fidivl
pop
fisubs
rcrb
xor
inc
sbb
repz
pop
ret
lahf
sti
imul
cwtl
sti
mov
push
sub
mov
jb
pop
pop
test
jg
jg
jl
pop
popa
inc
and
int3
mov
mov
or
xorb
xchg
repnz
test
orl
test
cmp
mov
jle
fdivp
and
mov
sbb
lahf
cmp
fistl
addr16
in
lret
imul
mov
pop
sub
xchg
inc
jbe
push
hlt
fmuls
aaa
push
pushf
outsl
pop
sbb
mov
insl
adc
add
xor
decb
mov
sub
mov
frstor
out
pop
mov
pop
cli
int
jnp
pop
sbbb
xor
jle
jbe
std
sbb
jns
adc
xorl
std
fstl
lods
ror
or
adc
sbb
mov
mov
idiv
sbb
xor
push
fidivrl
sbb
mov
jp
sub
push
repnz
repz
cltd
jne
les
cmp
fcmovnbe
pushf
test
leave
jl
push
ret
push
mov
aad
jmp
sbb
cmpl
xchg
inc
sub
lods
cmc
test
pop
xor
testb
cmc
xchg
fs
lret
faddl
rclb
mov
xchg
inc
call
mov
push
mov
pushf
enter
popf
add
push
jbe
pop
mulps
adc
mov
bound
sub
cmpsl
in
push
sbb
mov
pop
into
js
pop
jne
add
pop
pop
and
cmpsb
out
cmp
pop
ds
lea
sbb
push
xchg
not
out
sbb
xchg
xor
mov
mov
push
jae
data16
enter
mov
ljmp
aad
push
into
push
pop
dec
call
in
mov
cmp
add
xchg
jb
decl
cmpsl
sbb
pusha
xchg
dec
test
add
sbb
imul
pusha
mov
aas
sar
jno
or
pop
dec
sbbl
dec
adc
roll
dec
neg
jnp
test
pop
or
xchg
fildl
sti
out
ret
jg
arpl
pop
jne
sub
popa
mov
ja
sub
xor
cmc
mov
mov
pop
dec
mov
sbb
inc
fmuls
xor
dec
xor
enter
adc
cwtl
and
popa
mov
inc
add
cmp
push
push
test
pushf
xor
jmp
loope
rclb
pop
ds
push
sbb
imul
lret
xor
aam
cli
rcl
cltd
sti
or
mov
ss
and
pop
aam
gs
mov
pop
fs
mov
dec
rorb
fldcw
ljmp
cmpsb
cld
fisttpll
pop
cs
cmpsb
dec
ja
mov
les
into
inc
xor
xor
daa
fistps
aaa
cmp
and
fmuls
xchg
sti
pusha
lret
inc
dec
pop
jae
dec
sbb
lock
fucomp
sbb
test
jmp
repnz
jecxz
or
push
mov
push
ds
lock
sub
push
jae
add
xor
insl
out
sub
lea
xchg
jmp
cs
inc
push
movsl
mov
test
mov
out
add
enter
jl
mov
in
cwtl
sbbl
cmp
ror
outsb
out
test
mov
pushf
inc
push
sbb
std
mov
mov
add
sbb
cld
push
shll
pop
cmpsb
fsqrt
pop
sub
insb
pop
push
pop
mov
dec
mov
xorb
out
in
pushf
push
cmc
sub
int3
cwtl
xchg
aas
scas
stc
fcoms
mov
pusha
push
lods
pop
inc
sbb
fldenv
pop
push
int3
les
mov
cmp
adc
dec
mov
ret
mov
addl
lea
or
mov
cld
in
inc
and
jne
out
jno
fwait
lock
imul
fwait
scas
ret
pop
pop
mov
scas
enter
mov
dec
add
dec
rclb
lret
scas
jno
cwtl
fistpl
imul
mov
scas
cmpsl
mov
movsb
and
sbb
std
lret
xchg
into
mov
or
outsb
aam
sub
js
fcomps
cmp
sub
setne
int3
fwait
lret
jno
shrl
and
mov
adc
cmp
loop
mov
inc
mov
xlat
or
mov
fiadds
and
mov
sbb
sub
nop
sti
into
push
xchg
jl
jp
xchg
adc
imul
ja
dec
fcoml
xor
or
stc
and
sti
push
cmp
jne
inc
mov
sub
adc
mov
inc
gs
pusha
movl
jg
pushl
jp
dec
test
push
testb
fdivrs
push
pop
push
stc
rcrb
push
int3
jl
adc
and
push
or
dec
sbb
imul
mov
push
inc
hlt
pop
add
lahf
ja
push
scas
sti
xlat
and
jb
inc
mov
sbb
push
fsubl
sbb
hlt
test
and
outsb
cltd
push
cli
jbe
pop
xchg
leave
into
rep
pop
mov
or
sub
mov
sub
js
cmp
or
pop
cli
fisttps
cmpsb
dec
in
and
test
pushf
out
cli
sub
add
mov
push
or
dec
frstor
sahf
pop
scas
and
rorb
inc
pusha
push
push
in
pushf
popf
jne
popf
shll
push
pushf
jg
fdivr
movsl
mov
mov
sahf
jbe
cwtl
cs
insb
sub
stos
push
loopne
push
mov
adc
cmp
mov
cmp
shr
out
dec
adc
sti
sbb
lea
btc
adc
aad
xchg
add
mov
cltd
cwtl
fnstcw
mov
lds
or
mov
imul
inc
cmp
mov
mov
std
mov
scas
das
push
test
cli
inc
cli
dec
pop
cltd
or
iret
fldl
jne
sbb
cwtl
and
sub
inc
pusha
subb
add
xchg
shrl
popf
sbb
rcll
test
dec
dec
orl
pop
leave
fcompl
push
lods
pop
out
das
inc
push
test
pushf
clc
sbb
adc
js
jg
cs
inc
ljmp
lcall
mov
adc
js
cmc
mov
adc
add
xor
je
fcoms
fistl
and
jp
movsb
jnp
inc
push
fists
ja
sub
rorl
mov
xchg
mov
sub
pushf
jg
rol
push
inc
cltd
pop
mov
xor
cmp
out
xchg
xor
lret
xchg
pop
cli
cwtl
je
jnp
movsb
es
lcall
xchg
sbb
mov
data16
jns
inc
std
sub
lahf
lret
test
aas
mov
ss
mov
lock
sbb
ret
adc
popa
movsb
pop
lcall
cltd
xchg
lret
xchg
mov
xchg
push
mov
cmp
cmp
mov
loope
and
daa
sub
mov
std
mov
mov
mov
push
jmp
test
add
leave
xlat
and
mov
xchg
std
and
das
sub
mov
push
idivb
stc
jl
insl
mov
mov
mov
mov
jmp
and
pop
fs
lcall
mov
int
out
pop
sbbb
js
rcl
cmp
addb
jl
fwait
sbb
pushf
andl
decl
or
mov
mov
add
pop
push
movb
aas
or
inc
popf
push
fcoml
sub
cmpb
cmp
mov
test
cld
jae
sub
insl
push
lea
mov
lret
fwait
aad
mov
mov
add
movsb
jnp
mov
jne
insb
mov
jmp
pop
sub
adc
into
push
pushf
jg
cmp
rcll
mov
mov
pop
pop
adc
mov
subb
sub
lods
fs
fs
mov
sbb
inc
mov
fwait
lcall
mov
subb
es
lock
stos
jbe
sbb
sub
mov
out
dec
scas
mov
xlat
mov
faddl
fdecstp
lods
aaa
xor
add
or
pusha
sbb
pushf
jle
sti
sub
add
xchg
sub
lock
popa
xchg
addr16
fmul
loope
pop
push
fwait
mov
fcoml
lahf
pop
sub
dec
xchg
cmp
cmpsl
pushf
pop
jmp
arpl
std
jle
addl
xor
and
xor
les
and
sbb
adc
and
jns
push
jmp
inc
mov
xor
fstl
fsubs
mov
jle
push
jns
pop
dec
mov
cmp
push
or
pop
out
in
lods
sbb
add
mov
xchg
test
pop
or
movsl
cmp
adc
outsl
stos
push
sbb
int
xchg
cmc
cmpsl
aas
stos
mov
lahf
fdivrs
xchg
mov
dec
scas
lret
jle
add
cltd
rcll
mov
iret
jb
mov
repnz
cld
mov
repnz
fdiv
sub
cmp
flds
xchg
mov
mov
lret
jbe
outsl
int3
aaa
jle
xchg
aaa
add
pusha
or
jg
sbb
leave
cmp
or
and
dec
mov
leave
cmp
call
xor
xchg
fdivs
test
push
aaa
lds
pop
jnp
inc
or
or
inc
cwtl
fcompl
in
aam
dec
stc
dec
adc
sbb
adc
inc
pop
push
jmp
sbb
mov
iret
fs
call
push
ds
cwtl
mov
mov
mov
jno
push
jle
arpl
addr16
sbb
sbb
ss
fcompl
data16
aas
adc
sbb
cmpsb
dec
mov
push
test
push
enter
sbb
pop
out
jne
mov
clc
push
mov
adc
mov
call
mov
mov
cli
testl
push
mov
xchg
stc
les
ret
cmp
push
fbstp
mov
mov
xchg
cmpsb
cmp
outsb
icebp
je
push
sbb
cmpsb
xchg
fsubrs
arpl
jle
xor
add
rcrb
stos
jae
jo
sbbb
cmp
or
xor
jne
sti
sub
mov
mov
sbb
cmp
mov
cmp
dec
cmp
lcall
arpl
mov
jnp
es
jp
xchg
adc
and
sbb
jmp
sti
ja
sti
loopne
cli
rclb
test
mov
fildl
mov
fsubl
lret
fsubr
sbb
and
lcall
in
cmpsl
roll
cwtl
cwtl
jae
push
pop
cmp
test
daa
cmp
mov
sub
mov
lcall
mov
movsl
jnp
daa
inc
dec
fstpt
js
faddl
imul
adc
push
push
mov
fiaddl
jle
dec
inc
or
push
push
test
lcall
and
cli
imul
aam
cmp
repnz
imul
stos
sbb
fs
pop
js
sbb
lret
loopne
mov
inc
fdivrl
loop
mov
mov
mov
inc
sbb
std
push
out
push
fiadds
and
sarb
push
cs
enter
fcmovnbe
pop
int
jge
push
jns
cli
push
sub
mov
jg
jnp
xchg
lea
sbb
cmc
sub
ret
lret
jo
loop
jge
mov
cmp
stos
push
add
je
leave
push
sbb
leave
ret
stos
add
push
mov
push
pusha
jnp
sub
in
cmc
roll
cmp
aaa
xlat
pusha
lods
push
pushf
in
fistpll
in
and
adc
cmp
mov
pop
or
lcall
dec
or
and
iret
bnd
jg
icebp
or
mov
push
fidivl
inc
das
adc
in
pop
hlt
sbb
sahf
popf
fwait
addl
lock
test
cmp
rcll
mov
sti
xlat
lds
insb
ss
pop
shll
cmp
shl
test
cli
cwtl
jbe
inc
jbe
sbb
cld
inc
mov
in
sub
jo
jle
clc
aam
fwait
fwait
inc
divb
pop
cld
nop
and
fdivrs
inc
mov
jecxz
fbld
push
sbb
bound
mov
and
adc
xor
lahf
rorl
cwtl
inc
pop
or
int3
iret
insl
lds
nop
sti
adc
adc
mov
ja
hlt
xchg
cmp
push
sub
les
xchg
jp
jle
lods
mov
clc
xchg
mov
or
fs
adc
or
and
repz
shrb
push
push
pushf
cmp
cmpsl
mov
adc
mov
inc
push
incl
aad
repnz
int
fmull
ljmp
mov
scas
add
ss
pop
push
scas
jg
cld
jle
xchg
mov
test
scas
gs
aas
aad
sbb
dec
sti
mov
jns
inc
ficompl
imul
mov
mov
in
lods
mov
scas
jp
cmp
sbbb
sbb
push
pop
int
push
cli
sub
dec
mov
pop
xor
sub
mov
lret
jo
loop,pn
push
lahf
mov
mov
dec
cld
pop
out
fwait
cmp
adc
inc
mov
jg
pop
insl
jmp
mov
xchg
imull
mov
mov
fcomps
cwtl
lcall
sbb
sbb
or
mov
mov
adc
mov
mov
sahf
pop
ja
aas
push
sub
push
cmpsl
jne
push
pop
cli
cltd
push
dec
jmp
adc
outsl
cmpsl
dec
stc
push
mov
cmpb
add
xorb
sahf
xchg
push
imul
jge
mov
adc
enter
add
and
scas
or
in
cmp
cs
pop
outsb
mov
inc
and
cli
mov
fistl
pushf
or
fsubrp
fs
mov
xchg
mov
xor
mov
jmp
cltd
sti
decl
test
sahf
mov
inc
adc
mov
scas
pop
ljmp
fsubl
bound
cmp
sbb
dec
outsl
js
cmp
xchg
fs
xchg
or
mov
push
ss
clc
lea
js
xchg
pushf
mov
test
sbb
cli
dec
pop
xchg
mov
jg
ja
data16
out
data16
or
xchg
out
mov
mov
in
pop
pop
xchg
or
sbb
and
int
movsb
jecxz
dec
jmp
out
add
cmp
fsubr
inc
push
jle
cmp
lret
cwtl
push
and
pop
into
mov
push
lods
mov
mov
fsubrs
cltd
add
scas
mov
lcall
cmp
dec
pushf
adc
xchg
popf
mov
and
cmpsl
popf
jo
add
int
pop
push
out
test
int
or
pop
xor
inc
pop
cmp
shlb
cld
push
std
cmp
ret
popa
rolb
aas
out
jg
mov
fstps
ss
frstor
lods
aas
push
push
fistps
mov
sbb
addl
fmull
out
inc
arpl
mov
ret
mov
pop
sub
cmp
xchg
sbbl
push
sub
cmp
dec
mov
bound
inc
push
je
cwtl
jmp
mov
lds
add
out
sbb
lret
mov
in
repnz
inc
cmpb
in
xchg
jl
daa
jge
cmp
mov
test
test
mov
mov
stos
out
gs
pushf
dec
pop
fsubrl
outsb
popa
sbb
cld
sarb
inc
jno
insl
out
pop
adc
fdivrs
lea
test
aaa
add
sbb
insb
push
xchg
cld
sub
adc
ja
inc
cmc
dec
push
lahf
pop
xor
lahf
test
and
xor
jg
inc
fwait
orb
push
push
inc
mov
fmuls
push
jae
out
dec
cli
or
leave
popf
cmp
lods
addr16
jns
daa
scas
push
and
xor
outsb
ret
out
and
adc
sub
jmp
push
xor
mov
fmul
inc
sarb
nop
cli
enter
int
mov
lds
les
lret
pop
and
loope
sbb
push
jl
inc
pop
scas
popf
test
sti
or
test
jns
xchg
sti
popa
lea
cmpsl
icebp
mov
dec
or
pop
and
sbb
xchg
push
sub
mov
xchg
sbb
and
movsb
mov
mov
adc
pushf
movsb
rcr
sbb
stos
fldt
pop
pop
shrb
add
fisubl
rcll
jae
fistpll
push
mov
aaa
push
lahf
iret
xlat
es
or
je
rolb
or
jmp
std
mov
rcll
pop
fadds
stos
sti
mov
mov
sbb
push
into
jmp
arpl
jns
or
cmpsb
push
mov
mov
fwait
popf
sti
xchg
aam
pop
fisubrl
adc
jb
fdivl
subb
inc
out
or
jmp
pop
xchg
push
adc
cwtl
push
rcrb
lea
in
xor
test
je
mov
push
pop
ds
in
xchg
mov
jl
push
sub
mov
sub
je
push
leave
mov
pusha
icebp
lret
outsb
ja
lcall
push
sbb
and
popa
cli
cwtl
and
jle
jo
add
mov
call
xchg
pop
add
out
cmpsl
dec
cmp
out
psubw
sub
hlt
cwtl
imul
jg
cld
sbb
lods
sbb
popa
adc
movsl
pop
cli
inc
les
sbbb
adc
loopne
jnp
clc
adc
mov
into
cmp
and
in
testb
sbb
and
mov
and
jp
imull
and
mov
pop
rcrb
sbb
bound
xchg
add
rclb
rcr
cmp
lds
pop
mov
cmp
xchg
pop
mov
fildll
push
xor
std
jns
iret
add
test
fidivl
lods
xchg
lods
push
mov
imul
cs
push
jp
sbb
jns
or
push
and
cs
xor
cmp
xchg
mov
jae
test
icebp
das
and
arpl
xor
daa
hlt
mov
pop
push
insb
xchg
fdivrs
call
cmp
push
mov
leave
push
pop
inc
mov
jl
cmp
scas
ja
or
jb
lods
inc
adc
loop
xor
jmp
mov
sub
pushf
or
pop
or
jnp
rcrb
push
lcall
adc
hlt
push
pop
sbb
clc
outsb
adc
dec
sbb
scas
mov
mov
push
rcr
mov
sbb
scas
cmc
jecxz
jg
sti
inc
outsb
test
mov
push
adc
fstps
jge
test
fnstsw
mov
dec
add
xor
das
mov
rorb
sub
dec
fiadds
fidivl
fs
dec
icebp
cwtl
cmc
pop
xor
xchg
sbbb
testl
int
xchg
dec
mov
test
mov
pop
in
mov
and
test
xchg
adc
cmp
lea
jg
call
cmp
push
shll
negb
mov
call
mov
and
or
shlb
mov
jmp
jle
or
rcrb
lea
loope
les
test
jnp
xor
ret
repnz
jl
pop
mov
mov
xor
sbb
nop
and
out
aad
mulb
fwait
cwtl
subb
fsubr
mov
pusha
push
clc
xchg
pusha
ret
mov
pop
mov
pushf
adc
mov
mov
cmp
xor
push
add
mov
scas
mov
pop
pop
add
ss
dec
cwtl
adc
cmp
les
jle
pop
cmp
push
inc
jl
fadds
push
sbb
shlb
test
inc
cltd
fdivl
and
test
sbbb
mov
les
addr16
cwtl
mov
idiv
enter
into
xchg
test
jnp
test
sbb
mov
fsubs
add
xchg
jmp
jp
jns
pop
pop
xchg
pop
jg
dec
xchg
ret
adc
in
push
xor
or
pop
sbb
sahf
cld
arpl
push
or
dec
cmp
jne
mov
mov
jg
dec
adc
lcall
hlt
pop
adc
movsb
pop
sbb
pop
or
hlt
cmp
loope
es
mov
mov
jg
pop
int
pop
out
repnz
hlt
sbb
mov
or
scas
add
int3
loope
arpl
or
sarb
test
cmp
xor
imul
rsqrtps
push
out
incl
movsl
lret
mov
sbb
jmp
cmp
dec
fldenv
pop
or
pop
pop
mov
lahf
in
and
jne
scas
mov
notb
ret
lret
lods
mov
xlat
pusha
jbe
lds
rcrb
mov
dec
push
push
pop
aam
mov
push
xor
or
scas
jae
inc
jmp
push
shll
or
push
jg
mov
fcomps
int
mov
outsl
stos
loope
cwtl
xchg
cmp
ret
jo
scas
pop
mov
pop
mov
int3
cli
or
sbb
cmpb
dec
repz
sbb
and
mov
pop
cmp
jbe,pn
fwait
cmpsb
dec
push
xchg
daa
lods
mov
test
bnd
fdivs
mov
insb
xchg
push
or
mov
pop
out
sbb
pop
sub
aaa
cli
push
cltd
fwait
aad
ds
jb
loope
int3
fcmove
std
push
push
fbstp
lods
cmpsl
mov
push
push
cmp
decl
dec
ljmp
imul
lahf
mov
dec
shll
mov
iret
fldt
xchg
ret
into
cmpsb
ficomps
aam
xor
mov
adc
pop
mov
mov
leave
faddl
cmp
aam
dec
fst
lcall
push
jnp
xor
leave
les
sbb
sbb
es
jnp
adc
mov
mov
cli
pop
clc
dec
cmc
mov
sub
sbb
mov
mov
pop
push
xor
fmul
xorb
xor
and
imull
pusha
jg
sbb
lret
jp
aas
jle
xchg
xchg
or
cmp
mov
sbb
ret
sarb
cmpb
imul
push
adc
stc
pop
sbb
ret
xorb
clc
adc
andl
aas
sbb
in
fmul
fistpl
jle
jnp
test
xor
lret
mov
dec
aam
sti
pop
fcom
scas
jmp
add
mov
call
je
fcomp
cld
jo
cld
out
pop
push
lea
pop
sub
lcall
push
cmp
iret
popa
add
mov
daa
push
mov
ror
cmp
jge
aad
sti
mov
inc
jmp
lods
push
inc
sbb
lahf
sbb
test
scas
fdiv
jl
sarb
xchg
pop
call
jns
mov
cmc
iret
sbb
mov
imul
mov
test
ja
jnp
mov
and
mov
mov
pop
and
mov
cwtl
jl
add
jmp
cwtl
ss
mul
pop
dec
push
cld
pop
ds
pop
aaa
mov
pushf
ret
cwtl
pushf
loope
stc
daa
sub
and
aad
loop
mov
pushf
test
cmp
neg
and
cld
mov
shrl
enter
clc
fidivs
and
mov
fstpl
mov
jmp
fmull
lahf
pop
cmp
flds
inc
clc
and
jne
push
jae
sub
mov
call
pop
popa
mov
or
loop
push
inc
or
jo
adc
pop
jle
cmp
cmpsl
cmp
out
cltd
xchg
adc
cmp
xor
push
and
xchg
xchg
inc
jmp
bound
pop
jbe
inc
mov
scas
sub
push
pushf
loope
ret
cmc
stos
std
rorl
jg
jg
int
pop
xchg
lock
push
cmp
es
mov
lock
mov
cmp
mov
fmuls
bnd
mov
ret
mov
and
cmp
enter
je
pop
jnp
andb
aam
pop
loop
data16
repz
adc
pop
mov
jmp
js
ret
mov
mov
in
pop
xchg
pop
lret
dec
aas
rcrl
fwait
jg
mov
and
add
mov
mov
xchg
or
std
loop
scas
cmp
or
cmp
mov
hlt
cmp
fwait
sbb
jecxz
push
mulb
mov
xchg
xchg
xchg
clc
mov
mov
cs
adc
cmp
xchg
and
jb
xchg
dec
add
jmp
dec
push
mov
cld
xchg
movsb
clc
movsb
cmc
ljmp
xchg
int3
mov
cwtl
les
and
sbb
inc
jnp
ss
mov
mov
rsm
sbb
ret
add
ret
mov
ror
fsubrs
lds
daa
add
mov
xchg
jg
movsb
cltd
dec
decl
arpl
ljmp
mov
gs
lcall
xor
test
cmpsb
xchg
fistpll
sbb
dec
cmp
ljmp
pop
xor
sub
pop
xor
cmp
shll
mov
negl
mov
pop
jp
movsb
fldt
test
orl
repz
inc
pushf
mov
loope
jno
or
cmp
je
incl
outsb
sar
jg
call
cmp
mov
aas
lret
mov
pop
into
sbb
lock
adc
sbb
aas
cltd
sbb
scas
jl
pop
outsb
iret
xor
jg
sbb
incl
fists
fldenv
pop
push
inc
cwtl
mov
ret
mov
mov
mov
or
fcoml
add
clc
insl
in
fucomp
cmp
inc
cmpsb
cmp
dec
sbb
sbb
add
xchg
fcoms
stos
jnp
loopne
and
mov
and
inc
sub
and
xchg
mov
lret
jg
jl
sahf
or
lods
pop
fmuls
sbb
jns
mov
ror
inc
scas
movb
cwtl
inc
adc
scas
das
ret
xchg
cmp
and
add
sbbb
hlt
pop
mov
cmp
cmp
xchg
pushf
xchg
lret
xor
inc
out
test
cli
sbb
iret
mov
dec
push
adc
les
cmp
jno
and
xor
cwtl
and
push
mov
int3
push
mov
bound
mov
dec
pop
pusha
inc
xchg
insb
cmc
js
xchg
sbb
call
xor
jg
xor
jl
pop
jmp
movsb
and
rcrl
sub
sub
addr16
cmpsb
sti
cmpsb
and
incl
mov
ficompl
mov
fildl
arpl
jg
cmc
sbb
jne
jmp
push
xchg
jl
fistps
stos
jno
jle
in
fcmovb
inc
call
fmull
in
dec
aas
aam
lods
xlat
jmp
negb
sti
enter
adc
out
cwtl
cmp
jp
xchg
cmp
das
lea
mov
and
sbb
mov
mov
test
movsb
stos
in
xor
shrb
fstpt
mov
lret
add
outsl
sbb
pop
ret
jl
jp
mov
push
mov
cmp
fsubl
ds
int3
fisubs
xor
jns
cmp
test
inc
or
xor
js
inc
adc
mov
sbb
and
jp
sbb
mov
or
jl
xchg
and
pop
js
orb
jecxz
cmp
gs
scas
mov
lret
pushf
dec
mov
and
in
sub
cmp
sbb
mov
js
jnp
pop
mov
push
leave
lds
cld
add
sbb
cli
movsl
mov
jns
mov
cli
fiadds
jnp
adc
inc
inc
pop
mov
es
aas
xor
mov
test
cmp
test
fstl
imul
lock
movsb
out
pop
in
in
jecxz
out
xor
xlat
icebp
pushf
jnp
xlat
jl
push
int
addr16
xor
in
pushw
fsubrs
mov
mov
jg
xchg
mov
movsb
mov
mov
xchg
mov
adc
loopne
fsubrl
and
adc
aas
imul
mov
adc
leave
repz
stos
adc
lea
cwtl
sti
dec
sahf
bnd
xor
test
xor
jns
xlat
xchg
inc
sbbb
sbb
mov
nop
test
push
mov
sub
insl
xchg
cld
push
movsb
test
stos
arpl
aaa
enter
sbb
inc
pop
push
stc
xor
pop
push
or
dec
les
sbb
xor
cmpsl
mov
add
mov
cmp
jno
lods
cltd
in
cmp
xchg
lret
sbb
mov
lock
cwtl
mov
mov
pusha
and
xchg
xchg
pop
xor
lds
xchg
pop
rolb
imul
mov
dec
push
les
sub
sti
shrb
scas
adc
cmp
aam
sbb
jg
xor
addb
movsl
ret
or
cltd
mov
inc
push
mov
mov
andl
mov
xchg
inc
outsb
pop
roll
stc
arpl
pop
cmc
sahf
xor
cmp
mov
mov
test
stos
ja
mov
mov
mov
pop
stc
adc
adc
std
shll
fwait
lea
decl
aam
jecxz
andl
jge
mov
mov
and
in
pop
inc
cmpb
jp
sbb
lcall
outsb
mov
clc
cwtl
mov
pop
inc
sbb
mov
dec
cmp
pusha
in
roll
or
xchg
cld
cmp
xlat
xchg
push
push
cld
cwtl
cmp
cmp
and
outsl
push
pop
sub
dec
push
pop
sahf
push
push
std
xor
sbb
sbb
leave
cmp
in
outsb
pop
cmc
xor
xchg
gs
mov
cmp
cltd
test
xchg
gs
push
subl
sahf
cmpsl
mov
mull
lahf
sbbl
aas
nop
repz
xorb
imul
push
jo,pt
dec
jl
mov
out
xchg
les
and
mov
and
mov
push
lahf
cs
or
ja
xor
inc
rcrb
int3
fs
push
mov
add
lcall
testb
sub
adc
fwait
sub
in
je
push
pop
lea
sti
out
xchg
imul
out
mov
mov
rorl
jo
cmc
pushf
sti
mov
jecxz
adc
sbb
dec
pop
jmp
jl
dec
test
pop
pop
xchg
adc
inc
xlat
or
ljmp
fcmove
js
bnd
xor
pop
cs
cmp
dec
push
inc
mov
scas
push
ds
rcrb
mov
mov
clc
sahf
xchg
fs
std
dec
xchg
aam
stos
adc
ss
dec
fisttpl
mov
mov
fcompl
and
ret
incl
mov
mov
push
mov
mov
mov
cmpsb
aam
ficomps
jge
stc
test
dec
jl
sbb
ret
xor
fldcw
movsl
push
je
scas
pushf
jl
mov
pop
xor
dec
xchg
mov
notb
xor
add
test
jmp
mov
xchg
pushf
test
lret
lea
mov
xchg
sbb
or
hlt
enter
sbb
daa
mov
lods
cmp
pop
lds
add
adc
les
sub
fsub
fistpll
push
into
gs
lret
mov
pushf
aad
popa
and
mov
sbb
add
es
sub
cmc
and
fisubs
fisubrl
xor
push
and
and
xor
mov
sub
cli
or
adc
dec
mov
jg
mov
out
mov
inc
repnz
push
into
pop
in
aas
shrb
cmp
aas
pushf
sbb
sub
mov
and
xchg
sbb
data16
lret
mov
cmp
out
pop
push
adc
xor
fs
mov
mov
pop
pop
cltd
cwtl
sti
lods
jmp
dec
pop
push
sarl
out
or
ja
adc
sti
mov
stos
push
fdivp
aas
shr
ljmp
ret
adc
fsubrl
aas
lods
stos
dec
lahf
icebp
or
mov
jne
push
xchg
mov
sbb
xchg
adc
push
pop
cmp
xchg
out
lret
cltd
jo
push
adcl
xchg
add
stc
fcomp
int
mov
inc
mov
cwtl
pop
ds
mov
adc
scas
jnp
sbb
in
nop
lods
aas
adc
repz
sbb
jae
mov
sti
cs
cs
xchg
in
xchg
out
pop
jp
in
sbb
outsl
mov
movsb
push
or
mov
mov
test
into
cli
pop
xchg
add
sbbb
jl
jg
add
stc
jbe
mov
mov
mov
aam
sub
mov
pop
out
xchg
imulb
push
popa
test
out
and
ja
mov
decb
add
jl
ds
xlat
sti
daa
push
mov
cli
shl
scas
sahf
add
popf
in
cmp
ss
out
mov
dec
repnz
fsubs
inc
stc
nop
outsb
lret
ds
jl
or
into
testl
lods
sbb
pop
ss
ret
jg
add
stos
lcall
xchg
or
pop
and
nop
std
or
push
scas
imul
mov
clc
sub
xor
fwait
ret
xor
and
cli
inc
cld
adc
sti
cmpsb
dec
outsb
pop
push
andb
and
adc
mov
xchg
test
cs
pop
dec
pop
xchg
fistl
xor
shll
data16
mov
js
je
fnstcw
outsl
aas
mov
mov
sub
imul
push
loop
into
out
mov
cli
cwtl
jb
mov
pushf
jae
adc
or
dec
mov
rcr
cmp
sbb
repnz
sbb
pop
mov
jl
sbb
push
pop
stc
cmp
mov
icebp
cwtl
push
xor
loop
add
cld
or
lods
repnz
cli
mov
gs
pop
lods
ja
jl
das
ret
test
xchg
or
sbb
mov
sbb
mov
cmpsb
inc
add
fsubrl
cltd
xor
mov
lahf
or
popa
xchg
daa
mov
stc
fidivrl
push
jg
loop
loope
int3
mov
fdivrp
mov
fidivs
fsubrl
xor
sbb
aaa
push
lods
adc
cmp
test
jo
push
dec
push
loopne
mov
add
sub
mov
ja
jae
mov
cwtl
inc
inc
xchg
lret
idivb
cli
push
mov
out
out
scas
push
mov
xchg
shl
js
push
push
dec
mov
inc
orb
fidivrl
ss
xchg
insl
dec
mov
cmpsl
cmp
xchg
cld
jo
xchg
jnp
jns
jecxz
mov
xor
cmp
xchg
xchg
pusha
not
pushf
inc
cli
sub
shrl
stc
xor
into
lret
in
int
jg
mov
pop
bnd
scas
inc
or
xchg
cmc
sub
jg
add
mov
push
sub
aas
loop
jno
inc
cli
xchg
sub
and
xchg
mov
xchg
cmp
mov
inc
xlat
fstl
neg
cmc
xchg
incl
out
xchg
cmp
dec
es
js
mov
pop
jns
iret
push
sbb
test
imul
cmovle
out
cwtl
mov
stc
sbb
push
push
popf
imul
fldcw
cmpsl
jb
inc
cltd
test
and
jg
loope
loope
jl
in
adc
add
sbb
sbb
mov
pushf
cmc
and
bswap
push
and
xchg
pushf
push
iret
les
pop
mov
pop
adc
dec
pop
push
mov
mov
popaw
push
cmp
mov
hlt
and
faddl
notb
add
xchg
sbb
inc
push
inc
cli
sub
sbbl
stos
aaa
iret
xchg
insl
jg
push
test
cmp
scas
enter
mov
insl
mov
inc
pop
lea
movsb
xchg
pop
stc
hlt
add
sub
pusha
fcompl
and
mov
fnop
dec
or
dec
adc
sub
xchg
xchg
fadds
testb
mov
das
sbb
jns
pop
sahf
out
in
xor
xchg
cwtl
pop
out
out
jp
es
daa
pushf
push
mov
pop
push
xchg
mov
xchg
jg
push
jbe
jno
inc
in
cltd
sbb
mov
stc
pusha
outsl
mov
push
in
xchg
ss
push
lea
push
xchg
jecxz
push
loope
lret
scas
loope
pushfw
out
flds
sahf
mov
lods
jnp
stc
add
inc
push
pop
xor
shll
or
es
and
ss
lret
mov
or
sti
enter
sbb
pusha
scas
and
stc
cmc
in
aas
mov
pushf
push
adc
mov
adc
int
sbb
jge
push
and
fisttpl
cmp
out
jae
out
scas
pushl
cmpsl
stos
sub
pop
push
les
arpl
aad
cmpsl
int
push
jl
dec
inc
popaw
adc
lods
xchg
aam
pop
sub
pop
sbb
mov
sbb
inc
and
dec
enter
sbb
mov
js
cmpl
sbb
movsl
scas
jmp
cmp
adc
lock
imul
mov
mov
rol
push
jmp
repz
xchg
insl
mov
out
in
repnz
js
movl
cwtl
xchg
into
sub
sub
cmp
mov
inc
inc
sti
outsb
ljmp
mov
inc
dec
loopne
jb,pt
pop
mov
pushf
jnp
mov
in
ficompl
mov
enter
mov
aas
fdivrl
sub
mov
jb
fldenv
sub
mov
popa
nop
mov
jnp
jo
add
xchg
in
cmp
mov
ret
loopne
je
shrb
xchg
cwtl
lret
add
ja
and
jecxz
mov
dec
sti
xor
mov
rclb
pop
aaa
in
aam
idivb
in
cld
pop
or
cmp
aad
mov
divl
mov
mov
pop
stos
cmpb
inc
outsl
orb
add
cli
aas
adc
aam
push
mov
stos
xor
push
mov
fiaddl
mov
push
pop
sbb
add
adc
movsb
push
inc
mov
mov
mov
adc
aas
dec
cmp
jo
push
stc
js
mulb
sbb
sub
jecxz
cwtl
ja
lret
dec
xor
testb
push
jbe
jne
lahf
mov
mov
test
cltd
jecxz
and
loopne
cmp
fwait
xchg
adcb
sub
mov
loope
sub
jmp
sti
outsb
xor
loop
je
loopne
xlat
sub
test
insb
movsb
push
aas
mov
pop
dec
or
enter
fsubrs
mov
cmpsb
dec
xor
fsubl
orb
and
push
pushf
dec
ljmp
push
mov
inc
popa
cmpsb
arpl
ret
jl
cmp
fwait
adc
cmpsl
orb
xchg
cld
sub
and
lock
fmul
dec
jp
ja
cli
lcall
jecxz
pop
addr16
xchg
gs
mov
fs
test
mov
insb
fisubrl
test
xchg
mov
inc
dec
cmp
pop
je
in
ljmp
mov
pop
xchg
fwait
and
lcall
pop
or
out
loopne
push
int3
sub
dec
test
data16
pop
cmc
jg
push
dec
bound
mov
or
mov
ds
je
sbbb
jae
xchg
jg
push
test
addl
xor
mov
shlb
pusha
pop
cwtl
pop
add
xor
cmp
jl
sub
adcb
xor
inc
cltd
mov
mov
mov
test
sahf
pushf
push
adc
or
cmp
fdivp
adc
sbb
pushf
mov
lods
jne
pop
mov
add
cmp
pop
mov
add
dec
daa
pushf
stc
mov
movsl
shl
dec
loopne
pop
xchg
aas
mov
enter
movsb
pop
push
xchg
scas
cmp
jmp
out
shlb
inc
mov
mov
pusha
in
sbb
mov
pop
xchg
jns
fstpl
mov
cmp
cs
out
push
and
ljmp
sbb
inc
pop
daa
xchg
sub
fsubrp
dec
pop
decb
inc
pushf
cmp
jb
cmpsl
mov
jle
sub
jnp
pop
rcrl
inc
mov
xor
sbb
cltd
movsb
inc
sbb
mov
push
xchg
add
lds
adc
sbb
cmp
jmp
lret
fimull
fldcw
pushf
adc
sbb
push
pop
xchg
icebp
mov
js
pop
test
mov
sub
test
xor
sti
fdivr
pop
daa
sbb
sbb
adc
sbb
pop
pushf
fsubrs
daa
cs
cmp
push
ja
cli
and
and
cmp
jae
dec
push
jp,pt
fs
enter
rolb
pop
pop
jg
or
fildll
test
ss
movsl
mov
dec
lret
cmp
and
fmul
jg
jo
jl
cmp
sbb
cmp
bound
mov
xor
insb
fwait
outsb
mov
pop
jle
pop
call
ret
cmpsb
pop
fisttps
pop
out
push
adc
sub
sbb
push
jne
inc
mov
idivb
mov
fstpt
popa
xor
ds
mov
push
es
stc
pop
call
sub
gs
mov
js
lahf
dec
pop
jae
jnp
aam
cmpsb
mov
jb
pop
test
inc
das
cltd
pop
cmpsb
cmp
sbb
lcall
leave
inc
cmp
movsb
adc
sub
xlat
push
adc
loopne
fadds
test
push
cmp
leave
test
sub
mov
out
loopne
movsl
xchg
ja
adc
cmpsb
mov
xor
stc
aaa
pushf
cs
aas
test
aas
adc
push
dec
mov
add
jg
ljmp
daa
sar
ret
xchg
xchg
push
movsl
stc
or
jmp
jb
data16
sbb
out
iret
cli
mov
sub
inc
adc
inc
icebp
lahf
jecxz
call
add
sbb
jns
clc
sbb
sbb
scas
pushf
pusha
jp
mov
mov
aad
push
popf
sti
inc
shrl
cmpsl
daa
jmp
jmp
scas
xchg
fcomps
jnp
imul
data16
sbb
loopne
lods
adc
pop
movsb
inc
push
es
and
pop
xor
mov
mov
mov
jle
jecxz
rorl
mov
mov
mov
mov
add
mov
out
or
pop
leave
mov
sbb
hlt
pop
mov
cmp
push
fwait
cmp
data16
test
dec
cmp
mov
cwtl
test
addr16
add
jmp
lret
scas
jg
cmp
jae
and
cmpsl
sbb
lahf
xor
cltd
mov
leave
sbb
fs
jp
mov
inc
mov
cwtl
lret
movsb
sub
and
cld
sbb
in
mov
or
clc
mov
test
clc
and
dec
neg
pop
aas
dec
pop
test
shll
pop
cmp
cmp
cmp
and
sbb
popa
cmp
int3
outsb
mov
sub
jg
fisttpll
aad
push
clc
cmpl
ss
fistps
js
push
leave
in
fsubrl
lret
rolb
adc
pop
adc
test
call
xorl
movsb
cmp
cmp
sbb
test
popf
jnp
pop
inc
jns
jo
fsubl
add
cmp
call
mov
sbb
daa
popa
aam
cmp
fneni(8087
inc
pop
mov
adc
lods
xchg
and
es
mov
adc
jnp
mov
mov
inc
les
or
insb
xchg
sub
mov
pop
jb
mov
push
rcrl
dec
mov
cli
out
sbb
cmp
sub
sti
xchg
lods
popa
cmc
xor
xor
mov
and
inc
jae
cmp
jp
sbb
push
mov
cmp
iret
aam
scas
pop
rorb
xchg
sbb
mov
sbb
mov
mov
scas
fistpll
icebp
jns
test
and
pop
push
aas
call
or
inc
jmp
fcomps
pop
rcl
popf
dec
mov
adc
dec
mov
xchg
aas
hlt
cwtl
icebp
cmp
frstor
filds
insb
lret
fcomi
jo
lods
mov
xchg
and
stos
sbb
or
add
cwtl
icebp
sub
lock
leave
iret
test
and
jb
pusha
out
mov
inc
imul
mov
insb
sbb
cld
mov
daa
dec
xor
and
leave
data16
test
inc
jb
scas
pop
fcomi
mov
ret
mov
adc
cmp
gs
pop
jl
je
in
fucomip
push
cli
xchg
adc
xchg
dec
xor
mov
daa
icebp
mov
mov
out
or
jb
fdivrl
inc
fcompl
subl
mov
sub
dec
mov
pop
mov
sbb
mov
xchg
pop
sbb
pusha
xchg
mov
aam
sub
push
andb
clc
or
in
mov
fcoml
das
jnp
pop
push
mov
adc
popf
jl
sbb
rcrl
jmp
jno
dec
int3
ret
inc
jp
dec
mov
jns
movsl
jb
or
xchg
mov
std
dec
clc
aaa
mov
jne
mov
pushf
lock
mov
cmpsl
sub
pop
call
sarl
or
add
fmul
fbstp
fnstcw
sti
enter
into
mov
cmp
in
scas
sbb
lahf
xor
pop
lods
lock
sbb
mov
xchg
cmp
xchg
push
arpl
test
insl
sub
xchg
fadds
popf
mov
sbb
das
popf
cmp
or
iret
idivb
or
mov
xor
pop
popa
lret
fdiv
in
and
ret
xor
pop
sti
enter
dec
mov
fildl
scas
stos
fldt
adc
pop
loopne
in
stos
jg
jl
adc
sub
xchg
inc
xchg
or
mov
xor
mov
cmp
es
pop
xorl
idivb
ret
cltd
cmp
cltd
cwtl
ret
or
and
push
in
enter
add
sbb
add
push
push
inc
jle
insb
repnz
popf
repnz
cld
sbb
cmp
negl
mov
or
sbb
lahf
clc
pop
xor
lods
and
cmp
pop
cmpsb
mull
ror
fiaddl
sti
xorb
sbb
pop
push
cmpsb
sub
mov
xchg
xlat
pushf
lcall
xchg
scas
xor
popf
jnp
mov
pop
mov
jns
and
adc
mov
mov
js
cmp
mov
outsb
les
sbb
stos
jg
dec
mov
or
out
mov
test
dec
test
arpl
sbb
sbb
mov
pop
sbb
scas
cmp
fistpll
ja
sbb
lahf
sub
jno
cmp
pop
mov
cmp
fldenv
cmp
notb
jmp
adc
mov
or
push
xchg
fmulp
pushf
inc
nop
pop
in
cli
pusha
add
stos
sti
outsb
imul
sbb
scas
daa
xchg
pushf
xor
jmp
mov
ret
sbb
push
and
mov
and
or
shrb
sti
mov
dec
test
cmp
jg
in
cld
or
sbb
sub
pop
mov
xchg
add
dec
movsb
sbb
cmp
lock
stos
arpl
mov
mov
popf
adc
add
sbb
cltd
pusha
sbb
sub
repz
lea
es
scas
stos
cmp
mov
aas
cmp
sbb
scas
aas
mov
pusha
jae
pop
ja
incb
xor
cmpsl
xchg
ret
jno
mov
sub
cld
push
in
sbb
fldcw
subl
ret
jns
rcll
sub
test
xlat
scas
dec
add
pop
mov
add
nopl
fs
sbbb
mov
outsl
movsb
cmp
cmpb
mov
cmp
cmp
mov
sbb
lahf
xor
cmp
mov
in
cmc
sbb
icebp
cltd
testl
or
cwtl
jno
fdiv
sbb
fstl
imul
aad
pusha
jno
loop
sti
pop
dec
mov
js
mov
adc
sub
fsubs
xchg
xchg
aam
repnz
cmp
mov
push
push
pop
ljmp
pop
add
negb
inc
fcomp
mov
cmp
int
pop
sub
pop
stos
inc
cmp
aad
stos
cmpl
fs
xchg
lods
data16
mov
jg
sub
int
adc
or
mov
cmp
sti
nop
push
jg
or
shrl
mov
movsl
mov
pop
repnz
outsb
les
ret
xchg
test
ss
fisubrl
movsl
outsb
aas
mov
mov
xor
sbb
jg
or
int3
rcll
jmp
xchg
mov
inc
cli
clc
cmp
add
jg
scas
jg
dec
lods
xchg
andb
add
sbb
fdivrl
xchg
mov
jbe
pop
sbb
sahf
sti
mov
sub
fimull
orps
mov
into
and
fsubs
ret
and
sub
popf
sbb
lret
lea
jle
loop
sbb
push
adc
pushf
pop
xor
out
xchg
out
mov
xchg
cwtl
data16
pop
pushf
push
mov
ljmp
mov
adc
fwait
adc
fldt
sub
sub
xchg
ret
ljmp
push
mov
mov
adc
fs
jns
cs
es
lock
jns
push
fs
pop
mov
pusha
sub
mov
popf
mov
push
xor
in
sbb
adcl
int3
pop
fsubl
inc
pushf
mov
jg
sub
lods
scas
sti
fists
lahf
and
xor
dec
fmuls
or
dec
sahf
loopne
out
xlat
js
cmp
pop
adc
push
push
aas
in
popf
ss
stos
cmp
pminsw
cwtl
jmp
pop
andl
cmp
int3
cmp
repz
les
cli
pop
popf
cmp
ss
cltd
cli
pop
fisttpll
sti
es
jno
es
mov
fdivrs
push
sub
repz
mov
pushf
pop
js
andb
lahf
hlt
cwtl
lcall
notl
push
lcall
fcoms
adc
pusha
mov
mov
fwait
sbb
enter
aaa
stos
lcall
push
in
bound
aaa
or
sbb
sbb
and
mov
je
cmp
inc
cmp
xor
push
jge
test
sbb
lcall
ret
sbb
mov
inc
int
push
leave
pop
cli
cwtl
cmp
rcrb
pop
xchg
sub
dec
jne
push
mov
inc
lds
add
push
shrb
pop
ja
test
xchg
sti
movl
fwait
cwtl
xlat
jge
jo
sub
adc
and
cwtl
xor
loopne
pop
lret
clc
pushf
push
incb
cld
mov
cld
xchg
es
mov
xchg
rclb
mov
lods
mov
inc
scas
sbbl
inc
xchg
cmp
mov
popa
rorb
and
call
ss
mov
cld
int
imul
aaa
cwtl
xlat
sahf
movsb
loope
xchg
mov
repnz
jno
push
test
mov
push
lods
rcl
pop
mov
sbb
or
add
lahf
push
jns
fiadds
pop
clc
loope
negl
sbb
jg
test
jecxz
mov
fwait
mov
mov
cmpsl
pop
mov
jnp
inc
pop
pop
fsubl
and
dec
in
sbb
sub
pop
icebp
scas
stc
cmc
cltd
jnp
mov
out
push
jg
loop
xchg
pushf
xor
add
std
or
loopne
repnz
gs
test
lcall
into
xchg
push
loope
out
call
in
cmp
pop
lock
sbb
or
out
pop
outsl
and
les
jg
sahf
adc
pop
mov
mov
cmp
and
es
xchg
sbb
aas
hlt
mov
mov
cmp
das
jb
and
pop
outsl
lcall
mov
push
out
pop
in
cwtl
push
fwait
jo
jg
mov
loope
mov
jbe
sti
data16
fimuls
push
push
lods
sbb
sbb
repz
xor
pop
out
xor
xchg
xchg
pop
dec
enter
xor
shll
xchg
in
push
das
cmp
cwtl
sbb
outsb
pushf
xchg
imul
inc
lahf
and
xchg
pop
xchg
fidivrs
lcall
cmp
cmp
dec
dec
mov
cmp
cli
push
mov
push
dec
sub
lods
pusha
mov
sahf
es
push
inc
lds
int
xor
sbb
cmpsl
or
cmpb
cmp
xchg
add
sbb
dec
sbb
fstpl
imulb
jnp
jo
negb
fnstcw
pop
jle
cmc
gs
or
mov
cmp
in
mov
shll
jno
orb
and
loope
pushf
mov
ljmp
mull
in
mov
data16
in
cmpsl
aas
lret
mov
cli
les
xchg
push
sub
in
outsb
imull
jae
xor
shll
fsincos
sbb
cld
jb
xchg
mov
lret
je
cwtl
fnstsw
fistpl
out
and
fcomps
pop
mov
jmp
xchg
sbbl
fistl
sbb
mov
out
sbb
adc
repz
inc
pop
mov
les
aas
popf
adc
dec
xor
les
add
push
insl
test
pop
xchg
out
fisubl
pushf
push
xor
and
imul
fcoml
loope
sub
addb
mov
mov
xor
cli
cld
sub
ret
cs
and
cltd
cld
xchg
xlat
icebp
mov
sbb
pop
nop
push
add
test
mov
or
or
lret
cmpb
cs
mov
pushf
into
aas
adc
mov
mov
inc
nop
xchg
mov
pushf
insb
lret
sbb
lahf
fsubr
cld
add
in
push
into
mov
movsb
icebp
fcmovne
mov
jmp
dec
fiadds
fwait
mov
mov
out
pushf
jnp
movsl
icebp
lock
icebp
fsubs
mov
pop
jns
movsb
sti
lret
aad
lahf
xchg
pop
xlat
mov
add
pop
mov
scas
test
ja
cmp
sti
xor
cli
cld
mov
pop
dec
stc
pop
outsl
aas
inc
int3
fsubrl
cmp
repz
nop
mov
aas
xchg
lret
js
xchg
sbb
les
repz
sahf
mov
mov
jno
jne
inc
rdtsc
repnz
mov
add
and
pop
push
pop
pusha
shrb
call
fdivs
sbb
jns
cmpl
cmpsl
jmp
movsb
inc
pop
cmpsb
sti
in
or
insb
pushf
lods
pop
mov
dec
cli
lea
in
icebp
repnz
call
cmp
addb
mov
mov
aas
xor
in
adc
mov
mov
xchg
cmp
enter
test
mov
sti
ja
sbb
xchg
fbstp
cmp
push
outsl
push
lds
sbb
bound
mov
jb
rol
cld
push
pop
add
jp,pn
push
sbb
stos
mov
fnstenv
ljmp
sub
mov
mov
out
mov
mov
mov
sbb
sub
sbb
mov
mov
movsl
push
stos
shll
lods
xor
aam
mov
push
test
scas
sti
jge
add
push
mov
aas
fcom
lcall
incb
pop
cmp
pushf
int3
mov
movsb
test
mov
int3
popf
pop
jnp
movsb
cmp
jno
and
mov
sbb
adc
xchg
pushf
sti
xchg
out
xor
sub
sahf
inc
rcl
insl
lods
pushf
push
call
lret
cli
out
fildl
mov
std
mov
fistpl
adc
insb
adc
sbb
ja
jge
push
jbe
push
jbe
push
int
cmp
mov
pop
and
inc
cmp
clflush
movsb
push
negb
dec
and
daa
pusha
sbb
fimuls
int
push
dec
test
ret
cmp
lret
add
cbtw
sahf
in
xchg
sti
outsb
jmp
sti
jno
pop
ja
pop
movsb
mov
lods
ficompl
adc
stc
sub
cmp
sub
and
sbb
popf
ret
stos
inc
mov
in
mov
mov
and
ja
fnstsw
xor
div
dec
mov
mov
pop
pop
cmp
sbb
push
push
push
push
icebp
push
hlt
lret
in
and
pushf
adc
xchg
jb
cmc
or
clc
test
push
fsubrl
cmp
push
or
loope
aaa
popa
jg
and
popa
cmp
sub
and
jp
cmpb
jp
jle
mov
sub
mov
jae
pop
adc
ret
mov
faddl
sub
mov
mov
cmp
jnp
fucom
cmp
mov
jmp
inc
loope
mov
and
cli
push
pushf
aad
sub
and
jmp
cmpsb
jge
stos
jo
sub
aaa
jecxz
xlat
add
xor
cwtl
lcall
add
jae
cmp
cltd
out
jmp
loop
repz
pop
mov
leave
pop
mov
sub
ret
fiadds
mov
or
cmp
stos
int
jo
xchg
sti
and
cwtl
cmpsl
nop
out
fdivrl
aam
movsb
ss
mov
mov
push
and
test
mov
out
xor
fwait
pop
dec
iret
sbb
and
xchg
jb
jnp
cld
aas
fsubrs
fwait
cld
adc
cmp
cmpl
leave
fwait
repnz
mov
inc
aad
add
xchg
and
test
lcall
outsb
call
out
sbb
xchg
cwtl
fs
gs
jle
pop
mov
inc
sahf
cmp
dec
jb
cltd
jnp
pop
fs
fldcw
sbb
andb
mov
adc
push
testb
mov
decl
adc
sbb
cli
and
hlt
push
lret
mov
add
dec
and
and
fidivs
cmc
dec
pop
mov
jp
mov
popf
inc
pushf
push
mov
sub
adc
adc
cmp
mov
push
setge
rcr
push
fwait
addr16
mov
repnz
dec
sub
lret
pusha
xchg
xchg
je
test
pop
inc
jb
xlat
and
out
xchg
mov
loope
inc
sbb
sahf
lret
push
jle
out
and
stos
push
jp
js
cmpsb
sti
jmp
xor
rol
pushf
test
mov
xchg
sti
adc
sti
das
dec
test
mov
dec
dec
sbb
je
in
sbb
add
adc
movsb
lret
sbb
cmpsb
push
mov
adc
xchg
out
cmp
dec
scas
cmp
mov
out
jecxz
subb
les
sub
cmp
xchg
sahf
xchg
scas
sti
out
ljmp
mov
xor
ss
lods
rcrb
rcll
cmp
sub
fwait
cmpb
xchg
stos
xor
sbb
rep
mov
dec
xor
add
sbb
jmp
xor
ds
mov
jle
loope
addl
jge
out
stos
mov
mov
popa
xor
popa
lods
lods
fs
sbb
mov
rcrb
inc
sub
mov
xlat
or
aaa
sbb
pop
fildll
arpl
and
dec
add
fwait
dec
pop
mov
sbb
sbb
xor
popf
cmp
mov
mov
loopne
sub
jmp
dec
cmpsl
mov
cmpsb
mov
out
shll
add
cmpsb
jnp
push
lret
add
in
lahf
sbb
mov
mov
mov
jmp
jb
imul
push
popf
andl
pop
loop
faddl
mov
test
pop
mov
lods
pop
in
mov
ljmp
mov
pushf
dec
fisubs
lock
insl
inc
rclb
xchg
jp
into
fimull
sub
push
jnp
in
lock
xor
js
ret
fsubr
adc
fcomps
and
mov
jge
pop
sub
fimull
popf
jnp
sti
adc
clc
lret
xchg
fadds
test
pushf
ja
je
clc
add
add
js
outsb
fsts
lea
ss
mov
push
dec
push
cwtl
xchg
cmp
shrb
leave
fs
repnz
cmp
xor
jb
pop
mov
aam
ja
popf
add
jmp
and
imul
jp
lar
test
mov
mov
les
xchg
cld
mov
lods
pop
sub
xchg
sti
sbb
imul
pushf
ljmp
stc
and
pop
jns
sar
mov
dec
mov
aaa
imul
jnp
inc
rcrb
aas
pop
mov
pushf
mov
mov
lea
test
cmp
jmp
pop
ljmp
mov
repz
pop
repnz
pop
icebp
xchg
inc
divb
jnp
movsb
inc
mov
pop
xchg
fadds
es
inc
cli
les
inc
shl
sub
out
stos
sahf
mov
or
lods
pushf
fidivs
bound
mov
mov
mov
push
data16
xchg
mov
ljmp
repnz
mov
push
arpl
sbb
or
jo
sbb
shl
iret
xchg
mov
std
pop
mov
outsl
ret
es
pop
or
fldl
mov
stc
pop
mov
cmp
xor
xor
popa
mov
scas
mov
test
pop
xchg
lret
sbb
out
pop
mov
jb
jno
lahf
mov
aaa
es
lds
fninit
jle
ret
lahf
cmp
inc
adc
mov
adc
jl
push
js
inc
adc
orl
fxch
jl
sbbl
and
dec
adc
stos
scas
fsub
jo
sub
push
aaa
mov
jbe
mov
xchg
jns
out
push
pop
ss
dec
sub
pop
sbb
cmp
xor
fs
xor
dec
sub
pop
stc
mov
mov
repnz
daa
xor
jne
xchg
sbb
roll
mov
negb
pop
xchg
sbb
jns
fcomps
fs
cmpl
sti
inc
push
mov
out
cmpsb
mov
sbb
pop
push
xor
rcrl
push
mov
clc
and
xlat
sub
pop
bound
jne
incl
mov
repnz
jge
sti
pop
es
jecxz
into
lods
pop
mov
fadds
loop,pn
pop
lea
das
sbb
add
lahf
inc
xchg
popa
out
push
mov
hlt
fsub
push
les
lahf
xchg
push
jb
mov
clc
cmp
sub
pop
aas
lcall
loopne
sahf
rolb
ret
int
stc
xchg
pop
fdivrl
jnp
push
stos
jp
fdivrl
cs
bound
lock
lods
cltd
xchg
cmp
idivl
sahf
mov
push
sbb
xchg
mov
push
fwait
sbb
aam
bound
jns
or
cli
repz
sti
stc
arpl
dec
mov
sbb
leave
pop
cmpl
js
aas
add
and
mov
into
sub
or
push
pusha
push
and
dec
sarl
addl
cwtl
insb
in
rclb
jb
ljmp
lret
xchg
sahf
mov
pushf
js
int
xor
sti
cs
inc
xchg
test
addr16
pushf
sub
lret
add
add
lret
pop
shll
jnp
sbb
call
pop
or
push
sbb
mov
push
mov
ret
push
bound
inc
inc
mov
pop
addr16
shlb
daa
out
sbb
jno
push
fmull
inc
loopne
ja
mov
inc
fsubs
mov
dec
add
push
movb
fisttps
xor
cmp
sub
stc
movsb
fnstsw
out
sbb
movsb
into
pop
cmpsl
sub
push
out
popa
cld
sbbl
cwtl
cwtl
int
sub
ss
mov
sbb
out
pop
xchg
sub
insl
pop
mov
mov
leave
divl
sub
xor
cmpsl
repz
xor
insb
ficomps
cs
movsl
sbb
xor
pop
push
inc
inc
mov
lods
cmp
xor
cmpsb
mov
into
movsb
add
pop
divl
hlt
aas
and
inc
es
fcmovne
mov
pop
test
sub
cmp
ljmp
leave
and
mov
fcoml
addr16
into
fcoml
test
notb
cmc
mov
cmpl
test
icebp
sbb
fldt
lret
imul
sub
orl
xchg
sbbb
icebp
aad
rcrl
fisubl
inc
shl
mov
xchg
aad
neg
aas
icebp
mov
icebp
push
lret
mov
mov
sbb
xor
scas
mov
and
sbb
out
mov
jl
data16
jge
cld
jg
ds
jl
sbb
aaa
pop
sbb
int3
mov
in
lret
movsb
or
inc
sarl
cwtl
aam
sub
mov
fdivr
cmp
push
idivb
xorb
fcomps
stc
lret
fcmovbe
out
push
xorl
xchg
pop
ljmp
clc
outsb
push
out
mov
jg
enter
int3
mov
shl
xchg
xchg
rcrl
or
cmc
clc
xor
lds
scas
ljmp
adc
or
sbb
xchg
dec
add
roll
adc
cmp
mov
std
sbb
sti
sbb
xor
dec
arpl
mov
sbb
test
push
pop
push
clc
lcall
xchg
pop
mov
aaa
test
sub
sti
daa
cmp
sarl
cmp
or
push
and
jp
xchg
sbb
xor
test
or
pushf
sbb
pop
stc
mov
sti
xor
icebp
xchg
xchg
lock
pop
lds
bound
pop
pop
mov
movsb
imul
inc
ja
push
pop
data16
int3
roll
jbe
mov
mov
xchg
dec
fnstsw
stos
outsb
xlat
jae
xlat
cmp
or
mov
ds
movsl
sti
dec
std
sbb
mov
mov
push
sbb
dec
adc
imul
and
add
int3
fisubl
mov
adc
dec
imul
leave
pop
jae
cwtl
lea
repnz
mov
lock
inc
pop
push
jne
pop
mov
xchg
into
loope
xchg
pop
fnstcw
add
mov
fcompl
jnp
fidivrl
ja
or
xor
jmp
fidivl
daa
pushf
or
cmp
lahf
mov
fcoms
sub
negb
sti
mov
jecxz
or
fdivl
daa
fdivrp
repnz
push
es
and
xchg
outsb
jno
jg
xchg
cmp
std
pop
pop
mov
dec
out
mov
mov
jns
inc
hlt
sub
cli
cmp
pop
sti
scas
lahf
dec
mov
ja
jmp
scas
fsubl
mov
push
pop
in
or
cmp
std
or
adc
sti
movsl
stos
mov
jns
xchg
rcll
dec
stos
std
cmp
jns
pop
dec
lahf
sbbb
dec
lret
mov
cld
add
negb
outsl
lret
ja
out
call
mov
xor
shl
push
nop
cmp
sti
pop
pop
repz
in
fdivrl
xchg
fwait
mov
out
cmp
andl
xor
int3
fwait
idivb
mov
push
cs
ret
or
sub
ljmp
fsubrl
mov
fcoms
iret
jo
mov
adc
lods
cmpsb
popl
pop
sbb
mov
pop
xchg
hlt
mov
pop
dec
mov
notb
adc
cli
sbb
lock
pushf
in
iret
push
repnz
xor
imul
push
jb
xor
jle
jb
pop
sub
outsb
cld
lock
daa
rorl
mov
pop
mov
xchg
jl
mov
inc
xchg
push
or
enter
fdivrs
leave
es
or
jnp
cmpsl
mov
ja
lahf
pop
or
sub
mov
pusha
mov
fnstcw
pop
ljmp
mov
cmp
sbb
adc
sbb
scas
sti
fildll
stos
dec
fidivrs
mov
out
inc
roll
and
jl
sti
cmp
hlt
sub
cmc
sahf
push
cld
sti
lea
aaa
jp
pop
out
lret
test
clc
out
sub
aaa
add
inc
sbb
mov
out
inc
push
out
cmpl
lds
dec
adc
pop
xor
jo
pop
fsubl
sbb
adc
hlt
push
fwait
call
repz
ret
push
in
push
mov
or
cmp
addl
fsubs
xchg
inc
nop
aas
sbbb
sbb
popf
shlb
call
sahf
fdivr
ljmp
mov
pop
sub
mov
scas
and
mov
sarb
inc
mov
mov
idivb
xchg
or
in
cmp
or
cmc
xor
insl
mov
push
cmpsb
jmp
gs
stc
add
xor
in
cmp
xorl
pusha
ss
cltd
inc
or
loop
jecxz
cmpsl
in
ss
jg
xchg
aad
jno
outsl
adc
jnp
jnp
fsubrs
clc
sub
lock
add
pop
pop
push
in
mov
inc
repz
mov
iret
lock
sbbl
test
sbbl
andb
loop
popa
mov
mov
out
add
iret
mov
gs
mov
adc
xlat
movsl
in
sbb
out
pop
nop
xor
bnd
clc
stos
aas
pop
sbb
mov
jnp
push
mov
pop
out
mov
xchg
fadds
mov
push
cmp
je
add
dec
pop
imul
andb
lods
sti
sub
ret
jns
mov
or
sbb
sarb
popa
and
cmp
add
cmp
movsl
cmp
mov
mov
sti
mov
push
cmpsb
sub
xor
cwtl
cwtl
test
mov
lret
stos
sub
sub
sbb
fisubl
jo
loop
mov
lret
aas
outsl
push
mov
xlat
inc
mov
fidivs
mov
addr16
mov
outsb
ss
and
jmp
lea
pop
shlb
je
push
imul
cmpsb
test
out
cs
or
out
insb
mov
sbbb
and
loope
inc
xchg
or
test
xchg
dec
or
cmpb
fiaddl
pushf
in
sbb
adcb
mov
jo
repnz
int
sub
sahf
mov
mov
fadd
pop
dec
cmp
ds
fdivrl
insl
mov
roll
pop
and
mov
push
lahf
pop
xchg
mov
dec
aam
add
cmpsl
xor
call
cmp
xchg
push
adc
mov
or
pop
stos
lret
xor
push
add
mov
sbb
test
cmc
sbb
jle
add
pop
in
and
mov
add
cmp
lahf
pusha
repnz
hlt
sbb
xor
cmp
xchg
mov
add
xchg
and
mov
cmp
cmp
and
inc
fistl
inc
jnp
adc
jno
jno
add
adc
aas
clc
sbb
cmpsl
dec
jg
adc
notl
add
mov
ds
lods
lea
cli
repnz
mov
popf
cmp
cmp
and
adc
inc
fidivrl
sub
jbe
popa
cltd
adc
cmp
sub
inc
jae
out
test
push
inc
imul
mov
ds
jno
mov
hlt
mov
fwait
sbb
inc
out
subb
outsl
fcoms
scas
shll
and
xor
lahf
jno
sub
xchg
arpl
mov
orb
dec
iret
fwait
lds
fcompl
enter
jmp
jle
out
ljmp
out
imul
adc
enter
rcrb
mov
sbb
mov
jnp
push
scas
lret
xor
jno
ss
imul
sbb
ror
icebp
lea
sbbl
push
xchg
pusha
inc
stos
mov
fldt
jmp
sub
lret
subb
cmpsb
inc
ret
pop
clc
inc
and
cli
xchg
sti
pop
cmp
jbe
jg
adc
push
dec
mov
shlb
pop
push
pop
xchg
test
mov
mov
ret
mov
inc
jae
mov
rorl
jle
aas
pop
xor
outsl
push
test
rcrb
sti
fisubrs
jg
lea
mov
mov
lods
pop
lods
incl
fldl
es
ljmp
sti
mov
or
sti
lret
mov
mov
sbb
call
fsub
cmpsl
sti
sub
cld
mov
pop
call
push
xlat
data16
fcmove
pop
jmp
dec
fstp
and
sbb
pop
lahf
in
ja
inc
movsb
cmp
push
jecxz
shl
pop
jae
cmp
adc
sub
cwtl
das
fwait
jmp
fidivrs
jbe
pop
rcr
lret
xor
cmp
mov
repnz
test
inc
mov
out
mov
push
pop
neg
push
clc
xchg
pop
xchg
jle
xchg
or
mov
scas
jmp
sub
hlt
adc
rcll
mov
inc
ja
cwtl
rorl
mov
push
std
jo
lea
out
mov
xor
mov
aaa
push
aas
push
xor
mov
add
sarb
pop
add
sub
sar
inc
stc
nop
insb
shrl
mov
fs
dec
lcall
clc
push
mov
ds
testb
shll
idivl
lds
sub
cs
adc
sbb
mov
test
sbb
jg
pop
jbe
pop
push
pushf
xor
test
jmp
jo
xchg
mov
stc
ficoms
lock
jae
pop
js
ss
sbb
repnz
js
into
mov
aad
imul
xchg
imul
loop
sub
sub
sub
fdivl
dec
aaa
push
ss
pop
mov
into
jne
mov
ds
xor
xorl
adc
push
fmuls
jmp
pop
stc
out
lret
xchg
mov
popf
inc
mov
dec
sbb
add
sbb
ds
aaa
xchg
int
loope
pop
mov
mov
shll
adc
mov
jmp
jp
sub
cmp
push
jle
push
sub
jo
insl
xchg
dec
lea
imulb
mov
aas
pop
int3
sbb
jne
clc
stos
shll
mov
stc
mov
mov
loop
pop
addr16
jmp
loopne
pusha
pusha
stos
cmp
stos
push
jo
cmc
push
icebp
inc
add
fiaddl
lret
out
jge
cmpsl
incl
int3
inc
lret
mov
fistpl
push
roll
mov
cwtl
popf
dec
jge
push
xchg
mov
test
pop
cmp
cltd
fisttpl
stc
jns
adc
cmpsb
aas
cmp
jno
mov
rclb
push
sbb
adc
mov
lret
sub
jle
dec
xchg
jnp
in
hlt
and
cmpsb
inc
pop
mov
test
outsb
sub
and
stos
xchg
dec
xchg
jg
jl
cmp
xchg
sbb
sub
sub
ds
in
xchg
out
sti
add
stc
mov
enter
cwtl
and
mov
pop
cmc
cs
inc
negl
and
es
test
js
add
test
cmp
and
cmp
cli
lret
lods
mov
call
sbb
adcl
cs
cmpsb
sti
outsb
sbb
cmpsl
int3
pop
dec
mov
stos
sub
add
enter
les
fcoml
xor
cmpsb
jns
push
push
inc
mov
pop
and
push
add
add
cmp
fsubs
and
shl
cli
sub
push
stc
test
ds
jae
fidivl
xchg
ret
add
lahf
pop
push
sbb
outsb
loope
data16
or
push
mov
adc
mov
mov
aas
push
movsb
mov
cmp
sbb
or
jmp
mov
xchg
mov
test
test
scas
ljmp
repz
aaa
sbb
mov
add
add
lahf
lcall
sbb
jne
dec
xor
pop
arpl
sub
sbbl
dec
push
and
sub
stc
sbb
cmp
inc
pop
outsb
xor
sbb
mov
test
lds
mov
int3
test
gs
push
les
pop
stc
push
add
mov
adc
or
aas
repz
mov
add
xchg
xor
xchg
mov
sbbb
jle
imul
pop
mov
pop
ljmp
jo
fmull
or
scas
jno
bound
ficomps
pop
cmp
mov
dec
pushf
xchg
ds
mov
outsl
movsb
pop
mov
hlt
sbb
xchg
je
jg
in
int
jg
xchg
mov
rcl
dec
pop
sub
loope
xchg
add
dec
cltd
lret
cmc
mov
mov
push
lahf
mov
lods
lods
cmp
cld
pushf
aas
out
in
divb
aas
in
sbb
pop
add
mov
cld
idivl
sub
out
add
pop
stc
jbe
sub
fcompl
das
lahf
movsb
lahf
cs
cltd
addr16
push
push
mov
xor
outsb
cmp
cmp
inc
dec
mov
jg
cwtl
loopne
jecxz
pop
dec
loope
pop
jbe
fldl
cli
std
pushf
fstpl
ljmp
xor
xchg
cmp
dec
fidivrl
das
stos
mov
mov
enter
and
jmp
lahf
inc
aam
lock
mov
fstpt
pop
test
loope
les
cmp
lret
inc
aad
std
xor
pop
imul
addr16
ds
jbe
ficompl
test
dec
movsl
mov
push
aaa
scas
cmp
add
imul
jb
ja
lea
adcl
jp
cmp
aaa
sbb
ud1
rclb
out
ds
mov
push
or
mov
js
or
js
out
xor
inc
jnp
dec
sbb
es
mov
les
mov
in
dec
lods
jnp
mov
movsb
pop
mov
mov
inc
fucomip
clc
nop
dec
ror
mov
push
int
xor
lahf
or
call
mov
ror
shl
lret
mov
xchg
adc
stos
cltd
cmc
pusha
movsb
jg
jb
mov
fsubl
jb
xchg
mov
xchg
or
and
xor
sbb
jb
je
mov
adc
mov
jno
fsub
pop
jle
sbb
jp
push
ja
adc
adc
fisubl
pushf
adc
or
ret
pushw
xlat
add
adc
pop
les
sub
in
int3
loop
es
ret
fwait
stos
movsb
fwait
dec
dec
mov
or
push
mov
sarb
gs
cmp
into
sbb
cmpsl
addb
sbb
ret
push
push
inc
xor
mov
xor
sti
pxor
jns
cmp
push
mov
sbb
xor
xchg
dec
and
das
out
addb
jne
xchg
ret
jns
sub
pop
inc
cmp
sub
pop
aam
pop
pop
lea
xor
and
and
inc
sbb
xchg
fsubrs
mov
and
aas
cltd
jb
jne
jle
jle
mov
push
cmp
shl
in
pop
push
lea
or
push
and
sbb
sti
mulb
dec
popa
call
int
cmpsl
sti
scas
cmp
outsb
pop
cmp
sub
mov
popw
inc
cmp
movsb
scas
sbb
cli
aas
fstpl
pop
mov
lret
pop
and
mov
push
pop
stos
sub
outsl
add
int
pop
xchg
xor
mov
pushf
sti
out
pop
xchg
enter
leave
mov
xor
cwtl
mov
fnsave
xchg
cltd
lret
je
fisubs
and
cli
flds
push
lods
mov
ret
and
es
or
mov
inc
or
xchg
pop
fldl
push
push
mov
xchg
sbb
stc
fisubrs
std
push
cmp
lcall
imul
xchg
movsb
xchg
stos
popa
or
inc
xchg
stos
sbb
repnz
cmp
or
pop
pop
fucomi
ret
mov
cmpl
cmp
rcr
add
lock
xor
sbb
push
bnd
fnstcw
pop
scas
aas
sbb
pop
mov
jno
mov
rclb
test
sub
push
push
inc
sbb
incb
test
mov
div
mov
movb
gs
sbb
mov
dec
popf
cmp
jns
pop
xchg
pop
inc
sbbl
sbb
cmpl
mov
fadds
mov
sbb
idivl
cwtl
cmp
or
sbb
loop
pcmpgtb
shlb
test
mov
and
xor
subb
mov
or
into
pop
mov
test
stc
lock
lcall
sbb
fwait
pop
push
xor
sbb
push
icebp
inc
mov
in
ljmp
dec
pushf
mov
jp
out
inc
decb
cltd
push
test
sbb
lods
cmp
mov
dec
shr
push
stos
jne
ja
loop
mov
cld
gs
jns
pushf
out
and
mov
mov
ret
divb
and
rorb
lret
xchg
mov
and
mov
add
lret
cltd
and
imul
sub
mov
jmp
fmuls
aas
dec
orb
ja
je
mov
movsb
in
sbb
jo
mov
mov
movsl
cmpsl
adc
imul
push
mov
pusha
mov
rorb
sarb
sbb
aas
dec
outsl
scas
jno
jbe
xchg
inc
jle
xchg
mov
sahf
push
mov
stc
pop
rolb
out
dec
fcoms
mov
and
les
dec
mov
mov
std
sbb
andl
test
notl
xchg
cld
cmpsb
pusha
xchg
cmp
popf
int3
push
dec
pop
and
push
mov
cmp
xchg
test
fidivl
mov
ja
xlat
pushf
sarb
mov
mov
push
es
aam
je
xor
cmpsl
pop
inc
sub
mov
shll
jno
cmp
add
mov
pop
push
jnp
add
lahf
cs
pop
ds
mov
movsb
cmp
not
sarb
lahf
mov
jnp
pop
nop
xchg
xchg
jl
mov
bound
ss
pop
cmp
popa
push
mov
push
leave
xchg
and
dec
outsb
xchg
sbb
pop
leave
call
lea
in
adc
ret
fmull
div
fcomip
xchg
or
push
cmp
dec
push
jl
jnp
pop
decb
mov
xor
cld
mov
es
mov
in
push
pop
scas
cwtl
mov
adc
sbb
notb
jne
incl
movsb
frstor
aam
shrl
pop
mov
sub
insl
mov
negl
sub
jl
fs
in
subb
mov
push
jg
jnp
mov
fbstp
mov
sti
popa
lcall
insl
daa
jbe
jb
cli
mov
adc
call
das
jecxz
aam
cli
out
xor
push
jle
or
mov
ret
mov
xchg
fs
scas
jg
rorl
or
push
push
test
xchg
sub
orl
sub
sbbb
scas
movsb
lock
cwtl
sbb
pop
adc
lds
sbb
ret
jg
aas
sbb
dec
clc
shlb
cld
inc
scas
std
mov
cwtl
leave
jno
push
push
sarl
fwait
xor
sahf
sbb
xchg
mov
fnstsw
outsl
mov
adc
es
xlat
jns
add
xchg
pop
cs
pop
dec
pop
in
dec
shll
dec
dec
add
int3
xchg
in
pop
dec
cld
jp
ds
cwtl
pop
js
jns
jne
ds
pop
movsb
pop
mov
movsb
test
xor
mov
ss
loope
shr
xchg
mov
inc
sbb
mov
inc
and
mov
pop
xor
push
pop
inc
mov
movsb
or
adc
mov
xchg
sbb
in
cmp
mov
sub
les
cwtl
mov
sub
sbb
jno
pop
push
cmp
ret
mov
dec
sti
in
inc
out
lods
int
dec
fadds
mov
insl
cmpsb
int3
jne
push
fcmovb
rcll
in
mov
in
les
imul
stos
xchg
sbb
mov
setl
fldt
pushl
sbb
push
xor
into
xlat
jg
icebp
mov
sub
flds
mov
fsubs
aas
cmp
cmp
mov
dec
outsb
stos
jg
sub
dec
sbb
cmp
cld
pop
jg
mov
cmp
pop
loopne
fadd
sti
jmp
ret
imul
push
add
sub
lea
xchg
fdivrs
mov
cs
mov
cs
nop
cmpl
mov
data16
je
movsb
scas
add
mov
stc
shrl
stos
je
mov
aad
js
xor
data16
cmp
in
cmp
pop
out
xor
es
cmp
cwtl
mov
cmp
adc
in
pop
cli
cmp
mov
mov
imul
jnp
outsb
or
sbb
xchg
xor
rclb
or
cmp
sti
out
cmp
jmp
sub
cmp
push
loop
repnz
arpl
lods
push
aas
ret
mov
cmp
rcrl
sub
sbb
or
les
xchg
dec
mov
sbb
addr16
jns
jo
nop
adc
nop
jecxz
call
jnp
into
jbe
pop
cmpsb
jge
cmp
int3
mov
ljmp
in
xchg
aaa
or
jae
arpl
cld
fidivs
cltd
pop
sub
push
and
shr
pop
pop
aad
sub
sti
dec
xchg
inc
test
cmp
lods
loopne
push
or
dec
fwait
fwait
mov
insl
into
fidivrs
xchg
sti
lock
mov
es
adc
push
pop
push
mov
clc
test
jae
int3
jne
iret
mov
sbbb
mov
cmp
sub
adc
mov
bound
inc
pop
cli
xor
mov
xrelease
or
aas
xor
bound
adc
jle
xor
or
pop
xchg
sti
push
in
fdivl
push
mull
scas
aas
out
cmp
lea
mov
fdiv
or
movsb
or
test
mov
xlat
inc
add
faddl
clc
loope
dec
pavgw
fdivrl
fidivrl
sbb
jnp
bound
jns,pn
sub
test
inc
or
lods
sbb
jb
push
movsl
sbb
xor
jg
lock
inc
cmp
push
cmp
in
pop
popf
push
add
rol
inc
ja
pop
lds
lea
bound
into
mov
mov
mov
bound
xchg
jmp
rcrl
dec
lock
pop
fnstsw
xchg
jl
daa
test
shll
scas
mov
xor
outsb
cmp
cmpl
cmp
fldenv
push
js
sahf
cmp
xorl
cld
xchg
into
cmp
cmp
jp
xor
fstps
pop
push
mov
ljmp
outsl
add
adc
imul
out
inc
pusha
push
inc
lret
inc
mov
cwtl
push
andb
divb
jp
pop
fsts
ljmp
lcall
ds
sbb
dec
cmp
inc
mov
fnstenv
pop
xor
fisubl
mov
inc
add
push
pushf
mov
and
sarl
push
push
fists
jns
mov
jg
add
into
lds
bnd
and
loope
inc
push
icebp
cwtl
inc
popa
pop
push
sahf
fists
sub
mov
lds
rolb
cld
aam
mov
stos
sbb
xchg
in
fmuls
mov
fdivl
cmp
dec
es
stos
inc
rorb
das
sahf
jno
adc
cli
and
aas
ljmp
ja
adc
popf
cltd
jnp
dec
xchg
dec
jecxz
jb
mov
ljmp
mov
outsb
lds
scas
test
mov
add
push
lods
js
stos
ret
add
insl
sub
xchg
movsl
xor
test
mov
fidivrl
scas
jbe
daa
inc
mov
shlb
fildl
cmp
lds
jle
cmp
daa
stos
or
push
dec
je
popf
mov
cmp
fistpl
les
mov
jg
inc
push
sti
nop
push
jmp
cmp
add
loope
cli
hlt
xchg
stos
dec
hlt
lds
std
pop
loop
in
xchg
push
sar
xchg
adc
mov
das
pop
pop
xchg
cli
sahf
test
stc
dec
mov
push
adc
and
mov
popf
cld
cwtl
lods
mov
cmp
gs
ss
and
dec
jg
push
pop
in
cmc
fdivrp
pop
and
pop
popf
cmp
cli
mov
fwait
decl
push
in
cwtl
mov
cwtl
fstpt
sbb
rcl
popf
jae
imul
es
cld
lods
dec
fnstsw
mov
bound
mov
xor
sub
test
and
les
test
iret
notb
mov
jp
aad
and
lea
add
pop
mov
push
mov
cmpsl
jmp
mov
adc
cmp
mov
pop
jp
sbb
pop
xlat
mov
mov
mov
xchg
clc
pop
fistpl
mov
jg
pop
jge
cmp
lock
rcll
add
stos
xchg
pop
arpl
sbb
mov
jns
daa
ja
xchg
sbb
ror
cmpl
mov
sub
cmpsb
popf
jmp
mov
insb
adc
mov
push
jecxz
dec
ja
xor
pushf
mov
jg
adc
xor
xchg
push
pushf
lods
hlt
das
popf
push
push
lods
addl
mov
dec
fst
cli
enter
mov
test
lcall
imul
adc
xor
fmuls
fcoml
outsl
and
mov
adc
cmpsb
inc
roll
or
lods
fld
fcompl
pop
das
push
xlat
jo
scas
adcb
sbb
adc
pop
das
push
cmp
or
and
mov
daa
mov
xor
fsubrs
test
pushf
sbb
es
out
rclb
pop
fdivrl
mov
faddl
cmp
sub
repz
jle
out
ja
ret
lea
adc
mov
xchg
adc
shll
repz
jmp
push
setp
jb
mov
bnd
xor
and
ret
pop
insl
cltd
or
cmp
cld
mov
jb
and
adc
clc
stos
cmp
cli
lea
mov
mov
cwtl
out
ror
stos
xchg
and
fimuls
mov
jb
push
sbb
jle
gs
or
sahf
in
jle
lret
mov
dec
xor
cmp
cmp
and
pop
pushf
ss
lret
push
xchg
mov
cli
mov
lret
repnz
fistpll
pop
mov
add
fsubrl
int
push
ror
lcall
adc
push
pop
lret
pop
or
jae
aas
addr16
sbb
div
dec
pop
adc
orb
out
stc
sbb
push
clc
mov
lods
mov
add
jnp
push
push
or
mov
jbe
scas
aam
mov
and
fisubrs
fdivrl
cwtl
mov
jge
aaa
pop
or
pusha
lea
bnd
fld
xchg
add
lea
aaa
cmp
mov
aam
mov
jg
notb
insb
mov
mov
dec
daa
and
in
sahf
sahf
fdivs
jno
sub
cltd
mov
pop
test
inc
xchg
cmp
daa
jbe
or
sub
push
in
mov
mov
sbb
push
idivb
cmp
jg
cwtl
mov
jbe
sbb
pop
dec
aam
pop
sbb
dec
fdivs
ja
test
outsb
add
xchg
dec
mov
jle
lds
and
shrl
dec
adc
jne
lea
mov
insb
adc
or
cltd
sbb
out
and
adc
pop
pop
movsl
dec
dec
clc
xchg
sti
xor
jbe
idivb
mov
faddl
fsubrs
into
call
dec
mov
lret
mov
mov
push
sub
cmp
mov
push
jle
leave
repnz
sbb
lods
sbb
dec
sbb
pop
xchg
xchg
js
and
mov
nop
jnp
arpl
cltd
push
test
aas
outsb
pop
nop
inc
popa
inc
sbb
sbb
mov
pop
adc
add
mov
push
mov
sbb
das
pop
test
jbe
insl
aad
mov
jg
jbe
xchg
or
out
repz
mov
das
pushf
ja
lock
pop
out
mov
xchg
xchg
cld
push
subl
ljmp
in
cmp
inc
pop
fistpl
or
xor
mov
sbb
adc
movsb
dec
nop
jnp
loopne
ret
enter
adc
negl
dec
inc
test
mov
and
popf
inc
lds
mov
bound
mov
mov
imul
ds
icebp
aaa
xchg
arpl
pusha
jb
xor
fwait
xor
sbb
stc
fsub
pop
cmpsb
nop
sbb
jae
xchg
insl
mov
adc
add
imul
insl
mov
xor
outsl
mov
xchg
add
add
xchg
mov
fsub
jnp
sub
mov
jno
pop
lahf
fdivrl
pushf
es
xlat
in
mov
out
mov
int
sbb
mov
cli
xchg
jecxz
jb
pop
pop
es
push
dec
push
sub
cltd
fcomps
mov
adc
loop
xchg
inc
xor
addr16
movsl
stos
lret
stos
es
stos
aas
sub
mov
jmp
movsl
pushf
ret
repnz
jle
in
mov
sbb
vpaddw
jge
cmp
sub
into
sbb
xchg
mov
out
mov
mov
out
pop
leave
mov
aam
les
in
insb
mov
rcr
xor
loop
lds
fldt
out
sti
scas
fldcw
sbb
adc
sar
mov
roll
xor
jno
shl
adcb
test
push
cltd
mov
lods
repz
ja
push
sahf
cmp
repnz
addl
mov
xlat
adc
in
lret
cld
lock
int3
icebp
pop
into
repz
add
push
push
adc
jno
mov
jae
mov
inc
cmpsb
aaa
or
lods
cwtl
loopne
int
bound
push
ret
idivl
rorl
mov
dec
repnz
xchg
sbb
or
push
dec
fwait
push
mov
je
out
sti
in
adc
cmp
sti
scas
mov
lods
xor
jnp
pop
enter
in
mov
mov
mov
pop
jp
mov
int
mov
fmuls
xchg
rcr
pop
cli
add
cwtl
dec
pop
and
pop
jge
xchg
fistps
mov
sti
dec
adc
out
or
push
stos
inc
sbb
xchg
insb
jo
and
js
js
lcall
inc
mov
push
fdivs
repnz
sbb
mov
jp
int
adc
stos
dec
inc
mov
js
cmp
stos
mov
inc
xlat
pop
sbb
push
sub
push
add
and
les
or
mov
sub
ljmp
pop
xor
xor
inc
pop
or
jo
leave
shrb
and
mov
lock
dec
pushf
sub
int
cmp
xlat
aaa
icebp
mov
sbb
mov
xchg
push
push
jae
dec
jae
cs
outsb
sahf
adc
and
adc
xor
inc
xor
outsb
cmp
cltd
pushf
push
outsb
xchg
mov
test
outsb
cmp
lods
jbe
addr16
xchg
orl
sbb
imull
pop
sbb
rcll
aas
add
inc
ss
xchg
fs
enter
pop
xchg
dec
xchg
sti
and
mov
lds
std
outsb
aas
dec
lods
mov
hlt
jge
jno
insb
mov
lds
fcomps
jp
sbb
popa
push
loope
lea
xor
sbbb
mov
lahf
aad
cmpsl
pop
add
daa
cmp
jns
mov
cli
mov
sub
cmp
loopne
nop
outsb
xor
sbb
andb
clc
push
sub
imul
icebp
lods
arpl
xchg
shlb
test
push
mov
jno
rclb
in
clc
add
cltd
shrb
std
cwtl
adc
cmp
out
sbb
imulb
stos
and
pop
pop
rcll
fcompl
jmp
xchg
or
ljmp
lds
insb
sahf
cmp
sbb
jg
xchg
sub
ss
into
or
jl
dec
cmp
jp
lea
cmpsb
data16
xchg
std
lds
data16
je
arpl
or
mov
leave
sbb
jnp
jae
xor
lcall
xchg
jle
loopne
stc
sub
insl
push
mov
mov
adc
mov
mov
nop
negb
xor
jae
shll
fsubrl
aas
nop
aas
and
jno
scas
pop
mov
xchg
sbb
xor
cvttps2pi
inc
fists
pop
sti
cmp
sbbb
js
fsubl
and
mov
ja
sarl
cli
stos
add
lods
pop
mov
pop
sub
push
pop
fwait
cmp
dec
dec
sbb
test
sbb
jle
pop
mov
sub
mov
fcoms
fnstcw
out
sahf
xor
pop
int
shrb
mov
stos
fstps
imul
jbe
sbb
neg
adc
aam
fs
and
je
jp
jae
xchg
ret
push
sub
mov
mov
test
dec
subl
js
xlat
imul
mov
js
xchg
fwait
out
lock
sbbb
or
rclb
xchg
jg
jg
ja
xor
sbb
cmp
push
loopne
dec
sub
sub
mov
or
outsb
lcall
push
cmp
cwtl
out
push
adc
aad
xchg
mov
rcll
mull
ds
out
xor
mov
pusha
sub
mov
cmpb
test
sti
aaa
in
jg
fadds
xor
and
dec
cmp
loope
out
pop
and
pop
xchg
aas
dec
mov
dec
cwtl
pop
push
mov
shrb
lcall
jle
sub
lret
sbb
inc
lds
xchg
sbb
shll
and
mov
cmp
inc
jp
pop
cmp
mov
mov
dec
cwtl
pop
scas
ret
add
xchg
ret
or
adc
pushf
pop
jno,pt
add
movsb
lahf
xlat
and
enter
cwtl
jl
dec
mov
lods
insb
pop
clc
dec
ja
out
mov
fwait
cmpb
sub
adc
adc
scas
sbb
outsb
cmpsl
sti
mov
jge
cmp
stos
je
xchg
inc
cmpsb
cmp
lcall
cli
xchg
in
mov
push
xchg
aad
lds
mov
dec
xchg
xchg
pop
shlb
add
test
fstpl
or
sbb
jb
dec
or
mov
jle
imul
cmp
push
retw
inc
fists
aaa
int
xchg
mov
fists
mov
sbb
jne
fisttps
fcoml
das
scas
sti
and
cld
loope
push
pop
lret
mov
mov
jecxz
sahf
enter
fadd
pop
pop
adc
fadds
rcrb
jo
cltd
push
shrl
push
cmp
dec
xchg
fwait
fs
push
cmp
add
sbb
fimuls
push
fidivl
into
sbb
and
xchg
add
sbbl
mov
dec
fcomps
insb
jmp
dec
scas
sub
je
xlat
xor
enter
or
push
icebp
or
sbb
sbb
sbb
pop
mov
dec
js
mov
pop
push
mov
mov
fninit
rcrb
adc
cli
xor
or
push
xor
nop
out
fcoml
mov
push
sub
mov
dec
sbb
test
mov
pop
add
push
lcall
adc
fistps
iret
dec
add
cmp
mov
mov
sahf
mov
pop
pop
repz
frstor
xor
test
pop
loope
pop
dec
sub
inc
push
xchg
mov
fcmovnbe
push
mov
mov
dec
call
pushf
adc
dec
mov
iret
mov
jb
jle
xchg
jmp
adc
adc
insb
adc
or
cmp
ss
jg
in
and
adc
mov
cltd
adc
mov
push
mov
mov
fisttps
cltd
aad
clc
inc
cmp
cmc
sub
sbb
outsl
fnstcw
add
mov
loop,pt
fistpll
jb
push
mov
lret
mov
push
lcall
push
sarl
mov
dec
jl
cltd
push
mov
call
mov
dec
inc
xor
push
adc
in
repz
imul
fwait
pop
insb
daa
shrl
dec
loopne
xchg
and
jg
adc
rcrb
mov
lcall
fmul
negl
movsb
jae
add
dec
pushf
push
sahf
mov
enter
inc
cltd
mov
push
imulb
sbb
add
and
lods
aas
push
xchg
cs
sti
cs
jnp
sbb
test
btr
stc
fsubs
ds
andl
nop
push
icebp
dec
or
cli
fdivs
andb
dec
lahf
rcrl
psubq
push
cmp
scas
xchg
push
xchg
fstpl
pop
fcoml
cmp
or
lret
es
sbb
jp
pop
push
xchg
out
push
xor
push
aas
jmp
mov
fwait
imul
dec
sbb
inc
ljmp
jp
add
dec
lcall
data16
cmpsl
cmp
leave
cmp
mov
mov
jno
mov
mov
inc
xor
mov
aaa
fldenv
xchg
xchg
int
mov
push
repz
inc
mov
mov
cmp
cmpb
je
mov
pop
scas
std
cmp
loop
mov
jnp
repz
sbb
pop
mov
ds
arpl
fwait
sbb
xor
xchg
ljmp
xchg
sub
or
dec
inc
xchg
ja
int
mov
dec
pop
add
fcomp
insl
push
shll
xchg
jb
cmp
dec
push
repnz
sahf
pop
sub
and
lock
jg
cmp
sub
sti
aaa
pmulhuw
pusha
xor
sub
push
pop
fimull
hlt
pop
xchg
sarb
fs
insl
fs
sbb
and
aad
jle
xor
xor
ficompl
jmp
dec
mov
push
xor
xor
cmp
pop
fsubrl
cmp
psubb
sub
cwtl
rorb
xor
cmp
mov
mov
popf
lods
mov
mov
mul
loop
mov
and
and
xor
scas
lahf
pop
outsb
cmp
or
lods
and
les
call
cmpb
jg
fbld
adc
rcrb
fwait
mov
xchg
in
mov
lret
scas
mov
add
lods
lret
sarl
inc
sbb
lock
mov
pop
add
nop
inc
adc
adc
lock
sbb
mov
push
pop
or
mov
jmp
pop
xchg
sti
test
mov
mov
jg
xlat
enter
cmp
jg
mov
or
sbbl
outsl
and
pop
mov
lds
addr16
jl
lahf
mov
push
xor
push
add
dec
add
xchg
cmp
adcb
fdivr
aad
jae
mov
sub
push
icebp
sub
loop
jne
rcl
mov
mov
repnz
jne
mov
nop
jo
bound
jns
imul
cld
xchg
pop
iret
gs
cld
sbb
and
cmp
scas
pop
and
imul
jo
movsb
fucomi
lea
jbe
je
and
xchg
test
out
pop
jp
jnp
xchg
out
adc
adc
fsubp
lods
adc
mov
or
daa
repz
mov
arpl
mov
lret
mov
push
dec
sbb
xor
mov
jecxz
loopne
adc
repnz
and
xchg
insl
iret
lret
jle
or
addl
repnz
lcall
mov
adc
cltd
stos
les
nopl
lahf
inc
sbb
insl
jnp
mov
iret
in
add
xor
mov
popf
loop
pop
and
roll
ffree
aad
adc
xor
negl
sbb
out
sbb
and
js
mov
bound
test
daa
pop
insl
push
inc
dec
mov
cmp
mov
mov
push
jns
aad
push
repnz
or
inc
pop
inc
mov
xchg
cwtl
pop
fwait
cmp
xor
mov
dec
pushf
mov
inc
cld
adc
cmpsb
mov
inc
aaa
out
jae
dec
lcall
fisttpll
push
xorb
loope
xor
or
jl
loopne
cmpsb
dec
dec
mov
fidivrs
pop
pop
in
sub
in
ja
mov
sub
xchg
out
jno
cmp
fdivs
xchg
lret
es
jne
ret
hlt
mov
fisttpll
inc
xor
cmc
cmp
jecxz
or
push
mov
js
jmp
or
xchg
sub
sbb
dec
imul
imul
xor
imul
pop
arpl
pop
inc
lahf
popa
mov
movsl
loopne
clc
cmp
int3
sub
stc
mov
cli
mov
xchg
shrl
loopne
mov
jl
sbb
dec
lcall
js
jg
rcrl
mov
inc
pop
inc
subb
pop
sbb
add
scas
fcompl
dec
fists
lcall
cs
mov
rcrl
repnz
lea
divl
fnstenv
sti
fwait
aam
xor
lahf
nop
pop
aas
nop
pop
jge
pop
push
sarb
pop
gs
cli
hlt
flds
addr16
aaa
mov
xor
mov
in
xorb
idivl
enter
rcll
mov
push
xorb
pop
pop
xchg
lcall
xchg
clc
cmp
jp
pushf
xchg
rcrb
add
and
scas
aas
lcall
stc
push
stos
mov
fisubl
pop
cmc
jmp
filds
arpl
testl
sub
jle
out
push
cs
pop
je
mov
clc
jmp
test
xchg
aam
not
mov
push
hlt
sbb
jae
ficompl
mov
sti
pop
mov
cli
sub
outsl
mov
sbb
and
sbb
fwait
xchg
mov
clc
mov
out
cmpsl
sbb
mov
cmpb
rclb
xchg
push
sub
loop
mov
sahf
mov
mov
sbb
push
mov
jo
xor
add
or
sub
xchg
xchg
sbb
cld
stc
insb
fisubl
cltd
and
jns
add
push
lret
xor
cmpsb
repnz
aam
adc
pop
leave
loopne
rcrl
xchg
pop
jg
cmpsl
pop
std
ret
pop
into
lock
aas
aas
faddp
in
inc
pushf
sahf
or
pop
xor
push
mov
mov
and
jg
divl
sbb
lret
mov
cwtl
mov
cli
xor
std
xchg
sti
out
lods
lods
xchg
icebp
aas
jecxz
dec
push
xchg
pop
jmp
cs
adc
fwait
pop
outsb
movsb
xchg
lock
mov
mov
sub
test
adc
daa
pop
sub
fsubrs
cmpsb
pop
cmp
cli
jb
jmp
pop
and
addr16
cmp
sub
pop
push
push
loopne
mov
aad
pop
xchg
fadd
js
xchg
and
mov
mov
insb
jne
xchg
pop
push
sahf
lds
adc
adc
jge
sbb
inc
leave
sbb
repnz
add
cli
adc
xor
sti
jnp
int3
lods
cmp
mov
mov
cli
push
inc
popa
fildl
xor
add
pushf
int3
inc
jp
or
push
cmp
cmpsb
xlat
cmpb
xchg
loop
or
movl
inc
enter
loope
mov
arpl
and
fsub
mov
inc
pop
movsb
adc
scas
sti
pop
gs
dec
cltd
repz
popa
cmpsl
in
pop
test
dec
pop
cs
mov
add
cmp
pop
push
pop
jp
sbb
add
mov
mov
subl
in
mov
bound
push
fistpll
dec
mov
scas
xlat
imul
or
testb
loop
dec
rolb
sub
jbe
stc
stc
aad
jl
fdivl
cmp
mov
jp
jecxz
dec
jle
ret
test
sarl
ds
test
cs
in
mov
insl
sbb
sar
xor
and
scas
add
lret
cmp
cmp
mov
xchg
adc
or
or
jle,pn
sbb
aaa
jo
jp
shrl
mov
mov
dec
adc
fsubr
push
out
ret
jno
sbb
xchg
cmp
loop
add
arpl
daa
mov
jmp
inc
cld
mov
jnp
cmp
pop
sub
daa
mov
dec
cli
mov
mov
xchg
ficoms
inc
adc
jns
push
int
push
shlb
int
sbb
out
lods
lds
pop
jg
jp
fsubp
cmpsb
mov
lret
add
sbb
mov
cmp
push
pusha
push
mov
xlat
push
sbbb
mov
sti
xor
std
adc
stos
mov
jp
fnsave
inc
jle
dec
dec
push
pop
xchg
lock
or
mov
repz
xor
sbb
xor
lahf
and
xlat
push
cwtl
push
jno
push
int3
cwtl
mov
mov
pop
aam
fcomp
mov
clc
sbb
jp
jb
arpl
mov
inc
adc
shrl
test
fbstp
push
mov
int
jl
addr16
fmull
sub
push
test
mov
div
lea
lea
in
popf
cmpsl
lahf
cli
adc
mov
sbb
jge
or
dec
jb
push
jecxz
cmp
fists
outsl
pop
loop
mov
cmc
xchg
and
dec
jecxz
jg
adc
pop
cmp
cmpsb
jne
sbb
fdivrs
lock
sub
inc
sbb
in
mov
pop
mov
mov
mov
shll
push
mov
sbb
adcl
mov
ja
out
out
mov
sti
out
inc
rcrb
sti
out
or
cmc
xor
aas
mov
xchg
mov
jns
mov
push
pop
cmp
mov
inc
fidivrs
mov
push
inc
loope
or
imul
cmp
enter
aad
in
mov
cwtl
faddl
das
mov
jmp
ds
insl
mov
int3
and
and
pop
cmp
cmc
test
sbb
hlt
cmp
testb
pop
clc
sbb
pop
cmc
pop
test
into
ljmp
sbb
mov
cmp
add
sbb
mov
mov
xchg
add
sub
mov
cld
cmp
orl
jno
cli
je
insb
pop
adc
scas
sti
inc
sbb
mov
adcb
mov
fisttpll
inc
or
push
mov
xchg
shl
push
cmp
divb
aaa
mov
cmp
mov
lock
pop
mov
in
sbb
sub
adcl
outsl
mov
push
aam
scas
xchg
mov
mov
std
sbb
push
lret
adc
movb
add
fists
sti
adc
jns
jg
inc
jmp
sahf
pushl
sahf
or
in
adcb
scas
enter
push
fdivr
aam
xchg
xor
xchg
xchg
mov
pop
lret
cli
xchg
mov
pushf
jo
fbld
xor
movsb
sti
and
dec
pop
pop
lds
pop
and
adc
or
dec
jp
and
daa
mov
enter
repnz
cli
cwtl
out
aam
aas
adc
and
ret
into
sbb
mov
adc
sbbl
cmp
or
sub
pop
scas
dec
ss
xchg
mov
lds
pop
loop
jno
adc
fwait
inc
pushf
push
jl
mov
pop
pop
fisttps
cmpb
js
or
dec
roll
fadd
push
vsubps
dec
adc
aaa
dec
adc
jnp
and
ss
mov
stos
dec
mov
mov
aad
add
jnp
push
addr16
je
push
add
stc
pop
pop
or
paddusb
xor
sahf
xchg
in
sbbl
adc
pop
or
sub
ljmp
adc
mov
stc
push
lods
leave
cmp
scas
mov
repz
adc
in
cld
push
mov
cmp
repz
xor
pop
shr
dec
push
mov
fldt
fcmove
cmp
push
dec
out
test
xor
ds
sbb
in
push
xor
or
fnstenv
jmp
cmp
pop
cmp
lret
hlt
lea
cld
pop
stos
add
jnp
aad
xor
test
and
and
jg
ds
test
loope
fcmovnu
jb
sbb
clc
cmpsb
cwtl
sbb
movsl
faddl
dec
int
ja
into
jl
mov
jbe
daa
mov
fcompl
add
aam
fcoml
pop
mov
das
aad
roll
xchg
jmp
call
add
nop
lahf
fsubs
mov
sub
sub
or
xchg
jnp
pop
cld
movsl
adc
test
icebp
jg
movsb
mov
inc
popf
in
decl
lret
and
pusha
dec
jle
xchg
cmp
movsb
adc
or
jbe
or
or
pushf
push
inc
pop
jne
cmp
orl
add
outsl
vpmulhuw
jae
mov
and
push
nop
inc
cltd
xor
in
jmp
add
xor
push
inc
lahf
sbb
aad
xor
sub
and
cmp
stos
sarl
jp
xchg
pop
mov
aad
pop
xchg
mov
ds
push
decb
sub
out
fidivrl
cs
in
jge
xor
aas
sbb
or
jle
fs
adc
push
fcompl
cmp
andl
pop
mov
ja
sbb
xor
cmp
sub
scas
jmp
xchg
adc
push
rcr
adc
adcb
out
jno
int
pop
ret
out
jp
iret
pop
xchg
sbb
push
dec
cmp
and
lods
mov
xchg
and
mov
decl
sub
xchg
mov
pushf
dec
cmp
adc
fwait
pop
xchg
ret
jns
dec
mov
lret
add
daa
inc
mov
bound
mov
cltd
pop
stc
pop
xor
xor
test
cmpsb
xor
push
jmp
adc
and
jo
xlat
arpl
aaa
fwait
inc
adcl
mov
mov
notb
sahf
and
add
jg
bswap
in
xor
mov
lds
sbb
fmuls
lret
cmc
mov
adc
sahf
fistps
push
fisttpll
test
out
cli
dec
push
loope
jo
pop
inc
popf
push
test
inc
push
mov
arpl
fisubl
or
push
ja
call
jb
mov
outsl
jg
fcomps
cld
jecxz
push
dec
ret
adc
lret
mov
pop
divps
mov
mov
clc
pop
rcrl
jg
sbb
jne
add
lahf
cmpsl
sbb
xor
sti
enter
lret
inc
jp
notb
dec
sbb
je
sbb
cwtl
push
pop
dec
imul
imul
inc
stc
add
fnsave
add
ja
lret
shrl
iret
aaa
add
or
pushf
shlb
jle
sub
xchg
mov
push
dec
cwtl
xlat
ja
mov
gs
mov
pop
and
fadds
cltd
in
outsb
in
stos
pop
nop
clc
fsub
xor
dec
int3
dec
icebp
adc
fidivrl
xor
mov
into
scas
jnp
lret
cmpsb
lods
mov
loopne
dec
faddl
jns
sbb
adc
xchg
mov
jns
loopne
cmpsl
bound
pushfw
mov
roll
xchg
ljmp
sbb
xorb
repnz
sbb
cmp
jg
dec
pop
push
sti
bound
sub
add
in
cmp
mov
ds
sub
mull
sbb
leave
mov
and
mov
mov
pop
sahf
add
jno
xlat
jnp
orl
loop
jp
cwtl
mov
mov
sbbl
xor
dec
mov
cmpb
clc
sbb
push
mov
adc
stos
sti
mov
cmp
inc
push
aam
ret
cmc
in
sarl
pushf
lahf
daa
fadds
repz
subb
dec
sbbl
add
push
push
into
cwtl
mov
or
and
add
mov
and
push
mov
lcall
push
add
adc
lds
or
pop
ret
aaa
dec
sub
pop
shll
jge
push
xchg
sbb
mov
dec
pop
sub
mov
test
das
pop
mov
and
pushl
aad
ja
cmp
std
dec
mov
sbb
push
cwtl
push
mull
ret
adc
ret
ds
lcall
sbb
mov
and
faddl
cmp
scas
scas
xlat
dec
pop
lds
push
out
pop
pop
in
mov
add
dec
repz
pop
add
pop
stc
leave
rol
outsb
push
mov
dec
xlat
aas
mov
mov
push
jnp
int3
cmpsl
xor
out
add
fld
inc
push
mov
mov
mov
flds
and
imul
xchg
aas
jg
aas
fiaddl
fs
adc
aas
lahf
sbb
xor
cwtl
inc
xor
mov
xchg
mov
cli
cmp
cltd
cwtl
inc
aam
cmp
int3
pushf
lock
inc
xchg
jp
xchg
mov
les
pop
or
jbe
addl
mov
dec
push
mov
orl
pushf
inc
js
mov
imul
mov
shrb
inc
popf
xchg
and
and
fwait
pushf
cmp
mov
sbb
fiadds
in
fadd
popl
stos
push
and
cwtl
add
sbb
jp
pop
dec
lahf
mov
pushf
mov
push
cwtl
mov
jp
dec
idivl
out
jge
or
pop
cmc
adc
mov
sahf
push
xchg
sti
sub
rorb
mov
jmp
and
sub
ror
inc
cmpsb
sti
outsb
sahf
out
inc
or
call
pop
sarb
or
mov
fsubrl
fstpl
out
aaa
lcall
push
sub
lret
mov
sub
movsb
jle
cmpsl
cld
std
sbbl
xor
int
push
inc
cs
inc
mov
cmpl
mov
xchg
popf
xchg
lea
cmp
fmul
popa
int3
aas
ds
fcompl
pop
mov
cmp
sbb
pop
test
pop
push
je
sub
bnd
outsl
or
jno
icebp
cmpb
jo
adc
push
lcall
pop
cwtl
insb
sbb
cmc
pop
lahf
outsl
jge
pop
push
ss
jg
sti
ja
popf
sbb
xchg
adc
iret
ror
ffreep
sbb
cs
addr16
fistpll
push
xchg
test
jle
ss
sub
mov
lahf
dec
xor
add
cltd
fists
enter
jae
xor
int3
ds
repz
scas
outsl
and
add
outsb
cmp
mov
std
cwtl
jbe
mov
cli
faddl
cmc
and
cmp
addb
fisttps
mov
add
push
sbb
scas
and
enter
fmul
das
pop
ljmp
pusha
pop
divb
cmp
stc
or
pop
pop
or
into
in
xchg
jl
addr16
leave
rol
test
fs
imul
lahf
mov
and
inc
pop
mov
jne
cmc
ret
cli
cmc
scas
push
xor
lahf
ljmp
dec
add
nop
int
pop
jl
or
test
dec
pop
xchg
outsl
out
cwtl
in
out
inc
xor
hlt
ljmp
cmp
or
jl
sub
cmpsb
cmp
ret
sub
sub
cli
ret
pop
inc
test
jmp
iret
gs
mov
sbb
lret
pop
adc
hlt
and
fistl
or
and
movsl
mov
sbb
insb
xchg
pop
push
loope
lock
addb
pusha
daa
sbb
mov
adc
jmp
xor
rorl
xchg
xor
cmp
inc
mov
mov
in
jno
lcall
and
sbbl
fdivrs
out
fdivr
in
push
push
ds
jle
fsubrs
pop
push
mov
mov
mov
xchg
out
in
fdivrs
push
add
xchg
ret
add
xor
loope
mov
or
dec
cmp
fmuls
mov
and
test
xchg
das
push
sbbl
addr16
aas
bound
adc
mov
std
out
stos
repz
es
pop
out
pop
gs
push
fisubs
rorl
std
nop
sti
push
ds
aam
pop
mov
xchg
inc
dec
fmull
ja
sub
jns
and
addr16
into
push
movsl
pop
pop
mov
data16
pushf
cli
pop
push
mov
inc
cmp
ja
jmp
mov
mov
push
push
jne
mov
push
cmp
xor
out
test
aas
and
cmpsb
cld
loop
mov
loop
or
mov
lcall
push
push
adcb
xchg
andl
stos
jbe
fdivl
lods
int
push
ret
cs
mov
sub
sub
out
in
outsl
lock
fidivrl
mov
adc
push
pop
in
cmc
mov
sbb
lret
mov
push
mov
fwait
imul
xorb
and
cmpsb
cmp
shl
fisttpl
fidivrs
mov
mov
mov
sbb
testb
fbld
out
rorl
bound
sbb
out
test
inc
ffree
jge
xor
lds
cwtl
dec
jle
stos
fcoms
jge
adc
or
repz
pop
fdivrs
or
cmpl
jg
xchg
jp
pushf
mov
pop
sub
push
sub
jg
xchg
popf
enter
inc
mov
jo
fldl
aaa
cld
push
stc
addr16
mull
test
dec
push
ds
dec
dec
pop
in
stos
jno
mov
pop
or
aad
fmul
icebp
jo
mov
in
or
mov
aas
jae
pop
stos
sbb
mov
fdiv
imul
cwtl
push
fstpt
cmp
sbb
xchg
lea
add
jne
gs
cwtl
cmp
or
mov
lret
stc
jl
ret
arpl
movsl
mov
or
cmp
add
and
sbb
pushf
je
pop
aas
inc
test
adc
lods
fdivrl
adc
and
test
and
jecxz
ror
jae
andl
mov
fcompl
ds
xor
jecxz
ljmp
dec
arpl
jmp
repz
xchg
sti
insl
cs
out
pop
sub
icebp
pop
ret
clc
adc
stc
sbb
mov
jmp
push
sar
pusha
cmp
pop
dec
or
and
roll
enter
clc
pop
ret
incl
cmp
push
jge
into
mov
hlt
lahf
add
inc
int3
xchg
cmp
push
cmp
decl
xor
push
sbb
push
cmp
cltd
sbb
cmpsb
adc
inc
pop
sahf
push
jmp
jbe
push
inc
pop
repz
mov
mov
daa
fcoml
into
ljmp
in
fstl
dec
icebp
xchg
movl
adc
xchg
ror
and
fdivs
jmp
aas
sub
dec
push
and
and
out
jp
scas
xchg
scas
mov
xchg
xor
cli
enter
ret
jne
xor
mov
add
repz
emms
cmp
int3
cltd
cmc
xor
popf
sbb
mov
push
ds
sub
int
roll
pushf
and
jmp
or
sub
stos
xchg
inc
adc
jp
fs
loopne
das
mov
lret
push
repnz
je
push
xchg
mov
or
lea
jmp
dec
out
mov
push
pushf
push
ficoml
cmp
ret
mov
mov
imul
xchg
jnp
or
btsl
addr16
call
in
pop
mov
into
jl
rcll
mov
xchg
cmpsl
sbb
sbb
and
test
out
inc
cmpl
insb
jmp
aad
cmp
or
push
pusha
cli
add
popf
ret
cmc
imul
imul
test
sub
cld
xor
inc
jae
cmp
insb
sub
fsubp
xchg
insl
dec
fwait
cwtl
xchg
push
icebp
mov
mov
add
out
cmpsl
mov
cli
push
xor
mov
adc
rcr
dec
mov
les
push
jle
mov
add
xor
push
jge
out
adc
in
cmp
insl
pop
mov
adc
mov
sub
push
mov
je
leave
pop
and
xchg
rolb
mov
mov
scas
stos
sti
fdivrl
test
mov
add
mov
mov
jns
test
movsl
pop
lahf
stos
pop
push
mov
rclb
xchg
xchg
leave
leave
mov
mov
xor
fsubs
mov
cmp
cli
sbb
pop
add
stc
jl
pop
outsl
xor
lock
sbb
aas
aam
push
adc
pop
insl
pop
lock
fwait
into
cmp
pop
jb
cs
fxch
stos
jmp
adc
fsubrs
inc
xchg
aaa
pop
ret
sbb
or
test
je
lods
xor
cwtl
test
or
dec
test
xchg
fidivs
ret
jmp
pop
jle
inc
sbb
mov
xor
popf
add
mov
pop
adc
clc
into
fdivl
pop
fisttpll
lods
pop
mov
cld
pushf
fnstcw
int
ds
xchg
xchg
xor
or
cli
shll
ss
test
movsb
jle
mov
mov
fcomps
mov
inc
and
cmpsb
xchg
adc
cmp
dec
inc
mov
and
or
add
out
insb
lahf
out
fisttps
lahf
mov
divl
movsb
sahf
bnd
fildl
cmc
mov
in
fldl
mov
xor
sbbb
flds
xchg
movsl
aas
xchg
cmp
mov
dec
xchg
cld
into
push
call
dec
jle
orl
jns
and
mov
inc
dec
adc
sbb
jmp
cltd
xchg
dec
xor
jp
movsl
or
pop
mov
leave
mov
ds
inc
les
insb
mov
jbe
stos
adc
mov
dec
ret
fisttpll
sar
pop
sbbb
cmpsb
xor
sub
ret
dec
jns
rcrl
fwait
sbb
sbb
mov
leave
and
sub
sub
xor
fcoms
loope
movsl
push
jo
sbb
dec
in
les
xor
add
sub
aas
in
and
cwtl
mov
or
push
aaa
ret
mov
and
sub
pop
mov
pop
mov
xchg
mov
mov
dec
or
pop
jge
dec
mov
sbbb
inc
rcrb
mov
mov
xchg
cmp
fisttpl
add
xchg
lea
adc
mov
mov
cltd
fsubs
jb
sti
iret
sub
negb
pop
outsb
daa
lods
mov
xchg
nop
clc
pop
std
gs
jno
sti
loopne
sbbl
aas
jno
inc
push
jp
add
lods
mov
mov
leave
add
cld
xchg
mov
rcrb
ficompl
cs
das
les
dec
jge
xor
imul
out
in
jmp
inc
cmpsl
shl
scas
pop
arpl
lods
xchg
xchg
pop
subl
jl
loope
std
jb
aaa
es
and
jp
fcmovbe
lods
out
add
repnz
mov
cmp
mov
fimuls
xchg
cwtl
sub
out
sub
jl
mov
aam
fwait
cmp
mov
jle
popa
pop
lcall
gs
sbb
imul
dec
lods
out
std
fmul
lret
es
pop
mov
sub
and
push
mov
out
leave
nop
ja
mov
mov
ljmpw
arpl
neg
dec
cs
or
pushf
push
mov
shl
or
and
std
mov
mov
aad
adcl
popa
ret
cwtl
mov
sbb
cld
pop
inc
filds
sbb
inc
les
sbb
jo
cmp
pusha
fistpl
xor
outsl
pop
or
cli
pop
mov
pmaddwd
mov
daa
add
int
push
inc
rorl
pop
mov
sarl
jg
xchg
mov
sbb
adc
sar
idiv
cmc
jle
xor
scas
jo
xchg
cmpsl
jmp
push
or
inc
cld
orl
xor
stos
push
xchg
xor
fbld
fwait
mov
or
movsl
jl
es
cmp
jno
fwait
mov
dec
outsl
xchg
movsb
aas
xchg
xchg
and
xorb
pushf
int3
mov
out
sbb
jmp
push
sahf
leave
sbb
fstpl
and
out
fxch
loope
xchg
fsubrl
sbb
data16
lock
cmp
add
and
outsl
cwtl
cmp
aad
push
enter
pop
pminsw
cmp
or
xchg
mov
adc
add
stos
xchg
in
popa
mov
inc
jnp
xor
cwtl
lcall
inc
mov
repnz
sti
cld
notl
lods
cwtl
cwtl
jle
jne
mov
mov
inc
adc
push
mov
dec
add
adc
in
mov
xor
add
adc
xchg
test
xor
or
sbbb
or
mov
mov
mov
addb
fcom
mov
adc
or
aaa
shr
sbb
aas
aad
cwtl
aam
out
or
cmpsb
mov
jg
pop
pop
jbe
iret
insb
mov
leave
filds
sbb
subl
mov
and
mov
mov
pushf
cmp
xchg
and
das
jae
adc
sub
xchg
mov
sbbl
daa
sbb
adc
les
adc
push
fiaddl
xorl
xor
fst
fsubrl
lret
out
mov
mov
std
addl
sbb
lods
adc
daa
or
xchg
sub
xor
cmp
add
sub
fmul
pop
std
lods
sbb
lret
lcall
rcrl
rorl
pop
sarb
repnz
sub
push
jle
xchg
sarb
loope
sbb
movsb
mov
cmp
adc
add
sbb
add
inc
jbe
xchg
pop
mov
stc
pushl
sti
pop
int3
and
and
in
pop
lods
xchg
out
stos
pop
lods
out
fmulp
and
cmp
add
mov
jp
inc
in
cmc
mov
pop
xchg
xlat
mov
fldl
mov
das
fmull
jg
mov
add
mov
push
into
repz
push
fdivl
cmp
inc
dec
cli
push
xor
hlt
jmp
jno
inc
cmp
mov
cmp
cmpsl
aas
in
mov
push
cli
lds
or
pop
arpl
in
jl
xchg
fistps
aam
clc
cmp
ret
push
mov
fistl
mov
jae
test
sub
cld
incl
cmp
mov
cmpsb
and
push
je
das
leave
ja
repnz
add
pop
push
mov
les
sbb
push
inc
cmp
test
push
and
push
negl
ret
push
adc
push
jge
fs
pop
add
pop
pop
shlb
or
lods
ret
lahf
pushf
pusha
idivb
into
cmp
lahf
addb
dec
push
in
sbbb
mov
inc
mov
ret
mov
pop
btr
lahf
lods
ljmp
mov
mov
sbb
out
shl
sbb
clc
and
sbb
pop
jmp
xchg
mov
pop
pop
ds
xchg
jge
test
subb
mov
jo
test
subl
sbb
mov
or
mov
xchg
mov
lea
cmp
push
jbe
test
xor
or
sbb
push
stos
dec
pushf
in
testb
jmp
inc
jnp
std
pushf
je
pop
aad
cmp
mov
out
lock
gs
pop
jo
push
fcomps
test
hlt
pop
mov
ficompl
mov
je
jle
jge
stc
and
add
mov
adc
sbb
inc
enter
enter
adc
sub
xor
mov
cli
ds
xchg
sbb
push
push
add
sbb
ss
fwait
pop
pop
movsl
sbb
shl
aam
pop
push
or
call
add
sbb
stos
bound
sub
mov
inc
cmp
and
out
jmp
and
leave
mov
sbbb
pop
pop
jl
mov
xchg
pop
aas
and
sub
or
popf
inc
sbb
ret
mov
pop
mov
push
xchg
sub
cmp
movsb
cmpsb
mov
ss
stc
loopne
imul
cmp
paddsw
adc
sub
sbbb
sbb
push
int
fildl
xorb
insb
sub
sti
call
sbb
or
xchg
xchg
xchg
mov
cmp
and
repz
pop
int3
pushf
mov
ds
mov
and
push
jae
fisubrl
in
sub
in
push
je
outsl
mov
imul
sbb
xchg
jnp
inc
mov
sbb
push
out
movsb
imul
les
incl
fs
adc
inc
pop
mov
in
jo
aas
jp
push
push
iret
inc
jle
cmp
cmp
cltd
es
std
push
push
rcrb
xchg
fdivl
and
xchg
push
int3
mov
jle
loop
and
lock
clc
popf
and
sbb
fwait
lret
pop
add
push
xor
fdivl
or
cmp
icebp
shl
fcompl
lds
and
xchg
cmp
mov
out
sbb
mov
jle
insb
mov
xor
pop
test
pop
jne
idivb
xor
fisubs
jg
jg
stc
push
test
out
cs
in
xor
xchg
test
ret
ret
pop
pop
scas
jne
lret
sahf
fdiv
sahf
int
and
or
mov
aaa
mov
mov
fisubrs
pop
rcr
mov
adc
ret
aas
enter
sti
mov
sbb
inc
cli
movsl
aad
adc
push
xchg
push
jmp
or
jmp
mov
jecxz
pop
scas
jnp
les
negb
aad
js
data16
loope
inc
add
add
pusha
out
and
out
jae
aas
popa
lods
jg
push
in
dec
in
popa
ds
cs
mov
dec
mov
jecxz
mov
push
lret
fbld
inc
test
mov
jmp
pop
mov
push
rolb
sub
push
cmp
xchg
mov
pop
mov
ret
mov
in
jb
sbb
mov
ljmp
inc
leave
sub
cli
push
cmp
mov
rclb
pop
push
jle
in
dec
je
aas
das
mov
mov
push
xor
lock
cld
fwait
mov
mov
movq
adc
dec
sbb
scas
sub
pop
call
xor
repz
out
xchg
xchg
fsubr
fsubs
push
jo
int
jae
out
fmull
dec
sbb
out
jmp
add
or
xor
adc
out
cwtl
sub
push
pop
sbb
lods
adc
cmpb
ss
push
mov
mov
loop
mov
ficomps
test
mov
or
les
sahf
and
lret
aaa
xchg
sti
imul
incl
cltd
mov
js
gs
fiaddl
call
cmp
lea
mov
xchg
jne
sbb
mov
and
xor
imul
inc
js
add
loopne
push
mov
and
into
sahf
cmp
fdivr
lret
aam
xchg
dec
lds
clc
jnp
jbe
mov
loopne
jl
sbb
arpl
sbbb
and
sbb
xchg
sti
or
call
aas
xor
pop
fsubr
push
leave
push
pop
shufps
inc
jnp
stos
xchg
jge
cmpsl
cmp
adcl
movsb
adc
adc
cld
sbb
cmpb
cmp
sbb
mov
jg
dec
push
dec
sbb
cmp
aas
push
fimull
mov
xlat
subl
into
lea
in
cmpsb
sbb
mov
xchg
jl
fcoms
cmp
jns
in
stc
sbb
into
fstl
fldl
rorb
mov
fwait
jge
mov
jne
or
pop
nop
popf
fsubl
or
fstpl
shlb
nop
cmp
pop
in
add
cmp
test
sub
and
test
stos
bound
sbbl
mov
imul
je
xchg
adc
cmpsl
xchg
dec
pushf
fistl
or
cltd
jbe
sub
add
sti
mov
mov
pop
mov
adc
push
and
repnz
loop
pop
sbb
mulb
ja
mov
lcall
aad
mov
pusha
cltd
cwtl
sti
sarl
in
mov
mov
rclb
fisubs
shrl
lea
iret
pushf
xor
and
fisubl
pop
push
mov
xchg
fdivl
ss
rorb
and
push
ds
push
dec
mov
lcall
cli
scas
ja
pop
jb
fcom
cmp
sub
mov
jp
mov
addb
sub
das
pop
loopne
inc
adc
flds
mov
or
mov
cmp
jp
aad
sti
data16
mov
je
sbb
jo
cmpl
dec
push
cmp
adc
movsl
pop
jo
stos
xlat
sbbl
sbb
jl
adc
subl
fwait
rclb
jg
into
cmpb
mov
idivb
aaa
xchg
xchg
sbb
mov
ficoml
mov
add
xchg
and
pop
mov
cmp
sbb
mov
xor
not
mov
mov
ss
jle
inc
shrl
dec
push
pop
mov
cmp
cs
xor
xor
leave
fidivrl
mov
xchg
outsl
and
das
fildl
sahf
jnp
cwtl
adc
out
add
sub
sub
lahf
jecxz
cmpsl
sbb
jp
xlat
add
imul
push
sti
mov
xor
nop
cld
mov
sahf
sarl
mov
and
jl
pop
addr16
dec
pop
out
cwtl
lcall
sbbb
cwtl
adc
pop
xchg
cwtl
fsubrs
xor
or
out
and
or
sbb
in
jo
mov
sbb
pop
mov
push
sbb
mov
jae
daa
cwtl
pushf
sub
loop
jmp
push
mov
rcll
arpl
sbb
or
xchg
jg
pop
add
sti
or
cmp
pop
ret
div
imulb
gs
xchg
and
cmp
mov
test
and
int
jecxz
sub
jo
sti
xchg
pop
out
sub
dec
jmp
add
mov
cmc
call
mov
sbb
mov
call
push
outsl
lcall
jg
in
dec
push
jp
push
xor
add
fisttpll
mov
pop
pop
mov
jecxz
mov
test
test
scas
and
js
mov
test
cmpl
inc
sarb
push
mov
shlb
mov
dec
push
outsl
arpl
sbb
movsl
xor
pop
loope
xchg
js
lea
jne
push
sub
cmp
sub
and
push
pushf
leave
mov
sub
adc
mov
push
aas
add
push
jp
mov
mov
mov
cmp
aam
pop
inc
xor
push
cwtl
outsl
je
mov
xor
fstps
ljmp
pop
mov
jg
pop
rorl
fcoml
adc
pop
addr16
jnp
aaa
push
xor
fwait
cs
nop
pop
jle
jo
push
sub
mov
mov
pop
mov
je
lea
sbb
xchg
pop
mov
or
inc
sbbl
cmp
std
lods
or
mov
mov
shl
std
into
inc
out
mov
or
outsl
xchg
sub
in
outsb
jo
or
jecxz
cwtl
fwait
loopne
mov
outsl
js
testb
popf
sbb
je
and
adc
jmp
in
pop
in
push
xor
jb
inc
jne
imul
hlt
stos
int3
enter
mov
das
dec
lods
scas
cmp
inc
sahf
push
sbb
cs
fsubr
test
test
sbb
or
out
mov
ds
push
jae
jne
inc
std
sbb
nop
push
inc
pop
xchg
out
push
mov
sub
mov
ds
pop
jle
mov
push
dec
out
sub
add
fdivr
js
dec
jne
adc
pop
or
leave
mov
imul
loopne
ljmp
into
mov
call
sbb
rol
mov
xchg
lock
sbb
lods
call
aam
push
leave
push
subl
int3
jae
adc
add
in
mov
mov
dec
cld
push
lock
push
ss
pop
pop
daa
sbb
lret
cmp
cmp
mov
std
push
or
jp
xor
daa
lds
inc
or
push
cli
fidivs
fmulp
inc
popa
jp
test
mov
xchg
mov
cmp
test
xor
mov
insl
outsl
daa
jle
add
dec
jae
je
es
aaa
cmp
push
std
fwait
mov
cmc
jmp
js
mov
mov
out
aas
addr16
sbb
and
fsubrl
dec
testb
mov
pop
sub
pop
stos
mov
jnp
jnp
cltd
scas
into
push
push
ret
lea
adc
cmpsb
out
pop
cs
pop
mov
jnp
call
push
jge
mov
xchg
pop
inc
loopne
push
test
add
mov
mov
dec
shl
orl
arpl
mov
xchg
mov
add
in
pop
mov
inc
cwtl
xchg
mov
cmp
adcb
mov
mov
loope
pushf
pushl
cmp
daa
sbb
addr16
push
test
aas
insl
and
idivb
scas
popa
ss
fyl2xp1
fadds
mov
mov
sahf
lock
cltd
sti
sbb
sahf
pop
cltd
movsl
in
in
insl
adc
sbb
cmp
out
inc
xor
mov
cmp
and
mov
ret
into
fcoml
adc
je,pn
jnp
push
mov
jns
test
lods
cmp
jg
dec
sbb
leave
cmp
rcrb
data16
ds
xor
outsb
mov
jb
push
mov
push
stc
mov
cwtl
push
xlat
popf
mov
shll
sub
ret
addb
lds
and
icebp
aas
loopne
into
sarb
pop
cs
sbb
mov
mov
rcrb
fildl
movsl
jne
ret
imul
insb
call
rorb
xor
inc
fwait
daa
mov
lret
ret
fisttps
mov
insb
inc
sbb
dec
sarb
aad
xor
xor
xor
cmpsb
cmp
mov
mov
inc
arpl
dec
pop
out
cmp
lahf
jp
test
aam
gs
sti
jns
mov
push
cld
pop
incb
lock
sbb
sbbb
loopne
cmpl
push
and
pop
cmp
fadds
xchg
mov
xchg
push
clc
pop
xchg
inc
mov
cld
cmp
into
inc
stos
les
lcall
cmp
out
sbb
mov
xchg
lcall
imul
jnp
in
dec
enter
sbb
lea
filds
cli
cwtl
mov
push
scas
pushf
mov
stc
or
jmp
bound
fcoml
xchg
lret
scas
loop
adc
xor
adc
cmpsl
pop
mov
sahf
in
mov
cwtl
or
scas
lods
sbb
sub
pushw
and
sbbl
mov
je
subb
insl
sarl
pusha
cmp
fdivl
add
xor
inc
sbb
mov
arpl
es
stos
mov
ljmp
lea
cwtl
push
mov
pop
cltd
mov
push
sbb
fldt
mov
mov
jecxz
mov
sahf
sub
xor
sti
jno
push
mov
loopne
push
cmp
push
and
sub
ds
push
xchg
int
xchg
mov
dec
sti
push
sbb
test
in
sbb
in
and
mov
dec
int3
call
enter
fldcw
nop
adc
add
movsb
or
fs
sbb
sahf
ljmp
sbb
mov
imul
pop
sbb
lahf
mov
mov
out
int3
cs
jbe
xchg
sbb
jp
mov
lods
hlt
mov
fwait
mov
setg
jmp
sarb
xlat
and
adc
ss
into
or
or
lret
nop
shl
jecxz
push
ds
mov
sbb
stc
outsb
loope
lds
out
adc
cmp
mov
in
fstpl
lods
fildl
mov
mov
idiv
aas
jp
jge
jb
inc
inc
loope
addr16
xchg
xor
cwtl
fisubrs
sti
xchg
add
cli
jg
sbb
jb
xchg
sbb
mov
je
les
lea
insl
dec
cmp
inc
pop
xor
and
and
test
fisubs
stos
inc
gs
stc
adc
mov
subl
mov
push
das
push
jl
push
pop
and
or
jne
mov
push
mov
mov
outsl
jp
loopne
pop
mov
mull
mov
add
enter
cld
pushf
cmp
fmul
jbe
jne
iret
sbb
push
mov
insb
sub
push
mov
pop
mov
dec
push
cmp
jb
les
pop
sarl
or
sbb
mov
in
enter
addr16
sti
sarb
cmp
and
fadds
fstps
adc
lcall
cmp
imul
in
or
aad
push
fmul
pushf
dec
and
adc
popf
jge
ljmp
ret
lret
sbb
clc
dec
xlat
cmp
pop
push
nop
enter
xchg
fdivrl
pushf
sub
cmp
outsl
cmpsl
repnz
test
cmp
cmp
ret
pushf
pop
sti
or
enter
in
cs
sub
xor
ss
mov
sub
inc
out
aas
dec
push
inc
cmp
mov
sbb
fs
pop
mov
or
jp
fcoml
add
push
popf
bound
repz
lods
sti
sbb
test
mov
dec
pop
inc
jo
outsl
fmull
push
mov
mov
xchg
or
aaa
jp
add
out
adc
xorb
outsb
fcmovnb
imul
addr16
loope
leave
lea
push
adc
dec
testb
xchg
inc
cmp
ficoms
mov
pop
mov
sarl
pop
in
es
into
in
cwtl
cmp
jmp
mov
cld
leave
cmp
xchg
push
and
inc
aaa
sbb
ror
loop
sbb
pushf
dec
xor
shrl
std
push
jmp
dec
jle
jne
mov
aaa
mov
cmovg
jno
and
int
movsb
mov
xchg
ret
lods
xchg
cmc
test
mov
ret
mov
leave
jge
jecxz
pop
mov
pushl
into
lds
int
mov
pop
test
stos
fistl
dec
push
pop
lcall
inc
cli
dec
push
lcall
mov
fiadds
daa
fimull
pop
dec
notb
jo
fwait
push
jl
lcall
mov
sbb
sahf
aas
sbb
add
jg
lock
sbb
dec
push
call
push
mov
andl
cmp
ret
popa
xchg
cmc
mov
pop
xor
push
pushf
imul
std
dec
cmp
pop
jmp
mov
pop
mov
pop
jae
out
fcoml
leave
or
mov
je
sbb
fcmovu
xchg
sub
movsl
ret
out
aad
cli
sbb
push
lcall
cltd
sbb
ds
stc
daa
in
mov
mov
jg
or
jle
bnd
push
pop
daa
pop
pushf
jg
cmp
shll
and
out
cmc
jp
jnp
push
popa
push
mov
es
xchg
in
xor
test
dec
push
fistpl
xchg
scas
cwtl
sarl
and
fistpl
add
mov
push
dec
jg
int
dec
popf
sahf
cwtl
xor
gs
xor
movsl
leave
repz
sti
jp
sbb
add
fsub
and
lea
xor
sub
in
sbb
jp
mov
jge
or
lahf
pop
cmp
sbb
or
xor
jmp
mov
push
pop
and
xchg
fdivr
adc
add
repz
sbbl
sub
mov
pop
out
test
aad
aaa
cwtl
inc
mov
mov
push
fmull
fdiv
mov
hlt
es
iret
or
pushf
inc
in
pop
jg
fistpll
jmp
orl
jmp
pop
jl
or
and
test
loop
mov
jl
imul
imul
sbb
leave
sub
shll
hlt
inc
int
clc
data16
and
lds
icebp
bound
pop
cli
and
cmp
pop
xchg
repnz
lcall
dec
scas
adc
adc
sbb
sbb
ret
dec
inc
test
adc
push
popa
or
mov
shrb
lret
ret
clc
sahf
stc
negb
pop
push
fsts
push
and
aaa
inc
popa
push
negl
lret
pop
icebp
fadds
lcall
mov
fcomi
rcrl
ljmp
aas
and
push
jne
test
repnz
popa
sbb
js
mov
andl
insb
ds
ds
cmp
dec
sbb
loope
mov
loop
push
add
jp
or
rcrl
add
xchg
lods
fwait
leave
nop
adc
sbb
cmp
inc
sbb
cwtl
inc
mov
jp
pop
popa
sub
sub
adc
xchg
bound
and
sbb
mov
xchg
test
pop
sbb
mov
sti
push
mov
mov
mov
xchg
stos
sti
fsubrl
enter
popf
mov
fwait
dec
pop
int3
push
cmpsl
jbe
imul
fistl
roll
jmp
pop
push
cmp
mov
dec
adc
push
dec
xchg
pop
cs
fcoms
mov
push
xor
loope
fsubp
rep
fistps
fmull
rol
sbb
imul
push
andb
xchg
mov
mov
inc
mov
cmp
mov
adc
push
push
xchg
cltd
leave
and
sahf
fldt
sarl
pop
call
imul
sti
out
outsl
fsubs
int
clc
pop
push
cmpb
add
cmp
cmp
inc
sbb
inc
cmpsl
adc
int3
aas
jp
test
lret
pop
xchg
xor
sbb
xor
jae
leave
movsb
sarl
addr16
cmpsb
mov
shrb
sbb
ret
cli
inc
xor
mov
aas
int
pop
add
scas
sbb
inc
out
and
repz
fsubr
fadd
jae
call
les
jl
mov
xchg
lcall
aas
pushf
jle
pop
fcoms
sub
xorb
dec
or
mov
sbb
or
lea
call
lret
sbb
movsb
xchg
cwtl
jbe
lcall
lahf
loopne
jno
and
sahf
jnp
adc
fwait
cmpsb
mov
sub
sbb
dec
addb
mov
fwait
icebp
inc
or
dec
loope
xchg
stos
add
nop
pusha
rcrb
sbb
add
mov
jne
cli
rcr
testl
sbb
cmp
lods
push
mov
sbbl
mov
push
sub
adc
cmp
and
sub
mov
cmp
aas
les
sub
shll
sub
mov
pop
js
ficoms
jle
or
pop
ret
xchg
insb
into
loope
cmpsb
jle
sahf
test
sub
mov
inc
dec
mov
sub
xchg
sbb
fsubs
aas
jp
fnsave
pop
shlb
or
inc
fidivs
xchg
fildl
aaa
mov
enter
fcomp
outsb
imul
nop
je
js
xchg
push
cltd
in
xlat
fsub
inc
ffreep
adc
aas
sbbb
mov
movsl
sti
insb
dec
jo
movsb
xchg
mov
loopne
sti
es
in
test
sbb
ret
xorb
cmovs
clc
and
insb
cli
jl
mov
mov
pop
lahf
jl
sbb
imul
pop
in
enter
sar
push
dec
shlb
hlt
clc
lea
sub
movsl
ds
andl
cmp
fnstsw
jmp
lea
or
add
fidivrs
lcall
pop
ljmp
test
xor
xor
xchg
pop
and
scas
push
jns
cmp
loop
sbb
inc
jle
jmp
mov
jecxz
cli
in
sub
sbb
roll
cmp
sbb
dec
sub
test
sub
jb
popa
or
pop
cli
adc
push
push
call
sbb
mov
out
std
dec
insl
jne
push
sub
cltd
sbb
sbb
rep
mov
pop
cli
stc
pop
add
dec
aas
sti
scas
pop
pushf
lods
mov
cmpsb
jge
jg
push
adc
in
and
jmp
mov
mov
lret
hlt
adc
adc
cltd
sub
scas
jg
shll
in
jns
cmp
icebp
outsl
xchg
lea
xor
cli
xor
mov
mov
add
test
pop
push
dec
aas
add
out
in
neg
adc
std
jbe
aas
mov
icebp
fildll
nop
cwtl
fisubrl
loop
mov
sbb
scas
sbbl
mov
out
xchg
fidivl
iret
and
repnz
fadd
inc
mov
sbb
add
inc
dec
jp
dec
int3
popf
pusha
sahf
aaa
nop
jl
cld
mov
xchg
or
adc
sbb
je
pushf
mov
xchg
int3
pop
mov
fs
movsb
mov
mov
mov
xchg
push
jg
fcoml
sub
adc
mov
jnp
dec
fnstsw
push
mov
andb
jnp
or
sub
cmpsl
dec
mov
stos
xchg
lods
inc
insb
cli
ss
mov
add
push
rcll
cmp
hlt
xor
xor
cmpsl
mov
leave
enter
mov
movsb
mov
mov
sub
stos
or
add
inc
fadds
fsub
mov
sbb
popf
sti
lcall
aam
out
cmc
cwtl
sahf
mov
testb
mov
jl
pop
cmp
xchg
mov
mov
cmp
mov
and
mov
add
out
pop
mov
decl
mov
sti
cmp
mov
jb
sbb
pop
cs
in
push
xchg
jmp
sahf
sbbl
sbb
lea
lea
inc
test
add
mov
ret
sbb
fldenv
aas
icebp
les
in
dec
stos
jbe
fildl
and
outsl
dec
sub
sbb
mov
addl
fldt
xor
push
fcomps
subl
cli
jge
and
mov
lret
sub
push
stc
lock
inc
rclb
pushf
cmp
pop
mov
fcoml
pop
jns
inc
jnp
cs
inc
mov
cmp
stos
mov
jp
arpl
mov
cmp
pushf
imul
jl
add
mov
in
xchg
insl
mov
lcall
and
in
jg
stos
jmp
outsl
hlt
out
mov
add
dec
and
leave
cmpsl
cld
add
pop
popf
js
xchg
pop
stos
sbb
add
lods
ret
jo
lret
add
lock
leave
jg
pop
and
imul
stos
push
cmp
out
les
push
pop
mov
fstpt
in
dec
pop
mov
push
popa
push
sbb
jp
lds
int
repnz
popf
push
mov
mov
stc
mov
shl
sub
xor
cmp
in
mov
xor
rol
test
mov
dec
sbb
inc
pop
dec
push
pop
lret
mov
popf
push
faddl
aas
aaa
cwtl
jg
jl
leave
arpl
xchg
cltd
jge
test
and
ss
mov
or
inc
cmpsb
and
mov
mov
fwait
sub
pop
dec
pop
adc
sub
call
mov
or
add
mov
cmp
push
xchg
ret
fiadds
sti
sub
scas
fidivrl
sub
or
test
into
mov
mov
mov
jg
xchg
fadds
jns
stos
push
xchg
std
test
jcxz
iret
mov
fcoms
jno
push
lcall
jmp
jp
and
fmul
clc
sbb
ret
stos
fsubrs
dec
out
dec
push
add
imul
lds
lods
cwtl
jmp
xor
daa
adc
xor
fisubl
push
repz
jmp
jl
adc
popf
mov
fwait
hlt
test
je
cmpsb
shr
fdiv
out
jns
sbb
adc
mov
adc
imul
dec
movsb
loope
and
das
push
dec
mov
lret
stc
jge
fisubs
adc
mov
adc
sahf
jmp
fstps
and
fs
fsubr
cli
aam
pop
loop
cs
jb
or
lds
jnp
jle
fsubrl
hlt
shll
push
sub
scas
sti
mov
push
xor
pushf
jecxz
ror
sbb
stos
lods
enter
test
je
jo
out
cwtl
out
loopne
popf
jne
into
push
movsl
pop
cltd
mov
clc
lret
mov
fcoms
mov
pushf
dec
or
int3
jmp
mov
out
add
push
cmp
mov
test
sbb
arpl
or
xchg
mov
ficomps
mov
leave
xbegin
clc
js
rol
js
sub
ficompl
pop
push
sahf
bound
add
ds
lret
inc
sar
mov
data16
inc
jl
mov
jg
jmp
sub
mov
push
cmp
fstps
xlat
mov
xchg
in
mov
sbb
aaa
data16
sbb
cmpsl
mov
add
loope
rcrl
xchg
negb
cli
xchg
ds
dec
out
mov
mov
into
bound
insb
arpl
cmp
mov
out
xchg
pop
cwtl
ret
sahf
out
stos
es
cwtl
mov
aas
in
add
insb
sbb
or
lds
stos
mov
sahf
jno
in
pop
pop
lds
xor
addb
iret
mov
cmp
mov
sbb
jnp
pop
aas
repnz
pop
pop
repz
aas
xlat
leave
pop
mov
sarl
call
cmp
int
js
fxch
out
jecxz
fdivrs
aas
adc
or
sarb
mov
sub
pop
bound
scas
add
into
shl
in
fidivrs
or
xor
shl
cwtl
pop
jae
repnz
clc
xor
ror
xchg
mov
pop
and
xchg
scas
into
cmp
inc
out
mov
aas
xor
mov
mov
into
ljmp
sbb
sbb
jle
inc
sub
xchg
xchg
xor
mov
fildl
fbld
pushf
push
push
and
pushl
jge
dec
imul
dec
data16
arpl
jp
mov
inc
adc
into
inc
or
pushf
sbb
dec
mov
xchg
sar
pop
lcall
xlat
sub
jge
lret
sbb
aad
int
mov
clc
js
fsts
fdivr
fcmovnu
sub
data16
sbb
scas
mov
cld
add
pushf
xchg
cwtl
and
fbld
mov
jne
mov
iret
test
push
lods
cwtl
xorl
xor
cmc
cmp
jo
loope
es
addr16
out
imul
mov
mov
mov
jle
mov
stc
div
repnz
jne
outsb
sbb
jl
add
das
ja
push
mov
jnp
or
jle
movb
test
add
movsb
mov
push
scas
incl
and
mov
loop
inc
mov
pop
push
orl
jbe
mov
jp
out
dec
scas
or
shlb
xchg
sti
stos
mov
mov
aas
xor
pop
push
push
pop
fs
sti
sbb
icebp
rcll
push
je
xor
rolb
dec
cmc
pop
in
int3
and
leave
sbb
dec
das
dec
mov
jp
outsb
icebp
fcomp
dec
mov
vpmacssdqh
mov
jg
or
inc
sahf
pop
pop
inc
jmp
popf
lret
sub
aas
es
inc
push
mov
addr16
test
cmp
pop
scas
aas
jbe
mov
es
cmp
lea
pusha
mov
push
and
mov
pop
mov
xor
adc
daa
pop
pop
je
pop
mov
rcl
ds
ret
jb
mov
aaa
jo
data16
and
scas
loope
data16
in
fidivrs
lahf
lods
stos
test
and
inc
flds
popf
mov
icebp
cmpsb
jb
pushf
sbb
stos
fdivl
lahf
lea
rol
pusha
jno
fadds
inc
shll
sti
or
mov
xor
lods
mov
rcrl
and
rorl
sbbb
cli
pop
sbb
or
outsb
add
push
inc
lret
sbb
cmpsl
sub
ja
ret
je
pop
push
fistpl
cmp
in
sbb
mov
iret
sarb
mov
mov
pop
test
adc
pushf
fwait
stos
ljmp
iret
movsb
mov
or
lds
add
add
int3
cld
outsb
es
fdiv
mov
imul
in
aas
xor
movsl
imul
pop
insl
js
xchg
test
clc
cwtl
cwtl
add
dec
js
nop
mov
sbb
repz
shrd
mov
iret
rcrl
and
or
lds
push
sub
sub
cmp
rcrb
push
sbb
movsb
fldl
hlt
cmp
push
notl
cmc
push
jg
fdiv
lods
clc
mov
adc
fsts
pop
xchg
sub
scas
mov
jp
sbb
mov
movsl
adc
lahf
aaa
cmp
repz
arpl
sbb
sar
aam
mov
inc
inc
mov
test
cwtl
lret
xchg
shrb
cmp
push
xor
decb
and
jo
mov
jmp
ljmp
and
sbb
inc
fidivs
and
scas
jmp
pushf
cltd
pushf
mov
cld
xor
and
inc
ds
into
push
inc
jg
pop
int3
sti
mov
cmp
clc
lret
pop
in
push
lods
cmpsl
mov
adc
fcomps
shr
xchg
int3
adc
sub
mov
lcall
fdivrs
inc
faddl
lret
dec
sti
das
pop
scas
jg
enter
ss
sbb
das
pop
sub
test
xchg
mov
mov
mov
aaa
data16
fiadds
fdivl
imull
and
dec
dec
lret
loope
stc
push
outsl
inc
shlb
push
in
sbb
adc
sub
and
orl
stos
repnz
cmp
int3
inc
popa
push
mov
enter
sahf
xlat
push
xor
aad
or
test
jl
adc
xchg
cmp
jns
push
out
lds
mov
sub
mov
mov
fwait
jg
sbb
mov
stos
jl
pop
lahf
pusha
enter
sahf
addl
cwtl
and
lds
repnz
add
dec
aas
pop
nop
fcmovu
jnp
rcrl
adc
ficoms
and
adc
das
ja
inc
xchg
addr16
movsb
mov
dec
sub
mov
nop
scas
mov
dec
mov
mov
fnstsw
cli
fisttpll
push
jne
idivl
lea
cmp
pusha
lahf
xor
int
stos
imul
faddp
incb
pop
andl
dec
and
mov
mov
mov
dec
mov
nop
cwtl
dec
adc
mov
mov
sbb
xor
sub
jne
mov
into
dec
sub
jg
fistpll
mov
xchg
js
push
jnp
add
lret
sub
decl
popf
aas
out
and
sbb
stos
fs
mov
fwait
pop
sti
cs
filds
adc
push
sbb
fisttps
dec
mov
out
stos
jecxz
ljmp
jmp
imul
fdivrp
lahf
push
mov
in
aad
jno
pushf
mov
and
cld
dec
adc
pop
mov
pop
scas
aad
xchg
inc
sub
loope
and
ret
xlat
or
rcrl
push
testl
lcall
pusha
xor
lea
dec
inc
mov
cwtl
lcall
pop
inc
jo
sub
cmp
dec
rorb
cmpsb
sbb
cmp
ret
jecxz
push
int3
in
mov
inc
mov
pop
or
daa
push
les
cmp
faddl
or
mov
lods
jl
sbb
std
sbb
pusha
jae
or
pop
iret
and
loop
mov
mov
inc
icebp
mov
sbb
out
cmp
repnz
fadds
mov
push
cmpsl
dec
xor
cmpsl
push
cmp
fdivs
xor
inc
xor
xor
add
mov
sbb
aas
cmp
test
mov
fwait
mov
cmp
popa
cmpsb
sbbb
sbb
ss
pop
shrb
in
cwtl
push
stc
shl
mov
xor
adc
mov
fisttps
jg
int
inc
jnp
mov
cmp
fists
mov
or
inc
sbb
jl
mov
xor
mov
pop
stos
repz
inc
shl
xchg
mov
out
pop
rorl
mov
repnz
hlt
fcoms
and
fdiv
nop
or
add
js
test
mov
test
iret
xchg
stos
jg
mov
test
cmp
rcl
les
int3
pusha
call
pushf
inc
popf
mov
push
es
cmpsb
push
rcr
mov
mov
pop
ret
jle
xlat
aaa
dec
lods
xor
mov
gs
out
mov
jle
sti
in
clc
mov
popf
ss
inc
lret
fstpl
add
out
dec
gs
pop
adc
das
fmull
scas
cmpl
out
jmp
push
push
gs
push
cli
data16
adc
leave
roll
subb
fidivrs
push
fiadds
sti
mov
mov
test
loopne
orl
pushf
pop
ret
sub
or
decl
pop
iret
leave
pop
inc
mov
pop
sbb
iret
addr16
mov
jno
adc
sti
or
fnstsw
push
fld
das
mov
jl
or
movsb
and
sbb
lcall
mov
jbe
add
bound
mov
pop
add
lahf
sub
mov
stos
cli
mov
hlt
mov
sbb
aam
mov
pop
iret
aas
in
mov
cwtl
in
aad
mov
clc
xchg
mov
or
sub
aas
movsb
sbb
aam
sub
ret
pushl
js
jecxz
and
sahf
stos
push
pop
mov
adc
push
cmpl
popf
pop
jbe
cltd
fstpl
int
sbb
lret
mov
dec
or
arpl
pop
jb
and
into
push
insb
rol
adc
xchg
mov
out
jno
jns
jg
jmp
mov
mov
aam
mov
ret
mulb
dec
jl
cld
dec
stos
leave
mov
and
or
in
stos
loope
cmp
mov
xor
inc
dec
cmp
aas
jne
data16
adc
push
push
cli
dec
fst
les
mov
mov
cld
fs
sbb
fcmovnu
and
pusha
adc
daa
fistpl
and
pushf
loope
xor
xchg
dec
fs
scas
mov
push
cli
adc
mov
outsb
pop
dec
mov
aaa
jbe
mov
mov
push
int
std
sbb
pop
sbb
orb
loope
std
mov
push
lea
push
inc
lods
pop
jl
outsb
cmp
xor
hlt
fcomps
out
scas
mov
cmp
scas
xchg
cmpl
imul
mov
or
nop
mov
adc
lea
xchg
lret
jmp
rorb
push
mov
push
imul
pop
imul
push
stos
aas
cs
xor
scas
lret
ja
mov
inc
mov
ficoms
out
std
pop
loop
nop
dec
in
movsb
or
scas
mov
adc
xlat
xchg
loope
aas
popf
mov
adc
test
add
pushf
push
or
enter
jg
pop
mov
pop
xor
sbbb
pop
jg
cli
out
es
pop
fldl
pop
cmp
sbb
sub
cmp
push
rcrl
xlat
mov
rcrb
mov
adc
lods
mov
sbbl
sub
je
loop
jno
fsubs
push
stc
mov
ret
xchg
lcall
ret
jmp
sbb
add
adc
push
jo
pop
nop
xlat
cmp
pop
cmp
fsin
mov
sub
lea
sbb
subb
fwait
sahf
xchg
stc
stc
repz
mov
jmp
lahf
pop
xlat
sub
loopne
cmp
bswap
inc
int
cmp
mov
cmp
movsb
clc
mov
sbb
cs
clc
push
ret
popfw
pop
adc
filds
cli
jl
or
cli
push
pop
xor
xchg
std
xchg
scas
sbb
fldt
das
xchg
lds
cwtl
inc
in
sbb
cmpsl
int
call
fs
lods
cmc
cwtl
cltd
fimuls
adc
dec
xor
in
test
in
lea
push
cld
div
pop
xor
mov
ljmp
or
out
and
outsl
mov
clc
cs
lret
test
addb
pop
xchg
sub
lock
fcoms
sub
mov
int3
pusha
lock
std
cmp
cmp
das
mov
or
adc
lds
jl
movsl
mov
cs
cmp
adc
sarb
imul
mov
push
inc
cmp
push
add
repnz
pop
sbb
sub
mov
mov
lock
and
out
jnp
data16
and
pushf
jmp
dec
inc
lea
movb
dec
std
mov
shrb
xchg
sti
test
in
dec
mov
clc
cwtl
dec
and
jo
jmp
cmp
xchg
sub
add
xchg
xor
sbb
ror
addl
jo
xchg
mov
sub
ficomps
cmp
jg
fs
movsl
mov
std
sub
cmp
pop
loop
xchg
in
bound
nop
pop
lret
pop
fs
in
cmpb
mov
sbb
jecxz
outsl
and
dec
cld
mov
sub
xchg
jnp
push
ret
dec
mov
fldcw
adc
andl
dec
jmp
and
std
and
loopne
and
aas
int
scas
xor
xchg
xchg
test
ud0
insb
push
mov
jmp
push
mov
scas
mov
pop
push
or
sbb
popa
in
in
stc
cltd
sub
cmp
movsb
dec
ret
sahf
sbb
lock
fcoms
dec
mov
or
stos
das
push
pop
repnz
sub
int3
pop
aaa
xor
sub
mov
pop
ficomps
js
xchg
cmpl
imul
push
loopne
fdivrs
lahf
push
pop
mov
and
add
sti
mov
sub
cwtl
fdivl
sbb
loope
int3
loopne
bound
out
push
std
arpl
sbb
cmp
mov
mov
out
lock
jl
xor
jmp
jge
or
inc
fdivl
aas
jg
cli
cwtl
jb
inc
popa
pop
into
jmp
mov
ja
loope
ret
xchg
fcomp
inc
jp
fsubr
cmp
mov
inc
fld
fwait
sbb
mov
sub
test
pop
xor
jle
sbb
mov
scas
lcall
lret
fists
ja
mov
inc
sbbl
mov
sbb
inc
jle
xchg
lock
repz
sbb
sbb
mov
call
xchg
add
xor
fwait
scas
pushl
dec
mov
fisttps
jl
add
adc
scas
jae
sbb
mov
add
mov
das
dec
xor
mov
and
cmp
or
cmp
mov
cmp
fidivrs
jmp
mov
mov
rolb
or
loop
dec
add
jp
push
mov
loopne
cmp
sub
mov
out
sub
lahf
mov
movsb
or
jne
cwtl
imul
push
sub
sahf
dec
loopne
pushl
enter
pop
mov
dec
push
cmpl
mov
xor
aas
out
inc
or
xchg
test
cmpb
and
ret
ds
js
lret
and
mov
cmpb
dec
sbb
fmuls
lahf
add
mov
fnsave
in
dec
mov
sbb
xchg
arpl
cmp
nop
pushf
pop
or
cwtl
mov
or
ljmp
jnp
sbbl
imul
aaa
jnp
insb
ja
scas
mov
xchg
cmp
popa
mov
or
mov
dec
call
test
xor
cmp
pushf
add
inc
pushf
popa
in
imul
hlt
repnz
out
test
mov
mov
sbb
fwait
xor
add
mov
push
sbb
sbb
xchg
sbb
jge
je
fisttpl
sbb
stc
lret
cltd
or
sbb
les
sbb
mov
and
fs
test
dec
out
xchg
pop
jne
cwtl
sub
push
cmp
add
inc
pop
fnstcw
add
stos
mov
aaa
scas
sbb
mov
ficompl
dec
pushf
cmpsl
lcall
sub
mov
mov
and
mov
popa
push
lds
les
in
pop
shll
cld
mov
mov
mov
call
mov
add
sbb
sbb
pop
jl
loop
repz
dec
sub
andl
dec
aas
fisubs
dec
outsb
cmp
pop
dec
xor
psrlw
jns
xchg
push
push
outsb
lds
pop
push
fwait
cmp
cmp
aam
cmp
push
daa
arpl
adc
pop
mov
aaa
inc
mov
pop
jg
cli
stos
mov
in
dec
mov
jmp
and
cmp
in
push
fdivrs
mov
sbb
leave
xchg
lahf
xchg
sub
mov
cs
xchg
icebp
sti
stc
pop
mov
adc
and
pop
mov
pop
pop
fdivs
push
fsubrl
subb
and
rcr
xor
inc
cmp
stos
mov
pop
mov
cmp
js
jbe
arpl
cli
cmp
cmpsl
cld
out
subl
xchg
adc
inc
mov
cmp
loop
fistpll
xchg
push
xchg
pop
mov
leave
add
mov
dec
inc
mov
add
cmp
adc
sbb
push
leave
popa
dec
sbb
cmp
sbb
movsb
pop
sbb
loope
xchg
add
lcall
les
dec
jbe
lea
call
xor
mov
stos
and
mov
cwtl
and
pop
xor
mov
sbb
inc
hlt
mov
das
push
push
xchg
xchg
mov
cmc
pop
jmp
jns
pextrw
adc
in
mov
test
out
cmc
lea
gs
out
iret
push
xor
mov
call
add
sar
cwtl
jae
out
outsb
jb
jp
lock
add
and
push
ja
jno
mov
sbb
sti
test
mov
push
jg
decl
int3
sbb
dec
stc
sti
cmp
or
push
fwait
lods
inc
sbb
fs
out
pop
cmpsb
xchg
mov
fcompl
xor
xor
bsr
mov
push
adc
lea
add
sbb
or
pop
and
sbb
adc
pop
cmpb
mov
and
aam
jg
and
in
lcall
int
sahf
rcrl
pusha
mov
xchg
fiadds
addr16
stos
push
aas
cmp
int3
jmp
loope
jnp
mov
stos
lret
mov
jmp
dec
loope
mov
push
sti
mov
lahf
xchg
sarl
mov
inc
sbb
lret
and
aas
dec
fdivrl
fs
outsl
mov
scas
bound
or
in
and
out
add
mov
dec
and
repz
mov
ja
inc
clc
ror
repz
and
inc
out
sbb
iret
clc
push
cltd
jl
out
rolb
lods
faddl
sbb
xor
mov
mov
push
mov
in
bound
jno
arpl
mov
jge
inc
gs
sub
xor
xchg
push
insl
pushf
call
sub
aaa
pop
sub
jae
mov
filds
mov
shll
sbb
insb
je
xchg
xor
jmp
jl
dec
js
ret
push
jle
mov
out
mov
pop
pushf
lret
into
outsl
jmp
jmp
flds
adc
bound
push
pusha
loop
mov
fsubs
out
and
mov
imul
pop
fwait
call
sub
aas
in
sbbl
leave
cmp
pushf
sub
jg
jne
push
or
outsl
jne
test
ret
rorl
dec
xchg
add
mov
push
decl
pop
adc
out
pop
call
iret
into
out
sbb
mov
ficoml
add
and
xchg
pop
inc
push
icebp
test
mov
int
add
leave
fcoml
fsub
jbe
mov
out
js
loop
jg
nop
xor
rcll
icebp
push
subl
sbb
jg
dec
dec
mov
push
fsubrp
fmuls
or
lods
aas
mov
mov
in
xorb
push
and
sti
sub
dec
out
sbb
mov
cmp
push
loop
pop
incl
out
jo
je
les
pop
push
icebp
adc
mov
jecxz,pt
xor
and
ret
cli
and
cmp
stc
push
cmp
jl
aaa
adc
leave
mov
loope
cmp
test
adc
mov
mov
jmp
addr16
sbb
mov
cwtl
sbb
fwait
sbb
ljmp
popa
out
sbb
xor
or
sarb
mov
mov
out
test
jg
cli
jbe
inc
stc
inc
dec
out
xchg
mov
ljmp
inc
pusha
insl
adc
sbb
sbb
std
gs
jle
mov
push
fildl
fwait
pusha
dec
or
adc
jb
cs
cmpl
cwtl
fstpt
mov
sub
pop
xor
rcrb
xchg
or
sbb
rcll
jae
inc
out
xchg
cmp
gs
cmp
lock
stc
push
jb
mov
jle
or
mov
pop
imul
cmp
push
je
push
mov
aam
pop
dec
jmp
sbb
jmp
jge
imull
mov
jge
ret
fcompl
in
xchg
mov
push
xorb
sub
popf
out
pop
cmp
ljmpw
inc
or
es
and
dec
fstl
sti
add
mov
and
fcoml
and
add
sub
lods
pop
out
push
fsubrl
cld
out
lcall
test
aas
scas
mov
adc
daa
les
repnz
push
cmp
push
and
pop
roll
stos
pop
jo
cmp
call
cmc
fdiv
pushf
pop
push
fdivrl
jg
int
filds
rorl
iret
cmp
popa
mov
aas
pop
sti
add
jle
fwait
mov
xchg
sti
lods
int
sub
mov
lods
rcrl
fildll
sbb
test
jo
cs
cwtl
leave
in
stos
pushf
add
test
mov
cmp
cmp
mov
test
mov
cmp
cmp
je
outsb
ja
xor
loopne
jbe
sub
enter
xchg
inc
inc
or
push
rorw
cmpsb
cmp
add
fdivrs
das
xchg
xor
dec
pop
sub
cld
push
test
loope
sahf
jnp
data16
xchg
add
into
test
sbb
sbbb
sub
daa
stos
add
sti
fidivs
pop
inc
sbb
mov
pop
dec
adc
fucom
arpl
movsb
sti
cs
xchg
rorb
cld
cmp
cmpsl
cmp
xlat
mov
mov
and
dec
mov
ljmp
pushf
sti
leave
push
pushl
xchg
add
fstps
sbb
push
jmp
fadd
mov
xchg
popf
out
sbbb
sbb
adc
mov
pop
clc
xchg
pop
cmp
fmuls
popl
jnp
pop
mov
mov
sub
push
mov
pop
mov
leave
in
add
push
pop
push
cmp
lahf
sbb
in
xor
out
jae
sub
loop
popa
es
imulb
mov
fiaddl
into
mov
pushf
addr16
test
std
push
gs
fwait
cmp
clc
popf
jge
mov
push
pushf
pop
fisubrl
jge
movsb
paddusb
and
xlat
mov
es
shrl
xchg
shrb
cmp
mov
pop
inc
jne
cwtl
scas
xor
lds
or
test
xchg
fldl
dec
cli
pop
popf
mov
push
movsb
insb
test
aas
jle
dec
cmpsb
push
dec
push
push
aaa
mov
call
fcoms
sbb
fldt
insl
add
mov
and
sbb
clc
enter
hlt
xchg
and
dec
ds
sub
shrl
std
dec
xor
fcoms
jb
mov
add
call
jne
cmc
mov
mov
fcoml
mov
loopne
outsb
cwtl
xor
popf
cmp
sbb
leave
and
repnz
shlb
outsb
add
xchg
mov
aas
jmp
subl
xchg
or
jb
lret
xchg
fsubrs
out
filds
pop
stos
mov
and
sti
shld
pop
mov
mov
cli
ljmp
add
lea
mov
cmp
ss
scas
decl
jns
mov
scas
jg
lret
xchg
ja
xorl
fsubs
inc
and
in
mov
dec
cmc
leave
pop
aad
js
mov
fwait
mov
push
sbb
hlt
cltd
add
cli
xor
pop
mov
push
xchg
negl
negb
leave
js
aas
aam
aam
in
or
sub
pushf
jg
shlb
dec
sub
cmpb
rclb
push
mov
shrb
inc
mov
iret
and
or
add
fdivrs
mov
dec
fnstenv
jge
add
ficoms
cmp
iret
cmpsb
pop
repz
sbb
mov
pop
iret
mov
out
pop
and
sahf
mov
bound
dec
lds
mov
daa
cmp
in
pop
pushf
mov
xor
insl
xorl
bound
or
adc
cmp
add
inc
jg
ret
cmpsl
cltd
leave
shl
sub
mov
jp
sub
push
fdivr
das
sub
pop
sub
fdivrs
sbb
adc
mov
push
pop
clc
mov
inc
sbb
call
lock
mov
pop
dec
fld
leave
imul
andb
xchg
lret
push
in
xlat
adc
fcoms
cmp
lods
xchg
pop
lret
sti
inc
jge
aam
fisubl
mov
sbb
fsubr
cmp
inc
inc
int3
jmp
lock
or
xlat
fcmovu
jg
inc
in
push
sbb
ror
and
mov
sbb
push
push
adc
push
insl
bnd
fisubrl
out
gs
pop
xor
or
rorl
pop
dec
xchg
jno
jge
jo
jl
adc
aad
jb
xor
cmpsl
jnp
xchg
pop
ja
pop
mov
lret
push
cmp
inc
movsb
dec
fsub
inc
and
dec
fidivrl
out
ror
sti
aad
xor
paddd
cmp
sbb
push
add
dec
dec
or
sbb
pop
xchg
outsb
lods
push
jmp
out
sbb
lds
adc
jge
dec
push
mov
popa
cli
fdivrs
sub
inc
push
mov
xchg
push
mov
pop
pusha
aad
adc
cltd
lahf
mov
sbb
mul
mov
cmp
mov
cmp
iret
adc
pushf
jmp
push
mov
pop
or
mov
add
mov
lahf
je
pop
xor
mov
inc
rcrb
mov
dec
pushf
pop
cmp
icebp
xchg
push
mov
add
in
jno
rcrb
sbb
cmpsl
sbb
sbb
imul
sbb
and
cmp
cmp
aas
mov
jle
sbbl
xchg
jnp
push
xor
push
fadd
push
push
jmp
xchg
mov
mov
adc
inc
imul
pushf
cmc
pop
into
xor
scas
aas
cmc
add
add
arpl
cli
js
and
mov
or
arpl
lods
add
cmpl
xor
mov
ret
rcr
mov
sub
les
pop
rolb
and
xlat
push
xchg
mov
push
jp
repnz
lods
jecxz
dec
sbb
stos
iret
mov
and
mov
cmp
xchg
shrl
cld
js
jmp
mov
and
xchg
sbb
nop
xchg
outsb
push
mov
xor
push
xchg
pop
mov
sbb
in
sub
cmp
add
mov
mov
lea
test
push
dec
jl
add
jle
fcomps
scas
adc
mov
sti
jle
int3
push
sub
inc
pop
data16
sbb
mov
xlat
movsl
cmp
jge
push
test
cmp
inc
cli
in
mov
aaa
cli
push
jo
sbb
or
add
scas
add
out
dec
sub
jmp
cli
jne
dec
cmpl
xchg
imul
inc
pushf
mov
arpl
dec
fbstp
mov
adcl
sbb
movsb
adc
pop
push
cli
popf
pop
xor
or
add
jmp
xchg
mov
cltd
incb
lea
pushf
dec
or
outsl
fs
fsub
out
es
xchg
mov
and
sti
mov
outsl
ja
or
in
subl
jp
xchg
xchg
mov
out
sbb
jp
sub
mov
cmp
mov
out
imul
mov
int
push
jle
decb
mov
insb
cwtl
push
and
packsswb
sbb
lock
arpl
jns
shl
iret
mov
rcrl
fnstcw
xorb
aas
jmp
dec
shll
mov
pop
fmull
add
and
or
fwait
cli
sbb
mov
jecxz
aas
jns
xchg
cltd
ret
add
sbb
pop
aad
sub
cmp
jne
jg
mov
stos
adc
adc
mov
cli
jecxz
cmp
mov
je
mov
push
add
or
mov
push
sub
cld
and
das
loope
add
call
mov
loopne
xor
sub
repnz
into
sbb
mov
cmp
mov
or
push
inc
cli
inc
jecxz
fs
cmpsb
and
fildll
mov
mov
lds
dec
in
pop
and
out
int3
mov
xchg
lret
scas
jg
cmove
and
fsubs
push
int
jmp
push
sbb
sbb
pop
jmp
lret
cmpsb
jne
jo
and
add
int
jge
sbb
cltd
dec
stos
pop
mov
push
je
fsubp
pop
cli
or
shrl
fsub
cwtl
pop
cmp
sub
shll
scas
sti
shll
lahf
mov
cmp
rclb
std
ja
cli
imul
scas
add
ds
incl
ss
jl
sbb
popf
or
movb
adc
sbb
cmp
or
jo
add
movsb
jl
scas
mov
fidivrl
testb
fchs
cmp
xchg
xor
cmpl
xlat
stos
ffreep
pop
jo
and
insb
inc
lahf
xchg
inc
aaa
jmp
cmpsl
mov
icebp
pop
sbb
in
cmpsl
ret
scas
pop
das
mov
adc
or
mov
ljmp
daa
push
fnstsw
clc
lret
mov
clc
stos
data16
pop
ficomps
shll
aas
out
dec
fcmovne
mov
cltd
out
mov
jno
lock
fstpt
in
sub
jmp
cmp
mov
push
int
mov
hlt
cwtl
call
and
pusha
mov
cmp
movsl
shrl
pop
imul
fidivs
xor
popa
sub
push
add
pop
cmp
cld
sahf
sahf
loope
insl
loop
pop
cmp
bound
cs
or
pop
loopne
fs
mov
cli
hlt
sbb
test
lahf
test
aam
jnp
xor
or
jbe
pusha
mov
shr
popf
mov
cmp
das
cmpsb
data16
jp
subl
push
pop
xchg
jecxz
mov
and
mov
aam
push
mov
cmp
inc
js
mov
jecxz
fdivp
add
ss
ds
dec
dec
movsb
aaa
mov
jle
pop
fs
sbb
mov
dec
stc
aas
jmp
andb
pop
and
addr16
scas
jp
push
je
testl
mov
push
push
cmp
fdivl
out
sbbb
scas
mov
jns
andl
pop
jnp
jge
lea
jg
iret
fwait
repz
fwait
sbb
in
cmp
inc
negb
and
mov
test
leave
and
outsl
filds
out
lahf
sti
gs
test
sarb
lret
cmp
outsb
sub
negl
mov
mov
jne
or
push
sub
mov
popf
cld
fsubs
stos
sub
les
add
jl
mov
and
dec
mov
sbb
and
aas
cmp
ret
jo
push
inc
push
ret
iret
stc
push
pop
fldt
pop
xchg
cmpsb
inc
pop
mov
insb
js
sbb
popf
or
xor
lods
jg
out
push
sub
mov
sub
mov
clc
mov
pop
lds
push
xchg
jmp
push
cmp
or
pop
sbb
adc
mov
mov
mov
mov
movsb
mov
mov
orl
push
mov
fnstsw
or
inc
aad
ret
mov
lods
or
xchg
addl
jmp
in
pop
add
bound
mov
cmp
add
scas
adc
jae
mov
inc
ds
test
add
icebp
loopne
arpl
stc
pop
faddl
pop
inc
xorb
sbb
ror
fwait
ljmp
or
pop
xchg
pop
bound
pop
pop
out
pop
shll
fcompl
cli
push
sub
ret
mov
inc
pop
pop
cmp
mov
or
insb
arpl
dec
xchg
pop
and
fistl
fldt
lods
pop
xchg
ss
lods
jnp
mov
adc
lahf
jle
push
push
mov
mov
pop
mov
test
add
mov
mov
sarb
inc
xor
iret
cmp
mov
jmp
insl
fcoml
jnp
pop
repz
push
and
mov
mov
dec
lahf
mov
inc
movsb
insl
cmp
pop
adc
shrb
xlat
adc
cwtl
pop
cmpl
sbb
rcll
mov
ret
je
sbb
lahf
fsubs
pop
clc
sub
pop
shrl
mov
inc
roll
xor
mov
cmp
xor
pop
fstp
sbbl
fmuls
ficomps
inc
xchg
mov
xchg
lea
push
outsb
xor
mov
jg
sahf
repnz
subl
aas
pusha
aad
cmp
and
xlat
icebp
movsb
xchg
pop
mov
dec
or
shll
fadds
aas
xor
aaa
sarl
pop
movsl
lahf
dec
lods
pop
xor
sahf
and
fnsave
mov
fsubr
jp
sbb
inc
in
xor
sbb
add
das
out
xchg
call
movsb
cmpsb
cs
pop
and
jg
sbb
sub
jnp
push
sar
jns
xor
pop
xchg
sbb
mov
sub
xor
mov
or
repz
les
dec
leave
lahf
xor
push
add
inc
stos
mov
test
jp
sti
jl
and
cmp
es
fwait
nop
lahf
cmp
and
mov
pop
push
in
xchg
add
push
mov
mov
lcall
xor
fucom
jmp
ret
outsl
sbb
add
add
dec
xor
fs
lret
cli
enter
mov
sahf
into
push
mov
push
lahf
notb
jp
outsb
and
or
xchg
leave
sarl
in
shlb
inc
jne
push
pushf
push
lret
and
jno
shrl
clc
enter
xchg
add
mov
into
pop
inc
push
movsl
je
loopne
mov
cmpsb
fists
mov
and
xchg
mov
shrb
lcall
adc
sti
data16
mov
aas
push
addb
jmp
fsubrs
aas
fldt
sub
es
iret
rcrb
loop
dec
pop
into
fdivrl
pop
int
iret
lcall
lods
mov
scas
insb
flds
pop
stc
sahf
sub
xchg
ss
jbe
js
xchg
xor
hlt
push
mov
dec
lahf
jg
dec
pushf
add
jne
stc
xor
mov
add
sub
dec
ja
jge
mov
mov
mov
xchg
pushf
pop
cld
sub
mov
stc
adc
push
pushf
lock
mov
in
cmp
out
pop
add
and
dec
fmull
sahf
inc
jnp
adc
fidivrl
push
pushf
stc
mov
ds
cmp
or
fsub
xchg
jnp
dec
fistps
cld
es
clc
jae
adc
xlat
jnp
je
lahf
dec
sbb
lret
clc
sbb
ret
push
int
sub
sbb
ja
xor
jecxz
pushf
mov
sbb
xchg
jnp
pop
out
hlt
sub
jae
sbb
xchg
nop
cmp
sbb
pushf
mov
dec
aam
jnp
mov
mov
add
pop
negb
or
cwtl
push
sbb
xchg
repnz
mov
jg
dec
bound
daa
mov
imul
sahf
test
idivb
inc
mov
out
ret
cmp
test
dec
adc
xchg
pop
mov
popf
mov
subb
movsb
sti
rcrb
pop
cld
add
xchg
pop
sbb
stos
nop
sbb
dec
call
or
xor
push
movsl
dec
sbb
dec
jp
dec
mov
mov
or
stc
cwtl
stos
cmc
push
push
pop
outsb
insb
cld
mov
aam
das
adc
incl
sbb
mov
add
inc
ss
push
lret
push
or
repnz
ret
outsl
mov
dec
push
pop
mov
sahf
or
outsb
fdivp
mov
cmp
inc
adc
aas
in
xchg
cmp
jg
sbb
fwait
clc
iret
jl
pusha
and
leave
jo
mov
sahf
jbe
adcl
xor
cwtl
cs
cli
rorb
arpl
lea
mov
jl
sub
shlb
in
push
dec
bound
in
nop
sbb
pop
jo
cmp
cmp
push
push
dec
sbb
int3
dec
sbb
mov
pop
or
rolb
lahf
jnp
xor
subb
rolb
sub
imul
iret
sbb
aad
or
xchg
cli
loop
xor
fcoms
lahf
fcoms
sbb
ror
mov
ret
imul
cli
add
nop
pop
cld
mov
jg
xor
jmp
add
sbb
scas
cli
aas
movnti
mov
notl
fmuls
mov
int3
jae
imul
and
js
jno
inc
in
shll
test
jae
sbb
jne
or
sarl
enter
or
loope
sub
in
jns
xchg
mov
loope
xchg
push
test
jle
in
notb
push
push
add
mov
sub
push
jle
mov
das
fwait
mov
nop
and
xor
pop
mov
sub
nop
pop
jne
mov
pop
jp
pusha
jne
in
mov
mov
nop
jl
std
xor
scas
std
test
sub
lock
xchg
push
push
in
mov
mov
lds
insb
popf
pop
scas
rorl
xlat
inc
push
stos
xor
outsb
or
fistl
jecxz
push
mov
dec
push
mov
push
lret
test
adc
std
jae
pop
dec
aad
pop
mov
pop
sbb
mov
mov
pushf
sub
ret
into
adc
and
jle
dec
dec
ja
cmp
mov
addr16
push
fistpl
sub
ficomps
jmp
fists
cmpsb
push
pop
jle
inc
sti
mov
imul
mov
loope
fwait
mov
clc
dec
or
or
xchg
mov
js
and
xchg
dec
inc
cmpsb
pop
test
cmpsl
mov
stos
or
mov
leave
imul
fsub
push
cmp
into
mov
lahf
aas
jnp
add
mov
pop
xchg
inc
insb
call
or
clc
xor
xchg
cmp
inc
shll
fisttpl
xlat
xchg
adc
leave
sub
data16
xchg
add
sbb
sub
aas
repnz
or
mov
cwtl
cld
fwait
sbb
fmull
cmp
or
jg
mov
dec
add
out
loope
jno
rorb
setns
push
adc
pop
or
cld
mov
stc
in
outsb
xchg
sti
jae
flds
and
fadds
sti
rcll
xor
mov
fstpt
pushf
ds
sbbl
sbb
xor
cltd
fdivr
leave
xchg
out
mov
cmp
push
push
push
rcrb
inc
jmp
jmp
int3
cmp
sbb
pop
cwtl
and
je
mov
add
mov
cmpsb
fwait
pop
dec
xor
mov
jns
mov
movsb
aaa
inc
fwait
pusha
pop
mov
push
push
in
mov
and
into
sbb
cmp
ljmp
repz
inc
mov
out
jns
int
sub
mov
mov
cwtl
loope
jg
orb
adc
aam
popa
xor
adc
sbb
fwait
cmp
inc
lea
jge
hlt
out
pop
dec
rcll
idivb
dec
ds
test
mov
daa
cwtl
lret
mov
mov
mov
cld
lock
mov
nop
test
cmp
imul
clc
dec
jo
or
pop
movsl
fwait
and
lock
lods
and
jae
incl
pop
test
movsl
mov
popa
adc
lret
dec
in
roll
cmp
ret
xchg
cmc
rcr
aaa
ja
inc
rcll
sbb
pop
movsl
imul
scas
cwtl
hlt
mov
adc
pop
cmc
bound
xor
shr
popf
mov
add
or
xor
in
fistpll
mov
mov
jge
fsubr
cwtl
aas
incb
inc
stos
daa
insb
orl
flds
cld
xlat
pop
pop
xchg
js
std
mov
pop
out
stc
into
xor
mov
push
rolb
fsub
xchg
dec
push
fidivrl
jns
cmp
pop
fdivrl
test
test
pop
xchg
and
pop
test
outsl
pop
dec
jae
sahf
xor
cmp
xchg
andl
xchg
in
inc
pop
push
ljmp
pop
es
ss
enter
test
flds
sahf
xor
fldt
push
fsubs
mov
mov
mov
jle
and
pop
mov
and
jg
inc
pop
outsl
or
sub
sbb
or
cli
cmp
adc
hlt
pop
adc
jecxz
fdivrl
divl
loope
arpl
mov
cltd
inc
push
andb
sbb
xor
icebp
jb
leave
pop
jle
gs
fimuls
sbb
pop
pop
sbb
lock
mov
jge
mov
pushf
dec
and
sbb
inc
adc
push
mov
nop
add
nop
mov
sbb
stos
lahf
cmpsl
pop
sub
adc
inc
scas
jge
rolb
push
in
lea
nop
repz
fcmovnbe
jmp
fst
rcrl
cmovl
cmp
pushf
cli
xchg
sub
daa
pop
daa
push
or
fsubrs
idivb
xorb
and
test
mov
cmp
or
sbbl
xor
sub
sbb
xchg
add
aas
minps
or
cltd
daa
mov
cltd
rorb
mov
jno
pop
xor
push
sub
push
and
dec
push
inc
inc
xchg
ret
or
rcll
push
cmc
jmp
inc
pop
cli
iret
enter
mov
incl
xchg
push
dec
cld
pop
shlb
lahf
shlb
push
les
lahf
add
shll
cmpsl
sarl
mov
aaa
test
sub
icebp
stc
hlt
stos
xchg
fcomps
fwait
pop
ret
pop
mov
sti
test
jmp
sbb
push
les
scas
jno
int
hlt
xchg
mov
xor
std
lds
fdivrl
and
cmpsb
mov
xchg
pusha
inc
fcomip
cs
arpl
lock
add
outsb
mov
leave
pop
or
incl
ret
adc
insb
xchg
push
push
dec
inc
adc
cwtl
mov
setae
cli
sub
pop
scas
orl
mov
lret
dec
mov
add
pop
mov
pop
les
leave
shrl
fistl
rorb
lret
int3
xchg
sbb
test
inc
pop
pop
mov
xor
lahf
cwtl
cld
es
mov
loop
clc
pop
cwtl
add
loopne
loopne
pushfw
scas
jnp
xor
xchg
sbbl
loope
mov
mov
inc
push
pop
push
lods
pop
jb
cmp
jl
mov
xlat
stos
pop
sarb
push
cmp
cmp
and
test
or
jne
mov
ret
jnp
test
inc
loope
sbb
xor
sbb
mov
mov
or
pop
pop
push
mov
ljmp
in
push
inc
add
imul
pop
xchg
xchg
mov
mov
sti
pop
fs
and
jge
jbe
mov
add
dec
iret
cmp
imul
sbb
test
or
mov
mov
fcompl
f2xm1
les
xchg
mov
stc
pushf
push
rolb
jl
or
shl
ret
fstpt
jno
inc
mov
jg
xor
mov
shll
sti
aaa
hlt
lea
push
arpl
xor
pop
andb
pop
mov
xor
add
bound
fstpl
repz
les
lret
insb
pop
popa
xor
pop
push
xor
sbbb
xchg
cmp
mov
mov
movsb
stos
cwtl
xchg
lahf
push
cmc
push
cli
pusha
out
cmpsb
arpl
mov
ret
gs
jl
cmp
mov
inc
pop
add
loop
js
lret
movsb
shll
fbld
add
pusha
mov
jae
push
movsl
in
mov
adc
imul
mov
outsb
or
dec
test
fsubr
mov
adc
test
mov
popa
call
cwtl
xchg
xchg
sub
or
adc
cmp
test
cmpb
xor
lcall
or
in
jmp
lds
movsb
movsl
xchg
sub
xchg
sub
pop
dec
mov
jns
xchg
ret
stos
cmc
cltd
insl
dec
cmp
fisubrl
fmull
cwtl
sahf
mov
mov
in
xchg
mov
cmp
scas
ret
push
add
push
pop
jle
cmc
outsb
dec
lahf
push
les
divl
mov
in
and
add
lret
xchg
xchg
mov
mov
adc
mov
mov
ds
into
fsubl
repnz
outsl
and
into
dec
cli
cltd
cwtl
mov
lock
test
xchg
or
out
sti
sahf
inc
clc
shr
bound
jmp
mov
aaa
sbb
mov
and
pop
jl
add
dec
in
pop
out
dec
negl
scas
ljmp
mov
aaa
or
dec
mov
ret
imul
adc
fsts
sub
sbb
adc
lods
pop
cmpb
sub
scas
pop
jle
or
ja
insb
or
icebp
xchg
lods
mov
sub
push
fisubrs
pop
in
lods
inc
mov
xor
push
jo
mov
jg
jmp
cwtl
jnp
xchg
push
ss
add
in
jg
add
dec
cmc
loop
jl
les
arpl
rcrb
mov
push
das
call
cmp
sbb
jle
push
xor
in
mov
fmuls
jae
cmp
mov
insl
dec
ljmp
movsb
cmp
mov
sbb
mov
xor
imul
dec
jle
mov
popf
insb
pop
ficompl
cmp
pop
dec
push
andb
sub
mov
test
rclb
mov
rcll
dec
cmpl
jg
sub
enter
mov
sti
fimuls
xor
jg
rolb
jle
sub
cmp
scas
jg
adc
dec
gs
cld
mov
add
jmp
sbb
jno
inc
fsub
cmp
data16
lret
mov
mov
mov
shlb
fstps
ret
xchg
mov
sti
scas
movsl
inc
fmull
mov
out
nop
out
nop
dec
sub
int
mov
add
sbb
sub
fimull
or
fsubrs
cmp
sub
hlt
mov
push
push
pop
popl
mov
int
xor
xchg
dec
stc
or
scas
scas
mov
or
xor
faddl
or
pop
adcb
mov
adc
push
xlat
cmp
test
fldt
sbb
fs
jle
popf
cmpsl
enter
cmpsl
ret
sub
lods
xor
or
mov
test
call
inc
out
pop
pop
sti
and
or
aam
pop
in
sub
mov
movsl
scas
pushf
imul
in
mov
jnp
dec
and
mov
data16
sbb
iret
jb
add
ficomps
call
jl
rcll
sbb
imul
sub
les
xor
pop
dec
int3
std
add
cli
xchg
push
push
mov
test
push
jp
jns
ss
xchg
jp
and
ja
sub
in
push
xchg
scas
fwait
loopne
adc
test
add
scas
pop
icebp
test
mov
scas
aaa
mov
push
ja
rcll
lock
jle
jg
sbb
mov
push
pop
inc
jg
in
data16
jbe
ret
pop
sti
fwait
sbbb
push
inc
cmp
aad
push
and
rcrb
jnp
push
push
sbb
jle
pop
inc
and
sbb
xor
test
ret
cmp
notb
in
fdivrs
insb
cmpsb
cmp
xchg
sub
sbb
jg
pushf
dec
ret
pop
cmp
imul
jne
std
cli
dec
insl
js
dec
xchg
adc
mov
cs
add
arpl
sbb
lret
and
fisubs
mov
xor
sub
daa
inc
lea
dec
push
leave
lcall
jg
notb
mov
daa
int
stc
pop
cmp
mulb
or
imul
out
addb
jns
pusha
repz
mov
stos
scas
xchg
nop
lds
cmp
mov
dec
adc
add
sbb
sbb
call
fistpll
mov
sahf
jg
in
cmpl
pop
xchg
clc
ljmp
fdivrs
jecxz
pop
cld
inc
ss
mov
pop
jle
out
fdivs
idivb
lods
xchg
xorl
gs
pusha
xchg
add
pop
outsb
adc
jno
add
in
xchg
shll
aam
mov
jmp
inc
adc
jns
fsubl
cmpsb
sahf
imul
ror
xlat
dec
cs
jbe
pop
pop
mov
fmuls
out
cltd
or
aas
sahf
adc
lods
xor
mov
push
scas
popf
cmp
xchg
xchg
jl
test
adcb
mov
mov
and
mov
imul
lret
lcall
and
mov
loope
cwtl
pop
push
int
add
ja
vpmacssdqh
int3
mov
fisubrs
js
and
aas
cmpl
push
test
and
shrb
mov
cmpsb
cmp
jbe
hlt
mov
pop
test
mov
popf
adc
jnp
mov
and
mov
into
jle
push
mov
xchg
subb
inc
repz
fldcw
aas
js
dec
or
sbbb
iret
je
negb
leave
stos
pushf
fdivr
dec
xor
xchg
sti
mov
and
sbb
sub
pop
test
aaa
mov
fisubs
cmpsb
mov
lods
xor
loopne
orb
sbb
popf
mov
int3
jg
ss
repz
xor
cmpsl
inc
sub
pop
mov
xor
sub
out
mov
push
sbb
adc
mov
fiaddl
jno
xchg
test
in
or
mov
pop
out
test
fbld
sbb
in
sbb
mov
movsb
mov
ret
cs
xchg
fdivr
jns
mov
mov
push
cmp
stos
aaa
cmp
cmp
jmp
inc
pmullw
push
data16
cwtl
lret
test
cmp
pop
decl
leave
movsb
je
sub
sub
dec
mov
mov
je
sbb
inc
jns
cmpsb
adc
jno
push
jnp
bound
or
fmuls
aas
or
pushf
data16
mov
pop
mov
xor
adc
in
push
and
insb
jl
cmp
cs
cs
mov
pop
std
in
cwtl
pop
or
pop
pop
incb
add
push
pushf
stos
push
mov
fwait
pop
lods
je
mov
clc
pop
cli
shrb
lds
lea
jl
lcall
push
push
int3
subb
repnz
jo
test
or
out
lahf
jnp
pusha
mov
adc
add
cli
jle
mov
das
scas
aas
inc
lock
mov
xlat
or
mull
stc
or
mov
iret
popf
testl
addr16
xor
into
popa
jp
push
orb
pop
jl
jp
jp
push
push
fucom
enter
iret
jmp
sbb
cmpsb
xchg
xchg
pushf
jnp
push
out
lret
adc
cmp
jl
sbb
or
scas
pushf
pop
mov
les
cltd
push
mov
add
daa
inc
mov
sub
push
loopne
fsubr
push
sub
fnstsw
adc
iret
adcb
xchg
jnp
hlt
jmp
subl
cld
aas
in
ds
rolb
call
cld
adc
icebp
cmp
mov
xor
cmpb
test
jl
xor
xchg
and
test
pop
mov
jno
pushf
mov
arpl
sbb
cwtl
push
nop
sti
pusha
pop
mov
pop
popf
aas
sbb
sbb
mov
lcall
inc
or
lret
mov
fdiv
outsb
pop
outsb
push
jmp
les
lea
imul
mov
mov
icebp
mov
and
jg
mov
mov
push
mov
cltd
imul
shll
aad
fdivrl
cmp
leave
adc
sbb
jp
dec
mov
adc
sar
push
rorb
out
ja
cli
insb
mov
push
xor
sbbl
aad
sub
fstps
int
decl
dec
push
jmp
add
mov
inc
in
sti
sar
lods
lods
fidivrl
mov
pop
or
xchg
sub
push
sbb
sbb
mov
js
lcall
jnp
pop
mov
sub
sahf
cli
fdivrs
mov
xchg
loop
pop
push
ljmp
cltd
notl
call
jno
aaa
xchg
cld
jg
lahf
call
xor
and
mov
aas
in
pop
jno
xchg
cmp
mov
inc
adc
cwtl
dec
or
pusha
cmpsb
jg
int
dec
and
add
lcall
cmpl
lcall
cltd
sbb
adc
insb
movsb
popf
mov
lcall
popf
fcom
jno
pop
shl
je
es
leave
shrl
cli
cwtl
sbb
or
dec
xor
pand
sub
jne
movsl
mov
daa
les
addr16
sti
adc
push
mov
fistpll
xchg
mov
sahf
fbld
push
repz
mov
lds
stc
shl
stos
dec
scas
pop
fisubrl
or
into
pushf
xor
cli
mov
mov
mov
or
pop
mov
sbb
pop
jle
pop
dec
push
push
sbb
shr
mov
sbb
mov
ljmp
or
fists
testl
ret
sbb
test
mov
lahf
sbb
aas
andl
cmp
mov
inc
xor
lds
pop
push
dec
ret
dec
mov
sbb
sbb
out
bound
sbb
call
mov
jmp
xor
mov
movsb
xchg
mov
push
sub
jge
leave
mov
xchg
pop
cli
stc
cmpsb
lret
adc
push
xchg
nop
sbb
int3
pop
mov
movsb
lcall
stos
jmp
rcrl
cli
fldt
xchg
or
cmpl
jg
xchg
sti
ds
and
lret
cmp
push
sub
inc
cli
add
ss
pop
mov
pop
mov
inc
xchg
adc
adc
push
pop
xchg
jno
jo
loopne
inc
push
mov
adc
jmp
sahf
popa
jne
bound
mov
outsl
data16
pop
sub
push
nop
cmp
test
adc
imul
push
shl
push
ljmp
jp
popf
shr
push
cmpl
push
jb
ficompl
add
mov
mov
fistpll
mov
in
sub
sub
lds
add
incb
mov
pusha
jo
mul
push
mov
fwait
enter
cmp
push
mov
jae
std
xor
les
cmp
mov
cmp
lock
jle
mov
aaa
jecxz
mov
adc
lea
jp
adc
cmp
out
sti
mov
js
sub
push
lret
sbb
ret
inc
fcmovnu
subl
fsubrl
sbb
aas
or
dec
sahf
jb
sub
mov
lock
icebp
inc
dec
lds
xchg
jbe
mov
clc
popf
jp
xor
sahf
icebp
pop
hlt
adc
fadd
aas
aas
add
cmp
jg
lods
popf
cmp
mov
aam
mov
mov
inc
sub
fdivrs
mov
jno
imul
or
fwait
sbb
cltd
pop
fcomp
ja
rcll
loopne
or
in
jecxz
push
jmp
out
cmp
jge
je
sbb
fiaddl
jg
pop
stos
icebp
mov
sbb
in
mov
sbb
sbb
mov
cli
mov
jnp
jmp
addl
pop
adc
repnz
mov
push
sub
xchg
sbb
loope
mov
daa
rcll
fwait
cli
cmp
cmp
iret
retw
mov
mov
es
sahf
jno
in
gs
mov
push
cmp
jg
lds
and
sbb
fcompl
push
outsl
jg
cs
adc
fxch
jp
test
pop
adc
pusha
gs
mov
jp
rcll
sar
adc
mov
mov
inc
pushf
sub
ss
rep
mov
and
sti
jns
jg
jecxz
in
pop
call
movsb
xchg
ficomps
dec
push
lds
mov
das
nop
mov
jmp
pop
sti
lods
iret
adc
cmc
mov
sti
add
outsb
or
dec
test
mov
dec
sub
rcrl
mov
push
hlt
cmp
push
xchg
cmpb
adc
dec
cmp
sbb
sbb
movsb
rcrl
mov
push
mov
sbb
cmp
or
add
sub
fstpl
jnp
xchg
dec
mov
push
jge
pushf
cwtl
js
cmp
xchg
and
into
mov
xor
adcb
mov
test
stos
mov
pop
inc
lcall
lods
jnp
xor
pop
mov
lods
ja
xchg
mov
mov
movsl
push
jle
orl
xlat
call
ss
in
pop
pop
pop
xor
sar
mov
xlat
mov
data16
and
inc
mov
mov
aas
inc
xor
mov
nop
aas
icebp
sub
mov
mov
cmp
fwait
jnp
add
aas
cmp
jnp,pn
mov
leave
sub
inc
mov
fdivr
imul
jno
subl
cs
fstl
pusha
inc
popf
sub
xor
pop
aaa
stos
mov
icebp
or
cmpsl
dec
pop
sbbb
mov
jl
xchg
lods
jnp
hlt
aas
pop
dec
sahf
adc
lcall
sub
sub
lcall
sti
cmp
mov
das
sub
jg,pn
loop
out
dec
testb
inc
mov
adc
ljmp
fldl
sub
out
jo
dec
sarl
xchg
jle
imul
in
stc
ja
in
mov
sub
loop
inc
loopne
cli
cmp
adc
loope
cmpsl
jg
jbe
call
sti
out
mov
rcrl
dec
xor
in
jb
pop
ja
negl
test
jg
mov
out
pop
xor
in
nop
xchg
sbb
xchg
cwtl
add
dec
xlat
lods
loop
pop
xchg
fiadds
mov
gs
movsl
jnp
fisttpll
add
jno
adc
insb
push
xor
fnstenv
xor
xchg
ljmp
scas
mov
pop
ljmp
mov
fdivs
bound
xor
les
testl
or
push
mov
cld
or
cmp
loope
add
cwtl
inc
jle
xor
jae
mov
cmpsb
out
and
cltd
pop
pushf
cs
pop
mov
cli
sahf
out
fwait
mov
sahf
aaa
sbbb
aaa
mov
cmpsb
jnp
xor
aas
movsl
ja
insl
ror
xchg
scas
push
popf
cwtl
repnz
cmp
pop
not
jo
push
xor
lcall
int
rol
mov
fnstcw
adc
pop
fcomps
adc
mov
cmp
pop
aad
pop
xor
dec
mov
mov
fmull
scas
mov
pop
je
mov
push
fdivl
jg
orb
sub
jecxz
rorb
roll
xlat
jns
jo
rolb
add
push
int
xchg
mov
jecxz
push
fs
addr16
adcl
mov
mov
sahf
aas
jp
jmp
mov
jg
pusha
mov
jl
sub
adcb
adc
fdivrl
jp
int
hlt
jge
pop
pop
je
jl
test
or
pop
shlb
and
mov
clc
and
in
sub
or
in
hlt
ret
push
add
or
xorl
pop
add
sub
imul
or
shlb
jecxz
test
imul
fistl
jnp
xor
xchg
jnp
imul
adc
int3
cmpsl
add
mov
out
push
sub
and
lea
rcrl
nop
fwait
rolb
shlb
pop
stos
arpl
lret
pop
mov
scas
sti
add
cli
cwtl
popa
mov
aas
in
pcmpgtd
inc
mov
cmc
pop
add
sub
or
xchg
pop
sub
clc
pop
in
aas
sti
lock
ja
mov
jno
jp
sahf
fsubs
fwait
cmp
cld
mov
dec
push
push
fmuls
shlb
insb
mov
mov
rol
cld
mov
fsincos
std
xchg
into
arpl
mov
int
xchg
sti
jo
push
mov
inc
pusha
movsb
fdivrs
or
pop
sbb
xor
jmp
mov
daa
sbb
dec
sub
xchg
out
pushf
int3
push
ss
icebp
or
jg
sbbl
test
jmp
neg
inc
repz
fmuls
xchg
jns
mov
sub
mov
mov
outsl
pcmpgtb
mov
mov
pop
xchg
nop
shrl
mov
das
push
sbb
and
add
sub
lods
pop
xor
or
insb
jge
jns
inc
inc
les
mov
nop
or
aas
subb
jp
sub
sbb
cmpb
jns
out
sbb
xchg
arpl
jno
repnz
lcall
pop
add
lock
flds
jecxz
enter
sbb
fcompl
vmovq
repz
out
jb
inc
enter
jno
mov
fcompl
cmpsb
fildl
push
xchg
leave
sbb
outsb
cli
mov
or
aaa
mov
ljmp
add
sti
adc
pop
xchg
js
pop
xor
bound
add
push
rol
cli
lcall
mov
popf
dec
mov
lods
outsb
mov
or
imul
jmp
and
icebp
adc
jno
fs
int3
cmp
outsb
leave
arpl
push
das
cmp
inc
rcrl
sbb
sbb
mov
xor
test
fisubl
loope
scas
pushl
mov
push
and
out
mov
sub
aam
adc
cli
fadds
pushf
int
mov
mov
fwait
aas
xor
sbb
push
push
cmc
test
jae
and
movsl
sti
and
stos
fs
xchg
imul
push
es
fsubs
jl
adc
mov
lock
mov
mov
pushl
test
add
clc
ja
pop
negl
dec
cld
xchg
mov
mov
in
std
pusha
fbstp
scas
fidivs
sbb
in
pushf
inc
lret
push
rcll
cs
cmp
call
insb
mov
aas
out
xchg
arpl
cmpl
fwait
mov
js
ds
xor
fildl
xchg
leave
sbb
fcoms
sti
pop
add
jno
fwait
popa
popa
aam
mov
xor
data16
mov
stos
movsb
sbb
xchg
cli
clc
push
pop
rol
cmp
outsb
clc
xor
xchg
adc
and
jp
mov
or
pop
mov
aad
dec
and
cmp
outsb
mov
xchg
push
mov
xchg
adc
mov
lock
shufps
mov
xchg
out
hlt
mov
cltd
push
out
mul
sbb
push
sbb
gs
stc
mov
cwtl
inc
or
ss
les
mov
ds
in
fcompl
add
pushf
out
xchg
loopne
or
pop
inc
sbb
fdivs
mov
test
data16
fsubs
imul
repnz
out
cmp
aaa
fisubl
test
xor
clc
sahf
jle
rorb
cmpsl
shrl
lock
sub
pop
decb
push
mov
pop
pop
movsb
xchg
fdivrs
insl
int
decl
pop
sub
jp
lret
and
pop
shll
xor
push
xor
push
scas
aas
jns
mov
mov
push
loop
lahf
xchg
mov
pop
mov
cmp
cmpsb
push
pop
repz
dec
fiadds
push
adcb
sahf
outsb
mov
pop
cwtl
or
mov
sti
mov
call
outsb
jle
lea
stc
shll
cwtl
xor
in
mov
mov
call
pop
ds
add
push
test
push
scas
add
xchg
es
dec
leave
sub
mov
into
call
pusha
ds
and
dec
sti
and
mov
cmp
or
or
mov
fs
iret
xor
and
mov
mov
xchg
mov
in
xor
std
mov
out
xor
push
js
ret
pop
dec
stos
fwait
aam
cmpsl
cmp
xlat
sarb
scas
push
in
xor
push
outsl
jecxz
arpl
fldt
xchg
mov
pop
pop
fnstcw
jg
in
dec
jle
insb
movsb
inc
pop
adc
mov
lea
outsb
enter
mov
push
xor
adcl
lock
je
in
xorb
fimuls
pop
out
dec
fnstcw
cld
xor
jp
dec
jb
int3
sbb
pop
jecxz
mov
inc
pop
mov
sbbb
mov
scas
dec
xchg
lcall
push
insb
xor
sub
into
xor
int3
pop
loopne
in
test
fsubl
enter
in
repnz
outsl
cmpsb
or
jnp
popa
sub
pop
xor
mov
mov
aad
movsb
jnp
xlat
lahf
fwait
out
inc
outsb
dec
movsb
cs
cli
fadds
clc
rep
sbb
mov
pop
movsl
xchg
push
push
out
sti
or
ds
mov
mov
call
cmc
xchg
adc
shll
sub
xor
push
shlb
cmp
sahf
das
mov
paddd
cmc
aas
in
inc
mov
arpl
scas
fcompl
incl
mov
lds
imul
push
and
loop
stos
mov
cmc
xchg
cmpsl
push
into
dec
out
sbb
popa
les
adc
sbb
xchg
dec
mov
out
shll
sbb
sbb
lods
cmp
lea
insl
push
pop
dec
xor
mov
popf
movsl
mov
jmp
or
xchg
bswap
loope
inc
pop
pushf
das
adcl
mov
mov
cmp
clc
les
aad
in
cld
lret
jmp
sahf
pop
paddusb
out
mov
scas
cmp
aas
test
repz
mov
vaddsubpd
ret
xor
sbb
xchg
popl
cmpsb
vsubpd
dec
push
pop
and
xchg
mov
mov
pusha
aam
lret
fisttps
or
addr16
scas
mov
push
or
lcall
sahf
test
adc
mov
ret
mov
add
movsl
popf
mov
xor
icebp
std
int
subl
enter
sahf
cmp
mov
jmp
sarb
pop
rorb
mov
cwtl
in
sti
sbb
mov
sub
xchg
cmp
js
test
ljmp
mov
insl
shl
cwtl
call
mov
popf
hlt
ror
sbb
mov
pop
pop
aad
cmp
xchg
sbb
xchg
sub
push
sub
mov
pop
push
sahf
insl
mov
cmp
popf
into
cmp
hlt
xchg
inc
pop
decl
mov
orb
jp
mov
lock
sbb
test
xor
movl
push
addr16
add
and
pop
decb
mov
sbb
jae
or
push
adc
clc
lea
sbb
mov
es
movsb
jae
pushf
test
mov
pop
and
mov
mov
lods
jg
inc
mov
ds
mov
mov
mov
xchg
shr
ret
sbb
jle
pop
jb
sub
mov
mov
pop
mov
xchg
fucomi
sahf
ror
hlt
jnp
sub
addb
push
mov
test
movsb
push
mov
mov
out
sbb
lret
jp
mov
lds
mov
daa
cmpsl
jg
mov
jb
outsl
cmpsb
call
xor
push
pop
jl
xchg
dec
fstl
push
mov
stos
xor
movsb
push
cmpsl
jb
inc
mov
jl
rcrb
std
push
sti
out
mov
js
ss
mov
pop
mov
dec
jno
fstpt
inc
popf
nop
jae
push
lret
mov
xchg
ss
jnp
push
add
sbb
mov
sti
adc
scas
insb
ret
bound
out
pop
shr
insl
add
jnp
fiadds
jns
mov
fists
and
dec
popa
rorb
in
addb
pop
sub
cli
loopne
repnz
jbe
mov
aas
add
sbb
cmp
mov
adc
outsl
xchg
sbb
mov
mov
sbb
inc
jge
jnp
cmpsb
fnsetpm(287
out
andb
test
xchg
add
loopne
repnz
jmp
cmp
mov
stc
out
mov
mov
push
arpl
xchg
scas
daa
cmp
and
fcompl
and
out
pcmpeqd
out
pushf
dec
and
cmpsl
fdivrl
bound
xchg
xchg
xchg
aaa
adc
sbb
inc
leave
pusha
jle
pusha
adc
mov
scas
push
out
sub
mov
orl
pop
xor
add
ds
popa
jp
loope
lods
or
incl
adc
sarb
incl
nop
aaa
mov
sbb
incl
fists
sub
iret
push
push
in
iret
xchg
xchg
jnp
push
xor
mov
jg
mov
mov
outsb
ficomps
mov
jmp
jmp
jne
lcall
push
jge
out
cmc
aas
xor
cmp
insl
scas
pop
push
leave
jmp
incl
bound
stos
ficomps
mov
push
dec
scas
dec
xor
lcall
mov
sahf
mov
mov
mov
sbb
cld
mov
sahf
jnp
inc
mov
popa
xchg
aad
into
sbb
push
mov
xor
fadds
mov
popa
mov
mov
push
jne
fwait
es
sub
push
and
ret
mov
rcrl
test
test
addr16
pop
cmp
lea
in
add
out
fdivp
fcom
sub
xor
mov
xchg
xor
mov
imulb
lods
dec
pushf
mov
ret
sbb
cmp
push
mov
mov
jl
sahf
sub
icebp
jbe
nop
sbb
ja
or
cld
or
push
jecxz
mov
jg
pop
pop
ds
mov
ds
aas
pop
ds
idiv
rorl
cmp
fwait
test
test
push
scas
cmp
jl
sbb
cli
iret
jg
mov
and
xor
inc
pushf
cmp
iret
cli
cld
jmp
fdivl
stc
imul
xor
mov
xchg
sbbb
jnp
adc
loopne
fimull
insl
push
inc
or
int
scas
jnp
sub
cmp
daa
mov
mov
or
and
sbb
and
mov
hlt
mov
xchg
mov
cli
iret
stos
test
es
jg
fsubrs
mov
sahf
mov
jmp
lahf
inc
pushf
pop
repz
and
stos
jg
and
out
pop
jo
sbb
repnz
imul
daa
inc
fdivrl
lret
jmp
insl
dec
cmp
sbbb
ret
ret
icebp
adcl
add
aas
daa
cmpsb
jp
test
inc
xor
fcoml
and
decl
cmp
add
pop
orl
mov
ja
je
popl
ljmp
pop
loop
or
xor
lahf
lahf
int3
lahf
pop
cmc
inc
mov
adcl
outsl
mov
push
jg
xchg
or
fistpll
jno
xlat
pushf
push
sub
push
mov
xchg
fstl
jle
mov
and
lods
fsubr
sbb
push
icebp
jp
pop
xor
sbb
movsb
mov
dec
rcll
fwait
xor
pop
loopne
cmp
mov
push
sbb
mov
jno
adc
xchg
mov
sub
ljmp
lods
xchg
shr
pop
jnp
outsl
mov
lret
andb
int3
or
cli
mov
adc
sbb
push
clc
jp
jl
xchg
int
les
popa
mov
mov
cmp
les
mov
cld
inc
push
fwait
pop
cmpsl
lcall
fdivl
xor
dec
cmp
and
pop
dec
inc
ficomps
push
jmp
add
and
out
shll
inc
fnstcw
lock
fwait
ljmp
add
push
pop
xor
rcr
ds
mov
adcl
sbb
and
fimuls
repz
fcompl
xor
test
les
aas
gs
jnp
aas
fiadds
es
clc
loope
fstl
mov
dec
je
jge
sbb
jmp
and
arpl
outsl
push
adc
xor
js
addl
mov
mov
push
stc
dec
cmpsb
decl
push
lods
cmp
jecxz
popa
frstor
adc
fwait
dec
pop
mov
mov
out
into
int3
or
adc
cmp
adc
sub
sub
lods
sti
cs
mov
add
iret
cmp
out
cmp
ret
sbb
mov
jle
ret
add
lds
ret
aam
mov
cltd
dec
fistpl
sahf
sub
pop
repnz
lods
fwait
mov
movsb
cmp
jmp
sti
add
test
push
call
ret
mov
pop
cltd
mov
push
cmp
loopne
hlt
mov
push
icebp
lods
jnp
mov
cmc
push
outsb
cmp
fldt
ja
push
mov
clc
shrb
dec
push
sbb
lret
cmp
out
jle
imul
stos
out
sbb
mov
fdivl
mov
sahf
mov
dec
test
fs
jns
pop
adc
mov
xor
test
mov
fists
pop
das
jmp
cwtl
out
fmull
adc
mov
jle
push
je
pop
fdivrl
add
jp
cmp
pop
dec
aam
dec
or
stos
fs
je
or
cli
sbb
clc
das
das
stos
jb
cmp
rcrl
pushf
sbbl
ffree
push
dec
icebp
cmp
ret
cwtl
and
dec
fcoms
push
and
in
clc
mov
hlt
cmp
dec
leave
test
xchg
ret
cli
pop
mov
sbb
fwait
xchg
xchg
stos
xchg
pop
sbb
fidivl
aam
sbb
out
sub
aas
dec
inc
mov
xor
aad
mov
sbb
xor
sarl
jnp
lcall
dec
sbb
repz
lret
xchg
dec
int3
xchg
fistpl
xor
leave
mov
inc
push
dec
out
sub
das
cmp
fs
clc
mov
adc
mov
jae
jg
pop
loop
or
or
out
test
fsubrs
sbbl
aas
push
into
lahf
and
frstor
pop
lea
test
in
dec
js
mov
sub
add
aas
add
push
sti
rcrb
aas
or
mov
pushf
mov
xchg
mov
dec
mov
sub
cmp
fs
repz
add
mov
in
fcomi
jg
jo
jp
jl
jnp
lahf
mov
dec
jmp
mov
sbb
ds
dec
jns
sbb
mov
mov
mov
ljmp
fisubrs
fwait
pop
jge
in
push
in
std
or
mov
xor
das
sbb
movsb
mov
rclb
xchg
cmp
or
push
pop
and
outsl
push
mov
lea
inc
cli
mov
arpl
jp
adc
adc
jb
xor
mov
mov
cmp
fcomp
adc
ljmp
inc
movsb
xchg
push
scas
xchg
cmp
repz
clc
in
and
jle
inc
sub
adc
int
push
hlt
inc
sahf
inc
insl
in
and
sbb
xor
and
aas
cli
jl
imul
std
cwtl
aas
lret
add
pop
into
sbb
sbb
imul
js
push
rcrl
ss
cmpl
stc
mov
fadds
cli
push
jg
cmp
test
pop
jo
jmp
mov
jns
roll
mov
mov
inc
mov
fwait
push
leave
xchg
mov
push
sbb
jno
or
cltd
cwtl
mov
ss
cli
xor
clc
movsb
cmc
and
jmp
popf
dec
cmp
mov
lock
ja
sbb
lret
push
repz
sti
mov
push
in
mov
push
mov
loope
mov
or
fldcw
arpl
fnstenv
fidivrl
lea
and
pop
mov
push
cmp
lea
ficoms
in
mov
xor
xor
xor
or
repz
cmp
mov
clc
clc
ret
cli
into
mov
rcll
ficompl
in
push
cltd
insl
xchg
lea
fcompl
pop
adc
sbb
mov
outsl
mov
dec
in
mov
inc
sub
inc
xor
dec
jle
sbb
inc
sbb
dec
into
cmp
pop
add
sub
out
leave
lods
rclb
mov
mov
xor
push
adc
sub
aaa
repz
jb
xor
in
std
sbb
addr16
pop
jle
cmp
mov
dec
mov
xchg
sti
inc
cmpsl
push
mov
adc
icebp
fcoms
and
inc
jl
sub
cmp
shlb
dec
cmp
mov
mov
nop
je
mov
push
ljmp
and
iret
sbb
sbb
push
scas
test
ja
ds
mov
ffree
sbb
push
cli
jns
push
pop
pop
pushf
aad
jge
stc
dec
inc
inc
loop
rolb
dec
or
add
jne
mov
stos
mov
hlt
xor
int
mov
lea
shll
in
mov
lret
rcrb
inc
mov
aaa
sbb
cmpl
cmp
ficoml
sbb
mov
pop
mov
xor
or
mov
jnp
aaa
adc
inc
shrl
or
fsubl
cmp
and
sbb
xor
cmpb
push
in
aas
out
scas
fcmovnu
pop
pop
mov
ret
in
cmc
decl
mov
sbb
sbb
or
test
mov
sub
xor
lds
fdivrl
sub
nop
mov
in
in
inc
je
cmp
pop
out
daa
mov
xchg
adc
sti
sbbb
enter
add
dec
mov
adc
sahf
cwtl
sub
push
aas
xchg
cwtl
mov
std
mov
fxtract
jmp
icebp
add
out
xchg
xchg
or
popf
jge
lahf
outsb
sbb
ds
int
sbb
ds
test
mov
jmp
adc
ss
mov
xorb
call
std
gs
mov
leave
sbb
hlt
ds
shrb
xchg
sbb
ja
fisubrs
je
leave
popf
dec
xor
insl
mov
and
insb
roll
pop
pop
dec
or
iret
xor
dec
add
add
int3
pop
push
mov
mov
push
fs
pop
ret
loop
dec
cs
imul
in
mov
sbb
jb
rolb
sub
mov
mov
fucomip
hlt
sbb
jb
sbb
jno
xor
mov
out
mov
sbbb
std
mov
cmp
outsl
mov
fdivl
mov
cmp
push
ds
popa
sahf
dec
push
inc
mov
ret
add
nop
in
dec
push
and
pop
insb
pop
pop
sbbb
push
lds
xor
sbbb
jae
cmp
pop
es
add
scas
pop
jb
rcrb
pop
nop
leave
popa
scas
fucomi
add
xchg
pop
test
sbb
fsubrs
jnp
inc
xchg
cld
sbb
or
icebp
fsubs
jp
pushf
push
cs
mov
in
dec
mov
dec
scas
dec
inc
lea
out
mov
in
and
xchg
push
fimuls
stc
push
mov
adc
push
imul
adc
and
push
or
pop
adc
jbe
mov
push
fxch
aaa
mov
sub
push
mov
andl
mov
fwait
sub
dec
test
jge
mov
mov
xchg
mov
mov
mov
sub
gs
mov
daa
minps
cmp
cmpsl
movsl
mov
mov
je
pop
lds
fdivl
mov
push
dec
in
inc
movb
pop
data16
ljmp
pop
xchg
jno
pushf
rclb
loop
xchg
or
cmpb
pop
add
cmp
sbb
call
rolb
popa
and
int
andb
xchg
xor
cmpl
or
sbb
dec
pop
test
fwait
popf
sub
cmp
jno
cwtl
cwtl
out
cmpsb
xor
mov
mov
fnstenv
gs
adc
out
adc
adc
aad
mov
scas
or
mov
fadd
shlb
mov
jle
pop
shlb
cmp
fnstcw
pop
leave
loope
mov
mov
inc
cmpsb
call
add
pop
push
inc
stos
incl
pop
add
neg
mov
pand
push
xor
nop
sbb
ret
scas
orl
jle
adc
mov
in
mov
inc
sbb
or
cwtl
loope
nop
fdiv
mov
imul
pop
mov
aas
outsb
mov
mov
sti
into
push
mov
cwtl
pushf
rcrb
or
and
ror
sbb
subl
push
fstl
lea
fisttpll
xor
mov
lods
push
test
popf
iret
daa
call
dec
in
xchg
pop
and
fistpl
fcmovnbe
or
pand
push
jmp
push
mov
jno
push
test
add
cmc
movsl
lret
fs
inc
mov
pushf
push
iret
pop
fcoms
aas
dec
cmp
sti
out
dec
push
sub
mov
sbb
add
xchg
popf
loop
jae
ret
pop
mov
push
in
jmp
es
mov
push
lods
or
ret
cmp
mov
enter
xchg
push
cmp
push
rcr
decl
adc
mov
fcomps
adc
icebp
sbb
enter
push
subb
jp
in
push
cli
outsl
in
sbbl
jg
call
sbb
push
lret
fwait
mov
jnp
fmuls
or
in
xchg
xchg
ds
adc
test
fidivrl
pop
jp
dec
insb
pushf
scas
mov
ret
insb
and
enter
leave
adc
ret
mov
test
pop
int
stos
pop
ds
mov
test
cwtl
enter
test
adcl
push
fcoml
jae
lea
cmpsb
push
push
ljmp
fucomip
dec
fdiv
adc
xchg
xlat
movsl
subps
lea
jno
cmp
mov
and
adc
and
lahf
adc
scas
imul
jp
mov
test
sahf
mov
out
cltd
inc
or
jo
in
mov
movsb
mov
sbb
addr16
int
ljmp
mov
fimuls
pushf
fmuls
js
xchg
jl
sahf
add
daa
sbb
mov
scas
dec
dec
push
mov
pop
add
icebp
sbb
pop
dec
call
push
ljmp
push
fsubp
add
lcall
outsb
ficoms
dec
cmp
mov
cmpsl
sub
pop
add
push
push
stc
xchg
or
xchg
aaa
fidivs
out
adc
xor
mov
and
mov
fcomps
push
test
sbb
rorb
ficomps
cld
leave
in
push
jbe
andb
sbb
mov
xchg
mov
fsubrp
jg
inc
popf
sub
cmc
mov
cmp
pop
fwait
adcl
rcll
pop
pop
mov
pop
pop
fs
pop
mov
cmp
adc
fildll
pop
pop
cwtl
aad
jns
and
mov
ret
sbb
push
ja
lock
mov
into
cmpsl
xchg
jmp
mov
scas
sti
cs
adc
jle
mov
or
xchg
loope
sbb
xchg
fwait
adc
cmp
xchg
adc
adcl
fwait
mulb
xchg
cmp
es
mov
ficomps
lret
cmpb
jb
leave
xchg
sub
aaa
and
test
fstp
repz
dec
outsb
xchg
js
push
pop
or
cwtl
sti
add
xor
fdivrl
cmp
push
nop
movsl
dec
fisubrs
sub
cmp
mov
jne
mov
mov
jmp
sarl
out
sbb
into
insl
hlt
jg
mov
and
pop
pushf
cmp
cwtl
inc
mov
push
sub
push
cmp
jae
jecxz
les
mov
ss
lret
hlt
stos
jbe
insb
jno,pn
into
cmpb
mov
popa
cmp
sbb
mov
scas
lea
loope
lcall
sbb
mov
mov
es
xorl
js
mov
filds
pop
stos
dec
inc
push
cli
mov
pop
or
cli
push
pusha
outsl
in
add
or
mov
xchg
aas
or
repnz
out
insb
mov
outsl
or
js
lods
lock
sbb
fisubrl
mov
cmpsb
adc
mov
out
push
push
or
or
push
roll
and
push
fs
or
ljmp
or
push
push
push
jecxz
pushf
and
je
dec
icebp
leave
or
mov
mov
add
flds
imul
test
xor
cmp
cmc
test
out
mov
jmp
push
cli
insl
cmp
popf
pop
xchg
push
or
inc
mov
xchg
jne
sbb
aam
inc
sub
pushf
sbb
cs
int3
aad
andl
aam
dec
xchg
sbb
and
and
mov
ffreep
stc
fadds
mov
dec
imul
out
popf
dec
mov
adc
sub
aaa
stc
cmp
leave
inc
kxorb
out
mov
clc
pop
stos
fnstsw
gs
add
mov
xor
mov
out
mov
dec
orl
jecxz
xchg
shr
pop
pushf
gs
das
addr16
clc
push
imul
push
sahf
jmp
push
shlb
cmp
pop
bound
imul
lret
cli
pop
cs
add
adc
sbb
je
pop
dec
xchg
mov
lock
pop
push
adc
add
sbb
lahf
imul
push
or
repz
inc
mov
cld
cmp
out
pop
adc
addr16
sbb
cmp
ret
into
xchg
out
cltd
ljmp
jmp
jno
out
xchg
aaa
jnp
aas
inc
cwtl
lock
xor
mov
pop
sub
push
mov
sbbb
stos
ds
fistps
mov
jns
mov
mov
mov
sub
data16
adc
clc
int
jle
shrl
inc
call
outsl
leave
std
jle
rcll
movsb
imul
xor
shlb
sub
pminsw
cmpsb
pop
outsl
adc
or
mov
jno
rolb
pop
mov
pop
pop
arpl
mov
mov
pop
jo
pushf
ljmp
into
jecxz
xchg
outsl
scas
xchg
mov
shll
in
lret
lods
jnp
stos
adc
in
loop
out
hlt
gs
cld
cmpsb
mov
fs
loopne
fldcw
push
aam
hlt
test
lock
cmp
sbb
xchg
lods
arpl
lret
push
add
lahf
sbb
gs
andl
xchg
mov
xor
pushf
push
jg
xchg
icebp
push
rol
in
xchg
xorl
jg
in
int
incl
xchg
aas
in
or
and
push
pushf
movsl
and
push
ficompl
lret
mov
add
dec
loopne
fadd
add
aas
pusha
pop
mov
xchg
push
xchg
dec
cs
out
xchg
jo
out
mov
data16
shlb
fwait
mov
xor
cmp
call
pop
pop
shrl
lock
dec
mov
sub
out
pop
addr16
xchg
push
sbb
imul
pusha
cwtl
mov
pushf
loopne
fwait
pop
cmpsb
fcmovnu
add
dec
mov
aam
jo
sub
sarl
sub
mov
xor
mov
add
std
xchg
sbb
popa
jp
ficoml
mov
fdivrs
ljmp
test
jnp
mov
test
lea
out
mov
jns
ljmp
pop
iret
sbbb
inc
and
loope
push
faddl
daa
cmp
and
pop
mov
scas
xchg
cwtl
jmp
lods
sbb
mov
and
xor
jg
icebp
out
adc
cmp
popl
jg
mov
repz
inc
mov
or
sub
fmull
dec
cltd
xor
sti
je
stos
idivb
inc
and
jno
dec
movsb
jbe
fstps
test
fwait
mov
aad
in
jmp
mov
aad
and
pop
dec
fisttpl
fmuls
lret
cmp
sbb
fadd
outsb
popa
sub
add
lcall
cmp
inc
icebp
fcomp
out
jnp
pushf
int
leave
imul
pop
rcll
jmp
and
cmp
jg
ret
sbb
adc
sbb
cmp
sub
lods
scas
adc
ret
pop
fstl
dec
popa
dec
push
xchg
sti
out
das
insl
mov
add
daa
shrl
sbb
repz
add
jns
push
and
mov
dec
jbe
mov
xchg
mov
outsb
cmp
push
call
mov
pop
mov
adc
xchg
ret
jnp
xchg
enter
je
pop
clc
pop
gs
inc
push
loope
pop
in
aad
push
insb
lock
pushf
sub
pushf
mov
rolb
mov
sbb
out
dec
mov
jp
iret
je
arpl
xchg
push
jge
mov
fsubr
and
and
loop
pop
jle
sbb
sub
and
xlat
or
jp
dec
jmp
jne
shl
jl
adc
sbb
in
jmp
sbb
xor
mov
add
jmp
aas
or
je
adc
fstps
sbb
adc
adc
ss
mov
imul
cmovae
hlt
or
mov
aad
aas
ret
aas
jbe
jmp
jno
fucomip
cmpsl
jle
xchg
mov
movsl
lods
jno
push
jnp
inc
jg
push
xchg
jmp
adc
insl
xchg
popf
push
pushf
ss
or
xor
pop
fildl
sub
fnsave
lret
mov
ret
jno
cmp
cltd
sti
outsb
adc
push
repnz
cs
sub
lods
mov
mov
pop
sbb
out
fdivrl
lret
outsb
repz
or
mov
sbb
mov
aas
hlt
lods
mov
setp
cmp
cwtl
icebp
inc
insb
mov
fsubrl
mov
push
cmp
xchg
sbb
test
sub
data16
push
movsb
addb
or
pop
sbb
addl
jns
sbb
cld
int
sbb
jle
mov
lahf
rcrb
ret
mov
sahf
outsb
pusha
sub
dec
sbb
loopne
xor
scas
jg
pushf
inc
imul
iret
xchg
mov
jg
aas
fldt
cmpsb
test
dec
sbb
pop
mov
aad
mov
popf
imul
mov
xchg
push
jmp
in
pop
cwtl
jge
pop
mov
pop
fidivs
and
and
and
mov
cmp
movsl
movl
pop
push
ds
out
mov
jg
jo
jp
shl
loopne
mov
mov
inc
fnstcw
xor
sbb
push
mov
sbb
jmp
jecxz
popl
aas
iret
or
loope
jp
jnp
arpl
sbb
mov
xchg
into
mov
mov
mov
sub
mov
xchg
xchg
push
ret
cwtl
mov
imul
aam
int3
or
aaa
mov
pusha
mov
pop
cmp
sub
movsl
fbld
pop
inc
ret
sbb
rclb
pop
xchg
jl
pushf
cld
or
ret
sub
pop
cwtl
pop
push
inc
mov
inc
fwait
pop
decb
cs
adc
pop
outsl
int
dec
aas
pop
xchg
dec
xchg
xchg
xor
out
mov
or
ss
add
in
lea
jp
int3
cmp
adc
xchg
sbb
notb
mov
add
xlat
adc
pop
das
jne
jg
xchg
cmp
xor
lock
or
fwait
sbb
addr16
mov
pop
fs
stos
iret
hlt
fadd
call
lods
cld
mov
enter
sbb
lahf
or
jl
cmpsl
push
ja,pt
mov
or
push
jne
mov
roll
or
stc
js
mov
cmp
xchg
cmp
test
lock
ret
cmp
pop
inc
xchg
cmp
cmp
or
lret
push
icebp
dec
loopne
test
xchg
fldt
mov
cmp
mov
ljmp
sbbb
mov
mov
pop
data16
fmull
or
test
cli
xor
xor
sbb
xlat
jae
cmp
push
test
push
push
sbb
loope
dec
stos
sbb
xor
in
loop
xchg
repnz
pop
dec
repz
inc
xchg
cmp
ljmp
push
xor
sbb
cmpsb
cmp
jb
xor
test
xchg
repz
jmp
mov
pushf
inc
ret
sti
into
imul
jg
dec
push
pop
mov
cwtl
hlt
sarb
fs
rol
scas
sub
mov
mov
xchg
enter
stos
mov
cld
xchg
sti
jb
out
sbb
adc
push
and
xchg
jnp
dec
push
in
xchg
repnz
mov
dec
lret
inc
js
cs
xor
sbb
nop
in
cmp
and
jl
jp
fdiv
mov
jg
sbb
call
jno
fs
xchg
lahf
lods
imul
xchg
mov
test
das
add
jmp
inc
movsb
pushl
sub
hlt
adc
in
adc
sub
lods
push
push
add
push
mov
and
sbb
call
in
pop
mov
xor
or
mov
fidivl
inc
cmp
int
scas
push
subb
lcall
jno
push
popf
sbb
sbb
pop
icebp
aad
pop
js
pop
movsl
dec
mov
dec
mov
push
mov
cs
dec
or
ret
out
sub
lea
movl
outsl
aad
push
mov
and
mov
and
pop
aam
or
jecxz
mov
mov
sbb
enter
subl
ror
stc
loopne
iret
jnp
sbb
or
aad
popa
lods
cmp
sbb
out
pop
mov
sbb
ret
mulb
inc
push
jnp
pushf
sahf
rcrb
push
pop
filds
fadd
push
lahf
pop
into
xchg
cmp
std
pop
push
xor
loop
scas
cmpsb
cmp
add
cmp
inc
daa
push
cmp
clc
dec
and
pushf
es
es
cmp
dec
rorl
ret
enter
adc
mov
jmp
fdivl
rcl
fcompl
mov
push
jl
inc
fisubs
add
jl
xchg
sbb
jnp
or
xor
rorl
jns
sarl
sti
mov
sbb
push
xchg
jae
daa
pop
xor
cli
test
pop
sbb
and
mov
out
shlb
sbb
scas
xchg
ret
fxam
mov
addr16
ja
sti
sahf
pop
in
inc
sbb
aas
repz
lret
out
jae
sti
call
ja
scas
inc
sbb
pop
imul
andl
lods
int3
xchg
lock
mov
sbb
adc
mov
in
pushf
xorb
int
add
sbb
mov
push
leave
lahf
xchg
out
xchg
xchg
pop
mov
imul
pop
dec
pop
cs
cmp
test
in
pop
jno
addr16
gs
sub
and
pop
jle
push
shlb
mov
xchg
icebp
enter
cmp
subl
test
xorl
andb
sbb
pop
mov
mov
mov
imul
dec
lar
or
loop
and
inc
dec
pop
ficompl
gs
lds
cwtl
dec
cmp
fildll
jge
sarl
int3
jg
cltd
sahf
cmp
test
mov
push
popa
divl
fwait
nop
or
iret
shrb
stos
fucomip
jg
stc
pop
mov
stc
jb
rcrb
rorb
les
sbb
clc
add
push
rcrl
add
mov
lret
mov
js
xchg
push
outsb
mov
mov
push
into
add
xor
cmpsl
mov
add
pop
std
adc
sti
jmp
fdivl
adc
inc
js
fisubrs
ret
das
xchg
push
sub
mov
cmp
pop
lahf
into
cmp
lahf
fadds
lcall
xor
fcoms
loop
arpl
in
aam
jb
loopne
jnp
add
and
add
pop
cmp
sbb
scas
xor
and
adc
pop
cs
push
movzwl
or
xchg
sub
scas
fcoms
cmp
in
jle
push
jnp
or
movsb
repz
out
cmp
incl
sbb
leave
imul
pusha
das
jae
insl
sub
sbb
or
jge
cmp
rorb
xchg
cmp
dec
mov
cmp
mov
xchg
mov
xor
int3
fiaddl
stos
sti
outsb
iret
cmc
jecxz
std
xor
pop
das
xor
push
jle
push
push
es
push
jno
mov
insl
adc
mov
mov
addr16
aad
inc
sarl
push
cmpsb
mov
pop
mov
push
js
mov
sti
pop
cmp
loope
mov
cli
cwtl
insl
mov
dec
push
lds
shlb
outsb
lret
pushf
xor
sbb
jg
jecxz
dec
dec
je
mov
leave
fnstenv
and
loopne
sbbl
sti
pop
and
rcrl
and
cmp
mov
xchg
data16
cwtl
push
push
and
pusha
jp,pn
xchg
mov
inc
scas
test
push
sbb
popa
test
mov
pop
adc
cmpsl
fistl
push
dec
ret
jnp
mov
mov
pop
pushf
fs
fmul
loop
arpl
xchg
sti
xor
decb
jbe
mov
testl
imul
fldenv
fcomps
adc
cmpsb
cmp
jae
dec
xchg
xchg
dec
sub
push
icebp
inc
jmp
mov
clc
fwait
cmp
push
and
jp
cli
add
adc
lret
adc
dec
iret
int
pop
dec
jmp
add
roll
fmull
mov
inc
fiadds
test
or
and
sub
ret
push
cmc
addr16
or
shll
jmp
dec
dec
cmpsb
pop
fiaddl
cli
pop
incl
jecxz
xchg
ret
cwtl
xchg
inc
cld
popl
dec
and
mov
pushf
sbb
lret
add
mov
lret
loope
cmpsb
mov
sti
cmp
fisttps
das
fidivs
fwait
jo
cli
push
insb
call
xchg
ljmp
ret
push
mov
bound
add
faddl
inc
ror
mov
cmpsl
stos
orb
fwait
sub
mov
jp
mov
ss
and
shlb
pushf
jg
jl
jo
fnstsw
popw
sbb
in
push
push
cwtl
cwtl
ds
rcrl
shrl
imul
in
jb
scas
ljmp
mov
rclb
inc
sbb
lods
jae
mov
mov
mov
sti
push
out
add
inc
push
add
xor
cwtl
cwtl
into
mov
int
in
int3
scas
ret
insb
aad
fsubs
or
nopl
dec
rcrl
sbb
jp
mov
fwait
cmp
rorb
sti
lods
pop
mov
push
sbb
push
incb
outsb
sbb
jne
mov
jnp
push
inc
int
popa
rorl
addr16
or
jno
pusha
test
jl
mov
push
and
and
cld
xchg
push
leave
sub
mov
cmp
push
pop
std
pop
in
fwait
dec
sbb
or
mov
pushf
mov
fstl
pop
or
jnp
and
xchg
ret
mov
jns
pusha
mov
test
jp
stos
fsincos
cli
jb
xchg
aaa
mov
fldcw
jl
out
cwtl
mov
stc
mov
cmp
pop
ljmp
or
sbb
pop
xor
and
lock
xchg
sbb
sbb
mov
jb
sub
xchg
into
pop
nop
sbb
inc
in
sbb
and
push
dec
imul
fsubrl
sbb
mov
stc
inc
jg
loop
cmp
dec
lret
dec
pop
test
mov
adc
les
test
ja
loopne
mov
jae
cmovo
jge
mov
pop
mov
mov
mov
test
aas
dec
rep
cmpb
jnp
aaa
add
pop
repz
and
mov
idiv
out
xor
push
jo
das
mov
clc
cmpl
sti
pop
lret
iret
loopne
ds
das
xchg
sbb
dec
fadd
adc
pop
cld
cmp
pushf
mov
cmp
incl
xchg
call
mov
mov
iret
in
mov
mov
int
jmp
sbb
fwait
cmp
loop
dec
and
in
fstpl
jae
sbb
fwait
js
enter
pop
out
std
jmp
jl
ds
push
mov
sahf
iret
mov
into
cmp
call
ret
std
out
pushf
or
push
inc
xor
xchg
add
call
in
dec
stos
lods
insl
lods
cmpl
rol
cmc
sbb
test
add
xor
sub
loopne
jbe
je
cmp
mov
jo
dec
xchg
lret
int3
fimuls
repz
sub
sub
sti
mov
addr16
fadds
adc
les
jp
xchg
or
cmp
xor
loope
add
stc
sbb
mov
mov
cld
decl
nop
sti
bound
mov
dec
pop
xchg
fsubrs
rol
push
mov
xor
pop
cmc
xchg
in
mov
fdivrs
fildl
xlat
xchg
or
pop
test
pop
loop
sti
cs
sub
fidivrs
stc
icebp
out
popa
lret
aas
or
addr16
shrb
insb
sarl
aam
sbb
lock
arpl
sub
jl
mov
sbb
mov
mov
jnp
pushf
dec
ret
jmp
jl
stc
mov
lahf
arpl
imul
hlt
scas
paddusb
ret
movsl
aad
xchg
and
fistps
lods
dec
jo
or
call
push
fsubr
push
out
pop
push
jb
mov
ds
pop
sub
call
sarb
jne
lods
mov
fsubl
mov
add
or
mov
mov
inc
outsb
sub
movsl
or
pop
push
mov
js
test
pop
decb
aaa
mov
nop
cmp
mov
jae
aam
jge
add
jns
in
cmp
jae
aaa
aas
fnstcw
push
sub
fiaddl
lret
mov
ja
daa
movb
aaa
pop
hlt
xor
mov
test
lret
jle
out
add
pop
enter
clc
test
sbb
arpl
cmp
mov
faddl
dec
jge
and
cmp
cmp
loop
cmp
loopne
ret
push
mov
xchg
pop
inc
jecxz
pop
imul
lods
mov
adc
mov
mov
push
clc
mov
dec
xlat
inc
mov
mov
bnd
outsb
cwtl
adc
int3
test
xor
ds
cwtl
dec
add
dec
fdivr
sub
jl
jo
mov
movl
fisubs
pusha
push
cmp
mov
add
xor
scas
cmp
scas
inc
lea
lods
push
xor
jno
cmpsb
outsb
cld
jae
cmc
pop
ds
pop
mov
xchg
jmp
xor
mov
sbb
test
mov
scas
out
shll
push
pop
shl
arpl
mov
cltd
rcl
push
fcoml
les
mov
in
cmp
fistl
mov
cmp
add
xchg
sbb
inc
shrb
pushf
clc
popf
push
inc
or
fdivs
sbb
sbb
lret
and
push
or
pop
jg
inc
pop
adc
lds
hlt
xchg
scas
cmp
js
imul
push
mov
mov
jns
mov
negl
mov
adc
pop
jbe
daa
add
fldcw
sbb
cmp
and
push
push
mov
mov
fmul
imul
addr16
pop
fiadds
mov
cmp
fnstcw
mov
ret
xchg
lds
push
inc
pusha
sbb
fsubs
movsb
push
xchg
fsubrl
fcoml
cmp
mov
iret
mov
pop
lods
xor
and
fidivrl
mov
or
pop
pushf
flds
xor
mov
xor
push
cmp
xor
out
or
test
inc
dec
cmpsl
cmp
mov
push
jmp
dec
cmc
sbb
in
iret
cvtdq2ps
jno
cmp
cmpl
scas
push
or
pop
jle
incl
fdivs
xchg
inc
adc
rol
adc
or
dec
xchg
push
pop
insb
rcr
out
mov
mov
movsb
stc
test
movsb
sbb
or
stos
jnp
je
pusha
jmp
mov
push
stos
pushl
dec
jo
sbb
lods
mov
sbb
cmp
sbb
test
dec
inc
mov
push
or
xchg
push
xor
pop
outsb
scas
mov
fistl
fiadds
pop
iret
xor
add
inc
jg
fs
popa
mov
push
mov
sbb
pop
mov
fdivs
cli
sbbb
stos
jne
int3
pushf
or
rolb
cmp
scas
push
sarb
and
pushl
jp
test
fsubr
pop
pop
cmp
mov
stos
mov
mov
dec
push
sbbl
and
and
ja
cmp
sub
lds
insb
and
and
mov
add
popa
lods
sti
sbb
push
std
int3
lret
je
mov
and
mov
pop
push
ds
add
dec
cmp
insl
add
sbb
mov
mov
xchg
cmp
in
push
rol
mov
jmp
add
mov
inc
mov
movsl
push
sbb
repnz
adc
mov
push
cmp
mov
loope
pushf
cwtl
cltd
push
pusha
lcall
in
pop
out
and
ret
sbb
stos
test
mov
clc
cmp
sbbb
xchg
rcrb
std
cs
jge
mov
and
sub
mov
scas
push
cmpsb
mov
lds
daa
jae
and
cli
mov
cmpl
mov
sbb
add
cmpl
jbe
sub
jne
test
arpl
je
pop
mov
push
sbb
jo
dec
mov
lcall
sbb
cmp
insl
mov
add
ficoms
pop
fadds
sbb
shll
stc
fsubr
jl
fldenv
adc
shl
fdivl
dec
xchg
pop
inc
mov
dec
mov
aas
jp
dec
cli
sbb
out
cmpsl
mov
mov
xchg
sbb
cli
inc
lcall
scas
sbb
cmp
rorb
aam
test
outsb
cli
daa
gs
fmul
mov
dec
mov
mov
sbb
and
sub
and
iret
movsl
aas
out
lods
mov
pushf
push
mov
mov
js
movb
sbb
rorb
les
jnp
fmuls
pop
xor
add
in
test
testl
mov
lds
xchg
jge
inc
aam
gs
mov
jbe
jg
iret
je,pt
sub
lret
jb
adc
adc
sub
js
or
jle
dec
sub
cmp
test
sar
inc
xchg
mov
dec
jb
or
mov
inc
data16
pop
dec
adc
movsl
fists
mov
ja
flds
das
mov
pusha
mov
fadd
mov
and
cs
cmpsl
add
push
aam
fstps
test
lds
add
jg
stc
sbb
das
sahf
jnp
add
shll
xor
aam
jp
scas
out
sbb
aaa
xlat
dec
test
adc
mov
pushf
insl
fadd
fstp
sub
roll
sahf
pushf
push
mov
mov
xchg
pop
je
push
xchg
lea
in
cmp
mov
test
pop
inc
jns
sbb
popf
ret
je
sahf
mov
jecxz
arpl
loop
shlb
out
sub
adc
mov
sbb
add
lahf
aas
mov
mov
mov
clc
xchg
arpl
mov
mov
les
xor
test
lcall
fistl
pop
scas
lock
mov
cwtl
dec
jno
aad
fists
ficompl
or
pop
leave
mov
xchg
cs
lret
aaa
mov
mov
int3
xchg
pop
call
mov
mull
aaa
stos
and
xchg
cmp
call
adc
xchg
fsubs
push
xor
sbb
mov
jae
into
pop
fisubs
xchg
fsubrs
cmp
pushf
aam
jns
dec
icebp
add
loop
inc
out
iret
lcall
cld
aas
cmpsb
cmp
pop
sti
out
in
scas
mov
bound
jae
adc
mov
and
push
fsubrl
ds
sti
add
decl
ds
out
mov
push
and
fidivrs
mov
sbb
pop
std
jbe
inc
mov
sub
les
mov
xor
mov
ja
mov
inc
adc
push
fsubrs
inc
lea
pop
scas
es
pushf
mov
sbb
inc
shrl
mov
xor
jmp
loope
mov
mov
dec
mov
sub
mov
hlt
and
xor
imul
mov
add
mov
jno
cli
sbb
and
push
loope
ret
push
inc
sbb
xchg
mov
pop
cmp
lcall
idivl
popa
jnp
pushf
inc
movsb
and
xlat
sub
mov
and
shll
pop
mov
jo
inc
cmpsb
jnp
jae
add
push
jle
push
scas
fidivrs
ljmp
jae
xchg
mov
mov
fistpl
cmp
and
mov
mov
jbe
les
xchg
cmp
sbb
or
xor
leave
or
fsubp
mov
daa
push
adc
dec
iret
fcoml
out
sbb
shl
cmp
aaa
and
mov
jp
jle
mov
lcall
cmp
imul
dec
repz
in
sub
sbb
xor
insb
and
popf
dec
add
pop
xlat
jne
js
into
push
jp
sahf
stos
mov
mov
cmpsb
shll
mov
fidivs
add
leave
cmp
in
mov
dec
xchg
fstps
leave
sar
fadds
xor
sbb
ret
sahf
mov
in
dec
jne
mov
push
cmp
cmc
scas
mov
pop
pop
int
mov
fldcw
rolb
mov
cs
push
sbb
adc
mov
jg
testb
daa
leave
fs
mov
pop
mov
stc
cmp
push
add
inc
mov
ret
jnp
jnp
xor
jmp
sub
dec
cmp
sbb
add
mov
lret
lcall
rcll
or
insl
cmp
inc
mov
in
test
push
dec
inc
dec
push
mov
mov
lret
in
nop
movsl
imul
mov
jge
jo
stc
sbb
sbb
or
xchg
ret
aas
outsb
flds
andl
into
pop
fsubp
cwtl
adc
cmp
mov
inc
loope
ja
push
sbb
push
lods
cmpsb
mov
sbbl
dec
lock
fadd
je
pop
add
jle
cmpl
imul
out
sbb
pop
cmpl
adc
js
lcall
pop
imul
movsb
lcall
cmc
push
mov
lahf
je
iret
mov
das
xor
out
loope
rcrl
rclb
pusha
sub
cmp
aam
add
insl
xor
dec
in
out
lods
iret
lcall
jbe
in
xchg
sbb
xchg
cld
or
fmul
mov
pushf
add
rcr
jne
fsubs
jbe
rcl
stc
dec
mov
aas
dec
xchg
outsl
call
je
scas
jg
out
lcall
out
cmp
inc
mov
jno
jle
add
jecxz
pop
jle
cmp
mov
out
mov
in
int3
daa
inc
fs
sbb
bound
int3
call
xor
fisttps
mov
aad
dec
fildl
movsb
mov
or
mov
mov
cli
push
dec
rcrl
sbb
loope
jmp
sbbb
jmp
adc
lds
mov
fnstcw
sbb
mov
jg
push
stos
test
inc
mov
cld
mov
dec
cmp
lods
push
adc
sbb
add
pushf
ror
call
mov
sub
mov
jb
repz
pop
mov
clc
cmpsb
add
jp
add
outsb
popl
ret
cmpsl
xchg
lahf
ret
lahf
jle,pt
xor
incl
mov
pop
pop
xchg
fsubrs
or
inc
ret
dec
fdiv
xchg
push
outsb
xor
jmp
fsubrs
std
jmp
mov
fsub
cwtl
mov
mov
sub
add
mov
repz
mov
pushf
mov
sbb
cmc
std
sahf
dec
inc
jno
mov
shl
jnp
push
rolb
xor
xor
cmpsb
ljmp
bound
xlat
jmp
loop
and
xor
mov
loop
leave
ja
add
sbb
repz
fidivs
cmp
stc
push
pusha
xor
fdivrs
inc
dec
xor
inc
cmpsb
push
ds
negb
mov
cmp
cmc
mov
or
sbb
cmp
cmp
dec
inc
out
pop
sbb
and
into
mov
stc
mov
fisttps
scas
xchg
lret
adcl
ds
or
mov
adc
mov
ja
cli
jl
test
lods
es
pop
mov
and
aad
jne
cwtl
nop
out
hlt
push
test
fnstcw
aad
fadds
movsb
fcomps
cmpsl
sub
mov
jns
les
mov
inc
in
sarb
scas
mov
popa
dec
shlb
arpl
cli
adc
mov
xchg
push
pushf
test
jne
nop
int3
mov
cmpl
mov
test
inc
xchg
sbb
mov
dec
xchg
xchg
call
jl
lock
lds
and
jmp
fidivrs
mov
int3
fdivl
pop
sbb
imul
fmuls
scas
pop
jb
xor
mov
dec
jp
ja
inc
pop
aas
rcrb
add
mov
hlt
cltd
ja
pop
mov
pop
lds
push
fldenv
insl
int
adc
push
popf
xchg
sahf
pop
xor
int3
fsub
daa
jmp
mov
push
xor
add
lods
daa
fstps
mov
test
js
out
jmp
ss
sub
ljmp
sub
cli
loop
xchg
cmp
into
cmp
mov
mov
dec
mov
or
sti
cmp
stos
mov
imul
jg
pop
mov
mov
mov
mov
jg
popf
pop
jmp
cmpsb
int
pushf
mov
daa
and
loop
dec
pop
clc
sbb
pop
jne
sbb
jmp
mov
or
sbb
mov
or
sti
lock
cmp
fcom
insl
rcl
pop
scas
out
cmp
lret
scas
popf
sbb
adc
mov
mov
mov
xchg
mov
rcrb
rcrb
aas
cwtl
push
imul
addl
pop
jle
repz
sbb
xchg
dec
cmpsb
ljmp
push
in
lahf
setns
movsb
xor
jns
rcrl
cmp
test
outsb
pop
xchg
jl
rolb
xchg
jbe
cmp
mov
lret
or
test
mov
fdivs
shlb
jg
pop
arpl
sub
push
pushf
xchg
fwait
mov
mov
xchg
sbb
jo
repnz
push
repnz
es
repnz
mov
push
sbb
jmp
or
xchg
xchg
add
push
jae
jnp
inc
cs
xlat
and
xchg
mov
mov
out
sahf
jnp
mov
dec
cmp
dec
push
cmp
mov
or
add
jp
ficomps
popl
outsl
xchg
popa
ljmp
sti
and
mov
sbb
or
push
pop
mov
xor
jecxz
es
fcomps
mov
sbb
nop
add
inc
enter
cmp
loop
inc
jp
into
divl
or
and
outsl
mov
jns
lret
nop
lcall
mov
cmp
subl
enter
sbb
cli
outsl
mov
lods
test
sub
roll
fwait
and
inc
push
push
mov
push
aas
adc
aas
into
adc
test
xchg
mov
pop
ret
cmpb
mov
jmp
fs
shl
in
mov
mov
sbb
out
mov
and
lret
inc
inc
xchg
sub
int
stos
add
push
jle
cwtl
das
add
mov
rcrb
pop
es
sub
cltd
popf
inc
mov
je
mov
clc
push
ret
push
sahf
mov
enter
xchg
mov
imul
xchg
cwtl
mov
aaa
sbb
gs
mov
mov
pop
out
lret
dec
sbb
std
or
dec
arpl
and
std
imul
ja
stos
pop
push
mov
mov
pop
mov
psraw
sbb
push
dec
push
push
mov
fnstenv
movsb
jmp
jp
mov
push
test
inc
aaa
cmp
lret
mov
out
lcall
stc
sbb
mov
nop
xchg
add
mov
sbb
sub
pop
js
in
insl
mov
lods
cltd
fwait
mov
jns
jg
mov
jae
mov
mov
cs
mov
int
adc
mov
and
jbe
sbb
cmpsb
pop
fdivrl
out
push
icebp
or
cmp
cld
cmp
mov
pop
punpcklwd
dec
rorb
cltd
ror
lcall
pop
sub
pusha
ss
mov
imul
lret
aas
jb
outsl
leavew
dec
cmp
add
push
push
push
pop
popa
lcall
out
adc
enter
stos
sbb
cmp
or
popf
insl
les
mov
test
add
int
fdivr
sub
pop
scas
sti
jl
cmc
push
gs
leave
lcall
or
mov
test
pop
std
scas
jg
incb
inc
add
dec
xchg
sbb
out
mov
inc
add
stos
sti
sub
movsl
negb
adc
adc
std
mov
clc
push
loop
test
pushf
mov
fisttpll
in
add
pop
cmp
loop
mov
pop
cmp
mov
cmpsl
jg
mov
mov
inc
fisubrs
push
fsubrp
scas
lcall
fdiv
mov
mov
imul
outsb
mov
das
aas
jle
sbb
test
mov
sti
enter
pusha
data16
or
push
out
sbb
jp
inc
or
cmpb
sbb
fwait
jnp
pop
xlat
cmp
dec
int3
mov
mov
pop
or
xor
mov
outsl
aas
xchg
fcmovnu
xor
adc
mov
les
and
gs
cwtl
fsubl
jg
cli
lret
aas
mov
aas
mov
push
pop
in
pop
sbb
and
lcall
aas
lahf
jg
filds
into
jmp
dec
jne
pop
mov
out
movsl
les
dec
aam
mov
xchg
xchg
sti
push
in
add
ds
leave
xchg
mov
sti
out
test
andb
mov
gs
cmp
or
cmpsl
mov
rcl
sti
add
jne
pusha
in
push
mov
xchg
sub
cmp
lods
fs
or
xchg
mov
mov
dec
pop
out
mov
dec
adc
cmp
jg
push
adc
loopne
pop
inc
cmp
arpl
jp
ret
mov
addr16
lea
lret
in
mov
dec
pop
pop
jle
xchg
scas
lcall
mov
pop
sbb
fwait
and
push
stos
lea
movsb
xor
pop
adcb
xor
sub
movb
aas
cmpsl
lds
out
test
xchg
imul
pushf
inc
ret
int
jns
add
aam
bound
iret
fcompl
lret
dec
ds
mov
inc
push
mov
sub
lds
pop
sub
xchg
aam
aad
fdivrp
pop
xlat
movb
sarl
outsb
and
orb
lock
cmc
jae
ds
out
mov
sub
sbb
push
mov
jnp
jle
stc
fildl
out
adc
negl
orb
iret
pop
daa
ja
sbb
xchg
mov
jle
loopne
loop
mov
add
ret
sbb
fcomp
push
les
sbb
lcall
sahf
sbb
fmul
or
lods
andl
mov
insb
out
xchg
sti
scas
xlat
ss
nop
js
sbb
cwtl
adc
jno
add
fst
mov
adc
mov
xor
daa
mov
jns
mov
dec
ss
xlat
pop
push
fcomps
imull
fadds
sarl
sub
mov
jl
into
xor
cli
dec
sbb
xchg
dec
shlb
mov
add
cli
lea
cmpb
stos
adc
adc
inc
mov
mov
push
inc
fildl
add
mov
ja
fmul
sbb
mov
dec
jb
inc
sub
push
sbb
jecxz
sub
adc
xor
sbb
shrl
sarl
in
mov
adc
dec
mov
mov
jo
not
negb
push
add
cmp
jne
cld
fdivr
xchg
ja
xor
dec
ret
test
lret
test
xor
cmp
andl
ljmp
mov
cmp
pop
sub
fwait
test
mov
test
sub
pop
je,pt
mov
xchg
in
test
rcrb
xchg
mov
and
inc
inc
adc
lock
push
jmp
cmc
lea
mov
fadds
cmp
add
xchg
pop
icebp
and
mov
jl
fldenv
cld
mov
in
adc
dec
or
mov
into
mov
jg
cld
pop
cwtl
cmp
pop
sbb
adc
or
jo
sbb
mov
cmpsb
or
rcrl
ror
pop
sbb
icebp
jl
cwtl
push
cmp
sbb
xor
fmuls
xchg
sub
js
and
das
lret
scas
testl
and
mov
xchg
fstpl
jmp
xchg
jbe
cmp
inc
and
mov
insl
ljmp
dec
mov
xchg
out
stos
add
lods
sahf
xchg
sbb
push
cmc
jl
mov
xor
sbb
stc
push
jmp
sbb
fdivrl
fimuls
rol
bound
mov
inc
or
mov
cmp
gs
dec
push
inc
or
mov
into
push
push
addr16
int3
or
repz
pop
pop
or
in
inc
add
xchg
cs
mov
fistpll
call
inc
clc
rcrl
pop
fucomi
into
ss
jns
jg
mov
sbb
fistps
cmp
mov
mov
and
mov
jae
push
das
pushf
xor
fsubp
dec
cli
rorb
aaa
cmp
or
sub
into
fdivl
pop
add
sbb
leave
filds
cmp
jmp
xlat
into
ficoml
and
call
jecxz
push
pop
lcall
xchg
add
pop
lcall
inc
fnstcw
int3
xor
iret
jg
inc
jae
pop
in
xlat
aaa
ds
jne
iret
adc
sbb
outsl
cmpsl
pushf
pmaxsw
in
cli
addb
movsl
fdivs
adc
cld
outsb
into
or
movl
clc
imul
jge
lret
fldl2e
add
push
push
cmp
mov
in
fists
mov
xchg
repnz
sbb
stos
sub
cmc
pop
pop
jle
push
pusha
xor
xor
xlat
jo
gs
lahf
call
xchg
pop
cld
lret
inc
mov
jle
jns
into
add
mov
jnp
adc
inc
in
xchg
cmp
stos
ss
mov
xor
lds
inc
pop
fstpl
xor
sbb
andl
nop
pop
mov
test
mov
jns
clc
push
sbb
sub
sub
add
sti
add
sti
int3
inc
push
xor
pop
mov
jno
sbb
test
aaa
jnp
stos
lods
mov
xchg
outsb
mov
nop
icebp
mov
mov
mov
jg
mov
orl
out
pop
pop
jg
dec
sbb
mov
out
lods
push
or
sbb
cli
or
sti
lea
loope
xchg
in
cmc
std
ret
hlt
pushf
mov
dec
cmp
and
xor
push
jge
adc
imul
or
push
fsub
ljmp
movsl
sbb
jno
dec
pop
or
jo
sub
cwtl
push
dec
loop
addr16
faddl
leave
sub
test
loope
sbb
push
cmc
add
in
inc
inc
pop
test
and
xor
adc
loope
test
sbb
sti
movsb
fstl
icebp
add
loopne
loopne
mov
pop
repz
adc
xchg
mov
push
jle
mov
or
fs
in
or
int
or
cs
or
fisubs
mov
addr16
lods
sti
dec
cld
sbb
mov
rcrl
fstp
and
fsubrl
pop
xchg
ds
adc
mov
fcomp
xchg
cmc
mov
mov
mov
inc
in
xchg
lahf
pushl
in
aaa
cmpl
stos
dec
jg
sbbb
rcrl
push
mov
add
adc
cli
pop
in
repz
fbld
repz
ds
adc
lahf
sbb
or
in
mov
mov
lds
pop
jl
dec
jae
pushf
aad
xor
mov
test
hlt
fistpl
fistl
sbbl
xor
lods
jmp
jecxz
hlt
stc
into
jge
xchg
imulb
xor
push
scas
lods
mov
jle
sub
jne
or
lods
jnp
pop
pop
into
pop
movsb
jl
in
add
pop
inc
movsl
add
aas
in
cli
pop
xor
and
fnstcw
push
ss
icebp
negb
pushf
sbb
sub
repnz
inc
das
pop
and
mov
pusha
xchg
mov
pop
jae
xchg
mov
pop
pusha
xor
outsl
fnsave
sbb
call
xor
mov
pop
mov
stos
sahf
cmp
cmp
mov
push
mov
pop
out
mov
lods
xchg
pop
xchg
fsub
sahf
ss
cmp
test
mov
push
popf
mov
lea
pop
data16
fcomps
xor
mov
test
mov
imul
les
sbb
pop
inc
nop
jp
xchg
mov
mov
divl
std
stos
xlat
addr16
jb
testb
mov
pop
inc
out
add
adc
jne
lret
icebp
push
outsl
mov
push
xchg
fwait
mov
jb
jns
adc
and
in
popa
jle
push
push
hlt
or
outsl
cli
lret
cld
and
into
inc
cmp
mov
mov
adc
cli
lret
pushf
xchg
dec
sahf
jmp
mov
cmc
mov
pop
or
jmp
cmp
jmp
aaa
in
pop
adc
sbbb
xlat
andb
int3
mov
add
jmp
fiadds
sbbb
cli
xchg
pop
pushf
or
fstps
sbb
mov
mov
inc
enter
scas
sub
leave
pop
sarl
or
or
mov
cld
dec
add
fadd
xchg
pop
xlat
xor
loopne
pop
mov
cmpb
sub
and
jp
xor
test
jg
inc
pop
add
scas
jg
lock
aas
inc
xor
imul
add
jns
dec
mov
sbb
arpl
out
into
pop
in
lods
dec
mov
pop
insl
xchg
mov
scas
xor
mov
mov
xchg
jle
pop
lcall
ds
push
popl
outsb
cltd
xchg
xchg
push
sub
push
jg
sbb
cmovge
in
nop
gs
icebp
adc
mov
cwtl
into
mov
and
dec
fwait
sbb
cmc
popf
pop
test
int3
addr16
insb
test
pushf
inc
sub
jno
ss
mov
outsl
pop
lret
pop
movsl
xchg
sti
pushw
sub
mov
pop
xor
jmp
push
addr16
aam
cwtl
mov
in
xchg
mov
mov
cs
pop
push
sub
add
xchg
leave
stos
stos
xchg
mov
cmpl
jmp
or
cltd
xchg
xchg
in
jo
pop
loope
or
mov
xchg
sub
jno
push
out
jmp
xchg
add
and
mov
inc
dec
cmpl
xor
cmpsl
repz
mov
fcompl
clc
xchg
aad
cmc
pop
clc
xchg
cmp
add
stos
shlb
push
outsb
dec
xchg
cmp
cwtl
cmp
xor
cmp
cwtl
jl
push
cmp
sub
sub
add
test
mov
xchg
outsl
jb
nop
pushf
or
popf
add
mov
or
js
repnz
or
pop
fdivl
dec
ret
cmpsl
out
aad
sub
mov
cli
add
fwait
pop
movsb
lea
iret
dec
icebp
cltd
push
dec
stc
cmp
xchg
je
lea
fisttpll
inc
sarl
aas
fdivrl
inc
push
out
sbb
adc
sbb
scas
scas
add
cs
jb
ret
repz
or
andb
xchg
jae
lea
sahf
fs
cld
push
out
and
ret
sti
adc
mov
jecxz
test
mov
dec
mov
or
xor
and
in
add
and
push
in
add
dec
jmp
in
push
data16
xchg
pop
xchg
mov
insl
inc
mov
lea
das
inc
movsb
xor
push
mov
xor
sbb
stos
into
ds
pop
test
rclb
inc
mov
imul
test
and
xchg
mov
scas
cmpsb
lock
sahf
cmp
aas
push
add
inc
or
pop
fcoms
pop
idivl
fstpt
dec
int
fmull
sub
push
ret
out
lret
or
orb
pop
enter
pusha
outsl
in
stos
mov
fbstp
push
pop
dec
xchg
mov
mov
pop
mov
pop
stc
push
imul
push
push
adc
mov
mov
xchg
cwtl
fdivs
mov
dec
sbb
or
xchg
mov
adcl
addr16
dec
xchg
adc
mov
cmp
divb
sbb
ror
adc
push
sbb
xchg
cmc
inc
jb
fisubrs
cmp
mov
jg
inc
pop
inc
mov
daa
cld
mov
mov
fcompl
aas
sbb
push
add
dec
mov
aas
xchg
xchg
mov
shll
incl
hlt
out
cmp
jecxz
movsl
pop
xor
cltd
imul
xor
mov
push
and
mov
jae
les
adc
jl
sbb
mov
push
dec
mov
arpl
jnp,pn
add
cmpl
push
mov
mov
mov
and
and
xchg
jmp
pop
daa
js
add
jns
push
pushf
xchg
pop
sbb
push
push
mov
push
dec
leave
idiv
mov
nop
mov
inc
fsubl
call
lret
xchg
les
popa
xchg
dec
fwait
mov
or
pop
mov
mov
call
cld
ret
mov
jg
loopne
addb
daa
jae
sub
mov
sahf
test
xchg
mov
call
enter
xchg
xor
mov
cmp
pusha
push
inc
xchg
sti
mov
in
into
ja
mov
neg
scas
cmp
ja
xor
ss
push
ret
cltd
int3
fisubrs
inc
jecxz
inc
xchg
into
pop
ss
jecxz
pop
mov
jb
sub
mov
inc
enter
clc
pusha
mov
fwait
js
aas
int
mov
test
pop
imulb
popw
mov
pop
aas
cld
clc
jno
cltd
xchg
cmp
mov
push
cmpl
enter
push
push
movsb
mov
mov
rcrb
cwtl
lret
insb
inc
mov
jns
jl
cmp
ds
jns
pop
out
xchg
test
pop
roll
adcl
mov
aas
loop
mov
jmp
stc
in
stos
push
pop
xchg
xlat
sbb
mov
std
iret
push
xchg
pop
lods
out
sbb
sbb
dec
dec
push
jle
or
jmp
cmpb
cmp
mov
mov
xchg
fcoms
es
test
popf
cmpsl
or
dec
pop
mov
js
and
dec
xor
mov
and
ja
dec
pushf
stos
inc
pop
imulb
xor
or
add
imul
lods
push
in
inc
cwtl
add
xchg
std
mov
dec
pop
push
mov
dec
arpl
aad
mov
movsl
mov
inc
cmp
loop
inc
aad
xchg
or
add
push
je
or
inc
ja
inc
pop
out
ja
mov
dec
mov
pop
push
cld
shll
sbb
shlb
lcall
rcrl
or
jb
add
bound
sub
cmpsl
mov
sub
mov
jns
sarb
sub
test
pop
and
add
imul
std
jnp
sbb
cmpsl
imul
fisubs
lcall
cmpsl
mov
xor
pop
mov
sbb
shll
mov
lahf
mov
push
test
pop
icebp
add
pop
pushl
mov
mov
mov
dec
ds
test
aaa
pushf
mov
repz
cli
rolb
pop
in
cmp
lea
xchg
mov
push
popa
sub
adc
or
fisttpl
filds
add
std
cmp
stc
sbb
scas
in
pop
dec
and
call
int3
scas
decb
push
in
cwtl
xor
mov
scas
xchg
jnp
mov
sub
mov
hlt
js
fcoml
adc
lds
sbb
add
mov
jnp
test
in
adc
mov
sti
loope
insl
sub
lahf
push
dec
cwtl
test
notb
fdivl
nop
adc
das
orb
pop
scas
fbstp
dec
cmp
mov
iret
or
and
imul
mov
jl
cmp
pop
adc
jcxz
jns
arpl
ror
jo
lret
addr16
jge
push
lock
mov
nop
fdivr
push
xchg
add
pop
loop,pn
pop
cwtl
jp
pop
pop
mov
rcrl
sub
loop
enter
and
jmp
xchg
pusha
or
cwtl
fadds
fxch
pop
fcomip
sub
shl
pop
les
imul
push
sub
gs
pushf
leave
add
inc
iret
jg
mov
popf
jae
adc
roll
cli
roll
popa
add
xchg
sbbl
sbb
ret
mov
clc
fs
mov
fs
pop
mov
cmp
mov
hlt
mov
lcall
cs
jl
scas
cmp
cmp
push
dec
mov
fcoml
insl
jmp
xchg
jl
pop
pop
mov
push
dec
ja
mov
lahf
sbb
dec
test
push
jne
es
or
out
xchg
sbb
push
sbb
add
or
int
pusha
outsb
loop
sarl
lahf
lahf
push
sub
test
notl
lods
jbe
ds
jecxz
jno
xchg
scas
adcb
lretw
lret
into
ror
in
pop
jecxz
hlt
roll
and
cltd
xchg
lds
mov
mov
mov
lods
xchg
xchg
mov
add
xor
fisttpl
lret
mov
or
xchg
outsb
int
aas
aam
cli
data16
movsl
dec
sbb
lea
mov
push
pushf
mov
push
bound
cmp
jge
inc
stc
movsb
push
mov
add
int3
cmp
insb
pop
dec
cld
pop
in
dec
loope
xor
pushf
fcomps
test
imul
add
jb
sbb
jp
les
jno
jl
sti
or
sahf
jg
inc
pop
out
aam
test
mov
cmpsb
out
sbb
orl
rolb
das
or
ljmp
lods
xor
cmc
inc
shrl
mov
rolb
xchg
mov
mov
mov
push
leave
test
icebp
andb
jl
movsl
cmp
mov
sbb
lahf
cmp
clc
jle
sub
test
pop
sbbb
sti
fimuls
subb
mov
repnz
sbb
enter
pop
movsb
imul
jmp
cmp
add
adc
lcall
pop
jo
mov
imul
or
mov
or
insl
cmp
pushf
daa
and
cs
sar
adcl
jno
xor
sub
mov
popf
mov
xchg
sti
scas
fistpll
fstp
sbb
cmp
je
cmp
mov
call
sub
cmp
arpl
fcmovnu
cvttps2pi
dec
push
ss
pushf
ret
jnp
stos
sub
mov
cmp
mov
out
jge
lahf
orl
dec
outsb
mov
ss
sbb
jmp
out
xchg
jnp
cwtl
inc
sti
mov
enter
sbb
sbb
movsb
cmc
in
mov
or
mov
mov
push
iret
in
inc
mov
fs
pop
in
lods
adc
lret
fstl
cmc
adc
lahf
cwtl
sbb
int
pop
mov
add
or
mov
hlt
clc
sub
push
outsl
and
fdiv
push
and
mov
jae
fcmovnbe
iret
mov
jg
sub
aad
adc
xchg
push
daa
cwtl
pushf
loope
sub
mov
mov
and
mov
in
dec
stos
or
push
or
push
mov
imul
inc
subb
hlt
stc
mov
sti
jg
lock
sub
subb
popf
add
fiaddl
or
mov
les
mov
arpl
aad
lret
popa
jge
jp
lret
mov
or
fnstsw
lahf
or
xchg
sbb
movswl
testl
pushf
rcrl
sbb
addr16
gs
int
adc
sbb
in
enter
out
mov
jmp
sbb
sbb
pop
mov
cmpsb
sti
or
pop
roll
in
daa
rorl
and
xchg
cs
pop
mov
mov
and
sbb
imul
mov
mov
xchg
mov
roll
mov
leave
and
cltd
loopne
jecxz
and
cmp
or
in
push
scas
dec
jns
lcall
insl
push
mov
ret
sub
pop
mov
fistps
mov
or
and
pop
and
pop
push
jge
pushf
sbb
fsubs
and
stos
mov
pop
xlat
sub
mov
scas
jmp
ret
jo
lahf
fstps
repnz
cmp
iret
inc
cmp
sbb
imul
xchg
mov
cmp
ds
pop
pushf
sti
ss
push
lahf
sarl
and
xor
jb
or
jg
sub
xchg
les
fs
jne
stc
pop
and
push
jbe
pop
dec
push
insb
add
jle
xchg
cwtl
mov
xchg
cmp
pop
sbb
ja
mov
ja
fnstenv
cs
insl
fcoml
addr16
jno,pt
sti
mov
je
loopne
aam
cmp
cmpb
test
stos
in
lcall
cmp
pop
sahf
je
gs
mov
mov
scas
cmpb
sub
leave
and
lods
fsts
pop
sbb
inc
xchg
test
in
and
dec
lcall
fistps
adc
push
mov
pop
mov
xchg
mov
sbb
mov
repnz
mov
ror
xor
or
xchg
stc
push
mov
ret
mov
sub
cmp
lret
aas
cmp
push
lret
lret
xor
and
sub
pop
or
jge
mov
das
cmp
push
outsl
xchg
outsb
pop
add
mov
in
ja
mov
xor
push
jb
scas
lea
jo
jg
data16
pop
cmp
popf
jno
pop
iret
sbb
dec
lock
lret
add
push
xor
pop
jns
pop
xor
mov
push
sub
je
sarb
loopne
mov
inc
dec
dec
push
mov
mov
cli
js
mov
add
sub
andl
xchg
jb
add
mov
jmp
popf
sub
add
loop
inc
nop
cmp
mov
cmp
cwtl
incl
add
mov
mov
iret
scas
mov
pop
jecxz
jg
push
lds
xchg
mov
imul
orl
fs
jl
pop
push
pop
jge
decl
xor
pushf
pop
cmpsl
incl
icebp
inc
sbb
rcr
stc
repnz
xchg
inc
enter
shr
sub
add
mov
mov
push
mov
leave
sbb
mov
jne
sub
jl
das
lret
bound
sub
pop
test
sbb
jmp
out
xchg
sbb
cmp
and
jnp
pop
int
jo
jg
jg
in
pop
push
lahf
jo
dec
pushf
cld
mov
test
sbbl
or
mov
shrb
call
xchg
pop
cmc
fsubs
pop
repnz
dec
flds
outsl
movhlps
shll
mov
insb
dec
mov
jecxz
and
sarb
lret
pop
fwait
adc
inc
pushf
sub
cmp
pop
aad
addb
pop
sbb
movsl
xchg
fcomp
xchg
push
pushf
jmp
inc
test
andl
push
push
jno
push
pop
dec
int3
lods
fnstenv
or
cmpsb
test
sahf
out
aas
push
xor
pop
add
cs
xor
pusha
lret
push
xchg
or
fiaddl
fmull
scas
mov
jns
jg
iret
sbb
push
lds
xor
mov
xor
test
cli
sahf
sbb
lods
loopne
or
lods
movsl
mov
pop
pop
sbb
movb
int
je
popf
dec
and
sbb
push
and
jle
mov
xchg
sbb
xchg
add
inc
pop
test
std
jns
pop
xchg
jae
rolb
inc
pop
push
xor
cwtl
nop
or
xor
ficoml
popa
push
xchg
pop
fdivl
cmp
movsb
mov
jnp
cmp
jnp
push
adc
lds
adc
mov
mov
into
es
dec
bound
sub
adc
scas
xlat
mov
aam
fldcw
inc
mov
inc
push
jge
nop
rolb
mov
jle
int
add
int
cwtl
mov
push
cmp
sahf
loop
nop
mov
jmp
cmp
jl
flds
inc
test
lahf
mov
or
into
ss
dec
inc
push
lock
add
jns
jnp
sbb
sub
mov
mov
sbb
aaa
ljmp
lds
jge
mov
aas
movsl
insl
mov
pop
jmp
test
frstor
popl
and
repz
stos
sahf
cmp
push
in
iret
or
pop
mov
push
jg
pop
xor
jmp
dec
in
dec
xchg
xor
sahf
int
pop
lahf
jnp
mov
mov
push
mov
mov
fwait
cmpsl
mov
cmp
adc
popf
enter
push
cmp
ljmp
rcrl
adc
xchg
sub
and
aad
jl
fmul
cmpsb
jmp
sbb
fistps
adc
cs
dec
sahf
int
sbb
ljmp
pushf
cltd
mul
pop
scas
ds
cwtl
fldt
push
jle
dec
imul
jp
pop
xchg
inc
cli
xchg
ja
mov
inc
dec
push
mov
int3
mov
iret
movsb
cmpl
xor
loop
pop
clc
les
xor
addr16
pop
mov
std
cmp
adc
pop
jg
mov
xchg
or
xchg
pusha
shl
clc
mov
out
mov
push
xor
sub
xlat
xlat
test
lahf
out
pushf
adc
frstor
jno
pop
push
adc
sub
inc
cmp
inc
sbb
or
int
ss
pop
sbb
xlat
ds
movsl
mov
jecxz
leave
pop
cwtl
ljmp
pop
movsb
rclb
sbb
mulb
sbb
jecxz
sar
pmulhw
pop
mov
scas
xchg
clc
mov
mov
xchg
cmp
sub
cmp
mov
xchg
gs
in
cli
mov
sbbb
cmp
sbb
stos
sahf
jg
mov
push
cmpsb
mov
addl
std
xchg
xor
aam
pushf
xor
jp
inc
rorb
add
imul
xchg
inc
push
pushf
out
leave
or
lret
dec
scas
mov
cwtl
movsb
stos
subl
gs
sbb
xor
sbb
mov
lods
nop
jae
lahf
cmp
enter
pop
je
sub
xor
imul
xor
push
pop
sbb
adc
sub
shlb
sbb
jnp
sub
jecxz
ror
movsb
orl
in
pop
push
iret
cwtl
mov
cld
mov
sub
aaa
dec
mov
push
sar
in
nop
push
pop
dec
repnz
push
stos
sti
sub
mov
or
sarl
and
in
cmp
sbb
mov
jbe
pushf
es
cmp
and
jp
iret
loope
sbb
icebp
cmp
add
jmp
fadds
rcrl
pop
xchg
sbb
add
xor
sub
fmull
dec
add
cmpl
mov
ds
hlt
rclb
sbb
jo
lret
xor
inc
add
test
inc
lret
push
cmp
insl
adc
jecxz
add
clc
into
mov
jg
push
mov
icebp
pop
adcb
add
mov
mov
mov
cwtl
sbb
push
fcomip
mov
testl
sbb
push
lds
pop
xchg
ss
add
ret
sub
call
cwtl
outsl
aaa
cli
cld
sbb
xor
push
movsb
xchg
mov
rcr
nop
push
or
fdivrl
loopne
ret
mov
and
cmpsb
pop
cli
mov
mov
fnstenv
pushw
les
xchg
adc
jle
jle
lahf
cmpsb
cmp
inc
mov
adc
mov
mov
cs
sbb
mov
mov
lods
mov
dec
hlt
adc
mov
pop
mov
push
sbb
cs
mov
adc
stos
int3
jae
add
and
enter
cmpsb
outsb
pop
mov
sbb
fadds
push
lea
js
xor
int3
push
jns
mov
mov
dec
sbb
mov
cmpsl
stos
xor
lods
cmp
test
jp,pt
push
inc
cld
jae
mov
sbb
movsl
lods
fucomi
and
push
mov
pusha
sub
cmp
mov
pop
imul
sti
out
cmpsl
ja
mov
jnp
fists
out
add
fstl
pop
enter
cmp
mov
rcll
lods
arpl
lret
loopne
mov
loop
add
sahf
aad
jne
imul
rorl
outsb
mov
cmp
ja
pop
insb
xchg
mov
mov
aaa
scas
rolb
inc
dec
jmp
sbb
fistps
mov
jo
sub
ret
in
test
sub
cli
mov
mov
ret
std
jg
ror
mov
lcall
pop
adc
pop
jg
out
xchg
adc
cmp
jne
mov
lds
adc
mov
insb
orl
jg
pop
fs
mov
push
aas
sub
mov
jge
jl
sbb
mov
scas
lahf
out
cwtl
and
add
push
rcll
pop
inc
dec
push
fcomps
sbb
incb
inc
aas
sahf
and
adc
ss
insb
push
cmp
test
jl
xchg
sti
sbb
mov
xchg
sbb
cwtl
sbb
pop
cs
jmp
fists
sub
pop
outsl
fistpl
fstpl
xor
sbb
fxch
mov
aam
adc
pop
jl
jp
ret
cmpsb
out
add
dec
imul
icebp
cli
fsubs
std
out
sbb
and
mov
aas
enter
xchg
lret
adc
enter
mov
loopne
dec
dec
xchg
pop
pop
nop
pop
or
sbb
out
aaa
es
dec
mov
xchg
pop
out
subb
mov
sahf
or
test
adc
lret
icebp
xchg
pop
aam
fidivrl
push
sbb
adc
xchg
fimuls
cli
inc
pop
in
in
xchg
inc
sahf
pushf
into
sub
xor
outsb
inc
cmpsb
lea
jg
sahf
dec
mov
jle
mov
xchg
test
jle
lock
sarb
sub
roll
sub
xchg
sbb
scas
fnstenv
adcl
inc
mov
sbb
jge
dec
addb
xor
cmpsb
jb
pop
sub
inc
jo
cmp
out
aaa
sbb
cs
call
inc
test
mov
push
dec
imul
in
cwtl
movsb
xlat
aas
jnp
out
dec
cmp
into
lods
mov
jo
leave
stos
mov
ret
pop
ljmp
fsubs
cmp
and
sbb
fcomip
pusha
or
mov
cmp
lahf
pushf
and
aas
xor
mov
test
movl
mov
bound
clc
mov
and
push
fwait
jbe
cli
sub
dec
dec
cmp
fs
in
jge
jecxz
popf
xchg
mov
pushf
jo
fidivrs
mov
mov
sub
aas
mov
outsl
xchg
mov
iret
test
ret
test
push
je
les
push
cmpsl
mov
cmp
mov
enter
ret
mov
sahf
bound
lea
jns
fistps
out
push
or
mov
cwtl
jp
mov
pop
mov
xchg
rol
xchg
adc
xchg
or
jo
cwtl
xchg
lock
fsubrl
test
or
testb
push
movsb
pop
outsb
mov
int3
dec
test
dec
adc
jp
imul
cwtl
sub
push
mov
push
mov
mov
clc
cmp
xchg
sub
and
das
mul
stos
data16
cmpb
xchg
int3
xor
sbb
cmp
sbb
cmp
fsts
sub
xor
cmpps
mov
incl
pop
pop
inc
mov
je
jp
clc
sbb
sahf
push
sahf
sti
loope
pop
sarl
xchg
pop
add
orb
adc
int3
into
lret
cmp
or
or
test
lea
inc
je
xchg
fwait
out
into
scas
sti
lcall
je
push
repnz
add
loop
mov
xor
pop
xchg
lret
imul
subb
movsb
daa
out
fldt
mov
enter
push
pushf
scas
sbb
fimuls
pop
push
loop
dec
mov
add
fildll
ljmp
sbb
xor
out
and
cmp
daa
loopne
cli
and
xchg
inc
add
in
jae
sub
cmpsb
daa
jg
les
sbb
outsl
shll
inc
lea
out
and
push
push
adcb
or
in
cld
daa
sub
pop
jle
fimuls
jne
fldcw
sahf
jnp
int3
jno
ret
sbb
fs
js
mov
cmpsl
xchg
fistps
push
lcall
lret
xor
clc
pop
scas
repz
outsb
cli
int
mov
fsub
xchg
daa
pop
pop
mov
pop
lret
stc
dec
cmp
add
mov
xchg
jne
pop
or
ljmp
ja
pusha
pop
icebp
or
push
add
mov
and
inc
cmpb
or
push
jg
pop
add
hlt
mov
lods
popf
inc
mov
mov
insb
xchg
sbb
push
ror
test
inc
fstps
test
jmp
jno
push
imulb
test
movsl
out
mov
jne
xchg
mov
dec
inc
test
push
cmp
sarl
mov
cld
js
cmp
mov
insb
adc
ds
sub
push
xchg
ficomps
rorl
les
mov
pushf
int
xor
lcall
jg
popa
inc
xlat
insb
mov
lret
fists
mov
js
sbb
adc
arpl
push
add
mov
test
sbb
mov
inc
mov
push
mov
leave
mov
pushf
incl
sbb
mov
lock
test
shll
fwait
popf
push
icebp
mov
xchg
dec
pushf
lret
sahf
push
pop
ja
icebp
loopne
div
fsubr
mov
mov
clc
fwait
mov
sbb
sbb
mov
cmpb
icebp
jg
cmp
out
sbb
pop
mov
sbb
arpl
mov
push
sub
scas
scas
fadds
mov
sbb
and
cmp
scas
mov
mov
sar
xchg
bound
ret
enter
xor
fidivrl
loope
xor
iret
lcall
dec
mov
cli
sub
int3
sub
test
mov
lahf
fbld
xchg
or
cmpsb
cltd
lods
out
pop
or
pop
cmpsl
in
dec
inc
cmpl
adc
je
dec
mov
pop
pop
pop
mov
pop
cmpsl
mov
mov
mov
adc
cmp
aam
push
roll
into
mov
pop
xchg
sbb
ja
mov
gs
mov
mov
pop
jb
and
addl
mov
cmp
bound
xchg
jg
fiaddl
je
outsb
hlt
dec
fbld
sub
sbb
jg
into
push
cmp
ffree
mov
shll
mov
sbb
mov
sahf
pop
mov
cmpl
dec
jg
mov
mov
sahf
jnp
add
sub
test
cmp
out
sti
dec
jbe
addr16
jg
xor
roll
mov
lock
xor
je
push
dec
cmp
in
mov
icebp
add
pushf
inc
jno
aam
xor
movsb
nop
xchg
mov
sbbl
mov
mov
mov
cmpsb
add
js
and
pop
test
popa
inc
into
xchg
pop
jb
out
inc
ss
pushf
fdiv
sub
jle
mov
add
test
inc
test
inc
jnp
mov
rcrb
popa
mov
mov
movsl
mov
js
add
ficompl
pop
jnp
faddl
push
lds
adc
rol
repnz
pop
jge
out
jns
fbld
aaa
call
test
cmp
loop
cmp
xchg
pop
test
mov
jge
dec
lea
cwtl
mov
add
inc
pushf
mov
lret
stos
and
aaa
fs
inc
mov
rcrl
iret
sti
jbe
in
pop
mov
or
aam
test
xor
out
pop
pop
cmp
ds
sub
loopne
lea
add
push
fdivrs
popa
xor
pop
xor
test
push
incb
mov
sbb
and
sbb
das
xchg
out
inc
fisttpll
jno
inc
pushf
inc
test
les
xor
mov
sarb
testb
sbb
sub
addr16
adc
daa
sbb
pop
cmp
test
add
mov
cli
or
dec
pusha
mov
test
in
mov
sub
insb
out
mov
mov
sub
in
bound
xchg
adc
clc
push
cld
pop
sbb
mov
push
sbb
out
fdivs
lods
cmp
dec
cmp
inc
or
fwait
sub
jl
cmp
dec
mov
pop
shll
or
and
pop
scas
test
stos
fstp
mov
sbb
xchg
cmp
movsl
repz
enter
cwtl
bnd
jl
popf
cmp
arpl
stos
scas
popa
xor
enter
cmp
jo
mov
adc
subl
jne
mov
dec
mov
mov
dec
or
int3
sarb
or
shrb
ficoml
mov
cmpsl
test
mov
ficoms
xchg
int3
repz
mov
movsl
sti
jle
data16
xchg
push
mov
mov
add
mov
addl
push
add
pop
xor
out
in
mov
mull
xlat
cmp
dec
iret
fucomip
fsub
call
mov
jmp
sub
adc
out
inc
mov
test
je
clc
lds
sbb
xchg
fbstp
repz
sarb
pop
mov
push
cmp
mov
mov
add
sahf
rorl
adc
pop
push
sub
out
jmp
dec
xor
lahf
aas
cmp
jg
push
add
cli
dec
lahf
fldl
mov
fs
notb
mov
jne
daa
jno
lret
mov
sub
cmp
cmpsl
mov
mov
mov
or
int
pop
mov
js
jo
cmc
clc
mov
push
cmp
repz
fmull
and
stos
int3
fdivr
fcmovnb
arpl
jno
jg
push
inc
ja
cwtl
dec
xchg
inc
or
mov
push
test
cmp
roll
adc
xchg
enter
add
push
sahf
adc
adc
cmp
lods
arpl
sbb
movsb
adc
out
xchg
adc
add
pop
or
adc
push
sbb
stos
jmp
push
aam
lret
cmp
xchg
push
xchg
xlat
imul
xor
mov
sub
ljmp
mov
mov
inc
lret
loopne
insb
xchg
mov
pop
cmp
pop
push
imul
cmp
lret
cmp
and
nop
and
addr16
movsb
cmp
jp
inc
addr16
mov
in
mov
cs
outsb
fnsave
fwait
inc
test
aaa
in
loop
je
sub
fstl
inc
and
aas
jmp
test
dec
cmp
rcll
dec
nop
cmp
lods
pop
jp
inc
in
out
push
mov
pop
cmpsl
pop
xchg
cltd
inc
xor
fildll
sbb
dec
into
arpl
mov
and
jg
std
dec
xor
mov
je
cmovbe
add
add
jg
mov
xchg
sub
fistl
icebp
fldcw
jp
push
sbb
mov
add
sub
and
fsubrl
fcompl
sarl
lea
or
cmp
xchg
pop
push
leave
pusha
push
shlb
mov
and
xchg
fadd
js
dec
arpl
inc
fmul
sbb
pushf
mov
das
mov
sub
xchg
mov
xor
scas
fsubrs
popf
cmp
pop
cltd
in
cmp
dec
cwtl
loope
rcll
mov
pop
pushf
cmp
lcall
sti
push
sbb
sbb
daa
adc
outsl
or
push
push
inc
inc
lahf
fcoms
js
movsl
scas
ljmp
into
insb
pop
into
ja,pn
push
push
jmp
and
dec
shll
mov
mov
ljmp
fmull
or
cli
imul
popa
fistpl
shlb
aas
jns
ljmp
mov
leave
loopne
and
jg
clc
insb
mov
mov
mov
sahf
ret
xchg
pop
or
jne
mov
ficoms
jb
mov
pop
cs
lcall
loopne
bound
xchg
xorb
mov
les
orl
or
lods
data16
rol
stos
cwtl
into
fwait
ja
bound
dec
outsl
ss
xor
adc
andl
pop
mov
adc
in
stc
mov
cld
mov
fcoml
pusha
xchg
ja
outsb
or
sbb
lods
hlt
fisubrs
adc
stos
test
push
cmp
int3
lcall
into
les
test
sub
aas
imul
adc
fists
pop
int
fcompl
fwait
adc
cmp
cmpb
push
rcrb
test
xchg
add
imul
fcomp
mov
rcr
inc
add
xchg
lcall
adcl
adc
lahf
arpl
jo
ds
nop
jnp
ljmp
pop
push
cltd
jecxz
sub
out
pop
mov
iret
iret
cwtl
mov
or
sahf
fsubr
fwait
in
push
mov
movsb
push
pop
add
fs
cld
daa
lods
push
push
cmp
mov
lcall
sbb
sbb
call
mov
jp
jl
pop
inc
mov
jecxz
ljmp
test
jmp
pushf
mov
add
pop
jle
gs
aaa
fbstp
das
aas
cmpsl
incl
negl
scas
push
xchg
popa
cmp
xor
fidivrl
loopne
adc
decl
inc
mov
dec
and
xchg
adc
outsl
mov
push
push
cmpsb
andb
sar
adc
lret
pop
lahf
cmpsb
cwtl
and
lods
andb
xchg
cmp
cmp
in
xor
mov
inc
jp
imulb
aam
in
hlt
pop
add
or
dec
cli
fmul
ret
test
push
dec
xchg
mov
sbb
std
xchg
adcb
es
into
movsb
mov
push
push
iret
dec
pushf
push
scas
sub
sbb
mov
mov
ret
inc
ja
jnp
pop
repz
loope
mov
dec
daa
sarl
push
mov
jp
jno
cwtl
sti
push
ret
aam
mov
xor
inc
movsb
cltd
push
xor
pushf
fiaddl
jecxz
dec
ret
adc
pop
pop
fbld
sti
mov
mov
mov
jne
mov
xchg
push
sbb
cmp
pop
in
push
cmp
popf
or
sti
sub
cwtl
jecxz
xlat
pushf
sbb
pop
pop
mov
dec
jle
sti
scas
daa
jecxz
xchg
addr16
sub
jno
inc
sbb
pop
cmp
lods
mov
mov
and
int3
or
lds
pop
pop
mov
jnp
imul
daa
cmpb
sbb
inc
push
fstpl
insl
mov
dec
outsb
push
sub
call
mov
rclb
out
out
imulb
daa
test
mov
repnz
sbb
hlt
xor
lret
mov
jmp
xor
mov
mov
and
movsb
push
mov
js
adc
pop
hlt
sub
loop
jnp
jnp
orl
cmpsb
icebp
sbbl
mov
lods
jecxz
fwait
mov
popf
push
adc
scas
imul
xchg
inc
lcall
aas
js
sti
add
mov
pop
xorl
jb
mov
jnp
jbe
adc
faddl
xchg
pop
sub
loope
call
inc
lea
arpl
mov
cmc
mov
xchg
sti
gs
cmp
test
dec
ja
popa
xor
in
jge
sub
pop
mov
pop
pop
or
ret
xchg
sub
popa
fnstenv
pusha
mov
dec
adcb
popf
insb
leave
sub
movsl
nop
add
out
adc
outsl
sti
in
xor
push
and
negl
fdivr
xor
push
int3
mov
aas
sbb
push
fwait
push
cld
or
and
xor
push
leave
popa
fsubs
mov
push
jl
out
bound
mov
adc
mov
sti
bound
mov
fwait
insl
mov
mov
xchg
scas
jb
xor
push
repnz
cmp
mov
pop
adc
cwtl
pusha
mov
lods
sti
ja
cwtl
push
test
cmp
mov
daa
js
aas
mov
adcb
scas
pop
and
ficoml
out
mov
adc
scas
int
mov
and
sti
cmp
xchg
and
mov
jne
mov
adc
lods
scas
cmp
pushf
lods
cltd
rolb
jnp
rclb
sbb
pop
lea
mov
xor
pop
cmpl
es
mov
xchg
mov
push
jle
ss
in
mov
scas
cmc
adcb
jns
xor
in
std
aas
ss
jnp
popa
adc
mov
fs
roll
dec
sub
iret
ficomps
inc
xor
stos
fmull
sub
pop
ds
dec
outsb
mov
scas
sti
test
mov
shl
push
repz
pop
adc
push
andb
mov
lds
cmp
lods
push
jo
jmp
sbb
mov
jbe
pop
jle
loope,pt
in
mov
add
mov
adc
inc
xor
push
out
sbb
ret
int3
in
mov
pusha
or
fwait
pop
sbb
das
xor
or
push
mov
fcoml
jne
jp
and
and
incb
jo
dec
dec
dec
imul
jg
mov
repnz
inc
pop
adc
jne
popa
cmpsb
sbbb
outsl
xchg
stos
fstl
insl
push
cltd
sti
lret
inc
js
jns
inc
sbb
and
cmp
pop
insl
jg
scas
ss
sbb
clc
cmc
cs
cwtl
mov
xlat
jne
stos
pop
mov
loopne
je
adc
leave
aam
testl
nop
sti
out
lret
cmpsb
scas
sti
loopne
in
pop
jle
out
mov
pop
sub
cmp
mov
cmpsb
decl
lds
and
and
xchg
xchg
xchg
sub
sub
mov
push
shll
mov
pop
iret
jns
cwtl
bound
test
lret
mov
xor
cmp
mov
test
repz
out
pop
ds
jo
mov
adc
and
in
fcompl
cmp
cmpsl
aas
fisubrs
xchg
sub
mov
push
in
rolb
jae
cwtl
clc
pop
or
shrl
sub
stos
push
lds
xor
lahf
mov
or
mov
mov
cmpl
bound
sub
pop
imul
mov
popa
loopne
fmull
dec
jne
xchg
jnp
jge
ljmp
mov
aaa
inc
and
stc
or
xor
fs
xor
add
imul
jg
push
mov
scas
int3
mov
jnp
dec
or
ja
repz
arpl
iret
sbb
idivl
pop
pop
push
popf
dec
div
leave
add
add
test
mov
sbb
adc
cs
icebp
in
ja
fildll
mov
sbb
push
inc
cs
mov
dec
lods
pmulhuw
xlat
fwait
neg
pop
jne
or
push
rcll
clc
imul
xchg
adc
rcrw
dec
sahf
lret
sub
cmc
cwtl
mov
popf
dec
fwait
sub
xor
adc
inc
subb
lea
orl
cmp
mov
pop
xor
sahf
sti
outsb
sub
es
outsl
in
adc
enter
push
insb
js
lret
pop
add
jb
pop
inc
adc
movsb
int3
sbb
das
ljmp
jns
mov
testl
mov
into
sbb
fwait
sbb
aas
stc
jl
shlb
daa
cmpsl
xchg
pop
sbb
loop
aas
dec
out
lcall
mov
aaa
mov
notb
stc
mov
pop
add
je
outsl
cmp
mov
mov
subl
mov
pop
fcomip
push
fcom
in
pop
sbb
sti
outsb
and
xor
lds
aas
lret
jno
push
push
jmp
sbb
in
mov
imul
lahf
mov
fisubrs
test
add
std
mov
pop
mov
popf
mov
adc
mov
jp
leave
loopne
rolb
arpl
push
lahf
mov
sbbl
aad
jmp
and
scas
mov
push
fadds
sub
xlat
dec
aas
cmp
inc
mov
push
jl
out
or
sbb
add
sbb
inc
scas
adc
fsubrs
pop
sbb
movsb
cs
sbb
in
mov
add
pop
shll
push
pop
inc
pop
sub
pusha
jg
int
xchg
inc
loope
cmp
lcall
test
jge
push
jle
into
ss
xor
sbb
addr16
dec
push
or
and
in
and
jns
pop
imul
dec
jg
xchg
push
popl
repnz
add
bound
iret
pop
addr16
lods
add
xchg
push
push
cmp
lods
movsl
stos
mov
mov
rclb
cwtl
int3
mov
jno
xchg
test
sti
dec
arpl
cwtl
pop
sbb
pop
mov
ljmp
adcl
aaa
sub
sub
test
insb
pop
out
sub
je
or
adc
xchg
lock
jmp
mov
and
ljmp
test
jne
popf
sub
shrl
cmp
insb
xor
fsubs
mov
leave
lret
mov
inc
arpl
pop
mov
push
js
adc
mov
insl
dec
cmp
scas
aas
addr16
shl
out
fistpll
aas
fldl
sbb
push
sbb
fidivrl
dec
in
push
jns
pop
je
dec
cld
flds
cmp
outsl
mov
xor
mov
jnp
and
call
push
push
clc
push
sbb
mov
imul
les
fstps
xor
mov
push
loopne
jno
shrl
aaa
es
fdivl
into
fwait
jb
out
lret
imul
sub
test
pop
fnstsw
push
hlt
lcall
jne
ret
lcall
aas
idivb
xchg
cli
push
out
test
push
rol
scas
lret
push
nop
push
push
fadds
cmp
xchg
add
and
fidivrl
sub
rcrl
sbb
dec
mov
aad
mov
cvtps2pd
addr16
data16
cmp
ficoms
pusha
sahf
mov
pushf
or
imul
ss
les
movsb
gs
pushf
dec
dec
repz
dec
adc
xchg
mov
xchg
dec
cmp
jmp
cld
sbb
jnp
pop
rorl
mov
and
lds
cmp
cmpsb
into
fisttpll
mov
test
sub
pop
pop
aad
sub
mov
or
mov
add
inc
aam
cwtl
lcall
fxch
sbb
lret
lods
push
inc
out
sbb
and
xchg
push
rcll
testb
aas
inc
push
in
adc
mov
je
test
xchg
fcomps
mov
cli
sahf
and
jae
pop
ljmp
cs
shrl
push
pop
orl
inc
sarb
sub
cmpsb
and
ljmp
aas
sub
jg
xor
cmp
push
xor
call
mov
daa
mov
leave
pop
mov
mov
cli
cmpl
int3
in
sarb
mov
adc
pop
test
das
xlat
pop
add
mov
pop
test
sub
pop
leave
jae
fidivl
adc
xchg
cmp
add
mov
aas
pop
stc
out
decb
jp
sub
lcall
ljmp
in
add
jne
push
je
xchg
push
inc
ljmp
dec
sahf
sub
es
popa
pop
scas
and
lods
cli
or
xchg
subl
es
dec
mov
sbb
pop
pop
rcrl
fiadds
add
into
jmp
inc
popf
mov
cld
cwtl
lea
bnd
dec
push
mov
mov
shl
cmp
mov
push
xchg
sub
sub
inc
fdivrl
out
push
fcos
pop
and
adc
pop
aas
subl
mov
out
mov
jns
stos
scas
push
dec
pushf
lock
leave
jp
jo
sahf
inc
jp
xor
sahf
mov
leave
and
cmp
mov
pop
mov
test
add
mov
mov
aas
insb
lcall
lods
lahf
aas
aas
idivl
xchg
sar
push
fwait
enter
cwtl
dec
cmpsl
lds
lret
dec
pushf
nop
test
test
daa
movsb
cmp
lcall
mov
mov
leave
sbb
sub
inc
fimuls
cwtl
mov
insb
pop
mov
jae
fcoml
sbb
or
mov
jg
mov
outsb
and
or
jle
inc
jb
pop
xchg
faddl
cmp
push
fs
xlat
outsb
pushf
jle
and
sarl
dec
jmp
loop
mov
jle
xor
push
or
iret
push
sub
add
mov
jne
cmp
pop
into
lahf
mull
popf
mov
pushf
loope
enter
cmp
pop
mov
popf
test
insb
bound
pop
dec
ljmp
imul
scas
test
add
xor
xorb
and
sbb
loopne
aas
popf
pop
testb
xor
mov
dec
daa
hlt
jge
fsubl
lret
jle
or
ret
loop
cwtl
xor
dec
sbb
imul
mov
fadds
cli
je
push
insb
imul
sub
and
jle
and
and
mov
xor
test
je
jl
inc
faddl
pop
sub
int3
aaa
fwait
mov
inc
enter
mov
sub
jge
aas
xor
sahf
das
dec
mov
mov
ret
and
push
repnz
nop
jns
enter
sub
lret
movsl
and
int
test
mov
xor
sti
sub
jne
sbb
or
sbb
mov
call
lds
test
sbb
aas
push
cmpb
shl
mov
xchg
xchg
ds
jo
loopne
imul
mov
ret
sub
test
aas
xchg
jl
vcvtpd2psy
jmp
xchg
das
dec
mov
inc
ja
scas
cmp
xor
sbb
scas
fwait
push
movl
fidivrl
out
add
mov
lea
mov
leave
dec
test
fistpl
xchg
and
fldl
mov
into
cmp
jae
popf
and
dec
pop
jp
popl
xor
xchg
lret
mov
cmp
cmc
cwtl
inc
or
sub
adc
lods
mov
ror
mov
aam
js
mov
pop
test
xor
aaa
jo
dec
aam
cli
je
sti
xchg
mov
jmp
fisubl
icebp
sub
cmp
mov
in
mov
lock
or
scas
iret
sub
fdivr
push
pop
jae
pop
ljmp
dec
pop
jo
orl
jl
mov
sahf
fs
mov
push
testl
and
or
push
mov
andl
push
test
inc
jbe
andb
mov
xorl
clc
stc
add
stos
cmp
mulb
pop
lahf
jo
jle
incb
lods
jg
sub
pop
add
ror
add
scas
mov
adc
in
fadds
or
stos
addr16
xchg
dec
mov
daa
test
cli
adc
xchg
imul
aas
pop
cmp
pop
in
in
out
xor
push
aaa
sbbl
pusha
mov
lret
inc
push
mov
scas
or
test
testl
sub
mov
loopne
in
xor
in
pushf
xor
into
dec
sbb
ret
cmpsb
jg
cld
jecxz
push
outsb
jo
ret
sbb
setb
cmp
cli
clc
cwtl
cmp
outsl
pushf
sub
les
or
jg
fdivs
mov
repz
dec
push
xchg
jmp
inc
aaa
ret
sbb
jl
imul
cli
mov
cmp
test
mov
out
daa
pop
jb
clc
cli
pop
jb
xchg
data16
xchg
rcrl
push
jno
paddw
pop
add
adc
mov
in
and
mov
std
mov
pop
add
in
fsubs
sbb
nop
js
leave
jo
mov
fdivrl
bound
fldl
adc
dec
add
shrl
fwait
leave
mov
mov
sbb
mov
ljmp
mov
mov
cmpsl
negb
aaa
jno
sbb
xor
push
mov
dec
pop
sti
mov
jnp
add
mov
jb
push
lahf
sti
cmpsb
outsb
mov
out
fwait
dec
mov
or
in
popa
nop
xor
mov
mov
mov
fs
jbe
mov
test
loop
int3
fdivl
mov
push
xlat
pop
loope
incl
dec
jecxz
dec
cld
loop
xchg
stos
aad
aas
xor
push
scas
pop
ret
test
pop
inc
mov
fwait
cmp
sbb
sbb
test
adc
std
pop
test
xchg
int3
loope
pop
pop
addr16
dec
repz
push
mov
cld
addr16
jns
xchg
cwtl
das
mov
jnp
ja
test
pusha
mov
jl
jp
cmp
lea
imul
mov
xlat
pop
push
inc
cmpsl
mov
out
loopne
dec
sbbl
pushf
fdivrs
subb
outsb
inc
xlat
repnz
adc
test
loop
aas
pusha
enter
sbb
das
rcll
adc
jl
les
pop
ret
rclb
or
ficompl
test
pop
mov
aad
jle
adc
cmp
xchg
test
jp
bound
dec
push
mov
test
scas
adc
pop
dec
sub
inc
sbb
dec
cltd
mov
jb
ds
mov
sub
cmpl
adc
fildl
lds
cwtl
sbb
sbb
push
and
xor
xchg
jecxz
test
mov
mull
xchg
in
inc
cwtl
insb
mov
and
inc
lods
enter
xchg
jnp
lret
sbb
dec
xor
jge,pt
dec
xor
aaa
jmp
xchg
dec
and
xchg
mov
jl
test
mov
push
or
jge
jae
sti
in
or
imul
xchg
out
pushf
pop
imul
cs
xchg
stc
mov
or
dec
pop
clc
pop
mov
pop
pop
jecxz
xor
xchg
and
stos
movsb
dec
lahf
and
addb
pop
addr16
sbb
test
mov
pop
mov
sbb
test
pushf
fsubs
xchg
shlb
jmp
popf
fistpll
sbbl
jbe
addr16
ret
popl
stos
dec
cmp
lds
rcrl
aas
pop
out
test
ret
mov
jle
sbbb
repz
jne
dec
inc
add
mov
add
aaa
cmp
push
stos
lock
xchg
xchg
mov
incl
addl
mov
or
out
xchg
mov
popa
insl
pop
int3
std
je
je
xorb
and
add
popf
dec
pop
add
and
stos
dec
jge
aas
and
mov
adc
cmpl
jne
cmp
lods
sahf
pop
pop
pop
jg
inc
and
fdivrl
mov
dec
push
jle
mov
push
pop
mov
push
and
mov
insb
sub
fcmovnb
pushf
cmp
out
jg
mov
sti
or
xchg
loopne
cmp
sbb
dec
adc
push
ficomps
leave
cmp
lock
cmpsb
shlb
push
mov
dec
into
and
ret
jecxz
pushf
mov
rorl
mov
xor
mov
sbb
xchg
cmp
pop
push
jle
and
pop
faddl
pop
pusha
scas
sti
addr16
es
leave
stos
cwtl
fwait
jmp
std
mov
inc
popf
sti
jae
fdivrp
testb
sbb
stc
xchg
sbb
sahf
les
cli
cwtl
jmp
pop
xchg
pusha
add
add
fsubl
jnp
jns
add
aas
test
mov
inc
push
pop
mov
popf
sahf
pop
inc
fdivrp
mov
ret
lods
jl
sbb
mov
pop
lcall
ret
out
adc
pop
mov
cmp
add
bound
add
push
inc
fnstsw
jecxz
andl
cmp
cld
mov
pusha
push
dec
pop
cmpb
orb
cmpsb
cltd
fwait
mov
mov
hlt
push
push
fmull
cld
outsb
stos
shl
pop
push
roll
sbbb
xchg
mov
sti
divl
mov
adc
enter
aas
stos
and
repz
scas
mov
cmp
hlt
and
rcrl
sbbb
fildll
jo
stos
sub
dec
cli
popa
adc
cltd
loop
std
pushf
call
cmp
mov
insl
jmp
push
popa
fadds
cmpsl
int3
pop
mov
or
lret
cwtl
insl
mov
sbb
aad
in
sbb
mov
jbe
arpl
push
pop
popa
outsl
inc
inc
test
xorb
cwtl
sbb
loopne
jbe
cmp
ss
fiadds
inc
mov
adc
fwait
imul
inc
lret
bnd
test
fistps
bound
in
mov
cmpb
pop
fwait
into
pop
xchg
stos
aas
cmp
sub
inc
sub
cwtl
push
icebp
xchg
xchg
pop
call
shl
jne
cmpsb
mov
inc
ficoms
mov
dec
add
dec
push
leave
mov
sti
scas
cmp
lods
jp
stos
cmp
jl
aad
xor
js
fmull
mov
addb
sbb
mov
sbb
aaa
iret
sub
sbb
mov
jmp
sbb
mov
inc
scas
push
lcall
mov
icebp
es
into
call
bound
daa
pop
pop
cmp
ret
cld
imul
fldt
sbb
js
es
pop
xchg
mov
mov
popa
and
hlt
inc
fdivr
in
push
cmp
and
pop
fildl
jb
scas
mov
add
cmpsl
fadd
mov
add
into
and
adc
outsb
ret
fistpll
dec
in
cmp
push
ret
pushf
loope
xchg
or
movsl
rorl
imul
stos
stc
jae
jmp
in
jns
jne
sbb
adc
cmp
cmp
mov
pop
inc
js
sar
es
popl
sub
shll
nop
cmpsl
or
in
pop
sbb
xor
pop
pop
fstl
jp
and
into
mov
jge
outsb
int
sti
adc
xlat
out
fmuls
in
enter
cmp
lahf
sub
sub
add
je
lods
xlat
or
das
fs
icebp
and
adc
insb
jg
bound
and
jbe
jo
mov
addr16
mov
sbb
je
pop
jg
cmpl
loopne
fsubrs
xchg
jnp
sbb
xor
mov
fld
sbb
popa
popf
mov
rorb
neg
push
push
and
mov
fcompl
repz
pop
cmp
orb
cmc
xchg
das
stos
jnp
jl
repz
shll
and
leave
mov
xlat
xchg
cmp
lret
sbb
inc
clc
pop
mov
jmp
arpl
jbe
mov
xchg
in
test
int
fcompl
not
mov
dec
pause
ja
cmp
cmp
xchg
push
sti
std
sbb
cltd
xchg
fcoms
jo
mov
or
sbb
out
imul
or
sub
pushf
mov
inc
mov
pushf
cmp
mov
sahf
fsubs
arpl
cvtps2pd
push
pop
add
and
dec
fmuls
jno
or
inc
dec
cmpb
sub
cmp
imul
jp
ss
outsl
or
mov
and
push
sbbb
rcrb
cmpsl
jl
sbb
sarl
movl
pop
test
lahf
ss
mov
xor
decb
xchg
outsl
sub
pop
sbb
rcr
out
std
xchg
or
or
scas
ror
sbbl
fdivrp
mov
mov
xchg
mov
add
ret
pushf
cwtl
hlt
fisttpll
add
sbb
dec
sbb
mov
lahf
fwait
mov
sbb
dec
addl
add
mov
xor
cwtl
clc
inc
pop
mov
rcr
adc
arpl
mov
sub
pop
test
pop
js
loopne
dec
xchg
in
cmp
in
pop
loop
inc
jne
or
cmp
mov
mov
or
jns
push
jae
lea
lahf
pop
shrb
out
popf
sbb
pop
mov
jne
inc
pop
fs
ds
pop
loope
dec
jle
cwtl
inc
cli
push
fstps
sbb
mov
jp,pn
cld
pop
movsb
lds
leave
roll
shlb
jae
aad
push
fsubrl
aaa
rcr
aad
mov
pop
mov
test
or
sbb
jno
dec
pushf
add
inc
sahf
ret
jb
scas
clc
orl
jns
fstpl
sub
cli
shr
das
cmp
add
xor
jae
test
add
aas
daa
or
fbstp
sbb
adc
mov
inc
es
dec
jmp
ret
ret
add
mov
outsb
mov
push
lods
pop
ret
adc
mov
jg
sti
ds
sbb
mov
mov
xchg
popl
sub
scas
mov
iret
das
scas
sti
scas
lods
jle
cmpsb
add
fcomps
jg
and
aas
push
xchg
add
jg
das
mov
adc
nop
mov
aaa
clc
pop
stos
mov
sub
cmp
mov
cs
dec
and
mov
xchg
sub
inc
insl
ja
mov
lds
dec
movsl
sti
int3
int
push
pop
inc
fildl
les
sbb
loopne
ss
dec
cmpsl
rorl
sub
cmpsb
aas
lahf
inc
aad
jp
adc
sbb
inc
jb
pop
or
hlt
mov
push
pushf
fcomps
aas
adc
and
aad
inc
push
aas
stos
dec
mov
sbb
popf
sti
icebp
and
xor
and
adc
mov
xorl
mov
rcrb
fidivrl
push
xchg
in
je
pop
mov
inc
ret
pop
adc
stos
sti
add
lock
out
mov
icebp
add
cmpsb
and
mov
addb
sbbb
aad
sbb
adc
adc
call
push
jle
or
cli
lds
mov
sti
inc
int
test
jmp
sti
pop
jns
nop
int3
push
ja
fs
or
fucomp
and
add
je
loop
in
pop
test
inc
fstpl
lea
dec
mov
mov
mov
sbb
popa
daa
pop
push
rorl
add
inc
addr16
pushf
cld
cs
or
push
ss
mov
or
inc
dec
dec
cmpsb
packsswb
jb
push
sub
mov
pop
imul
fwait
outsb
out
mov
scas
scas
adc
fstps
test
adc
sbb
enter
xor
mov
xlat
shll
jge
out
mov
fsubrs
jns
aaa
cmp
mov
jg
hlt
dec
fmuls
xchg
ljmp
push
mov
leave
sbb
xchg
jnp
pop
mov
cs
out
xchg
jae
sbb
mov
inc
jecxz
loope
ficomps
xchg
rorl
sbb
jp
in
jmp
mov
scas
and
dec
xor
mov
scas
adcl
call
cmc
mov
fcomip
stos
inc
jp
mov
sbb
mov
mov
add
jg
push
shl
sbb
sahf
pop
stos
xor
iret
push
cmp
sbb
or
imul
stos
and
cmp
jle
lret
xor
mov
cld
cld
popf
or
enter
das
jg
mov
cmp
adc
add
repz
into
scas
jne
and
adc
and
sub
nop
out
out
lods
mov
xchg
cmpsb
cs
sarb
sub
xchg
sub
dec
mov
clc
push
cwtl
inc
out
insl
sbb
test
inc
dec
xchg
lcall
dec
and
arpl
xor
mov
movsb
imul
xlat
lea
rol
inc
aad
test
sarl
cmp
scas
push
mov
push
out
and
xor
test
scas
sbbb
lds
out
sbbb
cmp
cmp
inc
cmp
movsl
mov
lock
lds
sbb
gs
push
push
and
sbb
cwtl
jnp
ja
cmpsb
movsb
jmp
cmpsb
jnp
adc
daa
dec
sbb
sbbl
mov
bound
push
mov
movsb
pushf
dec
scas
xor
shl
mov
sbb
sbb
adc
pop
xchg
pop
jmp
cmp
pushf
das
out
inc
mov
mov
movsw
pop
sbb
sbb
sbb
mov
adcb
pop
lods
pusha
pop
cmp
inc
fcos
repnz
jnp
cwtl
fstl
cld
push
pop
test
orl
mov
cmp
fwait
sbb
adc
fistpl
cs
pop
fsub
call
fadd
daa
xor
add
cmp
or
es
inc
jp
movsl
adc
pusha
sub
scas
cmp
mov
movl
sbb
jp
and
stc
fnstenv
mov
xor
pop
outsb
shll
ds
pop
mov
sbb
ss
mov
jl
fstp
call
fcmovnb
ret
ret
in
jmp
aad
cmp
pop
loope
add
es
jmp
pop
stc
dec
adc
mov
inc
dec
jle
aaa
in
inc
xchg
cld
dec
mov
cmc
mov
jg
sub
bound
inc
mov
push
test
test
mov
popf
clc
mov
xchg
stc
adc
push
pop
push
push
pop
push
mov
aas
pop
sub
jecxz
adc
nop
test
fwait
mov
add
fcomp
mov
pop
rcrl
xor
mov
pop
out
je
mov
jge
rcrb
lea
subl
aas
xor
sbb
sbb
and
mov
jns
ret
dec
pop
jo
push
cmp
sub
mov
out
aas
test
std
jg
ja
sub
fimuls
dec
movsb
or
shll
test
xlat
jecxz
adc
mov
mov
adc
xor
mov
push
jle
sub
cmp
inc
cmp
jae
sbb
pop
pushf
jno
or
pop
mov
mov
test
sbb
inc
adc
fcoms
lcall
out
push
or
lret
mov
or
sbb
stos
loope
lahf
cmp
ljmp
pop
add
jmp
int3
dec
test
pop
dec
xchg
fwait
mov
loopne
mov
shrd
fld
jmp
fisubrs
stos
jnp
outsb
jl
test
mov
lret
movsb
sarl
sbb
sbb
or
mov
jmp
pop
mov
push
cmpsl
in
ss
ja
clc
or
mov
aaa
push
test
lods
sbb
sbb
sahf
pushf
mov
and
jne
leave
fwait
pop
dec
sahf
dec
mov
sbb
out
mov
add
in
std
adc
or
mov
outsl
lds
inc
mov
fmull
aaa
leave
out
fnstenv
lods
pusha
stos
sti
adc
mov
add
cmp
lds
dec
cmp
pushf
fisubrs
jle
aaa
xchg
aad
jne
xchg
out
fcompl
mov
shlb
mull
mov
je
sbb
icebp
les
lods
clc
pop
push
mov
add
dec
adc
out
fwait
sbb
sahf
hlt
mov
lds
sub
ds
cmp
out
sbb
subl
sub
xchg
mov
lcall
dec
sbbl
mov
xchg
or
aad
dec
aam
std
popa
sub
jecxz
sbb
mov
sahf
jp
std
icebp
mov
test
and
aam
imul
fistpl
inc
xor
shl
mov
pop
sbb
fdivp
cld
cld
jmp
sub
arpl
sbb
outsb
jge
fsts
mov
mov
jb
cmp
jns
sub
dec
jno
push
push
sahf
inc
inc
mov
mov
adcb
and
push
ret
pushf
mov
sbb
into
aas
mov
negb
scas
loopne
cli
sub
jmp
xor
jg
imul
xor
sbb
jg
mov
xchg
xchg
ret
xchg
jno
jne
rorb
pop
lock
lods
adc
fmul
lahf
mov
mov
jnp
cli
sub
mov
push
inc
cmp
sbb
jmp
xor
ds
icebp
mov
sub
icebp
movsl
sti
push
jns
iret
adc
aaa
mov
sbb
sbb
ret
sub
andl
jns
rcl
push
test
cwtl
repnz
jp
arpl
fsubrl
int
xor
jns
mov
outsl
mov
cmpl
inc
mov
mov
jae
xchg
sub
cld
and
adc
mov
and
mov
repnz
and
fmull
nop
sub
jecxz
lcall
arpl
sbb
fwait
cwtl
sbb
push
test
rol
xchg
cs
repnz
mov
adc
jne
mov
cld
test
cld
cmp
adc
fildl
aas
incb
adc
lods
push
xchg
sbb
mov
test
inc
sbb
rcll
mov
movsb
adc
sbb
out
jle
je
pop
push
fbld
das
cli
test
inc
mov
movsb
aam
jp
mov
int
cmpl
mov
arpl
enter
xchg
pop
out
sbb
int
mov
lock
add
pop
ja
popa
mov
rcrl
aad
lret
rorb
mov
inc
repz
and
cmp
inc
loopw
popf
fcompl
inc
pop
adc
xchg
push
mov
jmp
orb
xlat
cltd
pushf
test
outsb
xor
xor
out
pop
enter
clc
mov
ret
cmp
inc
dec
adc
pop
sarb
out
dec
dec
or
pop
pop
or
rorl
outsb
in
mov
cmpsb
jg
js
inc
dec
inc
outsl
mov
movsb
sbb
xlat
test
push
jns
or
add
pop
jne
pop
ljmp
cs
jns
pushf
mov
cmp
test
sub
cmp
fmul
xor
fs
ds
mov
dec
cmp
test
int
cld
xorb
mov
or
cmpsb
push
mov
fnstsw
pop
aas
pop
sahf
sbb
push
sarl
cli
jge
loope
scas
dec
xor
push
and
filds
int
xor
sbb
xchg
xchg
and
fstpl
aaa
movsb
inc
incl
xchg
pop
dec
fcompl
and
scas
adc
xchg
mov
mov
mov
inc
pushf
sub
inc
jg
addl
xor
sub
daa
fsubrl
jae
dec
mov
addr16
std
sbbb
xorb
in
xor
scas
push
lcall
pusha
sub
sub
cmp
sbb
in
xor
jg
daa
dec
sbb
cmp
test
icebp
clc
push
mov
jmp
mov
jl
push
and
pushf
inc
cld
cwtl
cld
movsl
mov
imul
inc
add
cwtl
insb
jnp
jg
mov
out
cli
sbb
mov
gs
pop
inc
sbb
or
je
inc
les
cmp
mov
jno
cltd
lret
mov
pop
sarl
lret
xchg
sbb
inc
jp
push
jns
into
add
dec
cmp
cvtdq2ps
into
push
test
sbb
movsl
enter
sti
and
test
stc
stc
mov
jne
aas
add
stos
jns
mov
xor
mov
and
jbe
sub
pop
sahf
or
rolb
loopne
mov
mov
push
test
sbb
pushl
fdivrl
sub
xchg
ljmp
mov
sub
mov
add
cmc
dec
sub
and
xor
nop
out
xchg
xchg
pop
mov
cwtl
jge
cmp
mov
or
xchg
enter
ficoms
imul
sti
in
pop
addl
sbb
out
mov
fidivrs
jecxz
push
cltd
insl
push
sub
xor
xor
in
scas
and
in
sbb
sub
adc
cmp
es
and
sbb
sbb
add
clc
dec
mov
jno
jno
adc
push
lock
insb
cmp
or
fmull
push
mov
out
pop
adc
mov
inc
insb
shr
les
pop
sbb
mov
jl
scas
cmp
mov
mov
add
aad
inc
xchg
cmp
cmp
cltd
xchg
movsb
cmp
push
xorl
lea
hlt
gs
repnz
adc
ror
clc
xchg
aad
xchg
xchg
push
out
cwtl
std
ljmp
jl
xor
cmp
push
xlat
add
cltd
ror
lods
out
fsubr
pop
lds
hlt
pop
mov
xchg
pop
jns
push
mov
and
sbbb
mov
xlat
inc
test
push
movsb
push
or
adc
hlt
clc
sbb
pop
sbb
cli
or
fildll
sarl
add
rol
in
xor
mov
jecxz
sahf
fcomp
enter
rorl
add
jmp
dec
cld
push
inc
fidivrs
jle
outsb
jns
leave
aas
dec
mov
push
dec
jg
xchg
enter
addl
push
sub
mov
mov
jmp
shl
or
aas
xchg
pop
int
nop
mov
scas
mov
addb
lea
jb
add
cmp
js
adc
xchg
jl
dec
sbb
and
jge
je
pop
mov
mov
das
cmp
adc
mov
mov
pop
jle
jno
dec
cmp
mov
dec
xor
mov
mov
fwait
cmp
mov
inc
rcr
pop
xor
and
sub
aas
mov
nop
pop
test
xor
test
xchg
pusha
test
and
mov
xchg
sbb
jnp
test
inc
sahf
jmp
cli
and
inc
xor
les
sub
mov
stos
mov
inc
fimuls
lock
mov
push
mov
ret
lods
jg
mov
movsb
sti
mov
cs
mov
sbb
lods
fildll
daa
in
adc
push
insl
cmp
mov
jnp
aad
add
dec
sbb
test
sbb
mov
pop
add
dec
inc
adc
inc
pop
pop
into
test
mov
lods
mov
lds
push
hlt
dec
js
dec
sub
ljmp
xchg
inc
lock
faddl
clc
mov
outsl
push
out
push
xor
aaa
test
inc
pop
ljmp
mov
repnz
hlt
enter
xor
ja
jmp
or
fisttpl
es
xchg
lds
in
xor
mov
cwtl
cld
jg
stos
shl
in
jnp
xchg
scas
mov
in
popf
xchg
mov
rcrl
mov
test
or
adc
cwtl
add
adc
push
test
cli
mov
lock
pop
inc
jb
sbb
test
outsl
sub
cmpsl
inc
mov
iret
inc
sub
jo
movsl
mov
push
jl
icebp
jno
mov
sub
push
flds
ffreep
push
and
movsl
fmuls
push
xchg
ret
xchg
push
mov
ds
aad
ret
inc
popf
mov
dec
popf
aas
xchg
enter
fdivrl
jle
inc
jnp
sbb
xchg
test
cmp
subl
pop
sbb
movsb
push
int
mov
lahf
cmp
mov
ret
jns
std
sahf
xlat
add
out
pop
sub
stc
negl
dec
pushf
cmpsl
fcoml
ret
mov
inc
mov
out
fmuls
sbb
sarl
or
cwtl
mov
mov
dec
pushf
mov
dec
enter
test
mov
pop
loopne
cmp
popf
mov
cld
push
sbb
mov
cwtl
mov
cmp
or
push
mov
jp
jl
dec
ret
fldenv
lods
push
cli
sub
mov
or
lcall
imul
push
ficomps
jno
pop
sub
lods
fsubr
add
addr16
clc
ja
incb
cmp
movsb
adc
out
xor
sub
and
and
jecxz
sub
cli
jns
mov
pop
sti
js
lods
sbb
data16
aas
icebp
cmp
lea
mov
add
sub
inc
mov
pop
cmpb
out
ss
imul
pop
inc
mov
jb
xchg
xchg
pop
push
test
les
adc
pusha
cs
outsl
jp
cwtl
xchg
xor
add
mov
iret
enter
jbe
fldl
mov
outsb
adc
aad
ja
mov
jmp
arpl
and
mov
ljmp
les
xlat
sbb
out
clc
adc
fiadds
es
jnp
loope
popf
dec
push
or
xchg
outsl
out
dec
cld
aaa
mov
jle
enter
int
out
cli
cwtl
fdivs
cld
mov
dec
pop
mulb
ret
fdivrs
xor
pop
repnz
and
adcb
aas
add
dec
dec
fwait
cmc
sahf
mov
mov
shlb
js
cwtl
cmp
loop
scas
sti
mov
xorl
pop
movsl
jp
and
lds
stos
cmp
out
xorl
add
ret
jbe
cli
adc
xchg
push
jecxz
cltd
repz
mov
xchg
ds
jge
mov
orl
scas
mov
jns
jmp
gs
mov
pop
cmp
mov
mov
push
pop
prefetcht0
sbb
mov
add
pop
int
leave
stos
sub
mov
mov
leave
and
stos
jae
in
push
repz
cmpsl
mov
outsb
pushf
stc
out
xor
out
rcrl
inc
test
call
add
push
incb
push
adc
test
xlat
xor
out
lds
mull
adc
sub
jne
adc
stos
xor
popf
repnz
jae
mov
sbb
loope
adc
inc
mov
push
cs
dec
push
dec
call
xor
out
punpcklbw
xor
ds
rcrl
insb
mov
ud1
insl
movsl
xchg
jnp
sbb
pop
mov
pushf
stc
or
inc
in
repnz
fs
inc
mov
mov
cmp
sbb
push
mov
fs
jb
cwtl
data16
ds
leave
inc
and
add
test
dec
sbb
leave
filds
add
mov
push
ss
push
shl
call
push
nop
mov
inc
pusha
lods
inc
shrl
leave
cmp
cltd
mov
clc
bound
sub
pushf
rcrb
xor
iret
sbb
cmpb
cmpsb
pop
popa
mov
and
and
iret
pushf
lock
and
mov
ljmp
fisttps
mov
outsl
aaa
into
aad
cmp
mov
mov
jmp
push
cs
and
xlat
mov
pusha
push
out
lea
jg
daa
arpl
and
inc
mov
pop
xchg
movsl
stos
out
mov
xchg
stos
ret
dec
pushf
sti
pusha
xor
icebp
adc
add
lods
cmp
dec
fcoml
xor
sub
les
push
fmulp
push
push
dec
jl
jo
pop
stos
divl
imul
rcll
xchg
addl
mov
pop
imul
popf
outsl
mov
sbb
jecxz,pt
out
mov
sbbb
jbe
sub
sbb
inc
add
mov
in
scas
scas
pop
arpl
jg
popa
push
mov
adc
fsubs
pop
or
or
xchg
incb
out
pop
inc
xchg
gs
pop
fdivrl
ret
data16
pop
pop
test
fisttps
mov
jno
xchg
loope
cld
test
xchg
cwtl
add
movsb
mov
jecxz
outsl
lods
or
lds
ret
pop
aas
mov
pop
lahf
pop
dec
lods
je
push
sbb
fmulp
mov
dec
movsl
int3
test
or
pop
inc
sbb
les
pop
mov
stos
pop
clc
daa
out
fld1
jmp
cmp
add
cmp
mov
xlat
hlt
cmp
cmpsb
orl
xor
adc
push
out
dec
cmpsl
aas
adcb
mov
sbb
and
cmpsb
mov
xchg
xchg
movsl
add
sbb
mov
cmp
popf
mov
fbld
decl
sbb
xor
in
lock
dec
cmp
and
in
fs
xlat
add
cmc
pop
sahf
inc
iret
jg
in
mov
cmp
fcomps
jmp
pop
cmp
or
loopne
push
xlat
mov
sbb
call
fcompl
or
shll
call
and
loopne
mov
sub
xchg
mov
adc
repnz
mov
orl
mov
pop
cmp
add
aas
incl
sub
cmp
fisttpl
push
out
shr
pushf
dec
loopne
inc
iret
loope
scas
incb
jb
pop
jg
imul
jnp
into
pop
ds
push
xchg
loopne
push
pop
idivl
rol
push
push
ds
test
cmp
adc
icebp
add
ret
aas
xchg
pop
adc
aas
xor
push
mov
mov
mov
into
fs
shlb
cmp
cltd
insb
fdivl
dec
adc
test
jne
mov
sub
xor
or
roll
xor
fdivrl
mov
popf
inc
mov
movsl
movsb
cmp
mov
xchg
mov
mov
xor
jnp
dec
sbb
jns
test
mov
pop
lods
inc
jno
cwtl
add
cmp
mov
aas
mov
jb
mov
cmp
jl
push
xor
mov
leave
mov
adc
ret
outsb
cwtl
fmul
push
inc
pusha
es
xchg
in
jno
pop
push
xchg
pusha
push
lods
loopne
bswap
cmpsl
das
fdivr
mov
repz
pop
in
push
push
hlt
jg
jb
cmp
xor
dec
cmpsl
lcall
fiadds
sbbb
cmp
fs
and
pop
sbb
inc
lods
fwait
cwtl
sbb
push
fnclex
jno
jo
xor
repz
or
sub
into
mov
ret
cmp
mov
push
adc
gs
sbb
imul
sti
sub
mov
add
xor
mov
sbb
add
test
add
popa
inc
push
pushf
cld
add
icebp
repnz
ds
test
aaa
sbb
mov
std
or
sub
sahf
scas
sbbl
jle
jnp
clc
sub
js
loopne
out
push
test
add
mov
cltd
in
mov
fsubrs
fcmovnu
std
icebp
jp
inc
jge
jmp
xchg
jne
adc
adc
add
or
movsb
push
cs
cmpsl
bound
jl
divb
and
fidivrl
inc
lock
mov
in
popf
mov
imul
ds
cmpsb
std
hlt
mov
jl
jne
push
xchg
add
fisttpl
mov
xchg
or
jne
jl
mov
repnz
clc
mov
inc
mov
bound
dec
in
movlps
lcall
aaa
mov
repnz
test
out
rorb
cli
sbb
mov
cmpsl
adcl
push
scas
lods
push
daa
and
add
pop
inc
jne
movsb
pop
cmp
mov
mov
push
decl
nop
inc
pop
lret
jl
mov
sub
lahf
jmp
fdiv
cmp
add
jbe
mov
cmp
push
inc
sub
xor
lds
or
cwtl
push
stc
stc
cs
push
rcr
pop
inc
sbb
sbb
xor
xchg
and
cwtl
pop
push
popf
jge
sub
jp
fwait
test
and
xor
mov
in
mov
mov
and
es
sbb
push
mov
pop
push
cmpsb
icebp
pop
movsb
das
pop
sbb
lcall
lea
repz
aad
pop
cmp
xchg
add
cmpb
outsl
adcl
cwtl
push
dec
fs
sahf
push
pop
movsl
mov
aas
pop
jle
in
xchg
cmp
mov
mov
jbe
dec
stos
jmp
fidivrl
lods
inc
insl
stos
sbb
ret
mov
push
mov
mov
in
insb
pop
lds
pop
pop
nop
mov
cld
xchg
jl
cmp
cli
mov
int3
sbb
or
adc
sahf
push
stos
cmp
addl
negl
scas
or
and
xchg
add
or
loop
pop
xchg
jl
mov
sti
jbe
ror
rorb
js
aad
adc
test
xchg
mov
pop
sub
jnp
jl
pop
cmp
outsb
roll
or
insb
arpl
inc
movsl
xor
pop
or
lret
ret
sti
pop
gs
mov
int
sbbb
in
lods
jnp
dec
cmpsb
adc
rclb
pop
mov
les
sbb
test
stos
cmp
dec
xchg
sti
xchg
daa
sub
sbb
jg
in
and
shrb
aam
out
cmp
lret
sub
mov
rcrb
mov
ret
fdivr
cmpsl
cmp
xchg
in
pop
in
ss
lea
or
mov
mov
mov
pop
stc
shlb
dec
push
mov
xchg
fcoms
out
andb
fbld
jle
push
jle
shlb
fwait
iret
imul
mov
test
sub
ret
fsubrl
xchg
sub
enter
ljmp
pop
test
fcmovbe
popa
sahf
mov
out
pop
loope
ds
pop
fisubl
aas
xchg
lret
fldcw
xchg
inc
clc
fcoml
stos
adc
cmpsb
test
jmp
and
and
lods
sub
rcrl
jo
lods
test
es
jmp
cwtl
lcall
xor
xor
aas
lret
push
adc
repz
or
cltd
popa
cmp
and
rcl
test
cli
movsl
jnp
mov
xchg
stos
xchg
dec
scas
inc
pushf
xor
xchg
jmp
movsl
lods
into
daa
and
les
push
pop
inc
sbb
cwtl
sub
stc
dec
and
cmp
xchg
mov
push
movsb
fistpll
and
xchg
mov
in
test
xchg
adc
xchg
fwait
mov
jbe
inc
or
sub
mov
pop
sbb
pop
adc
fucompp
pushf
xorb
lds
scas
ret
mov
jns
outsb
out
popf
jo
mov
pushf
mov
cmp
aam
add
push
jns
and
jg
ret
fistps
mov
call
add
lds
ja
jge
pop
scas
outsl
jp
js
daa
xchg
adc
sbb
mov
lock
int3
insb
xchg
fsubr
xorb
mov
inc
sbb
dec
clc
pop
jp
ror
push
xchg
andb
jns,pn
jnp
dec
outsl
mov
andb
imul
jns,pt
push
dec
push
rcrl
adc
jle
xor
jmp
lods
mov
lock
adc
loopne
xchg
cmp
stos
inc
push
stc
mov
xchg
fdivrl
ja
or
rolb
cmp
jnp
xchg
mov
and
pusha
out
shlb
inc
jecxz
sub
sbb
cmp
push
sub
xor
xor
gs
imul
xor
cld
jle
jmp
jle
aas
rcll
mov
xchg
lods
pop
push
adc
sbb
sahf
sub
int
leave
loopne
cli
jle
mov
cmp
sub
cwtl
das
mov
jg
and
push
lret
pop
dec
xchg
ret
sbb
push
pop
mov
sub
mov
out
pushf
neg
sahf
mov
fnstsw
mov
test
outsb
cmp
sbb
iret
push
cmpsb
aas
in
std
shlb
sbb
sub
xchg
fcmovb
dec
scas
sub
pop
pushf
outsb
cld
adc
mov
addr16
shlb
pushf
je
and
aas
inc
movsb
fadd
ret
clc
pop
clc
sbb
rcl
addb
pop
cli
jge
stc
fxch
inc
pop
jo
xchg
mov
fmuls
push
idiv
xchg
call
push
sbb
nop
mov
ds
adc
jmp
fcompl
leave
sbb
mov
sub
pop
inc
push
test
cmp
mov
sbb
push
sahf
ficomps
hlt
cmovae
pop
push
mov
jmp
notl
cmp
das
mov
rorl
push
dec
aas
aam
xorl
js
mov
jecxz
or
cmp
dec
lods
jp
scas
out
cmp
or
mov
inc
jnp
js
add
sbb
rcll
pop
fwait
enter
pop
jp
pop
leave
loop
jne
mov
cld
inc
mov
push
mov
fisubl
dec
sbb
mov
pop
push
add
dec
fnstsw
daa
ret
mov
addb
jg
and
adc
jmp
outsb
sbb
sbbl
adc
scas
outsl
push
addr16
mov
in
pop
pop
mov
xchg
aas
xchg
pop
xchg
push
daa
mov
and
dec
adc
inc
dec
stos
sbb
mov
xor
decl
ficoms
ret
sub
jp
int3
mov
lcall
jge
dec
out
lock
xchg
ret
out
jb
in
ds
dec
std
and
test
sbbb
es
in
enter
ret
into
and
push
xchg
sti
jg
or
dec
pop
mov
sbb
pop
idivb
cmp
xchg
sub
fcompl
sub
pop
iret
lea
sbb
sbbb
mov
sar
inc
movsb
bnd
jb
adc
out
in
aad
xorb
jbe
cmp
cmp
lret
sti
outsb
xor
or
fadd
push
sub
test
cli
and
lret
add
mov
jmp
mov
shlb
jp
and
push
sbb
test
scas
ja
add
lcall
aam
xor
ficoms
pop
mov
jg
fcoml
test
cs
fucomi
dec
lods
clc
dec
outsb
cld
icebp
jl
mov
mov
les
sbb
lahf
pop
jo
or
hlt
sub
pop
arpl
insb
jle
or
ret
inc
sbb
jnp
dec
xlat
mov
mov
out
or
sbb
sbb
fs
test
shlb
add
insl
dec
xor
mov
les
mov
mov
cmp
mov
or
pushf
add
adc
cmp
or
lea
mov
jp
pop
les
dec
and
je
dec
clc
imul
inc
gs
mov
sbb
mov
or
aam
in
push
mov
shrb
mov
xor
mov
in
and
test
scas
out
sbb
loop
std
sbb
fcmovu
cwtl
fmul
xchg
mov
jmp
sti
popf
xchg
jnp
loope
fwait
pop
mov
test
inc
icebp
mov
pop
cmpsb
shrl
movsb
pop
daa
push
mov
test
jg
pop
scas
cmpsl
sub
push
ret
and
and
sbb
xor
sub
das
ret
push
je
loope
lds
cmp
shlb
pop
out
mov
iret
mov
mov
jb
fs
push
imul
cmpsb
cmc
sbb
loopne
out
xchg
push
movsb
nop
sbb
dec
xor
lods
push
scas
movsb
cld
pop
mov
mov
ret
popf
xor
pop
sti
push
iret
mov
mov
es
cli
pop
in
cwtl
movsb
bound
pop
icebp
mov
clc
adc
ds
test
push
pop
enter
sarl
adc
iret
rcrl
mov
mov
scas
cmpsl
fadds
mov
aad
scas
lods
and
xchg
fisttpl
xlat
xchg
mov
pop
popw
inc
enter
test
mov
int3
out
ret
xor
bound
fcomps
push
cmp
dec
cmp
xchg
subl
inc
lea
sbb
in
lahf
push
pop
cmp
out
cmp
adc
inc
pop
pop
rorb
adc
cltd
dec
jb
mov
mov
jns
movsl
cmpl
fdivs
aas
or
adc
and
mov
das
pushf
sbb
sbb
dec
int3
jns
sbb
aad
aaa
add
mov
sbb
and
sub
lea
dec
xor
fiadds
sbb
inc
aas
mov
jmp
gs
sbb
jbe
hlt
sbb
pop
sbb
cwtl
cmp
insl
fcoml
jbe
pop
out
sbb
ja
in
gs
jo,pt
mov
outsb
sbb
lahf
stc
addr16
lret
xlat
xchg
cld
scas
shlb
ljmp
dec
xchg
cmp
push
mov
sub
adc
out
arpl
sbb
adc
out
push
data16
fdivr
xchg
arpl
inc
mov
sarb
sti
jbe,pt
cli
cltd
inc
cmp
jo
mov
inc
daa
push
and
out
pop
fsubl
leave
divl
fs
ret
lcall
roll
loopne
sti
push
aaa
imul
into
scas
nop
fwait
or
mov
jecxz
fdiv
pop
xor
lcall
js
pop
pop
imul
jge
clc
push
push
mov
pop
fcoml
jo
or
stos
xor
mov
out
lods
cmp
aad
rclb
and
scas
leave
cmp
push
mov
sbb
in
mov
cli
out
cld
addr16
mov
mov
pop
sbb
push
sti
or
inc
sub
or
xor
adc
mov
cmp
les
jle
daa
lcall
fmuls
inc
sbb
fs
add
cmpl
fisubrs
jns
pushf
loope
mov
mov
pop
xchg
inc
sbb
push
cli
and
mov
insl
lcall
jae
xor
sbb
fistpl
sbb
cmc
cwtl
idiv
mov
faddl
xor
scas
and
int
pushl
aad
xor
int
mov
mov
rorl
pop
push
cmp
ljmp
jo
mov
clc
mov
mov
jg
inc
test
rclb
mov
mov
adc
fiaddl
mov
leave
ds
push
push
mov
pop
scas
mov
mov
cmpsb
push
add
jns
imulb
xchg
lcall
mov
gs
test
jmp
cmpsb
xchg
pop
test
xchg
dec
push
outsl
xor
push
jne
jb
cwtl
scas
pop
in
and
xchg
js
push
stc
movsb
sahf
pop
lds
dec
daa
aas
inc
lahf
mov
icebp
cwtl
mov
jle
mov
sub
pop
add
ficomps
aas
aaa
fisubrs
xor
test
jne
insb
xlat
cld
push
neg
dec
cmp
in
mov
jecxz
sbb
rorl
sbb
push
mov
cmp
into
outsl
xor
shlb
xchg
sub
mov
cmp
xor
sbb
push
inc
insb
and
pushf
or
mov
decb
roll
mov
xchg
sahf
inc
clc
daa
je
subb
sarl
std
mov
loope
add
das
lods
rolb
xabort
fistpll
das
arpl
arpl
or
jnp
inc
out
push
out
xchg
adc
dec
cwtl
orb
or
shll
das
test
pop
jne
add
push
cmp
fimull
pushf
sti
out
adc
add
aam
dec
das
xor
outsl
movsl
leave
sbb
fmull
sub
jo
ja
loopne
jns
mov
cmp
iret
jp
cld
xchg
mov
popa
pop
lret
aam
out
fistpl
dec
pop
mov
xchg
popf
or
cmp
jecxz
xlat
pop
mov
mov
das
push
xor
leave
add
out
js
cmp
pop
xor
pushf
add
les
fstpl
add
aad
inc
test
xor
dec
orl
mov
ja
test
cmp
sar
inc
cli
xor
das
xor
roll
addl
mov
hlt
test
pop
sub
pushf
sbb
xor
sbb
xchg
or
int3
or
xchg
jecxz
addl
inc
xor
sub
insb
fs
xchg
sbb
push
cmpsl
mov
mov
jmp
in
out
cmp
mov
aaa
jnp
and
sbb
outsb
cli
iret
in
cmp
loopne
mov
push
sub
jbe
inc
cmp
cmp
sbb
cwtl
cmp
js
popa
adc
adc
loope
add
mov
fdivr
aaa
fstpl
cmp
insb
mov
xor
or
fisttpl
mov
scas
push
cmpsl
sbb
adc
mov
sbb
jg
push
xor
mov
xchg
out
pushf
xchg
shlb
fnsave
testb
adc
jg
cli
pop
mov
pop
xchg
mov
cmpsb
sti
ljmp
addr16
mov
jae
push
jp,pt
mov
xchg
cmp
out
jle
pop
add
fsubrl
mov
fsubrs
mov
lcall
and
add
sbbl
sahf
jne
dec
enter
je
fistpl
lds
stc
roll
sbb
jo
in
pop
test
jnp
mov
subl
cld
mov
imul
cs
out
sbb
mov
sub
imul
mov
les
cmp
sahf
push
sbb
and
loopne
mov
mov
repnz
loopne
lods
iret
ret
xchg
or
mov
repz
mov
fsubrs
inc
mov
fcoml
mov
add
cmp
or
ljmp
pushf
adc
into
jmp
decl
iret
test
mov
adc
and
lahf
loop
cmc
inc
into
fwait
inc
jae
test
mov
xchg
sub
push
mov
shr
fdivrl
mov
dec
out
xchg
pop
out
jle
addr16
cli
sbb
ret
xor
xchg
cwtl
cmp
shl
mov
mov
add
imul
and
cs
repnz
xchg
sti
pusha
sub
dec
dec
mov
mov
xor
mov
push
std
jl
sbb
inc
js
push
xor
and
popa
out
sbb
push
mov
add
test
and
stos
enter
es
loope
mov
stos
addr16
bound
adc
adcl
push
jae
xor
movsb
adc
shr
in
movsb
sub
adc
iret
jle
repz
sub
pop
ds
xchg
cwtl
lods
cmp
pop
inc
push
data16
out
enter
lcall
pushf
hlt
adc
inc
mov
jae
pushf
fcompl
stos
add
sub
or
pushf
or
cmp
cmp
inc
lds
sbb
jg
in
movsb
bound
mov
popf
cmp
shll
mov
cld
and
stos
xor
rorb
cwtl
xlat
mov
fwait
add
mov
test
mov
je
xchg
cmp
xorl
jns
int
sahf
cltd
pop
or
xchg
pop
pop
fs
lcall
xchg
ret
inc
inc
sar
imul
cmp
rorl
sbbb
decl
push
jno
mov
mov
inc
fwait
mov
ret
pop
fidivs
push
cwtl
adc
negb
out
enter
lcall
lahf
fwait
sbb
icebp
jge
cmpsb
cmpsl
jae
cmp
sub
cld
ja
pop
shll
je
aaa
ljmp
cmp
dec
popf
jnp
movsl
dec
in
stos
loope
sbb
lods
test
xor
in
loope
jbe
stos
popf
cmpsb
mov
in
movsb
bnd
iret
adcb
sbb
mov
dec
jl
xchg
mov
cmp
or
lea
mov
xchg
loopne
push
divb
in
or
or
int3
jp
sub
pushf
sub
shll
dec
ret
call
fmuls
sub
into
pop
orl
pop
in
xchg
jno
fdivrl
xchg
adcb
aas
test
add
stos
mov
and
leave
sbb
jo
ss
aaa
fsubrl
jg
lock
je
pop
jo
sub
sub
fdivrl
aaa
jge
xor
nop
fmuls
lds
pop
mov
insb
mulps
jns
push
push
cmp
mov
stos
pop
mov
pop
stc
rcr
mull
iret
fbld
cli
add
flds
fcoml
outsl
mov
out
bt
jnp
mov
mov
sub
sbb
mov
lods
pop
outsl
mov
xchg
test
pop
adc
add
outsb
mov
ret
ljmp
adc
fidivrl
fwait
sub
test
jmp
mov
add
cmp
inc
nop
hlt
pop
mov
sbb
add
cli
cwtl
pusha
pop
scas
popa
pop
lret
dec
xchg
xchg
sub
leave
pushf
sbb
ljmp
call
push
xlat
add
cltd
sbb
cmp
cmpb
mul
jg
jl
adc
or
adc
popf
cs
inc
jl
xor
jb
in
fsubl
rorb
sbbb
jl
scas
rclb
mov
add
dec
mov
sbb
sbbl
popa
out
sbb
mov
pop
test
mov
mov
cld
dec
adc
sbb
mov
jns
add
aad
pop
mov
sahf
cmp
sbb
mov
lret
sbb
test
mov
cwtl
shrb
push
and
mov
adc
cmp
pop
pop
mov
das
jb
mov
xchg
push
mov
in
fwait
test
dec
sbb
loop
mov
xor
test
subb
mov
jb
sbb
fsubrl
mov
stos
sbb
sahf
mov
ss
es
jmp
aaa
cwtl
inc
es
cld
lret
sahf
movsl
ficompl
ds
js
lods
ret
out
data16
out
adc
nop
sub
jecxz
dec
negl
iret
sbb
ffree
cmp
jp
inc
out
xor
mov
mov
xor
stos
popa
adc
push
pushf
cmp
in
aam
ss
scas
xchg
loope
enter
sbb
push
clc
xchg
es
or
sub
aam
sarb
xchg
mov
outsb
filds
sbbl
out
xor
xor
inc
out
fdiv
sub
xchg
dec
cmpl
data16
jle
aas
pushf
xchg
lret
and
jne
pop
adc
popf
xor
out
push
outsl
dec
mov
jb
pop
cltd
jnp
mov
adc
popa
push
sub
push
mov
sbb
imul
js
loop
inc
sbb
sub
jecxz
stos
sbb
add
jg
mov
lds
nop
out
lods
jnp
sub
push
add
pop
outsb
in
cmpl
stos
mov
pop
pop
lods
rorl
iret
adc
inc
dec
adc
pop
stc
fdivr
ja
add
je
scas
pop
ja
stos
fwait
mov
popf
fs
cmp
sub
mov
mov
aad
sub
out
pop
subb
xor
pop
fcomps
push
cmp
mov
lret
mov
inc
popa
mov
imul
into
lods
shll
xchg
pop
mov
xor
mov
xor
jl
fists
test
inc
push
cli
sub
mov
mov
mov
mov
push
dec
xchg
xchg
fs
lret
sahf
dec
mull
cwtl
mov
jl
xchg
mov
inc
dec
and
cmc
or
mov
ficoml
jb
nop
fadds
movsl
pushl
sbb
lcall
popa
arpl
outsl
jge
mov
mov
in
aad
xor
dec
and
mov
sbb
sub
in
stos
jg
pop
xor
mov
sbbb
das
inc
mulb
mov
lcall
sbb
in
cmpsb
jnp
pop
push
mov
mov
push
dec
push
mov
inc
subb
cwtl
ret
mov
inc
pop
pop
pop
adc
call
xchg
mov
and
xor
test
pop
cld
jno
or
mov
fdivrl
mov
inc
lods
in
test
mov
int3
add
cmp
enter
dec
in
loopne
pop
fcomi
cli
xor
les
pop
into
mov
shll
arpl
push
mov
mov
or
mov
pop
sub
jno
lret
mov
mov
shll
add
pop
sbb
int
inc
loopne
jnp
pop
ja
inc
rorb
lea
test
cltd
into
fadd
inc
cmp
int3
ljmp
iret
adc
mov
lea
mov
mov
xor
jnp
aas
rcll
fdivr
mov
xor
cli
jmp
jg
or
mov
pusha
jle
sti
data16
jmp
les
and
cmpsl
addr16
sbb
xor
cmp
mov
aad
int
out
scas
and
mov
pop
insl
loop
rorb
sahf
and
les
add
sbb
mov
shrb
jg
sub
pusha
dec
lahf
or
jg
xor
xchg
mov
jg
inc
pop
mov
daa
cli
mov
mov
cld
ja
addb
daa
cmpsb
lea
lods
popa
jbe
inc
inc
mov
test
cmp
mov
ret
int
testl
xor
cmpsb
mov
pushf
push
and
es
or
add
mov
clc
insb
shlb
dec
popa
ja
mov
mov
pop
jno
ret
pop
repnz
cld
jg
push
dec
push
jne
ds
add
lods
mov
or
push
in
mov
mov
adc
sbb
lret
adc
ficoml
cmpsl
dec
test
jmp
cmpsb
add
jmp
sbbb
fdivr
dec
mov
dec
and
and
sbb
je
int3
out
lea
ret
lahf
xor
jo
push
mov
xor
sbb
mov
mov
pop
cmp
inc
sbb
cmpsl
adc
pop
push
mov
pop
cmpl
pop
jp
dec
ss
repz
xor
popf
adc
repz
jb
decl
insl
scas
push
lahf
mov
inc
ss
jae
xchg
xchg
cmp
loope
pop
push
inc
sub
mov
mov
cmp
dec
adc
xorb
mov
clc
idivl
inc
int3
negl
inc
loope
push
pushf
jo
js
icebp
pop
sbb
mov
fsubs
mov
das
outsb
stos
enter
sbb
jg
je
mov
sahf
pop
lods
jnp
das
ror
test
scas
push
jle
pop
pop
xchg
jp
inc
cli
pop
lahf
fldt
xchg
push
adc
mov
dec
xor
int
stos
push
and
movsb
lods
flds
ja
mov
ret
roll
es
mov
aad
pop
mov
cwtl
decl
adc
pop
xchg
pop
into
in
push
shrl
push
cmp
push
xchg
jge
push
pushf
icebp
cmp
jmp
out
jnp
xor
xchg
mov
out
rcll
je
cmp
pop
ja
jl
jns
mov
mov
call
movsl
test
call
push
fsubl
in
jbe
jnp
jmp
jmp
mov
jnp
cli
cld
test
test
stc
test
mov
pop
or
add
adc
test
pop
mov
sbb
sub
jle
test
adc
xor
pushf
out
xlat
cli
ljmp
setge
sahf
fdiv
pop
decb
pop
inc
xchg
mov
sub
pop
jl
repnz
mov
adc
dec
aas
into
aad
mov
sti
in
aas
dec
stos
lods
mov
push
in
xor
cmp
xchg
int
js
xchg
pop
and
mov
dec
vmread
aas
cld
mov
pop
push
dec
cli
sbb
or
scas
ja
sbb
push
lods
xor
add
cltd
fcoms
mov
cmp
enter
jl
mov
aas
cmp
push
sub
xchg
mov
addl
in
xchg
jp
pop
filds
sbb
ret
push
sti
jecxz
sti
outsb
push
fdivrs
icebp
sub
jbe
sti
dec
and
lcall
inc
mov
jbe
and
je
cmp
cmpsb
push
js
jno
xchg
xor
xchg
cmc
int
test
ljmp
mull
jle
add
push
mov
lcall
in
mov
mov
popa
rorb
fwait
xchg
xchg
cwtl
mov
lretw
pop
lods
lret
loop
jl
dec
stc
cwtl
loop
inc
je
add
ret
in
dec
orb
inc
mov
sub
test
add
sbb
mov
imul
dec
icebp
sahf
jl
adc
push
fdivl
xchg
xor
aad
add
and
xor
movsb
stos
inc
adc
add
fsubrl
test
lods
mov
cli
add
in
orl
test
mov
les
adcb
mov
leave
imul
sahf
xor
cwtl
out
mov
aaa
xor
sbbb
out
mov
mov
hlt
sbb
jge
pop
mov
or
sbb
ds
lods
inc
popf
sarb
jecxz
mov
cltd
xor
cltd
pop
push
pop
iret
mov
jmp
andb
pop
xor
sub
push
push
or
lods
shl
sbb
out
fsubrs
push
fldl
and
xlat
ret
push
dec
fwait
mov
fmuls
cmp
mov
aas
cld
mov
xchg
and
sahf
nop
sbb
aas
dec
pop
dec
sbb
sub
loope
push
push
xchg
gs
mov
andb
sbb
push
ds
aas
int3
cmc
xchg
fadds
popf
sti
loopne
push
jae
icebp
xchg
imul
jb
insl
sarl
clc
cwtl
push
popf
scas
pop
lds
into
fidivrl
mov
xchg
pop
pop
test
push
sarl
mov
xchg
mov
xlat
pop
lret
lahf
popa
sbb
push
je
lea
out
stos
leave
sbb
nop
aad
fldl
stos
test
jnp
pop
mov
xor
leave
add
mov
pop
xchg
mov
rorb
fistpl
out
cmpsb
jnp
pop
jl
adc
ret
mov
pop
call
sbb
mov
lods
cld
adc
cmpb
sbb
xchg
fcompp
sbb
pop
cld
mov
leave
mov
rorl
and
insb
mov
mov
aaa
movsl
movsl
dec
pop
mov
jle
std
jns
adc
or
fwait
std
pop
or
in
pushf
jl
fldenv
or
loope
jnp
dec
inc
imul
sub
or
pop
loop
aas
pop
xor
xor
rclb
mov
sar
roll
sbbb
jecxz
cmpl
add
inc
pushf
ficomps
jg
mov
mov
call
lret
mov
popf
imul
jecxz
loope
test
les
ret
out
jp
repz
xchg
sub
cwtl
xor
cwtl
adc
mov
outsl
test
pushf
xchg
aas
leave
lcall
adc
mov
orb
cli
sub
cmp
mov
test
push
mov
bswap
aas
cltd
sti
jmp
inc
pop
inc
out
mov
rorb
cmp
aas
std
rcrl
call
jp
pop
dec
mov
cwtl
mov
ficompl
pushf
sbb
push
mov
cmp
test
mov
call
fstpl
mov
aas
lods
jnp
cltd
jg
add
sbb
pop
pop
repz
inc
inc
das
mov
enter
mov
lahf
inc
mov
cmp
in
mov
cmc
cwtl
iret
sbb
add
xchg
frstor
es
mov
aas
inc
jo
iret
subb
js
sub
ds
xchg
les
jno
sbb
lods
lods
stos
les
add
out
bnd
xor
adc
movsl
cmp
mov
mov
xchg
sar
sbb
pop
das
and
jge
mov
out
ror
inc
cmp
ja
pushf
mov
das
mov
insl
add
mov
pushf
lret
test
inc
test
cli
je
ficoms
and
or
cmc
stos
xchg
scas
inc
mov
push
push
push
push
bound
fwait
lods
xchg
scas
cmp
jp
ja
popf
fs
pop
sub
enter
mov
inc
fsubrl
cmp
fadds
fimuls
inc
sbb
mov
inc
mov
sti
sbb
sub
fstpt
dec
xchg
sti
cs
mov
jnp
sbb
mov
adc
or
inc
or
fcomps
push
cmp
fcmovnu
sub
jmp
mov
mov
mov
lock
xchg
push
dec
dec
pop
and
xor
pushf
and
xchg
and
mov
movsl
mov
fdivrp
cmp
fwait
std
and
rorb
cmpsl
or
movsl
inc
rolb
cwtl
leave
mov
mov
stc
mov
lret
decl
xchg
pop
push
addr16
push
mov
sub
mov
mov
jns
sahf
sbbl
aad
aaa
movsl
inc
pop
sahf
pop
pop
insb
bound
xor
cmp
imul
add
ret
pop
push
cmc
insb
xchg
std
cwtl
or
decb
mov
popa
les
fstp
lcall
inc
test
pushf
es
mov
lods
jno
mov
pop
jle
mov
test
ss
shl
dec
pop
xor
lods
pop
imul
mov
popa
dec
jo
cli
mov
lahf
cmpsl
loop
pop
lea
cmp
push
jns
int3
xchg
sbb
sahf
mov
cmpb
mov
xchg
insb
and
dec
jmp
jo
jp
push
pop
sbb
dec
jg
flds
mov
jl
stos
adc
add
pop
pop
fcmovu
sbb
in
popf
xchg
dec
push
mov
adc
sub
xor
mov
roll
andl
cwtl
int3
ret
frstor
mov
cli
loop
sti
push
push
xchg
sub
arpl
dec
and
or
gs
dec
js
sub
mov
push
jle
sub
es
mov
cmp
scas
imul
add
sti
iret
mov
test
mov
pusha
ljmp
sub
xlat
aam
mov
ds
negb
adc
lock
enter
xor
xchg
sbb
pop
cmp
pop
imul
sbb
out
mov
pushf
inc
lret
add
pusha
add
or
iret
mov
insb
aam
lret
sbb
jno
pop
fdivs
jecxz
lret
lea
xor
cwtl
ja
lds
fadd
xchg
lea
lods
cmpsb
fstps
loope
push
jg
orl
repz
and
cmpsb
jnp
sbb
push
inc
adc
ds
sub
mov
mov
mov
into
movsl
inc
push
out
lcall
cmp
xchg
pop
sub
jb
fstl
sbb
fnstenv
adc
js
jbe
cmp
mov
xor
lods
cmc
sbb
aam
sbb
sbb
mov
jp
jg
adc
cs
out
mov
xlat
mov
and
pop
mov
or
lds
xor
cmp
sbb
rolb
movsl
sti
imul
repnz
cmp
enter
sbb
inc
es
cld
in
cwtl
test
cmp
negb
or
cmp
pop
sub
insl
xorb
enter
xchg
mov
sub
scas
enter
mov
sbb
push
sahf
mov
clc
mov
pop
xchg
shll
fadd
mov
sti
mov
scas
addr16
sbb
xchg
jmp
iret
mov
inc
push
cmp
aaa
sub
pop
inc
cwtl
push
and
rcr
mov
pop
pushf
pop
or
dec
jb
sub
xor
mov
pop
into
mov
stos
mov
ljmp
mov
jb
jae
sbb
dec
sub
fwait
das
les
ds
jb
hlt
jg
rclb
dec
mov
fsubs
imul
and
shl
cwtl
inc
mov
inc
aas
pop
push
sub
ret
pop
adc
fnstsw
stc
xchg
scas
out
sbbl
or
push
fdivs
push
mov
inc
leave
xorb
sahf
ljmp
sahf
ret
jg
xchg
cmp
add
cli
cmp
mov
add
push
cmp
in
lret
in
and
leave
cmpsl
mov
mov
cmpsb
cwtl
stos
out
mov
sbb
mov
adc
scas
sbb
push
incb
sub
std
std
idiv
scas
orb
sarl
pop
ja,pt
jge
aaa
icebp
inc
mov
jb
fdivl
jmp
add
pop
adc
ds
jbe
ljmp
xchg
mov
mov
adc
jg
fildl
cmp
push
in
outsb
enter
adc
mov
lret
mov
fmull
adc
adc
push
dec
pop
shlb
hlt
data16
cmp
in
or
adc
mov
sarl
fisttps
xor
cmp
into
push
dec
rorl
aas
add
lcall
jo
iret
stc
test
jecxz
stos
andl
dec
outsb
adc
pushf
mov
cmp
rorb
mov
jg
sbb
mov
sti
dec
pop
mov
add
push
push
xchg
pop
fcomi
xchg
fs
xchg
daa
mov
mov
mov
adc
cli
mov
sub
add
scas
xchg
enter
jp
shll
lret
cwtl
mov
es
mov
inc
mov
mov
mov
mov
arpl
pop
ljmp
push
cs
fcomps
sub
mov
mov
push
mov
lea
pop
mov
mov
push
cld
das
shlb
pushf
adc
into
inc
into
imul
ret
std
ljmp
imul
xor
jbe
rcl
sti
dec
or
sbb
nop
ljmp
movsl
mov
cmpxchg
mov
into
leave
pop
clc
mov
or
imul
xlat
jmp
xlat
jnp
and
and
lock
dec
and
stc
stc
out
push
mov
ret
cmpb
mov
loope
adc
sbb
ror
cltd
cmc
or
mov
push
clc
cli
pop
shrl
popf
dec
sbb
ret
lret
lret
mov
xchg
sbb
das
incb
mov
rep
aas
pop
outsl
sbb
sarl
mov
push
jnp
loop
inc
xor
arpl
ret
mov
or
jmp
stos
jne
mov
and
dec
adc
jnp
jmp
cmp
loope
jl
jg
add
cmpl
imul
lcall
inc
add
mov
ja
mov
loope
aaa
mov
push
je
in
jmp
mov
pushf
sti
sub
xchg
sbbb
and
sbbl
mov
mov
cmpsl
cmp
iret
call
push
dec
mov
std
push
outsl
mov
add
movsb
rolb
jns
out
cld
jmp
int3
enter
jecxz
mov
pop
mov
mov
cli
lds
test
mov
mov
cmpb
mov
pop
push
push
faddl
into
fimull
sbb
xor
ret
xchg
in
mov
fldl
popa
adc
cmp
aam
dec
arpl
add
adc
scas
xchg
fwait
sbb
js
jne
sti
sub
arpl
mov
call
or
sbb
push
iret
or
pop
stos
in
js
xchg
jnp
scas
lahf
lahf
jno
and
inc
or
pop
xchg
into
les
cmpl
pop
cld
lods
bound
and
out
pusha
lahf
lock
inc
int3
ret
jmp
cmp
imul
inc
mov
jnp
popf
add
loop
fbld
add
out
pop
sbb
fadds
ret
jo
ds
or
push
xchg
jmp
jnp
xor
daa
and
and
xor
movsl
add
xchg
mov
dec
outsb
inc
sbb
push
fcoml
and
cld
das
stos
lds
xor
stc
push
or
cmp
mov
mov
mov
in
leave
fstps
push
jnp
push
lahf
xchg
aam
lds
cs
dec
xchg
int3
daa
lcall
push
push
stc
test
push
pop
mov
test
adc
push
into
cld
cmpl
mov
std
mov
mov
push
adc
out
push
xchg
sahf
outsl
adc
sbb
out
jp
aas
jb
pop
les
add
sub
nop
lcall
imul
pop
aad
int3
inc
lcall
pop
sbb
sbbl
int
xor
or
xchg
ror
jbe
xchg
cwtl
cwtl
pop
out
inc
pushf
testb
sbb
hlt
add
cmp
xlat
lret
std
xor
pop
aaa
scas
loop
mov
sbb
jg
xchg
ret
sub
mov
jle
xor
out
adc
mov
sti
pushf
cmovo
bound
add
fistpll
or
sti
int
loopne
mov
icebp
aas
cld
inc
pop
mov
gs
pushf
js
and
test
jb
fisubrs
dec
mov
scas
inc
xchg
ja
mov
into
mov
flds
jae
popa
mull
aam
call
rcll
pop
add
push
jl
and
jmp
dec
aas
xchg
sbb
lcall
dec
in
add
xchg
sbb
push
out
push
in
aad
aam
notb
cmp
xchg
and
fwait
inc
cltd
mov
add
mov
repnz
or
in
mov
test
cmp
sub
call
or
or
pop
xchg
fsub
fcomi
jp
cmp
movsl
cmp
shrl
outsb
jecxz
orl
adcl
push
fwait
test
mov
or
fdivrl
sub
int3
cmpsl
cmp
add
pop
pop
pop
inc
dec
inc
je
sarb
xchg
mov
jge
jno
cmp
pop
movb
data16
mov
mov
mov
lea
int3
lret
call
neg
xor
rcrb
aas
xchg
inc
pop
das
and
push
cmp
mov
jge
mov
int3
cmp
outsb
cs
sbb
je
stos
inc
cmpl
ja
sarl
push
adc
lods
aas
cwtl
neg
jle
outsl
loop
jmp
jecxz
ds
enter
fstps
xchg
sub
jae
xor
mov
int
jle
cmp
fnsave
mov
pusha
mov
jl
jmp
scas
ret
dec
sbb
stos
lret
movsb
or
pop
mov
jae
cwtl
out
pusha
or
jp
or
push
or
fucomip
cwtl
shrl
dec
sahf
jg
insb
pop
sar
aad
mov
sbbb
mov
mov
jo
loop
bound
aad
fmuls
or
pop
orb
sbb
rorl
pop
or
sbb
xchg
pop
incb
scas
gs
pop
mov
jns
dec
rcll
or
dec
pop
mov
icebp
cmc
sbb
aad
sub
movsb
mov
pop
rcl
cmp
xchg
adc
mov
fcos
cmp
mov
fildl
test
jmp
in
mov
aam
aas
pop
and
cmp
or
jmp
fisttpll
bound
lret
inc
add
lea
in
jl
sub
fwait
aad
cld
and
int3
cmpsl
aas
popf
out
fdivr
jnp
scas
sti
cltd
pop
lods
mov
cli
test
js
mov
sahf
enter
cmpsl
mov
dec
add
popf
add
xor
outsl
in
cmp
mov
das
popf
aam
lcall
push
sub
jno
out
sbb
std
mov
or
mov
clc
filds
sbb
lahf
xchg
xchg
lds
inc
pop
mov
fldt
arpl
push
push
scas
cwtl
cmp
mov
or
cmp
sbb
jo
dec
pop
leave
inc
lahf
jae
xchg
sbb
jl
in
xlat
mov
mov
in
aas
jg
cwtl
pop
push
push
fsub
xchg
outsl
cmc
inc
xor
fmull
pop
lds
xor
je
shrl
in
inc
cmpsb
pop
push
les
incb
cmp
loope
cs
push
iret
mov
cmc
mov
inc
insb
fsubrl
cmp
mov
rcr
cmp
sbb
xchg
fcompl
cli
leave
xor
mov
dec
sub
lods
jne
nop
or
push
cmpsb
mov
aad
ret
movsb
fdivrl
sbb
inc
aas
xchg
fcoml
cltd
jecxz
fwait
xlat
ror
xor
mov
sbb
lcall
cmc
cmp
mov
push
call
clc
sbb
xchg
pop
jns,pt
and
les
cmp
enter
add
mov
insl
mov
jp
daa
fcomi
inc
push
lea
js
bound
lret
lods
in
scas
adc
mov
rcrl
jg
lahf
icebp
sub
cwtl
lahf
xlat
shl
dec
adc
lret
jns
xchg
inc
pop
cwtl
push
mov
in
stos
and
cwtl
je
mov
sub
cmp
adc
cwtl
mov
subb
rcrl
adc
and
add
sahf
cmp
jge
adc
fadd
stos
adc
add
int3
insb
rcrb
push
pop
xchg
mov
pop
movsl
lahf
pop
add
jne,pn
pop
rcrb
xor
imul
enter
lods
notl
pop
decl
xor
ror
pop
add
lahf
dec
jge
loopne
adc
xchg
jl
and
daa
iret
repz
jno
outsb
pop
ljmp
pop
out
cli
adc
xchg
xor
xchg
popf
daa
or
lods
jnp
cwtl
cmpl
leave
aam
call
xchg
cwtl
popf
fcmovbe
pop
xchg
orb
cwtl
mov
pop
or
mov
jge
pop
cmpsb
and
cmpl
sbb
add
fnsave
mov
push
mov
and
lds
in
mov
push
cld
shll
mov
hlt
sbb
push
jp
arpl
xor
jg
out
loop
sbb
jl
inc
xchg
sub
mov
cld
dec
add
bound
in
mov
out
lcall
dec
sbb
jge
push
arpl
dec
and
and
pop
insb
and
or
imul
xor
xchg
xchg
pushf
xor
pop
imul
jae
mov
push
stos
jne
adcl
or
out
mov
ds
inc
loope
dec
add
cmp
and
aaa
push
test
je
fnstsw
sbb
pop
push
ret
xlat
cltd
cwtl
loope,pn
pop
adc
cwtl
inc
mov
insb
stos
or
jl
fcoml
xchg
lock
repnz
shrl
daa
ds
sti
outsb
addb
or
mov
out
inc
lahf
aas
es
loope
jp
add
arpl
insb
imul
pushl
nop
test
shll
and
sub
aas
xorb
testl
outsb
leave
aaa
in
xchg
fcoms
aam
sub
xchg
inc
or
adc
scas
imul
enter
out
sbb
mov
jg
lret
sub
fsubrl
push
mov
rcl
imul
jge
cmc
or
fmuls
mov
xor
outsb
mov
or
cld
movsb
cmp
dec
jo
cwtl
pop
lods
sti
lods
pop
repnz
repnz
fcomps
sbb
xchg
rclb
cmp
push
incl
sbb
cli
sbb
push
push
hlt
sub
cltd
mov
add
adc
xchg
pop
mov
mov
ficompl
jb
movsl
sbb
mov
psubusb
mov
cmp
lcall
andl
rcll
test
add
out
add
loope
inc
sti
jle,pn
push
xor
cmp
fimull
mov
cwtl
mov
xchg
das
pop
jl
pop
adc
mov
sbb
pop
mov
sbb
jle
dec
enter
lock
scas
add
push
mov
imul
clc
mov
inc
scas
cmpsb
std
andb
sbb
sbb
inc
rcrb
or
xchg
jmp
in
lods
push
push
aad
test
popa
nop
mov
sti
popf
out
add
sbb
sbb
pushf
cmp
jo
je
aam
and
mov
sub
imul
push
mov
imul
jg
lcall
hlt
add
xor
fisttpl
mov
xchg
or
pop
jmp
cmc
jg
or
ret
jecxz
rcrl
mull
xchg
xlat
add
push
sbb
faddp
cmpsl
push
mov
cmpsb
ja
les
stc
fisttps
pushf
clc
leave
xor
mov
cmpsl
sarl
mov
sahf
adc
push
jbe
jg
ficomps
mov
lock
lret
aaa
test
jg
addb
dec
inc
icebp
sbb
decl
or
pushf
fwait
insl
mov
shl
aad
cwtl
pop
ljmp
scas
in
decb
mov
mov
cwtl
cmpsl
roll
andl
mov
lds
add
cmpsl
xchg
cmp
aam
repz
xchg
sbb
enter
negl
cmpsb
scas
ds
in
mov
and
sbb
loope
rorb
cmc
push
mov
mov
jg
sub
pop
dec
pop
clc
fisttpl
xor
adc
int
jne
cmp
pop
or
test
popa
aas
add
rcr
sub
pop
jle
add
push
hlt
dec
pop
mov
jno
repz
cmp
out
xlat
lret
xor
and
xchg
into
mov
sbb
jecxz
push
sti
in
jmp
xorb
mov
sbb
std
out
lcall
jbe
xor
fsubl
sub
xchg
add
sahf
addr16
mov
add
push
shl
ret
ret
rcrb
push
xchg
add
mov
in
pusha
pop
test
rorb
cmp
push
cmpsb
xor
mov
movl
pop
push
out
cwtl
push
mov
xlat
inc
adc
sub
mov
dec
jno
jae
daa
pop
mov
mov
cli
mov
out
cld
enter
test
jge
decl
movsl
pop
or
popa
fdivrl
data16
or
xor
fwait
or
out
mov
inc
xchg
mov
lcall
sub
insb
cmpsb
mov
sbb
pop
dec
dec
and
inc
dec
fcoml
mov
lods
jnp
imul
add
fdivs
and
xchg
call
leave
mov
rorb
cs
lcall
fldpi
ljmp
mov
pop
pushf
mov
fimuls
aas
jne,pn
loop
enter
loope
mov
stc
dec
and
ja
xchg
mov
call
push
cmp
jb
sbb
push
pop
lock
add
rcrb
int
fwait
mov
fcmovne
adc
fnsave
xchg
cs
or
xchg
out
sbb
add
mov
mov
cwtl
adc
in
ljmp
push
aas
aad
sub
jge
sub
mov
mov
loope
movsl
call
mov
or
sub
pop
popl
lds
mov
sahf
fnsave
pop
iret
js
cli
or
sbb
jg
addb
jmp
xlat
cmp
es
loope
jmp
jbe
inc
jb
fwait
mov
dec
mov
sbb
inc
rcr
arpl
push
stc
pop
sbb
mov
sbb
lret
js
jmp
xchg
jmp
mov
or
dec
daa
enter
push
std
dec
cltd
mov
xchg
int
fldcw
mov
pop
pushf
xor
pop
pop
loope
sub
push
sbb
sahf
in
add
in
fs
cmp
mov
aaa
mov
sub
pop
push
inc
pop
std
mov
sbb
mov
popf
cld
xor
fs
inc
mov
je
xchg
clc
push
add
scas
xchg
jns
fmul
sbb
and
mov
loope
add
lret
cld
aam
adc
mov
jge
out
loope
stos
sbb
mov
pop
mov
out
lods
mov
aas
jecxz
xchg
xchg
cmp
jbe
mov
adc
mov
jno
inc
sbb
push
shrl
sbb
shll
ret
pop
fdivp
mov
scas
shll
mov
sbb
addr16
jecxz
jno
cmc
jno
jo
scas
pop
fidivrl
lret
mov
sub
mov
aas
xchg
pop
jno
ficoms
loope
dec
sbb
pop
cmpl
jg
pop
or
jg
push
inc
jp
in
and
and
mov
inc
out
mov
in
dec
mov
xchg
dec
mov
push
xchg
inc
mov
jne
outsl
aaa
lea
mov
int
mov
addr16
mov
fxch
jns
inc
push
xchg
push
cltd
loopne
or
dec
lret
lret
jl
add
cmc
pop
jmp
xor
pushf
in
nop
jle
add
lods
pop
outsb
sub
cmpb
pushf
jne
andl
ret
cli
jl
push
push
pop
arpl
ja
sub
pop
into
inc
test
mov
iret
mov
es
sbb
mov
jmp
jne
fadd
fwait
and
jns
add
cltd
fs
mov
xor
icebp
xor
pop
push
ljmp
stos
test
pop
faddl
dec
pop
and
fs
mov
jp
imul
sbbl
jo
aas
mov
rclb
mov
xchg
scas
fucomip
dec
adc
dec
sbb
iret
push
mov
push
pop
pushf
test
pop
movsb
outsl
pop
jae
enter
out
fadds
or
fiaddl
jle
sahf
lahf
cltd
or
xchg
mov
pop
pop
jecxz
and
out
js
addb
enter
sub
pop
pop
fsts
rcrl
pusha
sbb
and
sbb
pop
loop
cs
cld
pushf
daa
aas
add
dec
sbbb
sbb
scas
call
out
popa
pop
fwait
inc
pushf
pop
cmpsl
ljmp
lods
sbb
dec
in
xchg
fcompl
add
jge
sub
sbb
popa
add
fsubl
ljmp
xchg
mov
rcll
xor
ds
fwait
sub
ss
fadds
xchg
pop
cmpsb
clc
cmp
lea
cs
inc
add
mov
pop
or
movsl
enter
hlt
nop
dec
jp
jo
mov
dec
xor
sbb
aas
aad
sbb
or
sbb
cli
mov
jecxz
fdivl
sub
stc
sbb
cltd
outsl
dec
sbb
mov
mov
mov
test
bound
iret
out
xchg
push
bound
fstpt
dec
push
jle
inc
int3
testl
je
stc
fmuls
test
lods
imul
jno
ja
ret
sbb
mov
mov
test
loope
and
repnz
faddp
xor
push
push
mov
cmpsb
jecxz
in
jle
cmp
cld
out
rorb
jno
js
xor
push
ret
cmpsb
push
dec
xor
xlat
xchg
fadds
mov
mov
out
cmp
aam
aas
movsl
test
ret
pop
cmp
popf
fldt
dec
cmp
daa
xchg
clc
mov
mov
mov
pop
push
sbb
add
pop
pop
dec
loopne
dec
mov
xchg
inc
fwait
pushf
lcall
aad
inc
pop
shlb
jmp
adc
stos
sahf
jne
cmp
out
or
sahf
mov
shlb
inc
scas
push
imul
cwtl
mov
jle
lds
add
sbb
fdivrp
cwtl
jmp
xchg
add
scas
movsl
jmp
adc
push
rcrl
les
aas
mov
xor
fists
cmp
xor
xor
scas
and
push
ljmp
mov
cmc
stos
jl
lret
cltd
sti
outsb
inc
je
loop
adc
push
xchg
adc
mov
imul
sub
xor
sbbl
cli
repz
clc
frstor
dec
das
push
push
push
pop
jb
sub
cmpl
je
adc
out
jp
pushf
sbb
cs
cmc
ffreep
lock
push
mov
xchg
xchg
addl
jnp
cld
test
lret
sahf
mov
push
jno
sti
push
bound
xchg
aas
std
rcrb
cmp
cmpsl
iret
adc
xor
sub
jmp
rolb
lea
nop
sti
mov
dec
mov
cld
jg
cmp
loope
out
iret
pop
cmp
inc
fistl
mov
fsub
aas
stos
faddl
cmp
xorl
mov
jo
sbb
fsubrs
inc
or
push
fsubs
cmp
mov
in
lcall
inc
ds
mov
andb
fiadds
and
out
mov
aas
push
shll
in
hlt
ret
inc
dec
and
stc
cmp
sbb
add
push
sbb
test
push
dec
xchg
test
cmp
les
lock
pop
in
gs
ret
sbb
cwtl
mov
out
jo
pushf
inc
add
dec
mov
xchg
jle
xor
leave
jecxz
push
mov
cmp
subl
fstpt
lcall
outsb
pushf
jae
sbb
mov
jnp
fldl
dec
int
in
inc
lret
sbb
mov
into
or
stc
sub
adc
and
jle
or
cmp
popf
lcall
fbld
arpl
mov
xor
int
loopne
fwait
cmpl
cwtl
push
jbe
sub
mov
xchg
sub
mov
pop
dec
lahf
leave
adc
inc
cmp
dec
inc
mov
xchg
data16
xchg
arpl
int
cmp
inc
cmp
in
mov
out
sbb
mov
mov
lods
xor
mov
mov
les
ret
xchg
je
addr16
andb
aaa
daa
cmp
and
popf
or
xor
xchg
inc
inc
mov
in
aas
push
pop
push
nop
daa
pop
xchg
addr16
pop
mov
rcl
enter
out
adc
mov
jbe
jno
icebp
mov
in
mov
jmp
sbb
scas
adc
aas
stc
cltd
into
mov
dec
jbe
fadds
cmp
and
scas
jg
mov
rcrl
les
andl
cltd
sti
mov
test
aas
xchg
aam
movsb
sbb
sub
fwait
adc
jns
gs
incl
dec
xor
xor
push
hlt
rcr
cmpb
mov
xchg
ret
push
fsubrl
xor
cmp
popa
movsb
lret
stc
add
cli
insb
dec
xchg
sti
sub
pop
mov
xchg
fistpl
cmpsl
shlb
sub
mov
sbb
mov
pop
dec
es
fldenv
cmpsb
mov
fcoml
movsb
test
adc
lcall
mov
dec
and
aad
mov
mov
lret
je
xchg
sbb
xor
loopne
testl
cwtl
pop
push
hlt
and
fdivr
addr16
out
mov
xchg
clc
loopne
call
mov
mov
inc
pop
cmp
jmp
push
into
jb
repnz
sbb
fcompl
iret
xchg
add
mov
pop
jecxz
into
mov
and
push
rolb
xor
xor
rcll
fsubs
hlt
leave
sahf
fs
xchg
subl
lcall
stos
mov
mov
jmp
sbb
incl
push
mov
and
push
les
mov
jge
push
sti
xor
mov
mov
sbb
jg
cmp
jl
push
dec
out
pop
int3
cltd
pushf
push
js
and
test
inc
sarb
pop
mov
xor
in
nop
mov
xlat
fmull
sub
inc
pushf
mov
js
sub
adc
xchg
push
pushf
gs
sub
mov
inc
mov
in
xchg
inc
ljmp
adcb
fwait
push
aas
sub
inc
fimull
cmp
jle
or
sbb
popf
sbb
xchg
cmp
sub
lcall
cmp
cmp
popa
sbb
hlt
pop
aad
mov
cli
cli
test
sbb
jnp
xor
mov
xchg
xlat
cmp
das
sub
out
or
jmp
clc
popa
inc
mov
idiv
mov
xchg
fistpl
out
pushf
movl
mov
sbb
scas
int
push
cli
cld
sahf
scas
and
mov
mov
js
in
xor
cmpb
add
leave
scas
shrb
pushf
cld
mov
test
mov
aas
xchg
je
pop
lahf
mov
cld
outsl
in
adc
call
hlt
shl
xchg
cs
jl
inc
das
mov
mov
mov
cmpsb
cmp
push
mov
in
pop
mov
mov
into
sbb
or
mov
hlt
jl
jl
dec
movsb
cmp
shl
jae
jne
inc
in
popa
jbe
ja
ret
sbb
sbb
adc
out
adc
jnp
sti
ja
push
out
and
cmp
ljmp
xor
testb
cld
cmp
data16
pop
cmp
inc
fwait
add
and
mov
out
cli
cwtl
je
jg
sbb
push
cmp
mov
sbb
rol
lea
fcompl
xchg
jl
mov
mov
lret
sub
dec
mov
xlat
xchg
movsl
sti
push
push
mov
mov
popa
cmp
fadds
fidivrs
ljmp
insl
sbb
xor
add
sub
pop
adc
fwait
bound
aam
mov
mov
fucomip
pop
cld
or
sbb
or
stc
test
add
div
mov
cmp
insl
scas
enter
out
and
bnd
addl
bound
out
mov
int
test
fcompl
aad
rcr
sbb
nop
lea
xchg
mov
lret
fwait
dec
shrl
inc
sbb
mov
cli
cmc
bound
insl
dec
or
jae
aas
add
adc
or
int
push
push
mov
lea
add
aad
lahf
pop
cwtl
mov
dec
andl
dec
xchg
pop
sahf
inc
push
aad
lahf
xchg
pop
out
insb
mov
dec
jb
mov
stos
or
xor
cmp
jg
jae
ja
sub
fsubrs
ss
pop
jg
mov
jns
or
sub
xchg
mov
jb
sub
cmpsl
ret
push
lods
sub
shrb
lods
movsb
gs
sti
or
loope
das
repnz
mov
inc
sbb
shlb
sub
lahf
js
mov
movb
push
adc
pop
cmpl
test
inc
movsb
cmp
mov
mov
jle
lret
xor
ret
jo
inc
ss
mov
in
cmp
das
jb
jle
imul
out
cmpl
jmp
daa
xchg
cmp
xor
loope
in
loopne
pop
lods
cmp
pop
ret
shl
test
in
sbbb
mov
add
mov
int3
scas
cmp
in
enter
aad
into
lods
orl
dec
decl
faddl
cwtl
fsubr
cs
lcall
ret
inc
or
sahf
add
sbb
loop
sub
add
cmp
mov
testb
jmp
cmpsb
fists
loopne
mov
out
mov
mov
jg
pop
loopne
imul
test
inc
ss
icebp
xchg
mov
in
push
mov
fs
lock
mov
cld
in
fcomps
jg
cltd
or
pop
adc
clc
cwtl
enter
divb
lret
inc
fidivs
xlat
mov
sbb
movsb
mov
xchg
int3
fstpl
adc
aas
xorl
sarb
repnz
lods
and
ss
aad
jmp
xchg
sbb
stos
subl
out
push
fdivrs
jmp
cmp
and
mov
jb
lahf
jg
mov
cwtl
movsb
sti
xchg
add
cmp
daa
aas
lea
lods
xchg
insb
rcrb
pop
cmp
outsl
pop
scas
out
call
test
popf
pop
sbb
mov
aas
mov
sti
inc
and
add
pop
add
in
dec
call
repnz
dec
cmpsb
inc
pop
or
andl
lcall
mov
aas
and
pop
add
stos
adc
mov
loopne
mov
jnp
popa
xchg
push
js
enter
inc
mov
dec
and
sbb
dec
lret
adc
push
push
xor
aad
cmp
scas
cmc
pop
fists
sbb
xor
pop
pushf
iret
fcompl
mov
push
pushf
repz
add
imul
xchg
into
pop
jb
cwtl
xchg
dec
cmpsb
movsl
ss
in
adc
push
rorb
adc
data16
cwtl
or
sbb
lds
test
mov
push
stc
jl
outsl
pop
xchg
cmp
rep
movl
clc
add
stos
xchg
mov
cwtl
test
xchg
loopne
test
xor
pop
fmul
loope
or
scas
sti
popa
aad
cli
into
xchg
lods
daa
sub
inc
mov
out
mov
mov
mov
sub
dec
loope
jns
jg
add
nop
sub
push
mov
add
pop
jge
push
xchg
call
sub
sti
add
outsl
test
loope
aaa
pushf
sbb
sub
push
gs
xchg
dec
pop
jnp
dec
mov
shl
fsubs
gs
gs
imul
push
sbb
arpl
dec
outsb
ds
sbb
pop
xor
sbb
js
or
or
sub
or
aam
test
xchg
mov
dec
outsb
xlat
push
mov
fidivrl
out
jle
insl
jbe
out
test
cmp
cmp
lahf
dec
fisttpll
sbbl
or
inc
xor
mov
shrb
add
pushf
dec
xchg
das
fisttpl
mov
dec
mov
sub
fmull
enter
mov
mov
hlt
xor
sbb
outsl
xchg
sub
dec
mov
and
inc
adc
mov
repz
aam
test
ljmp
test
and
lds
jns
testb
outsb
pop
mov
stos
ret
pop
nop
mov
mov
pop
lahf
xchg
dec
js
aas
cmp
push
lds
sbb
lret
pushf
adc
bt
les
sub
ret
cmp
pop
outsb
stos
or
mov
and
add
mov
loope
xchg
inc
pop
cmp
nop
lret
lcall
roll
xchg
inc
xchg
mov
inc
xchg
cs
std
ret
outsb
mov
lcall
cld
jecxz
ds
mov
stos
push
repz
mov
rcr
cmp
jb
sahf
sbb
mov
xor
decl
mov
sub
xlat
mov
or
jno
inc
cmp
pop
sti
mov
movq
stos
mov
xchg
mov
daa
test
mov
cs
loopne
sbb
mov
cmp
xchg
cmpb
lods
jmp
pop
lcall
stos
sahf
lahf
movsl
data16
xchg
fwait
into
rcll
fbld
mov
cmp
mov
push
movsb
imul
out
mov
sbb
loope
test
inc
cld
stc
pop
mov
imul
jmp
addl
lods
mov
push
movsl
aas
inc
push
sbb
test
adc
push
fnstenv
sbb
mov
jnp
shl
icebp
dec
jl
jmp
test
dec
imul
sbb
inc
mov
enter
mov
pop
sbb
outsb
cli
sub
js
sbb
incl
xor
mov
loope
popa
cmp
pushf
movsb
adc
xchg
xchg
add
pop
pushf
lret
and
daa
add
outsl
push
test
sti
pop
pushf
decl
adc
push
stc
mov
jo
in
jl
imul
mov
mov
arpl
int3
xor
cmp
adc
sbb
sub
add
mov
sbb
cmpl
cmp
sbb
jne
sub
ret
pop
adc
sbb
add
jg
sbb
movsb
sbb
cwtl
jns
xchg
jg
insb
pop
lcall
fcmovnu
daa
and
nop
cmp
mov
jmp
dec
out
pop
push
cmpb
sub
cmp
xor
icebp
push
xchg
shlb
fisubrl
jae
sbb
mov
push
cmp
pop
pop
xor
std
mov
je
out
jne
push
sbb
dec
sub
jmp
sbb
mov
flds
add
iret
into
stos
add
jge
cmp
cld
data16
in
mov
push
hlt
sub
or
ret
lahf
test
addb
sbb
ficoms
out
nop
pop
pushf
in
cld
or
mov
cmp
xchg
sti
test
jl
mov
dec
cmp
mov
xchg
ss
cwtl
push
push
sbb
aaa
bound
je
in
cmp
loope
cwtl
jl
jo
sbb
nop
lods
mov
out
ret
repz
pop
ds
inc
int
fisubrl
xchg
data16
mov
clc
cwtl
shrb
add
cli
cmp
enter
sahf
sub
pop
mov
adc
rolb
scas
shll
stos
push
jp
jmp
mov
nop
fwait
scas
adc
out
test
xchg
in
popf
sbb
add
jl
dec
mov
mov
rcrb
adc
sbb
loop
push
lcall
mov
xchg
orl
stos
jae
aam
sti
or
dec
pop
push
mov
cmp
sub
sbb
call
ja
test
fmuls
out
in
outsb
cld
pop
jp
mov
not
idivb
sub
sbb
sbb
inc
push
lea
mov
or
inc
jg
sarl
push
sahf
mov
xchg
jb
jo
pop
dec
into
ja
cmp
xchg
sbb
fnstenv
adc
cmpsl
jbe
mov
push
sub
jbe
inc
or
ljmp
pop
clc
pop
lods
test
popf
adc
mov
cmp
mov
ret
out
dec
fadd
and
pop
faddl
pop
mov
mov
cmp
push
push
inc
pop
pop
cmp
jno
cmpb
nop
mov
or
adc
jle
dec
xor
jmp
lahf
jmp
pop
jmp
out
sbb
sahf
and
mov
in
out
ljmp
dec
cmp
push
sbb
cmpsl
fsubrs
lret
jp
sti
mov
movsb
dec
in
rcl
push
repnz
hlt
pop
outsb
test
fdivl
inc
xor
push
mov
pop
imul
in
fcomps
inc
xlat
xor
loopne,pt
aas
mov
xchg
add
addr16
inc
push
pop
inc
adc
sub
mov
dec
mov
push
fs
lcall
mov
mov
xchg
outsb
icebp
lahf
pop
popf
xchg
jne
test
xchg
inc
in
inc
and
icebp
jmp
into
data16
push
rol
sarb
mov
lret
adc
mov
fstl
ret
mov
pusha
and
out
pop
pop
push
jp
pop
pusha
add
fcoml
sub
push
out
sahf
push
mov
inc
cwtl
imul
or
cli
dec
adc
inc
inc
lods
pop
in
dec
jl
or
mov
cs
inc
pop
pop
cltd
into
insb
xchg
popf
add
pop
pop
jmp
les
pop
push
or
mov
mov
sub
push
jle
inc
scas
incb
dec
fcompl
fdivrs
lds
std
adc
sbb
push
lcall
mov
add
cwtl
lahf
out
mov
pop
icebp
vpandn
es
mov
ja
test
ud1
cmp
inc
push
cwtl
mov
or
out
cltd
push
mov
jp
sub
out
or
insb
int
cmp
out
loopne
xchg
leave
inc
mov
sbb
sbb
fidivrl
mov
pushf
loope
and
or
sti
adc
push
sbb
sbb
loop
sahf
call
jg
iret
cmp
mov
dec
mov
outsl
push
out
cld
enter
jge
or
stos
add
pusha
daa
dec
cmp
sub
sbb
push
xor
pop
cli
cwtl
ljmp
outsb
mov
xchg
fsubp
sub
xchg
scas
push
enter
cmp
outsl
scas
hlt
testl
scas
mov
and
lahf
sub
add
jo
mov
dec
jnp
xchg
lods
fistps
pop
inc
jl
out
sub
xchg
sbb
call
in
int3
xchg
inc
cmp
mov
xor
adc
pushf
jmp
add
sbb
push
adc
push
mov
xor
or
dec
fadd
stc
sub
mov
in
sub
ljmp
inc
out
test
out
mov
fcompl
fldenv
sbb
cld
mov
shr
and
push
pushf
push
jae
scas
ljmp
in
jl
mov
mulb
mov
fistpl
push
jae
aaa
mov
xchg
jo
incl
lds
mov
jg
popf
jns
jmp
enter
xlat
xchg
jb
pushf
mov
stos
sbb
testl
mov
or
and
repz
fistps
adcl
jae
sub
inc
stos
sti
outsb
jo
mov
das
xchg
cmp
xor
mov
xchg
loopne
push
jbe
or
jnp
test
jno
hlt
and
bnd
jb
xchg
sti
xchg
xor
mov
repz
leave
scas
push
neg
sbb
sti
adc
lock
jae
xchg
inc
and
pop
cwtl
xchg
stos
scas
pop
jns
sti
rcr
mov
call
out
int3
dec
sbb
movsl
repz
cli
mov
movsb
movsl
nop
xchg
sub
arpl
aas
cmpl
stc
jmp
and
mov
cmp
push
loopne
mov
out
push
and
push
into
mov
dec
dec
int3
je
into
aam
mov
jnp
in
push
cmp
pop
push
mov
or
movl
lret
arpl
out
loop
in
sub
clc
mov
push
mov
dec
sti
andb
sbb
cmp
mov
mov
and
gs
adc
sbb
sub
jne
lahf
aas
dec
loop
mov
pop
jne
aad
ds
aas
push
repz
loopne
mov
popl
cwtl
daa
xor
pop
scas
fisubs
es
xchg
jnp
xor
and
unpckhps
mov
xor
out
imul
repz
fs
cmp
insb
pop
out
fmull
aas
sarl
sti
out
ficompl
cmpsb
lahf
pop
mov
xchg
jecxz
add
in
sbb
adc
js
int3
mov
scas
pop
cmp
leave
jo
mov
cwtl
add
ljmp
pop
cmp
sti
fmul
cmpb
add
push
jp
js
or
pop
cmpb
ss
dec
pop
mov
cmpsb
sbb
cli
push
pop
clc
inc
pop
add
bound
mov
dec
pop
out
adc
scas
pop
push
jl
mov
jg
sub
mov
adc
lock
clc
inc
sbb
nop
fcomps
cmp
adcb
out
mov
popf
cwtl
pushf
hlt
and
add
inc
stos
or
loopne
ja
es
lret
or
cmp
sbb
int
test
dec
aas
adc
cwtl
daa
mov
std
fmul
loope
ret
mov
push
jno
xor
sti
and
push
cli
inc
mov
xor
pop
add
cwtl
pop
rcrb
ljmp
shl
push
repz
lahf
or
idivb
out
and
out
sbb
and
xor
adc
iret
push
andb
pop
pushf
loop
and
jbe
out
mov
pop
fwait
cmp
xchg
jge
stc
mov
pop
mov
roll
dec
scas
test
sbb
push
inc
lahf
aas
mov
lret
hlt
jbe
clc
push
or
in
mov
jg
lods
xchg
fadds
lds
sti
sahf
shll
iret
dec
test
add
cmp
cmp
or
xor
dec
cmp
or
jp
insb
jns
xor
sbb
rolb
mov
lret
shlb
xchg
cmp
adc
xlat
data16
or
adc
mov
xchg
mov
sti
rcrb
dec
pop
sub
cmp
arpl
filds
jp
mov
je
cltd
cwtl
fsts
and
pop
pop
sti
pop
jge
mov
out
mov
sbb
ret
or
sbb
fdivr
ss
xchg
pop
in
sbb
mov
pop
add
xchg
sti
insl
dec
dec
xchg
mov
mov
xchg
xchg
mov
cmpsb
cmp
jl
xchg
add
jle
jbe
cmpsl
jns
pop
xchg
mov
idiv
clc
sbb
imul
ror
mov
or
xor
sbb
push
sub
cmp
sbb
lcall
sahf
jl,pt
iret
pop
lea
test
mov
lods
sti
and
repz
out
jg
cmp
push
mov
fmul
mov
arpl
stc
mov
dec
nop
fcomps
data16
and
dec
enter
clc
enter
lds
stos
gs
aas
mov
cltd
call
dec
pop
and
lahf
sbb
jns
cmp
mov
stos
stos
das
xchg
fnsave
mov
jo
adc
out
cld
pop
inc
leave
pushf
aas
or
leave
mov
outsl
sub
test
leave
mov
mov
pop
pop
scas
inc
sbb
inc
and
sub
adc
cmpsl
pop
sahf
pushl
jg
into
xchg
cltd
sti
out
jge
add
cwtl
xor
stc
pop
int3
test
sahf
lcall
addr16
pushf
scas
out
mov
mov
inc
loop
add
sbb
incb
add
cmpsl
cmp
pop
subl
outsb
jge
fs
in
mov
pushf
mov
aam
mov
xor
add
les
pop
push
xchg
push
movsl
mov
clc
stc
test
mov
fnsave
sti
cmp
add
mov
or
icebp
into
push
push
cmpl
pop
xor
rcrl
lods
fisttpl
mov
add
pop
in
lret
insb
test
ja
lret
adc
pop
mov
call
pop
xchg
pop
adc
push
in
fmul
xor
cwtl
adc
pop
cmp
int3
cmp
xor
jno
iret
add
jo
fildl
imul
ljmp
or
add
iret
loope
adc
jbe
cwtl
inc
ja
pop
pusha
cld
mov
inc
lret
cmpb
mov
pop
mov
adc
outsl
jg
mov
jl
enter
ret
jg
aas
sub
out
inc
jl
cwtl
pop
loope
jge
xlat
ret
andb
push
ror
mov
mov
sub
sub
pop
sub
mov
out
frstor
jae
lret
test
loopne
inc
rcll
lea
inc
sahf
mov
push
sbbb
pushl
xchg
shl
int
les
ret
xor
push
mov
jno
fadds
lcall
jle
flds
and
scas
fnstsw
push
cmp
repz
dec
xlat
lret
je
lock
dec
mov
addr16
adc
sbb
ja
stos
outsb
sbb
out
int3
shll
aam
cmp
xor
jae
fwait
pop
pop
pop
mov
test
insb
leave
jg
mov
pop
mov
add
pop
movsl
inc
aas
insb
push
inc
jg
decb
adc
test
mov
decl
jns
adc
ret
pusha
lods
sti
adc
cmp
dec
mov
scas
mov
cli
cli
roll
cmp
pop
inc
mov
inc
jbe,pt
in
xor
pushf
mov
iret
in
mov
or
mov
cwtl
pop
add
dec
pop
std
es
addr16
dec
sahf
xorb
jae
adc
add
sbb
jb
das
test
jle
mov
sbb
sub
mov
int3
sub
movsb
cmc
pop
xor
lret
or
jl
popa
xchg
lods
std
cld
addb
mov
sub
jl
jmp
pop
cmp
adc
lea
lock
push
push
ds
pushf
in
fcom
add
push
dec
mov
mov
into
sbb
xor
cmp
jnp
dec
enter
out
sbb
dec
xchg
stc
pop
fiadds
dec
cmpsb
push
mov
rclb
pop
imul
andl
loop
mov
clc
repnz
iret
push
lcall
mov
inc
jbe
fsubrl
bound
xor
xchg
cmc
test
jne
cltd
lods
jmp
cmp
mov
mov
hlt
mov
popf
fisubrl
cs
jno
push
jnp
inc
stos
push
sub
push
insl
sbb
lcall
lods
cmc
and
repnz
outsl
out
shrl
clc
pop
add
js
dec
mov
dec
pusha
sub
push
or
test
cmp
lea
imul
fwait
xchg
fwait
lods
mov
mov
and
jo
mov
lahf
fimuls
mov
shrl
sub
test
push
cmp
fs
lods
lea
sub
fimuls
mov
and
repz
inc
xor
loop
fisubs
adc
test
incb
testl
and
test
push
lods
mov
js
jnp
lret
in
jg
out
in
gs
jns
mov
aas
xor
icebp
dec
pusha
pop
xor
cmp
lock
movsl
repz
adc
incl
cwtl
stos
lret
stos
mov
sbb
lret
pop
pop
je
lret
int
cmp
xchg
adcb
arpl
jb
aas
push
push
aam
mov
pop
add
mov
enter
fsubs
mov
and
sbb
dec
sahf
sti
js
adc
sub
inc
cwtl
test
in
int3
outsl
sarl
lahf
fbstp
mov
jo
mov
pop
mov
and
jnp
dec
divb
jg
jle
sbb
ret
xor
sub
sub
sahf
adc
mov
pushf
loope
loopne
imul
sbb
leave
pop
sub
scas
popa
push
or
xor
fnstcw
adc
into
jmp
sahf
adc
pop
push
sbb
jnp
and
mov
fdiv
je
mov
dec
ds
in
jno
je
cmp
dec
xchg
xchg
iret
dec
pop
xchg
lods
push
xor
add
cmpsb
mov
mov
test
rorb
add
push
js
mov
lret
xchg
hlt
xchg
dec
jae
inc
sub
mov
stos
pop
fcomps
clc
sbb
xchg
add
dec
int
sbb
sub
add
scas
stos
incl
pop
xor
jo
aaa
dec
jg
loopne
fistpll
mov
cmp
pop
pop
push
adc
icebp
cs
inc
pop
fs
add
popa
push
cli
addb
iret
jecxz
fisubrs
cmp
nop
out
mov
jo
aad
lea
pop
push
dec
push
cmp
rcll
repnz
or
sbb
stc
test
popl
pop
imul
lods
cmp
imul
imulb
imul
mov
clc
ljmp
in
mov
cmpl
adc
and
mov
fadds
push
xor
lret
fistl
jg
xchg
mov
scas
lahf
pop
mov
mov
jmp
pop
into
cmp
shrb
cltd
cmp
pushf
cwtl
push
jno
xchg
mov
fdivrl
jo
lahf
jg
push
dec
push
loopne
push
movsl
cld
pop
xor
and
mov
mov
and
out
jle
leave
inc
scas
jb
insb
stos
adc
rcrb
sbb
repnz
xor
dec
cwtl
cmpb
in
sbb
out
fiadds
adc
push
push
cmpsb
and
pop
dec
inc
int
jg
and
and
cmpsb
loop
sti
fmull
std
ds
sub
int3
sbb
or
scas
orb
cli
insb
xchg
jmp
lahf
push
mov
push
push
cmpb
dec
jecxz
inc
ficompl
mov
ja
les
scas
jno
mov
out
pop
loopne
rolb
test
add
pop
push
lahf
fdivrs
mov
pop
add
iret
or
movsl
push
mov
js
inc
sbb
and
xchg
push
push
stc
loop
imul
sbbl
notb
lods
mov
and
scas
test
jl
inc
sbb
inc
leave
stos
sbb
push
sub
adc
jns
mov
pop
cmpsl
loope
sbb
add
inc
subb
sbb
arpl
pop
jns
out
sbb
adc
mov
push
mov
sbb
aaa
sbb
aas
jno
dec
es
mov
dec
xor
sbb
cmp
or
js
and
jne
iret
pop
pop
push
jno
xchg
gs
sbb
cltd
cmp
sbb
adc
ret
add
sarb
sbb
jp
addr16
cmp
xchg
dec
xor
pushf
testb
addr16
pushf
outsb
cwtl
cmp
push
ds
jae
ret
scas
rclb
dec
mov
mov
or
xchg
mov
adc
daa
popa
push
cli
out
inc
mov
sub
pop
lret
jb
pop
push
movsl
lods
lret
dec
pcmpeqb
out
stos
mov
int
lds
push
push
or
test
xchg
je
sbb
jnp
cltd
mov
aam
cld
adc
sbb
cltd
aam
sbb
push
into
sbb
and
mov
rcr
push
jmp
fmull
negl
mov
jg
in
in
push
test
adc
ljmp
dec
sbb
sarb
loope
jmp
test
aas
dec
in
popf
sti
je
jmp
xor
xchg
pop
xor
cmpsl
mov
repnz
sbb
lret
mov
adc
cmpl
or
inc
jle
cmpsb
cmp
dec
sbb
mov
das
push
lds
aas
enter
cltd
mov
cmp
mov
mov
sub
scas
hlt
fadds
sbb
push
and
adc
and
push
push
dec
imul
call
mov
fucomp
lea
fcompl
fists
adc
nop
cwtl
adc
mov
cwtl
dec
nop
insb
jno
ja
jl
jge
fsubrs
movsl
sbb
mov
cs
mov
inc
inc
cwtl
cmpsl
cltd
sti
outsb
jle
inc
cmp
jno
fistps
sub
divl
sbb
dec
mov
or
fisttps
xlat
test
sub
aas
lcall
in
sub
hlt
dec
sbb
mov
dec
test
cwtl
sahf
ljmp
in
inc
inc
dec
sahf
adc
pushl
push
cmp
fcoml
mov
dec
outsl
mov
push
pop
adcl
pop
mov
jge
mov
fiadds
out
mov
aaa
jecxz
lcall
jnp
cmp
xchg
cmp
lea
sbb
sbb
mov
mov
scas
and
sbb
xor
popl
subl
lods
mov
mov
inc
push
cld
pop
clc
and
rcrb
into
mov
mov
or
mov
inc
cmp
add
out
out
adc
xor
imul
cmp
mov
ss
and
and
mov
cld
cltd
inc
lret
pop
fbld
cmp
lock
mov
dec
cmpsl
lret
sbb
cmp
xchg
pop
inc
je
outsl
repz
mov
aas
rolb
pop
loope
out
cmc
pop
fnstcw
dec
popf
mov
mulb
cs
xor
lea
js
sbb
adc
dec
pushf
fsts
xchg
jmp
les
push
mov
aad
inc
arpl
mov
movsb
sub
jae
dec
mov
rolb
lods
shll
add
insl
mov
fcompl
ret
pop
out
cld
icebp
es
je
aas
sbb
ja
mov
push
inc
jnp
inc
cmp
fs
in
ret
in
pusha
mov
add
mov
mov
pop
movl
jnp
fistl
mov
popf
pop
insl
out
pop
imul
pop
and
mov
movsb
dec
dec
clc
dec
xor
push
xchg
fdivs
cltd
movsl
scas
sbb
lret
fcmovne
jne
lcall
das
sub
inc
repz
cmpb
icebp
push
ret
aad
cmpl
fsubr
mov
mov
inc
hlt
aas
xchg
loope
lret
adc
add
xor
sbb
add
mov
pusha
jecxz
repz
xor
jecxz
bound
das
shrb
pop
loop
mov
faddp
jecxz
xor
lods
jge
and
adc
shll
das
sbb
mov
mov
jne
add
xchg
repnz
push
shll
pop
ljmp
lret
in
pop
daa
inc
mov
xchg
dec
mov
mov
fwait
sti
pop
nop
aad
or
jmp
mov
out
and
out
nop
imulb
iret
sbb
adc
adc
cmp
and
in
sbb
mov
pop
jne
pop
jmp
or
ljmp
es
add
in
lea
jae
flds
sti
fcmove
cmp
add
mov
add
sub
movsl
sbbl
pop
mov
adc
repz
inc
leave
sbb
lahf
dec
pop
lods
popa
sbb
aam
push
scas
fdivrs
daa
dec
loope
fcomps
jno
sub
add
loop
fwait
outsb
into
je
inc
dec
out
roll
jecxz
nop
in
cld
cmpb
mov
sar
mov
in
in
lret
jbe
pop
jle
cwtl
fwait
daa
adc
push
loopne
jmp
mov
cmp
int
jo
cld
test
cmp
cld
mov
dec
xchg
in
fiaddl
add
dec
fcmovnu
imul
mov
repnz
jle
stc
sbb
or
dec
fwait
sti
int
fmulp
cld
out
dec
arpl
call
dec
je
mov
sbb
into
sub
mov
aam
mov
jp
lds
popf
inc
test
jnp
leave
stos
ja
push
mov
pop
or
lcall
cmp
mov
and
add
and
shll
push
adc
clc
pop
jle
cmp
fsubr
and
cltd
pop
aaa
addr16
cld
jb
mov
pop
or
pop
xor
sti
out
shrl
cli
mov
fs
daa
sub
hlt
cmp
and
sbb
imul
mov
mov
cmp
lahf
or
sub
mov
repnz
shll
adc
push
jo
add
mov
fnstsw
subl
test
cmpsb
inc
sub
xchg
cmpsb
jb
mov
test
mov
inc
test
cwtl
stos
das
pop
jb
xchg
sar
pop
rcll
sub
sbb
mov
es
mov
mov
and
sub
cltd
xchg
sti
loope
mov
mov
lret
jge
push
add
in
fldenv
sbb
lock
jg
in
sbb
push
test
inc
cli
sarb
or
rclb
sbb
jg
mov
mov
push
pop
add
pop
leave
scas
push
inc
jmp
jo
jmp
shrl
icebp
sbbb
lea
mov
movsb
pop
pop
mov
scas
mov
sbb
cwtl
mov
enter
out
fwait
sti
lods
mov
mov
sbb
mov
xor
xchg
sbb
mov
pushf
sbb
into
test
xlat
cmpsl
es
inc
mov
push
notb
xchg
fdivs
clc
mov
lahf
cld
daa
test
imul
test
push
incb
dec
mov
aaa
lcall
mov
and
nop
jnp
dec
es
push
cmp
rclb
test
stos
jb
lds
stos
and
aad
push
cmp
jg
pop
pop
push
xchg
negb
dec
mov
adc
aas
lds
clc
cmp
lods
mov
sub
xor
push
cmpl
or
pop
clc
aam
test
pop
jmp
mov
flds
pushf
fadds
xchg
cmp
cmpsl
and
xor
jg
js
inc
push
mov
and
out
xrelease
mov
push
inc
fildll
ja
xlat
and
popf
xchg
cmp
les
shrb
popa
jp
fmul
loope
ja
cmpsl
loopne
lods
xchg
add
sub
sub
lods
sbb
test
dec
leave
mov
sbb
stos
in
adc
xadd
clc
jne
in
cmp
pop
dec
jle
imul
sti
stos
insl
int
ds
imul
movsl
sti
inc
jl
imul
jnp
insb
jg
jmp
ret
sub
push
lock
mov
ja
dec
sub
out
sub
adc
lea
int3
pop
inc
stc
push
in
test
jns
insb
cltd
add
leave
cmp
imul
es
mov
faddl
sbb
and
rcrl
xor
mov
lods
aas
dec
icebp
mov
in
sub
negl
fmuls
es
dec
cmp
nop
cld
jg
push
push
std
out
sbb
mov
jg
cmp
mov
repz
mov
pusha
ret
mov
jbe
pusha
lods
stc
add
xchg
inc
pushf
call
fstps
popa
xor
pushf
inc
cli
sub
jle
mov
test
cmpsl
mov
add
scas
sti
mov
inc
xor
jl
xchg
pop
pop
incl
ja
out
nop
iret
mov
scas
mov
mov
std
add
jae
aas
add
les
cmp
fwait
test
sub
xchg
scas
adc
pop
adc
or
xchg
hlt
add
and
jo
mov
jno
outsb
adc
dec
ret
mov
insb
mov
sbb
cwtl
inc
out
xlat
stc
in
push
add
fsubl
cmp
ror
cwtl
sbb
jbe
stc
inc
enter
fucom
push
mov
xlat
ret
out
jne
sbb
hlt
cwtl
xchg
repnz
sub
cmc
mov
aad
call
inc
ret
push
pop
fisubrl
cmp
mov
rcll
mov
xchg
add
inc
jmp
mov
pushf
fldt
inc
cld
jg,pt
insl
gs
jp
cmpsb
fndisi(8087
or
mov
int3
and
jmp
les
loope
lret
enter
mov
les
jnp
mov
mov
aaa
cmpl
cld
xchg
fwait
and
add
mov
lock
ljmp
aas
add
loop
pop
xacquire
xor
push
mov
insl
and
inc
or
xor
mov
adc
mov
pop
mov
out
jge
daa
or
mov
sub
test
fdivs
loop
repz
jnp
or
adc
mov
shlb
sbb
cltd
shl
jnp
sbb
dec
lahf
pop
xor
push
cwtl
pop
xchg
mov
adc
jmp
sar
in
jns
jmp
pop
pop
add
cmp
dec
mov
or
test
sti
iret
pop
not
dec
ss
cmp
push
pushf
enter
pop
mov
in
jg
out
sbb
leave
cmp
or
pop
mov
lea
push
mov
sbb
fcomps
rclb
pop
lahf
call
fmuls
mov
or
and
pop
fwait
mov
pop
adc
pushf
mov
jns
lock
ffreep
inc
adc
call
cmp
jl
jae
and
in
popa
push
int3
sti
cltd
mov
dec
sub
add
popf
push
into
mov
das
xchg
loopne
push
xor
mov
inc
das
jne
imul
adc
sub
jb
decb
xchg
and
pop
pusha
pushf
into
out
lock
fadds
lcall
sbb
mov
test
adc
loope
and
cmp
int3
scas
stc
insb
loop
popf
gs
push
ds
cld
lods
pop
je
adc
ljmp
or
xchg
jp
pcmpgtw
sbb
loopne
dec
scas
mov
jnp
sub
and
js
stos
cwtl
rorb
and
sbb
sbb
jp
push
dec
xlat
cmp
adc
shlb
sbb
fiaddl
insb
push
or
inc
or
jp
mov
loop
mov
push
mov
xchg
orb
fsubrs
adc
test
in
mov
loope
mov
rcrb
sahf
push
jge
inc
add
sub
outsb
loopne
xchg
mov
sub
je
sbb
ja
or
jp
lea
mov
xchg
std
add
pop
pusha
test
rcrb
cs
add
mov
cmpsb
mov
or
sarb
test
xor
fdivrs
jno
ds
das
out
cmp
bnd
imul
arpl
mov
dec
adc
fwait
mov
sbb
aam
pop
mov
mov
adc
mov
jle
sarl
cmp
or
lcall
fsqrt
fimull
fwait
mov
fcompl
ret
pushf
leave
aas
les
enter
out
sarb
cmc
jbe
mov
sahf
push
dec
cli
rcrl
mov
pop
pop
mov
or
das
mov
inc
scas
jg
mov
loopne
mov
sbb
xchg
subb
mov
jle
fcmovnbe
xor
jecxz
mov
mov
mov
shr
scas
iret
int3
mov
andl
or
jo
pop
push
xchg
call
cmp
sbbb
aas
cwtl
cmp
dec
arpl
cmp
push
cmp
add
pop
jle
pushl
sbb
inc
push
cmp
sub
stos
ja
je
mov
mov
inc
nop
jp
jb
xchg
js
adc
fcoms
testb
push
lcall
sub
out
jg
cld
cwtl
adc
inc
mov
std
sub
fdivr
adc
ljmp
pop
stc
das
jle
pop
es
jns
xchg
arpl
mov
rol
mov
mov
js
jbe
mov
inc
or
dec
mov
pop
mov
testb
jne
dec
cmc
jl
arpl
xchg
sbb
movsb
ret
test
sahf
out
jb
decl
gs
dec
gs
fsub
orl
mov
cmp
aas
mov
sbb
in
sub
add
std
xchg
clc
mov
dec
sahf
mov
inc
call
sub
and
es
sti
loope
lods
and
and
int
sub
sub
sti
mov
fcompl
push
fdivs
xor
sbb
sbb
clc
sub
xor
jle
das
mov
fdivs
out
fsubrl
mov
aam
xchg
inc
push
fsubr
and
mov
aam
mov
cmpsl
iret
pusha
cli
test
fildl
rclb
sbb
test
mov
cmp
int
pushl
lret
xchg
push
push
mov
in
sub
xor
cmp
cmc
test
add
mov
ljmp
loope
pop
pop
cltd
addr16
sbb
jae
jmp
inc
jb
fimuls
push
dec
divl
sar
stos
dec
push
es
sbb
ljmp
addr16
push
sbb
rorl
ljmp
rcrl
push
jle
add
out
clc
adc
cmpsb
mov
dec
inc
cs
sbb
repz
test
int3
into
rol
adc
lret
dec
mov
pusha
cld
mov
sbb
mov
or
cmp
xlat
mov
icebp
fmuls
mov
cmp
or
mov
fsubs
pop
sub
icebp
sub
ror
and
pushf
push
adcl
and
mov
subl
fwait
je
mov
fwait
push
add
int3
sbb
iret
dec
pop
loop
xchg
test
int
pop
cld
int3
loop
xchg
xlat
or
movsl
scas
cmp
dec
das
ret
cltd
pop
cmp
aas
lock
fwait
pop
jle
jbe
pop
cmpsb
push
mov
mov
lods
xchg
dec
lcall
dec
mov
push
pushf
xor
test
mov
sti
popa
test
repz
sahf
xlat
pop
pushf
loope
cmp
and
sbb
imul
inc
mov
testl
cmp
int
filds
addr16
jl
shrl
push
aad
sbb
nop
cmp
dec
cld
cvtps2pd
imul
inc
adc
mov
lock
loopne
sub
xor
cmp
in
cmp
push
jecxz
push
mov
in
adc
jne
pop
repz
arpl
add
cmp
and
adc
mov
nop
pop
shl
push
push
fiadds
cmpsb
pop
sti
mov
test
loope
pop
sbb
xchg
clc
fstl
lret
push
xchg
pop
popa
ljmp
pop
cwtl
fcoml
add
inc
jb
jp
jno
mov
push
jl
adc
mov
sbb
test
mov
cmp
enter
shrl
ja
outsb
shll
sbb
lods
fistpl
cmpsb
popf
inc
sbb
ffreep
pop
aaa
rclb
inc
sub
or
xor
sahf
lds
js
addr16
adc
and
mov
mov
mov
mov
xacquire
jl
add
xchg
daa
out
aad
and
and
mov
outsb
jl
cmp
push
aam
sub
mov
push
insb
push
in
imul
mov
inc
pushf
xchg
xor
sarl
sbb
mov
cmp
and
orl
in
fnstenv
sahf
push
inc
cmpsl
faddl
pavgw
add
mov
xor
mov
mov
stc
dec
dec
mov
lods
cld
jne
sub
cld
clc
push
dec
xlat
jge
sbb
sbb
outsl
inc
aaa
mov
adc
cmp
mov
pushf
pop
ret
lret
addr16
fcmovnbe
loope
fstps
and
xor
xchg
cwtl
out
fsubl
sbb
aaa
and
cmp
push
jl
inc
jno
cmp
jecxz
bound
mov
jl
pop
add
or
clc
mov
in
sbb
mov
jecxz
sub
dec
lret
cwtl
and
addb
mov
nop
xchg
add
jp
mov
xor
xor
ds
in
daa
or
sbb
cltd
nop
pop
je
ret
jnp
mov
sbb
push
jbe
mov
xchg
add
cmp
sahf
sub
fsts
fdivl
ret
ret
adc
adc
in
xchg
cmpsl
pop
rol
cmp
sbb
push
pusha
in
mov
test
sbb
push
pop
xchg
mov
adc
cltd
xchg
into
lret
mov
mov
xchg
xchg
cwtl
call
cmp
adc
insb
sub
ret
rorl
and
xor
fadd
dec
and
jle
push
cmp
add
stos
xchg
mov
dec
mov
dec
pop
fldenv
mov
mov
popf
fsubrs
mov
fdivrs
int
and
data16
xchg
pushf
rol
mov
jno
xor
mov
out
cmpl
loope
xchg
sti
out
mov
xchg
ret
mov
sahf
in
mov
push
sbb
hlt
dec
mov
rorb
xchg
mov
stc
jp
fmull
mov
mov
pop
test
dec
aas
pop
inc
loop
clc
cmpb
and
cmp
push
das
mov
movsl
dec
scas
jg
add
aaa
xchg
push
push
mov
mov
sub
sub
mov
cs
xor
ljmp
or
jp
jns
xchg
in
cs
in
push
addb
add
clc
cwtl
dec
dec
jns
pushf
ret
or
aam
jg
jl
xchg
std
js
xchg
iret
mov
sub
loopne
pop
sub
push
push
fmuls
fwait
push
out
mov
and
test
mov
mov
je
xchg
leave
out
mov
test
jns
movsl
mov
or
inc
or
sub
faddl
fstpt
adc
lods
ja
ret
daa
xor
push
dec
inc
jo
sbb
sti
in
sub
cmp
mov
popf
test
repnz
gs
sub
out
mov
aad
mov
rorl
pop
daa
sub
mov
js
pop
sbbb
movsl
xor
insb
lret
cmp
xor
jl
push
jnp
ja
sub
or
push
mov
fldt
xchg
xchg
mov
cmp
bound
push
outsb
rcrl
pop
xchg
xor
jecxz
lret
sbb
stos
sub
cs
stos
lcall
cld
push
inc
pop
mov
clc
into
xor
fnsave
push
add
fists
cmp
adc
sub
mov
xchg
int
mov
pushf
outsl
mov
decl
insb
lea
sbb
dec
jl
lret
mov
frndint
sub
loope,pt
ljmp
dec
cli
cltd
fadds
jb
adc
sbb
push
mov
adc
jae
jp
lods
jns
scas
mov
sbb
or
hlt
pop
inc
cld
std
or
sub
and
inc
pop
pop
push
cmp
frstor
cmpsb
mov
shll
push
pop
xor
cmp
loope
aad
and
adc
cmp
push
lods
and
mov
jmp
sbb
enter
fidivl
mov
jbe
das
scas
aas
mov
adc
clc
jmp
sbb
xchg
and
push
mov
sbb
neg
or
push
pushf
pushf
into
push
pop
insb
sub
xchg
mov
push
leave
icebp
sub
jmp
sbb
mov
pop
scas
mov
das
scas
xor
add
mov
lock
mov
sbb
cli
es
mov
push
mov
push
rcll
dec
insb
int3
sbb
cmp
dec
mov
dec
and
lret
or
sti
testb
fsubs
push
cli
mov
xlat
mov
pop
push
xchg
adc
lds
inc
aas
mov
fnsave
add
sti
out
inc
mov
adc
out
pushf
adc
adc
shrb
mov
jle
pop
xchg
rcrl
in
inc
xchg
dec
xlat
add
jl
sub
cltd
mov
test
or
out
pusha
mov
cmp
leave
mov
push
sbb
lds
push
sbbb
movsl
dec
fcomps
scas
dec
imul
adc
and
mov
pop
xor
mov
mov
mov
dec
out
inc
cmp
stc
hlt
mov
int
lea
ret
pop
mov
mov
and
and
cmp
mov
mov
ffree
push
xchg
sti
mov
mov
fcomp
insl
adc
pop
jae
jecxz
xchg
test
int3
ret
sbb
cwtl
cmp
or
mov
adc
mov
jl
clc
js
mov
or
inc
sub
pusha
push
fdivrl
pop
xor
push
cmp
pop
pop
cmpb
cmpb
jle
mov
pusha
bound
push
mov
cmpxchg
fisttpll
movsb
dec
mov
xchg
scas
insl
dec
jo
mov
ja
jns
jno
add
adc
mov
adc
inc
sbb
xchg
sti
adc
outsl
or
push
mov
jne
es
fsubp
mov
fcom
mov
sbb
dec
jns
adc
arpl
mov
mov
fsubs
aas
or
sbb
xchg
faddl
cmp
mov
out
cli
leave
arpl
cmpsb
and
push
lret
ljmp
mov
xchg
ljmp
ror
push
push
push
std
enter
test
aas
ja
inc
in
sub
mov
cmp
cwtl
dec
sub
adcb
pop
jl
js
pushf
call
in
fistpll
xchg
js
jge
and
jbe
push
mov
lods
xchg
leave
lret
aas
insl
mov
jbe
mov
aaa
test
dec
pop
aas
mov
cmpsl
jp
sahf
pop
into
in
lret
pop
sbb
and
insb
in
pop
ds
sarl
add
mov
les
clc
xchg
cld
jb
mov
add
xor
inc
adc
sti
pop
sub
ljmp
loop
daa
xchg
jb
loopne
in
mov
cwtl
outsb
adc
sbb
fwait
jne
pop
cs
pop
out
or
mov
sbb
scas
jnp
jnp
mov
lcall
mov
lret
sub
jmp
idivb
lret
cmp
pop
jp
lret
stos
fs
mov
adc
lahf
sub
scas
fucomi
sub
mov
pushf
or
mulb
mov
mov
fdivrl
icebp
cmp
stc
ret
test
ret
lds
das
leave
int3
sub
add
cs
xchg
mov
mov
mov
push
test
test
jg
pusha
pushf
icebp
sbb
mov
ja
cld
das
dec
les
cmc
hlt
ja
jle
jo
ja
out
mov
jle
cmpsb
and
sub
lds
test
inc
call
xchg
nop
pop
sbb
cmp
leave
cld
popl
mov
fimull
xchg
pop
test
mov
das
outsb
ffree
mov
dec
sbb
test
enter
mov
enter
and
outsl
mov
xchg
inc
push
push
lahf
cltd
imul
lret
xor
ret
loopne
dec
mov
jp
mov
andb
mov
pop
jno
jbe
and
outsl
adc
sbb
sbb
je
sub
and
xchg
cltd
or
ja
out
je
inc
jl,pt
imul
iret
data16
pushf
sbb
add
mov
inc
lret
pushf
roll
inc
inc
jb
pop
movsb
popa
inc
fcompl
and
loope
mov
and
jmp
shlb
sbb
cmpsl
xchg
test
pushf
in
push
sbb
in
mov
jno
aas
inc
sub
loope
xlat
arpl
dec
jnp
pop
adc
ljmp
mov
shrb
pushf
cmp
lret
stc
arpl
push
dec
stos
xchg
sub
xchg
in
adc
push
in
pushl
mov
jle
lcall
dec
call
pop
xchg
rorl
xchg
sahf
mov
test
out
jo
inc
mov
sub
mov
stc
cwtl
fcoml
fadds
subb
cltd
add
jl
iret
lret
iret
stos
sti
stos
fadd
inc
inc
pop
mov
jb
adc
fsubrs
xchg
or
pushf
inc
ror
dec
jb
lret
sub
mov
cmp
inc
or
inc
push
cld
cwtl
pop
insb
test
push
loope
cmpsb
fsub
mov
iret
mov
mov
filds
decb
cwtl
mov
fldl
or
inc
push
pushl
daa
pusha
cmpsb
jnp
hlt
mov
inc
xchg
out
cwtl
outsb
call
jecxz
dec
or
out
cwtl
mov
cmp
push
mov
and
aaa
test
xchg
xor
imul
aad
mov
fnsave
out
pop
jns
hlt
enter
sbb
pop
pop
push
dec
in
push
out
cltd
dec
call
sbbb
int3
mov
pop
inc
neg
ret
mov
mov
fisttpl
inc
cli
nop
iret
lock
lret
xchg
and
pop
mov
cmpsl
jae
mov
or
scas
idivl
rcll
gs
jae
sbb
imul
pop
rcrb
out
ljmp
jle
cld
pcmpeqd
xor
outsb
push
jle
outsl
xor
fidivl
and
add
int3
dec
push
or
out
pop
addr16
push
fsubl
pop
lea
cmp
dec
dec
fdivs
xchg
mov
mov
mov
pushf
cwtl
mov
int3
pop
fisttpll
lret
fsubs
aam
xchg
test
stc
mov
jno
lods
dec
in
cmp
push
jge
movsl
mov
out
stc
cmc
out
mov
fistpl
scas
fsubs
pop
inc
sbb
aaa
adc
pop
jo
enter
lret
outsl
adc
out
mov
scas
sti
sub
or
push
jle
rcr
ret
mov
jg
popf
jae
xor
pushf
testl
adc
inc
cltd
dec
jno
mov
xchg
sti
out
enter
or
test
movb
push
mov
test
jmp
add
mov
sbb
pusha
inc
inc
and
hlt
aas
hlt
rcr
iret
in
mov
sahf
pushf
mov
pop
imul
mov
pop
adc
jne
movhps
inc
mov
shl
sbb
fdivrs
and
shr
pop
pop
adcl
sub
fisttpll
cmp
pop
xchg
pushf
mov
cmp
inc
mov
dec
ficomps
sub
mov
dec
clc
cltd
enter
pop
das
into
jbe
sbb
mov
call
dec
sub
daa
decl
xor
rolb
ja
scas
idivl
test
hlt
jecxz
faddl
lret
test
cwtl
mov
scas
cmc
sbb
arpl
ret
cmpl
subb
sbb
mov
sbb
aaa
mov
fdivr
mov
push
into
test
pop
xchg
shll
xor
xchg
or
pop
cmc
push
jp
fcompl
in
scas
loopne,pt
out
fld1
mov
outsb
pop
stc
mov
fistps
int
cmp
sbb
mov
jg
xor
sub
jo
adc
cmpsb
pop
pop
or
sahf
sub
mov
cli
call
lods
fbstp
outsl
xor
dec
fiadds
dec
xchg
pop
movsb
jns
push
lods
mov
pop
mov
jns
dec
add
xchg
ss
pop
mov
sbb
push
mov
cmpsb
ds
xchg
add
mov
cmp
sub
pop
pushf
push
pop
mov
cmpsl
lahf
out
lret
addr16
pop
jl
ljmp
jb
inc
inc
out
push
mov
fstpl
mov
inc
out
jnp
aas
mov
dec
jl
hlt
cmp
aam
pop
fstl
test
pop
sbb
lret
mov
leave
cmp
add
dec
subl
sti
lods
ja
sub
icebp
loope
dec
fdivr
cwtl
xchg
in
add
sbb
loope
out
imul
lock
loopne
cmpsl
or
dec
je
imul
insl
ret
cmp
xor
add
mov
or
jle
mov
outsb
add
out
mov
movsb
pop
leave
push
mov
ljmp
and
adc
add
sbb
mov
jge
pop
fwait
push
sbb
sbb
lods
pop
pushf
pop
add
filds
mov
cmp
push
push
mov
jp
daa
or
js
cmpsl
xacquire
outsl
dec
pop
dec
jmp
pop
adc
pop
sub
xor
out
jnp
stc
dec
push
mov
arpl
test
mov
add
or
jns
pusha
adc
cmpsb
fwait
sti
sub
xchg
adc
jp
nop
cmc
sti
arpl
call
les
aam
hlt
lods
jnp
push
out
inc
cs
cli
test
pop
inc
jecxz
das
fadd
test
ret
rcr
call
cwtl
rcll
mov
int
cmp
mov
or
sti
dec
scas
outsb
call
es
cli
outsb
or
into
xchg
loop
push
inc
mov
js
fldcw
aas
adc
pop
xchg
cmp
popf
cltd
nop
into
out
jns
jne
mov
enter
fstpl
xlat
push
shlb
pop
jge
imul
mov
xor
and
cwtl
lock
call
mov
jl
pop
cld
jl
push
cmpl
shlb
mov
adc
clc
pop
xchg
mov
adc
mov
movl
outsb
jp
movsl
enter
lods
dec
bound
jbe
incb
cwtl
cmc
rcrl
in
adc
imul
mov
in
lods
mov
xor
ret
aas
les
cmpsb
sti
dec
mov
mov
add
out
pop
stos
jg
stc
jge
cmp
les
xchg
jle
and
pop
outsl
adc
js
dec
ror
pop
pushf
mov
loope
into
pop
ret
adc
xchg
out
sub
sbb
cmpsb
xor
mov
leave
pop
ds
sub
orl
or
call
aam
add
pop
mov
mov
call
rcrl
fsts
mov
push
pop
scas
lret
xlat
shld
cmp
popf
mov
cwtl
pop
stos
inc
pop
cwtl
dec
push
pop
popf
lret
adc
pop
out
and
jp
push
mov
bound
popf
mov
sbb
call
or
je
sbb
cwtl
xor
pop
xchg
out
cmp
insl
fidivrl
pop
mov
out
inc
arpl
mov
lret
mov
bswap
scas
mov
add
lock
and
popa
ret
inc
fdivrs
xor
scas
mov
sbb
pop
repz
clc
pop
repz
dec
mov
add
or
ret
and
data16
and
push
mov
ds
sti
dec
jecxz
xchg
jnp
jg
or
sub
sti
lret
push
lock
sub
shlw
push
cli
scas
stc
dec
pop
mov
jecxz
and
sbb
mov
js
jg
xchg
and
sbb
mov
icebp
ret
fwait
sub
cmpsb
adc
clc
pop
neg
and
rcrl
jmp
rolb
jmp
mov
stos
dec
fs
pop
aas
inc
and
jbe
cmp
cmp
mov
je
sahf
dec
imul
cwtl
lret
aas
pop
and
and
and
nop
stc
sub
mov
mov
in
cwtl
in
pop
add
jnp
jne
in
or
sub
adc
mov
dec
add
pushf
dec
loop
and
mov
enter
cmp
and
in
in
push
mov
loop
or
xor
scas
jns
fcompl
and
lcall
lds
cmp
mov
jle
sbb
out
mov
aaa
pop
mov
pop
cmc
lcall
test
cs
cli
xor
push
jns
out
or
sbb
ret
aas
push
pop
or
in
add
xor
div
insb
decl
inc
pop
push
test
sbb
xor
imul
sbb
xor
mov
cltd
lods
movsl
jns
mov
lret
inc
test
out
movl
mov
stc
cmp
lret
xchg
clc
jo
cld
xchg
dec
mov
hlt
mov
mov
out
fsubl
fildl
popf
pop
hlt
data16
aas
cli
mov
mov
adcl
movsl
and
incb
jns
add
jae
push
dec
lea
out
lret
or
cmpsl
mov
adc
aaa
mov
inc
gs
jp
lea
pushl
clc
mov
mov
mov
mov
test
into
add
sbb
js
insl
das
mov
xchg
dec
repnz
cmpl
loopne
xchg
mov
add
pop
insb
lods
pop
mov
add
sub
push
aas
cld
aas
cwtl
rolb
lds
add
sahf
mov
lods
fsubrs
xchg
iret
or
jne
push
sbb
shrb
ljmp
jae
jp
adc
xchg
ds
inc
push
movsl
sub
movsb
mov
inc
jo,pt
mov
lcall
fcmovnbe
xor
fbstp
pop
xchg
or
out
lock
jl
gs
jns
cmpsb
and
cmc
std
jmp
lea
xor
outsl
cld
cmp
add
les
and
dec
pushf
push
pop
sbb
sub
or
lds
aad
fsub
fs
inc
jl
rolb
pop
sub
addr16
pop
sub
aas
and
test
jnp
jecxz
insl
cmc
hlt
aas
xchg
sbb
loopne
stc
into
das
js
cwtl
repnz
pushf
lcall
sti
mov
mov
mov
and
inc
push
ss
jnp
addr16
rcl
inc
xchg
push
pop
in
shl
insl
pop
into
jns
mov
mov
ret
xchg
adc
inc
je
leave
xchg
incb
mov
sbb
hlt
sub
sbb
mov
jl
rcrl
cmp
add
and
out
mov
pushf
pop
cmp
shll
rcl
jae
sti
xchg
aas
sbb
or
mov
movsb
enter
test
aaa
rolb
push
dec
and
and
cld
je
cmp
sub
mov
or
mov
into
aas
call
mov
leave
fwait
pop
mov
cmp
pushf
lea
jae
or
pushf
test
pop
xchg
ffreep
push
popf
push
adc
repnz
ret
in
std
dec
sbb
inc
pop
stc
int3
mov
jne
movsb
push
ds
lea
stos
pop
dec
cli
loopne
and
mov
mov
adc
in
pushf
and
sub
jmp
lds
cli
movsl
popf
test
cmp
xchg
push
inc
in
xor
lahf
aas
add
xchg
sti
inc
mov
dec
aad
mov
inc
imul
pusha
outsb
add
loopne
pop
shl
clc
cmp
jg
cltd
scas
dec
adc
fdivrs
jg
push
push
xor
dec
rorb
push
mov
js
repz
pushf
mov
cmp
cmp
fiaddl
pop
add
out
lea
pop
test
in
xorl
xchg
sbb
sub
leave
mov
cmp
fsubr
frstor
mov
idivl
dec
divb
movsb
inc
dec
mov
mov
sub
outsb
sub
cwtl
inc
bound
mov
js
cmpsb
leave
scas
sti
or
fxch
mov
xor
jns
push
adc
pop
xor
jns
pop
insb
js
fsubrl
jae
cmpl
jl
es
jp
mov
lret
js
out
inc
pop
cli
cwtl
ds
cmp
and
push
daa
repz
mov
jne
sub
mov
push
sbb
adc
fmull
dec
rorb
sti
movb
jb
add
pop
lret
pop
cld
xchg
sbb
jp
xor
mov
sbbl
push
ret
cwtl
fmull
cld
adc
aas
bound
mov
cwtl
mov
fcompl
jae
adc
fs
testb
or
sbb
sbb
jle
rcl
jnp
arpl
xchg
cmp
push
shl
decl
push
xchg
js
pusha
mov
xchg
js
pop
jbe
inc
lret
fcmovnb
fsubl
lds
mov
loope
xchg
xor
movsb
mov
fadds
lret
pop
pushf
xchg
adc
and
repnz
fsubrs
ret
fisttpl
mov
jg
mov
jmp
add
rol
or
sbb
jno
sbb
call
xor
xor
mov
mov
subb
mov
inc
ret
std
lods
scas
mov
sbb
in
in
cwtl
dec
jmp
enter
ljmp
pop
mov
mov
push
lock
dec
inc
cwtl
mov
ret
pop
subb
sbb
icebp
sbb
sti
outsb
mov
pop
cmp
fld1
fdivrs
loop
mov
jne
adc
negb
fdivrs
sbb
out
mov
imul
and
aad
sbb
adc
pop
fstps
fldt
cwtl
stos
sbb
sub
scas
dec
test
movsb
jg
jb
in
pop
sub
or
imul
call
out
mov
push
xchg
loop
add
sti
ror
clc
or
push
ds
sbb
xor
cmp
divl
mov
jns
push
add
cmpb
ljmp
stos
lods
jmp
add
repz
and
cmpsb
cmp
mov
sub
imul
xor
mov
mov
std
ja
aaa
jns
xchg
gs
popf
xchg
sbb
fwait
push
add
xchg
sub
xchg
jmp
stos
enter
shrb
icebp
pop
xor
mov
pop
int
outsb
pop
ds
sub
mov
cwtl
sbb
out
cs
cmp
xor
mov
outsl
sbbl
out
push
sub
in
movsb
int3
mov
mov
jns
add
xor
dec
or
jecxz
mov
xor
bnd
sbb
imul
mov
jle
or
cli
int3
pop
add
jno
mov
dec
orb
jns
arpl
cmpsb
sbb
nop
sub
jg
mov
mov
les
cmpsb
push
push
pop
mov
inc
rcrb
lahf
adc
leave
fwait
dec
add
jmp
sbb
pop
mov
mov
xchg
int
jno
cmpsl
lea
in
xchg
loop
cli
clc
push
cs
add
repnz
fs
sbb
pusha
test
dec
push
mov
add
adc
cmp
in
popf
bound
xchg
scas
dec
iret
lds
cmpl
pop
loope
pop
mov
call
popw
ss
outsb
cmp
adc
sbb
pop
adc
sub
fistpll
fmull
adc
mov
sbb
sbb
mov
sbb
pop
lahf
cltd
rcl
rcrl
pop
sub
jae
aas
sub
mov
data16
push
rolb
sub
out
jle
or
enter
xchg
jecxz
xchg
mov
sbbb
cmp
mov
and
xchg
cmp
stos
test
pop
pop
sbb
lds
add
jg
je
bound
mov
fsin
mov
roll
int3
push
stos
or
fildl
xchg
jbe
fwait
in
cwtl
pop
out
pop
add
dec
mov
inc
mov
push
cmp
hlt
das
sahf
gs
mov
jmp
addr16
test
pop
hlt
fs
mov
mov
mov
sbb
inc
push
pop
sbbb
cmpsl
mov
add
lods
push
repnz
adc
insl
sbb
rcll
mov
xor
mov
sbb
popf
fsubr
inc
dec
fstps
out
inc
xlat
jb
cmp
sub
mov
jnp
not
xchg
sub
hlt
adc
mov
push
test
popf
cld
and
call
les
int
int
dec
or
mov
cmp
test
out
pop
mov
and
and
mov
or
jbe
pushf
sti
nop
out
rcrb
pop
push
or
cmp
jnp
sub
jl
mov
mov
out
fadds
stos
stc
mov
cmpsl
test
test
cmp
insb
fiaddl
mov
mov
xchg
dec
data16
sbb
int3
test
jp
idiv
sbb
mov
mov
mov
pushf
mov
cli
rolb
dec
frstor
loopne
ljmp
push
xlat
mov
mov
pop
cmp
pop
cmp
enter
cmpsb
xor
add
out
push
fdiv
stc
sub
in
and
push
and
int
push
mov
cmp
js
test
push
pop
sub
cmp
sub
ret
add
sbb
repz
in
adc
pop
ds
mov
aas
ret
sarl
shrb
in
addr16
sti
xchg
mov
mov
or
pushf
jnp
subb
gs
out
mov
cmp
mov
mov
scas
rclb
pop
int3
adc
push
ret
mov
fidivrl
ljmp
mov
xchg
ss
je
cs
shll
stos
mov
sti
std
es
jns
jo
popf
xor
adc
pop
lcall
ret
mov
lahf
pop
sbb
sub
shlb
hlt
fsubl
mov
mov
rorl
outsb
outsb
daa
les
popa
insb
lret
adc
addr16
lahf
popa
pushw
pushf
aad
sub
inc
in
xchg
xor
fcoms
movsl
mov
ds
mov
es
jge,pt
sbbl
xchg
loope
cmp
push
dec
jo
mov
ret
popf
mov
fistpl
push
sarb
sbb
sub
dec
cmp
int3
mov
int3
cli
popa
mov
cltd
stc
stos
addr16
push
mov
and
lret
inc
lahf
fldenv
mov
aas
add
dec
stos
sbb
and
cmp
cs
cltd
in
ror
mov
fstl
js
push
and
fsubrs
imul
popf
fcmovnbe
jecxz
pop
iret
push
ret
pop
es
mov
repz
in
sbb
xor
sbb
lret
sub
xor
out
push
ret
popf
mov
mov
mov
jg
mov
in
adc
lret
pop
sbb
and
outsb
jg
xchg
and
enter
jno
pop
inc
cli
sti
or
loope
inc
repnz
cmp
aas
addb
outsb
mov
int
in
mov
sub
dec
cmpsl
in
sub
stos
pop
neg
mov
stc
xchg
mov
ficomps
ljmp
xchg
and
mov
mov
xlat
sub
xchg
into
ret
mov
std
jmp
shll
adc
cmp
mov
ret
jl
push
add
inc
jb
lret
sbb
shll
inc
pop
pushf
out
loope
decb
icebp
push
mov
rorl
data16
aad
aas
movsl
scas
mov
scas
push
in
sbb
xlat
fisttps
jno
mov
and
cwtl
xchg
or
fs
pop
xchg
loope
das
nop
fwait
cwtl
insl
leave
popa
push
fcoml
mov
out
cli
insb
or
jbe
test
test
insl
xlat
out
or
cmp
jp
mov
push
out
adc
or
push
imul
inc
daa
inc
push
fidivs
leave
lcall
lods
xlat
mov
ss
adc
pop
stos
sbb
movsb
mov
out
mov
push
jp
pop
add
fisubrs
mov
int3
push
mov
enter
arpl
cmpsb
rol
cmp
lcall
dec
push
sbb
sarb
add
jnp
fdivl
pop
outsb
aad
les
lret
inc
sbb
rorb
jl
mov
and
mov
clc
cmp
xor
pop
mov
jle
ret
leave
cmpsl
mov
mov
jg
xor
mov
sarl
adc
jp
inc
xor
sahf
mov
inc
scas
aas
or
mov
sti
push
inc
out
call
and
mov
in
mov
aam
cli
sahf
xor
test
pop
mov
inc
fwait
cmp
push
pop
test
sbb
iret
in
movsl
inc
fists
fisubrl
gs
sbb
loop
push
loopne
cmp
mov
pop
jae
mov
sbb
adc
xchg
fcomp
sbbb
sbb
cli
adc
sub
pop
aaa
icebp
lret
inc
push
in
cltd
cld
jg
mov
std
lods
dec
pop
scas
test
hlt
mov
subl
addb
popa
cmp
pop
xor
inc
lods
popf
movsl
test
jno
fldl
divl
push
orl
inc
stos
pop
mov
mov
in
enter
pushf
pop
mov
stc
and
jg
es
popa
jne
pushf
aas
mov
mov
xchg
mov
nop
rcrb
sarl
stc
jp
pop
or
clc
mov
push
stos
cmpsl
call
std
sbb
out
out
xchg
push
lds
mov
cmp
cmp
cli
or
arpl
outsb
adc
in
popa
sbb
hlt
aaa
add
mov
int3
loope
ds
push
ja
jg
cmp
popf
sub
movsl
popf
fcomps
hlt
lret
pop
mov
cmp
out
rclb
icebp
cmp
aas
cmpsb
pusha
cmp
mov
test
push
mov
mov
dec
mov
rol
dec
xchg
add
sarb
loope
adc
scas
mov
xor
lcall
loopne
sbb
and
daa
movb
add
xor
ret
pushf
sti
pop
aad
out
jge
leave
lret
lret
mov
rorl
ljmp
adcl
sbb
in
and
mov
mov
fstl
out
xor
sub
imul
dec
lret
enter
psraw
mov
add
shll
outsb
mov
icebp
xchg
mov
and
cmp
sbb
mov
inc
dec
in
div
push
stc
pushf
out
add
cmp
clc
fcoml
cli
ret
arpl
jecxz
mov
mov
call
sbbb
push
fldt
fdivl
aam
outsl
lahf
xchg
sbbb
push
in
dec
sti
popf
sarb
and
gs
iret
clc
negb
cmp
push
mov
imul
lret
imul
leave
mov
fistps
pop
push
pop
pushf
int3
adc
aas
daa
roll
fmuls
mov
jnp
ljmp
pop
sarb
pop
dec
cmp
pop
jp
cli
adc
sti
div
push
cli
pop
adc
ds
sbbb
mov
adc
inc
aas
mov
int3
mov
data16
lret
dec
and
ret
call
fdivrl
ret
pop
fsubr
lret
push
je
push
push
js
mov
dec
cwtl
mov
push
in
jns
inc
invd
cmpsb
lods
ret
mov
mov
jnp
add
dec
add
jl
xchg
xchg
dec
ja
xchg
cmp
inc
int3
mov
popa
sub
inc
push
push
pop
or
jo
jg
outsb
or
call
fwait
out
cli
and
mov
mov
fbstp
jbe
or
add
dec
push
fdivrp
test
mov
ret
loop
push
mov
push
dec
int
bnd
pop
cwtl
cmp
test
into
nop
mov
bound
lahf
jnp
dec
pop
fstl
daa
repz
fldt
cs
mov
jp
leave
leave
rclb
fiadds
mov
pop
shlb
ficoml
mov
fnstsw
adcb
push
out
or
xor
xchg
xor
sbb
pop
pop
int3
and
mov
inc
jae
mov
adc
stos
xor
in
or
mov
jecxz
negb
push
cwtl
pop
mov
into
xor
mov
outsb
clc
fcoms
mov
pop
sub
lock
orb
fwait
add
mov
les
add
dec
aad
fsubrs
push
mov
mov
dec
enter
or
mov
sbb
push
lret
fcmovnb
icebp
cmp
pop
pop
mov
push
aas
out
jmp
mov
jg
movb
fsubr
in
test
xor
pop
jbe
jmp
je
sahf
repnz
rolb
cmpsl
sbb
pushf
dec
dec
and
or
mov
fucom
mov
es
fcompl
pop
sbbb
out
mov
int
in
dec
enter
outsb
sti
aas
mov
xchg
add
cwtl
push
jo
ret
pop
inc
movsb
push
dec
push
inc
push
fwait
inc
sbb
rcll
lahf
adc
dec
loope
fs
fwait
sti
mov
xor
fnstcw
sub
mov
enter
adc
push
ret
out
ja
dec
mov
xchg
sbb
mov
sbb
or
outsl
push
cwtl
or
or
pop
mov
fisttps
xor
js
ds
push
pop
xchg
jne
pop
inc
cmp
mov
xor
inc
es
push
cmc
push
rclb
push
and
js
stc
lds
mov
dec
pop
inc
aam
and
aaa
cli
jl
cmp
push
adc
xchg
loopne
pop
push
in
xchg
jnp
icebp
stc
int
sbb
cmp
stc
push
bound
nop
mov
out
dec
pop
xor
cmpsb
imul
mov
ret
mov
cwtl
lret
mov
scas
fwait
pop
push
es
add
jno
sub
jmp
and
cmpsb
sbb
xchg
les
xchg
lods
mov
out
fwait
dec
cmp
aas
cmp
rcrl
cmp
sbb
adc
xor
lods
lcall
jnp
sub
inc
cmpsl
jae
pop
pop
pop
cli
out
pop
ror
movsl
lods
iret
xchg
adc
pop
jmp
decl
xchg
cmpsl
js
movsb
jb
lods
pushl
push
movl
mov
inc
push
pop
mov
jbe
in
test
sbb
xlat
sub
cmp
ds
decb
jl
push
cmp
push
stos
lret
xor
jmp
shlb
xchg
jp
mov
jae
add
lahf
sti
out
sbb
push
and
lds
mov
or
xor
imul
mov
movsl
add
dec
js
mov
pop
jmp
imul
inc
mov
add
mov
push
or
sub
icebp
lods
fisubl
aas
loopne
inc
jge
sbb
mov
sbb
lds
clc
mov
ljmp
movups
aad
sbbl
pop
fdivrp
sub
loope
jbe
mov
lret
dec
pop
push
decb
xchg
sub
cltd
ljmp
aam
fldt
int3
xor
sbb
cli
dec
dec
adc
mov
mov
sbb
stos
cmp
lret
add
test
mov
sbb
ret
mov
adc
mov
dec
out
pop
adc
ds
cs
mov
fistps
pushf
rcrl
popa
push
ss
and
mov
sbb
in
arpl
add
pop
into
dec
into
jmp
popf
sub
cwtl
mov
mov
xchg
out
hlt
insl
cli
xchg
in
cmp
jb
data16
daa
bound
aaa
les
incl
and
hlt
pushf
sbb
and
xor
stos
inc
push
jno
sub
pop
pushf
in
mov
inc
xchg
pop
or
andb
push
fmull
iretw
cli
and
mulb
fimull
mov
ljmp
scas
sbb
jb
pop
pop
pop
and
xcrypt-ctr
cmpsl
pop
inc
or
sbb
lahf
pop
push
xchg
push
xchg
pushf
jg
lds
div
sub
inc
and
repz
fsts
cmpsb
cmpl
or
stc
arpl
cwtl
sti
fiadds
sbb
pushf
out
dec
test
xchg
clc
sbb
sbb
adc
cmp
ret
imul
jmp
xchg
pop
push
lret
inc
loop
push
xchg
sbb
lods
push
arpl
and
loopne
sahf
ficoms
pop
or
fadds
add
mov
fwait
xor
rol
xchg
std
jle
mov
mov
mov
mov
jge
pop
mov
mov
pop
sbb
gs
mov
adc
inc
outsb
ss
jbe
je
leave
mov
ret
mov
mov
or
scas
cmp
mov
dec
insb
insl
jle
cwtl
adc
hlt
mov
cmpsb
ss
jl
mov
out
dec
cmp
cmpb
mov
insb
pop
jp
xor
test
xchg
pop
sbb
popf
imul
pop
mov
shll
ror
and
cmp
mov
mov
sub
lret
leave
dec
enter
cmpps
call
xor
mov
aas
pop
ret
outsl
paddb
cmp
loopne
mov
sbb
cli
int
cmp
in
les
sbb
daa
mov
sbb
lods
lds
xchg
andl
fdivrs
rol
jp
sbb
mov
insl
sbb
adc
test
and
shrl
lcall
dec
fsubp
dec
shrb
inc
pushf
out
repz
cmpsb
sbb
xor
mov
dec
jne
xchg
mov
testl
fldenv
iret
jno
xchg
scas
repnz
push
pop
sbb
outsl
call
mov
xchg
arpl
inc
adc
js
and
cld
cs
cwtl
sub
call
sub
lcall
mov
sub
in
xchg
sahf
mov
jmp
les
ja
cli
inc
sahf
cmp
xor
jg
ret
mov
or
fsubs
fwait
cmp
lahf
orb
jne
mov
xchg
cmp
add
fdivrs
sbb
sbb
xor
imul
cmp
mov
mov
add
decl
and
jg
dec
sarl
jnp
or
jl
out
xchg
mov
pop
rcrl
in
dec
dec
lahf
cli
dec
add
rcl
fwait
cld
push
push
cmpb
std
jnp
push
movsl
aad
mov
adc
mov
cmp
dec
mov
mov
cmp
jae
mov
dec
fldt
lods
jnp
jbe
jg
mov
les
stos
out
stc
frstor
ja
stos
aas
and
hlt
repz
inc
adc
and
xor
jmp
cmp
inc
pop
sbb
or
and
cmp
flds
sbb
cmp
je
in
loope
pop
mov
movsl
ret
outsb
nop
jg
or
pushf
stc
push
dec
pop
adc
pop
xor
push
in
fsubrs
jl
inc
adc
outsl
jle
pushf
nop
add
mov
rcrb
jbe
adc
xchg
cmp
sbb
gs
aas
dec
out
pop
incl
pop
mov
pop
sbb
sbb
push
pop
subb
adc
sbb
mov
test
adc
inc
mov
inc
push
mov
lea
mov
and
lods
pop
shll
and
and
iret
jo
add
mov
or
mov
jecxz
imul
hlt
outsb
sbb
mov
pop
test
xchg
cld
lcall
adc
lds
inc
and
fdiv
adcl
jnp
mov
dec
sub
adc
push
data16
xchg
xchg
cmp
ja
pop
leave
jle
cmp
jl
mov
out
jae
popf
jbe
pop
ret
and
fwait
test
push
jle
leave
push
imul
fdivl
pop
fdivp
dec
aas
add
mov
mov
pop
xchg
fwait
cwtl
mov
adc
sub
mov
mov
xchg
and
add
adc
fiaddl
fcmovbe
jle
ss
addb
int
loopne
sarl
mov
scas
test
and
rolb
cli
faddl
and
dec
jp
sbb
mov
cltd
xchg
repnz
add
and
sbb
and
mov
mov
mov
xchg
mov
xor
or
mov
int3
cmc
or
mov
cmc
jecxz
in
gs
xchg
inc
and
sbb
push
and
jo
cmp
ss
pop
ds
cwtl
fxch
mov
push
nop
std
out
jp
mov
jno
cmpb
mov
adc
pop
sbb
adc
leavew
imul
add
lock
cld
inc
outsl
dec
mov
jne
sbbl
sahf
lock
mov
push
push
sbb
jnp
sti
xchg
mov
jg
jl
cmp
push
push
sub
mov
out
lock
pop
pop
loopne
sahf
stos
jg
pop
fcompl
cmp
mov
pop
jg
aam
loop
pushf
add
push
imul
loope
int3
pop
sbb
aam
xadd
es
scas
pop
inc
test
and
mov
shll
xor
sbb
lods
push
push
or
rorb
sub
jnp
adc
pop
test
mov
mov
jb
jns
jbe
and
push
and
mov
mov
push
jle
sbb
sahf
xchg
dec
jg
aad
stos
pop
xor
adc
adc
or
cmc
in
lods
data16
lahf
outsl
xchg
sbb
ret
cmp
add
int
pop
jle
sarb
les
mov
insl
sbb
mov
xor
inc
fcomp
adc
test
xchg
sti
pusha
push
ss
jnp
dec
and
lods
in
fadds
mov
imul
dec
adc
popa
mov
fcmovu
mov
add
push
jbe
rcrl
xchg
imul
sbb
jg
cmp
les
jmp
add
pushf
pop
dec
popf
pop
jl
stos
dec
test
into
pop
out
push
pop
fwait
clc
hlt
int3
mov
enter
int3
std
jno
adc
ret
jmp
arpl
stc
mov
xchg
test
mov
inc
cmpsb
mov
pushf
jg
mov
inc
mov
mov
adcb
sub
call
or
sbb
cs
sbb
jnp
pushf
or
stc
xor
imul
push
testl
lret
mov
inc
push
lret
sub
add
mov
pop
inc
inc
jl
lcall
xlat
push
jb
and
sbb
inc
jg
or
mov
lahf
mov
mull
add
cmp
push
mov
fists
lock
sbb
push
push
push
sub
sar
in
shlb
dec
inc
les
rclb
in
sub
cmpsb
inc
cmp
pop
adc
pop
popf
aas
dec
xor
mov
push
sbb
and
xacquire
subb
loope
aad
dec
cmc
pop
cmc
hlt
and
xchg
add
scas
and
adc
in
shr
fwait
cmp
xorl
mov
into
pushf
enter
jecxz
fldl
in
fsubrs
ljmp
xchg
xlat
jmp
mov
rorl
or
scas
adc
leave
shlb
mov
mov
sti
sbb
mov
or
cltd
pop
loope
push
sbb
dec
leave
mov
adc
push
test
mov
std
inc
ret
cli
insb
outsl
and
pop
push
ds
es
adc
jno
cmp
into
out
add
fcmovnbe
inc
push
xlat
imul
push
outsl
mov
pop
cmpsl
push
push
sbbb
jg
out
scas
sbb
test
addb
pop
call
out
idivb
mov
pushf
add
lret
stos
mov
mov
test
jg
clc
cli
enter
push
mov
mov
dec
sti
inc
jo
fwait
dec
xchg
cmp
pop
ret
pop
cwtl
xor
clc
outsb
outsb
mov
out
fisubl
sub
movl
test
fnsave
xchg
sbb
scas
sti
pusha
pop
ror
dec
test
jns
int
leave
and
rcrl
and
cmp
push
adc
sbb
repz
xor
sbb
je
cmp
mov
outsl
fstp
mov
mov
roll
iretw
lock
dec
mov
jg
sti
jne
test
and
cmp
push
or
cwtl
shll
mov
mov
fisubrl
cmp
pop
sahf
inc
scas
fst
out
stc
stc
int
jb
jne
clc
xchg
sub
leave
pop
push
pop
int
xor
fcmovu
jg
cwtl
movsl
jle
pop
movsb
xor
ret
sbb
lds
xchg
mov
iret
arpl
mov
push
mov
lahf
insl
jae
xchg
sub
xchg
pop
dec
pop
loopne
pop
sbb
sub
arpl
je
pop
loope
subl
pop
or
into
leave
std
xor
mov
or
leave
sub
push
jnp
test
push
jecxz
es
xor
pop
lods
je
lahf
lahf
sbb
add
mov
cmpsb
mov
pop
push
xchg
or
jmp
das
aam
ds
jne
cwtl
sbb
push
xchg
mov
jnp
pusha
pop
stos
sbb
sbb
pop
jno
fstl
stc
mov
jg
mov
adc
cmp
mov
idivb
iret
insb
dec
aam
cmp
add
and
push
jg
lods
incl
cwtl
aam
data16
mov
loopne
scas
jg
or
aas
cli
lahf
repz
clc
movsl
je
or
jmp
mov
lahf
dec
and
icebp
xor
adc
fcomps
mov
cmp
int
mov
fmuls
stc
mov
push
mov
push
jl
out
cmp
sbb
andl
test
aaa
pop
lea
ret
jmp
push
sbb
adc
les
push
xchg
xchg
cmp
js
sbb
mov
jg
sbb
lret
mov
nop
push
loop
ret
fdivl
imul
pop
cmp
mov
mov
cmp
pop
inc
lds
sbb
aas
arpl
lahf
ret
aam
push
mov
xor
call
mov
pop
popa
mov
sub
dec
xor
adc
xchg
aas
sbb
lret
nop
inc
pop
mov
sbb
bound
inc
aad
cmc
sbb
xor
mov
xchg
mov
push
add
xorb
and
pushf
cmc
push
pop
jle
addb
cmp
mov
clc
mov
aas
lea
sbb
dec
rclb
mov
lea
cmp
pushf
adc
push
xchg
sbb
hlt
xor
sub
aaa
stos
or
stos
cwtl
clc
js
cmc
leave
mov
xor
add
add
iret
cld
adc
inc
cmp
mov
scas
lods
sti
scas
shl
ret
mov
mov
bound
jp
sbb
push
sbb
lahf
in
addr16
jno
movsl
incl
fbstp
lret
ss
sahf
ljmp
cmp
sbb
nop
mov
and
lock
mov
int
insl
jg
inc
fsubrp
and
lea
in
and
stos
outsb
xor
scas
rcrl
jb
mov
push
mov
adc
jecxz
cli
jp
cmpsl
testl
out
sub
push
loop
test
js
rorl
dec
pushf
xchg
loope
dec
dec
pop
add
ret
pushf
mov
imul
fcompl
loope
inc
fsubrs
mov
std
inc
jmp
movsl
mov
adc
clc
lcall
iret
xchg
imul
popa
push
cmp
xchg
dec
xchg
mov
mov
mov
into
movsl
xchg
cmp
push
mov
sbb
out
cltd
pushf
dec
ret
sub
mov
mov
imul
jne
sub
ds
fs
scas
stos
fldl
jp
fisubl
int
shl
imul
rolb
mov
xchg
popf
cwtl
adc
xchg
mov
mov
push
mov
adc
and
fidivs
mov
jns
repnz
dec
icebp
out
xor
es
lcall
mov
mov
xchg
jnp
dec
ret
and
sbb
daa
cwtl
loopne
sbb
insl
sbb
dec
and
into
arpl
test
mov
test
sbb
jno
roll
mov
cli
les
mov
mov
inc
aam
adc
inc
movsl
test
push
or
or
cld
jae
popf
fcompl
sarl
pop
data16
sbb
xor
mov
dec
and
test
outsb
in
vcvtps2pd
das
mov
cmp
fbld
in
push
xchg
enter
push
test
add
mov
in
mov
cmp
scas
jmp
lahf
jae
mov
pop
orl
xchg
pop
cmp
repnz
add
push
fisubs
bound
leave
fcmovbe
mov
sbb
mov
int3
or
outsb
mov
addl
pushf
jno
scas
mov
dec
xchg
dec
jmp
pop
pop
pop
outsl
and
xor
ds
jb
dec
inc
dec
das
cmc
push
mov
xor
iret
cltd
lret
out
add
add
cltd
cwtl
push
adc
int3
shll
and
sub
stos
pop
nop
mov
pusha
or
cli
enter
cmc
sbb
mov
scas
sub
push
xchg
outsl
aad
test
add
cmp
push
adc
jnp
incb
inc
mov
mov
dec
push
push
sbb
call
jmp
int
xchg
mov
cmp
scas
stos
jne,pn
cmp
fcomps
and
push
cmp
call
mov
loopne
scas
int3
sub
sbb
jle
jbe
cmc
xchg
or
clc
lods
ljmp
pop
mov
adc
mov
pushf
sbb
out
mov
scas
stos
clc
pop
in
cltd
or
inc
std
mov
sar
faddl
jbe
mov
jns
sbb
stos
incl
push
mov
jg
add
int
pushf
mov
sbb
repnz
in
dec
sub
sub
mov
xor
xor
xchg
mov
xchg
das
shl
lcall
sbb
mov
fisubrs
mov
ficoml
jecxz
cmp
hlt
xor
test
test
in
add
fsubrl
dec
test
fsubrl
inc
and
cmc
push
decl
and
shl
addl
push
add
xor
into
push
loopne
jns
cmp
es
sub
int3
hlt
fcomps
out
outsb
es
pop
push
cmp
pop
popf
mov
pop
mov
call
shl
out
sbb
stc
fucomip
cli
inc
push
pop
jle
dec
rcrl
mov
lods
int
push
xchg
cld
mov
pusha
pop
jb
mov
jg
fldt
inc
out
pop
push
test
les
aam
jb
cli
sbb
icebp
mov
cltd
dec
pushf
mov
daa
xor
adc
add
imul
lods
xchg
cltd
scas
dec
mov
aam
rclb
les
fnstcw
andl
dec
stc
pop
arpl
xchg
arpl
mov
mov
cmp
xchg
jno
lret
mov
jl
aas
mov
pop
pop
jg
das
shrb
nop
inc
cltd
mov
shrl
pop
push
adc
xor
cmp
pop
mov
sub
adc
nop
cwtl
loope
out
pushf
lcall
cmp
push
stos
or
jb
cwtl
clc
frstor
jnp
sbb
in
push
in
fwait
test
cmp
gs
pushf
cmp
cmp
mov
xchg
mov
adc
pop
cmpsb
pushf
adc
lcall
xor
cmpsb
pop
loop
push
xor
rolb
xchg
jmpw
or
jne
pop
jg
and
pop
mov
scas
sti
pop
add
les
mov
in
sbb
inc
pop
out
mov
cmp
repz
add
mov
pop
fdivl
imul
mov
add
sub
lock
int
inc
xor
mov
mov
mov
cmpb
call
sub
sbb
push
je
mov
fs
pop
sbb
ret
test
push
fst
call
adc
lcall
bound
pop
movsl
fstpt
adc
icebp
cmp
sub
mov
arpl
or
stos
jg
push
mov
lds
push
jmp
bound
repz
jl
out
jbe
sub
push
sbb
mov
sbb
and
cwtl
pop
sahf
aam
jbe
xchg
arpl
enter
cwtl
pop
dec
jg
fs
cmp
sahf
aas
fildl
movsb
pop
fstpl
cmp
aad
outsb
mov
or
ror
cwtl
inc
mov
pop
fdivrl
popf
jecxz
popa
testl
jle
cmpsb
push
sbb
arpl
sar
fildl
pop
imul
repz
leave
int
push
push
aad
mov
xchg
imul
imul
mov
jo
pop
addr16
mov
fs
push
inc
mov
int3
in
or
fldl
cmc
ret
ror
aas
jmp
out
jp
pop
fs
inc
addr16
pop
lret
cmpsb
mov
mov
mov
mov
pop
inc
gs
inc
sbb
mov
js
fisubrs
idivb
pop
sub
inc
cmpb
stc
es
out
fadds
test
mov
fsub
pop
or
loope
pop
jns
fcoml
ficoms
cmpsb
cmp
pushl
sbb
mov
dec
aaa
pop
pop
test
inc
adc
jno
push
mov
mov
pop
cmp
aaa
sbb
ds
insl
pusha
dec
jp
pushf
inc
cli
faddl
lods
mov
insb
stos
push
inc
pop
mov
xor
push
cmp
cld
mov
ds
cmp
mov
and
mov
add
inc
push
movsb
xchg
sti
pusha
out
out
pushf
and
dec
jp
out
push
ss
stc
push
or
xchg
addr16
cli
stc
incb
mov
call
out
jnp
jne
mov
inc
jo
push
sbb
popf
shlb
cmpsl
mov
aas
sbb
out
movzbl
cli
pusha
scas
stc
aas
jns
mov
dec
call
xor
shlb
pop
ljmp
mov
push
das
sbb
mov
ljmp
ret
aam
test
dec
outsl
pushl
and
mov
mov
and
call
sub
xchg
cwtl
ret
mov
mov
mov
test
aaa
fwait
mov
mov
xor
add
sbb
loop
sbb
cli
mov
loope
inc
sbb
ss
sub
push
pop
shrb
add
lret
adc
pushf
dec
ja
pop
std
pushf
push
push
add
stos
test
xchg
and
btl
aaa
jbe
adc
xor
stc
insb
xchg
jp
stos
les
fisttps
in
mov
dec
cmp
mov
cld
lahf
and
lods
mov
and
cmpl
fadds
leave
andl
cwtl
mov
cmp
insl
mov
pusha
fadd
sub
leave
and
sub
jo
sbb
jnp
mov
in
lock
push
push
pushf
sbb
pop
insb
push
pop
sbb
fisttpl
outsl
icebp
fildl
cli
inc
pop
xor
push
cltd
cmp
jle
fcmovu
subl
xor
jnp
and
mov
test
js
hlt
push
sqrtps
das
movsb
rol
in
inc
mov
pop
sahf
es
les
mov
rclb
test
xchg
sub
inc
das
inc
rcl
cmp
enter
pop
mov
in
pusha
cmpsb
xchg
and
or
cmp
dec
loopne
mov
mov
cmp
jns
xor
mov
ljmp
mov
or
mov
cmp
sti
pop
cmpb
lahf
cmpsl
iret
jle
loope
mov
mov
mov
lcall
subl
mov
sub
mov
sbb
cli
dec
in
ret
enter
sbb
pop
ds
adc
rcll
adc
lods
enter
cmp
push
test
cwtl
push
jge
add
pusha
cld
lret
pop
inc
rclb
sahf
jl
repz
xlat
lret
sbb
push
xor
mov
repnz
stc
mov
iret
pushf
cmpsb
mov
fildl
pop
scas
inc
sbbl
cli
outsl
sub
shrb
jbe
mov
push
push
sub
jne
cmp
aas
fnstsw
aas
lds
addr16
bound
lcall
dec
sahf
jle
sti
mov
addr16
xchg
xor
out
dec
loop
sahf
fcmovnu
pushf
lret
dec
jbe
mov
cs
jp
mov
or
jno
and
mov
add
jne
push
mov
js
int3
sbb
je
push
sarl
cmpsl
mov
lds
fmuls
in
and
inc
or
sbb
dec
sbb
mov
add
sarl
fcmovb
jge
push
sbb
enter
jl
shrd
inc
test
or
adc
push
lea
scas
push
int3
pop
push
jmp
sbb
loope
roll
decl
lahf
loop
ja
je
sub
aad
inc
mov
movsl
sub
mov
in
and
xchg
sti
cmp
sbb
dec
xchg
xor
fsubs
iret
push
lds
arpl
ljmp
pushf
adc
dec
or
out
sbb
lea
sbb
xlat
les
xchg
mov
lods
out
pop
dec
jns
loop
rcrb
cmpsb
adc
xchg
ss
lcall
inc
ja
call
or
jnp
lods
adc
jne
cld
popa
test
dec
or
leave
cmp
cmp
jo
pushf
mov
sub
faddl
and
fldl
push
loop
insl
arpl
cwtl
cmp
add
out
scas
push
subb
adc
inc
je
fs
jne
mov
aam
cld
push
add
mov
sbb
adc
xchg
sbb
dec
sahf
adc
pushf
push
std
mov
sbb
dec
scas
dec
push
out
push
add
cmpb
jg
dec
dec
ret
mov
lahf
jp
out
and
cltd
mov
mov
add
jns
pop
loopne
and
cmpsl
or
mov
lret
pushf
in
roll
push
mov
out
pop
mov
or
xor
pushf
cmpb
mov
and
stos
lds
mov
mov
cs
or
add
lock
mov
ret
fwait
xor
inc
mov
shlb
dec
jae
push
add
scas
iret
mov
inc
insb
cwtl
sbb
movsb
rorl
cmpl
inc
mov
in
daa
lds
mov
and
lea
and
clc
pop
pop
scas
mov
push
cmp
orb
dec
ret
mov
jnp
mov
adc
adc
adc
push
mov
inc
mov
dec
imul
bound
sbb
pop
pop
adc
jg
ret
cmp
leave
lcall
xchg
dec
jo
gs
cld
out
mov
test
scas
sbb
loope
cmp
movsl
cmp
xor
add
ret
loope
lret
mulb
and
cwtl
and
outsl
pop
mov
adc
addl
and
mov
arpl
jo
not
dec
loopne
repnz
fwait
jle
mov
jg
fildl
or
ss
adc
lahf
cmc
mov
add
lcall
ffree
lock
pop
cld
scas
add
pushf
aas
add
adc
mov
sahf
mov
jl
xchg
mov
je
push
pusha
gs
jmp
sub
lds
rcr
pushf
outsl
push
xchg
jmp
es
adc
xlat
mov
adc
jecxz
pop
jl
clc
sahf
aaa
cmc
sbb
fmuls
movsb
inc
xchg
mov
xchg
cmp
xor
pushf
hlt
shrl
cld
pushl
mov
and
jge
imul
lea
pop
int
js
cmp
mov
mov
sbb
jbe
xchg
inc
push
gs
xchg
jg
incl
sti
mov
rcrl
scas
mov
mov
and
xchg
sti
scas
dec
mov
jnp
fcmovnu
sub
xchg
cmp
lea
arpl
pop
mov
xor
push
push
aam
mov
lock
sbb
icebp
sbb
mov
mov
sub
ja
xchg
mov
es
aaa
fadd
mov
fwait
xor
xchg
les
sbb
ficompl
fstps
divb
imull
inc
mov
mov
call
mov
jb
fcomip
push
dec
test
out
test
mov
fwait
jg
mov
cwtl
xchg
inc
sbb
pushl
ficoms
or
fwait
jmp
popa
add
jnp
lods
mov
movsl
cmp
sub
popf
unpcklps
sti
mov
dec
mov
pop
stc
sub
lret
in
daa
ret
xor
and
mov
jge
add
or
mov
push
gs
stos
mov
cmp
jl
pop
leave
popf
or
nopl
mov
push
jb
pop
sbb
xlat
sbb
divl
mov
sahf
sub
mov
into
inc
movsl
mov
push
fwait
insb
xlat
pop
dec
lret
mov
jnp
cmp
add
mov
sbb
test
cli
pop
stos
adc
pop
mov
jnp
mov
pop
sbb
in
mov
int3
push
mov
lea
xchg
push
mov
mov
mov
push
pop
mov
ret
pop
je
iret
pushf
mov
mov
add
dec
fstps
pop
cmpb
adc
or
lods
xchg
mov
lret
lods
sub
adc
mov
adc
dec
fbld
lods
loope
pop
popf
mov
xchg
jb
int
scas
xchg
in
cwtl
into
lcall
lahf
filds
xor
dec
repz
jmp
arpl
mov
xorl
mov
sbb
pop
lea
mov
xchg
xchg
jecxz
jmp
add
call
jae
shl
mov
mov
lret
lods
enter
arpl
pop
jle
push
sbb
xchg
mov
or
cmp
inc
mov
cmp
lcall
mov
sub
inc
in
sbb
jmp
test
scas
mov
cmpsb
out
cmp
pop
cmp
fildll
and
std
adc
or
lcall
imul
nop
sub
mov
repnz
cmp
ret
mov
inc
lods
out
test
and
mov
sbb
test
cmpb
js
ret
xor
sub
sub
xchg
fistl
cmp
mov
xor
fidivs
mov
pushl
fimull
jnp
mov
daa
fcomps
sahf
ret
inc
lcall
in
pushf
adc
and
mov
sbb
xor
sub
cmp
rcrl
aas
ret
push
es
pushf
adc
inc
add
mov
mov
bound
jae
dec
mov
cmp
fsts
jl
fisubrs
aad
dec
lret
adc
daa
pop
xchg
loopne
and
xchg
pop
jp
ja
test
cmp
fstpl
add
mov
cli
int3
mov
je
repz
adc
ret
cmpsb
adc
fadd
lret
mov
and
adc
push
or
dec
imul
xchg
cmpsl
adc
fmulp
enter
outsb
test
xchg
dec
mov
hlt
sub
push
fsts
mov
xor
jg
sub
xor
orb
loope
pushf
push
push
test
adcb
andl
andl
cmpsl
push
js
mov
xor
mov
push
pop
sbb
mov
inc
fidivs
lock
fildl
mov
or
sti
out
mov
ror
sub
stos
out
push
push
in
mov
mov
add
inc
mov
pop
inc
cmp
push
sub
or
push
stos
aas
outsb
xor
hlt
js
repnz
push
lahf
js
inc
mov
jnp
sbb
sub
dec
push
mov
pop
scas
dec
mov
mov
or
and
in
scas
push
and
decl
fistps
aas
test
mov
mov
test
add
jg
aas
shlb
jb
mov
cmpsl
mov
add
adc
add
in
ffree
inc
fs
test
pushf
sub
mov
cltd
xchg
sub
fcomps
add
xchg
cmp
cld
mov
xchg
lea
lea
movsb
cmpsb
int3
and
add
mov
test
sbb
jae
sub
lcall
mov
xor
incb
or
adc
out
cld
out
pop
dec
jmp
cmp
mov
dec
es
stos
xchg
cmp
cli
or
iret
sbb
test
mov
ror
sub
outsb
mov
and
jle
mov
shrl
popa
shlb
lock
cmp
xchg
cmp
dec
imul
mov
dec
pop
xchg
mov
repnz
jae
inc
inc
jno
cs
fcmovnu
inc
jle
pop
mov
hlt
rcl
out
push
call
fcomps
fwait
push
add
movsl
jmp
jge
aaa
lcall
fimull
adc
cmpl
push
jbe
and
in
aad
xchg
adcl
or
xor
mov
clc
xchg
in
aas
aam
jnp
je
outsb
aad
cmp
xchg
lcall
jmp
cmp
leave
jecxz
push
lods
sti
push
xor
daa
movsl
sub
fadds
mov
stos
mov
call
add
xor
imul
adc
jnp
shll
test
mov
mov
fstpt
enter
sahf
cwtl
xchg
add
xor
pop
aas
mov
sti
inc
adc
mov
mov
movsb
xchg
andb
out
dec
add
les
mov
sbb
jb
fwait
xchg
mov
jns
add
add
sarl
dec
mov
add
push
inc
push
roll
clc
lret
sbb
mov
frstor
pushf
sti
outsb
mov
ds
dec
mov
icebp
jmp
and
mov
inc
and
pushf
std
faddp
push
inc
fdivrs
ja
dec
jecxz
push
pop
jno
mov
ljmp
adc
cmp
ret
dec
out
cmp
sub
push
push
add
cld
sbb
arpl
and
movsb
mov
subl
push
pop
call
inc
mov
popa
xchg
mov
push
push
cmp
push
jbe
cmp
cmp
imul
jg
mov
fndisi(8087
mov
sub
daa
mov
popf
test
push
popa
scas
cmp
aas
or
pop
pop
mov
xor
mov
rcll
sbbl
jp
out
mov
jne
sbb
sub
in
pop
incb
scas
dec
mov
dec
mov
out
cmp
daa
mov
repnz
sbb
inc
fcomps
mov
mov
ljmp
mov
or
mov
lahf
fists
pop
fs
push
cwtl
sbb
cli
adc
push
or
loopne
mov
or
adc
fdivrl
scas
scas
iret
fs
jne
pusha
pextrw
cmp
xor
lret
mov
filds
xor
add
mov
jo
push
inc
lds
shll
dec
mov
mov
ljmp
popa
fwait
adc
jb
pop
jle
sub
enter
mov
xchg
nop
mov
pop
sti
mov
ret
sbb
xor
imul
pop
ficompl
mov
push
std
xchg
fsubr
cwtl
sbb
sbb
cmpsb
jg
ss
mov
mov
fnstcw
or
inc
mov
lods
xchg
jns
enter
jg
pop
pop
nop
cld
stc
shrb
outsb
add
mov
or
cli
fmulp
jae
or
sahf
pop
adc
mov
cmp
loop
add
push
into
pushf
cltd
lret
rcrb
sub
ja
inc
cmpsb
je
cwtl
and
jg
jb
mov
push
push
rcr
lahf
sti
mov
out
push
mov
repnz
mov
ja
hlt
push
pushl
pop
jo
repnz
enter
je
sbb
mov
push
daa
mov
andl
pusha
sub
sbb
rol
aam
jp
sub
mov
std
mov
fmul
or
cmp
ss
xchg
lods
push
add
inc
ds
cmc
movsl
mov
aas
and
leave
and
dec
sbb
cmp
xlat
mov
stc
or
jge
inc
fnstsw
sub
mov
mov
incl
lcall
jg
cmp
les
xor
dec
xor
dec
repz
dec
clc
or
loope
int
aas
sub
cmp
add
or
jno
js
adc
push
jg
cmpsb
addr16
or
xchg
cld
stc
rorb
aam
push
jmp
sub
pop
subb
adc
rcr
cld
scas
enter
clc
xor
sub
push
cmp
es
mov
aas
jo
insb
mov
jno
add
sbb
and
fidivl
int
mov
fs
or
inc
scas
stos
and
test
jge
stos
inc
lds
stc
sbb
pop
inc
fdivrl
add
xchg
mov
push
pusha
ficompl
adc
das
push
std
sub
xchg
xchg
mov
mov
cld
in
mov
daa
lret
cld
cmpsb
incl
sbb
gs
push
movsb
xor
aad
in
cmp
pushl
lret
sbb
mov
daa
push
sub
lret
test
leave
dec
add
mov
test
fists
fistpll
rcrl
pop
xchg
lahf
xchg
jecxz
adcl
loope
out
jnp
test
stc
fildl
test
in
xchg
rcll
xor
mov
sbb
mov
mov
inc
push
dec
js
into
xchg
push
sub
out
inc
mov
sarl
rcl
icebp
dec
xlat
pop
push
push
out
bound
sahf
and
adc
pop
bound
mov
mov
nop
xchg
sbb
lcall
lea
out
aam
lahf
sti
lahf
mov
sar
mov
jbe
iret
cmp
stos
ljmp
scas
jmp
decl
xchg
pop
mov
icebp
sbb
jne
xchg
push
ficomps
pop
test
sbb
sbb
mov
lea
andl
test
jmp
lock
testl
fwait
push
orb
cmp
ret
mov
adc
aam
int3
das
or
sub
aad
cwtl
fisubrl
scas
adc
mov
cwtl
cmp
test
cmpl
pop
pop
pop
test
fldt
add
inc
imul
sbb
sbb
pop
ss
adc
data16
push
or
iret
mov
bound
cmp
cld
mov
add
fidivrl
or
mov
lcall
cs
je
js
xor
stos
mov
leave
dec
push
bound
pushf
jl
ret
js
mov
adc
sti
out
jo
rcll
imul
bound
fisubs
sub
loope
xchg
out
pop
frstor
in
mov
inc
inc
mov
cmp
inc
flds
mov
test
mov
xor
add
test
leave
fldt
pop
xchg
pop
ret
roll
pop
push
pop
pop
lds
ret
add
lcall
jle
pop
push
cmp
mov
jo
or
test
pop
jp
or
add
cmp
push
adc
into
faddl
aas
andl
add
lods
rcrl
daa
push
aad
mov
scas
cmp
cld
cmc
sub
pop
arpl
fwait
std
and
fdivl
push
test
pop
mov
and
cs
or
sbb
mov
sub
sti
sti
lcall
mov
icebp
out
jg
jmp
fmul
add
or
ret
and
fs
clc
popa
or
inc
faddl
add
mov
jg
xchg
popa
sbb
cmp
out
sbb
jns
outsb
xchg
fadds
loopne
xor
jp
and
sub
pop
movsl
adc
cmp
decl
mov
test
lods
push
adc
mov
mov
sbb
movsl
push
cmp
adc
add
sub
stc
lret
js
jg
fisubrs
cmp
fcmovbe
push
or
shlb
sbb
mov
or
fisttpl
incl
cmp
cli
scas
jno
pop
insl
push
mov
add
lcall
rclb
sbb
mov
pop
push
inc
out
addr16
cmp
jnp
stc
movsl
in
cltd
pusha
xor
or
cmp
cmp
mov
push
mov
sbb
aas
cmpsl
pop
pushf
inc
dec
cmpb
push
and
inc
sbb
pop
jb
imul
xchg
sbb
push
pop
pushf
imul
jo
xor
call
mov
ja
sbb
xchg
out
lret
dec
jl
shlb
sbb
push
jg
repz
jno
test
jnp
ret
jp
ja
lret
cmp
nop
adc
mov
dec
je
mov
mov
sahf
lea
jnp
cmp
pushf
aad
mov
mov
cwtl
test
add
popf
sti
fdivrl
inc
jns
lods
xchg
fsubs
test
sub
jnp
in
dec
je
push
dec
lahf
in
sbb
scas
lea
jo
mov
fistps
mov
out
mov
aas
xor
jp
cmp
int3
stos
ljmp
mov
cmp
pushf
xor
iret
cmp
pop
in
ds
cmp
add
aad
cs
sbbb
cltd
fmuls
fwait
rclb
lds
movsb
sbb
stos
icebp
jne
insb
lret
fwait
lds
outsl
dec
vcvtdq2ps
ja
out
in
mov
xchg
jnp,pn
ret
fisttpl
push
fadd
lods
lcall
imul
dec
jl
add
icebp
test
xor
xchg
pop
mov
aaa
loopne
lret
jne
in
fsubrs
mov
dec
in
dec
jo
sub
sarl
fmull
mov
rolb
mov
cs
sahf
xchg
pop
lods
addr16
cmp
push
mov
mov
and
lret
andb
jo
mov
fsubrs
or
xlat
fcmovnbe
movsl
aaa
sbb
lss
push
lods
sub
xchg
jb
dec
pop
sti
in
push
dec
jge
lea
iret
and
mov
js
stc
jns
les
push
lods
mov
cmp
into
push
jg
or
jbe
cmp
mov
popf
inc
into
sub
push
xor
aas
cmp
jbe
cmp
xor
rcrl
lahf
inc
std
pop
rol
outsb
in
xchg
lods
push
cmp
sub
sti
cmp
mov
lret
jge
or
filds
je
xorb
icebp
xchg
mull
jno
xchg
stos
sti
fs
pop
pop
jb
mov
jle
mov
adc
fs
or
movsb
add
ret
sbb
push
jb
fidivl
mov
std
std
sub
mov
std
mov
cmp
cmp
out
jp
mov
mov
jle
pushf
cmc
mov
mov
aad
in
sub
inc
je
add
shrl
fistl
fbstp
mov
mov
jge
xchg
xor
cltd
nop
sbb
in
es
pop
push
cli
outsb
lret
nop
imul
or
outsb
adc
mov
fmuls
mov
pusha
pop
mov
mov
cmp
mov
aaa
mov
push
xor
sbb
jl
push
dec
sub
ficompl
cmpl
negl
pop
xor
inc
xchg
pop
mov
aas
aas
sahf
mov
add
dec
mov
enter
leave
push
dec
scas
sti
pop
insb
mov
daa
fwait
sub
mov
movsb
insl
lret
sbb
xchg
lret
mov
gs
gs
out
imul
pushf
jnp
outsb
pop
lock
test
leave
imul
sbb
or
sarl
mov
popa
inc
jg
jp
shl
or
sub
mov
xchg
sub
pop
mov
xchg
pop
fcmovu
stos
inc
outsb
lock
jae
test
cs
data16
pop
sahf
mov
rclb
inc
push
push
test
and
jl
inc
ret
out
add
js
mov
fisubl
movsl
gs
lods
filds
ret
mov
add
mov
fcomps
xchg
cmp
adc
pop
add
mov
dec
cmp
fisttpll
push
adcl
jo
adc
cmp
ret
cmp
out
mov
pop
outsl
jecxz
decb
xchg
movsl
adc
fcoms
shll
inc
sub
adc
sti
pop
cs
out
sbb
inc
int
push
addr16
mov
stc
es
scas
xor
and
sub
arpl
js
shr
clc
cwtl
cmp
mov
mov
pushf
sbb
pusha
andl
cmp
insb
or
imul
mov
and
inc
and
mov
repnz
sahf
loopne
push
and
pop
insb
lcall
fsubl
xor
cmp
cmp
jle
ljmp
push
mov
fidivrs
mov
xchg
xor
xlat
sub
test
dec
setnp
jl
jle
fwait
imul
js
cmp
mov
xlat
dec
inc
int3
pop
aam
sbb
gs
test
cmpsb
mov
cmpsb
lahf
dec
mov
dec
inc
mov
add
xchg
js
jmp
sti
add
mov
dec
mov
fdivrl
mov
add
pushf
mov
add
lahf
pop
xchg
insb
mov
das
cmp
mov
pop
ret
and
mov
mov
fidivl
cmp
jge
adc
mov
inc
addl
push
fcom
adc
pop
cmp
sbb
push
ss
adc
xor
push
xchg
add
pop
sub
cwtl
add
ss
sub
jmp
inc
and
sarl
dec
je
and
mov
sbb
hlt
pop
xchg
sbb
xchg
xchg
addb
add
add
push
jle
mov
pop
cmp
pop
popa
xor
add
in
add
fldt
mov
in
mov
pop
jle
pop
cs
sti
sbb
or
pop
inc
push
mov
or
andl
idivb
ss
cmovl
sbb
push
cmp
dec
xacquire
stos
rclb
mov
xchg
das
loop
pushf
es
cmpsl
pmaxub
pop
jl
lcall
xor
cwtl
sub
loope
sbb
and
sbb
popa
xor
cmp
mov
pop
inc
mov
sub
sar
mov
sbb
xor
push
and
icebp
push
mov
ljmp
sbb
mov
jmp
incl
iret
push
pusha
out
dec
inc
in
out
cmp
adc
inc
fmul
mov
jp
sub
jmp
add
or
outsb
lods
sbb
orb
fimuls
push
jmp
mov
fs
and
inc
cli
sbbl
sahf
js
push
add
push
sbb
cwtl
loope
in
mov
add
repnz
daa
out
ljmp
jns
xor
clc
sti
adc
xor
and
fstpl
cltd
cmc
scas
jo
fisttpl
into
stc
es
lods
pushf
pop
das
cmp
mov
xor
inc
outsl
or
mov
inc
mov
fsubrl
adc
fcmovnb
xchg
inc
xchg
pop
outsb
jl
add
push
mov
loop
popa
ffree
push
aad
mov
and
mov
lahf
pop
sbb
decl
mov
pushf
les
adc
mov
and
mov
mov
xor
xchg
inc
insl
jl
sahf
aas
push
jno
cmpsl
sbb
add
call
iret
test
cltd
outsl
mov
pop
sub
push
pop
jne
xchg
inc
and
inc
sti
sbb
cmpsb
call
pop
in
sub
sub
jle
ja
outsb
jae
lret
lahf
sti
xchg
cmpsl
adc
mov
gs
sti
outsb
inc
cmovne
xchg
cmpsl
inc
pop
sar
cmp
movl
push
lds
out
daa
jo
mov
push
mov
push
lcall
mov
sti
in
mov
pop
subps
push
arpl
loopne
aas
mov
cmpb
or
xor
sbb
pushf
pop
hlt
stc
jbe
pop
adc
or
movsl
xor
sbbb
push
mov
dec
repz
xor
pop
mov
int3
sbb
pop
add
and
pop
pop
scas
mov
enter
sti
ret
fnstsw
shrl
popf
or
sbb
lret
andb
outsl
ficompl
pop
sbb
mov
sbb
mov
addl
pop
pop
and
adc
mov
adc
in
sbb
xchg
cmp
cmp
push
adc
pop
test
jmp
push
dec
stos
scas
adc
call
sbb
in
ret
mov
cmp
fstl
mov
cli
and
mov
pop
aas
fadd
mov
outsl
pop
cmp
push
jbe
bound
mov
inc
or
jnp
mov
sbb
sub
jle
gs
xor
xchg
cmp
ds
idivl
mov
ds
mov
fcmove
dec
push
jns
iret
lods
stc
pop
out
and
lea
loopne
ds
sti
inc
inc
adc
and
sti
sub
repz
pushf
cmpsl
jecxz
xor
fistps
or
adc
mov
push
xor
pop
aad
sbb
popa
jno
test
mov
sbb
lret
pop
adc
fldl
nop
test
push
xlat
imul
test
lods
aas
test
xchg
pop
popa
mov
pop
cld
fisubs
mov
jae
mov
aas
out
xchg
jne
ret
mov
sbb
sbb
orb
sub
sbb
pop
aad
xchg
mov
stos
jle
mov
loop
pop
push
jmp
push
mov
sti
cmp
fbld
sub
xchg
push
pop
fdivrp
negl
jo
and
mov
xor
movsl
roll
and
leave
push
cmp
mov
test
mov
subl
xlat
in
addl
test
adc
add
fwait
mov
adc
loopne
jnp
cmp
dec
mov
push
mov
lods
xorl
push
shrl
icebp
mov
or
outsl
int3
or
int3
pushf
ljmp
xchg
aas
out
aas
inc
or
fistl
adc
mov
xchg
into
ret
dec
fwait
cwtl
push
xchg
jnp
dec
sbbl
lret
jmp
sbb
cmpl
xor
mov
and
and
sbb
cwtl
fstl
pop
rclb
js
mov
mov
xchg
sti
in
add
ljmp
xorb
mov
push
insl
pop
or
push
outsb
mov
and
fstps
and
insl
incl
maskmovq
imull
cmp
sarl
mov
mov
mov
out
test
int
mov
ret
sti
sbb
mov
repz
rorb
sbb
mov
repnz
lds
mov
add
jbe
pop
mov
xchg
int3
inc
lea
cmpsl
aas
in
sub
pop
or
rclb
push
cmp
outsb
ror
jle
sub
dec
jmp
xchg
jmp
or
jg
fcmovne
sbb
push
fsub
loope
adc
sbb
sbb
jl
inc
jle
add
push
ret
popf
xchg
jp
gs
mov
add
jg
shl
cltd
inc
push
add
sbb
fst
popa
adc
popf
fcomp
inc
test
and
push
push
jp
in
les
dec
imul
js
xchg
loope
dec
cld
inc
enter
dec
dec
xchg
cmp
mov
test
pop
and
fistps
add
ss
cmp
fcmovnb
les
imul
dec
mov
xchg
jg
fcomps
les
pop
dec
sarl
cmpl
rcl
insb
xor
mov
test
dec
or
clc
xchg
pop
int3
sbbb
je
jmp
xor
fwait
loope
dec
fsub
cs
fsts
sti
or
bound
pushl
daa
lcall
dec
push
insl
or
pop
js
mov
sahf
cmp
call
ljmp
xchg
arpl
push
sbb
mov
sub
pop
or
cli
mov
test
js
mov
lcall
mov
xor
pop
add
add
mov
loop
dec
pushf
xchg
xlat
enter
xchg
mov
leave
lods
jge
fstpt
add
jge
ja
mov
add
or
ds
stos
fwait
cmpsl
lahf
addl
adc
cwtl
insb
or
push
add
jb
sahf
sbb
jbe
leave
xchg
cwtl
inc
xor
enter
xchg
add
mov
jle
mov
cs
mov
out
fmuls
aam
mov
add
fnstcw
jg
inc
mov
ja
pop
sub
add
mov
mov
into
cmp
lea
dec
cltd
sbb
lret
mov
movsb
fldcw
mov
jno
pop
sbb
lret
stc
mov
dec
inc
in
ret
cmpsb
push
jnp
mov
loop
pop
cmp
pop
roll
sbbb
jbe
adc
aam
insb
xchg
std
rcrb
jg
fwait
xor
insl
icebp
movsb
aad
push
xor
inc
shll
and
and
and
push
sub
lods
cmp
inc
mov
mov
mov
lret
add
cmpl
std
xchg
pushf
aad
pushf
aaa
cmp
pop
sub
jb
cmpsb
bound
addr16
shlb
cmp
jg
mov
pop
ret
mov
xor
mov
cwtl
enter
xchg
mov
cmp
pop
push
pop
xchg
pushf
mov
and
mov
add
add
daa
enter
xchg
sub
mov
scas
jg
repz
outsb
xor
jmp
je,pt
fst
ret
dec
jge
and
cmpsl
xor
pop
push
arpl
bound
sbb
jl
repnz
repnz
icebp
and
cwtl
fcompl
lea
repnz
aas
fildll
jno
ss
push
mov
mov
add
ds
fldenv
push
jge
cmp
jp
sub
popf
push
sahf
cmp
jle
inc
inc
es
add
cwtl
cmc
xlat
iret
test
xchg
in
dec
decl
adc
sbb
jb
daa
xlat
add
iret
sub
fnclex
mov
xor
cmp
push
pop
ret
scas
adc
and
sahf
mov
pop
dec
frstor
adc
sbb
lds
fcoml
cmp
mov
sarb
cmp
pop
pusha
addr16
xchg
lret
sbb
jecxz
add
popa
xorb
jp
dec
mov
sub
fdivrs
xchg
lock
sbbb
lret
and
nop
fbld
clc
mov
fsubr
rclb
xchg
and
jecxz
jno
out
xchg
dec
repnz
mov
lods
ds
push
xchg
cmp
push
jecxz
arpl
addr16
cmp
xchg
mov
mov
xor
sbb
jle
fistpl
fidivrl
pushf
mov
mov
xor
popf
jp
xlat
in
mov
inc
aas
xor
sub
fdivs
jg
fsubs
xchg
pop
jmp
and
cmp
jle
push
int3
mov
jae
mov
mov
sub
ljmp
jg
add
loope
cmp
inc
icebp
jl
jb
stos
test
push
sbb
nop
pop
js
jnp
xchg
test
cltd
shlb
repz
stc
mov
into
test
stos
lahf
cmpsl
mov
jno
adc
imul
jle
xor
call
lret
xchg
jl
push
dec
xchg
dec
lods
js
mov
xchg
jl
xlat
pop
mov
sti
rcrb
lcall
call
mov
mov
ret
pop
inc
xchg
add
sub
icebp
pushf
fstpl
mov
idivl
cli
mov
sbb
mov
cmp
sar
cmp
aaa
mov
pusha
fwait
repnz
lret
cmpsl
fidivrl
xor
jnp
xchg
cmp
jo
addr16
mov
xchg
jno
or
xor
stos
movsl
push
jns
pop
out
sub
pop
sub
int
pop
jge
cmp
cs
pop
sub
adc
jb
mov
aam
cmp
inc
insb
ss
pushf
inc
cmpsb
and
je
xor
fsubrs
fcomp
adc
push
mov
cmp
pop
dec
aas
push
xchg
pushf
mov
push
lods
jbe
sahf
mov
jo
xchg
repz
pop
insb
push
addr16
out
ret
ljmp
fistpll
and
jmp
inc
mov
lret
scas
mov
xor
mov
mov
jmp
addb
sbb
push
sbb
ds
es
je
xchg
mov
ficomps
xchg
push
gs
idivb
add
test
add
loope
iret
stos
lret
sub
adc
pop
insb
xor
jbe
pop
cwtl
lods
and
sbb
and
lods
add
pop
pop
stos
insl
fidivrs
fwait
inc
inc
pushf
imul
addl
sub
jbe
cs
lock
out
js
mov
jl
js
int3
dec
test
loope
mov
sbb
scas
cmp
adc
scas
pop
movsb
int3
pop
xor
pop
add
jb
push
jns
iret
insl
fidivs
dec
mov
or
fs
xchg
insl
or
sbb
shrb
cmc
mov
mov
jbe,pt
cmpsb
sbb
xor
decl
data16
fldt
shrb
fsubrs
mov
and
push
mov
adc
xchg
mov
test
pop
call
mov
add
test
and
cmp
mov
adc
lret
js
add
fwait
movsb
pop
std
mov
xchg
aas
fisubl
jle
pop
sahf
sti
push
jae
add
cwtl
push
mov
cwtl
fwait
sub
jno
or
cmp
mov
mov
sbb
jmp
test
pop
inc
jge
cli
clc
sub
cs
inc
aam
fsubl
dec
stos
push
pop
pop
aas
aad
pop
cmp
addr16
mov
mov
cli
mov
sub
or
jo
loop
adc
out
ljmp
lods
dec
sub
rolb
mov
inc
sub
sub
in
lds
out
sbb
jecxz
or
out
cwtl
dec
lea
xor
mov
mov
inc
lret
negl
mov
mov
repnz
adc
iret
ljmp
cmpsl
mov
cmp
sub
adc
mov
and
dec
mov
mov
sub
add
cld
cmp
fucomi
xchg
and
cmpsl
imul
jle
aad
outsb
adc
mov
dec
cmp
add
nop
mov
mov
xor
aaa
add
lahf
imulb
out
sbb
lods
jb
cwtl
es
mov
xchg
pop
out
mov
cli
call
pusha
mov
lret
xchg
mov
cmp
pop
out
sub
aad
ja
call
arpl
in
jge
insb
sub
xchg
fsubl
in
or
lret
fimuls
ja
sbb
or
sub
and
out
or
cmp
gs
fldenv
repnz
fidivrl
lock
fwait
scas
pop
add
inc
mov
shl
scas
aam
push
pop
sbb
or
das
repz
push
in
jae
lcall
pop
nop
jmp
xor
mov
sub
mov
fistpll
cmpsl
sbb
lret
xor
mov
cmp
sti
pop
in
imul
jmp
sbb
adcb
sti
lods
add
cmp
out
fistpll
lret
mulb
mov
xchg
imul
popa
sahf
jae
cmp
gs
fcomps
pop
mov
jle
sub
mov
jg
ret
mov
xor
cmp
jp
and
push
xor
sti
cli
or
data16
lret
fstps
mov
jl
sub
jle
xor
ret
lcall
pop
cwtl
lock
enter
decl
aas
push
sti
pop
xchg
fldcw
pop
fs
dec
xchg
mov
xchg
xchg
cmp
pushl
mov
add
mov
xchg
mov
xchg
and
xchg
repz
cmpsl
jns
cld
ja
in
pushf
or
sub
decl
sbb
jle
cmp
ds
adc
fsts
add
adc
mov
ljmp
mov
mov
fcmovbe
cmp
scas
ljmp
cmp
fstpt
jno
int3
push
bnd
ds
jae
sahf
lcall
shufps
push
imul
cwtl
mov
cmp
add
mov
push
stos
sbb
jle
pop
mov
add
ss
xlat
divb
lahf
shld
rorl
add
lds
test
aas
jg
lods
sub
pop
inc
xor
push
aas
jmp
loopne
sub
pop
in
jge
pop
sbb
aad
in
leave
stos
dec
icebp
cltd
popa
nop
sti
pop
sub
sahf
aad
xor
daa
dec
cmp
jl
jle
push
stos
movsl
inc
push
sbb
aam
sahf
mov
push
scas
lods
pop
xchg
pop
rcll
ficomps
nop
filds
pop
push
cwtl
push
fbld
cmp
pop
inc
mov
cli
popa
or
pop
adc
mov
push
dec
jmp
sub
mov
and
decl
das
pop
add
mov
and
jle
jg
mov
sbb
jne
pop
leave
xor
adc
mov
ret
mov
cwtl
xchg
inc
rcrl
dec
aaa
fnsave
fstpl
out
jnp
fisubs
xlat
sub
fwait
jle
out
fadds
bound
adc
fsubp
testb
scas
push
das
push
outsb
mov
mov
mov
ret
push
cmp
scas
ss
addr16
and
xchg
sbb
sbb
dec
xor
adc
inc
push
xchg
inc
fistpll
xlat
mov
iret
movsb
sti
adc
push
out
cmp
push
lret
inc
ja
scas
idivl
lds
lods
sbb
fsubs
cli
push
pop
jne
jne
fistps
cmp
jnp
shlb
test
ret
out
and
inc
adc
and
scas
std
jl
sub
pop
pushf
adc
fnstsw
jne
imul
enter
in
sbb
or
push
or
mov
lock
jbe
mov
mov
dec
lret
jge
push
arpl
jnp
push
mov
int3
sub
cwtl
cmp
cs
mov
mov
cwtl
cmp
scas
fnstcw
imul
inc
pop
cli
pop
cmp
push
daa
pushf
test
mov
inc
mov
ret
inc
mov
cmp
out
daa
push
adc
adcl
and
adc
std
cmp
or
xchg
add
mov
daa
add
adc
test
pop
popa
dec
lods
cli
or
aad
lret
sarl
leave
mov
mov
xor
out
ficomps
push
pmulhuw
ret
dec
sbb
ret
and
imul
das
jb
pop
in
cmp
int
jg
fisubrs
cmp
adc
push
dec
sbb
fcoml
and
sub
inc
fistpll
xor
and
and
add
mov
fdivl
jne
jno
xchg
add
subb
movsl
out
xor
jae
jbe
mov
loop
fstpl
adc
cli
fsub
scas
cmp
jl
mov
pop
int
lret
mov
int
mov
mov
cmc
pop
pop
pop
aam
xor
adc
bound
out
cld
mov
cmc
nop
mov
sahf
mov
sbb
mov
jle
cld
fimuls
in
mov
sbb
cmp
add
ret
int
out
in
xchg
lret
test
fsubs
jbe
mov
scas
incb
out
jge
xchg
fdivs
mov
push
fcmovnbe
fistl
jge
jne
mov
xchg
outsb
in
fdivrs
inc
enter
jno
mov
cld
and
sbb
lret
mov
fcompl
push
jp
xchg
add
je
loopne
mov
push
loope
or
lods
aas
test
filds
sbbb
adc
dec
iret
shl
cli
inc
sbb
imul
cwtl
loopne
mov
sub
pop
jae
pop
fsubrl
mov
push
xchg
pop
fbld
adc
push
jno
es
cmp
jg
jmp
inc
pop
mov
mov
sub
jns
xor
leave
xchg
js
jp
fwait
pop
push
lds
andl
jns
out
mov
pop
mov
arpl
jb
sbb
out
cmp
xor
loopne
in
int3
jno
incl
in
or
test
sbb
xor
test
jge
mov
les
jg
lods
div
decl
xor
test
test
lods
out
dec
cld
sub
sbb
xchg
push
arpl
in
bound
shll
mov
xchg
mov
push
popa
pop
xchg
or
aad
fcoms
jb
std
sbb
lret
mov
lcall
int3
mov
push
push
push
pop
adc
jbe
rcl
inc
insl
je
loopne
fisttpll
addr16
mov
lret
loope
adc
mull
sbb
mov
jnp
into
movsb
fimuls
in
daa
cmpb
enter
and
mov
int3
mov
mov
adc
paddsb
fdivr
dec
xchg
mov
push
filds
cmpl
push
js
nop
int3
xchg
addl
fldl
arpl
out
lods
movsb
lahf
les
adc
sbb
add
and
pop
cld
xor
sbb
ret
push
shrl
xlat
dec
scas
lahf
sub
mov
lcall
das
cltd
sub
jp
pop
popf
xchg
mov
sbb
daa
xor
inc
fwait
push
inc
lcall
or
cmp
cld
inc
or
sbb
jbe
sti
xchg
imul
mov
mov
jnp
outsl
cmpsb
test
sub
dec
jecxz
shl
icebp
aas
pop
mov
or
test
test
dec
jns
pop
xor
stc
xchg
jns
pop
pop
fcomi
mov
in
aas
push
mov
or
push
test
xor
mov
repz
mov
lods
lret
lds
mov
js
insl
repz
pop
addr16
test
mov
fcoms
mov
shl
cld
lods
adc
push
addr16
int
loope
mov
call
popf
xchg
mov
xchg
lret
cmp
cmc
repz
out
mov
cs
std
add
push
stc
and
out
adc
pop
repnz
cltd
jo
jg
mov
test
incl
das
ljmp
stos
sarl
add
lcall
popa
nop
mov
lret
xchg
aas
xchg
int3
into
imul
dec
mov
mov
jnp
mov
out
push
jle
push
out
or
xchg
jnp
lods
dec
lock
adc
cld
rolb
cld
test
scas
imul
pop
xor
jp
xchg
fdivl
or
cmc
xor
pop
cmpsl
decl
dec
movsl
mov
fs
ret
sbb
sti
outsb
outsb
rolb
scas
mov
and
mov
imul
or
push
loop
jnp
popa
pop
mov
xchg
inc
jmp
mov
mov
cltd
fsubrs
test
rorl
stos
pop
iret
popa
sub
loop
push
sahf
call
aas
sbb
adc
and
adc
aad
xchg
call
pop
mull
sti
shlb
stos
push
sbb
dec
inc
sub
pop
or
sbb
hlt
xor
call
xchg
or
cmc
enter
cli
dec
out
jno
or
fcomps
mov
push
cmp
push
das
jno
mov
mov
test
push
mov
pop
pop
add
xchg
pop
jge
fadds
jp
lret
jp
sbb
fildl
lahf
repz
in
pushl
pop
jg
dec
scas
add
adc
call
xor
cmp
repnz
sbb
or
pop
mov
add
sbb
cmpsb
pop
stos
dec
sti
fisubl
push
cmp
cmp
movsb
xchg
push
mov
lea
mov
sbb
ret
pop
mov
cltd
sti
sbb
outsl
sahf
pop
rolb
fcoml
xchg
jo
js
rep
or
jp
int
mov
mov
jmp
loope
incb
inc
lods
sar
cwtl
es
and
cmp
push
and
dec
mov
mov
stc
js
aas
xchg
enter
ds
hlt
fstpl
dec
mov
mov
lods
xrelease
push
jecxz
push
hlt
mov
lahf
fisubrl
ret
or
bound
out
xchg
clc
add
mov
and
stc
pop
mov
pop
jle
mov
cwtl
cmpsb
cmpsl
cmp
movsl
pop
adc
sub
mov
mov
pop
aam
std
add
in
sub
in
mov
in
inc
add
mov
lret
mov
adc
xchg
xor
test
in
jmp
lods
cmp
aad
add
jl
cltd
test
jmp
push
icebp
leave
outsl
fsub
in
pop
mov
mov
in
xchg
jnp
sbb
stc
dec
jmp
dec
push
stos
leave
fistl
jl
sbb
pop
cmp
negb
cmp
ret
sarl
sub
cmp
sub
mov
or
jae
adc
insl
cld
and
mov
sub
xchg
sbb
push
fdivr
enter
int3
sbb
jl
pop
sarb
fcomps
cltd
jecxz
pop
xor
arpl
xlat
rcr
fadds
cmc
ret
mov
dec
mov
movsl
aas
testl
jl
cmp
outsb
aaa
mov
lret
jmp
xchg
sub
mov
frstor
aas
aaa
std
or
test
jge
cmpsb
xlat
mov
test
push
push
into
rcr
movsb
sub
fnsave
fsubl
sub
dec
sub
cmp
or
in
dec
sbb
int
mov
popa
call
fadds
movsl
pushf
andl
xchg
scas
pop
testb
cwtl
cwtl
les
jns
les
lcall
sbb
negb
dec
or
test
jle
cmp
mov
movsl
push
inc
and
mov
inc
cmp
lea
fs
add
aam
fwait
mov
popf
dec
push
sbb
cmp
dec
nop
or
pushl
popa
mov
cmp
jmp
into
sub
sbb
mov
cmp
and
xor
pop
lret
adc
lods
sti
add
aad
lea
mov
cwtl
popf
jno
pop
pop
jb
cs
adc
std
cli
pushf
cmp
push
xchg
fsubrl
lret
js
int3
out
sub
in
enter
mov
mov
lods
or
js
cltd
hlt
clc
sahf
aas
and
loopne
jmp
xchg
or
out
mov
mov
pop
push
std
sub
jnp
stos
add
jp
fdivrl
test
dec
in
sbbl
fdivp
in
push
mov
sbbl
jns
jmp
xchg
aas
test
and
fwait
popa
mov
pop
push
adc
nop
cmpsb
sbb
xchg
push
xchg
aas
mov
inc
jae
xchg
je
sbb
xor
cmp
mov
adc
in
pop
mov
mov
stos
cmpsl
lahf
inc
stos
fistpll
mov
pop
xchg
xor
adcl
cld
test
xor
mov
mov
enter
bound
mov
cmpsl
mov
or
adc
popa
mov
jo
ds
imul
sbb
mov
inc
icebp
sbb
adc
sbbl
and
cmpb
sub
dec
sahf
mov
and
cmp
lcall
pop
mov
dec
imul
enter
pop
mov
mov
dec
imul
pop
movsb
cmp
sbb
test
mov
push
outsb
pop
nop
mov
std
test
xlat
in
cli
enter
outsb
dec
mov
icebp
outsb
xchg
pop
arpl
popf
mov
les
inc
push
ds
js
loope
xchg
jnp
sub
int
test
pop
sub
je
sbb
and
pop
fwait
mov
stos
movsl
cmp
jge
clc
pop
push
pushf
scas
xor
inc
dec
arpl
ja
push
lea
dec
and
xchg
out
aas
lock
mov
jle
inc
and
aaa
mov
sub
movsb
mov
pop
fstps
rcl
cmpl
sub
mov
ds
fiaddl
lahf
and
xor
out
adc
jne
lds
je
imul
sar
mov
pop
cld
mov
lods
clc
fs
int
mov
ss
cmpsl
jns
cmp
and
jg
and
je
xor
xor
arpl
cmp
insb
push
lahf
mov
mov
cmpl
pop
repz
pop
arpl
pop
out
xor
mov
push
aaa
pusha
push
dec
push
mov
mov
and
sbb
mov
div
cli
pop
fadd
mov
xchg
pop
int3
cli
insl
mov
lret
imul
adc
pusha
movsb
andw
pop
fmull
xor
popa
in
pop
iret
jp
jecxz
or
adc
cwtl
push
jg
lahf
fmul
jbe
inc
data16
aad
iret
mov
test
loope
movntps
enter
repnz
in
and
out
daa
ss
dec
cltd
add
xchg
fdiv
add
faddl
ret
push
jb
pop
cwtl
jp
icebp
loope
cwtl
mov
xchg
jae
sub
push
fdivrs
ret
cmpsl
cmp
cld
adc
inc
mov
push
adc
daa
xor
or
lahf
add
sbb
mov
mov
push
mov
mov
sti
mov
out
mov
cmp
leave
int
jo
ds
fdivs
subl
push
enter
cmp
pop
shr
outsb
and
or
cmp
dec
iret
mov
daa
dec
jmp
cwtl
popa
and
pop
sbb
cmpl
jnp
insb
ret
dec
aaa
pop
loopne
dec
pop
push
pop
cmp
out
loopne
daa
divl
lods
cmp
rclb
fwait
pop
fdivp
sub
mov
mov
sbb
ror
xchg
jae
mov
and
out
enter
add
je
in
cli
and
xchg
cmp
ds
out
sub
push
mov
cmp
inc
push
fisttpl
mov
lds
inc
xchg
or
dec
mov
stos
in
fnstcw
in
aaa
out
mov
mov
cli
xor
sarb
or
cwtl
sti
pop
pop
pop
leave
sbb
scas
sub
or
mov
add
pop
add
cmp
fcoml
pop
mov
dec
sbb
xor
test
lea
ror
xor
stos
mov
filds
cmp
outsb
mov
mov
or
or
jecxz
int
insl
cmp
cmpsb
cmpsb
je
pushf
dec
jns
sub
dec
push
sti
lods
lock
dec
ret
addl
cmp
xor
sub
das
lcall
ljmp
and
mov
dec
call
orl
fcompl
mov
mov
push
shrl
fisttpl
lcall
aas
fldcw
mov
subb
scas
movl
xchg
add
sbb
out
xchg
shl
xor
xchg
clc
cmovp
fimull
push
aas
lret
push
loopne
pop
and
sbb
pop
mov
mov
negl
xchg
dec
xor
adc
mov
mov
popa
daa
stos
mov
cwtl
mov
adc
pop
loopne
cmp
scas
pop
cltd
mov
stos
roll
arpl
mov
push
mov
fdivr
loope
je
jb
lods
adc
push
sbb
or
push
rcll
test
jmp
hlt
test
cmp
test
mov
div
in
xor
pop
push
jg
mov
popf
pop
or
xchg
in
dec
lods
pop
je
icebp
pop
loop
mov
ja
xchg
test
cwtl
imul
push
pop
sub
adc
jns
out
in
dec
pop
lea
lods
fcmovbe
aam
cwtl
aas
inc
xchg
insl
xor
add
cmp
sub
jb
out
jl
fadds
sahf
push
jns
repz
mov
fldenv
test
popa
push
xchg
jnp
xor
pop
scas
iret
sahf
lcall
xor
jmp
inc
sbb
sub
push
jecxz
mov
push
pop
and
sti
adc
pop
repz
imulb
or
popf
push
mov
sub
lods
xor
mov
push
pop
pushf
push
ja
movsl
jae
dec
pushf
dec
fcmove
iret
mov
cmp
sti
das
sbb
loop
cli
shll
movsl
jle
hlt
dec
inc
ja
xchg
add
jg
or
in
mov
movsb
cmc
ljmp
mov
out
test
shrl
bound
imul
xchg
mov
scas
adc
mov
sub
movsl
cmp
movsb
cmp
cmpsb
inc
scas
inc
xor
mov
pushf
sbb
rcr
pop
sub
cld
or
je
test
mov
or
aas
in
pop
sub
mov
clc
jg
lods
pushf
inc
lea
mov
mov
inc
mov
mov
ss
stos
dec
or
stc
cwtl
fsubrl
movb
pop
test
jg
mov
add
aaa
and
mov
lahf
pop
js
adc
subl
test
fdivs
xor
out
mov
loop
lret
addr16
ljmp
and
adc
add
iret
cmp
jmp
ja
sbbb
inc
inc
pushf
lcall
dec
mov
andb
pushf
jnp
shlb
inc
btsl
filds
and
mov
xchg
fisttpl
cli
dec
mov
xor
cwtl
in
inc
sub
sub
mov
or
cwtl
pop
std
sub
jle
stc
dec
mov
mov
pop
mov
sbb
sti
cs
je
lods
fadd
cltd
out
out
or
mov
cld
xor
insb
lods
inc
outsb
sub
ret
push
pop
out
mov
jae
iret
incl
ja
mov
arpl
stos
jb
bound
fchs
cmp
aas
sub
adc
syscall
cwtl
mov
cs
cmp
faddp
popf
xchg
std
cwtl
fdivr
mov
imul
sbb
test
sbb
scas
push
stc
cmp
or
xor
lret
xor
into
nop
mov
bswap
sub
aas
jp
outsb
mov
popa
inc
cltd
lahf
and
mov
inc
pop
cmc
repz
add
ds
lahf
cwtl
mov
or
dec
decl
cmpsb
pop
stos
mov
addb
xchg
sti
stos
pop
mov
test
sub
lcall
cmp
das
dec
xchg
pop
addr16
ffree
cmpsb
cmp
stos
scas
xor
jb
push
xor
pop
add
call
les
mov
rcrb
mov
cwtl
sahf
stos
sbb
and
cmc
dec
sbb
stc
sbb
and
lret
jge
in
fcom
xor
stc
push
sbb
je
imul
mov
jp
inc
jno
xchg
clc
mov
je
cltd
fsubrs
enter
mov
adc
jmp
sahf
andl
mov
mov
jp
sbb
sbb
cmpsl
mov
dec
sub
pop
jg
mov
push
mov
jecxz
cwtl
popa
dec
je
sbb
ret
aad
inc
into
test
sub
mov
add
aas
aad
mov
inc
xor
mov
hlt
inc
shlb
fdivs
in
pop
pop
push
add
lahf
inc
loope
mov
mov
cmp
push
lcall
movsl
pop
xchg
sbb
mov
aas
dec
das
ret
mov
inc
out
pop
addr16
out
or
cmp
mov
clc
in
adcb
xchg
cli
jp
sub
pop
or
cmp
int
xlat
stos
mov
push
cmc
sbb
xchg
pop
sti
inc
ss
mov
dec
dec
sbbl
daa
pop
cs
mov
mov
add
and
lcall
pop
cmp
cmp
das
lea
sbb
push
nop
pusha
and
pop
shlb
add
sbb
xchg
test
push
pusha
movsl
mov
mov
sub
cmpsb
popf
xor
repnz
fldl
cmpsl
ja
mov
dec
ds
into
movsl
pusha
stos
cmp
lods
call
push
outsb
pushf
mov
cwtl
out
aaa
mov
pop
mov
rcrb
pop
popa
jnp
lret
dec
xor
pop
and
mov
xor
add
pushf
or
and
test
sub
dec
jo
mov
mov
leave
cmpsl
sbb
and
pop
push
pop
push
insl
xchg
lahf
mov
push
aaa
sahf
sbb
icebp
fadds
ja
mov
rcrl
lahf
in
inc
in
das
rcr
mov
je
les
repnz
out
inc
test
out
pushf
das
mov
pop
sahf
jmp
pop
mov
cmp
mov
jnp
or
rcrl
mov
ja
pop
mov
and
push
iret
pop
xchg
dec
xor
cmp
sahf
cmp
cwtl
gs
and
mov
or
lock
sub
int3
mov
insb
cs
repz
es
andl
cmp
loope
cmp
inc
enter
pop
insb
lret
in
push
pop
ret
mull
sub
ficoms
frstor
test
dec
xchg
cmp
lret
pop
popa
jl
sbb
aad
sbb
pusha
cmp
incl
mov
cld
xor
cld
xchg
stos
cmp
fs
dec
inc
pop
out
fistpl
cmp
xchg
adc
in
unpckhps
xchg
mov
mov
lret
popa
push
push
jg
push
mov
xor
and
js
mov
lea
xchg
stc
xchg
and
push
out
push
faddp
out
flds
mov
cmpsb
adc
repnz
mov
ss
dec
mov
imul
push
add
dec
sbb
xchg
sti
dec
inc
leave
lahf
insl
scas
es
int
into
lcall
out
ret
icebp
and
cwtl
sbb
cmpsb
repz
lea
clc
sahf
jnp
push
stos
adc
test
mov
aas
call
gs
add
xchg
cmp
fsubrl
cmp
insl
xor
orb
add
lret
pop
pop
fcmovbe
pop
xchg
mov
inc
xchg
sti
sub
jl
test
mov
sar
or
pop
jl
mov
decl
xorl
add
sbbb
sbb
sbb
xchg
in
arpl
push
pusha
jo
jo
mov
xchg
pop
xchg
mov
stos
scas
pop
rorb
adc
sbb
lods
cmpsb
into
lcall
insb
inc
mov
mov
jmp
dec
repnz
stos
test
mov
in
popl
sbbl
aas
in
movsb
fcmovnb
mov
aam
push
dec
push
mov
idivl
jae
push
mov
or
xor
test
or
xchg
cld
enter
cld
fdivr
loope
sub
mov
fnstcw
loopne
dec
lods
mov
ss
dec
repz
mov
out
adc
repnz
cmp
mov
sbb
mov
gs
pop
push
call
stc
shll
cmp
or
out
andl
mov
test
mov
sti
and
push
popa
fstpt
inc
sub
ret
ret
xlat
xchg
xor
dec
repnz
dec
dec
dec
mov
add
pop
xchg
cmpl
push
loope
cmp
outsb
sbbb
pop
mov
imul
cwtl
loop
cmc
sub
mov
enter
sar
jl
pushf
dec
gs
pop
je
adc
aad
clc
mov
mov
daa
fwait
in
xchg
pop
lds
xorb
fldl
mov
in
mov
out
ja
fbld
jnp
dec
imul
mov
daa
push
addr16
pop
adc
jns
jno
xchg
aaa
out
pop
pop
mov
cmpsl
or
fsubp
push
sbb
lcall
jp
cmc
cmpsb
cwtl
mov
or
aam
pop
sbb
pop
shrl
sti
push
and
int3
xchg
lcall
sbb
mov
xchg
mov
imul
fcoms
aam
test
sub
sub
jl
xchg
pop
push
testb
push
shrl
inc
cmp
lods
incl
fnop
xor
lock
mov
cmp
jle
xchg
cwtl
xor
jle
jl
push
mov
arpl
jecxz
push
mov
lock
sub
lock
shrb
rcr
shlb
jae
pop
mov
sbb
mov
fs
pushf
sub
loopne
cmp
xchg
xchg
sbb
add
pop
in
or
and
pop
and
pop
pop
pushf
sbb
cs
pop
mov
sbb
sbb
rcrb
inc
jmp
lea
mov
adc
sti
push
out
sbb
mov
fcomps
movsb
add
rcr
sbb
cwtl
mov
jle
xlat
test
pushf
xchg
scas
dec
stos
cmp
add
aad
jge
add
lds
pop
lds
mov
in
pushf
and
mov
cld
ja
mov
adc
xchg
xor
mov
inc
jg
je
aad
mov
sbb
fisubs
xchg
aas
cmp
mov
add
dec
xchg
jg
pop
pop
loope
std
inc
sub
jno
pop
lods
jne
adc
xchg
aas
clc
pop
jae
shrl
mov
xlat
add
push
fcoml
cmp
test
jne
xor
outsb
in
push
insb
cmp
mov
xorl
fsubr
outsb
repnz
and
sahf
lahf
mov
jge
xchg
cmp
orl
in
mov
mov
cwtl
sbb
cmp
sbb
pop
leave
pushf
jno
cmp
mov
int3
mov
push
push
mov
xor
test
fwait
pop
ret
imul
lds
mov
ret
pop
pusha
test
pop
aam
fistpll
jp
xchg
and
cmp
inc
or
jg
sahf
xchg
jae
xchg
scas
lahf
pop
repz
aas
mov
xchg
aam
bound
leave
cmpsb
inc
xchg
mov
cmp
jbe
jp
outsl
cli
push
jle
jle
jecxz
mov
or
ljmp
scas
call
sti
pop
pop
lock
dec
mov
clc
pop
pop
push
mov
pop
cmpl
xor
call
lahf
pop
and
pop
fidivrl
das
push
xchg
xor
or
in
push
sarl
push
push
gs
je
pushf
mov
cmp
xchg
cmp
sbb
mov
sub
jno
rorl
fdivrp
cwtl
push
fwait
das
pop
pusha
add
and
inc
add
or
mov
xchg
dec
ret
push
insl
sbb
je
sub
decl
addb
je
pop
ds
cmp
add
xchg
push
mov
sbb
test
pushf
pop
push
movsl
cmp
test
cmp
add
mov
jge
out
jg
sbb
jl
cmp
pushf
cmp
cmp
mov
inc
enter
mov
fdivrl
aad
pop
jge
cltd
scas
sti
pusha
or
push
scas
cld
sub
cltd
push
ljmp
mov
or
popa
xchg
test
je
sarl
xchg
pop
sbb
and
adc
ja
push
shrb
dec
xchg
es
add
mov
data16
mov
mov
pop
mov
sarl
outsb
hlt
sbb
lcall
testl
popa
cs
jmp
sbb
add
stc
mov
jmp
rcrl
adcl
faddl
sbb
mov
mov
dec
arpl
arpl
sub
inc
decl
and
pushf
test
lret
push
je,pt
or
and
cli
sbb
dec
mov
jbe
xchg
jle
sbb
bound
sbb
or
pop
xchg
daa
inc
pop
div
daa
or
stc
cmp
imul
in
and
mov
adc
fcomps
fldl
push
mov
jl
or
addb
ds
stc
mov
pusha
mov
imul
cmp
je
mov
fsubl
lods
out
lahf
sub
pushl
decl
repz
je
nop
adc
pop
icebp
add
mov
push
mov
clc
mov
leave
lods
cmpsb
adc
xchg
lcall
jg
mov
mov
call
sbb
jl
sbb
loope
mov
sbb
test
and
ljmp
pop
and
mov
enter
test
sub
fadds
jae
cmc
adc
sub
cmc
xchg
mov
les
mov
jae
loop
fdivrs
into
addr16
enter
xchg
cmp
xor
xor
and
je
mov
shl
adc
push
mov
ja
stos
dec
imul
ljmp
mov
aas
imul
mov
pop
adcb
pop
mov
dec
mov
in
push
fwait
sti
into
xchg
and
sti
mov
sub
pop
sbb
in
enter
cmp
leave
pop
dec
xor
lcall
popf
pop
aaa
cli
cld
jle
hlt
jmp
movsb
jl
lods
xchg
jmp
orps
hlt
or
jbe
sbb
adc
sbb
dec
aas
mov
cld
inc
mov
jmp
cld
stos
bound
push
sahf
incl
mov
faddl
jmp
xchg
test
sub
movsb
aas
outsl
add
mov
fdivr
xchg
xor
fwait
cmp
jl
push
jmp
dec
sarb
cwtl
aas
shrb
cmp
push
loop
cmpl
jnp
dec
inc
in
lahf
shll
mov
push
rcr
add
or
jg
adc
mov
mov
mov
ret
and
push
fs
adc
xlat
jle
xor
pop
int
xor
mov
jl
mov
or
jmp
mov
dec
fsubrs
jecxz
pop
inc
hlt
add
fdivrl
mov
repz
in
xor
mov
mov
fisubrl
add
jo
dec
xor
jge
adc
and
lds
loopne
mov
ret
or
mov
jle
je
xchg
iret
pop
in
mov
in
sahf
sbb
jmp
pop
mov
hlt
je
mov
sbb
nop
xchg
scas
clc
push
push
inc
dec
mov
sbbl
lock
pushf
push
sarl
cli
push
or
xor
pop
mov
fsubrl
or
sbb
popf
pop
dec
and
sub
nop
mov
mov
mov
mov
lock
inc
or
repz
sbb
popf
jns
jae
sub
lds
xchg
jnp
sti
sub
sbb
iret
dec
scas
pop
mov
inc
push
aas
cwtl
dec
xchg
push
fnsave
xor
cmpsl
ficoms
fwait
cmpsb
aas
push
loop
lods
jnp
mov
mov
daa
sbb
insl
sbb
out
leave
mov
test
ret
push
mov
loope
mov
dec
jmp
ss
fisttpll
out
test
xchg
fdiv
test
js
jnp
int3
xlat
push
lods
outsl
mov
fstpt
sbb
cmc
movsb
pushf
scas
lret
pusha
mov
les
ret
enter
inc
out
pop
jp
rcrl
clc
xchg
lret
pop
mov
adc
cld
in
mov
test
dec
cltd
jg
lcall
mov
sub
sbb
sti
sub
std
cmp
lcall
cs
ja
adc
adc
rorl
xchg
push
mov
cmp
ja
xor
movsb
aad
xchg
cmp
pushf
sti
cs
std
push
push
fdivl
sub
mov
lea
and
insb
or
lock
pushf
sti
mov
test
jo
popf
lret
pop
jle
lea
lret
pushf
leave
or
cwtl
xchg
xor
std
cmp
jbe
sbb
xorl
mov
cmp
inc
mov
mov
cli
jo
adc
mov
jl
sub
push
lds
sbb
jle
repz
sbb
fdivl
cmp
mov
jmp
mov
test
add
ljmp
sbb
and
mov
or
orb
stos
sbb
sbb
sbb
cmp
jle
imul
mov
sbb
in
das
fcomip
sarl
push
stc
mov
inc
dec
pop
mov
movsl
js
push
loop
xchg
cmp
lret
rcl
mov
mov
ds
nop
icebp
fcoms
or
inc
mov
sub
leave
inc
cmp
or
outsl
into
test
push
fbld
stos
std
push
data16
imul
jns
jecxz
jb
ja
push
cli
mov
cmp
mov
ret
xor
fwait
adc
mov
ss
cmpl
push
in
pop
testl
sbb
jae
mov
filds
dec
inc
test
jge
aaa
add
jne
inc
aam
push
mov
data16
aaa
loopne
leave
scas
lds
daa
push
les
jno
mov
lea
aam
mov
xor
lahf
mov
xor
aaa
imul
sub
stos
xchg
rcr
icebp
xchg
pop
sub
inc
neg
clc
mov
out
cmp
fcompl
nop
mov
inc
sbb
in
nop
mov
xor
sub
cld
repz
mov
sbb
cli
movsb
cwtl
or
push
es
jnp
dec
pusha
sti
xchg
lahf
xchg
icebp
xchg
fcomi
imul
sahf
xchg
fdivrs
xor
bound
push
cli
jp
sahf
jo
and
pop
or
jae
mov
pop
sbb
loope
jecxz
mov
xor
aas
adc
pushf
mov
es
call
xor
jge
invd
add
jg
sbb
adc
mov
mov
and
inc
pusha
push
ds
push
or
popa
pop
movsb
pop
adc
pop
test
mov
test
push
subb
fsubrs
enter
jmp
outsl
sbb
add
lea
xchg
cwtl
iret
jle
mov
imul
jo
ss
ret
cli
js
shlb
pushf
mov
mov
lret
push
cmpsb
dec
mov
pop
jle
shlb
jne
or
mov
push
iret
mov
pop
cmp
inc
cs
push
adc
and
gs
popa
and
sti
cmp
add
adc
pop
inc
mov
fdivrl
cmp
lds
out
cmc
xchg
dec
xor
mov
in
fcoml
loope
sub
addl
mov
leave
push
sbb
into
das
out
mov
mov
sti
cli
mov
xor
pop
push
xor
jg
and
xchg
inc
mov
cli
and
mov
mov
sbb
sti
aad
ja
or
mov
into
jmp
mov
je
pop
out
cmp
sahf
mov
enter
cmp
out
or
and
sbb
fistpl
push
sbb
jne
add
into
xchg
les
inc
push
pushf
scas
and
pop
loop
scas
test
or
lret
mov
mov
test
inc
loopne
test
inc
test
leave
adc
out
jns
fisubs
loope
ret
or
test
fisttpl
pusha
pop
out
mov
fdivrp
push
pop
mov
jae
lret
mov
mov
scas
mov
adc
jo
ret
cmpb
sbb
or
push
adc
jae
dec
pop
decb
jl
lcall
pop
sbb
ss
out
aas
xchg
fdivrp
inc
cmp
and
daa
push
notb
outsl
pop
push
push
jnp
cmp
jmp
int3
cmp
stos
pop
and
mov
fs
xchg
jp
fwait
jmp
or
fsubrl
sbb
and
pop
mov
push
enter
add
movsb
mov
lea
nop
sti
mov
loope
dec
push
xchg
jae
cmp
xchg
xchg
jo
pop
inc
out
aas
and
xchg
adc
fdivrp
jo
mov
scas
sub
mov
adcb
pop
inc
in
lods
sbb
out
fwait
mov
int
fnsave
gs
test
pop
pop
mov
push
lock
fisttps
jmp
dec
icebp
aaa
imul
lcall
dec
xor
pop
inc
repz
pushf
movsl
sbb
push
ljmp
repz
mov
mov
inc
push
incb
imul
cmpsl
ds
movsl
jnp
enter
xchg
jge
mov
adc
out
pop
out
fists
mov
mov
cs
add
imul
mov
out
push
fcmovnb
cli
mov
icebp
dec
jge
jnp
or
test
lea
sbb
dec
ret
into
cld
je
test
fsubl
int
icebp
cmp
pop
aas
pop
sbb
mov
fsubl
push
and
int
je
jns
jg
fwait
sbb
jne
jg
in
bswap
ja
fcoml
or
in
push
fsubl
and
fwait
jle
push
xlat
inc
ljmp
jae
imul
mov
mov
dec
idivl
dec
repnz
pop
clc
scas
sbb
imul
pop
cmp
xor
icebp
aas
scas
jno
or
cli
fmul
in
adc
push
decb
xchg
hlt
aad
mov
lahf
sub
test
mov
movb
leave
in
xchg
retw
in
clc
pop
adc
test
fistpl
les
aas
adc
xor
aaa
sete
cmp
ds
jnp
cld
adc
lret
leave
adc
adc
fcomps
mov
cmpsl
fcompl
fcmovne
scas
test
mov
xchg
dec
nop
dec
add
pop
mov
fiaddl
xor
xchg
cmp
cmp
adc
add
cmpb
cmc
out
sti
cmp
pop
insb
mov
lods
js
test
lahf
aas
pop
outsl
in
mov
stc
popa
leave
aas
cmp
mov
pusha
jnp
sti
mov
sub
cmpsl
loop
cwtl
jno
mov
pushf
or
mov
sbb
push
jp
sbb
data16
sub
cmp
xchg
je
mov
pop
push
mov
orl
sbb
or
mov
and
cltd
cmp
cmpsl
jg
std
cmp
fidivrl
lods
sub
push
incb
add
sti
xchg
test
negl
addr16
daa
pop
scas
pop
inc
adc
mov
mov
jo
sahf
mov
add
push
cwtl
sub
jg
pop
fdivrs
in
mov
and
and
mov
aam
push
sub
les
xchg
mov
mov
fwait
push
mov
mov
negb
mov
cwtl
mov
sbb
xchg
pop
fisubs
mov
push
xchg
xchg
mov
sub
cmp
pop
mov
mov
insl
js
jb
jnp
cmp
es
divb
cld
into
xor
mov
aad
rol
cs
in
sbb
icebp
inc
fistpl
mov
or
loop
xchg
and
adc
cmp
mov
add
dec
cwtl
mov
xlat
xchg
in
push
ja
push
rcrb
cmc
mov
sbb
fisubs
sbb
sahf
out
add
pop
fdivr
mov
mov
cmp
test
loope
in
js
sbb
inc
jge
sbb
add
mov
outsb
mov
adc
decl
stos
mov
int
pushf
sarb
cwtl
jp
subb
cwtl
inc
mov
out
inc
ss
pop
pop
sbb
les
js
shl
push
jg
cmp
sar
cmpsl
mov
sub
or
stc
cmpsl
cltd
rcll
mov
jns
xor
popf
pop
insl
fsubrs
adc
enter
mov
inc
sub
push
cmp
mov
nop
mov
pushf
xor
ljmp
popl
insb
mov
cmp
frstor
jne
mov
xchg
loopne
cld
add
out
pop
fsubrl
push
imul
das
lahf
or
add
data16
pop
int
test
hlt
arpl
cmp
push
mov
mov
and
jne
sbb
insl
jge
arpl
push
icebp
sbb
jno
out
pop
sub
xor
pusha
loop
mov
repnz
and
aas
in
outsb
in
aaa
inc
xchg
call
pop
add
loop
xor
daa
mov
sarl
jg
mov
cmp
mov
sbb
xor
and
mov
jle
mov
mov
fidivrs
pop
cmpsl
push
inc
or
inc
sub
or
sbb
cmp
and
add
add
cmp
addr16
mov
fs
dec
ret
rcrl
outsb
and
and
fs
clc
cmp
aas
ret
fldcw
sub
jl
cmp
fs
push
or
call
aad
lds
or
cmp
xchg
fwait
icebp
sbb
iret
rcr
fcoms
ds
sbb
es
inc
cli
push
mov
mov
ret
fwait
cmp
stc
or
add
xchg
flds
imul
loope
xchg
or
mov
das
leave
and
jecxz
aas
je
mov
aaa
sarl
inc
xlat
mov
movsb
mov
mov
lahf
mov
xlat
xchg
mov
jnp
aad
sbb
lret
call
push
pushf
mov
xor
aas
fdivrl
stc
icebp
jge
cmpsl
call
out
idiv
mov
imul
lret
inc
inc
imul
sbb
pop
lcall
cld
mov
fwait
xor
dec
ja
pusha
pop
leave
sahf
test
mov
stos
movsb
cmp
jl
popa
xor
hlt
cmpl
dec
call
jae
push
xchg
sbb
mov
sbb
mov
lcall
push
jg
pop
xchg
xchg
sti
dec
push
jg
movb
jmp
je
adc
mov
addr16
push
pop
mov
pop
xchg
pop
aad
add
test
or
and
cwtl
repz
add
sub
adc
push
aas
ret
icebp
lret
out
cwtl
ret
nop
mov
sbb
cltd
xor
mov
pop
inc
outsb
pop
jle
stos
adc
lcall
cmpb
jg
std
in
leave
push
push
mov
xchg
mov
mov
xor
push
jle
xchg
sbb
lock
adc
push
aam
mov
push
mov
and
mov
jo
mov
jb
mov
sbb
mov
sbbb
daa
daa
adcl
xor
cmp
clc
movlps
test
icebp
xor
add
test
pop
pop
mov
mov
xchg
adc
pusha
repz
aam
andl
lret
decl
test
push
add
jmp
dec
outsb
cmpsb
sti
pop
popa
mov
mov
xor
testb
push
lock
cwtl
loopne
cmp
mov
gs
nop
jnp
clc
sbb
lock
inc
fstps
sub
test
mov
data16
dec
lahf
jns
ret
mov
xchg
popa
mov
xchg
loopne
pop
jl
sbb
in
in
and
add
sbb
aad
aad
mov
push
dec
mov
movsl
int3
idiv
sbb
cmp
push
lock
iret
test
mov
mov
leave
dec
int
ljmp
fmull
xchg
or
jnp
dec
mov
or
fdivr
pop
int3
into
clc
scas
scas
imul
cwtl
cmpsl
insl
outsl
int
sub
cld
mov
fadds
pushf
cmp
push
jl
lcall
pop
fldenv
mov
cs
and
aad
shrl
cmp
mov
and
in
dec
pushl
pop
fmul
fimuls
jno
std
cmp
pop
les
loope
aas
push
cli
xchg
inc
adc
adc
push
or
mov
mov
js
add
push
sbb
out
clc
cld
add
push
mov
in
fidivs
test
and
mov
adc
sbb
fadd
cmp
std
lahf
leave
int3
lcall
push
adc
pop
fdivl
cmp
pop
lret
call
pop
shlb
push
ja
test
pop
sub
jae
mov
stos
lahf
mov
mulb
or
in
shlb
mulb
cli
jle
xchg
fs
lret
lret
jae
mov
aas
and
or
test
jle,pn
lock
into
pop
dec
jmp
jg
aam
sbb
std
or
imul
fstpl
cmp
jno
mov
addr16
pop
xor
cs
jae
mov
cld
xchg
lods
add
jg
sbb
mov
cmp
sub
std
or
push
jb
sbb
js
jno
pop
sbb
pop
sbb
push
mov
into
push
mov
aad
mov
mov
int
xchg
arpl
mov
lret
pop
aad
xor
lds
or
outsb
mov
sbb
mov
sti
and
mov
xlat
gs
xchg
mov
pop
xor
leave
sbbl
mov
xlat
aaa
adcb
xor
lcall
and
ficomps
ljmp
mov
les
inc
ds
pop
sbb
scas
mov
int
mov
sahf
dec
repnz
or
aas
cs
in
cwtl
mov
mov
add
pop
fcmovnu
cmpsl
aas
insl
inc
and
sti
stos
push
andl
push
dec
std
out
shr
jecxz
fs
mov
mov
push
cmp
sub
sahf
sti
or
mov
jg
cmp
mov
pushf
shlb
mov
popa
je
jl
cli
aaa
icebp
and
test
and
mov
outsb
out
fmull
or
mov
jno
jo
jae
cwtl
pushf
mov
test
stos
push
sahf
addr16
mov
push
aas
and
pop
fdivs
fstps
jl
pop
adc
mov
inc
in
mov
mov
inc
int3
xor
insl
iret
pop
sub
jle
jbe
inc
loopne
sbb
xor
test
test
add
mov
insl
sbb
push
jae
clc
cwtl
pop
cmp
xchg
push
fs
arpl
in
icebp
sbb
jle
jl
dec
into
or
add
outsb
jg
loope
ds
jl
xchg
in
push
mov
shll
out
jns
cwtl
mov
sbb
xchg
popa
mov
dec
lret
pop
xchg
jecxz
mov
dec
mov
incl
pop
sbb
sti
mov
movsb
js
lret
popf
incl
jle
mov
cltd
lds
sub
test
jecxz
add
jae
xchg
dec
ds
adc
cmpsl
jne
mov
and
jmp
shll
fcompl
das
push
pop
cmp
cmc
jmp
je
orb
int3
rorl
fstpt
mov
cs
pop
jnp
xor
jp
add
pop
cld
add
lds
pushf
jnp
popf
shr
push
sbb
ljmp
add
xchg
rcll
xchg
pop
nop
subl
sub
lds
adcl
pop
jl
jecxz
popf
out
add
mov
les
push
adc
in
and
pop
es
jbe
mov
aad
mov
pop
push
int3
cmp
sub
inc
xchg
leave
jl
add
mov
clc
pop
dec
out
fdivl
lahf
insb
ss
mov
mov
cli
outsb
push
movsb
xor
enter
adc
cmp
adc
mov
daa
fstps
popa
cs
or
scas
add
and
repz
sub
leave
and
in
loopne
push
fcompl
out
dec
cmp
out
sbb
mov
int
mov
fildll
add
add
cmp
addb
mov
pop
pop
mov
lea
test
mov
adc
mov
pop
xchg
leave
std
in
xchg
sahf
cwtl
adc
loope
adc
inc
lret
fstl
mov
cs
dec
bound
adc
int
cmpb
hlt
and
cmp
leave
fildll
sbb
movsb
cli
cwtl
sub
xchg
dec
sbb
dec
or
mov
test
push
push
sub
pop
push
aaa
adc
decl
fdivrs
fucomi
movsb
push
cmp
xchg
mov
imul
negb
cmpsl
xchg
xor
aaa
mov
rclb
fmuls
fcom
cli
pop
ljmp
test
push
jg
ret
pop
fisubs
xor
cwtl
xor
push
xor
cli
fsubp
jo
cwtl
sahf
test
sbb
add
push
ljmp
mov
gs
and
bound
add
hlt
jne
jecxz
ds
or
and
fidivrl
push
mov
cltd
fdivl
fdivrs
jnp
cltd
andb
xlat
cmp
pushf
pop
mov
or
pop
sub
mov
js
iret
mov
adc
fsubp
mov
decl
inc
fsubl
jl
inc
sbb
adc
mov
sub
stos
mov
lcall
and
fsub
popa
mov
outsl
pop
roll
mov
ror
iret
pop
mov
cmpsl
imul
dec
repz
jg
sub
pushf
mov
lock
xor
shrl
pop
icebp
jbe
idivb
cli
cmpsb
xchg
push
test
jno
ret
pop
push
xchg
fwait
popf
mov
and
adc
mov
cltd
sbb
cwtl
cmp
cmp
movsl
sub
jle
fmuls
std
cmp
repz
add
fnstsw
aaa
shl
adc
sahf
pop
loope
adc
das
push
push
sti
cmp
fs
cmp
push
xchg
sbb
add
mov
jg,pn
xchg
jecxz
pushf
mov
mov
dec
mov
inc
jge
popa
sbb
sbb
test
movsl
mov
test
sti
xor
shrb
out
xchg
or
jnp
inc
int3
xchg
adcl
das
cmp
sbb
and
leave
pushf
mov
cmpl
mov
jb
je
sbb
mov
jbe
jbe
ret
add
push
jp
out
pushf
dec
mov
jmp
adc
cwtl
add
aad
lret
sub
inc
add
jnp
scas
dec
jmp
test
mov
sti
jns
pop
icebp
xor
into
push
sub
inc
pushf
leave
cmp
xor
gs
pop
loope
shlb
aam
inc
fwait
stos
syscall
test
sti
shl
mov
subb
add
dec
fsubs
nop
aam
sbb
addl
adc
call
sbb
xor
lea
xchg
dec
cmp
sets
xchg
or
jp
loopne
sarb
push
ljmp
sbb
add
sub
cmp
lea
mov
sub
cmp
cld
pop
cmp
push
lret
cld
mov
pop
pop
xchg
or
arpl
or
fnsave
mov
insb
mov
les
mov
stc
xor
pop
mov
xor
xchg
mov
xchg
cli
popa
sbb
push
cmp
sahf
repz
mov
mov
pop
pop
fisttpl
inc
xchg
jnp
add
pusha
arpl
adc
ficompl
sbb
cmpb
jmp
xchg
push
pop
mov
cmp
fisttpl
sar
pop
add
and
and
sahf
mov
pop
imul
pop
and
fwait
or
data16
cwtl
mov
mov
into
xchg
push
jnp
inc
ja
cs
in
or
sbb
das
fstl
pop
or
sbb
xor
cmp
push
repnz
mov
filds
cmp
roll
cmc
ja
ljmp
jmp
mov
mov
mov
mov
xchg
cmp
xchg
xor
jp
aas
stc
add
xchg
mov
scas
rcll
adc
cmp
popl
in
mov
jo
fdivl
jp
push
iret
mov
call
ret
enter
add
inc
mov
inc
cmpsl
and
push
pushf
arpl
insl
mov
pop
in
cltd
enter
sbb
mov
test
ljmp
stos
cmp
xor
xchg
jmp
mov
pop
adc
and
push
pop
mov
cwtl
push
lret
cli
sahf
pop
js
fdiv
mov
scas
test
mov
cli
adc
mov
je
decl
mov
sbb
pop
jl
ds
cli
xchg
cld
push
or
stc
mov
pushf
mov
mov
mov
pop
mov
les
aam
mov
mov
imul
imul
fs
out
sbb
push
aam
cltd
mov
daa
sub
xchg
insb
pop
das
jp
pop
mov
lcall
sti
int3
ficoml
mov
cltd
inc
es
dec
outsb
scas
int3
and
cs
inc
stc
jle
dec
cmp
fwait
push
dec
mov
shll
push
es
sub
cmp
cld
test
or
xor
sbb
mov
add
scas
pusha
cwtl
xchg
fcomp
fldt
faddl
es
lcall
mov
fcoms
jg
dec
rorl
cwtl
mov
aas
mov
into
and
lcall
jge
inc
cmp
fisttpl
test
xchg
push
in
iret
sbb
xchg
mov
fldenv
push
notl
pusha
dec
xchg
xor
lahf
cs
cmp
adc
int
or
cmp
push
call
jae
addr16
outsb
adc
sahf
sbb
xor
cmc
adc
push
dec
mov
adc
jp
sbb
fisubs
xorb
pop
mov
pop
sub
aad
sti
jmp
mov
push
subb
fmuls
movsl
mov
imul
or
xlat
bound
dec
or
xor
or
push
cwtl
loopne
add
pop
lcall
inc
mov
ret
test
jp
subb
sbb
cmpsb
sti
jl
ficompl
in
ficompl
outsb
jnp
cmp
xchg
ds
jle
dec
xchg
cmp
cmp
inc
mov
adc
lods
adc
xor
jg
dec
pop
inc
imul
jg
movsb
mov
mov
jle
push
dec
fsub
bound
ds
push
lret
pop
pop
lcall
ds
pop
rcl
push
filds
fiaddl
ret
daa
pcmpeqw
cwtl
sbb
loop
sbb
xchg
adcb
inc
cmpb
pop
iret
xor
in
ret
icebp
decl
cwtl
pop
jle
stc
pusha
sub
push
test
pop
mov
add
jno
pop
mov
imul
lock
sbb
cmp
fnsave
mov
mov
mov
test
out
movsb
daa
pop
scas
push
mov
sbb
xor
clc
roll
cmp
aas
dec
sbb
xor
pop
les
sbb
movsb
or
cmp
xor
outsl
push
adc
mov
stos
stc
aad
call
mov
jl
mov
and
and
mov
stos
test
and
push
sbb
push
inc
cmp
fldenv
push
jp
cmovae
std
in
jno
call
mov
jae
ja
aam
mov
int3
cwtl
fsubrs
aas
push
repz
movl
jnp
pushf
mov
clc
sbb
movsb
fcompl
orl
or
lea
fdivp
lock
pop
incb
clc
lcall
lahf
aas
adc
mov
xchg
add
jecxz
pop
ja
addr16
xor
mov
imul
stos
cmpb
cmp
pop
cmp
in
fnsave
pushf
enter
dec
and
out
inc
aaa
xchg
cmpsb
jo
rcr
sbb
mov
lret
mov
cmp
adc
int3
aaa
clc
inc
xor
mov
xchg
pop
out
hlt
sub
aad
jg
mov
mov
push
pop
je
sbb
pop
test
xchg
sbb
mov
jp
stos
in
insl
pop
dec
mov
pusha
mov
inc
cltd
jl
pop
enter
fstps
repz
cmp
mov
mov
add
pushf
pop
xchg
and
jns
mov
cmp
fs
les
mov
and
xchg
or
jb
pop
imulb
pop
es
xor
jne
in
push
pushf
inc
orl
es
sbb
xlat
xchg
mov
or
adc
xor
sub
aas
add
in
mov
mov
mov
pop
pop
pusha
add
fwait
sbb
mov
cmpsb
and
lret
mov
cwtl
call
adc
inc
xor
iret
out
dec
sbb
lret
and
mov
sahf
daa
scas
push
add
enter
push
loope
push
jno
or
mov
ljmp
popa
lcall
pop
pop
rclb
cltd
mov
or
ljmp
jnp
xchg
sbb
sub
sbb
lea
push
or
and
mov
add
cld
inc
mov
pop
call
xchg
mov
popf
out
inc
add
pop
inc
fiaddl
jl
fcoml
bsf
mov
lods
and
push
pop
push
idivb
imul
pop
scas
cs
lret
xchg
cwtl
fildl
lahf
mov
notb
mov
mov
loopne
mov
pop
sub
sbb
sbb
jae
aam
sub
sti
int
mov
les
aaa
addb
int
int
pop
icebp
jns
lcall
adc
iret
fsubs
cwtl
test
adcl
out
cmp
jp,pt
push
jbe
call
sub
out
jbe
jno
adc
jl
ljmp
out
jbe
cmpb
mov
inc
arpl
loopne
sti
rolb
dec
add
out
cwtl
xor
dec
jb
mov
xor
aas
loopne
mov
movsl
addl
mov
sbb
lods
push
fbstp
cld
inc
xor
rcrb
dec
lods
iret
jmp
cmp
adc
mov
mov
iret
test
ds
in
mov
js
decl
imul
cmp
test
add
cmp
call
pop
enter
inc
xchg
push
sbbl
test
adc
outsb
call
add
test
dec
inc
or
dec
pop
jb
xchg
mov
les
sti
and
es
outsb
out
je
inc
push
cltd
js
arpl
popf
out
icebp
add
insb
adc
xor
shll
sbb
xchg
sub
sbb
adc
mov
pop
cmpb
cmp
int
mov
or
push
xchg
fdivrp
sbb
fwait
sub
enter
mov
mov
pop
cmp
add
inc
adc
or
mov
sbb
adc
shl
or
out
pushl
push
push
addl
cmp
pop
sub
mov
fadd
aam
cmp
sub
dec
push
xchg
cwtl
push
mov
xor
out
pushl
mov
adc
pop
push
mov
mov
fdivr
mov
dec
inc
test
xlat
xor
dec
ljmp
mov
dec
lcall
cmpsb
jl
in
mov
cs
sub
dec
fsubl
cltd
mov
addr16
cs
pop
pop
mov
fidivrl
insl
mov
fisubs
cmp
lcall
mov
add
xchg
and
insl
aas
add
lret
mov
mov
mov
xor
rol
adc
add
outsl
xor
or
jle
enter
out
pop
pop
mov
je
sbb
xlat
mov
pusha
scas
cmp
or
lods
dec
mov
push
mov
sbb
xor
test
jbe
test
dec
sub
pop
aad
pop
pushf
and
test
pop
testl
pop
mov
mov
xor
xchg
fdivs
das
fsts
bound
cmp
add
fmull
cmp
sahf
jg
mov
pop
cltd
insb
jle
sti
dec
sbb
push
xor
aad
sbbb
adc
mov
inc
or
adc
jae
push
ja
xor
add
cld
push
mov
sbb
mov
cwtl
outsb
mov
mov
cmp
xlat
pop
push
js
or
adc
lahf
dec
and
dec
xor
in
xchg
je
stos
shll
and
xlat
jb
sbb
movsb
mov
xor
mov
jmp
orl
adcb
cli
ret
lahf
pop
or
lret
jmp
adc
push
lock
adc
xchg
ss
lret
stos
pop
lret
sbb
mov
cmp
push
pop
jp
jbe
fstpl
mov
inc
rdmsr
mov
jecxz
stos
xchg
fstpl
mov
xor
mov
int
test
test
or
cmp
xor
cmp
pop
and
dec
xchg
mov
add
cwtl
fcoml
cmp
cmp
xor
xchg
cld
outsl
in
or
fcmovne
dec
mov
jno
or
adc
sbb
xor
sbb
mov
rcrl
pop
pushf
pop
push
je
sub
push
xorb
jmp
addr16
imul
cli
popf
lock
pop
fiaddl
dec
cmp
pusha
lods
fmuls
jmp
pop
sbb
gs
insb
lret
xor
movsl
aas
les
notl
sti
add
adc
cmpsb
xchg
pop
les
jno
subps
and
xor
adc
in
lret
clc
dec
lds
dec
es
push
xchg
jbe
mov
xchg
ret
pop
sbb
std
xorb
aas
mov
dec
mov
xchg
imul
mov
push
stc
in
cwtl
int3
and
sbb
xchg
stos
inc
dec
mov
loope
cltd
dec
shl
sbb
cmp
pop
jge
pop
test
adc
rclb
fbstp
loope
rcrb
mov
mov
decl
mov
cmc
sbb
mulb
cltd
xor
movsl
aaa
pushf
adc
inc
dec
pop
xor
dec
jg
and
negl
popf
push
add
jo
fisttpl
hlt
sbb
adc
jle
cmp
in
jns
sbb
test
cmp
xchg
sbb
pop
pop
aaa
imul
in
iret
clc
fdivr
test
mov
mov
fldenv
adc
pop
mov
sbb
pop
cmp
xchg
aas
push
roll
test
mov
in
mov
mov
lcall
sbb
ljmp
mov
dec
loop
mov
add
mov
cmpl
loope
mov
pop
lret
and
sub
cld
cli
sahf
sbb
repnz
gs
xchg
mov
mov
jo
ss
fistpl
in
sub
xchg
loop
sbb
sti
aad
push
and
sahf
nop
mov
or
hlt
sbb
je
test
add
insl
sbb
sbb
xchg
in
jg
dec
mov
or
add
mov
adc
inc
fisubrs
dec
cwtl
adc
xor
mov
pop
insl
insb
xchg
fcoms
std
mov
add
cli
or
ror
out
pop
fadds
icebp
jg
loope
push
lcall
push
jo
and
nop
pop
test
sbbb
jmp
or
pop
sbb
hlt
mov
lcall
std
or
popa
mov
scas
aam
sbb
mov
mov
test
test
cltd
mov
adc
mov
cmp
cmpsb
mov
dec
cmp
push
lahf
sbb
out
nop
popa
fldt
je
es
out
jae
or
xchg
sbb
test
add
jno
pop
cmpsb
inc
sub
pop
scas
fstps
cmc
js
lds
mov
popf
shll
or
jae
dec
fsubr
in
scas
aam
jl
nop
aaa
jecxz
cmp
inc
and
fwait
int
dec
arpl
dec
dec
out
movsb
cmpsl
pop
xor
cli
xor
cld
pop
push
or
jmp
or
cwtl
fists
divb
out
aaa
test
cmp
adc
push
mov
lcall
and
cmpsb
push
iret
push
aad
cs
push
xchg
fs
add
pop
cmp
imul
mov
pushf
scas
subb
and
xor
je
les
dec
arpl
popl
or
pop
lcall
mov
lds
add
int
mov
mov
xor
pop
cmp
cmp
xorb
push
mov
adc
stc
cmpsb
sbb
sbb
xor
inc
pop
mov
mov
xchg
mov
pop
sbbl
aas
fnstcw
sub
add
and
inc
jg
xchg
fwait
ja
xor
adc
lahf
jne
xor
dec
adc
cmpsl
daa
test
mov
jnp
jle
push
pusha
cmpb
push
das
enter
xor
pop
arpl
lret
stc
dec
aas
mov
daa
hlt
dec
xchg
rcrl
aaa
dec
sahf
jg
push
lcall
cwtl
pinsrw
dec
inc
nop
mov
xor
mov
fistps
mov
pop
mov
add
jl
das
cmp
data16
imul
cli
das
test
pop
decl
fcomi
pushf
sbb
fsubr
jns
mov
stos
add
in
jne
fists
push
stos
adc
pusha
fldenv
push
add
inc
jge,pt
sbb
cwtl
mov
and
ds
inc
cmp
lret
lods
out
adc
jnp
dec
es
sub
xchg
adc
pushf
negb
andb
ret
xor
push
inc
push
push
pushl
mov
das
sbb
adc
cmp
std
popf
pop
xlat
clc
dec
or
fcoms
stos
pop
sahf
push
sub
daa
int
mov
jecxz
xor
into
pop
daa
inc
mov
or
fcompl
mov
jbe
daa
jmp
sti
outsb
dec
sbb
pop
jns
jae
pop
in
dec
xchg
movsb
lea
sbb
cmp
and
test
mov
push
fisttpll
sarb
xor
inc
add
in
imul
jo
lret
fwait
or
adc
dec
jbe
adc
dec
or
sub
pushf
adc
adc
cs
add
add
fldl
notb
push
movsb
cmp
fsubrl
stc
sub
dec
out
andb
jl
pop
leave
cmp
jne
pop
scas
rcrl
mov
push
jbe
xchg
movsl
pop
hlt
cwtl
or
cmp
xchg
movsb
push
push
adc
xchg
sbb
in
and
xchg
sbb
leave
adc
lds
pop
decb
sbb
fsts
into
insl
shrb
cmp
mov
jp
jle
dec
mov
stc
sbb
pop
inc
jae,pt
sbb
adc
cmp
mov
push
mov
push
adc
mov
fdivr
leave
lods
pop
xabort
push
pop
cmpsl
adc
mov
mov
inc
jo
leave
pop
iret
inc
sbb
loope
ficomps
mov
and
cmp
fisubs
or
lock
jl
scas
sbb
cmpl
cmp
dec
or
jg
push
aam
or
dec
pop
and
inc
aad
or
stc
dec
mov
dec
mov
arpl
jmp
jnp
jns
xchg
sti
ljmp
sti
or
in
loop
lods
lahf
imul
cwtl
movsb
mov
xchg
mov
inc
mov
stc
pop
hlt
les
mov
shl
pop
push
hlt
add
mov
mov
pop
or
aas
insb
rorb
les
xchg
fldt
nop
xchg
push
xor
lods
ror
stos
lock
push
test
loope
roll
xchg
mov
push
sub
movsl
imul
rcll
add
or
mov
or
sub
push
subb
lea
fdivrl
repz
cmp
test
cmp
add
loope
stos
push
dec
push
push
dec
dec
mov
cmpsb
and
je
jo
xchg
jnp
std
ror
es
mov
dec
je
cwtl
pop
mov
daa
xlat
mov
jg
mov
jge
sahf
lea
cmc
out
sub
mov
push
jb
nop
jnp
addr16
shlb
jbe
fadds
lcall
cmp
loope
cmp
std
cld
movsb
pop
inc
bound
popa
mov
adc
mov
mov
and
pushf
lahf
cs
sub
pushf
xor
mov
mov
cmp
arpl
mov
pop
mov
cmp
ss
ret
das
pop
dec
adc
icebp
mov
cmp
mov
into
gs
mov
xchg
adc
dec
dec
popa
mov
les
jg
pop
pop
mov
mov
mov
and
or
cli
outsb
or
cmp
push
lea
outsl
lock
mov
shr
aad
repz
daa
test
mov
pop
in
add
pop
mov
add
mov
imul
pop
lods
mov
dec
cwtl
scas
mov
and
jecxz
ror
ret
mov
out
cltd
rcrl
bound
cmp
jge
faddl
push
or
pusha
out
xlat
xor
jp
movsb
sbb
push
notb
mov
aaa
add
pushf
clc
xchg
dec
mov
mov
jno
lcall
add
pop
cmp
xor
sub
xchg
fs
xchg
jg
jp
cmp
imul
push
rcrl
loopne
pop
lods
mov
pusha
xchg
xchg
mov
stos
sbb
test
mov
push
jne
aam
je
pop
mov
dec
movl
push
daa
pop
les
rcrb
mov
pop
push
repz
imul
jp
mov
add
xchg
inc
jle
enter
aaa
or
pop
fldl2t
ficoms
sti
or
out
dec
repz
adc
clc
sbb
pop
mov
faddl
cmp
cmpl
mov
xor
mov
mov
test
insb
jge
jge
in
sbb
jp
rol
and
aam
push
jmp
and
mov
sti
push
cmpsl
jle
add
bound
loop
fs
sbb
cmp
fwait
jbe
movsl
mov
call
les
dec
or
or
cmp
into
and
arpl
outsl
jmp
mov
mov
sti
out
rol
pop
xor
pop
movsl
jp
xchg
xor
dec
shr
mov
pop
mov
jmp
jnp
cmp
mov
vsubss
into
jmp
cmp
xorb
add
push
add
aad
xorb
mov
and
mov
sub
sahf
cmpsl
xor
push
test
mov
fcomps
fwait
cmp
and
cmp
sbb
lods
sbb
push
repz
sti
dec
mov
lods
insl
pushf
roll
lods
or
xchg
pop
mov
sub
in
inc
cld
mov
aam
addl
sub
out
inc
subl
jle
cmc
xor
js
cmp
mov
cmp
decl
add
in
rcrb
or
xor
add
xor
add
ljmp
popf
jp
rcrl
aas
jle
mov
pop
loope
mov
mov
xchg
cmp
pushf
icebp
xor
jno
movsb
mov
cltd
lahf
inc
sbb
mull
mov
jne
cs
movsl
das
or
xchg
call
fwait
push
popf
adcl
add
mov
nop
adc
cmpsb
sub
ret
sub
jno
jns
mov
out
test
jb
repnz
jno
lods
xor
xchg
cmp
test
xchg
clc
mov
sbb
jmp
mov
add
xor
mov
mov
sub
mov
fidivrl
dec
sbb
int
rcrl
or
or
ds
pop
dec
stos
mov
cmpl
sbb
clc
cmpsl
or
xlat
add
add
jmp
test
lds
mov
out
decb
fmuls
push
in
pop
pushf
mov
clc
sbb
test
jnp
mov
enter
test
fisttpll
loop
cli
mov
jmp
pop
bound
xor
xorl
rol
and
cmp
or
adc
xchg
cmp
mov
fcomps
mov
jp
ficoms
jae
pop
out
jne
cmp
jbe
sub
clc
in
mov
sbb
test
pusha
pop
sbb
adc
in
pop
mov
or
inc
xchg
cmp
es
and
mov
xor
dec
mov
mov
andb
sub
xor
mov
adc
cld
inc
lret
mov
testl
sub
ja
jg
pop
clc
pop
push
stc
cmp
sbb
mov
inc
mov
rcrb
push
pop
lahf
arpl
sbb
stos
xor
filds
sbb
mov
sub
dec
cli
xchg
lahf
jmp
lock
loopne
pusha
add
pop
push
fisubrs
mov
jge
cwtl
stos
xchg
cmp
dec
jecxz
lds
mov
xor
cmpsb
in
out
aaa
and
dec
jmp
fdiv
outsl
xchg
cwtl
pop
xor
xor
mov
sbb
xchg
fxch
jo
add
enter
insb
push
cwtl
fdiv
fwait
sti
out
or
pop
xlat
add
and
imul
iret
jb
movswl
sub
cmp
popf
iret
add
inc
add
and
mov
mov
sbb
mov
dec
lods
out
or
mov
push
cmp
push
mov
push
add
iret
mov
testb
pushf
mov
xor
push
sbb
jbe
mov
dec
dec
stc
jl
jle
loope
out
aas
adc
sbb
push
or
jmp
jg
inc
out
cwtl
mov
stos
cmc
mov
pop
mov
std
mov
push
loope
pop
add
bound
inc
test
and
jle
das
insl
mov
std
xchg
mov
into
jmp
xor
mov
mov
mov
lods
lret
rcrl
testl
sub
aas
shlb
sbb
jp
pop
adc
pop
pushf
mov
aad
lods
repnz
les
xor
or
lret
push
pop
mov
adc
in
ds
mov
imull
sbb
stos
pop
test
push
aas
insl
test
mov
and
sbb
lret
push
imul
in
outsb
cmpsl
aas
xchg
fbld
cmp
xor
aad
fmulp
lahf
in
push
aam
jb
pushf
stos
dec
push
repz
cli
aaa
pop
or
stos
or
pop
xlat
inc
mov
lods
sbb
xchg
pop
sub
inc
dec
cmpsl
sti
outsb
xchg
cmp
mov
unpckhps
pop
fcompl
pusha
cmpsl
scas
imul
pop
sahf
cmpsl
inc
call
aas
cmp
pop
out
scas
scas
cmp
pushf
jae
test
push
xchg
mov
jle
pop
sbb
lea
popa
adc
test
xor
testl
sbb
mov
inc
outsb
out
xchg
imul
sub
mov
sub
lahf
cmp
stos
lahf
incl
or
xchg
pop
dec
data16
sarl
pop
repz
pop
pop
inc
xor
cltd
jle
movsb
add
cmp
pause
sti
adc
jo
andl
ficomps
movsb
jmp
or
leave
lcall
jnp
les
xchg
dec
inc
jmp
arpl
in
loope
cwtl
lds
frstor
add
enter
adc
mov
inc
xchg
subl
add
dec
repnz
xchg
fistl
jnp
pop
in
sbb
movsb
xor
std
dec
jg
cmc
rorb
pop
sahf
in
in
in
jae
adc
xchg
mov
enter
cwtl
mov
or
pop
aas
mov
popa
int3
cmp
xchg
test
mov
pop
jle
loop
push
mov
cmpsl
xchg
mov
jae
arpl
mov
jmp
cli
sbb
mov
nop
orl
jns
pop
pushf
sbb
hlt
addps
push
xchg
jp
cmp
pop
jmp
fs
cltd
pop
or
cmc
pop
sbb
jne
push
int
xor
outsl
fldl
sbb
out
jp
mov
sbb
adc
es
aaa
loopne
adc
pop
sub
scas
sti
jmp
sub
mov
insl
je
and
sub
lret
andb
cwtl
std
mov
inc
pushf
aaa
push
inc
jae
fstpl
mov
dec
aas
pop
jne
or
xlat
lar
popf
loope
mov
xlat
fcoml
add
push
orl
fisttpl
mov
mov
pop
and
add
inc
pushf
lret
and
movsb
cs
stos
dec
cwtl
sti
push
cmpsl
fmuls
in
ss
adc
das
movsb
outsb
cs
int3
jp
loopne
xorl
mov
and
xchg
ljmp
cmp
xor
mov
test
fcmovnb
push
cmp
cmpsb
mov
pushf
ja
xor
mov
mov
enter
dec
xchg
jnp
sub
cmp
dec
xlat
sahf
pop
fmuls
pop
aas
dec
push
into
inc
pop
sbb
jg
dec
mov
jns
inc
ret
mov
adc
jb
jo
jg
mov
mov
cmp
lds
adc
jecxz
push
push
aas
pop
xchg
ds
dec
loop
jmp
push
loop
inc
into
inc
inc
sbb
xchg
lret
mov
pop
dec
mov
and
or
cmpsb
insb
mov
icebp
mov
ds
cmp
lcall
mov
add
push
clc
cmp
scas
lds
jp
mov
jg
push
push
push
xchg
xchg
subl
sti
dec
fimuls
fisttpll
add
and
stc
sbbb
dec
cmp
mov
mov
sub
inc
outsl
jo
adc
out
push
test
insl
mov
mov
addr16
ss
test
adc
push
rcrl
movsl
dec
mov
pushf
leave
sub
aas
aad
fwait
mov
xor
notl
sbb
mov
push
inc
mov
clc
push
sub
or
cmp
insl
and
add
jle
push
push
clc
adc
sub
dec
add
fisubs
out
fdivs
call
jno
lret
adc
mov
cmp
jle
xchg
mov
lcall
filds
xor
jns
pop
lods
mov
jbe
pop
in
iret
sti
fwait
mov
aad
scas
push
pusha
rcr
pop
int3
sub
mov
pop
rol
inc
mov
fucomi
cmp
cli
scas
pop
cmp
movsb
imul
lcall
mov
je
cmpb
xchg
sahf
xchg
out
fcoml
insb
pop
sbb
pop
ss
fwait
popa
jle
dec
pop
or
pusha
je
cmp
fnstenv
jb
faddl
and
sbb
lcall
cmp
cmp
adc
push
ret
repz
sub
cmc
and
movsb
sub
pop
push
mov
xchg
mov
rorb
dec
out
insb
sbb
cmp
mov
cmc
mov
cmp
test
mov
xchg
jl
mov
mul
jmp
add
fcomp
fwait
andl
or
inc
push
stc
shlb
aas
mov
sbb
lret
mov
xchg
sbb
xchg
decb
enter
roll
mov
add
jl
xor
int3
fstpt
and
adc
lods
push
mov
nop
or
mov
test
movb
lods
fadds
icebp
cs
pop
jle
pop
xor
mov
xchg
test
xor
in
loopne
inc
repnz
test
mov
lahf
sbb
mov
pushf
mov
mov
int3
fistps
mov
js
sub
cwtl
lea
mov
jo
mov
in
adc
mov
nop
sbb
and
outsl
xchg
pop
pusha
lds
adc
push
loopne
jne
cwtl
mov
scas
sti
cmp
rcr
ret
mov
push
sbb
inc
pop
and
cwtl
outsl
xchg
fildl
adc
sbb
leave
add
cmp
iret
push
leave
inc
mov
add
sub
insb
pushf
jge
ds
scas
dec
push
pop
shlb
mov
mov
cli
jo
loopne
push
mov
dec
data16
ss
add
test
jg
inc
sbb
rcll
cli
jmp
add
cltd
pop
sbb
jecxz
jo
mov
ss
fidivl
daa
in
jmp
cltd
fwait
jbe
mov
lods
out
je
push
ss
push
dec
adc
insb
push
sbb
mov
arpl
mov
cwtl
movsb
fmull
mov
scas
pop
inc
in
std
insl
mov
or
xchg
into
sahf
aas
aad
sub
xor
jmp
jnp
icebp
std
stos
jae
xchg
aad
jg
stos
jns
mov
dec
xchg
sbbl
pusha
pop
mov
push
pop
filds
mov
dec
sarl
fdivrs
repnz
insb
jo
outsb
imul
mov
andl
pmaddwd
aad
in
inc
mov
popf
or
imul
cltd
fwait
sbb
das
inc
out
sub
or
daa
loope
mov
xchg
add
xor
xchg
mov
and
in
test
in
sbb
dec
cs
rol
cmp
push
clc
pop
add
cmp
inc
int3
push
ret
push
loope
fwait
add
mov
adc
addr16
mov
loope
scas
negl
push
enter
roll
leave
sbb
ret
sbb
ss
and
repnz
mov
mov
cmpsb
mov
push
dec
push
popl
jecxz
jns
outsb
xorl
xor
and
pusha
vpcomub
jbe
push
test
xchg
push
pop
add
sbb
aaa
fmull
out
call
sbbl
add
repz
lret
bound
adc
mov
imul
xor
enter
sub
xorl
cmp
mov
pusha
mov
push
repz
lds
test
mov
jo
mov
dec
test
dec
daa
fmul
sarb
jbe
stc
sub
out
gs
faddl
ret
inc
push
add
adc
bnd
int
mov
sub
lret
mov
mov
or
jno
xchg
popa
sub
in
jle
push
and
jecxz
in
mov
or
sbb
daa
cmc
lcall
cmp
inc
jp
mov
das
mov
push
aas
push
sarb
jb
lock
cmp
sbb
add
jo
or
add
jle
scas
std
test
orb
sbb
mov
repz
int3
int
pop
push
xchg
sbbb
and
popf
pop
or
xlat
inc
aas
std
mov
rorl
mov
cli
inc
push
mov
aad
in
fistpl
mov
pusha
jmp
in
jl
aas
leave
lcall
pop
cmp
lods
daa
jae
pushf
inc
imul
jbe
mov
jl
push
pop
sub
jge
xchg
pop
sbb
outsl
pushf
xchg
adcl
xor
jecxz
jo
in
push
cltd
roll
fdivrs
jbe
adc
sub
fdivrs
jecxz
es
cmpb
or
popa
mov
sub
inc
mov
pop
xlat
push
add
inc
shrb
scas
ret
lds
je
imul
fsub
add
sbb
push
lcall
push
repz
jno
xchg
movsb
std
bound
sbb
pop
pushf
fbstp
inc
jmp
into
sub
lds
mov
int
add
xchg
jns
popa
jno
adc
in
sbb
stos
scas
lahf
push
mov
loopne
je
sbb
and
test
add
mov
or
lods
inc
fistl
mov
xchg
push
outsl
xor
stos
lods
push
pop
fimuls
xlat
or
aam
xchg
mov
xchg
mov
sahf
sbb
sub
int3
outsl
xchg
test
sti
push
loope
xchg
fsubs
mov
jbe
mov
pusha
insb
int
pushf
mov
cmp
enter
outsb
push
push
jno
mov
adc
fcoml
es
jp
repz
decl
arpl
das
out
pop
das
mov
mov
jg
add
inc
orb
cmp
movsl
jb
push
nop
fmull
add
push
and
mov
jecxz
mov
pushf
je
es
pusha
mov
or
and
roll
sub
in
insb
mov
aas
adc
dec
and
dec
inc
fmuls
fstps
into
sar
or
xlat
iret
popa
mov
aas
and
inc
xchg
outsb
sbb
xchg
mov
out
cltd
int3
aas
xor
dec
sbbl
rorl
icebp
xchg
add
cld
sahf
aas
mov
adc
lahf
sbb
sub
add
mov
fnstsw
cmp
pop
pop
pop
xor
mov
ljmp
jne
stos
pushf
jle
test
xchg
data16
pop
dec
push
std
popf
push
mov
int3
mov
fcomps
cmc
ljmp
icebp
adc
aam
scas
or
adc
sti
dec
ds
jg
xor
cwtl
mov
pop
cmp
cmp
fdivrs
pop
ret
mov
repz
cmp
jo
stc
adc
jp
fldt
inc
and
pop
mov
pop
into
shlb
ret
dec
mov
xchg
pop
inc
mov
outsl
clc
aas
mov
add
lea
aam
add
xor
shll
stc
mov
xchg
fiadds
inc
fiadds
scas
pop
cwtl
mov
int
mov
insb
mov
sub
mov
clc
inc
loopne
movb
xchg
push
mov
outsl
movsl
inc
ret
arpl
aad
pop
call
shrl
jne
xchg
out
mov
repnz
mov
mov
sub
orl
sbb
mov
add
jg
popf
setb
mov
adc
cmp
ss
mov
scas
mov
mov
lock
inc
pushf
inc
pop
outsl
xchg
sub
mov
loope
mov
insb
jbe
pop
pop
jl
pusha
pushf
push
mov
fmuls
add
add
push
pushf
fsubr
cmp
mov
push
jle
mov
cmp
jno
mov
mov
sbb
popf
sarb
mov
gs
adc
adc
repz
ror
or
sahf
ficomps
aas
hlt
pop
mov
sub
mov
lods
aas
sbb
jmp
ds
ror
push
das
imul
add
fwait
mov
cmpsl
fsubl
xchg
ss
dec
mov
mov
sbb
cmp
add
mov
push
sbb
fmuls
movsb
out
push
adc
adc
ficoml
dec
icebp
mov
cmp
jmp
sbb
fisubl
inc
push
mov
aad
jle
js
je
scas
pop
daa
mov
add
sbb
lret
mov
add
in
dec
or
mov
adc
xor
inc
jne
and
and
cltd
xor
jo
out
push
jbe
xchg
dec
add
dec
out
iret
cmp
aas
xor
pushf
fisubrs
ret
jnp
mov
fsts
mov
mov
push
push
leave
xchg
fcoms
cmpb
or
add
cld
nop
jnp
ljmp
int
rorb
lcall
cli
popa
dec
js
push
fcomps
or
lret
mov
cmc
mov
iret
iret
pop
mov
shr
ror
or
inc
cmp
xchg
sti
jg
push
pop
enter
pushf
leave
inc
inc
mov
xchg
push
cmp
scas
fwait
bound
sbb
push
pop
iret
stos
push
sub
imul
cmpsb
xchg
sub
xchg
cmc
mov
jl
mov
pop
lods
cld
pop
mov
int3
pop
ljmp
jae
mov
push
loopne
sti
cmp
in
dec
aaa
xor
xor
dec
aas
popf
xor
mov
mov
dec
pop
icebp
sbbl
jmp
xchg
jg
cmp
mov
idivb
sbb
iret
cs
adc
scas
mov
fbstp
aas
jbe
out
bound
fsubrl
or
sbb
in
fisubs
jle
xchg
lea
and
cmp
stos
popf
push
and
mov
sti
mov
inc
inc
nop
fdivs
fldt
pop
int
enter
js
cli
call
int3
mov
xchg
pop
sub
pop
repz
cmc
jg
jle
insl
sti
or
push
add
mov
xchg
pop
jge,pt
arpl
xchg
mov
stc
popf
jl
aad
lods
pushf
dec
andl
mov
fisubs
test
out
cwtl
insb
or
mov
xchg
and
imul
stos
pop
pop
imul
mov
lds
pop
pop
cmp
mov
fistpll
lea
sub
push
jno
jo
or
and
pop
mov
push
mov
fs
test
aas
stc
xor
cmp
mov
xor
test
daa
fiaddl
out
cmp
push
mov
dec
pop
movb
mov
add
xchg
mov
fnstsw
std
cld
in
mov
bound
push
inc
dec
mov
pop
test
aas
scas
jge
loopne
dec
sbb
mov
xchg
movsl
jecxz
jle
jg
cld
pop
sub
jae
nop
sbb
adc
outsb
pop
mov
fdivrl
jp
mov
cmpsb
mov
sbb
inc
ret
out
dec
rep
sbb
cmp
inc
dec
test
jg
pop
jno
mov
lcall
popf
pop
jbe
cmp
cmp
scas
stos
inc
jg
insl
dec
out
or
jl
and
fstps
data16
ror
testl
leave
pop
rcll
fldl
movsb
jae
mov
sbb
stc
jp
sbb
jnp
dec
cli
jb
jnp
mov
adc
mov
and
adc
incb
je
mov
fildll
ret
xor
sbb
sar
rcrb
cmp
scas
mov
pop
or
clc
fsubr
sbb
subl
inc
lahf
ficomps
sti
jbe
rcl
push
lods
fwait
out
rolb
into
aaa
adc
aas
fld
repz
cmp
shlb
inc
jp
cld
pop
and
in
lods
das
adc
add
out
fwait
mov
stos
inc
cmp
setg
add
mov
out
test
cmp
cmp
inc
jne
loope
popf
fcompl
xchg
fsubrs
test
scas
pushf
xor
xchg
fpatan
rcll
data16
mov
push
inc
mov
fnsave
push
jg
fcomps
inc
mov
ja
orl
mov
sbb
cmp
adc
out
cwtl
paddq
jecxz
les
repnz
addl
aaa
jmp
inc
mov
push
mov
inc
mov
cmpsl
iret
pop
dec
add
shll
stos
push
inc
cli
add
add
orl
or
jno
hlt
dec
mov
add
pop
test
bound
add
leave
dec
add
scas
mov
cmp
mov
xor
addl
cltd
sbb
outsl
mov
jb
xchg
rcll
mov
mov
sbb
push
lret
cmovl
ror
sub
vsubpd
xor
fwait
in
jo
fiadds
jg
nop
popa
push
inc
fwait
sub
xor
pop
nop
in
mov
test
sbb
fbstp
outsl
cwtl
add
cli
sbb
pop
or
in
cmp
ficompl
movsl
fistpl
xlat
sub
add
inc
jecxz
add
mul
sahf
ljmp
pop
push
test
cmp
jmp
mov
lahf
arpl
lret
fcoml
lea
int
mov
push
fdivrl
fwait
or
adc
xor
xchg
icebp
in
andl
xor
loopne
jne
sbb
aas
scas
rcrb
dec
aad
filds
inc
adcl
or
mov
fistps
gs
lretw
stc
test
rclb
repnz
ja
ds
lahf
lret
inc
mov
leave
sbb
mov
cmp
pusha
sub
xor
repnz
pop
xor
jl
mov
jg
fcmovne
cmp
aas
aam
pop
int3
jmp
shl
outsb
mov
cmp
loope
pop
dec
xlat
adc
rolb
test
xchg
outsb
cmp
mov
scas
loop
pop
in
cwtl
fdivrl
sub
mov
xor
mul
or
call
sti
data16
xchg
cmp
push
jle
dec
mov
fcoms
out
pushf
rorl
scas
pushf
outsb
adc
popa
incl
jg
jne
and
jp
cmpsl
ja
int3
enter
mov
and
jmp
jmp
fcmovne
mov
pop
comiss
sbbl
mov
dec
lods
cmp
adc
dec
dec
repnz
out
jne
cmp
pop
stos
pop
jmp
dec
mov
bnd
pop
sbbw
ja
in
pop
and
sbb
cwtl
push
jecxz
test
clc
dec
fcoms
jne
dec
dec
movsb
add
jns
mov
mov
and
insb
mov
xor
rcl
das
cli
mov
outsb
pop
lds
mov
push
sub
push
cltd
sub
aam
lret
adc
add
xor
mov
scas
xchg
adc
lret
mov
pop
xor
mov
cli
and
dec
rclb
or
std
and
leave
pusha
dec
stos
xchg
sbb
xor
pop
add
mov
pop
cltd
push
push
popa
push
outsb
rorb
pop
cmpl
xchg
fwait
mov
cmp
sbb
sub
xchg
mov
xor
mov
adc
into
xor
mov
xor
imul
mov
ljmp
pop
xchg
lret
cli
jle
insl
std
inc
pushf
flds
in
scas
stos
inc
test
and
fisttpll
add
rcrb
cld
sub
test
add
jp
pop
imul
jle
into
jl
jo
fnsave
mov
sbb
sbb
dec
adc
sbb
adc
jnp
sub
dec
jle
xor
sub
jg
add
jnp
lods
iret
lods
inc
push
xor
add
clc
aas
int3
lcall
mov
mov
imul
jp
dec
cmpsb
cmc
push
sbb
les
popa
mov
mov
dec
jg
imul
pop
pusha
jle
aaa
arpl
adc
hlt
mov
repz
ds
mov
lock
cmp
js
pop
mov
and
aas
fildll
or
xor
dec
test
pop
fwait
mov
arpl
cltd
fdivrs
pushf
sti
fstps
cmpsb
mov
ss
movsb
aas
popl
aaa
xchg
pop
pcmpeqw
gs
cli
das
and
out
dec
dec
clc
int3
sbb
pop
out
pop
ljmp
jne
pop
mov
push
and
fdivrs
jnp
mov
decl
mov
cmpsl
ret
adc
outsb
fstpt
sub
jmp
mov
mov
dec
fdivrl
movb
popl
mov
es
and
outsl
js
cwtl
loop
xor
sbb
and
dec
cmp
pop
cmp
loopne
inc
sub
das
xor
fnsave
aas
mov
xchg
pop
push
in
pop
stc
lahf
push
jg
mov
mov
jmp
mov
cmp
sbb
lods
jb
add
nop
inc
jp
mov
fdivs
cmp
mov
dec
dec
mov
cmp
or
dec
sub
jecxz
mov
add
test
test
insb
push
insb
push
push
mov
sarb
loop
cmp
scas
and
sbb
add
inc
orb
jmp
sub
xchg
outsb
ljmp
add
clc
adc
mov
fstpt
cs
inc
push
std
test
mov
rcrb
imul
mov
cmp
jmp
mov
pop
sbb
hlt
sahf
xor
sbb
jb
adc
mov
push
sti
sbb
xchg
mov
jl
sahf
push
sbbb
push
in
pop
pop
mov
int
cli
mov
or
testb
jnp
lods
filds
movsb
mov
push
ss
jne
fisttps
add
ljmp
stos
add
push
sahf
movsl
sub
cmp
cs
test
jmp
rcll
iret
ljmp
xor
xchg
jno
mov
sub
and
mov
ds
push
push
mov
pop
jp
add
push
jmp
add
and
cmp
rolb
and
aam
jg
int
or
ja
inc
incl
lea
jmp
ret
lahf
jnp
xor
pop
or
add
pop
pop
jae
imul
push
subl
jne
fmull
hlt
and
sub
xchg
cwtl
or
push
xor
jmp
xor
test
cli
rorb
adcl
addr16
xchg
daa
xchg
sbbl
mov
mov
inc
fsubs
hlt
fidivl
out
cli
or
mov
js
out
jnp
sub
lret
das
sbbl
sbb
cmp
mov
jmp
mov
pop
cmp
cmp
push
sbb
loop
cmp
mov
stos
pop
int3
xorl
mov
aas
out
cmp
mov
cwtl
dec
retw
mov
xchg
jle
idiv
push
stc
pop
pop
dec
mov
stos
sbb
xor
mov
xchg
dec
push
fsubrp
push
test
sub
xorl
movsb
dec
fldenv
xor
sbb
popa
dec
fwait
roll
adc
cmp
out
mov
cld
jae
cmp
sbb
es
sbb
sub
mov
fcompl
add
and
cmp
sbb
xchg
jg
leave
adc
mov
jns
adc
jecxz
adc
mov
lock
fidivrs
stc
xlat
pop
jp
shll
in
dec
jmp
outsb
int
jl
add
iret
das
frstor
fidivs
dec
in
pop
popf
cmp
into
and
sbb
xlat
push
push
fmull
sub
fnstcw
je
mov
jb
mov
cmpl
out
rol
out
sub
push
or
push
mov
test
fbstp
pop
cmp
mov
mov
out
xor
cwtl
xchg
fcomps
nop
jne
inc
jae
xchg
jl
or
mov
and
pop
xor
adc
mov
jne
dec
ljmp
aad
lahf
add
jno
mov
dec
insb
fsub
xchg
js
and
leave
sub
scas
cwtl
sbb
lcall
or
dec
sbb
pop
call
pushf
xchg
xor
notb
and
clc
sbb
mul
fsubs
jb
sub
movsb
cmp
add
push
jo
pop
xlat
aas
gs
faddl
daa
sub
decl
lds
std
jecxz
test
sti
adc
mov
pop
je
fmul
and
pop
jnp
mov
aam
add
rcrl
cwtl
pop
lret
out
pop
and
js
mov
dec
scas
dec
and
xchg
jmp
dec
mov
xor
mov
add
inc
fidivs
mov
cmp
mov
fs
or
push
daa
sbb
dec
mov
and
add
sbb
mov
std
cwtl
pushf
into
into
sub
mov
cmp
fcompl
jmp
jg
data16
lods
push
xorl
imul
stc
pop
jg
bound
pop
sti
dec
or
mov
push
and
cli
shrl
jmp
stc
or
cmp
and
push
or
insb
std
xchg
js
jle
mov
pop
stc
mov
sbb
flds
ret
add
cwtl
ret
add
shrl
or
xchg
sbb
adc
jae
mov
cmp
ljmp
push
mov
flds
cmc
xchg
jns
test
mov
icebp
push
fdivrs
xor
cmpl
imul
xor
inc
and
movsb
fsubl
fadds
sbb
mov
and
cmc
out
sbb
iret
add
cmp
cmpsl
ljmp
movsb
loop
push
jg
fisubs
xchg
test
das
xor
repnz
push
les
pop
mov
shlb
cmc
lods
mov
xor
lea
or
stos
jno
pushf
fwait
jnp
cli
jbe
jg
adc
sub
mov
sti
loope
xchg
xchg
fbstp
pop
arpl
and
jae
add
pop
and
std
sub
sub
dec
pushf
enter
jae
adc
push
sbb
std
sub
jno
pop
jnp
pop
movsb
insb
fwait
inc
fsubs
push
pop
and
in
lret
sbb
dec
sbb
push
xor
insl
jmp
dec
lcall
push
int3
push
bound
add
stos
push
mov
and
insl
pop
and
ds
dec
cmp
cmp
lret
pop
imul
in
jle
and
pop
xchg
cmp
int3
or
in
pop
lods
ljmp
dec
mov
xor
cld
sbbl
mov
jne
push
pushf
in
pop
xlat
int
mov
pushf
mov
cli
cwtl
jl
inc
imul
xchg
mov
jmp
aas
je
sbb
push
adc
cld
jle
xchg
jnp
sub
data16
pushf
call
lret
lret
imul
cs
stos
xor
or
shr
inc
adc
ja
and
icebp
sbb
xchg
or
xchg
sti
data16
fadd
add
addb
fcompl
filds
adc
xlat
scas
inc
add
insl
cli
jo
cltd
lcall
lret
sbb
out
or
adc
lds
fildl
daa
jp
leave
jecxz
cld
mov
fidivrs
sub
clc
outsb
sarb
xchg
add
jno
movl
mov
add
in
das
pop
movsb
adc
push
xchg
daa
push
lods
jg
dec
cwtl
pop
xor
ds
jo
jl
pop
sbb
cmp
dec
stos
cmp
fadd
add
int3
ret
pop
adc
inc
push
loopne
pop
mov
sub
jmp
ljmp
sub
xor
sbb
lret
fcoms
push
or
dec
andb
sub
mov
mov
out
mov
scas
jno
jb
push
pop
cwtl
iret
cs
mov
xchg
incl
push
xchg
enter
pop
push
sub
adc
adc
rcrl
pushf
inc
jne
fs
aam
ret
popa
sti
cmp
and
out
fisubs
sbb
in
sar
insb
icebp
mov
mov
adc
into
shlb
inc
mov
sbb
call
pop
inc
hlt
xor
outsb
in
mov
pop
mov
pop
leave
and
xchg
pop
std
lods
dec
loope
sub
ja
std
jg
jmp
ret
mov
pop
rolb
inc
clc
pop
cmp
rorb
xchg
push
jle
mov
pop
mov
and
xorl
jmp
daa
jle
pop
cltd
cmp
adc
cli
pusha
dec
dec
lret
fsts
jmp
and
sbb
inc
in
ficoml
gs
sub
cmp
sub
sbbb
repz
fisubs
sbb
pushf
mov
adc
rcll
dec
jae
daa
jnp
fidivrl
popf
xor
repnz
adc
mov
cwtl
popf
pop
arpl
les
jg
inc
cs
mov
lea
lock
inc
daa
ss
or
mov
in
test
jg
mov
fstp
cld
xor
lods
imull
cwtl
ss
xchg
mov
xor
mov
fisubrs
jle
jmp
stos
mov
sarb
jmp
cwtl
outsb
pop
push
adc
jmp
mov
sar
pop
imul
sahf
les
xor
cmp
cmpsb
dec
pushw
lcall
nop
xchg
sti
jl
xchg
repnz
pop
sbb
or
decb
mov
aad
cmp
jae
jne
and
cmp
inc
xchg
mov
cmp
sub
dec
mov
bound
movsb
std
fdivrs
cmpsl
push
pushf
push
mov
leave
lods
cmpsb
je
punpcklwd
sub
mov
mov
pop
xor
mov
sbb
push
out
js
mov
dec
loop
pop
pop
mov
nop
sub
mov
push
or
mov
leave
arpl
and
mov
loope
insb
and
mov
sub
jl
test
xor
lahf
flds
mov
mov
cmp
cs
stc
jnp
outsl
dec
xor
jns
cmp
je
shlb
sbb
rcrl
push
push
xchg
sbb
adc
jae
pop
pop
repz
dec
cli
pop
or
mov
xor
push
sbb
out
out
lea
pop
mov
mov
pop
jg
and
pop
mov
movsl
jbe
dec
in
addl
pop
xchg
enter
imul
out
cmp
mov
jnp
xchg
cli
imul
cmp
sbb
xchg
enter
ss
ljmp
xchg
aad
and
mov
push
pop
push
add
inc
ficoms
mov
addb
sbb
mov
mov
xor
mov
pop
sarl
insb
aas
sbb
fs
cvttps2pi
pushf
orb
pop
sti
jp
out
fcomps
and
rcrl
add
sub
bt
pop
lret
fidivrs
pop
push
lahf
movsb
bound
fwait
push
sti
xchg
inc
in
pop
cld
fnstsw
pop
inc
je
dec
pop
mov
add
out
push
push
jle
popf
pushf
xlat
mov
mov
data16
add
add
pop
lea
ja
ret
adc
icebp
sbb
shlb
inc
sarl
sub
shll
cltd
cmp
out
leave
sub
stos
cmpsl
xchg
mov
xchg
stc
or
aas
aas
movsb
sbb
in
test
pop
adc
xor
mov
sbb
int
mov
loop
xchg
pop
maxps
push
pushf
nop
xorl
cli
ds
jnp
cwtl
pop
jmp
xchg
jmp
stc
xor
popf
adc
push
mov
fldl
lcall
jne
int
mov
mov
sahf
adc
dec
jp
mov
cmpsl
or
call
cmp
cmp
mov
mov
adcb
inc
scas
jecxz
sub
lods
cmc
stos
pushf
jle
adc
testb
dec
dec
inc
sbb
scas
sbb
cld
add
and
fwait
mov
cmpsb
into
lret
subb
stc
jb
pushf
mov
jmp
cwtl
add
xor
lcall
sti
aas
lret
bound
iret
ret
or
repz
mov
mov
pushf
mov
fs
adc
push
cmc
enter
leave
mov
movhps
mov
shlb
and
lds
sbb
pushl
xor
cmp
fwait
mov
pushf
xchg
push
pop
mov
cwtl
outsl
xor
fs
mov
dec
add
cmpsb
add
sbb
sti
xchg
mov
xchg
mov
fidivs
sub
sbb
cmp
sti
loope
push
mov
out
pop
mov
push
test
jg
iret
icebp
repz
scas
ror
pusha
mov
jp
adc
andl
lret
es
movsl
or
dec
push
fcompl
sub
inc
ja
mov
lahf
sub
fildll
jg
dec
xor
xor
inc
xchg
pop
or
mov
test
test
cltd
cmp
dec
dec
sub
sahf
enter
je
mov
lods
pushf
fbld
and
and
mov
xor
data16
test
jle
into
fmulp
imul
jg
fstp
imul
xchg
mov
push
call
cltd
enter
in
mov
or
jb
jns
mov
mov
jmp
imul
cmc
iret
in
and
jns
test
cmp
xchg
mov
mov
inc
mov
push
fcomps
adc
push
jl
fisubrl
push
or
mov
stos
mov
pop
mov
je
adc
int
leave
orl
xorl
lret
xor
fwait
jecxz
stos
bound
ret
out
cmp
inc
mov
pop
push
xchg
add
and
addb
adc
sbb
lods
mov
mov
fisttps
cmpsb
mov
mov
lret
sub
cmp
fsubs
rorl
sarb
adc
jl
cmp
jg
jge
jne
call
pop
cmc
cs
cli
dec
sub
or
cli
es
sbb
test
dec
ljmp
cmp
movsb
mov
test
xchg
jns
fidivrs
in
push
and
xchg
pop
iret
mov
sti
mov
iret
and
pop
jp
mov
inc
repnz
cs
adc
or
shll
pop
sahf
mov
jg
mov
inc
jecxz
test
pop
addb
call
jle
mov
test
sbb
and
icebp
popf
or
hlt
jmp
pop
jbe
and
inc
subl
push
adc
shl
fistps
push
cmp
xchg
cld
jnp
cmpsb
mov
pop
add
enter
jle
dec
maxps
mov
das
imul
dec
adc
mov
cmp
mov
popf
cmpsb
mov
movsl
int3
loopne
cs
sar
int
pop
fdivl
adc
gs
rclb
fstps
mov
imul
out
sbb
mov
stc
loopne
cmp
test
outsl
mov
push
push
and
or
and
dec
cs
aas
mov
out
cld
test
and
cmpsb
pop
shll
fimuls
int3
call
push
lods
or
mov
mov
fmul
mov
les
inc
mov
add
mov
pop
cmc
dec
ficomps
aad
cmp
mov
je
jnp
cmp
sti
mov
fwait
pop
adc
test
sbbl
mov
mov
cld
lock
add
loopne
es
jno
in
icebp
jp
and
cs
cmp
test
lea
mov
xchg
adc
adcb
pop
cmp
bound
dec
jle
push
lea
sbb
dec
jge
cmpsb
sub
xchg
out
je
fistl
out
aas
or
shr
pop
mov
and
mov
faddl
out
inc
rcll
sbb
in
mov
ret
and
sbbl
mov
ss
scas
add
sbb
mov
jnp
popa
mov
imul
pop
push
adc
sbb
mov
pop
inc
jmp
rcrb
cmp
sbb
pop
adc
sbb
dec
je
lahf
ror
in
pop
mov
dec
int3
adc
jg
loope
pop
xchg
data16
enter
lcall
aaa
repz
xchg
sti
push
shll
mov
push
push
xor
cld
into
int3
adc
dec
xchg
fstl
je
test
and
dec
aas
xchg
dec
repz
ret
sub
mov
rcrl
inc
fnstenv
stc
sbbl
pop
sbb
and
movsb
xchg
lods
adc
jo
in
or
mov
jecxz
cmpsb
mov
add
fistpl
xlat
fcoml
fcompl
adc
aas
pop
adc
pop
std
cmpsl
cmp
xor
jbe
add
sbb
icebp
jae
fdivl
test
outsl
mov
mov
jl
or
adc
pop
cli
sbb
movsl
test
xorb
pop
pushf
lods
leave
popa
push
sahf
in
xor
inc
clc
bound
ficoml
xchg
fwait
add
decl
sub
repz
mov
aas
jmp
dec
mov
jge
filds
addr16
adc
add
add
sub
fs
js
ja
push
mov
cmp
dec
add
xor
jge
jno
pop
push
ret
imul
pop
clc
sub
mov
mov
inc
sbb
mov
test
pop
test
or
ja
xchg
push
jne
imul
inc
in
dec
mov
jmp
fcompp
xlat
jg
cwtl
push
popl
jg
cmp
mov
and
icebp
xchg
cmpsl
ja
pop
sub
sub
pop
out
pop
cmp
out
mov
xor
add
jle
mov
sbb
mov
cmp
sarl
jo
repnz
sub
mov
cld
pop
roll
push
mov
fwait
inc
jnp
pushf
insl
mov
mov
pop
test
xchg
popa
clc
jl
pop
cmpsb
pop
push
fimuls
fistpll
sub
mov
sti
adc
je
pop
pop
pop
push
faddl
xchg
fisttpll
push
cmp
fwait
ljmp
sahf
aas
mov
in
mov
jle
mov
js
mov
pop
fnstsw
and
ja
pushf
je
cs
pop
cmp
pop
loope
mov
fdivl
sub
pop
lret
ja
aas
xchg
in
rorb
fisubs
insb
lods
insl
push
aas
sbbb
and
fcmovnu
mov
inc
into
cmpsl
cld
jno
in
jle
mov
mov
shrl
movsb
mov
jg
ret
add
push
fidivrs
or
fisubl
rolb
push
sub
negb
dec
icebp
incl
dec
in
cmpsl
in
cltd
idivl
iret
orb
and
mov
stos
sbb
xchg
push
xor
pop
xor
mov
dec
cmp
pop
orb
test
mov
inc
mov
outsb
pop
push
outsb
ja
test
daa
mov
pop
xchg
aas
xorl
addr16
lret
aas
and
dec
pop
jl
leave
sub
in
js
xchg
cwtl
pusha
mov
cmp
mov
int
scas
sti
out
js,pn
jb
mov
aas
mov
movsb
test
sbb
das
mov
mov
insb
pop
cmp
cmpsl
add
pushf
sahf
and
scas
outsl
repz
mov
sti
push
push
sahf
xor
add
jne
aas
cmp
sbb
sub
jbe
jae
ficompl
fimuls
aad
movsl
outsb
lret
stos
popf
jnp
sbb
and
fldl
outsb
xchg
fistpll
lahf
pop
scas
test
fdivl
into
mov
jl
lcall
lea
mov
adc
xchg
popf
push
adc
loop
int
loop
inc
and
jo
out
xchg
cwtl
fidivrs
push
sbb
cmp
mov
leave
mov
dec
into
pushf
and
fldl
push
enter
xchg
mov
daa
cvtps2pd
fs
ret
sub
inc
rorl
out
mov
xchg
cwtl
sbb
movsb
pop
js
sti
xor
pop
dec
sbbl
cmpsl
ficompl
test
adc
xchg
in
push
xchg
fdivr
int
call
clc
sbb
mov
pop
xchg
xchg
mov
adc
insb
sbb
outsb
popf
inc
inc
xor
lea
int3
adc
and
aas
mov
aaa
cmp
mov
lock
iret
rcl
fiadds
mov
ret
mov
or
mov
xchg
pushf
dec
add
aad
mov
mov
ss
mov
cmpsb
cmpsb
inc
cld
push
test
adc
add
scas
cltd
cmp
and
push
stos
cmp
lret
xchg
and
sbb
xchg
and
mov
sti
out
int3
testb
mov
or
push
jns
cwtl
aas
scas
in
pushf
mov
stc
inc
mov
ror
sub
loopne
sbb
test
sbb
pop
lret
push
mov
jns
add
and
aaa
out
in
mov
leave
test
and
or
test
loope
jl
mov
leave
dec
loop
int3
mov
shll
xor
imul
sbb
stos
xchg
sbb
mov
sbb
movsl
fadds
inc
ds
adc
inc
pop
inc
decl
push
stos
loopne
xchg
in
xor
pushf
movsb
fwait
mov
cmc
mov
idivb
lret
stc
call
inc
inc
xchg
or
insb
lods
jo
lock
fildl
mov
dec
ficompl
clc
aaa
repnz
dec
mov
fdivr
scas
ret
sbb
outsl
inc
jns
pushf
adc
rol
repz
dec
adc
sbb
mov
fisubs
xchg
in
leave
push
push
inc
mov
out
push
mov
dec
adc
cli
dec
jns
inc
pop
arpl
xchg
and
idivb
and
xor
jecxz
sti
lcall
adc
icebp
lods
sbb
outsl
dec
cmpsl
mov
fs
pop
lea
dec
push
js
test
mov
pop
dec
sti
push
mov
jg
pop
mov
imulb
inc
pop
jae
adc
jle
negb
pop
push
sub
jbe
sub
scas
mov
js
fisubs
ja
add
and
scas
data16
movsl
lahf
jns
lods
cmp
rorb
push
mov
mov
fs
jle
push
inc
cli
movsl
fwait
dec
shll
ffree
lock
jecxz
pop
push
mov
cmp
dec
xchg
jmp
scas
push
jecxz
add
mov
push
lcall
inc
push
sbb
dec
jmp
ret
mov
and
push
repz
mov
rcrl
jb
jl
jno
stos
lea
lods
clc
imul
or
pop
imul
push
pop
push
sbb
cmpsl
sti
inc
insb
add
lods
decb
sbb
rol
adc
fstpl
cli
sbb
jns
or
adc
aam
sahf
iret
cmp
pushf
iret
ret
xchg
push
fbstp
pop
adc
mov
sbb
xor
push
cltd
inc
mov
adc
jl
and
and
jg
adc
pop
adc
or
sbb
lcall
xchg
push
insl
js
aas
cmp
pushl
je
popa
aaa
xchg
movsb
jp
test
clc
push
mull
and
leave
adc
mov
or
mov
popa
in
cmpl
mov
xchg
mov
hlt
in
mov
xchg
rcrl
fwait
or
loope
sbb
sub
add
cmp
xchg
mov
pushf
mov
xchg
dec
add
adc
fistps
fld
pop
test
outsb
dec
sahf
jo
push
xchg
daa
cmpsl
sbb
xor
loopne
popf
cmpsb
push
cmpsl
sti
dec
hlt
push
cwtl
jl
and
or
mov
add
lds
xchg
inc
dec
fidivrs
test
outsl
cli
cwtl
in
in
xchg
aas
fnsave
jne
mov
push
adc
out
pop
outsb
lea
mov
add
fistpll
nop
push
cmpsb
mov
fprem1
popf
push
jae
inc
andb
scas
mov
xchg
mov
rcr
test
sbb
dec
ds
push
and
data16
pop
mov
pop
test
testl
dec
xchg
fadds
inc
incb
cmp
out
stos
xchg
popl
sbb
fisubs
les
ror
rcrl
mov
scas
pop
or
test
sub
lret
xor
mov
movsb
sti
enter
push
fstpt
pop
sbb
std
push
sbb
adc
repnz
jb
pop
mov
push
lea
mov
insl
jmp
mov
adc
mov
and
loope
sti
or
jmp
scas
mov
adc
fcompl
mov
and
sbb
and
jp
push
fwait
or
sub
pop
cli
sub
ret
adc
cld
jae
fmuls
ljmp
psubusw
out
mov
adc
addl
stc
faddl
mov
gs
mov
leave
out
std
cmp
lods
pop
pop
push
mov
lret
xchg
rorb
add
scas
cmp
aad
mov
sbb
inc
ficompl
cmp
sarl
lret
ficomps
out
inc
enter
mov
orl
stc
xchg
dec
aam
dec
push
sub
mov
stos
mov
and
je
add
xor
mov
ds
jo
fstl
mov
fidivs
lret
mov
push
dec
movsb
pop
out
mov
cli
movsl
daa
loop
aaa
sbb
xor
test
xchg
sub
xchg
inc
adc
mov
test
pop
dec
xor
cmp
icebp
sbb
lock
cmpsl
sbb
cmp
xlat
lods
stos
mov
mov
xchg
sub
daa
cmp
cmp
cmp
arpl
jg
aad
xor
ret
mov
pushl
aas
roll
push
mov
mov
ss
push
cmpl
mov
ret
cmp
int
call
push
std
stc
pop
jl
insl
daa
cltd
sub
dec
faddl
push
insl
xor
out
cmpsb
cmp
leave
add
mull
pop
nop
roll
inc
inc
dec
out
out
sbb
push
jge
xchg
in
flds
mov
cwtl
mov
fstl
lahf
inc
int3
addl
lock
xchg
sub
stc
cwtl
xchg
xor
xchg
bswap
ret
jmp
inc
lahf
cmp
xlat
pop
jmp
cld
aas
popf
sbb
test
pop
adc
mov
lcall
cmp
mov
mov
push
cmc
pop
pop
aas
loopne
lods
filds
cld
dec
scas
lea
cmp
mov
aas
adc
pop
shrb
pushf
mov
pop
xor
sbb
lret
cmp
ficomps
mov
push
mov
xchg
and
in
sbb
daa
cmpsb
pop
lcall
xchg
pop
movsl
mov
fs
iret
rcrb
mov
jnp
scas
and
cmp
lock
daa
cmp
add
dec
pop
push
lods
or
push
call
add
mov
xchg
lret
cmp
in
sub
dec
pop
int
push
clc
sub
cmp
fmull
and
sbb
sub
cs
loop
lahf
mov
pop
adc
sbb
mov
ja,pn
imul
adc
out
xchg
out
ficoms
mov
xor
push
scas
mov
adc
out
pop
inc
aas
jge
mov
lret
cmpl
testb
daa
leave
fsts
xor
adc
movsl
jg
aaa
lahf
sub
in
pop
xchg
cmp
stc
rcrb
adc
hlt
fidivrl
lret
sbb
sahf
gs
in
cwtl
pop
mov
sbb
cmc
or
call
mov
dec
clc
sub
sub
dec
stos
aas
and
mov
dec
fdivl
fstpt
addl
js
nop
mov
pushf
jg
adc
daa
stos
pop
mov
dec
imul
push
inc
adc
aam
mov
jg
mov
sbb
and
cmp
adc
jmp
mov
cmpl
or
xorb
lcall
jbe
mov
mov
xlat
adc
pop
cli
inc
pop
push
cwtl
push
jnp
adc
add
ja
mov
in
mov
mov
add
clc
bound
int3
fsubl
in
fdivs
jnp
ljmp
in
pop
popf
nop
push
inc
jge
inc
ret
popf
mov
xor
mov
lods
xor
dec
mov
adc
push
xchg
adc
ds
sub
sub
pop
or
std
js
out
out
popa
int3
call
test
xlat
inc
adc
xchg
pop
or
cmp
sahf
out
xchg
xchg
sahf
jnp
std
push
pop
jle
aas
sbb
xchg
int
mov
push
jge
imul
cwtl
xchg
and
in
sahf
xchg
adc
mov
cs
lock
cmc
fadds
adc
imul
hlt
xor
pop
out
shl
pop
cltd
pusha
xchg
jnp
outsb
sahf
aad
mov
ret
mov
pop
pushf
or
insl
addr16
les
loope
push
call
es
mov
adc
lds
cmp
cmp
loopne
and
roll
std
leave
jg
cmpb
mov
sbb
jb
sahf
jg
xchg
jbe
in
mov
sbb
jo
mov
mov
clc
dec
fisubl
and
scas
inc
add
sbb
insl
sti
pop
inc
xchg
cltd
int3
sbb
je
int
cmp
out
jns
inc
xor
stos
fsubrl
frstor
cmpsb
in
inc
jp
adc
je
bound
pop
fdivl
pop
in
jg,pn
ficoms
or
in
lods
pusha
sbb
mov
call
xchg
fsubr
pop
popf
les
stc
test
mov
xchg
adcl
pop
dec
mov
jge
or
mov
lahf
mov
loop
lret
out
and
mov
jle
dec
mov
mov
in
mov
fdivr
xor
pop
sbb
jbe
adc
mov
cwtl
bound
cmp
add
dec
xchg
repnz
sub
mov
lahf
dec
xchg
cld
sbb
setle
dec
mov
adc
outsb
testl
xor
outsb
icebp
jle
std
cli
sbb
inc
add
sub
jl
adc
sbb
and
ss
jp
dec
in
cld
mov
mov
je
orl
outsb
cwtl
lret
gs
cmp
mov
fisttps
ljmp
test
xor
test
daa
cmp
or
mov
push
repnz
push
pop
mov
lods
cld
pop
shrl
in
inc
push
push
cld
cmp
cmp
inc
fdivrl
int3
mov
mov
sub
bound
mov
xchg
xchg
sti
xor
and
fdivrs
jle
into
push
daa
xchg
sti
xlat
arpl
inc
testb
and
cmp
mov
rcr
scas
fwait
jnp
rcl
int
push
jbe
xchg
incl
inc
sbb
iret
repnz
inc
pushf
mov
rol
aas
jnp
jg
pop
sbb
push
lds
mov
shrb
rorb
ss
cmpsl
jnp
inc
pop
inc
push
pop
outsl
outsl
adc
mov
add
mov
rorl
in
push
mov
cli
cwtl
push
aaa
fsts
jecxz
popf
add
dec
mov
push
test
insb
pop
movsl
rolb
xor
mov
pop
scas
shll
inc
in
jnp
sub
leave
adc
loope
pop
mov
loop
mov
sbb
jle
jl
and
ret
lret
add
aas
add
adc
add
in
and
lods
xchg
sbb
mov
lock
push
scas
out
lock
cmp
incl
lods
cmp
stc
out
xchg
fwait
hlt
xchg
out
push
sbb
push
lods
xor
sub
jae
outsb
push
pop
mov
lahf
daa
pop
fdivrl
and
pop
rcr
movsb
in
inc
mov
jno
fisttpl
int
and
mov
jmp
ret
pop
jns
sub
imul
or
scas
xor
mov
fcmovu
dec
inc
mov
add
adc
es
sbb
pop
adcb
testb
and
pushf
icebp
cmp
dec
lcall
sbb
fists
aaa
js
ss
dec
jle
clc
and
pop
test
sbb
inc
sbb
or
mov
jl
ljmp
adc
adc
jb
pop
loop
addr16
cmpsl
or
inc
out
fdivrl
and
push
movsl
filds
andl
mov
fwait
pop
into
sti
and
sti
push
sbb
mov
into
or
mov
cmp
mov
xor
mov
add
sub
jle
or
fimuls
das
sub
mov
test
fwait
sub
je
push
sbb
sbb
sbb
adc
sub
lahf
cmc
pop
and
mov
cs
xchg
pop
leave
mov
adcl
xchg
outsl
icebp
xchg
or
sbb
icebp
out
fstl
test
je
and
pop
ret
cmp
jp
je
adc
add
into
cld
cmp
les
sarl
sbb
aam
cmp
inc
fldenv
mov
jle
leave
xor
fstps
jb
ja
in
lret
ja
jmp
dec
cmp
loope
jnp
dec
xchg
cmc
jns
mov
jecxz
sbb
dec
rcr
and
mov
roll
icebp
push
xchg
ljmp
mov
in
mov
stos
out
mov
in
fwait
sub
dec
cmpl
jle
popf
sub
jno
push
call
js
xor
mov
movsb
cli
cmp
adc
rcr
and
mov
xchg
add
in
or
fsubp
shrl
test
sarb
scas
fildl
inc
jno
or
pop
mov
xor
mov
sub
jo
cmpsb
push
and
repnz
fs
and
push
loop
mov
sbb
add
icebp
shll
cmpsl
xor
sahf
in
cmp
jg
aaa
loop
pop
push
cwtl
cmp
scas
mov
cmp
orb
loope
or
sti
mov
push
and
mov
dec
pop
jno
adc
jo
cmp
out
ret
into
int
stos
adc
pop
int3
stos
mov
push
sahf
and
pop
les
sbb
mov
jns
flds
gs
repz
and
je
test
pop
mov
fisttpll
cltd
push
sbb
jmp
ret
fsubp
jae
cmpsb
adc
sbb
ljmp
fld
int3
int
mov
cld
shlb
cli
sarl
mov
mov
mov
data16
push
inc
xchg
iret
and
leave
mov
sbb
jg
dec
insb
inc
dec
call
ss
mov
sub
cmp
clc
movsl
sbb
enter
and
xchg
add
mov
sbb
cmpsl
popf
add
sti
mov
repnz
mov
pop
imul
rcrl
leave
shlb
cltd
jno
inc
cld
outsb
jno
mov
jnp
xor
je
fxch
ret
je
insl
dec
sub
sbb
xchg
cmp
push
fldenv
push
push
mov
aad
mov
scas
cmpsb
jp
dec
cld
jmp
lods
test
lock
stos
jecxz
bsr
mov
outsl
outsb
movsl
mov
ss
dec
jmp
sti
mov
pop
js
mov
xchg
mov
mov
scas
mov
sti
cs
mov
push
jmp
into
pop
push
fisubrs
adc
clc
inc
pushf
adc
repz
jnp
inc
daa
xlat
ds
adc
fcompl
sbbl
cmpsl
dec
pop
lock
sbb
sub
mov
lods
mov
jp
sbb
mov
fs
adc
pushf
jl
gs
lds
negl
mov
mov
mov
sbb
aad
adc
mov
sub
adc
loope
mov
dec
mov
adc
pushf
jle
inc
std
push
mov
fs
pop
jb
jle
mov
arpl
mov
data16
sub
xchg
xlat
sbb
rol
leave
push
push
pushf
add
inc
out
and
fadds
mov
jns
in
xchg
pop
mov
pop
adc
enter
nop
cmc
cwtl
dec
lods
adc
jg
nop
pop
add
xchg
pop
in
icebp
incl
push
lock
mov
mov
cmp
jne
js
nop
fwait
cwtl
andb
sbbl
mov
into
fmuls
push
shrl
jne
mov
daa
iret
adc
mov
lret
or
repz
sub
rcr
test
les
stos
and
bound
lret
push
add
gs
inc
cwtl
lods
add
aam
arpl
mov
mov
mov
sbb
gs
ss
mov
test
cmp
xchg
icebp
arpl
inc
rolb
and
pop
pop
pop
ret
mov
icebp
stc
pop
or
nop
shll
sti
mov
cmpsl
into
sub
jle
or
movsb
sub
aaa
xor
repz
mov
mov
push
push
lea
int
aad
and
ljmp
push
js
and
xchg
jnp
pushf
push
lds
inc
mov
clc
or
mov
and
push
jbe
inc
pop
test
jnp
sbb
sub
cmp
ret
inc
daa
jns
fsubrl
ds
insl
mov
mov
cli
incl
stos
cmp
scas
pushw
lea
cli
out
fcomps
pushf
mov
negl
loopne
sbb
repz
sarl
sahf
and
or
mov
cmp
enter
mov
inc
sti
adc
sbb
cld
arpl
lods
mov
push
jp
push
xchg
cmp
fnstsw
mov
and
cld
fcomps
xor
fs
addb
push
leave
or
cmp
push
addr16
or
xchg
int3
mov
add
movsb
adc
sbb
mov
sbb
xor
call
or
pop
mov
push
mov
or
inc
cmp
outsl
pop
add
add
push
in
sbb
push
pop
mov
ret
xchg
cmp
xchg
cmp
mov
mov
xchg
stos
sub
fcomps
cmp
sbb
mov
sub
xlat
xor
cld
cmp
cmp
imul
pop
sub
cmp
sbb
leave
rorb
xchg
sti
shlb
js
add
hlt
pop
jb
mov
lret
sbb
add
mov
push
pop
dec
les
data16
fisubrs
xor
or
aaa
cmp
data16
inc
mov
sti
lea
lods
jp
inc
ffree
sbb
cld
fcoms
lahf
loopne
cmpsb
xchg
pop
and
cmpsb
repz
xchg
push
hlt
fsubrs
mov
js
inc
out
pop
ds
pop
cmp
xchg
clc
in
jp
dec
xchg
faddp
pop
pop
xchg
cld
fimull
push
push
int
mov
add
xor
jl
test
pop
movsl
cwtl
and
dec
or
sti
sbb
aas
inc
dec
roll
cltd
pop
aas
dec
push
cld
add
cmp
xchg
sti
ljmp
mov
pop
jae
data16
pushf
adc
aaa
mov
test
test
or
jbe
daa
pop
jae
inc
das
xor
xlat
jo
xchg
mov
or
push
pushf
pop
sub
std
stos
fistl
gs
mov
or
xor
pop
xchg
mov
fs
sbb
sti
lock
stos
ss
pop
test
cmp
push
leave
add
shrb
je
cwtl
aad
xchg
jbe
cmp
rcr
jne
repz
sbb
push
ret
mov
cs
xor
stos
inc
xorl
ljmp
int
aas
inc
jl
movsl
dec
sbb
fidivrs
scas
cmc
ds
sub
push
loopne
pop
aad
and
stos
cmp
aad
adc
cmp
es
pushf
lods
roll
ret
or
mov
lods
and
outsl
pop
mov
in
push
mov
xchg
cli
mov
sti
cs
push
mov
adc
mov
cld
pop
ja
dec
aad
jnp
cmp
mov
push
arpl
inc
jp
inc
mov
sbb
rclb
add
aas
scas
mov
loop
lret
pushf
xor
out
sbb
xor
out
pop
mov
roll
mov
lret
nop
pop
sub
push
hlt
cwtl
or
scas
jae
dec
lret
mov
xchg
push
lcall
fstps
lahf
push
and
fdivrl
icebp
int
hlt
jle
xchg
enter
xor
mov
cmp
sub
mov
ret
in
and
outsb
xor
xchg
fistps
test
mov
stc
mov
pusha
cmp
out
jmp
mov
or
adc
cmp
sbb
jmp
jae
jnp
addr16
push
adc
jg
cld
xor
hlt
adc
ret
jp
mov
rclb
mov
xchg
data16
movsb
push
sti
imul
jp
cs
out
pop
test
mov
add
sahf
les
js
imull
ret
jb
mov
jo
mov
lret
sbb
jne
add
ljmp
mov
cwtl
jns
or
mov
inc
cli
xor
inc
mov
jnp
outsb
jl
xor
mov
mov
sbb
and
cmp
in
nop
into
jl
call
add
cltd
xor
out
int3
jo
es
mov
mov
and
stos
mov
pop
pop
bnd
fs
sbb
stos
dec
cwtl
pushf
add
les
xchg
fldl
mov
cwtl
cmp
fwait
pop
je
faddp
fisttpll
ss
cmovo
inc
add
outsl
jl
or
jle
pop
scas
cmc
add
stos
sahf
cmp
cmp
mov
push
adc
shrl
aaa
repz
inc
les
mov
mov
mov
dec
es
stc
js
ds
dec
pop
aad
cmp
mov
icebp
cld
cs
jmp
leave
push
adc
inc
fwait
mov
clc
adc
dec
xchg
sbb
outsb
pushf
cli
gs
sub
cmp
cmp
outsb
in
loope
adc
out
xchg
mov
dec
cmp
lret
add
ret
pop
enter
push
les
ljmp
sub
movsb
stos
cmp
stc
mov
cmpsl
js
mov
out
cmpsl
dec
jnp
popf
leave
jne
push
mov
enter
adcb
cli
repz
in
mov
mov
insb
or
adc
mov
jo
les
scas
or
adc
pushf
faddp
gs
lahf
inc
push
mov
mov
pop
push
adc
fistpll
fmull
cs
dec
negb
out
mov
add
xorb
mov
cmp
test
scas
mov
jbe
cwtl
lret
fstp
cmp
sbb
and
push
sbb
or
out
jmp
sub
add
cmp
add
out
mov
pusha
inc
dec
pop
lret
movsl
jne
in
sub
arpl
cmp
cltd
sarb
scas
iret
and
cmp
xchg
or
aad
mov
mov
or
popf
add
aaa
in
pop
clc
adc
ret
jb
adc
stos
cld
cmp
mov
pop
cmpsl
xor
pop
push
lret
idivl
cltd
loope
mov
divl
cwtl
dec
pop
fidivrs
rol
and
mov
lret
mov
cmp
push
pushf
mov
aam
pop
dec
arpl
mov
out
jmp
mov
int
cwtl
mov
stos
inc
sub
in
mov
scas
push
mov
lahf
cmc
fildl
stc
in
sti
in
mov
jb
aam
sub
repz
sti
mov
adc
dec
xor
call
jmp
pop
popf
pop
imul
andb
sbb
sub
and
insl
sbbb
sti
adc
loopne
fisttpl
ds
iret
jb
dec
lret
pop
ja
loope
je
cmp
cld
fldl
cmpsl
popa
sahf
lahf
pushf
or
outsl
add
jnp
test
sbb
into
and
test
ja
lret
mov
dec
js
mov
divl
pop
adc
add
xchg
jl
jno
push
repnz
xchg
mov
out
insb
stc
jbe
mov
int
bound
cmp
pop
xchg
cmp
fucomp
ret
cmpsl
mov
jo
dec
mov
pop
mov
xor
aaa
add
mov
pushf
in
out
xchg
or
arpl
lods
lds
jae
xchg
inc
cmpb
adc
shll
and
roll
in
cmp
imul
mov
mov
jne
out
sbb
jmp
pop
stos
fsub
mov
pop
lock
leave
jne
jg
sub
mov
ljmp
inc
out
jae
jg
data16
pop
pop
cwtl
scas
mov
mov
int
imull
sti
fisubrl
and
sbb
iret
imul
dec
mov
xor
shll
inc
faddp
sub
sub
rcl
pop
mov
jnp
fcoml
iret
cmp
loop
std
push
jbe
and
jecxz
sbb
out
cli
mov
mov
mov
cld
mov
fidivrs
hlt
enter
and
xlat
push
xorb
sbb
iret
fbld
inc
data16
popl
pop
dec
inc
icebp
int3
fucom
push
outsb
pop
pop
movsb
cwtl
inc
loopne
jg
mov
cmp
nop
lea
imul
cmova
mov
outsb
pushf
sar
es
pop
xlat
out
jl
jg
push
mov
rorl
mov
and
std
cwtl
mov
aas
rcrb
xor
sub
rcll
sbb
push
jge
pop
cli
push
pop
stos
fiaddl
data16
mov
sub
sub
jl
sbbl
pushf
push
mov
and
cmp
negl
imul
xlat
xor
mov
pushf
cmc
repnz
imul
sbb
ss
fmuls
pop
mov
lahf
mov
shrb
cli
xchg
mov
cwtl
cmpsb
xchg
imul
fwait
mov
jge
mov
nop
and
fdivrl
ja
pop
sbb
inc
movsb
pop
sub
jg
sbb
dec
cmp
xor
sbb
leave
cmc
cmp
or
cmp
ret
adc
jb
lret
mov
leave
mov
xchg
adc
pop
insb
jo
fadds
xchg
sbb
and
and
or
pop
mov
xor
cli
mov
lret
add
rcll
adc
sub
mul
dec
mov
in
aas
test
cmpsl
in
insl
xchg
push
fmull
lahf
sbbl
xchg
pop
push
imul
sub
push
mov
aas
ljmp
dec
jo
fdivl
add
jge
push
icebp
movsl
decl
ss
xchg
inc
mov
sub
push
mov
int
scas
jp
ja
orl
mov
mov
test
jl
push
jle
dec
ja
sbb
mov
cwtl
mov
fcomps
loope
sbb
adc
pop
cld
ja
dec
test
sbbb
xchg
pop
shlb
push
mov
mov
mov
mov
shlb
loope
dec
adcl
pop
push
movsl
stos
ljmp
jno
lcall
pop
ja
sub
repnz
fmuls
movsl
test
mov
xor
jb
mov
mov
decb
test
stos
dec
xchg
cli
mov
add
or
fs
popf
outsb
pop
dec
cmpsl
mov
pop
mov
out
mov
les
fnstsw
dec
mov
cltd
pop
scas
adc
dec
int
mov
shlb
adc
enter
cwtl
lds
dec
push
incb
sahf
lcall
repz
and
es
aaa
push
pop
out
and
int3
int3
subb
jmp
icebp
jge
adc
push
ljmp
ljmp
pop
inc
xchg
jae
jecxz
subb
xchg
test
and
xor
aad
lret
lret
imul
mov
std
cmp
and
addl
jl
ljmp
pop
mov
sbbb
call
lret
pop
mov
add
cmc
xchg
ss
jmp
cmp
mov
pushf
shrl
and
push
fldt
je
in
add
xchg
into
loope
pop
rorb
jmp
ljmp
cwtl
push
shrl
mov
mov
cwtl
arpl
inc
call
mov
mov
sbb
incb
xchg
sarl
ja
sub
xchg
fadds
mov
sbb
sub
jno
xchg
or
mov
mov
or
popa
or
out
lcall
xlat
cltd
dec
pop
loop
mov
test
pop
test
xlat
adc
pcmpgtb
dec
xchg
cmp
das
addr16
outsl
sbb
stc
fwait
jnp
jge
lock
jne
out
push
jmp
fcmovbe
ljmp
outsl
xchg
mov
cmpb
into
aas
jp
fistl
enter
fcoml
cli
fdivs
mov
and
push
inc
repz
pop
ds
cmp
xor
stos
fdivl
mov
iret
xchg
or
adc
loope
cmpsb
lcall
mov
push
js
push
sti
out
out
push
fnstcw
inc
xlat
push
mov
jnp
in
cmp
mov
fwait
jne
inc
cltd
jb
into
mov
xchg
jae
adc
pop
js
inc
mov
inc
mov
sub
xor
in
int
xchg
sbb
andl
sbb
push
sub
ret
and
sub
jne
xor
sahf
out
fdivl
cwtl
add
push
xlat
push
in
scas
cmp
xor
or
mov
pop
or
adc
fsubl
and
jno
iret
lret
jo
sti
rcl
mov
sub
scas
fsts
sub
lods
in
fistl
and
cmpb
sbb
mov
sbb
mov
cmp
cmp
xor
jnp
clc
push
inc
xchg
pop
clc
fidivrl
pop
les
pop
fwait
mov
cli
dec
mov
pop
xor
xchg
push
daa
in
or
insb
cmpsb
dec
mov
jne
jb
push
fisubl
in
stc
cwtl
out
push
fnstcw
mov
xchg
ja
inc
rclb
sti
inc
pop
or
scas
push
mov
xchg
cwtl
in
jg
ja
push
lret
outsb
sahf
repz
mov
dec
mov
test
sarl
es
xchg
sbb
arpl
sub
adcb
and
ret
sahf
rep
push
fiaddl
je
fistl
or
call
cmp
scas
inc
cmp
decl
scas
push
xchg
dec
sub
adc
gs
stos
inc
fs
jle
jne
jecxz
aaa
ljmp
mov
pop
push
dec
jnp
pop
movsl
dec
cli
sbb
out
xchg
sub
aad
divl
add
mov
pop
pop
lods
xchg
dec
add
jnp
lret
inc
pop
jno
out
pop
aam
sarl
ss
sub
mov
mov
lock
mov
fstl
sbb
dec
adc
add
adc
lods
mov
mov
inc
lea
mov
adcl
movsl
mov
xchg
lods
outsb
pop
jno
mov
sti
outsl
add
sbb
lock
pushf
inc
add
xchg
mov
sbb
faddp
push
fadds
pushf
mov
dec
lcall
xor
in
cld
sbb
test
xchg
cmp
inc
sete
pushf
xlat
int3
imull
movsl
sbb
sbb
test
cmp
push
pusha
imul
push
jmp
cwtl
cmpsl
inc
fstps
dec
mov
xor
pop
xchg
push
rorb
cli
xchg
sbb
sub
push
xor
mov
xchg
leave
pop
pop
xchg
inc
nop
pop
leave
daa
fxch
sbb
mov
ljmp
or
stc
cmp
mov
push
add
sbb
push
loop
jg
mov
adc
push
push
xchg
notl
adc
arpl
enter
sahf
outsb
pushf
test
subl
cmp
ds
aaa
in
push
mov
fwait
jnp
jno
mov
and
mov
lahf
aaa
add
fcmovbe
test
jb
mov
inc
dec
xchg
repz
mov
lea
inc
ss
aas
test
fadds
push
mov
push
sbb
leave
cld
test
push
xchg
sbb
sbb
ja
addl
and
mov
pop
repz
dec
pop
ficompl
cwtl
and
mov
cmpsb
jae
mov
rolb
lahf
cmp
sti
stos
inc
lret
out
add
adc
outsb
dec
in
pop
push
jle
fsubp
xchg
sub
push
jle
leave
loope
les
lea
and
pop
cmp
dec
bnd
pop
mov
cld
sbbb
xchg
xor
loope
dec
fcmovu
into
and
scas
xchg
jge
pop
fwait
lret
mov
aad
cmc
fnstsw
jg
mov
or
dec
push
push
mov
repnz
fdivr
je
outsb
sar
mov
or
inc
test
popf
fwait
xchg
and
mov
notl
fadd
out
push
pop
xor
adc
sbb
inc
inc
fmuls
and
add
ret
out
sbb
lea
inc
call
lahf
mov
cld
test
out
sarl
incl
fimull
push
test
inc
repz
push
mov
add
cmp
les
aas
xchg
rorl
sbb
jnp
jbe
pushf
and
lods
fildll
jo
test
roll
ljmp
pop
mov
nop
push
iret
push
xor
cmpsb
cmp
xlat
das
scas
jg
jl
push
out
int3
jb
fs
adc
mov
leave
dec
popf
mov
mov
int3
sbb
adc
out
stos
aad
jle
push
mov
pusha
ret
cmp
xchg
pop
or
int
xor
xchg
jl
addr16
xchg
cmp
or
pop
jg
jb
pop
sub
or
inc
dec
je
xchg
mov
ds
clc
cli
clc
adc
mov
ds
popf
sarb
sbb
add
pop
scas
aas
mov
dec
loop
sub
sahf
cld
shufps
lcall
pop
inc
ficompl
hlt
daa
sbb
inc
xchg
pusha
mov
in
inc
fiaddl
fwait
sbb
mov
jle
insl
cmpb
lea
xor
mov
cmp
das
xorl
lods
scas
inc
insl
push
jle
mov
xchg
add
sti
popa
jns
out
dec
cmp
pop
mov
lods
mov
pop
sbb
dec
pop
movsb
mov
aam
inc
inc
lahf
cwtl
sub
push
pop
ret
add
jle
out
lret
cmp
not
inc
pop
sub
loopne
and
pushf
aad
rcr
out
jmp
inc
aam
sbb
jnp
mov
sysenter
xchg
dec
stos
ffreep
ds
cld
cmp
push
cmpsb
sub
sbb
into
add
gs
inc
adc
pop
jg
jecxz
xchg
or
sub
mov
in
mov
lock
xor
inc
iret
fiaddl
icebp
sbb
js
cs
testl
pop
inc
ljmp
add
imul
out
fdivr
and
inc
orl
push
adc
cwtl
es
ss
into
enter
push
push
mov
ja
repz
inc
fadds
aaa
pop
pop
stos
xchg
fs
shl
pop
scas
mov
dec
lret
jle
inc
std
cltd
stos
add
das
pop
pop
mov
or
mov
into
insb
frstor
outsl
lods
adc
js
push
sub
pop
or
fdivl
sub
jno
sub
ja
outsb
cmpl
or
test
pushf
push
jp
cmp
push
cli
jb
push
sub
push
call
rcll
add
push
int3
arpl
mov
and
xorb
outsl
movsl
aas
jns
insl
cmp
sub
jb
adc
incl
pop
ds
sar
push
adc
lods
scas
mov
inc
je,pt
adc
pop
xlat
shll
scas
cmp
and
and
jl
cli
pop
fwait
aas
push
inc
jns
test
movsl
loope
jecxz
rcll
adc
inc
iret
mov
dec
aad
sbb
cmp
rorl
popa
jmp
add
in
and
mov
lahf
and
in
sbb
es
sahf
addl
sbb
or
push
adc
in
xchg
data16
pop
into
jl
repnz
push
sbb
call
adc
pop
call
sbb
lahf
aam
cmp
stc
ret
or
cmc
mov
into
insb
adc
mov
mov
push
mov
lcall
and
outsb
push
jo
jge
icebp
cwtl
dec
mov
xchg
or
aad
cwtl
lods
ret
sarl
dec
xchg
dec
or
imulb
fwait
push
sbb
idivl
mov
jo
jg
pop
mov
aad
xchg
js
lret
rcrb
stos
lcall
mov
iret
test
sarb
mov
test
fwait
push
mov
aas
sub
push
gs
fiadds
mov
sarb
dec
adc
mov
es
testb
push
mov
push
xchg
xlat
dec
pushf
mov
cld
adcl
pop
aas
push
fsubl
cld
cmp
testl
push
add
xor
mov
rcrb
or
xchg
mov
push
add
sbb
jmp
loope
push
jae
push
daa
xorb
push
jbe
lcall
mov
popa
sbb
xchg
xchg
xchg
mov
fs
fwait
push
jnp
mov
jmp
aas
xchg
mov
sub
xorl
inc
add
iret
cmp
fdivl
xchg
cmp
mov
addr16
push
pop
mov
add
sbb
mov
pop
dec
popl
aas
in
cwtl
hlt
arpl
aas
rdtsc
push
hlt
cmpsb
cmp
sub
movsl
pop
rorb
jle
fmul
sbb
ret
mov
popa
push
mov
pop
scas
xchg
int
mov
pop
in
imul
fimuls
mov
cwtl
pop
ljmp
jg
shll
cs
pop
jge
jns
jnp
out
push
mov
rclb
pop
jo
sub
rolb
test
pop
rcrb
xchg
cld
mov
and
push
xor
jge
fisubrl
dec
and
mov
xchg
cmp
and
mov
mov
scas
int3
mov
mov
jno
pop
cmc
in
fwait
clc
or
adc
fadds
pop
dec
xchg
jne
movsl
aas
test
push
xchg
mov
pop
cmp
jno
aad
xchg
sub
out
rol
push
lret
rorb
pop
aad
nop
mov
lret
nop
mov
aad
daa
rclb
jb
out
out
push
outsb
int
xchg
pushf
mov
push
stos
cvtdq2ps
pop
push
push
insl
cmp
out
xchg
je
sahf
mov
or
jnp
sti
aam
addr16
mov
outsb
fwait
cs
sbb
in
xchg
fdivl
adc
mov
aaa
aas
sbb
in
xchg
sbb
cmp
sub
loop
mov
das
data16
adc
popf
call
mov
and
jnp
fdivs
jmp
adc
mov
push
add
loope
lea
pop
mov
push
dec
in
pusha
push
sub
xchg
or
mov
cmp
cmp
cmpsl
mov
scas
push
outsl
movsb
mov
add
jg
cmp
into
call
push
aas
mov
jmp
bound
cmp
cmp
pop
int3
lret
repz
inc
rorb
pusha
jge
lret
sub
cmp
les
pop
adc
cmpsl
mov
xchg
and
mov
fsubrs
test
mov
xor
imul
dec
xor
mov
sub
pushf
jmp
and
add
add
xor
negb
fimull
xchg
push
int3
jb
and
aad
popf
push
add
aad
fwait
rorb
movsl
lret
fadds
lret
pusha
pop
or
fstps
pop
sub
push
cli
mov
test
in
sub
aas
xor
push
mov
leave
fcmove
mov
mov
xchg
addr16
fsubl
xchg
sti
mov
mov
in
aaa
jge,pt
bound
dec
pop
cmp
jg
fsubs
push
mov
leave
sbb
or
inc
adc
cmpl
je
ffreep
aas
lods
mov
and
jb
bound
fsubr
xor
and
xor
ljmp
roll
fmuls
jge
xor
inc
or
pop
mov
pop
jae
cli
out
pop
popf
leave
in
sti
push
outsb
stc
mov
pop
mov
or
add
mov
pop
mov
fistpl
xchg
sahf
aas
inc
inc
aas
ficompl
jb
pop
inc
test
sbb
dec
insl
inc
push
stc
dec
stc
in
mov
sbb
and
ret
sbb
dec
mov
xor
pop
mov
adc
mov
pop
test
sbb
aam
or
popf
stos
es
sub
aas
mov
pop
ficompl
cwtl
lea
cmpsl
cwtl
fmull
pop
mov
jo
adc
lds
aad
orl
pop
sbb
inc
sbbb
aas
imul
jbe
cmovnp
lahf
pop
call
add
ret
xlat
sub
ss
sbb
mov
mov
xor
adcl
out
jo
in
in
pop
jle
add
pop
in
imul
cmpsl
cs
xchg
jbe
add
xor
cmp
xor
jle
and
fsubrl
jb
out
fadds
lret
ficompl
cld
mov
mov
adc
inc
icebp
mov
pop
and
sahf
ss
js
fsubl
mov
std
sub
ret
mov
jg
or
push
loope
scas
mov
mov
dec
cld
inc
mov
push
cmpsl
cltd
leave
and
mov
jg
out
bound
clc
out
pop
out
das
sbb
inc
mov
cmp
sahf
sti
cmpsl
pop
int3
push
mov
out
add
cmp
mov
mov
repz
pop
xor
mov
inc
mov
mov
es
mov
dec
push
jl
xorb
mov
sbbl
sbb
sarb
cmp
pushf
aas
xchg
outsb
jle
dec
mov
clc
jp
popa
out
fadds
sub
sbb
mov
out
mov
lds
cmpl
mov
std
mov
pop
ret
push
outsb
aad
mov
mov
lock
sbb
fcmove
fdivl
jge
cltd
std
call
push
sbb
in
xor
xchg
nop
arpl
xchg
pop
add
fmulp
pop
jno
push
test
push
mov
push
xchg
jmp
inc
push
xchg
stc
mov
xchg
aam
in
cwtl
andb
popf
pop
ficomps
sub
enter
loopne
fisttps
sbb
mov
mov
fsubrl
enter
pop
outsl
jl
mov
out
fisttpl
sub
lds
shll
daa
in
dec
mov
fdiv
aaa
inc
mov
shll
cmp
fnsave
pushf
fidivrl
in
push
aaa
cli
push
bswap
leave
loopne
ss
cld
inc
aam
xchg
mov
mov
je
lock
jl
into
sbb
lods
fmull
aas
adc
call
jmp
pop
adcb
push
push
je
xchg
gs
pusha
xor
inc
arpl
cltd
mov
mov
in
hlt
jg
shlb
mov
dec
push
cmp
mov
hlt
fcoms
das
rclb
sbbl
dec
dec
data16
push
fdivr
sti
fcoml
pop
call
ret
and
loop
pop
cmp
xchg
sbb
adc
hlt
outsb
js
jg
stc
sbb
cmpsb
pop
mov
mov
jg
std
mov
cld
ret
cmp
pop
ror
sbb
xor
aas
testb
fcomps
fsubrl
cmp
insl
fistpll
xor
pop
cwtl
mov
xchg
pop
cmp
mov
loop
divl
notb
pop
pop
or
inc
xchg
sbb
es
xor
ficompl
xor
pop
inc
inc
sti
mov
cwtl
mov
pop
pushf
repnz
insl
lea
out
insb
sub
fdivrl
les
inc
push
mov
aad
push
jae
cmp
aaa
mov
pusha
jle
cmp
movsb
xorb
xchg
add
push
scas
lea
aaa
cwtl
inc
mov
add
outsb
and
mov
sub
outsb
mov
sbb
cmp
ss
cmpsb
pop
sti
xlat
or
ljmp
or
hlt
mov
jbe
add
ss
mov
xchg
fadd
std
enter
scas
das
push
sbb
sbb
aas
cmp
mov
adc
cmp
cmp
pop
cwtl
clc
push
incl
leave
ja
repz
push
test
inc
div
sub
xlat
roll
scas
jnp
mov
jle
pop
or
pop
js
pop
adc
cmp
rcrl
out
or
je
and
pop
pushf
sbbb
insl
adc
fnstsw
or
pop
mov
pusha
push
fmull
loope
mov
sti
sbb
mov
fistl
fimuls
out
stos
lahf
or
sbb
jg
cmp
inc
cltd
jnp
inc
icebp
cmc
bound
lcall
pop
jae
jae
jo
iret
push
jle
adc
mov
enter
jle
or
push
jae
push
mov
testl
ret
pop
xor
sbb
dec
dec
or
pop
cli
call
push
test
jg
xchg
inc
adcl
lea
mov
ss
mov
adc
dec
xor
mov
and
jmp
adc
pop
mov
mov
jno
lods
data16
mov
clc
sbb
jmp
pop
pop
sbb
cmp
or
push
jne
lret
mov
mov
cwtl
aas
dec
fwait
xchg
fcomp
xor
push
ljmp
cwtl
push
fmull
pop
aas
negb
jne
into
cmp
sub
push
jle
add
fbld
mov
loope
pop
xor
jg
or
ja
mov
or
cmp
push
pop
inc
lahf
cmp
adc
test
in
mov
repz
mov
mov
aam
mov
sub
pop
sbb
xchg
cmp
jg
sti
pushf
lds
sbb
and
jge
lds
sbb
sbb
fnsave
std
movsb
js
lea
pushf
lcall
das
loop
lods
aas
dec
cmp
in
sub
mov
or
aas
ret
push
push
push
or
cmp
pop
dec
outsb
mov
push
jns
std
pop
mov
popf
and
inc
cs
pop
push
xchg
sub
ds
pushf
inc
mov
sub
fsubl
and
mov
dec
xor
fdivrs
fimull
add
fs
cmp
sub
mov
jg
sbb
and
mov
das
loop
stos
dec
xor
sahf
jo
pushf
das
jmp
lock
sbb
mov
and
dec
sub
leave
push
sbb
sub
push
mov
or
sbbl
and
and
pop
ljmp
sub
fadds
or
pop
out
push
shlb
sub
mov
insl
push
push
cmp
dec
dec
pop
push
outsb
adc
fisubl
mov
jb
pop
dec
sub
sub
nop
jnp
sbb
xchg
push
fdivrl
push
inc
mov
sub
mov
and
xchg
jmp
das
test
inc
mov
mov
add
aas
mov
mov
insb
out
lock
cltd
fwait
mov
mov
cmp
mov
mov
push
mull
dec
outsb
repz
pop
xor
test
sbb
fcmovnu
jno
xor
pop
cli
fwait
xchg
aaa
aad
ret
push
pop
cli
gs
jb
orb
fdivrl
cs
fcom
fdivrp
pop
sbb
imul
mov
les
and
xchg
dec
outsb
xchg
addr16
pushf
pop
es
sbb
and
mov
dec
ret
sti
out
jne
aam
adc
push
jae
out
mov
add
sbb
inc
cltd
dec
pop
jmp
ds
push
xchg
xchg
sub
lea
movsb
adc
or
jo
add
or
push
icebp
push
lock
sbbl
popw
mov
sbb
add
fsubr
mov
loopne
mov
and
dec
test
dec
out
adc
cmp
add
xor
shrl
cli
lods
or
stos
int3
push
cli
rcll
test
in
mov
jo
adc
mov
jp
in
fldcw
push
dec
inc
mov
mov
push
test
stc
inc
sbb
sbb
pop
add
ficomps
cmp
mov
loope
add
stc
js
std
cmp
ret
adc
stos
sub
pop
mov
cmp
scas
decl
in
cmp
mov
arpl
sti
sbb
jle
in
mov
in
vpcomuw
jb
cmp
sbb
jg
pusha
test
mov
out
dec
pop
mov
sub
sbb
das
scas
adc
dec
fsubrl
fdiv
sahf
cltd
xchg
push
mov
nop
fistps
mov
out
xor
inc
daa
ror
pop
fstpl
or
push
xor
cld
jp
in
cmp
pop
out
cli
dec
push
sub
sahf
ffree
mov
inc
mov
push
push
in
mov
aad
sbb
inc
adc
lock
scas
fldpi
cmpsb
xlat
mov
fmul
in
push
out
jno
bound
mov
outsb
xchg
mov
add
fwait
jnp
add
ds
nop
out
sub
mov
pop
xchg
sbb
and
or
clc
inc
mov
sbb
test
lods
mov
inc
dec
dec
mov
fwait
cwtl
jbe,pt
lods
fldenv
rolb
cld
cmp
mov
data16
gs
fildll
xchg
sbb
xor
adc
jmp
pop
int3
inc
nop
mov
adcb
jns
dec
push
mov
adc
jp
mov
shr
inc
ja
jmp
outsb
xchg
sbb
sarb
rcrl
imul
addr16
push
ds
cs
jno
cmpb
ret
cmp
decb
test
pop
or
jg
cltd
jge
js
mov
cwtl
lahf
out
fnstsw
mov
inc
popf
mov
lahf
pushf
adc
push
fwait
mov
mov
or
mov
and
ds
mov
push
mov
rcrb
pushf
mov
divb
jecxz
push
stc
out
lods
jg
pushf
sub
adc
and
lcall
cmp
test
adc
mov
push
int3
push
pop
push
jb
mov
mov
cmp
fmull
cs
mov
mov
xlat
jnp
iret
xchg
dec
sahf
xlat
fistl
inc
in
mov
enter
pop
inc
push
lcall
and
jno
or
mov
cmp
sub
cli
loope
movsb
or
push
cld
out
fwait
cli
lret
fmull
lret
cmpsb
test
pop
data16
mov
jo
sahf
inc
fmull
jne
imul
ret
aas
xchg
fwait
test
aas
adc
inc
loope
add
adc
jmp
cltd
sbb
sub
shlb
out
adc
test
cmp
pusha
pop
sbb
mov
mov
mov
xor
enter
mov
push
mov
ja
mov
or
fldcw
pop
fstpl
stc
dec
jae
je
into
movsb
fwait
cmp
and
jno
fsubl
outsb
test
repz
jno
imul
cwtl
ret
test
fdivrl
stc
push
inc
add
and
test
rcr
jns
xor
fcomps
sti
sbbb
cmc
inc
push
incl
int3
adc
std
sbbl
fstpl
lods
int
jbe
push
xchg
std
das
popa
cmc
xchg
cld
outsl
mov
call
mov
dec
dec
cmp
icebp
cwtl
mov
je
sbb
jmp
sarb
push
or
xchg
mov
cmp
into
mov
push
sbbb
arpl
jl
stos
pop
lret
ret
inc
dec
hlt
or
fnstsw
cmpsb
sahf
std
mov
push
fcoml
bswap
sbb
sarl
cmpsl
cmp
neg
push
mov
lahf
mov
test
mov
pop
dec
push
repz
mov
daa
cmp
nop
and
and
cmp
jg
in
lods
pop
push
das
sbb
jg
les
sub
mov
popa
scas
ja
fwait
mov
ficoml
loopne
jg
inc
shll
mov
lret
lds
je
or
jecxz
test
cmp
test
and
stc
dec
inc
lret
jno
sti
cmovge
movb
lcall
mov
or
call
cmpsl
lahf
bound
mov
fstpt
loopne
sti
mov
adc
xchg
outsl
adcl
sub
sub
and
sbb
mov
sbb
mov
xor
cmpb
cs
or
insb
dec
fwait
cmp
arpl
pop
clc
fadds
insl
pop
lret
pop
and
xchg
mov
movsl
stos
lahf
mov
cwtl
mov
push
std
push
cmp
push
dec
addr16
test
int
enter
pop
pop
dec
ror
sub
inc
adc
xor
sub
cmp
rcl
mov
mov
hlt
sbb
cmc
cli
sub
xchg
data16
adc
pop
int
or
mov
and
addl
pop
jae
pop
popa
stos
mov
mov
std
lods
repnz
leave
leave
iret
push
or
fnstsw
aas
call
int
sbb
repnz
inc
shlb
movsb
aas
add
js
mov
loopne
test
pop
mov
aas
les
xchg
add
in
xchg
fnsave
xor
jle
mov
fcmovu
mov
sub
pop
xchg
and
mov
mov
fdivl
rcr
mov
imul
jbe
stos
ss
aad
pushf
repz
iret
div
mov
test
dec
rcrb
xchg
push
rcll
insb
es
daa
and
insb
int3
sbb
pusha
ss
addr16
lret
pushf
sarl
sub
add
push
iret
out
ja
xlat
push
pop
sbb
push
xchg
ret
int
hlt
sub
dec
je
sbb
lret
das
jg
icebp
mov
xchg
mov
dec
hlt
mov
aas
pop
fstl
mov
jno
stc
orl
pop
dec
and
cwtl
aas
xchg
dec
push
dec
aas
test
cwtl
xor
jne
pop
arpl
and
data16
sbb
xchg
pop
into
and
in
lods
lods
cmp
fsubl
movsb
cmc
pushf
adc
inc
or
call
fildl
jns
ficomps
and
cmp
ljmp
out
sbb
adc
fwait
repnz
mov
repz
sbb
rcrl
cld
xlat
push
mov
mov
scas
mov
ror
popa
xchg
cmc
js
cld
test
out
popf
dec
mov
sbb
jecxz
in
mov
gs
push
xlat
mov
filds
mov
stos
cmp
jle
jnp
jns
adc
fldcw
in
and
mov
dec
sbb
in
jmp
push
mov
inc
cwtl
jb
cmp
sub
pop
gs
sbb
xor
jnp
mov
push
add
pop
in
jg
hlt
repnz
fwait
pushf
pop
clc
dec
adc
icebp
dec
test
in
int
out
nop
adc
loope
mov
sarb
ds
push
mov
jnp
sub
xor
lret
test
mov
fildl
mov
mov
mulb
pop
enter
sbb
pop
cli
lods
aas
fadds
imul
mov
adc
push
js
cs
dec
pop
out
pop
mov
jmp
adc
aam
sahf
pop
aad
adc
pop
repz
lea
push
cmpsb
adc
loop
cmp
pop
jno
xor
inc
mov
or
inc
cmpsl
pop
mov
xor
insb
mov
sti
xchg
dec
popa
fisubrl
sbb
cmpsl
sbb
cmp
sahf
test
cli
adc
nop
dec
push
mov
divl
cltd
cmp
daa
adc
inc
addr16
rcr
mov
push
pop
sbb
inc
enter
pop
push
jbe
aaa
movl
sti
mov
iret
pop
and
jb
push
mov
sti
outsb
and
pop
enter
pop
scas
lret
jg
into
shl
pop
loopne
mov
jle
lds
sbb
cwtl
les
xchg
ret
iret
push
inc
fildl
popa
or
scas
cmc
ljmp
jg
or
pop
imul
and
fwait
jg
sbb
xchg
sbb
xchg
pop
arpl
or
sahf
lcall
mull
pop
shrb
and
cmp
fstpl
cwtl
inc
fs
addl
dec
test
pop
outsb
push
mov
pop
mov
mov
or
push
pop
xor
in
mov
xchg
xchg
sti
scas
in
mov
sbb
inc
stc
int3
pushf
adc
mov
push
addr16
pop
sub
movsl
mov
xchg
loopne
adc
xchg
loope
jno
jns
call
add
insl
shlb
ljmp
adc
mov
test
fsubl
xor
arpl
mov
subl
pusha
repz
mov
addr16
clc
aad
pop
bound
cmpsl
cli
inc
or
push
push
fcomp
mov
inc
push
mov
inc
mov
pushl
jge
test
je
je
aam
sub
mov
sti
scas
sub
mov
pop
imul
lea
mov
jg
lea
sahf
sbb
leave
push
adc
cmc
sbb
lea
test
and
es
inc
jne
imul
pop
fwait
cmp
xchg
aaa
cmp
xchg
fadds
lret
ljmp
cmp
in
imul
pop
inc
decb
cmp
jne
xchg
cltd
cmp
inc
decb
in
or
pop
lahf
out
dec
mov
jno
and
mov
or
icebp
add
jae
test
into
lods
cmp
cmp
in
sbb
cld
arpl
fmul
inc
sub
ljmp
mov
xor
adc
jp
xor
cli
jno
dec
addr16
ss
imul
divb
test
jp
jno
movsl
cmp
inc
xor
and
jo
jns
lock
sbbb
pushf
std
loopne
jo
mov
pop
aam
popa
xor
js
mov
outsb
scas
inc
out
xchg
outsb
mov
nop
cmp
dec
jmp
sbb
leave
sbb
mov
or
sahf
stos
test
jne
push
smsw
movsb
imul
jno
dec
pop
jbe
flds
cli
cwtl
movsb
sarb
sub
repz
inc
popa
sub
xchg
out
sbb
xchg
cmc
loopne
mov
roll
in
mov
sub
mov
enter
inc
je
mov
push
cltd
aad
xor
push
jmp
je
jb
mov
bound
js
push
mov
incl
adc
gs
mov
pop
mov
ja
lret
xchg
jnp
add
dec
lea
mov
addr16
or
inc
out
js
xorl
sbb
aas
cmp
mov
mov
cli
into
adc
inc
mov
sub
loope
iret
adc
adc
lcall
jne
and
inc
popf
out
pushf
mov
add
sbb
jns
mov
adc
pop
test
cmp
popf
cwtl
inc
mov
add
adc
rcl
cwtl
dec
mov
cmp
or
push
loopne
pop
sbb
push
adc
aaa
or
ss
jno
fldenv
mov
outsb
sbb
xchg
pop
clc
xchg
sti
cs
repz
test
mov
jle
out
push
or
clc
pop
cmpsb
mov
or
aas
mov
xchg
scas
or
xchg
sti
mov
call
push
push
xor
pop
fistl
not
jg
mov
outsb
movsb
adc
add
push
movl
lds
pop
sarb
cmp
sub
fsts
and
std
mov
es
pop
mov
sub
mov
mov
or
rcrb
xor
fsubr
sti
mov
es
leave
add
pop
mov
out
push
pop
jle
or
sub
mov
gs
mov
or
cld
aad
in
adc
xchg
ret
sub
pop
pop
xchg
jae
fcomp
pop
or
and
and
negb
pop
in
xchg
and
lcall
push
or
pop
inc
lret
fwait
in
dec
aas
out
fadd
push
dec
jo
sbb
cs
cmp
fldl
mov
scas
or
jl
inc
hlt
sub
ds
aas
cwtl
fildl
cmp
adc
pop
cmpsb
cmp
jg
pop
lds
jns
push
xchg
jnp
push
fiaddl
mov
repz
dec
out
out
fdivr
push
mov
in
enter
sbb
pop
mov
mov
hlt
fdivrs
out
mov
faddp
sbb
lods
cmp
xchg
sahf
out
mov
adc
xchg
fidivs
insb
cmp
add
iret
mov
je
mov
ror
icebp
jl
pop
cmp
adc
and
push
out
fmuls
hlt
add
inc
sbb
mov
sahf
pop
mov
and
test
push
cmp
xlat
mov
rcrb
loopne
push
jle
fs
insb
xchg
push
mov
sbb
pop
add
cmp
xchg
rorl
mov
mov
data16
adc
jg
add
mov
rcr
fimull
int3
xchg
push
jecxz
add
cmc
sub
call
data16
mov
jb
and
adc
sbb
ror
add
aaa
sbb
lret
cwtl
jb
push
sbb
mov
pop
inc
xchg
inc
clc
jg
shrb
xchg
pop
dec
loop
pop
faddp
into
jno
inc
cmp
mov
ret
sbbl
sahf
cmpsl
mov
mov
hlt
sub
loope
sbb
daa
repnz
jo
push
pushf
pop
fsubrs
jecxz
sub
sbb
mov
rcr
cli
or
adc
in
je
push
cmp
insb
sub
add
sbb
mov
addl
sub
mov
fs
jno
cmpsb
cmp
cmp
mov
xorl
pushf
sti
add
jl
xchg
sbb
fwait
pop
fidivrl
dec
add
pop
fcoml
dec
and
js
fldenv
pop
enter
pop
pop
adc
out
daa
and
fisubrs
adc
pop
ffree
int3
and
call
test
pop
cmp
movsl
sbb
cmp
loop
and
test
cmpsb
xor
mov
in
rol
divb
fsub
inc
neg
mov
or
lret
sub
or
adc
ljmp
jmp
mov
pusha
test
dec
add
gs
js
aaa
fwait
cwtl
push
hlt
and
dec
mov
lahf
in
mov
mov
pop
mov
mov
test
xor
ss
fdivr
xchg
sbb
mov
add
push
pop
ret
mov
sti
out
ror
push
jle
mov
sbb
incb
fmul
popa
or
push
adc
jg
cli
jecxz
jp
fsub
je
pop
dec
out
pop
cwtl
adc
mov
jge
lds
loop,pt
into
lea
adc
sti
add
push
adc
in
cmp
add
andb
add
cmpsl
popa
imul
xchg
mov
inc
pop
inc
or
mov
ss
jns
xchg
sti
loopne
mull
jmp
mov
xor
mov
repnz
inc
int
sbb
jmp
xor
test
fnstsw
aas
jae
pop
jno
lret
arpl
insl
mov
or
and
cwtl
int
decl
pop
and
mov
jae
insl
xchg
mov
pop
jae
adc
sub
pushf
and
mov
adc
cmp
mov
arpl
cld
in
xchg
je
sub
icebp
jl
jae
mov
jo
xchg
pushf
sbb
sub
stc
cmpb
xchg
sbb
mov
stos
xchg
mov
xor
and
out
out
stos
lea
push
xor
mov
cli
lods
aad
stos
in
mov
cmp
inc
cmp
cmp
pop
fwait
movsb
aad
pushf
or
fs
int3
stos
loopne
sti
sub
scas
jno
test
mov
cwtl
frstor
stc
stc
jae
jbe
or
mov
pop
hlt
lea
push
sub
cwtl
pop
in
fs
cmp
xchg
pop
jbe
jae
frstor
orps
fisubl
leave
mov
pop
cmp
pop
ret
dec
cmpsl
mov
in
adc
fcoms
fsubrs
sub
ja
cmc
pushf
push
hlt
pop
sbbl
mov
dec
out
outsb
push
pop
sub
mov
lahf
jno
pop
cmp
mov
arpl
or
mov
sbb
add
push
daa
stc
cmp
nop
mov
scas
jecxz
pop
xlat
dec
gs
mov
fisttps
enter
sahf
fildl
test
jno
sahf
mov
aad
mov
dec
lcall
push
sbb
lods
jnp
orl
sbb
push
adc
aad
mov
cmp
pop
insl
iret
aas
sahf
pop
pop
lcall
sbb
mov
repz
and
jp
fcoms
int3
int3
add
bound
push
push
xchg
pop
fimull
mov
cmp
cs
adc
xor
fsubs
mov
int3
sbb
stc
cmp
aas
xor
pop
stc
mov
out
and
cmp
dec
xchg
pop
add
repnz
xchg
aad
cwtl
mov
jne
je
call
sbb
mov
data16
xchg
in
pop
mov
sub
dec
sbb
scas
mov
jp
pop
into
push
or
dec
outsb
pop
cltd
mov
sbb
fistpl
mov
mov
push
pop
rorb
ljmp
push
jno
mov
or
cli
sbb
shlb
fwait
in
subl
int
inc
andb
scas
or
sub
add
int
addr16
sbb
outsl
mov
arpl
fdivs
lock
push
adc
fs
ds
mov
into
xor
jns
scas
jmp
int
pushf
roll
jp
out
mov
pop
aaa
test
dec
pop
push
daa
sbb
pop
sub
js
outsb
mov
in
push
into
fdivl
cmp
and
add
and
jp
xorb
add
iret
stc
add
inc
out
sarl
jnp
lret
in
pop
and
sub
stc
daa
lss
sub
push
mov
fsubrl
mov
or
mov
jns
in
aas
mov
leave
mov
cli
inc
insl
pop
lods
mov
test
cmp
loope
std
push
pop
test
jecxz
xchg
jb
xchg
fisubl
sub
mov
and
mov
cltd
sti
scas
fsubl
mov
lahf
movsb
add
push
jle
ds
and
leave
data16
iret
xor
nop
pop
dec
imull
or
mov
inc
xor
ja
jb
mov
das
xchg
out
xchg
test
or
jnp
xor
jl
push
inc
repz
inc
fmul
imul
mov
cmp
mov
hlt
mov
test
pop
ss
aam
inc
idivl
es
gs
stos
mov
out
xchg
pop
mov
cli
mov
inc
sub
pop
movsl
mov
mov
addl
xchg
mov
mov
jg
pop
pop
into
ds
xchg
cld
push
mov
popa
cld
addb
push
js
arpl
sbb
pop
mov
pop
push
mov
jp
scas
mov
push
popa
lret
xlat
xor
and
rcrl
movsl
mov
popa
addl
xor
rcll
cmpb
shlb
or
mov
jmp
mov
jge
sahf
sahf
sub
fsubs
cmpsl
mov
sahf
mov
jp
sahf
daa
inc
xchg
mov
mov
dec
mov
push
arpl
je
push
das
jno
lds
add
jp
dec
xchg
xlat
adcl
scas
sub
das
in
arpl
jnp
adc
mov
sbb
dec
fstps
inc
fcompl
lahf
push
inc
gs
pop
sbb
ljmp
cli
int
push
jbe
dec
into
pop
cmp
lds
and
scas
inc
dec
xlat
jns
push
xchg
or
sbb
or
cwtl
jnp
push
je
add
andb
xchg
shlb
cmp
adc
test
mov
mov
or
mov
adc
push
mov
add
pop
lods
lock
pop
mov
cmp
das
dec
cld
mov
icebp
mov
and
xchg
mov
out
add
mov
adc
mov
cmp
in
dec
pop
mov
add
xchg
xchg
cmpsl
push
fwait
orl
adc
cmp
sbb
std
shrb
fsubrp
cwtl
push
xor
inc
outsb
cli
sar
test
lods
aaa
or
xlat
fwait
popf
aas
std
into
add
mov
das
popl
fdivs
mov
daa
jb
popa
pop
adc
pop
inc
lods
fistpl
sbb
inc
sbb
mov
mov
inc
hlt
mov
repnz
xor
dec
movsb
icebp
sarb
push
xor
jb
shr
out
pop
data16
and
mov
xchg
mov
fdivr
adc
cld
sarl
sub
mov
es
in
into
adc
popa
mov
push
fdivl
and
aaa
and
sbb
xchg
fcoms
pop
lret
sar
test
add
stc
mov
fs
icebp
and
popf
fprem1
mov
pop
push
lea
mov
cmpb
push
lock
scas
xchg
mov
xor
flds
sbb
mov
outsl
jmp
sbb
gs
mov
jge
adc
fstpt
sbb
xchg
push
cmp
push
and
andb
or
xchg
stos
popa
clc
dec
movsb
or
fnstsw
jecxz
cwtl
xlat
in
add
pop
fisubs
out
or
push
ds
call
dec
es
adc
push
cmp
shlb
mov
clc
pop
pusha
lods
dec
adc
mov
sbb
inc
add
mov
clc
xor
push
sub
sar
test
sarb
mov
dec
cmpsb
cwtl
xchg
mov
push
inc
loop
sbbl
lock
pushf
cwtl
fcomps
pushf
or
fidivrl
movsb
aas
les
stos
fwait
call
mov
xchg
mov
push
pushf
into
inc
shl
cmp
xchg
sub
test
xor
fsubrs
nop
xor
lret
add
pop
jle
inc
cmpsl
sti
in
in
sub
add
outsl
iret
adc
mov
xchg
lcall
rcrb
test
fwait
outsl
sbb
mov
mov
and
sub
sbb
pop
mov
add
pop
push
pushf
stc
mov
push
outsl
mov
sbb
sbb
scas
pop
lahf
jnp
sarb
xor
sub
cmp
sbb
jmp
aas
test
cmpsb
js
or
lret
scas
add
cmpb
insl
or
push
icebp
cmp
clc
mov
sbb
bound
mov
mov
lds
mov
mov
out
cmpsl
jg
mov
test
mov
test
mov
lods
pop
nop
jae
inc
sub
rol
js,pt
dec
sbb
cltd
bound
jp
xchg
sub
leave
sarl
movsb
pop
mov
fcomi
fadds
je
pop
jle
sti
pushf
cltd
gs
sbb
cld
fsubrs
lret
popf
push
jp
push
or
mov
addr16
das
movsb
dec
mov
roll
xchg
addl
push
rorb
push
rclb
sti
pop
push
pushf
fistpl
in
int
jbe
mov
inc
in
rorb
pop
outsb
in
pop
or
or
xchg
adc
inc
pushf
sbb
xor
and
sbb
insb
or
sbb
sar
jg
das
jne
aas
mov
mov
add
fcoms
xor
out
imul
mov
cmpsb
and
dec
adcl
cli
xchg
jmp
movsl
adcb
sbb
enter
jae
insl
mov
lds
push
mov
adc
dec
xchg
cmp
ja
push
dec
mov
sbb
fldt
mov
aam
out
sub
aad
imul
sbb
mov
aad
out
xor
imull
lods
iret
mov
pop
push
mov
sahf
dec
or
xlat
call
gs
dec
lcall
mov
fcomi
mov
decb
xchg
cmp
cli
stc
data16
nop
pop
dec
xor
mov
jno
push
mov
mov
fsubrs
jno
es
adc
mov
dec
push
stos
pop
mov
mov
into
repnz
adc
js
hlt
lcall
ljmp
into
and
add
jecxz
mov
test
push
fsubr
fistpl
push
cli
loopne
xchg
push
lret
push
mov
mov
lds
ret
fwait
push
push
fwait
or
test
mov
aas
and
add
xchg
sbb
xchg
add
or
mov
clc
js
adc
jo
mov
xchg
xchg
or
stos
rclb
jns
std
pop
incb
leave
lods
into
push
or
and
pusha
fs
mov
jno
fcoms
cmp
sbb
push
andl
adc
sbb
xchg
pop
sub
das
xorl
test
je
sub
je
jle
dec
pushf
add
sbb
repnz
mov
in
daa
rcrl
es
jae
mov
iret
sti
mov
pop
fs
sbb
loope
sub
sub
ds
in
mov
jge
adc
fdivs
xchg
cmp
lods
outsb
mov
cld
stos
push
iret
or
sbbb
cmp
sbb
repz
xor
and
je
mov
test
mov
insb
lea
jle
mov
sub
sarb
loopne
lods
xchg
mov
jg
cli
loope
push
stc
pop
jl
sub
pop
cmp
fstpl
cmp
aas
sbbb
mov
mov
bound
cs
mov
jmp
cwtl
mov
pop
pop
ds
pop
cmp
xor
jo
sti
lock
jno
push
mov
lahf
cli
sbb
js
dec
int3
push
loopne
pushf
cwtl
push
cmp
inc
mov
clc
ss
dec
roll
call
popa
sbb
or
jne
int
add
mov
jp
lahf
fwait
add
sub
loopne
fadds
mov
cmp
inc
xchg
leave
jae
test
xchg
xchg
insl
mov
cmp
adc
out
stos
sbbl
fdivr
jmp
jg
push
cmp
sub
loop
andl
and
rcrl
lahf
ja
fmull
enter
stos
cmp
clc
out
fwait
or
mov
lea
and
push
int
xchg
jo
push
inc
bound
std
fsubs
add
jo
outsb
pop
scas
mov
fs
inc
sarb
jns
lcall
cmpsb
dec
pop
or
subl
push
fdivs
lret
cmpsl
inc
or
or
arpl
xchg
mov
dec
shrl
jo
lret
faddl
aaa
mov
imull
sbb
sbb
cwtl
jnp
cmp
jp
fimuls
fldenv
sbb
aad
xor
int3
sbb
jecxz
movsl
and
jmp
out
sbb
addr16
out
mov
movsb
inc
aas
dec
fcoms
hlt
lret
or
popf
sbb
sub
addr16
pushf
out
mov
add
orb
ret
jge
push
fwait
push
mov
aam
sbbb
ljmp
imul
arpl
inc
cmc
pop
cmc
fisubrl
xorl
mov
xlat
lcall
jno
jbe
cmpsl
cltd
add
push
mov
call
loopne
dec
jns
xlat
sub
jl
push
push
adc
in
pop
jne
aam
cld
std
loopne
in
test
sub
jp,pt
xor
ljmp
mov
add
lret
std
outsb
enter
xor
loope
enter
xor
inc
cmp
test
loope
into
ljmp
cmp
jle
outsb
or
incl
cmp
ja
mov
jmp
xor
rsm
mov
decb
jae
aam
cwtl
push
pop
out
outsb
xor
pop
jp
mov
lcall
xor
xchg
mov
pop
push
arpl
mov
adc
sub
outsl
daa
mov
xor
add
mov
aam
push
cmp
dec
mov
and
in
cld
dec
out
pop
mov
bound
add
dec
enter
out
fsubrs
ds
pop
fdivrs
movsl
mov
clc
mov
sbb
fwait
or
push
daa
sbb
cli
cs
jno
test
popf
insl
lods
addl
or
pop
mov
fldcw
mov
arpl
xchg
sti
imul
mov
sti
scas
loopne
mov
dec
mov
in
mov
mov
mov
cmc
je
mov
into
das
ffreep
jle
dec
test
rep
insb
cli
insb
dec
add
mov
or
pop
lcall
pop
leave
and
lahf
sti
inc
ss
shrb
pop
out
xchg
pushf
frstor
dec
in
int
orl
outsl
in
push
sarb
aas
lea
sti
mov
repnz
ret
das
pop
movsb
cli
pop
cmp
jno
cltd
aad
fs
inc
mov
add
cmpsb
mov
jnp
mov
mov
dec
push
push
mov
cli
adc
in
addb
jg
dec
rcrl
xchg
xchg
loop
aad
xchg
and
mov
scas
cmp
imul
xchg
cwtl
sbb
cwtl
adc
inc
or
pop
lahf
and
push
jle
mov
scas
sub
int3
or
mov
add
in
fstpl
sahf
aaa
mov
sbb
add
test
jb
cmc
pop
sbb
mov
dec
xchg
scas
js
xchg
jnp
in
xchg
loope
inc
fadd
inc
and
fisubrl
xchg
sti
outsb
push
out
pop
les
mov
jo
ja
cmp
push
sbb
stos
adc
cwtl
mov
int3
sahf
xchg
cmp
adc
ret
jns
lods
jecxz
cmp
out
out
pop
push
jnp
add
lea
and
mov
push
inc
xor
pop
gs
pusha
sbb
mov
sbb
jbe
xchg
jo
fistpll
mov
lret
inc
mov
shll
mov
mov
inc
mov
movb
lea
insl
das
mov
in
sbb
mov
and
mov
adc
push
jno
and
xchg
xchg
ret
pop
jge
les
lret
and
pop
imul
and
subb
mov
mov
jge
popa
mov
std
sbb
pop
mov
loop
xchg
mov
and
jmp
scas
aas
add
xchg
sbb
cltd
sub
es
pop
sub
mov
sbb
cli
rcrb
mov
fdivs
push
cmp
lock
mov
dec
dec
iret
or
clc
pop
push
dec
mov
fnstenv
pusha
mov
sub
dec
rorb
pop
xor
and
xchg
push
adc
std
loopne,pn
mov
in
mov
scas
mov
push
dec
cld
repz
pop
push
gs
pop
popf
add
daa
dec
sbbb
lret
pop
stos
je
movsb
sub
enter
cmp
rcl
sbb
stos
cltd
pop
popf
mov
dec
sbb
cmpsl
mov
inc
out
daa
aam
mov
cmp
pop
inc
sbb
jle
out
xor
ljmp
jb
lcall
jp
add
pop
pusha
cmpsl
adc
and
into
pop
and
add
jnp
pop
mov
test
das
mov
sbb
fwait
imul
jbe
std
in
popa
jp
mov
nop
pusha
int3
mov
cwtl
mov
push
dec
insb
mov
jmp
and
sbb
movsl
mov
and
mov
sbb
sub
in
mov
adc
fwait
cmpsl
mov
mov
adc
jl
out
pop
test
ljmp
mov
test
cmc
push
jmp
jl
ret
mov
inc
push
insl
mov
mov
lock
pop
bound
dec
cmp
out
dec
out
xchg
aaa
ss
xchg
fcomps
in
push
cmpsb
stos
pushl
js
jle
out
xchg
push
addr16
sbb
jbe
mov
out
pop
leave
adc
and
mov
xchg
lret
out
mov
and
jnp
sbbl
loopne
xchg
cmp
incb
les
movl
std
mov
or
adc
sbb
push
mov
xchg
repz
xor
daa
lods
mov
mov
loop
or
bsr
inc
pop
fdivrs
pop
outsb
cltd
fcmovnb
mov
je
movsb
jg
push
inc
mov
push
out
push
fstps
pop
push
add
insb
push
dec
dec
dec
aas
push
jg
sub
mov
jne
push
push
inc
adc
push
sub
cmp
aam
sub
mov
adc
and
fcoms
jne
imul
push
ljmp
repnz
cmp
fmuls
xchg
js
stc
and
inc
xor
xchg
xor
jmp
cmpxchg
stos
aam
push
test
hlt
pop
push
dec
xchg
mov
sub
fdivrp
cmp
push
scas
je
and
push
xor
xchg
test
in
fldt
popf
mov
xchg
pusha
sbb
sbb
cltd
dec
setle
jno
dec
enter
mov
pop
sarb
ljmp
sarb
push
rcll
stos
jno
push
mov
imul
rclb
mov
mov
jge
mov
jbe
ret
add
rol
pushf
loope
or
lret
outsl
cli
fmul
cmp
pop
adc
add
pusha
fs
es
jb
out
mov
fcompl
and
pop
popf
sbb
shl
and
fsub
sbb
dec
daa
ret
ficoml
out
adcl
and
dec
adc
lods
mov
cwtl
jp
dec
pop
sbb
cli
nop
hlt
push
sbb
adc
lahf
arpl
pop
xor
push
sub
lods
out
jl
push
movd
jle
mov
cmp
cwtl
lahf
push
es
int3
and
cs
pop
or
pop
xchg
jb
push
test
rcrl
mov
adc
add
xlat
pop
out
mov
sbb
repz
pop
in
jp
sbb
iret
lret
lea
inc
jns
xor
xor
andl
adc
push
cmova
and
mov
sbb
dec
test
aad
loope
inc
cmp
scas
mov
cmc
pop
loopne
insb
popf
decl
cltd
mov
jnp
fstl
dec
test
dec
movsl
xchg
pushf
mov
fcomps
pushf
iret
jl
or
test
add
dec
fmull
mov
outsb
idivb
xchg
add
xor
ret
fldt
push
js
xor
les
mov
repz
clc
fwait
mov
ffreep
mov
push
arpl
cwtl
jge
push
loope
mov
cmp
jae
xor
subb
or
loopne
lret
adc
dec
es
sbb
mov
shr
pop
jg
test
inc
dec
cmp
xchg
repz
jno
xchg
sbb
push
lret
mov
mov
je
adc
sbb
sbb
jnp
loope
xor
leave
fcoml
fsubrs
aam
pop
push
lahf
dec
mov
ja
pop
fidivs
lcall
mov
test
sahf
lods
sti
cs
faddl
into
pushf
loop
ljmp
mov
out
lea
xchg
leave
xchg
out
adc
jae
mulb
hlt
enter
jecxz
sahf
dec
mov
cmp
mov
lahf
pop
js
inc
and
lea
int
push
dec
and
jmp
aas
or
insl
fwait
cmp
jo
mov
shlb
mov
outsb
mov
xchg
mov
or
repnz
sub
jg
popl
pop
adc
lret
or
imul
xchg
rcr
mov
or
push
nop
cmp
inc
xor
js
pop
sarb
pop
popf
ljmp
mov
fldenv
aam
and
loope
add
inc
mov
into
xor
lds
add
sbb
insb
pushf
gs
ret
or
pop
inc
stos
cmp
lahf
cmp
test
ja
pop
lods
pop
sub
xor
xor
sbb
mov
cmp
cmp
repnz
xor
lcall
jbe
sub
sbb
ss
insb
pop
jle,pn
pop
mov
fwait
xchg
cmpsl
mov
out
mov
lcall
jae
fstl
xchg
add
adc
sahf
push
and
fsubs
ror
pushf
jl
adc
test
std
mov
pop
jo
data16
xchg
not
sub
aas
cwtl
sbbb
insl
or
decl
orb
cwtl
mov
nop
addb
sti
xchg
pop
addl
push
xchg
sbbl
outsl
call
imul
sub
adc
std
mov
or
jg
mov
ret
xchg
dec
aaa
jp
pop
out
loopne
xchg
pop
fisttps
ret
test
xchg
pop
jno
daa
fcoms
out
es
mov
dec
leave
push
jle
mov
cs
jp
popa
jb
or
mov
cmp
cmpsb
mov
sbb
int3
lock
add
mov
sbbl
jo
in
subb
daa
inc
std
jmp
add
pushf
xchg
rol
push
sahf
imul
cmp
pop
lock
inc
dec
cmp
lahf
adc
dec
mov
push
mov
orb
icebp
dec
inc
push
insb
js
pop
sub
in
gs
sbbb
mov
mov
dec
jno
mov
mov
fistpll
push
testl
insb
aas
mov
jnp
xchg
cmp
mov
mov
mov
pop
movsb
inc
push
mov
das
push
jge
mov
cltd
sbb
sarl
lret
mov
pop
jae
data16
sahf
sbb
push
clc
test
jge
mov
inc
adc
in
mov
std
mov
dec
lcall
hlt
and
scas
clc
enter
out
inc
pushf
lret
cltd
sti
loope
dec
arpl
mov
icebp
jne
cmpsl
ret
cltd
fsubl
into
out
mov
pop
pcmpgtb
out
popa
push
subb
mov
sub
sub
mov
dec
cwtl
sbb
or
and
pop
jns
ss
aas
repnz
add
stos
sub
aas
inc
lds
inc
and
dec
cmp
fistpl
scas
fstpt
cmovb
xchg
call
popa
or
mov
push
lods
iret
xchg
int3
jp
cmp
dec
test
jg
and
inc
out
xchg
dec
jno
pop
and
mov
rcll
jae
mov
pop
mov
jp
rcl
inc
inc
cmpsb
imul
test
stc
push
shl
lcall
jbe
pop
pop
into
in
jo
add
push
sbb
or
push
loopne
pop
xchg
jle
inc
gs
dec
inc
xchg
lea
mov
iret
sbb
adc
mov
andb
dec
std
mov
inc
ss
adc
fsubs
jg
push
shlb
sahf
outsb
les
or
pop
inc
lods
sti
es
and
pop
outsl
fmul
mov
into
inc
repnz
popf
sarl
xor
fidivs
aam
ja
fistpl
pop
jae
ljmp
jne
cltd
sahf
rcrl
iret
imul
cmp
lret
aas
xor
xchg
jle
fwait
inc
out
sbb
fbld
jmp
inc
push
js
xchg
add
inc
push
enter
out
mov
movsl
rclb
pop
pop
into
stc
test
inc
cld
pop
mov
add
adc
xchg
shll
aaa
ret
fstps
int
mov
adc
mov
jo
xor
fadds
adc
faddl
xchg
sbb
mov
or
test
sbb
roll
xchg
or
xor
sbb
js
cli
push
out
mov
sub
cs
add
push
test
jb
jg
fnstcw
push
cli
pop
mov
dec
call
inc
mov
addb
sub
lds
adc
sub
stos
imul
icebp
or
mov
adc
ljmp
cmp
popa
ret
mov
lcall
xchg
dec
and
or
and
in
and
leave
fxch
sub
or
in
sbb
into
adc
insl
mov
xchg
stos
cltd
loop
pop
mov
dec
xorb
jle
cmc
jbe
mov
inc
sub
cmpl
fwait
aas
mov
pushf
repnz
jmp
int
std
fcomip
ljmp
into
test
sbb
fimuls
sahf
js
sbb
fnstsw
ret
cwtl
mov
repz
cs
cwtl
pop
add
setle
inc
xchg
inc
sbb
aas
push
popa
loope
mov
into
sbb
cld
mov
jo
pop
jl
add
fcomps
int
ret
mov
sbb
orl
adc
mov
inc
mov
adc
xchg
mov
adc
jle
mov
mov
cmp
pop
or
xor
arpl
enter
xchg
sti
sub
lea
mov
aam
mov
xor
push
mov
mov
pop
test
adc
pop
mov
or
pusha
jp
aam
data16
pop
push
jae
nop
sub
insl
test
int3
ret
scas
cmp
adc
rorb
mov
sti
or
push
dec
pop
arpl
ja
mov
xchg
mov
jl
movlps
lea
xchg
sbb
repz
sub
jnp
sarl
xor
andb
mov
inc
jno
sbbl
jnp
sbb
ret
inc
movsb
ja
cs
jb
sub
lcall
rorl
mov
rcrl
hlt
sbb
pop
sub
jp
jnp
jmp
sbb
cs
popf
leave
mov
in
cmp
pop
setg
lods
leave
and
fcompl
ret
inc
jg
clc
adcl
push
cmp
hlt
movl
rcrb
adc
jl
sti
ret
inc
scas
aad
imul
add
xor
fsubl
mov
imulb
jg
pop
aad
iret
mov
cmpsl
mov
fwait
push
pop
ret
mov
and
out
fadd
and
push
cmp
mov
leave
aad
sahf
cwtl
sarl
sub
xorl
adc
test
pushf
iret
dec
into
loopne
in
inc
mov
test
xlat
into
mov
xchg
jl
int3
outsl
mov
adc
lcall
int3
inc
and
decl
or
or
pushf
sub
cwtl
pop
adc
scas
dec
fiadds
adc
std
in
mov
sub
xor
mov
cmp
mov
or
sbbl
cmp
test
js
dec
fcomps
xchg
rcrl
push
and
mov
ret
scas
cli
ss
aam
aam
mov
sub
jp
xchg
pop
out
stc
xchg
and
sub
nop
dec
mov
pop
dec
xor
fldt
adc
dec
dec
cld
negl
mov
pop
jmp
mov
cmp
pop
mov
xchg
sbb
leave
sbb
jae
mov
cmp
or
mov
add
pop
mov
bound
ds
sar
mov
mov
cmp
aas
mov
xchg
lds
xchg
pop
enter
xchg
in
jae
sbbl
mov
adc
cmpsl
jl
pusha
mov
lds
mov
popf
jg
adc
inc
in
stos
sbb
mov
cmpsl
jge
sbb
popa
fldl
scas
into
and
inc
cli
sarl
jb
cmp
push
cmp
or
in
xchg
cmp
mov
enter
mov
testl
mov
fmuls
mov
mov
loop
scas
inc
adc
sti
push
test
jl
aas
stc
outsb
mov
cmpsl
inc
mov
pop
cltd
in
cmp
fwait
jae
in
lods
scas
inc
xlat
push
or
push
mov
mov
loopne
fwait
adc
mov
mov
adc
mov
sbb
xlat
and
jmp
inc
jle
les
pushf
add
jl
aaa
pop
inc
inc
int
js
loopne
fwait
lahf
jg
insl
xchg
mov
sahf
fsts
xor
mov
sbb
push
push
jmp
pushf
loope
and
mov
add
imul
ljmp
std
out
or
fistpl
sub
mov
leave
push
mov
jl
js
inc
xor
dec
cmpb
fucom
clc
fwait
mov
pop
adc
adc
dec
in
imulb
push
loope
push
inc
add
mov
iret
push
pushl
inc
icebp
test
sbb
ja
incb
test
fstpl
test
or
cmp
mov
mov
sti
push
pop
jbe
fsubrl
jle
scas
pop
pop
adc
push
sbb
or
pop
pushf
xchg
mov
or
cwtl
loop
or
cld
adc
fmull
cli
pop
push
mov
cli
mov
lea
add
push
dec
jp
adc
xchg
jecxz
nop
sbb
sar
sarb
add
jae
xchg
rorb
mov
adc
fs
fildll
negl
mov
gs
fdivr
pop
cmp
imul
inc
sbb
xchg
fidivs
enter
xchg
fistps
and
loop
daa
mov
lods
mov
fucomp
lret
out
mov
cmpsl
dec
ja
negb
push
inc
fmull
ss
cmpsl
out
jae
cmp
mov
popa
mov
push
repz
aam
in
cmp
test
sbb
lret
lcall
loop
push
mov
int3
das
mov
mov
sarl
sbb
or
loop
sbb
sbb
jae
cld
icebp
and
push
hlt
or
mov
mov
xor
fmul
mov
cwtl
add
jle
loope
outsl
pop
lods
cmp
int
js
sbb
xor
repz
pushf
mov
js
push
or
jns
scas
cwtl
sbb
jb
pushf
lcall
adc
movsb
cmpsb
inc
adc
in
stc
cmp
jnp
int3
mov
addl
and
andb
push
scas
outsb
mov
sti
xchg
xchg
inc
nop
sbb
push
pop
or
les
jge
dec
jle
paddusb
jns
test
dec
sbb
test
sub
pop
adc
cltd
loopne
mov
orb
mov
in
xchg
xor
xchg
xchg
fcomps
call
les
mov
and
mov
lcall
call
mov
clc
cwtl
inc
lahf
pushf
sbb
stos
mov
push
xchg
rcrl
push
ret
jnp
cmpsl
inc
mov
pushl
test
rorb
fdivrl
aam
sub
shrl
lcall
hlt
scas
add
flds
repz
sarb
dec
das
xlat
push
add
ret
and
cmpsl
lds
cmpsb
pop
jl
scas
sti
sub
xor
arpl
jbe
test
leave
and
cs
xchg
xor
jae
sbb
aas
add
es
add
out
dec
xor
aaa
js
movsb
incb
lcall
outsl
aas
aaa
xchg
pop
push
iret
test
lret
pop
mov
push
mov
lods
lret
int3
mov
movsl
mov
jo
in
shl
pop
jle
mov
aaa
xchg
xchg
cmp
mov
jns
cld
sahf
nop
dec
fwait
mov
xchg
mov
and
dec
fmuls
dec
jno
mov
out
daa
test
xor
negb
int3
mov
xchg
push
mov
mov
arpl
out
imul
adc
ficomps
cmp
jle
pushf
inc
adc
int
das
jg
xchg
stc
dec
fbstp
cli
xchg
pop
out
aas
add
je
out
dec
adc
fnstenv
sub
stos
mov
mov
repz
cmp
push
push
push
pop
fmuls
adc
incl
mov
pop
je
fcompl
insl
dec
inc
add
xchg
mov
pushf
mov
inc
adc
aas
push
das
sbb
jo
cs
and
cs
test
pop
jle
mov
cmp
fnstsw
mov
mov
outsl
mov
lahf
std
loopne
fldcw
mov
faddp
imul
loopne
js
mov
fidivs
mov
repnz
incb
lret
pop
cmp
outsb
add
jns
repz
mov
lahf
jg
fcompl
lock
test
jmp
mov
movsb
mov
push
mov
jb
sbb
test
imul
cmpsl
test
mov
bnd
xor
inc
pop
jl
dec
ret
sub
push
arpl
and
xor
mov
xor
subl
test
push
dec
pushf
outsb
push
repz
or
mov
fstl
insl
pushf
or
cmpsl
xlat
jg
mov
lods
les
scas
or
xor
jle
ds
add
sbb
loopne
js
sub
jb
dec
std
loop
mov
nop
and
push
mov
cmc
aad
sbb
dec
sbb
jge
lods
dec
sbb
jbe
pop
jb
rorl
nop
mov
push
mov
fwait
ljmp
idivl
mov
cmpl
stc
enter
inc
mov
jns
cmp
xor
xchg
out
pop
dec
lret
mov
into
cmpb
dec
int
mov
enter
lcall
inc
push
sarl
in
and
sbb
adc
dec
aas
testl
cmp
jnp
mov
push
adc
cmp
jle
push
sar
and
adc
jb,pt
or
aas
hlt
mov
rcrl
pop
pop
mov
jge
loope
sbb
and
push
push
sub
cmp
pushf
cmp
pop
ds
cli
inc
cmp
dec
pop
xchg
gs
mov
mov
dec
imulb
lds
repz
pushf
cs
aad
out
fbld
mov
int3
add
in
mov
pushf
or
jae
pop
outsb
sbb
inc
movsl
lea
pop
dec
mov
loop
cs
sarl
mov
inc
fwait
test
sti
mov
cmpsb
ljmp
mov
jns
xlat
outsl
sarb
idiv
and
push
fs
inc
loopne
aas
push
mov
xor
cmp
cli
xor
negb
adc
xchg
subl
daa
das
push
les
mov
aas
lret
lea
cli
ret
stos
push
mov
cwtl
decl
test
hlt
rcrb
stos
bound
out
cmpsl
sti
sahf
push
xor
xlat
je
mov
jnp
mov
xor
sbb
inc
insb
fidivs
mov
inc
cld
mov
jmp
dec
or
mov
mov
int
icebp
pop
iret
mov
sti
ljmp
sti
data16
and
lahf
aad
jg
pushf
push
jge
mov
jmp
shr
inc
jecxz
xchg
fadds
dec
js
popf
out
das
or
outsb
add
push
jle
xchg
xchg
std
push
jo
cmp
mov
adc
cwtl
mov
jno
xchg
push
xchg
out
mov
in
or
sub
cld
sub
fldcw
mov
sub
sbb
or
or
jno
dec
add
push
mov
das
dec
pushf
and
iret
pushf
fistps
and
scas
pushl
pop
pop
jbe
push
jle
sub
sub
jecxz
or
cltd
cmp
sahf
push
popf
cltd
mov
jmp
dec
pop
stos
sub
mov
mov
xorb
mov
jg
adc
loope
add
xchg
adc
push
enter
sti
dec
cmpl
fcomps
jle
pop
pop
pop
aas
mov
and
aaa
mov
sbbb
aas
fnstcw
mov
fidivrl
xchg
and
and
aaa
pop
mov
pop
inc
cld
sbb
push
fsubr
out
call
imul
mov
xchg
inc
mov
cwtl
inc
xchg
cmc
dec
xchg
shll
mov
jle
push
cwtl
mov
stos
sti
cmp
fsubs
jb
mov
xchg
pop
mov
int3
das
clc
mov
mov
jb
std
cmpsb
cmpsl
movsb
sbb
lret
push
mov
pop
mov
fldenv
or
lods
xchg
dec
jae
inc
imul
adc
inc
shll
sbb
push
rcr
movsl
ja
pop
in
aas
rol
sub
mov
cmc
stos
sbb
lods
insb
lock
mov
subb
pusha
mov
enter
pop
xchg
lea
mov
jp
mov
dec
pop
movsb
cmp
ret
sub
daa
sub
fisubl
icebp
jge
mov
icebp
mov
call
in
notl
leave
sbb
pusha
imul
bound
push
sbb
dec
mov
sbb
in
add
mov
popa
mov
pop
cmp
jecxz
cmp
imul
mov
cwtl
lret
out
in
popf
xchg
aad
sbb
cmpsl
xor
faddl
and
mov
xor
movsl
sbb
in
sbb
mov
idiv
cwtl
rcll
mov
fsubr
dec
and
jnp
adc
cli
mov
pop
pushf
decb
xor
add
dec
sbb
jp
or
inc
adc
mov
test
icebp
push
into
xchg
loop
clc
and
xor
cmpsw
push
mov
lret
sti
cs
xor
fwait
mov
add
jns
xchg
pushf
pop
rcr
daa
lret
ds
repz
cmp
stos
lret
loope
or
sub
sub
inc
jo
pop
sub
inc
jno
jmp
mov
jb
test
inc
mov
pop
sbbb
loop
out
add
sbb
iret
shll
in
mov
movsl
cmp
scas
mov
mov
test
cmp
pop
push
sahf
dec
out
int3
das
negl
or
pop
ficomps
mov
jg
aad
mov
fs
xchg
test
mov
shl
cmp
or
pop
cmp
sahf
xchg
mov
xor
scas
xchg
add
incb
pop
lock
pusha
and
cli
inc
jae
rcrb
dec
arpl
fdivrl
ficomps
jg
insl
sub
enter
jnp
xlat
subl
rcll
add
jecxz
mov
mov
xchg
xorb
sbb
outsl
push
inc
cli
mov
and
dec
mov
stc
push
fs
adc
lcall
sub
outsb
leave
lea
pop
ret
cmp
and
inc
int3
icebp
adc
jge
xchg
mov
jg
fadds
mov
shl
xchg
fcoml
push
mov
sub
decl
xchg
out
es
cmp
mov
push
es
es
icebp
dec
cmp
xchg
rcl
xor
test
jno
inc
xchg
fcomp
out
dec
add
stc
lock
test
adc
mov
dec
adc
fwait
cmp
xor
into
push
cltd
sbb
mov
test
adc
sbb
sub
mov
or
mov
mov
mov
daa
cwtl
dec
cmpsb
test
sbb
dec
fwait
ret
popf
push
fdiv
xchg
lret
mov
push
xchg
inc
pop
push
leave
fistl
pop
push
add
out
push
dec
clc
sbb
in
jo
sar
cwtl
bnd
sbb
and
jl
cwtl
push
jno
aad
shll
xor
out
fwait
sbb
nop
sti
je,pn
cld
inc
pusha
cmp
sbb
imul
popa
mov
cmpsl
xor
scas
loope
fwait
sbb
jmp
mov
daa
mov
repz
mov
cmpsb
sti
fcompl
aas
xchg
test
sbb
mov
cwtl
add
cmp
push
shrl
xor
gs
and
addl
fs
sub
jbe
sub
sti
test
mov
ret
aas
cmc
sbb
aas
push
cs
pop
call
cmp
cmpsb
xchg
jecxz
xchg
pushf
lds
mov
sarl
pop
sub
xchg
sbb
sti
pop
pop
cli
scas
rcll
fdivp
ret
ficompl
je
ds
jne
jmp
das
push
jb
popa
sbb
push
aaa
or
orb
stc
sbb
rclb
or
mov
sub
pop
lahf
sti
xor
inc
push
pop
jnp
enter
pushl
jne
aam
imul
mov
test
punpcklwd
jnp
lods
mov
inc
and
mov
out
loopne
mov
mov
sbb
test
mov
daa
int
popf
mov
sahf
xchg
mov
sbb
lds
ret
push
dec
jp
sbb
mov
dec
push
push
mov
jne
jg
into
adc
push
adc
ficompl
sbb
push
adc
sbb
jns
mov
jns
int
cmp
gs
insl
out
jge
mov
adc
loopne
and
fcomps
cli
enter
jle
fistps
insl
mov
adc
mov
cmp
xor
fsubrs
dec
sbb
cli
or
test
push
mov
pushl
rclb
inc
and
mov
int3
js
and
or
sbb
xchg
ret
fxch
inc
mov
pop
out
repnz
xlat
cli
xor
pop
stos
jnp
out
add
popf
mov
cmp
ret
xor
mov
shlb
lcall
sbb
xor
pusha
enter
xchg
xchg
subb
iret
cmp
outsl
sub
aas
xor
mov
xor
jg
cld
ret
xchg
cmp
inc
add
or
in
mov
sub
pop
jmp
jns
pop
int3
jo
jae
pop
cmp
fiadds
loope
sub
adc
xchg
fsubl
and
push
out
mov
push
or
mov
cmp
jnp
sbb
and
repnz
mov
das
movsb
pop
mov
cltd
sub
xor
int
int
mov
mov
sbb
movsl
addr16
je
rorl
cmp
mov
addr16
movsl
cld
inc
add
cmpsb
pusha
push
pusha
enter
aad
fsubrs
jg
subb
insl
add
mov
leave
lcall
iret
add
sub
fwait
dec
add
test
jns
aas
stos
mov
ds
out
cmpsl
rcl
dec
mov
clc
cmp
aas
clc
inc
push
xchg
cltd
pop
mov
stc
outsl
adc
loop
xor
cmc
mov
mov
push
sub
xorl
add
andb
popf
arpl
frstor
sub
pushf
loopne
mov
pop
movsl
pop
xchg
mov
out
pusha
xchg
mov
pop
mov
int
mov
cwtl
xchg
aas
or
xor
lret
lds
icebp
inc
push
stos
sbbb
stos
pop
pop
test
mov
push
mov
fwait
ret
sbb
mov
adc
fisubrl
shl
xchg
sbb
sarb
sbb
pushf
or
cmp
cwtl
shlb
fstpt
inc
pop
mov
inc
mov
popf
out
pop
mov
iret
mov
jno
or
adc
insb
jns
clc
mov
ljmp
pop
lea
insl
or
jno
xor
neg
hlt
les
faddp
xor
mov
adc
lret
mov
adc
jg
add
imul
scas
iret
cli
inc
pop
cmp
and
mov
outsb
cmp
pop
cmp
shll
jb
fsubrp
pop
loope
inc
sbb
dec
fsts
xchg
pop
or
pop
test
shrb
lcall
pop
ret
pushf
add
aas
mov
sub
outsb
jle
pop
test
ret
cld
cwtl
fwait
es
mov
jb
dec
pushf
sahf
cmp
bound
xchg
scas
arpl
sbb
or
sbb
inc
jo
add
inc
cmp
jbe
out
push
mov
movsl
loope
mov
aam
cmp
popf
xor
push
insl
lods
sub
imul
mov
test
es
cmpl
pop
rorb
int
pop
mov
xchg
pop
dec
or
fldl
xor
mov
mov
add
pushf
fsubr
rorb
int3
lock
pushf
bound
pop
inc
mov
dec
mov
jo
cmp
inc
ljmp
vcvttpd2dqx
ja
insl
xchg
mov
test
jae
sub
ja
rorl
mov
push
stos
icebp
cwtl
mov
fwait
mov
mov
push
pop
jmp
ljmp
lea
stc
jne
pop
xchg
fs
sbb
mov
sbb
xor
cmpsl
out
dec
and
lea
pop
pushf
or
jns
shl
pop
mov
adc
fmull
hlt
inc
add
add
jns
push
jge
xor
lret
jmp
add
les
pop
mov
adc
adc
push
mov
out
ds
stos
and
sbb
pushl
push
inc
lret
out
sbb
mov
pop
pop
jle
jl
xchg
mov
xchg
jne
aam
mov
mov
and
leave
xor
xchg
xchg
xlat
outsl
clc
jle
movsl
pop
stos
pop
adc
sti
stos
sarl
jp
xor
imul
xchg
and
mov
cmpsl
sbb
movsb
adc
outsl
xchg
mov
cld
jno
mov
fistps
shlb
pop
insb
loope
andb
std
inc
pop
insl
fmull
fldcw
mov
lock
or
cmp
cmp
int
cmpb
cltd
inc
cmp
dec
out
mov
mov
adcb
or
xchg
movsb
addr16
mov
enter
adc
test
xlat
ret
aas
add
jnp
dec
int3
jb
fstps
loopne
cmp
fidivrs
test
and
imul
ss
cli
cmp
inc
popf
mov
je
jmp
iret
icebp
and
repnz
loop
sbb
xchg
sti
pushw
mov
fmull
cld
mov
sbb
fcomip
repnz
sahf
sti
outsb
push
xchg
mov
inc
mov
pop
rcrb
es
ss
pop
push
sahf
out
lcall
cmp
faddl
popa
roll
outsb
xor
sbbl
ljmp
mov
sub
mov
shrl
xchg
stos
pop
cld
mov
in
adc
xor
sub
xor
push
sub
xchg
pop
seto
lods
mov
inc
fsubrs
sub
out
ss
xchg
lret
mov
xchg
cmp
push
jp
sub
mov
lock
cmp
xchg
shll
inc
daa
je
mov
push
loopne
aad
aad
int3
nop
sti
data16
cs
enter
pop
fisttps
ljmp
mov
dec
orl
cwtl
mov
cli
movsl
daa
push
mov
sbb
js
sub
scas
jge
mov
cs
mov
sbb
jnp
sbb
fimuls
movsl
and
dec
stos
aas
pushf
cs
leave
sub
cwtl
lcall
arpl
sbb
xor
sub
stos
sub
insb
add
mov
fsubp
icebp
xchg
jnp
push
mov
andl
pop
lods
mov
jnp
clc
out
aas
mov
mov
mov
pop
push
jmp
pop
jg
lret
dec
dec
dec
orl
sbb
mov
cmpsl
dec
push
pop
sarb
or
dec
and
xorb
into
push
dec
stos
shl
jno
ss
jne
xchg
xchg
cmp
and
negb
mov
pop
fwait
and
adc
add
jp
in
add
mov
push
mov
sbb
insb
push
sbb
mov
lods
aaa
psubsb
jg
and
lock
out
ljmp
mov
mov
bound
jmp
adc
xchg
dec
clc
mov
xlat
fcompl
push
mov
xlat
sbb
xchg
sbb
xlat
repz
fwait
mov
xor
cmp
pop
mov
inc
cmpsl
cmp
sub
mov
or
cld
adc
xchg
pop
popf
cmp
in
jg
lahf
fcoms
lahf
sbb
ljmp
lock
cmp
fimull
pop
fwait
or
mov
jb
loopne
xchg
cmp
pop
pusha
add
je
fs
push
pushf
imul
arpl
pop
pop
std
mov
cmp
sub
jae
sahf
and
leave
fdivl
xor
fmuls
rcl
cmp
pop
or
mov
ds
dec
pop
mov
test
mov
insl
aam
push
and
aaa
aad
leave
decl
cs
dec
insl
mov
frstor
leave
hlt
cmp
mov
xchg
enter
mov
inc
sub
and
movsb
lcall
or
in
cld
push
adc
movsl
cmc
inc
mov
addr16
xchg
and
sub
in
mov
pop
sbb
pop
fcmove
mov
test
push
sub
loopne
jmp
data16
iret
and
xor
jns
dec
ret
or
pop
cli
leave
int3
mov
fwait
in
arpl
mov
push
ret
sarb
or
jg
adc
mov
jg
fisttpl
sub
sti
or
push
les
adc
fidivrl
outsl
push
mov
jg
out
sub
jae
sub
add
sbb
rcrb
out
push
vmptrst
in
pop
pop
dec
xor
std
push
lahf
mov
xor
sti
outsb
in
xor
cmp
fisttpll
rolb
sbb
scas
xlat
mov
jg
and
test
sub
test
mov
lds
push
push
addb
pushf
ss
das
sub
xchg
push
jg
and
mov
xorb
and
mov
push
pop
stos
push
insl
out
jo
cli
enter
xchg
stos
lahf
popf
stos
aad
dec
mov
xor
std
into
xor
inc
imul
dec
pop
xchg
adc
dec
dec
insl
cli
pop
jg
daa
or
sub
adc
lcall
xor
in
or
sbb
bound
jbe
jmp
jl
push
cli
cmp
ja
push
inc
sub
pushf
dec
cmp
stos
sti
scas
jb
iret
sarb
mov
loopne
hlt
dec
inc
sahf
lock
fmuls
gs
sub
pushf
jb
adc
add
push
adc
and
rcr
pop
fistps
jns
xchg
ret
testl
pushf
aad
add
negb
xchg
mov
and
dec
ja
loop
pop
mov
inc
fsts
imul
adc
or
mov
jmp
mov
push
mov
push
xchg
mov
jp
addl
je
add
cmp
jmp
jge
sbb
mov
scas
mov
mov
cmp
pop
fwait
arpl
stc
mov
inc
mov
jbe,pt
mov
iret
in
mov
outsl
imul
or
iret
mov
mov
adc
cli
adc
dec
lds
rcrl
mov
in
mov
repz
fisttpl
add
jle
idivb
mov
fcoml
clc
cvtps2pi
xchg
mov
mov
xchg
inc
cltd
jnp
xor
lea
jno
adc
add
push
jecxz
aad
scas
mov
shll
lret
outsb
std
ret
out
inc
pop
out
cmp
cmp
leave
push
xor
xchg
sbb
mov
xor
hlt
fdivs
out
mov
into
mov
jmp
sub
pop
shll
or
xchg
fnstenv
xchg
call
pop
mov
dec
jno
or
add
je
ud0
push
rcrl
shr
dec
pop
xchg
es
jg
cwtl
lahf
daa
and
adc
dec
mov
fimull
mov
inc
cmpsl
lcall
sub
add
cmpsb
jecxz
icebp
andb
fwait
cmp
add
jle
lcall
and
div
dec
dec
mov
cwtl
pop
or
push
pop
mov
and
int
jb
test
dec
daa
mov
inc
and
mov
mov
neg
mov
mov
cmp
adc
movsb
fwait
fwait
sbb
or
nop
add
cmp
jbe
add
mov
add
mov
sbb
in
fs
fnsetpm(287
mov
cmp
push
cs
dec
sub
sti
sub
sahf
and
insl
push
loopne
ret
psubusw
cmpsb
mov
xchg
das
test
push
adc
icebp
in
inc
mov
dec
fwait
or
push
mov
imul
xchg
cmc
jo
jg
xor
sub
or
notb
push
imul
xor
cmp
pop
xchg
pop
pushf
into
add
test
cmp
mov
mov
jl
dec
js
jne
push
enter
nop
js
ret
aaa
fisttpl
je
sub
mov
iret
sbb
jae
fimuls
adc
into
rolb
sub
imul
mov
xchg
cli
in
arpl
push
in
mov
pop
sbb
dec
xor
mov
fwait
push
pop
lods
lret
daa
mov
fnsave
adc
sbb
jns
jg
insb
xor
clc
jnp
daa
mov
cwtl
lock
push
shlb
pop
in
leave
test
stos
push
repnz
loope
sahf
pop
imul
dec
cli
mov
fwait
dec
fisubs
aas
mov
rorb
aaa
cmpsl
clc
mov
mov
jle
fdivrs
mov
jne
and
mov
aas
and
xor
cltd
pop
mov
cmp
fcomps
inc
xchg
xchg
cltd
push
dec
mov
stc
cmp
add
mov
sbb
outsb
pop
xor
mov
loop
lock
sub
xchg
dec
pop
mov
aas
pusha
int3
out
push
aas
dec
jle
arpl
cli
frstor
repz
sub
mov
mov
cmpsl
loopne
cli
roll
or
popa
push
pushf
lods
lret
icebp
fidivrl
stos
mov
jae
jnp
pop
jle
cmc
sbb
cmp
repz
add
pop
lret
cltd
jle
mov
scas
and
mov
bound
aas
dec
stos
sbbb
data16
into
push
pushf
out
testb
dec
add
subb
subl
pop
in
in
inc
popf
sbb
adc
mov
pop
in
movsb
repz
mov
adc
out
jb
cmpl
sbb
fnstcw
ret
sbb
insb
cmp
dec
rclb
std
insl
in
fnstcw
je
out
add
mov
xchg
ret
pop
sub
ds
mov
insb
popa
push
fsubrp
push
lcall
sbb
xor
xchg
xor
pop
decb
mov
mov
int
aas
aad
shrl
xor
jecxz
in
pop
repz
fdivrl
mov
push
dec
push
cmp
lods
pop
adc
jp
rorb
sbb
loop
pop
orb
or
cli
sar
xlat
shll
lcall
pop
xchg
jo
push
in
out
mov
cmp
std
nop
cmp
xchg
outsb
xlat
mov
cmp
and
int3
fwait
divl
pop
pushl
mov
mov
out
xchg
test
pop
stos
pop
inc
mov
cmp
cli
inc
pop
ds
push
pushf
stos
pusha
lods
orl
pop
pop
sub
dec
loopne
mov
pop
insl
inc
jne
mov
push
sti
adc
mov
mov
push
adc
push
cmp
data16
cli
sbb
arpl
pushf
data16
ds
into
add
bound
cltd
xchg
sub
decb
lcall
cwtl
cmpsb
mov
sbb
mov
jg
inc
and
sbb
dec
cmp
or
test
mov
sti
insl
icebp
pushf
mov
xchg
fistl
ret
aas
loopne
into
push
push
jo
xchg
fst
sbb
shr
sub
jmp
lret
sarb
mov
insl
fmul
loope
xchg
test
call
icebp
ljmp
ja
inc
mov
out
iret
mov
cltd
push
sbb
mov
cmp
mov
aam
data16
aas
mov
icebp
jns,pt
inc
push
out
cmp
imul
shll
push
mov
mov
sbb
shll
push
inc
cmp
pushf
fistpl
int
ds
or
mov
cmp
push
xchg
mov
popa
mov
ja
add
sahf
out
mov
movsl
push
nop
xchg
sbb
mov
inc
test
cmp
adc
out
inc
mov
jge
jl
ret
cmp
push
insb
sub
inc
mov
add
mov
sub
jo
test
and
sbb
mov
mov
rorl
fisttpl
mov
xchg
scas
dec
inc
mov
fadds
fisttps
enter
fs
cmp
cmp
das
inc
adc
sbb
aas
icebp
inc
fdivp
arpl
push
fs
gs
cld
popf
xchg
hlt
mov
fmulp
mov
and
xchg
mov
dec
sbb
test
sub
push
cmp
mov
sti
and
ficomps
sbb
xlat
xor
pop
jle
clc
mov
cmp
out
jns
jecxz
xchg
xchg
lods
cmp
out
test
leave
xchg
ja
out
sbb
ffree
or
fcmovb
scas
jg
jecxz
int3
aam
insl
inc
je
imul
mov
lea
fyl2xp1
clc
xchg
or
sbb
and
scas
mov
subl
jno
outsl
push
fadd
sbb
es
mov
xchg
repz
cwtl
sbb
mov
mov
cmp
dec
mov
pop
mov
pop
push
mov
lahf
sbb
fsub
xchg
rorl
jmp
cltd
add
add
cmpb
mov
cmp
xchg
and
das
fmull
inc
imul
add
orl
mov
pop
add
in
notl
rcr
pop
jae
mov
iret
mov
lret
push
ljmp
pushf
int3
je
sub
mov
out
jmp
out
lock
iret
mov
xchg
mov
jmp
xchg
sub
adc
or
push
popa
mov
add
icebp
dec
adc
push
shll
clc
imul
sub
fs
mov
add
std
inc
fiadds
jnp
lods
push
add
pop
lods
dec
pop
inc
rcrl
jbe
je
mov
mov
jle
add
mov
mov
lods
stos
or
push
shl
cmpsb
xchg
cmpsb
push
movsb
pop
fiadds
mov
pop
jmp
test
fwait
stos
out
or
cld
js
mov
xchg
lods
leave
xchg
add
fsubl
dec
sub
dec
jg
sub
popf
sbb
mov
adc
xchg
sti
push
imul
xchg
lods
fcmovnu
sbb
sbb
shr
pop
iret
mov
out
inc
lea
loop
popa
pop
pop
int3
sub
cs
cs
push
xchg
lea
dec
cmp
clc
jmp
movsb
lcall
sub
pop
mov
je
popf
enter
mov
aas
mov
out
jmp
pop
pop
mov
xor
add
inc
xchg
hlt
pop
outsb
es
pop
mov
jl
ja
fmulp
mov
icebp
in
pushl
xor
mov
adc
jle
out
dec
cmp
out
cmp
mov
sbb
outsl
push
dec
ds
pop
aas
cmp
cmp
icebp
mov
dec
js
stc
and
add
daa
cmp
mov
pop
mov
ds
lods
shll
add
mov
push
clc
inc
pushf
push
jl
cmpsl
cmp
rcrl
outsb
mov
or
mov
fdiv
mov
sbb
mov
xor
and
fwait
movsl
rcrl
sbb
loope
fsubrl
xchg
lods
incl
lret
sti
cltd
lock
sbb
iret
pop
hlt
dec
std
cwtl
jl
ror
sbb
cmpsb
sub
scas
aas
cli
sete
jge
mov
rcr
mov
insb
xchg
cmpl
xchg
xchg
pop
jne
out
popf
jne
pop
add
addl
dec
es
cmp
xlat
into
push
jb
mov
fabs
repz
inc
cmpsl
push
iret
pop
insb
cli
js
adc
jp
ret
pop
xor
std
sub
addl
push
sbb
fstps
push
sbb
mov
pop
stos
lret
stc
mov
jle
addl
imul
inc
sbb
and
xor
pop
jnp
gs
cwtl
or
mov
sub
or
aam
sbb
jbe
ljmp
cltd
adc
adc
cmp
push
js
jbe
mov
rclb
mov
push
ljmp
sbb
pop
sarl
sbb
aaa
or
cmp
rcrb
pushl
fisubrs
pop
mov
gs
mov
pop
pop
std
cwtl
cmp
pop
sub
lock
fadds
push
cmp
nop
pop
lock
push
xchg
pop
les
sti
push
movsl
mov
stc
popf
xchg
out
sahf
or
ret
loop
sbb
stos
fists
jb
add
xchg
popa
leave
andl
fmull
iret
not
sahf
jg
clc
and
cmp
cmpsl
arpl
push
test
xor
push
sahf
ret
clc
jl
sbb
jb
scas
mov
cmp
inc
loope
notb
hlt
ljmp
movsb
test
int
push
jl
popf
imul
lret
jbe
mov
xchg
pop
leave
into
out
ja
dec
pop
cmpsl
sbbl
and
pop
push
lock
xchg
fisttpll
rcll
xor
xchg
cmp
ds
mov
mov
cltd
js
cmp
les
leave
jl
insl
ficoml
nop
rcr
dec
mov
subb
fwait
rolb
mov
aam
mov
adc
adcl
cli
pop
scas
mov
mov
fistps
inc
cmp
std
cmpsl
mov
push
inc
cltd
sub
sub
mov
cmp
pop
outsb
movsl
jne
mov
sbb
pop
popf
in
and
inc
int3
cli
enter
mov
aas
fstpt
pop
adc
into
push
in
ds
and
mov
xor
leave
cwtl
and
test
je
int3
inc
push
scas
in
cmpsb
mov
mov
flds
fmul
sbb
and
ficoms
pop
outsb
cmpsl
mov
outsl
xor
sbb
cmpsl
les
sub
mov
mov
aas
fs
mov
sbb
sbb
scas
xchg
rclb
test
mov
in
pop
sbb
cli
xchg
inc
jg
pop
testl
mov
mov
fsub
mov
pop
fdivr
repz
inc
pop
ja
incl
sarw
push
and
decl
cwtl
mov
sbb
push
adc
lret
sbb
add
dec
pop
cmp
dec
test
int3
add
out
call
jmp
inc
dec
jg
mov
out
cmp
xlat
sahf
sub
arpl
mov
xchg
shlb
jnp
ds
scas
mov
out
pop
xlat
stos
fcomi
orl
inc
js
mov
mov
ss
pop
or
fcmove
pop
push
mov
out
daa
jp
add
push
scas
sbb
loopne
xchg
dec
dec
push
dec
fsts
test
dec
hlt
test
lea
mov
cld
addr16
add
xchg
testb
sub
or
fldpi
sbb
jle
sti
mov
push
xchg
and
rolb
and
mov
push
adc
movsl
in
cwtl
xorl
in
call
popf
notl
fiadds
data16
mov
sarl
sub
shll
jno
aas
aad
subl
dec
mov
fnsave
jg
aaa
subl
bound
lods
cwtl
lea
imul
mov
mov
jnp
ja
sub
int
cli
adc
fsubr
leave
xlat
xchg
cltd
lods
aas
inc
cmpsl
cmp
jnp
pop
mov
sbb
cmc
jle
sbb
rcl
jecxz
fadds
test
sub
push
mov
inc
inc
jg
cld
adcb
sub
mov
jb
jmp
je
dec
enter
xchg
pushf
lods
mov
pop
and
arpl
aad
dec
mov
sarb
pop
aam
sbb
mov
mov
jp
cli
dec
sbb
repz
mov
test
push
sbb
faddl
jle
inc
popf
xchg
push
out
jg
jnp
mov
add
scas
dec
xchg
cwtl
sub
sti
adc
push
jne
jb
jg
add
bound
popf
fisubrs
out
mov
xor
xor
xchg
jnp
cmpsl
adc
cwtl
jb
loop
adc
cli
xor
out
pop
dec
add
lcall
sbb
jg
mov
mov
mov
sbb
loope
cmp
mov
lcall
and
das
jbe
pop
fmuls
popf
stos
scas
xchg
sti
les
sbb
mov
leave
les
xchg
incl
sbb
mov
or
fldl
leavew
cmpsl
popf
and
mov
loop
xchg
sub
out
cmp
jecxz
pushf
orb
pop
sbb
xor
cwtl
je
dec
gs
outsl
ds
mov
and
mov
sub
arpl
xchg
cmpb
inc
dec
fisubrs
xchg
sbb
pop
mov
into
sar
test
pop
out
in
jge
les
addr16
mov
aas
mov
xor
add
fdivp
imulb
cmp
js
mov
cld
stos
subl
or
stos
add
data16
fwait
lock
sub
mov
fldl
mov
mov
push
sbb
jl
movsl
xor
clc
icebp
movsb
fbld
mov
xor
int
ret
cli
bound
int3
sbb
pop
into
test
push
fstps
pop
jae
mov
inc
mov
icebp
push
sbb
inc
ret
roll
mov
pop
push
out
dec
rcrb
insb
dec
push
fsubrl
jmp
and
pop
test
pop
test
mov
or
sbb
call
mov
mov
lods
sub
cmp
mov
push
outsb
cli
outsb
jbe
aaa
jmp
aad
xchg
sbb
decl
aas
fwait
jl
inc
popa
lahf
outsb
nop
add
push
push
push
outsl
mov
xchg
sahf
cli
sub
mov
jnp
ret
add
xchg
test
popf
mov
scas
xor
cmp
stc
inc
pop
pop
mov
push
push
filds
fbstp
jge
mov
mov
push
xor
mov
adc
or
push
jb
lret
bound
and
sub
jle
sub
ret
fadd
mov
xchg
sub
and
pop
repnz
dec
mov
mov
or
mov
fstpl
ret
mov
insl
ja
push
inc
test
into
pop
test
mov
dec
xchg
fs
les
fstps
sti
xchg
fcoml
leave
out
or
in
xchg
ficoms
jg
jne
lock
cmp
leave
pop
mov
icebp
in
jg
xor
mov
jl
xchg
hlt
adc
cmp
sub
add
cwtl
adc
cwtl
pop
inc
xchg
mov
push
and
cmc
pop
lods
xchg
inc
js
dec
lret
pop
mov
clc
jle
mov
dec
mov
mov
jnp
test
mov
jle
ds
jmp
jo
enter
cmp
jmp
sti
cld
sub
fistl
dec
jecxz
pop
jle
aam
lods
dec
sub
add
jnp
ds
js
sbb
xchg
sbb
xor
xchg
pop
push
mov
in
pop
jmp
mov
fisttps
out
push
fnstcw
jp
popf
dec
mov
cltd
icebp
bound
mov
mov
mov
adc
dec
xchg
dec
es
mov
dec
test
fildl
mov
loopew
ds
mov
fdivr
fistpll
adc
cmp
dec
push
int
std
and
mov
sti
and
std
cmpl
out
daa
movsl
xor
sbb
cmp
mov
fwait
repnz
lcall
inc
insw
jno
cmp
cmp
pop
fcoms
test
xchg
fs
sbb
js
clc
sarl
es
leave
and
cmp
lods
mov
lret
lahf
adc
sar
pop
cmp
pop
stc
mov
scas
adc
insb
jl
sbb
adc
gs
stos
mov
pop
lcall
and
ja
mov
dec
sahf
int
pop
data16
pop
pushf
idiv
sbb
ljmp
pop
mov
sbb
mov
scas
rolb
or
into
cmp
sbb
mov
jb
rolb
xchg
pushf
scas
pop
iret
ret
pop
imul
inc
rolb
cmpsl
repz
xor
mov
aad
icebp
enter
mov
add
loopne
pop
and
ret
mov
nop
imul
jmp
push
pop
push
jecxz
test
adc
add
inc
mov
sbb
push
sbb
loop
enter
stos
pop
mov
sahf
jnp
inc
in
add
test
jmp
test
fisubrs
nop
xor
imul
insl
and
cs
sbbb
xchg
add
lret
mov
push
ret
pop
out
cmc
mov
pop
psubd
jno
fadd
push
mov
ja
pushf
and
dec
cmp
mov
dec
insb
or
xchg
jmp
xchg
popf
xchg
les
sub
ffree
fucomip
imul
fimuls
mov
dec
mov
js
ljmp
sbb
mov
ret
add
sbb
dec
adc
daa
sbb
dec
inc
mov
inc
or
mov
xchg
sub
rorb
in
fcomps
ret
xchg
push
dec
testb
mov
add
mov
das
enter
mov
icebp
inc
or
sbb
jecxz
test
cmp
jb
cmpb
add
out
inc
cmpsl
cmp
mov
jb
pusha
ret
ficompl
push
dec
xor
and
inc
pop
jp
cltd
je
pop
mov
sti
lret
add
mov
cmpl
jmp
dec
fucomp
or
adc
test
bound
lea
mov
dec
repnz
in
and
cmp
stc
sbb
adcl
inc
lods
pop
jp
add
mov
insl
enter
pop
mov
xchg
adc
mov
cmc
mov
int3
cmp
out
mov
shll
mov
mov
pushl
mov
mov
add
push
aam
dec
push
test
xchg
sbb
jg
ret
inc
mov
inc
lds
adc
push
out
cwtl
sub
mov
pop
int3
sahf
mov
push
or
ficoms
mov
cmp
rolb
loop
int
xchg
mov
fadd
push
fld
into
shrl
andb
push
xchg
pushf
insb
dec
sbb
or
subb
fs
and
scas
aas
mov
mov
fsubrs
adc
and
pushf
cmp
aas
cmp
repz
push
sub
mov
adc
aad
rolb
xchg
mov
lds
or
sbb
sbb
les
jmp
popa
ja
and
mov
sbb
jge
pushf
cmp
fdivrs
mov
pop
ds
or
push
shll
dec
cmp
repnz
mov
les
xor
in
mov
and
mov
jnp
out
dec
rcl
scas
rol
dec
sub
xchg
pop
mov
outsl
add
jecxz
test
add
xor
xchg
pop
movsl
push
shlb
mov
clc
sbb
scas
mov
mov
loopne
cmpsl
inc
into
leave
inc
xchg
in
xchg
sub
insl
pop
fiadds
cmpsl
dec
lods
jb
xchg
outsb
mov
fcoml
arpl
adc
dec
mov
aas
call
or
mov
pop
sub
arpl
sbb
mov
and
mov
outsb
xchg
dec
sbb
mov
sub
mov
or
or
add
fsubrs
lcall
inc
mov
dec
cmp
rclb
cltd
push
mov
neg
adc
gs
mov
cmp
xchg
fwait
imull
in
pop
or
cmp
mov
sub
sbb
mov
loopw
je
fs
pusha
imul
add
test
cltd
mov
sahf
jg
pop
and
test
sbb
sub
dec
sbb
mov
push
pusha
sub
outsl
push
sbb
mov
sbb
je
pop
je
dec
mov
imul
mov
popa
jle
in
fcomp
mov
out
adcb
js
xlat
adcb
movsl
dec
cmp
adc
scas
lcall
cwtl
aad
push
inc
imul
cs
mov
fwait
adc
cld
inc
out
adc
cmp
cltd
xchg
mov
jae
fadds
jmp
aaa
shl
divl
or
cwtl
xor
mov
sbb
jae
mov
cmpb
mov
lret
sub
mov
xchg
pop
dec
push
xor
movsl
std
sbb
jo
lret
cwtl
daa
ret
jl
sahf
mov
pop
push
add
pop
xchg
mov
cmpsl
jo
sub
inc
nop
bound
xchg
cmc
fisubs
pusha
rolb
mov
mov
cwtl
popa
fldl
xor
mov
daa
out
or
push
roll
sbb
sarl
xchg
std
mov
icebp
cwtl
cmpsb
cmpl
and
push
push
loope
sbb
mov
sbb
movsb
je
add
jecxz
mov
out
sbb
sti
sahf
and
repnz
xor
sub
cli
popf
ret
jecxz
mov
jl
popa
lahf
pop
je
jb
mov
icebp
rcrl
fwait
add
insb
stc
mov
test
push
dec
or
int3
adc
sbb
dec
jae
fdivl
adc
cmc
test
call
sub
fildl
dec
scas
mov
pop
push
pop
outsb
mov
popa
jg
pop
mov
push
stc
sbbb
mov
ret
mov
mov
dec
movsl
lcall
sbb
jae
pop
ret
add
mov
mov
fsubr
clc
jg
jo
mov
dec
aaa
pop
mov
pop
cmpsb
adc
in
int3
rcll
lcall
loop
int3
pop
jmp
jo
xchg
sbb
aam
push
mov
ret
push
jge
cwtl
cmp
pop
or
outsb
loopne
pop
in
dec
mov
stos
sbb
test
lods
inc
mov
cli
movsb
dec
xchg
call
daa
por
dec
lcall
insb
loop
stc
pop
cmp
push
fstpl
lret
bound
push
orb
jle
sbb
pushf
jp,pn
cwtl
jb
add
and
in
xchg
push
je
sbb
xchg
aam
and
loope
shl
add
sbb
sbb
idiv
fcmovu
imul
iret
push
add
lds
jne
ljmp
jmp
les
push
cmp
jl
sbbl
addb
mov
jp
enter
xchg
andb
jbe
sti
push
dec
cli
cwtl
test
aas
push
popa
lock
and
mov
push
pushf
sbb
add
jae
pop
mov
pushf
xor
lahf
jg
jge
inc
jnp
popa
and
jg
mov
rcrl
cltd
and
mov
xchg
xchg
stos
and
and
xchg
mov
faddl
mov
jo
push
insb
lret
testl
sub
fdiv
mov
shlb
int3
test
or
shrl
orb
pop
test
cltd
mov
add
inc
xchg
mov
scas
popf
enter
cwtl
loop
adc
scas
inc
lock
mov
add
icebp
mov
mov
loop
mov
xchg
lods
fistpll
in
pop
inc
test
cwtl
jg
ret
cmp
sub
ss
pop
or
aas
cltd
mov
jg
mov
add
popa
or
cwtl
sub
cmp
xchg
call
jmp
push
iret
jg
jg
insb
dec
dec
in
adcb
add
cmp
leave
jle
sbb
mov
jo
xor
pop
nop
add
pop
adc
xchg
addr16
sub
dec
jns
push
jno
lahf
sbb
cmpsl
sbb
fldenv
xchg
pop
mov
sbb
lcall
mov
psllq
pushf
mov
mov
mov
xor
mov
pop
mov
xor
sbb
dec
bound
cmpsb
insb
jge
popl
ficoms
fdivrl
jmp
xor
mov
sbb
test
out
subl
cld
cli
dec
ljmp
daa
pop
cmp
and
movsb
xor
sbb
outsl
cmp
sar
lahf
xor
dec
mov
pop
sbb
push
mov
jmp
addr16
sbb
add
jno
lret
fst
lcall
mov
adc
in
mov
dec
enter
pop
sbbl
sahf
add
or
in
ds
nop
negl
pushf
push
add
stc
or
fsubrl
xchg
dec
out
add
cmp
jp
mov
les
ret
lret
xor
adc
mov
sbb
fs
jp
stc
jecxz
mov
mov
adc
cwtl
mov
lret
popa
fdivrs
lock
leave
mov
dec
xchg
mov
fs
xchg
dec
mov
push
jge
mov
pop
mov
jle
stc
mov
xchg
mov
rorl
cmp
imull
test
xchg
out
jb
add
sbb
dec
adc
sbb
mov
cltd
dec
das
cmpb
in
shll
and
push
scas
mov
cmp
sbb
stc
and
fwait
push
mov
push
leave
add
dec
push
pushl
sarl
fcmovnb
jae
faddl
xlat
arpl
xor
pop
lea
and
in
and
std
fstpl
aas
in
add
dec
add
lods
call
inc
push
dec
xchg
jnp
arpl
xchg
fcomp
aam
ficompl
ja
push
or
add
xchg
outsb
sbbb
xor
cmpsl
sbb
ljmp
mov
cmpb
sub
lods
lcall
sbb
jno
jge
mov
cs
call
inc
mov
adc
in
fmull
ficoml
adc
arpl
rclb
cmp
pop
ret
mov
decl
push
xor
int3
in
adcb
cli
adcl
mov
imul
fs
pop
mov
fmull
cs
clc
jbe
outsb
mov
pop
push
add
xor
xor
or
mov
fdivrs
iret
fptan
inc
sbb
dec
jo
add
jmp
mov
test
jno
popf
fbstp
dec
jae
outsb
push
sub
push
inc
cmp
jg
xchg
inc
push
mov
mov
js
jle
ja
lds
incl
mov
int
call
adc
cmp
sub
pop
xor
cs
notb
sub
rcll
push
mov
mov
outsb
mov
aas
sbb
xchg
mov
pop
in
mov
test
loopne
ds
js
rclb
adc
in
add
movsb
pop
fsubrs
adc
sti
sub
dec
popf
fistpl
pop
cmp
mov
insb
mov
js
das
sbb
shll
push
xor
sti
outsb
inc
mov
inc
aad
cmpsl
mov
imul
and
or
iret
sub
mov
je
or
sbbb
call
movsb
outsl
bound
sahf
jg
cmp
mov
sbb
outsb
das
push
data16
sub
jmp
ljmp
mov
lret
mov
pushf
inc
imul
pushf
xchg
cmp
dec
cmp
fisubl
and
sarl
cmp
into
divl
push
lds
xchg
sbb
es
jo
sbb
into
sbb
adc
std
or
xchg
inc
shl
jecxz
push
and
aas
and
cs
loopne
xchg
aam
out
cltd
mov
inc
push
mov
pop
pop
cmc
or
and
add
mov
push
and
lcall
and
sbb
xchg
mov
fstps
sbb
or
jle
mov
inc
std
lahf
adc
sub
mov
sbb
sbb
sub
xor
jno
cwtl
outsb
add
outsb
pop
mov
mov
sbb
dec
insb
popl
xchg
mov
sub
pop
mov
dec
int3
dec
repz
ffreep
out
sbb
mov
imul
pop
adc
stos
jnp
mov
jnp
das
bound
cmc
shlb
jp
sbb
outsl
mov
call
dec
pop
push
int
push
imul
sbbl
lret
mov
in
sbb
cli
mov
and
jg
js
ljmp
xlat
mov
sahf
clc
mov
sbb
xchg
je
cmpb
mov
adcb
aas
out
cmp
xor
in
xchg
mov
int3
dec
stos
pop
sub
push
lahf
pop
or
cmp
push
das
aad
enter
sbb
rcrl
adc
popf
inc
xchg
insb
lds
xchg
push
adc
pop
mov
test
inc
lahf
lret
or
cltd
add
xchg
fsubrs
fldl
scas
cmp
pop
jle
xor
jg
add
icebp
xchg
push
movsb
aad
xor
outsl
or
jmp
xchg
les
scas
scas
cmp
inc
cmp
cmpl
enter
sbb
lret
pop
push
jmp
lahf
cmp
cmc
sbb
pop
test
out
lock
faddl
cmp
pop
add
push
dec
and
push
mov
xchg
dec
aas
adc
mov
jg
jg
sarl
sub
pop
addr16
inc
fnclex
subb
sbb
mov
mov
push
test
in
das
or
pop
xor
mov
mov
push
cmp
xlat
fsubrs
mov
pop
cld
sar
ja
pushf
ds
sbb
and
pusha
sub
cmp
cmp
and
cmp
rorl
pop
mov
sub
stc
and
mull
fstpt
jnp
sbb
rcl
push
fcoms
dec
test
inc
xor
cmp
sar
cltd
mov
sub
pop
or
into
push
lea
sar
or
jle
ret
mov
lcall
fs
subb
js
mov
sbb
aas
inc
mov
mov
test
mov
lods
rolb
sbb
sub
jl
inc
add
xchg
cmp
sbb
mov
aas
pusha
shll
inc
fmuls
mov
or
sti
push
pop
or
imul
inc
aaa
add
dec
cmp
ret
mov
mov
cld
jge
aas
sbb
fmulp
fwait
cmc
xor
mov
push
cmp
jg
adc
fdivrl
aas
aaa
push
lcall
sbb
push
imul
mov
pushf
push
jl
xor
add
inc
cs
or
lock
movsb
cmp
jnp
mov
enter
pop
mov
mov
test
dec
inc
lods
sub
push
ds
hlt
dec
mov
mov
lret
fldt
outsb
dec
pop
pop
inc
pop
mov
cmpb
xlat
adc
call
lahf
lds
pop
inc
dec
bound
jbe
jge
rcrb
setbe
push
xor
imul
xchg
and
push
into
cmp
repnz
dec
sbb
cmc
out
cmp
xor
xchg
mov
sub
call
mov
int
or
jno
bound
stc
push
inc
or
adc
inc
cld
fcoml
in
fxch
xchg
pop
jae
or
cmp
jne
out
inc
xchg
mov
mov
adc
cmpsb
popa
xchg
jp
cs
mov
jp,pt
pop
test
into
push
mov
push
lds
mov
rclb
ss
mov
ljmp
shlb
imul
xor
push
stc
stos
in
mov
mov
xchg
dec
pop
cli
xchg
shlb
or
mov
cmp
mov
or
fisubrs
mov
movsb
subb
mov
cmp
or
add
xchg
adc
adc
cmp
ret
stos
fdivrs
cmp
xchg
lods
jmp
sbb
movsb
in
jle
repnz
dec
xchg
jle
arpl
ja
cld
gs
rorl
js
fidivl
mov
sbb
xchg
hlt
dec
shlb
roll
cmpb
and
lahf
out
roll
daa
into
cmp
mov
std
mov
or
aas
mov
mov
and
stc
push
adc
or
decb
mov
popa
rorl
sub
or
mov
arpl
setge
leave
mov
cmp
pop
sti
aad
mov
dec
adc
leave
in
pop
pop
shll
jo
repnz
dec
jb
cwtl
push
mov
fsubrl
or
pushl
loop
jle
jg
jne
dec
jnp
mov
fwait
or
imul
cmp
subl
call
sbb
sub
lea
je
add
dec
push
shlb
fdivrl
dec
insl
pop
mov
sub
lods
mov
mov
out
out
lock
es
je
xor
dec
cmp
cli
sbb
loopne
les
jns
inc
sbb
cmp
into
push
cmp
pop
stos
mov
daa
aas
mov
push
int3
insl
push
leave
pushf
add
sbb
fwait
mov
sub
sti
cmp
mov
mov
out
lds
aas
pushf
xchg
fmuls
add
cmp
enter
ljmp
xlat
sbb
pop
fdivrs
fsubrl
pushf
int
cmpsb
pusha
mov
clc
lahf
xorb
std
pop
sub
and
stos
push
mov
xchg
add
cmpsl
xor
or
pushf
push
xor
jno
jns
in
subb
push
cmp
push
cmpl
fcmovnu
jbe
cmpsl
pop
gs
jle
sub
mov
out
fst
test
mov
jl
and
mov
dec
orb
dec
push
fsubs
rcrb
test
push
fsubrl
adc
mov
push
add
pop
or
into
imul
aam
cmp
adc
aas
fisubs
cmpsb
mov
inc
lods
pop
dec
or
out
xchg
nop
add
mov
mov
or
or
mov
pop
and
popa
inc
add
mov
rcr
aas
in
out
cwtl
mov
scas
in
and
xchg
sbb
mov
sahf
mov
pop
cwtl
or
cmc
fmull
fs
test
xchg
inc
xchg
or
shl
cmp
je
inc
adc
mov
fdivl
xchg
lea
jl
sti
cltd
incl
scas
adc
inc
xor
mov
je
daa
call
inc
into
pop
mov
xchg
xchg
inc
inc
cmpsb
sti
int3
out
test
loopne
cmp
or
push
lret
cmp
pop
iret
insb
sub
ss
adc
jo
inc
pop
mov
push
dec
inc
stos
test
pop
shlb
sbb
fsts
movsb
hlt
arpl
mov
jo
adc
jno
jg
pushf
jnp
xor
adcb
mov
and
cld
popa
jne
jae
mov
stos
gs
mov
inc
out
dec
push
repnz
xchg
enter
mov
mov
inc
or
mov
lea
jecxz
jl
imul
jno
int3
popa
mov
lcall
in
sbb
test
jbe
in
fimull
leave
mov
or
aas
fdivrl
scas
xchg
mov
cli
cs
and
movsb
lds
jp
xchg
lods
inc
ret
pop
movsb
fcomp
jle
fmull
jecxz
jb
xchg
sti
outsb
fwait
shrb
sahf
fildll
jo
xlat
sbb
inc
stos
mov
popf
into
pusha
mov
pop
cmp
push
inc
add
ret
out
pop
jo
sub
mov
jae
fdivrs
std
mov
cmpsb
pop
sub
andb
lcall
push
in
loope
mov
mov
mov
sti
mov
aaa
jl
sbbl
add
in
popf
push
mov
lret
ljmp
push
loope
lods
pop
sbb
das
aas
cltd
sbbl
or
leave
lret
shrl
fcomps
orb
mov
cmp
dec
fabs
out
into
dec
pop
fiaddl
pop
inc
pop
push
rcr
mov
mov
sub
aad
mov
and
aam
or
repz
dec
in
clc
sub
fnstsw
pop
sub
mov
ficomps
push
movsl
into
imul
cmp
mov
push
xchg
insb
mov
and
mov
push
pop
rorl
mov
cld
add
mov
out
test
js
lret
addr16
inc
cld
int
pop
mov
mov
sbb
mov
mov
and
inc
ja
mov
sub
cld
popa
je
mov
jp
jg
mov
lods
mov
jecxz
pop
insl
pop
pushf
push
adc
repnz
arpl
push
add
jb
pop
ds
lcall
dec
setg
cli
lret
inc
aas
mov
mov
insl
sbb
cmp
mov
jmp
idivb
adc
mov
push
stos
adc
cmp
scas
push
sbbb
inc
fdivrl
es
std
mov
stc
and
test
xor
cmc
mov
test
xor
mov
dec
aad
fdivrs
repnz
lret
stos
loop
cwtl
xchg
mov
lds
cmc
cld
outsl
push
out
mov
fsubrl
fildl
pop
jle
pop
idivb
pop
nop
jle,pn
dec
xchg
cmp
mov
stos
jb
mov
in
pop
int3
add
inc
dec
xor
or
mov
jnp
shll
es
outsl
mov
dec
and
mov
adc
sti
fildl
xor
sbb
mov
and
sbb
or
lock
xchg
int3
enter
add
sbb
or
icebp
rol
xchg
leave
xchg
lcall
mov
pushf
sub
fistl
je
aam
scas
das
addr16
cwtl
stos
sbb
aam
jno
push
jg
sub
jmp
jg
cli
mov
fmuls
leave
fmul
divl
repz
sbb
pop
sbb
sbb
lock
push
inc
xchg
call
add
push
call
loopne
ds
mov
mov
jne
imul
popa
aas
adc
dec
ds
pop
xchg
dec
xchg
mov
or
sbb
aam
or
pop
and
out
faddl
adc
pop
cli
imul
jo
dec
jns
add
and
test
mov
movsb
and
sbb
pop
inc
stc
push
add
lahf
lds
xchg
dec
pushf
jmp
ds
cli
stos
mov
andl
pop
inc
sarl
aad
inc
inc
scas
jge
in
movsl
mov
xlat
lock
xor
arpl
xchg
and
mov
fs
mov
aas
sub
ret
fmuls
jne
imul
ja
dec
lcall
xchg
add
cmp
cmp
fimuls
cltd
mov
or
ljmp
dec
cli
dec
fcoms
stc
or
out
into
sbb
in
push
cli
or
push
aaa
cmpsl
cmpsb
cmp
jle
add
rorl
roll
inc
pop
pop
lock
or
lods
mov
add
xor
bound
js
popf
cmp
add
ljmp
movsl
int
scas
mov
mov
cmp
mov
fcoms
push
push
mov
aad
cmp
idivl
or
hlt
fdivrs
mov
leave
pushf
aas
js
dec
jmp
add
mov
pushf
ret
hlt
shll
dec
stos
mov
cmpl
dec
insl
mov
xlat
push
xor
pop
xchg
test
mov
xchg
xlat
int3
pusha
push
fwait
shl
iret
pop
or
adc
aam
dec
jge
js
jno
clc
ds
cmpsl
and
sarb
std
dec
cs
ficompl
push
ds
in
cli
or
ret
add
cmp
cs
notb
dec
dec
jns
pop
xchg
or
xchg
cmp
mov
xor
pop
pushf
xor
movsl
push
test
test
dec
shlb
push
xor
aas
inc
arpl
pop
test
sub
scas
lahf
cmp
inc
push
imul
dec
jnp
mov
mov
mov
jg
pop
add
inc
lret
out
sbb
adc
test
lds
nop
cmp
test
pop
repnz
loopne
ja
mov
xchg
push
mov
or
pop
xor
cmpsl
and
or
mov
xchg
jne
mov
inc
add
mov
xchg
mov
cld
out
cli
mov
sbb
test
dec
clc
jns
dec
and
pushf
lahf
mov
mov
pop
sahf
ret
repz
add
pop
popf
lcall
cltd
push
dec
xchg
push
pop
mov
shlb
inc
fsubr
cli
faddl
pop
xchg
cwtl
mov
test
pop
fidivl
dec
add
xchg
aas
pop
cli
jnp
in
inc
std
scas
pop
mov
pusha
gs
gs
pop
sbb
wrmsr
loopne
scas
int3
cmp
les
xor
push
or
jmp
outsl
call
jb
mov
shll
cmp
cmp
mov
mov
ror
pop
mov
pop
and
loop
mov
jg
mov
fadd
mov
fstpt
push
jg
arpl
dec
call
cli
mov
jbe
mov
imul
fwait
cwtl
popl
sbb
sub
push
and
dec
or
aaa
and
cmp
mov
test
mov
je
xchg
lock
das
and
test
jl
pop
dec
iret
imul
jg
ret
rcrb
icebp
sub
xchg
xor
sbb
jl
sub
rcrb
outsl
add
xorl
cld
pop
pop
fildl
cmp
outsb
sahf
pop
dec
cs
mov
mov
movsl
jb
pop
mov
xor
dec
pop
jo
mov
mov
cmp
xor
popl
push
test
or
aad
inc
mov
lret
fnstsw
cwtl
push
cmp
cmp
in
ret
and
mov
xchg
pop
or
mov
add
add
add
fcomps
sbb
enter
xor
inc
sarl
testl
push
decb
adc
rcr
insb
mov
xchg
xlat
shrb
sti
push
pop
and
sbbb
jg
jne
in
pop
imul
data16
xlat
jae
lods
outsl
lock
test
jno
add
push
clc
inc
fdiv
jb
sti
outsb
lods
cwtl
sub
ljmp
cmc
test
xor
and
fistps
mov
mov
das
sbb
scas
inc
xchg
rolb
ljmp
adc
lret
mov
push
scas
push
insb
imul
je
mov
push
cltd
sti
or
pop
ds
sbbl
jno
push
dec
stc
stc
xchg
dec
sahf
loop
lahf
imul
pop
and
mov
test
ds
int3
addr16
xchg
mul
mov
dec
fnsave
jg
xor
mov
je
movsb
inc
je
sbb
push
aaa
movsl
mov
data16
xor
pop
decl
add
int
fisubrs
xchg
mov
ret
mulb
sub
and
test
frstor
mov
iret
sbb
ljmp
fadd
pusha
lret
mov
inc
repnz
push
pop
xor
cmp
mov
mov
cltd
xor
adc
push
jno
clc
cmpsb
test
jmp
cmp
jg
dec
mov
daa
sub
sbb
sub
jnp
iret
sbb
roll
add
fsubr
mov
js
jno
pop
cmp
mov
ja
stc
fstpt
scas
sub
jg
cmp
cmpl
mov
and
lds
mov
jae
movsb
pop
in
jne
cmpsb
xchg
imul
cmp
fnstsw
rcr
stos
adc
cwtl
jl
jne
lcall
push
xor
shrl
xchg
xor
mov
xchg
test
out
into
fs
add
xor
popl
hlt
jecxz
cmpsb
lahf
ss
dec
pop
aas
cmp
icebp
negl
mov
popf
inc
fmuls
cmp
push
mov
adc
jmp
sub
addl
push
and
xchg
push
mov
jmp
test
fidivrl
cwtl
adc
or
rcrl
dec
in
sbb
out
sbb
cltd
mov
fsub
mov
in
pushf
lods
jmp
shll
fistps
cmp
mov
jle
sar
or
sub
arpl
les
sahf
incl
add
outsb
and
stc
scas
cld
das
cmp
inc
cli
clc
pop
fisttpl
and
aas
lcall
test
push
adc
push
icebp
mov
jg
pop
inc
pop
int3
insb
pop
dec
xchg
sbb
push
xor
or
imul
xlat
cmpsl
sbb
cmp
jmp
sub
inc
mov
sbb
xor
addr16
call
repnz
mov
xor
stc
and
data16
mov
call
mov
pushf
test
mov
movsb
popf
push
out
scas
lret
aas
imul
orl
adc
scas
push
sbb
add
cmp
data16
and
and
std
jp
cmc
pop
int
or
dec
xchg
mov
test
pop
psrld
rolb
cmpsb
mov
push
jno
adc
cld
leave
pop
push
ja
fcomps
xchg
fcoml
lds
pop
mov
xor
jne
movsl
pop
sahf
dec
notb
mov
call
xchg
xchg
cmp
ret
cmpsl
addr16
mov
fmull
mov
xchg
push
sbb
in
dec
leave
pop
mov
push
fwait
sub
push
scas
sti
leave
sbb
cmp
xor
rep
loope
jle
adc
popa
hlt
daa
insb
cld
shlw
xchg
cwtl
fdivrl
sub
movsl
jg
pusha
mov
int
shr
fcomip
adc
lea
jb
shll
in
neg
mov
cmp
andnps
pop
aas
cmpsb
out
sub
ret
add
lret
pop
mov
sbb
adc
cmp
bound
jecxz
test
cmpsl
xor
aad
cmp
loop
das
push
lahf
adc
add
pop
cli
imul
and
pop
das
cmp
sbb
or
jg
cwtl
pop
loope
push
das
lds
pop
rcrb
out
outsl
pop
jns
lods
jno,pt
xchg
movsb
stc
call
mov
xchg
fs
push
cs
fwait
mov
add
pop
out
cmp
push
idivb
fdivl
mov
out
scas
out
fmull
aad
jle
cmp
jg
stc
push
mov
jnp
cmpb
frstor
cli
in
xor
lahf
push
cmp
std
xchg
sbb
scas
jmp
pop
sbb
hlt
aas
sub
aas
add
sahf
cld
add
mov
shrl
ret
jg
fisubrs
dec
jmp
leavew
jp
mov
or
jb
hlt
mov
mov
dec
pop
add
incb
jle
mov
icebp
mov
dec
cli
adc
hlt
add
and
ds
pop
jb
call
popf
add
push
ret
adc
or
aam
pop
mov
jno
sbb
jg
sub
mov
cmpsb
dec
dec
sbb
jne
jne
jno
cmp
sub
js
shr
sbb
push
mov
inc
mov
jmp
outsb
pop
jbe
dec
mov
pop
mov
scas
cli
enter
push
dec
cmp
movsb
mov
sti
insl
aad
lods
mov
test
cmpsb
ss
jns
jnp
std
jmp
test
mov
outsb
cmp
sub
mov
ds
idiv
cmp
lods
movsl
sub
xchg
mov
mov
rorb
cmp
dec
inc
cmc
stos
das
push
xchg
mov
cmp
je
dec
jb
ja
outsb
test
mov
sub
sbb
pop
out
mov
pop
iret
aaa
fwait
mov
xchg
mov
ja
push
pushf
jb
das
mov
xlat
cld
push
mov
pop
into
lock
push
or
loope
ja
aaa
jne
jb
in
hlt
loopew
and
and
sti
lods
fsubl
int
ja
sbb
adc
cmp
jl
rcr
pop
sub
mov
mov
sbb
xchg
pop
mov
sub
ljmp
sbb
mov
mov
aam
stc
sbb
sub
pop
dec
cmp
fists
int3
add
or
loopne
ja
out
mov
std
pop
fucomi
adc
inc
add
packsswb
fcoms
mov
sbb
scas
pop
test
pop
popf
and
cltd
pusha
sub
mov
imul
mov
push
lret
push
in
in
fadds
xchg
inc
push
mov
jge
mov
xor
popa
and
test
adc
out
cmpsb
xchg
xchg
pop
and
push
popf
sti
mov
push
aaa
fidivs
inc
xor
mov
addr16
out
ficompl
loope
leave
clc
aas
mov
xchg
mov
push
incb
scas
cmp
and
xchg
sbb
adc
loop
sbb
mov
jecxz
daa
mov
fcomip
fimuls
xor
ss
sbb
sti
sbb
inc
insl
dec
pushf
xor
jo
aas
fwait
cmpsl
incl
in
adc
outsl
mov
repnz
outsl
sti
movsl
push
mov
push
data16
xchg
inc
pop
cmpb
adc
sarb
out
adc
aaa
gs
pop
xchg
fdivr
mov
jno
cmp
inc
aad
and
cmp
adc
je
xchg
shll
sarl
mov
cwtl
pop
sbb
or
pop
or
sbb
mov
adc
pop
xor
sar
out
mov
enter
and
shlb
out
jne
xchg
mov
inc
das
je
sahf
mov
in
mov
cs
pushf
lret
data16
pushf
leave
dec
andb
sarl
pop
test
pusha
mov
or
pushf
fimull
adc
mov
les
insl
stc
in
lock
jl
stos
fbstp
mov
pop
pop
ljmp
pop
xchg
test
std
ss
cmp
aaa
mov
dec
int
inc
cmp
jg
dec
lods
pop
imul
scas
neg
sbbb
push
nop
adc
ret
scas
jae
push
mov
ret
int3
jbe
sbb
iret
cmp
sbb
movsb
cmp
mov
ret
negb
jo
scas
les
xor
push
cmp
cmpsl
dec
jmp
jecxz
dec
or
cmpsl
pop
test
sti
push
dec
sahf
add
das
ficompl
adc
and
inc
or
lahf
leave
je
pop
push
je
dec
mov
cmp
mov
xlat
ss
cmc
mov
pusha
mov
loope
mov
and
push
mov
fwait
push
ss
sbb
es
mov
icebp
jns
push
imulb
ret
cmp
jne
mov
movsb
cmp
cmp
pop
out
cwtl
cmpsl
xor
inc
sub
or
sbb
es
lcall
cmpb
fsubl
fildl
std
lods
addr16
xchg
mov
jmp
push
sub
loop
loope
lret
popa
inc
pop
pop
push
add
les
sti
loope
cs
mov
mov
loop
jg
mov
loop
push
xchg
sti
cltd
loop
std
sbb
cmc
dec
fsubs
sarl
adc
sbb
push
sub
pop
ss
mov
lahf
pop
stos
jp
loop
pop
sbb
cmp
jle
sub
scas
aas
nop
aam
outsb
fdivrs
cmp
or
sbbl
jae
es
and
add
push
or
dec
sahf
xchg
sti
inc
enter
jb
push
cwtl
lods
mov
imul
ss
insb
je
fisubl
jno
pop
mov
aas
and
sbb
dec
pushf
add
push
pop
cmp
cmp
jae
jb
or
shrl
xchg
inc
lea
push
repz
jg
fstpl
jno
std
int3
push
std
sub
sahf
push
inc
pop
pop
pop
ds
mov
push
cmp
aas
fdivl
xor
lea
xchg
pop
cmpb
shrb
nop
addr16
sbb
add
xchg
or
jmp
mov
or
std
notb
sahf
jmp
dec
pop
jnp
lds
filds
xor
xor
push
sahf
xchg
mov
and
repnz
sub
fwait
jle
pop
push
out
stc
popa
dec
mov
mov
jne
fdivrs
and
xor
leave
cmp
cli
inc
int
jnp
orl
inc
mov
jae
fcomp
leave
mov
rorl
pop
andb
daa
pushf
xchg
lret
aas
sti
ds
lret
fwait
sti
add
add
mov
cld
fdivr
adc
fcmovu
int3
mov
movsb
dec
ret
and
mov
xor
dec
xchg
push
lcall
movsb
jo
movhps
cmp
xor
jae
mov
add
sbb
and
pop
or
push
test
rcrb
aam
mov
sub
cmp
jnp
addr16
bound
out
lret
mov
lcall
mov
push
incb
icebp
gs
sub
mov
push
cwtl
loopne
mov
lret
scas
pop
inc
bound
adc
jg
or
push
adc
ret
push
mov
and
cld
loop
cmp
jnp
hlt
out
cmp
in
sahf
inc
dec
lods
xchg
ret
and
je
dec
jl
addb
aam
push
dec
xchg
int3
out
pop
lods
cmovb
std
inc
cmp
icebp
adcl
jne
lods
cmp
dec
stc
add
cmpsb
adc
sbb
scas
dec
in
mov
idivl
sbb
hlt
es
sbb
mov
arpl
loope
jmp
test
push
inc
in
cmpsb
inc
pop
lea
pop
into
dec
dec
decb
fildl
fsubr
lock
mov
pop
repz
nop
loopnew
dec
sbb
jbe
iret
into
pop
vsubss
cli
pop
xor
les
ja
xchg
adc
adc
test
cli
lds
test
cmpl
mov
sbb
scas
aaa
jnp
inc
les
mov
or
cmp
adc
insl
aas
dec
or
mov
mov
fdivr
adc
add
xor
aaa
sub
dec
test
ret
aam
in
lock
in
ret
ficoml
icebp
stc
mov
cmpl
pop
or
fs
es
fcomps
out
lret
jmp
mov
ss
jecxz
push
mov
in
cltd
mov
pop
mov
aad
mov
jno
and
andl
cli
or
mov
cmp
mov
jmp
jle
push
pusha
xor
sbb
adc
adc
ss
jns
xor
aad
aas
aaa
jle
rorl
adc
xchg
cmp
add
jg
and
mov
js
jae
inc
dec
xchg
sub
cmpsb
inc
jbe
ret
push
in
cmpl
push
inc
in
js
mov
in
stos
ja
mov
data16
inc
inc
jns
incb
ja
xchg
leave
push
pop
mov
or
iret
out
pop
cmp
mov
xchg
mov
fs
dec
mov
rep
sub
mov
pop
ds
xlat
jnp
jle
out
popf
notl
sub
xchg
sbb
cmp
repnz
mov
dec
push
fdivs
in
pushf
mov
les
shrl
data16
call
mov
into
fmull
loop
or
sti
popa
sub
sti
ljmp
pop
mov
stc
call
sub
xor
lea
and
pop
movsl
mov
leave
mov
or
out
adc
pop
pop
cmp
push
xor
inc
sub
cwtl
jp
mov
dec
mov
ljmp
aas
lret
nop
out
nop
jmp
cwtl
out
fwait
and
inc
dec
cli
push
inc
fucomi
das
mov
ja
test
inc
fucomi
scas
jnp
inc
sub
mov
xchg
mov
xor
lret
aaa
or
jg
mov
jno
cli
stos
loope
adc
cmp
or
xlat
adc
std
repz
neg
inc
mov
pushf
xor
push
cli
gs
repz
mov
int
xor
adc
sub
adc
adc
mov
ja
cmp
lcall
ror
or
sbb
mov
arpl
sbb
xor
icebp
jl
dec
rcrl
inc
insb
test
pop
in
aas
cwtl
pop
cmp
or
filds
sbb
mov
dec
les
jle
fwait
aam
sbb
pushf
or
in
jae
dec
sahf
mov
movsb
ror
mov
aam
or
mov
pop
mov
dec
ds
enter
std
jg
add
cmp
inc
sahf
xchg
push
ds
pop
or
aad
imul
int3
lret
xor
stc
sbb
cwtl
cltd
fistpll
mov
adc
ret
push
arpl
jle
jns
and
mov
mov
cli
pop
lods
inc
lods
push
fwait
jne
sbb
int
cwtl
or
dec
jle
xchg
cmp
jg
mov
es
cmp
shr
shrb
mov
les
add
ds
jns
pop
mov
sti
aam
lcall
jmp
fldenv
pop
sub
dec
adc
xorl
lds
jle
inc
popf
fildll
out
adc
pushf
inc
popf
std
popf
jns
lods
mov
arpl
lea
mov
ret
or
mov
jno
enter
cmp
xchg
in
xchg
das
cmpsb
cwtl
lods
cmpl
mov
insb
pushf
std
cmp
aas
mov
cmp
jle
into
fwait
xchg
jb
ret
jnp
std
popa
jge
dec
es
inc
push
and
fstps
stos
sbbb
jp
and
xchg
sub
mov
jl
pop
jmp
inc
mov
mov
pop
cmpsb
fcomip
lods
pop
xchg
mov
cltd
rcll
pop
es
es
mov
and
jo
mov
mov
scas
cltd
cs
roll
jne
or
repz
mov
in
out
and
inc
test
cmp
jl
lret
jne
sbb
hlt
push
or
loop
sub
pop
push
fwait
jg
dec
mov
jg
pop
testb
mov
sub
mov
in
outsb
and
sbb
les
and
or
mov
mov
popf
cmp
out
je
movsb
pop
aad
mov
inc
test
push
mov
aas
pop
into
cltd
imul
faddp
add
loope
cwtl
sub
mov
jg
lock
nop
loope
into
jp
pop
sub
or
jae
jns
mov
cwtl
loopne
mov
faddl
roll
push
ds
or
sti
push
into
inc
lret
lcall
jmp
popf
push
pushf
add
pushf
repnz
mov
into
rcr
xchg
stc
fcomps
jge
pushf
xor
aad
pop
or
out
pusha
movsl
cmp
pop
fcoml
test
loop
xchg
push
sbb
xchg
popl
sbb
xchg
mov
adc
sbb
lcall
into
cmp
xor
cld
inc
fstp
mov
sub
jns
mov
fists
lds
test
outsl
mov
push
imul
pop
leave
arpl
adc
xlat
mov
push
ficoml
add
repz
pop
sbb
cs
jecxz
sbb
stos
ss
stc
das
jo
lds
push
ds
loope
mov
pop
cmp
jge
es
in
testb
cld
adc
or
fdivrl
jae
scas
ljmp
pop
fistpl
push
fsub
and
cmp
mov
fistl
cmpsl
cld
push
test
sbb
cmc
stos
dec
aad
pop
vmaxps
mov
frstor
mov
xor
out
push
adc
jnp
xchg
mov
mov
and
inc
sub
imulb
dec
fwait
data16
pushf
fcmovb
enter
out
std
xchg
mov
cli
pop
push
mov
js,pt
test
push
mov
xor
sbb
jbe
test
and
outsl
dec
or
and
adc
jbe
popl
insb
out
sbb
gs
pop
dec
gs
dec
test
mov
and
push
lcall
jp
incl
aad
cmp
and
mov
push
dec
inc
cmpsb
cmp
mov
and
sbb
stc
add
xor
push
ljmp
inc
cltd
out
pop
lea
lea
sar
sahf
fstps
mov
pusha
lods
ss
lods
sahf
lcall
and
sub
xchg
ret
add
aam
fcoms
call
adc
jno
sbb
add
mov
pop
les
sbb
mov
pop
fsubrs
sti
sarb
sub
mov
imulb
mov
adc
lea
sbb
xchg
ljmp
fstpl
mov
sbb
das
mov
dec
cmp
daa
xor
inc
adc
push
push
in
les
inc
pop
mov
lea
popa
mov
fmul
daa
adc
pop
ret
inc
loopne
imull
test
aad
sbb
lea
sbb
in
jbe
cwtl
pop
pop
incb
lea
ja
test
aaa
sbb
sti
adc
cmc
mov
mov
cmpl
data16
std
mov
jl
arpl
lods
fstps
cltd
cwtl
pop
in
mov
inc
xchg
repnz
adc
xchg
sbb
sti
pop
lds
inc
std
ss
ljmp
add
adc
imul
ds
subl
push
or
push
mov
xor
jmp
iret
cs
lcall
jp
and
pop
mov
fucomi
mov
insl
bound
pushf
stos
fnstcw
sub
lods
or
aas
loope
rcll
cli
add
enter
push
mov
xchg
jb
insb
in
jp
movsb
inc
and
sbb
pop
sbb
mov
pop
sbb
ja
xchg
pushf
or
fildl
sub
mov
pop
jle
movsl
sti
xor
roll
cwtl
sti
xor
inc
mov
fiaddl
cmpsl
cmp
sbb
and
inc
ljmp
jb
pop
cli
pop
lret
xor
cmc
pop
cmc
movsb
push
cmp
fidivs
cmp
xchg
and
fadds
dec
jp
fadd
ret
or
mov
pop
adc
std
pop
xchg
xor
cmp
push
jp
lods
lret
mov
jne
xor
xlat
mov
mov
or
adc
test
insl
mov
loop
fs
je
dec
repz
fisttpll
cmp
test
aaa
lcall
sbb
xchg
and
adc
fs
xchg
jnp
repz
dec
stc
fmul
negb
int3
fcomi
iret
mov
js
pushf
mov
lret
ja
mov
enter
xor
out
cmpsb
pop
mov
mov
mov
lea
shlb
fstpt
push
mov
xchg
loope
clc
cs
aas
mov
push
sarb
mov
fstpt
xchg
fdivrs
or
orl
sbb
sub
lret
jnp
pop
xchg
xor
add
pop
mov
sbb
into
mov
stos
sbb
mov
movsl
lock
pop
pop
fstps
pop
aam
out
imul
into
lds
add
dec
sahf
cli
cwtl
in
dec
jno
out
clc
and
push
les
daa
sub
daa
xchg
xchg
rcr
divps
adc
jns
sbb
std
or
les
or
xchg
into
inc
loope
sbb
int3
outsl
fwait
repz
mov
xor
fs
dec
dec
add
imul
fidivl
mov
icebp
fildll
add
mov
push
fcoml
fneni(8087
and
sarl
fadds
ljmp
mov
add
ljmp
fsubrs
xchg
mov
jmp
scas
popf
pushf
mov
jno
aaa
fcompl
adc
fists
rcrb
out
stos
decl
outsl
pop
ljmp
mov
aas
rclb
sbbb
mov
jnp
inc
les
and
popa
sti
push
dec
inc
fisubs
sub
push
cli
enter
pop
mov
pop
cs
jg
or
clts
stc
jae
addr16
pop
mov
mov
fdivrs
popf
mov
mov
int3
std
mov
pop
xchg
cwtl
xchg
pushf
lfs
je
pop
sti
adcb
shl
lcall
aaa
mov
addb
xchg
push
jle
dec
inc
ja,pn
mov
cld
ljmp
jg
mov
cwtl
out
pushf
cli
push
and
push
xchg
fwait
xchg
pop
mov
inc
js
mov
jecxz
movsb
lret
sbb
movsb
pop
and
pop
xchg
jl
add
mov
inc
sahf
sub
push
rcr
fldcw
push
ds
fwait
cmp
cmp
pop
mov
ret
fsubl
clc
jbe
cmc
aas
out
lods
je
cs
cmpsb
xchg
push
jle
sti
rcrb
or
xorb
pushf
mov
push
mov
xor
es
and
pushf
pop
or
sbb
ds
fisubs
add
daa
pop
xchg
mov
xchg
fisubrs
push
aaa
popa
in
push
nop
cmp
push
push
mov
popa
cmpb
mov
jbe
jae
xchg
dec
or
or
mov
inc
sbb
sub
jle
push
jecxz
pop
imul
cli
fnstsw
mov
xchg
jne
inc
in
mov
loopne
add
sbb
and
in
in
incl
das
push
into
test
pop
push
inc
sbb
dec
inc
push
xchg
cli
lods
sub
push
outsl
cmp
jmp
cli
sub
xchg
pop
movsb
xchg
add
call
aaa
into
ss
data16
aas
dec
cmp
xor
lods
xorl
mov
or
cmpl
sbb
test
mov
popa
out
ret
outsb
rolb
pop
cmc
xor
jl
cmp
pop
cld
insl
ja
mov
call
add
mov
outsb
xorl
decl
es
lcall
pop
fsubrs
fdivrl
je
pop
and
xchg
loope
mov
fildl
arpl
adc
mov
insl
adc
pop
leave
mov
mov
in
pushf
fcoml
adc
xor
push
push
push
inc
mov
std
daa
pop
jno
jnp
lods
inc
and
fcoms
cmp
pop
inc
dec
fcmovnb
faddl
adc
mov
jmp
ret
outsb
repnz
ss
popf
cwtl
cltd
dec
and
jl
mov
and
ret
ret
and
cmpsl
xor
lahf
incl
jecxz
sahf
cmp
jne
fstps
fwait
sub
pop
add
cltd
fsubrs
fisubl
push
mov
and
push
jl
lret
popa
mov
inc
pushf
daa
lods
xorps
jge
cli
add
fadds
mov
aas
and
adc
push
js
fistl
cmpl
ret
mov
sbb
cwtl
xchg
test
jecxz
cmp
outsb
dec
jb
cwtl
mul
or
test
das
mov
adc
sbb
lret
jno
xlat
js
mov
mov
sbb
mov
jns
add
push
mov
iret
loope
xor
inc
es
lods
lcall
push
out
test
mov
enter
cmp
cmp
pop
shl
add
xor
fcoml
add
sbb
std
addr16
pop
bound
fidivl
push
fld
lods
sbb
jle
dec
xor
roll
std
lock
fwait
negl
mov
mov
push
jnp
icebp
in
mov
push
mov
cmp
sbb
and
iret
sar
in
rorl
fstpt
out
pushf
in
leave
in
ret
aas
push
icebp
test
or
js
mov
movsl
pop
out
and
cmc
xor
in
cwtl
ret
or
clc
cmp
outsb
jae
mov
mov
sub
nop
aad
sbb
dec
sub
adcb
out
cwtl
or
adc
sub
ja
push
or
movsl
cmc
daa
mov
mul
hlt
divl
out
xchg
sti
lods
ss
dec
outsb
push
neg
mov
or
add
stc
gs
aaa
leave
push
push
xchg
mov
mov
mov
sahf
push
fmull
xchg
call
jne
cmp
test
aam
xchg
cmp
mov
xor
mov
fstpt
fstps
mov
mov
fnstenv
test
div
xchg
xchg
movsb
ja
outsl
test
xor
lds
pop
add
outsb
ljmp
mov
cli
fwait
pop
gs
adc
sbb
add
into
inc
mov
es
add
fwait
pop
push
mov
sbb
dec
pop
cmpsb
jg
pop
mov
movsl
xchg
imul
sti
dec
sti
loop
shl
pop
mov
outsb
mov
js
sahf
inc
into
fnsave
adc
cmpsl
mov
jl
or
mov
aaa
mov
cmp
cmp
sub
jb
call
leave
pop
xchg
inc
cwtl
data16
cltd
jnp
sbb
push
adc
rcrl
pop
xor
pop
std
je
cltd
sahf
jg
lahf
sub
stos
and
int3
and
inc
fdivl
fwait
xor
jl
ror
xchg
dec
cs
pop
push
mov
fistps
hlt
xchg
add
sub
scas
cmc
sbb
jo
and
fwait
das
mov
mov
test
ficoms
pop
rclb
cmp
imul
lret
sbb
jg
push
jae
cli
push
lods
jnp
cmp
lods
subl
or
repz
out
sub
incb
pop
jmp
and
movsl
jnp
push
jo
dec
mov
fucompp
andb
faddl
jmp
and
push
mov
lods
in
pop
cmp
je
and
pop
dec
or
adc
mov
and
or
inc
mov
test
cwtl
sahf
fwait
cmp
cmpsb
repnz
fsubrl
iret
xchg
dec
pop
aad
nop
and
add
das
daa
cld
adc
cs
jae
dec
mov
add
aas
mov
scas
lods
leave
xlat
pop
mov
popf
icebp
cmpsl
xor
insb
pop
jo
push
aas
mov
mov
shll
xor
ret
xchg
mov
int3
pop
ds
in
fadd
push
mov
shl
push
pop
and
lods
jmp
inc
ret
adc
or
sbb
xor
fmuls
cmp
popf
subl
sti
ret
stos
je
xor
mov
sbb
xor
lods
mov
sub
es
repz
jg
fcompl
inc
xor
cmp
cmp
ja
inc
cld
sub
add
pop
fisttpl
sti
mov
pusha
push
pusha
hlt
mov
clc
xchg
scas
fmuls
and
in
loopne
xor
cmpsb
or
adc
into
mov
fldcw
out
adc
out
or
xor
fwait
pop
into
inc
dec
add
sbb
mov
adc
lds
out
adc
sbb
lods
cmpsl
push
sbb
jmp
gs
xchg
cmp
das
pop
test
jle
or
sbb
jge
and
aas
mov
pusha
sub
mov
test
daa
jmp
ret
cmpsb
test
es
mov
pop
xlat
out
add
insb
dec
popf
cmp
push
cltd
fsubrl
sbbb
mov
test
leave
inc
pop
je
push
xchg
mov
add
lock
dec
rcl
inc
in
ret
mov
out
pop
cmp
xor
fsubrs
inc
mov
adcl
bound
scas
das
sub
insl
cli
data16
ficomps
mov
ret
test
idivl
xor
lcall
xor
push
jae
ja
push
out
in
leave
jae
xchg
pop
mov
add
add
bnd
jle
sbb
jle
sbb
jbe
mov
decl
bound
aaa
cmp
test
sub
pop
jmp
xchg
fsubrs
push
adc
repnz
or
bound
enter
pop
dec
cmp
repnz
ds
xor
fwait
scas
xchg
cmp
mov
add
aaa
jnp
mov
ljmp
int3
pushf
jecxz
xor
pop
ret
decl
xor
ror
gs
cli
xchg
scas
mov
pusha
mov
mov
dec
dec
sbbl
mov
mov
insb
adc
rcrb
mov
jae
cmp
sahf
jle
daa
adc
inc
sub
pop
stos
mov
dec
mov
sbb
mov
int3
sahf
sub
sbbb
lcall
out
mov
mov
sub
and
mov
idivl
test
sbb
jbe
mov
enter
jb
mov
mov
push
dec
andl
sub
push
sahf
and
ds
popf
mov
xor
cmpsb
add
cli
fsubrs
jb
jbe
pop
cmp
jecxz
add
push
pusha
xor
ret
hlt
into
call
aam
shrl
pop
push
mov
cs
je
gs
fmull
pop
aas
sbb
sbb
jp
std
stos
pop
adc
sahf
sbb
cwtl
mov
ret
xor
mov
push
les
xchg
xor
and
jnp
bound
inc
mov
sbb
bound
daa
jns
inc
cmpb
rorb
test
mov
xchg
enter
xchg
faddl
lds
jg
jns
lods
repz
arpl
cmp
jle
sahf
mov
mov
lods
ljmp
fdivrl
and
jp
lahf
je
cmp
mov
pushf
enter
test
fidivrs
sbb
pop
icebp
fadds
ja
lea
scas
push
scas
jne
movsl
sbbb
jg
loope
add
fsts
xor
fcomps
xor
xchg
out
xchg
sbb
scas
adc
dec
fldcw
xchg
cld
push
pop
dec
ficompl
fwait
add
mov
lret
cmp
aam
sti
adc
xchg
cmp
rcrb
aas
in
dec
lahf
mov
sbb
cld
das
outsb
iret
mov
jnp
test
or
cmp
sub
jne
adc
stos
sub
stos
lods
jbe
mov
sbb
xchg
pusha
push
mov
fcoms
into
pop
fisttpll
mov
popf
push
and
fcomps
lret
mov
xchg
pushl
mov
sbb
mov
outsb
int
sbb
icebp
sbb
xchg
sti
addl
sbb
out
push
xchg
mov
ret
ret
pop
clc
pop
arpl
aam
sbb
cmpl
das
jp
ja
lahf
mov
or
flds
push
xchg
in
and
popa
lahf
and
cmp
sub
mov
les
push
sub
jg
xchg
xor
fwait
es
clc
out
sbb
fwait
aas
inc
jns
add
pushf
or
mov
inc
push
inc
xchg
inc
popf
imul
int3
std
sbb
nop
aad
mov
xor
mov
cmp
sub
mov
popa
hlt
or
std
ret
stc
push
cmp
cltd
jl
xor
pop
or
mov
sbb
mov
nop
mov
push
xor
je
mov
sub
sbb
add
test
add
sti
and
sub
cmp
dec
sbb
lret
repnz
jae
into
sbb
or
dec
lods
iret
inc
stc
mov
lret
and
xchg
add
pop
ds
aaa
sti
adc
ret
js
lahf
aad
mov
jge
sbb
adc
push
cli
dec
push
call
pop
push
add
in
mov
aas
aad
xor
sti
fcompl
adc
decl
ret
fsubl
mov
xchg
push
sub
lret
jecxz
arpl
mov
int
ja
insb
cmp
cmp
pop
dec
arpl
mov
imul
mov
out
dec
jecxz
pushf
cmpsl
mov
cmp
mov
ss
cli
stos
jg
or
cmp
sbb
xor
scas
push
mulb
mov
sbb
xor
cwtl
pushf
xor
imul
lods
xchg
adc
cli
ja
into
lods
push
lret
xlat
cmp
faddl
and
mov
aaa
loop
in
xchg
pop
pop
sbb
xchg
iret
loop
fdivp
scas
aaa
xor
mov
pop
fdiv
push
loope
les
dec
sub
sub
lcall
add
cmp
xor
sub
fistpl
outsl
daa
push
fdivrs
shr
pop
fdivrp
dec
push
in
into
pop
mov
pushl
adc
jnp
cmp
jg
sub
movsb
push
inc
mov
inc
and
sbb
mov
cmp
sbb
sbb
jge
imul
push
out
jae
inc
jmp
cmp
repnz
jecxz
hlt
cmc
dec
sub
inc
enter
sub
lea
rcrl
add
xchg
xchg
sbbb
fidivrl
ljmp
mov
cltd
add
into
ja
ficompl
dec
es
sarb
lahf
inc
rcl
mov
jmp
sti
sarl
movsl
sbb
mov
loope
cli
into
loop
aam
lahf
not
fsubrl
mov
sti
sbb
mov
ds
mov
jle
lcall
xlat
and
test
mov
cmp
rcr
cmpsb
jbe
ret
in
inc
out
xchg
cmp
test
pop
jnp
pop
xchg
sbb
pusha
dec
in
test
xlat
outsb
sub
jmp
mov
lahf
cmp
pop
or
adc
cmc
call
xor
icebp
dec
jp
mov
bnd
mov
ret
xchg
jb
pushf
cld
enter
push
xchg
or
insb
sub
ja
dec
popa
adc
jecxz
outsl
int3
fstl
inc
fdivrs
pop
mov
nop
jbe
stc
shrl
cmp
push
mov
in
add
adc
shrl
call
sbb
int3
jle
mov
sbb
pushf
out
mov
sti
push
ja
out
sets
sbb
mov
daa
andl
inc
pop
aaa
push
pop
std
or
adc
xchg
mov
or
sub
push
sbb
cmp
and
fwait
jb
cltd
cmp
add
fs
xor
fcoml
rcll
scas
pslld
sarb
mov
faddl
sub
mov
and
addl
mov
jle
dec
test
cmp
lcall
test
add
sub
sbb
dec
lcall
cmp
adc
mov
cmp
mov
dec
mov
jno
push
xchg
jnp
xchg
cwtl
push
jb
cmp
add
xchg
rclb
dec
ds
cmp
arpl
add
shll
pop
mov
loope
push
fstpt
out
cwtl
sbb
enter
aas
pop
rcrl
hlt
repnz
adc
jnp
sahf
mov
loopne
popa
cmp
inc
cmp
movsb
stos
pop
stos
gs
and
clc
xlat
fimull
idivb
mov
jb
imul
sbbl
ljmp
insb
mov
enter
adc
popf
cmc
mov
adc
test
dec
ljmp
pop
lahf
pop
push
imul
addr16
sbb
ficoml
lock
cwtl
mov
dec
sub
and
xor
popf
sbb
push
out
pushf
pop
fwait
jg
cmp
cmpsb
imul
lahf
popf
sbb
in
clc
stc
out
mov
lret
cmp
ds
clc
dec
xor
leave
dec
mov
enter
mov
cmp
incb
fwait
sbb
cmp
fstpt
popa
xor
cmp
push
cmp
ja
or
lret
dec
shlb
xchg
sub
jne
sarl
dec
or
pop
jo
rcr
sahf
test
movsl
loope
xchg
filds
cs
adc
xchg
jnp
out
push
add
jnp
mov
jg
orb
sub
inc
sahf
or
pop
popa
jg
fisttpll
cwtl
jno
mov
pop
jle
inc
push
insb
pop
xchg
add
xor
mov
or
jne
fsubs
push
push
sbb
into
xchg
repz
cwtl
cmpsb
imul
aas
or
cltd
dec
pushl
sub
aad
sbb
aam
test
lahf
or
and
fsubrl
inc
sahf
adc
push
lret
lret
sbb
cli
les
in
fadd
cmp
and
rorl
pop
xor
fsub
add
cmp
xchg
pop
sbbl
jbe
sub
fimull
jmp
sbb
add
fisubl
lea
sbb
sahf
xlat
sub
sbb
jbe
cli
lahf
xor
sbb
fcmovne
pusha
aas
and
popl
push
fisttps
out
mov
popa
int3
xchg
mov
sahf
aas
daa
cmp
loope
xor
stos
cmp
in
sub
and
jp
call
lods
push
dec
lods
pop
pop
in
push
gs
or
dec
lcall
mov
or
out
sbb
cli
lret
xchg
cmp
test
mov
mov
sbb
jo
or
out
sub
mov
icebp
dec
add
pop
rorb
mov
dec
xchg
out
inc
test
add
mov
dec
loope
xchg
ja
cmpsl
scas
pop
aad
pusha
insl
mov
sbb
mov
sbb
sar
cwtl
add
mov
xchg
mov
or
xchg
cwtl
sbb
int
pushf
mov
das
mov
push
xchg
rcrb
arpl
sbb
in
xor
mulb
mov
shrl
clc
sbb
lea
hlt
pop
cmpsl
pop
cmp
sahf
test
lea
mov
pop
sbb
flds
cmp
inc
adc
and
mov
sti
insl
les
je
add
jns
fs
sbb
cmpsb
cmp
out
mov
add
pop
call
inc
mov
mov
loop
mov
sbb
ret
and
mov
std
lcall
adc
gs
cli
push
call
jle
lret
inc
aas
mov
adc
addb
xchg
das
fnstenv
std
cmpl
or
stos
xor
fwait
das
lods
lock
aad
inc
outsl
jle
cwtl
pop
je
mov
lcall
dec
rol
xchg
scas
rcr
lea
jo
push
aad
sahf
and
add
or
nop
cmpsl
stos
pop
jmp
les
cltd
popa
mov
push
cli
push
into
js
or
push
cmp
aaa
mov
ja
and
cmp
xchg
xor
jge
cwtl
adc
gs
xchg
lds
clc
shrl
rol
sub
aad
sbb
cmpsl
xor
int3
popa
aad
cld
push
xor
jno
das
mov
fdivrl
cli
inc
push
shlb
cs
xor
pop
or
sbb
inc
sub
adc
ja
pop
out
pop
xchg
mov
fcoms
sbb
push
or
lahf
xchg
cld
dec
cmp
lret
mov
add
std
dec
stc
into
jnp
add
xchg
fsubrs
cli
sub
call
jmp
inc
fmuls
imul
loopne
outsl
fwait
lods
push
cmp
sub
mov
movl
cmp
cli
sbbb
push
call
lods
sbb
inc
loope
loope
es
and
pop
pop
out
scas
mov
sar
cmp
sub
mov
fnstsw
inc
and
mov
sbb
adc
dec
movsl
xlat
xchg
sbb
pop
and
aas
and
mov
push
xor
cmp
rcll
iret
mov
bswap
cld
cmpl
lds
fists
jo
xor
fwait
imul
pushf
movd
pop
test
out
jle
je
sbb
call
testl
push
xlat
ret
mov
cmp
mov
stos
loope
fwait
pop
mov
scas
and
or
add
sbb
das
xor
decb
imul
sbb
pop
pop
in
out
in
mov
sbb
addr16
xchg
pop
popa
fnstcw
pop
mov
add
adc
nop
dec
push
dec
mov
sub
stos
pop
call
fs
push
lret
insl
js
mov
test
out
movsl
fwait
cs
or
sbb
push
aaa
mov
sub
cmpsb
pop
adc
jle
int3
sbb
test
dec
inc
loopne
hlt
in
push
inc
add
mov
in
sahf
out
lcall
int3
stc
mov
pop
sar
mov
push
repz
and
call
xchg
pop
mov
outsl
fistpll
out
cs
sub
nop
stc
fcoms
aas
mov
add
mov
pop
mov
xchg
cli
ds
test
xor
xchg
fwait
imul
rclb
and
stos
aaa
mov
cli
icebp
lock
ret
adc
das
mov
loop
pushf
out
leave
ja
or
inc
outsl
mov
cmp
dec
lret
jnp
into
xlat
mov
adc
mov
into
push
cmp
ljmp
mov
movsl
cwtl
addb
cmp
mov
fwait
push
cmp
sbb
fmuls
es
das
lods
aaa
sbb
push
xor
out
decl
in
cwtl
and
mov
cld
das
cmp
mov
sbb
cmp
cld
cld
pop
imul
lock
or
jp
push
stos
gs
mov
cmp
lods
lods
fnstsw
and
add
push
sbb
mov
faddl
xor
les
mov
call
cmp
mov
push
sub
int
nop
push
in
cs
into
cli
dec
sbb
sub
ror
jecxz
shll
pop
pop
lds
fs
cmp
jle
sbb
out
mul
inc
out
sti
aad
cwtl
call
pop
cwtl
push
xchg
dec
xor
sbb
mov
pushf
inc
mov
xlat
mov
rcrl
inc
cmpsb
push
cld
dec
jg
popf
sbb
jge
jb
aas
aaa
or
pop
inc
xchg
pop
sub
bound
es
or
mov
sbb
mov
add
or
sbb
data16
add
mov
jae
xchg
ret
bound
cmp
xchg
xchg
jp
add
adc
int3
inc
jae
sti
aas
mov
test
inc
scas
sbb
xor
fwait
pop
lods
ror
jmp
repnz
push
and
xchg
inc
lods
aas
ss
push
mov
adc
leave
out
cwtl
cwtl
fwait
and
adc
jp
imul
mov
popf
ljmp
jbe
mov
inc
jl
pushf
aad
and
and
cwtl
sub
sbb
sahf
cmp
mov
loope
inc
adc
mov
lds
cld
sbbl
and
push
fs
out
sub
jle
mov
iret
lods
mov
pop
sub
inc
sbb
fstpl
cmpl
mov
xchg
cmp
jbe
fscale
mov
fstps
jecxz
lret
js
xchg
popa
jae
fistpl
mov
testb
pop
inc
rolb
js
mov
mov
outsb
jl
pop
movsb
jg
into
adc
jge
testb
dec
pop
hlt
ret
aam
fnstcw
mov
iret
xchg
cwtl
xchg
adc
mov
es
pop
dec
jg
jg
push
into
jb
lret
sub
push
daa
xchg
jnp
shl
nop
aas
out
jne
pop
sbb
inc
gs
sub
std
push
inc
mov
mov
fcmovu
dec
xlat
int3
cmp
cmp
lock
repnz
testb
fdivr
xchg
sti
sub
decl
push
pushf
xor
sub
push
xor
enter
cmovo
inc
fisubrl
mov
in
loope
jb
iret
gs
in
enter
sbbb
pushf
test
ficomps
mov
and
loopne
in
pop
stos
outsl
testb
mov
int
dec
enter
push
mov
cld
adc
inc
aaa
mov
and
rolb
test
loopne
xlat
outsb
sbb
jecxz
fstp
lods
xchg
xor
xchg
pop
icebp
mov
sbb
lods
mov
adc
sbb
jmp
jb
ret
fbstp
adc
mov
push
jo
mov
sub
pushf
add
xor
ds
test
and
mov
cmpb
mov
xlat
mov
cli
jp
icebp
or
cwtl
jb
jmp
cmp
pop
or
jo
cwtl
sbbl
dec
jp
xchg
lods
jbe
out
cmp
insl
xor
cmp
lock
pop
mov
loopne
fidivrs
pop
fdivs
leave
es
xchg
sti
enter
aad
add
fdivr
insl
cld
adc
xor
fdivs
ret
inc
cmp
and
adc
jg
daa
test
lcall
push
and
mov
jecxz
jbe
cwtl
sahf
dec
jmp
mov
into
iret
or
mov
hlt
mov
mov
sbbl
pop
cli
aas
js
mov
xchg
mov
push
pop
stc
dec
cs
and
sub
je
xchg
or
negb
sbb
mov
mov
xorb
jae
mov
cmp
push
imul
out
mov
shll
jae
in
lods
cmp
mov
cmpb
sub
cwtl
shrb
push
fisubl
sti
enter
xchg
xchg
or
outsb
ss
aas
mov
xchg
cmp
hlt
push
cmp
in
cld
fisttpll
xor
icebp
xor
cwtl
adc
loop
cmpb
push
fistps
sub
jecxz
mov
and
pusha
test
fcomps
and
in
pop
data16
xchg
pop
sub
outsl
les
mov
scas
cs
xchg
adc
test
sub
cli
mov
lahf
sahf
sti
push
jl
fsubrl
dec
in
or
sbb
test
xchg
pop
or
push
pusha
jb
ja
cltd
ret
inc
jb
fcomp
je
daa
mov
or
mov
test
add
mov
jp
or
into
mov
aam
pushf
into
into
ficomps
nop
leave
sbb
jg
jno
mov
les
and
dec
sbb
in
sub
adc
sbb
popf
cmp
dec
xchg
adc
adc
xchg
in
dec
fwait
fwait
add
mov
inc
pop
sbb
in
xchg
mov
pop
sahf
andl
adc
js
movsb
xor
mov
pop
outsb
push
adc
ret
inc
outsb
repnz
pop
jae
jecxz
nop
iret
sbb
xchg
push
or
push
mov
push
or
sbb
sub
adc
fsubrl
adc
int
mov
js
cli
inc
ds
mov
iret
cli
ja
jne
mov
out
int3
lods
xor
mov
dec
xchg
cwtl
outsb
mov
mov
in
ss
pop
ds
add
shrl
out
pushf
out
pop
ja
sbb
add
mov
in
popf
daa
cli
mov
in
jg
in
mov
idivl
jnp
iret
or
test
movsl
jnp
dec
das
mov
sbb
pop
int3
sbb
pop
mov
cmp
add
and
push
xchg
add
jg
imul
xor
daa
fsubrl
cmp
ds
push
outsb
or
sbb
out
adc
ret
jmp
rorb
xor
movsl
lcall
push
movsb
xchg
mov
mov
sub
cmp
cwtl
adc
fldt
sbb
outsb
sbb
add
roll
in
cwtl
stos
pop
js
ljmp
clc
mov
orl
icebp
xor
mov
inc
pop
jns
ds
out
loope
cwtl
shl
mov
mov
cmp
cmp
xor
push
or
int3
cmp
andb
repz
call
push
mov
lds
iret
out
fcomps
mov
mov
add
sbb
add
pushf
jl
mov
sbb
push
cmpsl
mov
enter
pop
pop
and
mov
jns
inc
fistl
dec
movsb
mov
mov
inc
cli
movl
mov
movsb
pop
inc
and
mov
daa
sbb
mov
idivb
add
xchg
pushf
lcall
scas
cmp
mov
incl
pop
jl
inc
mov
dec
dec
shl
cmp
or
or
and
jp
les
sbb
mov
mov
shlb
sarl
fldt
sar
std
dec
and
movsb
fnstenv
mov
push
push
sub
fstps
iret
or
cmp
movsb
gs
pop
scas
xchg
mov
sub
bound
mov
pop
lahf
call
lcall
push
pop
pushl
mov
iret
or
pop
cmp
adc
js
mov
add
xor
cmp
push
pop
sub
negb
hlt
or
icebp
je
int
lcall
hlt
pop
mov
sbb
or
nop
clc
lock
mov
jne
jl
xor
pop
jbe
insb
test
lea
outsb
in
call
mov
imul
pusha
sbb
xor
mov
pop
add
sbb
push
js
and
push
fidivl
daa
out
rcrl
or
cld
ja
int
jb
pop
mov
iret
flds
daa
sbb
pop
adc
enter
mov
das
rclb
xchg
or
jl
push
in
outsl
sbb
jecxz
es
mov
cli
dec
pusha
daa
mov
mov
cmp
mov
out
mov
outsl
loopw
cmp
xchg
push
cmp
jp
pop
pop
movsb
cmp
push
je
add
cmp
mov
movsb
lahf
lret
jo
pop
jecxz
mov
jmp
adc
push
iret
shl
sbb
stos
sbb
xchg
and
fwait
or
push
xchg
mov
mov
sti
inc
cmp
jmp
pop
lretw
bound
scas
pop
push
test
lock
stos
cmp
aaa
jb
sbbb
minps
mov
enter
sub
jae
inc
mov
fldl
push
mov
xchg
mov
cmp
mov
mov
movsb
aas
push
lock
subl
mov
xchg
loope
repz
fwait
orb
ja
lods
pop
adc
es
fldpi
push
jae
mov
pop
mov
inc
cmp
mov
jg
sbb
jg
aaa
jle
cmp
mov
iret
cmp
add
cwtl
ret
ja
inc
fnclex
xlat
pop
mov
mov
xorb
mov
mov
mov
in
int3
mov
push
jae
pushf
ret
add
cwtl
mov
ss
rcrl
int
stos
mov
jle
mov
push
cmc
push
dec
mov
add
jns
mov
and
mov
clc
arpl
cwtl
mov
lahf
fmuls
pop
jno
scas
jp
jg
test
lock
cmp
push
mov
cmp
arpl
insb
or
lods
sbb
out
push
pop
ds
sbb
adc
mov
pop
mov
push
pop
imul
aas
push
fdivs
sbb
dec
into
sbb
add
add
add
inc
orb
dec
cmp
pop
pushf
or
popf
mov
mov
mov
mov
and
mov
shrb
mov
pop
dec
fists
xchg
out
pop
push
mov
out
mov
rolb
scas
fdivrl
xchg
push
shll
sub
ret
adc
ja,pn
sbb
push
jg
lds
test
dec
sub
dec
movsl
ja
xor
jno
ds
pop
or
enter
fimuls
jo,pt
inc
jl
sbb
xchg
sbb
mov
into
in
popl
aam
loope
mov
ds
pushf
mov
jbe
push
mov
sbbl
es
aas
add
xlat
ja
scas
nop
pop
adc
jns
sbb
push
add
mov
hlt
ret
test
lahf
adc
mov
movsb
add
clc
xor
mov
mov
push
sbb
pop
push
repz
mov
pop
mov
mov
shrl
mov
fmul
mov
cmp
fwait
enter
pop
pop
pop
stc
and
mov
pop
push
push
xchg
nop
je
jg
add
cld
fs
out
dec
lcall
aaa
mov
mov
or
xchg
ds
or
inc
pop
inc
jge
mov
jb
sbb
fldt
inc
mov
aam
push
dec
xchg
fs
and
shlb
add
shrl
in
lods
push
cmpsb
pusha
fcmovnu
ss
aaa
jle
sbb
lahf
ja
pop
popa
arpl
mov
in
jge
mov
inc
mov
aas
out
rol
movl
cmp
jg
sbb
imul
imul
mov
int3
mov
xchg
cmp
sbb
sub
mov
cmp
inc
push
xchg
cmp
into
pop
mov
stc
imul
pop
mov
and
xchg
out
fmul
jb
inc
and
daa
pop
jnp
dec
jl
mov
fidivrs
cmp
xor
fstpt
test
fadds
fildl
xchg
xchg
mov
push
mov
insl
cwtl
pop
aad
pushf
icebp
xchg
sub
mov
cmc
fisttpll
neg
cmp
insb
xlat
inc
and
xor
movsb
lods
stc
push
pop
scas
add
stos
dec
mov
rcr
hlt
cmp
mov
movsl
jp
adc
mov
test
mov
fmulp
je
pop
sub
cwtl
add
outsb
cs
cli
push
pop
jecxz
clc
stos
pop
cmp
inc
xchg
ret
inc
adc
rcl
push
pushf
popf
inc
pop
loope
jmp
add
fcoms
int
jb
mov
cs
in
ret
imul
out
ss
enter
adc
inc
mov
fimuls
movsb
jge
rcrb
iret
and
cmp
pop
ret
sbb
mov
xlat
push
mov
test
sbb
adc
push
sbb
ret
leave
pop
mov
jae
js
fmull
aam
xor
mov
fadds
scas
sti
pusha
inc
sub
imul
fwait
jl
jg
arpl
repnz
into
mov
sahf
faddl
xchg
add
sbb
jb
ja
xchg
cmp
jle
xchg
push
inc
and
push
sahf
stos
cmp
pmuludq
test
incl
test
scas
loope
push
ficomps
int
clc
inc
sub
stos
sar
js
pusha
inc
cmpsl
xor
dec
popa
mov
icebp
or
xor
jg
jl
mov
mov
int3
mov
xchg
mov
fdivrl
fisttps
xor
shl
loope
inc
and
cmpb
push
mov
adc
cli
inc
lahf
jo
sti
in
in
pop
push
jecxz
vminsd
jmp
mov
add
sub
inc
fwait
mov
adc
sbb
cmpsl
mov
push
repz
fsub
pop
lret
inc
xorl
mov
mov
fsub
dec
xor
enter
cmp
push
inc
add
int
arpl
sbb
dec
sbb
lret
in
shlb
and
sbb
imul
icebp
sti
test
hlt
xchg
mov
sbb
faddl
inc
sub
test
popf
in
cmpsb
cmp
mov
jmp
push
jg
xchg
pop
jl
add
lds
in
aad
jb
jne
cmp
scas
lds
movsb
lds
jge
mov
movsb
pop
fwait
pop
jae
cmpb
mov
mov
mov
and
mov
rorb
lea
pop
lds
dec
dec
and
cmp
bound
inc
in
insl
out
mov
xchg
int
lahf
cmp
dec
cli
jl
ja
cli
adc
xchg
or
and
push
mov
cmp
mov
sub
push
fs
adc
jg
adc
sqrtps
push
jl
push
iret
bound
and
adc
dec
mov
in
loopne
mov
xchg
xor
inc
lcall
mov
cmp
das
ret
mov
jl
scas
jns
addl
sti
lods
adc
fidivrs
or
test
inc
and
adc
hlt
cwtl
icebp
inc
push
shrl
fsubs
xor
sub
pop
and
mov
nop
popa
mov
mov
hlt
hlt
test
mov
movsl
xor
sbb
mov
ret
xchg
mov
add
lcall
mov
aaa
mov
or
shll
pushf
enter
out
inc
sub
mov
sbb
aaa
sbb
or
add
lret
xchg
mov
and
lds
mov
mov
sbb
mov
xchg
mov
jg
out
rclb
cld
pushf
sub
xor
repnz
jg
fbstp
jns
sbb
fcomps
push
push
aaa
pusha
ds
or
js
hlt
ret
mov
ds
adc
fs
adc
dec
lds
negl
enter
aas
test
test
mov
dec
cmp
gs
dec
jle
pop
xchg
in
sbb
mov
inc
arpl
and
fadds
mov
mov
mov
mov
in
out
mov
mov
fs
es
pop
pop
cli
sbb
cmp
out
repz
and
sbb
pop
nop
in
ja
adc
int3
inc
std
xor
incl
pop
in
and
or
movsl
les
jo
ret
jecxz
sub
mov
xchg
or
mov
icebp
and
sbb
xlat
and
pop
loope
or
push
cmpsl
cmp
fmuls
dec
shll
fisttps
mov
ja
mov
cmp
decl
shlb
out
fmuls
cmp
mov
fdivl
and
cmp
cmpb
test
stos
mov
arpl
cmp
pop
enter
pop
stc
or
sbb
int3
xor
sarl
je
pop
sub
rcrl
fidivs
mov
lret
sub
jns
xchg
aas
mov
pop
cmp
mov
xchg
xor
fwait
xlat
jmp
leave
test
aaa
sbb
fsubrs
xor
in
or
jns
mov
push
fstpl
jo
mov
sbb
mov
push
outsb
cld
sub
pop
mov
xchg
dec
add
and
jl
aam
shr
incb
inc
popf
js
mov
cmp
imul
fsubp
and
divl
xchg
cwtl
ss
stos
push
sbb
jns
adc
xor
mov
in
pop
adc
sbb
jecxz
adc
pop
cmp
je
cmp
mov
adc
xchg
inc
jns
pop
jge
xchg
out
movsl
les
jge
cmc
cmpsb
xlat
adc
push
jp
add
or
out
ja
push
je
jno
push
lock
xor
lret
or
pop
push
xchg
pop
pop
nop
daa
mov
jo
adc
dec
incl
jl
push
and
outsb
in
jl
xchg
sbb
inc
mov
popa
rorl
js
les
fstpl
adc
xchg
mov
xchg
pop
mov
jl
xchg
cmp
inc
outsl
push
lods
jg
cmp
fisubl
add
ficomps
dec
pushf
mov
roll
mov
sbb
adc
xor
or
cmp
sbb
jnp
xchg
xor
xchg
loop
lea
inc
inc
xchg
in
psubusw
jns
movsb
jg
fdiv
outsl
test
sbb
jge
cmp
sti
ljmp
shlb
clc
mov
inc
or
aas
outsl
cltd
xor
loope
pushf
add
sub
fcomps
mov
pop
test
test
fcomps
test
or
int
push
scas
xchg
sbb
hlt
xchg
inc
adc
sbb
jne
dec
pop
mov
push
jmp
lcall
dec
mov
xor
jecxz
cld
popa
mov
sub
loope
pop
pushf
addb
mov
dec
inc
dec
ja
sub
cmpsb
push
cmpnltps
or
addl
cmp
aas
out
cmp
xchg
jnp
call
fstpt
sarb
sub
cmpsb
mov
push
fs
add
xor
lods
fildl
pop
xchg
mov
fisttps
xorl
ja
and
pop
repnz
sbb
call
cmp
dec
adc
sbb
cmp
jo
sub
fisubs
and
jl
add
loop
and
sub
pop
lods
aaa
jp
pop
iret
jno
sbb
int3
mov
sbb
dec
jmp
ret
inc
fsubrs
pushf
cmpsb
inc
into
test
mov
xchg
aaa
inc
push
pop
cmp
adc
test
rorl
ss
lock
xor
mov
lret
mov
js
stos
mov
mov
fcomps
pop
and
jl
sbb
or
adc
pop
push
dec
sbb
mov
adc
testb
mov
pop
jl
cmp
inc
into
add
cltd
sahf
jmp
dec
add
fdivrs
roll
in
shlb
or
dec
mov
pop
mov
cmc
in
test
bound
es
push
into
mov
shlb
mov
jnp
jno
leave
ljmp
jp
jg
enter
jg
or
cs
xchg
sub
out
mov
xor
in
mov
or
pop
xchg
aas
lea
mov
xchg
mov
add
fdivrp
out
mov
fsubrs
fildl
mov
mov
add
lret
xchg
xchg
push
faddl
sub
lods
sarb
sub
push
sbb
lret
xorl
aaa
pop
jne
sti
mov
dec
adc
jg
pop
ds
sbb
ljmp
sbb
or
mov
aam
fwait
sbb
pusha
lret
out
lock
lahf
loop
sbb
fwait
fs
test
es
add
or
lea
push
jl
mov
int
dec
inc
sub
xchg
cltd
testl
sub
das
xchg
mov
mov
fwait
nop
pusha
add
in
pop
adc
cmp
scas
leave
pop
mov
in
decl
inc
lods
and
pop
fsts
decb
inc
repz
pop
dec
cmpsl
jg
jbe
jne
pop
pushf
xlat
out
movsb
ret
cld
ds
mov
js
lds
ljmp
inc
hlt
fstps
and
aas
push
mov
in
push
sub
xchg
xor
rcrl
hlt
push
adc
dec
out
fdivrs
jnp
sub
sbb
das
adc
add
ret
mov
jle
xor
sahf
mov
inc
es
cli
enter
dec
nop
mov
mov
cmc
jnp
aas
sarl
adc
jmp
fsubrs
call
xchg
pusha
dec
pop
nop
mov
xor
inc
sbb
aas
mov
sbb
in
xlat
mov
fnstcw
sub
mov
xchg
and
and
pop
jae
lret
jl
mov
ljmp
dec
lret
das
jge
push
push
or
out
or
fmuls
cmpsb
enter
ret
js
pop
mov
xor
aas
mov
jl
jmp
mov
sbb
sahf
repnz
fsubl
pop
out
sbb
sti
jle
sub
hlt
cmp
cmpsb
dec
fadd
jmp
push
pminsw
imulb
pop
and
inc
mov
xor
sub
adc
in
cmp
mov
fdiv
push
sub
jns
lock
lret
movsb
inc
es
cmp
daa
push
movsb
jnp
add
push
fstpl
fildll
cmp
jp
cli
sbbl
and
inc
out
add
out
pop
dec
sub
fstpt
cmpsl
push
lea
xor
leave
add
inc
adc
dec
jnp
fcmove
in
add
jg
stos
pop
gs
popa
test
or
or
dec
mov
dec
ss
or
pop
popf
pop
rcr
test
pop
mov
jmp
mov
sub
and
sub
aas
fsubr
or
dec
in
mov
pop
xchg
mov
cmp
addb
fisttps
shll
mov
fadds
js
jo
xchg
mov
xchg
push
inc
insb
push
sbb
xchg
adc
mov
mov
sbb
adc
push
push
cli
mov
xor
fsts
xchg
fsubs
or
fwait
leave
cli
cwtl
sahf
lahf
popa
pop
sbb
and
repz
mov
fists
fwait
out
out
out
gs
fdivl
push
scas
ja
out
push
lea
sub
or
jle
lds
jmp
das
clc
movsl
jecxz
and
or
xchg
lret
aaa
mov
mov
pusha
nop
xchg
push
jb
mov
sub
inc
add
mov
jnp
cmp
jecxz
xor
mov
push
mov
lock
pop
gs
das
push
pushf
ds
loope
sub
jae
aas
jmp
sbb
nop
cmp
test
fildll
pushw
mov
out
cmp
cmpb
sti
xlat
inc
arpl
adc
push
fdivrl
leave
ficoml
in
xchg
loopne
rorl
lret
mul
int
mov
and
adc
mov
repz
xchg
dec
leave
lods
rorb
cli
mov
xchg
sti
jl
pop
jnp
int
cli
mov
add
xor
mov
in
js
paddw
roll
jno
mov
mov
sbb
inc
clc
scas
sbb
xchg
sti
mov
mov
lods
stos
icebp
mov
aam
inc
cli
fldenv
cmp
jmp
fs
add
sbb
adc
lods
stos
fsubrp
pop
fsub
sbb
push
adc
or
flds
add
sub
ja
pop
fmul
imul
push
mov
ficompl
pop
sarl
jo
cmp
xchg
cwtl
in
mov
and
lock
push
cmpsl
lret
lcall
daa
stos
sbb
push
sbb
xor
mov
cmp
inc
sbb
int3
sbbb
add
addr16
je
movsl
mov
mov
jmp
fwait
lock
aad
sahf
imul
adc
mov
ret
imul
adc
in
and
cmpsb
jl
pop
fstps
mov
outsb
push
push
insb
xor
inc
insb
in
mov
jle
dec
imul
or
pop
mov
outsl
push
mov
push
data16
cmp
ret
fsub
sbb
push
mov
inc
ja
in
xchg
mov
xor
cmp
mov
adc
pop
in
cwtl
loope
mov
shrb
pop
pop
fwait
sbb
test
or
imul
mov
ret
pop
inc
jp
or
sbb
xchg
int
push
sub
imul
adc
xor
cmp
aas
div
add
ret
adc
xor
cli
movsb
jno
mov
das
xchg
mov
xlat
sub
in
or
add
and
pop
mov
fld
push
inc
cmp
push
movsl
add
nop
ficomps
ss
sbb
bound
shlb
push
outsl
add
fdivs
out
gs
out
rorl
into
inc
cwtl
movsb
repnz
loopne
mov
or
mov
outsb
rcll
mov
add
or
push
jp
mov
sbb
mov
movsl
cmpsb
add
push
ds
pop
sahf
in
in
in
xor
lret
data16
fstpt
mov
outsb
mov
push
sarl
pop
dec
mov
cmpb
addr16
push
popa
inc
xchg
mov
xchg
cmpl
mov
and
inc
mov
mov
aad
fwait
mov
unpckhps
pop
jae
or
pop
shr
push
outsb
mov
cltd
icebp
in
pushl
rcl
or
orb
repz
xchg
mov
shl
mov
mov
sbb
dec
xchg
cmp
pop
mov
cmc
sub
adc
sbb
nop
jne
push
jle
call
movsb
ljmp
sbb
sahf
mov
or
andb
ja
xchg
adc
mov
imul
cld
xchg
mov
pusha
mov
cwtl
pop
adc
cmp
iret
jge
or
nop
sbb
adc
ja
fsubl
shrl
mov
fcoms
fcomp
pop
add
iret
popa
iret
cmp
mov
inc
cmpsl
stos
out
dec
pop
adc
jmp
in
addl
out
enter
pop
subb
add
xchg
mov
ds
cmp
fcomi
and
mov
mov
sub
sub
nop
xor
mov
add
cmpsl
add
call
ljmp
mov
jae
outsl
in
pop
inc
xchg
sti
push
sarl
pop
pop
push
push
fistpl
pop
mov
mov
clc
mov
lahf
cli
int3
or
xchg
inc
mov
repz
or
push
mov
push
movsl
loop
push
pushf
movb
inc
lret
clc
popf
or
je
ss
and
push
jecxz
jae
mov
or
push
pop
scas
movsb
adc
xor
cli
and
fsubr
sbbl
addr16
and
jg
dec
mov
mov
negb
movsl
mov
in
mov
shl
sub
mov
inc
pop
add
push
xlat
mov
shlb
xchg
stos
xchg
decb
fcoml
fcmovu
mov
sbb
xor
fildl
orb
jae
mov
and
repz
movsb
mov
les
pop
cmpl
cmpsb
das
inc
movups
xchg
in
jmp
shlb
sub
mov
cwtl
xchg
xchg
int
pop
push
scas
mov
mov
mov
sahf
sbb
cmpl
fwait
mov
repnz
xlat
repz
sahf
scas
mov
jnp
adc
cmp
inc
jae
gs
adc
sbb
aad
xchg
out
mov
stos
push
pop
cmp
pop
xchg
adcb
add
sub
xchg
andl
cld
mov
push
sbb
cld
mov
push
sahf
dec
mov
ds
cmp
clc
fildl
enter
test
pop
leave
test
cwtl
sub
rcrb
mov
push
and
jbe
xchg
pop
scas
jo
wrmsr
cmp
cmp
movsl
loopne
sub
cwtl
xchg
enter
add
pop
inc
pop
lret
dec
fs
popf
pop
hlt
pop
xchg
jbe
fstps
leave
lea
mov
or
jns
repz
sub
cs
mov
in
stos
sbb
rcr
pop
icebp
mov
sub
lret
xchg
cld
mov
xchg
cmp
scas
ljmp
insl
mov
ret
add
and
add
gs
pop
xchg
pop
popa
pop
mov
fmulp
in
stc
dec
mov
mov
imul
cli
sub
out
and
mov
jno
lods
xchg
or
pushf
inc
imul
addr16
cmpsb
call
push
mov
pusha
adc
fwait
and
sti
push
push
xchg
mov
in
addr16
pop
fistl
cmpsb
sbb
mov
rorl
ss
lcall
adc
mul
int
jg
pop
outsb
xor
stos
aam
out
pop
or
lahf
cmp
mov
sbb
fsub
addr16
xchg
sbb
mov
and
mov
or
ss
cwtl
mov
mov
jne
and
cmp
and
gs
pop
cmp
test
add
cmp
or
cs
std
fwait
ja
cld
adc
in
pop
pop
dec
jno
jne
mov
cld
dec
arpl
lea
subb
shll
dec
mov
pop
adc
jbe,pn
in
or
push
push
and
xor
loope
flds
sbb
mov
mov
into
mov
sbb
fidivrl
aas
sbb
leave
imul
lahf
aas
or
test
mov
xchg
fdivrl
loope
in
mov
push
inc
cmc
ja
inc
mov
cli
jl
lahf
xchg
movsl
xchg
andb
add
mov
popf
add
lcall
jns
in
jbe
or
ret
adc
inc
test
into
sbb
fwait
loopne
xchg
icebp
and
nop
mov
mov
orb
pushf
addl
inc
sahf
outsl
fnstsw
fcomp
test
and
and
mov
rcrl
icebp
fwait
adc
mov
pop
repnz
jmp
loopne
jae
gs
ljmp
fdivl
sbb
dec
movsl
sbb
lahf
inc
cmp
sub
subb
and
pop
out
jno
addb
jnp
shr
cmp
sub
sbb
inc
psubusb
enter
movsb
gs
lret
lea
xchg
js
lock
lcall
adc
xor
lahf
hlt
sbb
cwtl
mov
pushf
push
sub
int3
mov
mov
cmpsb
jg
sub
sub
es
leave
call
jge,pt
push
pop
cli
movsb
add
cltd
sub
inc
sub
stos
pop
mov
jae
clc
in
push
jg
into
stos
mov
mov
inc
subb
sbb
ficomps
and
rorl
loope
std
cs
outsb
and
stc
and
loope
rcll
movsb
cmp
out
sbb
pop
inc
ret
lcall
inc
fmulp
lcall
push
mov
loopne
jl
mov
cmp
je
out
push
orl
aaa
jp
mov
push
add
xchg
lock
movsl
sub
mov
scas
movsl
fsubrs
pop
dec
pop
cld
cli
cld
pusha
mov
pop
mov
ds
hlt
push
fnstsw
fnstcw
fsubrs
xor
lret
jle
stos
fsubs
imul
xchg
cmp
imul
jb
icebp
and
int3
imul
fcomp
hlt
cmp
sbb
ja
sbb
out
pandn
inc
popl
mov
nop
jge
loop
xchg
ss
scas
jp
lods
jmp
rcll
popf
push
js,pt
mov
adc
jl
xor
inc
pop
scas
mov
jg
out
das
dec
pop
xchg
inc
mov
sbb
daa
outsb
jnp
sbb
int3
fidivl
add
shll
lret
aam
mov
jmp
sbb
dec
jmp
sbb
cli
dec
clc
push
sbb
lahf
or
das
mov
fadd
rcrb
icebp
rcrl
add
jp
int3
fdivrl
sub
xchg
arpl
mov
cmpsb
fimuls
scas
jg
pop
sub
cmp
sub
fnsave
pop
rcrl
sbb
fs
cs
pushf
mov
leave
cs
or
inc
push
pop
inc
mov
fldl
fstpt
incl
cld
sbb
ret
adc
fsubl
not
cmp
dec
test
adc
cmc
and
sub
unpcklps
mov
cmp
stos
sub
jbe
pop
adc
std
mov
popa
cmpsb
repnz
push
movsl
pop
xor
pop
and
push
sub
cwtl
sbb
jg
lds
mov
mov
les
out
pop
or
pop
insb
pushf
sbb
cmp
mov
mov
rcrb
pop
lahf
aaa
push
fwait
cmp
add
pop
sub
sbb
push
dec
cld
shlb
mov
adc
sbb
or
jmp
cmpl
xchg
pushf
xchg
fwait
iret
pop
loope
or
mov
xor
jns
mov
mov
fadds
mull
push
mov
jbe
pop
xrelease
lods
and
pop
fldenv
cmpb
jae
adc
scas
roll
add
add
in
xchg
mov
insb
xor
sbb
loop
mov
push
std
cmp
popfw
mov
addr16
js
rol
mov
pop
jo
jecxz
mov
jnp
test
or
sbb
xor
mov
mov
cmp
pop
and
popa
insb
mov
rorl
jno
inc
inc
mov
pop
rorb
test
xor
cmp
mov
aam
jnp
and
dec
adcl
pop
cmp
movsb
sbb
orl
pusha
jae
pop
pop
out
nop
stos
mov
sub
sbb
arpl
jnp
cli
or
arpl
mov
dec
jae
push
sbb
dec
pop
inc
sahf
ja
add
stc
cwtl
das
cmp
mov
cmp
jns
mov
cmp
test
fiadds
cmp
repz
inc
xlat
xlat
xchg
sti
outsb
js
pop
cmovge
lcall
fmull
adc
adc
and
adc
add
clc
push
test
shll
pop
out
popa
jae
pop
insb
pop
adc
jo
pop
cmp
or
cwtl
gs
mov
add
mov
sarb
inc
fcoml
loopne
xchg
xchg
sarb
push
add
cmpsb
loope
ljmp
sub
jae
push
lcall
pusha
push
rorb
sahf
fstpl
xchg
aaa
ds
dec
lea
mov
mov
cs
sbb
mov
pop
fisubs
lret
mov
mov
stos
aas
loope
dec
test
aas
mov
push
mov
push
lods
movsb
in
jbe
jg
cltd
int3
dec
pop
addr16
sub
jns
sub
push
mov
push
pop
sub
das
fisubrl
rolb
fcoms
cmpl
xchg
lods
xor
movsb
pushf
xor
pop
ds
mov
fs
mov
arpl
loope
test
sub
cmpl
rolb
clc
popa
test
cli
cmp
enter
sbbb
scas
mov
ljmp
add
iret
pushf
xchg
enter
insl
in
in
add
hlt
cwtl
mov
mov
ss
lock
sbbb
mov
negb
jbe
push
xchg
pop
mov
sbb
xor
pop
aas
sub
push
jp
rorb
pop
mov
nop
out
outsb
lret
bound
rcll
incl
ds
xor
int3
mov
inc
scas
pop
sub
cmp
and
push
fimuls
add
mov
pop
or
dec
pop
stos
fdivl
insb
jge
and
iret
lds
inc
fsubl
fiaddl
iret
popa
xor
pop
lds
push
pop
xchg
mov
inc
out
std
dec
cmpsl
dec
xor
xchg
call
jmp
xor
pop
loop
es
mov
pusha
fwait
mov
mov
jnp
jle
jne
cwtl
pusha
jo
fbstp
bound
jg
ret
cld
ds
mov
in
enter
pop
nop
dec
jns
test
mov
call
mov
fadds
xchg
mov
popa
jns
mov
cwtl
shll
mov
sahf
dec
cs
xor
js
mov
lea
loopne
cwtl
mov
sbb
adc
dec
fsubrs
jae
arpl
jmp
push
test
inc
dec
pop
mov
inc
pop
fisttpll
test
mov
mov
rorl
lods
jecxz
xchg
xor
ficompl
cmp
mov
sub
xchg
mov
jne
inc
mov
imul
adc
mov
push
xchg
push
sbbb
repz
sub
pushf
push
add
dec
fs
ljmp
pop
mov
lcall
adc
idiv
dec
add
jae
jnp
mov
or
mov
push
or
lods
popa
xchg
mov
fs
insb
inc
sub
addr16
mov
cmpsb
jl
xchg
movsb
or
add
iret
sahf
mov
rcrb
mov
lcall
orl
inc
xchg
sti
mov
aas
clc
jbe
test
sti
ja
and
loop
mov
pop
in
ret
test
sub
lods
incl
fwait
fisubrs
ret
fsubs
cmpsb
ja
mov
push
add
mov
shrl
out
sbb
mov
jl
or
inc
enter
aam
leave
nop
cwtl
sbb
scas
mov
mov
jp
in
adc
test
mov
mov
imul
or
mov
mov
push
loopne
push
mov
push
xlat
push
cmp
sbb
sub
aas
aad
xor
pop
dec
cs
mov
movsl
push
push
mov
pop
cltd
jmp
iret
push
pop
xchg
mov
lcall
loopne
mov
push
inc
sub
dec
xchg
cwtl
xchg
mov
negb
pop
in
mov
cld
mov
push
out
mov
xchg
mov
btr
negl
ret
aas
iret
cmpsb
fst
popf
in
jg
loopne
mov
int3
sub
out
cmp
cmp
sbb
sbbb
mov
test
cld
jnp
push
dec
dec
jo
adc
xchg
xchg
fldenv
loope
int
vpsubq
repz
push
scas
pop
lret
jns
push
incl
mov
das
pushf
rcll
fsts
inc
leave
pop
or
jmp
mov
loopne
fildll
addr16
push
loopne
xchg
fmull
int3
stc
fmul
daa
sbb
fnstsw
fsub
inc
out
sahf
sti
in
ret
mov
test
insl
adc
xchg
cs
mov
sti
and
inc
les
movsb
mov
xor
adc
mov
call
dec
mov
idiv
mov
mov
and
push
in
jb
out
fdivl
stos
aas
test
adc
sub
fmull
shll
xorps
jnp
sub
clc
std
jno
push
scas
pop
fs
iret
sub
xlat
and
out
sbb
fcomps
rcr
std
enter
clc
pop
adc
cltd
push
mov
xor
sub
jmp
jle
xor
lahf
xor
adc
in
pop
jp
jne
mov
mov
std
sbb
into
int3
mov
dec
iret
lods
cmc
xchg
cltd
inc
mov
rorb
mov
shrl
inc
popa
nop
xlat
dec
mov
sub
call
test
mov
data16
pop
lds
mov
sbb
cmpsl
sti
jbe
jbe
das
jns
jae
in
cmpb
push
les
aam
sahf
decl
xor
out
mov
push
aaa
sahf
jle
cmp
popf
je
hlt
enter
add
mov
lea
fwait
pop
mov
or
pop
decl
inc
sbbl
and
leave
scas
call
push
pop
test
xchg
push
mov
jg
test
mov
pop
inc
push
mov
push
xchg
xchg
and
js
pushf
or
xor
pop
push
mov
jmp
sub
cmp
mov
pop
pusha
stc
or
jb
arpl
cwtl
jo,pt
repz
xchg
mov
xchg
ss
cld
mov
mov
iret
stos
ds
xchg
daa
test
idivb
add
in
incl
lret
cmp
ffree
faddl
mov
pop
ds
int
adcl
aad
fsubrs
ds
xchg
and
sbbl
sbb
enter
xor
in
das
in
mov
icebp
adc
dec
bound
mov
mov
ja
sub
loop
hlt
lcall
adc
in
pop
inc
adc
fdivr
clc
adc
cwtl
jmp
mov
je
imul
mov
daa
imul
lods
jae
cmp
mov
dec
xchg
outsl
inc
xchg
mov
push
dec
cmp
mov
fnop
out
lock
fcomps
and
inc
mov
int
xchg
or
push
dec
pop
fstps
jns
je
adc
sbb
cmp
rcrw
outsl
cld
das
sbb
stos
cmp
mov
lods
lds
cmpl
cwtl
or
out
or
das
out
mov
and
cmp
call
jl
jmp
fwait
test
mov
add
ret
mov
dec
pushf
push
cld
clc
fcoml
fwait
addb
cmpb
nop
add
cmp
scas
jmp
jns
push
xchg
mov
sbb
add
lds
pop
mov
mov
cmpsb
insl
roll
rol
fistps
and
cwtl
push
test
dec
imul
pop
and
adc
addb
shl
in
jnp
pop
inc
cmpsb
or
inc
mov
test
lret
scas
flds
cmp
cltd
stc
es
add
adc
or
int3
jbe
loopne
fidivs
out
mov
jnp
outsl
xchg
add
stc
cmp
pushf
les
push
xchg
lock
mov
add
test
in
or
mov
push
pop
and
scas
mov
sbb
push
insl
add
fwait
push
sahf
mov
test
dec
addr16
push
dec
xchg
push
fstps
int3
divl
enter
imul
and
mov
stos
mov
daa
hlt
lret
aas
inc
cld
adc
xchg
mov
and
adcl
fwait
out
repnz
xchg
jmp
or
push
stc
push
mov
jo
mov
xor
push
pop
xchg
hlt
push
sbb
sti
sbb
mov
sbb
mov
cld
mov
lret
popf
dec
sbbl
lret
cwtl
mov
mov
and
jp
add
sarb
in
mov
mov
lods
sbb
call
es
pop
scas
jmp
xchg
stos
mov
outsb
inc
push
inc
into
cmpl
ljmp
cmp
mov
mov
dec
testb
sbb
push
mov
das
outsl
push
push
cmp
mov
xadd
je
inc
jo
jp
fisubs
sbb
scas
mov
mov
push
jle
cmpl
xchg
lret
cmp
mov
pop
sbbb
inc
hlt
hlt
test
jg
push
les
fisubrl
dec
xor
inc
clc
in
push
jg
test
fsubrl
fsub
movsl
imul
shrb
shlb
and
fidivrs
cltd
sbb
pop
les
add
mov
nop
sti
lea
in
pop
jo
fldcw
xchg
scas
loope
repnz
dec
aas
xor
mov
aas
or
sbb
scas
test
adc
adc
decb
aad
or
mov
lods
mov
inc
cld
add
lods
nop
sbbb
pop
and
sbb
xor
mov
xchg
imul
fsubrp
inc
clc
sbb
cs
pop
daa
mov
cmp
addr16
mov
jnp
sub
in
xchg
sbb
cmp
scas
shr
in
pop
orb
mov
mov
arpl
jno
ljmp
add
clc
mov
aas
or
sub
cmp
stos
xchg
mov
adc
jecxz
incb
jne
or
cmc
and
aas
insb
sub
cld
test
or
jae
iret
sbb
cmp
mov
jmp
mov
mov
and
pop
mov
mov
mov
aam
push
mov
mov
sbb
mov
push
sarl
cli
enter
andl
lea
mov
test
jg
out
mov
arpl
jl
les
pushf
lret
mov
idivl
pop
mov
rcr
jae
inc
inc
cmp
enter
shll
jae
aas
jno
fidivs
aas
pop
mov
fldl
gs
faddp
sub
sbb
lret
cli
loopne
dec
fnclex
sbb
jle
aas
int
xor
sbb
mov
lret
decl
nop
sahf
negb
or
cmp
movsb
sbb
incl
mov
hlt
sbb
pop
pusha
in
mov
lds
push
cmp
ss
sbb
dec
cmp
mov
ds
pop
fisttps
jbe
pop
dec
cs
or
aad
mov
scas
fdivrl
aaa
add
cmp
and
outsl
pushf
mov
loop
inc
xchg
sub
popf
sti
ljmp
mov
addr16
xchg
fmuls
pusha
scas
adc
pop
mov
test
inc
je
mov
lods
aas
pop
adc
pop
pop
insb
xchg
xchg
or
stc
mov
xor
mov
push
mov
sarl
fsubrs
mov
mov
aas
inc
stc
xchg
pop
mov
mov
mov
aam
inc
mov
test
scas
fwait
lret
mov
fdivrp
fdiv
pop
int
cmp
push
test
sar
and
mov
mov
cli
mov
mov
iret
loop
ss
les
mov
push
xchg
mov
cli
cmc
lret
or
mov
cwtl
push
orb
push
outsl
cmp
jge
js
jle
sbb
cmpsb
mov
mov
ds
xchg
sbb
pop
fs
push
insl
jg
mov
repnz
sahf
movsl
mov
pushf
iret
int3
jne
lahf
mov
mov
loope
in
jg
mov
mov
mov
jmp
mov
sbb
xchg
or
icebp
jp
insb
shrl
je
ja,pn
ret
mov
pushf
shrb
daa
out
out
push
bound
cld
call
sbb
push
cwtl
dec
pop
fcmovb
add
mov
jge
dec
popf
lret
mov
sti
pusha
je
xchg
inc
pop
sub
sbb
imul
stos
ja
popf
mov
adc
and
mov
lcall
pop
pop
and
mov
xor
sar
sbb
jno
pop
xchg
pop
ds
cmp
push
mov
scas
adc
or
outsb
test
out
sbb
cmp
mov
jle
movsb
cmp
xor
stos
ret
sub
in
es
iret
loopne
cmp
and
int
lcall
mov
xor
adc
push
dec
hlt
hlt
fcomps
jg
out
mov
cwtl
loopne
cli
loopne
add
inc
hlt
lret
daa
mov
test
or
mov
rcl
pop
xchg
cwtl
mov
incl
cmp
adc
xchg
mov
cmp
inc
xchg
ret
mov
fidivrs
lcall
insb
dec
sti
fsubs
xchg
je
sub
xchg
and
jnp
mov
ficompl
decl
sahf
mov
lahf
xchg
sbb
repz
adc
seta
jg
fcomps
scas
ds
pop
or
filds
cmp
mov
mov
sub
ja
xchg
cmp
idiv
inc
lcall
outsl
push
mov
idivb
faddl
arpl
fs
daa
into
out
push
lods
push
shl
shlb
xchg
cmc
in
xchg
xchg
filds
xchg
pop
cs
sub
mov
ds
adc
popf
mov
scas
jg
adc
test
mov
cltd
mov
jae
sti
mov
in
ds
jno
lcall
cld
fcomp
in
mov
or
iret
ret
jns
dec
popf
xchg
movsb
cmpsb
pop
out
pop
pushf
shrb
and
sbb
pop
sub
mov
inc
in
stos
sti
enter
push
xor
lods
test
data16
cmpsb
jecxz
out
pop
mov
cmpsb
sbb
pushf
dec
inc
outsl
loope
cmc
dec
mov
into
data16
cmp
sbb
inc
enter
or
jb
stos
pop
out
xlat
cmp
aas
inc
pop
xchg
incl
jmp
fmull
and
xchg
es
mov
adc
leave
bound
or
jns
dec
or
pop
and
xchg
cmc
test
fs
jno
push
mov
out
adc
test
jp
adc
sbb
das
int
add
mov
cwtl
mov
int3
pop
loope
sub
push
jle
aas
xchg
push
cmp
call
faddl
lods
xchg
mov
out
in
fwait
sbb
xor
cmp
out
fs
push
idivb
mov
enter
sub
xchg
into
xchg
fdivrl
push
lcall
je
fsubrs
subl
mov
daa
pusha
pop
inc
mov
dec
pusha
sbbl
sbb
mov
shll
leave
jnp
fs
xor
pop
and
orb
push
enter
out
lahf
sbb
cmpsb
push
insl
mov
pop
dec
data16
scas
test
sahf
cld
roll
pop
in
fdivrs
scas
add
ret
cmc
xchg
mov
lea
xchg
fwait
aad
cmpb
loopne
cmp
adc
sbb
lcall
popf
jb
jecxz
mov
sub
dec
jns
std
in
lcall
sub
rol
mov
push
pop
subl
repnz
in
xchg
sbb
je
testl
ret
rcrl
sbb
mov
and
mov
icebp
outsb
ja
pmaddwd
bound
cmp
inc
cli
mov
mov
cs
sarb
les
sub
test
sbb
sbbb
jle
jo
imulb
adc
lods
mov
arpl
inc
stos
xchg
ljmp
faddl
loope
mov
jo
dec
cmp
popf
push
cmp
xchg
sahf
dec
in
jno
bound
popf
or
test
insl
mov
bound
lcall
dec
push
push
aaa
xlat
test
popf
jnp
jl
lods
inc
pop
ret
imul
test
add
mov
adc
pushf
cs
xchg
pop
cmc
andb
push
sbb
fwait
sbb
dec
testl
ficomps
fucomp
mov
mov
push
dec
call
cmp
cmc
or
outsb
loop
fistl
xor
enter
add
inc
and
loope
in
popf
cwtl
xor
pop
sub
repz
sbb
lret
es
mov
cmp
sub
aas
adc
mov
ss
inc
das
mov
jecxz
pop
mov
outsl
into
aam
hlt
mov
std
sub
mov
mov
aas
cld
lds
int3
jl
mov
sub
xchg
jnp
fcompl
or
ftst
mov
fcomps
fwait
add
ret
jge
std
lahf
sub
sbb
jp
pop
cs
ds
adc
test
xchg
mov
pop
lret
std
push
outsl
aad
aas
les
xor
and
into
lret
and
dec
add
mov
xchg
out
pushf
daa
lret
jae
popa
js
add
fmull
ficoms
sar
jnp
mov
fbld
pop
pop
in
das
sahf
mov
sbb
cmp
hlt
mov
mov
lods
lcall
add
mov
fdivs
orl
mov
std
scas
mov
pop
xorb
fnclex
adc
inc
out
or
mov
mov
mov
inc
fadds
lahf
lret
fidivrs
jmp
out
and
and
sahf
mov
xor
std
test
fld
cmpsl
int
pop
jo
jmp
push
fsubrs
cmp
stos
sub
sbb
hlt
and
cwtl
in
fwait
mov
add
xor
sahf
lods
enter
shll
xchg
mov
mov
fisttpl
xchg
mov
scas
aas
xor
orb
sbbl
mov
gs
push
scas
sbb
jae
in
shlb
pop
repz
xchg
in
insl
adc
xor
addb
or
and
cmp
mov
pop
fst
bound
add
sahf
jmp
cmpsb
jg
fistpll
jo
rorl
fldt
lret
add
mov
sub
inc
cltd
mov
xor
mov
mov
fdivrl
data16
sti
and
out
pop
push
repz
mov
insb
fidivrs
jecxz
and
mov
pop
add
cmp
sarl
cmp
pop
mov
push
aas
shrb
les
inc
mov
adc
cmp
jne
out
dec
rcrl
decl
std
mov
dec
xchg
and
imul
mov
jnp
mov
sub
sbb
or
popa
fmull
xor
jo
push
incb
cmp
dec
xor
popf
push
nop
out
push
mov
aaa
cli
inc
mov
add
pop
outsb
jl
in
test
dec
scas
pop
into
sub
sbb
dec
sbb
or
jbe
test
hlt
sbb
mov
or
mov
fs
mov
push
sub
fidivrl
inc
or
jae
pop
xchg
div
push
lods
jnp
adc
mov
sub
in
fsubr
inc
fwait
pop
les
jp
fiadds
rcrb
scas
aad
mov
mov
or
add
mov
in
jp
jge
test
dec
or
jl
ds
mov
or
or
jp
arpl
lea
jg
ret
mov
or
in
xorb
xchg
ja
mov
ds
jl
jne
js
ret
mov
fnstcw
pop
jl
pop
cwtl
cmpsl
pop
std
mov
cltd
faddl
hlt
mov
ret
adc
loop
loopne
cmp
repz
loope
cli
adc
mov
enter
jnp
jo
lret
leave
xchg
xchg
mov
fadds
mov
fs
cmp
sbb
cmp
enter
imul
fistpll
into
js
mov
lahf
call
pop
enter
roll
fstpl
test
cmp
mov
stos
lahf
mov
inc
pop
je
sbb
sub
or
insl
jb
xchg
jo
inc
jmp
stc
jns
add
enter
repnz
pop
cmp
call
push
shll
xchg
call
push
adc
mov
push
pop
outsb
into
cmp
or
xchg
sarl
in
inc
sti
cmpsb
cmp
rcrl
popf
xor
fdivrl
fwait
sbb
lahf
fcomps
dec
xchg
lods
sbb
iret
cmp
mov
sbb
sbb
faddl
push
lret
push
cmp
rolb
cwtl
test
scas
sti
pushf
jnp
push
aad
popa
iret
cmpsb
fdivr
inc
xor
dec
or
pushl
sub
call
es
add
sub
lahf
addr16
or
mov
mov
ja
shll
mov
push
jb
movsl
mov
leave
xchg
enter
ds
jl
lods
sti
pop
stos
adc
ror
adc
movsl
pop
outsl
mov
in
inc
mov
stos
pop
push
adc
cmp
ss
imul
sbb
sub
jmp
sahf
jp
jge
pop
jbe
xchg
mov
insb
xor
std
mov
scas
mov
xor
pusha
push
jl,pn
jl
jnp
mov
cmp
jg
mov
shrb
test
int3
lock
mov
sbb
mov
movsbl
jle,pt
std
cwtl
lcall
sub
ret
push
inc
cmp
mov
inc
push
mov
and
cmc
jle
push
push
pushf
dec
sbb
mov
xor
xchg
lcall
sub
fistpll
std
shl
push
jg
cmp
imul
sbbl
ror
cli
dec
clc
mov
into
lds
lahf
add
mov
sbb
sbb
call
cltd
shlb
xor
in
fistpl
pop
std
adc
fdiv
popf
xlat
jne
jbe
rcpps
cltd
inc
pushf
roll
xor
mov
jbe
outsb
faddp
and
cmp
mov
add
xchg
movsb
and
adc
dec
sub
stos
pop
test
and
mov
out
mov
add
orb
cmpsb
and
adc
adc
ds
in
pop
cmc
sbb
dec
cmpsb
inc
mov
sbb
insb
mov
xchg
ljmp
pushf
lret
dec
sbb
iret
and
or
mov
gs
mov
jne
ret
inc
div
aas
add
mov
jecxz
rclb
xchg
or
jp
xchg
fldt
mov
mov
mov
xchg
sub
idivb
int
inc
sahf
jnp
gs
pop
dec
cmpsl
or
imul
into
inc
mov
mov
scas
mov
cmp
adc
imul
test
adcl
cmpsb
and
mov
xor
or
mov
mov
aas
mov
imul
lods
aam
fsubr
lret
and
repz
mov
js
dec
xor
mov
enter
pop
inc
xchg
sbb
add
cwtl
sub
lret
cmp
jnp
xor
dec
ljmp
jmp
jbe
jp
ss
data16
loopne
scas
mov
loope
sbb
dec
sar
mov
stos
add
scas
pop
dec
mov
or
and
sbb
fcmovnb
in
jo
inc
jmp
sbb
push
fwait
mov
es
lcall
arpl
pusha
mov
sub
sub
xchg
sbb
aaa
fistpl
stos
cwtl
adcl
lret
lods
xchg
jns
jno
mov
jae
lret
ds
mov
outsb
xchg
cmp
jmp
mov
fwait
mov
ret
xchg
cs
fisttps
movsb
pop
sub
shll
hlt
dec
sub
sbb
ss
sbb
lods
xor
add
sbb
ss
xorl
pop
jl
addr16
movsb
and
sbb
pop
or
dec
adc
rcr
mov
and
cmp
das
fstpl
xor
cs
mov
notl
loop
hlt
cli
test
out
out
dec
xor
popa
je
int
mov
cli
cmc
arpl
push
testb
xchg
mov
inc
sbb
mov
jmp
dec
sub
ret
fdivrp
xor
sahf
mov
push
addl
push
incb
clc
addr16
xlat
mov
cmc
mulb
cmp
xor
jb
ret
repz
inc
jno
lds
push
out
movsl
iret
sbb
out
cli
in
xor
sbb
mov
in
mov
sbb
add
and
xchg
jnp
add
mov
loopne
xchg
cmp
and
push
mov
pop
xorl
movsb
fisubl
or
fmuls
lds
je
ja
pusha
clc
cwtl
push
mov
mov
and
or
pop
push
andl
andl
clc
mov
xchg
xchg
mov
aas
adc
mov
mov
push
mov
add
aas
ret
or
inc
jle
inc
fcoml
sub
testb
outsl
xlat
xchg
push
arpl
sti
leave
push
stos
jge
out
incl
pop
pop
cs
mov
sub
repz
mov
jp
rcll
inc
cmp
jle
push
adc
cmp
shr
inc
mov
mov
sbb
scas
out
jo
jmp
ret
in
sub
imul
sub
push
pop
jbe
adc
dec
cmp
repnz
bound
test
int
ret
jns
mov
jp,pt
jbe
mov
lret
ficoms
lods
stos
aas
sub
xchg
cmp
mov
or
jne
shrb
cmpsb
aas
scas
mov
outsl
iret
or
mov
aad
dec
pusha
push
jne
sbb
mov
inc
cmpsl
push
adc
mov
mov
sbb
aam
dec
out
cmp
mov
cli
stc
lds
pop
orb
insl
movsl
mov
pop
sbb
jg
rcrl
mov
fcomps
jae
mov
jle
lds
cmp
dec
sub
dec
jmp
lahf
cmp
mov
hlt
fidivrl
mov
cld
xchg
lods
cmp
outsl
mov
jp
push
loop
repz
pop
call
mov
shr
pop
aad
hlt
jle
fidivl
cmp
scas
or
pop
cli
scas
adc
sbb
xchg
xor
sahf
rcll
ret
bound
jge
stc
mov
or
lahf
insb
neg
ljmp
std
jmp
in
xor
mov
cli
dec
aas
stc
mov
aam
cmp
fstpl
mov
xchg
sub
sbb
icebp
jg
cmp
les
fadds
mov
and
mov
pushf
pop
push
and
data16
push
or
cli
enter
outsb
sbbl
aam
jle
test
leave
and
inc
mov
jg
adc
js
sub
mov
push
add
xlat
lret
sahf
cwtl
pushf
push
in
inc
or
fstps
addb
out
in
inc
lcall
repz
out
mov
pushf
or
xchg
inc
add
aad
pop
jnp
and
xchg
iret
ret
scas
pop
push
mov
sub
dec
out
sbb
and
jg
fisubs
fdivr
sbb
mov
cwtl
popl
and
or
in
jno
lret
mulb
push
or
jp
imul
test
shr
add
test
and
in
jge
lcall
push
arpl
movb
jnp
mov
in
iret
mov
jmp
add
out
mov
jg
movsb
insb
dec
inc
lret
jp
pop
ret
jbe
pop
jecxz
xor
push
out
sbb
nop
xor
es
cli
or
mov
inc
sbb
lret
hlt
push
mov
lcall
lea
xchg
add
xchg
mov
rcrl
cmp
sbb
jmp
stc
lods
mov
dec
xor
fdivrs
fdivrp
inc
mov
insb
inc
mov
xchg
mov
adc
sub
xchg
lock
push
adc
cmp
adc
push
xor
dec
sbb
aam
sbb
mulb
in
mov
filds
jp
enter
out
data16
adc
inc
pop
pop
adc
jge
fisttps
fwait
jg
fistl
mov
pop
inc
cmp
mov
lea
jno
mov
lahf
pop
adc
dec
out
xor
loop
sbb
jbe
jns
movsb
ljmp
push
lahf
pop
cmpsl
pop
jecxz
pushf
in
or
rorb
pop
sub
mov
mov
jae
jnp
push
mov
add
outsl
jl
inc
lahf
and
daa
mov
fcomps
popf
fcmove
dec
xor
adc
into
fwait
sbb
mov
pop
rorb
sub
ljmp
lods
jmp
mov
arpl
outsl
push
adc
mov
xor
cmp
lcall
or
sbb
xchg
test
push
popa
out
decl
aas
or
mov
fsts
xchg
and
dec
cmc
jmp
lods
lcall
sbb
loopne
jno
lock
xlat
sbb
sub
jp
cmp
mov
inc
sbb
cmp
push
mov
xlat
mov
pop
ror
and
xchg
sti
in
lds
cmpb
dec
test
xor
adc
movsl
imul
movsb
push
pop
or
orb
push
mov
daa
clc
mov
lcall
mov
ret
pusha
dec
pushf
xchg
sub
jnp
pop
inc
dec
rcrl
jnp
js
xor
iret
cmpl
cmp
ss
pop
int
lret
cwtl
fsts
cmp
shr
or
mov
ds
pushf
mov
jmp
outsb
jg
xor
mov
jmp
sbb
sub
ret
popf
sbb
or
into
rolb
sarl
sbb
pushf
mov
fwait
out
adc
fcompl
rcrb
inc
lea
iret
fdivrl
pop
ficomps
data16
sbb
les
jg
push
adc
sub
lcall
ljmp
sbb
loop
jno
add
fdivrs
maxps
jnp
and
fcoms
mov
push
in
xor
add
add
clc
jns
loope
ljmp
pop
inc
mov
mov
lock
fdivp
inc
call
std
fsubl
sub
sbb
mov
in
fwait
sti
test
arpl
lahf
lods
pop
lea
int
nopl
sub
sti
cli
cmpsb
insl
mov
les
inc
cmp
xchg
cmp
pop
fcompl
push
dec
dec
sub
push
adc
xchg
addr16
cmpsb
mov
ret
mov
xchg
or
cwtl
fadd
mov
or
outsl
xor
stos
cmp
sbbb
adc
cwtl
adc
jae
int
lcall
fcomps
mov
ds
out
jg
aaa
cmpl
int3
mov
xchg
cltd
test
add
arpl
xor
std
xchg
jge
ret
fistps
mov
jno
mov
cli
pop
push
movsl
gs
cwtl
inc
pushf
int3
fidivrl
add
mov
test
dec
pop
into
and
inc
loope,pn
jg
cmpsb
jle
pop
ss
mov
xchg
cli
xchg
add
mov
test
adc
push
pusha
or
mov
nop
mov
jmp
ljmp
push
cld
aaa
and
adc
add
lahf
inc
outsb
shrl
mov
mov
sub
ja
sti
test
cmpsb
gs
lret
scas
mov
cmp
in
push
leave
pushf
fcomp
lret
cmpsl
es
mov
sti
arpl
xchg
mov
lods
pop
cli
adc
icebp
mov
or
sbb
sbb
sti
shrl
xorb
xor
xchg
mov
xchg
sub
push
push
mov
dec
sbb
aas
je
xchg
pop
mov
or
xorb
fsubs
ret
jb
pusha
rol
sti
cmpsb
pop
pushf
and
ja
mov
dec
push
cs
rcrb
jl
mov
data16
pop
jno
sub
mov
loop
push
pop
push
dec
jp
lahf
inc
roll
push
out
inc
ss
ret
js
vphaddubd
and
xor
or
cs
loopne
ds
loopne
out
mov
imul
cwtl
cmp
out
pop
les
pop
mov
fwait
addl
cwtl
and
popf
dec
gs
jg
out
xor
out
adc
push
cmp
dec
xchg
fadd
fdivrs
dec
fcoml
ds
data16
jo
jecxz
icebp
stos
mov
mov
jmp
sub
sub
clc
pushf
pusha
pop
sub
jl
sbbl
pop
imul
decb
jae
cmp
mov
sub
jle
cli
pushf
sub
pop
mov
aaa
xchg
and
pop
das
pop
repz
sbb
rcrb
push
mov
insb
add
jbe
jl
je
sbb
push
idivl
jg
sub
fdiv
push
in
mov
les
in
stos
cwtl
cmp
dec
ljmp
jno
fists
faddl
mov
das
push
sti
add
push
and
lds
gs
mov
fists
ds
mov
jo
mov
dec
daa
test
sbb
adc
xchg
sbb
test
xorb
gs
jbe
inc
icebp
mov
ret
dec
out
fistl
insl
mov
ja
mov
cmp
iret
out
fwait
test
out
mov
inc
sbb
jecxz
jmp
dec
pop
or
mov
sbbb
out
or
enter
jb
shlb
inc
fimuls
adc
pop
loop
notl
cmpl
fnsave
mov
stc
pop
shl
adc
inc
mov
fcomp
into
or
cmpb
je
lcall
sti
jnp
jmp
lods
iret
add
fwait
into
jbe
sbb
daa
je
mov
leave
push
adc
inc
out
and
push
mov
mov
xchg
call
add
stos
stos
lock
jp
aas
fcomps
aas
ror
and
cs
cmc
and
dec
fdivrs
push
lock
cmp
sub
loopne
test
in
sbb
in
add
pop
fbstp
cs
fcompl
push
into
aas
pop
and
inc
sar
xchg
push
loope
pop
into
xchg
inc
mov
aaa
pop
cld
stos
out
sbb
lret
mov
sbb
push
sbb
mov
imul
lret
fsubr
pop
sbb
jp
or
cmp
mov
and
jb
sub
push
cwtl
cwtl
pushl
mov
mov
mov
hlt
sbb
pushf
sbb
jmp
lret
lahf
jp
cwtl
test
std
jbe
mov
mov
sahf
xchg
inc
push
scas
jmp
xchg
cmp
cmpsb
mov
in
pop
mov
cltd
aas
lret
inc
push
add
cltd
jnp
sub
andb
hlt
decl
push
cmpsb
mov
cmpsl
imul
xchg
clc
lret
imul
fbstp
mov
cli
mov
or
xor
jb
lock
dec
mov
fcomps
xchg
jge
stos
fdivs
mov
lea
xor
lahf
scas
test
mov
mov
movsb
cltd
test
wbinvd
jl
cmpb
pop
ret
pop
jne
fsqrt
lahf
jnp
inc
imul
sbb
nop
add
pop
ss
jns
adc
test
xchg
cli
xchg
mov
mov
add
mov
mov
jne
lea
sub
mov
or
lret
mov
pop
adc
push
push
fcom
addb
xchg
jnp
data16
mov
push
scas
pushf
cmp
sbb
push
nop
xor
ret
jl
or
xorl
push
call
js
pop
ret
orb
mov
fdivl
cmpsl
or
std
lahf
clc
jg
dec
fwait
or
cmp
mov
cmp
inc
cmpsl
out
mov
jno
ret
push
fwait
or
cmpl
mov
inc
sbb
lds
mov
pop
lods
cmpsl
roll
fdivrl
mov
mov
push
or
mov
and
adc
out
sub
cltd
sahf
pop
mov
hlt
jg
lea
test
add
mov
push
in
cli
adc
jbe
fnstenv
jnp
or
xor
aas
and
into
mov
mov
aam
sbb
dec
jbe
out
gs
ja
insb
les
xchg
jns
stc
xchg
add
loope
pop
call
rcrb
ret
push
ret
lcall
icebp
mov
sbb
les
mov
aas
jmp
sbb
inc
clc
sbbb
mov
outsb
mov
cmp
hlt
mov
push
mov
lret
jmp
lea
out
bound
mov
fldenv
aas
sti
inc
or
test
sub
xchg
adc
add
test
mov
cmp
add
daa
pushf
jmp
daa
pop
jle
aad
jo
mov
das
xor
mov
cmp
stc
jbe
push
mov
dec
cmpl
ja
fisttpll
outsb
shrb
push
rcrl
insl
mov
cli
add
cld
test
cs
out
insl
test
mov
insb
xor
xchg
pop
lock
repz
xor
cmp
test
xchg
cmp
pop
jl
xchg
inc
lret
test
xchg
xchg
sbb
sbb
int3
cld
or
inc
sar
push
adc
insl
add
cmp
jl
mov
cld
mov
xchg
push
lods
pop
cli
or
ss
lods
pop
je
mov
jg
inc
lret
adc
and
mov
fidivrs
pop
inc
rorl
jle
enter
enter
hlt
lock
cmp
es
lea
or
mov
gs
pop
test
fucom
ja
cs
out
push
cwtl
pop
mov
sub
sbb
pop
addr16
outsl
or
or
enter
adc
js
lcall
clc
xor
pop
or
sbb
push
pusha
mov
adc
fstps
insb
movsb
cltd
shrb
jnp
mov
clc
enter
mov
fsubs
je
mov
lahf
test
bound
push
pushf
jge
stos
pop
mov
aas
xlat
cmp
cwtl
pop
mov
cli
dec
fsubrl
outsl
xor
mov
mov
into
pushf
mov
ds
out
mov
fisttpll
jle
mov
lock
cld
stc
xchg
fwait
jge
push
lods
dec
jp
mov
ja
fdivrs
jmp
cmp
or
movsl
jb
push
scas
sti
xor
mov
andb
cmp
test
mov
ret
ficompl
jmp
or
or
scas
sar
fdivr
push
sub
pop
inc
push
hlt
push
pop
mov
push
jo
mov
and
cltd
mov
sbb
cmpb
adc
jle
pop
bound
push
add
ds
push
push
out
insl
rcrb
leave
loope
jge
std
test
xchg
pushf
mov
test
mov
popf
mov
fwait
cmpl
dec
xor
mov
pop
orl
loop
jne
pop
pop
pop
sub
rorl
leave
mov
mov
pop
or
pop
mov
mov
mov
into
jg
out
push
popa
cmp
movsl
mov
ss
and
xchg
mov
xor
adc
pop
mov
cmp
mov
pop
pop
mov
clc
rcrb
jle
push
gs
add
cmp
jl
rol
scas
cld
or
lahf
mov
dec
cmpl
insl
pop
mov
push
xchg
mov
cmpsb
lods
lods
cld
fmuls
aaa
inc
mov
data16
jns
aas
call
or
loope
jno
in
pop
mov
mov
add
jg
sub
jnp
mov
jb
cwtl
cli
cmc
out
pop
int
js
lahf
rcll
sbb
sbb
fadd
js
pushf
mov
subl
nop
push
nop
idivb
dec
pop
cmpsl
and
inc
sbb
dec
cwtl
in
mov
sbbb
and
cmp
pop
leave
inc
sarb
jo
and
ret
inc
mov
mov
dec
fistps
pushf
in
rep
insb
pop
or
aas
inc
mov
pop
stos
jg
sbb
pop
dec
push
and
and
push
and
ds
sti
and
adc
fsubrl
jbe
nop
lods
xchg
cld
repz
clc
fiadds
loopne,pn
cmp
jno
loope
and
jnp
jno
js
lods
cmp
daa
cmp
inc
dec
cmpsl
xor
stc
fstl
imul
cld
stc
repz
test
call
sub
jp
push
ror
aad
fisttpl
lock
mov
lahf
fcom
xchg
jnp
pop
add
jg
fistpl
pop
insl
scas
adc
cmpsb
pop
pop
and
push
leave
inc
dec
fldt
cwtl
mov
pop
cmp
mov
pop
fmuls
push
xorb
jle
jne
and
inc
jl
jle
js
das
mov
movsl
sbb
out
pop
mov
lret
mov
stos
and
add
xor
aad
scas
aas
je
in
jae
fcmovne
lcall
add
inc
jae
mov
mov
std
insl
sbb
push
and
mov
roll
loopne
cmp
cmpb
pop
jnp
inc
sbb
mov
push
fld
hlt
pop
outsb
lods
into
and
cmpl
arpl
jno
mov
mov
rcrb
jp
cmp
xchg
scas
jg
pmaddwd
or
mov
hlt
loopne
cs
inc
lods
mov
scas
mov
scas
mov
adc
xor
js
sub
bound
leave
xor
lahf
jle
test
into
dec
jle
adc
mov
sub
lret
xchg
out
mov
std
ret
or
add
sbb
sbb
imul
daa
mov
mov
mov
jle
je
xlat
dec
sub
daa
fwait
lahf
jge
aaa
in
mov
push
adc
rclb
pop
jl
jae
xchg
pop
dec
add
shll
scas
jg
dec
les
popf
test
cmp
out
xor
xlat
sahf
mov
xor
movsb
in
lret
sub
stc
test
mov
adc
cmp
fs
mov
dec
ror
mov
mov
inc
cmp
sbb
fcmovnb
or
pop
jl
xchg
je
out
cmpb
aas
cwtl
ret
sbb
ja
std
sbb
leave
sub
mov
add
in
sbb
in
mov
leave
movsb
sbb
xchg
sti
adc
xchg
fucom
pop
jb
aad
les
hlt
cld
hlt
call
ficomps
pushf
adc
inc
outsl
mov
and
sbb
and
rorl
jp
cmpb
outsl
mov
movsl
cli
xchg
mov
push
mov
stc
pop
sub
dec
mov
pop
mov
enter
test
jno
add
push
adc
pop
ja
fistpl
sti
mov
and
popf
mov
repz
dec
add
mov
test
xchg
iret
jecxz
xchg
icebp
out
inc
mov
cmp
rorb
das
fldt
xchg
mov
ret
ljmp
inc
pop
sub
bound
int3
int3
arpl
cli
gs
scas
mov
add
loopne
in
adcl
mov
mov
sahf
outsl
cmc
xor
mov
lcall
jl
loop
in
jo
cs
aas
xor
sti
adc
fwait
clc
sbb
jge
mov
push
into
pusha
xchg
jnp
mov
incb
cli
sbb
lods
test
loopne
push
inc
or
pop
js
sbb
jns
fwait
rclb
int3
es
jnp
aas
mov
inc
pusha
fsubl
sbb
sbb
adc
sahf
sub
data16
cmp
call
push
mov
cmp
sbb
pop
out
sbb
xor
mov
int
test
xchg
cltd
jno
fadds
imul
jne
jg
jns
cmovo
mov
pop
loopne
mov
subl
outsb
jno
adc
cmpsb
mov
sbb
jmp
or
jmp
scas
daa
push
pop
test
into
loop
out
sbb
mov
jno
xchg
pop
xor
adc
xchg
insb
adc
pushl
mov
cs
push
xor
out
test
jno
pop
pushf
mov
fsubrl
and
dec
push
outsb
push
sbb
arpl
mov
push
sti
jge
leave
push
and
aad
mov
dec
int3
fwait
push
cs
arpl
fwait
or
sarb
iret
sbb
sbb
mov
mov
or
lock
jge
or
inc
cltd
mov
aas
mov
xchg
inc
and
jl
adc
pop
and
push
movsl
aad
sub
fimull
sbb
lcall
mov
sahf
fsubs
mov
mov
stos
mov
rcrb
xchg
arpl
mov
aad
ror
mov
mov
sahf
fdivr
stos
negl
sbb
leave
fildll
xchg
mov
pop
xchg
cmp
pushf
js
aad
jecxz
ss
dec
mov
pop
iret
adcb
mov
ljmp
cwtl
add
in
push
shrl
fnsave
or
mov
pop
mov
fldenv
mov
push
jne
sbb
xchg
fdivrs
mov
scas
sub
out
aam
push
push
xor
push
push
movsl
push
fidivrs
xchg
mov
mov
jg
loope
dec
xchg
sub
adc
stos
mov
outsb
cs
jnp
nop
mov
sbb
popa
adc
lret
pop
jbe
sti
mov
cmp
cmp
cwtl
jo
mov
hlt
lea
int
adc
xor
fdivrs
jne
pusha
fsubp
pop
fisttpll
in
mov
cltd
fmuls
jmp
scas
jo
int3
rolb
lret
jecxz
out
or
movsl
iret
mov
xchg
scas
cmc
add
movsb
test
add
cli
inc
or
loop
sbb
daa
jb
xchg
out
inc
lods
or
stos
imul
jnp
jb
adc
stos
popf
jnp
or
jbe
adc
repz
int3
rclb
nop
and
jecxz
imul
cmp
jle
je
jp,pn
daa
les
cwtl
cmp
cltd
push
imul
lahf
add
jp
ficoms
sar
dec
mov
je
cmp
arpl
hlt
adc
add
mov
jne
lcall
jg
xchg
call
pop
in
jge
adc
jnp
xor
ret
out
arpl
cmp
jne
test
jns
and
imul
stos
pop
insb
nop
pop
push
je
cld
sahf
fmul
pop
push
inc
inc
or
jb
movb
sbb
and
testl
outsl
cli
imul
cmp
sbb
adc
push
adc
jmp
cmpsl
aas
fwait
icebp
inc
mov
outsl
lcall
cwtl
div
jg
lret
andb
mov
aas
cmp
mov
push
scas
mov
out
dec
stos
lods
add
pop
lea
fwait
aam
out
and
dec
imul
xchg
pop
push
insb
mov
sbb
scas
mov
mov
pop
jb
dec
dec
shlb
and
ret
pushf
roll
mov
cli
insl
aas
pop
aad
lods
cmpl
cli
sahf
inc
jae
or
in
pop
lods
mov
nop
mov
sub
fildll
push
mov
sbb
mov
adcb
add
push
pop
in
sbb
pop
cmp
data16
fistl
fst
fidivrs
jmp
fdivl
cmp
and
add
cmp
mov
pop
pushf
jp
sub
lods
and
pop
mov
mov
stc
in
pop
push
lds
into
mov
mov
lret
mov
mov
sbb
cmpsl
loope
outsb
mov
aas
popl
cmp
daa
lcall
dec
sub
clc
lods
jle
pop
ja
jbe
push
into
mov
add
scas
sbbb
shrb
xor
enter
cmpsl
movsl
ljmp
xor
sub
shll
lahf
inc
cmp
pop
pop
add
xchg
ja
cmpl
fbld
push
jnp
pop
xchg
mov
cmp
or
cli
les
fcoml
fidivs
mov
mov
in
iret
push
jns
fs
pop
mov
adc
sub
cmp
psrad
mov
sbb
jnp
cmpsl
pop
and
xor
mov
shld
sarl
mov
sub
loope
add
fistl
sub
mov
mov
mov
push
cwtl
pushf
incb
dec
cmpsb
insl
xchg
mov
mov
sti
or
mov
and
xchg
sbbl
aas
loop
loopne
cmp
dec
leave
inc
jle
xchg
push
imul
adc
cmp
int3
hlt
js
scas
sti
in
xor
adc
or
cmp
enter
cmpb
mov
dec
sbb
adc
inc
mov
test
push
imul
jae
cmp
and
stos
leave
inc
jnp
insb
mov
imul
lea
fisttpl
test
repnz
lret
iretw
loop
stos
pop
je
movsb
lea
cwtl
pop
mov
addr16
pop
test
cmpb
in
aad
xchg
sbb
cmp
pop
mov
outsl
lds
ret
cmp
mov
sbb
sub
push
mov
mov
int3
cli
xchg
pop
sbb
flds
cmp
sbb
adc
jo
sub
lock
mov
push
jno
jmp
sbb
cmp
mov
jg
push
jmp
jg
adc
int
cli
idivl
shrl
inc
sbb
addb
cmp
pop
test
xor
cmp
idiv
cmp
xchg
fisubl
or
push
out
push
cmp
test
inc
ds
and
and
lahf
mov
std
fwait
js
mov
outsb
mov
jbe
pop
pusha
rorb
rorb
mov
jle
dec
mov
ret
fisubl
xorb
lods
jle
cmp
out
dec
and
loop
jp
pop
inc
gs
push
leave
outsb
sub
test
lret
lea
push
cltd
adcl
xchg
or
fistps
cs
pop
add
mov
or
mov
fcoms
inc
sbbl
cmpsb
cmp
mov
mov
cs
sbbl
xchg
pop
pusha
lcall
fldenv
insb
mov
adc
push
pop
push
xchg
sbb
fsub
fs
rcrl
sub
and
xor
pop
push
push
nop
fidivrs
in
mov
gs
push
cmp
hlt
pop
xor
cmp
pushf
int3
inc
scas
mov
imul
loopne
cmp
nop
xor
jne
xchg
push
ljmp
cmpsl
sbb
dec
and
movsl
cmp
and
mov
aad
repz
fldl
stos
mov
mov
jmp
push
in
in
jle
lret
iret
aaa
or
pushf
aas
inc
xor
xchg
rclb
sbb
xor
outsl
lods
pop
and
stos
stc
pop
cmp
inc
rcrl
xchg
cwtl
xchg
pop
stc
add
pop
cmp
jae,pn
cltd
inc
jg
rcll
imul
push
jmp
xchg
inc
cmp
ljmp
fstpl
filds
cli
pop
dec
xchg
jge
addr16
pop
xchg
mov
ret
mov
mov
test
pop
jge
insb
leave
test
inc
fwait
dec
jno
fsubs
add
push
jge
pop
ficoms
out
jno
dec
mov
sbb
push
fldenv
imul
movsl
mov
jo
and
lds
cld
inc
add
ss
jp
push
pop
and
cwtl
adc
lahf
xor
xchg
pushf
mov
ret
test
pop
jb
ljmp
cmp
outsl
call
cmpsb
mov
and
pushf
xchg
cmpsl
imul
fildll
pop
lret
mov
or
dec
rol
in
jl
sbb
pop
inc
inc
lods
push
test
jmp
and
in
cmp
sahf
mov
cmp
cltd
sbb
loopne
xlat
pushf
mov
and
add
dec
scas
lret
jg
cmp
push
mov
std
and
cmpsb
sbb
mull
xchg
jmp
mov
lods
mov
or
in
mov
fsubl
jge
pushl
or
pop
loopne
mov
cmpsb
add
cli
sub
sti
outsb
jnp
adc
arpl
push
and
sbbl
scas
or
and
cltd
mov
mov
jecxz
jecxz
dec
movsb
cmp
enter
shll
pop
sub
push
xchg
pop
sbb
dec
jno
mov
xlat
sti
dec
xchg
jmp
enter
jbe
test
add
lahf
cvtps2pd
rorb
je
or
add
mov
and
lods
dec
dec
jp
dec
hlt
clc
rcll
enter
lods
add
push
mov
pop
pop
cmp
lea
jno
call
repz
sub
iret
jb
clc
sbb
icebp
stos
mov
xorb
adc
clc
rclb
push
mov
das
bound
jmp
int
lahf
mov
push
loop
pop
push
adcb
cwtl
inc
inc
xchg
fdivr
test
aam
test
and
js
inc
ss
dec
fcmovu
inc
sbb
pop
ljmp
scas
out
sub
jg
push
adcb
push
sub
dec
notb
outsb
dec
std
cwtl
je
cmp
push
dec
mov
enter
sbb
leave
add
mov
call
xchg
sti
bound
lds
outsl
test
addl
mov
lods
loope
pop
lds
aas
inc
jl
fmull
cmpb
mov
dec
push
lret
xlat
pop
js
pop
into
inc
xor
sti
sbb
jnp
clc
xchg
insb
jae
cmpsb
mov
sbb
mov
push
mov
fistpl
mov
cmp
or
test
push
xor
outsb
pushf
jbe
es
js
fisttpll
jp
mov
shl
cld
negb
xchg
rolb
aad
push
jmp
xor
push
or
mov
rcll
dec
ret
enter
push
lods
sbb
xchg
sti
and
loope
xchg
faddl
cmp
mov
cli
mov
shlb
push
lea
inc
and
adc
mov
adc
loopne
pop
adc
cmp
push
and
test
cs
shrl
add
movb
lret
loope
in
and
lahf
das
repz
mov
jge
xorb
daa
cmc
adc
add
dec
pop
pop
mov
add
xchg
push
push
test
and
ret
mov
inc
lea
cmpsb
scas
jnp
loop
xchg
adcb
dec
test
mov
mov
pusha
gs
cmp
js
jmp
cmpsl
fbld
and
fcmovnu
je
stc
insb
aad
into
dec
mov
push
adc
scas
pop
sti
movsb
pop
hlt
clc
sbb
lahf
cs
lods
cwtl
movsl
adcb
cmp
stos
out
das
test
mov
jns
add
hlt
push
dec
fwait
and
pushf
out
fsubl
fsts
aas
inc
adc
mov
mov
or
fistl
adc
out
jo
sbb
subb
into
cli
jl
dec
xchg
jno
in
pop
fcompl
scas
inc
dec
roll
mov
adc
mov
in
push
sbb
out
int
sti
ja
aas
div
lret
sbb
sahf
imul
mov
arpl
pop
xor
sbb
mov
jp
lds
pop
cwtl
and
mov
jmp
jno
mov
lret
lahf
pop
cmp
mov
loopne
repnz
jle
std
pop
insl
cmp
and
jo
stc
subb
inc
dec
pop
and
loop
out
int3
or
and
pop
out
insl
xor
gs
pop
dec
fsubrs
mov
and
sbb
cld
leave
adc
scas
cmp
mov
inc
jo
mov
in
and
xor
mov
adc
pop
cmpb
sbb
lahf
inc
data16
ljmp
jno
fcoms
or
stc
jl
jl
adc
fcmovne
fnstenv
and
leave
mov
imul
insl
xchg
pop
pop
mov
xor
add
push
or
sbb
sub
test
out
cld
orl
mov
mov
jg
jnp
pop
mov
push
push
subb
pop
stc
in
stos
mov
push
pushf
xor
sbb
mov
out
cmp
sbb
aad
pop
fnsave
xorb
lcall
add
mov
xchg
ss
adcb
sbb
pop
adc
negl
clc
cwtl
dec
sbb
test
pop
cmp
imul
cs
pop
loopne
loopne
outsl
adcb
daa
sub
dec
jecxz
cvttps2pi
mov
mov
sub
mov
out
sub
xor
aad
std
stos
int3
sbb
dec
adc
ret
sbbl
sbb
pop
and
mov
test
hlt
or
aam
xchg
addr16
or
es
sbb
mov
ds
stos
or
out
sbb
loope
nop
fcoml
cs
call
mov
cli
cmp
icebp
and
add
add
mov
cmp
xor
repz
clc
jge
mov
push
ret
inc
xchg
fcomp
ret
mov
pop
sbb
scas
fwait
push
push
pop
dec
adc
cmp
jmp
cmp
jmp
rorl
add
xor
mov
push
push
cwtl
sbb
jl
and
lahf
sbb
pusha
out
shll
and
jle
scas
out
dec
out
into
mov
jne
sbb
lahf
mov
and
mov
sbb
daa
lret
rcr
std
jnp
imulb
rorl
add
push
mov
shrl
add
add
imul
inc
roll
mov
mov
sti
inc
sub
mov
pop
cmpl
mov
es
mov
aas
mov
dec
mov
push
dec
cmp
mov
or
rorb
adc
push
push
jge
fnstenv
add
mov
ds
mov
sbb
lds
add
push
int
pop
mov
popf
outsl
imul
and
mov
sub
jg
and
pusha
mov
push
push
repnz
or
mov
adc
imul
or
cltd
xchg
sub
adc
or
je
fmuls
pushl
pop
adc
adc
cld
pop
lock
sti
movsl
jle
into
sbb
mov
sub
adc
jnp
adc
out
and
jl
pop
pop
fdiv
dec
fadd
pop
lds
into
iret
stos
into
add
aam
jbe
pop
dec
push
cmp
adc
fisttps
jmp
iret
jge
pop
pusha
lcall
xlat
cmc
pushf
orl
sbb
nop
lret
jno
push
jle
fwait
int3
fidivrs
add
imul
pop
cs
stos
sub
fildl
inc
mov
add
stos
aas
fwait
cmp
or
mov
adc
mov
push
pop
xlat
mov
jl
xchg
jg
jl
jle
inc
test
arpl
gs
sub
loop
mov
cmp
mov
nop
lret
pop
jecxz,pn
rclb
cld
xor
popf
jbe
or
daa
mov
inc
int3
ds
fistpll
frstpm(287
or
cmp
pop
jno
cmp
cli
mov
pop
popa
push
test
rcll
dec
and
mov
mov
sbb
fsubp
cmp
mov
inc
scas
lea
mov
loop
and
popf
jp
add
add
and
fcomps
jle
xchg
hlt
or
sbb
inc
sbb
pusha
aad
loope
mov
xchg
ljmp
pop
rcrb
dec
jge
adc
sarb
mov
sbb
dec
into
xchg
lret
adc
ds
test
xchg
mov
shlb
inc
or
inc
cmp
scas
adc
pop
adc
fs
pushf
aam
and
jge
pop
cltd
test
xor
xchg
inc
sbb
jae
xor
push
and
adc
add
cli
dec
imul
ffreep
stos
sahf
pushl
xor
aas
jmp
jp
cli
xchg
jl
inc
cli
push
and
mov
inc
ljmp
mov
lret
pop
aam
fisttpl
cmpb
or
sbb
cmp
adc
dec
lods
nop
pop
push
jb
pop
push
sbb
push
jg
xchg
mov
cmp
mov
add
sbb
nop
fisttps
xor
sbb
xchg
adc
jp
mov
and
push
dec
cmpsb
sti
fxch
int
pop
pcmpeqw
lods
jno
mov
xchg
outsb
test
cmp
jl
xchg
decb
fwait
sbb
int3
movsl
mov
add
sbb
dec
repz
jbe
mov
out
das
mov
clc
loope
fcomps
ljmp
movsb
inc
xchg
imulb
aam
mov
inc
jns
inc
mov
ss
cltd
cld
sub
gs
mov
add
xchg
bnd
jmp
adc
call
ljmp
sbb
jg
sahf
xor
xchg
shrl
call
mov
stos
jnp
and
pop
xor
mov
cmp
xor
test
lods
daa
movsl
pushf
mov
ret
xor
mov
not
jecxz
call
or
or
mov
loope
jns
daa
insl
ss
and
pop
cltd
andl
push
pusha
btc
jg
dec
sub
jg
pushf
pop
out
adc
pop
orb
adc
mov
mov
incl
push
mov
dec
mov
cltd
xchg
pop
dec
aad
pop
call
out
mov
mov
rolb
sbb
adc
mov
test
fs
xlat
adc
xor
pop
lds
push
lahf
jg
sbb
iret
dec
xor
je
maskmovq
testl
mov
xchg
fucomip
clc
popf
out
dec
cmp
push
ret
add
push
mov
pushf
fildll
sbb
adc
pop
ds
sbb
mov
daa
mov
lock
add
mov
insl
xchg
jo
sbbl
jbe
sti
xor
aad
or
push
jb
imul
aas
xor
adc
or
arpl
cli
cwtl
mov
roll
jns
aas
mov
out
fdivrl
mov
push
cli
cmp
nop
sahf
or
hlt
jge
dec
bound
gs
pop
rorl
pop
movsb
inc
lds
add
shll
fildl
pusha
clc
inc
clc
push
lods
aas
loopne
pop
in
stos
jecxz
jno
pop
repnz
repz
cli
mov
push
mov
lods
push
cmc
sahf
sub
fwait
out
adc
in
push
fdivrs
es
sub
das
jne
or
push
xor
mov
clc
fmuls
loopne
pop
jne
fstpl
orb
xchg
sbb
rclb
stos
loop
pusha
mov
sub
cs
xchg
and
cmp
xorl
icebp
hlt
mov
inc
xchg
inc
scas
sar
or
rol
xchg
sbb
std
and
inc
cmp
xlat
sub
sahf
test
pushf
xchg
cwtl
pop
adc
cmp
or
test
mulb
fwait
aam
test
lret
cmpl
dec
mov
fs
test
adc
push
cmc
or
fsubrs
dec
mov
divl
push
inc
jae
cmp
xlat
push
cmp
and
iret
test
stos
sbb
add
fisubs
aam
push
jle
leave
push
mov
std
pop
mov
sbb
mov
lret
xchg
cmp
mov
fidivrl
fxch
jnp
stc
fadds
add
inc
inc
scas
cmp
mov
xchg
fdivrs
insb
xchg
mov
mov
sti
or
cltd
arpl
loopne
test
dec
push
mov
scas
cmpsl
jb
out
sbb
or
test
dec
ss
cmpb
sub
mov
inc
push
sahf
sar
int3
scas
jle
addl
mov
xchg
push
ror
cld
push
or
sbb
mov
pop
inc
jp
fimull
gs
mov
into
cltd
or
xchg
cmp
sbbl
stos
jnp
sbb
jnp
push
test
lds
lret
pushf
lret
pop
ficompl
lea
add
frstor
xor
pushf
addr16
push
push
movsb
push
fstpl
mov
das
pop
adcl
mov
and
lods
sti
cmpsb
xor
lcall
lods
test
pop
add
ja
cmp
xor
jb
add
xor
mov
pop
xor
pop
fmul
or
pop
cwtl
cld
push
adc
mov
cmpsl
sbb
iret
pop
xchg
xor
cmpsb
popa
lret
xchg
adc
jno
jl
out
push
fiadds
jp
jl
mov
shlb
loop
mov
rol
cld
les
xor
jnp
jge
call
sbb
xchg
dec
imul
jo
aas
jp
jecxz
lret
jg,pn
inc
shlb
mov
call
flds
cmp
jno
lock
stc
mov
sahf
mov
mov
outsb
repz
push
lock
jg
hlt
adc
mov
pop
cmp
pop
mov
sbb
and
dec
sbb
and
xlat
test
inc
mov
repz
test
clc
adcl
sub
aas
cltd
add
pop
cltd
je
pop
xor
mov
pusha
adc
fcom
cmp
mov
sbb
popf
iret
jmp
xor
stos
jg
repnz
bswap
sbbb
mov
xor
and
pop
pop
movb
pop
mov
cld
sbb
decb
mov
out
ljmp
or
test
pusha
xchg
dec
fwait
int3
fnstenv
roll
push
mov
mov
fidivrs
test
ficomps
push
bound
mov
add
fsubr
sub
lahf
cmp
andl
pop
xchg
jl
sub
nop
or
adc
pushf
imul
loopne
iret
lods
sbb
enter
mov
xchg
add
pop
mov
mov
aas
adc
ss
icebp
push
rcrb
xchg
mov
push
int
adcl
sub
sub
subb
pop
cmp
push
insb
in
das
roll
add
xchg
cwtl
dec
mov
adc
and
jge
fneni(8087
sub
add
mov
or
and
mov
adcl
lret
push
cmp
data16
fdivr
repz
fsubr
sarb
sbb
jp
mov
mov
jb
js
addl
mov
cmp
xor
mov
add
cld
mov
mov
add
cmpsl
in
out
sub
jmp
dec
bound
test
lods
js
loop
inc
fwait
mov
cmp
pop
adc
adc
mov
push
rcrl
add
xchg
jno
sbb
inc
icebp
hlt
dec
stos
sub
rorb
fs
xor
mov
addr16
test
add
jg
and
outsl
adc
mov
je
jo
loop
push
push
cmp
lcall
mov
rcr
icebp
cmp
or
mov
stos
push
pop
fdivrs
inc
ja
std
cld
sub
or
cmpsb
fadd
dec
mov
pop
jae
scas
or
mov
mov
mov
fistps
lret
jg
dec
scas
xor
adc
mov
xor
sub
sub
push
outsb
stos
add
sbb
jg
cld
push
ret
sbb
sti
cmc
mov
or
dec
outsl
mov
rcr
pop
mov
rorb
cmpl
cli
int
scas
cmpsl
mov
push
in
outsb
movsl
pop
pop
ja
cmpsb
xor
and
mov
dec
jg
cmpsl
mov
pop
fldcw
pop
jb
stos
sbbb
popa
jb
jb
ds
cmp
push
lret
fimuls
pop
ss
ja
stos
idivl
sti
adc
shl
sbb
ffree
sbb
movsl
aas
movsb
sub
iret
int3
lret
ljmp
aad
in
test
mov
fs
mov
test
aas
mov
add
jl
test
insb
pop
loopne
cmpsl
mov
stos
dec
pop
mov
aad
lods
sti
dec
mov
sti
mov
ljmp
mov
dec
pop
divb
pop
in
push
jns
js
enter
sbb
imul
add
int
mov
cmp
push
loopne
push
inc
add
mov
jl
mov
mov
dec
sbb
push
gs
sub
imull
fsubrs
mov
repz
adc
loop
add
xchg
insb
xchg
push
stc
shlb
xchg
xor
std
pop
push
aam
cmp
xor
sbb
loop
ficomps
nop
push
mov
out
mov
or
dec
jg
and
pushf
pop
dec
cmp
cld
dec
pop
aam
push
lods
into
jecxz
jl
mov
cmp
in
xchg
movsb
cmp
fildll
jp
push
les
lods
stos
jg
pop
xor
in
dec
imul
pop
mov
test
neg
in
sti
cmpsl
mov
or
pop
test
jno
addr16
aad
pushf
pop
mov
mov
xchg
xchg
sbb
mov
jb,pn
fcoml
stc
in
xor
aam
fcmove
das
shll
pop
lods
mov
cmp
subb
cmp
mov
idivb
jmp
stos
xchg
icebp
jle
xor
out
clc
xchg
enter
inc
data16
mov
psubd
fnstcw
rcrb
cltd
sbb
lock
les
dec
jmp
pushl
xlat
sbb
jmp
pusha
sbb
aad
cmp
es
inc
ljmp
mov
mov
cld
cltd
mov
inc
jge
aas
mov
popf
mov
add
push
hlt
test
cwtl
mov
mov
out
fdivp
imul
sti
cwtl
insb
ret
add
rcrb
dec
adc
ret
ror
pop
push
sbbb
repnz
add
std
adc
sub
fstpl
xor
cmp
inc
mov
mov
mov
and
dec
dec
shll
jno
enter
std
fs
xchg
sbb
sub
fcompl
dec
dec
add
imul
xchg
test
scas
mov
hlt
imul
aam
fcomps
lret
push
fcoms
jnp
pop
popa
mov
push
mov
mov
sbb
pop
jge
push
mov
cmp
in
push
jmp
ret
sti
scas
addr16
mov
sahf
sbb
xor
rorb
sbb
push
out
xor
cmp
pop
in
sub
mov
mov
sbb
or
mov
mov
pinsrw
or
adc
aas
and
fistpll
loopne
cmp
in
fdivs
adc
roll
mov
sub
loope
dec
and
loope
popf
enter
jmp
scas
mov
cwtl
test
dec
cmp
mov
jg
lret
jnp
imul
mull
out
pop
in
mov
dec
ja
cld
in
ss
stos
mov
xlat
and
popf
xchg
jo
adc
lret
lahf
stc
fcomps
add
lds
in
dec
out
sub
or
out
push
popa
adc
in
out
shr
and
cmpsb
jo
fnstcw
dec
or
cmp
sub
mov
jp
fcmovb
xchg
dec
xor
enter
mov
out
movsl
add
cld
cmp
cmpsb
mov
mov
mov
cmp
pop
sub
mov
cmp
test
cwtl
xchg
fdivr
xchg
inc
inc
in
fucomp
stos
jne
cmpl
icebp
xlat
fistl
dec
in
pop
push
lcall
test
mov
cwtl
pop
mov
movsb
imul
lret
cmp
lock
mov
push
pop
in
pushf
ret
mov
lds
fstpl
lahf
mov
xor
rorl
fsubl
scas
loop
adc
ret
push
cmc
test
pop
sbb
out
cmp
pop
fistpl
jle
adc
sbb
adc
mov
jmp
or
xor
ss
push
daa
push
cli
pop
or
int
test
scas
pop
fidivrl
add
pushf
cli
mov
or
cmp
inc
cmp
pop
nop
pop
pop
js
stc
fwait
mov
movq
xchg
neg
mov
jg
mov
jae
mov
push
jb
sarl
orb
xchg
in
mov
rorb
mov
xor
mov
sbb
mov
test
gs
sahf
int3
and
dec
popa
fisubrs
pop
fcoms
mov
hlt
cwtl
xchg
popf
hlt
sub
mov
mov
mov
mov
cmp
or
lahf
mov
dec
jle
fisubs
fsts
flds
enter
cmpsl
pushf
test
jmp
std
cmp
cmpsl
pop
add
pop
popa
lcall
pop
jp
test
cmp
pushf
push
inc
cmp
dec
and
mov
addl
loop
cmpb
stc
inc
cmp
into
mov
fsubrl
test
inc
add
int3
aas
sbb
add
mov
xlat
in
in
mov
push
ud1
pusha
add
cld
movsb
loopne
dec
stos
stc
push
jecxz
clc
ljmp
lock
mov
and
sbb
mov
sarb
cltd
fsubr
xor
push
cmp
jge
xchg
sbb
jo
fsub
and
out
and
fwait
in
pop
stos
mov
pop
les
mov
cmp
scas
stos
xor
pushf
lret
sbb
mov
fisubrl
dec
jmp
fs
cli
pop
mov
icebp
lret
loope
xchg
pushf
adc
adc
test
sub
inc
fdivl
sbb
push
jae
mov
adc
inc
je
fnstsw
xor
daa
pop
fmulp
xor
aad
sbb
sti
cmpl
imul
xchg
insb
sarb
pop
pop
dec
ficoms
mov
mov
sbbb
sub
sbb
fwait
mov
add
cmp
mov
aad
les
cld
cwtl
lret
in
pop
fdivrl
jecxz
mov
mov
cli
ds
fistpl
repnz
xchg
jl
int
fisttpll
sbb
mov
test
cli
aad
mov
popa
xor
pop
jg
jbe
ljmp
aaa
fnsave
push
sub
pop
lahf
or
or
dec
and
pusha
dec
xchg
aad
xchg
sub
js
lea
out
into
scas
mov
inc
fisubrs
or
lret
in
rorl
adc
mov
dec
pop
xor
mov
sbb
lock
lahf
mov
enter
xchg
pushf
aam
int3
mov
xor
call
loope
cli
daa
push
mov
xchg
and
cmp
out
inc
mov
sahf
mov
cmp
scas
jae
outsb
mov
dec
lods
inc
sarl
xor
add
dec
pop
pop
jne
pusha
xchg
xchg
in
xchg
pop
shll
jae
dec
cli
jnp,pt
out
mov
push
adc
xchg
clc
inc
xor
mov
insb
loop
shlb
pushf
aad
sbb
stos
adc
in
mov
lds
inc
mov
mov
lock
dec
lea
xchg
into
fsubl
inc
lea
xchg
mov
iret
jmp
mov
cmp
dec
test
lcall
mov
ljmp
cli
jae
or
pop
ret
out
and
mov
repnz
mov
push
jge
jb
jecxz
icebp
sbb
mov
add
popf
stos
bnd
ret
sbb
int
pop
js
fucomp
mov
outsb
sahf
xor
jl
xchg
fsubrl
push
xor
test
mov
vpsubusb
add
daa
inc
cmp
cmpsb
iret
popf
jnp
mov
psllq
jecxz
and
popf
add
xchg
call
push
mov
mov
fsubl
pushf
lds
arpl
mov
sbb
aas
pushf
addb
and
dec
xor
enter
lcall
mov
mov
jle
int
pushf
or
pop
sub
dec
scas
lret
dec
idivl
mov
add
jnp
mov
fisubrs
jbe
sub
adc
stc
lods
sbb
sub
cld
or
leave
mov
shl
sub
cmovs
je
add
mov
loop
jb
mov
push
inc
fmuls
loopne
mov
xor
ja
addb
cmpsb
rcl
cmp
daa
rcrl
incl
or
stos
push
fisttpll
cmpsl
je
and
push
outsl
roll
loopne
fistpl
ljmp
pop
movsb
cmp
mov
mov
repnz
xor
fld
jmp
jne
cmpsb
call
pusha
int3
insb
cli
imul
sbb
addl
fwait
cmpsb
out
lret
xchg
mov
push
imulb
pop
inc
popl
scas
and
call
fldl
jmp
fsubrl
ljmp
cmp
or
test
mulb
rorb
mov
ret
fwait
int3
iret
jg
cmp
std
out
xchg
pop
jno
cld
cmp
cmp
cmp
mov
ja
mov
movsl
les
mov
xchg
clc
ss
repnz
jmp
mov
call
pop
adc
sbb
push
push
adc
mov
js
xchg
icebp
sbb
mov
adc
sub
fdivl
sbb
push
flds
cmp
fcoms
cmp
outsb
push
idiv
pop
mov
lds
mov
ljmp
fwait
fwait
outsb
out
iret
es
cltd
fcomps
and
sbb
mov
stc
cs
mov
dec
das
fmulp
fwait
cmp
jp
jbe
lret
sbb
cwtl
scas
jb
lahf
xchg
movhps
sub
pop
popa
int3
ljmp
inc
aas
mov
inc
in
add
scas
imul
push
scas
pop
addb
idiv
dec
sahf
in
int3
dec
cmp
cs
sub
loop
repnz
sbb
fwait
or
and
dec
fldcw
jge
adc
sub
dec
pop
nop
xor
mov
push
sarb
cltd
xchg
shr
jo
stos
sarb
sbb
inc
push
out
pop
dec
mov
jg
mov
cmp
stos
cwtl
sbbl
ss
ret
cmpsl
rcrl
cs
lods
mov
mov
iret
mov
arpl
cli
ud1
inc
test
test
imul
push
imul
sbb
das
testb
and
cmp
sub
dec
mov
inc
push
out
sbb
jp
mov
mov
call
int3
xor
and
mov
pop
daa
mov
stc
out
aaa
push
mov
and
and
jnp
aam
inc
out
jbe
das
sub
nop
je
nop
pop
mov
dec
repnz
hlt
les
cmp
test
sub
sbb
outsl
int
sbb
mov
mov
jp
clc
fucom
pop
or
jnp
pushf
mov
test
cmpl
les
inc
fadds
and
mov
xor
scas
sbb
inc
andb
pushf
cld
xor
mov
mov
int3
jo
jecxz
push
jge
jmp
add
mov
call
adc
cli
and
in
fcompl
add
in
lods
and
mov
xor
cli
dec
stos
and
jbe
pop
cwtl
add
add
test
sbb
mov
ret
dec
cli
ret
pop
dec
sub
mov
xor
cs
jo
testl
jne
imul
sbbl
out
insb
je
sbb
jl
ret
hlt
and
cmp
lcall
jnp
inc
lods
stc
push
nop
les
int
jno
or
rep
xchg
fwait
sbb
adc
cmp
in
fsubl
aam
or
adc
cmp
xchg
xchg
popf
lea
mov
or
fcomi
mov
je
test
sbb
std
jo
mov
mov
hlt
or
jns
cmc
dec
mov
xchg
sub
inc
and
mov
jns
bound
mov
sub
xor
mov
dec
inc
sbb
sarb
repnz
or
test
mov
rorl
push
mov
stc
jns
mov
out
pop
cmp
add
push
out
mov
fwait
and
andl
mov
iret
sub
cmp
dec
cld
jge
movsb
pop
mov
xchg
test
mov
xor
cmpb
add
test
mov
or
leave
mov
mov
mov
fwait
test
cmp
pop
xor
pushf
aaa
mov
popf
movsb
mov
mov
jecxz
push
dec
xchg
sbb
cmpl
jg
mov
sbb
lcall
pop
sarb
and
call
outsb
add
mov
add
mov
notl
mov
push
stc
xor
push
jae
push
xor
xchg
fldt
push
roll
mov
lret
xor
je
sub
insb
xor
cwtl
push
rcrb
stc
mov
stos
push
cmpsl
mov
int
pushf
adc
cltd
adc
pop
mov
fcmovb
mov
test
and
xor
ds
shl
cwtl
mov
ror
scas
stos
aas
mov
dec
cmp
negb
xor
sbb
call
rcr
dec
cmp
out
fsubrl
sbb
insb
popa
jne
daa
jno
xchg
pop
pop
sbb
std
in
rol
dec
mov
jecxz
push
lds
push
hlt
sub
cmpsb
lcall
dec
ss
cmp
xor
mov
loope
push
outsb
aam
call
popl
enter
jnp
inc
cmp
int3
pop
div
in
jle
lea
je
xchg
sahf
jns
cwtl
popf
iret
push
jp
js
les
dec
fsubs
mov
arpl
xorb
cmp
in
cmp
stos
aas
fwait
jg
xorl
inc
pop
es
pop
cmc
je
test
mov
or
xlat
xchg
sub
add
and
addr16
jmp
sti
shrl
sub
mull
fmull
xor
loop
jle
jp
add
jae
pop
cmp
push
jle
sbb
dec
xor
jb
mov
cwtl
sub
aas
and
adc
mov
or
cld
mov
cmp
shl
data16
jecxz
and
adc
scas
dec
inc
idivl
and
adc
push
pop
mov
pop
adc
cmp
and
xor
pop
mov
in
lcall
jp
aas
jae
jge
sbb
mov
fdivrl
shl
pop
mov
and
pop
aad
dec
push
outsl
jecxz
clc
sub
xchg
jmp
xchg
sbb
sub
cmp
cltd
hlt
pop
or
out
pop
pop
fwait
sbb
jbe
std
jnp
xor
add
lock
scas
push
cmp
cld
mov
rorl
or
or
jle
outsb
pop
outsb
jp
xchg
cmpsb
dec
test
repnz
lret
test
es
inc
js
mov
sbb
push
push
mov
dec
pop
xchg
push
push
stc
in
in
pop
pop
inc
ss
pushf
mov
add
sub
loope
out
or
pop
and
cli
xchg
mov
jns
dec
jns
push
and
out
imul
ficoml
in
mov
lret
mov
mov
ljmp
inc
dec
es
insl
out
push
ds
cmp
xchg
es
inc
jle
pop
xlat
mov
cmp
enter
xorb
test
mov
repz
xchg
test
jle
pop
push
mov
jbe
xor
das
loope
pop
jl
mov
pop
mov
lret
shlb
insb
sbb
sbb
mov
push
ror
sub
mov
incb
jo
jmp
sub
hlt
sbb
call
jl
xchg
sbb
rcr
pushf
pop
cmp
daa
loope
fdiv
push
loope
pop
add
push
loope
cmp
scas
adc
test
flds
adc
rclb
mov
cmp
sbb
add
pop
js
fstps
insb
jo
loope
lret
into
and
xchg
cmpsl
and
fldl
pushf
lret
mov
jecxz
mov
cmp
xchg
das
lret
sbb
testl
xchg
sub
xchg
jnp
dec
test
xchg
mov
jl
sbb
mov
push
iret
mov
lahf
out
orl
xorb
daa
push
add
mov
and
es
call
pushf
push
sbb
lock
mov
lcall
xor
shrb
ss
cli
scas
lahf
aaa
lcall
in
stos
daa
les
adc
pop
fsubrs
lea
repz
sub
pop
clc
pop
xchg
aas
xor
fcompl
push
bound
inc
pop
iret
jae
lds
or
adc
cmp
cli
push
mov
dec
gs
jle
jmp
imul
jecxz
cld
mov
jbe
mov
orb
mov
cli
fisttpll
xchg
stc
mov
lcall
clc
sti
shrb
es
sbb
ret
dec
inc
test
adc
arpl
mov
mov
mov
inc
pusha
xor
ds
repz
add
sbb
and
popf
lcall
daa
pop
dec
popa
add
cmp
add
sbb
lds
pushf
add
int3
fnsave
mov
cmp
fisubs
push
aad
dec
enter
cmp
ss
ret
fcmovb
jnp
hlt
mov
cmp
scas
and
pop
sahf
jno
insl
clc
testl
push
fsts
outsl
cmp
pop
subl
mov
push
dec
aas
addb
test
cmp
stc
pop
dec
xor
push
sti
roll
mov
cmp
jmp
call
div
lock
repz
add
daa
lret
mull
mov
fstpt
push
mov
ret
subb
pop
jo
xchg
testb
fsubrs
sbb
jmp
push
sarl
push
test
sbb
movsb
in
push
in
shrl
jecxz
cs
fwait
cwtl
or
and
ss
ss
or
mov
shlb
movsb
out
int3
xchg
aam
pop
xchg
pop
movsl
mov
subl
sbb
mov
xor
mov
jl
pusha
into
adc
imul
sbb
xor
dec
pushf
sahf
pop
icebp
lahf
ljmp
scas
pop
jo
dec
jbe
sbb
adc
cwtl
xlat
hlt
sbb
test
dec
push
xor
lock
cmp
loopne
stos
mov
sbb
pusha
mov
stc
mov
push
or
fwait
mov
movsb
mov
fs
jo
imul
loop
adc
jl
cli
stc
aam
mov
test
jae
sbb
sbbb
jo
xchg
and
pop
in
cmp
jo
cmp
rol
scas
jnp
std
mov
es
jge
fstpl
jecxz
mov
mov
mov
sbb
xor
push
add
pop
sbb
aas
leave
push
inc
xchg
fisubrs
and
sub
sub
sti
mov
stc
dec
pushf
into
adc
xchg
scas
mov
jnp
dec
pop
push
mov
sbb
adc
out
pop
cwtl
jge
inc
add
mov
or
leave
out
cltd
cmp
xchg
in
mov
jp
pop
lret
rcr
aad
inc
fdivrl
mov
sbb
lahf
frstor
jp
ja
mov
lods
pop
ficomps
aas
lock
in
mov
add
sbb
lods
sti
inc
daa
outsl
add
dec
fcmovbe
pop
cmovae
and
aaa
xlat
outsl
mov
cli
ficomps
pop
int
inc
push
ljmp
pop
sbb
jae
ds
lds
mov
xor
jle
pop
ljmp
mov
aas
adc
fadd
fldcw
xor
xchg
jle
dec
dec
xor
mov
mov
add
in
pop
test
jmp
ret
fwait
mov
movl
popl
movsl
xchg
int3
movsb
sbb
pop
mov
es
loopne
inc
scas
cli
sbb
aad
adc
fidivrs
cmp
popf
push
pop
adc
pop
mov
xor
cwtl
das
jns
ficomps
mov
arpl
mov
fmuls
iret
nop
cmp
mov
aas
aas
loopne
sub
dec
ror
test
les
mov
sahf
mov
sub
xor
mov
loopne
sbb
iret
cs
sti
lods
scas
mov
shlb
xchg
add
lods
in
scas
je
cmp
xchg
into
lcall
ss
xor
stc
jmp
pop
adc
xchg
stc
cwtl
dec
movsb
test
popf
pop
pop
icebp
xchg
cld
ljmp
stos
aas
pop
pop
add
jg
cld
dec
push
add
xor
clc
ds
xchg
or
cmp
adc
in
ds
jns
mov
pusha
push
imul
xchg
add
cmp
cwtl
cld
jl
filds
pop
aam
xchg
test
ud1
out
cld
xchg
cwtl
xor
ret
lret
insb
lahf
test
xor
jb
push
dec
mov
push
sahf
or
push
test
mov
cmp
shll
dec
inc
and
cmp
jmp
rolb
sti
clc
cmp
sub
adc
inc
mov
jg
add
leave
cli
jb
xchg
dec
mov
mov
cmp
outsl
sub
add
in
sub
idiv
sbb
dec
pushf
dec
and
pop
adc
repnz
mov
pop
and
pushf
adc
fstpl
jae
pop
test
ljmp
mov
aad
cs
scas
fadd
ror
in
xchg
cmp
leave
rcll
and
jg
mov
jge
cli
add
sbb
mov
xor
cmp
popf
push
sub
cmpb
push
rcll
in
pop
jne
scas
decl
mov
mov
or
orl
cmp
mov
fcmovnb
cld
mov
cmp
jno
and
xor
sbb
mov
pop
inc
cld
dec
lds
je
sub
out
lahf
pop
mov
mov
or
ds
test
jg
adcb
or
mov
int3
push
lahf
call
mov
add
sti
stos
add
mov
rcll
add
and
pop
push
outsb
xchg
pop
adc
adc
stc
fistps
sarl
dec
mov
cli
adc
xor
adc
into
sbb
test
mov
cmpb
mov
ficompl
sbb
mov
pop
push
pop
outsl
pop
jle
add
mov
add
sub
adc
test
or
push
cwtl
ds
arpl
int3
mov
lret
dec
xchg
mov
aam
lds
jle
fwait
cwtl
xchg
mov
inc
mov
mov
or
daa
adc
ljmp
rcrl
enter
mov
testl
sti
fsubr
fimuls
pop
pop
push
and
aaa
push
rcrb
in
cmp
or
jns
ja
jg
xchg
fcmovb
gs
mov
xorb
cmpsb
aas
int
pop
cmp
rclb
cmp
adcb
cmp
xor
mov
xor
in
stc
in
and
or
mov
jnp
mov
call
imul
loope
orb
dec
adc
cmp
jne
inc
fwait
and
fcomps
out
pop
sbb
pop
rcl
daa
push
cld
sub
outsl
push
pop
notb
rcr
daa
cmp
sar
jecxz
cmpsb
xchg
sbb
out
sbb
xchg
negb
mov
js
jae
movzwl
add
adc
shrl
cmc
pop
hlt
pop
rcll
sbb
mov
es
inc
jnp
xchg
jg
add
das
cmp
stos
out
data16
loope
jo
daa
push
orb
push
cmp
aaa
adc
jnp
push
cwtl
jo
jmp
cmp
sub
sub
push
test
push
mov
in
xchg
mov
cmc
mov
call
inc
mov
addl
cmpsb
cmp
mov
xchg
inc
jno
outsb
ss
pop
or
mov
mov
jl
xchg
adc
mov
or
jne
mov
xchg
jecxz
roll
sbb
xlat
lcall
xorb
es
movsl
jg
cld
inc
lret
sbb
imul
add
dec
je
ljmp
enter
adc
js
sub
push
xor
mov
sub
sbb
cmp
lea
test
out
hlt
lret
repz
dec
mov
add
pop
mov
jnp
mov
or
xchg
sbb
rcrl
fistps
or
out
cld
sbb
popf
ret
inc
leave
mov
xchg
test
jbe
pop
dec
pushf
lahf
inc
adc
add
mov
arpl
cld
roll
insb
cli
mov
add
popf
pop
mov
or
mov
mov
jle
jno
lods
leave
ljmp
push
mov
scas
sbb
add
jns
cwtl
fdivs
roll
iret
inc
popa
dec
mov
rcr
sbb
aam
jecxz
fisubl
sub
add
inc
mov
cmp
fldl
imul
loop
pop
lret
sahf
mov
add
outsl
pop
mov
pop
or
adc
mov
mov
mov
hlt
outsl
sub
fdivl
mov
mov
mov
lock
cmp
jecxz
cmp
inc
cli
out
and
insb
test
or
divl
jae
mov
rol
in
xor
das
mov
clc
lds
sbb
or
add
push
mov
fsubrs
pop
push
cmp
mov
cmovge
and
loope
shl
cmovl
imul
mov
scas
test
pop
cmp
clc
mov
aam
xorl
insl
sbb
and
or
cmpsb
jecxz
jns
xchg
cld
sbb
xchg
sub
mov
fwait
pop
out
push
adc
in
mov
xor
mov
cmc
push
int3
imul
into
scas
sti
mov
cmp
ds
cs
sahf
dec
mov
jae
cmp
jmp
leave
jg
mov
testl
subl
xor
jnp
cmp
mov
ja
push
sub
sub
push
lock
gs
shlb
mov
rcrb
pop
xchg
add
incl
jb
mov
and
xor
sub
inc
mov
jle
xchg
stc
sbbl
adc
or
ret
pop
adcb
shll
adc
mov
adc
cmp
pop
push
mov
inc
sbb
push
push
jnp
data16
mov
mov
and
jno
ret
xor
inc
pop
cmpsl
sbb
stos
sti
or
jl
mov
lods
inc
mov
cmp
or
and
ds
movsl
jle
mov
mov
clc
test
pop
insb
les
icebp
aas
test
and
mov
pop
mov
sbb
hlt
call
lret
mov
sbb
scas
jb
outsl
pop
add
mov
fwait
test
orl
test
cmpsb
test
dec
pop
fdivl
mov
stos
sti
and
mov
in
in
into
test
movsl
loop
push
sbb
lds
lret
icebp
cmp
lods
incl
push
rcll
repnz
fcomp
repz
inc
and
into
jmp
cld
in
testb
leave
pop
inc
sahf
pop
mov
cmpsb
verw
mov
push
mov
fsubrs
aam
stc
inc
hlt
test
movsl
jnp
loopne
add
and
lea
fidivrs
clc
fadds
jp
xchg
movsb
jno
mov
fmull
out
es
sub
aam
testl
outsl
lds
cli
cwtl
dec
js
fistpl
mov
sbb
jae
mov
stc
or
test
test
adc
pop
out
test
ret
cmpb
xor
jge
mov
mov
sub
scas
test
xorb
mov
pop
daa
inc
mov
xchg
pop
add
fsubs
fwait
imul
dec
mov
mov
mov
je
jg
aas
movsl
add
xchg
pop
dec
ja
movsl
cli
scas
cmc
jecxz
xchg
dec
dec
aam
adc
pop
cwtl
or
push
enter
inc
mov
fstpt
jae
dec
sbb
push
cltd
jno
pop
sbb
jne
mov
xchg
sub
cli
sub
int
sub
andl
dec
xor
int3
jecxz
xchg
negb
jmp
roll
cwtl
pop
and
cmp
hlt
inc
out
dec
pop
pop
aaa
pushf
cld
or
movsl
mov
mov
mov
movsb
dec
loopne
out
inc
fsqrt
or
pop
leave
fldcw
mov
dec
jnp
xchg
out
fsubrs
mov
sub
scas
outsl
mov
sahf
add
sub
lcall
cmp
fiadds
cmpsb
repnz
cmp
mov
cmpb
cli
sbb
movsb
cmp
mov
sbb
dec
mov
sbb
mov
dec
outsb
daa
adc
sti
jno
adc
test
stos
nop
cmpsl
aam
jbe
ret
sub
daa
data16
test
dec
pop
pusha
test
mov
stos
nop
inc
fimuls
loopne
push
and
ret
dec
inc
adc
cld
mov
data16
jno
and
mov
sub
mov
mov
stc
fadds
clc
pusha
sbb
mov
and
out
push
out
mov
or
sub
and
push
fadds
add
mov
pushf
lret
fdivs
das
jnp
pop
mov
and
sub
pop
jmp
mov
or
in
cmp
jle
inc
popa
push
mov
fsubs
scas
sti
cmp
adc
sbb
sub
adcb
sbb
jle
dec
insl
pop
popf
aaa
aas
jbe
jnp
insb
cmp
out
int
daa
jbe
rep
xor
mov
mov
frstor
icebp
imul
xchg
mov
or
cltd
test
add
xchg
jp
stos
sub
data16
jbe
fildl
icebp
jnp
mov
stos
pop
sub
sarb
movsl
out
mov
dec
and
mov
test
popf
inc
mov
jge
js
dec
fldln2
pop
inc
xor
js
cld
adc
jo
jg
xor
push
lret
mov
loop
sub
mov
pop
mov
enter
xchg
scas
pop
lods
les
sti
fmulp
jbe
push
jae
in
popf
xchg
sbbb
or
std
loopne
xchg
push
test
cmp
adcb
mov
mov
and
mov
fdivrl
jge
adc
xchg
pop
test
and
test
jp
jg
sbb
not
push
sbb
dec
mov
rol
mov
jle
mov
cltd
negb
push
add
lret
xchg
cs
aas
mov
mov
loop
test
pop
int3
int
jl
shll
xor
stc
ret
rorl
inc
push
pop
mov
xor
sbb
xchg
shll
jle
xor
lds
ja
mov
jne
mov
test
push
or
sbb
xchg
shrl
cwtl
mov
lcall
xor
jge
sub
jp
dec
add
scas
int3
jp
mov
sub
mov
sbb
pop
in
xor
fsts
outsl
xchg
jle
sbb
fildll
mov
mov
add
nop
daa
iret
sbb
add
adc
or
jp
xor
iret
mov
jge
jae
inc
mov
jns
lret
scas
test
cmp
cmp
insb
sbb
xlat
pop
fwait
jge
xor
xchg
movsb
jg
dec
mov
in
adc
fmuls
call
sbb
mov
data16
jmp
testb
sbb
add
inc
push
jl
inc
je
sbb
aaa
pop
sbb
xchg
xchg
push
mov
xor
pop
jae
lds
iret
sub
push
mov
mov
gs
cmp
rorb
cld
xchg
pop
adc
mov
cmpsl
or
cli
and
in
enter
fisubs
loope
dec
call
dec
xlat
mov
pop
sti
jg
out
dec
aam
mov
std
enter
les
sbb
and
dec
sub
cmpsl
pop
test
lea
xor
jmp
sbb
adc
cltd
xchg
lods
cmp
pop
out
flds
cli
pop
jecxz
scas
outsb
mov
pop
dec
cli
jmp
cmp
pushf
lcall
pop
incb
mov
pushf
xchg
jmp
sahf
cmpsb
rcll
xor
or
xor
sbb
pop
insl
jg
test
rorl
fstps
mov
out
js
icebp
aaa
add
into
movsl
fsubl
xchg
rcrb
cmpsl
mov
ds
movsl
mov
into
pushf
mov
jle
cmp
pop
into
and
std
test
int3
xchg
mov
out
adc
lods
xchg
sbb
and
repz
pusha
dec
ja
jbe
daa
jno
sbb
lods
inc
dec
pop
rcll
mov
loopne
sbb
aas
mov
xchg
jnp
inc
mov
ljmp
mov
repz
popa
jb
sbb
dec
sbb
jecxz
mov
sbb
clc
iret
or
lcall
mov
cwtl
sbb
aam
sbb
das
xor
fidivl
fstl
mov
jbe
jmp
out
jmp
in
adc
add
loop
fadds
fxch
sub
xchg
repz
cwtl
mov
inc
lods
scas
in
sub
cmp
xchg
sti
test
test
jae
jle
fsubr
push
insb
lret
ret
mov
mov
push
int
add
fcomps
ret
and
sbbl
stc
sarl
or
lahf
subb
call
and
mov
enter
stos
mov
in
fistl
test
imul
std
inc
mov
test
pop
jl
daa
sbb
mov
adc
pop
xor
inc
jp
pop
lods
popf
ficomps
sub
insb
dec
sub
adc
cmp
push
lods
jo
icebp
dec
mov
pushf
aam
mov
push
add
pop
xor
pop
cmp
mov
sti
pop
std
flds
sahf
movsb
mov
ret
cmp
jb
cwtl
pop
icebp
and
xor
lds
into
pushf
mov
fsub
push
ds
cmpl
add
mov
push
cmp
mov
inc
subl
dec
out
pop
jae
cmp
xlat
jp
xchg
mov
pusha
shlb
jo
iret
or
xchg
scas
add
cmp
int3
sbbl
cld
xor
les
das
popf
lcall
lds
sarb
xchg
mov
cvtps2pd
mov
pop
push
xchg
cwtl
sub
sub
test
pop
inc
into
and
sub
inc
or
pop
test
xor
stc
or
rcll
divl
test
test
push
sbb
ret
push
or
xchg
fwait
push
icebp
pop
mov
nop
xchg
icebp
add
addr16
mov
ret
dec
das
jo
jno
in
sti
addb
loop
sub
aas
iret
sub
out
or
je
push
sbb
fimull
adc
fwait
cmpl
pop
adc
xchg
jmp
push
sub
mov
test
xor
pusha
jb
sbb
cmc
push
arpl
loopne
fsub
scas
lcall
mov
fstl
pusha
or
loope
and
rcrb
jecxz
call
or
push
or
jg
jecxz
mov
movsl
sub
data16
jo
cmp
mov
pop
leave
sbb
outsb
lret
dec
xchg
pop
imul
scas
test
jecxz
jb
jmp
sbb
xor
xchg
stos
aas
inc
sbb
aas
jle
xchg
xor
test
test
test
adc
ss
push
cs
push
cmp
mov
sarb
inc
movsb
mov
push
pop
cmc
xor
jb
out
cmp
dec
std
sub
inc
pop
cmp
dec
dec
jp
popf
jle
test
mov
cmp
das
sbb
sub
inc
in
fistpl
das
in
add
test
movsb
lahf
push
xchg
lock
addr16
data16
sbb
shl
push
jno
sbb
jp
mov
ret
mov
in
cmp
add
xor
adc
ss
fimuls
add
mov
cmpb
add
fisubrl
ficoml
mov
subl
mov
lret
xchg
mov
lret
cmp
jae
repz
dec
dec
xor
sbb
xor
jp
das
mov
pop
add
ficoml
or
inc
faddl
std
movsl
and
cld
jns
ficoml
and
or
in
aas
cvtdq2ps
pop
cmpsl
repnz
pushf
add
adc
shrl
and
sub
aas
daa
das
arpl
sbb
sbb
int3
out
cmp
gs
jno
cli
push
in
xorl
inc
mov
or
xlat
les
cmpl
ljmp
hlt
cwtl
fnstenv
or
pop
mov
sbb
sub
cmpsb
jp
out
pop
paddusw
xor
mov
and
sub
aas
pop
lahf
cmp
ds
cld
mov
popf
jnp
mov
xor
outsl
repnz
sahf
jbe
lods
mov
jp
mov
mov
cmpsb
mov
aaa
loope
test
pop
pop
or
sbb
xchg
or
es
push
mov
jnp
jbe
outsb
sub
xchg
mov
test
sarb
mov
lods
mov
test
push
mov
clc
jb
stos
pop
test
jne
lock
push
in
leave
jo
jle
cwtl
sti
outsb
outsb
pop
inc
jmp
jo
and
adc
xlat
pushf
cmp
imul
mov
xor
and
mov
inc
out
out
movsb
in
js
mov
cwtl
adc
push
fcmovnu
pop
pop
testb
mov
les
xchg
addr16
sub
and
mov
es
test
sbb
ja
les
mov
cs
fistps
call
jne
test
mov
fistpl
sbb
mov
sarl
inc
clc
sub
out
and
mov
inc
add
mov
adc
sbb
dec
ret
jge
andb
aas
xor
xchg
sub
shlb
mov
arpl
fmull
fistpl
pop
adc
xchg
mov
lock
jg
sbb
mov
lock
decl
test
jmp
jecxz,pn
addr16
popf
push
xor
daa
subl
cmpsl
ljmp
pop
popa
xor
ret
sbb
pushf
mov
repz
push
out
lods
mov
fcom
mov
sbb
push
ja
rep
in
cwtl
clc
jle
add
sub
xor
leave
lahf
mov
aas
mov
hlt
icebp
or
inc
scas
sbb
push
mov
jp
jae
jb
add
cmp
cmpl
pop
frstor
lea
movsb
jnp
sbb
xlat
cmpsb
mov
add
movsl
aas
add
pop
ja
inc
push
xchg
mov
sub
icebp
xchg
push
cmp
ss
andb
and
sub
or
mov
psadbw
pop
shll
mov
mov
pushf
out
cmp
mov
xor
mov
xchg
pop
ja
fwait
sahf
fstpt
sub
in
xchg
out
pop
adcl
adc
cli
mov
jg
fldt
add
mov
decl
fadds
sarl
fiaddl
mov
add
mov
lahf
gs
cmp
and
inc
imul
and
add
pushf
mov
xor
adc
popf
mov
mov
push
sahf
pop
lock
xor
or
jmp
mov
sarl
push
idivl
cwtl
insl
sub
fstpl
je
scas
inc
jg
push
jb
pop
dec
cmp
jmp
lcall
bound
mov
push
mov
jnp
pop
lret
movsl
testb
fldl
in
inc
mov
vsubps
push
andb
filds
push
jmp
mov
popa
iret
jns
mov
jl
cmpsl
inc
pusha
popf
xor
jmp
into
shrb
addr16
fwait
mov
adc
cs
cwtl
test
fsubl
jbe
subb
push
adc
push
mov
addr16
cmp
mov
cmp
mov
cmp
cs
fldpi
cltd
mov
lods
call
add
cmp
dec
jle
sbb
push
pop
mov
ret
scas
push
outsl
out
bound
imul
jmp
in
enter
cwtl
into
aas
sbbl
lret
xchg
or
dec
orb
mov
xor
test
out
pushf
xchg
mov
mov
frstpm(287
sahf
mov
add
jno
cmp
pop
jbe
and
xor
and
mov
cmp
repnz
orb
inc
sbb
adc
pop
lock
jo
call
cmp
ffree
jns
jb
pop
lahf
xchg
ret
or
out
xor
push
sbb
mov
pop
dec
pop
cmp
sbb
mov
push
pop
sbb
sbb
icebp
add
in
add
inc
dec
cmp
dec
cli
lds
repnz
pop
mov
xor
js
mov
xchg
fcmovne
cli
jns
scas
aad
xchg
dec
dec
lods
jns
addb
lds
sbb
push
test
movsb
test
jae
jmp
and
xchg
fcompl
cmc
sbb
add
mov
xchg
xlat
in
sbb
fadds
ja
fcom
addb
bound
jbe
sub
sbb
cs
jno
push
mov
cld
or
mov
push
jnp
inc
call
sbb
cld
mov
outsb
or
out
int3
js
cmp
dec
pop
out
inc
xchg
lahf
lcall
inc
jl
or
aad
fbld
sub
insl
adc
cmc
scas
sti
ret
aam
jne
inc
pop
mov
aaa
sbb
iret
cmp
mov
enter
ficoml
xor
jnp
pop
lret
out
or
pop
stos
incb
xchg
add
mov
cli
lret
stos
test
dec
je
xchg
xchg
scas
leave
xchg
mov
xchg
jg
in
in
pop
lods
lods
ja
pushf
jmp
mov
xchg
add
pushf
iret
scas
cltd
in
or
test
scas
sbb
xlat
into
add
mov
cld
push
mov
out
shll
out
dec
das
mov
mov
pop
mov
pusha
js
cmpl
cmp
xchg
dec
pop
xlat
outsb
je
lods
lret
stc
push
repz
pop
loope
ds
cmc
leave
outsl
sarb
pop
push
js
lods
pop
push
pop
xor
rorl
lock
adc
adc
or
std
xchg
lcall
cmp
incl
outsb
or
pop
cs
sub
cmp
cmpsb
xor
push
xchg
clc
adcb
inc
sub
icebp
cwtl
hlt
pushl
cwtl
jecxz
lcall
movsb
dec
test
mov
cwtl
jg
xchg
movsb
xchg
js
and
popa
loop
jge
mov
gs
scas
xchg
cmp
stos
jnp
popf
xlat
add
int3
dec
lret
jmp
inc
xlat
jp
sbbb
mov
incb
aas
fimull
sbb
std
cmovae
cmp
mov
push
mov
gs
pop
dec
cmp
icebp
mov
cld
mov
shlb
pushf
mov
adc
xlat
rol
xlat
sub
mov
xor
cmp
jmp
out
dec
pop
ficoms
and
scas
mov
repz
pop
adc
inc
in
pushf
sub
cmpsb
push
sahf
je
jns
fadds
ds
mov
enter
sbb
call
je
add
test
les
dec
andl
jp
mov
jbe
andl
pop
js
cmpsb
jecxz
push
je
adc
mov
sbb
sti
sub
lahf
jp
fisubrl
push
jge
mov
jle
mov
outsb
loope
repz
aas
fsubs
mov
xchg
sbbb
stc
bnd
dec
ds
mov
fcoml
inc
sbb
lahf
lds
dec
lock
mov
pushf
adc
jo
bound
cld
loopne
lcall
mov
sbb
mov
xchg
push
sti
es
mov
clc
aad
call
insl
and
sbbb
pusha
pop
test
mov
pop
pop
jbe
xchg
or
jne
pop
sahf
pop
mov
in
jmp
sub
test
sbb
repz
gs
mov
clc
imul
sbb
lock
sti
and
add
mov
dec
sbbl
push
shll
in
jnp
dec
xchg
fldenv
fwait
pop
scas
pop
pusha
inc
outsb
clc
pop
pop
pop
add
filds
mov
sbb
lods
jecxz
loop
sub
jge
aas
cmp
inc
mov
movsb
xchg
out
dec
jg
scas
sahf
stos
rcrl
xor
outsb
roll
mov
inc
fsubr
sahf
loopne
out
push
clc
fldl
loop
jg
sbb
cld
adc
rcrl
ret
push
sbb
lret
mov
les
adc
adc
xor
mov
dec
cwtl
imul
or
aaa
das
data16
pop
pop
ds
pop
mov
icebp
bound
ret
mov
ret
jae
nop
aad
fsubr
in
inc
pushf
nop
imul
in
mov
sti
xchg
pop
xor
roll
inc
inc
jg
int3
outsl
in
sbb
sub
push
fistpll
mov
imul
shlb
pop
xchg
or
popa
lahf
aas
cltd
jl
lock
loop
sti
add
adc
push
jae
orb
out
fmuls
mov
ficompl
cli
xorb
mov
push
arpl
out
fwait
jnp
sub
call
es
nop
mov
dec
into
or
jb
in
fmull
sbb
int3
mov
das
aad
mov
sbb
cmpb
mov
mov
repnz
mov
xchg
scas
cmp
shlb
pop
repz
dec
mov
sbb
mov
push
sub
aas
dec
sahf
lds
or
cwtl
movl
cmp
into
jp
std
stos
sti
loope
ja
mov
cltd
mov
lds
push
cwtl
or
and
push
xchg
jnp
push
sti
imul
shll
add
in
add
xchg
ljmp
je
pop
ja
aas
push
mov
mov
addb
lahf
cmpb
outsb
jle
or
push
imul
mov
push
mov
adc
xchg
ret
xchg
pop
adc
cmpsb
mov
cmp
xchg
sbb
out
inc
mov
sbbb
nop
jge
test
sbb
lahf
int3
jl
out
lret
push
pushf
mov
dec
and
cmc
mov
fadds
cs
inc
jbe
pop
add
std
cmp
rcll
shrl
scas
stc
pushf
aaa
mov
push
xlat
scas
jl
xor
fcomps
xchg
sbb
inc
and
pop
xchg
cli
mov
mov
in
sbb
dec
xor
sbb
push
cmp
mov
sbb
mov
aas
cli
insb
cld
add
scas
cs
cmc
jns
fdivrl
xor
stos
movsb
jg
mov
cmp
ficomps
inc
dec
cmc
roll
jp
and
sti
fisubrl
adc
mov
add
inc
mov
and
fistpl
testl
jae
mov
inc
mov
xchg
jg
je
jp
xchg
adc
jg
jns
incl
pop
scas
stos
pusha
mov
mov
es
mov
cwtl
outsb
mov
dec
fcoml
sub
cmp
leave
mov
shlb
pop
popa
jmp
fdivl
sub
sub
in
dec
imul
test
jge
cmp
std
pop
adc
xchg
sbb
push
lods
cmpsb
iret
int3
fiaddl
loopne
notb
xchg
sbb
scas
jnp
dec
cld
icebp
sub
mov
int
push
jle
pop
xorl
or
in
mov
cmp
lods
pop
loope
push
dec
repnz
pop
test
cmp
push
mov
inc
push
out
mov
mov
ljmp
cmp
sub
movsl
repnz
cltd
sti
iret
mov
jmp
bound
out
js
mov
mov
and
cli
cmp
jnp
pushf
sub
mov
ror
arpl
das
icebp
fildl
in
cmp
inc
arpl
lret
dec
jns
sahf
cmp
and
push
scas
pop
sub
cmpl
lcall
cmc
sbb
rcrl
pop
decb
dec
add
aam
and
popf
sub
cld
push
inc
fsubrs
dec
in
cmp
nop
ret
xor
das
pop
sbb
push
pop
out
popa
fxch
lret
adc
push
stc
add
test
fcmovnb
ds
je
dec
je
in
insb
mov
pop
or
xchg
pushf
pop
pop
add
call
mov
into
ljmp
div
mov
cmpsl
sahf
and
push
mov
lea
jbe
jl
cmp
and
lret
test
ret
stos
jmp
mov
shlb
and
nop
jnp
mov
out
lret
pop
inc
sbb
pop
mov
sbb
cmpsl
add
aad
xchg
sub
loop
sti
cs
sub
pop
lcall
cld
jle
sbb
pop
cmp
test
mov
mov
pop
and
lock
ja
movsl
outsl
hlt
cmp
js
in
sub
pop
sbb
or
jle
out
push
mov
push
jnp
or
stos
xor
cli
sub
popf
mov
jle
mov
mov
cltd
pop
cmp
sbb
lea
add
clc
fs
loope
dec
out
test
pop
cmp
xchg
sbb
jecxz
jae
lret
mov
inc
mov
mov
fstpl
xor
pop
decb
push
xor
cmp
pop
push
lds
sbb
inc
iret
fisttpll
mov
adc
push
xchg
fcoms
push
int
push
in
add
xchg
cmpb
fdecstp
pop
das
clc
gs
pop
jecxz
cmp
jle
test
pop
test
push
sub
cld
cmc
lods
mov
ja
imul
or
sti
cltd
loopne
cwtl
lea
in
je
jg
or
pop
lret
push
pop
mov
or
sub
shr
bound
sub
pop
shl
push
test
sub
jle
ret
dec
pusha
xchg
sti
and
ret
fwait
je
pop
cmc
lods
lea
imul
into
adc
xchg
lock
cwtl
int
cmp
cmc
inc
mov
xchg
cmp
fcoml
mov
inc
scas
cmp
ror
add
nop
daa
push
notl
hlt
sbb
cmp
push
ljmp
mov
in
push
jbe
loopne
aas
adc
mov
xchg
out
sahf
dec
scas
inc
movsl
sbb
add
cltd
pop
mov
leave
push
jae,pt
dec
mov
cmp
sti
and
push
nop
js
sti
lret
sbbl
jo
mov
ss
or
lods
das
jg
imul
mov
mov
sbb
cld
mov
mov
in
mov
hlt
cwtl
mov
mov
dec
hlt
or
sahf
aas
cwtl
mov
add
arpl
pop
mov
dec
mov
test
dec
pop
pop
lds
arpl
leave
clc
mov
jo
nop
mov
sahf
add
jnp
xor
loope
pop
roll
imul
mov
pop
in
mov
dec
mov
mov
shlb
fwait
stos
sbb
lret
lea
lret
sbb
icebp
clc
cmp
mov
leave
mov
fdivl
or
pop
int
pop
sar
lret
int3
mov
adc
xchg
ljmp
jb
adc
sbb
xor
aaa
orl
xchg
push
jmp
cmp
fdivrp
fnsave
cmp
xor
jno
psadbw
pop
mov
stc
loope
pop
pop
ret
inc
fildl
jl
dec
mov
fwait
adc
jge
test
mov
sbb
jmp
sbb
cmp
stos
mov
mov
in
adc
out
inc
mov
icebp
jb
add
in
xchg
mov
scas
and
mov
mov
lea
bts
pop
pop
call
push
push
jo
add
pop
scas
mov
mov
mov
sbbl
cvtdq2ps
popa
push
mov
sbb
in
mov
cmpsl
lcall
int
int3
xchg
cmp
pop
sbb
insl
push
mov
jne
push
xchg
sbb
gs
fcompl
leave
fwait
xor
js
cmp
cld
mov
rcrb
into
pop
rol
int3
int3
loope
sbbb
xor
cmp
mov
sub
xchg
pop
push
aam
mov
orb
mov
int3
push
push
xchg
addr16
mov
jle
fcomps
mov
and
js
ljmp
jne
enter
into
stos
loope
mov
or
mov
adc
xchg
ja
int
push
pop
sbb
cld
xor
hlt
fwait
add
mov
push
testl
add
notl
fwait
shll
xchg
call
push
xchg
cmp
sub
mov
and
andl
cmp
cmp
ret
cwtl
adc
cli
cwtl
cmc
fninit
mov
inc
call
sbb
push
pop
ret
mov
add
roll
sbb
aaa
or
int3
loope
bsr
lcall
xor
pop
pushf
jge
lock
sub
cltd
dec
out
aaa
enter
lea
imul
std
dec
sub
in
ror
fistl
int3
leave
fcompl
jle
xchg
mov
mov
push
jle
scas
test
push
push
push
mov
loop
cmp
and
xor
ret
cmpsl
pop
inc
insb
dec
jl
fisubl
adc
dec
sub
cmp
mov
adc
jge
fsubl
mov
std
ja
aas
lods
pop
dec
scas
mov
sub
push
outsl
sahf
jg
mov
mov
jae
adc
pop
sbb
cmpb
and
pop
mov
loope
jo
cs
shlb
fcoms
test
icebp
dec
xchg
jnp
dec
ja
cltd
fdivr
mov
cwtl
mov
or
test
push
jle
xor
push
flds
pop
or
mov
mov
cmp
insl
stos
jmp
in
sbb
cld
loop
add
fcoms
dec
fldenv
xchg
rclb
and
lcall
push
mov
jne
cmc
repz
dec
xchg
pop
pop
cmp
jle
mov
int3
enter
ficoml
mov
xor
mov
or
fstpt
cmp
clc
inc
test
lcall
sub
jmp
or
cli
inc
mov
fcoml
add
adc
lahf
sub
out
pop
in
loope
fcompl
ret
mov
sub
lds
xchg
js
adc
inc
pop
mov
mov
mov
inc
stc
push
pop
mov
and
jp
pop
cmp
cmp
mov
movsb
pop
add
or
mov
mov
jnp
fldcw
jge
incl
sbb
mov
mov
lods
or
xlat
cltd
fnstenv
adc
push
mov
add
sub
xor
shll
inc
mov
fildll
std
imul
jns
dec
sbbl
xchg
jmp
fisttpll
push
out
flds
icebp
out
ds
testb
js
sti
jecxz
mov
fstpt
jecxz
cmp
ja
fdivp
push
xor
lret
jg
push
mov
mov
cs
sti
mov
sub
adc
push
pop
adc
neg
mov
flds
stos
mov
imul
call
incl
mov
sti
mov
jg
jmp
ss
dec
cld
xchg
js
jp
clc
outsb
jbe
inc
cld
and
nop
jg
ret
pushf
xor
and
dec
mulb
imul
cwtl
push
cs
cmp
hlt
push
lahf
imul
shlb
mov
mov
stos
cmp
sti
scas
sbb
pop
adc
pop
insl
pop
dec
cwtl
inc
or
xchg
ret
cmp
rcrl
sbb
mov
adc
mov
cmp
rcr
shll
fdivs
movsl
repz
std
mov
xchg
cmpb
ds
nop
adc
lock
cli
fsubrs
add
movsb
repz
loope
mov
ds
and
hlt
push
cwtl
ds
xor
orb
ljmp
push
sbb
rcrb
pop
nop
lock
pop
push
mov
mov
scas
aas
int3
dec
repz
les
push
dec
inc
pop
or
les
xor
ds
in
inc
sti
cmpl
sbb
jmp
xchg
sub
pop
xchg
jecxz
js
sahf
out
fcompl
iret
stos
xor
cmp
popf
ds
cmp
sub
jle
cltd
adc
lret
mov
inc
xor
jne
cmpsl
aas
pop
cs
pop
fimull
sub
jns
test
ror
mov
cmp
ss
sbb
pushf
and
sub
fwait
cli
adc
sub
lcall
or
enter
movsb
fistl
xchg
mov
inc
outsb
fmuls
jl
arpl
dec
mov
cmp
mov
daa
adc
or
or
sbb
adc
jecxz
daa
mov
mov
adc
lods
add
cmp
pop
mov
arpl
fisttpll
fwait
cmc
in
imul
mov
leave
push
sub
mov
inc
mov
jb
and
jle
mov
fldt
fwait
dec
sub
cmp
lds
add
hlt
and
inc
es
lock
pop
decl
arpl
enter
jne
mov
xlat
sbb
xchg
sbb
inc
mov
jbe
jl
scas
aas
xlat
push
cli
pop
jb
ja
scas
movsb
mov
fisubs
or
ss
pushf
cmp
mov
mov
pop
sahf
jmp
mov
mov
sub
lock
sbb
fwait
in
loopne
sti
loop
fwait
imul
es
shlb
dec
sbb
mov
js
mov
xchg
sarb
xchg
and
in
shlb
ds
insb
pushf
lret
sbb
std
sbb
jmp
or
rorl
roll
sbb
fmull
cmp
nop
sti
dec
mov
mov
mov
testb
iret
mov
es
sbb
sub
push
fbstp
xchg
outsb
mov
add
enter
push
dec
mov
adc
push
cmp
fucomi
pop
mov
lea
push
mov
mov
sub
mov
cwtl
pop
lret
add
cmp
mov
out
sbb
mov
pushf
push
pop
sbb
mov
das
pusha
sbb
cmp
inc
mov
call
insl
jle
clc
outsl
push
jp
ret
divb
sub
or
sub
mov
clc
mov
popf
mov
mov
adc
inc
mov
push
or
xchg
dec
mov
clc
sbb
add
adc
popa
nop
add
js
jg
xchg
repz
xor
push
test
pop
xor
orb
out
mov
xchg
sub
inc
jae
sbb
dec
notb
shll
add
push
nop
lret
out
jl
pushf
cwtl
aad
das
jmp
push
mov
inc
fsubrl
push
leave
movsl
mov
xor
jbe
out
stos
repz
in
pop
jp
fwait
scas
aas
roll
int3
cmpsl
dec
mov
int3
xor
fwait
cwtl
scas
popa
dec
sbb
cli
mov
adc
and
cmp
push
into
mov
mov
cmpsb
or
cli
sbb
in
mov
mov
popf
clc
test
fisubl
mov
jmp
aam
divl
ljmp
jb
mov
cmp
mov
mov
test
lret
call
push
fwait
cmpsb
inc
out
sbb
cmp
mov
cmp
and
clc
cmpsl
out
insb
add
jp
out
fildl
int3
outsb
test
xlat
rcrl
and
pop
jb
cmpsb
sub
pushf
jl
fcomps
int
sar
out
clc
insl
cltd
pushf
add
mulb
adc
mov
jp
jmp
mov
add
jae
or
enter
jmp
lahf
jo
dec
adc
fidivl
idivb
out
into
mov
jle
jg
bound
iret
or
inc
test
pushf
js
xor
pop
xchg
jg
dec
pop
mov
and
jmp
int3
aas
orl
into
stos
in
clc
mov
addr16
xor
mov
int3
fwait
gs
shrb
cmp
cmpsb
add
test
dec
cmp
incl
inc
add
adc
inc
mov
dec
sbb
ficompl
mov
movsb
pusha
repz
mov
rcrl
pop
xchg
stos
jnp
das
lret
mov
call
fdivs
xchg
mov
test
sbb
add
mov
mov
mov
mov
mov
enter
aas
mov
lds
aam
lock
dec
loope
mov
and
mov
psllw
mov
xor
dec
mov
loopne
or
inc
loopne
mov
adc
orb
mov
aas
addl
mov
add
aas
fsubrl
iret
jae
fwait
mov
xchg
or
movsl
jnp
pop
jae
or
call
jns
pop
clc
sbb
push
negl
mov
dec
stos
lret
mov
ret
incl
shll
and
mov
cmp
push
leave
jmp
adc
push
inc
fsubrs
lods
aaa
inc
adc
in
or
out
pop
push
sbb
sbb
xor
cld
sub
cmp
jecxz
cmc
test
jge
xchg
push
adc
mov
jg
subl
inc
test
sub
jg
pop
movsl
into
mov
jno
inc
sahf
inc
jg,pt
lea
sbb
enter
mov
adc
std
fistps
orl
mov
aam
int
xchg
mov
jp
mov
or
adc
in
mulb
ds
in
adc
dec
shrb
into
in
out
sbb
std
or
xchg
jnp
mov
test
testl
mov
aaa
sbb
adc
shlb
xchg
into
sbb
or
addl
jb
aam
dec
cmp
out
lods
sti
cli
and
shrb
inc
mov
aas
dec
ficomps
jl
dec
push
lods
cmp
add
xor
fs
cmpsb
sti
loope
out
daa
jecxz,pn
addr16
ret
and
jp
push
mov
mov
mov
inc
xorb
cmpsb
jno
daa
test
xchg
movsb
test
or
into
das
bound
out
jnp
ss
pushf
sbb
jge
cmp
sub
scas
out
mov
mov
xor
mov
jnp
push
outsb
sbb
sbb
shrb
inc
pop
inc
sbb
cltd
mov
pop
int
int
push
shlb
cmpsb
jne
sub
outsb
test
ja
and
insb
and
pushf
call
mov
pushf
adc
push
scas
fstps
ret
sbb
imul
or
dec
mov
xchg
aas
cmp
outsl
mov
dec
pop
or
filds
jl
mov
fisubrl
mov
push
xor
mov
cmp
mov
pop
push
lret
xor
cld
outsl
nop
lods
ja
mov
push
inc
es
out
clc
mov
sub
inc
fisttpl
cli
cltd
jl
int
xchg
hlt
insb
cmp
xor
call
cli
add
and
xlat
sbb
in
sbb
mov
jg
push
mov
fiaddl
push
bound
mov
xor
sub
and
out
sbb
mov
push
ds
outsb
popf
int3
mov
adc
mov
imul
repnz
jno
sub
into
mov
fs
pop
pop
jns
add
adcb
xor
mov
sbb
daa
ss
jl
jl
pushl
in
loopne
sbb
push
jns
pop
incb
pop
call
gs
pushf
mov
dec
mov
in
pushf
inc
jae
shr
fxch
pop
jns
jecxz
xchg
mov
loope
lret
cmc
pushf
cmpsl
in
scas
mov
or
cmpsl
pop
lret
pop
addr16
push
jle
jp
push
adcl
movsb
ret
xor
mov
aas
cmc
icebp
out
xchg
das
call
mov
ret
nop
loopne
int3
or
pushf
stos
gs
and
cli
xchg
fmulp
xchg
movsb
mov
mov
gs
pop
cs
xchg
clc
fsubrs
out
cmp
inc
pusha
shll
leave
aas
cmp
mov
loopne
cwtl
imul
inc
pusha
ret
cs
fldenv
inc
add
sub
data16
xchg
and
sti
lahf
cmp
mov
jbe
pop
mov
push
cmp
mov
clc
les
pop
daa
mov
shrb
inc
and
cmpsb
inc
cmp
in
jg
sbb
cld
fadd
xchg
or
xorl
test
aas
jp
test
sti
jno
das
testl
cmp
xchg
orb
adc
adc
sub
or
arpl
mov
inc
xchg
fcoml
popf
and
mov
and
pop
cmpsb
aas
in
pop
addr16
mov
and
lret
clc
cmpsb
mov
lods
outsb
imul
cwtl
rcrl
adc
icebp
and
loope
xchg
fwait
push
in
mov
out
call
pop
jno
mov
and
test
cwtl
cmp
cmp
outsb
popl
and
into
cmc
fsubs
in
leave
fistpll
test
and
scas
pushf
loope
xor
lds
iret
pop
rcrl
subb
mov
loope
sbb
rclb
jo
inc
ds
aam
pop
cwtl
mov
lds
xor
jecxz
cwtl
mov
les
lret
fbstp
lods
outsb
mov
shr
or
lds
cld
fimuls
movsb
cmp
lds
cmpsl
iret
sbb
or
mov
arpl
mov
imul
fwait
std
xchg
xchg
fstpl
push
das
pop
push
mov
mov
imul
mov
fdivs
push
out
jbe
mov
sub
or
cmp
adc
or
mov
mov
arpl
mov
lods
mov
sub
sbb
jo
push
pop
jmp
xchg
cmpsb
insb
int
jbe
xor
xlat
push
mov
and
add
jno
cwtl
inc
xchg
sub
sub
mov
fldenv
arpl
jge
mov
es
mov
iret
aas
sub
sbb
dec
mov
adc
jb
pop
cwtl
stos
xchg
imul
cmpb
pop
jmp
sbb
xchg
sti
fimuls
mov
mov
pop
and
pop
sbb
jecxz
sbb
std
ds
adcl
sub
push
jl
jnp
imul
inc
push
cwtl
mov
mov
jg
pop
pop
nop
ja
or
stos
or
adc
ficomps
xor
mov
sub
call
jno
push
cmp
ret
sahf
sbb
push
and
xor
or
wrmsr
mov
pop
shll
xor
xchg
xor
aaa
cmp
push
add
add
dec
pushf
xor
cmp
mov
inc
xchg
movsl
sbb
mov
cli
fisubl
mov
ds
push
testb
mov
in
push
inc
out
or
jl
sub
mov
add
cltd
xlat
test
mov
mov
pop
icebp
movsl
pop
fdivs
lods
pop
fsub
lret
leave
pop
call
fsubp
call
jl
cmp
adc
mulb
jg
imul
push
leave
mov
jp
mov
fwait
sub
xchg
nop
mov
mov
scas
js
xchg
sbb
cmpb
xlat
js
jns
std
in
adc
cmp
scas
jmp
aas
test
dec
mov
fdiv
nop
dec
pop
and
xchg
jns
fisttpll
aas
ds
gs
sbb
or
xlat
xchg
stos
sti
nop
adc
jnp
pop
pusha
add
int3
and
rolb
sbb
cltd
aam
adc
push
inc
nop
mov
test
xor
xor
ja
leave
fcoms
sub
sbb
sub
lret
adc
jl
stc
sub
adc
push
pushf
push
mov
mov
ss
push
inc
mov
sti
lcall
stos
fdivs
push
mov
pop
fildl
out
sbb
sbbl
mov
and
push
adc
cmp
outsl
cmpsb
addl
movsb
lret
mov
sbb
xor
inc
jmp
scas
out
pop
pushf
xchg
and
sahf
roll
clc
mov
mov
loopne
jae
call
out
out
sub
jl
aas
mov
inc
push
jecxz
mov
nop
and
push
out
push
adc
sbb
mov
pop
in
xor
push
mov
dec
mov
mov
inc
into
mov
out
iret
jle
fildl
sbb
xchg
mov
insb
lret
pop
fdivrl
mov
push
and
sbb
ja
sbb
cmp
lahf
dec
sbb
in
add
imul
cmp
jb
mov
lds
push
push
push
sbb
outsl
and
cld
cmp
sub
cmpb
clc
mov
js
out
dec
pop
movsb
mov
or
xchg
adc
jecxz
jae
test
lret
scas
aas
add
rorl
lds
dec
jbe
inc
aam
jg
cmc
jecxz
mov
cld
pop
fdivrp
in
xchg
pop
mov
out
pusha
jge
rol
hlt
sbb
aas
sbb
fldl
mov
xchg
pop
push
pop
sub
jl,pt
aam
mov
push
les
sub
mov
jp
add
xchg
in
aam
rorb
sbb
push
mov
pop
mov
imul
jecxz
insl
enter
hlt
movsl
pop
in
cld
mov
fdiv
jno
dec
xor
and
ret
mov
xchg
xor
jle
pop
scas
sub
mov
pop
mov
enter
adc
jl
sbb
or
fstpt
mov
inc
jle
jbe
sub
and
mov
cli
imul
push
inc
repnz
jmp
pop
jmp
inc
lods
aas
stos
jle
xchg
jbe
adcb
sbb
mov
cli
cmp
xor
cmp
sub
add
or
mov
lods
mov
jecxz
popf
test
lcall
and
imul
xor
and
lods
sbb
aaa
out
mov
loop
sbb
jmp
int
xlat
lcall
cli
lret
or
mov
cmp
and
ds
fdivl
out
mov
sub
dec
pop
cmp
or
aad
mov
pushf
sarl
sbb
push
dec
adc
lret
pop
fucom
adcl
mov
aam
loope
pop
mov
jmp
scas
mov
add
and
mov
out
push
imul
scas
ret
cmp
ds
inc
push
or
mov
pop
pop
test
rclb
rcrb
rcrb
sub
adc
mov
inc
or
dec
addr16
push
xor
push
and
test
out
push
stos
cmp
dec
vunpckhps
sbb
cmp
ret
pop
out
xchg
sbb
add
add
loope
jno
cmp
sahf
cmp
push
pop
adc
cs
cli
and
dec
sarl
jo
or
cmp
mov
mov
lcall
paddsb
jae
sti
and
inc
sbb
popa
lret
lret
sbb
add
add
mov
xchg
sbb
gs
fdivl
hlt
push
cwtl
sti
scas
sbb
ja
ss
push
popa
test
ljmp
int3
cmp
xchg
adc
daa
call
mov
insb
inc
jb
cli
enter
and
enter
ljmp
mov
xchg
mov
cld
sub
pop
xor
mov
or
mov
pop
jle
xchg
inc
or
pop
mov
mov
ret
adc
dec
mov
inc
dec
xor
cltd
and
mov
les
sbb
cmp
jecxz
repz
or
lods
xor
sarb
fwait
int3
pop
mov
movsb
add
or
movsb
mov
adc
mov
dec
test
shll
test
push
lods
sub
mov
cmp
test
cld
pop
fwait
jb
mov
fsubrs
popa
xchg
pop
clc
mov
sub
ds
test
xor
pop
fcomp
test
dec
cmp
pop
dec
mov
push
loopne
test
push
fwait
movsb
xchg
sbb
mov
adc
mov
popa
iret
xor
aad
repz
pop
sti
pextrw
cltd
ja
cmp
pop
dec
dec
jg
jp
pop
enter
fbstp
cmpsb
loop
sbb
fistpll
pusha
xchg
mov
dec
dec
xor
aas
jle
pop
cmpsb
lea
push
rcr
xchg
data16
xor
sbb
mov
je
cltd
inc
jge
ds
push
fimull
mov
pop
mov
dec
adc
popf
lods
lcall
jb
mov
insb
insb
jmp
cltd
out
xchg
dec
cmp
sub
sbb
test
mov
aad
mov
out
loopne
sbb
jp
xchg
xchg
and
mov
frstor
mov
adc
mov
adc
pop
cmp
cwtl
addr16
pop
fistpl
pop
bound
jg
cmpsb
jg
pop
adc
dec
nop
cmp
test
and
sti
popa
aad
test
lahf
pop
mov
inc
or
sub
jg
cmp
pop
and
sahf
mov
jo
push
jmp
add
xchg
insb
fcompl
sbb
fwait
mov
lret
xor
mov
cmp
leave
jle
testb
cmp
sbb
mov
jbe
dec
and
or
and
outsb
cmpb
xlat
jno
cwtl
scas
jb
std
sbb
xchg
mov
xor
xchg
rol
mov
arpl
jno
xor
mov
fsubrs
fmull
jmp
lahf
mov
cltd
cmp
or
loop
hlt
mov
pop
push
pop
xchg
mov
ret
fisttpll
mov
sbb
call
lds
rcr
mov
xor
mov
cmc
jbe
xor
pop
dec
inc
test
or
sbb
sti
sahf
sbb
cld
lret
sbb
in
inc
popf
rorl
mov
xchg
jo
xchg
sbb
inc
push
jg
mov
jae
cmpl
mov
data16
enter
push
mov
test
cli
cld
sbb
pusha
push
mov
scas
pop
in
enter
mov
cmp
mov
xchg
pop
jle
cmp
cwtl
mov
jne
iret
pop
ljmp
pop
js
out
aad
sbb
cmpsb
push
add
insl
sbb
fsubrl
jg
jge
fadds
mov
jnp
mov
xor
pop
test
xchg
or
mov
pop
jle
sub
dec
stos
sbb
pop
xor
lea
jle
loopne
jmp
test
xchg
mov
outsl
jmp
pop
pop
stc
gs
cmp
sbb
icebp
leave
aad
mov
es
adc
cmpl
movsl
sbb
ror
pop
mov
popf
sahf
aas
mov
mov
pop
mov
sbb
mov
insl
pop
jp
or
dec
pop
mov
daa
shlb
pushf
cld
and
daa
or
mov
cmp
mov
jb
sbb
jle
dec
jle
movsb
dec
mov
fwait
iret
or
xchg
mov
push
lods
mov
fwait
jo
jecxz
fisubrl
cmpl
inc
out
inc
aas
fisubs
fsubl
lds
fwait
jnp
inc
ljmp
pop
adc
jmp
jo
shrb
jns
inc
fiaddl
xchg
lahf
stc
fcompl
add
dec
mov
out
lea
mov
and
mov
pop
out
clc
orb
pop
mov
jnp
sub
aaa
cmp
pop
ds
cmc
xor
outsb
push
je
outsl
call
ljmp
xchg
mull
mov
jns
jg
fisubl
out
push
mov
sbb
cmpb
push
js
cli
faddl
mov
int
pop
or
jl
and
fmull
mov
xorb
addr16
mov
dec
sub
ja
popa
cli
pop
lods
mov
sub
orl
movsl
sbb
mov
and
hlt
inc
andl
dec
jmp
call
cmp
int3
sbb
adc
push
movsl
imul
mov
pushf
jbe
mov
enter
sbb
add
push
inc
jg
loop
push
push
adc
mov
mov
cld
sbb
imul
cwtl
sub
movsb
dec
pop
inc
pop
pop
mov
sub
imul
leave
movsb
aad
inc
dec
push
stc
add
dec
in
cwtl
orl
sbbl
shl
orb
dec
ljmp
pop
mov
ret
imul
xor
pushf
mov
aad
jge
sub
jle
dec
and
jp
add
mov
lret
xchg
mov
push
cmp
cli
push
rcl
adc
les
sub
pop
shll
pop
ds
jnp
jbe
mov
xor
rclb
mov
pop
xchg
sub
test
xchg
mov
pop
inc
filds
into
mov
ss
xor
lss
cwtl
jle
aas
xchg
cltd
mov
cmp
jne
sbb
ja
push
pushf
sub
jmp
mov
loope
in
sbb
cmc
shll
jg
sti
cmp
pushl
out
and
dec
jp
mov
aaa
lods
pop
xchg
in
or
scas
jmp
add
repz
fdivl
test
dec
loopne
sti
outsb
jmp
clc
push
add
dec
stos
repz
cmp
mov
sbb
cmp
jp
les
jb
pop
rorl
ljmp
iret
out
out
out
mov
ficoms
add
cmp
and
jmp
jl
xor
test
sbbl
cmp
pushf
cli
cwtl
jnp
js
and
fistps
mov
push
pop
sub
pop
cmp
add
xchg
adc
test
into
stos
sti
sub
and
push
lock
test
insb
es
lcall
cmp
adc
and
pop
ficomps
dec
jp
fnstsw
push
add
jg
mov
pushf
mov
xchg
je
mov
dec
xor
mov
cmp
xor
pop
sub
mov
int
pop
btc
cmpsb
test
cmp
sarl
jle
mov
mov
and
mov
lea
roll
push
ret
add
pop
push
fcmovu
int3
fcoml
lock
pushf
mov
iret
inc
sub
sub
and
cmp
pushf
cmp
int3
ljmp
clc
cwtl
aas
mov
aas
pushf
jno
ficoms
scas
test
jg
jge
cmpsl
lock
mov
cmc
lea
lods
pop
xchg
pop
mov
fnstcw
int
pop
out
out
add
add
imull
jns
orb
rorl
pop
pop
scas
shll
sbb
xchg
lret
push
stc
shlb
js
adc
sbb
xchg
fiadds
cmp
mov
test
and
dec
push
repz
adcb
mov
movsl
ret
rorb
push
fldl
movsl
push
jg
rclb
adc
int3
outsl
mov
sub
jb
sbbb
movsl
cmp
dec
inc
add
jno
js
dec
cmp
in
call
cltd
sbb
inc
cmp
xor
fwait
out
pop
cmp
jp
sbb
cwtl
rorb
ds
mov
imul
adc
xchg
or
arpl
mov
xor
inc
fsubrl
jmp
mov
inc
xchg
aad
pop
dec
jle
pop
faddl
xor
sbb
repz
ds
in
pop
pop
push
dec
inc
xlat
mov
push
sub
lock
addb
push
pop
pushf
nop
fwait
and
addl
addr16
mov
jne
adc
les
xor
mov
and
sbbb
and
lahf
repz
sahf
mov
xchg
nop
fldt
mov
xchg
outsl
icebp
imul
cmpsl
inc
cwtl
aas
roll
aam
in
cli
mov
pop
nop
sbb
out
jle
pop
mov
dec
adc
dec
out
lret
pop
jge
pop
or
aas
sbb
into
das
loop
out
xchg
mov
ds
dec
inc
xchg
dec
ja
and
jb
xchg
mov
shl
pop
fidivs
or
mov
mov
int
xor
xchg
aas
mov
push
incb
mov
lds
popa
lods
jnp
cmp
aad
pop
push
fcoms
jmp
sbb
es
in
rolb
push
pop
sub
stos
sbb
aaa
fidivs
sbb
mov
dec
in
fcom
into
outsl
outsb
mov
lret
dec
cld
sbb
mov
xor
subl
enter
enter
and
or
jle
ffreep
sub
cmp
sbb
ret
lods
inc
fadds
fstpt
loop
cwtl
pop
leavew
movsb
push
or
dec
loop
movsb
jg
mov
mov
aaa
mov
fsubp
fmuls
add
jle
in
mov
lods
gs
add
sub
scas
add
and
rorb
fists
cs
xchg
sti
ljmp
mov
lock
sbb
lds
cwtl
pushf
pop
movsl
jbe
mov
daa
jp
mov
mov
iret
in
xor
jge
pop
hlt
sbb
cmpsb
jl
pop
add
lahf
stos
push
lea
xchg
pop
xchg
cmp
mov
xchg
add
decl
add
mov
push
cmpsb
out
push
out
jmp
std
andb
cltd
ror
mov
movb
into
rol
jp
sti
or
cmp
xor
aas
cmp
scas
xchg
cmp
mov
popf
sti
jno,pn
sbb
pushf
in
das
xchg
cmp
rorb
jne
mov
mov
cmp
pop
fisubs
sub
out
fdivrs
mov
mov
inc
addb
mov
cmp
inc
int3
and
rolb
mov
cmpsb
fcompl
aas
ret
iret
retw
dec
jno
xchg
mov
sahf
xor
pop
idiv
outsb
mov
aad
rcr
add
data16
inc
nop
ja
aas
pop
push
lea
or
imul
or
lods
incl
jg
addr16
lods
cmp
xchg
arpl
popa
arpl
pop
mov
dec
insl
xor
cmp
jmp
xchg
daa
push
sbbl
cld
addb
xchg
mov
scas
xchg
fidivl
cmp
fisttpl
xor
pop
adc
popf
mov
lahf
int3
xor
xchg
adc
fldenv
pop
scas
add
jle
cli
xchg
add
in
ror
push
jno
ret
mov
or
in
ret
or
pop
rclb
push
jg
aad
xchg
jl
jg
jnp
lock
lret
cli
xor
cld
aam
fxch
loopne
adc
outsb
std
inc
sbbb
rcrl
mov
push
mov
call
fstpt
xchg
xchg
adc
sbb
loop
lret
lret
xchg
push
aas
jp
sbb
sar
xor
push
cld
sti
mov
inc
ret
or
sub
ret
fmul
cmc
xor
jns
pop
push
ds
sbb
jg
xchg
rcrl
xor
mov
pop
imul
fstp
xchg
out
sahf
ja
shr
out
pop
scas
loope
sbb
ljmpw
lcall
test
and
and
fcmovnu
mov
orl
jge
sub
mov
xchg
imul
lcall
xchg
fistpl
lret
pop
xlat
push
push
roll
dec
xchg
xchg
loope
loope
fldt
pop
pop
js
rcll
in
mov
icebp
inc
shll
or
es
push
mov
std
jge
jo
sbb
jno
ss
mov
jns
pop
fadd
stc
mov
mov
xchg
xlat
push
aas
fistps
aad
outsb
pop
ljmp
sbb
stos
pop
push
into
push
adc
dec
aam
aas
clc
push
adc
jmp
or
push
mov
ljmp
rorl
jno
dec
out
xor
loopne
repz
scas
mov
xchg
add
mov
xchg
and
aas
xchg
sti
ljmp
cmp
add
jge
cli
je
mov
fistpl
push
aam
mov
mov
dec
pop
testb
mov
mov
adc
pop
inc
popf
pop
mov
fstps
loope
fcomi
add
cmpb
movsb
lods
dec
sbbl
cmc
xlat
xor
nop
or
inc
mov
jp
mov
stos
xchg
sub
mov
mov
daa
pop
sbb
mov
addb
sub
pushf
ret
mov
push
aas
cmc
adcb
movsb
mov
or
adc
test
or
dec
mov
loopne
inc
in
jl
mov
add
or
jg
pop
imul
dec
cli
mov
cmpsl
subl
xchg
add
sbb
inc
stos
movsl
mov
add
sbb
lret
and
sub
popa
rol
cmc
push
outsl
addl
js
xchg
in
test
scas
fsubr
ret
fdivrp
push
ret
adc
shrw
call
jb
movsb
jmp
sub
repnz
je
cmp
call
cmpsb
dec
cmp
add
adc
hlt
xchg
sub
and
insl
ljmp
mov
dec
xchg
jb
xchg
xchg
xchg
leave
sbb
sbb
push
push
cmc
fadds
xor
fstps
sbbb
insl
dec
testb
sbb
test
pushl
jnp
nop
popa
les
cwtl
insb
fidivl
aam
stos
xor
cmp
push
inc
mov
mov
sbb
cli
shlb
out
sarb
fsubs
push
adc
mov
das
jl
add
push
incb
aad
mov
jnp
or
movsl
sbb
into
dec
mov
sbb
jo
aaa
lret
ljmp
mov
cli
and
fiadds
cmp
pop
lods
iret
xchg
cmp
adc
cmp
jmp
test
mov
cltd
cmp
int
cltd
pop
out
sbb
push
ja
fdiv
aad
push
jnp
xchg
fwait
out
clc
lds
cs
mov
fsubrp
lods
fistpll
in
pop
aaa
jl
mov
cli
push
pop
mov
pop
fsubrl
dec
xor
es
mov
xchg
fsubrs
cmp
stos
mov
sub
sbb
lcall
mov
jl
xor
out
scas
shl
xchg
jnp
mov
scas
dec
mov
sbb
jb
pop
lods
add
rorb
aaa
mov
test
arpl
aaa
lods
lods
test
dec
pop
inc
or
aas
push
push
icebp
fcomp
movsb
leave
mov
sub
mov
insl
fidivrs
roll
inc
jle
adcl
insb
xchg
fdivs
cmpsl
incb
rcrl
cwtl
or
std
mov
enter
rep
mov
sahf
mov
mov
aaa
test
and
inc
loope
jge
aas
loopne
mov
mov
inc
sub
shlb
pop
mov
enter
add
sbbb
popa
inc
sti
jmp
xchg
mov
pushf
jl
adc
mov
mov
inc
ja
and
mov
and
popa
imul
push
pop
add
add
mov
add
xchg
dec
outsl
in
xchg
shlb
sub
arpl
or
les
cli
gs
sahf
leavew
mov
sti
jno
stc
iret
sbb
add
negl
iret
sti
inc
sbbl
fdivrs
ss
icebp
iret
shl
fwait
push
push
in
ficoml
lods
sub
out
and
sbb
aad
addr16
shll
mov
js
les
xor
stos
sub
cmp
iret
xlat
dec
sarb
xchg
mov
inc
push
cli
cmp
mov
lods
aas
popa
xchg
adc
mov
rep
push
or
mov
cwtl
and
mov
adc
adc
xlat
mov
pusha
cmp
fildll
aam
mov
jecxz
inc
sbb
in
das
pop
inc
je
stc
cli
pop
arpl
int
jb
cwtl
and
adc
fistps
jbe
fadds
mov
sbb
sbb
inc
mov
jb
mov
add
sbb
lea
cmp
orb
pushf
ret
pushf
rorl
add
call
adc
scas
stos
lock
pop
fsubs
fimuls
pop
aam
xor
and
lret
lcall
cmp
cs
pop
scas
jecxz,pn
add
iret
pushf
out
int
sbb
fs
scas
add
movsl
or
outsb
add
jo
xchg
push
jp
cmc
scas
daa
nop
out
dec
sbb
cwtl
outsb
ret
faddl
pushl
popa
in
cld
sbb
xchg
sub
stc
pop
add
lea
push
mov
out
aas
inc
sbbl
inc
mov
cmp
jno
js
jmp
jae
jbe
fwait
push
aad
cli
popa
test
scas
idivb
sti
and
xlat
icebp
pop
pop
and
enter
pop
lcall
push
mov
sub
clc
in
das
bound
fucomp
leave
aas
sar
pop
lcall
lds
mov
inc
and
incl
ret
mov
jae
pop
xor
loop
call
push
sahf
iret
cmp
pop
test
push
push
push
repz
sub
adc
jno
dec
sub
inc
xchg
sub
stc
sbb
jno
cmp
shll
pop
mov
push
push
pop
leave
rcrl
ds
mov
pushf
pop
sub
push
cli
or
xchg
inc
stc
mov
jne
add
and
fcompl
es
xor
das
pushf
js
and
inc
jb
call
call
dec
fcmovu
sbb
cmp
test
adc
movsb
push
into
cmp
mov
xchg
ret
ficoms
xchg
pop
test
sahf
aad
fmull
adc
or
jnp
mov
jmp
lahf
xchg
mov
icebp
and
ret
sbb
mov
out
mov
cwtl
pop
pop
sub
hlt
es
jmp
outsl
jg
pop
in
mov
inc
and
pusha
fidivrs
jecxz
jg
adc
enter
test
mov
xor
and
pop
mov
mov
fidivs
nop
enter
jno
test
cs
cmpsb
stos
icebp
cwtl
sbb
sbb
push
int
jmp
rcr
cwtl
addr16
je
notb
lcall
hlt
jae
sub
enter
scas
pop
jle
push
jp
sub
jnp
aas
sub
adc
movsl
scas
pop
or
jns
xchg
cwtl
cli
mov
mov
iret
imul
loopne
xor
aas
popf
mov
mov
aas
add
insb
jp
mul
jae
pop
mov
maxps
mov
popf
loopne
pop
sahf
lahf
jnp
jecxz
xlat
clc
icebp
xor
sbb
ss
jle
pop
cmpb
ja
mov
sub
jge
insb
lret
mov
stc
pop
and
jge
aad
fiaddl
fcoms
pop
add
roll
hlt
pop
les
pop
insl
mov
js
jg
mov
fimuls
es
jnp
mov
sub
sar
fwait
sti
loope
mov
push
aad
cmpsb
inc
pop
cli
jmp
test
lcall
outsb
icebp
stos
fwait
test
stos
jnp
fxch
inc
negb
in
test
inc
mov
cld
ret
adc
test
mov
mov
jno
pop
scas
dec
cmp
gs
std
mov
push
repz
in
and
ja
cli
pushf
add
or
adc
sarl
fcompl
sub
mov
lret
mov
pop
and
cli
xchg
mov
mov
jbe
pop
popa
pop
dec
add
jmp
dec
cli
int
pushf
push
scas
rcrb
and
mov
cmpsb
jmp
aas
xor
or
mov
mov
mov
jmp
clc
add
cmp
mov
es
mov
lods
iret
jns
sub
dec
xor
cli
add
push
pop
xchg
xchg
adc
jne
xor
je
rolb
mov
pop
adc
test
pushf
and
push
insb
in
enter
stos
mov
inc
mov
insl
repz
push
iret
xchg
jbe
mov
mov
notl
mov
pop
jmp
repnz
insl
aas
out
bound
xchg
cld
addr16
mov
push
pop
mov
jle
repnz
fucomp
xchg
push
inc
lea
les
popa
insl
cltd
cmp
insl
cmp
jp
int3
and
pushl
push
inc
sahf
sahf
mov
shlb
int3
jns
inc
sti
int3
mov
push
jp
and
aam
dec
xchg
dec
aas
push
mov
xlat
fildl
cs
into
xor
mov
jnp
jns
xor
scas
jb
cwtl
data16
lods
ljmp
fiadds
aam
pushf
add
aam
iret
cltd
cmp
enter
adc
lahf
push
mov
insl
cmp
mov
fs
into
pop
in
lea
push
adc
sbb
or
out
lods
and
jns
lods
out
cmp
imul
mov
jnp
and
mov
ja
loopne
movsl
sti
cmp
subb
mov
jg
jno
es
cmp
stc
dec
je
lock
cli
sub
push
enter
cmp
fwait
cld
jle
mov
dec
pop
lods
aas
xorb
mov
ret
in
sbb
rcrl
mov
stos
xchg
jb
mov
pop
or
push
inc
mov
and
mov
mov
leave
add
mov
and
fstp
inc
dec
mov
leave
mov
loopne
cmpsb
mov
int3
pop
xchg
jb
mov
xchg
lahf
or
pop
cmc
clc
out
movsl
ret
and
mov
and
int3
jg
jle
test
and
jle
stos
dec
mov
push
adc
imul
mov
mov
vxorps
cmp
inc
mov
imul
inc
mov
lods
sbb
or
lock
sub
lock
test
sub
or
call
test
or
cmp
insb
xchg
push
or
cld
add
add
dec
lahf
push
sbb
xor
std
cmpsl
push
mov
jno
cwtl
or
mov
enter
enter
in
aas
rcrl
jbe
dec
sahf
lods
sti
in
aam
sbb
cmp
shll
jg
outsb
mov
sti
xchg
fwait
push
cmp
pop
mov
xchg
pop
adc
sub
pushf
cmp
aas
jno
jo
jle
lods
aas
pop
xchg
fcmovne
ret
pop
push
mov
les
int
mov
push
ss
sub
in
rorb
cmp
xor
and
add
rorb
rorl
pop
jae
es
jmp
pusha
lcall
mov
jg
lret
push
in
jns
mov
push
mov
or
fucomp
scas
call
push
fimuls
or
pop
mov
lret
int3
xchg
xor
dec
nop
stos
mov
repnz
cli
jo
out
outsb
rcrl
fstps
cmpsl
fwait
sub
lret
cmp
lret
pop
pop
sbbl
loop
pop
push
imul
adc
cwtl
int3
adc
cmc
in
fsubrs
cmpl
push
xor
adcl
adc
add
push
sub
fildl
and
fwait
mov
test
push
out
cmp
cmpl
rcrl
jns
scas
cltd
stos
cmp
sahf
sti
push
dec
dec
pop
das
inc
xchg
push
mov
sub
push
inc
mov
ja
cmpsl
cs
or
xchg
sub
ret
pop
mov
jp
xchg
push
test
jp
mov
mov
repz
mov
cmp
xchg
movsl
push
enter
push
mov
in
inc
jno
pop
adc
data16
test
push
inc
out
lahf
mov
lret
aas
jp
jle
out
out
pop
jae
jne
sbb
cmp
push
or
sbb
test
sub
or
mov
fmuls
incb
aaa
ret
and
jno
shl
jecxz
lret
cmpsl
shll
mov
jg
enter
out
jle
stos
dec
sub
push
jo
lret
or
in
sbb
cmpsb
adc
jle
xchg
test
sti
sub
push
adc
ljmp
push
scas
hlt
pop
cmp
dec
out
and
inc
les
fcomp
je
xor
mov
mov
sbb
push
sbb
mov
repnz
aam
mov
addl
mov
jle
push
enter
stc
add
in
movsb
cmpsl
jnp
inc
in
int
clc
out
xchg
stos
fstps
movsl
pop
inc
into
xchg
cmp
pop
ljmp
in
sahf
sbb
cli
mov
shlb
lret
adc
dec
ret
sbb
mov
pusha
cmp
pop
adc
roll
add
push
inc
cmpsl
mov
jmp
pop
adc
sbb
in
dec
adc
es
adcl
or
cli
xchg
mov
cli
enter
xor
cmp
rcr
xor
push
jbe
cli
test
xchg
out
mov
add
add
leave
jo
lods
cmp
pushf
or
fstps
mov
scas
xor
sti
sub
mov
sahf
mov
push
xor
rcr
lret
cmp
scas
push
mov
sbb
into
daa
xlat
fcomip
sub
jno
cli
mov
add
stc
addb
pop
mov
mov
or
jo
imul
pushf
pop
dec
out
push
push
sbb
cmp
aam
int3
movl
cli
mov
fildll
cmp
jb
push
and
sbbl
incl
inc
int
out
aas
cmp
rdtsc
mov
mov
push
cmp
je
or
jp
int3
jno
cmp
jp
sbb
cmp
sahf
outsl
sbb
mov
rolb
jp
sub
jae
mov
int3
into
add
or
adc
pop
fwait
mov
adc
pop
sbb
mov
dec
fldenv
arpl
lret
scas
out
rol
insl
out
ljmp
rorb
test
mov
fnstenv
shrl
call
mov
dec
mov
rep
jecxz
mov
mov
jae
adc
ljmp
mov
xchg
and
stc
pop
or
sbb
inc
leave
lret
rcr
and
pop
dec
subb
lods
lea
sbb
pushf
sbb
mov
jns
loop
add
scas
jg
jge
mov
add
fidivl
pop
mov
jg
int3
push
sahf
mov
hlt
mov
and
ja
pop
dec
xchg
mov
push
movsl
sub
ds
mov
mov
pop
sbb
decb
adc
cwtl
leave
pop
cmp
jae
aas
and
push
lock
or
pushf
mov
into
test
adc
adc
outsb
add
pop
cmp
mov
dec
adc
aas
stc
in
negb
stos
inc
cmpsb
inc
fdivs
ds
stos
dec
pop
sub
push
je
bndldx
fwait
sbb
into
fldl
mov
mov
cmpsb
imul
test
jle
fs
negb
adc
inc
scas
jne
and
int3
jge
fmull
out
adc
or
xchg
cmp
push
mov
jns
xrelease
cmp
popa
decb
jnp
lea
scas
inc
jmp
in
int3
iret
stc
or
out
add
sar
lcall
push
bound
incb
sbb
cwtl
or
ljmp
faddl
inc
pop
inc
push
xor
push
lea
js
aam
fwait
cmpsl
cmp
lods
push
jns
divb
mov
dec
jnp
out
mov
fimuls
outsb
push
in
sahf
lret
inc
inc
push
in
enter
mov
outsb
leave
testb
pop
sbb
rolb
subb
daa
mov
clc
jl
orb
lret
sbb
scas
mov
pop
addr16
incl
xchg
adc
dec
mov
jns
sti
sbb
add
mov
mov
icebp
sbb
cmpl
fsubr
inc
mov
and
push
inc
test
repz
in
sbb
jo
leave
pop
and
add
cmpsl
pop
mov
cli
mov
je
scas
lahf
out
mov
scas
mov
fcomps
je
sub
mov
enter
xchg
xchg
sbb
fcmovbe
enter
sbb
sbb
push
sahf
xlat
ljmp
shlb
sbb
sbb
cmp
mov
out
mov
mov
hlt
pop
and
mov
test
imul
sub
addb
ds
les
leave
fabs
fisttpl
mov
ficomps
repz
popa
xchg
mov
nop
in
sbb
das
movsb
bound
pop
inc
sub
mov
rcll
clc
cli
test
adc
call
fstp
jg
mov
aam
cmp
mov
cmpsb
imul
push
jnp
popf
fimuls
xchg
cmpl
lret
fldcw
xchg
push
fcompl
repnz
jp,pt
nop
sub
sbb
sub
or
andb
jg
pop
add
mov
adc
xchg
adc
add
xchg
xor
jg
pop
mov
push
loopne
cmp
in
imul
push
cmp
jb
mov
inc
ret
je
adc
jge
inc
data16
stc
test
test
aam
mov
push
daa
sbb
cmp
les
jmp
insb
mov
es
jmp
cmpsb
lea
aas
cwtl
jbe
std
movsb
sahf
jno
cmp
adc
mov
mov
add
or
fnstenv
cmp
fs
in
push
es
sbb
inc
popa
mov
inc
scas
daa
push
inc
sbb
jns
pop
cmpsl
xor
dec
loope
mov
mov
fdivrs
mov
pop
data16
fcompp
imul
pop
cwtl
pop
mov
daa
dec
pushf
sti
add
and
pop
dec
sahf
cwtl
pop
xchg
ja
jbe
cli
fbld
addr16
data16
repnz
jg
cmp
shl
lret
inc
out
pop
push
inc
jo
mov
mov
call
mov
test
sub
fisttpll
jle
add
cs
pop
jne
stc
and
jno
adc
scas
jne
pushf
stos
cwtl
lahf
mov
mov
or
jmp
sbb
sub
and
inc
andb
decl
jp
shl
pop
scas
iret
shlb
jb
insb
shll
jg
test
outsl
shll
jl
cwtl
mov
mov
loop
or
aad
sbb
dec
lock
das
fsts
enter
jno
rclb
adc
lcall
popa
push
sbb
mov
or
out
adc
out
rcrb
lcall
mov
aas
out
pushf
pop
cmp
sahf
aaa
dec
cwtl
mov
rcrl
push
sbb
xor
sti
jl
in
fsubl
or
popa
mov
cmpsb
dec
xchg
das
cmp
bound
sbb
sti
dec
lds
cld
stos
mov
jle
pop
loopne
loope
sbb
mov
jbe
mov
add
cmp
aad
lcall
cld
jno
shll
cmp
pop
xchg
loope
outsb
push
cmp
fnstcw
sbb
sbb
mov
xchg
pop
xchg
pushf
cmp
in
into
pop
pusha
pushf
push
and
fdivs
lea
js
mov
cmpb
in
add
jecxz
jmp
xchg
mov
fdivrs
mov
das
test
fsubr
pop
xchg
cmp
daa
stos
add
push
cmp
rcr
xlat
adc
mov
mov
xchg
add
xchg
jnp
lcall
fnsave
fcoms
add
cmp
dec
shlb
and
cmp
fcomps
ja
sub
push
jle
pop
test
fwait
in
push
test
xchg
movd
xchg
mov
iret
mov
mov
cwtl
fnstsw
clc
imul
mov
out
xchg
pop
loopne
movsb
xchg
dec
jmp
negl
stos
or
in
sbb
cmp
inc
cld
outsb
sbb
jnp
call
out
addr16
xchg
cmp
fbld
or
add
mov
out
mov
mov
jmp
mov
pushf
int3
into
cs
fdivr
test
fidivs
mov
inc
scas
out
adc
mov
jmp
lret
leave
pop
pop
push
lds
rcl
cmpl
fsub
sbb
dec
xor
xlat
mov
sahf
mov
fs
ret
sahf
in
fcomp
inc
sbb
add
jne,pt
nop
sar
sbb
add
aam
mov
clc
jae
cli
inc
and
mov
jo
jp
imul
popf
lds
out
and
clc
mov
push
cmp
and
cmp
sbb
popa
filds
cmp
mov
inc
aad
pop
fsubrl
or
arpl
js
daa
ret
fsub
inc
or
adc
jmp
cwtl
orl
sti
or
dec
fmull
loop
cmpsb
sti
out
or
add
scas
out
sbb
jp
xor
subl
jg
fldcw
xor
pop
inc
add
stos
ja
es
mov
jo
cmp
cli
lods
shll
xchg
mov
adc
loopne
sub
pushf
mov
inc
lock
test
cs
and
and
ja
sti
stos
aas
nop
jmp
scas
das
cs
add
cmp
insb
fisubl
pusha
test
dec
outsb
movsl
jb
cwtl
jnp
rcll
stc
in
mov
and
adc
ret
lret
pop
sbb
stos
xchg
adc
orl
sub
dec
xchg
loop
cmp
dec
xor
or
stc
fnstenv
js
add
mov
lods
aaa
jg
scas
aas
inc
inc
pop
decl
pop
xchg
icebp
xorl
clc
shlb
mov
mov
jno
fsubl
repnz
or
xchg
xor
cmp
into
arpl
cmp
std
cmp
daa
mov
push
dec
fs
fwait
push
or
stc
cld
sub
sahf
push
cltd
pop
xchg
inc
pushf
sbb
shll
icebp
mov
push
bound
cmpb
mov
cld
push
inc
and
add
cmp
jmpw
les
call
inc
or
pop
cli
and
sahf
dec
xchg
push
divb
cmp
int
xlat
cmp
imul
cmpsl
jmp
fisubs
int3
xorl
iret
xchg
pop
push
jb
cwtl
xchg
dec
inc
pop
daa
hlt
stc
mov
gs
in
fwait
ret
mov
push
mov
push
jge
out
fsubl
adc
into
stc
lret
jge
fdivrl
mov
in
stc
add
and
stc
add
lahf
iret
aas
sbb
inc
in
jle
xchg
sbb
les
stc
xchg
into
fs
iret
ficomps
stos
es
aas
in
fcomi
mov
xchg
cmp
ret
xlat
enter
xchg
pop
mov
lret
mov
or
stos
leave
cmpsb
or
je
mov
dec
xchg
outsb
aas
inc
pop
sbb
xor
push
cmpsb
xor
mov
push
test
das
push
add
insl
or
fstps
fwait
inc
pop
mov
es
mov
fistpl
sub
enter
mov
pop
pop
xchg
mov
sbbb
xor
enter
inc
jns
ja
andb
es
negb
adc
pop
fdivrl
ret
xor
and
cmp
mov
fisttpl
lret
mov
cwtl
outsb
or
clc
stc
xchg
flds
ja
jecxz
aas
in
lds
cmp
pop
outsb
jo
icebp
cmp
rcrl
push
loopne
fisttpll
into
inc
mov
jnp
pop
fcmovb
ja
and
pushf
aaa
fcmovnb
leave
xchg
add
mov
adc
adc
mov
ret
test
mov
decl
fisubrs
inc
mov
fucomp
dec
pop
imul
mov
dec
je
in
mov
dec
pop
bound
cwtl
dec
xor
add
cmp
mov
sbb
sub
pop
adc
xor
mov
in
xchg
jno
cld
lock
jns
xchg
cmp
mov
call
ret
call
mov
clc
fwait
mov
ljmp
pop
jae
rorl
test
xchg
std
dec
push
scas
xchg
sbb
fisubrs
mov
mov
es
clc
fistps
loopne
sbb
inc
cmp
scas
iret
mov
dec
adc
cwtl
aad
add
pop
je
sbb
subl
adc
fdivrs
sbb
shll
cmpsb
inc
aad
xchg
movsl
pop
nop
xor
lds
add
xor
cwtl
sbb
addr16
cmp
ss
mov
sub
xor
push
repnz
mov
mov
add
ftst
imul
cmpsb
xchg
insb
ficomps
xorb
jl
adc
sbb
lods
mov
dec
adc
movsl
sbb
rcrb
aam
add
loope
lds
outsb
sub
inc
jno
bound
leave
inc
int3
loop
lret
jg
cmp
mov
mov
xchg
ds
popa
lret
sbb
outsl
push
fcoml
mov
sub
cmp
das
xor
xor
inc
rolb
or
jg
cmpsb
aas
pop
je
jnp
out
pushf
xchg
data16
sub
imul
in
ret
daa
cmp
ficoml
mov
clc
retw
mov
fwait
dec
lea
cmp
pop
dec
lcall
js
aad
mov
add
mov
jno
cli
mov
lahf
sbb
mov
jle
cmc
mov
shl
xchg
inc
incl
xchg
mov
xchg
shr
pop
rorb
outsb
mov
fadds
mov
mov
inc
nop
pop
xor
mov
pop
xchg
mov
jmp
ror
fisubs
aas
xchg
fs
xchg
inc
rcll
jle
fldl
out
mov
push
rol
push
pop
pop
add
rcrb
sbb
cmpsb
sub
pop
cwtl
fstpt
gs
mov
jl
pop
push
or
cwtl
fcmovbe
cmp
dec
xbegin
movsb
out
bnd
fstpl
lret
dec
in
adc
pop
mov
sub
xor
mov
pusha
cmp
dec
push
mov
jb
mov
push
cmpsb
int3
fstpt
mov
mov
rorl
mov
lcall
dec
cld
mov
in
scas
pop
hlt
pop
lret
jb
inc
call
pop
add
sbb
pop
sahf
rcl
lea
pusha
inc
jmp
xchg
clc
mov
jg
test
mov
out
or
mov
movsl
and
and
lret
pop
scas
imul
mov
sub
stos
aad
add
jl
push
xor
mov
pop
mov
shlb
sti
enter
scas
pop
outsl
setne
adc
enter
movsl
pop
jae
daa
loop
dec
push
add
in
pop
pop
mov
sbb
fcoml
sti
sbb
ds
cmpsb
sub
fidivs
cmpsl
sbb
mov
into
jl
cmc
in
mov
or
add
adc
mov
cmp
xchg
fdivr
les
das
aas
mov
and
inc
jg
loopne
and
cs
mov
or
lcall
sub
sbb
incl
ret
aas
mov
mull
cmp
xchg
fs
cli
xchg
cwtl
push
shl
enter
and
repz
pop
mov
mov
outsl
mov
jns
and
insl
ds
xchg
or
add
js
test
jne
push
pop
cwtl
jbe
add
cmp
mov
shlb
adc
pop
daa
aaa
push
movsb
lds
jmp
cs
insl
adc
inc
dec
jp
decb
das
sub
dec
sbb
sbb
or
pop
xchg
jnp
mov
shll
scas
adc
mov
jp
jle
icebp
inc
outsb
jb
sub
cltd
push
mov
test
aad
push
es
mov
scas
fldenv
push
fs
or
push
test
pushf
notl
imul
sti
scas
or
cmpsb
and
mov
jo
jo
int3
push
int
mov
out
stc
mov
faddl
imul
ja
ret
lods
adc
cli
orl
cmp
adc
sub
fidivrs
mov
les
pop
sarb
adc
dec
mov
pop
test
movl
insl
push
sub
jns
pop
push
jo
lods
faddl
loopne
lea
fadd
loope
fs
int
and
mov
xor
cmpb
adc
jp
sub
stos
daa
jae
xor
mov
pop
add
cmp
push
pop
and
push
jg
decl
cmpsl
xchg
fwait
mov
or
add
ljmp
xor
and
dec
sbb
ss
ja
clc
dec
or
stc
push
icebp
outsl
add
outsl
hlt
mov
mov
dec
les
cmp
cmp
cmp
movsl
pop
or
pop
fwait
pop
and
in
jnp
pop
push
push
loopne
mov
std
fdivr
mov
cmpsb
pop
sub
mov
pushf
adc
outsb
mov
jbe
rclb
ss
jle
scas
sbb
inc
pop
dec
mov
jl
jecxz
ljmp
ljmp
pop
and
cmp
cmpsb
jb
xlat
sbb
sbb
mov
jl
cltd
fadd
out
pop
pop
push
jecxz
cmpl
mov
dec
xchg
cltd
push
push
and
push
fs
adc
or
movsb
mov
sbb
mov
dec
sbb
mov
cs
out
xchg
sbb
int
enter
aas
int3
pop
push
in
and
hlt
and
sub
push
mov
cmp
inc
fmulp
add
mov
or
dec
cmp
mov
aas
adc
enter
sbb
aas
jmp
je
mov
test
into
xchg
mov
enter
xchg
scas
call
xchg
shl
and
fld
xchg
fsubs
loop
xor
mov
dec
int
jg
inc
mov
add
cs
sub
adcl
mov
icebp
int3
cmp
adc
daa
ret
nop
ret
sbb
cmp
fs
mov
add
ficoms
into
pushf
sub
ret
stc
cmpsb
dec
roll
fadd
pusha
bound
mov
icebp
jg
lcall
add
dec
jmp
scas
test
mov
sbb
sti
dec
scas
mov
xchg
pop
test
je
outsb
cmp
add
push
or
pushf
ficoml
xor
mov
es
popf
xchg
push
jl
mov
sbb
ss
or
pushw
and
and
std
fsubrl
pop
scas
mov
push
jns
dec
and
add
push
cmp
iret
mov
int
mov
cmpb
sbb
enter
das
mov
rorl
pop
lret
pop
jb
mov
inc
jg
ret
add
mov
cwtl
scas
pop
in
pop
xchg
mov
dec
adc
cli
push
mov
cmp
mov
seta
repz
xchg
pop
scas
mov
or
stos
inc
sahf
mov
or
cwtl
mov
xchg
pop
inc
dec
or
outsl
xor
cld
push
rol
cmp
cmp
addr16
jnp
mov
adcl
scas
add
adc
pop
adc
push
idivb
xor
clc
lods
rorb
xor
xchg
pop
push
cmp
fisubrl
mov
pushf
pop
shll
push
les
test
pop
pushf
push
sub
xor
cmpb
fildl
fldenv
out
sbbb
mov
jb
adc
lret
sbb
xchg
sbbl
jecxz
lahf
int3
nop
ljmp
mov
jnp
aad
inc
dec
fmull
inc
pop
push
loop
cwtl
pop
mov
mov
mov
in
lds
mov
sbb
add
ds
sti
arpl
mov
enter
xor
pushl
push
dec
decl
push
mov
dec
cmp
jp
pushf
inc
das
subb
mov
rorl
add
push
fwait
mov
mov
cs
mov
mov
and
mov
mov
movsb
or
fsubrl
add
and
xchg
pop
cltd
mov
ret
arpl
adc
in
fmul
pop
shlb
jp
imul
jle
stos
dec
loope
fwait
dec
in
jb
fcomps
adc
fmull
sub
adcl
add
in
sbb
cmpsl
mov
pop
std
pop
cld
sub
mov
xchg
add
push
jg
or
leave
mov
push
bound
cmp
iret
xor
ds
dec
stc
negb
enter
xchg
cmp
or
push
imul
sbb
ret
inc
mov
jge
adc
pop
lods
insl
jecxz
insl
cmpsl
fs
adc
lcall
data16
inc
push
cmpsb
pop
jp
mov
cmp
in
fs
lret
pushf
test
pop
fdivrl
inc
xchg
out
test
inc
mov
rcr
test
fcomps
mov
aad
lock
inc
aaa
adc
insb
int3
aas
jnp
lret
or
cmpsl
enter
insb
cld
xchg
dec
add
ret
mov
cltd
scas
sti
popf
dec
in
fwait
sub
popa
mov
mov
mov
pop
addr16
adc
fdivrl
stc
pop
adc
cmpl
and
sub
xchg
inc
cmp
pop
into
test
add
sbb
lock
jg
cmp
push
cwtl
mov
das
mov
cwtl
add
int
adc
aaa
dec
mov
fnstenv
mov
cmpl
in
inc
mov
fidivrl
repz
push
mov
xchg
shrb
dec
mov
lock
data16
add
pop
mov
pop
mov
sti
shrl
scas
inc
add
stos
xchg
sub
bswap
inc
inc
pushf
lds
sub
popa
idiv
sbb
mov
mov
test
loop
fnstsw
sar
jg
mov
clc
xor
jecxz
add
mov
or
mov
sub
mov
mov
jnp
std
pop
inc
insb
mov
mov
jno
fdivrl
popf
movsb
add
pop
ljmp
nop
mov
jle
push
push
addr16
lcall
enter
mov
aas
cmp
daa
cmp
repnz
xchg
test
mov
in
cwtl
pop
mov
jb
sub
inc
cmp
xlat
pushf
xchg
rcrb
or
sbb
xor
adc
dec
pop
xchg
sarl
add
es
mov
push
rcl
xchg
fwait
or
popa
xchg
add
sti
add
pop
push
and
adc
pop
or
dec
push
dec
sbb
lret
sbb
xchg
stos
and
cli
inc
push
or
andb
lret
ss
cld
lcall
mov
xor
into
pop
cwtl
daa
mov
or
mov
xor
stc
sbb
xchg
ret
push
sti
mov
mov
mov
out
mov
jnp
push
loope
dec
and
push
pop
insl
mov
fldt
inc
dec
sti
dec
stos
mov
jae
call
xor
ds
call
add
popa
cmp
mov
rorl
stos
mov
jns
repnz
inc
push
cmp
xchg
adc
jmp
popf
mov
or
mov
ljmp
mov
xchg
test
jne
sub
mov
jmp
in
push
into
lea
cmp
jno
or
mov
pop
jo
pop
popf
imul
mov
loopne
cmp
sbbl
or
mov
push
or
cs
pop
push
loopne
aam
xchg
in
inc
sbb
je
mov
push
mov
les
outsl
notb
push
jle
cmp
mov
jnp
jne
add
mov
rcr
popa
sbbb
fdivrp
mov
sahf
push
mov
xchg
rcl
jnp
push
mov
ja
pop
movsl
sbb
jg
push
jg
iret
std
fdivl
cmc
out
and
cmp
sarb
xchg
inc
lcall
or
inc
aas
xchg
cwtl
jle
mov
mov
mov
xlat
fidivl
mov
adc
mov
negl
lahf
jmp
cmp
inc
pop
mov
cli
sbb
popa
cmp
mov
xchg
aaa
imul
sbb
out
ficompl
sbb
xor
cmpl
movl
dec
je
pop
out
mov
jg
xor
mov
fimuls
nop
stc
mov
jnp
jb
loopne
test
in
mov
cltd
daa
cmp
xor
je
scas
aas
push
leave
adc
mov
sbb
cmp
push
inc
or
cwtl
cmp
mov
sbb
add
js
fbld
sub
outsb
and
sbb
xchg
pushl
sub
push
xchg
fdivrl
xchg
sub
inc
sub
jae
sbb
mov
mov
jmp
nop
cwtl
cmp
adc
mov
or
loop
sub
repnz
pushf
mov
jb
mov
lret
inc
xchg
aad
out
test
cmp
out
pop
mov
es
xchg
fcompl
mov
leave
xchg
rcll
sub
cwtl
jo
xor
jle
sub
mov
scas
iret
or
cli
dec
dec
adc
fidivl
in
add
cli
fdivrl
es
xor
and
inc
gs
add
sbb
pushf
mov
mov
mov
mov
xchg
jg
fistpl
rclb
jbe
cmpsl
pop
shll
test
call
stc
sbb
ret
lahf
arpl
decl
push
push
push
jnp
scas
jns
dec
sub
lret
and
mov
cli
and
cmpb
adc
scas
ss
inc
cmp
sbb
add
sti
xchg
xlat
jmp
and
movl
popf
inc
jae
push
test
aas
pop
and
mov
stc
out
aaa
fmulp
push
addb
daa
fldt
jno
in
lahf
lahf
cmc
pushw
sbb
dec
sbb
lds
loope
cli
std
imul
xchg
xor
in
popf
jae
daa
jge
mov
mov
cmp
rorl
into
mov
xchg
lret
or
add
sbb
jo
ret
mov
mov
xor
fidivrl
jg
push
lahf
or
mov
test
cld
in
cmp
push
enter
hlt
xor
pop
mov
push
xchg
pop
mov
mov
je
jmp
int
xchg
add
sti
outsb
ret
into
rcrl
fidivs
pop
xchg
mov
cwtl
jne
cwtl
into
adc
loop
dec
xchg
push
aad
jge
aas
lret
add
sbbl
jle
cli
pop
fdivrl
mov
mov
hlt
test
les
pop
insl
jbe
out
jle
addr16
dec
addr16
xor
fdivs
int
outsb
test
out
pop
mov
sbb
repz
push
icebp
dec
adc
pop
ds
pop
lods
or
jle
imul
pop
imulb
js
jp
cwtl
bound
rcl
xchg
push
and
cmc
out
jp
xchg
in
pop
mov
mov
cltd
jl
repnz
jp
sbb
movsl
sti
push
mov
or
das
cli
bound
pop
data16
aas
rorl
cld
imul
int3
out
xor
stos
push
push
out
cmp
inc
jae
cli
mov
jae
aaa
push
test
xchg
fsubrs
pop
movsl
test
imul
cmpsl
fldl
inc
call
je
sbb
jmp
adc
jb
mov
icebp
fisttps
shll
stc
sbb
sbb
cld
lret
in
mov
icebp
aad
mov
xor
xor
sbb
cld
out
inc
lahf
enter
cwtl
arpl
jmp
inc
das
fyl2xp1
decb
int3
cmpsl
test
lea
jl
lret
xor
pop
int3
andb
js
enter
xor
mov
xor
add
jno
xchg
xchg
xchg
jns
xchg
cld
mov
movsb
xchg
inc
xchg
sbb
jno
aas
sbb
cmpsb
push
js
in
leave
movsl
in
js
jae
fsub
jg
sbb
ret
push
stos
mov
lahf
aas
fistpll
mov
cltd
sbb
sbb
mov
inc
mov
pop
outsb
cmp
sbb
and
in
call
push
pushf
xchg
std
int3
inc
adc
sub
shrl
fadd
addl
add
inc
inc
mov
pop
jns
sub
sbb
jb
push
or
pop
loope
repnz
pop
sbbl
std
push
and
sbb
jle
fbld
daa
jg
pop
out
xchg
popf
jnp
jge
aas
sub
stc
inc
aas
lahf
jbe
push
inc
movsl
jl
in
popf
test
subw
sahf
add
sbb
fucom
xorl
xor
ret
lock
test
or
popa
lock
add
pop
adc
mov
inc
pop
xchg
xchg
jmp
into
adcl
cmpsb
daa
push
inc
jge
fwait
pop
stc
sbb
andb
push
outsb
and
ret
ds
push
ds
sbb
jle
pop
js
or
push
dec
repnz
leave
stos
cmpsl
movsl
push
pop
add
stos
scas
push
jl
cs
testb
jp
cmp
outsb
fs
fsubs
decl
jmp
inc
leave
pushf
push
in
sub
pushf
dec
or
sbb
test
sti
in
lods
fstp
aas
mov
sbb
add
fadds
mov
mov
popa
mov
aam
mov
sahf
and
loope
clc
jae
mov
xor
push
and
cmp
iret
xor
lcall
enter
lcall
cmp
iret
xchg
sti
mov
fidivl
popa
dec
mov
dec
jg
xchg
mov
lret
sub
icebp
mov
test
sti
movsl
lahf
dec
push
stos
popl
inc
imul
or
stc
inc
push
scas
fwait
sub
dec
and
xchg
jo
mov
sub
addr16
jmp
pop
cmpb
mov
jp
push
jb
int
xchg
cmp
pop
mov
ret
xchg
clc
and
movsb
hlt
jg
ja
jg
dec
cld
pop
loope
mov
stos
es
cwtl
inc
ja
xchg
push
add
inc
test
bound
mov
hlt
cmp
fildll
repnz
aas
or
add
push
fld
pop
push
pop
pop
push
pop
inc
jo
lahf
and
xchg
pop
lods
sahf
fwait
loop
jns
imul
fmull
out
cmp
cmp
xchg
and
ds
xor
xor
inc
sub
push
and
or
imul
jbe
es
repnz
jnp
add
in
out
scas
push
inc
mov
std
jge
mov
push
or
rcl
loop
jl
push
in
popl
sbb
and
jns,pt
cli
pop
xor
mov
xor
nop
or
add
or
sarb
mov
xchg
pop
loopne
add
cmp
lret
fdivrs
mov
clc
xor
pushf
lock
mov
pop
lods
aas
ljmp
mov
clc
enter
pop
inc
cmp
mov
mov
std
adc
aas
xor
push
ds
xchg
add
pop
lret
push
movsb
iret
inc
mov
pop
jo
ficomps
xor
mov
icebp
cld
arpl
sbb
xchg
mov
sbb
fdivrl
jno
inc
xchg
cmp
in
in
pop
sbb
fmulp
xchg
xorl
jg
add
or
jmp
sarb
cwtl
iret
lea
fcoml
adc
push
sbb
push
pusha
lahf
out
mov
loopne
fisttpll
es
cs
dec
pop
xchg
inc
filds
imul
sub
adc
and
mov
xor
addb
and
mov
stc
pop
add
dec
leave
cli
mov
lahf
test
les
jl
repz
xchg
dec
ror
pop
aam
loop
adc
pop
mov
ficomps
jle
xchg
jae
mov
addr16
sbb
pop
xor
insb
jle
addb
dec
insl
sbb
sahf
out
lea
out
pusha
cld
sbb
mov
and
jo
inc
jmp
jbe
mov
add
or
mov
ljmp
flds
insb
into
mov
mov
push
mov
pop
loopne
jle
movsl
syscall
mov
inc
xchg
aaa
sbb
inc
fwait
sub
cmp
mov
sbb
inc
pushf
into
test
push
sarl
test
repz
jle
daa
mov
pop
data16
int
cmp
lcall
pop
subb
incl
out
mov
lods
mov
cmp
xchg
lret
cld
stc
out
xchg
xorl
arpl
repz
inc
ret
imul
loope
sbb
roll
es
sbb
imul
out
lret
ror
lods
mov
push
add
xchg
fsubr
or
fldl
cmp
push
and
lcall
and
jbe
sbb
decb
xchg
bts
lret
and
cmp
pusha
sti
xchg
test
lea
sbb
in
push
xchg
cmp
fwait
cmp
mov
lahf
pop
sbb
xchg
js
pop
cmp
mov
dec
cli
cwtl
pusha
stos
aam
pushf
std
aad
dec
inc
hlt
and
adc
fxch
sbb
dec
xchg
sti
jo
subl
push
outsb
sahf
sbb
adc
xchg
nop
aas
xlat
sbb
vxorps
popa
lcall
mov
pop
je
iret
jmp
jbe
aas
xchg
sti
or
cmp
xchg
je
mov
lret
pop
test
mov
shll
stc
cs
fistps
gs
lods
pop
into
cmp
stc
inc
jnp
cmp
pushf
or
adc
cli
jecxz
lods
mov
fisttpl
lods
movsb
cmp
mov
mov
jmp
lret
js
movsb
test
repz
out
roll
pop
jp
pop
mov
push
xchg
sub
jecxz
enter
jno
fstl
mov
mov
fs
gs
lahf
pop
in
jl
jge
pusha
mov
push
bound
xor
inc
add
xchg
add
xlat
repnz
notl
adc
dec
gs
sbb
jle
xor
ja
push
popa
xchg
fidivs
push
dec
shlb
add
test
or
out
xor
sti
or
lcall
repz
mov
xchg
std
sbb
inc
std
fidivrs
gs
stos
jmp
inc
jae
jl
cs
mov
xchg
jbe
push
mov
lret
sbb
andb
andb
popf
mov
cs
mov
xlat
lea
movsl
sbb
mov
pop
test
bound
aad
xchg
leave
adc
mov
cltd
call
cmpsl
int3
ljmp
jo
cmpsb
pop
fs
scas
hlt
cwtl
inc
or
cltd
incl
movsl
iret
ret
and
mov
lea
les
pushf
mov
in
sbb
in
cmp
push
je
inc
mov
xchg
sub
mov
and
jp
pop
ljmp
pop
sarb
js
pop
sub
bound
icebp
push
mov
inc
negb
sbbl
jnp
cli
fwait
in
or
fstl
mov
mov
fsubs
bnd
inc
pop
add
cwtl
mov
aaa
dec
cwtl
popa
sbb
nop
movsl
stc
mov
lds
addr16
xchg
movsb
push
repnz
sbb
xor
push
imul
ret
dec
xor
and
cmpb
or
jae
enter
sbb
gs
cmp
push
outsb
test
cmp
aam
test
dec
pavgw
push
pop
and
cmp
cmp
inc
sub
iret
aas
int3
in
jnp
scas
out
mov
fdivrs
mov
fcomp
imul
jne
and
iret
inc
lods
ja
push
xor
mov
and
cmpsb
cmp
sbb
fmul
mov
push
into
inc
sbb
pop
mov
adc
sub
sti
cmp
xor
clc
mov
push
das
in
flds
add
mov
xorl
scas
data16
pop
int
cmp
rcrb
pop
xor
js
push
cmp
or
jne
scas
mov
out
daa
es
data16
pop
out
cltd
cwtl
imulb
adc
js
push
sbb
test
pusha
mov
sti
pop
inc
xchg
adcb
sbbb
sub
adc
cmp
imul
adc
std
dec
sbb
fwait
cmp
idivl
cmp
pop
cwtl
adc
xor
bound
fs
dec
cli
lock
adc
mov
mov
orl
mov
and
in
lods
mov
push
adc
jl
movsl
adc
mov
pop
mov
push
dec
int3
inc
dec
test
pushf
mov
mov
enter
imul
cmpsl
cmc
sbb
popf
repz
lcall
mov
mov
sub
pop
xchg
jmp
out
aas
ja
sbb
dec
dec
repz
outsl
xor
dec
push
nop
pop
data16
sbb
pop
rclb
fdivrs
jo
pop
sub
jmp
lahf
jp
xor
cmp
aaa
jl
or
aam
xor
mov
popa
mov
inc
pop
sub
jl
adc
test
xchg
mov
rol
mov
dec
sub
or
cwtl
fldl
mov
clc
test
cltd
adc
cmpsl
sbbb
cwtl
or
or
out
clc
test
pop
xchg
sbb
les
aam
cli
mov
pushf
jnp
std
popa
leave
adc
pop
lds
lds
pop
jge
test
push
push
daa
test
sbb
popa
pop
push
gs
movsb
mov
sbb
sub
decl
in
lock
cmp
sbb
mov
or
pop
dec
pop
stc
faddl
xor
lcall
mov
push
in
xchg
aas
rcr
jno
test
test
gs
jg
jle
sti
push
xor
lock
rorb
fildl
cmpsl
stos
fisttpl
cmp
insb
pop
repz
and
or
fstpt
fcompl
mov
xchg
std
mov
or
stos
and
cli
int3
je
mulb
pop
ljmp
fwait
sti
add
jecxz
mov
pusha
xchg
sti
scas
lock
insl
push
scas
aas
push
xchg
add
and
push
mov
add
out
dec
outsb
xor
push
push
rorl
fs
mov
pop
je
mov
cmp
daa
cmpsb
aad
push
lcall
sub
inc
jbe
jb
rcrb
add
fwait
jle
addl
jecxz
cli
cmpsb
dec
add
xchg
cmovb
jl
and
pop
adc
scas
sbb
lds
rcrl
mov
cmp
push
sarb
mov
enter
cmp
jg
scas
xchg
aas
movzwl
xor
mov
xor
ficompl
daa
mov
nop
sub
fdivrs
mov
adc
cmp
aam
sbb
mov
scas
xchg
cmp
cld
add
int
fwait
mov
es
xor
out
mov
cmp
test
pop
jg
pop
dec
push
fsubrs
mov
sbb
mov
sub
test
xchg
jl
cmp
loop
mov
add
out
mov
mov
std
sbb
adc
adc
aaa
enter
cmpsb
cmp
insb
and
sub
psubd
mov
shlb
pusha
mov
cltd
movsb
cwtl
push
and
ljmp
loop
pop
mov
lock
in
cmp
mov
xorl
loop
cmc
mov
cli
xor
jb
jecxz
imul
enter
insb
xor
sub
lds
push
out
ljmp
repz
mov
push
add
and
aas
cltd
inc
mov
inc
lds
in
adc
cmovne
sbb
cli
and
mov
cmp
fbld
xor
sbbb
into
and
mov
jmp
cmp
sub
sti
ds
rolb
jmp
insb
dec
std
stos
fisubs
icebp
cmpsl
or
pusha
mov
mov
add
repnz
adcb
mov
aas
cmp
cmpsb
mov
leave
hlt
pushf
inc
lods
sbb
fcomi
push
pusha
sbb
mov
sbbb
icebp
out
pushf
scas
dec
and
rcll
adcb
adc
ds
je
pop
dec
add
jne
xchg
and
les
das
rcrb
jne
cmp
pop
inc
ret
mov
jle
outsb
in
shlb
int
icebp
imul
cmp
punpckhdq
push
pop
stos
icebp
aad
cmpb
retw
dec
pop
adc
call
lock
cmp
decl
orb
sbb
enter
push
push
in
and
iret
lds
loope
mov
mov
cmpsb
das
outsb
sub
dec
loopne
cmp
out
mov
in
and
or
push
push
adc
jle
arpl
mov
hlt
sub
xchg
addr16
sbb
inc
xor
or
xchg
push
call
test
and
xchg
add
push
repz
push
and
cli
test
pop
xor
testb
fsubs
jl
in
hlt
mov
in
sbb
pop
loope
jmp
or
mov
mov
iret
jnp
jno
push
add
pushf
ret
shrl
cmp
push
add
sahf
cmp
popa
mov
pop
xor
test
and
pop
movsb
incl
mov
aas
pusha
aad
rorb
push
mov
fs
jle
push
xor
mov
fsub
in
mov
sbb
loope
ret
jb
scas
and
cmpl
sbb
jle
rcrl
mov
inc
test
push
and
fcomps
sbb
faddl
jnp
pop
imul
movsl
cmp
sti
and
mov
jg
in
cmp
push
aas
xchg
xor
mov
fstpt
inc
idivb
into
push
in
mov
addr16
push
sbb
jbe
sarb
inc
pusha
fistpll
pop
or
jmp
and
cli
mov
mov
pop
shll
sbb
clc
sub
int3
dec
cmpsb
sar
cwtl
jns
push
sbb
xchg
jnp
imul
lahf
sbb
loopne
cltd
sbb
pushf
mov
or
dec
and
outsb
mov
aad
je
mov
filds
fwait
jne
lods
in
sbb
fs
imul
bound
into
cmp
cmpsl
sbbl
mov
cmp
pop
jb
bound
cmp
int3
xchg
leave
scas
in
ret
insb
aam
sti
dec
push
shrl
outsl
push
mov
sbb
jmp
xchg
inc
xlat
jne
cmc
jmp
inc
or
cmc
test
lcall
ret
mov
mov
mov
imul
inc
pop
cwtl
stos
jmp
ficoms
arpl
inc
cli
pop
inc
push
jmp
sar
cmp
cmp
mov
sbb
iret
adc
in
dec
mov
jp
stc
mov
repz
mov
sarb
ss
pop
sahf
sahf
jmp
adc
sub
fsubrs
mov
cwtl
cmp
enter
mov
push
pop
out
pop
faddl
jecxz
std
not
adc
inc
xor
sbb
jle
fistpl
push
adc
or
mov
push
cmpsl
jmp
dec
dec
pushf
fadds
mov
testl
jne
sub
js
imul
and
xchg
inc
pushf
adc
leave
push
xor
mov
daa
or
adc
jo
fwait
sub
les
fidivl
loopne
in
in
cmp
sahf
iret
xor
mov
leave
or
jl
jae
pop
sbb
jnp
hlt
cwtl
xchg
xchg
pop
pop
cmp
xchg
aad
inc
scas
xor
cmp
push
sbb
jle
dec
or
xor
imul
fwait
cwtl
mov
cld
xlat
and
cs
push
sbb
inc
mov
mov
and
jno
mov
pop
iret
shlb
push
gs
lods
fdivr
xor
sub
mov
xchg
sbb
ret
dec
jno
mov
pop
cli
mov
push
int
push
test
in
add
mov
ret
dec
aaa
or
and
ss
add
lds
mov
and
pop
sub
lret
dec
jp
fadds
enter
sub
movsl
aas
fwait
sub
shl
sub
mov
cmp
hlt
insl
rolb
les
mov
sahf
and
sub
cmp
decb
rorb
stos
leave
fwait
clc
push
lret
loop
mov
sarb
xor
or
lds
push
mov
mov
xor
mov
push
jo
lret
jno
mov
pushf
xchg
and
les
ret
aaa
mov
cmpps
test
in
cmp
lahf
xchg
pop
test
andl
and
sbb
add
xchg
shl
aas
xchg
add
sbb
xor
sub
fiadds
das
fcompl
sbb
or
sub
sbb
fsubrl
mov
adc
sbb
test
hlt
data16
jl
hlt
pop
mov
sti
mov
nop
or
dec
arpl
dec
xor
jo
and
xor
push
enter
ljmp
sbb
jp
movsl
dec
mov
and
mov
sbbb
xchg
cmpsl
lahf
jmp
xor
ja
mov
jle
daa
lahf
jp
adc
cs
cwtl
xchg
inc
add
mov
mov
or
cwtl
push
push
popf
ret
mov
jle
mov
fwait
mov
sbb
cmp
mov
aas
sub
push
sub
mov
negb
addr16
out
jnp
mov
mov
inc
std
jb
icebp
pushf
adc
fidivrs
mov
pop
and
sahf
pop
andl
fwait
roll
inc
cmc
decl
negl
mov
test
mov
pop
mov
pop
and
fisubs
ficompl
mov
sub
cmp
out
lahf
and
in
jno
and
sub
cwtl
mov
adc
jmp
mov
jp
xchg
push
or
sbb
jb
xor
enter
pusha
dec
in
inc
aas
xlat
rorl
push
mov
cmp
jecxz
andb
pop
insl
aam
pop
jns
push
jns
xchg
pop
shrb
inc
sbb
mov
pop
cmp
pop
movsl
xorb
push
pop
xchg
xchg
test
adc
push
cwtl
sbb
js
jge
sti
adc
notb
pop
mov
pop
mov
mov
cmp
add
pop
adc
mov
pop
inc
cmc
mov
xor
adc
mov
lret
push
pop
nop
addr16
mov
aad
pop
mov
arpl
lret
jp
cmp
cs
sbb
mov
outsl
push
shr
dec
fstpl
mov
cmovae
jbe
inc
cmp
pop
in
js
ss
mov
mov
subb
pop
jbe
fwait
xchg
cmpsl
test
in
pop
test
mov
lods
fmul
loope
xchg
lcall
in
outsl
lea
push
loop
or
nop
popf
dec
fwait
cmpsb
mov
movsl
inc
pushf
fbstp
call
push
mov
hlt
clc
movsb
pushl
lods
out
or
aaa
insl
ja
test
lret
sbb
fsubrl
cli
lret
cmp
pop
movsl
rorl
sar
push
fdiv
and
jbe
dec
push
test
jg
lidtl
cmp
cmpsb
dec
fnstenv
mov
or
ret
mov
mov
mov
add
mov
mov
cmp
jg
dec
inc
js
jmp
dec
lret
shrb
xchg
mov
sbb
ror
mov
in
dec
dec
pop
cmp
inc
gs
sti
mov
or
or
loop
adc
jg
and
or
xchg
out
js
sub
mov
sbb
test
jge
dec
lcall
inc
fsubs
fdivrp
dec
nop
pop
fldcw
mov
pop
push
mov
iret
or
xor
ficoms
lea
jne
out
jno
lcall
sbb
adc
sarl
add
jbe
sti
adc
incb
aam
aas
jnp
add
fstps
es
cmp
insb
jle
and
in
mov
or
sahf
jnp
sbb
mov
iret
movsb
adc
pop
mov
mov
not
mov
cmp
test
mov
fldenv
xchg
test
xchg
data16
fdiv
cmp
pop
cltd
orl
test
or
lret
cmp
or
mov
aad
inc
mov
call
jns
test
repz
jmp
test
sub
pop
push
jbe
adc
mov
pop
adc
xchg
inc
iret
adc
andl
or
movsb
mov
stos
cld
test
std
mov
stc
inc
cmpl
inc
scas
sbb
jmp
test
jecxz
call
xchg
fdivl
into
push
jnp
add
test
add
jg,pn
lock
int
aad
fisttpl
test
push
xchg
pushf
popf
in
cwtl
lods
dec
or
mov
sub
mov
cs
out
push
lea
dec
leave
out
inc
jno
pop
fimull
xlat
and
mov
xchg
stos
pop
adc
mov
icebp
mov
sbb
and
mov
and
sub
pop
stos
stos
cmp
add
in
xchg
inc
fs
inc
lcall
ljmp
mov
aas
mov
and
jnp
sbb
aaa
js
mov
jae
popf
pop
ret
lret
jecxz
or
arpl
sbb
lock
pop
enter
test
cmp
popl
and
popa
bound
lcall
incb
sub
cmp
lret
push
movsb
ds
fistpl
ja
cwtl
xlat
mov
cli
sbb
xor
aas
loop
push
inc
xchg
mov
addr16
faddl
outsb
and
hlt
sub
mov
cmp
fisubrl
push
adc
jecxz
mov
push
nop
inc
pop
jo
insb
pop
outsl
sbb
mov
pop
cld
setnp
fldt
sbb
adc
cmp
lcall
popa
inc
xchg
xchg
and
sbb
daa
inc
cmp
mov
jle
sbb
dec
mov
jnp
mov
hlt
sbb
and
addr16
out
mov
or
jmp
mov
in
loopne
jge
fistl
jle
ds
das
pop
movsb
jp
leave
pop
pop
sbb
sbb
inc
les
mov
pop
inc
inc
and
sti
pop
rcrl
cmp
mov
pop
pop
and
fistpl
scas
pop
cmp
sbb
xchg
imul
add
movsb
sbb
pop
adc
push
lret
cmp
lahf
mov
add
jnp
jae
je
pop
testl
inc
sub
cmp
fsubl
mov
loop
push
jmp
push
pop
sbb
cwtl
nop
jb
cltd
pushf
pop
addr16
insl
mov
adc
inc
xchg
mov
or
scas
mov
adc
pop
fwait
jo
pop
mov
fnstsw
leave
lock
xchg
sarl
lea
aaa
add
and
or
mov
sub
sbb
jno
movsb
inc
jo
stos
mov
outsb
add
pop
cmpsl
pop
inc
pop
pop
cli
adc
outsb
pop
lret
mov
out
jnp
mov
and
jecxz
repz
xchg
mov
pop
mov
test
sub
push
xor
mov
pop
in
cmp
mov
test
or
add
xor
jb
out
inc
push
outsb
push
movsl
nop
jnp
push
sub
cmpsl
push
ret
mov
notl
insl
adc
call
mov
xchg
sbb
insb
in
subb
addb
push
adc
mov
pop
sarl
jl
mov
jne
mov
fsubrs
jno
jp
xchg
sahf
jo
into
pop
or
pop
fildll
pop
sub
cmp
dec
jno
cmpsl
cmpl
and
les
fmul
inc
adc
pop
aas
cwtl
or
sbb
mov
in
fcompl
stc
jne
mov
idiv
cmp
jecxz
cmp
lahf
mov
jnp
sbb
ret
popf
adc
cmp
adc
mov
push
adc
ud0
movsl
sbb
push
mov
sub
or
or
xchg
ja
jecxz
add
sarb
jg
insl
inc
jno
notl
pushf
fdivrs
mov
cmp
dec
sub
sbb
jb
pop
mov
sti
dec
icebp
shlb
cmp
lods
fdivrl
aaa
mov
negl
cmpsl
aaa
ja
push
cli
or
shr
test
xchg
mov
jae
push
test
sbb
inc
mov
faddp
outsb
out
enter
lret
mov
test
test
dec
fstpl
sbb
loope
pop
push
nop
sti
test
cs
mov
rclb
pop
cld
clc
out
push
pushf
and
sub
test
pop
inc
xor
rcr
movsb
fwait
mov
cmpsb
mov
jle
sbb
std
push
inc
fcomps
mov
and
jae
xor
push
pusha
push
movlps
fcoml
rorb
mov
inc
in
icebp
cmp
icebp
cmp
test
adc
mov
movsb
icebp
cmpb
faddl
pop
cmp
mov
test
test
mov
adc
clc
pushf
iret
add
dec
jmp
or
add
lds
pop
shlb
scas
mov
inc
mov
xorb
mov
jl
jecxz
ds
iret
nop
cltd
and
insl
popf
mov
out
mov
fdivl
jmp
mov
imul
enter
imul
dec
dec
int
mov
xchg
xor
cmpsb
mov
push
test
jbe
dec
push
rorb
pop
mov
aam
je
sti
mov
mov
addr16
fadds
xor
mov
mov
or
shr
pop
addr16
call
imul
mov
add
mov
fnstenv
cmc
fistpll
jbe
lahf
scas
es
fcoml
or
push
mov
dec
push
xchg
push
mov
xchg
mov
sbb
pop
xor
xchg
jae
in
bswap
and
pop
ds
jl
divl
popa
push
hlt
scas
cwtl
sub
pmaxub
jmp
lcall
adc
cmp
xchg
cmpsb
aas
decl
cmp
and
mov
sbb
leave
add
sbb
cmpsb
and
mov
inc
cmp
mov
in
sbb
jle
andb
aas
into
sub
dec
sbb
stos
push
lcall
lahf
jg
rcr
or
cmp
pop
add
leave
mov
mov
push
addb
imul
mov
or
pop
ds
popf
inc
je
in
or
and
sbb
jmp
fimuls
sub
mov
clc
inc
dec
insb
pop
jb
aaa
and
jno
fsubrl
fbstp
cmp
roll
jmp
xlat
sti
inc
xor
and
ret
out
nop
repnz
push
incb
xchg
inc
cwtl
lock
or
icebp
out
mov
loope
lret
push
push
mov
mov
in
jmp
sbb
xor
mov
sbb
incl
lods
mov
aad
outsl
pop
mov
inc
mov
fadd
loop
mov
push
hlt
add
test
fnsave
sub
pop
ljmp
cltd
call
sbb
test
mov
mov
inc
sub
mov
lret
lea
scas
mov
orb
jg
mov
cld
xchg
xlat
in
inc
repnz
out
ret
push
mov
sbb
mov
aas
cmc
mov
js
xlat
mov
sub
xor
shr
sbb
hlt
hlt
je
cli
mov
cld
jns
sbb
jmp
lcall
and
or
out
xchg
arpl
sbbb
stos
stos
ds
outsb
cli
shlb
stos
jecxz
test
or
imul
lahf
mov
xor
mov
push
pop
adc
mov
sub
jmp
cmp
xor
xor
nop
imul
jecxz
stc
xlat
push
test
and
jmp
lahf
lahf
sbbb
popl
or
js
repz
or
xor
scas
jg
imul
insb
pop
aam
aas
xchg
pusha
xchg
mov
sbb
loope
ret
subb
scas
adc
inc
sbb
enter
push
jle
popa
jle
dec
in
pop
cmp
push
fnstcw
xor
nop
das
lcall
pop
out
mov
jne
lret
jle
sub
pushf
adc
mov
pushf
cmpsl
test
das
mov
jle
enter
pop
test
mov
fs
jnp
int3
bsr
pop
adc
out
cmp
adc
add
inc
sarb
mov
mov
or
mov
stos
stc
clc
aas
fistpll
jnp
or
rorb
sub
in
out
sbb
ss
pushf
cs
fsubrl
popa
gs
pushf
mov
and
pop
sbb
lock
add
movsb
insl
jo
fdiv
xchg
les
pop
cmpsl
pop
add
cli
xor
adc
sahf
das
mov
mov
insl
test
fnstsw
out
daa
aaa
clc
mov
or
jg
mov
dec
xor
pop
pop
stc
popa
ret
mov
or
ror
sub
cwtl
jl
loope
mov
fiaddl
insb
push
adc
xor
cltd
inc
inc
cmpl
pop
sbb
adc
or
mov
xchg
sbb
stos
mov
or
std
out
hlt
xchg
iret
pop
push
dec
bound
pop
cs
es
push
mov
jg
pop
mov
jmp
pop
out
fnstcw
addl
jp
test
test
dec
xchg
sbb
or
sbb
xchg
lret
loop
sti
js
add
push
mov
scas
jb
xchg
cmp
ds
or
lahf
aas
leave
mov
xorl
xlat
sbb
clc
enter
mov
sbb
jecxz
aas
and
ret
lret
outsl
rcll
stos
lods
outsl
lahf
hlt
loope
ds
mov
les
int3
call
out
decb
adc
mov
or
incl
out
shrl
inc
stc
jo
je
loopne
ds
sti
fs
xchg
push
inc
push
pop
in
sbb
imul
add
cs
jp
out
nop
imul
ficompl
ds
inc
call
jle
adc
jne
sti
pusha
into
imul
sahf
loop
cwtl
adc
jp
pop
icebp
inc
adc
mov
dec
sbb
jb
push
mov
ret
and
out
aad
daa
pop
xchg
mov
or
sbb
cwtl
into
hlt
cmp
mov
push
push
mov
and
repz
sub
xchg
jge
rolb
sub
scas
adc
fldcw
std
pop
imul
lods
ret
outsb
int3
mov
cld
jmp
adc
cmpsb
jb
repz
and
ja
mov
iret
mov
pop
xor
fst
movsl
dec
vpandn
pop
push
jmp
mov
pop
sahf
mov
jnp
sub
mov
mov
popf
sti
fwait
inc
pop
push
loopne
cmpsb
aaa
xchg
adc
adc
mov
imul
and
cmpb
hlt
dec
iret
cmp
cmpsb
cmp
or
out
lcall
pop
test
push
push
sub
clc
test
xchg
int3
or
in
jns
movsb
dec
sbb
or
jno
sbb
mov
jmp
test
sbb
jne
mov
faddl
lods
pushf
call
lret
push
mov
mov
lret
add
push
mov
leave
mov
imull
and
mov
fsts
stos
sbb
negl
loopne
add
xor
add
pop
lret
cmp
out
dec
lret
mov
cmpsb
push
sbb
sub
stos
aas
xlat
js
shr
scas
aas
iret
aas
pop
add
mov
scas
mov
rol
lret
add
les
add
sbb
push
lret
push
jo
dec
cmp
jb
sbb
jp
adc
out
add
push
pop
xchg
cli
test
sbb
xlat
sub
jne
pop
mov
arpl
rorl
iret
pop
bound
cmp
pop
nop
push
sbb
ja
xchg
sti
pop
mov
dec
and
and
sbbl
sub
jge
das
loope
int
mov
mov
test
aad
fwait
int3
inc
mov
negl
mov
mov
sarl
jb
jg
ss
ret
shl
ret
outsl
out
dec
adc
and
lock
lret
mov
mov
add
ja
mov
xchg
test
add
not
or
jb
xor
fs
cld
xor
out
adc
push
enter
cmp
sub
aaa
pop
fildl
into
mov
inc
inc
scas
decl
cli
push
cmp
mov
mov
mov
push
mov
es
sbb
xchg
xor
ret
iret
mov
mov
das
cmp
fs
movsb
cmpl
negl
adc
mov
fisubrl
imul
cmp
mov
push
add
jp
push
lock
pop
mov
mov
gs
sbb
jnp
cs
mov
sub
cmp
mov
stc
jo
andb
filds
jl
ret
shrl
dec
test
mov
xorl
pop
mov
mov
sahf
mov
ret
les
in
faddl
out
adc
jle
dec
test
mov
push
add
fsts
add
loopne
sbb
sbb
out
cmp
sbb
mov
inc
cmpsb
pop
or
jg
js
mov
out
fstpl
jge
cltd
sahf
xchg
inc
pop
inc
pop
orl
lcall
cmc
test
mov
lea
or
dec
pop
fldl2t
sbb
push
cmp
cmp
out
test
cld
and
or
fidivrs
in
inc
ds
js
cmp
sub
lret
sbb
pusha
sbb
sti
scas
out
aad
out
fadd
cmp
inc
mov
sub
mov
movsl
sbb
pushf
enter
dec
and
mov
jae
xor
outsb
fidivrs
mov
out
xchg
jl
cmp
sub
xchg
jle
adc
mov
sbb
lock
inc
fucomip
pop
cmp
mov
xchg
iret
xor
test
inc
scas
and
adc
loope
orb
movsl
mov
arpl
mov
or
lds
jg
push
ret
mov
jns
pop
sbb
je
xchg
mov
jmp
jmp
in
pop
xchg
cwtl
les
mov
addb
jmp
lret
ret
icebp
cwtl
push
sub
iret
inc
jns
pop
jns
fadd
xchg
jnp
mov
fdivs
mov
dec
pop
sbbb
inc
jnp
jnp
clc
bndstx
mov
mov
mov
xor
mov
enter
adc
xchg
sbb
pop
xor
pop
cmpsl
mov
add
popf
fsubs
fmul
pop
pushf
int
adc
int
pushl
es
jp
bound
lcall
popa
cli
push
shlb
dec
lret
add
mov
jg
dec
and
pop
inc
and
add
out
je
push
call
sbb
jle
popa
sbb
add
outsb
aad
sub
adc
fdivs
jnp
add
mov
les
loop
jmp
sbb
and
mov
inc
jo
cmp
je
sbb
imul
jne
aas
pop
inc
loopne
ja
pop
sti
pop
jle
pop
inc
dec
push
lcall
sub
gs
add
test
push
ret
ror
xchg
push
dec
fnstcw
negl
sub
aaa
clc
into
inc
gs
rep
or
lcall
mov
movsb
dec
mov
aas
xor
stos
fimuls
cwtl
mov
mov
pop
push
xchg
int3
pop
mov
sbb
les
mov
pop
and
movsl
in
pop
xor
test
mov
dec
mov
mov
outsl
roll
call
pop
in
xor
test
adc
ss
movb
stos
das
xchg
pop
mov
aas
pop
push
icebp
ret
lds
lret
mov
pop
in
in
mov
jnp
lret
and
fmull
lods
jno
pop
sbb
in
inc
cld
cmpsl
rcll
imul
ljmp
pushf
or
fidivrs
cld
sbb
pushf
or
dec
movsl
leave
mov
cmp
jnp
fadd
xor
test
sbb
jp,pn
shr
xchg
cmp
dec
push
cmp
and
dec
sbb
jnp
ds
cmc
add
push
add
popf
sarl
fimuls
xchg
lret
movsl
rol
clc
lret
xlat
xor
loop
adcb
dec
test
mov
fdivrs
iret
out
xchg
test
jle
lahf
xchg
cmp
mov
jns
rcr
aas
xchg
mov
lods
enter
std
inc
adc
push
mov
add
test
mov
add
adc
dec
repz
xlat
lcall
and
xchg
clc
pop
fdivr
cwtl
loopne
enter
mov
pop
mov
jecxz
aam
push
pop
sbbl
sti
mov
inc
lcall
jp
lea
xorb
test
iret
xchg
dec
and
ret
ret
rorl
in
stc
sbb
inc
data16
jge
lock
cmp
ficomps
cmp
pop
push
cmp
lahf
mov
cmp
pop
pusha
out
nop
stos
sti
sub
cltd
xor
jae
cli
out
pop
dec
pop
mov
push
in
dec
push
xchg
sbb
jp
popf
mov
push
push
xchg
mov
inc
test
fistpl
scas
jnp
mov
scas
sti
or
lods
sbb
pop
jo
add
sub
inc
xchg
push
call
inc
clc
sub
insb
add
cmp
sbb
mov
cmp
les
push
mov
sbb
cli
cmp
mov
imul
xlat
mov
aas
sub
lock
cmp
sub
xlat
ficompl
jne
scas
mov
xchg
lea
cmpsb
stos
sbb
cwtl
jg
sub
out
into
fwait
mov
mov
ret
add
es
out
rclb
aaa
cmpsb
aam
aam
cwtl
daa
insl
pop
dec
xchg
jbe
pop
outsb
pop
jg
das
pop
roll
repz
ret
sbb
idiv
data16
mov
daa
xor
inc
out
lcall
adc
sbb
test
jle
pop
add
fsubs
sub
fdivl
and
js
inc
das
xchg
icebp
mov
xchg
push
cmpsb
nop
jle
enter
sti
mov
mov
sub
das
rorb
mov
mov
mov
jns
out
jbe
fnstsw
test
mov
xor
inc
jne
cmp
imul
outsl
xchg
xchg
fdivl
jecxz
gs
je
imul
cwtl
enter
fdivr
orl
inc
outsl
xchg
adc
jmp
mov
sub
filds
lahf
sti
pusha
into
inc
sti
cmp
pushw
cmp
mov
loop
lods
xchg
inc
or
dec
cld
gs
lret
mov
xchg
pop
lea
and
int
pop
rorl
into
mov
xor
inc
arpl
mov
arpl
jae
push
pushl
jg
popl
les
aam
pop
fdivl
jecxz
ret
mov
mov
fstpl
inc
inc
mov
xchg
or
aas
lret
sbb
sarb
mov
xor
and
test
pushf
int3
jg
dec
js
jae
scas
bnd
orb
sbb
adc
pusha
jl
sbb
sbb
cld
scas
or
push
mov
mov
incb
cld
xchg
fdivrs
in
rclb
lds
ret
and
adc
mov
cmp
cli
lret
inc
notl
and
js
lds
pushf
cltd
and
es
jnp
sub
mov
sub
lret
sbb
mov
enter
inc
dec
cmp
jnp
aad
cs
push
sub
inc
fdivl
fildl
mov
jg
sbb
xchg
sti
add
inc
sub
mov
fsubl
xor
inc
push
cs
sti
or
xchg
jge
pop
insb
pop
dec
jl
mov
mov
mov
mov
test
add
fnstsw
or
call
cmp
add
ficompl
mov
jae
into
jae
xchg
lea
test
and
inc
int3
or
cld
push
lods
pop
cmpsb
sbb
sbb
jecxz
fdivl
inc
mov
imul
sti
arpl
sbb
xorb
push
pushf
aam
cmp
test
sti
fwait
fs
sti
sub
std
in
scas
sub
add
jp
pop
dec
mov
or
inc
jle
mov
stos
dec
cli
lock
pop
cmpb
xchg
sbb
jp
mov
orb
inc
pop
outsb
movsb
jnp
pushf
add
pop
mov
pop
sbb
clc
lret
xchg
sbb
sti
lret
xor
jecxz
xchg
cmp
roll
ds
mov
ret
scas
fcmovnb
pusha
sahf
sub
push
jg
pop
cmp
jge
add
nop
dec
push
pop
test
push
push
roll
enter
loop
sti
xchg
int
cli
stos
push
imul
mov
loope
mov
in
fbld
cwtl
idivl
jno
sbb
call
aad
lcall
xchg
rcrb
sub
push
sarl
dec
cmc
iret
jae
out
or
dec
mov
pop
pop
cwtl
ss
mov
sub
mov
std
push
mov
mov
push
push
fsubl
int
pop
fsubp
push
fnstsw
jno
xlat
clc
out
xor
stos
xor
mov
in
lret
out
stc
jno
pop
sbb
lahf
filds
mov
mov
or
cli
shlb
filds
cltd
xchg
pop
pop
xor
add
push
dec
dec
aas
pop
pop
mov
cmp
jne
sub
cmp
das
cmp
mov
dec
out
cmp
jp
cltd
inc
push
int
cmpb
sub
add
xchg
pop
xlat
mov
xor
les
mov
pop
stc
adc
xchg
lret
addr16
or
stc
sub
dec
mov
test
cltd
xrelease
mov
pop
ds
loop
ficoms
mov
pop
add
adc
sbb
out
out
fdivr
add
pop
push
jb
sbbl
lods
imul
mov
stos
jns
xchg
out
mov
or
leave
cmp
jo
jns
mov
lahf
add
and
repnz
cmp
dec
dec
insl
pop
lods
cmp
sahf
fldenv
pop
orb
lea
fcmovb
lods
aad
push
dec
jae
add
ret
sahf
sbb
sahf
push
jns
push
sbb
add
mov
sti
mov
adc
popa
pop
and
jge
jle
mov
loop
es
xor
fcomi
dec
inc
mov
jns
insb
lret
push
add
pop
and
cmp
mov
enter
jo
sbb
push
sub
mov
push
adc
adc
lahf
jnp
pop
mov
mov
cmp
sbb
ficomps
pop
sbb
test
mov
lcall
pushl
mov
xorb
scas
inc
iret
mov
insb
xchg
sub
aam
mov
fmul
or
js
sub
xorb
cwtl
add
sarl
mov
mov
shl
ror
lcall
mov
push
ds
jmp
mov
sub
fmuls
loop
int
movsb
jnp
jns
push
nop
jne
adc
adc
scas
stos
mov
dec
int
ds
push
out
data16
sub
repz
dec
adc
push
adc
jbe
stc
cmpl
hlt
imul
cmp
mov
shr
cwtl
test
jmp
pop
adc
inc
push
jg
sbb
mov
add
jmp
mov
cmp
add
and
sub
lahf
sbb
insl
xor
xlat
sub
mov
dec
fdivl
push
lahf
mov
mov
jmp
out
filds
fwait
mov
push
nop
sti
sbb
cmp
jmp
ret
mov
mov
movl
sbb
or
mov
mov
sbb
mov
sub
mov
or
rclb
leave
in
sub
out
sbb
xlat
jne
andl
mov
dec
push
mov
xchg
sbb
popf
fdivrl
testl
mov
cli
add
in
push
mov
cmp
fnstcw
add
push
jl
ret
dec
arpl
stos
mov
or
aas
nop
add
divl
lods
xchg
or
stos
cs
dec
push
inc
js
adc
sbb
pop
pop
dec
push
sbb
rcl
pop
mov
fildl
mov
imul
ja
sbb
xchg
cmp
sub
iret
push
dec
mov
vpand
push
insb
ja
pop
pop
xchg
aas
scas
mov
in
rol
mov
mov
or
push
push
pop
push
loop
popl
xchg
out
mov
jmp
js
ficoms
adc
push
movsl
filds
inc
inc
jno
sub
cmp
sub
adc
incb
scas
inc
or
or
and
mov
iret
pop
sbb
or
mov
or
enter
jnp
movq
repnz
xor
lcall
push
or
xor
iret
ficompl
addr16
or
pop
mov
sub
and
jno
jmp
jnp
stos
stc
aam
call
lock
sub
iret
ret
movsl
sbb
xchg
add
ret
outsb
pop
cwtl
jmp
mov
or
add
add
and
cmp
call
jle
pusha
loope
pop
mov
das
mov
mov
stc
adc
inc
mov
test
mov
inc
test
jecxz
aam
out
sahf
nop
dec
inc
scas
mov
ret
xchg
out
in
xor
and
xchg
in
das
les
lods
imul
inc
in
pop
outsb
aaa
adc
inc
jge
pusha
fwait
pushf
cwtl
mov
and
mov
mov
std
push
ds
mov
movsb
xor
cld
adc
shl
cli
dec
test
loopne
push
fimuls
mov
aas
jecxz
stos
lcall
xchg
arpl
and
sbb
adc
sbbb
rol
lahf
cmpb
sub
loop
lcall
push
dec
mov
insb
inc
les
adc
cmpsb
test
sub
xorl
mov
push
mov
fistps
and
in
sbb
cmp
test
movsb
adc
sahf
clc
sbb
stos
les
popa
aas
bound
mov
xchg
sub
fcmovnbe
mov
dec
int3
ficompl
incl
push
jno
mov
outsb
adc
out
mov
cwtl
aas
mov
mov
push
pop
cmp
test
mov
cmp
sub
mov
mov
out
rclb
jae
out
pop
xchg
xchg
dec
pop
rcl
pushf
in
fisubrs
or
test
out
add
incl
lret
dec
pop
jle
neg
outsb
data16
inc
inc
out
sbbb
xor
push
inc
jb
es
sahf
xchg
cwtl
xchg
pushf
mov
movsl
jg
sbb
mov
aas
push
daa
int
and
scas
imul
mov
jl
add
scas
lahf
in
popf
mov
pop
dec
mov
dec
xchg
cmp
cwtl
sbb
jl
pop
pop
push
jnp
pushf
incb
mov
adc
rolb
sbbl
lcall
lcall
or
lret
xchg
sti
mov
push
stc
lcall
into
sbb
push
xor
lods
sub
mov
pop
ret
pop
sahf
sbb
movd
mov
subl
dec
push
adc
adc
test
push
sete
loope
mov
into
rcrb
xchg
sub
ret
mov
cmpsl
mov
repz
cmc
mov
lods
jo
test
sahf
xchg
push
mov
mov
out
movsl
cli
insb
xchg
test
pop
rcrl
out
enter
arpl
add
adc
rcrl
or
pop
or
sbb
cmpsb
dec
lret
sbb
decl
push
les
clc
adcl
loopne
mov
jbe
aas
test
lahf
shll
pop
mov
imul
cmpb
in
cmp
push
jl
and
mov
adc
fdivrl
dec
xor
inc
clc
sbb
jle
lock
test
mov
pop
jns
mov
mov
push
mov
leave
mov
jle
push
mov
js
add
cmp
rcrl
jp
jge
add
dec
ret
jge
loop
and
es
mov
cmp
xor
mov
cmp
push
scas
xor
inc
xlat
pushf
loopne
inc
xor
sbb
mov
mov
sub
mov
ljmp
jle
adc
aas
aad
push
movsl
sarl
fsubl
inc
popa
mov
cmpb
test
dec
mov
and
inc
mov
mov
or
mov
pop
sti
je
mov
push
stc
mov
inc
xchg
mov
sub
mov
mov
sub
mov
cvtpi2ps
jo
sbb
ret
test
cwtl
xor
push
sbb
xchg
lret
sub
movb
mov
sub
jecxz
sbb
xor
mov
sahf
dec
inc
mov
out
jb
sbb
jg
cmp
mov
fstpl
jmp
mov
adc
cli
pusha
loop
call
lret
mov
lcall
pusha
inc
sbb
lret
int
and
sub
aas
sbb
jno
bnd
fcoml
clc
xchg
fcomps
inc
fistps
mov
jnp
stc
jo
pop
mov
insb
in
sbb
cmpsl
out
popa
mov
push
mov
popf
push
in
mov
xchg
sti
mov
mov
push
popf
dec
lods
sub
negl
call
stos
aas
mov
push
call
sbb
and
jl
std
pop
and
cmpsb
aas
js
and
add
cli
xor
outsb
add
pop
iret
mov
dec
pop
xchg
test
pop
outsl
sub
jo
jmp
xchg
push
inc
mov
int
test
fimull
loop
out
inc
scas
cmp
xor
sub
dec
lret
adc
sub
jnp
leave
cmp
testb
push
xchg
in
jne
in
clc
pop
sti
adc
lahf
popa
shr
sbb
pop
cs
sbb
adc
cmp
jnp
scas
or
add
fmull
sub
pushf
xlat
jg
imul
loopne
dec
mov
or
iret
outsl
inc
clc
insb
cmpsb
inc
out
sbb
xlat
mov
hlt
mov
cmp
cmpsb
mov
add
adc
and
stos
icebp
and
sub
add
sbb
jnp
and
dec
testl
add
leave
cmc
mov
loopne
cmp
popf
cmc
fadds
cmp
pushf
lahf
imul
sbb
lret
and
js
or
mov
adc
stc
mov
dec
sbb
mov
xor
pop
xor
xor
push
mov
outsl
jl
cli
ss
movl
pop
jnp
repz
ret
push
push
in
enter
push
test
dec
fldenv
xor
jl
rolb
add
sbb
mov
cmc
fdivrp
mov
xchg
pop
adc
call
push
add
jle
jnp
fmul
out
nop
pop
notl
mov
mov
dec
sbb
scas
sti
dec
clc
mov
push
adc
mov
jae
pop
adc
mov
push
dec
sbb
or
xlat
andb
fdivrl
les
ljmp
sbb
popf
in
fidivl
mov
jbe
aad
mov
sub
in
fsubrl
push
cmp
icebp
std
mov
mov
lea
stos
mov
pop
loope
out
in
cmp
xor
rolb
or
repnz
js
cmpb
xchg
and
sub
adc
mov
push
dec
mov
add
stos
inc
mov
and
fstpl
and
sbb
jb
scas
xchg
test
inc
pop
ja
ds
xchg
lds
jmp
sbb
cwtl
pushf
int3
push
mov
cmpsb
fdivr
cwtl
jl
stos
and
sahf
arpl
sub
sahf
sti
outsb
jbe
inc
inc
pop
jno
and
dec
int3
xor
adc
cld
pop
outsb
jo
xor
xor
cmp
lods
mov
call
push
inc
incl
sbb
adc
fnstenv
mov
mov
mov
mov
push
push
into
mov
mov
sbb
mov
clc
xchg
sbb
adc
mov
xor
fidivl
jmp
or
mov
dec
add
jecxz
popa
jo
xor
mov
daa
in
add
jecxz
aas
shrl
jg
js
mov
push
loop
int
sbb
mov
in
daa
es
pop
mov
hlt
dec
lds
aad
mov
aas
popa
xchg
in
lcall
mov
pop
enter
mov
adc
test
jg
add
cmpb
sub
jmp
lret
xchg
mov
sub
movsb
fisttpll
xor
xchg
fnstcw
in
xor
fsubr
pop
push
add
and
push
adc
das
xor
jne
mov
cmpsb
cmp
xor
popf
jl
imul
leave
sbb
jg
cmp
and
mov
scas
jns
fildl
sbb
jmp
and
pop
lea
and
pop
lret
pop
jmp
scas
xchg
fs
mov
cli
pop
fdivr
cli
je
xor
mov
cmpsl
outsb
pop
mov
ret
fcomp
mov
cli
shl
imul
push
aas
lcall
mov
fdivl
rorl
adc
das
sub
cmpsl
cwtl
daa
mov
lock
nop
jb
mov
cmp
pop
jno
add
pop
push
ja
mov
test
mov
xchg
xchg
sbb
and
sahf
test
mov
xor
adc
or
mov
cmpb
or
jmp
jo
outsl
and
imul
js
xchg
scas
pushf
roll
dec
pop
repz
push
lods
scas
scas
mov
cmp
es
xchg
lods
mov
lcall
mov
daa
sbb
and
or
cmp
mov
cmp
nop
mov
insl
inc
outsl
adc
pop
rcrl
mov
mov
mov
push
jle
sbb
fcoml
or
scas
nop
sti
sub
mov
pusha
out
pop
loopne
rclb
mov
ljmp
ljmp
sahf
in
push
lret
out
enter
fwait
lock
or
push
cltd
xlat
ret
mov
daa
popf
les
cld
inc
scas
cmp
aaa
pop
sbb
mov
xchg
lret
xchg
insl
xor
test
out
mov
cli
sbb
pop
jp
vpunpcklqdq
mov
mov
pop
xchg
cmp
xorl
mov
stos
or
out
clc
sarl
in
mov
inc
pop
clc
stc
dec
mov
fstpt
inc
out
sbb
inc
lds
inc
shrl
jno
popf
mov
stos
sti
loope
jnp
cltd
pushf
mov
mov
fmull
jle
mov
ret
divb
jo
sbb
jae
jns
ds
push
jo
fistpl
jl
and
push
ja
inc
pop
jg
hlt
inc
in
sub
pushl
hlt
xlat
adc
sub
rorl
adc
insl
push
pop
add
jle
pop
push
ja
pop
pop
inc
das
aas
outsb
adc
mov
idiv
out
loopne
fcompl
mov
xor
nop
mov
ret
das
cwtl
mov
cmp
inc
mov
jnp
sub
ss
lods
sti
enter
sbb
jo
mov
aas
xchg
and
mov
lret
mov
mov
lods
popa
add
fcoml
arpl
hlt
push
pop
adc
stos
pop
push
into
lcall
cmp
cmp
xor
mov
dec
xchg
lcall
mov
pop
add
and
stos
lods
fldt
mov
pusha
jmp
iret
in
movsb
mov
fnstenv
cmc
je
daa
dec
std
mov
pusha
jle
sbb
push
test
loope
sbb
dec
mov
aas
inc
pop
loopne
sbb
mov
test
inc
or
sbbb
lds
scas
mov
outsl
pop
jle
hlt
cmp
int3
repz
cmp
or
adc
insb
mov
pop
xor
mov
cwtl
sbb
xor
dec
ret
and
clc
mov
sbb
fidivl
je
lahf
in
push
mov
mov
cmp
push
mov
setl
sub
mov
inc
cltd
push
adc
mov
call
or
xor
pop
jle
ret
mov
int3
dec
xchg
loope
adc
inc
iret
incb
mov
jno
xor
xchg
int3
out
mov
cli
shll
sbb
call
ret
loopne
call
popa
stos
jmp
push
xor
icebp
push
dec
sub
scas
into
in
adc
int3
xor
repnz
cmpl
push
xchg
mov
cmpsb
ret
sub
ja
jl
cmp
pop
popf
cmpsb
out
mov
push
cld
inc
incl
jg
mov
orb
and
lret
pop
and
fxtract
stos
lods
ja
fwait
lahf
jne
jbe
sbb
stos
mov
pop
pop
mov
js
mov
iret
pop
xor
in
fs
stc
xchg
xlat
mov
cmp
xor
mov
test
sbb
cmp
cmp
xchg
cmp
rclb
leave
push
cmpl
sbb
fwait
in
xchg
cmp
mov
rclb
jo
fmull
les
stos
mov
clc
cwtl
ret
sub
inc
rcl
loop
daa
fisttpll
into
aas
subb
sbb
mov
ret
fs
aam
imul
leave
adc
jo
testb
call
sub
adc
push
loope
cs
mov
movsb
add
out
lret
popf
pop
inc
dec
push
cwtl
push
pextrw
mov
fstpl
inc
imul
or
add
mov
lcall
aas
xlat
fmuls
ja
in
jg
dec
mov
ljmp
xor
sbb
dec
orl
pop
xchg
push
mov
cmp
cmpb
mov
xor
xchg
push
ret
pop
sub
lods
cmp
mov
mov
lahf
int3
into
out
into
xchg
int3
fdivr
lret
fucomp
ficoml
insl
push
arpl
insl
or
out
pop
popf
sub
or
add
stos
stos
jl
xorl
push
lcall
or
mov
out
mov
xchg
mov
aam
pushf
lret
cmc
int
xchg
daa
int
mov
jl
dec
jp
pop
das
stos
adc
in
out
lret
add
lcall
mov
mov
cmp
scas
cmpsl
push
pushf
clc
andb
sbb
std
jg
stos
pushw
pop
in
shrl
popf
push
lret
jnp
lds
ficoml
pop
pop
push
sbb
jg
mov
mov
imul
pop
ss
mov
inc
ja
adc
xlat
aas
add
es
xchg
jnp
sbb
xchg
out
pushf
cwtl
xchg
cwtl
add
fcoml
test
pop
in
push
adc
clc
jnp
dec
scas
arpl
loope
aas
mov
sub
mov
or
data16
aas
inc
xchg
push
mov
inc
ds
pop
stc
mov
out
sbb
movsl
add
out
gs
pop
daa
adc
imul
pop
pop
nop
call
pop
scas
out
filds
pop
sti
scas
sbb
fdivl
pop
sub
and
rcl
inc
xor
mov
arpl
push
mov
fwait
lods
inc
or
cmp
sub
mov
mov
js
cmpsb
loope
enter
outsl
push
cmp
out
loope
mov
andl
xor
mov
fcoml
ss
lods
fwait
hlt
inc
into
pushf
push
cs
rcr
mov
jl
jle
mov
cmpsl
movsl
negl
cmp
pusha
outsb
xor
ss
inc
loopne
add
inc
jno
lcall
jl
and
cwtl
adc
cmpsb
cltd
mov
icebp
decl
pop
lahf
arpl
sbb
jbe
add
inc
sbb
enter
fmulp
mov
cmp
jp
xor
fucomi
push
cmp
aad
insb
iret
dec
adc
ljmp
cmpl
cmp
je
add
push
gs
or
pop
xchg
insl
xchg
cmp
inc
scas
notl
icebp
add
sbb
push
xchg
mov
cmp
jmp
push
jle
or
test
add
add
and
iret
mov
mov
lret
in
pop
repz
test
xchg
and
adc
pop
ljmp
hlt
and
add
jne
divb
push
pusha
out
fdivl
jle,pt
dec
xor
movsl
sti
fstps
repz
adc
or
sarb
test
pop
ds
dec
adc
push
mov
jae
stc
into
fisubs
inc
pop
test
sarl
jmp
mov
jg,pn
xor
shrb
icebp
jp
imul
js
fistpll
cld
xchg
cmpsb
push
adcl
jae
je
fisubs
mov
sbbl
ret
mov
or
add
xchg
pop
aas
inc
fs
cli
sub
lds
mov
daa
lods
pop
jg
xchg
cwtl
pop
in
dec
ret
mov
sbb
xchg
xchg
sub
pusha
sub
dec
jmp
sub
jmp
pop
sbb
out
jbe
mov
jbe
add
fcomps
mov
imul
mov
pop
dec
jne
int
imul
daa
test
fistps
lods
fwait
add
mov
ret
mov
xchg
sbb
fcomp
sbb
in
inc
or
pop
popa
inc
xchg
pop
ds
push
jbe
cmp
fwait
cmp
ret
dec
sbb
mov
andl
mov
mov
pop
inc
mov
mov
inc
outsb
jmp
dec
xor
add
xorl
mov
lea
lahf
add
mov
arpl
fmuls
xor
pop
mov
fs
inc
mov
jae
push
pop
cmpl
in
xchg
bound
jo
mov
repnz
cmp
sbb
jo
sahf
xor
and
mov
call
imull
test
cmp
mov
mov
out
mov
gs
pop
adc
or
pop
or
mov
sahf
sbb
or
dec
mov
inc
xlat
filds
pop
in
xor
dec
mov
mov
mov
adc
vaddss
lahf
mov
je
pop
lcall
rcl
sbb
and
mov
cmp
bound
jp
lcall
leave
mov
add
inc
mov
dec
std
lahf
inc
imul
mov
sub
xchg
int
fisttpl
pop
mov
fs
das
ret
pop
call
pop
adc
sbb
mov
decl
xchg
cltd
or
stos
cmc
arpl
popa
xor
pop
add
push
loope
cli
or
repz
arpl
fs
mov
jns
movsl
jnp
ss
push
movsl
or
ret
lret
sbb
in
xchg
imul
test
cli
push
cmc
pop
xor
movsl
pushf
cltd
jbe
dec
or
fs
cwtl
sbbb
pushf
scas
xchg
int
aad
mov
and
fnstsw
cmpsl
popf
mov
or
mov
scas
je
in
popf
jnp
dec
and
mov
lcall
sahf
pop
clc
add
rolb
jl
stc
sbb
jo
pusha
lret
sahf
jp
testl
sahf
mov
xor
mov
hlt
cmp
adc
jno
pop
repnz
sub
pop
jecxz
sets
jns
aam
cltd
dec
pushf
jbe
and
xor
in
cmc
test
add
adc
stos
pushf
jo
cmp
outsb
mov
push
negl
jbe
enter
cmpsb
sbb
es
cli
arpl
hlt
pop
mov
adc
test
ss
xchg
sub
adc
sbb
mov
mov
fstps
mov
ret
pushf
pop
push
popf
mov
cli
imul
mov
fwait
or
pushf
int
inc
std
cmc
cwtl
xchg
adc
aad
popa
in
jecxz
test
sub
cli
add
pop
xchg
imul
and
aad
fsubs
cmp
mov
roll
icebp
loop
push
pop
subl
jno
lea
test
sbb
arpl
shr
idivl
inc
xlat
shlb
mov
pop
mov
mov
jmp
int3
mov
stos
pop
push
ret
xor
shrl
or
fidivrl
add
cmp
mov
cmp
dec
pop
xchg
sbb
push
mov
adc
enter
ret
loop
sbb
leave
cwtl
and
out
lret
push
call
sbb
sti
popa
pop
or
dec
je
and
aas
nop
into
out
bound
arpl
jmp
dec
popa
cmp
jmp
cmp
push
insl
call
sbb
push
cltd
mov
push
and
cltd
and
cmpl
mov
filds
jbe
sbb
lods
shll
sbb
mov
push
cli
jae
dec
mov
push
rorb
cmp
pushf
mov
out
stos
incl
ds
adc
lods
mov
pop
xor
sub
sub
sbb
repz
add
int3
loope
jo
xchg
rol
inc
mov
lret
cmp
hlt
icebp
pop
mov
loope
lods
xchg
adcl
lret
adc
push
mov
rolb
and
cmp
cmp
inc
xor
cmp
jo
sub
int3
jle
jbe
jp
in
sahf
push
fsts
insl
jge
pushl
sbbb
les
dec
ds
lcall
dec
xchg
mov
mov
loope
rorb
pop
jb
ret
jl
xchg
sti
loopne
gs
insl
push
mov
cwtl
pop
mov
stc
sbb
adc
pop
int3
add
inc
loop
call
xor
xchg
push
cmp
inc
sahf
and
sbb
lcall
cld
ds
ds
or
in
neg
sbb
loop
and
or
imul
pop
lods
inc
cmp
inc
stos
sti
nop
insb
jae
fildll
inc
sbb
cmp
fstpt
lock
outsl
sbbl
push
sahf
pop
mov
and
mov
mov
pop
ja
sub
aaa
repz
mov
nop
imul
mov
jns
sbb
mov
xchg
or
aaa
into
leave
or
jbe
add
cmp
or
ss
js
stos
or
fmull
cmp
sub
xchg
push
fdivs
sti
mov
sub
outsw
xor
sub
mov
and
ficompl
or
loope
xlat
out
sahf
adc
add
xchg
and
xchg
daa
ret
scas
lock
mov
jge
pop
fnstcw
ja
mov
out
int3
and
rcll
fadds
mov
test
in
out
mov
stos
dec
hlt
mov
mov
mov
sarl
fwait
cmpsl
arpl
mov
xor
scas
mov
or
subb
mov
sub
insl
push
cmc
jle
out
jns
mov
xor
pop
jns
cmc
cmp
add
push
and
mov
fadds
cld
insl
test
les
cmp
sbb
aam
and
sbb
push
mov
sbb
lods
les
pop
lea
and
jno
jg
and
sbb
shrl
push
movsl
jg
sbb
cmp
arpl
sbb
fs
jl
jmp
cwtl
fs
jl
xchg
jnp
sbb
mov
xchg
sti
pop
movsb
cmp
or
lea
lcall
aaa
aam
clc
pop
fwait
sti
stc
sub
int
add
jmp
mov
stos
xchg
cmc
xor
inc
sti
jns
rcrb
adc
xor
scas
mov
pop
push
xchg
mov
jno
pushf
shll
pop
in
pop
cmp
sahf
sub
ficomps
imul
mov
int
outsb
cmpl
fildll
adcb
arpl
outsb
ss
and
sbbb
mov
insb
cmp
xchg
jle
test
jle
sbb
or
dec
and
out
mov
add
sti
lret
sbbb
cmp
or
mov
pop
xchg
dec
sub
stc
or
mov
cmpb
jne
push
and
fldl
mov
fisttpl
cs
dec
push
faddp
push
repz
loope
scas
in
popf
and
pop
sbb
addr16
push
fdivl
std
mov
cwtl
cmp
int3
into
loopne
sti
adc
js
sbb
or
dec
ds
pushf
fisttpll
insl
movsl
inc
cli
cmp
cld
pop
pop
and
popf
sti
or
cmp
add
add
pop
mov
lods
jnp
dec
jle
jae
mov
xchg
rolb
or
mov
in
cs
sbb
movsl
data16
dec
cmp
andb
aaa
sbb
jg
gs
bound
inc
ljmp
mov
cli
lcall
fwait
push
pop
jp
mov
and
aam
cmc
loopne
xorl
adc
inc
sub
aam
adc
jle
dec
in
xchg
xor
sahf
sarb
mov
rorl
mov
cwtl
xchg
dec
add
mov
jle
je
fsubr
push
sub
fcoml
into
pop
adc
dec
test
subl
cmpl
xor
jp
mov
mov
rcrl
int
pop
or
xchg
cmpsl
jo
push
outsl
and
add
mov
push
rcrl
lahf
xchg
adc
and
dec
pop
inc
bound
out
cwtl
pushf
ja
ds
incb
lock
push
subl
addb
mov
mov
sbb
fsubrs
hlt
and
pop
mov
jnp
fimuls
inc
sbb
sbb
out
aas
aam
sbbl
mov
jnp
cmc
mov
fcmovu
pop
dec
lret
int
mov
hlt
adc
and
dec
int3
loopne
popa
and
loope
jae
iret
mov
scas
ficompl
cmp
mov
imul
add
mov
out
mov
test
cltd
pop
add
pushf
leave
cmp
mov
aam
mov
into
stc
dec
outsl
into
sub
mov
adc
cmp
bound
mov
fs
lret
sub
mov
popf
mov
test
jne
push
cs
insl
push
in
pop
cmc
inc
push
lret
sbb
repz
je
nop
jl
or
daa
and
aam
into
stos
out
sbb
stos
xchg
cmp
and
xlat
out
sbb
pop
js
aas
and
pop
outsl
xor
jg
fmul
cmp
orl
cmp
xor
dec
push
jb
fbstp
adc
jnp
mov
mov
pushf
popf
push
cld
pop
pop
mov
push
xchg
mov
mov
leave
aaa
pop
mov
sbb
scas
cmp
mov
int
mov
inc
daa
cmp
in
pop
scas
sbb
inc
mov
call
aas
enter
and
int
outsl
inc
xchg
xchg
sub
xor
dec
xchg
lret
jno
mov
loopne
adc
mov
sbb
js
add
add
mov
jmp
stos
fldt
jmp
dec
popa
or
mov
call
sbbl
sbb
arpl
xor
lods
or
adc
xchg
pop
jno
mov
fadds
into
or
xchg
dec
cli
jne
in
insb
add
adc
add
jmp
adc
dec
or
dec
and
sub
pop
std
daa
xchg
mov
mov
mov
sbb
adc
call
push
fdivl
fmulp
cmp
fwait
mov
mov
call
fstpl
aaa
mov
mov
inc
xor
mov
fisubrs
in
mov
adc
add
cwtl
sub
cli
ds
and
pop
out
mov
or
push
adc
sbb
jno
insb
loop
jbe
neg
loope
jae
push
aas
mov
lret
push
mov
jge
icebp
jb
xlat
mov
sbb
sbb
test
or
pop
in
cwtl
push
mov
repz
aas
add
leave
add
jle
negb
pop
sbb
jno
test
adc
push
sub
cmp
dec
add
jo
sbb
push
leave
sbb
sbb
fsubl
cmp
mov
scas
jnp
test
mov
push
daa
int3
lret
sti
ss
ret
aad
inc
jl
jg
rolb
sahf
or
xor
fmull
rcrl
int
or
and
lcall
dec
cld
rcr
jns
sbb
pop
fadds
lcall
mov
stc
add
mov
mov
xor
xlat
icebp
sub
cmp
push
pop
cld
rorl
xchg
jecxz
test
xchg
cmpsb
pop
sub
mov
mov
xchg
js
fndisi(8087
cld
xlat
mov
ret
ljmp
or
movsl
adc
cmc
lods
pop
xchg
adcb
fmul
mov
mov
inc
mov
lret
js
jg
mov
cmpl
mov
loop
adc
or
add
adc
movsl
ljmp
or
sub
das
les
int
mov
pushf
adc
pop
sbb
sti
add
out
dec
cli
sarl
outsb
js
mov
push
adcb
pop
loopne
das
lods
sbb
fidivl
lea
cwtl
aad
test
xchg
loop
lahf
push
ja
mov
divl
jns
push
sbb
in
mov
sti
and
mov
mov
add
add
cmpsb
cmp
fld
mov
repz
imul
orl
dec
pop
ficompl
test
lods
lods
mov
dec
push
push
out
out
sub
xorb
pushf
incl
int3
jno
dec
or
pop
cmp
xchg
and
out
sbbb
loop
andb
es
mov
lret
out
sbb
jbe
pop
jnp
test
loop
ds
pushf
pop
fcoms
icebp
dec
stc
cmp
fcmovb
hlt
movsl
cltd
fdivs
push
mov
pop
stos
int
sti
or
test
lods
jne
sub
sarb
add
add
lcall
cmc
sbb
aas
dec
ds
mov
movl
jecxz
lods
fistl
cwtl
mov
adc
cs
push
rcrl
sbb
imul
xor
nop
fdivrp
mov
out
cmp
jle
cmp
subl
xor
sub
scas
mov
andl
mov
adc
mov
clc
fidivl
xchg
xor
sbb
test
aam
push
in
cld
sub
and
leave
sub
jg
jns
fisubs
mov
das
insb
add
sahf
jl
jb
xorb
orb
dec
mov
xchg
mov
push
sbb
adc
clc
mov
and
jg
mov
popf
ret
ret
leave
sbb
mov
fdivrl
pop
and
dec
lods
adc
ret
fwait
in
pop
cs
pop
inc
jp
in
jb
hlt
mov
or
fiaddl
out
sub
xorl
outsl
mov
xchg
sbb
mov
aam
inc
movsl
pop
loopne
mov
mov
imul
pop
jl
testl
mov
dec
dec
push
lcall
xor
fisttpll
jge
loopne
cmp
int
push
add
repnz
jecxz,pt
lret
mov
dec
fsubrl
sub
xchg
test
dec
cmp
mov
mov
negb
xchg
cwtl
enter
outsb
cmp
fsubr
jmp
mov
fcmove
or
cmp
lds
jo
jp
in
roll
shlb
push
mov
arpl
dec
jl
ret
dec
pushf
cwtl
fcomps
nop
pop
rcr
insl
push
jmp
xchg
cmc
xchg
adc
inc
cld
pop
or
mov
addr16
mov
mov
push
jle
stc
lcall
inc
inc
jne
mov
lahf
lods
pop
hlt
cltd
and
adc
sti
ret
gs
out
cmp
jne
fptan
jb
xchg
mov
sahf
fstl
pop
out
push
inc
scas
mov
mov
inc
adc
cmp
aad
push
cwtl
popa
mov
icebp
ja
pop
cli
mov
push
lods
mov
push
ds
push
or
movsb
subl
push
inc
sbb
mov
js
stc
sub
fcoms
call
sub
xor
mov
stc
out
lahf
test
scas
aas
aas
add
inc
xchg
or
fs
push
pop
es
jecxz
pop
mov
fwait
test
mov
and
daa
pop
mov
pusha
stc
cmpsb
fistpl
jo
lea
sbb
mov
cmpl
cmp
inc
cli
ljmp
or
jg
mov
mov
push
fwait
cmpl
mov
cmp
mov
enter
jns
dec
xor
push
in
push
mov
xor
xchg
push
movsl
popa
mov
mov
dec
std
clc
mov
pop
ja
dec
jp
mov
xor
stc
or
ret
pop
lahf
fwait
jne
xchg
xchg
insb
dec
add
and
lds
sub
loop
loop
pop
xchg
or
hlt
aas
add
and
enter
add
jb
jne
dec
outsl
cltd
aam
mov
xchg
push
sub
xchg
std
arpl
mov
ljmp
cld
push
or
pop
mov
jo
mov
pusha
pusha
mov
pop
rol
nop
jle
dec
iret
lea
pop
cmp
xchg
jnp
ljmp
sub
das
jo
fidivrl
push
into
mov
push
incb
les
push
jnp
mov
and
mov
mov
push
jg
push
xor
sti
popa
dec
adc
test
jo
fucomi
or
stc
aas
arpl
mov
jno,pn
cli
or
mov
clc
adc
xchg
in
pusha
add
dec
mov
fcmovbe
push
inc
push
pop
sahf
ljmp
mov
cmp
push
cwtl
push
aas
fildll
mov
cmpsl
in
js
cmp
push
add
adc
stc
pop
dec
or
test
xchg
adc
mov
ds
pop
scas
int
pop
daa
mov
stc
mov
cli
lret
mov
ret
shrb
cmp
fdivl
pop
cmp
push
xchg
dec
push
stc
sbb
jnp
inc
sbb
sub
imul
loope
loopne
sti
fiadds
loope
xor
mov
push
adc
add
int3
out
mov
pop
add
shll
cmp
mov
fcoms
jno
or
fcoml
mov
aas
sbb
shlb
outsl
sub
popa
cmp
outsb
icebp
js
stos
fistl
mov
add
push
jbe
xchg
lods
out
pop
ss
mov
loopne
lods
sbb
mov
jae
cld
bound
jns
ja
inc
push
mov
loope
mov
pushl
dec
mov
sarl
inc
inc
pop
scas
fidivrs
test
pop
int
ret
inc
ss
dec
enter
adc
aad
aad
pop
jne
in
add
cs
fs
pop
jle
jle
mov
jnp
movsl
jnp
push
and
jmp
out
mov
fistps
mov
cmp
inc
jg
mov
lods
mov
sbb
pushf
cmpsl
sti
mov
int3
sub
je
jmp
dec
incb
mov
and
fcmovne
fdivrp
or
cmp
and
mov
sbb
dec
pushf
out
fisubl
sbb
int
cmp
loopne
mov
jno
push
sbb
pop
clc
ja
xor
sahf
in
sub
lock
outsb
inc
loop
das
jb
cmp
lods
xchg
push
pop
adc
sub
cwtl
cmpsl
std
and
inc
fisubrl
adc
or
fstps
mov
mov
and
fdivrs
fwait
pop
cmpsl
inc
mov
sbb
out
leave
sbb
into
scas
mov
pop
leave
mov
mov
iret
xchg
lock
adc
xchg
rclb
sbb
je
jp
js
xchg
inc
sub
sub
fdivs
into
in
dec
cs
sbb
sub
xchg
cmp
cmpsl
ror
sahf
sbb
fcoms
aas
cmp
adc
jmp
jne
addr16
dec
ds
inc
adc
xor
adc
imull
mov
mov
ljmp
mov
sbb
dec
push
fwait
out
add
in
mov
iret
fwait
sbbb
les
cltd
pop
das
lahf
stos
dec
sbb
bound
or
pop
popa
pop
pushf
js
adcb
mov
sbb
stc
mov
mov
mov
cmp
pop
adc
lcall
dec
mov
pop
or
cmc
pop
mov
leave
scas
mov
fldenv
mov
fcomps
mov
in
push
xor
ss
in
pop
jne
cmp
sbb
xor
jae
loop
cwtl
mov
js
mov
pop
mov
pop
mov
push
shrl
add
mov
mov
cmp
xchg
mov
fcomps
loop
xchg
out
sbb
arpl
jb
push
mov
mov
pop
sti
adc
or
jecxz
mov
fdivs
dec
cli
jg
dec
movsb
push
xchg
test
xchg
cltd
popa
loop
pop
test
add
mov
movsb
aaa
add
sbb
jno
pop
push
fcmovbe
mov
clc
mov
lods
xlat
aad
fadd
in
jle
mov
sub
sub
cld
mov
stos
lock
push
push
mov
cmp
sbb
and
nop
or
cmp
jmp
inc
int
std
add
pop
idiv
adc
mov
xchg
push
or
mov
cmp
adc
dec
lods
fsubl
xor
and
and
pop
xor
push
enter
and
nop
dec
mov
xor
push
jle
mov
sarl
sbb
test
push
push
mov
pop
add
xor
imul
leave
dec
mov
mov
jl
daa
sbb
mull
mov
enter
pop
sbb
cmp
stos
cltd
pop
sub
mov
inc
roll
dec
jp
lcall
pusha
sub
push
sahf
mov
dec
xor
xchg
outsl
mov
imul
das
pop
xchg
dec
xor
fldt
mov
orb
mov
lock
fmuls
and
cld
cwtl
cli
pushfw
mov
push
xchg
cld
hlt
lret
mov
dec
add
add
inc
je
jae
ret
xchg
into
icebp
pop
icebp
push
repz
cmc
movsl
xor
cli
pop
es
lret
scas
cmc
adc
push
cmc
pop
inc
pushf
jnp
mov
into
imul
pop
sbbl
pop
add
push
cs
sbb
xchg
xor
loopne
int3
xchg
lcall
cli
adc
stos
imul
mov
arpl
cmpb
jne
iret
pop
xchg
adc
pop
add
jnp
dec
arpl
sahf
jbe
dec
aas
ljmp
adc
sbb
out
or
ljmp
test
sbb
outsl
leave
in
mov
inc
jp
add
pop
bound
pushf
jnp
cmp
ficomps
test
in
dec
pop
repz
cmpsb
sti
mov
jno
leave
xchg
ss
pop
xchg
xchg
outsl
jg
pop
sbb
lret
pop
add
ficomps
stc
inc
out
cmp
mov
push
push
enter
popf
sti
sub
sub
cmp
daa
mov
out
repz
int
int
fadd
mov
pushl
pop
push
pop
fwait
jne
add
cmpsb
mov
xchg
cld
hlt
jns
xor
iret
sub
fsubl
jecxz
je
push
outsl
mov
negb
fsubrl
std
mov
fcompl
mov
or
test
fildll
dec
cli
or
lds
xchg
iret
sub
push
cmp
cld
insb
ds
lods
add
leave
dec
mov
js
rorl
lret
jne
jae
pop
mov
push
sub
in
or
sub
js
movsb
cmp
mov
pslld
and
shll
cmp
ds
and
push
push
std
sub
mov
sbb
inc
fdivrl
add
add
iret
xchg
ja
repnz
sbb
out
xchg
mov
es
jl
mov
jle
jecxz
push
fwait
cmp
aad
sbb
fbld
sbb
jl
sbb
ret
iret
push
xchg
in
fwait
adc
pop
aas
jae
xchg
cmp
mov
jp
inc
les
mov
cmpsl
dec
cmp
mov
dec
lds
rorl
nop
mov
jg
pushl
or
lahf
loope
jne
and
gs
or
jg
into
ss
mov
xchg
repnz
fcomps
adc
inc
sbb
sbb
push
mov
mov
into
insb
fwait
loope
mov
in
stc
flds
or
xor
rcll
insl
xchg
outsb
sti
mov
cmp
sub
test
clc
cmpsl
cmovae
aaa
mov
jns
daa
stos
lods
dec
xchg
cmp
out
vmread
mov
cmp
or
les
or
sbb
dec
mov
add
outsl
out
data16
cwtl
gs
jle
pop
xchg
sub
nop
xchg
xor
jae
xchg
cwtl
sbb
test
popf
insb
or
mov
add
jae
dec
fstpt
xchg
mov
test
adc
and
jp
sub
cmp
pop
scas
out
jg
loop
pop
pushf
push
cli
and
sti
scas
repz
pop
pushf
in
cmpsb
adc
cwtl
pop
mov
mov
imul
sub
in
dec
add
aas
stc
cmp
pop
adc
inc
scas
mov
fcomps
jecxz
insl
xchg
pop
out
pop
loopne
cli
aas
sub
jle
jle
cmp
jnp
jb
test
les
outsl
ja
mov
inc
cwtl
add
pop
pop
push
shl
test
aam
sub
xchg
xchg
sbb
cmp
adc
loopne
push
mov
mov
dec
sub
lcall
hlt
out
jl
inc
mov
add
inc
es
cs
popa
cmpsl
fwait
push
sahf
jmp
xor
xchg
xchg
rorl
lock
into
dec
andl
dec
cmp
mov
stos
jbe
pop
mov
jne
xchg
sahf
fucomi
cmc
push
pop
pushf
jno
rcrb
jmp
xchg
add
mov
clc
xlat
dec
dec
add
mov
faddl
push
mov
mov
xchg
cwtl
inc
lea
sub
aad
pop
ja
jnp
das
loope
in
jge
int3
jl
scas
pop
fmuls
cli
xor
fwait
add
jns
aas
popw
dec
mov
jle
cld
sub
cmc
fldl
mov
pop
mov
jmp
insl
outsl
js
ss
jnp
test
adc
cli
push
aam
cwtl
int3
jp
sbb
cmp
jns
and
inc
jg
test
cld
idiv
cmp
pop
incb
hlt
xchg
fidivrs
sbb
pop
adc
lret
frstpm(287
clc
pop
mov
and
sbb
sub
push
in
mov
sbb
push
mov
adc
pop
les
mov
xlat
sbb
out
stc
dec
add
stos
enter
and
test
arpl
loop
mov
int
pxor
arpl
push
out
imul
sub
cli
sbbb
lds
jg
mov
push
lcall
or
roll
mov
xor
mov
or
rorl
subl
xchg
fbstp
jb
outsb
ficoml
add
xor
into
push
push
cmp
int
mov
data16
sbb
cmp
lcall
fsub
and
pop
mov
inc
mov
imul
gs
cmp
mov
xchg
fstpl
xor
sub
mov
pop
xchg
add
mov
je
pop
xor
push
out
pop
int3
mov
sti
sub
ja
ficomps
sbb
pop
fisttpl
sbb
inc
inc
enter
filds
dec
mov
je
sti
mov
push
stos
jae
or
aad
stc
xchg
sub
fmuls
jnp
lret
lock
jno
cmp
and
adc
aas
fwait
je
lret
push
adc
jo
arpl
jns
cmpsb
xchg
push
je
aaa
push
ret
aad
sub
xchg
iret
jo
cwtl
pop
je
iret
pop
enter
dec
mov
incl
cltd
mov
mov
bound
call
or
movsl
jp
pop
fidivrl
jns
iret
sbb
test
push
call
pop
out
loop
pushf
shrb
pop
or
mov
pop
push
stos
mov
mov
lret
fdivs
sbb
and
push
imul
xlat
mov
fnstenv
sahf
and
jge
pop
cld
mov
aaa
loopne
cmp
addb
jbe
outsl
pop
jo
lea
xchg
pushf
mov
sbb
mov
ret
sarl
ss
shrb
lods
int3
push
add
ds
lahf
fistpl
loop
add
mov
cmp
sar
inc
ret
sub
mov
and
lods
add
push
clc
rcrl
jne
jne
cmp
out
call
xchg
mov
sbb
push
xor
xor
loope
pop
cmpsl
mov
mov
aas
sbb
popf
cmp
xchg
adc
push
ret
sbb
aas
aaa
pop
mov
cld
aad
iret
dec
or
frstor
test
pop
cs
xchg
jb
lods
pushf
sti
mov
mov
xlat
lods
adc
xchg
xorb
and
lret
rorl
cwtl
push
test
fs
push
sub
in
push
out
lods
mov
dec
sbb
sub
mov
dec
enter
xchg
mov
cmpl
xchg
add
and
fsubrs
mov
rorb
cmp
cmp
xchg
push
fcomip
enter
sbb
add
daa
add
push
xchg
shll
mov
push
inc
arpl
mov
ss
mov
mov
fisttpll
adc
jle
rclb
add
mov
or
pop
in
cmp
pop
cmpsl
mov
sahf
decl
mov
vpaddb
cmp
xchg
pop
imul
lea
fistpl
arpl
sbb
lds
test
loopne
mov
jmp
adc
subl
mov
adc
mov
mov
dec
arpl
mov
dec
scas
ret
mov
fiadds
lods
fldt
pop
pop
mov
ret
and
pop
into
xchg
mov
bound
shll
fiaddl
cmpsl
pop
push
in
push
mov
sbb
xor
bound
pop
sub
inc
cmp
mov
fadd
xchg
rorb
rcll
dec
cmp
fistl
movsl
cmc
or
xchg
outsb
lea
mov
mov
jge
or
sub
cmp
cli
xor
insl
mov
and
jg
push
jg
test
inc
mov
push
loop
dec
mov
loope
and
shrl
lock
xchg
dec
aam
sub
std
sbb
fstpl
pop
or
mov
pushf
adc
cmp
cs
sbb
adc
xchg
adc
test
ljmp
aas
fdivs
push
xlat
orb
push
xor
mov
dec
leave
push
push
cmp
pushf
add
adc
adc
gs
and
clc
xchg
std
mov
pop
adc
ret
fstps
xor
fcoml
mov
jae
js
or
outsb
dec
push
push
sbb
and
xchg
lds
mov
xchg
sarb
outsb
stos
ljmp
sbb
rclb
mov
mov
out
dec
mov
jg
mov
mov
fisubrs
fimuls
rclb
and
pop
ds
cmp
rcl
inc
sbb
mov
decl
outsl
xchg
inc
mov
popf
or
cmp
jmp
jo
stc
insb
jb
outsl
test
sub
insl
or
add
cmp
mov
sahf
adc
xchg
mov
movsl
jg
mov
out
aaa
pop
fstl
shll
dec
clc
shlb
fcomp
bound
inc
andl
pop
scas
lahf
jmp
cmpsl
and
ja
sahf
aaa
ljmp
jle
push
lods
test
in
jbe
sbb
pusha
add
iret
ret
xchg
shl
fbld
pushf
sbb
sub
mov
push
fisubs
daa
stc
pushf
loopne
and
mov
push
push
cltd
jae
cld
jo
xchg
jl
xor
arpl
mov
andl
and
mov
dec
cld
mov
mov
sbb
dec
popf
rorl
pop
mov
mov
cli
fdivl
lcall
sbb
sbb
loop
jne
iret
leave
roll
cwtl
outsl
test
inc
dec
lods
cmp
sub
mov
outsl
push
jg
cwtl
in
mov
or
insl
into
cmc
inc
subl
loope
dec
shll
add
or
mov
mov
fnstenv
lahf
push
ljmp
fistps
ror
mov
push
loopne
fnstcw
push
out
dec
lahf
rcrb
mov
lods
cwtl
dec
xchg
mov
sub
scas
xor
jg
and
bound
inc
test
imul
push
jnp
icebp
mov
cltd
and
fadd
lret
cmp
test
stos
call
adc
xchg
insl
jae
jg
push
sbbb
mov
jmp
mov
jno
les
jge
lcall
pop
lret
pop
scas
bound
lahf
mov
int3
dec
pop
out
out
add
pop
or
mov
sub
rcr
and
and
fs
jg
mov
jp
lds
cmp
test
inc
movsl
xchg
adc
sub
std
insl
cmp
xchg
pop
test
or
stos
sub
inc
pushf
cmpl
sbb
fcompl
inc
adc
repnz
pushf
xchg
fimuls
jl
aam
jnp
ret
pop
rcrb
lea
in
pop
popa
cli
shll
loop
xchg
cmp
gs
into
fldt
sahf
sbb
jmp
pop
inc
mov
pop
sbb
xchg
sub
out
or
adc
subl
nop
outsb
loopne
ret
pop
pop
mov
push
jle
jbe
inc
fwait
arpl
adc
ljmp
clc
fsubrs
sub
lea
jnp
enter
fsts
cltd
add
jl
aas
pop
or
aam
pushf
icebp
leave
es
xchg
push
mov
jmp
lock
lods
mov
inc
sbb
mov
jge
scas
cmp
sbb
or
xchg
movsb
cmp
mov
and
movsb
pop
cli
adc
sub
loope
dec
sub
dec
out
push
popa
call
jbe
mov
insb
adc
sbb
dec
add
adcb
lret
gs
sbb
mov
into
mov
adcl
faddl
rcr
popa
in
sbb
inc
sub
stos
pop
and
jb
jne
cmc
addr16
sub
ja
cmpsl
fdivl
mov
cltd
in
adc
pop
inc
filds
jg
incl
int
and
js
lea
arpl
pushl
nop
mov
cmp
pushf
filds
cwtl
testb
sub
je
das
lcall
push
cltd
sarb
sbb
sbb
aas
in
jle
mov
in
adc
adc
cli
sahf
pop
sahf
gs
fwait
adc
sbb
sti
fildl
stos
nop
cs
clc
add
mov
jnp
mov
lods
in
stc
push
mov
mov
aas
mov
add
aaa
rcll
lahf
aas
orl
movsb
inc
ss
xchg
adc
jg
popf
inc
xchg
mov
ficompl
ret
push
inc
or
in
sbb
out
dec
leave
pop
cli
adc
nop
dec
pop
test
adc
jb
xchg
test
and
test
ret
stos
mov
loopne
sbb
mov
enter
mov
add
jp
inc
pop
jp
mov
mov
push
ds
pop
pop
mov
sti
mov
test
ljmp
test
out
cmp
push
aas
sbb
sarb
mov
cwtl
fcompl
jg
movsb
clc
ucomiss
mov
arpl
mov
int
cwtl
mov
aas
push
add
mov
sbb
test
inc
cmpsb
inc
adc
scas
mov
imul
xor
or
in
mov
pop
pop
xor
pop
add
ret
xor
sbbl
lcall
shlb
and
cmp
and
cwtl
jno
push
loopne
jns
inc
xchg
cmp
fcoml
sub
jnp
popf
mov
xchg
imul
and
movsb
sub
jp
inc
js
jae
mov
pop
movsb
push
jle
add
les
cmpl
clc
lods
or
sub
rclb
ds
pop
dec
pop
xor
stc
fnstsw
outsl
sub
xor
mov
push
aaa
and
sub
test
inc
dec
loop
ja
cli
imul
dec
pop
sbb
fmuls
out
into
sti
fsubl
fdivrl
cli
out
fdivrs
jo
leave
cmp
or
push
dec
lods
lods
mov
sub
dec
cmp
xor
adc
popf
lret
fcompl
pop
mov
cmp
push
mov
mov
or
les
pop
test
stos
inc
std
clc
aas
adc
and
adc
cli
sbb
mov
push
cmp
mov
sbb
mov
push
pop
fs
insl
icebp
cli
fcoms
mov
mov
sbb
out
cld
and
xchg
push
xor
pusha
jb
cmp
push
xchg
push
fiadds
lock
out
xor
fcomps
cmpsl
mov
aas
xchg
cmp
test
loop
push
mov
sub
test
mov
and
test
addps
adc
fdivrl
int
and
add
addr16
int3
mov
icebp
leave
fs
sti
stc
and
mov
mov
and
incl
jnp
pop
lret
mov
mov
push
inc
out
addl
cmp
sbb
mov
adc
mov
dec
mov
pop
loopne
andb
pop
sahf
cmp
mov
mov
mov
in
lock
sti
sub
enter
and
sub
stc
add
sbb
and
mov
loope
mov
or
jb
dec
into
push
dec
xchg
ret
mov
ja
sti
xchg
mov
xor
or
ret
stc
fbstp
add
popf
fwait
stc
shrb
mov
sbb
aas
in
cli
subl
pop
jns
fs
movsb
sbb
sarb
jno
push
das
incl
sbbl
enter
inc
fnstsw
fwait
js
or
xchg
loop
xchg
jp
jecxz
insl
jmp
mov
adc
xor
lea
scas
cmpsl
push
arpl
jbe
push
fcmovbe
dec
cmp
pop
push
cmpsb
mov
jo
add
sub
or
mov
mov
xchg
push
and
xchg
pop
sbb
leave
pop
aad
mov
push
or
mov
xlat
mov
das
inc
popa
js
cmp
jns
inc
mov
xchg
or
popa
pushl
ljmp
in
jo
scas
jnp
std
inc
mov
leave
add
inc
sbb
inc
cmp
inc
add
push
jle
sbb
push
scas
out
pushf
in
daa
push
xor
mov
repnz
adc
jne
jne
mov
fwait
jl
mov
idivl
cmpsb
les
hlt
sub
cmp
add
or
cltd
sbb
or
pop
fiadds
call
add
lcall
cli
cmp
jmp
dec
jmp
add
icebp
xchg
mov
test
push
mov
xchg
cmp
pop
xchg
subl
mov
orl
sbb
xchg
subl
sti
cld
pop
icebp
gs
jmp
xchg
sbb
fs
jo
pop
sar
jbe
sbb
fistpll
rcrl
pop
xchg
cmp
jmp
xor
mov
cmp
push
in
cmpsl
dec
jno
or
shl
pop
sub
push
xorl
insb
ret
movsl
outsb
mov
fildl
inc
mov
popa
aas
jo
pop
ljmp
push
test
pop
popf
inc
ljmp
xchg
lret
sbb
or
adc
fidivs
push
mov
fcoms
push
mov
adc
add
rcrl
push
int3
icebp
pop
xchg
mov
pop
push
or
mov
imul
sub
cmp
mov
adc
mov
stos
jecxz
outsb
scas
jp
mov
loopne
cwtl
out
das
rolb
fwait
push
push
cli
sbb
shrl
add
mov
aad
sbb
adc
scas
mov
ret
loop
mov
xor
xchg
inc
into
fadds
in
mov
clc
lock
std
xchg
cmp
scas
sti
sub
pushf
lahf
gs
xchg
repz
xchg
sti
loope
repnz
inc
xchg
mov
cli
stos
dec
inc
xchg
mov
in
mov
lea
jmp
mov
shlb
push
xchg
push
scas
jno
fistps
dec
int3
jnp
pop
jmp
push
loopne
les
and
pusha
jnp
imul
cmp
adc
cwtl
movsl
pop
pop
push
xchg
sub
fstpl
lret
pmulhuw
cmpsb
push
leave
jae
test
inc
jns
xor
push
loopne
sti
and
fidivrs
xchg
sbb
fwait
pushf
test
jbe
jno
pushf
adc
clc
loope
iret
stos
cmp
out
pushf
imul
cmp
setp
inc
lcall
cmp
cld
and
pushf
sbbl
out
xor
cmp
add
cld
iret
ret
add
fs
pushf
icebp
sbb
or
shrl
jnp
imul
sbb
cs
in
push
mov
xchg
jmp
pop
xchg
sub
popf
sahf
mov
test
shrl
in
fsubrs
sub
or
xor
pop
arpl
imul
lods
out
fwait
jg
jp
pop
mov
fistps
xchg
mov
mov
arpl
mov
and
push
jns
push
cmpsb
xchg
out
test
and
push
sub
mov
xlat
mov
mov
aam
jbe
fadds
decb
pop
or
daa
cmp
movsl
sahf
fwait
adc
cmp
jb
jne
cmp
outsb
test
adcl
scas
push
fisubrl
sti
cmp
xchg
sub
insb
scas
mov
hlt
pop
dec
pop
icebp
in
adc
mov
std
sub
sbb
sub
and
fistps
xor
mov
enter
cmp
in
sub
pop
rol
mov
mov
cmpl
mov
das
adc
cmp
and
sub
xchg
pop
sar
bound
mov
xchg
sbbl
jns
sbb
out
mov
adc
pushf
popa
mov
adc
sub
sbb
jmp
push
jle
and
xor
pop
and
sbb
push
stos
xor
mov
aas
add
or
in
les
mov
sbbl
into
cli
sbb
repz
scas
xchg
in
orb
sub
fwait
pop
stos
cmp
dec
fidivrl
cmp
iret
cmp
sbb
or
shll
mov
arpl
loope
jb
hlt
cwtl
add
lods
inc
pushl
or
out
mov
ss
jg
sub
addr16
into
mov
jl
and
pop
std
enter
xor
int3
pushl
rcll
test
cli
and
mov
jno
aam
lret
and
cmpsl
loop
lret
sbb
cs
xor
leave
jno
jnp
lcall
and
shlb
dec
or
inc
outsl
fwait
imul
mov
adc
pop
sbb
out
jbe
enter
xchg
sbb
mov
pop
add
jbe
inc
or
fnsave
xor
subl
mov
cld
push
inc
sub
push
daa
popa
sarb
or
dec
fldt
fs
push
hlt
sbb
jae
fsub
jp
push
enter
lahf
mov
cmp
sbb
sub
iret
mov
stos
xchg
cmp
mov
push
scas
or
fldenv
dec
mov
inc
in
stc
aas
mov
fcoml
ret
or
xchg
fnstcw
stos
mov
ret
ret
popa
jmp
ds
movb
ljmp
dec
inc
aam
aad
loop
faddl
out
mov
xchg
cld
aaa
xlat
in
or
je
int3
cmpsb
adc
push
adc
mov
hlt
pop
sub
jecxz
les
ds
fadd
mov
enter
test
mov
xchg
mov
add
jno
sbb
pop
fwait
mull
mov
out
leave
add
cld
clc
imul
mov
ljmp
out
push
out
adc
fadds
or
mov
sbb
xchg
fs
and
mov
jns
inc
test
sbb
xchg
cmp
xchg
jb
dec
test
test
mov
mov
cld
inc
xchg
push
mov
fimuls
dec
shlb
loopne
xorb
fsubrs
cmpsl
xchg
sbb
hlt
sti
sbb
jp
loopne
cltd
xchg
out
sub
xor
movl
pop
xor
fisttpll
in
dec
pop
scas
decl
pop
ljmp
pop
xchg
xor
jge
adc
fstl
pushf
pop
jo
inc
xchg
pop
insl
sub
repnz
test
mov
sbb
jnp
adc
pop
cwtl
iret
adc
arpl
aad
pop
aaa
pop
cld
ret
aas
lea
jmp
stos
pop
ret
dec
adc
adc
mov
in
loop
pop
pop
iret
pusha
add
pop
mov
aas
inc
add
dec
dec
outsb
test
xchg
sbb
movsb
js
and
lahf
fldt
jle
and
push
pop
lods
shrl
mov
into
std
inc
leave
xchg
jg
shrl
rolb
jnp
rorb
sbb
inc
xor
popa
push
jno
pop
xor
test
out
mov
insb
xor
cmp
out
push
jns
outsb
cltd
cmp
inc
sbb
jnp
dec
fwait
mov
pusha
cmp
and
ja
popf
call
insb
cmpsl
iret
sub
mov
cmp
in
mov
xchg
lods
mov
aad
pop
les
iret
cmp
mov
fmull
xor
or
clc
pop
in
xchg
and
push
movsb
test
and
sahf
mov
pop
xor
loope
sbb
and
mov
std
and
out
sbb
addr16
mov
xor
push
fisttps
sbbl
xor
xlat
sub
sub
or
pushf
jge
addb
push
dec
nop
sti
data16
add
insb
mov
popa
fsubs
jmp
fcomps
cltd
rcll
sbbl
je
cltd
push
sub
inc
je
lea
sbb
into
aas
xchg
sbb
pop
outsb
scas
sbb
or
cmp
clc
jle
lcall
pushf
outsb
mov
adc
jno
push
pop
or
sub
aad
js
orl
into
ficoml
shr
push
scas
mov
js
test
push
popf
icebp
mov
mov
push
bound
mov
pop
push
das
flds
mov
cmp
sbb
pop
xor
dec
or
loopne
mov
cwtl
jbe
js
pushf
push
mov
cld
leave
in
cmpsb
das
pop
mov
mov
xchg
jp
cltd
sti
push
xor
icebp
xor
loop
call
and
pop
and
lret
fisttpl
enter
jle
sub
js
fsubrl
mov
fdivrs
imul
jno
jg
lods
jl
mov
mov
mov
jge
push
jecxz
shrl
test
inc
mov
pop
xorl
and
mov
adc
bswap
jns
in
js
ret
mov
mov
cmpsl
scas
addps
adc
es
and
and
pop
out
leave
test
lahf
xchg
pop
imul
or
hlt
outsb
in
sbb
fistpl
mov
inc
cmp
cmp
sbb
jb
push
fildl
aam
fs
jp
aam
in
push
rcl
add
jle
and
cli
mov
decl
in
push
push
pop
ret
push
jae
mov
lret
leave
push
pop
mov
sahf
faddp
lds
jae
mov
or
out
push
cmpsl
in
fisubrs
repnz
add
pushf
or
enter
hlt
mov
xchg
gs
and
mov
pop
nop
mov
pop
outsb
sbb
dec
xor
fisubs
lret
mov
jnp
addr16
dec
pop
inc
sub
ret
xchg
add
call
or
repnz
cwtl
mov
xchg
sti
shlb
hlt
lea
jmp
in
pop
xchg
mov
cli
mov
pop
and
push
sahf
mov
bound
adc
jmp
jle
fsub
push
xor
xchg
js
mov
mov
cmp
movsl
pop
imul
push
xor
pop
repz
pop
inc
cltd
mov
xor
and
scas
push
sbb
push
cmp
shr
sub
lret
test
mov
roll
test
mov
cmp
mov
or
mov
sahf
xchg
inc
lret
jb
xchg
jmp
subb
fstps
dec
pushf
xchg
testl
leave
pop
les
adc
xchg
mov
sti
outsb
pop
adc
sbb
out
fldenv
or
scas
test
les
mov
mov
jae
cmp
cld
das
add
push
xor
call
cmpb
or
lcall
out
cwtl
pusha
lcall
sti
adc
mov
dec
mov
addr16
adc
mov
decl
mov
scas
pop
mov
call
faddl
cs
cmp
daa
pop
aas
scas
dec
add
fmuls
cli
std
test
data16
jg
in
out
mov
sbbb
xchg
jecxz
aad
dec
je
sub
sub
ds
pop
enter
scas
cmpsb
pop
mov
cltd
fsubs
xchg
or
test
dec
js
arpl
mov
test
or
notb
push
jo
cmp
cmp
jl
out
mov
push
cld
mov
adc
movsb
push
je
ljmp
cmpsl
fstl
jle
mov
jecxz
mov
out
inc
mov
dec
jmp
shl
add
loop
int3
push
decb
aad
cltd
xchg
jmp
push
sbb
sbb
xorl
xchg
dec
out
pop
ds
das
in
leave
jmp
mov
xchg
cmp
cmp
xor
std
cmp
mov
iret
faddl
cmpsb
xchg
push
mov
daa
pop
int3
fistpl
aas
push
mov
xchg
and
sbb
inc
sub
xorb
dec
jg
and
sub
sbb
stos
flds
dec
xor
cmpl
cmp
pop
jg
fisubl
fwait
pop
outsb
bound
lret
icebp
popa
cmc
mov
and
gs
gs
mov
sbb
arpl
mov
cmc
add
loop
sbb
push
mov
or
sub
out
push
sub
mov
fcoml
gs
std
mov
pop
and
xchg
jmp
adcb
xor
sti
bound
push
mov
pop
jb
cli
test
insb
rcrb
insb
or
sbb
cmp
inc
push
ret
test
out
sbb
xlat
mov
xchg
icebp
aam
mov
cmp
jg
ds
add
push
fcmovu
xchg
sub
push
or
movsb
jne
mov
inc
inc
fisttps
sbb
push
sbb
jnp
xor
inc
mov
notb
xchg
inc
icebp
fdivrl
sbb
fnstenv
add
jg
pop
ds
popf
adc
test
fildll
mov
sub
enter
aad
ja
sub
xor
mov
aam
xchg
jne
cmp
in
jnp
mov
lock
rorb
sbb
and
pushf
cmc
adc
push
das
icebp
pop
mov
into
and
inc
cmp
imul
push
cmpl
xor
cwtl
fisubrs
cmp
xor
sub
xor
push
mov
icebp
jge
adc
repz
pop
jle
jns
sahf
or
sarb
ret
pop
xor
decb
lock
cmc
filds
cltd
mov
adcb
pushf
and
jecxz
lds
test
pushf
int3
add
cwtl
pop
and
sbb
sti
lods
pop
popa
addr16
add
push
xchg
sbb
ss
jl
icebp
push
jo
popf
cmp
push
fwait
mov
mov
mov
cwtl
insl
pop
sbb
stos
mov
inc
fwait
push
mov
mov
fmull
imul
adc
push
sbbl
add
sahf
fadds
lock
and
sbb
jl
sbb
popf
xor
dec
shll
xchg
test
cli
inc
push
and
ret
inc
les
fs
out
mov
jmp
push
or
jne
jnp
mov
and
es
sbb
xorl
pop
mov
hlt
int
xchg
jl
push
test
sbb
jo
mov
fs
mov
cltd
xchg
mov
sbb
xor
mov
dec
mov
sub
or
mov
outsb
fdivrl
lcall
mov
cmp
fists
ljmp
pop
inc
popl
stos
cmpb
sti
mov
pop
ds
xor
cmpsl
and
lods
cmp
out
push
aas
push
push
cmp
pop
inc
outsb
add
nop
jmp
fdiv
cs
stc
xchg
pop
and
inc
lods
xor
push
mov
cmc
cmp
cli
cmp
rorb
call
fs
mov
adc
fisttpl
mov
add
mov
in
scas
lahf
adc
movsb
jle
and
or
mov
sbb
lock
jle
push
ljmp
out
mov
outsl
std
mov
addr16
jmp
and
movsb
mov
jbe
jae
sbb
or
daa
mov
ds
aaa
imul
mov
ficoml
subb
aas
jnp
stc
add
pusha
jnp
shlb
mov
pop
add
into
jl
sub
dec
jmp
mov
scas
pop
jle
jno
out
lret
pop
into
outsb
jns
fcomps
jo
mov
call
orl
xchg
fsubr
in
mov
popa
int
int
add
pop
pop
or
jbe
shl
fimuls
mov
daa
fistl
rclb
adc
cmp
ds
sub
fcomps
jle
sub
pushf
aaa
adc
lret
adc
aas
push
pop
out
xchg
add
inc
cmp
cld
pusha
fdivrl
inc
sbb
xlat
and
std
clc
mov
cmp
movsb
pop
adc
xlat
jno
add
lcall
clc
push
jge
mov
pop
pop
int
xorl
js
mov
lock
xchg
jecxz
cmpsl
jnp
insl
mov
fwait
movsl
mov
and
jg
inc
in
jge
jo
cld
mov
out
mov
sbb
out
fcomps
sbb
mov
inc
cli
ret
xchg
out
sbb
outsb
and
rcl
jbe
stc
inc
xchg
sbb
call
inc
jb
push
pop
lods
sti
outsb
inc
xor
mov
push
cmpsl
cmc
or
out
arpl
xor
sbb
fisttps
test
in
shll
test
xchg
xor
aaa
cli
or
cmp
cmp
mov
cmp
stc
sahf
sub
cmc
rorl
jnp
leave
bound
jl
aas
pop
paddusb
bound
add
stos
addl
xchg
xchg
mov
pop
jo
adc
push
sub
sbb
mov
and
int
sahf
jb
ret
pushf
push
dec
ficoml
add
sarb
sub
enter
shrb
ret
jg
leave
dec
call
shrb
xchg
sbb
pushf
repnz
push
lcall
push
inc
cli
rcrl
mov
mov
fsubrl
jecxz
push
shr
adc
fdivs
add
or
xchg
mov
inc
sbb
jle
cmpsl
cmp
pop
push
in
xchg
pop
and
jle
inc
xchg
sahf
ljmp
jo
jo
loope
pop
enter
dec
nop
xchg
adc
fcmovnbe
pop
mov
pop
lret
pushf
int3
inc
and
gs
pop
addb
testl
add
pop
scas
mov
aam
cmp
sbb
mov
in
cld
in
das
sbb
jle
sbbb
into
sbb
movsb
xor
inc
jg
subps
xor
pop
addr16
mov
out
xor
adc
pusha
mov
jo
push
movl
adc
aas
mov
sbb
fwait
xor
and
bound
xor
mov
fisttpll
loop
fwait
mov
pop
pop
xchg
mov
mov
orl
inc
jbe
pop
sbb
push
jp
mov
outsl
into
xchg
or
mov
push
pop
jo
jmp
pop
sbb
xchg
out
incb
mov
fs
icebp
cli
in
add
mov
jb
nop
push
pusha
outsb
test
cmpsb
imul
mov
lock
sbb
push
into
mov
scas
subl
xchg
inc
sbb
add
mov
inc
and
sahf
push
inc
push
xchg
fstl
cmp
pusha
pop
add
aaa
popf
mov
bound
das
fwait
add
sbb
push
ds
mov
mov
cmp
xor
sbb
xchg
dec
aaa
stos
or
adc
into
jo
inc
aas
iret
fildll
sbbl
arpl
inc
stos
pop
lea
sbb
xchg
nop
fcomp
sahf
push
test
sti
pop
iret
shl
mov
repnz
pop
jb
add
xchg
add
jae
or
incl
mov
jecxz,pn
sbb
test
scas
xor
cli
sbb
mov
test
aad
adc
xorps
ret
pop
cmpsb
dec
rcl
inc
sbb
dec
jle
sahf
lret
adc
clc
sbb
mov
cmp
pop
or
mov
xlat
jle
aas
mov
xchg
lcall
push
fwait
pop
xor
sbb
sahf
andb
pop
repz
data16
lret
scas
mov
and
fmull
lret
ds
repz
test
sub
lods
aas
xor
js
aam
roll
xchg
fsubl
sarl
inc
push
mov
dec
push
fbld
les
sbb
fstpt
dec
cmp
bound
add
add
in
repnz
dec
or
dec
int
adc
popa
lahf
cmp
mov
mov
pop
inc
movsl
fistl
sbb
shrb
mov
push
mov
mov
cld
dec
mov
data16
mov
mov
mov
pop
addr16
pushf
ret
aam
subl
sub
fsubrl
xor
cmp
gs
sbb
push
nop
xchg
fsubrl
filds
leave
daa
pop
js
adc
stos
xor
fcomps
lock
xchg
sbb
aas
adc
es
cwtl
pop
mov
sbb
divl
add
pop
mov
xor
or
pop
mov
insb
mov
bound
cmp
inc
cmp
mov
stos
out
jae
hlt
hlt
mov
mov
mov
lret
adc
jns
jmp
xchg
adc
outsb
xchg
hlt
sbb
mov
rcrb
mov
jge
idiv
inc
cld
jnp
add
out
sub
cwtl
fdivs
pop
into
lret
sbb
and
cwtl
dec
scas
sti
inc
push
mov
shrl
pop
push
mov
jnp
fistpll
xorl
pop
or
pop
stos
push
dec
in
mov
pop
js
mov
fstpt
cwtl
test
sbb
sub
lods
mov
and
jl
aaa
cli
fidivl
sub
cmpsl
pop
jo
fisubs
mov
loopne
pop
or
xchg
ror
sbb
or
jnp
and
mov
jl
cld
cmp
mov
movsl
jns
xlat
add
jp
scas
pop
lods
inc
push
lret
test
int3
ja
cltd
mov
xchg
sbb
in
sarb
sbb
xchg
stos
sbb
rcl
xor
out
pop
inc
lds
fistpl
pop
out
cld
mov
idivl
aas
nop
mul
sbb
jle
fbstp
mov
cmp
es
sti
out
pop
xchg
je
push
test
or
pop
imul
stos
sbb
test
incb
jae
xchg
sbb
dec
cmpb
mov
mov
cli
mov
into
jle
xchg
leave
cmp
xchg
imul
fdivrs
sbb
xchg
xor
jb
call
push
and
scas
cmp
cmpsl
mov
in
add
adc
pop
popa
mov
sbb
cmpsl
sbbb
pushf
push
inc
xor
int3
out
sbb
ficomps
movsl
sti
pop
movsb
out
mov
inc
dec
fstps
leave
pop
cmp
or
cltd
xchg
lcall
hlt
push
out
xorb
ss
sub
cmpsl
ret
fidivrl
daa
and
push
jle
loopne
lea
jmp
sub
jg
xchg
pop
jmp
dec
jp
mov
pop
push
xchg
inc
pushf
adc
sub
dec
adc
mov
arpl
push
orb
mov
cmp
ss
cltd
clc
mov
mov
and
xchg
pop
gs
sub
mov
adc
cwtl
cld
imul
addr16
inc
fs
pop
imul
orb
push
das
pushf
lret
dec
sbb
push
and
mov
repnz
add
lods
jae
push
adc
ret
jmp
cmp
mov
sbb
js
lock
imul
popf
adcl
add
sub
mov
clc
cmpsb
jp
dec
cmp
int
icebp
add
pop
enter
xor
push
push
repz
andb
cwtl
sahf
mov
outsl
lret
xchg
in
std
or
shl
jl
repz
fisttpl
enter
push
sub
aas
shlb
or
inc
and
pushf
push
add
js
pop
mov
inc
outsl
jecxz
adc
push
outsb
fucomi
sub
fisttps
movsb
cmp
cld
ret
test
xchg
and
lea
add
pop
pushf
or
push
fmull
dec
cmpb
or
ja
add
jl
xchg
pop
sbb
not
inc
shlb
mov
enter
movsl
mov
sti
les
stc
add
xchg
addr16
xchg
das
pusha
sbbl
cmpb
mov
jae
sub
cmpsl
out
or
add
lret
push
outsb
dec
lahf
and
or
xchg
mov
lret
xchg
add
push
fstl
mov
push
into
repnz
sbb
popw
js
push
daa
jne
sbb
lcall
clc
pop
xor
push
mov
xlat
sbb
jmp
test
stos
fistl
push
fisubrl
mov
pusha
cmp
fcompl
add
and
lds
pop
xchg
mov
cli
sub
cli
fcompl
jbe
pop
rcrl
sub
jg
jns
pop
and
aas
sbb
jno
cmp
sub
pop
adc
sub
adc
jl
repnz
lods
jg
push
and
push
fs
mov
lock
cwtl
jnp
fldcw
ficoml
xchg
mov
repnz
pop
mov
repnz
cmpsl
aas
xor
xor
or
mov
add
pop
lret
adc
nop
pop
cmp
cmpsb
lcall
pop
fmuls
cmpsl
mov
mov
xor
fcompl
add
in
pop
mov
scas
xchg
sbb
jmp
clc
mov
rcrb
and
fldt
fcomps
pop
push
pushf
adc
sub
pop
jb
sbb
sti
dec
ss
nop
push
mov
cwtl
js
out
in
pop
lret
push
das
xchg
outsl
xor
pushf
jne
imul
es
cmpl
icebp
mov
test
mov
mov
movsl
shrl
lods
mov
mov
cmp
clc
fsubrs
cmp
push
pop
gs
and
dec
je
mov
and
imul
jne
mov
adc
pop
push
negb
into
popf
mov
pop
sub
pop
cmp
sbb
jne
xor
das
adc
ret
push
cmp
mov
nop
mov
cmc
and
xchg
jnp
xlat
push
xchg
xchg
sbb
mov
repnz
decl
mov
dec
out
jl
out
jl
xor
lods
lods
jge
xchg
and
sbb
pusha
mov
pushf
test
adc
cltd
sub
aad
pop
xor
pop
xchg
fcoms
push
lret
das
fdivrl
adc
mov
leave
jmp
sbb
push
aad
sti
int
pop
call
xchg
jg
sahf
sbb
lea
and
inc
lcall
fstpt
ljmp
cli
xchg
call
push
pop
jae
xchg
pop
pop
sahf
fadd
repnz
aam
cld
dec
fimuls
mov
fcom
pop
ljmp
out
jmp
adc
aas
cmp
sub
mov
int3
lcall
pusha
xor
pop
test
cmp
lcall
bound
addr16
pop
cmp
adc
dec
sbb
jp
out
sbb
cmp
xor
stos
add
mov
mov
cmp
adc
shll
mov
popf
repz
pop
outsl
sbb
pop
sub
call
jbe
cwtl
pop
out
cmp
jl
test
mov
leave
cli
mov
sahf
jecxz
lods
clc
mov
aas
mov
lods
jg
sbb
repz
xchg
lahf
popf
add
push
mov
jno
pushf
ja
jns
push
test
roll
mov
pop
dec
or
mov
sub
sti
es
push
mov
mov
mov
lret
pop
shrb
mov
cs
xor
fnstenv
cmp
push
inc
cld
adc
cwtl
addr16
or
mov
pop
stc
push
sbb
cmc
and
mov
push
fildll
jp
stc
test
push
jl
fwait
jp
rorl
fsubr
aas
inc
push
and
int3
sbb
ret
fwait
sub
mov
jle
lret
cwtl
mov
xchg
jl
adc
aas
lock
fsubl
mov
into
push
sbb
jl
pop
scas
std
adc
jle
clc
xor
jnp
fidivrs
addr16
lods
xor
shll
hlt
xor
push
and
xor
push
faddl
daa
sbb
sub
scas
nop
sbb
xchg
dec
jge
cmp
in
repnz
and
mov
mov
pop
rcrl
xchg
xor
push
clc
cmp
movl
call
iret
cltd
mov
mov
lea
lods
aas
in
jp
xchg
cld
scas
jl
mov
adc
pop
test
iret
jle
mov
sub
ds
jb
aaa
cmp
xchg
sub
sbb
mov
jg
aaa
dec
cmp
xchg
shr
fdivr
in
rcrl
movsl
test
int3
cltd
icebp
aaa
lcall
hlt
mov
aas
jle
pushf
lods
test
push
movsl
sti
shl
fcompl
mov
scas
xor
mov
fstpt
pop
xchg
jmp
push
in
xchg
jno
fsubl
cmc
xchg
jp
in
in
jg
cwtl
dec
test
xchg
adc
ret
push
sub
dec
stc
mov
lods
cld
mov
sub
dec
push
fstpt
in
mov
jle
sbb
cmpsb
dec
int3
jo
imul
cmp
test
mov
gs
nop
imul
test
cmp
lock
mov
ja
call
cmp
cmp
cmp
dec
jl
aas
add
pop
mov
lcall
ficoml
push
idivb
aas
push
jmp
gs
and
lods
cmp
ljmp
dec
vaddsd
cmp
jbe
push
sbb
xor
mov
test
mov
mov
cltd
in
xchg
insl
xchg
adcl
test
daa
js
adc
lcall
adc
mov
mov
push
pushf
notb
mov
xor
out
and
and
lcall
lahf
mov
pop
inc
cli
pop
movsb
pop
mov
fidivl
aad
inc
jl
and
fildll
arpl
mov
pop
es
jae
mov
fadds
stos
adc
fisubs
cli
shlb
stos
mov
pop
ds
mov
xor
repnz
push
pop
cld
imul
ds
add
daa
xchg
stos
jg
aad
xchg
test
lock
jb
and
jns
int
xchg
sbb
jbe
pop
mov
adc
sub
cltd
clc
daa
fisttps
push
jl
sti
add
loope
push
sub
movsl
movsb
aas
xchg
jl
ss
movsl
insb
lods
xlat
scas
cs
sub
fdivrs
ljmp
popl
lds
jno
call
into
aad
push
mov
and
push
adc
cli
or
cwtl
mov
stos
or
cli
mov
inc
movsb
jp
pop
cmpl
jge
sub
pop
xchg
mov
and
lahf
inc
lea
sahf
jmp
xor
pop
mov
adc
mov
push
loopne
cmp
push
mov
into
mov
push
aad
fcoms
sbb
mov
sti
insl
mov
xchg
in
fs
stos
sbb
cli
cltd
sti
icebp
pop
cltd
push
mov
js
lock
sub
mov
pushf
sarb
cmpsb
outsl
das
outsl
stc
inc
inc
pop
mov
fisttpll
scas
test
hlt
jne
loop
mov
add
pand
je
cltd
dec
pop
movsl
cld
scas
iret
fwait
mov
loop
xchg
sbb
or
pop
inc
mov
stos
jp
es
mov
shlb
xchg
dec
mov
dec
sub
xchg
mov
mov
xchg
lods
fnstenv
roll
xor
xor
andb
int
movsb
es
xchg
mov
pop
mov
adc
outsl
dec
sbbb
mov
rolb
sahf
cwtl
xor
je
loopne
mov
inc
in
xor
pushf
lret
adc
test
sahf
fcomp
xchg
rorl
iret
mov
dec
cvttps2pi
ds
icebp
out
fidivrl
cmp
jne
xchg
dec
je
loopne
test
es
push
push
push
xchg
or
sub
mov
adc
aad
fsubs
fsubs
push
mov
in
ret
pushl
mov
cmp
sbb
mov
out
sbb
or
mov
inc
jp
into
mov
daa
dec
mov
mov
ja
in
shr
std
sub
sub
push
xor
mov
cs
ja
rcrb
xlat
and
mov
xchg
mov
jb
cmpb
jle
inc
xor
test
sub
cmp
mov
pop
ror
pop
push
loope
mov
dec
repnz
outsb
lcall
fsin
aam
mov
push
ja
jmp
cmp
xchg
and
add
shll
mov
pop
inc
cmpsb
aas
popl
mov
gs
sarl
and
dec
popa
jns
loopne
xor
jecxz
pushf
mov
cli
ljmp
fistpll
cmpsb
or
mov
and
iret
sbb
cs
cli
aas
adc
sub
mov
cmp
fcompl
insb
loope
pusha
out
pushf
arpl
imul
pop
and
xor
sub
lcall
lea
push
sub
out
sar
leave
xor
stos
push
pop
xor
cmpb
shrl
dec
pushf
xlat
das
cltd
jp
jno
pusha
dec
arpl
mov
cwtl
fnstenv
insl
aas
scas
in
dec
aaa
cmp
dec
sub
dec
hlt
in
stos
mov
xor
jae
cmp
lret
lcall
dec
imul
setl
push
outsb
test
sub
push
iret
js
mov
xchg
sbb
push
cld
push
sahf
fs
add
ret
daa
push
pop
dec
sarl
push
or
add
clc
cld
xor
out
fidivl
stos
pop
je
mov
stos
cmp
jno
cltd
mov
fdivrl
push
and
and
lods
imul
push
mov
sbb
test
lods
push
xlat
jecxz
xchg
mov
cwtl
adcl
iret
lea
popa
mov
or
lret
jg
ret
cmp
push
xchg
pop
shll
stc
test
data16
fiaddl
shll
lds
and
push
fwait
mov
outsb
out
cwtl
cmp
rorl
cltd
pop
adc
testb
test
jno
call
int
xchg
shll
xor
pop
jp
insb
inc
xor
mov
aas
mov
pop
cld
stos
jnp
push
stos
mov
jle
pop
pusha
mov
ret
mov
sbb
inc
stos
lret
aaa
into
loop
and
cwtl
rcl
dec
enter
jno
cwtl
enter
cwtl
outsb
stos
inc
adc
cmp
mov
or
add
jmp
sahf
fcomps
js
fstpl
cmp
lahf
dec
aas
lea
incl
dec
sbb
pop
xchg
cli
sbb
mov
insb
cmp
adc
orl
pop
icebp
sbb
pushf
ja
fldcw
addb
icebp
cwtl
lds
xor
cmp
leave
lods
mov
dec
add
loopne
rorb
cwtl
dec
lcall
mov
call
aas
test
xchg
imul
add
or
repnz
jg
cld
mov
fnstcw
cld
sbb
inc
push
repnz
rcrl
cs
pop
iret
sahf
fdivrs
push
mov
popa
in
dec
push
jne
jmp
jp
repz
mov
or
push
push
add
adc
xor
push
xor
outsl
mov
cmp
cmp
fstps
sbb
daa
mov
xorb
cwtl
out
and
push
loope
stos
insb
subl
jb
sub
sub
loopne
scas
pop
mov
cwtl
dec
push
das
fmull
pop
dec
pushf
sbb
lods
das
enter
decb
fucomi
stos
adc
aad
adc
mov
cmpsl
and
sub
pop
cmpsb
fimull
ds
adc
test
cmp
iret
mov
lods
xchg
cwtl
cli
idivl
xor
fwait
out
push
ds
insl
push
int
cmpsb
xchg
cmp
pop
mov
nop
aaa
mov
mov
and
xchg
sarl
cmp
aad
in
adc
mov
pop
mov
sbb
jge
xor
test
insb
test
or
mov
test
mov
stos
adc
ljmp
mov
push
jg
jnp
pop
adc
ret
push
enter
push
out
push
push
arpl
add
mov
jg
aas
xchg
cwtl
call
fwait
subb
out
jb
aam
and
notl
xor
cmp
sbb
jmp
test
lock
daa
fnstsw
repz
cwtl
mov
pop
lcall
shlb
push
xchg
xchg
and
imul
adc
inc
push
add
pop
push
sar
outsb
aam
cwtl
pusha
nop
sbb
jbe
stos
js
cmc
icebp
sub
lcall
adc
add
fdivr
push
fsubl
cmp
mov
mov
mov
imul
mov
push
pop
shlb
mov
sahf
stos
push
mov
sti
mov
xor
inc
mov
dec
cmp
mov
jne
rcrb
push
into
in
cmpsl
pop
incl
mov
outsl
jg
scas
sub
ds
jo
push
cwtl
mov
imul
and
lock
cmc
mov
ficompl
push
sub
mov
mov
fistps
mov
stos
sbb
repnz
lret
mov
ljmp
daa
push
push
xchg
stos
push
les
mov
sub
dec
mov
push
ror
js
dec
xor
flds
mov
lret
inc
subb
jo
add
adc
pop
loope
sub
add
nop
cltd
pushl
xchg
lcall
add
mov
pop
stos
mov
fimuls
xchg
sub
add
lock
sub
sbb
bound
cmp
xor
push
jle
cld
cwtl
leave
sub
outsb
lds
mov
repnz
jmp
test
outsl
test
clc
pushf
cli
sbb
cmp
jl
push
ds
idivb
jo
sbb
je
cmp
add
pop
hlt
test
pop
sub
jbe
pop
cld
pop
rcll
mov
push
ljmp
aas
out
sub
addb
sti
xchg
in
pop
jp
jl
mov
inc
push
int
pushf
adc
nop
stc
adc
lcall
in
shrb
dec
push
into
mov
and
les
mov
dec
cmp
or
xor
sbb
dec
orb
mov
or
fidivrl
push
sbb
jle
pop
mov
xchg
push
jle
and
xor
cmp
jmp
mov
setns
sbb
cmp
xchg
lods
jnp
rcrb
mov
pop
mov
push
push
push
mov
ds
in
dec
sbb
pop
in
aas
jle
inc
jge
push
pop
xchg
cwtl
lahf
mov
push
add
imul
hlt
push
test
sbb
add
inc
in
enter
enter
hlt
and
cwtl
das
pop
sbb
or
lods
jb
and
imul
and
fucomip
mov
lcall
les
jnp
mov
mov
sub
jp
hlt
xchg
adc
lea
mov
push
pop
dec
subl
scas
xchg
cmp
xor
bound
or
xor
cld
and
test
cli
ljmp
sbb
leave
fs
aad
sub
jne
fcmovnu
sub
mov
inc
out
push
fdiv
lods
mov
cmc
sbb
cmp
daa
dec
push
ljmp
inc
out
adc
push
mov
sub
jp
and
jle
inc
and
mov
xchg
dec
sahf
shlb
cmp
mov
dec
lcall
mov
cwtl
arpl
pop
jg
scas
scas
jno
cmpsb
jle
popa
lahf
shl
push
fnop
inc
andb
pop
jb
push
dec
and
cld
mov
mov
and
jp
or
pop
mov
mov
out
mov
cmpb
dec
nop
sbb
shr
mov
jno
or
sub
cltd
xlat
adc
xchg
add
jecxz
add
frstor
aad
fucomip
xchg
js
jg
dec
mov
jne
xor
std
sub
inc
xchg
mov
test
loop,pt
cmp
sahf
out
sub
ss
lret
jl
sbb
cmp
sbb
cli
es
and
ds
movsb
dec
cmp
daa
adc
into
popa
mov
scas
jnp
fcomps
or
lret
pop
stc
js
sbb
xchg
es
mov
sub
movsb
stos
in
fisubl
loop
pop
jecxz,pt
mov
vunpcklps
pop
sbb
xor
inc
pop
pushf
in
cmp
cmp
fsubrl
and
ss
mov
inc
addr16
add
nop
cmp
adc
lock
add
sbbb
cwtl
adc
xchg
je
push
pop
push
mov
adc
cltd
mov
cmp
jl
mov
sub
inc
inc
rcrb
int3
aad
push
les
sub
mov
mov
push
or
cltd
push
dec
jbe
out
push
mov
and
sub
sahf
iret
dec
out
loope
fucomp
in
or
jmp
jbe
and
pop
dec
xchg
aad
repnz
or
push
ficompl
cwtl
xchg
mov
mov
jmp
xchg
cmp
mov
xor
hlt
cmpsb
clc
xchg
jno
orl
jbe
int3
fs
addr16
cmp
sub
and
scas
adc
lods
sti
mov
cld
decb
xchg
fwait
pop
adc
xchg
ss
xchg
push
sbb
pop
push
insb
adc
mov
outsl
repz
dec
test
fistpl
test
lods
enter
adc
rcl
sbb
mov
add
cmc
addr16
stos
dec
xor
in
pop
lahf
mov
jo
sbb
sub
aaa
mov
dec
cmp
cmc
cmp
push
and
push
in
test
lock
xchg
test
sbb
push
sbb
jno
movl
pop
loop
mov
cwtl
cwtl
mov
vminpd
cmp
xchg
xchg
fwait
imul
mov
push
xchg
ss
cmp
mov
jbe
xchg
stos
jnp
sbb
sub
das
and
adc
xor
jae
ds
mov
ds
fistpl
lock
aam
sub
outsb
push
push
pop
into
cld
mov
push
iret
cmp
inc
scas
mov
lahf
cli
sub
fcoml
adc
je
add
out
data16
or
mov
jb
fistpll
rclb
mov
lcall
inc
or
jnp
test
adc
mov
mov
es
mov
pop
push
xor
out
insb
sub
outsb
imul
inc
xchg
mov
adc
lea
push
pop
in
pop
movb
jnp
faddl
aad
sub
movsb
pop
jb
sub
xchg
or
jl
daa
mov
call
xchg
xor
in
and
loop
std
stos
dec
movsb
leave
mov
sub
imul
cmpsb
in
sub
mov
call
cmp
popf
and
inc
mov
push
test
pushf
pop
cwtl
rcrl
lds
dec
or
pop
in
and
inc
je
adc
cmc
jo
in
mov
sahf
in
inc
push
fs
iret
add
sub
xlat
sbb
int3
cld
push
adc
stos
movsl
push
into
aas
dec
mov
data16
roll
mov
sub
or
dec
push
sbb
cmp
pop
cmpb
xor
mov
lret
xor
aas
out
ss
loopne
mov
cmp
cmp
sbbl
xchg
bnd
xchg
mov
lea
push
xlat
mov
ret
mov
pop
adc
rcrl
aam
lea
aad
mov
add
jb
imul
push
popa
lock
scas
fcomi
dec
mov
sbb
push
pop
in
pop
cmp
and
pop
mov
dec
fwait
mov
cmpsl
pusha
cmp
int
adc
test
cwtl
add
test
jg
icebp
mov
cwtl
xchg
pusha
add
pushf
sbb
int3
leave
shlb
lock
ds
pop
sti
pop
pop
fld1
stc
and
ja
adc
int3
sahf
aas
fiaddl
jbe
add
inc
xacquire
mov
mov
test
or
insb
fcoms
test
sti
out
sbb
sahf
call
lods
pop
pop
in
push
xchg
lcall
sbb
mov
pusha
cltd
and
adc
mov
out
adcl
jl
scas
xchg
jge
inc
dec
mov
and
mov
repnz
or
ret
test
movsl
pop
mov
idivb
mov
fsubs
cmp
jp
aam
adc
dec
xchg
sbb
cmp
lcall
push
cmp
mov
repnz
imul
or
adc
mov
cmp
test
mov
fdivs
or
popf
test
aas
xor
mov
inc
rorl
sub
jo
ljmp
int
cld
mov
lea
mov
mov
pop
mov
jl
push
jle
xor
sarl
aaa
mov
push
adc
daa
loop
jae
xchg
pop
pop
pop
cs
sub
mov
xchg
adc
jg
inc
js
pop
push
fbstp
sbb
test
aas
data16
add
xchg
pop
xchg
sub
stos
jbe
ljmp
sbb
test
xchg
scas
pop
ds
dec
mov
icebp
push
das
insl
jmp
fadds
shlb
fsub
cwtl
and
fcoml
dec
int3
mull
sbb
sbb
adc
adc
cwtl
push
pop
mov
mov
aaa
and
mov
out
std
sub
out
fsubs
out
clc
sbb
fcomp
hlt
jmp
mov
mov
mov
fdivrl
xchg
jp
imul
jge
mov
pop
cltd
adc
mov
fstps
add
faddl
in
das
mov
jl
lods
cld
add
mov
movsl
xchg
mov
mov
fcoms
test
pop
pop
test
jle
pop
or
inc
jno
lret
mov
inc
or
mov
xchg
in
fwait
pop
and
add
aas
movsb
cltd
mov
sahf
and
sbb
test
movsb
mov
inc
stos
jne
sbb
movsl
jnp
and
into
sbb
xor
shr
jl
ss
mov
sahf
cmp
ret
fadd
notl
cmp
imul
stos
rep
adc
cli
mov
dec
jmp
mov
stc
adc
dec
jecxz
andl
out
mov
in
imulb
mov
sub
in
jmp
stos
lods
scas
cwtl
test
adc
mov
sti
pop
xchg
xchg
imul
pushf
out
sbb
jg
jno
sub
bound
push
clc
mov
aas
xor
out
mov
mov
cs
stc
pushf
lahf
jmp
pop
fstpl
jne
lods
outsl
and
mov
les
add
pusha
das
xchg
leave
pop
jbe
push
movsb
mov
imul
jp
xchg
push
mov
cld
adc
jno
fdivr
fdivrp
adc
mov
mov
jmp
lcall
test
popf
mov
and
lds
xchg
inc
push
or
jp
ds
adc
inc
fcoml
mov
mov
mov
mov
bound
inc
jl
neg
popf
aas
mov
inc
test
ja
sub
jg
dec
inc
fcom
jmp
jnp
push
aam
loopne
or
sbb
or
jnp
in
aas
xchg
sbb
aad
in
loopne
and
jl
push
and
cld
xor
fs
sub
mov
pop
lret
cmp
andb
scas
dec
jmp
mov
pop
aas
je
add
sub
sbb
mov
test
fdivrl
cmp
mov
or
mov
mov
pop
jmp
sbb
das
aaa
and
cmp
push
jno
lcall
or
jbe
mov
movsl
aam
fsubl
clc
test
jmp
xchg
sahf
sarl
clc
pop
jg
inc
mov
in
jb
data16
movsb
or
dec
out
rcll
repnz
hlt
mov
lock
imul
mov
or
xchg
int3
jg
imull
sub
outsb
sbb
and
add
cltd
pushf
adc
jl
cmp
cwtl
xchg
xor
imulb
nop
cmpsl
jnp
push
fdivr
xchg
push
push
jo
fstl
dec
xchg
cmpsl
mov
hlt
jbe
fistl
pushf
jno
test
jg
mov
ret
fstps
sbb
sbb
xchg
fcmovnb
cmp
mov
pop
and
lods
mov
int
jg
pop
fisttps
cmpb
sub
call
jmp
adcl
adc
sub
push
loopne
cmpsl
cmovle
jle
ss
mov
leave
push
jp
inc
sbb
jno
in
pop
sub
aas
lahf
sbb
arpl
movsl
mov
sahf
pop
mov
sub
sbb
neg
ljmp
decb
inc
bnd
xorb
sub
sub
mov
icebp
adc
sti
pushf
out
sbb
xor
imul
push
lods
dec
outsl
pop
jo
xchg
icebp
repz
cwtl
pop
scas
cmp
pushl
movsb
aaa
push
shrl
into
cmp
mov
xor
fdivrp
adc
ret
dec
cs
stos
jg
rcr
dec
or
stos
ja
lret
xor
or
pop
adc
pop
mov
les
cmp
jnp
cmp
push
dec
in
jns
call
and
imul
sbb
fadds
push
mov
test
out
cmp
jle
jns
lcall
int3
lea
push
mov
aaa
sub
adc
pop
clc
repz
cs
push
jmp
lods
cmp
negb
rcrb
lea
in
dec
dec
adc
lcall
scas
and
inc
adc
adc
neg
xor
cwtl
ja
lahf
mov
into
pop
adc
sbb
dec
xchg
mov
repz
fiadds
ljmp
push
xchg
xor
mov
fsubr
pop
add
add
or
push
cs
jmp
fsubrs
cmp
ret
inc
ljmp
mov
cwtl
sti
dec
leave
test
or
cmp
sub
cmp
sub
shl
adc
out
push
shrl
fsts
test
mov
jg
xor
cmp
pop
sarl
push
sub
negb
lea
mov
sub
sbb
test
jae
mov
xchg
mov
pushf
or
adc
xchg
add
lods
test
lcall
pop
mov
mov
push
pushf
mov
sub
stc
fwait
ror
mov
int3
call
push
dec
in
adc
jb
scas
mov
add
xor
inc
fbld
cmp
or
cmp
adc
icebp
loopne
xchg
ss
and
cmpsl
stos
cwtl
js
adc
and
stos
jnp
and
push
pusha
pop
into
popf
adc
sbb
xchg
dec
sbb
iret
push
cmpsb
das
jmp
mov
addl
sbb
mov
dec
xlat
lods
sbbl
cmp
add
mov
xor
rcrl
jg
jp
dec
test
jmp
xchg
pusha
out
lods
fldt
clc
and
jnp
lahf
mov
inc
push
dec
adc
mov
add
sub
mov
add
mov
cmpsb
roll
stos
fstpl
jno
cltd
fmull
ljmp
jmp
xor
pushf
scas
pop
jg
and
jg
lods
int
jg
sub
jg
push
adc
cwtl
lock
push
adc
mov
hlt
lret
call
pop
cmp
or
mov
and
mov
loopne
mov
adc
adc
xchg
stos
jge
stos
and
clc
decb
fisubrs
lahf
jae
sbb
jae
sub
push
movsb
mov
add
outsl
cmp
shll
lahf
cmp
rcrl
mov
pop
xchg
lahf
stos
dec
cltd
mov
int
fisubrl
fwait
lock
mov
jecxz
or
mov
lcall
jp
mov
leave
dec
flds
in
mov
dec
jns
out
cmp
sbb
jmp
in
loop
add
push
fnstcw
data16
mov
cmp
int
adc
pop
ljmp
jno
lahf
adc
psubsw
mov
movsb
fisttpll
jo
jno
mov
sbb
jl
cwtl
pop
repz
mov
jecxz
addb
in
sbb
pop
cmp
push
push
fs
dec
aad
mov
mov
cltd
mov
dec
jmp
in
mov
dec
iret
add
mov
lods
mov
repnz
mov
xor
inc
adc
imul
in
adc
or
fisttpl
rol
lea
adc
inc
push
sti
int
scas
inc
stos
jae
and
sbb
lds
popl
push
notl
xor
jge
mov
pop
push
cs
inc
jne
adc
lods
hlt
xchg
insl
lods
fcoml
dec
lds
cltd
fprem
jecxz
mov
loope
dec
and
outsl
data16
cmp
test
jl
xchg
mov
fisubs
xchg
mov
pop
lahf
cmpsl
jns
insb
popf
sbb
ss
jmp
sub
popf
jle
sbb
std
mov
fwait
mov
es
mov
push
push
jmp
or
jno
sub
mov
addr16
inc
xchg
ja
or
pop
adc
push
mov
pop
sahf
jnp
ss
dec
jns
jp
lahf
add
push
mov
cmp
mov
lock
pop
jmp
cmp
je
mov
into
jns
clc
cwtl
jnp
add
repz
ret
push
sbb
jmp
insl
and
jmp
jbe
movsl
jbe
imul
pop
jnp
mov
sbb
push
in
mov
jle
lret
in
jne
stos
xchg
cwtl
sbb
imul
xchg
or
lcall
lahf
push
mov
addb
lods
enter
mov
adc
aaa
stos
rol
das
in
pushf
fsubrl
divb
xchg
pop
ret
sub
pushf
adc
stc
cwtl
dec
testb
mov
mov
push
jl
add
lds
pop
sarl
xchg
fiadds
sub
cmp
cmp
dec
stos
lret
jae
pop
subl
mov
jle
mov
pop
mov
dec
jmp
xchg
dec
icebp
xchg
je
sbb
data16
pushf
jecxz
rol
std
inc
mov
dec
push
out
stos
cs
outsl
cmpsb
clc
into
lahf
std
sub
pop
jecxz
es
ljmp
jp
adc
adc
popa
sti
cltd
into
mov
mov
aam
sub
pop
shl
cmpsb
movsl
paddw
xchg
dec
cs
fldt
mov
movsb
or
in
cmpsl
out
push
add
sbb
mov
mov
jge
test
cli
xchg
es
ljmp
sbb
add
pop
xlat
mov
ds
ds
mov
std
mov
rol
jp
outsl
scas
movsb
flds
stc
pop
aas
pop
xchg
shll
jo
cmpsb
jae
sub
int3
mov
in
jbe
mov
daa
mov
pop
out
nop
iret
test
xchg
dec
lahf
scas
mulb
push
lret
xor
sub
lret
ss
push
test
inc
mulb
lock
mov
ret
sub
xor
xor
es
sbb
and
scas
dec
cmp
xor
and
test
xor
jae
push
pop
adc
jg
pop
push
push
aaa
pop
xchg
fcmovnbe
mov
mov
imul
in
ficompl
decl
push
mov
sbb
mov
mov
xchg
testl
std
sbb
adc
sbb
jg
negb
lea
insb
outsb
inc
lret
ljmp
xor
int
in
pop
nop
daa
push
jge
lcall
std
leave
cmpsl
and
lods
test
out
mov
inc
add
xchg
mov
pop
mov
pushf
xor
push
int3
shlb
jl
pushf
cwtl
cmp
pop
shll
fwait
push
lret
cmp
lods
push
in
loope
mov
cmp
cmp
bound
or
pop
mov
mov
dec
add
inc
daa
or
pop
pop
inc
xchg
loope
xchg
cmp
fmull
xchg
xchg
cwtl
sub
jp
scas
dec
dec
les
xadd
mov
cwtl
push
stos
jg
xchg
sti
push
mov
out
xor
scas
cli
mov
push
nop
mov
mov
jae
pop
decl
pop
cwtl
push
mov
cmp
mov
andl
xchg
xor
jmp
pusha
inc
dec
mov
insb
dec
dec
adcb
sbb
cmp
int3
pop
jl
nop
pop
cld
xlat
xlat
mov
sbb
push
xchg
cmp
push
les
adc
mov
insl
fmul
jl
jp
mov
call
mov
mov
out
icebp
mov
aas
jmp
icebp
cmpsl
mov
add
movl
ja
aad
cmp
and
sbb
mov
pop
movsb
arpl
inc
cmp
mov
inc
jg
test
cmc
imul
add
fmuls
mov
mov
jae
scas
sti
fisubrs
repz
or
mov
cmpsl
stc
in
pushf
ficoms
xchg
sub
pop
repnz
push
lods
and
jae
imul
call
pop
mov
scas
cmp
cmpsl
into
in
lea
js
mov
repnz
stc
ljmp
mov
and
int3
pop
dec
jg
ljmp
dec
jo
subl
xchg
add
sbb
mov
and
scas
cwtl
inc
or
std
or
cli
sbb
mov
leave
dec
jge
and
push
cli
mov
xor
fdivp
insl
inc
bound
orb
lea
pop
lret
out
or
add
mov
mov
and
sub
std
xchg
and
mov
and
fisubl
sub
cmc
scas
je
imul
cmpb
dec
mov
mov
ficoms
mov
adc
cltd
jmp
movsb
int
ret
mov
les
movsl
inc
test
mov
pop
cwtl
rorl
lock
in
push
insl
pushl
mov
mov
loop
pushf
mov
test
call
cmp
fcmovnu
xorb
mov
mov
mov
ret
sbb
ja
mov
pop
jp
sub
pop
test
jmp
mov
cmp
and
ljmp
pushf
lahf
cwtl
cli
adc
dec
outsl
js
mov
ja
jbe
mov
mov
cmc
pushf
inc
scas
fdivs
push
lcall
outsb
push
movsl
dec
jne
mov
mov
adc
fwait
sti
cli
nop
fdivrl
int3
and
fcomps
add
shl
arpl
vfrczsd
xchg
sti
faddl
es
ficomps
test
in
insl
lret
js
mov
cmpsl
lahf
mov
cwtl
mov
in
orb
out
or
fwait
stos
push
fbstp
loop
xchg
cli
xor
inc
int
loop
push
adc
lahf
insb
jp
idivb
jae
shrb
test
flds
iret
cmp
xchg
andl
aas
adc
lock
xchg
pop
cmp
xchg
jo
xor
pop
es
lret
rep
dec
stc
mov
cmp
push
xor
cmpsb
dec
cmp
adc
sub
mov
mov
mov
sti
out
inc
xchg
xor
lret
mov
inc
or
lret
sti
fwait
sub
jno
iret
push
fidivs
in
fstpt
mov
mov
inc
fnsave
gs
xchg
inc
dec
movsl
mov
jo
xlat
jnp
aas
scas
and
cmp
sub
sbb
cmc
movsb
xorl
cwtl
add
pop
cmpsb
xlat
jp
cltd
push
aas
fildl
lods
mov
cmc
push
push
sahf
or
mov
out
sub
jmp
jae
call
sbb
inc
jl
inc
xlat
lahf
sahf
sahf
pop
call
and
pop
xor
nop
xchg
ss
fs
jl
cmpsb
mov
mov
inc
xor
pop
dec
imul
mov
jg
outsb
jae
mov
xlat
and
scas
add
sahf
sbb
pop
loopne
divb
ds
in
mov
jmp
push
decb
jl
sti
popa
clc
fstpl
fisttps
mov
outsb
push
jecxz
mov
hlt
test
cmc
les
push
or
adc
and
mov
adc
or
cltd
lcall
sarl
shl
cmp
outsb
adc
xchg
icebp
jl
push
loopne
or
mov
cmp
sbb
repnz
inc
pop
clc
fsts
inc
imul
sarl
sti
xchg
mov
adc
out
xchg
lahf
cmpxchg
mov
and
mov
jo
mov
gs
mov
adc
in
and
pop
test
sub
outsl
mov
adc
cltd
dec
es
ljmp
sub
push
cli
cli
int
lods
sar
fistl
cltd
lods
scas
stc
fdivs
adc
inc
pop
push
mov
pop
mov
sbbb
cltd
and
push
fsubs
mov
mov
imul
in
fldcw
pop
xchg
test
std
in
sub
shlb
mov
lods
fwait
mov
push
mov
jl
fimull
pop
out
add
clc
jae
add
mov
push
jnp
sub
loope
in
push
in
push
sahf
pop
pop
lds
int
sbb
dec
push
clc
mov
out
sbb
xchg
aaa
add
mov
xchg
leave
xor
xchg
rcl
mov
sub
adc
mov
test
xchg
xchg
add
xor
movsl
jg
cli
stc
in
cmpsb
lods
cmp
xor
sub
mov
in
fadds
mov
cltd
mov
lcall
pop
addb
sahf
dec
pop
jp
push
xchg
cli
repnz
outsl
push
mov
fdivr
mov
adc
ljmp
scas
jne
fadd
mov
jnp
scas
call
shll
int
mov
mov
pop
testl
bound
xchg
in
ss
push
jmp
xorl
in
pop
ds
sub
out
stc
cld
cmp
mov
adc
dec
enter
pop
push
jne
cmp
mov
inc
sub
es
fnstcw
mov
das
fstpt
mov
fwait
jg
fidivl
fstps
xor
loope
aas
dec
sub
fwait
adc
pop
lahf
fcmovu
pop
loopne
and
aaa
push
pop
xchg
fldt
push
stc
shll
jl
scas
scas
sbb
xor
push
scas
xor
insb
pushf
xchg
fs
pop
loopne
fwait
xor
xor
lock
xchg
loop
les
sahf
scas
mov
scas
pusha
mov
xor
xchg
pop
stos
cmp
lock
aaa
jg
cmp
lds
cmp
das
sbb
imul
mov
jle
test
cmp
mov
mov
pushf
mov
push
in
xlat
adc
je
sub
hlt
or
push
xchg
shlb
repz
cmpsb
lret
nop
adc
add
pop
jno
pop
jg
pop
sbb
pop
out
mov
cmp
mov
out
and
pop
cli
mov
ret
add
push
inc
jae
pop
cltd
pop
jle
jnp
cmc
loope
add
mov
test
mov
outsl
jp
fcomps
sbb
push
mov
das
lahf
lods
aas
call
cltd
scas
lcall
sub
sti
test
mov
cmp
mov
mov
adc
stos
outsl
and
int3
stc
lret
push
rorl
xchg
xor
cmp
mov
or
outsb
fldcw
jecxz
sbb
adc
cmp
fwait
xor
add
in
or
xor
ljmp
push
mov
fcoms
jno
pop
inc
sbb
aam
out
mov
into
xchg
cmp
popf
add
mov
cmp
cmp
jle
mov
lea
pusha
push
call
adc
mov
cmp
subb
xchg
outsb
stos
lock
add
mov
cmpsb
repz
push
or
cmp
inc
adc
adc
mov
test
and
push
shrb
lock
push
mov
jbe
mov
fiadds
ljmp
xchg
push
sbb
out
add
push
and
xor
pop
fiaddl
in
xchg
fs
in
lods
jle
push
arpl
or
xlat
test
cmpsl
pop
out
idivb
ficoml
sbb
in
and
loop
addr16
jp
loope
int3
adc
mov
lcall
cltd
jnp
sub
pop
xor
push
pop
sub
push
int3
mov
sub
test
jb
sbb
mov
xchg
mov
mov
mov
lcall
and
xchg
dec
jg
add
movsl
mov
jecxz
insl
mov
hlt
push
nop
out
lods
sub
cmp
dec
and
pusha
sbb
enter
fadd
xchg
or
rcll
xchg
adc
lret
stc
popa
cmp
fstl
rcrb
ss
neg
and
inc
cli
inc
das
shlb
notb
clc
dec
cld
sarb
push
pushf
xchg
fs
cmp
and
orl
lcall
push
in
pop
nop
push
add
cmp
sbb
sbb
scas
push
add
xchg
mov
push
scas
adc
in
into
jg
sbb
cwtl
fcompl
xchg
jle
leave
inc
adc
das
outsb
pop
daa
pop
cli
mov
cmp
fistl
jl
aad
pop
lahf
test
ja
jbe
xorb
ret
fcomps
inc
lahf
fcompl
inc
sbb
icebp
mov
fcomp
push
pop
enter
pop
mov
cmp
scas
pop
push
sarb
sahf
je
and
mov
sbb
sahf
cmp
xor
mov
xlat
pop
xchg
jns
xchg
push
pop
mov
xchg
mov
jns
test
jnp
fs
pop
popf
sbb
or
add
outsb
dec
jmp
mov
or
jl
sahf
sti
sahf
arpl
cs
scas
push
sub
cwtl
cwtl
iret
add
jnp
imul
xor
popa
mov
mov
jo
dec
xor
adc
fsubrp
mov
inc
and
sub
popa
fsubr
subb
jle
rorl
jno
jns
and
inc
dec
dec
mov
fidivl
sbb
aam
and
repnz
dec
jo
inc
mov
adc
pop
inc
in
adc
jle
or
inc
enter
das
icebp
hlt
cmp
add
or
lcall
cld
sarb
mov
mov
sbb
cmpsl
mov
std
add
sub
mov
push
jecxz
ss
cmc
das
mov
and
pushf
lret
ja
xchg
push
call
mov
pop
adc
stos
mov
mov
div
iret
sysenter
push
in
pop
and
inc
dec
pop
lds
insl
or
fs
jp
dec
cltd
aas
pop
mov
jecxz
and
xchg
jnp
cs
cmp
xchg
dec
xchg
stos
pop
xchg
faddl
sbb
mov
lock
iret
mov
and
lods
std
popf
cmp
adc
cltd
leave
fcoml
test
mov
ja
cli
cwtl
sbb
jg
mov
es
xchg
lock
push
mov
ret
xchg
outsb
push
cmp
push
dec
mov
cs
mov
addr16
mov
stos
insl
inc
scas
pop
or
jmp
mov
pop
or
imul
cmp
rorl
jne
sbb
repnz
mov
ljmp
repnz
dec
inc
test
mov
mov
xchg
aam
rcr
mov
pop
dec
ret
out
loope
cmp
data16
add
out
push
stc
idivl
pushf
sbb
dec
and
jg
cmpsb
je
js
and
jae
sub
push
stos
aas
lret
pop
ror
mov
cmp
dec
mov
jae
cltd
hlt
fwait
xchg
insb
xor
into
dec
push
int
push
cmp
lahf
xchg
mov
test
mov
inc
pusha
fdivl
pop
sub
test
insl
adc
add
pop
sbb
sbb
push
mov
test
inc
out
jle
test
cmpl
xchg
faddl
mov
pop
inc
aas
sbb
cmpsb
ffree
ss
sti
add
scas
leave
jne
jl
clc
sub
and
ss
int
nop
sti
push
and
push
cltd
outsl
decl
iret
mov
adc
das
pop
dec
fisubs
sub
popf
test
xlat
mov
aam
or
push
jne
test
ds
fisubs
sub
pop
pop
ret
cld
outsl
dec
es
nop
xchg
mov
add
cmpsb
xor
aas
mov
cmp
and
mov
ljmp
sahf
test
mov
jmp
jle
lret
stos
cld
gs
movsl
sti
sbb
clc
outsb
mov
adc
jle
fdivl
in
cmpsb
pusha
push
lahf
add
mov
aas
in
adc
and
jmp
and
ja
xlat
fldcw
cmp
imul
mov
scas
push
loopne
mov
cmp
jns
fisubl
cmpsb
sti
and
xchg
lahf
shr
loop
adc
pop
push
xchg
jecxz
cld
xchg
xchg
inc
xchg
das
and
in
mov
aaa
adc
jnp
mov
push
sub
xor
or
add
xchg
cmp
add
nop
js
jae
fdivl
iret
stos
fdivr
jo
and
scas
xlat
jae
int3
cmp
icebp
fdivs
mov
leave
jnp
or
adc
pop
pop
mov
pop
sbb
xchg
cmp
mov
sahf
ds
sub
imul
clc
subl
sbb
call
mov
xor
xchg
std
les
add
rcrl
jo
or
xchg
or
repz
sub
xchg
lcall
cmp
xor
int3
fldenv
rcr
outsb
cmp
mov
std
call
xchg
or
notb
jnp
fadds
std
das
cmp
out
fadds
mov
into
shll
imul
xchg
jnp
popa
cmp
cmp
ret
and
mov
fwait
sti
insl
push
rcr
xor
mov
das
push
mov
mov
adc
pop
mov
pop
addr16
mov
mov
rorb
pop
ja
iret
sbb
xchg
insb
or
pop
sahf
fdivs
and
popa
pop
mov
aaa
ds
mov
inc
scas
repz
cmp
xchg
xchg
int3
repnz
fdivrs
dec
pop
mov
mov
fcmove
les
sbbb
mov
leave
dec
ljmp
xor
mov
decb
sbb
mov
pop
mov
lods
sbb
cmp
push
adc
cmc
int3
movsb
mov
es
mov
test
mov
fldcw
ja
jecxz
xchg
jp
cmp
mov
push
stos
dec
in
cli
cmpsl
pop
sub
mov
jbe
jl
sub
sub
mov
rcrb
clc
outsb
out
aaa
sub
mov
dec
push
xor
std
cmp
sahf
xchg
loop
mov
xchg
sti
test
sbb
mov
hlt
ret
orl
jg
into
jp
daa
dec
out
je
xchg
std
mov
rcrl
sbb
pop
test
add
xor
adcl
enter
pushf
daa
cmp
ljmp
pop
pushf
sti
xor
xlat
cmpsl
insb
ja
fnsave
lret
cmp
mov
ljmp
pop
cmp
lcall
sti
neg
out
fwait
aas
add
cli
sub
mov
aas
bswap
stos
leave
push
sbbl
add
mov
jp
jl
adc
jbe
jae
aaa
jp
push
mov
fildll
xchg
ss
mov
cmp
loopne
scas
jg
add
xchg
or
push
test
test
adcl
iret
cmpb
pushl
in
mov
jne
movsb
cwtl
addr16
cli
mov
fcomip
into
push
icebp
sub
cmovl
sub
add
lahf
jbe
insb
aas
lahf
xlat
stos
pop
ficompl
test
sbb
notl
test
sbb
in
btr
cwtl
mov
adc
das
lods
pop
nop
inc
in
dec
xchg
dec
in
dec
sub
cmpsb
push
stc
mov
sbb
sahf
jnp
loop
aam
mov
cmp
sbb
mov
fnstenv
mov
stos
loop
jecxz
add
jnp
sbb
idiv
in
cmc
dec
dec
popa
adcl
mov
fcoml
into
cli
add
cli
dec
inc
addb
in
cli
das
ret
outsl
pop
push
push
fisubs
insb
mov
or
lcall
jo
daa
xor
in
sbb
cmpl
stos
les
sub
sub
mov
sti
sub
mov
push
loopne
mov
ret
in
cmp
lret
decb
stos
sti
mov
mov
adc
mov
cli
testl
push
in
mov
mov
push
pop
xor
cmp
call
xchg
inc
mov
push
xor
cltd
mov
in
push
mov
sbb
or
mov
mov
orl
rcl
cmp
loopne
cmpsl
in
xor
filds
mov
sbbl
data16
lcall
pushf
adc
adc
xlat
xor
inc
fiadds
jae
cltd
clc
dec
cld
ljmp
imul
das
mov
sarb
fstl
into
jae
cmpsb
movsl
xor
inc
negb
dec
mov
pop
ret
sahf
adc
mov
xor
outsb
dec
mov
mov
enter
xchg
cmpsl
or
mov
testb
fadds
or
mov
stc
dec
hlt
clc
lcall
sets
lods
jae
lret
ds
mov
outsl
movsl
dec
frstor
sbb
aad
stos
pushf
aas
jo
hlt
jo
and
ds
add
test
faddl
xor
dec
mov
ss
arpl
inc
xchg
lock
pop
or
loope
mov
sahf
in
cwtl
lock
sti
jge
cld
cmp
adc
xchg
jle
nop
pop
fmul
bound
adc
push
cli
fsubrs
out
sbb
pop
sub
nop
in
movsb
lcall
aam
mov
add
sub
outsb
daa
insl
fucom
xchg
test
lret
imul
sti
pop
out
cmpb
loopne
cmp
dec
stos
lret
lcall
out
repnz
leave
pushf
xor
sbb
in
outsl
rclb
cs
je
movsb
ret
pop
lock
aad
stc
sbb
lods
bound
pop
mov
push
mov
mov
ficoml
pop
sahf
repnz
scas
inc
fcmovu
mov
andl
push
ds
loope
outsl
pop
outsb
cli
clc
mov
and
xchg
sub
js
sbb
cmpsl
ret
stos
dec
dec
lds
jl
pop
mov
incl
cmp
fistps
mov
sar
jns
xchg
lahf
loopne
rcrb
xor
aas
mov
sbb
ret
mov
out
fildll
mov
push
adc
mov
cld
imul
xchg
cmpsb
ljmp
mov
addr16
mov
lea
push
pop
cmp
lea
fsubrl
mov
sbb
std
cli
and
pop
jbe
je
ds
in
mov
sti
pushf
pop
add
daa
ss
cli
fcom
mov
push
test
or
loopne
xchg
nop
cmp
aaa
pop
fimull
sbb
sahf
sub
pop
sar
adc
xor
lahf
lcall
pop
pop
jge
xchg
mov
dec
adc
pop
fstpl
mov
pusha
orb
std
loope
lods
mov
aas
inc
jg
pop
dec
icebp
xchg
pop
shrb
push
jae
mov
out
mov
fldl2e
pop
xchg
aad
xor
and
pop
mov
xor
lahf
mov
mov
repnz
pop
cmp
add
add
mov
loop
dec
cld
mov
test
mov
mov
pushf
leave
sub
int
lcall
test
out
je
clc
cmp
mov
mov
fnsave
lds
fidivl
cmpsl
pop
fidivrl
lret
inc
orl
mov
push
iret
fisubrl
movsb
cwtl
lahf
fst
xchg
push
fwait
sti
cmp
movsb
les
cmpb
jge
rcrb
shl
enter
sub
in
fwait
pop
jge
xchg
push
sub
xchg
inc
mov
sti
xchg
fwait
mov
aaa
cs
fs
pop
pop
sub
cmpsb
jo
adc
sbbl
in
sbb
push
es
mov
inc
xchg
jo
sbbb
add
test
or
mov
mov
int
pop
jp
xor
cmpsl
repnz
test
outsb
repnz
fwait
loop
push
pop
pop
mov
push
out
jae
pop
mov
es
xor
mov
xchg
push
adc
adc
das
ret
mov
xchg
lods
or
es
fildl
mov
lea
test
sbb
pop
pop
mov
clc
push
sbb
pop
pop
sbb
inc
lds
out
cltd
sarl
je
inc
test
test
inc
out
pop
jbe
xor
lahf
jae
inc
int3
lcall
in
das
mov
sub
mov
test
aas
xchg
sti
in
aam
pop
aas
and
xchg
xor
sbb
cmp
fwait
ds
fucomi
push
loop
push
adc
aas
daa
mov
jle
nop
or
enter
mov
lock
cmp
sbb
pushf
pop
jle
cli
pop
imul
sti
fcomps
cwtl
jp
jbe
out
repz
scas
jmp
ljmp
stos
loop
js
aas
cli
scas
jnp
call
mov
cltd
pop
mov
insb
add
jle
test
test
fcmovne
jne
fdivrs
fwait
cwtl
mov
call
adc
jns
mov
stos
mov
mov
mov
imul
hlt
clc
cmpsl
call
in
shll
cld
stos
cmp
mov
orb
fdivl
mov
lods
or
xchg
jns
jp
and
cltd
dec
jmp
testl
sbb
lcall
es
in
mov
aam
adc
sub
scas
sbb
icebp
ljmp
and
pop
mov
jno
pop
test
jp
jns
pop
lods
icebp
mov
cmpl
test
xchg
popf
daa
outsl
sahf
mov
sub
mov
cmp
sti
cltd
push
mov
mov
leave
nop
adc
sbb
mov
mov
in
test
lret
popa
test
gs
fdivs
xchg
jmp
sub
outsl
adc
popf
icebp
es
cmp
daa
pushf
mov
dec
pop
adc
jmp
pop
std
adc
xchg
movsl
jae
movsl
sti
iret
int3
adc
arpl
popa
in
fdivrs
lds
fnstsw
mov
sbb
repz
xor
pop
imul
enter
pop
mov
jle
mov
aam
fisttpl
mov
cmc
and
dec
push
out
xchg
popf
test
enter
lahf
flds
mov
pushf
into
jmp
xchg
xor
adc
cld
fwait
mov
imul
mov
cmp
cmp
and
xchg
mov
pushf
mov
daa
sub
iret
and
xchg
push
xchg
jecxz
mov
call
pushf
out
mov
outsl
arpl
mov
push
sbb
push
into
fcompl
insb
dec
xchg
xor
xchg
lock
int3
mov
fstp
nop
jne
push
data16
out
push
jmp
inc
cld
decb
pop
pushf
xor
add
sti
ss
sub
pop
pusha
fdivrp
sbb
leave
pop
push
pop
pusha
into
mov
das
and
loop
gs
lcall
jne
aas
fcoms
push
mov
push
sbb
scas
sti
enter
inc
je
icebp
pop
mov
cmpsb
cwtl
mov
mov
ret
cmp
xchg
pop
jle
aam
cmp
xchg
xor
cli
sarl
and
mov
sahf
pop
ds
jb
fisttps
daa
ss
mov
test
test
jl
sbb
pushf
fistl
cli
mov
lods
call
sub
jle
fcomps
movsl
mov
cmp
mov
dec
mov
out
xchg
insb
xchg
pop
mov
mov
fdivrp
lea
cmp
sbb
xor
aad
rorb
fadd
imul
test
push
dec
je
sbb
jne
mov
leave
sub
adc
xchg
dec
dec
call
test
div
cwtl
ret
fsubr
and
movsb
movb
mov
mov
dec
mov
sub
jp
js
mov
ss
gs
inc
out
mov
les
pop
pop
je
and
aad
cmp
push
sahf
out
lret
loop
stos
scas
jnp
dec
addl
std
cs
add
push
jle
inc
testb
cmp
rcl
push
aam
out
fcoms
sbb
mov
push
lcall
sub
cld
pop
jl
aad
xlat
mov
xor
cld
or
push
add
fcomps
sti
aas
xchg
pop
out
subb
mov
sub
cmpsb
sarl
mov
movsb
mov
imul
push
xor
test
push
pushf
mov
mov
mov
pop
ret
mov
pop
ficomps
sbb
mov
adcb
shlb
fwait
das
data16
arpl
fnsave
sbb
lea
lods
lret
je
mov
repz
add
out
jns
add
icebp
pop
jb
lahf
les
cmp
aam
pop
es
jp
hlt
aam
fsubr
lcall
int3
inc
repz
mov
mov
adc
xchg
shrl
xchg
daa
mov
dec
loope
push
or
into
je
or
mov
pop
mov
inc
sbb
mov
cmp
xor
lret
sbbl
mov
dec
je
test
add
cli
sbb
and
fimuls
ficoml
ficoms
pop
adc
dec
push
gs
xor
fwait
mov
xchg
lods
je
stc
adc
and
test
imulb
sbb
xchg
xchg
push
xchg
sbb
add
push
ja
dec
popa
adc
fadds
bound
fdivl
dec
rcr
ljmp
shr
faddl
dec
xor
pusha
and
mov
jnp
je
cmp
addr16
lahf
addl
cmp
pop
mov
icebp
pop
cwtl
push
jp
sbb
and
inc
xchg
mov
fcmovnb
jne
fnsave
pop
xchg
jb
sub
adc
std
pop
sbb
push
ficoml
test
ss
ds
fnstsw
mov
dec
sbb
shll
mov
sbbb
mov
es
cwtl
lret
xor
xchg
fcoml
sub
lea
pop
push
mov
aad
mov
cmpsl
adc
fcmovu
ja
sbb
aas
jo
inc
scas
and
xlat
mov
or
lret
cmp
pushf
daa
pop
sub
adc
mulb
xchg
mov
cmp
mov
xor
test
cwtl
hlt
fsubrl
cmp
mov
sti
push
test
adc
sbb
mov
pop
fcompl
loop
movsb
cli
imul
fsubrl
mov
fcoml
or
adcl
test
sbb
jne
sbb
pop
inc
js
lcall
mov
cmp
ljmp
adc
ret
mov
fnstcw
test
pop
sub
insl
xchg
faddl
adc
shrb
arpl
cmpsb
sti
pusha
sbb
cli
out
jae
sub
sbb
mov
adc
sub
adc
cli
pusha
nop
cmp
or
sahf
push
push
scas
dec
push
stos
sbb
xchg
push
adc
jno
into
xchg
cld
cmpps
pushf
fildll
clc
clc
pop
xchg
sbb
pop
ss
pop
xor
insb
cmp
pop
shrb
pop
jle
and
sarb
inc
fisubs
xor
xor
mov
imul
push
scas
lods
in
pop
dec
mov
or
mov
repnz
scas
in
dec
sbb
cmp
scas
jmp
enter
daa
adcl
mov
pushl
mov
mov
push
cmp
dec
lods
jmp
jbe
xchg
or
lcall
push
jecxz
and
das
xor
cmp
mov
addr16
fcoms
adc
insb
jecxz
cmp
rorl
cmp
jo
lahf
scas
sti
or
jmp
cwtl
inc
movsl
sbb
jnp
daa
jmp
mov
cli
insl
fisttps
loope
push
adc
in
pop
popf
cmpsl
jo
xchg
inc
out
ror
mov
in
inc
xor
or
out
adc
outsl
sub
xchg
mov
add
cmp
push
jle
push
cmp
pop
mov
stos
mov
out
xchg
insl
xchg
or
sbb
fs
dec
jecxz
pop
jle
call
sarl
sti
pop
push
cs
test
in
fdivrs
xorl
loope
push
mov
cmpsb
xchg
popf
mov
ds
adc
jo
jo
je
or
xchg
cmp
jb
mov
jb
push
in
in
mov
mov
sbb
mov
cli
sbb
xor
xlat
pop
mov
in
clc
mov
xchg
lods
fs
cwtl
ljmp
pop
pop
inc
cmp
push
cmpsb
push
mov
or
inc
pusha
xchg
loopne
jg
lods
jmp
loop
jl
mov
xchg
aas
adc
mov
aas
jae
sahf
jg
icebp
loop
cmpsb
dec
inc
jg
mov
sub
adc
sub
shrl
stos
mov
adc
push
push
movsl
adc
scas
cmp
les
pop
fadds
stos
pushf
pop
enter
add
decl
mov
add
lret
das
add
and
pop
inc
jg
in
cmp
sub
push
and
outsb
insb
jmp
js
cmp
gs
jecxz
xor
add
pop
push
shlb
stc
cmp
or
fwait
push
add
pushf
cmpsb
cmp
add
mov
cmp
leave
add
xor
and
rorl
mov
sbb
fisubs
jo
lock
xorb
xor
stc
fcomp
sbb
push
xchg
pop
push
dec
stos
mov
push
push
sbb
push
vpmacsdql
imul
js
fs
mov
pop
cmp
xor
mov
lods
in
push
mov
dec
addr16
mov
pop
fcoml
les
xchg
fstl
add
fists
adc
test
int3
pop
mov
lret
add
test
movsl
popf
fnstenv
or
lcall
xchg
rcrb
mov
dec
mov
movsb
aas
int3
addr16
xchg
ja
add
inc
pop
pop
out
jmp
cmp
or
adc
push
cmp
sub
dec
xchg
fwait
daa
jne
aam
xor
xchg
fsubrs
ret
sub
js
imul
cld
xor
or
es
cmp
mov
push
adc
jae
lods
mov
fistpl
ret
cs
or
daa
add
sbb
xchg
and
aas
or
ljmp
lods
and
lret
loope
pop
test
sub
jns
jmp
inc
into
sbb
pop
or
ret
push
xchg
cwtl
dec
and
cli
pop
lods
lods
jno
xchg
repz
cld
icebp
loope
xchg
xchg
movsl
fdivrl
hlt
push
lods
jp
mov
and
cmp
adc
aam
scas
adcb
scas
in
pop
add
mov
fcomps
jp
pop
lret
and
adc
dec
pop
rcl
mov
lahf
adc
lock
mov
sbb
pop
push
add
inc
mov
sbb
hlt
repnz
testl
pop
test
faddl
arpl
cli
mov
jp
jnp
or
es
adc
pop
rcll
mov
sub
push
pop
sbb
lcall
cmc
fstl
cmp
adc
outsb
adc
pushf
cwtl
adc
leave
mov
push
icebp
cmp
mov
and
lock
push
mov
cmp
mov
and
pop
mov
xor
mov
pushf
xor
movsb
outsl
lret
push
into
mov
fsubrl
mov
fsubl
cmp
sub
xchg
mov
mov
je
jne
add
stc
push
pop
jl
shlb
mov
js
lods
clc
lcall
inc
jae
mov
jnp
push
pop
push
sub
fcmovu
adc
xor
inc
test
jo
xor
cmp
call
das
std
fisttpl
pushf
jmp
push
dec
inc
jp
loop
cltd
inc
test
cs
addr16
cli
or
mov
clc
ret
adc
mov
cmp
int
iret
ds
push
inc
xchg
xchg
sub
pusha
sbb
mov
dec
adc
xor
mov
add
pop
add
popa
ret
adc
pop
insl
pop
mull
cld
adc
push
data16
pop
pop
or
out
sarl
pop
cmp
test
inc
cmp
mov
inc
lahf
push
ja
xchg
inc
pop
lcall
jnp
cmpb
jae
adc
xchg
sbb
mov
cli
xor
test
jnp
push
test
in
loope
fwait
mov
sbb
mov
int3
cmp
sbb
mov
dec
cmp
js
in
push
mov
jle
test
lret
sti
cld
ficomps
jns
ljmp
outsl
inc
outsb
pushf
mov
repz
scas
mov
ja
outsb
sub
pop
fcomps
decl
in
faddl
push
xchg
jmp
xchg
fildl
sbb
rcrl
add
lret
jl
and
lock
daa
scas
jp
insb
fmull
cmp
adc
je
ja
out
stc
incb
pop
push
cmp
movsb
jmp
fcoms
fyl2xp1
loop
pop
sub
pop
xchg
fbld
outsb
cmc
sbb
adc
inc
inc
popf
cld
enter
or
cmp
xchg
sub
iret
jns
out
aaa
lcall
cmp
aas
xchg
sti
add
lds
adc
mov
sub
sbbb
push
jge
jnp
gs
push
shl
sub
inc
cmp
pop
in
fdiv
sbb
xchg
movsb
nop
movsl
pop
leave
stos
xchg
mov
lret
inc
ds
gs
fdivs
sahf
jg
mov
jnp
mov
jne
mov
les
mov
enter
scas
popa
and
mov
push
jae
sbb
test
inc
mov
mov
push
addb
fsubs
int
mov
sti
rclb
bound
les
inc
ret
nop
and
mov
or
push
mov
adc
cmp
les
data16
cmpsb
xchg
pop
mov
mov
sahf
push
mov
add
mov
dec
sbb
test
cs
pop
cli
fdiv
push
dec
jno
jp
cwtl
pop
mov
push
xchg
out
lahf
jnp
mov
popa
sub
push
lock
sbb
mov
mov
cmp
mov
aaa
pop
cwtl
add
push
mov
mov
cmp
pushf
sub
cltd
jo
pop
and
push
fs
cmpsl
stc
insb
fdivr
or
mov
je
pop
js
push
mov
mov
pop
mov
or
pop
in
test
mov
out
mov
jb
adc
mov
ret
inc
cmp
xchg
sub
push
mov
std
cmpsb
pop
sbbb
mov
fnstcw
fidivs
mov
xchg
and
aam
loopne
mull
xchg
pop
loope
aas
sbb
sbb
aas
cmpl
xchg
push
jo
sbbb
and
sbb
mov
xchg
mov
add
mov
rclb
mov
ljmp
popf
test
cmp
mov
jle
mov
andb
xchg
ret
or
push
inc
js
enter
scas
jo
push
fadds
loop
in
out
adc
aam
sub
pop
gs
mov
push
jg
lret
inc
xor
jecxz
push
xor
hlt
popa
sahf
sti
movsb
sub
inc
lods
jg
add
xchg
mov
lock
add
daa
push
pushf
mov
add
add
lea
sti
gs
call
mov
mov
or
pushf
mov
stc
andb
xchg
pop
push
push
xor
lret
xchg
cwtl
xor
sbb
ja
outsb
sub
push
lahf
mov
add
fdivs
sub
adc
in
out
mov
test
xchg
movsl
addr16
mov
add
mov
dec
jnp
into
xchg
add
in
pop
outsb
cmpsl
ret
and
inc
mov
das
push
xor
cmpsl
lret
lret
aaa
jo
ja
adc
decb
sbb
xor
stc
insb
inc
iret
dec
lock
cld
and
cmp
adc
mov
ljmp
scas
sub
inc
enter
dec
pushf
and
in
xlat
xchg
jno
jp
sub
xchg
cmp
dec
lcall
popf
mov
sub
jno
jle
xlat
ds
ljmp
ds
mov
les
pop
pushf
ret
es
cltd
xor
pop
scas
mov
and
fildll
mov
cmp
lods
mov
sti
clc
xor
mov
dec
sub
lret
imul
push
scas
fsubrs
push
enter
xor
hlt
mov
aas
mov
sahf
iret
fucomip
pop
testb
adc
push
xor
adc
push
loop
aad
out
ss
shrb
lea
xor
nop
inc
das
les
or
stc
clc
cwtl
adc
rorb
mov
sub
xor
sub
sbb
xchg
add
ficoms
add
pop
imul
jmp
andb
daa
lret
sbb
lret
inc
pop
pop
ret
scas
clc
sbb
sbb
mov
mov
xchg
iret
mov
xchg
xchg
mov
outsb
out
adcb
pop
ds
shl
adc
shlb
leave
out
jns
xchg
ss
mov
fistl
test
xchg
les
pop
test
cwtl
test
pop
sti
add
lock
push
jmp
fcmovnu
xor
mov
pop
mov
sahf
out
fdivrs
lcall
pushf
or
iret
movsl
aas
aam
mov
sub
out
pop
pop
inc
cmp
cmp
test
lret
lds
mov
fisttpl
mov
sbb
push
sub
lods
pushf
sbb
sarl
cmp
jge
negl
mov
push
in
pop
gs
out
enter
pop
sbb
popf
ffreep
dec
cli
pop
sahf
pop
jb
push
dec
and
mov
mov
jno
inc
adc
mov
xchg
sbb
sahf
mov
lahf
pop
addr16
adc
les
imul
pusha
jbe
mov
jne
xchg
or
ja
xchg
push
insl
mov
push
cmc
cmp
push
jle
mov
sti
lahf
sbb
iret
int
inc
xchg
xchg
dec
push
push
push
mov
lret
pause
or
cld
xchg
iret
dec
or
in
dec
jmp
repz
push
out
subl
stc
bound
mov
je
jo
fists
test
daa
test
loope
nop
popl
push
fstl
cmpsl
cmp
fsubrl
inc
cli
cmp
and
cwtl
ljmp
pop
push
out
jb
and
dec
aaa
sahf
dec
in
jnp
xchg
xchg
mov
push
inc
xor
sbbl
sbb
pop
xlat
and
mov
mov
aas
xchg
adc
in
fldcw
inc
aas
dec
je
sub
pop
cltd
mov
cmp
sbb
cmp
imul
mov
enter
fists
xor
aaa
lahf
mov
leave
mov
push
jecxz
mov
or
shr
cwtl
mov
push
pop
mov
mov
adc
jne
in
fdivr
add
in
negb
push
mov
in
pop
mov
push
sub
mov
mov
sub
scas
stc
es
es
pop
cwtl
aaa
lret
mov
aas
cltd
mov
movsl
add
pop
pop
lds
sub
aad
xor
lock
xchg
cmpsl
adc
push
mov
arpl
cmp
cwtl
jbe
push
pop
cmpsb
ret
dec
mov
adc
add
popa
xchg
scas
sti
mov
lods
dec
test
mov
push
ror
loop
jns
xor
mov
inc
int
mov
lahf
sbb
xorl
movsb
pop
add
jmp
dec
cwtl
notl
mov
cmpsb
sbb
test
xor
adc
movb
pop
mov
mov
mov
subl
lcall
cld
out
pop
pop
subb
popf
jg
jb
cmpsl
stc
sbbl
pop
cmp
ljmp
add
pop
xchg
loop
fsubrs
push
outsb
pushf
mov
mov
adc
push
fwait
pop
outsb
sub
pop
cmp
pop
mov
in
aas
pop
mov
dec
aaa
mov
stc
xor
sub
aas
inc
mov
sub
out
xor
mov
sbb
pop
adc
je
movsb
dec
cmpsb
cli
cmp
push
inc
dec
sbb
aam
mov
in
add
ja
cltd
js
or
js
mov
xchg
jecxz
pop
sahf
mov
mov
mov
out
shrb
ds
mov
sbb
add
mov
out
sbb
subl
jmp
inc
mov
jp
push
dec
jg
mov
or
dec
dec
shlb
cmpsl
cmpsb
xor
les
xchg
test
mov
call
xor
xchg
scas
popf
adc
mov
outsb
les
dec
xchg
mov
xor
jo
les
push
addl
cmp
sbb
pop
xchg
xor
out
add
cmp
ret
pop
add
jo
jne
cwtl
repnz
enter
fwait
sahf
mov
and
and
mov
movb
pop
add
xor
stc
cmp
push
sub
pop
sbb
ds
mov
xchg
mov
pop
int3
idivb
xor
daa
cli
cwtl
push
adc
rcr
dec
push
sub
jb
sub
and
xchg
fcoms
cmp
mov
daa
push
jno
adc
xor
mull
jnp
inc
mov
push
sub
adc
pusha
cmpb
ret
or
mov
inc
into
lock
sbb
pop
or
shll
and
into
rcrl
push
pushf
mov
into
shll
cli
cmpsb
mov
mov
ds
leave
dec
sbb
inc
sbb
test
movb
inc
stc
enter
inc
pushf
inc
sub
jg
pop
cmp
mov
loopne
jp
insb
cmp
fwait
dec
add
loopne
lret
jne
je
mov
int3
add
dec
mov
call
inc
xchg
mov
mov
push
xchg
or
push
outsb
xchg
adcl
out
mov
mov
pop
cltd
add
mov
and
jo
sub
subl
adc
fistps
cli
sub
push
push
push
lods
mov
repz
mov
push
add
cmpsb
sti
in
jecxz
pop
xchg
sub
mov
lahf
lds
mov
and
mov
movsb
cmp
fstpt
sti
stc
lcall
dec
jp
jge
andb
cli
dec
cmpsb
inc
icebp
fadds
aas
and
sbb
pop
cmpsb
sahf
scas
jg
fnsave
mov
sbb
out
pop
add
fimull
mov
call
pushf
xchg
rcr
out
pop
loope
sti
cmp
cmp
mov
ret
add
add
push
cld
addb
mov
ret
fidivl
mov
pop
mov
mov
fs
cmp
hlt
out
sbb
mov
push
rorb
into
loope
pop
pop
xchg
fstp
xchg
test
xchg
xor
lea
pop
xor
fwait
mov
hlt
decl
stc
mov
mov
mov
mov
ja
fsubrs
nop
aaa
cmpsl
xlat
cmp
std
cld
fsubl
dec
outsl
neg
nop
mov
dec
jecxz
xchg
dec
imul
xchg
cwtl
stc
jmp
pushf
jg
repnz
lds
jo
in
pop
jmp
fldcw
inc
aaa
xchg
xor
pop
push
sbb
sbb
dec
xchg
sti
xchg
jl
ss
sbb
cltd
jae
cld
icebp
rcr
pop
pop
into
cld
in
enter
or
sbb
push
loope,pt
pop
fisubl
sub
mov
jg
jmp
adc
jg
movsb
cs
cmp
and
adc
xchg
mov
out
xchg
adc
sbb
enter
les
jmp
or
jb
arpl
push
ja
call
js
fldenv
xchg
inc
or
xchg
stc
roll
in
std
js
dec
sbb
pushl
cmpsl
mov
int
pop
push
scas
sub
push
or
push
test
shrl
pop
out
mov
decb
sbb
ficompl
adc
xor
pop
mov
dec
xchg
sub
outsl
loop
or
jmp
mov
sbb
inc
xor
int
jp
mov
or
pop
sbb
pop
jge,pn
bswap
xchg
faddl
lret
scas
jmp
lods
xchg
dec
stc
pop
mov
in
add
mov
shrl
lcall
mov
jp
sbb
jp
mov
orb
and
lods
fucomi
sbb
aas
adc
adc
fcomps
cmc
xor
xor
pop
mov
shlb
add
out
sbb
or
push
shl
ds
pop
clc
sahf
inc
inc
leave
fistps
xchg
pop
ret
mov
jmp
clc
sbb
inc
jge
or
popa
mov
push
sbb
pop
xor
mov
pop
xchg
movsb
dec
popa
xchg
pop
adc
and
mov
push
outsb
pop
negb
mov
dec
jb
lcall
push
ds
scas
xchg
mov
push
mov
jle
sbb
aas
xor
adc
ja
loopne
mov
mov
dec
sub
jecxz
iret
ja
faddl
fucom
xor
ja
ficomps
jae
mov
insl
rclb
hlt
cwtl
jnp
pusha
mov
push
pop
fwait
xchg
popa
das
das
push
dec
or
out
dec
sbb
xchg
cmp
inc
jg
xchg
leave
nop
loope
cmc
cwtl
add
in
mov
pop
fcoml
sub
or
cld
js
cmp
aaa
pop
mov
cmp
je
adc
in
popf
fcmovnbe
mov
sbb
mov
lret
faddl
hlt
js
outsb
lods
loopne
jae
cmp
test
idivb
ljmp
ret
cmpsb
and
aas
push
or
fildl
dec
adc
jnp
jmp
sbb
or
test
fidivs
loope
or
inc
shl
xor
push
xor
int
pop
pop
aas
scas
push
cmp
pop
push
lds
lea
and
mov
jnp
je
jb
mov
aas
sub
test
mov
pop
cmp
jbe
push
imul
mov
cmp
jl
cmp
push
ret
cmpb
dec
sub
sarb
adc
mov
aad
in
cmp
mov
mov
pop
mov
mov
or
xchg
call
test
out
cmp
mov
xor
aas
mov
pop
mov
mov
cld
fcmovne
dec
adc
cmpb
mov
shrl
mov
cmp
lahf
mov
cwtl
loope
cli
cld
pushf
aas
loop
and
mov
dec
jl
stos
lods
cld
jmp
test
and
dec
pop
pop
sub
mov
cmp
cwtl
sbbl
ficoml
xchg
sbb
sbb
lods
or
mov
fildll
test
sub
sbb
sahf
mov
jge
push
inc
add
mov
mov
xchg
push
cmovle
test
daa
hlt
pop
lods
fwait
jg
hlt
mov
push
repnz
sbb
inc
cwtl
jne
cmpsb
pushf
subb
add
pop
fstl
dec
inc
adc
mov
js
cmc
test
call
nop
adc
mov
cwtl
repz
push
push
sti
xor
or
push
or
stos
fsubr
xor
xor
sub
lcall
pushf
sub
sbb
cmpsl
jg
xor
xchg
push
lret
mov
inc
mov
xchg
dec
fadds
mov
cwtl
gs
push
shr
into
push
cmp
das
pop
sbb
mov
ljmp
push
ljmp
pop
mov
mov
lods
mov
push
sbb
ret
sub
into
mov
jo
test
out
pop
ss
jl
push
ficoml
sub
dec
mov
and
mov
fwait
sub
push
cmpsb
sti
push
scas
cmp
sbb
lahf
jne
pop
mov
icebp
pusha
sahf
mov
mov
mov
mov
mov
dec
fcoms
sbb
cs
pushf
sti
out
push
ja
leavew
jmp
push
scas
cltd
sub
mov
xchg
cmp
sahf
jns
or
cli
fcomps
add
js
push
out
jle
test
sbb
pop
xchg
adc
aas
xchg
test
xchg
lahf
sub
mov
pop
fidivl
mov
movsb
jbe
daa
popf
ljmp
cltd
rclb
js
ja
fstpl
pop
out
loop
fnstcw
sar
jno
test
inc
cmpsb
stc
mov
or
xchg
jmp
shll
out
xchg
lahf
lahf
adc
push
push
mov
sbb
xchg
cmp
sbb
test
sub
out
adc
xchg
xor
cmpsl
add
jl
ds
lods
cmp
push
sbb
jbe
scas
negb
ds
sub
out
sub
rcrb
loope
or
mov
xchg
notb
mov
mov
je
icebp
and
jbe
scas
sbb
aas
lock
rcl
iret
mov
push
jp
cmpsb
sbb
cmp
inc
sbb
rcll
stc
sub
xchg
sub
mov
xchg
mov
xchg
lock
push
in
data16
scas
sti
sub
mov
add
sbb
sub
sti
mov
cli
jle
pop
das
jmp
lcall
pop
sahf
dec
jp
pop
mov
not
push
mov
add
ficomps
add
fmull
cli
jl
mov
mov
adc
adc
sub
mov
adcl
aas
sahf
jae
and
sub
fisttpll
notl
insb
mov
adc
pushf
jecxz
fucom
push
fucom
mov
pop
inc
mov
sahf
sti
cli
pop
cmp
or
mov
sbb
mov
sbb
jecxz
int
xchg
and
jb
sti
test
push
dec
lcall
xchg
cmp
mov
pop
lods
jmp
cmp
sti
dec
inc
xchg
mov
mov
fsubrl
mov
adc
sbb
dec
sub
jbe
movsl
stos
mov
lea
ljmp
xchg
ret
pop
and
sbb
into
sub
push
adc
mov
in
mov
test
stc
fisttps
sbb
mov
dec
push
jle
daa
lock
xor
enter
sub
push
push
adc
sbb
xchg
fisubrl
xor
xlat
aam
pusha
xchg
lahf
fwait
push
pop
out
enter
out
xchg
mov
fnclex
ret
cmc
addr16
scas
pop
outsb
cli
aas
pop
cltd
scas
xchg
cmp
push
sbb
nop
in
outsl
sbb
mov
pop
jbe
es
sub
push
push
inc
cmp
sti
xor
xor
scas
jbe
mov
jge
pop
mov
adc
sub
sub
cmp
rcrl
inc
movsb
aad
inc
daa
inc
cli
xchg
cmp
aas
cwtl
add
ljmp
sbb
mov
scas
sbb
hlt
jae
mov
pushf
outsl
in
cmpsl
sti
push
movsl
xchg
sub
je
mov
fsubs
lahf
and
pop
sbb
mov
push
jp
xchg
sahf
mov
sbb
outsl
mov
pop
lods
sti
dec
cmp
out
popa
int
shrl
daa
fwait
lods
imull
cmp
pop
rcr
xchg
xor
xor
sarl
lahf
xchg
lcall
nop
mov
mov
subl
pop
cmp
test
add
pop
xchg
cli
mov
push
xchg
and
sbb
stc
dec
mov
push
icebp
inc
cltd
push
mov
jmp
call
sub
push
inc
outsl
jnp
aas
repz
repnz
pop
pusha
mov
movaps
cmp
cmp
cltd
sbb
jae
sbb
mov
fwait
enter
data16
incl
xchg
ljmp
mov
pop
push
mov
std
lock
push
mov
sub
adc
imul
mov
xchg
mov
push
pop
jl
pop
push
push
lcall
dec
es
fnstenv
mov
lods
movsl
mov
addl
lret
sbb
fsubrp
popf
jne
cmp
mov
dec
pop
mov
adc
jnp
fsubs
outsb
xchg
stos
xchg
xchg
sbb
dec
sub
mov
jle
sbb
mov
inc
cmp
pop
test
xchg
lret
xchg
in
pushf
jbe
sbb
mov
sub
and
jno
mov
sahf
xor
mov
cltd
sub
lods
jecxz
sahf
cmp
cmp
fwait
jmp
mov
push
mov
cld
ljmp
cmp
xchg
dec
shll
jns
lret
pop
loop
push
sbb
and
adc
ja
int
scas
jae
lods
inc
push
movsl
pop
or
call
test
orb
or
cltd
jl
insl
aaa
cmp
pop
or
sbb
mov
lcall
out
lret
lahf
sbb
mov
mov
mull
insb
lahf
cld
aad
mov
and
out
push
nop
sbb
insb
jnp
test
mov
inc
ret
loop
movsb
stc
stc
stos
cld
jl
sbb
ret
mov
hlt
push
pop
sbb
gs
sti
fistps
stos
insl
lret
adc
pop
jno
outsb
lret
call
fstps
cmp
mov
scas
fcomps
iret
push
cmp
pop
jmp
fidivs
mov
in
cltd
push
sbb
addl
lret
sub
dec
sbb
mov
aas
clc
xchg
mov
lods
push
into
mov
ret
leave
lods
cmpsl
jecxz
cmp
mov
popf
xlat
fcompl
lret
xchg
cmp
clc
addl
popl
insb
lret
mov
sbb
fsubrs
mov
jne
lret
subl
lret
pop
cwtl
or
or
int
cmp
jg
repz
stos
sarb
push
push
xchg
mov
cmp
sub
rcrb
test
mov
add
mov
outsb
mov
or
mov
adc
aas
stos
lret
lcall
mov
pop
mov
mov
pop
cld
fisttps
shlb
lret
sbb
xchg
cmpsl
repnz
js
ss
out
jecxz
call
cld
cs
sti
dec
xlat
mov
xchg
mov
sti
ljmp
aad
mov
and
cmp
movsl
xchg
xlat
repnz
mov
loop
sahf
dec
xchg
dec
pop
pop
sahf
sub
out
xor
cmp
data16
jnp
add
leave
xchg
ss
cmp
loopne
movsl
lods
lahf
outsb
jg
jg
mov
cld
imul
mov
mov
mov
pop
inc
mov
sbb
xchg
adc
sub
sbb
cmp
cmc
popf
fucomip
add
mov
push
stos
iret
jb
pop
inc
cmp
inc
aam
clc
push
cli
lods
mov
adc
fcomi
xor
mov
mov
fwait
or
in
stos
fdiv
xchg
jp
inc
pushf
cmp
xchg
icebp
and
lcall
jl
mov
icebp
nop
out
mov
dec
punpckldq
popa
mov
cmp
subb
inc
cld
cli
enter
push
in
dec
negl
std
aaa
and
inc
lods
mov
pusha
in
cwtl
mov
mov
aam
jp
sbb
outsl
mov
les
lds
fdivl
mov
and
mov
es
or
dec
xorb
lahf
pop
cli
sbb
outsl
popf
xchg
popf
das
sti
xor
xor
pop
xor
in
and
stos
add
add
mov
lods
adc
fldenv
orb
testl
ss
ss
cwtl
push
bound
mov
pop
add
mov
dec
jb
outsb
pop
sar
mov
cmp
cwtl
mov
clc
jge
mov
pop
clc
adc
mov
dec
leave
jne
test
cltd
sbb
lahf
lock
faddl
dec
lock
cmp
ljmp
xlat
fcompl
adc
aaa
icebp
mov
fmuls
mov
adc
stc
stc
and
push
sub
mov
or
cld
popa
dec
mov
hlt
data16
sti
sbb
xor
or
sbbb
mov
mov
pop
mov
push
scas
fs
sub
and
int3
xchg
inc
lahf
fmul
or
cli
cld
dec
sti
inc
adc
pushf
call
adc
arpl
clc
fcoms
push
pop
or
adc
dec
out
js
arpl
scas
jbe
push
inc
xchg
add
jmp
mov
lcall
jnp
sti
aam
add
and
notl
lahf
and
movsl
sti
ret
push
int3
mov
fiadds
fildll
xchg
sti
in
jne
stc
out
fdivl
jno
xchg
aas
daa
es
mov
sbb
push
mov
cs
pop
sbbb
mov
in
mov
push
test
xor
xor
data16
cli
inc
or
in
jl
outsl
adc
ss
fistpl
aas
mov
popf
test
sbbb
push
movsb
popf
dec
cmpb
cwtl
std
xchg
in
pop
and
fistps
stos
xchg
mov
jo
pushf
jne
and
je
gs
or
fmuls
clc
sub
cmp
sbb
sti
cmpsb
sub
xchg
adc
push
cwtl
shr
mov
jp
insb
xchg
das
and
jns
sbb
icebp
push
movsb
push
cltd
repz
cmp
insb
pop
call
fdivs
fcoml
mov
test
je
mov
lahf
fstpl
or
mov
daa
js
mov
sbb
mov
movsb
xchg
mov
sub
add
mov
sbb
pop
std
mov
cmpsb
aas
jecxz
mov
nop
sti
in
jge
pop
or
pop
xchg
test
psrlq
mov
out
xchg
lahf
push
loopne
test
adc
mov
imul
jnp
insb
fisttpl
scas
cltd
mov
sbb
mov
fadds
dec
inc
mov
sbb
jle
neg
mov
out
iret
mov
pop
cmp
push
sbb
or
movsl
aas
cmpsb
mov
adc
jg
orb
jge
mov
ja
mov
jl
lret
cmp
cmpb
out
mov
inc
bound
jbe
popa
ret
arpl
add
sbb
pop
xchg
or
inc
mov
xchg
pop
xchg
cwtl
and
cwtl
push
mov
xor
scas
jae
fdivs
jne
lods
pop
xchg
push
dec
jmp
movsl
and
add
neg
and
adc
sub
ljmp
pop
fsubr
mov
lret
pop
ret
push
sub
fdivrl
hlt
cmp
and
pushf
jnp
leave
out
pop
cltd
stos
aaa
mov
int
jo
add
fimull
mov
loope
fdivs
ja
xchg
xchg
sub
jmp
popf
addb
imul
push
jg
lds
inc
lods
sti
jo
mov
popf
sub
stos
fcmovnu
int
sbb
in
jnp
sub
fisubrl
lock
cltd
lods
repz
jp
jmp
shll
pop
lcall
cmp
mov
sub
and
in
mov
pusha
jns
pop
sub
inc
iret
test
inc
jmp
out
cwtl
xor
pop
repz
loope
mov
mov
jl
xchg
mov
inc
sti
stc
stos
xchg
inc
sub
pushf
hlt
test
cmc
dec
test
in
and
movsb
clc
loope
call
lret
inc
fisubrl
pop
inc
xorb
mov
cmp
pop
mov
dec
enter
sub
jmp
fdiv
jno
and
inc
xor
mov
jp
and
pop
pop
cmp
xor
pop
sbb
les
aad
leave
cmc
xor
mov
stos
add
mov
sbb
dec
pusha
in
mov
cmpsl
xor
stos
in
dec
pop
lds
dec
test
pop
push
push
in
pop
push
enter
adc
mov
dec
faddp
out
mov
xchg
call
shrl
test
sub
cmc
xchg
ret
xor
add
inc
adc
jmp
push
cmp
sti
xchg
outsl
fcomps
int
jae
mov
and
add
mov
int3
clc
int
insb
inc
adc
or
xchg
stos
jnp
out
fcomps
inc
push
rorb
mov
fs
cld
test
push
repz
cli
push
fmull
mov
xor
notl
jl
fdivs
lcall
es
stos
adc
outsl
popa
arpl
cwtl
pop
xchg
imul
and
cltd
aaa
inc
pop
sbb
mov
mov
insb
mov
xchg
ret
insb
mov
mov
movsb
jo
mov
test
mov
inc
adc
loope
movsl
aas
pop
scas
mov
movsb
cmp
int3
xchg
sbb
cmp
push
mov
jo
fdivrl
sub
mov
cs
or
push
sbb
mov
je
hlt
jg
icebp
fldcw
dec
negb
mov
and
jno
imul
aad
jnp
pop
jl
ljmp
jns
pushf
hlt
xor
xchg
sbb
cli
sbb
mov
push
cmp
mov
fcmovne
imul
push
fistps
aas
in
dec
dec
rcll
mov
push
jp
adcl
lds
bound
pusha
xor
mov
repnz
aas
sub
inc
mov
mov
push
dec
mov
scas
mov
lahf
add
mov
imul
pop
mov
pop
mov
rcrb
cltd
add
pushf
sub
scas
in
idivl
in
call
xchg
clc
inc
dec
cli
fsub
lods
call
push
daa
test
cmp
int
lods
pop
cli
pop
pushf
lods
xchg
cmpsl
pushf
mov
cmp
pop
mov
mov
mov
subl
push
ja
and
cld
fnstenv
enter
das
or
jge
in
cld
mov
cmpsl
mov
pop
lods
mov
es
xchg
pop
sub
jae
repz
mov
pop
je
mov
pop
mov
repnz
pop
mov
sub
sbb
rcr
add
push
inc
mov
pop
out
fisubrs
mov
or
mov
inc
shlb
mov
dec
js
xor
cld
roll
xchg
sti
adc
cwtl
and
cmp
int3
jg
cmp
inc
clc
sbb
mov
push
frstor
negl
mov
push
aas
sub
sahf
push
sbb
es
sti
pusha
sti
push
cmp
adc
xchg
xchg
ljmp
mov
stos
jge
rorl
jmp
xor
ret
sub
addr16
clc
mov
xchg
subb
sbb
cld
mov
nop
outsb
mov
cwtl
fsub
inc
sub
sbb
fcomi
jle
dec
cmpsl
or
cwtl
lcall
xchg
sahf
cmp
pop
test
int
test
out
test
hlt
jg
ljmp
into
lods
pop
aad
loop
aad
daa
in
aas
push
insl
ja
out
cmp
sub
out
in
or
push
sbb
lock
sarl
js
add
rcrb
sub
les
mov
pop
repz
lods
cmp
pop
popf
fcompl
adc
insb
lahf
lret
decl
test
add
push
sbb
cwtl
mov
call
xchg
cmp
adc
js
insl
outsb
mov
cwtl
lret
cmp
cmp
sub
jl
dec
inc
leave
mov
sbb
sbb
imul
fs
or
jp
es
dec
out
stos
jge
gs
loope
adc
inc
es
loope
mov
sahf
fsubr
call
sbb
lods
in
xchg
in
lods
sbb
sbb
push
mov
cvtps2pi
mov
cmc
cs
fsubs
fimull
fmuls
aad
pop
insl
out
sbb
sbb
add
cltd
jnp
insl
aas
sub
dec
ljmp
and
mov
xchg
push
in
cmp
cmovbe
or
sbb
ret
mov
fchs
push
jmp
test
mov
mov
fdivr
test
aad
xchg
cmp
rclb
xchg
ret
dec
sbb
sbb
popf
xchg
cmp
mov
jp
or
jae
xlat
jg
xlat
in
jmp
jp
mov
sub
js
sbb
push
or
jg
loopne
jns
pop
stos
lds
mov
mov
and
repz
cld
aas
inc
mov
enter
mov
imul
jne
idiv
dec
rcr
pop
incb
lcall
xchg
sub
cwtl
add
scas
pop
enter
adc
and
push
jb
sbb
mov
bound
jmp
mov
sti
mov
faddl
xchg
or
sub
sbb
xor
dec
mov
stc
xor
mov
cmp
cmpsb
push
cmpsb
lods
pushf
xlat
in
push
pop
mov
cmc
mov
lods
push
inc
lods
mov
adc
jg
ficompl
dec
fcompl
inc
sbb
mov
mov
cli
pop
fnstsw
in
cmp
hlt
adc
push
cmp
scas
outsb
pushf
mov
adc
loop
test
jle
jg
push
pop
dec
push
jne
das
fdivr
mov
pop
jbe
pop
mov
mov
cmp
cmpl
test
je
cld
call
mov
pop
rol
daa
xor
das
xchg
cli
sbb
fdivrl
xchg
and
mov
lahf
mov
inc
test
and
lods
icebp
inc
and
mov
push
sarl
mov
rcll
ljmp
aas
inc
fmull
mov
xlat
cmp
or
or
jno
ficoms
sbb
cwtl
and
loope
test
stos
icebp
les
jnp
mov
xchg
mov
in
sets
or
push
loope
xor
lcall
test
adc
push
jge
fs
adc
push
fdivr
cmpsb
jne
nop
xchg
xchg
and
mov
and
das
sbb
sub
lea
cld
pop
lods
aas
mov
js
cmpsl
iret
inc
mov
sub
or
dec
test
out
xchg
fcomp
xchg
mov
mov
call
push
mov
add
xchg
jnp
fcoms
or
test
xor
ljmp
jne
mov
pop
dec
and
in
aas
fs
mov
adc
test
imul
adc
cwtl
xchg
orl
push
insb
or
cmp
xorl
fwait
sbb
in
xor
aaa
mov
cmp
sar
subb
loope
xchg
cwtl
sbb
mov
fildl
push
xorb
mov
or
rcrl
sti
mov
fstpt
int3
inc
movsl
fists
adc
pop
lods
mov
dec
fisttpl
ljmp
xchg
dec
adc
cld
cld
test
mov
aas
inc
push
int
add
pop
in
pop
into
mov
pop
pop
shlb
shll
sbb
hlt
outsl
inc
jne
sahf
mov
adc
jg
jl
ret
inc
pop
dec
xchg
ret
imul
xchg
mov
xchg
and
fcoms
jl
mov
xor
clc
cmp
pushl
pop
sbb
fmulp
sbbb
stos
jnp
adc
jge
stos
outsl
notb
mov
imul
xchg
jl
cmpsb
fwait
nop
add
fildl
sbb
arpl
lock
add
mov
xchg
cld
fsubs
into
pop
frstor
shrb
jmp
sub
adcb
sbb
jecxz
mov
pop
dec
dec
mov
movsl
mov
mov
ja
es
ljmp
dec
fisubl
test
lods
mov
jbe
into
lcall
ds
mov
imul
iret
clc
pop
adc
stos
push
jo
jbe
and
mov
into
ret
mov
xchg
test
arpl
movsl
sbb
or
and
and
push
icebp
fs
pushf
xchg
cwtl
cmpb
and
mov
jge
jge
pop
jns
movsl
lods
aas
lret
mov
sub
sarl
sbb
mov
xchg
jmp
aad
sub
das
repz
fdivl
sbbb
mov
sbb
dec
loope
and
call
sti
adc
push
cmpsb
into
push
jb
sarb
mov
mov
outsb
imul
mov
pop
test
out
mov
sahf
pop
out
or
fstps
pop
out
subl
sti
jp
jae
imul
or
popa
outsl
mov
add
imul
cmp
dec
mov
pushl
pop
mov
clc
cmpsl
xchg
insb
push
cs
and
into
sbb
mov
addb
jbe
jns
xchg
loop
push
jno
loop
jg
or
loope
loop
mov
rcll
mov
xchg
jno
rclb
mov
sbb
xchg
cmp
in
loop
mov
xchg
adc
adc
daa
push
inc
cmp
mov
lods
sub
aas
mov
cmp
sbb
mov
loope
jle
das
lods
out
mov
frstor
cld
frstor
jle
pop
dec
nop
data16
fnstsw
js
cmp
or
loopne
fsubr
jg
mov
dec
cmp
shlb
push
fnstsw
jnp
in
inc
pop
loopne
sub
ljmp
pop
cmpsb
notl
fsubrs
fcompl
aas
or
push
and
jp
rcrl
iret
idivb
mov
adcb
pop
arpl
inc
mov
stos
xchg
sbb
insl
mov
cli
add
mov
sti
xlat
inc
lds
xor
cli
out
icebp
jns
add
mov
mov
bound
fldt
scas
jnp
adc
cmc
dec
in
jg
add
in
xor
ljmp
mov
lahf
movsl
ds
sub
fsubrs
pop
test
inc
pop
inc
push
ds
ret
movsb
iret
sarl
imul
mov
jnp
js
adc
dec
cs
or
test
pushf
jne
mov
or
loope
test
push
push
cwtl
pop
out
sub
cmp
aas
or
xor
outsb
sbb
scas
sti
enter
and
push
mov
leave
cmp
cmp
stos
pushf
pop
fcom
push
mov
es
mov
repnz
jl
push
pop
pop
outsl
jp
cld
mov
mov
pushf
mov
sbb
outsb
pop
adc
sbb
xchg
fneni(8087
xor
daa
mov
aaa
movsl
lret
dec
repnz
bound
pop
rcll
jno
cmp
or
xlat
inc
xchg
mov
mov
ret
jae
push
test
or
cli
dec
clc
aas
push
fimuls
or
push
ret
cli
mov
inc
cmc
lods
or
push
in
sbb
notb
jmp
movsl
sbb
rcr
xlat
mov
icebp
add
adc
rclb
sub
lods
movsb
dec
inc
or
fwait
movsb
jg
in
and
sbb
sti
sarl
mov
scas
out
adc
nop
lds
pop
add
mov
dec
mov
jmp
in
jno
sbb
test
jge
test
mov
pop
ret
mov
cmp
sahf
test
dec
mov
call
push
movsl
test
and
jne
aam
fcoml
dec
mov
push
sbb
mov
sub
jl
ds
pop
jns
pushf
push
xchg
daa
and
xor
fisubrl
in
xchg
push
pop
je
stc
mov
jo
add
or
adc
mov
aaa
xchg
mov
inc
xor
orb
icebp
and
mov
push
sahf
call
sub
fstpl
int3
dec
jo
sar
mov
xor
pop
push
dec
cmpsb
pop
inc
out
daa
clc
subl
pop
dec
push
ficompl
test
jne
imul
sub
push
inc
jg
cli
dec
fwait
js
mov
rorb
add
sbb
mov
mov
mov
sbb
outsb
mov
or
xchg
cmp
xor
push
call
xchg
int
les
out
clc
sub
mov
adc
mov
jmp
cmpsb
stos
add
stos
sub
bswap
xchg
pop
push
sahf
xchg
mov
cmc
pop
pop
in
mov
add
stc
adc
pop
cmp
in
jmp
xchg
jmp
mov
cld
iret
dec
outsb
jmp
lcall
push
mov
xlat
shll
xor
loopne
orb
jecxz
add
lahf
push
push
pushf
jecxz
and
pop
xor
cltd
fwait
out
sbb
mov
pop
mov
sbb
shlb
jmp
lock
xchg
mov
inc
push
cli
mov
shl
sbb
es
dec
psubd
jl
aad
push
sahf
adcb
ljmp
fldl
pop
adc
bound
pop
js
pop
lcall
jp
xor
xchg
inc
mov
pop
mov
sbb
push
fistl
push
mov
insl
stc
shr
sbb
cmc
js
lock
std
mov
mov
dec
add
jae
mov
int3
mov
cmp
xor
lahf
pop
mov
jns
fcoms
mov
lcall
jae
int3
scas
out
imul
mov
sti
jae,pn
xor
call
xor
push
mov
inc
ror
pop
sbb
mov
xor
lahf
subl
mov
push
dec
push
out
mov
sub
out
jo
aad
pushf
test
test
fsubl
shl
insb
sub
aam
aad
stc
cmp
bound
fcoml
int3
xchg
xchg
push
decb
mov
xlat
adc
out
cs
sbb
out
mov
cmc
sub
xchg
mov
or
or
test
cmp
mov
pushf
in
stos
cmp
lods
pusha
and
nop
or
cs
mov
and
aad
adc
xchg
test
xchg
lret
jp
mov
inc
nop
fwait
int3
sbb
jp
sub
insb
loopne
aas
dec
fnstsw
xchg
sub
lods
ret
cmpsl
pushf
popf
in
cmp
pop
test
jg
fs
cmp
jmp
xor
cmp
jno
les
cmc
cmp
mov
test
push
lahf
mov
and
leave
mov
mov
incl
aas
fldt
cmp
pushf
push
and
push
insb
fs
adc
ret
loopne
out
enter
and
pop
movsb
icebp
sarb
add
xchg
test
enter
loopne
cmp
mov
mov
mov
xchg
imul
and
push
in
dec
cmp
push
pop
es
pop
hlt
ret
xor
xor
lock
mov
pop
inc
pop
dec
mov
cmp
add
aad
cwtl
sti
test
jp
lret
pushl
sub
out
mov
add
pop
es
pusha
mov
adc
cmp
inc
gs
jl
jl
sbb
jne
push
movsl
test
xor
scas
pop
idivl
lret
sbb
jle
xchg
out
incb
fcoml
mov
mov
mov
xchg
scas
jae
mov
xor
pop
andb
je
mov
js
xor
cwtl
popf
xchg
stos
or
xchg
jg
in
loopne
sbb
lcall
jb
sahf
out
sti
mov
das
push
cli
inc
or
mov
imul
mov
fadds
stos
sti
in
aam
imul
in
and
scas
push
cmp
test
pop
cmp
pop
jmp
jle
repz
pop
pop
shlb
adc
outsl
test
jne
lcall
sbb
sbb
cmc
adc
cmp
shrb
mov
mov
cmp
or
mov
mov
inc
pop
jns
xchg
fistl
xchg
push
ficoml
inc
pop
pushf
cmp
popa
push
dec
in
push
in
dec
pop
adc
lea
test
and
stos
in
nop
sbb
pushf
les
jg
pop
jb
in
dec
mov
or
push
and
xchg
lcall
mov
lahf
cld
scas
fwait
lcall
lea
sub
adc
bound
lahf
shl
cs
pop
ljmp
mov
nop
imul
aaa
test
out
pop
and
mov
jnp
mov
add
fbld
js
mov
sbb
fwait
cmp
in
sub
xlat
outsb
dec
cltd
pop
outsb
gs
sub
jns
mov
daa
lods
add
negb
sbb
inc
aaa
movsl
stos
rorb
sub
mov
adc
add
mov
and
pop
aaa
push
mov
cmp
ds
aas
lock
inc
mov
adc
mov
and
jp
lcall
xlat
outsb
adc
fadds
mov
into
in
pusha
inc
rolb
in
push
sub
aaa
mov
jl
mov
lods
scas
cmp
mov
jge
xchg
pop
pop
ja
clc
xchg
jmp
mov
cltd
jmp
xchg
sub
fwait
daa
pop
fcompl
aas
lret
jp
stos
xor
aam
add
mov
sub
notl
lea
cmp
popa
mov
out
or
sti
mov
sub
push
int
mov
enter
popf
adc
dec
cs
and
pushf
scas
xchg
sbb
mov
pop
add
dec
jbe
mov
jmp
inc
jmp
mov
cltd
fcmovnbe
rsm
push
rcl
mov
mov
bound
shlb
jp
mov
sbbb
mov
jg
xchg
pop
test
and
ret
sbb
mov
nop
in
mov
aas
addr16
mov
movsl
mov
out
mov
adc
fadd
push
lret
adcb
and
xchg
add
add
into
std
test
mov
or
icebp
leave
add
cmp
xchg
mov
mov
lcall
sub
push
idivl
in
outsb
or
adc
dec
cmp
xchg
mov
mov
sbb
push
add
jne
test
cmp
and
ret
jmp
test
dec
cmpsb
or
jge
movsb
cmpb
xlat
sahf
pushf
cmpxchg
insl
cmc
sbb
je
lods
push
adc
push
int3
in
sbb
and
or
lcall
pop
test
sbb
push
clc
test
pop
and
fcom
int
sbb
sub
in
jge
xor
inc
dec
push
mov
jmp
adc
and
mov
lcall
fwait
pop
fisubrl
les
and
xor
cmpsl
mov
hlt
sar
cmp
jns
push
jmp
mov
in
enter
out
add
int
add
push
sbb
jne
cwtl
sub
mov
cli
xchg
jnp
dec
shll
mov
subb
sbb
sub
cmp
xorb
test
js
lods
cmpl
xor
jl
and
sbb
xchg
or
sub
test
adc
jne
das
inc
mov
sbb
xchg
imul
in
ds
mov
cli
out
addr16
push
sahf
dec
jbe
mov
lea
mov
jns
add
mov
test
pop
roll
fwait
shll
sti
sbb
fwait
sbb
sbb
or
mov
mov
sbb
cmp
add
mov
lea
iret
scas
addr16
clc
scas
fbld
pop
sbb
push
sarb
ret
gs
mov
aaa
out
mov
ljmp
fdivs
sub
and
das
sti
sbb
xchg
sti
push
movsl
mov
push
jg
adc
adc
pushf
and
mov
fsubrs
pushf
fwait
mov
jo
pushf
les
cli
lea
jmp
jg
aad
ja
fcomps
mov
cmpsb
jg
bound
mov
mov
mov
xchg
mov
sbb
jg
out
in
cmp
fstl
jle
pushf
hlt
cwtl
mov
std
jmp
movb
adc
jmp
mov
lret
mov
inc
jp
or
ss
sub
stos
mov
lahf
push
rsm
ficoms
mov
movb
scas
test
das
jp
or
int
cwtl
aam
popl
pushf
aas
jae
or
mov
leave
sbb
ljmp
aas
lahf
fdivrs
cmpsl
pop
scas
stos
int
xchg
pop
mov
adc
xchg
je
xor
and
mov
imul
pop
int3
inc
les
fdivr
out
sub
xor
lock
fidivl
xchg
sbb
mov
shrb
inc
pop
dec
jp
push
jae
leave
sbb
les
and
sbb
pushf
and
mov
out
jle
fldenv
stos
dec
out
xchg
arpl
cmc
cwtl
out
imul
pop
sar
mov
and
cld
fistps
data16
pop
rcll
push
movsb
push
mov
cld
pop
ret
insb
xchg
add
jle
xchg
dec
inc
in
add
push
fwait
adc
std
aas
and
pop
pop
cmp
pop
and
sbb
xor
dec
stos
int3
jp
dec
and
fcoms
mov
shrb
jnp
mov
jecxz
in
pushf
push
and
stc
mov
fidivl
int
mov
push
sbb
adc
or
std
xchg
call
js
jge
mov
cmp
push
jp
es
shl
inc
movsb
ja
mov
in
add
or
pop
je
mov
lcall
mov
jb
fsubrl
jbe
push
cmp
push
adc
push
jno
das
std
cmpb
and
xchg
pop
mov
pop
sbb
test
test
lock
imul
sub
cmp
and
sub
cmpsl
lahf
rcrl
loopne
push
mov
dec
sub
sbb
lret
enter
jp
cmp
dec
lret
mov
or
ds
inc
iret
repz
fdivl
mov
repz
jbe
stc
pusha
aas
dec
sti
or
imul
xor
scas
add
push
stos
aas
mov
insl
es
popa
idivb
cwtl
cmp
inc
scas
jmp
movb
adc
repz
rorb
or
ljmp
ret
and
and
scas
daa
push
push
sub
fwait
cltd
iret
les
mov
sbb
cmp
or
mov
mov
inc
sub
cli
and
ret
lods
fwait
or
mov
mov
or
mov
and
jl
jp
add
mov
jl
lret
repz
fadds
pop
adc
mov
addl
xor
ret
xchg
mov
sbb
out
in
mov
adc
add
mov
lahf
fnstsw
pop
std
jne
inc
mov
rol
aas
cmpsb
in
push
fldcw
jbe
cmp
add
push
xor
sti
mov
mov
bound
jmp
sahf
imul
xchg
popf
fsubs
sbb
and
sbb
inc
fmuls
push
in
sub
xchg
jl
mov
pop
dec
or
cmp
mov
push
pop
sub
fsubr
cmp
mov
fmul
mov
ljmp
in
rorb
scas
mov
pusha
pop
and
es
sbb
cmp
xchg
mov
movsb
cmpsl
in
cmp
sub
pop
xchg
mov
inc
fsubl
lea
xor
in
push
mov
cmp
mov
xor
jg
xchg
shlb
dec
jge
cmp
adc
inc
cwtl
push
push
pop
cmpsb
sti
imul
std
inc
adc
dec
cmp
or
pop
ljmp
mov
lret
dec
in
push
mov
xchg
add
adcb
movsl
xchg
sahf
cwtl
lahf
adc
je
inc
sub
adc
add
xchg
and
sbb
sub
xchg
scas
mov
popf
cmpsl
jns
cmp
mov
and
loop
repz
faddl
vsqrtpd
sub
jbe
call
enter
xchg
stos
or
jb
inc
hlt
mov
pop
aas
in
std
adc
mov
dec
xchg
or
or
mov
xor
iret
lahf
movsl
xor
mov
notb
jnp
or
jae
pop
sbb
mov
inc
cmp
sti
out
iret
mov
fldl
rolb
pushf
xor
jecxz
in
jns
fmul
scas
fstpl
cld
xchg
mov
lahf
push
pop
inc
nop
enter
and
mov
stos
lahf
hlt
cs
test
or
hlt
mov
add
adc
push
mov
mov
scas
xchg
loopne
fsubl
add
enter
pop
jle
xchg
jmp
inc
mov
xchg
and
out
aas
cmp
lds
cld
push
push
lock
das
xor
pop
jno
addl
mov
into
pusha
lods
mov
incl
into
stos
inc
stos
sti
cmp
shll
add
fists
jg
jle
not
mov
mov
rorl
sbbb
push
insl
cmp
dec
repz
les
xlat
cmp
scas
loopne
cmp
test
mov
in
adc
mov
test
popa
bound
fcmovnbe
jno
xchg
ss
into
mov
push
fsub
clc
mov
test
pop
push
ja
jmp
jmp
inc
iret
int
mov
push
clc
fsubl
sbb
imul
lcall
xchg
pusha
or
inc
add
and
cmp
scas
dec
push
scas
icebp
xchg
lods
call
cmp
sbb
leave
cmp
fwait
mov
outsl
adc
mov
pop
scas
insb
xchg
sub
fnstcw
mov
cmp
jp
mov
push
fisubs
push
cmp
fcoms
loope
stos
daa
ret
ds
ss
push
insl
dec
mov
push
sbb
mov
test
mov
stos
dec
mov
add
jbe
fcomi
xor
xor
es
push
mov
mov
or
jl
xor
jmp
pop
sbb
mul
shlb
out
pop
or
sbb
dec
leave
xor
scas
aas
rep
repz
add
fcoms
mov
out
push
jle
lahf
stc
sbb
enter
lret
mov
fwait
pop
call
cmp
inc
in
fstpl
mov
orb
sbb
movsb
dec
xchg
aaa
testb
stos
push
jnp
pop
js
adc
imul
cwtl
adc
add
cmp
mov
lret
test
xchg
stc
cwtl
cmp
push
push
test
dec
sbb
and
mov
out
ljmp
cmpsb
sti
bswap
sbbl
or
into
push
xchg
sti
sub
leave
stos
add
pop
fstpt
into
pop
inc
rolb
in
pop
cmp
push
pop
lea
mov
arpl
mov
cmc
or
bound
cmp
das
mov
xchg
popf
or
outsb
out
cmp
mov
jne
and
leave
jmp
fwait
jb
mov
mov
int
sti
sub
push
mov
pop
stos
scas
cmp
pop
cmpsl
add
mov
pop
push
sahf
mov
lret
pushf
popa
pop
dec
fs
mov
and
fistpll
in
or
pop
mov
insb
stos
cmp
mov
pop
lods
xchg
cld
mov
andb
out
dec
mov
fcoms
call
and
dec
jmp
in
dec
inc
or
mov
outsl
nop
or
add
aam
sbb
cwtl
das
loope
mov
pushf
jle
cmp
sbb
jne
cmpl
out
mov
dec
loope
adc
mov
pop
call
sub
mov
mov
aaa
pop
jl
fists
aam
movsl
cli
cwtl
lods
icebp
push
imul
mov
fldlg2
xchg
jne
cwtl
cwtl
and
imul
jns
fstl
push
pushf
cmc
jmp
push
jg
add
je
and
std
clc
jno
pop
sbb
out
lods
shlb
ljmp
sti
cli
dec
xchg
ret
cmp
scas
mov
jnp
mov
aas
cmpsl
and
jo
shlb
xchg
jg
sbb
lret
loop
fldt
mov
lds
sbbb
lret
sbb
fcmovne
mov
mov
ja
adc
jl
in
push
mov
sti
movsb
int3
jl
cmp
mov
push
scas
or
movsb
cmp
push
xor
jmp
and
and
cmp
or
mov
inc
push
push
adc
mov
cmp
inc
sbb
mov
outsb
clc
jp
stc
js
repnz
push
pop
push
aam
ja
mov
scas
push
mov
lret
mov
push
dec
jp
lret
dec
xchg
ja
sub
clc
mov
pushf
lock
cmp
sbb
cmp
clc
fsubrs
ss
leave
in
test
ds
cs
dec
mov
loopne
push
fdivrp
mov
pop
jmp
inc
push
movsl
mov
mov
add
shlb
pop
sub
sbb
dec
clc
aaa
imul
xchg
pushf
push
or
lcall
xchg
sbb
pop
mov
push
mov
cmpsl
xor
pushf
loopne
in
fsubrp
les
test
pop
int
sbb
test
push
push
cmpb
fs
movsb
jo
cmp
sub
lea
fs
mov
cli
push
data16
mov
pop
mov
push
fs
fst
add
add
loopne
pop
fdivrl
push
enter
push
inc
js
into
icebp
push
fwait
scas
jg
and
xor
push
lds
push
mov
cmp
sub
inc
call
aas
test
out
int3
cs
cwtl
inc
jae
mov
mov
add
or
jb
mov
or
add
add
add
mov
addl
mov
mov
sbb
xor
ds
js
inc
aas
push
mov
jg
out
rcl
mov
addr16
fisubrs
push
push
push
xor
leave
popf
cmp
or
lahf
sbb
divb
ret
in
push
lcall
sbb
mov
cmpsl
lea
frstpm(287
mov
add
int
in
cld
sahf
cwtl
push
mov
lret
mov
seta
cmp
xchg
push
sbb
xor
lret
scas
push
sbb
lods
mov
mov
add
aas
loop
sbb
movsl
mov
add
inc
xchg
pop
scas
arpl
lret
sub
adc
jp
push
scas
test
sub
jg
xor
pop
jno
sbb
test
stc
int3
push
xor
fnstcw
cmp
inc
pop
out
push
xchg
sbb
clc
push
mov
enter
mov
repnz
jmp
test
std
fs
xlat
popf
pushf
sub
cltd
mov
inc
adc
pop
sub
iret
xchg
sub
inc
mov
aaa
stos
inc
jmp
fistpll
in
iret
xlat
cmpsl
sbb
mov
lods
daa
pop
sbb
and
ret
jbe
aas
mov
iret
repz
mov
insl
cmp
divl
cmp
xor
fnstsw
xor
shrb
or
and
xchg
push
fcompl
jb
fcmove
dec
jmp
outsb
xchg
pop
mov
sbb
and
or
test
outsl
in
pop
or
jbe
mov
push
negb
jecxz
push
fdivl
adc
dec
lds
fistl
or
stos
mov
pop
stc
les
adc
xchg
dec
dec
sbb
or
test
sbb
jl
xchg
cmp
xchg
sbb
adc
out
cli
cmp
mov
sti
push
cmc
jge
jp
pop
jecxz
aam
and
repz
mov
xor
mov
push
out
or
jae
scas
adc
sbb
test
pop
pop
stos
imul
xchg
pop
mov
fisubl
lahf
xchg
insb
cmpsb
mov
cmp
mov
cmc
jbe
cmp
mov
gs
sbb
lods
pop
xchg
dec
testb
dec
add
sub
jp
sub
jne
mov
js
jge
and
jno
fdivr
dec
mov
pop
dec
andb
jnp
lods
mov
push
ljmp
adc
pop
je
push
mov
inc
mov
pop
jae
test
xchg
cmc
xchg
xchg
lcall
jmp
and
pusha
test
cmpsl
pop
dec
dec
repz
mov
mov
int3
neg
int3
test
dec
cmp
lods
inc
inc
fstps
cwtl
int
cmp
out
xor
pop
xchg
leave
lods
mov
mov
hlt
or
xlat
mov
insb
lahf
cli
pop
dec
loope
mov
pop
mov
nop
xchg
add
hlt
mov
or
xor
movsb
test
jp
scas
mov
xchg
cwtl
dec
sub
fs
hlt
mov
dec
cmp
push
pop
adc
aam
xchg
subl
sbb
xor
and
inc
pop
out
cmpsb
leave
sbb
loope
xor
sbb
mov
dec
les
cwtl
push
js
mov
pop
and
out
pop
pop
outsb
lcall
loope
test
imul
scas
sti
out
repz
sub
fbld
sub
mov
daa
jge
shlb
push
xchg
movsb
jnp
and
rolb
insb
fadd
outsb
aaa
stos
jge
pop
fbld
jg
sbb
mov
mov
popf
pop
mulb
mov
sbb
dec
cmpsl
bound
fsubl
inc
js
jp
push
dec
xor
aas
sahf
cmp
movsl
pop
mov
push
movsb
lcall
cli
and
fwait
clc
xor
cmp
adc
push
cmp
imul
jns
push
das
in
sbb
ljmp
xchg
mull
lea
aas
outsl
xchg
push
pop
adc
adc
cld
sub
iret
mov
out
adc
sbb
cmp
push
das
pusha
fs
in
pop
mov
js
or
sbbl
mov
sti
lods
mov
mov
mov
cmp
call
jne
xchg
jge
stos
in
and
push
push
sti
jge
sbb
fdivl
mov
mov
arpl
mov
popa
lods
je
push
in
mov
ret
mov
loope
mov
sub
ret
mov
mov
mov
and
jg
push
sbb
mov
divb
shr
mov
mov
sbb
test
xor
fsubr
movsb
cmp
sbb
cld
adc
daa
lock
mov
mov
fdivrl
enter
and
push
jmp
jecxz
loop
push
jmp
push
mov
xchg
push
push
ljmp
jmp
sbb
out
clc
cmp
jnp
mov
aas
js
pushf
lahf
ljmp
aam
jae
popf
data16
and
sahf
ljmp
pop
cmp
stos
dec
stos
ficoms
inc
fisttpll
dec
sti
xchg
lcall
push
rolb
fsubr
xor
jle
pop
xchg
ficomps
sub
cs
test
mov
pop
out
rcr
mov
stc
sub
decb
sti
lea
xchg
imul
push
xchg
call
pushf
cld
pop
divb
and
pushf
adc
cmp
pushf
push
mov
add
push
sub
sbb
lahf
xchg
pop
out
test
xchg
rcrl
clc
add
cmp
fsubl
pop
and
push
inc
or
mov
popa
mov
sub
push
loope
sub
cltd
out
cmp
cmp
pushf
and
mov
adc
enter
in
add
jg
bound
gs
adc
ljmp
sub
stc
mov
mov
xchg
seto
cltd
xchg
je
cmp
roll
mov
sub
sti
cmp
cmc
sub
and
or
fstpt
inc
and
iret
xor
sub
subl
es
adc
sti
add
sbb
stc
aad
insb
imul
sub
cmp
pop
pop
aas
icebp
fsubr
insb
inc
pop
sbb
scas
push
movsl
aam
add
sar
jg
jge
xchg
xchg
in
mov
cwtl
clc
pop
mov
cmp
ret
push
fcomps
sti
fimull
and
cmp
jmp
js
repz
sbb
sahf
inc
nop
notl
xchg
jo
fldt
clc
test
out
push
xchg
int
aam
sbb
add
pop
push
pusha
les
stos
push
jmp
xor
gs
rep
jg
push
xchg
lret
test
popf
mov
cwtl
js
fmul
cmpsl
push
pushf
sub
cli
and
das
call
mov
push
pusha
mov
jno
fs
adc
in
adc
jmp
jmp
cwtl
std
jne
orb
mov
xchg
pop
pop
data16
pop
roll
pop
sbb
lret
leave
push
dec
cmp
int3
aam
jg
test
jge
pop
scas
mov
aam
outsb
fidivs
lcall
inc
lcall
sub
jnp
sbb
mov
push
cmpsb
test
jg
push
ja
mov
sbb
ja
lcall
cltd
mov
or
fcompl
mov
enter
ss
out
in
cmpsl
int3
imul
lahf
sti
cltd
fs
mov
je
push
mov
cmp
mov
mov
pop
pop
push
sbb
pop
push
push
decb
cmpsb
dec
pop
jno
fs
cmp
add
and
pop
pusha
out
push
pop
and
cmp
sub
mov
cwtl
in
das
jl
jbe
push
fstpt
mov
pop
cltd
sbb
fdivrl
mov
sub
stos
cmp
mov
sub
mov
sub
popa
loope
sahf
insb
es
in
call
push
pop
jp
stos
fistps
sahf
adc
mov
ja
jl
repnz
js
adc
std
aaa
rorl
ret
push
rcll
cs
imul
in
cwtl
iret
cli
js
fsubl
xlat
mov
cmpsl
mov
scas
cmp
cli
test
fnstcw
bound
test
sbb
shrl
cwtl
push
mov
int3
fcoml
clc
xor
jle
add
daa
mov
mov
mov
push
pop
adc
cmp
push
adc
adc
cltd
das
pop
daa
xchg
repnz
jnp
mov
in
push
sbbb
bound
and
sub
mov
xor
icebp
je
nop
popf
mov
jl
adc
cmp
sti
push
adc
ret
test
in
sbb
pop
repz
mov
jns
jl
std
adc
std
nop
fsub
daa
lret
mov
and
aas
bnd
mov
mov
sbb
mov
das
push
adc
push
cli
mov
imul
adc
mov
sti
fcompl
test
xchg
outsl
cwtl
cwtl
cmp
ss
pushf
jmp
test
and
ret
and
clc
fucom
mov
jp
cmpsb
inc
adcl
mov
dec
mov
clc
cmp
aas
or
push
out
sbb
push
sub
mov
popa
and
pushf
les
pop
sbb
and
es
jecxz
push
out
lret
pop
movsl
fbstp
insb
jbe
jnp
imul
or
jp
mov
je
in
mov
out
pop
push
movsl
push
imul
lret
js
test
xchg
nop
cmp
push
cwtl
out
jno
cmpsb
sti
or
mov
inc
insb
cld
push
int
sbb
mov
mov
xor
jge
popa
or
sbb
outsl
mov
ja
fwait
cmpsb
orl
xor
mov
push
lods
and
int
stos
les
movsb
ret
stc
sbb
dec
dec
ds
mov
cmp
scas
add
sarb
jnp
sahf
out
mov
add
das
pop
test
mov
mov
jmp
push
cmp
sbb
pop
jno
push
sub
jge
xlat
jae
cwtl
sbb
jno
loopne
or
pop
lock
jo
jne
rcrb
cmp
stos
sbb
mov
in
mov
cmp
xchg
test
sub
cmp
ja
cmp
ret
sbb
mov
mov
in
pop
jg
mov
insl
lea
push
pop
push
clc
cwtl
in
xchg
scas
adc
push
dec
mov
icebp
rcr
mov
sub
daa
insb
test
pop
jbe
jmp
ja
cmp
cmpsb
in
fdivrs
jno
and
orb
es
lods
xor
sbb
loope
data16
fdivr
sbb
push
test
push
push
push
sarl
jo
xor
fiadds
int3
shrb
pop
jb
mov
test
mov
pop
std
pop
and
jle
jl
sub
add
sbb
sub
push
js
std
cli
add
mov
pop
mov
mov
jl
in
jne
aas
and
cmpsl
push
xchg
cmp
outsl
lret
cltd
and
dec
stc
push
mov
mov
rcll
or
cmc
push
cmp
aas
or
or
pop
int3
pop
adc
inc
fwait
lea
add
pusha
mov
mov
ffree
pushf
ja
idivb
push
sbb
test
adc
test
add
pop
ror
scas
nop
sti
or
or
xchg
dec
frstpm(287
and
add
movsl
daa
and
add
dec
and
int
cmp
fcoml
fcompl
push
call
cwtl
pop
cmpsl
mov
sbb
lret
mov
xchg
out
andnps
or
iret
sbb
and
decl
fwait
xchg
cltd
mov
jmp
mov
aas
out
movaps
mov
push
and
jle
int3
mov
mov
mov
lahf
inc
test
xor
lahf
das
das
mov
sub
sbb
popf
fwait
push
adc
add
lock
xchg
cltd
cmp
nop
inc
add
jno
push
arpl
jbe
xchg
lods
dec
mov
sbb
aam
mov
daa
cwtl
stc
mov
jnp
pop
and
dec
dec
push
add
mov
sub
popf
cmpb
cmp
shll
or
cwtl
movsb
and
lret
sub
pop
push
xor
bound
fmull
sbb
mov
xor
out
sbb
xor
jbe
cmp
xchg
mov
adc
mov
mov
pop
je
xor
sbb
test
cld
testl
mov
call
push
loopne
cmp
mov
andb
cmp
nop
cmc
es
cwtl
je
xor
call
pop
xor
es
or
imul
fidivrl
mov
in
in
cmc
push
ss
adc
cmp
fyl2x
mov
leave
jo,pt
xchg
jnp
sub
test
add
mov
add
rcl
pushf
push
mov
ja
shr
xlat
sbb
divb
das
cltd
cmpsb
fsub
inc
mov
sub
add
or
jg
scas
xchg
jge
bound
test
inc
mov
mulb
mov
stos
push
inc
pushl
lods
inc
pop
jne
sub
addr16
sbb
pop
push
addr16
push
dec
jg
jmp
dec
adc
dec
arpl
fldl
push
mov
mov
pop
ficompl
adc
cmp
mov
adc
mov
and
xchg
cwtl
and
mov
dec
movsl
das
sbb
loopne
add
push
mov
repz
fsubr
and
aas
sub
scas
adc
jno
push
les
movsb
jg
mov
cld
mov
mov
mov
cli
mov
popf
pushf
pop
jg
in
adc
mov
and
add
mov
xchg
xor
mov
mov
cmp
xchg
xor
mov
dec
iret
lock
lods
enter
inc
into
mov
jg
pop
jle
xchg
add
pop
std
scas
jno
xchg
pop
cld
adc
fnsave
push
jbe,pt
mov
mov
jl
imul
adc
dec
popf
cwtl
mov
pop
rol
mov
or
jne
pop
or
mov
pop
mov
int
mov
mov
test
and
lds
das
out
frstor
sbb
clc
adc
enter
cmpsb
test
push
imull
xchg
hlt
cwtl
pop
dec
or
cld
mov
adc
cmpb
mov
jp
pop
in
lods
outsl
cmp
jb
sti
outsb
or
repnz
pushf
jnp
arpl
das
cmpsb
icebp
xchg
inc
test
loope
sbb
sbb
pop
cmp
jg
pop
sbb
xchg
insl
flds
cwtl
mov
pop
cmp
cmpsl
jno
rclb
mov
sar
aad
sbb
daa
das
fldenv
outsl
xor
jge
mov
dec
andb
sarb
ficompl
loopne
pop
sub
inc
ja
scas
clc
cmc
pushf
mov
test
cs
flds
sbb
call
pop
mov
scas
icebp
enter
cmp
stos
pop
lock
imul
lret
cwtl
lret
adc
cmpsb
lods
sti
scas
pop
pop
test
inc
sbb
addl
sbb
fimuls
pushf
shll
sbb
xchg
dec
mov
lcall
sbb
cmp
sbb
stos
mov
jo
lds
aas
adc
pop
cs
mov
mov
int3
dec
add
out
xchg
fcomp
xchg
sub
sbb
push
dec
push
cmove
xchg
sub
out
push
dec
jp
mov
jae
ljmp
add
fneni(8087
stos
pop
push
je
mov
aad
adc
cld
pop
xorl
leave
int
jge
jge
das
mov
into
jge
fldt
jbe
jne
push
push
mov
hlt
mov
pop
jg
inc
jb
test
sbb
movsl
aas
out
xchg
inc
xchg
popa
mov
cwtl
leave
test
xchg
mov
cmpsl
imul
add
adc
aas
hlt
fcomp
xor
add
sbb
push
mov
icebp
popa
inc
in
mov
icebp
stos
jo
fwait
lods
jbe
sahf
test
jg
test
bts
pushf
mov
sub
jnp
sbb
mov
aas
mov
stos
and
dec
ret
mov
mov
lret
stc
mov
mov
addb
cmp
rdmsr
pop
stos
mov
test
loopne
fisubs
jg
pop
xor
pop
dec
mov
xchg
insl
pop
mov
xchg
push
pop
pop
movsl
or
xor
inc
cld
cmp
jb
jb
stc
fcomps
sbb
call
mov
sbb
cmp
xrelease
jle
scas
sbb
jns
loopne
mov
ss
ds
sub
add
sub
cmp
add
pop
arpl
and
cmpsl
jmp
mov
jg
stc
push
imul
pop
xchg
sbbb
mov
mov
cld
sub
cmp
sub
pusha
lahf
mov
lret
sub
dec
or
cmp
data16
mov
sbb
inc
int3
dec
loope
into
pop
adc
push
sarb
je
or
pop
pop
out
cmp
das
xor
test
popa
mov
incb
pop
out
mov
add
xchg
movsl
mov
hlt
push
inc
scas
fmul
inc
shrb
lds
out
adc
pop
loope
cmpsl
lods
sti
or
in
inc
mov
push
mov
jge
fcomps
scas
and
adc
inc
cwtl
bound
mov
sub
sti
lods
movsl
xchg
jne
test
lock
test
mov
mov
or
dec
in
mov
clc
jmp
push
sar
cwtl
mov
mov
sbb
pop
sbb
lret
js
in
mov
movsb
inc
cli
and
sbb
add
bound
xorb
jns
or
mov
push
in
xchg
pushf
cmp
sbb
scas
rcrl
mov
jne
cmp
fsubrs
lods
xor
sbb
sti
lock
movsb
aad
mov
pop
mov
scas
int3
cmc
pushf
cmpb
popf
jbe
jmp
and
loop
ljmp
add
pop
jle
loop
leave
bound
sbb
pop
mov
in
add
lea
sbb
adc
pop
dec
xchg
sbb
adc
cmp
cmpsl
jg
or
cmp
mov
ja
into
je
lock
mov
mov
pop
in
es
mov
xor
lcall
mov
xchg
fwait
jnp
mov
push
mov
adc
sbb
fisubrs
movsl
push
pop
in
out
data16
sbb
jne
lods
aas
shlb
aas
or
pop
decb
xchg
sti
adc
aam
out
arpl
pop
cmpsl
aad
mov
sbb
sub
xchg
and
sarb
sbb
fcompl
shll
pop
scas
mov
pop
pushf
daa
xchg
pushf
add
cmp
cmp
sbb
dec
add
sub
sbb
daa
rcrb
sub
test
cmpb
sti
out
xchg
or
or
int3
clc
out
sbb
mov
push
mov
or
jg
stc
jle
push
jge
fists
jne
xchg
pop
lds
cltd
xchg
cwtl
dec
dec
fstps
int
mov
arpl
out
fcomi
fstpt
cmp
or
sbb
aad
in
pop
mov
add
jbe
mov
pop
les
das
sbb
pop
inc
int
out
fwait
or
jbe
and
fstpt
adc
add
cmp
and
or
int3
movsl
ss
sbb
cwtl
fdivrl
call
xchg
movsb
mov
adc
ret
jp
mov
aas
sub
pushl
xor
addr16
pop
mov
push
aas
test
incl
sub
aam
push
sarl
shl
sbb
hlt
cmpsb
ficoml
fiaddl
stos
fwait
cmp
mov
sbbb
lret
xor
stos
or
mov
test
push
lcall
decl
sbb
cmp
insl
insb
push
stos
ja
repz
stos
pop
pop
dec
out
pusha
xchg
ret
cli
dec
add
dec
adc
pop
mov
dec
pushf
test
andl
fcmovb
jbe
xor
mov
loop
or
mov
jno
in
ficoms
mov
fs
scas
mov
mov
lcall
dec
iret
push
mov
and
rcrl
cs
nop
jnp
push
xor
jmp
enter
das
adc
lahf
popa
loopne
sub
adc
mov
add
movsl
and
shlb
sub
repnz
or
add
xchg
in
in
cwtl
std
popw
aas
pop
dec
mov
mov
nop
das
filds
and
sub
loope
call
test
mov
pop
test
push
sub
lds
lds
fnstcw
lcall
jecxz
sub
test
cwtl
ret
and
arpl
movsl
loope
and
movb
push
into
out
pushf
fucomi
xor
adc
push
loop
adc
fdivl
xor
dec
cld
sbb
ja
insl
sub
out
repz
pop
or
sbb
iret
jp
xor
mov
sub
cmc
or
test
xchg
fwait
fwait
pop
js
mov
xchg
mov
fnstcw
loop
fdivrl
sbb
aad
into
sbb
sub
adc
sbb
enter
test
insb
insb
sub
lcall
cld
mov
pushf
test
loopne
pop
mov
fsubs
inc
adc
cwtl
push
insl
push
hlt
add
sti
adc
pushf
mov
cwtl
pop
jecxz
call
and
into
cli
jp
push
mov
into
mov
cmp
fdivrs
dec
int3
lahf
mov
mov
xor
es
xchg
lcall
out
scas
loopne
sub
cs
stos
je
out
pushf
adc
ja
push
addr16
jle
or
fs
pop
mov
inc
cmp
pop
sub
add
mov
scas
mov
pop
les
je
pusha
addr16
insl
movsb
add
cld
adc
inc
jp
push
fldcw
pop
jle
cld
or
cmp
enter
mov
pop
mov
test
test
pusha
shl
data16
pop
pop
enter
hlt
cmp
sub
je
mov
sbb
out
push
gs
sbb
jno
mov
iret
std
clc
lret
stc
mov
movsl
jnp
andl
mov
adc
iret
loop
jg
sbb
push
sti
pop
loop
fldt
jb
xchg
sbb
nop
pop
sbb
cmp
inc
adc
lods
jae
fcoml
ret
fistpl
xchg
clc
and
pushf
fdivrs
in
jb
cmc
xchg
fdiv
sahf
pop
push
xorb
loopne
daa
cmp
xchg
and
in
cmpsl
test
cld
insb
cmp
inc
inc
in
imul
add
cmp
xor
fs
cmpsl
das
inc
in
pop
sub
sbb
cmp
call
pop
movups
pushf
pop
mov
sbb
xchg
clc
loop
int3
sbb
add
dec
movsb
cli
sub
mov
out
shlb
loopne
mov
clc
xor
iret
fstps
xchg
inc
movb
popf
jge
cmp
xor
cmp
test
js
outsb
jae
jnp
mov
sub
xor
lods
sbb
adcl
jle
pop
sbbl
aas
and
outsl
push
int3
or
sti
int
scas
rorl
cli
mov
mov
arpl
in
cli
ret
lcall
jp
fdivrs
add
adc
insl
pop
inc
lret
hlt
pop
push
mov
mov
inc
xlat
mov
clc
push
lea
idivb
data16
mov
fists
mov
dec
mov
cmp
dec
mov
cmp
xchg
xchg
sbb
int
mov
aas
cli
je
xchg
jbe
orb
pop
sub
jmp
sbb
fdivs
mov
loopne
clc
cli
pusha
mov
mov
mov
pop
mov
xor
js
cli
pop
and
sub
mov
or
pop
jbe
jecxz
or
lcall
mov
sub
cwtl
pop
push
in
xchg
sbb
push
das
push
cmc
cs
cmp
movsl
push
fcompl
jns
fmull
popa
inc
cmp
mov
out
xchg
outsb
arpl
lds
leave
jge
push
sbb
jp
dec
xor
mov
jg
dec
cmpsl
iret
jp
popf
aad
jl
or
stos
pop
xchg
dec
pop
pop
insl
mov
pusha
fwait
xchg
fwait
pop
pop
aam
fdivl
ds
push
mov
out
iret
pop
mov
cmp
pop
cmp
mov
pop
cmp
ss
lea
fsub
nop
fstpt
push
sahf
jmp
fwait
loop
cmpsl
lret
mov
mov
mov
sahf
xlat
xchg
ret
int3
sbb
mov
roll
xchg
xchg
test
mov
ljmp
and
pop
xchg
mov
jp
ds
cmp
ljmp
inc
cmpsb
jo
cmpsb
loope
mov
mov
in
dec
addr16
mov
mov
xchg
sub
jecxz
dec
fnstcw
push
pop
push
sbb
cmp
outsl
mov
xchg
pop
es
adc
in
pop
cmp
mov
pusha
addl
aaa
int3
je
js
ds
into
mov
jnp
add
icebp
call
push
sarb
push
movsl
jne
mov
jle
pop
les
cs
cmove
xor
movsb
pushf
cld
xor
stc
das
cmp
sarl
and
or
movsb
ret
in
lcall
inc
cld
mov
enter
aas
sbb
xchg
mov
xchg
sbb
idiv
cmp
cltd
mov
outsl
out
aaa
xchg
push
outsl
and
test
icebp
mov
or
cwtl
lods
es
cmp
sub
in
pop
popf
bound
mov
pop
sbb
mov
call
add
int3
xor
sbb
int
pop
jae
leave
cld
inc
fst
push
push
in
fsubs
fdivs
or
out
into
jns
repnz
addr16
inc
in
cmp
adcb
test
mov
sbb
enter
mov
fistps
and
divl
inc
xor
imul
cwtl
cltd
cmp
pop
ja
fmull
shlb
push
into
jae
les
push
gs
pushf
neg
or
cmpsb
ret
out
mov
out
push
xchg
add
gs
mov
das
addb
pop
jmp
arpl
mov
cmp
mov
xor
and
mov
in
mov
movsl
and
mov
je
das
cmp
xchg
adc
mov
jmp
adc
out
pop
pop
cmpsb
sub
mov
shll
lods
push
sbb
adc
cwtl
inc
fstl
cmpsb
cmp
dec
pop
into
test
inc
int
dec
xchg
add
ds
mov
pop
sub
xor
icebp
in
cmp
fsubrl
mov
or
dec
mov
sti
add
mov
mov
mov
fildl
cmpsb
mov
pop
out
sub
inc
cmp
pop
ljmp
popf
sub
test
lret
push
mov
and
sbb
and
mov
in
jl
fdivp
inc
rcrb
lret
mov
mov
arpl
pop
icebp
rcrl
lods
sub
fidivrl
jmp
mov
or
cmpb
fnsave
xchg
xor
test
lahf
jmp
int3
mov
int3
icebp
push
mov
pop
add
out
dec
inc
cmp
test
xchg
cmp
popa
cmp
lret
int
cmpsb
xlat
mov
mov
sahf
dec
sbb
call
sbb
les
jmp
es
pop
cmc
daa
xchg
mov
lret
nop
xor
rcrl
dec
loop
insb
hlt
mov
filds
cltd
and
imul
cmp
mov
mov
fcomps
into
rcr
sub
sti
and
jno
lret
push
daa
push
push
push
jle
cmp
cmc
ljmp
movsl
popa
mov
or
jg
lea
test
data16
fwait
adcl
int
sub
movsb
mov
mov
popf
jmp
push
pop
loope
jno
ja
jo
aas
inc
leave
cmp
cld
add
inc
out
fwait
imul
pusha
out
mov
les
fdivrl
bound
xchg
mov
mov
in
jl
int
enter
sub
mov
pushf
mov
js
push
mov
push
enter
lds
test
cmpl
or
sarb
fisubs
xor
pop
dec
aaa
popf
lret
popa
lahf
mov
xchg
sbb
sub
cmp
add
ret
pop
xor
pop
cltd
inc
xchg
call
sub
sbb
pushl
add
loopne
adc
pop
sub
in
arpl
xchg
cmp
xchg
aad
bound
mulb
test
xchg
adc
movsb
mov
inc
mov
stos
and
lods
mov
xchg
je
xor
adc
subb
push
fwait
jp
push
mov
sbbb
mov
and
add
rorb
jbe
jns
sbb
stos
xor
mov
mov
mov
jl
xor
orb
mov
mov
jge
sti
sbb
cmpl
loope
fwait
rolb
mov
mov
inc
mov
mov
pushf
sti
je
and
aas
nop
in
insb
sbb
aaa
push
sbb
pop
mov
jne
mov
and
dec
sbb
ljmp
outsl
sbb
lea
xor
adcb
data16
push
ljmp
pop
ja
pop
mov
xor
imul
nop
xchg
stos
sub
lods
xchg
pop
fadds
jo
shlb
daa
cli
lcall
iret
cs
out
cwtl
insb
sub
jae
stc
sub
aam
fildl
cmpsb
lock
adc
mov
pop
sub
es
test
pop
hlt
rorb
cli
push
sahf
jbe
fnop
pop
dec
push
ljmp
add
lods
jnp
dec
pop
lods
mov
movsb
pop
sbb
dec
push
fs
mov
or
push
mov
mov
pop
dec
in
inc
mov
lret
cmp
inc
das
pop
mov
sbb
xlat
xor
and
mov
push
fnstcw
dec
pushf
stos
data16
cmp
aaa
add
insl
fistps
cwtl
push
and
sub
cmp
mov
mov
cmp
and
mov
pop
xchg
in
add
negl
mov
jns
shl
or
cmpsl
mov
and
call
dec
loopne
xchg
pop
fldenv
fld
cmp
xchg
add
scas
sbb
jo
stc
je
mov
lea
xchg
outsl
mov
in
mov
adc
fs
mov
ret
xchg
fldt
push
mov
cmpsb
sbb
cltd
nop
sti
test
mov
daa
scas
mov
rcr
outsb
movsb
push
shlb
test
hlt
repz
cwtl
leave
pop
mov
inc
loop
jo
in
stos
fwait
cmpsb
mov
jb
enter
ffree
js
inc
test
arpl
push
pushf
jl
and
xor
adc
cmpsl
mov
cltd
sbb
aaa
mov
jl
addl
sbb
mov
push
mov
imul
sbb
je
cli
cld
cmp
xchg
jne
cmp
mov
cwtl
notl
popf
adc
push
lds
mov
je
mov
bound
mov
mov
xchg
dec
sbb
cli
pop
push
xor
jmp
lret
pop
fsqrt
aas
jecxz
stos
jnp
sbb
les
pushf
loopne
lret
lahf
fbstp
shl
adc
lcall
cli
or
mov
push
push
jl
dec
sbb
adc
sbb
and
mov
cmp
jge,pn
xor
mov
lahf
sub
loope
scas
cli
std
scas
das
test
cmp
pop
in
mov
nop
cwtl
dec
mov
adc
mov
fldt
sti
cli
ret
xor
enter
jle
jle
jb
sbb
popa
inc
pushf
mov
cmpsl
leave
fmul
mov
and
icebp
ss
cmp
pushf
rolb
std
xlat
lret
adc
int3
popa
daa
add
sbb
out
sub
orb
push
xchg
mov
inc
movsw
push
aam
mov
pop
js
dec
sbb
jbe
inc
sbb
dec
iret
inc
cli
leave
mov
iret
negb
imul
mov
dec
cmpb
cmp
xchg
das
sub
dec
scas
iret
imul
pop
pushf
xchg
in
pop
mov
inc
mov
cli
leave
repz
pop
imul
adc
and
jecxz
iret
imul
mov
mov
push
loop
hlt
pop
adc
cmp
fmul
xlat
mov
or
mov
pushf
and
movsl
mov
jl
jp
lock
pop
push
push
iret
push
popf
pop
xchg
stos
aas
mov
aaa
aas
popa
xchg
arpl
sbbl
fs
cmp
into
mov
cmc
lds
cli
mov
mov
xor
cmp
cmp
aaa
xchg
sbb
mov
sbb
imul
and
sbb
stos
mov
xchg
inc
call
dec
sbb
push
cmp
push
sub
cmp
add
cld
ds
mov
jb
cmp
push
sbb
jo
and
aas
jno
das
mov
cmp
repz
lds
mov
ljmp
jnp
pop
jg
jge
jbe
sbb
scas
shlb
orb
pushf
call
mov
fdivs
jg
inc
repz
mov
xchg
cmpsl
push
fs
xor
jmp
outsl
cmp
bnd
dec
jge
and
add
sbb
cltd
mov
sbb
mov
and
adc
fidivrl
adc
mov
xor
add
cwtl
add
nop
call
cmp
movsl
mov
push
mov
add
fsubr
inc
test
sbb
mov
aaa
dec
jecxz
arpl
clc
adc
or
hlt
mov
fisttpll
sbb
push
ds
adc
mov
jo
stc
pop
mov
mov
js
fists
pushf
sub
mov
inc
out
push
jbe
test
mov
repz
lea
addr16
pop
fisubs
pop
movsb
jg
push
rclb
or
ljmp
mov
xchg
mov
or
mov
sar
push
cmp
xor
daa
add
sbb
inc
popf
ja
pop
stos
das
push
xlat
mov
dec
stos
fwait
sbb
jb
fsubl
sbb
es
jnp
cld
fildl
push
cli
add
mov
jg
aas
sub
aad
xor
rcl
loop
pushf
stos
imul
pop
mov
cmpsb
sti
pusha
aam
filds
pushf
sbb
dec
ss
cs
loop,pn
loope
int3
cmp
pop
mov
and
mov
mov
loop
pop
xor
faddl
fdivrl
sbb
sti
fnsave
fcoms
popf
es
ds
jns
jbe
mov
dec
fxch
ljmp
add
in
lea
aaa
fwait
push
insl
sbbl
and
xchg
pop
xor
lea
jae
mov
lcall
pop
mov
test
dec
mov
push
cld
push
in
cmp
xchg
jge
scas
incl
out
addl
mov
push
cwtl
int3
fwait
sub
js
xchg
inc
ret
out
lods
pop
jg
lock
sbb
roll
cmp
repz
call
xor
bound
das
adc
mov
mov
sbb
push
fldt
xchg
sbb
int
pop
pop
lea
fldt
mov
aas
cmp
xchg
jmp
xor
push
std
jecxz
push
fildll
mov
lods
adc
or
rorb
adc
inc
or
xchg
hlt
and
dec
mov
roll
aaa
lods
and
sbb
push
mov
mov
inc
mov
dec
into
fmull
inc
pushfw
xchg
cmc
xor
repz
push
pushf
aaa
xchg
fists
aaa
jle
rcl
sbb
mov
pop
enter
in
cmp
orl
pop
cmp
mov
sbb
jmp
cmpsl
jecxz
mov
cld
mov
pop
adc
dec
ss
push
test
jmp
hlt
sbb
mov
outsb
add
cwtl
cwtl
mov
xchg
std
out
cwtl
mov
cmp
cmpsl
fdivl
hlt
cltd
hlt
roll
lods
jne
mov
or
jno
out
push
mov
and
jl
mov
popa
jae
cmp
pop
in
or
pushf
sti
push
addr16
pop
in
jg
jae
jnp
xor
test
mov
xchg
jne
aam
jle
fists
les
mov
sahf
push
stos
cli
out
pop
outsl
xchg
cmp
aas
lods
push
pop
rcrb
fmuls
lcall
mov
mov
sub
lret
leave
xchg
add
mov
sbb
mov
cmc
lea
sbb
shrb
addr16
push
jg
imul
xor
insb
xchg
out
pushf
aas
stc
xor
dec
mov
pop
jno
mov
sarb
cwtl
sbb
cmp
enter
inc
bound
hlt
call
jecxz
ja
daa
lods
dec
lret
iret
or
das
cmpl
mov
repnz
cmp
out
mov
jl
jnp
js
popf
scas
int
xor
cwtl
rcrb
or
mov
pop
mov
fldcw
and
or
pop
je
or
xchg
cli
sub
or
add
inc
jns
and
ljmp
sub
mov
mov
sarl
adc
mov
mov
inc
arpl
lock
data16
fwait
mov
pusha
mov
bound
ret
and
enter
es
inc
or
jle
cli
xor
cmpsl
mov
mov
iret
out
push
push
pushf
sti
out
and
add
cmpsb
cmp
pushf
dec
add
mov
jo
pushf
mov
aas
imul
push
jae
cs
mov
nop
enter
and
jmp
cwtl
test
sar
or
xchg
sub
ret
jg
jg
call
jno
jo
mov
pop
mov
jbe
mov
call
fcmovu
enter
xchg
adc
lock
data16
xchg
fisubl
repnz
mov
pop
xchg
ret
icebp
fucomp
cld
mov
pop
sbb
cmovne
ds
imul
sbb
movsl
mov
xchg
sti
cld
mov
aas
inc
pop
dec
in
inc
sbb
xor
xor
test
sub
or
inc
lahf
mov
fidivrs
adc
mov
cmp
xchg
subb
jg
cli
push
aad
pop
mov
adc
stos
mov
lock
mov
sub
sub
jae
mov
xor
mov
enter
xchg
inc
pop
sbb
jle
mov
mov
mov
dec
push
shlb
jne
stos
out
sub
stc
lahf
cwtl
lods
push
cmpsl
add
add
mov
jns
stos
sarb
sti
sub
mov
dec
lcall
mov
jmp
cmp
jecxz
sbb
std
arpl
aas
cmpsb
sti
ljmp
jnp
push
dec
cmp
cwtl
add
jg
hlt
fisubl
aas
cmp
xchg
lahf
fsubrl
xchg
push
sbb
aad
push
jp
int
mov
xchg
or
mov
test
push
insb
sbbb
mov
int3
std
sub
pushf
js
jns
ret
pop
movsl
pop
adc
rcll
xchg
sti
outsb
dec
mov
push
adc
sub
mov
mov
add
sahf
imul
addr16
setno
int
jg
inc
lahf
xor
mov
push
or
push
dec
addl
rorl
ljmp
pushf
fisttpll
sbb
flds
cwtl
aad
aam
popf
andb
lret
popf
pop
push
add
or
fdivrp
mov
mov
mov
xchg
cmpsb
mov
or
ficomps
js
gs
pushf
pop
cmp
xchg
cmpsl
sub
or
dec
jo
mov
insl
xor
cmp
daa
xor
scas
adc
clc
test
jle
push
pop
mov
dec
in
pop
adc
mov
xchg
xchg
add
add
mov
lods
lods
add
ja
inc
sbbl
add
pop
ret
mov
pop
stos
loopne
in
push
pop
mov
mov
xchg
jecxz
in
cmpsl
xlat
jp
xorb
cmp
push
cmp
xchg
jnp
aaa
incl
fsubrl
dec
les
jne
cmc
cwtl
lea
xor
cmp
les
stos
pushf
leave
dec
aaa
add
inc
sbb
cmp
cmp
lcall
clc
pop
hlt
cmpsb
cld
enter
adc
inc
pop
scas
test
scas
ss
sbb
leave
sbb
or
xchg
fsubrl
fyl2xp1
sbbl
test
sbb
shlb
mov
lods
cmp
outsb
imul
fidivrl
jnp
fisttps
adc
jb
enter
pop
inc
mov
loope
cmpb
add
ss
xchg
or
jo
or
or
das
inc
into
bound
xchg
insb
mov
mov
dec
and
into
mov
in
add
sti
movsl
int3
out
scas
and
pop
mov
mov
call
adc
fdivrs
mov
mov
cmp
imul
sub
enter
into
mov
fdivrs
jnp
pop
dec
xchg
nop
push
test
sub
fmull
sbb
mov
sbb
or
loopne
aas
push
rcrb
mov
aad
dec
and
sub
sti
out
cmp
add
jecxz
pop
mov
sarb
pop
int3
inc
fidivrs
sahf
enter
add
lahf
stos
imul
mov
push
call
aas
hlt
mov
mov
sarb
pshufw
push
or
jecxz
faddl
lcall
push
jp
fs
sub
ljmp
sub
inc
pop
test
add
sbb
xor
or
lea
jge
push
pop
sub
mov
and
scas
jmp
mov
popf
fucomp
stc
les
out
xchg
and
flds
mov
xor
lods
and
js
cmpsb
sti
lock
xor
pop
cld
mov
aas
push
fcmovnu
push
clc
sbb
sub
pop
cmpsl
popf
pop
mov
jl
test
sbb
xchg
lds
arpl
dec
sar
cwtl
sbb
or
mov
scas
mov
mov
jnp
cmp
sbb
jg
icebp
push
int
pusha
push
xchg
in
lcall
adc
pop
jle
dec
lods
dec
sbb
fwait
mov
cmp
push
mov
sbb
add
shlb
rorb
fsub
idivl
pop
pushf
ficoms
mov
or
imul
lock
stos
cld
cmp
mov
jle
outsb
mov
jmp
call
xor
xor
shlb
jns
add
push
and
loop
popf
pop
movl
jle
adc
daa
or
cmp
out
repz
pop
cmp
sbb
xchg
pop
int
push
and
mov
lock
cmp
stos
mov
sub
lcall
adc
in
mov
test
xor
addr16
jle
mov
cld
scas
cmp
push
or
jge
bound
ljmp
loop
call
push
pop
jmp
pop
mov
dec
or
pushf
cmp
sahf
mov
xor
mov
and
ret
add
mov
sbb
cmpb
dec
and
and
cmc
fadds
or
mov
lcall
pop
jle
mov
int3
sub
pushf
dec
mov
shll
sbb
jle
push
cli
in
xchg
adc
cmp
mov
popf
fisubrl
sti
jmp
pop
sbb
lcall
nop
aas
enter
pop
mov
inc
sbbl
mov
into
fcmovnbe
jae
cmp
pop
out
mov
mov
inc
or
cmp
dec
hlt
out
pop
sbb
add
xor
push
mov
inc
or
sarl
sub
xchg
jle
lods
js
xchg
push
mov
fcoms
sti
negb
push
sbb
dec
mov
pop
xchg
inc
pop
jb
adc
mov
sub
pushf
pop
jp
pop
cmpsl
jns
push
jle
sub
in
mov
jp
sub
add
call
push
sbb
movsb
movsb
clc
fcoms
test
nop
cmp
sbb
fistl
in
or
outsl
cmp
jmp
push
pop
mov
ds
mov
fstl
arpl
push
lcall
aas
push
cli
leave
mov
cltd
rcrb
xor
mov
mov
sub
inc
push
mov
inc
jns
insl
sarl
test
sub
cs
stos
pop
inc
sub
and
repz
fiadds
cwtl
sbb
push
dec
pop
jle
repnz
lea
add
fadds
sub
loop
mov
aaa
cmpsl
cmp
xchg
daa
xchg
movsl
adc
dec
shrb
notl
pop
cmpsb
xchg
addr16
mov
enter
pop
lahf
jbe
lret
mov
scas
iret
xchg
pop
sbb
arpl
test
lret
mov
stos
pop
pop
sahf
sbb
sbb
pusha
sub
mov
call
dec
fcomi
add
push
or
daa
jmp
mov
pusha
lods
jns
push
dec
push
je
xchg
cwtl
add
mov
lock
data16
sbb
and
ret
mov
pop
push
jne
and
jnp
faddl
mov
sahf
lret
outsl
lcall
sbb
pop
repz
or
in
mov
testl
ficompl
sbb
jl
adc
mov
sbb
jl
enter
insl
mov
or
cwtl
inc
lock
push
sbb
es
xorb
jb
pop
and
loope
jg
pop
mov
mov
loop
ficoms
dec
lret
push
xchg
aas
fwait
dec
cwtl
mov
mov
push
das
cwtl
cmpsl
cwtl
sbb
xor
jbe
or
push
jl
and
loop
jb
mov
ja
sahf
repnz
push
lea
scas
mov
sbb
add
stos
pop
sbb
adc
cli
jmp
inc
sbb
outsb
xor
mov
jne
inc
std
stc
xchg
mov
sarl
push
fisubrs
adcl
push
cmp
out
loop
mov
jecxz
popa
push
and
cld
sub
jno
jmp
mov
subb
dec
negb
outsl
cld
je
test
cli
ret
jae
movsb
dec
xor
cld
push
neg
mov
jle
xchg
pop
into
sub
shrl
sbb
outsb
in
cltd
mov
jle
out
fisubrs
mov
jb
test
pop
xchg
push
jae
adc
cmpsl
cmp
xchg
and
push
insb
fisubs
iret
mov
test
in
das
cwtl
lcall
and
push
ret
jl
dec
xlat
push
jle
mov
xlat
mov
sahf
xchg
cwtl
adc
xchg
pop
mov
js
test
and
popa
lods
mov
adc
pushf
xchg
sahf
fnstenv
cld
jb
mov
sub
jmp
test
adc
dec
cmpsb
push
mov
sub
mov
scas
jl
mov
fsubrs
sarb
push
pop
sahf
jle
fmul
push
mov
pusha
adc
or
loop
adc
popa
stos
add
xor
xor
mov
jmp
mov
data16
xor
cmc
xor
stos
push
adc
mov
xchg
dec
fildl
stc
adc
cmp
push
mov
rolb
pop
in
mov
ds
adc
push
movsb
stc
sar
or
and
loope
cmp
sti
xchg
ret
int
add
sub
dec
insl
inc
les
lret
add
ficoml
hlt
shlb
dec
loop
cmp
cmp
in
and
cmp
sbb
cmpsb
mov
cmpb
rol
mov
ds
dec
sub
jb
jl
mov
jno
and
sub
sbb
push
jge
mov
call
cmp
stos
ret
fcomps
or
xchg
aas
cli
orb
out
push
enter
xor
and
sub
mov
lcall
mov
inc
jle
idiv
dec
mov
push
mov
adc
adcl
mov
pmulhuw
fwait
lahf
jg
xor
inc
lret
fwait
pushf
ljmp
dec
incl
fistpll
rcll
or
jp
out
loopne
mov
xorl
cmpsl
stc
insl
pushf
push
sahf
aas
jmp
jle
imul
mov
ljmp
sub
dec
add
mov
push
fldcw
sti
out
cmp
push
jmp
push
in
jbe
cwtl
outsb
iret
ljmp
aad
pop
jo
test
aad
add
push
fst
pop
popa
add
pushl
out
stos
push
jae
pushf
push
mov
add
lds
dec
fcomp
lods
mov
adc
dec
mov
loopne
stos
sub
push
rcrb
jmp
or
mov
fildl
cld
mov
fs
imul
sbb
pushf
jnp
fadds
ja
push
imul
mov
rorl
lds
aaa
mov
stc
jle
mov
imul
cmpsb
sti
jmp
mov
in
adc
aam
mov
js
jge
inc
in
test
cmp
enter
pushf
mov
es
shrl
std
cmp
rorb
repz
shrl
mov
mov
mov
mov
dec
cwtl
adc
jmp
pusha
add
adc
mov
fldt
xchg
filds
bound
lret
xor
mov
inc
mov
inc
arpl
imul
sbb
mov
dec
stc
push
mov
mov
sbb
in
adc
mov
push
dec
rol
mov
push
sub
jl
ja
cmp
pop
pusha
lods
ss
hlt
rclb
cvtdq2ps
fsubl
fisttps
lock
pop
xlat
in
xchg
outsb
sub
scas
incl
cmp
aas
adc
xchg
xchg
xor
enter
xchg
cmp
add
iret
test
sbb
daa
loopne
dec
outsl
push
imul
and
jae
mov
insl
test
loop
and
repz
hlt
inc
sti
fwait
js
fucomip
mov
pop
imul
push
cmp
adc
cld
pop
lret
ljmp
ret
push
push
and
adc
add
rcr
sbb
test
dec
leave
dec
andb
out
jg
lods
sar
cmc
pushf
scas
cmp
xchg
in
add
or
mov
push
jg,pt
adc
outsb
je
lods
out
push
mov
ljmp
pusha
jl
mov
rcrb
sbb
jl
dec
pop
ficompl
dec
mov
sub
aad
fistl
arpl
cmp
cmp
rcr
lock
aas
adc
mov
cltd
mov
dec
xchg
push
mov
das
stc
mov
je
xor
aaa
xlat
inc
stos
sti
inc
out
out
pop
aam
aas
shlb
stos
lcall
jnp
mov
aam
sub
movsb
adc
cmpsb
lods
leave
and
cmp
mov
adc
fadds
pop
loop
push
cli
fdivl
out
xchg
cmpsb
mov
ss
pushf
in
sbb
mov
lret
xor
out
lods
mov
sub
ss
sti
jmp
cmp
jp
movsb
mov
adc
pop
cmpsl
xchg
lahf
sbb
inc
sbb
sub
out
cwtl
add
jle
aad
jmp
and
stc
int3
cwtl
cmpsb
sbb
pop
push
add
insb
add
mov
hlt
lahf
push
mov
mov
pop
jle
sub
shr
cmpsl
cmovg
jne
cli
insb
push
call
loope
dec
jl
in
cmp
jns
fs
pop
aad
and
mov
xchg
mov
sar
je
add
fldt
mov
xchg
sbb
jl
jbe
adc
sub
mov
dec
sbb
fisttps
inc
pop
mov
add
rolb
idivl
aad
out
ret
insl
rcll
ret
cmp
ret
and
sbb
push
and
hlt
sbb
push
lods
xor
adc
cs
lahf
mov
mov
xchg
out
mov
iret
cmpsl
outsl
push
fidivs
mov
sti
push
into
mov
fisubrs
cmpsb
xchg
sbb
fwait
cs
pop
sti
mov
cmpsl
shlb
mov
pop
cmp
mov
push
mov
pusha
addl
es
leave
into
ljmp
mov
fmuls
int
lds
shrl
xor
cli
mov
mov
aas
roll
cwtl
mov
pushf
or
sahf
out
decb
pusha
insb
loopne
test
mulb
lcall
mov
add
ret
test
test
repnz
pop
xchg
mov
pushf
fidivrl
sbb
cmp
mov
loope
cmpsl
daa
int
fcoml
bnd
outsl
cmp
fldt
shrl
lock
xchg
cwtl
adc
aas
dec
xor
or
pop
cwtl
sbb
push
cwtl
xchg
cmp
pop
test
pop
nop
pop
test
aas
loope
rcll
jae
nop
pop
mov
es
movsb
js
mov
mov
testb
ret
scas
stos
cwtl
nop
pop
fcompl
sub
stos
fiadds
and
sub
jne
outsb
cmp
jl
out
fdivl
xor
mov
pop
cmp
xchg
or
mov
and
outsb
test
repnz
cwtl
shlb
imul
jmp
cmpsl
cmc
scas
fsub
jle
clc
mov
push
int3
and
sub
popa
dec
pop
stos
es
loope
cwtl
int
scas
mov
cli
adc
fs
in
jle
jnp
jno
cmc
mov
imul
lds
cwtl
faddl
mov
push
divb
cmc
popf
xchg
sbb
dec
cmp
xor
fcmovbe
and
sbb
xchg
pop
inc
jl
out
fs
aas
cmp
push
dec
std
add
cmpb
xlat
add
jp
ljmp
and
push
sub
cmpsb
stc
enter
adcb
or
add
push
dec
jp
leave
fisttpl
adc
idivl
jae
inc
sub
lret
aas
scas
jb
push
pop
insl
cmpb
pop
gs
pop
popa
outsb
orl
lds
das
jecxz
in
jl
popf
aas
xchg
mov
mov
cmp
jg
repz
dec
jg
cld
and
clc
sbbb
mov
mov
mov
jb
dec
mov
cwtl
jnp
dec
pop
sub
mov
mov
jno
pop
pushf
sti
repnz
jno
add
jg
add
cltd
sbb
and
rcr
push
jb
jnp
sahf
stos
shrb
rcll
or
xor
nop
pop
mov
arpl
xchg
pop
inc
ret
jmp
mov
add
jg
cwtl
or
jnp
or
cmp
bnd
clc
pop
adc
jb
mov
into
in
fsubl
and
mov
mov
cmp
inc
mov
addr16
scas
outsl
dec
sbb
inc
or
cli
cli
mov
sarl
mov
sbb
add
jp
sub
push
mov
jp
subb
es
test
xchg
add
shl
or
jge
cmp
test
sub
and
sub
sbb
ret
inc
and
aam
or
xchg
adc
dec
xchg
xchg
mov
jg
jl
mov
jnp,pn
pusha
pop
xor
sbb
jno
mov
sbb
pop
mov
test
mov
movsl
jl
sub
push
js
cld
jmp
mov
dec
or
fsub
pop
cli
mov
cmpsb
popl
xchg
sub
ret
popa
sub
test
outsl
jg
lcall
push
mov
push
test
jo
movsb
pusha
mov
pop
mov
xchg
or
xor
rcrl
add
faddl
or
int
and
je
cld
in
cmp
lret
stos
shlb
push
and
fidivrl
jp
insb
cmp
movsb
lcall
loopne
sti
pop
sbb
adc
dec
pop
add
cmp
lahf
pop
scas
dec
sbb
cli
sti
pushf
mov
mov
mov
adc
popf
jo
dec
push
test
mov
shr
vfmsub231sd
nop
or
je
test
popf
sti
lcall
pop
adc
sbb
call
fsts
aaa
out
cmpsl
mov
fbld
jle
lea
bndstx
sub
lret
sbb
xchg
dec
out
mov
push
movsl
add
imul
mov
mov
mov
push
and
mov
sub
xor
inc
pop
into
cmp
orl
imul
xchg
shlb
std
mov
cmp
sub
cli
fwait
sbb
dec
add
jge
or
js
lods
jg
les
jo
cmp
loop
or
jbe
mov
in
sbb
jp
cmp
dec
mov
pop
fimuls
pusha
xor
pop
shll
pop
sbb
ror
lahf
test
push
fcmovnb
scas
sbb
cmpsb
xchg
in
mov
add
outsb
clc
sub
mov
or
and
dec
out
sbb
mov
cmpsb
cli
ja
xchg
adc
push
pop
xchg
sti
cs
dec
xchg
mov
sarb
addb
shll
sbb
aas
cmpsl
mov
sub
pop
and
out
cwtl
xchg
mov
ss
cwtl
dec
sub
jg
push
mov
arpl
mov
cmp
push
test
push
call
mov
sub
jmp
push
xchg
loopne
jnp
adc
add
insb
sub
adc
add
mov
std
jge
xlat
idiv
icebp
daa
xchg
arpl
icebp
push
cmp
jmp
mov
cmp
mov
fdivrl
xchg
sbb
enter
jns
nop
mov
sbb
push
inc
cmp
mov
mov
pop
addr16
and
js
pop
ret
hlt
enter
fldt
mov
roll
leave
scas
lods
int3
push
sub
aas
adc
pop
or
pop
ss
sbb
scas
jg
movsl
pop
je
cwtl
pop
psubd
std
jae
xchg
dec
stos
mov
cmp
stos
jg
jbe
loopne
mov
imul
gs
pusha
jne
jb
shr
jo
fcomps
aas
dec
mov
fwait
icebp
cwtl
test
enter
add
out
or
movsl
clc
fcoms
cli
pop
mov
pushf
in
xchg
sbbl
ret
gs
movsb
mov
pop
es
lcall
push
add
pop
ja
pop
push
mov
sbb
dec
fwait
push
dec
adc
out
push
jns
subb
aas
jbe
ret
fdivrl
dec
lock
pop
or
leave
mov
cld
mov
stos
inc
mov
das
sub
lock
sti
or
and
cltd
pusha
cmp
push
jae
iret
lods
pushl
inc
in
jmp
pushf
test
or
add
mov
adc
popf
pop
xchg
shl
in
dec
mov
mov
fs
mov
imul
xchg
jns
dec
lea
in
test
inc
lret
es
cmpl
mov
or
popf
insl
mov
nop
mov
mov
fsubs
cltd
out
ljmp
scas
mov
mov
xor
add
cmc
sbb
test
mov
cmp
xor
outsb
push
dec
daa
inc
pop
xchg
xor
stos
test
data16
sbb
mov
movsb
inc
sub
pushf
cli
push
out
jbe
add
lahf
movq
inc
mov
jle
sub
out
int
adc
cli
adc
scas
iret
cltd
aad
push
out
fcomp
fs
std
add
popa
addr16
lods
call
push
sub
cmp
xor
xlat
pusha
mov
je
dec
inc
stc
jle
mov
out
js
lret
jg
mov
mov
add
push
fstpl
push
addl
rcrb
fcoml
insb
adc
loop
xor
or
jg
jmp
xor
mov
sbb
aas
cli
inc
shll
add
aaa
data16
inc
leave
push
cmpsb
mov
dec
sbb
popa
mov
or
stos
adcl
stos
out
cwtl
or
cmp
cli
dec
xchg
mov
cmp
cmp
sub
push
std
mov
cwtl
gs
sub
push
mov
sbb
in
ds
ss
sub
mov
pusha
dec
aaa
sbbb
jg
rcr
and
push
fdivrl
mov
dec
ret
ja
jns
insb
push
sub
out
pushf
cli
jae
sar
jle
scas
aaa
lock
int
lahf
sbb
cmp
mov
sahf
cwtl
or
push
mov
into
cmp
ja
xchg
out
fdivl
cwtl
lcall
jg
nop
cmpsl
arpl
xchg
xor
daa
ja
fwait
inc
cli
sbb
repz
mov
stos
jo
mov
pusha
daa
xor
mov
lret
cmp
in
xchg
js
jbe
mov
sbb
enter
lods
dec
ljmp
loopne
out
cmpsl
sbbl
or
jmp
icebp
cmp
roll
pop
pushf
cli
test
mov
je
push
out
pop
dec
mov
test
lods
mov
stos
ja
test
mov
mov
xor
out
cmpb
sbb
stc
pop
leave
lahf
in
xchg
sarl
in
imul
loop
cwtl
jg
movsb
sbb
fcomps
fisttpll
mov
daa
cmp
test
pop
xor
push
push
sahf
add
lahf
sub
repnz
inc
sbbb
cmp
cmpsl
pusha
inc
jp
mov
nop
xor
mov
lahf
xor
mov
sbb
cwtl
in
ret
xchg
imul
aad
insl
cmp
inc
mov
adc
adc
dec
int
jl
ret
cmp
sbb
movsb
aas
cmp
mov
jmp
dec
gs
adc
adc
inc
sbbl
or
mov
cld
sbb
adc
sub
test
sub
sbb
stc
mov
test
push
cmpb
xor
push
decb
lret
hlt
sti
xchg
cmpsb
jg
push
cwtl
xchg
fwait
jmp
sub
jbe
mov
mov
test
sbb
mov
mov
mov
or
jmp
pushl
mov
testl
xor
outsl
mov
cmp
adc
mov
bound
icebp
loope
fcmovu
aas
push
ffreep
pop
xchg
lret
je
mov
or
xchg
sahf
jecxz
lret
inc
sahf
aas
adc
mov
cmp
mov
stc
stc
or
lea
out
test
push
sbb
mov
mov
push
out
pop
cmp
into
fucomp
pop
subl
loop
pop
inc
sub
mov
stc
enter
jb
insl
addb
mov
jp
dec
and
sbb
xchg
push
sub
daa
shl
sti
scas
and
ret
enter
mov
mov
xor
sar
icebp
cld
shl
cwtl
pop
cwtl
subb
xor
xchg
enter
lods
xchg
call
and
jns
sbb
xlat
cli
mov
cwtl
add
fdivrs
mov
cmp
mov
cmp
pop
fs
adc
push
out
jnp
scas
lcall
aam
push
jbe
test
cmp
push
jnp
clc
pop
movsb
mov
adc
arpl
cmpb
sbb
mov
pop
testb
icebp
xor
mov
adc
sbb
dec
cwtl
sub
xchg
dec
pusha
test
lea
or
rorl
mov
sbbb
fisubl
or
jp
adc
or
cmp
mov
sbb
test
jmp
jg
mov
jg
fadds
mov
das
or
aas
cmpsb
or
mov
mov
inc
mov
xchg
push
mov
imul
scas
mov
lods
aas
lret
std
test
jno,pt
cmp
xchg
dec
ficomps
in
pop
pop
sub
or
mov
popa
mov
stos
sub
frstor
pop
mov
mov
out
popf
mov
push
push
pop
fldenv
cmp
imul
fs
adc
mov
mov
sarl
loopne
push
popf
cmp
jle
dec
insl
cmp
into
scas
ret
sbb
pop
pop
sahf
or
dec
dec
movsl
das
fwait
sbb
cmc
pop
push
pushf
incl
and
cmpsb
mov
mov
cs
es
call
cmp
mov
mov
cmp
adc
fisubrs
ficompl
sti
test
insb
mov
add
loope
jnp
jecxz
fcompl
pop
cmp
jae
push
push
insl
insb
lock
cltd
cwtl
lret
divl
fdivp
pop
stos
sbb
lods
sbb
and
mov
sub
loopne
cmp
shll
int3
test
inc
aad
jb
jbe
pop
das
and
mov
cmpsb
ficompl
pop
mov
out
test
das
pop
loop
adc
push
lret
fidivs
sti
scas
popa
inc
xor
hlt
lods
daa
aam
fisttps
in
aaa
clc
rdtsc
icebp
inc
cwtl
aas
or
lahf
cmpsl
jecxz
inc
sbb
inc
in
fidivl
sbbb
jns
jl
sti
sub
mov
sbb
mov
iret
mov
loope
mov
xor
push
sbb
aaa
xchg
lods
cld
or
push
push
repz
enter
ret
testb
dec
loope
iret
mov
mov
sub
and
push
sub
push
xor
fcomps
inc
sbb
jb
lret
jmp
into
mov
and
inc
mov
inc
sahf
cmpl
pop
xlat
sbb
adc
mov
leave
sub
icebp
fsub
push
pusha
xchg
in
add
jb
insb
movsb
mov
fsub
adc
sbb
scas
std
in
movsl
cmpsl
mov
add
mov
cmp
push
adc
cmp
daa
decl
pushfw
sti
mov
aas
mov
fsts
in
cmp
mov
sbb
pop
into
cmc
jl
sti
ljmp
ljmp
xchg
js
adc
dec
cmp
pop
jmp
inc
cmp
add
test
js
inc
push
das
hlt
cmp
pop
mov
xor
test
int3
inc
or
pop
sbb
mov
jnp
test
sub
mov
stc
sbb
lcall
or
shl
clc
lahf
incl
mov
add
test
sahf
jg
leave
cmp
mov
and
cmp
out
cmp
xchg
mov
mov
and
ds
jo
daa
ja
jmp
inc
pushf
shll
mov
arpl
jle
dec
inc
imul
jge
lret
mov
pop
mov
add
out
xor
fsubrs
incb
mov
pop
lcall
mov
add
lods
dec
pushf
mov
adc
scas
rcll
xchg
cwtl
lahf
test
pop
or
cmp
dec
sub
mov
add
jns
sti
push
ret
orb
mov
cmp
cmp
iret
cli
in
ja
incl
cwtl
je
adc
dec
lret
adc
mov
mov
pop
pop
cmp
mov
adc
mov
scas
xchg
es
dec
lods
mov
or
outsl
adc
cmp
jb
inc
pop
inc
int3
sub
pop
pop
stc
dec
mov
and
outsb
jmp
ficompl
aaa
es
mov
cmp
mov
pusha
mov
test
insb
int
push
rorl
nop
insl
int
pusha
incl
aam
daa
sub
addr16
dec
sub
sbb
xchg
sub
push
xor
pushf
jg
jmp
cmc
pop
jnp
xchg
push
jle
mov
mov
cmc
sbb
push
sbb
lock
sbb
push
lcall
pop
or
xor
cmp
sbb
outsb
mov
jge
inc
cmp
lds
movsb
rolb
imul
jmp
mov
jmp
pusha
jp
mov
push
xor
insl
cwtl
fdiv
and
push
test
pop
mov
std
jg
lcall
jp
sarl
int
daa
cli
div
mov
lods
xor
inc
mov
fnsave
loop
mov
xor
mov
out
push
mov
xchg
mov
and
lret
outsl
fs
pop
mov
js
cmp
and
aas
in
mov
mov
je
sbb
inc
rcrl
xchg
fdivrl
pop
in
adc
stc
aaa
mov
fdivrp
cmpb
mov
inc
dec
aaa
fldl
add
xchg
mov
adc
mov
xor
xlat
scas
sbb
call
jno
repnz
lods
adc
mov
gs
test
mov
cmp
outsb
ljmp
in
cli
loopne
arpl
cmp
in
sbb
ret
lcall
xchg
mov
in
imul
and
inc
push
or
cmp
loop
les
and
jns
mov
cmp
sbb
fistl
popf
gs
jge
jg
mov
dec
dec
or
and
outsb
mov
pushf
dec
sarl
jno
add
jl
js
dec
cmp
sbb
insb
ret
das
in
mov
mov
lahf
lock
mov
and
insl
xchg
cltd
pop
repz
pushf
testl
movb
push
mov
cmpsl
jne
stos
ljmp
mov
mov
mov
stos
sbb
lea
cmpsl
mov
popf
pop
cmp
sub
test
test
movsl
imul
push
ret
scas
mov
mov
movsl
stos
dec
xlat
enter
and
lret
pop
xchg
cmp
inc
xchg
cmp
push
imul
popa
inc
mov
mov
cmp
enter
sti
loope
testb
jle
fsub
mov
mov
mov
or
sub
in
xchg
adc
pop
pop
xor
cmc
mov
mov
and
popf
lcall
adc
cld
xor
fmull
cmp
and
lcall
push
subl
mov
sti
int
rorl
sti
cmp
test
adc
xchg
push
dec
jbe
push
push
mov
shlb
cli
push
pop
ljmp
call
sbb
jbe
enter
pop
ss
ficomps
push
sarb
and
pop
mov
sbb
out
movsl
aaa
lahf
notl
push
mov
mov
mov
mulb
ret
pop
mov
lcall
push
sbb
fsubrs
jle
sahf
dec
mov
in
cwtl
mov
outsl
adc
hlt
dec
and
ficoms
lods
jnp
sbb
ficompl
pop
mov
jp
stos
cmp
iret
sbb
test
rorl
pop
sbb
ds
jp
push
jmp
fcoms
mov
insl
jns
mov
cwtl
xor
hlt
fsubr
sbb
cmp
scas
cwtl
fnstcw
jmp
and
insb
or
aam
push
enter
sbb
ss
and
push
loop
in
jecxz
fs
into
pop
stos
test
lret
rcrb
xchg
sti
sub
movsl
cmp
mov
sub
jno
mov
dec
cmp
adc
imul
or
and
xchg
dec
cmp
jno
popf
insb
push
orb
add
shl
fnstenv
push
xchg
fstpl
mov
pushf
stos
xor
repnz
xchg
fstpt
xor
imul
cld
cwtl
aas
jp
jg
and
outsb
mov
lahf
xchg
add
cmp
sub
adc
xchg
das
daa
std
mov
pop
pop
xchg
pop
cmp
lret
mov
cmpsl
cmc
repnz
sub
fistps
inc
pop
cltd
imul
xor
jg
stos
fisubs
pop
ds
add
ljmp
xchg
sti
push
pop
cmp
sub
pop
sbb
add
int
fcompl
cwtl
pop
pop
fidivs
sub
xor
pop
lods
sbb
mov
popa
xor
popf
pushf
ljmp
notl
scas
xchg
repnz
pushf
cld
stc
xchg
dec
rclb
out
mov
mov
cld
imul
adc
push
pusha
ds
pusha
jge
cmpsb
xchg
jge
or
fcoms
push
jl
xchg
std
mov
adc
notl
adc
cmp
sbb
mov
sub
lret
mov
mov
mov
mov
mov
fcompl
sbb
notl
clc
repz
sahf
mov
mov
sbb
pop
pop
push
mov
push
mov
mov
lock
test
popf
scas
xor
xchg
mov
mov
clc
lahf
loopne
or
pop
int3
test
cmp
adc
inc
imul
imul
fsubr
movsl
jecxz
pop
mov
sub
cli
mov
gs
js
sti
cmp
xor
cs
jmp
scas
adc
jnp
stc
jmp
popf
stos
mov
adc
iret
jg
fisubl
jne
rclb
imul
sbb
out
les
fsub
pop
sbb
push
lcall
jg
pop
cmpsl
sbb
xchg
pop
call
xor
addl
lock
sub
sbb
xor
mov
out
adc
ja
mov
in
xchg
cld
mov
pusha
and
mov
jmp
mov
mov
push
movsl
fsubp
push
mov
adc
hlt
mov
dec
mov
loopne
js
xchg
fucomip
popf
dec
pusha
pop
ljmp
pusha
ljmp
loope
pop
and
push
cwtl
xor
sub
mov
sub
dec
sbb
xchg
xchg
pop
xchg
fdivrs
dec
ret
add
and
jg
push
push
fsubl
xchg
mov
cmp
je
test
pop
pop
imul
fucomip
mov
push
jle
mov
push
lds
mov
mov
ljmp
push
lock
cmp
aam
lcall
aaa
loopne
fwait
jg
xchg
cmpsb
lcall
lea
sub
test
popf
call
pusha
xchg
sub
lods
mov
push
adc
xchg
sbb
sub
push
adc
fs
aas
mov
and
adc
mov
mov
scas
scas
xchg
dec
jae
fwait
jo
ljmp
inc
icebp
movsl
xchg
mov
push
lcall
mov
jecxz
fdiv
jnp
jns
pop
int
test
in
incl
lods
cmp
mov
jecxz
push
mov
cli
add
mov
xchg
mov
cmc
scas
jecxz
or
retw
push
mov
xor
aam
ljmp
notrack
sbb
mov
add
cmpsl
les
add
repnz
insb
jp
pop
repz
mov
decl
cwtl
stos
aaa
jle
jbe
ss
daa
and
inc
pop
stc
fwait
xchg
nop
or
mov
ljmp
scas
adc
inc
cli
fcomps
lcall
jle
mov
lahf
jbe
mov
inc
and
adc
scas
popf
or
loop
and
sbb
ss
mov
xchg
dec
clc
mov
and
xchg
cmp
or
pop
enter
outsb
das
mov
pop
sbb
nop
pop
sbb
inc
das
mov
enter
cmp
sbb
rol
sub
mov
clc
mov
pop
cli
stc
push
fsub
sbb
add
and
adc
repnz
sbb
loopne
pop
mov
adc
adc
cltd
movsb
lods
adc
pop
mov
sub
pop
cmp
mov
adc
test
sbb
ss
sub
inc
jo
sahf
fwait
shlb
out
ds
dec
sbb
lahf
jg
mov
pop
movsb
sahf
sbb
jnp
cmp
std
cltd
fs
sti
sahf
subb
cmpsl
lcall
lods
push
test
mov
int3
sub
mov
leave
gs
xchg
mov
cwtl
cltd
test
addr16
jle
test
push
int3
cmp
sbb
nop
out
mov
in
andb
adc
rorb
inc
call
dec
pop
pushf
push
dec
in
test
cmp
xchg
sti
fucomi
xlat
mov
adc
inc
push
inc
xchg
fsubs
add
aaa
mov
aas
sub
out
ss
mov
adc
flds
fs
sub
adc
ficoml
mov
pop
jnp
sti
loopne
popa
fidivrl
in
push
pop
fst
in
iret
lea
inc
and
mov
sbb
insl
paddb
cmp
xchg
jns
push
xor
mov
adc
test
std
in
cmp
xlat
adc
negb
cld
mov
lcall
mov
cltd
sbb
imul
jae
loopne
sahf
mov
mov
mov
xor
nop
mov
mov
lock
xor
cld
adc
push
ret
push
sahf
mov
jp
sbb
sub
fsincos
rolb
sarb
cmpsl
push
cli
sar
scas
push
icebp
or
pop
out
sahf
pop
jb
adc
push
push
cmpsl
mov
mov
sbb
sbb
jmp
sbb
sub
push
or
xor
hlt
sbb
xor
ljmp
sub
sbb
cli
cmp
mov
xchg
mov
jns,pt
scas
addr16
add
aas
sub
mov
sbb
in
cli
loop
push
cmp
xchg
cld
jb
addb
movsl
inc
adc
testl
push
cwtl
lock
adc
ret
dec
lret
xchg
lea
fsubrs
adc
int3
imul
lret
cwtl
mov
call
je
shll
cwtl
std
push
mov
leave
mov
cld
mov
add
push
mov
cmp
fcoml
rcll
outsb
imul
add
cmp
lock
sbb
subb
or
fucom
cmp
daa
fildl
and
and
cmc
cwtl
mov
mov
cmc
faddl
test
push
sar
push
pushf
cmc
push
fsub
dec
int
xchg
pusha
xchg
idivb
fcoms
scas
inc
popl
sti
hlt
sbb
ret
add
inc
mov
mov
outsl
lods
jne
mov
test
inc
repnz
mov
fadds
fnsave
imul
xor
test
mov
sbb
dec
dec
out
fs
lret
fmul
jg
mov
test
fdivrp
cltd
mov
cmc
out
inc
jg
sbb
push
push
push
ret
dec
jo
mov
in
adc
xchg
adc
jae
movsl
sbb
inc
mov
mov
lahf
sbb
fdivs
ss
call
add
test
mov
cmp
xor
inc
xlat
pop
iret
mov
fld
add
mov
mov
sub
cmp
push
dec
push
aas
sbb
lcall
xlat
shl
leave
jne
js
repz
jl
je
mov
pop
inc
sbb
ret
mov
push
andb
or
jb
out
pop
lea
popf
nop
stc
push
ja
xchg
hlt
dec
mov
fcoml
ss
popf
jnp
jl
bound
fstps
xor
jb
mov
cli
lret
xlat
ds
dec
sub
lock
fwait
inc
mov
sbb
sub
popf
fisttpll
aad
or
dec
aaa
push
and
mov
icebp
and
test
fiadds
mov
fwait
mul
test
xchg
pop
dec
push
mov
or
test
push
sub
xchg
cmp
mov
and
cs
mov
repz
bound
cmc
inc
in
push
mov
pop
std
test
adc
pop
cmp
xchg
fmull
iret
mov
mov
mov
xchg
push
mov
jnp
cmp
jecxz
mov
int3
adc
test
cmp
pop
enter
sub
imul
sbb
inc
push
orl
mov
cmp
ret
fistpll
mov
subl
aaa
push
mov
mov
xor
fdivr
pop
adc
adc
pop
mov
xchg
sti
outsl
xor
mov
sub
daa
andl
inc
cli
jle
sahf
cmp
js
pop
dec
pop
ret
fisttpl
mov
cli
or
fstpl
dec
pop
int3
in
fnstcw
mov
add
ss
sbb
les
cmp
shrb
sbb
repz
jnp
lahf
cmc
das
mov
ds
sbb
lea
mov
mov
rcrb
push
ja
mov
xor
cltd
add
into
mov
leave
sbb
lcall
cld
lret
pause
sti
data16
repnz
push
xchg
roll
xlat
sarl
mov
mov
pop
or
mov
in
and
mov
out
mov
cmp
mov
je
push
outsb
arpl
fmuls
push
fistps
xchg
sbbb
aam
mov
fwait
pop
stc
xchg
cli
push
xchg
cwtl
push
ja
lods
xlat
cmpsb
mov
sbb
orb
xchg
sti
and
dec
add
fmul
inc
out
fsubrl
mov
or
ljmp
or
mov
rolb
aas
shlb
mov
ret
imul
aam
jmp
sbb
pushf
adc
sub
cli
pop
jle
je
mov
aad
mov
int
mov
or
cli
cwtl
xor
xchg
push
fdivrl
mov
rclb
pop
mov
int3
inc
cmp
mov
jl
adc
jp
push
out
mov
jg
les
ds
cmp
fcomp
pushf
pushl
mov
adc
pop
and
ds
adc
fcomps
mov
mov
pop
adc
fstpt
push
cwtl
xchg
sub
xlat
cld
mov
cmpsb
adc
je
jg
cmp
int3
sbb
pushf
cmp
stos
xchg
and
sarb
cwtl
xor
mov
inc
stos
div
add
mov
dec
pop
fdivp
int3
pop
add
int3
inc
and
sti
outsb
dec
or
jbe
xchg
jo
loope
loopne
add
push
pushf
imul
cmp
add
idivb
cmp
subb
es
jbe
fwait
mov
sbb
mov
push
pop
mov
xchg
xor
jo
xchg
cli
fadds
popf
stos
fisttpll
sbb
cmp
jne
jle
fdivp
ljmp
mov
adc
les
mov
repnz
pop
sub
cmpsb
lcall
mov
pop
mov
jne
aas
repz
stos
lcall
aas
fs
dec
ficoms
pop
sbb
orb
pushf
cmp
lret
fdivs
repnz
cmp
cmp
test
sub
push
pushf
inc
aas
adc
mov
xlat
jns
pushf
xor
outsb
out
insb
mov
fdivr
push
push
mov
adc
jle
dec
mov
cmp
cmp
mov
icebp
enter
dec
xchg
fucomip
sub
pop
loope
cmp
inc
lahf
lods
pop
pop
push
aaa
push
notl
sbbl
je
and
dec
fcoml
aas
add
push
xorb
dec
sbb
push
mov
pop
divb
fwait
mov
or
cmp
or
fimuls
loop
mov
xlat
push
fdivl
xor
lods
popf
xchg
stc
push
rcll
push
cmpsl
out
int
lahf
add
nop
dec
fcmove
jle
xor
push
pop
and
mov
ret
sbb
fs
cli
test
sub
cmpsb
jnp
inc
adc
cmpsl
xchg
inc
mov
in
shlb
sub
push
inc
mov
sub
negl
stos
pusha
imul
call
xchg
pop
cmp
lfs
scas
daa
sbb
enter
cltd
pop
mov
sti
add
repnz
jbe
in
sub
add
mov
stos
out
cmpsb
andl
push
jb
mov
addb
test
out
and
cmpb
jnp
aad
outsb
cmp
mov
sahf
xor
test
sub
xlat
loop
xor
inc
lahf
jae
push
pushf
pop
hlt
fnstsw
jne
jno
jle
arpl
pop
dec
adc
lea
mov
cmp
mov
sbb
mov
xchg
pushf
ret
lea
mov
sbb
cmp
push
cwtl
fwait
mov
es
adc
pop
cmp
mov
in
pop
xchg
add
stc
dec
test
pushf
jl
out
sbb
cmp
sti
cmp
test
cmpsl
pop
lods
or
pop
or
fdivs
push
push
cmp
mov
pop
mov
xor
mov
fwait
mov
mov
sbb
mov
cwtl
pop
bound
flds
gs
and
imul
pushf
mov
pop
test
and
mov
push
mov
enter
arpl
mov
push
jle
jg
pusha
pop
out
insb
mov
adc
int3
sbb
sbb
inc
jle
repnz
lods
mov
stos
test
dec
test
adcl
loope
xchg
outsb
pop
out
pop
jbe
test
adc
mov
push
mov
mov
dec
mov
add
out
sarb
xor
xor
iret
fidivrs
shl
adc
std
pushf
inc
mov
or
sbb
cld
icebp
jl
sbb
arpl
shlb
loop
and
pop
fwait
pop
add
jecxz
and
jbe
mov
std
xchg
pop
mov
sub
scas
aas
testb
in
rorl
adc
es
ljmp
lahf
hlt
faddp
cmpsl
sub
jnp
fwait
cmpb
cmp
cmpsb
insb
scas
mov
mov
jle
mov
loope
sahf
fcoml
mov
ficompl
sbb
cli
scas
pop
lds
hlt
sbb
push
int3
addb
out
sbb
cmpsb
fsub
scas
pop
dec
popa
inc
stc
or
int
cs
daa
jmp
push
incb
xchg
inc
inc
insl
imul
mov
jb
push
jb
inc
mov
lcall
sbb
fwait
cmp
sbb
jg
iret
lods
sub
jl
fistps
cmpb
iret
sbbb
cs
push
and
sbb
mov
mov
mov
mov
lds
mov
test
fstl
stc
mov
xchg
pop
in
int3
jg
xor
adc
xor
dec
ficoms
jl
jp
out
fadds
xor
pop
pushf
inc
sub
test
int
sahf
sbb
mov
mov
mov
xchg
ret
sbbb
mov
push
int3
adc
rolb
jo
cmpl
imul
adcb
inc
in
mov
cld
in
mov
pop
ds
sarl
int
insb
jle
add
mov
adc
data16
mov
es
clc
xlat
xor
scas
inc
xor
mov
sbb
lret
cmp
inc
xchg
testl
jne
adc
mov
adc
fisttpl
mov
lret
pop
add
pop
out
pop
stos
mov
arpl
lahf
lcall
loope
adc
sub
cmpsb
mov
aam
add
adc
pop
cltd
lea
rolb
js
push
aad
in
xchg
fdivr
cli
sbb
mov
cmp
es
imul
add
fisubl
cmc
jp
lret
ds
push
or
push
sbb
add
xor
push
xchg
xchg
imul
xlat
jo
mov
lcall
ljmp
jne
mov
in
loop
mov
fsubl
jecxz
jl
cmp
mov
cld
ljmp
test
sbb
aaa
in
std
jne
mov
cmpsl
mov
hlt
adc
push
mov
dec
sti
sub
add
addr16
cmc
adc
aas
mov
or
aaa
sub
adc
les
cmp
stos
fnsave
xchg
mov
rolb
xchg
inc
lahf
sbb
xchg
das
addr16
and
fsub
aas
dec
inc
ret
cli
cltd
cli
nop
mov
mov
sbb
xlat
iret
jb
call
xchg
faddl
inc
je
fs
dec
mov
cmp
sbb
ds
cli
xor
aas
ja
loop
mov
cs
xor
negl
popf
mov
push
dec
rolb
xor
pop
sbb
add
mov
mov
adc
sbb
fwait
push
push
out
xchg
push
mov
or
fcmovb
mov
mov
lods
outsb
shll
fwait
pop
clc
fwait
cmp
sti
xor
repz
sbb
mov
adc
cmpsb
jnp
dec
xchg
sbb
inc
or
pushf
loopne
ret
adc
out
pop
cld
and
hlt
mov
adc
mov
in
jb
insl
mov
fwait
jno
cmp
add
adc
fadds
fmull
xchg
fmull
mov
mov
outsb
cmpsb
out
insb
jge
test
mov
xchg
mov
jp
fsub
in
cmp
xchg
mov
pop
pushl
mov
inc
xchg
stc
dec
pop
or
popf
jle
popf
mov
xchg
xor
xchg
stos
lods
loopne
loopne
lea
push
movb
out
adc
je
aas
dec
into
jl
insb
sbb
xlat
mov
sub
orb
push
inc
add
faddl
out
mov
cmpsb
sbb
push
loop
enter
mov
push
das
subl
sbb
rol
loope
int3
pop
pop
cmp
test
pushf
xchg
push
popf
les
js
inc
mov
xchg
mov
xchg
sbb
mov
adc
jnp
adc
ret
lods
notl
test
fidivl
xchg
mov
jg
dec
pop
fsubr
inc
and
ja
or
dec
aam
test
mov
fstpt
sbb
js
popf
sbb
push
fcomps
data16
cld
xor
mov
rol
pop
add
xchg
leave
pushf
xor
fbstp
in
fldenv
in
scas
jle
jnp
push
subl
arpl
mov
dec
leave
test
sub
push
pushf
pop
test
mov
and
in
jecxz
mov
pop
mov
and
popf
pop
in
push
pop
mov
mov
sbbb
fistpll
rorb
cmp
jge
data16
inc
mov
xlat
xchg
pop
push
mov
mov
lods
push
adc
jg
mov
sbbl
fcoml
cmp
dec
call
rcrb
insl
adc
push
jne
push
scas
sbbb
pusha
data16
push
sub
push
lds
data16
mov
mov
inc
subl
push
mov
movsl
dec
lret
mov
fwait
pop
xchg
mov
lock
andl
cmc
pop
test
aam
xchg
popa
push
cwtl
or
cmp
cwtl
add
push
outsb
int
setb
popf
inc
jae
call
push
lds
jo
adc
mov
push
sbb
rcrb
and
call
out
pop
nop
push
int
repnz
repz
pop
xor
pushf
adc
xor
mov
ljmp
out
pop
cmpl
pusha
cmp
pusha
inc
sbb
test
add
in
mov
in
pop
fstpt
fwait
int3
nop
fbstp
jle
inc
mov
pop
mov
xor
mov
mov
mov
pop
push
negw
mov
cli
jnp
pusha
pop
push
stos
dec
pop
mov
mov
fwait
insl
cwtl
xchg
scas
push
lds
and
push
sti
adc
test
sbb
cmp
lret
popa
mov
mov
xchg
xchg
stos
jg
fs
dec
lock
mov
rcrl
aad
out
mov
aad
mov
lods
outsb
pop
stc
aaa
ret
andl
fisttps
negb
xchg
cmp
aas
and
bound
pop
sbb
pop
sbb
cltd
lret
arpl
fldl
cmp
cmpsb
shrb
js
cmpb
jns
pop
sti
rclb
nop
pop
int3
xor
repz
adc
inc
mov
mov
leave
inc
cmp
sub
mov
shl
clc
cwtl
test
scas
sub
pop
pushf
sbb
cmpsl
xchg
pushf
jb
cwtl
enter
out
loopne
scas
mov
stc
jle
movsb
xor
lock
xorb
les
sbb
xchg
sub
mov
pop
lock
or
xchg
pop
mov
cwtl
mov
and
sbb
fsubp
rorb
hlt
cwtl
loopne
inc
sbbl
mov
in
int
dec
mov
xchg
xor
rcrb
fwait
dec
cwtl
sbb
scas
repz
cmp
testb
mov
loop
cli
sub
std
lcall
jne
inc
xchg
cmpsb
in
xorl
cwtl
push
dec
outsb
jle
mov
xor
negb
loopne
jp
loope
pop
dec
jne
jnp
cmc
pushf
movsl
loopne
hlt
or
fadds
pop
mov
push
repnz
cmp
arpl
pop
popa
jle
outsl
lock
mov
fcomps
mov
into
push
cli
jmp
jl
les
mov
outsl
sub
cmp
sub
fdivrl
test
pop
inc
int3
filds
pop
and
je
mov
xor
arpl
jg
mov
cmp
aas
ss
push
stc
in
mov
xor
pop
sbb
xchg
mov
pop
jae
gs
pusha
xchg
add
mov
add
fcomip
lahf
jmp
fwait
mov
lods
outsl
cwtl
out
pushf
xchg
lahf
aas
xor
pop
lea
xchg
cwtl
rorb
pushf
pop
inc
adc
sarl
lea
sti
lahf
jmp
cli
mov
pop
pop
nop
xchg
repz
sti
lock
dec
push
je
lock
incl
and
jp
sbb
aaa
jae
dec
pop
cmpsl
cmp
adc
insb
lods
mov
adc
scas
cmp
mov
cltd
inc
les
mov
mov
out
adc
inc
xor
pop
sbb
push
mov
mov
pop
sbb
dec
mov
lret
inc
stc
jl
sarb
xchg
stc
inc
adc
pop
aam
pop
sbb
lret
ds
ljmp
xchg
sti
xor
mov
push
jle
in
mov
ret
insb
inc
imul
and
mov
das
mov
rcl
adc
loopne
jg
mov
fcoms
sub
adc
fisttpl
inc
add
inc
in
adc
cwtl
xor
mov
ret
cmpsl
jg
insb
addr16
mov
or
mov
or
pop
dec
dec
cli
push
lods
xlat
cmp
les
add
cwtl
lods
xorps
sbb
sbb
inc
aas
fisttps
and
jbe
mov
dec
push
aad
iret
pop
arpl
dec
add
stos
outsb
je
dec
push
pop
mov
mov
xchg
pop
mov
adc
filds
mov
popa
pop
xchg
sbb
xor
inc
fidivs
imul
lods
cwtl
xchg
fadds
sub
inc
cld
sarl
jle
inc
mov
adcl
push
mov
fsubrl
and
jge
cmpsb
add
icebp
call
mov
sbb
push
xchg
fwait
out
sbb
mov
lret
mov
pushf
mov
pop
mov
lods
sti
aaa
mov
cli
push
scas
sub
jmp
movl
mov
cmp
xchg
pop
out
enter
inc
addr16
movsl
enter
inc
push
adc
pop
cmp
lock
and
decl
test
xor
into
fldz
or
ss
js
dec
in
repnz
fcompl
pop
sbb
call
inc
call
jns
add
cmp
inc
xchg
mov
sbb
inc
jbe
push
sub
je
lret
inc
test
sbb
test
stos
sti
jl
and
in
push
mov
dec
mov
pop
sub
add
cld
int3
fsubrs
je
mov
rclb
out
scas
lcall
jo
jl
xrelease
add
ljmp
ja
ss
mov
bound
push
or
out
push
repnz
mov
test
rol
movsb
int3
mov
sarb
pop
pop
out
dec
lret
cltd
and
loope
jae
fidivrl
xor
daa
cmc
cmp
pop
mov
xor
int
add
adc
xchg
jge
fimull
test
adc
pushf
lret
stos
testl
sbb
push
and
into
cmc
repnz
jle
scas
adc
adc
xor
mov
mov
add
jmp
in
js
sbb
roll
cmp
stos
enter
mov
pop
iret
xchg
rcr
sahf
iret
loopne
sbb
inc
sub
push
out
data16
push
mov
jmp
mov
add
mov
mov
push
add
dec
icebp
jp
cmpl
fmull
mov
push
ss
pop
loope
mov
or
or
xchg
pop
mov
das
repz
xchg
add
outsl
xor
aam
sar
dec
fs
lahf
xchg
push
jnp
cmp
sub
xchg
sbb
adc
outsb
lds
aas
in
sbb
lds
jnp
mov
lahf
sbbl
ss
loopne
stos
sti
sahf
cwtl
lods
fwait
xchg
fdiv
arpl
into
stos
adc
cltd
add
adc
push
sarl
ds
pop
inc
jmp
cli
mov
pop
mov
mul
cmp
pop
mov
xlat
or
sub
mov
pop
jg
mov
loope
push
stos
push
fsub
xchg
cs
pop
mov
mov
fstpt
cmp
pop
and
clc
outsb
lock
repz
push
lds
fnstcw
lcall
call
xchg
jnp
push
mov
push
pop
or
xchg
inc
call
sbb
adc
pop
imul
cli
ret
ret
sbb
mov
mov
sbb
stos
mov
sbb
or
mov
jp
jb
push
mov
mov
xor
pushf
ja
std
xor
mov
cmp
pop
icebp
test
adc
cmp
int3
inc
dec
sti
cmp
pop
dec
pushf
xor
rorl
mov
jge
scas
and
out
stos
out
lods
shlb
jnp
cmp
mov
sub
xchg
dec
dec
rcrl
jae
adc
nop
cmp
daa
loope
int
jge
cmp
cwtl
xchg
jnp
data16
repz
sti
call
push
and
into
stc
leave
jne
and
push
fistpll
test
pop
push
in
inc
pop
das
popf
sbbb
sbb
sbb
jl
in
fdivrs
dec
idivl
dec
mov
jmp
lahf
push
push
cld
add
sbb
mov
cmp
sarb
fdivr
add
inc
fwait
jnp
sbb
clc
sbb
cmp
and
inc
pop
enter
jns
adc
lods
or
fdivr
xchg
xchg
sbb
aad
fs
jbe
mov
aaa
cld
movsb
add
out
out
mov
comiss
aad
shlb
cmp
std
pop
push
fprem
mov
repz
sub
xchg
cld
mov
aad
jne
popf
js
nop
ret
outsb
fcoml
into
mov
mov
leave
lds
sbbl
pop
nop
lea
jmp
sbb
cmp
push
xor
lcall
xchg
inc
push
imul
ja
fadds
jp
sbb
sbb
lcall
fmull
jg
mov
adc
stc
cmp
out
pop
mov
mov
sbb
xchg
adc
fcompl
mov
movsb
insb
pop
int3
xor
ja
xchg
push
xchg
mov
xor
cmc
cwtl
cmp
mov
cmp
cli
sbb
or
cmp
dec
mov
pop
les
xor
dec
inc
sbb
push
fsubl
mov
leave
mov
pop
push
or
idivl
mov
out
push
lcall
imul
mov
pop
nop
mov
inc
mov
movsl
scas
cmc
mov
sbb
sbb
push
leave
fnstenv
pop
lcall
adc
cmp
mov
cmpl
std
mov
ficomps
lods
xchg
cmpb
les
popa
movsb
pop
jl
outsl
pop
adc
jae
or
inc
pushf
dec
sub
int3
mov
lahf
xchg
cwtl
xor
das
fisubrs
mul
aas
bound
sub
dec
xor
adc
subb
mov
sbb
pop
sub
jb
inc
out
add
aaa
pushf
or
mov
push
int
add
repnz
push
int
sbb
cwtl
dec
or
fsubrs
mov
dec
mov
pop
mov
cwtl
ja
sbb
mov
nop
sbb
xchg
call
xor
xchg
neg
inc
pop
lret
sbb
jg
mov
xor
fiadds
shlb
xchg
cmp
add
mov
fucom
ret
insb
pop
daa
sub
jne
mov
mov
insb
pushf
and
rcll
dec
xchg
fnsave
sti
mov
out
jnp
jno
cs
lea
lods
sbb
cwtl
inc
cld
cwtl
jb
mov
mov
nop
testl
push
ret
xor
or
push
call
lods
aaa
adc
sub
inc
adc
xchg
push
clc
push
idivl
shrb
xor
lahf
mov
cmpsb
push
jle
pushf
cltd
push
fists
je
in
mov
mov
adc
sbbb
popf
mov
xchg
jns
lret
sbb
push
lret
and
cwtl
insl
push
pop
pop
mov
xor
add
int
dec
lds
xchg
mov
aas
push
jo
adc
adc
daa
adc
jbe
pop
nop
lds
mov
inc
cld
test
dec
stos
fstpt
daa
push
fbld
das
jo
or
in
cld
pusha
mov
lcall
mov
in
cld
test
sub
mov
leave
divl
call
mov
xchg
mov
add
xchg
xor
sbb
mov
sti
out
nop
cld
fimull
jns
scas
lcall
mov
arpl
and
test
jp
and
mov
in
mov
outsb
loopne
jae
mov
add
clc
inc
xor
ja
or
cmpsb
push
sbb
mov
inc
sahf
pop
xlat
fsts
cmp
loope
push
mov
add
rcl
mov
inc
jb
sub
mov
mov
inc
add
leave
repnz
lret
xchg
cld
jmp
jo
int
lahf
push
pop
mov
mov
xchg
inc
dec
sbb
jns
mov
out
stc
loopne
xchg
and
sbb
mov
sub
push
adc
cmpsb
jnp
mov
push
lret
scas
sbb
dec
iret
sub
sub
ljmp
add
xchg
cmp
sarb
iret
and
mov
hlt
pop
mov
xchg
sarb
add
cmp
cmp
dec
inc
mov
fldenv
hlt
fstps
fnstcw
inc
out
in
dec
in
aam
fnstcw
orl
or
fildl
sbb
ret
cmp
out
jle
rcr
inc
mov
pop
sub
fimuls
mov
stos
jmp
sti
push
mov
xchg
arpl
lods
cld
sbb
mov
mov
jg
push
pop
test
shrl
arpl
sbb
inc
ret
jmp
xchg
stc
popf
hlt
enter
les
loope
xchg
jmp
popf
lret
ja
pop
mov
cmp
push
jmp
cmpb
mov
movsl
shrd
sbb
xor
add
mov
loopne
pushf
int3
fidivrs
movsl
xlat
jno
cmp
lods
aas
icebp
pushf
fnstcw
fcmovnu
ja
inc
shll
fldcw
fisttpl
and
or
jg
fadds
dec
mov
pop
lea
fnstcw
push
rorl
pop
imul
cld
test
sbb
sub
jp
xchg
outsl
les
dec
mov
xchg
cmc
movsb
xchg
or
or
mov
stc
push
cpuid
cli
mov
or
push
sbb
lock
xchg
pop
jge
pop
add
mov
mov
out
jl
sar
sbb
rcrl
ret
lods
cmp
and
add
mov
loopne
mov
movsl
fucom
lcall
mov
faddl
adc
jno
jnp
cli
xchg
out
fwait
push
cli
loopne
int3
ljmp
mov
cwtl
pop
fs
daa
rcr
or
jmp
mov
push
decl
pop
dec
test
adc
lea
xchg
call
stos
int
cmp
mov
cli
cwtl
repz
fcom
ror
std
sbb
jnp
arpl
clc
shll
insl
adc
ds
data16
add
push
xchg
dec
pop
sahf
adc
test
cmpb
sub
dec
ficomps
sbb
cmp
aaa
xchg
jo
sti
mov
cli
fstl
cmpsb
mov
or
jl
xor
sbb
icebp
adc
cwtl
fsub
pop
sti
fwait
lret
arpl
pop
jne
pop
jle
mov
fsubrp
cli
enter
fldcw
mov
mov
mov
aas
pusha
adc
mov
dec
mov
push
mov
jnp
movsl
push
mov
movsb
add
nop
sbb
sti
fisubl
negb
adc
ds
mov
enter
jle
xor
loop
lcall
sub
xlat
mov
add
lock
add
movsl
xchg
xor
out
out
xchg
jle
incl
sub
inc
int3
shll
das
aad
xchg
add
mov
fldt
push
push
cmc
inc
js
mov
sbb
mov
pop
add
mov
cli
lret
sti
mov
outsb
mov
and
cmp
ficompl
aad
xchg
cld
xlat
mov
sbb
pop
stc
cwtl
sbb
test
adc
push
leave
es
sbb
sbb
dec
inc
mov
jns
cli
cmp
mov
and
insl
sbb
fnstenv
mov
fwait
outsb
pop
leave
negb
sbb
cmp
jg
andb
sbb
hlt
scas
adc
pop
mov
jecxz
inc
jne
dec
enter
mov
iret
bnd
aas
push
xor
repnz
or
ret
cmp
out
lret
mov
cmpsb
sti
pop
aad
or
inc
cmpsb
sahf
mov
sub
fadds
push
pop
ss
xchg
xchg
aas
or
adc
and
mov
mov
and
mov
adc
pop
sbb
iret
sbb
mov
mov
jg
shrb
xorb
stc
sbb
pop
js
mov
fistpl
jecxz
test
decl
aas
add
jb
jg
pop
mov
negb
mov
insb
sbb
mov
pop
lcall
call
decb
mov
mov
out
jg
mov
pushl
xchg
mov
cwtl
mov
cwtl
mov
push
cmp
das
sbb
outsb
movb
adc
insl
in
add
pop
aaa
bound
dec
mov
arpl
enter
jmp
ds
push
push
shrb
aas
mov
xchg
sti
insl
mov
jp
xchg
mov
push
push
pop
mov
mov
call
xchg
rcrl
xchg
pop
mov
jp
xor
xor
test
scas
lahf
aas
dec
pop
mov
icebp
rcrl
jns
addl
je
movsl
dec
pop
dec
mov
lods
xchg
xchg
pushf
lock
fdivrs
jl
add
cltd
je
add
lret
sub
mov
cmc
cli
loope
dec
xchg
in
mov
jmp
pop
mov
push
shrl
cmp
pmullw
icebp
sub
enter
int3
xchg
sbb
cmp
jmp
mov
and
xchg
in
pop
inc
sbb
or
xor
pusha
adc
std
adc
xor
sub
dec
cmp
jp
enter
out
aaa
dec
jmp
pushf
jle
xor
scas
and
xchg
or
inc
sbb
int
cmc
nop
sub
mov
aas
mov
inc
jbe
movsl
sbb
sbb
pop
scas
jno
movsb
out
push
jle
pop
filds
rcr
mov
cld
fcmovb
jecxz
lods
mov
cld
in
sbb
icebp
sub
call
lret
xchg
and
cs
fsubl
mov
mov
jae
xchg
fdivs
dec
mov
cld
xchg
jns
add
pop
test
mov
pop
mov
mov
mov
xor
adc
test
add
mov
mov
fmull
mov
test
out
dec
jo
scas
aaa
dec
and
jnp
stc
fldl
sbb
mov
fwait
jnp
call
pop
jl
mov
cwtl
xor
mov
test
cmp
mov
rclb
cmpl
mov
ljmp
xor
pop
cwtl
fisttps
rep
jae
jmp
or
sar
mov
iret
fwait
sbb
cmpb
std
lock
mov
cwtl
loopne
cmp
hlt
aam
mov
or
int3
enter
repnz
and
cmpsb
pop
addb
fistps
push
lea
pushf
loopne
xchg
daa
ficompl
sbb
mov
sbb
inc
mov
cwtl
out
mov
stos
fwait
loopne
or
mov
jns
mov
lds
dec
cmpsl
repz
sbb
popf
rorb
popa
imul
xchg
adc
push
in
inc
xor
or
inc
cmp
cmpl
jnp
test
pop
nop
je
adc
mov
repz
mov
std
cld
fcomp
sar
ja
cmp
xchg
xor
mov
sbb
add
mov
jnp
xorb
jle
imul
pop
mov
adc
mov
bound
ljmp
mov
addl
jnp
pop
sti
int
movsb
push
movsb
fidivrl
cmp
adc
sub
sbb
mov
mov
cld
jmp
push
mov
test
mov
lods
xchg
adc
push
rcrl
test
outsb
dec
cmc
int
out
mov
aas
fst
call
adc
rorl
add
adc
jo
test
jae
sub
sub
cli
scas
addb
or
nop
jl
inc
jbe
and
ret
push
fmull
fisubs
or
lock
sarb
sub
scas
and
enter
sbb
outsb
ja
xor
aas
enter
mov
dec
lahf
ss
fs
jbe
cmp
pop
mov
mov
shll
push
adc
clc
test
pop
pushf
sbb
lcall
mov
aam
add
mov
add
aas
jge
int
sahf
cwtl
mov
je
sub
mov
jmp
sub
push
sbb
ret
pop
mov
add
pop
out
dec
pop
outsl
dec
and
dec
mov
pop
ja
inc
cld
adcl
sbb
fcomps
ret
inc
jae
fdivs
out
push
push
popf
and
or
xchg
test
push
add
daa
aaa
fwait
pop
or
mov
push
sar
and
andl
test
jg
ficoml
and
into
stos
xchg
out
sahf
enter
fcmovu
and
out
push
js
lret
inc
mov
dec
xchg
cmp
jno
call
test
stos
cmpsl
ror
test
js
xor
in
lock
popf
sarl
popf
pop
je
push
aad
sub
push
sbb
jp
xor
jp
dec
pop
mov
pop
movsl
push
stos
out
test
mov
loop
xchg
test
cmpsb
nop
popf
adcb
bound
aad
in
aas
xchg
inc
out
adc
mov
repz
mov
mov
in
ficomps
jmp
loopne
xor
mov
inc
stos
inc
es
cmp
mov
adc
icebp
aas
or
inc
mov
mov
adc
xor
mov
stos
repnz
sbb
enter
pop
int3
repz
js
xchg
fsubrs
jbe
sub
xchg
xchg
fnsave
aas
je
mov
pop
iret
cmp
pushf
or
pushf
sub
les
xchg
jnp
add
fisubs
xor
fcomp
imul
mov
jo
test
pushf
pop
push
sub
dec
jl
lret
dec
call
fcomps
push
push
lcall
mov
sbb
jb
mov
movsl
push
or
pop
ds
dec
repz
inc
cwtl
fwait
cld
sbb
popf
dec
mov
push
xchg
pushf
lds
sbb
mov
mov
mov
and
push
and
pop
loope
pop
iret
jp
pop
jne
push
lahf
mov
cmpsb
push
pushf
addl
adc
push
adc
pop
nop
cmp
lds
mov
jno
into
jno
xor
test
pop
pop
push
sbb
cmp
mov
mov
mov
pop
in
fnsave
and
sbb
mov
adc
outsb
inc
mov
ret
sbb
mov
sti
cmp
and
std
cltd
pop
decb
add
jl
std
test
cwtl
mov
mov
inc
mov
adc
jecxz,pn
test
xchg
cwtl
push
jb
jnp
aas
sbb
out
js
xor
movsb
pop
out
repz
jp
jbe
sub
jecxz
fst
sbb
jbe
sub
jmp
nop
mov
aaa
fstl
xchg
push
aas
add
mov
jle
xchg
test
mov
sbb
jl
cmp
adc
lcall
pop
out
aad
int3
dec
pop
push
mov
lock
rolb
or
push
mov
add
cli
fdivr
push
sub
nop
xor
mov
mov
loopne
mov
jns
mov
sbb
mov
std
clc
dec
jp
cmpb
test
inc
or
fs
in
test
repnz
cvtps2pi
adc
jg
lcall
out
pop
dec
jno
ds
ss
inc
fs
adc
sbb
insl
mov
xchg
cmp
push
rcrl
push
lock
xor
cmp
mov
mov
pop
sub
stc
push
cli
push
sbb
cmpsb
jns
iret
lea
mov
cmp
aaa
insb
cmp
adc
repz
xchg
sub
adc
and
sub
jp
addl
sbb
loopne
or
xor
xor
push
pop
hlt
sbb
rorl
das
pushf
jmp
sbb
lds
aad
loopne
je
sti
jmp
xlat
mov
mov
aaa
push
sbb
jle
test
xorb
push
flds
or
stc
into
sbbb
je
add
and
cmp
xlat
adc
in
jl
jae
fimull
mov
ds
mov
outsb
scas
xor
cmp
jg
loop
jg
loopne
ret
lea
pop
inc
sbb
mov
xor
cs
mov
push
imulb
je
add
xchg
dec
cld
in
mov
test
cwtl
ret
fwait
adc
sbb
bound
add
pop
add
sub
jl
add
sti
mov
push
sub
aaa
or
mov
fstpl
sub
sub
inc
arpl
jno
lock
cmc
movsb
xlat
in
pushf
push
push
or
fiaddl
mov
daa
jl
pushf
xchg
xchg
das
stos
aad
fsubs
test
fcoml
test
mov
lcall
xchg
mov
subb
pop
mov
cmp
mov
pop
sub
lret
sbb
or
lcall
cld
and
in
push
jmp
sti
pushf
inc
int
mov
inc
sahf
test
mov
sbbb
sti
outsb
ret
mov
sub
sub
lea
mov
pop
sbb
daa
ret
sbb
cld
out
test
pop
pop
jecxz
cld
jnp
lahf
cmp
ret
mov
movsl
dec
and
ficomps
cltd
jnp
outsl
adc
add
jp
sbb
sbb
fwait
sbb
mov
cmp
popf
js
clc
addb
cmp
sub
arpl
lcall
mov
adc
push
push
sub
enter
cs
shll
dec
popf
xchg
pushf
inc
mov
inc
stc
cli
dec
pop
mov
push
xchg
xchg
add
pop
xor
push
dec
adc
sbb
fdivrs
cmpsl
sbbb
movsl
mov
lahf
adcl
mov
xchg
dec
mov
fwait
outsb
iret
bswap
jmp
jecxz
and
jo
bound
jp
rol
mov
jg
das
js
sti
mov
fwait
jecxz
cwtl
dec
mov
ret
cmc
xchg
and
xor
insb
and
cwtl
test
pop
xchg
test
movsb
push
dec
das
idivl
mov
es
test
push
fsubrs
shll
and
mov
bound
pop
test
and
push
inc
test
dec
movsl
add
xor
inc
and
push
push
pushf
loopne
sub
in
mov
cmp
xchg
les
ds
push
scas
mov
enter
imul
jne
dec
idiv
inc
sub
les
mov
clc
lahf
cmp
in
pop
decb
xchg
cmp
mov
sti
xor
fwait
and
lds
xor
cs
or
imul
push
fisubrl
imulb
cli
pop
mov
xchg
inc
cmp
in
imul
mov
and
pushf
sub
pushf
cld
rolb
loop
stc
sbb
push
adc
pop
repnz
mov
mov
mov
and
cmp
fsts
subb
or
pop
push
loopne
lcall
push
push
shlb
adc
cmc
fistl
xchg
insb
mov
jle
loope
loopne
movsb
lock
xorl
inc
out
sbb
iret
pop
rclb
in
jp
cmpsl
jg
daa
data16
ret
adc
cltd
lods
hlt
sub
in
mov
jge
and
shlb
sbb
fdivrs
cmp
test
jbe
push
pop
adc
mov
push
cmp
jmp
sub
add
mov
pop
pushf
mov
enter
push
jle
jmp
test
sbbl
sub
xchg
test
leave
fisubrs
in
cli
leave
icebp
inc
xchg
pop
mov
out
cmp
stc
mov
or
jnp
add
dec
jmp
icebp
mov
ret
cli
mov
adc
into
mov
push
mov
jp
cmp
mov
pushf
out
aas
add
out
xor
mov
movsl
sbb
movsl
or
mov
repz
cwtl
push
filds
aad
gs
pop
cmpsb
or
jg
pop
adc
sbb
int3
mov
cmp
mov
push
insb
sbb
xchg
add
mov
cltd
push
pop
sub
jg
push
negl
add
popa
cmc
fcomps
xor
aaa
idivb
jno
jae
sub
imul
les
xchg
adc
sbb
mov
dec
push
ret
xchg
imul
std
mov
cmp
push
pushf
ja
sbb
jmp
sahf
add
out
and
sbb
lock
fistpll
int3
out
or
mov
fidivs
mull
mov
jle
orl
cmpb
gs
xor
adc
adc
mov
adc
iret
inc
add
xchg
push
stos
and
sbb
popf
popf
imul
inc
adc
ja
jns
fsubrl
int
cli
out
test
outsb
push
xchg
daa
sub
pushf
mov
xchg
and
fsubr
shlb
mov
into
mov
and
push
jae
aas
aad
push
lods
xor
pop
mov
mov
stc
iret
sub
mov
sbb
loopne
jp
lret
lret
stos
push
xor
pop
sub
sbb
sub
xchg
xchg
mul
pop
fisubrs
icebp
dec
mov
lcall
sub
std
in
inc
xlat
fwait
fwait
add
rcrl
stos
xchg
cwtl
jnp
mov
mov
out
icebp
es
loopne
cmpl
xor
push
outsb
adc
adc
nop
pop
mov
popa
xchg
cwtl
pusha
std
cwtl
js
sarl
dec
stos
add
or
loopne
test
enter
movsb
fdivrs
push
fmul
and
inc
jl
fcoms
clc
out
cld
imul
jl
mov
jg
pop
icebp
sub
sbb
push
sbb
hlt
cmp
enter
loopne
cmpb
xchg
pushl
dec
pop
cmp
sahf
jle
pop
subb
cmpsl
mov
add
add
adc
leave
adc
pop
mov
ret
pop
mov
jg
rcll
pop
scas
es
mov
lcall
cmpsl
repnz
cmc
mov
fadds
int3
jmp
sbb
rorl
jp
xchg
iret
jmp
sbb
js
add
daa
movsl
jae
sarl
addr16
mov
xchg
arpl
cltd
lods
lea
xchg
fcmovu
and
xchg
sub
sahf
cltd
pop
and
ret
mov
xor
div
mov
xor
sbb
repz
mov
sub
pop
lcall
fidivrl
adc
movsb
mov
dec
pop
lods
xchg
lods
cmp
sbb
jnp
fnstsw
xchg
gs
xchg
inc
inc
lcall
mov
mov
mul
push
shlb
push
pop
or
das
or
pop
inc
cmp
test
xchg
sbb
scas
push
jle
jl
xchg
pop
clc
cmp
push
mov
sub
pop
es
fisubl
sbb
inc
adc
pop
roll
mov
fnstcw
test
idiv
nop
cmp
in
add
pop
jecxz
xor
cmp
mov
pop
add
lods
sbbl
add
je
lods
les
xor
sbb
dec
mov
sarb
lcall
cmpsb
lcall
loop
enter
mov
aas
adc
fdivl
stc
call
lcall
adc
pop
inc
fistps
ja
bound
shl
icebp
mov
ret
jecxz
jp
rcrb
mov
lods
sbb
insl
xchg
inc
xor
mov
add
sub
dec
jl
add
popf
push
shlb
scas
sti
mov
jne
cli
fcomps
push
xor
jns
jg
dec
push
inc
nop
sti
and
mov
js
out
mov
push
mov
ret
inc
ja
pop
or
mov
cmp
cli
pushf
shrb
cmp
or
adc
jo
xor
cld
xchg
out
push
out
mov
xorb
pushf
mov
and
mov
ds
lcall
mov
inc
lods
dec
adc
push
in
or
jne
fwait
test
imull
fprem
dec
rcl
pusha
push
push
lret
cmpsl
jmp
int3
or
jns
pop
ret
mov
negl
pop
imul
sub
xchg
adc
std
mov
mov
jg
scas
sbb
lea
ret
cld
add
nop
jmp
xor
mov
inc
lea
xchg
movsl
cltd
or
cmp
mov
shrb
inc
test
mov
sbb
xor
pop
pusha
jne,pt
pop
in
pop
mov
add
or
mov
daa
xchg
cwtl
inc
fcoms
pop
cmc
fidivl
cld
push
loop
cmc
loop
pop
mov
push
or
add
fisttpl
xchg
or
arpl
aaa
push
mov
jbe
sbb
push
xlat
jae
cmp
sub
cmpl
stc
xor
sbb
mov
sbb
or
int
cld
mov
pushf
push
push
stos
push
mov
ret
decl
dec
add
adcl
out
adc
ficoms
and
sub
xor
adc
inc
push
jbe
out
gs
mov
sbb
lahf
xchg
sbb
pusha
sbb
leave
ret
call
out
rcrl
cmc
js
pop
into
int3
out
pusha
xor
insl
mov
xor
mov
cmp
ss
mov
sbb
jno
ret
sbb
and
pop
ljmp
cs
xchg
xchg
pop
xchg
test
jno
movsb
cltd
jge
lret
jge
js
jg
enter
push
int
mov
jp
fwait
jae
lret
cmp
mov
push
sub
out
push
inc
mov
jne
mov
push
stc
push
rcl
sub
dec
loopne
fwait
sub
cmpsb
jbe
xchg
dec
pop
orl
jmp
sbbb
xchg
lods
je
leave
xchg
mov
jle
push
mov
dec
adc
addr16
insl
adc
jnp
es
pop
xchg
in
fsubs
cmp
xor
push
les
rcr
popf
test
adc
fstpt
sub
jmp
xchg
mov
fs
lcall
sbb
pop
mov
mov
repnz
pop
jecxz
jle
fistpl
scas
fsubs
sub
out
fisttpll
jo
pushf
cmp
adc
arpl
fsubl
xor
pop
cmp
ret
loop
int
or
sti
and
cld
mov
adc
aaa
stc
ficomps
sti
mov
sbb
mov
adc
dec
push
fdivs
jnp
out
jae
or
xchg
ss
iret
pop
pop
std
insb
sub
call
subl
cli
pop
sub
ds
fwait
sti
push
sub
fs
pop
xlat
mov
pop
dec
inc
push
xchg
and
cwtl
mov
cmp
mov
bound
cltd
jmp
or
xchg
jmp
ss
aad
jne
pop
mov
repnz
negl
sub
sub
cli
mov
cmp
mov
pop
lahf
jmp
pushf
fsubl
push
inc
xchg
cwtl
mov
pop
bound
ret
aas
ret
sbb
dec
push
scas
xchg
lahf
xor
xor
hlt
fiaddl
jns
and
mov
mov
push
aaa
jne
movsb
mov
sbb
mov
jns
pushf
push
mov
lahf
pop
leave
xor
xlat
ja
test
mov
pop
xchg
sar
repz
mov
shll
inc
lds
cmp
dec
in
mov
push
lods
bound
jmp
adc
or
pop
test
les
out
push
loop
js
adc
jmp
jno
dec
repz
in
mov
or
js
outsb
mov
mov
push
add
push
scas
rcll
stos
xchg
xorb
adc
pop
call
ret
dec
stc
cmp
rcrb
jns
mov
mov
pop
inc
out
mov
int
sahf
xchg
fsubrs
ret
nop
sti
sub
mov
std
jns
adc
jle
lods
sti
sub
mov
cmp
inc
lods
lea
jp
rcrb
mov
dec
jb
ret
cmpsl
and
adc
push
sub
and
int3
lods
bound
adc
sbb
xchg
sti
xchg
cmp
dec
sbb
push
fldenv
and
and
int
ret
mov
mov
jno
ret
out
mov
mov
andb
pushf
outsb
push
xor
aaa
adc
push
iret
in
mov
adc
stos
sub
push
push
xchg
mov
xor
mov
outsb
movsl
lea
lea
sub
inc
ds
rclb
jg
outsl
inc
in
xchg
mov
lret
aas
and
xchg
fbstp
jbe
jne
sub
jg
je
fwait
or
fimull
mov
cmp
cltd
inc
lods
aas
andl
lock
dec
ficomps
adc
das
xchg
xchg
pop
cmp
adc
jge
dec
mov
sbb
out
sbb
mov
nop
cmp
dec
xchg
sarb
negl
addb
pushf
test
arpl
push
js
dec
sub
xchg
sarb
les
xor
jge
adc
mov
sbb
packsswb
mov
or
ljmp
aas
add
std
push
nop
dec
jne
cmp
add
push
jae
inc
and
stc
cwtl
xchg
notl
adcl
mov
jb
repnz
mov
fistps
cmpsl
pop
movsl
dec
pop
cli
pop
cs
int
cmc
pop
int3
lock
bound
sub
cli
stos
inc
adc
lea
sub
out
notl
stos
pop
incb
add
cli
sub
jae
push
mov
insb
in
xchg
cmp
mov
pop
repz
lock
popa
js
outsl
mov
cltd
into
push
test
cwtl
fsubp
rcrl
shlb
push
js
add
adc
test
xor
push
push
loopne
arpl
cmp
cwtl
sarb
sbb
xchg
sbb
inc
stos
adc
xorl
dec
pop
lret
jp
mov
xor
jg
stos
cmp
mov
and
std
jmp
fsubrs
inc
mov
jle
mov
in
aas
xor
sbb
mov
enter
mov
subl
adc
shll
mov
shll
push
xor
bound
fildll
pop
jae
mov
mov
mov
bound
xor
test
stc
into
outsl
mov
jmp
pop
cmpsb
lds
cmc
fdivr
fsubrs
cmp
faddl
mov
push
mov
rcrl
and
adc
xchg
lock
out
jge
pop
inc
sbb
mov
test
popf
cmp
jae
pop
pop
mov
arpl
add
mov
stos
pop
lods
fistps
outsl
mov
push
int3
sub
cmpsb
add
cmp
sbb
sbb
cli
and
cmp
and
repz
mov
jp
mov
mov
inc
push
test
lcall
mov
push
mov
sbb
jo
sbb
sub
jecxz
inc
pop
mov
ljmp
dec
pushf
shll
outsb
push
test
dec
outsb
mov
movsl
pop
xor
xchg
and
pop
aas
jmp
xchg
fcom
mov
xor
mov
cmp
push
push
mov
adc
jno
das
call
mov
and
fmuls
lcall
pop
pop
shlb
loopne
fstpt
scas
cmp
adc
int
and
stc
outsl
and
fmulp
popf
nop
cwtl
sbb
sbb
loopne
ret
testl
and
lea
xor
out
idiv
jp
in
cwtl
lods
mov
pop
fwait
fwait
testl
and
xorl
push
sbb
psrlw
lods
aas
repz
fdivrl
cmp
mov
adc
lds
xchg
mov
ljmp
mov
scas
dec
or
sub
insl
jp
pushf
add
pushf
mov
lret
cmpl
pop
imul
sbb
and
lahf
lret
xor
mov
inc
cmp
popf
out
push
lea
bnd
cmp
xchg
in
fsubl
fmuls
cmpsb
xor
add
iret
gs
pushf
mov
js
and
aaa
mov
mov
int3
sbb
xor
sti
sub
jmp
mov
sbb
lock
imul
fdiv
mov
into
cwtl
and
mov
rcrl
add
mov
popa
mov
sbbb
pop
cld
inc
lds
arpl
rclb
pop
push
ds
sti
add
xor
ss
jmp
add
stos
pop
or
js
dec
jns
and
mov
jo
mov
icebp
divb
jno
test
jecxz
js
fadd
push
mov
mov
rcrl
or
cmp
gs
sub
jb
push
sbb
mov
add
and
cmp
add
push
mul
fwait
pusha
jg
ret
fistl
fwait
pmaxub
mov
je
ja
add
les
dec
mov
repnz
mov
pop
mov
testl
pop
mov
stos
mov
fistps
cmp
push
xor
jo
aas
out
pop
test
push
adc
into
dec
push
pusha
lock
imul
sbb
inc
adc
nop
cmp
fwait
mov
addr16
pushf
sarl
xchg
scas
or
mov
sti
data16
mov
pushf
and
pop
add
sub
enter
fiadds
pop
daa
pop
movsl
mov
lods
cmp
pop
pushf
jmp
inc
add
cld
in
pop
cli
cmp
mov
mov
cmp
int3
pushl
mov
pop
xchg
mov
push
adc
adc
fists
mov
sub
testl
repz
add
or
ljmp
aaa
sub
ret
cmp
and
lret
sbb
lcall
faddl
cli
int3
insl
aas
push
cmpsb
mov
adc
cld
cmpsb
lods
and
jp
mov
fwait
cmpsl
jbe
scas
xchg
xchg
test
push
add
fstpl
inc
lcall
lds
mov
push
cltd
into
cmpsb
cld
sbb
incl
sahf
xchg
fsubrl
mov
inc
mov
fidivrs
aad
xor
mov
lods
mov
xchg
jo
and
mov
sbb
cmp
stos
pusha
lret
pushf
inc
push
sbb
pushw
mov
mov
adc
ss
cwtl
mov
jle
sbb
mov
lcall
sbb
push
sti
scas
adc
fadd
or
mov
out
fidivrs
adc
rcll
cltd
fcompl
out
xchg
mov
fistpll
stc
lods
ss
mov
and
jae
in
inc
jl
sbb
mov
lods
scas
mov
dec
add
sahf
push
sahf
ds
jp
push
xchg
sub
insl
mov
push
jo
int
mov
add
sub
test
cmp
scas
out
mov
add
pop
pop
lods
lret
mov
and
mov
ret
mov
mov
push
sti
scas
outsl
adc
adc
call
mov
dec
nop
cwtl
and
jns
cmpsl
jmp
scas
shll
movsl
fdivl
jg,pt
xchg
jnp,pt
outsb
fiaddl
mov
mov
fdivs
push
out
scas
mov
add
adc
fwait
pop
xchg
inc
pop
in
push
cmp
sarl
int
das
xorb
mov
cwtl
icebp
cltd
in
jo
mov
mov
sub
mov
sbb
cli
mov
mov
sub
fisttpl
xchg
adc
stc
icebp
fs
add
mov
loop
fwait
xchg
mov
push
cmpb
cmp
jg
mov
push
es
pushf
aaa
movsb
jecxz
daa
fs
pop
mov
jl
scas
mov
cli
fcompl
int
sbb
in
adc
out
pop
scas
adc
outsl
cltd
pop
fnstsw
jb
or
hlt
mov
xchg
mov
mov
out
push
xor
pop
fnsave
outsb
push
push
sbb
sbb
arpl
insl
mov
or
dec
mov
jp
test
in
sti
dec
loope
xor
sub
test
xchg
fcomps
test
sti
daa
mov
cmp
jnp
cli
es
pop
jmp
pop
mov
lret
jb
stc
ja
imul
pop
push
adc
dec
les
stc
je
and
shlb
pushf
scas
pop
fisubs
je
std
mov
mov
xorl
aas
inc
pop
jp
sbb
mov
jl
xor
jge
and
adc
ja
sbb
lcall
jmp
pushl
in
xchg
mov
lret
outsl
cmc
js
lret
daa
sbb
xor
jae
add
ss
scas
arpl
decl
test
int
dec
mov
adc
ret
lock
mov
sub
imul
pop
mov
ja
and
fcoms
aas
ja
inc
stc
cld
imul
sbb
or
jmp
stos
mov
dec
dec
mov
cmpsb
sti
nop
js
gs
addb
stos
jmp
mov
mov
pop
mov
push
emms
stos
sahf
jne
aaa
addr16
mov
leave
bound
addr16
xchg
jnp
lcall
js
xor
jmp
lcall
and
fdiv
in
mov
adc
jo
or
popf
pop
clc
push
adc
inc
lock
ja
sub
cwtl
and
pop
mov
int3
cmp
cwtl
mov
fmuls
int
and
xor
fstl
in
mov
rcll
pop
sbbb
cld
push
cmp
test
scas
mov
push
lret
and
es
loopne
cmp
push
xor
add
nop
ja
pop
aam
ss
popf
cld
mov
lods
cmp
xchg
cli
push
xchg
lds
xchg
fbstp
mov
or
fbstp
cli
lret
enter
mov
or
pop
mov
mov
out
inc
scas
cmp
cmp
jl
mov
popa
pop
fildll
lea
adc
dec
dec
or
imull
shll
cltd
fmuls
les
xor
test
sbb
pusha
imul
popa
xchg
mov
or
mov
repnz
decb
scas
and
pushf
push
gs
dec
lcall
adc
fsubl
cltd
cmp
add
inc
cmp
shr
xchg
out
scas
mov
je
cs
arpl
inc
loope
cmp
add
mov
mov
push
xchg
add
xchg
jae
cmp
cmp
jne
mov
cmp
test
lret
xlat
fmul
push
into
push
bound
and
aas
shrb
test
adc
std
xor
out
movsb
add
int3
repnz
rolb
inc
dec
xor
xlat
and
daa
lods
adc
loope
std
inc
pop
lahf
push
mov
and
es
scas
call
test
sahf
das
pop
int
and
inc
in
sarl
sahf
rcr
hlt
nop
in
inc
jnp
cmp
inc
js
mov
mov
addr16
divl
mov
iret
hlt
pop
cwtl
js
loop
cmc
mov
rclb
or
bts
call
test
cwtl
cs
loop
mov
mov
sti
xor
push
add
daa
jl
cmp
and
insb
or
lds
or
mov
das
jp
jae
stos
lods
lcall
cmp
mov
pop
cltd
push
repnz
imul
inc
mov
adc
mov
mov
test
fsub
add
fisttpll
mov
xchg
stc
rclb
sbb
jecxz
sub
or
pop
push
js
nop
cmp
cmc
fdivrs
mov
jmp
cmp
mov
fwait
aam
mov
mov
jp
imul
cltd
add
inc
mov
ss
into
movsb
mov
sbb
cwtl
dec
imul
sbb
xchg
sub
fmull
out
push
out
sbbl
lcall
mov
and
push
push
cld
pushf
xor
cmp
pop
mov
je
dec
fmuls
cmpl
add
outsb
in
fimull
aad
rolb
outsb
rcrb
js
add
js
adc
push
sbb
das
test
call
aam
add
dec
inc
cmp
mov
push
xchg
sti
addb
jg
popf
cmpb
or
div
loopne
lcall
divb
lods
push
mov
inc
push
add
outsl
out
call
push
divb
les
xor
and
in
icebp
sbb
lods
pop
cmpsl
cmpsb
nop
inc
fsub
sbb
cmp
loopne
lock
xor
orb
sbb
aas
xchg
ss
push
dec
sub
cld
xchg
push
cmpsb
test
adc
xchg
cmp
movsl
jg
or
xchg
lds
cmp
push
mov
lea
fwait
cmp
rorb
pop
les
sub
ljmp
dec
iret
lcall
adc
and
sbb
push
xor
ret
push
icebp
dec
mov
sbb
dec
inc
cmp
fcompl
cmpsl
lret
popf
cwtl
iret
xchg
pushf
repnz
mov
jns
sub
pop
pop
lahf
or
aas
std
jecxz
test
mov
adc
pop
adc
imul
scas
fwait
xchg
sbb
pop
push
push
out
loopne
cmp
cmp
mov
fdivr
enter
test
mov
fidivrl
fsubrp
repnz
cmc
and
mov
sbb
dec
test
adc
push
cmc
mov
adc
jl
jo
out
rcl
mov
mov
push
nop
out
xor
enter
mov
sbb
xchg
mov
jnp
mov
repz
jecxz
fsubs
popf
mov
adc
pop
mov
jae
mov
in
rcr
xor
shr
mov
test
imul
nop
sahf
cmp
cmp
inc
xorb
dec
rcrl
arpl
fdivr
mov
mov
push
cmp
ja
movsl
lcall
scas
jmp
test
cld
scas
test
xchg
mov
mov
jle
mov
outsb
repnz
mov
xor
nop
pop
rcrb
and
shr
add
dec
fsubrs
lock
cli
dec
mov
lahf
iret
jmp
movsl
jae
stos
fiaddl
mov
daa
fiadds
scas
rcll
mov
mov
and
mov
sarl
cmpb
xor
in
or
test
loop
xchg
imul
add
dec
push
popa
lret
push
or
add
inc
adc
test
pop
cmpsl
mov
popa
int3
jg
adc
cli
out
push
push
test
or
xchg
mov
xor
mov
in
mov
mov
neg
negb
mov
jnp
push
popf
dec
push
push
sub
sbb
mov
loope
jle
mov
pop
lret
xor
fistps
mov
test
adc
cmp
add
xchg
jnp
das
data16
adc
ja
mov
addl
int3
fcompl
cli
mov
push
sub
sbbb
cld
xchg
jl
add
push
mov
inc
aaa
xchg
cwtl
push
xchg
inc
add
dec
cmc
lret
fsubs
dec
and
sbbl
es
negl
fnsave
push
sbb
push
sbb
aas
stos
jno
rcr
dec
adc
cmpsb
in
lahf
daa
add
int
mov
mov
scas
xchg
sbb
je
frstor
clc
lea
push
jae
insw
out
rcr
xor
sbb
stos
sub
mov
test
push
xchg
mov
data16
popf
das
jbe
fldt
pop
jne
mov
jle
loop
pop
push
cwtl
imulb
cmp
or
push
sub
sbb
cwtl
nop
and
sub
scas
in
fadd
jg
daa
sbb
in
imul
pop
cmpb
sub
shrb
mov
cmp
xor
push
std
ds
and
sahf
pop
jns
xor
scas
filds
push
mov
movsb
jp
mov
dec
pop
into
and
pop
scas
fwait
test
and
clc
mov
iret
mov
mov
filds
xor
pop
dec
ljmp
mov
jg
in
pop
lret
xchg
jl
mov
fistpll
fdivs
push
out
outsl
nop
insl
cli
cwtl
jecxz
cmp
cmpsb
lods
jne
pop
jnp
cwtl
inc
push
jle
xlat
in
jo
pop
pop
lods
enter
adc
fmull
and
xor
mov
cmc
pushf
test
jp
lret
cmp
shll
loopne
or
dec
popf
iret
xor
clc
psrlq
arpl
or
sbb
ja
insl
xchg
and
xchg
js
test
sbb
jmp
ljmp
mov
mov
and
pop
cltd
repz
mov
cmp
loop
jae
mov
jl
movsl
mov
pop
sbb
push
test
adc
insl
aas
insb
adc
cmc
lods
xchg
add
inc
inc
mov
sarl
sbb
fmuls
popa
cli
inc
syscall
repnz
pop
repnz
lahf
sbb
dec
sub
cmpsl
cwtl
leave
xchg
or
jo
cli
adc
xchg
xchg
xchg
adc
xchg
xor
out
ja
pop
outsb
adc
rorl
sub
call
out
jp
rcrb
ds
jge
scas
fdiv
mov
vpmacswd
mov
xchg
push
mov
cli
cltd
sti
pop
test
ret
stc
mov
xchg
adc
xlat
hlt
mov
lret
lods
ret
stos
dec
jp
lcall
or
adc
mov
sbb
ret
fidivl
sbb
in
cmc
dec
test
mov
mov
push
jmp
outsb
and
lret
push
xchg
pop
jp
jl
out
lods
sti
mov
push
and
scas
jp,pt
test
sbb
and
cmp
dec
shlb
dec
sub
sbb
bound
jg
mov
mov
sub
iret
jo
das
inc
xchg
je
cmpsb
pop
xor
cwtl
xchg
fsub
mov
icebp
xchg
ficoms
mov
xchg
ret
imul
pusha
mov
cmp
mov
insb
icebp
pop
test
fcomps
mov
addr16
mov
xchg
inc
test
in
je
aam
mov
jae
inc
mov
cmpsl
xor
dec
ficompl
jg
je
mov
stos
xchg
cmc
push
call
push
sbb
cmp
sbb
xor
test
sub
adc
lods
testb
xor
rcrb
jecxz
loope
aad
mov
jp
mov
sarb
shlb
lcall
mov
push
cmc
jb
xor
int
fwait
test
cmpl
push
jmp
sbb
cmpsb
cmp
mov
aas
ja
cmp
mov
xchg
lret
dec
fdivs
scas
push
pushf
or
mov
mov
aas
ss
adc
xor
xor
pop
cmc
dec
jge
test
insb
pop
sbb
aaa
fwait
mov
sub
cmp
cmpsl
mov
and
iret
push
pop
cli
cmovbe
and
in
dec
add
clc
mov
push
mov
pop
sbb
addb
push
daa
fsts
mov
mov
push
call
dec
mov
inc
xchg
mov
dec
cld
jbe
fdivl
add
xchg
and
out
push
add
lea
xor
out
sbb
cmp
pop
jns
sbb
sahf
sbb
adc
inc
cmp
in
rcrb
ja
pop
jnp
mov
repz
cmpsb
aas
cmc
dec
sarl
pop
fidivrl
js
pop
fsubrl
scas
int
xor
push
mov
nop
cmpl
pushf
mov
dec
repnz
push
lods
jbe
in
pop
mov
jbe
sbb
mov
xor
mov
fld
cmpb
sbb
test
sbb
inc
mov
movsl
xor
pop
hlt
sbb
jg
ficomps
scas
sub
mov
cmc
out
lahf
adc
fnstcw
cmpsl
fnstsw
gs
mov
cmp
or
mov
sub
test
cmp
mov
mov
pop
jge
fwait
mov
sti
fsubrs
lods
stc
add
mov
add
aad
cwtl
movsb
mov
sub
scas
ds
lcall
aam
pop
frstor
out
test
mov
repnz
lods
sub
sbb
test
pop
pop
ja
mov
and
cmp
xchg
imul
inc
pop
add
push
cs
movsb
mov
mov
ja
mov
out
mov
stos
fistl
jae
jmp
pop
pusha
jecxz
out
loope
fidivs
js
lcall
push
pop
fucomp
mov
mov
xchg
lahf
aad
mov
loopne
fidivl
jb
sahf
sbb
scas
arpl
aad
dec
xchg
out
jmp
push
dec
iret
cmp
in
pop
in
cltd
lcall
mov
in
sahf
pop
adc
push
xor
fstpl
xor
test
inc
adc
lcall
xchg
cmp
enter
jg
inc
mov
mov
mov
movsb
icebp
lcall
xchg
lods
pushf
sbb
fstpl
fldl2e
fisubrs
ljmp
xchg
incl
pop
mov
cmc
sti
cli
pop
clc
dec
xchg
es
mov
aam
loope
mov
repnz
jnp
sbb
ljmp
fsubr
jb
into
push
lret
push
mov
sbb
out
iret
scas
pop
int
push
repnz
fmul
inc
fldenv
aas
lcall
xchg
cmpb
enter
out
stos
sahf
stc
hlt
js
mov
hlt
mov
jp
shlb
sbb
outsb
jbe
and
and
fmul
nop
xlat
hlt
std
mov
cmp
sti
xor
inc
pop
sbb
in
jl
addr16
int3
mov
sub
xchg
cmpsb
mov
push
aaa
mov
lea
and
cwtl
cmp
xor
stc
ja
shll
push
div
xor
and
addr16
imul
enter
mov
inc
sbbl
mov
dec
cmp
out
fcos
xor
xchg
icebp
mov
sbb
into
sub
push
jbe
jle
outsl
ljmp
addr16
cwtl
sbb
xchg
mov
aas
ja
dec
imul
shr
pop
in
cmp
or
addr16
mov
mov
aas
push
icebp
das
call
xchg
or
push
mov
add
inc
fwait
xlat
mov
sub
xlat
mov
sbb
cli
or
or
loopne
inc
add
and
sbb
cmc
jg
cmpsl
or
mov
cwtl
mov
cmp
push
xchg
sti
mov
xlat
inc
fdivrs
inc
imull
orl
roll
pushf
sbb
fidivrs
cmp
xor
scas
cmp
jl
ret
mov
cmp
aas
xchg
rcrb
cmc
and
pop
cli
loopne
roll
pushf
cmp
leave
sbb
xor
aam
pop
mov
cwtl
and
jg
mov
mov
jge
sbb
sub
push
inc
icebp
js
mov
repnz
pop
push
or
push
jmp
clc
xchg
lea
addl
mov
adc
adc
es
pop
cwtl
push
push
mov
inc
fs
xchg
pmuludq
fsubrl
adc
fdivs
into
inc
pop
je
lcall
add
rcll
or
call
pushf
sbb
and
aam
mov
jp
pop
icebp
push
popf
sti
pop
aas
sub
pop
ss
pushf
mov
lret
adc
aam
inc
sbb
cmc
in
lea
mov
xchg
cmpsb
addr16
out
ret
fisubrl
iret
ds
sub
lods
lea
int3
ss
std
xchg
pop
les
cmp
mov
ja
dec
xchg
ljmp
test
jmp
outsb
jp
subl
int3
mov
sbb
mov
enter
dec
pusha
cld
js
xor
pop
dec
fistpll
fwait
mov
lods
pop
adc
push
lods
pushf
xchg
scas
lock
add
inc
mov
sub
jg
mov
in
sbb
mov
fs
fdivrl
xchg
jbe
push
ja
test
inc
add
sti
aaa
dec
xchg
inc
cmp
ljmp
xchg
pushf
enter
dec
cmp
stos
lock
cmp
or
cmp
jge
or
add
out
ret
sbb
ljmp
mov
add
cmpsb
les
fs
jmp
push
rcrb
xchg
dec
addb
imulb
popf
ret
notl
lods
subl
cmp
mov
pop
inc
leave
fists
ljmp
push
push
lods
aam
xchg
daa
xlat
sbb
sbb
hlt
lfs
jae
inc
sub
into
and
adc
adc
rcll
pop
jecxz,pt
pop
xor
mov
dec
lds
jp
lods
movsl
push
adc
sbb
lods
rcll
sbb
mov
rcrb
sti
out
mov
repnz
and
ficoms
sbb
xchg
jbe
fildll
jle
js
test
push
mov
clc
data16
cwtl
push
push
xchg
adc
pop
fstps
mov
jg
pop
xchg
scas
insl
insb
dec
popf
cmp
or
push
jmp
aam
cltd
or
push
cmp
pop
outsl
nop
mov
push
shr
cmp
dec
push
cmp
mov
fs
xchg
leave
inc
pop
outsb
fcompl
lret
xor
popf
inc
sbb
loopne
mov
inc
pop
in
xor
xchg
cli
ret
jns
adc
jae
nop
jne
insl
cmp
sbb
inc
int
push
jg
sti
add
xor
adc
mov
jle
mov
xchg
or
pushf
ret
sub
movb
movsl
sbb
jne
xor
dec
mov
loopne
jp
sbb
stos
sahf
lods
lret
adc
push
dec
cli
flds
lahf
sbb
mov
jnp
aam
mov
xchg
and
and
into
pushf
push
mov
xchg
andb
out
sti
bound
pushf
jnp
push
add
pop
test
mov
pushf
xor
mov
mov
add
mov
jge
sub
jnp
push
call
jg
les
xor
arpl
cmp
pop
jae
jb
push
lcall
cli
out
fdivl
fisubs
or
popf
fdivs
and
add
mov
push
scas
bound
mov
dec
cli
cs
xchg
sbb
lret
adc
icebp
negb
fsubl
mov
pop
pop
stc
xchg
cwtl
push
xchg
repz
cmp
and
push
mov
inc
leave
les
cmp
mov
cmpl
mov
and
arpl
push
notl
add
xor
pop
sbb
jg
mov
adc
pop
pop
fldenv
ds
adc
mov
cmpsl
mov
fidivs
xor
fadd
or
ljmp
cmpsb
das
jae
sbb
xchg
cmp
mov
dec
lcall
test
fs
iret
sbb
sub
inc
xchg
jmp
mov
pusha
sub
pop
pop
retw
ss
mov
cmp
cmpsb
xchg
enter
ret
cmp
pop
sub
sbb
mov
out
jge
mov
stc
xchg
dec
jb
ss
flds
repnz
fistps
negl
xlat
iret
repz
add
xchg
rorl
fdivs
fistl
mov
movsb
xor
pop
jle
lret
jl
sti
adc
push
cli
jge
sbb
xor
pop
adc
fbld
movsl
sub
pop
jl
call
or
xchg
pushf
sbb
repz
pop
pop
mov
lret
dec
sbb
push
pop
mov
xchg
sti
pop
xor
cmp
sbb
mov
sbb
lock
or
sbb
sub
repnz
mov
and
xchg
mov
out
sbb
fnstcw
pop
subb
and
push
jne
jbe
mov
in
jle
or
lea
pop
and
adc
fsubrs
pop
cmp
rcll
mov
mov
xchg
sbb
lret
enter
xor
int3
push
cmpb
aaa
cmp
rolb
out
mov
and
adcl
mov
cmc
jo
jg
jns
fisttpll
xor
jg
fildll
jg
fldcw
xor
nop
mov
ja
cwtl
dec
rclb
pop
mov
pop
std
enter
cmp
out
jp
dec
ret
lahf
lahf
cmpsl
loopne
jl
ja
arpl
xchg
cli
enter
mulb
adc
repz
xchg
fcomp
ss
lods
out
sbb
addl
jns
xchg
sti
hlt
and
int3
mov
outsl
lret
mov
xor
xor
repnz
lods
mov
jnp
test
dec
jb
mov
loop
xchg
pop
push
mov
jl
pop
iret
repnz
cli
sub
mov
dec
adc
movsl
push
mov
lahf
fdivs
test
mov
sub
stos
stos
mov
xchg
and
test
push
jno
mov
mov
mov
jecxz
imul
sbb
jno
mov
stc
pop
sti
fcoms
das
fdivs
pop
mov
and
imull
cmpb
data16
ret
sub
aas
adcl
nop
jge
inc
xchg
push
add
js
pop
adc
mov
add
adc
mov
inc
and
sub
testl
loopne
mov
sbb
aam
lock
jle
inc
xor
or
mov
push
xlat
mov
jecxz
cmc
sbb
xchg
cmp
gs
xor
stos
out
stos
lahf
sti
stos
pop
nop
mov
out
cmp
add
cli
fs
cmp
sbb
arpl
mov
lcall
sbb
xor
mov
cmp
fwait
int3
gs
sbb
jg
jo
push
sub
lret
je
sbb
negl
sbb
fdiv
pop
dec
sti
add
jecxz
or
mov
push
fstpt
xchg
mov
pushf
mov
stos
mov
mov
sti
stos
or
xchg
and
bound
imul
jno
cmp
mov
push
xlat
sub
adc
aam
pop
cmpsl
mov
inc
repz
hlt
mov
clc
jbe
shlb
cltd
xor
inc
pop
cmc
fcomp
aam
stc
mov
lcall
adc
xchg
in
push
xchg
xorb
mov
fdivl
int
pop
test
loopne
adc
loope
test
cli
push
push
mov
fs
lahf
lds
mov
hlt
pushf
cmp
aas
pop
stos
cmp
xor
push
and
scas
mov
jno
aaa
leave
pop
mov
in
dec
mov
call
enter
mull
mov
cli
cmc
pop
in
mov
sub
pop
int3
pop
mov
loopne
mov
inc
add
nop
push
shl
mov
sbb
add
faddl
dec
fmull
jle
notl
inc
enter
xchg
pop
outsb
push
xor
jg
cmp
mov
orl
add
iret
int3
sbb
out
sbbl
scas
cmp
pop
inc
lret
sbb
negb
iret
ds
add
aaa
mov
repnz
or
fdivr
das
xor
mov
loopne
fdivs
movsb
mov
aas
and
xchg
pop
or
call
push
ss
push
sub
cltd
int
cmpsl
lods
arpl
cmp
mov
xor
mov
lcall
cmpsb
fldt
stos
mov
cmp
sbb
shll
inc
jg
lea
and
pushf
jb
clc
jns
mov
pop
push
cmp
inc
mov
cli
les
test
aas
dec
stos
int3
cmpsb
jl
cltd
xchg
mov
inc
dec
out
aam
fsubrl
adc
popa
fs
fcompl
mov
in
cmp
into
bound
fwait
sti
mov
mov
pushf
cmpsb
xor
test
jg
mov
mov
cli
add
fists
gs
push
pop
fmuls
cwtl
pushf
jae
cld
enter
dec
fistpl
and
push
xchg
xor
push
push
enter
jns
fs
pop
mov
mov
outsb
aaa
cmpsb
inc
stc
cmp
mov
stc
dec
popa
sahf
pusha
dec
jp
int3
sbb
mov
lock
push
nop
out
pushf
jmp
push
test
mov
inc
pop
cmpb
shll
xchg
jbe
cmp
jnp
mov
ficomps
fdivrs
sub
gs
sub
sub
popa
insl
push
inc
jg
jns
fisttpl
ficoml
movb
cmpsb
jp
mov
push
adc
out
rcrb
and
orb
stc
incl
mov
xchg
out
sahf
lods
arpl
mov
xor
push
popa
sahf
ret
stos
scas
and
xor
adc
xchg
pop
jecxz
inc
out
sub
mov
out
in
out
mov
xchg
fcomps
test
jo,pt
mov
inc
repz
lods
fwait
iret
rorl
push
mov
lcall
mov
cmp
rolb
notb
mov
popf
inc
cmpb
or
fs
shll
repnz
outsb
in
xchg
xchg
test
iret
test
pop
aas
test
inc
sbb
addb
push
mov
mov
ja
in
push
mov
add
out
call
mov
sbb
sbb
push
mov
fmull
aad
pop
jbe
movsb
dec
cmpsb
lock
mov
inc
fcoms
and
lahf
adc
add
sbb
push
sbb
popf
mov
data16
pop
jmp
inc
push
xchg
pop
testb
out
sub
dec
loop
jmp
mov
inc
jmp
jmp
inc
mov
inc
sbb
push
and
mov
pop
jecxz
xor
push
jne
dec
fidivrs
icebp
iret
sbb
hlt
pop
call
adc
std
jae
add
fists
cmp
sbb
cmp
xchg
mov
push
cld
ret
cli
leave
aam
aam
pop
pop
inc
mov
mov
icebp
call
xor
cld
mov
mov
pop
jle
into
mov
mov
je
jbe
jmp
fs
loopne
add
sbb
nop
cmp
std
pop
dec
call
out
lods
pop
xor
pop
je
sbb
mov
lret
cmc
sti
inc
mov
data16
inc
cmp
lret
hlt
icebp
es
andb
stos
dec
cmp
scas
sbb
lock
std
sbb
mov
xor
cmp
xchg
pop
frstor
jp
shlb
clc
fistpl
push
clc
sub
inc
popf
ficomps
xor
pop
or
ret
xor
adc
sti
and
int3
repz
inc
adc
jecxz
mov
loopne
mov
out
ja
and
cmp
mov
repnz
cmp
shll
in
jp
stos
mov
out
and
pop
data16
das
or
scas
loop
into
in
fnstsw
imul
je
mov
les
sub
mov
in
popf
fsubs
sbb
push
adc
cltd
cltd
loopne
cwtl
or
or
out
sahf
pop
addr16
lret
or
sahf
lahf
mov
test
popa
pop
sarl
mov
movsb
inc
test
pop
jo
inc
int
in
fstpl
fstps
fnsave
das
inc
cmp
cld
lcall
aaa
outsb
minps
xlat
fsin
add
aad
mov
push
repnz
icebp
xchg
pop
jo
aas
push
fs
out
stc
adc
movzwl
ljmp
scas
scas
sub
mulb
dec
pop
mov
ret
test
xor
in
outsb
mov
leave
mov
mov
loop,pn
sbb
pushf
jo
sub
inc
data16
mov
dec
xchg
repnz
or
add
mov
lret
popf
mov
jbe
movsb
jge
pushf
push
xchg
sub
sbbb
xchg
jnp
rorb
adc
cmp
aad
sbb
enter
test
rep
inc
inc
fcom
test
mov
fs
ret
jbe
xchg
sti
lods
xor
push
push
push
mov
sarb
popa
or
xchg
in
adc
and
aaa
jp
inc
or
sbb
xor
scas
aad
fldt
jmp
pop
sbb
ja
xchg
cmp
icebp
mov
pusha
in
cld
mov
jp
add
mov
xchg
dec
pop
xor
in
fcomps
test
ss
out
inc
adc
adc
add
ret
jmp
test
sbb
shll
into
jae
adc
enter
cltd
shll
aaa
xchg
inc
out
xchg
dec
xchg
stos
pop
btr
mov
dec
jg
and
jg
aaa
lods
dec
shr
lods
cmpsl
mov
pop
sub
ss
call
lcall
sti
sbb
jmp
ljmp
pop
mov
sahf
rclb
mov
mov
bound
cmp
test
mov
xchg
fmuls
jg
es
fiadds
in
inc
xor
add
pop
cmp
push
pop
lock
int3
cmpl
mov
out
jg
arpl
out
and
cmp
jb
notb
mov
pusha
adc
push
test
dec
xor
pop
xchg
sbb
mov
mov
mov
mov
xchg
adc
leave
bound
pop
fdivs
mov
fsubs
add
xchg
js
mov
enter
lahf
ret
dec
jne
mov
jae
fldl
push
jns
push
pushf
pop
adc
lods
pop
repz
fcompl
pop
inc
pushl
pop
enter
jl
jmp
xchg
adc
scas
mov
push
aad
and
jl
std
mov
fs
mov
lret
out
and
repz
call
and
cltd
dec
cwtl
pop
or
repnz
sub
xchg
and
mov
nop
xor
fstps
call
mov
out
lcall
jmp
adc
aaa
std
cltd
pop
mov
mov
dec
pop
movsb
jb
xor
sbb
int
and
and
cwtl
sbb
xorb
out
mov
idivl
adc
lret
jae
jl
jle
push
popa
or
in
mov
mov
mov
push
and
adc
cmp
and
sbbl
icebp
dec
push
or
jmp
sar
xchg
sub
repnz
fdiv
nop
iret
cmpsl
mov
stc
add
imul
mov
mov
out
jns
data16
adc
aam
lods
mov
push
jle
sub
xor
cmp
out
fldenv
mov
xchg
addr16
push
add
insl
in
fdivs
xor
adc
loop
jb
mov
inc
dec
mov
sbb
cmp
lds
test
cmp
xchg
jecxz
lea
adc
xchg
mov
sbb
clc
lahf
pop
sub
jg
sbb
push
pop
es
dec
or
push
xor
stos
pop
notb
sahf
mov
and
or
jmp
lock
mov
scas
sti
lahf
push
ficoms
jmp
and
mov
xchg
push
sbb
mov
mov
bound
pop
orb
sti
test
fidivs
mov
aas
adc
or
mov
adc
gs
data16
es
or
js
mov
mov
jl
or
pop
dec
cmp
push
mov
lret
mov
xor
lcall
inc
hlt
movsb
mov
pop
mov
jg
pop
add
cmpl
mov
ja
jmp
cmpsb
sbb
clc
xchg
add
fprem1
lods
sti
adc
pop
cmp
insl
pop
or
sbb
rolb
cmp
adc
cmpsb
mov
mov
inc
cmp
loopne
jo
adc
jmp
fnstsw
sbb
pop
inc
into
inc
pop
rclb
sbb
add
pop
mov
cld
ret
shll
dec
shr
inc
loope
aad
pop
int3
test
or
pushl
cwtl
into
enter
sbb
jno
imul
adc
aas
jp
dec
dec
jo
push
push
jg
faddl
add
js
sti
negb
sbb
push
xchg
stos
adc
lcall
lea
mov
jo
jmp
rcr
rorb
rcrb
cmp
loope
cmp
int
mov
mov
pushf
adc
pop
mov
repnz
inc
xor
js
rol
cmpsb
ja
mov
sbb
daa
pop
mov
fistpll
xchg
sbb
jo
jp
fcoms
fwait
imul
jno
js
jle
ret
xchg
dec
and
push
sbb
idivl
add
hlt
pop
mov
and
mov
xchg
es
test
cmp
stos
sbb
or
fiaddl
cwtl
nop
or
mov
pop
or
add
xchg
inc
fnstsw
jge
adc
loopne
outsb
mov
mov
mov
mov
fnstsw
add
add
mov
aaa
adc
cmpsl
out
and
push
sbb
in
jo
shlb
adc
pop
scas
sti
test
jl
cmpb
cld
paddd
loope
mov
or
adc
ljmp
arpl
mov
stos
shll
adc
push
jb
fcmovnb
lods
cmp
sbb
sub
mov
mull
jne
cwtl
lock
repz
std
out
xchg
and
jp
es
sbb
and
and
bound
mov
add
divb
inc
sbb
push
in
pop
movsl
decl
adc
stos
leave
mov
or
fmulp
fdivr
cwtl
sub
xchg
fistps
repnz
adc
fidivrs
mov
stc
add
aas
and
cld
mov
fs
mov
jp
ret
inc
mov
cmp
lret
mov
jg
mov
xchg
std
andb
ret
cwtl
cmp
lcall
mov
movl
lret
cld
pop
mov
mov
decl
insb
mov
sarl
scas
pushf
push
shl
mov
add
popf
lea
unpcklps
mov
loope
pop
push
pushf
xlat
mov
adc
jnp
iret
push
and
aad
push
mov
xor
jp
sbb
mov
test
js
xor
sbb
sub
xchg
outsl
nop
pop
add
rclb
mov
mov
mov
lret
out
mov
sbb
mov
cmp
jb
fstpl
in
push
int
cmpsl
sub
inc
sbb
adc
mov
push
mov
jg
fstps
mov
jg
rol
jne
pushf
push
rclb
aas
and
fsubrs
orb
xchg
sbb
adc
and
pushf
repz
sbb
jge
leave
and
push
mov
push
and
inc
std
xor
xor
pop
pop
icebp
cli
adc
cmpsl
pop
mov
mov
aas
mov
jle
aas
mov
push
andl
jns
mov
sbb
fstpl
xchg
pushf
xor
inc
cld
repnz
adc
int3
mov
push
pushf
pop
test
xchg
inc
ljmp
inc
shlb
shll
lcall
mov
setle
pusha
xlat
push
jl
test
call
pop
or
and
cli
test
add
mov
pop
paddusw
aad
fisubs
int3
test
jno
lock
mov
adc
js
sbb
xor
xchg
ret
call
jno
or
loopne
sti
and
dec
adc
adc
ja
lret
in
mov
std
mov
enter
lea
mov
mov
lret
jl
ret
cmp
mov
sbb
mov
in
push
cli
hlt
dec
iret
fcoml
jmp
dec
lcall
jb
mov
dec
inc
add
cs
inc
call
cli
dec
into
add
cmp
js
lahf
jnp
das
test
aaa
push
push
dec
fcompl
movsl
sub
stc
cwtl
pop
movsl
int
pop
add
cwtl
sti
xor
jae
pushf
fmull
aam
mov
push
cmp
pusha
inc
fdivrs
jo
mov
sti
mov
mov
sti
xor
xor
mov
push
pop
sub
or
inc
mov
lret
dec
adc
cmp
shl
popl
iret
mov
scas
mov
sti
icebp
dec
cli
mov
and
fildl
inc
out
sbbb
pop
dec
jecxz
push
pop
pop
pop
inc
xchg
push
les
jmp
repnz
cli
out
lods
bound
mov
mov
mov
push
test
ret
mov
xchg
dec
or
loopne
fucomp
cmp
andb
cmp
aas
fstpl
fdiv
and
pop
cmp
and
call
push
ds
pop
mov
clc
push
xchg
mov
dec
mov
je
xor
nop
stos
pushf
xor
mov
pop
addr16
xor
push
lea
sbbb
pushf
jecxz
xor
rorl
pop
rorb
outsb
jle
popa
roll
adc
sub
cmp
push
xor
test
or
xchg
sbb
outsb
decl
dec
inc
cmp
repz
cli
push
loop
mov
in
mov
mov
pop
jno
test
and
xor
pxor
dec
mov
das
mov
cmpsl
daa
pop
fdivl
push
test
mov
fdivr
sub
cmp
in
xor
ja
shll
lahf
popf
pop
pop
lcall
cmp
jmp
mov
out
pop
mov
std
pop
sbb
lret
shll
mov
mov
sar
inc
das
mov
inc
das
lahf
fwait
jmp
inc
mov
pushf
lahf
sub
ficomps
mov
pop
test
out
in
inc
inc
je
xor
pop
mov
mov
mov
loop
sub
dec
cld
mov
xor
cmpsl
lods
hlt
js
enter
pushf
pop
adc
scas
inc
pop
cmpsl
lcall
mov
mov
cli
lahf
inc
daa
push
lock
cmp
aaa
mov
inc
cwtl
sbb
lds
sbb
movsb
stos
cmp
aad
push
lods
fsubl
adc
cmpb
rcr
mov
push
inc
faddl
lret
or
or
fsubrs
std
dec
fcompl
jbe
je
cmpsb
mov
pop
mov
rclb
into
mov
mov
jae
inc
mov
cmc
xchg
jmp
sbb
and
les
xchg
sbb
xchg
ret
mov
aam
addr16
icebp
movsl
add
fcomps
movsl
push
cld
fstpt
lahf
fists
call
fdiv
mov
icebp
mov
test
and
lcall
add
out
fcom
mov
jmp
cwtl
xchg
cmp
push
cmp
mov
fstps
mov
pop
iret
scas
out
lcall
xchg
mov
sbb
sbb
add
or
nop
mov
mov
in
xor
cmpb
scas
mov
xchg
push
loop
jmp
ftst
and
popf
mov
mov
test
insl
test
xlat
andl
mov
out
inc
pushf
xor
bound
pusha
test
xorb
cs
je
cmpsb
sti
cmpsb
outsb
repnz
xor
push
and
push
iret
fcomi
and
mov
lods
and
sbb
cmp
popa
push
pop
pop
jge
xor
add
cli
les
jmp
into
std
jg
jno
cli
std
adc
dec
ja
fstpl
pop
or
sbb
pushf
les
xor
es
clc
fdivrp
inc
lock
jl
cmpsb
imul
aas
or
jp
pop
lcall
adc
cs
xor
sbb
pop
fdivrp
test
cmp
movsl
aad
mov
cmp
cld
addr16
pop
adcb
mov
sub
cmp
add
mov
mov
mov
clc
push
jmp
fsubs
sbb
adc
jg
inc
loop
mov
repz
movl
and
loopne
lret
test
loopne
mov
mov
inc
xchg
jg
fdivr
add
mov
aas
sbb
ret
lods
mov
cmpb
int
ret
adc
mov
or
sbb
xor
mov
fsubrs
inc
cwtl
fdiv
test
sub
sahf
data16
aaa
leave
fldenv
xor
cmp
sub
int3
add
loopne
pop
lods
sbb
pop
mov
shrl
mov
dec
fwait
push
jle
outsb
xor
mov
stc
inc
xchg
fdivrs
cmpsb
aam
jg
jle
stc
leave
xchg
in
sti
fists
in
subb
jecxz
call
sub
sbb
xchg
test
sbb
xchg
cmp
shl
mov
mov
fwait
pop
call
notl
and
cmp
xorl
pop
or
ret
xor
into
test
ds
pop
pop
nop
mov
inc
mov
cmpsb
mov
xchg
mov
cmp
cltd
mov
cmp
insb
lods
mov
adc
scas
mov
sbb
arpl
dec
jb
mov
push
cltd
mov
bnd
push
ds
jmp
int
xor
and
push
fcompl
pop
dec
adc
js
movsb
sub
lret
sbb
movsl
xchg
aam
pop
mov
adc
mov
lret
ljmp
dec
push
movsb
mov
mov
sbb
fildll
xor
cli
lods
repnz
test
lock
push
stos
and
cmpb
xor
clc
pop
sbb
mov
push
push
mov
mov
cwtl
sti
loopne
push
fadds
cmpb
sub
aaa
jl
pop
and
movsb
inc
and
ret
popf
xlat
adc
pop
pop
sbb
sti
push
addr16
sbb
xor
rcrl
loop
or
faddl
fwait
insb
cmpb
mov
lahf
jnp
dec
pop
cmp
or
je
sbb
pop
cwtl
addl
sbb
es
sarl
ret
mov
out
clc
jb
adc
insl
mov
push
repnz
mov
inc
fstl
lods
push
mov
ds
fnstsw
mov
test
test
jo
add
xchg
imul
mov
dec
lcall
jb
clc
jns
mov
push
push
cwtl
adc
xchg
sbb
popf
std
sub
xor
sbb
loope
lods
js
cmp
mov
push
lock
stos
aas
sahf
sbb
movsl
jne
pop
hlt
xchg
jmp
adc
ljmp
xchg
pop
jnp
je
add
hlt
movsl
cmp
out
mov
sbb
lock
scas
pop
stc
xor
jne,pn
cmp
into
push
ret
fldl
aad
shrl
mov
je
fidivl
test
inc
int
and
mov
dec
stc
lods
imul
shrb
stos
add
mov
mov
loopne
lds
push
sbb
cwtl
lds
out
ret
mov
ljmp
sub
mov
inc
loope
sbb
aad
mov
call
xchg
sbb
repnz
test
mov
sbbl
je
mov
fwait
lods
cmp
push
pusha
fildl
push
xchg
and
mov
sub
mov
xlat
cltd
pop
jmp
adc
aaa
fwait
mov
fbstp
mov
repz
mov
mov
xor
sub
mov
movsb
jb
les
sub
out
mov
pop
sahf
mov
pop
xchg
pop
test
test
adc
fs
cli
mov
in
in
out
add
and
std
cwtl
scas
insl
stc
inc
pop
dec
sbb
aaa
mov
jbe
nop
bound
adc
xor
ja
xlat
lcall
pushf
dec
fmul
push
jmp
mov
adc
fwait
insb
fs
clc
int3
mov
adc
inc
fcoml
xorl
sub
shlb
cmp
addr16
stc
stc
aas
adc
xor
inc
lods
fcoms
repnz
lods
fdivrl
xor
inc
pop
clc
push
jle
xchg
ds
mov
add
mov
cmp
and
push
data16
sbb
int
insb
insb
adc
jecxz
mov
xor
addr16
movl
shrb
movsl
stc
sbb
and
mov
lods
pop
mov
pop
cmp
sbb
aaa
arpl
and
ljmp
in
pusha
fisttpll
addr16
popf
mov
aas
shll
xor
es
lret
lcall
pushl
or
xlat
xchg
xor
sbb
mov
lahf
sub
adc
pop
dec
mov
cmp
cmp
jnp
pop
and
sub
test
cmpb
out
pop
xlat
xchg
fistpl
jle
adc
mov
adc
stc
inc
sbb
mov
fdivrl
sub
jg
mov
and
arpl
push
cmpsb
or
les
xchg
push
or
fcomps
push
cvtdq2ps
or
fcoms
mov
push
lret
cmp
jns
jge
cmp
cmpsl
fwait
push
test
cmp
mov
pop
enter
pop
or
cmp
jle
mov
cmp
ret
push
lods
mov
mov
scas
fstpt
movl
xor
cld
push
out
jmp
je
mov
cltd
das
xchg
aas
in
push
jb
lcall
jg
loopne
out
hlt
fsub
stc
and
pop
ficompl
stc
aaa
jp
sub
pop
add
mov
xchg
out
ss
repz
lds
push
or
xchg
mov
lret
loope
dec
lods
loope
pop
pop
ss
push
inc
xchg
jnp
adc
shlb
std
loop
sbb
imul
mov
pop
arpl
sbb
xchg
push
mov
enter
aam
fcoms
mov
inc
addr16
sbb
js
mov
lcall
out
push
out
mov
sbbb
lods
mov
or
or
jg
xlat
lahf
adcl
in
ds
sub
shld
cmp
xchg
icebp
jnp
fsubl
mov
mov
shlb
daa
imul
push
sbb
xchg
sar
xchg
dec
mov
movsl
faddl
pop
test
xchg
imul
xor
in
test
sbb
aas
adc
inc
lea
push
ror
in
pop
cmp
mov
jns
xor
sub
xchg
lods
and
shrl
add
sub
into
enter
adc
push
mov
mov
add
jmp
mov
iret
add
shrl
jg
sub
cld
jge
sarl
shll
daa
scas
sbb
fstpt
adc
ficompl
xor
adc
sbb
mov
xorl
dec
mov
pushf
dec
pop
lods
das
and
idivl
inc
stos
cmp
mov
sub
mov
jnp
outsb
cmc
js
mov
xchg
and
jnp
idivb
pop
xchg
fsub
mov
mov
pop
repz
mov
or
jbe
xchg
mov
cs
jnp
mov
jl
mov
jnp
pop
xorl
pop
fistl
and
fdiv
jb
or
hlt
scas
dec
aas
xchg
rcrl
add
into
sub
adc
jae
sti
dec
aam
hlt
imul
fdivrl
aas
mov
out
xchg
test
add
adc
jnp
add
mov
fwait
xchg
hlt
scas
cmp
movsb
outsb
clc
cld
cld
aas
cmc
sbb
jg
imul
pop
mov
jle
fs
sbb
cmp
lea
and
jb
pop
xchg
fcoms
out
pushf
mov
sub
mov
mov
or
stc
hlt
scas
aas
fisttpl
jne
xlat
mov
in
jns
push
push
push
push
popf
cmp
ljmp
push
sbb
shlb
inc
adc
cwtl
or
jae
xor
fidivs
iret
sbb
jae
xor
out
loopne
ljmp
xor
notb
repnz
int
cmpsb
ret
scas
mov
xchg
sbb
mov
xor
arpl
and
mov
push
cmp
scas
sbb
pop
iret
xor
fwait
repnz
pushl
push
bound
pop
adc
jb
mov
mov
scas
fwait
scas
call
lcall
jb
cmp
lahf
fdivs
mov
lcall
jmp
xor
sahf
sbb
adc
movsl
xchg
out
rclb
sbb
and
push
daa
xor
repz
sti
xchg
xor
push
mov
rclb
out
cmp
aas
lea
mov
mov
mov
movsb
jecxz
aas
scas
sub
hlt
sahf
js
scas
fimull
iret
arpl
jns
jo
jg
cmp
jae
fildl
fcom
es
mov
mov
add
jp
pop
aad
add
ss
loop
pop
jl
pop
enter
ficoml
mov
fnstcw
fmull
punpckhdq
push
xchg
mov
out
loop
mov
add
mov
sbb
mov
mov
or
sub
inc
mov
mov
ja
shr
mov
adc
adc
inc
pop
mov
imul
xchg
dec
repz
mov
pop
lds
mov
sbb
movsb
jnp
das
inc
ret
inc
idivb
pusha
lock
xchg
add
inc
ficompl
inc
xchg
mov
sub
mov
repz
cmpb
rorl
xor
mov
sbb
loope
iret
faddl
push
push
or
cmpsl
sti
xor
cmpsl
mov
cmp
scas
xor
mov
dec
push
cltd
mov
xor
call
fisttpl
rorb
dec
pop
push
sbb
cmp
inc
ds
rcll
fisubl
mov
fucomp
insl
add
pop
notl
cld
clc
sbb
mov
mov
sub
sti
add
pop
sbb
out
lock
lret
call
imul
cwtl
js
shrl
popf
pop
mov
cmp
stos
mov
mov
mov
sahf
hlt
xchg
cmp
fildl
dec
cmp
std
push
inc
sub
mov
imul
loop
ja
dec
stc
pusha
jecxz
and
inc
movsb
add
pop
aas
sarb
cmp
insb
fs
cmp
inc
adc
int3
data16
cs
out
sti
stos
fmull
pushf
xchg
cs
add
gs
das
loope
sbb
lcall
cmp
push
dec
ja
loopne
lds
adcl
jge
lock
pop
jne
jbe
inc
fs
mov
add
xchg
lods
movsl
pop
xchg
cwtl
pop
and
xor
push
inc
fidivrl
sbbb
outsl
call
ja
add
jle
push
cmpl
cmpl
ds
subl
cmp
aaa
pushf
jl
rolb
repnz
clc
mov
xor
clc
test
fs
or
mov
pushf
lods
and
jb
mull
pop
push
ret
cmpsb
sti
cmpsl
xchg
pop
sub
pop
push
es
cmp
lods
div
xlat
jno
or
mov
pop
rorl
ffreep
clc
cmp
into
adc
mov
mov
push
enter
in
pmaddwd
push
les
xchg
dec
pop
aaa
dec
sbb
fcomps
sbb
mov
sub
repz
je
fcoms
pop
mov
mov
insl
mov
enter
repnz
inc
cli
dec
scas
mov
fcompl
add
mov
sbbl
mov
icebp
ja
out
rclb
or
sbb
cwtl
jne
mov
imul
mov
or
xor
scas
push
sbb
cmp
pop
cmp
mov
sbb
into
pop
jg
cmp
sbb
cs
pop
mov
mov
and
call
pusha
je
fsubr
dec
xchg
pop
sbb
out
cmp
mov
fld
lret
xchg
in
int3
push
jle
int3
repnz
cld
mov
mov
push
and
mov
and
xchg
fmul
sub
cmp
pop
lods
sbb
cmp
sub
push
loopne
and
push
pop
pop
test
sti
fsubrl
cwtl
add
incl
fs
fmull
lds
rcll
call
je
mov
sub
mov
fisubrs
jle
adc
mov
fs
daa
stc
fmull
fwait
jge
stc
xorb
stc
movb
xchg
pushf
rcrl
jp
bound
mov
daa
outsb
es
mov
push
cmp
mov
cld
shrb
and
cmp
xchg
imul
xor
mov
shlb
push
xor
aas
pop
jle
aas
sub
stc
lea
mov
push
aaa
xchg
test
sti
out
push
jge
pop
testb
out
mov
mov
divl
mov
xchg
fdivs
mov
mov
xorb
push
testb
jnp
addr16
sahf
adc
movsb
fdivrs
fs
sbb
addb
inc
cmpl
cmp
jg
xchg
push
cmp
xchg
cmp
sahf
pushf
pop
pop
gs
adc
sbb
lahf
pop
ds
mov
pusha
inc
scas
sbb
pop
sbb
push
push
cmpb
jge
loopne
nop
mov
ret
test
pop
jmp
in
mov
test
mov
lods
mov
enter
cwtl
pop
idiv
sbb
lds
mov
mov
shrl
xchg
movsl
cld
cwtl
sahf
xchg
push
lock
or
shlb
jle
xchg
mov
ud1
xor
movsb
out
add
pushf
add
je
inc
aaa
cli
mov
mov
mov
cmp
out
stc
fcoms
mov
ja
mov
adc
rorl
sbb
add
cwtl
lods
cmovnp
fldl
sti
pop
cli
out
stos
mov
popf
pop
loopne
sub
cmp
sbb
sub
mov
fcomp
xor
pop
stos
ret
sub
dec
push
sub
fists
mov
sub
pop
cs
test
mov
push
or
cmp
dec
sub
xorb
sbb
pop
xor
and
xor
push
shlb
ja
xchg
cwtl
lods
xchg
dec
xchg
fwait
je
pop
sub
addl
pop
mov
sti
mov
frstor
mov
xchg
sahf
mov
fmuls
xchg
cwtl
rcrl
popa
enter
push
in
fcomps
push
add
mov
add
leave
in
adc
sbbl
mov
fs
cwtl
sbb
fwait
scas
into
ljmp
cmc
sbb
cwtl
dec
inc
mov
fbstp
into
dec
jmp
dec
mov
fnstcw
aas
sub
lock
in
int
mov
rorb
fdivrl
pop
les
adc
dec
mov
pop
rcll
imul
mov
or
sbbb
cli
xchg
fisubrs
jb
in
call
sbb
mov
adc
pushf
pop
stc
mov
mov
xor
jnp
incb
test
clc
mov
iret
ret
add
fwait
mov
cmp
movsb
aam
sbb
cmp
mov
enter
mov
insb
push
xchg
push
ja
shll
jae
push
mov
lret
and
jns
gs
aam
das
lea
fwait
sbb
js
mov
jp
inc
sbb
mov
loopne
mov
cli
push
cmp
adc
jo
dec
lcall
xor
jno
xor
inc
inc
ds
std
push
mov
jnp
stos
sti
adc
mov
jp
xchg
dec
push
je
lcall
sub
sub
or
xchg
xor
cmp
test
cltd
cmp
cwtl
incl
inc
data16
mov
fisubl
add
mov
data16
pop
ds
test
push
aaa
fdivrs
cmpb
xor
ret
fadds
push
cmp
inc
lock
scas
in
sbb
push
cli
dec
jne
imull
push
mov
sbbl
inc
sbb
sub
outsb
ljmp
pop
or
mov
jae
lock
insl
enter
lcall
cmp
fisttpll
insb
jge
sbb
cmc
cli
sub
xchg
mov
cld
fldenv
mov
jae
in
dec
stc
mov
push
adc
imul
add
mov
pop
in
scas
stc
mov
in
mov
cmpsl
cmp
aaa
pop
jle
mov
jle
add
into
mov
sub
loope
add
rcll
pop
outsb
repnz
fwait
cmpsb
dec
xchg
test
bnd
sub
dec
dec
jp
fdivrs
jbe
cld
lret
aam
out
enter
mov
pusha
cmp
fwait
sti
enter
out
add
jae
pop
pop
hlt
xor
leave
xchg
je
cmp
sti
inc
xor
frstor
pop
mov
mov
inc
cmp
lods
testl
mov
ljmp
xchg
rcll
scas
movswl
mov
dec
pop
and
decl
mov
ss
fsubl
jle
loop
int3
aad
dec
test
fldt
xchg
shrb
cmp
push
cld
lcall
push
fisubl
es
in
mov
push
sar
mov
dec
jb
lret
xchg
fdivl
call
jae
shl
rolb
push
lea
sub
mulps
outsl
cmp
repz
ds
jbe
in
shlb
mov
ret
outsl
sbb
push
cmp
push
xchg
pop
test
mov
jge
js
push
pushf
sbb
xchg
cli
dec
mov
flds
cli
sub
fnsave
sbb
add
lods
and
mov
xor
xor
mov
inc
push
mov
in
mov
pushf
andl
mov
ds
mov
sarb
shr
inc
inc
dec
lahf
jg
scas
loope
add
pop
jle
sarl
jle
sarl
bound
pop
fsts
push
lcall
insl
push
mov
divb
js
mov
outsb
mov
pop
fcmovbe
idivb
xor
cli
cs
fs
cmp
orb
movsb
cltd
pop
lahf
adc
sub
xor
pop
inc
cmpsl
jns
mov
mov
or
popf
lock
scas
repnz
cld
inc
xchg
sbb
and
int3
cmp
push
adcl
rclb
mov
sub
jne
shll
jb
inc
dec
in
push
or
lea
mov
loop
mov
cli
jmp
aam
pop
push
leave
outsb
cwtl
arpl
aas
loope
xchg
jle
add
jl
sub
jmp
cli
stos
mov
sbb
dec
sahf
adc
cmp
mov
push
xchg
sbb
loopne
sbb
cmp
mov
or
cmp
push
adc
cli
mov
mov
push
repz
sti
movsl
mov
mov
xchg
mov
xchg
loope
jge
jb
xchg
sti
dec
mov
and
clc
fldcw
jo
pop
cvtps2pi
in
test
inc
jl
pop
adc
mov
jbe
adc
enter
lcall
dec
xchg
outsb
mov
push
sub
fwait
mov
cmp
jno
mov
lahf
inc
leave
cmpb
loopne
jecxz
add
fcomps
xchg
jecxz
test
outsl
stos
rcr
xor
insl
negb
jl
cmp
andl
push
and
jp
pop
xor
jne
mov
jmp
shll
jp
std
xchg
dec
sbb
cwtl
lea
pushf
lods
mov
cli
mov
mov
cwtl
inc
loop
dec
fsub
inc
lret
bswap
mov
pop
movsl
rcr
inc
call
ret
sbb
xor
inc
loop,pt
adcb
mov
testb
xor
cli
cmp
dec
xlat
jmp
dec
xor
cmc
mov
cmp
pop
jne
in
dec
lret
popa
sbb
es
push
add
cmpsl
mov
test
xchg
xor
ljmp
jge
dec
int3
out
cmpl
loop
lcall
mov
cmp
mov
dec
mov
pop
and
mov
cs
xchg
cwtl
push
xchg
cmpsb
rolb
repnz
pop
js
pop
fstpt
and
xor
test
adc
loope
xchg
adc
repnz
add
mov
jns
push
sti
lret
fs
repnz
cmp
jne
les
sahf
call
jb
add
pop
jae
lea
jge
mov
int3
in
mov
out
std
jge
jne
test
sbb
inc
inc
push
cli
fistps
leave
out
jns
cmpsb
movsl
sti
out
add
xchg
testb
sahf
jecxz
aaa
push
ss
mov
pushl
out
mov
inc
or
fwait
cld
mov
mov
sti
repz
inc
sub
repz
out
or
addb
cmp
aam
jmp
lahf
jnp
call
lock
jo
push
jle
xchg
addr16
add
mov
sub
out
sub
inc
inc
adc
adc
leave
cltd
dec
ret
xchg
adc
cwtl
inc
cld
in
sbb
js
shll
loopne
pop
popf
testb
mov
test
or
test
pop
cmp
call
hlt
popf
pop
add
lahf
fistps
sbb
je
push
jmp
fs
mov
inc
or
sti
cmp
cmpsl
xor
pop
call
pushf
in
cmp
sbb
add
pushf
push
pop
decb
stos
icebp
xor
loop
or
xchg
js
or
adc
rcrl
out
in
fmuls
mov
push
insb
mov
scas
cmp
inc
lods
xor
dec
clc
pop
xchg
ret
test
sti
int
je,pt
sbb
adc
loopne
stc
mov
mov
cmp
cmp
inc
adc
or
xchg
pop
add
dec
push
ljmp
sahf
fwait
and
xor
mov
pop
ret
mov
fcomps
jmp
sub
adc
pop
push
jp
sub
mov
push
jle
adc
sub
enter
xor
stc
mov
in
add
rclb
adc
pop
push
push
mov
push
sub
cmp
mov
pop
das
sbb
out
add
pushf
pop
push
jno
lcall
mov
seta
imul
movsl
in
rcrl
inc
in
stc
inc
cmp
xchg
rcl
in
pop
stos
mov
mov
mov
and
push
in
mov
aas
cmp
mov
cld
pop
inc
fs
sub
cmpsb
cwtl
fcomps
inc
xor
movsb
lods
cld
mov
aad
pop
pop
ds
lret
jg
out
in
pop
inc
in
jecxz
xor
lea
cltd
mov
adc
xchg
jp
mov
inc
xor
jg
xor
mov
fistps
mov
ret
test
dec
ds
mov
push
lahf
dec
pusha
clc
cld
sbb
mov
inc
lcall
add
imul
cmp
fldcw
lock
popa
cmp
outsb
rorl
jle
loope
and
nop
fdivr
or
mov
push
test
jl
sti
leave
test
jl
mov
cwtl
mov
xchg
shl
fmull
dec
fwait
mov
cmpsb
mov
sbb
sti
sti
mov
xor
cmc
stos
mov
jmp
xchg
das
sbb
xchg
and
mov
mov
out
out
sti
dec
mov
xchg
mov
xchg
pop
jb
and
pushf
fs
ret
push
sbb
jg
in
imul
pop
int
pop
sub
pop
cmp
aas
jecxz
and
and
pop
inc
jp
inc
cltd
stos
dec
jb
lret
addr16
xchg
cmp
sub
adc
ljmp
ljmp
pop
cmp
sbb
jp
idivl
sbb
dec
xor
inc
pop
mov
cmp
sbb
push
sbb
pop
mov
repz
cs
mov
fmuls
mov
imul
pusha
xchg
xor
pop
xor
fadds
nop
stos
jl
dec
sub
aaa
jecxz
push
sbb
cmp
push
pushf
pop
adc
hlt
sarb
jl
mov
add
dec
insb
mov
iret
and
fstpl
sbbl
cmpsl
mov
pop
pushf
add
add
jg
loope
lret
test
and
pop
mov
push
mov
mov
cltd
fcmovb
jo
clc
push
pushf
sti
int3
movsl
mov
jmp
sbb
mov
push
xor
sbb
mov
inc
dec
mov
in
xor
sahf
push
mov
cmp
push
cltd
pop
sbb
jle
and
add
mov
cmp
daa
ds
xorb
xchg
mov
cmp
mov
jmp
hlt
lock
iret
sbb
loop
sub
mov
pop
xor
dec
dec
xor
loopne
das
and
mov
jmp
xor
xchg
rorb
fdivrs
movsb
cld
adc
mov
mov
pop
loopne
xchg
fdivl
aaa
inc
dec
push
sbb
xchg
dec
movsb
in
xchg
aaa
enter
sti
aas
adc
push
aas
pop
outsl
inc
dec
xchg
sub
xlat
xchg
cmp
loope
inc
inc
adc
xchg
or
loop
sub
mov
shr
cli
int3
das
xor
arpl
js
cmp
fwait
shlb
dec
jb
sub
jae
addr16
movsl
mov
push
enter
insl
xchg
xor
xchg
push
js
jno
sbb
fcmove
sbb
pop
add
shlb
loope
inc
xchg
mov
test
lds
orb
aas
sbb
xlat
jl
mov
pushf
imul
cmpb
pusha
inc
movsl
lret
xchg
cmpsb
jne
push
ds
mov
mov
pop
inc
pop
dec
fdivs
cwtl
std
cmp
pop
clc
jno
imul
jbe
and
xchg
repz
pop
test
popf
jmp
test
int
call
xchg
cld
pop
inc
dec
cmp
sub
cltd
xchg
jecxz
sbb
and
jae
and
adc
xchg
nop
ret
scas
enter
adc
cmp
cmpsl
ffreep
inc
mov
push
sbb
and
pushf
pop
out
mov
jle
xor
test
mov
cmp
inc
stos
repnz
ja
mov
outsb
mov
pop
fs
mov
popf
sub
fistpl
pop
in
pop
pushf
mov
nop
fdivl
dec
fs
cld
and
in
sarb
out
shlb
pusha
sub
inc
pop
pop
mov
cwtl
fwait
shll
mov
mov
loopne
xchg
adc
out
bound
or
pushf
das
mov
js
lahf
mov
mov
nop
inc
repnz
jb
out
call
pop
lret
cmp
pusha
pop
mov
sahf
incb
xchg
ret
adcl
mull
int3
scas
leave
push
das
cmpl
and
pushf
sbb
lret
dec
js
fsubl
pop
sbb
in
xor
jmp
sbb
hlt
mov
and
pop
sahf
xor
jge
shl
push
pop
jle
and
add
cmc
loopne
cmp
loopne
fwait
mov
into
test
mov
jp
pop
aas
push
sahf
out
shlb
test
gs
cmp
jle
shlb
mov
push
lahf
test
jg
mov
in
cmp
jae
aam
sti
and
aaa
test
push
mov
enter
hlt
pop
jle
mov
cmp
out
adc
and
jno
mov
adc
or
popa
push
xchg
cld
cmpsl
data16
inc
cld
dec
jnp
mov
fwait
mov
adc
movsb
xchg
mov
jbe
notl
jp
bound
mov
cmpsb
sti
in
add
sub
rcrl
les
mov
fadds
sub
popf
mov
das
dec
jle
cli
rorb
xchg
test
or
xchg
rclb
clc
pop
mov
and
mov
fists
pop
jle
cmp
mov
repz
mov
xchg
sbb
sbb
subb
int
xor
ds
cmp
int3
pop
rolb
sbb
mov
idivb
xor
jbe
icebp
pusha
mov
test
cli
or
lea
repnz
xchg
pushf
out
cmpsb
sub
les
mov
sub
push
fisubs
and
aad
pop
mov
shll
mov
xchg
inc
push
pop
cwtl
faddl
and
jge
and
lea
scas
adc
or
cmp
imul
mov
cmp
xor
add
insb
push
cmp
sub
xchg
pop
xchg
pop
int3
cwtl
mov
adc
inc
dec
and
jmp
aaa
pop
jp
xlat
mov
fildl
sbb
mov
mov
inc
mov
pop
rcrb
push
or
cli
cmpsb
mov
movsb
pop
and
sbb
jae
adc
mov
inc
lds
push
jb
je
mov
es
movswl
sub
mov
lods
xchg
sub
js
pop
cli
adc
jg
das
call
push
rcrb
lods
stos
mov
shlb
push
and
mov
fnsave
lcall
pop
into
pop
movsb
loopne
mov
mov
fdivl
fwait
mov
jle
in
sbb
sti
sub
nop
jnp
mov
xchg
xchg
popa
xchg
shll
pop
mov
sub
pop
in
out
mov
xor
xchg
ret
mov
mov
cmp
fdivr
inc
inc
inc
shl
cmp
pop
sar
mov
sbb
popf
adc
cmp
pop
mov
mov
push
stos
imul
jb
xor
jge
cmp
jg
int3
popf
mov
test
mov
mov
inc
nop
fmull
rcrl
cmp
cmpsl
fwait
mov
mov
xor
std
scas
adc
sub
pushl
inc
negb
mov
and
test
ficompl
fcmovb
jno
jp
add
aas
jp
pusha
movsl
insb
jl
sbb
loop
int3
cmp
mov
sub
xchg
aaa
cmp
adc
mov
lcall
sbb
xor
push
ja
add
pop
out
sub
mov
je
mov
gs
fdivrs
adcl
cmp
test
dec
xchg
aaa
cli
add
push
mov
xlat
nop
fadd
es
call
mov
cwtl
sahf
out
jle
mov
cmp
shrb
jg
cwtl
movsb
push
jae
jl
leave
sbb
stc
jae
out
in
pop
int3
loop
xchg
mov
jl
mov
mov
xchg
lock
sub
inc
in
ljmp
fcoms
xchg
xlat
je
mov
movq
jno
pop
stos
jnp
icebp
out
into
push
scas
pop
enter
pop
add
pop
xor
ret
daa
jae
mov
imul
test
and
lret
shrl
bound
jne
or
cmp
popf
cmp
xor
clc
out
mov
data16
mov
enter
push
pop
movb
mov
cmpsl
dec
mov
movsl
mov
in
xor
dec
roll
dec
cwtl
jae
dec
mov
sbb
das
sub
pushf
arpl
movsl
jns
cmp
rolb
xor
fidivrs
das
and
movsl
aas
mov
push
leave
popf
ss
pop
sbb
dec
mov
jg
and
mov
cli
insl
lahf
ds
fwait
pop
jge
xchg
mov
repnz
xchg
mov
jmp
orb
cltd
fsubrs
inc
lcall
dec
cmpsl
out
nop
lods
pushl
ret
cmp
stos
jmp
dec
push
fimuls
pusha
push
mov
add
fidivrl
mov
adc
sbbb
mov
mov
jne
jbe
and
pop
jle
pop
shlb
data16
push
push
push
test
adc
pop
test
jo
jo
stos
repz
sbbb
jl
adcl
mov
out
push
cli
pop
xchg
sbb
xchg
push
mov
inc
pop
sbb
inc
add
pop
nop
arpl
sub
test
cmpb
push
sahf
cld
mov
icebp
xchg
sub
mov
xchg
leave
lahf
push
hlt
mov
mov
test
add
fmull
cmp
rolb
cmp
imul
daa
mov
in
pop
stos
or
xor
jmp
loope
or
andb
dec
sub
into
fnstenv
jbe
inc
out
push
rclb
pop
sbbl
in
jbe
xor
pushf
sahf
pop
fdivrl
jno
loope
push
cltd
sti
jo
addr16
rorb
repz
xchg
adc
daa
cmpsl
push
les
dec
pop
arpl
test
clc
xor
ret
sbb
rol
test
push
test
xchg
dec
stos
cltd
out
jb
xlat
addr16
sub
jl
cmc
cmp
je
loop
imul
call
adc
push
ds
adc
xchg
mov
scas
inc
fcmovb
int3
xchg
gs
pop
in
mov
xor
pushf
jo
int3
call
sbb
outsb
dec
aas
shlb
xchg
cli
and
pop
dec
out
cld
mul
xor
jge
xor
jle
leave
repnz
je
adc
inc
sarb
into
mov
pop
cmp
pop
push
adc
aam
scas
ret
xchg
ret
sbbb
in
fcomi
cmpsb
fists
jb
push
test
mov
adc
cwtl
cli
jb
daa
xchg
fmuls
hlt
clc
pop
fs
sahf
push
aaa
ret
out
setb
push
push
test
ss
xor
lods
into
xchg
clc
stc
xchg
lcall
mov
inc
test
es
stc
mov
je
cmp
lods
sub
push
xchg
inc
imul
mov
test
fdivl
arpl
leave
lds
sbb
mov
in
lahf
aaa
adc
jp
or
inc
cld
out
xchg
into
fnstsw
sti
fidivrl
sbb
pop
sbb
cmp
cltd
cmp
scas
stos
jnp
jno
in
mov
adc
shrb
mov
jp
mov
out
out
mov
jne
pop
js,pt
ss
mov
mov
dec
cwtl
cwtl
rcrl
pop
popa
jp
xchg
lea
cmp
cmp
sahf
adc
sub
aas
sbbb
cmp
pushf
fstl
push
lods
call
xchg
pop
lret
aam
adc
scas
in
sub
sub
outsl
pop
fs
add
and
idiv
sbb
mov
movsl
mov
or
int
mov
addr16
cbtw
jg
push
mov
mov
jns
hlt
cmp
movsb
mov
xlat
scas
and
outsb
stos
sub
icebp
mov
jne
mov
cmpl
sub
xor
pop
push
inc
lret
push
in
js
aas
jge
pop
mov
shll
sub
fidivrs
xor
lcall
inc
or
jg
cmp
mov
pushf
mov
push
ds
repnz
xchg
xchg
jge
xor
or
pop
xchg
sti
out
hlt
cmp
outsb
mov
xchg
mov
fnsave
pop
xchg
mov
sbb
iret
jns
sub
mov
pop
pop
faddl
clc
and
mov
scas
outsb
mov
hlt
push
adc
mov
dec
popf
pushf
fildl
mov
pusha
adc
ss
int3
shrb
aad
dec
lea
dec
add
cwtl
cwtl
or
dec
inc
adc
mov
out
xor
loop
mov
pop
sbb
fcmovnb
lods
pop
scas
and
push
or
sbb
call
xor
jne
arpl
cmpsb
fnstcw
adc
mov
add
in
jns
nop
cmp
into
jmp
cmp
mov
adc
rcll
pop
fdivr
jns
imull
cmp
jl
mov
scas
fwait
lcall
addr16
mov
enter
fmuls
cmp
cmp
xchg
lahf
mov
loopne
call
mov
pushf
es
xor
mov
jg
enter
pusha
jmp
xor
lea
xor
stos
inc
out
sub
call
adc
dec
pop
add
xchg
push
fucomip
dec
xor
mov
add
pop
int3
pop
adc
mov
ja
add
jne
mov
aas
xchg
lods
sbb
int
dec
dec
pop
int
lods
xchg
cmp
xchg
adc
fdivr
push
leave
popf
roll
fsub
stc
js,pt
mov
sub
pushf
jnp
inc
jne
lods
test
pop
mov
fdivr
sbb
xor
adc
cltd
ret
adc
xchg
cwtl
pop
mov
rcl
test
ds
mov
push
jno
pop
les
mov
es
fcompl
aas
pop
addl
jne
mov
inc
sub
mov
cmp
sub
jg
push
shl
mov
sbb
loop
cmpsb
add
subl
xchg
dec
adc
incl
mov
lea
inc
sbb
cwtl
mov
sub
in
fisttpll
repnz
lock
enter
popf
das
ja
lods
add
xchg
lds
xchg
cwtl
lcall
mov
mov
cmpsl
cwtl
cli
add
mov
mov
mov
fstl
enter
scas
pop
xchg
fsub
mov
xchg
pushf
je
jae
push
mov
not
icebp
jo
neg
cmpsb
adc
hlt
pop
out
sbb
cli
lock
jle
test
leave
call
mov
fists
mov
pushf
pop
loopne
jp
lret
and
cwtl
mov
sub
jnp
lock
cmp
decb
jge
xchg
inc
adc
mov
in
ficoml
pop
push
pop
shrl
int3
push
test
pop
pop
jp
cmp
push
ljmp
cltd
data16
popf
pop
cmp
mov
jne
in
pop
jne
xor
aas
mov
sarb
jno
push
aas
jbe
lret
xchg
sub
out
scas
sbb
cmovp
mov
or
xor
and
dec
fmull
lahf
sub
pop
cmp
and
jo
mov
orb
mov
nop
mov
cli
inc
or
stos
subl
jg
dec
sub
sub
xchg
jae
enter
adc
shll
das
xchg
or
mov
xor
in
cmp
je
cltd
cwtl
orl
lret
cmc
adc
cmp
mov
int3
xchg
cmp
mov
lods
or
push
in
ljmp
xchg
mov
sbb
aas
lds
lds
xchg
mov
sub
stos
and
xor
jmp
cmp
scas
push
mov
pop
fdivrs
mov
sbb
sbb
or
mov
loopne,pn
push
xchg
ret
xor
nop
aad
popa
clc
xlat
int3
jb
lret
pop
fdivrs
stos
xor
nop
sti
mov
push
outsb
rorl
stos
jle
mov
jmp
lret
cmp
lahf
sbb
adc
push
sti
rcr
insb
mov
cltd
sbb
hlt
inc
stos
ljmp
pop
mov
mov
push
xchg
cmpsb
mov
jle
aad
pop
inc
leave
sbb
mov
sbb
leave
cltd
mov
pop
rorl
dec
xchg
push
ja
fprem
mov
subl
fadd
iret
pop
aas
push
lock
sbbb
aas
dec
sub
les
xor
add
fsubr
scas
repnz
sub
fdivl
or
jg
sub
cmp
lret
clc
sahf
dec
jge
sti
outsb
daa
rclb
pop
inc
into
xchg
mov
les
sub
decl
in
add
filds
jnp
sbb
pop
aas
xchg
adc
enter
sub
sbb
mov
jmp
push
mov
mov
enter
xor
sbbb
mov
rcll
rep
mov
cli
xchg
xchg
notl
push
xchg
adcb
xchg
enter
insb
xchg
sbbb
mov
mov
mov
fs
out
xor
repz
mov
xchg
xchg
std
aaa
push
push
xor
jae
rdpmc
popa
shrb
cwtl
adc
push
cmp
cmpsb
mov
mov
scas
je
test
scas
mov
daa
jp
adcb
cmp
adc
mov
inc
cltd
or
insb
xchg
xchg
test
cld
pop
xor
xlat
stc
cltd
inc
add
in
xor
cwtl
pop
push
scas
sti
and
adc
cli
fmul
mov
das
popf
lods
mov
mov
pop
out
outsb
push
sbb
jge
jl
cli
sub
pop
or
fwait
cmpsl
fistpll
mov
jp
addr16
js
cltd
testl
mov
xchg
dec
pop
scas
imul
sub
cwtl
push
stc
cld
rorb
push
adc
jo
xor
mov
push
sbb
out
adc
xor
and
cmp
out
or
xchg
ja
xchg
push
xor
pushf
pop
clc
inc
mov
rcl
inc
in
mov
out
add
mov
fsts
stos
lock
xor
into
in
cwtl
inc
inc
adc
push
repnz
push
incb
in
fsts
cmp
test
cmpsb
loopne
call
push
fdivr
jb
repz
mov
lods
hlt
scas
push
and
add
hlt
adc
push
shl
pusha
fwait
sti
sub
push
pop
test
push
push
mov
call
std
pushf
add
and
and
fsubs
repz
aas
sarb
jnp
lcall
pushf
es
pop
pop
dec
stos
dec
mov
loopne
lods
jg
xor
sub
xor
mov
movsb
cbtw
fdivr
jae
stos
push
inc
std
xchg
es
fsubrs
mov
in
jge
or
in
sarb
lods
andl
fisubrl
cmp
rolb
mov
nop
xor
pushf
js
xor
xchg
push
mov
pop
lret
fwait
xchg
pop
xchg
pop
push
test
sbb
je
mov
test
jg
popl
es
sbbl
imul
mov
mov
adc
inc
push
ret
mov
lret
xchg
cmpsl
mov
sbb
inc
adc
dec
mov
in
dec
xor
clc
mov
pop
cmp
gs
mov
rcll
jp
cwtl
movb
stos
lahf
and
lock
test
pop
jo
imul
cmp
xchg
pop
mov
xchg
mov
sbb
xchg
repnz
and
push
sub
xor
dec
js
insb
bound
insb
mov
cmp
pop
pop
sbb
aas
adc
adc
mov
pop
lods
mov
jae
pop
es
std
pop
jp
ret
xchg
fsubrs
sub
mov
adc
mov
sbb
aaa
sbb
inc
mov
scas
je
ljmp
aas
mov
mov
test
sbb
out
bound
cld
jecxz
lret
mov
sbb
pushf
and
mov
cmp
dec
pusha
pop
in
cwtl
pushl
lret
pop
or
mov
xchg
fmul
xor
adc
cmp
sbb
adc
dec
pop
mov
nop
stos
mov
pop
xor
dec
xorps
scas
push
popf
popa
pop
mov
mov
mov
push
fcmovnb
decl
or
push
inc
jno
mov
cmp
aas
cmc
cld
daa
sub
out
fsubrl
sub
lcall
ja
sbb
cmp
sbb
push
pop
neg
mov
mov
test
mov
test
or
mov
out
adc
je
and
mov
popf
mov
addr16
fcoms
push
daa
test
lret
cli
push
xor
xorb
call
push
mov
lcall
jmp
dec
mov
inc
mov
mov
mov
imul
mov
inc
shlb
enter
sbb
int
ljmp
pop
push
out
lret
fadds
xchg
xor
mov
push
jle
mov
les
cld
fcmovnb
loopne
fbld
pop
mov
mov
cwtl
sbb
stos
lret
ss
inc
stc
adc
sbb
push
bound
mov
sahf
lods
cmp
push
pop
mov
lcall
push
pop
outsb
mov
push
sbb
call
add
mov
or
push
cmp
ret
jne
adc
mov
int
into
fldl
lods
ljmp
mov
inc
dec
repz
fmull
enter
cltd
pusha
lods
jnp
push
lods
iret
shll
aas
insb
lahf
into
aaa
xchg
jmp
cli
inc
scas
jecxz
mov
je
cmp
fists
xor
lods
jmp
jge
mov
mov
dec
fisttps
pushf
testl
test
xchg
fadds
xor
test
shlb
fdivrl
popf
das
mov
jecxz
jl
adc
imul
dec
loopne
clc
rol
test
fsts
mov
daa
inc
jmp
cwtl
jp
xlat
in
in
pop
pusha
sbb
dec
pop
mov
jp
ficoml
sbb
nop
adc
je
roll
mov
or
imul
aad
push
loopne
lret
lds
loope
or
cmpsb
pop
push
jle
sub
outsb
pushf
jl
jne
into
or
mov
mov
push
cltd
pop
inc
cmp
fsubrl
lds
fcomps
xor
mov
fmuls
pop
pop
icebp
sub
xor
dec
fldcw
fcmovnb
shlb
xchg
faddl
jle
mov
out
out
mov
outsb
or
in
lcall
dec
cli
sbb
adc
sahf
sub
mov
ret
pop
fcoml
les
push
mov
inc
int3
cmp
ret
dec
fmul
and
fcmovbe
fcmovnu
dec
add
and
cmp
outsl
cltd
ret
pushf
cmp
testl
int3
jno
xchg
clc
sbb
bound
in
xchg
repnz
sub
arpl
jecxz
dec
push
xor
fwait
in
decb
fwait
pop
negl
inc
cmp
inc
lret
mov
jl
nop
sbb
push
sbb
mov
sti
addl
adcb
add
pop
notb
icebp
lods
adc
pushf
mov
icebp
dec
and
hlt
jne
push
call
mov
mov
jg
push
test
dec
and
pop
out
or
xor
push
fisubrs
cmp
les
push
dec
mov
sbb
or
xchg
cmp
sub
xchg
dec
sbb
add
repz
cmp
jg
mov
inc
mov
jbe
mov
ds
push
repnz
pop
xor
sub
xchg
mov
push
dec
xlat
push
ds
sbb
cmc
das
enter
sbb
je
aas
sbb
mov
das
push
add
sti
mov
adc
cltd
cmp
lcall
shrl
add
lret
sti
insl
mov
imul
add
insl
stos
mov
ja
std
xor
push
aam
push
cmp
daa
int3
negb
rcr
faddp
sub
outsb
loope
inc
inc
lods
jnp
sbb
dec
cmp
clc
andb
ds
sub
mov
cwtl
mov
push
mov
mov
xorl
and
es
jecxz
ds
cwtl
sbb
xchg
sti
out
dec
ds
xchg
jnp
sahf
popl
popf
loopne
js
xchg
sub
push
lcall
push
add
les
addr16
lds
inc
push
ds
je
test
push
das
adc
jnp
lcall
dec
aam
ja
mov
fnsave
cwtl
imul
push
roll
inc
fistpll
xor
stos
xor
movsl
mov
add
pop
jns
fnsave
pop
cld
mov
in
outsl
pop
int
mov
icebp
daa
mov
repz
test
into
ret
push
and
in
pushf
es
pop
ljmp
cmp
mov
and
sub
pop
pop
push
push
or
scas
lret
out
lahf
les
jno
mov
in
test
jno
add
mov
jae
push
ffreep
jge
pop
insl
push
ds
fdivrs
sbb
lret
cmpsb
jb
jmp
mov
stos
faddl
dec
shll
add
fistl
int
lock
mov
popf
and
js
cmpsb
icebp
adc
sbb
rol
in
fcoms
jo
scas
mov
orl
mov
sbbb
mov
fildll
mov
jnp
lods
aas
or
fbld
adc
ljmp
add
mov
cwtl
cmpsl
dec
jno
mov
mov
pop
push
mov
mov
adc
cmp
or
mov
mov
sahf
repz
add
aas
in
jp
fcmove
fcomip
push
push
pushf
xchg
out
push
push
fisubl
nop
cmp
or
jb
aas
aas
pop
xchg
cmpsl
test
fidivrl
sbb
mov
test
push
xor
or
mov
ja
mov
mov
leave
mov
pop
js
pop
adc
es
stc
mov
mov
shrl
jg
lods
repz
add
jecxz
mov
or
inc
add
push
mov
rclb
insl
cmp
ss
js
stos
xor
pushf
and
dec
xchg
das
cli
shlb
push
mov
addr16
cmp
fcomp
iret
sub
andl
push
pop
add
xor
pop
push
lds
aas
mov
dec
mov
shlb
mov
pusha
ret
cmp
and
add
xor
mov
mov
insl
addb
sub
or
clc
scas
aas
cmc
rcll
cmpb
and
sbb
int
scas
sbb
loopne
aam
xlat
adc
xchg
pop
and
pop
hlt
mov
in
stos
xor
xchg
pop
sbb
sti
inc
idivb
xchg
enter
sbb
ret
ds
int3
pop
dec
ljmp
mov
jb
cmp
inc
cmc
fbstp
xchg
clc
lahf
aas
xchg
shrb
out
fwait
jno
movsl
lahf
aaa
fildl
push
loop
xlat
inc
push
cli
outsb
mov
test
mov
inc
int
lahf
filds
fsubrs
fsubrp
adc
je
adc
out
ret
loope
or
xlat
sbb
push
lods
stos
mov
or
jae
sbbl
cli
test
and
jl
mov
stc
std
push
lcall
pop
leave
and
sbb
mov
xchg
out
inc
testl
cli
sbb
jmp
lret
lcall
pop
lods
ljmp
cmp
lret
fmuls
sub
int
sbb
inc
lahf
aad
test
add
push
popf
sub
mov
sub
mov
lods
lret
xchg
push
jg
add
jns
in
cmp
push
fdivrl
lea
push
sub
subb
lds
xor
fnstenv
sahf
shll
sub
sahf
pop
sbb
insl
mov
insb
push
adc
pop
lods
xchg
movsb
lret
ficoml
and
call
mov
stos
inc
push
ds
mov
ss
xchg
add
aad
pusha
out
es
les
xchg
xchg
jnp
iret
pop
repnz
cwtl
cmp
sti
je
cmp
loop
imul
adc
mov
mov
mov
ret
inc
lds
int
jg
jbe
in
push
les
mov
sub
add
adc
pop
adc
mov
rol
pop
mov
push
in
into
scas
lret
xchg
xchg
and
lret
outsl
jmp
cmpsl
sahf
jb
js
jns
sbb
push
jbe
sub
and
push
xchg
lods
outsl
jl
xor
mov
and
pusha
sbbb
lods
mov
mov
mov
outsl
mov
xchg
out
cwtl
pop
stc
aam
sbb
pop
icebp
xchg
mov
and
mov
mov
js
aaa
sub
mov
pop
cmpsl
xchg
pop
test
fs
adc
int
or
and
addr16
pop
mov
mov
lahf
mov
mov
mov
mov
test
fbld
mov
fwait
rcrb
mov
stc
fdivs
mov
fsubrs
dec
xlat
dec
sub
nop
sbb
xor
cmp
jl
xor
push
arpl
pop
cmp
sub
mov
pop
lret
in
fadds
hlt
test
jnp
lret
mov
mov
push
mov
mov
xor
jb
shr
pop
pop
or
rcrl
jmp
pop
jle
push
inc
aas
loopne
pushf
mov
adc
sti
add
push
mov
dec
out
js
sbb
mov
icebp
push
in
shll
jmp
clc
pop
jns
xor
sub
pop
test
and
adc
mov
fcompl
repz
pushf
rolb
clc
sbb
add
adc
pop
adc
mov
sarl
push
mov
popl
adc
cmp
adc
mov
out
movswl
test
scas
inc
ret
scas
loopne
mov
or
xor
push
repz
out
xor
dec
imul
push
jle
cmp
repz
pushf
xchg
mov
fistps
insl
jmp
xchg
xor
repz
sbb
gs
cmp
pop
pop
movsb
in
cltd
cwtl
sbb
cmp
sbb
rcrl
push
mov
repz
dec
in
test
push
xchg
in
addr16
lahf
inc
jmp
popa
pushf
test
jp
inc
xchg
cwtl
ret
outsl
adc
push
sarb
out
fcmovbe
cmc
mov
jb
and
adc
orl
scas
scas
movhps
xchg
cwtl
fdivl
cld
mov
bound
xor
and
lahf
and
push
dec
mov
jl
jnp
push
fs
xchg
sti
popa
lock
lock
sbb
outsl
adc
xchg
mov
mov
add
jne
test
repnz
pop
jae
aad
out
ret
mov
pop
cmpsl
out
push
mov
rorl
negl
add
cmpb
xchg
mov
stc
mov
jno
insl
popf
sbb
mov
mov
xchg
cwtl
pop
or
pop
pop
jb
xor
mov
fstpl
fdivs
push
mov
sar
push
fsub
lods
pop
mov
dec
mov
arpl
lahf
jp
fwait
out
add
test
add
cs
and
mov
sub
xchg
cld
lock
cli
pusha
dec
cmpsl
arpl
test
inc
mov
imul
xchg
push
pushf
cwtl
adc
xchg
mov
jnp
mov
sbb
pushf
hlt
sub
lea
push
push
mov
xchg
popa
in
or
add
pop
arpl
mov
addr16
fwait
hlt
pop
sbb
roll
out
sub
cltd
mov
pusha
lea
negb
out
aas
fisttps
popf
test
ret
and
xchg
mov
mov
lds
push
sbb
mov
mov
push
aaa
dec
popl
sub
sbb
ja
jo
jmp
xchg
pop
jg
pop
mov
jmp
cld
cmp
fstl
lar
push
leave
xchg
leave
lods
js
test
and
mov
cltd
sub
jne
cltd
dec
adc
js
and
pop
fadd
fs
push
sub
sbb
pop
int
fistps
mov
mov
pop
int
pop
rcl
xchg
add
pop
out
enter
or
xchg
xchg
xor
leave
in
fsubrs
cmp
out
mov
cmp
lcall
mov
sub
xchg
jne
psrlw
xchg
pop
dec
clc
pop
loop
cmp
and
cld
mov
jmp
leave
or
mov
sarb
mov
pop
lods
in
les
and
mov
dec
popf
push
jle
adc
std
and
xchg
inc
lock
mov
divl
scas
test
fistps
mov
loopne
mov
fidivrl
lock
insl
xlat
js
add
fsubs
fdiv
push
xor
sub
fs
fistpll
jns
fimuls
adcb
js
cmp
dec
ja
es
jne
push
mov
in
shll
call
dec
push
pop
jle
bound
loope
push
add
loop
les
or
fsub
mov
cld
fldcw
push
add
cwtl
outsl
sbbl
pop
insb
imul
pop
std
jo
and
into
fistpl
add
mov
inc
sbb
sub
push
rclb
fwait
icebp
aad
ret
mov
push
xor
mov
mov
aas
lock
cltd
xchg
fldcw
sub
bound
je
jmp
ficoml
xchg
sti
dec
inc
aam
pop
iret
repz
dec
dec
add
jmp
mov
adc
clc
cmp
jl
icebp
lahf
movsb
cmp
xchg
sbb
repnz
imul
in
stos
cmp
js
jp
sbb
mov
mov
cwtl
pop
insl
cmc
into
sbb
jge
sub
sbb
pop
xchg
push
push
or
mov
cmp
mov
mov
iret
loope
aad
cmpsb
sti
sbb
es
xor
jmp
pop
xchg
xlat
sti
xchg
lret
mov
adc
jmp
cmp
jg
cmp
jae
push
in
aas
mov
adc
sbb
pop
jp
push
rcll
jge
jmp
mov
pop
ret
pushf
push
xor
nop
into
js
loopne
aas
jno
mov
test
xchg
stos
int
mov
insb
adc
enter
jp
push
cld
lea
sysenter
roll
pop
jnp
test
test
filds
adc
enter
mov
adc
jne
lods
gs
cli
dec
mov
add
outsb
test
jae
mov
adc
popa
scas
mov
and
mov
jecxz
addr16
leave
push
repz
dec
loop
xlat
fstp
mov
sbb
adc
pop
jno,pt
std
jl
push
sahf
mov
mov
xchg
aaa
inc
mov
mov
push
cmp
fistl
sahf
fwait
in
lods
sbb
pop
es
idivl
lods
dec
push
movsb
jp
or
mov
dec
pop
movsb
sbb
pop
sub
xchg
sbb
and
push
jmp
add
pop
mov
xor
mov
cld
add
repz
sbb
jle
cld
sti
mov
add
stc
pop
lods
xor
sbb
sub
outsl
aad
mov
pop
mov
mov
mov
adc
sub
loop
cltd
jns
repnz
mov
je
sbbb
rcr
add
push
loop
pavgb
adc
mov
push
inc
bound
mov
mov
mov
aad
stc
pop
sub
push
mov
repnz
push
insb
or
movsl
imul
pusha
ss
cmp
cmp
imul
xor
push
sti
cmp
mov
fwait
and
vcvtsi2ssl
test
mov
sbb
insb
cmpsb
cmp
xchg
jg
cmp
out
arpl
mov
popf
cmp
pop
mov
xchg
jns
call
adc
leave
stc
inc
in
mov
inc
clc
loopne
xchg
hlt
jecxz
dec
rorl
cmpsb
mov
and
ret
mov
clc
xchg
imul
cmp
lock
fs
in
mov
pop
stos
push
jecxz
rclb
jg
inc
pushf
enter
test
dec
xchg
insb
and
repz
add
sub
sbb
ja
jg
sar
mov
dec
xchg
mov
int3
ja
cmp
aas
mov
enter
xor
clc
ffreep
and
ds
add
xchg
insl
mov
fsubrl
xor
movsb
in
cmp
jmp
js
inc
cli
cld
mov
test
outsb
jae
loopne
xchg
insl
jp
scas
repnz
xchg
pushf
jnp
cmp
sbb
sbb
jne
lret
mov
enter
sub
aas
mov
mov
push
sbb
mov
jnp
jns
aam
add
sbb
sbb
and
call
cmpb
test
in
and
sbb
and
lahf
jmp
cwtl
sti
pop
mov
pop
fimuls
scas
testl
daa
pusha
arpl
xchg
sti
outsb
and
mov
sub
movsb
inc
pop
test
push
or
cmpsb
pop
inc
mov
xorps
fwait
cwtl
inc
jae
xor
nop
cmp
jnp
xchg
jle
loop
sbb
dec
push
xor
mov
std
xchg
je
test
cmp
dec
xchg
sub
outsb
pop
scas
mov
pop
sub
ficomps
adc
aas
rcr
leave
mov
jmp
xchg
outsl
outsl
sub
aas
mov
int3
add
cmpsb
loopne
cmp
xor
pushf
xchg
rcrl
xor
adc
or
das
addl
jle
dec
mov
jecxz
fwait
push
insl
loope
add
sub
mov
cmp
cmc
popa
sub
fdivs
and
jbe
cli
cmp
mov
xchg
bound
sub
fisubrl
repz
mov
pop
dec
mov
loope
mov
stc
rolb
test
mov
leave
lods
in
iret
push
repnz
enter
fidivrs
xchg
repnz
test
lods
sti
adc
cld
adc
cmpl
adc
sbb
popf
dec
fcomip
cli
inc
call
xlat
mov
xchg
and
cmp
lcall
negl
or
pushf
mov
negb
sbb
jne
and
aas
ficompl
pop
xchg
dec
frstor
pop
out
sarb
cwtl
rolb
aam
lahf
add
pushf
pop
cmp
sub
inc
push
jle
das
jle
lret
push
cmp
lret
orb
jg
test
cmp
pushf
push
test
mov
lcall
mov
sti
test
pop
xchg
test
lock
jg
mov
js
fcompl
and
lahf
add
mov
lret
cmp
dec
xor
push
adc
adc
icebp
leave
lcall
mov
cmp
mov
sbb
mov
shrb
inc
je
adc
push
and
je
cwtl
fildll
jbe
jp
test
lret
ja
into
pop
jg
bound
outsl
mov
or
mov
adc
push
push
sub
mov
add
push
sahf
xchg
outsb
pop
or
mov
mov
mov
pop
mov
pop
ficoms
sarb
pop
mov
push
sub
movsl
sbb
rcrb
sbb
call
sti
inc
call
insl
mov
fcmovbe
xor
test
sbb
sbb
cmp
aaa
sub
or
fidivrl
fucomi
test
test
ja
fnstsw
addb
cltd
sub
pop
add
pushf
xchg
cmc
fidivs
fs
push
scas
sbb
nop
dec
push
nop
leave
jp
outsl
stos
jecxz
jb
and
daa
xchg
fs
daa
scas
mov
jno
dec
aad
adc
push
pop
mov
mov
mull
mov
pop
mov
shll
cld
fists
push
lret
fdivrl
inc
mov
sub
dec
add
jp
xchg
sti
loop
movsb
js
fdivrl
incl
jbe
xchg
mov
leave
jecxz
add
pop
mov
test
out
and
dec
int3
sbb
cmp
mov
fsubrs
lahf
dec
or
sbb
jg
sbb
cmp
pushf
outsl
jb
pop
mov
mov
jge
xlat
xor
sbb
bound
cld
mov
scas
mov
jecxz
push
std
or
sbb
xchg
fwait
ljmp
imul
xchg
sahf
dec
jmp
mov
int3
sub
mov
mov
or
sbb
dec
fidivs
sti
clc
mov
jg
xchg
and
sub
leave
icebp
notb
pop
fmuls
pop
lea
sti
loopne
push
mov
inc
std
jp
or
sbb
out
lahf
cmpsb
mov
std
je
jno
in
jnp
sub
shll
dec
mov
sti
gs
and
sti
clc
shl
sbbl
sub
add
mov
imul
inc
cmpl
rolb
jbe
cmpsb
lcall
pop
es
or
aad
cmp
sti
repz
pop
dec
clc
sub
movsl
mov
mov
ds
add
cli
pop
xorb
test
jns
mov
xor
xlat
xlat
mov
dec
jmp
xor
cli
lcall
xor
push
sbb
test
mov
or
cmp
sbb
xchg
pop
es
push
cmp
je
jp
cltd
sarb
push
pushf
cmp
push
inc
imul
xor
mov
xchg
inc
xor
sti
rolb
sbb
sub
mov
fs
hlt
jno
int3
sbb
add
pop
xchg
les
lret
fsubl
lock
jnp
test
outsl
lret
xor
jge
pop
test
jg
es
andl
adc
jg
mov
adcb
jmp
nop
cmp
mov
mov
add
add
cmp
mov
mov
mov
es
sbb
aaa
cmp
inc
repz
inc
mov
jne
mov
pop
xchg
scas
aam
mov
jg
mov
jecxz
roll
enter
mov
cmp
idivl
inc
dec
mov
fsub
mov
shrb
xchg
push
cmp
out
fcmovne
ja
cmp
insw
sub
mov
jecxz
ss
sbb
mov
xor
stos
mov
xorb
jns
clc
lds
movsb
xchg
xor
mov
fcmovnu
cmc
dec
mov
mov
imul
out
sbb
lods
sti
adc
es
mov
lahf
jno
cmp
mov
in
adc
test
jne
int3
fimull
lcall
cltd
jae
test
ds
subl
icebp
add
xchg
daa
enter
popa
fdivl
fdivrl
add
fsubrl
pop
dec
xor
sbb
sbb
and
pop
lds
scas
pop
sub
xor
xor
out
fcompl
pop
jle
dec
mov
shr
xchg
repz
and
jnp
xchg
add
push
lods
or
cmp
sbb
pop
mov
mov
mov
mov
aas
and
fildl
dec
xchg
mov
mov
pop
pushf
and
sub
popa
ret
mov
inc
movsl
xchg
sbb
sbb
ret
enter
stos
jge
stc
sbb
ss
test
cld
mov
push
jle
sbb
cltd
sub
sti
jo
fldt
movsb
push
push
rcrb
rcr
jg
fmul
cmpsb
cwtl
jle
cld
repz
mov
add
stc
nop
jnp
addr16
sub
rol
sbb
cli
mov
ret
push
out
ljmp
daa
xorb
test
or
mov
mov
fsubrs
xor
das
cmpsb
fbld
das
in
stos
pop
sbb
mov
clc
stc
adc
adc
dec
movsb
xchg
cld
dec
pop
rcrl
ds
aas
pop
mov
mov
dec
testl
cmp
out
push
inc
push
or
add
jnp
fcomp
push
ja
push
xchg
cmp
mov
and
sub
sub
xchg
iret
xor
nop
pop
xchg
mov
jg
jp
sbb
mov
fxch
ret
or
daa
sbb
jmp
mov
cmc
add
nop
sti
mov
xor
adc
lahf
lcall
push
jmp
out
push
xchg
sub
insb
loop
mov
lahf
repz
push
movsl
jmp
adc
xchg
test
cld
in
push
popf
lods
cwtl
jg
xor
fcomps
call
xor
inc
push
out
sub
enter
sti
or
scas
rcll
notl
sbb
ret
subb
ror
js
inc
addb
sbb
xchg
in
in
loop
fistpl
cs
in
sub
and
push
das
jge
repnz
pop
cwtl
fimull
adcb
insl
inc
sub
sbb
jle
call
jne
movsbl
mov
sbb
cmp
sbb
stc
cwtl
push
cli
cmpsb
sbb
nop
pop
and
jo
je
adc
mov
mov
push
xchg
pushf
aas
addb
inc
call
aad
sbb
les
mov
sbb
sarb
jae
cmpl
mov
adc
push
inc
mov
pusha
push
sbb
js
insl
in
jmp
inc
mov
ss
pushf
dec
mov
mulb
fdivrs
mov
fwait
add
lods
cmpb
std
pop
sub
push
mov
cmpb
js
jno
mov
insb
adc
jo
sar
stos
cli
clc
ss
in
push
cmpsl
mov
fwait
adc
pop
movsl
outsl
movsb
pop
fsubrl
cmp
cmp
jo
pop
repnz
pushf
pop
push
sbb
data16
out
ja
cmp
dec
mov
adc
xlat
fs
mov
mov
xchg
jnp
pop
dec
inc
scas
mov
jl
sbb
test
lcall
cmp
jg
clc
jecxz
push
push
in
jnp
into
mov
mov
cmp
repz
cmp
ret
test
lret
lret
lcall
mov
add
push
ret
aam
imul
data16
fstpl
scas
or
stc
aas
xor
jns
cwtl
test
lcall
push
xchg
inc
nop
dec
outsb
push
mov
push
xchg
fldt
fadd
or
mov
mov
lret
notl
adc
push
lret
cmpsl
xor
dec
mov
sbb
xor
xor
cmc
mov
daa
and
int3
xchg
adc
inc
stos
ja
aam
stos
mov
out
xchg
sbb
mov
fsqrt
js
fcomps
or
call
stos
sbb
mov
jl
and
aas
adc
cli
pop
out
inc
mov
popf
mov
stc
add
cltd
push
sbb
and
push
jle
add
mov
sbb
xchg
jle
jge
cmp
adc
lahf
addr16
loop
xchg
adc
pop
sarl
lahf
push
lods
lds
rorb
xchg
jg
jnp
add
xor
fucomip
adc
xchg
mov
sbb
jg
sbbb
cmpsl
jae
cmp
sub
in
sub
mov
mov
mov
xor
push
mov
call
jle
xchg
add
pushf
stc
mov
mov
push
sti
mov
jge
jno
aam
mov
cmp
popa
jae
ja
jo
aam
sti
pop
and
add
dec
bound
xchg
dec
adc
mov
mov
rcr
rcrl
pop
and
ret
mov
fwait
adc
push
add
ret
inc
lret
movsb
add
repnz
pop
jge
daa
mov
add
and
mov
ficoml
cmp
cmp
pushl
pop
inc
mov
pushf
mov
jae
push
push
mov
lods
inc
pushf
xor
cmpsb
loopne
mov
mov
rorl
inc
cltd
sub
sbb
jg
xchg
cmovns
and
mov
mov
and
pushf
sbb
shll
test
sbbb
push
cmp
in
lods
fdivrl
mov
cmp
sahf
pop
flds
inc
fldt
mov
pop
mov
aad
test
fwait
add
or
fisttpll
mov
jo
loop
xchg
sub
sub
stos
jns
mov
aad
ret
arpl
filds
push
sub
rcll
hlt
mov
loopne
jnp
add
das
sub
loop
xor
mov
ljmp
pop
sbb
inc
mov
fwait
mov
cmpb
stos
cmp
pop
arpl
fs
adc
test
xchg
jmp
fcomps
cltd
cmp
jg
cmp
add
lret
pop
or
fisubl
cli
dec
xor
pop
gs
cld
adc
shll
pop
fdivl
push
rcll
inc
mov
cli
imul
lock
push
or
mov
dec
pop
fdivr
and
adc
adc
in
aam
incl
cli
pusha
mov
cmp
inc
push
aam
imul
add
jne
lret
sbb
mov
pop
jmp
sbb
or
enter
or
jg
pop
add
mov
dec
cmp
add
or
shll
sti
out
lret
int3
in
in
in
test
pop
aas
idivl
push
mov
stos
cmp
cs
sub
xchg
mov
lcall
shrl
das
sbb
adcl
pop
and
rcrb
iret
mov
scas
mov
shll
addb
push
enter
les
lret
xor
out
fnstcw
fs
rolb
cmp
adc
mov
bound
aas
pop
xor
pop
xchg
lret
pushf
rcrb
mov
rcl
dec
and
adcb
je
cmp
mov
repnz
dec
cmpsl
subl
rorb
pop
cmpsb
repnz
subb
fistpl
je
cmp
inc
pop
lcall
idivl
pop
cmp
sub
fisubrs
or
int
movsl
mov
arpl
mov
inc
mov
jno
xchg
xor
mov
in
jp
pop
sbb
adc
imull
pop
jo
mov
mov
daa
add
pop
adc
dec
dec
cmp
mov
and
push
repnz
scas
setbe
popa
clc
popa
mov
inc
add
dec
negb
fistpll
xor
and
mov
ud2
cmp
sarb
data16
mov
inc
push
xlat
sub
mov
stos
fmuls
test
test
arpl
nop
push
pushf
mov
aad
mov
xchg
mov
pop
and
cwtl
insb
cmp
xchg
mov
add
pop
sbb
iret
mov
scas
sbb
add
mov
sbb
mov
movsb
push
cli
mov
pop
stos
arpl
cmc
push
mov
jns
mov
fnsetpm(287
sbb
push
hlt
sbb
and
push
xor
fwait
test
mov
pop
mov
push
cltd
cmp
push
sbb
mov
fcoms
sarl
loop
pop
aaa
pop
cmpb
cli
ljmp
xlat
cwtl
xchg
mov
jl
ret
rcrb
pop
sarb
push
push
loopne,pt
add
cli
lods
cmp
cmp
in
jns
and
jg
cmp
popa
adc
sub
inc
fadds
jl
add
daa
and
pop
adc
sti
inc
adc
aas
sub
lret
mov
test
lcall
or
loop
enter
or
rclb
sarb
sbb
sbbl
push
xchg
arpl
imul
cwtl
mov
push
adc
aas
ret
imul
mov
lcall
inc
mov
mov
push
pop
push
lods
mov
jnp
repz
fwait
push
mov
adc
sbb
jbe
and
sub
loop
movsb
or
or
cmp
jo
out
fcom
pop
mov
das
xchg
fstpl
mov
js
mov
xor
sub
sbb
lcall
stos
sub
in
nop
mov
mov
xchg
jp
push
lock
cwtl
sbb
mov
inc
push
inc
fwait
lahf
xor
mov
mov
aad
es
bound
cmp
into
pusha
out
les
and
jle
and
xchg
sbb
aas
lock
jnp
adc
jne
stc
cmp
adc
je
pushf
pop
int3
mov
mov
push
adc
daa
xchg
stos
das
pop
iret
mov
leave
aas
movsb
int
loop
xchg
mov
fwait
int3
mov
subb
into
js
jo
inc
jb
out
sahf
xchg
fldl
sbb
pushf
jge
xor
mov
sbb
mov
ja
push
scas
loope
loopne
jo
fisttpll
arpl
hlt
test
outsb
and
xorl
icebp
sbb
jl
push
xchg
inc
in
popf
and
ja
jo
call
jo
mov
out
outsb
mov
sbb
fs
cmp
mov
test
cmp
sti
clc
push
aaa
lock
int
pop
popa
xchg
dec
sbb
mov
dec
jmp
ficomps
repnz
movsl
sahf
push
es
mov
sbb
pusha
aaa
mov
cli
pop
outsl
mov
jbe
inc
repnz
ds
loope
cmp
dec
and
push
pop
inc
test
or
mov
xor
cmpsl
add
clc
add
cmpl
cli
cmpsb
adc
pop
movsb
ljmp
out
sti
inc
push
ret
add
int3
loopne
mov
add
jle
cltd
jle
aaa
fisubl
push
pushf
mov
and
lods
ss
fistpll
dec
dec
sbb
cmp
jnp
push
aad
sahf
testb
sbb
mov
cmp
call
mov
fidivs
mov
add
int3
pop
ljmp
pushf
xor
aad
out
jne
aam
sbb
outsb
or
sbb
cmp
shrl
fmull
cs
or
mov
jge
mov
push
push
mov
pop
dec
push
xchg
sahf
clc
pop
sarb
and
mov
in
mov
cld
lahf
popa
and
lods
mov
pop
fwait
cmp
pop
cmpsl
popa
inc
scas
fcompl
cmp
je
push
sub
daa
pop
xor
mov
pop
sbbl
sub
cld
std
push
sti
xor
pop
mov
aas
les
sub
add
adc
idivb
fdivrs
inc
outsl
fdivrl
xchg
nop
rcll
sbb
jno
aaa
enter
sahf
sti
outsb
push
iret
dec
add
push
pop
jnp
enter
push
lgs
pop
insl
mov
adc
ffree
ficoml
jl
imul
xchg
sti
sbb
shl
dec
in
xchg
fcomps
push
pop
push
divl
or
cs
popf
push
aam
mov
repz
jl
hlt
dec
inc
popf
adcl
test
pop
and
outsb
add
mov
xor
xor
push
lea
cmpsb
mov
aaa
xchg
inc
pminub
ds
in
push
les
cwtl
lods
ds
jp
aam
out
jecxz
mov
daa
test
cwtl
and
jp
dec
jge
cltd
fistps
and
mov
neg
add
xor
inc
mov
xchg
mov
pop
cmp
cmpsl
add
ret
mov
jp
roll
pop
jle
push
sbb
mov
out
lea
pop
cli
aaa
cmpsb
adc
mov
hlt
test
fbld
xchg
scas
mov
fidivs
call
adc
or
cmpsl
addb
test
pusha
dec
xchg
xchg
cmpb
fidivrs
movsb
out
fmull
mov
sbb
pushf
lret
fadds
pushf
aas
fisubrl
cmp
outsl
sahf
fwait
pop
xor
cmp
fdiv
out
cwtl
add
jp
hlt
fsub
rorb
dec
repnz
cmp
lret
out
cmp
insb
lods
cmp
mov
xchg
leave
rcrb
adc
adc
cmpsl
clc
enter
pop
fdivrl
mov
adc
es
stos
test
push
xor
scas
cmpsl
xor
out
inc
sti
mov
adc
push
push
lcall
dec
pop
or
cld
sbb
mov
or
addr16
dec
ret
fsubs
xor
repz
loop
mov
cwtl
sub
jae
xchg
mov
int3
movsb
aas
mov
mov
adc
mov
iret
mov
fmul
xor
loope
mov
dec
xchg
xor
mov
jb
rcrb
cmpsl
or
std
lock
subps
adc
stos
cli
mov
add
inc
jbe
and
sub
popf
pop
movsb
fsub
mov
mov
xor
loope
mov
adc
lret
push
jne
jg
mov
pop
pusha
mov
cmp
jno
inc
cmp
test
rcrb
xchg
int
mov
cmp
pushf
inc
test
aad
cmp
stc
lods
cmpl
movsl
repz
fmull
ljmp
in
scas
bound
sbb
aas
mov
jb
push
cwtl
xchg
mov
sti
lods
jns
stc
notb
sti
and
or
jo
pop
xlat
mov
cmp
pop
shrl
std
mov
scas
fidivrl
ret
ret
int
dec
ret
test
jle
mov
jmp
cmp
scas
testl
jecxz
movsl
pop
mov
fldt
mov
or
xchg
loopne
fucomi
inc
sbb
stos
xchg
inc
lods
mov
mov
push
cmpb
cmp
sub
mov
in
pop
dec
inc
add
xchg
xor
js
lahf
add
in
mov
or
cwtl
mov
adc
test
push
ja
and
jmp
pusha
dec
add
and
xor
lock
jae
pop
mov
lahf
mov
mov
ljmp
mov
adcl
jno
arpl
pop
xor
jne
rcll
and
mov
mov
lea
addl
movsb
imul
xchg
sub
cmp
fdivl
stc
push
jb
pop
mov
sub
ret
mov
ds
adc
lds
shlb
xor
mov
dec
xchg
out
jo
faddl
adc
push
dec
mov
inc
xor
pop
jp
adc
mov
js
fistps
xchg
icebp
pop
aas
pop
xchg
cwtl
repnz
lahf
enter
jns
rcll
iret
and
int3
mov
jg
push
cs
pop
lcall
outsl
rclb
les
les
mov
mov
jge
pop
add
aas
aad
je
and
insl
hlt
shlb
mov
mov
jbe
sbb
int3
call
sahf
iret
imul
cld
sbb
out
std
lods
ret
xchg
xchg
scas
jbe
daa
out
pop
mov
lds
nop
aad
loopne
mov
nop
js
and
xor
jg
nop
sahf
and
subb
pop
sbb
xor
scas
cmp
jnp
sub
or
mov
call
jo
jb
mov
push
lcall
sbb
pop
lea
xor
je
cmp
sub
sub
inc
jo,pn
into
jo
test
stos
jg
mov
xchg
sti
aad
mov
xchg
xlat
sub
pushf
sbb
push
data16
mov
out
jae
enter
jae
or
pop
jbe
sbb
jno
push
test
sti
or
sbb
dec
jae
popa
jp
jnp
mov
scas
fcomp
jbe
mov
add
push
call
mov
mov
jbe
lods
test
xchg
push
mov
lods
dec
push
mov
adc
pop
mov
test
or
stc
cmpsb
dec
xor
adc
lcall
push
stc
dec
les
fs
aaa
cwtl
push
out
cmp
scas
xchg
mov
cmp
push
repnz
repnz
inc
in
cmp
mov
adc
adc
add
sbb
cmp
fdivs
shll
cli
push
xchg
iret
int3
mov
ds
cmp
daa
and
cmpsl
pop
sbb
mov
insb
add
push
std
flds
mov
pushf
lea
in
popfw
sahf
pop
mov
loope
push
cs
or
inc
xor
fdivr
push
sbb
xor
scas
pop
xchg
mov
leave
aad
mov
fs
xchg
cmp
lods
push
xor
push
sbb
mov
mov
test
cmp
mov
push
push
and
push
jb
dec
repnz
sbb
push
inc
call
lcall
popa
fisubs
movsb
cwtl
xchg
out
fsubrl
lret
and
inc
faddl
jl
xor
mov
push
mov
sbb
mov
cmp
cmp
fidivrl
push
in
add
mov
mov
aam
xchg
jmp
sbb
aaa
es
sub
jo
cwtl
daa
and
out
add
outsb
mov
das
sbb
neg
xchg
leave
add
popf
mov
jnp
sbb
or
out
mov
addb
adc
sbb
xchg
mov
dec
dec
shlb
out
decb
mov
je
in
arpl
out
push
into
pop
hlt
sbb
mov
addr16
lods
lahf
jae
jl
or
ret
mov
dec
loope
cmc
rcrl
enter
adc
aas
dec
stos
hlt
cltd
cld
pop
orb
das
pop
mov
cmp
cmp
mov
pop
cli
das
jnp
inc
fistl
cwtl
aad
arpl
repnz
sbb
sti
jne
les
loopne
les
mov
aas
in
lock
pop
test
xchg
cmp
aas
sub
fsubs
stos
cmp
xchg
jo
mov
inc
or
jne
xchg
cmpl
lea
addl
pop
xchg
sbb
fwait
sti
popa
push
ror
xchg
andb
fmull
insb
ds
cmp
pop
dec
mov
dec
fsubl
inc
mov
cmp
push
jle
rcrb
jne
mov
lods
cli
lods
mov
pop
sbb
xor
mov
div
incl
mov
or
xchg
sbb
cmp
sbb
pushf
pushl
add
pop
or
push
and
aad
dec
mov
stc
mov
dec
mov
cli
or
iret
xor
jb
incl
popa
lret
andl
lods
jg
cmp
mov
cmp
int3
lcall
xchg
and
push
adc
pop
xchg
adc
pop
jo
sub
mov
or
mov
in
ss
cld
js
movsb
shll
cmp
xor
lcall
icebp
js
mov
cmp
scas
mulb
inc
mov
xlat
dec
push
cmp
cmpb
popf
cli
hlt
sbb
mov
dec
fistpll
or
xor
and
icebp
jp,pn
sub
mov
fxam
and
sbb
outsb
xchg
cmpsl
and
mov
push
mov
xchg
sar
sub
ja
mov
mov
frstor
cmp
hlt
add
clc
jl
jo
mov
fmull
out
out
cli
push
cmp
mov
sbb
mov
adc
mov
cmp
mov
xchg
mov
mov
js
cld
push
pop
testb
pop
pop
pusha
xchg
cmp
outsl
sbb
sub
stc
xchg
push
dec
ficompl
cmp
dec
jb
xor
cwtl
lahf
xchg
push
pop
cmpl
je
cmp
fstpt
add
ja
add
xchg
jg
shrb
push
mov
data16
jg
std
movsl
or
stos
sub
mov
rcrl
fsub
andb
sub
out
das
xor
cli
jmp
mov
movsb
mov
xchg
add
out
jo
push
mov
pop
iret
je
clc
pop
inc
in
lahf
mov
pop
push
push
xchg
mov
pop
movsb
cmp
gs
mov
es
sub
mov
push
jbe
pushf
inc
fcomip
lea
push
inc
xor
inc
test
jecxz
movsl
aas
aas
into
mov
stos
cmp
mov
fdivrs
divl
stos
xlat
movsb
inc
sbb
xor
in
cwtl
movsb
js
outsl
sbb
ds
push
or
adc
ret
lret
dec
mov
inc
lret
jne
push
inc
aas
sub
sub
jl
mov
int3
and
nop
iret
push
pop
inc
mov
mov
sti
push
xchg
fstl
inc
sar
test
push
aad
xchg
mov
int3
jae
filds
xchg
cwtl
or
stos
xor
ret
mov
leave
and
hlt
in
cwtl
dec
addl
xor
push
pop
decb
ja
pusha
pushl
shrb
icebp
mov
mov
cli
in
lcall
xor
sbb
lcall
pop
shll
mov
adc
mov
sarb
xchg
mov
or
ss
pop
push
loopne,pt
lock
mov
cmp
loop
push
dec
repz
fcmovnb
ds
push
pop
out
into
sbb
lods
jmp
dec
push
mov
xchg
lcall
ret
mov
xorb
cwtl
sbb
lods
pop
jno
push
and
aas
mov
insl
cwtl
js
pusha
fwait
sbb
repz
repz
fmulp
mov
mov
dec
push
outsb
stc
push
lock
and
adc
mov
xchg
xlat
jg
fisttpll
xchg
lahf
in
popf
enter
pop
pop
push
jp
push
xchg
out
xchg
push
jmp
mov
or
ret
add
outsb
add
nop
mov
push
cmpsb
fcmovnu
xchg
in
mov
mov
leave
scas
mov
cli
jnp
test
scas
xchg
in
or
lret
outsl
scas
xchg
mov
sbb
pop
sbb
stc
mov
sbb
or
pop
jle
lock
data16
jp
cwtl
xchg
sub
xchg
daa
out
stc
mov
and
loop
popf
or
dec
xor
xor
pushw
adc
daa
cmpsb
nop
addl
cmpsl
mov
xor
mov
add
test
ss
adc
incl
xor
dec
ret
cli
call
cmpl
mov
adc
and
adc
in
outsb
int
lock
mov
and
xchg
adc
cmp
cli
push
push
sbbl
pop
clc
cmp
sbb
lret
xchg
push
push
xor
sti
movsl
inc
mov
cs
cmpsl
mov
pop
xchg
sub
mov
jecxz
movsl
mov
stos
xchg
or
sbb
xor
into
movsb
js
cmp
xchg
sub
cld
sbb
pop
push
jbe
lea
cmp
dec
sbb
jns
mov
inc
mov
mov
test
cmpsl
jle,pt
mov
add
pop
test
add
shl
fmuls
pop
cli
into
mov
nop
arpl
cld
mov
push
inc
xor
stos
mov
aas
mov
cld
scas
xchg
fmuls
ja
xor
jbe
mov
add
test
sbb
push
in
lcall
pop
jns
jecxz
xlat
xchg
sbb
mov
cmp
inc
test
retw
add
popf
push
bound
shll
jge
neg
enter
fidivrl
cmp
stos
stos
in
inc
dec
out
enter
orb
mov
lods
push
jl
mov
ret
or
sub
inc
dec
int3
mov
push
cwtl
mov
xchg
cmp
scas
shlb
mov
mov
test
stos
nop
scas
pop
and
and
std
sub
mov
sbb
cmp
mov
cmp
lret
pusha
das
cld
xchg
jecxz
out
pop
cltd
cld
nop
lahf
mov
in
movsb
mov
adc
inc
mov
fdivrl
xchg
inc
mov
jo
mov
jl
mov
test
pop
pop
lods
pop
test
pop
iret
inc
mov
mov
xchg
sti
f2xm1
ret
hlt
jg
cmp
mull
test
pop
or
loopne
loope
mov
aaa
xchg
xchg
push
xchg
mov
mov
mov
mov
xchg
xlat
shll
xor
cli
fidivrs
jge
mov
adc
aad
push
cmpsb
shrb
lret
mov
jle
cwtl
push
aaa
mov
sub
inc
in
pop
popf
mov
nop
sbb
cmp
out
lret
or
cmp
cmp
push
push
fcomps
imul
adc
cmp
or
cwtl
stc
xchg
push
lods
mov
and
xor
cmp
jg
icebp
aaa
xor
ljmp
enter
aas
mov
ds
clc
mov
int
test
jl
fst
xchg
or
roll
aad
cli
leave
adc
inc
fsubl
gs
mov
sub
inc
sbb
lods
sti
mov
mov
fimull
cmp
fdivs
hlt
out
pop
jle
je
mov
in
fcomps
push
mov
jl
jl,pn
mov
sbb
jg
dec
adc
loop
push
cmpsl
pop
mov
jmp
lods
mov
jae
daa
xchg
into
pop
jbe
imul
sub
ljmp
lret
and
push
movl
pop
xlat
add
int3
mov
stc
cwtl
gs
shll
cmp
push
jle
pop
and
cmpsl
xchg
cld
pop
aam
das
and
pusha
hlt
pop
jle
pop
sub
sti
outsb
loop
lods
int3
push
add
cwtl
and
out
push
pop
pop
xchg
enter
ss
xchg
push
pop
xor
shrl
pushf
pushf
ffree
pop
negl
push
lds
jno
xor
imul
or
pop
test
sub
adc
lds
jnp
mov
mov
sbb
cltd
cmp
fsubr
mov
pop
ret
fldt
mov
sbb
lods
sti
sbb
pop
sbb
inc
cld
icebp
add
arpl
adc
cwtl
lcall
int
jmp
sub
sbb
add
sahf
xchg
sub
data16
ret
fdivr
inc
jo
lds
xchg
pavgw
xchg
add
push
pop
fiadds
pop
stos
push
enter
scas
fdivl
in
pop
clc
fdiv
cmp
sti
ret
pop
mov
adc
outsb
cmp
addr16
and
cwtl
test
shrb
out
es
stos
call
jo
sbb
pop
xchg
sbb
enter
cmp
test
sbb
fidivrs
out
pushf
pop
push
sub
jns
sahf
push
mov
mov
xor
loop
aas
adc
pop
pop
mov
scas
inc
ret
pushf
roll
bound
pop
sub
aas
loop
dec
pushf
adc
xor
pop
sahf
das
xchg
cmpsl
sbb
jge
pop
shrb
mov
out
roll
loop
cwtl
add
push
ja
cmp
mov
xor
jb
add
cld
sbb
je
xchg
sti
fnstenv
mov
popf
xor
jb
lods
dec
popf
inc
rcrb
fistps
mov
pop
lcall
pop
leave
leave
mov
mov
icebp
mov
std
sub
mov
repnz
xchg
push
mov
pop
ret
xor
sti
addl
jnp
aas
or
push
cmp
out
shlb
cmpb
fmul
fs
xchg
out
xor
inc
fcmovb
dec
cmp
inc
in
jl
fidivs
xorl
mov
aas
xchg
popf
iret
in
adc
cltd
dec
lcall
mov
mov
pop
mov
int3
mov
jmp
jbe
jl
or
cmp
clc
enter
pop
push
cli
sub
sub
fnstenv
and
sbb
imul
sahf
push
rclb
sub
jbe
mov
inc
push
lcall
fadds
js
xor
pop
clc
push
lods
pop
popa
cld
jbe
xor
subb
mov
fwait
xor
pop
mov
lret
jnp
adc
ret
jns
lods
xchg
add
cmp
push
test
test
dec
xchg
jge
aam
movl
or
xchg
push
mov
rcrl
cmpsb
sti
fisubrl
add
sub
lods
sbb
lret
out
and
cmp
lds
push
xor
pop
mov
lea
pop
jne
stc
hlt
movsb
or
scas
and
adc
jae
pusha
sarb
pop
popf
jbe
loopne
xchg
call
lea
fsubrp
sahf
inc
cmp
mov
push
sahf
out
inc
test
or
stc
cmp
lea
pop
mov
mov
push
jb
push
inc
pop
pop
mov
fistpl
mov
mov
jns
add
sbb
cld
shrb
mov
mov
adc
sar
daa
hlt
mov
cmp
adc
movsb
ja
js
mov
test
mov
dec
fisubrl
lods
sub
lods
mov
ljmp
dec
out
lret
add
jnp
cmp
or
clc
test
dec
mov
mov
fnstsw
mov
aaa
scas
sti
fs
jae
out
clc
mov
push
subb
pop
mov
adc
adc
sbb
outsl
repz
loope
ficomps
cmpsl
xchg
or
lahf
je
mov
cmp
test
popf
movsb
pushf
jg
push
adc
mov
adc
add
xchg
out
mov
daa
mov
cwtl
hlt
jns
js
jb
cmpsb
jne
test
fimuls
jmp
and
xchg
mov
xchg
lahf
sbb
adc
dec
in
pop
and
jle
push
orl
dec
jb
cmp
pushf
xchg
xchg
inc
jnp
or
sub
lahf
pushf
mov
pop
sub
test
mov
mov
icebp
pusha
push
push
adcb
test
pop
xor
xchg
scas
mov
sub
repz
fstl
stos
mov
ja
popf
mov
fs
push
leave
jg
cmp
repnz
test
xor
lret
cmp
jecxz
mov
fistpll
add
jnp
test
cmp
adcb
negb
iret
add
loop
pusha
xor
mov
cs
sbb
addl
stos
and
sub
pop
pop
push
cld
jmp
or
pop
lock
sti
sub
movsb
adc
hlt
fcomp
pop
dec
mov
fwait
cwtl
nop
mov
add
outsl
sbb
mov
dec
fsubrs
int3
notb
mov
adc
sub
sbb
stc
repnz
pushf
loopne
cs
xor
dec
adc
enter
negl
idivl
and
pop
cwtl
inc
lahf
out
mov
cwtl
sti
ficomps
into
pop
mov
ja
ds
and
pushf
add
adc
mov
mov
mov
mov
or
jb
filds
out
xor
rcrl
mov
xchg
mov
lcall
cwtl
gs
xlat
jae
push
clc
aaa
cmp
je
daa
and
mov
sbb
test
jne
jno,pt
jl
sbb
mov
jbe
push
jb
rcrl
in
or
dec
test
in
add
mov
dec
scas
cli
subl
cwtl
fidivrs
and
pop
lds
cmp
pop
mov
or
bound
mov
std
movsb
xchg
in
pop
push
loopne
mov
adc
jb
pushf
arpl
jmp
mov
jg
test
cltd
cmp
cmpsl
fimull
stos
mov
daa
cmc
mov
lahf
dec
testl
push
lret
fnstenv
fidivl
data16
add
sub
rorb
test
pushf
ret
pop
xor
sub
pop
stc
and
negb
test
testb
push
xor
jp
js
xchg
rcrl
push
rolb
and
ljmp
mov
push
mov
ja
inc
pop
call
mov
mov
leave
lahf
add
dec
adc
push
jbe
sbb
pop
arpl
sahf
inc
sarb
mov
xor
cmp
jo
clc
jp
add
sbb
mov
scas
test
fidivrs
cmc
test
sbb
pop
aad
ds
cmpsb
inc
mov
stc
aas
outsb
fnstcw
mov
test
mov
mov
cmc
cltd
cli
jg
pushf
in
pop
push
mov
and
sbb
outsl
ret
xor
addr16
call
sub
push
pop
je
xor
mov
jle
cmp
jne,pt
bound
and
icebp
filds
adc
cmp
iret
mov
jge
mov
ret
enter
jp
jb
shl
lods
pop
test
push
mov
xchg
push
outsl
faddl
push
stc
scas
test
mov
and
cmp
push
mov
dec
or
pop
mov
cmp
pop
flds
cmp
sti
xchg
scas
mov
mov
sbb
outsl
and
inc
sub
mov
imul
ds
push
pop
insl
cltd
in
hlt
lcall
push
andl
sbb
stos
pop
mov
sbb
cmpl
xorb
fwait
xchg
lds
ds
push
dec
fnsave
cs
mov
lahf
popf
nop
leave
jnp
ds
insl
mov
cmp
insb
pop
cmpsl
sub
fidivl
and
scas
pop
inc
cwtl
ret
pushf
push
outsb
xor
fdivrs
push
decb
movsb
and
int3
xlat
les
mov
xchg
sbb
aas
je
jo
fs
mov
pop
fisubrl
cmpb
sahf
jl
and
xor
mov
push
mov
shr
out
call
pop
stc
sahf
insl
dec
idiv
pop
adcl
fadd
gs
sahf
adc
pop
ds
out
cmpl
dec
insl
fmull
xchg
dec
scas
ja
pop
jl
mov
pop
jl
out
xchg
jnp
inc
fisttpll
xor
test
cwtl
sbb
jp
mov
ss
mov
clc
je,pn
add
test
jb
loop
sti
sub
adc
and
cmp
push
int3
rcrb
fcomps
adc
aas
sahf
int3
mov
jle
in
mov
sub
int3
daa
dec
dec
cli
fadds
mov
mov
insb
mov
xchg
loopne
push
subl
jmp
and
fsts
aaa
lret
xchg
jnp
cwtl
add
cmp
and
std
push
push
es
sub
pop
aaa
movsb
mov
fwait
std
std
pop
pop
push
repz
lods
or
adc
sbb
jmp
daa
cmc
push
push
aaa
test
pushf
mov
test
jae
add
adc
mov
inc
int3
outsb
sub
fisubl
daa
into
xor
fmuls
stos
mov
and
cwtl
fcoml
pop
icebp
xchg
cmpsb
dec
push
js
pop
or
movsl
mov
fstpt
lcall
xchg
jl
xchg
mov
ja
ds
clc
jg
fdivl
xchg
fwait
xorb
xchg
push
neg
cld
sbb
mov
mov
jne
sbb
xchg
jnp
outsl
jecxz
iret
xor
xchg
or
mov
sbb
and
adc
test
jecxz
mov
fnsave
sbb
mov
movsl
and
mov
cwtl
and
mov
and
cmp
adc
dec
mov
push
sbb
push
mov
adc
jb,pn
outsb
stc
fsubr
iret
movsb
or
mov
inc
mov
mov
pop
jbe
inc
add
mov
sub
mov
adc
loope
aas
and
sarl
jle
cmpsb
fcoml
movsb
dec
dec
jle
or
cmc
mov
mov
push
mov
hlt
scas
std
pop
mov
les
push
adc
in
cli
jp
cmp
fsubl
lods
sti
outsb
inc
jl
js
and
xchg
lods
pop
negl
jge
icebp
inc
add
xor
lods
adc
xor
movsb
sti
sub
dec
xchg
mov
pushf
int3
dec
fimull
lahf
xchg
pop
fsub
mov
xor
sbb
nop
sahf
aas
cmp
mov
jmp
bound
jle
jmp
pop
lods
sti
jmp
mov
push
cli
push
jne
mov
jne
push
push
sub
out
pop
aaa
lea
repz
das
cmc
fsubs
fwait
sti
cs
push
clc
sbb
cmpsb
stos
fwait
cwtl
or
jecxz
outsb
rcrl
sub
jbe
cwtl
sti
in
or
mov
jae
xchg
xchg
sti
adc
or
test
scas
jmp
ss
rcll
mov
xorb
popf
hlt
fdivs
and
cmpsl
adc
push
mov
push
jo
es
fcomp
mov
xchg
xor
push
mov
pushf
stc
and
subb
jle
rorb
cmp
jp
jo
movsb
xor
mov
mov
lds
mov
push
stc
jbe
arpl
xchg
push
adc
sti
imul
rorb
jb
jnp
push
mov
sub
mov
imul
mov
add
fdivrl
popf
or
xchg
lret
clc
dec
stos
mov
fdivl
xor
sub
sub
xchg
mov
mov
pop
pushf
mov
lea
pop
jno
sub
loop
add
mov
or
mov
je
or
pushf
je
fcompl
xchg
xor
and
inc
xchg
lahf
sbbb
lahf
fldenv
andb
sbb
xchg
std
cmp
inc
lock
jnp
aam
cmc
mov
mov
cld
clc
rcl
pop
ret
cmp
jecxz
xchg
shl
js
or
inc
pop
sbb
sub
xchg
loope
mov
pusha
repnz
idivb
insl
movsb
dec
inc
xchg
clc
xor
and
aas
lea
stos
jnp
mov
into
mov
pop
xor
inc
and
or
jmp
pop
repz
or
mov
in
or
push
in
out
aas
adc
movzbl
pushf
stc
xchg
xor
jg
cwtl
lock
sti
enter
fs
popf
pop
or
jl
stos
aaa
cmp
or
mov
mov
sarb
dec
mov
jp
or
arpl
lahf
clc
inc
mov
fdivrp
inc
pop
ja
ds
mov
jl
mov
ljmp
jo
cmp
rolb
pop
lods
cmp
mov
or
fadd
pop
add
test
pop
mov
fsubrl
xchg
or
sbb
and
inc
fdivs
insb
and
mov
jbe
xchg
xchg
in
xor
or
cwtl
mov
into
aas
fstl
repnz
jae
xchg
inc
or
adc
decl
insl
cmp
dec
stos
rcll
enter
pop
jmp
xchg
dec
aad
mov
jg
mov
sub
mov
lds
pushf
jne
and
jg
divb
aam
scas
jo
aaa
sbb
xchg
lea
cmp
test
fcomps
imul
push
adc
push
mov
xchg
out
inc
aad
out
enter
les
rclb
sbb
mov
nop
mov
mov
scas
mov
mov
xchg
sub
lods
push
mov
inc
mov
leave
jmp
jp
cld
jmp
fldl
scas
popa
in
aaa
inc
test
push
ja
pop
sub
stos
xor
add
xor
mov
mov
adc
jnp
rcrb
cmp
jg
add
inc
subl
ret
test
mov
pop
or
sbb
test
dec
sub
lds
add
pop
jb
sti
jne
outsl
mov
aad
mov
sbb
cmc
sbb
sbb
or
rcll
cmpb
cmp
adc
lea
mov
icebp
sbb
adc
ss
sub
pop
mov
push
loopne
dec
xlat
xchg
fdiv
xchg
cmp
bound
xchg
push
or
lret
pop
sbb
dec
mov
cmp
imul
xor
mov
jmp
fdivl
jge
jnp
xor
pusha
scas
and
inc
ret
ret
mov
mov
pop
xor
xor
in
mov
and
imul
and
adc
lret
mov
bound
rcrl
jp
lds
jge
dec
pop
movsl
sti
pop
pusha
sti
pmullw
xchg
adc
push
xchg
cwtl
das
cmp
stc
pop
and
sbb
sub
mov
and
pop
sbb
loope
lahf
outsb
jge
cmp
iret
lret
mov
pop
push
sbb
push
and
mov
dec
in
push
push
mov
mov
lds
out
rclb
gs
jne
fiadds
mov
out
ss
insl
lcall
push
push
xor
jmp
mov
lahf
cmpsb
xchg
jge
push
int3
test
mov
pop
push
test
fdiv
xorl
dec
jo
enter
jo
int3
xor
fadd
int3
push
hlt
push
ror
jg
sbb
rclb
xchg
xchg
pop
xchg
iret
xchg
cmpsl
pop
nop
roll
add
sbb
mov
mov
mov
fisttpll
cmc
pop
mov
jp
or
std
test
lret
fisttpll
imulb
pop
jb
stos
bound
gs
push
fisubrs
lock
push
std
push
xchg
mov
pop
mov
lcall
push
inc
pusha
jb
add
sbb
pop
lds
jnp
xchg
dec
mov
out
fwait
jbe
push
repnz
mov
dec
xor
pop
ja
std
enter
aas
jl
mov
sar
call
data16
mov
xor
pop
fsubp
ljmp
gs
xchg
add
rorb
push
xor
xlat
jns
cmpsb
arpl
cmp
xchg
rcr
jne
pop
into
mov
xor
inc
fdivl
les
iret
xor
sti
xor
xchg
andb
std
pushf
xor
adc
xchg
jmp
scas
jmp
xchg
cmp
cmp
leave
mov
lret
in
movsb
adcl
mov
push
adc
insb
pushl
dec
push
add
inc
test
stos
imul
inc
mov
pop
xor
adc
fnstcw
mov
mov
jnp
mov
inc
in
push
pushf
sub
das
pop
cmpb
out
inc
mov
mov
mov
in
lods
sbb
pop
aas
andb
movsb
mov
incl
push
ds
lock
dec
lcall
fcoms
sahf
push
test
popa
xchg
pop
sub
mov
std
push
flds
test
add
cmp
and
ficoml
xchg
sub
mov
cmp
ja
arpl
xor
pushf
inc
cmp
jno
pop
xchg
adcl
cmp
dec
and
fs
cli
inc
inc
mov
fdivs
shlb
cmp
inc
sti
dec
loopne
fucomip
movsl
sbb
cmp
mov
add
aas
jmp
enter
cltd
lock
fwait
mov
daa
pushf
mov
loop
cs
hlt
and
mov
cmp
sbb
adc
push
sti
xchg
pushf
adc
mov
cmp
ss
inc
iret
sub
pop
push
adc
xlat
xchg
sub
pop
and
pop
or
adc
pop
cwtl
pushf
xchg
cmpsb
cmpsl
bound
adc
adc
aam
es
xchg
rcrl
aam
mov
mov
imul
test
ss
cmp
sub
sbb
cs
mov
fwait
loop
lcall
xchg
js
mov
arpl
cmp
xchg
cmp
rolb
pop
sub
imul
xorb
pop
mov
cs
jle
dec
mov
loope
sub
aas
or
cwtl
mov
repnz
xchg
loopne
cmp
stos
xchg
arpl
sub
cmp
clc
cmp
fwait
lds
aas
inc
jne
add
insl
xor
andl
push
mov
fxtract
cmpsb
test
xchg
aas
mov
pop
test
popa
mov
push
mov
dec
xlat
decb
pop
pusha
add
aas
insb
mov
mov
popa
mov
adc
or
out
and
ret
iret
das
pop
xlat
mov
lods
xlat
lock
icebp
adc
les
inc
clc
mov
pop
adc
pop
mov
and
imul
insl
lds
loopne
cli
arpl
repz
enter
jnp
mov
mov
cmp
jle
sub
push
xor
idivl
ror
inc
cld
test
add
neg
sbb
pop
pop
mov
fsubr
push
iret
loope
das
jne
adc
and
cli
mov
pop
pop
pushf
fwait
loopne
mov
jb
test
xor
add
pop
or
dec
push
faddl
lret
daa
imul
sbb
mov
mov
fwait
shlb
push
daa
inc
out
cwtl
pop
das
test
repnz
cs
inc
shl
jg
cwtl
and
addb
sti
popa
ret
dec
lods
mov
ja
xchg
pop
cmp
push
call
mov
fwait
jg
pop
pop
sbbl
movsl
mov
lahf
fistps
or
sbb
pop
in
leave
cld
mov
test
pop
mov
fldcw
mov
sbb
js
cmpsb
pop
fiadds
pushf
jecxz
push
dec
or
shlb
loope
stos
bnd
clc
pop
adc
push
shlb
pop
ss
lea
push
dec
hlt
xor
fsubrs
call
inc
and
aaa
cmp
ds
cmp
and
xchg
mov
mov
arpl
push
imul
fistps
into
mov
push
dec
out
sbb
mov
mov
pop
inc
fimuls
cltd
aas
dec
sbb
jecxz
adc
outsb
stc
sub
nop
pop
mov
enter
cmp
push
cld
xchg
mov
lcall
mov
mov
mov
pop
pusha
cmp
fnstcw
mov
sbb
cmc
xchg
cwtl
lods
imull
mov
pop
mov
fadd
dec
faddp
arpl
fwait
mov
leave
lret
into
mov
sbb
into
cmp
push
aaa
aad
lret
fs
mov
jp
xor
cmp
or
in
fldenv
lcall
ja
add
popf
fstps
mov
mov
es
mov
inc
adc
mov
and
pop
ds
js
xchg
and
xchg
sti
mov
xchg
test
jle
popf
sbb
jp
cmp
cmp
inc
jg
pusha
jecxz
cmp
mov
jge
add
scas
sti
icebp
add
push
jle
mov
orps
jnp
dec
mov
mov
into
sub
int
push
inc
out
fldcw
mov
push
les
call
cltd
and
inc
les
aas
cli
jl
movsb
adc
lcall
aas
pop
mov
cs
pop
sbb
mov
pop
add
ljmp
ljmp
shlb
and
fnstenv
outsb
sub
inc
mov
mov
lods
cmpsl
ret
fdivl
dec
lds
mov
test
jmp
cwtl
xchg
jg
gs
sahf
sbb
push
adc
jmp
out
sbb
add
daa
push
push
iret
lock
test
xor
push
adc
mov
pushf
jg
loop
push
sub
bnd
lcall
fdiv
jle
stos
adc
jle
addb
loop
out
xchg
lahf
cmp
jmp
sbb
int
and
jbe
push
mov
push
push
gs
nop
pusha
pop
ss
adc
mov
pop
jne
sti
test
andl
fldcw
xchg
dec
xchg
push
enter
and
push
jle
cmp
movsl
sarb
mov
stos
jne
std
or
imulb
pusha
inc
mov
mov
repz
cmpsb
lcall
mov
inc
mov
add
xchg
add
shrl
add
sbb
incl
and
xlat
lahf
and
xchg
lock
mov
sub
add
divl
push
movsl
shrb
jb
sub
fmul
pushf
mov
cmpsl
or
movsb
xchg
xchg
mov
in
mov
jmp
rol
sub
pop
adc
jo
aas
in
jmp
cmp
mov
clc
and
or
pop
and
xchg
das
ljmp
ret
mov
pop
imulb
inc
jp
bound
stos
or
dec
inc
imul
insb
adc
pop
cmpsb
and
mov
adc
aas
inc
hlt
pop
and
push
cmpsb
jnp
ret
std
jmp
push
push
or
add
mov
lods
sbb
inc
cli
int3
pop
cmp
mov
loope
inc
sbb
mov
aaa
repnz
aas
nop
pop
jecxz
lods
in
mov
pop
sbb
loopne
scas
rcrl
test
lea
add
mov
test
jecxz
mov
sbb
mov
jae
mov
in
xor
push
push
xchg
mov
cmp
ljmp
fwait
sbb
testb
lcall
adc
mov
ds
cmp
and
cli
cmp
dec
lea
repz
cmp
into
push
stos
mov
ljmp
adc
pushf
pop
inc
cmp
xchg
aas
cmp
inc
scas
cmp
jg
jnp
aas
mov
sbb
test
cli
inc
add
xchg
rorl
fstp
mov
imul
leave
xchg
sbb
and
and
xchg
or
jle
adc
insl
mov
fnstsw
rcl
xchg
cwtl
mov
mov
cli
scas
mov
and
sbb
pop
aad
adc
mov
cmp
mov
pop
jl
rorl
push
pop
add
repnz
shrb
mov
push
pop
loope
cmp
sbb
pushf
push
addr16
add
rorb
repz
mov
sub
fistl
fs
push
inc
lcall
ss
das
sbb
in
sub
jnp
in
adc
mov
aad
dec
pop
cmp
sbbb
mov
mov
cmp
inc
xorb
and
repz
pop
push
xchg
push
dec
pop
push
std
rcrl
push
xor
pop
jae
ds
jb
shl
jge
adc
adc
aaa
repz
cli
inc
mov
aas
or
xchg
mov
inc
push
xor
push
cmpsl
movsb
xchg
xor
setbe
cmp
inc
mov
mov
or
out
js
in
inc
xchg
enter
int3
aas
stos
adc
or
cwtl
test
mov
sub
cmc
mov
xchg
xor
push
pop
jmp
shrb
fnstsw
stos
jo
sbb
aaa
mov
fwait
mov
rsm
test
sahf
fcomps
cmpsb
outsb
fdivr
shrl
les
and
test
mov
mov
xchg
pushl
ss
int
cmc
xorl
ret
xor
mov
jmp
mov
shl
mov
movsb
pop
iret
nop
mov
lds
add
jne
adc
xchg
daa
jbe
jg
dec
cld
and
stos
pop
gs
icebp
pop
andb
mov
mov
mov
push
fsubl
or
mov
add
mov
fdivrp
std
rolb
repnz
stos
xchg
sbb
jne
sbb
dec
add
lea
subb
jns
hlt
and
mov
pop
loopne
mov
xcrypt-cbc
cmpsl
push
mov
in
sub
flds
cmp
shll
addb
jne
sbb
and
mov
add
sbb
push
or
cmp
jb
inc
dec
sarb
test
mov
mov
lret
loop
leave
andb
sub
cmpsl
faddl
sbb
aas
shl
rolb
cmpsl
fisttpl
jnp
or
popf
ret
jbe
dec
js
scas
repz
or
pop
rol
mov
xchg
mov
mov
orw
fistpll
cli
mov
add
push
fucomip
fdivrl
jmp
mov
inc
dec
add
xor
sbb
push
dec
cwtl
gs
pop
jp
mov
mov
xchg
xchg
scas
xor
sbb
jl
mov
test
jns
daa
sarl
loopne
sti
xor
mov
cmp
push
cli
pop
test
pushf
push
popf
ret
in
push
mov
daa
cld
cmp
call
cmpsl
xor
lock
adc
shrb
jg
dec
aad
loop
pop
fsubs
mul
sub
jge
pop
sti
fbstp
mov
mov
mov
test
fcompl
clc
sub
mov
mov
pop
ss
mov
jno
jb
mov
jae
int3
sahf
sub
outsb
lahf
call
es
js
test
mov
clc
sbb
mov
stos
push
xchg
jnp
popf
xor
adc
jl
mov
je
cwtl
or
mov
mov
cmp
xchg
std
pop
sbb
mov
mov
cmpsl
sti
popa
sub
cmpsb
ret
roll
cmp
aas
mov
mov
stos
mov
cld
push
test
xor
fsubs
push
loope
data16
xchg
rolb
or
insl
sbb
incl
je
lret
ret
out
sub
mov
movsl
sbb
shlb
push
enter
idivb
test
mov
ds
stc
mov
fmul
add
mov
fs
sbb
mov
test
shl
mov
mov
and
lret
in
cmp
cmp
jg
xchg
enter
in
inc
lods
mov
fidivs
pop
ds
fiaddl
add
sub
lcall
lods
pop
ds
out
push
cmp
lea
nop
fisttpl
pop
jge
int
repz
pop
jg
jae
in
pop
adc
mov
inc
sub
mov
sbb
jl
es
popf
mov
mov
inc
inc
lea
aas
roll
push
push
and
cld
outsb
test
add
sbb
or
pop
mov
pop
and
ss
lds
sti
xor
cmpsb
idivl
fdivs
or
jg
in
jb
pop
mov
rcl
mov
sbb
xchg
cmp
pop
sbb
cli
push
push
ljmp
xor
je
xchg
pushf
mov
dec
ss
push
pop
jbe
cmp
test
xor
mov
xchg
frstor
cmp
sbb
push
cmp
add
mov
aad
rorl
sub
jle
sbb
js
test
in
jp
mov
lret
mov
adc
lea
scas
fwait
outsb
sbb
fs
cmpsl
mov
xor
pop
cs
push
jae
cmp
inc
adc
jg
inc
pop
sub
insb
sbb
cmp
mov
push
dec
cmp
lds
ss
jg
fildl
das
mov
fadds
mov
mov
pop
cmpsb
sub
sub
sbbb
and
xchg
fsubl
jne
sarb
xor
mov
popa
xchg
mov
jge
push
mov
dec
nop
pop
mov
lmsw
cwtl
push
js
cmp
out
pushf
ret
stc
adc
jl
pop
jbe
and
lods
inc
mov
jmp
inc
fs
lods
xor
jecxz
rclb
and
cli
mov
sub
sub
jecxz
xor
cmp
les
sbb
adc
gs
mov
sbb
in
repz
sarb
jns
negl
pop
mov
sbb
stos
and
push
pop
inc
in
lea
gs
sbb
mov
movsl
pop
inc
das
push
repnz
cmpsl
mov
pop
fs
sub
cli
sub
mov
pop
mov
pop
lds
and
and
lcall
dec
cmpsl
cltd
mov
fsubr
pop
and
push
cmp
aaa
fwait
into
xchg
fcmovnbe
repnz
cmp
mov
int
loope
jmp
test
lahf
imul
mov
jnp
shlb
jbe
test
jp
es
push
dec
xor
xchg
and
ds
jb
inc
cltd
test
nop
mov
jle
add
rol
aas
fxch
popf
sbb
pop
jb
add
es
in
pop
add
xchg
and
mov
mov
jae
mov
pop
fs
hlt
or
ds
movsl
lock
aam
fdiv
mov
lods
testl
sbb
subl
inc
ljmp
xchg
orl
cmp
lock
adc
xor
cmp
mov
or
mov
adc
pop
xor
push
mov
stos
iret
push
popl
rcrl
shrl
lret
xchg
in
shll
and
mov
outsb
test
xchg
scas
jecxz
xchg
xor
std
xchg
or
add
inc
ss
shrl
mov
cmp
cmpb
into
inc
mov
pushf
xchg
push
mov
pop
sbb
jp
movsb
les
pop
xor
mov
push
vunpckhps
cmp
push
mov
data16
jg
mov
lods
dec
xchg
pop
fdivl
jbe
mov
add
cmc
push
pop
fcoml
sahf
inc
pushf
mov
push
mov
fidivrl
es
xor
cmp
adc
insb
cmp
mov
sub
sbb
xchg
xor
xor
es
mov
rorl
arpl
je
ds
and
sub
jl
int3
rcrl
jnp
stos
repz
daa
inc
mov
lds
or
fstps
mov
cwtl
cmp
sbbb
mov
push
jmp
test
cmp
or
add
incl
mov
fidivrs
mov
push
mov
sbb
dec
jo
sbb
out
ret
mov
adc
xchg
fadds
sahf
pusha
inc
repz
fs
mov
push
jle
pusha
mov
fs
jle
cmpsl
fcoml
into
aad
or
jg
push
jno
mov
sub
insb
movsb
pushf
add
inc
dec
int
repnz
fwait
repz
mov
pop
incb
push
aaa
cmp
xor
and
push
call
xchg
cwtl
sti
stos
ds
lahf
jg
test
ss
cwtl
rcl
inc
fcomp
inc
adc
pop
sarb
jecxz
push
in
enter
mov
pop
add
cmp
fisubrs
xchg
mov
aas
mov
adc
mov
adc
xor
adc
sub
mov
insl
test
loop
or
dec
cmp
lods
repz
inc
push
inc
nop
rclb
mov
ret
inc
mov
js
xchg
cwtl
sahf
sub
leave
adc
lods
lods
sbb
cwtl
push
divb
movsl
int3
sub
ret
mov
or
or
sbb
cmpsl
or
xor
js
jg
mov
or
cmp
daa
dec
mov
push
xchg
sub
jnp
js
ja
dec
xorl
stc
xor
fldl
mov
outsl
xchg
jnp
lods
jge
pop
and
xchg
cs
stc
ror
lret
mov
adc
xchg
push
test
insb
out
rol
jae
pushf
adc
cmp
pusha
adcl
les
mov
mov
or
cmp
fldt
mov
sbb
mov
lock
mov
mov
popa
add
mov
les
xor
lcall
fdivp
outsl
cmp
mov
add
mov
lret
or
add
xchg
pop
jb
jp
pushf
or
add
and
jp
push
jle
icebp
inc
ja
lcall
fwait
ret
mov
repnz
push
outsb
cli
sbb
outsb
jecxz
cmp
push
scas
scas
jmp
jmp
lcall
aam
enter
scas
addl
ds
push
mov
jo
jns
idiv
pop
mov
mov
dec
pop
lock
cmp
cmpsl
mov
fcompl
push
sub
mov
mov
hlt
pushf
pop
int
call
adc
popf
data16
mov
xchg
sub
adc
mov
out
xchg
iret
cli
das
add
out
insl
out
and
mov
and
sti
mov
out
scas
incl
fwait
sub
push
lds
xchg
dec
pop
int
vandnps
xchg
fadds
mov
jl
dec
jbe
mov
fdivrl
lds
mov
xchg
out
push
jg
mov
xchg
testl
arpl
xchg
sub
add
xlat
fbstp
call
inc
mov
jg
hlt
andl
push
xchg
push
mov
mov
jg
enter
adc
aad
adc
push
enter
pop
inc
xchg
test
sub
ljmp
stos
cmp
sub
into
jb
psllw
aas
popf
sti
lods
ds
push
sbb
mov
clc
dec
xlat
pushf
cmp
out
fbstp
je
adc
adc
iret
out
cli
sbb
fs
scas
push
popl
push
sbb
outsl
add
mov
mov
movsb
xlat
vmovdqa
shrb
pusha
js
enter
out
sub
and
jns
arpl
xchg
dec
inc
fisttps
jno
adc
lret
jo
jae
leave
jne
scas
cmp
xchg
lods
cmp
rorb
cmp
cwtl
mov
and
cld
movsl
lret
fwait
xor
mov
mov
jb
sti
testb
jne
sbb
xchg
sbbl
insb
push
add
loope
icebp
mov
scas
pop
sub
int
push
jle
lret
bound
cmp
scas
jnp
fpatan
fstpl
xchg
call
mov
testl
insl
xchg
push
dec
shll
or
mov
aad
jecxz
sbb
xchg
jnp
mov
cli
test
rcll
fsubl
jns
xchg
mov
mov
aas
out
xorl
pop
adc
mov
lret
mov
clc
nop
bound
and
xor
pop
repz
icebp
or
insl
repnz
test
mov
mov
es
insl
nop
fcom
dec
cmc
lea
cli
cmpsb
ss
jb
sti
adc
mov
lock
stos
call
fbstp
sub
lcall
or
insl
add
push
push
sbb
lret
pop
pop
cmp
ljmp
aas
inc
or
loope
xchg
cmp
cmp
or
push
mov
ss
mov
mov
cwtl
adc
out
dec
cld
out
mov
mov
cmp
ret
aam
xor
popa
cli
outsb
stos
adc
push
subb
ret
ljmp
pop
jno
push
pop
sbb
xchg
cmp
lods
sub
js
xor
leave
rorb
cmp
xor
fwait
jg
shlb
fiaddl
rol
mov
xchg
and
mov
addr16
popf
loope
xor
and
jb
mov
push
mov
vsubps
int3
dec
pop
int
xchg
inc
psubsb
psraw
fcoms
sti
outsb
loope
imul
jno
sbb
enter
aaa
add
jnp
repnz
cmpb
lcall
ljmp
mov
mov
mov
pop
push
stos
jp
xor
mov
push
cmp
jbe
lods
sti
out
and
stos
adc
fldl
and
aaa
aas
pop
popa
adc
jp
js
sbb
scas
fstps
xchg
push
cmp
push
mov
movsl
movzbl
ja
add
cmp
je
movsl
lds
mov
cmp
mov
fs
sbb
or
fsubl
push
cmp
or
mov
out
cmp
es
mov
fcoml
lret
push
hlt
enter
sbb
stos
outsl
sbb
sbb
and
jno
leave
xor
negl
xor
dec
and
adc
shl
adc
cli
sbb
mov
add
and
test
test
cwtl
xor
lods
pop
fcompl
mov
insl
sub
popf
pop
sub
fwait
das
sbb
movsb
cmp
add
sbb
repnz
aad
pop
cmp
orb
insb
lods
setle
jle
push
les
jne
iret
fucomi
cwtl
cs
pop
in
pop
mov
ja
jnp
mov
xor
mov
cmp
pop
xchg
push
in
paddw
cmp
data16
pop
imul
push
fcmovbe
enter
and
fidivs
outsb
xor
aam
jp
pop
add
in
sbb
aas
xchg
aaa
movsb
mov
xor
hlt
pushf
mov
push
adc
push
jecxz
pop
xchg
mov
mov
pop
and
fiadds
je
insb
les
andl
retw
pop
daa
pop
mov
out
aam
push
or
add
pop
lcall
enter
xchg
pop
xchg
nop
jge
bswap
cmpsl
lcall
mov
test
int3
cmpsb
sbb
lcall
scas
addr16
ja
inc
popf
mov
arpl
jl
lock
fildl
shll
jle
mov
ret
xchg
push
int
push
or
and
cs
jmp
mov
subl
push
aaa
je
cli
stos
jno
mov
dec
fdivs
cmpsl
aad
pop
leave
mov
orl
xchg
xor
cmpsb
mov
fcomi
lahf
mov
scas
nop
pop
lods
jne
mov
arpl
mov
push
stc
test
xchg
pop
xor
push
loope
mov
mov
sub
dec
pusha
adc
xchg
fimuls
mov
fisubrl
cmp
jp
pop
repz
pusha
pusha
popf
out
movb
xor
js
data16
int3
leave
mov
cld
mov
mov
jg
in
pop
mov
cmp
mov
inc
add
push
sets
nop
cmp
inc
or
xlat
fs
mov
mov
movsb
cmp
mov
mov
adc
add
jns
push
loop
mov
jnp
icebp
jl
sub
pushf
xchg
jmp
sub
sbbl
adc
xchg
js
or
aas
sbb
fucom
inc
add
mov
in
mov
pop
adc
jae
adc
jae
stos
movsb
mov
mov
xor
jp
mov
inc
ss
out
rcrb
mov
ljmp
inc
ficoml
fwait
pop
mov
cmc
sub
test
add
inc
mov
mov
mov
scas
push
jge
aaa
popf
push
sub
rclb
jnp
jge
call
enter
and
out
out
sbb
inc
pop
int
div
movsb
aas
jns
gs
movsb
stos
arpl
daa
push
push
sub
lret
cmp
inc
xchg
sbb
popa
jb
adc
inc
and
mov
sbb
sti
or
filds
or
jb
push
out
lret
push
sub
mov
or
fwait
aad
push
in
shrl
cmpsl
cs
sbb
sub
es
shrl
sbb
lahf
mov
mov
int
rcll
mov
add
cmp
add
daa
fwait
imul
sub
and
xor
xor
adc
mov
insl
test
out
push
adc
jg
enter
adc
inc
jb
cmp
cld
add
inc
sbb
jge
fmull
mov
popa
sub
cwtl
es
xor
sbb
sub
xchg
adc
add
cmp
mov
pop
test
fwait
push
mov
mov
inc
cmpsl
inc
fstpt
jle
ret
jo
mov
insb
mov
xchg
mov
pop
sbb
jle
push
adc
lock
fildl
repnz
aas
xorb
jg
test
fucomp
sub
into
inc
cwtl
js
cmp
adcl
push
mov
or
roll
lret
sbb
js
out
sbb
mov
mov
push
mov
jmp
jno
and
pop
adc
aad
mov
add
pop
cli
cwtl
insb
test
mov
adc
mov
fildl
stos
cmp
sbb
dec
aam
aam
fcomps
ja
les
cmp
bound
lahf
cwtl
int3
lock
sub
out
xchg
sti
sub
push
movb
daa
pop
mov
sub
out
and
cmp
and
cld
xchg
cmp
add
sbb
scas
mov
sbb
incl
or
cwtl
pop
das
in
loope
jnp
add
dec
adc
loopne
push
jns
loopne
jnp
imul
pop
test
or
pop
fdivrl
fiadds
xlat
adc
lahf
adc
mov
lods
jae
cmp
in
lret
fwait
insb
sbb
push
sbb
hlt
xchg
repz
popf
sbb
lods
fldt
aas
hlt
mov
subb
adc
ss
movsl
mov
add
inc
xchg
jnp
fwait
in
mov
pop
cmp
out
arpl
clc
add
jl
adc
mov
test
aas
mov
jns
movsb
cmp
mov
cmc
lods
jp
cmp
jne
loopne
fidivrl
cmpsl
inc
jmp
mov
and
nop
sbb
xor
or
inc
xor
jl
sub
jbe
inc
mov
cmp
xchg
imul
mov
mov
xor
or
mov
lock
inc
sarb
inc
cmpsb
pop
xchg
mov
jl
pop
push
ljmp
cmpsb
cmp
add
inc
sahf
jo
nop
xchg
sahf
in
cli
push
fwait
cld
xchg
dec
je
movsb
das
xor
adcl
mov
adc
cmp
pusha
cmp
cmp
mov
cmp
pop
iret
insl
xchg
notb
leave
sbb
in
ret
jns
xor
cli
scas
sarl
xchg
push
pushf
pop
daa
sub
sahf
cmp
mov
add
pushf
or
cli
es
jnp
dec
das
cli
xchg
jmp
out
sub
dec
cwtl
dec
cmpb
sti
sub
fistpl
imul
jp
leave
out
sbbb
shlb
xchg
sbb
cmp
add
faddl
cmp
arpl
jmp
lret
sbb
fwait
out
bound
cwtl
shl
or
mov
fucomp
aas
xor
mov
jmp
mov
jmp
imul
div
sahf
mov
mov
es
outsl
insl
xor
dec
cld
and
cwtl
cwtl
sbb
push
rclb
sti
out
mov
std
cwtl
pop
sbb
out
inc
iret
lock
test
fsubl
stos
sahf
or
xor
sbb
mov
test
stc
jb
sbb
sarl
push
xlat
jbe
arpl
sub
int3
push
sbb
fst
popf
sbb
sbb
arpl
fmull
push
popa
jmp
sahf
decb
and
fsubr
adc
push
test
outsb
xor
cld
pop
sar
dec
pop
mov
stos
sarb
mov
cmp
movsb
cmp
xlat
mov
cwtl
and
add
sahf
mov
leave
aaa
xchg
mov
pop
sub
sub
mov
add
xchg
les
data16
outsl
mov
mov
sub
mov
mov
push
sub
sbb
xor
fadds
repz
sub
dec
dec
sub
ret
out
push
dec
cld
adc
jbe
pop
fistl
xchg
pusha
das
cmc
ds
push
aas
icebp
dec
cs
push
icebp
out
inc
mov
cmpsb
pop
mov
lret
adc
and
sbb
add
jb
pop
mov
or
push
xchg
jle
xchg
cmp
pop
movsl
fstpt
bound
cmp
jmp
in
fsubs
and
fs
add
hlt
es
pop
ret
cwtl
fsubl
mov
movsl
lret
int3
ss
jg
inc
in
mov
push
lea
jnp
jp
fildl
mov
or
pop
jmp
cwtl
aam
jnp
popa
rorl
imul
mov
cmpsl
pop
stos
in
mov
cmpl
pop
cmpsb
idiv
fs
leave
xchg
mov
test
sbb
in
xchg
sbb
push
inc
roll
fcompl
cli
and
pop
das
jge
pop
orl
mov
cmp
outsl
subb
and
pop
push
mov
push
mov
push
rcrl
sbb
in
fsubs
mov
stos
push
lret
sub
pushf
loopne
leave
inc
sbb
mov
mov
mov
arpl
cli
xchg
cmp
outsb
scas
xchg
movsb
cmc
imul
xchg
movsb
lods
xchg
or
pop
cmp
cli
and
add
mov
test
jbe
test
lods
inc
fwait
jae
push
sbb
or
xchg
test
pop
xchg
jle
lcall
call
cwtl
pop
mov
pop
aas
dec
lcall
fsubrl
adc
sbb
cli
dec
or
sahf
inc
dec
xchg
pop
sbb
roll
in
jo
mov
push
fildl
je
sbb
cmc
push
pop
dec
pop
or
sti
dec
sbb
sub
jb
mov
popf
jle
cmp
in
js
cmpb
outsb
das
jae
mov
xchg
pop
cwtl
and
mov
xchg
loop
lret
rol
sbb
cmp
faddl
cli
mov
cs
imul
jp
dec
lods
sub
add
sub
jbe
jb
jmp
mov
imul
jae
daa
das
adc
fs
mov
xor
lret
mov
adc
sbb
lcall
aas
sub
gs
scas
push
jmp
in
fadds
fcom
pop
jne
inc
push
or
lods
rcrl
sub
ret
ret
fistl
call
int
and
jo
or
iret
fnstenv
mov
pusha
icebp
mov
push
ret
insl
sub
adc
fdivrs
mov
fwait
mov
mov
mov
repz
mov
adc
xchg
shrb
pop
push
stos
jo
dec
dec
cmovb
test
pop
enter
ds
jno
push
lods
scas
scas
lcall
jmp
pop
cwtl
pushf
or
adc
pop
adc
clc
xlat
sub
sub
mov
rorl
ud1
ja
push
xchg
xchg
fs
aaa
adc
imul
cmp
cmp
stos
lods
lods
fwait
aas
and
dec
test
fimull
adc
mov
pushf
enter
movsb
add
shl
cwtl
sbb
sbbb
jo
lcall
fwait
adc
lds
mov
mov
sbb
loopne
cmp
cmp
test
mov
sub
mov
cmp
fcoms
cwtl
mov
cs
les
fxch
mov
fcompl
jge
mov
pop
sbb
pop
subb
rcrb
sbb
inc
pop
adc
fmuls
and
nop
xchg
lds
mov
mov
lds
mov
pop
xor
push
mov
cwtl
add
jp
xchg
inc
pop
mov
mov
rclb
cli
cwtl
xlat
mov
sbb
mov
xchg
fadd
std
dec
xchg
scas
movl
jne
mov
dec
and
inc
push
push
movsb
xchg
clc
popa
fwait
das
sbb
push
frstor
cli
jg
lock
adc
xchg
mov
add
pop
movb
iret
lcall
std
pop
pop
mov
mov
xor
xchg
rol
mov
xlat
xchg
or
mov
jg
fadd
lds
lahf
cltd
addr16
cltd
insl
inc
fsubl
scas
aas
lea
aaa
sub
or
add
or
mov
mov
pop
repnz
mov
xchg
cmp
divl
jno
sbb
out
int3
fwait
mov
sbb
push
xchg
cmp
sbb
xchg
sub
pop
cmp
mov
xchg
je
out
jl
fcoml
jno
pop
push
push
jle
and
mov
cmpsb
sub
jne
mov
out
add
jg
shrb
sarl
je
popa
test
pop
pop
mov
orb
fsubp
das
rolb
cs
sbb
mov
mov
aas
ja
lods
sub
pop
in
addr16
pop
jns
jmp
nop
test
sbb
xchg
sbb
sub
stos
test
push
jbe
leave
lret
lds
icebp
sbb
insl
hlt
jbe
pop
sbb
jecxz
outsl
into
rcrb
imul
cld
jg
push
popa
push
sahf
pmullw
sbb
xchg
adc
push
adc
xchg
mov
mov
or
cmp
iret
out
bound
test
mov
testb
adc
mov
cmp
inc
push
mov
and
adc
iret
sub
sub
aas
in
push
cmp
jl
in
ds
xor
mov
cmp
sub
mov
dec
jae
outsb
loopne
push
out
out
push
stos
sti
jge
sub
push
addr16
ds
pop
clc
cmp
inc
cwtl
aam
xor
xor
sbb
rol
jl
popa
mov
sbb
xor
sub
in
popf
es
push
jge
fcmovbe
arpl
xchg
les
rcrl
sub
into
or
sarb
pop
xchg
stc
pop
stc
aam
fistl
pushf
mov
aas
and
or
sbbb
cmp
out
sbb
mov
ret
test
xor
pop
dec
pop
or
fwait
and
pusha
aad
jl
mov
std
in
xor
outsl
orb
frndint
cmp
or
fisubl
sbb
andl
insl
pushf
fidivrs
mov
or
mov
fidivrl
mov
repnz
inc
pop
and
xchg
cs
out
imul
fidivs
andb
jne
mov
mov
js
rorl
ficomps
lcall
out
mov
cmp
idiv
mov
lods
push
sbb
mov
nop
clc
xchg
jo
inc
sbb
jne
dec
lods
pop
das
mov
sbbl
cmpsb
pop
lret
std
adc
hlt
rcll
and
or
idivl
fdivrl
es
xchg
insb
scas
test
xchg
arpl
add
xor
jns
sbb
pop
add
or
jae
xor
xchg
es
cltd
popf
adc
test
jg
pop
out
out
arpl
and
aaa
pop
lods
pop
push
mov
mov
mov
mov
nop
repz
jo,pt
dec
ss
and
lds
ja
or
jne
pop
sbb
test
xchg
pop
fidivrl
cli
cs
mov
pop
in
sbb
push
or
mov
jmp
inc
or
testb
out
push
fmuls
sbb
daa
fs
stc
movsb
shlb
xor
mov
push
nop
push
jle
cmpl
push
mov
test
add
sbb
or
int3
lret
adcl
aas
pop
jp
or
push
push
cmp
add
scas
mov
push
hlt
lock
cmp
jecxz
fcomps
dec
loopne
jnp
sbb
xchg
aaa
test
insl
cmp
negl
rol
sbb
repnz
cli
mov
jo
push
or
mov
mov
pushf
add
imul
cmpl
cmc
rclb
add
lret
mov
pop
std
data16
dec
mov
mov
aas
mull
jl
lcall
pop
daa
mov
or
sub
or
xchg
das
mov
sbb
je
imul
adc
outsl
loope
adc
call
fdivrs
sub
out
ja
pop
into
jl
push
sbbb
mov
mov
hlt
lret
cltd
aas
mov
rorl
jg
pop
adc
lods
xchg
or
adcb
mov
jnp
xchg
dec
js
xor
sbb
fwait
add
sbb
stos
cmp
or
cwtl
shl
lds
cli
enter
or
aas
outsl
inc
mov
and
movsb
sti
movsb
push
dec
aas
mov
jle
cwtl
fsubrs
sub
outsl
cmpsb
les
imul
push
cwtl
pop
dec
xor
loopne
cmp
add
dec
lock
push
test
sar
adcb
cltd
loopne
sbb
jno,pt
aad
xchg
loope
and
mov
aaa
notl
dec
movsl
test
push
call
jp
popf
cld
sub
adc
jp
sbbl
pop
mov
cwtl
mov
mov
pop
push
popf
pusha
imul
push
in
cmp
fldlg2
pop
aaa
xlat
and
adc
pop
lea
mov
ss
cwtl
cli
cmp
pop
mov
cmp
push
jnp
aam
jb
jbe
cltd
fnstenv
int3
mov
mov
dec
pop
mov
sbb
lret
jnp
sub
mov
fstpl
adc
push
mov
or
push
aam
add
fs
ja
lods
xor
push
mov
stc
andb
and
mov
in
ja
stos
pop
aaa
and
xchg
dec
sahf
jnp
mov
popa
lcall
mov
sub
xchg
or
mov
jae
mull
test
mov
sbb
cmpsl
sub
cmpsb
test
mov
scas
mov
mov
adc
mov
mov
add
push
mov
push
mov
mov
ds
fildl
cwtl
xchg
roll
fucomi
adc
mov
orb
push
fidivs
jge
gs
cmp
jo
fstpt
jb
imul
aaa
shrl
fcoms
cmp
fs
enter
neg
push
and
pop
decb
cmp
add
mov
xchg
push
movsl
ja
mov
adc
stos
jmp
cli
xchg
push
int3
fdivrp
lds
imul
loope
jnp
stos
aas
add
xor
and
in
pop
add
fdivrs
cmp
xchg
jge
outsl
adc
int
popl
and
sbb
scas
aaa
mov
sub
cmp
sbb
addr16
je
or
pop
push
cmpsb
jle
cld
pop
jmp
push
fdiv
out
movsb
je
mov
in
iret
adc
and
loope
adc
sahf
repnz
cmp
mov
cli
pushf
incb
and
clc
mov
imul
push
loop
popf
lods
cmp
ret
lret
lock
filds
cmp
fdivr
sbb
cld
int3
mov
push
or
and
xchg
inc
cwtl
iret
es
push
jmp
testl
std
push
ret
dec
aas
or
jl
or
cmc
ficoml
jbe
jg
fdivs
out
fcoms
jae,pt
add
or
imul
scas
jae
nop
add
sbb
jb
push
out
aam
push
mov
push
sub
and
movsl
jge
jle
cwtl
mov
cmp
fwait
add
faddl
ds
cmc
btc
movsl
out
ret
sbb
inc
into
gs
mov
sbb
outsb
dec
mov
cmp
pushf
adcb
fdivrl
mov
mov
nop
js
inc
jbe
or
mov
nop
or
nop
mulb
loop
cmp
mov
cli
popa
setle
inc
push
in
inc
dec
mov
sub
mov
cld
sarb
loop
mov
fmuls
jle
pop
scas
pop
mov
rcll
outsl
enter
ss
ljmp
jbe
in
mov
imul
rclb
ljmp
out
cwtl
and
into
cmp
in
ja
xchg
mov
jmp
jle
xor
lods
imul
cltd
sbb
mov
pushf
outsl
mov
pushf
push
push
lahf
fldt
xor
mov
lcall
das
mov
clc
or
popf
cmp
xor
xchg
dec
cmc
push
mov
fistps
xor
xor
inc
and
cmp
xchg
or
iretw
cli
aam
mov
aam
aas
imul
xchg
xchg
mov
jnp
aaa
mov
hlt
push
daa
xchg
xchg
sar
cwtl
push
aaa
inc
pop
es
add
push
push
mov
std
ss
ss
movsb
andb
test
hlt
jecxz
cmp
jb
sahf
ja
les
movb
out
lret
loope
xor
sti
pop
adc
push
add
fbstp
cwtl
add
fwait
lods
daa
ret
lahf
dec
jp
mov
add
jp
roll
test
lcall
xchg
aam
cmp
cmc
mov
dec
pop
xlat
jp
xor
push
rcrb
ja
inc
mov
in
faddl
shl
adc
pop
cs
mov
sbb
cmp
int3
punpcklwd
mov
sub
mov
enter
sub
mov
cmp
cmp
xchg
sbb
in
mov
stc
fwait
out
adc
scas
xchg
pop
xor
enter
out
cmp
je
incb
inc
xchg
movb
mov
jg
or
jo
lret
hlt
cmp
sub
hlt
pusha
stos
lret
sbb
sbb
aas
mov
daa
insl
push
mov
add
stos
pop
cmp
pushf
sub
fmull
push
xor
andnps
xchg
sbb
add
jnp
hlt
cmp
movsl
inc
adc
enter
test
sbb
lret
mov
enter
nop
pushf
ljmp
jmp
addb
push
add
push
add
push
inc
nop
cmp
xchg
add
pop
outsb
cmp
jg
icebp
mov
mov
jmp
push
bound
push
xchg
sbb
jge
out
mov
adc
fdivrl
xor
jmp
lahf
sbb
stc
xor
mov
mov
rcll
out
xor
sub
dec
andl
aam
xchg
adc
js
adc
sti
xor
xchg
dec
leave
jb
mov
lock
pushf
aam
pop
stos
fidivrs
cmp
pushf
ja
cmp
cltd
or
in
rolb
xchg
xor
pop
nop
adc
loope
pushf
mov
jmp
mov
mov
insl
add
jbe
sti
outsb
xor
lea
pop
stos
push
inc
lock
jnp
push
lahf
jge
cmc
cmp
aam
dec
cmp
stc
push
sbb
mov
pop
int3
lcall
and
cwtl
pop
loope
mov
loope
test
pop
jmp
mov
or
jle
aas
mov
mov
mov
sahf
pop
mov
loope
mov
xchg
icebp
popf
outsl
outsb
push
xchg
jle
xchg
push
orb
pop
bound
aam
repz
cmc
lret
sbb
loope
sbb
xor
incl
in
cmpsb
andl
xor
fsubr
adcb
cmp
enter
cwtl
mul
lret
push
lcall
push
push
and
stc
stc
or
cmc
xchg
mov
sub
xlat
pusha
rcrb
inc
or
sbb
or
sbb
cmpb
add
mov
xchg
cld
jl
add
fmull
fistpll
out
inc
sub
stc
aad
add
xchg
add
sbb
jle
push
xchg
mov
inc
shrl
iret
inc
stos
jg
insb
jp
das
shlb
cmpsb
imul
add
fiaddl
shll
popa
or
push
mov
sbb
orb
jmp
cmp
adc
sub
push
jle
jmp
insl
mov
push
jb
data16
ds
test
stos
addr16
push
adc
push
sbb
or
fcomip
test
cmp
mov
sarl
pusha
sub
jae
push
cmpb
sbb
movsb
jnp
sti
lcall
sar
sub
mov
add
jae
mov
jne
jmp
dec
sbb
addl
cli
push
cmp
lret
ss
cld
sbb
add
jecxz
pop
nop
mov
mov
cmpsb
and
aas
in
inc
cwtl
cmp
xchg
in
test
and
insl
mov
mov
dec
push
rcrb
js
dec
aam
mov
push
aas
mov
popa
pop
sbb
mov
fwait
bound
pop
dec
cmp
adc
icebp
loopne
jae
mov
mov
pop
icebp
mov
mov
dec
xor
push
mov
sbb
and
pop
push
add
lcall
pusha
faddl
lahf
xor
sti
jl
int3
je
es
into
and
sbbl
dec
inc
ret
cmp
fildll
mov
mov
sbb
sbb
or
cmp
icebp
cmp
mov
pop
es
pop
ds
push
xchg
sub
leave
js
mov
imul
ret
sbb
mov
js
fstpt
hlt
or
stos
add
push
cmp
pop
sub
cwtl
and
icebp
xor
inc
in
lcall
cmp
mov
mov
xor
iret
mov
insl
xor
mov
out
sbb
cld
sub
xlat
sbb
mov
push
inc
sti
je
sbbb
jecxz
cmp
xor
scas
pop
rclb
stos
push
sbb
jbe
push
or
inc
iret
stc
jnp
adc
pusha
fdivp
mov
scas
pop
push
lock
and
movsl
aas
popa
test
in
js
sub
sub
sbb
cmp
aas
pop
xor
jbe
mov
mov
cmc
mov
inc
mov
mov
jnp
iret
cmp
jbe
sbb
and
adc
cmp
or
pop
movsl
mov
aam
ja
mov
cmp
data16
cli
cwtl
dec
xor
pusha
and
jb
sbb
mov
pushl
mov
lods
icebp
mov
jg
pushf
fidivs
in
cmc
out
aaa
test
int3
test
in
inc
inc
sub
in
ja
and
sbb
lds
sarb
lahf
pop
mov
fadds
shrl
inc
repz
dec
sbb
out
push
pop
cmp
cmp
out
or
mov
mov
xchg
adc
mov
inc
test
mov
shrb
push
movsl
cltd
rcr
push
jbe
out
ret
test
iret
pop
push
xor
push
sbb
scas
sub
stos
jo
fwait
jae
and
es
mov
add
dec
outsb
je
lock
or
sbb
movsl
fs
jbe
imul
mov
mov
xor
pop
ret
cmc
cld
cwtl
mov
clc
aas
xor
ret
shl
jnp
mov
cli
test
sbb
subl
push
sub
sahf
push
cli
js
adc
or
xchg
in
test
cli
mov
mov
dec
cmp
dec
mov
sbb
lret
ds
mov
jnp
out
mov
jbe
movsl
sti
nop
jns
inc
mov
cmc
and
sbb
addr16
repz
push
mov
mov
divb
imul
xchg
sbb
jae
nop
data16
lret
clc
pop
jg
sbb
fnstcw
cmp
jbe
iret
mov
xchg
cwtl
test
cmp
pop
add
cmp
and
add
pop
or
push
pop
hlt
cltd
enter
cmp
in
stc
pop
lds
dec
call
ficomps
roll
dec
les
fmull
inc
push
fs
xor
repnz
jl
sbb
cmp
adc
sbb
shrb
pop
pop
pop
add
cmp
mov
lahf
out
inc
cltd
out
test
pop
movsb
jne
stc
jg
out
and
push
xchg
pusha
push
cli
and
adc
and
and
nop
mov
mov
cli
ret
pop
cli
popf
rcr
adc
mov
and
xchg
pop
leave
jb
in
es
mov
pop
xchg
mov
jg
lret
cmp
mov
xchg
test
aam
out
pop
in
jo
aad
sub
loopne
shlb
cltd
enter
sub
cmpb
int
xchg
imul
inc
fstpt
divl
rcl
loope
or
push
xchg
mov
jl
push
and
add
sbb
xchg
call
mov
call
lret
push
cmp
inc
loopne
sbb
mov
pop
sub
sar
sub
outsl
xchg
out
fdivl
push
js
aaa
ljmp
repnz
pop
pushf
outsb
jp
mov
fs
mov
test
scas
mov
adc
in
test
xchg
pop
into
or
cmpl
jo
cs
push
pop
cs
or
cmp
movsl
or
push
push
inc
push
push
in
and
push
lea
mov
shlb
adc
fistps
mov
iret
push
sbb
inc
imul
aaa
rorb
mov
ljmp
out
out
cs
int
lcall
xchg
rcr
rcll
sbb
push
add
xor
mov
cmp
mov
add
call
adc
andl
sbb
pusha
and
or
pop
jle
xchg
adc
cmp
xchg
enter
pop
enter
pushf
lock
das
fs
loope
jl
rclb
mov
in
sbb
push
ja
cwtl
mov
fs
jle
fadds
insl
adc
pop
lock
in
lds
or
mov
outsb
add
ds
insb
mov
push
jle
test
mov
cmp
fwait
mov
mov
mov
sub
sti
insb
or
push
mov
popa
xor
jl
pop
cmpsb
sti
cli
push
lds
fwait
fisttpll
push
pop
mov
repz
int
sbb
cmp
jbe
daa
in
jg
xchg
push
cmp
jp
fisttpll
xchg
push
cwtl
push
add
adc
fld
xlat
cli
mov
lods
insb
jle
sub
mov
xchg
jecxz
aad
sahf
lea
or
xor
xchg
std
loop
fadd
cmp
mov
mov
dec
xor
and
sub
pop
call
int
mov
cmp
push
jle
notb
pop
sub
mov
cmp
and
xor
loop
test
negb
and
mov
stos
pushf
lahf
mov
adc
pop
push
js
mov
and
pop
stc
push
lea
sub
jmp
jbe
rcl
stos
nop
and
scas
cmp
sbb
repnz
loopne
cmp
adc
push
push
insb
jl
cwtl
int3
idiv
pusha
mov
mov
out
rorb
into
push
cltd
sti
xor
out
rcrb
outsb
aam
arpl
cmp
pop
pushl
adc
dec
xchg
push
pop
jmp
ret
cltd
xchg
enter
popf
lea
mov
xchg
inc
fmull
sbb
mov
movsl
aam
pop
xchg
sti
ret
and
sbb
icebp
sbb
xchg
pop
outsb
xchg
ljmp
mov
push
xchg
fldt
inc
jno
scas
mov
call
lods
pop
cmpsl
fmull
push
out
xchg
push
nop
mov
cmp
mov
rcl
cmp
dec
cmpsl
aas
push
dec
cmp
cmp
lods
cld
add
cmp
ljmp
xlat
scas
sub
jp
xchg
sbb
movsb
out
and
pusha
lock
cmp
lods
cmpsl
sti
fcmovne
scas
add
aas
in
cmp
mov
sub
push
pushf
cli
das
int3
cmpsl
jecxz
push
mov
lahf
call
frstor
je
outsl
sbb
push
xchg
push
and
out
pushf
jnp
push
mov
pop
outsb
shll
mov
mov
sbb
enter
xchg
push
add
sbb
dec
clc
pusha
sarb
fcmovne
sbb
lahf
cs
popf
sti
adc
daa
dec
dec
test
loopne
icebp
sbb
loopne
ljmp
icebp
cmp
push
lods
mov
imul
stos
es
and
or
mov
test
sbb
test
xchg
popf
cli
lods
fidivrs
lods
clc
push
loope
mov
xchg
push
dec
mov
pop
jp
cmp
mov
lcall
sub
mov
stc
cmp
jmp
adc
push
cmpsl
jge
pop
mov
test
sbb
add
pop
sub
mov
aas
pop
sbb
inc
sub
cmp
cmp
xchg
aad
jae
fsubs
cli
pop
pop
mov
or
mov
outsb
mov
fisttpll
mov
movsl
out
xor
in
scas
imul
xchg
sbb
fwait
jg
scas
test
mov
jne
fcom
mov
negl
std
cmp
sbb
adc
mul
pop
xor
and
push
sub
mov
mov
jge
ljmp
sbb
mov
cmp
inc
mov
aas
cmp
sub
cmp
push
xchg
push
stc
xchg
pop
pop
cld
cmp
sub
pop
cwtl
scas
xorl
xchg
adc
sub
or
adc
cltd
mov
cli
call
push
mov
pop
cwtl
pop
fs
test
sbb
out
pop
jno
in
pop
adc
push
jge
aam
jnp
lods
rorb
mov
lcall
sub
sbb
aas
lock
sbb
jnp
pop
in
das
push
imul
std
push
sahf
xlat
jae
and
jecxz
adc
or
jp
cmp
and
insb
leave
stc
pushf
leave
cltd
sub
out
xchg
lcall
aad
lea
sahf
cmpl
nop
mov
sbbl
adc
js
pushf
std
sbb
mov
mov
fimuls
jmp
xorl
les
out
mov
insl
inc
sbb
pop
add
loope
stc
ds
fisttpl
push
push
xchg
inc
xor
mov
jg
adc
in
es
ljmp
cmpsl
cltd
aas
jb
out
mov
lods
imul
xchg
cltd
jno
jmp
test
mov
fcomps
mov
and
sub
cmp
sbb
scas
test
pop
fidivrs
mov
stos
jnp
xchg
js
lds
mov
mov
push
mov
xchg
adc
fcomps
sbb
jp
loope
pop
mov
mov
and
inc
lea
xchg
jge
jo
xchg
dec
sbb
stos
xorb
mov
les
adc
mov
adc
repz
int
push
int
and
andb
xchg
pop
icebp
jbe
movsb
jae
and
mov
loop
cmp
pcmpgtd
fnsave
mov
in
shl
pushf
fistps
adc
pushf
out
movsb
mov
xchg
push
sbb
pop
out
cwtl
jmp
sbb
xchg
gs
rcrl
lret
lcall
clc
aas
sub
test
ret
loopne
pop
mov
mov
mov
jg
inc
ds
jmp
shlb
sti
xor
xchg
dec
cwtl
mov
cwtl
fisubrs
shlb
pop
stc
test
mov
in
jno
or
fimuls
mov
div
push
mov
loop
jg
jns
mov
cmpl
push
pusha
stc
adc
test
sbb
mov
cmp
push
out
dec
sbb
adc
into
lcall
dec
mov
sbb
sbb
insl
mov
mov
push
sub
xchg
out
sbbl
inc
mov
sub
sbb
mov
shrb
dec
cld
dec
mov
movsb
push
sub
xchg
in
xor
mov
sahf
sbb
xor
in
into
dec
jmp
js
xchg
out
sbb
and
mov
sahf
cmp
cmpl
push
sub
pop
sahf
int3
or
cmpb
and
loope
pop
repz
fistl
push
pushf
and
and
in
inc
mov
mov
jmp
loopne
jnp
ljmp
mov
lock
sahf
popf
sbb
mov
mov
sub
pop
int3
mov
int
xchg
lds
ljmp
jg
lret
adc
adc
xchg
and
loopne
mov
out
jbe
fbld
cmpsb
es
aaa
cmp
mov
test
lea
movsl
fidivrl
pusha
cmpsl
pop
push
jb
repnz
mov
pop
lcall
test
mov
idivl
je
jnp
or
dec
ds
pop
mov
and
and
es
push
sti
sarl
rcrl
cmpsl
in
sub
das
cmp
std
push
popa
aas
mov
jno
mov
and
push
cmpsb
add
subl
sbb
cwtl
push
mov
ret
cmp
repz
ds
aam
movsb
cld
ret
aas
mov
and
xchg
ret
aad
pop
fdivs
cmpsb
icebp
push
loope
decl
mov
aam
adc
cmp
jle
mov
jp
fsts
sub
mov
rcrb
jle
loope
xchg
mov
fisubrl
mov
pushf
in
shlb
fildl
mov
arpl
and
hlt
sub
stos
test
sbb
cltd
and
pop
sarb
sbb
add
cli
inc
stos
sbb
cli
out
adc
loop
lods
jbe
cmp
js
xchg
xchg
adc
jb
xchg
xor
jl
cmp
sbb
packuswb
lea
xor
or
pop
pop
rolb
inc
das
gs
sub
mov
lcall
mov
dec
sub
pop
sub
mov
icebp
movsl
and
cli
sbb
jge
dec
or
fs
ljmp
sbb
pusha
pop
and
push
mov
mov
adc
cmpsb
daa
sbbb
enter
lret
nop
mov
dec
inc
in
mov
mov
push
lods
mov
sbb
jne
movsb
fxch
adc
push
mov
fsubrl
pop
ja
cmp
push
mov
arpl
stc
sub
pop
mov
cmpsb
test
fisttps
mov
pop
std
cli
and
mov
cmp
fcoms
iret
inc
fdivrl
enter
mov
fnstenv
pop
push
xchg
cld
xchg
jnp
pop
xorl
or
jnp
sbb
or
push
bound
or
out
sub
dec
repz
push
ds
dec
rorb
push
jge
xor
mov
lds
out
sbb
data16
or
daa
test
std
out
subb
fs
mov
fcompl
xor
in
mov
fbstp
mov
sbb
lds
and
nop
cmpb
aas
pop
fists
fcoml
mov
dec
stc
xor
sub
xchg
pop
addb
push
sub
test
jnp
jge
sbbl
stos
pop
xchg
dec
sub
and
out
pandn
sbb
xchg
lock
cltd
popf
adc
jns
std
aas
lock
push
subb
iret
jae
fdivr
out
mov
stc
adc
jnp
add
push
or
jle
sbb
mov
sbb
xchg
stos
in
fmuls
cmp
fistps
hlt
pop
mov
push
sub
jp
dec
hlt
mov
pop
out
sub
inc
mov
push
arpl
aaa
aam
mov
and
arpl
imul
push
jle
dec
pop
jnp
shll
add
loope
jo
lahf
mov
icebp
cmp
out
fadd
nop
es
or
jae
mov
inc
xlat
mov
cmp
ss
jg
dec
fnstsw
cmpsl
or
mov
cmp
cmpl
mov
cltd
cli
push
jmp
pushf
dec
insl
sub
in
pusha
testl
js
jnp
and
inc
mov
mov
in
stc
pop
mov
mov
and
ja
je
out
push
or
xchg
xchg
fcomps
arpl
pop
ds
imul
sbb
and
popa
push
hlt
inc
mov
test
xchg
lea
andb
cmp
or
mov
je
fdivl
jbe
std
and
clc
push
test
xor
pop
cmp
jg
mov
mov
adc
scas
jae
sub
adc
xlat
inc
pop
pop
jae
orl
sub
rorb
dec
stc
fdiv
fdivs
push
add
or
mov
dec
mov
jo
idivb
cmp
jmp
inc
pop
jo
fldt
mov
in
xchg
adc
xchg
fsts
pop
and
mov
sbb
sbbb
lcall
call
mov
dec
mov
mov
lret
cli
lods
pop
sbb
mov
imul
fsubs
jns
cmc
jl
repnz
ja
repnz
push
mov
cld
pushf
xlat
cmpsl
jnp
or
mov
sahf
insl
mov
pop
nop
leave
sub
fwait
xchg
jns
in
mov
ljmp
push
outsb
icebp
sarb
in
xchg
adc
xchg
add
sbb
scas
dec
and
lds
adc
and
stos
push
cli
das
cmc
fs
jp
lret
sbb
pushf
lds
or
ja
ja
add
push
call
pop
scas
aaa
lods
daa
mov
mov
mov
adc
mov
stc
cs
push
cld
test
pop
mov
sbb
pushf
xor
push
sbb
lcall
push
push
arpl
mov
push
pop
fwait
popl
inc
cli
adc
lcall
pop
add
push
xor
inc
jne
pop
add
xchg
and
cltd
lret
xor
in
aad
mov
sbb
mov
mov
scas
loope
jb
sbbl
cmc
cmpsl
cmpsl
lcall
shrl
or
shlb
sbb
add
lds
es
mov
sbb
nop
dec
push
int
push
subl
aas
pop
loope
adc
sub
out
test
push
add
mov
xor
push
nop
sbbb
inc
loopne
insb
test
mov
insl
jmp
ss
adc
fdivrl
xchg
xchg
js
cltd
mov
cmpsl
hlt
or
fistpl
sbb
out
aaa
fdiv
mov
shlb
pushf
cmp
pop
dec
repz
mov
jbe
sarl
cmp
or
jmp
and
cmpl
nop
xor
enter
sbb
iret
loop
dec
mov
xor
movswl
js
xor
ss
adc
aad
lret
les
leave
jnp
popf
movsb
sbb
xchg
mov
dec
or
dec
add
xchg
mov
adcl
pop
bound
divb
cmpsb
add
pop
clc
sbbb
jmp
sti
dec
jle
jmp
and
xorl
pop
mov
mov
xlat
push
xor
and
and
es
sbb
out
popa
addr16
mov
bound
xchg
jne
mov
xchg
mov
add
cmpsb
lret
pop
ljmp
push
sbb
stos
sub
mov
push
adc
pop
add
cmp
cs
stos
xchg
sbb
mov
inc
popf
mov
add
sti
outsb
in
inc
add
sbb
sbb
sbb
push
mov
dec
pop
andb
sti
mov
repz
adc
test
add
pop
shlb
dec
mov
and
ds
dec
data16
cmpsl
sti
lods
mov
pop
ds
repz
cli
dec
leave
xor
sbbb
movsb
pop
dec
mov
pushf
sub
xchg
fs
aad
jle
daa
inc
mov
adc
mov
out
mov
sarl
pop
pop
sub
or
fnstsw
mov
mov
dec
pop
jo
cld
push
scas
pop
test
fidivrl
test
sarb
call
adc
leave
aas
test
mov
cmp
cmp
fdivrs
cwtl
dec
ds
cwtl
inc
xchg
and
aas
cmpb
mov
fisubl
or
test
mov
cmp
push
xchg
js
mov
js
jp
adcl
loop
addr16
pop
jle
inc
xor
out
mov
push
xor
popf
popf
and
fiaddl
adc
add
das
xchg
fmuls
jo
call
enter
jg
push
in
test
js
in
fcompl
cmp
mov
les
iret
out
sub
dec
xchg
daa
leave
add
sub
mov
sbb
pop
lcall
call
mov
sbb
push
cs
pop
push
aas
insl
xchg
lahf
stos
stos
jg
into
dec
or
test
mov
iret
shlb
jnp
cli
and
orb
or
movsl
mov
adc
add
lea
ficomps
cmpsb
lods
add
insb
lret
test
int3
xchg
in
add
xchg
jnp
dec
pop
push
je
aad
adc
arpl
test
sarb
jnp
xchg
xchg
enter
adc
jp
mov
daa
pop
or
test
sub
loope
dec
sbb
mov
enter
iret
push
adc
pusha
adc
out
pushf
pop
and
xchg
pop
cwtl
pop
cld
pushf
clc
sub
adcl
mov
xchg
insb
cwtl
ret
mov
sub
ret
mov
cld
jge
out
and
and
negb
pushf
dec
lret
iret
inc
jl
and
aas
je
cld
mov
xor
inc
xor
push
pop
cmp
sub
cwtl
mov
aas
pusha
ret
cmp
push
or
js
mov
mov
scas
dec
test
daa
dec
pushf
lcall
test
stc
xor
sub
mov
mov
aas
out
shlb
jecxz
mov
js
cmp
test
cmpsb
cld
cmp
setnp
js
mov
mov
lds
outsb
imul
test
mov
aas
daa
mov
mov
scas
fcmovne
nop
cli
xchg
cmp
cltd
add
push
loop
pop
rorl
dec
scas
cmpsb
ja
mov
jg
decl
int3
fmull
pop
in
mov
add
jmp
scas
push
mov
pop
movsb
test
sub
sti
mov
push
daa
xor
movsb
jg
lods
mov
fisttpl
dec
cmp
std
inc
dec
mov
sub
pop
cmpl
cmp
incl
sbb
jecxz
sti
pop
lret
jp
xor
lods
cltd
cwtl
and
aam
push
sti
push
jb
jmp
loope
or
psadbw
imul
and
or
fcoms
jecxz
sahf
sbb
inc
xchg
jecxz
inc
sbb
out
mov
cmova
jle
xchg
push
add
call
gs
jae
int3
stc
cmc
pop
pop
cmpsb
mov
cwtl
add
cmp
sub
cld
lds
ficoml
mov
cld
adc
inc
cmp
adc
pushf
push
sub
sbb
jnp
mov
or
xchg
dec
loop
mov
cli
jns
lret
jae
and
pop
fwait
or
mov
fmul
fcmovnb
adc
push
ficomps
lods
xor
fcompl
adc
inc
ret
test
pop
sbb
lahf
fistps
add
rorb
add
mov
aas
cwtl
mov
scas
cmp
mov
fmull
cwtl
xchg
pop
in
jnp
xchg
xchg
loop,pn
es
sbb
jnp
lea
loop
sbbb
sub
cwtl
mov
pop
call
inc
xor
jmp
aad
mov
mov
js
inc
das
xchg
data16
gs
mov
lret
sahf
lcall
jno
sarb
cmpsb
cmp
pop
ljmp
mov
jno
mov
push
fwait
mov
insl
mov
out
cwtl
mov
sub
inc
mov
imulb
lret
add
adc
mov
xor
jl
add
fdivr
fcomp
pop
loop
mov
sti
js
mov
repz
mov
pop
push
pop
mov
mov
jmp
jecxz
and
mov
push
movsl
add
in
repnz
xchg
sub
mov
xchg
cli
shlb
xor
adc
xlat
dec
cmp
lods
mov
dec
mov
mov
cmp
xchg
pushf
repz
cmpsb
jg
mov
mov
out
sbb
jmp
sbbl
mov
and
loopne
pop
ds
test
mov
dec
xchg
addb
pop
mov
sarb
cli
and
daa
jecxz
mov
mov
jmp
mov
les
dec
repnz
xchg
rcll
jle
fcom
lods
jnp
inc
in
dec
in
pop
and
mov
fisttpl
fwait
push
push
jns
sbb
or
mov
scas
outsb
fdivl
popa
hlt
and
fnstsw
jne
push
xchg
push
stos
mov
or
jg
or
pop
add
cltd
sti
test
movsl
jle
out
mov
or
fwait
mov
cli
aaa
jmp
mov
mov
sbb
loope
pop
movsb
adc
ljmp
fimuls
dec
and
fcmovnb
mov
cmpsl
push
sub
mov
sub
out
add
aas
and
dec
jmp
ljmp
jmp
add
call
mov
inc
pushf
sti
cmp
clc
stos
cmp
cli
scas
xchg
fsubr
out
jecxz
xchg
pop
ljmp
add
ds
or
iret
in
pop
jns
cmp
fsubrl
mov
stos
fwait
xor
jmp
mov
std
and
mov
push
mov
jbe
mov
scas
incl
cmp
dec
dec
les
cli
and
xchg
sbb
mov
jle
pop
mov
dec
xor
mov
loope
loopne
and
lds
and
pop
movsl
sbb
push
push
ljmp
mov
aaa
add
pop
push
xor
pushf
sbb
jb
xor
cmp
add
add
xchg
fwait
or
jg
cmc
jle
cli
mov
dec
mov
jg
cmp
sub
adc
mov
cwtl
pop
mov
insb
and
sbb
xchg
jle
frstor
xchg
cmp
adc
sub
xor
pop
xchg
lret
outsb
fimuls
dec
cltd
fdivs
add
mov
push
cli
enter
inc
movsb
addr16
in
jg
add
sbb
push
js
repnz
sti
mov
in
ds
insl
pop
sbbb
dec
sbb
movsb
mov
jmp
cmpsl
xor
mov
push
xchg
jne
mov
aas
xchg
pop
mov
addb
aaa
sti
sbb
jbe
sub
xchg
sbb
mov
dec
mov
xor
sbb
inc
jl
jmp
stos
mov
pop
fwait
into
adc
pusha
and
xchg
mov
pop
clc
xchg
jnp
andb
jge
arpl
sbb
mov
fwait
mov
mov
popf
push
mov
es
aas
mov
in
mov
cmp
loopne
in
test
jg
cwtl
scas
inc
iret
push
adc
cmp
call
jg
in
jle
inc
pop
fisttps
sub
add
sbbl
aas
popa
cmp
mov
jg
fisttpl
stos
dec
adc
mulb
dec
sbb
mov
lea
lahf
hlt
pushf
mov
push
mov
xorb
fdivs
and
or
mov
push
in
scas
arpl
jmp
and
js
add
mov
pop
aaa
sbb
and
daa
std
in
outsb
pushf
fs
popa
dec
shrb
lahf
aas
sub
aaa
std
cmp
shll
inc
enter
sahf
lea
xchg
push
or
out
and
mov
adc
push
mov
pop
inc
fisubrl
into
cwtl
jae
fcoms
mov
or
and
in
push
insl
xlat
stc
gs
push
mov
mul
mov
shlb
pop
or
jno
mov
push
or
movsb
add
pop
push
sbb
mov
stos
push
fstpl
adc
inc
cltd
pop
popa
lahf
mov
out
rcrb
push
in
inc
adc
sbb
cld
das
xchg
lcall
inc
inc
xor
nop
mov
jnp
movsl
lcall
mov
jecxz
addl
mov
dec
mov
jg
sub
sub
mov
int
lock
mov
test
mov
sub
push
das
inc
mov
cli
outsb
sarl
xor
cld
dec
adc
cltd
add
cmc
sbb
test
stos
or
mov
into
test
or
jnp
lea
mov
pop
inc
jg
lods
stos
mov
mov
addl
mov
push
mov
mov
out
repz
cwtl
sti
leave
lcall
sub
ds
fildll
cmp
cmp
xchg
gs
rcl
sbb
push
and
cmp
jnp
ss
jae
out
fsubs
pop
aam
stc
sbb
ds
sub
xchg
jg
data16
sbb
push
insl
roll
cld
or
insb
jb
mov
jmp
jo
mov
scas
sti
popa
stos
cltd
xor
jg
mov
je
cmp
jo
adc
orl
sbb
jecxz
xor
mov
pop
mov
aas
call
aaa
psubsw
pushf
das
subl
fsubr
bound
xchg
js
pop
rclb
repz
stos
jne
mov
mov
fcoml
andl
scas
les
in
roll
push
mov
outsl
sbb
xchg
and
je
jg
in
push
cmp
mov
pop
xchg
ret
mov
sub
jg
sarl
enter
dec
cmc
ret
lods
add
repz
mov
sbb
addb
xor
popf
adc
in
movsb
in
cwtl
mov
cli
stos
push
inc
push
in
popf
push
and
sub
nop
ljmp
arpl
pop
mov
mov
or
stos
xor
ja
imul
repz
ret
xchg
pop
or
ret
mov
dec
ss
cmpsb
xor
or
aam
cmp
push
fdivp
cmpb
cs
scas
iret
pop
push
jbe
cwtl
in
push
push
cs
out
into
test
daa
mov
fistps
cwtl
faddl
xor
xor
push
cmc
sbb
mov
subl
cld
add
xchg
cli
ret
lds
lods
add
add
push
and
insl
inc
test
test
ret
dec
mov
ror
xor
sbb
aas
xchg
cmpsl
inc
test
jae
scas
stc
pop
je
sti
fbld
repnz
mov
hlt
or
clc
imul
or
pop
push
pusha
test
pop
jle
ret
xor
in
cwtl
push
adc
sti
and
addb
fistps
call
jne
dec
push
sbb
inc
call
pop
leave
cmp
ljmp
xor
ret
repz
outsb
sbb
lods
cmc
loope
or
ljmp
scas
jecxz
adc
mov
fsub
mov
sti
mov
jmp
adc
dec
icebp
fcoms
daa
push
pop
xlat
lret
and
pushl
inc
in
fmul
pop
and
imul
lock
adc
xchg
repnz
lods
mov
mov
jmp
mov
mov
mov
mov
and
sub
mov
fs
test
and
jnp
and
mov
imul
xchg
sbb
pop
mov
dec
and
cmpsb
mov
hlt
lods
sarb
fsubl
jp
ret
nop
pop
cwtl
or
jno
sbb
outsb
mov
jo
xchg
repz
inc
cld
aas
ja
js
jl
mov
loope
out
dec
sbb
stos
mov
dec
ss
mov
and
data16
fistpl
sbb
jno
sti
or
fwait
pop
lock
mov
and
sub
sub
add
mov
std
stos
push
loopne
inc
enter
xchg
xchg
sarl
mov
mov
aas
repnz
sub
mov
push
fwait
stos
mov
cmp
pushf
jecxz
in
cmp
aas
lods
int3
sub
stc
fdivrs
movsb
jl
xchg
xchg
cmp
sub
cmp
fcomi
xor
jo
mov
mov
mov
jg
repnz
lahf
cmp
out
mov
sbb
sub
mov
jmp
rcll
ds
repnz
xchg
xchg
lock
repz
pop
pop
sub
sub
push
mov
jnp
les
dec
rolb
imulb
jae
cmc
push
mov
cwtl
sbb
jmp
xchg
xor
ret
xchg
mov
fimuls
jns
mov
push
sub
stos
ljmp
push
aad
pop
inc
or
sti
enter
inc
test
adc
cwtl
scas
xchg
jl
shll
push
jb
mov
jle
lcall
sti
movsl
mov
cltd
inc
arpl
in
jle
mov
mov
pop
daa
jge
mov
and
adc
inc
pushf
aad
fists
stc
fmull
insb
and
enter
ret
push
mov
mov
in
pop
repnz
gs
xor
cli
pop
adc
pop
lea
mov
mov
adc
xor
jmp
scas
mov
inc
sbb
mov
popa
push
pop
fcmovbe
test
cmc
or
nop
xor
push
fistl
jle
aaa
in
leave
lods
sbb
fabs
js
data16
scas
scas
dec
mov
mov
nop
cvtps2pd
lahf
pop
inc
ja
outsl
stos
mov
into
cmp
xchg
enter
mov
cltd
pop
imull
sbb
insb
std
aad
lock
dec
repz
hlt
push
xchg
jmp
sbb
or
dec
decl
xchg
cmpsb
xor
cld
cmp
and
pop
cmc
and
repz
mov
int3
lret
movsb
lods
sbb
lods
add
lock
mov
or
add
cli
pop
jl
mov
cmp
adc
inc
jb
in
sti
loop
adc
dec
or
outsb
sub
cmp
cmp
pushf
mov
pop
mov
mov
lds
int3
mov
pushf
xor
ror
dec
fcoms
sahf
jnp
adcl
test
inc
or
mov
scas
pop
xchg
add
les
mov
push
adc
push
dec
push
jg
movsl
shr
xor
mov
cli
das
lods
test
or
lcall
lods
mov
and
dec
mov
cmp
sbb
or
mov
das
add
add
mov
ss
xchg
dec
pop
test
movsl
pop
pop
test
jno
incl
jnp
cli
dec
sub
jg
stos
loop
addr16
jl
sub
mov
inc
sub
aas
jp
lods
sti
arpl
imul
mov
mov
loop
add
fsubrl
add
sbb
mov
loope
mov
shrb
repnz
enter
orb
adc
sub
pop
mov
bound
xchg
jl
mov
shrl
fsubrs
aaa
fcomps
ret
pop
xor
pushf
xchg
ret
cmp
and
pusha
test
mov
add
xchg
mov
xchg
mov
mov
mov
inc
popa
fdivl
inc
fsub
mov
sbb
cmp
mov
lods
jmp
lahf
xor
scas
repz
fimull
dec
pop
push
jl
fs
stc
lcall
int3
ss
pop
sbb
mov
push
loope
pushf
adc
mov
mov
insb
mov
adc
pop
pop
cld
ja
test
push
sub
push
lcall
lahf
sti
nop
adc
stc
outsb
dec
in
mov
ret
fsubr
adc
ja
dec
push
jp
out
aas
adc
mov
popl
cmpsl
push
mov
ret
out
fsubrs
mov
faddl
int
dec
repnz
add
aad
jnp
lahf
lds
pop
stos
lahf
sarb
cld
idiv
movsb
pusha
jge
fsubrs
mov
adc
pusha
int3
cmp
mov
jns
xchg
bound
push
push
insl
hlt
jns
cmp
sbbl
ret
add
test
mov
and
push
sbb
repz
sbb
clc
inc
sub
inc
xlat
lahf
lock
clc
cmp
decl
outsb
jo
out
pushf
or
mov
into
lods
in
sbb
inc
ljmp
or
mov
int3
sub
jecxz
stos
xor
cmpb
xlat
cmp
jno
xor
jnp
movb
icebp
push
mov
sar
cltd
mov
pop
and
pop
inc
addr16
pop
pop
fstpl
xchg
dec
das
inc
aas
push
mov
or
push
jb
cwtl
mov
jno
jno
cmpb
test
jnp
mov
xchg
or
shll
add
xorb
inc
sub
xchg
xchg
or
enter
ja
dec
in
loopne
pushf
xchg
xlat
stc
ja
xor
sbb
adc
das
xor
dec
hlt
mov
cli
jns
pop
push
jo
cmp
xchg
lea
mov
push
xchg
ds
popf
pop
fnsave
sub
mov
das
loop
jnp
xchg
fcompl
lock
scas
mov
adcl
out
lea
cmp
stos
lret
mov
sti
ja
add
or
push
mov
nop
push
xchg
sbb
stos
enter
int3
sbb
jo
ds
push
repz
lods
inc
lcall
int3
ficoms
mov
sbb
or
pop
call
out
jp
clc
bound
mov
inc
leave
cld
outsl
cmp
xchg
sub
mov
cmp
pop
in
xchg
cwtl
pop
out
cmp
fdivrl
xor
xrelease
ljmp
cmp
sbb
mov
xchg
dec
push
push
mov
loopne
nop
outsb
cli
cltd
addb
inc
xchg
pushf
mov
jg
and
jne
in
loopne
cmp
mov
int3
push
mov
push
sub
daa
push
aas
fimuls
dec
icebp
pop
mov
inc
mov
or
push
push
jle
adc
sbb
loope
fdivrs
dec
mov
mov
icebp
fst
leave
ljmp
jo
xor
test
orl
mov
cmpsl
pop
and
xor
sub
test
and
pop
out
scas
pop
insl
out
pusha
xchg
pop
push
out
je
lods
sti
mov
jbe
js
movsl
dec
movsb
and
mov
cwtl
dec
jp
mov
cld
xor
cmc
fs
out
leave
pushf
inc
pushf
roll
sbbl
jmp
test
cwtl
dec
loopne
adc
xor
sbb
dec
jle
and
insl
out
outsl
and
push
push
rcrl
adc
inc
sbb
repz
sbb
jg
push
movb
xchg
shll
xchg
inc
call
jg
pop
mov
mov
cmp
in
nop
inc
jmp
ja
mov
out
sbb
jecxz
pop
clc
addr16
lods
fwait
mov
push
loopne
pop
cwtl
adc
popf
pop
addr16
out
jo
cmp
testl
je
pop
mov
inc
ljmp
mov
mov
movsb
ret
shlb
jnp
cltd
jno,pt
sub
hlt
push
jg
and
xchg
es
rcll
aaa
sbbl
sub
push
and
movsl
std
jp
dec
pusha
jmp
mov
inc
adc
add
xchg
sti
xchg
sbb
shl
and
inc
movsb
orb
fistpll
mov
shll
cwtl
dec
jnp
stos
mov
push
adc
icebp
sub
fsubrl
jns
xlat
jae
cld
stos
decl
jp
idivl
jl
in
push
scas
mov
and
cwtl
sahf
push
testl
push
mov
insl
or
out
fnsave
dec
in
aam
sbb
mov
cwtl
out
fcompl
dec
adc
push
in
in
mov
in
adc
mov
imul
xor
enter
adc
pop
xor
paddsb
mov
pop
pop
cmpsb
mov
push
mov
push
cmp
ja
or
mov
jg
pop
inc
scas
sahf
mov
enter
add
std
loope
xchg
and
js
mov
aas
jae
fisttps
test
setl
in
mov
hlt
out
jno
cli
and
fwait
call
ja
mulb
mov
xchg
loop
or
orl
test
mov
cld
sub
xchg
ret
sbb
outsl
int
or
ret
xchg
sub
dec
xor
insb
ret
lcall
cwtl
das
mov
pop
pop
mov
sbbb
fildl
pop
or
and
fdivl
push
insl
shr
mov
add
enter
xor
dec
leave
push
cld
cmp
out
jb
mov
pushf
stc
clc
pop
shlb
gs
pop
ss
cwtl
jae
les
pushf
xchg
mov
cld
lods
and
andl
pop
adc
jb
mov
adc
ljmp
pop
cli
push
mov
sbb
xchg
pop
push
sahf
fcoms
jnp
scas
lahf
pop
jecxz
inc
inc
outsb
sarb
rcrl
leave
push
mov
pop
leave
fwait
add
mov
hlt
popf
jae
test
xchg
in
inc
fs
fistl
mov
push
fsubs
push
bound
mov
xor
mov
ret
cmpsl
push
mov
ret
and
nop
sti
sarl
outsb
in
sti
jg
mov
push
stos
xlat
or
pushf
xor
and
xor
pop
jle
jecxz
into
jnp
cmc
clc
test
push
or
xchg
cmp
cmp
cwtl
notl
adc
mov
cs
jb
es
or
cltd
pop
scas
fwait
je
pop
movsb
cltd
xor
ljmp
dec
mov
xor
iret
fs
loope
xorb
enter
add
sbb
ljmp
incl
mov
sub
xchg
aad
sbb
push
pop
jmp
cmc
jbe
jle
push
push
inc
dec
pop
scas
inc
fldl
cmpsb
sti
pop
mov
push
jnp
mov
stos
xchg
fisubrl
mov
jne
push
add
push
jl
popf
dec
enter
adc
jno
jp
cmp
fldenv
in
push
ret
fsubl
aaa
inc
xor
push
les
stc
mov
sub
jmp
add
loope
rcrl
jg
add
jns
cmp
lea
fcmovnbe
lret
jg
daa
jge
mov
xor
or
xor
mov
pop
mov
inc
inc
lahf
aas
xor
jl
insb
mov
adc
xchg
mov
or
ret
cmp
jl
mov
fwait
arpl
sarb
sub
xor
mov
jb
pop
fisubs
fiadds
xchg
in
test
lahf
fadd
lods
xor
mov
jl
adcb
stos
push
out
mov
cmp
js
dec
dec
jno
fldt
pop
out
in
cmp
scas
sti
push
push
mov
subl
in
je
addb
inc
mov
call
dec
pop
movsl
stos
cmp
xor
push
jle
int
inc
pop
in
dec
push
cmp
mov
mov
popa
test
inc
lahf
adc
jbe
lret
in
imul
or
ljmp
outsb
mov
xchg
lahf
out
adc
xchg
sar
sbb
out
and
mov
mov
stc
fadds
in
dec
fsubrl
xchg
sub
xchg
push
cmp
xor
mov
movsb
fdiv
fdivl
cmp
cmp
lods
sbb
xlat
inc
mov
mov
sub
cmpsb
shrl
cmp
mov
test
sbb
jbe
jbe
cmpsl
or
pushf
lcall
in
jle
mov
adc
cltd
sbb
imul
imulb
aaa
adcb
mov
pushf
and
mov
arpl
in
repnz
pop
xchg
lds
mov
mov
xor
icebp
add
xchg
into
test
data16
pop
gs
les
sbb
insb
aaa
pop
pop
mov
lods
sti
gs
fwait
pop
xor
and
jl
xchg
sti
mov
cwtl
pop
and
ja
mov
stos
mov
pop
ret
xchg
xchg
push
push
test
xor
jle
aam
cmp
test
daa
xchg
lahf
aad
jp
sub
rcr
add
mov
mov
or
mov
movsl
mov
nop
adc
dec
jmp
sub
ret
les
repz
cmp
mov
test
aas
pop
jp
xlat
cmp
test
pushf
das
push
sarb
adc
js
pop
sbb
scas
sub
sarb
bound
addr16
pusha
pop
sbb
xchg
mov
ja
cmp
lahf
or
cmp
rcr
fisubrl
add
stos
mov
jecxz
or
cltd
sub
ret
jg
in
aas
pop
fwait
dec
cs
xor
fcoms
add
cmpsb
adc
mov
lods
mov
mov
fwait
lods
fnstenv
repnz
insb
rcrl
cltd
filds
inc
sub
out
cmpsb
mov
xorb
into
jg
mov
push
popf
lea
adc
mul
lods
cmp
inc
jge
xchg
scas
lcall
push
lock
mov
jns
xchg
push
sbb
pop
adc
mov
mov
clc
pop
push
addr16
mov
dec
notl
popf
push
xchg
add
lods
roll
xchg
add
inc
repnz
pop
xchg
fnstcw
add
xchg
xchg
pop
mov
mov
cmp
das
push
xor
out
inc
sbb
in
push
sarl
push
fsubrs
rcll
mov
dec
cmp
mulb
mov
cmp
sub
adcb
push
rol
jnp
dec
std
push
flds
into
hlt
lods
cmp
xlat
orl
cmp
je
mov
fcoml
dec
push
or
test
arpl
pop
ret
adc
pusha
xchg
cmp
mov
ret
fstpl
xchg
adc
dec
scas
imul
into
jmp
cmp
sub
and
int
out
negl
stc
sbb
and
mov
add
nop
mov
loop
nop
sbb
mov
call
dec
inc
cmpb
inc
dec
fimuls
adc
pop
stos
addr16
push
bound
pop
dec
ljmp
xchg
mov
fabs
insb
cli
dec
pushf
mov
push
mov
sbbl
pushf
push
sub
mov
pop
js
hlt
xchg
pop
xchg
filds
fcoml
sbb
loope
leave
mov
xlat
pop
sbb
add
shlb
call
shll
add
sub
sbb
ret
loopne
cmp
xlat
push
add
pop
lds
add
mov
xchg
test
push
enter
push
push
ds
ljmp
stc
mov
pushf
push
push
sub
out
mov
repnz
fndisi(8087
fcomp
add
out
movsl
mov
jbe
jo
cmp
mov
les
test
test
mov
into
xchg
mov
fdivl
test
out
jp
mov
addl
jnp
loop
clc
add
popf
lcall
aad
xor
sbb
xor
std
jmp
idivl
xchg
inc
imul
das
pop
out
xchg
out
clc
repz
mov
cmp
pop
push
cwtl
jecxz
jg
dec
xor
bound
aas
jbe
ds
sbb
fisttps
pop
sub
scas
mov
xchg
test
mov
aad
jo
and
data16
fwait
jmp
xor
cwtl
jmp
out
or
ret
outsb
cmp
fdivrs
out
fs
out
jo
jl
lods
ja
notb
mov
or
cmc
sub
enter
mov
clc
xorl
add
cmp
out
mov
or
pushf
clc
fwait
and
sub
dec
xchg
pop
aas
ss
pop
mov
adc
aaa
test
dec
loope
add
test
inc
cmp
or
scas
adc
cmp
ret
sub
es
pop
push
pushf
sti
dec
and
mov
imul
cwtl
mov
popa
cmp
insb
pop
sub
lahf
cwtl
das
nop
xchg
les
fstpl
mov
jnp
and
inc
test
push
jp
mov
cmc
out
cs
push
fwait
mov
pushf
pop
sbb
arpl
ret
lods
cmp
nop
and
cmp
lock
int
push
mov
mov
fsubrs
fstps
aaa
fbstp
jo
jne
mov
fsubl
ret
and
jnp
mov
and
stos
add
xorl
movsl
inc
cwtl
mov
sbb
mov
out
lahf
sbb
mov
cmp
add
pop
dec
pop
nop
jnp
cmpl
sbb
cmpsb
cmpsl
sbb
lock
lea
in
push
or
sub
cmp
mov
sarl
cmp
out
adc
int
xchg
xor
push
cwtl
sbb
push
fwait
mov
or
push
fsubs
jb
sub
es
jne
push
jle
mov
push
adc
cli
adc
lods
mov
dec
mov
mov
aam
pusha
mov
adc
cltd
test
test
in
and
pop
outsl
lock
rcr
mov
clc
adc
jecxz
in
xchg
cmp
lock
loope
stc
pop
pushf
fisubrs
mov
subl
pop
outsl
cmp
or
or
jns
pop
xchg
xchg
sbb
sarb
imul
dec
inc
out
ret
jnp
test
scas
cli
jmp
sbb
idivl
sbb
xor
les
and
aam
mov
fcmovnbe
out
cmp
js
mov
stc
adc
stos
call
xchg
fisubs
pushl
clc
mov
mov
jmp
stos
add
pop
sub
arpl
xor
clc
pop
xchg
jp
mov
jb
mov
mov
jns
cmpsl
jnp
out
xchg
mov
in
out
fimull
cltd
lcall
xchg
push
leave
mov
jmp
aas
dec
xchg
arpl
mov
pop
movsl
aas
jmp
arpl
mov
jbe
lods
imul
pop
pop
sar
sub
fidivs
mov
sbb
mov
test
push
mov
lcall
pop
jmp
sub
xor
test
es
fsub
and
sbb
lcall
dec
repz
mov
cmpsb
stos
loop
aas
xchg
cld
test
and
andb
xor
ret
and
push
inc
xchg
push
mov
push
mov
nop
shrb
imul
xchg
add
hlt
mov
dec
std
xor
scas
repnz
xchg
dec
lods
add
dec
adc
fmull
and
sbb
in
cmp
aaa
push
adc
js
push
fsts
or
pop
dec
mov
mov
out
push
jecxz
or
icebp
sub
test
mov
mov
inc
mov
xchg
int3
iret
ja
inc
cmp
test
inc
pushf
in
sbb
push
jge
mov
shll
pushf
aas
in
inc
popf
sti
lods
std
mov
mov
adc
lcall
dec
ljmp
mov
lret
daa
pop
jl
mov
inc
jmp
xchg
fstl
arpl
cmpb
pushf
push
or
fsubs
stc
xor
or
stos
ljmp
in
aad
pop
jae
push
push
cmp
rcl
jle
sti
and
xchg
inc
fwait
enter
jecxz
sbbl
test
cmp
imul
mov
cmp
dec
jbe
mov
in
out
es
inc
cmpsb
out
popf
mov
fisubs
push
mov
mov
out
nop
bound
pop
adc
push
jmp
push
mov
in
lcall
ds
mov
xor
nop
mov
ret
push
sbb
nop
cmpsb
jg
jns
and
jno
cmpsb
inc
push
pop
adc
pop
xor
mov
sar
cwtl
insl
xor
hlt
pop
push
repnz
mov
xor
jle
inc
mov
fs
adc
shll
movsb
sti
arpl
inc
mov
cmp
inc
das
pop
jl
pop
push
mov
sarl
fucomp
imul
pop
enter
test
ss
rol
arpl
xor
mov
jae
push
xchg
sub
fcmovnu
mov
cmpsl
inc
adc
mov
popl
xchg
adc
pop
fmuls
rclb
xchg
sub
fstpl
fsubl
mov
pop
sbb
push
test
aam
jmp
es
sub
mov
inc
push
mov
inc
sarb
clc
fs
or
jo
jae
movsb
mov
sbb
fsubr
cwtl
fsts
mov
and
lret
test
cmpsl
jae
popf
cli
dec
pop
hlt
cmpl
fsubr
int
mov
xchg
dec
and
jne
sbb
sbb
in
pop
dec
jecxz
sbb
rcrl
ds
mov
adc
popa
dec
mov
faddl
and
ja
cmp
sbb
inc
cli
flds
imul
xor
test
aas
popf
sti
cmp
sbb
add
stos
ret
int
lods
inc
fmull
jmp
inc
in
mov
faddl
push
mov
add
sub
pushf
jp
roll
test
and
add
pusha
adcl
jnp
cwtl
sti
mov
mov
ljmp
daa
adc
pop
filds
sbb
leave
xor
rolb
cmpl
jbe
es
mov
test
imul
dec
dec
inc
imul
cmp
shl
shl
xor
subl
jnp
mov
popf
mov
pop
jnp
negb
cltd
pop
lds
dec
divb
push
dec
ljmp
icebp
xchg
adc
xchg
mov
fwait
cld
inc
repz
jne
ret
je
mov
fbstp
push
mov
rcll
adc
rcr
push
jg,pn
xchg
test
pop
xor
mov
mov
sbb
inc
adc
mov
fistl
aam
lahf
setg
sbb
in
pushf
das
lea
mov
jge
jno
mov
in
pop
add
mov
adcb
mov
jmp
mov
loope
sub
add
mov
les
mov
sub
push
jle
in
jnp
xchg
shll
mov
push
sub
in
lahf
jp
sbb
xor
and
xchg
sti
enter
pop
jg
mov
pop
cld
push
in
and
mov
repz
xchg
imul
enter
loope
jg
call
mov
ficomps
shll
es
fwait
pop
dec
out
pushf
sbb
jle
test
aas
cmp
ds
xchg
cmpsb
mov
sbb
xchg
sbb
pop
push
cmp
out
xor
loopne
cbtw
mov
cmpsb
xchg
adc
daa
cmp
adc
pop
shlb
cwtl
jae
scas
xor
pop
rclb
xchg
lea
addr16
jmp
pop
sbb
enter
test
icebp
je
pusha
lods
jg
and
jnp
mov
aam
lret
cltd
or
out
fdivl
outsb
pop
pop
xlat
mov
xchg
jnp
pop
mov
or
sbb
in
pop
add
sti
xchg
bound
or
stos
imul
pop
repz
jecxz
inc
mov
test
popa
std
enter
repnz
fadds
xor
lock
jo
mov
out
pop
add
mov
push
push
test
push
sub
jle
int3
mov
and
popf
jne
mov
mov
pusha
lods
fidivs
xor
jns
inc
mov
adc
adcl
stos
dec
xor
aas
xchg
xlat
outsl
mov
sbb
fisubrl
sti
mov
out
push
sbb
mov
pushf
loopne
jnp
ds
popl
pop
in
scas
xchg
adc
push
xchg
imul
stos
jp
fidivs
and
jae
push
jp
sub
mov
xchg
push
push
push
test
sub
fcomp
in
jp
cwtl
lds
jg
insb
scas
repz
cmp
xchg
and
adc
cmp
add
lahf
subb
pop
ljmp
adc
cmp
sbb
dec
loopne
test
xchg
arpl
ret
ljmp
icebp
fcomp
mov
jp
lock
je
xchg
fwait
inc
xchg
adc
div
imul
cmp
ljmp
cwtl
cltd
movb
pop
mov
sarb
or
cltd
mov
push
xor
cwtl
or
data16
sub
push
xor
mov
cwtl
or
mov
aas
xlat
repnz
ss
stos
clc
cwtl
pop
jnp
mov
mov
inc
push
es
das
ffreep
add
fcomps
out
sbb
jno
fdivl
add
mov
dec
push
adc
xchg
call
sub
idivl
mov
mov
fidivrl
pushf
mov
rcrl
test
cwtl
push
ret
std
ljmp
loope
mov
les
cwtl
inc
xchg
jecxz
jle
sti
inc
pop
sub
xchg
sub
cwtl
pop
xor
sbb
orl
inc
sbb
pop
fstpt
mov
lods
cli
idivl
pop
outsb
xchg
ret
jae
int
in
fistps
adc
push
imul
enter
adc
xor
arpl
imul
push
jmp
int3
icebp
add
scas
pop
lock
sbb
outsb
xchg
xorb
mov
mov
cmpl
push
sbb
xlat
stc
cmp
cmp
xchg
lret
mov
mov
or
xchg
cltd
pushf
loope
sarb
shrb
mov
int
out
je
mov
xchg
push
test
ljmp
test
xlat
and
mov
jbe
in
pop
cmp
xor
jg
out
mov
mov
mov
add
out
sahf
cmpsl
sbb
clc
mov
out
mov
jl
jl
and
pop
cmp
js
sub
mov
inc
push
aam
mov
sbb
in
cli
or
lock
pop
mov
fistl
pop
cmp
and
sub
mov
in
int
fsubs
cmp
jp
shlb
fdivl
cmpsl
dec
bnd
sbb
fiaddl
mov
push
cwtl
jnp
stos
inc
pop
int3
xchg
repnz
xor
adc
mov
sti
sbb
pop
les
adc
icebp
sbb
mov
mov
jnp
cld
fdivrl
aad
mov
stos
mov
xchg
sti
push
fstpl
xchg
aas
sbb
data16
test
mov
sti
fwait
sti
and
pop
mov
xor
shrl
dec
xor
fldt
daa
aas
cltd
incl
fadds
mov
out
adc
push
fidivs
mov
cmp
xor
pop
push
scas
xchg
jg
mov
aad
mov
mov
push
imul
sub
cmp
iret
inc
incb
ret
sbbb
lcall
in
fwait
adc
mov
xchg
xchg
inc
ljmp
rcrl
lcall
adc
sbb
aad
xchg
cmp
insb
lret
movsb
jle
lret
jmp
sarb
jecxz
jns
xchg
cmp
gs
aas
outsl
jg
jmp
cmp
mov
cmp
jg
int
jo
cmp
xchg
mov
iret
push
daa
loopne
lret
fsubl
mov
lcall
shrl
jb
ss
and
scas
pop
inc
pusha
push
stc
cmp
push
lea
sahf
adc
movsl
xchg
jnp
repnz
xchg
and
ljmp
pop
fidivrl
aas
xchg
out
lods
scas
fisttpll
mov
pop
outsl
push
or
notb
and
stos
out
ret
xorb
xchg
sbb
int3
inc
negl
movb
xor
ficompl
scas
mov
and
sbb
push
push
jae
pop
pop
push
mov
lcall
sarb
cmp
lret
and
mov
sub
cmp
mov
cwtl
or
xchg
fildll
pushf
mov
loopne
aas
jb
lea
and
pushf
adc
test
aas
cwtl
ss
movsl
in
dec
ljmp
in
sub
int
jo
das
cmp
push
add
negb
mov
jp
imul
out
jmp
call
jns
repnz
ret
cwtl
cmp
lcall
xor
je
icebp
pushf
adc
mov
mov
stc
test
sub
mov
jp
add
cmp
mov
sti
inc
in
xchg
mov
bound
fstl
dec
int3
imul
mov
or
mov
int
cmpl
dec
into
je
mov
or
ljmp
xrelease
xor
daa
push
cmp
push
clc
sbb
cmp
arpl
rcll
xchg
mov
orb
pop
lods
ss
pop
pop
sub
sti
pop
nop
mov
mul
xchg
sbb
pop
jnp
pop
imul
cmpl
xlat
cli
stos
js
xor
mov
xchg
xchg
add
pop
lcall
test
or
mov
dec
cmc
fsubrl
dec
ljmp
lods
adc
mov
sbb
jbe
ljmp
adc
in
sahf
mov
fstp
adc
inc
mov
cmpsl
push
push
mov
cmpsl
int3
orb
movsl
push
mov
pushf
test
cwtl
andl
push
fsubl
ds
inc
fadds
push
clc
scas
faddl
loopne
sti
call
push
mov
test
leave
stc
cwtl
aad
xlat
inc
pop
pop
inc
enter
mov
sbb
fwait
mov
test
in
in
sahf
xchg
inc
aaa
xchg
xlat
mov
sbb
jecxz
aas
inc
adc
pop
lock
xor
push
addl
and
xchg
pop
or
mov
out
mov
roll
mov
jne
stc
push
xchg
push
mov
int3
xchg
cli
xor
push
cmpsb
adc
cmp
push
lahf
int3
clc
call
or
daa
negl
xchg
scas
cmp
fmull
adc
mov
pushl
loope
imul
cmp
xchg
pop
in
pop
lea
and
out
fdivrs
xlat
cmp
mov
dec
push
push
cmpsl
push
data16
sbb
sti
add
scas
inc
cmp
fldl
adc
mov
sbb
stc
cwtl
ja
mov
push
into
or
out
in
pop
pop
lods
xchg
out
fdivrl
clc
push
mov
add
daa
lea
jb
xchg
mov
lret
push
jo
fdiv
shlb
cmp
das
xchg
adcl
or
mov
dec
or
stos
mov
outsb
sahf
add
mov
daa
filds
cli
movsb
dec
scas
pushl
int3
xor
loop
movsb
out
iret
mov
jne
fsts
pusha
icebp
outsb
lods
mov
fcom
adc
rcrl
cwtl
mov
mov
subb
loopne
xchg
sub
mov
xchg
cmp
mov
mov
pop
sbb
dec
jne
sbb
div
push
imul
pop
addl
sti
fldl
sarl
xorb
aam
icebp
call
lods
in
jnp
daa
enter
loope
dec
xor
push
and
das
cwtl
imul
loop
push
cmp
mov
out
cmp
scas
xchg
jle
movsl
test
and
into
jne
into
dec
aad
test
fsubl
les
popf
pop
mov
xchg
pop
dec
inc
lock
fcompl
test
add
hlt
sarl
cmp
sti
insb
jne
and
out
mov
cmpb
les
repnz
xlat
sub
imul
mov
push
fucomi
mov
pop
mov
cmp
mov
fldl
stc
cwtl
fstl
stos
or
pop
jo
pop
inc
les
insb
cmpsb
aas
mul
mov
mov
sub
mov
cmp
lcall
xchg
ljmp
and
adc
sub
dec
xchg
in
orb
outsb
fldcw
pushf
cs
pop
mov
cltd
mov
and
and
not
sbb
adcb
test
or
outsb
das
data16
jne
mov
jp
fadds
lock
ss
enter
cld
out
inc
clc
fcoms
inc
cmpsl
pop
jmp
imul
mov
sbb
jb
xchg
dec
mov
lods
fcoml
int
cwtl
pushf
test
xor
call
aad
and
cmc
mov
into
sbb
sbb
adc
xor
xchg
mov
sbb
xor
pop
fsts
insl
pop
addr16
cltd
fcoms
jg
mov
ds
fsubrl
mov
xor
push
out
adc
pop
lods
jmp
mov
xchg
fcoml
incl
jno
aaa
mulb
dec
setno
mov
pop
fdivs
sti
lret
push
rcrl
ss
cli
sbb
xor
sbb
xchg
xor
jg
testl
insb
icebp
xor
adc
cmc
in
clc
clc
fdivrs
pop
adc
pop
push
sbb
outsb
cltd
cmp
shrl
adc
push
stos
push
rcll
xchg
mov
fsubs
int3
cwtl
mov
mov
stc
sbb
xor
lahf
orl
idivl
dec
adc
lds
jp
pop
inc
mov
cmc
mov
add
fcompl
repz
aam
add
daa
addr16
cld
fisttps
and
pop
in
sbb
cwtl
mov
cli
or
lahf
or
aas
sbbb
icebp
xchg
stos
andl
add
mov
movsb
je
mov
filds
and
inc
push
hlt
aas
xchg
lret
cld
out
mov
xchg
cmpb
cwtl
dec
xor
fsubrs
sbb
mov
xchg
and
push
movsb
mov
mov
fdivrl
shld
mov
mov
scas
cmpsb
repnz
daa
adcl
cmp
mov
lods
dec
icebp
sbb
pop
lcall
in
or
inc
xchg
fsubl
and
nop
xlat
pushf
popl
sarb
hlt
mov
inc
jl
leave
fwait
push
iret
out
sub
fcomps
aaa
inc
cs
cmp
push
dec
and
mov
jg
sub
xor
inc
xchg
cmc
rclb
cld
xor
fcomps
pop
cmp
cmp
push
lods
popf
pop
jns
adc
ss
push
jmp
pop
lahf
xchg
mov
push
xor
das
mul
pop
adc
test
push
and
mov
jp,pn
insb
iret
mov
dec
mov
xor
fdivrl
out
pushf
cmpb
flds
int3
dec
lret
or
jecxz
push
xchg
sub
dec
movsb
cmpl
cmp
mov
cwtl
xchg
cli
or
jnp
fcompl
add
std
cmp
push
dec
dec
pop
jbe
xchg
pop
ljmp
adc
mov
mov
or
push
fsubrl
mov
shrb
cli
push
lahf
xor
mov
jno
cmp
lea
pop
and
sarl
std
and
popf
pop
mov
cmp
int
cmp
pop
jge
sti
jbe
ret
xchg
mov
xchg
xchg
mov
out
fnstenv
dec
mov
sbbl
stos
mov
jl
push
stos
fs
xchg
mov
in
cs
xlat
loopne
ret
cmp
mov
inc
mov
scas
fidivrs
sbb
mov
ret
imul
fadds
or
mov
js
sarl
xor
fwait
imul
and
mov
xchg
or
pop
jo
mov
push
jne
clc
xchg
pop
push
shl
jmp
or
cmp
adcb
mov
xlat
mov
fmuls
mov
xor
mov
cmc
fsubrs
sbb
inc
mov
xchg
jecxz
lcall
clc
sub
pop
cs
popa
cmp
mov
jg
jnp
adc
enter
mov
push
mov
iret
mov
fs
and
cli
push
sbb
lods
arpl
punpckldq
loopne
cmp
mov
ljmp
jg
adc
sbb
sub
popa
mov
mov
jg
out
fprem1
adc
push
pop
adc
enter
ret
dec
inc
imul
pop
sub
jle
sub
cmp
popf
mov
or
ffree
cmp
mov
cmp
mov
repnz
sbb
repnz
cmc
cwtl
or
mov
inc
call
push
lcall
ja
cwtl
sbb
outsb
faddl
dec
push
push
xlat
mov
hlt
lock
imul
pushf
mov
shlb
rcrb
jecxz
mov
mov
jmp
xchg
push
and
mov
icebp
cli
or
scas
sbb
pop
mov
test
and
mov
xchg
test
jl
mov
aas
and
add
repnz
pop
faddl
aas
clc
mov
lahf
ja
rolb
mov
pop
cmc
movsl
push
jl
fwait
and
push
or
mov
arpl
fcompl
sbb
fucomi
out
and
sub
pop
jnp
jg
pop
in
push
leave
mov
adc
fadds
aaa
testl
push
cwtl
dec
test
call
stos
inc
dec
and
fs
sti
or
inc
mov
andl
pushf
test
std
testb
sti
and
fisubs
pushf
shlb
pop
dec
mov
inc
and
jecxz
or
jo
jle
shlb
jnp
fs
add
outsl
scas
sti
stos
outsb
mov
mov
push
outsl
pop
mov
mov
sar
pushf
add
jae
push
jns
xchg
sahf
rol
mov
jl
loop
ss
mov
cmc
jo
fldl
popf
popf
add
pushl
jle,pt
add
cwtl
push
stc
aam
mov
push
cmp
jg
xchg
mov
sbb
insl
sub
mov
imul
fdivr
rcrl
ret
add
mov
cmp
cmpl
ffree
jmp
and
push
jae
sub
adc
leave
push
out
in
mov
sub
and
mov
sbb
pop
sbb
mov
cmp
and
sub
cmp
fstpt
cltd
jnp
std
aad
mov
sub
push
fisubs
inc
mov
iret
fmull
enter
fildll
or
es
jp
push
fisubs
push
cmp
inc
mov
and
add
addps
int3
fldt
push
fwait
inc
pop
hlt
jecxz
add
pop
scas
jg
sbb
addr16
mov
mov
enter
ret
dec
cli
popa
jns
scas
mov
dec
push
fstpl
mov
cmp
insb
and
sbb
je
movsb
mov
jmp
and
inc
jp
subb
sahf
sti
push
ret
fistpll
or
lahf
push
mov
loopne
iret
cltd
clc
xchg
jae
cmpsb
xor
lods
ljmp
jnp
xchg
and
shr
add
jge
xchg
dec
pop
sub
add
xchg
sahf
fnstsw
mov
adc
xchg
mov
aas
add
dec
xchg
mov
xchg
addl
mov
scas
adcl
sti
or
movsl
mov
mov
mov
outsb
inc
lahf
xor
cld
in
fcomps
addr16
push
outsl
sarl
cli
push
mov
inc
popa
dec
mov
lahf
push
movsb
aaa
dec
sub
clc
movsb
xchg
push
mov
lds
inc
loopne
std
insb
out
or
sti
xor
lods
movsb
mov
arpl
adc
pop
xor
mov
mov
jl
push
and
jno
scas
mov
or
mov
adc
lods
pushl
xor
xchg
mov
arpl
mov
lcall
push
mov
mov
fwait
xor
ficoml
xchg
mov
push
sub
arpl
jl
adc
push
dec
sbb
pop
cli
clc
popa
jbe
mov
vmovhps
das
mov
xchg
stos
test
ret
sbb
rol
push
fbstp
scas
dec
loopne
lods
or
sarl
adc
push
xchg
fsubs
inc
addr16
xchg
mov
jl
aad
sbb
or
sbb
jnp
pop
mov
xchg
push
push
mov
leave
mov
mov
pop
xchg
mov
cmp
fsin
dec
cwtl
stc
cltd
mov
mov
in
fstl
push
daa
pop
mov
test
sbbl
fcoms
pop
icebp
push
jbe
xchg
insb
adc
sbb
rclb
and
sub
sbb
out
push
mov
xchg
mov
test
out
adc
jmp
int
pop
inc
cmpsb
sti
fnstsw
sbb
icebp
test
mov
mov
xor
out
and
arpl
pop
jle
sbb
lods
mov
test
adc
das
enter
cmc
ljmp
mov
iret
fstpl
lret
push
mov
enter
mov
xchg
dec
js
fnstsw
in
xchg
sti
out
addr16
shll
pop
popa
in
lds
jle
jge
fdivrl
test
mov
out
in
stos
lret
hlt
arpl
test
xchg
cmp
jmp
xchg
lret
mov
sbb
out
push
les
lods
fbstp
adc
negl
stos
xchg
out
jnp
popf
pop
popa
push
repz
out
cwtl
cmpsb
or
cmp
mov
pop
sub
jae
aad
mov
push
or
or
xchg
cwtl
out
test
sbb
in
cmpb
and
negl
insl
out
push
cwtl
pop
mov
push
rcrl
sub
lcall
jmp
dec
icebp
lret
jb
sub
mov
push
cmp
in
faddl
mov
mov
repnz
insl
lret
sbb
aad
jbe
inc
out
cmpsb
mov
mov
popa
and
aas
insb
negb
dec
jl
fdivs
xchg
add
add
imul
mov
test
push
xor
mov
call
mov
jae
pushf
xlat
pop
dec
jl
aas
mov
mov
push
sbb
mov
in
hlt
pop
push
pop
fcomi
popf
cmp
shlb
xchg
cmp
push
push
enter
out
jg
fistpll
jb
and
and
ss
jle
stc
stc
push
cltd
adcb
sub
xlat
and
out
cmp
stc
push
arpl
rcr
pushf
pop
daa
adc
cmp
and
cltd
cltd
enter
lods
push
xor
sbbl
push
pop
jl
sbb
mov
mov
cmpsl
stos
mov
cmp
jns
jg
cmp
je
shll
out
lahf
addr16
jg
inc
fs
cmp
mov
or
out
pop
push
inc
leave
mov
xchg
sahf
sti
fstpt
fwait
nop
sub
scas
pop
cmp
neg
jmp
pop
jns
mov
and
es
cmpsb
fistps
and
pop
push
leave
jns
adc
andl
mov
and
cmpsb
mov
or
cld
xchg
xchg
pop
mov
pop
pop
pop
sahf
test
sub
cmp
pop
cmp
jnp
les
sub
dec
mov
mov
xor
popf
pushf
outsb
cltd
pop
test
stos
mov
pop
addb
sbbl
cltd
mov
addr16
pushf
fisttpl
div
cld
adc
sbb
outsl
cwtl
mov
lods
xchg
loopne
cmp
pushf
xchg
leave
pusha
mov
push
sbb
push
and
fwait
jno
cmpsb
stc
mov
mov
aaa
adc
pushf
cli
and
jb
dec
and
mov
sbb
leave
mov
jmp
in
mov
je
xor
mov
hlt
rcrb
loope
rcrl
mov
add
test
adc
mov
sbb
outsl
pushf
lret
shll
out
clc
dec
rcll
xor
push
addl
std
movsb
cmp
enter
xor
sub
cli
cmpsl
jg
mov
mov
sbb
mov
shlb
inc
sar
iret
in
cmp
jb
or
ljmp
cmp
lcall
pop
in
xor
add
mov
cmpsl
mov
scas
aas
jmp
xchg
cmp
fwait
mov
test
mov
sbb
cltd
in
add
fldcw
lret
dec
cmp
xchg
mov
les
into
ret
lods
dec
add
sti
xor
popf
imul
fsubr
inc
push
mov
ret
cmovno
fs
adc
call
cli
push
xor
mov
shll
mov
jle
adc
fldt
pop
stos
pop
int
mov
subl
adc
adc
in
rorl
adc
lods
repz
or
adc
lods
mov
movsb
inc
cli
cltd
cwtl
ror
add
fmul
mov
jmp
pop
xchg
cmc
pop
cmp
ret
in
in
pop
jge
or
lahf
fs
cs
inc
lahf
loopne
imul
movsl
mov
jbe
je
pusha
mov
adc
pmaxsw
mov
sbb
pop
mov
mov
pop
jl
adc
sbb
sar
fwait
inc
sahf
pop
lcall
int
cmp
pop
add
dec
fwait
push
cmp
mov
call
xor
sbb
arpl
push
mov
add
cmpsb
pop
inc
cmpsl
xor
lea
insl
mov
ljmp
clc
loopne
mov
or
add
pop
ret
lcall
clc
js
gs
pop
mov
push
lcall
cli
ret
adc
mov
mov
sahf
mov
stos
lret
aas
inc
mov
ret
test
pop
mov
aad
mov
ja
daa
pop
inc
sbb
xor
out
pop
bound
jae
dec
or
pusha
ds
js
xchg
cli
pop
and
daa
pushf
fcompl
gs
lock
add
in
mov
cmc
push
gs
clc
xchg
dec
jecxz
sbb
int
pushf
je
sub
leave
fucomip
xchg
push
jne
pop
and
cmpsl
negb
test
jg
inc
cli
dec
dec
push
xor
sub
push
cmpsl
dec
icebp
pushf
push
and
iret
inc
insb
and
adcl
or
imul
das
add
cltd
aas
loop
out
dec
stc
iret
xchg
iret
sbb
add
sar
sbb
ror
mov
call
mov
movsl
pop
into
push
sarb
rorl
sarl
sub
adc
mov
popf
sbb
and
push
ja
ja
imul
mov
mov
faddl
sub
xorl
icebp
pushf
lods
andl
popf
std
fcoml
xor
dec
stos
mov
sti
inc
mov
add
scas
scas
mov
mov
sar
into
aad
aam
pop
or
andb
cmp
mov
neg
lahf
lahf
sti
cltd
sbb
stc
inc
imul
enter
sbb
jp
pop
loope
outsl
in
fstpl
ffreep
nop
loop
mov
je
cmp
cwtl
jmp
or
icebp
jb
jge
xchg
xchg
push
dec
out
mov
lods
sub
jp
insb
sbb
xor
fwait
aad
jnp
cmp
jbe
das
xchg
in
sbb
ss
in
pop
sti
and
ret
fstp
aas
sbb
xchg
or
dec
or
aas
jg
add
jg
movsl
testl
pop
xor
push
push
cwtl
pop
mov
mov
movsl
jp
mov
mov
movsl
pop
loopne
mov
xchg
pop
mov
cli
xchg
cli
mov
lcall
sbb
imul
shr
cltd
xchg
loope
sbb
daa
pop
adc
and
daa
sub
mov
negl
fdivs
pop
aam
xchg
fistpl
push
cmpsb
jg
es
cmpsl
lock
shlb
into
repnz
mov
scas
cmp
pushf
out
mov
stos
lahf
pop
lret
lcall
int
push
into
pop
lcall
mov
mov
sti
ss
out
add
xchg
clc
add
stc
sbb
mov
cmp
sbb
inc
test
xor
sti
xor
lods
mov
imul
push
jle
mov
clc
fcomps
inc
leave
sbb
lcall
xchg
enter
out
or
cmp
nop
test
mov
loopne
cmp
add
shrb
lret
xor
dec
pop
je
jo
movsb
cmp
test
repnz
mov
jmp
pushf
adc
daa
xchg
fbstp
push
xchg
pop
pushf
xchg
shrl
xor
jg
fstpl
pop
imulb
popa
lcall
call
fs
xlat
enter
xor
pop
sarb
clc
pop
or
outsl
negl
lahf
sbb
jmp
jecxz
xchg
call
pop
sub
or
mov
xchg
mov
and
lahf
pop
mov
mov
jl
xchg
mov
lods
xchg
ljmp
sbb
jo
aas
loope
test
test
mov
push
add
dec
sub
outsb
pop
cli
cs
das
add
loopne
sbb
aaa
leave
inc
std
mov
pusha
push
int
divl
rorl
aam
rol
les
out
add
fcoms
sbbb
mov
lahf
lock
fiadds
xsaveopt
sarl
sub
mov
fistpll
xchg
push
adc
adc
mov
in
fmuls
movsb
cmp
pop
mov
clc
xor
insl
xor
lahf
decb
neg
pop
out
cmp
insl
in
mov
cwtl
es
inc
cwtl
arpl
test
inc
addr16
mov
orl
and
xchg
sbb
jne
mov
xchg
push
mov
stos
mov
xchg
inc
mov
lret
fdivs
dec
sub
mov
pop
shlb
xor
call
push
pushf
jns
sbb
pop
fsts
or
or
outsb
cli
dec
rolb
test
cmpsb
xchg
mov
dec
test
sahf
push
push
and
mov
xor
loope
repz
sbb
sub
push
les
push
gs
inc
push
mov
shr
pop
nop
pop
das
sbb
adc
mov
sbb
adc
ret
dec
xor
sbb
mov
call
adc
test
adc
movsl
pop
sub
jbe
in
cmc
clc
sub
ja
pop
in
inc
imul
movsl
lea
fs
mov
subl
xchg
ds
fsubs
or
fsubl
out
in
nop
out
sub
idivb
dec
es
cmp
stos
and
jno
adc
and
cmp
outsl
push
outsb
insl
ficoms
sbb
mov
mov
sub
fsubs
int3
aaa
xor
fdivl
and
push
lea
sarb
loop
sbb
jbe
inc
in
cltd
xchg
pop
sbb
xchg
aam
sbb
pushf
adc
das
mov
out
dec
mov
test
out
add
pop
outsb
scas
and
cmp
jl
repz
aaa
xchg
shll
lods
cmpsl
psrld
mov
xchg
cs
pop
repz
cld
or
mov
ss
lds
fcompl
sbb
mov
out
push
imul
mov
loop
daa
es
adc
mov
pop
in
fcoms
add
adc
mov
jae
aas
jp
stc
add
xchg
pusha
mov
call
mov
nop
xchg
fdivrl
cld
mov
pop
lea
out
lret
sub
mov
and
pushf
dec
and
clc
add
xchg
pop
mov
aas
leave
imul
mov
cmp
stos
jbe
icebp
jp
cmp
push
dec
movsl
sti
add
ljmp
ljmp
fcoms
cmp
test
cmpsb
xchg
adc
mov
push
pushf
push
int3
dec
data16
or
sub
aas
stos
ret
mov
push
sub
jg
clc
stc
aas
or
lahf
jbe
bound
jo
test
mov
or
push
dec
bound
insl
out
call
pushl
orl
mov
pop
sub
or
xchg
jnp
xchg
push
in
dec
cmp
js
push
xchg
aas
xchg
jecxz
pop
aas
subb
cli
std
mov
cltd
lcall
ja
xchg
lea
push
lret
push
in
sbb
fistpl
cmpsl
shrl
adcl
lock
out
cmp
movsb
aas
jmp
mov
int
ds
mov
push
cmp
mov
insb
mov
into
cmp
std
xchg
stos
push
call
sbb
jno
push
repnz
pop
daa
cmp
xchg
in
jne
mov
sahf
mov
aaa
aas
and
mov
incb
or
jne
adc
fsub
cmpsb
sbb
adc
sti
dec
popf
jge
jg
lods
out
sbb
pop
and
cmpl
shl
jg
sbb
pop
rcr
or
popf
pop
lods
hlt
pop
jne
mov
mov
lcall
jge
in
js
stos
dec
jl
lahf
adc
push
or
add
mov
cmc
popa
jnp
xchg
mov
sarl
pop
addr16
call
cmp
cli
sbb
or
lret
ljmp
mov
xor
clc
mov
pop
fwait
mov
pushf
xchg
pusha
mov
cld
jns
fstl
dec
pop
inc
ljmp
xchg
pushf
fnstsw
jbe
pushf
jnp
divl
fildl
movsl
lods
mov
pop
pop
lret
jp
jb
cmp
setb
je
pop
sbb
repnz
mov
xchg
xchg
cld
dec
inc
push
aad
dec
in
sbb
adc
je
imul
call
cwtl
pop
sbbb
or
cmp
aam
pop
or
sbb
pop
in
iret
ret
out
push
sbb
in
xchg
push
xchg
or
lret
sbb
popf
jae
mul
ss
ljmp
mov
inc
jbe
shl
lahf
sti
aas
fs
jge
cmpsl
mov
cs
xchg
faddl
loop
push
xchg
lock
push
push
stc
pop
push
popf
hlt
movsb
sbb
xchg
push
jae
scas
int
in
pop
fnstsw
lods
mov
loop
sub
adc
inc
repnz
sbb
jb
xchg
push
dec
push
leave
mov
xchg
enter
mov
mov
dec
les
mov
int
test
cmp
andl
sbb
insb
aad
adc
int3
cmp
dec
jge
mov
jle
lods
sbb
fmul
gs
and
push
cld
jg
ss
mov
loopne
mov
cmp
je
cmpb
jbe
and
flds
or
ret
sbb
aaa
inc
sbb
pusha
push
jo
cli
adc
out
pop
lea
inc
push
dec
fmull
xor
dec
pop
jl
sub
scas
adc
nop
mov
mov
mov
mov
scas
xchg
lahf
cmp
xchg
lret
daa
nop
mov
pop
loope
jg
pushf
lcall
xchg
jmp
mov
fdivs
adc
data16
mov
jb
add
pop
pushf
add
enter
nop
mov
stos
pop
out
imul
xor
xor
enter
imul
xlat
pushf
int
lret
addr16
sti
fistps
xor
lret
mov
out
movsb
fstl
cltd
out
fadds
popa
cmp
and
pop
lret
xor
xchg
rcr
dec
inc
cwtl
cmp
add
cwtl
aas
xchg
push
stc
mov
mov
cmp
subl
xchg
jl
in
sbb
fadd
pop
or
ret
jb
sub
lea
repz
ret
mov
pop
movb
and
fnstsw
test
aad
cmp
sahf
sti
into
outsl
aad
repz
xor
mov
push
sbb
fsubs
pop
and
cli
push
lea
rcrl
aas
int3
mov
mul
and
scas
cmp
push
mov
cli
scas
lods
jne
and
cmp
repnz
sti
mov
mov
les
sahf
lcall
jbe
dec
int3
xor
daa
dec
imul
xor
push
in
push
out
mov
hlt
pop
sbb
test
mov
cli
sbb
insb
adc
xchg
push
in
cli
add
mov
jl
out
xor
enter
xor
jle
xchg
outsb
fistps
rolb
add
adc
push
mov
fwait
xchg
cwtl
int3
adc
mov
adc
inc
lock
push
in
stc
bound
fcoml
pop
mov
and
mov
xchg
cmp
fdivr
aas
mov
xlat
out
or
cwtl
cwtl
or
aas
jne
stc
sti
fiadds
stc
imul
and
sbb
stos
cmp
fisttpl
push
bound
xor
aad
popf
cmp
xchg
mov
lock
cmp
xor
lcall
aas
pop
scas
in
fcompl
pushf
mov
adc
int
dec
pop
cmpsb
mov
icebp
dec
lret
sbb
cs
shll
jnp
add
adc
std
sbb
add
mov
sub
test
push
fwait
mov
lcall
and
negb
xor
jno
xchg
mov
lret
out
push
sbb
inc
shlb
push
cmp
sti
pop
test
lret
pop
sub
mov
int3
icebp
xchg
mov
and
cmpsl
push
pop
lret
scas
out
push
rcrb
xor
push
aam
mov
cld
ds
xor
cmp
jl
xchg
dec
push
jns
imul
in
stos
fsubrs
mov
pushf
xlat
or
repz
cmpsl
sti
movsl
lret
mov
movsl
pushf
sbb
jge
push
scas
lret
push
out
ret
cmp
sub
pop
xchg
lcall
lods
sbb
fnstenv
jle
movsl
mov
mov
pusha
es
fsubrl
aas
testb
jns
in
cmp
mov
dec
inc
out
pop
std
sahf
scas
sbbb
jno
scas
pop
into
xchg
mov
mov
dec
cmp
fdivs
mov
cmp
jns
fsubrl
sbb
fs
ja
pop
data16
push
notb
or
fcomps
cmp
add
xchg
xchg
or
and
fmull
add
pusha
cmp
lods
es
pop
sub
movsb
sti
cs
push
sub
add
xchg
sub
dec
cwtl
pop
ret
ret
call
pop
ljmp
lock
jnp
rorl
packssdw
pop
pushf
cwtl
rcll
pop
int
sbb
mov
push
adc
in
xchg
push
lds
sbb
mov
mov
sahf
sti
scas
add
jp
faddl
ljmp
mov
or
loopne
cli
ret
xchg
imul
aas
dec
movb
fistpl
cmpb
mov
in
fs
mov
lock
pop
int3
xchg
lret
mov
xchg
adc
inc
aas
push
icebp
push
movsl
cld
lods
les
aas
mov
mov
sbb
inc
imul
call
sub
add
sbb
inc
and
cmp
fdivrs
mov
jo
and
xor
cmp
mov
pop
jae
movsb
fbstp
inc
cmp
icebp
fs
iret
xor
or
add
push
aaa
stos
movsb
mov
push
les
cwtl
loope
mov
xchg
adc
xchg
sbbl
mov
insb
mov
push
push
inc
pushf
xlat
jp
packuswb
fnstcw
jnp
cmp
pusha
pushf
bnd
lea
sti
outsb
int
dec
mov
mov
subl
cltd
out
loopne
sbb
adc
fistpll
inc
cmp
or
dec
cmpl
shr
cwtl
sti
sbb
pop
test
lcall
xchg
dec
xchg
sbbl
xchg
hlt
xchg
pushf
enter
subl
fs
xlat
insb
shll
xorl
cmpsl
imul
movsb
add
push
gs
jmp
xchg
pushf
lds
xchg
inc
cmp
rclb
test
cwtl
cwtl
test
and
jg
cmp
repz
sarl
mov
xchg
push
daa
sarb
pop
ret
aad
mov
sbb
mov
cmpsl
rclb
or
dec
roll
aad
mov
aam
mov
in
ficoms
lahf
pop
mov
inc
aad
imul
clc
fmull
mov
jecxz
scas
dec
ds
aas
ljmp
mov
subb
jmp
scas
or
mov
imulb
xlat
inc
xchg
cmp
xlat
scas
movsb
xlat
jae
add
sbb
or
and
cmp
das
and
push
cli
clc
or
jp
mov
repz
mov
imul
fcomps
mov
jle
mov
and
or
leave
flds
lods
addb
sahf
cwtl
movsl
ror
pushf
jno
jbe
xchg
stos
mov
outsb
out
jp
mov
std
sbb
sbb
push
push
push
jle
lods
cmp
mov
mov
mov
sbb
pop
ret
pop
jns
pushf
icebp
jecxz
cmp
jbe
aas
ljmp
js
pop
adc
testb
xchg
mov
add
mov
iret
lret
pop
pushf
add
add
aaa
or
jecxz
icebp
cwtl
mov
sub
stc
int
lret
fstpt
mov
pop
xor
add
mov
adc
sbb
mov
dec
or
mov
or
imul
adc
fdivs
pushf
aad
mov
adcl
pop
pop
les
stos
mov
int
rcll
mov
mov
inc
cmpsl
popf
mov
call
in
int3
cmpsl
pop
ret
and
xchg
pop
test
and
int
cli
cmc
idiv
and
add
inc
aaa
pop
add
push
xchg
lock
mov
mov
aas
mov
int3
add
fmuls
cli
jo
in
jnp
icebp
lea
shlb
lret
mov
sbb
or
or
mov
fstps
push
jl
pop
sub
cmp
adc
repz
xor
cwtl
jp
dec
sbb
inc
jns
mov
jbe
mov
cld
mov
and
sub
rcrb
lods
fdivl
pop
or
mov
mov
sub
aam
cmp
jnp
bsr
pop
scas
xchg
aad
adc
enter
lods
adc
mov
scas
rorl
inc
sbb
ret
mov
or
aaa
insl
aam
push
pop
push
les
rolb
jge
mov
sbb
das
sbb
inc
xchg
mov
dec
or
repz
out
insb
mov
push
data16
cmp
sub
mov
xchg
mov
js
pop
xchg
sbb
ret
in
pop
push
ret
sbb
mov
jle
pop
sbb
fsub
test
sub
cwtl
xor
dec
xchg
cwtl
and
dec
icebp
sbb
sbb
cmp
divl
jne,pt
dec
push
jae
addl
sub
jns
cmp
sbb
in
idiv
in
lahf
rcrb
loope
out
lahf
idiv
and
jmp
sahf
out
call
and
loope
rcrb
cmp
pop
pushf
sar
and
popl
sub
sbb
mov
xchg
cmp
sbb
pop
aas
fcompl
fsubrp
loopne
adc
imulb
in
sti
push
stos
imul
icebp
cwtl
imul
cld
xchg
mov
mov
fisttpl
mov
adc
out
aas
cwtl
push
pop
lods
mov
cwtl
pop
push
jg
fiadds
mov
pusha
add
fadd
mov
jnp
aaa
jmp
imulb
aas
xlat
push
cli
ret
xor
les
scas
cmpsl
mov
aam
js
pop
or
pop
xor
imul
and
xorl
pop
aam
adc
clc
or
je
fcoml
lods
shll
cmpsl
xchg
sbb
cmpsl
push
inc
int
int
sub
xor
rolb
arpl
clc
xchg
cmp
and
fstpt
inc
mov
xor
lods
ja
push
jg
nop
adcb
cld
jo
das
push
mov
dec
pop
sarb
push
jo
jle
cmp
fstps
mov
pusha
mov
out
sub
push
ffree
arpl
aaa
clc
fdivs
sbb
jb
mov
lock
jecxz
adc
jno
add
mov
sbb
mov
inc
stos
pushf
jae
out
nop
out
pop
fmull
sbb
xchg
scas
mov
xor
faddl
or
jl
rep
pop
xchg
inc
sbb
cli
pop
adc
lds
mov
jmp
mov
mov
pop
dec
lahf
xchg
sbb
leave
ss
inc
xlat
orl
adc
subl
lcall
in
out
pop
push
gs
xor
add
pop
rorl
jo
hlt
or
cli
setl
adc
scas
seta
out
out
jmp
xor
divl
jg
lds
jae
ret
sbb
dec
nop
lcall
pushf
filds
pop
lods
test
aam
sbb
clc
jecxz
fsubrs
sahf
sti
jl
or
mov
sub
inc
sbb
jle
inc
inc
sbb
add
sbb
mov
jge
ficoms
decl
jg
sub
popf
cmpb
mov
lret
mov
cmpsb
xor
in
push
outsl
pop
fdivl
rorb
push
fmuls
mov
cmp
scas
sbb
test
mov
lahf
sub
repz
mov
ss
mov
out
xchg
mov
mov
push
push
lds
repz
cmc
pop
cs
mov
loopne
pop
in
repz
lock
sbb
pop
fstps
or
push
sbb
fsubrs
jo
push
ja
cmp
out
cld
mov
cwtl
mov
push
arpl
mov
sahf
and
aam
mov
mov
cmpsb
nop
mov
mov
je
mov
xchg
fwait
lcall
mov
push
sbb
fwait
dec
ds
jb
sub
fst
mov
mov
int
fiaddl
push
push
ror
loop
lcall
xchg
pop
mov
je
or
pop
jecxz
aas
out
inc
or
popa
adc
icebp
ljmp
mov
aas
mov
push
sbb
jae
movsb
push
xchg
js
call
scas
insb
sbb
and
cwtl
insl
mov
bound
lret
test
lods
mov
in
cmp
and
pop
and
add
cmpsb
mov
test
xchg
mov
push
lods
pop
loop
or
hlt
nop
push
enter
ja
in
mov
test
mov
mov
sbb
out
out
cmp
test
xchg
pop
daa
mov
jp
loopne
inc
or
mov
popf
es
mov
xchg
pop
xchg
sub
repnz
out
es
jg
xchg
pop
int3
pushf
orl
int3
pop
cwtl
and
mov
sbb
or
adc
xchg
pop
stc
pushf
decl
dec
sub
dec
pusha
fstpl
jecxz
pop
adc
pop
push
xor
inc
jnp
sub
inc
int3
pop
inc
mov
enter
out
adc
clc
pop
movsb
scas
je
loopne
jo
jae
xor
sbb
push
icebp
pop
dec
loop
faddl
jg
mov
xor
mov
nop
jnp
les
mov
sbb
cmp
fstpt
xor
scas
inc
dec
cwtl
jge
xlat
sub
in
mov
ret
pop
orl
jl
xchg
mov
movsb
incl
xchg
push
pushf
stos
mov
adc
or
mov
scas
push
dec
pop
ds
hlt
pop
inc
adc
mov
faddl
in
xor
mov
dec
out
fisubs
adc
mov
sub
xlat
mov
or
jnp
imul
mov
mov
repz
sti
push
lahf
popl
sbb
jne
xchg
add
mov
inc
mov
in
xchg
push
mov
cwtl
push
mov
or
sarb
push
jg
cwtl
call
sarb
jns
vmovupd
xchg
mov
leave
push
fwait
dec
fmull
das
cmp
sbb
inc
xor
fsts
sti
daa
pop
aam
ja
cld
mov
iret
dec
add
jo
xchg
pop
xchg
js
jg
sub
adc
pop
add
jp
jb
cmp
xchg
push
jle
sub
inc
sub
repz
mov
xor
push
mov
iret
push
and
stos
xchg
hlt
fmuls
adc
pushf
sub
fmuls
jg
pop
andb
cmp
push
or
mov
pop
push
mov
out
inc
shll
push
iret
stc
insb
sub
sub
mov
jnp
xchg
jg
pop
jbe
mov
or
movsb
imul
je
jnp
xor
outsb
jbe
pop
mov
sahf
cwtl
popf
sbb
lcall
pop
xchg
push
leave
ficomps
mov
out
mov
in
cld
xor
insl
lcall
lods
cld
test
mov
cs
pop
mov
and
mov
xchg
nop
pop
call
sahf
insl
add
stc
jne
mov
and
sub
std
mov
test
push
out
leave
scas
and
stc
mov
clc
pop
push
inc
mov
pop
mov
cli
lea
stos
fdivrs
mov
fs
dec
inc
int
mov
push
inc
andb
mov
divb
rcrb
leave
mov
fchs
stos
es
inc
pop
xchg
fstpl
inc
movzwl
jo
out
dec
mov
ficompl
xchg
dec
mov
mov
cmc
xchg
lock
mov
lahf
loopne
faddl
pop
sbb
jp
jne
cli
jne
pop
jecxz
mov
inc
aad
mov
mov
ss
mov
lret
aad
push
mov
or
cmp
lcall
pop
mov
lcall
popa
push
addr16
xchg
xchg
mov
and
fldl
data16
pushf
sarb
xchg
xor
fwait
mulb
cltd
add
push
xchg
add
hlt
mov
iret
mov
fsubrl
stos
pop
or
jecxz
fnstsw
sbb
in
add
in
shrb
insb
push
cmp
mov
mov
or
cmc
sbb
fwait
mov
test
cmp
jle
mov
sub
fildl
mov
lahf
fsubl
cwtl
data16
pushf
lret
andb
dec
jns
leave
cwtl
sbbl
xor
jne
inc
pop
jp
call
out
je
idivl
icebp
stos
dec
sbb
mov
nop
popf
fcoms
mov
js
icebp
add
mov
mov
adc
cmpsl
push
sti
push
mov
cwtl
or
inc
and
fisttpll
je
add
xchg
add
into
out
pop
sar
add
es
pop
cmp
hlt
aad
inc
mov
clc
fcomps
jbe
push
xchg
fwait
mov
out
cmp
pop
mov
fmul
cli
and
jb
pop
ljmp
jae
or
sbb
leave
and
dec
les
arpl
sub
rcll
cmp
cli
sub
inc
scas
add
push
mov
mov
sbb
pop
pop
sbb
cld
aaa
cmp
jae
mov
cmp
lea
mov
sbb
ljmp
mov
es
dec
mov
clc
mov
insb
fdecstp
mov
test
add
pusha
pop
push
mov
shrl
lods
jg
jl
mov
lret
ja
jae
mov
sbb
or
and
loope
mov
pusha
movsl
ret
jbe
data16
dec
or
or
sbb
loope
into
lret
cmp
pop
mov
sbb
mov
sbb
call
subl
shll
xchg
test
out
mov
sbb
pushf
pop
or
xlat
repz
scas
lea
repz
les
sub
lret
cld
mov
call
push
jmp
sarb
aam
pop
xor
cmp
mov
sub
js
mov
pushf
hlt
fstp
into
add
push
mov
mov
fidivrs
sub
sbb
mov
test
repz
mov
xor
mov
scas
mov
loope
faddl
xor
ljmp
fists
xor
aas
push
jg
mov
andl
mov
aas
add
jg
push
popf
test
pop
xchg
jnp
cmp
xchg
stos
filds
sub
mov
shrb
push
cmpl
loope
adc
adc
mov
mov
adc
fisubl
fsubrs
cli
inc
pushf
inc
mov
sub
jp
mov
xor
sarb
scas
cmpsl
shrb
sub
cli
dec
inc
jns
inc
mov
mov
ret
lods
jne
movsb
pushl
cwtl
mov
jnp
dec
decl
mov
js
stos
fdivrs
or
cmp
push
jecxz
iret
dec
mov
das
jne
sbb
inc
cmp
cld
or
jbe
ss
dec
stos
mov
sbb
push
push
xchg
jb
or
push
movsl
lods
or
movsl
pop
out
lea
dec
das
mov
sbb
pop
stos
aaa
add
inc
insb
or
pushf
inc
add
sbbl
inc
ret
push
or
push
movsb
inc
fs
in
dec
jmp
xor
test
scas
sti
mov
sbb
mov
movsl
xchg
xor
rorb
push
pop
ss
outsl
repz
xchg
push
cli
pushf
add
jnp
in
xlat
repnz
push
xchg
in
faddl
pusha
movsb
roll
add
xchg
aad
cmp
jg
int
stc
lea
daa
in
pushf
es
adc
divl
fstpt
mov
xchg
adc
cwtl
jle
lret
lcall
add
mov
jae
pop
lods
lea
cmpsl
inc
adc
ja
sub
adc
adc
test
int3
push
popf
mov
sbb
jae
mov
fwait
jecxz
cmpsl
push
jle
and
cmp
subl
ljmp
mov
or
inc
add
test
outsl
inc
imul
cmpsl
mov
outsl
push
cld
inc
push
aas
mov
push
leave
dec
ret
xor
push
xchg
cwtl
pop
ret
out
pop
call
jp
push
jle
test
movsb
mov
scas
jns
pop
bound
pushf
cmpsl
sbb
neg
data16
cmpsl
jg
inc
mov
nop
xor
and
fdivrs
andl
lods
les
xchg
sbb
data16
mov
cmpsl
dec
mov
push
mov
add
scas
pop
jge
enter
out
cmp
js
xchg
sti
dec
cmc
xor
stos
xlat
jmp
dec
xor
test
scas
lods
les
sub
push
test
das
pop
outsb
stc
mov
iret
mov
jg
out
add
js
or
lret
cli
mov
outsb
mov
jnp
jge
incb
cli
bnd
pop
cltd
sbb
out
and
dec
cmp
sub
xor
push
repnz
or
pop
dec
push
jo
dec
in
cmp
mov
movsb
xchg
cwtl
sarb
faddl
setb
mov
lock
pop
adc
dec
mov
shlb
push
jno
test
mov
in
inc
cwtl
gs
sbb
sbb
sar
outsl
test
mov
les
das
and
and
mov
xchg
or
popf
xchg
aad
mov
push
mov
and
cmp
call
mov
mov
push
cli
pushf
pop
call
pop
test
lds
out
xor
add
add
sub
inc
mov
push
jle
ss
cmp
imul
jge,pn
mov
fists
add
push
dec
jl
ja
repz
cli
cmp
dec
lea
pop
cmpsl
fists
jnp
out
aas
outsl
mov
xchg
fdiv
adc
mov
dec
pusha
cmp
enter
xchg
pop
mov
sbb
xor
int
pushf
sti
outsb
pop
xor
into
xchg
cmpsl
sbb
push
scas
movb
testl
or
mov
jle
data16
gs
or
outsb
jp
sahf
ljmp
adc
xchg
test
fsubr
lahf
cld
inc
sbb
lcall
sarl
jle
rol
pusha
xor
mov
int3
pushf
mov
ljmp
xchg
mov
sub
xchg
and
pusha
jge
and
jmp
sahf
pushl
add
aaa
mov
dec
push
xorl
in
jbe
inc
loopne
and
into
mov
outsl
cmp
clc
mov
adc
inc
addr16
jp
sub
dec
rol
sbb
pop
xor
popf
or
aam
in
popf
mov
aam
and
dec
xchg
mov
inc
loope
push
test
shr
test
mov
dec
lods
adc
popl
fwait
pop
daa
cmp
mov
pushf
push
push
ret
lods
sbb
mov
shr
sar
mov
cmp
lret
mov
cmp
test
cmp
mov
cltd
aaa
xchg
xor
sub
xlat
xchg
or
sbb
mov
and
loop
leave
mov
sbb
xor
fbld
shrl
cwtl
sub
cmpsl
mov
dec
insl
test
pop
cmpsb
inc
frstor
jnp
insl
push
lds
inc
lret
inc
mov
test
push
pop
outsl
mov
sub
int3
inc
pop
xor
sbbl
insb
inc
mov
push
test
or
add
pop
jns
mov
and
pop
fsts
sub
imul
lods
mov
lods
inc
dec
je
out
fsubl
push
sub
mov
pop
mov
mov
jl
rcrb
xchg
dec
push
pushf
std
dec
imul
lods
js
mov
adc
sbb
iret
or
shl
xor
gs
dec
call
or
hlt
sahf
mov
cmp
call
call
and
cmp
mov
pop
cltd
xchg
into
adc
xchg
lea
jg
and
jnp
jns
cmp
pop
lods
mov
jecxz
pop
dec
sub
or
mull
in
pop
stos
pop
fcmove
sub
and
adc
aas
paddsb
pop
sbb
push
mov
pushf
pop
shl
ret
test
daa
jmp
repz
push
cwtl
das
fstps
mov
incl
mov
test
into
sub
mov
stos
lea
xor
movsb
test
lahf
pushf
lea
cli
xchg
adc
fwait
cmp
pop
xorl
sbb
inc
jne
jne
xor
int
inc
fidivrs
lods
or
icebp
jle
cmpsb
daa
mov
out
outsl
mov
and
lcall
push
int
sub
repnz
cwtl
rdpmc
popf
call
loop
lret
das
cmp
mov
loope
ret
jo,pt
sbb
out
stos
and
out
cwtl
dec
nop
pop
fwait
add
test
insl
inc
mov
pop
idivb
sahf
divl
jl
dec
pop
fstl
fdivl
ja
xor
lods
and
xor
roll
mov
or
in
rclb
fadd
addr16
int
mov
cltd
sub
idiv
and
mov
cs
xchg
pusha
adc
adc
add
andb
and
pop
cmp
mov
pop
add
sahf
mov
push
inc
aam
sbb
mov
dec
cmc
fisubrs
leave
fdivrs
jo
call
out
cwtl
push
lds
xchg
xchg
stos
iret
jge
sbb
imul
into
push
cmpsb
jg
in
and
mov
jmp
lret
sbbb
xchg
cmp
or
fcoms
dec
and
push
jb
mov
xor
outsl
lcall
dec
mov
mov
std
rcll
ret
adc
hlt
xorb
imul
jge
ret
jp
lahf
pop
movsb
scas
cmc
sbb
ja
cmp
mov
mov
mov
mov
mov
pop
xor
jecxz
ds
push
imul
cmp
xor
push
scas
mov
not
sub
xchg
sbb
or
xorl
sbb
mov
mov
pop
cmp
repz
lret
jecxz
push
or
and
loope
ja
cmpsl
xchg
jno
or
cli
out
lods
aaa
sbb
es
xor
fcompl
dec
cmp
shrb
stos
cld
lahf
pusha
or
xchg
sarb
cmc
dec
pop
fdivs
sbbl
pushf
sbb
in
pop
jle
pushf
or
mov
and
cld
cwtl
cmc
mov
lcall
jg
jbe
data16
lcall
fistpll
inc
aas
aad
loop
outsb
mov
pop
jb
and
xor
jb
add
jg
inc
and
xor
aad
les
mov
push
dec
cli
test
stos
jg
xchg
je
xchg
add
mov
jns
inc
scas
dec
sub
xor
mov
loope
pop
sbb
popf
repnz
ja
inc
jg
pusha
mov
mov
jl
sbb
je
stos
mov
sub
jecxz
pusha
sti
imul
mov
out
jae
xchg
sti
cs
ficompl
jl
xchg
push
and
push
iret
fcmovnb
ljmp
fnstsw
and
inc
mov
mov
dec
gs
sbb
add
cmc
movsl
mov
adc
out
aas
add
enter
fnsave
and
dec
cmp
cmovp
pop
filds
cld
in
xchg
ljmp
cli
and
scas
decl
jmp
mov
divl
bound
push
and
mov
jo
fwait
orb
fs
fwait
std
mov
mov
push
sbb
and
sarl
leave
push
mov
cmp
dec
lcall
mov
cmp
int
in
push
jbe
sbb
nop
sti
push
push
decl
push
fwait
test
leave
ret
cmpsb
pop
add
cmpsb
xor
mov
push
out
push
or
jg
cmp
sbb
xor
mov
rorl
mov
in
xor
pop
aas
xor
mov
xchg
fwait
cld
std
addr16
jnp
pop
movsb
lea
pop
and
pusha
push
rcll
enter
int3
and
inc
fcomps
or
hlt
mov
xchg
mov
xchg
or
jmp
cs
dec
test
lea
mov
push
rcrb
add
ds
mov
mov
in
stos
xor
decl
xor
lods
ret
dec
pop
mov
xor
dec
mov
out
sbb
and
push
push
inc
shlb
scas
cld
clc
and
imul
sub
lods
lahf
jg
cs
mov
icebp
adc
sub
in
js
sub
es
mov
mov
fmull
int3
pop
mov
mov
mov
subl
adc
in
jne
bound
in
filds
sub
icebp
mov
dec
adc
sbb
imul
in
jp
push
lock
xchg
repnz
xor
and
jo
sbb
dec
inc
loopne
ror
movsl
aas
xchg
adcb
cmp
mov
incb
fwait
lcall
jp
sbb
test
iret
push
sub
or
repnz
je
cmp
lret
jnp
mov
mov
negb
fdivl
sub
xchg
xchg
test
mov
inc
je
pusha
mov
mov
push
pop
mov
dec
xchg
cwtl
push
shl
add
addr16
adc
mov
sbb
imul
and
sbb
adc
outsl
sti
popa
inc
out
mov
test
jp
mov
pop
sarb
aas
xchg
les
pushf
sub
xchg
mov
inc
push
pushf
lds
sbb
jns
mov
jp
xor
mov
mov
mov
ffree
push
addb
ja
cltd
pop
sbb
iret
jl
pop
mov
and
xor
jnp
xor
jg
or
lahf
imul
xor
loopne
sti
jg
mov
mov
push
xchg
clc
cmpb
jmp
scas
or
cli
mov
scas
jmp
std
aas
pop
lahf
cmp
pop
test
inc
push
fneni(8087
jne
idivl
inc
stos
sar
sub
lahf
cwtl
mov
lcall
mov
cwtl
adc
sub
sbb
push
jl
sbb
xchg
aad
fwait
sub
push
adc
dec
aas
shrb
adc
pop
mov
cmpl
sub
push
mov
pop
sbb
cmp
push
or
loop
orb
jno
push
leave
lcall
hlt
xlat
pushf
lea
ret
aam
mov
jp
fidivrl
imul
jae
or
mov
pop
sub
and
sti
adcl
das
xor
mov
jnp
pop
js
push
pop
mov
jp
mov
or
mov
movb
call
ds
popa
pop
pop
pop
jns
mov
add
fs
fsubs
lea
jl
std
sub
ss
pop
inc
lcall
fidivl
dec
test
push
and
jns
je
pop
ret
jbe
dec
cwtl
or
mov
fsubrl
sbb
jmp
push
pop
xchg
mov
clc
mov
fwait
sbb
int
pop
lods
movsb
sbb
mov
cli
out
lea
mov
imul
adc
outsb
js
cltd
and
sbb
xor
push
inc
stos
insb
cmp
ljmp
stos
jg
outsl
push
mov
ja
mov
sub
jl
cli
sbb
push
adc
out
cwtl
lods
jo
push
andl
jae
cs
sub
or
fidivrl
sbb
hlt
adc
fs
hlt
addr16
push
cwtl
ljmp
fisttps
hlt
es
cmp
js
pop
rolb
insb
inc
mov
mov
mov
das
es
push
mov
bound
loopne
jecxz
pop
mov
mov
add
movsb
jp
mov
pop
lods
sub
mov
aam
decl
jg
shr
cwtl
incb
xor
fmul
jp
sahf
mov
sbbl
scas
and
push
cli
xor
stc
lcall
clc
popf
test
mov
lret
cmpsb
js
and
stos
imul
lods
in
in
sti
enter
and
cli
sbbl
pushf
pop
shrb
pop
imul
mov
fildl
fsts
stc
lods
rcr
je
out
aas
std
push
push
mov
enter
jo
rolb
mov
jg
and
xor
cmp
fstpt
dec
in
pop
gs
and
fwait
dec
and
loopne
adc
pusha
call
sbbb
fdivl
loopne
and
data16
cli
and
enter
add
rclb
fsubrp
sbb
push
mov
ss
xchg
ss
sarl
jmp
aaa
add
pop
outsl
lea
fst
loope
outsb
xchg
sbb
jl
int
xlat
push
xchg
jg
ja
xor
cmc
mov
jle
sub
mov
add
and
arpl
cmp
cmp
inc
xchg
mov
mov
int3
stos
ficompl
mov
sti
xor
repz
or
inc
mov
scas
cmp
sub
xor
pushf
test
jbe
cltd
mov
pop
xchg
and
ficomps
stos
adc
jns
xor
insl
mov
dec
dec
push
test
out
gs
mov
jns
mov
xor
jbe
xor
and
out
xor
dec
mov
sarb
out
pop
cmpsb
cmpsl
mov
adc
lahf
imul
lea
inc
and
push
xor
push
out
dec
out
mov
out
inc
sbb
pushf
sbb
fwait
mov
inc
mov
jmp
adc
fnstenv
sti
int
test
inc
jle
mov
aad
scas
sub
sub
xchg
shl
or
sbb
xchg
push
fs
and
add
or
xor
pop
mov
sbb
mov
outsl
scas
push
scas
call
icebp
insb
add
loopne
lret
mov
mov
adc
xchg
loope
add
enter
push
daa
test
pushf
adc
mov
shl
mov
fmuls
mov
call
cmp
movsb
mov
jp
cmp
mov
pop
leave
xor
insl
xchg
repz
icebp
add
xchg
nop
jo
adc
sbb
push
xor
cmp
mov
in
fnstcw
xor
cwtl
jnp
int3
jg
adc
sbb
and
mov
js
push
fldln2
mov
popf
jno
sbb
jg
stos
pop
mov
mov
loopne
xchg
aaa
int
enter
cmc
lret
clc
ds
in
cli
mov
daa
mov
cmpsl
lods
fwait
mov
mov
add
pop
sahf
inc
out
mov
xor
shl
shrl
nop
sbb
cwtl
pushl
cmp
aad
or
xchg
xor
mov
sbb
mov
jnp
inc
mov
out
mov
repz
arpl
cmc
mov
mov
xchg
pop
jnp
cmp
pop
dec
clc
xchg
jnp
leave
in
mov
sbbb
mov
xlat
test
pop
pusha
ss
adc
pop
pusha
sub
fmull
aas
ja
pushf
popa
and
cmp
push
pop
mov
scas
lea
je
scas
mov
mov
xchg
das
sbb
cmp
xor
stos
mov
sbb
mov
push
xlat
sar
and
scas
pop
sti
mov
or
enter
lods
pop
int
fbstp
xor
scas
sbb
dec
inc
in
in
cwtl
lods
mov
repnz
movsb
mov
mov
sbbl
dec
xchg
cmp
fisttpl
cli
lahf
testl
rcrb
insl
xchg
sub
repnz
adc
cmpsb
cmp
bound
and
scas
and
jl
mov
out
aaa
pop
or
mov
cltd
cmp
inc
lock
cmp
cli
mov
jg
fdivl
mov
sahf
shl
int
paddsb
lahf
imul
aas
scas
int
xchg
insl
arpl
xchg
mov
sbb
mov
jmp
fstps
xor
jne
jae
mov
mov
jbe
jp
lods
ljmp
fwait
or
and
sbbb
push
xor
and
push
ss
or
clc
push
mov
stc
loopne
mov
cmp
ror
outsl
out
xor
les
loop
push
cmp
test
xchg
sbb
stos
cmp
cli
cmp
call
pushf
add
and
ss
pop
js
sbb
cld
cli
xorl
cli
mov
cltd
ret
xchg
sti
scas
sahf
jle
stos
inc
test
pushf
pop
mov
cmp
and
aam
sbb
or
fdivl
add
and
cmp
mov
and
outsl
fdivrs
pop
mov
mov
inc
jge
xchg
xchg
loope
call
dec
mov
es
testb
sub
pop
arpl
cld
mov
repnz
jae
cmp
int
push
jb
jl
pop
cmp
out
adc
sbbl
aaa
std
jp
out
jnp
xchg
lret
push
inc
pop
call
pop
push
repz
mov
xchg
mov
aam
mov
movsl
mov
in
mov
push
jg
xchg
xor
dec
inc
dec
lret
out
xchg
sbb
sub
enter
inc
jg
dec
mov
and
push
leave
mov
pop
mov
das
fsub
mov
mov
push
sbb
cli
out
icebp
dec
xchg
cmp
push
int3
ficompl
push
mov
push
inc
push
outsb
lcall
daa
cli
and
adc
ljmp
xor
mov
cwtl
jnp
js
les
mov
test
out
cmp
pop
jne
mov
mov
mov
cltd
sbb
out
fwait
nop
add
out
in
inc
shll
mov
movsb
fstps
pop
inc
jb
pop
je
pop
cmpb
test
sub
or
jecxz
test
movsl
sub
push
jp
lods
iret
lods
push
xchg
ret
popf
rclb
cld
les
push
jle
pop
add
sarl
fcoms
mov
push
test
into
push
pushf
push
lods
cwtl
lods
jl
or
ret
or
push
pop
mov
movsl
popa
scas
jno
test
sbb
iret
cmpb
add
mov
scas
movsl
xchg
fwait
xchg
mov
sbb
adc
mov
fcoms
dec
xchg
fwait
jbe
mov
dec
dec
pop
sub
jl
pop
xor
xor
dec
shl
push
js
scas
cmpl
ret
inc
sbbl
push
and
call
fcoms
mov
mov
out
scas
xchg
lret
jnp
xor
int3
xchg
sarb
lahf
ljmp
lea
int
addl
aas
and
xorl
mov
and
pop
cwtl
aas
and
cwtl
sarb
mov
repnz
pop
xchg
outsl
lods
sub
fcomps
add
mov
mov
pop
sub
divb
or
and
mov
lea
aam
pop
pop
fsub
shrb
jae
fnop
jg
cmp
add
jp
pushf
adc
dec
nop
inc
sbb
pop
cmpb
mov
scas
mov
or
mov
mov
nop
mov
aam
gs
adc
lret
mov
mov
sti
fdivl
mov
fwait
mov
jo
mov
mov
jge
mov
and
or
jb
aaa
scas
sti
std
adc
mov
sub
ret
lret
stos
pop
mov
lret
lds
push
dec
shlb
cld
cmp
hlt
sbb
xchg
mov
push
mov
pop
inc
stos
movsb
sbb
mov
mov
pop
test
jno
stos
dec
outsb
enter
mov
mov
jg
out
rcll
fmull
xor
enter
out
in
and
cmp
aas
ret
push
pop
mov
or
out
pop
orb
daa
xor
xor
pushf
push
jne
mov
stc
pop
add
rclb
push
lods
dec
add
cmp
sub
sbb
bound
adc
mov
xor
enter
lcall
add
dec
loope
xor
shrl
lea
pop
icebp
jb
stc
in
fcmovnu
les
in
rcrl
scas
fsubl
into
ror
and
add
out
rclb
jp
shl
daa
inc
dec
xor
sahf
mov
pop
add
movsl
mov
pop
pop
pushf
out
sub
in
mov
mov
adcb
lods
xchg
xor
mov
ljmp
or
cwtl
push
test
cmp
jnp
in
xchg
xchg
mov
cmp
pop
fsubp
ljmp
aas
pop
fcmovne
lret
rcrl
dec
xor
push
scas
mov
out
negb
sbb
jmp
mov
sub
inc
cmpsb
icebp
mov
enter
shll
xchg
jge
pop
add
add
insl
and
dec
mov
in
cwtl
mov
lcall
add
addl
sbb
jbe
fistpll
xor
mov
cld
adc
mov
jae
mov
data16
mov
out
std
mulb
dec
aaa
pop
xor
ret
fs
out
mov
xor
sub
sub
mov
inc
jg
sub
add
inc
push
out
mov
pop
fsubr
mov
cmp
cli
rol
aad
imul
sbb
int3
repnz
gs
mov
test
insb
mov
mov
mov
js
fdiv
inc
mov
mov
or
jecxz
cmp
pop
lock
ret
add
add
dec
cmpsb
inc
fldt
sbbl
mov
mov
pop
fcmovne
mov
into
mov
sub
mov
cltd
pop
xchg
mov
cwtl
pop
pop
mov
inc
js
roll
mov
inc
or
mov
out
aad
popa
out
mov
mov
out
inc
aad
cmpl
mov
push
insl
dec
aas
in
dec
mov
fcmovnbe
and
sbb
loope
dec
lahf
sbb
add
ffreep
movsb
push
mov
out
pop
clc
jp
mov
insl
push
cmpsl
jne
sbb
stos
or
mov
and
pop
mov
bound
mov
push
lea
leave
arpl
pop
mov
rcrb
das
mov
mov
mov
in
mov
mov
test
out
add
xchg
cmp
xchg
xor
pushf
das
or
pop
and
mov
cmp
fld
mov
out
das
mov
push
fcomps
xor
movsb
int
pusha
push
ds
out
lods
mov
dec
rcll
dec
loope
cmp
call
jno
mov
mov
mov
std
jl
cmp
sahf
out
pop
push
jle
fdivl
loop
mov
or
jmp
mov
mov
xchg
mov
in
lock
cli
filds
mov
xor
pop
scas
scas
test
cs
fcompl
adcb
mov
scas
xor
les
fcoml
out
ja
mov
lock
fdivrp
ljmp
dec
ret
jns
mov
in
repz
cli
pop
minps
into
sbb
stc
sbb
iret
jo
icebp
imull
add
stos
xor
sub
sbb
xchg
jecxz
adc
stc
push
imul
mov
dec
std
pop
lret
mov
jl
lods
mov
add
divl
push
lret
lock
xor
ja
outsb
test
mov
xchg
mov
and
pop
jg
loope
sbbb
mov
aad
popl
aas
inc
movl
ficoms
jle
ljmp
jo
mov
fistpl
sti
pop
sub
fsub
mov
dec
flds
inc
fnsave
xchg
fdivs
fwait
sbb
ja
in
jo
test
ljmp
in
outsb
jg
and
lcall
dec
mov
pop
icebp
aad
add
jmp
fbld
mov
fwait
jnp
fsubrp
lahf
aam
inc
push
cltd
mov
or
cmp
call
arpl
fsubrs
push
jo
fmull
jnp
fbstp
mov
xchg
and
sarb
dec
pusha
jo
xor
rol
dec
inc
imul
pop
inc
xchg
es
mov
repz
aam
dec
jge
xor
das
fidivrs
cmp
popa
pushf
jge
rorb
xchg
out
adc
cmpsl
and
mov
repz
adc
adc
xchg
mov
test
test
xor
neg
sbb
dec
push
jb
mov
in
insl
sbb
xor
insl
dec
and
repnz
pop
loop
insb
mov
daa
mov
xor
inc
cwtl
int
sbb
xchg
inc
and
jno
sbbl
rclb
or
negl
sbb
cmp
jg
jl
stos
jg
xor
cli
jmp
mov
pop
xor
ss
mov
mov
rorl
inc
sbb
jg
dec
jae
mov
push
orb
cmpsb
fwait
xchg
daa
in
cltd
adc
sahf
pop
lods
push
les
rcrb
test
pushf
mov
stos
sahf
mov
pop
inc
ffree
fs
je
pop
fisubl
jo
xlat
xor
repnz
mov
int
sub
fsubs
jp
sbb
call
jmp
cs
cmp
push
lcall
jmp
mov
and
xchg
jnp
stc
adc
lea
ss
les
jp
push
ret
int3
aam
cmp
sub
dec
in
pop
add
scas
je
mov
movsl
cs
mov
das
jns
in
mov
jmp
aas
mov
pop
in
xor
lahf
cmp
xchg
mov
sti
and
movsl
mov
pusha
fsubrs
sti
lahf
cltd
sti
scas
inc
add
adc
mov
ja
std
call
adc
inc
mov
push
cmp
jg
icebp
mov
sub
jl
aam
sbb
pop
adc
je
xchg
xchg
fsubr
adc
mov
mov
push
mov
sub
das
icebp
std
jae
clc
xor
pop
popa
test
push
cmp
fidivrl
cmp
loopne
shlb
aas
mov
ljmp
fsubrs
jg
mov
sbb
jae
sub
push
dec
mov
test
adcb
mov
pop
movsb
ret
push
loope
mov
dec
pop
popf
out
jns
pop
pushf
rolb
xor
mov
pop
loop
fisubs
push
cmpsl
mov
ds
aas
pop
xlat
mov
sbb
push
xor
mov
cmpl
lods
in
push
mov
pop
int
mov
mov
sbb
mov
mov
adc
pushf
jmp
in
ret
cmp
mov
xlat
insb
outsb
adc
dec
mov
rorl
pusha
inc
sbb
jmp
jae
out
cwtl
and
add
inc
mov
bound
cmpb
test
jno
sbb
fcompl
subl
imul
pop
push
mov
jne
lret
mov
adc
xchg
sbb
xchg
pop
aaa
jbe
jecxz
aas
jno
pop
xor
xorl
adcb
xchg
fdivrs
xchg
mov
les
out
enter
cmpsl
add
push
sahf
cli
cwtl
lods
and
js
jmp
sub
call
test
pushf
or
pushf
sti
out
adc
repz
pushf
out
sbb
xchg
inc
inc
test
cmpsb
inc
xchg
cmp
jnp
sbb
fadds
or
adc
mov
jns
mov
mov
icebp
leave
cmp
xor
inc
cmp
lods
int3
ja
sub
cmp
outsb
jg
cmp
pop
jno
sbb
pop
lods
aad
mov
pop
mov
xor
lret
inc
lret
insb
mov
xorb
mov
push
mov
or
cli
jg
mov
mov
mov
es
or
and
pop
mov
add
lcall
aam
inc
shlb
cmp
sbb
pop
lahf
sbb
mov
je
arpl
xchg
jnp
dec
loop
inc
sub
stos
pop
mov
push
scas
rcll
sbb
call
and
xor
adc
repnz
add
mov
repz
call
icebp
pop
jnp
mov
sbb
pop
lods
mov
adc
jb
lcall
xchg
inc
loop
enter
lret
dec
cmp
push
scas
pop
es
fmul
out
pop
ljmp
mov
cmp
inc
fdiv
jecxz
sahf
pcmpgtd
push
aas
adc
mov
js
ja
cmp
pop
loopne
xchg
call
stos
fsubs
movl
push
iret
dec
sbb
stc
cli
mov
filds
mov
cmp
cmc
mov
das
sahf
sarl
push
mov
lcall
fwait
out
scas
loopne
pop
in
xchg
mov
mov
cmp
pop
inc
mov
jno
mov
sti
mov
cltd
cmp
mov
stos
test
outsb
cmp
mov
cmp
scas
lods
fwait
push
push
xchg
cmp
out
out
xor
bound
cli
les
mov
xor
mov
xchg
lods
ret
jnp
out
adc
push
ss
sbb
sub
sti
xor
xchg
or
and
lock
lock
in
into
leave
aad
clc
rcr
mov
addr16
insb
jle
pop
pushf
out
sbb
mov
aaa
cwtl
mov
popa
loope
sti
pop
pushf
and
xlat
iret
adc
inc
in
mov
jecxz
loopne
inc
adc
hlt
pop
loopne
adc
std
fildl
cltd
sub
add
fwait
adc
out
jmp
mov
xor
mov
mov
pop
cltd
fcomps
ja
mov
mov
lods
lods
setae
dec
mov
pop
popl
mov
push
enter
pushaw
mov
ret
cwtl
je
lods
int3
pushf
pop
mov
inc
out
pop
pusha
xchg
fildl
scas
cmp
cmpsb
int
lods
xchg
test
out
jns
in
repz
mov
mov
outsb
xor
mov
bound
cmp
fsubrl
fisttpll
stos
sti
scas
xchg
mov
daa
xor
dec
adc
push
popf
sbb
xor
out
shrd
ret
pushf
fs
lea
fdivs
mov
cwtl
jecxz
mov
pushf
test
adcl
aas
cmp
sub
pop
mov
int3
xchg
cmc
mov
xor
je
cwtl
je
cmp
mov
mov
sbb
gs
mov
aam
fistl
movl
stos
mov
nop
faddl
mov
and
mov
xchg
sar
js
insl
mov
sbb
pop
sub
mov
mov
negb
frstor
xchg
adc
xchg
pop
sub
mov
mov
in
aas
dec
aam
pop
inc
fildl
or
mov
scas
cmp
fcompl
repnz
mov
and
and
notb
mov
jbe
push
mov
leave
mov
aas
pop
testb
fcmovnb
dec
imul
cmp
movsb
in
lret
cld
mov
cmp
cmpsl
cmpl
mov
mov
cld
cli
and
sbb
cmpsl
dec
and
test
lret
mov
in
jmp
mov
sbb
bound
mov
sub
pop
sub
out
faddl
fimuls
push
jecxz
push
imul
inc
adc
sub
jmp
movsb
adc
test
add
xchg
jns
fwait
dec
mov
mov
pop
or
fldenv
add
ljmp
adc
addr16
dec
inc
notb
mov
pop
xchg
lea
lret
sbb
ds
mov
mov
mov
jecxz
bound
aaa
adc
psrld
sbb
inc
into
add
enter
sub
aas
repnz
mov
pop
jl
pop
lds
dec
rcr
mov
dec
add
push
or
aaa
dec
jns
lock
sarb
stos
js,pn
aam
adc
xor
into
stos
sbb
fsubrs
stc
arpl
push
test
mov
inc
fcoml
cmp
cmc
je
movsb
mov
rcrl
sti
out
and
sti
popf
ret
mov
jle
sbb
mov
ret
push
dec
lods
cld
cwtl
sarb
cmpsl
jae
in
push
es
xchg
mov
mov
cmp
out
inc
popa
cmp
sarl
aad
mov
stc
xor
into
sub
repnz
lods
mov
mov
pop
dec
jl
mov
push
testl
xchg
jae
sahf
incl
test
hlt
test
insl
lods
mov
xor
and
pop
insl
sbb
adc
jmp
or
add
pop
lret
in
fucomi
scas
sbb
shl
mov
cmp
ss
gs
cli
cli
subb
pop
mov
pop
xlat
lahf
push
cmp
aaa
sbb
sarb
fmull
sub
movsb
inc
mov
push
stc
call
pop
mov
jbe
jg
ds
and
test
aaa
cmp
iret
shrb
cmp
jno
inc
and
mov
jmp
or
rolb
jg
sahf
movsb
enter
and
cli
pop
mov
lcall
scas
out
inc
xlat
mov
pop
fidivrl
mull
ficoml
pop
rol
dec
push
dec
test
ret
imul
int3
xor
and
ret
cli
mov
int
and
mov
push
mov
test
in
ja
imul
pop
enter
js
inc
call
rclb
push
cmp
andl
inc
cld
rorb
les
sbb
fldt
inc
cmpsl
lret
shr
cmp
xchg
fsubr
ret
push
cmp
adc
mov
adc
xchg
int
fstps
and
in
pop
sbb
inc
cli
lods
lret
movsl
aad
stos
ret
jb
mov
xor
mov
inc
mov
jmp
lods
outsl
jmp
jg
out
push
cmc
fmull
aaa
jmp
hlt
les
push
mov
mov
sarb
lahf
js
in
mov
test
mov
pmulhuw
neg
xlat
push
dec
or
mov
es
mov
pushf
push
out
and
das
sub
add
cmp
fdivrs
js
lret
stos
fwait
pushf
xchg
inc
fxam
mov
push
adc
xchg
jnp
mov
callw
aas
hlt
mov
push
pop
dec
mov
mov
decl
push
jge
in
sbb
mov
cltd
jl
pushf
rorb
dec
sbb
mov
add
mov
pop
mov
test
xor
mov
loopne
inc
mov
xlat
and
popa
sub
adc
jp
inc
and
test
mov
inc
pushw
aad
out
out
cmpl
jecxz
mov
cwtl
adc
movsb
cmp
sarb
jbe
clc
fsubrs
jl
push
mov
xlat
sub
jl
inc
pushf
test
adc
out
loope
idivl
xchg
adc
cwtl
mov
cmp
mov
push
or
adc
fwait
cmpb
outsb
nop
cmc
test
imul
rcl
sub
lea
add
out
lret
out
adc
sahf
mov
popa
cltd
push
mov
in
or
pop
jo
test
push
dec
frstor
in
dec
cwtl
mov
es
test
enter
jg
fs
add
lods
out
fcomp
sub
jo
jne
lahf
sahf
in
xchg
inc
or
adc
mov
pop
mov
push
outsl
test
xchg
mov
lgs
mov
shll
jne
sbb
jecxz
leave
sbb
pusha
fcomps
or
and
sbb
sbb
sub
push
out
pushf
fdivrp
sub
xlat
cmp
xchg
mov
adc
jg
xor
std
mov
je
dec
mov
mov
idivb
cmc
add
sbb
sbb
lock
add
add
pop
mov
pop
scas
sbb
loopne
add
push
aam
cmp
mov
andl
int3
adc
enter
dec
mov
sbb
dec
sbb
inc
push
push
inc
les
cld
push
outsl
movsb
mov
pushf
dec
mov
pop
gs
ja
mov
mov
fdivrl
sbb
mov
xor
cmpsb
ret
mov
lods
arpl
cmp
adc
xchg
test
lret
pop
clc
mov
mov
mov
mov
leave
pushf
sub
hlt
cwtl
push
stos
int3
insb
imul
pushaw
or
mov
leave
xchg
and
push
or
popf
or
jp
fs
mov
cld
and
jl
xor
ss
out
cwtl
sbb
pop
and
sti
in
iret
cmp
cmp
inc
or
test
pop
xchg
fists
repnz
jb
xchg
cmpb
mov
xor
adc
xchg
mov
incl
mov
test
out
mov
ds
sub
sbbb
aas
out
inc
mov
in
jo
clc
sbb
sub
add
mov
adcl
push
fsub
push
cmp
movsb
or
pop
and
lods
jbe
lret
repz
mov
jmp
in
mov
cmpsb
ret
fisttpl
stc
mov
stos
out
imul
std
jle
sbb
sarl
add
nop
clc
push
ds
and
cmp
pop
push
cwtl
cmp
iret
pop
lock
ficoml
jns
adc
cwtl
repz
ds
dec
cli
pop
mov
push
faddl
fisubrl
mov
pop
jge
mov
dec
jmp
xchg
cmp
lahf
mov
sbbb
mov
inc
push
and
loopne
data16
and
les
pop
stos
imul
adc
jg
aas
int
pop
sahf
mov
jnp
arpl
nop
sbb
sahf
arpl
mov
sub
out
xchg
popf
pop
jle
cltd
rclb
rclb
movsb
fiaddl
adc
mov
je
loope
fwait
sbb
addb
sti
pusha
cli
bound
scas
cli
loopne
aad
clc
mov
dec
adc
jnp
lds
test
or
stc
mov
add
fisubrl
test
and
jle
shl
notb
aas
lds
xchg
idivb
xor
jnp
mov
cmp
push
pop
jl
jl
addl
push
inc
mov
dec
pusha
dec
cmp
cmp
movsb
push
je
insb
lret
xchg
dec
nop
adc
incl
jmp
pushf
jnp
mov
push
nop
les
stos
add
cltd
cwtl
xor
or
lock
movsb
fildll
mov
outsl
mov
icebp
das
add
sbb
nop
stos
lds
rorb
cld
sbb
mov
lea
mov
inc
pop
push
xor
sti
cmp
lret
xor
in
xchg
fs
lods
mov
mov
dec
push
loopne
sti
gs
cwtl
xchg
mov
ja
repz
shrl
shrl
les
cwtl
es
mov
das
mov
jp
int3
ljmp
aad
lock
ret
les
cltd
xchg
mov
push
ja
xchg
cmpl
inc
push
xchg
add
add
test
lds
fimuls
sti
fmull
mov
cmp
jp
test
aas
shll
decl
pop
lea
in
or
xchg
cmp
xor
fsubr
cmpsl
sbb
sahf
imul
cwtl
and
addr16
mov
jl
xchg
or
iret
inc
rorl
or
popf
and
add
mov
or
inc
pop
xchg
jg
sbb
jle
push
popf
mov
and
into
repz
stc
add
arpl
adc
outsb
cli
daa
mov
fcoms
lock
mov
pop
xor
xor
mov
ret
sbb
sahf
loopne,pt
mov
rcrb
sub
imul
test
js
outsl
cmp
cmpsl
decl
pop
or
or
add
fsubs
in
mov
or
ja
mov
lods
mov
mov
in
jl
leave
cmp
idivl
mov
pop
lahf
adc
lret
mov
mov
mov
jle
inc
dec
jae
mov
xor
iret
test
xor
fwait
mov
xchg
cli
push
pushf
push
lods
int
mov
testl
popf
cmc
xchg
js
cmp
enter
sub
idivb
mov
xor
ficoms
out
sar
jg
fdivs
mov
cwtl
mov
inc
mov
adc
fdivs
mov
in
fisubrs
inc
sbb
and
xor
jl
movsl
xchg
xor
jmp
inc
loopne
mov
mov
sbb
or
mov
stc
addr16
ret
cld
inc
jae
jnp
jmp
mov
mov
mov
mov
cmpsl
xor
arpl
out
pop
mov
jnp
sbb
jmp
xchg
sbb
jb
pinsrw
cmp
mull
mov
std
into
icebp
push
mov
mov
pop
xor
pop
sbbb
and
push
fld
xor
test
pop
cwtl
lahf
add
imul
mov
or
enter
mov
mov
les
ljmp
dec
mov
test
and
sbb
subb
sbb
ror
das
adc
lods
scas
sti
push
adc
pop
pop
movsb
addr16
mov
in
jecxz
je
insb
mov
inc
repnz
frstor
pop
mov
jbe
jo
pop
xchg
xor
loop,pn
cld
lret
mov
sbb
pop
and
jbe
popa
imul
mov
mov
daa
fsubs
dec
subb
xor
mov
sbb
jg
or
xchg
inc
adc
inc
sub
decl
movsb
cmp
out
push
stc
push
or
xchg
jl
rdmsr
mov
outsl
popa
xor
test
lods
lods
sub
pop
lret
and
lods
xchg
add
adc
mov
sbb
out
dec
idivb
sbb
dec
hlt
sbb
bound
mov
mov
popf
leave
pushf
ds
fldenv
sub
mov
out
shl
fcomps
pop
mov
aas
pop
jno
mov
rclb
daa
daa
sbb
lcall
clc
sbb
mov
outsb
decl
pop
mov
les
cmp
jle
outsl
cltd
nop
mov
and
push
sub
sbb
js
call
roll
push
imul
inc
in
adc
push
pushf
pop
leave
and
mov
mov
push
dec
fldcw
out
scas
mov
int
outsl
aam
cmpb
or
fstps
das
cmp
jo
int3
test
jp
clc
fstpt
and
or
or
sahf
cld
fdivs
insb
fdivrs
xchg
jnp
dec
mov
popa
aam
xchg
dec
pop
sbb
loopne
mov
and
cmpsb
jg
int
into
inc
fdivrs
in
gs
mov
call
jno
out
push
dec
add
js
mov
cmp
mov
mov
sbb
xchg
out
notb
and
decl
ret
ljmp
jb
test
or
cwtl
out
popf
cmpsl
ret
in
vmovaps
mov
popa
cmp
aas
jmp
loope
inc
test
loope
mov
ja
aaa
cli
loopne
dec
mov
inc
add
sbb
and
hlt
fstpl
cwtl
popf
xchg
lret
scas
mov
cmp
cmpb
push
sahf
adc
jl
push
insb
cmp
test
ret
jl
mov
test
adc
and
out
xor
rcrb
cmp
pop
push
mov
jg
ficoms
pop
mov
lret
xorb
inc
push
pop
jb
jne
xor
lock
fdivl
fiaddl
inc
dec
xchg
sti
data16
cld
mov
push
fcompl
inc
gs
jno
cmp
adc
push
fnstsw
jbe
rcll
dec
movl
xchg
pop
ja
lods
add
mov
fcomp
mov
mov
fcomp
xchg
mov
fdivr
lcall
cs
insl
fstl
imul
aas
mov
mov
daa
mov
mov
shll
jno
or
popf
cmp
lods
in
ficompl
enter
sub
adc
add
inc
sarl
sbb
adc
loopne
cmc
ret
outsl
jmp
sbbl
jmp
pop
push
cwtl
mov
rcll
sbb
ret
pushl
push
sbb
insb
lods
je
jge
mov
lods
fwait
es
lea
lds
aad
xor
pop
lods
aas
lcall
push
mov
jne
ja
sub
in
loopne
add
dec
sub
roll
pop
sub
and
sar
cmp
pushf
fdivs
cmp
adc
jno
sbb
cmpsb
inc
xor
loop
fsubr
insb
adc
outsl
push
sbbb
jl
adc
jg
cmp
xchg
add
mov
mov
addr16
lea
and
cld
sub
dec
jo
aas
stos
cmp
and
ja
movsb
pop
cmpsl
test
fsubrl
leave
adc
pop
jle
pop
mov
data16
xchg
pop
jl
lret
popa
cmp
popf
js
cmp
jl
mov
ss
lods
fstl
cmp
add
int
push
hlt
jmp
das
xor
sbb
jle
jg
jge
stos
xchg
mov
mov
sahf
mov
lret
mov
aas
lahf
sbb
jae
cmp
jle
xor
add
outsl
fwait
xchg
shr
rolb
scas
pop
xchg
mov
mov
mov
sti
jl
mov
inc
sub
leave
mov
inc
fadd
andl
and
ror
out
cmp
add
fsubr
push
addr16
add
jo
lcall
sbb
jno
add
pop
ljmp
andl
or
out
mov
mov
test
aas
lods
inc
mov
pop
push
imul
shrb
add
pop
lock
js
nop
pop
xchg
inc
mov
pop
mov
inc
xchg
pushf
lret
clc
push
inc
pushl
daa
cld
das
sub
pop
mull
jmp
clc
xlat
clc
rclb
sbb
pop
ficomps
fwait
cmp
xchg
jno
push
ja
xor
cld
add
repz
jmp
cld
call
pop
and
inc
int3
popf
or
movsb
xchg
cmp
lods
arpl
pop
push
fistpll
pop
mov
dec
dec
cwtl
fimull
mov
mov
sub
push
aad
xchg
sbb
xor
add
pop
jl
arpl
sti
rcll
in
cmp
sbb
push
and
rep
loope
cltd
pushf
jecxz
pushf
les
dec
call
cwtl
xchg
mov
pop
stos
cmpsb
inc
mov
fdiv
test
cmp
xchg
inc
loope
jg
mov
orb
push
daa
xor
adc
xor
stc
sbb
mov
xor
clc
ja
sub
cwtl
loop
ja
sbb
enter
inc
inc
mov
xor
test
push
fwait
push
pop
movsb
jle
repnz
loop
xlat
jmp
cs
outsl
pop
or
in
nop
js
xchg
or
pop
inc
in
js
jb
mov
cmpsl
push
add
jns
rcl
lcall
jge
mov
mov
jne
jnp
aad
lret
iret
out
scas
popa
dec
xchg
pushf
sub
sbb
mov
cwtl
es
loop
enter
int
sub
rol
sbb
jge
and
and
pushf
pop
insl
sbb
jle
mov
popf
or
xor
and
popf
out
pop
jl
pop
mov
pop
dec
dec
and
jo
ds
xlat
sub
pop
push
out
int3
push
push
and
jge
xchg
fsubrl
or
mov
cld
push
jle
jnp
sub
rcl
xor
adc
fists
mov
std
mov
jge
loope
aam
xlat
or
jmp
xchg
xchg
mov
inc
jmp
and
in
mov
lret
imul
stos
sti
outsb
mov
stos
aaa
mov
cmpb
mov
sti
push
add
fsts
mov
mov
mov
pop
mov
adc
cld
loop
mov
pop
and
dec
pop
nop
adc
mov
test
cld
mov
arpl
lret
out
jg
xchg
aaa
daa
or
mov
mov
loopne
mov
push
pusha
mov
sbb
cmp
and
and
or
insb
mov
inc
nop
rorl
push
popf
mov
pop
mov
xorb
stc
and
out
pop
mov
cmp
inc
or
push
fistpll
jne
xchg
pop
enter
cs
mov
icebp
mov
pushf
push
jmp
cwtl
jg
addr16
ficomps
fdivl
push
or
out
xor
pushf
out
xor
jl
into
ds
mov
and
dec
movsb
cltd
sub
push
cmp
ds
and
cwtl
cmc
and
aaa
call
push
fdivrp
fwait
stc
out
test
or
mov
mov
out
pop
pop
sbb
pop
out
ja
mov
sub
xchg
mov
and
pop
das
push
hlt
cwtl
shl
mov
rcrl
jns
aas
add
sti
movsb
mov
cmp
ss
pop
or
dec
cmp
scas
mov
test
mov
push
lahf
scas
into
or
sahf
fcom
pop
push
adc
inc
cmp
in
and
mov
in
les
push
dec
and
cmpsl
pop
dec
ret
mov
push
fdivrl
filds
in
movsl
jnp
xor
stos
stos
sarb
pop
cli
imul
out
jbe
out
loope
jmp
jb
jge
les
dec
cwtl
outsb
mov
test
inc
xchg
into
fwait
pusha
lock
fdivs
dec
insl
fsubrl
int
push
jle
in
mov
dec
xchg
ficoml
jmp
lcall
sbb
lret
push
ja
xchg
adc
popf
aaa
test
sub
inc
mov
pop
imul
imul
mov
arpl
dec
adc
stos
or
std
enter
sti
push
sbb
int3
jnp
sbb
add
mov
in
push
mov
cmp
dec
sub
cmp
hlt
dec
pop
add
shlb
mov
push
pop
int
sub
jbe
add
inc
cwtl
push
jl
cmp
adc
push
adc
lret
scas
push
test
or
and
je
mov
lods
push
jecxz
cwtl
das
and
or
pause
nop
or
dec
xchg
sbb
pop
popa
xor
cmp
sbb
add
leave
decb
stos
cmp
popa
jnp
iret
push
jle
rol
add
or
adc
mov
xchg
repnz
popf
sub
loopne
mov
ds
fsubl
pop
push
dec
inc
ret
fmulp
pop
and
out
sbb
jo
jmp
stos
sti
stc
ret
xor
cltd
xor
pusha
xchg
inc
ja
into
jle
sbb
adc
jo
adc
popl
andb
push
iret
loopne
pushf
jbe
ret
ja
mov
lcall
mov
cltd
sahf
fcompl
sub
adc
cld
adc
mov
jae
dec
std
pop
fisttpll
bound
sbb
cmp
pop
sub
in
out
loopne
mov
lahf
lods
jle
stos
lret
mov
and
mov
ljmp
mov
mov
cld
jg
cmpsb
les
jb
push
sbb
cmp
leave
pop
out
aas
dec
or
lock
xchg
std
dec
adc
add
cmp
push
mov
sbb
jle
ret
lcall
jg
in
dec
pop
dec
gs
cli
pop
repz
mov
pushf
aam
pop
jl
out
mov
sub
addb
cmp
ja
adc
and
jmp
call
roll
jns
dec
jb,pt
xor
dec
cmp
jl
xchg
std
pushf
aam
adc
mov
mov
pop
push
pop
cmpsl
fstpl
testl
iret
cmpsb
jmp
ds
stc
mov
sbb
dec
daa
push
ljmp
js
movsl
adc
popa
in
jl
sbb
mov
push
mov
inc
adc
out
jle
pop
loopne
cmp
mov
lods
cmp
aas
inc
std
and
in
inc
popf
loop
pop
mov
xor
pushf
xlat
or
inc
orl
sahf
sbb
mov
cmove
movsb
xor
imul
repnz
je
mov
fistl
out
jmp
ret
cmp
push
js
gs
fidivrl
movsb
and
mov
sarl
fs
jne
mov
mov
movsb
ja
fwait
pushf
jle
cmp
cld
xchg
and
mov
sbb
or
mov
stos
push
int
or
xor
scas
dec
adc
fdivrl
mov
xchg
sbb
int
fadds
xchg
pop
fsubrl
cmp
pop
mov
loopne
fldt
mov
in
sub
mov
dec
in
and
mov
aas
out
leave
dec
xor
xlat
pop
cltd
xchg
pop
lods
test
scas
sbb
ret
icebp
popa
cmp
jle
fwait
int
lods
pop
or
mov
cmp
cmp
fwait
mov
stos
jnp
stc
jmp
pop
negl
dec
xor
push
pop
mov
ljmp
sbb
pop
cmp
and
and
xor
aam
xchg
enter
popa
push
push
lcall
xchg
into
mov
scas
daa
pop
repz
sub
or
arpl
shrl
decl
repz
and
xchg
pop
neg
xchg
fadds
xor
cmp
addr16
mov
scas
bnd
mov
xchg
lahf
push
jne
dec
lret
clc
pop
cmp
pop
adc
fwait
stos
fdivrl
outsb
and
adc
fwait
push
xor
pop
addr16
out
adc
leave
dec
cmp
xchg
pusha
inc
jmp
pop
lods
repz
mov
ror
test
xor
test
add
js
pop
mov
inc
sahf
mov
dec
jg
shrb
nop
jp
sar
cmpl
jmp
inc
mov
inc
fcomps
dec
cmp
into
test
jne
push
sti
mov
aam
mov
out
fsubrl
ret
loopne
push
ret
inc
jle
inc
xchg
fldenv
xor
mov
pushf
inc
std
fmul
inc
adc
pop
or
or
push
adc
mov
ljmp
xchg
jnp
jno
mov
sbb
lret
mov
in
mov
dec
jns
dec
inc
neg
adc
ss
shll
mov
mov
pushl
movsb
and
and
psubd
or
push
cs
sahf
mov
xchg
clc
aam
jnp
bound
jno
icebp
movsb
test
inc
or
icebp
cwtl
sbb
pop
es
jl
push
pop
insl
in
fstp
xchg
ja
jg
xchg
push
mov
or
int3
fistps
subl
sti
enter
stc
lea
inc
fistps
mov
outsb
in
in
int
loope
out
int3
sbb
pop
divl
test
mov
push
adcl
pop
push
adc
clc
add
mov
sti
cs
stos
or
sbb
push
int
mov
jbe
xchg
js
cld
dec
cmp
and
test
outsl
push
cmp
fstpt
jb
pushf
mov
dec
sbb
fcoml
sti
mov
in
add
or
jmp
inc
jp
daa
sub
inc
dec
outsl
loope
pop
add
call
mov
fdivrs
mov
jnp
fsts
xor
xchg
pop
cli
outsb
insl
push
xchg
mov
dec
mov
imul
cli
xor
in
mov
and
pop
sahf
lods
enter
and
pop
cmc
mov
lods
sti
mov
cltd
movsb
and
lahf
out
leave
pop
and
mov
sbb
scas
push
int
dec
ds
cmpsb
xor
jl
push
jbe
push
fadds
sbb
dec
inc
sbb
loop
enter
pop
jecxz
lcall
pop
xchg
fisubrl
sbb
repz
jl
push
jl
ljmp
dec
repz
xor
adc
cwtl
shrl
ja
jp
and
out
mov
mov
mov
fsubr
cmp
in
xor
push
repnz
stos
xchg
xchg
dec
insl
inc
movsb
pop
jl
pop
leave
cmp
imul
add
jo,pn
pop
pop
mov
xchg
fdivl
push
lcall
addb
aam
and
dec
mov
and
shlb
iret
lcall
xorl
xchg
sti
addb
mov
cmp
mov
sbb
lahf
add
icebp
xor
mov
imul
shlb
or
ja
pop
in
in
push
jae
pop
sbb
into
adc
out
sub
call
lcall
sbb
mov
push
movsl
or
cmp
adc
mov
xchg
test
enterw
cwtl
fs
sbb
outsl
test
ret
mov
cmp
pop
dec
pusha
neg
dec
mov
xchg
rcr
pushf
test
lret
test
imul
mov
push
mov
pop
sahf
rclb
cli
sub
add
sbb
cwtl
rorb
aas
test
mov
or
aas
in
fistpll
sbbl
xchg
daa
mov
clc
shrl
repz
pop
pop
cmc
xchg
jb
jae
loop
xchg
mov
push
xor
cmp
adc
xor
dec
out
stos
push
mov
sub
push
sahf
cmp
idivl
inc
mov
test
inc
sub
push
icebp
sbb
popl
mov
sub
jo
iret
jg
idivl
sbbl
les
scas
adc
pop
cmp
fcoml
testl
ret
pushf
pop
fcomi
mov
mov
fstpt
mov
dec
testb
outsb
into
fwait
add
sahf
cmp
sub
aad
add
push
push
sbb
xchg
xchg
dec
out
ds
clc
es
lcall
jg
and
mov
pushf
js
push
push
push
cmp
cmp
fmull
rclb
mov
cld
fsub
js
inc
cmp
incl
ljmp
sti
add
ja
add
or
mov
mov
add
lret
or
ds
and
mov
test
jb
fcoml
lret
jge
and
lahf
mov
cmp
lods
adc
xchg
gs
cwtl
sbb
mov
shll
lock
push
decb
jg
rorb
mov
jbe
ret
insl
xchg
inc
push
sbb
jg
inc
hlt
sarb
cmpsl
mov
jo,pn
repz
sbb
push
lods
xor
add
fidivrl
lret
lods
mov
jno
jns
sbb
xor
adcl
mov
sbb
lods
jecxz
sub
lahf
ret
dec
icebp
cmp
fwait
je
int3
daa
or
nop
repz
sbb
insl
push
pop
pop
xor
mov
add
push
mov
sti
es
mov
inc
lods
cmp
pop
std
dec
daa
cmpsl
add
push
in
xchg
cmp
enter
or
out
in
sti
out
jge
sbb
sub
cmp
adc
scas
push
push
adc
stos
pop
adc
lret
les
sbb
adc
fcompl
data16
mov
test
xor
ds
fadd
mov
shll
sbb
mov
cs
mov
push
sub
inc
lea
cmpsl
pushl
fdivr
aaa
sbb
cld
cmp
jo
fdivl
pop
rolb
sti
lahf
dec
cmpsl
mov
jp
pop
das
jge
orb
push
or
fadds
xchg
stos
xchg
fcompl
movsl
arpl
clc
inc
loope
addr16
pop
cmp
sbbb
rclb
js
nop/reserved
xchg
int3
divb
push
mov
rcrl
into
out
sbb
mov
mov
test
push
repz
cli
sub
sti
mov
mov
insb
inc
ja
sbb
push
enter
lahf
fdivrs
sub
jb
jg
into
mov
rcrl
push
jle
dec
mov
stos
add
and
mov
and
cmpsl
add
fldenv
xchg
pop
shl
in
mov
inc
in
cmpsb
call
jae
mov
lret
cmc
lods
cmpsb
cmp
je
ror
loop
cmp
das
cltd
jnp
mov
nop
aaa
mov
add
add
sbb
push
in
fbstp
pop
stos
jp
cmp
jmp
pop
cmp
cli
or
push
aas
shll
xchg
sti
sub
push
fiaddl
addr16
das
push
popa
dec
mov
dec
insl
cld
stos
ljmp
add
fcomp
repnz
scas
stos
xor
sbb
das
mov
std
lock
pop
ds
mov
dec
dec
adc
pop
or
mov
in
pop
out
mov
repz
imul
mov
push
lds
ja
jae
pop
mov
rorl
pushf
scas
fistpl
sub
sub
mov
pop
or
inc
and
out
pusha
dec
lock
and
sbb
lcall
pmullw
pop
insl
roll
sbb
out
jle
and
mov
dec
outsl
adc
cmp
imull
mov
push
xchg
sbb
outsb
xchg
cld
pushf
mov
mov
sub
mov
inc
add
push
lods
dec
jne
xor
mov
loopne
mov
sub
cld
roll
mov
sbb
mov
add
inc
in
lahf
roll
sahf
cwtl
mov
loope
lea
jo
adc
cli
add
in
mov
movsb
stos
shl
out
adcb
fmuls
xchg
mov
sbb
push
rolb
ret
push
inc
fldenv
sbb
dec
daa
jns
jp
mov
inc
sbb
jmp
sbb
inc
inc
loope
mov
cmp
and
mov
les
adc
mov
pop
jge
ret
outsl
and
dec
mov
cwtl
cmp
test
xor
loop
jae
sub
mov
add
fdivs
jmp
xchg
leave
lods
mov
xchg
mov
mov
fnstcw
ficompl
mov
out
pop
adc
add
movsb
inc
sbb
sbb
mov
call
xlat
inc
pop
dec
fisttpl
push
mov
cmc
insl
inc
sub
mov
mov
fiadds
hlt
add
inc
leave
negl
sub
shl
inc
jg
mulb
pushf
mov
pop
or
movb
int3
mov
cmp
mov
push
outsb
jmp
ss
sbb
outsb
sbb
xor
xchg
nop
imul
popa
xchg
mov
pop
cmpsb
jae
mov
test
cmp
xchg
imul
pushf
dec
push
mov
dec
mov
sbb
fdivl
stos
sbb
ja
lcall
mov
mov
ljmp
fmull
xor
mov
and
cmpsl
pop
jg
mov
out
fidivrs
lahf
fdivrs
mov
jp
pop
scas
cmpl
pop
adc
pop
push
add
mov
jecxz
pop
rcrl
push
adc
xor
and
xchg
aas
push
outsb
aaa
je
dec
cmpsl
pushf
cmp
daa
in
push
jno
ljmp
loopne
test
sahf
fidivrl
adc
bound
sbb
push
mov
sbb
lock
sbb
sub
sti
pop
int
xchg
push
sbb
mov
pop
stos
push
push
jle
decb
pusha
repz
mov
sbb
jmp
clc
push
sub
mov
jno
mov
cmc
jnp
lret
lcall
jne
sub
push
repz
loopne
sbb
fmull
dec
ja
ss
fld
out
fmuls
mov
das
fs
xchg
aas
adc
popf
xchg
mov
or
mov
and
add
sti
mov
mov
icebp
push
push
xchg
fsubs
pop
stc
scas
sbb
mov
mov
and
jnp
pop
cmpsb
jnp
jns
sbb
or
fiaddl
sbb
sti
mov
test
xor
jbe
or
cmp
jle
in
mov
fdivl
sbb
scas
mov
sub
insl
inc
mov
dec
test
mov
and
fnstsw
push
orb
cs
xor
cwtl
xchg
lds
ficoms
sub
or
sub
fmuls
clc
ret
fcompl
mov
jle
fcomi
inc
xchg
lret
mov
addr16
mov
aas
aad
addb
stos
mov
dec
shrb
mov
xchg
inc
out
shl
add
repz
imul
cli
dec
mov
sti
jg
jne
fcom
or
xor
int
cwtl
mov
lcall
orl
mov
and
in
daa
jmp
mov
inc
sahf
out
in
test
jae
movntq
insl
add
pusha
mov
clc
test
sub
fwait
xor
das
in
cwtl
mov
add
xchg
repz
pop
stc
adcb
mov
cmpl
mov
mov
mov
repz
push
cwtl
sti
mov
cs
mov
repz
cwtl
lods
xchg
or
fsub
cmp
push
adc
aas
lock
cmp
sbb
mov
and
mov
pop
lret
xchg
sbb
aam
xchg
test
sub
ret
repz
int
sbb
mov
stc
rorb
and
inc
pop
loop
sti
stc
pop
insb
jnp
xlat
pop
push
rcrb
stos
jge
xchg
sub
jno
popf
adc
lahf
cmc
movsb
pop
cmp
sub
or
call
pop
push
pop
test
pushf
lahf
scas
jl
xchg
mov
pop
repnz
sbb
out
adc
xor
push
ss
pop
pop
mov
mov
in
jge
add
icebp
push
ljmp
fmull
cmpsl
jae
mov
sub
mov
lds
icebp
rcr
add
push
mov
je
into
popa
mov
ss
outsl
jge
aas
int
push
fisubl
popf
push
data16
test
daa
push
cmp
cmp
inc
mov
aad
in
test
std
pop
adc
repz
imul
mov
scas
sub
mov
sbb
data16
fnsave
jmp
push
or
mov
icebp
or
mov
cmpsl
lahf
mov
jmp
je
xor
dec
sbb
cmp
je
cmc
clc
xlat
mov
jnp
outsl
sarb
adc
pop
cli
inc
pop
jle
xchg
lcall
add
aam
aad
sub
and
mov
dec
mov
add
mov
repnz
inc
aaa
fistps
push
fsts
jl
cmp
fistpl
je
mov
xchg
sbb
mov
jle
arpl
jno
lahf
xchg
ljmp
flds
adc
cwtl
pushf
pop
xchg
test
dec
xor
lock
stc
dec
cltd
and
mov
xor
lods
clc
push
out
mov
out
pusha
jle
cmc
addr16
sbb
xchg
cmp
int3
test
ja
fnstcw
sbb
outsb
mov
jl
cwtl
sbb
adc
scas
jle
or
std
scas
lcall
mov
sahf
cmp
mov
fcmove
mov
insl
sbb
xchg
push
jb
fwait
add
lcall
adc
loopne
mov
mov
ret
xchg
sti
std
stos
into
xlat
jecxz
push
popf
test
sti
cs
icebp
xlat
xor
mov
insl
cmpsl
push
pop
mov
jno
scas
pop
imul
call
shrb
scas
stos
mov
popa
stos
out
cmp
cmp
in
iret
mov
push
mov
cmpsl
fidivrs
xchg
jnp
out
inc
mov
js
xor
sub
in
or
out
cmp
addl
test
loop
and
xchg
hlt
xchg
addr16
std
cmp
loop
adc
xor
in
sbb
and
push
cmp
mov
arpl
xchg
nop
ja
fidivrl
shlb
cmp
mov
push
inc
xor
sahf
sub
insl
jno
push
mov
in
cs
or
into
hlt
ret
lcall
sti
subl
sbb
cmp
arpl
fsub
jbe
add
jp
int
mov
mov
jbe
sbb
lcall
jge
jbe
mov
scas
push
xchg
or
add
jg
cld
sbb
xor
push
xchg
mov
xor
sbb
sti
cmp
lcall
popf
cwtl
adc
xor
das
sahf
sbb
cli
cli
in
popa
sar
inc
xchg
cmp
sub
fstps
or
push
xor
clc
jmp
cld
out
dec
mov
lea
jnp
insb
xor
sbb
cwtl
adc
push
cwtl
cmpl
lds
push
ja
jbe
sub
mov
lcall
mov
ficoml
dec
rcrb
jo
mov
cltd
mov
sbb
mov
sahf
shr
xchg
out
imulb
scas
jg
jmp
jae
pop
pop
loop
inc
int
loope
mov
lods
dec
fadds
push
cli
jl
push
fistps
lods
movsb
inc
xchg
mov
mov
xchg
out
mov
jp
add
clc
jns
movsl
cmp
jne
pop
mov
cmpsb
jl
leave
std
push
and
popa
es
sbb
nop
or
fcomps
cmp
fsubl
shlb
mov
mov
inc
or
jnp
mov
cmp
out
mov
push
cmpsl
fldenv
mov
popf
addr16
das
jne
xor
fadds
sti
call
in
lcall
shl
jp
inc
stc
dec
dec
xor
int
pop
out
lahf
sahf
ja
jnp
xchg
cwtl
pushl
push
pop
pushf
adc
into
pop
stc
test
leave
cltd
pop
int3
ds
mov
stos
sbb
pop
pop
test
inc
and
inc
stos
push
stc
adc
aaa
push
push
dec
push
stos
mov
push
push
ficoms
ret
call
cmp
xchg
pop
and
cmp
jb
sahf
mov
pop
and
mov
inc
lret
sbb
mov
sbb
mov
pop
mov
rcl
cld
sahf
das
arpl
push
add
sbb
inc
bound
mov
inc
pop
cmc
adc
xchg
in
test
push
pop
add
inc
sahf
adc
sahf
xchg
or
das
sbb
mov
fsts
cmp
test
sbb
lcall
mov
sahf
mov
jo
sahf
mov
jne
pop
add
sub
sub
sbb
cld
insl
aaa
adc
xchg
popl
pusha
lods
pop
adcl
in
pop
cwtl
sbb
xchg
or
cwtl
sahf
jg
flds
lcall
jae
pop
xchg
mov
pushl
inc
sbb
lahf
decl
pop
addr16
in
sub
mov
loopne
inc
and
sbbl
sub
sub
test
popf
mov
push
mov
fs
pop
stos
or
sub
mov
imul
add
jae
bound
jns
mov
jno
fsqrt
addr16
mov
test
pop
lods
jns
mov
cmp
addr16
stos
pusha
xor
inc
fsubrs
dec
cmpsl
xor
pop
mov
dec
mov
cmp
adc
jae
lret
jmp
rclb
fwait
mov
and
mov
lahf
mov
sti
in
aas
mov
pop
fwait
and
sbb
std
jp
xchg
xchg
sbb
mov
pop
sub
stc
sbb
mov
sub
jne
fistpl
or
mov
push
sbb
and
mov
mov
mov
pop
nop
dec
mov
cmp
fisubrl
push
in
das
outsl
pop
push
push
ds
or
aas
test
mov
pop
icebp
sbb
scas
ja
sbb
faddp
adc
or
ja
push
push
ja
add
jae
roll
add
mov
pop
hlt
fmuls
out
pushf
pop
inc
sbb
movsb
in
mov
mov
xchg
and
adc
in
pop
imul
ss
testl
fsubr
stos
xor
roll
ret
inc
and
mov
cmc
je
jg
fstpl
cmpsb
ja
mov
push
mov
sbb
mov
iret
stc
loope
jl
scas
test
push
adc
sub
aam
lahf
outsb
mov
push
lods
dec
mov
xchg
sbbb
movsb
rcrb
sub
xor
pop
loopne
fstpt
faddl
lds
inc
add
cmp
call
and
xchg
lods
jb
and
cmpsb
sbb
sbb
sub
add
pop
pop
xchg
ja
and
ficoml
inc
scas
popl
or
push
add
inc
out
mov
sbb
sahf
outsb
dec
jns
jg
push
insb
fwait
gs
orb
test
movsb
loope
cmp
push
les
sub
cmp
ds
push
dec
icebp
push
xchg
lds
daa
xchg
movsl
jecxz
clc
test
nop
xchg
incl
test
cli
cmp
pop
pop
in
mov
mov
inc
mov
mov
xor
mov
lahf
movsb
aas
pop
arpl
sbb
shrb
jb
cwtl
test
push
clc
hlt
out
xlat
mov
cmpl
fnstcw
nop
ja
movsb
sbb
add
cmp
lods
jne
xor
cmc
cmp
add
adc
mov
mov
ret
aas
insb
add
std
jp
push
xor
lods
mov
incl
imul
adc
lds
and
sar
xchg
lds
push
inc
in
xchg
sbb
je
and
aas
adc
mov
inc
xchg
push
imull
push
cld
jl
jnp
xor
mov
psrlw
ss
out
cmp
popa
adc
sti
pusha
int
add
sbb
sub
sub
and
lahf
mov
lods
mov
movl
aas
incb
push
xchg
aaa
adc
xchg
and
cmp
leave
mov
pop
mov
add
cmp
jle
fsubr
mov
aam
mov
mov
jg
add
dec
fwait
lods
ds
push
adc
aas
xchg
ljmp
popa
and
jecxz
sahf
xchg
out
nop
inc
push
sbb
leave
cli
or
arpl
xchg
jbe
js
ja
sbb
cmp
je
xchg
js
jecxz
push
arpl
js
pop
pop
xchg
adc
sti
inc
sbb
cli
pop
mov
mov
push
mov
xchg
adc
xor
jns
jo
cmp
cmp
mov
insl
sti
jg
test
sbb
sub
aam
inc
adc
jg
aas
push
adc
push
sbb
icebp
mov
sub
mov
add
adc
cld
jo
lea
cld
jnp
test
xor
mov
xlat
bound
aaa
cli
call
pop
cltd
add
into
mov
or
cmpsl
mov
xchg
shrb
test
pop
rorb
imul
and
cli
data16
addr16
sbb
pushf
dec
mov
sbb
add
subb
daa
loopne
push
cvtpi2ps
adc
or
adc
negb
lods
sti
mov
push
mov
jl
repnz
fadds
lahf
and
xchg
mov
shlb
imull
lcall
sbb
jb
fsubl
iret
mov
data16
sarb
cmp
mov
dec
bound
jle
cmp
andl
pop
fdivrl
lock
movsb
jg
xor
jle
pop
es
mov
js
aas
mov
add
add
js
push
lret
sub
mov
push
mov
xor
ja
cs
mov
sti
inc
push
xor
mov
or
pop
insb
and
pop
mov
sbb
dec
je
pop
incb
arpl
in
pushf
mov
imul
lret
cld
ret
mov
incl
sarb
adc
xchg
mov
mov
and
mov
nop
addr16
jecxz
adc
cmp
mov
mov
aam
pop
pop
movsb
pop
mov
loop
mov
int3
fisubl
stos
hlt
cld
cwtl
in
imul
jecxz
lret
dec
rcl
xor
inc
clc
clc
or
mov
cmp
or
mov
leave
test
stos
fnstsw
in
cli
stos
dec
mov
lods
pop
mov
into
pop
ljmp
mov
jmp
sub
cmp
lds
fstpt
cmc
movsb
adc
fwait
out
fwait
push
lret
in
lods
cmp
out
mov
frstor
jb
push
add
mov
push
jecxz
fistl
adc
cmp
fdivl
pop
sar
mov
icebp
fimuls
fadd
inc
mov
stc
mov
bnd
sahf
idivl
mov
mov
js
test
cwtl
mov
in
mov
enter
jecxz
pushf
mov
push
out
fstpt
or
mov
adc
outsl
jbe
pop
mov
std
sub
scas
xchg
or
sub
inc
xchg
jbe
sub
xlat
icebp
cwtl
adc
cwtl
pop
add
sub
stc
test
ds
push
pushf
xchg
jecxz
movsb
add
jbe
cmp
mov
rorb
test
jnp
dec
aaa
sbb
add
push
cld
cwtl
aad
in
sbb
clc
rclb
sahf
rcrl
sub
scas
insb
sub
int3
dec
clc
enter
ss
jl
fcomp
jg
loope
xchg
push
fcompl
jl
push
rcrb
ficompl
lods
movsl
loope
lret
adc
jo
imul
and
daa
fwait
mov
add
ljmp
mov
jne
lret
sub
or
pop
push
mov
lret
sub
mov
in
add
fdivrs
repz
lret
and
loopne
nop
cmp
dec
loope
push
adc
xlat
xor
push
stos
mov
and
jae
test
cwtl
lea
test
and
in
fbstp
or
ficompl
mov
xor
pusha
mov
test
ljmp
sub
jnp
push
mov
popf
sub
int
mov
add
jmp
out
and
call
cld
pop
jae
cld
inc
loope
sti
and
movsl
xchg
fbld
ljmp
movsb
repnz
fdivl
sarb
das
xchg
sbb
testl
out
push
bound
jno,pn
repz
cmp
cmp
or
fwait
pop
mov
imul
lods
pop
mov
cmc
mov
int3
je
mov
rcr
mov
cwtl
stos
inc
je
add
jmp
push
fsubr
mov
loope
fdivrs
ret
leave
xor
sarb
and
int3
shl
stc
pop
in
fnstcw
inc
adc
xor
sti
loopne
jnp
push
fcoml
xchg
in
xchg
daa
cli
lahf
add
daa
push
je
leave
push
mov
mov
xchg
xchg
repz
pop
js
ret
loopne
xchg
test
jmp
std
je
cwtl
lock
jne
mov
fwait
and
pop
dec
into
sbb
mov
mul
jns
mov
or
pushf
dec
insb
and
je
jg
repnz
cmp
pop
lahf
jp
stos
mov
cwtl
lds
lds
adc
sbb
mov
lcall
cmp
pop
iret
out
lds
sub
xor
cmp
cmc
cmpb
scas
insl
scas
aas
pop
and
in
cmp
inc
mov
xchg
xchg
inc
mov
fsubr
add
cs
sub
adc
fcoms
push
insl
dec
jo
push
out
jp
mov
pop
out
js
xor
pop
ret
cmpsb
lds
fcoml
sub
add
addr16
lock
fisubrl
and
jne
ret
inc
add
jle
mov
lods
jnp
jge
lret
sub
pop
pushf
outsl
add
and
mov
pop
xchg
xchg
mov
and
aas
loop
adc
rcrb
push
xchg
pop
mov
lcall
sbb
adc
sti
lock
iret
add
sbb
or
loopne
mov
mov
mov
inc
jne
scas
scas
aas
cld
out
cli
cmp
mov
mov
pop
xor
jnp
int3
and
aas
fwait
movsb
or
mov
mov
lcall
rcr
cmc
shl
pop
icebp
cltd
data16
mov
int3
sub
cmp
pushf
dec
cmp
les
fcmovb
insb
cmpl
pushf
ja
mov
jge
inc
push
into
pop
xchg
inc
cld
push
sub
cltd
mov
call
xchg
clc
sbb
xchg
das
popa
cmp
jg
loope
push
mov
mov
mov
cli
or
ja
xchg
adc
ret
inc
mov
out
test
jnp
pop
std
shr
shlb
adc
cmc
fsubrs
cltd
test
out
pop
pop
xor
jmp
cmp
out
and
mov
into
dec
lock
push
cmp
loop
popa
inc
cmp
cli
movsb
mov
pop
jmp
pop
dec
je
mov
daa
jg
inc
fiaddl
cmpsl
fcmovne
pop
mov
ffreep
popf
and
add
in
cwtl
ficompl
rolb
xor
cltd
cli
inc
push
push
pop
inc
dec
mov
cwtl
dec
mov
es
mov
mov
mov
call
mov
pop
leave
jae
cmpsb
sti
mov
mov
in
fwait
out
xchg
xchg
shr
fdivl
or
xchg
icebp
mov
lods
mov
or
push
cltd
or
adc
jl
rcll
mov
mov
lods
mov
mov
or
xchg
xor
mov
adc
push
pushf
sti
cs
push
or
xchg
sub
sar
mov
jb
mov
mov
lock
stos
pop
les
mov
xchg
and
cmp
push
cmp
fstpt
fbstp
jp
inc
xchg
test
inc
jg
inc
mov
mov
aas
test
sub
sahf
lahf
ret
mov
mov
sbb
xchg
cmp
loope
sbb
ja
mov
mov
pushf
mov
fidivs
sub
pop
aad
shlb
jae
int3
push
stos
rclb
cmc
test
cmpsl
es
aad
ljmp
xor
adc
xchg
sbb
sti
outsb
cmp
cmp
adc
mov
jp
add
push
cmp
sbb
dec
mov
sti
pop
and
push
lcall
mov
xchg
mov
push
jge
mov
fmul
lods
outsl
mov
and
repnz
pop
xor
mov
mov
mov
dec
xchg
fistl
lea
xchg
nop
inc
sbb
lods
mov
jmp
xlat
lahf
jg
lea
movsb
cmp
mov
icebp
xchg
cwtl
insl
daa
adc
scas
add
pop
pop
scas
lcall
jmp
pop
xorb
xchg
arpl
iret
mov
add
fidivrl
fdivr
vdivpd
mov
lret
enter
out
inc
cs
mov
pop
and
ret
mov
jnp
cld
enter
pop
fcoms
or
jne
outsl
pushf
int3
insl
sbb
mov
jnp
mov
ss
jae
dec
sub
pop
fs
js
jmp
add
bound
lahf
and
sbb
pop
pop
push
xor
mov
mov
jl
push
dec
pop
jle
in
out
push
lods
xlat
mov
sub
enter
push
cmp
clc
and
repnz
sti
jno
dec
fadds
and
pushf
and
rcll
jb
inc
pop
lahf
mov
and
arpl
push
or
loop
mov
sub
fwait
sti
out
jbe
out
movsl
imul
rclb
mov
rcrl
mov
cmp
sbb
mov
push
sti
sbb
ret
mov
cmp
mov
mov
jg
jae
pusha
adc
and
push
popf
fcoml
repz
aas
lea
sbb
mov
lahf
pop
stc
mov
flds
adc
cmp
ja
imul
aad
aas
cmpsb
cmp
pop
inc
dec
cmp
loope
out
xchg
test
pop
dec
cmp
int3
push
add
lods
aas
hlt
cmp
or
lret
mov
sbb
inc
mov
rorb
pop
out
fmuls
jmp
lock
mov
aas
adc
stc
push
push
ja,pt
cwtl
repz
pop
idiv
les
lock
iret
mov
xorl
lret
fisubrl
xchg
jecxz
call
enter
leave
push
mov
adc
ret
cmp
out
inc
lcall
test
push
pop
lahf
andl
push
xchg
cwtl
outsl
dec
jecxz
add
sti
fcoml
fwait
ja
pop
imul
sbb
push
cmpsb
push
xor
fmuls
jmp
mov
shlb
ja
sti
cmpsb
ja
xor
jge
xchg
fwait
and
shll
mov
sbb
stos
cmc
and
push
mov
mov
int
cmp
push
loope
scas
jge
pop
and
and
notl
pop
jge
das
add
cmpsb
push
lock
push
xor
mov
and
sub
iret
fists
mov
cmp
fstl
stos
and
jle
push
popf
adc
jns
inc
adc
out
jecxz
das
adc
fs
pop
lahf
mov
scas
data16
imul
clc
clc
mov
cmp
add
roll
lea
mov
fsts
stos
xor
or
jno
or
ret
jbe
clc
lahf
sbb
aad
popf
pop
rolb
daa
std
stos
imul
call
inc
cmp
mov
mov
fnsave
lcall
sub
int3
aam
mov
ds
lret
pop
rol
lcall
jg
xor
jne
ret
push
sbb
and
int3
cwtl
mov
fstl
dec
test
or
nop
or
test
sbb
add
cwtl
push
and
and
xchg
push
aam
fistpl
sbb
cld
sbb
cli
jae
test
pop
or
into
mov
sbb
mov
sbb
jnp
ficompl
test
ret
arpl
pushf
js
mov
add
mov
dec
and
pop
js
jno
fdivrp
xchg
sti
add
scas
imul
mov
enter
xchg
ds
stos
mov
adc
mov
test
dec
mov
sbb
adc
movsl
push
jmp
ficomps
cwtl
je
test
mov
jecxz
cli
xchg
mov
or
sbb
scas
mov
mov
mov
dec
push
shrb
aam
fsub
sbb
sbbl
pop
test
sub
mov
dec
inc
cwtl
divb
or
jo
loope
cmp
iret
es
int3
in
dec
std
xchg
cwtl
mov
dec
bound
push
mov
or
pop
xchg
inc
adc
inc
popa
aad
inc
les
lcall
push
dec
scas
dec
cmpsl
sti
loope
sarb
xorl
sbb
stc
leave
add
lcall
mov
sar
xor
mov
or
xlat
and
mov
bswap
addr16
mov
lret
test
test
fwait
leave
mov
pushf
scas
insb
mov
pop
push
inc
jp
jle
jl
adc
jne
cmpxchg
shrb
fisttpl
pop
js
xor
xchg
jae
sbbb
fs
out
push
fldenv
test
cwtl
out
ljmp
scas
jbe
pop
pop
mov
ss
call
mov
mov
dec
cmpsl
lock
sub
fdivs
cmc
xor
in
sbb
aas
out
cmp
or
adc
cmpsb
into
cmpb
out
xchg
add
in
lods
icebp
out
cwtl
sub
insb
pop
mov
sti
fists
stc
or
in
xor
mov
sub
pop
mov
cmp
and
mov
and
pop
jno,pn
sbb
lret
lcall
aas
std
in
sbb
sarb
mov
scas
lahf
mov
cmc
subb
cmp
xor
loope
das
lods
daa
add
pop
stos
push
mov
xchg
insb
xor
mov
cwtl
mov
adc
add
hlt
mov
pop
stc
mov
and
es
and
cmp
sub
fnstenv
fistpll
jbe
push
insl
popa
mov
sete
cmp
std
cmp
add
pusha
pushf
das
pop
ss
and
cs
bswap
sahf
jo
out
pop
mov
repz
mov
sub
std
mov
aas
dec
pop
ljmp
pop
jle
aas
pmaxub
or
push
lea
jbe
mov
sub
adc
adc
mov
leave
arpl
xchg
cltd
cltd
lods
lea
add
sti
cmp
mov
push
sub
pop
jno
lods
nop
sbb
adc
push
pop
pop
cmc
adc
repz
jg
jl
inc
inc
sbb
mov
adc
daa
and
into
mov
stc
pop
push
cmpsl
sbb
dec
adc
push
xchg
stos
repnz
dec
decl
adc
jno
pop
push
mov
inc
pop
or
sub
scas
aad
mov
pop
xchg
cwtl
inc
nop
jl
in
mov
scas
jg
jl
jmp
xchg
inc
orb
jns
shl
lahf
xchg
fistl
pop
or
jp
mov
lcall
xchg
inc
fs
pop
movsl
mov
cwtl
sti
mov
mov
sub
ss
push
add
mov
or
pop
mov
mov
repz
les
pop
cmp
jmp
pop
or
jo
jo
mov
pop
inc
inc
xchg
and
das
or
repnz
loop
and
addb
mov
jge
mov
insb
pusha
lcall
mov
mov
sar
mov
fistpl
aaa
and
subb
ficoms
lret
xchg
ret
jnp
scas
mov
cmp
push
pusha
sub
jbe
jg
pop
clc
jp
mov
jmp
xchg
mov
scas
dec
pop
loope,pt
jne
out
std
push
xchg
cwtl
push
setge
pushf
pop
bound
mov
je
xchg
pop
mov
jnp
bound
pop
xchg
mov
lods
sub
roll
jp
xor
jae
jg
and
shrl
ret
mov
xchg
adc
fsubs
mov
mov
andl
aad
leave
lea
mov
test
push
lret
lret
cmp
push
shll
ljmp
or
cld
pop
add
loopne
stos
jo
push
lcall
das
mov
jae
in
inc
sub
pushf
psrld
xchg
repnz
in
xchg
fcoml
dec
scas
jo
mov
inc
lcall
popf
and
adc
mov
pop
in
loopne
jnp
mov
inc
sub
inc
loop
sbb
in
jp
pop
scas
fisubs
ljmp
xchg
inc
jmp
stc
pop
cmpsl
xor
and
jg
jl
rorb
push
lods
jg
push
or
aas
mov
sbb
iret
out
js
popa
mov
fistpll
push
pop
in
mov
mov
pushf
sub
dec
lahf
aas
fildll
gs
bound
jmp
xchg
pop
dec
jl
push
int3
pop
jb
pop
push
and
int
popf
sbb
cmpsb
jmp
rcrb
and
and
sbb
idivl
mov
mov
pop
xchg
fadd
ret
mov
add
jnp
aad
mov
adc
inc
shlb
cmpsl
lret
mov
sub
mov
cwtl
fildl
shrl
add
sub
jge
stc
cmp
addr16
push
pushf
stos
pushf
mov
jne
pop
adc
jp
mov
scas
sbb
movsl
push
outsl
shll
lods
rolb
loope
insb
cli
sub
ss
add
mov
ljmp
xchg
inc
add
xchg
loop
mov
xchg
jmp
arpl
push
pusha
andl
ret
sub
cmp
subb
xor
mov
in
sbb
sbb
xchg
mov
in
mov
mov
fldt
cwtl
or
xor
addr16
ret
jmp
push
and
cwtl
sti
rclb
xchg
and
adc
adc
mov
arpl
sub
jp
or
adc
mov
jecxz
or
fs
jle
int
jo
pop
jnp
inc
cltd
xor
mov
dec
cmp
int3
sbb
jg
or
cmc
ss
js
mov
cs
sbb
addr16
xchg
sahf
adc
sub
lods
jne
sub
insb
sbb
rorb
ret
cmp
sbb
jne
mov
dec
mov
dec
push
mov
cmc
test
jecxz
fmuls
leave
xchg
enter
or
pop
jle
cmpsl
cld
shr
sbb
cmp
dec
or
leave
xchg
mov
and
xorb
stc
in
stc
pop
ss
pushf
movsl
sbb
inc
ljmp
lods
test
daa
push
sbb
loope
adcb
int3
mov
xor
and
push
jmp
lahf
xor
cmc
jmp
fsubs
les
xor
mov
push
ret
or
pop
inc
pushfw
jnp
pop
scas
adc
pop
daa
xchg
mov
pushf
pop
adc
dec
xor
stos
cld
jecxz
jmp
xchg
sbb
cmp
and
push
mov
xor
fstpl
mov
mov
aad
icebp
sbb
nop
xchg
or
mov
mov
jb
lcall
stos
sti
xor
mov
cld
ss
jne
test
lcall
mov
sbb
mov
push
sbb
mov
mov
jg
lret
adc
push
shrl
add
jbe
cwtl
fdivrs
pusha
imulb
sahf
ror
movsb
data16
je
jg
sbb
jecxz
xchg
leave
fsubrl
dec
roll
push
xchg
mov
insl
sbb
enter
sti
xor
loope
int
sarl
add
test
cmp
cmc
or
ss
aam
test
clc
scas
sub
cwtl
adc
movsl
inc
pushf
xchg
fists
outsl
mov
lahf
mov
mov
in
loop
int
push
movsl
fistpl
or
pop
loopne
andl
fucomip
in
jb
call
xchg
int3
jb
fsubl
cli
pop
xchg
pop
in
mov
lea
je
sbb
sti
push
sbb
movsb
lret
loopne
lods
repz
aas
add
jmp
sbb
mov
push
cmp
cwtl
sbb
test
pop
pop
xlat
xor
out
xchg
mov
mov
xchg
push
xchg
jecxz
jl
pop
and
flds
inc
sub
jno
jecxz
adc
or
sbbl
xchg
sub
in
jbe
cmpl
fmull
sti
das
enter
push
mov
mov
sbb
aas
repnz
insb
ljmp
cmp
dec
cmp
cmp
mov
mov
test
xchg
test
sahf
adc
repnz
nop
mov
jo
jle
dec
lea
xchg
fdivrl
pop
frndint
les
pop
ret
outsb
add
mov
mov
or
pop
cld
jle
pusha
jne
int3
je
in
mov
inc
daa
cmp
mov
adc
xorb
fisttps
mov
pop
push
mov
nop
test
aam
sbb
push
mov
sub
or
pop
out
pusha
xor
cmp
mov
std
mov
aas
xchg
jle
cmp
cmp
bswap
xor
movsl
mov
mov
ljmp
test
pop
hlt
add
test
shrb
ss
scas
push
pop
push
jl
adcl
xor
out
sahf
fadd
addr16
ret
xor
sbb
pop
inc
ja
fstpt
in
mov
cmc
mov
jns
sbb
push
fstps
jo
sbb
ds
sbb
mov
inc
les
imul
mov
cmp
add
xchg
mov
in
ret
test
push
fists
push
mov
or
pop
dec
test
and
cli
and
shlb
ljmp
sub
lods
jl
aas
popf
cwtl
popf
in
addr16
mov
loop
xchg
inc
mov
jle
xchg
sbb
jbe
sub
or
imull
mov
in
fsubrs
mov
pop
xchg
jecxz
xchg
xchg
add
cli
out
pop
decl
dec
cld
test
sub
xor
pusha
out
sbb
mov
out
adc
ljmp
cwtl
fcompl
in
push
lcall
adc
popf
scas
sbb
sbb
mov
into
xchg
add
pop
stc
movsl
rolb
cmp
mov
pusha
sbb
stos
enter
mov
adc
lods
test
xchg
cmp
mov
in
pushw
mov
cwtl
inc
lcall
cwtl
pop
adcb
inc
daa
testb
stos
push
daa
push
pop
cmp
divl
and
cmp
xor
in
lods
xchg
jmp
sbb
ja
ljmp
nop
fwait
mov
cmp
xor
sbb
dec
test
or
pusha
adc
inc
outsl
add
dec
add
sub
lret
xchg
and
mov
inc
stos
fmull
ret
mov
enter
fcmovnb
stos
fwait
mov
into
cmp
rcrb
sbb
mov
out
ficompl
aam
sbb
dec
adc
stc
sbb
cmp
push
lahf
sti
xor
je
jl
mov
loope
sahf
cmp
aam
ud0
loopne
pop
cmp
addl
pop
cmc
mov
mov
sbb
mov
clc
repnz
mov
pop
jmp
js
jle
cmp
xchg
test
arpl
je
mov
mov
in
pop
in
faddl
cmp
cli
fcompp
fwait
push
mov
test
lahf
sti
mov
test
cmp
pop
in
shll
hlt
mov
mov
xchg
inc
jecxz
push
pop
mov
pop
jb
xor
cwtl
sub
leave
scas
sub
sbbb
lahf
fmull
sbb
dec
hlt
insb
sar
pop
jecxz
cli
adc
push
adc
lds
mov
jmp
pop
mov
fadds
je
outsb
aas
pop
mov
gs
aaa
rcll
cmpsb
push
jns
stos
mov
push
loop
mov
dec
adc
ja
xor
je
out
sbb
jns
lea
popa
sbb
pop
mov
aas
addr16
popf
into
jb
push
cs
fmull
loop
adc
and
xchg
pushf
in
arpl
push
mov
inc
and
out
loope
test
or
fisubl
ret
out
test
movsl
cmp
sbbl
test
leave
out
cwtl
xor
in
and
adc
jbe
dec
adc
insb
dec
push
loop
mov
fstps
dec
cli
loope
inc
mov
push
sahf
cmp
imul
or
pushf
push
int
aam
cs
cmpl
cli
push
aam
jecxz
or
adc
call
js
out
jmp
cmc
sbb
clc
scas
in
ljmp
push
dec
push
out
cwtl
movsb
aas
xor
inc
ss
mov
sub
shl
and
outsl
mov
pop
dec
cmp
fwait
cs
mov
shl
mul
lods
pop
pusha
cmp
jl
bound
mov
add
xor
pop
data16
into
daa
fstpt
repz
shrl
fptan
cmovbe
add
mov
sbb
or
lea
insb
cmp
cmp
xlat
imul
or
lea
sbb
inc
add
jno
aad
shl
idivb
add
test
mov
mov
ret
xchg
dec
notl
xor
push
lds
pop
dec
test
enter
cmp
pop
cltd
hlt
push
mov
pop
lock
mov
cmp
lret
xchg
mov
int3
in
cmp
or
xchg
pop
mov
push
lret
decl
aam
ret
jl
je
pop
cltd
pop
cmp
sub
js
push
and
jle
pop
sbb
scas
push
pop
cmp
ja
lock
pop
mov
or
imul
lret
xchg
out
lret
pop
pushf
cmp
mov
push
xchg
push
push
cmp
in
cmp
jle
mov
pop
pop
shlb
ss
inc
outsb
faddl
ds
ret
add
push
lret
push
sbb
dec
xchg
and
pop
xchg
cmp
jmp
push
xchg
aad
jle
cmp
xor
std
cmp
mov
pushf
jae
cmp
push
mov
ss
add
cmpsb
xchg
dec
pop
pop
and
stos
lahf
hlt
pop
arpl
jnp
adc
subb
pop
pusha
add
cmp
mov
mull
add
mov
test
movsl
mov
imul
dec
jae
ljmp
mov
fmull
sub
push
stc
scas
aas
add
outsl
test
jno
hlt
popf
sub
or
aad
sbb
sub
lods
sbb
and
mov
mov
cmp
sbb
lods
iret
fistpll
dec
push
mov
cmpps
jnp
leave
pushf
inc
rol
and
je
pop
cli
pop
cld
xchg
dec
jnp
xchg
sub
add
imul
scas
outsb
clc
or
sbb
mov
testb
dec
lcall
dec
push
mov
mov
loopne
mov
cmp
lcall
sub
pop
cmp
inc
jecxz
xchg
inc
mov
dec
push
and
ja
mov
xor
mov
sbb
jae
mov
push
push
push
mov
in
push
hlt
sbb
push
mov
sbb
push
inc
test
add
sbb
jbe
pop
push
dec
sub
fucomp
pop
mov
sahf
cmp
cwtl
cmp
negb
push
subb
pop
into
shrb
sbb
jp
mov
inc
iret
popf
cwtl
dec
xchg
mov
call
out
sbbl
aas
pop
test
cmp
xor
pop
adc
rcrb
jne
jnp
jns
ds
out
xlat
or
xor
sub
sar
dec
mov
cmp
pop
nop
adc
cs
and
inc
fisubrl
push
test
mov
fsub
lods
mov
stos
fadd
add
in
cwtl
inc
leave
adc
ret
es
fdivl
push
outsl
arpl
bound
push
hlt
fcomps
loope
aas
pop
mov
fcmove
lret
lahf
inc
sbb
sub
filds
lea
sub
push
mov
mov
ret
push
pop
pop
jg
int3
bound
sti
lods
mov
mov
mov
jmp
notl
sarb
ss
mov
mov
mov
sub
aad
idiv
mov
mov
pushf
sti
dec
lods
out
inc
fmull
mov
cmp
test
lret
fistpll
push
cli
insb
xor
add
pushf
lret
inc
dec
mov
add
fcompl
ja
jge
test
lods
jp
pop
cs
add
rcrl
movsb
es
mov
and
pop
cmp
pop
repnz
outsl
popa
xor
jle
aaa
fwait
push
add
fstpt
xchg
lahf
fnstsw
lods
mov
orb
xor
sti
mov
cld
inc
ss
pop
jmp
shlb
loop
sbb
xchg
xor
lea
sbb
ljmp
sub
test
aaa
fs
push
ficomps
call
loope
and
insb
in
bound
fdivl
out
pop
in
call
sbb
repz
mov
xor
lcall
int3
jnp
sti
mov
pop
cli
sti
daa
fldenv
addl
jno
inc
pushf
mov
jb
imul
stos
insb
jmp
int3
push
stos
jo
inc
cmp
aas
aam
mov
sub
cli
jo
arpl
in
imul
mov
and
mov
scas
jp
add
mov
mov
stc
data16
push
xchg
cmp
add
clc
pop
mov
fcomi
xlat
into
jp
fwait
ljmp
lret
xchg
jae
xchg
cmp
adc
dec
clc
and
mov
pop
fsubrs
xchg
mov
push
les
cmp
scas
pop
cltd
rorb
mov
or
sarl
cli
mov
enter
pop
shl
cmp
add
gs
movsl
cmp
mov
repnz
and
ds
loope
and
ret
xchg
sbb
mov
in
push
mov
pop
pushf
xchg
mov
and
lods
pusha
lods
sti
scas
mov
pushf
mov
sbb
mov
in
mov
test
and
sbb
out
imul
scas
pushf
scas
pop
sub
test
adc
loopne
into
jno
or
lea
aam
mov
jne
sbb
stos
fdivrs
jnp
xchg
push
sbb
adc
xchg
cmp
sbb
pop
in
int3
imul
stos
fadd
icebp
xchg
sti
sbb
out
mov
shl
cltd
lods
sahf
xchg
adc
in
cltd
mov
clc
pushw
cmpb
sbb
aas
int3
in
out
cld
mov
incl
dec
cmp
ret
cli
imul
mov
shll
pushf
dec
out
cwtl
movsl
clc
clc
sbb
enter
gs
jg
clc
ret
bound
push
adc
sbb
in
int3
xor
mov
mov
loopne
push
sub
sbb
es
insb
outsl
pop
and
sbb
lock
fisttpll
jge
adc
push
leave
cwtl
push
lds
fdivrs
fnstsw
adc
cld
out
push
jle
andl
cmp
test
iret
jmp
jmp
scas
jl
mov
add
inc
stos
jnp
xor
negb
xor
jns
scas
loop
out
sub
push
mov
scas
mov
lahf
xor
sub
mov
adc
inc
push
cwtl
xchg
push
mov
and
call
lock
aas
push
aam
jmp
jbe
popf
cwtl
mov
fdivrs
mov
out
pop
adc
push
int
outsb
lea
aad
adc
mov
cmp
adc
jns
cmp
imul
mov
fbld
mov
test
inc
mov
cmp
sti
int3
aas
adc
ja
and
mov
or
movsb
test
jmp
jl
cmp
mov
dec
cmp
mov
jnp
xchg
fcomps
lock
jge
and
push
fidivl
mov
xlat
fs
lcall
xor
or
mov
insb
daa
cltd
fdivs
and
push
ds
fistl
loope
nop
fs
pop
jle
jne
xchg
stos
or
push
pop
adc
push
negb
sbb
popa
sub
sub
ret
mov
subl
in
aam
pushf
enter
jg
icebp
popl
fcoml
ja
lahf
or
daa
mov
rcrl
mov
hlt
mov
or
cmp
mov
cld
push
cmpsl
loopne
pop
cmp
out
pop
repnz
fldenv
cli
roll
or
call
aam
mov
arpl
lock
shll
dec
inc
jg
mov
cmp
leave
loopne
mov
add
pop
arpl
lcall
lret
adc
mov
ljmp
dec
jle
cmpsb
push
sbb
dec
ljmp
and
subl
int3
inc
stc
fcompl
xchg
int3
iret
inc
pop
repz
xor
jb
cli
sbb
jl
pop
popf
scas
sbb
subb
sub
rcr
arpl
insb
mov
fdivr
cltd
leave
sbb
push
xchg
push
cmp
xchg
dec
adc
pop
iret
lds
mov
sahf
dec
xchg
pop
adc
dec
cwtl
pop
std
rcl
fists
sub
mov
jg
xor
xor
cmp
pop
cmp
into
pop
addb
in
pop
inc
push
fcomps
call
mov
push
push
mov
scas
fwait
sahf
lahf
mov
xchg
shl
pop
cmp
je
fs
ljmp
add
adc
mov
sti
testl
icebp
dec
leave
pop
mov
loope
out
xlat
loopne
mov
jp
fcom
mov
inc
ret
jno
sarb
mov
ds
daa
int3
and
faddp
fwait
lods
fdivs
iret
stc
push
pop
lret
call
mov
leave
pop
or
jmp
push
xchg
inc
daa
sbb
mov
push
jle
xchg
cmpsb
out
jae
mov
jg
mov
sbb
dec
mov
mov
incb
ja
sub
adc
pop
mov
jl
stos
xchg
mov
mov
lds
orl
cld
lea
xlat
test
jl
mov
clc
and
mov
fwait
sarl
or
mov
pop
jne
jl
adcl
jns
inc
movsl
jno
loop
cmp
adc
or
shlb
fwait
scas
mov
loope
jmp
ja
mov
push
push
les
rcll
fnstenv
push
mov
cmpsb
pop
add
fsubs
mov
cmp
cmc
shl
push
andb
pop
pushl
andb
cmp
lods
outsb
inc
jp
sub
imul
repz
sti
enter
push
jge
mov
pop
sub
insl
mov
jg
push
xor
xlat
xchg
lret
adc
dec
add
int3
arpl
mov
lock
sbbl
out
cmp
nop
jbe
inc
fwait
mov
adc
or
add
mov
push
fs
mov
cwtl
repnz
sub
pop
pop
stos
punpckhwd
int3
mov
dec
fadd
jl
and
push
bound
sbb
adc
shrb
cld
cwtl
push
mov
push
cmpsb
lds
fmuls
jmp
sub
mov
mov
pop
scas
mov
andb
into
lahf
dec
push
mov
pushf
fimuls
adc
ffree
pop
jle
push
cmp
cltd
in
mov
cwtl
adc
js
push
push
sbbb
stc
sbb
int
les
icebp
inc
jecxz,pt
push
dec
sbb
popf
dec
push
push
cltd
jnp
push
in
xor
xchg
fsubs
mov
enter
or
cli
daa
mov
in
pop
add
xchg
pop
jnp
test
pop
xchg
out
out
enter
fistpl
jg
mov
stos
inc
call
mul
mov
mov
mov
xchg
shr
xchg
push
ljmp
mov
jno
insb
xorl
popf
repnz
or
rol
fsubrl
sarl
sbb
gs
inc
test
jg
shlb
cmpsl
fldcw
sbb
test
loopne
stc
stc
adc
mov
addb
std
cli
imul
adc
iret
xchg
xchg
jg
repnz
sti
jg
jmp
cmpsl
adc
sub
daa
mov
js
mov
int3
les
aaa
jle
jnp
loopne
sub
mov
fldl
cwtl
pop
adc
loop
jmp
lcall
ficoms
pushf
hlt
cmpsl
daa
mov
cmp
inc
das
lcall
mov
push
cwtl
sti
xchg
mov
fisubs
jnp
fxch
mov
pushf
push
std
enter
jl
decl
testb
fldl
clc
cmpsl
fwait
movl
mov
mov
xchg
jno
jmp
xchg
pop
jno
stos
rorb
out
cmp
and
pushf
daa
icebp
decl
mov
xor
xor
cmp
loop
test
dec
xlat
nop
sbb
push
les
in
adc
lods
scas
xchg
mov
mov
into
cs
or
jp
jl
push
and
xchg
sbb
push
mov
in
pushf
pop
or
imul
jmp
movsb
sbb
xchg
xchg
sub
jl
push
inc
cli
scas
mov
scas
or
mov
cltd
clc
fmuls
shll
sbb
sbb
andb
pop
adc
arpl
jl
mov
mov
loope
jmp
jl
shl
cmc
ljmp
in
fsubrp
pushf
cmp
arpl
out
push
cli
push
dec
mov
pop
out
popa
fsubl
lcall
loop
fistpl
out
fidivrs
pop
pop
incb
lret
sti
outsb
mov
mov
js
xor
adc
xlat
inc
push
iret
push
push
jle
pushf
jge
fists
in
mov
cmp
cwtl
fwait
dec
xchg
jno
mov
fcmovnb
or
xlat
ds
mov
shl
sbb
xorl
push
fisttpl
mov
stos
push
pop
leave
lcall
and
test
in
mov
sbb
sub
shrb
jne
lods
aas
fnstcw
push
scas
int3
mov
cmpl
fdivs
jmp
push
mov
test
sbb
fsubr
rclb
stc
ret
test
or
movsl
jnp
repnz
sbb
test
xor
jno
divl
xchg
dec
in
xchg
cmp
add
imul
leave
mov
sbb
ds
jno
jp
lods
out
iret
sbb
idivl
inc
mov
aaa
inc
mov
jmp
cmp
mov
pop
rorb
lret
lahf
inc
xor
fistl
xchg
fildl
ja
push
scas
mov
ret
aaa
cmp
scas
xor
clc
mul
in
push
mov
cmp
mov
sub
scas
loop
cmp
xchg
mov
pop
std
cwtl
and
jmp
mov
lods
adc
xchg
cwtl
jmp
mov
push
mov
inc
iret
sbb
push
jp
pop
xchg
enter
cld
outsl
cmp
push
mov
inc
mov
jns
cwtl
sbb
sub
xchg
inc
loope
scas
pop
fdivs
arpl
xchg
lret
cld
addl
mov
lahf
cmpsb
sbb
xchg
jmp
cmp
lds
test
loopne
cmpsl
pop
sbb
lods
dec
into
mov
sbb
ljmp
sti
mov
mov
cmp
inc
mov
and
test
adc
shlb
lret
out
mov
sbb
adc
pop
pop
inc
ret
ss
ret
jmp
notb
hlt
sbb
ret
jp
jecxz
fistps
push
sbb
xchg
mov
jecxz
out
cltd
or
cmp
mov
addl
imul
scas
inc
sarb
and
cmpsb
out
fmull
inc
push
rclb
scas
sbb
or
enter
test
jecxz
aad
fldenv
arpl
in
fldcw
sbb
outsl
ret
inc
pop
fsubs
sbb
jle
daa
test
cmpsb
jnp
test
cmp
data16
xor
push
mov
xor
pop
nop
cwtl
or
mov
lret
pushf
scas
fs
xor
arpl
cmp
push
and
mov
icebp
adc
jecxz
push
sbb
pop
sub
in
mov
inc
or
jb
jp,pn
scas
testl
sbb
jnp
mov
cli
push
lds
icebp
adc
mov
scas
ja
jnp
mov
jge
es
cwtl
and
out
mov
xor
test
mov
mov
call
xchg
hlt
fdivl
ret
sub
cmpl
ja
clc
xchg
pop
es
rcrl
ror
mov
mov
or
mov
pop
cwtl
mov
add
mov
lret
and
daa
pop
jle
pushf
fmuls
rcrl
jnp
cmp
fcomps
cmpsb
fs
mov
sbb
cs
xchg
mov
ffree
mov
sti
lods
mov
dec
sbb
mov
sti
fildl
inc
xchg
sarb
les
fwait
outsb
scas
cwtl
mov
mov
and
aas
mov
push
xchg
sub
jg
jmp
pop
arpl
pop
dec
icebp
in
sub
nop
aas
repnz
les
or
and
mov
rcrl
mov
clc
pop
dec
jg
fcompl
shrl
cmpsl
cmpb
mov
sbb
out
stc
mov
push
out
push
jne
js
jo
cmpsb
mov
adc
cwtl
mov
test
cli
je
mov
mov
and
sbb
pop
or
sbb
ljmp
fnsave
push
int3
mov
mov
lods
rcrl
push
pushf
mov
cmp
and
pop
test
lds
jp
jge
mov
hlt
dec
xor
inc
int
aas
incl
orb
sub
int
loop
mov
sbb
mov
push
mov
mov
inc
and
and
xor
mov
and
pop
fdivrs
and
pop
sub
sahf
adc
test
xchg
jg
enter
cwtl
adc
fadd
aaa
fdivrl
cwtl
outsl
mov
mov
lock
dec
jbe
xchg
pushf
or
jp
cmp
jecxz
adc
icebp
xchg
sbbb
mov
mov
cmp
pushf
inc
fadds
sbb
arpl
in
cltd
mov
xor
and
cwtl
inc
xchg
xchg
repnz
out
jmp
mov
scas
ficoml
jl
xor
dec
out
jnp
loop
pop
mov
arpl
repz
imul
xchg
aas
push
push
xchg
jecxz
mov
cmp
sbb
pop
sub
sahf
cmc
int
cmp
pop
mov
cwtl
or
out
sbb
std
aas
sbb
aas
test
mov
dec
cmc
gs
movsb
mov
test
out
lcall
mov
loope
xor
cmpsl
pusha
stc
or
imul
mov
adc
mov
pop
jb
mov
repnz
sbb
test
stos
pop
push
enter
mov
enter
mov
jbe
sbb
stos
jno
shll
pop
stc
adc
fidivrl
inc
push
in
push
cli
shlb
lods
dec
jo
aas
imul
leave
jo
cmp
lea
out
repz
test
js
xchg
ret
xchg
mov
test
or
loopne
lods
mov
mov
fs
iret
adc
sbb
stc
lret
mov
enter
jle
push
lea
push
movl
daa
ljmp
sbb
lods
call
add
jae
or
test
ds
mov
test
fwait
ja
ja
xor
and
aaa
xor
xor
iret
ja
outsl
cmpsl
inc
clc
cmp
cld
inc
jecxz
sub
xor
pop
mov
pusha
mov
lock
rcrb
cmp
push
xchg
fdivrs
arpl
movsb
addr16
mov
push
dec
xor
pop
cmp
fwait
mov
movsb
int3
push
push
sub
mov
data16
mov
bound
pop
call
fstpt
test
mov
aad
mov
aas
lret
movb
out
lock
mov
xchg
jne
xor
mov
jmp
hlt
sbb
insl
mov
xor
mov
fistpl
add
mov
mov
push
xchg
fnstenv
hlt
jns
das
xchg
out
pushf
cmp
loope
mov
sub
sbbb
sbb
jno
rcrl
inc
ja
lret
das
lret
jmp
bound
xor
pop
jns
fmull
cli
xor
daa
std
lock
jo
jmp
in
rolb
mov
ret
jmp
test
mov
mov
movsb
cmp
and
ljmp
mov
mov
cltd
add
and
sti
cs
mov
or
xchg
je
xor
ljmp
out
sbb
mov
add
cmp
and
test
lcall
out
mov
xlat
inc
hlt
pop
xorl
push
mov
jg
and
pushf
xor
les
in
scas
aas
cmpsl
sub
test
or
push
sbb
sub
pop
test
daa
enter
add
jnp
test
add
push
ds
sub
mov
push
push
push
mov
jp
mov
jb
xor
xorb
movsl
or
jo
das
xor
je
pop
imul
inc
adc
or
outsb
addr16
push
out
dec
nop
xor
pop
adc
lret
add
popf
inc
push
pop
test
cltd
pushf
jl
lahf
jno
mov
aas
jb
or
cwtl
lods
int
jge
cmp
cli
xchg
jnp
scas
cltd
dec
mov
xor
ljmp
inc
mov
mov
in
cwtl
repnz
mov
xchg
sahf
popa
mov
pushf
push
stos
lret
pusha
xchg
movsb
push
mov
lods
aas
stc
orb
out
mov
xlat
sbb
sbb
cmp
adc
xchg
lahf
lret
jle
jecxz
cmp
mov
loop
dec
add
pushf
das
pop
shll
fistps
mov
in
mov
lcall
jnp
stc
das
pop
lock
jae
pop
push
pushf
cwtl
dec
xlat
sub
sarl
fwait
pop
xor
jmp
pop
adc
dec
mov
out
jecxz
inc
mov
lcall
imul
inc
es
rcll
loopne
fsubs
inc
sar
mov
nop
or
out
mov
sti
sbb
cwtl
sahf
jl
and
or
sub
mov
push
out
addb
decl
xchg
push
scas
cwtl
sbb
fdivrs
incl
movsl
aad
pop
xchg
enter
testb
xchg
scas
aad
les
addr16
rcl
fs
mov
cli
fsubr
inc
mov
pop
cmpsb
mov
jg
lock
lds
mov
mov
in
out
xchg
cli
lret
sti
inc
mov
mov
push
enter
bnd
fsubrl
outsb
or
mov
add
push
nop
aas
cmp
mov
ja
fsub
pop
jb
out
rclb
scas
cmc
fstl
pop
inc
jmp
roll
test
pop
mov
in
pushf
test
lods
inc
push
mov
aad
outsb
xchg
cwtl
mov
cmp
mov
xchg
xchg
lds
lea
out
jl
or
jle
push
xchg
cli
cwtl
inc
sbb
cmp
addl
pop
and
ss
adc
hlt
push
lods
mov
mov
and
cmpl
pop
xchg
or
sub
pop
xchg
push
pop
mov
cwtl
mov
push
mov
mov
mov
pop
leave
mov
jmp
cmp
pop
cli
int
sub
xchg
jae
aam
jg
mov
sbb
mulb
int
lret
mov
jle
mov
mov
dec
fildll
ret
faddp
push
andl
and
lret
pop
inc
dec
les
jns
inc
push
xchg
icebp
pop
iret
xor
mov
jmp
inc
push
cmpsl
aaa
pop
lods
xchg
int
aam
xchg
mov
or
mov
jmp
fiaddl
sbb
dec
sub
pop
mov
ss
rcr
rorb
push
xchg
mov
aam
jmp
cmp
pop
mov
jo
add
les
pop
xchg
lds
ret
mov
cld
outsb
movsb
out
pop
push
scas
and
cmc
and
aas
fiaddl
outsb
mov
out
fadd
mov
or
mov
in
lahf
cmc
push
jg
popf
in
or
pop
xchg
or
mov
lcall
pop
loope
push
mov
xor
and
mov
jle
fucomp
cmp
inc
mov
int3
loop
cli
sbb
dec
aas
lcall
rcll
push
inc
imul
and
push
loop
and
scas
and
push
mov
idivl
stos
fwait
mov
shl
cwtl
nop
js
sbb
add
and
pusha
or
icebp
nop
mov
jo
mov
xchg
dec
sbb
xchg
xchg
mov
sarl
popa
jno
lds
test
pop
movsb
pop
int3
lods
mov
mov
lea
repz
jbe
jmp
xor
xor
xchg
stc
call
jg
fmull
push
dec
xchg
popa
mov
loopne
cld
add
pusha
mov
data16
pop
mov
aas
in
cmp
cmpsl
sbb
sub
test
xchg
outsb
aas
testb
inc
icebp
xor
push
push
mov
mov
test
xorl
imul
adcl
cld
pop
mov
dec
rcrb
or
mov
mov
cmp
dec
push
cmp
test
mov
sbb
les
in
imul
pushf
mov
xchg
in
test
fcomp
cs
pop
rorb
je
sahf
mov
xor
fadds
mov
mov
xchg
pop
inc
faddl
jl
aad
xchg
out
mov
sbb
push
mov
pop
jmp
in
decl
pushf
in
lahf
cltd
jno
pop
pop
pushf
mov
ret
out
mov
mov
jo
and
jecxz
sbb
test
jg
call
mov
adc
add
scas
cmp
mov
mov
sbbl
pushf
lahf
scas
xor
lcall
movsb
adc
pop
ficompl
loope
sti
mov
cmpsb
jge
out
cwtl
mull
push
int
cmpsb
cmp
mov
or
fmul
jg
imul
pop
push
lcall
cs
push
mov
movsl
pop
out
rcrl
mov
cmp
cmc
xchg
call
sarl
sbb
push
out
jg
sti
dec
ffree
adc
cltd
cltd
or
mov
js
xor
fwait
lods
iret
or
das
jno
jae
in
pop
mov
mov
mov
scas
mov
xchg
dec
xlat
and
mov
xchg
shrb
cmpsl
es
mov
iret
cmp
sbb
xchg
fnstenv
rolb
sbb
mov
pop
adc
mov
sbb
push
nop
dec
dec
out
sbb
push
les
into
mov
cli
dec
ret
data16
pop
mov
push
incl
ret
int
add
fbld
mov
cmp
sub
fadd
stc
xor
add
mov
roll
fcoms
in
mov
test
xor
lret
cwtl
xchg
xchg
sbb
cmpl
sbb
mov
int3
decl
jae
les
test
jg
nop
jno
pop
repz
sbb
inc
jge
aas
iret
pop
jge
push
pop
lea
test
sbb
and
push
cltd
and
dec
aam
test
test
bswap
jo
je
sets
pop
pop
push
and
mov
inc
and
js
xchg
fsubrl
and
xor
sti
es
fnstcw
scas
jg
in
sbb
imulb
mov
dec
push
push
bound
jb
shl
or
andl
jecxz
scas
fildl
aam
mulb
into
xorl
sub
mov
sbb
test
and
push
push
inc
dec
mov
or
pop
repz
push
adc
fsubrl
fistps
push
mov
loop
sbb
inc
mov
xor
mov
and
das
or
push
mov
push
sbb
jmp
mov
adc
pop
jnp
adc
jno
mov
fmul
dec
add
cwtl
mov
sti
lods
popf
mov
cmp
lret
into
xor
xlat
jecxz
mov
adc
sbb
pop
fdivl
cs
mov
pop
outsb
lcall
mov
leave
pop
int3
arpl
add
cli
cs
pop
sbb
fsubs
int3
cli
sbb
loope
leave
mov
jnp
out
enter
adc
sarl
mov
pop
daa
nop
cmp
jg
jbe,pt
movsl
xor
les
pop
cld
addr16
in
ret
pushf
scas
adc
pop
cmp
cs
insb
je
mulb
sti
xor
fldcw
fmull
or
pop
cmpsb
add
push
cmc
push
inc
mov
fdivr
add
cmpsl
pop
ret
cmc
loope
push
mov
mov
jp
xchg
lahf
fcmovnu
pop
push
mov
sbb
and
mov
pop
testb
adc
das
push
cmp
leave
lods
cmp
mov
ss
iret
in
push
mov
jmp
xchg
pop
jge
sbb
daa
inc
jecxz
dec
push
cmp
cmpsl
mov
jp
cmp
xchg
test
push
inc
in
je
sbb
mov
inc
xor
test
jecxz
das
dec
out
int3
and
das
inc
add
mov
outsl
nop
sti
outsb
aas
test
loopne
xchg
mov
push
pop
hlt
and
or
pushf
pop
sub
sbb
in
lea
fmulp
mov
call
jp
aas
pop
js
shll
adc
out
cwtl
adcb
fcoml
push
mov
pop
rcll
cmp
cltd
ret
adc
imul
pop
fsubr
xchg
mov
mov
sti
andb
jne
push
mov
pop
rcll
or
lret
mov
aad
pop
cmpsl
xor
cmpl
xor
pop
mov
roll
cmc
pop
sar
sub
fidivrs
pop
add
push
adc
mov
test
lds
divb
movl
ret
mov
dec
jmp
nop
vpexpandb
ret
bound
push
mov
jle
leave
push
fcoml
orl
clc
mov
cmpsb
mov
in
jecxz
push
jb
sbb
cwtl
dec
movsb
les
ret
adc
sub
in
mov
cmp
add
iret
jp
xchg
addr16
pop
jae
cmp
mov
mov
mov
inc
int3
lods
xchg
xchg
repz
mov
out
pop
shr
pop
in
mov
adc
lods
xlat
xor
jl
xchg
pushf
into
sbb
xchg
fldl2t
test
dec
jp
xlat
mov
mov
cmp
cmp
sbb
cmp
shl
sahf
add
mov
cmp
lock
cs
pop
adc
mov
adc
bound
cmp
and
aas
sbb
xchg
fcomps
mov
and
cmp
fwait
pushfw
subl
pop
in
cmpsb
fdivr
sub
mov
fldcw
pop
jns
pop
mov
rcrl
ficoms
mov
cmp
inc
pop
pop
jns
inc
push
int3
pop
sarl
dec
ljmp
sbb
push
das
push
mov
scas
mov
loope
idiv
inc
mov
outsb
mov
arpl
push
jle
ss
sub
jnp
test
seta
sbb
fldt
cwtl
out
repnz
pushf
sbb
adc
sbb
aad
mov
stc
iret
mov
pop
mov
push
decl
test
test
adc
cltd
xchg
addr16
sbb
movsl
mov
push
and
in
xor
sbb
std
ret
mov
sbbb
out
out
mov
pushf
pop
lods
xchg
aas
xchg
addr16
pop
push
jo
shlb
insb
mov
xchg
nop
out
push
std
xor
push
mov
mov
xlat
and
lret
jnp
in
mov
sbb
lods
pop
jnp
mov
inc
int3
mov
pusha
das
das
incl
int3
in
add
mov
repnz
pop
sbb
mov
pusha
adc
pushf
or
jl
mov
push
lods
xchg
mov
mov
dec
xchg
xchg
fadd
or
loopne
jp
jp
ret
push
xor
rorl
inc
stos
ljmp
jp
adc
cwtl
push
inc
inc
pop
gs
int3
jns
pop
or
fs
push
scas
jnp
mov
inc
test
xchg
mov
enter
cli
pop
repnz
cli
lods
ds
cwtl
jge
dec
incl
jae
sbbb
aaa
mov
xchg
fmuls
mov
in
xor
adc
add
inc
sbb
mov
ret
adc
and
stos
insl
pushf
into
mov
sub
sbb
ffreep
adc
jb
pop
or
cmp
loope
xchg
pop
cmpsl
lods
fisubrs
ja
xchg
subl
cmp
das
inc
daa
pop
pop
mov
imul
cmpl
mov
fstpl
paddd
jg
xor
jle
cmp
and
inc
ja
mov
aas
pusha
ret
mov
inc
mov
push
sbb
lahf
nop
sbb
or
xor
neg
sbbb
insl
mov
adcb
inc
mov
movl
mov
xchg
pop
pop
mov
insb
loope
mov
rolb
pop
clc
fisubrl
jnp
imul
cmp
pop
icebp
popa
orl
fadd
ds
iret
jb
test
stos
sub
jae
movsb
test
in
add
and
or
daa
cwtl
mov
dec
cmp
rcll
bound
push
cmpb
loop
jbe
icebp
dec
mov
cwtl
pop
inc
inc
sbb
mov
sbb
jl
xor
stos
std
fsubs
sub
leave
and
sub
mov
cmp
xor
sbb
pop
iret
fsubrl
add
flds
fcomps
jp
invd
pop
pop
push
pop
hlt
mov
push
dec
fdivrl
stos
adc
sub
cmpsl
pop
mov
sbb
and
aas
cli
lahf
push
xor
mov
test
sub
inc
mov
cli
inc
and
jno
call
push
pop
jp
je
adc
jae
xchg
pop
cmp
pop
cmpsb
or
cmp
lock
dec
ja
popf
sarl
lret
stc
cwtl
cmpsb
outsb
cmp
fdivrl
xchg
imul
push
sbb
mov
je
and
mov
stos
dec
orl
xor
ja
test
icebp
sbb
xchg
pop
push
stos
test
popa
pop
sbb
mov
shl
cmp
aas
dec
sub
iret
test
std
add
inc
mov
fsub
outsl
out
and
lods
testb
sbb
pop
or
mov
dec
shll
arpl
xchg
mov
pop
outsb
clc
aad
cwtl
lret
cmpl
jo
lods
xorl
pop
mov
sbb
inc
leave
outsb
or
lods
sub
sub
in
lods
fwait
repz
ja
or
mov
scas
adc
adc
dec
daa
stos
data16
xchg
in
fmul
iret
and
add
cli
lds
xchg
rcr
movsb
mov
ffree
inc
push
pop
mov
cmpsb
dec
add
xchg
in
sbb
inc
and
and
push
pop
cmp
fisttpll
fstps
test
lods
sbbb
add
mov
fcoms
push
rcrb
hlt
pop
addl
sarl
add
aad
and
mov
hlt
mov
nop
jnp
pushf
push
aam
ja
jns
hlt
cmp
pop
xchg
ret
xor
jae
bound
les
push
jae
arpl
adc
mov
cwtl
fdivrs
dec
ljmp
pop
mov
cli
xchg
pop
dec
iret
sahf
jl
rcll
test
ja
fimull
sbb
mov
movsb
mov
lods
ds
out
xchg
cld
cwtl
push
scas
pop
cmpsl
pop
push
and
fnstsw
mov
fiaddl
fwait
or
in
xchg
pop
cmpsb
ds
outsb
ds
mov
cld
jl
inc
xchg
xor
mov
sub
xor
mov
hlt
adc
or
ds
leave
stc
fmul
xchg
xlat
pusha
aad
mov
rcll
das
data16
enter
int
sub
xchg
push
in
add
cmp
inc
les
es
push
into
aam
inc
call
sbb
imul
jl
jmp
sbb
mov
sub
mov
push
xchg
clc
inc
in
stc
inc
adcl
test
cwtl
sbb
cli
or
cltd
sti
scas
iret
jp
mov
out
pusha
ret
pop
call
fsub
mov
pushf
ss
faddl
orl
mov
xchg
ret
ja
jmp
xchg
aas
push
mov
pop
inc
stc
push
jnp
sbb
loope
xor
sub
leave
pop
cmp
js
or
cmp
enter
mov
test
jp
pop
popl
xchg
pushf
adc
jae
decl
shlb
mov
jmp
cmp
pop
andb
sbb
test
cli
rolb
mov
mov
push
sub
sbb
jnp
ja
sub
imull
cmp
mov
xor
cld
and
cmpsl
fwait
cs
mov
sub
mov
cmp
mov
call
mov
push
lcall
mov
test
inc
cmp
int
sbb
lea
sti
mov
les
push
add
sarl
add
xlat
sbb
cmp
popf
rcrb
shrb
aad
adcb
push
jle
xchg
lods
sarl
cmpsb
popf
xor
pop
pop
add
mov
clc
mov
sbb
jbe
xchg
adc
nop
mov
xchg
mov
test
xchg
sub
jg
inc
fcoms
aaa
push
push
decl
pushf
data16
shrb
fs
js
xlat
add
mov
jp
popf
xchg
pop
arpl
mov
pop
mov
mov
mov
scas
fcomi
add
push
cmp
test
push
mov
xchg
loop
xchg
cmp
jb
push
adc
gs
sarl
mov
mov
in
jl
fwait
aas
shll
mov
adc
add
pop
roll
lock
lods
lods
mov
jle
xor
cs
aam
repz
mov
mov
scas
jl
mov
lcall
aas
clc
sbb
jae
test
rcr
mov
leave
nop
imul
or
xchg
js
xor
out
xor
mov
scas
arpl
notb
testb
xchg
mov
data16
mov
test
or
pusha
movsb
aaa
popa
insb
lock
jb
push
mov
sub
sbb
lret
icebp
mov
pop
and
jnp
xchg
xor
sbb
xchg
into
sbb
inc
inc
sbb
lds
lahf
cmp
popf
dec
dec
jnp
repz
insb
aad
cmp
out
inc
iret
int
in
cwtl
test
mov
mov
cwtl
and
push
mov
hlt
push
popf
out
xchg
mov
add
sub
sub
push
icebp
xchg
jbe
xchg
fsubs
bound
or
loope
sahf
ja
in
inc
dec
pop
fsubrs
jne
insb
sbb
dec
xlat
leave
sub
cmp
jg
shlb
out
into
out
pop
stc
shr
dec
insb
cs
adc
pop
mov
mov
jg
pop
and
push
ds
test
insl
xchg
stos
mov
stc
and
test
xchg
dec
xor
insl
lea
imul
leave
fidivrl
loopne
jnp
sub
xchg
adc
repz
mov
fcompl
daa
sub
cmpb
pop
test
cli
scas
lock
xor
sti
orl
cmpb
es
aas
mov
addl
sbbl
loopne
pop
idivb
push
mov
fwait
add
popa
jg
jo
iret
mov
js
or
loopne
js
daa
outsb
rcrl
jnp
jl
and
pop
xchg
data16
sbb
jge
xor
inc
loopne
inc
pop
sahf
in
stos
je
cs
push
mov
adc
jb
icebp
fists
xchg
pushl
push
fdiv
ret
loopne
sbb
or
fwait
sti
out
sbb
stc
push
addr16
nop
sarb
jp
ret
inc
lahf
insb
jae
xchg
jnp
push
aad
daa
and
mov
std
mov
mov
call
sub
and
pushl
rorb
mov
andb
push
mov
dec
jne
in
push
push
fsubp
push
into
mov
xchg
mov
jo
push
sub
push
and
sbbb
xchg
sti
push
imul
adc
jne
mov
pushf
lcall
mov
cld
lahf
fadds
into
test
inc
add
dec
push
data16
xor
push
ds
xchg
push
jae
popa
aaa
fldl
lods
sbb
fiadds
mov
adc
popa
out
scas
pop
cmp
fcmovnb
fsubs
mov
lds
cmp
sub
arpl
dec
sahf
and
jns
fsts
push
out
stos
xor
and
repnz
lret
into
hlt
fbstp
aas
mov
les
jp
out
xchg
xor
je
mov
sbb
fdivrs
jnp
andb
sbb
push
pop
add
add
lcall
xchg
sbb
incl
shll
or
mov
dec
scas
xchg
mov
jle
dec
push
push
mov
loope
ja
xor
rcll
fsubr
repz
cwtl
cs
popa
movsb
cmc
pop
lods
pop
pop
aam
add
test
add
leave
pop
mov
and
sub
mov
inc
pop
cwtl
cld
clc
clc
inc
cmp
mov
lds
test
repnz
aad
push
pop
and
mov
jg
in
mov
pop
pop
imul
icebp
mov
insb
jg
lret
jg
mov
fs
lods
mov
push
mov
dec
enter
mov
int3
stos
pop
jnp
shll
lahf
stos
bnd
test
adc
ljmp
xor
or
repnz
sub
repz
adc
out
pop
ds
xor
jns
mov
sub
mov
xchg
enter
std
cmp
popl
adcb
lcall
adc
icebp
mov
mov
or
lds
and
xchg
sub
ljmp
scas
fcompl
ret
lods
pop
jnp
test
sbb
stos
lret
jno
mov
mov
popf
pop
jg
jmp
in
xchg
sbb
dec
cli
cmp
lahf
cli
aam
cmpsb
out
mov
mov
push
lods
pop
les
sbb
lcall
mov
jecxz
xchg
loope
push
mov
pop
inc
pop
xchg
adc
ret
mov
shll
dec
sbb
jae
dec
pop
sub
popf
xchg
fwait
adc
xchg
push
cltd
mov
and
mov
push
mov
cmp
mov
mov
out
pushl
add
cmc
fmuls
sbb
pushf
cwtl
popa
mov
andb
push
jmp
fsubrs
daa
fwait
int
sbb
outsl
stos
sbbb
jne
lds
mov
add
fdivs
cld
shll
scas
adc
es
push
and
sub
mov
pop
jo
inc
cmp
sbb
mov
lcall
pop
int3
fst
stc
sahf
mov
outsb
inc
sub
aas
mull
test
dec
cmp
jg
lret
fwait
into
ficoml
sahf
andl
cld
mov
add
add
jle
pushf
test
sub
ds
cmp
pop
dec
push
pop
loopne
dec
mov
sbb
test
jbe
cmp
mov
cmc
mov
jo
es
or
mov
pop
push
mov
loopne
jp
or
xchg
or
test
in
ret
xor
jg
test
int
fdivrl
ud1
or
aas
out
sti
or
pop
ss
data16
mov
sbb
jmp
cwtl
and
mov
ss
sbb
push
push
fisubs
js
xor
sbb
push
mov
lea
dec
dec
sbb
call
mov
into
jl
pushf
jg
ds
mov
pop
out
jg
fisubrl
sets
outsl
out
add
add
mov
call
sti
dec
cmp
adc
xor
fmuls
shrb
jns
sbb
int3
lret
pusha
stos
data16
repz
lods
jmp
sbb
mov
sarl
sbb
xchg
sbb
xchg
jl
test
jb
pop
stc
mov
mov
mov
cs
pop
aam
jmp
mov
data16
cmp
orb
inc
popa
cmp
fwait
sti
out
leave
int3
pop
xor
adc
cmc
push
mov
pushf
lret
sbb
xchg
fwait
push
jno
xchg
cmc
roll
mov
mov
fsubrl
adc
cmpsb
sub
mov
fisttps
and
jae
lcall
ljmp
loope
mov
movsb
es
test
nop
inc
int
leave
leave
pop
jp
sub
sarl
inc
nop
pop
jl
cmp
popf
sbb
sti
jnp
xor
and
add
enter
loope
inc
popa
insl
stos
mov
outsb
aam
ret
and
sbb
repnz
jo
and
cwtl
mov
xor
test
outsb
cmpsb
add
test
jmp
mov
sbb
inc
mov
mov
mov
ja
xchg
aas
fwait
mov
xchg
xor
les
sub
movsl
pmulhuw
fadds
pop
daa
pushf
loopne
mov
aaa
cmp
ret
xor
xor
mov
mov
push
sbb
inc
popf
or
mov
sbb
sub
xchg
fsubrs
xor
pushf
push
cwtl
xor
pop
scas
sbb
cmp
filds
mov
push
mov
mov
neg
push
dec
pop
fwait
mov
mov
mov
mov
xchg
cmpsb
cmpsb
inc
push
jg
fs
or
cmp
in
mov
arpl
and
in
sbb
imul
xlat
jp
sbb
cli
cwtl
or
ljmp
in
pop
into
sbb
in
jp
sbb
mov
and
in
xor
cmp
cmc
xchg
std
push
out
mov
sbb
dec
leave
or
mov
enter
cwtl
pop
add
xchg
sbb
add
jne
cmp
cmpsl
subl
stos
xor
xchg
or
sti
fdivrl
cmp
clc
shll
fsubs
jnp
insb
xchg
gs
mov
push
sarb
xlat
push
mov
prefetch
mov
sbb
pop
xor
or
mov
push
xchg
out
cmp
push
rcrl
fadds
mov
sbb
lods
sbb
movsl
je
rclb
mov
in
mov
xlat
xchg
mov
pop
enter
xchg
xor
push
pop
subb
out
xchg
cwtl
std
xorl
mov
push
sahf
loopne
adc
int3
sbb
inc
fnstsw
and
stos
xor
outsb
pushf
mov
mov
mov
mov
out
loope
test
pushf
sub
push
clc
mov
mov
pop
iret
mov
mov
sub
roll
out
sub
cltd
inc
jl
push
dec
clc
cmp
and
and
cld
arpl
out
mov
jo
test
inc
aas
jle
fmulp
fiaddl
mov
mov
cmpsl
xor
cwtl
aaa
nop
gs
push
out
mov
insb
fistpl
je
js
out
mov
pop
jle
jbe
sahf
dec
stc
pop
int
pop
xor
mov
mov
mov
std
fisubrs
test
sbb
out
mov
es
fdivs
cwtl
mov
xor
call
sbb
mov
mov
fsts
sbb
xorb
cmp
pop
inc
repz
push
stos
imul
cli
testb
sti
xorl
sbb
sbb
mov
pop
icebp
fcoml
aad
fmuls
loop
push
xchg
lea
in
jge
adc
lcall
gs
pop
loopne
outsl
lds
xchg
leave
in
xchg
adc
aaa
cmc
pop
adc
jp
pushf
dec
mov
mov
hlt
add
stos
cmp
dec
xchg
jb
ja
dec
pop
jmp
adc
sarl
xchg
or
push
movsl
sti
pushl
adcb
push
adc
jmp
sti
jl
push
loop
mov
push
pushf
mov
stc
mov
lock
and
into
scas
inc
pop
mov
loope
lret
pop
stc
add
and
arpl
sbb
fldenv
loop
rorb
fistpl
inc
cmpb
jg
mov
mov
fadd
ficoml
mov
cmp
xor
je
dec
fnstcw
adcb
ret
jo
mov
test
pushf
pop
sub
dec
pop
sti
mov
std
shrl
lods
xor
repz
cli
pop
sbb
pusha
in
pop
fimuls
push
stos
jnp
pop
inc
iret
push
add
in
les
aad
sbb
jp
or
jg
arpl
cmpsl
sti
arpl
pop
or
sahf
mov
mov
mov
and
xchg
stos
adc
sarl
imul
pop
mov
pop
outsb
and
fcom
xchg
inc
mov
jecxz
pop
sahf
xor
ljmp
cwtl
add
mov
je
clc
sub
fwait
jnp
adc
stc
outsb
mulb
cmp
mov
adc
cmp
stos
inc
mov
jp
and
cmp
test
lds
adc
cs
stos
adc
jo
outsb
add
mov
inc
pop
int3
cmpb
push
xchg
pushf
lahf
inc
dec
jne
mov
xor
and
jno
into
xor
pop
cld
push
jb
test
xchg
sbb
clc
ds
cmp
rol
sbb
xchg
shll
mov
mov
aas
mov
aam
iret
imul
xchg
test
inc
stos
xor
fwait
ds
cmpsl
movsl
aas
testl
cmp
add
sbb
test
iret
sub
outsl
mov
dec
jecxz
mov
andb
fstp
fmuls
hlt
repnz
pusha
rclb
stos
cmp
std
fdivp
mov
mov
aas
jle
loopne
add
scas
fstpt
sbb
int3
fdiv
pop
pop
gs
or
dec
fsubrl
fmuls
dec
fcoml
adc
in
xchg
push
pop
mov
pop
imul
cmp
test
jns
inc
aas
cltd
sbb
push
ret
mov
adc
mov
or
fmul
mov
jae
stc
pop
sub
out
fsubs
test
xchg
pop
mov
sbb
dec
out
jge
cmp
loop
std
out
inc
popf
pop
and
or
mov
cmp
add
loop
je
mov
jo
xor
mov
divb
xchg
cwtl
jg
incl
adc
subl
jno
outsb
loope
mov
in
mov
sbb
decb
cmp
dec
ret
adc
mov
inc
outsb
pop
sahf
loope
or
or
mov
mov
in
faddl
xchg
push
jmp
lods
and
dec
sbb
adc
dec
outsl
push
movsl
or
loopne
jmp
or
cs
je
outsl
repz
mov
mov
xchg
fcoml
push
cmp
and
xchg
pop
xor
add
ljmp
and
or
test
xchg
xchg
mov
aaa
call
pop
hlt
jo
pushl
stos
aaa
jp
rol
jbe
jno
outsl
push
mov
mov
gs
mov
xchg
dec
jl
in
fsubp
add
xchg
test
orb
imul
bound
xor
aas
fcoms
mov
imull
inc
and
cmp
notb
cmp
mov
xor
xlat
mov
xchg
lahf
sahf
adc
pop
cli
jl
rolb
add
gs
adc
or
mov
mov
mov
call
in
and
loop
sti
sub
push
add
mov
sbbb
lods
jge
xchg
cmp
pusha
dec
cmp
sub
into
jmp
push
lahf
int
rclb
adc
sub
xchg
pushf
test
sar
mov
dec
mov
hlt
enter
xlat
rcrb
nop
sbb
inc
jg
pushf
addr16
xor
push
mov
movsl
pushw
lods
pushf
sbb
mov
inc
fisubl
or
ss
test
fmul
scas
stos
fidivl
inc
push
jae
out
mov
test
xorl
sub
mov
fsubrs
pushf
lret
sbbb
dec
mov
dec
adc
xchg
scas
aas
inc
dec
imul
int3
fsubl
jae
cmpl
aam
sbb
repz
dec
mov
mov
xlat
sub
fsubl
xchg
jp
test
ljmp
xorl
testb
sahf
push
popf
or
mov
jb
scas
test
imul
ja
test
cmp
adc
mov
fldcw
es
fcoms
xchg
pop
sub
cwtl
lahf
rorl
fisubl
sbb
in
mov
sbb
fmuls
xchg
rcl
es
ds
jo
out
je
lret
outsl
mov
ljmp
enter
lea
mov
std
fidivl
fwait
pop
pop
add
jns
sub
pop
mov
call
push
jp
or
lcall
out
and
xchg
sub
imul
insl
outsl
cmp
cltd
cmp
in
mov
jmp
xchg
xchg
insl
push
fstpl
inc
and
test
cmp
mov
mov
scas
mov
fst
aas
clc
xor
xor
sub
sub
aas
cwtl
and
lods
pop
adcb
push
xchg
pushf
aam
cmp
xchg
pop
in
movsb
push
cmp
stos
aas
pop
push
cmp
cmp
mov
xchg
fwait
pusha
mov
or
incl
aas
inc
xchg
mov
lods
fidivrl
scas
sub
push
cmp
out
and
sbb
imul
sub
test
adc
hlt
pop
jmp
iret
ss
lods
test
adc
mov
xor
jae
adc
and
push
cmc
fcomps
out
xor
sub
cld
js
pop
dec
mov
lock
out
clc
fcompl
mov
fdivrp
mov
cmp
dec
fwait
mov
adc
lods
xorl
push
xor
hlt
data16
daa
push
cli
aaa
pop
faddp
fs
adc
push
jmp
test
pop
movd
negl
mov
sub
xchg
out
push
fidivrs
jge
imul
jle
mov
pushf
mov
daa
test
dec
cmpsw
fdivrs
scas
in
orb
jl
popa
mov
out
dec
lea
enter
xor
iret
mov
out
mov
mov
mov
mov
jno
in
pusha
cli
mov
pop
inc
cmpsb
inc
roll
call
icebp
fistl
mov
loope
or
sbb
fdivs
clc
push
testl
jmp
loopne
and
je,pn
movsb
sbb
movsl
mov
mov
inc
mov
push
imul
adc
mov
scas
leave
xchg
shl
add
insl
pop
in
cmovbe
push
dec
adc
mov
push
adc
mov
pop
lcall
dec
mov
cmp
add
xchg
push
cmp
pop
leave
xlat
mov
lret
push
pop
jno,pt
dec
mov
push
leave
xlat
enter
dec
xchg
cwtl
inc
push
mov
xor
xchg
jmp
jg
xor
pop
ret
lahf
mov
xor
xchg
and
jns
pop
mov
ror
mov
cmp
pop
jo
cs
xchg
outsb
mov
adc
push
xchg
cwtl
test
popa
jecxz
ds
mov
mov
xlat
jo
xor
xchg
pop
jmp
inc
mov
lock
mov
mov
mov
orl
sub
addb
rcll
cmp
xchg
push
sbb
lock
insb
push
push
aam
subl
push
lods
fdivr
jno
addb
push
push
or
stos
mov
fiadds
je
xor
lcall
test
add
cmp
mov
cwtl
inc
in
repz
out
cld
gs
cmp
cs
shl
sbb
shll
mov
jb
in
out
mov
adc
call
rol
arpl
orl
dec
adc
icebp
cwtl
add
or
out
std
push
daa
les
mov
pop
loopne
lahf
xchg
sti
in
add
fwait
into
xchg
pusha
enter
aam
arpl
aas
mov
xchg
loope
cli
pop
int3
mov
out
insb
sti
xor
adcb
xchg
add
sbb
pop
push
addr16
xchg
lea
fstps
cwtl
fcoms
sbb
mov
sbb
out
mov
pushf
pop
jp
sbb
hlt
lock
pop
sti
pop
sbb
inc
or
jecxz
add
xor
jg
cmpl
dec
sub
mov
mov
sti
inc
pop
ret
scas
loop
cmc
push
xor
outsb
adc
dec
movsl
pushf
fadds
or
push
pop
test
push
call
cmp
lret
cmpsb
xor
incl
les
push
adc
and
hlt
cmpsl
lcall
dec
and
fwait
sub
adc
or
mov
fldcw
jnp
stc
sahf
scas
out
call
jbe
jns
inc
repnz
pop
sub
iret
call
lcall
shrl
push
loop
fisttpl
sbb
mov
orb
sbbl
cmp
mov
ss
or
cmp
decl
mov
lods
pushf
and
xor
mov
xchg
sbb
dec
cmp
mov
mov
sbb
insl
shlb
dec
daa
or
hlt
mov
fdiv
aas
enter
mov
adc
jo
adc
xor
adc
gs
mov
cmp
jl
shll
iret
stos
dec
jecxz
cmpsl
and
xor
push
lods
jg
jge
testl
sub
push
jne
cmc
lret
movsb
jae
out
ret
xchg
stc
arpl
call
pop
std
cmp
mov
int3
cmp
lret
jp
pop
pop
fwait
jmp
and
fsubl
cmp
inc
cmp
lahf
mov
add
push
outsb
mov
sbb
mov
xchg
scas
ret
pop
cli
and
std
adc
sub
mov
ret
fmul
and
dec
stos
mov
cmp
or
mov
imul
mov
fsub
mov
in
aas
cmp
shll
scas
mov
pusha
in
mov
inc
xchg
jecxz
push
icebp
popf
xchg
pop
in
mov
push
sub
add
out
mov
mov
lods
dec
sahf
cmpsb
or
and
mov
sbb
hlt
scas
movsb
mov
rcl
inc
inc
lcall
pusha
cmp
push
sub
rclb
sbb
fcoms
aas
lahf
jl
push
cmpsb
jg
inc
movsl
sbb
mov
cld
cld
xor
pop
mov
fwait
add
sarb
je
insl
mov
sbb
mov
test
mov
repz
dec
mov
sbb
jecxz
stc
fsubs
js
pushf
xor
cmp
mov
cli
movsl
sub
addb
inc
insl
and
inc
push
adc
test
inc
mov
repnz
xchg
jmp
popf
pop
data16
xor
ljmp
outsl
add
cmp
adc
leave
ret
add
inc
sbb
jb
and
xor
push
mov
sub
aas
cltd
jns
add
jg
fst
sub
add
mov
or
dec
imul
jo
xor
stos
out
popf
fdivrs
aas
paddb
lcall
jl
adcl
inc
icebp
xchg
cmpsb
outsb
clc
sbb
jp
or
imul
popa
data16
movsb
dec
rcl
rclb
lahf
fcoms
aas
push
nop
loopne
fstl
xor
add
pop
xchg
push
mov
jno
test
inc
xor
or
pusha
mov
cwtl
mov
mov
call
xchg
fisttpll
cmp
adc
pop
divl
dec
in
xchg
stos
loope
push
pushf
jns
ss
mov
js
scas
pushf
cmp
inc
mov
jmp
or
fstl
jp
xchg
xor
dec
repnz
mov
push
ret
sub
cli
cmp
push
mov
test
and
sbb
add
ja
cmp
mov
inc
test
mov
mov
jo
cli
cmp
cmp
into
mov
xchg
repz
xlat
popa
cwtl
mov
dec
pop
fsubs
in
pop
rcrl
arpl
xchg
outsl
or
adcl
lods
mov
jl
cmpsb
pop
insl
int3
pop
sbb
adcl
fidivrl
sub
lahf
pop
stos
ja
mov
dec
dec
fwait
hlt
fcomps
les
jle
mov
lea
testl
sahf
pop
cmc
inc
dec
pop
outsl
adc
rclb
out
mov
aaa
js
mov
jmp
sub
loop
pop
imul
fs
cmp
sbb
push
xor
push
pop
sbb
xchg
lcall
mov
inc
stos
cmp
ficompl
sub
mov
xchg
aam
cwtl
push
jnp,pt
loop
lcall
mov
imul
push
adc
and
jo
mov
pusha
and
sbb
enter
add
cltd
push
fwait
push
mov
addr16
xorl
in
pop
cmpb
mov
jne
and
in
lahf
lcall
pushf
dec
loope
icebp
mov
or
sbb
mov
xchg
js
movsb
dec
jbe
popf
mov
sbb
fcompl
insl
lea
int
out
adc
mov
and
mov
in
popf
loope
in
mov
addr16
pop
jb
xor
fcompl
cmpl
lds
adc
xor
xor
out
add
aaa
xchg
or
sbb
push
fs
mov
loope
fstps
cmp
cmp
lods
inc
sub
adc
movsl
loope
mov
fildll
jnp
or
pop
aaa
scas
dec
fsubs
sti
or
mov
cli
outsb
mov
imull
inc
lea
cmp
lods
mov
stos
jbe
fsubr
jmp
test
adc
pop
cs
and
shlb
cli
imul
pop
scas
or
repz
cli
dec
push
mov
jecxz
pop
in
pop
das
adcl
into
test
mov
loope
and
adcb
dec
sub
push
mov
jns
lret
pop
and
cmpsb
mov
sbb
aas
iret
pop
imul
loopne
add
and
push
lret
jae
iret
mov
jl
push
fidivrl
jmp
cltd
adc
dec
xchg
test
jg
sbb
das
imul
push
daa
adc
movsb
inc
out
decl
test
cmp
jb
mov
mov
loope
xchg
inc
sbb
test
out
nop
sahf
push
or
lods
ret
cld
faddl
and
jecxz
ret
cmp
xchg
mov
pusha
into
sub
scas
xchg
leave
sbb
fwait
lret
add
jns
outsb
nop
inc
repnz
rcl
sub
mov
aad
fdivrl
lret
fcoml
push
pop
cmpb
cmc
js
mov
fs
mov
mov
das
jp
sahf
scas
test
xor
lret
dec
inc
push
fistps
inc
mov
repnz
cmpsl
shld
subl
sbb
cltd
push
orb
fstps
iret
mov
jg
test
mov
mov
dec
dec
mov
jp
movsb
pop
inc
and
mov
out
mov
inc
cmpsb
aas
mov
pushf
testb
test
mov
push
subb
or
pop
pop
mov
xchg
jmp
cmp
testb
aam
pop
xlat
addr16
sbb
test
jae,pn
loop
lea
imul
adc
nop
outsl
cmp
fcoms
push
aam
es
rorb
movsl
addr16
gs
outsb
add
mov
cmp
inc
dec
add
stos
out
xchg
je
pop
cmp
sub
lods
leave
lock
lcall
cmpsl
dec
mov
bound
lret
fmull
lret
pop
push
scas
mov
les
cltd
lea
aam
mov
cmpsb
shlb
les
and
adc
cmp
push
cmpsb
or
in
sub
loope
lret
cld
jg
adc
es
xchg
movsb
dec
xlat
or
xor
cmp
imul
adc
daa
dec
jecxz
jbe
movsl
arpl
add
shr
mov
xchg
mov
aam
add
popa
mov
mov
mov
jnp
fwait
xchg
jns
push
cli
mov
leave
daa
je
test
and
add
mov
lods
scas
dec
stc
mov
movsb
jg
dec
mov
cmpsb
pushf
cmp
sbb
cmp
inc
jb
test
hlt
subl
pop
add
out
iret
pop
test
test
push
shrl
ret
pop
cmpb
adc
jns
and
pushf
fcoms
mov
sub
pusha
adc
lea
adc
sub
out
pushf
add
pop
jo
aad
pop
dec
sub
outsl
and
lcall
pop
xchg
in
and
movsl
js
xorl
mov
cmp
xchg
xchg
sub
pop
dec
cmpsb
out
outsl
sub
jle
shl
aam
dec
add
mov
jl
mov
fwait
aaa
dec
mov
mov
pop
and
xor
push
ds
cmp
jmp
sub
dec
subl
fsubs
vunpcklps
fcomps
ret
adc
and
mov
xchg
and
fsubr
jno
inc
push
mov
mov
mov
jle
mov
orb
pop
sahf
jne
push
pushf
adc
pop
pop
sbb
insl
test
xor
xchg
sub
xchg
mov
jl
nop
bound
lods
cmp
iret
sbb
in
loope
sub
or
out
and
sbb
add
mov
lock
jb
push
rorb
push
xchg
mov
pusha
cmp
out
jno
popa
sbb
cmpl
cmpsl
sbb
loope
lret
xor
jb
mov
icebp
inc
xor
ret
repz
lods
mov
es
insl
cmp
cltd
ds
add
out
cli
stc
and
daa
push
push
addr16
mov
mov
clc
je
inc
testl
xchg
ss
iret
imul
jg
jmp
xchg
aad
cwtl
jno
mov
jle
jl
xor
in
mov
pop
push
mov
push
jb
xchg
and
movsb
mov
roll
sbb
push
shll
pop
jmp
ret
xor
cmp
in
sbb
mov
xchg
fcmovnu
in
dec
pop
or
addb
pushf
pop
mov
mov
sti
push
push
push
movsl
mov
add
push
mov
lods
mov
testl
mov
fwait
cmc
in
add
stc
cwtl
rcl
sbb
jp
xlat
cwtl
lcall
inc
sbb
jl
ja
cmp
cmpl
sub
dec
cli
stos
fs
js
dec
jle
cmpl
sbb
mov
jmp
pop
and
pop
adc
xlat
pushf
dec
adc
pop
mov
out
test
insl
sbbl
mov
lds
cwtl
adc
sbb
mov
mov
mov
sarl
fsts
mov
js
push
and
dec
jg,pn
inc
out
pusha
out
test
sbb
jne
xor
dec
add
ret
out
pop
mov
lea
sbb
mov
insl
es
negb
xchg
add
mov
cmp
pop
ds
pushf
fsubrp
or
lret
jb
aas
and
xchg
mov
mov
ds
nop
cmp
sti
adc
movsb
pop
mov
int
cmc
fsubs
cli
stos
pop
fdivl
cbtw
mov
add
aaa
and
pop
lock
jno
out
mov
pop
sbb
dec
pushf
imul
ss
mov
mov
iret
imul
sbb
fdivrs
pusha
sbb
popa
adc
cmp
mov
cmp
and
dec
ljmp
out
mov
mov
sbb
call
cwtl
lods
scas
cmc
sub
call
xchg
mov
cmp
insb
xor
fmul
mov
push
lahf
xor
loopne
cmpsb
dec
sbb
lret
cld
and
pop
ret
jge
cld
mov
shrl
mov
outsl
mov
jo
ljmp
cwtl
movsl
outsl
clc
fwait
cmp
adc
lret
xor
cmp
sahf
lret
iret
gs
xchg
out
jp
dec
or
repnz
push
gs
int3
and
repnz
fistpl
lcall
mov
pop
sub
xor
sti
movsb
push
xchg
pushl
pop
cltd
or
dec
pop
inc
fldl
mov
mov
cld
out
push
lret
jns
aas
sbb
jmp
out
enter
or
xchg
lahf
adc
pushf
push
xor
xor
inc
call
cmp
fadds
mov
push
outsl
stos
mov
cli
outsb
out
add
sbb
mov
jle
mov
test
xchg
mov
test
mov
xchg
mov
dec
mov
jae
sbbb
mov
mov
addb
jmp
iret
stos
scas
aam
out
jne
aaa
je
in
sbb
lcall
mov
jmp
pushf
or
cmp
xchg
fsub
pop
outsb
lds
aaa
push
lahf
cwtl
outsl
cmp
sbb
cmp
or
pushl
mov
mov
adc
mov
mov
mov
pusha
stc
add
xchg
adcb
das
xchg
xchg
adc
fstl
aas
mov
sti
jle
fisubl
mov
cmp
adc
iret
hlt
lods
sbb
push
pop
adc
mov
std
sbb
mov
cmpsb
leave
xchg
data16
pushf
gs
fdivs
jno
push
dec
out
sbb
xchg
xor
mov
sbb
dec
xchg
sbb
fidivrl
sbb
pop
jle
jmp
push
and
jl
idivb
repnz
cwtl
push
cmp
xchg
enter
inc
xchg
jmp
imul
imul
add
xor
inc
mov
jo
add
out
dec
adc
mov
xchg
sbb
dec
mov
pushf
sub
cmp
jae
sti
push
sbb
mov
ds
inc
rep
sub
pushf
cli
mov
arpl
ds
xor
arpl
mov
pop
cli
fstl
out
or
andl
into
das
or
mov
mov
outsb
shl
jl
sti
out
pop
lea
stos
lahf
jbe
cmpsl
loope
cwtl
out
aad
in
cmp
fwait
push
mov
mov
les
inc
lret
std
lods
push
jnp
js
xchg
sti
pop
mov
adc
cmp
sbb
ja
mov
sbb
mov
fs
mov
pop
subl
sub
sti
add
scas
jns
xlat
jg
cld
or
fmul
dec
fstl
fsubrl
xor
dec
pop
idiv
hlt
mov
cwtl
hlt
scas
mov
popa
daa
cmp
mov
hlt
xchg
testl
adcb
fnsave
xchg
pop
or
fsubrs
mov
jnp
jmp
int3
loop
sbb
popa
xor
push
into
lcall
sub
mov
and
xor
mov
jne
mov
cmp
std
fwait
sbb
in
js
xor
stos
imull
fidivs
xor
mov
inc
jle
aad
pushf
cmpl
out
xor
sbb
mov
lds
aam
daa
mov
adc
adc
xchg
push
movsl
mov
outsl
sbb
inc
divb
subb
xlat
mov
aad
call
popa
lds
xchg
mov
inc
in
xchg
push
test
mov
lods
psubd
jl
or
pushf
jmp
dec
stc
mov
les
sub
inc
mov
test
fwait
sbb
jae
lods
popa
je
add
fmull
fsubrl
std
sub
jg
mov
adc
jge
dec
test
arpl
mov
pushf
pop
mov
popf
cmp
inc
in
jle
test
mov
jno
or
sub
ds
das
mov
pushf
jl
xchg
mov
test
pop
inc
cs
lods
jmp
mov
cli
fdivl
cmp
and
mov
push
or
add
lock
mov
xchg
jecxz
jp
jnp
imul
fsts
fwait
insl
mov
pop
pop
push
push
jne
lahf
cs
ds
jnp
fdivp
push
sbb
cmp
mov
js
mov
into
decb
sbb
push
out
shrb
inc
mov
fmull
or
push
cmp
dec
cmpsl
leave
sub
inc
cltd
mov
sbb
push
cmp
sub
rcr
and
testb
decl
repz
sub
sti
ds
stc
popa
cli
jb
ret
sti
out
lds
dec
dec
mov
lods
and
xor
andb
testb
sbb
xchg
imul
stos
mov
pop
and
pushf
out
loopne
sahf
lahf
sub
push
repnz
xor
and
sbb
mov
dec
testb
lock
adc
xor
jl
pop
jae
dec
mov
imulb
mov
mov
cmpsl
lds
adc
mov
cs
in
adc
jg
jmp
ror
subl
mov
adc
pop
mov
cmp
ret
fstpl
adc
mov
sbb
adc
xlat
icebp
leave
inc
stos
cld
out
flds
std
stos
mov
fwait
cmp
mov
pop
or
cmp
loopne
mov
xor
mov
fwait
xchg
dec
mov
or
cmp
lock
inc
je
pop
jg
rol
pop
jge
pop
test
js
lods
subb
push
inc
fcomps
pushf
xchg
fcoms
dec
fsubl
inc
rcll
subb
cli
mov
out
andb
dec
adc
imul
adc
jg
mov
repz
mov
jo
fwait
inc
scas
mov
outsb
ficoml
jge
std
push
mov
and
fidivrs
lahf
jmp
sbb
mov
int3
in
mov
mov
cmp
lods
stos
jnp
inc
cmp
mov
aas
fstl
ljmp
xor
std
cmp
in
sub
pop
test
andl
cmpsl
xchg
ss
mov
cs
jbe
out
push
sub
fwait
scas
mov
jg
sub
mov
jp
aam
xchg
pop
andb
mov
cmpsb
lds
mov
pop
insb
scas
repz
mov
rclb
mov
fdivrl
mov
xchg
mulb
test
aas
sub
inc
pop
std
or
fisubs
aam
xchg
xchg
sub
fsub
sbb
sbb
xor
out
xor
pop
mov
rorl
sub
inc
sbb
mov
cmc
and
cmp
xor
xlat
mov
adc
dec
loopne
cmp
les
xor
inc
jmp
in
sbb
aas
sub
cmp
cmp
rorl
cmp
xchg
sbb
mov
lods
mov
fsub
fs
pop
mov
mov
mov
cmp
popa
cmpsl
fwait
jb,pn
pop
pushf
mov
xchg
sbb
inc
test
mov
lcall
daa
or
mov
dec
push
jno
add
sub
imul
movsl
dec
jmp
mov
jns
pop
movsb
pusha
mov
sub
jb
icebp
inc
fildll
dec
in
je
inc
push
mov
adc
jmp
cs
sti
and
xchg
mov
mov
mov
aad
push
push
leave
mov
stos
jnp
push
xor
xchg
sub
cmc
cmp
into
sbb
cmpsb
scas
push
add
icebp
scas
out
mov
js
gs
out
sub
push
out
add
fcompl
jno
add
jg
daa
sub
add
xchg
cwtl
stos
cmp
mov
push
or
mov
in
lcall
sub
ret
rcll
mov
inc
jns
popf
mov
push
inc
jbe
jno
lret
insb
test
in
movsb
loop
push
mov
xchg
pop
sahf
adc
rcrl
lret
mov
sub
shll
into
adc
or
push
push
sbbl
mov
popl
mov
cmp
filds
mov
and
push
fcompl
cmp
test
pop
leave
outsl
es
dec
mov
fisttpl
mov
flds
mov
js
in
bound
stos
sbb
test
pop
or
ret
and
leave
hlt
negl
mov
and
sbb
rcll
fdivrp
sbb
and
sarb
dec
and
mov
push
add
inc
movsb
movsl
mov
inc
bswap
jmp
popf
adc
fsub
push
popa
mov
cmc
and
sub
mov
mov
rcl
push
add
sbb
loopne
scas
clc
out
out
aas
adc
mov
dec
cmpl
sbb
xor
std
jecxz
data16
xchg
in
cmp
pop
mov
fimuls
or
xor
xchg
jmp
out
aaa
aad
sub
sti
shlb
push
sti
ficoml
inc
shr
push
mov
pop
xchg
rcrb
aad
test
ds
out
sub
mov
loope
sar
mov
jle
sbb
add
sti
or
sbbl
into
pop
test
adc
fnstenv
and
clc
adc
adc
pop
bound
cwtl
jecxz
arpl
dec
notb
adc
cld
push
cmp
mov
loop
cmpb
clc
out
sub
xchg
mov
cs
pop
mov
out
sbbb
push
add
push
xchg
mov
mov
ljmp
sub
test
mov
je
xchg
mov
inc
jae
xor
sub
xchg
push
mul
lahf
dec
sbb
addr16
loopne
push
pop
mov
cmpsb
dec
nop
mov
xchg
sub
imul
xchg
mov
inc
loopne
jge
cmp
mov
test
xor
or
mov
xlat
iret
push
mov
sti
and
sub
pop
in
xchg
xor
adc
into
pushf
into
mov
add
inc
sub
sbb
mov
jne
add
xlat
xchg
sub
cmpsb
jg
outsb
xchg
cmp
mov
jnp
fdivrs
mov
pop
leave
mov
pop
cmp
jg
stos
hlt
outsb
adc
mov
repz
mov
xor
gs
lods
xorl
jmp
dec
pop
add
xchg
xchg
rcrb
push
mov
aaa
fwait
jle
pushf
pop
mov
pop
fs
subb
jo
xchg
mov
xor
mov
xor
add
ds
xor
inc
sub
iret
cmp
mov
jns
cmpb
fsubrl
cmpsl
sub
and
scas
push
loopnew
das
out
add
jge
sbb
frstor
mov
mov
jle
outsl
out
push
push
xor
xchg
loop
lcall
in
fdivrs
int
adc
jmp
lea
xchg
sbb
or
fsub
sub
icebp
jg
cmp
inc
shrb
fs
popf
cmp
sar
xchg
test
pop
jb
mov
test
shrl
pushf
sbb
cli
fsub
jg
mov
push
push
outsl
dec
pop
outsb
int3
dec
pusha
popf
cmp
sti
and
sahf
jae
xchg
pop
loop
adc
mov
data16
stc
js
cmc
add
sbb
mov
fstl
sbb
pushf
lds
adc
out
cmp
push
inc
repnz
mov
jne
pop
lods
fs
add
pop
mov
fcmovnu
gs
aad
loopne
lret
mov
addb
fs
lret
test
mov
pushf
inc
mov
ljmp
cmp
jle
sahf
jne
outsl
mov
lods
cltd
call
insl
loop
mov
loopne
cmp
dec
dec
xchg
add
fcomi
cwtl
cmp
imul
jg
es
cmp
mov
push
push
pop
cltd
jns
insb
and
sbb
mov
pop
lret
push
xorb
mov
xchg
mov
popf
nop
mov
orl
fimull
mov
ficomps
lret
in
movsb
and
test
fdivr
loop
arpl
pop
inc
or
sti
repnz
repz
pop
lret
out
mov
lea
mov
icebp
mov
mov
lret
cmp
or
pop
xchg
nop
pop
mov
push
push
stos
dec
loope
stos
or
xorl
jnp
ss
pop
inc
loopne
sub
sbb
clc
cwtl
dec
andl
pop
xor
aam
inc
adc
aas
cmp
scas
inc
outsl
jle
xchg
cmp
pop
push
push
mov
xchg
adc
popa
xchg
cwtl
out
mov
arpl
and
ret
mov
xchg
std
andb
add
xchg
mov
arpl
sbb
cwtl
xchg
inc
sub
cwtl
sti
aaa
adc
and
inc
mov
sbbb
in
and
sbb
jecxz
lock
dec
jmp
in
cmp
xchg
xchg
out
mov
out
mov
out
fiaddl
sbb
mov
xor
int
jmp
xchg
sbb
out
and
push
stc
pop
iret
pop
mov
xchg
pop
cmpb
cmc
int
imul
lods
sbb
data16
dec
xor
notb
cli
xor
sub
nop
cld
icebp
cltd
fimull
lret
pop
cli
sbb
cld
sub
ss
or
jl
adc
adc
lock
cmp
mov
sbb
mov
lods
pop
mov
adc
call
or
push
mov
pushf
imul
mov
adc
out
scas
xor
add
lods
icebp
inc
cmpsl
jnp
lahf
imul
mov
adc
mov
sbbl
cmp
les
into
loope
cwtl
xchg
push
popf
jp
leave
cli
dec
xor
mov
cmp
dec
call
push
sub
and
xchg
xchg
mov
inc
push
xchg
sub
lahf
les
mov
mov
test
sar
mov
lea
int3
cmp
sbb
mov
mov
xlat
add
xchg
jnp
arpl
cmp
rolb
bound
fiadds
cld
out
xor
jle
dec
movsl
cltd
cwtl
fisubrl
mov
push
pop
cmpsl
jno
sbb
jg
cmp
adc
inc
movsl
inc
std
sub
pop
adc
into
push
pop
icebp
cwtl
sbb
jno
lea
inc
fsubrs
add
and
clc
enter
dec
pop
fwait
xlat
xor
adc
pop
lock
inc
pop
sbb
and
pop
mov
or
arpl
fidivrs
jno
pop
nopl
lret
cmp
aaa
js
sbb
std
jns
xor
jbe
pushf
clc
inc
mov
fidivl
insb
lods
jp
push
mov
push
dec
jl
fld
inc
and
mov
dec
add
clc
adc
pusha
fmuls
aas
fcoms
ja
rcrb
mov
aas
adc
cmp
cltd
ret
ljmp
cmc
icebp
add
cmp
std
scas
mov
stos
mov
and
sbbb
fsubrl
cmp
sub
loopne
sbb
xor
pushf
jns
lds
roll
mov
sbb
pop
sahf
dec
rolb
sbb
popa
adc
subb
pop
pop
jle
push
lret
rorb
daa
loope
dec
xchg
jge
mov
aam
jp
pop
out
ret
je
in
pop
ds
mov
push
test
xchg
jnp
lea
aaa
cwtl
push
jle
fimuls
mov
pushf
or
clc
sub
xor
adc
jmp
pop
push
roll
push
repz
lods
sbb
jns
sub
jg
adc
popf
pop
mov
mov
mov
cmp
lods
das
fsubr
sti
ret
leave
mov
stc
rclb
popa
lret
sbb
mov
inc
push
in
popw
mov
sti
sub
call
rorl
push
jg
fwait
lock
gs
push
je
faddl
adc
mov
pop
imul
in
shll
imulb
cli
mov
mov
or
pop
mov
mov
mov
and
cld
pop
mov
imul
push
sub
jmp
stos
jbe
filds
cli
cmp
jne
xor
ret
push
xchg
mov
add
sub
pop
mov
lods
and
aas
faddl
std
mov
std
cwtl
fbstp
xchg
pushf
lret
xor
lods
mov
stos
jne
movsl
fdivs
aas
mov
sub
sbb
sub
test
pop
mov
mov
jnp
addr16
xor
dec
sbb
jmp
sbb
stos
loopne
mov
repz
sbb
notb
cwtl
xchg
and
lret
ret
std
or
fwait
sahf
pop
jmp
push
pop
mov
pop
insb
sub
pop
jbe
cmp
imul
cld
dec
push
and
cmp
sub
sub
js
cwtl
mov
call
sbb
mov
push
or
cmp
fldenv
nop
scas
mov
cs
lock
scas
scas
test
inc
xor
mov
rcrb
lea
inc
scas
aam
lods
adc
icebp
sbb
insl
loop
cmpsb
cmp
cmp
mov
push
sbb
aaa
lahf
nop
fdivrs
xlat
xor
pusha
cmpb
jle
sub
leave
dec
dec
in
aas
repnz
push
xor
cmpsl
shl
psubq
cmp
fnsave
in
pushf
push
jecxz
dec
arpl
repnz
push
inc
ret
inc
ja
adc
scas
mov
pop
pusha
int
sub
fdivr
loopne
scas
mov
or
mov
mov
dec
idivl
call
lret
nop
mov
mov
pop
mov
loope
cmp
test
pushf
cmc
mov
lock
sti
shrl
and
mov
inc
loope
repz
icebp
mov
and
mov
enter
pop
mov
test
inc
inc
jl
sbb
push
lahf
lods
js
hlt
fimuls
fs
mov
dec
fs
mov
outsl
inc
ficomps
mov
cmp
mov
sub
movsl
jnp
and
fcoms
mov
sbb
mov
fistpl
dec
shlb
jns
andb
outsb
xchg
icebp
push
cmp
repnz
ja
pushf
jns
es
test
mov
dec
or
fcoms
fcmove
jge
mov
jl
addl
jnp
xchg
ljmp
sar
gs
dec
pop
les
xchg
push
loop
cwtl
pop
cmp
movsb
call
cs
int
jb
lcall
push
ds
pop
sbb
enter
cs
jg
add
cltd
repz
jbe
push
enter
mov
lds
pop
and
add
mov
nop
ret
inc
in
adc
movsb
fwait
rcrl
jnp
mov
sub
cmp
jnp
pop
or
rcrb
lcall
data16
mov
test
pop
push
mov
out
sti
ret
pop
add
fistpl
movsl
sbb
out
xor
jb
leave
scas
jmp
sarl
mov
jp
and
loop
inc
dec
jmp
fcomps
and
arpl
or
loop
jae
cmp
cmc
cwtl
mov
add
mov
add
in
addb
xchg
fisttpl
out
cmp
push
jge
clc
scas
and
fmull
mov
shrb
mov
scas
mov
frstor
sti
inc
or
jecxz
add
xor
push
mov
jo
adc
push
daa
and
pop
repnz
dec
xor
sbbl
mov
jp
push
add
popf
inc
std
fadd
daa
jno
pop
inc
push
sub
ds
clc
cmp
xor
pop
mov
arpl
add
mov
ljmp
clc
adc
push
push
dec
dec
mov
cmp
cmpsb
out
mov
movsl
add
cmp
pop
les
cld
fadds
std
int3
xchg
pop
sub
mov
xor
loope
negb
xchg
add
test
xchg
negl
mov
add
gs
sub
pop
jo
in
xchg
and
andl
dec
mov
in
rcrl
xor
or
push
and
shl
mov
fcomps
sti
add
hlt
loop
fcom
mov
xchg
mov
mull
jp
repz
test
inc
cmpsb
sti
outsl
or
mov
aad
jnp
popf
fdivrs
sub
pop
pop
adc
push
mov
loope
sti
xlat
repz
pop
xchg
jg
setno
lds
pop
push
adc
ds
and
in
and
and
mov
sub
cmpsb
pop
fists
frstor
cmc
cmp
adc
fcomp
lcall
mov
stc
jmp
gs
shrl
mov
stc
adc
fistpl
and
push
imul
and
xlat
addl
ja
leave
cmc
int3
jge
std
xchg
sub
sarb
fildl
pop
cmp
pop
jle
push
adc
cmp
mov
inc
cmp
cmpsb
jge
loope
push
mov
push
jle
sub
lcall
fcompl
jmp
jne
scas
jb
mov
mov
test
xor
flds
dec
pop
fcompl
fcmovnbe
sti
ss
inc
lods
adc
or
xor
sti
push
mov
inc
cld
fdivrl
in
or
pushf
sbb
enter
jno
cmpsb
cmp
cli
inc
push
push
pushf
add
loop
test
test
imull
outsb
call
xor
adc
or
lods
fwait
clc
sbb
je
push
jle
lock
mov
testb
lock
frstor
dec
decb
ja
subb
test
fistpll
cmp
cmp
xchg
pop
xor
lock
add
mov
fwait
sub
insl
push
mov
or
pushf
test
imul
imul
mov
mov
xor
mov
push
pop
xor
sahf
aas
adc
in
mov
subb
dec
pop
and
call
pop
mov
xchg
cmc
or
jp
cmp
pop
fwait
test
pushf
cli
sahf
sti
push
call
aas
mov
pop
jo
mov
pop
popa
mov
dec
lods
cwtl
sbb
repz
pop
fstpl
mov
lods
or
pop
arpl
mov
imul
xor
imul
bound
nop
xchg
in
aas
add
mov
jo
mov
sub
jns
pop
xchg
cmp
inc
xor
cmp
fimull
les
fdivrl
adc
lcall
push
test
stos
cmp
cmp
aad
xor
pop
push
out
mov
cld
jle
sub
push
sbb
mov
jge
pushf
sar
ret
sbb
xor
jnp
mov
push
fldl
add
jmp
xchg
dec
sub
xchg
xor
test
cmp
and
pusha
push
sti
aad
pop
or
test
xor
pop
jle
rcrb
inc
push
push
jns
les
dec
sbb
cmp
in
push
ds
add
xchg
ret
jmp
sbb
neg
or
mov
scas
xor
add
cld
aas
cmc
mov
fisttpll
je
or
xchg
or
mov
and
mov
cltd
sbb
mov
fwait
jg
data16
mov
rclb
or
mov
movsb
or
std
add
xor
pop
xchg
neg
stc
fmull
pushf
lods
pushf
adc
cmpsl
dec
xchg
jecxz
je
imul
int3
nop
les
mov
jl
sbb
dec
repnz
mov
push
fsubrl
add
inc
rcrb
mov
jge
push
in
mov
lcall
cmpb
addr16
ss
xchg
mov
pop
xchg
test
outsl
sbb
cs
neg
pop
and
inc
ds
jg
data16
data16
inc
push
sub
pusha
xlat
mov
aaa
cmp
mov
jl
mov
sbb
xor
outsb
sbb
mov
stos
fistpll
push
test
jp
mov
fbstp
mov
ss
cwtl
clc
in
std
dec
sub
xchg
push
xchg
aas
add
pop
dec
cmpsl
ret
mov
fdivrs
mov
out
data16
mov
bound
cmp
test
movb
rolb
mov
popa
mov
pop
fsts
mov
push
das
and
inc
add
mov
out
bound
outsb
nop
stos
add
mov
les
sbb
mov
sub
mov
out
in
fdiv
aaa
xchg
add
fucomi
testb
or
add
push
xor
pop
rorl
cmp
or
lea
scas
sti
scas
loop
cmp
inc
jbe
fdivrl
inc
enter
xor
insb
xor
mov
cmpsb
fstp
fstps
pushf
adc
jne
out
sub
lods
jmp
out
sbb
addr16
lret
inc
lea
or
lock
push
jg
xor
adc
ret
leave
popa
fcmovnb
push
lods
repnz
pop
sbb
aas
pop
jae
xlat
xchg
inc
imul
sbb
arpl
mov
xchg
cmpsb
stos
or
add
cmp
mov
push
scas
lahf
or
out
pop
stos
test
ret
push
push
jg
andb
sbb
cli
loopne
cmp
fsubs
pop
jno
test
jno
mov
push
jo
xchg
xchg
push
nop
pop
pushf
sbb
push
faddl
fs
imul
lea
dec
jle
js
mov
popa
sbb
or
lret
sbb
cmpl
mov
lcall
je
loop
std
lods
mov
push
pushf
scas
fwait
imul
ror
xchg
imul
popf
xor
xchg
cltd
inc
cwtl
fcoml
subl
adc
adc
jns
xchg
dec
adc
aas
mov
fdivrl
adc
fdivrl
stc
jno
stos
ret
inc
lcall
cmp
mov
sti
hlt
lds
mov
stc
inc
jb
loopne
xor
ficoml
pop
call
push
pushf
jmp
or
ja
mov
int3
adc
or
mov
je
and
mov
sbb
xchg
add
push
call
int3
xchg
into
lds
or
xchg
jecxz
push
bound
add
std
sbb
pop
dec
dec
rcll
pop
sti
mov
js
aas
cmp
test
nop
mov
jge
lds
jae
das
mov
dec
imul
ret
sub
jmp
fstps
aas
daa
mov
cmp
add
pop
xchg
cwtl
xchg
test
scas
repz
mov
and
cmc
popl
das
mov
fcomps
inc
ret
mov
aas
push
xchg
mov
shrl
push
sub
movsb
pop
rolb
fwait
mov
cwtl
mov
out
leave
xlat
xchg
insb
xor
fs
hlt
pop
popf
sub
es
out
aam
call
stos
sbbl
cmp
stos
cmp
shrb
cmp
arpl
pop
les
cmp
ret
xor
pop
scas
jecxz
inc
jle
cmp
ljmp
sub
mov
sbb
cltd
sub
popa
ret
push
orb
inc
mov
add
dec
lret
in
sbb
fcomp
out
push
mov
arpl
pop
sahf
stos
mov
in
and
inc
jge
ret
xchg
cwtl
adc
jle
mov
test
inc
mov
push
add
sbbl
imulb
push
lods
xorl
mov
xor
or
xchg
pop
outsw
xchg
les
cmc
call
mov
lcall
mov
scas
shl
js
les
sbb
sti
push
iret
call
jnp
adc
xor
dec
loope
test
fildl
push
hlt
scas
xlat
fdiv
and
test
cmp
enter
push
mov
mov
and
fmull
sbb
ljmp
loop
mov
mov
inc
mov
pop
or
enter
daa
scas
and
fsubl
shll
add
jns
test
adc
mov
xorl
daa
dec
enter
ret
mov
inc
cld
faddl
out
add
sbb
loope
das
fcompl
xchg
jecxz
push
mov
mov
cmp
lret
outsb
xor
cmpsb
jae
bound
and
lret
ja
push
cmp
add
cmp
mov
js
out
icebp
shl
popf
test
adc
rol
cmp
scas
mov
loope
aaa
sbb
jp
pop
xlat
cli
mov
xor
push
sub
inc
jp
cld
lock
add
mov
insb
rclb
hlt
cwtl
test
stc
popa
fmul
sub
loope
push
mov
add
or
jp
pop
sbb
xchg
mov
incl
pushf
adc
nop
cmp
mov
in
call
jns
xor
and
add
movsb
cld
mov
mov
mov
inc
movsl
mov
lret
aas
sub
ret
cwtl
sbb
test
xor
andb
fists
mov
movsb
and
sbb
sahf
fadd
mov
aas
cmpsl
add
mov
cli
jb
jne
out
mov
dec
sub
cmp
pusha
jg
test
dec
mov
outsb
mov
iret
fisttpl
test
pushf
pop
sub
jno
dec
xorl
dec
push
stos
pop
sbb
fs
xchg
cwtl
pop
sti
lea
jl
jl
aam
fwait
adc
loope
pop
mov
lds
in
jns
fidivrl
test
jl
sbb
xchg
add
mov
or
adc
scas
aas
mov
adc
cmpb
test
scas
mov
arpl
ds
ret
test
mov
mov
adc
adc
jnp
xor
out
test
cmp
mov
cltd
mov
jge
ss
daa
xchg
addr16
push
in
les
sbbl
sahf
add
negb
loopne
in
scas
mov
jl
pop
testb
fnstsw
xor
push
inc
dec
ja
mov
pop
lock
sub
dec
icebp
push
inc
push
mov
pop
pop
pushf
pop
nop
push
mov
out
and
rolb
add
nop
cmp
sbb
adc
and
rclb
pop
mov
cs
pushf
sahf
push
popf
rol
dec
dec
mov
pop
mov
lahf
sti
mov
cli
mov
xchg
jb
fadds
inc
mov
decb
pop
push
jle
jl
hlt
jecxz
push
daa
pop
lahf
or
cmpsb
cmc
cmp
sub
sbb
sub
xor
or
jg
es
repnz
or
es
nop
cvtps2pi
xchg
clc
cmpsl
pop
jbe
pop
std
mov
test
push
adc
fmull
add
clc
push
int
hlt
inc
lret
xor
fnstcw
les
push
movsl
sti
pusha
gs
xor
test
adc
and
pop
enter
ljmp
cmpsb
mov
add
pop
addr16
and
jge
sbb
and
mov
jle
fldt
ljmp
jns
cmpl
jge
mov
xchg
pushf
push
clc
sub
mov
xlat
jmp
hlt
push
ljmp
mov
repz
cltd
fcomp
mov
hlt
push
int3
mov
add
and
xchg
and
sub
idivb
lahf
call
sbb
xor
aam
cltd
sbb
adc
xor
jns
jp
cmp
sub
inc
mov
mov
outsb
xchg
push
push
jno
cmp
and
into
mov
cmpb
mov
shlb
cmpsb
cmp
clc
push
pushf
and
negl
test
mov
data16
imul
jmp
mov
in
mov
xchg
mov
ds
or
adc
mov
jb
cmpsb
insl
pop
icebp
jb
inc
cmp
repz
std
fdivs
les
sbb
nop
add
es
fldl
scas
ss
out
mov
mov
insb
adc
mov
mov
jno
pop
test
mov
push
mov
cltd
cmp
shrl
xchg
aad
cmc
xchg
movsl
mov
in
add
mov
cmp
scas
movsl
lret
pop
mov
bound
loop
fcomps
fsubs
cmpsb
mov
dec
sbb
xor
xor
cli
jecxz
rcll
fcomps
lods
jns
aas
daa
pop
fsubrl
in
popf
xchg
mov
mov
mov
push
jae
test
push
mov
mov
aad
shlb
mov
fmuls
mov
sub
je
sub
cmc
sbb
cmp
aas
fdivl
mov
sahf
sti
scas
jbe
insb
in
lea
sbb
add
or
push
cmpsb
lds
lcall
fwait
push
xchg
add
enter
leave
adc
xchg
mov
mov
aaa
xchg
fwait
push
fsts
dec
mov
xlat
int3
cld
popa
sub
xchg
mov
or
mov
sub
pop
jle
iret
mov
sub
pop
lcall
stos
fnstenv
xor
lahf
fdivs
jp
ss
cmp
mov
cltd
fdivl
jg
sbb
dec
push
out
cmpsb
pop
push
mov
xor
fnstenv
xchg
cmp
mov
jne
and
dec
inc
lds
movsb
fstp
lods
pushl
les
inc
aaa
cs
daa
mov
dec
in
cli
cmc
mov
outsl
add
mov
xchg
popa
sbb
sahf
pushf
mov
xchg
dec
push
repnz
push
sti
popa
jmp
clc
movsl
sub
repz
jb
leave
xchg
loopne
loop
test
jno
push
push
jle
aad
popl
pop
xchg
mov
jp
outsb
dec
push
mov
cli
out
test
shlb
sbb
cmpsb
pop
cmp
les
mov
mov
mov
push
cmp
inc
lods
xchg
cwtl
mov
dec
push
cli
cs
movb
push
andl
add
fmul
jge
ss
or
pop
sbb
ds
jbe
jnp
pop
fldpi
lock
aad
test
mov
in
stc
mov
jle
add
les
mov
pop
mov
sbb
jl
mov
ljmp
loop
and
xchg
mov
icebp
lcall
fdivs
lods
mov
and
jle
push
ja
fwait
xchg
pushf
mov
or
aaa
dec
stc
rolb
inc
mov
cmpsl
xor
jbe
js
mov
in
lods
mov
jnp
xchg
xchg
loopne
icebp
mov
sbb
fcmove
loop
dec
and
cld
test
pushf
push
scas
pop
sbb
roll
pop
mov
into
sbb
or
sbb
mov
mov
adc
xor
jmp
mov
pop
and
inc
sbb
inc
int3
fiaddl
pop
xor
mov
imul
test
bound
sbb
cwtl
clc
ret
mov
mov
xor
mov
popf
cld
cmp
pop
into
pop
dec
test
cs
out
xor
xor
sub
jno
daa
inc
or
sbb
jmp
cwtl
adc
mov
frstor
jp
dec
aad
pop
les
and
fisubs
iret
mov
push
cli
enter
cmpsb
lret
and
stos
mov
js
xchg
outsb
jp
cmp
mov
fstps
stos
xor
cmp
aas
loop
pushf
aaa
pop
lret
pop
xchg
add
or
jnp
iret
fsubrs
repnz
movsb
xor
pop
cmpsb
push
cmp
pop
cli
sti
mov
adc
sbb
fsubl
inc
xchg
cmp
xorb
jne
repz
mov
pop
sbb
outsb
cli
nop
imul
lock
cmpsb
mov
popf
cmc
pop
dec
jp
jno
rcr
ret
scas
iret
stc
mov
mov
jae
or
pop
push
adc
jmp
and
dec
adc
and
fmul
cmp
mov
insl
jge
pop
mov
sbb
and
pop
fdiv
mov
mov
pop
inc
stos
pop
cwtl
orl
mov
aam
jg
push
mov
repz
cli
push
mov
aas
mov
popf
mov
cwtl
pop
sahf
or
push
xchg
fcoms
cli
adc
aad
mov
lahf
mov
xlat
mov
or
hlt
out
cmpsl
or
cmp
inc
xchg
pushl
pop
or
inc
dec
mov
lret
pushf
mov
xor
sti
outsb
lods
lock
lahf
mov
popf
bnd
mov
lret
cwtl
out
lcall
out
movsl
cs
mov
iret
mov
enter
aas
insb
std
sbb
mov
jg
jnp
subb
jb
inc
icebp
cwtl
lea
xchg
call
stos
je
sbb
jp
fwait
jl
fcomi
mov
adc
insb
fstpl
loopne
rclb
ret
mov
cmp
lock
insl
jb
mov
mov
out
push
fadd
and
stos
mov
pop
sti
fld
cmp
gs
mov
jae
jecxz
incl
sti
mov
mov
jle
gs
aas
ret
jge
pushf
and
pop
mov
xor
pushf
mov
and
jg
popa
icebp
push
arpl
sti
ja
out
jecxz
ja
xchg
and
mov
sub
fistpl
ljmp
fwait
or
xchg
fisttpl
imul
cld
pop
push
fldenv
xor
and
pop
test
xor
sbb
xchg
cmp
ja
data16
pop
mov
out
jns
test
imul
cld
sbb
into
lret
loopne
sahf
aam
pushf
out
xchg
dec
inc
inc
pushf
fisubl
scas
adc
push
aas
aam
adc
push
jmp
data16
dec
mov
jg
dec
add
lcall
add
test
sti
sub
xor
popf
jnp
sbb
xchg
push
push
in
mov
insb
adc
push
mov
lds
lds
pushf
shrb
jae
jbe
jo
aas
sbb
ficomps
sti
xchg
aas
repz
movsb
movsl
in
sbb
push
pushf
jg
fwait
xor
xchg
push
xchg
nop
or
stc
test
push
hlt
push
lods
cmp
sbb
fwait
sbb
popf
popa
pushf
inc
es
mul
adc
lret
inc
fwait
pop
clc
fwait
negb
or
add
inc
cmp
pop
or
pop
mov
pop
mov
jb
jmp
icebp
cli
push
jns
ret
imul
mov
sbb
pop
cmp
push
cmp
mov
cltd
and
mov
insl
rcrl
and
dec
arpl
dec
lea
pop
aas
and
xchg
sub
or
and
in
or
aas
movl
mov
or
je
rolb
sub
pop
lods
pop
sar
adc
fisubs
jp
in
mov
mov
fsubrl
sbb
loop
ss
dec
add
dec
cwtl
push
xchg
push
movsb
mov
mov
ja
ret
pop
fcoml
lods
pop
push
jle
adc
jns
cmp
cmpsl
dec
imul
xor
aad
xlat
inc
fildll
mov
imul
mov
sbb
pop
pop
movsl
mov
jp
pop
les
adc
aam
xor
jg
fstps
lret
nop
push
ds
push
ds
add
inc
pop
push
imul
dec
jae
mov
cmp
xor
aas
lods
cltd
mov
push
outsl
in
mov
mov
mov
ret
push
jp
push
jmp
repnz
dec
jecxz
lea
pushf
sbbb
mov
jecxz
and
in
add
and
xor
out
lahf
xchg
pop
leave
and
gs
rorl
inc
fsubl
ror
shll
aas
nop
jl
mov
das
adc
fdiv
movsb
adc
pop
mov
pushf
add
int
lock
hlt
pop
xor
sub
and
mov
adc
mov
jns
loop
rorl
test
iret
jl
faddl
cwtl
inc
cli
dec
sbb
lods
loopne
cli
mov
enter
sbb
mov
push
dec
fs
xchg
and
jge
repz
scas
mov
jg
rorb
push
mov
les
inc
jne
mov
cwtl
sbb
test
test
fdivs
sti
shl
stos
mov
mov
leave
cmp
xchg
loopne
dec
cmp
or
and
jne
xchg
mov
daa
mov
fdivr
out
arpl
jbe
fnsave
mov
sahf
mov
lods
rorl
cwtl
cmpb
mov
push
sub
jo
pushf
jno
cmp
mov
jbe
pop
lea
sbb
adc
dec
sub
cmp
mov
insb
inc
out
inc
inc
add
push
addr16
jno
push
sub
cmp
stc
mov
sti
mov
sub
cmpl
fldenv
out
pushf
mov
je
idivl
fcoms
push
sbb
lods
das
incl
mov
cs
inc
mov
icebp
xchg
jp
cmp
pop
ds
xor
mov
pushf
into
aad
popa
jle
mov
add
inc
lods
arpl
out
addr16
pop
xchg
in
dec
push
fsubrs
cli
hlt
pop
sahf
adcb
dec
inc
cmpl
adc
cmp
outsb
cmp
aaa
in
xchg
sbb
adc
mov
cmp
mov
test
jp
pop
inc
mov
sub
xchg
pop
and
rcll
fcom
fs
xor
mov
mov
mov
lahf
and
push
mov
sbb
jl
fsubr
dec
mov
jle
jp
mov
sti
push
in
xor
gs
iret
xchg
sbb
jle
das
loop
and
jns
into
movsb
filds
add
mov
adc
cmp
cwtl
cwtl
push
xchg
mov
push
jns,pt
ret
inc
sbb
mov
mov
shll
xchg
test
mov
out
fcoms
pop
cmp
cmpsb
ja
add
iret
jns
jbe
loope
stos
xchg
hlt
les
mov
cmp
in
ret
and
daa
pop
jp
mov
ja
xchg
outsl
jg
loop
xlat
add
adc
sbb
jg
mov
dec
int3
mov
cmp
mov
dec
clc
fdivs
jbe
les
pop
repz
clc
test
cmp
cmp
aas
in
std
jne
push
mov
xor
cltd
call
jg
mov
mov
jmp
mov
dec
cmp
and
jg
fwait
push
add
shrb
lea
mov
addr16
and
jo
sbb
popf
xor
fdivrl
enter
dec
xchg
rcrl
pushf
mov
dec
mov
imul
iret
lahf
dec
lahf
add
dec
and
cmp
mov
cmp
lods
pop
clc
mov
push
ror
ret
sbbl
test
movsl
hlt
ss
push
mov
adc
pop
scas
push
pop
into
mov
addb
aaa
mov
jl,pt
jmp
scas
stos
add
les
lods
ret
jg
push
pcmpeqd
insb
mov
aas
xor
jmp
test
cwtl
pop
ja
xchg
jbe
xchg
mov
sbb
fmul
lea
sbb
adc
leave
out
outsb
sub
mov
cli
adc
jge
mov
bnd
push
push
cli
push
or
jo
push
lret
aaa
arpl
xchg
pusha
jns
sbb
js
hlt
inc
pop
test
ret
pop
xchg
lods
push
cmpsb
mov
xchg
cs
mov
ljmp
arpl
xor
cmp
stos
iret
mov
leave
aam
pushf
jle
jmp
or
dec
shlb
hlt
movsb
mov
xchg
and
dec
ror
cs
mov
jge
fwait
mov
icebp
je
dec
or
push
jecxz
subl
ss
or
cmc
pop
cwtl
sti
dec
inc
scas
inc
loope
out
jg
mov
clc
stc
shrl
pop
scas
lcall
mov
push
pop
lods
mov
cmp
lret
pop
cmp
dec
fs
popf
sti
scas
pop
add
xor
out
imul
fistl
pop
jb
scas
int3
mov
in
in
fsub
mov
popf
push
movsl
xor
hlt
das
jg
shrb
gs
ja
mov
jae
sti
xor
sbb
jo
mov
cmpsb
and
adc
add
sbb
out
add
lret
or
sbb
repnz
adc
mov
sbb
enter
mov
pop
add
cwtl
enter
adcl
xchg
loop
dec
cmovae
jbe
cmp
jmp
fwait
movsl
sbb
mov
xlat
pop
xchg
repz
adc
jg
jp
dec
push
hlt
mov
pop
sbb
je
pushf
mov
sub
faddl
aas
cmp
and
cmp
inc
cmp
iret
test
loope
mov
iret
mov
movsl
cmp
push
cltd
shrl
cli
pop
pop
js
leave
or
daa
mov
jecxz
and
jecxz
fdivl
les
jmp
xchg
and
hlt
sar
addr16
sbb
gs
lods
mov
mov
cmp
xchg
cwtl
dec
pusha
adc
pop
bound
insb
cmp
sub
gs
sbb
mov
sbb
nop
mov
adc
push
fnstcw
cld
or
push
mov
xchg
mov
dec
cmc
dec
xor
orl
into
cmp
jnp
mov
fidivrs
scas
fwait
mov
push
ds
aad
fcomps
or
pop
jbe
cmp
inc
pop
jae
cmc
jmp
fsubs
push
mov
sbb
mov
stc
lahf
pop
dec
jle
call
or
jo
pop
lret
cld
repnz
pop
mov
call
pop
mov
arpl
and
sti
aas
sbb
outsl
jecxz
mov
aas
pop
inc
fmull
xor
lcall
sbb
push
insb
xchg
stos
aaa
loopne
mov
mov
mov
iret
add
xor
add
lret
call
dec
movsb
cli
sarl
xchg
jns
push
lcall
fcompl
xchg
out
div
stos
cwtl
mov
movsl
hlt
push
in
jnp
fistl
pop
fdivl
jb
test
lret
sub
mov
add
orl
xchg
sbb
lahf
test
pop
movsl
scas
adc
out
jnp
and
imulb
in
fdivs
test
out
or
or
xchg
pop
imulb
aad
fwait
sbb
mov
sar
push
in
jmp
cltd
pushf
ljmp
fsubrl
lret
cmpb
fldt
cmp
aam
inc
xor
push
mov
in
scas
fwait
sbb
push
in
fwait
movsl
xchg
dec
mov
jge
pop
mov
nop
adc
and
pop
mov
mov
notl
cwtl
fcomps
mov
negb
stos
ret
imul
outsb
imul
jb
and
pop
mov
mov
mov
out
jle
push
xchg
mov
mov
cmp
ss
cltd
mov
mov
pop
pop
ror
pop
fnsave
sahf
aas
fwait
adc
mov
sbbb
add
nop
mov
xor
cli
or
ret
sub
push
fnstcw
push
and
add
adc
mov
push
repz
cli
andb
mov
sbb
loope
jge
mov
cld
fucomip
and
imul
xor
repnz
mov
mov
push
ja
ret
fsubrl
sarb
mov
gs
sub
jb
jo
pop
lea
mov
push
push
mov
stos
push
sbb
jmp
pushf
jae
iret
mov
jge
jg
mov
out
scas
jg
and
loop
cli
push
scas
subps
enter
in
mov
mov
je
fdivr
int
lret
mov
or
scas
xor
sub
cmp
cld
stos
scas
sbb
pop
pop
cmpl
mov
push
dec
loop
pop
dec
outsb
sub
outsl
cmp
in
fsubl
sub
popf
mov
fcoms
lret
adc
mov
inc
cltd
cmpsl
ficomps
or
lret
lods
adc
popf
push
stos
test
mov
push
mov
test
pop
lea
push
pushf
aas
mov
push
inc
sarl
pop
test
push
push
dec
sub
jp
outsl
fyl2xp1
ficompl
scas
fldenv
cmp
das
jnp
outsb
cmp
idivl
mov
xchg
inc
cmp
fsubl
push
test
ret
sub
pushf
push
jp
xor
imul
cmp
mov
fadds
arpl
push
andl
mov
lret
pop
jecxz
mov
cmp
clc
add
pop
and
mov
and
mov
stc
sbb
out
out
fbstp
popa
insl
movsb
jp
and
ret
pushf
stos
shll
fsts
popa
enter
addr16
mov
js
add
mov
lods
sbb
push
jns
fcoml
inc
sbb
insl
std
jp
in
fwait
and
js
aas
adc
out
addr16
lods
mov
sti
loopne
into
mov
and
cmp
pop
outsl
les
clc
push
jae
dec
mov
mov
dec
pop
scas
in
pop
jg
cwtl
lods
ret
mov
inc
push
cmpl
xchg
push
pop
or
shlb
push
dec
mov
cltd
enter
add
cmp
insl
jge
scas
aaa
outsl
inc
test
loope
and
movsl
jp
das
out
or
pop
dec
out
fcoms
pop
test
ds
cmpsb
shl
icebp
ja
mov
bndldx
scas
mov
insl
out
sti
stos
sti
data16
xchg
push
lods
fs
jl
push
cmc
or
xchg
imul
mov
mov
std
pop
cmp
pushf
pop
push
sarl
mov
lret
xlat
cmovb
sbb
add
lea
pop
jecxz
and
cmpsb
repz
call
das
xor
lcall
out
and
dec
aaa
ds
fnstsw
jb
test
xor
and
aad
out
dec
fimuls
cmpb
xor
xchg
mov
cmp
aad
loop
insl
sarb
iret
xor
scas
imul
inc
and
jl
pop
shl
mov
pop
inc
mov
xor
mov
mov
sbb
loop
lahf
inc
in
ret
imul
pusha
lods
mov
outsl
clc
pop
jno
pop
lea
mov
sub
pushf
push
les
cmpl
push
cmpsb
sti
ljmp
mov
dec
xor
dec
clc
push
push
jecxz
stos
pop
movsl
cmpsl
fsub
cmpl
aad
aaa
jp
aas
ret
das
not
jl
out
rorb
mov
mov
mov
stos
cmc
mov
or
mov
lds
negb
push
mov
lret
popa
cld
mov
adc
and
cmp
imul
push
xchg
aas
inc
sti
sbb
cmpsl
out
jl
adc
pushf
pop
lds
mov
lret
sub
sub
push
cli
int3
pop
pop
mov
imull
mov
push
cmpsb
push
lret
out
mov
call
ret
push
cmpsl
jbe
adc
mov
test
dec
lahf
jnp
into
sub
and
xor
add
cli
fcom
sbb
or
push
mov
hlt
add
mov
outsb
xchg
xchg
jnp
or
push
pop
xorl
mov
or
sbb
ffreep
es
and
mov
repnz
push
add
fwait
mov
mov
stos
shlb
jmp
pop
pop
popa
push
sbb
pusha
outsl
loope
mov
mov
xor
fcomps
out
mov
inc
subb
xor
test
sar
add
movups
sbb
out
out
fildll
xchg
pop
in
sbb
cmpsl
jg
inc
jg
mov
mov
lret
add
jle
push
in
inc
push
inc
sbb
dec
rcl
pop
ret
pop
jmp
xchg
jmp
scas
test
fldt
cld
cwtl
mov
xchg
cmp
aas
rclb
data16
pushf
in
pop
out
xchg
ret
cmpsl
stc
mov
cltd
rcrl
dec
mov
mov
cmp
pop
shrl
lods
cli
pop
mov
dec
inc
pushf
cld
cwtl
fidivrs
lcall
repz
lods
or
sahf
out
out
push
pop
cmpb
inc
mov
repz
into
cmpsl
iret
pushf
xchg
out
fs
cwtl
cli
int3
xor
int3
inc
cmp
lret
xchg
sbb
mov
jnp
mov
add
fcom
mov
mov
notb
movl
pop
gs
cwtl
movl
sub
cld
das
add
xchg
leave
lret
fcompl
cmpsl
mov
cmp
and
hlt
jo
sbb
sti
nop
xchg
cli
or
inc
sub
mov
xchg
xor
adc
leave
shlb
xchg
push
aas
pop
or
inc
mov
add
out
pop
mov
push
gs
add
bound
push
mov
pop
shlb
cmp
add
mov
mov
andl
mov
xlat
jb
test
pusha
and
xor
xor
es
inc
lret
add
test
xchg
and
cmp
fsts
dec
push
test
cs
mov
fcomps
jg
out
je
sar
or
lcall
daa
cmc
jne
sub
stos
push
mov
aas
mov
ret
dec
push
add
mov
push
sub
sarb
mov
sbb
enter
push
aaa
mov
fimull
mov
xchg
xor
rcr
es
sbb
mov
dec
aam
jg
xor
outsb
popf
int3
jl
cmp
inc
popa
bound
sbb
cmp
imul
mov
add
shlb
mov
cmp
dec
cmp
mov
js
inc
xchg
sub
loope
sarb
dec
sahf
mov
jmp
sbb
mov
sbb
mov
add
pushf
pusha
leave
mov
shlb
aam
mov
inc
pop
imul
stos
imul
sub
and
and
pop
pop
imulb
or
mull
int
lcall
movsb
sbb
int3
rolb
jns
aas
pop
sti
pushf
jnp
and
xchg
jo
xchg
sbb
ret
insb
mov
iret
mul
in
sar
jns
push
sub
dec
fsubr
leave
shrb
mov
mov
or
sbb
test
ds
mov
xchg
sti
outsb
mov
jnp
pop
mov
aaa
aad
loop
pop
inc
mov
in
xlat
mov
cmp
pop
test
int3
inc
aad
imul
jae
cmp
push
pop
es
in
push
movsb
sbbb
cwtl
pop
and
mov
mov
icebp
sahf
test
xor
xchg
jl
and
popf
pop
addr16
push
pop
test
cmp
adc
fwait
popf
push
mov
pushf
sbb
push
pop
mov
pop
scas
leave
sbb
out
cmp
dec
sub
nop
xchg
fists
sbb
adc
stos
fdiv
dec
in
xchg
add
das
insb
cmp
adc
shrl
shll
popf
cmp
idivl
sub
cld
cwtl
fcoms
out
sbb
add
out
insb
and
ja
mov
xchg
dec
sbb
inc
test
fdivrl
and
jle
lods
scas
pop
mov
sbb
sbb
mov
nop
rcll
repz
cwtl
ror
mov
shll
pop
stos
outsl
jo
sbb
jmp
mov
outsb
call
loopne
aam
push
fcmovbe
cli
nop
insb
dec
or
movsb
pop
lods
into
lret
cmp
jb
in
mov
sbb
jnp
dec
test
sbb
sub
je
enter
jg
mov
lcall
aas
addr16
lea
fmuls
mov
mov
ret
in
sub
jg
pop
push
sahf
aaa
adc
xchg
daa
or
loop
int
les
add
fs
lock
mov
aam
enter
xchg
fdivl
or
ret
lret
mov
cmp
ja
sti
jnp
xchg
and
push
mov
orl
ja
and
nop
es
dec
xchg
pop
aad
sub
sbb
test
int3
mov
enter
pop
jo
call
and
sbb
fwait
adc
xchg
sbb
fadds
sbb
jg
pusha
cltd
push
dec
sbb
outsb
movsl
cmp
adc
lcall
adc
sbb
js
mov
hlt
rcrb
mov
icebp
dec
cvtdq2ps
nop
mov
adc
dec
sti
subl
cmp
in
shl
cmpsb
int3
int3
mov
jle
cmp
pop
aad
push
xor
pusha
mov
inc
pop
arpl
das
imul
leave
call
fs
arpl
mov
bound
jnp
adc
in
mov
inc
cmp
inc
iret
mov
iret
inc
push
pop
sti
jne
or
cwtl
out
sbb
test
inc
sbb
mov
jecxz
mov
inc
jno
xchg
fcomps
lea
repz
stos
pop
jno
fs
pmuludq
outsl
dec
popl
inc
dec
dec
insl
xchg
imul
jg
cld
scas
xor
pop
popa
sub
fsub
inc
xchg
push
jo
and
lods
movsl
inc
scas
fsubl
scas
out
in
sbb
push
repz
sub
loope
cmc
push
mov
cwtl
jmp
cmp
mov
mov
xor
mov
push
std
push
adc
pushf
push
push
aad
mov
scas
sbb
sti
out
push
push
push
or
jnp
movsb
dec
pop
xchg
aas
lret
test
push
aad
mov
adc
xchg
rolb
jp
shl
sbb
cwtl
out
cmpsb
push
enter
call
pop
js
jo
push
or
and
mov
sub
push
push
adc
fstpt
inc
scas
mov
pop
arpl
loop
xor
repz
aam
fwait
xchg
sbb
mov
mov
jo
aaa
jecxz
cmpsb
mov
pop
loop
pop
in
je
in
mov
cmp
adc
inc
pop
xchg
fdivrl
pop
lret
subb
pop
jle
mov
dec
lret
mov
sub
in
add
test
xor
movb
mov
cmp
jae
adc
lcall
xchg
shr
pushf
xchg
sub
repnz
out
insb
mov
cltd
fsubs
push
push
push
mov
jl
fsub
mov
add
sti
pop
sbb
sub
lock
push
sbb
mov
sub
add
les
cmpsb
sti
xor
mov
cld
mov
test
jns,pn
mov
adc
adc
cld
push
arpl
mov
jns
faddl
cmp
adc
jg
sub
xor
pop
mov
sub
or
mov
mov
sbb
jno
adc
pushf
nop
xchg
pop
scas
fdiv
mov
ss
jge
xor
aas
nop
and
cmpsl
dec
sub
cwtl
cmp
bound
add
shrd
addl
mov
push
enter
fmull
sbbb
subb
sarb
fistps
jbe
insb
imul
cwtl
ljmp
mov
repnz
jns
xor
lahf
call
icebp
inc
sbb
push
movsl
jmp
push
orb
lock
push
mov
mov
push
mov
decl
sbb
inc
cli
dec
mov
pop
push
fwait
lret
mov
hlt
xchg
scas
cmpsb
inc
xchg
jnp
cwtl
lea
xchg
mov
ljmp
xorb
mov
mov
jecxz
je
test
orl
inc
aaa
fsubr
pop
xor
mov
fwait
loopne
cli
adc
inc
faddp
pop
lds
rcll
lea
int3
mov
outsl
sarl
push
insb
aam
into
lret
xor
ficompl
mov
inc
mov
movsl
dec
pop
insb
mov
push
fmul
or
or
aas
mov
sti
cmpb
mov
sbb
test
xor
sahf
mov
jns
lret
loop
cs
jp
ret
dec
jg
inc
lea
jle
or
lea
jle
outsb
jl
cwtl
pop
jg
sbb
xchg
push
or
jmp
sub
adc
enter
mov
das
ja
mov
jmp
sti
mov
mov
xchg
fsub
dec
xchg
sbbb
cmp
cmp
cld
decl
ss
xchg
pushf
cmp
sbb
mov
sub
inc
mov
sbb
pop
iret
adc
cmp
mov
push
sbb
add
dec
fildll
fs
les
jmp
and
mov
pop
mov
icebp
in
test
stos
ds
es
out
popa
add
pop
and
in
pop
sbb
sbb
in
or
mov
adc
cmpsb
xlat
shl
pop
sbb
push
je
mov
out
sub
add
mov
xchg
sbb
xchg
adc
jno
mov
shl
cmpsb
aaa
fsubrs
cwtl
js
fsubs
stos
lcall
loope
incl
jle
std
xchg
test
test
dec
jns
sub
mov
push
xchg
cmp
out
hlt
inc
jl
pop
mov
sbb
adc
sbb
inc
push
test
or
jl
std
gs
cmp
cmc
inc
pop
cmp
arpl
or
stos
icebp
mov
xor
ficoms
lea
stos
aas
dec
sub
and
pop
adc
xchg
test
mov
mov
jns
daa
in
dec
pop
adc
fs
adc
mov
sub
cmp
sub
test
xchg
imul
lods
out
jg
sahf
sti
push
cmpsb
push
ret
stos
jo
cli
out
jne
cwtl
out
inc
push
pop
and
xchg
int
popf
and
mov
cli
filds
xchg
mov
jg
int
jne
scas
pop
ret
lahf
dec
adc
xchg
cmp
pop
pop
incb
lcall
cmp
aad
mov
je
jnp
mov
inc
push
leave
repz
out
js
ljmp
clc
jbe
xor
fadd
mov
repz
ljmp
clc
and
in
sbb
xchg
push
lea
dec
arpl
inc
sub
sahf
fcomps
xchg
dec
fbstp
ljmp
xor
enter
and
jne
mov
divl
push
cwtl
cmc
xor
negb
cmp
mov
or
imul
mov
or
jmp
cmp
cwtl
inc
rorl
outsb
test
adc
aam
pop
fisttpll
lea
mov
imul
or
mov
push
mov
faddl
aam
in
add
sub
pop
or
cmp
inc
xor
leave
lods
out
sbb
mov
jnp
repz
test
test
fstpt
xchg
xchg
and
mov
test
scas
loope
push
jne
adc
mov
mov
sub
jne
out
std
sub
lea
jge
repnz
in
jns
loopne
push
mov
xchg
push
jo
hlt
cli
dec
xchg
rclb
inc
out
sbb
rcl
mov
fmul
fimull
mov
cmp
jl
call
jne
push
cmp
cwtl
mov
cmp
cltd
sti
mov
cmc
mov
xchg
push
cmp
scas
das
sub
mov
cmpsl
inc
fmull
cli
stos
adc
test
push
outsl
daa
jmp
out
arpl
cmp
xchg
cs
add
mov
mov
sbb
xchg
pop
or
int
shll
roll
out
mov
sar
scas
movsl
sub
sbb
sub
dec
cli
cs
and
adc
and
mov
ljmp
je
enter
mulb
psadbw
mov
out
mov
dec
daa
pusha
das
lret
lcall
dec
stos
fldcw
nop
pop
pushf
popf
mov
cmpsb
and
icebp
and
lods
sti
enter
addr16
pusha
push
in
sbb
aaa
loopne
jo
or
xchg
xorb
sub
in
ficompl
das
pop
ds
mov
mov
out
addr16
faddl
and
inc
sub
pop
mov
mov
pop
ret
arpl
adc
pop
xchg
jg
and
xchg
cmp
int3
cld
lret
shlb
aas
lds
in
and
cmp
and
pop
roll
push
out
repnz
sbb
mov
mov
lret
mov
sub
push
subb
cmpl
inc
mov
inc
pop
pusha
nop
cwtl
jl
mov
fwait
push
fwait
stos
cmp
push
pop
mov
daa
in
sbb
mov
mov
lods
call
sbb
popf
cmp
cmpsl
nop
test
lods
pop
push
stos
dec
sbb
fisubrs
outsb
lahf
cli
loopne
rorl
cmp
push
jecxz
push
leave
cmc
push
fmul
dec
enter
push
ss
cmc
fmull
mov
fwait
into
sbb
mov
push
inc
sub
pop
ficoms
sti
stos
das
dec
fsts
xlat
sbb
pushf
add
cs
cltd
sti
scas
movsb
push
and
xchg
inc
jp
pop
xchg
dec
cli
dec
fcmovnb
jno
stos
out
mov
sbb
leave
push
sbbb
adc
sbb
inc
push
push
test
cmc
loopne
push
test
and
stos
int
push
mov
sbb
outsl
cmp
mov
les
mov
xchg
jns
shrl
nop
xor
adc
lods
iret
sbb
jbe
and
lock
addl
lret
jno
mov
sub
nop
mov
pop
mov
aas
lret
dec
jae
les
loopne
repz
out
push
into
add
loope
aam
jg
aas
scas
jle
negl
cmp
mov
fmuls
xor
ud1
shlb
int3
xchg
out
popf
jl
out
aam
push
cmp
xchg
cmp
mov
popa
test
movq
xchg
enterw
inc
cld
pushf
lahf
cmp
in
add
gs
test
xlat
in
fistpl
jl
bound
shlb
jno
jge
sbb
jbe
dec
pop
jle
addr16
das
into
mov
mov
js
adc
inc
test
outsl
mov
into
inc
cmp
mov
pop
xlat
push
jno
cmpsl
mov
loop
dec
aam
add
xchg
aam
jp
int3
arpl
lds
dec
fsubrl
divl
pushf
lods
cmpsb
and
cmp
movsb
or
out
pop
mov
flds
in
xor
into
jo
or
dec
dec
enter
adc
jmp
cmp
jbe
and
adc
mov
cmc
pop
shrb
push
into
sbb
aam
mov
fistpl
std
popf
cmc
scas
mov
orl
sbb
cli
imul
dec
xchg
nop
jo
pop
fcompl
iret
mov
mov
lods
ret
lret
xchg
pop
sbb
jbe
mov
jp
cwtl
pop
dec
cmp
out
sub
fadds
shl
icebp
sub
clc
inc
jl
in
add
test
idiv
stos
and
dec
push
movl
xchg
rclb
int3
adc
xchg
fsubs
mov
inc
mov
sbb
add
popl
pop
in
fdivr
xor
add
and
lahf
shrb
or
and
in
cwtl
adc
and
mov
pop
add
or
aam
mov
je
outsb
or
adc
lods
call
das
out
mov
mov
sarl
shll
push
or
mov
jle
ret
adc
jnp
sbb
xor
lock
inc
cmp
and
aas
jbe
rcrl
mov
decl
insl
adc
sub
pop
xchg
mov
iret
dec
push
mov
mov
repz
sbb
mov
das
mov
xchg
mov
push
mov
mov
dec
cmp
out
cltd
pop
movsl
popa
adc
pop
daa
cmp
sbb
cmp
gs
out
test
out
pop
and
gs
sbb
dec
pop
dec
mov
dec
xchg
aas
jecxz
test
lods
jg
push
cmp
fisubs
jmp
dec
mov
pop
push
mov
pop
cmp
mov
pop
ret
jo
xchg
xchg
xor
les
insb
test
in
hlt
pop
xchg
into
jg,pn
xchg
lahf
test
xchg
dec
in
xchg
pop
push
lds
addr16
sub
repz
push
adc
xchg
cmp
dec
pop
sbb
jb
addr16
xchg
dec
cwtl
push
psubsw
xchg
mov
mov
and
mov
mov
cmp
out
adc
pop
adc
fsubs
stos
mov
inc
add
pop
clc
sbb
fistpll
fistpl
loopne
xor
pop
outsb
jb
dec
mov
lahf
cmp
mov
push
popa
andl
adc
out
fdivrs
js
pushf
add
sbb
nop
lfs
xchg
enter
jne
test
rcrb
adc
xchg
out
mov
je
add
fiaddl
push
xor
popf
pop
test
or
pusha
xchg
cmp
loop
aad
cmc
aas
out
jge
adc
sbb
or
dec
stc
push
push
mov
push
loope
mov
mov
sbb
fmul
decl
out
sub
dec
fdivrs
adc
adc
ljmp
pop
in
cli
fwait
daa
mov
pop
pop
lock
mov
xchg
sbb
nop
mov
dec
inc
xchg
xchg
dec
pop
in
out
cwtl
stc
int3
cmp
movsb
sbb
jg
mov
jbe
and
mov
fs
xchg
imul
nop
pop
incl
stos
pop
rclb
dec
push
xchg
mov
shr
xor
pop
mov
mov
push
sub
leave
pop
cmpsb
pushf
push
xchg
stos
sti
lds
pop
sbb
pop
es
lret
shrb
add
lcall
das
mov
sbb
cmp
in
lret
dec
xor
sti
and
popa
fwait
lret
test
jp
mov
lock
das
mov
xor
mov
dec
shlb
cmpb
out
fcomps
adc
adc
aad
sbb
push
push
stos
ljmp
lods
cmpsb
adc
mov
ret
add
xchg
out
or
fsubrl
add
jo
mov
jno
pop
mov
xchg
sbb
push
std
dec
ficoml
push
mov
dec
das
xchg
mov
imul
jl
xchg
sbb
das
adc
sbb
mov
out
jns
dec
out
mov
roll
mov
xor
push
clc
dec
mov
cmc
rclb
mov
fld
lret
outsb
xor
mov
sbb
xor
inc
sub
leave
jmp
nop
dec
sub
shr
negb
adc
into
int3
xor
pop
int3
push
mov
aad
mov
int3
and
jp
movsb
add
sbb
test
lods
mov
loope
sbb
xchg
xor
xor
pop
pop
and
mov
pop
push
cmpsl
in
push
xor
mov
jg
out
insl
int3
or
dec
fistpl
lock
xor
out
sbb
jg
lahf
andb
inc
dec
xor
ss
out
push
cld
sub
cmp
jp
and
mov
popa
sub
pop
inc
xlat
push
xor
arpl
mov
movsb
jecxz
sub
cli
pop
adc
or
popf
mov
mov
jle
enter
lock
cmp
pop
sbb
sub
out
sti
mov
push
fistpll
jge
add
mov
cmpl
sub
stos
jg
xchg
dec
or
xchg
sahf
ljmp
sbb
push
jle
roll
mov
cmp
push
mov
mov
and
push
movsb
pop
lret
pop
xchg
add
popf
mov
sahf
xlat
sbb
call
loopne
cmp
adc
scas
or
out
push
rol
repnz
test
pop
adc
mull
cmc
orb
rcr
xchg
outsb
inc
jl
xchg
fimuls
outsb
sbb
dec
sahf
sbb
stc
xor
cmp
sbb
lcall
inc
clc
ss
sti
xchg
xor
cmp
ficompl
out
aas
mov
stos
jmp
push
int
js
push
loope
hlt
jmp
jge
cmp
fwait
pop
and
std
jp
sbb
cmpsl
nop
xlat
pop
lret
push
in
jbe
push
subb
pop
mov
mov
dec
jo
sbb
ret
inc
lea
sub
jp
and
lea
jns
jecxz
dec
test
dec
lahf
sbb
out
dec
pop
sub
and
cmc
fsubs
mov
xchg
xchg
jge
sbb
daa
leave
push
xchg
push
cmp
push
push
sub
add
sbb
rcrb
or
adc
shll
repnz
fisubl
xchg
cltd
fsubrl
hlt
fs
jle
addr16
cmp
in
pop
inc
movsb
pop
dec
imul
jae
xor
in
jbe
jg
adc
out
out
mulps
pop
lret
orl
jle
test
add
cmc
loopne
aas
cwtl
dec
scas
xlat
loopne
adc
enter
popf
insb
ja
add
sub
aas
fistpll
jb
gs
jg
cli
jno
call
jl
dec
lret
jo
fxtract
sub
js
outsb
xchg
fldt
adc
out
lret
insl
mov
jmp
jne
notb
iret
std
mov
mov
mov
mov
loopne
cmc
pop
rclb
or
pop
mov
cli
mov
aas
mov
pushf
pop
push
inc
add
mov
sbb
mov
sbb
xchg
cmpsb
adc
aam
mov
xchg
jl
popa
sbb
pop
and
lock
cmpsb
jnp
xchg
sub
out
jl
jle
mov
mov
sbb
jg
pop
cmp
push
int3
in
mov
mov
pop
imul
dec
pop
popf
cmp
fwait
lret
jl
or
enter
leave
xchg
lret
xchg
xchg
jbe
scas
cwtl
mov
xchg
push
out
movsb
cmpl
push
repz
xor
or
cmp
fs
int3
fsubp
inc
cmp
nop
push
push
subb
bound
sbb
pusha
mov
jae
mov
mov
sbbl
jbe
faddl
imul
sti
stos
movb
divl
mov
outsb
clc
jb
mov
adc
stc
jns
cmp
mov
mov
adc
lods
ljmp
repz
sub
xchg
xchg
pop
push
fsubrl
loope
loope,pn
jg
bswap
lret
xchg
test
inc
inc
test
push
adc
call
lahf
pop
hlt
lea
xchg
add
in
xor
jnp
sub
cltd
mov
imul
lret
aas
data16
cwtl
adcb
cmp
shll
mov
aam
mov
cltd
fsubrs
les
rcrb
aas
adc
sbb
cwtl
pop
push
mov
stos
cmp
dec
mov
mov
dec
insl
pop
ss
call
adc
dec
enter
sbb
mov
sub
out
xor
jmp
adc
mov
orb
mov
loope
jecxz
xchg
sbb
incl
pop
pop
push
pop
sbb
sub
jne
dec
pop
aad
ss
pop
shrl
stos
mov
incl
mov
cwtd
jbe
popf
out
add
fsubrl
jg
mov
ja
cmp
sub
ds
bound
fadd
ror
outsb
pop
outsw
add
jno
pop
and
clc
orl
xchg
xorb
ljmp
fsubs
jb
mov
sub
sbb
adc
lret
xchg
mov
shl
ss
pop
jge
cmp
mov
jmp
popa
jg
pushf
pop
and
sbb
fcompl
pop
jbe
dec
mov
cmc
test
mov
lods
aaa
test
mov
mov
pop
adc
adcl
hlt
pop
adc
mov
or
les
pop
cmp
call
cmp
ds
push
mov
cmp
into
mov
mov
dec
out
pop
out
clc
push
mov
rol
fstpl
sti
dec
fimuls
xchg
xchg
sbb
addr16
test
and
stc
stc
das
sub
pop
cs
scas
ss
mov
sbb
je
jle
mov
push
inc
movsl
je
fcomps
mov
faddp
test
mov
add
pop
xor
xchg
sbb
clc
push
dec
pop
dec
xor
clc
xor
jae
mov
cmp
in
in
sbb
bound
pop
sbb
repnz
mov
enter
push
and
xchg
stos
fdivrl
pop
cmpsb
push
lock
sbb
outsl
push
inc
jecxz
jp
cmp
testl
movsb
adc
inc
adc
and
mov
dec
int3
dec
insl
sbb
sti
out
push
sbb
xor
stc
aad
ret
pusha
jnp
aad
fsubl
xor
cmp
jbe
mov
adc
lcall
or
sbb
cmp
dec
sahf
int
xor
movsb
sti
outsb
mov
pushf
outsl
repnz
jp
cmp
inc
xchg
movsl
push
movzbl
imul
xchg
data16
je
fwait
shlb
mov
test
roll
test
xor
push
popa
aas
insl
rcrl
sub
pushl
mov
js
dec
mov
lahf
or
mov
mov
cwtl
adc
add
cmpsb
pop
cmp
or
pushf
imul
mov
lcall
inc
mov
insb
push
adc
dec
sbb
std
push
outsl
in
stos
jne
pop
jecxz
mov
faddl
jbe
imul
cld
sbb
mov
mov
shll
in
pop
sbb
xchg
sbb
xchg
leave
mov
xchg
cmp
pusha
xor
inc
xchg
inc
std
push
and
xchg
cmpsl
sbb
sbb
cmpsl
imul
mov
jp
inc
ror
or
inc
lods
lahf
pop
cmp
xorl
mov
push
jle
rorl
jl
or
fwait
sbb
cmpsl
or
aad
jno
or
int3
pop
mov
sub
dec
lods
add
xchg
jmp
sub
fdivs
or
fdivl
inc
sub
data16
test
ret
cmp
or
pushf
inc
ss
clc
icebp
popl
xchg
cmp
test
mov
and
ds
loop
pop
sahf
lods
ret
cmp
jecxz
fistpl
repnz
mov
outsb
out
ljmp
test
daa
cwtl
das
shl
andb
shrl
fsubr
and
sub
enter
sbb
pop
push
icebp
movsl
sti
into
pusha
lea
jns
jle
arpl
les
mov
enter
jmp
lahf
cmpsb
mov
xchg
jmp
daa
aas
dec
js
scas
add
pop
clc
inc
mov
pop
out
icebp
add
mov
pushf
push
jb
aas
xor
imul
cld
xchg
in
jg
sbb
ret
adc
test
out
pop
push
mov
xor
scas
cmp
out
popa
into
pop
adc
xchg
in
inc
sbb
adc
xchg
mov
push
sbb
sbb
sbb
sub
cmpsb
jle
imul
or
pushf
sbb
sub
scas
add
pop
aaa
fwait
lea
pop
dec
int3
repnz
sbb
dec
inc
jae
stc
add
and
or
sbb
cmp
enter
add
fsubrl
aaa
mov
sahf
xor
mov
loope
fs
and
jecxz
pop
or
cltd
pop
mov
dec
add
sub
hlt
inc
mov
loop
mov
xor
or
jae
aaa
pop
or
fwait
inc
popf
mov
in
adc
and
fadd
rclb
sbb
cmp
mov
lret
pop
jb
sahf
stos
pop
push
pop
and
ret
sbbl
das
pop
mov
fcoml
js
call
push
jns
push
xor
xchg
mov
xor
cli
test
mov
dec
xchg
mov
test
ljmp
mov
jl
mov
sbbl
jg
sbb
jg
sbb
ret
adc
addl
fiadds
xchg
fldz
loope
sbb
push
lret
jp
jmp
adc
mov
cmp
jae
cmp
stc
stc
xor
daa
fildll
mov
jnp
inc
jo
jl
push
mov
sbb
xchg
xor
xchg
fstps
aas
inc
mov
jo
mov
movsb
xor
shrl
pop
fmulp
pop
cld
mov
packuswb
cmpl
mov
inc
cli
mov
jno
pop
out
mov
sub
leave
mov
adc
dec
sub
test
aad
shl
lods
push
ljmpw
rcrb
add
das
inc
orl
dec
jmp
mov
rorb
incl
arpl
push
pop
dec
dec
lods
repz
xchg
sub
sti
lahf
sbb
fists
bound
mov
movsb
mov
cmp
fstpt
icebp
and
decb
adc
test
push
fwait
pushf
nop
push
inc
lock
add
cld
dec
push
mov
push
mov
pop
rclb
fistl
js
push
testl
dec
clc
mov
lods
pop
mov
adc
ljmp
inc
fsubs
or
orb
scas
jo
mov
mov
jp
xchg
lea
lock
mov
outsl
xor
inc
fsubl
sti
cmp
repz
shrb
scas
dec
pushf
fs
and
jmp
subb
imul
xchg
ds
mov
push
mov
pop
fwait
pop
andb
fimuls
mov
jg
push
les
xchg
test
and
jo
iret
jmp
ljmp
out
sbb
pop
loope
sub
mov
call
fists
mov
pop
sub
mov
and
stos
lret
xchg
gs
fwait
popa
stc
fdivr
xchg
loope
jle
cmc
aas
mov
fs
mov
sub
mov
pop
sbb
pop
out
mov
add
xchg
insb
mov
mov
mov
ja
sbb
popf
pushf
mov
or
bound
sahf
fbld
in
pop
add
call
push
mov
mov
fs
sbb
fdivrl
sbb
shlb
dec
xchg
xchg
int3
pop
lahf
mulb
mov
adc
cmp
loop
fimuls
or
idivb
ljmp
add
stos
pushf
jmp
jg
xor
pop
fisubl
out
jae
pusha
rcr
cmp
lret
pop
adc
testl
clc
test
dec
mov
pop
push
xchg
cwtl
aad
push
addb
jnp
add
or
lds
sub
fwait
xor
fimull
add
cmp
movsl
dec
push
sub
lahf
mov
test
into
and
push
xchg
add
sub
push
jle
stos
ljmp
test
xor
mov
sbb
and
and
pop
pop
xor
dec
cld
int3
or
sbb
lahf
jnp
cmp
sarl
add
push
sbb
out
pop
stc
mov
dec
mov
dec
xchg
fdivl
jnp
aaa
adc
inc
sub
call
aaa
cmp
sub
mov
inc
mov
and
les
jle
add
sub
fs
adc
shll
andb
loope
sbbb
cmpsl
xor
push
mov
mov
into
lcall
mov
cld
flds
pop
test
jmp
pop
add
jb
subl
mov
sbb
inc
std
pushf
xchg
arpl
aas
pop
pusha
iret
shrb
mov
xor
popf
nop
stos
cmp
bound
out
mov
ficoml
filds
fldcw
decb
or
addb
decl
sub
fmulp
pushf
push
dec
mov
xor
mov
dec
lods
and
adc
inc
bound
out
mov
sub
fisubs
xchg
outsb
popa
mov
int3
jl
fs
pop
mov
andb
lret
mov
sbb
dec
xor
hlt
xchg
sti
fcmovb
out
cmc
jmp
pushf
cld
stos
add
mov
pop
ret
aad
sub
loopne
je
push
cli
aas
imul
sti
jno
lahf
cmpsl
imul
mov
insb
xchg
xchg
sbb
push
xchg
pop
inc
xlat
jns
pop
test
jne
aaa
mov
pop
pop
sub
mov
je
mov
adc
adc
sub
ret
dec
fnstcw
scas
xchg
push
lods
cmpsb
stc
nop
sub
jg
outsl
push
aaa
push
pusha
jp
ret
pop
mov
pop
push
xor
dec
fdivrl
cmp
sub
outsb
loope
add
cmpsb
sti
lcall
jg
xchg
mov
cwtl
in
jns
stos
leave
fisubl
roll
hlt
add
lcall
mov
mov
sub
sbb
mov
call
cwtl
pushf
out
cmc
cs
dec
arpl
test
jge
mov
xchg
xchg
and
cmp
add
cmc
pop
out
nop
sti
adc
add
xchg
aas
push
xchg
aaa
ret
adc
mov
imul
mov
mov
enter
ret
sub
add
idivl
inc
mov
and
fmull
scas
cwtl
push
push
in
pop
into
in
mov
mov
pop
and
rcrb
movsl
fistl
aaa
adc
pop
das
inc
lahf
pushf
jmp
adc
sub
dec
ret
sbb
mov
test
sahf
mov
sbb
out
ficomps
cmp
mov
dec
dec
cwtl
jo
sarl
int3
popa
sbb
nop
fsubr
sub
daa
cwtl
push
orb
les
sbb
cmpsb
ret
mov
mov
adc
popa
cs
sub
mov
pop
cmp
mov
push
sbb
pop
adc
push
adc
pop
and
jno
std
loopne
inc
cmp
in
mov
push
xlat
repz
faddl
iret
fdivs
mov
or
sti
sub
cmpsl
add
xor
cmp
pop
fisttpl
hlt
int3
cmp
adc
xchg
pop
outsl
lahf
lret
mov
sbb
cltd
fmuls
xchg
clc
pushf
sbb
mov
scas
les
cltd
inc
adc
push
xor
pop
xchg
adc
jg
divl
dec
inc
lret
fsubrl
jnp
or
push
push
xlat
sbb
pushf
aad
into
xor
or
mov
imul
pop
push
out
push
addr16
dec
mov
mov
push
test
mov
mov
ja
pop
fiaddl
fcoms
andb
ss
adc
in
cmp
adc
in
xchg
rorb
jns
scas
cltd
stos
stos
incl
pop
inc
push
pop
js
inc
mov
dec
pusha
mov
test
pushf
mov
insb
and
int3
int3
movsb
xchg
and
stos
test
cwtl
testb
pushf
cld
inc
sub
lret
enter
sub
lahf
test
mov
mov
push
xchg
cld
sbb
mov
xor
cmp
pop
pop
roll
xchg
into
or
rol
sti
mov
mov
push
lods
lcall
idivb
nop
pop
sbb
push
repz
test
inc
fs
aam
mov
aam
adc
cmpl
inc
sbb
outsb
addr16
and
stos
ss
push
inc
dec
das
shlb
imul
iret
fmulp
cmpsb
mov
jp
push
inc
mov
pushf
arpl
pop
mov
mov
push
pop
adc
dec
mov
sub
int
enter
inc
push
ss
mov
or
fists
mov
lock
data16
test
xchg
mov
xor
inc
sbb
fiadds
test
cli
out
sti
rcrb
and
cmpsb
daa
lcall
pop
sahf
jge
pop
xlat
pop
clc
pop
movsl
ss
dec
push
popa
cli
cld
ss
arpl
mov
leave
addr16
shrb
sbb
ret
xor
imul
push
mov
int3
or
xchg
dec
pop
stos
addr16
push
ret
cmp
mov
push
jmp
movsl
cmp
xlat
mov
addl
popf
cmp
xchg
pop
push
sbb
clc
pop
cli
aas
aad
push
mov
sub
jp
xor
mov
fmul
data16
push
int3
inc
dec
or
xor
cli
dec
pop
pusha
dec
stc
es
xor
add
xor
sub
mov
mov
fcmovbe
push
push
xchg
xlat
jg
inc
outsl
fsubrs
adc
in
pop
mov
inc
fldenv
loope
jmp
movsb
js
nop
jnp
imulb
mov
lods
adc
jmp
cmp
fdivr
pop
insb
dec
and
push
inc
sbb
inc
and
xor
aaa
adc
in
add
je
mov
lds
pop
cmp
ja
inc
stos
jg
mov
cmp
das
cmpsb
cmp
popa
pop
xor
inc
push
pop
or
mov
or
and
jo
xchg
dec
jmp
loopne
shlb
add
rcl
stos
mov
cmp
sub
dec
mov
ds
sarb
ret
loope
aad
mov
sbb
pop
aaa
pop
ret
push
add
pop
jb,pt
outsl
movsb
pop
sbb
xchg
jl
inc
cmp
clc
xor
lods
stos
jg
ja
aas
cltd
in
loopne
sti
adc
ljmp
sarb
add
jecxz
cmpsb
fmul
jmp
inc
outsl
push
mov
fadds
shlb
sbb
cmpb
dec
insl
cld
lock
mov
cmpsl
sbb
mov
orl
mov
adc
jl
lods
or
add
lock
lea
sbb
leave
pop
mov
test
call
jle
pusha
orl
out
mov
fdivs
icebp
adc
push
or
ret
mull
inc
es
lock
jne
mov
cli
pop
fnsave
cmpsb
pop
out
pushf
mov
xchg
push
mov
push
fstp
fdivl
and
inc
cs
popf
pushf
mov
sbb
cmpsl
ja
mov
mov
rcrl
ltr
pushf
dec
mov
call
test
cli
pop
sti
out
xchg
jo
loop
jb
jnp
jp
jle
sarb
pop
jb
lods
ret
scas
loope
hlt
cmp
movups
pop
loopne
clc
aas
loope
int3
cmpsb
pop
jl
xor
subl
adc
out
cli
imul
jp
push
sbbb
in
std
lret
icebp
sub
adc
jecxz
sbb
push
imul
sbb
hlt
inc
rol
cmp
push
mov
dec
jae
push
ficoms
fdiv
lret
into
rcrl
xchg
popf
sub
in
fmulp
mov
sti
adc
das
pop
movsb
jnp
inc
faddp
xchg
mov
cmp
add
push
xor
and
sar
popf
mov
cmp
pop
xchg
inc
mov
adc
stc
pop
fsubl
rolb
mov
sbb
les
test
data16
jb
loopne
lea
movsl
push
sub
sbb
push
jecxz
jmp
hlt
mov
fbstp
xchg
lea
sub
pop
lods
pop
lahf
mov
sbb
or
inc
aaa
push
pop
jnp
movsb
repnz
mov
jecxz
xlat
jp
adc
idivb
push
mov
iret
push
jns
incl
xchg
lods
jbe
mov
cltd
cld
pushf
cmp
pushf
mov
dec
sub
ror
or
jo
xor
inc
push
pop
sbb
jmp
xor
sbb
shll
in
fistpll
cmp
pop
sub
les
jnp
pop
cmp
cli
dec
mov
jge
outsb
xchg
inc
cmpl
mov
adc
adc
sti
scas
fdivl
aaa
push
adc
mov
pop
pop
bound
ror
stos
in
xchg
out
out
jmp
jae
mov
flds
ja
scas
dec
outsb
mov
lock
cmp
lcall
aas
ds
jl
push
in
pop
sbbl
jne
push
mov
adc
xor
mov
cli
lods
jne
sbb
int
mov
xchg
pushf
stos
stos
enter
scas
lods
push
test
addr16
and
xchg
inc
scas
jnp
adc
or
xchg
sti
mov
filds
mov
sahf
cmp
test
jno
push
ds
in
dec
iret
cmpsl
sub
dec
jns
cwtl
divl
outsl
sbb
add
push
pop
stc
aaa
hlt
sbb
and
lock
jl
adc
push
js
add
aad
mov
push
mov
adc
lds
add
add
mov
mov
sbb
pop
jne
fdivl
mov
adc
and
pop
push
lcall
push
dec
sti
dec
mov
cmp
je
ret
sbb
jo
adc
fwait
xchg
stc
scas
sti
in
sbb
or
loope
jno
pop
and
add
popf
decl
pop
lods
fidivs
lea
xlat
sub
jl
cmpsl
enter
clc
ljmp
sbb
jp
mov
adc
xchg
cltd
cmc
pushf
mov
push
adc
rorb
in
sbb
mov
mov
cmc
movsl
insl
movsl
mov
push
aas
cli
hlt
add
jb
pop
stc
mov
ljmp
sarb
scas
xor
test
pop
sbb
cmc
insb
mov
out
cmp
pop
pop
jb
or
repz
and
lods
cmp
push
sub
test
lods
sbb
pop
lcall
jecxz
hlt
push
popf
cwtl
in
mov
adc
testb
mov
loopne
cmp
mov
bound
std
sbb
cmpsb
sbbb
sti
lds
cmp
inc
lcall
sbb
mov
mov
sbb
in
cmp
insb
and
adc
jl
lock
scas
mov
les
sarb
push
mov
into
sbb
pop
add
cmc
aas
lods
sti
movsbl
xlat
jne
es
movsb
call
mov
mov
sahf
fdivs
repnz
loop
and
pop
cld
sub
sbb
lock
and
decb
cmp
and
fisttpl
hlt
flds
xorl
mov
fs
fs
pop
cwtl
mov
lods
movsb
sub
push
or
cwtl
movsb
inc
mov
jb
aaa
jecxz
xor
stc
mov
out
pop
jo
adc
and
movsb
push
lcall
xchg
mov
aad
fsub
test
insb
adcb
dec
cs
pop
rorb
pop
or
cmp
dec
sub
fcoml
ljmp
loop
xchg
into
xorb
pop
ficoms
xor
cmc
les
pop
xlat
ret
fcompl
mov
xchg
pop
mov
rcrl
cld
mov
fisttpl
lcall
mov
int
clc
loopne
cmp
mov
mov
dec
cltd
xlat
add
sti
scas
dec
jmp
cltd
cld
mov
mov
fwait
push
jle
add
lcall
movsb
out
pop
fsubr
lds
scas
js
xor
jle
mov
pop
push
pop
scas
fistpll
sti
enter
arpl
pop
in
lret
add
mov
add
inc
pushf
test
jge
fsubrs
xor
cmp
sbb
js
jg
out
pop
jno
cwtl
shll
push
jl
stos
cmp
add
and
out
scas
ljmp
cmp
imul
or
in
scas
cmp
lock
mov
xor
call
push
notl
pop
test
cwtl
fcomps
stos
stc
mov
mov
push
lretw
dec
sbb
push
adc
ficoms
sbb
xor
in
jo
fs
lret
mov
out
push
jle
jecxz
mov
iret
xchg
mov
mov
daa
cmp
add
sbb
shll
cmc
popf
cwtl
push
dec
mov
sub
lret
sbb
cmp
pop
xor
mov
sbb
leave
pop
scas
cmp
fidivs
sub
mov
fstps
movsb
or
lret
xor
jo
jmp
fcomip
aas
push
jle
push
in
test
pushf
cmpsl
or
mov
add
fs
xor
sbb
sti
sub
dec
jae
xlat
xchg
mov
xchg
stos
pop
dec
sarl
mov
int3
pusha
lret
mov
or
aad
push
xchg
fwait
mov
push
inc
pop
lea
scas
cmpl
pop
xchg
mov
in
push
push
push
lahf
mov
ds
inc
jae
lcall
rcrl
fcoml
frstor
inc
xchg
sub
or
and
add
mov
es
mov
aad
je
rolb
xor
and
pop
and
inc
in
lods
dec
dec
fldenv
cmpl
jae
sbb
pop
das
ret
jmp
fwait
sub
jo
aam
xchg
pop
cmc
sbb
nop
adc
pop
inc
and
popf
pop
sarb
scas
mov
icebp
push
jle
jl
sbb
cltd
xor
or
pop
outsl
cld
test
hlt
insb
add
inc
in
sbb
and
popf
jg
adc
mov
push
ljmp
addr16
scas
mov
clc
pop
mov
pop
lret
inc
loope
xlat
push
mov
mov
call
stos
push
sub
js
jnp
pop
es
out
pop
lahf
lods
jecxz
cli
out
pop
into
mov
jl
test
loope
mov
inc
mov
gs
dec
sbb
fwait
xchg
xor
sbb
mov
int
sahf
add
pushf
mov
jbe
xchg
mov
or
pushf
and
icebp
insb
jg
pop
stos
mov
call
sbb
or
aam
pusha
fmul
ja
jae
insl
ss
mov
lds
in
mov
xor
fnstenv
sbb
lds
int3
adc
dec
call
rolb
jge
push
pop
cmp
ja
xchg
mov
jecxz
mov
stos
out
pop
dec
pop
movsb
testb
mov
out
mov
add
insl
leave
dec
jae
loope
aas
push
scas
mov
fucomi
fsubrl
push
mov
push
aaa
arpl
sti
mov
sbbl
push
sarb
adc
jge
repz
cmp
fcoml
adc
addb
jae
pop
xchg
xor
jl
xchg
lods
mov
test
sbb
stos
sti
ss
fs
lcall
inc
sub
xor
xchg
pop
out
es
push
movsl
aas
rcpps
sbb
sbb
mov
fistps
aas
cli
movb
and
test
sti
jecxz
jmp
sub
cmc
mov
mov
lcall
xor
repnz
and
lcall
ds
lret
push
pushl
jbe
cmc
sbb
aas
inc
cmpsl
pushf
inc
cmp
inc
lods
mov
fists
daa
inc
scas
test
aas
outsl
loop
jge
dec
fsubrl
insl
jl
fcmovnb
negb
sub
sbb
and
inc
mov
shr
push
loop
pop
xor
sbb
lods
cmpl
ds
in
js
cli
das
and
pop
jl
movsl
jecxz
dec
std
fwait
test
mov
fcomp
filds
loopne
div
mov
outsl
outsb
sub
mov
sub
fmul
inc
dec
mov
sbb
and
pusha
cmp
ljmp
lea
out
jecxz
pop
and
mov
mov
mov
jae
mov
push
pushf
clc
repz
or
out
push
mov
inc
and
ret
movsb
pop
sbb
xchg
or
mov
lods
sub
and
clc
aad
mov
dec
js
push
orb
cli
inc
mov
cld
popa
xor
fs
adc
sahf
jge
neg
mov
aad
sbb
inc
sbb
pop
mov
mov
test
shrl
push
lea
adc
and
and
or
cld
out
imul
sub
push
lea
jns
out
sub
mov
std
jl
jmp
ljmp
pushf
mov
jb
subl
fdivs
jmp
faddl
cltd
lds
sub
or
shlb
sbbb
fistpll
adc
cli
dec
nop
lods
mov
push
adc
mov
rorb
jbe
in
adc
pop
ljmp
mov
and
outsl
add
shl
push
in
lock
pop
inc
cmpsb
sti
pop
lods
mov
add
adc
adc
pushf
repnz
shll
or
cmpsb
es
mov
push
jae
xchg
xlat
sub
and
cwtl
hlt
sbb
in
xchg
mov
add
scas
ds
pop
mov
and
xchg
dec
sub
idivl
adc
mov
xor
and
mov
pop
enter
cli
cmpsb
fucomip
lods
push
aas
shrl
mov
cli
mov
or
and
mov
int3
cwtl
sub
push
jl
or
xor
push
cmp
sbb
cmp
mov
call
mov
mov
sbb
dec
sub
cwtl
push
cmpsb
sbb
xor
jmp
fists
push
in
fbstp
frstor
mov
jo
pop
decl
insl
fidivl
dec
pushf
pop
cmp
sbb
push
sti
sarb
xchg
je
clc
push
shrb
dec
sub
repnz
push
jle
enter
jno
mov
int3
out
or
adc
fnstenv
xchg
sti
mov
scas
jno
lret
sub
div
call
inc
pop
sahf
gs
cli
jl
add
fwait
cmpsb
mov
call
mov
lcall
je
sbb
jo
push
inc
mov
xchg
mov
mov
add
jns
div
pushf
mov
add
push
mov
and
fsubl
jae
cmpsl
in
ret
lds
sti
mov
out
stos
lret
insl
inc
pop
mov
shrl
mov
data16
sbb
mov
dec
and
cwtl
mov
imulb
cmp
push
inc
jno
cmp
cwtl
sti
in
loop
adc
test
mov
inc
xor
cwtl
adc
sti
enter
out
adc
adc
inc
lahf
sti
sub
mov
jae
pop
jle
cmp
in
and
ja
push
js
mov
jl
sbb
xchg
in
inc
fsub
subl
mov
stc
push
mov
push
push
mov
mov
cmpsl
ja
test
cld
cmp
adc
jno
mov
push
add
sub
pop
ficompl
pop
shrb
xchg
fimuls
imulb
push
pop
out
pop
movsl
mov
adc
cwtl
sub
fwait
mov
push
in
push
pop
sub
mov
mov
pop
inc
faddp
xchg
popl
dec
jp
lods
pop
mov
push
mov
pushf
mov
sbb
mov
js
sub
subb
jo
pop
cmpsl
mov
add
or
pop
add
xchg
leave
ds
ror
push
out
stc
xlat
pop
pop
test
fcmovb
sti
jae
movsl
cli
clc
cmp
sti
mov
push
nop
adc
je
pusha
pop
bound
xchg
jg
jnp
mov
pop
js
les
mov
sarb
out
mov
xchg
sahf
repnz
pop
fld
mov
ficoms
scas
push
push
push
push
mov
fs
rcrl
pusha
ret
push
lock
pushf
sbb
int3
je
pushf
xchg
xor
jb
jo
mov
dec
lock
movsb
jnp
cli
nop
xor
xor
lahf
inc
jo
sahf
cwtl
ljmp
adc
rclb
dec
mov
and
dec
cmpsl
jo
cmp
ss
mov
aad
jae
sarb
add
loope
push
cltd
pusha
mov
mov
lea
mov
daa
pop
dec
mov
and
mov
in
mov
mov
lret
push
outsb
pop
add
js
add
out
jmp
pop
mov
push
js
fidivl
jbe
fcompl
adc
sbb
aas
sahf
push
enter
imul
mov
cmp
repz
cmp
std
mov
shlb
dec
mov
mov
lret
mov
push
ret
shll
jl
repnz
pop
lret
mov
dec
stos
sti
cmpsb
lret
movsl
jp
jnp
insl
mov
jae
jnp
jb
test
aad
mov
jle
and
dec
iret
rcl
movsb
aas
push
jno
in
rcll
mov
popf
iret
cld
pop
dec
mov
out
outsb
stc
adc
sbb
push
decb
orb
jbe
lahf
jp
cmp
jmp
push
pop
pop
mov
stos
sbb
in
ss
and
lds
dec
pop
sbbl
xchg
nop
sbb
popf
dec
jp
sarb
jnp
sti
int
lods
xchg
pop
mov
pop
aad
or
cmp
adc
cli
mov
movsb
lods
pop
stos
pop
fisubl
fistpl
mov
push
sahf
mov
aam
repz
movsb
insb
mov
test
adc
cld
push
cwtl
addb
or
xchg
leave
sbb
mov
enter
cmp
pop
mov
push
ljmp
daa
stc
jo
pushf
and
iret
jae
cmp
popf
push
or
or
sub
pop
xchg
dec
jbe
inc
dec
cwtl
adcb
pop
cmc
negb
mov
insl
pop
sti
clc
dec
ret
clc
cmp
addr16
outsb
jl
enter
in
gs
test
pushf
mov
adc
addr16
fistpll
xorl
iret
mov
pop
mov
rcl
out
test
testb
iret
jecxz
cwtl
pop
jl
cmpsb
fsubs
add
and
or
ja
insl
popf
push
fadds
pop
lcall
cmpsw
incb
dec
mov
push
mov
jmp
mov
ret
pop
test
addr16
stos
push
arpl
out
cmc
enter
fistl
push
mov
fcompl
into
cmp
cmpl
mov
sbb
aaa
push
flds
mov
cmpsb
sbb
mov
sbb
mov
push
cmp
sub
xchg
stos
shl
rcll
xor
xchg
pop
dec
outsl
jae
sbb
jle
inc
xchg
mov
adc
and
mov
das
ss
add
xchg
jg
lcall
int3
fidivrl
pop
push
push
jbe
in
lods
popl
mov
sub
push
mov
dec
xor
scas
push
ljmp
lock
jecxz
fwait
clc
lret
sbb
mov
dec
mov
shrb
out
std
fcomp
push
aaa
fwait
pushf
lods
out
in
insb
sbb
mov
pop
stos
stos
cmp
aas
pushf
mov
sbb
rcrb
jmp
push
mov
cmp
int
jnp
push
dec
roll
xor
mov
popf
mov
jae
mov
adc
cmp
outsb
mov
or
xchg
jl
cmpsl
jnp
fisubrs
xchg
sub
ds
cmpsl
ss
clc
out
cld
push
mov
cld
subb
push
jge
xor
xchg
sbb
cmp
dec
out
push
push
out
xor
jbe
scas
loop
adc
loopne
imul
test
stc
dec
out
sbb
pop
mov
cmp
cli
and
jnp
jnp
push
imul
sbb
int3
rcr
rcrb
mov
jge
pop
mov
and
scas
mov
es
ret
fistpl
lret
xchg
sbb
pop
mov
mov
popf
sarb
sbb
test
adc
mov
popl
mov
call
adc
out
xchg
test
xor
jo
lods
iret
jmp
pop
adc
nop
lret
push
push
adc
dec
nop
and
sbbb
test
jae
out
cwtl
mov
lret
mov
mov
leave
xchg
enter
stos
fcomps
and
push
aaa
push
mov
fcmovnb
jns
lds
sbb
push
fs
xchg
jp
mov
xchg
lods
out
inc
mov
cmpsb
lahf
xor
cli
clc
fdiv
jo
xlat
popl
shll
cmp
inc
iret
sbb
int3
jmp
and
mov
dec
leave
or
test
cli
cmc
fmul
and
jne
in
pop
xchg
xchg
push
dec
insb
xchg
cwtl
xchg
stc
mov
sbb
push
call
mov
mov
cmp
cmpsl
sti
push
lret
aam
push
ljmp
popa
in
pop
pop
sti
cli
push
mov
out
xchg
mov
filds
repz
fs
lahf
cmp
es
xchg
adc
pop
inc
lret
fadds
push
adc
sbb
xchg
lret
jnp
sub
les
ds
call
sbb
pop
jecxz
adc
inc
cli
aad
xchg
adc
les
ja
xchg
xchg
add
xor
lahf
fwait
inc
push
inc
mov
mov
call
fisttps
in
fs
jg
push
xorb
sub
xchg
fistl
inc
scas
sbb
fisttps
pop
sbb
pop
cmpsb
sbb
movsl
xchg
cwtl
and
jecxz
lock
jnp
inc
cmpsb
cmc
ret
test
fmul
pop
push
push
jne
jno
popf
pop
mov
cmpsl
sub
enter
cli
sbb
xchg
mov
fsubs
scas
lahf
popa
daa
jne
in
sub
movsl
fistpll
pop
sbb
shll
ljmp
mov
jne
cmpsb
aas
out
adc
lret
addr16
es
repnz
xchg
add
cwtl
std
adcb
jl
inc
decl
test
popf
jae
pop
iret
cmpsl
popf
mov
outsl
cmp
dec
dec
mov
dec
insb
push
cld
loopne
sub
sbbb
sub
popf
mov
test
iret
jg
dec
xchg
sti
jg
clc
adc
sbb
adc
fcom
lcall
mov
jp
sbb
ficoms
dec
stos
ret
lret
pop
mov
loop
fbstp
out
cwtl
ret
shlb
cld
cwtl
psllw
fdivrl
cmp
rcrb
sahf
shrl
cmp
xor
mov
xor
push
lret
hlt
hlt
pop
or
mov
rcrb
dec
fcom
fmull
fcomps
cli
sbb
rcrl
cmp
lea
push
add
std
sbbl
addl
pop
sub
clc
sbb
out
lcall
sub
mov
mov
push
ds
sti
pusha
cmpsb
cmp
call
and
pop
ret
sbb
cmpsb
jae
dec
jae
sti
xchg
adc
mov
loope
mov
push
push
and
bound
fcoml
iret
adc
sar
out
fidivs
sarl
and
pop
mov
into
add
aas
xlat
inc
leave
jno
xchg
fucom
sbb
jnp
mov
mov
jnp
aas
add
loop
xor
cwtl
jle
into
jne
out
mov
test
inc
fcompl
sub
pop
fisubrl
cmp
test
dec
test
testl
jg
repz
mov
imul
sub
aad
mov
and
idivb
fisttps
es
cmpl
jne
mov
mov
std
leave
divl
lahf
loope
dec
push
das
fwait
mov
adc
aad
jle
insl
xchg
in
stos
push
cmp
push
mov
or
and
shrl
jmp
mov
ss
aam
jp
jnp
mov
pop
and
mov
xchg
das
inc
clc
pop
inc
and
cmpsl
jae
clc
test
sbb
dec
cmpsl
jnp
outsb
cli
add
movsb
mov
fdivp
scas
lcall
xchg
out
push
aad
mov
shrl
xor
test
imul
test
xchg
push
mov
pop
xor
jne
daa
imul
adc
add
repnz
shrl
ss
sbb
push
mov
mov
cwtl
mov
mov
sbb
sbb
daa
scas
lret
in
aas
dec
bound
cmpb
xchg
sub
mov
pusha
mov
fs
xor
mov
sub
adc
rcrl
pushf
mov
push
jae
jl
sub
jmp
jmp
fwait
aas
dec
inc
decl
sti
inc
jmp
sbb
popf
arpl
lahf
popa
sub
aad
mov
cli
neg
inc
imull
es
mov
pop
mov
sbb
xor
loop
mov
dec
jle
lods
push
enter
jl
jg
not
inc
fiaddl
jp
call
pop
int3
push
test
dec
outsb
dec
mov
fisttps
into
xchg
push
notl
cmp
dec
clc
scas
push
xor
lret
outsb
in
jno
out
or
popa
lea
mov
jne
test
mov
jae
lods
jo
loop
cmpsl
testl
jnp
movsl
sti
nop
push
fdivl
sub
out
add
push
pop
pop
xor
clc
mov
jnp
pop
popa
jbe
mov
pop
loope
xor
and
incl
ficoml
jg
loope
jne
mov
add
cltd
sbb
cmpsl
movsb
fdivl
fiadds
dec
or
mov
lods
dec
lret
scas
mov
sub
push
jg
les
fsubr
add
sti
sub
push
push
test
inc
xchg
jnp
mov
in
cmp
jmp
iret
dec
cltd
cwtl
mov
pop
xchg
lea
push
arpl
pop
das
sarb
movsl
in
pop
mov
mov
mov
mov
dec
loop
pushf
loopne
push
cs
das
pusha
inc
sub
clc
sahf
adc
ret
fistpl
ss
mov
movsl
out
nop
add
dec
jg
adc
mov
add
pop
mov
jb
mov
cmpsl
xchg
or
fistl
inc
es
and
sbb
jg
jg
push
mov
mov
test
inc
push
mov
push
mov
popa
mov
jnp
push
fadds
pop
and
mov
ret
pop
push
addr16
mov
sbb
aas
daa
add
sbb
repnz
outsl
inc
jge
cmp
mov
push
and
jno
fucomi
mov
out
and
sti
dec
mov
jg
add
ret
in
pop
movsb
iret
clc
and
sbb
mov
cwtl
sbb
in
cs
js
or
sbb
sbb
iret
mov
mov
jp
and
idiv
ljmp
adcl
loopne
je
or
adc
sahf
and
hlt
movsl
cmp
std
jp
leave
inc
xchg
or
xchg
pop
lcall
pop
popa
mov
ljmp
pop
and
jge
fdivs
test
fsubs
inc
add
mov
mov
dec
push
cld
mov
test
mov
mov
lahf
push
xchg
pop
pop
and
xchg
pop
daa
jno
dec
scas
repz
jecxz
fwait
push
jp
and
into
pop
mov
mov
call
jne
sbb
je
in
push
mov
loope
or
mov
xchg
scas
ja
dec
dec
xor
pop
movsb
arpl
test
sbb
inc
test
test
add
adc
pop
or
pusha
test
adc
test
movsl
incl
sub
push
cmpsb
dec
cmpsl
jnp
dec
xor
and
cli
sbb
mov
ret
in
xchg
mov
fnstcw
cwtl
cli
mov
dec
pop
sbb
cwtl
pop
mov
test
pop
cmp
rolb
mov
enter
pop
cmp
je
mov
rcrl
pushf
pusha
or
lret
cmp
fistpl
aas
sti
mov
andl
lods
sti
or
outsl
scas
pop
pushf
jmp
xchg
out
mov
xchg
push
mov
pop
sub
inc
scas
scas
xlat
xor
sbb
pop
dec
fs
xchg
sti
pusha
mov
sarb
cwtl
and
mov
int
lods
movsb
pop
cmp
imul
mov
iret
mov
enter
inc
sbb
sar
add
push
push
push
popf
jl
xor
jg
scas
or
pop
jp
cmpsl
jnp
subb
loop
cli
repnz
fistl
out
mov
jle
dec
mov
lods
dec
movsl
mov
idivb
adcl
xor
scas
idivl
sub
pop
fcompl
mov
jecxz
scas
sti
adc
arpl
imul
int
fisubrl
jg
popf
xchg
and
fwait
icebp
test
mov
cld
push
hlt
pushf
adc
sub
cmp
cli
xchg
adc
xlat
loopne
xchg
sar
fsub
scas
aas
xchg
inc
dec
cmp
loopne
addr16
sbb
mov
fistl
mov
sbb
xchg
sbb
js
cwtl
popl
fistpll
sub
xchg
insb
mov
hlt
test
cmp
in
cli
cwtl
add
js
in
and
enter
and
sub
mov
cmp
scas
cmp
cmp
pop
inc
popf
adc
daa
mul
or
out
stc
pop
push
jmp
push
adc
lods
test
iret
cs
in
cmp
sub
sbb
pushf
push
les
xchg
test
and
ficompl
and
sbb
sbbl
sahf
pushf
sti
insb
add
add
push
push
xor
sub
sub
xchg
jmp
lcall
test
push
repnz
xchg
pushf
jge
in
inc
popa
mov
scas
lret
mov
jae
addr16
notl
cmpsb
pop
call
and
sti
lret
jmp
add
fsubrl
cwtl
into
pushf
xchg
fcomp
or
inc
pop
mov
lahf
push
mov
pop
clc
cmp
mull
fmull
mov
cmp
outsb
lods
idivl
jg
aas
movsl
sbb
cmp
mov
xor
mov
sarb
lahf
out
lds
inc
cmpsl
popa
es
xchg
pop
adc
out
cmp
call
cmp
test
add
jmp
out
sbb
and
and
inc
sub
aas
push
pop
in
mov
pushf
cltd
js
cmp
or
pop
pop
adcl
ror
sbb
call
dec
idiv
sbb
loop
int3
addl
cmp
out
mov
aad
iret
sub
pop
fstpl
ret
cmp
hlt
pop
sahf
mov
icebp
adc
jnp
jle
inc
mov
jle
inc
pushf
cmpb
popa
xchg
adc
mov
cmp
jbe
arpl
test
clc
fnstcw
out
sbb
jp
mov
das
rcll
sbb
and
in
cmp
mov
sbb
scas
es
xor
pop
or
jno
inc
mov
lret
dec
int3
mov
adc
pop
ficoms
cmpsb
aaa
sub
pop
scas
mov
sbb
push
jbe
sbb
sbb
mov
imul
pop
ja
and
mov
mov
adcb
bound
lahf
enter
xor
dec
movsl
es
mov
and
mov
mov
lret
sti
dec
push
inc
out
lods
jne
lahf
mov
repnz
mov
int3
cltd
cmc
add
test
xchg
adcl
mov
bnd
shll
arpl
mov
mov
mov
adc
fcompl
cmpsl
jne,pn
sahf
sti
lahf
adc
cwtl
popa
inc
int
sbb
cmpb
pusha
in
mov
cmp
push
mov
inc
fwait
cwtl
mov
mov
clc
mov
xchg
pop
fwait
mov
mov
loope
jp
lock
jbe
dec
rcll
inc
push
sbb
push
xor
cmp
lods
aas
decl
adc
shrl
mov
xor
pop
mov
cs
inc
push
cmp
stc
jns
movsl
ja
lret
jecxz
insb
cmp
mov
jge
in
pop
out
aas
rolb
jbe
fwait
cmpb
clc
mov
ds
xchg
popf
popf
or
pushf
rcr
mov
mov
add
mov
jno
jecxz
xchg
mov
call
cmp
xchg
incb
fisubrs
jle
push
popf
clc
hlt
cwtl
sahf
out
ljmp
mov
push
das
rcll
mov
cmc
mov
mov
es
and
sbb
cmp
fwait
or
aad
test
insb
sbb
cli
hlt
pop
lcall
lock
cwtl
mov
popa
add
mov
cli
sub
fistpll
jns
decl
clc
lea
pop
popf
xchg
into
repnz
sbb
jbe
les
push
mov
dec
es
and
cli
leave
jbe
imul
dec
jl
mov
inc
dec
clc
pop
cwtl
pop
push
mov
pop
jns
cmpl
dec
cwtl
test
adc
and
lcall
stc
cwtl
mov
cmp
mov
paddd
cmpsb
aas
jp
push
mov
popf
xor
cli
xchg
pop
push
jo
jns
fistpl
mov
and
inc
mov
addr16
lcall
push
cmpsb
int
shll
push
fidivs
inc
mov
push
pop
outsb
ss
mov
dec
and
out
xchg
mov
imul
jnp
addr16
pop
movsl
sti
movsl
test
mov
fisubl
xchg
mov
mov
sub
xchg
sub
mov
xor
pop
fidivrl
jle
cmpsl
cmp
in
clc
xlat
scas
adc
fisubs
sbb
lcall
mov
pop
cmp
jle
jne
aas
cmp
pop
dec
adc
dec
jnp
pop
test
xor
and
ja
mov
les
sbb
xchg
arpl
gs
lds
jns
imul
xchg
dec
add
xor
push
xchg
fldt
xor
push
cli
add
mov
rorb
fimuls
cmp
mov
mov
add
adc
cmpsb
fmul
stc
xor
aaa
lods
mov
cs
out
cs
int
sbb
enter
mov
fadd
imul
push
je
xor
leave
mov
mov
cmc
mov
mov
stos
mov
imul
ss
xchg
xchg
fsubl
in
int
xor
mov
xorl
andl
sarb
push
xor
clc
push
decl
cld
dec
loopne
insb
cmp
add
jl
sbb
inc
or
add
loope
or
jecxz
pushf
xchg
out
hlt
test
iret
sbb
cmp
push
lret
ficompl
mov
sub
cmp
cmp
aas
push
leave
out
xor
mov
sbb
mov
mov
or
lret
jle
stos
pop
ds
call
dec
test
sti
jg
mov
add
cwtl
add
mov
mov
das
icebp
jbe
lret
adc
mov
aaa
adc
add
mov
jbe
jp
lcall
add
xchg
jnp
out
stc
loopne
push
or
cmp
js
cmp
addr16
insb
xchg
int
and
sub
pop
sub
cld
sub
shrb
les
pushfw
pop
mov
je
lcall
push
adc
push
pushf
mov
popl
divl
pop
in
sbb
scas
iret
test
mov
lock
mov
arpl
outsb
cli
scas
pushf
sar
mov
pop
out
pop
mov
fdivrl
jns
in
lods
mov
and
call
sub
pushf
mov
mov
push
sahf
clc
push
mov
push
ret
cmp
mov
aad
fcoml
jnp
out
pop
fucom
jnp
cwtl
jge
ret
decl
cmc
sarl
mov
repz
cltd
sti
je
push
sbb
aas
inc
insl
popa
orl
fcompl
nop
out
leave
xor
fidivl
ljmp
xchg
fstpl
shlb
test
test
mov
out
sbb
jno
inc
cmpsl
jle
stc
jl
cld
int3
push
jle
mulb
jbe
popa
jbe
cwtl
or
loope
test
jmp
pushf
sub
jmp
gs
cld
pop
imul
lods
je
iret
inc
icebp
fdiv
dec
sub
push
mov
sbb
xchg
sti
sahf
sub
adc
fdivrs
ret
cmp
aad
pushf
insl
xchg
sub
inc
fsubrs
fidivrl
cmp
outsl
mov
xchg
pop
dec
ret
dec
xor
lea
andl
sub
mov
add
dec
fucom
adc
mov
lods
mov
enter
icebp
cmp
cmpl
aas
fs
mov
enter
mov
sub
jge
push
shrb
lahf
dec
sbbl
imul
call
cltd
cmp
xchg
or
aam
lret
xchg
add
cltd
insl
out
stos
aas
jmp
sbb
add
imul
dec
or
in
test
mov
xor
xchg
or
inc
mov
sti
adc
jno,pt
xlat
addr16
and
inc
in
cwtl
adc
das
pop
mov
pusha
cmp
and
clc
cwtl
in
mov
ds
enter
mov
in
addr16
or
xchg
les
ds
add
pop
ds
jp
test
test
imull
lcall
xchg
sbb
popa
adc
cmpsb
jno
mov
lock
adc
outsb
outsb
or
stos
mov
xchg
jl
test
xchg
mov
mov
bound
pop
jp
in
movsl
cld
icebp
sbb
ja
sbb
jmp
sahf
xchg
in
adc
xlat
scas
mov
dec
push
sbbl
mov
out
out
jp
outsl
sahf
repnz
xor
mov
sbb
stc
mov
cwtl
xor
les
fbstp
cmpsl
pop
and
jmp
sti
scas
push
lods
sub
jecxz
ja
test
add
mov
mov
lret
xor
adc
pop
or
adc
and
add
jecxz
lcall
repnz
stc
jae
mov
cmpsl
mov
pop
adc
dec
cmpsl
cltd
sti
movsl
jg
xchg
rcrl
add
loop
dec
fdivs
int
and
cmp
xchg
pop
jle
xchg
jecxz
add
push
dec
mov
and
cwtl
cmp
mov
pop
lahf
sarb
or
fcomi
xor
dec
mov
adc
mov
fsubrl
add
sti
cmp
cmp
adc
sbb
pop
wrmsr
lahf
enter
ds
sbb
and
add
mov
jnp
inc
imul
mov
lods
repz
mov
fisttpl
or
dec
cltd
mov
out
ficomps
in
out
ret
out
mov
mov
and
jg
fldt
jg
fistl
jg
fistpl
gs
outsl
add
add
jge
jmp
cli
in
mov
xor
push
mov
repz
mov
ret
fsub
push
adc
jns
out
mov
add
das
mov
adc
push
jb
dec
mov
xor
jl
mov
lcall
mov
outsb
shl
gs
pop
in
aas
inc
hlt
clc
repz
xchg
xchg
and
xor
cmp
fcomps
div
cmpsl
xor
mov
ret
push
int3
pop
ds
cmp
sar
cmp
add
loopne
mov
jge
xlat
fs
scas
roll
cwtl
imul
pop
pop
nop
and
pop
mov
and
jb
mov
and
jl
mov
jg
test
rclb
mov
inc
mov
lcall
incl
rcr
mov
insb
pop
movsl
push
mov
xchg
add
cmp
jg
popa
out
sarl
lods
mov
push
stos
jmp
andb
jo
jb
js
movsl
sti
pusha
scas
mov
dec
add
lcall
jns
and
jae
push
sub
dec
pop
xchg
add
mov
lret
popa
and
lods
dec
pushf
sbb
xchg
push
dec
std
mov
pop
pop
inc
jnp
and
out
sub
mov
jle
adc
or
lahf
dec
mov
cli
mov
jno
cwtl
lods
push
test
pop
aas
cs
out
stos
inc
test
cmp
sbb
int3
cmp
mov
cmpsb
jbe
pop
or
imul
stos
lock
loope,pn
push
out
mov
dec
loop
mov
testl
lcall
jae
mov
es
sahf
loopne
jnp
mov
mov
or
out
cli
cwtl
pushf
aam
sbbb
loopne
lea
and
scas
test
cmp
idivl
xchg
fcoml
xor
mov
pop
icebp
push
mov
bound
xor
jo
test
lcall
mov
stos
add
test
mov
jno
lret
clc
mov
shr
loopne
test
pop
mov
ffree
push
ja
cmp
clc
push
jmp
jne
mov
inc
sbb
jp
sub
pop
cmp
cmp
data16
idivb
jae
out
mov
scas
cmp
sbb
test
sub
push
mov
mov
dec
shl
scas
ja
pusha
pop
ljmp
mov
in
outsb
das
xchg
fwait
jb
fdivrs
test
push
inc
xor
jp
push
popl
xchg
push
add
sub
mov
lcall
xchg
xlat
xor
adc
dec
pushf
cmp
test
popa
loop
pop
aaa
jmp
sub
daa
lods
xchg
cltd
scas
xor
sbb
push
jb
setne
idivb
ljmp
test
hlt
fsts
xchg
mov
fcoms
cmp
stc
pop
faddp
mov
cmp
daa
roll
mov
sub
xchg
stc
scas
xchg
mov
or
aas
cli
aas
mov
cld
repz
loopne
mov
loop
ds
cmp
sub
lcall
sarl
cwtl
lcall
pop
xor
xor
jmp
jg
hlt
add
stc
pop
pop
cltd
ds
pop
pop
xchg
mov
inc
icebp
cwtl
mov
xchg
sbb
pop
pop
inc
fisttps
aas
addl
or
cli
sbb
sub
jo
and
cld
mov
mov
das
mov
aam
cli
cwtl
or
or
add
js
sub
push
cmp
sti
sahf
in
pop
je
lret
jae
movsb
xchg
fsubr
pushl
mov
insb
inc
fs
cmp
xchg
shrl
pushf
inc
mov
scas
aas
rorb
xchg
mov
aas
pushf
shll
or
cwtl
sbb
jmp
mov
add
xchg
jns,pt
mov
imul
movl
dec
or
stos
lods
sahf
xor
jmp
lea
xchg
fcoml
mov
mov
pop
ljmp
jae
push
pop
cmp
outsl
dec
mov
sub
cwtl
loope
and
sbb
lods
xor
cmp
cmpsb
lock
mov
sbb
mov
jnp
pop
imul
movsb
adc
cmpsl
sbb
sbb
jnp
cmpsb
xchg
cmp
mov
pushf
notb
mov
sahf
imul
mov
and
aas
jnp
cmpsb
loop
sbb
mov
cli
dec
xor
movsl
xor
fistps
ret
rcrb
out
fstl
and
pushf
jl
sbb
push
sbb
lret
pop
into
fmull
cmp
cwtl
ret
clc
pushf
lcall
cmp
jg
adc
test
pop
in
inc
fsubrs
sub
push
icebp
js
xchg
incl
push
hlt
sarl
lock
pushf
cmpb
lahf
mov
fs
xor
cwtl
pop
lcall
fmull
mov
xorb
sahf
pop
inc
jge
aad
push
xor
clc
enter
sub
sbb
push
pop
pop
loope
xor
inc
mov
xor
push
setl
add
sub
xchg
cli
jns
repnz
fisttpll
icebp
imul
cmpb
faddl
jo
mov
bound
sahf
add
sbb
insb
mov
sbb
jmp
cmpsl
stc
clc
out
fcompl
scas
aas
fidivrs
mov
mov
cmpsl
jnp
rcrl
adc
cmp
fwait
ret
xor
mov
pop
cmp
cwtl
out
mov
cmp
xor
sub
fstps
jp
in
ss
and
jl
sbb
out
jmp
aas
jp
jne
stos
loopne
push
gs
loopne
shll
add
mov
pop
fsub
or
repz
add
roll
jno
inc
pop
int3
xor
jg
and
and
enter
push
sub
icebp
fdiv
push
adc
push
adc
cmpsl
jp
cmc
jg
adcb
mov
pop
testl
insl
jl
idivb
outsb
mov
sbb
cmp
mov
decb
mov
int3
dec
outsb
lea
aas
negl
addr16
sbb
and
fnstsw
mov
cltd
popf
jmp
out
mov
adc
les
pop
std
fadds
mov
stc
add
out
cmpsl
cmc
sarb
sub
aam
cmp
xlat
mov
cmp
mov
jbe
pop
aad
testl
icebp
and
xchg
pop
pop
push
fimull
test
out
dec
fisttpl
nop
out
xchg
xor
movsl
pop
sbb
xor
cmpsl
decl
mov
sahf
sti
push
mov
fadd
sbb
iret
mov
repz
aaa
inc
sbb
cmp
mov
mov
add
add
cmpsl
jecxz
pop
cmp
sub
sub
call
fistps
adc
test
je,pn
inc
out
lods
adc
mov
push
rorb
rolb
mov
insb
in
repz
add
push
loopne
cmp
dec
std
mov
mov
and
pop
sub
mov
cmp
push
mov
nop
xor
sahf
pop
call
shll
leave
and
jbe
pop
test
lds
ja
ljmp
and
sub
adc
mov
mov
fstpl
lahf
sub
jne
xor
movsl
rorl
and
push
ficompl
aas
inc
iret
aaa
pop
jge
mov
addl
pop
add
cmp
repz
sub
mov
lds
inc
gs
pushf
pop
test
sbb
repnz
sub
insl
pushf
jne
push
outsb
bound
call
adc
mov
notb
fs
test
cmpsl
mov
cli
xchg
negb
fisttpl
movsl
cmpsl
lods
mov
inc
shlb
movsl
xchg
xchg
ss
mov
mov
ljmp
sbb
sbb
xor
sub
mov
out
jmp
cs
into
mov
jmp
pop
loopne
inc
daa
cli
in
cwtl
mov
mov
and
inc
mov
aam
dec
mov
dec
or
loop
jne
es
sub
sbb
fildll
pop
cmp
mov
adcb
dec
or
add
jnp
fidivl
stos
mov
xor
pop
out
cmpsb
mov
cmpsb
inc
sub
bound
lods
xor
cmp
pop
push
pushf
inc
cmp
je
jne
lea
push
leave
and
aaa
dec
cmpsl
dec
clc
jmp
aas
or
nop
movb
pop
inc
cmp
addr16
jnp
pop
aad
sbb
inc
sbb
jae
add
imul
pusha
sti
mov
sub
sub
xchg
in
fisttpl
mov
dec
mov
pop
or
push
mov
ja
mov
in
imul
xchg
mov
test
cmpsb
cmp
pop
dec
out
sbb
xchg
cmp
lea
and
filds
cmpl
test
idivl
mov
xor
mov
lcall
mov
push
popa
fisubs
sarl
pop
jae
test
pop
test
cwtl
mov
repnz
lret
sti
pop
mov
mov
jmp
mov
and
fdiv
lret
sbb
scas
sti
scas
mov
out
mov
pop
cli
adc
jnp
pushf
sbb
mov
inc
mov
pop
cltd
cmpsl
push
scas
push
das
pushf
jo
int
fdivrl
and
mov
add
mov
mov
cmpsb
test
lahf
mov
inc
xor
jbe
and
dec
sarb
and
xchg
inc
out
fnstsw
inc
cmpsl
cmp
push
xlat
xchg
jo
je
test
xorl
and
add
std
push
pop
xchg
pop
inc
out
mov
pop
pop
pop
mov
lds
fmuls
adc
push
pushf
lret
clc
outsb
mov
jle
shll
fcoml
mov
fs
cmp
cmp
lret
sahf
push
lds
ds
mov
ljmp
movsl
jb
jae
jp
mov
cmpsb
cwtl
lahf
sub
aad
hlt
andb
inc
shrl
clc
pop
cmp
ja
pushf
dec
in
fsubr
cwtl
bound
sub
ret
mov
sarl
pushf
jl
fs
imul
push
pop
sbb
stc
cld
pop
mov
adc
mov
inc
lret
es
or
addb
sbb
loope
ds
stos
mov
flds
data16
sarb
add
push
push
cmp
jne
cltd
rolb
cmc
loop
adc
mov
inc
daa
xchg
mov
pop
xor
movsl
mov
mov
fstpl
mov
into
pop
movsl
aaa
cmp
pop
or
and
adc
dec
lret
push
icebp
adc
dec
idivb
lcall
movsb
icebp
sbb
data16
mull
xor
or
ss
movsb
mov
xlat
pop
push
into
mov
or
cli
and
shrl
xchg
adc
fsub
fisttpl
inc
or
pop
sbb
push
vpsubusb
cmpl
sub
scas
fistl
push
fsub
jl
push
pushf
cmp
icebp
push
test
ret
xor
daa
pop
push
mov
fsubrl
aas
or
mov
mov
xor
cli
push
sbb
mov
mov
ljmp
xor
pop
nop
lods
and
fbstp
xor
daa
cmp
cld
repz
int3
jo
and
out
leave
xor
nop
in
test
popa
je
mov
adc
mov
enter
adc
lret
gs
out
out
int3
lahf
pop
push
fsub
sub
adc
xchg
sbb
stc
movsl
mov
xchg
out
mov
stos
mov
jle
pop
mov
pop
mov
sbb
sahf
push
adc
mov
mov
add
rorb
ret
fwait
pushf
xchg
stos
sarb
mov
cmp
rolb
sti
mov
xor
outsl
sbb
fwait
sbb
fucom
arpl
mov
mov
pusha
cmp
sub
xchg
lds
mov
add
xchg
cmp
pop
jae
fmul
xor
insl
pop
cwtl
fimuls
hlt
mov
addb
push
push
lret
jp
inc
xchg
jno
dec
xor
add
test
stc
inc
ljmp
rorl
fsubl
push
fcomps
inc
mov
in
and
sub
sahf
fwait
data16
add
aad
xor
mov
mov
test
xchg
dec
das
mov
jne
sti
or
in
mov
mov
dec
jno
xchg
xchg
fsubs
xchg
cwtl
inc
and
sbb
sbb
adc
outsb
lods
cltd
lret
in
push
push
mov
icebp
scas
cmpsb
pusha
xchg
sti
cld
pop
inc
es
cmp
push
cwtl
das
mov
mov
push
test
jge
and
sbb
cwtl
push
sbb
and
and
sub
xor
cmp
mov
js
inc
in
pop
or
cmpb
push
push
lds
test
stc
dec
xlat
push
call
int3
rcll
dec
scas
sub
fsubrs
pushf
pop
sbb
test
xchg
mov
sti
gs
xchg
scas
sahf
popf
cmp
jne
out
outsb
cltd
sbbb
sbb
sahf
out
jo
and
mov
sahf
mov
jae
mov
push
fadd
das
les
nop
mov
out
mov
sbb
mov
push
xchg
cmp
pushf
ror
xor
stos
negl
ss
jp
scas
adcb
xchg
stos
xchg
out
negb
sub
lock
or
ret
in
movb
mov
add
mov
outsl
je
out
xchg
pop
push
sbb
mov
or
inc
dec
xchg
jl
out
adc
js
pop
fadd
mov
lcall
sub
or
mov
mov
fwait
adc
pop
and
lahf
loope
mov
jns
xlat
outsb
into
jae
iret
pop
dec
push
jecxz
jg
dec
sbb
dec
shrb
cmpb
shrb
fldt
sbb
push
xchg
jae
adc
pop
push
lahf
ret
cld
in
mov
sbbl
sbb
ror
inc
adcb
xchg
sti
out
clc
scas
push
mov
pushf
sbb
fabs
movsb
bound
pop
mov
dec
cmp
and
jns
or
dec
and
cmp
xchg
daa
nop
sbbl
cs
jnp
or
sub
pop
pushf
inc
mov
js
ja
sub
lods
jmp
out
mov
xchg
pop
push
xlat
sub
pop
lcall
sbb
pushf
inc
xor
cmpsb
loope
mov
cmp
addr16
adc
jno
aam
decl
cmc
cld
xor
and
xchg
aas
sub
add
mov
mov
aaa
in
fldcw
lock
mov
divb
sbb
pop
or
clc
in
stos
pop
roll
xchg
sbb
je
jmp
movsl
jno
in
cld
hlt
shl
adc
stc
adc
adc
push
fcmovnbe
mov
scas
insb
mov
xchg
sbbl
push
lods
ja
fmuls
xchg
pushf
fmul
lahf
inc
test
mov
or
pushf
add
imul
mov
stos
dec
push
xchg
inc
fsubl
ljmp
xor
and
and
stos
mov
pop
mov
cwtl
inc
mov
jp
fstps
and
pushf
inc
fwait
cmp
lret
ljmp
aas
push
clc
add
jo
out
xor
cmc
jge
mov
aaa
add
test
loop
dec
sbb
adc
daa
cs
push
and
loope
mov
dec
xor
adc
sbb
jae
pop
pushf
enter
cld
push
jnp
scas
add
cmp
pushf
adc
cmp
outsb
and
sbb
mov
inc
or
aas
mov
sbb
adc
sbb
int
stc
jmp
js
scas
shll
push
push
lock
and
sahf
xchg
mov
lds
ret
mov
or
out
dec
pop
lahf
lock
inc
mov
movsb
adc
and
fcmovb
mov
jmp
jb
daa
mov
xor
pop
jle
cmpsb
aaa
gs
cld
ljmp
loopne
jo
in
xchg
sub
fldt
adc
cmp
stos
and
sar
imull
call
cmp
xchg
mov
loope
roll
push
xchg
jecxz
push
push
fucomp
sub
inc
push
pop
lods
dec
aaa
fdivrl
jno
aas
arpl
lahf
xor
and
daa
scas
pushf
pusha
mov
xchg
test
mov
adc
cltd
sbb
sbb
leave
imul
out
mov
mov
stos
iret
add
sbb
pop
fisttps
jl
in
lea
in
mov
loopne
xchg
and
push
add
int
das
mov
ret
dec
inc
mov
dec
sbb
jl
leave
mov
mov
cmc
gs
lahf
sbb
bound
repz
shrb
jbe
pop
es
vcmppd
out
cmpsb
sbb
in
jmp
mov
adc
mov
clc
push
sub
mov
mov
das
fcoml
jle
mov
rorb
cli
sbb
sub
pop
cld
daa
pop
loopne
pushl
mov
mov
mov
je
adc
aad
mov
push
shrb
iret
rcll
jge
es
lods
mov
cmpl
scas
scas
pop
or
push
lahf
filds
sbb
js
mov
pushf
inc
pop
sbb
mov
cltd
das
addb
cmp
xor
test
fbstp
aam
mov
or
mov
cmp
mov
out
inc
int3
std
cmpsb
sbb
sbb
out
pop
cmp
rol
mov
cmpsl
mov
pop
jl
push
daa
fwait
jnp
sbb
jp
shlb
mov
test
pop
inc
test
add
cmpsb
jle
shrl
pop
jge
out
pushf
nop
cmpsl
and
in
jl
cmpl
cmp
pop
jle
inc
mov
nop
cmp
xchg
lea
call
pushf
xorl
sahf
in
pop
mov
ret
push
pop
mov
adc
stos
cmc
fucomi
cmp
fld
cmp
mov
clc
adc
lock
lock
push
sbb
idivl
aas
nop
fsubrs
add
imul
sub
push
mov
adc
int
incl
call
jmp
and
aas
sbb
imul
jo
clc
lds
ljmp
jb
mov
xchg
rcll
push
je
push
mov
jo
out
xlat
int3
mov
mov
int3
cld
imul
pushf
sub
xor
aas
in
mov
xchg
mov
mov
aaa
int
bound
adc
adc
jecxz
call
jp
jmp
sahf
subl
cmpsl
mov
stos
les
lods
add
xor
mov
fwait
xchg
mov
aas
mov
cltd
push
pop
ds
testb
dec
sbb
cmpsl
push
and
pushf
push
sub
xor
xor
inc
cmc
subl
je
add
lret
test
cld
inc
mov
jmp
fcomps
faddl
jp
xchg
jae
pop
scas
and
out
jl
fyl2x
mov
lret
test
sbb
xchg
out
and
xchg
or
sub
sub
xor
dec
aas
adc
xchg
sbb
or
imul
out
and
cwtl
andl
pop
ds
aad
xor
cltd
test
cltd
insb
or
stos
jnp
pop
aad
lea
loopne
repnz
sbb
cmp
and
inc
mov
push
out
in
mull
or
sahf
iret
sub
sbb
xchg
inc
sbb
out
mov
pop
or
ljmp
repnz
jle
jp
push
add
mov
mov
mov
out
xchg
scas
sti
fimull
aam
or
jmp
call
xchg
mov
pop
fcompl
cmc
fidivs
pop
idivb
mov
aas
lea
jle
cli
hlt
jbe
ror
lret
dec
dec
fstps
or
pop
sbb
add
cli
out
xorl
mov
sub
popa
in
call
cmp
sbb
jo
movsl
mov
stc
dec
jg
cmc
mov
and
mov
mov
adc
xor
lcall
mov
hlt
int3
jno
push
loop
mov
lahf
movl
cltd
pop
pop
and
cmpl
ds
cld
pushf
pop
scas
movlps
dec
sbb
or
xchg
mov
pushf
movsb
lret
shlb
pop
xchg
aas
mov
ss
push
push
cmp
cli
fnstcw
sbbb
cld
mov
mov
pop
test
push
clc
xlat
push
and
cltd
mov
decb
dec
stos
stos
mov
jp
in
sub
mov
lods
dec
fs
xchg
adc
xchg
clc
add
mov
outsl
popf
xchg
push
decl
cmp
es
mov
pushl
cmpsl
xchg
jp
cmc
xchg
dec
jnp
jns
sub
cmpsb
into
aaa
int3
test
dec
cltd
cwtl
mov
imulb
cld
push
dec
mov
xchg
subl
shl
jg
cmpsl
dec
int3
repnz
cwtl
lds
cli
jmp
push
jp
jecxz
jmp
pushf
jbe
push
scas
jecxz
xlat
imul
ret
les
push
xor
lahf
pop
xor
sbb
jmp
or
jo
ja
cmpsl
mov
sub
clc
cmp
movsl
fisubrs
or
shrb
ret
jns
movsb
pop
xchg
das
inc
out
scas
in
pushf
push
loop
xor
xchg
test
cli
cmp
pop
sbb
cmpb
test
jns
pop
int3
dec
outsl
pop
push
push
xor
add
push
xchg
lret
jo,pn
mov
sahf
push
lods
sbb
scas
xchg
cmpsb
mov
add
aad
pushf
lods
bound
or
out
sub
mov
scas
cmpsl
fstpt
or
outsb
repz
mov
mov
xchg
fdivrs
lock
outsb
loope
cmp
xlat
and
int
sub
mov
sar
aaa
nop
sti
sahf
pop
in
lahf
flds
push
push
mov
fcom
xchg
adc
push
movsb
das
cld
mov
mov
mov
xor
mov
cmp
pop
hlt
sbb
inc
iret
xchg
xchg
cmp
adc
das
aad
jg
ss
daa
into
mov
or
cld
sbb
inc
fstps
mov
orb
push
fstpt
aam
adc
popf
sti
add
push
mov
jno
mov
lods
bound
cmp
pop
xor
scas
ret
inc
adc
fs
xchg
inc
add
out
fwait
xchg
inc
mov
ljmp
ja
push
adc
fcoms
outsl
imul
scas
fwait
jecxz
mov
sub
mov
divb
push
popa
into
cmpsl
sti
pusha
aad
and
fistl
mov
cmp
cltd
add
fisubl
inc
js
jne
rorb
sub
xchg
xchg
fwait
pop
or
ja
pushf
fsubrs
and
nop
jnp
jnp
insl
pop
cmpsb
adc
sbb
data16
sbb
dec
xchg
mov
lahf
in
pushf
xor
pop
and
mov
lahf
xor
cmp
mov
in
fcomps
pushf
pop
sbbb
push
addr16
and
cmp
inc
mov
jae
pop
popf
jne
jo
popf
mov
push
loopne
sbb
pop
mov
sbb
cmpsb
lret
cmp
mov
inc
jl
push
mov
insb
adc
dec
pusha
xchg
mov
dec
sar
fwait
movsb
insl
mov
test
iret
test
sti
xor
test
test
jnp
xor
xchg
popf
test
or
pop
std
addr16
mov
push
hlt
or
pop
jmp
cli
lahf
sti
mov
shlb
stc
or
dec
sbb
mov
lock
inc
mov
call
mov
pop
or
or
inc
dec
popf
xchg
fdivrs
dec
cmp
repnz
mov
out
insb
mov
inc
and
cld
sbb
jnp
inc
xor
jae
add
pop
sarl
sbb
repnz
inc
mov
jmp
pop
outsb
push
add
test
cmpsb
mov
mov
mov
in
loope
jecxz
insl
scas
cltd
in
lret
sahf
cwtl
jmp
aam
inc
mov
xor
sti
mov
movb
lcall
cmpsl
add
fwait
inc
pop
mov
mov
jmp
fadd
test
fsubr
sbb
test
add
enter
sbb
xlat
xor
pop
fs
pop
dec
fnstcw
aad
pop
mov
fs
add
pushf
icebp
and
in
pop
pop
mov
fcoml
pop
push
stos
sti
out
ds
cld
gs
cmpsl
xlat
jbe
inc
add
pushf
inc
stc
daa
adc
and
mov
mov
cld
mov
ret
dec
aad
cs
mov
cmpsb
dec
loop
fistpll
iret
pop
fstl
dec
jg
loope
xchg
fimuls
sbb
pop
lret
inc
and
jp
dec
test
arpl
pop
dec
push
iret
insl
xchg
lods
pop
cmc
jecxz
fsubs
in
sub
or
scas
jnp
scas
jb
inc
sarb
aad
fs
arpl
mov
aad
call
xchg
lahf
lock
jb
loope
fistps
adc
lods
sub
stos
fsubl
sbb
and
cmp
cmp
push
lcall
jp
jle
cmpsb
dec
sub
jbe
jno
das
or
lret
movsl
xor
cltd
mov
insb
cmp
push
pop
cmovl
inc
sbb
fxch
mov
jae
pushf
push
jmp
sbb
push
fs
iret
shrb
loopne
dec
mov
add
nop
addb
pusha
mov
sub
scas
addl
cltd
mov
pushf
in
call
sbb
testl
push
or
or
sub
mov
fcoml
and
dec
in
add
mov
cwtl
repnz
pop
sub
inc
push
sbb
lret
fwait
mov
mov
cmp
mov
jb
lcall
imul
incb
and
adc
sbb
shrb
sbb
pop
clc
enter
nop
fidivrs
loope
inc
cld
inc
xchg
scas
ret
cmp
insb
loopne
cmp
jnp
push
sahf
sti
mov
mov
cmp
clc
sbb
stos
mov
or
push
push
dec
pop
add
push
push
dec
lock
sbb
adc
sub
xor
aas
lds
out
sbb
and
mov
mov
push
dec
fwait
mov
xchg
hlt
sarl
mov
scas
push
jl
cwtl
fcmove
pop
leave
aas
cmp
loopne
cli
xor
into
out
push
fmuls
pop
repz
mov
mov
test
inc
inc
jecxz
pushl
es
pushf
jb
xor
mov
test
pop
pop
xchg
es
dec
imul
dec
icebp
out
sti
popf
dec
jb
jg
mov
movsl
js
repz
adc
dec
jae
js
push
push
addr16
inc
xorl
mov
jnp
jo
enter
sbb
adc
call
xor
mov
fdivrl
xchg
aas
into
mov
add
and
cltd
lds
pushf
xlat
adc
jge
mov
and
fwait
cmp
hlt
cli
shrb
mov
ds
orl
hlt
insl
out
mov
sbb
test
xor
adcb
out
cmp
lods
ja
cmp
sub
and
and
push
shll
ja
pop
enter
fldcw
and
xor
ret
aad
sbb
std
mov
loopne
jp
sbb
xor
push
cmp
pop
xchg
inc
xor
cmp
aaa
and
xchg
mov
insb
pusha
mov
xlat
sahf
in
mov
in
mov
mov
mov
cli
cs
mov
xchg
cltd
mov
dec
pop
enter
xor
sub
lea
mov
mov
mov
or
cwtl
mov
mov
lods
pop
jle
adc
movsl
popf
lea
addb
fldt
sbb
out
cmpsl
pop
ja
jo
test
sti
push
sbbb
xchg
call
ficompl
mov
cmp
xchg
sub
xchg
fwait
cwtl
decl
jne
pop
mov
xchg
xor
loop
mov
xchg
cld
cwtl
jne
add
mov
sub
pop
dec
sbb
cld
rolb
cmp
stos
xchg
cltd
inc
insl
js
xor
sub
outsl
xchg
mov
syscall
sbbl
and
pop
clc
mov
xor
movsl
jg
push
inc
movsb
sti
pop
test
add
ret
push
jns
pop
mov
shll
shrl
fnstenv
mov
push
mov
in
mov
pushf
inc
negb
into
rcll
jmp
inc
aaa
sbb
arpl
inc
stos
push
cli
sub
fidivrl
push
cmp
shrl
adc
jg
lret
mov
mov
jo
adc
sub
fmull
test
stc
jl
cs
sbb
cltd
jg
lcall
scas
sbb
enter
adc
push
hlt
add
mov
imul
cmpsl
pusha
enter
push
add
pop
add
cli
jmp
pop
fidivrs
ffreep
inc
mov
jge
test
cltd
dec
aas
idivl
cld
lret
test
sbb
cwtl
sti
sub
and
scas
cli
arpl
repz
cld
sbb
cmpsl
cmp
aaa
xlat
push
ret
push
mov
xlat
mov
fmul
mov
pop
repz
jae
pushf
jnp
ror
pusha
in
xor
ret
test
iret
push
jge
mov
fdivl
mov
cwtl
or
aas
pop
dec
sub
popa
mov
push
and
cmp
int
fstpt
inc
jb
or
into
shr
stos
lods
dec
and
pop
les
out
clc
int3
addb
test
adc
push
stc
iret
jg
cld
std
notb
adc
pusha
fwait
loope
xor
push
fmull
adc
in
cmpb
rcr
lret
push
pop
aam
jo
mov
in
scas
divl
cwtl
shrl
outsl
jo
sbb
enter
dec
and
cmp
mov
mov
sub
mov
mov
push
mov
jl
cmp
jl
fidivs
js
cwtl
cmp
sub
aam
mov
fidivl
mov
shlb
jbe
adc
cwtl
xor
cmpsb
fbstp
lret
xchg
dec
adc
cmpsb
jp
aas
je
ret
insb
ds
test
icebp
in
xchg
pop
loopne
fcomps
incl
jg
push
aaa
lret
mov
mov
mov
mov
inc
cmc
sbb
repz
dec
divb
mov
enter
into
pop
mov
aaa
aas
fsubs
mov
jle
movsl
adc
shr
xchg
ret
fs
dec
inc
and
cmc
sbb
mov
js
sti
andl
imul
mov
pop
and
xchg
xchg
jmp
mov
push
mov
mov
test
jg
popf
mov
xchg
loope
sub
add
xor
addr16
push
test
add
cmp
mov
aas
fnsave
rcrb
sbb
jp
sub
mov
sbb
sbb
dec
enter
fildl
or
pop
out
lea
inc
sarl
jns
inc
cltd
jo
pop
repz
jb
inc
subb
or
cmp
or
test
out
push
inc
lcall
or
test
cld
cwtl
loope
pop
sbb
test
int
orl
rolb
push
lock
sub
sbb
pop
lret
ja
inc
subb
sarb
lea
xlat
pop
test
clc
bswap
and
mov
call
fnstsw
das
das
jo
jo
and
xchg
jge
dec
dec
mov
loopne
rol
and
incl
loope
jb
lret
xchg
mov
jg
or
mov
testb
cmp
sub
sti
jg
mov
inc
xor
dec
stos
iret
rcll
jns
jno
dec
out
enter
jecxz
push
push
mov
jmp
or
scas
xchg
cli
cwtl
and
xor
jns
aas
sbb
in
jecxz
jle
stos
int3
int
sub
daa
aad
mov
mov
pushf
xchg
sbb
sub
cmp
xchg
cltd
xchg
mov
dec
jns
test
or
mov
pop
loop
adc
and
jecxz
pop
mov
xchg
push
shlb
xchg
int
imul
stc
fdiv
jg
fisttpl
cwtl
xchg
inc
sub
xchg
add
jg
add
adc
xchg
mov
mov
mov
daa
xorl
mov
dec
mov
aad
push
xchg
pop
jns
popa
jo
xlat
xchg
test
cmp
rcrl
xor
mov
mov
jge
adc
cld
popa
ja
mov
das
mov
cmpb
mov
into
push
fsubs
lea
fadds
hlt
cmp
jbe
mov
push
mov
scas
jae
fcoml
adc
adc
es
mov
xchg
ljmp
mov
mov
cld
sub
cli
outsl
mov
fisubrl
negb
mov
push
dec
push
cmp
in
ss
fisubrs
jnp
pop
arpl
repz
jg
mov
lahf
dec
cmp
sbb
divb
mov
or
lock
xor
inc
leave
adc
and
mov
xchg
in
imul
fnstenv
stos
push
mov
sbb
xchg
mov
jge
rorl
and
push
rcl
xor
mov
dec
lock
jp
popl
sbb
inc
mov
ds
mov
int
mov
mov
cwtl
and
sbb
lds
sbb
dec
ds
in
test
xchg
push
inc
mov
and
fcoms
ss
mov
push
dec
inc
in
push
jge
cltd
mov
sbb
mov
push
mov
xlat
mov
or
addr16
pushf
in
shl
test
pop
stos
sti
cs
lock
or
and
xchg
cmp
dec
imul
cmp
sub
adc
xchg
push
jg
cmp
out
mov
mov
fisttpl
aaa
repz
sbb
sub
ljmp
stos
sti
cmp
ret
hlt
pop
push
sub
lcall
sbb
mov
shlb
pusha
out
push
add
aas
inc
inc
jo
mov
sub
mov
inc
int
addl
js
sub
jl
adc
test
adc
cmp
jg
or
sub
andb
sbb
aas
test
adc
fidivs
lret
aad
mov
push
add
jecxz
aad
adc
pop
out
shll
sti
enter
js
cmp
cmpsl
mov
mov
mov
loopne
lcall
out
mov
sbb
sbb
enter
mov
xlat
push
pop
into
pop
sbb
xor
ret
int3
mov
and
in
push
fcomps
pop
dec
imul
and
xor
bound
push
xor
cwtl
adc
fildl
inc
aas
lock
jbe
ja
out
cmpb
mov
data16
pop
push
xor
iret
sbb
pop
daa
scas
test
and
outsb
je
cmp
ret
sub
inc
xchg
mov
je
push
pop
and
subb
add
sbb
cwtl
mov
pop
cld
push
pop
nop
mov
or
int3
repz
and
cltd
into
mov
imul
and
sahf
sti
inc
sub
repnz
pop
hlt
stc
push
lea
sahf
xchg
pushf
adc
mov
xchg
xchg
mov
shlb
cmp
and
test
mov
and
cmc
popf
loopne,pt
push
fucomp
mov
push
out
test
xor
in
imul
sahf
std
push
pushf
cmp
sbb
mov
pop
clc
movsb
lret
out
and
repz
inc
cmp
add
jb
cwtl
movsb
xor
adc
cmp
ss
sbb
cli
jbe
pop
dec
stc
adc
mov
jmp
iret
adc
movsb
outsb
cmpl
pop
roll
add
and
insb
jle
sbb
sbb
or
mov
xchg
mov
add
jle
mov
or
pop
je
es
test
out
loopne
fs
lods
aaa
hlt
sti
rclb
leave
lock
pushf
stc
xchg
cwtl
or
dec
add
and
cmp
scas
mov
push
sbb
sti
add
inc
xlat
cmp
jmp
aaa
clc
xchg
repnz
mov
and
test
outsb
mov
push
mov
fcompl
stos
mov
cmp
mov
fsubs
pop
imul
add
aas
idivl
push
jne
inc
lods
dec
dec
cmp
cwtl
fcmovnb
adc
xchg
icebp
sub
cwtl
lea
mov
jmp
pop
mov
pop
push
pop
jb
mov
mov
push
mov
jecxz
rol
jnp
dec
mov
cli
bsr
cwtl
lods
xor
mov
mov
jns
xchg
repnz
lds
fildll
aam
pop
shrb
mov
lock
data16
dec
aaa
aaa
out
inc
call
addb
xchg
xor
enterw
mov
shl
test
pop
xchg
pop
xchg
cmc
sub
mov
mov
mov
push
popa
loopne
in
push
pop
sbb
test
xchg
sbb
push
push
push
pusha
xchg
adc
lea
scas
mov
scas
jmp
xchg
repz
sbb
cmp
mov
inc
jae
gs
push
inc
mov
pop
ja,pt
adc
sahf
xor
sti
iret
mov
mov
fadds
fwait
mov
sbb
sbb
and
fcoml
stos
pop
or
inc
or
scas
ficomps
or
mov
test
fstp
mov
sahf
mov
push
sbb
fs
cwtl
xchg
fld1
xchg
aas
xchg
shrl
mov
xchg
xchg
pop
cmp
xchg
adc
popa
pushf
sbb
cs
fsts
lods
mov
shll
jo
pop
xchg
mov
out
je
or
mov
hlt
inc
fwait
mov
jnp
push
sub
mov
aas
sbb
sbb
bswap
mov
mov
pop
and
jae
add
jmp
lret
pop
adc
mov
lcall
daa
dec
loop
xchg
das
fidivl
sti
and
push
inc
mov
sub
xchg
push
mov
lret
dec
sub
ficompl
gs
pop
es
sbb
aas
adc
dec
in
mov
jl
mov
into
addr16
xlat
mov
scas
and
push
mov
iret
insb
imul
mov
mov
fcomi
jmp
in
add
dec
pop
push
sub
or
xorl
inc
mov
cmp
jge
cltd
mov
cmp
sub
into
fwait
lcall
fmuls
ss
jnp
movsb
shrb
fwait
in
andb
pop
repz
mov
pop
imul
lods
or
lds
sbb
fwait
xor
cmpl
mov
cmp
mov
fwait
pop
adc
pusha
sti
les
mov
and
addb
cwtl
sub
cmp
pushf
push
sbb
repz
loope
push
ficomps
out
insl
lahf
xor
ret
inc
sbb
mov
push
cmpb
pushf
jl
mov
in
mov
jp
xchg
ljmp
adc
mov
lods
push
addb
sub
cmp
mov
ror
sub
sub
jae
adc
ss
andl
and
movsb
aas
cli
stos
cld
jg
cmpsb
adc
cmp
or
jg
mov
ret
xor
pop
mov
rorb
nop
mov
jg
test
mov
mov
xchg
mov
lea
lea
fnstenv
test
cwtl
in
not
loopne
cmp
inc
dec
cmp
les
std
mov
add
bound
mov
cmp
xchg
xor
mov
mov
ss
fsubrs
cmpsb
sti
dec
imul
adc
mov
and
cwtl
xlat
fucomp
mov
inc
ret
hlt
xor
cmp
mov
hlt
es
dec
push
cwtl
or
pop
pushf
mov
xorl
push
cmpsl
fimuls
cs
xchg
lds
inc
inc
fstpt
into
pop
dec
ja
loopne
xchg
sub
pop
xor
outsb
fmull
cmp
int
into
fwait
push
out
sbb
xor
xchg
cwtl
xchg
popf
xchg
filds
push
clc
add
xlat
push
rcrl
inc
cmp
sbb
test
and
lock
fwait
adc
pop
insl
pop
jne
ds
push
xchg
rcrb
stos
lcall
mov
dec
sahf
mov
testb
lds
xchg
shll
and
out
jbe
xor
cmpsl
lret
mov
jne
xchg
cmp
sbb
jo
jecxz
scas
xor
xor
in
pop
push
fisubrs
popf
sahf
sti
jns
in
movsl
repnz
push
lock
mov
jmp
test
cld
cmp
sbbl
outsl
aam
js
pop
test
stc
xchg
jno
jno
cmpsl
daa
loopne
push
imul
cmpsb
popa
push
bound
fs
xchg
imul
jle
out
lahf
pop
lret
fldenv
sub
xor
add
insl
sbb
adc
out
inc
mov
pushf
xlat
push
and
mov
scas
out
xchg
add
inc
mov
cmp
cmpb
loop
stos
sti
sub
aam
pop
xchg
cmp
mov
sbb
cmp
lods
pop
hlt
fwait
jno
lret
pushf
pop
pushf
xchg
jno
gs
das
push
jle
dec
test
clc
xor
sti
sbb
into
jmp
pop
pop
pushf
in
lds
outsl
jg
lods
inc
inc
clc
repz
mov
in
int3
cli
mov
outsl
roll
cmp
sub
mov
outsb
mov
cmpsb
pop
lods
les
mov
mov
je
lcall
in
push
in
mov
push
ljmp
sbb
push
mov
pop
repz
mov
pop
ja
cmp
and
sbb
push
mov
pusha
in
jnp
repnz
add
push
add
xor
insb
and
scas
xchg
leave
addr16
mov
mov
push
push
pop
xor
mov
ja
mov
sbb
jle
adc
jg
dec
xchg
rorl
cmp
packsswb
xchg
and
mov
mov
pusha
adc
icebp
mov
stc
cmp
mov
out
sbb
pop
jle
lea
lods
fstpl
leave
cmp
pop
ficomps
cmpsl
out
je
decb
jns
jno
sbb
xchg
pop
in
add
xor
dec
mov
orb
pushf
xor
in
in
sub
cmp
movsl
andb
mov
js
sub
adc
sahf
mov
jb
out
std
clc
fwait
jns
fwait
add
ss
cmp
fisttpll
mov
test
and
adc
aas
roll
movsb
and
cmp
pop
lea
call
jge
mov
xchg
sti
insb
pushf
popf
dec
scas
push
or
repnz
mov
sbb
mov
fidivrl
cmp
mov
es
mov
jecxz
lret
jl
scas
aam
mov
mov
adc
je
cmp
sbb
outsl
cmp
cs
push
fiaddl
sbb
adcb
les
loope
into
push
sti
sbb
pop
mov
inc
and
insb
jle
xchg
cmc
push
or
sub
in
out
mov
jp
add
rclb
shl
std
es
mov
lcall
sub
cmp
lock
adc
out
je
mov
test
xchg
imul
cmp
add
mov
andl
es
adc
cmp
xor
shll
shl
fwait
movl
pushf
lret
sahf
or
into
cmp
cwtl
sbbb
or
xor
mov
sahf
es
test
pushl
pushf
or
xor
mov
popa
mov
or
cmp
push
movsb
xchg
push
mov
lahf
mov
jle
mov
sub
cmp
mov
orb
and
jnp
jle
fsubs
pop
xor
lret
mov
loope
mov
cmp
mov
js
std
mov
lret
jbe
out
pop
mov
fsts
push
shr
pushf
mov
cmp
cld
jg
rcll
mov
sub
mov
dec
sbb
int3
cmpsl
dec
cmp
xor
aam
mov
ss
jg
xorb
cmp
push
notb
sbb
or
inc
loop
stos
and
fimull
push
adc
out
cltd
sbb
incb
pop
sahf
mov
or
cmp
cmp
mov
mov
cmp
mov
mov
jne
adc
aad
mov
cmp
jmp
sti
int3
cmpsl
inc
mov
imul
cmp
push
or
popf
sbb
mov
out
push
mov
xor
lods
ret
mov
mov
dec
pop
push
in
adc
cmpsl
sahf
push
cmpsb
sti
mov
xchg
div
js
ret
pushf
mov
lods
xor
lock
mov
pop
call
push
ficomps
xchg
mov
cmpsb
xor
adc
xorl
enter
into
pushf
jl
cmp
adc
push
pushf
sti
in
loope
sbb
daa
xchg
sbb
pop
and
mov
dec
cld
clc
mov
mov
pop
fs
mov
pop
in
test
mov
aam
fwait
sbb
mov
dec
cmc
mov
or
ret
jo
stc
out
xchg
push
xchg
sub
fadds
in
push
push
addl
fs
out
movsl
cltd
cmpsb
ds
sub
in
repz
fisttpl
inc
push
lock
lea
xchg
sub
mov
sbb
ja
mov
sbb
mov
mov
decl
push
imul
sbb
orb
cltd
sub
xchg
xchg
cwtl
clc
inc
in
mov
adc
std
pop
in
pop
das
scas
ljmp
push
mov
mov
sub
xchg
ret
pushl
sbb
lahf
jp
xchg
scas
data16
cmpsb
lahf
negl
cli
fdivrs
sbb
sub
mov
adc
into
mul
pop
mov
repz
inc
in
push
movsb
cmp
dec
mov
cmp
mov
clc
imul
pusha
or
mov
adc
jg
lret
lret
iret
inc
and
inc
jle
add
mov
js
loope
inc
outsb
pushf
push
inc
sbb
fstpl
xchg
ljmp
fcoms
call
cmp
ds
and
xchg
cmp
sbb
cmpsb
sub
xorb
jns
lods
out
imul
mov
int3
fiadds
sti
jmp
and
mov
out
inc
inc
movsl
adc
je
pop
xchg
movsb
sbb
sbb
xor
sbb
cli
cmc
es
les
jmp
fwait
mov
xchg
cmp
push
pop
dec
test
fs
addl
mov
jnp
aad
xchg
fbstp
pushf
fcoms
cmpsb
mov
cmp
xchg
xchg
pushf
test
fistpll
and
fsubrl
xor
jecxz
pushl
mov
mov
jl
mov
enter
fcoms
sub
fstp
aas
std
lret
jecxz
sub
ret
push
mov
icebp
or
push
pop
adc
cli
xchg
jg
jl
mov
xor
sbb
call
jnp
aaa
lods
push
repnz
fnstsw
aad
orb
mov
mov
fidivs
adc
and
adc
jecxz
psllq
jno
mov
jmp
cmp
lds
or
repnz
mov
mov
add
clc
xchg
cmp
ds
jmp
and
inc
out
or
xchg
push
rolb
in
mov
cli
dec
popf
lds
sub
pushf
pusha
pop
mov
das
mov
fdivrl
out
cmpl
and
lahf
repz
loop
push
jbe
mov
adc
cmpsl
in
sbb
nop
mov
inc
jno
fs
cmp
or
xor
clc
jle
jg
pop
mov
lock
xor
mov
lock
aad
xor
pop
mov
add
and
sti
cmp
inc
mov
mov
jg
push
in
pop
in
fsubs
jge
test
fnsave
mov
movsb
dec
pop
rorl
fs
pop
sahf
pop
xchg
adc
negl
into
mov
sub
sub
mov
rolb
xchg
xchg
sbb
mov
mov
jne
mov
sbb
mov
in
aaa
and
sbb
bound
xor
cmp
pop
ljmp
aas
outsl
mov
xchg
fists
lret
mov
lock
mov
vpmulhw
ss
dec
push
jb
push
add
sbb
add
sbb
roll
je
push
in
sbb
mov
int3
in
movsb
jg
cmp
adc
in
pushf
js
orb
outsl
mov
call
adc
xor
adc
xlat
mov
daa
lret
repnz
fdivs
les
cwtl
scas
jnp
and
aas
jmp
pop
pop
ret
ja
xor
sahf
mov
adc
adc
sub
push
xor
jae
xchg
out
test
outsl
jge
xor
pop
fwait
jp
insl
sbb
xorl
xlat
jae
pop
sbb
mov
xchg
xchg
jl
cmp
cwtl
cmp
and
subps
aas
mov
test
fwait
jnp
xchg
and
mov
loope
sub
cmp
xchg
mov
fdiv
ss
sbb
lock
sbb
imul
jno
mov
or
fldt
mov
mov
in
insb
sub
hlt
mov
xlat
add
fcmove
fldl
cwtl
jae
cli
sahf
sbb
and
sbb
jl
lods
insl
xchg
pop
fistpl
pop
add
out
ret
testb
xchg
pop
pop
sti
aam
loope
mov
mov
in
cmp
fadds
jae
pushf
push
call
test
mov
clc
mov
outsb
push
mov
mov
fadds
cwtl
mov
ret
cwtl
sbb
fs
mov
mov
movsb
push
and
inc
fwait
stos
js
xor
mov
adc
sbb
jg
pop
push
dec
mov
or
xchg
mov
xlat
into
inc
adc
add
je
cwtl
mov
jge
adc
mov
js
xchg
imul
js
fcomp
divb
fcomps
stos
fwait
mov
cwtl
mov
jnp
sti
xchg
out
leave
or
jp
sahf
jbe
mov
cmp
dec
jecxz
sbb
push
les
imul
cmp
push
imul
push
shll
pusha
orb
data16
jb
jb
mov
mov
loope
sbb
jmp
mov
xchg
mov
imul
mov
xchg
cmp
test
aaa
pop
dec
in
jle
les
adc
aam
lcall
sub
pop
sti
shrl
cwtl
ljmp
mov
gs
aam
test
adc
sbb
mov
je
addr16
xchg
push
mov
or
movb
inc
mov
scas
pushf
int
sub
inc
aaa
aad
xchg
hlt
out
fimull
fsubl
das
xor
push
scas
mov
adc
inc
mov
jb
mov
jp
jg
jecxz
fimull
fs
cli
clc
push
inc
mov
mov
pusha
jge
inc
adc
mov
jmp
inc
call
scas
jnp
pop
pop
jbe
add
pop
imul
pop
shll
sahf
and
ja
pop
mov
push
jmp
pop
pushf
add
cmp
lahf
scas
aas
push
flds
add
add
sti
cs
rcrl
inc
and
mov
out
lahf
and
xchg
jnp
mov
sbb
add
lds
sbb
push
or
dec
add
pop
mov
mov
setb
mov
inc
cli
dec
pop
iret
sbb
lods
cmp
xchg
ljmp
fstps
fidivrl
andb
sub
xchg
and
pop
xchg
cmc
mul
cwtl
inc
jnp
dec
xor
and
dec
dec
xor
cmp
adc
sbb
ljmp
push
xchg
test
fistl
call
cmp
sub
adc
frstor
dec
ret
dec
mov
dec
or
cmpsl
and
daa
ja
xor
fsubrl
lret
aad
bound
jl
dec
and
pushf
mov
xchg
mov
xchg
pusha
in
sub
adc
mov
mov
pop
cmc
xor
push
sub
xchg
cmp
arpl
aas
popa
xchg
xor
fwait
lods
aas
imul
mov
data16
dec
cmp
sar
scas
sahf
jmp
fstpt
into
mov
push
fld
iret
repnz
push
push
faddl
mov
dec
out
cmpl
mov
xlat
cmpsb
ret
scas
addr16
data16
rcll
and
shll
adc
and
fdiv
sub
cmc
push
xchg
cs
in
std
mov
cltd
and
jo
add
aaa
vaddps
sub
jnp
fildl
or
das
ss
rcll
ds
jno
mov
pop
mov
fbstp
mov
mov
add
add
cmp
clc
mov
daa
js
mov
cmpsb
cmp
mov
push
xor
xchg
ficomps
and
jnp
sub
imul
inc
cwtl
lods
mov
adc
aas
jnp
pop
jp
lock
jb
mov
aad
mov
pop
pusha
mov
aas
xor
inc
in
or
push
cmp
hlt
loopne
out
cmpb
jbe
fadds
loope
pusha
xchg
rorl
in
cld
scas
fwait
mov
lahf
cld
adc
sti
aas
or
scas
fdivr
dec
shl
mov
pushf
cmp
xchg
or
ffree
int
push
out
jae
xor
bound
adc
xchg
mov
pusha
int
push
push
test
out
mov
stc
fdiv
lret
mov
xchg
adc
fistpl
mov
cmp
push
sbb
fmul
sbb
cli
push
and
adc
xchg
mov
lock
mov
out
rorl
inc
cli
movsl
mov
mov
jmp
xchg
rcll
subb
dec
and
mov
ds
mov
fildl
jo
imul
jle
mov
xor
dec
mov
ret
cmc
cmp
cmc
les
sbb
jp
mov
jmp
sub
aam
push
push
insb
push
cltd
and
sub
test
dec
cmp
imulb
lcall
add
shrb
cmp
cmp
push
incl
fisttpl
xor
rorb
mov
out
ficompl
cmp
addl
pushf
mov
mov
enter
or
pop
sub
loopne
mov
inc
jg
sub
mov
mov
dec
dec
cmp
pop
mov
out
lods
std
call
pop
jae
push
ljmp
call
mov
cli
jmp
call
std
xor
mov
orb
ss
pushf
roll
out
mov
add
inc
cmp
ficoms
lea
fwait
cwtl
mov
and
repnz
sahf
inc
in
sub
jl
dec
push
addr16
xchg
rcr
mov
out
data16
scas
pop
clc
clc
push
mov
addr16
mov
adc
stos
loopne
mov
xchg
pushf
sub
push
pop
int
jo
je
test
cwtl
inc
push
jns
xor
daa
das
adc
sbb
xchg
mov
aam
clc
cwtl
sti
adc
test
xchg
pop
mov
adc
sbb
out
pushf
repnz
inc
cmpl
add
repz
sarl
lock
mov
test
insl
mov
fsubrl
aaa
cld
arpl
test
inc
lods
cmp
dec
cmp
xlat
cmpsl
xor
sub
push
mov
imul
std
cld
aas
jp
pop
jns
mull
xchg
icebp
adc
xchg
mov
mov
add
or
cwtl
jnp
adc
out
leave
jle
loopne
repnz
pop
and
cmp
int3
shlb
les
jl
inc
and
mov
out
arpl
outsb
ja
sbb
sub
fs
xchg
pop
stmxcsr
les
fs
fmul
mov
add
mov
cli
or
pop
scas
push
sahf
add
dec
cld
push
test
repnz
pop
fldcw
lahf
call
or
iret
pushf
sub
enter
mov
xchg
push
jmp
dec
sbb
mov
ret
or
rcrb
sbb
mov
xchg
mov
and
test
xchg
lahf
cwtl
lods
push
mov
orl
pop
cmp
xor
idivb
jb
add
adc
nop
pop
lcall
adc
jo
lods
adc
notl
jecxz
pushf
mov
push
lea
dec
out
mov
add
cmp
jnp
repz
push
test
int3
ja
cmpl
lds
jno
cmp
clc
ret
jl
adcl
lock
jns
lods
fdivrl
cmp
fsubrl
sub
aas
insl
pushf
mov
lods
leave
scas
sbbb
movsl
cmp
loop
mov
subl
mov
inc
sub
dec
mov
test
jbe
jnp
mov
popf
sti
test
sub
mov
stos
cvtps2pd
in
fdivl
mov
imul
dec
lahf
push
cli
sbb
out
pop
fadds
and
out
in
enter
call
cmp
daa
pop
imul
xchg
lcall
vunpckhps
push
mov
movsl
mov
out
sub
sbb
adc
mov
ja
inc
jmp
icebp
sbb
xchg
sbbb
adc
mov
clc
daa
fmull
cmp
xchg
pop
jg
lds
add
sbb
dec
xor
movd
xchg
scas
ret
daa
fidivrl
push
stc
push
or
and
cmpsl
jae
sbb
lcall
mov
cmp
jmp
xchg
into
xor
insb
and
fdecstp
mov
push
fcompl
aam
mov
sti
inc
subb
sbb
ret
loope
inc
pop
icebp
xor
push
mov
andb
pop
mov
jge
pop
mov
xchg
cmovnp
mov
lea
inc
and
dec
test
xchg
mov
adc
jb
inc
mov
cmp
insb
test
shl
fsub
cmpsb
pop
cmp
mov
imul
push
pop
adc
cmpsb
xor
nop
lods
or
adc
into
out
sti
ja
out
jb
aam
aas
mov
jge
adc
cwtl
stos
jnp
xchg
dec
insl
lret
adc
mov
lret
daa
xor
aas
inc
pop
xchg
inc
mov
mov
mov
jmp
pop
out
push
cmpb
add
cmp
movsl
stos
pop
fs
cli
in
or
leave
pop
or
push
fbstp
xor
jmp
cmp
pop
cs
loopne
jp
push
sbb
lods
jg
jmp
das
aaa
jecxz
mov
sbb
xor
pop
loopne
adc
sbb
push
lahf
outsl
out
or
adc
repz
cltd
lods
fistps
xchg
mov
rorl
pop
dec
pop
jl
jmp
inc
aam
sbb
dec
hlt
pop
mov
mov
stos
scas
jnp
fsub
mov
data16
in
notb
enter
mov
push
fs
lret
sbb
stos
loope
pop
mov
addb
fsts
mov
shll
sub
mov
inc
inc
nop
cwtl
mov
mov
pop
pushf
push
popa
adc
rorb
fsubl
push
in
daa
mov
sti
popf
fsubrl
cli
add
mov
xor
clc
loop
xlat
xor
xchg
jbe
jge
ja,pn
scas
mov
mov
ret
xor
pop
es
sbb
sbb
push
sub
lods
cmp
in
sub
mov
stos
test
cmc
and
fs
loope
add
cli
nop
insb
in
enter
mov
xchg
fnstsw
mov
lock
lret
sbb
push
dec
jp
push
jl
or
jl
in
mov
pop
pushf
and
repnz
ret
aas
mov
andl
mov
jb
jmp
enter
cmp
mov
adc
pop
cmpsl
push
fnstcw
jbe
sbb
mov
mov
push
clc
stc
sbbl
mov
loope
fwait
mov
inc
fdivrl
xchg
jg
push
btc
add
ret
cwtl
sti
test
mov
gs
sbb
scas
dec
xchg
pop
mov
sbb
mov
std
xor
in
outsl
dec
leave
pop
repz
test
mov
mov
es
sarl
inc
and
ds
lods
mov
mov
sahf
shl
mov
mov
ds
mov
lock
lret
fwait
pop
sbb
popl
sbb
or
mov
movsb
test
adc
sti
adc
lea
jmp
xchg
lcall
add
or
incl
iret
jmp
enter
arpl
push
mov
mov
call
cmp
in
dec
iret
sbb
into
lcall
inc
shll
dec
jmp
lods
out
lcall
push
stc
mov
loop
sub
stos
lods
cs
jle
orb
jne
pop
cld
loop
push
push
scas
cmp
fwait
out
add
sbb
test
fildl
mov
xlat
pop
push
daa
pop
cli
fisubs
popf
scas
jbe
jae
and
mov
sbb
lret
into
push
cli
in
and
cltd
pushf
mov
adcb
jo
pop
inc
fcomps
es
xor
lahf
and
jl
push
in
xlat
xchg
pushf
mov
cmpsb
sub
inc
mov
add
in
pop
or
sti
add
call
lcall
inc
jge
rol
mov
adc
imul
shlb
test
in
push
and
fadds
scas
push
stc
inc
mov
lahf
fldt
push
mov
jmp
sbb
outsb
sbb
test
cmp
lds
inc
sub
sahf
jl
add
test
xlat
push
xor
mov
xchg
xor
std
xchg
mov
call
subb
cmp
cmp
lock
cmovge
mov
jbe
cmpsb
xchg
int3
addb
pop
dec
call
out
lods
jge
jp
shl
or
fiadds
dec
push
lock
mov
and
jne
jns
fstps
push
mov
jmp
sti
pop
adc
movsb
inc
out
mov
lcall
mov
movsl
imul
js
mov
je
xlat
mov
dec
dec
jge
cmp
fwait
out
outsl
pushf
xchg
fcmovne
dec
repz
push
aas
push
dec
stos
jp
in
fdivl
sqrtps
sbb
stos
aas
mov
ljmp
out
mov
es
movsb
jg
nop
das
xor
hlt
pushf
mov
test
clc
xor
xchg
ja
dec
mov
mov
je
out
out
iret
mov
and
mov
lret
pop
xor
lea
pop
fbld
call
dec
pop
sbb
roll
cmc
es
lea
nop
mov
loop
les
jp
cmp
lods
jg
push
pushf
cmp
cmc
scas
mov
outsb
lds
cwtl
repz
popf
iret
les
sahf
jp
jo
mov
pushf
sbb
mov
and
cwtl
pop
dec
jp
call
repz
out
out
pop
sub
add
pusha
into
xlat
pop
inc
pushf
sbb
fwait
jo
and
and
mov
icebp
imul
xchg
cwtl
je
jmp
rcll
jmp
push
cmp
and
cld
loop
add
fcompl
dec
cld
mov
push
fsubrl
jne
pop
incb
adc
aas
mov
push
loopne
cli
mov
jb
sub
imul
or
in
shlb
int3
sti
mov
idivl
cmp
sti
int3
jne
adc
movb
shr
cmp
xchg
inc
dec
sahf
jp
repz
repz
ljmp
sub
xchg
movsl
cwtl
xchg
cwtl
pop
popa
fcmovu
pop
mov
xor
lret
in
lods
fsubrs
inc
lcall
lods
cmc
hlt
mov
mov
jge
xchg
lods
test
sbb
mov
jns
mov
jnp
lods
sti
dec
outsl
out
fwait
lahf
pop
out
xor
lds
xchg
push
es
mov
sti
adc
xchg
shrl
push
jae
sbb
and
aaa
mov
ds
icebp
enter
or
fcomps
jae
dec
nop
mov
testb
loop
fsubl
cli
mov
mov
xorb
pop
xor
jnp
lds
daa
cli
mov
inc
stc
sbb
xor
adc
pop
mov
mov
test
cmp
mov
repnz
leave
xchg
lret
sub
and
mov
ret
in
dec
pusha
gs
dec
mov
imul
ja
mov
test
pop
sar
js
sarb
cmp
in
movsl
ja
shll
and
insb
lcall
cld
mov
lea
out
mov
arpl
jmp
mov
cmp
aaa
pop
xchg
cmp
mov
sbb
scas
sti
aas
and
faddl
mov
fnstsw
mov
dec
fcoml
push
sahf
stos
mov
mov
and
cltd
xlat
mov
lods
in
dec
pop
mov
lds
xchg
mov
inc
ficoml
loope
hlt
in
mov
pusha
stos
mov
mov
mov
sbb
inc
es
pusha
inc
sbb
xchg
ljmp
int3
mov
lcall
clc
lods
cs
pop
ds
lods
mov
clc
and
shll
std
clc
mov
nop
fadds
fwait
movl
xor
sbb
into
jmp
jbe
out
xor
jg
cli
add
cmp
lahf
sbb
mov
cmp
mov
lods
dec
cmp
cmp
mov
mov
ret
mov
popf
dec
shlb
cmp
hlt
cmpl
cwtl
call
call
pushf
test
leave
mov
xchg
in
add
dec
std
clc
xlat
mov
pop
xchg
test
hlt
int
rcr
ljmp
add
movsl
sti
leave
push
push
out
test
cmp
rclb
inc
xchg
repz
call
inc
test
rcrl
shlb
xchg
enter
cmp
mov
cltd
pop
cld
cs
cmp
jmp
cwtl
repnz
pop
pop
sbb
test
scas
test
testb
cmpsb
jg
test
mov
sahf
call
pop
into
xchg
jbe
stos
push
ljmp
cmp
adc
scas
dec
aam
jg
sbb
mov
push
pop
xor
mov
int3
and
fmuls
mov
mov
push
insl
imul
frstor
mov
das
adc
stos
or
std
sti
inc
jl
jnp
mov
push
mov
in
dec
cmp
mov
push
scas
cmp
mov
jno
cmp
mov
cld
dec
mov
fdivl
in
xchg
aas
sbb
data16
dec
jns
fmull
push
int
sti
adc
bound
inc
mov
mov
adc
cmpsl
test
adc
hlt
sbb
jl
and
dec
xor
into
stos
addl
idivb
push
sub
leave
pushf
lods
push
cs
mov
rcrb
sbb
xchg
cmp
xchg
in
xchg
nop
stos
fldt
outsb
dec
sub
jmp
stos
sbbl
out
dec
inc
leave
dec
fmuls
jg
sbb
movsb
dec
shll
cmpl
jnp
sub
aas
pop
lcall
ror
nop
xchg
in
sub
mov
cli
mov
push
pop
repz
adc
sub
addr16
out
adc
subb
cs
addb
xor
mov
mov
imul
in
cwtl
sbb
inc
mov
pop
call
xchg
ss
negb
ljmp
sbb
icebp
inc
repnz
enter
add
out
js
jle
pushf
jbe
sub
out
js
ret
sub
mov
xchg
mov
jle
into
repz
scas
mov
lahf
not
dec
sub
mov
add
pop
pop
dec
push
or
sub
clc
ja
loope
mov
mov
and
scas
movsb
mov
jl
movl
sub
cmp
and
cmpsl
aas
jae
test
mov
loop,pt
mov
lahf
aas
dec
jb
xchg
addr16
push
loopne
out
shrb
add
jge
aas
notl
pop
inc
scas
sbbb
cwtl
iret
clc
pop
inc
sub
cli
sub
pop
xchg
mov
enter
sbb
xor
push
pop
lock
movsl
pop
pop
inc
xor
imull
lret
xchg
sbb
cmc
cwtl
stos
add
sti
je
jne
shll
roll
and
movsl
mov
les
xor
imul
int
es
xor
mov
lret
push
pop
jbe
xor
jg
xor
sti
rcrl
sbb
pop
sti
mov
test
mov
mov
xor
ds
or
aas
jno
cmp
je
sbb
pushf
stos
jno
cmpsl
je
mov
lods
sti
push
and
cmp
and
stc
xchg
jno
lret
fcomps
aas
dec
jnp
and
enter
rcrl
imul
lahf
fcoms
daa
or
adc
sbb
cmp
push
push
sub
fistpll
pushf
jne
enter
les
xchg
pop
lods
sbb
sbbl
pop
fcoml
pusha
movsb
aas
cmp
daa
cmc
mov
sbb
test
or
and
outsb
adc
mov
adc
mov
xchg
or
idivb
loopne
push
sub
testb
or
ffree
pop
bound
out
cmp
in
or
fwait
push
mov
movsb
int
loopne
or
inc
cld
sub
mov
xchg
pop
mov
mov
unpcklps
pushf
sbb
xor
push
ds
lds
jbe
out
adcb
sbb
fwait
mov
sbbb
test
inc
jae
pop
or
dec
pushf
or
sub
dec
push
fs
int
scas
aas
fstl
test
pop
hlt
push
pusha
inc
xor
pop
es
pushf
test
pushf
jnp
outsb
pop
pop
sub
insb
xor
and
fdivrl
pop
mov
aad
mov
jge
pop
inc
mov
pop
pop
inc
jmp
fbstp
cli
mov
aas
int
dec
in
mov
je
mov
or
cmp
mov
cmpsl
mov
lock
mov
cmp
mov
and
sbb
fs
add
inc
fsubrs
dec
jbe
xor
inc
cmp
cmp
or
pushf
pop
ret
xchg
jne
pushf
outsb
cltd
rcr
push
mov
mov
cld
lods
xchg
cld
or
jle
popa
iret
mov
loopne
fsubl
push
rol
cmp
sahf
dec
lcall
mov
add
addr16
cwtl
sbb
popl
xchg
mov
leave
jge
cmc
or
mov
xchg
in
movsb
ret
icebp
faddl
ret
ret
dec
aaa
and
in
pop
jl
insl
leave
jo
jnp
inc
aas
jp
movsb
inc
rol
xchg
pop
cmp
lahf
jecxz
mov
dec
shl
ja
aad
aas
mov
cmp
xchg
andl
jp
aam
mov
cltd
mov
cmp
cld
fidivs
cmp
jno
push
orl
xor
jns
andl
adc
in
mov
incl
push
push
inc
mov
and
xor
and
jl
pop
ds
andb
ss
mov
and
pushf
rcrl
xchg
aad
push
dec
sbb
cwtl
mov
cwtl
sti
push
lret
xlat
and
mov
jne
add
cmpsl
xlat
add
aad
xchg
dec
pop
pop
pop
mov
mov
pop
lods
cmp
loope
xor
lret
out
pushf
sbb
mov
dec
out
fwait
lds
pop
out
jae
jmp
mov
add
imul
sub
aas
loopne
into
stos
ss
or
adc
dec
jmp
sub
repnz
inc
imulb
cli
push
jae
into
sahf
sti
fistps
add
inc
add
fcom
je
icebp
pop
mov
shrb
ljmp
mov
and
scas
push
adc
sbb
sbb
popf
pushf
scas
mov
push
hlt
faddp
push
pop
adc
inc
push
test
xchg
hlt
test
jbe
sti
cmp
test
ja
sbb
rcr
push
cmpsl
hlt
stc
cmp
loopne
lret
dec
aas
sbb
jl
mov
rclb
mov
mov
lar
pop
xchg
adcl
jp
mov
fidivl
mov
dec
cmpl
mov
jnp
ret
adc
adc
dec
out
mov
aam
rolb
testb
mov
je
lcall
arpl
cmpsl
dec
lods
or
psubd
and
fwait
cmp
fdivl
sub
js
jecxz
sbb
je
and
pushf
jnp
in
mov
leave
mov
shlb
dec
imul
iret
sub
fcompl
into
jo
sub
push
not
fs
mov
pop
popf
hlt
inc
sub
scas
push
mov
cs
ret
fistpll
cmp
cmp
cmpl
dec
jecxz
movsl
cmp
or
out
mov
aad
pop
outsb
xor
sbb
cmpsl
pop
fsubs
jbe
test
push
ss
pop
jl
dec
aaa
pushf
js
jl
cli
sbb
cli
mov
push
xchg
mov
and
ja
push
jg
testb
jecxz
mov
mov
adc
add
loop
in
adcb
into
fcomps
jg
popf
inc
dec
sahf
mov
scas
cmp
iret
incl
ret
xlat
add
fstps
jb
mov
jnp
in
sub
sbb
movsb
addb
cmp
inc
sbb
mov
pop
in
lods
scas
cwtl
inc
movsl
pop
push
xchg
jg
jle
in
mov
add
sbb
cmp
decl
mov
add
cmp
cmpb
mov
pop
jp
rclb
sbb
movsl
dec
jl
jl
sahf
inc
repnz
mov
dec
jp
jle
adc
mov
xlat
mov
mov
add
cmp
push
ss
mov
mov
pop
xor
xor
outsl
cmp
xchg
cmp
adc
hlt
pop
imulb
out
xchg
pop
aaa
fstpl
xlat
ficoml
adc
xchg
mov
dec
daa
sub
cmp
sbb
jno
lea
inc
or
mov
inc
fcomp
addr16
ds
in
sbb
xor
fmull
and
cmp
enter
sbb
icebp
test
sub
jecxz
fmull
mov
movsl
iret
das
push
imul
jbe
fsubs
aas
daa
adc
or
push
add
and
xor
jp
sti
add
xor
xchg
sbb
orb
bound
insb
add
mov
decl
push
ja
mov
adc
shrl
xor
dec
mov
cmpsl
cmc
inc
mov
insb
mov
push
movsb
cmp
inc
dec
mov
sub
mov
hlt
icebp
sbb
mov
xor
es
push
and
cmpsb
insl
inc
mov
push
sub
and
cmp
xchg
pop
fadd
fsubl
jp
or
gs
fildl
dec
jno
and
sbb
ffree
mov
xchg
pushf
jmp
pushf
imul
call
fst
out
lea
or
pushf
js
xchg
jno
inc
fdivr
add
insl
inc
out
jnp
repnz
xor
sub
cmp
aas
sbb
add
call
scas
ds
pop
push
or
pushf
pop
push
xor
int3
lret
je
push
sti
cmpsb
mov
mov
push
aam
jl
inc
push
pushl
lods
inc
jae
pop
clc
mov
mov
pushf
fistpll
add
xlat
cmp
xor
int3
das
adc
jg
jns
mov
js
sbb
mov
pop
fnstcw
mov
push
xchg
insb
add
sbb
les
lret
mov
fstpt
incl
inc
lods
scas
cld
pushf
or
inc
mov
filds
sbb
add
aaa
pushf
nop
out
pop
fidivs
mov
sub
sti
sub
adc
lods
adc
adc
pushf
clc
or
idivl
aad
cli
pop
leave
int3
xchg
mov
mov
mov
iret
inc
out
fdivs
cld
test
jmp
wrmsr
lea
lahf
sub
fcomps
inc
push
ret
jecxz
xor
rorl
mov
and
xor
adc
jecxz,pn
jae
pushf
add
nop
sub
sbb
cwtl
insb
mov
sbbl
shll
cwtl
jmp
repz
xchg
cmp
dec
je
push
mov
loope
xor
ljmp
mov
jno
xchg
fs
jle
ror
sarl
jl
jb
movl
cmc
push
mov
repz
fcomps
rcr
pop
jle
pop
ds
cltd
sub
dec
ss
pop
jecxz
add
cmp
cwtl
pop
inc
fcompl
lods
scas
adc
cmp
inc
js
mov
pusha
sbb
xchg
dec
pop
pop
gs
sbb
push
sub
adc
pop
mov
cmpsl
mov
cmp
mov
inc
pusha
jno
and
arpl
testl
add
mov
jle
sub
adc
out
cwtl
call
jno
fwait
shl
mov
xchg
fistps
add
imul
loopne
incl
mov
jg
jno
cs
mov
mov
and
inc
cld
adc
and
mov
test
pushf
add
subb
lret
inc
pop
pop
adc
push
stos
or
pop
frstor
pop
sbb
int
out
xchg
fistpll
or
fcoms
jmp
sbb
jg
jae
cmp
mov
lret
fadds
lcall
imul
es
dec
mov
inc
sub
jecxz
adc
jnp
inc
push
pop
xchg
or
les
scas
push
xchg
xor
stos
aas
jae
xchg
mov
xchg
clc
dec
sbb
mov
das
mov
cmpl
cmpsb
cmpsl
repz
jb
cs
or
and
jo
and
lret
popf
das
mov
lcall
sbb
aad
mov
test
sahf
test
aas
jg
mov
inc
outsl
mov
out
xlat
mov
sti
jo
or
jmp
jmp
fcmovu
pop
push
orb
notl
mov
jmp
test
mov
aam
mov
stos
in
pop
inc
cltd
jmp
sahf
add
lds
repnz
ds
pop
pop
inc
lea
jae
xor
sub
fisttpll
stc
js
pop
lret
lcall
jp
push
adc
enter
leave
mov
sti
pop
mov
iret
popf
fwait
or
cs
jo
scas
call
dec
insl
pop
jnp
bound
clc
xchg
aad
std
mov
push
fdivl
xor
adc
mov
push
ret
shl
mov
cli
cmp
icebp
lret
cmpsb
out
call
inc
xor
mov
faddl
xchg
jne
in
pop
and
fldl
sahf
cmp
test
mov
icebp
fcoms
jle
icebp
pushf
jmp
jno
outsb
cmp
xor
lahf
fcoms
out
insb
call
mov
push
adc
vhaddps
cmp
cmp
mov
inc
fmull
dec
pushf
movsb
ja
xchg
sub
clc
and
nop
pop
add
sbb
imul
mov
mov
fdiv
lahf
shrl
rcrb
xorl
es
cs
dec
enter
lahf
cmp
or
jno
int3
sub
shlb
adc
mov
mov
xor
mov
pop
fcompl
pop
loopne
sti
in
dec
pop
enter
mov
movhps
into
pop
dec
movsl
sbb
sub
subl
add
fwait
lods
mov
jp
xchg
pop
repnz
in
pusha
pushf
in
sub
and
fidivl
out
repz
sub
mov
xor
jmp
xchg
rorb
rorb
out
mov
out
enter
sbb
mov
jns
adc
push
jle
dec
jne
daa
sbb
cli
test
xor
sti
or
roll
lret
lret
push
or
pop
fiaddl
sarw
add
fdiv
test
xchg
pop
adc
aaa
lods
jo
adc
fwait
lret
mov
sub
popa
push
push
fsubl
dec
shlb
jmp
in
das
jbe
jecxz
mov
call
jle
cmp
jecxz
outsb
adc
clc
mov
out
pop
ss
sbb
loop
sahf
out
popa
je
test
jl
pop
bound
jns
ficompl
repz
cltd
jb
mov
jo
fcomps
cmp
stc
pop
inc
sub
enter
jne
test
cld
insl
and
mov
pop
sub
and
adc
iret
shll
jb
mov
jns,pt
xchg
jp
push
fmuls
aad
lods
mov
pop
ret
sbbb
sbb
cmp
pusha
lcall
mov
xchg
sub
pop
dec
std
cmpsl
in
lret
je
xlat
stc
cli
loopne
mov
inc
lcall
push
xor
imul
mov
add
ret
repz
adc
sti
add
pop
in
cmpsl
ljmp
js
addr16
adc
xchg
mov
cs
pop
xchg
xchg
out
enter
aam
mov
push
repz
sti
fldenv
aas
push
push
cltd
arpl
pop
mov
inc
fs
arpl
arpl
loopne
aas
lcall
cli
pop
cmpl
jo
cmp
shrl
aad
mov
xchg
fwait
add
sarb
or
test
lret
fwait
or
sub
stc
cmp
and
test
es
sbb
cli
fs
mov
mov
xchg
mov
js
leave
icebp
push
test
cmp
addb
stos
inc
fistpl
push
xchg
sbb
pushf
jnp
popa
cmpsb
cmp
or
in
adc
and
adc
push
sahf
dec
mov
mov
xlat
cwtl
fsubr
aaa
mov
mov
mov
aas
xor
lahf
mov
out
fisttpll
inc
cmpsl
loop
outsb
repz
cmc
jne
rcr
sahf
icebp
push
cmp
inc
cwtl
lret
adc
out
idiv
mov
or
or
add
fnstcw
cltd
test
inc
jbe
mov
xchg
mov
outsb
pushf
loop
bound
movsl
dec
faddl
cmc
std
xchg
loop
repnz
cwtl
test
ret
inc
jg
lea
cmp
pop
mov
dec
lret
push
xchg
fcomps
jg
cmp
out
fadd
xchg
xchg
sub
in
es
sub
push
sub
aaa
sbbl
pop
test
push
sbb
inc
lock
mov
mov
xchg
mov
stos
into
dec
xchg
popf
sti
or
and
fsubrs
cwtl
sub
dec
jmp
popa
jp
imul
ja
and
add
or
push
mov
daa
mov
and
mov
scas
sub
jnp
andl
cwtl
ss
pushf
push
negb
mov
add
cli
jnp
cmpsb
mov
adc
sbb
ret
push
inc
jns
push
and
sbb
je
ss
test
mov
test
adc
push
subl
jl
mov
pop
pop
fcompl
cmp
xlat
cwtl
sbbb
sub
xor
fisubrl
repnz
jp
rclb
ljmp
gs
fmuls
gs
rcll
adc
out
cmp
add
loopne
sub
xchg
xor
xchg
les
clc
and
test
jmp
mov
adc
mov
xchg
mov
fildl
and
cltd
aad
flds
nop
fcoms
jg
jnp
testl
pushf
call
cmp
pop
adc
call
imul
aaa
jns
dec
shlb
inc
and
lds
push
push
cmc
addr16
pop
sbbb
sti
mov
insl
xchg
sbb
scas
cld
add
push
cmp
jp
clc
js
cmp
stos
fdivrs
or
pop
clc
dec
push
test
ds
pop
and
and
sahf
adc
xchg
cwtl
addr16
pop
pop
in
add
sbb
jno
imull
fwait
lret
xor
sub
jmp
mov
push
mov
pop
mov
mov
in
sbb
fnsave
add
adc
or
ret
sbb
cmpsl
or
fadd
test
int
inc
inc
mov
jp
and
jns
test
pushl
pop
test
rcll
push
nop
cmp
jl
test
inc
mov
hlt
mov
fstps
imul
mov
push
and
aas
aad
outsb
popf
std
push
adc
cmp
mov
mov
pop
inc
out
pop
gs
cld
mov
and
iret
sub
sti
stc
mov
mov
cmp
repnz
dec
repz
pushf
push
cmp
cmpsb
std
mov
aas
fucomp
js
push
jge
xchg
jl
iret
mov
mov
sar
jle
shll
sub
movsb
andl
pop
fucomp
mov
xchg
add
sub
enter
adc
xorl
out
inc
fsubp
out
jnp
cmpsl
jnp
subl
mov
xchg
pop
add
jl
jns
jo
mov
sbb
je
ss
pop
mov
xchg
pop
adc
cmpsb
pop
xor
dec
insl
int
dec
mov
xor
jae
in
push
je
popa
fdivs
and
scas
bt
or
aas
cmp
xor
dec
push
pop
mov
sub
hlt
inc
addr16
add
fdiv
test
push
fidivs
pop
aaa
jae
xchg
fmuls
sarb
pushf
push
sub
xlat
das
pop
in
sbb
lods
dec
sarl
sbb
adc
pop
xor
dec
xchg
fdivl
sub
fidivrs
in
in
pop
jb
jmp
sbb
arpl
stos
sbb
cmp
jg
or
inc
lea
xor
sub
sahf
repnz
ror
ja
add
pop
mov
mov
stos
lds
sub
ret
jb
adc
mov
cld
xchg
mov
dec
aaa
iret
sbb
out
add
cmp
aaa
xor
push
js
mov
cs
mov
mov
mov
jecxz
push
or
int
lods
adc
mov
push
sbb
in
cmc
and
aad
cli
stos
sti
cmp
iret
pusha
jl
in
lds
leave
loope,pn
cmp
adc
ds
fistl
xchg
and
mov
popf
push
adc
sbb
pop
jp
cmp
jp
lret
mov
inc
lcall
out
push
sbb
scas
cmp
cmpsb
sti
pop
jmp
dec
cmp
jae
js
stos
inc
repz
xor
imul
ljmp
into
jb
sahf
push
mov
hlt
in
lods
jne
pop
fwait
adc
addr16
sbb
ret
jge
lea
stos
gs
push
iret
cld
adc
ss
mov
dec
addb
jecxz
mov
cmp
cwtl
dec
inc
pop
test
mov
cmp
dec
shlb
fsubrl
sub
in
push
pushf
nop
push
aaa
xchg
movl
ja
loopne
mov
fsubl
cmp
mov
push
sbb
xorl
ret
push
pop
clc
gs
fwait
mov
stc
xchg
inc
mov
pusha
jg
sarl
sub
test
fmuls
loop
aas
es
sbb
fmul
nop
out
sbb
xchg
sbb
jle
or
lret
in
jge
cli
add
push
cmpsb
loopne
cli
out
jl
test
out
push
in
cli
push
popf
cwtl
fs
dec
ss
aaa
lcall
test
fidivl
jnp
inc
sbb
or
sbb
fcmovu
pop
aaa
ret
in
loope
push
mov
lret
popa
jmp
jge
or
adc
ds
mov
mov
mov
cli
cmpb
imul
push
push
pop
js
inc
loope
dec
gs
sub
push
stos
iret
or
je
sti
in
pop
inc
or
mov
push
and
es
and
daa
jnp
movsl
les
sarb
sbb
push
cmpsb
cmp
pop
nop
loop
xor
arpl
mov
addr16
loopne
jo
sbb
icebp
xor
xchg
mov
outsl
jge
lahf
inc
outsb
hlt
pushf
addr16
fninit
mov
pop
into
stc
pop
push
in
pop
int3
stc
sbb
test
sub
lods
inc
pop
jg
aas
fcompl
pop
arpl
dec
and
mov
mov
scas
dec
pop
cmpsl
mov
push
stos
and
mov
push
popw
mov
mov
jb
xchg
push
mov
push
cli
sbb
fld
mov
aas
and
adc
mov
mov
cli
xor
scas
mov
shrb
cld
xchg
xor
fdivr
mov
fstpt
push
inc
out
cli
stos
mov
cmp
sti
xchg
sbb
das
mov
jl
mov
cmp
lcall
loopne
shr
lret
cmp
xchg
mov
push
addl
andl
cmp
scas
addr16
cmp
pop
push
mov
mov
dec
lcall
sbb
xchg
mov
cmp
pushf
dec
and
pop
mov
stc
adc
rcrb
test
mov
adc
add
call
mov
sub
jl
mov
mov
arpl
fcmovu
pushf
arpl
mov
dec
pop
adc
addl
adc
sub
mov
pop
das
fcomip
ret
mov
shll
or
popa
data16
xchg
dec
lea
test
loop
xchg
dec
sti
aad
pop
cli
loope
ja
cmpsb
sbb
loope
dec
cmp
hlt
dec
pop
ss
cwtl
scas
cld
xor
push
repnz
test
test
push
lock
add
inc
jl
stc
cmpb
movsl
notl
mov
pop
inc
sbbl
scas
hlt
jle
test
jo
insb
xchg
add
cs
xchg
sbb
inc
sub
into
cmpsb
lds
and
cmp
adc
shrb
inc
mov
loop
sub
scas
adc
fcomps
jns
xchg
in
dec
xor
frstor
lods
loopne
aad
and
adc
out
out
cwtl
push
xchg
xor
jae
aaa
xor
lods
dec
sub
icebp
das
sbb
filds
jecxz
inc
addr16
cmpsb
dec
or
scas
sti
push
cmpsb
cmpsl
jne
pushf
add
pop
sub
sub
dec
sahf
fcompl
stc
cmp
hlt
mov
inc
mov
pop
mov
aas
pop
inc
and
dec
enter
xor
in
xchg
nop
pop
jg
sub
pop
int3
lea
mov
fsubl
arpl
jp
mov
inc
movsl
outsl
cltd
in
cmp
sub
shll
sbb
or
jae
cld
out
movsl
clc
aad
shl
mov
sahf
cmp
sbb
cltd
outsb
mov
aaa
add
and
lret
int
mov
dec
dec
mov
test
ret
jle
sbb
popf
insl
add
cmp
pop
mov
jno
movsb
sub
fdivs
xor
jg
ds
or
xchg
sti
and
xchg
mov
cli
ds
mov
lahf
cwtl
sub
mov
imul
sub
xchg
fmull
pop
loope
decl
rcrb
xchg
cmpsl
ret
push
aas
cld
dec
sub
pop
jbe
mov
int3
ret
or
in
sbb
pop
jnp
cld
dec
into
ficompl
imul
xchg
xor
stos
inc
add
mov
inc
or
mov
pop
loope
sti
or
setno
push
jp
pop
test
cmp
push
jnp
mov
push
stc
fsub
add
pop
mov
outsl
and
ljmp
sbbl
fcoml
nop
mov
xchg
cwtl
test
push
jnp
push
mov
dec
mov
cmpsb
subl
ljmp
xchg
jae
cld
rorb
inc
pop
or
jecxz
cmp
test
mov
jmp
push
cli
std
adc
orb
cwtl
rcrl
mov
cltd
sbb
nop
sub
movsl
pop
leave
mov
shl
mov
jae
lret
adc
cmp
inc
inc
sub
pop
addb
mov
mov
add
pushf
mov
pop
push
fisttpll
push
mov
pop
cwtl
fwait
pop
adc
or
outsb
cltd
movsl
xor
or
and
cmp
pusha
sub
stc
mov
xor
jne
aas
out
cltd
mov
sbb
inc
rcll
add
in
mov
aas
push
cmc
jb
cld
jle
jp
popf
fneni(8087
call
loope
mov
pushf
mov
jecxz
add
lods
fucomi
subb
mov
aaa
nop
and
mov
in
cmpsb
ret
mov
jle
xchg
pushf
dec
inc
and
mov
jne
xlat
jb
jo
add
pop
inc
cmp
or
push
imul
cmp
aam
add
cwtl
inc
in
mov
out
test
addl
xor
cli
cmpl
jg
sbb
pop
ret
pop
xchg
xor
fstps
jge
out
jbe
sbb
scas
cmp
mov
outsb
adc
cmp
test
push
or
cmpsl
sbb
lret
movsl
pop
cs
in
and
sbb
in
or
mov
add
into
mov
mov
inc
cmp
cltd
mov
ss
call
fnstsw
cmp
push
and
mov
stos
push
xor
xchg
outsl
jp
jbe
dec
leave
out
mov
divb
jae
pop
popa
mov
dec
ja
xor
ja
mov
jbe
lds
jns
clc
pop
mov
mov
int3
cs
icebp
or
es
cmpsl
lcall
in
rolb
dec
fmull
xchg
leave
or
sub
lcall
xor
and
lret
adc
in
je
add
enter
fimull
jb
mov
sub
fstps
ds
push
cmp
daa
cmc
add
push
xor
jecxz
pushf
mov
xchg
test
mov
cmp
fnstenv
mov
mov
mov
arpl
sub
in
mov
cmp
das
ret
mov
jno,pn
mov
rolb
sti
mov
out
loopne
popa
cmp
sarl
pop
ret
push
add
scas
fcmove
mov
test
push
mov
xlat
pop
inc
xchg
xor
jnp
adc
movsl
fcom
cli
stc
inc
test
fiaddl
test
daa
jle
add
out
cmp
mov
je
mov
fwait
data16
stc
jno
loop
pushf
add
jo
scas
pop
rcr
and
fs
out
imul
adc
jo
lods
jg
rclb
dec
bound
cwtl
add
ja
aad
ljmp
pushf
jo
inc
pushf
rclb
repz
sbb
fxch
add
test
pushf
xlat
pop
lods
mov
dec
add
lods
mov
mov
stos
and
jnp
ror
or
ljmp
lret
lock
ljmp
sbb
jae
ds
mov
adc
mov
mov
pop
and
leave
out
jg
dec
pop
xchg
loop
stos
fistps
jbe
xorl
ljmp
sahf
jp
xor
xor
push
jle
sarl
aas
pop
out
cmp
add
cmp
mov
sti
jmp
jo
xor
xorb
mov
rorl
cli
fdivrs
imul
push
fs
adc
mov
mov
int3
arpl
sub
mov
cmpsb
cltd
mov
es
xchg
leave
mov
call
jge
neg
incl
movhps
aas
mov
pop
test
mov
popa
fidivs
in
cwtl
xor
std
xchg
repz
aad
shll
loop
cmpb
mov
pop
push
adc
sti
out
pushf
inc
cs
mov
sti
fcompl
test
outsl
or
xchg
pop
ss
xchg
cs
sbb
cmpsl
mov
mov
cmpsl
push
xchg
daa
repz
out
jne
push
add
jnp
mov
push
stos
pusha
pop
cmpsb
sbbl
inc
jecxz
add
sti
inc
jnp
aam
cmpsb
jge
pop
lea
sbb
cmp
sbb
push
mov
jge
ret
mov
mov
mov
je
lcall
pop
fwait
fs
lea
sahf
push
stc
lea
mov
scas
xchg
add
or
cli
mov
out
shll
xchg
sbbl
test
in
in
fs
sbb
fistl
cli
or
push
shll
push
ret
imul
pop
pop
gs
push
lods
jmp
mov
lods
mov
frstor
and
jg
xor
sub
or
sar
loope
lods
imul
fwait
add
inc
int3
sub
out
pop
pushf
mov
mov
mov
sbb
adc
push
cmp
pop
scas
lods
sub
add
xchg
xor
and
mov
push
fsubrl
sahf
xchg
pop
or
and
scas
xor
out
pop
aaa
imul
mov
dec
add
call
lock
sub
xchg
adc
mov
mov
push
mov
clc
cmpsb
sbb
cli
lret
ret
inc
sahf
outsl
mov
mov
test
push
pop
fdivs
push
pushf
push
aaa
adc
mov
stos
adc
pop
pop
dec
enter
sbb
sub
inc
mul
ss
hlt
fdivr
mov
int
cld
hlt
es
or
mov
movsb
dec
inc
or
mov
into
jo
cmp
xchg
stc
inc
lcall
mov
in
out
adc
jg
adc
mov
fs
enter
jl
aad
pop
stc
mov
adcb
sbb
add
aad
iret
and
mov
pop
jecxz
and
aas
out
cld
and
xor
jo
and
inc
fidivrl
hlt
test
sub
lret
into
ror
mov
xchg
sti
nop
and
mov
mov
jg
inc
pushf
xchg
sub
mov
xlat
pop
pop
and
jl
stos
repz
add
mov
push
jle
or
lcall
adc
xchg
imul
insb
pop
and
adc
mov
jmp
ret
loop
test
pop
rol
xorb
orl
dec
fistpl
jmp
dec
and
mov
shrb
push
pushf
and
pop
jecxz
imul
pop
aad
fimuls
cmp
into
and
idivl
push
and
and
push
add
add
inc
fcmovnb
push
movsb
jecxz
mov
rclb
lods
inc
es
sbb
aaa
nop
sti
imul
or
sbb
mov
jmp
cmpsb
aaa
sub
or
xchg
stc
mov
insl
stos
hlt
popl
in
stos
pushf
mov
mov
cmp
out
es
xchg
addb
ret
jno
mov
std
das
sub
aas
orl
stos
xchg
mov
mov
or
fsubrl
cli
mov
nop
gs
mov
jg
mov
sbb
insl
xchg
leave
inc
sbb
ss
mov
jge
pushf
sub
clc
and
push
add
push
fsts
sbb
mov
sbbb
sarl
pop
clc
jnp
lock
pop
jge
fdivl
pushf
and
test
and
sbb
xchg
or
sbb
and
clc
js
dec
mov
xor
not
in
pop
ds
xchg
into
mov
jecxz
cmp
mov
addr16
pop
iret
jne
jmp
jl
push
adc
pop
sub
cs
mov
mov
test
cmpl
dec
mov
mov
cmp
loop
inc
es
xchg
lods
mov
inc
lods
fstl
mov
pop
test
insl
jecxz
ljmp
mov
pop
jmp
jne
mov
in
ja
cmpl
xchg
push
iret
call
jne
sub
mov
jg
fisttpll
and
int3
andl
fistpll
cmp
insb
cmp
xor
ljmp
fsts
insb
imul
xor
cli
fsubl
jg
into
loopne
pop
lea
xor
sbb
arpl
stos
or
pop
aad
sub
mov
jl
jmp
pop
mov
mov
ret
les
pop
incb
push
scas
xchg
mov
dec
add
sahf
xor
cmp
data16
movsb
and
pop
int
mov
fmul
xor
rep
fmull
aam
fsubl
jge
rolb
pop
add
fadd
repz
test
insl
icebp
xchg
cltd
pop
push
dec
fwait
nop
daa
or
pop
or
cmp
jae
aam
mov
stos
imul
rep
xor
mov
fisttpll
jo
jmp
out
cwtl
dec
movsb
xchg
or
inc
fdivrs
xchg
adcl
cmp
and
sub
std
cli
jbe
jb
mov
jg
inc
cmp
dec
dec
add
lds
adc
out
iret
arpl
data16
cmc
mov
or
es
jae
imul
adc
jbe
cmp
xlat
mov
fcmovnbe
sbb
sbb
rcrl
cmpsb
insb
int3
sbb
mov
aaa
push
jns
mov
xchg
clc
lods
jg
sahf
adc
xchg
popa
inc
jle
sbb
mov
cli
in
sbb
loop
mov
incl
data16
sub
add
add
insl
and
fimull
sbb
out
cld
xchg
cli
les
pusha
test
or
jg
movsb
inc
adc
repz
xchg
lock
mov
cmp
add
out
frstor
pop
sbb
xchg
lret
aas
nop
pop
mov
add
adc
mov
fs
mov
fmull
faddl
ds
pusha
and
cmpsl
mov
lods
fcomip
push
les
mov
fwait
pushf
pushf
dec
dec
pop
xchg
sbb
and
outsl
mov
dec
sub
sbb
stc
xor
push
add
pop
cmp
xor
mov
dec
test
icebp
sbb
cli
and
pushf
xchg
pop
sbb
push
sub
cltd
cmp
icebp
aaa
popf
jbe
arpl
jo
ds
into
daa
xchg
mov
sarl
and
clc
clc
xchg
xorb
sbb
xchg
or
ljmp
adc
adc
stos
ret
push
fwait
je
cmp
adc
inc
jg
adc
push
push
dec
push
push
sub
cmp
cmpb
mov
add
out
mov
in
or
cmpsl
loope
test
cmp
fs
jo
xor
lret
push
or
pushf
loope
mov
mov
xchg
jg
sub
pop
les
es
sarb
out
mov
dec
jl
mov
push
pushf
adc
inc
mov
lret
sbb
imul
fsubrl
sbb
mov
xor
into
sub
mov
push
pusha
mov
cwtl
jne
popf
lods
pop
mov
pushf
mov
pop
xchg
je
mov
pusha
dec
movsl
sahf
fsub
out
jns
pushf
pop
mov
mov
lahf
and
push
loop
xor
mov
cmpsb
xchg
jo
je
bound
decl
push
cli
xchg
sub
cmpsb
xchg
js
out
xchg
and
add
adc
aad
fwait
cmp
call
rol
jg
fidivs
xchg
mov
pusha
push
cmp
repz
and
fcoml
sub
fimull
aam
add
call
frstor
clc
sbb
push
xchg
mov
sbb
jno
or
cmp
sub
xor
add
lea
mov
idivl
lret
pop
je
ret
pop
mov
push
mov
jge
test
xor
sub
jb
jp
js
testl
or
mov
popf
jg
or
fstpt
sub
mov
mov
mov
push
cmp
mov
pushf
mov
xchg
pop
mov
and
cmp
insb
mov
jnp
add
or
mov
jo
xchg
cmp
sbb
push
jbe
xor
adc
call
popf
mov
rol
mov
mov
pushf
push
je
nop
test
loop
pop
sub
into
fisubs
and
and
cmp
pop
fstpl
imul
sbb
cmp
popf
push
dec
insb
mov
and
sbb
out
mov
cltd
or
stos
sarl
clc
sbb
int3
sub
cmp
xchg
jo
sbb
in
stos
xchg
jecxz
xchg
jmp
fbstp
and
cmp
sbb
and
sbb
xchg
cmp
jge
fsub
les
push
pop
add
sbb
fidivl
mov
test
mov
xorl
mov
cwtl
xchg
sbb
xor
lahf
sti
adc
sahf
into
popa
loopne
insb
in
push
ret
jmp
mov
loopne
pop
jbe
xor
adc
jmp
stc
sbb
ret
addl
cwtl
test
fisubs
push
cld
xor
pop
mov
xor
ja
push
sarb
inc
ja
pushf
sti
data16
jge
stos
stos
inc
iret
pop
xor
push
test
xchg
mov
pushf
push
orl
out
and
insb
js
add
lcall
mov
push
popf
fwait
cwtl
jg
lahf
or
inc
adc
icebp
add
adc
aaa
dec
cmpb
add
idiv
mov
out
out
mov
xchg
inc
mov
mov
cmp
cmp
leave
insl
jb
mov
nop
xchg
or
adc
adc
cmp
add
sti
scas
mov
setle
in
sbb
divl
fdivrs
cmp
add
sbb
in
pop
lods
pop
orb
mov
mov
push
pusha
shrl
jne
add
ret
pushf
lret
lds
push
xchg
dec
je
cltd
xor
cmp
pushf
cmp
cld
pop
or
add
fcomps
pop
dec
lods
jg
jp
popa
sub
mov
cmp
jo
mov
leave
int3
cmp
mov
scas
sub
mov
out
cmpsb
jns
cmc
outsl
rcrb
mov
test
push
sbb
out
sub
pop
adc
push
sbb
xchg
sbb
lock
cmp
mov
mov
enter
ss
sahf
pop
mov
push
scas
popa
fdiv
hlt
sbbb
mov
mov
jbe
pop
cwtl
fdivl
lret
jle
out
xchg
subb
cmp
nop
aas
mov
ret
fcmovnb
pushf
jle
js
into
mov
ret
dec
mov
cmp
mov
popf
cmpsl
xchg
jno
pop
loop
pop
jo
mov
aas
out
jl
orl
cli
lret
and
inc
in
pushf
sbb
je
jo
mov
mov
sbbl
sbb
sahf
and
xor
inc
clc
xor
cwtl
mov
pop
mov
pop
add
push
xlat
and
xor
hlt
sahf
ss
mov
pop
inc
push
mov
aam
cwtl
lock
adc
jle
rorb
stos
dec
in
pop
xchg
jle
fdivrl
cmc
scas
jno
xchg
lds
mov
inc
incb
dec
fdivr
ror
out
sub
loopne
pop
push
fldl
jns
cli
test
pushf
lret
cmp
fidivrs
mov
cltd
les
sbb
mov
ret
jecxz
inc
out
pop
xor
ljmp
xchg
cmp
fadds
aad
test
mov
cmp
sahf
ret
push
jg
jle
mov
icebp
sub
cmpsl
adc
mov
cli
jg
mov
ret
lea
test
pop
or
push
xchg
jae
cmpsl
scas
cmc
pop
std
cli
cmc
jb
xor
mov
orb
xchg
and
sar
and
iret
lahf
xchg
jne
mov
repz
inc
cmp
mov
cmp
hlt
and
scas
xchg
fwait
push
inc
inc
out
jg
pusha
pop
mov
mov
aas
loope
add
mov
repnz
cmpsb
pop
ljmp
mov
insl
stc
xchg
mov
push
xor
pop
idiv
pop
lods
cmpl
push
shl
pop
pop
scas
push
cmp
adc
mov
sti
ljmp
cmpsl
or
ljmp
adc
jle
jnp
sbb
lret
pop
jne
daa
ret
or
mov
pop
pop
in
icebp
das
in
mov
push
cmp
mov
fwait
jns
xchg
ds
es
push
push
cmc
sbb
loop
and
jae
data16
pop
daa
lds
out
fcomps
xchg
cmpsl
jb
out
pushf
jb
movsb
xchg
push
pop
lret
movsb
push
fadd
xor
mov
dec
int3
or
add
sbb
stos
ss
fcoml
sbb
xlat
arpl
movsb
sbbb
mov
add
push
pop
test
pop
les
adc
loopne
sti
loope
xchg
fld
or
sub
repz
mov
in
inc
xlat
ja
sarb
and
leave
loop
sbb
xchg
les
mov
fwait
cli
jae
daa
pop
pushf
aaa
push
movl
jg
subb
cld
rol
movsb
sti
sub
loopne
movl
pushf
mov
scas
pop
lcall
pop
adcl
or
cmp
and
cmp
sub
fidivrl
xchg
inc
mov
shll
push
mov
sbb
cmp
mov
scas
popf
xchg
sbb
sub
mov
jge
in
cli
stos
pop
xor
fstpt
add
sbb
xor
sbb
jg
pop
js
sbb
stos
jne
scas
jg
xor
mov
stos
sbb
mov
xor
xor
sub
out
or
mov
push
xor
mov
mov
les
xlat
push
sahf
sbb
mov
adc
xchg
adc
pop
add
jmp
dec
cmp
dec
add
mov
or
add
xchg
sti
or
adc
fisttpl
add
xchg
add
jmp
bound
or
jmp
sbb
fadds
inc
cli
cld
out
xor
mov
sbb
pusha
test
stos
pushf
mov
xchg
mov
adcl
fwait
fwait
out
repz
mov
jb
ljmp
mov
popa
in
pop
into
cs
mov
mov
and
sti
lods
int3
mov
shl
sub
imul
andl
orb
clc
leave
faddl
ficomps
push
mov
neg
clc
sub
loope
clc
loop
push
pop
iret
mov
cmp
add
push
xchg
xchg
aad
or
fcoml
xor
dec
xor
popf
sti
ljmp
adc
test
jo
cmp
cwtl
aas
adc
push
sbb
adc
and
xchg
mov
sbb
fsubrs
xchg
fcompl
xor
dec
sbb
repz
cmp
and
sbb
sbb
push
ret
int
les
mov
mov
mov
fwait
or
shlb
mov
pop
cli
fists
sbb
mov
mov
cwtl
orb
inc
ret
cmp
xor
adcb
imul
aam
cmp
pop
jnp
xor
sub
jle
fisubrs
jge
pop
fdivrs
lcall
aas
cli
ja,pt
std
inc
dec
or
pop
pop
xor
adc
and
test
ret
xor
xchg
adc
dec
mov
mov
xor
inc
aaa
sbb
cs
scas
test
push
lods
std
aaa
jle
push
cwtl
lcall
int3
shl
aas
bnd
fildl
inc
pop
sbb
sbb
stos
mov
hlt
jmp
stos
xchg
jmp
mov
insl
cmpsb
arpl
sub
dec
out
out
fdivr
or
inc
pop
scas
fwait
sahf
int
mov
mov
sbb
cmp
in
push
test
sahf
rorl
pop
mov
mov
dec
insb
ret
decl
mov
mov
shlb
outsb
push
sahf
xchg
lds
sbb
sbb
add
push
jo
outsl
fcmovu
loope
sbb
jmp
and
jp
in
pop
cmpsl
mov
ja
mov
sbb
popf
jo
cltd
sbb
push
iret
mov
jo
add
mov
sti
lcall
popf
sub
cmpb
sub
and
fwait
dec
mov
jge
mov
pop
add
mov
xchg
sbb
aam
push
mov
and
inc
jle
decl
adc
jp
xor
outsl
pushf
fdivs
stos
std
push
scas
sub
mov
push
fstpt
xor
nop
mov
pushf
enter
fs
dec
sbbl
mov
mov
xor
data16
ficoml
out
mov
fsubrs
mov
cmp
and
imul
jmp
cmp
mov
jnp
mov
pop
push
jnp
xchg
mov
lret
jo
mov
inc
shrl
clc
adc
xor
cwtl
movsl
ret
popf
mov
fs
stc
enter
int3
add
les
xor
push
in
fwait
jp
inc
mov
or
loop
push
ds
out
repnz
test
cmp
dec
jl
or
inc
xchg
pop
addb
popf
push
add
ds
dec
jg
stos
lcall
loope
rcrb
shlb
outsl
mov
pop
mov
or
test
cli
daa
movsb
pop
sti
bound
cmp
lea
mov
fcoms
mov
mov
xlat
inc
pop
or
sub
mov
mov
jl
mov
fsubrs
inc
jo
mov
cmc
and
jg
pop
hlt
cmp
dec
push
sbb
popf
sub
and
mov
fiaddl
push
stos
mov
xchg
push
mov
mov
dec
cmp
lock
stc
cmpsb
fwait
rcrb
mov
clc
loop
clc
mov
cmp
fidivrs
adcb
xor
movsl
in
or
test
popa
sbb
adc
in
cmpsl
faddl
in
iret
sbb
mov
pop
xchg
inc
call
scas
jp
xor
sub
dec
mov
dec
jecxz
add
ds
lcall
sarl
dec
sub
mov
mov
adc
fcomp
loop
pop
sbbb
mov
pop
pop
sti
popf
cmp
mov
test
jne
loope
xchg
fsub
xchg
mov
test
ret
mov
aas
out
das
inc
mov
pop
lret
lods
cmp
dec
cli
bound
fdiv
fsubs
orb
lods
jl
xchg
xor
xchg
lahf
ja
sbb
pop
clc
pop
outsl
sub
fisttpl
xor
adc
ret
xor
mov
add
fstpl
pushf
mov
jmp
xchg
inc
inc
or
cbtw
push
andl
popa
cli
icebp
out
jne
xchg
mov
leave
cmpsl
scas
mov
mov
jecxz
ds
inc
insb
xchg
arpl
cmp
push
dec
idivb
cs
add
cmp
mov
sub
sbb
sbb
fwait
mov
lahf
pop
mov
pop
ja
xchg
mov
sahf
fdivs
jnp
adc
sub
mov
out
mov
xchg
xor
jo
jae
pushf
mul
adc
stos
mov
mov
push
dec
mov
jecxz
adcl
std
inc
dec
inc
test
lret
adc
addl
jmp
push
sahf
out
sahf
and
in
fsubl
mov
sbb
sub
outsb
in
stc
push
mov
pop
pop
pushf
inc
mov
push
test
pop
imull
test
sti
test
sbb
ret
xor
mov
aas
lds
mov
addl
push
pop
clc
fdivrs
lahf
enter
flds
push
or
xor
js
mov
cmp
into
leave
movsl
adc
mov
int3
ror
scas
ds
test
aas
cs
jne
add
pop
mov
push
daa
popf
pop
sbb
adc
leave
push
add
sbb
int
add
adc
sub
lret
pusha
mov
rclb
push
jmp
fstps
out
sbb
mov
sbb
xchg
stos
cmpsb
ljmp
test
test
dec
mov
nop
mov
shlb
xchg
jbe
fwait
int
sbb
mov
aam
aas
pop
sub
pop
add
mov
mov
in
ljmp
jecxz
in
loope
out
ja
cmp
pop
cld
ja
mov
pop
movb
out
sub
arpl
mov
pop
roll
cmpsb
mov
in
pop
sub
cmp
loope
sbb
mov
je
adc
mov
aam
fwait
dec
xchg
xor
popf
fstp
aad
pop
pop
sbb
std
mov
or
and
cmp
xchg
adc
cmpsb
std
dec
inc
add
cli
mov
in
cmc
mov
sti
outsb
stc
fcomip
mov
out
addr16
imul
xor
cltd
loopne
mov
inc
mul
daa
cwtl
xchg
imul
sbb
xchg
mov
push
dec
movsl
aas
addb
mov
mov
mov
lods
sti
push
test
into
mov
mov
add
or
push
mov
sbb
imul
inc
je
mov
jnp
shrl
addr16
cmc
dec
sbb
cmp
cs
je
push
cli
aaa
std
xchg
mov
cs
std
sbb
jp
sbb
mov
pop
cwtl
and
sub
mov
cld
cmp
adc
sbb
lret
cmp
pop
mov
movsb
pop
adc
lea
out
fstpl
mov
mov
scas
cmp
cwtl
clc
mov
jl
sti
imul
fistpll
jg
addb
or
xchg
push
imul
sub
sbb
fnsetpm(287
jne
sbb
jmp
sbb
addr16
sbbl
xlat
mov
ss
std
sub
xor
pushf
xor
ss
out
and
and
out
nop
or
pushf
hlt
jo
fcom
mov
fistpll
movsl
pop
lea
loope
aam
mov
mov
mov
mov
fwait
mov
pushf
add
dec
aas
inc
cmp
mov
pop
lock
into
cld
jnp
and
fisttpll
mov
xor
aas
sub
adc
aaa
int3
pusha
or
popf
inc
roll
pop
mul
scas
mov
and
cmpsl
shlb
xchg
jl
pop
fldenv
mov
and
mov
mov
xor
mov
and
inc
lcall
lods
pop
aad
iret
and
sub
cwtl
jae
dec
ljmp
inc
cwtl
push
imul
sbb
jge
sti
cltd
mov
movsb
sti
out
add
cltd
addr16
repz
sarb
kmovb
fidivs
addr16
sbb
sub
and
cmp
mov
test
icebp
data16
dec
fldl
inc
in
mov
xor
shlb
addr16
mov
loope
pop
sub
imul
pusha
iret
jo
idivb
pushf
jne
daa
imulb
gs
mov
xchg
and
gs
xchg
mov
jl
mov
lahf
pop
idivl
das
pop
xchg
cmova
add
aaa
inc
mov
sbb
xchg
lcall
insb
inc
cmpsl
int
push
ficomps
out
pop
push
xchg
jno
loop
sbb
test
cmp
or
mov
pusha
mov
je
jno
jne
sbb
xchg
add
fsubrs
sbb
pop
mov
cld
cli
int3
mov
std
pop
iret
lret
jns
sbb
push
sbb
sub
pop
aam
test
out
pushf
fcmovnbe
movsl
mov
jg
jecxz
dec
ljmp
jg
and
cmp
jl
stos
pop
stos
dec
ds
mov
jnp
mov
pop
sarl
rclb
sbbb
lret
fstps
cmc
mov
aas
pop
jecxz
push
cmpsl
cld
adcb
add
repz
sahf
ret
repz
pop
or
cmp
gs
or
cmp
push
jbe
dec
into
push
or
fdivs
aaa
lahf
out
mov
pop
lret
ljmp
or
cmp
mov
idivl
xor
jae,pn
jl
sub
inc
mov
pop
lods
cmc
xor
es
mov
push
sbb
sbb
xor
inc
sub
sti
jecxz
mov
repz
test
or
cmp
add
sbb
cli
sub
or
mov
fisttps
xchg
out
scas
stc
adc
fmul
cmc
lods
or
cmpsb
loopne
adc
xchg
mov
jmp
loopne
jae
inc
fwait
sar
mov
imul
dec
or
dec
cmovp
sub
nop
push
repnz
pop
mov
bound
and
aas
push
inc
adc
sti
sti
jnp
ljmp
data16
jecxz
pop
mov
cmp
sub
rcll
mov
lret
cmpsb
xor
aas
mov
add
cmp
lret
notl
xchg
sbb
lahf
cmp
sbb
lods
mov
xor
adc
fs
jle
xor
dec
mov
push
adc
cmp
cwtl
jbe
xlat
in
test
fwait
jl
pop
lret
jbe
cmp
and
stos
jno
sti
mov
mov
addr16
fstpl
cmp
mov
mov
mov
pusha
cmpb
movsb
dec
adc
lods
jg
xorb
and
fwait
mov
cmc
mov
xchg
fdivr
popa
jp
fdivrl
pop
adc
jo
cs
dec
sbb
mov
stos
nop
mov
add
lods
es
ds
cmpsl
ds
out
push
fstps
fildl
shl
pop
sbb
cmc
fdivrl
std
mov
loopne
xor
sbb
inc
fucomi
adc
push
or
jl
sbb
ret
fs
repnz
sbbb
mov
outsl
pop
cmp
ret
sbb
cs
cmc
mov
mov
hlt
imull
jbe
mov
es
xor
js
cmp
pop
xchg
and
add
inc
add
cltd
xchg
mov
fwait
mov
xchg
pop
stos
jg
int3
mov
mov
xchg
scas
sbb
cwtl
movsb
push
loop
lret
mov
xor
jle
mov
pop
and
ficomps
and
and
in
fdivrs
loopne
or
fdivr
cmp
nop
clc
mov
pop
int
sti
jmp
push
add
stc
jbe
cmp
jge
add
pushf
out
pop
hlt
push
push
xor
sti
adc
and
jg
dec
inc
std
dec
and
sti
jo
jg
jg
xchg
dec
jns
inc
mov
mov
xor
insb
xchg
ret
jl
test
fistl
adcl
out
add
das
xchg
jmp
int3
repnz
xchg
adc
repz
cli
mov
mov
mov
mov
in
dec
mov
cmpsb
dec
js
add
bound
inc
mov
and
inc
pop
xchg
add
fistpl
lods
out
test
push
inc
fnsave
cs
fwait
imul
inc
sbb
shl
loopne
push
test
in
cltd
int
pop
xorl
je
mov
outsb
mov
sbb
fdivrl
push
sub
mov
inc
and
stos
mov
xchg
sbbl
dec
cs
cmpb
adc
dec
pop
adcb
pop
dec
ffree
aad
cmp
dec
imul
pop
je
sub
mov
mov
or
in
inc
mov
fnstcw
and
mov
inc
cli
fdivrl
sbb
or
sub
js
mov
sbb
jns
mov
and
addr16
aas
xchg
lret
adc
clc
leave
lods
mov
dec
dec
inc
fwait
cmp
mov
test
pop
insl
xchg
sub
movsb
add
loope
inc
sub
inc
ljmp
mov
in
mov
inc
pop
jmp
xor
inc
inc
addr16
sub
fsubp
mov
cmp
jle
pop
or
sub
aam
adc
in
test
fnclex
adc
stc
inc
pop
adc
pop
ret
dec
xchg
sarl
sbb
inc
loop
pop
jecxz
hlt
mov
popa
jmp
ljmp
sub
dec
faddl
arpl
sti
ljmp
inc
sbb
das
test
pop
cmpsb
sub
jne
ja
or
pushf
cwtl
aas
call
xlat
push
fdivl
sbb
aas
pop
test
mov
dec
mov
insl
jnp
pop
ret
mov
fcoml
mov
scas
xchg
dec
inc
sub
in
loopne
aas
push
push
mov
mov
fcmovnb
int
dec
scas
push
mov
dec
push
jle
pop
ficompl
test
lahf
fildl
js
mov
or
hlt
out
pop
call
mov
maxps
je
out
push
fdiv
lret
cltd
cmp
ljmp
cwtd
fwait
pop
and
or
sbbl
push
sbb
out
or
lret
std
jnp
aas
xor
scas
lock
mov
ret
push
push
shrb
daa
pop
sbb
or
mov
sarl
or
mov
mov
cltd
jg
inc
loop
add
xor
push
ror
mov
mov
jle
sub
iret
pop
dec
add
loop
inc
pusha
int
into
sti
mov
push
push
fisubs
xor
mov
test
into
inc
outsl
mov
pop
lods
cli
sub
cld
jb
lea
pop
ljmp
je
ljmp
pop
imulb
fsubrs
dec
inc
and
mov
dec
and
iret
adc
pop
cwtl
jl
pushf
ljmp
mov
addr16
aas
repnz
xchg
xchg
call
sti
pop
aam
lret
cmp
jmp
adc
jb
sbb
adc
ds
jle
pop
fcoml
ss
mov
lds
jne
ds
test
int3
add
lds
mov
xor
sub
xor
filds
fs
cmp
xchg
and
sahf
jl
sti
outsb
frstor
pop
xchg
movsl
add
sbb
mov
cld
sub
add
cmp
mov
pop
adc
mov
mov
repnz
mov
bound
jle
mov
inc
add
mov
outsb
lret
clc
loopne
rorb
sbb
int3
jns
sbb
push
les
shlb
mov
out
jecxz
test
sub
aaa
and
mov
aam
sti
mov
pop
inc
pusha
sbb
jbe
mov
jo
mov
mov
pop
inc
push
es
popf
mov
push
in
adc
push
leave
pop
jb
push
shrl
lea
jmp
cs
fsubrl
inc
scas
xorl
jnp
and
mov
ret
test
aas
lea
mov
mov
jno
ds
aas
movsl
sarl
and
dec
cs
cltd
mov
push
jge
cwtl
sub
ljmp
xor
mov
sub
mov
movsb
sbb
lcall
stos
push
lock
pop
out
mov
pop
ret
push
sbbb
adc
mov
dec
inc
cli
sub
push
add
push
notb
lcall
cli
lret
mov
push
pop
jmp
inc
dec
test
fistl
mov
rcr
jnp
xor
mov
or
fstpl
push
push
mov
lods
mov
pop
mov
cmp
sub
sbb
add
fwait
inc
dec
test
jo
and
fs
xchg
push
mov
mov
outsb
add
sar
cwtl
cmc
inc
mov
adcl
imul
shlb
or
mov
test
mov
push
xchg
sub
ret
cs
cmp
das
xchg
cwtl
sbb
and
sub
push
ss
mov
das
jb
xor
repnz
fstp
subl
fwait
jo
and
or
cmp
int3
or
mov
iret
aam
fstl
in
pop
add
je
sbb
sub
jnp
or
jmp
pop
fucomi
push
xchg
cmp
sub
cmp
dec
lea
ljmp
mov
les
push
fmull
push
cld
pop
scas
imul
jp
mov
adc
sbb
mov
pushf
aad
xchg
ljmp
js
incl
sarl
xlat
in
inc
leave
out
or
incl
pop
lret
pushf
out
fld
push
xor
adc
std
fdivrs
pushf
cmp
push
iret
add
fcompl
pusha
lret
add
mov
add
mov
loope
xchg
or
xchg
int3
sub
mov
cmp
inc
sbb
mov
cmp
xchg
arpl
sbb
enter
dec
xor
mov
mov
mov
repnz
scas
jmp
push
lret
mov
sub
push
movsb
mov
pop
ds
or
mov
and
lret
mov
pop
nop
repnz
dec
jp
fmull
mov
movsl
inc
pop
mov
out
cmp
imul
push
je
sahf
int3
sbb
mov
sub
xchg
out
add
jle
dec
xchg
sti
jecxz
pop
int3
sbb
cld
xchg
sbb
ja
and
mov
xor
or
mov
cmp
xchg
sub
lods
stc
adc
mov
push
inc
fstpl
subb
cmc
sbb
pop
arpl
fcoml
and
mov
inc
mov
mov
test
adc
cmp
push
push
out
out
sahf
mov
fsubl
mov
aam
or
dec
fldl2t
enter
int3
xor
fildl
push
mov
andl
mov
jl
fisubl
lcall
mov
ret
adc
sti
stc
and
in
inc
arpl
mov
mov
out
add
sti
and
fdivs
mov
dec
sub
lods
in
mov
leave
jge
xchg
and
pop
xchg
fsubr
scas
sub
decb
in
dec
je
adc
cs
aaa
jp
cmp
das
cwtl
loop
cltd
mov
into
adc
stos
jnp
jl
sbb
movsl
call
cld
int
mov
xchg
jp
mov
jb
cmp
fisttpll
pusha
cmp
je
add
cmpsl
mov
adc
xlat
fildl
pop
sarl
pop
dec
inc
lret
adc
jae
cwtl
inc
aas
outsb
mov
scas
or
xor
or
dec
jb
loope
call
mov
adc
fdivrs
fbstp
mov
xchg
sbb
mov
test
scas
cmpsl
ss
xor
and
adcb
pusha
fadd
pop
inc
xor
dec
adc
xor
loopne
fisttpl
xlat
add
pop
mov
push
dec
test
xor
addl
dec
cmp
mov
inc
mov
mov
push
insb
mov
clc
sbb
mov
daa
fisubrl
cltd
or
add
enter
dec
repz
push
mov
sbb
jnp
jle
jmp
adc
icebp
insb
test
dec
adc
and
fwait
popf
fstl
das
in
popa
xchg
jg
sub
xor
xchg
xchg
or
adc
loope
inc
add
mov
mov
sbb
mov
fwait
incb
push
mov
test
shrb
xchg
dec
std
sbb
push
fneni(8087
dec
nop
dec
pushf
ret
cmpsb
add
pop
ret
sbb
mov
sbb
push
aaa
shl
pushf
fdivrl
dec
sbb
mov
xchg
arpl
cwtl
stos
ljmp
mov
adc
call
mov
insl
lea
out
jmp
xchg
jmp
jne
call
mov
out
sub
xor
dec
orb
inc
sbb
mov
fdivrs
mov
mov
mov
js
cmp
ja
sub
sbb
push
rcrb
stc
mov
add
add
stc
pop
push
je
push
fdivrl
cli
sbb
xor
lahf
fadds
pusha
jp
lcall
add
sub
frstor
inc
mov
adc
adc
cli
sbb
iret
out
push
xchg
test
mov
pop
mov
pop
jb
or
fadds
ret
dec
mov
pushf
push
outsb
sub
jae
nop
sti
scas
cmp
push
bound
ljmp
mov
add
frstpm(287
fmull
sub
rorl
xchg
pop
push
mov
push
leave
popl
in
dec
pop
cltd
in
repnz
es
mov
push
cs
imull
in
mov
mov
xor
mov
xor
je
inc
dec
pop
out
int3
pop
mov
cwtl
or
imul
icebp
xor
cld
cmp
sbb
aaa
or
mov
sub
insb
mov
pushf
pusha
adc
cld
mov
repz
jo
fldcw
scas
cmp
repnz
mov
fcomps
pop
rorl
jg
stos
in
cmp
xchg
aas
or
fmul
cmpsl
in
repz
lahf
lock
dec
lret
xor
cli
popa
xchg
loopne
outsl
es
or
repnz
adc
adc
shr
add
js
inc
pop
lods
sti
aam
pushf
push
lret
aaa
stos
push
adc
jg
inc
outsb
mov
mov
mov
adc
xor
pop
jae
lds
mov
out
dec
pop
mov
or
call
jmp
out
add
nop
daa
jp
jae
stc
sub
pop
pop
clc
insb
movsl
adc
pushf
rcl
cmp
mov
aad
sti
es
and
sbb
jo
push
inc
jns
cmp
stos
and
jno
test
sbb
sub
mov
mov
repz
push
pop
jo
les
sbb
adcb
cmp
jnp
inc
lods
cld
adc
jno
jb
mov
jl
pushf
lcall
pushf
sarb
ret
xchg
pop
adc
sub
sti
movsb
jbe
stc
add
es
push
mov
add
pop
mov
ds
mov
jnp
lahf
mov
xor
repz
imul
in
adc
xchg
mov
scas
jmp
mov
cld
pop
loope
push
dec
test
sub
hlt
mov
mov
or
scas
jecxz
lock
into
idivb
xor
mov
or
test
mov
sub
pop
pop
in
popf
mov
add
popa
movsb
fstpl
mov
push
mov
popa
sub
xchg
cmpb
push
xchg
fadds
add
sbb
pop
pop
pop
jo
or
xor
cltd
lea
andb
cwtl
aam
movl
inc
leave
movsb
imul
pop
xchg
adc
in
sbb
xchg
pop
std
fidivrs
lahf
mov
out
aad
xchg
sar
pushf
aad
adc
cs
inc
dec
test
xchg
or
pushf
fnstsw
xor
call
repz
and
cmp
xchg
movsb
jmp
xchg
mov
or
cmpsb
jnp
cmc
test
pop
cli
and
add
lods
sti
scas
cwtl
xchg
mov
movsb
sti
div
adc
das
pushf
subl
cmp
mov
rcrl
xor
mov
rcrl
sarl
mov
leave
popfw
mov
mov
cld
cmc
cmp
orb
movsb
adc
les
pushf
push
sub
int
mov
mov
gs
in
xor
fs
aam
lods
in
jg
ror
mov
jbe
push
imul
and
dec
or
jle
mov
add
pop
loop
mov
std
push
out
out
xchg
fsub
add
je
imul
cmpb
sarb
sub
or
sbb
aas
movsb
pusha
mov
sahf
repz
cmpsb
aas
mov
sbb
adc
sahf
mov
lret
jmp
pop
push
and
cwtl
mull
xchg
cmp
dec
xchg
cmp
popa
sahf
scas
and
loope,pn
cwtl
jnp
in
aas
pop
fmull
adc
shll
cmp
shr
movsb
jg
cwtl
popf
or
movsl
jnp
cmpsb
mov
jl
imul
arpl
lret
cli
test
js
jg
inc
jg
int3
fstpt
push
int
xchg
mov
repz
outsb
lock
xor
lods
xchg
aas
mov
jg
mov
jns
jns
xchg
cmc
enter
mov
mov
xchg
shrb
cmp
icebp
mov
xchg
in
fwait
outsb
adc
loop
pop
and
sub
xlat
xchg
pop
and
out
ret
jo
pop
pusha
sar
scas
cli
repz
pop
or
andb
jnp
add
sbb
push
jl
pop
cld
fidivrs
sub
pop
sbb
mov
shlb
aas
dec
add
xchg
popf
add
popa
dec
clc
popa
mov
popa
push
sahf
lret
sbb
int
loopne
dec
cli
jp
cli
mov
xchg
scas
jmp
xchg
lds
cmpsb
int
cwtl
mov
jo
hlt
adc
xorl
rcr
xlat
shrb
mov
idivl
hlt
shrl
sti
dec
mov
jge
dec
dec
cli
cmpsl
mov
rcrb
pop
mov
in
jmp
pop
mov
mov
lahf
sub
mov
jnp
mov
add
dec
sbb
xchg
sbb
lret
mov
mov
fsubrl
mov
addr16
pop
dec
pop
popa
je
xchg
mov
shr
aam
clc
and
mov
pop
hlt
mov
fmul
mov
mov
jl
jl
mov
faddl
pusha
sbb
test
ret
xor
xchg
jae
cmpsb
xor
test
call
pop
sbb
pop
mov
sub
jns
stos
jg
stos
add
idivl
cwtl
push
mov
mov
mov
data16
repnz
adc
sbb
mov
mov
xor
mov
loope
cmp
mov
xor
cmp
sti
mov
movsl
jg
aad
push
adc
mov
and
mov
push
int
lcall
jmp
les
jle
cmpsl
cmp
jl
cs
mov
sub
xor
sahf
shl
jnp
lahf
pushf
sbb
sarb
or
lods
lods
sbb
lods
adc
outsl
addr16
mov
xchg
sbb
outsl
add
movsl
push
fisttpl
sbb
jmp
mov
mov
lds
call
jnp
ss
arpl
cmp
push
call
fnsave
std
ret
mov
call
in
mov
sub
pop
es
mov
js
adc
lods
ret
loopne
mov
cmp
xor
jae
cmc
and
icebp
loope
je
stos
xor
push
inc
pop
pop
pop
pop
xor
scas
les
ret
add
push
cmp
mov
fnsave
call
cvtps2pd
popa
inc
cs
hlt
shll
mov
adc
push
hlt
push
xor
inc
xchg
cwtl
mov
xor
scas
jg
jmp
js
or
enter
jmp
push
pop
repz
mov
jmp
cmp
lds
adc
outsb
cmp
and
fdivs
mov
inc
cli
sbb
je
loop
mul
push
pushl
inc
push
jg
imul
enter
pop
cmpsl
push
cmp
push
jmp
xchg
xchg
pop
call
pop
pop
pop
ds
jnp
sarb
push
fnstenv
std
xchg
fsubs
cmc
rcrl
ja
push
rcrb
in
lcall
push
scas
jg
cld
mov
xchg
and
imul
jno
bnd
jbe
stc
ret
enter
pop
xor
mov
cmpsl
aam
popf
mov
in
xchg
or
lock
ss
fsubrs
fdivrs
test
sub
shlb
bound
mov
addl
xchg
das
pushf
xor
lret
movsl
lret
in
ret
fs
mov
and
rol
scas
cmpsl
or
sbb
xor
test
aaa
pop
lods
add
test
aas
push
pop
ret
push
lahf
outsl
sub
cmpl
xchg
or
mov
testb
fiadds
imul
aam
out
nop
jo
fidivs
xchg
loopne
jns
and
addr16
sbb
dec
xchg
in
xor
stos
sti
cmp
dec
lcall
ret
fldl
mov
pop
out
rclb
fadds
aas
mov
lock
sub
xor
cmp
mov
and
mov
and
xorb
out
negb
and
movl
jecxz
pop
jb
push
js
in
rolb
movsb
push
lods
xchg
pop
fmull
fstps
popa
fiadds
cmpb
leave
mov
pusha
sahf
mov
faddl
sarl
push
test
sub
fmull
rcr
xchg
pushf
add
aaa
js
xchg
add
adc
mov
sarl
pop
leave
sbb
mov
xor
cmpsl
fwait
ret
jle
imul
mov
pop
mov
ficoml
and
sahf
into
das
jb
and
test
and
sbb
cli
cltd
pop
lock
subl
mov
rcrb
or
pusha
cli
mov
cwtl
std
lcall
out
pushf
sbb
cmp
pop
sub
cmp
mov
mov
fidivrs
lret
adc
mov
mov
inc
ds
lea
xchg
sbb
popl
xchg
dec
popf
mov
neg
lods
xchg
fstpt
sbb
or
sti
popa
mov
movsl
call
sbb
enter
pop
cmc
fisubrs
inc
xor
xor
cmc
cmpsl
and
push
aad
popf
cld
test
inc
pusha
incl
je
push
std
mov
mov
jb
loope
push
rcrl
or
push
aas
ja
test
add
cmp
xor
mov
imul
mov
faddl
xor
mov
sbb
adcb
cmp
mov
mov
sti
mov
call
rorb
mov
pushf
add
push
das
andl
mov
insb
mov
pop
and
test
mov
clc
idivb
mov
arpl
mov
add
cmpsb
sbb
pushf
outsl
insb
ds
cmpsb
push
paddsw
fisubrs
daa
dec
pop
shlb
call
push
ljmp
es
test
mov
sahf
adc
fucomi
sbb
push
cli
in
xchg
test
fdivrp
add
mov
addr16
sbb
das
int3
push
or
imul
jl
cmp
sub
cmp
fs
mov
dec
into
adc
inc
fadds
pop
sbb
icebp
insl
call
fnstenv
cli
pop
mov
xchg
nop
scas
pop
cmc
fldt
inc
jg
dec
ds
fcoms
repnz
dec
sbb
sbb
inc
icebp
icebp
lds
in
pop
lea
pop
push
cli
cwtl
mov
mov
sbb
xchg
xlat
in
jns
add
and
nop
cwtl
mov
dec
mov
mov
movsl
add
jg
pop
icebp
es
push
mov
addr16
lock
movb
cs
mov
fwait
dec
subl
fistl
dec
mov
jp
jge
test
sbb
push
ret
enter
das
insb
xchg
rcrl
pop
mov
cmp
jnp
xor
push
aas
push
push
in
fadds
jp
adc
dec
lahf
frstor
loopne
inc
mov
and
push
or
pop
adc
and
stos
fildl
lcall
test
hlt
sub
out
adcl
xorl
dec
mov
cld
xchg
sbb
loopne
and
xchg
inc
mov
cli
pop
stos
and
cmpsb
mov
mov
sub
fadd
pop
mov
jg
jmp
adc
test
lods
repz
mov
in
push
inc
aam
aad
sbb
pop
sub
push
out
loope
mov
bound
or
inc
cwtl
sbbl
out
lret
adc
sbb
push
lret
sbb
xchg
inc
xor
and
ret
jno
pop
mov
mov
mov
mov
test
inc
xor
sub
add
jns
mov
xor
pop
or
cmp
or
push
adc
in
lret
inc
jmp
bound
les
cmp
mov
jecxz
sbb
imul
fnsave
adc
pop
xchg
fcomip
or
cmp
push
mov
stos
and
and
sub
leave
adc
cmpl
daa
pop
fs
lret
inc
cmp
imul
cld
mov
out
cwtl
mov
dec
inc
out
incb
and
mov
xor
add
sub
cmp
mov
xchg
and
cmpsl
mov
in
pop
lods
into
xchg
movsl
and
mov
push
pop
lahf
sbb
sahf
xor
ljmp
jmp
mov
jnp
js
cmp
out
add
and
jge
sbb
rol
jg
mov
ja
sbb
sbb
out
pop
xor
mov
aam
fmuls
pop
sbb
loop
pop
out
pop
adc
mov
js
arpl
pop
mov
lcall
pop
jg
aad
lds
cmp
repz
cmp
ret
mov
xchg
cli
sbb
mov
mov
pop
jne
fistps
popa
push
inc
cmp
pop
mov
push
mov
dec
cmp
mov
shrb
pop
hlt
sbb
mov
daa
fcompl
jecxz
cmp
adc
push
mov
add
fwait
cmp
ret
jb
pop
test
rorb
enter
xchg
test
mov
scas
mov
add
mov
xor
inc
mov
mov
shll
sti
add
add
in
pop
dec
sbb
sub
dec
adc
or
imul
mov
xor
adc
fs
inc
xchg
cmp
pop
xor
push
cli
lret
cmc
mov
dec
inc
or
cmp
inc
and
sub
outsb
cmp
mov
inc
ret
repnz
mov
mov
lahf
call
imul
add
ja
mov
scas
testb
adc
lods
sti
enter
cmp
or
xchg
sbb
popa
js
cmp
cwtl
js
aas
stos
cmp
mov
cmpsb
pop
jp
stos
stc
insl
cltd
mov
mov
leave
lds
loop
or
pusha
lcall
fs
mov
sbb
imul
enter
sbb
mov
movsl
popf
lods
mov
dec
fsub
pop
jl
mov
sti
fs
ret
cwtl
pushf
adc
xlat
mov
sti
in
dec
subl
pop
aaa
pop
xor
sub
cmpsb
cld
fwait
pop
sub
or
mov
and
xor
mov
enter
mov
icebp
xor
xchg
dec
int3
mov
xchg
or
and
loope
pop
jbe
pop
mov
mov
pushf
les
fadd
dec
imul
aam
jb
arpl
test
cmp
jo
inc
insb
pop
jne
sbb
jp
lahf
mov
cmp
dec
inc
sbb
jmp
cmp
scas
negl
cmc
stos
test
loopne
jnp
push
ja
pop
push
jnp,pt
outsl
or
or
and
pop
dec
xchg
daa
jno
push
inc
add
mov
lock
mov
movsl
sbb
xor
cmp
shl
pusha
repz
and
pop
jle
jno
fsubs
jge
jmp
rorb
and
lcall
sub
push
sti
les
mov
xchg
lods
fsubrl
lds
mov
cwtl
icebp
mov
es
cmpb
stc
icebp
jbe
fdivr
inc
and
push
mov
xor
andl
mov
insb
cltd
ret
outsb
pushf
adc
xor
mov
sub
sbb
lret
jg
loop
aad
lea
cwtl
push
ds
rcll
jp
pop
xor
popf
jg
mov
arpl
sti
or
pushf
xchg
xchg
xor
push
stc
lods
out
lods
fcomps
pop
stos
xor
call
stos
jg
or
xchg
push
or
adc
adc
mov
dec
or
xchg
fwait
pushf
push
xchg
das
xchg
fpatan
push
or
sti
mov
cmp
or
aad
sti
scas
testl
mov
enter
add
pop
mov
dec
xchg
rcr
mov
fsubrl
jecxz
xchg
outsb
in
sub
jno
adc
orb
jb
iret
clc
dec
sbb
push
mov
mov
dec
pop
and
mov
pop
jmp
leave
cld
inc
jl
clc
push
mov
pushf
cmp
out
and
cli
lahf
xor
sahf
mov
inc
cwtl
addr16
sahf
imul
aam
pop
sbb
xchg
pop
and
sar
cwtl
ss
in
sbb
jl
int3
jne
call
pop
jge
add
aad
cmpsb
imul
in
sbb
inc
push
add
sbb
loopne
push
cmp
add
mov
clc
loopne
cmp
dec
sbbb
shll
inc
stos
jbe
stos
mov
xor
sbb
pop
xlat
orb
ja
jnp
push
aad
push
mov
gs
out
xchg
cmp
nop
push
and
shr
jge
clc
fwait
xchg
add
fwait
sub
mov
mov
stc
pop
cmp
mov
lcall
and
xlat
stc
sub
je
pop
jb
cs
jo
pop
xchg
lea
push
in
pop
push
loopne
in
into
icebp
xor
push
pop
pop
xchg
sbbb
test
inc
ficompl
std
es
inc
jl
dec
clc
pop
lahf
jle
mov
cli
jno
xor
push
sti
je
jns
out
or
rcrb
stos
dec
aas
daa
stc
dec
incb
pop
in
lods
cmp
pop
inc
mov
popf
rolb
les
push
enter
adc
fisubrl
inc
mov
cli
icebp
pushf
cmp
daa
rep
cwtl
jbe
jle
mov
loope
mov
lret
outsl
jmp
jno
lcall
cmp
jl
sub
es
add
pop
adc
add
sub
jb
sbb
mov
in
test
xchg
sbb
inc
and
enter
mov
pushf
inc
sbb
nop
adc
cmc
aas
js
jo
mov
cli
pushf
and
negb
mov
jg
dec
sbb
dec
mov
mov
ret
mov
icebp
mov
test
into
mov
negl
or
jae
dec
mov
ds
xchg
push
imul
push
aaa
cmp
ja
mov
out
jg
sti
push
loope
lea
cmpsb
test
test
sti
dec
mulb
mov
push
loopne
mov
mov
negl
das
call
fcompl
or
jnp
mov
lcall
mov
insl
jl
cmpl
mov
cld
push
xor
and
mov
xchg
rorb
fwait
mov
out
sbb
jp
leave
aaa
push
cmp
ret
jp
pop
sbb
push
xor
pushf
testb
mov
pop
ret
cmp
mov
test
or
mov
cmp
pushf
mov
sub
adc
ret
pop
mov
test
sti
stos
loop
les
daa
jo
push
cmpsl
test
in
sbb
and
fcompl
xchg
mov
fwait
stos
xchg
test
scas
aas
loope
dec
cs
sbb
adc
or
mov
jg
popf
push
negl
outsb
or
pop
cltd
cmpsl
pop
aas
cmp
jp
mov
mov
cwtl
shll
pop
inc
jno
add
shrl
pop
mov
int3
insl
adc
lea
aaa
hlt
push
xchg
fcomi
test
jns
adc
mov
fsubl
and
cmp
cmp
mov
push
stos
sti
inc
sbb
mov
sbb
mov
sti
mov
mov
sbb
cmpsl
ja
nop
stos
mov
ss
push
mov
loop
cld
mov
jne
pop
fsubp
push
test
cmp
leave
pop
jae
aaa
mov
popa
aas
cmp
insb
pop
scas
cld
or
inc
lcall
mov
imul
pop
lods
mov
jl
jo
repz
jns
mov
pushf
lds
pop
repnz
leave
push
jbe
inc
jge
pushf
cwtl
cmp
movsl
shrl
subb
in
inc
movsb
sti
dec
mov
fdivr
push
or
outsb
inc
sbb
icebp
jae
cld
ja
push
movsb
test
pop
ja
sarl
push
inc
push
xor
pop
sbb
push
push
cmp
pop
fcomps
insl
adc
sub
stos
xor
stc
jns
rorb
pop
test
xchg
lret
push
push
push
leave
sbb
dec
mov
pop
sahf
out
lods
xchg
inc
clc
inc
pop
sub
sahf
mov
lcall
or
pop
mov
push
inc
test
aas
mov
sbb
inc
mov
xor
fs
popl
std
push
test
cmc
ja
inc
mov
fisttps
jg
add
jle
iret
or
jns
addr16
add
add
pop
and
imul
int
mov
ds
out
pop
cmp
mov
xchg
jl
xor
ret
mov
imul
push
pop
inc
lcall
jge
push
mov
or
jge
sti
mov
repz
mov
loope
fsubs
cmp
fldt
cwtl
mov
mov
add
outsb
mov
pop
or
lds
mov
pop
rcrb
out
sub
xor
cmpsb
incl
push
push
shll
bts
adc
repz
sub
lret
mov
push
push
jae
pushf
mov
or
xor
sbb
pop
lods
mov
fstps
iret
cltd
fsubrs
mov
jno
xchg
jmp
movsb
aas
adc
or
xlat
scas
xchg
sti
rcrb
fstpl
dec
mov
or
jp
pop
adc
stos
mov
jb
loope
mov
mov
mov
push
push
jecxz
cmp
cmpsl
mov
lret
loope
pop
imul
adc
cli
and
fidivrl
push
sbb
dec
pushf
movsl
push
std
orb
and
push
in
pop
lret
sbb
mov
call
bound
scas
pop
inc
adc
dec
imul
adc
lcall
xchg
push
ret
mov
push
push
xor
and
jo
aad
std
out
jbe
ds
repnz
pop
pusha
fwait
xchg
pop
dec
add
jo
cmp
imul
and
into
repz
out
ret
scas
popa
jbe
int3
in
data16
sbb
adc
jge
ja
in
fs
fdivs
cli
dec
cmc
push
jno
mov
mov
lret
inc
inc
mov
sbb
jl
into
push
fistpll
sub
sti
sub
mov
xor
pop
mov
lret
sbb
xchg
call
pop
pop
add
das
sub
lods
jl
div
pop
push
mov
test
loopne
sti
lret
xchg
nop
clc
test
pop
xor
pop
dec
in
add
fnstsw
and
dec
xor
movsl
sahf
push
adc
fldl
je
outsl
in
cmp
xchg
arpl
pop
loope
shrb
push
and
pushf
jbe
push
loop
mov
pushf
mov
setle
aas
out
popa
or
add
xor
in
lock
repz
test
cli
shrl
pop
mov
mov
pusha
dec
xchg
jmp
data16
enter
into
notb
stos
loope
ja
mov
bound
push
ja
les
add
jo
clc
sahf
stos
jnp
pop
inc
enter
imull
adc
xor
pop
movsl
xor
xchg
sti
and
jle
jb
add
lea
mov
push
addl
in
pop
cmp
jle
and
lcall
mov
loopne
cmp
or
inc
ds
adc
movsb
sbb
sbb
push
negl
xchg
daa
adc
rcl
lret
push
mov
addb
sti
sahf
sbb
sub
ret
addr16
xor
lcall
or
test
adc
int3
adc
loope
ror
and
lahf
fwait
int
cmp
push
imul
outsb
mov
or
fstl
sti
popa
jo
sub
sub
jne
popa
cmp
popa
xchg
cmp
inc
mov
jb
stc
dec
pop
mov
in
rcll
cli
scas
or
int3
adc
mov
frndint
fsub
outsl
lahf
cmp
fdivs
mov
xchg
testl
sub
shrb
fwait
rol
jne
adc
fdivs
pushf
pop
aas
mov
or
jmp
repz
adc
into
daa
cs
clc
adc
mov
push
dec
pushf
stc
sbb
sahf
cmpsl
aad
out
into
add
xor
mov
nop
jmp
lahf
lods
cmp
insw
jb
insl
jl
push
pop
mov
sbb
jb
pop
in
enter
mov
dec
test
rolb
in
and
bound
insb
cld
call
scas
lahf
into
jno
mov
fsubrl
and
add
xor
pushf
mov
sbb
stos
addb
div
in
and
and
mov
hlt
inc
push
sub
pop
daa
pushf
scas
inc
leave
sbbl
stos
pop
movsb
jns
cwtl
call
and
push
jle
adc
out
popf
inc
mov
jmp
jae
lods
aam
push
nop
js
inc
inc
sbb
stos
adc
call
imul
pop
std
jmp
mov
sarb
lahf
pop
cld
mov
sub
jo
and
xchg
mov
int
cli
out
xchg
cwtl
insl
loop
jecxz
and
xchg
js
fwait
xchg
das
pop
jle
subb
mov
rclb
cmpsl
loope
jle
shll
scas
in
movsl
mov
inc
or
sub
xchg
fcoms
jbe
sub
add
fwait
pop
negl
stc
test
mov
fadds
mov
es
pushf
xchg
icebp
rorl
rolb
mov
jae
and
std
sbb
ficomps
mov
sub
out
jae
mov
in
xchg
jnp
jno
out
dec
fisubl
stos
inc
xor
mov
sti
inc
lods
cmpsb
insl
in
test
mov
sbb
jno
push
pop
cmp
test
test
dec
sbb
out
add
mov
cmpsb
sbbl
hlt
nop
rol
aas
data16
cmpsb
fcmovu
fisubrl
mov
roll
and
pop
rorb
and
push
xchg
sti
sbb
adc
dec
cld
push
push
lods
aas
popl
fisubrl
jnp
adc
jmp
sbb
mov
ficoms
add
fdivr
cmp
in
cmp
dec
cmpsl
sti
sub
sbb
ljmp
sub
lret
data16
and
int
jnp
lods
jle
out
or
loope
fmull
cwtl
mov
outsb
in
ret
jle
mov
fmul
jae
fdivrl
mov
sbb
cwtl
in
pop
mov
push
pop
lahf
je
loopne
push
sbb
cwtl
sti
adc
cmp
aam
mov
fsubrs
pushf
cwtl
add
inc
mov
into
popf
jg
flds
pop
mov
lahf
and
call
daa
in
dec
jb
lcall
xchg
fcomps
jne
into
jge
enter
mov
outsb
mov
ds
fcom
nop
fstpl
pop
cmpsb
fwait
sti
in
push
stc
sub
nop
fsubrs
int3
mov
jle
mov
mov
test
cmc
fsubr
ljmp
mov
mov
mov
adc
push
cmp
mov
mov
fcompl
xor
or
mov
scas
sub
sbb
stos
clc
push
mov
xor
mov
popa
and
xchg
fxch
lret
pop
pop
adc
loope
xchg
rclb
in
sbb
xchg
xchg
or
pop
xor
dec
mov
mov
xor
repnz
dec
xchg
xchg
inc
mov
out
cwtl
mov
pop
xchg
fcompl
and
adc
mov
sbb
scas
pushf
cmp
jl
xor
pop
push
sti
pop
or
loope
pop
test
push
mov
leave
pop
push
add
mov
loopne
lcall
mov
popa
xchg
mov
addr16
add
fbstp
test
pop
pop
push
mov
lods
sub
fisttpll
lahf
subb
jbe
aad
xor
cmp
cmp
pop
sub
xor
aad
sbbb
hlt
clc
pop
xor
sti
inc
cmp
lock
pop
pop
jmp
sbb
jecxz
sub
jle
add
inc
jns
outsl
mov
push
sar
cwtl
int3
sbb
xor
sub
mov
test
enter
pop
mov
test
xchg
hlt
cbtw
rcrb
jmp
mov
test
nop
mov
mov
and
mov
adc
mov
push
adc
ror
fwait
sti
loope
pop
dec
mov
stos
mov
sbb
rolb
shll
in
jb
pusha
xor
dec
mov
pop
sbb
sub
pusha
cld
and
xchg
mov
xor
adc
inc
daa
xor
sbb
and
xor
mov
insl
adc
pushf
cwtl
pushf
test
pushf
lahf
arpl
adc
add
mov
xchg
ret
loop
iret
je
cmp
jle
xlat
jg
jne
mov
fs
mov
aam
cwtl
lea
in
stos
lcall
scas
pop
mov
add
mov
jg
ficoml
push
mov
fisttps
divb
inc
pop
incb
or
lret
dec
arpl
pop
enter
xor
push
dec
mov
ss
jle
and
push
jne
test
lcall
inc
int
cmp
movsl
xchg
adc
or
sbb
inc
out
jb
xchg
stos
out
int3
scas
cmp
pushf
mov
lcall
adc
int3
add
pop
mov
outsl
les
aaa
ss
and
add
add
jp
int3
jae
jbe
lahf
pop
outsl
mov
cmc
icebp
outsb
cmpl
jo
dec
dec
or
outsb
xchg
int
cli
cmc
test
inc
push
das
rorb
cmpsb
add
cwtl
nop
lds
push
fstpt
imul
int
stos
sti
add
jge
daa
loop
cmp
enter
fsub
mov
aam
jg
das
cmc
mov
inc
sub
xchg
mov
outsl
mov
push
mov
fsubs
rclb
sbb
fldt
xor
mov
popa
mov
jae
arpl
sbbl
scas
xchg
fcmovnbe
shrb
ret
fists
fwait
enter
xor
mov
lret
sahf
jb
imul
mov
mov
xchg
pop
mov
push
pop
sub
add
jnp
pop
mov
cmp
imul
sbb
add
pushf
into
in
mov
jne
fisubrl
mov
mov
jmp
mov
lret
adcb
jg
sbbl
test
int3
pusha
mov
mov
lods
xor
mov
stos
and
fmuls
inc
or
idivl
loop
sub
sub
push
add
cli
cltd
fiaddl
and
mov
pop
pop
orl
sbb
aas
lret
shlb
out
pop
ret
jne
add
mov
loope
popa
mov
lds
cmpsb
pop
jae
cli
or
out
cmpb
in
cmp
xor
ret
js
sub
lods
aam
sbb
jae
mov
xor
mov
cmp
mov
std
sbb
xchg
popa
rcrb
mov
and
mov
mov
arpl
dec
arpl
rorb
fcompl
xchg
fwait
outsb
mov
dec
pop
test
or
pop
adc
jp
adc
push
nop
pusha
sbb
cmc
fildll
rcll
jg
mov
cmp
enter
jb
pop
in
aam
mov
in
ret
lock
cmp
lods
cltd
jnp
sbb
add
or
inc
pop
jbe
dec
lahf
mov
push
mov
mov
pop
sub
pop
lcall
jnp
rcrb
outsl
pop
push
xchg
in
cmpsb
les
sbbb
into
loopne
and
adc
shll
xor
clc
pushf
cmp
mov
inc
push
pop
sbb
adc
cld
or
data16
pop
mov
sbb
fwait
lret
mov
push
push
lock
xor
out
add
xorb
pop
mov
scas
sti
jno
pop
loop
rol
mov
ret
xchg
pop
jge
int3
mov
hlt
cmp
aas
push
mov
xchg
jge
pop
xchg
jno
xchg
jae
es
xor
mov
pushfw
jb
sbb
fidivrs
cmovns
fwait
sti
repnz
add
xor
xor
sbb
cmp
orb
sarb
xchg
incl
mov
mov
jnp
test
cmp
and
ja
jno
out
lahf
mov
xor
sub
xchg
jnp
aaa
jecxz
dec
mov
xchg
movsl
es
jo
in
push
mov
stos
and
jne
mov
add
cmpsb
sti
mov
mov
pushf
jecxz
int3
in
pop
cmp
mov
enter
xchg
xchg
mov
jnp
outsl
ss
mov
lret
sbb
pop
mov
jno
aas
add
lods
loope
flds
mov
insb
and
jp
jp
cli
in
nop
adc
dec
std
enter
cmp
bnd
fdivl
sub
mov
mov
les
bound
mov
sbb
mov
xchg
or
push
es
and
cmp
dec
pusha
pop
cmp
ljmp
daa
notl
cli
dec
push
or
cmp
idivb
xchg
mov
xchg
lods
mov
test
cmp
loopne
mov
mov
mov
imul
lods
pop
push
insl
mov
sti
jp
mov
stos
dec
xchg
jo
pop
add
aam
push
stos
daa
test
push
popa
sbb
clc
or
or
sbb
out
dec
xor
cmp
jnp
bound
int3
test
xchg
and
pop
cmpsl
cs
ss
xchg
cmp
add
cmp
mov
enter
cmp
push
popf
mov
sbb
popf
rorb
xlat
js
xor
push
addr16
fidivs
scas
pop
mov
mov
imull
mov
aaa
mov
inc
out
cmpsb
push
repz
adc
mov
mov
scas
cmc
xor
sbbb
add
pushf
pop
cmp
lret
rol
pop
mov
outsb
adc
jle
insl
ljmp
mov
hlt
fsubrl
and
cld
ds
cmpsb
mov
std
out
stos
fmuls
mov
enter
sub
lahf
pop
push
jl
adc
pop
mov
fistpll
and
cmpsb
dec
dec
insb
adc
fsubl
mov
ja
push
cmp
rorl
fmuls
insl
aad
push
lods
mov
dec
push
fmuls
scas
sti
dec
add
iret
rcl
jno
in
or
xchg
popf
xchg
arpl
addr16
jae
hlt
sahf
sbb
out
cli
addl
outsl
push
lcall
fcoml
leave
pop
and
mov
out
fstpt
xor
je
xchg
xchg
push
test
mov
fnstenv
fsubrs
add
pop
dec
dec
and
mov
or
scas
icebp
dec
call
stos
jg
inc
push
hlt
mov
scas
push
jne
addb
es
sti
xor
or
sbb
xor
pop
mov
dec
bound
push
jae
enter
sbb
loopne
mov
leave
int
cmp
sbb
arpl
push
movsl
pop
cmpsl
push
scas
mov
repz
sbb
cmp
pop
jl
pushf
adc
fdivrs
xrelease
clc
cmp
movsb
jecxz
pop
mov
mov
pop
popa
mov
cmpsb
lods
mov
push
rcr
lahf
jmp
loope
shrb
nop
outsl
jle
in
xor
push
or
loope
loopne
mov
mov
and
jno
pop
mov
lret
aaa
neg
mov
movsl
in
and
push
out
adc
out
cld
mov
pop
aas
push
adc
xchg
jb
fmuls
jecxz
jle
jae
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
add
mov
sub
push
push
call
test
mov
jne
push
push
call
test
mov
jne
push
push
call
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
push
pushl
pushl
call
pop
mov
cmpl
je
mov
push
push
call
mov
decl
mov
pushl
pushl
call
mov
push
push
pushl
call
pop
and
mov
je
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
mov
xorl
mov
push
push
call
mov
and
mov
jne
push
pushl
push
call
pop
subl
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
mov
mov
push
pushl
call
mov
mov
rorl
add
mov
lea
push
lea
push
lea
push
lea
push
push
call
mov
add
jmp
pushl
pushl
call
and
mov
je
leave
ret
adc
add
adcb
add
add
adc
sbb
movsb
add
pop
dec
nop
inc
xor
mov
add
lea
push
lea
push
lea
push
lea
push
push
call
xor
pushl
push
call
push
push
push
push
call
mov
pusha
push
push
call
or
je
add
mov
xor
pushl
push
call
mov
mov
push
push
push
call
pop
mov
rep
inc
pushl
push
call
cmp
je
mov
cmp
jne
push
push
call
cmp
je
pushl
push
call
xor
popa
leave
ret
adc
or
sbb
loopne
adc
sbb
add
push
sub
pusha
or
inc
movsb
sbb
add
xchg
inc
add
push
mov
sub
push
push
call
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
push
push
call
mov
and
jne
lea
push
lea
push
lea
push
lea
push
push
call
push
pushl
call
push
push
call
add
pushl
pushl
call
test
mov
jne
pushl
push
call
mov
pushl
push
call
xor
pushl
push
call
test
mov
jne
lea
push
lea
push
lea
push
lea
push
push
call
and
push
push
call
and
mov
je
push
pushl
call
mov
test
jne
push
push
call
mov
and
jne
lea
push
lea
push
lea
push
lea
push
push
call
pushl
push
call
cmp
je
lea
push
lea
push
lea
push
lea
push
push
call
push
call
mov
push
pushl
call
push
pushl
call
mov
pushl
pushl
call
test
mov
jne
pushl
pushl
call
mov
test
je
push
push
call
mov
push
push
call
pushl
push
call
push
push
call
test
jne
pushl
pushl
call
mov
and
je
lea
push
push
push
call
mov
push
pushl
call
or
mov
jne
push
pushl
call
mov
mov
push
push
call
addl
pushl
pushl
call
mov
push
pushl
call
test
jne
mov
subl
lea
push
lea
push
lea
push
lea
push
push
call
jmp
push
push
call
sub
pushl
push
call
push
call
push
push
call
mov
pushl
pushl
call
mov
mov
pushl
pushl
call
test
je
subl
push
pushl
call
cmp
je
and
addl
push
push
call
call
mov
movl
pushl
pushl
pushl
call
pushl
lea
push
lea
push
lea
push
lea
push
push
call
push
push
call
add
shrl
pushl
pushl
call
pushl
call
push
push
call
mov
addl
call
leave
ret
add
add
stos
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
or
data16
add
or
mov
or
test
or
mov
or
mov
add
mov
add
mov
add
mov
add
or
and
or
xor
or
pop
or
fs
or
jl
or
mov
or
mov
or
or
add
add
in
or
hlt
or
add
or
adc
or
es
or
xor
or
push
nop
or
push
nop
or
xchg
add
mov
nop
or
ret
add
nop
or
out
or
add
add
add
or
sbb
or
add
add
inc
xchg
or
add
add
rorb
add
add
pushf
lea
add
add
add
add
add
fmuls
or
insb
lea
add
mov
add
add
add
add
notb
or
xchg
lea
add
or
inc
mov
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
or
data16
add
or
mov
or
test
or
mov
or
mov
add
mov
add
mov
add
mov
add
or
and
or
xor
or
pop
or
fs
or
jl
or
mov
or
mov
or
or
add
add
in
or
hlt
or
add
or
adc
or
es
or
xor
or
push
nop
or
push
nop
or
xchg
add
mov
nop
or
ret
add
nop
or
out
or
add
add
add
or
sbb
or
add
add
inc
xchg
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
arpl
inc
jb
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
push
gs
js
gs
imul
gs
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
imul
add
add
push
imul
insb
insb
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
dec
outsl
popa
fs
imul
js
add
add
inc
gs
inc
push
add
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
add
inc
gs
popa
insb
jne
add
add
fs
imul
add
add
inc
js
je
jb
arpl
jae
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
arpl
fs
jae
add
add
inc
gs
imul
add
inc
gs
jne
jb
outsb
je
imul
jns
add
add
inc
gs
gs
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
push
insb
gs
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
push
gs
gs
jae
dec
jne
gs
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
imul
push
jo
arpl
add
add
jb
jne
insb
push
jb
je
arpl
push
push
inc
push
xor
cs
dec
dec
add
add
inc
gs
jb
jns
imul
add
ja
outsl
arpl
push
arpl
add
je
arpl
jo
jns
add
add
je
imul
outsb
addr16
add
add
ja
jo
imul
add
je
imul
outsb
addr16
add
add
dec
data16
je
arpl
add
inc
fs
jae
push
imul
arpl
add
add
inc
gs
insb
addr16
je
insl
add
add
inc
gs
imul
arpl
add
push
imul
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
push
gs
jb
inc
jbe
outsb
je
add
add
push
gs
gs
popa
insb
jne
inc
js
add
add
push
gs
jb
push
outsl
push
gs
data16
add
push
gs
jne
jb
dec
outsb
outsw
dec
gs
add
add
push
gs
jo
outsb
dec
gs
js
add
push
inc
push
push
cs
dec
dec
add
add
pop
popa
fs
jae
pop
imul
add
outsb
gs
je
add
aas
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
pop
pop
add
push
inc
push
push
dec
dec
dec
cs
dec
dec
add
add
jb
jne
jb
push
popa
insb
jne
inc
