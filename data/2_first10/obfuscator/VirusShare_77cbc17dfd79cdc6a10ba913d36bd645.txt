push
call
ret
ret
xchg
sbb
loop
xor
push
js
bound
push
jg
or
mov
popf
pop
sarb
mov
add
pop
jbe
mov
std
cmp
push
das
xor
pop
fdivrs
mov
fldt
pop
cwtl
adc
xor
adc
js
jbe
mov
ficoms
or
bound
mov
mov
cltd
jmp
xor
cld
adc
cmp
out
xchg
or
out
int3
mov
lret
push
loopne
fcoms
cmp
or
mov
test
pop
ds
fadds
popa
mull
mov
das
sahf
cmc
or
cmpsl
js
fsubr
pop
outsb
fs
mov
and
cmpsl
shll
out
lock
cmp
sti
cs
sub
sbb
inc
pop
mov
dec
and
push
mov
dec
sti
das
sub
xor
xor
notb
mov
sbb
mov
fildll
call
in
fistps
mov
fwait
or
in
sar
or
out
fldt
sub
push
xor
jb
cmp
out
push
stc
aas
pushf
push
int
inc
and
xor
pusha
lret
scas
sar
dec
sahf
jge,pn
dec
jecxz
mov
add
in
xor
stos
xchg
cli
mov
pextrw
ja
in
fadd
and
add
inc
lahf
mov
cli
push
push
fdiv
ret
mov
cltd
xchg
sub
or
mov
or
sub
test
xor
ss
xchg
iret
ret
mov
jecxz
ljmp
push
mov
dec
pop
ret
jae
test
outsb
sbb
mov
ret
stos
mov
or
scas
cmp
mov
adc
pop
outsl
xchg
xchg
add
pop
xchg
test
mov
inc
psubw
adc
hlt
sub
dec
adc
cmp
jbe
mov
adc
and
dec
mov
bound
xchg
mov
imul
push
lret
cmp
push
xor
addr16
xchg
mov
or
ret
les
in
out
sbb
loope
cmp
ret
loop
push
fidivl
dec
imul
jo
int3
les
add
add
notb
notb
pop
cli
stos
aad
out
test
sbb
test
and
inc
fiadds
loope
jecxz
arpl
shll
divb
jno
hlt
das
adc
sbb
and
fbstp
dec
push
nop
inc
call
gs
js
pop
leave
xchg
fmul
dec
sub
inc
xchg
xchg
fwait
imul
lods
lds
jo
dec
cmp
mov
adc
fiaddl
cwtl
sti
in
out
xlat
fldenv
xchg
out
cmp
ret
jle
cmp
popa
ja
xchg
xchg
mov
subb
sbb
xor
mov
sub
sbb
jne
fwait
stc
nop
inc
ja
stos
ret
xor
jp
adc
add
lsl
out
or
sub
mul
push
push
shll
mov
imul
push
sub
push
subb
sbb
dec
sub
test
mov
lods
das
pop
inc
rcrb
mov
xor
lcall
arpl
cltd
dec
fdivp
xchg
push
inc
adc
xchg
pop
xlat
scas
and
dec
rcrl
sub
test
ss
adc
iret
inc
outsb
adc
xor
jge
cmp
jne
inc
xchg
xor
inc
push
int
inc
pop
adc
movsl
test
int3
xor
lods
dec
mov
test
lret
rclb
scas
cmp
dec
dec
mov
scas
sbb
insb
push
lods
xchg
and
add
xor
fs
into
cs
push
xchg
pop
ficomps
push
push
scas
mov
sub
mov
insl
cmp
jmp
loope
or
sahf
mov
push
std
xlat
or
or
jbe
iret
fnsave
fdiv
in
cmpsb
push
jmp
mov
push
mov
lds
adc
int
jmp
inc
leave
adc
mov
subb
cmp
fidivrs
sub
int3
mov
std
icebp
lahf
sarb
js
dec
std
mov
xchg
mov
ljmp
dec
jne
aad
out
aaa
jbe
daa
cs
stos
sub
add
test
gs
call
adc
mov
jnp
pop
inc
or
rcrb
xchg
ret
mov
cmp
xchg
out
push
ret
mov
js
sti
les
bound
jecxz
push
or
lock
adc
shll
dec
mov
jge
in
imul
jmp
xor
push
jo
xchg
fxch
das
jb
and
sub
movsb
cmp
rorb
cmp
dec
cwtl
les
scas
popf
mov
and
lret
dec
push
xchg
jge
incb
sbb
xchg
stc
addb
shrl
add
bound
push
mov
insl
sub
or
sub
popa
sbbl
or
cmp
dec
addr16
mov
popa
xor
sarl
push
test
pop
test
test
nop
scas
inc
sub
sti
jmp
enter
mov
faddl
leave
inc
push
iret
aaa
cmpsb
mov
and
stos
ss
sub
pop
mov
jo
mov
out
push
std
jmp
repnz
push
pushf
sub
push
loop
call
hlt
hlt
movsb
adc
add
push
mov
dec
push
cs
icebp
dec
cmp
stc
test
adc
mov
gs
lret
or
std
inc
sbb
sysexit
pop
loope
adc
stos
dec
mov
mov
out
jns
mov
aam
cmp
pushf
jg
jle
std
pop
push
cmp
arpl
fistpll
xor
js
popa
xchg
outsl
test
out
data16
xchg
or
mov
addr16
cmp
enter
insl
nop
sub
xchg
aaa
repnz
call
loope
jg
repnz
fisttpl
fistpl
popa
mov
push
add
mov
inc
pop
bound
adc
ljmp
push
sahf
dec
mov
in
adc
addb
mov
loope
cs
dec
mov
xchg
sbb
arpl
aad
jbe
sahf
sub
pop
cltd
dec
les
gs
lods
cmpsl
es
cmp
inc
call
push
fsubrl
xchg
cmp
fsubrp
iret
or
outsl
fwait
shlb
sub
scas
sarl
fiadds
xchg
movsb
hlt
test
cld
push
stos
pop
xchg
arpl
ss
fcmovne
inc
cmp
push
sbb
aad
add
scas
lock
incb
mov
or
gs
aaa
jno
cld
jg
xchg
sub
jae
sar
shlb
lcall
shll
pop
inc
jmp
loop
push
cltd
movsl
and
ljmp
adc
xchg
add
add
inc
ja
call
and
notb
stos
jae
frstor
adc
rorb
mov
jp
mov
inc
dec
push
in
jns
dec
rorl
dec
inc
ss
addr16
adc
mov
push
rcl
decb
pop
jl
movsl
push
je
aam
push
test
xchg
xchg
inc
add
neg
mov
repz
jge
jae
xor
adc
jno
jbe
incb
insl
pop
adc
xor
imul
or
xchg
ss
xor
sbb
scas
pusha
adc
shlb
dec
lcall
lock
pop
sbbb
cmc
jge
sbb
aam
mov
imul
ja
mov
or
and
in
push
lea
lea
mov
int3
mov
imul
adc
addr16
cmpsl
adc
les
pop
daa
ds
and
mov
pop
adc
scas
sbb
sub
repz
pop
das
dec
lcall
mov
shll
aaa
lea
jbe
out
loope
mov
inc
xor
xchg
push
xchg
rolb
enter
or
jl
addr16
ljmp
pop
adcl
fs
lea
repnz
push
push
mov
dec
dec
cmpsl
in
sbb
or
aad
cmc
xchg
cs
cli
icebp
iret
arpl
mov
push
imul
addr16
inc
adc
lret
inc
js
outsl
sbb
push
mov
mov
insl
mov
push
lds
add
arpl
cli
fs
inc
mov
lock
cwtl
cmc
out
lret
loopne
icebp
push
ror
pop
bound
sub
test
sub
dec
movsl
jo
addl
jg
aam
outsb
sbb
add
rol
mov
or
or
out
adc
sub
mov
pop
ja
cmpsb
sbb
mov
loope
imul
jecxz
enter
sub
lcall
call
in
mov
movsb
jmp
cwtl
movsl
dec
in
adcl
inc
xor
fisttps
cmp
js
add
sti
insl
ss
xchg
push
and
andl
test
pop
lods
popf
iret
mov
in
dec
bound
pushf
andl
mov
insl
xchg
inc
std
mov
loope
stos
lods
mov
repz
jae
icebp
dec
mov
in
cltd
in
or
pop
aas
mov
jne
scas
in
cmpsb
jno
add
cmp
insb
leave
je
popf
jb
inc
lods
push
push
gs
lods
mov
push
out
pop
pop
cmp
insb
xchg
xor
lods
pop
cli
cli
sbb
push
or
iret
sub
sbb
dec
sti
mov
inc
sti
sub
mov
mov
scas
pop
das
stc
data16
push
lds
push
xchg
sbb
sbbb
mov
xchg
lock
xchg
xor
dec
xor
addr16
inc
push
aam
push
and
sbb
lcall
dec
scas
sahf
iret
or
clc
inc
out
dec
inc
js
clc
adc
fsubr
js
dec
fnstcw
sti
das
dec
dec
adc
mov
adc
xchg
hlt
out
popa
imul
jp
out
sbb
xchg
fstl
mov
hlt
add
sbb
dec
mov
inc
xor
mov
fsts
xor
and
sti
cli
mov
jp
pop
dec
jp
mov
ja
lret
addl
mov
jle
cmp
mov
add
jnp
pop
push
orl
or
movsb
adc
inc
xchg
rcrl
gs
push
imul
iret
in
and
jo
xor
out
mov
mov
push
push
add
fisttpll
add
les
lret
sub
lods
loopne
push
xor
push
push
sbb
aas
shrb
inc
pop
mov
filds
add
xlat
and
cmp
push
fldcw
getsec
cmp
pop
jae
xchg
popa
pop
cmp
test
sub
ret
inc
xchg
xchg
adc
or
sbb
xchg
gs
pusha
adc
daa
inc
mov
cltd
aam
nop
std
push
sahf
scas
mov
inc
movsb
cmp
repnz
lock
mov
lcall
das
divb
daa
daa
add
cmpb
lret
dec
dec
jo
pop
xchg
mov
mov
cli
push
and
lods
xorb
inc
jmp
out
fwait
dec
orb
xchg
push
ret
lds
bound
scas
add
dec
pop
aad
xchg
mov
pop
icebp
cmp
push
inc
test
xor
hlt
fwait
lea
sub
mov
sti
es
xor
ret
fdivrs
mov
mov
lock
xlat
adc
subb
jle
fcmovne
adc
cwtl
ret
sbb
add
out
mov
popa
dec
xchg
test
int3
pop
cltd
jnp
test
inc
pop
xor
idivb
push
cmp
inc
fnstcw
jne
lods
movsb
mov
sbb
in
sbb
dec
ja
pop
mov
testb
pop
xchg
cmp
movsb
repnz
frstor
mov
rcpps
lods
in
test
push
mov
loop
loopne
in
inc
cmpsb
and
xor
or
mov
nop
scas
stos
in
movsl
xor
jns
dec
xchg
xchg
shll
sub
mov
fmull
add
push
es
cli
and
jge
cmp
dec
rorb
popf
clc
mov
mov
sti
dec
fsub
mov
mov
adc
xor
jge
scas
adc
jle
ljmp
dec
lock
cmc
mov
pop
cmp
push
sbb
cs
fadd
cmpsl
mov
rol
mov
push
cmpsl
dec
mov
add
leave
pop
mov
ret
sub
rclb
mov
push
movsb
sbb
lcall
jge
adc
aas
lods
aad
push
rcrb
std
push
push
mov
insl
dec
sti
inc
jl
jae
aas
outsb
jne
outsl
aas
sub
iret
push
cmpsl
shlb
fwait
cmp
push
mov
sbb
test
sbb
jge
jno
and
icebp
pop
addr16
or
mov
dec
and
iret
pusha
or
cwtl
ror
adc
cli
push
xor
popa
jb
xchg
movsb
push
mov
sti
aas
stos
add
xor
and
cmpsl
dec
ret
adc
rcrb
cmpsb
dec
psrld
lock
inc
lods
inc
adc
mov
xchg
jg
or
xchg
outsb
lea
mov
or
fisubrl
scas
rorl
pop
imul
sub
loopnew
dec
inc
leave
cli
xchg
xor
push
or
mov
repnz
push
or
movsl
xor
adc
xor
inc
cltd
fsubrp
xchg
addb
mov
and
aam
sti
pop
inc
mov
inc
cwtl
int3
jp
loopne
or
sub
xchg
cli
jo
pop
mov
lods
iret
pop
dec
dec
dec
loope
pop
pop
testb
loope
inc
dec
push
loopne
cmp
enter
fsubrl
in
repnz
cli
hlt
daa
shl
insb
push
push
shrb
jns
sub
iret
xchg
test
add
out
ficoml
mov
imull
out
lahf
jle
push
stos
push
ss
sbb
roll
rcrl
jmp
adc
repnz
jmp
mov
xor
cmp
testb
add
fstpt
int
pop
mov
jns
sub
jb
leave
dec
sbb
testb
mov
sqrtps
jne
xchg
mov
shrb
adc
js
mov
loope
ret
push
jno
push
xchg
popf
cmpsb
cli
xlat
aam
gs
mov
jmp
fidivrs
loop
cs
cmp
shll
out
sbb
hlt
inc
loop
jno
or
pop
pop
adc
pop
outsb
mov
aas
xchg
out
xchg
cmp
out
push
or
out
push
or
sbb
mov
dec
xor
jecxz
push
mov
mov
dec
imul
xchg
pop
mov
push
stos
lods
mov
out
sub
ficompl
dec
pop
out
cmp
test
push
les
add
pop
pushf
movsb
orb
movsl
or
cmp
or
pop
pop
imul
les
cmc
cld
and
dec
lret
enter
add
mov
sbb
imul
jno
cmpsl
into
imul
push
bndldx
push
hlt
xchg
bound
sahf
jl
mov
outsl
mov
xchg
xchg
sub
lcall
je
mov
test
push
mov
out
jl
ret
dec
std
loop
lahf
pop
shll
sub
inc
loopne
clc
jno
arpl
push
mov
ret
add
out
enter
or
push
stos
or
int
gs
adc
insb
xor
aas
je
or
inc
ljmp
mov
push
and
push
stc
ja
cltd
adc
nop
pop
lret
leave
and
inc
pushf
ja
cmp
cmc
jle
cmp
fsts
xchg
push
mov
inc
sbb
pop
cs
xchg
aaa
or
cmp
outsl
add
mov
in
pop
jne
lods
iret
push
pop
aam
bound
into
and
xchg
sub
outsl
lds
mov
mov
dec
pop
mov
cld
lahf
xchg
jne
push
pop
shlb
add
ljmp
inc
outsl
lret
xchg
mov
test
rcr
inc
or
repnz
jge,pn
or
movsb
or
es
lock
outsb
aaa
jp
push
cmp
dec
mov
sti
ret
and
mov
xor
loop
dec
add
mov
out
inc
mov
jle
and
cld
out
sub
inc
sub
test
out
aad
and
test
lcall
and
aad
jg
push
xchg
fs
pop
adcl
inc
xchg
inc
mov
bound
call
sti
inc
jg
mulb
or
sbb
dec
push
mov
fbld
ljmp
mov
aaa
test
sbb
sbb
sub
mov
fimull
lods
push
popl
popf
movl
fwait
rcrl
xor
dec
push
or
adc
push
push
lock
jg
adc
cmp
jnp
imul
fisttpll
repnz
sub
sbb
js
sub
scas
lods
subl
jae
ret
mov
in
xchg
imul
rorb
sbb
lcall
fcmovne
aaa
mov
loop
sub
sahf
fildl
adc
bound
orl
movsb
clc
add
cmc
stos
loopne
mov
rclb
push
aaa
test
and
cltd
int3
dec
or
outsl
imul
arpl
aaa
jle
insb
std
movsb
nop
into
xchg
xor
out
lcall
mov
cli
jb
jo
lock
mov
mov
pcmpgtd
js
lds
or
movsl
jb
jns
dec
pop
scas
dec
dec
popf
clc
aad
xchg
jmp
dec
pop
outsl
jo
aas
nop
sub
pop
mov
in
sub
loope
sub
jb
stos
mov
setae
pushf
adc
das
shl
shll
push
sub
es
cmp
and
outsl
ds
or
push
mov
jg
cmpsb
pop
xchg
xor
in
mov
push
push
fsubrs
cmp
or
imul
sbb
add
add
and
dec
into
xchg
xlat
lcall
scas
jl
cld
sbb
aad
push
fucomip
loopne
cmpsl
cwtl
clc
in
jb
add
inc
or
and
mov
aam
cmpl
daa
fcoml
mov
push
mov
jae
es
sub
dec
xchg
jge
das
xor
mov
and
sbb
lods
mov
inc
push
inc
add
pop
out
callw
xor
loop
lods
bound
xor
jo
mov
jg
outsl
sahf
cmpsl
mov
into
jle
jmp
lahf
outsb
cmp
imul
mov
adc
or
adc
into
pusha
cmpsb
leave
inc
call
dec
pop
jp
fdivrl
pop
xor
jo
les
enter
jns
ja
jp
loopne
xor
inc
scas
sub
leave
jge
or
adc
out
pushf
sub
push
push
pop
ret
iret
imul
inc
mov
mov
cmp
mov
aaa
jnp
jne
jp
xorb
sbb
or
sub
movsl
inc
out
push
pop
or
insb
loopne
scas
in
inc
xor
xor
sub
adc
arpl
jno
sbb
fs
push
fistpl
ja
ret
aam
outsl
pop
push
mov
cmc
jnp
in
fsub
aam
ror
out
xchg
adc
inc
pop
and
xchg
ret
fbstp
stos
push
mov
mov
repnz
pmuludq
in
jle
push
aaa
rcrb
loopne
or
inc
sub
push
test
pop
adc
or
lds
inc
xor
xor
sub
jo
pusha
in
mov
test
mov
cmp
pop
mov
cmpsb
dec
adc
fcmovnu
cs
pop
inc
loopne
stos
push
fdivrl
xorb
aas
sub
scas
rcl
jle
jmp
jg
add
push
fisttpll
aaa
out
shrb
xchg
insb
and
add
xor
into
xchg
and
in
mov
mov
or
jmp
cmpl
and
cltd
cld
inc
imul
pop
sti
cmp
bswap
mov
or
mov
add
outsl
sub
xlat
push
jmp
orl
es
xchg
xchg
mov
negl
aam
idiv
test
sti
pop
pop
push
aad
pop
mov
nop
push
lds
loope
adc
pop
pushf
sbb
xor
cmc
ret
negb
clc
aad
xchg
pop
xor
out
sbb
cld
xchg
xchg
fwait
xor
cmpb
sub
mov
into
xor
cwtl
sbb
mov
pushf
jbe
stos
test
js
adc
jmp
insl
aas
xchg
mov
xor
lock
xchg
cwtl
inc
xchg
jge
cld
cs
andl
xor
cmp
roll
mov
pop
inc
cmpsl
pop
mov
mov
push
sbb
push
ds
push
idivb
int
and
xchg
data16
mov
jmp
lcall
lahf
shlb
aad
fistpll
mov
push
jbe
mov
dec
lea
sbb
adc
cmp
dec
lods
rorl
jbe
popf
cmc
addb
addr16
jmp
enter
mov
fisubs
jns
enter
sahf
mov
fwait
out
icebp
mov
pusha
mov
mov
mov
jl
mov
call
mov
dec
enter
clc
jb
nop
dec
lock
lcall
stos
lcall
pusha
lea
jmp
insl
repz
adc
mov
inc
lock
cld
sub
and
rcrl
jno
xor
mov
push
xlat
insl
nop
or
lcall
jle
out
call
aaa
clc
mov
pop
cmp
stc
pusha
mov
enter
outsl
pop
scas
push
xchg
das
pusha
loop
or
push
sbb
std
dec
push
int
shrb
lret
dec
pushf
pop
mov
les
adc
pop
add
jne
insb
das
stc
fisubrl
jle
aad
cmpsb
pop
shrl
push
mov
ds
stc
sbb
les
add
mov
jne
adc
push
hlt
leave
jnp
fcmovnbe
and
mov
outsl
push
call
dec
test
pop
adc
out
adc
jo
push
adc
sbb
dec
daa
cmp
cmp
fs
repz
lret
movsl
rorl
or
mov
arpl
sub
insb
mov
add
loop
mov
push
ljmp
sbb
add
sub
scas
push
sar
pop
pop
push
dec
call
and
sbb
add
cs
mov
frstor
cmp
cmpsb
add
or
pop
sbb
sub
lahf
pop
push
and
mov
shlb
mov
add
sbb
mov
movsb
js
aam
adc
fcoms
lods
gs
xor
je
lods
push
faddp
test
ds
mov
add
leave
std
mov
xchg
arpl
xchg
xor
cmpsl
enter
loope
push
or
orb
pop
dec
push
out
mov
mov
or
outsl
mov
addr16
icebp
into
sbb
test
inc
jmp
das
mov
stc
hlt
or
cmp
test
outsl
nop
jmp
sub
xchg
push
decb
orl
gs
int3
mov
sti
jecxz
stos
adc
mov
mov
inc
sbb
cli
stc
xlat
sbb
inc
movsb
lret
sub
inc
or
inc
in
lret
dec
xor
mov
imul
js
scas
fadds
inc
push
addb
cld
xchg
scas
mov
into
jmp
mov
das
fsubs
clc
fmuls
sbb
bnd
dec
lods
stc
ret
push
push
int
aas
pop
scas
push
pop
scas
dec
and
mov
test
nopl
jns
jg
mov
cltd
inc
sub
ljmp
sbb
fldt
jmp
ss
loope
fs
std
addr16
mov
jnp
je
insl
jae
test
outsl
jmp
das
call
notb
std
mov
xor
inc
into
and
xor
or
mov
xlat
gs
int
and
fistps
fnstsw
pop
jecxz
fisubrs
pop
lock
jge
sub
jge
adc
enter
and
gs
jge
push
mov
lret
mov
cmpsb
shl
test
jmp
pop
stc
cmp
gs
push
gs
ljmp
cmpb
adc
scas
test
bound
xorb
xchg
gs
mov
jmp
repnz
cltd
push
call
into
or
cmp
or
std
cltd
leave
dec
sub
data16
sbb
mov
add
ss
repz
mov
shrl
enter
inc
add
out
push
dec
lea
mov
repnz
jb
xchg
inc
inc
dec
adc
ljmp
inc
aaa
push
cmp
push
ret
fwait
subb
xchg
cmpsb
or
pop
mov
idivb
mov
dec
ret
sti
fs
xchg
js
dec
shlb
add
and
dec
push
adcl
jg
pop
fcoms
into
test
mov
mov
out
int3
stos
clc
and
sbb
cmp
in
mov
fnclex
push
cltd
ret
jo
addb
jbe
jl
pushf
pop
in
in
sbb
and
xchg
or
push
push
outsb
cmpsl
cmpsb
shlb
jns
mov
mov
mov
rol
pop
psubb
js
dec
sub
movsb
dec
sub
out
and
cmp
mov
data16
mov
jecxz
fcomip
cld
push
mov
mulb
call
incb
pop
lds
shl
pop
hlt
ret
negb
inc
movsl
inc
jmp
push
in
outsl
sbb
aas
js
in
imul
aas
sub
mov
int3
lods
mov
xor
inc
push
cld
jmp
imul
jecxz
sahf
push
call
fdivrs
mov
push
mov
mov
mov
test
repnz
mov
dec
sbb
inc
loope
lret
xchg
jecxz
xor
sbb
pop
adc
inc
lret
into
das
insb
hlt
faddp
mov
addb
mov
testb
push
adc
sahf
jl
mov
popf
inc
add
std
addb
std
popa
mov
fwait
push
fdivl
push
shrl
test
iret
das
ret
inc
clc
stos
jne
mov
mov
das
ror
gs
setbe
sbbb
or
shll
iret
daa
xor
mov
push
pop
fxtract
movsb
add
and
scas
add
dec
jle
push
pop
lea
enter
xor
js
or
out
call
and
shll
call
mov
mov
loop
pop
push
jp
hlt
movsl
mov
push
mov
cld
rep
adc
into
inc
movsb
pop
xchg
data16
scas
xor
ror
shrl
paddusb
insb
jp
in
dec
mov
jo
rorl
sub
jo
inc
ret
mov
jne
sbbb
jp
mov
loopw
mov
cmp
test
cli
ret
repnz
ret
mov
outsl
mov
dec
add
out
mov
ss
adc
js
iret
scas
pop
or
shl
mov
ja
pushf
adc
lods
xchg
cld
dec
gs
in
cmp
inc
adc
inc
push
lret
sbb
adc
into
fsts
fwait
push
je
call
mov
fstps
sarl
jo
lret
lcall
jo
jae
mov
pop
mov
shll
jbe
or
mov
or
mov
andb
enter
xor
and
xchg
cmp
popf
sub
fwait
loop
div
aad
mov
outsb
lods
int
sbb
imul
stc
mov
inc
add
std
mov
xchg
fwait
in
outsb
mov
jne
test
pop
jb
jg
or
xor
pop
call
addr16
mov
mov
and
test
jp
nop
dec
leave
dec
inc
scas
fidivrs
js
adc
lods
arpl
sub
pop
jecxz
cmp
cmp
mov
mov
clc
lret
xlat
scas
xchg
ret
ficoml
inc
ja
aam
add
jp
pop
push
sub
jecxz
sbb
ret
je
jbe
sbb
jmp
sub
add
mov
xorl
sbb
mov
dec
mov
out
cmpsb
mov
xchg
out
mov
pop
inc
stc
gs
xchg
inc
mov
or
int
out
jb
dec
into
dec
jmp
inc
push
cmpsb
push
mov
out
add
push
jae
aaa
imul
pop
and
ds
nop
or
les
ret
inc
mov
xor
gs
sbb
pop
pop
sub
sbb
xchg
stos
pop
xchg
adc
fdivrs
ret
xor
mov
fistl
jp
add
sub
dec
lods
add
push
outsl
lcall
popa
sub
jo
cmp
sbb
or
jo
push
mov
xor
xchg
inc
ss
ror
loop
rolb
inc
pop
jb
push
push
and
add
pop
jmp
popf
lret
xchg
shll
push
loope
dec
aas
orl
outsb
in
dec
lock
sub
push
dec
out
jnp
rolb
sub
jle
lock
inc
sahf
adc
jo
fs
mov
push
jl
push
loope
mov
mov
mov
dec
outsl
and
scas
cmpsb
or
ss
push
aaa
sub
jbe
push
dec
xor
jbe
idivl
dec
sarb
sbb
inc
push
add
sub
fs
icebp
nop
sbb
loopne
mov
daa
cmp
ret
push
ljmp
out
cwtl
inc
push
je
repz
je
dec
divl
idivb
int3
jae
fisubrs
xchg
xchg
leave
rorl
orl
fidivrs
into
push
push
test
xchg
adc
in
dec
push
dec
je
push
and
ret
lock
mov
aad
or
sbb
std
hlt
daa
loopne
mov
daa
int3
jg
fs
add
mov
xlat
inc
pusha
jle
xchg
cmp
stos
xchg
loop
test
icebp
cmc
pop
enter
mov
inc
push
inc
mov
insb
cmp
rcrb
push
add
cmpsb
xchg
imul
insl
xor
fdivr
push
sub
cmpsb
and
lret
sti
inc
jle
and
int
cli
das
jae
push
ret
inc
push
les
mov
dec
xchg
mov
or
and
enter
filds
lret
mov
cmp
xor
mov
and
xchg
inc
xchg
add
lcall
pop
stos
mov
mov
push
adc
jge
scas
movups
cs
mov
testb
int3
mov
adc
mov
inc
addr16
push
stos
add
sti
stos
sbb
movsb
clc
pop
sub
aaa
test
stos
push
loope
inc
leave
das
stc
loope
cli
ds
ss
rcll
test
inc
fcmovu
enter
push
or
push
cmp
lock
cs
dec
or
aam
fldl
icebp
insl
movsl
xchg
sub
add
add
cmc
and
aam
mov
jp
ja
sub
push
xchg
xchg
inc
out
sti
or
sbbb
out
inc
cwtl
mov
pusha
es
aam
xor
sbb
sub
aaa
or
xorl
cmp
lret
mov
pop
out
xchg
jmp
and
es
mov
std
dec
and
xchg
fcmovu
sub
inc
into
ds
adc
fwait
mov
es
jnp
icebp
xchg
leave
lea
pop
pop
cld
fcmovne
pop
dec
je
je
push
dec
push
jle
mov
xorl
or
xchg
mov
fdivrs
sbb
dec
pop
pop
les
shll
xor
in
jg
ss
xchg
jns
mov
stos
addr16
and
js
ffree
xchg
loopne
mov
aaa
test
ds
fcompl
push
push
in
dec
int3
dec
in
lahf
notb
adc
fistl
and
mov
pop
sbb
jo
cmpl
mov
add
lea
test
sbb
inc
lods
into
lret
pop
push
mov
int3
jo
and
ret
xchg
test
mov
repnz
cwtl
js
jae
ficomps
lret
inc
mov
jns
push
add
mov
call
int
mov
lret
nop
imul
mov
cmp
imul
shlb
sbb
shlb
jmp
pop
lds
outsl
push
dec
push
movsl
ret
pop
loop
scas
inc
jle
jp,pn
and
aad
aas
dec
cmp
pop
mov
push
xchg
lahf
jns
les
jp
adc
cwtl
dec
push
shrl
in
jg
outsb
cmp
sub
mov
sbb
jp
cmc
lods
fwait
mov
cld
xchg
imul
addb
xor
mov
movsl
push
xor
sub
pop
mov
in
sti
jle
mov
leave
cmp
int
mov
into
test
push
sbb
jg
inc
lret
jecxz
mov
unpcklps
jp
dec
leave
out
iret
push
fcmovb
jle
test
mov
mov
mov
mov
jb
in
push
inc
adc
das
pop
jnp
push
lret
xlat
pop
push
mov
lahf
cwtl
jp
push
ss
imul
xor
test
jbe
xor
xor
adc
call
jl
add
adc
arpl
jns
mov
pop
shrl
pop
jge
fldpi
push
xchg
mov
or
sbb
sbb
pop
ret
js
mov
loope
lret
pop
out
loop
sysenter
xor
jp
ljmp
mov
xchg
hlt
fiadds
xor
sub
mov
jnp
pop
pop
jne
out
fwait
sub
and
test
scas
inc
arpl
fistpll
test
aaa
nop
std
imul
adc
or
adc
dec
or
fnsave
jp
push
mov
cwtl
and
test
xchg
lcall
loopne
sbb
dec
or
xor
push
cmc
sti
in
into
sbb
sub
xchg
scas
mov
mov
add
int3
xchg
sbb
push
jae
popf
mov
sbb
leave
inc
push
sbb
sub
in
fdecstp
sahf
dec
ljmp
pop
xchg
cmp
ss
sbbb
pop
push
fnstenv
call
inc
mov
in
adc
cli
jg
mov
cmp
push
idivb
loop
pop
cmc
insl
add
jb
fpatan
inc
or
adc
jl
mov
ret
arpl
xor
jmp
vpacksswb
insb
lcall
add
mov
ret
dec
add
and
out
aas
stos
xchg
xor
fcompl
cmpsb
jmp
mov
out
pop
aad
mov
mov
jmp
out
std
icebp
dec
jmp
cli
pop
mov
pop
jg,pt
push
inc
push
fxam
movsl
push
pop
cmp
sti
lcall
fwait
bswap
testl
pop
fisttps
hlt
lret
cmpsb
sbb
inc
mov
sbb
dec
cmp
add
data16
std
mov
lahf
pop
aas
ljmp
test
jg
aad
pusha
js
mov
jno
jmp
cs
pop
cmp
sub
aam
adc
mov
xchg
ss
cmc
insb
cld
mov
daa
arpl
mov
imul
sub
push
call
push
mov
mov
movsl
xor
pushf
test
lods
push
pushf
sbb
xorb
push
rclb
std
push
cmc
ret
aaa
mov
ja,pt
in
adc
adc
and
test
or
fcmovne
inc
cmc
test
push
and
arpl
push
sub
mov
add
fldl
add
sub
popa
subb
dec
fidivl
int
ret
fisttpll
xchg
aas
jno
jnp
mov
mov
pop
xchg
and
test
push
lret
pop
stos
pop
sbb
rcrb
jg
test
stos
xlat
cmp
fldl
adc
mov
mov
clc
add
lods
add
bsr
and
push
scas
inc
cld
sarb
fsub
mov
loopne
and
ss
int
xchg
daa
push
stos
cli
jbe
shr
fcom
mov
jmp
cmc
js
bound
mov
mov
fnstcw
iret
pop
xor
inc
inc
sbbb
es
and
mov
and
scas
lock
and
xchg
fucomip
mov
adc
jno
sub
bound
ffree
sub
jle
inc
mov
jle
cwtl
add
add
cld
push
imull
movsl
stos
lock
fwait
pop
subl
fdivrl
fnstsw
arpl
ljmp
jle
and
push
loopne
sbb
mov
pop
imull
or
xor
or
mov
scas
pop
aas
iret
hlt
cwtl
mov
aam
lcall
push
dec
inc
adc
sbb
adc
mov
sub
fwait
inc
and
push
les
and
push
fdivl
lcall
arpl
insb
xor
loope
idivb
and
mov
and
fisttpl
inc
mov
ss
jmp
inc
ror
mov
mov
pop
dec
fsubrl
xchg
cmc
jecxz
mov
bound
mov
aad
sbb
xchg
jns
pop
jge
test
orl
push
or
popf
add
loope
fdivp
ror
fnstcw
jge
ret
pushf
jmp
lcall
xor
jp
mov
push
mov
xchg
cltd
movsl
xchg
pop
bound
and
dec
inc
sbb
fcmove
mov
pop
popf
mov
aam
mov
sub
outsl
stc
stos
push
cmpsb
push
pop
in
cmp
pop
jg
int3
jo
xchg
shlb
divb
fcompl
push
sub
jae
loop
loop
cmpsl
pop
and
rorb
mov
inc
jbe
cmp
rep
jae
test
pop
scas
inc
cmp
add
icebp
inc
mov
int3
pop
xor
imul
prefetch
sub
dec
stc
lea
jae
repz
cld
xor
ret
push
mov
insl
pop
inc
dec
fpatan
add
aaa
pusha
mov
mov
push
cld
sub
or
stc
add
lds
enter
push
jno
scas
movhps
das
jl
rorb
mov
push
rclb
int3
test
scas
sub
jg
insb
and
addr16
push
mov
in
mov
and
in
int3
jb
jmp
xor
and
jecxz
lea
out
imul
pop
inc
mov
push
jns
jno
out
push
pop
mov
in
fidivrs
adc
aas
sub
inc
sbbl
cmpl
pop
mov
fstpt
mov
jo
in
aas
pop
pop
xorl
movsl
jbe
inc
and
inc
addl
cmp
aaa
sbb
jbe
jg
arpl
insl
mov
bound
pop
rcr
dec
cmp
outsb
inc
insl
push
dec
ja
sub
xchg
inc
in
ljmp
imul
jbe
push
enter
ja
imul
xor
sbb
or
shr
pop
dec
rclb
lret
aaa
mov
int
rorb
push
pop
leave
loopne
push
mov
pop
adc
xchg
jb
cmp
neg
into
add
insl
mov
mov
in
pop
jnp
ds
movsb
cmp
jp
mov
xor
pop
clc
push
mov
in
dec
lods
icebp
add
inc
sahf
shlb
mov
pusha
imul
xchg
dec
xchg
xor
and
sbbl
std
mov
pminsw
cli
ljmp
shll
roll
dec
test
out
rcrl
aas
popa
cmp
shrd
jbe
fiadds
xor
sbbb
packuswb
mov
jno
pop
les
add
mov
ljmp
add
ret
pop
push
xor
push
mov
or
movsb
sub
clc
adc
sub
mov
int
dec
or
cwtl
sub
lods
fnstenv
mov
aad
jae
xchg
mov
mov
add
sub
enter
lahf
push
jne
pop
and
pop
pusha
shl
adc
mov
js
clc
cmp
sarb
and
cmpsb
and
inc
and
test
adc
push
sbb
rolb
cmp
sbb
xchg
mov
xor
repz
test
dec
cmc
insb
push
notb
cltd
add
push
dec
lret
neg
rolb
mov
icebp
push
lret
pop
pop
out
add
sbb
outsl
stc
inc
bound
mov
rcl
std
mov
dec
mov
sarb
inc
imul
and
inc
lcall
inc
call
jge
push
mov
mov
sub
popa
or
mov
lods
pop
jno
add
inc
mov
xchg
ret
hlt
out
bnd
dec
pop
sbb
lahf
loopne
aaa
insl
dec
jecxz
mov
jne
mov
xchg
mov
dec
adc
xlat
cld
mov
mov
mov
mov
ficoms
jae
loop
aaa
rcll
jp
ds
and
lret
scas
repz
inc
sub
cmp
ficoml
call
mov
pop
push
jle
jnp
dec
outsl
je
icebp
stos
dec
sti
push
loop
rcll
mov
andb
xor
iret
push
inc
jmp
stc
xor
adc
out
xchg
cli
jmp
cwtl
cmp
test
test
ss
call
call
mov
gs
es
ja
xchg
jo
mov
gs
and
mov
or
lea
xchg
cwtl
ret
cmp
lock
mov
jbe
out
addb
loope
sbb
jbe
xchg
lret
jb
pop
int3
xchg
dec
fisubs
cmp
cmpb
ljmp
xor
cmp
push
sti
add
cmp
xchg
mov
jne
mov
jp
or
cmp
xor
jns
cmp
int3
and
int3
orb
adc
andl
mov
shr
xlat
out
add
scas
mov
fildll
jmp
pop
sahf
dec
shlb
push
dec
shll
adc
enter
std
sbb
mov
jecxz
and
dec
pop
leave
mov
lahf
cmp
aam
xchg
push
dec
test
int
loopne
stos
mov
xor
jo
inc
dec
sarl
aam
in
sbb
mov
xchg
xchg
dec
dec
jbe
jle
test
mov
jns
xlat
pop
push
sbb
in
repnz
daa
cmp
popa
mov
mov
int
movsl
or
fsub
mov
fstps
pop
or
pop
in
mov
lahf
mov
dec
xor
xor
scas
push
push
popaw
mov
ds
shr
xchg
add
cld
mov
outsl
and
sarb
ret
xlat
rcrb
js
fmuls
arpl
ss
jno
fsubl
jmp
lret
xor
push
cmp
lahf
in
cmp
cld
mov
iret
fdivrp
pop
ret
daa
push
adcb
cmp
adc
nop
mov
xor
sub
push
in
jbe
andl
out
movsl
lret
scas
ret
fiadds
pop
sbb
add
data16
jne
addr16
jo
mov
xlat
std
test
sbb
and
mov
cmpsl
inc
and
mov
lds
and
lock
stc
stc
pop
pushf
rcrb
arpl
mov
xchg
adc
lahf
sub
push
xchg
pop
adc
lods
mov
sbb
xor
test
inc
xchg
nop
int3
xchg
stos
fsubp
out
push
out
lods
pop
fimull
fcomi
fistpll
dec
xchg
push
dec
or
push
inc
cmpsl
mov
push
cs
mov
mov
and
mov
mov
addr16
mov
je
add
cwtl
pop
push
out
push
inc
out
xor
es
pop
cli
shrl
pop
inc
orps
lahf
ret
fnsave
out
adc
push
je
gs
pop
mov
adc
push
ss
xchg
push
add
add
and
mov
pop
sbbb
movsl
mov
fcmovnb
fsubrp
call
out
fcoms
add
jae
pusha
pushf
inc
and
fs
mov
lcall
hlt
test
or
popf
clc
loop
cltd
jbe
inc
fsubr
cli
mov
mov
loope
jns
ret
addr16
loopne
dec
dec
psllw
mov
sbb
dec
scas
xchg
repnz
clc
test
and
lret
push
mov
movsb
mov
shl
xchg
mov
aam
lret
out
adc
cmpsb
inc
sub
popl
pusha
mov
test
rcrb
out
enter
cmpsb
into
sbb
and
or
dec
std
dec
and
push
pop
jl
into
out
lahf
lea
adc
sub
xor
mov
dec
mov
mov
pop
movsl
aam
rdpmc
push
mov
cmp
mov
test
mov
es
in
in
push
sub
nop
jp
je
dec
std
nop
sbb
push
sbb
jae
xchg
xchg
adc
enter
inc
in
ret
jbe
and
sbb
cmpb
fisubrl
inc
xor
insl
mov
scas
sbb
fmul
loopne
aam
mov
mov
outsl
jne
jge
fiadds
shrb
sub
push
lods
push
mov
mov
jp
jns
repz
xchg
push
out
pop
cmp
pop
aas
sar
pop
pop
pop
fistps
dec
pop
data16
pop
push
mov
shlb
adc
sbb
mov
xor
sbb
jns
out
roll
lret
nop
and
or
je
jne
mov
fsubs
mov
add
fidivl
pushf
pop
fs
inc
cli
push
enter
cmpsl
call
addr16
out
inc
test
pushf
cltd
loope
and
dec
mov
mov
loopne
cmc
stc
sbb
sub
loope
pop
pop
push
add
jle
xlat
mov
fnsave
in
cld
pusha
ret
xchg
add
pop
out
imul
ret
aam
cmp
or
rorb
sbb
mov
ja
pop
sbb
dec
addr16
fdivrl
inc
add
inc
gs
dec
sahf
insb
sub
fistpl
mov
pop
mov
mov
xor
sub
cmp
push
mov
inc
mov
xor
das
aam
fsubrl
fisubrs
xchg
pop
and
and
ljmp
jg
outsb
ds
fmul
pop
lods
lcall
add
js
rcll
and
xor
mov
mov
jp
out
xchg
xor
loopne
das
lret
iret
enter
stos
loopne
jbe
jge
faddl
inc
lcall
outsl
sbb
xchg
shr
sub
cmp
pop
mov
sbb
dec
hlt
lret
sahf
loop
add
in
pop
pop
cmp
bound
in
cmpsl
lds
jae
add
pop
data16
xchg
add
add
outsl
cs
bnd
mov
jle
push
mov
inc
adc
je
pop
loopne
loop
jo
mov
sub
rcrb
ss
mov
repnz
movsb
cs
mov
jbe
pop
jle
or
jbe
jo
pushf
dec
ror
ror
and
aam
mov
adc
lds
dec
out
cmp
mov
leave
xchg
repz
stos
mov
or
shlb
mov
pop
mov
xchg
data16
mov
xchg
adc
push
shrb
mov
insb
into
pop
pop
jp
push
or
lock
jl
push
inc
pop
addr16
dec
pushf
ljmp
add
sub
inc
addl
pop
pop
or
xchg
and
cs
or
sub
jmp
nop
roll
cli
cmp
mov
fildl
subb
dec
adc
test
outsb
mov
insb
pop
jg
pop
or
dec
pusha
fwait
je
xor
cltd
push
lock
push
iretw
sub
icebp
mov
or
pop
pop
mov
cmpsb
mov
cmp
lahf
loopne
jb
aam
aad
mov
sub
dec
repz
adc
jge
aam
or
push
popf
cmp
push
sti
insb
pop
int
xchg
and
sbb
in
sub
inc
mov
mov
pop
les
lea
cld
and
rorl
cmp
outsl
mov
mov
jge
bnd
out
sarb
lret
fadd
xor
mov
mov
sahf
pop
jbe
sbb
loop
in
ja
adc
jnp
shl
nop
lock
adc
call
or
mov
insl
xchg
nop
cltd
popa
pusha
sub
push
cmp
pop
xchg
sahf
repnz
out
lret
fwait
repnz
shll
mov
mov
imul
imul
stos
lea
aas
inc
add
push
nop
fidivrl
inc
call
xor
xor
hlt
cli
loope
fistps
mov
jb
xor
sbb
xor
sub
add
or
xor
push
sbb
fistps
sbb
out
pop
mov
ss
lds
cmp
out
xor
das
jecxz
in
js
sbb
xchg
stos
pop
ds
fistpl
mov
je
cmp
and
enter
mov
cmpsb
inc
add
daa
mov
jl
dec
add
pushf
test
push
add
add
dec
bound
in
cwtl
fs
add
xchg
mov
fistpll
jg
add
lock
dec
xor
in
push
dec
out
aam
shr
fcompl
xlat
loop
fs
in
jge
xor
icebp
js
scas
rcrl
xchg
call
push
add
mov
sbb
lds
add
jg
inc
cld
and
and
and
mov
inc
in
notb
mov
cmc
push
push
mov
lret
out
ja
lcall
out
enter
fiaddl
roll
ror
mov
cld
popf
lcall
inc
les
loop
pop
out
sub
in
mov
fisubl
clc
dec
call
lock
stos
or
pop
test
pop
ljmp
jmp
test
out
mov
repz
insl
and
in
inc
jp
or
sarl
out
sub
dec
sbb
or
pop
insb
in
mov
pop
inc
pop
mov
pop
scas
je
cmp
push
pop
jne
or
dec
pop
inc
and
mov
lret
scas
hlt
loop
push
out
xor
cmp
ljmp
xchg
repz
les
add
clc
shrb
std
lock
pop
pop
sahf
pop
cmc
cltd
shll
lock
ret
jno
lret
push
dec
push
mov
out
arpl
adc
mov
loop
inc
sbb
sbb
jg
repz
insb
scas
out
stc
or
sbb
xor
mov
or
fsubrp
imul
arpl
lods
xchg
cs
fs
test
int3
scas
jl
in
add
lcall
mov
inc
jge
hlt
lods
xchg
out
addb
mov
into
inc
cmp
cmp
or
int
cmpsb
mov
cmp
dec
sbb
mov
adc
imulb
mov
inc
sub
xchg
aam
sarb
pushf
fdivrs
es
xchg
popa
pop
and
sbb
ljmp
push
movb
inc
out
jmp
aaa
inc
test
ljmp
sbb
push
mov
fidivs
mov
aam
mov
adc
xchg
dec
mov
xor
jecxz
ja
jg
lcall
xlat
pop
ss
push
test
scas
cmp
pusha
ror
jecxz
adcb
das
ret
imul
inc
testb
fs
js
stc
aad
scas
imul
dec
inc
pop
push
outsb
inc
pop
and
sahf
clc
scas
test
xor
or
leave
inc
pop
xchg
jno
icebp
mov
fidivrs
pop
test
fistl
out
mov
jno
mov
jle
stc
mov
sub
mov
mov
and
mov
shll
pop
push
in
movsb
jg
mov
mov
pop
xchg
fnstenv
push
pop
in
lret
pop
les
inc
mov
sbb
pop
dec
sbb
mov
add
pop
std
fsubs
cmp
enter
in
xchg
inc
and
push
lcall
ss
xor
fbld
ljmp
or
fiadds
fwait
dec
aad
fwait
jno
dec
sbb
hlt
imull
in
aad
xchg
cli
lods
cmpsb
push
rcrl
dec
ds
ss
insl
sahf
mov
push
push
fisttps
nop
cs
scas
adc
jmp
test
cwtl
add
add
out
daa
push
jmp
or
jmp
cltd
jp
ret
mov
insl
shlb
fisttpl
cmp
punpckldq
inc
xor
andl
xchg
cli
jne
adc
adc
jl
push
stos
pavgb
in
aas
inc
jne
int
fs
dec
lahf
fsubrl
pop
aas
add
mov
out
icebp
jp
int
roll
scas
cld
pusha
cmpsl
imul
adc
push
inc
push
stos
loopne
sarb
test
cmc
or
fldt
lea
lods
call
push
mov
mov
xchg
adc
and
out
adc
daa
dec
mov
mov
xor
mov
xchg
shr
repnz
flds
xchg
int
xor
in
fnstenv
jle
shl
test
adcl
loopne
push
pop
dec
pop
scas
outsl
notw
mov
sbb
mov
fisubs
mov
or
hlt
mov
cmpsb
je
xor
mov
sub
push
jae
les
sti
test
sbb
in
lods
push
xchg
test
sub
icebp
xchg
fdivrs
mov
shr
mov
call
fwait
sbb
in
push
lods
stos
outsl
stos
lret
repz
movsl
addl
cmp
rolb
sub
lahf
mov
data16
and
gs
and
xchg
sub
mov
push
push
sbb
add
sbb
ja
sub
xchg
aaa
xchg
in
dec
or
cmp
inc
movsb
sub
inc
aad
fs
push
mov
repz
jne
imul
shlb
arpl
sbb
lods
pop
lahf
sbb
xchg
je
movsl
mov
lds
pop
mov
bound
sbb
adc
xchg
sbb
push
cs
push
insb
repz
lea
mov
hlt
popa
push
jp
insb
dec
cmp
sub
pop
outsb
sar
inc
lret
push
into
out
push
xor
imul
xor
outsb
scas
div
push
shll
iret
es
out
loop
inc
out
cmpsl
adc
sbb
sahf
pop
sbb
cmpsl
jmp
pop
subb
xor
jne
inc
cli
mov
jo
js
cmp
cmc
sub
xchg
popf
xchg
pop
maxps
mov
xchg
xlat
and
addr16
aas
push
test
ja
lret
lods
jae
call
xchg
inc
mov
and
lock
xor
out
inc
pop
pop
and
push
int3
sti
xchg
test
sbb
les
pop
fstl
xadd
into
scas
scas
jae
call
popa
fldl
sub
push
pop
call
shll
flds
leave
aad
sti
adcb
into
mov
imul
or
imul
mov
mov
scas
mov
sub
sbb
loope
imul
adc
mov
inc
adc
cmp
lds
adc
mov
hlt
popf
pop
jge
sub
cmp
enter
pop
lods
xlat
pop
adc
xchg
dec
popf
jne
loop
sub
sbb
mov
outsb
outsb
xchg
dec
pop
testl
sbb
sbb
fsubrl
lds
add
leave
adc
cltd
dec
repnz
push
add
sahf
addr16
xor
mov
inc
negl
or
shl
add
int
and
inc
xchg
scas
push
repz
sub
inc
mov
xchg
mov
stc
shrl
or
pusha
push
out
insl
or
push
push
clc
test
inc
montmul
cmpsb
inc
shll
aam
xchg
mov
fbld
stos
cmp
inc
add
pushf
mov
pusha
jno
mov
dec
push
ja
sub
fs
aad
iret
pop
lods
in
add
out
mov
fwait
jns
pop
sub
mov
loopne
add
cmpsl
pop
cmp
test
ret
sahf
das
adc
das
pushf
jg
and
ljmp
fwait
iret
xor
cmpb
mov
mov
pop
sarl
call
shrb
std
and
sbb
icebp
in
jecxz
mov
sbb
mov
aad
inc
jg
out
mov
cmc
test
pop
arpl
mov
and
aaa
pop
and
cmp
call
sub
inc
in
xchg
xchg
and
aas
loop
in
fadds
fucomip
int
daa
pop
xor
je
mov
dec
scas
push
mov
mov
fimull
call
add
lods
push
mov
test
aaa
mov
jg
jns
shll
add
adc
roll
jmp
inc
push
jge
loope
xor
xor
fsubr
fsubrl
stc
call
mov
popf
jnp
dec
cmp
xorl
fwait
dec
js
out
popf
outsb
mov
sbb
lods
cmc
jp
rorl
aaa
icebp
stos
mov
stos
notb
jbe
js
xchg
dec
mov
je
cmc
negb
adc
push
inc
cmp
daa
test
pop
xchg
out
mov
xor
cs
jae
aaa
daa
in
movsl
dec
cmp
shlb
je
mov
fdivl
cmp
outsl
cwtl
inc
cmp
pcmpeqw
sbb
mov
sbb
push
cs
cmp
lahf
mov
aas
vpackssdw
cmp
or
mov
lcall
test
push
int3
out
out
mov
xchg
in
or
sub
test
call
fstpt
mov
out
cld
push
xchg
call
pushl
xchg
xor
test
cmp
inc
mov
cmp
xchg
push
scas
into
sub
lret
out
mov
pop
mov
jp
dec
test
mov
xor
jnp
int
popf
stc
lcall
pop
jo
mov
xchg
or
xchg
pop
or
ja
ja
aad
dec
popa
stos
shr
pop
or
lret
stos
shrb
sbbb
cli
adc
mov
test
dec
sbb
push
loope
and
jbe
mov
aas
imul
or
push
pop
jbe
or
scas
and
pop
pop
lods
pop
in
div
outsb
or
leave
dec
loopne
fidivrs
and
mov
mov
or
cwtl
jno
inc
add
adc
push
adc
fstl
and
push
int
in
js
push
xchg
scas
mov
adc
int3
jp
mov
fdivr
or
lods
adc
pop
jae
adc
mov
mov
fnsave
sbb
mov
mov
ret
cmp
mov
pop
arpl
mov
jne
inc
aas
adc
rcrl
xor
rcr
cmp
or
es
aam
jae
xchg
cli
sub
xchg
hlt
test
stos
test
ds
cli
jecxz
bound
push
sub
xchg
adc
push
mov
js
js
push
xor
cmp
aam
sub
ficompl
adc
loope
push
div
push
out
cmpl
shlb
add
inc
mov
inc
sbb
mov
cmpsl
sbb
inc
call
std
and
test
das
sbb
mov
dec
xchg
divl
add
scas
mov
mov
popa
mov
inc
inc
in
mov
sbb
out
mov
lea
jne
push
jo
adc
iret
popf
pop
sarb
push
cld
test
xchg
push
jb
push
adc
ds
jo
aas
roll
add
or
jbe
fisttps
lds
lock
rcll
jbe
fldl
pusha
imul
ret
test
aas
cmc
xchg
mov
xchg
cmc
pop
and
stc
stc
mov
cmpsl
lods
push
mov
fidivrs
je
in
lea
sub
lahf
int
jns
xchg
dec
xchg
or
addl
push
cmp
ja
and
pop
inc
push
insb
sahf
arpl
hlt
dec
mov
inc
aaa
mov
add
or
or
mov
out
jp
fcompl
call
mov
pop
lods
jno
sbb
dec
pop
pop
in
dec
data16
and
adc
sub
push
xorb
lods
mov
push
cmpsb
jbe
pushf
and
cmp
pop
cld
xchg
sbb
fwait
cmpsl
xchg
stc
and
lret
xor
sbb
fldz
mov
test
mov
pusha
mov
cmp
lcall
jmp
cmp
sbb
jns
xor
jecxz
add
jo
mov
sarb
xor
mov
hlt
push
lods
dec
xor
stc
loope
or
mov
inc
mov
cmpsl
cmp
push
mov
cld
xlat
cs
cmpsb
sti
mov
xchg
andl
lods
push
rolb
jle
gs
inc
pushf
push
xor
sahf
mov
dec
xor
jnp
cmp
cmc
fsubr
add
dec
gs
mov
mov
fs
jnp
inc
popf
xor
aas
ss
sbb
sbb
popa
cmpsl
hlt
dec
adc
loop
jle
mov
sti
xor
pop
ret
in
add
add
out
inc
sub
pushf
orb
xchg
mov
in
and
outsb
loop
fwait
adc
push
repnz
mov
xor
jno
popf
cwtl
push
imul
inc
xchg
loope
cli
outsb
adcl
add
int3
ds
add
adc
lock
sub
jo
mov
mov
rolw
sbb
xorl
cmpsb
sbb
push
nop
test
xor
fidivrl
daa
sub
jle
xor
jp
jae
mov
call
pop
and
cld
cmpl
es
andb
mov
jb
sub
sbb
pop
mov
outsb
inc
xor
in
or
adc
in
imul
aad
ret
jle
movsb
inc
rep
push
xchg
aam
mov
aaa
leave
push
xchg
xor
pop
push
popa
not
fs
dec
xor
in
std
and
out
leave
mov
adc
mov
dec
pop
jl
xchg
pop
push
loopne
inc
jmp
push
popf
imul
mov
loopne
nop
mov
push
push
xchg
mov
aam
prefetchw
mov
xchg
jns
inc
out
inc
rclb
out
jb
push
cmp
sub
aad
jl
sub
xchg
mov
adc
popa
xorl
or
xor
inc
fstps
xchg
les
add
insl
ret
mov
test
add
push
xchg
and
mov
and
jns
and
mov
mov
cs
push
mov
mov
dec
push
adc
fdivrp
aas
fimuls
test
inc
lods
mov
jno
aam
lea
pusha
mov
call
push
xchg
cld
jg
mov
jbe
sbb
cltd
push
in
push
lret
jecxz
push
sbb
pop
ljmp
sub
sub
inc
jae
js
cmp
sbb
adc
test
mov
mov
inc
fwait
dec
fwait
stos
pop
xchg
jle
fnstenv
pop
scas
stos
mull
pop
jle
and
sbb
mov
int
jge
jne
push
inc
in
std
add
add
scas
inc
call
mov
sub
xchg
inc
pop
mov
jmp
xlat
mov
movsl
and
aad
jge
mov
mov
nop
cmp
fdivl
sub
sub
mov
test
push
lods
jnp
dec
inc
mov
adc
cmp
test
call
adc
sbb
outsb
mov
lret
pusha
arpl
imul
pop
cmp
icebp
lods
mov
call
fs
or
push
pop
scas
push
push
stos
xor
cmovnp
cltd
mov
dec
sbb
iret
cmp
jo
lcall
sbb
sbb
pop
clc
cmp
xor
mov
or
mov
addl
jns
mov
mov
xchg
mov
dec
leave
jnp
nop
jmp
pusha
xor
popa
jmp
add
jns
push
sahf
pop
inc
xor
mov
and
sbb
and
cmovo
xchg
sahf
pop
sub
inc
push
rcll
mov
sti
push
mov
icebp
sahf
movsl
mov
ss
cwtl
fldenv
jmp
cwtl
test
push
imul
pop
mov
into
pop
pop
sbb
xchg
or
mov
cmpsl
jge
sti
lcall
and
pop
lea
push
mov
sbb
pop
or
std
mov
addr16
xor
cmc
push
fdiv
pop
outsb
add
in
adc
cmp
outsb
fidivrs
push
gs
xchg
pop
mov
mov
test
xor
daa
into
add
rorb
push
lret
mov
mov
or
cwtl
mov
cmc
aam
out
xchg
fs
jnp
flds
data16
jle
pop
sarl
js
mov
xchg
adc
mov
jbe
nop
test
pop
pushf
fxch
cwtl
push
xor
ret
inc
sub
pop
add
mov
in
jnp
sahf
push
inc
mov
sbb
sub
push
add
stos
call
pusha
pop
push
pop
rorl
loop
push
mov
mov
repnz
sbb
pushf
mov
cmc
iret
scas
xchg
div
or
mov
aam
cmpsb
xchg
jp
xchg
mov
fiadds
and
gs
repnz
jg
call
cmp
dec
push
xchg
adcl
stos
add
outsb
aas
push
orl
lods
mov
incb
mov
fisttpl
cmc
mov
jl
insb
pushf
sahf
lret
jmp
adc
dec
shrl
adc
daa
mov
movsl
mov
jmp
dec
fdivp
cwtl
push
pop
sbb
mov
ss
sbb
mov
and
int3
pop
jns
adcb
xchg
xchg
inc
jno
xchg
pop
add
cmp
shlb
call
xlat
mov
shlb
and
xchg
sub
dec
lds
adc
insb
je
sub
nop
fmuls
mov
leave
popf
lock
mov
cltd
test
bnd
xor
mov
sub
lret
loopne
lds
popa
mov
inc
add
xor
loopne
fisubl
ret
push
cs
cmp
mov
loop
stc
fcoms
mov
lahf
xor
jae
xor
mov
sbb
mov
lret
jl
outsb
addr16
and
xor
lcall
push
pushf
push
lcall
add
jne
mov
pop
mov
not
mov
mov
jg
or
xor
aam
inc
movsb
fiaddl
mov
in
pop
sbb
sbb
mov
mov
pop
jmp
mov
addr16
dec
rcrl
mov
jmp
sbb
dec
push
add
notb
shlb
jno
in
psrld
hlt
loop
mov
jns
adc
push
aad
adc
or
mov
mov
mov
sub
and
or
mov
mov
sub
dec
cs
or
adc
sub
cli
mov
popf
shrb
xchg
fstpl
mov
or
in
pop
loope
xchg
testb
sbb
outsb
clc
mov
js
inc
scas
jno
ljmp
ljmp
sbb
sub
fsts
xorl
xor
add
sbbl
sub
movsl
repz
mov
sbb
adc
testl
xor
sahf
aad
jnp
popf
adc
push
loop
sub
push
cmc
cli
mov
into
test
les
outsl
out
stos
cmpb
fildll
ds
std
pop
aad
pop
xor
ja
push
rorl
add
mov
lods
or
or
jl
jbe
arpl
push
je
mov
ret
dec
push
jg
pop
dec
adc
push
loope
xor
or
shll
mov
test
lahf
fisttps
mov
mov
imul
xchg
sbb
inc
add
shl
dec
mov
ds
bound
pop
cmp
repz
jo
popf
and
push
call
ljmp
inc
dec
gs
sub
out
cmpsl
daa
mov
roll
dec
iret
sbb
mov
fwait
pop
vpmaxub
sub
aas
clc
addl
shlb
in
sub
dec
adc
cmp
dec
jmp
nop
pop
dec
fldcw
jmp
gs
cmp
fwait
xchg
stos
mov
stc
and
dec
sbb
aad
repnz
inc
jae
sub
cmp
lea
push
popf
daa
xchg
jns
mov
adc
sub
xor
js
imul
xor
repnz
mov
or
jo
in
and
mov
inc
stos
icebp
lret
arpl
push
push
jne
sbb
jne
dec
sbbl
pop
jbe
or
testl
mov
popa
sbb
mov
bound
xor
ss
add
cmp
aas
nop
negb
ret
jp
scas
test
fs
shlb
nop
cltd
nop
pop
xor
negl
popf
and
sub
or
jge
clc
add
std
jo
pop
mov
fistpll
xor
sbb
lea
mov
or
addr16
in
sbb
ret
mov
sbb
mov
in
xlat
ds
stc
hlt
xchg
sub
movsl
fs
sbb
or
mov
push
push
sbb
scas
in
out
nop
iret
data16
sbb
stos
pop
lock
pop
cmp
mov
pop
dec
xor
cmp
mov
mov
mov
push
or
sub
sub
imul
xor
fistpll
sbb
mov
dec
push
sbb
mov
in
sub
fidivl
scas
ds
sbb
jo
adc
flds
sub
sub
andb
inc
pushf
imul
pop
imul
xchg
call
arpl
xchg
enter
mov
insl
das
cmc
sub
mov
pusha
fiaddl
xchg
sbb
mov
out
jae
pop
mov
aaa
inc
pop
lret
xchg
out
sbb
push
mov
lock
sbb
nop
add
xchg
scas
lods
jo
jno
je
clc
loop
test
lret
mov
in
fcmovnu
mov
mov
ja
cmp
aam
pop
lods
sbb
mov
fnsave
int3
jge
dec
sub
pop
int
pop
xchg
mov
sub
icebp
movsb
mov
repnz
roll
les
cltd
pop
jge
mov
xchg
test
imul
ljmp
out
leave
dec
inc
xchg
jb
sahf
push
movsl
int
lcall
xchg
mov
lcall
ret
inc
jns
mov
shr
lds
icebp
pop
sbb
fidivrs
andl
xor
loopne
cwtl
adc
outsb
dec
push
sti
mov
cmp
add
sar
pop
mov
jmp
adc
mov
lret
ret
jecxz
mov
call
rcrl
mov
insl
push
inc
and
xor
mov
xchg
xchg
and
aad
gs
test
daa
enter
mov
pop
sbb
xor
mov
mov
pop
movsl
fcoms
test
adc
cmp
mov
mov
xor
and
je
cmp
jp
out
dec
sub
sub
sub
lock
xor
cmp
leave
movsl
popa
out
or
shll
out
add
in
shrb
jmp
call
jg
out
ja
aam
or
xor
jo
cmp
mov
jb
sahf
pop
push
arpl
lret
mov
push
sbb
adc
or
jle
or
mov
jno
out
outsb
movsb
xor
fwait
leave
add
mov
pop
pop
ret
adc
cmc
popa
outsl
inc
cmp
adc
sbb
mov
add
bound
jge
movsl
notb
cmp
arpl
mov
adc
ds
sub
insb
jns
mov
pop
cwtl
push
mov
sub
and
leave
cmp
test
out
adc
and
mov
loopw
movsb
add
mov
rcrl
sbb
std
loop
hlt
cmp
pushf
inc
rorl
pop
xchg
orb
or
sbb
push
lcall
aaa
nop
mov
repz
and
xor
pop
mov
dec
popf
xor
inc
pop
lea
jae
pop
jb
in
push
push
mov
into
jnp
clc
loop
fwait
lret
push
arpl
cs
mov
ljmp
lret
ret
push
insb
or
scas
hlt
inc
cs
sub
xchg
pop
xchg
sbb
jae
jno
faddl
fistpl
ret
out
test
dec
shl
gs
insb
cld
add
cmp
adc
xor
in
sub
out
mov
jne
pushf
and
loopne
push
or
daa
adc
out
lret
push
stos
aas
je
lret
mov
fs
push
adc
jb
mov
push
pusha
adc
loopne
jb
mov
pop
stos
dec
das
pop
inc
imul
jge
xlat
shl
sub
loopne
loope
sbb
icebp
imul
push
sarl
fidivl
mov
lods
shlb
sub
out
cmpsl
xchg
dec
cmp
aad
push
xor
sub
mov
jns
pushf
decl
push
jne
mov
xor
pusha
xchg
es
orl
cmc
mov
and
jge
push
stc
imul
fwait
dec
nop
sti
sti
pop
fadds
xorb
ds
cmp
push
in
sahf
pop
jnp
ret
pop
das
stos
jnp
jl
adc
jp
nop
inc
adc
lcall
ljmp
int
mov
adc
ljmp
je
js
inc
xor
cmp
lret
in
mov
out
push
nop
mov
jo
jns
scas
cmc
dec
dec
lret
out
ljmp
pop
test
or
mov
mov
jbe
push
in
leave
and
into
cmc
fldl
int3
or
inc
jbe
sbb
sub
mov
cli
cmpsb
fsubl
inc
pop
jmp
loop
pop
test
gs
mov
or
mov
and
adc
pop
loopne
dec
pop
das
outsl
gs
mov
testb
add
in
data16
or
mov
outsl
sub
xor
test
or
add
add
sbbb
aam
lcall
out
es
xlat
repnz
jmp
cmp
pop
inc
ljmp
lcall
jp
xchg
jmp
jno
xchg
dec
xchg
out
mov
rcll
ret
mov
xchg
cmp
sbb
jae
insl
mov
lahf
ljmp
lahf
adc
sbb
dec
xchg
movsb
ss
inc
mov
out
stc
les
movsl
js
pop
les
out
subl
xchg
mov
xlat
cmp
and
fisubrl
mov
test
push
and
data16
fists
shrb
and
pop
jns
int
icebp
cmpsl
decb
shrl
andl
add
in
jge
and
test
push
push
ret
stc
jmp
push
xchg
inc
mov
sub
xor
shll
lret
aas
lds
test
cs
and
js
idivb
aaa
and
sub
lahf
dec
les
int
pop
xchg
push
sbb
push
aas
sbbl
std
je
sub
jnp
cmpsb
add
les
and
mov
repnz
pusha
mov
fistpll
sbb
push
insl
dec
cli
push
jecxz
xlat
dec
fcmovnbe
mov
out
aas
out
sub
mov
ds
push
cli
mov
fbstp
ret
sub
pop
inc
gs
fs
push
aaa
jl
sarb
test
pop
in
cmp
jns
cli
mov
cltd
adc
lods
add
out
jb
test
add
inc
jnp
ss
mov
je
imul
inc
cld
jnp
insb
pop
xchg
cmp
je
aad
push
mov
mov
lds
lea
fstpl
push
push
aas
ljmp
cmc
push
xchg
scas
addl
clc
lret
jp
mov
shl
gs
lret
ret
pushf
mov
ljmp
mov
popf
dec
rolb
add
lods
movsb
add
jl
push
scas
mov
or
rorb
adc
jnp
xchg
and
aam
hlt
cltd
sti
mov
outsl
adc
jae
add
push
xor
mov
cmc
mov
or
pop
fnsave
outsl
pop
add
jnp
push
xchg
das
fidivrs
into
pop
pop
inc
xlat
and
inc
sbb
mov
cmpsl
in
decl
push
mov
push
jae
add
push
push
roll
fisubs
jp
aam
faddp
je
mov
mov
or
pop
push
mov
pop
popa
fs
mov
and
adc
jecxz
add
mov
rcrl
jge
mov
mov
scas
dec
pusha
and
xchg
aas
push
xchg
adcl
aam
mov
cmp
stos
sub
negb
clc
test
clc
xor
aaa
sub
aas
and
pop
jl
sub
scas
jb
popa
or
cmp
mov
pop
add
mov
push
sub
mov
pop
mov
jmp
inc
mov
in
xchg
jp
in
sbb
xchg
das
fsubrs
sbb
and
cmp
add
push
jecxz
es
pop
jmp
mov
jmp
mov
inc
mov
mov
push
adc
xchg
push
add
jno
int3
les
sub
jno
xchg
jns
xor
incb
lea
dec
sbb
cmc
sbb
mov
stc
jmp
adcl
lods
xor
xchg
mov
outsl
repnz
aas
mov
mov
ficompl
testl
lea
pop
push
jp
jp
shll
mov
inc
divb
gs
clc
inc
shrl
inc
outsl
mov
push
adcl
movb
popa
fstpt
inc
pop
shrl
ljmp
dec
fsts
cld
popf
jbe
mov
inc
push
mov
cltd
clc
data16
repz
psllq
ja
lret
daa
sbb
lods
ret
cs
ja
lret
mov
mov
push
mov
mov
movsl
pop
je,pn
mov
xchg
lcall
std
clc
push
adc
lods
std
mov
ret
mov
icebp
inc
mov
pop
xor
clc
out
inc
insl
insb
or
xor
aad
jns
les
xor
fsubrs
daa
add
jge
adc
cmp
jnp
push
mov
sub
int
inc
fistpl
mov
lock
jo
xor
jg
mov
sete
fwait
mov
mov
push
popf
imul
lcall
imul
pop
stos
cltd
iret
sbb
js
ljmp
dec
add
mov
scas
sub
repnz
in
xchg
lcall
lret
sahf
shr
dec
das
in
push
outsl
pop
xchg
test
ss
mov
sbb
inc
fs
movb
sub
push
jbe
mov
out
inc
aam
push
xchg
in
sarb
dec
and
out
insl
and
inc
in
add
rorb
jo
mov
sahf
xchg
push
mov
push
sbb
xchg
sub
or
aad
xor
scas
fstp
outsl
das
jmp
sbb
push
adcb
cmp
fidivl
push
nop
ret
xor
aam
cltd
push
xchg
adc
and
shl
ss
jl
aam
inc
inc
sbb
inc
loopne
and
out
adc
rorl
pop
push
rcrb
outsl
data16
sbb
push
push
arpl
cmp
ret
gs
loopne
lret
js
int
sub
insb
inc
fldcw
shll
test
jle
int3
pop
cmpsl
xchg
fisubrl
je
sarl
pusha
xor
into
aad
push
cli
mov
sarl
movsl
insl
aas
mov
adc
sarl
aad
cmp
pop
scas
hlt
shlb
inc
push
adc
fs
sub
aas
rclb
xchg
jne
inc
xlat
add
or
int3
clc
or
mov
push
add
shl
mov
lea
insl
jb
fiaddl
sbb
data16
mov
xchg
jo
cltd
mov
dec
out
fst
fnstenv
or
lock
repz
mov
ds
aam
mov
or
icebp
call
xchg
push
xor
imul
lods
rclb
xchg
clc
rorl
sahf
jl
mov
cmpsl
cmpl
vpsllw
push
mov
lea
test
mov
jl
ja
add
jp
add
shl
add
push
push
div
fcmove
into
xchg
fnstenv
adc
fistl
loopne
popf
je
cmp
jmp
sar
mov
or
aad
and
notb
scas
lret
push
in
add
shl
push
ds
cmp
icebp
adc
fcomi
xor
cs
out
into
test
pop
jns
mov
test
test
test
in
pcmpeqb
sub
cmc
out
btc
add
pop
sbb
or
es
mov
xor
cmp
add
add
test
ja
inc
mov
sbb
push
inc
xor
fisttpl
xchg
cmp
lock
pop
imul
fdivrs
add
inc
pop
xor
clc
jecxz
jg
cld
stc
xchg
push
shrl
adc
ss
popa
out
adc
inc
xchg
lods
jae
mov
aad
mov
or
fistpll
or
mov
stos
inc
push
in
add
sub
adc
cmp
mov
push
sub
xchg
push
mov
sbb
sub
jbe
or
pop
jp
rcr
cmp
and
mov
lods
dec
jae
pop
xor
pushf
lods
and
repz
xchg
adc
stos
popa
push
into
pop
pop
jl
push
or
sub
pop
cli
jle
pop
out
cmp
stos
inc
jecxz
loopne
pushf
cmp
aad
add
mov
push
pushf
outsb
sbb
jg
sub
sub
xchg
inc
pop
inc
ficoml
int
lock
push
jnp
aaa
adc
repz
adc
mov
sti
lea
pop
push
lret
lods
dec
mov
xor
push
pop
adc
sbb
push
and
or
popa
or
xor
and
inc
mov
xchg
ds
inc
rorb
push
dec
jle
add
xchg
mov
into
cmp
loopne
je
jne
mov
jbe
aaa
cmp
xchg
xchg
hlt
enter
cmpsb
pop
cmpb
ja
setno
inc
in
cmpsb
sub
xor
insl
pop
add
aas
cmp
jg
imul
out
int
loope
fsubrl
adc
cmp
mov
push
xchg
adc
outsl
and
outsb
mov
sub
in
sbb
lods
cmp
bound
in
sbb
mov
jae
aam
mov
pop
cld
mov
andl
hlt
repnz
jo
adc
mov
xchg
xor
rolb
shrl
mov
inc
out
xchg
cmpsl
xchg
mov
fsts
pop
mov
xchg
gs
aad
dec
push
js
dec
pop
daa
mov
sahf
outsb
je
pop
test
push
cld
jge
gs
sub
fmulp
imul
sub
sub
popa
jns
mov
sbb
ljmp
bswap
mov
mov
daa
xor
loope
das
nop
inc
pop
test
imul
loope
lea
mov
push
jo
pop
pusha
js
mov
cmp
jns
mov
cmp
adc
mov
dec
lret
nop
sahf
and
sti
in
mov
out
inc
and
sarb
mov
and
aaa
sbb
xor
cmpsb
mov
in
fdivrs
mov
xor
sbb
fildll
pushf
add
pop
mov
mov
adc
loop
xorb
sbb
add
inc
mov
enter
or
clc
adc
in
mov
mov
mov
scas
movsl
mul
adc
inc
addb
jmp
and
out
out
sbb
push
mov
imul
je
sub
jl
xor
pop
add
sub
xchg
scas
dec
outsl
sbb
cwtl
sbb
in
xchg
cmp
add
mov
sahf
adc
jp
add
sahf
push
xchg
push
shll
fiaddl
push
inc
mov
cmp
test
hlt
jae
out
jmp
testl
les
fucomp
lahf
jae
xchg
stc
and
data16
sub
ljmp
mov
ds
sbb
adc
cwtl
out
mov
fisubl
jnp
sarl
fmuls
lea
adc
pop
rolb
cmp
dec
inc
inc
sbb
loop
adc
pop
jl
sub
mov
dec
iret
adc
mov
mov
pavgw
lret
or
fsubrp
cmp
lods
push
lods
dec
adc
rorl
lret
pusha
xchg
aas
pop
out
add
sahf
cmp
cltd
jo
mov
mov
fstpl
into
mov
mov
fsubl
jmp
movsl
loope
inc
xchg
insb
dec
aad
jae
or
pop
outsb
add
xchg
and
pop
cltd
mov
fs
and
push
mov
pop
cmp
push
xchg
jns
lret
and
or
stc
xchg
ljmp
cld
movsl
push
push
iret
inc
popf
fwait
sti
sbb
mov
test
mov
inc
xor
and
dec
dec
fimull
sub
push
xchg
pop
push
mov
dec
rolb
stc
inc
xor
sub
pop
popa
scas
mov
add
inc
push
jae
mov
push
push
decb
std
dec
shrl
push
cmc
movsb
imul
mov
inc
fisubs
les
inc
imul
pop
pop
xor
or
sbb
fisttps
mov
ds
and
roll
sbb
negb
popa
cmc
cmpsl
popl
xchg
cmp
mov
dec
jecxz
xchg
ror
popf
js
ficomps
inc
push
fistl
and
je
mov
or
jbe
fbstp
push
dec
push
mov
movsl
dec
inc
push
outsl
ja
xchg
les
add
sub
add
sbb
pop
mov
fnstcw
push
sbb
outsb
push
push
inc
movsl
jmp
jne
mov
push
sbb
inc
ss
lods
test
test
in
enter
into
and
inc
add
mov
dec
mov
cwtl
mov
fisttps
stc
sarl
movsl
mov
push
push
add
pop
cmpb
cmp
incl
inc
clc
and
hlt
pop
int
cmp
out
inc
inc
push
out
adc
mov
fdivrs
int3
aas
sub
inc
pop
leave
mov
fstl
mov
out
add
xlat
push
and
jmp
cmp
cmp
pop
stc
mov
sbb
roll
dec
jl
fwait
hlt
ja
mov
push
and
pop
call
lahf
push
mov
sbb
cmp
push
mov
loope
xchg
sbb
and
lret
cwtl
popf
xor
out
push
lods
pop
or
xchg
jnp
inc
cmp
xchg
aas
dec
out
aaa
rolb
pop
jl
push
rcl
clc
test
push
call
ficompl
pop
add
loopne
ds
loop
add
enter
cmc
cli
push
popa
jne
repz
ds
xchg
insl
xor
lea
test
frstor
mov
dec
ljmp
fs
sub
sbb
popa
jp
ljmp
ror
jle
sub
scas
mov
imul
sarl
outsl
addr16
adc
insl
cmp
test
xchg
push
ja
divw
mov
inc
mov
dec
ja
arpl
jne
lcall
loop
mov
in
sti
mov
dec
push
adc
pushf
lea
lods
mov
int
xchg
add
ret
pop
sub
inc
or
pop
and
jp
scas
jns
mov
hlt
jmp
dec
icebp
sarb
push
mov
inc
mov
jmp
adc
push
adc
jne
mov
dec
push
or
adc
pusha
ret
movsl
sub
scas
aaa
adc
mov
sub
sbb
sti
mov
jbe
pop
mov
add
pop
lahf
push
popf
add
dec
addr16
test
mov
cwtl
add
mov
xorb
mov
dec
insl
mov
push
xchg
or
lea
int
lods
xchg
dec
hlt
push
mov
leave
add
aam
movsl
add
cmpsb
push
sub
xchg
inc
mov
push
sbb
movl
aad
repnz
jns
mov
sub
mov
nop
lahf
imul
or
loope
movsb
cmp
inc
or
sub
mov
repnz
pop
addr16
aaa
xchg
negl
call
inc
xchg
fwait
push
add
int3
mov
call
jo,pn
mov
inc
test
pop
mov
and
test
lea
cmp
cmp
and
dec
pop
mov
push
adc
jo
pop
shrl
push
loop
sbb
int3
sub
mov
shl
push
and
out
cmp
loop
cs
daa
pop
push
movsl
cmp
xchg
fmuls
subb
xchg
ja
jnp
sub
jmp
push
sbb
add
cmp
mov
dec
inc
jmp
cmp
add
or
sub
lds
jne
cmpsl
xchg
int
shl
fsubl
int
and
movsb
mov
sub
incb
push
pop
mov
inc
scas
mov
cmovno
sti
adc
push
shrl
mov
push
mov
inc
push
icebp
cs
movsl
testl
and
sub
in
int
fisttpll
mov
dec
enter
into
sbb
daa
dec
push
pusha
xchg
aaa
push
and
mov
jb
or
add
hlt
cmp
movsb
mov
dec
daa
adc
sbb
stc
cmc
decb
pop
mov
fstl
lock
in
xchg
mov
pop
lret
aas
andb
scas
aad
shll
ljmp
mov
fwait
xchg
cli
js
icebp
bt
pushf
sub
push
xor
sub
repnz
adc
lahf
cmp
bound
repnz
dec
out
loope
cmp
gs
fildl
xor
sbbl
mov
out
inc
popf
insb
push
cmp
cld
pop
xor
out
shlb
daa
cli
push
ja
or
movsb
or
mov
mov
mov
cmpsb
aaa
std
cld
pop
notb
dec
aas
cld
sti
and
inc
pop
mov
xor
add
mov
sbb
rcl
repz
in
sar
sbb
sub
mov
and
adc
lret
and
push
js
jle
xor
cltd
sbb
in
mov
shrd
sbb
in
mov
inc
mov
push
mov
inc
adc
jno
add
adc
sti
test
xorb
mov
dec
out
push
ret
dec
jnp
ret
aas
sub
mov
add
and
cmp
pushf
adc
mov
jle
mov
jbe
inc
call
mov
movsb
packsswb
xlat
int
dec
insl
nop
and
jbe
andb
xchg
xchg
stc
das
imul
js
jg
mov
dec
or
xchg
int
cmp
xchg
aaa
loop
lret
arpl
xchg
add
push
inc
enter
lret
jmp
jae
mov
fsubr
popf
xchg
cmp
fucomi
push
push
lcall
gs
sbb
xlat
or
imul
cmpb
inc
fwait
mov
int
cmc
cmpsl
xorb
mov
cmp
loope
sub
dec
jo
or
mov
jl
jecxz
sub
add
add
repz
push
fidivl
aam
adc
jl
cmp
add
daa
sti
out
jnp
mov
sti
imull
popf
test
inc
or
rorb
loope
outsl
lds
cmpsl
es
mov
pusha
loopne
sbb
dec
inc
cmp
cli
sbb
loope
jo
insb
orb
sbb
int
pop
mov
div
pop
push
aas
insl
xchg
gs
fists
push
daa
test
dec
add
mov
add
pop
es
mov
lods
shlb
xor
test
in
mov
xchg
les
push
jae
movsb
sub
dec
in
cmp
inc
aad
inc
adc
loopne
cmp
mov
cs
sarl
jo
xor
add
mov
movsb
dec
sub
ljmp
lods
test
stc
dec
xor
sub
nop
insl
lods
pop
out
arpl
rcrl
or
sub
pop
mov
in
xchg
scas
add
xchg
xchg
jecxz
jb
test
add
pop
orb
push
add
mov
xchg
sarb
lds
popf
fmulp
loop
sub
daa
fwait
push
int3
cmpsb
ja
loopne
imulb
aas
popa
test
test
pop
lods
rcrl
mov
das
or
pop
insl
sbb
xchg
xor
aad
xchg
ss
incl
pop
cmpsb
adcb
movsl
mov
cmpsl
rcll
rorb
sbb
in
xor
fiaddl
xchg
fcompl
xchg
jmp
mov
mov
mov
xchg
and
inc
xor
negl
mov
enter
mov
popa
into
cmp
stos
add
mov
jmp
arpl
pusha
mov
fwait
cmc
xchg
test
mov
and
int
test
cmc
and
push
and
and
ror
mov
sub
loope
movsl
aad
ss
cmpsb
ror
mov
pop
movsb
or
insl
pop
ljmp
mov
push
lahf
iret
inc
shrl
leave
fidivs
in
push
push
int3
dec
push
out
lret
add
xor
xor
pop
stos
or
cmp
fisttpl
cmp
jb
out
push
iret
pop
dec
cld
pop
and
test
movsb
mov
outsl
mov
clc
dec
dec
fsubs
fldcw
dec
pop
push
not
inc
outsb
inc
mov
ljmp
xor
cli
sbb
xchg
add
pop
and
dec
mov
incb
jae
mov
lods
inc
std
je
jae
sbb
jecxz
sahf
inc
scas
stc
dec
and
mov
insl
adc
lahf
jne
aam
aad
jg
cld
inc
cmc
sub
pop
inc
dec
daa
jo
movsl
ficomps
jmp
daa
lds
lods
add
cld
divb
push
sbb
push
xchg
mov
es
lret
dec
inc
lret
inc
xor
clc
cmp
in
mov
cltd
jbe
inc
xchg
call
int
nop
out
mov
cmp
xor
insb
xorl
xchg
or
mov
scas
fwait
mov
cmp
xchg
vpacksswb
mov
push
je
lret
xor
sahf
addl
std
aaa
xchg
or
cmp
outsb
mov
pop
shlb
sub
sbb
imul
aaa
inc
popfw
dec
add
fwait
and
loopne
arpl
sahf
push
outsb
xchg
xchg
mov
lock
mov
cmc
sbb
xchg
je
mov
arpl
sbb
roll
cmpsl
rcr
mov
mov
mov
inc
dec
xchg
mov
inc
emms
xchg
fidivl
aas
sub
jecxz
inc
or
movsl
xor
sbb
mov
sbb
or
test
push
imul
and
adc
cltd
xchg
sbb
outsl
dec
leave
jecxz
imul
mov
loope
mov
sbb
mov
loop
add
push
lahf
inc
adc
mov
enter
jae
pop
lret
fimuls
imul
and
das
jle
add
ficoms
ss
mov
add
jb
xchg
jmp
and
adc
icebp
in
push
sub
push
cld
dec
mov
setge
aas
and
scas
iret
pusha
sub
add
sbb
adc
bound
push
xchg
mov
push
arpl
add
dec
fdivs
jnp
pusha
dec
jecxz
lock
mov
faddp
aam
out
cltd
ret
inc
or
data16
mov
mov
mov
xor
xor
xchg
mov
jb
incb
dec
xlat
mov
xor
andb
ss
out
push
and
sbb
and
into
mov
push
inc
mov
shlb
mov
je
aam
outsl
cmc
mov
clc
adc
and
pop
lods
dec
shl
outsb
in
mov
sbb
xlat
arpl
add
or
push
jp
outsl
adc
call
aam
xchg
movsl
mov
jbe
lds
fldenv
loop
inc
aam
add
rcrb
jo
cmpsl
jnp
xor
scas
arpl
cmp
xchg
movsl
cmp
and
inc
add
push
ds
iret
jno
pop
cmpsl
inc
jae
dec
js
or
pop
xchg
loopne
cltd
in
dec
mov
fs
dec
jne
jns
je
popa
ds
jl
sbb
imul
push
dec
jle
popa
dec
push
or
inc
push
int3
xchg
test
dec
cs
mov
cmp
addl
cld
or
dec
jle
dec
int
les
mov
outsl
das
mov
adc
cmp
pop
mov
insl
scas
mov
arpl
arpl
mov
dec
movsb
mov
ds
sub
gs
push
outsb
jp
adc
imul
movsl
add
cmpsb
int
dec
or
loopne
sub
outsb
test
imul
or
insl
dec
lret
lret
test
jnp
mov
adc
sarb
xchg
pushf
pop
int
xchg
pop
arpl
sbb
icebp
add
out
stos
xor
stc
outsl
and
sbb
es
sub
jae
add
out
mov
in
jle
push
lcall
sbb
jle
mov
hlt
popf
mov
icebp
push
add
pop
dec
shrb
sub
insl
pop
mov
mov
jg
sbb
pop
add
sub
inc
add
ds
cwtl
rcrl
scas
mov
jno
std
pop
pop
mov
xorb
mov
inc
ficomps
lods
sbb
cmp
ret
or
stos
scas
fcompl
in
in
mov
and
je
out
fimuls
jno
mov
xchg
dec
pop
mov
cmp
arpl
xchg
pop
xchg
jnp
mov
mov
and
inc
icebp
out
in
dec
jle
mov
insb
or
jo
fwait
or
sti
insl
mov
cmp
fistpll
and
outsl
or
or
decb
adcb
xchg
shrb
inc
jg
dec
insl
mov
fists
push
cli
test
mov
out
in
out
mov
jns
test
gs
fldl
leave
adc
xchg
or
cmp
leave
xchg
cmp
jmp
outsb
inc
cli
aaa
cli
fdivrs
sbb
adc
push
fistl
rorw
mov
xor
clc
in
sti
push
sub
fsubl
loope
push
jo
mov
into
fists
pop
stos
fimuls
out
dec
rcl
movsl
leave
adcl
cmc
jae
data16
sti
add
jns
inc
adc
dec
aam
popa
sbb
stos
mov
mov
sbb
out
enter
adc
enter
test
sub
data16
test
sbb
dec
mov
or
ja
inc
fmul
sahf
lahf
out
sbb
gs
les
push
scas
test
andl
aad
add
sub
subb
sbb
popa
mov
imul
xchg
adc
das
repnz
cmp
jnp
rorl
mov
or
and
cwtl
arpl
les
frstor
push
mov
xchg
dec
fsub
aad
mov
jae
cmpsb
ret
sti
and
lea
into
adc
or
lock
or
add
sahf
lret
add
shll
jne
sahf
jl
in
cmpsb
inc
push
sahf
jno
sahf
dec
orb
mov
je
sub
jbe
and
add
or
mov
cli
jno
rorl
jmp
adc
imul
xor
pop
pop
dec
aas
push
mov
xchg
lock
insb
scas
jnp
ror
pushf
faddl
and
jp
add
iret
mov
ljmp
stos
dec
stos
mov
adc
popa
movl
and
mov
push
push
hlt
xor
xor
fst
pop
xor
or
inc
adc
dec
fildll
mov
bound
mov
filds
popf
repnz
shlb
or
mov
mov
push
xor
and
in
jl,pn
shll
outsb
and
and
mov
xor
aam
xchg
inc
sti
xor
les
fwait
insb
sub
xor
jle
mov
pop
in
les
push
in
les
je
iret
inc
sti
push
mov
push
dec
test
ret
mov
pop
cmp
arpl
or
or
scas
pop
pushf
pop
xchg
je
insl
je
sbb
jge
jecxz
jo
into
mov
mov
and
cmpsl
andb
cmp
out
and
xlat
scas
jle
rcl
mov
jge
cli
lds
test
orl
push
hlt
mov
inc
xchg
pop
out
stos
outsl
pop
jbe
shlb
dec
jb
push
jne
xchg
lds
pop
mov
push
gs
sbb
es
imul
loop
sub
mov
add
mov
bound
outsb
cmp
leave
pop
lds
sbb
dec
mov
push
lock
pop
push
pusha
leave
and
jbe
xchg
inc
or
fadd
xor
jbe
sbb
nop
fs
sub
mov
mov
mov
test
xchg
insb
inc
mov
jne
out
dec
mov
mov
add
jge
cmp
ret
std
je
lock
add
sbb
xlat
adc
lds
jb
xchg
lcall
sbb
push
sti
data16
push
push
icebp
and
jbe
push
xchg
lcall
leave
sub
sbb
and
enter
ss
popf
fstps
scas
mov
mov
inc
add
pop
pop
mov
clc
xor
fmul
jg
mov
ret
cmp
and
or
dec
pushf
mov
push
testl
ret
fbstp
pop
sub
in
or
mov
inc
in
mov
pushw
sahf
inc
gs
xlat
nop
cmp
push
lcall
mov
or
mov
and
int3
mov
fdivrl
into
testl
jns
leave
adc
jnp
xlat
ljmp
inc
push
push
dec
pop
in
or
adc
shll
unpckhps
xor
xor
mov
es
cmp
cli
xchg
xchg
dec
xchg
push
iret
sbb
rolb
faddl
shlb
sub
inc
jno
or
jbe
outsl
pop
pusha
mov
push
or
xchg
stos
bnd
jecxz
aad
jne
mov
shll
push
inc
shlb
daa
pop
jbe
pop
cmpsb
out
clc
jmp
adcl
hlt
mov
sub
das
or
xchg
pop
jb
jecxz
test
sbb
adc
sub
xchg
mov
jmp
fmul
sub
test
xor
inc
xchg
pop
xor
cmp
addr16
lea
sbb
nop
movsl
mov
pop
movsl
fidivrs
sbb
int
jecxz
dec
fwait
dec
cs
xor
shl
mov
sahf
les
inc
mov
aas
cmp
aad
lods
push
pop
sahf
add
push
dec
xchg
out
into
add
rolb
dec
inc
dec
js
xor
aam
outsl
repnz
push
push
pop
mov
out
lret
jmp
and
dec
movsl
add
sti
clc
dec
fistps
mov
cmp
sbb
dec
sbb
scas
mov
test
lret
cmp
insb
out
and
movsl
repnz
mov
pop
push
adc
mov
xchg
sub
and
sti
stos
push
sub
rcrl
daa
popf
daa
loopne
scas
data16
sub
xlat
xlat
ficompl
dec
nop
mov
rorb
sbb
cwtl
loop
test
push
mov
and
loope
adc
idivb
jecxz
inc
mov
push
add
loop
xchg
mov
sub
xor
and
pop
rcll
cmpsb
les
xor
push
enter
inc
push
or
sub
js
shr
aas
adc
std
iret
cltd
lock
inc
jbe
mov
add
enter
sbb
xchg
cmp
jae
inc
xchg
pop
pop
aaa
in
rcrl
jo
push
sub
or
add
pop
add
into
hlt
sbb
out
push
dec
mov
pushf
sbb
push
inc
lret
add
int3
inc
and
push
icebp
dec
ja
test
in
add
add
les
pop
negb
repz
jg
les
fcmovnu
dec
lcall
testb
mov
mov
gs
push
dec
inc
stc
int
jecxz
pop
push
cmp
mov
mov
inc
pop
xlat
xchg
sbbl
test
ss
lods
idivl
jo
jae
adc
ss
dec
add
xor
lods
ficoms
pop
xor
mov
mov
pop
lea
and
loopne
dec
pusha
lea
xchg
lock
mov
aas
jbe
xchg
testb
loop
aam
dec
push
sbb
xchg
in
inc
mov
xor
ret
add
sahf
sbb
push
jo
and
cmpsl
outsb
jmp
cmp
icebp
out
adc
cmc
inc
inc
push
adc
in
mov
xchg
xchg
dec
push
push
sub
pushl
push
xchg
cmp
pusha
aad
xchg
aaa
notl
xchg
test
dec
outsb
xchg
xchg
xchg
js
insl
cmpl
fs
into
inc
pop
aaa
movsl
dec
push
push
push
sbb
push
addb
mov
add
pop
sbb
jmp
or
ja
jmp
mov
pop
das
and
pop
movsb
xor
sbb
xchg
sbb
push
test
jecxz
dec
xchg
lods
call
popa
lock
jbe
sbb
dec
mov
icebp
cmp
insl
nop
test
movsb
orb
dec
inc
int3
mov
icebp
imul
imul
cmp
pop
add
add
insl
mov
sub
pop
adc
out
insl
cmp
sub
movsl
push
les
or
mov
shrb
xchg
and
jl
in
push
pop
clc
out
pop
pushf
in
dec
mov
pop
jno
add
push
pop
cli
mov
jmp
dec
sahf
insl
xor
and
jno
addr16
mov
repnz
mov
in
mov
loop
fstl
xor
ss
adc
movsl
mov
movsl
roll
std
jge
int
je
sub
or
mov
out
test
imul
sti
add
jg
das
jge
mov
pop
jns
and
or
lret
ds
cs
loope
and
mov
mov
adc
mov
mov
aaa
andl
mov
hlt
stos
leave
outsb
add
push
adc
sub
fwait
cli
mov
pop
inc
pop
fwait
cltd
mov
cmc
lods
xchg
std
addb
movsl
xor
jo
cmp
jns
movsb
ret
sub
inc
xchg
or
cmpl
out
sub
jae
test
repnz
fcmove
lock
mov
mov
rclb
mov
inc
rcr
jle
xchg
push
sbb
cltd
cmp
popa
js
pop
sub
pop
popf
pop
mov
imul
in
adc
fsubrl
cli
mov
lahf
mov
mov
cs
jge
dec
inc
push
je
xchg
gs
pop
movsl
negb
hlt
jmp
pop
mov
or
xchg
adc
cwtl
js
xchg
imul
or
orl
cmpsb
xor
rcrb
jl
add
clc
mov
mov
repnz
mov
push
jno
je
pop
ss
pop
mov
andl
mov
aaa
je
xor
in
scas
sub
stos
jmp
popa
cmp
adc
pusha
xor
aas
add
test
adc
dec
pop
sbb
mov
andb
inc
loop
cmp
jl
mull
and
dec
mov
xchg
sbb
add
sbb
mov
pminub
repz
bound
das
test
pop
sarl
in
pop
das
pushf
sbb
adc
dec
fs
imul
aam
popf
mov
sub
data16
inc
jl
push
jge
pop
lods
in
fisubrl
cmp
cltd
xchg
jl
cmpb
and
jl
inc
jp
iret
dec
in
sbb
fidivrl
ret
xchg
lea
int
inc
pop
jo
mov
fstps
mov
xchg
pop
insb
and
or
jg
pop
cld
mov
int
mov
lods
andl
cmp
dec
jge
mov
cmpsl
in
movsb
dec
jge
add
xor
mov
scas
nop
pop
loop
jl
fadd
xchg
inc
lods
frstor
xchg
cld
loopne
jbe
mov
mov
sbb
jle
and
int
push
xchg
push
lock
dec
cld
imul
fucomip
xchg
inc
out
xor
fwait
jno
push
sbb
lock
call
jnp
xlat
inc
sbb
lods
ret
out
jp
popa
dec
in
fnclex
push
pop
jno
repz
or
pop
ja
xor
fstps
lods
rclb
in
cmp
sbb
rcrb
add
add
jo
cmp
js
cmp
push
xchg
cmc
imul
test
xor
cmpsl
inc
lea
je
insl
inc
inc
call
push
scas
mov
int
xchg
lret
jnp
popa
or
inc
xor
and
sbb
cs
lret
gs
mov
out
pop
andl
or
push
insl
ds
repnz
mov
clc
ljmp
and
pop
adc
gs
dec
stos
or
jle
das
jecxz
aas
inc
and
sbb
dec
push
icebp
fsubs
mov
xchg
mov
imul
icebp
mov
aas
and
sub
sti
lock
push
add
adc
divl
fbld
mov
imul
out
dec
mov
test
xchg
cmpsl
hlt
mov
mov
mov
loopne
in
stc
xlat
sub
sti
pop
mov
cmc
inc
push
sub
bound
dec
repz
dec
cltd
jnp
testl
loop
or
addl
push
inc
xchg
dec
xchg
mov
lods
jo
jno
xor
int
mov
inc
add
mov
pop
ret
iret
push
mov
dec
ror
dec
pop
test
aad
pop
adc
jle
sbbl
adc
push
xor
adc
and
leave
rcrb
pop
gs
ja
cmp
cmp
jl
clc
mov
or
into
mov
sbb
mov
xchg
pop
push
inc
xchg
mov
jno
mov
pushf
pushaw
mov
dec
repnz
inc
repnz
dec
psubsb
outsl
lods
fdivp
repnz
lods
push
popf
inc
enter
out
pushf
enter
shlb
sub
stos
cmpsl
aas
xor
cmp
jmp
lods
divb
inc
daa
iret
jo
test
int3
sbb
inc
mov
jecxz
sub
add
mov
xorl
xchg
push
xchg
push
or
add
in
aas
aam
std
cwtl
pop
stc
or
jbe
rclb
or
stos
cmpsb
and
out
andl
mov
pusha
fiaddl
cs
push
cs
mov
rorb
jle
lret
push
or
inc
cld
pop
and
inc
sbb
dec
pop
aam
jns
xchg
call
jne
jns
std
add
lret
xchg
xlat
cld
jmp
ja
sub
mov
push
lret
ret
out
movsb
ret
or
sbb
pop
xchg
mov
mov
mov
mov
cs
scas
cmp
add
inc
pop
sub
or
jno
cld
jge
mov
mov
ljmp
pushf
loop
push
cmc
rcrl
test
lods
scas
lods
jbe
mov
and
shr
mov
mov
adcl
test
dec
push
scas
inc
aad
icebp
add
pop
cmpsb
sbb
ret
fimuls
dec
sub
clc
pop
sarb
push
add
push
mov
push
shlb
xor
jnp
pop
push
xchg
ret
xor
or
clc
rorb
cld
cmpsl
iret
scas
jl
jo
jb
rcrl
stos
cmp
aad
inc
test
ret
dec
shrl
push
out
sbb
ja
adc
lods
lods
out
out
cmp
pop
mov
iret
cmpsb
dec
sbb
push
test
mov
xchg
fldcw
and
scas
adc
sub
push
cmpl
out
jne
shl
inc
adc
xchg
mov
nop
icebp
cmp
int3
lds
mov
adc
and
and
loop
jecxz
pop
xchg
pop
js
xchg
inc
adc
sub
mov
in
or
or
pusha
push
ret
out
or
cmp
frstor
xchg
aaa
popa
xchg
fisttpl
or
aas
fldcw
repz
out
out
aam
lret
in
jb
sub
inc
inc
clc
imulb
jno
sub
xchg
fsts
inc
xor
fimuls
lret
sahf
or
mov
xlat
test
jecxz
ret
or
movsl
hlt
sbb
test
enter
adc
enter
jae
movsl
mov
push
mov
iret
out
enter
push
sahf
pushf
xchg
and
and
xchg
bound
pop
dec
xor
xor
lret
adc
cs
jp
xor
iret
pop
adc
scas
sbb
rcrl
lock
pop
cmp
sbb
lea
lods
scas
and
pop
mov
or
adcb
idivl
pop
in
mov
push
mov
fnstcw
lods
jo
movsl
cli
inc
addl
loopne
sarb
sti
fbstp
cmp
out
mov
lea
loopne
js
dec
push
xor
imul
scas
mov
lods
pushf
lret
scas
mov
test
cmpsb
mov
cli
leave
push
and
pop
mov
in
xor
fs
mov
cmc
lds
push
mov
js
loopne
ret
mov
sti
xchg
pop
jecxz
jle
mov
sbb
rcr
adc
mov
test
jge
fistl
pusha
or
cmp
cwtl
inc
arpl
test
test
rdpmc
outsb
aaa
or
cs
out
out
sar
fidivl
push
sub
pop
pop
mov
ret
aas
xchg
push
dec
imul
xchg
sub
lcall
es
pop
aas
lods
adcl
pop
xchg
mov
and
cmp
sbb
jmp
lods
lods
dec
mov
xor
ljmp
aaa
jecxz
mov
add
lock
fcoms
mov
leave
imul
ret
fs
jb
jl
lods
in
mov
or
sbb
rcrl
xor
insb
fmul
outsb
fcomip
dec
popf
lcall
cmpsb
je
sbbl
pusha
ljmp
inc
in
or
pop
lahf
dec
mov
mov
cli
add
lcall
mov
and
popf
repz
xchg
jno
lock
push
jmp
add
jle
rcr
call
mov
popa
cs
or
mov
adc
adc
or
leave
sub
rorb
push
int
mov
pop
xor
es
test
xacquire
cmp
and
jnp
jecxz
or
pusha
sahf
push
insb
sub
push
test
movsl
adc
adc
mov
mov
inc
or
rol
mov
inc
or
lods
inc
lods
mov
stc
push
mov
mov
dec
mov
cmp
loop
ret
mov
adc
and
pop
xchg
pop
jo
xlat
test
xchg
inc
lods
aad
mov
mov
fsubs
mov
push
movsb
dec
outsb
stc
cld
inc
adc
xchg
dec
jo
pop
rorl
sub
lret
data16
js
out
jmp
ret
sbb
in
imul
mov
adc
jg
roll
jp
loop
mov
ds
icebp
add
fwait
jno
pop
addr16
cmpsl
push
aad
pop
push
jle
in
ss
push
jmp
scas
popf
stos
mov
outsl
loop
stos
jo
jbe
stc
ret
hlt
push
and
test
and
mov
pusha
inc
lahf
sti
pop
testl
mov
jbe
mov
mov
push
scas
aas
push
into
pop
mov
sub
out
adc
inc
adc
dec
inc
lds
dec
or
int
into
push
add
scas
dec
and
dec
repnz
nop
and
mov
loop
popl
imul
js
inc
or
fldl
mov
loope
adc
pop
mov
inc
inc
enter
lcall
out
mov
push
in
inc
shr
cwtl
insl
inc
pushf
andl
repz
incl
je
xchg
jno
adc
shll
add
js
xchg
xchg
dec
rol
test
jge
adc
cltd
mov
jbe
mov
pop
xchg
fnstsw
stos
xor
add
adc
mov
dec
movl
jbe
jbe
cmp
sub
mov
stc
leave
out
jle
rclb
sub
jnp
cmpb
shlb
call
or
mov
ret
mov
dec
or
jmp
xor
mov
pop
xor
into
jmp
lods
mov
cmp
lods
pop
dec
and
scas
cld
xchg
lret
sbb
add
push
call
scas
inc
rolb
daa
mov
xor
mov
ret
pop
leave
daa
jnp
mov
movsb
xchg
stos
mov
sub
sbb
add
cmp
clc
movsl
jecxz
mov
into
orl
mov
pop
inc
jns
jne
jp
mov
push
test
push
enter
aas
arpl
cmp
lods
ss
clc
push
out
cmp
jno
movsl
imul
stos
ljmp
sbb
jno
shlb
cmp
mov
xchg
sub
mov
fwait
pop
push
push
jmp
pop
xchg
and
push
jecxz
fs
dec
inc
adc
and
adc
mov
xor
push
mov
js
inc
adc
pop
rcr
mov
ret
cmpsb
xor
mov
les
out
cltd
mov
jecxz
pushf
add
dec
loop
or
dec
mov
xor
jmp
movsl
pop
xor
jb
mov
lahf
jno
or
pop
loopne
pop
jne
mov
push
sbb
cld
xlat
dec
lret
pop
scas
cmp
and
shl
sbb
movsl
mov
push
dec
jno
xchg
lea
lcall
add
and
sbb
fsubl
insl
adc
sub
add
leave
mov
or
arpl
dec
aas
sarl
roll
ljmp
popa
testb
ficomps
shll
fsubl
std
mov
out
aas
fstpt
jge
stos
and
jge
cmpsl
mov
ljmp
sub
sub
or
jge
xorb
mov
or
mov
dec
mov
cmp
mov
fiadds
in
in
es
xor
jo
push
jp
or
adc
push
lock
jnp
loope
icebp
dec
mov
mov
add
push
nop
adc
cli
std
test
sbb
xchg
sub
xchg
outsl
movsb
sahf
dec
or
inc
decl
into
notl
jle
leave
lods
xchg
add
pop
adc
test
idiv
std
cmp
cmpsl
adc
xlat
adcb
or
dec
push
cld
cmp
faddp
sbb
aad
adc
jnp
push
lods
mov
inc
stos
jae
insl
repz
lret
cmc
dec
and
pop
les
mov
pushf
pop
clc
nop
push
xorb
rcrl
rcr
adc
lea
sub
shlb
insl
jns
adc
pop
arpl
mov
and
mov
mov
inc
into
aas
out
gs
mov
out
cltd
jecxz
sub
dec
test
shrb
mov
in
movsb
lret
push
ret
jnp
mov
aaa
dec
push
or
xor
enter
fnstsw
arpl
scas
lret
jnp
pop
and
loopne
jbe
or
inc
xchg
hlt
sbb
jl
jns
repz
add
jl
sub
xlat
pop
neg
movsb
mov
stc
push
loope
movsl
fdivl
push
stos
fcompl
jg
clc
je
xlat
test
push
xlat
iret
sbb
inc
jbe
in
sub
xchg
into
insl
das
into
inc
nop
mov
repnz
or
mov
cmovge
in
pop
rcrl
cmpsl
enter
sub
movsl
movsb
aam
pusha
sbb
xchg
mov
dec
icebp
dec
fstps
fcmovbe
dec
out
adc
mov
mov
adc
xlat
mov
inc
xchg
loopne
or
push
xchg
inc
and
bound
sbb
stos
xchg
inc
add
fsubr
hlt
repnz
notl
ds
sti
cli
mov
sti
fdivp
xchg
fsubrl
out
xchg
adcl
imul
loopne
sub
add
leave
adc
imul
jne
sub
nop
add
xchg
notl
outsb
and
jb
dec
repnz
stos
daa
xchg
add
stos
xchg
jno
push
cmpsl
add
push
test
inc
scas
fmuls
enter
jb
sub
cmp
in
rcr
pop
jno
cwtl
int
cmc
clc
jge
in
mov
mov
jbe
xchg
xlat
imul
imul
mov
arpl
mov
xchg
adc
pop
inc
xchg
scas
push
out
sub
jg
pusha
mov
cmp
cmpsb
xor
adc
cwtl
loopne
cmc
bound
leave
std
inc
test
jo
add
dec
int
leave
push
fisttpl
lods
inc
xchg
data16
and
mov
or
push
lods
cs
into
popf
and
hlt
std
jl
mov
pop
int
dec
push
rcll
xchg
adc
call
dec
aas
pop
cmpb
push
adcl
pushf
pop
js
jo
aad
mov
mov
and
mov
pop
add
sti
icebp
push
mov
out
icebp
sti
mov
ret
sbb
cmp
hlt
and
xchg
in
and
jge
das
bound
mov
loopne
jae
pop
stc
subb
movsb
repnz
fdivs
and
inc
sbb
mov
inc
mov
and
mov
jne
pop
mov
add
pop
push
push
mov
stc
rolb
cltd
int
mov
loop
imull
je
aaa
frstor
lods
in
lahf
adc
cmp
and
mov
jae
inc
cmpsb
jecxz
mov
inc
jne
cmp
add
xor
xor
loopne
outsl
bound
xor
mov
xor
mov
mov
inc
scas
jmp
aam
xor
jnp
ret
in
lds
out
mov
cmp
idivb
std
mov
mov
dec
push
pop
jnp
dec
pop
mov
xchg
jne
and
fucom
inc
cmp
sahf
js
daa
xor
mov
sbb
cmp
stc
jbe
dec
add
sar
mov
iret
inc
mov
rcrl
cmpsb
mov
nop
jecxz
jbe
push
push
jnp
mov
loop
dec
mov
mov
fdecstp
mov
daa
fisttpll
idivb
xchg
push
push
sub
insl
jae
loopne
imul
lret
mov
jmp
dec
cmp
inc
loope
lcall
sub
popa
sbb
and
test
jmp
sub
and
out
shlb
cmpsb
ds
inc
imul
push
ret
push
frstor
jp
xchg
cwtl
pop
lret
incb
push
jmp
ficomps
stos
cmp
mov
add
cs
jl
das
lahf
inc
mov
jle
fdivr
sar
lret
cmp
fmuls
jge
ja
scas
and
push
js
cvtpi2ps
arpl
xchg
imul
movsl
repnz
mov
jl
loop
or
out
fucomip
or
xor
es
aam
imul
cmpsb
ljmp
lret
mov
xchg
loope
inc
dec
adc
das
pop
test
out
lahf
cmp
inc
addr16
fucomip
mov
pop
cld
outsb
mov
ret
loop
sub
vpshad
cmp
test
xchg
add
mov
push
push
adc
add
push
in
test
rcrl
sbbl
aaa
pop
xchg
xchg
sarl
pop
mov
outsl
sbbb
push
dec
push
add
jnp
addr16
xor
dec
adcl
xchg
in
aas
rorb
mov
popf
xchg
into
loopne
mov
jnp
pop
mov
xor
adc
loope
shrb
push
jbe
cmp
push
outsl
mov
mov
lea
cltd
pusha
push
outsb
fsubrs
dec
mov
ret
lcall
sbb
jo
adc
es
movsb
imul
push
mov
data16
in
xchg
sbb
inc
cmpsb
enter
fwait
gs
push
jae
and
cmp
jp
insl
mov
scas
sbb
iret
pop
loop
aas
xorl
lea
sub
cmp
ret
push
pop
inc
fdiv
xchg
ficomps
jecxz
jo
dec
in
imull
pusha
insl
xchg
inc
test
pusha
pop
pop
ss
sub
outsb
fs
add
xchg
sub
cmc
cwtl
test
ret
ret
mov
psubsb
shll
mov
cltd
xchg
repz
sarb
or
dec
ret
aam
inc
pop
orb
loope
xor
or
push
gs
rorb
or
ss
mov
adc
lret
stc
lds
out
push
xor
lahf
stc
shlb
mov
fstps
adc
jge
imul
sbb
divl
push
xor
or
mov
shll
bound
cs
dec
subl
pop
jmp
push
cltd
scas
test
rcll
repnz
and
dec
push
stos
xor
incl
mov
xchg
xchg
cmpsl
decb
leave
std
repnz
lret
shll
jnp
adc
mov
in
daa
push
test
fsubp
cmp
xor
sahf
out
ds
fmuls
fcmovbe
mov
pop
cmp
sbb
out
mov
jns
mov
loopne
jle
movsb
aas
xor
xor
dec
inc
andl
mov
dec
mov
rcrl
or
out
sahf
imul
in
sahf
popa
xchg
push
sti
sbb
xchg
lock
out
cmp
mov
ja
and
inc
add
and
test
push
push
cmp
ret
cmpsl
mov
push
call
lea
pop
sahf
dec
sub
fidivrl
sbb
je
adcb
loope
mov
dec
adc
or
cmc
xchg
or
sub
mov
xchg
inc
pop
je
clc
scas
inc
sub
stos
sbbl
in
push
loope
jg
pop
rcl
and
mov
add
jb
mov
loopne,pt
pop
and
adc
cli
sub
and
xchg
adc
sub
push
push
jae
inc
xlat
scas
push
and
ret
dec
xchg
push
xchg
out
rcl
fistl
enter
sarl
sbbb
push
xor
sbb
lods
sub
ljmp
lock
push
rcrl
aad
sarb
data16
sarb
inc
pushf
cltd
mov
inc
dec
fcoml
cmpsb
push
jo
mov
testb
cmp
inc
and
insl
adc
test
into
fisubs
jno
push
pop
test
test
inc
mov
cmpsl
rcl
out
aam
movsb
sbb
sub
sbb
lahf
pop
ret
ss
dec
xchg
addr16
mov
xlat
mov
mov
push
pop
lock
sahf
push
loopew
shll
inc
pushf
jae
out
add
or
gs
xchg
ret
insl
outsb
cmp
js
fdivrl
adc
sti
inc
push
jne
mov
ds
adc
and
lods
rcrb
ds
loope
sub
cmp
sub
push
jg
out
clc
call
adc
jno
jb
imul
sbb
cmc
mov
sahf
lea
push
in
jl
ret
xor
sti
ss
and
adcl
xchg
or
iret
daa
roll
lds
dec
xchg
inc
test
jbe
daa
sub
or
add
cld
inc
stos
in
mov
jo
mov
sub
push
pop
sub
xchg
dec
mov
and
int3
xor
cmp
fists
out
mov
jns
int
mov
test
dec
xchg
mov
mov
lods
stos
in
nop
jmp
xchg
push
fsub
or
out
mov
dec
or
inc
les
add
int3
lcall
and
sbb
or
sub
dec
mov
sti
add
sbb
xor
rorl
xor
iret
dec
mov
fsubs
jmp
std
xlat
shrl
pop
xor
jnp
cli
into
mov
mov
movsl
mov
mov
push
ja
das
push
int
push
fs
mov
cmpsb
in
xchg
fwait
ss
cmp
dec
dec
cld
fldcw
add
cld
lret
cs
cmp
sbb
outsb
cmp
icebp
nop
mov
and
or
ds
insl
cmpb
mov
push
pop
hlt
and
fnstcw
or
jno
fs
push
adc
shrb
xchg
ret
sbb
sbbl
add
mov
stc
jmp
hlt
mov
lods
pop
lds
xchg
dec
mov
pop
xchg
add
test
or
pop
shll
fldt
insb
jno
lods
sub
ret
dec
sbb
xchg
and
xchg
mov
fstl
fmuls
xchg
add
pop
adc
iret
mov
stos
insb
cmc
and
int3
test
pop
and
mov
in
fisubs
xor
in
test
jo
and
dec
mov
out
cli
mov
lods
and
mov
mov
cmp
les
mov
rcrb
sub
jecxz
lds
jmp
xor
push
nop
outsl
or
or
add
fnsave
pop
xchg
lock
xchg
xchg
je
cli
mulb
cmp
shll
adc
xchg
xor
lcall
and
imul
and
xor
ret
inc
add
jo
das
or
lods
or
inc
sbb
sbb
cmp
neg
stc
xchg
lahf
xchg
add
sub
int
sub
add
xlat
inc
ret
push
mov
push
mov
fisttps
ret
dec
dec
inc
ds
pushf
or
pop
sbb
xor
add
sti
int3
sbb
data16
jb
rol
ja
and
sub
adc
jbe
fs
add
push
gs
test
testb
or
iret
fisubl
into
scas
cltd
jb
fmul
sbb
adc
sub
jae
addb
push
inc
stc
test
push
and
sbb
fincstp
add
nop
mov
inc
mov
sti
and
mov
jle
fstl
jns
inc
mov
cs
mov
add
inc
addr16
in
repnz
out
pop
hlt
xchg
faddl
jecxz
xchg
mov
xor
inc
sbb
cld
and
sti
cltd
xchg
fisubl
and
shrb
xor
out
hlt
xor
cli
mov
mov
mov
pop
mov
xchg
adc
stos
cmp
and
mov
lret
xchg
vmaskmovpd
sbb
xor
ja
cmp
arpl
imul
mov
add
test
mov
int3
cmpsb
add
cmp
addb
mov
or
dec
test
mov
pop
jmp
push
jp
push
inc
mov
int3
and
enter
inc
sub
roll
push
js
shr
jge
imull
pop
hlt
jne
out
hlt
ficoml
cltd
pushf
cmp
add
ret
cmp
inc
pcmpeqw
and
jae
divl
aaa
xor
mov
push
cmp
or
add
enter
xchg
push
shrl
stc
dec
xchg
out
pop
cmp
mov
dec
lahf
pushf
xor
xor
dec
inc
arpl
pusha
mov
or
adc
aaa
add
ret
inc
push
and
cwtl
cwtl
cmc
or
shl
mov
fildll
mov
jge
aad
xchg
int3
adc
dec
hlt
xlat
or
loopne
stc
rorl
lret
or
movsb
sub
jecxz
and
mov
lods
das
mov
jmp
jmp
push
push
jge
pop
adc
int3
lods
or
mov
adc
out
lds
xor
ss
aas
cmp
popf
imul
jp
hlt
mov
mov
xor
mov
ja
cmpsl
pop
add
sbb
lea
sahf
push
or
push
dec
pop
leave
test
lods
dec
stc
xor
fisttpl
jl
pop
push
dec
mov
add
ds
bound
sbb
out
flds
aad
jo
imul
pop
push
out
xor
add
daa
dec
pop
jg
or
incl
int3
jl
mov
rcll
sub
add
and
cmp
mov
cli
test
jne
dec
sub
call
inc
push
mov
cmp
fiadds
subb
scas
pop
add
mov
mov
sbb
inc
cmp
xchg
inc
into
outsb
xchg
out
in
inc
rorl
scas
and
mov
or
in
jl
push
sbb
dec
or
cwtl
aad
jmp
mov
adc
lret
xor
hlt
dec
push
pop
push
inc
popa
or
cwtl
or
out
add
sub
rorl
jmp
lds
scas
pop
jb
jle
sub
mov
jo
or
xor
jno
pusha
or
fcompl
fisubs
pop
cli
mov
jno
push
in
xor
add
mov
fadds
decb
scas
pop
jne
cmp
mov
stos
dec
and
add
test
sahf
movl
mov
insl
jnp
and
push
add
lret
inc
subb
lea
push
out
movsb
dec
pop
mov
jge
incl
jmp
or
and
ror
fcompl
lods
add
pushf
test
push
push
dec
lea
mov
xchg
fcmovne
movsb
stos
xchg
jl
pop
xchg
cmp
mov
lcall
xor
aas
cmpsb
or
pusha
out
push
inc
enter
pop
dec
dec
pop
sbb
scas
orb
cwtl
ds
inc
xchg
xchg
inc
andl
out
sbbb
mov
stos
repnz
cwtl
shll
add
stos
jmp
lcall
loope
imul
lret
popf
sbb
pop
add
cmp
jp
imul
rol
out
mov
mov
test
pusha
pushf
adc
loop
mov
test
and
add
sub
and
lods
sbb
jbe
push
pop
data16
inc
cli
mov
cmp
sarb
insb
test
fdivr
lahf
mov
cmp
jmp
and
xchg
sahf
les
mov
dec
nop
out
jns
and
mov
decb
fsubr
xchg
mov
adc
dec
pusha
xor
adc
push
jg
add
jns
test
gs
cmp
sub
shrl
popa
ret
in
inc
inc
pusha
scas
sbb
popa
loop
mov
xor
outsl
adc
cmpsb
pushf
mov
cld
out
inc
mov
loope
jae
out
ficompl
lds
mov
lods
or
sub
xor
fmulp
xchg
jl
jno
mov
xchg
add
in
test
xchg
leave
push
pop
mov
xchg
mov
es
mov
sbb
add
mov
clc
fstl
test
mov
fs
sti
ret
mov
repnz
mulb
pop
mov
ljmp
into
out
sub
push
aaa
xchg
pop
fistpll
ret
faddp
pop
adc
ss
mov
mov
shr
scas
push
lods
aam
inc
mov
stos
scas
aam
adc
outsl
xchg
test
inc
push
outsl
xor
ljmp
sbb
movsb
mov
pop
std
jecxz
pop
testl
mov
pop
loopne
mov
jne
mov
jns
sub
aas
add
mov
popa
scas
jae
mov
pop
push
xchg
push
aam
pop
cwtl
frstor
cs
popf
daa
sti
xchg
and
jl
dec
dec
push
int
mov
and
mov
rorb
test
scas
dec
dec
mov
adc
sbbl
mov
add
jnp
mov
cmp
inc
lock
sub
add
repz
pop
adc
imul
js
subb
movsl
shl
push
inc
js
xchg
ret
dec
mov
sbb
dec
out
push
mov
popf
cmp
push
or
dec
imul
mov
outsb
mull
repz
xchg
pop
test
jp
in
aam
insl
repnz
fsubrs
test
jecxz
je
out
pop
push
mov
jg
into
stc
popa
cmovae
jmp
push
aas
test
or
aaa
adc
cld
mov
cmc
pop
pop
mov
popf
and
in
sbb
or
mov
sti
stos
push
add
xchg
pop
cwtl
jbe
repnz
xlat
mov
cmp
xor
inc
jbe
and
fs
xlat
push
inc
aas
ljmp
mov
sbb
sub
add
sub
mov
loope
add
iret
outsl
movsb
push
popf
and
test
or
xchg
sub
mov
fldl
adc
into
dec
sbb
jle
sub
and
xchg
fadd
or
mov
cmp
pop
xor
sbb
mov
jo
es
jle
cmp
xchg
fs
ret
and
jo
or
sub
ffree
jmp
imul
pop
add
jo
jo
jg
andl
iret
xor
pop
lea
aad
outsl
mov
test
xchg
test
xchg
adc
mov
cltd
outsb
sbb
mov
out
cmc
icebp
bound
add
lods
int3
jo
out
add
ficoms
adc
imul
push
cli
add
adc
ficompl
adc
bound
push
daa
pop
shrl
enter
cmp
enter
out
aad
jl
es
leave
out
mov
sub
adc
lret
push
xor
push
xchg
icebp
sbb
fs
add
mov
mov
pop
xchg
add
push
push
adc
adc
mov
jo
scas
add
ret
test
test
push
mov
test
mov
mov
cmp
roll
fnsave
mov
fildll
cmpsb
sbb
xor
loop
enter
into
imul
ficoms
pop
cmpb
jmp
out
aad
loopne
dec
mov
pop
xchg
setb
inc
inc
mov
das
jmp
bound
into
mov
xchg
dec
push
movsb
je
mov
stos
mov
add
mov
stos
lcall
pop
cmpsl
lret
mov
or
lcall
sbb
fsts
sub
test
jp
stos
outsb
add
int3
push
sub
movsl
shr
mov
stos
add
cli
or
scas
test
jp
cmp
in
cwtl
out
imul
pop
loope
sbb
lahf
xor
jecxz
out
test
ror
inc
jle
mov
pop
xchg
mov
sbb
aad
or
insl
pop
adc
mov
shll
testl
les
out
clc
pop
or
iret
inc
jno
add
test
movb
add
stc
jg
mov
test
loopne
aas
into
imul
cld
push
lods
push
jmp
cmp
stos
dec
cmp
push
aas
gs
lds
adc
push
add
mov
jg
pop
fsubrs
lods
mov
and
push
jecxz
cmpsl
outsb
mov
imul
cltd
addr16
sahf
push
leave
hlt
cld
sahf
pop
jg
push
mov
sbb
dec
lahf
stos
xchg
gs
mov
nop
sub
mov
clc
mov
xchg
and
adcl
and
lcall
mov
sub
xchg
push
aad
stos
push
adc
jae
in
popa
stos
xchg
outsb
and
fiaddl
imul
jle
and
stos
jle
out
and
cld
pop
dec
push
mov
xor
xor
sub
mov
bound
inc
mov
jecxz
fistpl
in
cmp
rcl
xor
lds
add
inc
inc
rclb
dec
pop
in
enter
sar
bound
and
ret
pop
clc
push
dec
sub
push
mov
mov
mov
popf
xor
adc
in
stos
cmc
mov
pop
sub
xchg
iret
scas
sub
cmp
add
and
jb
enter
imul
sub
mov
lock
movsl
cli
cltd
jl
orb
sub
or
in
pusha
adc
cmp
xchg
sub
and
sub
cmp
mov
mull
iret
insl
push
sub
icebp
push
subb
cmpsb
daa
cs
jge
std
mov
addr16
add
popf
stos
ficomps
jecxz
lahf
and
mov
cmp
je
fidivs
mov
or
cs
cmp
mov
std
jl
stc
and
mov
xor
lock
jns
in
push
sub
pop
aas
imul
xchg
inc
aaa
jne
sti
cmc
pop
and
xchg
shll
pop
mov
dec
cld
pop
fldenv
cmp
jge
inc
jns
adc
push
shll
insl
into
mov
addr16
popa
ficoml
mov
inc
fs
rorb
loopne
sbb
popa
push
sarb
xlat
inc
and
lret
pop
adcl
bound
mov
push
sbb
cs
sbb
loopne
pop
mov
mov
inc
cwtl
sbb
mov
into
ds
std
loop
mov
and
shrb
mov
lods
nop
push
dec
daa
addr16
dec
outsb
pop
or
push
sbb
dec
repnz
cmpsl
adc
xor
mov
jge
testb
cli
in
sub
je
out
xor
rcrl
mov
pop
je
dec
iret
push
stos
lret
jp
jmp
cmc
hlt
testl
mov
and
sub
or
xchg
mov
pop
scas
push
or
adc
pop
int
sub
xor
and
data16
adc
mov
aas
and
arpl
push
dec
sbb
aad
in
lods
test
jnp
adc
or
and
cmpsl
pop
mull
pop
jmp
gs
cltd
cmc
adc
aas
and
dec
mov
bound
pushf
push
shlb
data16
mov
push
and
inc
pop
push
and
das
imul
jg
lods
dec
mov
iret
sub
mov
leave
mov
test
cmp
push
push
adc
cmp
vmulss
mov
or
push
sub
dec
mov
push
das
sti
push
lods
pop
es
jae
popa
rclb
popa
push
pop
popl
xchg
fisttpll
cmp
gs
lcall
add
lods
inc
xor
cmp
ffree
add
movsl
jnp
daa
jb
pop
jecxz
ret
dec
js
dec
add
testl
mov
bound
mov
fistpl
pop
ret
inc
stos
decb
rorb
inc
dec
jnp
inc
insb
fildl
sub
sbb
repz
cmc
jge
push
jae
mov
stc
adcb
shrb
sub
imul
push
inc
out
into
cmovl
and
mov
pop
sub
push
and
dec
pushf
push
mov
mov
push
rcrb
sub
sub
push
adc
test
out
fnstsw
cmp
sahf
xchg
mov
pop
cwtl
idiv
out
push
sbb
pop
xchg
lret
aam
shr
sub
popf
mov
jnp
inc
rorb
xor
clc
ss
inc
dec
loop
push
lahf
fsubrl
test
loopne
jl
xchg
mov
adc
dec
out
sti
outsb
sub
jge
filds
jmp
inc
xchg
cmp
xchg
test
pusha
xorl
pop
flds
sarb
inc
pop
sub
push
dec
sti
lcall
sub
in
mov
dec
pop
cld
pushf
imull
sahf
mov
sub
sub
cld
test
add
xchg
mov
mov
es
sub
ds
lods
cli
adc
lods
lods
add
jp
out
fdivs
dec
in
fisubrl
adc
insl
sbb
cli
jp
aaa
cli
out
mov
cmpsb
sbb
popa
sbb
push
jbe
leave
jmp
mov
or
xor
or
insl
aaa
jbe
xchg
int3
roll
fadds
popf
adc
mov
lcall
sub
push
mov
enter
adc
sub
push
dec
xchg
and
inc
movsb
or
test
adc
cli
mov
xor
sti
cltd
mov
cli
syscall
call
fnstcw
xor
mov
fsubs
adcb
pushf
add
or
addr16
sti
aaa
test
push
dec
cwtl
adc
lods
push
daa
loopne
jb
inc
mov
cmp
jne
dec
sbb
stos
add
stos
mov
fcomps
dec
jae
shr
mov
jge
mov
mov
sbb
pop
scas
mov
pop
xor
lock
push
mov
add
cld
es
jmp
int3
xlat
pop
push
loop
sti
das
xor
or
lret
mov
jo
mov
inc
int3
mov
add
gs
inc
dec
push
mov
pop
stos
and
cmpsl
icebp
mov
and
xor
ret
fidivrs
mov
push
mov
pop
inc
mov
or
or
xchg
mov
mov
or
insb
in
push
inc
cld
sbb
dec
shr
jns
idiv
push
jb
adc
adc
cmp
rclb
ret
adc
pop
ds
test
je
das
gs
push
mov
cmp
pop
pop
into
ljmp
adc
call
sub
cmpsb
push
mov
inc
push
push
rcrb
xchg
leave
cmp
or
or
ljmp
jns
out
mov
jp
out
repnz
inc
inc
sbbb
in
imul
lock
ficoml
mov
stos
xchg
xor
lcall
fisubrs
pop
jo
inc
loop
addr16
sub
subl
scas
inc
or
es
sbb
popa
jo
cmp
sub
sbb
mov
data16
inc
rclb
dec
adc
jl
sbb
es
and
dec
mov
lock
sub
mov
daa
push
pop
fldl
lds
ret
sub
cmp
xor
add
push
push
movsl
sub
cmp
mov
push
push
adcl
je
xor
mov
ljmp
push
and
mov
mov
into
jmp
mov
mov
push
xchg
dec
cmp
das
pop
or
fwait
inc
outsb
dec
mov
xchg
add
ljmp
jbe
stc
xchg
cwtl
push
sbb
mov
mov
mov
inc
cmp
outsb
fucomp
adc
or
push
pushf
out
test
or
out
fistpl
mov
out
test
cmp
fisttpl
mov
inc
sub
mov
pop
xlat
aas
sub
or
sub
test
xor
mov
jge
sti
cmpsb
pop
cmpsl
outsb
cmp
dec
fwait
adc
movsl
sahf
scas
mov
or
cmpsb
cld
jmp
movsb
push
mov
enter
ret
enter
aas
pusha
aad
movl
xor
out
push
xchg
ds
mov
add
mov
in
xor
imul
aaa
lock
add
mov
xorl
inc
divb
pop
xlat
mov
int
mov
mov
xor
lods
push
push
pop
ret
xchg
addb
push
mov
xor
cmp
mov
push
push
dec
int
mov
xor
shrb
pop
fcmovnbe
inc
data16
xor
inc
imul
arpl
jp
pushf
and
fsubs
das
adc
sub
or
ret
movsl
lahf
push
pop
pop
aaa
dec
and
sarl
add
inc
ret
pop
push
xchg
inc
mov
lock
out
sub
xchg
xor
xchg
ret
dec
or
shll
repz
fdivs
sub
mov
push
aad
mov
loop
mov
jg
mov
sub
xor
push
int3
jmp
push
shll
popa
xor
push
mov
js
push
fcom
fdivs
imul
or
pop
or
xchg
or
xor
xlat
pop
subl
xchg
xor
jno
bound
repz
sahf
ds
sub
xchg
and
ss
inc
inc
add
xor
es
inc
add
mov
xchg
mov
daa
jle
mov
adc
jg
popf
dec
add
les
fidivl
lcall
pop
cs
ja
pop
push
push
movsl
gs
xchg
sbb
push
lahf
stos
sti
cs
lahf
addl
jnp
jnp
pop
imul
mov
dec
cltd
out
aad
pop
xchg
or
mov
lods
mov
xor
xchg
sub
adc
or
lds
sub
jno
mov
mov
outsb
push
pop
jae
jge
mov
ret
pop
inc
xchg
or
ret
js
notb
adc
sbb
mov
test
mov
subl
shl
cmp
shrb
aad
movb
pop
mov
push
xor
inc
xchg
clc
xchg
pop
incb
and
sti
addr16
and
nop
mov
sub
sub
lret
cli
cmc
rorl
push
insl
mov
push
xor
arpl
jae
pop
mov
jae
daa
lret
sub
push
mov
lret
add
pop
inc
roll
pop
adc
dec
test
and
ficomps
push
mov
xchg
aad
fdivrs
int
push
pop
pop
and
idiv
stos
mov
sub
and
clc
sti
mov
ja
xchg
jne
push
mov
std
imull
mov
mov
lahf
popa
xchg
dec
sub
sbb
sub
into
xor
cmpsb
pop
dec
into
mov
fsubrs
sub
mov
jne
jnp
js
pop
pop
xor
inc
popf
outsl
and
testb
rep
aaa
add
inc
add
mov
jle
mov
fwait
in
scas
mov
push
repz
cmp
rclb
scas
testl
xchg
cmp
movsl
dec
loop
inc
and
rolb
mov
push
cmp
outsb
rol
and
ror
out
push
arpl
sbb
cmp
mov
sbb
lea
adc
iret
inc
test
iret
fwait
and
or
jb
std
scas
arpl
sub
cmpsb
arpl
fsubs
leave
scas
mov
and
pop
orb
pushf
imul
add
pusha
adc
jo
fidivl
sbb
or
call
or
xchg
cmc
cmc
pop
outsb
js
pop
sarb
adc
xchg
lods
xchg
xchg
sbb
inc
adc
lods
mov
outsb
mov
jge
lea
sub
xorl
jno
mov
arpl
cmp
jmp
pop
jae
jns
add
add
pop
mov
dec
out
hlt
push
jecxz
clc
mov
cmp
sub
pop
cmc
ficoms
sbb
pop
mov
or
in
in
sub
add
push
scas
adc
dec
cmc
std
jno
nop
add
sub
cli
in
jmp
pusha
hlt
outsb
cltd
or
sub
mov
cmc
loopne
sub
dec
push
mov
sti
pop
xlat
add
pop
sbb
stos
and
in
xchg
mov
adc
iret
popa
inc
lret
pop
push
dec
push
mov
jge
repnz
cmpsl
loope
sub
add
xchg
scas
in
and
popa
jne
or
lock
adc
cli
icebp
add
mov
cmp
rcrb
stos
push
mov
mov
xor
add
dec
test
pop
sbb
sarb
ret
lretw
das
jo
xchg
mov
mov
xchg
jge
inc
mov
loopne
inc
outsl
mov
fucom
mov
and
fldt
sbb
loop
inc
dec
pminsw
outsl
std
mov
fisubs
das
imul
push
mov
in
xchg
aas
mov
mov
mov
sbb
or
ret
xorb
jp
sub
sbb
push
xchg
add
inc
outsb
sbb
add
dec
cld
test
jecxz
jle
out
ficompl
icebp
jle
mov
aad
ficomps
sar
push
mov
loope
movsl
out
stos
movsl
mov
or
rorb
mov
pop
in
inc
movsl
gs
mov
and
test
out
xor
in
in
jb
sbb
and
push
xor
pop
loop
popa
pop
int3
pushf
jg
test
dec
xchg
fildll
add
dec
shll
cmp
aaa
push
ljmp
rolb
inc
inc
movsl
arpl
rcrl
shrb
or
xor
dec
ror
adc
out
mov
cmp
aad
shrl
adc
in
iret
jl
sbb
pusha
mov
fcompl
lea
mov
cltd
insl
test
jge
mov
leave
shr
jbe
fcmove
add
mov
push
xchg
xor
ds
push
xchg
lcall
ret
scas
lret
jb
mov
sar
add
out
xlat
xchg
inc
xchg
push
add
out
push
aaa
dec
mov
call
in
mov
xchg
cmp
inc
mov
lret
scas
xchg
and
inc
insl
xchg
aaa
daa
or
and
or
dec
mov
dec
repnz
jg
nop
push
lods
jmp
pop
movsl
pop
in
cs
lods
dec
lea
das
or
stos
pop
and
nop
add
bound
shl
stos
sahf
add
mov
lods
enter
fidivs
js
fisubrs
mov
xor
push
lock
xchg
loop
cld
xchg
add
add
ficomps
lods
pushf
loop
push
in
ficoms
cli
mov
out
adc
aas
jbe
scas
call
cmp
jo
jae
into
scas
fcomi
das
out
leave
cmp
xchg
lahf
out
and
inc
mov
mov
movsl
sbb
dec
je
clc
cmpl
xor
fldt
notb
lods
outsl
jl
mov
cld
nop
dec
inc
mov
sbb
cmp
cmp
int
aas
enter
mov
out
jo
aas
add
pop
and
outsb
in
pusha
xor
jno
mov
arpl
mov
cmp
jne
mov
gs
into
arpl
fyl2x
sub
dec
mov
roll
or
and
cmp
bound
shrl
mov
cltd
inc
movsb
jb
and
pmullw
push
pop
sbb
mov
sbb
cmp
and
arpl
cmpsb
movsb
movsb
or
iret
cmpsb
and
hlt
lret
sub
pusha
cmpsl
popf
pop
lcall
int
or
jae
push
and
push
popf
out
xor
arpl
arpl
mov
mov
ror
xchg
std
jns
sub
xor
push
jmp
in
out
ds
incb
fbstp
jl
xlat
jmp
sbb
jecxz
test
cwtl
out
cli
pop
pop
xor
cli
icebp
adc
mov
psraw
sbb
mov
push
rolb
out
jl
jno
inc
es
aaa
out
xlat
les
je
push
shlb
jg
in
push
filds
rolb
or
sbbb
cmp
popa
icebp
int
fsubrl
and
mov
mov
pop
movsl
xlat
dec
add
test
fcomip
pop
mov
out
repz
ljmp
es
rcr
pop
pusha
mov
bound
in
pushf
int
adc
int
and
mov
aas
mov
push
xor
test
mov
dec
out
push
pop
or
push
out
es
mov
jl
out
mov
imul
ss
sbb
adc
push
push
or
push
sti
inc
gs
fimuls
repnz
test
sub
xor
pop
pop
testb
cld
pop
xchg
loop
cmpsb
jnp
mov
shlb
cmp
cmp
hlt
stc
lret
adc
sar
stc
fldenv
testl
and
repnz
stos
and
or
dec
dec
dec
pop
mov
mov
test
mov
add
out
rorl
fisubrl
push
mov
cmpb
dec
and
js
add
pop
mov
popa
dec
xchg
cmovnp
xor
imul
jg
sbb
mov
loope
mov
pop
xchg
pop
daa
sti
ret
adc
pop
fdivrl
mov
or
lcall
lret
xchg
add
push
dec
push
jo
mov
call
cmp
or
call
nop
repz
dec
sub
ret
call
loop
xor
dec
test
out
je
lcall
dec
test
out
or
xor
mov
in
xchg
aaa
mov
lods
out
daa
inc
mov
ljmp
push
scas
test
lahf
icebp
mov
xchg
in
mov
mov
push
movsb
shlb
leave
das
int3
dec
ror
xlat
fdivr
xor
mov
inc
imul
pop
jecxz
add
mov
push
cld
lods
mull
movsb
cmp
pop
test
hlt
orb
sarb
mov
mov
fs
and
pop
jle
testl
adc
jo
adc
xor
or
sbbl
int
xchg
lea
outsb
sub
lods
pop
jmp
pop
mov
out
jne
fisubs
in
and
xor
in
mov
xchg
pop
out
lds
fwait
xor
scas
adc
xchg
dec
inc
and
pop
std
sbb
rorl
sbb
sub
shrb
lea
movsl
fldenv
jno
in
popa
cmpsb
bound
call
fsubrl
push
mov
push
sbb
ret
mov
fadd
in
and
sub
xlat
call
fidivs
addb
sub
and
cs
ss
push
jmpw
test
xchg
ror
sub
push
hlt
cmp
mov
pop
stc
lods
or
nop
cmc
dec
test
fidivrl
loopne
inc
fsubr
cmpsb
jae
rcll
jmp
cmp
addr16
sub
and
out
xchg
dec
pop
inc
lret
pop
out
test
sub
lret
faddp
or
rcrb
push
cmp
inc
out
push
add
dec
ds
or
out
mov
sbb
rcrl
hlt
in
incb
scas
mov
mov
and
lret
in
pushf
sbb
cmp
pop
into
test
jg
loope
inc
sbb
jecxz
push
loop
xchg
add
add
aam
cmp
ljmp
xchg
sbb
aam
xor
push
fists
rorb
or
stc
adc
pop
stc
xchg
inc
ds
cmp
fwait
push
popl
inc
push
aam
mov
push
lret
xor
ja
ficomps
cli
pop
or
mov
pop
dec
bound
lock
pop
xor
add
jecxz
or
cmp
mov
mov
push
xor
notb
insb
push
gs
add
mov
icebp
add
mulb
cmp
pop
push
sub
stc
inc
cmpsl
call
cmp
mov
mov
adc
inc
dec
sbb
push
scas
test
mov
xor
test
xor
dec
inc
jg
push
mov
pop
enter
or
push
xchg
call
push
imul
outsb
ljmp
pusha
fadd
dec
xor
dec
jo
out
mov
add
jmp
insl
sbb
je
sbb
jne
add
mov
sti
icebp
dec
sbb
adc
mov
std
fisubl
jae
jno
hlt
add
in
pop
icebp
sub
inc
push
and
pop
mov
repz
clc
adc
push
rcrb
nop
arpl
mov
dec
pushf
test
enter
movsl
or
cwtl
dec
pop
adc
push
iret
push
mov
sahf
and
sbb
nop
inc
xchg
int3
inc
loope
sub
cmp
cmpsb
loopne
dec
sbb
push
call
in
and
xchg
cmp
sub
and
loop
jp
push
xor
cmp
mov
xchg
mov
pop
dec
mov
sub
out
les
lcall
push
or
ret
mov
dec
in
sbb
cmpsb
les
add
push
mov
pop
mov
jp
mov
inc
negl
hlt
in
aad
or
fsubs
and
add
cmp
and
inc
andl
ja
or
icebp
fs
jbe
out
ret
dec
jnp
hlt
inc
inc
cmpsb
lcall
aaa
cmp
add
push
sti
pop
aad
stos
cmp
aaa
or
jbe
dec
negb
bnd
out
xorb
jmp
jnp
pop
sbb
add
outsb
xor
inc
mov
scas
fcoml
pop
sub
lcall
xchg
xchg
mov
lods
jnp
arpl
sbb
jne
xlat
rcrl
mov
mov
cmp
mov
lea
cmp
fisubrs
rcrb
cmp
jne
out
jl
dec
xor
push
ss
and
shlb
aad
adc
jecxz
push
loope
clc
or
ljmp
lret
push
jg
ljmp
bound
std
cld
subl
test
jmp
xchg
xchg
jae
cmp
jno
mov
jecxz
dec
cmpl
cmp
push
mov
in
push
es
push
imul
jp
arpl
call
aam
lds
loope
xor
add
pop
cmp
in
jmp
jl
mov
mov
pop
add
jecxz
pop
loope
repnz
add
hlt
xor
sbb
pop
mov
dec
aam
jl
jns
int3
jp
in
adc
jp
adc
dec
jmp
stos
and
test
dec
jno
movsl
nop
shlb
out
imul
jge
mov
je
or
fcom
inc
add
lea
mov
adc
mov
dec
jmp
or
out
or
arpl
ficoms
icebp
xchg
inc
adc
js
jp
and
inc
xor
jno
mov
cltd
aas
mov
mov
pop
repz
sub
nop
fwait
in
js
add
adcb
lock
push
or
aaa
xchg
adc
rcrl
scas
movl
pushf
flds
popa
xor
or
outsb
test
inc
or
xor
cmpsl
cmp
shlb
addr16
fildl
es
mov
cmpsl
out
insb
aam
stos
loopne
inc
cmp
movsb
push
popf
in
xor
in
sahf
in
dec
imul
and
sub
xor
loop
aas
call
or
mov
push
adcb
lret
push
loopne
mov
ret
pop
orb
xchg
cmc
pop
pop
and
ds
xchg
shl
cs
mov
aas
out
mov
mov
ret
dec
rorl
pop
repz
sub
cmp
ds
mov
out
gs
inc
arpl
lea
fstp
mov
cmp
push
mov
sbb
vpaddb
std
sub
xchg
pop
pop
decb
push
mov
xor
out
inc
fdivr
cmpsb
aaa
mov
repnz
push
orl
cmp
sti
mov
cmpsb
add
jnp
jecxz
inc
jmp
mov
daa
add
cmp
push
popa
je
out
jge
fcmovnu
mov
movsb
ret
sub
inc
adc
jns
inc
jg
ret
inc
popf
mov
mov
int
orl
pop
rol
mov
push
push
xor
ret
jl
add
xor
aas
mov
imul
or
aaa
inc
es
fsubl
xlat
mov
inc
or
pop
adc
cmp
arpl
jmp
pusha
push
lcall
xor
sub
pop
add
lea
sub
jge
dec
js
ret
mov
bound
push
push
fiadds
push
and
jmp
jo
jmp
arpl
ficoml
pusha
ljmp
frstor
lret
adc
lahf
nop
imul
cmp
and
aaa
out
stos
mov
mov
int3
xor
daa
push
iret
fisubs
hlt
divl
mov
sbb
push
mov
stc
mov
dec
jbe
pop
outsb
pop
mov
push
enter
pop
sub
inc
add
sbb
js
xchg
or
cli
and
add
mov
mov
loopne
xchg
popf
jg
jmp
subb
scas
pop
repnz
out
or
sub
sbb
call
jns
mov
ret
sbb
movsl
int3
imul
rorl
call
repnz
mov
aam
adc
xchg
adcl
mov
dec
repz
mov
mov
shlb
arpl
rcrb
fcompl
sbb
cli
or
cld
pop
subb
push
ljmp
jns
pop
sahf
adc
and
pop
data16
jg
jle
in
ret
cmpsl
lcall
ljmp
ljmp
bound
clc
stc
test
xchg
andl
push
imul
cmp
xor
aas
rorl
xchg
ja
add
test
adc
cmp
sti
je
int3
jns
mov
out
imul
jno
das
ljmp
lds
orb
xchg
insl
lret
mov
aam
cwtl
fsts
sub
xlat
lea
and
xor
xchg
inc
aaa
stc
adc
or
xchg
aad
dec
enter
je
enter
xlat
aam
mov
xchg
test
add
dec
repz
add
fwait
jo
inc
sub
pop
test
sub
or
xor
jb
jl
cmp
push
push
xchg
pop
imul
jne
pop
mul
stos
and
jbe
or
lret
jno
fnstsw
xchg
scas
push
lock
pop
ds
fistps
xor
push
add
add
scas
pop
pop
jp
cmp
cmp
adc
xor
outsl
fcompl
pop
call
sbb
lock
mov
mov
dec
sub
xchg
inc
stos
xor
sti
mov
pop
mov
pop
jne
movl
arpl
lret
ds
jne
xor
ds
jmp
and
mov
popf
mov
sbb
repnz
sbb
cs
nop
int
loopne
pop
cmpsl
or
xlat
fnstenv
lods
inc
inc
sub
inc
addr16
adc
add
pop
fisttpl
scas
sbb
push
mov
fldl
fucomip
subl
and
mov
jns
sbb
call
dec
xchg
test
fimull
push
add
aaa
cld
ss
cmp
xlat
mov
lret
xor
add
adc
mov
push
xchg
mov
loop
es
push
adc
cmp
jo
cmp
cmpsl
sahf
cmp
outsb
push
mov
add
adc
mov
xchg
icebp
inc
movsl
inc
add
jne
lret
pop
jne
push
xchg
movsb
loop
aad
push
push
or
xchg
insb
mov
lcall
sub
je
aas
xor
clc
std
inc
rolb
sbb
cmp
fmuls
adc
pop
cld
add
mov
nop
jle
mov
adc
fbld
flds
push
ficoms
dec
je
pop
add
pop
jns
mov
mov
xor
jb
shll
mov
outsl
data16
or
mov
sahf
insb
jge
push
xchg
sahf
out
mov
arpl
sbb
or
icebp
dec
or
outsb
pop
xor
and
push
mov
xor
fs
inc
sarl
mov
pop
leave
xchg
pop
push
sub
aas
test
loopne
ficoms
jle
or
sbb
fwait
lret
mov
mov
jno
mov
pushf
rolb
and
xchg
fcmovu
xchg
hlt
jbe
cmp
jno
dec
dec
or
or
lret
out
jo
dec
imul
iret
jo
lea
cmp
popf
xchg
push
pop
xor
xchg
xchg
sub
add
scas
sbb
add
xchg
jle
sub
gs
mov
mov
adc
in
hlt
ss
imull
or
xor
sbb
pop
sub
cwtl
mov
sbb
cmp
cmp
mov
lea
stos
mov
jl
pusha
mov
xor
nop
repz
pop
adc
sarb
scas
inc
pop
je
je
aas
inc
mov
jbe
insl
mov
movsl
or
rcll
jmp
dec
sub
push
notb
xchg
jmp
ja
roll
int
jg
mov
fcoms
push
lcall
popa
insb
icebp
add
dec
cmp
mov
insb
ds
faddl
sub
cmc
in
inc
pop
inc
ret
push
inc
fs
mov
pop
pop
movsl
popf
ja
les
or
jmp
jne
ret
enter
mov
insl
sbb
repnz
imull
fadds
mov
imul
cmp
leave
sbb
dec
and
scas
neg
int3
jb
outsb
mov
push
fstp
cmp
mov
gs
and
outsl
add
push
call
fdivrl
jno
pop
jg
push
out
xor
daa
dec
sar
fwait
insb
xchg
out
sti
jp
ja
ss
xchg
cmp
dec
scas
sub
push
call
cs
mov
roll
lea
mov
aas
xor
test
lock
xchg
pusha
jns
pop
xor
pop
ljmp
dec
lock
mov
cmpsb
dec
mov
inc
mov
jnp
lods
mov
cmpsl
jne
shrl
jne
sub
mov
pop
cmp
sbb
cmp
mov
xlat
push
arpl
dec
jnp
or
negl
add
sub
mov
push
lods
js
pushf
push
sbb
fidivrs
std
cmc
push
lea
aas
cmp
push
push
negl
lock
mov
xlat
sbb
or
cmp
repz
push
test
adc
rcrl
sub
dec
dec
cmp
cmpsl
pop
call
pop
sbb
faddp
jmp
lret
aas
imul
push
xorb
mov
fcompl
sub
mov
push
sbb
and
or
inc
jp
roll
movsl
imul
cmp
es
inc
ja
jle
cltd
xor
cmp
inc
enter
adc
popf
lock
pop
leave
pop
or
sbb
pop
rcll
sahf
xorb
imul
jne
xor
out
mov
cmp
push
shl
into
jae
inc
or
mov
mov
int3
adc
push
sub
or
mov
icebp
adc
pop
cmpsl
lret
cmpsl
sbb
xchg
andl
mov
or
dec
xlat
fs
jnp
mov
sub
jno
int3
jb
dec
lret
outsl
cltd
xchg
cltd
mov
lods
and
and
ss
sahf
jg
or
sbb
shll
add
cmp
jmp
ds
and
and
pop
rcrl
cmp
pop
push
pop
push
mov
jne
jb
pop
jp
mov
dec
or
sbb
ret
cmp
sbb
test
outsb
imul
aas
movsb
aas
cli
stos
div
xchg
mov
or
xor
test
push
mov
xor
idivb
jo
xchg
xchg
pop
fnstcw
pop
mov
icebp
sarl
insl
les
add
insl
aas
adc
es
daa
mov
jae
test
fs
pop
sbb
bound
dec
aas
and
mov
sub
ljmp
insl
lods
sub
and
js
int
mov
fstl
dec
adc
pop
int
mov
mov
mov
outsb
ljmp
push
loop
cmpsl
lahf
out
pop
fldenv
sub
pusha
stc
cltd
cwtl
mov
imul
add
dec
call
out
sti
mov
loope
loop
cmp
data16
fs
cmp
cli
xlat
inc
lahf
hlt
stos
std
mov
andl
jae
outsl
mov
mov
testb
sbb
inc
pusha
pop
push
rcrl
xor
mov
mov
das
mov
das
insl
fwait
xchg
ficomps
mov
fwait
insb
hlt
sbbl
ficoml
adc
add
cmp
gs
fimull
xchg
scas
cld
mov
test
push
inc
inc
mov
inc
insl
push
jae
fbld
in
ja
push
mov
in
jb
jnp
xor
jge
test
cmpsb
cmp
sbb
inc
dec
in
jg
xor
push
pop
aam
in
sbb
mov
or
inc
aaa
mov
in
inc
fs
xlat
pop
mov
cmc
and
clc
adc
xchg
aam
adc
ds
adc
xor
shl
xor
nop
xchg
cmp
jp
iret
das
pushf
mov
jb
mov
cmp
push
xchg
pushf
push
shrb
fwait
add
jge
lret
add
in
ret
add
test
lea
or
and
mov
dec
popf
shll
in
cltd
sub
test
jno
je
fidivrl
fstl
gs
aam
adc
xchg
repz
movsb
add
jecxz
lods
out
aas
cmp
gs
jo
sbb
nop
mov
push
cmc
dec
add
pop
xor
or
mov
or
xchg
out
fwait
dec
jle
sub
lea
inc
cmp
mov
lret
ja
inc
or
pop
lret
mov
stos
out
es
push
sbb
test
adc
pop
inc
add
scas
rorl
fs
sub
int3
out
movsb
int
mov
add
pop
adc
adc
shll
mov
inc
inc
jp
mov
xorb
outsl
movsb
mov
subl
cs
fucomp
inc
popf
or
mov
mov
cmp
mov
inc
scas
pop
add
sbb
mov
lret
jns
popf
cli
and
out
adc
xchg
test
jb
mov
mov
cltd
cmc
lahf
cmp
cwtl
xor
orb
dec
leave
xchg
push
divb
xor
cmp
imul
pop
or
fadds
push
das
nop
mov
inc
sti
jle
xchg
mov
xlat
clc
das
dec
dec
into
xor
sub
bound
imul
pop
test
xchg
add
hlt
or
mov
pop
das
movsb
imul
das
push
shll
xchg
mov
mov
mov
add
cmp
hlt
mov
adcl
out
shll
sbb
out
iret
rcr
xchg
outsb
jo
ds
pop
mov
fisttpl
dec
pop
mov
daa
in
mov
inc
sbb
xacquire
loopne
rolb
inc
xchg
dec
jno
mov
xchg
jg
pop
xlat
nop
inc
or
arpl
sbb
sti
cmpsl
push
outsl
out
adc
daa
adc
insb
movsl
es
cmc
decl
in
outsl
out
dec
pop
xor
icebp
dec
loope
call
cmp
xor
out
inc
hlt
mov
ret
jp
mov
clc
jo
lds
sub
cwtl
mov
fbstp
inc
pop
ret
fnstenv
and
shrb
jnp
push
push
add
sub
loope
lcall
pushf
roll
rol
out
insb
xchg
fcoms
pop
adc
cmpsl
pop
push
jno
inc
popf
jp
xchg
mov
and
push
sbb
push
xchg
mov
notl
dec
jmp
jne
dec
imul
mov
jecxz
mov
push
and
dec
inc
inc
mov
or
xchg
push
or
cmp
mov
jmp
jnp
inc
ds
mov
push
out
sbb
addr16
dec
push
xor
cwtl
cltd
es
pop
cli
cmp
out
and
mov
mov
fsubs
aam
xor
lcall
cmp
xor
sbb
out
fimull
fstl
cmc
or
out
mov
bound
or
jbe
mov
lret
xchg
gs
in
fstps
xchg
xchg
hlt
jne
call
dec
mov
jnp
jmp
out
in
in
mov
xor
mov
int3
xor
pop
pop
inc
fsub
subl
iret
mov
bound
or
jmp
insb
aaa
push
sarb
and
rorl
imul
push
cmp
shlb
out
enter
loop
in
fs
iret
pop
xchg
dec
gs
mov
xor
jmp
sub
stc
mov
movsl
addl
inc
out
aad
pop
pop
je
pop
and
test
mov
decl
mov
jp
add
sub
mov
mov
jno
mov
xchg
cmp
xor
repz
pop
xor
js
aas
dec
inc
cmpsb
test
int
pop
push
stc
adc
loopne
adc
ret
lods
inc
and
jae
cmpsb
pop
dec
sub
or
xchg
rcll
lret
push
xor
les
incl
pop
xchg
fnstsw
lds
mov
pop
mov
bound
cmpsl
pushf
jecxz
pop
add
popf
adc
test
jo
dec
cmc
lods
xchg
xlat
adc
add
sbbl
div
or
decl
dec
sub
ret
pushf
test
xchg
sub
inc
shrb
jae
pop
push
mov
mov
test
fdivl
fs
dec
xchg
pushf
lea
shll
or
pop
and
jo
stos
push
dec
mov
out
mov
or
inc
xor
cmp
jnp
fsubr
leave
or
mov
push
popf
adc
test
test
sbb
and
js
jp
clc
dec
pop
mov
adc
adc
ficomps
xchg
mov
pop
inc
int
dec
fwait
in
cmp
and
fsub
sbb
mov
shrb
test
roll
mov
jmp
shl
sahf
ss
mov
pushf
push
pop
fwait
das
std
xor
mov
inc
lcallw
es
pop
add
xchg
pminub
xlat
jne
stc
push
adc
sbb
pop
icebp
pushf
cmp
imul
popf
je
push
jge
scas
int3
repz
sbb
push
and
neg
xchg
and
xchg
ss
dec
out
dec
adc
or
lcall
into
mov
sub
mov
outsl
mov
mov
jb
pop
movzwl
mov
xchg
mov
adc
adc
cltd
push
push
cmp
xchg
xor
mov
add
cmp
mov
loopne
in
sahf
cmp
sub
out
push
mov
jp
shlb
pop
push
cmp
xchg
xchg
fsubrp
aam
mov
out
and
adc
and
mov
in
inc
xchg
push
lret
fsts
insl
test
jle
sub
add
push
push
inc
sbb
test
vpunpckhdq
dec
adc
cmp
mov
data16
bound
ret
fwait
xchg
mov
cmp
fdiv
add
orb
rolb
es
sbb
adc
std
shll
ffree
outsl
cld
cmp
dec
ficomps
enter
mov
sub
test
aaa
push
in
cmpsb
loope
add
mov
pop
push
jmp
cmp
imul
sbb
lds
int3
pop
and
inc
cld
jnp
call
imul
imul
jle
mov
jae
push
insb
out
pop
add
jl
inc
mov
mov
mov
inc
adc
adc
loop
add
sbbl
pop
adc
inc
scas
adc
add
xor
mov
clc
sbb
testb
scas
clc
pop
icebp
outsl
fmulp
outsb
leave
std
pop
ljmp
fisubrs
cmp
add
add
into
and
mov
inc
xchg
movsb
ja
fcom
cltd
cmpsl
xor
xchg
sub
icebp
sub
add
insl
push
mov
sarl
pop
jl
arpl
sbb
inc
mov
sarl
in
dec
pop
xchg
mulb
xchg
dec
dec
popa
push
jg
cltd
outsl
das
push
das
adc
pushf
imul
loop
dec
imul
push
adc
inc
push
mov
push
repz
ficomps
mov
jecxz
outsl
aam
addr16
scas
lcall
push
push
popa
mov
das
mov
pop
mov
jbe
or
jmp
mov
data16
cltd
test
mov
inc
and
mov
fisttpll
mov
daa
punpckldq
icebp
lahf
jmp
mov
pop
mov
neg
cmp
ss
sahf
bound
push
popa
dec
fidivl
aaa
mov
mov
out
push
jno
les
insl
and
inc
sbb
sarl
sbb
int
out
int3
cwtl
xchg
stc
jp
sub
mov
sbb
push
hlt
add
mov
mov
dec
mov
add
mov
xor
lods
pop
sbb
inc
fcomi
xchg
mov
enter
pop
aam
jns
repz
adc
fldenv
int
xor
xor
pop
rcr
shrb
stos
into
loopne
pop
repnz
stos
mov
sub
mov
cmp
clc
lods
pop
test
xchg
push
test
icebp
sub
push
cmp
pop
aam
insb
test
pushf
pop
filds
js
inc
mov
div
leave
aam
jp
add
mov
xchg
xchg
add
adc
and
dec
mov
mov
int3
add
pop
mov
add
roll
push
orl
cmp
dec
mov
out
jno,pt
andl
mov
mov
xor
dec
xor
faddl
std
test
stc
cld
aaa
mov
xor
out
mov
push
hlt
sbb
sbb
adc
das
add
mov
mov
dec
cltd
pop
mov
sar
or
jno
push
cmpsb
test
xor
das
rep
cmpl
jg
cwtl
cmp
mov
add
adc
mov
iret
movsl
mov
loope
inc
gs
mov
mov
pop
es
lds
push
aam
jg
mov
push
dec
mov
xchg
dec
mov
insb
or
mov
ja
pop
mov
xchg
lods
jnp
pop
paddd
fdivs
lds
mov
bound
sbb
imul
mov
dec
call
inc
loope
out
mov
sbb
mov
jbe
bound
sub
lock
dec
jnp
dec
aaa
movsl
imul
scas
mov
out
fisttpl
fnsave
rcll
out
rcrb
sub
mov
adc
or
mov
out
mov
insb
lods
lea
mov
jp
mov
sbb
and
fwait
and
mov
jae
jne
xchg
aaa
ret
cli
hlt
sbb
inc
lcall
popa
add
sub
aam
subl
jne
xor
inc
outsb
mov
imull
xchg
sub
movsl
popa
dec
popaw
adc
popf
xor
sub
inc
sub
xor
or
je
or
inc
iret
inc
pop
sbb
xchg
stos
push
add
adc
ss
inc
sbb
popf
mov
pop
popf
push
sub
movsl
sub
pop
movsb
aaa
es
aaa
pop
sub
int
inc
cmp
sub
stos
jae
fsubrp
add
dec
fstpt
sti
mov
repnz
jnp
add
cmpsl
frstor
aam
mov
lcall
xchg
cmp
inc
mov
movsl
push
or
pop
sar
mov
mov
add
sbb
js
jae
push
lock
das
add
inc
fmul
outsb
ja
orl
jmp
in
popa
andb
cli
add
mov
xor
sarl
enter
xlat
jge
add
loopne
out
bound
pop
mov
ret
fisubrs
push
icebp
outsl
jb
add
mov
and
xchg
and
pop
cmp
and
in
rcll
sbb
jmp
and
fs
push
sahf
scas
jns
push
jo
jne
enter
cwtl
fildl
push
out
stc
xlat
shlb
jns
jno
pop
out
xor
jl
mov
int3
jno
jns
ljmp
xor
nop
aaa
inc
mov
mov
pminsw
push
es
jo
sub
dec
lcall
sbb
cmp
pop
lret
push
lds
and
jg
es
jl
cmp
call
push
add
jno
sub
inc
add
add
sbb
dec
cs
sub
pop
fstl
xchg
mov
cmp
dec
add
or
hlt
add
out
xchg
jno
sbb
icebp
shll
lret
ficoms
ja
xor
lcall
pop
leave
mov
add
repnz
adcb
scas
popa
adc
repz
mov
lods
sbb
mov
xchg
leave
sub
leave
gs
cld
jb
data16
inc
lret
dec
fisttpll
popa
dec
movsb
xor
mov
into
ljmp
roll
jmp
jle
push
daa
sbb
adc
insl
clc
add
loope
fnstsw
pop
xchg
jne
cs
aam
lret
mov
in
leave
push
sub
sub
cli
lods
cwtl
jmp
add
scas
sub
jne
add
cwtl
mov
stos
mov
orl
and
adc
adc
inc
in
sub
andb
mov
in
push
stos
and
pop
enter
les
push
iret
out
pushf
jmp
in
sub
push
push
mov
roll
sbbl
aad
test
sarb
mov
imull
and
pop
clc
pusha
push
inc
jmp
aaa
or
mov
dec
stc
ret
or
mov
mov
idivb
enter
sti
inc
sub
in
inc
mov
notb
sbb
add
inc
lahf
xchg
cmc
sti
xchg
fidivl
add
sub
test
orl
adc
popf
xchg
es
xchg
dec
xchg
mov
lret
fs
xchg
nop
test
jg
pusha
lock
jp
sbb
sbb
inc
insl
in
xchg
push
pop
adc
cmpsl
sub
push
mov
ret
gs
jnp
mov
adc
cmp
test
inc
aaa
pop
inc
inc
sti
inc
rcrb
mov
sub
sti
fs
dec
push
xorb
sbb
cmp
mov
mov
adc
pop
xor
testl
pop
inc
and
mov
adc
fs
jmp
mov
mov
sbb
sub
mov
test
adc
push
mov
movsb
pop
sbbb
sbb
icebp
mov
into
jmp
gs
jl
sub
pop
sub
iret
push
ss
sti
cwtl
dec
jg
cwtl
cmpsl
xchg
cmpsb
add
clc
fsubrs
sub
mov
scas
push
inc
pop
mov
add
sub
fistps
test
hlt
test
and
fmul
fcmovb
mov
adc
rcl
pcmpeqb
dec
mov
jo
cmp
push
lret
cmp
mov
sbb
aas
cli
popa
arpl
jecxz
mov
sbb
clc
dec
out
xor
lcall
ret
fcmovnbe
and
and
xchg
andl
insl
sbb
inc
scas
or
icebp
insl
pop
into
or
and
out
addl
shlb
push
jae
pusha
pop
sbb
or
pcmpgtw
repnz
mov
or
loopne
push
loope
rorl
cmp
mov
dec
xorb
dec
add
push
jne
aas
sbb
xor
pop
mov
ret
movsb
pop
repnz
dec
sbb
fildll
inc
lock
pusha
mov
mov
data16
sub
jg
cltd
inc
imul
push
lret
mov
adc
xchg
push
push
dec
notl
fs
sub
push
pop
xchg
push
mov
xlat
fstps
fs
push
divb
stos
cmp
andb
xchg
add
loope
dec
or
fdivl
and
lds
push
mov
insl
jp
enter
cmp
sub
subb
jg
dec
je
fsubl
aam
test
pushl
dec
out
ss
insb
call
mov
jno
fs
in
cmp
test
shll
out
out
test
fmuls
xchg
or
idivl
movsl
jp
and
mov
stos
cmpsl
gs
adc
aaa
js
adc
adc
bound
dec
fistl
add
mov
push
cmpsb
out
sbb
xchg
insl
or
out
dec
outsl
push
mov
inc
mov
adc
ljmp
pushf
push
xor
int3
xchg
imul
add
push
movsl
sub
ljmp
dec
xchg
or
std
iret
cmp
call
arpl
push
sti
or
cmpsl
jnp
rorl
lea
in
push
fimull
cmp
push
jmp
or
lods
movsb
shl
sub
insb
jecxz
cs
inc
mov
adc
or
add
ret
cli
and
dec
jb
dec
push
movsb
push
jle
cmp
pop
fildll
dec
xor
mov
mov
loopne
and
push
push
xorl
cmp
addr16
xor
clc
pop
jmp
mov
cltd
int
dec
mov
mov
rcrb
sbb
lret
add
add
xchg
push
mov
mov
cmp
jo
ret
dec
popa
or
popa
sbb
cld
std
imul
jae
sbb
push
les
add
and
or
jne,pn
leave
test
js
mov
and
push
loope
mulb
xor
pop
cmpsl
cltd
or
xor
inc
cmpsl
out
adc
xchg
rorb
aaa
mov
aaa
mov
repz
sub
out
pop
adc
stos
insl
pop
hlt
lcall
jmp
popa
pop
ret
and
pop
subb
push
jbe
adc
pushf
dec
js
mov
push
sub
mov
pop
inc
leave
jno,pt
fcoms
outsl
adc
movsb
in
inc
jnp
dec
ja
push
in
imul
movsl
sahf
pop
mov
or
lock
xor
imul
inc
inc
inc
jp
leave
pop
loopne
jnp
stos
mov
pop
in
inc
out
lahf
inc
adc
xchg
out
popa
sub
mov
je
mov
cmp
xor
aaa
idiv
aam
adc
dec
stos
pop
mov
mov
in
dec
xlat
dec
sub
lods
xchg
mov
lock
jmp
cmp
sbb
mov
int
scas
jae
fcomip
mov
out
mov
rorb
jno
mov
cmp
aam
mov
cmp
cld
add
jbe
fsub
xchg
pop
and
pop
sbb
dec
pop
add
stos
mov
push
jae
fs
cmp
mov
pop
lret
xlat
mov
jns
mov
adc
insb
xchg
sbb
jno
pop
fldenv
movntq
filds
mov
cmpsb
dec
mov
dec
scas
pop
sub
jl
sbb
leave
out
sbb
push
pop
mov
sbb
or
fcompl
lock
jg
xchg
outsl
xchg
ljmp
leave
lock
test
sub
mov
mov
rcll
stos
das
hlt
fdivp
in
enter
cmp
loopne
dec
enter
out
ret
mov
jbe
push
fs
fisttpll
sbbb
xor
mov
jp
or
imul
bound
jnp
or
fwait
cld
mov
and
dec
mov
jmp
add
inc
fcmovnb
xor
add
aad
pop
enter
or
xor
in
dec
fisubrs
fadds
sub
mov
out
xor
dec
dec
std
ds
mov
push
ja
sbb
std
mov
arpl
or
jl
push
stc
call
leave
mov
ljmp
jnp
and
pop
sahf
imul
ret
fidivl
shl
or
movsb
mov
fildl
xchg
daa
stos
shrb
cvttps2pi
int
lds
scas
sub
mov
fildll
inc
cmp
mov
insl
popa
faddl
push
gs
push
mov
push
push
in
and
inc
fidivl
ret
inc
mov
stos
leave
leave
shl
das
adc
xchg
ljmp
mov
shlb
out
pushf
xor
jge
loop
lret
aam
or
fwait
std
shll
adc
jnp
aas
into
pushf
popf
or
mov
xchg
js
test
lcallw
scas
insl
cmc
push
inc
mov
in
cs
add
xor
inc
pop
dec
dec
xorb
sub
dec
daa
add
bound
and
mov
arpl
add
mov
leave
sbb
mov
js
jp
fisubs
cmc
cmpsb
push
pop
dec
cmp
imul
cmp
loopne
repnz
pop
fwait
adc
pop
cmpsl
lock
mov
inc
dec
jp
sub
xor
mov
push
inc
enter
jne
jge
cs
push
pop
cwtl
mov
loop
adc
mov
push
dec
cmpsb
mov
or
out
cwtl
lret
mov
xchg
les
lods
and
cmp
lea
mov
out
push
scas
inc
jmp
dec
cmp
aam
cmpl
mov
cmp
mov
test
loopne
mov
push
push
jge
and
cmp
pop
mov
loopne
imul
sub
xchg
imul
lea
inc
adc
repnz
and
jne
mov
or
outsl
je
and
imul
cmpl
rorl
mov
pop
xor
mov
push
das
sub
dec
sbb
lcall
iret
out
mov
addr16
lcall
movsb
push
xchg
popf
out
insl
fisubl
or
in
mov
jnp
cmp
enter
fnsave
mov
mov
mov
mov
add
push
fcmove
inc
adc
adc
or
loope
fistpll
pop
xor
adcl
mov
popa
out
dec
push
ss
inc
pop
gs
jns
es
lods
dec
sarb
test
mov
xor
add
insb
add
jae
fucomi
jl
hlt
xchg
in
dec
repz
add
mov
jecxz
cmp
imul
movsl
push
mov
arpl
and
das
adc
lahf
jb
shll
mov
pop
scas
shll
test
xchg
loope
cltd
scas
cmc
repz
push
mov
test
mov
mov
jns
fstpt
mov
lahf
mov
push
adc
sub
adc
mov
or
push
xor
cmpsl
cld
jmp
enter
popa
jno
adc
aaa
cld
mov
inc
dec
in
jmp
sti
stos
aam
int
mov
or
push
lret
xor
xchg
push
in
dec
enter
pop
mov
idiv
inc
adc
ret
aam
sbb
int
test
mov
stos
les
decl
scas
in
or
lods
insb
push
movsb
out
pop
cli
fs
push
xor
xchg
shrl
aam
out
mov
int
sub
and
sahf
push
int3
jle
sub
or
sti
into
mov
dec
mov
adc
cmc
pop
and
mov
lea
jbe
outsl
pusha
icebp
loop
mov
lods
jne
call
push
pushf
lret
repnz
push
lods
stc
dec
les
or
popf
daa
mov
inc
pop
repnz
jecxz
hlt
stos
adc
push
jecxz
jbe
sub
pop
cmc
mov
push
movl
aam
jns
enter
xchg
sub
mov
push
jnp
lods
call
xor
test
pop
loop
jge
xchg
popa
jecxz
jge
fbstp
scas
xor
sarl
shlb
rcl
out
pop
lods
mov
aas
dec
lret
fwait
loope
sbb
popa
test
popa
movsb
in
mov
adc
xor
outsb
insl
adc
call
inc
and
insl
call
xor
mov
pushf
ja
incl
nop
fldcw
xchg
push
jl
iret
movsb
cltd
dec
push
xor
mov
pop
push
xchg
mov
rorl
lods
jecxz
inc
jns
repnz
add
scas
jb
and
repz
dec
sbb
movsl
aam
push
stos
mov
fnsave
jecxz
lcall
pop
clc
jl
jbe
lcall
int3
mov
lcall
nop
lahf
pop
fs
mov
hlt
and
sub
xor
sbb
pop
into
imul
and
out
scas
fcomi
jns
daa
in
outsb
icebp
call
in
xchg
jno
xchg
inc
test
sbb
dec
xchg
lods
adc
aas
mov
adc
aas
pop
push
iret
or
cmc
inc
sbb
and
mov
popl
dec
fidivrl
lcall
ret
and
addr16
dec
filds
or
insb
outsb
lahf
fistps
negl
inc
mov
inc
lcall
cmp
ljmp
les
ret
inc
insb
ret
sbb
cmp
pop
stos
jl
lea
insl
dec
mov
pushf
stc
and
stos
jle
roll
and
pop
add
lea
in
pop
arpl
idiv
sbb
mov
stos
mov
cmp
add
xlat
mov
xchg
xor
mov
fsubs
ret
mov
xchg
mov
pop
mov
xchg
lahf
movsl
icebp
divl
xchg
inc
jns
sarb
or
lahf
dec
mov
dec
popa
pop
sahf
out
mov
pop
xlat
jecxz
jnp
fldl
mov
push
es
shr
mov
push
lods
xchg
inc
jne
out
fldl
es
adc
inc
cmc
jg
xchg
popf
or
shl
pushw
dec
inc
xchg
inc
mov
add
push
pop
add
xchg
rolb
loop
and
push
adc
push
xorb
add
cli
jns
in
mov
les
and
and
shr
jecxz
shrl
lret
push
cwtl
add
cmp
xchg
or
loopne
repz
imul
movsl
popf
bnd
lea
xchg
ljmp
mov
cmpsb
fists
jne
pop
sub
hlt
stc
mov
mov
cmp
sub
andl
xlat
test
mov
cli
out
pop
jns
and
aam
adc
cmp
insb
outsl
ja
xchg
push
xchg
pop
movsb
fwait
insl
shll
dec
aaa
pop
xlat
lods
rorb
ror
repz
cmp
mov
leave
mov
or
or
inc
xchg
mov
lock
mov
sbb
jp
ljmp
push
mov
mov
xchg
sbb
pop
movsb
inc
pop
aad
fs
loop
fistpl
cltd
fsubrp
andb
mov
and
cld
mov
lock
sbb
xlat
in
xor
sti
neg
sub
pop
push
in
and
pop
lods
pop
lds
cmp
pop
sub
cwtl
adc
ret
dec
out
mov
mov
sub
inc
shrb
xor
and
push
mov
testl
inc
or
lahf
lea
aad
push
into
push
xchg
clc
adc
lock
cmp
out
pusha
sbb
xchg
shlb
mov
pop
sbbl
pop
mov
jns
pusha
mov
test
fs
bound
xor
dec
and
lods
insb
inc
mov
push
int
mov
pop
repz
mov
push
xor
sbb
flds
inc
jl
xchg
jecxz
sub
mov
loopne
and
sbb
je
ret
mov
xchg
and
adc
out
stc
lds
mov
or
dec
dec
clc
lret
loop
adc
mov
add
mov
sub
sub
sbb
xor
cmp
xchg
cmpsl
cmc
outsl
dec
adc
lahf
or
pop
mov
fnsave
fldenv
pop
lahf
add
xchg
xor
sub
aam
mov
cmp
arpl
int3
enter
pop
cltd
sub
mov
push
fwait
mov
leave
xchg
movl
subb
sti
dec
subl
sbbl
mov
sarl
stos
decb
xchg
push
jmp
rorb
sbbl
ss
insl
jecxz
outsl
mov
sbb
js
xchg
packsswb
mov
pop
out
mov
pop
and
add
int
mov
fs
std
test
fstps
and
fisttps
loopne
push
cli
or
mov
xor
mov
ret
push
pop
andl
add
xchg
ret
std
sbb
mov
xlat
lock
push
btc
inc
enter
sub
scas
je
pop
jmp
sub
inc
ds
jmp
jo
das
xchg
fwait
rcll
test
test
jecxz,pt
xchg
push
shrl
xchg
sbb
cmp
out
inc
pop
test
and
push
es
fwait
or
dec
push
sub
arpl
or
into
mov
pushl
cmpsb
jl
jb
xchg
test
roll
sbb
cmpsl
std
push
jno
cmc
int
aaa
sub
or
mov
sbb
or
mov
xor
lahf
mov
div
daa
loopne
sbb
push
add
gs
xor
push
stos
lea
mov
xor
aaa
jecxz
stos
mov
ljmp
pop
xor
bound
imul
clc
jle
loope
mov
lahf
pop
int3
xbegin
sbb
pop
fucom
xchg
cwtl
push
adc
mov
jnp
xor
testb
inc
mov
jp
pop
inc
or
mov
dec
ficoml
cwtl
sub
imul
adc
pop
or
xor
pop
and
repnz
std
fucomip
mov
pop
nop
and
in
push
xor
inc
sub
sbb
jle
shl
xorb
push
or
mov
stos
repz
imul
inc
add
pop
push
hlt
push
sub
je
xlat
stc
pop
or
imul
xchg
pop
jmp
repnz
jge
stos
popl
cmp
nop
lcall
mov
jmp
das
xor
test
and
dec
das
mov
mov
jnp
sbb
adc
ljmp
xchg
test
shlb
mov
jecxz
xor
stos
dec
push
inc
sub
mov
adc
sub
pop
mov
mov
mov
xchg
cmpsb
inc
scas
into
push
xor
jb
add
movsl
aaa
inc
inc
jle
inc
pushl
call
insl
mov
stc
xor
orb
push
jge
negl
cmp
mov
imul
cs
notl
jno
ret
leave
push
mov
mov
mov
cltd
insl
push
mov
ss
cli
insl
mov
testl
jnp
add
aad
pop
lock
js
mov
arpl
fiadds
cmp
sub
je
roll
insb
jle
mov
xor
cwtl
mov
gs
xor
adc
cs
ret
test
ret
cld
rolb
sub
sahf
or
push
stos
pushf
mov
int
sbb
pop
pusha
inc
cmp
dec
push
mov
jge
addr16
popa
lret
fcmove
std
and
add
mov
push
lret
xchg
outsb
dec
popa
out
add
cmp
jne
pusha
int3
in
imul
sub
jns
mov
sub
and
movsl
into
xor
and
sar
les
xor
shrl
pop
xchg
shr
lds
test
je
pop
adc
dec
mov
cmp
sbb
lcall
adc
sbb
pop
sbb
and
adc
movsl
outsb
add
xchg
pop
cmc
or
lods
adc
and
cltd
xor
xchg
cmpsl
loope
incl
mov
enter
and
loop
into
mov
shl
pop
jno
jbe
insb
push
adc
daa
mov
xor
sub
fsubp
cltd
pop
inc
pop
inc
fisttps
and
arpl
mov
jo
pop
mull
jle
add
bound
mov
add
in
push
pop
leave
test
xor
scas
scas
mov
mov
ljmp
sbb
stos
add
and
mov
sbb
pop
stc
dec
mov
push
nop
mov
scas
movsb
cld
adc
sub
into
mov
fdivrs
jmp
lahf
jb
enter
mov
mov
sbb
outsl
ds
test
fwait
dec
add
hlt
push
leave
daa
imul
adc
dec
into
jge
xor
mov
xchg
lret
mov
loop
push
pop
jnp
push
shll
cli
cmp
fscale
adc
insb
add
lock
imul
aam
mov
lods
push
insb
fistpll
hlt
cmp
mov
add
loope
dec
ret
jl
adc
test
and
mov
ss
pop
and
repz
fs
xor
sub
cwtl
lea
pop
enter
mov
mov
add
out
xchg
fidivl
out
push
mov
adc
clc
xchg
test
arpl
loopne
mov
mov
cmpl
fisubs
loope
fidivrl
pop
xor
lahf
cmc
int3
hlt
jnp
mov
cltd
stos
pavgw
rcll
xchg
dec
test
aaa
enter
stos
mov
sub
and
popaw
lahf
mov
clc
fmuls
fwait
fdivs
inc
in
cmp
or
outsb
adc
jg
mov
test
outsl
dec
cwtd
ret
and
fwait
popf
xor
lcall
cmpsl
pop
adc
push
insb
xor
mov
adc
call
shll
push
push
test
mov
push
fisubrs
xchg
scas
push
aaa
rorb
cmpsb
sbb
cmpsb
gs
cmpsl
fsubs
pop
dec
notb
jnp
cli
adcl
pop
mov
inc
mov
jmp
popf
mov
xchg
mov
rorb
jl
inc
in
fadds
jb
ljmp
push
mov
pop
mov
cmc
daa
std
cs
mov
xchg
add
fidivs
cwtl
xor
ret
scas
and
fnstsw
push
mov
lcall
push
in
scas
or
imul
adcb
and
das
mov
inc
inc
dec
pop
ret
mov
push
imul
addr16
mov
mov
lret
fdivrs
lret
jge
rorb
imul
addr16
jno
jno
xor
mov
xchg
mov
add
js
ret
and
push
mov
mov
mov
stos
leave
cmp
cmp
fst
mov
pop
inc
icebp
sbb
add
push
xchg
decb
test
mov
jne
jecxz
dec
mov
aad
xor
adc
and
sbb
les
in
out
imul
dec
lret
cld
test
push
or
repnz
sbb
cmp
cmpsb
les
add
jmp
sbb
lahf
xchg
sbb
movsb
push
clc
fnstcw
cmpsb
outsb
push
xchg
out
inc
jmp
add
mov
stos
push
sbb
ds
dec
int3
insl
cmc
popa
adcb
push
mov
arpl
and
out
rol
xor
rorl
xchg
cmp
adc
push
add
mov
fimull
add
jecxz
push
add
js
sub
push
jbe
shr
xchg
add
mov
pop
sbb
adc
iret
xor
push
out
jmp
shl
jns
sti
aam
scas
jae
xchg
test
loop
xchg
cmp
test
mov
imul
iret
cmp
into
add
into
fstpl
lcall
mov
in
aam
sbb
cmp
push
xor
bound
out
jbe
mov
fwait
imull
cmp
mov
cmp
xchg
daa
sbb
add
and
stc
xor
call
fldl
fcmovnbe
js
popa
inc
mov
int3
push
ss
stos
mov
inc
mov
sub
cmp
fisttpl
pusha
or
cmpsb
adc
jne
push
jae
aas
icebp
enter
rorl
sbb
ret
mov
mov
xor
xchg
sub
mov
mov
pushf
dec
lahf
cli
in
push
pusha
xor
nop
int3
dec
xor
into
cmc
sub
insb
lea
jns
xchg
sbb
mov
mov
clc
sub
add
push
push
add
iret
sub
rorl
sbb
in
dec
dec
sahf
rcrb
inc
and
jne
push
jne
inc
lock
or
lds
push
push
inc
sbb
sti
nop
je
call
shrl
fwait
lods
dec
fmul
mov
gs
popa
adcl
out
pop
adc
mov
add
mov
out
mov
out
aas
dec
insl
std
xchg
mov
cltd
sub
jno
push
lods
xchg
iret
ja
pop
add
lock
int
xchg
leave
jbe
sub
andb
xchg
adc
shlb
jb
dec
mov
in
dec
dec
test
or
push
jmp
push
fwait
pop
pop
test
pusha
rolb
loop
jae
cli
mov
push
pop
lcall
push
jle
mov
lahf
sbb
sub
cs
pop
sub
sub
mov
fimuls
stos
clc
ret
jle
and
xchg
fdiv
push
adc
fnstenv
mov
push
and
pop
xor
inc
jecxz
rorl
pop
sub
inc
xor
pop
jmp
sub
and
inc
sub
jne
test
xchg
ljmp
cmpsb
out
xchg
in
push
xchg
dec
push
mov
lea
syscall
push
lods
or
push
cmp
push
ds
and
push
neg
or
into
inc
daa
test
mov
mov
fildll
das
scas
jns
sahf
rcl
xchg
fs
pop
jmp
scas
scas
push
addr16
cmp
or
xchg
aad
pop
repz
xchg
filds
add
mov
jo
pushf
xor
push
cmpl
neg
or
divb
sub
lret
insb
dec
xor
outsb
inc
jl
lahf
dec
aad
or
mov
scas
fwait
insl
mov
addb
andl
lods
or
add
adcb
xor
nop
mov
rolb
out
mov
outsl
jmp
jno
mov
into
outsl
sub
lret
jg
shr
xor
lretw
sarb
sar
ds
lds
cli
pop
jb
xor
pop
jb
or
push
inc
les
pop
sbb
and
sbb
int
xor
mov
addr16
xchg
fdivrs
mov
mov
push
and
movsl
in
dec
cmp
sti
icebp
sbb
les
lods
and
xlat
int3
adc
cmp
std
mov
sbb
test
fs
lock
pop
xor
lret
lahf
or
dec
inc
rorl
test
movb
and
lods
xor
out
scas
add
test
inc
sbb
mov
push
mov
jmp
es
xchg
cmp
add
mov
jl
test
push
sub
aam
xchg
and
xor
cmp
add
inc
sbb
xchg
and
jno
lods
icebp
jae
test
sarb
popf
sub
pop
popa
push
xor
add
hlt
mov
test
lea
xchg
aas
dec
add
sub
sbb
jno
adc
mov
stos
inc
insb
jnp
pop
push
push
lea
add
dec
scas
and
adc
mov
pop
pop
callw
add
push
add
outsb
je
or
push
xchg
ss
inc
jecxz
xchg
sbbl
or
test
in
pop
inc
test
adc
addr16
dec
mov
pop
cwtl
xchg
sbb
mov
or
sbb
rcll
popa
pop
sbb
push
xor
subb
cmp
dec
popa
dec
add
cwtl
push
jne
sbb
mov
dec
call
inc
xor
gs
and
jbe
lock
pop
cmp
pop
std
add
and
jl
pushf
pop
lret
xor
dec
aaa
push
sbb
mov
cli
xchg
sbb
movsb
pop
xchg
jle
lods
ret
lcall
loope
xchg
mov
push
dec
fisubs
mov
movsb
or
push
in
inc
iret
rcrb
lret
mov
mov
cs
and
repz
add
shll
mov
xor
jp
dec
ja
adc
jle
mov
push
cmp
scas
orb
jg
fdiv
jb
cmp
xor
or
pop
cmpb
roll
loopne
sbb
cltd
fs
movsb
jnp
inc
pusha
mov
jno
in
lcall
out
xor
xor
push
movl
pop
setb
push
dec
sti
fsubrl
out
jno
jno
in
testl
or
jns
and
out
jns
cwtl
mov
lcall
sarl
mov
out
or
mov
push
push
xchg
or
pop
fstps
push
les
dec
roll
xor
jle
fsts
jge
lods
mov
outsl
shr
decb
popa
adc
mov
inc
js
mov
push
lret
dec
jno
add
aam
divl
mov
je
lods
cmc
xor
inc
lods
adc
shlb
mov
shlb
imul
add
imul
add
xlat
cld
cmpsb
jge
mov
sti
pop
sbb
mov
shll
xor
insl
movsl
sub
notl
pop
test
mov
lock
push
or
push
lret
cmp
xor
sahf
and
jbe
lahf
and
xor
xor
mov
mov
dec
ret
out
add
jnp
dec
jle
popf
sarl
out
jns
daa
dec
xchg
pop
mov
mov
jp
out
lods
cmp
xorl
outsl
fisubl
push
xchg
mov
mov
add
lahf
repnz
and
inc
fmull
es
jb
div
cmp
add
jno
mov
jmp
mov
les
sub
inc
negl
lds
adc
push
xchg
cmc
sti
iret
pusha
sarb
test
push
test
sti
pushl
dec
xchg
sbb
cmp
sbb
sub
sbb
daa
cmc
imul
movsb
inc
lret
mov
cwtl
rorl
cli
loopne
dec
sbb
push
xor
adc
mov
enter
leave
pushf
or
out
xor
sub
incb
pop
roll
jle
sub
push
sysenter
pop
and
pop
jl
mov
sub
daa
cwtl
mov
fwait
arpl
cmp
into
add
outsb
test
out
adc
bound
lock
pop
sub
dec
int
push
hlt
inc
or
or
and
and
xchg
adc
cmp
out
lret
jecxz
xor
push
cmc
sahf
push
push
stc
aaa
add
pop
lock
cmp
dec
cmpsl
stc
out
out
add
add
mov
xchg
call
or
or
jno
ficomps
mov
dec
mov
xchg
adc
or
dec
dec
mov
in
inc
adc
ret
xor
push
sub
ja
jae
xor
fs
push
mov
sahf
add
xchg
cmp
dec
adc
or
sub
push
dec
push
or
jbe
pop
mov
sbb
pop
aam
ljmp
in
jg
rol
mov
aas
cmpsb
xchg
and
and
int
movsb
bts
arpl
pop
xchg
jo
sbb
mov
mov
xorl
push
push
jl
out
mov
aad
pop
sar
dec
or
popf
push
insl
jg
lret
call
push
or
adc
cmp
and
in
insl
scas
clc
aas
shl
insb
ret
and
enter
movsb
mov
out
push
imul
pop
sub
mov
cmpb
scas
or
pop
jae
in
shr
mov
mov
cmpsl
lock
pop
cmp
das
add
call
xor
mov
cwtl
lcall
xor
pop
push
in
pop
jbe
push
jge
icebp
jmp
lret
leave
sub
or
mov
xchg
fs
jnp
xchg
pop
leave
shr
dec
mov
jns
or
aam
jl
subl
push
repz
cmc
xchg
mov
test
adc
adc
inc
popa
xor
pop
nop
mov
or
fcoms
push
pmulhw
pushl
sub
push
or
repz
dec
sahf
shrb
int3
cld
jbe
fiadds
dec
aas
leave
and
pusha
xor
push
pop
inc
push
loop
sbb
pop
cld
push
lret
cmp
inc
push
lock
into
and
ss
sub
xchg
test
or
fdivs
pop
mov
mov
stc
cmp
enter
std
mov
pop
aad
and
push
in
repz
pop
push
sahf
mov
push
lock
in
mov
cmp
repz
repz
push
mov
mov
repz
test
dec
hlt
popf
mov
inc
fdivl
cwtl
mov
dec
cltd
adc
shlb
imul
test
inc
stos
inc
imul
hlt
and
mov
adc
cmp
fnsave
cmpsb
into
or
sub
fs
push
cwtl
sbb
mov
push
mov
mov
aad
mov
int
adc
mov
into
fldl
dec
and
fs
mov
push
cmc
push
jmp
and
inc
outsb
test
xchg
inc
inc
loop
jl
sub
lods
sbb
std
cmc
cld
lcall
in
shll
or
loope
jg
xchg
adc
sbb
das
dec
fdivrs
rcrb
xor
std
sbb
cli
imul
xor
cs
xchg
dec
pushf
data16
rcrb
jns
push
out
jo
push
iret
mov
push
adc
sub
xorl
push
test
daa
mov
test
int3
aas
out
xchg
mov
jmp
xor
dec
enter
pop
mov
adc
mov
stos
mov
cmp
jnp
shll
fsubrs
sbb
inc
test
ljmp
mov
xchg
adc
pop
mov
mov
pop
xchg
iret
adc
popa
pusha
aad
inc
pop
jnp
js
adc
lods
or
mov
inc
js
add
jne
xor
add
push
adc
add
or
xlat
pop
mov
pop
dec
frstor
pop
push
mov
mov
cld
fimull
out
scas
jo
hlt
mov
add
xor
imul
je
xlat
cli
dec
dec
pop
push
sub
push
imul
cmpsb
imul
push
ficoms
js
loopne
mov
adc
fisubrs
out
loopne
mov
inc
mov
adc
rclb
mov
dec
mov
jg
lahf
xchg
xor
test
jecxz
mov
arpl
test
in
mov
mov
dec
mov
sub
push
xor
mov
inc
imul
xchg
xchg
dec
inc
pop
das
cmpsl
jbe
pop
movsl
pop
inc
xchg
enter
mov
cmp
add
imul
cmp
lock
lcall
dec
iret
jle
jmp
add
pushf
xor
and
jo
and
lods
aad
push
xchg
pop
mov
stos
scas
stos
addb
mov
ja
inc
outsb
pop
pop
push
add
and
nop
xor
rcrb
jl
subl
test
jne
stc
cmp
sbbb
or
setnp
push
dec
rorl
fnstsw
add
xchg
xchg
mov
xor
mov
movsl
sub
rcrl
es
cmp
sub
pop
inc
mov
cmp
icebp
xor
adc
add
sahf
int
add
dec
or
ficomps
add
or
insl
nop
jbe
adc
dec
sub
repnz
mov
out
popf
daa
dec
and
imul
rcll
mov
or
and
scas
dec
xor
inc
sub
mov
mov
mov
dec
jmp
dec
dec
mov
popa
add
test
xchg
push
lods
sbb
lods
mov
push
mov
ret
or
addr16
ret
out
mov
sbb
cmp
add
dec
inc
sti
cltd
fistpl
repz
into
mov
std
lods
or
inc
sbb
cli
sub
inc
sbb
jmp
test
inc
insb
out
movsb
repnz
test
out
out
cltd
xor
cmp
add
add
adc
cmp
fdiv
pop
jl
aad
or
push
js
sub
cltd
mov
mov
xchg
fwait
repz
or
sbb
and
sub
jae
or
or
push
mov
int
mov
pusha
cmp
jg
stc
dec
or
daa
ret
je
insl
mov
ror
xorl
div
mov
dec
dec
mov
cmpsb
cwtl
lahf
inc
mov
xor
jno
push
lret
fbld
and
test
lcall
das
xor
cwtl
fs
adc
pop
sub
imul
pop
in
push
lds
sahf
or
adc
mov
loop
add
fmuls
pop
inc
jg
lahf
cmp
rcrl
push
js
xchg
mul
out
test
stc
add
inc
pop
mov
sbbb
xchg
cmpl
cmp
jb
test
or
inc
inc
jno
sti
mov
mov
xor
or
add
iret
loop
and
nop
fs
lods
pop
mull
push
and
jg
mov
jmp
cmpsb
das
lock
add
mov
jl
mov
test
xor
jns
test
and
pushf
push
out
repnz
inc
in
shr
dec
pop
ret
dec
pushf
gs
into
xchg
pop
xchg
sti
sbb
lahf
sbb
dec
mov
frstor
push
loopne
adc
hlt
flds
fwait
jge
pop
mov
aam
or
das
xor
insl
mov
icebp
movsl
popf
sbb
pop
clc
xor
into
cmpb
or
popa
imul
mov
jmp
fsqrt
adc
fwait
or
popf
xchg
shlb
fdivs
lahf
sbb
mov
test
inc
sbb
scas
jae
xor
leave
inc
xchg
jp
or
je
add
roll
notl
pop
adc
push
icebp
aad
bnd
mov
sub
addr16
scas
cmc
add
mov
xchg
shl
xor
mov
shll
pop
lret
adc
lock
repnz
mov
sbb
lret
push
xor
sbb
shll
cmpxchg
lock
pop
lcall
imul
loop
mov
outsl
outsl
addr16
out
stc
mov
repz
pop
sub
mov
scas
bndstx
and
push
xor
aam
push
xor
movsb
pop
cmc
dec
jae,pn
stc
pop
js
lcall
jg
cmp
pop
mov
addr16
ljmp
mov
push
xchg
scas
test
dec
popf
lods
mov
pop
jmp
inc
int3
lret
mov
into
push
addr16
int3
in
les
sbb
pop
mov
and
dec
mov
ret
and
mov
push
xchg
popa
repnz
andb
sub
test
mov
and
cmp
nop
push
insb
xor
loopne
pop
pop
addl
inc
adc
imul
ret
loop
adc
leave
push
stc
or
cmp
repnz
or
stc
sarl
insb
add
mov
mov
out
adcb
pop
jo
sub
lret
push
pop
sub
outsb
sahf
pusha
shrb
xchg
mov
push
subb
insb
pop
mov
aam
sbb
int3
in
das
addr16
addb
enter
lods
cli
in
cmp
sbb
mov
jle
in
pcmpeqw
jb
cmp
test
aad
inc
mov
cmp
xchg
pop
loop
dec
outsb
ret
outsb
mov
mov
mov
fistps
jns,pt
cwtl
test
mov
mov
mov
aam
lret
lret
push
ljmp
lcall
inc
addr16
mov
add
mov
scas
dec
test
lds
mov
lret
pop
inc
pop
sbb
stos
xchg
mov
shrb
pushl
daa
mov
jbe
mov
pop
mov
arpl
sub
fsub
div
adc
jne
push
inc
jle
cltd
adc
je
ss
push
xor
pop
push
in
jo
hlt
iret
sahf
stos
jae
ret
or
enter
push
mov
inc
mov
cmc
mov
push
sbbb
mov
sub
jnp
xor
repz
fstl
sub
cwtl
arpl
and
insl
pop
pop
loope
pop
std
nop
xchg
insb
push
daa
mov
into
and
mov
das
push
inc
mull
scas
push
push
fs
jmp
cmpl
ret
push
sbb
dec
mov
sarl
xchg
jne
inc
and
xor
jmp
and
adc
test
je
mov
adc
sbb
cmpsb
cmp
insb
cmp
mov
mov
pop
inc
ja
ret
mov
shlb
cltd
stos
pop
enter
push
into
sub
xor
sub
push
mov
aas
xor
mov
les
out
arpl
das
add
xor
pop
mov
call
cmpl
out
dec
out
scas
daa
adc
decl
adc
mov
inc
sbb
or
icebp
add
jne,pt
cmpsb
add
fldcw
js
xor
dec
xor
inc
or
pop
jle
push
push
push
dec
pop
aam
fnstcw
test
lret
fwait
lret
mov
test
mov
in
add
cltd
cmove
jne
jne
xchg
xchg
js
and
test
fucomi
cmpsl
push
mov
mov
test
xor
cltd
add
mov
int3
push
cmp
mov
rorl
mov
clc
repnz
push
rcrb
cmc
lods
mov
lcall
ljmp
or
out
sbb
cld
adc
iret
and
lret
push
cld
and
fmul
mov
pop
and
testb
mov
mov
ja
push
adc
mov
add
add
fcmovb
cmpb
xchg
repz
xchg
shlb
bound
or
je
mov
jge
lock
xchg
cmp
adc
in
pusha
into
xor
iret
adc
popf
cwtl
sbb
fwait
mov
fstpt
push
arpl
addr16
jmp
idiv
ds
push
movsb
fwait
xchg
insl
cmc
add
jne
inc
xchg
push
jns
push
lcall
popa
dec
mov
add
pushf
stc
fcmovbe
and
pop
pop
data16
repz
mov
sub
adc
and
je
and
addb
or
xchg
mov
cmpxchg
lcall
cli
popf
idivb
in
pop
mov
sub
loop
fidivrs
or
fwait
jno
jl
mov
cli
cwtl
js
mov
jmp
in
cmp
adc
fnstenv
add
push
pop
and
ret
mov
enter
movsb
pop
mov
dec
inc
enter
jbe
lods
sbb
mov
ret
pop
test
dec
adc
sub
les
loop
push
lfs
adc
push
int
int3
and
cmp
xchg
sbb
xchg
imulb
push
mov
push
insb
cmp
xor
mov
xor
fmuls
in
inc
xor
addr16
lcall
in
shl
push
mov
push
lock
push
xchg
mov
aas
mov
cmp
xchg
adc
rorl
mov
pop
gs
mov
loopne
gs
in
jle
scas
das
imul
mov
sub
mov
mov
sti
pop
push
sub
pop
clc
mov
cmp
fadds
mov
and
gs
repz
inc
in
es
test
cmp
dec
imul
ljmp
sbb
clc
and
dec
jb
mov
or
insb
sbb
inc
inc
stos
mov
mov
arpl
in
mov
xchg
lock
adc
adc
cmp
xor
jecxz
call
dec
in
push
push
sub
ljmp
xor
cmp
xor
jb
into
jl
and
xchg
xor
lea
xor
sbb
movsl
jae
shlb
mov
mov
loope
cmp
jns
push
insb
sub
add
shlb
aad
mov
addr16
sub
or
stos
xchg
jl
jno
mov
mov
sbb
adcb
sbb
sub
nop
ret
lods
test
scas
jecxz
gs
push
imul
pop
stc
adc
inc
sbb
adc
cltd
mov
shr
push
fcmovnu
adc
inc
and
pop
test
clc
and
cmp
aad
sub
xor
jne
jg
mov
sbb
std
jns
out
lahf
loopne
hlt
lcall
push
outsb
in
divb
pop
sbb
stos
js
inc
sbb
bound
mov
xchg
pop
add
xchg
jo
pop
mov
mov
arpl
sbb
popa
cmp
mov
cwtl
aaa
sub
sti
pop
lret
cmp
rcl
stc
xor
push
movsl
mov
push
test
push
dec
push
leave
jnp
push
mov
dec
sub
sarl
inc
sbb
ja
sbb
push
add
sahf
xchg
push
mov
mov
clc
ja
arpl
movsb
aad
and
enter
fcoml
jnp
add
popa
and
sub
cmp
clc
lea
pusha
mov
mov
fiadds
test
sbb
ret
test
lret
lret
mov
mov
mov
stos
test
test
and
fidivl
push
repz
mov
lret
ret
jnp
cwtl
pop
inc
xchg
adc
add
dec
icebp
pop
pop
or
mov
mov
mov
mov
inc
xchg
sbb
bound
lahf
outsl
jbe
fs
outsb
xorl
pop
cld
fst
and
ret
push
aaa
inc
xor
sbb
xor
lds
out
adc
imul
popa
fs
ss
sub
mov
adcl
sar
mov
push
cmp
pop
js
inc
dec
js
xchg
pop
repz
pop
repz
in
shl
adc
nop
ds
and
xchg
aad
or
mov
mov
xchg
adcb
sti
xlat
jae
int3
mov
xchg
cwtl
mov
sub
or
xor
std
or
mov
inc
inc
out
or
and
je
mov
inc
nop
sbb
pop
jae
xchg
xchg
sub
nop
sub
out
ret
inc
cmpsl
mov
dec
into
xchg
in
dec
cmp
es
shlb
jmp
imul
repz
in
icebp
outsb
insl
dec
or
jb
icebp
adc
js
dec
lds
into
push
gs
aad
cltd
dec
lahf
cmp
arpl
sub
nop
xlat
ja
xlat
rclb
sub
in
pop
adc
adc
mov
jp
push
cmpsl
scas
stos
call
cmp
daa
xor
movsl
dec
iret
js
frstor
dec
inc
mov
scas
push
leave
jnp
sub
cltd
popf
jno
insl
mov
inc
mov
push
call
mov
inc
cmp
pop
xor
nop
adc
xchg
mov
int3
mov
rolb
shl
xor
jo
push
dec
adc
out
insl
mov
imul
into
jo
enter
int
scas
rcl
pop
stos
pop
jmp
cmp
jbe
mov
inc
sub
outsl
add
lock
push
ja
inc
add
lahf
adc
jmp
mov
arpl
lds
sbb
lock
add
jecxz
or
sub
xor
bndldx
cmp
decl
adcb
jbe
pop
lds
push
data16
lods
jl
mov
gs
adc
pop
sub
mov
lret
and
xchg
push
sub
hlt
lock
lcall
out
jb
pusha
sub
ja
sub
xchg
dec
outsl
icebp
lock
mov
pop
fcompl
sub
sbb
pop
push
or
mov
repnz
les
xor
mov
nop
sub
cmpsb
sbb
lret
lock
negl
mov
stos
or
cwtl
inc
ljmp
or
incl
ret
jp
mov
in
je
ljmp
push
sub
jns
mov
sbb
or
sbb
mov
jne
xchg
adc
je
ret
push
js
sbb
lret
nop
or
sbb
add
add
shrb
adc
orb
inc
jmp
cmp
cmc
cmp
push
or
incl
and
idivb
push
icebp
fsubr
scas
clc
mov
add
fwait
mov
arpl
pop
imul
adc
stos
sub
sbb
push
add
sarl
mov
rolb
inc
inc
and
dec
scas
fdiv
push
push
movsb
xchg
shlb
addr16
aaa
inc
call
dec
das
lock
jb
xor
mov
or
mov
js
fbld
movb
and
scas
test
mov
loop
idiv
cmp
aam
push
nop
xor
mov
loopw
mov
push
xorb
and
pop
lret
mov
das
jmp
sub
in
repnz
sbb
int3
into
cld
testl
push
insl
shrl
pop
xor
pop
pop
ficomps
pop
outsb
sbbb
popf
invd
mov
test
pop
adc
inc
jl
add
jae
mov
ds
popa
and
cwtl
scas
and
pop
cmp
stos
pop
stos
fnstenv
ret
xchg
mov
xor
cld
mov
jg
mov
push
cmp
dec
fbstp
mov
lret
outsl
pop
pop
lcall
nop
mov
insl
or
and
ss
dec
mov
mov
shll
mov
mov
bound
push
sub
cmpb
mov
insl
movsl
sahf
adc
movsb
push
lcall
mov
xorps
outsb
mov
bound
outsb
dec
mov
fisttps
mov
xor
mov
jg
inc
ss
add
pushl
enter
sarl
fstpl
push
sbb
or
test
pusha
lcall
mov
pop
std
dec
xor
clc
scas
push
hlt
orl
cmp
ror
mov
mov
dec
std
sbb
push
sbb
pop
jecxz
or
push
popf
xor
xchg
faddl
or
jbe
std
jbe
push
es
cwtl
xchg
fisttpl
jno
test
pop
data16
in
testb
xchg
adc
pop
addr16
push
out
dec
jmp
das
into
cmpsb
pusha
push
jmp
loope
cs
lahf
adc
add
dec
fs
cmp
call
int3
sbb
push
pop
jle
sub
inc
test
cmp
enter
jae
test
jmp
lret
push
enter
jo
ds
adc
fs
cwtl
sub
nopl
xchg
sub
fldcw
lods
push
je
and
cmp
fcmovbe
ret
imul
hlt
dec
push
pusha
xor
sub
mov
or
testb
jl
stc
in
fs
pop
out
lock
xorb
xchg
jns
sbb
lcall
jl
and
inc
daa
mov
mov
insl
xor
loope
xchg
push
pusha
jmp
mov
jmp
sti
xchg
addl
jns
out
and
push
dec
adc
jne
das
pop
and
push
push
jno
inc
incl
cmp
dec
push
data16
mov
insl
xor
dec
push
inc
xchg
or
std
xchg
mov
sub
cwtl
pop
cmp
xchg
or
lods
imul
mov
xchg
roll
push
sbb
clc
xor
sub
push
fstp
cmp
xchg
mov
jne
mov
imul
mov
fidivrs
dec
fistpl
mov
inc
fdivs
jnp
and
fdivp
data16
divl
xchg
ret
icebp
in
inc
fsts
push
cmpsl
sub
sub
ds
test
or
arpl
mov
mov
popf
sub
in
jmp
adc
mov
imul
pop
push
and
repz
jecxz
jle
push
lods
xchg
adc
jg
xor
scas
mov
std
sub
sbb
adcl
xchg
sub
pop
je
xor
aam
cmp
aam
ficoms
push
xchg
xchg
adc
lahf
and
inc
cmc
mov
in
insl
and
jp
hlt
adc
ja
sti
lock
mov
mov
fisubrl
mov
pop
mov
xor
xadd
imul
test
push
xchg
xchg
imul
or
popf
mov
jno
fs
test
push
loope
outsl
frstor
mov
add
mov
addl
add
aam
lods
or
pop
inc
sub
add
cmp
pop
pop
popa
or
xchg
mov
inc
lret
cs
jae
mov
arpl
xchg
out
dec
outsl
pop
jecxz
test
ret
mov
stos
fcoml
std
push
xor
std
sub
jecxz
test
test
pop
add
lret
adc
or
scas
jg
xchg
nop
andb
push
aas
dec
sub
mov
fsubrp
xlat
adc
je
mov
pop
lret
aaa
pop
les
push
insb
ljmp
pop
shr
mov
ja
jmp
and
inc
mov
dec
iret
mov
or
sub
les
fld
mov
push
bound
out
lret
push
lahf
pop
insb
loopne
inc
mov
shrl
fs
aad
hlt
rolb
jnp
movsb
test
out
test
in
int3
jae
jne
cmp
mov
mov
inc
pop
sti
xor
jb
test
cmp
sub
cmp
fldl
xor
mov
push
push
push
mov
incb
xor
jo
icebp
mov
in
clc
imul
test
outsb
sub
mov
imul
xchg
cwtl
lret
add
dec
imul
xor
ficoms
mov
fisttpl
sahf
inc
pop
or
sbb
out
in
cli
loope
ret
or
mov
adc
adc
mov
movsl
push
pushf
xchg
stos
adc
add
loope
pop
movsb
add
fs
mov
fs
shll
outsb
inc
iret
inc
or
leave
negl
imul
inc
popl
xor
arpl
mov
jle
dec
push
xor
mov
insl
jp
jmp
cmp
icebp
add
pop
shrb
icebp
mov
ret
sbb
jle
mov
pop
aaa
sbb
mov
loop
jo
xchg
or
sbb
in
sub
jmp
movsb
lods
aaa
out
mov
and
sub
andl
dec
lods
rorl
mov
lock
pop
jns
sbb
mov
out
data16
xor
push
pop
les
je
or
xchg
cmp
repz
mov
jnp
jg
and
stc
and
ljmp
lock
cmp
into
movsl
push
mov
test
testl
out
jge
mov
insb
adc
int3
data16
lea
pusha
pusha
sahf
enter
stc
rol
sub
add
mov
add
arpl
ret
nop
mov
mov
popa
push
pop
sub
push
jmp
sbb
icebp
das
dec
es
jmp
mov
push
pop
jle
add
lock
jae
inc
push
pop
ss
fwait
inc
fildl
xor
xor
push
sbb
dec
mov
cmp
inc
inc
mov
nop
cmp
jge
jl
fstpl
xchg
xlat
idivl
pop
lods
test
enter
xor
scas
sarl
ljmp
fisttps
clc
sub
cmpsb
and
push
das
loop
xchg
lods
cmp
repnz
pop
cs
pop
imul
add
mov
inc
test
xchg
xchg
aad
sbbb
in
cmp
ret
push
shl
adc
pop
pusha
adc
in
push
inc
push
adc
mov
popa
ret
enter
aas
xlat
mov
jb
out
shll
inc
scas
mov
push
push
js
add
lret
cwtl
mov
cmpl
mov
mov
sbb
aad
pusha
shr
aas
fnstcw
pmaxsw
lahf
jl
in
ljmp
push
jle
mov
or
or
pop
je
add
aas
fstps
xchg
stc
xor
and
pusha
bound
pop
xor
jne
outsb
jno
xor
shlb
pusha
push
pushw
iret
push
mov
ret
lret
push
les
xor
inc
push
lret
mov
xlat
pop
out
in
pusha
or
cmp
fldt
nop
imul
rcrb
imul
inc
mov
bound
arpl
test
les
cmp
andb
adc
mov
lcall
gs
pushl
mov
loope
adc
pop
mov
in
insb
mov
pop
movsl
sbb
xlat
test
pushf
jecxz
sub
pop
leave
add
mov
jne
ds
bound
jno
cld
ljmp
mov
xchg
jne
paddsb
mov
scas
xchg
adc
mov
xor
jmp
push
sub
sbb
out
push
add
pop
sbb
mov
jg
jns
jl
pop
test
push
add
scas
cmp
mov
xchg
dec
mov
addl
out
mov
in
ret
mov
sub
pop
rcrl
in
add
out
mov
shl
mov
mov
gs
xchg
inc
dec
rolb
rorl
cltd
xor
add
lahf
lret
ss
call
aam
jge
dec
in
fisubl
addr16
push
into
cmpsb
mov
mov
cld
dec
sbb
and
andl
add
jo
popf
ljmp
xchg
mov
and
add
out
add
mov
scas
icebp
jne
cmp
fwait
sbb
mov
pushf
xor
subl
inc
mov
xchg
sbb
sub
testb
cmpsb
push
jb
fdivrs
pop
and
call
call
xlat
dec
andl
inc
rcrb
xchg
popf
stos
cmpsl
push
lahf
lcall
xchg
in
sbb
jmp
movsl
add
xchg
scas
int3
lret
icebp
clc
popf
pop
pop
push
push
push
bound
inc
add
rolb
pop
pop
daa
dec
fucom
or
jecxz
aas
xchg
mov
cwtl
pusha
push
mov
fisttpll
jge
imul
leave
xor
xchg
int
xchg
sbb
imul
jp
decb
jb
int3
lret
sarl
jle
add
cmp
outsl
insb
loop
add
jmp
add
rcl
out
jns
inc
xor
push
and
int3
das
cs
sub
cmpb
xlat
inc
lret
lcall
jg
lret
sub
je
imul
lods
fwait
push
mov
test
int
aas
call
pop
inc
imul
aaa
fmuls
mov
dec
push
xlat
inc
lcall
add
add
lea
mov
mov
das
push
into
out
mov
xlat
ds
sahf
lods
cwtl
mov
pop
insl
jl
repnz
imul
fcoml
push
sbbb
cmp
loope
fnsave
imul
shrb
xor
mov
jo
int
daa
hlt
mov
test
mov
or
out
idiv
push
xchg
xchg
fnstenv
mov
adcl
mov
and
out
jb
or
jmp
pop
jmp
mov
jns
xorb
dec
pushf
negl
cmp
insl
in
movsb
mov
pop
adc
ficoms
gs
cmp
or
pop
lods
int3
aas
xchg
xor
jge
scas
out
sbb
or
jo
mov
ss
xchg
dec
flds
sub
xchg
mov
add
adc
lret
daa
ss
aaa
sbb
jmp
cli
jle
sahf
sbb
xor
xchg
fwait
inc
leave
pop
xorl
stos
add
js
test
cltd
jecxz
rcrl
jb
inc
pop
lahf
lret
lcall
cwtl
hlt
lea
xchg
repnz
adc
out
into
movsb
and
or
mov
loope
sbb
mov
mov
and
jecxz
repz
dec
cmpsl
sti
ja
je
and
cmpsl
lcall
and
xor
negl
jb
cmp
pop
ss
lds
loop
nop
int
cmp
mov
mov
dec
push
loope
xchg
dec
std
push
xchg
add
sahf
dec
pop
xchg
out
mov
push
xor
xchg
int
cmp
out
lock
add
sub
mov
mov
or
add
mov
jp
and
add
lods
mov
xor
aad
cmp
push
mov
loopne
xor
jno
jae
xchg
in
out
dec
inc
hlt
lret
lods
fcoms
cmp
nop
mov
inc
addr16
adc
cmpsl
fnstcw
xor
sarl
js
lods
adc
das
xchg
xor
xchg
test
scas
adc
mov
dec
pop
jmp
out
lahf
popf
push
outsb
inc
ss
add
movl
jmp
out
xchg
sbb
jo
sti
inc
cs
out
dec
je
push
or
mov
sbb
jb
xchg
or
movsl
push
lds
jb
pop
sbb
cmp
inc
xchg
popf
cmp
das
push
std
in
cmp
loope
sarb
aad
inc
aam
mov
dec
pop
or
inc
hlt
xchg
mov
mov
fucom
dec
clc
jbe
ja
xchg
mov
data16
mov
or
aas
hlt
in
es
in
mov
add
mov
out
mov
cmpsb
dec
cmp
imul
cmp
sub
jne
int
pop
stos
push
negb
push
out
adc
cmp
xor
movsl
sub
andb
dec
cli
mov
jbe
dec
or
aam
mov
add
sbb
inc
push
xor
jl
jno
idiv
xchg
stos
add
faddl
and
in
and
push
or
inc
xchg
mov
cld
rcl
jmp
sub
jl
lcall
dec
dec
inc
lds
dec
test
enter
inc
mov
mov
shll
jle
push
jmp
inc
lods
and
xchg
insl
sbb
inc
sub
ret
shrb
pop
sub
jnp
jno
ror
jecxz
xor
jno
outsl
hlt
loope
orb
and
insb
das
les
in
dec
sub
insl
popa
inc
mov
lea
sub
into
jecxz
jmp
and
cmp
pushf
inc
mov
insb
arpl
sub
cli
adc
push
mov
jg
data16
aaa
mov
arpl
insl
lret
fldt
jno
xor
jmp
cmpsb
imul
mov
cmpb
mov
lahf
mov
xor
fiaddl
std
ret
inc
testb
add
push
les
flds
push
mov
dec
or
jnp
addr16
test
cmp
push
je
mov
in
sbb
adc
js
or
ja
fsubl
adc
enter
or
xchg
jp
mov
outsb
pop
nop
push
mov
push
arpl
inc
dec
icebp
pusha
mov
cmp
push
outsb
xor
adc
int
aad
lret
mov
mov
mov
jmp
clc
mov
cs
sbbb
fnstsw
sbb
je
cmpsb
and
mov
push
mov
pop
xchg
ror
outsb
call
xchg
testb
jne
dec
or
data16
pop
cmp
fiaddl
shlb
or
out
and
add
or
push
out
int3
cmp
mov
dec
jb
jne
lcall
and
cmpl
xchg
cli
fwait
insb
mov
mov
xor
jno
and
pop
shll
mov
test
xor
xchg
shl
adc
mov
aaa
aaa
das
inc
jb
jbe
cmp
and
cmp
mov
inc
mov
lods
lds
pop
xchg
hlt
pop
orl
inc
push
hlt
mov
outsb
std
lea
sbb
repnz
add
movsb
sbb
push
ss
mov
push
inc
jae
icebp
ret
aaa
icebp
fs
push
scas
dec
xor
ret
add
ljmp
sbb
pop
jle
lds
inc
xchg
out
jns
cmp
mov
add
nop
xchg
and
push
enter
aaa
fldl
mov
pop
dec
dec
stos
aaa
aad
sub
mull
xchg
dec
push
jae
jns
pusha
push
popf
or
dec
out
push
sahf
push
sbb
lods
and
mov
cmc
int3
cmp
call
xor
ds
test
mov
xchg
mov
add
sti
push
dec
ret
clc
and
hlt
fimull
loopne
inc
add
mov
int3
dec
movsl
loope
xchg
orl
loop
insb
push
popf
pop
sarl
and
mov
imul
aaa
dec
sub
cmp
mov
int3
mov
fsts
pop
push
mov
sbb
sahf
aad
mov
jne
call
jp
gs
jae
jmp
lods
mov
mov
sbb
lcall
icebp
repnz
jmp
sbb
movl
pop
fdiv
scas
pushl
out
faddp
or
push
or
push
mov
dec
dec
arpl
or
xor
sub
pop
sarl
jecxz
xchg
imul
adcb
call
ficompl
adc
pusha
push
scas
pusha
adc
push
cmp
mov
fcomi
gs
ret
not
push
sub
scas
adc
adc
sub
cmpsl
mov
in
decl
add
hlt
push
es
xor
xor
aam
mov
shlb
cmp
nop
lahf
icebp
mov
xlat
push
jle
mov
rclb
inc
int
clc
in
pop
jl
and
aam
adc
lods
ss
sti
test
mov
cmc
push
jge
adc
sub
lods
dec
cli
dec
xchg
or
pop
jb
add
sbbb
imull
lods
xchg
xchg
jbe
stc
push
inc
test
lock
or
mov
ja
inc
call
dec
pop
in
sahf
mov
cli
out
push
mov
movsb
aad
xchg
std
mov
daa
jae
xchg
or
push
pop
mov
xor
and
push
fs
aad
inc
xor
leave
cmp
daa
mov
mov
adc
mov
les
push
call
dec
push
aad
xlat
push
xchg
repz
in
dec
call
cmpsb
jmp
dec
mov
in
shl
jbe
mov
xor
add
aad
sahf
push
cs
push
mov
dec
pop
jns
cmp
xchg
out
popa
push
cld
push
xchg
mov
repz
jg
rclb
mov
es
jne
cltd
ss
data16
push
std
loop
or
in
lock
push
pop
into
ret
popf
ficomps
lods
sub
xchg
push
les
arpl
sub
sbb
mov
data16
addr16
push
dec
lret
or
movsb
dec
cli
mov
mov
mov
pop
int
data16
mov
mov
jle
rcl
test
arpl
sahf
notl
ds
stos
ret
mov
dec
std
jmp
inc
js
or
xchg
xchg
add
sti
and
dec
sbb
lahf
icebp
aas
popf
fbld
sbb
dec
or
or
fstps
jp
rclb
pop
ret
sti
call
push
jns
lock
pusha
mov
add
or
xchg
jecxz
pop
js
adc
cmc
cmp
adc
mov
push
mov
jmp
das
nop
stos
clc
testb
mov
filds
add
sub
sub
shl
rol
sbb
cmp
ljmp
pop
ret
lea
addb
push
loopne
jmp
in
fs
insb
stc
aaa
fadd
push
andl
movsb
mov
xchg
jne
push
mov
clc
sub
dec
arpl
add
test
ljmp
cmp
mov
jecxz
push
pusha
fcomi
xor
mov
cmpsl
push
call
out
xchg
lcall
loope
mov
and
fstps
push
or
mov
jno
mov
and
mov
cld
mov
jmp
mov
lods
jge
and
adc
xchg
setbe
mov
adc
iret
shrl
xchg
shr
pop
dec
cli
imul
in
mov
stos
ds
mov
into
stc
add
leave
pop
or
adc
loop
fsubs
daa
in
jo
sbb
cmp
loopne
sti
cmpsb
or
sbb
out
push
aaa
xchg
mov
fidivs
pusha
int
stc
mov
mov
mov
mov
fstpl
divb
mov
mov
dec
mov
jae
loopne
ljmp
lds
xor
xor
daa
lret
and
adc
sub
jp
push
out
mov
mov
and
outsb
ret
testb
jns
dec
loopne
jno
jmp
sti
fwait
dec
sub
in
std
cmp
push
dec
sub
cltd
xchg
pop
sub
fwait
adc
test
hlt
inc
push
xchg
sub
push
pop
lcall
pop
jmp
jnp
movsl
stc
das
cmp
adc
cltd
mov
sbb
xchg
xor
sub
int3
sbb
cmp
jecxz
or
jg
shlb
cmp
lods
inc
test
lods
in
push
pop
fs
jmp
and
pop
and
lret
push
orb
test
mov
cmp
enter
sub
dec
rep
jg
imul
ret
xchg
add
fs
je
or
cmpsl
jnp
repnz
imul
neg
mov
jge
mov
sbb
data16
adc
ret
mov
cltd
mov
outsb
loopne
test
out
push
or
or
lods
jmp
pop
iret
imul
out
jmp
test
scas
stc
loopne
cmp
shlb
xor
dec
movsb
inc
pop
fwait
jmp
subb
popf
int3
mov
jo
cmp
jnp
lods
sbb
ficoms
data16
pushf
pusha
push
scas
int3
sarl
xchg
and
dec
test
aas
rorl
aaa
outsb
add
imul
nop
std
mov
mov
xchg
es
push
cmpsl
jnp
mov
js
add
je
fnstenv
jnp
lock
filds
mov
mov
jge
push
imul
cmovne
sub
jbe
cltd
insb
inc
scas
cmc
dec
or
notl
outsl
xchg
cmpsb
insb
mov
xor
fs
pop
mov
fistpl
adcb
inc
push
inc
shrb
xor
je
je
lahf
pop
add
push
ljmp
fsts
or
push
mov
mov
mov
in
addr16
inc
cli
push
pushf
inc
stos
and
inc
xor
push
ret
and
imul
inc
and
dec
imul
mov
pop
push
cmp
out
adc
jae
dec
inc
jp
push
adc
xchg
sbb
aaa
jge
hlt
sbb
or
xor
adc
scas
cmp
jge
mov
xchg
or
repz
out
jns
inc
les
pushf
outsl
out
adc
stos
fdivrp
test
cmp
jp
js
fdivs
cmp
mov
or
test
mov
sahf
xchg
mov
mov
xchg
dec
xor
jno
mov
fldcw
pop
outsb
divps
pop
outsl
mov
sahf
inc
rorb
pop
ds
sbbb
ret
shl
xchg
insb
pop
push
add
inc
inc
ljmp
sbb
scas
pop
fs
jg
in
mov
push
testb
adc
xor
aam
js
pusha
sahf
and
xchg
mov
loop
mov
aam
out
adc
les
adc
in
test
mov
xchg
sbb
leave
lahf
mov
and
add
fstpt
lock
in
fldpi
inc
jecxz
mov
pop
lahf
mov
test
xor
jle
shrb
dec
xor
or
sbb
repnz
xor
dec
pop
jle
push
mov
inc
sahf
sbb
aam
sub
das
flds
xor
cli
outsl
and
out
sbb
sar
test
dec
jnp,pt
inc
jge
into
mov
jecxz
or
and
das
jl
or
jecxz
xlat
movsb
lret
pusha
jae
js
loop
dec
sbb
loope
jecxz
xchg
jle
xor
dec
fimull
leave
ljmp
xchg
or
test
ret
mov
xchg
push
bound
sbb
push
sub
repnz
shrl
sbbb
jge
sbb
sbb
rcll
popl
push
xor
cmp
xor
lcall
iret
fiaddl
movsb
sarl
adc
xchg
cmc
arpl
xchg
add
sbb
jg
cmc
test
push
and
push
bound
xor
mov
pop
add
add
mov
ret
cmp
pop
mov
sub
xor
adc
rep
ja
cld
scas
sub
inc
cmc
sbb
xor
into
icebp
fldt
icebp
adc
xchg
and
fdivrl
jnp
sub
pop
leave
and
out
push
aam
dec
jge
inc
cmpsb
mov
icebp
jmp
jg
movsl
and
addb
movsl
add
add
pop
mov
and
es
jmp
insl
out
and
push
mov
jne
mov
mov
into
in
ficompl
pop
in
add
std
push
xor
aam
mov
dec
filds
push
inc
les
jp
ja
cmp
fmull
shrb
inc
in
shlb
fstps
xchg
js
stos
push
cmp
adcb
mov
pop
iret
push
pushf
sub
pop
test
and
sahf
les
inc
add
fstpt
lahf
adcb
cmpsb
in
dec
insl
inc
mov
cmpsb
add
pop
xor
int
mov
and
xchg
mov
sub
sbb
stc
xchg
lds
cmp
mov
mov
lcall
outsb
pop
test
shlb
push
or
lret
mov
call
mov
adc
aam
adc
add
iret
test
repz
mov
je
sbb
shlb
pop
pop
daa
xchg
repz
cmp
pop
adc
or
lds
rcll
inc
dec
dec
les
orl
dec
xchg
fsubrl
sub
adc
mov
int3
push
int3
jp
dec
add
das
jmp
xchg
aaa
pop
sub
lea
push
out
cld
cmpsl
or
dec
mov
ja
arpl
imull
stos
rorb
jle
cwtl
sbb
jo
jnp
int
push
mov
sbbb
leave
mov
enter
jo
sbb
xchg
push
hlt
movsl
outsb
xchg
dec
mov
mov
mov
xchg
shll
sub
mov
lcall
jp
lret
stc
xor
mov
enter
sub
jnp
jg
dec
bound
jmp
pop
cmova
lods
cmp
xor
in
frstor
out
rep
push
enter
push
mov
jge
mov
xchg
sub
cmc
scas
subb
js
sub
pusha
sub
mov
mov
sbb
mov
jle
enter
cmp
pop
neg
xchg
insl
push
jecxz
pop
add
mov
ret
test
xchg
pop
xchg
push
dec
cmp
or
stc
div
lds
ficomps
xchg
push
lcall
mov
jecxz
inc
dec
inc
shlb
lret
repnz
imul
mov
push
pop
xchg
cmp
mov
ret
cmpsl
les
aad
cmp
mov
cmpsb
xchg
cs
mov
mov
fidivrs
rolb
jb
or
xor
lods
push
sbb
mov
cwtl
fistps
xchg
mov
xor
bound
sub
movsl
int
test
lds
add
test
imul
xchg
sub
popf
mov
adc
fsubl
cmp
sub
xchg
arpl
jae
andb
jl
test
ret
xor
cld
sbb
push
das
dec
pop
adc
out
push
jmp
test
call
xor
lret
loop
dec
jne
add
mov
mov
adcb
cli
iret
and
push
sub
push
outsl
inc
dec
mov
dec
or
push
sub
test
sub
jge
push
mov
push
sbbl
jecxz
cli
xor
enter
inc
and
js
outsl
ds
pop
out
ss
lret
mov
add
and
insb
xorb
cmp
jns
sahf
rclb
xchg
push
mov
jno
jmp
sbb
call
popf
jo
into
lret
xchg
push
add
nop
rcll
mov
lock
jp
hlt
cld
push
mov
mov
mov
fs
xchg
xor
mov
fwait
add
or
cmp
push
xchg
jmp
ss
jmp
xor
sbb
push
shlb
dec
mov
je
mov
sbbl
rcl
xor
inc
movsb
mov
xchg
in
mov
push
outsb
int3
xor
lea
add
aam
add
nop
imul
fnstsw
loopne
mov
inc
add
or
mov
jmp
mov
jmp
jmp
adc
push
movsl
xchg
insl
sbb
lret
ss
pop
in
pushf
jnp
and
xchg
repnz
cmp
rclb
xor
sti
imul
je
insb
jmp
cmpsl
lds
fistpl
ficompl
xchg
jmp
or
out
addr16
and
int3
in
push
xchg
lods
or
int
jnp
sub
std
pop
add
pop
or
cmp
jno
shl
scas
sahf
adc
xor
in
fadd
mov
in
sub
xchg
sbb
movsb
fists
rcll
xchg
lret
xor
add
or
stc
jge
std
mov
les
inc
xchg
fs
cli
xchg
enter
int3
std
out
out
test
push
scas
mov
or
lock
lahf
lock
inc
push
add
jg
push
stos
adc
int
dec
cmp
and
cmpsb
jo
xlat
push
inc
dec
in
mov
movsl
stc
dec
xor
dec
sti
mov
enter
sbb
mov
jmp
loop
dec
adc
mov
push
insl
push
push
mov
mov
mov
sbb
lret
icebp
inc
xor
les
xchg
fdivr
add
cmp
xchg
pop
cwtl
push
inc
lods
sub
jmp
leave
in
or
push
or
out
insl
aad
jbe
mov
popa
jbe
push
popw
and
push
popa
push
add
add
int
or
fmull
ds
sbb
iret
sub
dec
lea
clc
icebp
xchg
mov
dec
add
fisttps
mov
cwtl
cltd
fsubrl
cli
mov
push
ficompl
mov
fnstsw
mov
sahf
je
lods
xor
test
jge
and
lock
push
outsb
enter
cld
out
xor
popf
stos
rcr
push
mov
cmp
call
push
jmp
fs
adc
push
jecxz
lret
pop
dec
sub
fisubs
mov
and
inc
sahf
xorl
fcmove
and
shrb
inc
movl
mov
leave
inc
pop
push
mov
jl
pushf
outsb
xor
sub
push
sub
mov
mov
pop
loop
mov
jnp
mov
mov
inc
mov
mov
out
xor
dec
pop
mov
arpl
cs
mov
jecxz
cmp
add
fwait
mov
and
dec
jecxz
sbb
jo
cmp
inc
pop
inc
mov
test
cmp
adc
pop
xchg
dec
iret
xchg
jns
pop
fdivrs
test
dec
sbb
push
testl
test
popf
gs
sbb
mov
sbb
lods
popa
out
jge
fidivl
add
cmc
sub
mov
dec
mov
jnp
xchg
pop
aaa
stc
stc
inc
enter
cmpsb
mov
jae
jnp
jne
inc
pop
jge
cmp
jno
adc
inc
mov
stc
cmp
or
outsl
and
and
shlb
push
xchg
push
push
or
fs
dec
test
out
insl
sbb
scas
cmp
test
cltd
jno
data16
jmp
push
fdivs
dec
mov
sarl
rolb
mov
lret
cwtl
jo
dec
push
testl
dec
lcall
out
jbe
lods
imul
xor
lods
dec
loopne
cmp
lods
cmc
int3
sbb
jle
xchg
ds
sbb
inc
xor
in
mov
xor
jle
sahf
fwait
and
xor
fists
sbb
mov
ja
jl
sbbb
mov
sub
fists
cli
imul
aaa
aad
mov
or
addr16
push
mov
mov
adc
in
xchg
add
adc
leave
scas
dec
inc
pop
pop
iret
mov
and
xor
sbb
cmp
jae
lret
es
lods
inc
lret
xchg
inc
leave
xchg
pop
sub
test
pushf
aaa
inc
inc
jbe
jge
sub
and
adc
vmwrite
cmp
pop
out
subl
fstpl
aaa
mov
mov
inc
dec
add
mov
push
and
into
ss
mov
mov
xchg
jo
pop
and
mov
push
cmp
push
add
xor
daa
jnp
sub
mov
outsb
pop
mov
adc
sbb
ljmp
and
in
js
xor
mov
xor
out
and
lods
pop
dec
loope
jmp
fsubr
popf
in
mov
dec
jl
adc
xlat
lds
inc
mov
dec
jno
jg
adc
push
mov
jb
decb
int3
hlt
push
or
sub
jecxz
xchg
mov
imull
fs
cmpsb
pop
aad
jmp
or
repz
mov
ds
inc
or
mov
stc
cld
sub
arpl
js
pusha
jns
mov
cmp
push
test
mov
jecxz
out
push
loope
popf
dec
rcll
push
test
jo
inc
mov
jp
aas
lret
dec
es
aaa
stc
push
mov
ja
jp
adc
sub
add
push
ret
das
insl
lock
test
cmpsl
lcall
xchg
ja
sbb
sbb
loopne
cmp
stc
popf
mov
push
aam
imul
sahf
push
xor
and
cmp
jnp
mov
or
xchg
ret
mov
push
out
insl
out
inc
andb
sub
dec
jnp
dec
and
sbb
push
fs
ret
xor
rcl
lahf
xchg
push
dec
sahf
movsl
inc
jp
movb
mov
andb
pusha
cmpl
dec
pop
mov
xchg
iret
adcb
mov
movsl
and
cmpsb
imulb
insl
cmpsl
shlb
scas
lods
mov
shll
sbb
and
mov
cmp
outsl
outsl
in
icebp
xchg
jp
add
popf
push
fimuls
xchg
dec
jno
push
cmpsb
cmpb
test
loop
dec
sbb
test
icebp
fabs
pop
jg
lahf
push
arpl
mov
adc
jmp
std
sbb
xor
push
jnp
sti
outsl
xchg
stc
rorl
arpl
fadd
scas
jecxz
xchg
xchg
loopne
repnz
or
adc
ss
xlat
inc
pop
and
sbb
push
jbe
cmp
inc
dec
fadds
pop
mov
cmpsl
and
in
in
sub
pushf
push
pop
into
lcall
or
in
mov
xchg
add
sub
push
jbe
sbb
jne
loope
dec
test
cmpsl
or
inc
or
push
movsl
dec
out
sbbl
sub
cld
jmp
cmpsl
cli
xchg
stos
mov
jp
push
cwtl
hlt
add
cltd
ljmp
xor
inc
repz
adc
aam
cmp
divb
decl
push
xor
out
and
nop
into
mov
jns
mov
mov
arpl
pop
mov
mov
subl
fsubp
mov
jecxz
loope
add
mov
mov
and
f2xm1
xorb
adc
frstor
push
mov
mov
in
jns
push
adc
jecxz
iret
pushf
nop
nop
jp
je
jno
scas
fwait
in
sub
cmpsl
sbb
mov
divl
popa
fcomps
inc
call
call
push
mov
addr16
int
cmc
test
js
dec
sti
xlat
shl
fsub
push
or
cmp
jle
je
dec
cmc
test
int3
mov
fimull
std
fidivrs
pop
cmc
stos
out
sub
mov
xor
mov
xlat
xorl
push
mov
stos
fistpll
ret
jb
xchg
in
into
jmp
shll
pop
mov
cmp
add
enter
mov
cmc
sti
subl
push
xlat
dec
or
mov
stos
out
test
stc
and
pop
pop
xchg
ljmp
enter
xor
push
xchg
popa
sub
sub
repz
mov
pop
cmp
adc
jae
mov
test
sub
inc
and
push
pop
adc
mov
je
call
and
mov
and
mov
mov
dec
pop
xchg
popl
xor
adc
adcb
jp
ss
ret
push
out
fsubs
shr
aas
xor
je
test
rorl
push
xchg
je
lock
stos
xor
jecxz
movsl
data16
mov
push
mov
push
pop
in
lret
jmp
aas
sarl
out
movsl
inc
inc
sub
jecxz
data16
sti
daa
decb
fstps
daa
out
xlat
xchg
push
das
popa
mov
push
popf
mov
popf
cmp
cmp
add
xor
jbe
add
hlt
je
pop
xacquire
leave
jg
xchg
dec
rolb
dec
enter
adcl
inc
sarb
pop
xor
push
int3
sbb
push
xor
xchg
movsb
jmp
pop
cmp
jge
sbb
lods
adc
stc
andl
subb
ja
fildll
frstor
dec
or
movsl
ds
jno
mov
or
pop
in
sbbl
push
mov
loopne
addr16
pusha
aad
nop
xchg
repnz
push
sub
js
call
pop
int
lret
xchg
jmp
in
mull
ja
inc
sbbl
cmp
mov
repnz
scas
iret
and
mov
scas
rcr
ja
in
mov
cmp
rdtsc
int
clc
and
mov
lods
xlat
mov
dec
dec
scas
popa
iret
dec
jae
fadd
push
in
in
pop
push
xor
mov
pushf
ljmp
mov
nop
pop
fwait
jno
pop
popf
jnp
push
cltd
out
insb
inc
outsl
je
inc
mov
in
pop
push
arpl
sub
jae
xchg
pop
pop
mov
jg
mov
call
xchg
xchg
lcall
sarb
les
push
movsb
inc
sub
repnz
adc
mov
call
pop
roll
jae
rcrb
xor
gs
rcrl
and
xor
sbb
sbb
lret
and
mov
mov
mov
lods
test
push
push
pop
out
gs
mov
mov
mov
and
cmp
push
gs
add
loop
fimuls
mov
movsb
aam
iret
aam
jns
dec
inc
dec
mov
je
cld
mov
stos
in
xor
or
sbbb
pop
or
ret
repz
lods
ja
mov
sub
les
dec
or
xor
insb
add
push
adc
dec
xor
sbb
shll
push
ret
or
inc
test
andl
sub
push
aad
fstps
cmp
push
cmp
movsl
test
jns
mov
inc
and
iret
adc
inc
shrb
loope
idivl
sbb
adc
je
xchg
xchg
inc
bound
lret
mov
mov
cs
xchg
mov
or
outsl
pop
mov
push
jno
pop
mov
mov
xchg
or
mov
insl
or
pusha
xchg
or
mov
out
mov
aas
cmp
nop
loope
and
sub
pop
enter
pop
xor
fdivs
arpl
js
daa
sub
test
and
fwait
push
jl
cmpsb
adc
add
std
push
jl
or
xor
ror
hlt
xchg
mov
mov
pop
inc
push
push
mov
inc
cwtl
sub
aam
into
adc
push
mov
and
fldl
dec
stc
movsl
dec
jo
add
test
push
out
pop
insb
xor
call
pusha
jg
cwtl
stos
popf
adc
dec
cmp
or
mov
ret
jne
push
or
or
jno
dec
fists
outsb
hlt
js
cli
popa
enter
adc
lret
data16
ror
xchg
daa
loopne
shll
push
test
test
or
xlat
out
adc
outsb
cmc
and
lds
insl
insl
jp
sbb
fwait
inc
ljmp
or
jg
sbb
adc
bound
sahf
inc
ds
in
xor
aam
sbb
lock
std
shll
lock
ficoms
sub
adc
bound
in
and
push
cmc
stos
aam
inc
sahf
add
cmpsl
mov
in
out
stos
jg
mov
int
mov
inc
mov
les
movl
pop
sub
jle
fcmovnb
nop
lret
iret
push
adc
das
dec
cld
stos
mov
mov
cmp
dec
add
pushf
jnp
pop
and
jmp
imul
sub
push
dec
adc
xor
pop
pop
test
ret
std
mov
scas
sti
dec
pusha
or
jp
push
adc
fcoml
fcmovnb
clc
fbld
xor
jle
inc
bound
adc
and
xchg
mov
and
popa
xor
jne
cmp
ret
call
cmp
xor
mov
jae
lods
add
xchg
mov
idiv
push
lcall
movsl
fnstcw
dec
loope
cmp
aas
pop
js
pop
test
pusha
and
loope
dec
cwtl
pop
add
dec
sbb
fidivrl
clc
jle
inc
orb
aas
mov
mov
add
out
sub
cld
stos
out
push
and
clc
inc
jge
adc
sti
fmuls
mov
push
pop
lods
pop
cmp
clc
test
xchg
cmp
icebp
les
xlat
inc
or
sub
loope
rcl
mov
add
pop
mov
sbb
shlb
rorb
pop
or
ja
ja
pusha
cmpsb
fistpl
push
subl
push
gs
mov
arpl
adc
in
add
ret
clc
mov
add
loop
jae
stos
xchg
outsb
sarl
jnp
xchg
cmp
stos
leave
jns
pop
xchg
xor
popf
rcrb
cmp
adcb
inc
test
ds
and
sub
outsl
jo
in
loope
add
les
in
mov
lret
cmp
repnz
lods
push
shrl
mov
add
add
into
insl
fmull
daa
dec
addl
mov
jns
rol
shrb
and
jecxz
insl
fdivrs
cmp
add
pop
cmpsb
sti
fisubl
inc
mov
push
and
or
xor
lret
mov
or
sub
ud2
sbb
inc
fists
insl
jno
out
sub
push
or
ret
push
lods
pop
jmp
sarl
das
mov
push
dec
mov
cmp
and
pop
sub
push
xchg
jne
mov
push
jp
test
inc
repnz
loopne
pop
fisubrs
cmc
cs
shll
inc
negb
push
cltd
dec
imul
mov
sub
add
pop
bnd
mov
mov
call
xchg
sub
xchg
jg
stc
dec
divb
aas
sti
push
pop
repz
sub
in
pop
cmp
lret
sti
movsl
cltd
jle
sub
sbb
jl
data16
xchg
in
xchg
aas
xor
in
pop
outsb
pop
adc
aas
rorl
mov
pusha
and
iret
mov
jnp
dec
test
push
aaa
inc
and
cmpsl
add
mov
mov
insl
lods
pop
inc
les
or
int
xor
mov
rolb
dec
mov
lea
leave
fstpl
cmc
jecxz
jo
ret
mov
adc
jae
adc
mov
nop
mov
lds
adc
dec
jecxz
xchg
dec
pop
stos
gs
in
jl
ret
mov
push
adcb
fdivs
sarb
jmp
xchg
add
lds
jle
negb
lods
cmpsl
pusha
push
into
pop
sub
pop
int3
push
outsl
inc
xchg
hlt
pop
cwtl
enter
mov
ja
incl
decb
push
push
call
test
dec
popf
jnp
fwait
idivl
sub
xchg
les
mov
lock
push
xchg
in
mov
xchg
dec
mov
sahf
xor
adc
push
or
mov
addr16
mov
jg
mov
call
daa
or
inc
push
fcmovnbe
adc
test
sub
pop
hlt
js
xor
pop
xchg
outsl
fiaddl
das
call
mov
xchg
test
bound
data16
scas
pusha
call
mov
ror
mov
push
lds
mov
add
fmuls
cmpsb
stc
out
xchg
data16
orb
or
jno
fimull
inc
push
or
jo
lea
push
test
mov
testb
std
sub
jg
dec
leave
push
lcall
dec
mov
push
dec
xor
and
fldt
jo
das
loope
push
mov
in
mov
jne
jle
inc
adc
cmpl
jmp
loop
outsl
xor
andnps
aas
ret
mov
xor
push
jns
or
add
adc
jb
xor
movsb
outsl
imulb
negb
mov
lahf
aad
xor
lcall
addl
pop
push
and
xor
push
mov
dec
shll
and
mov
push
push
ret
inc
shrb
mov
js
xchg
mov
sbb
in
or
jmp
rcl
sbb
xchg
sbb
add
sbb
xchg
sub
andb
jbe
and
in
shlb
in
mov
inc
int3
cmp
hlt
movsl
es
int3
jmp
sti
ret
lods
pop
sub
mov
daa
or
mov
sbb
ljmp
mov
inc
mov
mov
out
rcl
cltd
jmp
fsubs
sub
rorl
mov
in
xor
pop
cmc
mov
mov
xchg
cmpsl
mov
orb
ret
mov
mov
lret
mov
xchg
cmp
lea
sbb
pushf
lret
aad
fwait
pusha
dec
mov
adc
pop
hlt
ss
clc
sub
or
jle
icebp
ss
sbb
push
test
xchg
xor
xor
and
jl
lock
jle
inc
test
mov
xor
loopne
jge
sar
test
scas
fiaddl
cmp
jns
ret
inc
lock
dec
jne
mov
fildl
ja
shll
mov
adc
lret
xchg
jae
sbb
mov
movsb
iret
shrb
iret
jge
dec
inc
insb
xchg
xchg
fnstcw
jne
outsb
stos
scas
cmp
fildll
jb
dec
mov
mov
lods
push
arpl
pop
stos
ds
enter
jno
repz
xor
fsubrl
pop
push
cs
jno
or
jne
std
sub
pop
xor
lock
push
and
cmpsl
stos
pop
pop
add
xchg
cmp
outsb
jp
adc
es
jo
push
fwait
push
sbb
fwait
add
fisubrl
push
ds
addr16
dec
or
das
mov
int3
fisubs
xchg
in
adc
daa
lods
lea
ret
xchg
cli
pop
pop
mov
out
push
ja
xchg
jno
jmp
adc
js
sbbb
jne
int3
outsb
lock
cmpsl
or
movsb
mov
add
xchg
shrb
aas
or
gs
mov
mov
fists
mov
js
call
out
push
jno
scas
add
or
addr16
push
iret
mov
fildll
sub
js
add
or
push
movsb
popa
fs
cmpb
jle
add
adc
push
out
pop
fistps
dec
jge
imul
out
cltd
adc
dec
cltd
pusha
cmp
shl
or
and
pop
add
cs
fwait
notb
add
ret
and
je
lods
filds
fdivrl
out
push
in
jp
inc
push
inc
adcb
push
pop
ja
inc
sbb
aam
popf
mov
push
add
mov
and
inc
or
jb
sahf
ficompl
shll
cli
movsb
mov
and
sbb
xor
cli
js
aad
cmp
fildl
sub
out
jbe
fcmovnbe
dec
stos
ljmp
hlt
adcb
push
jmp
push
enter
dec
add
mov
stos
mov
mov
jge
cmpsl
loope
pop
inc
adc
outsl
aas
andl
aad
mov
movsb
out
js
xchg
dec
pop
idivb
sbb
outsl
test
or
sbb
mov
imul
es
fwait
xchg
xchg
xlat
cmp
lcall
sub
mov
adc
movsb
cmc
clc
cmp
cmp
xor
jbe
push
push
repz
jge
mov
jl
test
mov
pushf
mov
xchg
arpl
shrb
mov
add
jno
cltd
fmull
clc
into
clc
jle
mov
jae
lods
jp
or
lods
pop
loope
mov
les
sub
xchg
xor
fidivl
sti
lds
stos
int3
pop
cmp
std
jae
push
sarl
push
inc
arpl
repnz
mov
scas
push
lock
sbb
sti
jbe
testl
mov
loop
cmpsb
and
pop
jp
cmpsl
mov
lret
test
mov
push
in
adc
imul
out
movl
sti
jle
xor
out
mov
test
push
xor
js
xchg
mov
mov
and
cmp
inc
xor
std
adc
in
mov
out
cmpl
sub
dec
jae
movsb
fs
dec
sti
push
hlt
and
sbb
aad
xor
outsb
aam
popa
adc
ljmp
mov
test
aaa
in
jbe
outsl
push
into
cli
inc
xchg
clc
jp
xor
test
ret
hlt
and
lods
repnz
int
outsl
andl
aas
sarl
cmpsb
lods
lods
lret
jnp
dec
in
mov
nop
iret
mov
fsts
sub
psrlq
and
sub
mov
sbb
xlat
add
insb
cmp
sub
add
add
int
cmc
ds
sub
inc
mov
out
cmovnp
or
xchg
adc
filds
cmp
stos
jl
imul
jb
xchg
add
pusha
jl
fmul
in
out
mov
jmp
stc
clc
out
pop
and
xchg
push
test
std
push
inc
sarl
mov
pop
or
add
push
or
inc
add
pushf
push
push
dec
lds
sbbb
and
mov
imul
jne
loopne
or
ror
add
mov
data16
dec
mov
jns
jg
imul
leave
sahf
ret
xor
sbb
xchg
stos
xor
push
cmp
pop
scas
sub
cmp
or
mov
and
mov
jl
stos
pop
aas
rclb
jge
inc
pushf
add
sub
aaa
sub
adc
lds
jbe
in
leave
stc
test
dec
pop
xor
mov
int
or
test
push
sbb
pusha
dec
sbb
xor
insl
xchg
cltd
inc
push
push
pop
test
pop
decb
into
jne
mov
cmpsb
daa
cli
add
mov
pop
sub
repz
add
es
sbb
fsub
mov
out
fwait
and
test
push
lea
dec
mov
je
ss
sub
mov
mov
push
ss
ss
mov
pop
fimuls
test
cmp
rclb
imul
xchg
adc
inc
imul
and
sub
dec
out
sub
ljmp
xor
xchg
mov
idivl
hlt
stc
lock
std
stos
cwtl
adc
cmc
mov
addl
inc
in
sub
cmpsb
add
adc
pop
out
stos
in
in
and
aas
fnstenv
xchg
mov
rorl
out
adcl
mov
xchg
out
subb
cmpsl
pop
bound
imul
xchg
adc
pop
xorb
mov
movsl
dec
cmpsl
dec
mov
sbb
stc
pusha
bound
add
xor
sub
mov
lahf
add
ljmp
faddl
test
scas
adc
jne
or
jns
cmp
xchg
fs
xchg
nop
dec
int3
lea
mov
mov
sbb
and
mov
movsl
jo
inc
and
or
jbe
repnz
and
mov
or
aaa
sbb
and
sbb
inc
sub
adc
adcb
ret
xlat
out
and
cmp
adc
in
dec
push
fstpt
xor
cwtl
pop
inc
test
mov
fwait
inc
fwait
mov
jmp
push
or
add
test
mov
daa
std
imul
bound
cmp
bound
jle
xchg
loope
pop
mov
sbb
jg
mov
aam
xor
sbbl
daa
and
fidivrl
jge
pop
data16
enter
pushw
scas
mov
iret
out
pop
push
xor
fistps
xchg
sub
mov
add
inc
jbe
dec
mov
sbb
inc
xlat
add
adc
aas
lock
ret
add
cmp
pushl
stos
cmp
jb
rolb
xchg
sahf
imul
cmp
jae
push
jle
int
jns
scas
mov
inc
repnz
outsb
sti
test
mov
mov
sbb
mov
mov
loope
mov
mov
push
arpl
adc
jmp
mov
cmp
data16
fdiv
std
xor
dec
inc
and
pop
adc
dec
jmp
jp
sbb
lcall
je
xlat
inc
rcr
adc
ljmp
or
xchg
and
inc
fwait
jmp
in
jp
in
pop
loope
shlb
push
xchg
loope
pop
and
int
icebp
and
xorb
xchg
jno
lea
ficoms
loope
adc
jno
insl
pop
outsb
xchg
arpl
jg
push
mov
push
shrb
and
xchg
stos
add
jo
push
jnp
inc
loopne
dec
rorb
cmp
out
pop
stos
push
sub
cli
sbb
stc
and
jge
adcl
jne
jp
adc
xor
jmp
cmpl
push
cmp
sub
mov
out
and
and
add
xchg
mov
push
data16
push
add
into
sbb
mov
add
inc
push
arpl
adc
test
cmpsl
loopne
mov
data16
cmp
dec
dec
xor
fs
arpl
pop
lea
fnstenv
repnz
jne
repnz
mov
xor
cmp
push
mov
loopne
mov
mov
sbb
pop
xor
int
push
pop
dec
jl
ja
and
or
sub
xor
adc
ss
dec
out
jne
sub
mov
clc
cmp
cmpsl
icebp
push
dec
add
pop
sbb
and
push
popl
push
and
add
das
mov
add
pop
das
lret
mov
adc
in
xchg
cli
sub
call
aas
pusha
pop
shll
and
xor
in
gs
pop
daa
push
push
fdivs
and
mov
aaa
sbb
pop
or
enter
cmp
enter
inc
fsts
xchg
outsl
insb
pop
or
test
dec
cmp
fimull
add
out
sub
pop
and
pop
aas
dec
fimull
jl
rcl
cmp
mov
lds
in
ret
loopne
test
js
mov
adc
jno
sub
in
js
scas
push
int3
or
out
cmp
mov
ror
outsb
mov
aaa
cmp
icebp
pushf
gs
pop
ja
push
push
in
mov
mov
cmp
mov
test
mov
inc
pop
sbb
pop
xchg
cmp
cld
xor
mov
imul
and
xchg
subb
out
std
stos
inc
imul
xor
stos
pop
adc
shl
push
jmp
jge
or
or
dec
adc
outsb
xor
cs
push
jle
cmp
xor
push
xchg
flds
int
push
mov
mov
into
xchg
test
nop
ds
pop
and
ret
lcall
mov
mov
cmp
imul
out
lods
leave
loope
cmc
idivb
call
in
ljmp
std
cmp
jmp
dec
cmpsb
js
cmp
filds
dec
add
fists
or
cs
adc
inc
jbe
lret
scas
sub
pushf
cmc
in
dec
ret
mov
jo
mov
push
sbb
mov
cmp
outsb
ja
jnp
pop
sbb
shrl
lock
inc
dec
testl
mov
imulb
enter
popa
dec
jbe
in
enter
mov
cmp
mov
dec
cli
xchg
in
lods
js
pop
sub
push
mov
pop
shll
pop
cmpsl
mov
test
pop
xor
je
insb
insb
or
mov
je
lods
das
xor
rol
mov
imul
fbstp
cmp
or
enter
mov
cmp
dec
mov
shr
aam
icebp
or
inc
test
jl
xor
xor
inc
int
inc
gs
xlat
push
nop
and
sbb
push
jp
pop
dec
mov
pop
fwait
adc
pop
push
xor
int
lret
fstpl
lret
mov
jl
push
daa
sub
lods
cltd
xchg
sub
shlb
nop
jmp
cltd
jp
inc
stos
inc
lds
jae,pt
or
jae
jle
int
sbb
test
xchg
mov
push
pop
xchg
push
sub
jle
xchg
frstor
mov
mov
test
adc
inc
mov
clc
lahf
lahf
inc
xlat
aam
add
mov
mov
out
sub
test
daa
mov
sbbl
inc
cwtl
shlb
call
push
mov
aas
das
xor
inc
insb
push
lock
shlb
pop
pushf
imul
mov
inc
push
inc
sbb
mov
out
xchg
out
mov
popa
dec
inc
fldl2t
iret
xor
add
fsubrl
pop
stos
addr16
jecxz
lret
mov
cmp
int
xchg
roll
mov
sub
adc
mov
push
shlb
cmp
xor
jne
mov
sbb
sub
fdivl
adc
test
ja
mov
cmp
out
fwait
sbb
cmpsb
sub
hlt
mov
push
add
mov
ljmp
int
cmp
outsb
inc
jns
stos
aaa
inc
adc
dec
lahf
inc
leave
and
fstl
push
test
sub
adc
repnz
mov
pop
in
mov
mov
inc
sub
cmpb
sub
inc
push
and
dec
pusha
inc
scas
clc
outsl
ret
mov
push
lock
nop
dec
dec
pop
inc
pop
mov
xlat
push
add
daa
out
mov
lods
cmc
nop
dec
sub
adc
xlat
stos
cmp
int3
lahf
push
mov
jae
jecxz
dec
push
pop
xchg
jb
sbb
sbb
add
push
cltd
sub
push
inc
jns
mov
fxam
filds
aad
xchg
sbb
pusha
ret
popa
andl
cmp
lods
push
stos
bound
in
xchg
sti
fldcw
adc
cmpsb
jbe
cwtl
lret
test
mov
push
aaa
aam
iret
xor
mov
push
or
out
jb
imul
mov
ret
add
dec
xchg
inc
push
pop
lock
and
int3
inc
xrelease
pop
sbb
lahf
nop
mov
sti
push
insb
out
mov
pop
inc
cmc
mov
xor
and
mov
mov
lret
mov
push
loope
jge
dec
xor
popf
jl
test
xchg
sbb
fwait
inc
mov
dec
mov
and
pop
data16
cmp
insl
adc
in
pop
dec
ss
adc
inc
lods
lds
add
inc
xchg
xor
hlt
addl
lret
dec
adc
pop
js
fldcw
out
inc
bound
cmp
stc
inc
mov
pop
jp
or
aam
cmp
fldenv
inc
cmpsl
cmc
daa
rol
cmp
cld
notb
stc
aas
add
jno
into
add
cs
push
outsb
sbbl
lret
xor
sbb
out
cmp
xor
mov
outsb
lock
pop
sbb
mov
icebp
in
ret
fnstsw
ljmp
cld
mov
push
jae
scas
dec
pushf
xlat
xchg
xor
xor
mov
add
lods
mov
stos
fbld
shll
pop
ljmp
cmc
orl
sub
mov
xchg
std
insb
inc
or
mov
clc
rolb
mov
jnp
test
lods
pop
dec
cli
jnp
hlt
or
sbb
ljmp
mov
pop
and
sbb
or
arpl
jns
ds
insb
test
test
mov
pusha
cli
fdivrp
pop
outsb
rorl
sbb
imul
xchg
lret
test
daa
test
or
pop
adcl
ja
jns
ret
push
inc
pop
lea
sub
movb
leave
push
sub
push
hlt
jb
out
imul
adc
roll
fldenv
fcmovne
les
adc
cld
push
mov
shll
dec
xchg
mov
xor
and
addr16
inc
ds
ljmp
mov
test
dec
push
or
lea
outsl
mov
shlb
xor
lea
rorb
pusha
clts
sarl
sub
test
aam
mov
mov
add
jle
adc
insl
jle
inc
lcall
arpl
jecxz
stc
push
into
lods
scas
or
xchg
test
std
fld
and
stos
in
ret
ret
imul
or
aad
inc
inc
pop
mov
loope
dec
push
jge
test
pop
sub
pop
add
stc
cmp
insl
mov
push
sub
test
outsb
stos
and
in
pushf
add
in
int3
or
lret
ljmp
mov
xchg
sbb
test
or
repz
andl
lret
push
cmc
addr16
test
xlat
movsl
shl
dec
mov
test
mov
xchg
jg
dec
cld
sgdtl
xchg
or
mov
jne
mov
dec
mov
fwait
xor
sbb
push
push
xchg
add
popa
push
mov
pop
out
jbe
push
mov
addr16
xor
pop
jnp
mov
mov
jle,pn
daa
addb
mov
loop
push
ret
cmp
divb
inc
xlat
jno
icebp
lahf
mov
fstps
add
mov
es
add
scas
or
stos
sub
mov
fwait
movl
add
xchg
push
jne
cli
and
sub
adc
out
inc
and
add
fs
and
aam
inc
push
shl
ss
in
ja
ljmp
es
ret
jmp
fstpt
push
mov
out
cmc
mov
xchg
dec
mov
jg
inc
mov
xor
daa
incb
scas
fcomps
je
movhps
outsb
xchg
jge
outsb
aam
or
adc
lret
enter
mov
das
ret
pushf
ss
mov
imul
sbb
cmpl
sbb
int
cmp
and
daa
mov
notl
xor
pop
clc
cmp
sti
test
cltd
pop
mov
inc
push
lods
in
mov
push
arpl
mov
inc
roll
lret
inc
aam
pop
jecxz
out
aaa
pop
mov
out
lahf
ja
mov
jo
addr16
movsl
sbb
lds
fimuls
mov
imul
dec
out
dec
test
notl
clc
xor
and
stos
rorb
int3
sbb
dec
test
movsb
fstps
cltd
jge
stc
fidivrl
jo
jecxz
push
cmpsb
sub
jg
iret
mov
out
sbb
mov
adc
push
shl
call
adc
movsl
loopne
lods
dec
lea
stos
mov
xor
sarl
or
fistpl
mov
sub
lods
pop
xchg
pop
sub
dec
add
xchg
stc
popf
pop
in
jns
cltd
add
aam
popf
adcb
sbb
push
mov
sahf
adc
and
loope
aad
out
xchg
lea
arpl
out
pop
and
cmp
push
lock
enter
add
out
add
cmp
lods
adc
jno
lret
inc
iret
sub
int3
test
sti
dec
push
jmp
adc
js
sbb
pop
fcompl
out
inc
outsl
jne
add
mov
cmpsl
mov
jge
std
ja
icebp
sbb
sub
movsl
inc
stos
movsl
xchg
jg
jnp
jns
lret
pop
in
or
jmp
jmp
inc
rorl
xlat
or
enter
fcomp
testb
in
mov
fsubrs
nop
or
sub
test
dec
jnp
insb
mov
daa
cmp
stos
loope
negl
push
test
sbb
mov
jle
fs
repz
xor
add
and
lods
in
push
sahf
inc
cmp
xchg
in
sub
push
or
and
in
push
mov
add
enter
stc
insl
mov
fdivr
pop
sub
dec
mov
push
and
into
jecxz
es
cmpl
test
cld
mov
and
jge
add
jo
fs
dec
mov
sub
outsb
jmp
pop
push
cwtl
dec
je
scas
je
arpl
cmp
adc
enter
cmp
lcall
or
popf
shr
ror
aad
aaa
arpl
or
sbb
test
jg
pop
int
stc
fidivl
xlat
lods
jmp
sub
jge
sbb
mov
in
loop
es
dec
xor
jo
xor
adc
or
clc
add
lahf
cs
xchg
pop
mov
ret
in
lds
sete
mov
imul
adc
daa
push
add
lret
repz
popf
push
mov
in
loop
fs
jecxz
sti
adc
add
rorb
or
fwait
in
mov
push
mov
ret
ficoml
dec
mov
mov
into
or
mov
mov
cmpsl
dec
mov
jo
mov
pop
idivl
xor
push
stos
inc
mov
lret
and
std
mov
push
push
cmp
sti
pop
dec
daa
push
or
mov
pop
loope
push
lret
push
nopl
andl
push
inc
or
inc
jo
ljmp
inc
iret
inc
aam
jns
sub
jne
dec
loopne
cmp
mov
mov
sbb
cmpsl
dec
int3
push
and
mov
mov
std
jbe
and
dec
shlb
arpl
cmpsl
jp
pop
cmp
cmpsl
xor
mov
mov
dec
ficompl
push
xchg
clc
outsl
test
jp
sbb
outsb
dec
hlt
sti
in
lock
dec
pop
inc
and
jo
pop
jmp
out
fwait
cmp
repnz
mov
enter
imul
popa
imul
cmp
and
sbb
pop
hlt
inc
insl
call
pusha
fcompl
xchg
cli
popa
pop
jns
xchg
pop
jae
aaa
mov
or
jae
jne
adc
sub
ret
aam
pop
vpmulhw
cmp
push
fs
add
lcall
sbbl
cmc
ja
mov
mov
dec
and
aas
out
mov
push
pop
xor
mov
stos
in
adc
popf
test
int
push
pop
or
push
xchg
sbb
mov
xchg
xchg
push
push
ret
pop
and
or
int3
movsl
jg
push
in
xchg
inc
imul
add
push
push
pop
scas
xor
das
movsb
shlb
add
xchg
int
jecxz
test
cmp
cmp
jmp
jo
rcrb
imul
je
pop
aam
ljmp
aaa
sbb
inc
cltd
fsubl
push
xor
test
int
inc
mov
repnz
movsb
mov
add
add
sti
mov
pop
add
push
repnz
fsubs
xchg
shll
cmp
mov
outsl
jle
not
inc
sub
ret
mov
pop
lret
and
xor
subl
fdivrs
lock
push
data16
or
test
sub
ja
pop
inc
or
setb
repz
movsl
pop
xor
je
sub
ficompl
push
push
xlat
fwait
sub
jnp
je
in
repnz
push
arpl
mov
pop
mov
pusha
inc
xchg
adc
fdivp
inc
mov
dec
jecxz
sub
mov
add
xor
sbbl
data16
lods
sub
movsb
lahf
mov
andb
lcall
fstps
mov
and
pop
call
mov
xchg
jp
mov
mov
leave
cld
ret
xor
push
and
add
lea
pop
int
jmp
js
shll
xchg
sbb
orl
jnp
jecxz
addr16
loop
lds
push
mov
scas
adc
or
sbb
push
adc
loope
xchg
pop
stos
and
mov
jb
fnstcw
mov
inc
nop
faddp
xor
out
mov
lret
lret
add
jl
adc
icebp
fmul
jne
cmp
dec
jp
in
pop
dec
add
orb
shl
shll
cld
push
pop
mov
push
mov
push
cmpl
je
pop
int3
dec
sbb
fistpl
jae
push
or
push
mov
mov
add
or
push
push
dec
leave
push
jbe
push
js
outsb
clc
aaa
out
cmp
mov
in
aaa
mov
dec
addr16
or
fiaddl
test
pop
movsl
and
dec
cmp
ror
jg
stc
mov
sub
cli
mov
out
popa
mov
cli
mov
mov
addr16
loopne
dec
inc
call
inc
aaa
decl
or
dec
push
test
adc
outsl
aam
mov
gs
ret
out
test
repz
out
das
fdivl
pop
mov
inc
jae
and
cmp
ror
andb
loop
add
fwait
adc
test
mov
dec
dec
mov
sbb
outsb
jbe
jbe
gs
leave
mov
push
push
ret
jmp
and
ror
lahf
jmp
xchg
stos
in
cmc
repz
sub
pop
sbb
xchg
loopne
dec
dec
popa
add
jnp
xchg
mov
push
adc
adc
inc
xor
lock
leave
dec
jne
and
cld
out
adc
xchg
insl
adc
loop
mov
inc
jns
test
shrl
jg
and
mov
scas
xor
jae
jge
sbb
flds
mov
mov
insl
movb
push
insl
aas
shlb
xor
outsl
jp
mov
sbb
leave
mov
mov
add
adc
loopne
lret
cs
xchg
loope
insl
dec
sub
fmuls
xor
call
inc
lcall
cs
xor
mov
loopne
mov
mov
or
mov
out
inc
sub
jp
loope
inc
cmp
sbb
iret
dec
es
jg
adc
sbb
orl
and
add
sub
jmp
je
ss
push
dec
bound
cld
popf
push
sub
adc
push
dec
jo
loop
mov
movsb
dec
lods
mov
ljmp
cmp
pop
cli
fidivs
mov
hlt
mov
inc
inc
adc
inc
adc
popf
cmp
aas
mov
test
dec
mov
imul
test
and
inc
mov
cmp
or
adc
mov
stc
and
pop
test
cltd
jns
gs
inc
ss
and
push
sbb
outsb
sbbb
mov
push
gs
je
jmp
lret
cld
mov
cmp
testb
lock
cmpsb
ljmp
mov
jl
cmp
in
int3
sub
jne
testb
lcall
lret
stos
loope
mov
fcomp
jg
dec
inc
out
ds
in
or
mov
cmp
aas
add
xor
ja
xchg
aaa
xchg
stos
inc
iret
inc
movsl
and
xchg
inc
xor
mov
jmp
inc
jbe
sarb
into
mov
inc
xchg
mov
movsl
dec
jecxz
loop
dec
mov
shll
jl
sbb
lcall
jmp
sub
in
jb
push
adc
lea
mov
cmp
mov
xchg
xchg
pop
rorl
xchg
dec
jo
or
jecxz
sbb
pop
das
addb
sbb
push
push
sbb
push
sbb
rol
idivb
sarb
dec
movl
mov
pop
and
mov
ret
fimuls
or
push
aad
adc
and
cld
xchg
dec
jbe
fucomip
stc
repz
loope
loope
hlt
adc
jmp
push
sbb
inc
jl
inc
aam
adc
loope
incl
sahf
outsb
sbb
sbbb
loop
fidivs
xor
arpl
sbb
sbbb
jb
push
dec
popf
mov
xchg
add
cmp
mov
sbbb
js
mov
push
dec
movsb
andl
cmp
fchs
cmp
pop
push
clc
adc
ret
xchg
sub
jl
jbe
cmp
mov
dec
das
clc
aad
mov
xor
mov
push
adc
mov
mov
insl
shrl
push
mov
xchg
data16
cmp
std
punpckhbw
aam
fistl
jae
mov
pop
int
xchg
fstpl
sbbb
pop
mov
stc
rcrl
or
add
dec
loop
push
jecxz
xchg
in
adc
or
pop
sbb
mov
pop
xorb
xchg
rsm
idivl
pop
or
mov
mov
mov
sbb
mov
mov
push
fisubrs
sti
stc
sbb
inc
add
mov
inc
lret
sub
aas
adc
lods
fiaddl
cs
sub
dec
jno
aad
adc
inc
add
mov
lahf
push
ljmp
loope
jmp
jmp
cs
cmp
fldt
inc
mov
or
sub
nop
ljmp
fistl
insl
das
or
enter
leave
sbb
daa
rorb
js
clc
mov
cmp
mov
lods
mov
mov
stos
and
adc
ret
sbb
sub
shlb
insl
cmp
mov
scas
xor
faddl
mov
and
mov
jp
jl
mov
roll
hlt
pop
jno
sbb
push
cmp
xlat
loope
leave
movsl
sub
scas
cld
subl
push
and
movsl
jg
xor
dec
scas
cmp
shl
xchg
xlat
stc
les
push
inc
leave
aam
push
pop
aad
dec
push
mov
cmp
loopne
xchg
push
lods
sub
mov
mov
mov
cmpsl
mov
aad
testb
fdiv
movl
jne
xlat
out
mov
movsb
imul
push
xorb
xor
mov
rcr
cltd
scas
lea
dec
out
jae
fnstenv
stos
add
mov
sbb
movsl
jmp
xchg
push
cmp
hlt
enter
ljmp
fldt
and
inc
fsubr
xchg
jecxz
dec
sbb
sbb
cmc
push
and
insb
es
mov
in
test
xchg
gs
mov
pop
ret
jnp
data16
lcall
outsb
in
push
outsl
jno
lea
test
lods
nop
pop
in
test
cli
aaa
gs
insb
lcall
cmc
fsubrp
xor
dec
lahf
and
mov
les
mov
pusha
lea
add
cmp
sub
movsl
xchg
sbbl
pop
fmul
cmp
shll
call
jle
pop
mov
mov
sub
je
movzwl
mov
fimuls
sbb
cwtl
mov
xor
and
lret
notl
sti
and
pop
dec
xor
lahf
shlb
sbb
fs
push
scas
cltd
push
and
test
fcom
mov
pop
fcompl
popl
jbe
cmpsl
mov
mov
cltd
fimull
jne
cmc
in
pop
jns
xchg
mov
add
pop
xchg
xchg
aam
cmp
das
push
lea
lods
fmuls
xchg
das
mov
mov
jg
and
lods
outsl
mov
das
jae
pop
fstps
mov
adc
aam
jge
push
jae
scas
mov
mov
sahf
xchg
inc
add
jae
cmpsl
cltd
and
adc
test
or
jo
std
and
jae
in
jb
cmp
sub
lock
adc
pop
xchg
inc
call
int
push
hlt
lcall
or
pop
stc
xchg
jle
rcrl
iret
adc
lret
lcallw
push
into
roll
mov
jno
lahf
cmp
mov
mov
inc
xchg
mov
adcl
aam
adc
jmp
pop
and
lret
mov
pop
cli
cmp
pop
push
xchg
ss
pop
mov
call
sahf
jg,pn
int3
fisubs
cld
test
sub
insb
cmpsl
arpl
sahf
pop
xchg
stos
sub
fisubl
incb
sbb
adc
dec
xchg
jl
cmp
inc
stos
pop
cmpsb
and
pop
stos
xchg
repz
or
and
xchg
out
sbb
inc
repz
je
cmc
xchg
mov
and
pop
fnsave
mov
dec
ja
sub
punpckhdq
test
push
insl
lcall
sub
sbb
testb
insb
ja
and
mov
xchg
imul
dec
push
xor
pop
aam
stos
mov
insb
rcrb
and
cmp
push
sar
push
pushf
sbb
cwtl
fisubs
shlb
aam
test
sbb
sbb
add
cs
mov
push
mov
sbb
repz
fmulp
jl
and
iret
push
xchg
lret
mov
or
mov
jne
pop
fs
sbb
ret
cli
scas
addr16
inc
sbbl
cmp
sbb
xchg
shll
fdivl
daa
orb
add
ss
and
les
inc
outsb
lds
sbb
mov
rcrb
cmp
sub
fdivrp
and
aam
int3
cmpsl
fidivl
int3
jb
shrl
pop
fnsave
lods
div
mov
ret
sub
jge
xor
jmp
sahf
inc
xorb
orl
pop
pusha
nop
cmp
mov
sub
xchg
iret
push
leave
mov
inc
or
and
outsl
adc
icebp
dec
and
pop
mulb
movsl
out
shrl
rclb
hlt
sbb
adc
lret
lea
loope
dec
jmp
jb
xchg
inc
stc
pop
sti
jb
push
mov
testb
and
repz
in
xchg
pop
adc
ficoms
inc
push
fwait
out
cli
xchg
ret
pop
jge
jbe
inc
mov
and
setns
fsubrp
test
scas
push
pcmpeqw
sbb
jno
sub
add
push
mov
adc
fwait
leave
push
jo
gs
pop
push
insl
loope
les
jo
out
or
push
pop
or
mov
incl
test
mov
sbb
or
push
or
adc
xlat
js
adc
outsb
test
mov
mov
xor
jnp
test
pop
cmp
xor
rclb
or
popf
outsl
leave
mov
cmpsl
sbb
push
test
data16
xchg
es
mov
call
ffree
in
insb
mov
scas
mov
add
pushl
add
dec
inc
cmp
add
cs
sbb
sbb
dec
pop
adc
push
dec
xor
and
inc
sbb
lret
dec
push
pop
ljmp
add
cli
out
cmp
scas
cltd
sti
ret
clc
out
dec
push
or
cltd
imul
sbb
mov
and
out
sbb
shlb
in
mov
int3
shlb
dec
out
imul
cmp
cli
daa
add
sahf
in
fadds
sub
fsubrs
das
push
repnz
pop
pop
lds
xor
sbb
jbe
xor
inc
inc
ja
fnstcw
jge
and
fbstp
es
pop
rcll
and
inc
and
inc
xor
fcmovbe
sub
icebp
mov
cli
lcall
movsl
in
repz
ficompl
xor
and
xor
sub
mov
sbb
addr16
call
int3
movsb
and
sahf
js
cwtl
adc
push
jge
es
push
push
dec
fcomps
push
sbb
xor
fmull
add
popf
pusha
popa
lds
popa
sub
xlat
mov
imul
fdivr
mov
lcall
push
clc
cmp
es
cmp
cmp
movsl
sbb
test
adcl
fstl
sub
movsl
into
mov
xor
jnp
jl
popa
aam
jns
imul
insl
rcrl
inc
mov
mov
adc
cwtl
int
fsubrs
or
jb
adc
sar
pop
repz
add
ret
fstpl
and
sarl
jge
ret
cli
cmp
fsts
push
inc
mov
adc
mov
jbe
shrl
ja
bound
cmc
inc
inc
in
fsubs
mov
mov
xor
mov
ret
cmpsl
mov
sar
mov
inc
lcall
and
add
int3
pop
pop
push
cltd
xchg
ficoml
lcall
sbb
cli
ror
arpl
dec
xor
fnstenv
jae
cmpsl
and
push
sub
mov
jno
adc
fstl
sbb
adc
xor
clc
dec
cltd
or
imulb
dec
push
hlt
jl
fcmovbe
jg
or
sub
push
iret
pushf
imul
push
sar
sbb
jmp
fisttpll
add
lock
cmp
sub
adc
jnp
add
adc
pop
lea
mov
gs
cmpsb
cltd
jg
out
mov
sub
es
push
hlt
fst
add
mov
pop
dec
or
jle
xchg
mov
ljmp
dec
mov
cmpsl
xchg
les
pushf
insl
or
jbe
int
dec
add
sbb
sti
ljmp
leave
jnp
bound
xor
ss
leave
jge
sub
cmpsl
push
leave
mov
jmp
mov
cli
cmp
dec
sbb
in
or
xchg
test
cltd
xor
retw
lcall
xchg
dec
negb
and
mov
rorb
orl
push
es
out
in
out
push
inc
clc
adc
mov
jbe
sbb
and
xor
rclb
sbb
mov
call
pop
pop
mov
jno
inc
jae
jno
mov
dec
lcall
popw
xchg
fisubs
sbbb
outsb
sub
data16
xchg
inc
and
ret
dec
shl
std
pop
pop
push
push
sbb
sbb
mov
aaa
out
pop
pop
outsl
inc
add
mov
push
orl
lods
and
outsl
fnstcw
es
push
pop
jmp
ss
dec
adc
and
ds
icebp
jl
imul
adcl
les
sbb
cld
repnz
jbe
imul
popa
js
xlat
push
xchg
and
and
jb
ret
mov
jmp
fwait
hlt
xor
sbb
loope
add
and
lock
fadds
push
mov
bound
repnz
jle
push
push
sub
sbb
loopne
push
lahf
daa
xchg
push
push
lea
push
add
lock
push
iret
pop
add
stos
jbe
lret
push
stos
mov
movsb
add
lods
inc
jne
addr16
in
cmp
les
dec
add
mov
adc
pusha
dec
fxch
mov
cmp
sbb
pop
scas
push
and
push
ficompl
or
dec
jge
sub
fadds
mov
cli
js
lret
loop
jne
mov
ret
call
cmpl
xchg
pop
cmp
push
mov
jl
imul
jmp
addr16
mov
cmp
dec
adc
or
adc
inc
add
add
dec
sub
push
stos
push
divb
add
xchg
add
cmc
push
push
pop
pop
adc
mov
pop
jae
push
inc
loopne
pop
stos
cmpsb
mov
push
scas
pop
lahf
lcall
in
fnstsw
inc
mov
addl
and
jg
sbb
xchg
pop
lock
stc
or
fists
xchg
add
and
shrl
dec
mov
pop
es
xchg
jns
cwtl
mov
mov
mov
sub
sbb
test
lds
sbb
fcmovnb
cmp
aas
jb
lahf
or
lahf
insl
inc
fmul
bound
js
inc
push
iret
mov
push
xor
outsl
aaa
aam
fsubs
pop
pop
fidivs
js
xlat
add
cmp
out
sub
mov
add
popa
dec
ljmp
icebp
in
gs
cltd
adc
jmp
xchg
inc
pop
jo
mov
gs
daa
and
rcrb
inc
imul
xchg
jnp
sub
sbb
decl
aam
mov
jecxz
xor
inc
cmp
mov
lds
iret
test
cmp
and
mov
jb
insl
repnz
cmp
lods
add
dec
lcall
inc
push
fsubrs
cmc
pop
cmp
movsb
aas
shrl
jle
cmp
xchg
test
or
mov
xlat
cmp
arpl
jnp
vpmaxsw
test
popf
pop
xor
dec
dec
mov
jno
and
or
push
cmpsb
test
xor
mov
scas
sbb
jo
popa
xchg
jge
adc
cmp
dec
sbb
mov
mov
xor
les
cmpsb
inc
scas
imul
cmc
fs
push
dec
test
mov
popa
fistpll
mov
dec
shll
pusha
sbb
test
stos
cmp
insl
test
xchg
in
dec
xor
inc
lahf
imul
adc
jae
test
push
pop
aas
and
jge
ljmp
les
inc
xchg
and
pop
mov
pop
or
fwait
or
and
sub
test
dec
inc
orb
or
repz
nop
in
lret
stos
jge
loopne
mov
imul
in
in
dec
stos
dec
cmpsb
xor
jmp
inc
sub
xchg
mov
in
push
popf
ret
push
aam
pop
and
int
jne
and
or
xor
sub
dec
and
into
mov
cs
sub
shll
mov
cli
movsb
ret
push
xchg
sub
cwtl
in
fcomps
aaa
jg
js
sbb
sbb
notl
adc
sbb
and
rcrl
lea
test
fcompl
mov
push
inc
fisubrs
sti
movsb
loope
dec
cmp
pop
adc
setno
sarl
aaa
ljmp
push
gs
dec
xchg
test
pop
xor
pop
inc
mov
sti
lds
scas
cmp
stc
jne
lret
es
pop
pop
jecxz
dec
sub
lcall
mov
adc
push
rclb
mov
inc
sbb
jmp
push
jae
imulb
es
mov
sbb
or
jno
lea
shll
lcall
inc
push
enter
shll
or
scas
je
daa
out
xchg
ret
pop
insl
add
in
adc
loopne
push
pop
pop
jne
popa
in
mov
and
out
mov
xchg
lock
pop
dec
test
popl
fisubs
sbbl
jle
sbb
aaa
xor
jb
xchg
mov
pop
lahf
aad
push
cwtl
je
mov
cmpsl
sahf
pop
jne
push
out
jecxz
or
mov
call
dec
xchg
out
int
mov
xchg
mov
and
scas
cmp
push
cmc
lods
ret
es
cs
sbb
xchg
call
dec
adc
sub
mov
and
insl
aaa
pusha
nop
ret
push
sbb
movsb
inc
xchg
push
cwtl
push
lods
cmp
pop
sti
lds
popf
je
aam
daa
cmc
lods
fmul
jno
aad
jno
idiv
js
out
mov
mov
insb
jecxz
jne
enter
rcr
aam
ficompl
sahf
js
shrl
xor
adc
cwtl
fs
fwait
or
iret
cmpsl
jmp
push
cmp
pop
lock
out
pop
xor
or
stc
scas
insb
call
inc
xor
fsts
jae
fdivl
push
std
xor
cmp
inc
or
mov
fmuls
outsb
fs
jb
pop
add
stos
add
and
dec
fdivr
push
stc
fbld
std
iret
enter
adc
or
mov
cmp
xchg
out
cmp
inc
xchg
or
out
or
jae
imul
sbb
pop
fisubs
rcll
cmpsl
adc
stos
sub
nop
adc
cld
nop
add
lock
mov
xor
sbbb
ficomps
popf
jmp
loop
cmp
jmp
xor
int3
inc
xchg
add
mov
scas
or
test
cmp
pop
mov
js
leave
fimuls
or
add
test
es
sti
add
push
rclb
jns
mov
jae
and
imul
inc
addr16
int3
pop
mul
out
jno
lods
jg
xchg
cs
movb
inc
in
test
jmp
or
popf
mov
inc
sbb
fsubr
test
cmp
inc
lret
gs
cmc
jae
data16
out
ss
mov
in
loope
or
pushf
outsl
daa
fidivrl
movsb
mov
outsl
sub
mov
mov
inc
imul
jae
rolb
in
fldl
ficoml
jo
insb
popf
or
loopne
lcall
push
hlt
ret
xor
test
dec
pop
cs
inc
and
cwtl
add
int3
sub
jae
adc
or
test
jns
mov
std
aaa
jnp
lcall
or
es
int
popf
mov
sbb
add
orb
mov
cmp
dec
enter
lock
push
shl
dec
mov
icebp
push
cmp
sahf
push
leave
adc
mov
xlat
lea
lahf
pop
jle
push
insl
sbb
adc
mov
push
je
fistps
cmc
sti
mov
push
add
or
xchg
shrl
dec
jno
mul
hlt
lods
dec
adc
adc
fildl
push
jbe
fs
xor
add
and
and
sbb
ja
hlt
push
test
out
fsubs
les
sti
push
out
jmp
out
dec
dec
arpl
jae
pushf
shlb
orb
outsb
xorb
cmp
push
bound
call
mov
dec
sub
sbb
loopne
jae
sarb
test
add
out
fidivs
sbb
andl
cwtl
xor
imul
pop
sub
sbb
ficomps
add
loopne
cwtl
push
adc
fidivl
cmp
lcall
iret
int3
or
cwtl
cli
lret
mov
sbb
jg
imul
push
inc
pop
arpl
scas
and
call
sub
shlb
sti
movsb
divb
mov
test
leave
push
sbb
mov
fwait
cmpsl
jp
in
std
push
cmp
addr16
mov
sub
xchg
xor
mov
push
dec
inc
or
or
stc
add
fstpl
movsl
inc
pop
cmpsb
repnz
cltd
dec
sub
dec
pop
stos
pop
or
pop
bound
imul
cmp
daa
data16
and
push
xchg
cmp
mov
push
cwtl
xor
subb
dec
adc
fwait
movsl
fmull
xlat
aas
push
cmp
xchg
adc
mov
mov
out
ret
jmp
mov
xchg
cmp
pushf
inc
sub
jns
cltd
sarl
jb
scas
cs
cmpsb
lods
xchg
lods
xchg
in
fs
daa
ficomps
fwait
pop
ds
dec
jmp
pop
xchg
push
pop
aas
stos
add
repz
stos
loopne
add
pop
push
lds
jge
push
mov
mov
or
testb
movsl
xlat
mov
push
or
icebp
fwait
bnd
push
cli
xchg
in
mov
pop
scas
aad
adc
mov
pusha
push
mov
lret
mov
mov
mov
movsl
fstps
movsl
popf
add
stos
xchg
out
lods
adc
mov
dec
out
add
stos
add
cwtl
sub
cmpsb
lds
sub
and
out
cwtl
xchg
jnp
inc
mov
gs
sub
add
ret
imul
mov
insl
dec
fsub
testl
repnz
xchg
adc
shll
jle
rcll
paddsw
aaa
mov
push
jp
mov
or
mov
dec
jge
or
mov
xor
in
nop
and
repz
xor
inc
lcall
jns
inc
jns
inc
daa
and
and
icebp
cmp
inc
cs
cmp
insb
into
add
frstor
jne
hlt
adc
lea
dec
leave
push
cmp
sub
dec
das
loopne
gs
pushl
mov
inc
stos
push
mov
sbb
cmp
mov
fwait
dec
test
movsl
fisubs
mov
dec
xchg
xor
and
adc
mov
fs
out
loop
and
out
and
cmpsb
or
fimuls
pop
inc
cwtl
add
cmp
mov
sub
fwait
andb
daa
insl
pop
out
je
adc
xor
sbb
dec
mov
daa
negb
sbb
test
hlt
push
out
jecxz
mov
sub
ljmp
insl
daa
es
aas
mov
pop
fstl
mov
jmp
out
jb
sarl
mov
call
fucomip
cmp
nop
sub
add
pop
inc
aad
xor
jmp
push
scas
sbb
fbstp
sub
jp
push
mov
call
mov
xor
fs
mov
pop
jb
push
cmpsb
das
xchg
pop
mov
adc
shll
inc
aad
sti
pop
xor
xor
in
clc
inc
dec
cmp
or
test
scas
mov
rclb
sub
test
fnstcw
dec
fcom
fisubrl
sbb
ljmp
fistpl
push
scas
fbld
sub
add
push
push
nop
stos
push
cmp
jmp
sub
xchg
push
test
mov
jo
jge
mov
mov
jmp
or
cmpsb
aas
ret
ret
and
xor
cwtl
or
jl
ljmp
gs
jno
push
xor
fsub
adc
imul
sub
sarb
imul
lret
repz
mov
xchg
jae
rolb
test
mov
dec
test
fwait
loop
leave
mov
xchg
add
loopne
enter
xchg
rorl
aam
fwait
dec
lret
mov
inc
inc
xchg
xor
mov
cmp
scas
mov
dec
cmc
sar
sbb
sub
mull
push
xlat
pop
sbbl
pop
inc
xor
stos
xor
data16
fmuls
jno
and
jns
push
test
aaa
mov
setge
dec
push
aas
lea
lret
sar
bound
daa
inc
subb
dec
imul
rol
stc
jl
mov
cld
add
fbstp
pushl
ss
cmp
rclb
push
loope
push
xchg
xor
sub
pop
mov
mov
cmpsl
mov
mov
gs
scas
cltd
mov
mov
add
pop
push
stc
xchg
mov
mov
mov
andb
cmpsl
es
xchg
or
pop
sub
mov
sub
jp
lret
push
inc
stc
adc
pop
pop
imul
imul
xchg
loope
jp
sbb
mov
cmp
faddl
lock
stos
cvtpi2ps
insb
xchg
sar
pop
mov
sbb
pop
cmp
jns
mov
xchg
cmp
jmp
and
repnz
pop
addb
lahf
clc
push
fcoms
scas
mov
sbb
aas
pop
jo
dec
dec
iret
leave
ret
aam
add
jnp
scas
shrb
jo
fcmovne
ljmp
inc
jge
adc
loope
cmpl
xor
ss
pop
add
mov
adc
fs
data16
adc
fisttps
and
pop
popa
fiaddl
dec
ds
pop
nop
dec
push
addr16
pop
fildll
lea
cmpsb
xor
gs
xchg
sti
mov
inc
aad
add
es
daa
aam
adc
xchg
sahf
pop
sbb
jge
xor
mov
xchg
aas
sti
or
mov
jge
mov
xor
xor
xchg
notb
xor
pusha
out
call
sub
shll
jo
sbb
js
mov
pop
sub
dec
xor
aam
inc
mov
test
gs
inc
xor
je
add
dec
inc
add
testl
mov
insl
jle
sub
outsb
ds
pop
mov
and
jl
fwait
mov
testb
xchg
push
inc
or
cmp
inc
xor
sarb
jb
aad
leave
sbb
into
inc
jp
arpl
es
inc
and
mov
icebp
pop
add
ds
inc
cmpsl
stc
outsl
sti
stos
or
lcall
adc
cltd
adc
pop
ljmp
ret
loopne
xor
xor
push
and
sbb
popf
repz
mov
out
and
loope
fs
outsb
jp
out
inc
fsubrs
cli
icebp
out
lods
inc
jne
xlat
mov
pop
push
out
and
movsb
cwtl
mov
lahf
mov
idivl
cli
ljmp
pop
mov
mov
mov
dec
lahf
cmp
and
repz
pop
push
ds
aam
es
repnz
fs
iret
shrb
cmp
mov
loop
mov
jle
mov
arpl
in
xor
popa
lcall
add
js
xlat
sbb
push
mov
push
jp
aad
pusha
in
push
dec
cwtl
jae
sub
inc
arpl
add
add
dec
xchg
mov
cmp
aad
sar
aam
mov
fs
jge
pop
mov
loop
inc
sahf
cmpsl
jo
je
xchg
mov
pop
ror
fdivrs
jno
mov
inc
test
icebp
popa
add
jbe
loope
pop
xchg
pop
push
and
loop
cwtl
mov
and
mov
test
jl
cli
fmull
inc
lods
or
cmc
xchg
sub
push
jmp
add
cmpsl
xchg
xchg
imul
repnz
mov
test
arpl
cmp
into
adc
sub
mov
push
fwait
das
loope
add
imul
add
mov
loope
stc
dec
mov
loope
pop
push
cmp
fisubl
jne
and
pop
pop
cli
dec
lret
mov
xor
mov
xor
mov
mov
dec
popa
sbb
cmc
mov
div
inc
adc
popf
jmp
outsl
pop
xchg
push
divb
xor
xor
mov
enter
sbb
pusha
into
jge
inc
sahf
loope
rcrb
jo
cld
push
jge
das
jns
int3
sub
xor
cmpsl
rorl
pushf
cmp
push
xor
jae
mov
icebp
ret
cmpb
aas
rorb
leave
andl
lds
dec
outsb
xlat
and
cmp
test
adc
dec
ror
mov
fildll
testl
fcmove
ret
push
xorb
and
sbb
mov
shll
pop
int3
mov
inc
push
data16
arpl
xorl
mov
push
imul
jp
xchg
mov
mov
mov
mov
ja
mov
clc
test
dec
mov
dec
cmp
sti
jbe
scas
xor
inc
mov
jb
cmp
mov
sahf
mov
jbe
sub
jl
gs
sbb
jmp
mov
and
mov
sub
aam
sub
repnz
fmul
mov
cs
sahf
mov
int3
add
mov
scas
ljmp
xchg
pop
icebp
ja
movsb
nop
cmp
cmp
or
ret
gs
mov
mov
popa
or
cmp
sub
addl
inc
in
rcll
lock
andl
inc
fbstp
xchg
ret
cmpsb
lret
jge
push
je
mov
inc
stc
inc
jnp
inc
xor
leave
adc
lahf
inc
jl
ljmp
scas
adc
loope
faddl
das
xor
and
jg
xor
dec
push
jb
daa
in
jp
or
imul
fisubrl
push
mov
icebp
fwait
popa
sbb
xchg
dec
js
int
mov
add
stos
jnp
cltd
repnz
mov
xor
test
movsl
lret
cmp
in
push
shl
sarl
xchg
pop
mov
ret
lret
je
test
std
inc
adcl
mov
popa
fwait
ss
cmc
fwait
lods
setbe
inc
les
jmp
xchg
in
cs
push
xor
push
aam
cmpsb
jns
mov
cli
push
js
add
sbb
push
xor
mov
push
cmp
xlat
or
xchg
int3
outsl
jecxz
and
jmp
setp
push
xchg
repz
divl
imulb
scas
pop
aam
cmc
inc
in
ds
jne
hlt
xor
adc
xor
sahf
cmp
pop
call
jns
push
int
mov
xchg
pop
outsl
mov
aaa
adc
push
mov
mov
and
call
push
iret
xor
jnp
sti
aas
pusha
push
xor
daa
scas
outsl
adc
test
imul
movl
call
mov
xor
mov
cltd
jnp
popa
xor
stc
testl
arpl
jmp
arpl
aaa
jo
jp
mov
mov
inc
rolb
in
inc
inc
add
hlt
pop
push
ds
mov
outsl
dec
test
pushf
adc
mov
mov
out
mov
and
jb
mov
inc
push
and
dec
mov
jp
stc
pop
jb
rcrb
push
and
in
hlt
adc
loope
inc
hlt
push
and
les
lret
dec
mov
lods
sbb
or
sub
cmp
mov
rcll
les
jno
push
mov
dec
les
hlt
cmp
push
sbb
jmp
dec
xor
xor
cmpsb
add
add
and
into
xchg
jno
mov
cltd
lcall
jl
inc
mov
scas
shll
mov
sub
mov
inc
pop
pop
in
faddp
cmp
xor
shlb
pop
or
arpl
outsl
add
popa
cmp
test
or
sbbb
in
xor
test
cli
fadd
test
scas
sub
push
xchg
test
mov
addr16
or
lret
xchg
xchg
and
rcrb
pop
inc
lret
jg
xor
sub
inc
push
jg
pushf
cmp
inc
or
pop
push
sub
and
insl
fs
mov
mov
xlat
add
sub
cli
aas
loope
dec
das
es
mov
jge
popa
fwait
or
out
inc
js
movd
xchg
mov
add
jbe
add
test
jp
cmp
jo
dec
add
inc
jne
pop
hlt
jnp
das
pop
fwait
xor
cld
lods
push
sub
out
imul
adc
pop
pop
xor
jecxz
and
mov
inc
movsb
dec
lock
enter
cmp
into
xor
icebp
xchg
pushf
imul
mov
cmp
scas
xor
cmp
jge
mov
addl
mov
ds
or
popf
out
rorb
xor
pop
jge
push
clc
shrl
fisubs
int
mov
push
shlb
adc
lea
cmp
dec
fs
pop
dec
mov
std
xchg
jno
sub
or
mov
add
cmc
insb
adc
test
xchg
fucomi
in
pop
movsb
int3
inc
jns
call
mov
sub
xor
add
pop
insb
test
lahf
push
jge
adc
adc
sub
rorl
popa
cs
pop
push
or
push
lds
mov
mov
fiadds
adc
sbb
xlat
and
xchg
gs
jno
and
pop
sbb
sub
fisubs
push
jmp
cltd
inc
xchg
stos
aas
js
inc
cld
sahf
in
hlt
mov
jp
gs
jnp
test
sub
pop
mov
frstor
xchg
divb
mov
subl
push
sub
pop
jl
dec
and
pop
idivl
dec
mov
cmp
mov
mov
insl
inc
dec
subl
push
mov
rol
dec
aad
test
rcl
imul
sahf
andl
pop
lret
enter
push
xchg
xor
sub
and
sahf
outsl
adc
in
lea
mov
ret
rcl
es
cltd
cmpsl
std
sub
stos
mov
data16
in
out
jo
mov
sahf
call
adc
mov
inc
and
add
cmp
xor
mov
sbb
dec
insb
adc
lds
lret
jp
sbb
sbbb
mov
mov
push
push
adc
mov
outsb
into
lret
in
or
and
jge
roll
add
push
stos
mov
push
mov
movsl
or
dec
pop
pusha
flds
mov
mov
sbb
punpcklwd
ret
push
dec
sbb
mov
jle
pop
nop
jmp
cmpsb
aam
add
mov
xlat
sarb
daa
lods
incb
mov
jle
fs
add
push
stc
or
subb
cmp
mov
dec
xchg
loope
xor
add
lock
aad
adc
ds
in
mov
mov
sbb
cmp
popf
incl
jp
pop
jg
cwtl
sti
daa
je
ret
loopne
cli
xchg
outsb
mov
cli
and
mov
pop
aaa
adc
and
adc
mov
sarb
mov
gs
sti
negl
lcall
sub
jnp
push
pop
ret
sub
popf
popa
popa
dec
jne
fdivs
mov
cmp
mov
cmpsb
fwait
xchg
push
insb
outsl
stc
push
push
sub
sarl
into
roll
push
mov
bound
inc
pop
testb
cld
sbb
lcall
loopne
fwait
pop
mov
enter
adc
pop
jmp
es
popf
ret
xor
stos
xor
mov
jge
cltd
or
inc
gs
leave
xchg
jl
sub
mov
xchg
rclb
enter
mov
pop
loope
movsl
add
repz
push
xchg
push
sbb
sub
daa
cltd
cmpl
shl
pop
adc
ret
cltd
sbb
sarl
add
mov
mov
cmp
and
cmp
cli
es
lods
mov
and
sub
cmp
push
movsl
push
dec
push
negb
ss
int
leave
or
jp
sub
andb
scas
jle
mov
add
leave
mov
and
idivl
movsb
xor
sbb
mov
cmp
daa
stc
mov
mul
ss
push
xchg
pop
add
sub
gs
xor
sbb
pop
mov
aas
adc
mov
push
mov
ljmp
scas
xor
or
dec
int
das
dec
roll
ss
shlb
rcr
xor
push
rcll
push
enter
cmp
or
jge
mov
das
test
pop
dec
pop
mov
mov
mov
cltd
loopne
mov
mov
shll
jno
call
sub
pop
fmul
out
sbb
shlb
jl
push
and
popa
add
jo
jne
shll
adc
scas
adc
sub
xorl
mov
in
cmpsb
movsl
sub
xchg
pushf
jmp
push
hlt
lret
xor
add
jb
jge
cmp
repnz
mov
xchg
sub
sbb
mov
or
dec
cmpsl
mov
pop
sti
mov
sbb
pop
pusha
sarb
aaa
popa
dec
jmp
inc
in
std
xor
cmp
adc
xchg
pop
mov
mov
inc
mov
cmp
xor
or
mov
ds
adc
lret
mov
mov
push
xor
sbb
mov
push
test
in
stos
loop
lcall
push
sub
dec
push
sbb
pushf
mov
stos
roll
outsb
sbb
stc
mov
xor
clc
mov
popf
or
notb
sub
insl
jo
lahf
shll
repnz
jno
jae
shrl
out
jb
sub
xchg
sbb
out
lods
mov
push
adc
xchg
roll
ljmp
xchg
repz
push
das
pop
xor
pop
sub
scas
in
setnp
sbb
sarb
ficoms
lock
icebp
xchg
push
push
mov
sub
jecxz
je
fsubp
adcb
cmp
xchg
xor
xorb
iret
cld
dec
scas
scas
cmp
mov
or
inc
lods
iret
or
hlt
aam
nop
arpl
filds
jns
push
test
scas
lret
int
pushf
jle
pop
sahf
mov
mov
jbe
fsubrp
pop
xor
adc
stos
jae
xor
movsl
mov
repz
sbb
call
int3
mov
or
fsubr
add
push
imul
lret
pop
insl
pop
inc
cmp
inc
test
xchg
push
hlt
scas
cltd
insb
sub
xor
cmp
cmpsl
das
aad
xor
out
int
into
call
out
mov
push
push
pop
mov
sbb
aad
fidivs
cmp
push
jbe
mov
in
ror
or
adc
jns
xchg
dec
lcall
mov
mov
and
and
mov
and
test
loopne
mov
lods
out
add
push
pop
jae
xor
gs
dec
mov
in
jno
scas
fmull
and
adc
xchg
push
cmp
loope
int
stos
icebp
xor
jge
mov
push
mov
stos
xor
push
shrb
pop
inc
add
inc
jno
clc
and
push
in
cld
sub
loope
add
lock
or
jnp
lock
mov
jns
ds
js
stc
les
jg
jle
adc
jno
arpl
ljmp
das
popa
scas
cmp
outsl
dec
ret
nop
push
loop
lea
add
cmc
cmp
cmp
cs
and
ljmp
pop
dec
cmp
out
and
xor
pop
sub
lahf
mov
lcall
ss
and
aas
xor
mov
loop
xor
and
and
mov
insl
mov
fs
cmp
push
xchg
pop
mov
test
pop
cmc
shl
shrb
jae
sbb
lret
jbe
mov
inc
in
in
dec
push
adc
std
sbb
mov
daa
or
mov
shll
push
lcall
dec
fmull
push
pushf
sbb
cmp
mov
imul
int
ljmp
in
sub
sbb
scas
mov
mov
repz
lcall
xchg
and
and
push
mov
stos
test
imul
dec
or
stos
out
frstor
fldl
xchg
insl
out
aas
addr16
aad
inc
shlb
pop
movsl
inc
ja
shl
pop
fnsave
push
xacquire
pusha
test
loop
push
and
or
dec
xchg
les
or
hlt
out
sub
lret
or
lret
jp
pop
les
jae
pop
mov
in
test
inc
hlt
pusha
ljmp
popa
aam
push
sub
pop
sarl
aaa
or
sub
xchg
lret
mov
push
dec
push
dec
roll
push
mov
sbb
xchg
jns
cwtl
and
mov
lret
fcmove
pop
mov
adc
or
int
jae
mov
into
in
push
decl
int
jnp
mov
mov
xchg
push
jb
dec
mov
fmull
inc
pmullw
dec
in
cmp
movsl
adcl
push
enter
or
lret
popf
leave
jle
scas
mov
cmp
sti
xor
mov
in
mov
inc
sub
lods
in
sahf
jp
popf
ds
mov
jo
sub
or
push
or
mov
mov
inc
enter
data16
sbb
cwtl
test
pop
adc
sbb
xchg
pop
push
adc
scas
inc
dec
pop
shll
shl
call
cs
stos
dec
packssdw
stc
fistl
add
sti
call
movups
jb
push
shlb
pop
out
outsl
sbb
iret
adc
pop
adc
cld
cwtl
enter
xlat
ficoml
xor
mov
sbb
xchg
mov
cs
ja
sub
sbb
cmp
sbb
adc
xchg
cs
cmp
ljmp
movsb
loop
push
and
xor
lea
fwait
loop
xor
addr16
loopne
ficomps
and
mov
aaa
push
iret
stc
int
mov
xchg
jmp
jmp
sahf
lcall
inc
lods
ficompl
push
adc
mov
cmp
jnp
aas
sub
fists
mov
add
lods
mov
jbe
testb
imul
fucomp
or
je
or
cmp
shrl
push
out
mov
movsl
lock
bound
cld
lds
pop
hlt
push
sub
mov
clc
addr16
or
jp
jl
stos
xchg
inc
jno
pop
xchg
add
mov
aam
lea
clc
inc
sti
xchg
lret
xor
flds
xchg
xchg
jecxz
xor
jl
sahf
add
cwtl
ja
lods
in
adc
pop
xor
and
xchg
xorl
loopne
adcb
mov
mov
jb
lds
xor
xor
push
push
std
sub
fisubl
mov
lahf
mov
add
cmp
cmpsb
idivl
cltd
sub
loop
xchg
enter
mov
bt
cmpsb
rcrl
sahf
dec
sub
adc
faddp
jl
loope
mov
lock
xchg
fsubrs
sub
sub
call
jno
xor
loopne
adc
add
ja
pop
jl
pop
shl
mov
or
int
mov
or
int3
and
sahf
scas
or
je
loopne
pop
push
shl
dec
cli
push
adc
repnz
test
fisubs
mov
mov
xchg
pop
outsl
pop
adc
and
iret
adc
mov
adc
and
push
jecxz
jle
add
pop
je
iret
pop
or
fsts
fwait
push
inc
and
pop
loope
sub
mov
sbb
and
cmpsb
mov
lahf
mov
cmpl
or
test
out
cmp
dec
pop
or
fcom
in
addb
clc
mov
cmc
lret
xchg
cmpb
xor
popf
xorb
sub
fsubrl
jl
jne
add
mov
push
sub
mov
jp
lret
shl
lcall
insb
sbb
mov
sbb
dec
pop
aaa
pop
clc
flds
pop
push
xor
fsubr
js
xor
aam
shll
int
loop
jnp
xor
insl
push
rcrl
dec
xchg
adc
cmpsb
pop
decb
mov
ljmp
xchg
cmpsl
shll
pop
nop
mov
inc
les
in
xchg
int
mov
lcall
dec
mov
xchg
lods
adc
dec
fcom
mov
data16
xor
stos
cmp
xor
mov
and
imul
bound
lea
sti
mov
clc
push
add
add
lcall
mov
push
movb
inc
xor
adc
daa
testb
sbb
sbb
jle
dec
insb
popa
mov
add
ja
jmp
jge
push
mov
nop
mov
dec
adc
and
jmp
lock
sar
mov
rcr
hlt
jns
nop
andl
xchg
cmc
cmp
pop
pop
scas
lock
mov
mov
adc
loopne
ja
sub
cmpsb
sub
inc
out
aam
aaa
stc
inc
mov
sub
dec
or
pop
push
negl
hlt
jbe
icebp
mov
into
sti
fbstp
xor
xchg
enter
aad
mov
into
jnp
loope
and
aaa
loopne
push
cmp
lods
cmpsb
imul
sub
popa
int3
insl
push
and
stos
insl
cmp
or
mov
sub
push
loope
mov
jecxz
in
xor
cmpsb
inc
jbe
loopne
rorl
cmpsl
jb
rcr
dec
inc
orl
aam
sub
mov
jno
inc
pop
icebp
or
xchg
lea
sbb
jns
in
loopne
addr16
mov
and
pop
mov
xorl
cs
das
call
mov
int
imul
dec
push
adc
pushf
jmp
xor
adc
sahf
ljmp
subb
pushf
push
out
or
jle
lahf
dec
jnp
dec
pushf
and
arpl
pop
cmpsb
mov
aam
fs
cmp
lahf
adc
fisubs
xchg
pop
insl
xchg
xor
pop
sti
int
aas
pop
jnp
scas
mov
sub
insb
inc
xchg
movsb
jns
pop
aas
cmp
sbb
dec
push
mov
das
data16
negb
mov
cmc
inc
hlt
inc
sbb
pop
pop
fstl
enter
xchg
aas
and
mov
xor
xchg
bound
insb
pop
add
ret
and
xchg
cwtl
cmpsb
sbb
cmp
insl
pop
inc
sub
or
int
test
jmp
xchg
popf
push
xchg
test
fabs
add
jae
mov
daa
jo
fildll
jno
dec
add
cs
xchg
inc
and
xor
imul
leave
iret
xor
insl
ficompl
cmp
sub
les
jp
int3
xor
xchg
scas
adcl
cmc
cmpsl
and
push
pop
sbb
sub
jp
sbb
rcrl
dec
jnp
imul
nop
rcll
and
mov
movsb
inc
xchg
movsl
repnz
sarl
sbb
movsl
mov
cld
or
mov
sub
loope
iret
pop
or
outsb
lea
xchg
idivb
aad
stos
aas
and
dec
jle
xchg
addr16
dec
lea
es
push
bound
push
enter
xchg
push
rorl
andl
jge
sub
repz
inc
les
xchg
cmp
push
dec
push
sub
mov
cmp
fsubrs
outsb
mov
pop
cmp
mov
or
js
loopne
sbb
xchg
mov
aas
jns
jne
ds
fwait
inc
sbb
xor
add
xor
dec
sarl
mov
gs
cmp
ja
adc
aam
or
pavgw
sbb
add
mov
xor
test
loop
adc
dec
or
inc
adc
mov
adc
scas
ss
add
popf
cmpsb
imul
push
pop
repz
incl
sbb
ret
das
jge
loop
cmp
adc
xchg
push
sub
xor
push
xlat
or
dec
push
inc
in
hlt
lret
xor
popa
mov
pop
das
insl
jbe
imul
mov
xchg
or
mov
aaa
ss
xchg
jo
inc
push
push
ja
and
push
xchg
pop
add
subb
add
lret
fstl
xchg
xor
adc
lock
push
mov
mov
cmp
cmp
push
cmp
mov
leave
fdivr
pop
xor
movsb
test
clc
bound
jnp
mov
out
cwtl
iret
insl
insl
hlt
mov
inc
movb
pop
add
xor
sbb
adc
lods
push
mov
loopne
cwtl
lods
fbld
mov
in
and
sub
sub
pop
jb
sbb
and
rcl
mov
mov
xchg
lahf
pushf
fcmovnu
cwtl
add
push
repnz
xchg
mov
jb
push
gs
dec
rclb
inc
out
cmp
out
inc
inc
nop
sbb
nop
lret
roll
push
mov
xorb
xchg
add
lcall
fs
jl
xchg
or
adc
mov
je
outsl
push
out
push
add
push
cmp
pop
adc
lds
mov
mov
mov
push
or
hlt
sbb
pop
mov
and
pop
aaa
dec
es
sub
jecxz
ja
cmp
lret
mov
ljmp
mov
sti
cwtl
ja
repnz
dec
inc
jbe
sub
mov
xchg
dec
mov
cli
mov
ss
pop
sarb
insb
decl
xchg
into
shl
dec
adc
cmpsb
mov
xchg
in
or
mov
movb
ljmp
push
xchg
es
outsb
aam
pop
jmp
push
movsb
mov
aas
leave
pop
ljmp
cs
ja
xchg
orb
xchg
push
lds
popa
or
stos
xor
mov
push
rcl
mov
repnz
out
adcb
lock
int3
sbb
roll
adc
pop
mov
stos
outsl
adc
cmp
repz
ror
out
push
push
xor
ret
loopne
cmp
mov
int3
cli
push
pop
pushl
mov
pop
sahf
push
push
push
out
pop
inc
bound
inc
mov
mov
mov
enter
push
push
mov
pop
adc
jno
je
sahf
xchg
jp
add
xor
mov
mov
ret
call
popa
mov
push
sub
fdivs
sbb
push
push
sarl
mov
sbb
adc
xchg
mov
lret
xorl
je
fidivl
jecxz
popf
inc
test
pushf
and
outsb
fisubl
sti
scas
stc
mov
sbb
addl
ret
test
pop
imul
rorb
inc
sbbl
xchg
add
lock
mov
sbb
cmp
dec
js
out
shll
jns
add
mov
mov
adc
arpl
loope
or
push
mov
mov
and
push
fcomp
or
mov
arpl
pop
enter
or
lret
adc
fs
adc
loopne
push
cmpsl
jge
mov
jle
ja
ret
clc
inc
jno
testl
aaa
jp
xor
push
cmp
fucomip
mov
jo
inc
pop
test
push
inc
clc
rclb
movsl
cmp
push
mov
scas
adc
stos
aaa
xchg
js
out
push
jl
outsl
mov
lock
xor
leave
inc
icebp
jmp
in
jl
xor
fdivrl
insb
lret
fnsave
add
popf
xlat
push
dec
es
ljmp
out
push
popa
iret
pop
jle
bound
sub
loop
neg
pushf
stos
mov
mov
fcmovne
and
pop
jnp
lret
xor
pop
idivl
aam
test
ret
insl
rclb
sti
shll
push
and
lcall
xchg
iret
rclb
or
fsubrl
mov
jo
gs
sbb
xchg
fidivrl
out
mov
addr16
rcll
dec
aaa
xchg
sbb
jge
jnp
sbb
xor
dec
push
or
jmp
imul
lcall
ja
xorl
push
push
lcall
add
mov
lret
out
lcall
in
cmp
mov
cld
add
or
mov
push
ljmp
test
push
es
push
cmp
xlat
fnsave
jmp
pusha
or
xlat
fstp
adc
popf
lea
loope
mov
cltd
cmp
insl
sti
je
flds
xchg
push
les
lret
dec
mov
sub
cmpsb
cmpsb
icebp
lret
and
scas
xchg
insb
or
out
clc
lret
js
enter
dec
shll
sbbl
adc
ficomps
mov
pop
popa
inc
aas
sub
imul
xchg
push
iret
xchg
mov
pop
add
sub
fstps
mov
rorb
mov
pop
jne
inc
pushf
and
and
imull
popf
dec
push
adc
cmpsl
sbb
mov
and
add
movsb
push
mull
ret
imul
xor
pop
xor
leave
aaa
fiaddl
aaa
roll
xor
pop
add
cwtl
pop
push
or
popa
xchg
sub
shrl
cmpsl
cmp
ret
jg
cmp
mov
mov
sbb
push
sub
dec
lcall
sub
ds
add
es
iret
jle
fbstp
stos
and
pop
dec
subb
js
dec
bound
imul
rcr
int
xchg
mov
mov
sbb
mov
push
mov
lcall
jge
outsb
sbb
xchg
mov
xchg
cmpsb
jmp
mov
ljmp
jo
es
sbb
mov
testb
shll
mov
fwait
ja
nop
jno
pop
cmpsl
jg
jns
add
jbe
out
cmp
andl
jl
sub
popf
rcl
stos
sahf
iret
aas
iret
outsb
jns
mov
out
icebp
int3
not
aad
inc
jg
shll
pop
lods
sub
inc
enter
dec
movsb
fists
mov
fs
sbb
js
pop
pop
sub
in
imul
mov
mov
imul
pushf
test
push
add
cmp
arpl
adc
cltd
push
fdivs
add
and
sahf
gs
xchg
inc
mov
adc
test
xchg
dec
loop
push
test
out
mov
movsl
push
mov
dec
xchg
sbb
out
inc
inc
mov
push
jo
pop
pop
nop
shrb
and
fisttps
or
lock
adc
add
popf
fcomps
lret
aad
test
imul
fidivl
cli
mov
cli
adc
out
cmpsl
in
hlt
mov
fidivl
arpl
aas
je
sbb
lods
pop
adc
push
inc
sbb
mov
into
dec
aaa
and
fistl
ja
push
ja
xchg
mov
or
adc
ficompl
sub
sub
lret
aam
into
sub
lods
hlt
push
call
jle
sub
inc
in
jp
out
mov
jb
sti
mov
mov
inc
sbb
jb
rolb
mov
ljmp
pop
cmp
sti
jno
movsl
jno
arpl
mov
jno
stos
sbb
pop
pop
pop
int3
inc
add
out
dec
test
jge
pop
push
ret
dec
shlb
rcr
test
adc
ljmp
bound
add
inc
sub
adc
lret
into
leave
add
in
dec
pop
rol
lcall
add
arpl
mov
jns
dec
jns
neg
mov
mov
dec
hlt
andl
scas
push
add
out
mov
scas
stos
mov
jae
pop
mov
and
into
push
sub
sbb
or
jge
jae
hlt
decl
add
mov
sbb
stc
aad
sahf
pop
sbb
xchg
ljmp
rorb
mov
scas
iret
mov
cmp
mov
data16
adc
push
xor
arpl
add
sarl
and
scas
push
cmp
push
pop
jns
push
test
or
mov
and
test
sbb
adc
aam
bswap
jmp
sbb
mov
fwait
xchg
lahf
aad
data16
adc
inc
test
mov
aam
shrb
adc
inc
cli
sbb
pop
xor
fsubs
pop
push
sbbl
subb
mov
lods
ret
xchg
mov
pop
test
push
jbe
mull
scas
push
jae
sub
out
fisubs
mov
cmp
jmp
icebp
mov
cli
sub
lock
das
popf
sub
sbb
sbb
adc
adc
push
push
sub
aas
shll
loop
aam
icebp
xor
js
fistps
xchg
lret
les
dec
lcall
mov
lock
pop
dec
cwtl
mov
cmpsb
enter
dec
stos
fsubrl
and
mov
outsb
out
mov
cmpsl
and
dec
xchg
mov
call
push
fucomp
push
cmpl
arpl
call
lods
iret
push
dec
inc
and
add
xor
lods
out
xlat
out
push
je
mov
mov
ja
and
dec
je
dec
iret
mov
and
xlat
pop
not
ds
sbb
add
xlat
xchg
pop
jno
add
pop
sbb
mov
imul
jae
push
jp
fwait
jl
lahf
mov
add
rcrl
fldl
xor
fnstenv
xor
mov
std
push
inc
pop
push
mov
jecxz
scas
test
pop
out
jbe
push
sbb
addr16
out
sbbl
xchg
mov
dec
inc
mov
cmp
fidivrs
test
clc
cmp
mov
and
call
or
pop
xchg
jl
or
add
movsb
mov
shll
xor
cmpsb
imul
ja
mov
ja
addr16
and
jecxz
loope
stc
inc
pop
lods
int3
shl
lahf
xchg
adc
sbb
cmp
fisttpl
push
xchg
pop
fdivrp
sbb
push
cwtl
sub
jg
mov
repz
add
sti
adc
fmull
rorb
adc
pop
scas
repz
test
jle
insb
stc
stos
fadds
rcrb
hlt
push
pop
mov
xor
es
push
and
aas
xchg
pop
mov
out
xor
sbb
ds
hlt
jne
pop
mov
jae
or
cmc
mov
hlt
jbe
int
stos
test
not
xchg
push
inc
rorl
cmp
loop
clc
test
push
or
int
xchg
adc
jg
insb
inc
nop
xchg
dec
push
add
fcomp
sub
testl
push
fidivrs
inc
leave
lahf
cwtl
cmp
sbb
push
cmp
popa
push
jp
cs
insl
int3
out
es
and
pop
cmp
push
popa
xchg
cltd
data16
jo
es
int3
push
xchg
test
and
xor
arpl
mov
jo
sub
jge
sbb
jmp
push
inc
lcall
jg
je
pop
jne
push
add
fsts
mov
mov
adc
adc
jo
dec
in
push
push
test
xchg
jle
push
mov
xlat
movsb
jecxz
jbe
into
push
jbe
dec
pop
jb
lods
pop
mov
enter
cld
int3
shlb
mov
out
push
jp
add
subl
xchg
shlb
xchg
jo
test
aas
jbe
cli
jae
xchg
jmp
sub
cltd
hlt
adc
add
xchg
jae
enter
ljmp
and
dec
jno,pt
mov
pop
sti
adc
lret
ret
adc
fs
cmpsl
gs
fistpl
mov
mov
les
ljmp
cwtl
push
xchg
fistpll
fldcw
sti
bound
and
out
jno
cmp
jbe
push
scas
fwait
sarb
fdivs
add
dec
jle
daa
stc
pop
xor
pop
cli
pop
pop
inc
enter
jecxz
xor
movsb
adc
mov
pop
inc
fcmovnu
insl
subb
ss
mov
mov
push
lea
test
adc
mov
stc
sub
enter
mov
sbb
les
scas
jo
out
pop
push
fmull
outsl
popa
push
push
ljmp
pop
sub
outsl
dec
out
daa
sub
cs
or
jmp
sub
jno
inc
add
test
xchg
adc
daa
ljmp
inc
cli
ja
ret
push
cmc
and
je
iret
and
in
notl
out
cmpsl
cltd
data16
xchg
sub
xor
xchg
cltd
lods
test
aam
xchg
mov
or
inc
mov
mov
lock
xchg
cmp
imul
test
sarl
movsl
stos
js,pn
push
or
sub
push
pop
adc
add
rcr
push
les
jae
out
imul
and
pop
sbb
shr
push
cmp
lods
movsl
fnstsw
dec
pop
adc
xor
sub
mull
and
mov
xchg
pop
int3
and
ds
cld
lret
sub
int3
mov
add
std
sub
je
sbb
mov
push
pusha
sbb
clc
jns
out
and
leave
ss
iret
cs
test
jl
enter
jle
add
jo
pop
fdivr
jae
test
mov
and
dec
push
mov
rolb
jecxz
dec
sar
jg
test
outsl
loopne
sti
jmp
cmp
hlt
push
lods
sbb
xchg
out
sti
jo
dec
sti
icebp
and
sbb
push
ss
sbb
or
pop
fxch
dec
leave
adc
out
dec
dec
mov
lcall
jmp
push
xor
fldt
lret
out
mov
pop
dec
adc
testb
fstps
bound
adc
insb
xchg
xor
mov
push
insl
pop
ja
or
mov
push
and
or
pop
out
call
lcall
mov
fwait
cs
movzbl
out
mov
lret
in
dec
lods
sar
jae
adc
in
test
xchg
xor
sub
sbb
adc
and
insl
scas
xchg
jno
adc
loop
or
adc
xchg
mov
jns
or
xor
fs
jmp
jnp
or
stc
int3
movsl
push
mov
dec
std
cmp
rdpmc
rcrb
cs
or
jnp
aam
aad
mov
cmp
subb
movsb
les
rcll
das
aad
icebp
mov
imul
push
rcrb
orb
out
xor
add
daa
ja
pop
xchg
cli
jbe
test
dec
js
mov
pop
inc
das
leave
movsb
mov
inc
jp
and
jae
lods
dec
mov
inc
aas
xchg
sbb
push
sar
push
movsb
rcrb
jp
and
daa
fldt
sub
xor
cmp
sahf
lods
or
das
lahf
or
loop
loop
lods
xchg
subl
pop
inc
dec
mov
mov
pop
push
pop
pushf
cmp
mov
push
pop
icebp
pop
jg
test
out
push
and
inc
sbb
or
negl
fists
ret
pop
and
mov
call
aam
mov
sub
popl
and
or
in
and
push
cmp
inc
in
add
nop
add
sahf
scas
aad
leave
mov
aad
add
leave
xor
and
cmpsl
or
cmp
and
mov
pop
mov
fdiv
mov
fwait
adc
and
mov
fld1
jp
clc
add
sahf
mov
inc
mov
mov
shll
sbb
pop
ds
adc
jo
jnp
dec
mov
add
es
fs
and
cmpl
mov
cmp
mov
fstpl
push
xor
rorl
fstpl
fsubr
xlat
inc
std
pop
lods
inc
and
outsl
fmull
fdivrl
sub
mov
enter
mov
sar
jge
ret
sbb
push
lock
sbb
xlat
add
inc
cmp
mov
xchg
cmpsl
add
lea
stos
test
jnp
xchg
fwait
iret
ss
fdivs
sbb
inc
stc
fucomip
sub
aam
sub
je
sub
imull
jmp
push
lret
pop
xor
cmpsb
push
cmc
xorb
and
push
and
xor
imul
shlb
int3
and
mov
sbb
mov
xor
cli
jmp
movsl
xchg
mov
popa
dec
mov
mov
jne
xchg
pusha
inc
in
add
movsb
and
repz
inc
adc
call
pop
jae
sti
jmp
jg
std
rorb
push
test
and
cmp
daa
add
sti
adc
jnp
jne
mov
fimuls
test
mulb
and
mov
jl
cmp
add
cmp
and
xchg
and
clc
icebp
not
fwait
loopne
dec
ret
fcomps
test
ds
mov
stos
rorb
dec
out
jb
mov
mov
jmp
std
pop
adc
cwtl
ss
sbb
jmp
sbb
ja
pushf
addr16
sub
iret
fildll
inc
rclb
ficoml
adc
loop
xor
mov
or
adc
jo
sub
imul
in
test
mov
sub
sub
shll
nop
loop
ja
out
pop
jg
jmp
mov
adc
sbb
push
iret
mov
mov
dec
mov
pushf
push
inc
test
push
es
sbb
out
sub
es
frstor
out
add
je
xchg
pop
xchg
mov
push
inc
inc
popa
push
mov
and
lods
aas
or
xchg
mov
sub
xor
or
adc
mov
fmul
mov
ret
ds
movsl
push
faddl
mov
xchg
mov
insl
mov
mov
idiv
sbb
mov
popf
fwait
andb
imul
jnp
popl
out
jo
mov
and
into
jecxz
sub
push
adc
jo
cmp
mov
pop
sbb
stc
loop
incl
popf
aam
adc
repz
inc
fnsave
lods
pop
loop
test
shr
in
sbb
adc
fsubs
popf
sahf
xor
sbb
sbb
pop
leave
lret
mov
mov
loopne
or
in
in
jns
jmp
dec
sub
xchg
pop
daa
jecxz
aaa
mov
fimull
inc
out
test
iret
push
cmp
xchg
and
test
popa
jne
scas
inc
icebp
dec
in
xor
aad
std
adcl
jmp
shl
xchg
jl
cmp
push
ret
dec
jg
stc
mov
pop
cwtl
mov
pextrw
xlat
dec
daa
popa
enter
lret
fcom
ds
outsb
mov
mov
adc
xchg
test
dec
ret
jge
stc
stc
pop
adc
dec
mov
lods
mov
jno
in
mov
xor
mov
pop
xchg
mov
push
out
jae
pop
shl
and
lret
in
mov
icebp
std
adc
lcall
and
cmp
cmp
movsl
lds
test
jmp
adc
mov
xchg
cmpsb
push
xor
cltd
repnz
or
sbb
xlat
loop
push
int3
adc
mov
push
mov
sbb
or
stos
mov
jnp
add
push
or
xchg
mov
cmovno
sbb
outsl
jmp
lcall
xor
pop
and
icebp
fnstsw
dec
arpl
popf
mov
hlt
push
cltd
cli
popa
and
mov
pop
js
mov
jbe
xlat
push
stos
in
fmull
xchg
dec
cmp
sbb
mov
loope
rclb
out
sahf
add
jo
adc
out
cmp
arpl
stos
fildll
cmp
cld
dec
std
out
repnz
pop
push
add
pop
mov
ret
scas
jge
jge
push
xchg
ret
cmc
popa
in
test
cltd
pop
xchg
dec
rorb
pop
loop
push
dec
pop
pop
dec
and
out
adc
pop
call
fdivl
test
bound
jbe
or
ja
cmc
inc
adc
or
adc
ficomps
xchg
cs
mov
rorb
add
cmp
fnstsw
insb
sbb
cmpsl
and
cmp
push
scas
mov
imul
or
sbb
xor
cmp
es
subl
fldcw
ja
xchg
out
xchg
push
xor
ret
mov
sub
movsl
cld
ljmp
xor
mov
or
in
pop
scas
cmpb
jae
dec
pop
gs
sbb
lods
test
pop
adc
push
int3
xchg
sahf
push
mov
mov
dec
fimuls
xor
jge
loop
mov
dec
or
add
test
sbb
push
sbb
out
adcl
aaa
inc
jge
add
nop
scas
adc
repz
cmp
xor
jne
adc
cmc
je
mov
xchg
jl
push
fisubs
push
cmp
out
test
mov
call
sub
int3
icebp
lret
imul
in
in
fsubs
sbb
mov
push
ret
pop
mov
mov
pop
cltd
xchg
shlb
scas
inc
cmp
cs
and
push
clc
aaa
pop
mov
or
pop
sub
pop
lock
les
push
mov
jnp
and
ds
xor
daa
scas
adc
movsl
or
rcl
rclb
daa
int3
mov
dec
stc
jnp
pop
gs
jno
sti
mov
mov
cmpsl
std
shl
in
mov
mov
leave
mov
mov
ret
xor
add
push
mov
xor
dec
jno
push
aam
sbb
pop
lods
and
xor
icebp
dec
das
push
or
js
stos
or
pop
les
adc
adc
mov
jecxz
adc
stos
jbe
mov
lods
scas
mov
mov
sub
jge
jbe
aad
cmp
aad
mov
fistpl
adc
loopne
mov
gs
jecxz
cmp
insb
fldcw
or
add
adc
sbb
aas
fstpl
scas
aaa
lock
xchg
sti
frstor
outsl
inc
sub
adc
int
aas
pop
push
and
mov
das
scas
popa
neg
shrb
jo,pt
stc
inc
jne
jns
add
mov
and
jnp
pop
xchg
push
lahf
mov
add
out
mov
sbb
repnz
movsl
inc
cmp
cmpsb
adc
je
adc
xchg
fwait
cwtl
mov
adc
jb
cld
test
xchg
xchg
mov
loopne
fdivl
fldl
ss
adc
cwtl
lcall
aad
out
adc
movsl
lods
adc
xorl
loope
jge
repz
dec
inc
mov
jl
lea
pop
sub
or
cmpsl
fisttpll
dec
sbb
dec
push
mov
dec
fstpt
roll
inc
das
hlt
mov
pusha
lcall
push
mov
arpl
sbb
ja
stos
lcall
sar
jo
jp
out
fidivrs
mov
imul
push
add
pop
daa
xchg
int3
lock
ret
mov
lods
nop
out
jl
addr16
divb
mov
fmulp
js
xchg
mov
imull
xchg
stos
lds
loop
and
dec
push
sub
shll
jle
jb
push
jns
in
mov
and
jb
mov
aas
icebp
icebp
xor
sarb
es
sbbl
or
cli
fistps
mov
pusha
or
call
jbe
xor
adc
lret
aad
mov
std
inc
js
sbb
pop
mov
lcall
rcrl
pop
mov
xchg
and
cmp
push
push
je
sti
mov
pop
ret
dec
pop
jne
aas
jl
mov
jb
lock
subl
mov
adc
outsl
push
push
subb
mov
push
jge
xlat
inc
and
xor
mov
and
out
fstpt
hlt
dec
sbb
jle
cmpl
pusha
cmpsb
iret
add
shll
outsl
aam
icebp
add
std
sarl
sub
push
push
icebp
test
dec
sbb
imul
pop
mov
sbb
push
lcall
lea
and
cmp
rcr
sub
jns
mov
pop
and
lret
insl
sar
ds
pusha
mov
cmp
clc
mov
mov
jns
loopne
rclb
outsb
daa
arpl
lret
jne
test
test
cmc
sbb
and
icebp
mov
filds
xor
inc
or
mov
push
inc
stos
std
fimull
data16
shll
data16
add
insb
sbb
adc
push
push
lods
mov
mov
les
mov
pop
in
notb
orb
jg
mov
mov
test
negl
sub
dec
loopne
ret
mov
mov
pop
inc
push
gs
cltd
inc
push
call
pop
shrl
std
jmp
outsb
mov
xor
jecxz
push
and
lods
and
cld
dec
adc
hlt
test
push
insb
cmc
into
jb
mov
jns
dec
mov
adc
scas
cmc
in
clc
shrl
cmc
jle
push
dec
mov
mov
in
inc
je
xchg
fwait
push
sub
xchg
das
sub
mov
ss
fcomi
jnp
mov
addb
adc
pop
push
and
mov
dec
in
push
std
xor
sarb
mov
test
jne
pushl
dec
sbb
cld
mov
jge
stos
add
daa
mov
test
xchg
and
jl
fsubr
inc
sarb
scas
xchg
xchg
cmpsl
and
jl
cmp
bound
out
xor
mov
fsubs
mov
xchg
push
sub
out
cmc
popa
and
in
jge
dec
jbe
ljmp
mov
pop
push
dec
pusha
mov
nop
pushf
in
cmp
jle
lea
mov
outsb
adc
sti
add
outsb
sub
lods
inc
push
int3
pusha
ss
push
adc
mov
stc
mov
out
std
out
add
mov
test
mov
or
adc
adc
test
out
and
sbb
mov
lock
xchg
shr
pop
rorl
add
adc
ret
into
add
xor
mov
mov
addb
pop
dec
mov
es
inc
aam
or
scas
or
nop
adc
loope
out
cmp
mov
xchg
xor
fmul
cmp
aaa
fcoml
shrb
xor
sbb
sub
cmp
jb
int3
inc
adc
inc
sbb
mov
lcall
jnp
pop
sub
in
jae
add
xor
mov
out
cli
inc
fistl
jno
nop
mov
bound
addb
insl
or
ja
js
mov
add
mov
xchg
jbe
movsl
add
in
inc
cmc
fimull
popf
daa
int3
push
push
scas
lock
push
sub
and
test
aad
xchg
push
rol
mov
fldl
jne
les
pop
scas
insb
daa
cmpsb
cli
mov
pop
mov
xorl
mov
popf
mov
sti
in
jo
mov
or
hlt
ret
sti
insb
fwait
lds
xchg
adc
daa
call
mov
xchg
dec
inc
lds
fnstcw
imulb
lock
mov
sub
dec
cmp
es
js
pop
mov
int
xor
sarb
sbb
sub
fsubp
out
mov
nop
mulb
xor
and
push
adc
or
movb
sub
out
cwtl
and
outsl
ret
push
sub
sarb
hlt
dec
mov
inc
push
in
push
dec
inc
adc
aaa
cmpb
xchg
scas
and
andl
shrl
mov
cmp
xor
mov
or
mov
mov
je
adc
add
cwtl
cmpsb
jmp
push
cmp
scas
push
outsb
push
pop
jae
mov
pushf
hlt
inc
sbb
xchg
rcll
mov
gs
outsl
mov
out
xchg
orl
cltd
int3
orl
popa
fbld
dec
dec
jb
push
cld
ret
in
movsl
add
sub
inc
xchg
xchg
loopne
add
insb
xor
repz
ret
test
fwait
push
loope
enter
dec
mov
into
push
out
out
leave
enter
insl
add
sbb
adc
push
insb
sub
pop
mov
int
shl
sub
mov
xchg
or
xor
xor
and
mov
pusha
adc
mov
sbb
es
daa
lahf
sbb
cmpps
pusha
xchg
icebp
adc
mov
loop
push
mov
rclb
fnstcw
popf
mov
pop
imul
fnstsw
neg
aad
aas
das
lds
mov
int3
inc
inc
mov
fwait
sbbl
or
fidivrl
sti
mov
jb
mov
sub
add
add
int3
pop
pop
xchg
mov
mov
inc
bswap
push
jae,pn
or
out
and
xlat
or
mov
pop
mov
cs
lods
fimuls
and
jle
push
sub
test
cmpsl
mov
in
dec
subb
add
mov
jno
mov
rcrl
pop
xorl
test
pusha
jo
iret
xor
or
add
dec
jg
or
loope
pop
xor
mov
hlt
dec
popa
idivl
incb
int
fcmovnb
inc
popa
mov
pop
push
sub
ss
cmp
cmp
mov
fxch
test
out
dec
dec
sbb
fisubs
fisttpll
in
mov
mov
jno
loopne
jge
rclb
pop
decl
popf
add
cld
ficompl
test
test
mov
mov
js,pt
push
mov
into
mov
popf
mov
cmovo
mov
cmp
or
es
dec
and
mov
aaa
lcall
jne
mov
dec
cld
fbld
dec
leave
sub
jns
cmc
jle
xor
or
inc
popa
push
cwtl
addr16
sub
sub
jmp
xor
sub
in
push
and
pop
loop
fcompl
mov
inc
mov
fsubs
mov
xor
xor
movl
mov
test
sub
fisubrl
mov
and
push
inc
pop
loopne
out
push
test
scas
mov
mov
pop
push
int3
stc
dec
fsubrs
mov
icebp
push
hlt
push
jge
xchg
mov
add
inc
cmp
jp
out
xor
inc
fadds
mov
mov
shll
addb
gs
outsl
or
les
cmpsl
add
push
jo
out
fwait
js
orb
js
inc
ljmp
inc
xor
ljmp
xor
in
mov
sub
lods
lds
and
icebp
sub
xor
inc
push
cmp
fmull
jae
ret
inc
sub
inc
insb
ret
sahf
pusha
aad
jecxz
xor
xor
test
cmp
add
movsb
and
pop
mov
test
sbb
add
mov
mov
xchg
cmp
adc
inc
fsubrl
inc
xchg
daa
jnp
iret
mov
mov
lret
loopne
data16
stc
sahf
adc
xor
sbb
in
mov
xchg
movsb
lock
cmpb
mov
fimull
push
push
shr
push
dec
xchg
jg
mov
lds
mov
sub
inc
cmp
imul
adc
xchg
push
mov
ficoml
outsb
stc
mov
xchg
out
jae
add
repnz
add
pop
xchg
push
xor
and
pop
cmp
and
jno
adc
mov
mov
in
cld
std
out
push
mov
fsubr
ret
sbb
in
adc
fistpll
sub
notb
xchg
leave
nop
mov
mov
sbb
adcb
sahf
lahf
mov
cmp
push
out
loope
mov
jmp
sbb
and
je
sbb
jno
sbb
stc
mov
out
aas
pop
scas
mov
or
or
or
ret
loop
icebp
sbb
jnp
mov
lea
inc
fisubrl
hlt
sub
in
jae
stc
in
dec
shl
xor
or
icebp
test
adc
adc
mov
mov
mov
stc
popa
test
cmp
pop
in
stos
mov
fdivs
jns
jns
inc
aad
ja
aam
push
cmc
neg
je
jns
push
push
jmp
pop
mov
sub
sub
jns
xor
mov
push
xor
andl
push
fs
lods
or
jg
dec
pop
rolb
lret
xor
jne
addr16
jbe
lock
inc
xor
mov
lea
mov
push
pop
mov
inc
icebp
adc
xor
jnp,pn
jns
in
rep
add
data16
insl
bound
sahf
add
push
mov
sbb
cmp
loope
cmp
dec
lods
xlat
pop
leave
adc
xchg
out
or
xchg
fldl
pop
pop
push
mov
jns
sub
cmpsb
inc
adc
imul
cmc
lret
cmp
jnp
push
xor
sbb
or
cmp
add
adc
fmuls
int3
je
ds
inc
lret
xchg
mov
cwtl
add
stc
push
popa
push
jbe
jp
sarb
ds
or
outsb
imul
sti
out
fbld
xor
int
mov
call
repz
call
push
enter
ja
jl
push
in
lods
adc
and
fs
lods
jg
mov
mov
sub
jb
loope
jmp
cli
popa
inc
sbb
push
push
jle
cmp
mov
aas
cmc
or
lahf
pop
xchg
aas
in
das
xchg
popa
jns
mov
ret
dec
bound
inc
mov
pop
pushf
jle
lods
fmuls
shll
repnz
stos
inc
in
cmp
idivb
popf
xchg
pop
enter
and
mov
rcrb
dec
stos
pop
out
push
xchg
popa
shld
data16
xor
fcmovu
out
sub
xorb
ja
or
xchg
or
jl
ja
sub
lock
and
sarl
rclb
push
test
add
xlat
mov
push
test
dec
lcall
notb
or
sub
cmp
in
add
pop
mov
lods
adc
mov
mov
ljmp
iret
lcall
xor
sbb
jmp
pop
insl
outsb
lea
lock
jne
out
dec
orl
xchg
cld
mov
mov
lcall
add
add
mov
add
dec
shr
pop
loope
and
mov
loop
mov
xor
fs
enter
or
dec
sub
idivl
push
int3
sahf
cmp
jns
jle
push
lods
sbb
or
xor
lcall
rcll
aad
xor
mov
jnp
push
jle
lret
test
fwait
mov
lea
mov
add
scas
dec
add
xlat
ss
xchg
pusha
inc
mov
jb
jmp
jno
jmp
test
mov
cwtl
dec
out
popf
sub
xor
push
jb
lret
loope
jno
xor
loope
jnp
ljmp
jecxz
lds
movsb
loope
cmp
mov
decl
pop
scas
inc
inc
pusha
fldcw
mov
iret
inc
mov
gs
js
sbb
add
cmpsl
in
inc
push
subb
fimuls
add
repz
mov
mov
push
out
das
push
sbb
stc
xor
icebp
sbb
lret
lock
mov
xchg
jl
lods
mov
inc
inc
jl
fnstenv
das
dec
and
out
es
mov
dec
add
aaa
sahf
mov
push
inc
jg
sahf
enter
jle
sbb
mov
lods
nop
cltd
aam
jnp
jle
mov
cld
in
jl
add
int
or
push
push
js
push
lods
cmp
jle
and
sub
adc
leave
shlb
ficoms
xchg
push
push
std
xchg
lret
mov
pushf
adc
cwtl
pusha
mov
push
pop
pop
mov
movsl
iret
xor
mov
jnp
aaa
test
mov
jb
repnz
or
clc
mov
pop
fwait
fwait
movsl
daa
push
push
outsb
cmpsb
mov
int
fcomi
fdivr
aas
fs
negb
insl
maxps
or
ljmp
xor
cltd
xor
ret
or
mov
dec
sub
shl
mov
lret
pop
pop
push
jle
or
jp
movsb
add
repz
cmpsb
ds
ljmp
xor
mov
popf
mov
xchg
xchg
xor
rcrl
stos
outsl
adc
jo
lcall
fcmovnu
nop
sbb
stos
pop
mov
and
insb
fmull
adc
push
sahf
mov
pop
push
mov
pushf
call
sub
sbb
push
mov
cmpsb
icebp
cmp
lahf
jg
aas
loop
aas
aam
jp
or
pop
mov
sbb
frstor
test
jmp
ret
or
repz
call
shll
dec
xlat
cmp
aaa
cli
lret
and
sbb
das
push
and
xor
lea
pushf
or
loope
fidivrl
xor
fiadds
out
lahf
insb
mov
lret
cltd
mov
jp
scas
jno
in
pop
scas
imul
aas
test
mov
lods
das
add
sti
sbb
sbb
shll
inc
js
call
hlt
shlb
xchg
adc
loopne
addr16
add
ss
push
mov
mov
mov
fstpt
test
cs
int3
jg
int3
mov
and
xlat
xor
xor
mov
mov
dec
cmp
std
dec
addl
mov
sub
sbbb
jbe
mov
mov
pushf
push
dec
add
adc
stos
push
test
cltd
cltd
rorb
int
iret
sbb
dec
aad
push
sbb
outsb
mov
aam
pop
jns
mov
cmpsb
pause
ds
or
nop
mov
mov
jecxz
xor
scas
stc
jno
loopne
pushl
cmp
ds
fdivr
cmp
sbb
push
sbb
loopne
lds
je
sbb
aaa
xchg
dec
mov
pushf
push
lea
cld
xchg
iret
je
inc
pop
or
rcl
xchg
jne
or
popf
lret
cwtl
test
fistl
inc
jnp
cs
xchg
jle
pop
xor
inc
jle
mov
std
out
dec
mov
sub
cmp
push
dec
cltd
popa
leave
cmp
arpl
es
push
inc
mov
jp
ja
push
decb
pusha
cmpsb
jb
stos
mov
icebp
mov
jp
test
add
mov
dec
push
mov
ret
fwait
pop
orl
or
es
leave
mov
dec
shlb
pop
xchg
cmpsb
or
sub
push
jo
mov
fs
in
xchg
mov
stos
lods
pop
out
mov
cmc
in
rcl
cmp
jg
lds
loop
dec
rorl
adc
pop
andl
andl
fs
mov
imul
js
xchg
jnp
jnp
test
cs
push
xor
cld
ret
addr16
xchg
jnp
cmp
adc
lea
fiaddl
lret
push
shrb
aaa
xchg
dec
push
les
add
push
sub
sub
pop
xor
das
arpl
xorb
ffree
mov
dec
cmc
aam
mov
push
ret
mov
push
cltd
cltd
mov
mov
xor
pop
stos
pop
loope
icebp
popa
xchg
mov
lcall
mov
jnp
js
out
and
mov
scas
mov
clc
std
cmp
cltd
and
pop
bound
orl
add
mov
bnd
shll
test
fisttps
lahf
xchg
sbb
dec
ss
fnstcw
mul
imul
mov
jns
pop
mov
stos
jne
les
push
outsl
mov
mov
sti
or
pop
jecxz
or
outsb
cmpsl
pop
lods
push
mov
lea
mov
ret
outsb
cwtl
mov
mov
cmp
mov
dec
in
cmp
xor
sub
and
outsb
inc
mov
sti
out
mov
jb
add
in
outsl
inc
inc
or
sahf
add
or
in
add
cld
xchg
xchg
jg
mov
cmp
aad
rcll
sbb
mov
into
hlt
lret
jmp
and
imul
mov
jmp
sub
sti
xchg
cmp
mov
fwait
stos
das
cld
je
adc
xchg
inc
dec
inc
out
rclb
sbb
dec
jne
outsl
ja
push
call
cmp
cmc
mov
lret
movsb
pop
lahf
pusha
out
inc
push
ljmp
xor
popf
and
movsl
and
cltd
sub
mov
out
scas
fs
stos
dec
je
push
jg
rcll
popa
repz
and
icebp
jb
inc
popa
or
sbb
sub
stos
cwtl
mov
bound
pop
mov
add
jecxz
andb
out
jge
stos
sub
cld
cmpsb
pushf
imul
xchg
sbb
insb
add
inc
push
push
lret
imul
mov
adc
ds
faddl
stos
movsb
bound
cs
sub
pop
jno
outsb
and
icebp
movsb
aam
cmp
mov
ss
cmp
jae
dec
int
in
popa
sbb
fmul
inc
mov
adc
mov
sbbl
int3
add
cmpsb
cmpsl
dec
fcmove
dec
and
movl
mov
pushl
push
push
in
mov
testb
dec
das
xchg
dec
inc
pop
inc
or
je
pop
mov
xchg
add
mov
adc
divb
inc
cmp
xchg
or
jmp
filds
sbb
mov
jp
es
adc
lock
inc
lods
shr
ss
outsl
mov
scas
or
sbb
push
aam
inc
rcll
cmc
sbb
push
xorb
ret
sbb
jo
pop
fidivl
mov
add
push
pop
or
pushf
sub
mov
or
in
cmc
mov
jle
pop
mov
mov
cmp
sbb
in
out
aaa
mov
mov
jecxz
popf
xor
stos
gs
jmp
add
cli
add
movsb
sbb
pop
mov
dec
rcl
pop
dec
mov
pop
and
pop
pop
cmc
cli
repnz
xor
xor
adcb
adc
fisubs
aaa
adc
mov
in
pop
cltd
jbe
pop
test
in
push
aam
mov
or
daa
test
ljmp
dec
pop
ds
popa
adc
jp
adc
aas
outsb
xchg
jne
jge
mov
addr16
xchg
enter
jl
std
dec
mov
aaa
xchg
xchg
pop
dec
lods
mov
popf
je
pushl
popf
adc
adcb
adc
or
mov
adc
push
aaa
pushf
inc
or
mov
sbb
gs
divb
fstpt
test
mov
dec
cli
loop
adc
ljmp
fidivl
jle
lcall
jg
mov
mov
xor
es
icebp
je
pop
das
push
sahf
dec
jnp
lret
dec
in
mov
lret
cli
in
mull
orl
mov
inc
aad
fdivrl
enter
cwtl
shrb
pop
dec
cmp
cmp
cmp
insl
xor
vpshaw
inc
xor
or
negl
lahf
cmp
fidivrs
sub
aaa
cmp
popf
test
add
jl
mov
push
js
xchg
popf
pop
push
add
sbb
dec
xchg
push
jp
stc
sub
sahf
push
pop
sbb
add
pop
out
mulw
loope
pop
pop
mov
inc
mov
cmp
in
jmp
mov
std
cmpsl
inc
xor
inc
push
mov
loope
insl
test
loop
mov
in
dec
sbb
add
dec
mov
jns
into
or
xor
push
jnp
mov
mov
rorl
lahf
pushf
insl
jbe
mov
vucomisd
push
inc
in
stos
nop
mov
xchg
or
and
or
rol
enter
and
lods
out
pushf
dec
loope
xchg
sbb
xor
insl
jne
jbe
and
sub
cmp
jecxz
aaa
scas
lret
or
or
xchg
inc
out
sub
fs
ljmp
pop
out
out
ret
fstl
call
mov
dec
sbb
mov
iret
xchg
ds
jl
mov
mov
scas
pop
loop
sbb
or
mov
into
mov
ret
imul
pop
out
sub
iret
xchg
pop
imul
imul
push
adc
sbb
orl
add
daa
sti
test
push
pop
into
stc
jl
fs
mov
mov
fs
arpl
pop
dec
vpaddusw
popa
jno
cmp
mov
dec
loop
fisttps
fsts
fwait
inc
xor
clc
mov
mov
pop
repz
inc
sbb
pop
inc
bound
hlt
inc
mov
pop
pop
movsl
call
sbb
sub
ljmp
and
push
cmp
mov
cld
add
cmc
sub
inc
jbe
jbe
cmp
pop
in
cmp
sbbl
dec
pop
inc
sti
out
enter
ds
insb
pop
jge
outsb
mov
lods
stos
sbb
outsl
jne
sti
xchg
xor
jb
jno
imull
mov
cmc
pusha
mov
cwtl
add
repz
push
leave
mov
inc
sarb
loop
add
shr
mov
cli
test
icebp
xchg
or
adc
das
adc
sti
push
ret
adc
stc
out
mov
dec
iret
fisubs
test
or
ljmp
pushf
mov
jmp
lahf
jae
loopne
and
roll
mov
out
mov
pop
int
popa
repz
pop
hlt
sub
sbb
mov
mov
in
pop
int3
scas
mov
rolb
xchg
jp
and
jl
jae
jb,pt
sub
popa
jge
adc
cltd
sbb
scas
jnp
cmp
mov
aaa
adc
xlat
push
or
jecxz
add
loopne
sbb
fsts
incb
inc
cmp
and
rorb
scas
loop
stc
mov
data16
stc
scas
imul
inc
pop
les
mov
mov
cmp
sub
cmp
jge
out
loope
faddp
cmpsb
adc
aad
jo
and
mov
cmpsb
insb
cmp
not
int3
sub
clc
je
loope
and
push
mov
stos
sbb
dec
mulb
inc
mov
nop
adc
cmc
repnz
push
jnp
scas
jp
pop
jl
cmp
mov
testl
adc
xchg
xchg
push
cs
dec
movsb
pop
xchg
xchg
rclb
or
aam
xor
push
adc
call
cmp
aas
xchg
stos
clc
outsb
fs
jecxz
push
push
wrmsr
cmp
test
or
dec
dec
ljmp
pop
cli
or
and
inc
mov
jo
xchg
sahf
out
pop
aad
adc
add
mov
mov
pop
leave
loope
cmp
pusha
or
lods
sbb
mov
xor
fsub
fstps
shl
std
sub
push
inc
dec
or
and
outsb
lcall
lds
cmpsb
testb
mov
push
jb
cmc
hlt
stos
mov
div
cltd
inc
adc
inc
add
es
mov
sub
pushl
fldl
sub
jmp
xorl
fs
xchg
mov
dec
enclu
mov
dec
in
push
mov
xor
sub
pop
sbb
jmp
pop
fwait
gs
dec
repnz
mov
or
sub
cmc
xchg
mov
pop
je
enter
and
sbb
add
out
arpl
sub
in
pushf
aam
test
push
jle
mov
add
pop
mov
sub
iret
aam
daa
push
or
daa
push
xchg
scas
push
add
or
hlt
addr16
xchg
jb
call
inc
push
xchg
dec
je
scas
cmp
add
pop
sbb
push
lds
ficoms
les
ljmp
cs
mov
mov
and
testl
add
inc
jge
jo
clc
into
dec
loopne
lret
inc
sti
test
sbb
or
dec
adc
scas
cmp
je
neg
cmp
mov
push
mov
data16
dec
cmpsl
xlat
mov
xor
lods
scas
mov
dec
mov
in
movsl
scas
push
cmp
in
pop
sub
popf
das
es
dec
jmp
or
mov
inc
sarb
push
dec
xchg
stos
sbb
pop
xor
fucom
cs
add
lock
mov
xor
ss
dec
subb
andb
inc
hlt
mov
daa
xor
xlat
ja
and
popa
mov
das
or
sbb
mov
imul
lods
out
mov
mov
jno
pop
xchg
mov
movsl
dec
ret
xlat
leave
pop
mov
and
add
jge
daa
xchg
push
outsl
sahf
pop
sub
into
dec
add
xchg
mov
cli
xor
jp
sbb
loopne,pn
sub
imul
sbb
mov
add
ds
loopne
lods
adc
cmp
xchg
ds
sub
cmpl
sti
lds
scas
out
leave
mov
xor
push
stos
pop
lret
xor
sub
in
fdivrp
mov
jbe
jg
adc
mov
in
ss
mov
outsl
cs
cwtl
push
into
push
or
jnp
cmpsl
lds
mov
inc
push
jp
shrl
addr16
test
adc
out
fnsave
cmp
push
ret
dec
xor
mov
push
add
mov
jl
fwait
sahf
jmp
cld
insb
add
inc
mov
shll
into
arpl
test
lahf
lods
sar
stos
cmc
rcr
push
push
shl
jnp
cmp
jp
mov
fisubs
adc
leave
pop
push
test
adc
or
call
adc
push
sub
pop
jno
pushf
nop
lods
in
jae
js
loop
stos
movsb
lea
and
insl
xchg
insl
idivb
es
inc
js
add
mov
out
adc
xchg
lret
hlt
pop
clc
inc
gs
adc
out
out
mov
jp
lcall
sti
add
lret
loope
adc
inc
xchg
xchg
xchg
lret
pop
test
scas
out
mov
push
or
add
cmovb
clc
data16
mov
and
cmpb
lock
aas
sarb
xchg
scas
push
das
xchg
mov
or
aad
fistpl
addr16
cmpsb
sub
pop
sub
mov
sub
cltd
push
sbb
jno
ror
push
lods
cmp
xchg
into
sbb
mov
mov
fildll
repnz
pop
jbe
mov
int3
mov
fmuls
mov
push
jge
icebp
dec
push
out
scas
les
sub
dec
push
sbb
fadds
or
and
xor
or
popf
ret
sub
cltd
stos
scas
sub
pop
jno
sub
stos
loope
mov
aaa
loope
mov
jecxz
xchg
mov
out
imul
js
pusha
and
fs
dec
dec
adc
ret
lahf
movb
daa
cli
sbb
mov
pop
pusha
mov
ficompl
pop
xlat
aaa
repz
js
divl
mov
cmpsl
jl
and
jle
jbe
mov
jecxz
jp
cmp
push
lcall
cmp
xchg
inc
sbb
xchg
jle
jecxz
and
in
scas
add
and
dec
mov
cld
data16
cmp
outsl
out
cmovne
adc
cmc
pop
mov
js
mov
rol
cmc
cmpsb
out
mov
fiadds
test
inc
or
fdivs
movsl
std
or
dec
xchg
test
or
and
repz
cmp
mov
sub
push
pop
repnz
mov
mov
xor
cmc
lds
rcrb
pop
fwait
enter
std
stc
cmp
mov
adc
pop
pop
mov
popf
divl
inc
mov
jbe
xor
test
sub
xchg
jle
inc
lea
sahf
clc
mov
out
mov
cmp
leave
loopne
and
popa
aas
clc
sti
daa
inc
outsb
or
inc
pop
lahf
loope
xlat
sbb
or
leave
cmpl
mov
mov
scas
sub
icebp
arpl
mov
mov
sub
xchg
jae
fbld
xchg
inc
pushf
xchg
ret
repnz
cmpsb
adc
inc
or
dec
adc
push
movsl
iret
adc
cltd
std
push
sub
jge
insl
adcl
and
mov
rolw
and
aam
mov
xchg
and
sub
xlat
xchg
sbb
adc
mov
cmpsb
mov
cld
add
jmp
fimuls
fdivr
mov
xchg
xchg
pop
orb
jmp
sub
dec
mov
sub
rolb
stos
mov
cmpsl
adcb
adc
dec
sbb
xlat
dec
ret
rol
add
mov
out
or
lods
popf
or
nop
test
jae
dec
add
scas
push
dec
mov
or
sub
cmp
push
pop
jnp
push
mov
xor
out
dec
neg
inc
fnstsw
inc
and
sbb
push
mov
add
mov
sarl
fisubrl
sarl
aas
jmp
lock
jo
insb
mov
xor
mov
sar
and
lret
mov
shlb
xlat
mov
mov
cld
test
xor
pop
rclb
mov
fcom
or
add
or
and
and
imul
and
out
ljmp
call
jo
ds
mov
sbb
pmullw
test
insb
or
test
adcl
jmp
out
fimull
stos
mov
outsb
negl
ja
inc
jl
jns
aad
out
in
push
outsb
jb
mov
jl
pop
sub
inc
inc
mov
loop
mov
gs
inc
sbb
sahf
pop
xor
stc
test
ret
push
sbb
cmp
inc
sarb
repz
insl
fcomi
nop
lds
jne
rolb
mov
ja
rcrb
jecxz
and
inc
mov
js
jle
xorl
icebp
add
aad
andb
dec
pop
enter
fdivr
es
clc
xor
xchg
sbb
or
lods
dec
mov
mov
clc
je
rol
dec
add
xchg
mov
ret
sbb
inc
pop
xor
ja,pn
ja
pop
movsb
enter
push
mov
cmp
adc
sbb
adc
ljmp
gs
sti
fstps
hlt
push
pushf
dec
xchg
push
addb
sbb
adc
mov
aad
pop
pop
sahf
mov
cmpsl
xchg
js
sbb
or
mov
sti
mov
inc
jl
ljmp
pop
and
and
xchg
xor
jg
aad
mov
sarb
nop
xchg
push
testb
jl
rsqrtps
dec
xchg
xlat
cmp
imul
aas
jg
push
test
mov
jle
cwtl
subb
pop
push
stc
pop
pop
mov
cmp
mov
or
std
iret
cs
inc
lret
xchg
mov
inc
mov
ret
jo
pushl
lahf
inc
fdivrs
xchg
xchg
jne
daa
mov
rolb
inc
out
popf
shl
push
mov
movsb
fsubrs
ljmp
sbbl
jle
xchg
cwtl
push
mov
mov
add
mov
push
mov
mov
rcrl
mov
addb
sahf
insl
movsb
xor
push
ss
cmpl
xor
and
mov
sub
popl
jmp
pop
mov
push
xchg
adc
pop
out
leave
pop
lret
jle
cwtl
ja
pushl
xchg
xchg
shlb
mov
and
sahf
xor
idivw
sub
and
stos
mov
push
xchg
jbe
in
sub
pop
stos
jbe
mov
test
mov
xchg
gs
xlat
pop
daa
cmp
pop
jae
and
repnz
adc
pop
test
sub
adc
pop
lcall
jne
mov
clc
int3
loop
xor
sub
pop
int
and
shll
jo
jmp
in
fistpll
adc
xchg
in
aam
cmc
adc
fdivr
je
daa
movsb
in
data16
inc
jge
aad
movsb
faddp
pop
xchg
dec
lds
push
mov
fdivrs
and
leave
cmp
inc
sbb
and
popf
push
pop
xchg
xor
rorl
jecxz
es
fistps
rclb
jmp
outsl
nop
fwait
jae
rcr
xor
mov
arpl
pop
aam
sub
adc
inc
add
insb
cmpsl
test
sbb
js
lods
push
and
mov
fisttpl
ret
xchg
mov
rcr
or
test
insb
int3
daa
push
scas
int3
xchg
adcb
inc
and
clc
pop
and
rclb
dec
aas
push
push
frstor
iret
lock
stos
mov
into
lods
test
mov
mov
lahf
lret
xchg
aam
or
out
ret
inc
adc
pusha
xchg
and
aad
sub
sub
mov
test
cmp
xchg
mov
xchg
sub
stos
jnp
rcll
cmp
fidivl
aam
aas
jp
mov
mov
sahf
cltd
jl
andl
movsl
lret
call
ja
mov
adc
ret
int
adc
insl
std
int
mov
xchg
sbb
cltd
dec
movsl
imul
sbb
arpl
xchg
sub
xchg
test
out
stos
ficomps
sub
inc
xchg
and
std
lds
andb
jmp
inc
inc
cmp
out
pop
cmp
and
cmpsl
jnp
fistl
pop
or
and
jge
pop
loope
stos
push
sub
mov
push
jbe
out
pop
inc
jno
pop
lcall
out
outsb
inc
in
loope
xor
cmp
inc
xchg
dec
pop
shll
dec
call
insb
add
pusha
xchg
stos
sbb
xor
xchg
or
shl
data16
fisubl
push
pop
repnz
and
sti
and
jbe
and
push
jns
insb
out
push
std
pop
js
inc
adc
pop
ja
ds
and
xor
mov
push
js
cmp
outsl
xchg
jbe
movsl
adcb
lock
test
lahf
loop
and
adc
dec
pop
push
lahf
clc
mov
fisubl
mov
outsb
loop
mov
hlt
jae
int3
cmp
inc
mov
add
mov
or
push
pusha
push
pop
pushw
push
rcl
jp
cmp
mov
aad
mov
jp
lea
out
jno
fildll
shll
in
mov
mov
push
out
fimull
push
mov
nop
sub
inc
addr16
sahf
fsubl
stos
aas
mov
mov
or
and
push
or
rclb
jns
cmp
insb
test
dec
sub
mov
dec
mov
inc
xchg
xchg
iret
mov
mov
dec
dec
xor
loope
dec
pop
outsb
add
into
inc
and
scas
pop
fists
cs
and
or
insb
jp
inc
adc
jae
dec
or
dec
pop
cmp
fcoms
push
and
test
push
test
inc
movl
mov
sub
scas
ja
push
or
fnstsw
fwait
add
aaa
inc
push
ja
mov
and
pusha
jb
std
pop
jne
div
inc
pop
mov
loopne
int3
fs
pop
pop
daa
call
popa
mov
add
xchg
or
loopne
imul
xchg
scas
in
shlb
pop
scas
ja
push
dec
adc
mov
cltd
xchg
leave
and
jge
pop
in
jns
push
ja
mov
sbb
jl
fimull
mov
insl
clc
add
aaa
dec
js
xchg
dec
jb
add
jecxz
out
idivb
std
fsub
dec
xor
push
cwtl
cmp
jle
xchg
sub
orb
sub
fs
or
clc
loopne
dec
xor
es
xor
push
inc
lods
adc
sub
inc
dec
jl
xor
and
jbe
sar
cmpl
dec
xor
or
xchg
mov
push
fld1
movsb
jle
sahf
mov
xchg
in
popl
repz
push
sub
bound
ret
outsb
fcoms
xor
ret
or
sub
insb
pop
out
add
out
js
fisubs
test
int3
xchg
enter
fs
mov
push
std
ja
sbb
ds
or
ror
arpl
inc
xor
push
jne
mov
je
adc
int3
mov
fisubrs
daa
xchg
jne
or
lcall
mov
pop
inc
xlat
push
and
insl
sbb
sbb
test
push
scas
xchg
xchg
nop
imul
test
jb
cmp
nop
mov
xchg
add
cmp
jecxz
out
test
push
cmp
cld
loop
out
roll
mov
adc
mov
xchg
mov
test
push
xchg
lods
pusha
pop
mov
jo
nop
lahf
adc
out
aas
divb
pop
popa
jl
outsl
inc
xchg
scas
sbb
xor
mov
stos
and
mov
dec
xor
test
jl
aam
sub
fmull
cwtl
fwait
push
ljmp
jnp
pop
pop
and
mov
push
adc
cmp
adc
shll
push
mov
pop
dec
or
rorb
pop
fsub
xchg
push
in
mov
push
adc
cmpsl
sbbl
decb
cltd
loopne
notb
cli
loopne
inc
jg
and
sbb
lret
psllq
mov
xchg
add
out
int
xor
insl
fisttpll
push
add
arpl
inc
clc
xchg
jl
push
ja
int3
pop
popf
mov
jns
test
sub
in
jb
jb
je
jns
scas
outsb
loopne
pushf
and
adc
push
loope
loop
inc
push
sbb
pop
cmp
int3
push
je
inc
sahf
leave
lea
mov
sub
fsubs
pop
imul
call
hlt
adc
cmp
aaa
mov
mov
add
inc
ficoms
shl
jbe
dec
aam
lret
mov
mov
scas
dec
pop
inc
rolb
mov
scas
cmp
in
push
push
dec
icebp
sub
es
cmpb
inc
mov
jns
stos
mov
dec
stc
push
scas
push
das
loopne
jns
dec
jl
out
loope
adc
cwtl
shll
fwait
pop
mov
mov
mov
jns
push
subb
jge
and
mulb
loopne
mov
lods
insl
mov
pop
pop
iret
ret
and
dec
push
movsl
xor
xlat
cltd
push
int3
mov
ret
pop
cli
int3
lds
dec
jb
and
adc
xchg
or
jmp
and
fsubs
mov
inc
hlt
push
dec
push
mov
add
and
mov
jns
imulb
imul
adc
fwait
rorb
xor
fs
mov
fcompl
jno
pop
pop
outsl
or
inc
add
inc
push
mov
mov
add
stos
imul
mov
fisubrs
sbb
jae
jae
inc
sub
jb
fldl
or
dec
pusha
loop
ss
filds
push
movsl
cli
pop
mov
loopne
lcall
lahf
push
cmp
push
leave
movsb
xchg
xchg
mov
push
pop
jecxz
ret
mov
adc
dec
bound
cmp
xchg
xor
push
xor
cmp
dec
cmp
mov
pop
jmp
dec
das
mov
mov
mov
inc
arpl
lock
ds
ficomps
inc
jbe
clc
cmpsl
cmp
and
fadds
ret
ret
f2xm1
mov
addr16
fiadds
cmp
repnz
add
and
sbb
aam
mov
sbb
fistpll
dec
test
sub
leave
lret
pusha
aaa
add
mov
ret
or
adc
xchg
inc
sub
xorb
in
icebp
push
mov
xchg
xor
cld
repz
mov
sub
or
rcll
movb
daa
cmp
inc
push
inc
jl
out
cmp
mov
and
mov
add
fidivrs
add
push
mov
pop
sub
pusha
mov
adc
jae
add
mov
test
lret
orb
dec
and
gs
divb
cld
lea
data16
lds
push
sbb
jge
dec
stc
rcrl
incl
inc
jbe
cld
pop
sub
loope
inc
jb
aas
aam
cwtl
jo
mov
xor
pushf
movsl
jb
xchg
fldenv
div
cmp
push
js
and
xchg
sub
jp
and
push
in
ret
gs
sbb
jno
inc
les
sar
xchg
push
pop
stc
cmp
push
jecxz
movsb
sub
sbb
cmp
and
xor
xor
jecxz
andb
dec
adc
fwait
sub
jmp
out
clc
inc
mov
lea
ss
lods
outsl
cmc
andb
stos
jge
cmovae
mov
add
neg
rolb
xor
shlb
insl
and
aad
or
stc
lock
ret
inc
jne
jbe
xor
cmp
sbb
jp
mov
fbld
mov
lret
sbb
daa
clc
js
push
lods
push
aaa
mov
call
pop
xchg
xor
sub
push
and
jmp
adc
test
pop
mov
mov
fbstp
mov
cmp
xchg
and
mov
sbb
pop
xor
mov
stos
shrb
jo
fs
add
lret
push
add
sub
cmp
mov
mulb
cmpsb
mov
lret
inc
testb
pusha
xor
leave
push
and
out
and
test
dec
and
stc
jae
push
dec
cltd
movsb
pop
scas
mov
test
inc
aam
push
adc
daa
stos
out
hlt
cmc
push
or
rcll
add
sarl
leave
mov
in
push
push
ret
or
shlb
inc
adc
push
mov
movsb
shlw
mov
inc
imul
ds
popa
push
sbb
sahf
sbb
das
adc
mov
pop
lock
or
cmp
and
sub
pop
fimuls
mov
arpl
shl
fstpl
xlat
fists
rolw
jb
scas
inc
cmc
push
sbb
mov
lods
test
sub
pop
ret
mov
fdivrs
out
mov
mov
lcall
imul
inc
push
inc
test
jmp
adc
push
push
inc
sbb
cmp
lock
shll
enter
sbb
iret
loopne
lret
out
imull
sarb
sub
pusha
jle
sub
dec
in
mov
xchg
out
rcll
ljmp
and
stos
es
daa
jno
mov
xchg
mov
shr
arpl
enter
xor
xchg
mov
lods
aas
jmp
enter
shlb
js
xor
dec
inc
dec
and
cmp
out
adc
mov
push
es
stc
pushf
loop
leave
stos
jno
push
adc
dec
out
movsb
fwait
inc
add
frstor
dec
aam
shlb
add
add
adc
leave
les
hlt
adc
in
fs
rorb
sbb
lods
jbe
mov
fwait
dec
mov
mov
jb
lods
sub
ljmp
stos
fwait
mov
fisttps
push
or
cmp
clc
dec
cmc
aam
cmpb
or
mov
scas
or
hlt
push
test
mov
sbb
add
rorb
push
push
cmp
scas
add
movsb
les
lcall
mov
add
mov
cmp
adcl
aam
jl
jnp
jge
cmp
lods
or
imul
sbb
push
adc
icebp
mov
lds
movsl
repnz
lock
orl
sbb
into
imul
mov
jecxz
lahf
push
jg
mov
push
sbb
mov
pop
cmpsl
stc
mov
cmp
outsb
inc
scas
pop
cmpsb
test
fwait
add
lret
mov
fwait
movsb
sub
sbb
mov
jg
cmp
ds
sub
cmp
sub
inc
adcb
xchg
imul
sub
push
mov
sbb
out
enter
add
ret
les
mov
out
ljmp
bound
jl
aas
xor
fldl
lcall
je
xorl
push
cwtl
push
jbe
mov
mov
icebp
mov
xchg
push
fdivrl
stc
dec
call
xor
in
cmp
push
inc
sbb
dec
dec
or
repnz
sub
mov
push
sub
push
scas
repnz
mov
and
sub
inc
mov
mov
mull
dec
mov
imul
adcb
outsl
jmp
push
jmp
stos
gs
push
xor
lds
jbe
jno
mov
mov
lock
jbe
pop
xchg
je
cmpsl
push
xchg
push
or
popa
sbb
shll
lods
mov
push
and
loop
int
adc
sub
and
dec
push
std
jge
aad
pop
mov
arpl
sbbb
xor
imul
xchg
in
fsubrs
icebp
and
sbbl
or
jg
sti
cmpsb
or
pop
mov
xchg
xor
and
jnp
cli
test
push
lcall
test
mov
xchg
and
les
subl
add
mov
cmpsl
fisttpl
repnz
popa
pop
mov
dec
push
decb
pop
in
lahf
or
push
icebp
or
add
cmp
jns
mov
imul
mov
push
push
ja
adc
in
mov
jb
pop
mov
sbb
sbb
mov
out
mov
ljmp
inc
test
aaa
pop
test
xor
sahf
movsl
repz
or
sbb
jns
mov
gs
sbb
push
pop
iret
je
fisubrs
mov
add
in
jae
das
ret
push
or
mov
push
andb
pop
jnp
push
xchg
push
nop
or
xchg
dec
clc
scas
lahf
ret
and
dec
xchg
addr16
rcll
xchg
sbbb
in
in
xor
xor
subl
push
xchg
les
outsb
cmpsb
mov
mov
and
mov
repnz
jge
xorb
xor
imul
inc
inc
cmp
dec
mov
xor
mov
fildl
lea
push
push
xchg
and
mov
sbb
push
cmc
jbe
adc
or
movsb
lods
mov
add
in
es
cmp
pop
jnp
enter
lds
in
add
mov
in
xor
repz
and
shlb
dec
ja
ret
adc
push
adc
inc
push
or
adc
jmp
decb
enter
mull
in
imul
mov
pop
mov
sub
imul
scas
mov
mov
xchg
cmpsb
pop
into
pop
movsl
sarl
pop
pop
jg
lods
scas
dec
test
outsl
xchg
hlt
push
stos
and
pop
cmpsb
dec
and
jns
mov
ret
sub
in
fstpt
loope
xchg
outsl
dec
les
icebp
and
test
ds
adc
jo
cmp
jno
inc
mov
or
divl
loop
xchg
mov
stos
push
push
push
ds
sbb
stos
sbb
out
and
ss
push
adcl
fidivl
push
ret
rorb
jge
mov
out
pop
iret
inc
push
test
xchg
add
cmp
xor
test
and
add
push
idivl
in
sbb
call
push
sahf
xor
mov
rcrl
repnz
xchg
and
loope
lds
dec
fwait
hlt
push
scas
mov
movl
cld
cmp
fsts
and
inc
dec
and
cltd
or
xor
cmp
sahf
rcrl
imul
cmp
pop
xchg
cmp
or
mov
icebp
jecxz
mov
dec
lds
call
pop
stc
jle
stos
loope
and
mov
bound
ds
mov
sub
inc
shlb
and
cmpsb
scas
mov
sarl
negl
adc
push
insb
inc
mov
sbb
pop
movsb
sahf
sub
push
adc
add
lods
iret
mov
xor
mov
push
stc
ss
push
pop
shr
adc
js
xchg
jge
xor
inc
jl
mov
fcoml
jecxz
popf
jnp
les
push
cmp
pop
je
jmp
mov
push
push
mov
and
ret
test
pop
push
or
push
fs
loopne
adc
cltd
pushf
cwtl
jmp
cmc
mov
sbb
stc
addl
pop
jge
or
mov
mov
adc
dec
add
lahf
mov
xchg
fsts
push
ficomps
cmp
daa
fisubs
and
push
bound
mov
xchg
lock
mov
rcrl
arpl
jb
mov
pop
outsl
push
popa
cmp
repz
or
xor
pop
jns
popa
mov
cwtl
ja
ret
lds
pop
sub
jnp
or
adc
data16
push
arpl
lods
push
mov
lret
insl
mov
insl
inc
scas
out
ror
mov
jb
je
mov
stos
iret
mov
out
decl
sahf
sbb
out
mov
sub
cwtl
stos
aad
and
mov
shll
add
jmp
and
mov
js
xlat
call
jmp
mov
in
out
lret
shrb
addr16
repnz
subl
adc
and
mov
jle
mov
inc
or
repnz
push
and
lcall
sahf
xchg
adc
ja
pop
cmp
mov
in
es
sub
pop
xchg
cltd
test
xchg
mov
dec
push
repnz
mov
xor
test
in
imul
adc
popa
push
test
mov
andl
and
in
sbb
push
mov
mov
out
sti
sbb
cmp
sub
sub
push
call
pushf
jo
aad
enter
dec
out
fs
sbb
xchg
ss
lods
jecxz
imull
in
jb
lods
push
adc
jne
mov
sti
inc
adc
js
adc
fsubrp
mov
mov
mov
and
lock
push
lahf
cmc
andps
test
push
inc
jl
dec
xlat
dec
fcmovu
jno
lret
inc
iret
into
jle
push
notl
and
repnz
xchg
add
pop
ficompl
leave
aas
dec
mov
and
lcall
sbb
sbb
adcl
arpl
pop
enter
mov
xchg
lret
push
push
cmp
xor
push
xchg
push
sahf
clc
push
push
inc
push
sbb
outsb
inc
mov
or
or
pop
pop
jne
xor
iret
and
mov
pop
in
imul
and
pop
pop
movsb
jne
out
clc
sub
mov
adc
enter
adc
inc
and
xor
jecxz
ret
nop
sti
testl
pop
ds
dec
pop
insl
sbb
in
sahf
or
std
fs
lret
loop
or
in
cmp
test
insl
nop
in
jle
outsb
push
add
add
adc
mov
xchg
xchg
sub
fsubrl
nop
xchg
push
add
repz
add
fmuls
stos
ror
push
mov
enter
pushf
ret
and
adc
xor
andb
mov
lahf
add
xchg
xchg
inc
push
insb
shll
pop
push
inc
lds
xor
pop
cmp
cmp
push
mov
lods
rcrb
and
mov
xor
enter
inc
sbbl
mov
mov
insb
jmp
sbbl
push
nop
cmp
mov
enter
lods
data16
adc
out
adc
and
mov
cmpb
mov
mov
add
push
gs
leavew
popf
cwtl
jnp
les
pop
push
daa
push
enter
inc
xor
daa
dec
mov
loop
adc
invd
dec
xchg
add
mov
pop
into
pop
sbb
test
mov
je
jg
gs
aas
mov
add
mov
inc
adc
fcmovnbe
cmp
push
daa
sub
xchg
mov
jo
call
inc
or
or
sbb
out
dec
std
fwait
and
add
movsl
jae
xor
iret
into
ret
in
je
aas
inc
inc
cltd
cmp
cmp
fisubs
sbb
jne
int
outsb
xor
fmull
outsl
stos
mov
test
pop
clc
rcll
enter
pop
jp
xlat
cmp
push
and
sub
das
imul
pop
lock
mov
lds
into
int
rorl
ffreep
mov
dec
mov
out
scas
and
loope
inc
cld
cmp
loopne,pn
test
into
push
and
or
daa
mov
shl
sti
cmpsb
inc
and
add
sbb
out
mov
mov
test
stc
mov
inc
jmp
sti
pop
lods
pop
mov
jne
mov
mov
add
adc
stos
xor
xor
js
cmp
hlt
xor
gs
test
ret
and
ds
call
fnstcw
or
das
sub
xor
stos
mov
cli
xchg
fs
mov
in
mov
add
sbb
test
and
inc
cli
outsb
inc
push
and
add
mov
sbb
mov
mov
shl
mov
xchg
mov
inc
mov
and
inc
adc
push
sbb
adc
sub
jae
rcll
fmulp
addr16
cmp
sub
inc
ja
xchg
test
adc
pop
mov
mov
cli
jg
fcmovnb
lret
pmuludq
mov
xor
cmc
sub
adc
sbb
mov
or
cmp
cmpsl
mov
jne
xchg
xor
imul
insb
fs
mov
bound
aas
xchg
shl
out
jp
cmp
scas
mov
xchg
bound
jb
xchg
cmc
push
movsb
adc
dec
jbe
outsl
insl
sub
lret
jp
lods
daa
aad
jmp
into
sbb
adc
mulb
popf
add
cmp
lret
test
test
test
mov
mov
mov
dec
divl
dec
fisttps
mov
cmc
jno
xchg
dec
push
push
cmp
sahf
push
sub
int3
or
call
mov
xlat
xlat
xor
sbb
enter
or
or
inc
les
mov
pop
jecxz
xor
or
arpl
scas
jp
fidivrl
cmpsb
jmp
sub
icebp
lcall
sub
cmp
pop
and
jge
cli
mov
nop
inc
jp
mov
lcall
push
fiadds
cli
pusha
daa
push
js
and
dec
insl
xor
mov
ret
dec
cmp
loop
addr16
adc
inc
pop
mov
arpl
dec
dec
mov
add
int
test
xor
adc
enter
pop
cli
adc
scas
jle
jmp
jae
into
iret
js
sahf
add
mov
inc
fnsave
popf
pop
ljmp
or
adc
inc
mov
ficoml
out
and
lods
mov
xchg
cmp
fildl
leave
xor
enter
aas
xchg
es
pop
cli
pop
aas
adc
and
cmpsl
jl
cmp
stos
mov
push
add
mov
je
push
lds
mov
call
xchg
lds
mov
arpl
stos
adc
mov
xchg
inc
and
xor
in
popf
je
pop
mov
cmpsl
aad
xchg
jecxz
xchg
and
ja
push
mov
xchg
xchg
jecxz
or
fisttpl
pop
repz
sub
and
jns
mov
push
pushf
hlt
mov
sub
imul
repz
cmc
aaa
out
dec
jb
out
imul
in
sub
inc
pusha
push
int
xchg
push
sub
mov
inc
outsl
xchg
leave
mov
jnp
pop
push
cld
push
notl
sbb
sub
sub
xor
xor
dec
jno
dec
aad
scas
fs
pusha
mov
ja
gs
jge
ss
mov
inc
cs
loope
pop
pop
jecxz
out
mov
mov
inc
lcall
cmp
xor
dec
out
sbb
out
scas
dec
mov
fsubs
xor
pop
pop
icebp
arpl
aaa
test
out
adc
loope
aaa
fs
rorb
sti
inc
mov
test
xor
cmp
jmp
loopne
clc
xchg
jb
adc
mov
neg
cmp
jmp
xor
mov
idivb
jg
imulb
mov
jae
insl
gs
cmp
jp
sbb
ds
jae
xchg
pop
dec
cld
sbb
cmp
je
popa
dec
mov
and
int3
test
daa
or
adc
pop
sub
push
mov
lods
mov
stc
je
fnstcw
cmp
test
dec
stc
movsl
std
xor
cs
fdivrp
and
in
xchg
inc
int3
mov
cmp
in
dec
cli
xor
aam
mov
xchg
inc
xchg
imul
ja
push
xchg
push
movups
inc
int3
push
lods
sub
das
mov
lret
pop
mov
jle
rolb
sub
mov
jo
out
outsl
test
sbb
push
fdecstp
lods
sbb
popa
jno
and
xchg
xor
in
iret
pop
add
jg
cmpsl
and
enter
rolb
clc
ljmp
xchg
imul
popa
pop
and
fisubl
sbb
in
jns
inc
sbb
mov
sub
test
iret
push
push
mov
push
add
imul
xor
dec
jno
call
xor
inc
inc
out
pop
adc
adc
fldcw
int
dec
movb
jbe
pop
add
cld
test
aam
cltd
pop
jne
cltd
imulb
jns
sbb
jo
pop
lods
out
mov
aas
pop
or
jge
mov
mov
es
ss
fsubrs
pop
mov
bound
mov
and
lret
push
xlat
in
inc
pop
mov
jg
outsb
cmovg
paddb
scas
xchg
pop
lcall
cmpb
mov
adc
cltd
lods
into
dec
push
hlt
xchg
pop
push
add
jo
out
mov
stos
movsb
lcall
mov
test
xchg
jnp
or
jg
test
int3
sbb
cmp
mov
mov
mov
in
outsb
ret
mov
out
xor
jbe
mov
jp
in
adc
cs
cmpsb
jge
mov
lock
dec
xor
lds
and
js
popf
inc
aam
cmc
cmp
mov
push
movsl
aad
in
nop
daa
lret
subl
enter
in
mov
out
push
jno
std
cmp
pusha
mov
mov
mov
pop
jmp
fistpll
lret
or
sub
or
ret
test
addr16
arpl
fisubrs
push
and
lahf
jnp
xor
movsb
mov
mov
push
es
jne
fs
xor
int
jb
mov
and
mov
sbbl
xor
mov
pop
sub
push
xlat
xchg
js
xchg
add
xchg
add
and
mov
jns
daa
jnp
fcomps
sbb
in
sbb
cmpsl
inc
bound
push
loope
xor
mov
test
mov
int
or
outsl
call
jecxz
xor
cmp
and
ja
fisubs
mov
xorl
pop
push
sahf
psrad
cmc
lahf
xchg
sti
adc
mov
mov
adc
push
pop
cmp
stos
or
cmpsb
or
loop
fldcw
push
fisttpll
les
xor
inc
add
adc
lea
jne
pop
add
mov
or
loope
fs
iret
sahf
cmc
dec
push
cmp
cli
mov
dec
insb
test
movsl
popa
pop
jae
adc
decb
cwtl
jae
out
jge,pn
sbb
sbb
shl
jnp
hlt
push
mov
test
out
jo
sub
into
pop
mov
roll
mov
ja
push
call
and
call
cmpsb
aas
sti
stos
or
sub
inc
mov
add
test
mov
nop
push
add
sbb
enter
lahf
mov
and
pop
or
push
rcrb
stc
adc
aad
dec
jl
mov
popf
mov
fmulp
sub
scas
aad
test
aam
add
rcrb
lock
adc
popf
stc
mov
jg
aas
imul
insb
dec
adc
addr16
push
cmpsl
fiadds
pushf
xchg
adcb
ficompl
rclb
out
jl
aam
xor
jbe
and
cmp
sbb
add
inc
cmp
pop
ljmp
pop
mov
inc
call
ficoml
mov
stos
mov
dec
mov
test
xor
cltd
out
inc
xor
loope
lahf
ljmp
mov
push
mov
mov
das
and
sarb
movsl
fs
out
dec
pop
das
pop
push
sahf
aam
data16
ljmp
rcrb
pop
jecxz
aam
push
adc
dec
gs
pop
and
lcall
mov
mov
dec
mov
adc
adc
inc
stos
hlt
xor
mull
loop
dec
or
add
inc
dec
vxorps
jp
mov
insl
int3
out
imul
leave
ret
dec
dec
jle
adc
pushf
aas
shrl
adc
xor
repnz
leave
lret
mov
xor
xchg
dec
bswap
insb
jle
sbb
cmp
add
dec
aaa
test
dec
repnz
pop
call
xor
repz
sub
mov
cmp
fucomp
push
xchg
sti
cmp
push
aam
hlt
cld
pusha
add
in
pop
pop
cmc
sbb
sbb
inc
lods
cltd
pop
or
dec
dec
lds
rcl
add
sets
inc
xor
inc
adc
jno
les
out
push
mov
aaa
push
mov
jmp
out
mov
and
cmp
dec
push
fisubrs
lret
lcall
add
icebp
lret
cmp
xchg
inc
arpl
inc
xchg
sub
inc
xchg
fnstsw
iret
arpl
cmp
jno
in
mov
aaa
cmpsl
lcall
pop
loope
mov
inc
dec
xor
mov
test
in
mov
mov
mov
rcrb
outsl
fisubrs
lcall
pop
jo
or
lret
jp
push
cltd
lret
leave
cmpsb
sub
out
adc
adc
sbb
mov
movsl
sub
shl
xchg
sahf
cs
adc
aas
sub
pop
pop
and
adc
and
jl
mov
jp
mov
xchg
test
push
push
jb
sub
iret
jl
sahf
pop
cmpl
aam
push
rcr
add
pop
es
cmp
mulb
andb
ss
imul
xor
mov
sahf
ret
cmpsl
int3
out
imul
idiv
rcrl
adc
ficoml
arpl
xchg
jmp
shrl
dec
xchg
ja
adc
outsl
push
add
mov
clc
fnsave
xchg
or
shrl
sbb
es
dec
dec
jmp
fs
pop
or
push
les
lret
mov
outsl
out
jl
orl
scas
xchg
mov
gs
hlt
fs
or
idivb
mov
into
dec
xchg
xorl
sub
outsb
sbb
mov
in
incl
cld
and
and
les
sbbb
mov
xor
jmp
inc
lahf
jb
pop
scas
adc
push
imul
test
push
push
sub
xchg
das
aad
or
jge
xchg
mov
mov
daa
test
or
xor
dec
pop
cs
dec
jg
dec
imul
imul
ret
ret
icebp
cmpb
cmp
lds
jne
and
and
inc
pop
xchg
lea
xchg
lcall
xchg
lret
fistps
or
lea
push
dec
mov
adc
add
pop
in
fsubrs
push
mov
dec
mov
xchg
mov
scas
popa
dec
sub
push
cltd
cmp
cwtl
enter
xchg
inc
push
and
ja
push
mov
inc
pop
xorl
les
enter
or
das
movsl
int
popa
stos
push
inc
jecxz
inc
mov
push
rcl
push
push
mov
pop
cmp
cmc
or
push
mov
jae
sbb
pop
mov
sbb
adc
pop
dec
fcmovu
sub
sbb
push
arpl
push
xchg
nop
mov
inc
cmp
jl
and
sbb
out
or
fadd
iret
mov
pop
adc
jle
lcall
xor
xchg
push
rcrl
out
adc
loope
aas
repz
ja
nop
and
cmpsl
imul
sbb
dec
int
ljmp
dec
call
popa
pop
inc
mov
and
insb
or
int3
jo
pop
inc
lock
sub
lahf
adc
mov
pushf
or
jp
adc
or
inc
out
test
adc
xor
xchg
pop
mov
test
loop
out
cmp
or
pop
cmpsb
imul
mov
fdivrs
popa
mov
test
bound
inc
cmp
sbb
js
sbb
pop
jns
mov
jne
in
mov
xchg
sub
dec
dec
mov
jns
ficoml
inc
shl
inc
je
and
aaa
cmp
add
xor
imul
aad
fs
dec
fisubs
test
cmp
inc
nop
xlat
dec
dec
mov
jns
add
data16
das
test
lret
enter
pop
ret
insl
daa
mov
cmp
and
mov
jle
mov
sbb
test
gs
xlat
fcmovu
dec
scas
mov
push
sub
dec
and
ss
add
sbb
push
sub
push
adc
in
scas
stos
cmpsb
cmp
pop
out
int3
pop
aad
jg
pop
push
mov
jae
xchg
cmp
jo
mov
rcll
dec
cmp
sarl
cmp
xor
push
ljmp
cmp
pop
cmp
imul
mov
jecxz
stos
fisubrl
es
push
stos
inc
jnp
jecxz
ss
mov
mov
jecxz
mov
fs
mov
sub
xchg
fisubl
dec
in
repz
vorps
repnz
mov
imul
mov
pop
cmp
ja
xor
test
pop
fs
popa
mov
add
nop
add
inc
or
std
mov
jp
jae
xchg
mov
mov
cmp
mov
int3
pop
jp
xor
xlat
mov
lock
ret
xor
sub
mov
mov
inc
or
lret
sub
stc
stos
lods
mov
icebp
enter
pop
add
jbe
out
test
inc
mov
imul
ds
imull
mov
ss
jmp
dec
les
xor
jge
jge
pop
push
push
mov
sbb
fwait
mov
stos
enter
mov
xchg
ss
push
fcoml
iret
sti
or
and
insl
sub
mov
add
dec
sbb
sbb
cmp
stos
pop
pop
iret
jmp
add
adc
jecxz
jne
and
loop
jmp
scas
int
xchg
sub
bound
inc
lea
iret
outsb
test
jnp
adc
js
fwait
dec
sbb
test
in
rorb
lret
pop
rcrl
and
jmp
sti
sarb
adc
xchg
cld
fildll
push
add
leave
nop
int
mov
fdivr
aaa
scas
adc
push
pusha
ss
dec
add
dec
dec
mov
scas
ljmp
loopne
shll
sahf
xchg
and
lcall
xor
mov
ret
cs
test
jns
pop
ds
inc
xchg
jnp
fwait
xchg
enter
xchg
fstpl
outsl
rolb
or
rcrl
sub
add
jmp
in
add
test
mov
popa
jg
icebp
adc
adc
test
pop
inc
repz
mov
push
pop
stos
xchg
jae
xor
inc
orl
pop
adc
repz
pop
repz
lods
add
std
pop
movsb
ret
or
jmp
mov
enter
mov
sub
int3
pop
out
dec
mov
idivb
mov
mov
add
xor
imul
xchg
in
pop
daa
add
pushf
inc
addl
pop
lahf
pop
inc
loope
add
mov
lret
testl
lock
into
cmpb
mov
test
rclb
xchg
jno
xchg
jge
lcall
mov
and
and
sbb
nop
mov
inc
std
pop
pop
ret
pop
jo
aas
jnp
adc
mov
push
add
imul
mov
adc
xlat
dec
xor
in
mov
mov
sbb
push
lcall
and
iret
add
xlat
push
stos
shlb
fwait
mov
push
iret
imul
or
pop
adc
lret
jnp
scas
les
test
push
test
test
pop
xchg
imul
sbb
xchg
or
aas
test
mov
add
sbb
xchg
ficompl
mov
and
call
imul
sbb
andb
test
cmp
ror
sbb
or
sbb
add
push
cmp
add
inc
pop
adc
pushf
mov
mov
mov
cltd
iret
sub
mov
out
sub
subl
jl
out
leave
cwtl
cmpsb
add
adc
jecxz
insl
fs
fnsave
pop
xor
fistps
mov
mov
sub
scas
and
lretw
rep
xor
xchg
xchg
pop
jnp
mov
nop
fdivl
ja
xchg
add
mov
adc
test
add
ss
dec
scas
scas
push
fstpt
xchg
lcall
sub
mov
add
cld
cmp
mov
rorl
rclb
push
in
push
dec
sub
enter
sbb
or
push
imul
inc
sarl
or
push
pop
jmp
xor
or
sbb
imul
fists
mov
loop
mov
pop
pop
adc
je
in
cmp
fcmovne
in
jns
imulb
push
mov
rcll
lock
adc
sbb
test
dec
and
lret
mov
pop
jns
inc
js
xor
add
ljmp
xor
sub
xchg
nop
rcl
bound
hlt
mov
and
test
mov
mov
xor
and
pop
or
push
or
mov
xor
leave
lods
lcall
lcall
mov
push
push
push
pop
or
dec
arpl
pop
mov
add
push
push
sub
es
in
arpl
xchg
jge
sbb
sbb
xchg
mov
push
cld
xchg
data16
adc
inc
jae
idivb
testb
adc
into
xlat
lods
and
bound
jae
roll
arpl
mov
ret
pop
aas
in
les
push
sub
mov
rclb
stos
inc
es
mov
fadd
xchg
mov
jle
das
inc
pop
jae
test
ffreep
addl
leave
dec
adc
mov
mov
adc
sub
cmp
and
fistpl
jnp
push
jo
xchg
popa
inc
ljmp
loopne
or
cmp
les
push
mov
lret
cmp
dec
imul
fwait
arpl
andb
pop
mov
sbb
push
jg
xchg
pop
pop
jbe
cmpsl
sbb
testb
lea
mov
dec
add
int
or
cmpsb
int3
daa
push
cld
dec
mov
sub
mov
sub
cmc
mov
jmp
popa
shl
movsb
pop
pop
and
and
mov
jbe
or
add
inc
test
dec
gs
push
lea
hlt
aad
pop
mov
insb
adc
popa
mov
mov
xchg
out
gs
inc
mov
adc
enter
popf
push
pop
movsb
fimull
fildl
nop
sbbl
xor
popa
sbb
and
mov
mov
stos
mov
gs
and
call
inc
popa
adc
in
aaa
mov
push
dec
mov
push
push
jmp
pop
sahf
mov
aam
jecxz
and
push
lea
add
in
frstor
addr16
jne
mov
or
test
aas
inc
xor
dec
inc
push
std
push
int3
cli
mov
cmpb
add
test
mov
test
lods
loop
idivl
fimuls
dec
mov
lds
adc
xchg
push
lea
aas
mov
dec
sbb
test
addr16
mul
xor
push
mov
or
inc
fwait
test
cmp
mov
pop
mov
push
in
or
imul
or
inc
or
push
jno
xor
cmp
aam
push
lret
inc
rcrl
jge
add
cmp
mov
mov
gs
les
push
sbb
cmp
xchg
ret
xchg
ret
adc
clc
mov
outsb
repz
test
mov
sbb
or
loop
test
sbb
ss
std
jb
sub
cmpsb
sbb
test
sbb
call
shll
jne
rcrl
bound
dec
or
sbb
hlt
fbstp
mov
xlat
push
dec
out
mov
sbb
movsl
push
fisttps
leave
scas
lds
int3
and
int
orb
sbb
xor
incl
push
and
xor
vmwrite
loope
xchg
pop
inc
xchg
pop
imul
es
loope
sbb
push
adc
jmp
movsl
rclb
and
sbb
icebp
xchg
cs
mov
fsubrp
adc
imull
insb
icebp
sub
cmc
mov
cmp
scas
fsubrs
fsubrl
adc
mov
mov
orl
cmp
dec
jge
fs
fstpt
pop
adc
xor
out
xchg
lea
mov
sahf
sub
mov
bound
adc
cmpsl
push
adc
shll
sbb
and
or
insl
mov
test
push
push
mov
inc
dec
pop
xchg
test
and
loope
adc
aad
mov
dec
or
insb
sub
sbb
movsl
cmp
xor
cmpsb
mov
lahf
sbb
pop
jno
out
sbb
cli
ss
lock
adc
fst
cmp
shrl
push
nop
pop
ret
jp
and
cld
fsubl
pop
or
int3
xchg
and
mov
pop
add
or
addr16
dec
inc
scas
ret
mov
mov
pop
outsl
adc
mov
push
mov
adc
pop
js
mov
cmpb
scas
xlat
pusha
xchg
test
xchg
div
movl
sahf
xchg
add
or
xchg
lret
xor
dec
jbe
lea
out
xlat
inc
mov
addb
xchg
insl
and
addr16
cmp
cmp
pusha
jmp
add
cs
in
lea
into
or
repz
fsubs
mov
jle
mov
pop
or
mov
push
sbb
mulb
es
and
xchg
int
xchg
das
jl
dec
leave
fs
ret
sarb
inc
add
mov
xchg
xchg
int3
js
subb
addl
sahf
xor
sub
cltd
jnp
inc
pop
out
fidivl
repz
mov
adc
jbe
arpl
stos
xchg
fisttpl
xor
sahf
leave
add
cmp
js
iret
iret
inc
mov
sbb
mov
mov
push
adc
xor
pop
inc
int3
pop
std
push
inc
pop
cmpsl
adc
adc
lcall
mov
popa
xlat
in
inc
insb
and
xchg
add
in
mov
cwtl
lds
inc
lahf
push
test
push
out
adc
and
push
inc
mov
in
and
rcr
xchg
adc
pop
and
add
mov
insl
in
out
cmp
jp
jle
stos
data16
cmc
in
sbb
outsb
dec
fmulp
mov
jne
ds
nop
ret
outsl
popa
je
sbb
call
mov
add
lods
mov
rcl
inc
cmp
adc
int3
nop
mov
cs
dec
mov
lods
shl
fdivs
repnz
leave
dec
push
xor
push
hlt
shlb
inc
loop
xor
cmpsb
das
sbb
popa
insb
rcr
subb
lret
jnp
jmp
das
xor
mov
test
das
push
cld
out
mov
xchg
and
or
mov
or
mov
cmc
push
sub
adc
mov
lahf
pop
jle
push
ret
aad
sbb
push
sahf
subb
xor
insb
insl
test
pop
mov
cmp
mov
leave
inc
adc
add
out
enter
inc
mov
dec
mov
add
jmp
bound
ljmp
pop
push
mov
loopne
sub
sub
and
mov
push
push
or
dec
sbb
mov
sbb
inc
ret
arpl
jns
push
and
push
mov
sub
outsb
xchg
test
or
js
push
push
xchg
jg
mov
test
inc
shlb
inc
add
dec
idivl
fnsave
insb
mov
call
xchg
popa
test
cmpsl
adc
push
pop
sub
js
pop
inc
call
mov
outsl
je
dec
cmpsb
or
pop
xchg
lods
dec
cmp
pop
mov
lods
loopne
and
aas
adc
mov
mov
jg
repnz
push
js
and
and
push
sub
fadds
or
fdivrp
test
pop
loopne
int
loopne
cmp
iret
lea
inc
jle
loopne
movsb
pop
push
es
nop
mov
out
fs
sub
xor
or
lahf
mov
and
ljmp
and
dec
scas
xchg
mov
lret
cld
mov
cmp
imull
adc
pop
aas
sbb
cmp
push
mov
add
xchg
leave
xchg
mov
push
shll
cmp
lret
jne
in
mov
lock
dec
loopne
jp
xorl
in
inc
jg
xor
sbb
das
fwait
inc
stos
das
xchg
ljmp
mov
xchg
sti
add
nop
nop
push
stc
les
out
sbb
jo
pop
sbb
sarl
jbe
fnstenv
jecxz
sbb
sbb
mov
cwtl
mov
dec
sub
inc
jb
in
fnsave
enter
and
adc
xchg
cmp
cs
stc
loope
push
fwait
aad
jge
scas
sti
dec
xchg
nop
cmp
lods
add
pop
pop
jecxz
pop
mov
int3
js
sbb
mov
pop
jo
mov
popf
sub
mov
dec
dec
sub
mov
jb
inc
into
imulb
mov
pop
jnp
aad
pop
xlat
cmc
mov
mov
hlt
dec
push
cmp
insl
xor
out
and
or
lret
test
aas
lahf
inc
xchg
adc
ret
xchg
jnp
js
push
push
das
jb
sbb
lods
movsb
shl
cmp
nop
test
dec
aas
rol
dec
addb
call
inc
jo
gs
jns
cmp
movsb
leave
or
lret
mov
hlt
lods
das
push
add
mov
inc
aaa
mov
loop
jns
sbb
fidivl
lret
sub
hlt
mov
lock
out
fcmovnu
inc
lods
xlat
mov
and
aam
and
shrl
jbe
add
sub
mov
xchg
js
out
ffree
mov
repz
pop
inc
int
jnp
frstor
jg
xchg
pop
push
pop
add
fimull
lods
rcr
ds
loopne
mov
scas
lret
outsl
sub
repnz
divl
mov
xchg
std
or
call
insb
jno
imul
inc
cmpsl
or
adc
out
push
mov
scas
inc
ja
and
push
cmovs
sbb
and
xchg
sub
cltd
jno
scas
xchg
cli
xchg
mov
ds
xor
push
out
mov
or
mov
jno
dec
push
pushf
push
scas
imul
mov
xchg
adc
and
lret
jp
lods
and
sarl
xor
lods
fists
xchg
dec
jle
adc
jno
jecxz
loope
pop
fcmove
outsb
adc
sub
or
push
shr
loope
inc
adc
and
into
pop
fwait
or
std
aam
mov
inc
movsb
lea
sti
xchg
sbb
icebp
push
in
adcb
and
leave
cltd
sub
mov
jmp
aas
inc
push
fildl
call
xlat
daa
ja
mov
xchg
test
ficomps
adc
pop
inc
push
jo
sub
popf
dec
push
jl
and
fistl
sub
sub
test
pop
inc
out
aas
lds
js
inc
out
call
fucomi
mov
lods
ja
push
add
stos
xchg
scas
lret
sbbb
sbb
jb
bound
xchg
loop
adc
lcall
mov
js
in
cmp
xchg
aam
aad
push
xchg
cltd
out
jl
hlt
sub
inc
cmc
inc
mov
adc
shrb
mov
jne
rorl
mov
sbb
jle
push
pop
sbb
and
or
aaa
jns
sbb
ficoml
xchg
ficoms
sbb
mov
aaa
mov
mov
cmp
cmp
aad
data16
inc
call
and
ret
les
test
lea
js
clc
jnp
jno
in
jle
adc
mov
movsl
ficoml
enter
iret
adc
enter
mov
mov
mov
popf
cmpsl
cs
icebp
dec
insb
mov
loop
mov
xor
outsl
leave
sti
shrl
and
dec
jp
and
js
in
cltd
push
rcr
and
cmc
enter
sbb
mov
jno
push
sarl
loopne
call
mov
dec
xchg
dec
shlb
or
mov
mov
int
hlt
outsb
imul
mov
inc
loope
ret
mov
push
divl
and
js
pop
dec
xchg
into
testl
mov
insb
loop
ret
lods
in
sub
mov
sub
in
mov
xchg
push
sub
das
incl
out
in
push
inc
repz
test
push
in
and
adc
push
mov
dec
adc
pushf
out
dec
call
imul
mov
scas
sbb
movsb
add
xchg
out
add
sbb
lcall
inc
add
nop
or
inc
sub
test
cmp
shl
cld
leave
cli
inc
ret
movb
and
mov
aad
mov
and
adc
mov
add
andb
add
repz
jle
movsl
imul
add
inc
aaa
add
mov
mov
sub
pop
inc
idivl
fnstsw
icebp
or
cwtl
push
inc
scas
data16
nop
ljmpw
dec
adc
out
push
cmp
xchg
inc
rcrl
lahf
sub
jl
dec
mov
push
adc
sahf
test
int3
mov
pop
into
pushl
loope
sub
test
jnp
popa
iret
sahf
mov
xor
insb
cli
and
int3
mov
fwait
xor
sub
add
push
xor
inc
out
mov
fs
push
sub
push
out
cmpsl
jns
fiaddl
int
fnstsw
add
cld
jo
bnd
sub
xchg
aad
dec
mov
int
jmp
mov
mov
insl
adc
ss
leave
pusha
insl
fidivrs
push
lds
and
in
lods
dec
in
rorb
cmpsb
inc
aaa
fprem1
dec
jbe
or
or
xchg
sub
adc
push
xor
jle
push
xchg
repz
inc
mov
int3
insb
ss
mov
cs
fildl
ret
or
jbe
mov
inc
push
push
mov
pop
das
call
cltd
lea
divb
jl
inc
mov
jno
sub
xor
inc
pushf
and
mov
ret
push
les
repnz
inc
xchg
insb
add
fcom
es
and
jbe
mov
in
enter
stos
jne
aas
mov
xchg
or
in
mov
add
shl
std
out
daa
jne
adc
sub
lds
pop
jns
push
sbb
xchg
xchg
nop
out
pop
mov
mov
decl
cli
popf
xor
ret
xor
jp
rcll
cltd
sahf
cmp
pushf
les
and
mov
push
test
push
push
popf
lock
ret
test
cwtl
xlat
js
push
push
mov
ljmp
jns
dec
sbb
mov
jno
orl
push
add
mov
adc
aad
icebp
push
and
inc
sub
es
mov
out
mov
repz
gs
ret
out
and
or
leave
add
cld
mov
or
loopne
pop
imull
aas
scas
xchg
sbb
loope
jge
push
push
inc
push
cs
xor
push
cld
je
mov
xchg
lret
sub
js
idivl
test
fsubrs
jmp
cmp
fwait
clc
xor
test
lock
pop
add
pop
cs
aaa
mov
pop
popf
inc
inc
cwtl
cmpsb
arpl
gs
lea
sub
stos
inc
xchg
js
addr16
add
sub
fs
mov
out
push
out
test
into
push
inc
xchg
jecxz
lds
mov
xor
mov
cmp
sbb
and
test
inc
mov
popa
cmc
push
pop
xchg
enter
push
not
dec
test
add
mov
push
pop
sub
out
loopne
mov
repnz
or
jg
test
xchg
pop
mov
arpl
mov
and
adc
sub
lock
ret
cmp
adc
and
ljmp
jbe
cmp
cmpl
hlt
or
lods
std
xchg
shlb
data16
into
popa
orb
pop
scas
pop
movsb
lods
movsl
add
repz
sarl
ret
test
xor
inc
mov
pop
hlt
push
repz
sbb
imul
ret
xor
mov
mov
mov
fsqrt
jp
mov
das
and
jbe
jl
add
jmp
jg
xor
shrl
jae
mov
int3
aas
aad
cmpsl
dec
fwait
lods
and
call
xor
or
std
aam
lret
enter
jecxz
xor
movswl
xor
jmp
sahf
mov
or
nop
sub
fisubl
mov
cli
mov
cmp
mov
pop
jl
in
stc
dec
rcll
shll
icebp
ja
scas
mov
cmp
and
mov
mov
dec
insb
test
mov
lods
lock
stc
sbb
int
mov
std
outsl
sub
xchg
mov
hlt
xlat
xchg
push
insb
lcall
xor
xchg
push
outsb
pop
or
jno
cmp
fldt
add
xchg
mov
sub
and
sbb
sti
ficomps
icebp
cli
popa
dec
out
lret
ss
aam
stos
aad
add
sub
jge
outsb
data16
ret
insb
cmp
lods
or
add
lahf
out
mov
sub
loope
xor
jle
dec
popf
out
dec
iret
xor
je
sbb
movsl
frstor
xchg
add
stos
andb
add
ss
or
cmpsb
push
cmpb
addr16
lcall
lea
sbb
jmp
in
sti
lret
loopne
andb
push
test
cmp
mov
aas
mov
js
clc
xor
add
mov
cmp
cmp
shrb
inc
dec
nop
dec
xor
mov
mov
pop
in
xchg
lcall
mov
mov
cltd
roll
mov
std
mov
or
in
mov
inc
aaa
pusha
arpl
xchg
xchg
mov
lds
fmuls
adc
leave
lcall
lds
inc
rorb
jnp
sub
int3
xchg
xor
cmp
ficompl
in
aas
fmulp
je
cmpb
jge
pop
xor
push
jmp
mov
cmp
cmp
xor
push
mov
sub
mov
ds
push
mov
sub
mov
loop
push
ret
jle
aad
dec
idivb
jns
push
loopne
cltd
cmp
push
jns
lods
mov
jp
loop
pusha
xchg
jnp
sub
mov
push
mov
xchg
jae
loop
dec
pop
ja
orl
mov
aaa
or
sbb
inc
jnp
sbb
test
adc
lds
sbb
aam
mov
das
fwait
ret
sbb
cmc
aas
sti
ljmp
rcrl
out
hlt
adc
repz
fiaddl
stos
sbb
fldt
mov
stc
dec
cmpsb
aad
movsb
and
xchg
ret
lea
mov
adc
rcr
xchg
cmp
lahf
or
or
int3
in
adc
adc
nop
js
ffree
out
rcll
mov
and
cmp
adc
cmp
repnz
pushf
mov
xchg
hlt
insb
xchg
test
pop
sub
ret
aas
mov
and
mov
lea
mov
push
cmc
or
outsl
sbb
mov
xchg
test
push
cmp
adc
mov
and
lock
mov
fidivrl
xchg
fcomps
in
pop
lret
mov
pop
mov
push
jb
sub
or
pop
sbb
sbb
xorl
hlt
xchg
arpl
pop
cltd
cmp
std
nop
pop
cs
fisubs
add
les
pop
fcmove
les
pop
jl
pusha
lret
mov
fiadds
dec
adc
leave
cld
ja
andb
cmp
adc
aaa
inc
xchg
loopne
push
inc
dec
cmpsl
mov
inc
add
jnp
test
mov
push
or
leave
hlt
jmp
fsubrs
pushf
jle
or
pop
jecxz
xlat
sarl
pop
dec
lods
sbb
inc
ficomps
sbb
sbb
push
push
lds
stc
imul
testl
mov
xchg
push
ss
repnz
sbb
test
test
stos
je
adc
popf
cmp
dec
adc
xchg
cmp
xchg
add
shlb
add
stos
xchg
pop
mov
inc
xchg
vpmacsswd
add
add
das
adc
dec
leave
clc
xchg
pusha
and
lcall
test
mov
inc
mov
jbe
add
scas
movsl
mov
sub
pusha
sub
jns
adc
ret
cs
stc
or
xor
repnz
xor
xchg
icebp
jge
rcr
pop
jb
jne
mov
lds
cmp
push
push
imul
shr
and
push
pop
cmp
mov
stc
inc
mov
mov
enter
mov
in
movb
adc
mov
sbb
sub
xchg
push
add
or
pop
inc
sub
shll
jnp
inc
add
mov
push
sti
ret
mov
fldt
cmp
sub
sbb
jae
nop
dec
shlb
subl
ja
dec
mov
add
xchg
xchg
mov
and
call
dec
shrb
mov
pop
fdivl
adc
pop
jle
sub
ficoms
icebp
add
add
pop
mov
icebp
imul
push
bsf
jmp
rcll
lods
ljmp
adc
je
push
lcall
cli
cwtl
cmp
jl
idivb
rorb
mov
outsl
cmc
push
repnz
test
rorb
into
jge
es
pop
jg
lcall
test
bound
cmpsl
mov
xor
js
call
sub
lock
or
xor
pop
add
jecxz
andl
xchg
cmp
out
int
mov
inc
push
xor
hlt
rclb
scas
inc
ret
xchg
sub
aad
aad
in
xchg
mov
ss
jae
push
mulb
icebp
mov
scas
inc
xchg
mov
je
fildl
pmaddwd
vmovaps
xor
out
test
aaa
movsb
adc
lock
mov
popa
and
popf
and
sub
push
xchg
imul
push
push
loope
lods
nop
mov
rcll
loope
mov
adc
dec
sbb
or
jl
ds
and
in
push
filds
imull
push
jbe
pop
sti
push
push
add
lret
ret
ret
inc
enter
leave
ret
sub
repnz
or
sub
shr
jns
dec
cmp
push
xchg
jo
in
pop
test
in
adcb
shlb
mov
pop
xchg
gs
or
call
jmp
mov
push
enter
or
push
sbb
fdiv
push
or
test
inc
sti
cmp
push
sbb
in
adc
ret
sbb
xchg
movsb
or
push
adc
lods
fstp
lcall
pusha
aaa
or
ret
in
mov
jns
ja
add
jecxz
bnd
jae
jo
pop
sub
pop
js
mov
mov
sub
fs
into
push
shlb
jg
call
insl
mov
jl
jmp
imul
ja
push
push
and
test
xchg
int
aaa
fmuls
xchg
out
mov
cltd
ror
movsl
divb
sbb
js
or
cmpsb
mov
inc
cmp
pop
or
sbb
xor
add
sub
leave
xchg
ss
cltd
orl
cmp
enter
push
leave
add
xchg
ljmp
lock
dec
std
push
cmpsb
mov
aas
cmp
mov
inc
mov
sbb
jmp
xchg
dec
dec
mov
out
imul
lods
adc
lods
inc
push
out
loop
or
inc
adc
xor
cmp
ss
popf
sub
ret
xchg
jno
rdpmc
out
lcall
aam
mull
aad
in
xor
and
pop
dec
mov
fildll
out
sbb
cmp
jnp
cmp
int
fs
mov
pop
sub
mov
rolb
add
inc
mov
mov
inc
mov
rclb
dec
cs
lds
sub
xchg
dec
inc
adc
je
jno
dec
movsb
pop
mov
jp
addr16
pop
jl
xor
pop
mov
imul
mov
fdivrl
sbb
mov
jne
add
js
nop
clc
mov
lcall
ds
ds
mov
push
pop
push
xlat
repnz
lock
mov
jnp
xchg
sti
push
inc
jnp
lods
shl
loope
hlt
test
mov
out
jns
xchg
jb
stos
or
or
out
lods
subb
jnp
and
xor
push
test
or
aad
or
sub
sbb
push
dec
sahf
push
nop
push
inc
cli
pop
cltd
bound
sarb
cltd
mov
mov
push
pop
fdivl
cmpsl
pop
fcoms
or
jecxz
xor
pop
out
xchg
shll
xor
mov
mov
jl
dec
cwtl
push
sub
sahf
sbb
ss
hlt
test
inc
dec
test
cltd
xor
jge
aas
push
jb
test
add
jne
sub
lret
stos
loop
ret
rorb
insl
call
mov
and
std
or
cmpsb
sbbb
sbb
in
xchg
leave
jbe
je
out
aas
mov
push
xor
scas
jle
jg
scas
sub
jb
push
adc
mov
outsl
test
push
add
bound
add
sub
fwait
aaa
bnd
fwait
lock
aaa
es
dec
sbb
push
fdivs
adc
add
out
out
adc
mov
xchg
xor
in
rorl
cmp
stos
shll
ljmp
stc
dec
sahf
or
push
adc
movb
imul
testb
xchg
call
dec
xor
and
out
mov
mov
mov
xor
orb
gs
push
add
jge
bnd
mov
mov
icebp
or
cwtl
call
sahf
push
dec
jl
adc
imulb
shll
jp
jmp
enter
push
fs
jnp
push
inc
jno
add
xor
jbe,pn
add
inc
imul
loope
sbb
loope
push
hlt
stc
mov
pushf
fdivrl
ljmp
sbb
sub
lcall
inc
or
pop
lock
out
out
jp
or
popa
push
cmc
cmp
in
adc
sub
pop
int
stc
int3
push
in
add
dec
das
and
mov
xchg
mov
outsl
stc
sub
push
jecxz
push
mov
pop
pop
aas
inc
mov
add
mov
pop
into
hlt
movsl
std
mov
jns
fucom
inc
dec
les
xorb
arpl
mov
test
leave
cmpsb
adc
sub
mov
mov
fists
mov
and
fcoms
xchg
loopne
pop
mov
pop
pop
inc
jae
xchg
dec
xchg
ljmp
push
stos
pop
sbb
xchg
aas
addr16
xchg
xor
xor
and
add
in
aas
stos
pop
rcrl
adc
sbb
mov
push
iret
push
inc
dec
pushf
ljmp
ljmp
jg
add
es
adc
rclb
mov
shlb
call
js
mov
std
fstps
fldl
jns
ds
in
lahf
jb
mov
insl
push
ss
sbb
pusha
fadd
imul
jnp
sub
pop
insl
fwait
loope
pop
jmp
or
xchg
lock
or
cld
pop
jp
mov
addr16
dec
lods
imul
les
icebp
mov
sbb
add
mov
and
add
loop
ljmp
push
rcrl
ljmp
int
insb
xchg
std
dec
shrb
nop
outsl
cmpb
insl
fucomi
jo
mov
sti
loope
ret
test
cli
mov
hlt
mov
movsl
cmp
xchg
mov
jl
in
adc
lods
stc
xor
repnz
loope
inc
in
repz
lds
enter
out
aaa
out
inc
jb
jne
cwtl
sbb
fdivrs
jb
xlat
out
int
inc
loope
jae
orl
test
pop
repz
inc
mov
dec
fcmovnu
cli
in
push
arpl
icebp
adc
leave
cli
rcr
bound
test
pop
jb
jbe
cmp
test
adc
ja
cmpl
xchg
cs
in
xchg
std
shll
mov
nop
das
cmp
inc
or
jno
bswap
and
pop
ret
mov
es
sbb
sbbl
incb
mov
xchg
test
fldl
lret
xor
sbb
mov
mov
movsl
in
cmp
aaa
test
mov
pop
shl
inc
sbb
cmp
and
in
push
jbe
cld
adc
cmp
test
and
ds
inc
jmp
ja
sub
xchg
adc
jecxz
pop
mov
mov
sti
sbb
jae
loop
cmp
int3
fwait
shl
test
mov
mov
out
push
and
jmp
ljmp
push
push
mov
aam
mov
test
stos
push
lea
cmp
or
testb
cmp
mov
jo
repnz
out
lods
push
inc
add
adc
xchg
mov
orl
mov
xorl
pushf
jmp
cs
shll
outsb
push
inc
or
mov
adc
test
movsb
or
in
rorl
xchg
lds
mov
add
sbb
adc
ljmp
cld
adc
or
mov
dec
sub
pop
lods
add
mov
sbbl
mov
sub
insl
ficompl
or
mov
test
out
xchg
std
int3
sbbb
adc
mov
cmp
out
mov
ret
push
xchg
mulb
sbb
jl
pop
repz
xor
push
in
dec
dec
fstp
fcoml
push
test
mov
fdiv
lahf
adc
pop
and
mov
mov
jge
loope
mov
adc
int3
xor
adc
mov
fs
cmp
enter
or
sahf
test
jg
notb
popa
add
xchg
sub
fadd
clc
cld
in
cli
test
push
push
loopne
xor
test
sbb
in
ret
sbb
dec
es
mov
push
inc
inc
sahf
and
xorb
or
pop
mov
xchg
mov
mov
add
std
xor
test
nop
test
loopne
xchg
ja
cltd
mov
cld
jb
or
jns
repz
and
call
mov
bound
leave
stc
ja
loope
mov
out
addl
and
adc
xorb
xchg
push
imul
xchg
lods
add
stos
ret
xchg
or
inc
cmp
mov
lods
mov
das
adc
push
jmp
add
jl
addr16
lret
loop
bnd
ret
sub
lea
in
or
lds
fcoml
jmp
inc
mov
xchg
les
cmpsl
test
out
jp
fistpl
cmp
pushf
in
sub
cld
mov
lret
ret
mov
add
hlt
lods
repnz
mov
scas
jl
leave
out
dec
movsl
mov
jg
jmp
fstpl
jp
mov
mov
adc
sahf
insb
xor
je
repnz
aad
mov
jge
or
std
adc
scas
shlb
shll
push
mov
jno
push
push
pushf
mov
scas
or
popa
bound
dec
bound
xchg
ljmp
cmpl
push
mov
out
xchg
jae
faddl
push
sahf
insl
roll
call
pushf
add
fidivs
movsl
xchg
mov
das
xchg
jmp
mov
jnp
or
and
cld
cmpsl
push
sub
dec
inc
ss
ljmp
jmp
lahf
daa
lds
loopne
cli
enter
icebp
scas
push
mov
pop
push
add
adc
adc
cmp
in
cmpsl
push
mov
and
in
cmp
pop
out
pop
fildll
pop
sbb
ret
pop
pop
ja
leave
xchg
and
or
test
mov
xor
pushf
adc
jae
push
sub
dec
jnp
sub
jge
xchg
cmc
adc
stos
adc
xlat
jns
lcall
pop
mov
daa
neg
mov
int
sbb
add
aam
pop
jb
jbe
jbe,pn
xchg
das
or
pop
jg
or
mov
add
fs
jne
mov
mov
or
je
or
enter
mov
mov
fisubs
icebp
lock
push
adc
fistl
aas
mov
mov
pop
fdivl
in
jmp
movsl
push
jno
sbb
jge
adcl
push
sbb
mov
out
in
scas
jb
cmp
sub
dec
dec
xchg
out
aas
cmp
xchg
cmc
pop
bound
cmpsl
cltd
leave
push
filds
fdivr
jge
and
add
cwtl
cmp
testl
jns
pop
fwait
dec
fimull
cmp
mov
jmp
cmc
xor
push
pushf
gs
pminub
popa
sub
inc
pop
lahf
xchg
ja
xor
jle
nop
fadds
mov
or
mov
adc
xor
testl
clc
push
stc
lahf
inc
jge
add
aad
insl
and
mov
xchg
faddl
add
sub
cld
xchg
dec
cmp
fnstsw
out
push
pop
icebp
nop
jl
inc
adc
cmp
imul
in
lods
test
int
mov
in
jecxz
adc
mov
push
dec
mov
add
dec
mov
mov
int
rclb
shl
push
cmpsb
or
lret
in
add
repnz
int
mov
negb
mov
lods
movzwl
repnz
jo
into
inc
sbb
lock
popa
push
movsl
test
into
push
inc
in
cmp
shlb
ljmp
jbe
and
fldenv
rcrb
sbb
outsl
in
sub
jge
cli
mov
adc
add
mov
xchg
xor
in
or
xchg
cltd
das
jne
loop
dec
or
mov
insl
mov
xchg
push
jmp
pusha
gs
fbstp
cmp
mov
lea
jns
inc
cmpsb
xchg
cmp
lods
xchg
jl
mov
out
mov
push
in
jae
dec
movsb
div
push
loope
add
and
add
inc
dec
jbe
ljmp
gs
pop
mov
in
test
iret
mov
lcall
cmc
loop
dec
int3
or
icebp
mov
mov
mov
xor
inc
sbb
add
pop
cmp
xchg
xlat
jns
int
loopne
xchg
mov
jl
popf
in
mov
int
and
ja
mov
pop
dec
sbb
mov
ret
cmp
push
jno
orl
add
pop
sbb
adc
jmp
adc
in
sbb
sbb
jae
gs
pusha
scas
push
into
repz
xchg
hlt
insl
lahf
adc
adc
and
or
call
or
clc
mov
repz
repnz
dec
shlb
loope
mov
push
rcll
cld
fs
outsl
arpl
mov
addb
enter
pop
inc
mov
roll
notb
ret
xchg
shl
je
xlat
xchg
mov
mov
cmp
jge
adc
enter
dec
in
sahf
fisubrl
xchg
cmp
lock
stos
movsl
test
mov
mov
sub
push
fstl
xor
fidivl
add
or
xor
mov
sub
xchg
push
ret
mov
jae
pop
scas
popa
mov
pop
xchg
fcoml
adc
and
inc
shrb
xor
adc
sahf
sarb
xor
xor
mov
insb
fwait
test
std
mov
xchg
mov
test
out
or
stos
insl
mov
iret
add
push
stos
mov
insb
inc
jge
pop
out
es
std
jbe
cltd
adc
and
cmc
inc
rolb
mov
dec
add
mov
repz
test
sub
fildl
mov
mov
and
or
adc
out
dec
cmpsl
mov
pusha
lret
sub
sub
or
ljmp
fstps
or
lds
fistpll
std
add
shlb
sarl
mov
add
jae
mov
jb
movsl
testl
stos
into
in
cmp
rorl
orb
pop
jno
mov
imul
sbb
leave
push
or
add
ficompl
dec
je
nop
cwtl
cs
insb
dec
rcll
dec
xor
jle
pop
clc
add
jge
test
out
rolb
scas
jecxz
dec
gs
xchg
icebp
sub
lahf
scas
xor
add
add
lret
pop
shll
push
push
dec
xchg
icebp
push
cwtl
mov
dec
imul
out
repz
mov
je
outsl
arpl
push
pop
pop
cmc
rcr
jecxz
and
pop
movsb
ret
inc
popa
jp
insb
cs
ja
adc
ss
mov
cmp
shrl
jb
subl
icebp
pop
dec
xor
cwtl
iret
in
jae
ja
jp
cwtl
mov
fs
daa
dec
push
imul
jp
xor
mov
add
loop
xchg
inc
inc
bnd
dec
ljmp
dec
xchg
xchg
push
ret
jnp
ret
jnp
js
fldcw
xchg
mov
sbb
imul
add
ficomps
fucomp
gs
in
aaa
scas
fwait
pop
js
and
fsubl
mov
leave
cmp
out
insl
int3
mov
dec
add
je
cwtl
xchg
jno
adc
inc
std
jbe
in
xchg
mov
pop
push
loope
loopne
add
leave
aad
into
std
in
cltd
int3
in
out
in
ljmp
in
adc
fists
in
adc
xor
add
cmp
mov
mov
je
lret
jbe,pt
arpl
or
fcompl
jmp
xchg
and
rcll
ss
pushf
xor
mov
jl
sub
cs
insb
sbb
js
mov
sub
xchg
lahf
rcll
clc
mov
sbb
mov
add
mov
fbstp
push
ror
adc
jo
movsl
test
jle
gs
mov
adc
jns
hlt
cmpsb
mov
outsl
dec
cmpsl
mov
mov
mov
pop
mov
xor
sub
dec
rorb
ja
adc
test
mov
or
stos
sub
jne
jmp
push
pop
test
scas
sbb
mov
fisubl
inc
vpmacsdqh
data16
add
leave
or
mov
sub
into
sbb
adc
lcall
aam
out
mov
int3
sub
cwtl
xchg
leave
ret
mov
xor
bound
imul
cmpsl
lcall
call
lahf
xchg
mov
push
add
mov
adc
push
add
xor
scas
outsb
data16
cmp
cltd
int3
and
orl
fs
movsb
mov
movsl
pushf
push
fwait
out
sar
out
cmc
mov
dec
lcall
push
cmp
pop
mov
dec
push
cld
dec
jge
pop
shl
jae
fldl
adc
sub
mov
in
cmp
mov
repnz
jnp
dec
cmp
sbb
lret
repz
adc
add
xor
and
fs
ds
dec
adc
cwtl
sbb
cmp
push
popa
and
cmc
test
sbb
enter
xor
jae
xchg
push
inc
mov
sub
push
push
movsl
mov
pop
test
and
cmp
bound
iret
icebp
cmp
jecxz
mov
stos
icebp
fdivrs
xchg
call
sub
popf
jp
test
cmpl
dec
ss
insb
test
push
and
cmpsb
filds
ret
mov
pop
jp
shlb
jb
jne
cmc
cli
out
ja
arpl
cmpsb
stos
mov
pop
or
ja
dec
gs
call
addb
jle
mov
mov
clc
push
jns
pop
repz
orl
cs
mov
inc
mov
lahf
cltd
int
rorb
mov
rol
and
in
sub
shl
cmp
xchg
mov
mov
dec
ljmp
test
cmc
and
ss
adc
pop
in
aad
mov
push
sbb
fstps
test
loope
loop
sbb
and
ret
xchg
mov
cltd
or
pop
icebp
loope
roll
and
cmpsl
xchg
mov
pop
cld
inc
or
inc
jo
and
arpl
pop
loop
sub
push
jmp
push
ja
push
xor
out
inc
jno
xlat
push
cmp
insl
fcomps
fisubrs
cmp
ret
das
lods
push
mov
xor
or
mov
leave
mov
push
fcompl
jae
andb
dec
cmp
push
cltd
or
je
fmulp
cmp
sub
notb
icebp
pop
or
add
push
mov
mov
mov
sub
sbb
cmpsl
add
imul
aaa
ss
adc
test
mov
sbb
sbb
push
dec
cmp
lcall
add
push
cmp
lret
mov
ss
mov
mov
fstps
lahf
sub
xor
jo
lcall
jle
jmp
pusha
or
and
sbb
daa
outsb
ja
xchg
lcall
lock
shlb
dec
out
stos
enter
sbb
loop
mov
rcrl
jae
lods
inc
inc
adc
in
mov
inc
xchg
sahf
jg
nop
mov
lret
cmp
leave
cli
rcl
mov
es
stos
and
or
mov
cmp
orb
mov
movb
jno
mov
adcb
popa
and
shlb
sbb
xchg
pop
in
cltd
dec
inc
sub
gs
out
jge
inc
out
mov
cmpsl
mov
iret
jb
and
movsl
xlat
jnp
push
stos
adc
sbb
adc
jno
and
pop
jns
lahf
les
mov
imul
in
jne
or
push
jb
push
dec
mov
cli
gs
ljmp
lock
out
mov
push
in
movsb
mov
sub
pop
out
mov
pop
xchg
adc
adc
push
shlb
and
cmp
adc
jg
and
push
repnz
dec
mov
stc
loop
fstpt
sub
das
into
lcall
int3
xchg
sub
or
push
mov
push
push
add
ja
sahf
inc
jb
or
adc
pop
mov
daa
cmp
adc
xor
pop
push
mov
call
pusha
push
or
ss
test
out
sub
ljmp
pop
adc
sub
nop
mull
push
clc
decb
repz
dec
xchg
mov
mov
pop
lcall
cmpsl
add
imul
pop
call
push
inc
lret
das
cmpsb
in
rolb
aas
adc
and
fwait
push
sub
and
inc
mov
rcll
and
aaa
cmp
sub
fstpt
sub
imul
imul
or
and
adc
test
add
mov
test
jbe
cmp
aad
scas
push
pop
xchg
ljmp
popl
enter
xor
xchg
lds
jecxz
das
add
mov
cwtl
adc
xchg
jge
popl
xchg
jge
mov
cli
daa
cmp
mov
sub
leave
lcall
mov
pop
movsl
cmp
stos
cmp
ficompl
repz
and
xchg
sbb
add
mov
sbb
gs
divl
mov
mov
mov
ficoms
pusha
lods
outsb
mov
or
xchg
jns
xchg
mov
out
shlb
mov
lahf
mov
mov
scas
lret
inc
lods
popf
inc
push
daa
inc
push
sub
call
cs
push
jecxz
dec
lahf
sti
sub
pusha
push
pop
lahf
ret
or
xorl
lcall
bound
pop
lcall
call
pushl
adc
jg
mov
ss
cmp
loopne
jno
bound
fsubrp
push
lea
push
enter
enter
add
js
pop
add
shrl
roll
or
mov
out
ret
push
jb
hlt
mov
push
push
inc
loope
fildl
aaa
xlat
and
sbb
ficoml
in
add
add
fcomp
and
lcall
push
jb
addr16
or
pop
xlat
fs
sub
inc
inc
add
xchg
push
outsb
cli
arpl
adc
nop
lods
dec
call
xchg
decb
sub
pusha
inc
cli
lcall
sub
cmpsb
xchg
push
sub
aad
bound
xlat
mov
jns
in
pop
dec
dec
dec
add
cs
push
loopne
xor
pop
andb
push
pusha
xlat
pop
xchg
aaa
divb
sbb
in
mov
xchg
cmp
aaa
dec
sahf
in
stc
loope
jnp
ret
and
or
jecxz
jecxz
cmpsl
loop
scas
mov
sti
enter
cmp
icebp
dec
fs
cltd
pop
inc
pop
inc
out
sbb
movsb
cmp
rorl
fmuls
and
pop
push
dec
push
js
gs
shl
repnz
daa
xor
aad
lds
and
mov
inc
dec
sahf
das
jns
aas
js
xor
scas
sub
sub
int
inc
jmp
mov
adc
xlat
mov
lret
mov
cmpsb
xor
sbb
xor
jae
pop
in
push
xcrypt-ecb
cmpsl
int3
shl
sysexit
cli
jno
in
insb
pop
pop
ret
pop
push
add
push
mov
rol
lds
cmpb
add
sub
xor
mul
fadds
aad
out
add
out
dec
xchg
pop
xchg
lcall
and
dec
es
jbe
in
sub
push
inc
jno
outsb
adc
xchg
mov
in
ficoms
xor
into
dec
lret
repz
out
dec
je
loop
ficomps
push
inc
xorl
es
mov
ss
mov
push
in
pop
das
mov
or
call
fadd
lds
out
dec
and
pop
pop
pop
sub
fucomi
faddp
mov
ss
mov
aad
outsl
out
stos
mov
in
lret
xchg
out
jno
sbb
pop
dec
push
sarl
out
add
pop
mov
std
test
cmp
add
and
cli
dec
sbb
out
inc
jp
pop
push
fwait
xorl
aad
cld
out
ja
or
lds
cmp
push
push
xchg
jne
jmp
sarl
mov
cltd
out
or
enter
dec
add
loope
daa
jge
outsb
outsl
inc
mov
jno
test
or
test
jg
add
cmp
scas
push
mov
push
sub
jne
lahf
pop
jbe
fs
mov
pop
sub
dec
sbbb
push
push
mov
mov
and
jmp
in
rcl
aas
and
and
xchg
and
call
push
cld
sub
aas
int
lahf
lock
test
jp
data16
and
or
push
rclb
jg
insb
into
addr16
dec
dec
cmc
push
mov
pop
or
dec
lock
add
retw
xchg
xor
mov
in
les
sub
mov
sub
test
sub
jmp
xor
and
clc
ret
or
shlb
xor
or
cmp
incb
aam
ret
xor
xchg
and
cld
not
pop
jne
inc
jno
test
out
mov
xor
daa
lret
dec
xor
outsl
je
xor
inc
into
cmp
jp
vcvttss2si
cmp
mov
or
loopne
mov
test
mov
jne
loopne
mov
hlt
mov
out
pop
notb
fs
push
fsubrl
sub
push
test
fldcw
fisubs
and
loopne
adc
sbb
test
sub
lods
dec
dec
xchg
call
out
aaa
sub
xchg
lcall
mov
pop
shll
adcl
add
notb
insl
push
rcl
shrl
jmp
mov
mov
loopne
lods
add
or
cmp
les
and
shrb
div
fiaddl
jnp
dec
inc
jae
add
xor
inc
jno
aam
imul
aam
adc
dec
adc
xor
fwait
mov
or
mov
arpl
mov
xor
aas
xchg
stos
push
dec
xchg
push
mov
sbb
outsl
sbb
data16
js
cwtl
add
fcmovnbe
mov
hlt
xchg
js
nop
jmp
dec
jmp
push
xchg
cwtl
ds
int
sbb
in
movsb
cmpsb
ja
in
sbb
cmp
iret
sahf
inc
pop
inc
stc
sub
nop
pop
subl
das
std
repz
add
mov
adc
adc
dec
mov
mov
loopne
in
pushf
or
fneni(8087
je
dec
pop
dec
sub
pop
popa
add
std
xchg
inc
inc
imul
add
mov
cmp
xchg
imul
push
popf
mov
popf
cs
and
push
push
cmpsb
push
cwtl
push
idivl
jns
repnz
nop
mov
jmp
and
push
fldt
pushf
or
inc
pop
jecxz
mov
popf
lock
dec
popa
cmp
pusha
mov
ljmp
clc
add
mov
das
sbb
lods
lea
mov
cmpsb
fbstp
ja
jns
ljmp
ds
mov
adc
outsb
push
sbbb
jnp
mov
clc
in
xchg
int
ds
add
dec
cs
xor
push
subb
lods
pop
sbb
mov
lahf
outsb
movsl
shrb
mov
and
sbb
sahf
sbb
imul
dec
sbb
bound
fstpl
icebp
fnstcw
push
push
cltd
vcvttps2dq
and
add
sti
cmpsb
out
mov
push
js
sub
push
sbb
mov
push
ja
mov
out
push
mov
push
test
pop
and
cmp
add
divl
into
xchg
movsl
mov
pop
xchg
insb
in
jp
jle
shlb
adc
sub
adc
ljmp
pop
out
add
mov
aad
fsubp
pop
pop
ljmp
and
in
fcomip
sbb
insb
jl
mov
orb
pop
imul
outsb
outsb
mov
dec
out
cmp
cmp
dec
inc
push
fidivl
dec
mov
incb
je
mov
inc
jle
popa
pop
fistpll
into
fildl
sub
in
add
sbb
jle
inc
lcall
mov
adcb
jne
and
sbb
push
dec
repnz
jl
cwtl
adc
out
sbb
fisubl
mov
repnz
or
movaps
stos
add
lock
clc
mov
bnd
pop
adc
fldenv
cmpsl
call
fldenv
dec
out
jne
push
insb
jnp
sub
xor
mov
mov
shlb
add
in
and
mov
or
int
sub
inc
aaa
jl
lcall
pop
inc
xchg
cmp
shll
insl
outsl
inc
push
rolb
out
test
out
clc
dec
stos
ficoms
pop
movsl
push
cmpl
sbb
mov
outsb
pop
mov
repz
jle
sahf
sbb
pushl
xchg
mov
in
fs
scas
sbb
dec
ss
dec
push
cmp
xchg
fwait
outsl
subl
loop
inc
sub
adc
mov
mov
pushf
sbb
cmp
pop
inc
clc
movsl
sbb
mov
cwtl
addr16
popf
sub
lret
mov
mov
inc
daa
push
lcall
and
sbb
mov
pushf
dec
and
or
cmp
push
mull
or
rcrb
or
shl
lock
or
pop
in
dec
aas
xor
push
cli
pop
mov
pop
mov
in
daa
xchg
js
ret
jb
bound
pop
sti
and
mov
add
adc
xor
rolb
mov
lea
xchg
lock
call
mov
mov
mov
lcall
sti
pop
cli
bnd
sar
testl
dec
mov
shll
bound
fs
cwtl
lock
inc
push
cwtl
ret
xchg
nop
cld
mov
mov
leave
outsb
dec
call
pushf
add
int
pop
sarb
xchg
lods
ffree
loop
jle
fsub
gs
push
sbb
pop
mov
jl
notl
sbb
cmp
loop
decb
ds
fs
pop
or
ret
fisubs
cs
jmp
and
iret
ficoms
stos
fisttpll
in
mov
iret
and
push
stos
fidivl
lods
in
mov
fistpl
add
jg
cvttps2pi
xchg
sbb
into
test
mov
cmp
and
arpl
jnp
mov
mov
ja
bound
and
and
mov
test
sbb
scas
xchg
sbb
sbb
xor
mov
xchg
xor
hlt
cmpsl
push
test
push
iret
dec
aaa
outsl
cmp
js
adc
out
repz
loop
and
ret
mov
cmp
mov
hlt
aaa
add
push
mov
jp
mov
outsb
aaa
mov
xor
or
mov
cld
add
push
sub
cs
mov
or
dec
aas
popa
in
xlat
add
in
xor
in
push
or
pop
rclb
out
sub
adc
push
enter
mov
clc
add
lcall
and
dec
test
aam
daa
addr16
lods
nop
mov
test
scas
jb
ret
and
pop
femms
pop
pop
test
xor
popa
dec
or
in
pusha
mov
les
or
pop
stos
fcompl
cmp
pop
pop
sbb
daa
mov
push
jmp
cmp
inc
popf
cli
shrl
test
xor
xor
mov
sub
movb
stc
into
decb
pop
outsb
adc
das
dec
dec
call
outsb
and
and
cltd
push
test
sub
outsb
movsl
or
xor
aam
or
pop
ret
xor
mov
xchg
mov
and
mov
ret
xchg
jns
xchg
lods
pop
push
cli
add
in
cltd
mov
adc
add
add
jb
or
jecxz
mov
inc
jmp
push
ss
mov
xor
aam
inc
ds
repz
fs
lahf
dec
pop
xchg
jge
aad
movsl
test
lock
sbb
sub
fidivl
scas
ja
loopne
mov
jmp
xchg
dec
pushf
sahf
sub
ds
add
aaa
es
int
loopne
movsb
addb
or
push
inc
neg
cmpsb
or
xchg
jne
cmp
mov
jb
mov
sub
in
pop
test
cwtl
mov
adc
add
mov
lahf
mov
fwait
mov
test
push
insb
xchg
into
sub
sub
sub
pop
push
out
mov
sub
mov
cmp
mov
and
xchg
push
pushl
dec
add
out
or
mov
and
lret
fs
mov
jne
xlat
lds
push
mov
inc
insb
in
subb
add
xor
mov
cwtl
movsl
xchg
jne
mov
cmpsl
dec
jbe
insb
sbb
rclb
pop
pop
sub
jbe
out
cld
cli
mov
or
shlb
mov
imul
cmp
imul
push
jb
jmp
test
push
fs
and
and
pop
sub
jae
mov
sub
adc
rcl
xor
mov
mov
mov
or
out
jae
xor
insb
or
xchg
push
mov
into
inc
nop
push
push
aaa
sub
stos
jp
jg
add
int3
stc
adc
push
cmp
or
out
sub
ds
test
jbe
andb
in
lds
sahf
ret
testb
scas
call
sbb
mov
cmp
inc
mov
sbb
call
insb
sub
add
clc
ret
out
stos
gs
sub
adc
jbe
jmp
outsb
cmpsl
push
ret
push
mov
sbb
cld
inc
test
mov
mov
ffreep
mov
lods
xchg
xchg
insb
pshufw
adc
clc
cs
movsb
imul
mov
sahf
inc
pop
test
les
andl
push
cmp
gs
xor
pop
jp
push
cwtl
test
push
pop
into
push
cmp
pop
rcrl
mov
xor
xchg
jp
fsubl
fmulp
aas
pop
cwtl
je
aam
mov
fisttps
dec
mov
push
imul
icebp
popf
inc
loope
cmp
fwait
xchg
or
cmp
jecxz
push
icebp
jle
in
mov
ja
addr16
mov
imul
lds
cmpsb
aaa
mov
iret
shrb
loopne
dec
int
inc
popf
jl
stos
lods
int3
sbb
fnstcw
sbb
lock
inc
push
add
or
ds
stos
cs
out
mov
roll
push
imul
lods
loop
xchg
cmpsl
pop
subb
iret
xchg
push
mov
adc
inc
and
sub
mov
mov
adc
daa
mov
movsl
pop
daa
daa
xor
stos
lods
push
addr16
push
xlat
pop
adc
int3
mov
lock
jnp
and
xor
fistpl
scas
mov
mov
orl
jnp
add
fucomp
push
xchg
cmp
in
xchg
adc
xchg
ds
xor
ljmp
pop
and
out
xor
out
std
lds
mov
popa
push
mov
mov
lods
or
les
or
fwait
scas
lods
fidivl
push
dec
push
ja
mov
fimuls
in
fldl
inc
xor
imul
pop
mov
add
addr16
push
adc
sub
pop
stos
lods
imull
loope
jl
imul
jmp
jmp
xlat
mov
lods
outsb
int
leave
xchg
mov
pop
aaa
iret
push
into
mov
or
or
cmpb
scas
les
lret
jmp
popf
adc
fisttpll
lret
mov
lcall
icebp
mov
mov
jecxz
adc
xchg
push
cld
sbb
fldcw
aas
out
mull
jge
cltd
jmp
push
rol
lret
xchg
xchg
xchg
xchg
sub
hlt
es
loope
jbe
fdivrl
mov
les
xor
push
jecxz
mov
pop
je
push
xchg
pop
movsb
sbb
add
pop
or
clc
adc
sbb
cmp
inc
push
jle
scas
add
and
out
int
add
sub
addr16
or
sub
dec
sub
idiv
push
jl
adc
shlb
push
inc
jnp
push
out
mov
mov
and
call
mov
add
sbb
push
notb
and
lods
xor
push
loop
add
test
mov
xchg
push
lds
int3
mov
sbb
lea
arpl
fld
xchg
sahf
mov
imulb
xchg
dec
xchg
loop
in
mov
sbb
loopne
test
aas
xor
addr16
repnz
and
or
aad
inc
scas
sbb
push
add
clc
xchg
jo
jge
sbb
cld
sub
adc
insb
or
divb
and
enter
cmc
leave
fs
xlat
jecxz
fsubs
les
jg
mov
js
fbstp
in
xlat
sbbb
mov
cmp
jo
inc
jbe
xor
ja
mov
into
xor
les
arpl
inc
push
jecxz
jmp
dec
movsb
cltd
movhps
adc
jno
mov
daa
rorl
xor
shlb
inc
sbbb
jno
repnz
cmpsl
mov
mov
jb
inc
fldt
jge
mov
sysret
push
jnp
jo
cwtl
test
movsb
mov
mov
push
adc
in
xor
cs
pop
jg
test
push
rorb
stos
fmull
sub
stc
clc
sarl
mov
inc
mov
movsl
push
jnp
pushf
push
pop
sbb
inc
loope
cmp
repnz
xchg
mov
xor
push
sub
outsl
movsb
lods
aaa
int
push
and
shlb
jmp
iret
xchg
mov
lret
dec
push
ret
cmp
lcall
jbe
adc
mov
hlt
scas
hlt
jl
cmp
or
xor
or
popa
fcos
in
jecxz
push
inc
mov
cwtl
or
hlt
fwait
inc
aam
daa
jbe
xchg
dec
add
inc
push
jp
xor
jle
cmpsb
cmp
inc
outsb
xchg
pop
add
hlt
inc
int3
xchg
fidivl
loope
lock
cmpsb
fs
inc
or
xor
mov
add
pop
inc
push
fs
xchg
in
jmp
test
sub
jne
dec
les
orl
fcmovnbe
pop
xor
push
add
pop
aad
arpl
and
mov
and
fmuls
sub
inc
and
mov
out
es
ss
or
mov
mov
lea
nop
pop
rclb
and
int3
or
call
clc
cmp
jno
cmp
sbb
mov
mov
cmp
js
dec
xchg
int
xchg
jns
out
jnp
or
movsl
stc
stos
jge
pop
sub
dec
adc
out
lds
bswap
add
push
icebp
add
mov
jle
stc
out
mov
hlt
loop
inc
push
xor
add
int3
pop
cmp
mov
int
adc
or
mov
mov
subl
xchg
xchg
mov
lea
sbb
shrl
cmp
dec
cmp
sbb
xor
xchg
fldl
jo
xchg
mov
movsb
sub
inc
xorl
out
jge
push
push
mov
cmc
dec
adc
and
sub
rclb
pop
inc
lods
enter
jg
imul
xor
test
leave
inc
mov
pop
mov
adc
inc
push
cltd
lock
xorl
lock
jne
inc
adc
cmp
hlt
pushf
push
pushf
push
movsl
pop
mov
arpl
int
test
cld
mov
aaa
loope
or
and
inc
pop
lds
push
xor
jno
enter
pop
inc
mov
cs
add
jns
ds
pop
sti
dec
xor
sbb
and
xchg
outsb
les
and
sahf
in
sbbb
sbb
fidivs
cwtl
sti
push
mov
arpl
add
out
mov
mov
aam
in
dec
ljmp
sbb
xchg
sti
mov
sahf
bound
lods
ljmp
jle
sti
adc
add
mov
dec
jg
out
mov
push
lea
pop
xor
pop
ret
or
cmp
add
das
sub
jl
mov
xchg
push
inc
mov
jle
fsubrl
push
adc
nop
int
fnstcw
xchg
cmpsb
pushf
fsubrs
add
in
and
ret
pop
mov
adc
xlat
mov
push
adc
loopne
inc
jo
pop
cld
or
addr16
xor
dec
jne
cmp
push
popl
idivb
mul
mov
stos
daa
mov
mov
jbe
mov
scas
test
lcall
and
mov
sbb
scas
movsb
xor
pop
loop
mov
loop
sub
or
dec
pop
sbb
fxch
loopne
ret
sti
inc
mov
lret
jns
mov
or
inc
dec
insl
sub
mov
sahf
scas
js
leave
enter
mov
adc
filds
stc
inc
nop
out
pop
push
cld
sub
insb
sub
mov
push
xchg
pop
jne
mov
jg
mov
mov
push
sbb
movsl
push
dec
mov
xor
subl
mov
rorl
nop
xchg
sarl
js
outsl
add
cmp
aad
xchg
fcom
cwtl
dec
xchg
dec
pusha
mov
pop
imul
sub
inc
sbb
inc
in
aam
inc
push
movsb
cmp
mov
or
stc
cmp
js
dec
inc
es
loop,pt
fsts
mov
mov
jne
int3
mov
into
faddp
xchg
jle
inc
imul
popf
add
mov
into
fnstsw
repz
data16
pop
push
test
mov
mov
jbe
movsb
stos
jl
int3
bound
xchg
and
push
inc
iret
and
mov
mov
es
xlat
inc
inc
sahf
sahf
mov
test
fisubrl
mov
dec
das
jecxz
mov
pusha
gs
add
scas
pop
faddp
mov
stos
jnp
and
pop
dec
sbb
sbb
pop
xchg
or
pop
scas
inc
ds
mov
adc
roll
mov
or
fs
not
pop
loopne
lods
mov
push
jecxz
arpl
hlt
xor
cmp
add
xchg
cmp
sbb
adc
mov
mov
leave
flds
jnp
addr16
cli
jmp
rcl
std
adc
repz
mov
repnz
push
frstor
shrl
mov
rclb
cs
shll
leave
mov
js
inc
enter
or
jmp
xor
sti
add
xlat
pop
mov
cmp
xchg
lods
stos
sbb
and
lcall
sub
leave
xor
test
mov
pusha
inc
mov
dec
sub
in
mov
mov
iret
dec
pop
jle
test
xchg
xchg
movsl
lahf
pop
sti
in
xchg
add
dec
jmp
or
ret
push
push
leave
and
jecxz
cmpb
div
leave
rclb
lods
push
inc
fs
pop
pop
jae
in
jnp
xor
push
mov
xor
adc
stc
nop
and
ja
cmp
and
add
xor
pop
sar
loop
jno
in
mov
add
jo
ficomps
daa
and
imul
lcall
es
sbb
or
lods
fcoms
xchg
xorb
mov
push
lcall
lret
ja
arpl
and
xlat
fcoms
and
sub
mov
pop
cmp
jno
lods
sbbl
test
add
xlat
jl
jns
jno
xchg
adcb
out
xchg
ficomps
cmpsb
andb
sahf
mov
cmpsb
or
dec
push
mov
and
hlt
mov
xchg
into
jmp
stos
jmp
sub
in
rcll
and
imul
and
jg
inc
lds
sbb
xor
aad
mov
fsubl
sub
sub
inc
dec
and
icebp
sbb
outsb
rol
ds
f2xm1
stos
cmp
enter
in
adcl
mov
jecxz
push
xchg
pop
jbe
push
pop
push
arpl
sbb
push
fstpl
push
jle
adc
ss
mov
rorb
fcompl
mov
gs
dec
fucomip
imul
mov
jo
xchg
jg
imul
and
fsubl
push
stos
sahf
rcrb
mov
push
jno
jmp
das
pop
lock
inc
sub
jp
and
decb
gs
sbb
data16
stc
rcr
sub
and
movsl
jno
shlb
push
push
shrl
shlb
outsb
lcall
mov
es
jo
mov
push
in
or
sbb
outsl
cmp
fdivl
loop
ret
das
aas
pop
sbb
push
mov
cmp
inc
mov
addl
dec
mov
xlat
idivb
jbe
push
lret
cs
shlb
scas
and
cwtl
jecxz
mov
les
clc
scas
pop
frstor
or
outsb
mov
mov
stos
int
in
dec
imul
mov
xor
jle
insb
sub
mov
sub
pop
adc
mov
cmp
sub
push
imull
pop
cmp
lahf
adc
pop
mov
mov
xchg
adc
nop
push
icebp
mov
xchg
add
test
mov
pop
rcrl
add
or
outsl
mov
pop
sbb
push
movsl
es
lods
imul
aaa
fwait
aam
jno
std
lods
add
or
or
scas
inc
test
dec
cmp
cld
cmp
add
imul
jmp
mov
or
push
mov
jnp
cmp
mov
loopne
xor
push
out
sbb
dec
pushf
icebp
mov
or
and
jmp
adc
inc
bound
mov
inc
imul
xchg
out
clc
mov
jp
mov
pop
cmp
leave
xchg
sub
pop
jp
and
stos
pop
xor
mov
xor
jnp
mov
loop
push
and
push
pop
out
sbb
outsl
fsubrs
movups
div
xchg
outsb
push
push
mov
test
and
repz
bound
sarb
xor
loopne
jno
inc
mov
xchg
push
arpl
aam
pop
jecxz
xchg
adc
cmpsl
xchg
mov
mov
loope
adc
xchg
bound
jecxz
ret
mov
sbbb
mov
pop
insb
dec
sub
in
mov
stos
sub
pop
ss
dec
mov
daa
mov
les
sub
fildl
out
clc
aaa
push
pushf
xchg
adc
fwait
jno
fs
push
insl
jg
mov
and
mov
mov
pop
je
add
pop
push
jecxz
gs
lcall
out
xor
out
cmc
sbbl
jmp
pop
add
xor
data16
xchg
add
fimull
pop
adc
movsb
out
lods
in
std
bound
call
and
cmp
xchg
insl
aaa
cld
push
or
popa
jno
lret
sub
inc
mov
or
data16
dec
or
sbb
divl
xchg
xor
pop
mov
das
or
insb
pop
jae
cmp
inc
xchg
mov
add
lret
insb
cld
rolb
jl
xor
inc
cltd
ja
lret
outsl
mov
mov
mov
pop
mov
jno
dec
mov
repz
and
pop
jecxz
pop
outsb
ret
js
xchg
mov
rol
pop
imul
push
cmp
ret
cld
das
xor
mov
jle
test
dec
jo
fists
jnp
xor
jo
sbb
jno
xchg
cmp
popf
cmpsb
aaa
nop
push
xor
sbb
adc
inc
add
loopne
out
xlat
outsb
or
pop
out
xor
cmp
idivl
sbb
jge
gs
xor
adc
faddl
pop
add
mov
mov
mov
mov
fstps
push
in
adc
ret
ret
mov
leave
nop
les
aaa
shrl
fadd
xor
cli
add
sub
or
cmp
bound
mov
add
sbb
into
push
std
adc
or
js
out
jbe
arpl
flds
add
in
les
adc
lahf
jg
in
mull
inc
jo
xchg
pop
add
jne
and
and
shrl
pop
inc
cld
dec
fisttpl
pop
push
adc
jl
cmp
aaa
mov
dec
cmpsb
aam
aaa
xchg
push
loope
mov
fldl
xchg
and
outsl
sub
jl
xchg
mov
xchg
adc
in
dec
cmp
popf
in
out
das
cs
mov
in
repnz
sbb
roll
xchg
aad
mov
sub
jns
in
rorl
popf
xchg
add
imul
ja
mov
add
add
inc
rcll
or
faddl
pop
jg
mov
cld
std
sahf
jno
push
subb
rolb
ret
pop
imul
xor
jecxz
cmp
cmpsl
clc
and
lcall
insl
jge
or
fwait
cltd
ds
mov
insb
push
or
xor
dec
push
and
out
std
mov
out
stos
popf
jmp
into
stos
mov
push
sub
popf
sbb
mov
es
bnd
push
loop
repz
repz
in
popa
pop
mov
shlb
sub
xchg
mov
mov
mov
inc
jle
ljmp
divb
cmp
shll
cli
mov
mov
lods
pop
lret
ljmp
pop
es
test
cld
or
out
ljmp
add
add
test
sti
stos
lahf
and
push
inc
add
xchg
cwtl
jbe
roll
fsubrl
pop
das
out
aas
mov
pop
push
fldcw
inc
addb
or
xor
xor
and
test
jp
sub
jo
push
pop
fcmovnu
das
add
dec
inc
jmp
xchg
inc
fidivrs
pop
insl
jns
fwait
add
inc
push
or
sub
xorb
and
hlt
lods
aam
inc
sar
stc
fstpt
test
andl
jge
jns
movsl
sub
movsb
fildll
fdivr
inc
mov
sub
jb
test
adc
ja
pop
loop
daa
inc
sub
shll
add
pop
dec
and
xor
rcrb
fwait
sahf
xchg
lods
hlt
jle
lods
pop
jbe
mov
jne
mov
repz
push
sub
push
loop
insb
and
inc
fcomip
sub
fs
xchg
dec
paddusb
popa
repnz
ljmp
pop
cmp
out
mov
mov
scas
negb
cmp
cmp
xor
lea
aad
xor
enter
mov
inc
rcr
mov
and
and
dec
or
sbb
pop
xor
xor
popf
sub
cli
cmp
das
out
inc
and
xchg
dec
mov
lods
cmp
loope
fimuls
inc
fsubrp
sbb
inc
aam
mov
jne
test
lret
mov
arpl
shll
fs
adc
push
sahf
adc
cli
and
jae
test
pushl
out
mov
sub
fmuls
in
enter
bound
xchg
idivl
stos
jecxz
pop
movsl
lret
pop
push
jns
sti
dec
or
shrb
dec
jns
mov
mov
xchg
into
test
cltd
out
js
stc
cli
fistpll
je
jmp
jnp
xchg
mov
out
mov
add
imul
mov
mov
mov
mov
bound
or
rcrb
bnd
mov
int3
pop
scas
push
lds
mov
pop
dec
es
out
call
mov
cmp
nop
sbb
cli
jae
pop
dec
mov
sti
sbbl
stc
jle
or
cmc
es
push
cmp
jnp,pt
adc
leave
fcomps
rcrb
cli
xchg
xor
and
shll
adc
mov
mov
in
push
sub
ljmp
jbe
ds
xchg
mov
mov
push
cmp
pushf
dec
dec
in
repz
lahf
sbb
jo
insb
xchg
push
sti
andl
xor
sbb
adc
mov
mov
cmp
shr
mov
xchg
gs
in
add
xor
lret
in
aam
lcall
mov
pop
pop
das
jp
leave
cmp
mov
push
push
pop
sbb
fwait
jns
lret
nop
mov
decb
mov
push
mov
xor
mov
insb
dec
aam
cmp
push
or
pop
in
jecxz
fcom
ffreep
ret
sub
jle
jge
pushf
jne
push
pop
push
cld
ljmp
push
cmp
mov
add
insb
sbb
scas
mov
jae
jle
leave
ret
outsl
mov
sub
lods
push
jo
mov
fisttpll
sub
andb
push
pushf
and
jle
pop
mov
pop
mov
cmp
mov
test
and
xorb
dec
stos
pop
cmp
cmp
mov
dec
fwait
xorb
movsb
and
jbe
orb
les
or
xor
cld
pop
pop
test
test
and
push
add
jb
icebp
int
jmp
xor
out
ficomps
cli
or
sub
je
mov
push
faddl
js
mov
ficomps
xor
jmp
aas
stos
outsl
cmp
mov
jne
sub
add
xchg
mov
decl
test
mov
repnz
mov
mov
jge
hlt
xor
loop
mov
sbb
jmp
cwtl
pop
sub
xchg
xor
dec
xchg
aaa
movsl
push
jecxz
fs
jle
jp
add
mov
mov
out
sub
xor
lcall
out
mov
cli
ret
pop
inc
push
dec
push
sahf
fldl
mov
icebp
mov
leave
sbb
sti
stos
add
cs
daa
and
pop
or
xchg
dec
lret
mov
js
mov
mov
dec
fst
jno
cltd
out
negl
mov
adc
add
mov
aad
pop
xchg
pop
sub
sahf
sar
sarl
mov
lahf
adc
cmp
adc
xchg
mov
std
and
insb
repz
ds
repz
shll
or
jmp
lods
leave
mov
push
repz
push
or
push
sbb
inc
stos
movsl
and
adc
jbe
popa
scas
jb
mov
sub
hlt
inc
loope
push
ficoms
xchg
popf
out
pop
xor
ja
xor
bound
les
sbb
lret
in
mov
xchg
cli
push
aam
and
loop
mov
fucomi
in
subb
inc
mov
stc
repnz
fs
jb
xorb
xchg
sub
mov
adc
sbb
push
pop
sbb
xchg
pop
in
mov
push
mov
loop
xchg
pop
arpl
push
jnp
sbb
xlat
mov
pop
js
dec
mov
enter
inc
popf
mov
or
dec
jmp
cmc
push
fsubl
push
push
dec
push
sahf
mov
aad
sub
push
xor
fildll
movsb
add
mov
je
addl
das
or
fidivl
insl
mov
push
sub
adc
xor
and
adc
mov
jnp
xor
push
lea
adc
add
stc
xchg
mov
add
and
aam
adc
or
daa
test
ss
test
lea
adc
lods
jg
pop
mov
das
ficompl
je
xchg
roll
aam
jge
in
out
sbb
cli
dec
mov
pop
int
xchg
pop
lds
mov
sbb
pop
das
data16
cmp
or
fisubl
or
dec
sbb
jb
popa
pop
xchg
push
xor
xchg
shlb
push
ret
pop
leave
fs
leave
jp
mov
add
lcall
adc
adc
lods
xchg
xor
lock
js
push
adc
mov
dec
mov
jg
fs
addl
xor
out
or
dec
xchg
mov
mov
xlat
lahf
rclb
inc
ret
jno
test
sbb
lcall
out
push
sbb
mov
out
xor
jge
jbe
inc
test
pop
lods
imul
aad
pop
dec
xchg
xor
mov
and
lds
aas
xor
push
hlt
sub
hlt
bound
aad
sub
mov
sub
outsl
movsb
push
lahf
and
iret
push
mov
dec
cs
inc
aas
insb
add
jae
add
int3
fs
in
push
insl
jle
add
or
jecxz
popa
mov
pop
pop
mov
leave
int
jg
mov
movl
stos
insb
popa
popf
cmp
xchg
mov
inc
push
mov
xchg
aas
mov
cmpl
add
mov
int3
sbb
es
add
lock
aaa
lods
cmp
mov
inc
xchg
mov
and
adc
test
mov
jl
dec
sub
jb
cmove
fisubrs
mov
and
mov
pushf
adc
mov
push
fadds
repnz
add
test
pop
sbb
jg
pop
sbb
lret
mov
pushf
mov
sub
add
dec
and
movsl
adc
ret
stc
jo
inc
lods
dec
jg
xor
shl
stos
scas
sub
xchg
subb
cmpb
push
mov
pop
fbld
fstsw
sub
adcb
mov
xor
add
adc
dec
push
dec
xchg
mov
sub
leave
aas
int
xchg
jp
mov
dec
cmpsb
das
inc
push
jecxz
adc
sub
sub
and
mov
dec
push
mov
or
adc
sub
mov
enter
pop
and
rolb
xor
fld
xchg
inc
dec
fiadds
repz
or
mov
dec
in
dec
movsb
push
fsubrs
xchg
inc
scas
bnd
jmp
into
cmp
push
inc
std
sbbl
loop
mov
adc
notb
push
cli
and
pushl
xchg
mov
or
mov
enter
into
xor
addr16
int3
nop
sub
lods
pop
mov
in
mov
clc
fmuls
sub
mov
push
pop
inc
sub
dec
mov
vpaddusb
pop
out
loopne
pop
cmp
rcrl
lods
adc
jnp
test
rclb
cmp
popa
adc
test
mov
pop
or
jnp
cmp
repz
dec
lock
inc
mov
lahf
addb
stc
cmp
jmp
push
loop
out
test
dec
int3
mov
add
fucomi
mov
and
xchg
mov
cli
fldl
mov
loopne,pt
adc
sbb
in
sbb
jae
loopne
mov
lcall
stos
xor
jns
cmp
and
sarl
push
dec
jecxz
cmp
outsl
mov
push
setno
es
and
cltd
push
xchg
jecxz
add
cmp
insb
sub
in
in
dec
dec
xchg
adc
stos
aaa
aad
inc
cmp
pop
cmp
adc
fsubr
jg
adc
test
mov
xchg
pop
clc
lea
fildll
mov
jecxz
fsts
aam
pop
mov
movsb
movsb
imul
subl
loopne
enter
lret
jp
aad
jmp
in
add
sbb
sahf
lock
pop
sbb
push
inc
pop
sbb
shll
out
add
dec
adcb
inc
or
cld
fsubrs
mov
cmpsl
aaa
repnz
gs
sbb
pop
bound
aaa
movsl
xchg
push
mov
in
add
or
mov
xchg
mov
popa
mov
in
inc
push
jle
aam
jge
stc
into
repnz
xchg
in
xchg
mov
popf
mov
lahf
inc
fisttps
hlt
xlat
jl
mov
lret
jl
mov
loope
pop
out
daa
or
push
dec
fs
lret
cmp
mov
or
mov
cli
jmp
mov
mov
push
mov
push
inc
and
pop
call
out
sbb
adc
pop
xor
sahf
aad
sahf
bnd
ss
jo
or
mov
pop
dec
add
data16
out
dec
jecxz
mov
adc
aad
sub
stc
daa
iret
pop
mov
cs
pop
jmp
mov
imul
dec
roll
rol
pop
add
mov
lcall
sbb
loop
cli
scas
lock
add
cmpsb
add
fists
test
sbb
and
roll
jnp
rolb
outsb
loope
sbb
jp
mov
int
ret
dec
inc
out
sbb
sub
pop
push
cmpsl
add
xor
pushf
lea
xchg
scas
pop
mov
data16
cmpsl
xchg
cmp
mov
ds
inc
inc
mov
sbb
movsb
pop
cmp
jmp
jg
pop
and
xor
sbbl
fs
loope
pushf
test
scas
dec
or
in
sub
xchg
push
lea
add
jecxz,pn
stc
idivb
sbb
cmp
popa
popf
push
jnp
mov
jae
or
push
stos
jle
aaa
xor
xorb
inc
cmp
imul
dec
sbb
js
or
repz
and
push
outsb
push
test
jno
push
fs
push
cmovb
lret
sbb
push
mov
fs
popf
dec
cmp
imul
add
sbb
sbb
stos
sbb
pop
or
and
add
lret
flds
aad
and
dec
sti
mov
or
and
or
xchg
test
push
fcom
sub
push
push
xchg
iret
mov
stos
mov
movsb
and
int3
repz
mov
mov
ljmp
adc
cld
call
enter
sbb
subl
lock
out
add
data16
sti
pop
dec
mov
repz
xchg
fistpll
fdivr
add
xor
pop
jae
aad
add
pop
mov
jb
decb
jne
insb
sub
gs
nop
ror
cwtl
ljmp
loope
sti
test
lock
stos
or
stos
and
ja
push
jmp
test
pop
push
xor
sub
pusha
sub
rcll
ret
fcmovnb
shlb
mov
inc
sub
cmp
jle
push
cmpsb
mov
inc
xchg
push
lcall
lret
mov
dec
dec
lahf
adc
dec
dec
cld
dec
add
and
mov
mov
xchg
ss
xchg
movsb
mov
cmc
imul
fadds
add
sub
adc
repz
cvttps2pi
jp
outsb
sbb
push
push
or
rcll
mov
jno
aas
jge
xchg
fwait
std
sbb
pop
sbb
cmp
je
push
mov
jle
xchg
dec
adc
or
cmpsl
out
out
ret
ljmp
xchg
inc
push
lret
xor
mov
std
mov
mov
or
mov
decb
call
mov
sahf
jmp
ret
jecxz
adc
stos
xorps
mov
imul
mov
sbb
js
lcall
lods
sbb
push
cmp
mov
dec
lock
mov
test
aaa
or
jge
je
mov
xorb
mov
ret
dec
mov
xchg
mov
ret
imul
movsl
pop
pop
or
adcl
sub
add
pop
xchg
jl
sub
push
or
xchg
cmp
aam
es
xchg
xchg
and
inc
popf
lcall
pop
or
insl
pop
inc
adc
or
sar
int
add
adc
push
sub
dec
loopne
jmp
adc
imul
lea
lret
push
sti
jl
movsb
cmc
pop
mov
aad
icebp
rcrb
pop
in
jecxz
mov
add
out
and
iret
or
sar
mov
add
daa
sarb
mov
fcoms
test
dec
jle
mov
mov
mov
sub
adc
inc
pushf
jle
fnstsw
outsl
imulb
stc
jp
cmp
aaa
call
pushf
outsb
fmulp
push
mov
push
jmp
jmp
andl
les
hlt
inc
jge
cmpsl
imul
add
jno
jl
call
fsub
int
xor
xchg
lahf
mov
imul
ss
push
addb
sbb
jns
outsl
repnz
pop
fistps
icebp
dec
push
pop
mov
fwait
loope
mov
cmp
mov
repz
push
sbbl
cmp
and
dec
arpl
out
or
push
pop
mov
xchg
mov
pop
adc
and
mov
int
addr16
jle
dec
xchg
cwtl
shll
cmp
push
out
xchg
jns
mov
mov
iret
dec
lret
bound
inc
in
dec
pop
push
aam
mov
jne
mov
fistl
mov
cmc
mov
data16
lock
xor
in
aad
sbb
cli
jno
loope
lock
test
inc
popa
sbb
data16
outsb
pop
cld
shl
push
xchg
popf
pop
test
mov
xchg
xchg
jg
das
out
imul
push
mov
popa
scas
xor
sti
in
mov
out
aas
mov
mov
dec
idivl
xor
push
push
cltd
test
dec
mov
adc
xchg
sbb
sub
stos
int3
movsb
xor
inc
fs
or
jne
xchg
add
jo
xchg
xor
jo
xor
adc
lock
lcall
mov
dec
pop
xor
push
jno
in
push
cwtl
mov
and
scas
je
nop
push
and
das
dec
dec
mov
lret
int
push
fxch
add
adc
push
popf
inc
adc
jge
enter
inc
nop
cmc
and
mov
dec
mov
mov
scas
and
jecxz
in
mov
call
ss
adc
mov
adc
daa
mov
mov
add
fmull
mov
mov
pop
mov
or
dec
jecxz
mov
outsl
mov
xchg
fnstenv
pop
int
ljmp
mov
xor
or
idivl
dec
push
inc
and
fmulp
jae
pop
ret
pop
push
aad
iret
dec
jnp
or
mov
dec
lock
inc
clc
inc
or
sub
repz
dec
push
and
arpl
xchg
add
into
icebp
jo
fs
xchg
rcrb
sarb
ds
nop
pop
adc
punpckhwd
cmc
cmp
add
ljmp
pushf
xchg
push
xor
daa
subl
push
lds
fidivrs
sub
stos
or
ret
nop
xor
cmpl
cmp
arpl
sbb
jp
je
daa
mov
xchg
fsubrl
mov
sub
xchg
push
test
test
mov
push
lods
push
xor
nop
dec
pop
xchg
outsl
push
mov
iret
lret
in
nop
and
test
jne
and
mov
hlt
stos
push
mov
ret
sub
andb
dec
xchg
push
xchg
and
out
push
pop
mov
aaa
add
mov
xchg
cld
cmp
inc
call
pop
test
repnz
fldl
sbb
mov
push
outsl
sub
lcall
popf
mov
xchg
scas
rep
cmp
xchg
add
add
xor
sub
jo
outsb
fdivrl
jne
mov
sti
in
dec
sbbl
das
sbb
sbb
mov
push
xchg
jecxz
push
xor
sahf
cld
jle,pt
addr16
pop
pop
dec
cmp
daa
ret
loop
test
jg
xor
ljmp
pusha
inc
dec
pop
ja
adc
test
adc
ret
movsl
and
or
push
nop
inc
aas
and
xchg
cmpsb
outsb
jno
pop
push
push
mov
mov
pop
dec
popf
fs
repnz
mov
mov
shr
sbbl
roll
mov
in
sbb
push
xchg
adc
jnp
pop
nop
shll
shll
sub
test
addr16
xchg
insl
lcall
sub
dec
adcb
push
outsb
andb
addr16
popf
xchg
jl
dec
test
and
addr16
push
lcall
mov
lret
fnsave
shl
pop
rcrb
pusha
or
jp
sbbl
lea
cli
cs
je
push
mov
push
push
pop
aaa
cmp
cli
push
dec
mov
loopne
push
dec
in
test
pushf
lahf
mov
sbb
clc
pop
jnp
sub
je
lret
mov
adc
lock
ljmp
dec
pop
jne
inc
xor
pop
lods
adc
mov
dec
push
and
or
adc
xor
xlat
sub
das
notl
push
lods
xchg
in
or
push
push
mov
pop
mov
dec
clc
lock
dec
add
pop
clc
dec
sahf
test
mov
jle
in
mov
stos
or
jae
aas
sub
jae
dec
or
shlb
dec
jno
and
xchg
ja
sub
dec
fidivrs
mov
aaa
push
xor
pusha
dec
aaa
sub
xchg
icebp
imul
push
mov
cmp
imul
sbb
push
jo
ja
test
call
push
mov
pop
sti
dec
sub
lods
push
dec
pop
jmp
test
sbb
mov
push
ret
aam
cmpsl
sbb
pop
mov
xor
les
aam
movsl
xor
inc
es
xor
test
sbb
push
stos
mov
rorb
icebp
fnstenv
or
lock
test
dec
mov
and
stos
lahf
jmp
sbb
xor
jbe
adc
fisttps
push
int
stos
push
pop
loop
punpcklbw
cmp
nop
pop
adc
addr16
das
aas
sub
inc
xchg
adc
rcrb
jmp
pop
in
cmpsl
xchg
and
rcrb
ja
mov
xchg
inc
or
mov
daa
pop
mov
iret
repz
sti
fwait
or
jmp
dec
mov
xchg
push
mov
adc
fs
cmp
jg
pop
mov
into
push
push
dec
add
jne
xchg
movsb
hlt
movsl
fmul
add
sbb
mov
xchg
outsl
jmp
lods
loop
mov
push
push
cmp
inc
cmc
mov
jp
cmc
test
mov
pop
add
adc
or
sub
mov
dec
add
cmp
xor
and
fmull
das
dec
sar
das
inc
mov
dec
pop
cmp
jecxz
scas
shll
mov
sbb
mov
pop
xchg
add
lea
bnd
cmpsl
cmp
add
mov
xchg
sub
jmp
stos
std
testl
repz
xor
repz
lret
inc
xor
mov
or
mov
xor
add
pop
cmpsl
dec
mov
pop
pop
dec
or
mov
adc
loope
adc
rcrl
pop
and
data16
xor
out
insl
mov
into
int
pop
js
sbb
dec
cmp
je
lcall
mov
add
loopne
movsl
cmp
mov
xchg
mov
stos
pop
sbb
daa
dec
mov
in
out
fs
cs
mov
xchg
iret
sbb
ret
xchg
clc
or
cmp
sbb
xchg
fisttpl
xor
inc
and
cwtl
adc
jle
fcmovbe
push
push
adc
cmp
pop
ja
dec
jns
cmp
cmc
ret
stos
aaa
inc
enter
mov
cmp
dec
repnz
enter
lret
push
inc
and
js
sub
xor
push
imul
stc
sarb
dec
lods
loopne
aas
mov
js
fiadds
daa
pop
or
or
dec
cmc
lahf
test
jge
xchg
pushf
and
iret
mov
push
jle
pop
mov
popa
push
fimull
iret
aaa
fxch
pop
xchg
in
mov
xchg
dec
inc
jae
inc
pop
mov
or
jle
jmp
cmpsb
aaa
dec
movsl
sub
loopne
xchg
mov
fidivl
push
xor
push
add
pop
dec
stos
out
testl
neg
loop
or
or
in
add
push
sbb
scas
inc
addr16
push
cmpsl
jno
sti
xor
xchg
movsb
shl
fadds
movl
sahf
cmpsl
cltd
test
mov
arpl
outsl
lret
insb
pusha
insl
shll
sub
sete
xor
ss
sbb
loope
mov
push
rcr
aaa
jp
les
dec
mov
xor
mov
out
lahf
sub
test
adc
nop
fcomip
int
or
ja
jb,pt
xchg
sarl
fbstp
pusha
test
pop
orl
aad
loopne
xchg
sub
cs
mov
cmp
aaa
push
mov
arpl
cltd
loop
in
cli
adc
or
push
cwtl
or
icebp
imul
cmp
push
loopne
leave
mov
inc
xorl
movsl
loop
movsb
test
inc
out
movd
loopne
bnd
push
mov
add
or
inc
jb
adc
loop
das
sub
dec
pop
fwait
repnz
pop
mov
sub
lods
pop
and
mov
pop
add
dec
pop
dec
adc
movsb
sbb
fwait
xchg
rorb
and
inc
test
mov
popf
ljmp
xor
ljmp
call
or
cmpb
inc
aam
lret
aam
lcall
jmp
and
cltd
je
les
sar
push
int
jno
mov
sub
sti
mov
xor
popf
ljmp
cmpsb
arpl
xor
and
push
aaa
ljmp
imul
fsubrs
sbb
data16
push
jnp
xchg
movsb
push
insl
dec
icebp
inc
dec
hlt
fdivrs
push
and
add
sbb
jle
cmpsl
mov
sbb
enter
popa
cmp
xor
push
ss
push
inc
mov
lret
cmp
or
and
xor
je
fwait
adc
inc
dec
icebp
out
mov
enter
imul
xchg
imul
xor
adc
arpl
out
iret
cmp
add
ficoms
in
fs
cld
push
int3
mov
lods
jmp
lret
or
cmpsb
mov
adc
in
push
sub
jmp
sub
adc
sbb
rcrb
repnz
test
push
cmp
xor
mov
pop
lea
test
mov
ss
divl
aas
into
xchg
aad
pop
int
mov
movsl
push
dec
jbe
jno
push
push
mov
xchg
ret
fucom
xchg
add
push
xchg
sub
into
push
add
shrl
mov
mov
je
test
cmp
das
mov
test
push
loopne
in
ds
push
push
inc
andl
sub
mov
stc
in
inc
out
in
cmp
jne
jl
jne
out
cmp
dec
dec
rcrl
adc
pop
sub
and
fsubrl
jle
adc
mov
and
mov
scas
and
add
daa
push
roll
cs
or
xchg
cmp
mov
outsb
insb
sbb
mov
jnp
or
or
jmp
mov
cmpsb
push
push
daa
fisubs
mov
incb
cmp
shrl
loopne
add
mov
mov
inc
data16
std
jl
scas
sti
dec
sub
fsubr
popf
test
dec
test
adc
adc
test
xlat
mov
scas
jb
mov
pusha
sub
mov
popf
push
dec
lcall
hlt
xchg
cld
fwait
dec
pop
mov
jmp
xchg
fidivrs
jmp
mov
iret
nop
sbb
adc
jmp
out
xchg
gs
pop
imul
jg
fidivrl
xor
add
sub
inc
cld
pop
ds
ljmp
inc
scas
sahf
and
mov
pop
jp
and
xor
addl
mov
xchg
stc
std
mov
jle
xchg
mov
test
jg
icebp
push
inc
mov
jl
int3
in
add
mov
cmpsb
adc
sub
lds
clc
push
dec
repnz
cwtl
cmc
je
dec
add
inc
aam
orl
add
shll
mov
add
pop
sub
sub
mov
stc
jge
adc
cmp
out
out
insl
fbstp
mov
push
imul
test
jae
dec
in
sbb
divb
mov
mov
nop
mov
fsubl
stos
test
cli
loope
jne
jne
sub
std
xchg
idivl
adc
mov
jp
ds
out
ds
mov
or
ret
sbb
jl
in
xchg
icebp
xor
inc
push
lret
mov
in
sti
or
ret
outsb
jg
jnp
lds
mov
adc
mov
pushf
aaa
xchg
adc
sti
fdivp
lods
and
cmp
sbbl
lods
in
data16
jnp
mov
aad
mov
jo
cli
adc
jge
sub
or
jge
sub
cmc
out
adc
lock
pop
push
out
jecxz
cmc
inc
jecxz
mov
lods
es
pop
sub
je
adc
pop
cmp
pusha
add
repz
icebp
std
scas
sub
mov
push
pop
push
xchg
push
xor
mov
mov
jmp
adcb
daa
mov
or
call
loope
imul
mov
aad
rclb
or
jp
pop
imul
push
shl
lret
out
mov
ljmp
subb
arpl
mov
dec
imul
adc
and
jae
dec
lock
or
es
xchg
cmp
lods
inc
mov
or
jmp
jmp
inc
jns
shr
dec
mov
lds
dec
pop
add
lcall
sbb
add
ret
dec
das
sarl
xchg
icebp
fcomip
addr16
pop
or
rcrb
xchg
insb
or
xchg
and
repnz
iret
and
mov
int3
jp
push
mov
mov
push
pop
adc
cmc
and
xor
movsb
pop
sbb
leave
mov
out
mov
movsl
fdivs
adc
aaa
sbb
leave
lcall
int
mov
andb
mov
cwtl
ss
mov
test
xor
cmp
stc
push
les
aas
aaa
adc
sub
aam
and
mov
lock
loop
call
xchg
mov
pushf
movsb
test
mov
mov
pop
cmp
and
push
mov
sub
movsl
cli
ss
out
mov
inc
pushf
xchg
or
stos
int
call
fs
mov
in
repnz
sbb
dec
out
mov
mov
cmc
std
sbb
loopne
in
jno
push
and
sub
fisubl
mov
lcall
xchg
push
aaa
int
sbb
cmpsl
sbb
jmp
and
push
in
pop
test
clc
inc
cs
cmp
push
lret
xor
insl
lock
push
sbb
adc
pcmpeqw
pop
or
xchg
test
xor
push
mov
fistps
lcall
mov
test
stos
int3
out
stc
cld
jecxz
call
enter
sbb
cmpsl
push
cld
pop
test
aas
fpatan
adc
xor
mov
mov
je
mov
f2xm1
lcall
fwait
cmpsb
pushf
adc
out
dec
xchg
and
imul
push
push
rorb
lods
pop
lds
jl
imul
mov
dec
and
mov
test
hlt
cltd
dec
mov
xor
repz
mov
mov
mov
mov
cs
iret
cli
cmc
pop
fsubrs
and
adc
sub
scas
loopne
inc
add
add
cli
xlat
addb
jo
out
mov
scas
sbbb
pop
iret
adc
push
sub
jg
pop
xchg
add
and
subb
bound
mov
aaa
mov
lcall
stc
xor
in
aas
add
jns
repz
pop
in
in
pusha
in
test
sbb
or
int
mov
std
arpl
pop
mov
push
clc
sbb
movsb
cli
pop
lret
jp
sub
out
shl
jno
je
mov
ds
mov
outsb
xchg
or
xchg
loope
lock
sahf
daa
in
jge
push
jns
dec
data16
jge
xchg
fadd
add
mov
jp
push
inc
mov
ss
dec
add
jae
sbb
repz
push
xlat
std
out
gs
les
inc
adc
jns
inc
sarb
pop
push
nop
hlt
push
test
mov
mov
cli
or
mov
jnp
lea
cmpsb
push
js
loop
xchg
cwtl
xlat
call
dec
xlat
dec
jno
shrl
das
adc
cmpsb
iret
std
xchg
xchg
into
loope
jae
push
std
mov
scas
xor
aad
push
push
sti
mov
mov
adc
inc
jmp
repz
out
cmpsl
jbe
dec
jne
jo
adcl
inc
dec
mov
mov
mov
mov
xchg
mov
leave
inc
shrl
fnsave
lret
insb
in
es
aad
shlb
mull
lods
mov
jl
mov
mov
orb
aam
out
mov
out
jg
jg
cwtl
popf
dec
and
rorb
inc
rcrb
fs
out
xor
jae
jg
scas
fstpt
push
movsl
jmp
mov
sbb
mov
std
imul
in
xchg
ljmp
push
mov
lods
test
sti
mov
adc
pop
lods
lods
addr16
jae
mov
or
sti
push
xchg
fs
ljmp
in
sahf
pop
mov
repz
test
dec
repnz
lods
or
push
mov
and
xchg
lahf
inc
jmp
out
and
mov
frstor
pop
mov
fwait
adc
test
inc
aad
and
xor
aam
fimuls
inc
aad
push
xor
cltd
dec
lret
out
push
cmp
out
push
cmpl
mov
push
mov
sbb
pop
xchg
ljmp
push
testl
out
in
mov
clc
cmp
mov
push
mov
mov
popf
inc
mov
nop
mov
dec
dec
pop
cs
push
add
mov
push
dec
outsl
inc
in
or
leave
push
test
xor
daa
data16
insl
mov
je
negl
jg
fmull
nop
int
testb
dec
jmp
and
mov
jp
ret
hlt
cmp
stc
cmp
jns
pop
sub
adc
adc
call
fbstp
cmpsb
dec
mov
or
and
push
aas
lret
pushf
adc
fisttpll
mov
add
xchg
cmp
jmp
test
jno
sub
iret
mov
fdivrl
fucomp
sub
js
add
movsl
arpl
xchg
call
in
sub
in
mov
in
jns
and
je
mov
ficomps
add
aam
fiadds
outsl
lods
cmc
inc
es
pop
daa
rorl
cmc
inc
test
mov
xchg
pop
lock
xchg
and
push
add
pushf
popf
arpl
cmp
shlb
loopne
stos
adc
jne
mov
loope
push
xchg
sub
jle
cmpsl
pop
xor
xor
test
sbb
mov
cmpsb
add
cmp
sbb
dec
scas
mulb
lds
orb
sub
xor
mov
sub
xor
mov
fidivrs
pop
pop
std
cmp
sub
mov
jo
cmp
mov
jns
sbb
xchg
lods
fsubs
sahf
inc
dec
shll
fldt
mov
xor
mov
test
sbb
add
mov
xor
in
leave
jge
inc
xchg
mov
divl
repnz
xacquire
fidivl
push
aaa
fwait
and
stc
push
pop
sub
cmp
and
dec
movsb
repz
sub
lahf
loopne
push
mov
dec
pop
pop
aad
movsb
fisubl
out
rclb
mov
mov
mov
pop
mov
loop
call
push
jae
dec
jne
rclb
lret
mov
dec
jle
cmp
dec
enter
cmp
adc
std
daa
shrl
lahf
ljmp
mov
jb
push
mov
ds
xor
daa
outsl
std
add
sbb
sbb
cwtl
mov
push
xchg
and
sarb
cwtl
aam
pushf
enter
jecxz
sub
sub
xor
mov
mov
ss
xor
insl
aaa
insb
xor
lret
push
arpl
xor
loope
mov
gs
arpl
sub
or
test
popa
and
inc
sbb
adc
inc
arpl
int
mov
lock
xchg
cwtl
inc
mov
inc
je
out
int3
andb
adc
sahf
hlt
shrb
xor
adc
xor
popf
mov
sar
hlt
and
fnstcw
into
sub
loope
les
cwtl
pop
jmp
mull
loopne
pop
adc
imul
jmp
aad
mov
andl
in
repnz
mov
jp
mov
jmp
or
ret
xchg
jne
loop
inc
xchg
dec
test
fsts
pop
mov
les
out
and
pop
mov
push
aas
mov
loop
adc
sub
ds
scas
push
jp
push
outsb
mov
aad
xchg
cld
loop
add
and
or
in
cmp
stos
test
xchg
cltd
daa
mov
push
stos
mov
lea
sbb
movb
or
jne
pop
add
outsb
and
aas
outsb
mov
or
das
lock
fnstsw
popf
ljmp
lea
and
mov
mov
lahf
fsubr
test
xchg
and
cmp
mov
fimull
scas
sub
sub
mov
xor
les
sbb
lock
push
and
into
mov
mov
add
cs
pop
test
nop
xchg
or
pop
int3
xor
es
out
inc
jl
stos
lret
mov
scas
pop
cmp
fimull
jno
cmp
push
sbb
mov
xchg
pop
push
push
arpl
push
mov
add
mov
jmp
or
test
jo
roll
enter
mov
int
and
dec
xchg
imul
cli
push
sbb
jg
and
fistl
sbb
mov
and
mov
sbb
pop
cmp
xor
arpl
pop
andb
ss
fnsave
sbb
nop
push
push
jp
mov
pusha
insb
pop
divl
lods
int
imul
or
inc
and
es
test
bound
dec
dec
inc
cmp
insl
inc
cs
mov
movsl
fwait
mov
out
dec
mov
pop
mov
push
icebp
aas
aas
cltd
push
xor
inc
fs
rorb
das
dec
dec
loop
add
pop
pop
shlb
cwtl
test
stc
hlt
pop
dec
sbb
aas
push
mov
in
int3
test
jle
adc
incb
aam
out
pop
xchg
repnz
xchg
mov
aaa
daa
icebp
push
lods
aas
push
icebp
add
xchg
in
xchg
daa
iret
and
fstl
stc
scas
jae
add
pop
inc
and
testl
iret
xor
out
or
fimull
inc
popf
jo
push
outsb
dec
and
mul
fnstsw
push
ficompl
mull
xor
mov
repz
je
dec
enter
movsb
fidivl
les
sbb
cwtl
xchg
mov
pop
sub
dec
add
jecxz
fmul
in
ljmp
fnstsw
push
sti
push
addr16
jo
mov
dec
in
sbb
pop
mov
xchg
pop
mov
pop
icebp
cltd
mov
gs
lret
adc
xlat
sarl
sub
and
inc
std
xor
lea
stos
mov
push
int3
xor
mov
insl
stos
std
ret
data16
hlt
inc
andb
mov
mov
add
pop
pop
fdiv
andb
lahf
cwtl
mov
js
xchg
add
fadds
test
push
data16
or
loope
push
push
out
and
lahf
aad
ja
stc
dec
clc
movsb
xor
ret
and
imul
into
sub
loopne
repz
cmp
xor
sub
nop
mov
clc
fwait
aam
int
sub
dec
and
cmpsl
lock
pop
repz
mov
push
inc
cmp
dec
aam
loop
fidivs
pop
fdivr
and
dec
push
pop
add
shr
mov
push
or
and
jb
jmp
push
imul
dec
fwait
and
cmp
enter
cld
jbe
sub
cld
out
push
or
hlt
adc
jle
xchg
mov
jmp
push
or
call
js
mov
dec
loop
pop
call
repnz
mov
mov
stc
data16
and
sub
xchg
cmp
xchg
sbb
mov
lods
popf
add
inc
iret
mov
clc
add
out
scas
pop
cmpsl
test
cmp
mov
lea
cld
cs
mov
clc
inc
adc
xor
popf
push
pop
dec
popf
clc
cs
sub
hlt
adc
dec
add
xchg
jle
stos
push
xor
mov
lcall
int
in
pop
mov
fs
mov
cmp
add
in
sbb
fcompl
jmp
sbb
or
ret
popa
xorl
cltd
push
out
push
push
sbb
scas
lea
loop
ds
adc
scas
or
jae
sbb
dec
repnz
mov
rcll
jnp
mov
nop
data16
xlat
lds
push
movsl
or
andb
loop
mov
push
adc
iret
jo
pop
xorb
aam
sub
add
jge
into
push
ljmp
enter
js
sub
mov
push
out
mov
pop
dec
cwtl
jne
sbb
or
and
mov
inc
jle
adcb
adc
jo
adc
add
mov
fwait
jnp
or
push
adc
out
push
or
add
int3
insl
add
test
mov
div
fstps
mov
sub
hlt
popf
shll
data16
js
mov
int3
adc
icebp
clc
das
mov
jnp,pn
mov
push
ret
lret
jp
out
xchg
lock
in
js
out
pop
and
mov
mov
loope
out
sub
mov
insb
adc
and
push
in
mov
jle
sbb
xlat
mov
xchg
mov
add
mov
mov
ljmp
or
das
rcrl
gs
test
push
aam
add
push
js
sti
rcll
iret
in
fcompl
xchg
popf
movsl
push
loop
in
add
repz
dec
sbb
sub
jb
jmp
jecxz
es
lahf
enter
pushf
cmpsl
or
sbb
jge
pop
popa
mov
mov
mov
lret
push
lea
out
sahf
je
jp
jp
pop
gs
das
mov
cld
dec
dec
repz
shl
pop
lods
sbb
adc
inc
loop
addr16
pop
cmpsb
sbb
mov
sbb
mov
cwtl
gs
pop
adc
mov
lahf
or
loope
leave
push
and
es
fisttps
popa
fdivrl
hlt
xlat
rclb
out
test
outsb
fcompl
cmpsl
adc
sbb
out
mov
adc
push
stc
pop
sub
sub
movsl
shrb
pop
mov
push
xor
cld
mov
dec
and
in
pop
in
lcall
movsl
pop
add
pop
outsl
cld
mov
jge
out
cmp
sbb
push
add
sti
mov
dec
mov
icebp
push
stos
sbb
out
insl
and
ss
add
rcll
lret
fwait
pop
jno
xor
mov
sub
pop
or
loopne
pop
jns
xchg
gs
push
sub
imul
je
pop
outsl
cmpsb
fdivrs
cmp
or
inc
roll
xchg
adc
mov
add
cmpsl
addr16
mov
bound
pop
adc
iret
or
inc
push
mov
js
int3
push
xor
or
rcll
imul
sbb
xchg
dec
mov
inc
push
imulb
decl
and
add
js
jg
pushf
lods
push
popa
popa
xchg
arpl
or
ja
pop
jp
scas
dec
inc
je
out
or
es
decl
dec
inc
lea
jmp
mov
jo
pop
inc
or
pop
mov
xor
xchg
test
je
rcl
add
cltd
aad
sub
push
aas
fsubrl
ss
loopne
dec
sbb
inc
mov
mov
mov
leave
add
pop
sti
add
sub
pop
xor
daa
addr16
ffreep
movsb
pop
push
cmp
pop
out
rorb
movsl
stos
call
inc
sbbb
dec
push
aam
cltd
shr
mov
lret
cmp
insl
or
adc
mov
nop
jge
push
mov
push
das
jae
loope
in
nop
adc
dec
sti
xchg
lret
hlt
negb
scas
ret
movsl
cmp
xchg
aaa
jmp
jo
mov
jne
xor
sbb
xor
daa
mov
fisttpl
pop
push
cmpsb
js
sbb
inc
mov
imul
sbbl
insb
mov
cmp
popf
dec
cmpsb
js
into
mov
dec
lds
pop
rcrb
sbb
sub
pop
out
lret
out
lcall
fldt
xor
nop
stc
jge
pop
inc
ja
mov
testl
mov
testl
test
xchg
pop
xchg
repz
add
std
test
adc
mov
test
roll
movb
xchg
pop
repnz
inc
dec
scas
jno
out
roll
das
add
mov
shr
fcoms
out
loop
cmp
push
xchg
scas
add
jne
sbb
loopne
rcr
sbb
subb
das
mov
mov
shrl
jb
mov
lea
or
sub
mov
cmpsb
test
or
dec
push
xor
enter
xor
adc
jns
repz
sbb
fucomp
dec
fnstenv
lds
aaa
mov
jnp
xor
push
mov
xor
fisubrl
test
cmp
jge
popa
push
dec
inc
xlat
mov
sbb
pop
leave
out
inc
fwait
push
test
inc
pop
dec
jo
mov
sbb
pop
data16
pop
lods
inc
jge
out
fldenv
lds
dec
pop
jge
xor
push
push
fistl
add
xor
int
push
push
std
repnz
rcr
sbb
ds
out
mov
jp
adc
and
int3
push
cmp
test
mov
sub
adc
nop
iret
add
xor
repnz
or
ja
in
iret
adc
pop
push
in
mov
aaa
std
jae
gs
les
into
xchg
aad
mov
gs
cli
dec
popf
fsubr
mov
js
xor
es
stos
cmp
mov
pop
jp
or
fcompl
adc
ret
rorl
push
xor
xchg
pusha
mov
gs
jmp
mov
cltd
ret
ffreep
ljmp
aad
stos
addr16
sahf
pop
daa
dec
jmp
fmulp
sbb
icebp
mov
scas
ja
repz
push
push
push
popf
clc
mov
das
lods
xchg
jmp
sbb
rcll
sub
jmp
or
in
add
dec
call
mov
add
mov
dec
jae
stos
arpl
lea
xchg
insl
mov
jmp
popa
nop
out
loop
sub
pop
daa
arpl
subl
inc
mov
dec
orb
or
jns
sub
shll
inc
popa
mov
aad
cmpsl
insl
inc
stos
insb
pop
cwtl
shr
mov
adcl
mov
stc
mov
xor
xor
fstps
aaa
jl
testb
adc
daa
xchg
mov
in
test
fistl
fisttpl
mov
inc
or
daa
mov
jne
push
jge
jl
sbb
jbe
pop
aas
mov
mov
push
stos
xchg
xchg
dec
test
adc
inc
pop
mov
or
test
push
pop
lock
jecxz
adc
inc
mov
jmp
leave
jne
je
xchg
addr16
sub
test
movsl
test
cmpb
ljmp
jne
movb
jl
pop
lds
jmp
push
in
hlt
push
sub
xor
repnz
mov
cmp
scas
cmp
into
cwtl
xchg
inc
and
pop
push
subl
cwtl
in
pop
push
popa
or
sbb
mov
rcrb
aaa
aaa
scas
les
mov
cmp
fsts
xor
fldl
xor
dec
jae
daa
aas
xchg
adc
in
repz
and
jo
push
rol
add
testl
cwtl
in
xor
mov
in
lods
adc
fwait
fwait
mov
js
mov
or
and
push
or
imul
push
popf
mov
std
xchg
pop
pop
fwait
inc
or
enter
and
pop
insb
or
ret
or
lea
sub
out
or
out
outsl
dec
imul
inc
mov
push
mov
iret
pop
pop
push
mov
jl
sbb
lea
push
mov
mov
mov
data16
aam
outsb
pop
sbb
inc
stos
jae
add
loopne
add
mov
jmp
mov
mov
out
inc
inc
pop
sarb
insb
sbb
push
pop
cmp
jmp
xor
call
dec
xor
mov
pop
add
mov
mov
fisubrs
jl
call
push
fdivs
fldl
pop
adc
pop
cmc
or
push
shrb
inc
test
mov
test
inc
jmp
fadds
rcrb
fildl
sub
adc
adc
push
arpl
mov
or
outsb
jge
inc
xchg
cmpsb
and
adc
pop
adc
insb
loop
add
rol
mov
mov
mov
ja
sbb
or
nop
jnp
cwtl
ret
jbe
add
xlat
jno
fwait
or
js
xchg
xchg
filds
lahf
aaa
and
out
gs
xchg
lods
mull
mov
iret
gs
pop
mov
mov
xchg
in
test
or
and
sbb
call
mov
cltd
lods
popa
pop
jl
xchg
out
dec
or
dec
or
lret
inc
insl
push
loope
outsl
sub
movl
sub
jnp
std
or
mov
xor
out
cwtl
sbb
mov
imul
out
mov
mov
cmp
push
and
cmp
push
negl
call
adc
pusha
ret
jb
leave
xchg
cld
fmul
mov
mov
stos
sahf
iret
xchg
daa
ljmp
lods
add
imul
std
pop
pusha
sub
inc
jae
enter
stos
push
xor
pop
add
jo
mov
call
rclb
xchg
mov
pop
js
insl
sbb
sbb
fld1
lods
mov
pop
lret
xchg
push
sbb
aas
sbb
stos
icebp
pop
in
pop
mov
push
add
cmpsl
sbb
inc
and
xor
cmpsl
xor
jno
subb
xor
xchg
cld
rcrl
push
popf
dec
mov
mov
mov
scas
cli
mov
sub
push
je
cmp
sub
mov
ret
leave
jne
shl
ja
fiadds
outsb
xchg
pop
or
sbb
push
cli
repnz
push
sahf
sbbb
mov
inc
roll
xor
shrl
fstps
inc
rorl
xchg
lahf
add
mov
dec
fstl
loop
xor
rorl
orb
sub
push
mov
mov
pop
testb
ficomps
jp
or
ret
push
stos
sub
mov
or
push
inc
and
jb
fbld
push
fxch
arpl
mov
push
lcall
cltd
cmp
inc
sbb
dec
push
bnd
adc
mov
cmp
cmpsl
ja
jne
xor
push
cmp
icebp
daa
xchg
ds
ja
and
aam
test
jns
shll
popa
stc
sbb
ljmp
test
cmpsl
jl
xchg
xchg
add
imulb
jl
xchg
jae
in
mov
rcll
mov
aam
mov
ja
mov
in
dec
sub
out
fcmovb
jae
mov
das
lea
push
push
xchg
clc
inc
outsl
xor
addb
pop
push
adc
pop
fstps
sbb
xor
or
cmp
lret
pop
int
nop
in
push
icebp
mov
adc
dec
rcrb
in
into
test
mov
xor
call
loop
rorb
xchg
test
ficoms
push
push
push
xchg
mov
dec
pop
mov
pop
and
fists
faddp
xor
push
lods
div
pop
loop
inc
cmp
fsubs
dec
pop
lret
inc
push
scas
je
and
popa
mov
std
add
clc
xchg
in
mov
adc
jg
push
hlt
xchg
inc
std
adc
mov
int
push
movl
mov
ret
in
lahf
hlt
mov
ljmp
jno
and
in
out
loop
mov
cs
sbb
dec
sbb
cmp
mov
push
movsb
dec
dec
ds
or
mov
push
rcrl
mov
xchg
iret
outsb
cmpsl
pusha
sub
xchg
push
fcom
jns
imul
xchg
cmp
jb
and
test
sub
xchg
lahf
into
cltd
inc
and
fs
jl
loop
jno
push
insb
inc
inc
mov
mov
jmp
gs
out
ljmp
aad
cmp
adc
sub
xchg
adc
or
mov
das
mov
jae
lcall
insl
into
inc
cltd
pusha
pop
mov
ljmp
mov
pop
sbb
leave
mov
xchg
jg
cmp
add
lahf
inc
add
jmp
adc
mov
xchg
jns
adcl
fidivrl
xor
int3
movsl
add
or
movsl
pop
sbbb
or
loope
pop
push
scas
push
in
sub
or
cmc
mov
xlat
mov
daa
inc
loope
or
stos
shll
in
cmpsb
jb
add
test
push
fwait
cmp
mov
dec
or
nop
dec
nop
ret
add
ja
jns
arpl
cmp
stos
adc
pcmpgtw
adc
adcl
test
jb
and
mov
jmp
fwait
cmp
xchg
push
inc
stos
sub
in
cltd
push
mov
jmp
out
xor
mov
jmp
ja
es
fcmovnbe
mov
pusha
push
sbb
movsl
cs
in
mov
das
add
push
add
add
mov
clc
jecxz
in
bound
mov
scas
cld
mov
mov
xchg
rolb
aam
lea
xlat
aad
mov
lock
icebp
jo
xor
adc
xlat
xchg
pop
lock
jmp
jp
and
mov
adc
sub
fsubs
inc
add
dec
or
adc
dec
fisubrl
xor
or
cltd
adc
add
data16
push
call
xchg
popa
mov
mov
in
scas
cmpsl
push
pop
push
icebp
inc
ss
cmp
les
shrl
call
lds
out
out
in
imul
ficoms
mov
push
pop
mov
movsl
cmpsb
jae
and
test
mov
push
mov
fs
test
xor
stos
in
mov
outsl
fwait
ja
xorl
mov
pop
mov
mov
xchg
das
lea
es
xor
xchg
inc
adc
int
movsl
push
cmp
mov
clc
xor
mov
cmp
add
cmp
cmp
outsb
cltd
pop
lret
enter
je
push
sbbl
test
xor
adc
adc
inc
popa
cmc
jp
das
adc
push
lods
jb
and
push
popa
pushf
and
jae
lea
pop
jne
push
sub
mov
js
pop
cmp
orb
sub
popf
hlt
ss
ja
pop
xlat
jo
adc
mov
inc
in
xchg
ficomps
or
mov
lock
sub
bnd
lahf
xchg
mov
arpl
popf
mov
das
rclb
mov
sub
aad
fs
jne
mov
sbb
out
xchg
bound
sub
cmp
push
cltd
bound
xchg
stc
dec
scas
test
fmull
cs
sarl
stos
sti
pop
add
push
cwtl
push
jns
mov
js
gs
into
push
das
testb
aaa
repnz
mov
cmp
out
xlat
pop
or
xor
lds
cld
mov
xor
lock
arpl
push
sub
test
push
pop
clc
in
push
jmp
nop
pop
mov
into
dec
jno
or
into
xchg
jns
lock
xor
or
sub
sbb
xchg
mov
cltd
xchg
int3
adc
aad
pop
mov
fwait
ror
push
mov
fs
push
icebp
in
mov
sti
dec
scas
pmullw
pop
pop
dec
shlb
adc
jge
xor
lods
stc
lods
bound
mov
push
push
adc
pop
cld
stc
pushf
add
repz
push
pusha
pusha
pop
pop
dec
xchg
jae
cli
xor
jnp
fdivrs
aam
push
push
jb
test
in
hlt
aaa
enter
mov
addr16
pop
xor
mov
ret
clc
or
mov
mov
scas
mov
scas
push
jno
xchg
dec
clc
adc
and
jno
inc
xchg
sub
jle
out
push
lock
mov
adc
aam
inc
js
lds
mov
pop
test
out
addr16
mov
inc
cmp
cmpsl
mov
aad
inc
adc
dec
xchg
cmpsb
adc
or
or
pop
fldl
pop
dec
add
cmp
dec
push
jmp
pop
adc
adc
pop
push
xor
fisttpl
fnsave
insl
aaa
int3
movsl
or
add
call
lret
sbb
pop
mov
xorb
sahf
pusha
std
sbb
and
fstl
cmpb
lahf
xchg
mov
xor
movhps
out
jmp
shr
push
jno
add
mov
sub
push
sti
mov
inc
adc
xchg
xchg
add
xlat
pop
sbb
call
mov
lahf
inc
mov
dec
add
fbld
xlat
sbb
sbb
pop
dec
shll
push
mov
push
insl
cwtl
sub
imul
enter
jns
xchg
aaa
pop
push
sahf
div
movsl
sbb
sbb
pop
push
es
cmp
jg
aaa
iret
sarl
popa
outsb
adc
ficompl
pusha
lea
out
loop
lahf
xchg
out
es
push
bound
cld
add
shlb
movsb
pop
push
in
or
jnp
xchg
clc
loopne
sub
enter
pop
insb
les
add
sub
add
jmp
fsubrl
sub
aam
sbb
test
shll
mov
and
jmp
mov
jle
pop
out
mov
jp
idivb
mov
mov
xchg
dec
mov
lods
or
jp
cwtl
test
adc
and
cmp
add
mov
and
dec
mov
inc
dec
decl
push
rcll
mov
pause
bound
xor
sti
mov
iret
jns
mov
movsl
notl
movsb
pushf
outsb
clc
lret
scas
add
bound
fistl
sub
fmul
addr16
andb
pop
cmp
nop
stc
in
mov
pop
or
jmp
and
push
out
adc
or
sbb
std
aad
jg
ljmp
cmp
and
lds
dec
rcll
and
sbb
cmp
xchg
xchg
lret
loopne
das
dec
in
pusha
lods
jno
and
ficompl
movl
sbb
jne
jge
stos
rcrl
in
mov
pushw
rcrb
mov
pop
pusha
adc
test
lods
dec
lcall
loope
mov
cmpb
aad
push
test
popl
xor
loopne
push
cmc
loope
cmpsl
xor
or
and
daa
fstl
clc
bound
and
out
adc
mov
add
das
sub
dec
cmpsl
mov
mov
cmpsl
pusha
cmpsb
aas
push
in
pop
push
or
adc
fdivs
sahf
jge
lods
push
arpl
fcmovnb
fidivrs
sub
pop
stos
sbb
icebp
push
push
cld
inc
xchg
in
xchg
mov
or
xchg
nop
mov
pop
mov
fs
fsubrl
outsb
stos
cmp
mov
into
mov
and
in
mov
jo
pop
js,pn
ror
jl
and
mov
add
out
repz
je
stos
pmovmskb
push
outsb
xor
imul
add
fldt
mov
outsb
ja
movsl
cmp
hlt
insl
mov
cmp
and
popa
and
js
cs
xchg
dec
mov
jae
out
dec
inc
jle
jnp
in
ret
lods
imul
fsub
jle
loope
or
mov
add
jg
xchg
push
jae
jge
fldcw
mov
or
add
push
lods
sub
aad
adc
lahf
mov
push
mov
mov
mov
in
mov
cmp
es
and
push
jnp
jecxz
pop
loope
push
arpl
dec
sbb
loopne
mov
ds
fdivr
das
into
sbb
in
pop
stos
mov
jns
lds
mov
aas
pushf
jns
stc
cli
js
daa
xchg
roll
jmp
mov
push
rclb
cmp
iret
repz
into
mov
ja
add
pop
push
mov
movsb
dec
xor
sti
add
jo
mov
fwait
xchg
xorl
mov
loopne
imul
ljmp
adc
pop
jo
inc
mov
inc
aam
jl
mov
popf
xchg
xor
mov
mov
or
adc
cltd
sbb
push
jecxz
divl
xchg
push
sub
xchg
push
add
add
and
cmp
pop
fwait
pop
aam
rolb
adc
jmp
lret
adc
outsb
call
sar
sub
icebp
fmul
xor
push
aaa
pop
sub
loop
andl
lahf
movsl
sbb
mov
mov
cmp
lret
into
icebp
and
movsb
sub
mov
clc
sarl
pusha
mov
insb
pop
sbb
add
imul
es
imul
jmp
mov
pop
jl
add
fdivrs
jns
cmpsb
xor
aam
adc
lods
jp
jb
iret
ret
test
stos
mov
push
cmpsl
lcall
mov
or
add
add
pop
mov
add
push
aam
cwtl
fwait
inc
clc
shl
xorb
push
push
and
sbb
lahf
fwait
pop
and
stc
fbld
inc
dec
les
mov
dec
push
mov
sbb
imul
inc
sub
clc
adc
mov
lods
or
mov
mov
test
mov
inc
xchg
in
int
pushf
call
lcall
ljmp
sahf
out
push
pop
cli
sub
mov
add
fbld
mov
cmp
movsl
loope
pop
pop
push
dec
mov
es
jno
outsl
sbb
sub
add
sbb
aam
out
or
ror
pop
lea
cli
fcmovnu
mov
pop
or
lock
bound
cmp
les
inc
pop
nop
jmp
mov
xor
lret
dec
mov
fdivrp
mov
jecxz
sbb
scas
icebp
popf
sahf
cmp
cmp
and
outsl
aad
cmpsb
mov
sbb
push
mov
jno
jmp
imul
test
pushf
mov
shlb
movsb
xor
insl
cmp
cmp
push
pop
repz
mov
dec
lcall
lcall
insb
insl
ret
les
sbbl
mov
sub
adc
sbb
sahf
jb
out
mov
clc
lret
jg
lea
mov
or
sbb
shrl
mov
scas
ds
inc
es
inc
fcmovb
push
xor
mov
sbb
jns
and
jecxz
dec
sub
pop
mov
out
inc
push
sub
or
or
jnp
sub
and
sahf
dec
dec
push
clc
inc
ljmp
divb
out
js
mov
or
inc
dec
test
jb
mov
adc
inc
sub
hlt
dec
push
sti
xor
jl
mov
and
or
outsl
ljmp
xlat
xchg
clc
sbb
cmp
daa
sub
mov
cmpsb
or
sub
xchg
pushf
dec
aam
fs
int
flds
fstp
push
lods
push
icebp
fnstsw
shll
in
cld
cmp
mov
in
xchg
js
dec
mov
lods
fildll
and
sti
sub
pop
push
mov
dec
int
stos
jmp
push
inc
push
jnp
sbb
mov
loopne
cmp
dec
dec
cmp
pop
js
into
in
pop
outsb
cs
jo
popf
cmc
add
jmp
int3
out
cltd
pushf
push
sbb
push
insl
adc
or
xchg
scas
dec
lds
addl
or
mov
dec
jg
cwtl
les
cwtl
mov
int
loopne
cld
fldl
sub
xor
aam
push
iret
xor
mov
inc
fwait
jp
adc
jecxz
xlat
inc
adc
sub
adcb
shlb
sbb
inc
adc
xchg
pop
loope
dec
int3
xchg
sbb
inc
pop
xor
xor
dec
sahf
testl
xchg
loop
mov
iret
pop
lea
adc
xor
mov
fdivs
lods
add
jge
mov
setp
or
rorl
movsl
mov
cmp
daa
mov
test
push
sub
mov
lea
dec
xor
jg
gs
fsubr
andb
outsl
cmp
aad
cmp
push
adc
iret
push
popf
inc
outsb
cmp
cmp
xchg
add
jecxz
das
lods
xchg
repz
mov
or
mov
bound
gs
scas
xchg
lds
test
xor
push
xchg
cmp
push
dec
testb
cs
aas
sbb
mov
sub
cs
adc
push
aas
jae
das
iret
sub
imul
sub
and
mov
push
and
adc
xchg
inc
xor
add
outsb
bound
push
jmp
sbb
dec
iret
aam
push
arpl
xlat
scas
sbb
insb
adcl
fstpt
push
fwait
push
scas
out
shr
rclb
daa
inc
cltd
addb
aam
iret
lcall
and
arpl
jl
inc
cli
adc
out
jmp
cmp
and
dec
pop
arpl
fucomi
jge
in
nop
adc
push
xchg
xchg
add
je
enter
fisubrs
push
fildl
imul
adc
pusha
divb
jecxz
push
mov
ljmp
adc
jnp
imul
or
mov
jo,pt
test
adc
pop
stc
lret
sub
lcall
push
stos
cmc
lea
lea
int3
imul
sarl
or
or
cmp
add
sbb
lea
jecxz
stc
inc
mov
push
out
push
jae
jb
in
pop
sub
xchg
outsl
int3
out
pop
ret
stos
mov
test
dec
or
test
out
hlt
cltd
aas
jne
insb
push
sub
stos
sub
or
lahf
mov
jno
fildl
mov
loopne
mov
add
xchg
in
jno
xor
cmp
sbb
jl
cld
hlt
sbb
imul
test
aam
and
jl
jbe
popl
cltd
sub
add
hlt
int3
hlt
leave
test
sbb
mov
int3
es
cld
test
and
cli
aas
xor
xchg
and
gs
neg
mov
adc
orb
jns
sub
inc
inc
pop
lods
mov
cmp
adc
ret
adc
and
mov
ret
push
out
fstl
lds
scas
rcll
in
adc
jecxz
sahf
sahf
in
pop
push
mov
jecxz
dec
scas
dec
fwait
lret
repz
adc
pop
add
cmp
imul
or
xchg
xchg
adc
mov
cmp
ret
sbb
leave
add
dec
out
test
pop
sub
and
lret
cld
addr16
and
jmp
mov
popf
dec
cs
adc
jp,pt
fisttpll
jmp
mov
jbe
iret
xlat
xchg
stos
inc
in
loop
lahf
popa
mov
fldl
dec
std
fninit
and
ror
sub
lcall
adc
les
mov
xor
int3
movsb
lods
daa
fwait
lcall
push
clc
xchg
mov
or
sarb
lcall
aam
xor
cmp
imul
jae
stos
mov
in
or
fsincos
mov
in
test
ja
push
sub
jnp
pushf
mov
pop
and
dec
outsb
or
xchg
adc
xor
dec
or
sub
cmp
or
outsl
cld
cmp
int
shll
sbb
fstps
mov
inc
push
jbe
jl
sarl
stc
add
aas
notb
leave
xorb
ror
loop
outsb
jbe
out
lahf
lods
out
aam
cli
jmp
dec
push
xor
incb
push
push
jb
out
sarb
dec
dec
mov
mov
aad
ret
jp
shlb
or
out
push
xchg
nop
mov
inc
stc
jo
xchg
lods
or
leave
mov
sub
sub
xor
xchg
pop
adcl
shll
and
fildll
pop
test
or
out
jnp
and
jmp
push
mov
nop
add
sub
add
fisttpl
clc
and
test
push
cltd
rcrl
mov
dec
mov
cmpsl
fcoml
ljmp
jl
add
jp
cmp
push
stos
outsl
mov
mov
inc
int3
enter
dec
cmp
sbb
ret
mov
int
mov
les
add
in
insl
lock
fildl
pop
push
pushf
and
push
pop
push
or
ss
popf
imul
xchg
sbb
or
or
xchg
xor
aad
mov
aam
cli
call
adc
adcl
repz
pushf
add
cmp
incl
xchg
cmp
xchg
ret
sub
xchg
pop
adc
mov
loope
inc
clc
cmc
sub
jo
jo
out
ljmp
sahf
mov
adc
in
rcrl
sti
mov
mov
fstl
mov
mov
and
inc
fwait
mov
jge
test
arpl
push
in
dec
pop
adc
dec
cmp
in
test
outsb
sbb
xor
push
imull
ljmp
insl
test
push
div
insl
out
jnp
rclb
hlt
pop
and
mov
iret
jb
and
push
pushl
call
mov
xchg
adc
das
and
push
test
sti
pop
jge
cwtl
lds
add
cmp
rolb
pop
fs
in
push
and
mov
xor
popf
repnz
lret
clc
cmp
and
cli
inc
orb
xor
sahf
pop
cmp
aas
inc
and
icebp
jns
test
test
in
xchg
adc
adc
scas
mov
push
mov
stos
pushl
fisubl
mov
sysexit
mov
rorb
fisubrl
loope
hlt
fbstp
xchg
cltd
xor
dec
mov
mov
out
ljmp
fmul
fdivp
cmp
inc
aas
aas
cmp
js
mov
pop
inc
inc
scas
insl
addr16
sbb
add
cmp
add
inc
sbb
leave
jns
fimuls
pop
fistps
enter
sbb
xchg
xchg
mov
mov
lcall
repnz
add
aas
ror
test
stos
or
push
stos
icebp
cmp
add
mov
xchg
out
int3
or
sbb
sbb
cmp
bound
add
je
push
mov
sub
sbb
pop
aam
add
negb
rclb
pop
mov
mov
cmc
sbb
dec
mov
lea
outsb
add
jo
in
ficomps
xor
out
addl
mov
fistpl
scas
addr16
nop
jb
xor
imul
ret
ljmp
add
pop
xchg
pop
xchg
adc
popa
add
mov
int3
test
shl
out
stos
int3
mov
pop
xor
shrb
stos
std
mov
insb
stos
popf
lcall
jns
pop
pushf
push
lahf
repnz
lock
mov
sub
xor
push
jecxz
add
out
mov
flds
iret
jecxz
movsb
popa
and
rorb
or
mov
push
xor
xor
rorb
jmp
loope
push
popa
aad
not
jo
js
lahf
cld
lahf
push
fdiv
repnz
in
cmc
insb
cwtl
or
pop
pop
test
addr16
jp
fnstenv
das
fsts
pop
add
hlt
cld
les
stos
scas
mov
ret
stos
dec
or
jb
in
sti
rcr
adc
lret
cmpsl
fistps
jns
xor
push
scas
scas
jns
scas
fistpl
ljmp
sbb
and
xor
dec
ds
sub
mov
mov
xor
pop
insl
cli
dec
dec
movsl
and
out
push
dec
or
loop
and
test
gs
cwtl
mov
xlat
idivb
enter
or
pop
lcall
mov
or
loopne
adc
scas
mov
je
jle
and
ret
loop
pop
icebp
add
in
mov
jp
outsl
imul
nop
outsl
pop
repnz
xchg
xchg
add
dec
cmpsb
iret
xchg
xor
sbb
cmpb
or
adc
loopne
fcompl
int
jno
jbe
jecxz
mov
int3
inc
int3
jne
fwait
pop
sbb
rcll
push
icebp
sbbl
fiadds
xchg
xor
sub
or
dec
adc
push
mov
loop
push
sbb
xor
adc
pop
test
sbb
fisubrl
loop
in
stos
push
and
ja
cmp
cmp
sub
aaa
stc
cmp
add
xchg
cli
mov
push
stc
lea
out
adc
fistps
repz
repz
fcoms
xchg
pop
data16
lret
pop
testl
xchg
imul
insb
cmp
mov
lea
inc
js
test
xchg
hlt
and
xchg
call
loop
mov
rorl
mov
pop
repnz
lahf
pop
jae
mov
mov
xchg
adc
or
pop
ror
hlt
xchg
ss
xchg
and
fists
pop
and
push
es
dec
push
push
mov
mov
lahf
fsubrp
xor
mov
push
rorl
add
inc
scas
scas
push
sub
push
test
lods
cli
cli
cwtl
xor
divb
sbb
mov
sti
int3
push
addr16
jg
add
lock
push
mov
out
enter
repz
xorb
pop
sbb
stos
dec
in
push
xor
mov
pop
push
gs
mov
mov
repz
xchg
pop
sti
in
xlat
leave
les
jle
mulb
add
adc
leave
std
cld
fwait
push
test
cwtl
sub
push
mov
mov
cmp
cli
or
push
jp
out
and
imull
push
or
xor
mov
sub
cmp
push
nop
scas
js
in
cmp
pop
icebp
imul
shrb
or
sub
add
mov
aas
mov
inc
or
out
adc
dec
aaa
dec
fists
imul
lods
out
cmp
xchg
call
loope
mov
sbb
not
push
lods
leave
test
pop
sarb
mov
dec
mov
loop
sbb
les
or
or
sbb
in
imul
push
pop
dec
lods
mov
xchg
add
pop
mov
push
xlat
inc
lea
pop
fistpll
pop
adc
mov
jno
daa
mov
mov
xor
rcl
hlt
inc
dec
push
mov
pop
add
inc
movsb
data16
jo
in
xorb
nop
mov
sbb
or
mov
popf
movsl
cmpsl
push
add
enter
lods
dec
lds
xchg
std
push
add
push
and
inc
xchg
fwait
clc
insl
cmpsl
sub
cs
out
aaa
dec
pop
stos
adc
add
add
cmp
inc
cmp
jge
scas
mov
dec
divl
jns
scas
popf
pushf
cwtl
mov
mov
ljmp
int3
leave
das
cmpl
sbb
movsl
mov
mov
aaa
call
sub
mov
mov
mov
push
pusha
clc
and
scas
xchg
sub
mov
add
or
pop
mov
xor
enter
pop
add
cmp
push
sub
push
inc
cmp
or
call
xor
or
gs
jnp
xchg
mov
imul
or
inc
insb
loop
jmp
xor
pop
cld
sbb
sbbb
dec
roll
xor
sbbl
subl
adc
push
mov
pusha
push
lods
adc
repz
call
sbb
mulb
jno
sbb
pop
cmpsb
aas
pop
lret
jmp
imul
mov
pusha
dec
mov
mov
mov
mov
lds
ficoms
cmp
sub
out
out
sbb
cmpsl
jae
cmp
xorl
jmp
dec
pop
or
jns
lds
pusha
jecxz
andb
mov
adc
adc
test
or
push
inc
xchg
rorw
mov
mov
mov
jbe
ret
dec
ret
push
mov
pop
fxch
cmp
push
jp
sub
lahf
sbb
sbb
inc
fsts
outsl
lahf
ds
push
call
fs
mov
dec
xchg
push
ljmp
adc
lcall
orl
bnd
sub
sbb
mov
dec
jle
lret
pop
jnp
jp
pop
mov
orl
mov
jne
into
popa
dec
xor
xchg
cltd
or
imull
and
sahf
outsb
fidivs
das
test
bound
push
sub
pop
cmp
mov
jo
sahf
dec
loopne
cmp
sub
add
xchg
fmull
cmc
add
inc
jb
popf
clc
out
and
ss
addr16
lds
or
dec
cwtl
mov
sbb
jbe
lret
push
pop
rcr
lea
or
xor
push
in
sub
cmpsl
push
test
lods
es
lds
xor
and
loop
hlt
pushf
cmp
cli
sub
jne
les
ret
adc
sbb
iret
cli
dec
les
xor
cmp
or
sub
leave
adc
xchg
sbb
cmc
hlt
test
lods
leave
sarl
pop
push
das
inc
daa
sar
adc
mov
cld
cmc
repnz
dec
sbb
inc
loopne
adcb
arpl
loopne
push
movsl
test
mov
js
or
adcb
fstpl
sbb
xor
mov
in
mov
push
or
testb
outsl
mov
inc
in
or
idiv
lea
jmp
or
pop
mov
fildl
fwait
cmp
mov
xchg
inc
out
xor
mov
xor
pop
mov
add
xchg
cmp
or
sti
xorb
jg
dec
popl
lods
mov
or
sub
lcall
xlat
repz
ja
pop
mov
enter
dec
xchg
scas
call
jge
cwtl
aad
fnstenvs
lret
outsl
mov
jno
jne
jno
js
jmp
pop
jns
adc
in
test
dec
clc
pusha
inc
arpl
shl
lret
add
inc
popf
sbb
jne
sbb
jae
loop
mov
push
xor
fs
mov
xchg
bound
sbb
mov
fmull
cmp
testb
cmp
xlat
insb
frstor
aaa
lds
ja
in
pushf
dec
mov
call
stos
movsb
mov
mov
pop
mov
pop
jo
xlat
pop
push
clc
imul
mov
dec
sub
adc
add
out
xchg
mov
xlat
cmp
push
outsb
push
lods
lahf
sahf
lds
aaa
mov
push
icebp
aad
jns
sub
test
xor
cmpsb
and
push
xchg
jno
shlb
leave
or
jns
lahf
xor
mov
inc
sbb
jne
mov
inc
xor
ja
lret
pop
and
mov
lock
ds
jne
fwait
addb
xchg
dec
adc
xor
push
inc
and
adc
push
adc
adc
iret
sbb
out
mov
xor
adc
jecxz
jle
aad
insl
push
sarb
xchg
xchg
cmp
dec
outsl
daa
sub
pop
test
scas
fcmovnbe
adc
adc
jb
pushf
sarl
jns
push
test
push
rolb
mov
ds
outsb
aad
cmc
inc
jae
in
cwtl
xchg
jnp
stos
and
xlat
fcmovnu
out
lock
stos
push
dec
pop
pop
jecxz
movsl
and
cmp
mov
test
inc
mov
cmp
or
loopne
fisubs
idivl
jne
imul
jbe
flds
sub
int3
cmpsb
cwtl
push
sub
mov
sahf
std
cltd
fiaddl
mov
call
xchg
xchg
sbb
mov
cmp
sub
mov
cmp
sub
push
imul
xor
jmp
push
test
push
dec
roll
push
arpl
xchg
sti
mov
imul
fsubrs
adc
outsl
pop
cmp
cmc
push
mov
xchg
loop
cmc
cld
repz
mov
jl
fstl
mov
lock
pop
jo
mov
scas
out
out
clc
adc
cld
adc
sbb
popa
xchg
push
hlt
icebp
sbb
mov
mov
in
push
sahf
leave
inc
fldt
sub
add
aad
xchg
test
loop
mov
fnstenv
jnp
xor
cmp
jnp
push
std
enter
aam
test
lret
pop
pushf
jge
lret
dec
dec
push
push
cmp
insl
push
xchg
dec
mov
mov
mov
sbb
icebp
fistl
mov
jmp
sub
popf
pop
int
mov
cltd
dec
xor
push
xchg
xchg
mov
fnstsw
adc
int3
or
sbb
add
in
outsl
sbbl
mov
sub
stc
jge
mov
xchg
into
mov
mov
cmp
pop
pop
sub
sbb
cmpsl
xor
dec
adc
sub
flds
mov
xchg
or
mov
movsl
sahf
test
test
jmp
aam
dec
jecxz
fnsave
sub
or
ja
or
pop
or
add
in
inc
loopne
rcrb
xchg
fs
nop
push
or
repz
in
xchg
aaa
xchg
dec
sbb
sbb
bnd
pop
mov
js
test
sbb
les
js
xchg
test
fildl
xchg
xchg
divl
sbb
mov
movsl
cli
repz
rcr
lsl
push
xor
in
sbb
cltd
dec
add
out
ret
and
repz
pop
sbb
xchg
popa
adc
push
cmp
icebp
ss
dec
adc
arpl
pop
xchg
test
dec
call
inc
mov
inc
add
add
aad
mov
decl
push
pusha
xchg
jmp
inc
in
movsb
xorb
rcrb
nop
jmp
mov
lcall
sahf
pop
scas
push
jbe
jl
pushf
xor
cli
mov
cmpb
scas
sub
aad
sub
adc
stos
test
int
je
xor
sub
cmp
and
xorl
shlb
push
and
pop
mov
ljmp
jp
cmc
in
xchg
data16
je
mov
sub
inc
shll
mov
arpl
mov
pushf
and
call
jmp
lret
pop
xchg
addr16
adc
or
rcll
roll
in
rclb
addl
rcl
gs
aad
es
repnz
aad
inc
lret
push
cmpsb
sub
testb
imul
imul
jno
inc
pop
push
mov
daa
addr16
insb
cmpsl
fsubl
inc
push
xor
fsubs
xlat
push
mov
and
jp
pop
push
cltd
xchg
push
jmp
add
ljmp
outsb
pop
and
imul
stos
mov
jo
ficompl
add
in
mov
add
sbb
or
cmp
pop
mov
aaa
or
push
mov
inc
sub
or
test
pop
pusha
adcb
push
cmp
cmp
mov
cld
pop
fiadds
xchg
insl
out
push
mov
push
and
jo
aad
int3
mov
ss
in
pop
scas
int3
mov
cld
push
cmp
iret
mov
mov
andl
pop
adc
xlat
or
push
adc
pop
or
out
jg
lock
bnd
pop
fstps
mov
in
jbe
jle
dec
shll
mov
shrb
add
adc
mov
mov
pusha
lcall
lret
pop
out
mov
push
lret
ljmp
jb
int3
mov
sbbb
inc
mov
repz
mov
lcall
nop
cmp
xchg
xchg
movb
fadds
fsub
push
jo
cmp
jbe,pn
jl
pusha
mov
mov
mov
les
xor
stc
xor
mov
pop
cmp
push
addl
out
push
rcll
add
adc
in
outsb
jnp
dec
fimull
xor
push
shr
pop
cmp
je
in
int3
pop
test
hlt
movsb
arpl
xor
out
test
data16
xchg
ds
pop
fwait
outsl
loope
cmpsb
push
inc
lods
test
mov
mov
push
jbe
push
jbe
popa
mov
push
sbb
fisubrl
jg
add
pop
outsl
outsb
push
xor
adcb
and
into
mov
fildll
ljmp
js
outsl
mov
je
cmp
mov
arpl
repz
mov
sahf
fisubrs
fisttpl
cmc
leave
arpl
sahf
clc
xlat
fwait
test
loope
mov
mov
stos
pop
ficoml
ja
cmp
add
jmp
faddp
dec
and
cmp
jns
faddl
mov
push
and
mov
or
leave
lods
fimull
shll
mov
or
jp
inc
dec
cmp
test
test
call
popa
fcoms
cltd
fwait
mov
dec
es
popf
pop
push
cmp
pusha
loop
aam
test
lods
stos
add
fwait
adc
imulb
push
adc
jo
andl
nop
and
jmp
mov
pusha
inc
iret
lcall
or
je
lahf
jb
in
pop
mov
or
cmp
mov
fistps
push
dec
call
in
adcb
add
pop
addr16
popa
push
add
and
std
int3
cmp
leave
and
mov
cmc
fwait
xchg
dec
lahf
mov
arpl
aaa
leave
push
lcall
mov
mov
inc
imul
or
mov
or
and
loop
scas
fwait
stos
lods
sbb
or
fadds
leave
pop
aaa
cmp
sti
lcall
fcompl
cmpl
lret
mov
insb
adc
adc
push
into
or
push
dec
in
mov
scas
adc
cmp
pop
xchg
jnp
jae
decb
aad
mov
xchg
adc
dec
add
dec
lea
pop
mov
dec
dec
dec
loope
lret
cmp
out
cmpsb
in
lds
xor
lahf
lret
addr16
mov
pusha
jno
cwtl
cli
aad
push
lds
decb
mov
and
add
in
sbb
in
test
outsb
addr16
ja
add
push
test
sbb
mov
pop
push
sbb
lods
dec
or
mov
add
mov
push
push
or
arpl
faddp
xor
pop
mov
sbb
fstl
sub
sahf
xlat
sbb
iret
push
xchg
or
pop
xlat
or
push
out
je
xchg
sbb
and
mov
adc
mov
addb
fstps
cld
or
in
int
inc
out
ss
fimuls
insl
sbb
imul
rcrb
mov
fscale
xchg
clc
push
inc
lret
push
jae
mov
mov
test
xchg
gs
mov
and
pop
add
fld
mov
pop
mov
ret
adc
add
ds
push
test
jl
in
xchg
test
outsb
jg
stc
sbb
popa
stc
and
cmpsl
xor
fcmovne
dec
adc
das
je
popl
mov
loopne
test
es
loop
push
xchg
cmpsb
ret
bound
add
sahf
add
or
sbb
es
fwait
pop
mov
gs
mov
enter
insl
add
fnstcw
sbb
mov
insb
lret
lods
imul
push
dec
xor
into
jno
divl
jmp
scas
xchg
call
dec
xchg
out
mov
xchg
and
sbb
hlt
xchg
xchg
dec
mov
push
push
mov
push
cs
dec
dec
cmpb
push
push
insb
xchg
jbe
and
mov
push
negl
xchg
and
and
stos
pop
pop
jae
and
outsl
inc
xor
push
pop
cmpsl
jae
adc
mov
xor
push
push
cwtl
xlat
stos
es
jno
mov
xchg
jne
inc
adc
add
arpl
cld
sbbb
je
rol
pop
push
cmp
pop
out
lcall
pop
cmp
sub
xchg
stos
clc
push
add
pop
mov
adc
outsl
test
pop
in
push
or
or
push
push
pop
xor
in
in
sbb
rolb
jno
ds
and
dec
testb
inc
mov
fsubrs
out
mov
mov
pop
lds
fmuls
test
icebp
into
test
mov
ret
popf
sti
mov
xchg
dec
jb
and
mov
leave
flds
shll
insb
xchg
push
mov
rolb
pop
lods
mov
pop
or
jbe
rol
dec
sti
adc
stc
arpl
jnp
xchg
push
cld
mov
or
inc
lret
dec
jno
sub
mov
loopne
jecxz
jmp
dec
push
call
enter
fs
xor
mov
fstpt
sbb
int
rolb
out
out
insb
mov
push
mov
pop
mov
add
fcmovbe
mov
inc
cmp
push
movsl
jl
ret
popf
popa
aaa
cli
pop
sub
cld
lods
test
sub
jle
cmpsl
mov
fdivl
scas
adc
ret
dec
daa
and
inc
adc
or
mov
das
lahf
imul
xlat
ss
ret
xchg
push
jne
dec
inc
sarb
lahf
pop
push
stos
push
adc
fnsave
and
cwtl
cmp
cmp
xchg
bound
cmp
int
imul
mov
add
push
faddp
repz
and
lret
out
fs
xor
out
lcall
add
addl
mov
pop
jb
addr16
pop
pop
jae
or
or
fsubrl
roll
pushf
mov
scas
cmp
mov
sub
mov
cld
addb
mov
mov
fldenv
xchg
xchg
inc
cmp
mov
cli
outsl
or
mov
jo
push
in
cwtl
inc
ds
call
inc
fildll
leave
fcoml
sbb
inc
out
or
ds
sbbl
imul
mov
data16
mov
jg
xchg
mov
jl
inc
lds
push
sub
insb
mov
sbb
mov
cmp
cmp
out
mov
jle
addr16
mov
xlat
jbe
fbld
mov
jmp
enter
fwait
and
lret
je
pop
imul
mov
outsb
ljmp
jns
inc
add
xchg
inc
test
ret
lea
pop
scas
jnp
cmp
xchg
insb
adc
mov
jmp
fbstp
push
dec
mov
shlb
mov
cltd
adc
mov
xchg
sti
in
and
pop
jae
lcall
cmc
rolb
sbb
out
mov
xor
int3
jge
push
adc
sar
aad
cld
jno
inc
xor
inc
mov
mov
subb
lcall
sbb
xlat
dec
xor
sbb
mov
inc
mov
sbb
pop
nop
or
push
inc
andl
sahf
or
xor
pop
pop
dec
movsl
mov
mov
packuswb
sarb
xchg
push
inc
ja
inc
cmc
mov
or
jecxz,pt
or
roll
xchg
push
pop
icebp
ds
movsl
jns
xor
into
mov
pushf
imul
pop
fsubs
mov
aaa
or
jo
test
mov
inc
in
mull
stos
xor
sub
jb
fisttps
mov
mov
jae
std
mov
mov
fcomi
les
iret
xlat
cmp
adc
sbb
dec
loope
cmpsl
xor
lods
cld
out
fbld
xor
in
sbb
int3
pop
xor
popl
movsb
stc
dec
cmp
jne
dec
popa
inc
sub
mov
adc
add
jnp
pop
pop
cmp
mov
in
mov
pop
in
inc
out
inc
jns
push
cli
or
jl
inc
and
pop
cltd
outsb
shll
rol
repnz
inc
das
and
int
addr16
inc
and
call
test
jg
and
xor
sub
mov
pusha
push
xor
fcomi
movsl
out
arpl
pusha
push
mov
loopne
in
or
lret
mov
insl
cmp
dec
xchg
les
clc
daa
cmp
fmulp
xlat
mov
mov
mov
adc
into
jmp
push
sbb
fwait
mov
mov
adc
mov
dec
sub
dec
dec
ss
pop
jge
out
jbe
fsub
mov
leave
pop
cmp
imul
mov
inc
pop
add
hlt
add
cmp
loop
int3
push
xor
imul
rclb
loopne
daa
cmp
or
lea
lret
sub
scas
es
fsubrl
pop
adc
mov
xlat
outsb
pop
cs
pop
imul
xchg
js
and
fst
adc
jnp
push
push
pop
add
cmp
mov
loope
cmp
sar
dec
repnz
mov
popl
adc
xor
sub
add
push
loop
rcrl
jb
jecxz,pt
push
xchg
push
aam
sbbl
lods
xlat
popa
or
es
mov
adc
jg
jno
lea
popf
cmpsb
sub
cltd
jnp
rol
daa
mov
stc
popf
mov
out
daa
dec
pop
fisttpll
xchg
icebp
push
jns
leave
dec
or
push
inc
push
stc
or
adc
lods
mov
rorl
pop
scas
gs
inc
xchg
in
ss
jbe
gs
mov
and
out
pop
sar
es
push
lcall
adc
test
xchg
jmp
xor
jae
shlb
sub
xor
pop
mov
jno
js
cmpb
fimuls
push
xor
out
aam
jns
insb
scas
push
out
adc
adc
rorb
adc
lods
addr16
roll
mov
les
adc
insl
pop
pop
push
rorl
pusha
and
in
mov
adc
cmp
movsl
push
std
push
xchg
addb
lret
mov
xchg
mov
rcll
pusha
enter
sti
push
lcall
inc
mov
stos
xchg
int3
test
xchg
in
mov
orl
into
test
ror
cmp
js
push
movsb
test
stc
in
fnstenv
push
mov
pushf
lea
lcall
js
push
or
punpcklbw
jbe
daa
push
daa
dec
adc
icebp
add
xor
popf
sub
sub
stos
cld
mov
xchg
xchg
cmp
sub
push
ljmp
push
mov
mov
fistps
pop
xor
loope
dec
dec
inc
pushl
push
dec
mov
les
fldcw
adc
stc
xor
cld
mov
xchg
or
sub
in
mov
sti
shlb
in
addr16
dec
jb
popw
outsb
and
pop
mov
pop
xchg
stos
fldl
lock
aad
rcr
push
pop
scas
sbb
pop
test
scas
sub
fsubrs
loope
sarl
and
insb
mov
mov
dec
adc
mov
repnz
fisubs
push
insb
dec
mov
subb
pop
cld
es
fsubs
out
push
call
mov
and
rolb
push
jmp
out
fnstsw
push
aaa
cs
jbe
pushf
stc
mov
jecxz
fistl
cld
insb
inc
cs
test
pop
fucomip
xor
or
mov
in
test
or
push
stos
fs
adc
xor
push
adc
adc
sbb
int
std
stos
sahf
out
sub
push
xor
adc
pop
in
jmp
push
fs
addl
data16
lret
add
ret
fwait
pop
sbb
push
cmpsb
push
outsl
mov
sub
das
dec
popf
dec
xor
repnz
ret
and
stos
jb
cmp
cmp
jle
push
std
mov
xor
stos
mov
test
jge
mov
cmpsl
mov
jno
adc
lea
push
xchg
sbb
lds
fisubrl
pop
or
testb
inc
mov
cmp
fwait
jnp
xchg
aaa
xchg
push
mov
jle
mov
dec
lret
pop
add
hlt
iret
jmp
jo
hlt
jmp
mov
pushf
aaa
inc
jne
mov
and
push
push
adc
pop
jbe
clc
xor
mov
fistpll
cwtl
jb
jmp
jecxz
pusha
jns
test
xor
test
stos
or
pop
inc
in
call
add
inc
and
movsb
pop
jae
fmuls
push
jb
into
outsl
test
sub
daa
xchg
dec
mov
rcll
cmp
push
sub
aad
js
mov
add
mov
into
mov
dec
clc
push
pop
push
push
mov
out
les
es
and
cmp
mul
fdivrl
rolb
movsb
xor
out
popf
fdivrs
inc
lret
jge
cwtl
in
xor
fs
movsl
jle
arpl
ret
div
adc
pushf
outsl
or
add
jae
cmp
in
sbb
imul
push
fbld
xchg
leave
js
addr16
lds
dec
or
cmpsb
mov
or
clc
and
stc
les
add
call
sub
out
sub
mov
jl
rcrb
test
xor
insb
mov
test
push
mov
sbb
aad
aam
push
xor
jno
adc
xchg
sbb
pop
ss
mov
rolb
cltd
ds
push
add
into
lcall
les
adc
rcrb
xchg
call
mov
mov
mov
jecxz
lods
dec
mov
mov
jmp
pop
mov
repz
negb
aam
dec
add
pop
mov
shrb
stos
shl
lahf
sub
push
jle
movsl
mov
add
mov
lock
test
loop
leave
pop
jb
dec
xlat
mov
push
sbb
lret
dec
jl
repz
dec
int3
xchg
cmpsb
sarl
rolb
xchg
fidivl
dec
dec
and
cmc
mov
int3
mov
jp
xchg
in
scas
jp
loopne
lret
cmp
adc
int3
in
enter
sarl
mov
addr16
sbb
add
add
mov
jl
cmc
inc
inc
pusha
inc
jmp
or
pop
jp
out
sub
call
jae
cmc
mov
pop
insl
inc
outsl
jge
in
xchg
push
jo
push
in
push
call
push
dec
cmp
pop
inc
fldt
mov
clc
inc
shlb
lahf
mov
pop
fstl
test
loop
jno
cmp
ss
sbb
xor
cltd
shll
pop
and
xor
xchg
into
fsts
mov
insb
mov
in
dec
insb
lods
enter
dec
pushf
movsb
mov
pop
jnp
lret
lea
outsl
adc
out
jp
cmp
fistpll
mov
adc
xchg
mov
or
inc
mov
pop
lds
imul
fstl
push
xchg
push
enter
cmp
imulb
mov
jnp
lods
cmp
push
in
ljmp
pusha
fadds
in
push
and
divb
adc
xchg
ja
pop
ja
jns
jo
sbb
loope
xor
ja
lods
loop
inc
into
icebp
sbb
test
xor
or
fldt
sub
js
shrb
xchg
add
stc
out
push
pop
push
pop
frstor
stos
pop
stos
icebp
and
inc
xchg
mov
sub
push
mov
scas
cmpsl
xlat
outsl
aaa
or
inc
or
int
aad
mov
sbb
dec
adc
outsl
sub
push
mov
cld
les
dec
stos
inc
scas
int3
or
fwait
daa
stc
mov
add
push
dec
rcl
fidivs
les
jne
pop
test
adcl
pop
lahf
cmpsl
test
pop
pop
mov
lods
std
dec
aas
pushf
sbb
jno
jno
sub
sub
xor
fbld
mov
or
addr16
sbb
movsl
sub
or
mov
fdivr
add
pop
pop
mov
jae
jp
arpl
cmp
aaa
mov
sub
lods
add
adc
and
les
push
cld
lock
cmp
shrb
into
mov
nop
insl
xchg
imul
ss
dec
mov
sbb
push
pop
sbb
pop
imul
add
orl
sbb
aad
repnz
lods
ret
icebp
mov
adc
pop
cmp
dec
out
dec
pop
out
pop
push
testb
add
inc
fldenv
out
dec
lds
or
cmp
shlb
movsw
aaa
jns
lods
sbb
and
inc
or
push
push
fidivs
inc
rclb
sahf
lods
lcall
mov
mov
add
dec
mov
arpl
mov
push
or
jnp
jge
hlt
push
call
push
dec
xchg
jg
lahf
std
test
lods
xor
out
icebp
xlat
rcrl
sti
mov
dec
sub
mov
aam
sti
leave
inc
xor
aad
das
or
xchg
data16
push
add
outsb
aaa
rorl
or
jb
sub
sub
and
divb
loope
push
jg
stos
loope
rorl
dec
fdivp
fs
addl
test
inc
fsubl
xchg
cmp
ja
leave
mov
pop
cmp
sbb
divl
daa
mov
test
pcmpgtd
pop
movb
pop
sahf
jb
mov
pop
mov
fsub
pop
and
stc
loopne
nop
cli
repz
xchg
sub
iret
jl
sti
movsl
out
mov
mov
dec
or
sarb
jl
out
mov
jb
or
xchg
inc
inc
push
push
pop
jne
push
add
add
enter
into
pop
test
cli
inc
fcoml
pop
push
inc
test
pusha
imul
pop
xchg
and
fucomp
arpl
fdivp
mov
fwait
ret
push
sbb
stos
inc
cmpsl
jno
scas
scas
ret
lea
lahf
mov
imul
dec
int3
shll
mov
xor
aad
adc
outsb
mov
lds
xor
adc
push
mov
or
in
clc
dec
jg
stc
pop
ret
xchg
insb
lods
jge
sbb
mov
jno
dec
adc
add
fidivl
arpl
jp
clc
imul
jmp
dec
adc
std
push
mov
repz
cli
or
outsl
gs
insl
and
nop
rorl
addr16
idiv
push
push
push
cmp
cwtl
clc
cmc
xchg
cwtl
clc
sub
cltd
mov
dec
int
mov
aas
or
imul
popa
mov
sbb
sbb
sub
repz
xchg
outsb
dec
dec
ret
or
inc
inc
lock
dec
lret
shlb
mov
adc
jp
ficomps
xchg
jno
adc
popf
mov
fdivs
xor
sbb
les
out
outsl
int3
or
ret
pop
push
arpl
inc
mov
mov
out
repnz
sti
cmpsb
icebp
ret
daa
addr16
pusha
inc
mov
xor
test
push
pop
push
mov
je
cmc
sbb
and
jo
push
enter
insl
mov
inc
and
stc
and
cmc
jne
cld
sbb
fbld
sub
sahf
mov
fnstcw
into
mov
and
xlat
sub
lods
cmpsl
mov
pop
in
or
jp
jmp
mov
mov
fdivs
sub
and
ds
repnz
inc
call
mov
mulb
in
in
repz
xchg
xor
sti
pushf
cmp
cmp
mov
fstps
movb
out
jb
inc
leave
xor
fs
mov
fistps
xor
aas
repnz
scas
pop
push
js
imull
fstl
dec
popf
sbb
push
xor
lcall
popf
mov
cmpl
dec
or
adc
and
out
or
push
pop
pusha
int3
arpl
loope
leave
popa
cwtl
pop
adc
mov
stc
stc
xchg
jo
xor
mov
es
call
out
or
aad
test
cmpsb
into
jns
xor
ljmp
jl
fsubrs
dec
or
dec
cmp
or
out
dec
mov
fmuls
jge
jnp
ja
movsl
scas
fdivs
jmp
xchg
incl
cmp
jne
mov
xor
dec
inc
repz
xchg
cld
ljmp
icebp
out
loope
and
and
out
pusha
aaa
dec
fdivrl
pop
xchg
rcll
pushf
rol
imul
js
test
push
cmp
push
add
fistpl
xchg
inc
sub
and
cmp
sub
xchg
sbb
xchg
js
mov
hlt
inc
mov
mov
and
enter
fwait
add
cmpl
or
inc
movsb
scas
or
sub
push
pop
lods
scas
mov
xchg
xchg
lock
jecxz
push
xchg
fdivr
push
adc
xor
pop
mov
aad
inc
movsb
cmp
iret
aaa
pusha
jbe
into
aas
add
mov
sbb
mov
push
test
xor
fldcw
ja
sbb
adc
xlat
in
shrl
xchg
repz
rorb
sahf
xchg
pop
mov
push
lods
cld
mov
ds
fadds
mov
pop
xor
push
shlb
es
movsb
xchg
in
orl
push
xchg
cmpsb
insb
cmp
aaa
in
test
cmp
scas
push
pop
fistpl
or
jno
mov
adc
jb
lret
in
aad
push
jge
fbld
pop
es
mov
xchg
jno
jecxz
iret
cld
push
popl
jg
jae
adc
imul
inc
sarl
mov
add
js
and
mov
adc
loop
sahf
enter
cmp
dec
hlt
hlt
sti
ficoms
xchg
fwait
in
frstor
mov
loopne
pop
in
enter
in
add
sbbb
jns
mov
cmp
out
and
lahf
mov
xor
lret
cmpsl
inc
mov
fnstcw
or
sbb
cmpsl
dec
nop
cltd
cmc
ret
pop
std
add
out
ret
into
add
push
jae
sarl
loopne
cli
sbb
cmp
dec
clc
sub
pop
xor
and
scas
movsl
inc
lahf
ret
nop
inc
cmp
push
movaps
mov
adc
mov
rcr
mov
and
sub
adc
inc
xchg
lods
xchg
mov
or
add
pop
add
cmp
pop
mov
xor
mov
sub
fsub
jno
inc
mov
mov
adc
fcomi
fs
xchg
popf
out
jmp
dec
arpl
leave
push
mov
pop
cmovp
es
mov
bound
mov
add
jmp
dec
and
mov
lods
push
adc
sbbb
rcl
push
imul
pop
mov
pop
sbb
sbb
lock
fwait
xchg
jno
push
into
and
lods
shl
jecxz
repnz
mov
pop
or
test
lea
ret
pusha
outsb
sbb
pop
xchg
push
xor
xor
jbe
in
jne
cs
mov
mov
out
push
xor
dec
les
add
nop
fsubl
inc
test
add
or
call
movsb
repnz
shlb
movsb
jo
pop
out
xchg
and
ss
dec
outsb
cmp
inc
push
sub
sub
in
pushf
fidivl
push
xchg
stos
lahf
out
mov
out
xchg
les
adc
xchg
ficoms
or
aam
xchg
inc
lock
dec
adc
in
fwait
js
push
data16
xchg
xorb
ret
leave
imul
lods
and
mov
mov
mov
ds
lock
pop
int3
or
and
mov
dec
fidivrl
stos
cmp
xorb
jo
push
xor
push
push
pop
mov
imul
lret
push
dec
out
mov
cmp
push
into
push
push
xor
js
adc
dec
mov
call
xlat
icebp
adc
pop
mov
scas
loopne
adc
mov
mov
cwtl
jecxz
pop
mov
cmp
ret
and
xor
jns
notl
shll
mov
inc
stos
xchg
cmp
xchg
mov
jo
inc
xchg
or
lret
out
test
sub
out
pop
in
ja
jmp
mov
cmp
mov
and
mov
loope
inc
in
scas
loop
fldenv
dec
in
and
pop
aam
and
or
aaa
imul
dec
xor
shll
sbb
test
and
push
pop
stos
pop
scas
push
scas
in
int3
mov
sub
add
call
sbb
je
pop
mov
fsubl
insl
dec
dec
jmp
rcrl
rorl
repz
xchg
fstl
jnp
lods
insb
jge
xor
add
fsubs
cs
loope
or
inc
stos
outsl
pushf
push
lahf
lret
sub
aaa
sbb
pop
fbld
pop
in
mov
sarb
or
fsubl
cmp
mov
sbb
jmp
cs
sub
jo
xchg
insb
jnp
push
test
or
cmp
or
mov
into
sub
pop
push
push
push
cli
out
xor
pop
js
aam
lahf
mov
in
outsl
inc
lock
inc
and
jbe
add
lds
stc
mov
lret
jne
aad
repz
je
jae
push
fmull
lcall
scas
mov
mov
out
and
cmp
movsl
and
daa
cwtl
rol
jb
xchg
sbb
dec
jae
push
pop
push
fdivp
push
sub
into
insb
push
cmp
pop
jne
or
add
dec
inc
xor
mov
pop
push
and
leave
ret
push
pushf
and
test
aaa
or
je
or
push
ret
in
jmp
pop
dec
pusha
jge
xor
xchg
add
int3
pop
push
push
add
imul
adc
and
xchg
inc
dec
mov
pusha
push
sarl
jl
mov
cmp
add
cmp
sub
inc
xor
adc
xchg
cmpsl
push
enter
sub
jno
inc
sysexit
call
pop
xchg
cmpb
cmp
mov
pop
jb
jp
shlb
es
out
jge
fwait
lret
mov
dec
dec
pop
push
jmp
push
cmovb
push
or
mov
data16
adc
out
adc
jo
mov
add
push
mov
outsl
sub
outsl
in
out
mov
pop
mov
jge
and
sbb
loop
cs
lock
xor
adc
jnp
jp
cmpl
mov
outsl
xchg
decl
adc
mov
pop
rcll
adc
test
daa
sahf
jecxz
movsl
les
popf
and
mov
mov
mov
cmpsb
push
cwtl
das
out
dec
push
xchg
cmpl
loopne
mov
mov
mov
sahf
mov
into
jns
sbb
cmpsb
sub
je
jno
arpl
rcrb
xor
arpl
add
jno
mov
shrb
ja
add
insb
add
add
adc
jle
xchg
adc
push
cli
in
int3
add
add
adc
sbb
js
dec
test
movsb
push
fidivl
sti
push
in
shl
or
mov
lea
es
mov
mov
xor
add
aam
push
sub
add
mov
lret
adc
or
and
das
or
sub
mov
cmp
xor
lods
sbb
mov
lahf
lcall
dec
jg
test
push
insl
xchg
sub
loopne
out
testb
jae
cli
ds
pop
pop
scas
push
movsl
arpl
xlat
jo
or
or
jmp
pop
pop
in
and
pop
mov
push
pop
add
xchg
cld
xor
dec
xorl
std
outsl
out
lahf
lds
mov
cld
mov
jp
lods
addl
adc
in
xchg
xchg
dec
nop
fbstp
hlt
lret
push
rclb
jne
icebp
nop
and
rep
jg
cltd
adc
out
aam
lret
inc
test
cld
and
fidivl
or
adc
inc
mov
paddw
xor
inc
mov
inc
add
and
jne
jge
adc
mov
push
or
aam
jmp
lds
or
xchg
jl
push
adc
ja
xchg
add
daa
in
adc
push
nop
or
push
or
test
aaa
pop
cmpsb
mov
xor
inc
xchg
sub
rolb
mov
push
lret
jne
sahf
mov
add
rol
push
lods
add
xor
inc
bound
mov
push
cmp
sub
icebp
dec
and
xor
dec
or
pop
out
pop
mov
mov
rol
fs
cwtl
sbb
cmpsb
ja
sub
cmc
mov
sbb
mov
lock
in
fcomps
ret
pop
mov
xchg
pop
jns
inc
inc
ficoms
dec
cld
lahf
jmp
mov
xor
mov
cmp
inc
mov
fucomip
xor
mov
addb
int3
scas
fmul
cmc
cmpsb
pop
jl
or
les
int
sahf
sub
sub
andl
or
inc
dec
add
shlb
mov
das
and
or
in
pop
scas
jo
xchg
into
in
cmp
fdivs
add
or
fs
movsl
call
andl
mov
mov
inc
lods
or
popf
sbb
and
je
sub
fcoms
push
bnd
in
fsubl
cmc
jbe
mov
shlb
mov
mov
jmp
and
int
cmp
out
jg
pop
movl
push
mov
andl
movsb
movsl
cmp
inc
sub
or
pop
dec
into
gs
les
arpl
in
mov
subl
adc
shl
or
jnp
cltd
fsubrs
jo
aam
and
mov
popa
sbb
mov
mov
xor
int3
in
js
loopne
aam
in
pop
xchg
dec
dec
ret
outsb
dec
lcall
pushf
cltd
shlb
testl
inc
pop
dec
scas
out
jp
mov
ja
insl
jnp
shrb
test
dec
mov
mov
mov
out
cmpsb
test
and
sub
repz
out
mov
out
mov
roll
push
mov
out
or
rorb
das
bound
mov
das
fsub
lea
jl
outsb
inc
scas
in
pop
jmp
addr16
cld
inc
lods
mov
sub
jbe
cltd
les
aam
nop
pop
sbb
or
in
sahf
out
test
push
mov
mov
nop
push
xor
mov
inc
test
pop
dec
js
pop
add
out
xor
repnz
and
les
sar
sbb
bound
inc
cli
inc
addr16
push
cli
lods
mov
mov
and
ret
lods
sbb
loopne
ret
test
or
xlat
stc
test
and
mul
push
xchg
mov
mov
mov
fistpl
inc
jne
popa
sub
ret
insl
pop
mov
pop
jnp
sub
mov
imul
mov
and
stc
lret
int
jbe
test
and
sbb
jg
rolb
pop
push
lds
cmp
addr16
enter
and
mov
orps
jnp
cmp
dec
pop
xchg
cmp
xchg
xlat
add
out
into
cmp
add
mov
stos
xor
mov
ret
jno
leave
sub
push
jp
mov
mov
lods
adc
enter
adc
repz
mov
ret
roll
inc
cmp
out
leave
mov
xchg
dec
adc
xchg
repnz
dec
daa
pop
stos
xlat
pushf
jns
jae
push
jmp
pop
imul
enter
xor
ret
pop
andl
lret
xchg
xor
iret
int3
in
cli
rolb
negl
adc
popa
and
sub
mov
push
push
cmovne
pop
inc
jl
cmp
mov
imul
loop
push
sbb
push
dec
jmp
dec
in
or
icebp
addr16
jp
and
cmc
in
add
out
ret
shl
pop
sti
cs
enter
adc
cmp
in
mov
in
pop
inc
mov
add
pop
rol
sar
push
addb
push
xchg
fwait
mov
lods
movb
ljmp
lea
test
xchg
arpl
cmpsb
pop
and
cmc
arpl
cmpsb
cli
icebp
cmp
fcomip
mov
jno
mov
dec
mov
ja
add
mov
jno
jecxz
cmc
loop
pop
mov
unpckhps
and
int
dec
cld
push
mov
mov
xchg
dec
or
sti
mov
mov
test
enter
movsb
in
sbb
pop
or
adc
bound
stos
and
xor
dec
loopne
test
lods
jae
sub
ss
mov
fisubs
int3
lcall
test
pushf
jno
ljmp
xor
das
mov
and
or
jl
shll
cmpsl
mov
cmp
jo
lods
dec
lds
add
pop
sub
aaa
lock
ds
mov
or
outsb
gs
mov
mov
lret
fdivrs
popa
pop
sbb
insl
pop
mov
mov
push
pop
iret
es
cmp
push
add
add
ret
cltd
pop
jmp
ficoms
mov
sub
push
and
gs
mov
mov
fstpl
sub
repnz
push
pop
or
sub
loopne
orb
jnp
jmp
dec
add
stos
lods
jmp
mov
popf
lock
sbb
daa
addr16
jns
repz
sub
int3
js
push
aam
jbe
mov
repz
idivb
mov
loopne
pop
std
jbe
mov
dec
xchg
xchg
in
scas
xchg
jno
clc
xor
aas
testl
aad
jmp
push
push
xor
es
push
dec
push
inc
les
adc
cmp
sarl
cmp
jae
clc
lods
mov
inc
data16
push
mov
fmul
out
movsb
lret
fnstsw
dec
push
test
in
pop
ficomps
lret
sbb
or
aam
sub
outsl
fsubrl
test
rolb
out
mov
mov
sbb
cltd
and
lea
push
jg
ret
sbb
cmpsb
jne
loop
xchg
addl
std
mov
imul
sbb
jge
jle
insb
cmc
adc
mov
stos
cmp
rorl
inc
cmp
xchg
fs
xor
jae
lea
rolb
xchg
lret
mov
rcrb
sbb
aas
movsl
frstor
sub
in
mov
fldenv
cmp
jmp
and
hlt
add
call
sbb
lret
push
out
daa
pop
fwait
lods
xchg
dec
mov
xchg
push
in
sbb
pop
push
in
data16
or
mov
rcrl
insl
add
sbb
call
pop
mov
shrb
inc
mov
and
js
pop
jmp
mov
mov
pop
push
adc
rorb
ds
mov
outsl
sbb
cmpsb
add
xrstor
xchg
jmp
fwait
ror
lcall
mov
mov
aaa
fcoms
jae
ljmp
pop
mov
mov
mov
cmp
aad
xor
sarl
or
push
jmp
mov
mov
test
xchg
jae,pn
inc
js
mov
cmp
mov
icebp
mov
lret
test
pop
in
notl
loope
arpl
push
imul
xor
jno
fistpl
jg
adc
idivb
in
sbb
jecxz
xor
dec
and
hlt
jle
push
cwtl
stc
xchg
dec
cmp
out
mov
ljmp
movb
jnp
rolb
lret
popa
jbe
ds
add
je
mov
sub
push
test
mov
lock
mov
pop
out
gs
lds
imull
jmp
out
fld
mov
mov
inc
sub
jno
cmp
sub
imul
xchg
cmp
mov
leave
and
dec
inc
lods
xchg
jne
push
push
insl
outsb
sbb
aam
mov
mov
enter
xchg
sub
sub
jo
xchg
cli
popa
outsl
sbb
mov
test
mov
test
mov
sbb
jle
jae
jne
xchg
pushf
movsl
aam
jae
imul
xchg
or
or
clc
int3
xchg
cmpsb
sub
cltd
push
adcl
pop
inc
out
mov
test
cmp
std
lock
mov
add
xchg
stos
out
adc
mov
out
cmc
sub
jmp
sbb
je
arpl
repz
xor
sar
shr
ds
sub
arpl
mov
pop
jg
dec
inc
scas
fs
loope
test
push
test
lcall
inc
adc
add
aaa
inc
mov
sti
push
xchg
nop
dec
rcll
cmpsl
cs
test
pushf
rclb
test
leave
add
addr16
addr16
adc
mov
xor
inc
rcl
pop
sarl
jbe
dec
pop
dec
jns
aaa
and
mov
mov
cmp
dec
scas
xchg
dec
add
sub
sub
lea
sub
mov
sub
shlb
xor
or
daa
xchg
mov
fists
mov
rcrl
pusha
mov
sub
and
out
iret
in
or
out
call
cltd
mov
mov
pop
mov
sbb
shll
addr16
or
mov
cmp
jb
pusha
dec
nop
mov
cwtl
add
iret
jg
enter
push
sahf
mov
or
mov
aam
xchg
add
pushf
push
push
mov
and
aaa
xor
imul
rcll
and
xor
cmp
inc
cmp
ffree
cld
or
push
sbb
jne
inc
adcb
frstor
lds
xchg
push
fsubrp
loope
mov
jmp
xor
xor
jp
add
rorb
iret
fisttpl
inc
lods
cmc
push
fwait
push
sbb
sub
pop
pop
icebp
dec
or
or
enter
cs
adc
in
test
adc
mov
inc
out
mov
hlt
inc
in
aad
test
inc
icebp
pop
insl
into
pop
fistps
inc
mov
es
pop
dec
lds
cmp
and
inc
and
enter
and
mov
mov
adc
mov
aad
aaa
movb
push
cwtl
mov
lods
cmc
pop
lea
orb
push
add
idivl
mov
sub
push
and
addr16
cmp
rcll
bound
jge
cmpsb
mov
inc
fildll
hlt
push
lret
setb
fisttpll
cmpsl
add
jecxz
iret
and
jno
cmp
out
sbb
mov
xor
fidivrs
sub
insl
into
insl
and
xchg
fimuls
sub
in
inc
scas
cmc
and
mov
sub
fsubs
cmpsb
inc
ret
js
push
adc
or
sub
or
stc
mov
push
jecxz
outsb
lea
in
sub
mov
ret
pop
fidivrs
or
xorl
mov
jl
movsl
dec
cli
xchg
dec
fistpll
cs
dec
add
mov
dec
jb
jbe
arpl
dec
mov
outsl
loopne
jp,pn
mov
out
test
lds
mov
outsb
sub
movsb
fbld
sub
in
jae
or
jnp
into
stos
data16
cmp
cmp
arpl
test
ljmp
leave
sbb
cmp
cmp
jbe
xlat
jo
sahf
neg
mov
ds
push
je
pop
das
xchg
sub
xchg
mov
lcall
shll
or
int
dec
pop
xchg
sub
ret
mov
lret
dec
xchg
addr16
xorb
inc
jp
hlt
lds
xor
inc
sahf
inc
mov
jne
pusha
xchg
call
clc
xchg
ljmp
ficoml
daa
xchg
test
xchg
or
insb
dec
js
cmpl
xchg
inc
frstor
cwtl
shll
xlat
bound
lock
shlb
lcall
push
cvtps2pd
bound
movsbl
push
sub
in
mov
jb
push
xor
and
outsl
inc
repz
inc
jmp
ret
outsl
fstps
out
push
and
lds
cli
jns
filds
pop
push
add
sub
lods
out
mov
or
cwtl
ljmp
jne
scas
fcompl
mov
cmp
and
les
daa
xchg
aam
cmp
cmpsb
mov
arpl
rorb
mov
xchg
dec
sub
push
mov
orb
out
in
mov
outsb
push
jp
mov
aam
jmp
mov
inc
dec
je
or
sub
scas
pop
cmp
out
in
dec
sub
inc
xchg
aas
in
push
add
mov
push
out
cs
mov
cli
jb
aaa
movsb
inc
out
jae
inc
mov
mov
mov
cmp
jg
adc
inc
inc
popl
sbb
mov
lcall
imull
rcrl
adc
mov
dec
popf
xor
dec
sbb
pop
clc
dec
clc
mov
ret
push
push
jge
orl
lcall
int3
enter
cmp
in
cs
pop
test
xor
inc
xchg
cmp
push
test
dec
mov
test
lret
repnz
arpl
or
sub
insb
fwait
addl
divl
leave
dec
scas
push
xchg
and
add
xchg
in
lods
in
or
mov
and
dec
cmpb
lahf
call
adc
add
or
rolb
insb
mov
mov
movsl
stos
sbb
mov
inc
adc
jg
ja
mov
xchg
xchg
shrb
xlat
and
and
xor
push
jo
sbb
pop
movsb
dec
frstor
mov
sbb
imul
dec
addr16
push
dec
fucomi
jp
xchg
cmp
dec
ror
add
ret
mov
push
das
mov
into
and
jnp
mov
out
dec
repnz
aad
mov
testl
xor
xchg
sbb
daa
scas
movsl
out
aam
adc
dec
aad
and
lcall
mov
pop
adc
inc
scas
pushf
and
xor
lods
inc
pop
lods
xor
fbstp
cld
push
mov
sub
lcall
adc
mov
jl
sbb
xchg
imulb
mov
sub
inc
xor
or
out
push
pop
sbb
les
pop
mov
cmp
xorb
frstor
ret
cltd
sub
loop
aaa
fdivrl
dec
and
and
adc
push
push
int3
imul
sub
inc
mov
ja
cltd
sub
pop
arpl
xlat
aad
pop
in
jle
add
das
pop
imul
xchg
dec
cltd
cmpsl
push
push
xor
fwait
repz
out
xchg
add
popf
lds
in
adc
adc
repz
inc
mov
mov
test
push
push
idiv
das
icebp
fs
outsl
pop
push
jge
dec
jmp
mov
mov
adc
fnstcw
ljmp
mov
clc
xor
in
popa
xor
jno
inc
popa
outsb
push
add
xor
sbb
xchg
icebp
push
sbb
inc
mov
out
add
xchg
push
and
mov
sbb
sub
pop
dec
ficompl
lret
xchg
mov
push
mov
shll
stos
pop
push
xchg
adc
test
dec
and
sub
pop
xor
xor
xchg
sbbl
or
test
popf
into
hlt
jg
add
into
add
push
icebp
xor
cld
lods
cmpsl
xchg
rcrb
add
xchg
or
sahf
cwtl
icebp
fidivrs
inc
push
add
pusha
bnd
jmp
ret
add
jns
mov
pop
and
and
ds
ja
adc
nop
push
cmp
fidivs
ljmp
and
cmp
test
inc
sub
xchg
xorl
iret
xlat
popf
movsl
icebp
pop
mov
inc
test
movsl
fsubrl
addr16
cmp
movsb
xor
fildl
add
and
movsl
push
dec
xor
stos
ljmp
xchg
pop
out
xchg
pop
xchg
pop
add
outsl
fdivrs
sbb
or
or
mov
cli
cmp
xchg
int3
mov
scas
repnz
add
cmp
and
sar
push
dec
and
cli
sub
cmp
add
ret
mov
lock
lret
xlat
test
aad
jg
pop
adc
bound
adc
cltd
repz
ret
mov
or
mov
xchg
fcompl
cmp
clc
into
push
out
cli
sbb
mov
push
jne
xchg
and
add
in
inc
in
sub
movsb
int
lahf
mov
jns
and
imul
stc
pushl
rcrb
xchg
int3
scas
xchg
jle
aad
int
bound
xor
cwtl
cmp
repz
push
and
dec
fsubrl
and
lcall
mov
push
mov
push
das
repnz
push
arpl
ljmp
adc
outsb
shll
leave
sbb
push
cmpl
jae
xchg
cmp
mov
int3
sbb
xor
inc
cmp
push
fsubrp
cmp
xchg
sub
outsl
pop
ret
fwait
cli
adc
ret
pop
xlat
ss
bswap
push
cmp
iret
movl
push
mov
fidivrs
out
mov
xlat
stos
push
mov
loope
cmp
mov
sub
sbb
push
jno
mov
ljmp
insl
or
sub
mov
push
out
add
pop
enter
mov
or
pop
adc
push
cmp
arpl
aad
sub
fsts
fmul
jecxz
xorb
lea
les
sub
icebp
pop
jmp
and
das
add
movsl
mov
pushf
out
sti
mov
fcoml
jb
or
xor
dec
aad
shr
mov
popf
sarl
popf
pop
jp
push
add
inc
xchg
xchg
jmp
and
ror
mov
add
cmp
cmc
das
lods
cmpl
fdivrs
add
push
js
cmp
sub
es
fiadds
arpl
push
push
jmp
roll
jnp
fimull
std
sub
enter
repnz
add
mov
fistps
out
je
push
test
jne
mov
add
lret
pop
jne
imul
in
xchg
rorl
push
imul
dec
dec
push
fldl
dec
pushf
inc
int3
adc
cmc
inc
stc
adc
adc
add
outsl
add
js
repnz
jmp
in
aaa
pop
jbe
add
xor
cmc
rcll
xchg
jb
rcrl
popa
scas
push
in
dec
loope,pn
les
push
sub
xchg
call
js
xchg
or
inc
imul
shlb
lcall
in
pop
mov
push
rolb
dec
fsubrl
pop
idivl
dec
push
push
xor
jmp
test
inc
push
inc
pop
icebp
jae
xor
dec
mov
insb
sbb
adc
xor
mov
jmp
loop
out
sbb
inc
jl
xlat
int3
insl
dec
fistpll
inc
bound
aas
fimull
mov
int3
mov
repnz
aad
sub
add
cli
push
mov
mov
fldcw
icebp
into
repnz
push
and
mov
loopne
cs
inc
jmp
mov
lret
mov
or
gs
arpl
jno
cli
or
sbb
leave
movsl
sahf
push
push
sub
pop
pop
xchg
lea
add
jmp
xchg
inc
cmp
shl
mov
fistpl
sub
in
popa
out
and
fwait
mov
ljmp
mov
getsec
arpl
lret
sbb
je
mov
loop
scas
sbb
mov
inc
add
insl
inc
push
mov
push
dec
imul
cmp
sub
push
test
xor
data16
es
cli
mov
pop
cmp
sub
push
mov
int3
push
jmp
out
mov
shrl
mov
pusha
shrb
or
xorl
cmp
aas
push
sub
add
stc
cmp
je
push
dec
enter
or
mov
xorl
push
int3
sub
add
jp
gs
mov
cltd
hlt
xor
cmp
xchg
inc
addr16
jle
neg
add
pop
ror
and
xor
ja
mov
or
mov
mov
xchg
mov
mov
jl
popf
add
cmp
ret
test
test
xlat
and
fstp
mov
fwait
inc
int3
or
sarb
push
cmp
pop
sbb
sub
imul
lods
stos
in
fnclex
pop
sti
stos
mov
jne
lcall
push
cmp
push
lret
into
subl
mov
dec
jmp
stos
push
adc
lahf
adc
arpl
mov
sub
sbb
fsub
repz
add
jne
or
outsl
mov
xchg
pop
inc
cld
test
cwtl
or
xor
adc
inc
fld
imul
lret
mov
mov
xchg
inc
clc
mov
push
fdivrl
mov
push
or
ja
fs
and
cmc
movsb
rcl
pop
fdivl
push
sbb
pusha
les
pusha
lock
adc
push
jl
or
pushf
pop
dec
fisubl
adcb
sub
fnstcw
lods
lret
jno
cld
push
aas
sbb
mov
or
dec
adc
sbb
inc
jl
lea
int3
pop
cmp
xor
stos
inc
shl
out
jge
cltd
call
cwtl
pop
mov
cli
sub
es
in
or
les
outsl
or
scas
shl
aam
out
loope
scas
rdtsc
fdivl
insl
lcall
mov
int3
aaa
xor
js
dec
mov
rcrb
sar
je
mov
out
movb
cwtl
xchg
aad
aam
mov
lahf
loope
jb
inc
outsl
in
inc
xor
mov
and
dec
ljmp
mov
jmp
xchg
dec
xchg
stc
mov
and
fs
ret
clc
mov
fstpl
xor
and
jp
movsl
xor
stos
int
fidivl
and
rcll
nop
mov
push
nop
div
hlt
insl
sbb
popf
push
push
sub
add
sub
cmp
fadd
xor
sar
inc
decb
inc
sbb
push
leave
inc
call
cwtl
stos
dec
pop
sbb
and
mov
js
scas
jle
fs
adc
pop
mov
or
in
orb
and
inc
scas
push
rcll
mov
scas
adc
clc
jbe
xor
addr16
seta
sbb
cmpsl
push
in
pop
cmpl
nop
aad
jo
cmp
iret
popf
add
scas
roll
or
xchg
dec
cmp
icebp
mov
aaa
ret
rcrb
inc
xlat
hlt
xchg
daa
cmpsl
pop
lret
cmp
jne
sub
in
xchg
or
lret
std
push
std
xchg
daa
out
push
and
mov
jno
in
dec
xchg
fcmove
dec
pop
out
in
dec
xchg
cs
mov
arpl
add
xchg
cmp
pop
push
cwtl
xchg
fiaddl
les
sub
sti
cli
inc
insb
mov
ds
and
cmpl
rcrb
pop
mov
ss
gs
mov
pop
xchg
jecxz
jno
popa
and
scas
aaa
pop
decl
adc
out
sti
xor
sub
mov
stc
dec
ficoms
cld
sbb
xor
pushf
mov
xchg
data16
out
mov
les
clc
fdivs
xchg
mov
fcmovbe
mov
xchg
add
hlt
push
mov
imul
cld
inc
int3
cmp
test
push
add
cwtl
into
shrb
shll
xchg
adc
fildll
push
jnp
insl
xchg
pop
mov
es
push
ret
dec
or
cmp
sbb
iret
jmp
dec
popf
push
in
gs
mov
mov
pop
ret
in
stos
cli
pop
and
or
mov
adc
dec
pusha
mov
pop
pop
lods
rcrb
movsb
sub
out
jecxz
das
push
fimuls
negb
aaa
sub
int3
outsb
mov
loop
popf
hlt
xchg
cltd
mov
stc
lea
std
insb
sub
inc
cli
mov
or
jno
and
jns
imul
daa
aas
cld
fwait
das
bound
in
mov
andl
ret
xor
push
pop
mul
mov
cli
mov
xchg
lods
rcll
adc
mov
pop
and
mov
lret
mov
test
cmp
in
mov
add
rcrl
idivb
mov
sub
loopne
sub
es
mov
or
outsl
test
testl
cmp
sub
add
ret
inc
jp
es
jns
inc
hlt
movsb
and
jne
mov
xchg
mov
lret
sbb
lret
sub
push
jo
sbb
cmp
jp
ja
xor
insb
dec
jp
xchg
jne
cmpl
jno
add
out
fidivs
repnz
inc
mov
les
sbb
pop
icebp
fadds
lods
fldcw
ds
xchg
lods
notl
lock
aad
mov
icebp
cmpsl
lret
out
fsubr
popf
out
cmp
cmp
in
adc
in
fldt
iret
pop
lods
jg
ss
xor
dec
push
mov
add
inc
inc
cli
xor
xchg
and
pop
mull
fimuls
or
imul
dec
push
jns
xlat
outsb
ss
xor
imul
xchg
mov
rcll
shrl
nop
into
jno
fbstp
cli
fcompl
jb
loope
mov
cmp
gs
shl
imul
cmp
adc
or
test
data16
cmp
das
xorl
mov
movsb
int
push
inc
dec
cmp
fnsave
add
jl
jle
out
push
mov
pop
insb
stc
push
dec
cmp
or
imul
fnstcw
rclb
xchg
in
in
cmp
int
and
movsb
stc
fcoml
jne
lock
sub
push
mov
inc
mov
cmp
xchg
mov
push
adc
insl
repnz
mov
icebp
int3
aad
and
lret
adc
subl
sub
add
mov
pop
add
pusha
inc
sub
dec
in
fnsave
add
dec
dec
push
ret
loop
inc
mov
fwait
shll
lahf
test
movsl
or
adc
pop
in
pop
sbb
loope
sti
cmp
loope
inc
cwtl
or
cmp
outsl
mul
push
pop
lahf
mov
lcall
add
xor
xchg
push
shlb
add
hlt
cmp
jmp
daa
adc
std
jb
fmul
mov
pop
mov
incb
inc
lcall
push
jbe
lock
xchg
fadd
fistpl
sbb
in
cmp
test
lahf
fsubp
sub
jbe
cmpsb
inc
pop
imul
mov
in
xchg
shll
loopnew,pn
dec
jnp
int
adc
xor
inc
subb
fbld
or
fadd
in
cmc
jle
adc
xlat
cmc
std
sbb
jp
xchg
jle
seto
mov
lahf
push
rcrb
inc
xchg
and
xchg
or
fwait
push
push
pop
shrb
add
jmp
cmp
inc
add
ret
cld
int
mov
or
and
imul
or
gs
sbb
push
outsb
fisttpl
imul
ffree
stos
subl
mov
xchg
cli
push
jl
pop
enter
jbe
rcr
add
repnz
mov
fcmovnbe
addr16
aas
repz
mov
shll
out
mov
dec
add
push
mov
jge
sbb
mov
xor
dec
adc
mov
outsl
sahf
std
dec
xchg
cmpsb
out
orb
mov
pop
mov
cmp
adc
cmp
inc
jl
rcrl
mov
mov
mov
xchg
or
mov
out
fwait
or
popa
mov
popf
jge
or
adc
repnz
xchg
fildl
mov
jge
adc
mov
sbb
add
inc
adc
mov
push
loope
test
or
cld
stc
jle
insb
test
add
jecxz
int
dec
push
cmp
daa
movsl
pop
mov
mov
enter
jl
stc
nop
jmp
lods
negl
xor
pusha
sbb
push
cli
inc
ret
pop
pop
fucomip
mov
in
or
in
aad
sbb
cmp
jl
ss
lret
lods
stc
mov
loop
iret
lea
sub
jp
sub
fs
shrl
push
outsl
nop
pop
pop
mov
inc
jb
inc
pop
xchg
push
in
stc
mov
adc
push
mov
sub
aaa
cmc
push
and
insl
push
insl
enter
xchg
imulb
xorb
or
bnd
mov
insb
lret
or
aad
int
lds
das
cltd
inc
mov
cli
push
lock
fucomip
jle
adc
daa
iret
sub
in
testl
jmp
dec
test
out
fldcw
add
xlat
xorb
push
pop
mov
xchg
daa
test
subl
lods
jg
je
mov
xchg
aaa
inc
sbb
loop
fistl
mov
cli
or
scas
rcr
nop
cmp
fsts
repz
arpl
lds
dec
and
rcrl
aas
add
cmp
stos
push
mov
sub
pop
sub
scas
addr16
mov
movl
cmp
pop
push
fistpll
rorb
mov
jl
bound
jnp
push
inc
or
lret
ja
inc
pop
ficomps
icebp
inc
xchg
and
cltd
push
xor
cli
or
pop
dec
out
adc
addr16
sbb
in
mov
sub
lahf
int3
test
stc
mov
jl
adc
cmpsl
cmp
test
inc
inc
mov
negb
std
xchg
pushf
adc
dec
lods
push
add
enter
fcomi
ljmp
pop
jns
mov
jl
lret
inc
insb
mov
ret
xchg
jmp
mov
lret
fld
out
fld
in
bound
fs
mov
out
mov
leave
outsb
lods
mov
jns
lods
add
je
mov
add
and
fdivl
icebp
add
arpl
jmp
das
cltd
xor
les
pop
inc
dec
movl
push
or
jle
dec
or
inc
imul
insb
leave
outsb
and
call
mov
in
out
mov
cld
pop
mov
jge
mov
sub
sub
stos
pushf
or
add
in
push
sbb
movsl
hlt
sahf
adc
jmp
add
imul
jg
arpl
cli
adc
push
jae
push
stos
sub
sub
xlat
cld
adc
inc
jecxz
leave
or
push
in
imul
mov
stos
int3
push
dec
sti
gs
adc
ret
jne
std
cli
cmp
inc
stos
nop
add
lock
leave
fsubs
mov
jns
insl
cld
outsl
jbe
rorl
xchg
push
scas
stos
push
xchg
push
xor
pop
loope
out
add
in
mov
sub
push
je
sti
pop
out
jp
repz
shl
inc
jae
addr16
test
adc
lods
bound
sbb
ret
mov
imul
dec
lds
xchg
je
aas
pop
sarl
jbe
xor
in
or
push
sahf
mov
idivb
mov
sbb
dec
xchg
stos
mov
adc
xor
pusha
sbb
pop
out
loop
sub
or
in
xor
push
stc
idivl
push
cld
out
ret
cs
movsl
dec
mov
int
jl
ret
clc
push
shll
sub
sarb
or
imul
loop
inc
les
adc
stos
mov
cmp
inc
rcll
push
ret
arpl
imul
pop
push
jecxz
mov
aad
xchg
aad
scas
add
mov
les
xchg
clc
clc
clc
popa
adc
call
cmc
sbb
xor
cmpsb
adc
shlb
mov
dec
pushf
inc
cs
fs
adc
imul
lock
ja
cmp
repz
pop
and
mov
and
sahf
pop
mov
outsl
int3
call
lock
and
pop
test
inc
inc
dec
int3
lock
test
add
outsb
mov
bound
addr16
mov
or
xor
mov
bound
fidivrs
das
add
hlt
ss
cmpsb
dec
orb
iret
jp
scas
rol
xchg
aaa
mov
ljmp
fs
das
fstpt
lds
push
jno,pn
out
add
jb
test
jae
xchg
mov
or
rcrb
mov
into
les
mov
sar
js
push
and
fcmovne
cmpl
jns
jmp
repnz
xlat
push
sbb
cmp
je
mov
xchg
pop
popa
dec
add
lret
fadd
fnsave
out
in
bound
jmp
adc
lret
push
daa
cmc
mov
push
mov
sbb
std
repz
add
imul
or
lret
outsb
lret
mov
inc
inc
and
jno
mov
rol
mov
fadd
loop
scas
mov
xorb
cmp
jno
mov
cli
loop
loopew
lret
mov
pop
fwait
jnp
enter
or
lret
push
sub
insb
daa
sub
les
int
jp
ss
lret
sbbl
movsl
or
stc
lods
lcall
outsl
fwait
iret
scas
js
xor
pushf
lods
cmp
outsl
dec
sub
push
sbb
mov
xchg
xor
fstpt
mov
or
pop
aas
pop
ret
fiadds
lods
push
xchg
push
cmpsl
jecxz
popa
loopne
in
test
sbb
mov
cs
addr16
push
ja
mov
ja
pushf
jle
xchg
sar
push
out
ficomps
fmull
js
push
fnstenv
neg
push
std
push
sbb
mov
cld
hlt
jns
cltd
inc
or
xchg
lret
nop
test
ficoms
outsb
lret
pushf
xorl
popa
and
jp
je
add
cmp
cmp
cmpsb
inc
mov
xor
push
in
fmuls
ljmp
cwtl
into
dec
aas
push
mov
xor
shlb
rorb
jle
dec
scas
mov
cs
pop
iret
popa
repnz
jmp
cli
inc
mov
add
ret
jecxz
ds
gs
inc
jnp
cltd
pop
ja
movsb
stos
jno
popa
mov
sbb
push
cld
in
icebp
push
fcomip
fildll
lds
jno
fs
xchg
shlb
cmp
jns
dec
sbb
imul
daa
lock
dec
jne
push
ja
add
adc
lcall
xchg
or
fnstcw
mov
add
cmp
cltd
mov
rol
mov
pop
mov
test
push
in
or
pop
insb
cld
das
push
imul
lods
mov
jns
movsb
adc
xchg
fisubl
sub
lea
mov
xor
je
out
and
sbb
sbb
arpl
xchg
stos
and
add
mov
push
adc
lahf
push
xor
cmp
add
xchg
jg
fisubrs
cmp
std
insb
rcrl
mov
js
jnp
adc
test
mov
jbe
sbb
sbb
movsb
xchg
sbb
sub
lock
push
push
or
xchg
add
das
jb
mov
fisttpl
test
jle
cld
pusha
jo
add
pop
pushf
mov
mov
and
lods
popf
shll
out
imul
add
test
xchg
cld
mov
fnstcw
ss
jbe
das
mov
xor
or
jne
pop
add
insb
ljmp
push
ret
dec
mov
pop
add
mov
pushf
pop
dec
add
push
call
dec
jbe
lcall
mov
dec
mov
pop
xor
mov
add
xchg
dec
sbb
jb
or
mov
and
lahf
ds
xchg
cmp
add
or
repz
xor
jmp
popf
mov
dec
mov
jne
cli
cmp
out
xchg
out
lret
push
dec
shlb
and
lds
cmpsl
mov
js
and
int
in
inc
out
jecxz
jne
lods
addr16
ror
shrb
and
lock
lret
pop
lret
dec
or
or
data16
fiaddl
sub
out
imul
pop
push
clc
push
adc
ljmp
pushf
sub
test
testl
inc
popf
into
int3
jne
insb
mov
sub
cmp
cmp
jecxz
mov
mov
add
insl
daa
xchg
hlt
ja
jb
or
xchg
jmp
jno
fldt
rolb
pushf
cmp
jl
push
mov
mov
and
jns
repz
mov
out
aad
pusha
movsl
mov
ret
scas
fcoms
shl
mov
push
xchg
jb
out
ret
add
mov
out
bswap
fs
add
lret
mov
repz
fiadds
xchg
imul
rclb
mov
loop
mov
inc
out
sahf
addr16
ds
icebp
repz
push
mov
pushf
dec
lods
inc
inc
push
jne
shll
cmp
jge
addw
imulb
pushf
lret
xor
or
inc
stc
loop
sbb
mov
scas
mov
pop
inc
lahf
and
cld
inc
repnz
mov
imul
insl
or
mov
sbb
jecxz
jecxz
pop
jne
je
hlt
xchg
mov
roll
ret
jge
sub
daa
xor
sub
cmp
jno
mov
cmp
out
dec
or
jns
cld
dec
mov
out
dec
insb
xchg
cmc
mov
or
movsl
dec
mov
xorb
push
inc
pop
cmp
shr
repz
jl
jb
sbb
jnp
mov
ljmp
sahf
int
push
xor
les
roll
dec
mov
xchg
pop
xor
hlt
mov
lds
in
adc
xchg
mov
add
push
xchg
add
out
push
rcll
xchg
mov
or
jl
jmp
leave
or
sub
ret
lret
jg
adc
test
sahf
push
xor
dec
cmp
xchg
subb
lcall
inc
int
aas
or
popf
xchg
and
lret
sbb
add
adc
dec
push
mov
and
push
inc
cmc
pop
push
ja
je
lods
dec
add
or
icebp
pushf
nop
mov
mov
int3
pop
jno
adc
xchg
pop
push
loope
loop
mov
jnp
out
gs
mov
es
dec
movsb
jno
push
mov
cld
sti
fisttpl
cmpsb
pushf
jns
jno
stc
data16
scas
movsb
push
loopne
and
scas
or
jnp
lahf
lock
xchg
xchg
cmp
lret
test
lcall
movsl
es
mov
lcall
pushaw
mov
icebp
ret
out
insb
test
jne
cwtl
mov
out
pusha
jp
lods
mov
das
nop
or
mov
mov
clc
popf
std
mov
mov
mov
cld
daa
imul
and
loopne
xchg
hlt
ljmp
leave
jae
xchg
push
inc
or
adc
in
cli
aad
push
lcall
mov
shll
xor
dec
scas
outsb
enter
dec
xchg
mov
das
shr
push
push
add
jo
mov
jle
in
ret
mov
pop
mov
mov
sub
lret
cli
sahf
xor
testl
loopne
test
flds
daa
inc
es
jae
add
and
add
mov
in
sti
mov
stos
adc
imul
enter
xchg
mov
xor
out
lret
lods
mov
cmpsb
fst
std
sbb
cld
jno
daa
jecxz
push
test
mov
arpl
aaa
imul
adc
jle
out
or
sbb
fldt
jg
dec
das
mov
ss
mov
daa
pop
iret
sbb
movsb
and
xchg
imul
repz
les
push
jnp
stos
push
mov
dec
aaa
arpl
sbb
xor
mov
lret
ss
mov
sub
jb
adc
test
push
pop
jle
pop
in
repz
int3
scas
jnp,pn
sbb
std
mov
push
andb
aam
push
jecxz
imull
or
adc
mov
insb
aad
jle
pop
es
idivl
sbbb
fisttps
xor
pop
call
jo
cmpsb
mov
sbb
mov
cmp
test
or
cmp
add
jmp
or
jp
sub
popa
add
and
mov
stc
cmc
lret
push
lahf
jne
xchg
sbb
icebp
jb
push
sbb
adcl
push
push
push
ret
dec
jnp
pop
push
and
imul
adc
jl
dec
or
insb
adc
jb
pop
add
lret
lret
inc
scas
rolb
outsb
pop
lcall
enter
and
jecxz
cmpsb
cmp
mov
mov
add
sbbl
pop
adc
sbb
lahf
fs
mov
mov
or
push
jecxz
bound
shll
or
loope
testl
dec
push
scas
je
rcrl
notb
loope
inc
fistpl
repz
mov
jae
adc
pushf
pop
xor
aam
sbb
xchg
inc
adc
shld
cltd
inc
xchg
jae
pushf
insl
sub
iret
push
pop
lods
xor
and
pushf
scas
out
lock
mov
xchg
icebp
loopne
sbb
cmpsb
rorl
ds
and
jg
sub
jl
and
std
pop
jmp
repz
lcall
sub
aam
push
sub
jl
push
gs
xchg
jo
xchg
fwait
sub
xchg
xchg
push
lret
out
fnstcw
ret
out
mov
mov
incl
movl
push
scas
pop
aaa
sarb
lods
mov
pop
xorl
popf
xchg
es
stos
xchg
testl
into
fstl
push
fchs
and
nop
mov
jge
add
mov
mov
test
in
xchg
add
push
ljmp
lods
xchg
enter
push
jge,pt
fistps
in
cmpsl
jl
outsl
rcrl
repnz
int3
mov
out
xor
fidivl
add
jae
sbb
fstps
movsl
enter
lret
in
ja
aad
addr16
lahf
btc
sarl
ret
mov
mov
xchg
outsl
ja
sti
sub
adc
es
push
jne
lahf
popa
icebp
inc
inc
sub
push
clc
jno
push
pop
xor
cld
mov
add
cmp
mov
push
dec
mov
xchg
pop
add
lret
les
xor
cmc
pop
inc
cmp
sti
repnz
lock
lahf
in
pusha
xor
dec
or
push
pop
lock
mov
xchg
popf
mov
loope
fimull
iret
add
sbbl
pop
push
mov
inc
inc
lock
push
icebp
jl
addb
dec
test
daa
lods
test
add
or
loopne
orb
mov
in
jp
sub
clc
out
loopne
test
mov
or
mov
jo
cli
stos
movsb
or
cmp
testl
movsl
inc
jne
je
xor
jae
insb
cmpsl
push
xchg
xor
cmp
mov
das
dec
daa
lea
sub
sbb
or
int3
or
adc
or
popa
and
lea
movsb
jne
mov
hlt
push
je
jle
sbb
jae
mov
notl
xchg
fisttpll
dec
inc
cmp
mov
add
imul
pushf
and
xlat
inc
mov
sub
push
jl
imul
leave
push
arpl
es
jl
int3
loope
mov
push
nop
adc
mov
in
xor
sbb
mov
pop
sub
sbb
fwait
inc
les
lds
aaa
xchg
add
into
lds
xor
dec
mov
adc
push
std
rcll
out
and
orl
aad
mov
and
jne
mov
add
out
adc
sbb
mov
and
mov
sbb
lret
les
movsb
mov
mov
ret
mov
js
jns
addb
and
pop
sub
nop
xor
push
dec
lods
inc
ljmp
pop
insl
jecxz
mov
mov
data16
pop
pop
mov
test
sbb
adc
notb
cltd
fidivrl
inc
movsl
mov
jbe
repnz
fdivl
ljmp
inc
pop
xchg
inc
ds
pop
pusha
fists
mov
out
cmc
cld
bound
test
fcmovbe
orb
jo
sub
add
faddl
testb
ja
lahf
gs
and
mov
push
mov
add
outsb
and
ret
dec
fcmovb
fwait
pushf
jnp
dec
movsb
jno
lret
icebp
call
cwtl
xlat
fsub
xor
xor
or
pop
out
sub
push
pop
cmp
and
adc
sarl
xor
aas
jg
sbb
push
xor
sbb
pcmpeqd
mov
aaa
push
mov
outsb
jl
call
inc
hlt
adc
popf
add
push
aam
xor
or
xchg
sbb
push
in
add
int
lods
insb
xchg
cmp
sahf
xchg
ss
pop
xor
pop
je
movsb
xor
popf
imul
sub
mov
cmp
repz
addr16
jmp
fs
test
insl
xor
iret
or
jno
pop
subb
lret
fidivrs
cmpsb
in
add
in
popf
cmpsl
nop
cld
pop
push
adc
sahf
inc
add
out
aaa
gs
sti
lahf
jp
inc
ret
mov
fcoms
sub
mov
enter
mov
std
sub
mov
add
dec
test
push
mov
add
imul
push
dec
push
jnp
mov
or
stos
or
mov
mov
cmp
inc
div
adc
and
addl
aad
fwait
lock
and
inc
jecxz
test
mov
jo
xor
jg
push
clc
adc
jg,pt
iret
adc
insl
mov
mov
mov
xor
js
sbb
cmp
pop
sti
fstl
mov
mov
scas
les
add
and
cmp
add
cmc
mov
stos
mov
xchg
les
pop
rolb
jo
rcrb
and
mov
jg
mov
lds
push
xlat
and
pop
jg
pop
xchg
loop
popf
outsb
xlat
cmp
push
addr16
push
stos
outsb
push
pusha
test
scas
hlt
repnz
jb
jno
inc
cmc
popl
pop
mov
and
push
cltd
sbb
movsl
lcall
adc
ficompl
cwtl
call
outsl
mov
mov
pushf
cmp
loop
mov
fidivl
push
mov
push
push
add
pop
sub
sub
pop
ds
xchg
movsl
or
jl
pop
xor
push
xor
push
or
addr16
stos
sahf
pop
sbb
mov
movsl
sbb
gs
lock
mov
sarb
cmp
push
insb
lods
leave
or
repz
test
cld
xchg
arpl
push
fistl
pop
add
cld
adc
cmp
add
rcll
cmp
cmp
cwtl
xchg
xchg
jo
insb
lcall
mov
lock
sahf
mov
pusha
int3
push
and
incb
cmc
cmp
imul
scas
test
add
adc
sbb
out
stos
push
divb
pop
cmpb
call
scas
popa
cmpl
mov
insl
stc
jp
pop
cmp
aad
push
outsb
mov
shrb
rcl
lods
mov
jae
test
lcall
cmp
sub
dec
orb
sub
lahf
jecxz
push
jp
sbb
xchg
pop
jmp
mov
ja
sbb
xor
inc
sbb
push
mov
sbb
orl
pop
cmp
jge
adc
movsl
stos
sbb
shlb
push
lock
pop
add
dec
call
inc
or
add
cmc
push
cmp
mov
mov
lret
mov
sbb
repnz
lahf
out
jns
insb
adc
es
roll
ret
push
add
lret
jecxz
jp
jbe
ret
repz
xchg
inc
mov
mov
in
bound
xor
push
adc
testl
movl
push
imul
mov
dec
mov
mov
cmp
cli
aam
push
mov
xor
inc
or
mov
insl
test
mov
adc
nop
mov
xor
xor
xchg
push
xchg
xchg
lock
sbb
jnp
mov
ljmp
mov
xchg
jne
adc
fmull
repnz
sbbl
imulb
add
pop
int3
jecxz
push
cmp
xor
add
mov
mov
rolb
arpl
pop
aad
xor
inc
and
pop
daa
sub
push
cmpsb
incb
sub
lock
jo
fnsave
or
ja
pop
push
in
into
adc
and
mov
repz
inc
in
add
jmp
arpl
pop
sub
or
in
gs
xor
sti
std
sbb
sub
sbb
popf
mov
jae
xor
mov
pop
inc
pop
test
dec
stc
xchg
lret
dec
ljmp
test
mov
out
pop
mov
insb
sub
jg
adc
adc
movsl
sbb
xchg
orb
sbb
mov
push
jmp
pop
out
mull
mov
jbe
mov
stc
adc
jg
sub
jmp
or
aas
adc
subl
mov
scas
jbe
and
aad
dec
cmp
add
jp
arpl
loope
cmpsl
popa
xchg
pusha
jbe
movsb
push
imulb
fisttpl
movsl
daa
loopne
filds
pop
stos
out
mov
ret
adc
cmp
dec
xchg
lahf
mov
sub
cmp
push
arpl
xchg
idivl
mov
mov
lea
test
mov
cltd
dec
sarl
sub
cltd
inc
sbb
lea
insb
pop
adc
mov
loope
pop
aam
enter
jo
add
hlt
mov
outsl
mov
mov
lret
bound
sarb
ss
ret
sub
and
xor
push
jbe
dec
jns
pop
sahf
sbb
pop
sbb
cmpsl
mov
pop
push
mov
mov
push
fstpt
push
mov
jo
jbe
daa
xchg
inc
hlt
out
stc
and
mov
jp
xchg
add
jne
xor
jge
popa
pusha
cmp
jnp
pushw
mov
and
mov
sbb
sbbl
and
pop
mov
lock
arpl
mov
popa
mov
mulb
out
mov
cmp
pop
into
repz
fnstcw
lods
lcall
sbb
jbe
into
das
in
out
push
jle
test
jecxz
jmp
adcl
imul
pop
add
adc
mov
cmpsb
jecxz
mov
add
stc
aad
lods
cwtl
mov
pusha
inc
xorb
in
in
mov
inc
fimull
mov
movsl
xchg
xchg
out
outsl
aaa
pop
sbb
cmp
rcll
movsl
jo
push
scas
mov
imul
lods
adc
adc
nop
cs
cmc
xchg
adc
sub
fcmovnb
pop
inc
jmp
loopne,pn
loopne
incl
jne
mov
outsb
sbbb
jp
call
jns
push
clc
mov
pop
push
pusha
imul
in
pusha
insl
push
mov
scas
pop
and
shlb
mov
test
sbb
ds
inc
mov
mov
cmp
and
jne
cmp
outsb
aad
les
add
jmp
push
inc
push
out
mov
mov
jb
insl
bound
push
and
add
jp
imul
dec
sbb
fsubrp
hlt
inc
mov
sbb
je
bound
jl
adc
insb
inc
stc
and
inc
cltd
scas
cmp
and
scas
aam
cli
mov
imulb
jns
lahf
xchg
inc
decl
filds
es
sub
jmp
sbb
arpl
sbb
xchg
jp
out
dec
sub
dec
push
mov
cwtl
clc
add
aaa
adc
repnz
xchg
cld
in
ss
mov
loop
mov
insb
lock
js
enter
inc
jecxz
clc
adc
or
in
ss
mov
dec
lods
sbb
pusha
daa
or
stos
xchg
mov
pop
cmpsb
mov
pop
push
icebp
cmp
xchg
into
roll
mulb
xchg
fistps
pop
inc
xchg
adc
jecxz
add
push
mov
jge
push
cmp
jbe
inc
loope
pop
gs
and
hlt
xchg
push
jle
xor
cmpsl
adc
xlat
xorb
bound
lcall
adc
add
fnstenv
inc
push
jp
xchg
lret
mov
push
imul
stos
inc
sbb
lea
jne
cmovs
das
pop
movsb
aad
imul
jmp
push
movsb
push
repnz
addr16
popl
mov
bound
add
jmp
xor
imul
add
adcb
adc
jmp
gs
test
ss
add
or
mov
lcall
fstp
je
rorl
xor
xor
stos
fistl
mov
and
mov
pop
sub
ret
icebp
fsubl
xor
inc
jp
arpl
pop
jge
mov
mov
das
fld
shll
sti
ret
lret
push
rcrb
push
jp
notb
cltd
add
pop
push
push
xor
icebp
clc
hlt
sbb
aas
jg
inc
inc
ds
mov
sub
jae
add
xor
test
xor
push
push
mov
lea
mov
inc
popa
cmp
push
stos
cli
lret
mov
in
hlt
shll
int
cmpsl
mov
les
shrb
and
test
int3
stos
add
rclb
dec
cs
int3
jo
in
das
jmp
add
lea
pusha
in
and
inc
pop
jp
pop
adc
lret
jge
sub
dec
cli
enter
stc
dec
shl
aas
push
mov
pop
adc
test
adc
push
negb
push
xor
xor
in
push
out
sbb
or
jns
cmp
dec
js
jle
xor
lock
cwtl
cld
cmc
arpl
xchg
push
popf
aaa
lods
inc
ja
push
fsub
adc
mov
jae
push
jae
jae
in
or
shl
orb
ror
adc
mov
push
dec
clc
xchg
into
ret
xchg
and
push
je
stos
mov
pop
and
js
push
add
cld
repnz
shl
cs
dec
cld
add
test
shll
cmp
lret
cmp
pop
jnp
idivl
add
sub
hlt
jae
fnsave
jae
sub
lock
test
mov
movsb
cwtl
cwtl
adcb
push
into
roll
cmp
daa
sbb
pop
cmpsl
and
clc
inc
and
gs
push
xor
jmp
rcrl
mov
cmpsl
pop
inc
out
push
push
ja
mov
dec
in
cmpb
mov
aaa
xchg
add
pop
repz
repnz
aaa
or
rolb
jle
jp
sbb
mov
mov
sbb
out
aam
mulb
bound
in
inc
loop
stc
jg
or
pop
push
xorl
mov
xor
lods
popa
xorb
sub
push
scas
mov
lcall
adc
sub
iret
adc
stos
and
adc
xor
incl
out
loopne
imul
push
jge
push
and
jne
fisubl
in
iret
out
xor
xchg
xchg
lds
or
jecxz
aaa
insb
rcll
and
sahf
aaa
mov
int3
sub
outsl
cmp
cmp
sbb
mov
daa
es
imul
cmp
jbe
lcall
xor
js
shl
sbb
add
cmp
call
dec
sub
cmp
in
cwtl
pop
inc
bound
aas
les
call
sub
daa
aaa
push
stc
dec
add
xor
fsubrl
sbb
lahf
repnz
jno
xchg
in
fbstp
jb
in
aaa
fdivr
inc
xchg
test
rdmsr
cltd
movsl
jo
stos
pop
flds
mov
js
jecxz
mov
cmp
nop
enter
xor
out
xor
sub
dec
mov
pop
xchg
aad
xor
sub
fwait
sahf
inc
push
fldcw
mov
jge
push
pop
inc
cmp
das
jg
in
outsl
jge
lock
mov
test
pop
test
jnp
iret
push
loopne
stos
dec
jno
or
stc
jnp
pop
int3
arpl
sti
jl
xor
cli
mov
vmread
dec
adc
repz
and
fdivrl
xchg
xchg
mov
cltd
push
int3
rep
mov
mov
push
ficoms
repnz
fnstcw
sub
outsl
int
insl
lea
adc
mov
push
dec
into
inc
push
sbb
cmp
adc
lret
fwait
xchg
mov
mov
pop
insl
rclb
outsb
xor
or
xchg
adc
sbb
mov
aas
hlt
sub
xchg
fisttpll
jb
push
push
sbb
scas
xchg
xchg
mov
call
icebp
mov
test
lea
aam
push
xlat
nop
daa
adc
xor
mov
sar
dec
cmp
jge
adc
into
inc
mov
pop
clc
push
hlt
das
xor
es
xchg
mov
mov
add
fs
push
pop
std
fcomps
cltd
sbb
add
out
mov
lock
and
fcoml
aaa
adc
mov
out
and
outsl
test
jl
cmpsb
scas
mov
icebp
fs
or
lret
cwtl
xchg
subl
fs
mov
loop
aam
inc
pop
stos
int
dec
out
icebp
out
hlt
pop
outsl
cltd
arpl
xchg
sarl
scas
sub
rolb
dec
jl
pusha
jo
test
popf
stc
test
mov
ljmp
push
mov
jecxz
das
addl
outsb
popa
pop
outsb
and
adc
sbb
jne
loopne
jg
fstl
mov
sbb
pop
out
bound
daa
push
fsubrl
mov
xchg
mov
aad
push
add
xchg
enter
mov
mov
pushf
aad
mov
cmp
dec
ret
aam
fidivl
push
bound
sbb
lods
adc
pushf
mov
daa
mov
ja
je
xor
loope
xchg
imul
pop
rcr
out
push
inc
push
repz
scas
in
mov
xlat
addr16
xlat
clc
mov
lret
stos
sub
mov
cmc
mov
push
mov
jnp
cmp
andb
in
lock
xor
mov
inc
or
lds
cmp
int
ds
and
aas
adc
pop
add
jle
cmp
xchg
addr16
pop
mov
sub
cmpl
nop
jb
cmp
or
aaa
out
mov
adc
int
rorl
pop
cs
movsb
shll
mov
hlt
xor
sbb
lods
mov
push
xchg
ljmp
enter
cmp
add
ret
push
shr
jl
into
adc
addb
lcall
std
jno
cmpsb
aam
std
adc
add
jns
mov
dec
test
sbb
pop
dec
push
sbb
rcll
scas
test
pop
xchg
cmpsb
int
xor
cmp
out
mov
jp
shr
lret
push
cs
inc
push
push
std
dec
ficomps
shl
movsl
adc
jle
dec
cltd
dec
mov
push
xor
repz
and
pop
jl
pop
xchg
cli
or
cmp
or
out
mov
cmpsb
inc
sub
test
mov
dec
outsl
lahf
add
add
bound
lcall
mov
addb
mov
sbb
push
shrl
test
cmp
mov
pop
shrl
lock
sbb
dec
sub
xchg
jmp
shll
or
add
mov
or
inc
pop
aas
and
jl
fnstenv
push
push
movsl
aas
xor
scas
daa
rorb
andl
repnz
or
jne
fdivl
loop
call
movsb
test
dec
test
movsl
lds
and
addr16
sbb
mov
jb
outsl
movsb
loopne
fmul
sahf
jge
rcrb
ja
mov
or
mov
gs
jl
repnz
add
insl
mov
das
push
mov
adc
lock
mov
xchg
push
sbbb
cmpsl
sub
pop
add
pop
inc
cmpsb
dec
rol
aas
das
mov
cmp
mov
ds
cmp
sub
mov
outsl
mov
shlb
lea
mov
fcmovnu
xchg
rolb
and
arpl
test
aam
fsubl
dec
mov
xor
popf
cld
sahf
xchg
insl
lret
icebp
movsb
jge
cmp
xchg
dec
sbb
lock
scas
call
pop
mov
popa
mov
daa
cmp
lcall
inc
jle
mov
shlb
push
stos
cltd
popa
fildll
ret
data16
cmp
enter
sti
bnd
cli
pop
loopne
dec
fwait
pop
leave
mov
imull
enter
lea
outsl
outsb
aaa
cmp
mov
or
and
fcmovnbe
arpl
add
mov
pop
std
mov
ss
sbb
push
or
fisubl
sbb
shrl
sbb
sub
fdivs
sbb
in
jns
shll
in
xchg
testl
nop
iret
cmp
idivl
lcall
imul
mov
fstpl
push
mov
test
adc
out
push
das
outsl
sbb
pop
inc
sbb
sarl
jp
sub
out
mov
jns
adcb
lds
movsl
cwtl
call
addr16
mov
push
movsb
add
jo
mov
cmpsb
push
out
cmp
mov
and
push
or
pop
scas
and
cltd
adc
or
push
not
cmc
sahf
sarl
loopne
lock
cmp
sub
jp
mov
jge
sbb
aad
push
cs
leave
inc
cmpb
ret
inc
pop
pop
xor
repz
sbb
inc
addr16
and
pop
dec
mov
in
cmc
sub
ds
push
jle
add
inc
dec
mov
sbb
push
mov
dec
sbb
out
lods
in
mov
push
fimuls
mov
sbb
mov
add
jb
mov
inc
icebp
sarb
orb
testl
push
cwtl
and
outsl
sbb
add
jge
lods
cmp
ret
outsb
hlt
test
into
dec
cmpsl
gs
fdivl
cmpsb
ss
adc
jl
adc
and
insl
cmpsl
or
test
xor
cmp
adc
loop
les
test
xor
xchg
ret
out
dec
fstl
push
jge
mov
jno
dec
test
mov
pop
add
std
es
js
add
inc
in
mulb
fnsave
push
or
jno
push
pop
xchg
lcall
fucom
xchg
fimuls
or
sbb
je
mov
dec
pop
inc
fldcw
clc
mov
push
sub
push
dec
push
scas
cmc
pusha
fwait
xchg
xchg
mov
std
mov
jne
cmpsl
pop
mov
cs
lods
jmp
adc
movsl
xor
in
inc
and
out
xor
shrl
shll
push
sar
jo
xor
sub
adcb
sti
mov
cmp
pop
cwtl
repnz
jb
mov
clc
lahf
outsb
outsb
push
leave
sub
cmp
xlat
sbbb
sahf
mov
xchg
jae
loop
sub
pop
in
jle
or
pop
cli
shll
xor
sbb
ret
pop
repz
adc
dec
in
jne
scas
call
ds
cmp
adc
and
xchg
mov
call
cmp
jp,pn
or
lds
cli
pop
mov
sub
fisubrl
scas
aaa
push
cmpsl
sti
sub
mov
mov
push
idivl
aaa
pop
scas
adc
mov
arpl
fistps
fwait
cmpb
incb
rorb
xor
push
pop
popa
in
inc
imul
hlt
jns
int3
xor
push
jb
stos
cmpsl
xor
push
lret
js
scas
loop
shrl
cmp
fistps
in
mov
loope
and
jo
mov
imul
fildll
insb
cmp
add
dec
sub
cmpsl
dec
add
sahf
popa
test
push
sbb
inc
arpl
xor
jno
jecxz
sub
lods
std
aad
outsb
inc
xchg
inc
ljmp
mov
loopne
int
mov
test
pop
xor
jecxz
stc
inc
xchg
lret
sub
mov
mov
mov
sub
push
and
fdivp
rolb
subb
xor
lods
push
mov
cmpsl
subb
xchg
fldcw
mov
into
leave
les
cmp
pop
and
fcomps
pop
pushf
loope
inc
push
mov
ja
js
xor
mov
enter
cmp
repz
adcl
std
mov
pop
push
sbb
pop
stc
push
js
repnz
sub
and
dec
pop
jmp
cmpsl
pop
ss
inc
lcall
sbb
mov
add
sarb
in
cmpsl
int
imul
add
lcall
rcll
mov
cmp
lahf
sbb
ss
cmpsl
imull
pusha
pop
mov
imul
fs
xchg
dec
push
outsb
push
mov
cmpsb
es
rcr
jo
mov
movb
daa
pop
test
xchg
lods
out
add
sahf
dec
add
inc
mov
or
and
inc
mull
cwtl
fiaddl
test
xor
mov
push
jo
pop
inc
into
pop
pop
inc
into
inc
out
push
test
inc
jo
lahf
in
inc
dec
mov
addr16
and
cmp
hlt
sbb
sub
out
imulb
mov
adc
or
pop
inc
out
jns
dec
aad
mov
pushf
mov
stos
test
iret
int
scas
pushf
jge
mov
push
xchg
sub
rcrl
xchg
sti
mov
jne
mov
arpl
adc
pop
arpl
das
stc
pop
push
mov
cmp
inc
jp
and
and
mov
out
fmuls
movsl
inc
cwtl
push
adc
mov
pop
insb
jg
xchg
and
push
out
inc
xchg
pop
mov
cmp
mov
pushf
ret
jae
into
pop
dec
pop
mov
xor
addb
push
loope
dec
mov
and
call
gs
cmp
mov
out
sbb
xchg
mov
call
or
clc
cld
and
xor
test
into
pop
daa
fimull
cld
into
movsb
push
cli
mov
adc
pop
lret
imul
sub
xchg
xchg
inc
cmc
mov
xlat
inc
mov
fstpl
in
adc
mov
lahf
lret
mov
fists
js
stos
xchg
sub
pusha
scas
sbb
stc
in
int
xor
push
xchg
out
testl
pop
inc
xor
xchg
out
inc
loope
pop
push
mov
cmp
loop
das
cmp
cmpsl
xor
fadd
test
mov
pop
xor
sub
in
outsb
out
jge
dec
jge
dec
push
push
jge
cmp
adc
pop
xor
lahf
loopne
scas
xor
fwait
dec
adc
dec
shlb
rorb
push
add
in
out
sbb
adc
dec
mov
dec
outsb
lcall
jp
mov
adc
jl
adc
inc
jecxz
xor
dec
push
outsl
imull
adc
gs
mov
xchg
pop
or
cs
sub
out
xor
aas
and
repnz
stc
js
cmp
inc
dec
or
sub
mov
sbb
jmp
add
jecxz
and
xchg
fistpl
ljmp
dec
cmpsl
xor
inc
push
rcrb
cld
push
jbe
scas
ljmp
cmp
outsb
and
jmp
jge
pop
xchg
add
ret
int3
pusha
call
insb
dec
subl
stos
fwait
sub
pop
pusha
in
mov
dec
pop
aad
das
cltd
insl
xchg
or
inc
mov
or
cwtl
inc
jo
leave
int3
stos
iret
cmp
mov
mov
and
gs
jo
fucomip
sbb
jns,pt
adc
je
push
fnstcw
jmp
xlat
and
movsl
inc
mov
xor
sarl
fwait
scas
cmpb
jge
out
cmp
sets
sub
add
xchg
fstps
and
movl
and
es
sbb
pushf
mov
enter
dec
cmpsb
push
dec
mov
mov
into
inc
imul
or
stos
hlt
popf
rcrb
push
enter
shll
es
adc
cmp
loop
mov
cmp
pop
gs
sbb
movsl
orl
bound
shl
xor
inc
xchg
mov
inc
jns
sti
xor
fcomi
aas
lods
adc
hlt
jb
shll
xor
push
or
inc
xchg
hlt
sub
sti
jge
sahf
in
mov
jp
push
data16
xor
fstpl
xchg
into
mov
mov
sti
leave
out
loop
mov
les
adc
xchg
cmp
gs
mov
add
movsl
cpuid
loop
dec
in
loop
inc
shlb
add
cmpsl
arpl
mov
aam
jb
cmpsb
pop
pop
dec
test
adc
xchg
outsl
or
data16
int
pushf
cmp
leave
fidivl
mov
sub
inc
sub
scas
cmp
movsb
shrb
dec
insl
and
mov
out
fcompl
cmp
dec
insb
mov
jno
xor
xchg
inc
inc
hlt
xchg
push
push
in
mov
pusha
mov
stos
inc
pop
xchg
xor
xchg
push
sbb
cmc
cli
lods
test
sbb
std
or
and
xchg
movsl
adc
push
dec
cmp
loop
cwtl
call
imulb
mov
xchg
pop
aaa
lret
xor
add
cltd
scas
test
aas
sbb
pop
jmp
xchg
dec
aas
scas
jno
call
jmp
pop
cs
pop
and
mov
call
mov
jne
ja
popf
cmp
int3
cmp
sbb
into
jecxz
push
or
cmp
int3
sub
test
sub
data16
pop
push
aam
or
mov
outsl
pushf
or
div
std
push
push
xor
inc
shlb
clc
ret
sub
das
xchg
sarb
push
cmc
sbb
push
dec
mov
cli
ja
loope
adcl
scas
and
icebp
pop
gs
rcrb
stc
je
ficoml
sbb
imul
cmp
jle
popa
mov
mov
sbb
add
push
add
sbb
mov
sbb
xorb
xchg
jmp
loop
and
pop
xor
xlat
ds
hlt
add
jo
or
stos
cmp
shl
xor
cltd
xlat
in
dec
jp
adc
outsl
pushf
bound
loopne
hlt
xchg
aad
mov
leave
mov
inc
out
les
out
push
sbb
inc
or
sbb
ret
inc
in
sub
mov
add
aam
in
push
les
xchg
pop
cmpsl
fbstp
xor
dec
pop
popf
je
push
mov
sub
ret
ds
mov
cmpsl
xchg
jl
outsl
push
fldl
call
and
add
loope
xor
jge
scas
fistpl
jg
or
mov
imul
call
and
ljmp
cwtl
leave
or
ja
lds
pop
test
out
mov
out
pop
bound
clc
jl
mov
xchg
mov
push
outsl
les
jae
in
iret
mov
std
ret
popf
jle
cmpsl
fimull
adc
daa
clc
ds
pop
ss
dec
sbbb
xor
adc
jnp
cmp
xchg
jg
inc
insb
or
push
into
js
and
loopne
in
jl
pop
jp
push
les
pop
dec
sti
xchg
pushf
and
push
fptan
addr16
cld
dec
jb
inc
mov
mov
xchg
je
mov
mov
xor
jns
cmpsb
cmp
jmp
and
fsts
rclb
scas
clc
pop
idivl
inc
add
cli
ret
cwtl
cld
dec
or
mov
push
lret
dec
rorb
cmp
add
mov
sbb
and
outsb
fisttps
mov
ja
sbb
fnstenv
xchg
add
test
jecxz
xor
push
bound
push
aas
adcb
sbb
vcvtss2sd
pushf
pop
lahf
xor
cmc
cmp
jl
shrl
mov
faddp
push
gs
lods
and
out
rcl
movb
or
sbb
mull
xchg
jae
cmp
sbbl
decl
pop
jl
sbb
sub
test
in
int3
adc
nop
lea
enter
sbb
pop
test
pop
mov
xor
leave
xchg
xor
add
das
pop
xor
xor
dec
dec
cmc
sarb
imul
pop
pop
fidivs
cmp
inc
in
dec
push
or
rol
xor
imul
addb
and
jmp
mov
xor
mov
adc
mov
scas
testb
sbb
clc
in
stos
xlat
stc
cmp
mov
out
movsb
mov
aas
lods
jne
adc
adc
pop
in
pop
mov
iret
arpl
push
loope
fistpl
bound
sub
inc
pop
sbb
mov
fs
imul
fldt
or
xor
pop
shrl
fdivs
stc
rorl
ljmp
je
sahf
push
stos
mov
addr16
fadds
ret
jns
mov
jle
jnp
dec
arpl
mov
inc
cs
jge
lods
dec
and
xor
inc
mov
cmp
and
repz
stc
pusha
push
aas
aam
and
mov
or
psrlw
stos
mov
jmp
leave
push
sbb
adc
add
cmpsb
mov
push
insl
nop
fsubp
fcomps
fiaddl
mov
ljmp
test
in
xchg
sahf
dec
mov
dec
lds
mov
mov
and
inc
addb
xchg
mov
in
sbb
dec
mov
addr16
je,pn
mov
pop
sar
mov
jns
js
outsl
mov
xchg
jno
outsb
lods
mov
fidivrs
inc
mov
jg
sahf
pushl
sbb
loopne
sub
stos
dec
mov
jae
shll
cmp
ror
stos
dec
mov
xor
xor
popf
insb
sbb
add
push
addr16
pushf
mov
pushl
sub
sub
mov
aaa
hlt
cli
or
mov
mov
mov
lcall
int3
mov
mov
push
imul
pop
sarb
pop
mov
addr16
xchg
push
sbbb
cmpsb
xlat
dec
fdivrs
lret
inc
addl
enter
mov
mov
faddl
jp
aas
ret
xchg
or
movsl
movsl
adc
popa
push
sbb
adcb
ss
and
mov
jmp
lcall
aaa
out
mov
insl
cmp
adc
mov
lods
mulb
push
adc
dec
inc
push
out
mov
movsb
lret
pop
and
mov
dec
xchg
rorb
movsl
es
lods
loopne
mov
lock
add
divl
adc
fsubs
dec
cld
push
sbb
xchg
outsl
pop
mov
sub
mov
mov
xchg
lock
xchg
daa
inc
pop
cs
fstpt
insl
enter
jmp
imul
jbe
insl
aaa
mov
jge
into
inc
sbb
push
or
int3
cltd
cltd
sbb
idivl
roll
push
iret
mov
es
stc
and
cmp
and
add
push
cmp
mov
add
pop
fdivrl
testl
add
pusha
addb
mov
dec
xchg
shll
incl
push
repnz
ljmp
arpl
jp
cmp
cmp
loopne
mov
dec
aad
ret
fstpl
mov
xor
decl
pop
xchg
sbb
or
ds
test
dec
mov
mov
pop
dec
pop
cwtl
xchg
dec
bnd
mov
sub
inc
es
aam
cmp
xchg
shr
clc
test
pop
adc
ja
push
pop
cwtl
test
sbb
xchg
shrl
lds
into
jg
adc
addl
call
push
ljmp
into
mov
xchg
lahf
addr16
into
es
movsl
scas
mov
adc
je
pop
sbbl
or
sbb
xor
push
cs
mov
mov
daa
imul
push
mov
cli
daa
out
jp
rorl
test
push
mov
jae
dec
in
cwtl
nop
je
xchg
and
mov
inc
xor
sub
mov
repnz
xchg
ja
or
xchg
mov
jg
mov
inc
movsl
sbb
cmpsb
xchg
in
add
sti
adc
rorl
jecxz
stos
sbb
sbb
int3
mov
fs
xor
cli
insb
repnz
fidivrl
sub
arpl
dec
movsb
or
xor
bound
xor
outsl
fcmovnu
fsubp
push
stos
enter
inc
fwait
lds
dec
enter
repnz
pop
orb
cmc
das
outsl
pop
and
lcall
sbb
lret
loop
xor
mov
dec
sbb
fmuls
and
mov
jnp
ficoml
out
mov
cs
lret
mov
dec
sub
fcomp
sbbb
jmp
gs
dec
dec
jne
mov
pop
pop
rolb
mov
sub
bound
in
push
into
imul
cmp
pop
enter
push
mov
cmp
xchg
add
lret
add
je
movsl
sbb
xchg
or
push
icebp
adc
aam
mov
jle
imul
stos
fldenv
mov
xchg
fisttps
mov
sbbb
cs
imul
sub
pop
dec
movsb
mov
pop
mov
xchg
push
mov
outsb
inc
clc
xlat
adcb
push
add
sub
xor
push
test
ret
sahf
stos
xor
cmp
jno
in
lret
mov
std
inc
pushf
pushf
inc
addl
daa
xchg
dec
or
or
pop
out
lock
pop
jne
adc
enter
jns
pop
or
mov
mov
sub
daa
pop
xor
xor
sbb
jge
xchg
test
ret
dec
std
pop
mov
adc
es
and
test
clc
mov
lock
mov
popa
jmp
push
and
mov
je
mov
aaa
jecxz
in
outsb
int3
sub
push
pop
or
xchg
push
call
out
lahf
push
mov
pushf
shll
je
dec
push
add
loopne
and
scas
inc
cmpb
push
icebp
lds
sub
std
dec
sbb
xor
sti
xor
mov
push
popa
sub
lock
pop
decb
cmovl
jmp
mov
sub
aam
push
fsts
xchg
cltd
dec
xor
xor
inc
clc
mov
push
subb
data16
jb
scas
cmp
and
sbb
mov
frstor
push
jl
xchg
jle
jb
js
in
pop
push
out
add
mov
jmp
xchg
outsl
pop
roll
push
sbb
arpl
rcrl
mov
fstps
cmp
std
ja
rcrl
jl
inc
pop
popa
and
cltd
dec
rcll
ret
sub
sti
decl
push
mov
xor
xor
aam
js
cmp
dec
jmp
loopne
imul
add
adc
cmp
xchg
int3
dec
sub
clc
cltd
lods
arpl
add
adcb
adcl
rorl
jmp
pop
clc
push
cmpsb
sub
cmpsl
std
mov
out
fiaddl
xchg
xlat
or
lahf
repnz
fcomi
mov
xlat
addr16
fmuls
mov
cmpsl
cmp
mov
bound
jp
cmp
cmpsb
ja
std
ljmp
add
mov
in
out
std
lret
repz
pop
fcomi
sbb
fsubrs
sbb
jne
call
jmp
add
addr16
data16
call
out
sahf
into
sahf
jbe
xor
lret
cs
dec
lods
icebp
fwait
inc
adc
push
or
mov
xor
shlb
ret
push
test
out
and
push
sub
leave
jns
jae
pop
dec
xor
inc
pusha
pop
cld
xchg
pop
or
jne
push
enter
repnz
data16
out
mov
xchg
or
pop
push
cld
inc
lcall
adc
push
popf
push
sbb
mov
test
inc
inc
aam
fnsave
mov
icebp
ret
sbb
dec
push
stos
or
sub
sub
xchg
sahf
mov
pusha
loope
in
inc
scas
daa
push
int3
je
and
mov
and
fdivrl
cld
push
cld
pop
lock
imul
pusha
xchg
loopne
or
lret
lcall
ja
sbb
mov
push
and
or
repz
add
fdivs
dec
sbb
push
cmpsb
pushl
adc
push
shrl
ds
jmp
enter
fmull
add
inc
mov
inc
mov
add
dec
push
add
mov
mov
add
xlat
pop
push
inc
rcr
sub
sub
adc
mov
add
lcall
sbb
jo
jne
jl
lret
out
fsubl
xchg
mov
or
outsb
inc
pop
cmp
mov
addr16
jmp
mov
jnp
jle
mov
dec
jns
xchg
cmp
test
inc
out
or
inc
sbb
test
in
push
dec
faddl
lret
lock
js
push
loop
mov
mov
jnp
test
fnstenv
adc
fstpt
dec
mov
inc
mov
shlb
sub
call
ja
push
adc
ret
fwait
insb
jbe
push
call
scas
push
enter
out
pop
in
and
rolb
dec
loope
imul
aas
loop
out
test
test
fwait
cmpsl
inc
cs
nop
xor
mov
sub
repnz
sbb
jb
push
mov
lcall
push
xchg
adcl
dec
or
mov
mov
orl
cmpsl
or
filds
and
push
sbb
aam
jnp
cmp
xchg
les
into
arpl
xor
sbb
mov
ficoml
inc
sub
or
mov
push
addl
cmp
in
sbb
pop
and
subl
aas
add
sbb
and
and
mov
test
ret
sbb
add
outsb
mov
in
xor
pop
pop
stos
fsubrs
std
mov
mov
pop
movsl
mulb
into
fisubs
in
enter
lds
out
stos
test
inc
sbb
into
jmp
movsl
aam
sub
add
mov
add
mov
jge
dec
inc
mov
dec
sub
dec
push
add
lret
pop
outsl
dec
icebp
pop
dec
fldt
lcall
add
movsb
adc
test
movsl
hlt
in
mov
cmc
dec
sbb
imul
mov
xchg
mov
ljmp
movsb
nop
adc
adc
mov
mov
jge
dec
mov
cmpsb
jecxz
and
pushf
in
xor
fwait
mov
test
cs
pop
lock
cmp
dec
out
insb
pop
xchg
sub
icebp
mov
sbb
arpl
in
ljmp
cmp
scas
daa
test
mov
xchg
rep
sbb
ret
sbb
dec
scas
loop
xchg
pop
test
sahf
mov
xchg
in
mov
cmp
popf
lds
aaa
call
mov
add
add
out
xor
pop
stc
aad
in
cld
jmp
fwait
xchg
sbb
jo
cmpsb
push
pushf
mov
jne
push
mov
cmp
push
sub
push
xchg
fdivp
pop
jne
fidivrl
lahf
hlt
mov
adc
shrl
xchg
js
sbb
movsl
int3
jb
lock
mov
iret
imul
pop
mov
fmul
iret
jae
xchg
mov
inc
sbb
in
and
add
adc
sbb
loopne
pop
jb
jo
mov
test
jp
mov
cmc
sub
addr16
lahf
mov
ret
or
in
jge
jb
movsb
xchg
inc
scas
sub
mull
int3
add
ficomps
mov
imul
pop
clc
mov
enter
add
cs
nop
sbb
and
mov
rcl
popf
cmpsb
mov
pop
cli
jle
orb
or
sub
xchg
clc
sbb
sub
pmaxub
push
mov
daa
or
adc
test
inc
jb
mov
xchg
cltd
jae
xor
movsl
or
aad
dec
fsubrl
notl
aaa
mov
xchg
push
adc
xchg
lds
and
arpl
inc
cmp
notb
push
jge
add
fmul
pop
fs
mov
repnz
xchg
xchg
mov
add
dec
pop
xchg
hlt
lcall
idivl
fstpl
cmp
cltd
out
xchg
pop
sub
call
inc
rol
lret
mov
in
push
insl
scas
lret
cmpsb
rcrl
jge
xchg
or
pop
sbb
mov
or
pop
or
ret
addr16
adc
cmp
pusha
mov
or
cmpsb
jge
dec
cmpsb
gs
rcll
and
aaa
mov
pop
mov
mov
sbb
cmpsl
jnp
test
cld
cmp
mov
mov
into
dec
stos
add
jns
in
xchg
push
pushw
and
add
sbb
cmp
add
out
repnz
add
dec
les
or
cmp
scas
mov
dec
das
testl
in
xor
subl
movsb
jno
fs
adc
in
add
stos
pop
das
ljmp
andb
pusha
xchg
xchg
leave
lods
bound
lods
add
cmpb
ss
or
jge
dec
add
cs
jne
mov
loop
pusha
movsb
mov
imul
daa
movsl
clc
fdivr
int
adc
cs
ds
xor
xchg
lahf
enter
mov
and
cmpsl
pop
enter
push
xchg
mov
and
jne
cmp
or
fldl
jno
rcl
inc
ds
in
dec
pushf
gs
movsl
jnp
push
test
scas
push
push
or
cmp
arpl
shrb
fidivl
mov
movsb
fcoms
lods
inc
inc
jg
out
mov
rclb
or
lret
cltd
inc
mov
test
mov
push
ljmp
mov
push
lods
das
imulb
mov
mov
out
push
xor
mov
mov
add
data16
ja
lock
mov
test
adc
xlat
ret
pop
mov
push
cmp
push
inc
aam
nop
and
xchg
push
push
fsubl
lret
adc
aad
movsb
sub
inc
cltd
mov
out
ficoms
lret
movzwl
push
sbb
cmp
sbb
add
lods
adc
jns
into
mov
leave
cwtl
xchg
or
sarb
scas
in
pop
cld
fwait
pushf
xor
inc
xchg
lods
test
test
sub
mov
popa
dec
dec
cmpl
cli
in
cwtl
clc
sbb
dec
cmp
add
call
pop
xor
push
les
pop
pop
mov
scas
jmp
fstpl
fnsave
or
out
mov
stc
shl
xchg
arpl
stos
xor
xchg
ret
jl
lcall
inc
inc
loopne
inc
ja
jbe
ljmp
fsubrs
mov
mov
hlt
and
sbb
ja
push
jae
add
ja
dec
pop
cld
shrl
sbbl
ljmp
lret
repnz
or
mov
pop
mov
das
pop
xchg
idiv
xchg
push
and
adc
lcall
mov
cwtl
sub
jnp
mov
fsubrl
iret
inc
push
cltd
dec
fwait
aas
into
mov
mov
daa
and
aaa
pop
xor
call
lahf
xchg
int
jne
imul
jae
test
jb
in
outsl
mov
sub
jmp
xchg
xor
stos
aas
jle
enter
push
xchg
xlat
add
shlb
xchg
pop
loop
nop
decl
mov
sbb
jbe
xor
push
cwtl
fbstp
or
dec
and
lret
push
lret
test
repnz
stos
mov
notb
jg
dec
mov
es
loop
int
or
mov
sbb
mov
and
test
test
sbb
js
mov
push
gs
adc
shll
adc
mov
insb
and
mov
cmp
mov
fstpl
clc
mov
mov
std
dec
push
push
add
jno
and
push
jmp
lcall
clc
mov
in
mov
adc
fcmovnb
push
sub
insl
inc
pop
aad
or
or
jns
adc
mov
mov
in
shll
fistl
sbb
add
sub
test
xchg
mov
push
mov
fistpll
cmpsb
push
hlt
and
push
xchg
push
jecxz
mov
mov
push
scas
add
mov
pop
pop
mov
into
dec
loopne
pop
add
std
lret
cmp
xchg
ficomps
int3
jnp
mov
shlb
pop
jne
fwait
push
insb
data16
inc
mov
xchg
shlb
jmp
add
xor
and
inc
lock
cs
pop
pop
xchg
jp
pushf
lods
push
push
je
add
mov
sahf
fwait
mov
neg
into
dec
mov
sti
jo
push
adc
test
pop
and
sbb
jbe
add
inc
outsb
test
adc
data16
loope
push
jmp
add
jno
ja
fs
rcr
add
inc
dec
or
lds
fsubs
and
sbb
adc
fisttpl
mov
mov
lods
mov
jge
rcr
rol
cs
push
pop
dec
rcll
jecxz
lds
in
fwait
stc
mov
xchg
cltd
out
jecxz
lahf
xor
ret
in
pop
jnp
pop
cmpsl
cmp
scas
push
mull
in
enter
jne
mov
xchg
sbb
dec
imul
cld
fcompl
cwtl
sbb
test
adc
push
stc
cmp
cmpsl
insl
scas
mov
fcompl
js
outsl
movsb
int
dec
mov
and
cmpsl
sbbl
add
push
fdiv
pusha
cmp
push
scas
int3
and
cmp
xchg
mov
inc
or
icebp
movsb
jno
sti
aaa
sub
pop
pop
cwtl
inc
add
lock
sbb
pop
loop
sub
stos
sub
push
lods
inc
add
orl
scas
aam
jl
add
sbb
lret
rorb
ficompl
push
jne
cmp
dec
mov
popa
in
cli
lret
ljmp
pop
vpmovzxbd
cld
lret
cmp
inc
loopne
jp
sbb
ret
fidivrl
cmp
lea
mov
fmulp
jo
repz
jge
cltd
gs
je
xchg
ret
je
das
sbb
mov
bound
cmpl
xor
jmp
js
push
or
sub
jmp
loope
mov
push
pusha
loop
fcomip
adc
push
scas
mull
test
fnstenv
imul
mov
int3
add
sub
push
movsb
push
popa
jne
push
stc
cmpsl
lods
mov
mov
push
mov
inc
xchg
mov
pop
xor
iret
adc
jge
leave
jno
fcomps
popf
aam
mov
sub
add
jp
es
mov
ret
sbb
leave
fdivl
jecxz
sub
add
lret
xorb
lahf
jbe
jecxz
mov
push
fiadds
outsb
add
lods
push
mov
mov
lds
inc
sub
or
push
lock
xor
and
mov
notl
leave
js
jbe
adc
and
int3
add
les
xchg
add
xchg
cld
pop
testl
xor
jecxz
xchg
enter
push
daa
xor
push
push
pop
add
lods
mov
sbb
imul
loop
in
loopne
push
jne
popf
popa
mov
cs
sub
scas
and
imul
or
adc
jmp
sbb
jg
push
loopne
test
lahf
add
shl
sub
cltd
sti
push
movsb
push
cmp
and
mov
add
rol
cwtl
call
add
or
out
lret
mov
and
sub
clc
inc
mov
jp
jbe
mov
test
push
jge
inc
sub
nop
aas
dec
push
fstpl
mov
outsl
xchg
or
and
push
mov
sti
cmc
rol
mov
mov
mov
insl
sub
jbe
popf
jecxz
xchg
fs
dec
jbe
dec
jnp
add
ja
push
icebp
test
aam
xlat
pop
mov
adc
out
cli
mov
clc
xchg
mov
inc
or
lods
gs
fisubrs
push
ljmp
mov
dec
subb
dec
outsl
scas
mov
push
and
jnp
push
shll
mov
lahf
sti
adc
cmp
aaa
mov
mov
lret
mov
push
test
mov
cmpsl
xchg
pop
xor
cs
jb
pop
or
mov
aad
repnz
cs
mov
popa
inc
pop
imul
add
xor
je
gs
lock
pop
pop
sti
inc
mov
inc
out
js
sub
movl
xor
or
out
mov
into
ljmp
xchg
lcall
sbb
iret
add
insl
inc
mov
int3
addl
cmp
mov
push
jmp
sbb
xchg
sbb
int
push
arpl
popa
int3
shrl
or
mov
dec
cmpsl
add
xor
movsb
int
push
out
xor
mov
cwtl
ljmp
pop
bound
dec
cmp
pop
clc
xchg
notl
fprem1
dec
push
ljmp
stc
jne
mov
add
jnp
sbb
xchg
dec
dec
leave
inc
adc
out
push
adc
int3
rcrl
lods
sub
sub
imul
fsub
sarb
jo
jbe
mov
mov
pop
shlb
scas
push
pop
jl
or
xor
or
dec
push
add
cmp
mov
addb
cwtl
xchg
ret
fdiv
fwait
in
xchg
mov
ds
test
pop
sub
mov
fbld
jp
aas
das
daa
lret
inc
sbb
jnp
cmpsb
sbb
jp
mov
or
dec
adc
sub
pop
mov
and
mov
stc
jl
mov
lahf
jmp
imul
mov
xchg
dec
pop
loop
adc
jb
je
cmp
xchg
lret
sbb
dec
sbb
call
jnp
insb
addl
pop
mov
xchg
dec
jg
adc
test
iret
xchg
jo
mov
add
push
cld
mov
sbb
inc
cld
xchg
dec
out
mov
ds
daa
test
and
adc
sti
inc
mov
xchg
mov
addl
mov
imul
fwait
lods
bound
and
sbbb
and
aas
inc
mov
daa
xor
mov
mov
cmpsl
int3
repnz
stos
stos
mov
mov
popf
popa
mov
fimuls
inc
dec
or
aad
insb
rcrl
lds
test
out
out
test
pop
arpl
mov
mov
adc
jl
adc
mov
mov
fcoml
xchg
fists
in
test
nop
hlt
mov
ret
ja
fisttpl
inc
xor
dec
inc
aaa
lcall
inc
lock
pop
adc
notl
sub
adc
fildll
ret
mov
shlb
lahf
fs
test
out
shll
sbbb
fcomps
aam
loope
and
popf
lret
aaa
mov
inc
xchg
test
cmp
xchg
dec
test
inc
push
dec
pop
idivb
int
stos
sub
mov
fdivs
sbb
lahf
and
jo
lods
mov
int
imul
mov
mov
call
data16
jnp
xor
loopne
xchg
ljmp
adc
and
cmp
icebp
push
pop
mov
scas
xchg
dec
aas
sbb
mov
outsb
and
out
dec
add
in
jo
fdivs
sub
mov
and
dec
push
out
or
jl
inc
fisubl
nop
xor
dec
movsb
or
jnp
dec
dec
pop
dec
cmp
lcall
jg
and
lock
lret
push
xor
pop
call
cmp
jno
add
sarb
loope
scas
or
test
leave
mov
jmp
jecxz
std
cmpsb
and
fwait
xor
rolb
push
cwtl
inc
cmp
dec
pop
aad
jo
adc
shll
inc
addb
dec
movsb
aas
mov
pop
jecxz
sbb
mov
insb
js
imul
adc
inc
pcmpeqd
out
ja
mov
mov
in
push
arpl
pop
dec
fadds
out
mov
lds
xchg
jl
mov
xor
xor
addb
cld
dec
repz
cld
rorl
sub
mov
push
push
and
out
fnstcw
lods
fimull
sub
cmp
jae
call
shrl
outsl
add
scas
xor
sahf
dec
mov
cmc
push
inc
sar
rcll
mov
pop
add
insl
movsl
ljmp
fiaddl
mov
es
ret
fs
mov
cmp
or
cmp
aam
cmp
nop
push
out
jb
and
mov
push
add
adc
jge
jl
inc
movsb
push
stos
mov
pop
shr
scas
xor
mov
call
sbb
leave
inc
stc
push
fiadds
subl
fdivrl
faddp
pop
into
mov
lahf
push
mov
adc
aam
out
lret
out
xlat
adc
push
enter
loopne
dec
xor
lret
dec
cmp
cmp
jle
mov
ja
xchg
sahf
adc
pop
sar
mov
pop
lea
push
xor
mov
pop
mov
repnz
lahf
and
xor
push
jle
outsb
pusha
stos
sub
nop
or
cmp
mov
fs
lahf
fdivl
cwtl
movsl
icebp
add
sbb
pop
jb
shll
push
push
jmp
mov
cmp
sub
dec
popa
mov
addr16
outsb
xor
shll
ret
ljmp
movb
scas
sti
mov
lahf
push
out
adc
mov
fistpll
negl
addr16
mov
xchg
dec
dec
xor
imul
cmp
in
scas
xchg
jge
lock
mov
jg
mov
cmpsl
mov
pop
aas
shlb
mov
aas
movsb
cs
adc
mov
insb
sub
dec
jle
dec
arpl
popa
outsb
cmpsb
ds
mov
mov
dec
cld
add
xor
rcrl
std
dec
and
pop
js
sbb
cli
inc
data16
mov
jge
cmpsl
cwtl
das
lock
mov
mov
and
jae
add
js
mov
pop
fwait
cmp
cmpsb
fimull
es
and
jb
rcrl
test
or
inc
mov
cmp
pop
inc
push
dec
jbe
test
jo
int3
cwtl
jle
leave
push
add
mov
mov
test
pop
adc
xor
je
adc
out
adc
mov
aas
mov
roll
jbe
jbe
out
push
sbb
or
ret
iret
cltd
outsb
push
xor
rcr
mov
not
test
sub
pop
divl
ja
dec
jp
shlb
xor
add
loope
push
loopne
filds
mov
cmc
or
lods
mov
pusha
mov
mov
push
pop
int3
and
pop
push
outsb
cmp
xchg
xchg
orb
fnstcw
stc
mov
push
shl
add
cmp
dec
adc
es
in
je
xchg
in
bound
aas
adc
mov
jp
ret
ret
jmp
mov
jp
loopne
and
xor
pop
pop
pop
sti
stos
stos
sbb
bound
test
add
loope
insb
bound
inc
mov
pop
or
ss
sarb
ret
push
mov
shll
add
or
mov
out
loope
add
push
lret
add
mov
xor
sbb
and
repnz
xchg
inc
arpl
and
pop
in
jb
ljmp
or
push
daa
xor
inc
imul
jl
out
std
lods
nop
xor
or
sbb
sahf
ror
sbb
cmp
jmp
lods
xchg
aad
mov
mov
ja
lret
inc
fldt
xchg
cmpb
in
sub
stos
outsb
enter
out
mov
sbbb
jb
cltd
arpl
je
mov
sub
jl
fists
mov
cwtl
mov
outsl
push
fld
lcall
mov
imul
mov
sub
cs
mov
or
ret
xor
fmull
mov
out
mov
mov
inc
das
adc
shl
push
stc
imul
addr16
ss
sbb
repnz
mov
xor
out
push
xchg
outsb
pop
cmp
push
xbegin
push
xchg
fsubs
pop
pop
out
stos
and
dec
popf
xchg
nop
mov
fsubl
lods
out
mov
xor
cmc
push
dec
fistpll
cltd
inc
int3
aad
dec
stos
jbe
pusha
jo
neg
push
test
pushl
ljmp
fwait
fwait
jmp
sbbb
and
xchg
and
lods
pop
sub
call
push
adc
jecxz
jns
push
pop
mov
jnp
dec
andl
sbb
scas
mov
psubsw
cwtl
cmp
sub
cmp
lea
popa
xchg
imull
fs
daa
mov
add
out
mov
adc
lds
ret
int
sahf
cmp
sub
and
push
insl
test
ja
jle
rclb
or
dec
pop
adc
loopne
lds
inc
add
popa
std
stc
ret
cmpsl
pop
sub
jo
fwait
push
push
fwait
xchg
ja
cmp
fcomps
and
lahf
idivl
loopne
lds
addr16
mov
in
mov
loope
mov
lcall
fnstcw
int3
sbb
dec
xlat
add
test
scas
push
xchg
xchg
jge
dec
cwtl
sahf
ret
hlt
lock
add
xchg
inc
es
rdtsc
mov
inc
add
jp
xchg
pop
dec
pushf
gs
nop
push
fistps
mov
int
dec
daa
jbe
pop
mov
cmp
xchg
mov
je
sbb
icebp
push
mov
jo
sub
and
add
cmpsb
adc
loop
icebp
adc
aam
cld
repz
mov
mov
add
dec
push
dec
jo
xor
in
and
mov
test
sbb
test
mov
cmp
pushl
sub
stos
push
pushf
mov
lret
dec
xor
jmp
in
fdivl
ucomiss
push
xchg
jg
push
hlt
mov
aas
out
es
mov
bound
inc
lret
mov
movsl
or
test
pop
jne
push
inc
punpckhwd
push
inc
lock
push
imul
cmp
fbld
sub
outsb
sub
cld
sub
aam
xchg
ss
jb
cmp
in
in
xor
push
add
adcb
test
nop
jmp
or
mov
mov
inc
push
ret
inc
pop
das
fwait
xor
lods
sub
rolb
push
fstp
hlt
out
sbb
xchg
xchg
xchg
test
add
xchg
rcrl
mov
imul
jle
dec
cmp
and
dec
or
dec
daa
cmp
ja
movb
push
sbb
adc
ds
cwtl
mov
or
pop
test
mov
clc
xchg
add
mov
xchg
scas
les
push
or
lods
mov
pop
enter
push
dec
aam
mov
inc
loop
dec
mov
mov
xorl
lahf
jae
out
push
dec
and
stos
xchg
and
add
jnp
add
and
push
jle
or
movsl
orb
cmc
adc
mov
xchg
mov
fists
jb
jo
aas
adc
stc
mov
mov
test
out
sbb
mov
mov
mov
sbb
divb
int
insl
dec
nop
mov
mov
fwait
dec
sub
bound
xchg
jns
push
adcb
add
js
aam
outsl
lret
addr16
dec
or
jl
clc
decl
pop
in
leave
ror
adc
or
fs
stc
jge
pop
add
clc
mov
mov
mov
mov
or
call
lahf
addb
add
popa
mov
mov
jmp
scas
pop
fistl
in
cld
mov
add
sbb
insw
adcb
push
movsb
mov
jge
divl
test
push
xor
in
dec
lock
pushf
dec
je
push
and
dec
xor
xchg
outsl
push
jb
cld
push
test
jb
xchg
add
mov
mov
arpl
scas
mov
out
aas
insl
push
inc
fistl
data16
lahf
sbb
mov
out
in
test
add
push
add
push
fnstsw
push
pushf
xor
pop
mov
test
lods
insl
cmpb
stos
in
or
cld
loopne
addr16
adc
inc
mov
les
fiadds
and
push
sbb
insb
in
pop
lea
test
mov
das
mov
mov
scas
push
fcomps
mov
add
jne
xchg
and
mov
fldt
lret
jecxz
fucomp
cmp
mov
xchg
push
rorl
adc
and
das
arpl
mov
mov
sbb
cmp
outsb
and
xor
test
pushf
xorb
mov
lret
leave
xor
aas
ds
inc
cmp
test
xchg
inc
jg
and
push
xchg
fsubr
subb
mov
push
mov
dec
add
inc
jns
add
enter
cld
mov
aad
call
stc
repz
jge
mov
es
mov
pusha
repz
jge
faddl
fimull
mov
pop
jae
repz
fwait
cltd
imul
sahf
add
and
sub
add
or
in
mov
cmpsb
scas
iret
cmp
sahf
je
fidivrs
std
mov
clc
cld
aam
mov
pmaddwd
adc
push
xor
out
sub
push
outsb
arpl
xchg
xor
mov
rdmsr
sbb
mov
imul
add
clc
inc
arpl
mov
outsb
repnz
faddl
adc
pop
xor
adc
pop
insb
or
cmpsb
rcrl
shr
sbb
xor
mov
ja
test
and
xchg
and
or
dec
js
and
lds
lret
lahf
jo
pusha
pop
cmp
and
scas
pop
pop
xor
mov
mov
vsubps
or
inc
xor
in
or
adc
divl
or
fcmovnbe
cmp
popf
daa
testb
pop
test
or
lahf
xor
push
sub
sbb
and
into
mov
pop
cwtl
decl
xchg
inc
cmp
shl
fsub
adc
ljmp
push
inc
mov
sbb
jl
and
rorl
dec
push
std
add
push
pop
push
sub
mov
sbbb
mov
fs
pop
popa
push
mov
cmp
sarb
pop
lods
lods
push
out
test
mov
outsb
sub
icebp
sub
jo
pop
shr
into
mov
aad
pop
ja
inc
push
scas
test
pop
fs
push
adc
enter
fistpll
js
mov
adc
mov
push
stos
adc
addb
xor
not
jg
add
lds
in
outsb
or
icebp
mov
aaa
es
lock
mov
jns
push
xor
jg
inc
mov
ja
sahf
cmp
rcrl
pushf
out
sub
xchg
loopne
adc
inc
aaa
pusha
cmpsl
and
int3
outsb
call
repz
leave
aam
cmp
jno
add
inc
cmpl
xchg
cmp
iret
ja
pop
add
repnz
pop
scas
jo
enter
cvtdq2ps
adc
jns
mov
push
or
rcll
sti
lods
mov
lcall
idivl
mov
inc
outsb
cmpsb
adc
lods
and
dec
jno
add
or
aaa
lods
repnz
sar
ljmp
dec
jmp
dec
xlat
mov
arpl
in
test
outsl
ljmp
in
cmpsl
push
and
cmp
mov
outsb
pop
orb
push
inc
mov
sub
mov
push
pop
loope
push
adc
into
mov
and
xor
inc
or
fstpt
add
in
lods
pop
in
pop
mov
push
jp
xor
in
add
jne
push
mov
push
push
std
cmp
es
and
mov
push
bound
sahf
xchg
adc
mov
jne
adc
inc
dec
clc
out
fsubl
push
clc
mov
jnp
mov
adc
fs
mov
sarl
inc
push
hlt
daa
mov
inc
inc
sbb
je
adc
inc
cwtl
out
cmpxchg
sub
sbb
lret
sbb
ret
and
xchg
lods
lret
icebp
mov
rcr
test
xor
jns
fucomp
ficompl
ja
loopne
xlat
inc
lds
or
ljmp
aaa
sahf
inc
and
mov
mov
push
das
push
sbb
push
repnz
adc
push
mov
mov
ss
test
shll
enter
lock
sti
inc
pop
btr
lock
iret
add
mov
aam
pop
or
dec
jnp
add
adc
int
mov
fdivr
mov
xchg
hlt
mov
push
inc
out
push
sbb
xchg
test
xchg
popf
pop
es
push
sbb
jne
fadd
out
cli
ficompl
dec
and
mov
mov
inc
fcoml
pusha
add
push
push
push
stc
loope
sub
dec
inc
jae
pop
mov
out
movsb
jne
stos
cli
mov
push
add
push
sub
pop
and
es
pop
inc
pop
es
jge
and
imul
nop
notb
jno
outsl
inc
arpl
and
sbb
roll
stos
sub
aad
inc
inc
cli
loop
cmpsl
cmp
sbb
jmp
cltd
int3
mov
jbe
dec
pop
lret
xor
les
sbb
aaa
in
push
xchg
adc
je
mov
push
mov
xchg
cmp
pop
out
xor
mov
mov
or
and
add
mov
dec
pop
and
mov
clc
push
mov
jo
add
incb
shlb
pop
pop
mov
sub
sbb
dec
inc
mov
fstpl
jae
mov
cmpsl
dec
xor
dec
and
sbb
lcall
imul
inc
xor
shll
dec
xchg
int3
mov
ss
mov
sbb
pop
inc
repnz
push
add
cmpb
in
imul
inc
sub
cmpsl
sarb
insb
add
lea
popf
mov
mov
mov
adc
and
gs
sahf
inc
sbb
push
adc
das
shll
xchg
les
jle
popf
jecxz
mov
jno
sub
cmovnp
mov
in
cmpsl
lret
cmp
lea
xor
and
jne
ljmp
push
fisttpll
into
xor
xchg
jne
stos
xor
jmp
xchg
arpl
adc
lods
inc
push
outsb
cmpsl
mov
mov
sbb
cmp
push
shlb
mov
xor
je
mov
js
insl
hlt
sbb
xchg
pop
inc
sub
sbb
sub
inc
xchg
stc
into
sub
push
mov
ret
lret
incb
std
out
ss
xor
jnp
push
cld
jp
xor
xor
gs
add
add
sti
fstps
add
shlb
movl
les
enter
clc
into
mov
dec
ja
arpl
insb
mov
push
cli
loop
movsl
adc
push
add
jecxz
sahf
or
sbbb
mov
jne
adc
mov
dec
fwait
dec
lahf
mov
aad
shll
mov
inc
jp
adc
notb
leave
das
pop
or
add
cs
pop
imul
bound
or
xor
push
lods
mov
sbb
test
jg
pop
mov
mov
pop
out
adc
add
and
dec
mov
or
rcrb
push
test
dec
dec
enter
xchg
mov
adc
rclb
jg
pushl
lea
cmp
test
orb
jno
hlt
fnstenv
in
stos
dec
adc
or
cmpsb
ss
cmp
ret
fisttpll
lcall
adc
inc
jle
out
pop
adcb
popf
and
adc
icebp
xchg
mov
xor
aas
dec
lods
iret
je
test
or
push
in
adc
or
mov
mov
pusha
push
aad
jnp
subb
cmp
aam
pop
rolb
cmpsb
add
dec
std
scas
xchg
or
inc
addb
and
xchg
lods
std
pushf
cmp
loop
ss
add
xorb
push
shlb
fisttpll
dec
das
pop
jbe
test
dec
cmp
sub
mov
out
sbb
rorb
adc
pop
push
test
xchg
punpcklbw
xchg
add
mov
inc
in
loopne
repz
mov
jg
shrb
sbbl
test
push
rcrb
fcoml
fsubrp
movsb
pop
into
cmp
pop
sub
test
test
or
inc
and
sub
addb
xchg
addb
arpl
push
xchg
lds
xor
sbb
or
mov
push
dec
ficoms
adc
daa
push
imul
jbe
js
adc
push
or
cwtl
mov
cmpsb
sub
aad
xor
mov
jl
adc
test
push
jb
fcmovnbe
push
mov
push
repz
and
out
xor
mov
xchg
sbb
mov
popf
add
movsb
pop
adc
mov
pop
or
js
jmp
xchg
jmp
xor
mov
sbb
cmp
shrl
push
mov
xchg
jmp
orb
cld
fcoml
incl
leave
inc
lret
gs
mov
sub
mov
mov
jb
addr16
cmp
mov
xchg
bound
push
dec
call
inc
mov
aaa
jne
push
icebp
je
cmc
hlt
lods
hlt
lock
ja
shrl
sub
and
ljmp
outsb
vpsubb
jecxz
negl
adc
mov
or
and
repz
dec
sti
aaa
test
jmp
pop
rorl
xor
mov
fs
lods
dec
sub
into
in
or
movsb
mov
shl
jp
mov
fs
mov
mov
push
xor
add
scas
mov
cli
repz
repz
out
sub
lahf
pop
xor
jge
test
jne
mov
je
sbb
mov
outsl
adc
loope
lret
daa
scas
mov
test
xor
aad
popf
pop
add
into
xor
jp
dec
mov
push
push
in
stc
pop
or
jl
insl
xchg
lods
fidivrs
rclb
mov
add
fcoml
add
pusha
xor
xlat
xchg
bound
ja
push
mov
dec
jno
hlt
inc
cmp
or
push
mov
out
lods
imul
mov
jmp
or
cltd
mov
xchg
and
add
je
jl
je
loopne
xor
mov
hlt
and
cs
add
adc
scas
xchg
mov
aaa
filds
loop
cmp
fidivrl
or
cmp
filds
push
jbe
out
mov
jecxz
sbb
push
inc
add
mov
mov
push
jbe
xlat
lea
test
cmp
gs
test
dec
and
insb
adc
lods
push
ja
inc
insl
xor
mov
paddusb
inc
fisttpll
std
adc
addr16
ret
out
shrb
cli
lock
push
mov
mov
xorb
sub
cmp
jge
xor
dec
cli
adc
and
in
mov
stos
pop
ja
inc
pop
icebp
test
mov
xor
aam
test
mov
mov
xchg
icebp
inc
cmp
cltd
lcall
icebp
faddl
and
xor
cmp
pop
mov
aad
push
outsb
aaa
sub
push
icebp
mov
dec
and
aam
sbb
jmp
imul
mov
push
sub
cmp
jnp
dec
and
lahf
jne
out
or
jno
insb
jmp
outsl
add
fcmovnbe
cmp
hlt
pushf
iret
sub
movaps
push
test
add
out
dec
sbb
divl
and
test
ja
orl
outsl
daa
jge
hlt
push
dec
push
movsb
mov
inc
shll
adcl
ret
subb
ja
test
xor
sbb
popa
ja
jmp
cmpsb
out
push
inc
cmp
mov
hlt
clc
andb
pop
jmp
inc
adc
lret
punpckhbw
nop
mov
sti
out
cwtl
out
jne
sbb
xchg
imul
outsb
jno
pop
adc
je
cmpsl
push
or
mov
nop
loopne
je
out
adc
ficoml
dec
jnp
out
pop
push
mov
int
inc
testb
aas
pop
pop
push
sub
mov
inc
fs
pop
xchg
lea
jp
leave
and
test
add
and
std
dec
lret
aam
add
inc
es
and
fs
sarl
test
inc
add
and
orb
xor
mov
loope
int3
sub
es
sub
add
dec
jbe
loop
jmp
stos
pop
iret
loope
lods
pop
push
xchg
pushf
in
mov
icebp
xor
repz
jle
jo
pop
push
nop
js
jp
movsl
hlt
daa
jle
fstp
daa
push
jno
adc
adc
adc
mov
movsl
cmp
ret
dec
stos
std
arpl
in
repz
lods
lods
fwait
les
xchg
xor
xchg
jno
and
jmp
and
jne
add
pop
inc
mov
push
arpl
jb
rcll
mov
imul
jo
push
ljmp
sbb
jmp
or
orl
jg
mov
sub
popa
repz
fwait
mov
cli
jne
stos
pop
push
les
add
cmpsb
shlb
pop
fistpl
mov
adc
adc
sbb
xor
test
xor
push
cmp
pop
test
jge
add
pop
push
out
and
rcr
and
jp
adc
lret
dec
ds
mov
and
mov
jecxz
pop
inc
and
adc
insb
orb
pop
xchg
loopne
and
and
aad
sub
adcb
cmp
adc
mov
ja
lods
ljmp
mov
movsl
inc
sahf
mov
and
cmpsl
mov
fstl
scas
mov
xchg
fcoml
notb
ficoms
enter
cwtl
packsswb
jl
push
jecxz
xchg
and
icebp
cmp
or
dec
sbb
xchg
gs
mov
cmp
inc
pop
insl
mov
push
pushf
out
xchg
mov
hlt
in
mov
sub
scas
inc
cmpl
rol
sbb
icebp
inc
fistps
mov
mov
stc
dec
xchg
fwait
jns
push
lcall
or
test
sub
cli
inc
xor
mov
push
sahf
rorl
and
repnz
lods
mov
mov
and
sbb
scas
xlat
jecxz
sbb
inc
cmpsl
movsl
adc
bound
or
push
ret
movsb
pushl
dec
arpl
add
push
mov
icebp
ss
sub
add
out
mov
dec
test
movsl
ret
adc
fdivrl
mov
push
test
inc
sar
lret
pop
movsl
aas
cmp
loop
stos
lahf
enter
fs
mov
mov
xor
loop
mov
andl
sarl
sbb
mov
sbb
jl
xor
stc
stos
pop
xor
insb
addr16
aaa
shrb
cmp
push
jecxz
lret
es
repnz
push
jns
xlat
adc
add
inc
shr
inc
and
dec
shr
iret
mov
mov
pop
test
adc
bound
in
add
fwait
aaa
ret
cld
xor
sbb
in
insb
movsb
push
das
jnp
pop
int
scas
jl
es
xor
jno
pop
scas
testb
clc
mov
jne
or
push
hlt
sahf
arpl
jl
aam
call
movl
push
sahf
out
lahf
adc
imull
push
and
outsl
or
pop
aas
and
outsl
sbb
fwait
pop
cmp
negb
cs
or
push
or
and
xchg
ret
ds
add
cmpsb
std
lds
outsl
mov
push
sub
adc
in
ljmp
add
mulb
pop
mov
jno
dec
mov
jo
inc
and
fisubrs
add
mov
and
jns
mov
movsl
stos
jmp
loope
mov
jle
push
divl
inc
leave
push
mov
xchg
movsl
sub
push
out
dec
pop
ljmp
push
mov
rcll
adc
or
call
ljmp
test
ret
mov
or
mov
cmc
jg
xorb
dec
imul
sbb
or
out
ss
cwtl
cmp
dec
mov
push
rol
arpl
mulb
fcmove
push
sbb
mov
xchg
enter
adc
push
mov
lods
out
jnp
jmp
mulb
fwait
test
rcl
bound
mov
xchg
sub
loopne
out
adc
pop
xorl
addr16
repz
or
push
std
adcl
xchg
aas
je
xchg
xor
in
adc
jmp
shrb
cs
cmp
push
mov
mov
pop
adc
xchg
lock
mov
inc
les
and
mov
pop
dec
xchg
and
jge,pn
aam
notl
lods
outsb
sbb
pop
sub
repnz
outsl
adc
dec
in
fldt
popf
add
cltd
test
xchg
jae
jnp
mov
fisubrs
test
jg
sti
cli
cmpsb
imul
jecxz
xor
mov
mov
fildl
inc
stc
cmpsl
adc
dec
mov
inc
push
jmp
negl
out
dec
insb
mov
xor
push
dec
jns
sbb
mov
pushf
in
push
jo
push
push
inc
mov
aad
mov
mov
add
stc
sbb
dec
in
add
cld
sub
xchg
cmpsb
pop
jmp
jg
iret
mov
mov
jae
mov
sub
imul
clc
ds
or
inc
scas
lahf
imul
mov
jns
mov
and
add
ret
insl
or
stc
lods
push
sbb
cmp
xor
mov
or
jnp
and
adc
mov
clc
sti
sbb
push
xchg
mov
fwait
inc
repnz
mov
mov
mov
clc
clc
and
inc
scas
pop
into
mov
arpl
jg
fwait
and
pusha
std
gs
inc
flds
jp
mov
andl
jl
jecxz
lret
int
and
fistps
add
lahf
jae
or
lcall
lret
dec
lods
adc
lret
sbb
loop
outsl
dec
scas
mov
das
cmp
mov
inc
sbb
pop
fiaddl
xchg
cs
bound
cld
xor
jbe
cmp
out
loope
sbb
and
pop
jecxz
cwtl
bound
cmp
sbb
mov
jae
shlb
popf
ja
repnz
cmp
push
out
fisubrl
xchg
or
or
xchg
mov
roll
push
jle
jecxz
push
in
cltd
or
add
movd
inc
inc
sbb
in
movsl
cmp
ja
sbb
add
inc
mov
mov
call
adc
fcmovnbe
add
call
push
sub
in
sub
adc
cmp
and
and
mov
test
xchg
movsl
jle
push
cmp
mov
ret
rcrb
orb
inc
fucom
cltd
adc
rcl
xchg
fcoms
xchg
xchg
cmp
push
cmpsb
stc
cmp
push
jge
les
or
mov
xor
fistpl
pop
cmp
stos
mov
icebp
jl
out
push
add
sub
or
jb
dec
in
outsb
push
roll
aam
lds
nop
adc
sbb
pop
add
xchg
sbb
shrl
push
cmp
insl
mov
rcrl
push
pop
out
mov
and
mov
xchg
or
mov
lret
push
xchg
fdivrs
jnp
out
xor
push
cmp
fbld
mov
push
jnp
movsb
mov
xchg
xor
std
shll
sub
push
aam
shr
and
mov
movsl
pushf
adc
mov
or
mov
sbb
pop
outsb
arpl
iret
rorl
add
es
orl
push
shll
inc
jne
adc
sub
loop
outsb
stos
in
add
and
mov
inc
dec
xchg
ret
inc
xchg
arpl
out
dec
push
xchg
pop
jecxz
js
or
dec
mov
pop
xchg
mov
int3
jbe
dec
stos
insl
mov
or
mov
scas
cmp
jb
scas
push
and
icebp
in
int3
mov
adc
nop
mov
incb
stos
mov
add
ljmp
mov
jb
mov
sbb
push
dec
scas
jns
lahf
push
mov
loop
push
lods
aam
adc
or
loope
cmp
hlt
imul
sbb
fstpl
std
push
ja
mov
test
fistl
mov
pop
sbb
stos
stc
xor
addr16
loope
jo
mov
and
hlt
aam
push
outsl
jbe
adc
fcmovne
addb
mov
cmp
bound
push
cmp
cmp
push
mov
xchg
lret
stc
hlt
add
pop
jne
lds
mov
repz
in
xchg
add
jbe
pop
in
insb
arpl
push
insl
pop
mov
cmc
movsb
sub
loop
dec
pop
shl
cmp
adc
fsubrs
xor
dec
aas
fiaddl
cmc
test
loop
or
loopne
mov
pop
cmp
mov
mov
into
sti
sub
sub
cwtl
lock
mov
jmp
adc
loope
das
ror
or
mov
lret
aaa
push
push
cmp
push
and
into
mov
jne
mulb
cmpsl
loopne
repz
sub
push
cmp
mov
bound
cmp
fs
dec
enter
lcall
push
push
add
stos
je
mov
xchg
lods
mov
sub
adc
and
mov
out
and
call
dec
pop
add
fwait
adc
sarb
insl
insl
inc
rol
push
lret
xchg
movsb
cld
jno
shr
xor
das
push
lea
jo
fcompl
push
cmpsb
iret
xor
les
ja
push
loop
push
cmp
push
fdivs
or
aaa
add
adc
sbb
push
or
jae
or
mov
lock
dec
rcl
mov
out
xor
adc
jp
xchg
into
jne
push
cmpb
mov
push
mov
mov
jno
arpl
jge
or
fs
popa
iret
mov
shll
int
ja
adc
pop
sub
out
inc
jnp
stos
mov
cmp
xlat
push
pop
jbe
push
mov
xchg
adcb
iret
aam
jb
sbb
ds
scas
xchg
enter
push
lock
xchg
js
pusha
cli
data16
movsl
push
sbb
imul
dec
pop
enter
leave
insb
jge
les
and
add
xor
pop
bound
xchg
inc
add
fwait
mov
push
test
and
and
fwait
jg
ds
pop
mov
ds
test
and
xchg
sbb
xchg
mov
out
cmp
adc
popa
sbbb
lods
sar
dec
lea
sbb
mov
mov
daa
ss
loop
cli
incl
ja
loope
xor
out
push
mov
rdseed
push
cwtl
shll
dec
sahf
or
into
enter
ds
xchg
mov
pop
lods
add
jne
inc
imul
cmp
movsb
loope
lret
jbe
iret
xor
xor
imul
or
lods
in
out
inc
pop
mov
int3
mov
inc
mov
sbb
xchg
les
adc
fdivrs
nop
mov
std
ror
pop
mov
sub
lret
int3
mov
pop
int
xchg
repz
jnp
and
push
test
sub
push
fiadds
pop
stc
lret
sbbb
sarb
shl
fwait
movsl
push
in
test
loope
xlat
adc
lret
or
sub
sub
loopne
mov
addb
test
in
enter
sbb
push
mov
sbb
mov
sub
inc
add
and
pop
in
mov
scas
pop
pop
mov
cmpsb
sub
sbb
test
ds
mov
adc
mov
sub
xor
lods
mov
cmp
inc
inc
push
mov
lock
jecxz
aas
lahf
mov
stos
sti
ret
mov
pusha
push
out
adcb
in
push
push
xchg
add
jns
add
or
loope
mov
cmc
or
arpl
add
in
mov
xchg
and
stos
add
lret
xor
jle
cmp
inc
data16
add
movsb
stos
sub
mov
cltd
fsubl
and
xchg
dec
rorl
xchg
xchg
in
xchg
outsb
hlt
xor
cmpsb
cmpsb
fnsave
adc
lods
outsb
ret
call
mov
xchg
push
rcll
add
and
jmp
mov
fnstcw
dec
jg
adc
or
pop
lcall
daa
fs
mov
pop
nop
and
loop
cmc
dec
mov
bound
cmc
rcrb
or
nop
cmpsb
adc
jae
xchg
mov
popf
dec
inc
sbb
and
fs
int
xchg
add
loop
lret
clc
adcb
and
testb
xchg
mov
sub
pop
cmpsl
pop
jmp
adc
add
jmp
xor
add
mov
stos
xchg
and
cmc
push
jbe
cli
lock
sub
lret
inc
push
and
mov
add
cmp
mov
out
std
lret
mov
xor
aaa
pop
gs
popf
jp
add
and
pop
cwtl
push
xchg
stos
mov
lret
mov
and
das
shlb
arpl
xor
addb
or
jp
cmp
lret
jns
movsb
xchg
jg
in
push
jb
cmp
xor
daa
push
mov
gs
out
ss
adc
cltd
mov
hlt
fsubrs
add
push
hlt
movsl
inc
add
call
std
push
loope
in
es
add
lods
ficoms
iret
fisubs
imul
cld
add
push
pushf
add
xchg
mov
sbb
inc
mov
enter
icebp
into
jno
rorb
or
shl
into
out
cmc
scas
sbb
pop
lds
dec
loop
lea
lock
out
cmp
push
jp
mov
lods
test
add
jb
outsl
loope
push
ret
lods
lock
fsubrs
cmpsb
mov
lret
bound
xor
jge
pop
mov
out
xchg
call
mov
xchg
into
orl
cmp
call
loopne
dec
cwtl
inc
push
pop
inc
xor
nop
jns
aas
lea
dec
mov
rcrl
add
stos
mov
xor
or
sbb
fsubl
in
lds
pop
aad
jo
js
stos
or
xchg
out
add
inc
pop
sbb
pop
push
or
xor
dec
lret
js
xor
dec
push
in
insl
fcoml
pop
xor
mov
test
out
xchg
pop
lahf
pcmpeqw
push
repnz
pop
inc
or
sub
mov
lahf
loope
out
out
or
hlt
shll
pusha
pop
out
sub
mov
mov
pop
and
in
push
pop
sbb
sub
xchg
pop
jge
push
cwtl
or
sub
adc
popa
or
pop
test
pusha
pop
adc
call
inc
mov
sarl
push
out
jb
andl
pop
xor
pop
subl
xlat
inc
xor
fs
je
mov
lods
add
sbb
roll
mov
lds
and
or
in
mov
jg
popf
xor
test
sub
ret
and
add
xor
sbb
or
sbb
push
jae
ret
in
jmp
xchg
decl
mov
cmp
pop
mov
mov
mov
test
mov
mul
ja
xor
imul
sub
daa
push
ficomps
push
jge
or
fwait
push
lods
mov
jp
sub
ss
ja
loope
mov
mov
hlt
lock
inc
push
pusha
test
aas
std
pop
jp
lahf
aas
test
mov
lods
push
shlb
mov
outsb
and
js
sub
jbe
adc
dec
cmp
mov
iret
dec
ud2
push
das
adc
mov
dec
or
and
imul
dec
sub
or
xorb
popa
rorb
popa
rdpmc
mov
inc
iret
push
or
mov
ja
ja
outsb
jo
push
test
aas
out
das
sarb
xchg
xchg
mov
aaa
and
sub
push
loop
xchg
test
insl
jns
push
in
xor
xchg
ret
push
iret
adc
xor
or
xchg
mov
dec
dec
or
sub
pop
sbb
repz
outsl
insl
add
dec
add
mov
xor
pop
cmp
in
mov
fldcw
rorl
mov
cmpsl
int3
sbb
popa
cmc
out
pop
pop
in
xchg
hlt
or
xchg
jmp
dec
aad
push
lods
lock
xor
cmp
je
fiaddl
fistpl
mov
mov
cmp
rorl
scas
xor
loope
lock
mov
imul
jge
push
jg
dec
into
push
int
and
stos
push
inc
jmp
push
jl
cltd
push
jp
mov
mov
or
aam
push
arpl
sti
push
and
cli
js
clc
sbb
enter
daa
popa
lock
dec
pop
push
test
call
aaa
push
test
mov
jmp
sbb
inc
xor
leave
subb
fldcw
cmpsb
repz
sub
outsb
push
arpl
xchg
jl
pop
fildll
test
cli
xor
ds
and
cltd
mov
shll
xchg
leave
lea
pop
and
mov
pop
push
and
jp
aam
lea
or
xor
pop
push
lcall
mov
imul
inc
xlat
sbb
mov
dec
fmul
outsb
into
imul
std
idiv
pop
pop
scas
out
popf
mov
cmpsl
fsubrl
dec
pop
insl
frstor
mov
hlt
jle
jg
subb
mov
cmp
cs
lea
fistl
stos
daa
bound
in
push
mov
mov
jecxz
lcall
or
out
xor
das
xor
mov
loopne
jbe
insb
subl
fs
sarl
mov
addr16
sbb
sbb
jmp
and
stc
xlat
cmp
xchg
xor
dec
pop
push
jge
and
scas
fnstcw
sbb
je
addb
or
add
rorl
iret
mov
or
out
sbb
movsl
popa
mov
loop
pusha
adc
testl
je
lret
stos
push
mov
push
push
rol
lods
pop
fwait
sbb
fs
lock
jb
shr
adc
aam
out
mov
sahf
mov
popa
mov
mov
je
addb
hlt
adc
shlb
pop
mov
movsb
cmp
fs
and
mov
add
xor
nop
add
std
lds
clc
inc
mov
js
jp
stc
mov
mov
push
sub
push
daa
mov
mov
mov
std
cmp
xchg
mov
add
mov
push
in
sub
jb
ret
rorl
sbb
out
icebp
pop
mov
bnd
ljmp
xor
ret
sbb
stos
enter
test
fld
dec
inc
mov
enter
pop
push
inc
pop
mov
loop
ret
enter
ret
lahf
inc
icebp
notb
cwtl
sub
inc
ret
add
and
jo
push
sarl
jge
test
dec
ja
cmp
mov
mov
cltd
or
xor
sti
xchg
cwtl
aas
lret
mov
inc
jno
imul
jo
gs
inc
sbb
push
xor
adc
insb
mov
ret
rcrl
xchg
push
inc
frstor
xchg
inc
imul
popa
arpl
xchg
mov
adcl
popa
imul
mov
loop
popa
in
int
xchg
xor
lock
je
ss
or
and
jmp
jns
pusha
xchg
icebp
fcoml
xchg
jecxz
fcoml
mov
sahf
lock
and
pop
insb
shl
imul
out
jns
cmp
stos
sbb
jmp
mov
loop
push
ret
stc
mov
xor
ss
or
cs
mov
xor
idiv
ja
sub
mov
lahf
sub
test
jle
sti
lret
int3
call
shrb
lahf
in
xchg
stc
sbb
adc
movsl
insl
cli
xor
sbb
or
std
daa
adc
inc
pop
dec
ljmp
xchg
or
adc
notl
add
mov
iret
mov
scas
loope
pop
scas
or
xor
cmp
clc
test
pop
out
dec
mov
xlat
or
sbb
rcrl
aas
xchg
push
adc
faddp
adc
and
cmpsl
cmpsb
fdivrl
cld
xchg
lock
orb
and
lcall
pop
fistps
inc
mov
stc
dec
sub
and
mov
mov
pop
mov
fwait
and
mov
cwtl
aam
inc
adc
int
loope
mov
inc
mov
sub
push
mov
or
and
xlat
je
or
call
testl
out
pop
fnstenv
repnz
pop
rcrb
repnz
stos
mov
notb
int
les
cmp
daa
out
mov
ffreep
mov
cmp
pop
xor
cmpb
scas
ljmp
das
jmp
or
jns
mov
icebp
mov
jle
mov
dec
hlt
fstpl
lds
pushf
bswap
arpl
mov
xchg
stc
popa
or
push
fdivrs
pop
scas
jno
aad
rcl
sbb
out
jne
int
xchg
int
or
mov
inc
jle
repnz
or
fcoms
loope
pushf
int
cmpsb
sub
jae
lods
jecxz
inc
push
push
inc
xchg
imul
fnstcw
in
add
push
mov
sbb
lds
add
lods
imul
sbb
jecxz
repz
cld
out
adc
add
and
cmpl
mov
stc
mov
sbb
push
xor
lret
add
in
rorl
sbb
xchg
lcall
imul
adc
hlt
dec
rclb
mov
add
sub
stos
and
arpl
fbstp
sub
xchg
adc
and
or
dec
cmp
iret
imul
repnz
ret
ljmp
je
pop
or
orb
jnp
ret
test
pushf
xchg
push
jl
push
pop
ret
jg
in
adc
sti
daa
std
inc
mov
sahf
arpl
loopne
fdivr
int
cld
pop
dec
cmpsl
mov
mov
cmpsb
in
jl
or
xchg
test
lcall
pop
loope
add
pop
mov
mov
xlat
sbb
pop
in
clc
sub
sahf
and
jno
stos
cmpl
and
pop
mov
push
subb
and
pop
lds
xchg
jnp
lock
cmp
mov
xchg
mov
xlat
in
scas
lret
nop
push
mov
mov
mov
stc
push
fs
imul
fwait
test
cmp
addl
mov
pushf
push
out
pop
fildl
bound
jnp
and
rorl
rorl
push
out
mov
jp
cmc
jg
int3
ljmp
mov
leave
push
mov
mov
bnd
out
imul
cmpsb
lea
lahf
jae
mov
sbb
or
shll
pusha
inc
outsl
sub
in
pop
adc
sub
popa
sbb
lahf
test
cmpsb
sahf
es
inc
xchg
out
xchg
sbb
jl
sti
inc
dec
sub
jp
mov
xchg
mov
sbb
xor
jle
or
add
pop
shl
xchg
mov
rol
mov
and
repz
sbbb
in
sbbb
adc
and
mov
sub
jmp
addb
add
repz
adc
mov
xchg
adc
out
lcall
loop
loopne
imul
rcrb
sbb
sub
mov
pop
fsubl
daa
popf
inc
xchg
mov
rcr
push
mov
mov
imul
cmp
cmp
fcmovb
fcompl
push
leave
fs
pop
insl
sbbb
dec
fwait
jle
sbb
pop
ja
cmp
ja
test
cmp
sti
sub
pop
cmp
addb
adc
insl
pop
into
sbb
and
mov
mov
mov
sbb
mov
clc
sahf
jb
lahf
cs
test
popf
jle
and
pop
pop
pop
push
subl
cs
and
test
inc
fldcw
xor
push
jmp
test
stos
pusha
lock
rcll
pusha
lcall
test
ds
sbb
jo
ret
lds
out
dec
pop
dec
adcb
jmp
out
cmp
sbb
sbb
dec
inc
jp
xchg
mov
xchg
or
mov
test
ja
jns
xor
pop
mov
mov
movsb
push
mov
pop
gs
aad
clc
jle
negl
js
mov
inc
clc
imul
xchg
inc
stc
dec
arpl
dec
mov
xor
pop
orl
jmp
mov
std
aad
outsl
cs
aas
pop
xor
dec
pop
inc
lods
mov
js
push
out
adc
insl
insl
mov
leave
out
dec
aam
insl
movsb
push
gs
inc
enter
movb
or
lret
or
jmp
and
lods
push
push
xchg
dec
or
ja
xlat
adc
jo
mov
add
pop
xchg
adc
test
outsb
cmp
mov
and
rclb
dec
push
inc
sub
mov
sti
or
ds
cmp
lahf
xchg
lock
mov
out
inc
and
xchg
mov
xchg
adc
loop
pusha
pop
sub
mov
add
popa
test
and
xchg
add
and
icebp
mov
xchg
sahf
or
movsb
sub
std
leave
xor
mov
aas
push
inc
test
push
sbb
les
sub
jnp
and
jne
lret
arpl
xor
das
push
into
fsubl
mov
cmp
pop
adc
into
sbb
fistpll
std
or
iret
mov
push
jo
add
and
movsl
aad
mov
jae
into
shlb
mov
cmp
xchg
mov
push
xchg
shlb
gs
stos
mov
add
outsb
call
mov
addb
outsl
ret
pusha
or
scas
jle
jnp
xor
stos
lcall
call
sbb
jo
mov
xchg
pushf
jbe
mov
sub
loope
bound
jle
pop
pop
cld
roll
mov
in
xor
cmp
mov
repnz
sub
rcll
lods
les
ret
pop
add
or
push
sub
jecxz
sbb
std
cmpb
mov
ds
out
add
and
add
stos
iret
into
and
repnz
dec
std
sti
add
cltd
jnp
fwait
xchg
push
add
xchg
mov
int3
push
pushf
loop
int
es
cmp
enter
popa
inc
gs
mov
aad
ljmp
push
xor
inc
pop
mov
jo
mov
push
pop
into
push
jmp
jp
mov
add
xor
dec
mov
ja
shlb
inc
and
pop
mov
lock
mov
inc
lods
fbld
movsb
mov
cmp
mov
pop
inc
sub
stos
mov
idivb
in
dec
push
rcrb
ljmp
addl
xchg
mov
add
stos
cmp
jecxz
popf
xchg
mov
cmp
xor
out
out
xor
mov
ss
add
pop
js
add
cmp
pushf
lea
mov
or
lock
cmpsb
inc
cmp
cli
lahf
sbb
mov
mov
stos
push
add
push
out
xor
pop
sbb
push
mov
test
push
pusha
sub
or
push
loopne
in
stos
pop
mov
sbb
cmp
mov
xchg
clc
testb
inc
std
imul
pushf
pushl
sahf
xor
push
data16
out
repnz
inc
jo
jg
sub
test
jmp
sub
or
and
addr16
jb
loopne
sbb
jns
xlat
xchg
mov
fldt
jnp
add
shl
popf
mov
or
push
cmp
clc
lret
int3
stc
pop
cmp
cld
fadd
lds
outsb
sub
andl
xchg
mov
addr16
sbb
pop
xlat
addr16
xlat
mov
notb
inc
add
add
mov
das
lahf
jnp
push
or
push
je
sahf
pop
adc
test
push
shrb
inc
xor
andl
mov
bound
xchg
je
mov
mov
das
test
cs
push
push
pop
lock
out
gs
push
lock
arpl
and
push
ficoml
or
rclb
and
nop
aaa
pop
mov
out
push
dec
rorl
movsb
pop
push
cs
pop
ja
xchg
mov
dec
std
les
push
lea
scas
into
mov
and
jb
rcll
test
and
push
push
sbb
sti
sbbl
jle
ret
loopne
sbb
cwtl
add
dec
jae
mov
mov
int
out
fidivrl
add
loopne
xor
inc
add
push
fcomp
sub
aam
sub
int3
jle
sbb
incb
cld
xor
sbb
dec
and
pop
mulb
pop
add
sbb
cmp
inc
mov
cli
cmp
pushl
push
sbb
gs
fsts
dec
push
or
lahf
add
xchg
jge
movsb
mov
imul
dec
xchg
inc
mov
mov
imul
sbb
je
add
pop
clc
xchg
mov
inc
ret
call
gs
pop
popa
cli
test
cli
dec
mov
adc
sbb
jne
and
jne
and
inc
enter
push
mov
jns
out
insb
xchg
or
xchg
sub
sbb
add
ficoms
adc
adc
jb
fwait
adc
icebp
xchg
fsubs
add
mov
adc
cmp
xchg
push
cmp
sarb
ljmp
repz
mov
cmp
repz
ror
frstor
and
pop
mov
into
iret
lea
sbb
sub
mov
pop
insl
and
movsl
push
xorb
and
or
ret
scas
stos
jge
xor
mov
in
js
divl
sti
dec
pop
ja
repnz
or
adc
popf
and
in
mov
fsubr
or
adc
movsl
outsb
push
aas
dec
sbbb
inc
lret
jp
loope
scas
pop
pop
jl
push
in
sbb
xchg
inc
lea
mov
int3
fisttps
push
push
in
jmp
in
sub
mov
mov
dec
mov
xor
pop
pop
into
xchg
and
mov
pop
shrl
xchg
dec
cmpsb
dec
enter
in
stos
adc
daa
cmpsb
stos
hlt
mov
add
fwait
pop
test
sbb
dec
mov
xor
lods
popa
mov
pop
or
loopne
aas
mov
dec
mov
sub
out
add
sub
shll
sub
ja
add
xor
repz
popf
dec
cmc
jge
clc
popf
pop
cmp
sbb
cmpsb
fdiv
out
dec
dec
scas
lods
cmp
inc
or
rcrb
sbb
pop
inc
or
repnz
loopne
jge
out
dec
push
cli
add
pop
lahf
jl
xchg
push
lcall
lret
loope
mov
jae
repz
xchg
and
inc
inc
fiadds
or
cwtl
fsubl
cmpb
inc
sub
inc
and
gs
test
sbb
pmaddwd
rcrl
rorb
push
or
andl
jo
jno
and
repnz
pop
pop
jge
jo
inc
les
fsts
sbb
sbb
pop
jb
push
fxch
adc
loop
sub
jnp
mov
inc
aaa
inc
ja
movsb
pop
add
popa
lret
add
fs
dec
jmp
dec
sub
pop
jns
add
movsb
inc
cmpsl
mov
inc
ss
jne
mov
lods
pop
adc
repz
loope
ss
inc
sahf
add
stos
nop
sti
push
mov
add
pushf
rcrb
xchg
shll
sbb
sarb
sub
xchg
fistpll
sub
sub
mov
jp
scas
nop
push
aaa
mov
or
or
and
push
push
push
and
ljmp
and
sub
add
adc
jo
cmp
nop
ja
pop
pop
iret
imul
je
pop
pop
mov
or
add
pushf
push
arpl
sti
sbb
xor
movsl
cmp
fdivp
mov
xchg
jne
push
xor
jge
sbb
sub
mov
fs
test
scas
push
scas
fnstsw
inc
push
cmp
sub
popa
xor
mov
in
std
inc
jns
out
and
stos
adc
add
inc
xorl
jo
cmp
dec
scas
push
inc
lds
in
mov
sub
andb
pop
repz
bnd
aas
dec
sysexit
aaa
cmp
sub
data16
out
xchg
lret
pop
fwait
sahf
stc
out
add
adc
test
faddl
mov
call
and
mov
shlb
push
adc
rcll
cmc
lods
pop
or
aam
leave
fidivrl
mov
lcall
pusha
sub
sub
jo
push
stc
test
lods
stos
cs
cli
lds
icebp
jge
dec
shll
or
or
fs
stc
mov
daa
xor
fstps
outsb
mov
sbb
adc
xor
outsl
push
xchg
sbb
or
mov
mov
aam
negl
jl
in
in
shrl
in
or
out
fsubs
mov
xchg
mov
js
adcb
cmpl
nop
inc
push
test
mov
xchg
in
scas
xchg
jl
imulb
sub
xchg
pop
ss
hlt
dec
rorl
push
lods
ss
inc
setnp
xor
pop
dec
pop
bound
inc
rcl
js
push
jge
lcall
fisubs
xchg
xor
in
arpl
cmc
das
lods
cmp
mov
add
jecxz
mov
and
dec
das
mov
and
sbb
jge
xor
rcrl
jge
mov
jno
lds
cmp
gs
subb
lret
xor
scas
push
out
hlt
sub
clc
and
nop
data16
in
lods
mov
jo
push
repz
aam
adc
dec
movsl
daa
cmp
sbb
push
inc
inc
jae
dec
push
and
clc
push
adc
inc
xchg
das
and
fs
mov
ret
xlat
jo
enter
imul
fdivrs
hlt
push
mov
cmp
cli
push
mov
mov
or
inc
push
shll
cmc
or
dec
test
push
mov
mov
or
loopne
les
mov
mov
and
out
sbb
cmp
dec
dec
add
mov
xchg
jge
xor
cld
push
xor
imul
dec
push
sarl
push
sub
movsb
loopne
fiaddl
sub
pop
int3
out
call
in
jl
je
lods
arpl
fwait
push
dec
out
and
dec
inc
jmp
arpl
mov
sub
mov
mov
jae
call
xchg
jge
shl
dec
adc
lahf
call
sbb
fisubl
and
jbe
mov
xchg
pop
mov
insb
mov
out
xor
adc
mov
or
pop
inc
adc
filds
cwtl
lret
int
lock
loop
pop
push
cmp
dec
adc
dec
std
into
andb
jle
sbb
clc
addr16
aam
adc
fxch
movsb
aam
stc
lcall
inc
fisttpll
lock
outsl
inc
mov
ret
lock
inc
leave
test
aad
cmp
stos
rclb
adc
mov
mov
jg
fnstsw
add
mov
dec
sahf
mov
sub
out
jns
loope
je
jg
mov
leave
pushf
adc
dec
pop
add
xor
sub
pushf
mov
pop
xchg
out
xor
jnp
les
loop
mov
shufps
clc
sbbl
lock
cmp
cli
and
inc
adc
inc
mov
sahf
inc
loopne
xor
mov
lods
jge
movsl
mov
xor
ret
lcall
dec
cld
out
sub
or
pushf
mov
and
dec
mov
cld
or
lea
rcrb
dec
fs
xor
lods
negl
cmc
iret
sub
cs
int3
jo
push
lds
add
orb
loopnew
outsb
ja
mov
or
add
dec
mov
scas
jp
mov
aaa
inc
pop
pop
pop
insl
sbb
and
mov
and
or
clc
les
jmp
cmp
or
pop
movsb
pop
loopne
inc
add
or
or
bound
cli
lahf
xchg
pop
jle
cwtl
arpl
dec
adc
test
outsl
and
test
ret
pusha
aas
mov
mov
sbb
jl
shlb
pop
ret
add
and
sbb
ss
inc
add
and
mov
shlb
daa
add
inc
popa
inc
jae
insl
cmpsl
cmp
cltd
add
dec
xchg
dec
push
ret
jge
cmp
rorl
add
outsb
jecxz
jns
xlat
push
mov
mov
mov
scas
jge
sahf
mov
xchg
sub
dec
fildll
push
cltd
xor
push
or
and
xlat
mov
mov
incb
outsb
mov
int3
dec
in
cmp
jb
sti
and
pop
clc
mov
stos
repnz
insl
adc
and
je
xor
call
dec
mov
xor
inc
dec
inc
lret
in
sti
pop
sbb
mov
jbe
fwait
and
cmc
scas
movl
or
rcll
insb
mov
outsb
xchg
xor
loop
scas
ret
scas
ja
icebp
imul
lret
out
scas
sub
pop
test
xchg
dec
add
push
sub
sbb
movsl
ljmp
in
jo
fistpl
push
pop
push
add
sbbb
dec
rcrb
mov
add
add
std
add
cmpsb
mov
scas
push
pop
mov
mov
je
lds
or
pop
das
add
xor
aam
pop
shr
mov
ficoml
adc
jecxz
jne
std
or
inc
dec
pop
test
push
icebp
dec
xchg
stos
mov
mov
pop
jmp
sub
adc
rclb
sti
popf
fs
sub
cltd
leave
push
mov
sarl
inc
add
je
ficompl
int3
ret
xor
jle
scas
dec
int
enter
repnz
mov
cmpsb
mov
enter
sbb
inc
lea
pop
or
out
icebp
rclb
pushf
and
imul
cmpsl
xchg
jno
ret
rcrl
jo
ficomps
popa
movsb
fwait
mov
jae
lods
push
and
cmp
loope
sbb
aas
enter
push
mov
jmp
in
mov
push
popf
xchg
cmp
sub
sti
mov
fcomps
out
push
cmp
mov
repnz
inc
push
iret
mov
outsb
xor
adc
add
scas
gs
push
mov
cs
adc
stc
cwtl
and
out
cld
das
int
sahf
jne
or
pusha
ljmp
test
fnstenv
sub
mov
inc
movsl
mov
or
sub
aas
cs
sti
data16
pusha
sbb
mov
inc
stc
or
pop
or
adcl
lret
in
push
das
inc
cmpsl
xor
sub
xchg
cmp
xor
lret
pop
jae
test
out
outsl
dec
jmp
dec
das
shrb
jmp
xor
cmpsl
pop
or
push
mov
lds
pop
mov
ljmp
pop
mov
je
mov
adc
ret
mov
and
mov
fldlg2
dec
or
pop
xchg
jecxz
mov
movsl
lods
fldenv
mov
add
ret
nop
andl
fistps
sti
jb
insl
loopne
dec
ret
dec
or
sbb
inc
andl
test
and
test
adc
pop
jno
add
shrb
push
mov
test
lods
add
or
sahf
cmp
daa
inc
mov
xor
outsl
sub
sub
mov
test
pop
jo
lcall
enter
fs
sub
sbb
mov
dec
movups
mov
es
inc
push
dec
xchg
pop
insl
jbe
xor
aam
cmpsb
xor
pop
lret
shlb
cld
dec
jo
je
inc
sbb
outsl
pop
lcall
and
repz
cltd
sub
xor
pop
out
xchg
jecxz
lds
jno
aas
or
int
imul
mov
jle
sub
aam
mov
pushf
insl
hlt
sub
ret
or
loopne
or
jns
rep
xchg
mov
inc
in
mov
jno
fsubs
sbb
lret
mov
xor
mov
addr16
add
mov
inc
xor
repz
jmp
out
jbe
ds
call
scas
jbe
mov
push
xor
sahf
repnz
loope
sbb
jae
in
jnp
adcb
pushf
or
rcrl
loopne
push
jl
jb
add
and
pushf
and
loopne
adc
das
xlat
fildl
aaa
mov
les
sbb
ja
mov
push
xor
imul
jb
fldl
in
xor
push
movsb
fbstp
inc
inc
pop
mov
adc
adc
add
les
leave
sub
rorb
das
push
popa
mov
fnstsw
in
enter
add
inc
cltd
and
mov
hlt
loopne
dec
add
fmull
pop
or
xor
dec
in
push
mov
mov
imul
or
cmc
or
dec
in
cmp
sub
nop
pop
push
testl
or
pop
aas
cli
cmp
jge
outsb
lahf
aas
ss
rcrb
push
pop
or
adc
out
lods
sbb
iret
xchg
aaa
aaa
mov
jecxz
shr
out
ret
pop
dec
add
mov
adc
dec
sahf
cmp
lods
in
pop
xor
repz
sbb
push
dec
sarl
sbbl
lock
loopne
test
test
icebp
adc
add
ds
xchg
sti
call
clc
inc
mov
aam
outsl
lea
xchg
loopne
fisttps
cmp
cwtl
pop
stc
sub
sbb
inc
in
outsl
mov
fistps
push
insl
adcb
movsb
aam
jae
lods
xchg
addr16
push
adc
addb
cltd
dec
pop
cwtl
out
insb
inc
data16
push
jl
sbb
xchg
sbb
int3
inc
fnstsw
popl
fwait
mov
and
cmc
mov
stos
icebp
cmpsl
add
fimuls
mov
out
loopne
mov
fnstcw
mov
stos
scas
insl
sbb
cmpl
inc
adc
sub
dec
mov
sarl
adc
sbb
push
jp
je
stos
mov
sub
push
sahf
push
cltd
jecxz
ret
out
xor
adcb
sub
int3
dec
movsb
or
or
pop
mov
shr
addr16
flds
push
loopne
and
jge
daa
xor
sbb
fwait
out
adc
inc
push
dec
ljmp
xlat
push
pop
or
icebp
lahf
dec
jg
add
sbb
adc
cmpsl
or
les
push
pusha
mov
or
aam
andb
jmp
jno
addl
jno
in
mov
fisttpl
movsb
test
in
cmpsb
xchg
pop
adc
sbb
xchg
repz
jp
addr16
pushf
or
js
or
in
cli
jb
xchg
cld
push
aas
pop
or
mov
pop
in
or
jns
adc
xor
cli
pop
sbb
imul
dec
les
xchg
and
popf
pop
sbb
cmp
movl
jo
out
add
push
mov
sub
xchg
jecxz
cmp
sub
dec
das
and
lds
shr
addl
aas
stos
pop
mov
mov
pop
daa
pop
loop
out
adc
push
popf
mov
sub
pop
push
pop
in
stos
xchg
mov
mov
mov
sbb
mov
sub
jbe
ret
sar
sbb
push
js
sub
pop
add
popf
repz
scas
and
pop
pushf
add
aam
test
xor
mov
mov
icebp
sub
shr
sbbb
addr16
cmp
out
repnz
test
inc
add
mov
pop
cli
outsb
adc
inc
adc
cld
ja
ret
cltd
jbe
push
dec
ss
sbb
pushf
mov
xor
scas
push
jp
out
xor
pop
sub
out
add
pop
mov
iret
rolb
pextrw
xchg
pop
adc
dec
es
and
add
inc
sbb
ds
adc
cmp
mov
insl
lret
adc
dec
fbstp
pusha
and
mov
mov
cmp
mov
pop
cmp
mov
out
lea
int3
dec
jle
jle
movsl
sub
push
callw
ret
mov
dec
ret
orl
jb
jbe
and
stos
aas
mov
inc
hlt
aaa
rcrl
or
jg
mov
aas
mov
repnz
cmpsb
decb
xchg
add
subl
ja
std
sti
add
repnz
xlat
fwait
jecxz
pop
push
add
notl
nop
xchg
inc
shlb
xor
subl
ret
mov
call
jge
push
sub
cwtl
push
cli
xor
dec
and
arpl
icebp
test
daa
or
out
in
or
cmp
push
loope
cmp
in
dec
sub
cwtl
dec
scas
shrb
jge
pop
pop
out
je
int
nop
fistps
dec
pusha
stos
out
loopne
dec
push
jne
sub
rorb
bound
push
pop
jns
mov
aad
mov
jne
outsb
fstpt
xor
mov
insl
imul
sbb
lds
mov
inc
fiadds
sub
and
push
js
and
rorb
ficomps
mov
dec
enter
rcl
lods
xchg
adc
jmp
rcrb
loop
lcall
aad
mov
pop
xchg
ficoml
adc
outsl
ret
inc
clc
arpl
lret
out
orb
cs
add
js
adc
in
jp
loope
xorl
dec
out
jmp
lret
jbe
mov
and
mov
inc
into
lods
test
jg
movsb
add
fildl
and
jl
cmp
loop
jns
cmpsl
sub
data16
inc
clc
mov
stos
mov
sub
adc
into
ficoml
sbb
test
jb
sbb
faddp
inc
add
dec
ret
sbb
shll
repnz
xchg
cmp
or
repnz
fidivrs
and
mov
adc
xchg
test
dec
iret
or
or
mov
cmp
ja
cmp
mov
mov
sbb
mov
data16
adc
jg
dec
cmc
sbb
xchg
leave
jne
add
into
pop
cmp
iret
xchg
add
and
add
inc
lahf
push
insl
int3
mov
push
cmc
cmpsl
shl
push
pop
mov
out
fsub
arpl
inc
and
and
and
and
inc
inc
cmpsl
push
jbe
shlb
push
movsb
hlt
jb
je
cmp
adc
int
imul
xchg
xlat
sbb
sub
mov
es
fsubl
subl
loopne
push
rol
push
addr16
lret
mov
or
aad
add
sub
mov
inc
push
popf
hlt
mov
data16
jo
or
xchg
and
in
xchg
cmp
loopne
in
aaa
ljmp
pop
test
pop
ss
scas
xchg
imul
sbb
or
adc
or
adc
push
jmpw
mov
push
push
fisubl
dec
js
add
cld
lods
jecxz
js
fcmove
lods
leave
xor
fdivrs
cmpsl
outsb
sub
pop
push
mov
push
push
ret
jp
xor
jge
in
sti
jl
inc
jl
popa
mull
xchg
test
push
pop
inc
into
sub
fwait
mov
mov
lcall
xlat
imul
and
aaa
mov
cmp
push
sub
test
jns
xchg
iret
aad
sbb
je
cmpl
mov
das
jne
push
xchg
adc
sbb
loopne
pop
ret
inc
frstor
xchg
cwtl
jbe
xor
arpl
leave
cmp
popa
adc
pusha
mov
xor
and
js
xor
cwtl
nop
and
adc
cmp
cmp
inc
and
and
pusha
pop
pusha
dec
ss
mov
dec
lea
mov
mov
mov
dec
ret
lea
push
sbb
mov
ror
sti
sbb
mov
hlt
cli
sub
scas
pop
pop
icebp
in
push
push
or
xchg
mov
and
sub
mov
or
sbb
mov
pop
fistl
std
or
push
or
push
mov
mov
pop
data16
cmp
mov
loope
push
pop
push
fwait
cltd
jns
adc
sbb
jg
in
and
mov
repnz
inc
push
cli
sbb
mov
les
add
jge
jb
inc
mov
outsb
push
pop
enter
mov
clc
push
xor
push
sbb
sub
cwtl
dec
or
sbb
sbb
and
shll
mov
dec
stos
mov
inc
fmull
popa
rol
jb
mov
lods
sbb
gs
push
gs
lods
arpl
and
mov
mov
pop
lcall
push
sbb
clc
and
outsl
mov
xchg
int
push
and
loope
jmp
mov
daa
ret
pop
lcall
je
data16
pop
dec
mov
xchg
mov
dec
adc
mov
enter
push
lods
fsin
pop
mov
fsubrl
sbb
movsb
sti
cmp
xor
cmpsb
sub
push
paddusw
inc
push
dec
mov
adc
pusha
push
jl
sub
fwait
or
and
xor
jecxz
in
add
pop
sub
adc
mov
dec
test
add
adc
adc
je
test
call
xchg
push
cmc
clc
sbb
xor
mov
pop
xchg
inc
adc
icebp
or
xlat
gs
lods
fstl
test
imul
pushf
out
fwait
dec
sub
add
popa
fisubrs
pop
mov
negl
ja
nop
dec
xchg
fcoml
xchg
ja
xor
movsl
mov
cmpsl
adc
mov
xor
imul
xor
cld
cmp
adc
jecxz
jno
xor
xorb
adcl
mov
adc
out
imul
add
inc
sahf
js
jp
out
in
into
inc
inc
sub
jmp
mov
and
lods
xor
xchg
pop
insb
mov
repz
cmp
pop
call
pop
aam
jne
or
or
sub
add
pop
mov
gs
popa
dec
push
xchg
nop
mulps
mov
jns
cmp
pushf
pop
sahf
addr16
cmp
ret
pop
in
cmp
notb
push
xor
or
mov
dec
push
pop
out
mov
mov
xor
idivl
push
lock
popf
popf
mov
leave
mov
sub
test
addr16
dec
ljmp
ss
sub
sub
rcrl
sub
addr16
pop
sbb
sbb
scas
mov
cmp
push
fs
mov
jecxz
jge
leave
test
cmp
add
movsl
shll
pop
jge
jle
loop
into
outsl
imul
and
ljmp
jae
xor
cmp
hlt
bnd
aad
add
lds
subl
mov
xor
jle
aaa
stos
out
adc
inc
ss
sbbb
jne
cmp
cmpl
xor
mov
sbb
mov
xor
xchg
icebp
leave
sbb
mov
shlb
int
and
pop
mov
xchg
push
push
sub
imul
shrl
lods
sahf
sub
push
push
int3
rep
cli
stos
lock
fwait
xor
and
fwait
stc
xor
xor
shlb
adcl
lods
jae
mov
mov
lods
int
adc
pop
sahf
cmp
aam
repz
pushf
test
lea
and
pushw
xor
in
dec
push
pop
sbb
mov
icebp
push
sub
or
sbb
mov
movsl
sub
sbb
inc
icebp
icebp
add
stos
imul
orb
sub
ret
cmpsb
insb
xor
icebp
inc
test
js
rol
and
popf
pushf
cltd
int
cmp
jle
aaa
xor
fistps
jne
out
jo
repz
inc
jbe
xor
mov
xlat
dec
js
pushf
push
in
loop
dec
lock
inc
clc
fldl
les
daa
mov
sub
cmpsb
adc
aad
or
sbb
inc
outsb
scas
lcall
mov
cld
aam
scas
ficomps
adc
or
sahf
call
dec
ficoms
mov
push
xor
sub
ss
ljmp
xorb
lods
adc
push
cmp
loope
jg
inc
imul
gs
cmp
jae
jno
or
sbb
fdiv
mov
ret
cli
add
mov
fdiv
sbb
in
xor
mov
ret
add
icebp
dec
test
pushf
xchg
pop
cli
dec
imul
sub
ret
leave
and
and
inc
in
cmpsl
push
dec
mov
arpl
adc
outsb
push
xlat
jae
out
xor
add
std
xor
movsl
aad
mov
xchg
xchg
and
mov
dec
in
inc
xchg
sbb
ret
add
cmpsl
cmp
shll
and
jmp
push
mov
xchg
sarb
clc
lret
xchg
xchg
adc
mov
lods
stc
xchg
pusha
out
pop
std
dec
mov
mov
inc
sub
ss
filds
incl
iret
sbb
mov
mov
sar
xor
push
imul
mov
dec
cltd
call
push
push
lods
data16
mov
loopne
xor
and
sbb
shll
fldenv
push
sub
lret
add
mov
sti
cmp
pop
cld
pop
cmp
imulb
lods
mov
push
stc
mov
pop
sbb
push
pop
add
and
out
xor
jbe
int3
lret
popf
addr16
jl
and
in
pop
insl
mov
xor
movl
inc
out
push
mov
dec
sub
mov
inc
pop
ljmp
xchg
outsb
xchg
xchg
jge
gs
mov
pop
ds
dec
addr16
imul
ds
xchg
pop
sbbl
add
xor
dec
push
add
ret
stc
mov
dec
cmp
push
add
hlt
pop
cmp
pop
icebp
or
bound
sub
ret
cmpsl
mov
push
inc
mov
xlat
mov
mov
cmpsl
pop
push
ljmp
je
jg
nop
cltd
pop
inc
iret
outsl
mov
loope
jo
pop
xchg
mov
aad
jae
cmp
cmp
xlat
clc
inc
or
mov
cmpsb
call
sub
xorl
mov
mov
jle
stos
scas
out
push
pop
xchg
xchg
pop
leave
sub
movsb
cmp
mov
popf
aam
mov
lods
jnp
fwait
or
mov
fs
push
pop
push
aad
outsl
mov
sbb
sarl
pop
dec
or
jl
mov
adc
push
xlat
pop
inc
stos
aam
pop
cltd
mov
lods
mov
in
mov
fmuls
push
dec
push
sub
stos
dec
out
inc
pop
or
rcrl
outsl
push
cld
icebp
inc
out
outsb
add
pop
test
std
cmp
mov
push
nop
jbe
inc
pop
cs
or
mov
daa
push
addr16
jo
es
pop
cmc
pushf
cli
cs
inc
loope
imul
or
out
lods
aam
mov
or
clc
xchg
dec
fcmovne
jecxz
add
inc
mov
movsl
adc
pop
iret
loopne
cmpl
mov
adc
jns
in
in
xor
mov
icebp
cmp
cbtw
mov
movsb
jecxz
xlat
or
xchg
incb
inc
icebp
in
mov
movsl
sti
sbb
aad
jg
or
sbbl
out
bound
dec
lret
push
pop
mov
dec
cmp
sbb
mov
adcl
push
mov
adc
add
adc
cmp
cwtl
and
inc
shlb
in
mov
xor
xchg
lock
xor
rcrb
addr16
add
fnstcw
icebp
and
mov
inc
sbb
or
rol
fwait
push
movsb
movsb
cmp
subl
xchg
mov
adc
sub
cmp
mov
xlat
popa
mov
pop
cmp
push
lcall
lret
pop
movsl
mov
fcmove
dec
xor
fists
or
movsb
icebp
pop
lods
and
inc
notb
fs
mov
mov
mov
push
adc
cwtl
test
xchg
mov
shlb
pop
insl
mov
xor
xor
data16
cmp
or
test
mov
imul
in
adc
fimuls
out
mov
add
adc
jmp
outsb
xchg
iret
mov
loop
cmc
dec
jno
add
mov
fcmovu
in
hlt
dec
inc
in
inc
dec
fwait
jge
add
adc
add
push
dec
loopne
cmp
or
dec
ja
sbb
lea
repz
and
dec
pop
ss
in
mov
pop
outsl
in
xchg
rcl
out
enter
inc
pop
ror
cmp
inc
cmp
mov
out
jecxz
movsl
dec
test
rcrl
imul
test
xchg
push
push
cmc
outsl
out
scas
outsb
test
or
xor
push
add
jge
stc
pushf
lcall
insb
sub
pop
mov
mov
xchg
insb
inc
mov
pop
cltd
cmpsb
lcall
or
adc
push
mov
popa
push
adc
mov
pop
xchg
imul
mov
or
incb
mov
loope
or
push
das
or
lods
mov
js
adc
inc
in
mov
sbb
ret
mov
pop
xchg
cmp
mov
lods
test
sbb
push
insb
sub
movsb
lods
and
mov
fistpl
adc
jbe
flds
and
xor
jo
xor
imul
pop
add
icebp
std
dec
adc
mov
rcrb
xor
movsl
adc
into
fadds
dec
sub
mov
rorl
sbb
loop
dec
push
addr16
adc
notl
jns
dec
cmpb
adc
jbe
aam
jno
stos
pop
jecxz
lret
sub
mov
insl
shll
mov
adc
aam
push
dec
in
fs
lods
add
addr16
int
cmp
dec
cmp
insb
adc
inc
sbb
xor
fdivrs
gs
adcb
jbe
adc
ja
cmp
out
hlt
xor
push
sahf
inc
mov
les
lea
loope
push
mov
outsl
cmp
xchg
out
out
cmpsb
outsb
xor
test
stos
in
cmp
loopne
mov
mov
mov
add
js
mov
pop
rolb
outsl
iret
scas
mov
xor
adc
push
dec
xchg
sbb
pop
pop
std
jbe
jns
and
mov
mov
movsl
sub
xor
inc
ja
dec
mov
push
add
ret
and
call
loop
test
call
lea
sbb
repnz
lods
mov
or
add
cli
push
and
pop
clc
or
popa
inc
iret
inc
mov
xchg
loop
jmp
sbb
pop
xor
loope
xor
lods
sbb
cmovp
cltd
push
inc
enter
repz
lock
nop
and
mov
mov
scas
cli
or
andb
push
xchg
push
adc
lret
loop
cmp
xor
in
adc
pop
sbb
jge
ja
sti
stos
movsl
jo
pop
jno
stos
mov
aas
ret
data16
gs
jge
cmp
inc
mov
push
inc
or
jbe
mov
shll
inc
loopne
mov
sub
sbbb
lret
lahf
pop
gs
testb
adc
mov
pop
xchg
idivb
dec
aad
push
sbb
xlat
test
push
cmpsb
stc
popa
dec
push
lcall
jl
mov
inc
dec
cmpsb
cli
xchg
push
lahf
in
pop
leave
or
push
rolb
jno
jns
notl
test
cmp
xchg
fsts
insl
and
rcr
inc
pushf
stos
dec
sbb
or
movsl
mov
fmul
ss
and
adc
shll
leave
ja
hlt
cmpsb
repnz
leave
cli
loopne
mov
stc
loop
inc
and
fwait
lret
daa
or
mov
out
jg
jp
sub
ret
xchg
xor
sbb
cmovp
mov
loopne
xchg
mov
pop
xor
adc
mov
ret
adc
js
inc
inc
and
addb
mov
pop
push
inc
jg
imul
adc
mov
mov
pop
inc
xchg
daa
dec
mov
cmc
outsl
adc
cmp
addr16
enter
sbb
out
int3
out
data16
imul
sub
lahf
insb
jg
imul
lcall
test
test
dec
push
cli
in
scas
imul
cmp
inc
fyl2xp1
data16
sti
push
push
or
sub
stos
bound
lret
test
add
pop
push
jnp
push
xchg
in
hlt
jmp
movsl
cmc
loopne
andl
js
mov
loope
lods
movsb
inc
and
pushf
jo
pusha
filds
jge
lcall
out
aam
sahf
nop
jns
fcmovnbe
sbb
repz
cmp
xchg
sbb
les
not
jae
dec
push
push
fstpl
inc
xor
popf
rolb
sahf
push
pop
xor
xor
jne
js
dec
add
cmp
adc
lret
xchg
sbb
jmp
add
mov
dec
and
mov
cmp
aam
not
shr
push
nop
icebp
push
push
push
xor
dec
push
lahf
mov
lods
mov
mov
pusha
and
xlat
jns
loop
ljmp
xor
es
mov
ret
mov
std
addb
mov
jbe
pop
push
push
mov
movsb
test
dec
cltd
or
sub
sub
xchg
data16
or
pmulhw
setnp
mov
lcall
mov
xor
xor
or
mov
cli
fsub
add
mov
pusha
subl
addb
subb
cltd
add
mov
not
add
mov
std
aas
mov
mov
outsl
popa
movb
jnp
and
add
loopne
jg
cmp
ljmp
in
push
js
xchg
mov
stos
sahf
ljmp
pusha
sti
js
pop
lds
mov
xlat
push
inc
scas
or
sub
popf
inc
out
cmpsb
add
or
fdivp
add
pop
repnz
push
cmp
xchg
in
mov
or
ficoms
pop
xor
and
js
jge
cmp
testl
call
ret
cmp
ljmp
js
xchg
push
cmp
pop
lcall
and
rolb
das
dec
cld
pusha
or
mov
xchg
lahf
pop
loopne
stos
test
mov
lret
push
daa
stos
or
loop
addr16
incb
xchg
les
fs
ljmp
adc
jae
in
mov
dec
add
xchg
pusha
rolb
jbe
jae
dec
leave
mov
jp
mov
or
ss
cmp
aad
mov
mov
loopne
ja
or
daa
jg
inc
mov
mov
fdivs
adc
in
pop
aam
xchg
stos
mov
cs
outsl
test
insl
add
push
mov
add
sbb
cmc
xchg
mov
out
je
test
jl
mov
mov
and
xorl
fstps
iret
jg
int3
lds
lds
push
pop
cmpsl
loop
inc
call
push
aaa
test
test
mov
fsubrl
mov
pop
sub
push
mov
and
jg
fisubs
stos
push
mov
shrd
jae
mov
dec
and
pop
push
cmp
mov
inc
sbb
add
jge
testl
inc
mov
clc
inc
jg
mov
popa
inc
adc
xchg
ja
addl
call
xor
fwait
or
xchg
cmpsb
mov
jb
lcall
leave
sti
mov
xor
inc
movsl
lahf
mov
and
xchg
fs
fsqrt
scas
insl
and
dec
bound
mov
faddl
popa
sub
scas
ljmp
mov
lods
sbb
movsb
sbb
jb
cltd
repnz
ja
mov
mov
mov
jae
movsb
movsb
inc
xor
dec
dec
inc
stos
loopne
jmp
inc
cmp
scas
mov
aaa
stos
push
outsb
sbb
xor
sbb
cmp
test
push
outsb
inc
ljmp
lods
lret
pop
dec
into
test
lock
inc
lret
clc
arpl
nop
dec
pop
aam
mov
testb
dec
cmp
lods
xchg
ret
jnp
pop
jno
mov
out
fldenv
outsb
jne
shlb
enter
push
adc
jmp
hlt
xchg
sbb
jb
mov
add
push
roll
mov
xchg
fimull
scas
mov
sub
idivb
push
cwtl
stc
lret
mov
subl
gs
mov
movsb
scas
cmpsl
fnstenv
mov
or
jne
jmp
mov
outsl
gs
fistps
aad
jmp
stc
pushf
cmc
sbb
repz
sti
xor
lahf
mov
adc
push
test
lahf
test
outsl
and
adc
xorb
sbb
repnz
mov
xchg
dec
push
mov
push
xor
addr16
inc
xchg
lods
inc
pop
stos
mov
xchg
insb
pop
lret
mov
shlb
lods
adc
cwtl
mov
inc
dec
mov
or
add
mov
and
fucomp
pop
mov
leave
repz
stc
iret
pushf
xor
insb
jae
scas
outsl
decl
mov
repz
mov
ss
mov
fistl
adc
jmp
xchg
stos
es
mov
aad
dec
sbb
inc
mov
fbld
ret
push
mov
ss
inc
scas
pusha
and
push
or
or
fdivr
cmp
push
dec
and
int3
and
cmp
cmp
pop
push
push
aam
mov
loopne
push
fsub
movsb
mov
jne
imul
cltd
jmp
andl
or
repz
gs
inc
inc
pop
xchg
sbb
icebp
sub
je
sub
sub
test
xchg
call
add
aam
sbb
xchg
pop
leave
sbb
out
movsb
xchg
mov
jecxz
mov
mov
ss
xchg
out
sub
iret
std
sub
jecxz
lods
jecxz
push
mov
mov
xchg
cwtl
jnp
inc
adc
int
or
inc
and
pushf
es
xlat
adc
cmp
pop
lcall
and
cltd
das
sbb
js
mov
aas
es
rorl
lds
into
mov
rcr
pop
lods
pop
sbb
cld
sbb
jl
imull
cmc
sub
dec
xlat
mov
mov
call
aam
mov
std
movsb
sbb
sub
mov
cmpsl
cmpsb
push
fmulp
fwait
icebp
mov
or
jge
outsl
test
scas
stos
leave
popa
ret
outsl
cmp
bound
cmp
mov
cmp
enter
aaa
sbb
imul
jge
ljmp
mov
mov
fs
ljmp
movsb
dec
ja
inc
add
lret
pop
dec
lret
dec
outsb
mov
enter
inc
clc
mov
jae
sbb
decl
add
stc
lods
je
inc
mov
lods
push
xor
jp
xchg
jmp
adc
sti
lea
insl
xchg
leave
sbb
push
xchg
or
ss
mov
and
data16
and
dec
ds
and
enter
ret
jp
sbb
hlt
notb
push
out
pop
outsb
and
aam
jae
mov
lds
jp
xchg
mov
pop
mov
ljmp
test
aaa
in
push
xchg
jns
and
ljmp
rcll
inc
cmp
pop
jp
scas
scas
adc
bnd
rcll
push
dec
cwtl
pop
test
daa
lock
pop
pushf
std
push
dec
dec
into
icebp
nop
dec
mov
popa
out
adc
sub
cmp
repnz
inc
mov
insl
stos
test
loopne
js
pop
cmpsb
xlat
add
gs
pop
adc
int
inc
jecxz
mov
lods
out
lcall
jecxz
loope
js
mov
in
lods
xor
test
inc
addr16
dec
mov
lret
shr
push
sbb
cltd
in
arpl
xor
ja,pn
int
jp
pop
mov
scas
adc
jnp
xor
cmp
push
cwtl
cs
and
sub
sub
push
jg
repnz
lret
adc
add
enter
and
jo
xor
sub
pop
pop
popa
or
sbb
push
xchg
xchg
mov
pop
jne
testl
xchg
je
jmp
test
or
sub
popf
or
mov
loopne
lods
push
out
dec
sarb
ljmp
cld
mov
and
or
sub
xor
xchg
add
jno
sub
movsb
idivb
pop
add
ficoms
pop
pop
mov
ret
data16
cmp
out
and
and
lcall
rcrl
shrb
mov
lret
fnstcw
mov
fwait
mov
loope
mov
das
cli
sub
jbe
mov
push
enter
loopne
pminsw
inc
into
sub
cld
add
or
mov
sub
push
jmp
pop
mov
enter
movsb
loop
movsb
sub
inc
sub
fimuls
mov
or
in
dec
orb
in
movsl
adc
int3
scas
jge
test
int
and
mov
addb
int
in
test
dec
jecxz
shrb
fnstcw
nop
push
sbb
inc
in
imul
das
mov
sub
popf
loopne
pop
push
dec
test
repnz
mov
mov
into
mov
or
lods
cmp
call
and
push
ror
inc
sbb
into
out
and
inc
shl
mov
cmp
jl
leave
mov
xchg
sbb
pop
aad
rorb
lahf
icebp
ret
cltd
xchg
or
xlat
push
xchg
scas
repnz
ljmp
dec
nop
pop
mov
aas
jmp
mov
data16
and
sub
jecxz
or
jp
lret
and
rorb
fnstenv
xchg
push
out
out
ljmp
lea
call
fidivrl
dec
mov
ret
pop
std
sbb
outsl
mov
jmp
dec
addl
xor
out
clc
jg
inc
das
std
jp
dec
in
stos
cli
movd
stos
stc
popf
leave
xor
push
cmp
rcl
cmp
es
and
hlt
mov
inc
lds
popf
mov
pop
and
jmp
inc
dec
mov
sbb
inc
std
xor
aaa
sti
sub
push
pushf
popf
out
push
test
test
xor
sbb
cmpsb
lock
adc
decb
pop
repz
or
cmp
icebp
inc
popf
fwait
pop
outsb
fwait
push
mov
stos
xchg
or
in
rcr
int
or
sbb
and
ret
fwait
xchg
scas
cmp
add
int
in
lock
jbe
pop
xlat
inc
xchg
inc
cmp
sbb
loopne
push
mov
dec
pop
out
push
repz
dec
or
add
fisubs
clc
jmp
xorl
jmp
mov
push
add
xor
mov
hlt
scas
sbbb
je
sarb
test
inc
inc
sub
xor
jb
adc
cmpl
fcoml
inc
loopne
dec
jb
xchg
jmp
aaa
xor
lods
dec
pop
leave
mov
imul
fstps
addl
push
fwait
cmp
inc
xchg
out
mov
ss
xlat
movsb
push
xchg
xchg
inc
mov
lret
mov
frstor
adc
imul
mov
stos
jb
call
jmp
int3
mov
add
dec
mulb
ljmp
xchg
popf
ss
and
popa
mov
call
mov
jg
adcl
idivl
mov
inc
add
js
adc
adc
in
pop
out
jbe
pop
sub
xor
mov
push
into
adc
adc
hlt
scas
sbb
call
icebp
dec
push
xchg
jns
pop
sbb
rcrl
dec
push
loopne
mov
fldcw
jnp
mov
cmc
lahf
mov
mov
adc
out
test
jg
dec
sub
or
out
call
inc
push
shll
mov
and
dec
bound
int
mov
cmp
cmpsl
mov
lods
xchg
or
cmp
mov
cmpsl
fwait
leave
bound
int3
notl
fbld
cmp
pop
ljmp
mov
aam
pop
pop
cmpsl
xchg
jno
jg
adc
xchg
fsubs
aam
mov
iret
or
xor
and
or
push
push
pop
nop
add
cmp
dec
jecxz
xchg
subb
popa
xor
aam
popf
or
sbb
cwtl
pop
call
lea
mov
dec
jb
mov
std
movsl
inc
je
out
cmpsl
lret
loopne
cmpsb
ret
adc
test
dec
loop
cwtl
imul
clc
out
aaa
inc
fsts
lea
or
or
aam
mov
jne
std
or
addl
mov
test
mov
fstpl
insl
dec
mov
or
dec
lcall
xor
xor
ficoms
insb
add
jmp
pop
mov
leave
dec
sub
ret
mov
movsl
lsl
stos
int
mov
mov
push
sbb
popf
dec
insl
or
mov
cmp
mov
dec
jecxz
jno
adc
xchg
push
dec
call
xor
add
jno
add
sbb
jns
mov
leave
enter
mov
or
bound
xchg
mov
in
imul
rclb
or
xor
bound
mov
mov
cmc
pop
mov
addl
roll
ficoms
push
stc
insb
out
pop
jl
ljmp
test
sbb
add
enter
out
xchg
dec
fdiv
lods
pop
push
xchg
into
cmpsb
inc
inc
stos
and
mov
dec
pop
jbe
fbstp
mov
cmc
imul
lods
out
roll
xor
stos
lret
insb
adc
bound
fisttpll
in
xchg
xchg
and
in
leave
inc
cld
pop
adc
sub
sahf
lods
lahf
jp
js
in
roll
lcall
orl
rclb
jl
fiadds
xlat
negl
cmp
test
sub
call
lea
ss
rcll
out
loope
pop
mov
add
sub
cmp
pushl
inc
fbstp
sub
pop
std
sub
fs
ds
sub
sbb
push
sub
fwait
xor
stos
dec
push
fwait
sbb
bound
mov
mov
gs
lret
cmp
mov
pop
ffree
push
adc
in
into
add
jne
jb
hlt
push
or
adc
pop
shlb
cmp
mov
inc
cld
adc
xor
stos
adc
and
aaa
adc
mov
std
mov
fdivl
insl
dec
lods
adc
xorl
push
hlt
sbb
js
fs
pop
jb
push
pusha
inc
rcll
pop
dec
arpl
outsb
mov
cmovg
outsb
test
and
xlat
fimuls
add
out
mov
out
mov
mov
mov
mov
lret
jg
bnd
hlt
xchg
stos
test
nop
pop
aad
stos
pop
stos
mov
cmc
cltd
xchg
and
out
add
inc
xchg
pop
cmp
push
push
inc
lret
mov
pop
cmpsb
shlb
or
je
mov
inc
sub
shl
and
mov
push
xlat
std
call
sbb
cmp
xor
sub
mov
sub
bound
cld
dec
adc
mov
ss
insl
bnd
in
insb
loop
rorb
js
fbld
push
cmpsb
adc
xor
out
mov
sub
mov
push
nop
push
add
and
ss
iret
cmpsb
pop
jl
cmpsb
pop
shrb
lret
sbb
cli
dec
loope
push
push
cltd
push
aad
dec
pusha
mov
stos
sbb
pop
repz
rorb
cmp
aaa
push
in
subb
sahf
outsl
fsubr
sub
add
stos
cmp
and
adc
imul
in
pusha
adc
das
mov
inc
or
xchg
dec
and
inc
xchg
jmp
sbb
cmove
sbb
pushf
mov
popa
adc
sahf
cmp
cli
loopne
xchg
into
and
mov
les
push
and
adc
and
dec
cli
pop
push
out
lock
bound
addr16
aad
in
shll
stos
add
mov
fmull
jle
cli
enter
divl
test
mov
movsl
lret
repnz
and
jbe
mov
xor
or
lret
dec
xchg
data16
movsl
xchg
fidivs
out
cmp
jo
mov
clc
xor
bound
aas
fmuls
imul
in
mov
inc
fistl
xchg
mov
cmpl
add
fiaddl
shll
scas
push
and
xchg
push
bound
push
sbb
inc
pop
xor
inc
call
mov
out
jae
add
cmc
fistps
cld
lods
sub
aas
push
cld
movsb
aad
or
sahf
dec
int
pop
pop
mov
mov
jo
dec
xchg
nop
les
push
into
xchg
mov
xchg
jo
pop
pop
out
adc
jae
test
movsb
stc
cmp
jno
and
subb
dec
xor
in
aaa
int3
cmc
sahf
cmc
arpl
aam
dec
jmp
cmp
xor
add
data16
bnd
mov
dec
cmp
pop
je
scas
push
iret
mov
mov
scas
test
sbb
je
or
mov
sub
push
iret
fcompl
mov
iret
nop
sub
cmp
dec
push
lret
add
xchg
or
leave
inc
xor
mov
push
dec
mov
xor
sbb
int
cmp
pop
out
mov
or
and
daa
mull
std
mov
inc
lea
pop
sub
inc
mov
loope
test
jo
mov
rclb
aaa
pop
scas
test
mov
push
ljmp
sbb
outsb
inc
cmp
cmpsb
lret
cmpsb
daa
xor
cmp
push
cmp
mov
push
rolb
push
mov
call
jl
xlat
pop
or
add
jp
repnz
cmc
lahf
iret
and
inc
xchg
test
jbe
and
mov
outsl
and
sbb
push
sub
jns
inc
dec
jo
push
xchg
jns
repz
cmp
lcall
outsb
xchg
js
jbe
gs
and
push
and
adc
mov
mov
inc
and
decl
loope
in
jge
outsl
cmp
sbbl
es
and
mov
pop
push
jg
dec
xorl
xlat
sub
push
adc
and
cmp
rcl
out
cmc
sub
mov
xchg
xchg
fsubrp
lds
fmuls
inc
adc
sbb
fsub
push
imul
mov
push
rclb
std
inc
pop
push
loopne
popa
outsl
sub
stc
add
sbb
inc
ret
mov
decl
mov
jne
lcall
js
push
outsl
push
cmpsl
add
add
mov
cld
test
mov
xor
jmp
gs
xchg
pushf
mov
loope
dec
sub
and
movsl
std
pop
into
mov
insl
sbb
mov
imul
mov
fsts
jle
jge
add
cmp
pop
jns
sbb
and
xchg
jp
loope
or
rcrl
js
out
mov
sub
in
sbb
ja
push
and
jbe
rolb
jmp
push
daa
mov
cmpsb
scas
iret
cmc
fs
push
add
int
out
push
sbb
mov
adc
in
dec
dec
mov
xchg
xchg
or
mov
push
std
jno
cmp
mov
pop
iret
incb
test
and
dec
lret
or
mov
or
sti
mov
mov
sub
cmpsb
inc
lods
mov
ja
sbb
mov
push
fs
sbb
and
mull
push
rclb
imul
fiaddl
push
mov
add
sbb
lds
add
push
add
cmp
push
add
jg
xchg
xchg
into
dec
sbb
fsubl
mov
ja
adc
cmp
dec
cld
push
mov
imul
xor
jmp
filds
pop
inc
or
sbb
ja
adc
jg
das
pusha
add
hlt
and
dec
xchg
cltd
mov
adc
add
imul
sub
jns
and
pop
outsl
popa
jae
jbe
mov
sub
loop
jbe
xchg
xlat
ret
mov
adc
pop
cmc
pop
jg
cmp
in
mov
sbb
or
add
sub
sub
xchg
int
pop
outsl
bound
jg
pop
pop
mov
or
call
leave
and
test
mov
shrb
bound
dec
stos
push
popa
cli
cmc
mov
cld
jno
stos
pop
sbb
mov
dec
repnz
imul
push
loope
cmpsl
pop
jno
fiadds
rcrb
addb
sbb
dec
xchg
mov
mov
mov
pminub
mov
dec
and
outsb
insb
cmpsb
test
stos
mov
insl
push
dec
or
cli
push
pop
mov
shll
pop
cmpsb
repz
pop
and
ret
cmp
in
movsb
sbb
mov
push
xor
mov
xchg
cmp
sbb
hlt
das
cmpsl
xchg
xchg
adcb
mov
hlt
sahf
pop
mov
movsl
cmp
das
sub
xchg
imul
int3
adc
xchg
cmp
andb
out
xor
and
xor
out
shll
in
sbb
mov
or
xorl
loop
ljmp
aas
xor
add
dec
mov
mov
ljmp
cmp
push
inc
push
stc
in
scas
mov
subb
sbb
arpl
xchg
push
mov
ljmp
add
mov
push
xchg
sub
ljmp
inc
lds
push
xchg
mov
adc
push
push
jg
daa
add
je
lds
stos
mov
push
ljmp
lahf
mov
or
or
sbb
loope
lock
jnp
cmpsl
sbb
jl
ret
cmc
inc
int
ljmp
sub
jbe
xchg
cmp
lahf
or
cmp
mov
popa
and
sbb
fcomps
stc
fs
stos
js
lahf
xchg
daa
cmp
jns
gs
icebp
outsl
dec
and
add
rorb
sub
and
mov
mov
pop
xchg
test
pop
push
rol
loopne
add
pop
pop
push
add
or
xcrypt-cfb
cmpsl
data16
mov
cltd
sub
adc
pop
sbb
repnz
mov
fiaddl
stos
mov
filds
stos
mov
xchg
imul
push
add
mov
xchg
or
testl
mov
xchg
add
pop
ljmp
push
jo
icebp
and
mov
in
mov
mov
cmpsl
sbb
xchg
rorl
sub
add
mov
pop
fadd
adc
addr16
push
add
xor
adc
sub
mov
test
and
sbb
push
sub
fs
and
lods
icebp
push
fwait
jmp
decb
js
and
arpl
sub
xlat
clc
xlat
mov
into
cmp
orl
add
insb
adc
sub
push
inc
xchg
xor
ret
ror
popa
xchg
adc
sbb
jecxz
xor
or
push
dec
push
popl
push
lds
aam
jae
cmp
imul
sub
inc
outsl
ds
push
pop
mov
fdivrs
hlt
jl
data16
out
lds
mov
cmp
stos
sbb
or
cmp
push
ret
sarb
mov
mov
jecxz
and
mov
jecxz
mov
push
dec
cmpl
fcomp
sub
jle
jb
je
repz
lret
rolb
pop
notl
mov
jns
xchg
scas
ret
jns
inc
fstpt
xchg
lods
call
paddd
data16
pop
add
addr16
movsb
mov
inc
add
outsl
xchg
das
fstl
bound
cltd
mov
cmp
lcall
in
cwtl
mov
pop
push
out
adc
in
aaa
push
mov
jl
mov
and
xchg
push
outsb
loopne
mov
add
ljmp
es
in
jle
jno
in
dec
inc
jo
dec
in
mov
sub
filds
arpl
adc
inc
mov
push
iret
arpl
jmp
jg
fldenv
sub
add
pushl
mov
inc
sahf
sbb
lahf
mov
jb
xchg
and
xlat
pop
jl
in
lods
arpl
addb
js
pop
sub
jne
jg
push
inc
clc
mov
ss
adc
mov
sahf
out
das
icebp
je
jns
or
and
mov
push
mov
lcall
jb
mov
and
imul
ret
mov
dec
add
out
mov
mov
lahf
mov
jg
fwait
push
pop
aas
mov
inc
dec
inc
rorb
dec
xor
movsl
xlat
test
mov
xchg
insb
or
adcl
and
or
pop
test
mov
inc
mov
adc
shll
sub
mov
out
arpl
hlt
cmpb
jns
mov
scas
jmp
shlb
insl
insl
push
cld
dec
sahf
add
jbe
xor
sub
mov
sub
mov
in
or
sbbl
adc
clc
inc
test
adc
pop
cmp
cmp
les
sbb
fidivrs
insl
les
jecxz
andl
sbb
add
rcll
jae
adc
enter
stc
loopne
jge
adc
les
or
andb
xor
add
imul
jecxz
xchg
sarb
mov
sub
push
pop
inc
sub
out
lahf
push
xorb
ret
je
icebp
mov
push
cs
push
sub
sahf
mov
fs
jae
pop
imul
in
add
gs
jns
mov
dec
inc
push
imul
testl
rorl
jns
in
loop
aam
test
push
fdiv
add
dec
pusha
sub
adc
mov
pop
scas
xchg
push
push
jmp
stc
pop
lods
iret
aad
xor
jnp
in
lods
add
adc
daa
fs
bound
inc
scas
and
jl
test
or
jnp
mov
add
aad
and
and
push
and
mov
add
test
sub
cmp
cwtl
or
cld
sub
pop
arpl
sub
psubb
push
mov
and
mov
or
leave
inc
xor
push
fidivrl
jo
test
fwait
cmp
jb
jne
insl
xchg
sbb
int
push
sub
stos
loope
or
xor
lcall
mov
xchg
or
out
adc
je
imul
ret
jo
mov
flds
das
xchg
in
pushl
sahf
roll
lock
insl
sbb
xchg
adc
or
scas
ljmp
lcall
inc
adc
mov
or
add
xor
xchg
pop
inc
mov
int3
dec
stc
adc
xchg
push
or
cmp
out
jno
pop
jg
stc
push
push
outsb
mov
nop
push
inc
inc
out
add
ljmp
jne
lods
jbe
pop
lcall
cmpb
ja
push
jecxz
mov
mov
rorl
or
pop
neg
cli
sub
mov
loope
lods
test
add
insl
push
dec
or
push
or
les
fcomps
mov
push
orb
outsl
mov
insl
mov
sub
fstps
mov
jge
mov
ljmp
sub
inc
inc
ret
outsl
icebp
inc
mov
jmp
pop
out
cmp
mov
adc
aaa
jge
xchg
outsl
lds
adc
les
mov
dec
adc
shlb
ja
sbb
cmp
aaa
test
push
rolb
ja
callw
in
mov
popf
push
out
fcmovnbe
shlb
insb
dec
adc
jle
enter
push
pop
cltd
add
clc
lcall
rcl
ret
test
fcomps
push
ja
or
jl
into
sub
mov
mov
ja
rclb
mov
out
sub
pop
data16
xchg
fs
xor
push
ds
ss
imul
rorl
push
xchg
xor
sahf
cmpsb
outsb
inc
icebp
leave
leave
clc
mov
loop
mov
and
scas
or
cmp
push
jecxz
bswap
fstps
sbb
lret
xor
jp
push
jns,pt
adc
jl
in
iret
adc
sbb
fsubrl
bound
or
popa
insl
mov
hlt
xchg
lret
imul
mov
jecxz
push
loop
and
lods
je
aam
and
movsl
cwtl
push
je
sub
ret
jns
or
imul
outsb
jns
cs
sti
lods
rorb
lcall
fiaddl
xcrypt-cfb
cmpsl
bound
ficoml
js
lahf
push
int3
cmpl
mov
pushf
xorb
sbb
or
cmp
sbb
mov
lea
pop
mov
and
add
and
xor
stos
inc
hlt
mov
sub
hlt
and
loop
adc
test
cmp
dec
ljmp
xor
mov
dec
and
ror
pop
mov
std
mov
addb
inc
push
adc
push
stos
repz
adc
jno
fdivrs
adc
imul
icebp
cmc
scas
cmc
jge
int3
cwtl
or
enter
mov
div
test
aaa
inc
push
std
cmp
addr16
outsl
ljmp
pop
fisubrl
dec
pop
stc
mov
sahf
movl
jg
jnp
fwait
mov
add
push
inc
jp
pop
into
out
sub
xor
cli
add
pop
pop
inc
xor
ror
addr16
pop
int3
adc
cmp
call
xchg
push
movsb
sub
js
pop
sub
leave
mov
jns
cmc
test
or
and
cmp
into
mov
xor
rclb
inc
dec
in
jl
mov
imul
push
cmc
and
or
push
scas
popa
jae
int3
pop
loop
fxch
outsl
or
sbb
mov
mov
push
pop
mov
out
dec
push
loop
lock
inc
in
fistl
test
mov
iret
stos
adc
sbb
jb
js
mov
adc
popf
sbb
jmp
iret
rclb
jmp
mov
mov
or
hlt
cld
mov
leave
mov
imul
cmp
ds
ljmp
clc
and
cmp
dec
test
mov
insl
ss
repnz
iret
jb
ljmp
inc
push
cmp
mov
into
stos
jne
mov
jns
movsb
add
pop
rorb
ljmp
lock
mov
push
lea
dec
jg
jg
sub
sub
aaa
cmp
into
mov
and
xchg
xchg
out
clc
fistpl
cs
inc
pop
pop
lret
dec
jnp
hlt
and
leave
jl
dec
js
jmp
insl
aam
pop
lea
jge
call
jle
bound
outsl
xchg
pusha
mov
xor
add
orl
andl
jmp
xor
js
sub
lcall
mov
dec
movsl
push
xor
out
adc
mov
push
or
movsb
pop
xchg
jmp
bswap
push
and
mov
push
and
or
sbbb
lret
std
incl
or
inc
in
stos
rorb
pop
sbb
mov
aad
movsb
inc
jb
xchg
ljmp
push
mov
imul
out
push
sbb
fnstenv
xchg
out
into
les
pop
push
stos
jne
lret
cld
mulb
xchg
testb
lahf
mov
outsl
dec
jecxz
dec
fstpt
xchg
je
jmp
icebp
hlt
nop
pop
xchg
mov
cmp
stos
dec
sub
sbb
mov
mov
les
mov
loope
mov
fists
iret
aaa
popa
js
cmpsl
xchg
sahf
mov
xchg
or
cmp
xor
push
jne
lret
push
mov
sarl
shl
pop
add
insb
fcomp
or
outsb
arpl
mov
jmp
dec
and
mov
jne
mov
roll
ret
dec
cmp
popa
stos
mov
test
and
and
jmp
sub
sub
ljmp
std
dec
ljmp
int
sub
popl
dec
aad
outsl
cmp
pop
or
add
gs
sbb
outsb
rcr
dec
pop
stos
aad
jl
add
push
in
arpl
sub
aaa
sbb
lea
arpl
iret
cld
hlt
mov
add
loopne
push
xorl
or
xchg
bound
push
add
dec
push
ss
cmp
mov
jnp
lret
or
and
fsts
pop
popf
mov
mov
or
adc
jle
sahf
xchg
ret
stos
push
pop
bnd
cmpb
push
mov
mov
test
or
lret
adcb
cs
pop
inc
rclb
cltd
dec
dec
mov
mov
cmp
lea
lahf
push
jl
out
and
lret
cmc
cmpsl
dec
add
xchg
aam
push
loop
aam
nop
and
mov
mov
push
inc
out
sbb
sahf
outsl
je
inc
xor
cltd
call
pop
daa
inc
sub
xchg
out
xor
cs
pusha
in
pop
adc
and
ljmp
lock
daa
test
lret
push
adc
iret
xor
pop
jne
repz
pusha
cmc
push
mov
notl
repnz
sbb
lcall
sbb
divb
in
les
rol
jbe
hlt
lret
push
data16
mov
or
jg
pushf
mov
xor
pop
pop
mov
fsubrl
icebp
lods
pop
clc
xchg
pop
loope
xchg
ret
sahf
jle
xchg
push
dec
not
fs
cmp
lds
imul
fldenv
push
adc
pop
mov
add
adc
and
push
push
mov
out
adc
xor
sub
pop
daa
arpl
cld
popa
stos
pop
shll
ficompl
adc
mov
nop
pop
jl
divb
loope
fstpl
jae
mov
mov
in
and
xor
cltd
icebp
pop
xchg
push
insl
and
out
jge
add
shll
adc
rol
or
push
and
iret
test
dec
jne
aaa
dec
loop
pop
adc
in
in
push
add
adc
push
sub
mov
inc
sbb
test
adc
lods
adc
jno
mov
enter
push
es
jecxz
push
bound
mov
ror
ret
inc
inc
push
cmc
lahf
cltd
lods
pushf
lahf
out
cwtl
push
icebp
push
decb
mov
fwait
mov
xor
add
mov
call
sbb
mov
in
clc
gs
or
xchg
insl
xchg
out
and
cmp
lret
int3
lahf
daa
ljmp
adc
sbbl
mov
inc
frstor
dec
andb
jge
xorb
jp
fiaddl
cli
pop
and
cli
inc
aad
add
icebp
or
repnz
jecxz
push
std
cmpl
cmp
xchg
nop
pusha
sub
sub
sub
mov
loopne
xor
mov
mov
push
fdivrs
add
adc
mov
scas
orl
ret
fadd
pop
xchg
mov
pop
push
inc
add
shll
inc
jmp
mov
aam
out
cmp
orb
mov
mov
inc
adc
add
cmp
subb
out
out
jmp
inc
push
mov
scas
fcomps
hlt
aad
jge
pop
sti
xchg
sbb
movsb
cwtl
test
rcll
push
js
call
inc
mov
int3
dec
pop
shlb
aaa
adc
mov
mov
mov
mov
fdivrs
sbb
inc
das
shr
test
sub
push
call
gs
mov
lret
fsubrs
fidivs
push
mov
icebp
mov
jmp
fisubrs
jp
lcall
cld
stos
and
mov
adc
lds
mov
jmp
int3
cmp
loop
aas
mov
lahf
pop
inc
test
and
cmpsl
or
hlt
punpcklwd
dec
add
sbbb
flds
sbb
pop
test
mov
lret
adc
sar
jne
out
and
xchg
lret
movsl
sub
test
iret
sub
cmp
nop
data16
leave
sub
orb
ss
xchg
out
ljmp
mov
rclb
or
leave
sbb
adc
sub
scas
lret
in
ljmp
dec
int3
add
outsb
mov
mov
adc
cmp
pop
lea
mov
jecxz
subb
or
push
or
aam
paddw
pop
inc
inc
sarb
stos
pop
rcl
push
mov
dec
rorl
and
pop
push
rolb
movsl
test
popa
push
xchg
xchg
adc
jnp
scas
sbb
int
cmp
pop
xchg
aam
xorl
xor
sub
jg
jge
js
inc
mov
cmp
test
sbb
js
div
test
loopne
or
jne
jns
adc
push
aas
inc
inc
inc
mov
xchg
pop
sub
imul
mov
shlb
xchg
add
xor
jmp
lahf
movsl
lods
push
push
jg
lods
lret
leave
push
xchg
into
loop
mov
cld
sbb
inc
push
int
movsb
lock
int
dec
adc
fistpl
mov
xchg
lea
pop
adc
repnz
add
and
insb
loop
push
lock
xchg
push
sub
mov
push
lods
ds
jno
mov
push
xchg
jb
dec
or
or
in
adc
aam
icebp
push
mov
xchg
psadbw
arpl
push
xor
xor
mov
movsl
jge
mov
pop
xchg
mov
mov
loope
inc
jnp
push
cltd
cmp
imul
call
adcl
mov
scas
xchg
mov
insb
shlb
sub
push
inc
jb
fwait
cmpsb
stos
sub
or
rcrb
insl
cwtl
jg
sub
pop
mov
ds
out
jnp
mov
lea
lds
mov
mov
imul
jne
and
xchg
sbb
mov
repz
sub
sub
cmp
or
out
lret
bound
shlb
jmp
das
cltd
mov
mov
dec
mov
addr16
sbb
in
lret
popa
sti
inc
pop
xchg
sahf
xchg
nop
mov
in
popf
cld
sub
ja
xchg
sub
cwtl
lock
adc
pop
les
fidivrs
cli
sub
dec
nop
jns
sbb
stc
mov
mov
push
adc
stos
adc
int
add
jle
mov
dec
into
ficompl
inc
jle
enter
loop
lock
data16
pop
add
push
lcall
test
and
test
push
jmp
es
incl
test
imul
push
loopne
push
dec
xchg
cmp
hlt
pop
sbb
xchg
aam
shll
mov
test
push
idivl
test
mov
out
adc
into
add
dec
add
jle
leave
flds
inc
cld
mov
push
lods
lea
test
lds
inc
jnp
sub
xor
pop
sub
lret
icebp
repz
dec
out
test
mov
sub
push
ja
les
sbb
mov
pop
pop
jb
cld
add
das
sub
mov
lock
addb
sbb
jnp
test
jnp
gs
sbb
bound
xor
in
iret
popf
adc
cld
ljmp
pop
inc
popf
pop
jbe
dec
jne
sti
movaps
insb
cmc
adc
push
push
sbb
ret
xchg
mov
inc
aaa
jb
mov
bound
stos
and
sbb
clc
push
cmp
mov
pop
test
jmp
jg
mov
fidivrs
stos
xor
rorl
cld
stos
or
jb
sub
or
inc
add
fld
mov
loopne
aaa
jns
mov
or
fwait
add
xor
call
mov
out
mov
arpl
rol
pop
std
imul
sbb
add
mov
mov
and
push
xor
or
push
pop
dec
inc
xchg
daa
and
jecxz
lods
mov
aad
cmp
dec
lods
addl
dec
faddl
stc
pop
es
sub
cmpsb
add
addr16
adc
sbb
repz
and
mov
pop
mov
jle
mov
scas
cmpsl
push
loopne
loope
sub
pop
out
lods
daa
js
js
fwait
pop
push
mov
inc
dec
aas
pop
fwait
clc
and
ficoms
repnz
dec
loop
sbb
add
inc
inc
xor
sub
outsb
mov
push
fidivs
fisubrl
and
and
jecxz
push
xlat
int
mov
xchg
daa
cmpsb
mov
push
mov
popa
in
repz
repnz
and
mov
inc
xlat
fiadds
js
hlt
jne
push
xlat
jp
sub
dec
pop
inc
mov
call
jecxz
sub
clc
adc
popf
gs
es
mov
add
mov
test
je
cmc
ret
pop
xchg
pop
enter
xor
lcall
iret
push
jp
cwtl
sbb
mov
mov
adc
xor
loopne
mov
test
push
mov
cmp
adc
push
mov
lret
lods
xchg
test
sub
dec
pop
insl
sub
fidivrl
sti
mov
daa
imul
scas
cmovb
xor
movl
push
xchg
scas
fs
mov
dec
dec
mull
lret
adc
push
cmp
jae
and
inc
cld
push
pop
sbb
push
scas
add
xor
loopne
fcoms
int3
jnp
movsl
sahf
pop
rolb
sahf
or
movsl
aad
loope
movsb
js
ljmp
stos
jmp
mov
adc
insl
sub
push
arpl
popf
das
cmc
mov
mov
arpl
lods
fmul
icebp
aas
rcr
inc
outsl
rolb
pop
iret
movsl
add
jg
or
dec
addb
inc
push
loop
add
es
fisttpl
mov
shl
dec
cs
jge
lret
or
ja
out
lock
mov
sti
xor
dec
shll
and
dec
jne
mov
sub
arpl
mov
mov
out
add
int
dec
sti
add
push
add
xor
orb
xchg
in
pop
rcrl
popf
pusha
pusha
insb
jmp
xor
es
pop
sti
cltd
jl
jbe
sbb
cs
xor
sub
cmpsl
popf
das
xor
sub
xor
in
stc
push
mov
jg
idivl
test
fsubrs
ror
mov
and
mov
xchg
lcall
xchg
xor
fdivr
fstpl
popa
xchg
fidivl
cs
pop
push
adc
inc
adc
pop
add
cwtl
sar
rolb
pop
add
sub
stc
popa
push
nop
icebp
call
push
jg
push
and
xchg
repz
test
iret
inc
je
repz
jno
in
pop
ds
imul
bound
int
scas
call
dec
into
aam
insb
push
dec
adc
lcall
inc
lcall
hlt
pushf
call
aas
add
arpl
icebp
jns
in
cltd
pop
es
fcoms
mov
add
adc
rcll
int
fsub
cld
pusha
mov
inc
adc
sub
jmp
das
popa
inc
loope
xchg
xlat
inc
jmp
loop
addr16
mov
es
out
mov
mov
pop
dec
ficomps
inc
test
pop
jp
repz
mov
pop
ss
insb
in
shlb
adc
aam
js
enter
addl
test
outsl
jae
xchg
mov
jae
sub
mov
arpl
add
in
mov
mov
lods
xchg
popf
sbb
add
mov
push
mov
cs
int3
rcr
aaa
rcrl
ss
xchg
cmp
je
cmp
add
sbb
mov
cld
or
pop
mov
out
leave
jl
les
sti
mov
fisttpl
shrb
fidivl
push
fs
jl
cmpsl
xor
mov
shll
mov
jmp
sbb
mov
stos
rcrl
jne
jae
loopne
sbb
sbb
jns
sub
nop
mov
mov
cmpsb
and
icebp
loope
or
cmpsl
mov
sub
pop
subb
in
das
sbb
das
adc
andl
int3
mov
shlb
outsb
fwait
or
lret
sysret
add
test
or
mov
std
mov
push
lods
lods
dec
dec
fwait
push
pushl
xor
xor
std
pop
inc
sti
xchg
push
pushf
vpunpckldq
rcll
pop
sub
mov
or
hlt
arpl
gs
loop
push
movntps
test
lret
sbb
inc
stos
mov
push
divb
sahf
rcl
jne
jmp
fisubl
xor
lds
ljmp
push
dec
out
repz
ss
jnp
data16
mulb
std
dec
add
sbb
dec
into
xchg
rolb
ja
adc
test
or
sub
leave
mov
sbb
sbb
aam
and
jle
roll
jns
add
adc
sub
fnsave
mov
pop
imull
mov
add
test
or
sti
popa
out
shrl
add
adc
jo
bound
ljmp
in
sbbl
fistl
push
pop
cmp
sbb
iret
js
into
mov
sub
mov
pop
cltd
sbb
and
xor
ds
lock
jbe
loope
mov
movsb
nop
jnp
inc
mov
push
hlt
push
iret
dec
inc
or
arpl
cmp
xchg
fs
xor
and
pop
mov
mov
jae
addr16
rcrl
dec
ret
mov
ret
adc
stos
jnp
nop
push
popf
jmp
movsl
lea
stc
int3
add
adc
pusha
sbbl
lock
cmp
pop
xchg
cltd
cwtl
addr16
outsb
gs
shrl
mov
pop
popf
xor
push
cmp
aas
cwtl
add
and
sbb
leave
imul
rolb
repnz
mov
xchg
jecxz
mov
xchg
xor
inc
cmp
xor
loop
xchg
and
pop
js
ja
outsl
jno
mov
and
xchg
rcll
inc
dec
insl
xchg
xchg
ljmp
ret
pop
cltd
pop
out
pop
out
dec
les
mov
pop
cmp
mov
adc
mov
and
aas
stos
ret
in
insb
mov
into
cmp
ljmp
mulb
push
mov
outsb
sti
pop
jg
daa
and
lods
mov
cwtl
pop
sahf
in
popa
rolb
add
leave
mov
fxtract
jle
fbstp
adc
insb
pop
rcrl
inc
push
xchg
pop
repnz
mov
into
jmp
cmpl
add
jbe
ret
mov
lods
popl
xor
sbb
bound
sbb
dec
outsb
mov
push
push
push
mov
jl
add
push
jo
shll
xor
push
notb
push
push
xor
sub
aad
loopne
pusha
ffree
add
mov
sahf
pop
aaa
xorl
pop
ret
push
dec
inc
or
movb
cwtl
mov
flds
insl
sub
icebp
xor
cmc
jecxz
leave
jne
shrb
mov
fs
mov
ja
inc
lret
and
inc
cmpsl
mov
in
dec
repz
and
xchg
ret
xor
sub
sub
xchg
sahf
cmp
idivb
ret
iret
pop
in
mov
xchg
push
and
jg
mov
add
dec
jo
jno
mov
loop
inc
mov
int3
jbe
insb
imul
scas
aam
sub
test
pop
nop
ja
adc
orb
decb
or
xchg
mov
sti
arpl
lea
mov
and
or
dec
fwait
in
sbb
ljmp
fisubrs
loope
loopne
jl
pop
dec
mov
lods
pushl
xchg
aad
cmpsl
jl
fists
add
lahf
mov
insb
les
test
test
add
fistpl
xor
jp
push
xchg
dec
sub
mov
sub
dec
push
es
dec
lret
lcall
aad
jmp
stos
mov
fsubs
in
xor
inc
insb
and
push
xor
or
lret
jnp
in
cmp
aas
adc
pop
repz
sti
push
mov
lods
pop
mov
lcall
rcrw
cmp
add
mov
pop
jmp
inc
shll
not
mov
dec
sbb
cmp
cmpsb
xchg
cs
push
outsl
sbb
xchg
cmp
adc
rcl
xor
outsl
movsl
cs
mov
clc
mov
movsbl
cmpsb
ja
push
dec
inc
inc
pop
xor
xchg
xor
outsl
sahf
push
imul
data16
mov
das
sub
pop
ljmp
adc
add
or
test
mov
mov
ds
repnz
inc
cmc
pop
mov
sub
xchg
sti
cmp
scas
adc
or
cmp
pop
dec
xchg
mov
and
std
lahf
xchg
ret
sti
in
movsl
fildll
push
in
xchg
mov
adc
out
lods
cmp
mov
jle
out
jecxz
jb
cmp
jbe
leave
enter
pop
adc
leave
pop
mov
push
xchg
lods
sti
push
cmp
pop
movsl
cmp
or
push
pusha
push
bound
addb
int
mov
push
sub
outsb
std
mov
jnp
outsb
xorl
pushf
test
mov
rcr
mov
lods
das
mov
mov
aam
mov
inc
inc
ljmp
int3
or
das
imul
aas
in
push
icebp
cltd
inc
and
add
sub
mov
jecxz
dec
andb
dec
std
mov
mov
mov
and
sbb
imul
fnstenv
mov
test
movsb
mov
idivl
xchg
aad
mov
fnstcw
pop
stc
sbb
cmp
lret
add
outsb
adc
xchg
push
add
inc
mov
dec
inc
cmpsl
mov
push
xor
and
or
pop
into
aam
dec
cmp
testl
int
inc
push
call
push
sub
aam
cwtl
cmp
lods
mov
mov
ret
and
jnp
adc
mov
xor
sti
lret
rolb
mov
in
sahf
inc
inc
cs
xchg
dec
aad
inc
gs
jg
idivb
xlat
lock
cmp
sub
lock
cmp
jnp
push
hlt
xchg
insl
adc
mov
subl
out
mov
adc
js
lock
lret
push
and
jge
mov
sbb
jecxz
std
lds
xchg
pop
jns
subl
and
mov
mov
xchg
out
lahf
sbb
xchg
add
in
pop
mov
dec
std
and
out
xchg
xorl
inc
fnstenv
icebp
cltd
nop
divl
inc
pop
sub
mov
repz
lods
lret
daa
mov
xchg
jp
cwtl
out
push
outsl
mov
sbb
rorl
or
mov
or
bound
pop
fbld
les
xchg
lea
and
outsb
and
cmpsb
xor
jge
xorb
dec
or
shll
repnz
insb
clc
enter
outsl
push
jmp
idivb
pop
sbb
mov
nop
ja
sbb
punpckhdq
xor
fisubrl
push
test
stc
mov
inc
jne
mov
xchg
nop
sbb
bound
mov
test
imul
pop
in
push
insl
lcall
and
mov
sbb
pusha
sub
sbbb
hlt
jecxz
mov
jb
dec
insl
mov
add
pop
iret
push
pop
adc
push
push
cli
push
andl
ja
cmp
ja
jmp
add
int
adc
loopne
lods
movsl
cmp
adc
icebp
popf
and
xchg
sub
dec
ss
push
cmp
cld
movsl
lea
sub
addr16
lret
add
int
xor
repnz
cmpsl
mov
in
pop
push
xor
jbe
adc
mov
pop
cltd
mov
jle
sub
pushf
cmc
add
int
inc
in
and
or
stos
jecxz
sbb
jecxz
je
mulb
push
mov
sub
das
sbb
mov
adc
mov
insb
insb
std
leave
add
cld
push
inc
popf
add
gs
pop
lcall
pusha
sahf
jno
or
xor
div
clc
push
mov
popa
or
insb
ficompl
xor
pop
out
icebp
outsb
test
and
pop
push
lods
sub
xor
pop
dec
xor
leave
inc
ret
cmp
push
mov
test
sbb
paddd
shll
addr16
sbb
ficompl
sahf
xchg
inc
push
out
repz
xchg
loop
add
ds
jb
mov
and
stos
cmp
sub
stos
lcall
mov
jbe
gs
push
fistpl
lock
or
xchg
icebp
mov
insl
xor
fdivr
push
pusha
mov
call
negl
push
adc
cmp
pushl
out
insb
and
sbb
movsbl
aad
push
push
pop
movsl
add
popa
mov
out
popf
cli
fldl
popf
mov
rcrb
mov
jp
sbb
sbb
mov
mov
jp
pop
lahf
bound
mov
xchg
xor
push
dec
lcall
movsl
lds
jo
lods
sahf
movsb
and
pop
mov
mov
lds
stos
nop
lds
xchg
cltd
int
test
ret
sbb
rcrl
or
cs
pop
xchg
pop
cltd
hlt
dec
andl
call
or
or
lahf
loopne
bswap
sbb
out
and
or
pop
je
xor
mov
and
cmp
push
aam
lds
xchg
dec
lods
mov
adc
dec
cld
rolb
data16
sbb
pushf
push
loope,pn
adc
repnz
cmp
dec
gs
fists
and
das
dec
mov
cmc
imul
inc
add
rcrl
inc
lds
sbb
adc
loopne
lret
mov
or
and
sbb
loope
mov
ficompl
stos
push
xchg
movsl
mov
inc
fidivs
paddw
sbb
call
cltd
jne
aad
xchg
xchg
mov
insl
neg
or
dec
sbb
jo
add
fbld
repnz
pop
push
in
xor
add
push
cmc
pop
pop
pop
out
ljmp
in
scas
mov
mov
repz
mov
and
jle
shrl
xor
movb
mov
ret
and
push
aas
xor
adc
xor
cmpsl
roll
aad
push
dec
push
or
enter
cmp
ljmp
insl
jmp
addr16
sbb
jmp
aam
sahf
insb
sbb
cld
or
jmp
in
jge
scas
insb
fsubrs
or
xchg
cmp
inc
sti
mov
jmp
std
jmp
sub
push
insb
clc
inc
sarl
lcall
jo
insb
dec
jb
les
pushf
cmpsb
mov
jl
movsb
mov
stos
sbb
dec
push
lea
outsb
cmpsb
insb
stc
dec
xchg
mov
imul
sbb
cmpl
aas
sahf
pop
daa
notb
sub
and
cwtl
xchg
xor
fst
ss
and
add
or
icebp
stos
pop
mov
daa
push
cmpl
gs
movsl
inc
cmp
aaa
xchg
mov
cmpsb
mov
das
add
xchg
push
sub
mov
les
jo
shlb
xchg
test
stos
mov
adc
fcoml
test
out
pop
jb
jne
and
mov
sahf
adc
and
hlt
aad
mov
lock
mov
jmp
arpl
icebp
jne
and
xchg
imul
cli
stc
jns
jg
adc
popf
jae
mov
lock
lea
cli
test
mov
add
gs
mov
mov
call
push
mov
or
clc
xchg
aaa
in
jne
rcl
jp
sahf
push
fnstcw
inc
movsl
push
sbb
jmp
roll
jae
jae
orb
pop
int3
mov
mov
pop
stc
push
mov
sbb
pop
and
outsl
mov
aam
pop
es
movsl
sub
cmp
mov
aam
or
fs
out
pushf
adc
imul
insl
mov
lcall
xor
gs
and
inc
push
xor
pop
xchg
sbb
and
out
lds
mov
and
shrl
sti
leave
push
in
data16
xchg
in
sub
cmp
push
xor
gs
lods
insl
and
pop
in
jbe
lcall
adc
ret
push
dec
jns
xor
or
push
cmp
aaa
sub
shlb
and
jae
push
mov
xor
out
dec
ror
mov
jg
movsl
and
into
cmpsl
xchg
aaa
mov
in
ja
jne
adc
mov
pop
test
cli
stos
aam
mov
dec
fs
lcall
stos
cmp
inc
icebp
movsl
call
xorb
dec
push
shl
mov
inc
fwait
stos
aaa
mov
negb
and
push
sbb
cmp
push
movsl
sub
adc
pop
cmp
fsubrs
movsb
das
ror
lods
jg
leave
push
into
lods
call
push
test
sbb
nop
sti
and
jp
loope
mov
and
mov
mov
bound
out
sbb
and
or
sbb
lods
ficompl
in
xchg
popl
sub
test
mov
pop
inc
jbe
sahf
lods
in
mov
loopne
ds
frstor
stc
cmpsl
ret
jno
gs
jecxz
imul
ret
jmp
xchg
sub
lods
push
ds
outsb
and
fimuls
outsl
inc
inc
insb
cmpsl
mov
out
sbb
lret
mov
addb
mov
jecxz
sub
cli
lea
mov
xor
test
aam
add
fmull
push
push
jb
imul
jbe
lods
rcrl
xorb
pop
out
mov
lea
push
mov
mov
sbb
fisubrs
lea
in
aad
ficoml
push
mov
or
cmp
add
pop
iret
pop
sti
int
mov
pop
xor
cmp
inc
call
adc
es
mov
sbb
sbb
push
dec
mov
dec
jmp
or
dec
popf
jno
fldln2
mov
std
push
xchg
shr
test
xlat
sti
das
push
xchg
or
into
mov
imul
gs
aas
push
adc
hlt
and
lahf
out
ret
fidivrs
loopne
ret
cmp
aaa
dec
inc
dec
in
fs
rcl
mov
sub
maskmovq
imull
inc
lcall
cld
pop
mov
and
xchg
or
lret
push
lcall
jb
gs
pop
cmpsb
xchg
ret
jb
pusha
add
js
jg
push
adc
scas
rclb
mov
xchg
mov
test
pop
roll
pop
repnz
mov
mov
dec
js,pn
adc
es
cmp
cmpsl
xor
mov
mov
mov
jle
mov
inc
outsb
push
fisubrl
lret
inc
test
pop
xor
stos
arpl
jnp
cmp
pop
lock
xlat
push
ficompl
dec
jae
jmp
jl
ljmp
mov
push
in
sbb
sbb
mov
mov
push
xor
pop
mov
pop
dec
int
xchg
jp
and
testb
test
in
setp
sub
arpl
adc
lahf
popf
mov
popa
fcompl
stos
andb
lcall
rcl
arpl
ret
out
mov
daa
sbb
int
pop
and
popa
adc
aas
popa
mov
movl
inc
jae
ss
or
out
or
daa
and
xchg
push
sub
aam
mov
fistps
shll
mov
pop
mov
inc
pop
dec
xor
add
add
test
adc
mov
out
nop
iret
xchg
sub
lock
fidivl
mov
iret
movsb
mov
xchg
sbb
fistpl
test
push
ds
mov
idivl
loopne
adc
xor
xchg
and
arpl
cmp
cmpsb
imul
xor
leave
mov
popf
add
popa
fsubl
dec
pop
xor
sbb
xchg
js
aas
.byte
and
xor
in
xor
inc
cmp
adc
scas
into
or
shrl
adc
xor
inc
int3
ljmp
xchg
add
test
mov
dec
aam
popa
push
imul
push
jbe
push
xor
orb
sbb
ret
cs
icebp
add
mov
lods
sbb
call
aad
int3
xchg
cwtl
fwait
lods
fldenv
xchg
mov
inc
das
or
aam
daa
inc
xchg
cli
sub
and
cld
stos
jmp
jnp
mov
dec
repz
pop
xchg
and
push
jecxz
stos
enter
hlt
sbb
pop
push
cli
imul
pop
popa
in
out
xlat
sbb
mov
mov
inc
fbld
jg
icebp
pop
push
mov
loop
xchg
cmc
and
jle
jmp
mov
inc
xchg
scas
jno
fidivrl
mov
test
cmp
push
aam
addr16
fnsave
scas
cld
aaa
inc
mov
jg
les
stos
int3
cmpsb
add
pop
lock
iret
push
mov
pop
mov
xor
jle
and
push
mov
pop
insl
and
insl
xchg
shll
push
adc
fisubrl
and
into
xorl
mov
add
enter
and
jb
subl
push
xor
fildl
inc
into
scas
sbbb
pushf
push
push
in
dec
mov
notb
and
jne
push
dec
std
fidivs
in
out
icebp
jmp
iret
cmc
mov
mov
dec
pop
jmp
int
add
adc
or
dec
inc
jl
loop
mov
lret
and
cwtl
and
and
jnp
fcomi
loop
es
add
cmp
pop
mov
adc
adc
sbb
pusha
xchg
dec
pop
cld
push
dec
cmp
mov
repz
les
mov
inc
xchg
in
mov
jae
and
notb
add
ffree
mov
subl
and
jne
add
jg
cmp
jb
fmull
cli
sbb
icebp
jge
xor
xchg
dec
lret
in
lea
iret
mov
add
mov
mov
xor
or
dec
shl
sbb
jle
imul
in
push
add
jle
ret
in
cmpsl
dec
adc
xchg
arpl
cmp
aaa
insb
add
mov
inc
xchg
push
mov
in
lods
cli
sbb
push
aad
leave
ljmp
in
arpl
insl
push
mull
lods
sahf
pop
sahf
lods
push
movsl
es
call
jl
mov
pushf
dec
mov
mov
jge
loopne
pop
jo
inc
mov
mov
add
out
sub
shl
pop
jbe
push
dec
cld
inc
repnz
cmpl
add
outsl
xlat
xchg
or
cmp
mov
hlt
and
negl
fstpt
call
imul
lock
mov
mov
test
mov
push
mov
icebp
jmp
sahf
popf
loope
push
decb
mov
cmp
lods
pop
jns
pop
fiaddl
fisttps
mov
out
cld
scas
push
mov
lcall
cli
inc
jae
lret
data16
add
lds
les
pop
inc
sbb
jo
nop
push
cmc
mov
pop
dec
cmp
ljmp
sbb
lea
fldenv
jno
inc
sub
add
idivb
mov
lds
jno
pop
jp
cwtl
daa
and
xorl
movsl
out
xchg
test
mov
inc
pop
or
xchg
push
push
loope
and
sbb
dec
imul
icebp
int3
sub
or
fmuls
aam
cmp
lods
mov
mov
cmp
add
cmp
xor
lods
mov
jmp
clc
out
cmovge
cs
jmp
je
mov
jno
mov
cli
dec
decl
push
les
jmp
mov
xchg
mov
inc
push
and
lods
loop
popf
dec
stc
sbb
dec
cmp
out
adc
pop
xchg
mov
and
stos
push
adcb
xchg
ret
adc
test
jo
fldl
push
and
call
pop
sbb
inc
jbe
test
cmpsb
pushf
testb
push
or
mov
mov
push
pusha
pop
jl
pop
call
dec
leave
sub
ds
dec
test
inc
pop
test
in
repz
int
mov
adc
arpl
dec
ja
lahf
or
xlat
pop
pop
pop
push
roll
pop
fimuls
adc
pop
cmp
repz
and
fwait
icebp
ljmp
cld
xor
loop
cmp
inc
or
rorb
xchg
cltd
fwait
rcrl
mov
lock
dec
adc
cmp
fisubl
xor
popa
out
sub
or
mov
mov
push
jo
mov
icebp
sysenter
jmp
subb
int
push
movsl
sub
out
enter
dec
lods
and
jge
dec
aas
cmp
xor
inc
testb
or
push
jo
mov
dec
cmp
sbb
adc
push
mull
lcall
arpl
adc
mov
into
mov
xor
subl
pop
lcall
shrl
or
mov
or
inc
pop
testb
and
sub
or
add
sahf
icebp
mov
pusha
lcall
outsb
xor
xchg
dec
cmp
dec
out
in
mov
shl
xchg
mov
cmpsb
loop
or
fucomi
lock
ret
dec
lock
mov
mov
or
repz
or
mov
int3
mov
jl
dec
and
mov
mov
sub
xchg
xor
or
push
sbb
push
cmp
pusha
test
pushf
and
jbe
divl
pop
xchg
cli
aaa
cs
gs
mov
add
ja
loopne
or
fmul
js
push
push
icebp
data16
jnp
adcb
ret
xor
mov
sub
add
mov
aam
add
and
add
out
out
xchg
xchg
add
fcoms
daa
xchg
inc
test
popl
push
ja
int
cli
push
rclb
cmc
sti
call
test
ds
clc
and
xchg
fnstsw
dec
or
popf
loop
add
inc
fsubrs
fwait
sbb
in
call
push
xchg
cmp
cld
dec
fisubrs
sub
movsl
and
lret
pop
mov
loopne
lret
std
mov
movsb
test
xchg
insb
inc
xchg
sar
sbbl
popf
fimull
inc
pop
cmp
cmc
lahf
imul
xor
jns
test
das
mov
clc
mov
roll
aam
jae
in
sbb
outsl
jle
fimuls
fcoml
hlt
adc
leave
jb
cmpsb
xchg
push
and
inc
sti
ret
in
fnstsw
std
pop
push
pop
stc
and
or
mov
outsl
dec
cmpb
fimuls
xchg
cmp
xchg
mov
sub
hlt
inc
clc
lcall
lods
xor
mov
fldt
daa
addr16
lret
sbb
in
adcb
mov
test
fbld
addr16
jecxz
std
cs
into
cs
cmpsb
iret
frstor
ja
pop
xor
or
jp
ja
mov
mov
xorb
xchg
jb
push
call
insl
jecxz
ret
sub
and
xor
int
lcall
sti
stos
mov
roll
push
xor
adc
jo
lock
loop
xlat
adc
push
imul
in
adc
inc
jle
sub
or
in
ficomps
mulb
lret
mov
xor
fnstsw
inc
xchg
inc
es
cs
lods
jge
or
push
fistps
push
mov
into
insl
xchg
scas
mov
xchg
mov
hlt
stc
in
sbb
inc
jp
lods
cmp
std
jecxz
shlb
xor
fmul
lret
cs
xor
dec
std
dec
aad
outsl
cmpsb
sub
lahf
jg
pop
jmp
repnz
cwtl
gs
clc
push
shlb
rcr
xchg
jns,pn
cmp
dec
sarb
mov
mov
leave
jbe
pop
xchg
not
stos
pop
xlat
or
xor
and
sbb
dec
inc
sub
jno
push
jl
loop
dec
test
pshufw
out
mov
xchg
mov
imul
xor
or
pmuludq
jo
mov
hlt
adc
sbb
mov
mov
stc
out
sbb
dec
cmp
sbb
push
jnp
mov
sub
jg,pt
jmp
sub
out
sarb
repz
mov
xchg
cmp
adc
sarb
loope
scas
test
ret
test
test
push
and
mov
fs
rorl
mov
sub
fistps
mov
fdivl
pop
dec
jmp
sbb
fdivrl
or
cs
xchg
outsb
mov
xorb
inc
mov
fiaddl
dec
mov
je
inc
add
loop
mov
add
sbb
leave
xchg
test
mov
or
aam
sbb
imul
jb
sub
adc
and
outsb
jecxz
imul
mov
push
es
loop
cmp
aas
inc
jnp
addr16
mov
cmp
repz
lds
inc
xchg
out
fbld
aam
nop
fucomip
repnz
cmpsl
das
xor
mov
mov
mov
xchg
rolb
stos
pop
push
movsb
pop
enter
nop
mov
popa
jg
fwait
std
scas
mov
popf
lods
cs
mov
movsl
jecxz
repz
mov
cs
movsb
fcompl
xor
pop
push
lret
mov
lret
mov
mov
ret
mov
je
inc
lods
push
test
daa
imul
mov
daa
pop
lea
sub
xchg
stos
fbld
test
sub
lea
repz
mov
icebp
xor
idivl
dec
or
sub
jno
push
push
dec
dec
sbb
sub
aad
insb
stos
lcall
mov
and
pusha
jae
pop
ss
ss
shl
mov
and
xor
insb
nop
imul
jp
fldcw
pop
nop
mov
stc
fwait
dec
mov
mov
repnz
pop
pop
pop
shl
xchg
in
jnp
mov
push
mov
hlt
push
mov
sub
hlt
lcall
imul
fidivrs
inc
outsb
stos
gs
fisttps
push
adc
mov
imull
aaa
adc
cmp
call
push
adc
dec
aad
xlat
sbb
loope
mov
in
in
daa
add
mov
in
pop
pusha
sub
jo
hlt
nop
js
push
into
cmp
inc
mov
cs
jecxz
cmp
adc
mov
pop
mov
das
cmpsb
in
mov
xchg
gs
sub
movl
in
pop
lcall
jnp
push
pop
mov
push
loop
or
xor
insl
jb
lret
idivl
push
mov
cwtl
inc
cs
mov
jmp
dec
pop
scas
dec
mov
shlb
mov
scas
mov
repz
cli
mov
inc
adc
scas
inc
sbb
lcall
lret
aad
push
je
popa
jbe
addr16
shll
jle
es
push
and
push
mov
hlt
inc
push
ret
fsubl
testl
pop
and
push
mov
out
out
notl
shrl
or
jle
bnd
int3
pop
in
mov
inc
mov
aaa
cmp
push
xchg
icebp
fsubs
jne
pop
dec
xchg
filds
dec
push
jecxz
and
lcall
jnp
rcl
mov
lods
add
mov
add
adc
jno
jae
orb
and
clc
repz
xchg
dec
lea
mov
mov
xor
int
pop
cld
shlb
nop
loop
outsl
mov
pop
orl
push
shrb
jno
repz
cld
cmp
repnz
stc
std
les
lar
arpl
mov
add
add
call
sahf
pushf
rclb
inc
inc
lods
mov
js
xor
cmp
cmp
cs
mov
mov
xchg
mov
mov
and
lcall
and
mov
movsb
and
mov
repz
sbb
xor
notb
in
and
cli
mov
pop
rcl
jmp
jl
add
and
mov
out
mov
mov
sub
stos
nop
mov
insb
sbb
xor
cmp
lcall
cmp
pop
xor
test
fisubrs
adc
cmpl
insb
sarb
cmp
add
mov
pop
jo
dec
sub
mov
out
mov
in
fwait
sarl
add
gs
outsb
out
fwait
adc
sbb
lea
pushf
fdivr
dec
sbb
inc
mov
outsb
or
loopne
jae
call
negl
or
cmpsb
int
nop
lods
cmp
jmp
dec
xchg
popf
jo
dec
pop
gs
test
mov
push
jnp
cmp
adc
adc
data16
lcall
aas
and
rcll
andl
and
mov
subl
cmpsb
jp
xchg
push
cmp
jle
xor
loopne
sbb
cmp
notl
into
pop
rcrl
cmpsb
jb
into
jmp
adc
clc
leave
xor
add
lcall
adc
lods
and
or
xchg
out
sub
dec
and
jae
jmp
movsb
mov
es
repnz
lcall
js
push
pop
lods
lret
jbe
push
repnz
mov
inc
out
mov
fmuls
add
xlat
pop
lcall
xor
jo
mov
loope
rolb
gs
adc
add
je
sbb
movsb
lock
bound
into
scas
xor
dec
pushf
sbb
xchg
inc
test
add
inc
orb
ret
dec
cmp
mov
stc
daa
pop
pop
cld
fsubrp
aam
test
push
inc
jmp
push
or
add
imul
call
lods
xchg
fistps
pop
mov
mov
or
das
out
jnp
mov
out
js
jl
jbe
mov
mov
cs
cmp
movsl
sbb
lods
leave
cmpsb
pop
dec
cmpsl
fildl
inc
push
scas
repnz
clc
ja
cmc
xchg
cmc
cmp
repz
mov
and
pop
mov
lahf
fiadds
test
or
lock
shr
cmpsl
mov
sbb
jp
and
loope
push
mov
push
faddl
xchg
cmpsb
pop
sti
dec
loope,pn
out
push
leave
lods
jp
std
cld
push
sbb
fsubl
popa
jl
mov
add
push
jns
jnp
movsl
mov
pop
jp
mov
rcl
cmpb
cmp
xchg
sahf
shrl
push
mov
dec
cmp
push
pop
dec
jg
pop
repz
sti
loopne
inc
mov
cmc
cmp
outsb
pop
xorb
inc
and
push
popa
daa
mov
and
mov
sbb
inc
shlb
add
popa
adc
mov
add
xor
pop
out
aam
andl
jae
sbb
bound
mov
inc
or
ret
sahf
clc
jge
lods
leave
mov
ds
mov
lcall
pop
push
mov
mov
push
push
jo
xor
adc
jp
dec
add
sub
sub
clc
in
sbb
bound
or
sti
sub
aaa
ljmp
pop
dec
jns
rcrl
aad
test
mov
bound
scas
in
imul
iret
subl
add
pusha
jecxz
or
in
pop
push
cmp
adc
aad
push
enter
jbe
pop
out
popf
or
jno
loope
jecxz
das
movl
in
cmp
xor
enter
jno
leave
out
es
lock
sarl
icebp
paddusw
aaa
or
lds
arpl
pop
push
xchg
inc
out
rcr
add
mov
rcr
mov
movsb
rclb
push
adc
fs
or
dec
ljmp
movsl
jnp
pop
adc
lds
xchg
mov
adc
dec
inc
shr
xor
mov
xor
push
cmp
add
add
mov
xchg
cmp
or
es
sub
add
out
mov
ljmp
xchg
data16
mov
sahf
xchg
pushf
xchg
dec
test
fildll
add
filds
imul
repnz
cs
mov
mov
nop
cmc
clc
adc
mov
cli
mov
sbb
or
jb
ret
cltd
jg
mov
shl
xchg
popf
into
fsubs
jns
aaa
aam
fwait
and
push
loopne
lods
cmp
dec
lret
adc
jns
jmp
outsb
daa
pop
in
mov
mov
icebp
mov
xchg
push
loopne
repnz
push
push
xor
shl
scas
push
or
leave
inc
push
pop
lcall
daa
lret
xor
and
enter
inc
bound
scas
lods
add
lret
cmpb
pop
outsl
mov
or
push
ds
pop
add
and
insb
push
popf
fwait
loopne
sub
lods
pop
movsl
cld
sbb
mul
call
call
outsl
push
xchg
adc
subb
jnp
sti
scas
jnp
notl
loopne
mov
and
xor
mov
cmp
push
jb
add
and
lahf
jp
imul
inc
shl
fstpt
sti
hlt
pop
push
xor
pop
push
push
cmp
mov
hlt
mov
aas
les
sbb
js
mov
ror
cwtl
test
pop
sbb
jg
sub
jbe
shlb
mov
mov
in
mov
dec
jp
inc
or
loope
or
mov
ds
jnp
rolb
ljmp
arpl
jb
pop
dec
adc
std
lds
add
cmpsb
fiaddl
adc
jb
inc
cld
jg
pop
xchg
pop
mov
cmp
lea
movsl
movsl
mov
sub
mov
fsubs
lahf
jl
adc
pop
lahf
sub
sub
jle
gs
clc
mov
js
test
push
dec
mov
enter
inc
adc
out
sbb
xor
bt
adc
dec
dec
fisttpl
imul
fisubs
xchg
mov
or
mov
cmc
pop
jb
hlt
cmp
cli
pop
add
sub
jp
inc
popa
mov
adc
aas
iret
jmp
adc
testb
lret
das
push
stos
sbb
mov
insl
pushf
or
push
mov
jp
jae
push
ret
mov
into
jo
popa
popf
sub
or
fxch
pop
and
lock
mov
icebp
fnstcw
js
jne
pop
xchg
jecxz
mov
rcl
mov
push
jg
sub
aas
adc
popf
xor
mov
sti
sub
mov
cmp
push
mov
leave
jns
mov
push
cmpl
sub
jo
scas
adc
cmc
stos
push
xchg
pop
aas
pusha
cmp
jge
dec
and
sti
jl
test
int3
push
andl
fildl
cmpsl
test
push
test
or
pop
inc
inc
sub
sbb
add
fsubr
lcall
inc
fcomip
scas
scas
pusha
sbb
fstl
inc
filds
cmp
push
mov
push
scas
xor
stos
pop
jle
sub
cmp
sub
push
and
lret
xchg
mov
imul
out
ljmp
aad
aad
push
add
mov
lock
and
and
hlt
je
daa
rorb
push
mov
ret
iret
cmp
mov
jmp
jle
xchg
cmp
jo
push
pop
adc
hlt
push
mov
pop
gs
fisubrl
dec
out
inc
mov
xor
in
imul
out
hlt
loopne
mov
out
sub
lret
or
mov
gs
xor
push
fsubp
sbb
adc
dec
sbb
loope
xchg
jno
lods
sbb
mov
test
jl
out
test
loope
gs
sarb
jp
dec
jne
xchg
shlb
jl
rcrl
test
bound
xchg
mov
repnz
sbb
jns
xor
mov
cmpsb
fists
add
xor
jbe
add
and
jmp
out
pusha
push
xchg
mov
insb
push
lret
mov
dec
jbe
fsubrp
add
sub
sahf
movl
push
leave
cld
imul
in
jae
repnz
loope
lock
inc
into
sub
push
out
inc
sahf
stos
fisttpll
mov
mov
fchs
xor
js
emms
push
jmp
inc
fs
scas
jg
movl
mov
adc
mov
movsl
shlb
js
xlat
jo
mov
int
pop
push
cmp
sub
in
mov
jp
sti
sbb
mov
and
sti
insl
cmp
pop
addr16
loopne
jo
test
cmp
sub
inc
push
mov
mov
in
data16
repnz
add
mov
or
adc
jnp
stc
bound
arpl
sbb
lods
adcl
xor
mov
nop
lahf
lock
je
or
dec
xchg
jl
sub
pop
fldenv
sbbl
stos
cld
lret
and
inc
push
sbb
mov
imul
push
stos
mov
rolb
int
inc
ljmp
xorb
incb
sahf
repnz
inc
in
push
pop
mov
hlt
into
push
mov
mov
stos
sub
cmp
mov
stos
cmp
rorb
ret
xchg
aas
aas
aas
jle
int3
jbe
pop
movsl
add
inc
pop
jnp
adc
or
fdivr
jp
pop
mov
loopne
movsl
cli
lock
cmpb
test
ret
jne
jg
lcall
fsubl
sbb
or
cmp
cwtl
icebp
sbb
or
dec
and
push
ret
mov
call
hlt
rcr
dec
push
sbb
sub
mov
dec
int3
in
fwait
stos
add
xchg
pop
aaa
xchg
sbb
xchg
call
into
or
cmp
jmp
test
jns
inc
out
push
scas
subl
sbb
sub
xor
outsb
popf
mov
cmp
dec
pop
mov
add
scas
cmc
lds
test
out
lods
mov
jmp
lods
sub
and
adc
xchg
mov
in
jl
lahf
add
adc
subl
dec
pushaw
clc
adc
imul
pop
je
out
fnstsw
testb
xchg
cli
jb
xor
lock
add
test
movsl
xor
in
inc
xor
and
sub
jb
aad
dec
repz
mov
xlat
scas
adc
aad
ds
int3
adc
movsb
in
mov
xchg
mov
scas
push
xor
mov
in
aaa
push
push
popf
rcl
jbe
xchg
sahf
add
hlt
insl
xchg
adc
lods
sarb
mov
shrb
popf
jae
jmp
stc
iret
movsl
stos
rcll
pop
aaa
sub
sub
push
leave
scas
adc
xor
fstps
int
rcrl
adcb
scas
push
dec
in
adc
repz
and
push
aas
loopne
adc
lock
notb
pop
pop
sbb
cmp
xchg
mov
test
inc
xorl
clc
test
gs
int3
sub
popa
jbe
pop
add
mov
adc
mov
sbb
movsl
inc
ss
dec
popf
popf
ljmp
sbb
sub
jo
xor
sub
jmp
dec
movsb
scas
int3
adc
xchg
xor
iret
outsb
sar
out
fs
out
das
pop
pop
mov
je
stos
xchg
in
pop
sbbb
mov
push
push
cmp
aam
int3
fistl
push
mov
into
jno
ret
mov
jno
js
jecxz
inc
fdivrl
or
adc
pop
stc
call
leave
imul
push
mov
jecxz
outsl
test
push
insb
ret
dec
add
pop
in
cmp
loop
cmp
and
out
add
insb
cwtl
aad
or
popa
clc
rcrl
repz
mov
xor
adc
out
enter
mov
pop
lret
mov
add
mov
mov
repnz
lcall
pop
jl
xchg
sbb
out
sbb
aas
inc
not
or
popf
data16
in
aas
mov
push
push
repnz
pop
xchg
and
inc
inc
pop
incl
test
pop
lea
cmpsl
in
aam
pushf
call
xor
pop
jb
sahf
adc
in
mov
enter
or
xchg
or
or
ficoms
mov
xlat
out
out
out
pusha
rolb
out
add
sbb
out
negl
and
pusha
ret
xor
mov
jg
fldcw
int3
add
rorb
stos
call
arpl
xchg
push
lods
addr16
jl
stc
test
and
jo
idivb
enter
xchg
movsl
push
test
les
jp
add
icebp
xchg
mov
add
xor
xor
dec
mov
pop
jl
inc
mov
movsl
xchg
push
flds
std
loop
fnstsw
sbb
fdivrs
iret
bound
jl
or
mov
and
imul
xor
fcom
inc
xchg
push
jbe
sti
sub
cmpb
movsb
inc
mov
push
je
inc
out
test
js
mov
xlat
clc
loop
fistpll
dec
popf
jae
add
sub
jl
sub
jmp
loope
fiaddl
scas
pop
dec
sub
cmpsl
mov
jno
dec
mov
addr16
pop
out
je
js
arpl
xchg
stos
nop
pop
pop
push
and
rorb
jae
jns
in
popf
popa
push
inc
pop
fcoml
rcrb
inc
sahf
xchg
add
pop
ficompl
idiv
inc
or
adc
mulb
pop
test
inc
and
rorb
lock
cmpsl
mov
pop
jge
imul
mov
add
or
sub
cs
popa
xor
insl
xchg
mov
xchg
jmp
or
lret
dec
sarl
inc
cwtl
sbb
dec
jp
cld
mov
add
inc
sti
imul
xchg
in
xor
lcall
cwtl
and
out
pop
mov
scas
shr
pushf
rolb
xor
imul
jmp
lahf
cs
es
adc
xor
mov
fistpl
push
mov
xchg
movsb
push
cmp
sub
out
cmp
xchg
aad
mov
popf
or
movsb
out
mov
mov
or
sub
movsb
cmpsb
ss
cltd
push
pop
inc
xchg
addr16
inc
pushf
adc
sub
cmpsb
stc
in
aam
jmp
out
aaa
push
es
insb
mov
pop
daa
into
fwait
inc
mov
ret
add
ss
imul
fwait
insb
dec
out
outsb
jb
je
pop
mov
test
jo
jne
imul
jns
cmpsb
mov
push
sbb
adc
outsl
inc
andl
mov
xor
pop
mov
aas
shlb
push
lock
add
pop
mov
jmp
mov
rcr
xchg
xchg
or
or
mov
dec
inc
push
rol
stos
push
sti
cmpsb
xchg
jmp
cwtl
ret
add
out
mov
inc
dec
mov
iret
and
shrb
lock
adc
sahf
cmp
xor
pop
loop
sti
popa
mov
out
stos
psubusb
enter
dec
aaa
dec
test
or
fiaddl
pop
mov
push
jle
push
push
sub
jle
pop
aad
push
ret
xchg
inc
xchg
pop
sbb
add
sahf
notl
cmp
mov
inc
dec
outsl
add
sub
test
bound
js
pop
push
enter
mov
movsb
mov
lods
cmovle
cmp
pop
daa
sbb
dec
xchg
jg
stos
fmull
out
out
pop
adc
xchg
xchg
push
pusha
xchg
push
aad
lcall
xor
mov
lea
and
push
cwtl
imul
push
test
cmp
iret
inc
jmp
mov
outsb
push
mov
lcall
lahf
into
insb
inc
pmulhuw
aam
jle
xor
cwtl
cwtl
idiv
mov
push
cmp
lea
lods
sbb
cmp
insl
xor
cld
or
aas
test
add
adc
fwait
adc
mov
std
mov
loope
lret
mov
jns
xor
add
ds
out
sbb
sbb
push
xchg
sahf
xchg
arpl
xchg
aaa
sbb
sbb
ja
js
sub
xchg
lock
rolb
rclb
imul
jne
add
pop
es
dec
ja
dec
sbb
outsl
lds
loope
jno
or
pop
dec
mov
xchg
dec
int
or
mov
or
adc
mov
jns
add
push
out
out
pushf
stos
icebp
test
addr16
or
aas
sbb
pop
jl
adc
add
xor
lds
mov
xor
std
jmp
pop
aam
ja
out
icebp
add
cmp
xchg
outsb
sbb
pop
mov
in
ljmp
mov
or
in
cwtl
mov
cli
add
sbb
dec
sbb
adc
stos
mov
mov
or
add
sti
xor
jecxz
jge
loop
imul
fs
sub
shl
push
enter
push
out
mov
and
push
pop
inc
inc
outsb
push
loopne
pop
adc
cmp
js
add
lahf
js
xor
or
jb
ret
xchg
jle
ret
sub
testl
mov
jb
jno
leave
cltd
sbb
sarb
cmp
es
dec
or
jge
sub
outsl
mov
pop
pushf
or
mov
or
cmp
pop
orb
inc
pop
scas
movsb
jne
fstpt
into
repnz
xchg
pop
cmp
loope
movb
inc
jle
cbtw
stc
jecxz
mov
rcrb
pop
ljmp
and
jecxz
cmp
cltd
gs
aas
or
mov
dec
inc
lock
pop
push
fadds
fnsave
push
je
loop
mov
jmp
andps
mov
push
cmp
inc
mov
mov
add
add
sti
sub
mov
fdivl
cltd
cld
test
push
inc
mov
ror
push
jo
and
push
cmp
enter
scas
fnsave
test
mov
pop
bound
outsl
sub
cmp
cmp
das
cmp
aad
mov
test
mov
fbstp
and
cltd
iret
imul
dec
je
dec
out
fistpl
loopne
pop
dec
inc
mov
sbb
test
sbb
mov
adc
repnz
mov
sbb
movsl
push
icebp
test
fisttps
and
cmpsb
sub
lret
mov
mov
nop
pop
cmp
scas
xchg
push
xor
int3
or
fwait
outsb
int3
jae
push
lea
xchg
sub
mov
iret
lret
mov
push
sub
xchg
in
hlt
out
and
clc
and
scas
mov
xrelease
lock
xchg
pop
xlat
jp
inc
xor
leave
xchg
pop
or
dec
scas
ror
rcrb
mov
sub
mov
inc
loop
push
mov
fiaddl
xchg
shlb
cmp
jb
test
and
rclb
pop
int3
or
lds
mov
sbb
jb
insl
imul
adc
inc
lods
aaa
or
nop
sarb
clc
dec
ret
cli
cmp
inc
mov
or
test
push
lods
mov
xlat
mov
pop
sbb
mov
add
in
gs
fucomip
test
mov
fisubl
andl
cmp
repnz
cli
dec
pusha
or
inc
cltd
outsl
stc
sub
mov
xor
movsl
jbe
pop
sub
jo
xor
repnz
addb
movsl
andb
add
xorb
add
add
xor
lds
idivl
mov
jnp
push
les
dec
mov
cmpsl
movsb
popa
push
adc
sti
addb
movsl
push
adc
mov
insl
jmp
sbb
jns
mov
lods
pop
jge
pop
in
rcrb
mov
stc
add
fiaddl
mov
xor
or
and
mov
xor
sbb
mov
cli
mov
push
mov
aaa
hlt
sub
and
or
aaa
mov
hlt
xchg
sub
inc
pop
rclb
insb
sarb
push
sbb
push
and
pop
cwtl
mov
ja
scas
cmp
cmp
test
filds
add
cmp
mov
ss
lock
frstor
fiadds
jge
mov
push
movsl
in
push
dec
adc
fstl
out
inc
popa
mov
mov
mov
xchg
add
or
xchg
or
pop
jmp
lahf
mov
sarl
jbe
push
rcrl
mov
mov
sti
mov
out
adc
fisubrs
lods
into
or
mov
sbbb
inc
hlt
stos
in
ret
and
cmp
mov
mov
aaa
out
iret
and
sbb
ret
add
les
xor
call
inc
adc
xchg
ja
in
outsl
adc
mov
roll
pop
or
mov
cmp
out
sub
in
stos
lcall
bound
sbb
xor
sub
js
xchg
fs
pop
mov
adc
push
xchg
cmp
cli
jmp
mov
sahf
xchg
filds
sbb
jnp
push
aas
ds
adc
mov
lods
in
movsb
pop
mov
or
mov
scas
cmc
stos
flds
push
or
jp
call
mov
subb
sbb
shlb
nop
hlt
jmp
jle
in
cs
cmp
clc
add
cwtl
lea
or
xchg
clc
sub
mov
mov
scas
xchg
test
jle
mov
or
sbb
out
xchg
popf
fsubrl
and
inc
sbb
dec
mov
shlb
mov
add
jnp
fildll
xor
test
xchg
xchg
push
push
sahf
sahf
mov
mov
cmp
aaa
dec
dec
mov
inc
out
or
shlb
jae
leave
and
xchg
push
ljmp
test
lds
lea
xchg
jecxz
push
xor
out
xchg
lock
sub
in
jbe
dec
or
jo
sub
imul
xor
and
inc
fucomip
mov
fldcw
push
mov
mov
out
fsubr
aam
xor
dec
ss
sbb
stos
mov
jle
jnp
sub
mov
popl
adc
push
cmp
jg
mov
xorb
mov
test
jle
cld
jns
cmp
addr16
js
xor
aas
cwtl
sbb
adc
sub
jl
test
aam
inc
inc
jno
test
sub
subb
lods
push
addr16
dec
stos
lret
or
arpl
adc
aas
lret
fisttps
mov
cld
jns
fnstsw
scas
mov
test
sbb
je
pop
sbb
cmpsb
and
and
push
sub
sub
xchg
in
aas
jmp
pusha
push
out
xchg
jae
jo
xchg
stos
lods
xor
cld
in
and
adc
roll
cmpsb
cmp
mov
sbb
jg
pop
pop
sub
in
out
add
pop
loop
test
into
out
sub
out
dec
push
cmp
sti
xor
jnp
mov
enter
notl
mov
mov
and
xchg
inc
mov
out
loop
sbb
mov
sub
cmp
sbb
push
ds
pop
inc
adc
jmp
fadds
mov
push
es
jl
shrl
and
mov
icebp
xchg
sub
add
or
cs
pop
mov
iret
pop
fld
adc
xchg
std
je
push
sarb
push
pop
rclb
xor
adc
mov
pop
add
pushf
jl
jge
int3
dec
pushf
cs
stos
outsb
pop
mov
jbe
dec
loopne
out
cmpsb
in
fsubrp
rcrb
mov
pop
mov
pop
out
shll
lods
enter
loopne
enter
shlw
fdivs
ljmp
sti
cmpsb
lcall
aam
test
out
xor
pop
pop
dec
or
or
lahf
pushf
in
loopne
jge
mov
or
mov
pop
das
repz
mov
inc
loope
test
cmp
mov
mov
mov
or
imul
sti
inc
pop
addr16
dec
dec
icebp
push
xchg
lods
push
nop
push
sahf
xor
pop
mov
bound
stos
wrmsr
les
fcmovbe
fcoml
notl
das
cmp
dec
mov
jmp
add
aam
nop
outsb
mov
scas
push
and
xor
pop
or
mov
mov
add
dec
push
in
add
sub
cli
aas
mov
jmp
cmpsb
insb
lea
in
jo
sub
lea
cmp
or
ret
jecxz
andl
push
pop
outsb
adc
sahf
add
lods
clc
xchg
fcmovu
push
sbb
cltd
jnp
xor
add
xlat
in
mov
mov
mov
jno
mov
mov
jae
or
and
test
push
xchg
dec
adc
inc
stc
mov
xor
sub
push
sbb
push
arpl
jbe
fs
in
add
cmp
test
dec
or
adc
cmp
lret
push
pop
xor
sub
out
push
push
dec
mov
adc
pop
enter
aad
fsub
and
test
test
scas
push
sub
and
inc
pop
popf
sub
inc
aam
pop
cli
jno
push
leave
aad
pop
pop
cs
decb
and
xchg
inc
cmpsl
jg
nop
into
mov
repnz
sbb
lods
ja
mov
pop
sahf
adc
xchg
cmp
add
cmp
test
jmp
or
xchg
jge
repz
bound
fistpll
mov
sbb
pop
std
inc
adc
xlat
int3
scas
fadds
adc
cmp
outsl
push
jb
test
dec
stc
addr16
pop
scas
ret
loopne
inc
aas
out
fs
sub
mov
dec
js
lock
icebp
or
or
or
dec
dec
pop
jo
sub
inc
push
jle
or
sub
stos
pop
jg
jb
arpl
jo
sti
cmp
push
xchg
ret
ljmp
xor
stos
add
adc
mov
mulb
out
addr16
mov
sbb
loop
adc
xchg
xchg
sub
inc
xor
inc
cmpsl
nop
cmp
inc
and
mov
fwait
dec
fcomi
jmp
das
fdivs
adc
data16
test
insl
sbb
push
repz
add
push
cmp
in
mov
pop
pop
pushf
adc
outsl
or
ja
xor
fcompl
jge
inc
cmp
imul
ret
sbb
jne
adc
rcrl
inc
cmp
mov
sbb
cmp
ret
push
or
loopne
xchg
scas
mov
jo
inc
in
pusha
inc
es
fisubrs
add
adc
mov
pop
sar
dec
shlb
cmp
xor
dec
shlb
int3
int3
sub
mov
scas
xor
shll
inc
and
dec
and
or
push
stos
mov
pop
push
add
outsb
aam
fisubrs
and
push
ss
clc
or
dec
push
mov
rorl
inc
dec
les
enter
hlt
sar
cmpsb
dec
cmp
mov
push
jg
cmpsb
sub
and
out
jmp
insb
ror
outsl
call
pop
rclb
lock
xor
push
or
mov
ficoml
loope
dec
cmpsl
enter
jb
jnp
cli
sbb
aad
mov
mov
mov
sbb
fidivl
in
jge
out
cmp
fnstsw
jp
loop
push
in
adc
jmp
movsl
push
iret
mov
inc
jmp
enter
sub
out
in
fs
stc
cmc
push
cmpsl
xlat
mov
or
in
add
stc
loopne
cmpl
and
fsubrl
gs
sti
adc
jg
mov
popa
push
adc
sbb
xor
leave
sbb
mov
fsubs
repnz
and
cmpsb
mov
pop
add
ja
aas
or
push
ja
in
jmp
stos
xchg
mov
jo
cltd
jns
mov
and
inc
jp
js
fs
fbld
xor
mov
test
dec
mov
mov
cmc
xor
sub
shlb
insb
mov
adc
jl
aas
out
rclb
addr16
xchg
flds
cmc
mov
cs
jo
mov
scas
test
dec
out
pop
addb
xchg
push
inc
xchg
loop
pop
int
jg
ffree
dec
xor
aas
and
push
out
xor
and
lea
and
sub
mov
push
fwait
push
ss
cmp
cmp
push
mov
arpl
jbe
in
out
ljmp
bound
in
mov
test
adc
shll
int3
mov
or
push
call
inc
ret
pop
push
popf
dec
dec
loope
sahf
rcll
aas
cmp
pop
sub
aas
dec
popa
and
loope
pop
pop
push
or
js
ss
add
sub
cltd
dec
mov
lret
mov
mov
pop
int
std
and
push
cmp
jnp
xor
daa
subl
aam
rcrb
pop
icebp
mov
fcom
fisubrs
addr16
xchg
add
sbb
push
aam
fildll
lods
jge
xor
lods
inc
ret
sub
popa
add
add
pop
loop
ret
sbb
lcall
into
outsl
mov
enter
dec
add
mov
call
adcl
dec
insl
xorb
cmp
cmp
ret
ret
mov
sbb
shll
outsl
popa
or
fldl
les
adc
xor
sbb
stos
dec
sbb
jmp
inc
stos
mov
test
xchg
ss
jge
mov
in
rolb
cmp
push
sti
test
xchg
dec
cmp
loopne
xchg
lods
iretw
pusha
roll
aaa
jmp
clc
lock
addl
mov
mov
fisttpl
xchg
pop
jg
mov
lock
ds
das
mov
pop
mov
push
jbe
mov
out
in
test
or
xchg
mov
fists
ret
inc
pop
dec
lock
cmp
xor
push
jb
sub
inc
mov
je
ljmp
xor
imul
mov
mov
outsb
hlt
jo
mov
imul
dec
iret
xor
int3
shrl
sbb
fwait
sub
push
cvtdq2ps
fiaddl
out
ljmp
cmpsb
out
imul
idivl
jmp
mov
jp
cmpsb
jmp
hlt
jmp
push
scas
fldl2e
in
les
lods
lcall
sbb
jmp
fnsave
jp
outsl
mov
inc
mov
push
push
add
fdivp
adc
inc
in
jl
das
mov
push
sahf
hlt
add
and
ret
inc
faddp
and
test
ret
sbb
aaa
lcall
xor
mov
loopne
lods
js
push
scas
lret
adc
lods
mov
cmp
flds
bound
pop
dec
out
iret
xchg
adcb
cwtl
test
push
lahf
or
xchg
decl
ja
mov
cmpsb
inc
push
mov
sbb
xor
lret
dec
inc
fcomp
repnz
ljmp
sbb
repz
dec
std
sub
test
dec
scas
arpl
mov
pop
fbstp
xchg
cmpsb
pushf
mov
cmpsl
fwait
sbb
cmpsb
ds
inc
add
out
push
or
xor
pop
ss
shrb
mov
lea
mov
mov
ficoms
out
mov
push
and
xor
into
jo
cs
fwait
pop
mov
into
outsb
pop
cmp
inc
or
clc
xor
pop
lods
aam
outsl
repnz
mov
jo
and
sub
movsl
scas
cltd
and
add
and
sti
pop
adc
int
scas
loope
and
js
lock
dec
adc
rclb
fdiv
cmp
aaa
sub
decl
cmp
xchg
mov
jno
ret
into
add
lock
inc
xor
jmp
xchg
jge
jl
daa
fwait
pop
jbe
in
jl
imul
les
adc
sub
lea
loop
xor
mov
dec
nop
mov
les
ljmp
add
dec
add
jns
mov
sbbb
mov
imul
ljmp
ret
enter
push
mov
dec
or
fnstcw
mov
or
enter
sub
mov
outsb
lret
fdivs
push
pop
cltd
push
outsb
pop
sub
mov
dec
xor
call
ja
fidivl
stc
das
sti
mov
aam
icebp
mov
daa
dec
shl
lcall
add
in
mov
std
movsl
sub
pop
fsubrs
mov
arpl
outsl
mov
cmpsb
scas
mov
adc
mov
icebp
and
xchg
mov
call
in
in
mov
xlat
stos
adc
inc
sub
sub
and
push
fs
mov
jnp
dec
scas
dec
mov
pop
es
gs
xorb
inc
cmc
mov
push
inc
mov
mov
or
mov
scas
xor
gs
fisubs
sbb
and
lret
ds
insl
push
dec
mov
and
adc
pop
clc
lock
pop
or
xchg
jge
mov
ss
sbb
mov
mov
mov
out
ret
ret
sub
outsl
cmovle
leave
lds
data16
popf
fisttpl
mov
mov
sti
mov
cmp
fsubrl
cmp
dec
repz
mov
push
add
sarb
ficompl
cmpl
push
out
lds
in
adc
inc
adc
sub
scas
lods
clc
mov
shrl
cmp
mov
dec
movb
fdivs
inc
aad
jbe
lea
lcall
loopne
shll
pop
fcoml
sub
or
shlb
stos
inc
xor
adc
jp
cs
push
push
popa
stos
jge
add
ret
aam
shl
aad
ret
leave
jle
popf
inc
inc
int3
or
push
sub
cmpsl
xorb
stos
insl
inc
sbb
sahf
lock
adc
mov
add
adc
imul
in
shll
es
ljmp
pop
cmp
roll
pop
rcrb
loope
fistl
or
or
pop
add
pop
rcll
push
jecxz
ljmp
lret
push
inc
add
movsb
ds
push
ja
addr16
inc
or
adc
lods
repz
sub
push
popa
in
mov
jae
lds
adc
aas
jne
fcomp
movsl
lock
sub
fsubrs
mov
sbbl
fidivl
js
sub
mov
sbb
jns
sub
mov
imul
cmpsb
pop
outsb
dec
popf
lcall
mov
jl
xchg
mov
movsl
in
pusha
jne
addr16
jge
test
pusha
cltd
pop
nop
insb
add
and
adc
pushf
mov
pop
push
cwtl
xor
lret
rcrl
mov
dec
push
and
insl
sub
sub
mov
sub
pop
xchg
rolb
adc
and
std
adc
aad
pop
dec
pop
iret
cmp
or
.byte
sbb
inc
inc
xchg
adc
add
ja
xor
fisubrl
je
das
push
jmp
outsl
pop
mov
push
cmp
mov
mov
cmp
push
cwtl
addr16
mov
cmpsl
pop
repnz
js
sbb
sarl
push
shl
mov
push
pop
inc
sbb
loopne
adc
dec
shlb
mov
push
sbb
insl
mov
xchg
cmp
lods
mov
dec
sub
push
xor
mov
addr16
and
mov
adc
jecxz
cwtl
jl
rcll
subl
xor
inc
fwait
loopne
cmp
push
mov
in
adc
stc
cwtl
add
int3
and
cwtl
sub
or
aad
inc
rclb
cmpsb
sub
pop
jle
push
or
js
sti
adc
push
mov
lahf
xchg
loope
adc
push
jbe
sbb
mov
movsl
jae
lea
imul
pop
mov
push
adc
sbb
div
loope
mov
pop
sub
lds
push
and
or
xor
mov
in
or
cltd
pop
jo
jl
jb
punpckldq
jmp
or
sahf
pop
rcll
insb
jle
popf
rcrl
repz
stos
add
add
jb
lret
sarb
push
int3
dec
test
mov
test
rolw
idivl
out
xchg
icebp
sbb
jmp
fadds
or
push
lcall
cmp
push
jb
sti
xor
cmp
das
movsl
fs
jo
lock
xorl
push
out
xchg
sub
xlat
add
in
lret
sbbb
xchg
xor
ss
cmp
popa
mov
dec
sbb
stos
sub
shrb
sub
inc
xlat
adc
in
cmp
mov
or
adc
dec
test
ljmp
dec
xchg
ja
fnsave
xchg
sbb
test
aam
sbb
xor
mov
mov
cmp
cwtl
stos
scas
mov
iret
jnp
ss
fs
js
inc
push
in
lret
adc
movl
adc
fcoms
add
lcall
fistpl
sbb
lret
xchg
xorl
push
adc
cmp
movsl
mov
xor
inc
and
dec
dec
or
mov
insb
sarl
cli
stc
or
sub
and
mov
mov
pushf
sbb
arpl
push
data16
loopne
dec
xor
pop
mov
jmp
outsl
xchg
add
and
out
adc
cmp
jg
out
push
rorb
dec
lret
ret
lods
insl
mov
add
test
clc
jmp
xchg
pop
cmp
fxch
jb
mov
jmp
jb
cmp
pushf
xchg
pop
mov
scas
pop
clc
ljmp
dec
stc
jp
add
cmp
sub
testb
adc
add
xlat
repnz
adc
sbb
pop
out
out
jge
and
push
xchg
shrb
xlat
sub
mov
add
sti
mov
adc
add
cltd
mov
xor
in
in
test
mov
xchg
mov
sbb
and
push
into
aam
test
xchg
xchg
jno
jo
ret
dec
push
xchg
andl
gs
jbe
movb
sbb
outsl
cs
in
lret
out
cld
cmp
xorb
mov
cmc
out
dec
sub
or
lods
aad
adc
in
jg
cmp
ss
ja
push
xor
fnsave
or
pop
xchg
call
dec
sbb
jo
push
xor
out
xor
leave
mov
dec
dec
shrl
inc
jl
inc
push
cli
pop
pop
shl
movl
dec
into
mov
mov
adc
cmp
mov
xchg
sub
jmp
inc
adc
and
bound
out
xchg
aam
ret
sarl
fldt
fimull
aas
inc
xlat
cmc
adc
cmp
jne
jp
and
ds
mov
nop
mov
cmp
adc
lret
pushw
in
lods
dec
add
dec
pop
xor
jmp
jne
and
push
fs
dec
and
mov
xchg
daa
and
pop
mov
pop
int
ret
dec
add
test
cld
out
xchg
push
dec
jecxz
pushf
cwtl
sub
and
lcall
xor
out
ret
pop
mov
into
imul
cmp
ror
pop
inc
push
mov
movsl
jno
mov
outsl
aad
xchg
push
in
push
inc
loope
push
mov
cmp
stos
jecxz
rcrl
xlat
mov
jp
out
scas
test
or
in
dec
lods
xor
push
dec
adc
aam
out
mov
cmp
xor
fwait
mov
loop
ret
adc
hlt
mov
rcrb
mov
inc
xor
dec
inc
addr16
imul
in
mov
inc
pusha
push
mov
xchg
pop
out
xchg
into
orb
xor
cmpsl
in
repnz
jno
mov
es
sar
mov
add
lds
sub
sbb
mov
jo
xor
xor
.byte
fxch
.byte
add
dec
add
add
adc
dec
add
add
add
pop
aaa
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
sub
add
jo
add
add
pop
aaa
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
add
pop
aaa
add
add
or
add
and
add
xor
add
cmp
add
dec
or
cmpb
sbbb
adcb
add
jle
add
mov
add
xchg
or
xor
add
or
subb
add
add
pop
aaa
add
add
add
add
add
add
cmp
addb
add
add
pop
aaa
add
add
add
add
enter
push
add
addb
add
add
pop
aaa
add
add
add
sbb
jmp
add
sub
add
addb
jmp
add
cwtl
add
sub
add
mov
add
enter
out
sldt
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
add
pop
aaa
add
add
add
add
loopne
add
out
or
add
add
fadds
add
add
pop
aaa
add
add
add
pop
add
jg
add
push
add
or
add
and
add
cmp
add
push
pop
add
push
jg
add
add
add
adc
add
add
add
add
and
sbbb
add
add
pop
aaa
add
add
add
add
add
add
mov
add
add
add
add
pop
aaa
add
add
add
add
add
add
rolb
add
add
add
adc
add
add
add
add
add
add
rolb
add
add
add
add
pop
aaa
add
add
add
add
add
add
loopne
add
add
add
add
pop
aaa
add
add
add
add
add
add
lock
add
add
add
add
pop
aaa
add
add
add
add
add
add
add
add
add
add
add
pop
aaa
add
add
add
add
add
add
adc
add
add
add
add
pop
aaa
add
add
add
add
add
add
and
add
add
add
add
pop
aaa
add
add
add
add
add
add
xor
add
add
add
add
pop
aaa
add
add
add
add
add
add
inc
or
add
add
add
adc
add
add
add
add
add
add
push
or
add
add
add
adc
add
add
add
add
add
add
pusha
or
add
add
add
adc
add
add
add
add
add
add
jo
add
add
add
add
pop
aaa
add
add
add
add
add
add
orb
add
add
add
adc
add
add
add
add
add
add
nop
or
add
add
add
adc
add
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
mov
add
add
add
add
pop
aaa
add
add
add
add
add
add
rorb
add
add
add
adc
add
add
add
add
add
add
rorb
add
add
add
add
pop
aaa
add
add
add
add
add
add
loopne
add
add
add
add
pop
aaa
add
add
add
add
add
add
lock
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
pop
aaa
add
add
add
add
add
add
adc
add
add
add
add
pop
aaa
add
add
add
add
add
add
and
add
add
add
add
pop
aaa
add
add
add
add
add
add
xor
add
add
add
add
pop
aaa
add
add
add
add
add
add
inc
or
add
add
add
adc
add
add
add
add
add
add
push
or
add
add
add
adc
add
add
add
add
add
add
pusha
or
add
add
add
adc
add
add
add
add
add
add
jo
add
add
add
add
pop
aaa
add
add
add
add
add
add
orb
add
add
add
adc
add
add
add
add
add
add
nop
or
add
add
add
adc
add
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
mov
add
add
add
add
pop
aaa
add
add
add
add
add
add
rorb
add
add
add
adc
add
add
add
add
add
add
rorb
add
add
add
add
pop
aaa
add
add
add
add
add
add
loopne
add
add
add
add
pop
aaa
add
add
add
add
add
add
lock
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
pop
aaa
add
add
add
add
add
add
adc
add
add
add
add
pop
aaa
add
add
add
add
add
add
and
add
add
add
add
pop
aaa
add
add
add
add
add
add
xor
add
add
add
add
pop
aaa
add
add
add
add
add
add
inc
or
add
add
add
adc
add
add
add
add
add
add
push
or
add
add
add
adc
add
add
add
add
add
add
pusha
or
add
add
add
adc
add
add
add
add
add
add
jo
add
add
add
add
pop
aaa
add
add
add
add
add
add
orb
add
add
add
adc
add
add
add
add
add
add
nop
or
add
add
add
adc
add
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
mov
add
add
add
add
pop
aaa
add
add
add
add
add
add
rorb
add
add
add
adc
add
add
add
add
add
add
rorb
add
add
add
add
pop
aaa
add
add
add
add
add
add
loopne
add
add
add
add
pop
aaa
add
add
add
add
add
add
lock
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
pop
aaa
add
add
add
add
add
add
adc
add
xor
or
xor
add
push
add
add
add
rorb
add
add
or
xor
add
cmp
add
insb
xchg
or
xor
add
mov
add
add
or
in
add
push
cwtl
or
rolb
add
and
or
rolb
add
hlt
fwait
or
rolb
add
les
add
xchg
lahf
or
rolb
add
mov
add
xor
or
rolb
add
add
or
rolb
add
aam
or
call
add
add
add
add
add
fs
add
add
mov
add
add
add
add
add
or
jl
add
fdivrl
add
mov
add
mov
add
rol
or
clc
add
add
les
add
add
add
add
add
or
loopne
add
pop
lret
or
mov
add
or
or
loopne
add
call
add
add
or
nop
add
add
add
aad
add
add
add
add
add
add
add
fmull
add
add
add
or
adc
add
sbb
or
in
add
cld
loop
add
add
or
aam
add
sbb
or
mov
add
movsb
in
or
les
add
push
add
add
or
mov
add
add
add
add
cmc
or
out
add
add
cli
or
adc
add
sbb
or
adc
add
xor
or
adc
add
inc
cli
or
adc
add
pop
cli
or
adc
add
insb
cli
or
adc
add
cmp
add
add
xchg
cli
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
add
push
add
push
add
inc
add
xor
cmp
xor
cmp
or
dec
add
dec
add
dec
add
dec
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
or
add
add
addb
add
add
add
add
add
add
incl
test
mov
add
add
add
dec
add
in
repz
dec
push
add
cwtl
test
add
cmpsl
cmpsl
add
mov
add
incb
gs
add
stc
mov
mov
ret
add
xchg
mov
popl
add
xchg
mov
ret
add
mov
add
rolb
jno
add
in
jge
xlat
xchg
test
aad
xchg
pop
cmp
addr16
add
push
sub
test
xchg
addl
xchg
mov
lds
pop
add
ljmp
rorl
nop
add
movsl
cltd
add
in
add
insb
push
add
mov
jmp
push
daa
add
pop
add
and
mov
xchg
jl
in
stos
xchg
add
das
add
les
add
add
xchg
sub
push
xor
add
les
add
add
in
add
lock
pushf
inc
pop
add
movsl
mov
clc
mov
add
mov
add
sarb
add
sarl
add
rol
add
out
call
add
lods
test
repz
scas
add
lret
mov
test
add
lret
stc
int
add
loopne
add
std
cld
add
lea
mov
je
add
mov
std
leave
lods
add
ret
stos
add
ret
add
loope
add
les
add
test
jmp
mov
add
mov
add
rol
add
jmp
add
mov
mov
add
fmulp
add
fadd
add
repz
cld
cli
add
cmpb
xchg
add
xor
add
out
add
call
fiaddl
jmp
add
in
loope
clc
call
in
push
call
add
aaa
add
mov
scas
add
cmpsl
add
shlb
add
ret
cli
aam
add
aad
add
aam
add
aad
add
aad
add
aam
add
xlat
mov
add
fnstcw
add
loope
add
loope
add
jecxz
add
in
add
in
add
out
add
bnd
add
cli
testb
cmp
add
lcall
fdivl
mov
add
int
add
mov
cli
xlat
mov
add
shlb
lock
add
faddp
add
fadd
add
add
fmulp
add
hlt
jmp
std
repz
pop
inc
add
imul
mov
xchg
cmpsl
mov
mul
lret
add
out
add
in
fiadds
std
cmc
in
add
lret
lahf
add
pushf
addb
call
flds
imulb
fs
into
cltd
add
shll
add
stc
repz
mov
ja
dec
xchg
call
lea
rclb
add
cld
testl
cld
out
add
dec
add
push
add
incb
aas
inc
sbb
inc
dec
and
pop
insb
inc
add
xor
jns
popa
add
and
mov
lahf
and
inc
mov
add
jb
sbb
add
push
add
je
mov
mov
div
testl
daa
lock
fwait
test
add
mov
add
xchg
scas
add
stc
add
push
push
add
mov
inc
inc
dec
add
cmp
add
in
cltd
mov
incb
scas
mov
add
xor
mov
mov
cmpsb
test
add
xchg
lret
int3
clc
add
in
stc
add
std
std
add
cli
cli
add
repz
in
in
add
data16
add
add
incb
add
add
add
add
sub
and
adc
pop
adc
adc
adc
adc
adc
adc
adc
incb
add
add
add
add
push
push
pop
pop
pop
pop
push
push
push
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcll
add
add
pop
outsl
mov
addb
mov
test
incb
add
add
add
add
pushf
je
jg
scas
mov
mov
sbbl
test
add
add
add
jmp
xor
lcall
mov
dec
sbb
add
stos
push
je
arpl
in
in
jmp
mov
lahf
mov
sbb
add
pop
xor
in
out
loope
aaa
xor
sbbl
sbb
stos
cmp
inc
sbb
aas
popa
outsl
in
loope
jmp
mov
andl
add
aaa
jb
xor
add
jp
jecxz
loop
aaa
lcall
lea
incb
add
add
add
cltd
cltd
lret
int3
push
jecxz
out
xor
mov
incb
add
add
scas
dec
jns
cmp
call
popf
mov
sbb
cmp
fs
scas
jnp
pop
sbb
ret
inc
dec
ds
mov
mov
sbb
inc
dec
push
nop
jns
cmp
inc
xor
xchg
insl
push
inc
and
call
mov
sbb
inc
dec
ds
addr16
pop
cmp
daa
out
add
test
dec
sbb
xor
inc
inc
push
fs
nopl
pop
nopl
call
test
nop
dec
sbb
in
or
push
ss
cmp
cmp
push
pop
daa
inc
sbb
fcom
jg
cmpsb
nop
xchg
nop
dec
sbb
in
pop
inc
inc
push
aas
dec
pop
pop
cmp
dec
push
ds
sbb
mov
xchg
xchg
xchg
dec
sbb
in
add
dec
inc
inc
inc
jae
inc
mov
and
fnstenv
mov
mov
xchg
xchg
dec
sbb
in
repnz
andl
imul
sub
xor
xchg
dec
sbb
in
repnz
ret
jo
jo
ja
pop
push
pop
adc
aam
cmpsl
mov
jbe
xchg
dec
sbb
in
repz
push
iret
iret
les
push
xor
fstp
xor
xchg
dec
sbb
push
repz
repz
clc
stc
int3
lret
lret
inc
outsb
mov
lcall
xchg
xchg
dec
adc
add
out
out
out
repz
testb
sub
push
popa
mov
mov
js
mov
adc
add
add
add
imul
lock
out
cmc
xlat
xlat
lcall
js
or
adc
add
add
add
push
or
div
out
rcrl
outsl
mov
jp
mov
incb
add
add
add
add
or
gs
and
lods
jge
jl
fs
arpl
add
cli
push
jno
cltd
cltd
les
mov
jl
mov
enter
jno
cltd
cltd
les
mov
ret
incb
add
enter
sti
cld
cld
std
std
std
std
loopne
loopne
ret
enter
rol
mov
xchg
add
add
add
incl
add
incb
add
incb
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incb
add
incb
add
incb
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
arpl
popa
add
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
add
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
pop
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
push
add
add
add
add
jae
jae
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
insb
add
add
add
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
imul
add
add
insb
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
add
push
add
add
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
pop
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
add
insb
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
add
pop
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jb
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
sbb
dec
add
jbe
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
add
add
add
bound
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
add
add
inc
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
je
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
and
daa
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
add
add
outsb
add
add
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
es
aaa
mov
pop
fwait
cmp
add
add
jle
add
add
gs
sbb
inc
arpl
dec
add
push
jns
je
insl
add
adcl
je
sbb
push
imul
adc
jns
gs
sbb
inc
arpl
je
insb
add
les
outsb
dec
outsl
popa
fs
imul
add
push
push
outsb
imul
outsb
add
dec
gs
popa
addr16
adc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
jae
arpl
gs
add
push
push
push
dec
add
mov
jae
outsl
ja
outsb
imul
insl
jae
adc
dec
popa
je
add
mov
jb
outsb
je
jb
add
movl
add
push
imul
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
adc
inc
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
outsb
imul
outsb
imul
imul
imul
push
imul
add
sub
jne
push
outsb
imul
jae
outsb
imul
push
outsl
arpl
adc
push
add
adcl
insb
jo
xor
sbb
push
imul
aas
ja
outsb
outsb
je
gs
imul
imul
add
push
jae
push
dec
add
dec
dec
push
jns
je
insl
add
bound
arpl
xor
arpl
inc
outsl
insl
jo
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
pop
push
outsl
arpl
je
adc
dec
bound
xor
adc
push
inc
inc
dec
push
popa
jbe
dec
outsb
push
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
push
inc
insb
imul
jae
jne
imul
jne
arpl
jbe
jb
gs
sbb
push
jb
add
subb
imul
push
arpl
outsl
outsb
je
outsl
insb
push
outsb
imul
jb
outsb
inc
popa
jo
jne
gs
outsb
imul
je
arpl
outsb
add
std
pop
dec
imul
push
push
imul
popa
fs
outsb
imul
outsl
arpl
add
inc
jbe
ja
adc
jo
add
mov
jae
jae
adc
arpl
jb
adc
push
inc
push
dec
push
add
stos
push
dec
push
outsb
imul
outsb
je
inc
jb
gs
add
stos
push
jb
arpl
jae
outsb
imul
inc
xor
gs
gs
cmp
cmp
gs
jb
gs
cmp
cmp
gs
add
push
outsl
jo
xchg
add
inc
outsl
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
push
imul
outsb
je
imul
inc
insb
imul
je
add
insb
outsl
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
or
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
or
fs
inc
popa
jo
push
imul
add
gs
add
push
outsl
jo
add
push
imul
arpl
outsl
jb
pop
arpl
popa
arpl
inc
jb
jbe
jb
jo
outsb
or
inc
jb
jbe
jb
outsb
fs
decl
imul
insb
popa
jns
or
imul
imul
gs
gs
arpl
gs
outsl
push
imul
push
jb
jbe
gs
arpl
gs
jb
jo
jb
imul
push
jb
jbe
gs
popa
je
add
jb
push
arpl
jb
jb
insl
gs
push
add
popa
insl
gs
popa
je
add
or
outsl
inc
imul
or
fs
cs
jbe
rcpps
insb
gs
insl
popa
addr16
imul
je
jb
bound
or
popa
jo
imul
je
add
popa
jo
outsb
fs
imul
popa
jo
outsl
inc
imul
data16
imul
add
fs
push
je
gs
insl
pop
adc
imul
push
imul
popa
insl
add
push
push
push
imul
insl
gs
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
pop
pop
dec
outsb
push
imul
imul
insl
gs
dec
gs
or
push
outsl
jo
adc
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
cwtl
cmp
outsl
jb
add
add
gs
push
add
add
add
or
dec
fs
inc
push
inc
insb
imul
push
inc
push
dec
outsb
insb
imul
dec
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
cwtl
cmp
outsl
jb
add
dec
gs
cmp
push
outsl
jo
and
add
outsb
je
inc
jb
gs
or
je
inc
jb
gs
xor
inc
arpl
or
outsb
insb
jns
push
insb
or
gs
sbb
push
outsl
jo
and
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
push
data16
dec
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
cwtl
cmp
outsl
jb
add
add
gs
pop
add
add
add
push
push
push
imul
insl
gs
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
imul
insl
gs
dec
gs
and
push
outsl
jo
or
add
push
push
imul
insl
gs
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
add
dec
outsb
push
imul
imul
insl
gs
dec
gs
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
adc
mov
nop
add
add
and
stc
xchg
add
jbe
add
mov
bound
aam
loope
cmpsb
cmp
fwait
ds
aas
or
sub
cmpsb
test
shl
sub
ficompl
lret
sbb
mov
aaa
xchg
xchg
cmpl
iret
aam
mov
insb
mov
pop
mov
mov
out
cltd
lds
inc
sub
scas
push
jo,pn
js
cltd
and
jae
pushf
addr16
add
add
or
scas
rorl
outsl
dec
int3
fsubrs
sub
mov
adc
jo
inc
jle
mov
rclb
or
outsl
mov
dec
movsl
dec
push
xchg
xchg
mov
sbbl
jno
popf
sub
sub
cmpl
ret
test
imul
sbb
mov
into
out
xchg
lock
faddl
movsl
adc
scas
and
mov
jno
sbb
and
mov
lds
jl
add
mov
push
push
scas
cmpsl
pop
mov
ret
push
sahf
or
xchg
cwtl
int3
je
repz
pushf
fsubr
sahf
sub
add
adc
movsb
shll
out
mov
pushf
lea
lcall
mov
push
je
stos
mov
and
popf
rol
je
loope
repnz
push
loope
dec
mov
insb
scas
test
or
jne,pt
ja
jb
cmp
pushf
testl
push
aas
jmp
inc
xchg
repnz
out
push
out
lods
repz
mov
xchg
jmp
nop
and
dec
sub
das
dec
sbb
repz
shlb
mov
loopne
pusha
jp
or
ljmp
aam
popa
popf
movsb
sbb
sbb
imul
add
dec
mov
js
push
.byte
xchg
.byte
sbb
cmp
xchg
cltd
addb
push
fldenv
call
cmp
add
aas
or
or
movsb
pop
clc
dec
add
pop
jg
pop
push
les
mov
adc
dec
pop
sub
fs
cmpsb
mov
pop
jne
mov
movb
push
adc
ja
lea
test
insl
decb
and
scas
pop
adc
xchg
jbe
sbb
lahf
pusha
dec
insl
sub
push
clc
call
ret
inc
lahf
es
xor
cmpsl
sahf
iret
pusha
hlt
js
insl
add
notb
ss
add
xchg
cmc
aaa
mov
push
insb
jp
sbb
movsl
fidivl
dec
xlat
push
lock
popa
mov
push
popa
aam
out
mov
loopne
nop
pop
mov
push
movsb
pop
lcall
or
in
in
je
dec
xor
mov
negb
sub
loope
iret
out
xchg
dec
jae
cwtl
mov
into
mov
repz
jecxz
xor
lret
ja
sbb
cmpsl
loop
or
iret
enter
and
jge
xchg
leave
pushf
jmp
and
repnz
ret
jle
add
add
jmp
daa
push
adc
mov
and
jae
jmp
orb
adc
xor
sarl
repz
cs
jecxz
add
imul
loop
movaps
stc
inc
fidivl
push
add
xlat
fidivrs
movsb
cs
movsb
adc
xor
out
imul
mov
stos
xchg
negb
cmpsb
jne
out
xchg
in
pop
lret
jmp
ss
pop
out
sbb
sbb
dec
mov
iret
int3
mov
bound
add
rolb
inc
dec
les
rclb
xor
pop
pop
xor
in
jne
jp
std
pusha
cmp
jno
das
sub
repz
fstpl
mov
cs
xchg
arpl
lret
adc
mov
dec
jecxz
mov
jl
mov
out
pop
adc
fistpll
ss
popa
inc
xor
pop
popf
pusha
out
gs
lahf
leave
cmc
movsb
aaa
lea
jae
or
push
stos
mov
mov
mov
les
jne
or
push
scas
sbb
lret
xchg
fsubl
aad
jg
in
out
sbb
sub
out
bound
mov
sbbl
out
ja
stos
push
scas
inc
xchg
ja
loopne
pop
test
rorl
and
mov
xchg
pop
mov
mov
test
movsb
mov
aaa
push
push
mov
jae
fs
and
shlb
addb
push
outsl
push
scas
arpl
sarb
and
inc
pop
out
mov
lret
pusha
and
or
xchg
bound
and
lods
nop
rolb
sbb
pusha
loope
insl
push
sbb
jl
xchg
pop
or
lock
jmp
xchg
ds
andl
jns
push
in
hlt
jmp
dec
add
shlb
xchg
jns
repz
js
pusha
outsl
les
rorb
pop
fdivs
push
push
mov
xadd
addl
fisttps
mov
mov
aaa
sub
stc
add
or
mov
mov
and
xchg
aad
xlat
dec
stos
sarb
scas
nop
or
shlb
stc
out
inc
mov
sbb
movsb
pop
sub
mov
ds
int
inc
clc
or
pop
mov
out
addb
sbb
push
jns
fwait
outsb
leave
add
mov
fwait
test
dec
cli
cmp
xchg
push
pop
in
pop
inc
mov
outsb
dec
mov
cmp
dec
mov
imul
sub
dec
or
add
rcrl
ljmp
daa
lea
inc
lcall
lret
jns
mov
cmp
andb
dec
xchg
out
outsb
or
inc
lods
out
fidivrl
loop
adc
dec
sarb
mov
ret
cmp
pop
jl
lcall
ss
mov
imul
in
iret
sbb
xchg
adc
arpl
xchg
sti
mov
mov
inc
jp
stos
adc
or
mov
test
push
jmp
out
xchg
test
sub
mull
iret
cli
clc
fwait
divb
loop
jge
push
jnp
pop
or
or
xchg
jecxz
fs
mov
bound
dec
inc
adc
cli
cmp
loop
mov
popf
sti
sub
or
fisubrs
xorl
clc
out
inc
outsl
mov
in
fs
mov
jge
or
mov
mov
test
inc
inc
pop
pop
adc
xlat
sbb
je
nop
sub
push
lretw
daa
mov
shrl
adc
psrad
dec
xchg
in
addr16
nop
add
push
fwait
jle
jne
pop
fmuls
mov
add
xchg
add
jae
adc
sbb
shll
es
mov
jle
push
pop
test
addr16
jmp
xchg
jmp
xchg
sahf
imul
and
imul
call
bound
push
pop
jecxz
mov
cmpsb
push
cmpsl
pop
adc
xchg
data16
pop
sbb
lret
jp
nop
push
in
repz
inc
adc
fcmovb
adc
xor
pop
adc
adc
out
xor
inc
push
sbb
in
pop
xchg
and
mov
jae
stos
test
inc
and
sbb
jae
mov
pop
and
lods
sbb
mov
jae
mov
icebp
push
xchg
sub
mov
ds
or
cmpsl
lods
sbb
ficomps
jp
inc
adc
and
mov
repnz
mov
test
sub
jno
mov
das
xor
mov
movsb
mov
push
xor
in
lret
jns
push
aaa
iret
mov
mov
frstor
mov
pop
js
cld
mov
or
outsb
xor
cltd
fisubl
adc
or
xor
sub
adc
or
fcoms
imul
clc
stos
jb
scas
and
pop
out
push
loop
je
clc
arpl
mov
push
add
sub
imul
pop
pushf
scas
nop
outsb
dec
xor
insl
cmp
cmp
loop
iret
movsb
push
pop
fstps
xchg
sahf
or
xchg
aaa
dec
repnz
sbb
aad
xchg
push
stos
leave
push
shll
xchg
sub
xchg
fimull
xchg
les
pop
fidivrl
and
jmp
sti
push
aaa
fldl
and
jns
jbe
loope
pop
jg
jecxz
cmp
pop
pop
adc
insl
je
push
inc
pushf
lret
mov
out
push
mov
and
mov
sub
dec
pop
mov
ficomps
xlat
bnd
out
cmp
movsb
mulb
push
movsl
int3
loope
mov
mov
dec
insb
xor
daa
and
pop
inc
xor
dec
outsb
pushf
dec
into
mov
add
repnz
mov
ds
pushf
pushl
lods
mov
stos
je
cmp
scas
cmp
fnstenv
lods
inc
push
pop
iret
cmp
sbb
addr16
loopne
jl
stos
call
ret
xor
loopne
and
push
jae
ret
addr16
sti
jg
enter
gs
mov
movsb
lret
lahf
pop
sbb
sub
scas
out
xchg
es
mov
or
stos
dec
nop
into
push
add
adc
mov
out
cmp
mov
fildl
cmpsb
popa
test
or
subb
cmpl
int
fcomp
and
add
andb
or
cli
jp
jb
fildl
fdivrs
sub
mov
std
cmovo
data16
or
jp
adc
push
bound
cmpsl
icebp
jo
int
andl
cs
ret
dec
shlb
inc
adc
cmpb
lret
mov
fnstcw
fucomi
int
mov
mov
xchg
fnstenv
xchg
ljmp
jmp
sbb
addr16
movq
jg
js
pusha
push
push
push
sbb
jbe
nop
and
sbb
sbbb
mov
imul
movsl
scas
sar
inc
dec
sbb
inc
pusha
lock
lock
nop
std
push
jge
cmc
aas
arpl
popl
loop
or
cmp
mov
inc
scas
leave
xor
or
stc
in
push
insl
mov
cmp
test
cwtl
gs
add
jne
lret
in
cmpsl
ret
fldcw
scas
pop
pop
es
pushf
cmp
stc
ficompl
xlat
shll
inc
inc
dec
ja
mov
aaa
xor
ss
pop
sbb
and
idivl
xor
ret
xchg
mov
nop
je
lret
jo
and
xor
jle
sahf
movsb
dec
in
sub
jns
insb
loop
sti
dec
sti
adc
loope
movups
sub
lret
xchg
and
sbb
test
jns
repz
test
or
ret
cmp
pop
pushf
sbb
lahf
js
mov
sbb
sbb
outsb
xchg
rorb
xor
mov
sub
std
insb
sbb
adc
stos
cmc
sub
orl
adc
jb
std
mov
je
iret
pop
pop
out
push
sbb
repz
int3
shll
cmpsb
xchg
sub
daa
xchg
mov
dec
and
ljmp
in
pop
jo
xorl
or
jne
nop
cmpsb
movsb
and
sub
aam
pop
fcoms
into
popa
dec
and
call
adc
sub
pop
mov
stc
sbb
clc
push
push
cmpl
push
popf
dec
in
lcall
sbbb
fsubs
xchg
add
push
push
pop
call
dec
xor
arpl
outsl
jns
sbb
cmp
mov
inc
mov
call
dec
loope
ss
mov
mov
adc
das
pusha
push
cmp
mov
lret
arpl
xor
movsl
hlt
add
repz
ret
loopne
dec
and
jnp
out
xchg
cld
mov
int
sbb
cmpsb
neg
or
in
cmp
sub
stos
push
push
andl
movsl
loopne,pn
mov
push
es
je
mov
fwait
add
inc
cmpsl
sbb
push
jg
jnp
add
push
push
or
push
mov
mov
cmp
fdiv
aas
fidivrl
and
sarb
mov
and
sub
mov
fnstcw
fmull
cwtl
mull
sub
push
call
sub
call
jne
jbe
loopne
mov
xor
or
cmp
inc
jnp
inc
or
aas
dec
jmp
test
clc
sub
in
aad
in
in
xchg
xchg
mov
in
jne
mov
jg
push
mov
in
xchg
mulb
arpl
lock
call
addr16
test
pop
insb
cvttps2pi
jmp
loope
inc
cmp
out
rcr
rcl
ja
mov
cmp
pop
sti
fdivrs
subb
pushl
sub
jo
sbbl
cmp
sub
xchg
test
pop
leave
test
mov
dec
int3
jb
jle
imul
icebp
ja
leave
mov
or
in
lock
mov
push
out
mov
faddl
pusha
fnsave
imul
or
rcll
mov
fldl
aad
jmp
sar
ret
popa
adc
into
mov
in
inc
mov
dec
mov
push
in
push
clc
outsb
pushf
add
xchg
rclb
add
cli
adc
dec
inc
jae
xchg
sub
jae
push
xlat
xchg
push
les
orl
xlat
ret
sbb
fisubrs
test
fcmovnb
cmp
sbb
clc
lahf
lods
sbb
adc
std
movsl
out
adc
sub
sbb
or
scas
idivl
push
pop
xchg
mov
cmp
stos
adc
loope
fbstp
jp
int3
mov
fisttpl
out
xor
xor
ret
xor
sti
lret
mov
call
jmp
push
fs
in
je
jl
jg
jg
mov
mov
sub
fs
leave
mov
mov
mov
or
sbb
push
subb
leave
mov
xchg
push
in
ss
nop
movsb
jmp
test
insb
jp
add
aaa
fstl
outsb
in
pop
push
pop
xchg
incb
push
int3
ds
adc
add
cmc
lds
pop
call
dec
movsl
int
push
push
cmp
insl
cmp
inc
je
jl
mov
gs
add
sbb
pop
pusha
sbb
into
push
add
pushf
cli
stc
pop
sbb
dec
dec
cmpsl
add
xorb
mov
stos
insb
aas
xchg
or
push
cmp
jae
out
cmp
mov
dec
hlt
cwtl
rolb
stos
mov
iret
jns
pop
jb
fisubs
pop
movsl
into
inc
adc
xor
outsl
cli
jmp
outsb
test
or
rclb
insb
jp
daa
add
xchg
or
repnz
cmp
cmp
mov
jnp
adc
push
sbb
xor
fcompl
mov
fmuls
adc
cmc
shrb
cs
outsl
inc
sbbb
pushf
inc
push
sbb
dec
testb
adc
aad
pop
xor
or
add
push
packssdw
cmp
and
xchg
add
dec
es
fadd
nop
jae
inc
shlb
pop
out
cmpsl
xor
jmp
inc
jns
adc
and
jo
xor
or
mov
jp
cld
cmp
push
pusha
mov
cmp
mov
jl
and
xchg
mov
mov
push
inc
and
pop
daa
jg
bound
xlat
and
jbe
and
jmp
scas
mull
leave
pop
pmulhuw
es
call
repnz
in
sub
loop
push
sub
mov
add
xor
lcall
dec
leave
pop
sub
aam
dec
insb
mov
in
mov
insl
sar
sbb
in
outsb
movsl
dec
jmp
outsb
ds
shrb
insb
test
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
sbb
cli
stos
or
push
and
fstps
sldt
add
in
add
push
dec
dec
outsl
jl
jl
call
adc
mov
cmpb
jnp
mov
pop
pop
mov
add
jmp
enter
je
adc
loopne
pop
aas
or
push
push
mov
pop
mov
jae
sub
sbb
sub
call
pop
insb
xor
xchg
pop
add
and
pushf
movsl
mov
pop
add
mov
push
mov
popl
and
sub
push
movswl
pop
dec
jne
cmp
mov
mov
mov
scas
dec
dec
mov
daa
stc
in
push
ret
std
mov
mov
jno
xor
pop
sbb
mov
mov
je
xchg
cmc
test
test
clc
lahf
into
aad
mov
push
xchg
lret
cltd
xchg
std
cmpsl
add
adc
in
jae
adc
jecxz
in
mov
dec
xlat
test
jae
mov
xchg
mov
mov
cli
fsubrs
sarl
xchg
lock
mov
fs
mov
xor
enter
adc
add
das
pop
xchg
cmpsb
or
shlb
test
fstpl
lcall
inc
push
rolb
fmull
xchg
cmc
aad
or
inc
dec
dec
rorb
xor
mov
add
adc
clc
xor
in
sbb
push
xor
push
inc
dec
xor
or
insb
xor
xchg
mov
mov
arpl
mov
xchg
call
int
loope
loope
mov
arpl
jle
mov
mov
mov
fldt
sbb
hlt
push
add
mov
push
pop
xor
or
inc
adc
shll
adc
clc
mov
int
movsl
dec
loope
pop
sub
fnstenv
xlat
test
pop
xchg
adc
in
jo
add
sbb
movsl
es
clc
add
push
sbbl
cs
inc
adc
mov
sahf
xchg
add
je
lcall
adc
xlat
and
loop
fdivs
test
jb
mov
scas
outsb
xlat
fs
jns
loopne
fdivs
pop
enter
movsl
lods
mov
stos
pop
jmp
xor
and
popa
fdivs
ja
lods
subl
call
xor
jb
xchg
pop
aaa
push
ja
popf
movsl
lds
pop
sbb
jp
adc
sbb
rorl
cmp
fcmovb
push
cltd
mov
cmpsb
shl
lds
test
das
ja
aaa
cmpsb
mov
aas
ja
int
repz
xor
sub
sub
pop
fsubs
in
pop
addr16
loope
js
or
xchg
shl
gs
cwtl
outsb
jnp
xchg
fnstenv
in
std
iret
mov
inc
push
push
push
loope
adc
test
cwtl
aaa
fs
cli
dec
or
xchg
adc
lcall
push
rolb
rcrl
sbb
aas
cli
adc
sub
aas
mov
inc
pushl
mov
outsb
lcall
sub
adc
test
adc
test
push
pop
mov
mov
cmp
mov
cli
add
mov
test
ret
xchg
adc
sti
jb
dec
and
and
jae
jns
leave
call
mov
mov
adc
test
mov
adc
test
cmc
cmp
and
int3
or
and
cmp
movsb
test
test
cmp
mov
lods
push
mov
adc
test
cli
jnp
xchg
inc
pushf
cld
cmp
pushf
xor
cli
adc
mov
mov
jnp
mov
adc
mov
adc
cmpsl
push
gs
cmp
mov
subl
push
outsb
and
test
cs
int3
sti
cmp
ret
xlat
mov
inc
pushf
add
push
popa
xor
pop
std
mov
mov
adcl
mov
adc
cmpsl
add
test
jns
sub
xor
test
cli
jnp
xchg
inc
pushf
repz
movsl
test
outsl
adc
cltd
cli
xor
mov
movsb
test
adc
test
adc
mov
jnp
sub
add
add
mov
rcrl
add
xchg
cld
insb
add
test
js
or
jle
cmp
in
or
int
cmp
cld
insb
add
test
js
or
dec
orb
stos
rcr
and
int
repnz
sbb
shrb
cmp
in
or
int
daa
inc
outsl
pop
popa
repz
arpl
imul
shrb
cmp
in
or
int
push
mov
xor
test
adc
outsl
sbb
shrb
inc
adc
or
int
push
mov
into
xchg
and
mov
movsb
xor
sbb
adc
stos
rcr
and
int
repnz
sbb
shrb
out
mov
mov
aaa
test
dec
cmp
xchg
jnp
enter
xchg
and
mov
adc
cmp
sbb
cmp
mov
inc
and
xor
cmpsl
and
mov
fstpl
adc
js
mov
idivl
inc
add
mov
jle
test
pop
mov
cli
adc
cmp
xor
xchg
lcall
cmpsl
or
xor
and
pop
gs
test
movsl
dec
loopne
adc
mov
lds
mov
ljmp
inc
hlt
cmp
cli
adc
test
adc
cmp
icebp
adc
xchg
cmc
and
pop
addr16
cld
icebp
and
jge
std
fs
add
aas
std
mov
cmp
and
xor
jb
cmpsl
pop
ja
add
int3
hlt
sub
cli
mov
or
stc
cmp
xchg
in
movsl
lcall
int
out
xor
dec
and
xchg
add
ret
adc
test
adc
test
adc
test
adc
cmp
adc
cli
cli
adc
cmp
cli
adc
test
adc
jecxz
rorl
fs
adc
test
adc
test
adc
subl
sahf
mov
ja
hlt
cli
gs
push
adc
jecxz
mov
pop
hlt
mov
and
xor
mov
xchg
leave
movsl
popf
sub
notl
imul
sub
mov
mov
or
inc
popa
pop
mov
ss
adc
xchg
icebp
lods
xchg
sbb
je
lret
rolb
js
les
ret
es
fistps
daa
and
and
decb
mov
movsl
enter
sbb
sahf
xchg
push
sub
push
cmp
mov
lods
cmp
mov
and
lcall
mov
mov
or
push
lea
out
jmp
fsubrl
sbb
jbe
call
imull
aaa
mov
mov
into
out
fsubrs
es
ja
ret
jns
in
inc
sbb
les
fcoms
arpl
mov
pop
mov
jne
pop
xor
fsubs
push
mov
or
loop
call
imul
dec
scas
les
adc
xchg
sarl
jmp
cmpsl
leave
pop
push
in
pop
dec
leave
repnz
dec
es
fiaddl
imul
icebp
mov
shr
lods
lds
cmp
push
pusha
xchg
sbb
into
jge
out
mov
cmp
jecxz
fcmovnb
inc
repnz
insb
mov
loop
push
push
pop
cmpb
dec
jp
mov
nop
js
xchg
mov
push
cmp
pop
sbb
sbb
loop
xchg
cwtl
faddp
cmc
push
pop
sbb
adc
adcl
lock
out
jne
js
subl
adc
push
inc
dec
cmp
mov
xor
icebp
cmc
cmp
shlb
stos
xchg
loop
icebp
fcoml
testb
outsb
dec
mov
adc
je
sub
xchg
xor
bound
lds
jl
push
int3
jbe
push
lods
and
hlt
xorb
mov
push
cltd
imulb
movsb
sub
dec
leave
inc
push
xchg
mov
std
int3
rcrl
cmp
scas
mov
push
and
sti
mov
std
icebp
sbb
lret
jge
inc
not
or
push
cld
sub
insl
sub
push
aaa
mov
push
stos
dec
mull
leave
in
shlb
popf
sarb
das
stos
ss
into
adc
popa
cmp
jae
xchg
in
mov
andb
fmulp
stc
sbb
pop
push
insb
test
xor
mov
decb
mov
repnz
mov
loopne
xlat
out
add
push
or
repnz
mov
sarl
push
out
add
add
add
or
add
add
dec
add
add
adc
dec
add
jl
add
jl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jl
add
jnp
add
or
mov
jl
add
jl
add
jl
add
gs
insb
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jl
add
add
add
jl
add
add
add
jge
add
add
add
add
gs
insb
inc
js
arpl
gs
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
lods
push
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
pop
sti
push
sub
mov
xchg
pop
int3
in
mov
mov
sbb
test
and
std
imul
mov
mov
inc
push
xor
addl
or
loope
push
mov
aam
sub
insb
ja
inc
orl
lds
dec
xchg
cli
xor
repnz
add
test
lret
cmp
cmpl
int3
jp
push
or
lock
push
or
inc
cli
std
pop
jb
popf
mov
jecxz
scas
push
mov
ljmp
in
lret
dec
pop
xchg
sub
jmp
daa
daa
cmp
inc
or
sbb
cmp
pop
push
insb
sub
cld
out
or
mov
mov
jb
fistpl
push
push
mov
testb
es
aad
xchg
push
movups
imul
or
xor
xchg
popf
cmc
mov
daa
cmovb
outsl
call
push
repz
mov
fwait
dec
add
mov
ror
mov
out
xchg
test
fildl
sbb
mov
negl
lret
lcall
push
ret
xchg
xchg
sahf
sbbl
mov
out
sti
sub
psrld
std
leave
pop
xchg
fidivrs
mov
sub
ficoms
and
xchg
jl
cmp
cmpsb
test
pusha
pushf
stos
adc
dec
inc
lods
sbb
in
imul
sar
mov
mov
jge
stos
into
inc
scas
dec
or
sbb
dec
hlt
push
hlt
loope
push
mov
fnstsw
xor
shlb
mov
push
std
mov
inc
xor
mov
cld
mov
pop
xor
dec
add
jnp
sub
mov
scas
cmp
xchg
push
je
adc
cli
aas
push
subl
mov
xchg
sar
fwait
inc
cmpsl
push
cmp
xchg
outsl
inc
mov
adc
xlat
sub
sbb
add
enter
jp
push
mov
daa
scas
leave
xor
or
sbb
jg
fcmove
test
andl
mov
pop
jl
jmp
cld
les
add
xchg
push
repz
mov
lret
lret
add
mov
push
shlb
hlt
sub
xchg
cli
push
loop
shl
int
test
jl
int3
minps
imul
popf
sbb
pop
xchg
leave
loop
inc
repnz
or
movsl
enter
xchg
out
pop
jb
aas
enter
xor
push
sbbb
sbb
pop
js
rcr
lods
fisubl
mov
je
inc
push
inc
mov
sbb
sub
mov
aaa
movsl
mov
push
mov
rcrl
mov
add
in
or
cmpsb
int
aam
std
ret
add
ja
pop
pop
add
popf
imul
xchg
lret
add
or
push
push
jo
sub
mov
cmp
push
aaa
inc
lret
and
ret
push
jae
nop
pushf
mov
push
dec
pop
mov
mov
ljmp
push
pop
jno
or
push
xchg
inc
adc
test
lods
or
inc
mov
push
jle
addr16
fcmovb
pop
test
jo
test
enter
mov
lcall
jecxz
popa
pop
fdivs
int
and
fs
stc
inc
in
js
movsl
mov
lods
cs
das
aas
icebp
stos
scas
js
and
jmp
lds
dec
adc
pusha
clc
repnz
shlb
loope
mov
into
dec
xchg
inc
mov
pop
hlt
cmp
mov
dec
lret
in
add
jbe
mov
jb
mov
push
lods
out
dec
jmp
adc
or
into
bound
adc
adc
mov
ret
addr16
sub
dec
lret
out
ficompl
jg
gs
in
in
or
and
xor
push
lock
xor
test
stos
cli
cltd
dec
xchg
sbb
mov
repnz
adc
out
sbb
rcrb
mov
outsb
inc
cmpsl
aaa
and
popa
mov
jo
or
addr16
ds
decl
and
ret
in
xchg
sbb
mov
xor
or
sub
cltd
add
sub
in
orl
add
imul
xor
cwtl
mov
outsb
push
mov
jmp
sbb
rcrl
dec
jle
cwtl
xor
shll
pop
add
mov
test
xchg
sbb
sti
adc
push
arpl
sub
sbb
and
xchg
jge
out
inc
and
adc
sbb
jne
in
xchg
mov
mov
mov
add
and
jmp
push
divb
sbb
stos
cmp
xchg
sbb
sbb
cwtl
jb
xchg
push
mov
insl
add
jo
jecxz
call
cld
xchg
lea
subb
cmpsl
xor
movsb
pop
jne
das
push
in
mov
repz
pop
mov
shrb
mov
fnstenv
fsubrl
inc
or
xchg
jb
int
fcoms
es
sti
sbb
ret
pop
sbb
in
mov
scas
sub
inc
insl
xchg
shrl
cmp
adc
xchg
pop
out
jns
stos
das
inc
lods
mov
out
clc
push
repz
xchg
out
std
xor
dec
push
adc
in
mov
mov
and
lods
mov
sbb
adc
cmp
add
shlb
mov
roll
pop
xchg
mov
mov
add
mov
cmp
in
mov
or
pop
pop
mov
stos
jne
nop
stc
push
aad
aas
inc
mov
pop
sub
clc
push
and
stos
jno
xchg
mov
add
inc
add
rol
xchg
ds
cli
adc
test
jnp
jmp
mov
es
xorl
mov
cmc
pop
jmp
mov
int3
pop
ret
daa
sub
xchg
in
adc
push
fnstsw
or
cmpsl
in
xchg
pop
mov
jnp
mov
lea
test
cs
lods
inc
cmc
push
and
and
cld
push
nop
add
jo
ret
xor
int
xor
inc
push
cwtl
repnz
and
cmp
lods
add
pop
jno
fsts
fbstp
lret
test
nop
dec
sub
dec
gs
jb
iret
inc
mov
bound
and
lock
mov
mov
stc
and
lcall
mov
test
sub
xchg
cmp
aam
ds
lahf
jmp
out
addr16
mov
cmp
sub
or
xchg
call
je
cmp
ds
aad
bound
inc
popf
lods
and
fwait
mov
adc
outsb
call
cld
xchg
shlb
cmp
ret
jmp
in
ds
sti
xor
xor
cmp
idivl
cmp
pop
push
rclb
lret
rorb
mov
xchg
push
add
sbb
popf
xchg
adc
jb
and
or
test
cwtl
adc
adc
iret
mov
lods
cmp
push
daa
jg
mov
adcl
leave
sub
aas
mov
cmp
or
lods
push
icebp
push
sbb
mov
jne
mov
sahf
cmpsb
push
adc
mov
xchg
pop
out
das
sub
adc
loopne
and
enter
mov
mov
push
shlb
ss
push
dec
ss
xchg
in
dec
in
imul
cmp
hlt
and
aad
and
xchg
push
and
cmp
inc
fidivrs
arpl
cli
int
out
rolb
jecxz
or
xor
scas
lcall
add
sbb
into
test
mov
mov
ficompl
jecxz
push
in
add
.byte
lods
int3
