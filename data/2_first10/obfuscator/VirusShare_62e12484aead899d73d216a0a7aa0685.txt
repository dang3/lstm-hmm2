push
call
ret
ret
aas
shl
repz
jno
lret
adc
mov
aad
mov
adc
ret
sub
dec
dec
adc
daa
dec
std
xchg
adc
and
pushf
daa
adc
push
mov
jns
rcll
scas
inc
std
js
lcall
pushl
dec
andb
loope
fwait
lods
jo
out
bound
cmp
add
sti
out
and
pop
shl
or
mov
push
ss
and
test
fstp
cld
jnp
repnz
dec
and
repnz
sbbl
sbb
mov
insb
lahf
aaa
outsb
jo
aad
mov
imul
arpl
stos
pop
fbld
shll
out
push
sbb
repnz
shll
sbb
sub
loope
sbb
push
cmpsb
fildl
xchg
sahf
std
rorb
imul
cli
xchg
mov
xchg
lmsw
inc
jo
aas
add
add
or
and
fwait
jbe
or
mov
js
pop
pop
mov
dec
scas
lahf
mov
jb
nop
mov
push
pop
cwtl
mov
imul
or
pop
push
mov
js
inc
sbb
in
out
dec
cltd
xor
sbb
stos
mov
inc
pop
or
arpl
hlt
and
add
ds
xchg
lods
cmp
mov
test
aaa
je
dec
fistps
jno
lods
mov
adc
xchg
ret
ja
pop
jb
int3
gs
jl
sbb
in
fimuls
pop
push
pop
sub
sbb
jne
clc
or
jle
adc
mov
andl
push
jl
fimull
mov
loopne
fnstcw
xor
sub
sbb
fistpll
pop
push
cmp
out
movsb
sub
lcall
cmp
sub
add
xlat
int
cli
sub
scas
lret
int
cmp
or
in
jl
cmp
pop
int
push
hlt
and
sbb
push
xchg
or
xchg
ss
mov
outsb
jmp
dec
movsb
add
les
das
bound
fwait
aas
pop
loope
xor
repz
add
mov
addr16
scas
shlb
push
aad
pop
in
or
xchg
stos
scas
and
in
add
imul
push
shr
jo
mov
lea
push
imul
sbb
out
add
mov
cs
pop
bound
int3
stc
rclb
lret
les
test
es
das
test
push
jo
sti
mov
xlat
inc
push
mov
hlt
repnz
add
mov
lods
mov
clc
lret
test
mov
stos
xchg
mov
push
xor
adc
and
out
pop
lcall
inc
adc
cld
sbb
leave
data16
adc
jg
mov
pop
cmp
cmp
mov
pop
mov
dec
jg
mov
fstps
xchg
push
jb
dec
sbb
sbb
repnz
repnz
movsb
rcrb
enter
sarl
aaa
fnstsw
jmp
add
lods
and
leave
sub
ret
popf
mov
repz
mov
adc
cli
dec
subb
subb
add
iret
inc
sub
push
mov
cli
lds
mov
outsl
jbe
adc
mov
push
mov
testb
pop
ljmp
xchg
popf
popw
xchg
mov
fst
pop
mov
push
pop
cmp
fs
mov
je
jae
sub
cmp
in
std
shr
cli
cld
in
outsl
repz
sbb
push
xchg
fisubl
push
dec
mov
js
pop
sti
stos
cmpsb
mov
stos
loopne
mov
adc
push
pop
lea
jge
xchg
xor
jno
js
dec
popa
dec
adc
out
add
clc
push
popa
sbb
aad
jo
jb
jg
push
sub
pop
mov
or
mov
and
das
jl
mov
stos
xchg
jnp
jmp
jge
cwtl
sub
and
cwtl
enter
int
in
fistps
xchg
mov
cs
xchg
dec
and
rcll
cs
out
cld
cld
hlt
les
enter
dec
pop
dec
jg
mov
jno
icebp
pop
cltd
mov
icebp
cs
ds
aad
stos
xor
mov
loopne
subl
mov
popf
push
jae
ret
aaa
cmpsl
mov
popf
pop
xor
dec
stos
add
mov
cmp
cmpsl
sahf
repz
xor
mov
jnp
cwtl
xchg
sbbl
mov
inc
lock
lahf
icebp
int
aad
xchg
das
mov
cld
push
into
pop
bound
dec
fcompp
loope
std
pop
mov
fbstp
arpl
lea
inc
gs
pop
rclb
mov
in
cmp
mov
sbb
sub
inc
pop
xor
icebp
push
aad
or
add
xlat
cmp
bound
mov
test
cmp
pop
inc
or
test
out
daa
adc
aad
pop
mov
xor
mov
xor
lods
insb
pop
jecxz
xchg
mov
subl
mov
push
inc
and
addb
mov
xor
aaa
mov
xor
addr16
loope
mov
stos
mov
rorb
mov
push
lock
add
int3
rorb
rcrl
push
mov
shlb
aaa
add
dec
std
rcrb
xchg
pushf
pop
aam
push
pushf
ljmp
stc
push
dec
push
xorl
jmp
rorl
mov
xchg
sbb
lret
jno
in
out
sbb
mov
inc
push
pop
push
fsts
push
sub
js
mov
or
mov
stos
fisttpll
int3
scas
xchg
inc
int
xchg
mov
jne
fs
pop
jno
jno
push
dec
aam
or
mov
and
mov
jb
subb
mov
hlt
sbb
mov
jbe
xchg
sarb
ds
mov
inc
sarl
rorb
cli
cli
int3
mov
and
sarb
repnz
faddp
int
push
fidivrs
push
aas
xor
mov
mov
add
pop
or
imul
push
cmc
mov
pop
pop
dec
rolb
jle
dec
push
add
fimuls
mov
mov
leave
cmp
ret
lods
inc
cmp
jl
pushf
mov
pop
push
cmp
out
push
xchg
pop
pop
fwait
pusha
or
cmp
jecxz
fistl
stos
in
pusha
mov
sub
mov
pushf
jne
add
inc
lret
mov
mov
iret
lds
fs
push
cmp
or
dec
xchg
rorb
in
jb
scas
mov
lahf
imul
pop
mov
push
and
push
xchg
push
fwait
cmp
jo
loop
push
int
dec
cltd
cmp
stos
nop
cmp
fistpl
bnd
cs
xchg
pop
je
push
sbb
insl
bound
mov
or
mov
jbe
jg
mov
int3
push
not
sub
inc
push
pop
pop
push
adc
push
mov
fwait
pop
inc
imul
sbb
hlt
xlat
shl
loop
push
scas
xchg
mov
repz
inc
fisubrs
stos
bound
stos
mov
stos
pop
enter
dec
flds
xor
pop
dec
mov
mov
mov
push
xor
inc
mov
pop
push
dec
mov
aam
sbb
sub
imul
mov
add
xchg
xchg
pop
add
xchg
mov
and
das
iret
push
or
push
cmp
movb
mov
inc
flds
jae
fcoms
mov
rclb
cltd
or
jp
cli
bound
xor
pop
or
clc
jg
push
push
lock
push
sti
cld
inc
xchg
cmp
mov
addl
pop
outsb
pop
in
outsb
inc
and
lods
lods
lret
popa
or
std
mov
sarl
ss
loopne
and
mov
mov
cmpb
pushf
or
push
adc
test
pop
mov
cmp
pushl
mov
nop
imul
jle
xchg
shrb
insl
mov
sbb
test
dec
or
pusha
sbb
xor
ds
nop
lock
push
out
mov
xchg
push
mov
lcall
scas
jg
mov
jns
inc
pop
scas
in
mov
inc
mov
add
loope
scas
xor
and
addr16
enter
or
pop
lock
imul
inc
or
xchg
imul
sti
insl
dec
movsb
cmp
test
add
out
std
adc
leave
sub
popa
neg
pop
push
mov
stos
mov
or
sub
cli
cs
cmp
mov
dec
jbe
or
jo
mov
repz
cli
pop
fcmovne
in
pop
popf
movsl
les
leave
mov
jmp
nopl
sbb
mov
es
lods
test
pop
push
mov
lahf
sbb
sub
jle
out
xor
fimuls
mov
shlb
fsub
xchg
add
lods
inc
ljmp
inc
add
sbb
stc
cmpsl
sarb
add
std
add
xchg
mov
std
in
loope
icebp
add
popf
add
dec
enter
push
orl
pop
mov
and
iret
stc
push
pop
mov
sahf
movsb
out
add
jl
notl
in
hlt
loope
or
jnp
insl
out
mov
repz
int
push
sub
cmpsb
or
inc
fbstp
std
pop
mov
inc
js
shlb
loope
add
and
ljmp
sbb
jne
mov
mov
stc
popf
jno
mov
in
dec
xchg
pusha
decb
xor
sbb
sahf
jb
rcrl
sub
push
lret
ret
loop
js
push
mov
or
sub
xlat
scas
cmp
sbb
or
ja
push
mov
paddsw
push
sbb
push
mov
mov
push
std
arpl
inc
mov
jmp
stos
mov
into
insl
outsl
out
cmp
icebp
jne
lea
or
xor
push
test
jge
das
int
nop
cwtl
pop
mov
mov
ss
add
enter
ljmp
add
hlt
ja
decb
jle
inc
les
in
mov
inc
sub
inc
aas
pop
xor
push
xor
je
push
mov
xchg
jno
ficoms
ljmp
cmp
mov
repz
sbb
xchg
adc
sub
push
pop
dec
fbstp
ror
jmp
jno
movsl
sbb
shrl
hlt
inc
pop
inc
cmpsl
adc
jp
repnz
icebp
or
cmc
jne
push
or
xor
lds
add
sbb
cwtl
mov
jnp
xchg
ret
xorl
lret
cwtl
xchg
rol
sti
sbb
mov
jmp
movsb
and
jo
lock
xor
pop
push
cltd
mov
ja
fsin
addr16
call
jmp
cli
push
test
rorb
adc
dec
push
ret
aas
fbld
lret
push
adcl
adcl
sbb
jecxz
iret
fiadds
mov
sub
xchg
sbb
cs
adc
ljmp
mov
test
mov
add
push
imulb
sub
idivb
xchg
jle
and
inc
lahf
aaa
sub
lcall
push
sbb
mov
rclb
in
fnstenv
dec
jecxz
sbb
or
dec
loope
and
icebp
ljmp
inc
mov
movsb
and
mov
sub
adc
cvtps2pd
setbe
xchg
fxch
xchg
push
outsl
xchg
insb
cmp
push
sub
jbe
xchg
mov
inc
decb
push
mov
jecxz
fmuls
push
dec
ss
xor
iret
inc
mov
sar
addr16
mov
xor
repnz
scas
cld
and
cmpsb
lret
outsl
clc
push
les
adc
mov
movb
lret
pop
push
dec
xchg
xor
clc
repnz
mov
sub
ljmp
stc
adc
out
lock
xor
pushf
push
or
std
subl
mov
sbb
cmpsl
xchg
ret
cmp
testb
js
add
call
out
lea
push
outsl
leave
push
inc
das
push
es
add
xchg
cmp
fiadds
fldenv
push
iret
vrsqrtps
lret
push
lcall
lret
xchg
pop
push
xlat
xchg
je
testl
fildl
sbb
cmp
mov
pop
lcall
notb
das
rcr
dec
and
cmc
dec
xchg
pushf
push
jp
jmp
in
inc
add
sbb
in
and
inc
pop
popf
inc
insb
xor
imul
lock
or
out
fyl2xp1
inc
shrb
xchg
jp
out
nop
rclb
nop
or
pop
addb
pop
test
outsl
dec
loope
lds
adc
xchg
sbb
loopne
scas
adc
sbb
pop
pop
ss
inc
lea
cmp
inc
jb
mov
mov
mov
jne
scas
pop
out
ds
nop
lret
mov
jnp
roll
mov
pop
pop
lods
scas
inc
mov
jne
pop
movsb
xor
pop
push
scas
mov
scas
inc
pusha
sbb
rclb
xchg
mov
mov
fsubs
pop
or
mov
mov
or
pop
in
repz
xor
in
cld
and
std
push
jge
push
jg
fcmovu
mov
repz
pusha
mov
sub
enter
add
and
incl
out
xchg
pop
jg
push
mov
fsubs
out
outsl
imul
nop
xorl
cmpsl
pop
cs
xlat
or
or
add
push
jmp
cs
jae
sub
cs
fmul
add
inc
dec
push
pop
movsb
add
fbstp
inc
aam
add
jmp
dec
js
fs
xor
sahf
iret
inc
mov
loopne
dec
cmc
pop
xchg
lods
mov
and
in
sub
pop
lcall
into
dec
cmpsb
xlat
ljmp
jbe
adc
out
daa
sbb
imul
dec
cmp
mov
xor
sub
inc
jle
aaa
and
sbb
fldl
lahf
mov
iret
cld
jmp
call
and
mov
std
test
lock
mov
dec
jbe
xor
clc
mov
fcoms
ficomps
push
leave
lcall
lods
and
popf
leave
outsl
imul
sqrtps
cmc
jbe
dec
sub
jmp
adc
repnz
ds
sahf
adc
out
push
in
iret
out
push
inc
loopne
jge
jnp
add
cmpsl
mov
xchg
call
pushf
negl
repnz
mov
ficompl
subl
push
movsl
sub
dec
jle
mov
enter
xchg
je
enter
push
fmul
je
lahf
mov
movsb
xchg
jp
adcl
dec
or
xor
pop
mov
inc
loop
sbb
popf
pop
testb
sarl
pop
or
pop
xchg
inc
fwait
rorl
iret
fnstsw
pop
or
sub
mov
xor
mov
push
and
add
dec
mov
jl
popa
lcall
and
clc
jnp
or
pop
fs
mov
scas
jmp
mov
enter
mov
xor
jo
cmp
dec
mov
xor
out
fstp
pop
out
ror
out
pop
scas
adc
data16
mov
cld
jns
xchg
cmp
clc
mov
xchg
push
shlb
mov
adc
scas
xor
cmp
nop
xor
add
test
movsl
popf
retw
push
adc
pushw
xchg
sbb
cmpsl
cltd
sub
insl
inc
inc
popf
jp
fnstsw
mov
rcrb
inc
insb
stos
test
idivl
jmp
es
jl
rorl
xor
dec
lahf
cmp
andl
inc
and
push
mov
cmpl
les
orb
aas
cmp
push
mov
adc
adc
rorb
push
mov
dec
es
daa
js
es
pop
mov
xor
stc
data16
push
xor
stos
scas
cmpsb
movsb
imul
mov
adc
test
in
push
xchg
lret
inc
aas
sub
mov
xor
pop
hlt
fsubp
dec
mov
pop
xor
add
xor
jae
in
sbb
popa
pop
pop
mov
cld
sub
popa
cwtl
cld
insl
mov
or
lret
add
xor
xchg
lret
jnp
push
xor
imul
mov
or
fidivrs
sti
ja
das
dec
cmp
mov
mov
enter
shll
xor
and
xchg
daa
iret
loopne
xchg
aad
push
pop
pusha
xchg
inc
int
xchg
aaa
loopne
jecxz
pop
cmp
sbb
push
test
lock
lcall
adc
les
mov
popa
cs
inc
push
add
sub
xchg
sbb
xor
mov
insl
mov
pop
adc
int
cld
pop
adc
add
add
imul
adc
cmp
enter
push
adc
imul
mov
lahf
out
fwait
jmp
sub
in
add
gs
sbbl
push
in
orl
inc
les
sahf
push
pop
xor
enter
add
sahf
cwtl
ljmp
ret
out
xchg
mov
ss
ret
rolb
dec
and
fsubrl
sbb
xorb
fimuls
bound
sub
mov
sahf
ja
sti
outsl
mov
les
ss
add
add
sbb
aad
testb
sub
sbb
inc
inc
and
jg
pop
ror
sti
push
dec
push
push
jl
out
xchg
popa
addr16
mov
mov
push
in
js
cwtl
jbe
push
fsqrt
adc
aad
je
insl
jne
push
jnp
cmp
lret
jae
repnz
rclb
push
sub
sub
jl
ret
addr16
mov
cmp
jae
notl
clc
mov
pop
mov
mov
push
and
sub
enter
arpl
outsb
sub
cmpsl
jl
adc
dec
xor
repnz
xchg
fisubl
jnp
icebp
mov
jmp
shlb
or
pop
add
movsb
mov
aam
stos
outsl
push
xor
jae
sub
lds
sahf
xchg
enter
ja
cmpsb
pop
mov
mov
dec
scas
jge
or
mov
xchg
ret
mov
loope
aas
scas
movb
and
ds
nop
push
inc
cmp
mov
sub
inc
andl
popa
or
push
adcb
movsb
dec
xchg
aaa
syscall
imul
out
lock
adc
inc
and
leave
push
in
testb
das
mov
rcrb
pop
lock
mov
fdivl
mov
inc
pop
mov
movsb
aam
adc
sub
mov
dec
push
lods
rcll
int3
clc
fwait
jmp
jmp
xor
jecxz
pop
aas
pop
pop
and
cli
xor
rdmsr
xchg
dec
mov
lods
inc
and
mov
std
push
and
mov
cli
cmp
negb
xchg
mov
cmpsl
or
mov
iret
add
mov
xchg
dec
or
int
or
shrl
mov
adc
inc
sub
xchg
rcll
cmp
fiadds
idivb
cmp
mov
mov
repz
fcoms
int
mov
jecxz,pn
mov
pusha
pop
adc
push
arpl
sub
arpl
fs
xchg
fnstenv
cmp
scas
mov
or
in
mov
fidivl
lock
fisubrs
xchg
jmp
xorl
jp
dec
xchg
jg
lods
cmp
mov
pop
mov
jp
push
mov
jmp
loopne
nop
xor
push
pop
jae
dec
cld
push
and
enter
adc
jg
inc
movsl
mov
or
push
push
push
repnz
leave
popf
add
stc
or
into
add
and
mov
sbb
test
cwtl
clc
sbb
lods
jae
mov
push
xor
bnd
mov
fldcw
shlb
and
xchg
paddq
sub
aad
ljmp
mov
sbbb
dec
cmpsl
les
mov
shr
lds
lret
orl
or
call
cltd
push
into
jl
sub
les
lea
mov
pusha
mov
fmull
aad
leave
pushf
xchg
jnp
gs
pop
mov
imul
mov
pop
int
pushf
inc
mov
fsubrl
mov
loope
dec
ss
cmpsl
mov
hlt
pop
leave
push
cmp
fstps
jae
in
push
daa
sub
mov
xlat
leave
stos
xor
je
arpl
jmp
xor
stos
or
jo
sbb
xchg
jns
mov
out
xor
add
loope
dec
cmp
mov
imul
mov
ret
inc
pop
and
sub
clc
and
ret
sbb
scas
xchg
adc
jmp
fwait
or
inc
pop
pop
popf
lcall
sub
lret
movsl
inc
xchg
xchg
sbb
flds
dec
sub
jmp
jne
pop
xchg
mov
loop
shl
push
sub
xchg
inc
loopne
into
shlb
iret
sbb
dec
cmp
shlb
sub
loop
fcoml
xor
cmp
das
pop
pop
leave
add
push
mov
mov
or
cmp
sub
push
in
mov
outsb
sub
mov
stos
push
movl
cmp
mov
cmp
xchg
mov
das
cs
and
lock
aas
imul
je
inc
cmc
iret
pop
lea
sub
lods
inc
aaa
or
jbe
out
roll
jg
lods
rcrl
add
push
xchg
sub
enter
test
sarb
cmpsl
out
mov
scas
mov
stos
sub
ret
mov
cmpl
fs
mov
fnsave
ret
in
lahf
fcoml
push
sbb
pop
adc
imul
fcomps
pushf
push
jo
lock
test
gs
push
scas
mov
movsb
jmp
pop
outsb
pop
sahf
imull
mov
adc
gs
xor
mov
fstpt
rorb
add
imul
mov
dec
cwtl
fwait
mov
or
mov
outsl
imul
jne
mov
mov
pop
mov
inc
mov
sub
sub
jmp
icebp
jno
xor
inc
nop
add
fwait
insb
rcrb
cmp
ds
xchg
loop
fbstp
mov
push
in
pop
push
xchg
test
lea
xchg
jbe
out
outsb
stos
out
mov
mov
scas
lods
push
xchg
cltd
sub
fstps
std
mov
shl
mov
icebp
jl
arpl
out
incb
lcall
fsubp
in
mov
xchg
xchg
dec
mov
lret
das
adc
and
cmc
push
int3
and
repnz
pop
sbb
scas
movsb
imul
out
out
push
adc
sub
subl
add
mov
andl
dec
ja
sarb
cmp
repz
fcoms
mov
je
testl
sbb
test
nop
push
push
dec
pop
xchg
mov
push
jb
mov
bound
lahf
push
fcomps
mov
bound
xchg
push
pop
pop
fld1
roll
sbb
shr
jmp
jb
inc
lret
pop
mov
popa
xchg
pop
je
add
cmpsb
data16
aam
lods
cmp
loope
push
jnp
jle
fucom
adc
xor
xchg
adc
mov
mov
daa
xchg
mov
xor
ja
jns
cs
inc
fistps
outsb
rorb
sub
push
rol
clc
jae
push
jmp
xchg
cmpl
jp
sub
add
mov
push
xchg
sbb
add
push
jb
std
sbb
push
pop
pop
stos
inc
and
aam
add
cld
mov
out
mov
or
jbe
jl
aad
test
fwait
std
loopne
jb
scas
addr16
lret
cmp
xor
xchg
stos
out
xor
lock
clc
out
pop
jp
add
imul
jo
push
call
and
add
sti
dec
into
sbb
jl
lret
inc
mov
and
mov
push
xchg
sbb
mov
or
pop
lret
lods
insl
int
push
xchg
in
cltd
dec
std
lock
pop
out
cmp
outsb
xchg
movsb
mov
pop
data16
fimuls
inc
pop
push
jecxz
xor
int3
xchg
lret
sub
ss
aam
lahf
sbb
push
jno
mov
sub
cmpsb
xchg
add
lret
cmp
mov
fisubrs
xchg
lods
push
pop
add
adc
icebp
sub
stos
sqrtps
sbb
xchg
adc
movsb
dec
out
adc
cmpsb
aam
and
inc
shrl
mov
pop
in
pop
sbb
mul
jnp
fsubl
mov
rorl
mov
aam
pop
sub
bound
in
cmp
jne
scas
fadd
mov
test
popa
adc
jge
inc
cmp
data16
mov
popa
sbb
dec
adcl
pop
lods
cmp
aaa
test
mov
daa
mov
popa
dec
pop
repnz
dec
mov
imul
cs
sbb
lahf
mov
test
push
rorl
mov
inc
test
ror
outsl
or
mov
or
mov
adc
jo
xchg
xchg
pop
call
and
das
test
int
or
jns
jne
mov
and
jp
addr16
sarl
inc
inc
rol
inc
cmp
movsb
out
in
cmp
or
aaa
lret
mov
xor
jge
mov
or
jno
dec
jae
xchg
inc
dec
stos
add
imul
jmp
adc
pop
test
insl
push
rcrb
jo
xor
adc
in
rcrb
movsl
cltd
inc
or
sti
jnp
gs
or
add
ds
jl
stos
cs
pop
fdivs
leave
xor
jmp
fwait
cmpsb
add
push
lret
sbb
or
sbb
pushf
rorl
mov
push
stos
movsl
in
adc
sbb
addr16
and
pop
mov
dec
loopne
insb
lret
xchg
lods
add
jmp
enter
js
ljmp
jne
fistl
inc
jmp
fs
ljmp
outsl
xchg
sub
pop
mov
orl
xor
mov
xor
cmp
aad
or
sarl
mov
fldcw
sbb
fldenv
rcl
std
aad
xor
push
jae
mov
int3
adc
loope
xchg
sbb
push
into
jb
add
enter
mov
jg
test
rcll
jo
pusha
xor
iret
scas
lock
mov
stos
cmc
cmp
gs
mov
pop
addr16
cs
cs
jns
sti
push
mov
roll
shlb
cld
mov
fadds
fistl
mov
cmp
out
testb
pop
addb
pushf
aaa
fs
cltd
loop
dec
adc
mov
jmp
mov
fcoml
mov
ret
or
fimuls
xlat
mov
jb
fwait
ljmp
lret
pop
shl
insl
jge
out
shlb
repz
fs
dec
inc
out
push
inc
insb
lock
adc
jecxz
les
lcall
int
jns
jno
in
jne
jg
scas
cmpb
pop
sbb
insl
ss
aas
mov
pushf
lds
cmp
cmc
lods
ret
out
rcl
and
arpl
lods
andl
push
leave
shlb
test
and
mov
dec
pusha
in
les
lar
enter
jno
nop
pop
sub
cmc
cltd
mov
push
jecxz
sub
inc
add
jle
test
mov
outsl
pop
inc
pushf
or
hlt
imul
addr16
fwait
mov
in
mov
sub
hlt
mov
xchg
lret
int3
insb
adc
adc
xchg
pop
lret
xorb
mov
cmp
xchg
mov
lcall
fisubl
inc
jno,pn
cmp
ds
sti
add
mov
shrl
dec
cld
jg
and
cs
xor
add
or
imul
inc
outsb
push
cli
int3
mov
dec
or
cld
inc
pop
fstpl
leave
mov
lods
outsb
xchg
lahf
pop
clc
lock
cld
add
fsubs
shrl
lret
mov
jno
shll
xlat
adc
popa
addr16
adc
jb
pop
cld
mov
pop
mov
lahf
outsl
xchg
cli
stos
ret
mov
adcl
mov
sbb
sbb
xor
stos
add
xchg
fisttps
pop
mov
xorb
mov
ljmp
shl
adc
pop
adc
mov
pushf
jmp
int3
or
fs
outsl
sbb
ret
fs
adc
cwtl
pop
hlt
dec
and
mov
icebp
stc
dec
jl
jg
xlat
mov
mov
js
inc
test
jb
shlb
push
hlt
cmpsb
add
cmc
xor
repz
push
sahf
xchg
ljmp
mov
inc
nop
faddl
out
ret
adc
dec
jns
pushf
mov
jae,pn
clc
dec
int3
rol
mov
cwtl
lcall
dec
popf
stos
or
dec
aam
enter
lcall
fsubr
pop
sti
or
sbb
xor
pop
push
pop
popf
jge
mov
cld
or
mov
mov
jns
fisubs
jp
je
cmp
pop
jp
daa
cmp
xor
out
xchg
sbb
push
ret
mov
pop
lods
sarb
push
outsl
jne
push
mov
xchg
or
adc
gs
les
lea
mov
std
mov
xchg
xor
iret
sbb
outsb
fnstcw
sub
xor
das
adc
stos
movsl
imul
aaa
xchg
mov
adc
xor
push
cld
aas
mov
stos
pop
mov
push
je
mov
pop
addr16
mov
das
add
dec
aad
adc
sub
sub
sbb
push
loop
arpl
pusha
lds
jecxz
cmp
inc
pusha
mov
leave
mov
repnz
fimull
and
push
fidivrl
and
inc
push
test
ret
call
mov
jle
enter
dec
mov
pushf
lea
dec
add
xchg
inc
push
sbb
push
or
inc
rcr
out
sahf
sbb
cmp
jle
adc
sub
xchg
lahf
cld
or
dec
dec
or
movsl
push
inc
lea
outsb
adc
pop
dec
or
lods
popa
cmp
mov
addr16
cmp
sbb
cmp
into
bnd
imul
and
jmp
repnz
fisubrl
sub
cmp
adc
xchg
jecxz
fdivl
cmp
mov
mov
or
enter
aam
ret
fcomip
jp
mov
out
xor
rorl
stc
jp
adc
or
mov
aaa
add
fwait
sbb
ljmp
adc
mov
movsb
push
dec
cmp
call
hlt
push
in
roll
out
push
out
xor
jnp
test
push
mov
or
in
ljmp
aaa
and
js
xchg
pop
in
loope
jg
xchg
cmc
jbe
scas
jno
xchg
lods
test
push
add
xor
mov
push
aas
pop
dec
lods
mov
xor
sbb
pop
mov
insl
cmp
push
push
in
push
ljmp
jb
dec
popa
push
scas
xor
sub
and
inc
test
cmp
push
orl
nop
xor
mov
fcomps
mul
outsb
xor
enter
popf
fiadds
sub
stc
xchg
lods
in
rorl
pop
adc
push
adc
adc
lret
out
or
and
adc
pop
or
or
rcll
sbb
pop
mov
mov
mov
aas
data16
bound
or
call
xor
lods
and
pop
imul
scas
sahf
mov
fisubrl
or
mov
push
in
push
pop
dec
mov
imul
lret
jnp
pop
popa
xor
mov
dec
jbe
stc
or
fs
or
movb
jns
xchg
jmp
clc
lds
dec
into
jae
xor
and
subl
push
ja
rcrb
jne
lret
movsb
stos
sbb
inc
cmpsl
add
test
cltd
ds
daa
pop
sub
push
in
shll
mov
jbe
fnstsw
fistpl
lahf
dec
shr
jb
pop
jae
add
andl
sahf
ret
movsl
xchg
in
nop
adc
fs
dec
inc
sub
scas
mov
adc
push
mov
cmp
loop
cmpsb
es
inc
xor
sbb
addr16
outsl
sub
inc
adc
pop
pushf
test
scas
or
testl
cmpsb
movsl
xchg
push
inc
incb
pop
xor
fwait
xchg
inc
xchg
mov
lret
jmp
sbb
scas
adc
jmp
testb
mov
inc
out
test
imul
iret
and
sbb
dec
mov
xchg
jecxz
stc
hlt
lds
add
mov
popf
or
ja
dec
cmpsl
cmp
jmp
xor
lods
pop
test
fists
popf
cs
cwtl
int
mov
xchg
mov
rcll
jge
in
bound
outsl
dec
inc
shl
testb
movsl
jmp
cmc
lods
pop
mov
mov
in
jbe
sub
push
fildll
cmp
cltd
nop
add
inc
in
enter
jb
cltd
fisubs
xor
cmp
fadds
xchg
jb
lods
xchg
jp
mov
xchg
add
adc
xchg
icebp
jmp
cmp
add
stos
add
cmp
jl
outsl
add
or
mov
mov
sbb
aad
test
in
rcr
mov
sbb
push
fisubrs
fisubl
jne
fstpl
cwtl
arpl
dec
outsb
sbb
sbb
clc
push
dec
sbb
ja
call
xor
mov
stos
not
lods
inc
out
bound
pop
repz
inc
lea
and
fsubrs
cmp
das
mov
adc
pop
lock
iret
lods
and
fisttps
adc
rcll
dec
movsl
sub
sub
ss
call
xlat
mov
test
and
sbbl
lret
jbe
sub
shlb
xor
rcrl
sub
xchg
jl
ss
pop
pop
in
jae
mov
clc
cmp
movsb
mov
mov
or
jbe
and
scas
test
out
jns
ljmp
daa
pop
and
lds
lods
fwait
adc
fs
jnp
leave
pop
pop
push
iret
push
int3
and
cmp
inc
int
sahf
inc
cmpb
xchg
inc
imul
clc
or
stc
inc
mov
insb
les
out
out
adc
add
stc
xor
cmc
fmul
loop
les
pop
enter
push
xchg
xor
ja
sahf
xor
xchg
inc
dec
sbb
iret
loope
int
mov
lahf
jb
xor
outsl
es
sub
andb
scas
mov
mov
int3
int
outsl
rorb
push
and
iret
stos
push
sub
sub
pop
test
xchg
movsb
mov
adc
in
add
cmpsl
xlat
and
iret
mov
xchg
popf
push
lret
jne
sub
xchg
les
ret
cwtl
out
je
sar
scas
adc
cmp
and
dec
adc
xchg
push
and
xchg
loopne
mov
mov
xlat
push
rcl
xchg
inc
icebp
enter
int3
cs
fst
sahf
sub
xchg
nop
mov
and
stos
add
and
jmp
je
lret
jo
lods
leave
xor
shr
jae
stos
es
test
adc
rclb
pop
les
sbb
clc
movsb
mov
scas
dec
je
mov
leave
je
push
push
sbb
sub
sub
data16
dec
jp
test
sbb
xchg
xor
lock
jnp
mov
test
inc
insl
hlt
test
aas
sbb
xchg
mov
lahf
inc
int
and
ret
cld
jle
xchg
cmp
fs
adc
bound
or
fs
push
test
das
ret
fldcw
fiadds
fistpl
pushf
inc
popl
js
adc
pop
or
pop
jno
jge
cmp
adc
push
and
or
cmp
cmpsl
jne
sbb
mov
out
cwtl
mov
shrb
jecxz
call
iret
fstps
push
pop
inc
lcall
push
xchg
stos
mov
push
mov
lret
dec
mov
enter
pop
or
cs
aas
rorl
sbb
push
test
and
ror
add
mov
stc
in
pop
xchg
cmp
add
cld
xor
leave
popf
and
pop
add
jmp
scas
lahf
aad
inc
mov
movsb
cmp
xchg
mov
and
cmp
xor
add
cld
pop
cltd
imul
scas
test
decb
inc
xlat
stc
cwtl
data16
push
mulb
loopne
pop
arpl
aam
push
inc
jp
jg
push
push
inc
clc
dec
out
mov
cmpb
lret
adc
insl
mov
and
add
sbb
fmul
push
xchg
ret
test
daa
insb
sbb
mov
xchg
loop
std
out
push
mov
sahf
jo
aam
pop
les
dec
jl
loope
sub
rorl
scas
aad
inc
roll
cltd
scas
cmp
and
pop
stos
push
cltd
aam
jp
push
sub
fwait
test
ret
inc
cmp
fistps
mov
mov
stc
dec
aas
jno
test
dec
sbb
cmp
jecxz
jmp
cld
xchg
sub
xchg
cmp
or
lods
lods
push
shlb
xchg
mov
mov
ja
test
outsl
xor
aas
mov
gs
jl
mov
adc
jmp
subb
into
dec
pop
jae
push
out
cmp
fnstcw
dec
gs
nop
jmp
push
inc
pop
shll
mov
push
pop
dec
cmc
or
insl
jns,pn
jae
jb
divl
mov
pusha
xor
push
mov
sbb
fmuls
gs
outsb
cmp
loop
jp
popf
add
or
jbe
xchg
fisttps
or
and
idivl
imul
adcb
insl
cmp
test
in
cmp
jle
mov
subl
push
pop
out
imul
fcomip
jnp
sbb
mov
cmp
push
mov
pushf
pop
sub
sbb
pop
gs
arpl
test
dec
jae
push
int
push
inc
pop
mov
adc
mov
mov
cmovle
cmp
js
ja
fisttpll
or
dec
inc
xor
and
adc
cli
lret
fsubr
in
jmp
add
add
scas
hlt
test
sahf
ficompl
bound
out
jns
mul
repz
es
xchg
xchg
cmpsl
enter
lea
jne
shll
push
pop
out
mov
pop
in
cmpsb
cwtl
addr16
pop
jl
rorb
or
or
in
test
scas
sub
jecxz
push
mov
add
mov
jle
ret
rclb
xor
out
pop
stos
pop
dec
mov
addl
jl
popf
out
lea
repnz
pop
jns
add
mov
sub
mov
cmpsb
mov
sub
shll
fwait
jg
aam
iret
add
call
xor
mov
ja
and
mov
adc
rcrl
stos
out
inc
test
add
dec
testb
mov
fst
sub
popf
jbe
popa
xor
pusha
lahf
shll
cwtl
mov
cs
inc
jmp
inc
xchg
jno
test
mov
mov
int3
out
cmpsb
inc
mov
dec
sbb
and
test
add
insl
pop
xchg
cmp
repnz
aam
movsb
and
add
jb
jmp
jecxz
mov
lcall
jecxz
fidivrl
inc
push
jae
and
in
fsub
mov
cmpsb
out
ja
inc
bound
mov
icebp
push
add
ljmp
pop
leave
ds
mov
nop
xchg
bound
fsubrl
fsubrl
shrl
sbbl
mov
insb
sub
sti
stos
and
aaa
pop
clc
push
sub
out
flds
icebp
lahf
jne
imul
mov
push
add
mov
in
sub
mov
mov
xchg
push
mov
sub
std
mov
push
movsb
mov
es
idiv
sub
bound
adc
cli
adcl
sbb
pop
in
test
mov
cmc
or
ja
cli
mov
shrl
jmp
mov
inc
lock
pushf
dec
and
sbb
imul
cmpsl
aam
add
data16
add
add
sbb
jecxz
mov
inc
xchg
jmp
mov
ss
pop
lea
leave
lods
sub
pop
xor
mov
xchg
test
cmp
cmp
addr16
insl
test
lret
lods
push
mov
dec
adc
lods
pop
cmp
out
aam
insb
fnsave
pop
aaa
ljmp
mov
adc
push
fstpl
stos
jno
mov
mov
movsb
add
and
lds
jg
xchg
les
iret
out
fbld
ss
data16
jmp
push
push
in
aaa
daa
dec
xchg
cmpsl
cmpsl
xlat
mov
xchg
xchg
sarl
aad
icebp
push
inc
fxch
sbb
popa
lret
xor
cmp
mov
rcrb
mov
mov
push
scas
xchg
mov
dec
ss
jg
je
sub
mov
xchg
or
in
pop
xor
fsubrs
cli
dec
jl
int3
imul
cmp
out
sbb
add
cmp
xchg
leave
lds
jp
pushf
cmp
mov
sbb
and
aam
lret
fdivs
push
jno
out
scas
fsubrp
xchg
bound
mov
mov
jg
sahf
fidivrl
dec
adc
xchg
test
nop
mov
fisubrl
inc
add
mov
sbb
jae
pop
sti
sub
pop
jl
xchg
daa
fists
xchg
or
and
jg
push
imul
lock
cmp
pop
cmp
test
xchg
lahf
xchg
sbb
push
stos
and
mov
int3
loopne
out
pop
cmp
cmpsb
xchg
lods
popa
les
mov
inc
sbb
stos
jne
out
sub
xor
and
mov
mov
imul
imul
cmp
push
fs
fldl
cli
insl
fimull
decl
test
nop
addb
not
lock
in
in
jnp
aad
roll
sbb
and
dec
cli
push
mov
cmc
jnp
or
mov
sbbb
push
mov
mov
std
xchg
sbb
sub
push
out
insl
adc
xor
out
cmp
mov
pop
pop
lods
jno
xchg
xchg
jnp
in
pop
mov
test
daa
fnstcw
ret
int
and
push
in
mov
cwtl
in
dec
cmpsl
loop
or
fmull
jb
mulb
inc
loopne
cmpsb
loopne
cltd
pop
push
fbld
insb
jle
cmp
and
mov
pop
mov
jno
rcrb
push
cmc
stc
jp
jmp
dec
adc
jno
pop
adc
lds
mov
xchg
sbb
sbb
jl
fcmovnbe
or
xchg
addr16
cmp
xchg
stos
sahf
pusha
in
push
mov
dec
das
xchg
push
jb
push
cwtl
push
mov
pop
imul
jp
pusha
js
lret
mov
mov
popl
fisubrs
int3
lock
lods
or
xor
lret
and
inc
xlat
jb
nop
sbb
jmp
mov
cmp
imul
push
mov
or
sub
ljmp
insl
stc
sub
mov
outsl
xchg
and
pop
jae
scas
imul
xchg
xchg
push
loope
mov
fldt
pop
cld
loop
push
push
lret
in
jb
xor
mov
iret
sbb
jbe
sub
dec
and
shll
jecxz
je
mov
ret
stos
sbb
cwtl
mov
pop
sbbb
mov
jae
mov
jg
ror
scas
jge
jns
xorb
jge
mov
inc
pop
pop
and
fisttpll
lods
adc
adc
insb
push
fdivs
jnp
and
and
mov
ret
xchg
stc
add
push
in
das
adc
xor
sub
stc
dec
into
sub
cmp
push
pop
repnz
test
ds
in
pop
movsl
xor
push
jns
cli
inc
outsb
pop
hlt
xchg
in
stc
adc
pushl
or
divl
mov
mov
insb
jg
in
sbb
pop
popf
mov
popf
jecxz
rcrb
push
stos
addr16
cltd
sub
push
outsl
mov
fisttpll
sub
ja
jmp
daa
sub
cmp
ret
mov
rcrb
jno
daa
incw
xor
fdivs
push
test
ss
dec
les
pushf
dec
orl
jl
mov
shll
adc
out
outsl
mov
rcll
mov
adc
scas
sbb
fucom
jecxz
jl
cli
stos
icebp
nop
nop
flds
or
sti
inc
jo
and
or
stc
jmp
adc
fmull
sub
add
leave
add
in
cmp
mov
ljmp
cli
push
xchg
popa
cmp
icebp
pop
sbb
imul
jae
inc
cmpsl
mov
push
imul
int3
inc
and
pop
cmp
xchg
push
and
jns
cmpl
pushf
fiaddl
push
fwait
and
aas
pop
ds
div
sbb
popa
pop
loopne
scas
push
scas
xchg
jl
mov
jo
nop
scas
dec
mov
aas
lock
icebp
into
lcall
lods
and
sbbb
sub
add
push
jmp
adc
adc
sub
mov
ror
xchg
sbb
mov
push
push
xchg
aaa
fcomi
and
lahf
mov
xchg
icebp
add
sahf
mov
dec
jecxz
jmp
xchg
push
cmp
scas
icebp
movsl
inc
in
cli
mov
sub
jb
clc
sti
mov
sbb
int
push
fnstenv
sbb
or
mov
out
jmp
push
shrl
cmpb
lock
jbe
add
call
xor
mov
mov
mov
fwait
aas
fistpl
mov
push
popf
hlt
orl
or
or
push
andb
call
sbb
aas
mov
pandn
lods
mov
int
inc
jp
push
jge
dec
mov
loope
rclb
xchg
add
dec
aas
xor
call
push
aad
inc
push
rclb
jne
mov
loopne
pop
mov
int3
dec
mov
daa
dec
mov
loopne
add
or
push
mov
xchg
stos
fs
fisubs
sub
dec
push
je
pop
flds
and
xor
ds
sbbl
adc
dec
cmp
hlt
jno
fwait
mov
cmc
push
jae
fsubrl
sbb
xor
mov
lods
cmp
pusha
jmp
push
hlt
addr16
sti
or
decl
test
xor
sti
sahf
divb
xor
loope
sbb
sub
fisttpl
ljmp
and
xor
popa
test
adc
mov
insl
xchg
jg
xchg
ja
in
out
js
cmpsb
bound
mov
mov
in
push
push
mov
ret
push
fs
inc
lahf
daa
or
add
fsubrl
push
sbb
cmp
mov
push
lea
pop
push
das
jnp
int3
push
loopne
mov
and
jle
pop
mov
sti
or
cs
ret
cmpb
jg
fisttpll
andl
es
mov
lret
flds
pop
lds
and
mull
dec
cmp
hlt
movl
xchg
divl
int3
out
dec
or
and
xchg
ljmp
lret
jl
dec
cwtl
aam
mov
jb
xlat
jl
inc
shrl
stc
pop
movsl
loop
mov
mov
loop
out
arpl
push
js
cli
push
cmp
and
cmp
shrb
inc
jns
cmp
cmp
sub
sub
cmp
xchg
cmp
cltd
dec
pop
inc
inc
out
xor
mov
push
fwait
lret
jno
outsb
insb
icebp
pop
testb
push
in
fisttps
jo
lea
aas
mov
mov
dec
mov
xchg
jo
pop
lock
xchg
sbb
jecxz
notl
lret
in
jl
aaa
ljmp
rcrl
imul
xor
les
cmp
sub
cmpsl
adcb
and
dec
push
mov
in
aam
push
sub
jp
addl
mov
dec
notl
pop
ret
std
xchg
inc
mull
mov
cmpsb
ret
call
adc
mov
sar
rcrl
sub
mov
jb
push
fs
add
stos
jo
dec
call
xchg
in
fildl
adc
push
sub
sub
inc
mov
push
lock
fstl
sbb
mov
cmp
adc
push
not
js
fbld
ja
push
fisubl
pop
mov
in
daa
fwait
test
popa
dec
loope
push
adc
inc
sti
outsl
int
pop
pop
inc
cltd
adc
or
mov
sub
xor
jnp
pop
incb
xchg
push
shrb
int3
int3
fadd
addr16
imul
pop
cld
sbb
rcrb
cltd
or
push
int
pop
xchg
push
scas
jb
jg
or
cmpsl
gs
and
mov
fcmovnbe
and
mov
pop
inc
int3
mov
push
lods
jno
sub
sub
cmpsb
adc
or
push
je
add
addr16
or
lret
cmp
addl
mov
and
fwait
sar
pop
mov
adc
cld
aas
test
test
rcrb
push
cmpsl
loopne
inc
and
gs
enter
push
cmpsb
stos
pusha
fcmovne
arpl
and
popa
add
jmp
arpl
ja
xor
cmp
pop
lahf
test
cld
ljmp
sbb
pop
pop
adc
mov
pop
jbe
pop
aad
jl,pn
and
mov
mov
mov
dec
repnz
mov
mov
mov
mov
in
pop
dec
mov
cmpsb
filds
dec
push
movsl
xlat
mov
andb
and
stos
push
lret
adc
or
xor
push
mov
xchg
scas
sub
mov
std
inc
ret
lcall
fldenv
insl
add
push
cmp
and
and
add
xchg
fidivl
or
fucomip
inc
test
fwait
xchg
mov
mov
mov
mov
je
lea
inc
inc
sub
pop
adc
jno
push
pop
or
pop
mov
stc
lcall
sub
add
dec
lock
movsb
or
loopne
fs
push
xchg
test
lcall
push
xor
mov
loop
fwait
inc
sub
cmpsl
into
add
mov
cmpsb
lods
sub
mov
cld
sbb
and
xor
loop
orb
test
sbb
mov
out
jmp
mov
mov
mov
xchg
xor
iret
pop
imull
test
out
jae
inc
notb
mov
add
mov
push
or
sbb
push
data16
xor
sub
dec
add
adc
imul
cs
xor
mov
xchg
mov
pop
mov
hlt
and
jns
mov
sub
dec
hlt
inc
lret
or
hlt
mov
and
push
jo
insb
hlt
dec
mov
add
and
mov
sub
mov
call
call
clc
ss
mov
adc
lods
leave
sbb
icebp
add
and
pop
es
cwtl
in
icebp
mov
fimull
dec
sar
or
xchg
mov
mov
in
mov
pusha
sbb
jbe
mov
xchg
mov
xchg
jb
std
mov
std
in
lea
sub
dec
jge
lods
sbb
pop
pop
mov
adc
inc
mov
or
jo
into
into
mov
into
mov
and
inc
and
stos
and
popa
in
inc
xchg
jg
pop
pop
mov
xchg
cmp
fcmovbe
lahf
jbe
mov
push
pop
adc
adc
sbb
ror
arpl
dec
adc
adc
roll
xor
jbe
sub
cmpb
sbb
xor
out
lds
repz
call
pop
fsub
bt
test
xchg
outsb
sahf
fldt
xchg
adc
add
mov
fstl
lds
xchg
mov
adc
push
rolb
cld
xor
and
sti
or
out
cmpsb
ret
daa
inc
mov
mov
rcrl
outsl
jne
cld
out
fisubrl
push
gs
add
mov
mov
cmp
testl
pop
out
dec
scas
fwait
test
sub
mov
ljmp
push
enter
cmp
mov
vpsraw
jmp
xor
call
adc
sbb
jmp
sbb
test
fwait
dec
jo
xor
mov
mov
ret
xor
cmp
jae
push
adc
push
sbb
ret
mov
bound
pusha
and
pop
and
aaa
jmp
xor
mov
repz
je
add
data16
xchg
sahf
jo
stos
movsl
xor
idivl
jecxz
pop
lcall
andl
adc
cmp
ljmp
xchg
push
jne
scas
test
mov
icebp
lods
notb
mov
subl
mov
pop
fucomi
mov
pop
test
mov
std
xchg
push
dec
call
adc
fstpl
mov
xchg
sbb
dec
ss
or
in
mov
aaa
push
sti
jmp
push
push
out
xchg
pop
fisttps
mov
loope
mov
loopne
and
sub
stc
mov
dec
or
bnd
push
pop
lret
mov
aaa
stos
sub
add
pop
or
shl
ffreep
mov
push
data16
addr16
fldenv
or
mov
jo
lods
fmuls
dec
ficomps
jle
dec
cmc
test
mov
and
cmpsl
and
push
mov
sub
push
pop
sub
shrb
in
fs
imul
stc
cld
leave
aas
sub
xor
dec
jg
sub
pop
andb
iret
xchg
cs
xor
jns
xadd
jne
out
lds
mov
in
lret
mov
adc
jge
mov
jmp
idivb
faddl
aaa
loopne
pop
icebp
stc
adc
mov
test
pop
add
test
into
clc
jge
inc
add
mov
movsl
cli
ja
and
lea
push
cmp
dec
cmp
out
mov
bound
mov
nop
mov
add
ds
cltd
cld
test
jns
push
xchg
loope
das
popf
enter
jmp
lss
faddp
sarl
cmc
xchg
mov
adc
imul
into
adcl
adc
pop
add
jecxz
in
lods
jo
out
shlb
push
adc
loopne
mov
mov
mul
or
mov
adc
xlat
movsb
jmp
xchg
pop
mov
dec
scas
sbb
lahf
sub
iret
mov
sbb
sarb
cltd
push
aaa
add
cmp
fldt
jecxz
mov
test
les
jo
pop
lret
and
mov
cmp
sub
ret
test
jg
repz
pop
pop
cmpsl
pop
and
andb
rcll
stos
leave
pop
lcall
sub
ds
fmuls
cli
leave
add
in
pop
cmpsb
inc
dec
and
xchg
iret
xchg
ljmp
test
or
lret
bound
or
cmp
pushl
mov
jmp
xchg
jae
lock
or
hlt
pop
pop
inc
out
xor
iret
push
cwtl
and
ja
inc
mov
out
rol
jmp
or
xor
or
or
add
and
sti
pop
add
mov
or
loope
shl
dec
test
cmp
push
add
pop
je
sub
xor
xchg
mul
je
dec
jg
imul
movsb
dec
in
push
lea
aas
iret
movsl
sti
mov
jle
mov
orb
repnz
pop
push
daa
push
je
jle
repnz
sub
mov
aad
sub
ds
repnz
call
arpl
ja
push
dec
mov
jae
data16
push
dec
and
jle
mov
lods
pushf
pushf
pop
or
add
sub
jb
inc
ss
aas
into
xchg
int
mov
mov
call
in
jb
sti
popf
dec
clc
cmp
and
adc
inc
fiaddl
scas
sub
mov
jge
adc
ljmp
pop
xchg
jnp
hlt
pop
mov
outsb
adc
xor
lret
sub
dec
jl
mov
cld
in
push
mov
adc
lret
cmc
imul
pop
pop
and
ja
or
popa
push
outsb
repnz
xchg
mov
movb
cmpl
pushf
xor
int
push
or
fildll
push
je
mov
arpl
mov
insl
push
dec
fs
js
mov
inc
add
xor
cwtl
push
decb
push
repnz
loop
xchg
xchg
push
or
out
aam
nop
and
add
mov
cmp
cmc
mov
xor
push
adc
aas
inc
rclb
push
xchg
es
adc
sahf
xchg
jle
divl
push
mov
mov
pop
sahf
imul
aad
cmp
pusha
push
inc
or
push
pop
imul
mov
xorl
loop
subb
mov
mov
cmc
jmp
jb
repnz
fcoml
and
or
shll
xlat
aaa
popf
and
std
adc
call
xor
sbb
sub
push
xor
test
movsb
negl
dec
nop
and
xchg
pop
mov
arpl
mov
dec
sbb
push
in
negb
xor
stos
fsubr
push
cld
or
pop
dec
lods
xor
dec
test
or
or
and
andb
ret
jae
or
out
dec
mov
ljmp
push
pusha
cwtl
sbb
pop
mov
xor
shlb
cmp
cmpsb
insl
add
mov
rcr
dec
jp
or
sbb
out
inc
mov
pop
in
xchg
orb
add
fisttpll
mov
xorl
data16
xchg
mov
inc
mov
fmuls
movsb
xacquire
jp
into
dec
mov
loopne
or
dec
imul
fisttpll
and
push
push
stos
sbb
lret
std
cmc
call
lea
jo
mov
and
xor
or
test
lret
push
pop
les
aas
fimull
stc
or
jne
decb
mov
ja
and
push
jg
int3
bnd
mov
mov
inc
movsl
jo
mov
push
lret
mov
fdivrl
jmp
pop
sub
aam
out
jp
lds
dec
mov
or
xchg
xor
test
lods
pop
es
fcomp
in
clc
jmp
lds
sbb
incb
loopne
jb
repz
sub
pop
lds
cmpl
sub
lock
adc
and
jne
lds
ret
add
arpl
xchg
mov
cmp
mov
int3
loop
vpminsw
mulb
fisttps
invd
cltd
pmaddwd
sarb
bnd
jb
xchg
sub
movsb
push
aaa
lock
jg
xorl
sar
gs
not
lock
fistps
dec
lds
push
es
sub
add
repz
addr16
dec
andl
mov
call
outsb
xor
push
call
lcall
hlt
ret
xchg
nop
jnp
pushf
data16
pop
repnz
pop
xchg
lldt
add
jp
pop
pop
fisttpl
lahf
mov
jb
hlt
aas
fwait
xor
mov
pop
xchg
or
cld
push
ss
in
and
mov
mov
ds
jle
mov
int3
mov
ja
adc
mov
and
jle
lahf
or
out
daa
adc
sbb
or
mov
sar
mov
jno
in
ret
ds
sbb
bound
add
mov
nop
inc
nop
dec
outsl
enter
add
jo
sti
popf
add
out
pop
add
ficoms
jnp
pop
std
push
insl
mov
pop
add
lea
push
jle
push
push
cld
or
dec
or
insl
popf
lcall
rclb
sti
dec
out
std
repz
mov
repz
fwait
repz
or
in
das
xor
push
shrl
xchg
add
pusha
sbb
or
mov
xchg
repz
inc
out
lret
mov
fwait
and
jae
test
inc
push
loopne
xor
lock
adcl
pop
adc
xor
xor
mov
addr16
es
xchg
daa
outsl
jae
neg
pop
lcall
stos
or
leave
xchg
test
sahf
andb
dec
mov
dec
push
and
mov
inc
movsl
mov
cwtl
mov
mov
pop
cmpsb
subl
sub
imul
imul
push
and
negl
mov
daa
xor
xchg
jg
push
mov
xchg
mov
pop
jb
hlt
pop
loope
aam
jg
notl
mov
aam
imul
lcall
cmp
lds
sub
or
inc
outsl
add
movsb
js
cmp
out
sti
xchg
mov
leave
xor
push
jl
jp
cmpsl
cli
scas
mull
mov
std
sub
pop
dec
rorl
lods
push
pop
lea
fisubl
das
inc
mov
xor
mov
adc
mov
out
jbe
les
leave
jl
clc
inc
icebp
test
jl
test
mov
in
lret
jo
out
shll
cmp
cmc
test
push
ret
jnp
data16
push
or
shll
and
push
cmp
dec
pop
pop
sub
jecxz
xor
popf
call
jns
rolb
xchg
scas
mov
in
dec
leave
mov
cmp
movsl
stos
cmpsb
xchg
and
cmp
or
push
cltd
ss
pushf
sbb
push
or
push
cmp
inc
xchg
or
lret
mov
add
sbb
mov
pop
leave
out
sahf
xchg
sbb
movsl
mov
test
and
mov
fnop
xchg
dec
or
pop
hlt
push
dec
xchg
sbb
jbe
std
insl
mov
adc
fdivr
es
adc
in
pop
rorb
cmpsb
mov
int
xor
int3
xchg
cvtps2pi
inc
jg
sbb
pop
add
push
addr16
inc
dec
outsl
add
mov
aam
js
stos
cmp
lock
xchg
mov
pop
adc
inc
les
sub
test
adc
shlb
jge
mov
int3
mov
movl
ja
pop
not
inc
mov
dec
or
mov
int
clc
cmpsb
jae
ret
jb
aad
mov
in
or
push
lock
xchg
rcll
xor
jns
pextrw
or
inc
xchg
and
jl
jae
sub
fwait
out
popa
mov
mov
xchg
pop
fadd
push
insl
lods
cmp
fimuls
sub
sub
aas
sahf
jmp
dec
dec
mov
scas
xor
sbb
pop
fimull
arpl
inc
aad
inc
xchg
fmuls
andl
ret
ficoml
icebp
pusha
in
cmp
xor
or
lock
das
ds
cs
push
jno
and
cmp
aad
jge
sahf
stc
lea
mov
push
stc
cmpsl
jnp
jo
sbb
roll
ds
jp
mov
jne
stc
jle
jmp
jg
inc
ss
mov
dec
sub
fnstsw
jge
bound
lret
mov
pop
dec
xchg
mov
daa
and
mov
push
repz
cs
enter
jns
jp
add
inc
add
and
sub
loopne
aaa
mov
dec
cmpsl
xor
mov
xchg
inc
xchg
and
ss
jnp
xchg
fwait
daa
mov
movsb
mov
mov
out
mov
mov
fidivrl
pop
push
xor
adc
push
cmp
mov
xor
not
pop
jae
add
jmp
test
push
xor
fisttps
cmpsb
out
xchg
push
jp
mov
loope
sti
rclb
scas
fdivrs
popa
push
xlat
add
dec
jp
inc
lret
js
jp
ja
inc
sub
add
jo
adc
in
cmpsl
push
push
mov
stos
mov
aam
sub
jg
gs
mov
mov
or
pop
adc
xorb
fwait
sti
shrl
ds
xchg
cmpsl
ss
inc
sub
xchg
sti
xchg
imul
in
xor
in
sahf
sub
jbe
ja
jp
adc
xchg
inc
pop
lret
fs
and
mov
mov
cmp
cmp
xor
and
push
and
sub
pop
dec
mov
xor
adcb
push
mov
mov
push
jmp
adc
or
lret
lahf
sahf
push
popf
aas
xchg
popa
mov
xchg
call
mov
and
pop
sub
idivl
inc
bound
mov
imul
dec
or
jno
and
shl
xor
pop
push
daa
xor
dec
cli
sbb
pop
test
lods
addl
jp
ret
int
jecxz
ss
aaa
cltd
lock
ss
js
dec
insb
and
loopne
lods
fwait
pop
or
mov
in
adc
push
jae
inc
add
lahf
inc
movsb
ds
ljmp
dec
mov
push
repz
in
sbb
stos
pop
cmc
sub
into
push
cwtl
pop
iret
data16
and
jmp
jo
das
and
mov
push
and
fisubrl
in
loope
cs
psubd
or
push
repnz
or
test
xchg
and
in
into
sub
fwait
stos
xchg
dec
mov
or
or
xchg
shr
ret
dec
pop
jbe
sbb
and
mov
mov
nop
pop
cmp
push
lea
je
lock
lret
mov
lods
aaa
mov
mov
shrb
cmp
push
cmpsl
adcb
mov
push
sub
jo
sbb
adc
shlb
push
adc
dec
xchg
sbb
mov
insl
mov
pop
push
xchg
repz
push
in
pop
xchg
inc
fdivr
jl
lds
stos
subl
in
dec
push
jg
mov
out
mov
aaa
inc
insl
arpl
adc
or
movsl
and
aaa
test
jns
aas
push
xor
dec
enter
cmp
add
xchg
push
dec
cmp
pop
cmc
stc
cmpb
jecxz
sbb
je
push
int
mov
pop
inc
lahf
mov
mov
test
call
sbb
gs
fucomi
cmp
jge
ds
fwait
or
inc
aas
cld
ja
js
dec
xchg
xor
pop
pop
sbb
and
inc
rorb
sbb
mov
fidivrl
push
inc
cmpsb
add
xor
adc
xor
fdivp
clc
bound
xchg
shlb
test
out
add
sbb
pop
into
adc
out
cmp
push
dec
insl
mov
add
pop
and
adc
mov
xor
idivl
mov
imull
cmp
stc
aaa
push
stos
in
add
test
insl
mov
imul
jns
pop
dec
add
test
stos
cmp
dec
mov
and
xor
nop
in
mov
xchg
cmp
jg
in
stos
mov
outsl
aas
jg
call
in
in
jo
push
ficomps
mov
jl
push
add
outsl
daa
shr
xor
or
movmskps
dec
aam
cmp
inc
ret
jg
lea
add
jo
add
stos
es
ljmp
clc
fildl
or
lcall
cltd
cmc
pop
cmp
push
out
xchg
sahf
jp
mov
mov
adc
cltd
dec
or
rorb
frstor
enter
xor
sti
jmp
jg
sahf
outsb
mov
fldl
sub
jno
mov
mov
cs
imul
sub
jle
mov
or
add
ljmp
arpl
arpl
sti
xor
push
test
ja
push
shl
pop
sbb
mov
loopne
icebp
sub
xor
fsubl
inc
pop
mov
arpl
sub
mov
pop
add
mov
add
stc
xchg
mov
adc
or
mov
jo
dec
mov
mov
xchg
sbb
mov
ja
cmp
sbb
cltd
jnp
sbb
cmp
mov
mov
sub
test
mov
ret
test
fisttpl
iret
xchg
gs
or
cld
stos
leave
cmp
nop
fcomp
sub
cmpsb
loop
push
jl
cmp
aad
xlat
xchg
lock
push
lcall
das
outsb
ficompl
leave
es
jbe
insb
rcll
xor
cmp
aad
insb
inc
sbb
popa
sub
roll
jg
out
dec
xor
push
inc
sbb
cmpb
int3
add
xchg
lcall
out
cmp
jp
in
test
cs
aaa
pop
lods
dec
icebp
or
shld
jne
daa
inc
push
dec
push
shrl
push
clc
movsb
xor
clc
sbb
nop
fwait
jp
pusha
dec
ret
out
sub
ljmp
jns
dec
mov
sub
sbb
adc
push
inc
xchg
push
xchg
sbb
test
mov
and
fildll
js
push
xchg
xchg
sbb
test
stc
jp
es
push
test
mov
adc
xlat
out
cld
push
pop
mov
inc
dec
push
andl
pop
ja
roll
sub
push
push
fcoms
pop
push
lea
arpl
mov
fmul
jb
pop
and
fsts
lods
or
mov
pop
mov
or
inc
mov
testl
shrl
add
dec
mov
add
shlb
int3
adc
pop
add
es
loopne
sti
arpl
shll
repnz
scas
arpl
sbb
mov
scas
fmul
arpl
or
jae
cmp
mov
xchg
add
shl
cs
push
pop
ret
fnsave
mov
sub
roll
mov
push
sbb
add
jae
in
lret
stc
sarl
rcl
pop
mov
add
aaa
push
test
imul
and
xor
ret
cmp
dec
fimull
pop
ss
lret
ret
popa
pop
ljmp
rdtsc
add
sbb
lock
cld
orb
sub
mul
or
int3
into
pop
nop
test
pop
jo
mov
adc
mov
sahf
push
jp
and
mov
sti
or
cmp
and
xor
push
pusha
xchg
push
adc
mov
in
sbb
pop
cli
cmp
in
pusha
out
xchg
fdivl
inc
addb
add
lock
leave
or
test
fs
adc
add
orl
push
pusha
sar
mov
dec
mov
fadds
scas
cmp
iret
out
repz
insl
loope
sbb
push
hlt
imul
les
and
jmp
adc
add
or
sarb
loopne
int
into
cwtl
jae
mov
popa
and
mov
sub
scas
repz
in
jg
adcl
jae
pop
sbb
pusha
push
iret
adc
rcll
jge
sbb
fildl
sub
inc
jge
test
mov
inc
incl
fildll
sahf
scas
gs
fldcw
iret
nop
icebp
xchg
aad
rclb
and
dec
add
mov
pop
push
jle
or
out
pop
rorl
sub
in
cmpsl
fistpll
push
push
lahf
push
and
and
pusha
jno
call
cs
and
sub
dec
sub
mov
fisubrl
mov
pop
and
mov
cli
out
sub
cld
adc
mov
and
push
test
pop
or
aaa
pop
adc
sub
imul
insl
push
xor
cmp
sbb
xor
cld
scas
in
fs
fcmovnb
inc
fisttps
push
scas
js
scas
mov
xor
pop
push
lods
imul
cltd
cld
xor
fistpl
scas
js
movsl
jge
or
pop
dec
fwait
push
adc
movsl
mov
add
jne
add
mov
mov
mov
adc
xor
sbb
pusha
mov
cmp
insl
pushf
fsubrl
sbb
bound
and
jg
adc
shl
xor
mov
jno
push
cmc
sbb
jge
enter
jo
jmp
adc
lock
insl
cld
into
lahf
fiaddl
pop
dec
pop
and
mov
xor
mov
mov
push
sbb
or
aaa
jo
push
stc
push
icebp
xchg
int3
dec
repz
idivl
xor
push
stos
sub
jbe
mov
aaa
ret
cmpsl
cmc
aaa
mov
adc
es
mov
mov
fidivs
pusha
mov
idivl
and
repz
les
sbbb
pop
scas
or
xchg
pop
ja
and
mov
sbb
jnp
dec
pop
ret
in
sar
push
fdivrs
fsubl
ret
cmp
int3
push
adc
icebp
xor
dec
pushf
adc
cmp
nop
add
add
cmpsl
dec
hlt
adc
pushf
mov
push
loope
jge
lock
test
add
js
gs
jo
out
stos
inc
and
in
cld
insb
popa
push
fwait
mov
and
mov
inc
mov
imul
aaa
rorl
dec
pop
leave
inc
les
push
jg
mov
std
ds
add
into
scas
pop
sahf
pop
cltd
mov
fdivs
cmpb
push
fs
add
mov
pop
aad
jae
or
outsb
mov
rclb
lret
test
ret
cld
ds
push
adc
dec
lahf
dec
cmp
outsb
add
inc
sbb
push
arpl
movsb
into
pop
aad
data16
adc
inc
dec
dec
or
mov
dec
addr16
enter
cwtl
stc
ds
call
push
mov
mov
mov
push
pop
cmpsb
out
cmp
mov
mov
ficompl
iret
sbb
mov
xor
jg
and
xor
push
lods
pop
out
out
mov
push
std
inc
iret
or
loop
fyl2x
xlat
clc
fnsave
scas
ds
xlat
jl,pt
in
dec
idivl
mov
out
push
in
frndint
xor
orl
fnstcw
ret
and
jno
in
sub
xor
push
dec
and
addb
mov
lea
xchg
fisubrs
dec
mov
cmpsb
mov
adc
or
mov
shlb
xchg
mov
in
mov
cmp
aas
lock
cmc
sub
lds
movl
add
scas
pop
fwait
ljmp
pop
mov
push
daa
mov
fisubs
stos
lock
and
pop
stc
.byte
add
add
and
in
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
and
in
add
add
add
add
mov
add
addb
add
and
in
add
add
add
add
add
add
enter
add
add
loopne
add
and
in
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
and
in
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
and
in
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
and
in
add
add
add
add
mov
add
addb
add
and
in
add
add
add
add
add
add
addb
add
add
and
in
add
add
add
add
add
add
cwtl
add
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
and
in
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
and
in
add
add
add
add
add
add
fadds
add
add
add
cmp
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
clc
add
add
add
add
cmp
add
add
add
add
add
add
or
add
and
in
add
add
add
add
add
add
sbb
add
and
in
add
add
add
add
add
add
sub
add
and
in
add
add
add
add
add
add
cmp
add
and
in
add
add
add
add
add
add
dec
add
add
and
in
add
add
add
add
add
add
pop
add
add
and
in
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
and
in
add
add
add
add
or
add
add
add
cmp
add
add
add
add
or
add
add
add
cmp
add
add
add
add
or
add
add
add
cmp
add
add
add
add
or
add
add
add
cmp
add
add
add
add
or
add
add
add
and
in
add
add
add
add
or
add
add
add
and
in
add
add
add
add
or
add
add
add
and
in
add
add
add
add
or
add
add
add
and
in
add
add
add
add
or
add
push
add
add
add
and
in
add
add
add
add
or
add
push
add
add
add
and
in
add
add
add
add
or
add
push
add
add
add
and
in
add
add
add
add
or
add
push
add
add
add
and
in
add
add
add
add
or
add
add
add
add
and
in
add
add
add
add
or
add
add
add
add
and
in
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
push
push
push
add
add
in
add
add
add
je
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
test
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
insl
push
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
or
push
into
or
lcall
add
mov
or
out
xlat
nop
lahf
pushf
flds
movnti
and
test
and
jno
jecxz
orb
sbb
pusha
cmc
ret
std
or
xor
push
add
jb
dec
pop
mov
loop
cmpsl
jecxz
lods
inc
jl
aaa
stos
cwtl
test
push
cltd
add
cmp
int
jle
insl
lock
repz
fstps
nop
loopne
pop
mov
pop
add
subb
aaa
mov
fstl
ret
sti
adcb
push
xor
mov
jnp
je
icebp
jle
cmp
lea
fisubl
ret
xor
test
jmp
jle
adc
in
dec
dec
pavgb
sub
mov
mov
push
inc
cs
or
add
push
inc
sub
or
in
int
mov
fdivs
scas
pop
and
data16
xchg
inc
test
xor
mov
sarl
aam
push
loope
ret
pop
lock
jns
shll
cmp
fsubr
lea
loopne
mov
cmp
pop
lret
mov
cld
and
jecxz
pop
dec
cmp
fsubrp
int3
leave
xor
stos
fdivrl
add
leave
sub
jno
lods
add
cmovge
loopne
test
xchg
scas
and
jmp
ja
sub
sub
sbbb
xchg
std
pop
pop
adc
enter
push
cmp
ret
mov
inc
inc
mov
scas
stos
cmp
pop
mov
mov
mov
aaa
or
call
inc
push
rorb
or
imul
fmull
in
pop
mov
arpl
mov
loope
fnstcw
push
les
or
into
insb
inc
sbb
cmp
and
mov
jmp
mov
sbb
mov
pop
xchg
pop
js
out
hlt
ss
popf
gs
pop
movl
gs
push
dec
std
hlt
repnz
xchg
clc
mov
arpl
push
mov
sub
test
fwait
and
mov
imul
pop
sarb
adc
test
sbb
xor
or
mov
sbb
inc
lcall
mov
aam
inc
jae
ss
rorl
movsl
js
mov
pandn
loope
in
pop
or
fwait
loopne
mov
jp
fimull
xor
lcall
sahf
int3
adc
add
push
xchg
push
or
push
pop
push
xor
dec
mov
out
stc
rorb
les
xchg
cmp
xor
nop
lods
in
lock
dec
xor
cmc
push
and
leave
push
xchg
push
loope
and
jnp
out
adc
inc
je
out
outsl
pop
iret
pop
repnz
sub
lcall
push
movsb
mov
add
shrb
mov
ja
lods
xor
ret
pop
ret
in
out
adc
inc
loope
jg
std
jo
or
jmp
std
sar
lret
into
enter
sbb
outsl
cmp
add
daa
or
outsl
outsl
shlb
ret
inc
filds
sbb
pop
jnp
cld
add
lcall
or
cltd
inc
out
adc
xchg
jl
adc
stos
gs
jae
dec
shrl
adc
mov
ds
mov
rolb
sahf
dec
push
or
sub
add
jmp
in
frstor
test
sbb
inc
mov
mov
adc
sbb
les
inc
repnz
je
xor
lret
mov
les
je
mov
mov
sbb
leave
sub
sub
and
push
shrb
cmp
xchg
jae
mov
mov
xchg
xlat
aas
hlt
adc
mulb
test
and
push
neg
xchg
adc
mov
xor
sub
adc
nop
fwait
testl
mov
pop
cmp
dec
pop
mov
mov
scas
jno
iret
fldt
lods
push
add
push
pop
push
jb
inc
pop
and
mov
sbb
fcomps
fbstp
sbb
pop
adc
pushf
jo
xchg
inc
jge
popl
stc
mov
adc
mov
cwtl
stos
fcoms
int
pop
out
xchg
xlat
lahf
cmp
push
cmp
inc
stos
int
das
mov
lahf
jecxz
sub
add
imul
adc
xchg
das
mov
js
aas
xor
into
cmc
pop
push
lods
mov
je
push
test
jb
push
movsl
aas
daa
leave
mov
into
pop
mov
or
stos
mov
jg
outsb
aas
scas
addr16
xor
xlat
lea
dec
insl
jns
cli
jo
aas
ret
shrb
xchg
cltd
push
mov
lea
pop
int3
jbe
lahf
xchg
out
inc
lods
into
mov
and
push
fistl
scas
pusha
aad
jecxz
pop
adc
mov
dec
mov
test
mov
inc
jecxz
fcoms
jo
add
in
and
das
sbb
les
inc
aaa
sub
add
lods
cmpsb
sbb
movsb
inc
sub
dec
lock
lret
cmp
call
and
and
add
push
imul
push
mov
shlb
xor
and
add
push
pop
jo
pop
pop
pushf
mov
sarb
jbe
lods
arpl
cmpsb
frstor
mov
addl
dec
xchg
clc
jl
and
xchg
push
loopne
mov
lahf
push
pop
cltd
fs
xor
add
inc
into
xchg
add
arpl
je
pop
call
xchg
and
pop
xchg
sti
bswap
sub
cmp
mov
jl
int
aaa
pushf
divb
movsl
lret
fsts
jl
mov
xchg
and
xchg
jns
outsb
push
stos
inc
fidivrl
jp
push
jb
inc
fcoms
pop
add
xchg
int3
negb
sti
loop
clc
dec
dec
nop
ljmp
or
mov
pop
ret
arpl
lcall
popa
ss
pop
adc
enter
ja
popa
dec
push
or
pop
jg
inc
mov
lea
test
or
bnd
sub
or
lea
call
mov
stos
mov
sub
sbb
xor
shll
mov
ds
stos
mov
fdivrs
dec
jmp
popa
and
pop
xchg
sbb
jmp
pop
pop
out
gs
xchg
mov
ficompl
test
dec
sahf
dec
das
jo
mov
mov
cs
xor
xchg
aas
mov
lretw
iret
popf
inc
ja
pop
xor
iret
stc
fs
outsl
dec
sub
mov
adc
loop
or
pop
loop
shl
jmp
aad
lods
ss
xor
call
mov
sbb
cmpsb
cmp
and
dec
pop
push
imul
dec
mov
sbb
arpl
pop
popa
scas
adc
movsb
stc
sahf
shll
and
clc
mov
push
xor
jbe
int3
push
das
xchg
jge
nop
xchg
cmp
jo
adc
cmp
pop
jbe
push
mov
fstps
insl
bound
stos
ss
and
adc
clc
int3
adc
push
adc
mov
mov
mov
inc
ss
sub
xchg
add
jb
shrl
jo
imul
inc
jns
outsl
inc
sbb
mov
inc
mov
xor
sub
mov
jle
mov
sbb
mov
lods
pop
inc
mov
push
aam
xchg
add
mov
shll
xchg
shll
mov
daa
adc
inc
outsl
lret
cmpsb
cmpsb
sub
pop
fcmovu
adcb
enter
mov
outsb
leave
outsl
push
cmpsl
jbe
addl
pusha
mov
rcll
cmp
lock
negl
inc
and
jmp
jnp
pop
or
push
mov
push
mov
cmp
jmp
jl
pop
cs
lahf
cmp
jp
mov
icebp
je
inc
push
push
test
adcb
jb
sbb
lret
icebp
mov
dec
inc
add
es
in
mov
sub
mov
pusha
inc
stc
xchg
cmp
pop
in
lods
jns
sub
push
push
mov
popa
test
cli
test
dec
or
push
ss
nop
icebp
fdivl
aam
mov
mov
std
push
aam
dec
dec
bound
add
inc
fstpt
xor
cltd
aad
fcoml
negl
movsl
movsb
in
add
cmp
add
int3
fbld
sbb
adc
xor
dec
mov
push
int3
negb
inc
xchg
repnz
mov
idivb
mov
clc
popf
sub
int3
push
sbb
mov
sbb
in
cmp
subb
je
sub
loop
push
sarl
pushf
xlat
add
sbb
je
push
ficompl
xchg
faddl
adc
rcrl
test
dec
fdivrl
xor
adc
iret
and
jns
dec
inc
mov
or
dec
pushf
andb
arpl
cmp
clc
inc
xor
xchg
movsb
sub
jl
in
mov
enter
inc
loop
ss
mov
stos
cmc
xorb
je,pn
sbb
push
sahf
cmc
addr16
test
leave
xor
daa
out
aas
iret
fsts
clc
aaa
add
add
mov
cmp
adc
xor
lea
adc
stos
shl
cwtl
ja
loopne
in
popa
mov
xor
loope
jo
dec
jb
xor
pop
arpl
aad
popf
test
imul
lds
mov
push
cmpsl
mov
cmc
xor
and
cmpl
mov
xor
sbb
nop
fdivrs
adc
inc
rcr
xorb
mov
pop
push
sbb
xor
mov
aas
shrb
cmc
inc
sbb
bound
push
or
and
adc
lahf
mov
mov
mov
stos
inc
in
lea
xor
adc
out
hlt
shll
data16
push
fmul
cmpsb
xchg
sbb
xor
in
cmp
sbbb
lods
loop
call
subl
fstps
loope
shrl
jg
dec
ljmp
test
lea
adc
xorl
ljmp
ficomps
cmp
sub
or
push
xchg
divb
mov
push
lods
sti
sbb
xchg
mov
scas
ljmp
in
pop
ds
mov
lcall
sub
or
repz
cwtl
pop
mov
sti
dec
xor
jge
repnz
mov
rol
cmpsl
cmpsb
repz
cli
lock
xchg
dec
push
mov
shll
jbe
inc
int
je
fwait
mov
sbb
aam
in
shlb
cmpb
mov
push
push
xchg
aas
mov
dec
out
ret
aam
inc
or
sub
jmp
xchg
adc
dec
daa
or
sub
jmp
rorb
addr16
arpl
dec
cmp
inc
mov
leave
sti
mov
mov
jnp
push
push
cmp
mov
cmp
push
enter
or
mov
inc
sub
jg
cmp
enter
ret
inc
xor
pop
popf
testl
sub
pusha
sbbl
and
lods
psubq
sbb
and
add
pop
imul
mov
mov
add
popa
sub
inc
pop
jae,pt
jne
inc
push
dec
sub
mov
pop
jne
lret
dec
and
mov
adc
subb
test
cmpsl
arpl
or
andb
sub
mov
stos
mov
jae
das
xor
rorb
pusha
and
outsb
or
jnp
nop
cmpsb
loop
jo
dec
enter
loopne
jge
xchg
scas
fs
je
inc
pop
jo
push
xor
xchg
in
sahf
xchg
mov
sub
push
and
mov
imul
pop
leave
jbe
sbb
sbb
fcoml
ljmp
xchg
call
inc
out
and
lds
inc
xor
les
pop
add
push
stc
nop
loopne
ficompl
jb
push
mov
mov
push
push
ss
in
fdivl
lahf
mov
int3
lcall
out
aad
mov
push
cmpsl
xchg
imul
stos
sub
adc
movsl
mov
xor
and
mov
into
dec
mov
clc
and
inc
ret
sub
fs
jg
iret
cmp
cmpl
add
pop
lds
shlb
pushf
and
fsubrp
mov
mul
insb
ret
sbb
jmp
in
sub
insb
inc
jle
inc
dec
mov
and
jbe
cmp
inc
sbb
clc
cmp
loopne
scas
sbb
jns
icebp
sti
leave
cmp
pushf
aas
dec
imul
fadd
aad
dec
pushf
inc
adcl
das
pushf
xchg
inc
adc
in
adc
mov
jns
out
gs
sti
dec
or
or
test
cmp
and
daa
pop
pop
xchg
adcl
les
inc
mov
jno
sub
cli
sti
mov
add
jmp
or
ljmp
test
pop
sub
ds
lods
sub
or
jae
subl
pop
inc
lods
or
push
dec
mov
xchg
push
pop
stos
data16
cmp
push
mov
mov
mov
sub
lods
sti
out
incb
je
sbb
inc
jmp
pop
lret
cmpxchg
bound
notl
imul
ss
xchg
jecxz
ret
pop
idivl
xchg
std
lods
mov
xchg
outsl
fidivl
push
int
xlat
adc
dec
pop
js
lds
sbb
inc
leave
sbb
gs
pushf
lret
mov
ret
inc
and
sahf
mov
les
sbb
xchg
popa
out
jbe
shll
pop
dec
and
es
sti
xchg
loope
pop
test
push
loope
ljmp
lea
jmp
repnz
jbe
xchg
fistl
fstl
cmp
aad
jge
in
fdivrs
pop
inc
push
lods
sub
int
or
sahf
jae
adc
and
out
mov
inc
sub
js
jmp
mov
dec
sti
sbb
aad
pop
mov
xchg
and
je
fldenv
xchg
mov
or
xchg
fs
repz
mov
push
xor
div
cmp
inc
jg
dec
lret
cmpsl
daa
cmp
mov
ret
cmp
fidivs
jl
push
pop
insb
dec
bswap
sti
test
push
mov
pop
scas
in
add
cmp
or
pusha
dec
push
xchg
sbb
dec
arpl
je
dec
inc
sub
and
cltd
adc
xlat
cmovp
mov
idiv
mov
js
nop
das
mov
adc
adc
cs
adc
ret
sub
add
sbbb
adc
sbb
stos
xchg
cmp
dec
pop
sub
or
jb
jecxz
int3
enter
jl
mov
push
push
xor
insb
jmp
jbe
popa
xchg
call
dec
pop
pop
std
push
push
add
ss
push
dec
lea
sahf
lds
xchg
nop
push
dec
xchg
mov
push
jmp
pop
sbb
shlb
xor
push
xlat
or
xchg
ljmp
aad
add
shl
stos
push
pop
out
or
or
dec
sbbb
les
dec
std
and
inc
or
dec
jecxz
mov
or
cmp
xchg
test
in
push
insb
call
out
xchg
mov
dec
mov
sarb
xchg
ss
enter
xor
lret
inc
sbbl
stos
jle
pop
mov
cmp
xor
jno
lds
repz
mov
xchg
lea
in
xor
aad
xor
jecxz
jp
add
stos
data16
pushf
push
in
test
mov
mov
and
pop
out
sbb
inc
scas
andb
enter
into
bound
mov
ja
sub
ja
sub
out
xor
lods
inc
insb
rorb
stos
mov
leave
sti
sbb
xor
repnz
loop
push
cltd
dec
pushf
mov
repnz
mov
xchg
mov
push
sbb
movsl
loope
repz
jne
lret
movsb
rol
adc
cwtl
pop
js
xchg
and
dec
inc
mov
push
es
xchg
mov
or
xchg
inc
imul
cmp
daa
push
fdivrp
enter
repz
les
dec
mov
add
cmp
stc
push
or
icebp
pushf
clc
and
out
and
data16
test
sahf
add
ljmp
call
push
mov
jecxz
inc
les
cmp
sub
aam
or
mov
jge
mov
jg
inc
cmp
inc
les
jbe
jle
stc
loope
mov
dec
ja
pop
push
pop
jae
imul
fcmovnu
cmpsl
stc
jns
adc
stos
les
sbb
fstpl
out
imul
sbb
nop
pop
mov
cmpl
sub
outsw
mov
xchg
insb
xchg
into
mov
xchg
lret
test
stc
or
inc
inc
xor
dec
stos
mov
dec
lret
clc
adc
lods
lds
in
icebp
jne
negl
and
loopne
mov
mov
xor
adc
pop
jge
ljmp
push
push
mov
dec
pusha
imul
sbb
leave
mov
aad
cwtl
jns
mov
push
push
pop
cmpsb
and
cmpsl
jne
pop
jp
rcrb
pop
jb
jmp
cmp
push
sub
or
js
mov
imul
clc
test
incb
leave
add
sbb
xchg
mov
test
inc
mov
scas
jbe
imul
lods
or
add
test
pop
out
push
jp
push
sub
cmp
int3
push
addl
push
sbb
jo
xlat
push
jb
subb
jp
lea
push
adc
insb
push
jae
test
xchg
aaa
out
mov
das
arpl
push
lock
dec
jp
mov
xchg
jo
jge
imul
rol
cmpsl
sbb
mov
sbb
mov
mov
ror
ja
jmp
nop
sub
mov
outsb
jno
lahf
cwtl
and
iret
sbb
xchg
or
jne
jmp
sub
push
push
fldl
fistps
iret
cmpl
dec
push
fistps
repz
dec
or
imul
cmp
jmp
sub
orb
pop
test
pop
push
adc
fdivrl
cmp
cmp
lret
ret
pusha
add
pop
mov
jp
dec
inc
shll
adc
mov
test
mov
das
in
hlt
cmpsl
push
orl
pop
cs
xchg
jle
push
fdivs
mov
fstps
push
and
sbb
je
cmpsl
std
sbb
jb
and
xchg
aam
shl
lret
pop
or
sub
inc
and
jne
inc
inc
inc
mov
push
mov
jns
mov
ljmp
xchg
repnz
sub
jne
in
xchg
xchg
aad
and
mov
add
add
push
adc
dec
sub
cmpsb
or
pop
mov
out
cld
sahf
xor
xchg
mov
cmp
cmc
test
ret
mov
mov
je
and
pop
xor
cmpsl
mov
sub
fldt
add
xchg
mov
cld
xor
fcompl
enter
shlb
popf
fsubrs
test
push
push
push
aad
in
pusha
mov
dec
add
sub
test
loop
push
sub
sahf
mov
lret
add
arpl
shl
push
push
sbb
xchg
in
shlb
gs
inc
sub
in
cmp
mov
out
push
pop
lahf
je
and
stos
xchg
sti
jno
popf
aaa
in
lds
leave
xchg
insl
jo
or
or
and
pop
outsl
rorl
sub
loop
and
and
cltd
pop
and
and
xor
mov
dec
mov
pop
dec
mov
pop
outsb
loop
push
cmp
mov
outsb
jecxz
dec
cli
cs
xchg
xor
sbb
jb
ds
sarb
out
mov
jb
pop
adc
mov
push
iret
loopne
xor
jbe
fdivrl
or
dec
ds
cmp
mov
rcrl
arpl
je
sub
jb
mov
int
addr16
hlt
in
cmpsl
push
nop
dec
iret
outsb
int3
and
sub
push
loopne
pop
fidivl
jge
and
std
jp
in
mov
pusha
ds
xor
lret
adc
invd
push
sahf
test
push
rorb
and
mov
inc
push
jae
push
pusha
jne
inc
cmp
popf
lahf
flds
bnd
push
call
mov
movsb
push
jo
out
insb
jge
out
inc
js
loope
mov
xor
pusha
jno
xchg
dec
into
dec
jb
fs
jae
and
out
jle
rep
cli
dec
sub
cmp
aaa
aas
jnp
fsubrs
loope
push
js
xchg
pop
ljmp
xor
leave
je
mov
pop
lods
mov
shll
hlt
jge
lret
or
xchg
sbb
gs
dec
outsl
pop
adc
sti
aad
mov
sub
ja
ret
and
nop
fidivrs
pop
adc
cld
cmp
aam
pop
in
dec
cld
imul
loope
xor
sub
jmp
adc
icebp
sub
sub
push
sub
lahf
fnstsw
leave
jge
pusha
pop
aaa
inc
adc
mov
cmp
fnsave
daa
push
lods
push
in
pop
push
gs
add
std
xor
loop
dec
shrb
sub
lcall
xchg
mov
jns
inc
test
push
ficompl
das
and
dec
mov
sahf
iret
lods
movsb
shrb
das
dec
lahf
repz
inc
lock
mov
cmp
ds
inc
sbb
add
sti
dec
aam
int
add
xchg
bound
pmuludq
into
dec
inc
rorb
push
and
push
sub
sub
test
push
mov
dec
lods
das
mov
cli
enter
roll
arpl
cwtl
xchg
cmp
add
cmp
int3
sub
test
outsb
lds
push
cmp
xchg
addr16
cli
in
pop
ret
scas
jno
cli
push
cmp
cmpsb
adc
scas
mov
inc
ret
push
leave
adc
and
fs
sub
cltd
int
sahf
sub
mov
adc
ret
mov
cmp
pop
xchg
xchg
sar
xchg
xor
jnp
adc
cltd
lcall
sbb
mov
mov
and
mov
shlb
add
cltd
fwait
mov
push
mov
adc
xchg
in
cld
in
jecxz
bound
cmp
mov
in
gs
cmp
es
out
mov
inc
es
popa
or
loopne
int
dec
pop
xchg
enter
push
mov
xor
int
je
lret
sbb
inc
pushf
das
pop
jl
dec
fidivs
push
jo
loope
sbb
xchg
insl
xor
enter
xchg
mov
mov
imul
cld
push
adc
roll
xor
xchg
xor
scas
test
sbb
cmp
and
mov
jp
hlt
add
jmp
imul
sbb
loopne
lahf
scas
test
rcrb
or
add
int3
aam
jae
sub
cwtl
adc
lret
stos
dec
lds
mov
arpl
and
movl
push
xlat
gs
cmpsl
fcoml
adc
adc
mov
lret
mov
jb
inc
aam
mov
pop
jp
push
loop
xor
aas
pop
pop
mov
push
inc
pop
jg
push
add
jae
lret
sbb
bound
push
imul
shll
cmpsb
roll
lods
inc
and
cwtl
xor
cli
xchg
inc
out
cmp
mov
mov
mov
inc
das
pop
jmp
scas
pop
ja
cmp
lea
push
gs
pop
scas
mov
xor
sub
mov
pusha
push
pushf
jecxz
movsb
arpl
mov
jmp
mov
les
sub
push
dec
jo
test
cmpb
xchg
sbb
sbb
dec
scas
icebp
mov
popf
div
aam
subb
lea
cmp
popa
sub
push
dec
test
jns
aas
lds
gs
push
mov
out
jnp
sub
and
loope
cmp
mov
mov
inc
sti
jo
push
les
imul
and
pop
loope
iret
pushf
mov
mov
jge
loopne
in
andb
inc
fld
push
cli
mov
jecxz
or
push
ds
jo
dec
hlt
out
loope
xor
out
push
mov
sub
sbb
mov
mov
or
add
pop
xchg
push
xchg
cld
fadds
xchg
inc
fisubrs
inc
leave
out
ds
mov
pop
mov
std
push
add
push
movb
out
jne
fs
or
fsubs
popa
mov
pop
pop
lret
dec
test
ljmp
push
imul
jne
test
in
mov
or
outsb
nop
outsb
ljmp
inc
lahf
repz
dec
dec
fwait
es
test
incl
or
pop
sub
add
sbb
or
cmc
mov
sar
lahf
adc
push
cmpsl
stos
xor
lock
xor
repnz
arpl
xor
jne
mov
mov
cmp
dec
inc
shl
mov
insl
and
test
inc
or
jne
jns
call
shll
pop
push
push
or
push
iret
popfw
into
pop
or
lahf
xor
movsb
in
push
mov
rcl
inc
xchg
xor
mov
add
js
sbb
cmc
jae
cmpsb
rcr
xchg
sbb
lret
pop
movsb
sbb
clc
pop
dec
jbe
pushf
scas
mov
push
xor
push
sbb
fmul
or
jmp
cwtl
adcl
test
sub
repnz
xchg
ret
inc
ds
mov
cmc
xor
cmc
ror
xchg
ret
ds
xchg
xor
bound
cmc
sub
int3
imul
jns
andl
cmc
popa
xor
sub
cmpsl
faddl
gs
xchg
call
adc
hlt
shrl
xor
push
cmp
lods
pusha
xor
int3
lock
dec
mov
es
xor
and
in
mov
add
mov
inc
sti
idivb
add
cmp
xchg
addr16
push
lods
in
fs
pop
sub
rcll
mov
jmp
pop
xor
rorb
dec
or
and
insl
je
mov
into
nop
scas
pop
rolb
andl
mov
hlt
push
inc
fsubs
aaa
arpl
ljmp
xor
scas
arpl
add
cmp
mov
mov
add
xchg
lahf
pop
jmp
in
hlt
pusha
xchg
cmc
xchg
in
outsl
xorb
jle
enter
fs
or
gs
lods
xor
jp
insl
xor
test
push
mov
rcr
mov
add
mov
jns
xchg
add
enter
xor
cmp
or
inc
vcvtsd2ss
ds
push
bound
cltd
cmp
adc
xchg
mov
cmp
pop
and
jo
adc
shlb
and
addr16
dec
pop
sbb
mov
sbb
in
jo
les
push
mov
sub
lret
imul
pop
pop
mov
pushl
and
mov
sub
sbb
mov
jae
sub
test
into
xor
lods
imul
mov
pop
jl
test
adc
add
int3
xchg
push
jp
xor
call
jg
dec
push
mov
and
mov
cmp
insb
dec
notl
inc
lahf
push
aam
adc
cs
ljmp
mov
sub
or
add
sbb
xchg
lret
add
mov
inc
movsb
shlb
loope
fisubl
jle
cwtl
sahf
push
push
add
pop
push
xchg
sbb
into
or
jno
pop
mov
jmp
mov
or
jo
and
or
inc
fistpl
cli
and
scas
in
aam
xor
mov
test
jne
jge
pop
fs
idivb
outsl
fstp
dec
or
bound
cli
pop
das
xor
pop
push
scas
xchg
lahf
iret
fs
sub
mov
imul
pop
repz
xchg
push
call
mov
cmp
push
das
xor
mov
ret
fcmovnb
push
xchg
mov
jns
stc
les
imul
mov
adc
shlb
into
pop
iret
out
in
mov
cmp
pop
push
rcrb
out
jge
decl
sahf
mov
ljmp
in
jg
inc
jbe
adc
pop
mov
inc
call
xor
adc
jne
adc
adc
sub
sbb
rol
scas
int3
shll
fistl
sti
pusha
pop
adc
mov
push
sahf
mov
sbb
decl
subb
shlb
jnp
sub
lret
nop
pop
mov
push
test
gs
mov
lea
out
rcrb
jmp
pop
pusha
cmp
ja
or
lret
mov
call
lea
pusha
mov
inc
jl
dec
rorb
pop
cmpsl
jb
jns,pn
mov
popa
lods
inc
dec
dec
xchg
hlt
mov
mov
add
frstor
fmuls
pop
sbb
or
addr16
add
mov
insl
or
sub
fsubrl
dec
jl
jns
mov
stc
int3
pop
mov
int
push
mov
mov
sbb
or
loop
jno
jle
push
pop
jb
push
rolb
iret
ret
adc
inc
call
sub
dec
scas
pusha
or
cmpsb
lods
add
or
inc
dec
sbb
fucom
cltd
sub
cmp
shll
cmpb
cltd
fisubrs
mov
or
lret
cmp
push
sar
pminub
dec
shrl
ret
mov
loop
push
fmuls
sub
mov
ret
mov
cmpb
mov
fwait
or
add
fcmovnu
pop
es
add
int3
out
adc
scas
int3
sub
cmp
sub
frstor
inc
sbb
mov
ja
dec
inc
jbe
leave
cs
mov
xchg
push
repz
adc
sub
stos
int
addr16
jne
daa
adc
inc
mov
les
cmp
sbb
lock
add
inc
mov
mov
push
insb
mov
aam
xchg
fstps
pop
xor
paddd
test
xchg
incb
fsubs
stos
add
mov
pusha
dec
shlb
mov
push
daa
cld
jmp
gs
fstpt
leave
fwait
loope
and
les
ror
jae
pop
adc
popa
cmp
mov
push
inc
inc
add
fs
call
test
xchg
scas
in
std
push
fimull
xor
and
and
pop
adc
les
mov
addr16
repnz
mov
pop
js
into
adc
xor
mov
aad
jb
jb
sbb
stos
xor
inc
enter
add
sbb
jmp
test
sub
sub
adc
sub
fcmovnbe
push
js
testb
mov
xorl
shll
xchg
push
ret
movsb
push
dec
js
adc
xchg
and
dec
fsts
mov
cmp
inc
sbb
push
add
mov
jo
pushf
jp
test
sub
push
flds
rol
loope
cli
pop
xchg
insb
int3
jg
add
pop
mov
adc
mov
mov
ljmp
rcrl
xor
inc
add
adc
dec
leave
in
es
hlt
sahf
inc
stos
scas
xchg
mov
daa
leave
pop
aam
inc
cli
les
pusha
dec
dec
xlat
push
xor
cmp
lcall
push
mov
movsb
xchg
jp
and
pop
repz
sbb
ljmp
jp
push
lock
xchg
mov
pop
adc
pop
mov
pusha
repnz
pop
shlb
jno
sub
jno
push
subb
ljmp
mov
mov
push
dec
sub
pop
fidivrs
mov
rorl
sbb
dec
mov
xor
xor
pop
les
add
loop
cmp
cmp
dec
call
bnd
ljmp
sub
jmp
cmp
adc
push
push
sub
ja
add
cmp
dec
or
loope
ret
pop
xorl
xchg
jle
sbb
popf
mov
test
repz
rcll
xchg
stc
mov
ror
lret
imul
dec
pop
jge
das
inc
stos
adc
ret
cmp
int3
adc
add
fadds
xchg
loopne
pop
enter
sbb
sbb
idiv
push
mov
imulb
mov
in
int
aaa
pushf
jne
or
pop
mov
jge
cmp
roll
jl
iret
lock
push
jbe
or
sub
or
popa
sub
pop
xchg
sbb
adc
arpl
ljmp
stos
bound
stos
test
pop
dec
jg
pop
rorl
push
or
lcall
mov
pop
mov
inc
push
stc
ja
xchg
sbb
dec
jb
xchg
fisttpll
jge
push
aaa
stc
enter
subb
inc
cmpsb
lods
pop
daa
or
mov
mov
rcrb
fists
out
test
movsb
lret
fdivr
shl
ds
cmp
add
pushf
or
call
mov
mov
jl
pop
mov
mov
pusha
cmp
and
je
mov
int3
mov
insl
lods
out
xchg
cmc
in
jl
pop
pop
nop
pop
mov
xor
fs
lock
cmp
and
filds
icebp
stos
cld
pop
popf
lods
jae
stos
jbe
aam
inc
dec
or
sbb
incl
pop
lret
adc
shll
pop
add
and
stos
lret
adc
ret
stos
int3
sbb
cmp
repnz
sbb
adc
cwtl
mov
cmp
jl
push
add
xchg
out
inc
int
jle
sub
or
test
rcl
fisubl
mov
fwait
lds
stos
and
div
mov
aaa
push
adc
pop
dec
inc
push
lock
jp
outsb
jle
dec
xor
mov
cmc
inc
cmp
repz
jb
pop
mov
xchg
xchg
rolb
mov
outsl
out
lcall
mull
icebp
cld
andb
adc
cltd
arpl
push
ja
adc
dec
mov
popf
test
xlat
xchg
jnp
testl
xchg
in
add
pop
mov
jl
dec
rcr
push
inc
fwait
aad
mov
adc
xchg
mov
inc
adc
fdivrs
jg
xor
in
test
sbb
mov
rcl
fwait
enter
pop
insb
fmuls
sub
cmp
sub
push
and
mov
fcoms
loope
sahf
add
lock
add
loopne
bnd
jmp
pop
outsb
and
mov
jno
mov
mov
insb
sbb
andb
loop
fdivl
adc
loopne
push
lret
lret
cmp
cmc
test
pop
fwait
xor
xchg
mov
mov
adc
cmp
lcall
scas
push
shr
jmp
aad
loope
pushf
gs
testb
sti
xchg
xchg
mov
jns
jmp
mov
fisubs
xor
mov
clc
xor
ja
pop
sub
dec
pop
or
or
mov
ljmp
iret
sarl
jnp
push
jmp
xchg
pop
mov
push
mov
mov
popf
add
aaa
in
jnp
in
test
dec
popa
das
add
loopne
mov
inc
pop
jo
js
xorl
lods
mov
pop
dec
add
pop
jo
xchg
jge
stos
pop
and
aas
inc
jnp
lds
adc
outsl
xchg
xor
jb
cli
repz
jmp
add
mov
shrl
insb
je
test
push
jns
and
popa
and
add
leave
inc
or
ret
jns
pushf
add
frstor
lods
cmp
inc
fisubl
ds
sub
or
pop
mov
and
enter
loop
sub
or
dec
xorb
pop
in
inc
sbb
sub
xchg
pop
das
pop
mov
movsl
sahf
movsl
aas
dec
cmp
inc
xor
sub
pop
push
cld
jle
gs
mov
popf
call
and
sbb
lahf
lock
inc
shll
ret
les
and
dec
jo
dec
lahf
pop
mov
popa
push
cmpsl
rcrb
mov
ret
pop
jns
sbb
aad
in
xor
adc
int3
sbb
adc
mov
shlb
int
xchg
popa
push
lret
dec
lds
mov
rcrb
cld
sbb
mov
clc
jl
int3
lods
fs
jmp
xchg
and
fs
fsts
push
mov
lods
sub
push
loop
mov
fwait
movsl
jg
fmul
xlat
lods
pop
push
xchg
mov
aam
lods
push
mov
imul
cmc
mov
sub
mov
pop
jo
mov
jno
cld
lock
xchg
mov
sub
stos
mov
sub
inc
outsl
divl
cltd
int3
ljmp
in
sub
dec
pop
ds
shll
inc
arpl
scas
pusha
sub
sbb
int
mov
inc
sbb
lods
cmp
add
negb
mov
and
dec
jp
or
push
cmc
lods
pop
jl
mov
pop
insb
js
lods
mulb
sahf
or
push
jo
and
mov
out
cmp
addr16
push
dec
jecxz
daa
loop
cmp
aad
and
inc
xor
adc
scas
mov
push
ret
cltd
in
mov
sub
push
je
adc
xchg
mov
je
jno
dec
push
jnp
test
mov
cs
mov
add
imul
shrb
and
dec
pop
xor
es
fistpll
mov
dec
rep
add
pop
xor
cmp
fmul
mov
lcall
mov
pop
jmp
es
repnz
lret
cmp
xor
pop
out
in
movsl
xchg
jmp
scas
rorl
push
ja
dec
pop
sub
push
out
outsb
push
cmpsb
push
jl
int3
int
into
jl
int3
sbb
inc
sbb
das
add
pop
xchg
cmp
jno
lods
jp
stos
xor
lret
jmp
out
and
jae
data16
mov
sub
add
pop
icebp
dec
mov
rcr
sub
push
and
rcll
lock
mov
sbb
movsb
dec
lods
xor
jb
fildl
push
out
pop
adc
mov
div
aas
js
sar
add
popf
xchg
and
aaa
dec
lcall
ds
jo
cmp
outsb
push
lods
jmp
lea
jb
es
popa
xor
mov
jno
mov
or
mov
push
push
dec
out
xor
mov
dec
sub
aaa
outsl
cwtl
pushf
mov
loope
ficomps
mov
das
into
xchg
mov
cmp
jecxz
data16
outsl
jno
cmp
sbb
int
hlt
or
dec
fsubl
adc
ja
add
xchg
cmp
or
jg
cmp
mov
mov
cmpsb
sahf
gs
insl
fcoms
add
jno,pn
popa
xchg
push
push
pop
mov
sarl
push
mov
xor
jnp
dec
or
mov
cmpsb
xor
mov
in
xchg
xchg
mov
mov
jne
push
lret
sub
pop
test
dec
outsb
mov
jecxz
mov
mov
test
cmc
sbb
cmp
or
jmp
lods
dec
clc
mov
arpl
mov
dec
or
fndisi(8087
cmp
test
out
outsb
inc
pop
es
dec
or
call
out
pop
xor
and
mov
ret
in
out
fisubs
mov
add
sbb
sub
sub
popf
js
fwait
jmp
scas
mov
stos
addb
push
es
repz
cli
fldcw
fsubrp
je
hlt
enter
fwait
movsb
xchg
mov
or
hlt
add
mov
lods
mov
cmp
mov
cmpsb
arpl
enter
inc
call
inc
jns
xchg
fstp
xor
jmp
and
insb
aaa
call
jge
push
cmp
or
in
mov
jae
orb
jl
mov
and
pop
test
nop
addr16
jg
out
xchg
sahf
adc
sbb
jle
jno
xchg
jle
insl
xchg
enter
or
xchg
push
mov
into
xor
mull
mov
ss
hlt
fwait
out
adc
std
add
in
scas
lods
inc
push
imul
lods
jg
mov
add
cmp
add
out
push
in
ljmp
xchg
pop
fs
mov
ja
jg
call
sub
int3
aas
push
xor
enter
cmp
int3
ja
imul
xor
leave
cmc
pop
inc
jae
lahf
lods
scas
aas
cmp
jmp
fcmovb
dec
xchg
push
cli
cmc
pop
xchg
jp
cmc
mov
xchg
cld
push
insb
lret
dec
fwait
nop
cltd
rcr
sbbb
fcos
in
jle
adc
loop
cmc
and
test
adc
sbb
sub
xor
iret
out
sbb
bound
daa
int
sahf
movsl
pcmpeqw
add
pushf
xor
cmp
and
cmpsl
sub
jle
cmp
cli
cltd
sub
mov
lods
outsl
pop
dec
es
add
sub
inc
pop
in
jecxz
jge
pop
push
dec
push
bound
cmp
mov
clc
mov
insb
ficomps
test
movsl
in
fprem
test
jae
aas
sub
sub
mov
sbb
and
cltd
mov
enter
mov
mov
mov
iret
inc
lock
push
sti
iret
xchg
je
xchg
mov
shlb
sbb
or
bnd
xor
sbb
ret
out
push
mov
pusha
add
jmp
pop
out
adc
jbe
or
sbb
adc
outsl
mov
dec
add
lods
jb
push
je
lea
or
fistl
addb
sbb
insb
les
cmp
ficompl
jle
push
jne
cmpl
mov
aas
cmp
std
mov
fcomps
imul
jmp
push
add
lahf
stos
adc
push
xor
fcompl
mov
push
jno
xchg
inc
out
sub
mov
in
lods
popf
imul
pop
inc
push
aam
mov
inc
mov
pop
cltd
js
add
mov
mov
sub
sahf
lods
xchg
mov
mov
cmp
test
lock
dec
mov
loopne
jp
int
mov
mov
mov
mov
sahf
cmc
and
xchg
aam
xchg
fsubs
jle
hlt
and
into
sarl
dec
cmp
push
push
ficoml
aad
sbb
and
push
test
and
lea
bswap
clc
scas
iret
jle
xchg
add
cmpsb
push
and
lea
push
mov
stos
in
mov
sbb
int
lret
leave
hlt
cld
pop
out
dec
rolb
sub
icebp
frstor
pusha
sahf
xchg
sbb
cli
add
jg
dec
arpl
mov
lods
inc
xor
ja
cld
adc
pop
and
add
add
les
push
frstor
nop
movsb
xchg
inc
repz
cs
cs
push
bound
loop
insl
pop
xor
dec
movb
movsl
inc
lcall
jae
jmp
cs
sbb
jg
fidivrs
insl
push
pop
pop
dec
jnp
iret
leave
dec
ds
xor
jge
insb
and
jb
sub
in
andb
mov
inc
insb
aaa
xor
mov
bnd
sarl
adc
pop
dec
lahf
es
pusha
loop
out
mov
push
mov
js
push
xor
bound
inc
xlat
sti
jg
mov
les
or
mov
adc
push
mov
xor
inc
or
stc
scas
imul
vmovmskps
jg
sbb
mov
push
jl
insl
iret
data16
ds
push
scas
jle
sbb
pop
stos
sub
lret
shr
loopne
rep
addr16
cwtl
fiadds
negb
pop
dec
movsb
leave
or
test
xchg
pop
inc
cmp
imul
call
pushl
dec
cmp
pushf
imul
pop
idivb
stos
fdivs
or
aaa
stos
jp
test
jle
inc
in
xlat
or
inc
xor
sbb
mov
jle
push
push
pop
stos
rcr
cmp
add
xchg
add
btc
addb
inc
adc
sahf
idivb
call
and
xor
pop
add
cmp
test
dec
in
dec
clc
mov
mov
fldcw
sbb
into
xor
lods
or
xchg
inc
fadds
rclb
test
cmp
sub
push
movsb
fisubrs
push
xchg
adc
lahf
outsl
aaa
mov
xor
inc
mov
xchg
adc
mov
das
bnd
sbb
xchg
test
adc
xor
mov
adc
adc
mov
call
ret
mov
cmp
insl
ret
push
punpckhwd
inc
cwtl
imul
movsb
pop
hlt
scas
add
inc
cmpb
mov
inc
dec
and
js
shrb
hlt
xchg
sti
loop
out
fstpl
push
jl
or
adc
xchg
sub
pop
inc
jne
das
pop
nop
jne
or
pop
hlt
sbb
imul
jnp
or
push
in
out
mov
cmpsb
sahf
pop
addr16
push
sbb
lods
sub
mov
pop
gs
fisttpl
lea
fstps
xor
xor
adcl
int3
xchg
pop
shrl
sahf
ja
jmp
push
ret
push
testl
test
jle
mov
adc
push
cmp
xor
inc
sub
mov
adc
push
pop
subb
icebp
adc
sahf
jge
push
lret
pop
cmpsl
mov
mov
jne
dec
sub
outsb
cld
sub
mov
push
arpl
popf
xchg
test
dec
inc
sbb
cmc
jns
push
pop
fisubrl
push
lret
lods
sbb
mov
stos
cs
xor
int3
add
das
addl
nop
mov
les
cmpsl
popf
aad
scas
lds
and
or
leave
imull
jle
xchg
cli
adc
add
mov
iret
jmp
pop
lea
jnp
mov
pop
lods
punpckhdq
or
adc
sahf
pusha
xor
add
lea
jb
insb
jge
sub
xchg
xor
jle
mov
mov
inc
or
pop
cmp
mov
test
pop
mov
imul
mov
nop
in
cmp
test
clc
leave
sahf
call
cs
sti
loopne
cmp
pop
xchg
lods
into
xor
out
and
je
lods
xor
cwtl
into
jmp
imull
inc
and
cld
aaa
cli
out
xchg
push
stos
pushf
mov
insl
lea
dec
jle
or
cmpsl
mov
pop
jno
cmp
rcrl
repnz
in
cmc
inc
cmpsl
fsubrp
push
mov
jnp
pop
inc
xchg
lods
out
jne
inc
daa
push
ljmp
fnsave
cmpsl
fwait
lods
std
aam
jbe
dec
mov
sub
jbe
dec
push
jnp
mov
adc
add
mov
push
es
mov
push
adcl
addr16
in
out
sbb
inc
mov
lret
ja
pusha
sti
aas
sbb
enter
inc
push
sub
sub
sbb
inc
scas
cmp
mov
pop
cwtl
movsb
jecxz
inc
cmpsb
ror
jmp
sarl
push
outsl
push
cmp
add
push
arpl
ja
mov
bound
subb
mov
popa
leave
sbb
pop
stos
xchg
mov
lret
sar
lahf
pop
addr16
xor
jb
inc
in
in
movsl
out
add
ljmp
push
idiv
out
das
push
sarl
adc
cmp
loope
sub
xchg
shrb
sub
sub
imull
outsb
cmp
pop
stos
mov
lcall
outsb
ficompl
mov
cmp
or
addr16
nop
sub
or
iret
jge
mov
sbb
arpl
pop
xchg
mov
xchg
aas
sbb
inc
mov
arpl
cld
rcl
push
dec
sbb
and
push
and
ja
mov
jne
pop
push
pop
cmpsl
push
sub
in
sbb
arpl
stos
adc
xor
cmp
inc
stos
stos
mov
xchg
mov
lret
call
fucomip
mov
xor
and
xchg
push
dec
pop
subb
les
mov
xchg
outsb
filds
jns
out
popa
int
dec
xchg
pop
pop
mov
clc
jge
enter
les
add
cmpsb
psubsb
jne
std
jge
neg
imul
test
or
xorl
sbb
add
inc
push
and
test
xchg
dec
imul
xor
fcoml
xchg
or
and
mov
dec
clc
xor
push
fcoms
and
xor
mov
sarb
jae
out
es
mov
gs
in
lods
add
push
outsb
adc
lcall
mov
mov
loopne
cmc
insl
jns
das
xchg
cs
jbe
xchg
push
popa
cli
fwait
xchg
jae
jp
movsl
jns
int
mov
xchg
stc
test
adc
jmp
sahf
pop
push
gs
insb
hlt
pop
mov
scas
mov
ss
sub
push
adc
inc
push
in
je
or
aam
sub
sbb
sbb
dec
inc
or
fstpl
and
push
inc
out
pop
push
pop
dec
dec
popa
push
icebp
and
pop
sahf
shrl
pop
fmull
dec
adc
cmpsb
sub
shll
or
movsl
xchg
add
sahf
pop
xor
xorb
and
out
and
adc
xchg
dec
jle
xor
mov
mov
incl
addr16
mov
jge
lcall
adc
lahf
sti
inc
js
mov
pop
aas
lds
dec
sub
xlat
rol
mov
or
rcrb
aaa
call
jb
das
outsb
mov
stos
push
sub
push
loopne
jbe
das
icebp
inc
mov
pop
cmc
mov
sub
adc
mov
sbb
cld
data16
insl
push
frstor
adc
lds
mov
dec
xor
aam
out
dec
lret
das
mov
insl
sbb
mov
lahf
subb
jmp
aas
mov
ljmp
push
mov
sbb
loope
jl
push
xchg
fimull
pusha
lcall
mov
inc
or
mov
int
inc
sub
sbb
outsb
sub
jl
inc
xor
pop
lock
stos
hlt
or
mov
int3
sub
int3
rorb
cmp
inc
push
jmp
dec
ja
iret
mov
inc
sub
out
cld
add
xlat
out
enter
cmp
hlt
roll
ret
lahf
and
fbld
lods
dec
ss
lock
adc
cmp
xchg
pop
mov
gs
xor
bound
mov
xchg
cmp
lock
mov
push
inc
test
ljmp
and
or
mov
rorl
or
mov
ror
lcall
cmpsl
filds
out
sub
or
xchg
jmp
shrl
leave
loopne
and
mov
test
scas
and
in
dec
out
movsl
pop
idivl
push
mov
aam
push
es
dec
test
jnp
lret
or
push
leave
pop
push
adc
jge
aad
test
lds
sub
out
sar
cmp
popa
inc
or
rclb
add
inc
adc
pop
pop
notl
mov
inc
sub
fwait
in
loope
psubusw
cmp
cmp
outsl
push
sub
xchg
lock
mov
sub
sarb
lret
sahf
lods
out
dec
add
inc
lods
pop
pop
and
fistl
mov
ret
insb
cwtl
imul
lods
sbb
ja
lret
jp
push
mov
insb
jle
ret
mov
aaa
mov
lods
call
andl
jne
aam
dec
test
mov
cwtl
movsb
lea
mov
or
sbb
push
mov
lock
loopne
xor
mov
pop
pop
ficoms
imul
mov
fdivrs
dec
add
inc
push
mov
push
jg
jns
push
hlt
pop
int
test
fisubl
insl
jns
ss
jne
cli
adc
stos
push
and
out
pop
es
xchg
cmp
xchg
sarb
pop
scas
pop
outsl
scas
xchg
fcoms
or
repnz
nop
sub
std
mov
sbb
into
notl
mov
jns
sbb
xor
data16
lock
loop
loop
mov
and
mov
mov
popf
jns
andl
push
stos
pop
int
insb
cmp
cmpsb
jle
aaa
mov
push
lret
mov
jmp
cmp
cmp
push
popa
cmp
xor
dec
cmpsl
pop
cmp
sbb
adc
jb
jmp
pusha
xor
mov
adc
sub
scas
lahf
clc
aad
pop
mov
mov
shlb
aaa
or
inc
push
and
iret
imul
xchg
push
mov
out
lea
pusha
scas
addr16
and
or
mov
pop
fisubs
nop
adc
inc
jo
inc
fildl
inc
fistpll
mov
inc
shl
ret
sub
in
popa
mov
xor
dec
leave
xchg
mov
xchg
jp
pop
jmp
mov
dec
dec
data16
jl
mov
clc
inc
bound
inc
push
scas
mov
cmp
push
test
xchg
int
cmp
aas
or
xor
xchg
fwait
pusha
int
xchg
in
ds
les
in
mov
ret
xor
jp
mov
cmp
cmp
xlat
pushf
push
xchg
and
pop
shl
pop
arpl
jmp
cmpsl
pusha
mov
stc
cmp
sbb
aaa
shrl
dec
adc
mov
and
call
ds
pop
idivb
stos
cmpsb
stos
loope
xchg
rol
rorb
bound
pop
lea
inc
fldenv
loop
xor
mov
mov
xor
mov
mov
mov
xlat
cld
jns
gs
sbb
mov
fs
adc
sarb
cmpsb
xchg
adc
iret
inc
xchg
jmp
ja
out
out
push
xor
and
xor
mov
clc
lods
xchg
js
inc
xchg
insl
pop
inc
mov
mov
data16
push
dec
testl
jg
in
mulb
jne
js
push
xchg
stos
adc
enter
or
orl
cmp
hlt
jmp
mov
fisubrs
bound
sbb
mov
les
cmpb
pop
and
aaa
mov
sbb
out
dec
and
add
mov
mov
mov
clc
push
jmp
ficomps
test
ret
dec
dec
shlb
repz
ds
mov
pop
icebp
pop
add
lock
mov
fmuls
aaa
xorb
xor
mov
adc
push
xlat
es
fldt
frstor
mov
mov
inc
add
push
push
mov
mov
dec
sbb
dec
pop
in
js
ret
mov
aaa
in
sahf
ss
cld
xchg
ss
shlb
mov
add
outsb
push
add
int
ljmp
cmp
popf
daa
out
sahf
js
jle
cmp
in
pop
icebp
sbb
fistpl
dec
mov
jl
xorb
sub
in
sub
jge
push
lahf
sub
jg
inc
sub
lcall
aaa
inc
add
daa
icebp
and
xchg
mov
mov
leave
cs
bound
mov
je
popf
jecxz
mov
or
insb
fwait
pushf
in
iret
mov
jl
jb
sub
stc
jl
cwtl
pop
mov
mov
mov
sbb
push
xor
inc
lock
scas
roll
iret
pop
fcmovnu
repz
mov
mov
jmp
adc
add
sti
mov
out
movsl
fistpll
inc
sbb
or
jno
enter
pop
mov
xchg
pushf
jbe
call
insl
pop
lret
or
lods
jbe
lret
push
and
push
sbb
mov
mov
push
imul
cmp
rorb
add
in
xor
mov
std
adc
mov
inc
mov
in
or
pop
int
and
addr16
leave
jae
inc
mov
fsubl
sub
addr16
inc
sub
out
int
mov
add
push
cli
test
sub
inc
dec
shlb
jle
sub
lret
or
repnz
notb
ret
mov
sarb
lods
jle
test
repz
loope
sbb
mov
adc
inc
cmp
mov
sub
arpl
pop
das
movsl
repz
cmp
sahf
divb
sti
fs
mov
sbb
xchg
ljmp
ret
inc
mov
mov
addl
addb
lds
mov
arpl
pop
adc
xchg
adc
or
lods
movsl
scas
aas
out
cmpsl
sti
ds
mov
mov
and
subl
xor
ss
lods
lds
xor
jge
mov
sbb
ss
push
jge
sbb
push
testb
jbe
outsl
push
adc
jecxz
mov
jle
and
adc
addl
and
and
inc
mov
fwait
int
mov
dec
popa
push
and
rorl
cwtl
mov
fdivr
mov
fdivp
fs
imul
mov
fidivrl
js
add
mov
sar
inc
mov
mov
enter
lods
std
rolb
cmpsb
frstor
insb
or
out
xor
pop
loop
scas
inc
std
std
popa
clc
shrb
adc
mov
imul
shll
je
inc
xor
dec
add
ficomps
lret
icebp
push
aam
out
fmull
push
mov
je
sub
hlt
subb
loop
mov
fcomip
mov
js
adc
jnp
lcall
jmp
mov
xchg
pushf
inc
test
dec
imul
scas
xchg
out
lock
xor
sahf
gs
insl
aam
pop
mov
negb
pop
xor
mov
lahf
or
repnz
pop
arpl
sbb
mov
push
xor
pop
sbb
and
or
or
pop
cmpsb
mov
cmp
popa
addl
push
push
mov
es
dec
mov
out
sbb
rclb
rcrl
sti
push
push
add
ficomps
mov
aaa
jge
shrl
lods
popa
xor
push
push
push
add
sub
icebp
popa
iret
push
ficoml
pushaw
pop
push
xchg
das
out
outsl
jnp
call
or
inc
xchg
push
sti
add
mov
insl
jnp
mov
xchg
jecxz
or
fld
je
int3
popa
pop
or
ss
rclb
ret
jbe
je
mov
dec
xor
outsb
xchg
xchg
outsl
pushf
sbb
inc
or
mov
xlat
mov
and
and
or
aad
adc
cmp
mov
stos
adc
push
out
mov
popl
mov
pop
daa
test
sub
jo
cmp
mov
daa
data16
sbb
xchg
mov
sub
pushf
sub
sbb
hlt
mov
mov
inc
test
cld
jbe
arpl
or
leave
cmpsl
data16
xor
dec
daa
sbb
out
mov
lods
dec
xchg
arpl
jb
aad
pop
decl
addl
scas
aaa
faddl
add
sbb
sarb
sub
push
faddl
arpl
jb
rolb
call
xchg
daa
push
jp
inc
repnz
fdivs
and
mov
mov
fdivr
scas
lret
in
pushl
sti
push
mov
jne
sub
scas
or
lcall
and
cli
ret
xor
test
andb
or
pop
add
out
mov
sbb
inc
pop
or
mov
and
cmp
ljmp
dec
in
mull
push
imul
loop
pop
mov
test
and
popa
inc
push
loope
scas
ror
rcrl
inc
xor
push
icebp
pop
and
ror
ja
jae
pop
popf
gs
lcall
mov
pop
shl
mov
sbb
fbstp
mov
mov
jbe
pop
mov
aas
xchg
and
in
sbb
dec
or
arpl
cmc
outsb
inc
jle
nop
adc
add
mov
icebp
jmp
push
popa
pop
test
mov
and
aas
adc
pop
and
mov
adc
and
jp
aaa
mov
imul
fisubrs
scas
jnp
xchg
scas
iret
testb
fwait
or
cmp
or
xor
mov
cmp
xlat
dec
movsb
xchg
sbb
es
dec
cmc
and
jnp
in
cmp
xchg
inc
pushf
scas
clc
jg
dec
movsb
xor
jo
mov
lret
lret
cmp
xchg
lret
mov
push
in
lock
add
cmp
add
ss
mov
int3
out
or
sbb
ljmp
hlt
mov
mov
push
mov
enter
sbb
jmp
incl
mov
or
fwait
test
imul
aad
outsl
int3
mov
ret
mov
mov
mov
data16
data16
imul
inc
leave
cld
add
jo
and
scas
ret
dec
mov
jg
lock
sbb
negb
push
pop
sbb
push
push
and
inc
insl
inc
lahf
mov
fnstenv
fwait
sbb
ret
sub
mov
loop
inc
cs
adc
repz
mov
pop
mul
rclb
subb
sub
cmp
cmp
icebp
sub
xor
mov
addb
push
xchg
dec
pop
mov
lret
inc
mov
adc
pop
into
lods
mov
push
int
mov
mov
pop
mov
sub
test
xor
popa
rorl
std
cmovne
inc
loop
cmp
adc
fstl
sahf
loopne
inc
stos
jl
lock
xlat
mov
xchg
jae
cli
pop
iret
or
add
add
and
pusha
pop
inc
mov
subb
xor
lcall
imul
je
insl
shl
ds
adc
arpl
in
lcall
loop
dec
add
aaa
mov
jecxz
in
loopne
push
add
and
sub
in
out
ja
mov
push
dec
and
or
push
pushf
ret
int3
cs
jnp
cmp
sub
cmp
ficompl
and
jecxz
xor
je
lret
xlat
cmc
es
and
sbb
and
mov
movl
pop
dec
in
lea
sub
aaa
pop
test
mov
sub
mov
int3
mov
leave
xchg
dec
push
pop
xchg
push
push
sti
std
lahf
or
and
popa
das
mov
es
jae
xchg
adc
test
jb
popa
inc
lods
ds
in
loop
pushf
dec
sub
ror
mov
out
int3
adc
sbb
loop
into
sub
cmpsb
inc
pop
or
adc
ret
dec
sahf
sub
xchg
xor
cmp
sbb
adc
add
loope
lods
jp
push
call
aaa
pop
push
sub
movaps
mov
cmp
adc
and
push
std
shll
dec
inc
daa
dec
arpl
lock
fs
sbb
sbb
in
cmp
jp
and
inc
cmp
add
rorb
dec
jmp
clc
lods
insb
out
fiadds
nop
jo
in
shll
jp
sub
movsl
sub
ret
movsl
cli
cmp
xor
jbe
nop
stos
mov
add
dec
int
sbb
inc
and
sbb
scas
jecxz
ret
in
push
cmovne
iret
and
rcll
stos
out
push
mov
push
sbb
bound
add
fcompl
enter
xchg
sub
xor
xor
add
ret
pop
push
push
out
enter
push
arpl
pop
mov
pop
cmpsl
xor
xor
sub
addr16
aaa
rdmsr
cmp
setbe
jae
push
xor
xchg
pop
mov
movsb
cli
add
and
jo
imul
in
popa
push
jle
jns
data16
mov
dec
fst
push
jge
xlat
sbb
push
roll
adcl
push
pop
jl
inc
mov
insb
push
lahf
pop
test
daa
and
ret
sbb
stos
inc
popa
jnp
movsl
mov
sub
mov
loope
fdivrl
pop
mov
xchg
and
in
aad
or
jp
jg
test
dec
adc
push
cli
ljmp
popa
cmpsl
dec
aaa
lret
sbb
shrb
into
mov
cmp
nop
sbbl
int
sti
repnz
fldt
push
jb
fcmovu
clc
and
mov
jae
xor
lods
pusha
dec
stos
lds
xchg
rorb
or
or
loope
gs
hlt
add
mov
jle
shl
lcall
fcmovbe
aaa
ss
mov
and
xchg
push
pop
cmpb
xor
in
adc
loopne
std
mov
xor
arpl
mov
jne
cltd
ljmp
daa
dec
add
dec
jg
xor
and
xor
cs
in
lods
sub
cmp
mov
pop
cs
lret
dec
add
jne
xor
pop
mov
fsub
cmp
mov
push
test
push
notl
mov
mov
lods
xchg
sbb
sub
pop
addl
or
insb
fsubrl
pop
iret
test
gs
std
mov
fs
dec
jle
and
fisubs
icebp
push
push
js
push
cmpsb
mov
loope
dec
jecxz
mov
push
push
iret
mov
sbbl
inc
xchg
cmpsb
mov
imul
jmp
add
dec
arpl
ret
push
pop
mov
enter
rcl
mov
adc
xchg
cmp
xlat
in
scas
jmp
std
leave
push
add
lods
pop
jmp
insl
ja
imul
inc
incl
xlat
sti
and
mov
cli
mov
fdivl
push
adc
cmpsb
bound
mov
dec
mov
jb
add
mov
inc
push
mov
insl
in
fcmove
mov
lea
or
mov
fldcw
or
mov
jp
push
cmp
pop
sahf
hlt
sbb
fisttpl
or
mov
xor
fisttpll
mov
ss
push
xchg
pop
pop
add
leave
sbb
inc
inc
dec
rorl
add
fcompl
and
shll
cmp
sarl
faddp
dec
popa
lret
mov
hlt
mov
movsb
jbe
xor
pop
xchg
push
push
std
dec
test
outsl
ljmp
add
push
xlat
lods
pop
popa
xchg
popa
xor
test
mov
sbb
in
addr16
or
xor
or
cltd
pushf
add
jae
push
imul
lods
xchg
test
cwtl
jb
sub
dec
sub
rcll
push
add
cmpsb
jbe
mov
push
or
mov
jmp
iret
movsb
jge
leave
sbb
xchg
scas
aam
xchg
lcall
push
push
addr16
leave
or
fsts
popa
cmp
pusha
xor
mov
cmp
xor
and
cmp
sbb
je
pop
mov
push
movl
es
sti
push
and
sub
clc
jno
insl
sub
jo
jp
pop
and
dec
adc
adc
pusha
pop
xor
stc
jp
add
push
xchg
mov
inc
ljmp
pushf
push
xchg
mov
cs
pop
push
fidivrs
es
add
fmulp
add
mov
push
rorl
dec
push
das
dec
in
lods
aam
in
mov
js
cmpsb
je
sbb
mov
xor
jnp
das
pop
mov
fbstp
sub
cmpsb
fdivp
enter
pop
pop
cwtl
out
jecxz
xor
xor
pop
cwtl
mov
xor
rcrl
cmc
dec
in
push
dec
cwtl
into
ret
adc
xor
inc
or
or
and
les
xor
pop
lock
mov
les
ret
movsb
xlat
jl
xchg
dec
add
xorl
shr
mov
loopne
push
iret
jg
xlat
push
xchg
push
xchg
cli
jmp
outsl
aaa
add
imul
jns
lds
ret
mov
cmp
dec
pop
and
sahf
je
dec
ja
jae
ret
dec
leave
adc
adc
mov
inc
xchg
mov
cmc
imul
sbb
dec
rcrb
push
int3
pop
dec
inc
jno
je
adc
mov
negb
adc
incl
add
decl
dec
icebp
dec
pop
stc
out
push
in
ja
and
sub
clc
dec
sbb
fld
jge
xor
shll
mov
fcompl
mov
mov
cli
notl
inc
in
fld
or
mov
fstl
repnz
int
aad
rcrb
out
fcomps
and
jmp
lret
rorb
ds
xor
dec
rcrl
push
xchg
or
sub
adc
inc
lds
mov
mov
and
insb
shlb
fsubrl
mov
cs
mov
nop
out
gs
ret
pop
cmc
adc
popa
push
ljmp
cmp
push
aad
push
icebp
rcll
and
adc
es
bound
mov
mov
inc
shrl
cmpsl
icebp
test
mov
cmpsl
addr16
stos
adc
into
push
arpl
jecxz
mov
fnstcw
les
icebp
js
push
sub
mov
push
lock
iret
je
adc
imul
jle
mov
lcall
sti
scas
sub
fisttps
sbb
cmp
xor
fdivrs
cmp
nop
popa
ja
negb
push
inc
insb
test
mov
sub
clc
xchg
cmp
cmp
mov
je
out
mov
mov
mov
fucomi
xchg
out
add
fwait
mov
in
jg
add
mov
push
ljmp
iret
in
or
aaa
mov
pop
inc
dec
sbb
sti
cmpsb
push
int3
dec
pop
mov
sbb
mov
out
lods
sub
sbb
jb
mov
test
sub
loope
aam
movsb
dec
cli
stos
in
xchg
mov
pop
inc
xchg
test
pop
fcom
mov
push
adc
dec
inc
bound
cmc
nop
adc
icebp
sahf
dec
negb
xchg
and
mov
or
imul
and
dec
inc
lds
ljmp
ret
push
stos
mov
adc
xchg
xchg
dec
cli
jle
mov
lret
ljmp
test
lds
adc
mov
rcll
cs
or
into
sbb
push
mov
arpl
cld
std
sahf
int3
sahf
and
mov
mov
push
xlat
mov
inc
and
xor
fldcw
stc
fsubs
loopne
inc
push
mov
push
pop
pop
jns
push
push
rclb
sbb
repz
push
inc
data16
sbb
daa
mov
pop
out
cs
je
loope
or
ljmp
dec
pop
xor
jmp
ret
jp
jle
add
ljmp
add
pop
push
imul
fldcw
and
call
mov
cmp
push
flds
pop
out
inc
sbb
or
mov
mov
shrb
sbb
inc
adc
xchg
sti
push
cmp
out
out
loope
jmp
xchg
mov
fwait
mov
fsubrs
mov
test
out
cmpsl
nop
push
sarb
xchg
xchg
stos
stc
jae
test
inc
movsl
sub
neg
and
pop
ror
mov
mov
lock
pop
pop
inc
xor
jb
in
nop
sub
cld
push
cmpl
dec
pusha
pusha
mov
inc
inc
xchg
adc
iret
hlt
dec
xchg
inc
sahf
inc
sub
pop
jne
mov
and
xlat
sub
dec
rol
mov
cld
out
cmp
pop
sbb
movsl
pop
insl
cmpsl
cli
and
and
gs
jl
stos
ljmp
pop
mov
add
lret
ret
je
vpunpcklwd
rol
pop
sarl
and
imul
fwait
adc
popf
fwait
test
inc
insb
aad
xorb
cmp
dec
shlb
scas
push
ret
lods
mov
inc
dec
xchg
inc
pop
mov
or
hlt
xchg
jns
mov
loopne
loop
inc
or
ret
mov
sar
aas
mov
push
in
jns
cmp
lcall
aam
in
into
or
ds
aad
or
lcall
repnz
insb
cwtd
jne
stos
das
inc
jo
shlb
lds
and
xchg
pop
inc
int
jmp
faddl
hlt
fsubs
xchg
es
in
xor
imul
adc
cmp
into
stc
scas
sub
mov
add
repnz
shll
push
stos
lods
push
insb
loopne
xchg
jg
in
aas
inc
gs
jne
loop
out
push
rcl
mov
sarl
add
outsl
jmp
cli
aas
xor
fnstenv
mov
in
cmp
sub
jbe
call
pop
lahf
xchg
xor
hlt
mov
shll
arpl
insb
fs
and
sbb
out
jbe
iret
std
dec
repnz
pop
jbe
fcoml
mov
xor
mov
lock
lret
inc
mov
sub
mov
dec
decl
les
insb
je
inc
mov
pusha
ss
push
rcll
sbb
stc
les
dec
sub
jns
pop
test
push
sub
inc
pop
sub
jge
or
xchg
loope
loope
add
adc
lea
and
imul
jg
add
mov
sbb
jle
in
adc
push
in
push
ficompl
mov
adc
scas
mov
cmp
mov
pop
cmp
xor
idiv
hlt
xchg
into
pop
jle
mov
adc
fmulp
outsl
adc
xchg
xor
int3
dec
popf
stc
or
adc
lret
dec
jae
into
dec
out
push
jl
lret
lock
jb,pn
mov
mov
mov
push
daa
cltd
xor
out
in
and
sbb
loop
das
scas
idiv
es
lcall
dec
jmp
leave
sti
inc
mov
mov
sahf
outsb
stos
add
xchg
por
mov
and
add
push
shl
mov
scas
xor
out
cld
dec
inc
out
pushf
mov
pop
lcall
lock
add
frstor
jno
adc
and
int3
jae
cwtl
fdivl
add
adc
insl
inc
int
sar
hlt
mov
fxch
neg
cmpl
repz
push
aad
stc
dec
int3
fmull
test
andl
push
in
je
cmp
mov
xchg
mov
inc
hlt
pop
inc
add
lret
clc
jmp
pop
mov
mov
mov
cwtl
mov
mov
mov
lahf
mov
sub
stos
sti
int3
push
clc
mov
imul
pop
popl
xor
push
insb
test
fstpl
xor
xchg
cwtl
fistpl
in
out
mov
imul
mov
out
movsb
adc
sti
inc
jg
insb
out
inc
mov
add
insl
lret
sbb
mov
aad
loopne
cmp
sbb
scas
push
stc
imul
fwait
sbb
pushf
shrl
shlb
stc
jmp
push
or
enter
cmp
push
popl
pop
xchg
jmp
sbb
dec
stos
into
loope
fidivrl
xor
into
adc
std
push
iret
ret
roll
mov
xchg
popa
jg
mov
inc
cmp
lds
push
sbb
sbb
rorl
in
pop
mov
fcoml
xchg
cmp
imul
enter
xchg
adc
js
and
rcr
cmpsl
mov
mov
jl
pop
mov
sbbb
int
mov
dec
add
and
cmp
popa
xchg
std
mov
mov
or
sbb
imul
addr16
push
into
call
and
ja
add
shl
jbe
mov
outsl
inc
int
leave
mov
bound
sub
test
in
xchg
xlat
pop
adc
int3
push
xchg
pusha
adc
xor
add
xor
jp
mov
dec
push
xor
dec
testb
jg
push
ljmp
or
or
cmpsl
jb
or
daa
lock
aam
imul
push
bound
insl
adc
jae
mov
lods
les
fstps
sub
push
dec
sub
test
orb
sbb
jns
sbb
inc
sarb
push
jo
cmpsb
ja
not
stos
and
cmp
sti
iret
outsb
lock
popf
add
in
dec
mov
ret
xor
or
adc
out
cmc
inc
add
leave
xchg
in
movb
hlt
pop
pushf
cwtl
pusha
lea
add
cmpsb
pop
in
jns
cli
mov
cmp
lea
cmp
push
insb
jno
sub
xor
push
adc
push
cmp
and
pop
fsubp
push
jg
ret
or
mov
dec
ficomps
xchg
xor
cmp
lahf
pop
pop
xchg
stc
inc
imulb
pop
dec
dec
mov
lock
and
push
imul
lcall
push
cmp
xchg
insl
lock
aas
leave
pop
aas
cmpsb
sahf
in
mov
sbb
add
outsb
xchg
vcvtdq2ps
inc
adc
lea
xchg
lret
stc
insb
inc
pop
mov
mov
lods
and
stc
das
inc
mov
mov
flds
cmp
sub
lahf
push
test
sub
jns
iret
mov
cmc
fmul
xor
mov
cmp
std
bound
sub
sbb
ljmp
leave
loopne
xchg
out
pop
push
or
pusha
scas
xor
adc
movsl
and
out
adc
mov
xor
xchg
cwtl
xlat
sbb
andl
out
pop
mov
ds
cmp
dec
or
push
cwtl
xchg
fs
or
mov
mov
jo
popa
imul
gs
nop
push
push
icebp
cmp
mov
dec
popa
jl
out
cmpsb
pop
inc
sub
push
mov
mov
adc
popa
ja
sbb
xor
inc
std
ret
scas
cmp
xor
jns
sub
inc
sahf
into
in
and
and
repnz
imull
popf
out
rolb
xlat
inc
push
or
loopne
mov
jns
push
das
mov
imul
dec
jp
mov
loop
aam
push
mov
jl
jno
movsl
push
aad
shl
retw
clc
mov
aam
test
mov
shll
adc
das
cmp
dec
int
cmp
pop
lds
push
push
stc
jmp
pop
mov
jle
ret
gs
aas
popf
jecxz
mov
xchg
add
roll
jecxz
inc
mov
mov
jae
push
aas
add
mov
cwtl
sub
in
add
dec
and
mov
in
push
push
pop
rcl
jne
sub
and
rol
adc
sbb
mov
mov
jns
ror
mov
out
add
xor
lahf
aas
stc
xchg
lds
mov
mov
push
add
pop
call
in
xor
clc
aad
shll
int
push
or
or
cld
enter
xchg
mov
out
sbb
sub
call
and
inc
faddp
adc
jge
pop
jo
loop
mov
leave
rclb
push
adc
cld
daa
aaa
sahf
mulb
push
jmp
sbb
iret
out
fs
xor
out
jbe
push
das
leave
xlat
mov
push
mov
xorb
mov
cmpl
mov
pop
lock
dec
push
stos
gs
and
mov
dec
mov
inc
iret
rorb
pop
sarb
repz
mov
pop
cmp
popa
xor
sub
pop
addr16
test
xchg
ss
ud2
daa
imul
add
loop
sub
dec
loopne
adc
xorl
scas
adc
sbb
mov
cli
jecxz
push
mov
pop
push
dec
test
andb
inc
mov
dec
mov
and
pop
lods
push
or
mov
jg
ljmp
cmpsl
inc
les
pop
ja
mull
xor
mov
getsec
sbb
sbb
jecxz
fs
sub
int3
or
or
and
cmp
xchg
inc
loop
cltd
je
dec
ret
pop
mov
push
inc
xor
outsb
cmp
mov
imul
lret
xlat
xchg
stos
mov
bound
and
mov
jno
xchg
movsb
pop
in
pop
lds
mov
clc
ds
leave
mov
inc
xchg
xor
mov
xor
ja
mov
aas
jnp
call
pop
sbb
jle
loope
iret
fimull
xor
inc
test
push
xchg
adc
bound
add
and
add
not
mov
sbb
shl
and
push
jbe
push
fnstcw
inc
dec
or
test
mulb
sub
test
or
outsb
sub
fs
or
mov
lahf
jb
mov
mov
xor
emms
or
sub
jbe
aas
incl
fisubs
sub
cmpb
sti
push
roll
sahf
push
into
or
sbb
gs
add
sti
nopl
insb
pop
in
popf
insb
cmpsl
call
adc
cld
pop
imul
mov
push
mov
xor
sub
pop
push
cli
pop
rcl
cmp
jbe
out
cld
inc
lods
jne
out
xor
mov
mov
lret
ds
hlt
aad
adc
cli
and
and
sub
es
adc
mov
sarb
iret
jns
sbb
lock
xor
sbb
sti
ss
dec
ret
into
fwait
xor
loop
pop
rcrb
mov
or
es
loope
ret
out
lock
outsb
and
and
enter
movsl
cmp
div
pminsw
fs
or
pop
jb
lret
cmp
and
xchg
xchg
hlt
jp
pop
xlat
fabs
cmp
insb
popl
movsl
std
push
imul
dec
adc
shrb
pop
sub
or
clc
mov
xchg
daa
stos
call
mov
mov
hlt
icebp
dec
sarl
sbb
adc
movups
push
mov
add
xor
mov
dec
call
je
cli
out
cmovno
psadbw
cmpsl
sub
mov
mov
and
and
cmp
pop
and
adc
repz
icebp
std
jo
les
adcl
mov
je
mov
mov
add
popa
xchg
xor
pop
in
clc
pushf
cs
and
cmc
sahf
jmp
lahf
es
xchg
inc
cmc
jno
lcall
inc
xor
int3
jg
mov
inc
les
jle
mov
ror
adc
jnp
test
loope
sub
int
xor
notl
or
jne
subb
add
cmp
clc
cmp
xorb
int
mov
adc
add
add
mov
sbb
sub
inc
push
push
ds
mov
in
jg
pop
adc
xchg
sbb
and
xchg
inc
repz
or
fisttpll
dec
xor
add
sbb
into
pop
loop
add
pop
cs
sti
xchg
push
adc
or
sbb
ljmp
jbe,pn
clc
sub
xlat
out
or
ficompl
sub
pop
push
lea
icebp
xchg
lret
jae
mov
imul
xchg
fcmovnu
pusha
stc
test
cmp
ficoml
lods
mov
pop
pop
mov
repz
in
mov
adc
and
xchg
adc
sub
mov
stos
dec
push
gs
xchg
rorb
sub
cmpsl
in
rep
in
cwtl
or
addb
lahf
popa
test
jecxz
fldt
dec
push
mov
aad
xlat
xchg
adc
dec
push
jae
mov
mov
jne
xchg
sub
sub
rol
clc
movsl
mov
adc
out
aaa
push
xchg
lods
jp
lock
and
inc
cmp
stos
pushf
jbe
add
out
popa
cmp
cmp
fbstp
out
cld
adc
insl
outsl
adc
ja
mov
sbb
jmp
not
add
jp
xchg
sub
push
mov
jmp
pop
xchg
xor
pop
mov
sti
stos
inc
push
sub
sbb
mov
int
repnz
xchg
xor
enter
jae
push
ja
inc
subb
xchg
cmp
or
sub
lea
add
in
jns
inc
inc
cs
es
and
rorb
jo,pt
sarb
cs
push
filds
jno
adc
push
xchg
outsl
sub
push
jmp
pop
jl
xor
jle
or
bound
dec
xchg
inc
add
xchg
jg
js
dec
repnz
add
xlat
pop
jbe
arpl
jne
cs
xchg
jg
push
pop
cmp
movsb
cs
dec
mov
jge
xchg
or
icebp
pop
js
dec
mov
pop
addr16
adc
inc
dec
mov
mov
inc
inc
mov
je
popf
push
pop
mov
in
push
mov
arpl
mov
inc
loope
or
adc
sbb
push
mov
daa
bound
cltd
sbb
test
pop
nop
aas
jbe
int
popf
add
inc
jl
out
lea
xor
test
call
sub
push
sarb
sarb
mov
leave
outsl
dec
xor
jmp
sub
xchg
xchg
aas
std
xlat
sub
dec
push
xchg
jecxz
cli
mov
cmp
pop
or
mov
push
lds
jne
lock
gs
push
pop
and
aad
xchg
sarb
mov
call
adc
jecxz
jmp
cmp
aaa
ret
loope
fiadds
enter
lret
mov
lahf
mov
sbbb
push
fisttpll
add
xchg
cli
outsb
arpl
int
mov
inc
pop
addr16
dec
rolb
add
xchg
imul
clc
aas
jbe
dec
lds
fdivrp
lret
movsl
jg
pop
sub
xlat
gs
or
popf
and
fistps
dec
mov
and
outsl
lea
fwait
and
outsl
sti
rcll
mov
out
pop
fld
das
pop
addb
cmpb
outsb
dec
enter
and
mov
mov
fisubrs
push
cmp
jge
mov
cmpl
int
cmpl
cli
shrl
stos
lods
add
lods
mov
lock
arpl
adc
cmc
insb
enter
cltd
jge
pminub
pop
lods
iret
xor
ljmp
loope
xchg
loopne
lret
sub
hlt
sbb
jbe
es
jl
icebp
sar
scas
in
adc
stos
sub
fwait
repz
mov
imul
push
xchg
mov
icebp
pop
cltd
adc
fs
aaa
xchg
loop
pop
inc
fbld
inc
lock
or
pop
lret
xchg
sub
daa
mov
and
insb
add
adc
iret
loopne
adc
pop
nop
insl
lock
sahf
cmp
insl
int3
lea
or
sbb
iret
sub
cwtl
mov
leave
subb
mov
jp
mov
adc
imull
push
push
repnz
and
xchg
sbb
sub
pop
ljmp
or
inc
scas
mov
jno
cmc
hlt
push
icebp
into
bound
mov
jg
insb
enter
push
jg
cmp
mov
xlat
mov
sub
test
mov
cld
mov
cmpsl
sub
jo
add
add
add
add
jp
sub
shl
sub
mov
sbb
xchg
cmpb
jnp
mov
test
icebp
test
push
pop
mov
rcll
xor
dec
inc
stos
mov
sbbl
pushf
sub
or
loop
sub
cwtl
psubd
aas
jg
sbb
je
icebp
movsb
sbb
rcrl
xchg
mov
mov
stc
and
fyl2xp1
ss
xchg
subl
hlt
inc
aad
sub
imul
jno
jge
loope
ret
outsl
mov
in
ficompl
dec
push
fs
mov
js
push
leave
fisubrs
push
repnz
stos
fidivrs
push
sub
adc
pop
aam
aad
xor
fsts
int
shrl
pop
fsts
cwtl
cltd
and
push
mov
outsw
lock
pop
lret
pop
jmp
mov
inc
pop
add
icebp
movsb
mov
inc
sti
cld
scas
cmp
icebp
lret
pushf
jo
pop
and
push
mov
loop
push
cwtl
adc
scas
popf
jo
xchg
fnstsw
sbb
sbb
leave
pop
sub
xor
sub
das
jle
insl
cmp
dec
jb
xor
cmp
adc
mov
aaa
scas
push
repz
popf
sti
mov
ds
and
and
stos
add
and
pop
dec
nop
sub
or
pop
mov
sbbl
daa
push
lahf
pop
and
insl
jns
jl
push
xor
push
jecxz
sti
push
insl
cs
dec
in
add
sbb
mov
rorb
insl
call
mov
movsb
push
sbb
mov
out
lock
pop
aas
push
cmp
add
and
dec
fisubrl
dec
andb
cmp
adc
stos
out
and
js
dec
and
in
cli
dec
jb
sbbl
adc
rorb
cmp
mov
test
mov
shll
sub
cld
adcb
push
mov
add
add
int3
insb
fimull
out
push
test
dec
dec
cmpb
imul
pop
movsl
bound
dec
push
out
inc
or
mov
push
mov
xchg
jb
cmp
push
cmpsb
loopne
imul
in
pop
jp
cmp
xlat
fimull
sbb
movsb
push
ret
jae
ffree
sti
das
xchg
or
sub
rcrl
cmp
cli
mov
aam
aam
ret
jle
data16
dec
and
fdivs
inc
call
call
adc
lods
jns
push
decl
stos
sbb
cmp
shll
push
pushf
jp
pop
add
pop
add
cmp
popa
push
imul
mov
mov
mov
mov
adc
inc
call
lcall
or
mov
arpl
jle
addb
cmp
adc
jne
icebp
outsl
adc
in
xor
hlt
mov
out
adc
sub
arpl
dec
xchg
xchg
cmp
xchg
stc
sti
scas
adc
or
test
addr16
loope
adc
fisubl
or
ljmp
jbe
mov
cmp
push
imul
shrl
daa
and
scas
pop
ss
movsb
sti
std
xchg
fisubs
adc
iret
pop
push
sar
sbb
in
fnstenv
pop
push
xchg
push
mov
mov
mov
pusha
ret
ljmp
popa
test
xchg
nop
mov
pop
insb
dec
into
ds
call
and
dec
mov
mov
out
int3
and
xchg
xchg
jg
mov
imul
and
inc
out
ret
fists
lcall
iret
push
mov
pop
cmp
mov
mov
arpl
mov
xchg
ljmp
fs
stos
dec
inc
sbb
les
ficomps
mulb
jns
cld
or
and
iret
push
jnp
add
xchg
andl
test
gs
test
cmp
or
out
mov
and
scas
or
sbb
mov
subl
mov
dec
insl
xor
movl
test
pop
xor
sbb
push
cmpsb
dec
int3
notl
arpl
out
hlt
ds
outsl
mov
push
clc
sbb
add
test
aam
jmp
push
push
outsl
push
mov
stos
int3
cmpsl
xor
movsb
sub
mov
outsl
mov
xor
fcmovu
add
xchg
mov
mov
inc
popf
push
ret
insl
jb
cmp
mov
push
bound
lret
sbb
adc
and
xor
dec
repnz
pusha
cmpsb
mov
xchg
add
jb
lods
lods
lcall
mov
call
shlb
jl
mov
mov
add
cmc
mov
mov
int3
push
mov
js
add
rcr
movsb
jbe
and
loope
mov
cmp
test
cs
push
jp
gs
loope
mov
push
sarb
add
and
sbb
mov
adc
mov
es
dec
sbb
mov
pop
sbb
fucomip
dec
mov
cli
aam
arpl
jo
push
movsl
enter
gs
mov
outsb
stc
push
add
aad
int3
cmp
pop
aas
lahf
inc
lret
dec
lock
movl
lcall
hlt
pushf
ja
dec
stos
jecxz
dec
lret
mov
mov
and
in
je
ficoml
rcr
add
dec
push
xor
jb
inc
incb
outsb
inc
mov
pusha
call
and
sbb
dec
in
add
push
loopne
scas
push
mov
out
xchg
daa
inc
stos
fimull
andb
lea
enter
pop
les
lods
test
shll
cmp
dec
jle
or
mov
int3
lods
repnz
les
push
mov
stc
xchg
lea
dec
popa
dec
enter
inc
test
fisubs
cltd
andb
jbe
pop
rorb
pop
add
pop
icebp
or
arpl
out
jo
inc
xchg
fld
and
dec
push
pop
test
add
je
addl
int3
roll
shlb
sbb
inc
insl
dec
inc
test
sub
popa
or
xchg
jno
push
std
dec
mov
xchg
ljmp
mov
lds
xlat
adc
insb
repnz
call
cmpsb
or
and
jge
scas
mov
mov
nop
add
mov
xchg
pushf
iret
mov
xchg
pop
ret
jmp
mov
aad
lcall
mov
jbe
int
call
popa
mov
and
insl
push
rolb
pop
mov
xchg
pop
outsl
inc
jg
into
fmuls
or
imul
sahf
push
mov
and
or
xchg
push
inc
repz
cwtl
clc
mov
fsubs
stc
fsubl
mov
or
inc
inc
call
jae
fwait
pop
pop
cld
push
mov
dec
stc
aam
mov
stos
rolb
xchg
or
cmp
stos
int3
dec
or
dec
dec
std
xor
xchg
jnp
sbb
jne
clc
imul
std
int
fwait
dec
scas
insb
mov
cmp
cwtl
mov
fildl
xor
bound
outsb
sahf
fldcw
push
dec
add
cmp
pop
mov
ja
dec
xor
movl
ret
xchg
and
dec
out
dec
rclb
cmp
mov
cmpsl
push
mov
jns
stc
pop
mov
lock
mov
dec
iret
int
mov
mov
ret
loope
aas
imul
dec
add
outsb
push
jo
bswap
mov
int
adc
push
shlb
mov
xchg
icebp
xor
xchg
dec
mov
cmp
out
and
xor
stc
xor
cmp
xchg
call
sub
push
sti
in
or
aad
dec
xlat
push
inc
in
js
dec
sub
xchg
ss
xor
fnstsw
ljmp
test
lcall
push
xchg
mov
dec
in
sub
add
inc
fwait
mov
repnz
jbe
sub
mov
pop
and
imul
cmp
loop
sbb
and
call
mov
les
inc
cli
imul
mov
xor
scas
push
sub
cmc
or
lods
jge
in
loope
xchg
push
jae
dec
aas
inc
test
std
int3
push
mov
cmpb
loope
jne
addr16
mov
clc
out
stos
dec
icebp
mov
loope
mov
ljmp
sbb
and
daa
mov
push
adc
xchg
ds
push
lahf
jecxz
push
jp
es
ds
ret
repnz
ficompl
cmp
test
cmp
pop
or
adc
and
xor
push
add
sbb
push
push
jae
add
aad
mov
aas
rol
or
add
das
push
xchg
cmc
mull
out
outsl
out
shl
test
emms
pop
out
sbb
aaa
mov
sbb
rcrl
scas
pop
add
adcl
iret
mov
and
rol
ret
mov
mov
jmp
loopne
mov
movsb
les
inc
out
pop
loope
movsl
jb
stc
push
sbb
insb
negl
divb
pop
jge
cwtl
mov
dec
xchg
movsl
cmp
sarb
jno
stc
inc
sub
jnp
push
xchg
mov
mov
mov
mov
lea
stos
pop
shll
push
pop
sahf
ja
imul
ja
lock
mulb
sbb
movhps
stc
pop
inc
sbb
xor
add
idivl
xchg
inc
mov
les
sbb
sbb
mov
add
addr16
int3
test
mov
into
push
dec
cs
clc
sarl
pop
cmpsl
cmc
call
push
aad
jge
adc
adc
push
cmc
push
ljmp
pop
cs
aad
lret
adc
push
mov
in
jl
pop
lods
adc
roll
push
mov
stos
and
xor
jle
dec
fistpl
les
inc
mov
jb
sub
cmp
sbb
or
lods
sub
add
sbb
scas
cltd
sub
dec
xchg
testb
rcll
stos
xchg
adc
fistpl
aaa
and
adc
jl
jmp
cmp
sbbb
xor
dec
pop
dec
pusha
ret
daa
cld
fucomp
out
xor
mov
mov
shr
or
inc
cld
inc
sub
imul
push
andb
pop
jo
mov
pushf
lods
jns
push
scas
loop
or
fidivrs
adc
rcr
ret
jmp
jmp
es
cmpsl
push
xchg
push
or
dec
cmp
xchg
or
jmp
popl
aaa
test
and
cld
pushf
xor
stc
cld
aam
lcall
dec
sub
leave
subl
fisttpll
mov
jg
stos
cmp
cmpsb
lret
mov
in
iret
mov
mov
and
mov
enter
adc
popa
test
hlt
mov
mov
inc
cmp
lahf
out
add
add
mov
scas
int
mov
fiaddl
sbb
sub
ja
mov
cli
clc
adc
insb
int
stc
in
enter
mov
fldcw
fs
dec
jecxz
imul
mov
roll
dec
sub
fistpll
xor
push
enter
fisttpll
jmp
dec
out
jno
fisubrs
jmp
gs
icebp
js
xchg
mov
mov
fdivrs
popf
mov
sbb
rcr
inc
out
shr
pop
inc
fisubs
leave
mov
push
out
push
fmul
daa
adc
jp
jnp
frstor
pop
inc
adc
fildl
ja
cs
dec
jp
inc
std
popa
jo
jle,pt
or
mov
or
frstor
lret
lret
mov
cmp
mov
mov
mov
lea
xchg
xchg
push
test
int
cmpsb
cs
sbb
push
dec
sub
out
adcl
dec
push
in
mov
repnz
ds
test
pop
sbb
xor
add
mov
xor
sbb
dec
in
push
outsl
mov
dec
pop
arpl
xchg
scas
rolb
test
out
xlat
or
test
js
sub
loope
jge
sahf
mov
dec
push
test
fwait
mov
mov
push
jg
addr16
add
pop
lcall
imul
mov
jns
add
jns
jle
fadds
dec
add
out
mov
jmp
xor
lcall
push
mov
push
arpl
dec
cmp
cwtl
sub
test
jbe
addl
inc
cs
sbb
inc
mov
sub
push
jne
dec
test
push
outsl
add
fnstsw
test
test
dec
adc
mov
inc
mov
mov
loop
mov
mov
and
pop
push
or
xchg
aam
cmp
inc
jno
lock
ss
pop
popa
pop
mov
push
jns
aas
mov
js
mov
cs
rolb
jne
ret
dec
xchg
cmp
lret
mov
addb
dec
scas
inc
sbb
in
shl
mov
daa
pop
push
loope
gs
add
jl
pop
inc
and
orb
or
inc
fisubs
sub
fisubs
xor
and
jo
mov
jnp
or
xor
popf
jae
push
jb
fs
orb
xchg
jl
imul
add
je
adc
ret
outsb
jmp
testb
cmp
test
adc
adc
push
push
mov
into
jmp
pushf
bound
adc
inc
fsubl
and
lods
daa
and
push
push
sarb
das
adc
mov
xor
or
xchg
enter
mov
movsb
aad
lcall
repz
and
dec
fxch
jns
lods
faddl
fdivs
call
pop
imulb
pop
mov
mov
clc
pop
movsl
rcr
in
scas
or
dec
nop
lcall
dec
out
daa
dec
push
pop
jo
mov
mov
aam
push
sbb
push
mov
cmpsb
mov
repz
cmp
add
sbb
enter
arpl
test
les
xchg
lcall
push
test
mov
xor
ja
fcmovu
stos
pushf
jecxz
enter
jle
subl
scas
in
pop
js
dec
or
ret
imul
mov
xor
push
pop
dec
fdivp
inc
xchg
jecxz
cmp
push
mov
push
jmp
sub
or
adc
cmp
jb
push
mov
inc
sbb
das
jge
movsb
mov
or
pavgb
and
call
sbb
push
cmpsb
int
loop
lock
lret
int
jp
xchg
adc
xchg
jbe
lea
jb
stos
lahf
adc
pop
xor
xlat
or
and
pusha
imul
cwtl
mov
or
out
scas
hlt
jmp
test
aas
cs
insl
hlt
cwtl
pop
push
inc
lock
mov
xchg
jg
loop
pop
mov
fcomip
pushf
adc
pop
lods
lcall
mov
pop
pop
hlt
test
insb
mulb
shrl
ret
jge,pt
pop
cmp
or
imul
sub
cmp
pop
mov
xlat
call
mov
repz
mov
jne
das
push
xchg
dec
sbb
cltd
rclb
lcall
mov
jecxz
push
push
aam
inc
pop
mov
sbb
int3
not
push
in
es
subb
mov
fwait
mov
pop
adc
repnz
cltd
mov
test
sub
adc
push
dec
rclb
sahf
jne
mov
popa
mov
movsl
xchg
add
lock
mov
jge
lret
or
test
ficomps
gs
push
jne
jecxz
popf
test
enter
or
arpl
bound
popa
jbe
rolb
cmc
mov
sbb
jg
out
int
fisubl
mov
test
jno
add
mov
mov
lods
mov
addr16
sub
mov
push
lret
pop
in
sbb
adc
outsl
mov
das
testl
mov
test
int3
pop
std
pop
test
ljmp
and
mov
push
mov
or
mov
push
ror
sbbb
movsl
leave
out
in
push
push
in
jge
cmpl
pushf
mov
inc
mov
and
loopne
scas
xchg
mov
leave
sbb
mov
xchg
dec
push
cmc
in
pop
inc
jbe
test
js
inc
dec
enter
jnp
push
cmp
xchg
shr
rorl
in
loope
andl
repnz
enter
jge
jp
rorl
popf
add
loop
and
pop
add
cmp
dec
aaa
and
xor
inc
inc
xor
mov
insl
or
inc
test
xor
stos
xorl
sbb
sbb
inc
sbb
fdiv
mov
push
dec
outsb
rcll
inc
dec
cltd
push
cmp
xor
cmpb
stos
mov
ret
sub
cmp
out
mov
mov
xchg
or
addl
ret
adc
call
sbb
cmp
mov
repz
mov
adc
xor
sbb
fwait
into
clc
or
jb
es
popf
push
pushf
mov
call
repnz
fwait
je
bound
ljmp
lock
lock
dec
adc
cli
cltd
xchg
imul
movsb
movl
dec
sub
pop
stos
insb
mov
leave
add
jle
mov
or
in
sub
adc
sahf
test
test
mov
xchg
mov
mov
pop
inc
mov
stc
fldenv
mov
sbb
lcall
jb
popf
xchg
lcall
iret
xchg
mov
add
ljmp
push
xor
mov
fmul
mov
or
cmp
dec
imul
sbb
in
cmp
xchg
inc
jne
xor
jnp
movsb
xchg
inc
loop
int3
fwait
adc
mov
push
lds
movsb
call
test
loopne
fucomi
xchg
push
clc
xor
add
adc
sti
sub
and
push
xchg
stos
sbb
jbe
mov
inc
daa
jne
pop
cs
scas
add
xor
dec
fpatan
jg
imull
int
daa
aad
dec
imul
adcb
cmp
clc
xor
pop
enter
pop
ja
or
int3
mov
cmp
pop
cltd
je
ljmp
cmp
int
and
mov
fmuls
jae
stos
std
xchg
lock
divl
int3
jl
aas
dec
cmp
incb
aaa
sarl
imul
mov
pop
lret
cmpsb
aam
bound
loop
pop
scas
aad
xchg
filds
and
jmp
rcll
push
ja
fidivrs
dec
sub
cwtl
mov
ljmp
dec
pop
xor
and
nop
std
or
cwtl
mov
lea
dec
in
aad
test
daa
lods
mov
or
adc
inc
pop
mov
push
js
ja
es
aam
out
adc
aas
popa
pop
xlat
jae
cmp
mov
sti
xor
cmp
fisttps
push
les
mov
cmc
daa
inc
mov
out
push
jp
imul
fisttpl
sbb
shll
xchg
outsl
int
insb
cmp
sub
loop
xor
nop
push
mov
jp
jno
and
ret
or
jp
loopne
aad
ret
dec
sarb
stos
mov
aam
xchg
mov
out
add
pop
int
xor
adc
fsubl
inc
int3
or
pop
cmp
xor
in
cs
and
mov
mov
push
fwait
push
loope
jae
add
sub
subl
pop
lock
mov
fisttpl
mov
cmpsb
inc
icebp
rcrl
fnsave
dec
ret
movsl
cmpsl
push
lea
xchg
inc
shlb
out
dec
or
mov
xchg
sahf
push
cmp
rcrb
push
cld
push
das
test
xor
outsb
inc
pop
dec
mov
dec
mov
push
cld
movsl
test
or
cli
push
or
pop
sub
jle
icebp
fldcw
mov
pop
dec
push
arpl
movsl
mov
stos
mov
sbb
outsb
bsf
test
outsb
fwait
adcb
mov
sahf
hlt
aaa
jns
xchg
lcall
cli
mov
add
mov
jnp
lods
jbe
push
xchg
movzwl
shll
mov
cmp
mov
pushl
mov
sub
rol
imul
mov
movsb
xchg
dec
scas
inc
lcall
lcall
movl
pop
pop
sahf
pop
push
sbb
add
icebp
pusha
adc
add
jge
push
dec
cmp
leave
subl
cmpsb
sub
or
cmp
cmp
lcall
cmpsb
scas
stos
clc
ret
out
je
cmp
sbb
push
pop
cwtl
loope
inc
stos
ljmp
lcall
cmpsl
stos
clc
pop
pushf
cmpsl
mov
aas
adc
jo
inc
pop
mov
pop
std
jmp
mov
pop
and
daa
push
push
mov
test
xor
sub
outsl
cld
mov
lea
sahf
jb
add
fcompl
push
fists
stc
fidivl
inc
cmpsl
nop
mov
mov
pop
daa
sbb
aad
outsb
adc
push
aaa
test
cld
jg
cmp
add
test
arpl
xlat
das
fmulp
xchg
xchg
fnstsw
mov
pop
shll
push
mov
sbb
test
xor
cmpsl
cmp
push
cmp
mov
adc
mov
mov
hlt
std
lret
repz
push
push
adc
mov
ficomps
lahf
pop
fwait
lret
adcl
outsl
jmp
stos
push
ret
aaa
push
fyl2xp1
in
mov
and
cmc
xchg
sub
mov
push
mov
add
insb
icebp
pop
mov
lods
dec
add
es
sbb
test
pop
mov
pop
mov
fwait
repz
lds
divl
push
ret
mov
pop
sti
and
jge
push
inc
inc
jp
add
imull
pop
in
xor
push
add
and
xchg
dec
mov
mov
cmp
or
and
xchg
xchg
xor
xchg
or
jg
xchg
cli
jns
hlt
es
and
mov
pop
clc
into
bound
in
lcall
mov
jne
push
popf
push
push
or
xor
push
or
cmpsl
and
stos
mov
sbb
iret
sub
std
jae
addr16
cmp
jne
mov
push
test
lods
fadds
sbb
xor
add
loope
inc
sbb
cmp
cs
adc
clc
dec
aaa
enter
or
jo
dec
stos
lcall
jp
adc
test
sub
cmp
push
cmpsl
sub
ds
cmp
xchg
sub
js
popf
into
and
push
or
sub
mov
lea
loop
loopne
fs
mov
pop
stos
mov
push
pop
testb
fs
or
mov
inc
loope
mov
imul
sub
ljmp
mov
ja
jle
jl
fistpll
adc
cmc
xlat
pop
sub
repnz
xor
xchg
adc
adc
aam
adc
push
sbb
insb
mov
cmp
inc
xor
imul
outsl
fdivrl
mov
bound
and
movsb
xchg
test
cmp
jecxz
cmc
xchg
fcompl
dec
pusha
sbb
dec
jns
ficomps
xor
or
or
std
jmp
outsl
xchg
mov
mov
sti
cwtl
adc
imul
or
rcr
mov
xor
ret
loopne
cwtl
jnp
cli
push
ret
mov
fcom
dec
pop
mov
sahf
inc
adc
sub
mov
lret
cmp
lea
jg
xchg
fdivl
mov
dec
lcall
xchg
xchg
into
int3
push
sub
push
xor
notl
pop
inc
mov
push
mov
pop
fwait
push
lods
dec
insl
push
sbb
lcall
testl
sub
into
sbb
out
ja
pop
lds
js
lahf
test
das
xor
fdivr
pop
add
ja
loope
add
cmp
pop
cmp
inc
hlt
lock
xchg
dec
inc
push
inc
loopne
mov
rorl
scas
or
ret
dec
popa
not
hlt
es
lret
push
push
mov
fimull
scas
lock
cmpsl
shll
xchg
mov
es
les
dec
dec
lret
adc
orb
mov
pop
pushf
inc
inc
sub
inc
cmp
ret
dec
test
jp
and
das
sub
pushf
shl
xchg
pop
jo
inc
sub
push
lds
push
leave
push
test
xor
insb
adc
das
mov
test
ja
and
rcrl
call
test
or
aaa
clc
cwtl
call
dec
lods
jmp
mov
mov
aam
fstpl
add
ffreep
pop
loope
rcrb
xor
out
sbb
lahf
push
ret
inc
dec
dec
fimuls
adc
xor
dec
arpl
aaa
je
push
cmp
fidivrl
pop
mov
xor
mov
les
or
add
imul
mov
sbb
or
jle
xchg
xlat
xor
jg
adcl
add
fdiv
lcall
rorb
adc
sub
outsl
bound
lcall
jmp
dec
sub
dec
mov
mov
notl
inc
cltd
fidivl
adc
jecxz
or
mov
inc
cli
cmpsl
rolb
mull
push
fstpl
movsb
lea
lods
adc
adc
test
test
jg
lds
push
mull
test
nop
gs
inc
pop
lahf
frstor
cmp
in
xor
out
mov
or
mov
int
mov
test
in
nop
mov
lea
mov
je
jmp
add
inc
mov
cmp
shrb
or
xor
xchg
lret
jle
sarb
add
enter
out
adc
xor
pop
into
in
mov
cmp
dec
scas
cmp
mov
pop
cs
lret
mov
addr16
add
dec
cmp
jg
fidivrl
pop
pop
and
mov
mov
sbb
or
mov
adc
sub
dec
imul
xor
or
je
fimull
cwtl
mov
loope
jge
cltd
fidivs
mov
lcall
hlt
stos
rorl
sbb
loopne
idiv
dec
clc
push
inc
fs
out
push
add
push
repnz
sub
pusha
adc
das
lods
jmp
mov
xchg
in
mov
pop
sbb
xor
and
pop
ret
add
mov
push
mov
adc
rcrb
mov
adc
mov
sbb
loope
push
adc
scas
int3
xor
std
out
stos
or
lea
ljmp
stc
movsl
fists
xchg
inc
fmulp
mov
mov
bound
and
mov
fdivr
push
inc
or
or
lods
enter
mov
lahf
fistpl
adc
jnp
ja
add
in
bound
daa
incl
sbbb
inc
sbb
push
cltd
stos
jge
sub
or
push
inc
dec
mov
cmpsl
outsb
adc
xor
pop
les
xchg
xchg
gs
xor
sbb
outsl
cmc
jp
std
add
pop
out
pop
dec
clc
aaa
bound
mov
or
push
hlt
or
adc
aas
mov
pop
mov
std
in
cmp
and
xchg
pop
cld
cmpsl
xchg
pop
fisubs
add
pop
fstl
pop
dec
push
out
pop
cmpsl
mov
xchg
repnz
int
pop
fiaddl
ss
idivb
idivl
mov
dec
mov
orb
roll
into
push
add
push
dec
clc
add
fucom
clc
clc
mov
push
jl
mov
sub
or
out
rolb
int3
xchg
and
cmp
cmpl
shr
iret
shl
fs
movsb
cmpsl
mov
ss
and
xlat
cmc
call
stos
dec
xchg
dec
xchg
imul
push
mov
ss
or
aad
pop
incl
sbb
into
loop
sbb
inc
arpl
icebp
lds
mov
push
fs
scas
mov
sbb
jmp
iret
test
repz
push
push
push
mov
and
xlat
xchg
subl
dec
push
cmp
sbbb
flds
inc
mov
sub
xor
push
cmp
loop
sbb
sub
popf
iret
jno
or
mov
popa
xchg
sub
out
inc
and
sub
sti
or
lahf
sub
cmp
stos
ljmp
bound
sarb
cltd
xchg
jnp
cmpsb
in
and
rorb
or
or
jecxz
loope
inc
mov
test
ss
adc
mov
jne
fs
nop
js
sub
jae
push
dec
mov
mov
cmp
xchg
icebp
shrb
ret
xchg
sub
int
lret
dec
xchg
fdivs
xchg
push
xchg
icebp
dec
sbb
sbb
arpl
or
inc
inc
sub
test
or
mov
repz
inc
add
adc
mov
mov
or
in
outsl
jmp
lahf
lret
xchg
sbb
sbb
lods
pop
xor
pop
and
inc
pushf
fwait
pop
nop
test
push
push
or
pop
push
xchg
inc
xor
hlt
rclb
jb
dec
adc
add
inc
and
cmp
pop
inc
lods
xor
mov
cwtl
lds
add
arpl
inc
pop
xchg
pop
pop
ret
fdivp
cmpsb
and
lahf
push
fdivl
out
jle
push
or
adc
jnp
xchg
repz
push
add
pop
jmp
add
pop
mov
xchg
outsl
lahf
mov
daa
xor
in
jmp
and
cld
inc
das
push
lcall
outsl
loopne
push
lds
loop
stc
add
movsb
fs
imul
cli
mov
sub
fldl2t
outsl
test
sub
mov
into
dec
scas
fldl
push
mov
push
jo
imul
popf
outsl
sub
mov
enter
or
daa
xor
clc
jnp
sub
lret
shll
clc
dec
add
arpl
int3
jp
repnz
mov
bound
push
and
jmp
push
inc
scas
loop
scas
mov
inc
clc
push
mov
ret
cmp
fcmovu
gs
in
xchg
xor
pop
mov
adc
into
dec
sub
sub
xor
mov
mov
fldenv
add
adc
push
or
pop
stc
lret
fidivrl
mov
imul
mov
repnz
push
in
icebp
xor
cs
cli
stos
clc
xor
das
cmp
cmc
mov
fcomp
adc
add
movsl
je
dec
jo
cmpsl
cmpsb
inc
ja
arpl
popf
mov
adc
pop
fidivl
lcall
jl
mov
add
lret
pop
sub
test
pop
xor
mov
mov
cmpsb
xorl
js
test
dec
into
push
inc
dec
fldcw
dec
and
mov
sub
loop
movsb
pop
pop
aas
popa
add
ja
xor
std
pop
and
or
mov
jg
mov
loope
mov
sbb
loopne
sbb
mov
and
or
and
xlat
movsb
pusha
xor
inc
jle
pushf
push
nopl
or
mov
pop
cmp
cltd
sub
xor
cmpsb
xchg
sub
nop
out
mov
shlb
and
in
clc
add
arpl
adcb
scas
loope
mov
mov
xor
push
jns
pop
test
in
mov
mov
mov
punpckldq
lret
aaa
iret
ret
xorl
std
mov
sub
out
fdivp
loope
rorl
gs
les
jle
mov
and
cs
xlat
dec
test
and
pop
or
xlat
in
jne
mov
sub
fisttpl
scas
ret
es
xchg
imul
xchg
inc
imul
sarl
out
popa
xchg
test
mov
jecxz
add
jge
test
movsl
ret
test
push
sbb
fs
pop
pop
mov
repnz
pop
mov
mov
ss
adc
sti
cmp
mov
shll
in
pop
add
imul
sbb
loopne
repz
faddl
popa
movsl
pop
mov
ret
ficomps
mov
push
add
out
mov
mov
dec
shll
pop
mov
out
loope
cmp
sbb
xor
or
and
insb
addb
jnp
cld
cmp
in
mov
fidivrs
sub
mov
nop
jae
pushf
pop
mov
sbb
cwtl
xor
sahf
out
mov
and
addr16
cmp
jns
push
inc
mov
jp
aaa
push
or
xchg
jg
test
mov
jg
sub
je
xchg
xorb
xor
xchg
adc
or
mov
cltd
psubw
jbe
andl
stos
stos
pop
out
inc
mov
push
sub
sub
sub
jecxz
xor
xor
adc
mov
xor
std
or
mov
lods
loop
mov
push
dec
xor
das
aad
repz
and
sub
sbb
push
sarb
cmp
add
clc
idivb
inc
dec
push
nop
mov
cltd
xchg
and
adc
scas
or
add
add
adcb
mov
mov
iret
in
adc
jnp
mov
scas
jnp
dec
dec
sbb
mov
adc
repz
fsubrs
adc
jg
scas
and
pop
sub
outsb
cs
push
sti
aad
test
rorl
or
cwtl
out
xchg
mov
fwait
xor
loopne
jo
or
mov
sub
dec
addr16
add
insl
sbb
push
in
and
vcomisd
adc
lcall
leave
dec
clc
std
das
notb
and
addr16
cmp
cld
mov
sub
push
adc
adc
loop
xchg
icebp
lret
dec
xchg
ret
stc
lcall
cmp
mov
mov
rcrl
and
test
mov
loopne
scas
push
pop
jo
enter
cmc
int3
add
jg
mov
mov
push
imul
push
fwait
mov
adc
pop
and
sub
cmpsl
icebp
cs
psubusw
add
inc
mov
imull
imul
ljmp
call
xchg
lret
cwtl
or
add
jg
pop
popa
lcall
rcll
mov
sbb
cmpsl
shll
inc
shll
add
test
es
dec
sub
scas
imul
ljmp
cmpsb
inc
jmp
mov
cltd
xchg
add
pmaxsw
cltd
fidivrs
arpl
inc
pop
je
shll
arpl
push
jnp
scas
add
push
cmpsl
insb
ljmp
sub
xor
not
xchg
aaa
shl
jnp
test
or
push
ja
jbe
and
into
aad
and
mov
jae
jb
ss
pop
push
jmp
in
jo
add
daa
or
push
out
jmp
sbb
xchg
cmp
in
inc
cmp
xorl
pop
pushf
xor
push
xor
mov
cmp
sub
and
enter
inc
daa
fistps
mov
fmull
push
inc
jg
add
imul
mov
jne
enter
pusha
or
mov
sarb
xchg
sbb
pop
sar
fcom
pop
cmp
and
outsb
cmp
bound
idivl
imul
ja
push
lock
daa
sub
xchg
adc
mov
cmc
push
pop
insl
adc
loope
adc
dec
mov
dec
sbb
pushf
outsl
inc
hlt
mov
push
xor
test
pop
xchg
inc
inc
cmc
ret
stos
xchg
jae
push
or
cld
jae
ret
cmp
out
jae
lds
add
or
add
ret
out
pop
xchg
or
and
mov
sbb
loopne
xlat
cmc
lret
mov
push
movsl
out
push
outsb
insl
jnp
shll
out
arpl
xchg
ret
sub
cmp
inc
ja
jmp
test
hlt
and
sbb
sbb
in
adc
stos
mov
jnp
push
mov
sti
in
mov
inc
xchg
jge
xchg
cmp
xor
loopne
inc
or
jno
and
jbe
ss
and
xor
mov
js
sahf
dec
or
ror
inc
imul
mov
fdivrl
nop
mov
pop
mov
lahf
jns
arpl
sti
cwtl
jb
jbe
rcrl
xor
std
out
cmp
scas
dec
or
arpl
sbb
aam
inc
jecxz
in
push
sti
pminsw
sub
or
xor
shll
movsb
test
mov
pusha
xchg
pop
nop
out
mov
ljmp
xor
fcmovbe
call
mov
cmpsb
adc
loope
and
add
pop
adc
je
adc
dec
scas
push
mov
stos
mov
mov
sar
iret
adc
fistps
outsb
test
shll
xor
ja
mov
mov
int3
cmpsl
inc
mov
cmpl
or
jb
mov
shlb
mov
lods
pushl
mov
push
iret
xor
xor
frstor
add
fdivrp
cmpsb
dec
das
adc
data16
fsubp
push
fnstsw
cwtl
jns
nop
call
out
xor
daa
mov
mov
jg
stc
loope
xlat
jmp
inc
push
jecxz
mov
mov
adc
xchg
fdivp
mov
jp
stos
mov
or
jb
sbb
test
adc
xchg
mov
daa
pop
xchg
mov
adc
add
fstl
xchg
sbb
cs
repnz
aad
or
or
fisubs
dec
sub
jle
mov
mov
ss
fsubrs
xor
into
enter
inc
inc
aaa
mov
push
mov
xchg
pushf
testl
add
sar
shlb
xor
cmc
pusha
insl
lock
stc
out
mov
or
and
ja
or
ljmp
mov
cld
add
cmp
pop
gs
jp
xlat
inc
mov
mov
fldcw
dec
xchg
leave
mov
push
jne
cwtl
adc
sub
cmc
cmp
outsb
cwtl
imul
and
jo
inc
lea
pusha
xchg
add
mov
mov
or
or
and
mov
pop
ret
je
fldpi
cmc
cmp
xor
lock
inc
pop
mov
push
cltd
mov
inc
push
push
hlt
test
or
jo
pop
dec
lods
and
mov
pop
ljmp
test
pop
adc
fldl
out
sub
sbb
pop
lock
adc
pop
sti
adc
mov
sub
xor
pushf
push
pop
mov
clc
stc
push
cmc
push
je
in
inc
xchg
int
xchg
aad
jnp
iret
or
xchg
call
pop
mov
jmp
fdivs
rorl
jl
mov
jmp
lods
cmp
sbb
leave
jp
pushf
push
xor
mov
add
std
iret
rcrl
cli
je
fiaddl
iret
repnz
negl
lods
sarb
pusha
push
xchg
inc
jle
js
mov
adc
cmpsl
movsl
stc
cmc
inc
int3
in
loop
inc
push
movsb
inc
mov
dec
fldenv
dec
fisttps
into
mov
or
incl
add
sahf
sbb
inc
stos
popf
scas
push
mov
lahf
sti
daa
mov
fs
mov
insb
enter
fcomip
pop
inc
mov
test
cltd
inc
or
arpl
rcrb
clc
fadds
test
pop
adc
mov
adc
filds
dec
lea
xlat
ljmp
or
shll
out
enter
inc
sbb
out
pop
fldenv
add
movsb
jl
xor
fdivs
js
in
fsub
movsb
pop
inc
jge
or
adc
cli
xor
mov
stos
or
sar
dec
push
int
mov
arpl
dec
outsb
call
ret
xchg
dec
xor
loope
mov
mov
int3
adc
addr16
cmp
xor
cmp
sahf
xor
jae
dec
sbb
lock
sub
and
nop
xchg
sub
mov
adc
jge
insb
mov
sbb
sbbb
sbb
aas
mov
inc
sbb
or
pop
mov
pop
pop
inc
jae
rorl
ficompl
add
test
sbb
cwtl
inc
add
adc
inc
push
push
jbe
js
lea
and
dec
adc
mov
xor
outsl
bnd
int
lcall
fidivrl
xor
int
xchg
dec
xor
mov
mov
xchg
mov
xchg
sar
stos
cld
inc
pop
push
clc
lock
or
imul
dec
stos
out
xlat
shrb
or
in
in
popa
pop
aaa
pop
pop
mov
and
xor
jl
pop
lret
dec
lea
cmp
das
lret
mov
idivl
xchg
jns
shll
jge
lahf
xor
pusha
in
and
divl
jns
call
loope
push
in
in
nop
in
aad
pop
sbb
jo
jmp
daa
mov
shl
bound
pop
mov
mov
sub
hlt
dec
subb
lea
or
clc
lahf
mov
xor
add
gs
ret
xchg
or
lods
xor
scas
ror
push
leave
pop
xchg
xor
arpl
outsb
dec
jg
aas
out
les
inc
movsb
sub
mov
xchg
mov
mov
mov
push
dec
arpl
test
std
adc
int3
mov
cmc
xchg
ret
add
adc
or
mov
xchg
into
push
into
push
mov
les
hlt
pop
and
das
dec
or
or
test
add
adcb
mov
push
mov
mov
enter
sarb
jns
jge
addb
nop
insb
sbb
jg
shrl
das
xchg
je
cmpsb
or
mov
pop
addb
fdivrl
mov
ljmp
scas
push
or
add
ljmp
mov
in
push
stos
cmp
ss
lcall
test
out
jae
in
dec
adc
test
inc
nop
adc
mov
push
outsb
cmp
test
push
out
cmp
lret
lret
pop
nop
inc
and
push
aaa
mov
mov
adc
inc
enter
xor
jno
cmp
ret
pop
inc
lods
xchg
vmovaps
test
in
pop
sub
aaa
ja
and
xor
dec
mov
sub
sbbl
mov
add
popa
gs
lds
cli
out
or
mov
sahf
das
nop
dec
pop
sbb
adc
mov
jge
jg
in
outsl
xchg
inc
xchg
xchg
flds
in
mov
lcall
ja
in
xor
push
in
pusha
in
sbb
lahf
sarl
mov
jbe
cmp
inc
push
cmpsl
add
sub
outsl
nop
jo
stc
xor
loope
mov
xor
jnp
xchg
mov
xchg
push
cs
xchg
sbb
hlt
scas
xor
adc
or
xchg
sbb
adc
in
push
and
push
outsb
cs
pop
jg
adc
mov
icebp
leave
mov
inc
ja
xor
sub
adc
or
jo
lods
mov
ljmp
pop
cltd
ds
cmp
lds
push
fcompl
cmp
shlb
xchg
aas
scas
and
xchg
adc
xor
int
jne
notb
movsl
in
cmpsb
jns
xchg
jecxz
cli
lock
out
or
xor
mov
dec
push
jbe
dec
sbb
orb
add
mov
inc
or
in
out
mov
out
or
xchg
imul
dec
mov
cmp
aam
aaa
fcomps
push
inc
inc
lods
icebp
lods
pop
sarb
incl
sub
fbld
and
sbb
inc
sbb
mov
mov
stos
stos
in
adc
dec
dec
cmp
mov
pop
or
sarl
lcall
inc
lds
mov
inc
sub
mov
xchg
push
and
icebp
orl
stos
cltd
mov
jecxz
xor
ja
xchg
push
out
mov
mov
add
jae
in
orb
cmp
out
je
xor
and
dec
xor
push
fwait
in
mov
je
in
jmp
push
inc
loope
sbb
inc
outsb
mov
ds
push
mov
rclb
frstor
mov
jmp
daa
cmp
jbe
mov
inc
jmp
sbb
xor
insl
sub
jl
aas
loope
repz
or
les
int3
loopne
ljmp
shrl
and
xchg
insl
xor
push
rcll
pop
fldt
cmp
jp
outsl
sub
outsl
leave
ljmp
push
dec
lcall
cltd
enter
mov
dec
sub
mov
sbb
xchg
xor
fisubl
lcall
enter
or
movsl
or
int3
loop
adc
data16
fwait
push
es
testl
in
jl
xchg
aam
test
xor
pop
pop
jg
dec
push
pop
or
xor
mov
pop
cmc
jnp
lea
xor
adc
inc
jns
mov
mov
lea
inc
ret
int3
popa
subb
daa
xor
out
pop
inc
test
mov
arpl
cmp
push
mov
outsb
pushf
insl
popf
pop
xchg
testl
add
outsb
jbe
ss
jne
push
push
es
jecxz
aam
cmp
ret
inc
jno
cs
mov
filds
cld
push
or
cmp
test
cld
stos
insl
dec
rol
ret
or
mov
dec
xchg
test
mov
xabort
adc
icebp
jbe
cmp
and
adc
stc
push
cmp
iret
mov
nop
pop
adc
loopne
fimuls
adc
jge
jl
mov
adc
out
xchg
scas
push
xchg
clc
add
and
loopne
insl
stc
sbb
add
jmp
push
insl
leave
mov
xchg
pushl
push
mov
push
aam
fimuls
or
fsubs
jnp
mov
inc
dec
add
pop
ja
rcrl
push
cmp
or
fs
stos
clc
sbb
fmul
aaa
fidivrs
pusha
dec
sbb
push
fsubrl
aam
fisubrl
push
push
xchg
lods
or
inc
xchg
aad
inc
out
xchg
inc
mov
xchg
sbb
aam
mov
fidivl
pushf
ljmp
mov
or
out
rclb
fisttpll
cli
rclb
and
movsl
and
in
jb
inc
addb
hlt
push
loopne
sahf
fisubs
lcall
jp
xlat
or
testb
out
dec
push
cmpsl
and
inc
pop
fs
mov
insl
xchg
inc
jb
sub
adc
int3
jo
xchg
fs
andl
push
sarl
add
jne
mov
fs
in
pop
jae
lds
lcall
add
fcompl
xchg
cmp
es
cmc
clc
pop
jo
and
adc
popa
or
popa
push
fidivs
jno
adc
mov
aam
dec
mov
jns
das
dec
pause
sub
lret
push
and
popa
mov
pcmpgtd
sub
gs
inc
dec
inc
jbe
pop
sbb
stc
fdivl
scas
je
adc
jmp
pop
inc
ret
sbb
mov
pop
cmp
rcr
jmp
outsl
adc
mov
cltd
dec
mov
cmpb
mov
xlat
xor
ret
sub
xchg
clc
adc
inc
jge
jecxz
iret
notl
xlat
je
mov
inc
repnz
mov
xor
sbb
inc
push
or
adc
xor
sti
sbb
xchg
jne
fs
or
fs
loopne
adc
push
mov
repnz
popa
rorb
or
mov
testb
jg
cwtl
xchg
loope
out
das
aam
popf
and
pop
and
inc
adc
jae
mov
pop
xlat
or
hlt
jle
loope
pop
cli
mov
ret
ljmp
pop
xor
mov
xor
cmp
sub
lock
rcrb
pop
push
lock
int3
call
outsb
or
pop
dec
fdivs
sbb
lea
mov
sub
mov
mov
cmpsl
ja
xor
jmp
imul
sub
mov
dec
mov
mov
jecxz
clc
bound
jbe
mov
cltd
xor
dec
jecxz
mov
and
push
dec
xor
or
scas
je
inc
pop
inc
jmp
sbb
cmp
arpl
negb
jl
cmp
jp
sub
dec
adc
std
outsb
repnz
iret
mov
into
mov
cli
push
ret
or
imull
imul
xor
xor
inc
cs
and
subl
push
insl
subl
fisttps
aad
xlat
addr16
sub
jle
add
pushf
pushf
or
cmp
cmp
int3
mov
mov
in
and
push
inc
jnp
and
je
and
je
sub
pop
pop
push
inc
idivb
cltd
lods
pop
xor
pop
loope
in
sub
jg
dec
cs
cmp
sbb
shll
iret
pop
sub
lea
testb
sahf
cmp
outsl
mov
jg
sbb
push
cmp
push
push
push
inc
xor
test
sahf
cmovnp
or
popa
xchg
cmp
inc
dec
mov
inc
pop
inc
push
inc
add
scas
cld
clc
sbb
and
testb
jmp
rcll
roll
jg
cmc
mov
cli
out
push
jo
jo
jb
add
popf
sub
lret
int3
cmpsl
pop
sbb
icebp
cmp
test
mov
stos
push
inc
inc
out
je
xchg
mov
adc
cs
pusha
add
popf
call
jnp
fildl
sbb
add
or
sbb
popa
adc
push
adc
cwtl
xor
mov
mov
push
adc
add
or
push
jge
out
mov
xchg
inc
out
mov
sbb
popa
adc
xchg
aad
fs
lret
ss
inc
pop
pop
inc
dec
or
fdivs
nop
cmp
ds
cmp
cltd
stos
rorb
loope
sahf
jecxz
cmp
cmpsb
add
mov
lock
cmpsl
adc
fcoms
xchg
inc
adc
flds
adc
sub
sti
adc
pusha
loope
popf
fdiv
mov
or
mov
out
mov
jno
mov
fisubrs
sbb
push
int
mov
mov
fstps
mov
jge
test
xor
xchg
rorl
lahf
cmp
sarl
imulb
push
push
sahf
push
aad
outsl
ja
dec
out
or
mov
pop
xor
mov
stos
adc
in
xor
mov
mov
imul
cmc
mov
and
test
push
scas
stc
mov
xlat
out
stos
cmp
inc
in
orb
out
mov
jo
test
mov
out
hlt
lods
adc
and
fldcw
aam
pusha
daa
push
push
inc
mov
xchg
lock
jnp
mov
ds
pusha
sub
mov
push
jne
stc
dec
mov
rcl
and
xchg
sub
mov
nop
test
lods
lods
sub
xchg
pop
subb
sbb
xchg
sahf
les
in
clc
cld
or
cmc
lods
add
xchg
mov
inc
fnstcw
pusha
or
das
or
shrb
pop
and
in
mov
lods
mov
mov
leave
lods
shll
adc
adc
stos
sahf
adcl
sti
fldcw
cmp
xor
or
or
jno
mov
mov
outsb
lds
lahf
adc
fisubl
jmp
sub
mov
out
sbb
les
lahf
cmp
aad
test
lods
test
jle
pop
scas
sahf
sub
sub
test
rol
mov
das
push
incl
aaa
inc
bound
push
xchg
orps
dec
test
dec
lret
cmp
xchg
push
xchg
cmp
xor
fildll
das
daa
sbb
out
arpl
push
xchg
jp
lock
pop
outsl
out
scas
mov
or
mov
cmp
icebp
mov
inc
pop
sub
mov
pop
add
jp
cmp
inc
incl
mov
imul
adc
lock
ds
add
cmp
lock
push
push
frstor
test
insb
mov
insl
test
add
push
bnd
fwait
rcrl
xlat
mov
ret
dec
lock
aas
cmc
mov
xor
xor
popf
cmp
dec
mov
inc
jle
mov
lock
jge
mov
xor
popf
daa
insb
icebp
add
inc
lods
pop
in
enter
repnz
rcrl
inc
dec
jge
push
dec
sbb
or
xor
pop
inc
xor
and
and
inc
repnz
cld
inc
xor
scas
dec
cmc
mov
mov
lret
aaa
mov
mov
mov
aad
mov
jl
jl
jmp
cmp
cmp
or
mov
fdivrs
sbb
inc
pushw
aaa
jecxz
jle
and
xor
sarb
xlat
loop
xchg
ljmp
inc
fsts
lds
ljmp
jbe
add
pop
pop
push
pop
dec
dec
sbb
sbb
and
jecxz
insb
loop
push
fisubrs
dec
or
or
scas
jnp
jmp
mov
cmp
jl
sarl
ret
push
add
add
pop
lret
out
jmp
pop
mov
xlat
daa
cvttps2pi
ljmp
mov
pop
clc
aaa
dec
lds
outsb
mov
call
fsubrl
push
xor
cmpsl
pop
iret
cwtl
stos
popf
test
xor
dec
outsl
mov
rorl
adc
insl
dec
mov
and
ja
jecxz
mov
jl
mov
jnp
in
mov
stc
shrl
enter
jae
daa
es
push
jg
push
sub
test
inc
xor
andb
xchg
in
rorb
and
nop
outsl
outsb
fisubs
mov
mov
sub
cmp
or
inc
imul
imul
imul
sbb
push
pop
jo
cmp
lcall
jae
les
fs
inc
pop
stc
repz
vcvtdq2ps
or
add
mov
xor
mov
xchg
out
and
push
adc
sbb
rcll
pop
pop
in
in
ret
xchg
ret
push
out
inc
repnz
inc
inc
adc
data16
push
or
mov
aaa
les
jnp
pop
sub
mov
mov
dec
dec
mov
jl
xchg
js
fdivp
fdivs
int3
inc
out
nop
xchg
push
jne
sub
cs
in
mov
mov
decb
or
adc
mov
push
xor
sbb
cmc
cmp
sbb
pop
popfw
lods
mov
jle
mov
lret
mov
inc
lahf
mov
jo
lods
lods
sarl
cli
fwait
xchg
push
rorl
xchg
inc
adc
ficompl
popf
rclb
xchg
idivl
roll
jp
out
xor
add
add
xlat
test
nop
enter
xor
adcb
sarb
aam
xchg
lret
jp
mov
fimull
aaa
push
adc
pop
ja
mov
or
shl
repz
xorb
popf
pop
pop
out
out
xor
dec
cmpsb
mov
lret
xchg
shll
sbb
ret
push
mov
pop
lea
lods
stc
repnz
arpl
inc
mov
cmc
and
dec
and
mov
jl
and
insl
and
je
mov
add
sub
aam
jns
sub
je
pop
ficompl
sbb
mov
es
inc
adc
scas
sub
mov
addr16
sahf
jb
lret
rcr
jno
bound
pop
aam
xor
outsl
sbb
pop
mov
and
xchg
test
cmp
repnz
popf
imul
bound
js
lcall
icebp
mov
sbb
fbld
mov
dec
mov
pushf
lock
push
cld
mov
inc
xor
adc
push
add
pop
xor
push
test
roll
enter
add
repnz
cmc
add
fnstenv
inc
insb
sub
mov
ljmp
call
stos
vphaddubd
shll
jge
and
sub
nop
push
lods
sbb
and
nop
aam
push
jo
ror
xor
lds
lock
lods
out
sahf
adc
cmpsl
cmpsb
sbb
fwait
xor
mov
add
sti
jns
shrl
fcmovnb
mov
pop
lds
xlat
adc
xor
je
loopne
xor
in
lret
cld
jge
mov
xor
adc
js
hlt
vcvtdq2ps
mov
ret
imul
fdivrs
adc
scas
dec
or
sbb
mov
cltd
scas
test
adc
lret
sub
repnz
push
test
jg
fildl
push
fisttpl
movsl
aas
loop
xchg
mov
fisubrs
shlb
movsl
mov
mov
or
not
adc
xlat
dec
add
cmpsl
aam
in
stos
cmp
and
push
xchg
je
and
out
repz
jo
imul
sahf
fistpl
insl
pushf
mov
dec
das
ljmp
orb
mov
add
test
mov
imul
dec
jne
fisubl
enter
add
push
or
and
mov
pop
loop
push
push
push
imul
push
stc
jp
orb
lret
sub
or
mov
cmpsl
sbb
mov
add
sahf
adc
ljmp
push
jmp
xor
repz
iret
test
aaa
jae
jns
mov
and
sbb
push
mov
jmp
add
ret
xchg
push
cltd
inc
sti
mov
push
subb
icebp
xchg
xchg
les
dec
mov
das
imul
gs
inc
jae
cwtl
xchg
jbe
mov
mov
cmp
lea
pop
adc
aaa
jb
scas
pop
xchg
js
and
sbb
dec
inc
add
lcall
daa
loopne
in
push
xor
cmp
mov
sub
xor
cmp
inc
pop
jb
ja
test
sbb
fisttpl
push
mov
leave
inc
mov
cs
roll
ljmp
pop
scas
sbb
xchg
stos
pop
vpermb
dec
mov
add
in
sub
mov
repnz
in
sarb
rcl
mov
cmpsb
push
pop
pop
xor
pop
shl
aam
in
xchg
mov
jnp
or
dec
dec
jo
cmp
test
cs
adc
push
sti
pushf
sub
roll
cmp
push
pop
xchg
mov
scas
ss
jns
repz
gs
aad
dec
add
fdivl
lcall
dec
jl
aas
xorb
movsb
and
lahf
mov
and
imul
sbb
fldt
mov
stos
call
dec
fmull
push
test
xchg
pusha
leave
sti
clc
and
rcrb
aas
shlb
mov
cmp
jno
nop
ds
xchg
push
sarb
cmp
jns
pop
or
mov
dec
test
rorb
or
mov
cltd
mov
push
mov
jle
aas
jle
lods
test
sub
popf
dec
lea
in
mov
sbb
daa
jmp
cmc
stos
jbe
test
imul
insl
clc
arpl
mov
jno
icebp
push
mov
outsl
scas
jae
sbb
lcall
push
push
sub
jmp
mov
jp
pop
push
imul
sub
pop
sbb
std
jle
jnp
or
mov
ja
addl
mov
fadd
adc
sbb
shll
gs
imul
or
stos
sub
or
cmp
nop
lahf
push
outsl
jno
sub
xchg
test
lods
insl
mov
in
and
xchg
repnz
ljmp
sub
das
mov
sbb
data16
adc
cmpsb
loope
fs
iret
insl
lret
ljmp
and
je
sti
fisttps
shlb
movsb
movsl
pop
xchg
test
in
cs
test
pop
xchg
cmp
lahf
sub
sub
outsb
ret
nop
xchg
push
test
and
mov
ret
inc
pop
sub
inc
ret
push
dec
mov
call
in
loop
test
cmp
cmp
or
lea
cmpsl
std
insb
cmp
jg
jp
sbb
dec
xchg
mov
into
mov
nop
push
adc
out
push
test
dec
jnp
out
push
mov
es
push
push
jno
xchg
aad
cli
push
adc
and
mov
cld
fsts
dec
lds
jae
nop
xor
lret
pop
iret
fcoml
ret
mov
je
movsb
js
jbe
mov
xlat
ficomps
push
push
sub
adc
or
adc
stos
pushf
ja,pn
aas
xor
cs
cs
test
ds
push
sbb
mov
scas
push
jge
ja
push
arpl
inc
in
add
mov
or
fdivrp
stc
cmp
test
mov
lock
sub
push
inc
movsb
mov
inc
sub
mov
or
pop
dec
pop
push
jg
mov
fists
pop
add
or
cld
xchg
fs
jbe
popf
inc
mov
sbb
leave
push
inc
stc
jmp
popa
cmp
imul
mov
mov
stos
in
test
mov
mov
jne
jo
test
or
pushf
rorl
pop
jb
sub
and
adc
add
jns
cmc
call
sbbl
cld
outsl
sub
cld
ja
mov
clc
hlt
mov
push
jmp
mov
out
loope
push
cmp
mov
data16
xchg
push
jge
dec
xor
ror
push
into
inc
or
mov
cs
and
rcrb
xorl
movsb
mov
int
clc
inc
mov
mov
sub
pop
push
cwtl
cli
insb
xchg
xchg
dec
int3
cwtl
inc
mov
mov
data16
int
cwtl
sti
mov
jns
into
mov
push
and
and
test
les
inc
inc
test
sarl
jo
ret
mov
ret
push
mov
popf
fcoms
iret
movsb
add
adc
adc
add
decl
int
push
ret
xchg
mov
cmp
dec
xchg
sbb
data16
dec
push
dec
sub
pop
push
push
lods
movsb
imul
cmp
loop
aas
popa
adc
dec
popa
push
or
imul
and
pop
cmp
rcl
mov
cld
fbld
scas
pop
mov
mov
arpl
jle
arpl
sahf
je
and
mov
mov
adc
jmp
add
mov
add
sbb
pop
fcmovnbe
cmp
xor
push
pushf
xor
test
aad
mov
mov
xchg
mov
xchg
addr16
pop
inc
cmc
jmp
jnp
jmp
cli
mov
popa
scas
cmp
push
jl
lock
push
out
pop
loopne
fiaddl
pop
cld
int
inc
pop
cld
negb
adc
xchg
test
cmp
jge
add
stos
dec
dec
lret
mov
std
mov
in
scas
lret
outsb
xchg
push
in
cmp
cld
dec
mov
fs
fidivrs
lock
sub
shll
jl
push
sbb
xor
pop
loopne
and
outsb
in
push
xchg
or
fdivl
shlb
jle
xor
cltd
xor
dec
cmp
dec
push
push
aam
outsb
jge
lds
push
movsb
push
inc
mov
push
add
movsl
push
loop
push
push
inc
fs
nop
fisubrs
or
and
scas
sbb
popa
inc
enter
cmc
fwait
push
ljmp
sbb
in
xor
add
repnz
cli
xchg
enter
mov
pushf
imul
shlb
pop
lea
fldt
fwait
push
gs
xorb
out
dec
xor
int
push
sub
scas
out
pop
pushf
out
out
mov
jnp
lea
add
cld
dec
or
in
mov
dec
dec
in
insl
mov
dec
ficoms
push
in
stos
add
adc
push
dec
and
push
daa
daa
and
xor
das
je
and
add
fldenv
rcrl
dec
out
fstps
pop
lds
xchg
sub
inc
cmpsl
hlt
mov
fstpl
pop
icebp
jno
out
addr16
adc
dec
movb
ljmp
mov
add
lea
lret
mov
cmp
or
add
push
mov
xchg
addr16
mov
sbb
rorl
cmc
sbb
out
push
and
andb
leave
adc
fcoml
mov
inc
push
mov
jecxz
or
leave
rcr
cmpsb
cld
mov
mov
les
enter
aad
lret
jecxz
int
icebp
lea
inc
or
push
pushf
push
push
sbb
xor
loope
sub
sahf
fstpt
ljmp
imul
repz
lret
pop
mov
and
sbb
cmp
push
and
imull
jg
fistl
and
or
les
jg
push
add
in
xchg
add
mov
pop
hlt
jge
sub
xor
or
cli
add
cmpsl
push
stos
sar
sub
adc
cmp
repz
inc
jnp
push
mov
cli
pop
mov
cmp
outsl
xchg
nop
inc
xorb
add
bnd
scas
mov
ret
les
in
dec
lea
stos
das
jnp
add
imul
push
sbb
ja
je
out
call
sti
icebp
and
insl
daa
leave
mov
and
pop
ret
in
push
mov
mov
mov
and
inc
sub
in
xchg
test
out
out
and
inc
mov
notl
aad
loope
je
repz
loope
enter
push
xor
daa
ret
jae
pusha
mov
jmp
data16
movsb
scas
pop
and
pop
cli
aad
push
and
mov
fistl
shll
or
test
cmp
mov
mov
out
cmp
xchg
and
xor
loop
adc
popa
pop
xor
fucomp
sarl
pop
jp
outsb
out
xchg
mov
sbb
gs
mov
ss
lahf
fld
inc
loopne
jmp
add
cmpsb
int3
bound
or
sbb
dec
mov
jp
imul
cmpl
mov
cltd
test
test
adc
mov
push
sarl
out
and
out
sti
rcrl
mov
cmpsl
push
jns
add
sbb
lock
stc
leave
in
cwtl
and
hlt
std
mov
shl
dec
pop
loopne
push
js
inc
fwait
push
push
arpl
test
add
cmp
mov
jecxz
scas
arpl
scas
imul
scas
ret
jbe
sub
test
pop
and
sub
sbb
xchg
mov
cmp
into
fs
stc
popa
loop
shl
rcl
sbb
fisttpl
xor
sub
push
mov
mov
push
add
jmp
jmp
cmp
mov
mov
rorl
movsb
mov
jecxz
cmpsb
xchg
cmc
mov
nop
jecxz
xor
sub
icebp
pop
outsl
xchg
mov
pusha
cltd
pop
outsb
icebp
sbb
fdivrl
jns
add
push
movsl
push
sbb
lods
and
cmp
fmuls
shll
push
movsb
dec
pop
pop
stos
add
sbb
aad
jmp
mov
sbb
ss
jb
xor
sbb
adc
and
or
inc
rclb
sub
and
test
cmp
iret
js
aaa
into
test
add
adcb
dec
xor
hlt
mov
jae
inc
rclb
inc
or
rorb
dec
cwtl
pop
dec
ss
and
call
jno
in
cli
fdivrs
push
mov
jl
ljmp
mov
sub
scas
jns
aaa
push
pop
cwtl
lods
cwtl
out
leave
push
fdivl
loopne
in
mov
mov
xchg
pushl
jmp
or
dec
adc
dec
cmpsb
and
js
daa
sbb
mov
mov
sbb
cltd
ja
sub
enter
xchg
outsb
faddl
mov
aaa
sub
nop
jo
push
jl
lock
subb
test
adc
out
cmp
pop
in
xchg
inc
xchg
jmp
aaa
push
fdivrl
jae
xchg
lahf
jno
lock
lahf
and
mov
mov
fidivrl
pusha
sub
fdivs
mov
enter
xchg
jle
mov
inc
xorl
outsl
or
arpl
dec
test
inc
jecxz
sbb
sub
outsb
cmpsb
add
lock
fnstsw
aad
out
sbb
jecxz
lock
adc
mov
inc
jmp
mov
and
add
xchg
test
mov
fildl
dec
sub
mov
sub
xchg
sbb
and
cwtl
psllq
push
es
cmp
mov
push
fistpll
pop
cmp
lret
mov
call
jbe
mov
stos
into
lret
enter
shlb
data16
popf
popa
xchg
aad
test
mov
push
outsl
aam
hlt
outsl
jo
sub
aas
dec
inc
gs
mov
lods
mov
in
pushf
ret
aaa
into
fadds
sbb
imul
mov
js
ss
insl
shl
in
repnz
mov
push
xchg
addr16
push
shll
add
mov
push
sub
cmp
jbe
sub
sahf
fwait
inc
fprem1
pop
dec
cmp
int3
push
pop
in
stos
jne
fisubrs
push
popf
jne
jo
mov
jae,pt
in
sub
rol
negb
push
fsubl
jae
cmp
rol
fidivl
fs
pop
ja
sub
in
xlat
lcall
push
outsb
pop
and
gs
jb
push
sbb
adc
push
xlat
repnz
jno
les
pop
movsl
adc
in
insb
enter
adc
push
push
in
sub
jg
cwtl
dec
push
jns
rclb
and
lret
pop
ret
add
cmp
cmp
and
mov
ret
ds
push
add
iret
les
ret
in
scas
sbb
xchg
lea
dec
ja
imul
scas
or
outsl
test
rcrb
or
jecxz
adc
cli
clc
xchg
ror
orl
cld
insl
xlat
or
jae
cmp
es
xor
test
xchg
repnz
xchg
sub
fstps
add
push
sub
imul
and
fisttps
aas
ss
dec
jb
sar
mov
pop
fiaddl
fmuls
xchg
dec
mov
jbe
dec
mov
es
dec
mov
dec
and
xor
scas
mov
jb
clc
mov
xchg
lret
sar
or
rol
sbb
jg
inc
lods
repz
sub
sti
dec
and
ss
cltd
dec
in
push
das
test
and
push
add
test
ret
push
out
test
cli
popa
cld
adcl
rcrb
mov
mov
mov
arpl
fldt
adc
or
and
mov
loop
insl
sub
push
jne
xor
jns
in
adc
adc
outsb
add
ret
push
aas
add
pop
sbb
ficoms
adc
stc
test
dec
pop
jne
add
mov
aad
je
cmc
cmp
movsl
lods
out
add
fwait
in
sub
xor
shll
movsb
xor
mov
mov
mov
imul
xor
dec
push
cmp
je
mov
jge
sbb
into
lds
mov
sarl
iret
mov
ds
pusha
jbe
jmp
xor
jl
dec
mov
jns
pop
jae
xorl
jno
std
gs
in
cmpl
pusha
dec
mov
jno
xor
and
xchg
mov
sub
mov
push
in
xlat
les
ret
int
push
mov
loope
lret
lock
jle
lahf
fs
cmp
jo
das
pop
add
sub
lds
adc
mov
xchg
in
cs
lock
sahf
mov
stc
clc
cmp
lar
mov
jge
and
sub
xor
loop
lcall
jg
jp
push
sti
aad
or
and
cmp
cli
lcall
pop
or
je
loope
les
shlb
dec
jge
andb
sbb
dec
mov
inc
js
int3
and
pop
mov
outsb
mov
movsl
jbe
inc
loopne
pop
int3
je
lods
xchg
arpl
xlat
adc
dec
movsb
gs
add
enter
xlat
lahf
movsb
test
adc
out
fstl
in
test
shr
add
data16
xchg
or
jmp
mov
add
jecxz
dec
adc
repnz
je
neg
xchg
xor
jl
gs
push
adc
cld
dec
jmp
aaa
xor
loopne
xor
or
lcall
in
repnz
cmp
rcr
or
add
into
cs
test
mov
mov
jl
push
push
xchg
push
movsb
add
mov
or
sbbl
subb
cli
jne
push
push
mov
test
scas
bound
dec
aaa
and
inc
sbb
stos
fstl
loope
mov
inc
xchg
mov
nop
je
and
dec
test
mov
pop
lods
xor
jle
sbb
pop
mov
jp
repnz
push
lahf
dec
cltd
pop
cmp
push
enter
jp
enter
call
and
in
in
cmpsl
xchg
stos
cmpsl
jae
repnz
pop
loopne
mov
or
mov
push
clc
mov
push
lahf
test
and
aas
popf
lret
ficoml
enter
and
ret
pop
xor
ret
fdivp
sub
imul
pop
push
or
and
inc
call
mov
and
in
fsubs
pop
add
rorl
xchg
repnz
and
or
sub
inc
outsb
sub
xor
gs
mov
push
mov
adcb
movsl
hlt
mov
cltd
sub
iret
out
sub
jne
dec
mov
dec
rol
stc
cld
int
push
fisubrl
mov
cwtl
mov
sbb
xor
fstpl
in
imul
popa
cmc
jl
cmpsb
aaa
loope
push
mov
add
cmpsb
push
or
pop
mov
leave
daa
lret
popa
loopne
and
rcrl
sub
repnz
nop
sub
fistl
ror
jo
int3
inc
push
add
pop
mov
cmpsl
mov
mov
lods
repnz
push
jnp
and
push
lods
movsb
call
iret
pop
jb
repz
mov
lods
cmpsb
call
sti
push
adc
jecxz
xchg
sbb
loope
pop
xchg
inc
push
sbb
or
sub
cmp
mov
inc
enter
out
cltd
or
mov
es
push
adc
adc
cmp
mov
outsb
jg
dec
jle
cmp
popf
mov
mov
jle
into
jp
test
add
cltd
pop
std
inc
mov
mov
es
jl
xchg
mov
inc
shrb
inc
fdivrs
sub
mov
cmc
test
lcall
data16
jge
cs
pop
fdivs
dec
das
in
dec
and
inc
adc
push
add
mov
mov
daa
fdivl
xchg
pop
jbe
jl
stos
mov
popa
int
adc
fwait
and
pop
pop
lods
movsl
cmp
push
jg
mov
dec
enter
mov
daa
add
lret
mov
mov
mov
or
inc
mov
jne
sarb
test
dec
xor
pop
xchg
into
sub
xchg
xchg
insb
andl
jecxz
mov
cld
leave
out
nop
test
aas
test
in
out
sti
or
sbb
imul
hlt
add
cmp
mov
jae
sub
sbb
push
sbb
lret
cmpsl
les
fstps
sti
in
stc
mov
or
js
cmp
and
cmp
cld
jp
fiaddl
xor
ror
lds
stos
xor
scas
std
in
jle
out
mov
ss
mov
xchg
int3
add
adc
and
fcoms
outsb
mov
int3
cli
push
or
js
mov
mov
adc
mov
mov
shr
xchg
lds
xor
inc
adc
loopne
push
sbb
xchg
cmp
dec
xchg
mov
ljmp
jp
lahf
icebp
mov
lock
mov
lcall
icebp
outsb
es
add
add
add
lds
push
rcr
mov
add
repnz
test
xchg
test
ss
inc
adc
imul
mov
pop
dec
and
je
jne
pop
jl
add
loope
adc
jns
dec
insb
adc
or
fstl
mov
mov
xchg
pop
jb
cwtl
popf
push
pusha
pop
push
xchg
fidivl
add
fadd
lret
es
add
pop
and
dec
jp
sub
shll
mov
imulb
call
stc
jecxz
push
mov
movsl
call
jns
mov
sbb
inc
mov
or
test
sub
outsl
popf
data16
int3
or
scas
lock
mov
fcmovne
and
loop
shrl
popa
test
or
ret
cltd
repnz
leave
in
lret
cs
pop
push
mov
inc
lahf
mov
jg
addr16
or
sub
lahf
xor
out
xor
cmp
and
lods
mov
test
jb
pusha
xchg
pop
mov
iret
rcl
test
jns
enter
mov
pop
mov
cmc
in
test
mov
aas
jo
rcrl
push
and
aas
stos
lcall
out
imul
insl
inc
adc
repnz
cs
repnz
ja
inc
sti
dec
in
addb
or
xor
adc
inc
mov
pop
lods
xlat
fldcw
rcrb
fsubl
fcomps
fdivrl
mov
mov
dec
cmp
cmp
cmpsb
mov
or
inc
in
and
aaa
jl
push
inc
adc
data16
out
xchg
jg
dec
add
mov
mov
push
inc
inc
adc
or
and
dec
aam
leave
in
jmp
mov
xchg
popf
arpl
sub
out
xchg
pop
ja
hlt
inc
mov
inc
jno
or
add
pop
mov
cltd
popf
out
iret
scas
mov
and
fsubs
xor
clc
inc
cli
cmp
clc
out
add
mov
cmp
repnz
add
pop
gs
xor
cmpsb
testb
inc
push
pop
add
lahf
push
jbe
lock
movntq
out
enter
in
xor
mov
dec
shrl
push
mov
ja
inc
jo
outsl
push
push
outsl
iret
push
andl
das
aaa
cmp
adc
jg
std
decl
aaa
pop
or
cmp
adc
jecxz
and
or
sbb
test
sub
lret
xlat
cmp
xor
pop
mov
dec
push
cwtl
test
cld
push
dec
sbb
dec
mov
movsl
adc
lods
dec
dec
lcall
rcl
jecxz
out
mov
and
out
sub
cmp
cmpsb
adc
popa
sub
jmp
neg
add
pop
mov
push
les
test
or
inc
push
dec
and
cmp
push
mov
adc
mov
data16
mov
dec
jae
pop
xchg
and
dec
inc
aaa
sbb
mov
cs
sbb
mov
dec
lods
scas
cmp
xchg
or
pop
sbb
dec
int3
je
mov
pop
leave
mov
lcall
cmp
popf
xor
aad
xchg
imulb
or
lods
jnp
mov
mov
xchg
inc
xchg
gs
ret
or
pop
dec
int
jae
jl
cmp
pusha
loopne
ret
and
mov
icebp
mov
out
mov
mov
enter
rcl
xchg
pop
push
call
aas
xor
push
add
sub
stos
jl
ret
enter
pop
cmp
inc
std
or
and
add
sbb
aam
pop
pop
mov
sub
jmp
jae
cli
cmp
ja
add
sbb
push
sbb
mov
aad
mov
pop
inc
outsb
test
sbb
aaa
cld
or
or
sbb
imul
daa
scas
xor
sbb
and
out
jae
or
pop
mov
arpl
pop
aas
iret
sysexit
arpl
das
mov
mov
sahf
jp
imul
pop
mov
mov
and
jbe
dec
loopne
jl
xchg
cmpsb
xchg
sub
notl
fnstsw
push
mov
push
imul
pop
xor
int3
repz
or
cmc
and
dec
sbb
enter
inc
cli
cmp
subb
cmpsl
imul
cld
popf
negl
xchg
add
leave
adc
pop
mov
sarl
push
les
mov
ret
sbb
or
adcb
mov
fisubs
fidivl
cld
jne
dec
push
sub
adc
sbb
js
fidivrl
xor
inc
inc
test
lret
push
scas
adc
out
popf
pop
jbe
test
ret
xchg
adc
inc
mov
push
nop
or
or
inc
lret
cmpsb
xor
popa
and
or
test
adcl
sbb
fimuls
pop
and
sbb
pop
pop
jmp
test
imul
movsb
jp
xchg
xchg
iret
sti
arpl
lcall
add
mov
out
mov
or
arpl
inc
xor
jecxz
sub
adc
into
into
inc
dec
inc
icebp
insl
insb
scas
repnz
push
xorl
imul
out
inc
cs
add
jne
into
and
mov
test
sbb
daa
lret
jo
mov
arpl
outsl
hlt
jb
lret
mov
rorb
rcll
lods
mov
xor
outsb
xchg
jge
fbstp
popf
je
mov
pop
xchg
mov
scas
scas
jns
or
push
ror
jmp
sarl
pop
push
das
ds
sub
test
dec
cmp
xchg
pop
fs
out
cmp
cmp
cmp
jo
mov
add
dec
fld
mov
loop
pop
sub
mov
xor
call
push
pop
dec
cmpsl
push
pop
cmp
xchg
cld
imul
add
dec
loop
or
jo
lds
in
xor
mov
aam
pop
mov
ja
adc
pop
sbb
pop
mov
push
mov
mov
je
dec
stos
popf
idivl
out
sub
int
xchg
adc
fstl
xor
cmp
aas
popa
idivl
sti
cmpsl
daa
push
cmp
add
into
fs
pop
jae
imul
mov
xchg
daa
dec
mov
dec
ljmp
push
icebp
cmc
cmp
fsubl
insb
into
mov
iret
push
and
sub
xor
fwait
sbb
fimull
test
jne
xchg
jbe
or
shrb
cmp
sub
xchg
fucom
jmp
idiv
cltd
fldl
imul
and
pop
xchg
cmpl
sbb
cmc
nop
outsl
out
sub
into
inc
cld
shll
lret
push
push
xchg
jbe
cmp
jne
jle
test
out
in
add
add
arpl
pop
in
int
add
mov
mov
push
add
nop
mov
clc
jb
int
dec
imul
lods
into
inc
mov
add
sbb
pop
js
imul
jmp
sbb
jle
xchg
arpl
jo
arpl
mov
push
cmpsb
les
inc
aam
pop
xor
in
in
cli
mov
gs
sub
lea
dec
fisubrl
lahf
dec
rorb
out
out
mov
sbb
cmp
cld
mov
iret
cmc
mov
sub
mov
imul
mov
xor
and
arpl
mov
out
and
adc
lods
out
fdivs
jmp
jb
cmc
inc
inc
and
inc
inc
std
or
add
jmp
das
leave
sarl
or
js
dec
hlt
lcall
cs
daa
shl
xchg
jnp
mov
push
outsb
outsl
addr16
pop
mov
pop
sub
jge
iret
in
mov
jno
xchg
jns
jg
jp
jecxz
pop
es
pop
mov
sahf
cmp
jl
and
xchg
inc
or
mov
push
repnz
adc
mov
xchg
mov
scas
stc
push
mov
into
xor
mov
and
data16
or
lret
mov
pop
or
hlt
mov
jns
sub
sub
cpuid
or
adc
sub
lcall
idivb
xor
or
sub
les
mov
cmc
pop
test
pusha
pop
push
lret
sbb
inc
subl
push
lock
int
dec
cmpsl
or
cmp
fisttpll
jecxz
xor
lods
enter
sbb
ret
xchg
jns
fdiv
xor
mov
pop
shr
or
xchg
ljmp
xor
mov
sti
lret
add
mov
add
scas
mov
rorl
add
jge
inc
nop
leave
inc
fstpt
xor
daa
int3
push
adc
mov
ja
mov
or
sub
mov
pop
inc
stos
out
aam
mov
ret
jo
xchg
sbb
push
add
insb
testl
and
mov
mov
lods
or
xchg
mov
inc
cmpsb
add
xchg
cld
imull
orl
add
xchg
jp
mov
inc
stc
push
clc
add
es
add
rorb
mov
push
out
fstpl
mov
popa
xor
sub
and
jmp
mov
mov
out
je
push
pop
stc
or
push
stos
pop
es
aad
lods
idivl
dec
ds
fisubl
in
jo
dec
push
outsl
mov
and
cmp
movsl
xrelease
cmp
push
mov
sahf
std
cmp
bound
fildl
adc
mul
lock
or
add
aaa
xchg
xchg
invd
cli
jne
lret
add
stos
stc
ret
xor
dec
movsl
out
inc
ret
xor
sbb
ljmp
inc
mov
loop
insb
aam
loope
aam
sahf
pushf
jno
stc
inc
mov
inc
sub
lods
pop
mov
aaa
fisttps
movsl
and
int3
nop
pop
roll
cmp
fwait
pop
lods
das
jmp
dec
push
pop
fistpll
pop
push
push
stc
ret
add
stos
retw
out
push
insb
mov
mov
xor
and
es
rcr
loope
xor
or
push
xchg
fildll
test
jnp
rolb
pop
push
jecxz
loop
lret
xor
das
insb
cmp
xor
stos
stos
out
ret
nop
add
or
loop
adc
scas
dec
sub
add
daa
cmc
int3
xchg
into
xchg
cmp
fldl
fld1
in
shll
mov
fcmovnbe
dec
adc
and
int3
xchg
les
icebp
mov
cs
cli
outsb
loope
jecxz
jbe
and
cwtl
js
clc
inc
fwait
daa
jmp
dec
xchg
dec
pop
ret
cmp
sbb
inc
inc
in
cmp
jle
fnstenv
gs
in
fnsave
pop
mov
popf
in
pop
int3
cld
dec
dec
jge
ja
cmp
nop
stos
jno
xor
hlt
xor
loopne
adc
jge
popa
divl
add
sub
decb
int
call
cmpsl
add
mov
mov
es
sbb
lret
iret
stc
gs
cltd
notb
sub
cmpsl
test
add
push
iret
mov
adc
cmc
jno
mov
or
xchg
mov
add
movsl
add
mov
sbb
dec
mov
loopne
das
push
hlt
push
fdivrs
arpl
in
push
testl
dec
pusha
adc
add
in
sub
xor
leave
jnp
ret
shr
pop
push
sub
hlt
sbb
jbe
xor
stos
xchg
clc
repz
enter
je
xchg
ja
lods
sub
inc
orl
into
mov
dec
cltd
sbb
inc
sarb
mov
sbb
andl
pop
xchg
movsb
outsb
mov
fsqrt
int3
jmp
and
jb
leave
pop
xor
popf
mov
dec
lea
or
ficompl
mov
ja
fbstp
xlat
mov
jl
pop
imul
mov
jl
or
adc
push
pop
cwtl
in
ds
int
push
loop
loopne
test
xchg
addr16
icebp
imul
repz
shrl
mov
mov
into
lret
adc
cltd
dec
repz
popl
xchg
adc
pop
push
jns
shll
mov
out
outsl
bound
xchg
cmp
xor
jge
lods
lret
jl
or
fucomp
mov
mov
jl
adc
lret
mov
mov
test
shl
mov
in
push
xorl
leave
ljmp
xchg
and
cmpsb
adc
loop
gs
mov
pop
mov
movsb
cwtl
lock
push
fnstcw
sti
test
js
adc
mov
loopne
push
mov
xor
cmc
int3
addb
mov
jnp
jg
ja
ret
sub
fxch
sub
insl
jl
pop
xor
pushf
in
push
loopne
loop
xor
and
jnp
pop
dec
imul
push
pop
and
mov
test
mov
add
jl
inc
mov
xor
scas
fnstcw
and
push
sub
inc
lea
jns
clc
jp
popf
mov
or
mov
and
scas
or
jb
cmpsl
int3
mov
leave
mov
test
aaa
lret
push
faddl
mov
and
adc
lea
out
sub
pop
loope
xchg
or
lock
mov
aam
test
xor
dec
std
fxch
es
xchg
nop
test
test
pop
sti
pop
stos
sub
pop
xchg
popf
loope
xchg
adc
imul
lds
mov
fcomp
out
repnz
je,pn
cmpl
jg
fbstp
adc
sbb
cmp
pop
sub
imul
jge
xchg
mov
icebp
leave
out
sar
mov
lock
ret
ljmp
mov
pop
jbe
and
mov
insl
cmpsl
jg
pop
test
or
xchg
lcall
jb
jnp
dec
pop
jb
pushf
loop
dec
das
dec
aaa
push
cld
push
cmp
repz
nop
xchg
in
pop
adc
jle
nop
test
fcmovnu
or
jg
or
sbb
add
leave
fldenv
dec
or
dec
xchg
push
jl
lock
jge
sbbl
inc
mov
cmpsb
sarb
sarb
jge
daa
nop
pop
ds
popa
scas
fwait
sti
pop
dec
aas
hlt
mov
sahf
flds
cpuid
push
sarb
outsl
mov
mov
ret
adc
mov
pop
push
jno
fsincos
cmpsb
inc
icebp
dec
movsb
dec
repnz
sub
sub
and
pop
lret
pop
lds
neg
inc
repz
xor
int
shrb
scas
xor
mov
sti
sti
cmp
inc
mov
fwait
jl
sub
mov
push
mov
gs
xchg
rcr
xor
test
push
xor
or
mov
add
or
ds
fnsave
xchg
push
pop
sub
jnp
sub
jnp
es
sarb
iret
push
xor
xchg
cmpsb
fdivs
mov
test
jo
push
sbb
inc
fwait
outsb
nop
or
nop
jo
in
mov
push
or
push
shlb
test
in
jp
es
push
in
adc
jmp
jnp
lcall
or
daa
push
mov
insb
inc
out
fsubl
int
orl
cltd
pop
fidivl
jb
cmp
cmp
sbb
mov
out
ret
loope
popa
push
push
jb
sti
or
dec
mov
leave
dec
push
pop
sub
cmp
in
cmp
loope
sub
popf
sub
pushf
xor
ljmp
dec
enter
or
mov
aad
test
or
xchg
push
icebp
das
mov
pop
int3
adc
ds
mov
pop
push
and
lret
push
or
xchg
mov
enter
xorb
pushf
mov
adc
loop
jle
mov
jne
pop
adc
adc
and
jo
fs
std
xor
addr16
into
jle
mov
add
inc
aaa
lcall
xchg
mov
sbbl
or
mov
and
mov
jae
in
lods
call
xlat
xor
aam
icebp
mov
pop
jb
pop
sub
fsts
push
add
nop
insb
adc
sti
fstpl
xchg
cmp
fs
adc
cmpsb
cmp
enter
shlb
push
inc
orl
jmp
xchg
dec
xchg
push
mov
xchg
xor
xchg
push
cmp
dec
mov
out
fcoms
mov
out
xchg
ja
jo
jae
pushf
fdivr
inc
lcall
xor
outsl
cmp
mov
and
mov
adc
imul
lods
or
gs
int
stos
mov
add
mov
or
in
mov
jno
iret
adc
jle
add
je
loop
ljmp
or
stos
popf
popf
loop
cmp
notl
mov
sar
outsb
cmc
adc
push
je
pop
xlat
ljmp
dec
mov
mov
fisttps
leave
mov
repz
cmc
loop
mov
std
cmp
scas
imul
cmp
push
leave
mov
push
in
pop
call
dec
cmp
bnd
adc
push
pop
mov
cwtl
xchg
cmp
or
jle
xor
popf
in
in
jle
scas
or
and
adc
mov
cmp
inc
inc
jo
enter
test
inc
dec
sbb
mov
push
cs
test
xchg
jp
add
xlat
or
repnz
mov
dec
pop
xor
nop
idivb
jne
and
in
scas
pop
lret
dec
std
mov
aam
adc
xchg
jne
scas
into
xor
or
jno
pop
dec
in
mov
inc
jnp
pop
orl
ret
push
adc
insl
fadds
jp
xlat
movsl
adc
in
jbe
ds
inc
jne
lret
jmp
arpl
mov
dec
fs
cli
adc
xor
ljmp
stc
in
cmp
aas
add
in
mov
fdivrl
dec
rclb
fimuls
add
and
fwait
xor
mov
mov
dec
lods
test
mov
xor
mov
pop
cmc
mov
push
popa
pusha
das
insl
std
sti
push
aas
ret
bound
aam
jmp
push
int
cli
dec
ljmp
repz
adc
lods
pop
lds
ret
mov
xchg
aaa
imul
mov
xor
add
and
sbb
mov
xor
test
or
leave
les
cltd
scas
ljmp
xchg
jg
add
mov
pop
pushf
fisubrs
mov
sbb
mov
pop
sub
mov
adc
sbb
hlt
cmp
mov
jne
dec
lods
xor
jbe
out
out
pushf
cmp
push
int3
aad
jge
push
push
xor
pop
shrb
xor
fstl
stos
dec
scas
insl
and
sub
sub
lds
jne
push
add
shrb
mov
pushf
daa
cmpsl
dec
xchg
lahf
pop
out
ss
cmp
cwtl
pop
sahf
sarl
and
cmpsb
add
cmp
popa
sarb
xchg
sub
push
fistps
mov
mov
pop
shl
mov
adc
cmp
push
fs
cmp
icebp
pop
rolb
repz
pop
repz
dec
dec
cmp
or
mov
inc
bound
sbb
jno
push
lret
mov
inc
dec
imul
fsubr
pop
and
ja
fwait
adc
cmc
leave
cld
add
jecxz
jo
jge
xor
push
cmp
out
scas
stc
jmp
mov
jo
adc
mov
pop
jp
xor
js
push
test
in
push
ja
pushl
jp
jno
ror
es
js
ret
add
pop
xchg
data16
icebp
xchg
and
in
or
mov
test
mov
lds
cmc
adc
mov
dec
aam
xor
jmp
mov
bound
push
out
cmp
sbb
sarb
bound
ss
xrelease
fs
lds
jbe
outsb
loopne
into
andb
push
jae
push
dec
jae
repz
and
cli
ss
subl
out
in
subb
cmp
push
lahf
push
clc
cmp
push
pop
fildll
pop
and
sahf
daa
es
dec
ret
dec
cmp
jns
adc
ret
sahf
pusha
movzbl
mov
loope
push
rolb
cs
shlb
dec
stos
outsb
dec
repz
outsb
mov
push
lcall
mov
jge
mov
xchg
dec
lods
ja
xor
fisttpl
andb
aam
jo
scas
cmpsb
cmp
push
ljmp
mov
xchg
adc
out
test
je
xchg
jnp
mov
jl
add
jmp
sub
mov
test
aam
jg
pop
clc
out
push
push
popf
lock
and
nop
or
xchg
je
cwtl
pop
fcmovu
mov
sub
mov
out
js
cmp
mov
cmpsb
and
cmpl
loop
mov
and
gs
addl
fsubrs
les
mov
rcpps
rcl
mov
out
cmpsb
pop
mov
mov
push
cs
arpl
mov
push
enter
mov
stos
or
dec
jns
add
test
or
pop
aas
mov
js
shlb
scas
or
dec
repnz
lahf
pop
add
sbb
jg
int3
movsb
loopne
push
and
in
test
jmp
xor
ret
dec
leave
test
or
mov
mov
repz
jno
orl
fiaddl
pop
shrl
iret
enter
outsl
jo
dec
in
inc
mov
imulb
mov
movl
jo
adc
dec
inc
mov
inc
std
pop
in
sbb
testb
das
jns
adc
sub
psubq
mov
xchg
mov
cmp
sbb
xchg
or
mov
xor
push
lock
jl
xor
adcb
sub
sbb
lods
pusha
inc
and
subl
pop
das
lret
loop
fisttpl
push
push
int3
push
cltd
jle
les
insl
push
daa
cmp
lret
push
mov
sub
pop
in
ljmp
lret
scas
mov
ljmp
jmp
mov
dec
add
js
mov
mov
imul
or
cltd
lahf
lahf
stos
xor
popa
inc
int
movsl
and
inc
jns
je
cmp
xor
lret
adc
hlt
xchg
mov
mov
cmp
iret
sbb
add
cmc
test
adc
dec
popf
aas
lahf
stos
mov
leave
sbb
mov
movsl
jns
lock
mov
push
mov
mov
xchg
insl
cwtl
loopne
mov
dec
lea
std
repz
sbb
insl
subb
leave
mov
xor
test
cmp
lret
or
inc
sbb
hlt
push
xor
dec
jbe
fsts
test
fstps
adc
jb
jb
fwait
andl
sti
adc
jp
sbb
xchg
add
loope
xchg
inc
ret
adc
loopne
cmpsb
in
into
and
lcall
in
xlat
dec
test
mov
lcall
push
mov
fucomi
out
shl
mov
arpl
es
pop
js
pop
pop
dec
add
test
or
cmp
pusha
pop
push
jb
lahf
mov
inc
push
dec
neg
sti
push
pop
pop
jmp
mov
mov
ljmp
into
adc
jo
adc
inc
adc
inc
into
mov
das
and
cmpsl
ljmp
std
lods
pushf
fwait
sub
dec
fnstenv
dec
inc
shlb
int
dec
outsl
pop
push
adc
xchg
sbb
es
and
inc
cmpsl
inc
add
inc
adc
push
or
aam
lods
adc
and
mov
add
out
ja
orb
lds
sbb
scas
push
inc
fs
outsb
xchg
mov
fldcw
test
sbb
mov
jns
ds
into
pop
pop
push
pop
cli
lods
sub
out
mov
sti
dec
jp
xor
imul
mov
pop
pop
aam
cmc
mov
cli
in
fdivrl
sbb
xchg
mov
sub
cld
or
aas
mov
cmp
fstps
mov
iret
cmc
les
lret
xor
inc
out
cld
leave
mov
sahf
cli
out
std
sub
and
pop
dec
add
add
sahf
cli
loop
cmp
test
sub
sub
push
pop
enter
jl
mov
lret
xchg
inc
shlb
sub
mov
mov
jbe
mov
orb
lock
xchg
push
leave
das
das
sarl
mov
jl
cmpsb
sub
addr16
lods
mov
cli
test
and
scas
jns
sahf
mov
sbb
push
adc
mov
in
mov
add
in
rorl
test
int
in
jmp
iret
push
jmp
out
aaa
std
fwait
xlat
mov
inc
out
mov
imul
jle
outsb
mov
test
add
mov
push
aaa
jmp
or
rclb
push
out
mov
cmp
inc
pop
inc
push
add
mov
int3
test
xchg
sub
in
lcall
jb
aaa
movsb
loopne
sub
shll
cmp
add
ss
mov
lret
push
cli
hlt
test
jl
movl
sbb
dec
push
fs
add
dec
mov
lahf
xchg
pop
bound
std
xchg
inc
nop
shll
arpl
cmova
inc
push
test
xor
jmp
and
or
push
and
icebp
push
inc
mov
mov
sub
jg
or
repz
dec
cmp
ret
xor
aas
int
shr
push
das
sbb
aad
mov
outsb
inc
enter
jmp
and
inc
ja
sub
mov
add
test
or
push
pop
dec
dec
push
je
xor
add
fldcw
aas
lods
mov
insl
fwait
jecxz
aam
xchg
jb
sbb
xchg
clc
inc
icebp
dec
iret
pop
push
cmp
rclb
fisubrl
dec
mov
xchg
add
cs
jns
add
hlt
add
xchg
imul
sub
fldl
fmuls
jg
add
mov
mulb
fsubs
add
mov
insl
mov
pop
test
mov
sub
rcll
aam
mov
je
ret
dec
leave
js
xor
add
outsb
push
push
rcll
mov
push
push
imul
cmp
mov
push
fdivrs
movsl
adc
xchg
mov
jle
add
xor
mov
xchg
test
add
dec
jnp
rolb
and
stos
mul
sbb
push
ja
lahf
push
pop
shlb
or
iret
pop
sbb
push
push
mov
in
iret
jp
out
sub
xor
or
adc
xchg
xor
iret
cmp
in
lea
push
or
add
push
repnz
bound
das
push
mov
mov
add
sti
adc
pop
out
jge
mov
mov
jmp
sub
push
hlt
lods
dec
in
jnp
mov
idivl
inc
push
mov
sub
fcmovbe
not
xor
cmp
rolb
pop
dec
xlat
xor
idivl
pushf
outsb
sbbb
xchg
adcb
push
scas
xor
cmp
mov
movsb
xor
push
mov
vmovddup
cmp
add
cbtw
or
in
adc
dec
outsb
into
ds
pop
lret
lds
pop
push
outsl
fidivrs
mov
cmp
add
aaa
bound
data16
push
ja
sahf
icebp
cli
mov
out
push
or
xchg
cmp
ljmp
je
fldl
add
scas
call
and
xor
or
shlb
and
sub
cmp
sbb
fsts
mov
jecxz
mov
clc
scas
mov
das
lea
pop
lsl
inc
icebp
mov
jbe
sbb
dec
stos
cmpl
movsl
or
lods
mov
pop
in
mov
enter
adc
nop
inc
mov
arpl
ljmp
or
cs
xchg
inc
outsb
jb
xor
mov
jecxz
rorb
pop
pop
mov
dec
int
inc
mov
fldcw
data16
dec
push
pop
cwtl
pusha
sub
xlat
add
ficoms
inc
sub
fmul
mov
std
mov
adcb
lret
mov
jl
test
sbb
mov
jge
leave
pop
loop
inc
cli
jg
pop
fsubrl
pusha
xor
pop
out
mov
stos
fdivrl
fdivrl
sbb
cmp
sub
and
push
and
mov
and
mov
xchg
mov
xor
rorl
mov
cltd
mov
sub
imul
cmp
xchg
ret
fstp
cs
pop
inc
or
sbb
iret
scas
out
cltd
aad
jl
arpl
movsl
aaa
aaa
push
pusha
cmpl
xchg
jle
push
sub
notb
jecxz
aad
movsl
dec
cmp
xchg
popf
stos
sahf
mov
int
xchg
pop
ljmp
and
int
adc
cmpsb
sbb
adc
cmp
mov
push
mov
cwtl
adc
addr16
lahf
jg
test
int3
jns
sahf
dec
mov
stos
jb
into
mov
mov
push
lahf
test
ret
xor
insl
cli
scas
stos
lret
and
loop
shll
push
add
xor
push
aas
inc
pop
xor
gs
cmc
cmp
and
mov
cmpsb
xorb
jge
sbb
fs
fdiv
test
xchg
push
stos
mov
push
repz
loop
jp
insl
out
out
sbb
xorb
lods
mov
sub
dec
push
sbb
cmpb
xor
and
fs
insb
push
and
ficoms
add
cmp
adc
pop
cltd
stc
std
in
jge
mov
or
jmp
add
mov
dec
mov
mov
loopne
jnp
lret
or
lahf
lcall
mov
and
mov
dec
sbb
stos
lcall
imul
pop
push
jae
and
mov
and
sbb
adc
inc
mov
repnz
pop
xchg
mov
pop
jns
cmpsl
jge
or
mov
arpl
nop
orb
or
push
push
xchg
push
pop
lods
adc
fmulp
lods
gs
cmp
sbb
test
lods
repz
sbb
lock
je
out
or
and
ret
enter
cmp
xchg
xchg
jae
sbb
sbb
loope
pop
shll
mov
xlat
gs
nop
aam
mov
out
ljmp
cmp
ljmp
ja
pop
push
ficomps
int3
mov
cmpsl
xchg
push
mov
popf
pop
jb
mov
call
scas
cmp
lds
and
and
pop
jmp
cwtl
fcmovnb
loopne
movsb
outsb
cld
sub
addb
mov
nop
aam
mov
stos
mov
decl
jno
loopne
icebp
push
inc
daa
adc
movsl
mov
ret
jg
inc
inc
mov
es
pop
shrl
jb
cmp
push
adc
clc
dec
dec
ficompl
push
and
jmp
cltd
sbb
mov
scas
push
adc
pop
jnp
pop
rcll
sbb
mov
das
xchg
lds
sbb
ror
mov
pop
or
push
stos
xchg
or
daa
dec
xor
jae
outsl
inc
jo
fnstenvs
movsb
push
fistps
or
dec
ret
mov
mov
out
out
inc
sub
xchg
lea
mov
outsb
push
mov
mov
or
mov
pusha
jl
cmp
xlat
retw
jno
sbb
aad
dec
dec
adc
cmp
push
xchg
xor
or
aam
mov
lods
and
std
xchg
mov
jl
mov
mov
std
das
std
xchg
movl
popa
clc
adc
mov
pop
pop
int
cmpsl
fdiv
idivb
jns
xchg
or
inc
cli
ucomiss
popf
and
int3
sti
clc
jb
push
fimull
sbbb
inc
dec
jmp
xchg
add
jnp
adc
test
jg
test
jns
adc
mov
jae
pop
add
lds
lods
insl
dec
xchg
add
xchg
dec
lret
or
mov
pop
xchg
ret
mov
imul
dec
flds
fists
out
lret
and
or
sarl
xor
call
add
fs
dec
lock
inc
mov
and
add
mov
xor
mov
jo
test
dec
lcall
pop
fwait
lfs
mov
mov
sti
gs
sahf
in
test
test
or
lahf
adcl
icebp
loop
xor
les
shlb
sbb
loope
lret
add
pop
inc
jnp
xor
sahf
mov
jns
addr16
pop
scas
pop
pop
arpl
roll
pop
dec
push
inc
lret
lds
sub
mov
icebp
pop
mov
repz
fwait
or
cltd
mov
or
je
es
nop
mov
mov
push
in
xor
es
pushl
jecxz
psubsw
nop
lock
xor
hlt
in
pop
mov
mov
fwait
lcall
scas
cmpsl
cmp
jp
xchg
ss
insl
cmc
fcoml
cmp
add
outsl
adc
xchg
loop
jno
aas
sub
dec
imul
jb
fadds
mov
jmp
dec
sbb
scas
xchg
add
xchg
dec
into
das
fnstenv
insb
sub
xor
push
push
mov
push
xchg
push
adc
and
test
push
sub
sbb
xchg
inc
in
and
mov
jg
cmp
sub
fidivs
push
fidivs
subl
or
addb
pop
imul
lds
and
mov
mov
mov
dec
aam
clc
push
push
outsb
jg
fstp
aad
mov
add
push
dec
cmp
xchg
xorl
pop
add
and
mov
mov
sarb
add
jns
xor
shlb
adc
incl
jl
xchg
sub
aam
sbb
loop
mov
in
ret
lret
leave
imulb
mov
addr16
xchg
fsubp
out
mov
in
sbbl
cmp
cld
mov
push
jae
inc
pop
push
stos
test
mov
das
inc
push
into
mov
sub
dec
sahf
repnz
mov
adc
mov
xchg
pop
mov
pop
insb
push
jmp
inc
adc
subps
sarb
fcomps
test
jecxz
repz
cmp
push
sbb
push
add
mov
push
cmp
sbb
mov
sbb
jnp
cld
sub
decb
adc
sar
xchg
jns
sarb
add
aaa
pop
mov
aaa
stos
mov
xchg
pop
nop
or
lcall
rorb
jle
pop
or
aad
jg
lods
shll
out
int3
jp
fcomi
int3
xchg
adc
sub
and
gs
dec
sbbl
sbbl
jg
and
popa
jo
sub
insl
addl
mov
sub
in
loopne
jnp
lock
mov
lahf
dec
inc
insl
fisttpll
push
inc
faddl
hlt
setne
movsbl
test
jecxz
xchg
dec
addr16
sub
xor
or
adcl
jb
cmp
dec
add
xchg
cmp
dec
mov
add
jp
xchg
insl
jl
cmp
adc
decl
and
inc
lret
imul
pop
cmp
and
sbbb
add
pop
pop
shrl
pop
in
loope
jns
push
fmull
test
clc
mov
pop
cmp
repz
pop
cld
push
cli
lcall
popa
jns
into
in
xchg
xchg
xchg
out
fbld
repz
xchg
xor
fwait
das
push
std
mov
or
push
mov
aam
mov
in
jae
shlb
sti
mov
inc
es
lods
xchg
inc
fmulp
dec
in
fs
xor
xor
xor
xchg
lahf
inc
and
jecxz
mov
adc
or
fstpl
dec
xor
mov
cli
lcall
jmp
shl
js
shr
test
mov
mov
push
shrb
and
sbb
sti
repz
call
shl
shll
and
fucomp
sub
or
aam
insb
jmp
stc
inc
fs
hlt
push
mov
js
push
xor
mov
adc
arpl
xor
cmp
sbb
dec
cmp
xor
shl
testl
popf
gs
lret
scas
xor
ret
int
insb
sarb
push
into
pop
out
lahf
mov
adc
sub
in
sbb
jmp
and
sbb
push
push
mov
lea
jecxz
push
push
insb
push
add
scas
push
mov
loopne
mov
and
xchg
jb
stos
xchg
loopne
and
addr16
jge
imul
push
in
shrl
fs
mov
dec
cs
test
cli
test
sbb
je
add
lock
mov
push
test
cmp
jne
lods
in
xor
cmp
das
cld
sub
xchg
jae
jl
nop
xchg
mov
sbb
insb
xor
orb
subb
leave
pop
jmp
cmpxchg
rcl
mov
inc
shl
push
fbstp
repnz
shlb
lods
js
js
loopne
pop
adc
push
fstpt
inc
andl
cmpb
movsb
dec
sbb
jnp
xor
xchg
cld
mov
mov
or
or
aam
sahf
imul
movsb
push
or
sub
mov
and
sbb
repz
jo
fildll
loopne
cli
dec
mov
inc
sub
or
adc
mov
fldt
dec
bound
xchg
pop
and
ret
mov
mov
xchg
movsb
jo
mov
pop
push
pop
int3
and
xorps
stos
roll
pop
imulb
sub
push
lahf
mov
pop
ret
repz
aas
int
dec
jo
rorb
mov
cmpb
sti
sub
or
dec
fldcw
xor
mov
adc
pop
cmc
jmp
pop
pop
mov
nop
ds
or
ror
xchg
cmp
cmpsl
cmp
push
ja
adc
enter
mov
sub
insl
ficoms
cmpsl
sbb
pop
dec
sbb
test
test
in
seto
dec
or
lock
stc
xor
xor
lcall
clc
loop
sub
and
dec
mov
push
and
cmpsl
jnp
dec
cld
shll
scas
repnz
ja
adc
pop
pop
dec
pushf
lock
nop
lret
insb
mov
out
mov
sbb
std
sahf
and
sbb
sub
and
push
xchg
rclb
mov
jne
fimull
pop
sarb
push
rcrb
shll
mov
or
push
sbb
addr16
pusha
xor
sbb
in
pop
aas
cmovae
push
std
sbb
mov
fisubs
out
mov
cmp
dec
jmp
push
pusha
mov
nop
mov
sbb
popa
ljmp
pop
fmuls
or
addr16
jmp
inc
inc
lock
aad
inc
push
jo
ret
shl
inc
xchg
mov
xchg
or
cmp
scas
inc
out
test
and
adc
jmp
mov
push
adc
jo
fnsave
fdivrs
push
push
mov
in
push
pop
mov
fidivrs
xchg
mov
adc
mov
in
imul
stos
pop
mov
mov
sub
imull
cmpsb
mov
add
scas
bnd
xor
push
loopne
push
mov
sub
cld
lods
sbbl
xor
call
lods
out
mov
aam
int
or
fmull
aaa
pop
sub
cmp
jae
adc
shll
push
aam
imul
sub
push
xchg
scas
outsb
imul
push
inc
mov
jbe
mov
mov
push
dec
mov
mov
stc
idivb
pop
sub
inc
cmpsb
push
lret
sub
or
or
push
lds
jecxz
fcompl
cltd
in
call
in
arpl
fdivrl
push
sub
nop
leave
lods
sub
mov
arpl
mov
jb
push
inc
jbe
xchg
cs
blsic
and
fcompl
lret
lock
lcall
xor
or
cs
pop
and
lret
adc
fwait
mov
ja
sbb
imull
rsm
mov
stc
movsl
int3
pop
jb
pop
out
add
rcl
mov
enter
jae
in
sbb
mov
daa
fidivs
aaa
pop
pop
mov
es
icebp
sbb
into
cs
pop
jge
out
sbb
daa
jl
into
pop
stos
inc
mov
movsl
repz
mov
xor
pop
cmp
jne
jp
imul
pusha
pop
mov
shll
push
mov
int3
es
icebp
test
mov
mov
lahf
sbb
mov
dec
je
xor
sub
add
mov
or
cmc
pop
pop
jnp
pop
insl
mov
jg
add
ja
mov
inc
jge
push
push
insb
mov
shlb
cs
loop
adcl
pop
xchg
add
mov
adc
push
movsb
xchg
adcb
test
push
stc
push
insl
test
jmp
int3
push
fmul
es
jmp
jne
aas
mov
cmp
and
xor
push
ss
sbb
cwtl
xor
pop
js
and
popa
mov
out
testl
sub
out
cmp
sahf
dec
outsb
sub
sbb
ljmp
arpl
or
out
xor
nop
xchg
pop
dec
cmpsl
dec
movsl
mov
xchg
into
rcll
mov
add
xchg
mov
int
fsubl
repz
push
pusha
dec
mov
add
or
mov
xlat
xchg
lods
retw
jns
sub
xor
inc
repnz
inc
icebp
paddw
dec
sbb
fisubl
mov
movsb
mov
xor
push
aas
jbe
icebp
repz
outsb
add
push
adc
mov
jno
roll
push
stc
shrb
and
fxch
xor
out
sbbb
shl
dec
mov
add
sbbb
pop
xor
out
in
mov
adc
mov
lret
or
js
xchg
sub
pop
mov
jns
in
adc
and
lahf
in
mov
lds
pop
popf
pushf
fsubrs
rolb
pop
inc
sbb
mov
jecxz
xchg
push
and
and
icebp
mov
out
adcb
sbb
cwtl
into
mov
mov
pop
leave
mov
mov
pop
imul
jle
adc
les
mov
popf
imull
pop
or
add
mov
testl
cmp
insb
repz
or
add
jge
add
inc
sar
add
loop
and
xor
xor
sub
ret
pop
and
dec
fldenv
push
stos
int3
divl
sbb
push
movsl
xor
mov
mov
lahf
dec
shrb
daa
cmp
inc
sub
inc
xchg
stc
jge
mov
fisubs
pop
test
ret
movsl
sub
mov
hlt
xchg
pushf
imul
stos
adc
mov
push
dec
push
xchg
mov
fnsave
mov
and
push
cmp
sub
xlat
xor
insb
in
pop
nop
in
sbb
pop
adc
pop
lods
inc
pop
mov
js
jae
xchg
int3
and
jmp
dec
add
jg
add
inc
lret
xor
xchg
jb
pop
lcall
out
pop
mov
adc
cmp
out
test
inc
sbb
in
pop
inc
adc
cld
jle
sbb
out
jl
xor
mov
or
mov
dec
icebp
dec
xchg
lods
fsub
adc
scas
sbb
sbb
jae
sub
adc
out
cmp
jb
fsubrl
stc
ds
shrl
mov
sub
xchg
inc
sbb
adc
std
lds
push
sbb
ret
iret
mov
in
es
push
enter
ret
jbe
in
das
mov
pop
push
ds
push
jle
inc
mov
and
push
mov
xchg
stc
sub
inc
mov
inc
out
dec
or
lret
and
mov
cmp
movsl
xor
andb
fmuls
fsubrl
mov
in
jb
xor
rcr
jo
outsl
fcmovne
mov
leave
xchg
aam
into
and
nop
pop
cs
inc
cmp
shlb
mov
mov
push
adc
cmpsl
iret
lret
lret
cmpsb
inc
loop
testl
and
pop
add
xlat
sub
fs
cwtl
mov
sbb
jnp
mov
loopne
dec
test
sub
and
or
daa
sub
xor
pop
add
adc
push
cld
sbb
test
sub
es
subl
push
nop
push
bound
adc
in
mov
or
sbb
sub
cltd
stos
mov
scas
cmp
insl
lds
sub
orl
int3
fcmovbe
int
sub
xchg
hlt
and
aam
pusha
jo
stos
loop
mov
xlat
fsubs
loop
repz
and
mov
sbb
sub
daa
lret
jge
inc
adc
inc
dec
xchg
inc
mov
ss
add
push
movsb
xchg
push
dec
faddl
cs
lahf
mov
adc
loopne
leave
imul
movsb
jb
sub
mov
iret
cmc
push
loop
ljmp
xor
pop
mov
mov
sub
int3
mov
daa
dec
push
mov
or
rcrl
pop
inc
sbb
mov
mov
gs
xor
pushf
popa
ficoml
arpl
out
ret
sub
xlat
pop
subl
rcrl
add
pop
sarl
sarl
cmp
push
xor
loop
sub
iret
mov
push
aam
in
cmp
cmc
sub
das
int
inc
ficoml
mov
xchg
or
neg
inc
std
je
push
push
rcl
xchg
outsb
mov
cltd
popf
push
jmp
and
lods
jbe
cmpsb
rorl
add
push
lcall
fcomip
cmp
inc
cmc
mov
sarb
mov
repnz
pop
stos
shll
dec
cmp
mov
inc
out
movsb
mov
adc
lea
xlat
xchg
imul
shll
dec
or
rorb
outsl
stc
and
lock
mov
and
lea
lret
out
incl
push
mov
inc
std
add
xor
pop
fsin
add
jg
shlb
mov
add
fcomps
imul
je
jg
ficomps
lahf
sbb
push
jne
jg
push
out
pushf
out
lret
ja
adc
popf
inc
test
int3
mov
pop
cmp
xchg
sbb
mov
out
dec
sub
in
add
xchg
fwait
sbb
sbb
lret
lods
xor
sti
xor
cmp
xlat
aam
and
xor
aaa
push
mov
sbb
jne
cmp
mov
and
pop
arpl
pop
scas
ret
loope
dec
into
outsl
and
out
cmp
std
in
cmp
movsl
sbb
xor
mov
adc
sbb
push
outsl
fs
sbb
mov
ret
xchg
push
push
inc
ljmp
sbb
add
jno
mov
cmpsl
daa
adc
iret
sbb
fldcw
ficoml
mov
sbb
mov
add
xchg
or
fists
xchg
add
mov
mov
ja
rcrl
lret
inc
out
jle
jp
lahf
daa
cmp
mov
jne
xchg
movsb
push
outsl
loopne
movsl
jne
sbb
mov
call
add
lret
lods
dec
jp
fs
inc
jecxz
fsubrl
adc
out
jae
fadds
ss
cltd
add
mov
push
pop
ret
and
loopne
fsubr
jo
rcrb
dec
jge
cmp
in
cmpl
xchg
adc
sub
cli
imul
mov
fs
pop
mov
cmp
aaa
jg
ret
fwait
jg
loopne
lock
in
pop
xchg
iret
mov
popa
push
sahf
xor
jo
dec
rcll
jle
mov
inc
sar
mov
mov
xchg
jb
cmp
cmp
fnstenv
outsl
test
inc
cld
and
aam
addr16
adc
bound
pop
jbe
imul
cwtl
mul
imul
cmp
sti
mov
scas
adc
xchg
stos
out
ret
lea
test
enter
lcall
dec
cmp
add
in
jb
lret
xchg
cs
pop
pop
fdivl
popf
cli
bound
ds
sbb
jmp
mov
dec
ja
push
inc
push
cs
mov
scas
xor
out
adc
das
into
sub
popf
ljmp
jns
mov
mov
ja
xchg
jecxz
xchg
jo
ljmp
rcrl
add
mov
aas
sti
pop
xchg
pushf
imul
adc
int
pop
inc
ja
hlt
rorb
jne
jnp,pn
xor
aam
fwait
jle
mov
pop
test
hlt
xor
mov
mov
add
pop
ljmp
fidivrl
and
out
test
test
push
insl
jl
pusha
in
ret
shlb
or
sub
lock
aas
insl
push
cs
cmp
pop
fcmove
add
mov
ja
or
setg
xor
ror
jg
pop
inc
fstpt
mov
stos
scas
inc
lods
add
dec
test
inc
inc
xor
es
in
cld
pop
cmp
cmc
stc
dec
in
out
xor
or
ret
icebp
jl
push
aaa
out
xor
jg
insb
mov
dec
jns
mov
or
add
in
iret
cmc
scas
pop
xor
fmull
cmp
mov
add
imul
push
fimuls
dec
test
sub
lods
adc
aaa
fwait
and
inc
mov
cmp
fldt
fcompl
jle
adc
addr16
and
loope
outsl
mov
jmp
jns
inc
dec
std
sbb
cli
xchg
ja
inc
sbb
or
cmc
mov
xchg
inc
inc
rclb
and
fsubs
in
xchg
mov
push
insl
int
jg
popf
sbb
cmc
sub
mov
jmp
pop
jmp
std
imul
xchg
stc
rolb
push
xorb
adc
repz
fwait
ja
in
test
dec
xor
and
scas
test
aam
adc
sbb
jbe
xchg
fwait
lock
sbb
pushf
subb
sub
or
mov
sbb
sahf
mov
leave
orb
jge
std
shlb
jmp
dec
push
push
stos
or
mov
adc
lret
and
shlw
cmp
add
inc
out
sbb
sub
ljmp
rcrl
nop
rclb
pop
fs
inc
mov
sbb
xchg
pop
loopne
mov
std
fwait
or
dec
add
popf
inc
jmp
lods
imul
mov
fisubl
subb
stos
iret
aam
andb
repz
jns
pusha
jbe
push
out
into
cltd
std
mov
les
data16
pushf
bnd
ss
sub
and
mov
mov
mov
popl
cmpsb
test
push
jp
sub
jb
movsb
sahf
fadd
je
stos
int
rcrl
adc
aas
aad
push
pop
stos
cmp
mulb
xlat
pop
sbb
mov
fdivp
arpl
sarl
adc
and
xchg
fcoml
aad
lods
push
clc
sub
scas
or
stos
cmpb
inc
sbb
aad
in
icebp
push
mov
or
and
jb
imul
punpckhbw
add
in
adc
adc
or
jle
mov
pushf
push
jmp
out
adc
data16
cmp
adc
push
les
movsl
notb
jo
test
stc
mov
push
sbb
popa
jl
jnp
mov
ss
push
data16
sub
testl
test
push
xlat
leave
sub
cmovne
pop
push
mov
push
or
lret
in
cmp
dec
sub
stos
into
jle
push
mov
xchg
scas
dec
xor
and
adc
pusha
not
cmp
or
cmp
adc
aad
fsubrl
jp
popa
sbb
jmp
mov
jecxz
sarl
leave
pop
sbb
rcll
jg
pop
xor
inc
movsl
xor
stc
dec
push
mov
jno
iret
sub
add
and
lret
add
call
fwait
xchg
xchg
xchg
cmpl
out
jne
xchg
imul
mov
or
aad
jo
pop
pop
sbb
sub
lock
pop
sti
add
sub
add
mov
pop
repz
jne
aaa
sbb
or
inc
out
inc
cmp
mov
mov
jge
clc
jge
outsb
pop
ja
mov
jmp
ficomps
fiadds
push
and
out
or
into
xor
mov
ja
dec
sbb
js
stc
arpl
movsb
jmp
xchg
mov
stos
hlt
negl
or
pop
daa
out
in
lods
xor
in
jb
clc
fcmovnbe
das
in
insb
pop
aaa
in
add
dec
xor
inc
lret
js
inc
sbb
lret
xor
push
arpl
mov
in
lock
sub
mov
cmpsl
call
and
push
dec
xchg
into
mov
or
jg
and
mov
mov
adc
mov
ds
cmp
cwtl
mov
mov
pop
push
or
scas
or
push
imul
daa
int
insl
sti
mov
xor
jbe
aad
stc
andb
pop
inc
out
pop
lret
add
adc
push
lcall
pop
dec
and
push
sbb
out
push
lret
lret
aad
out
pop
les
in
ljmp
test
xor
je
movsl
data16
mov
fwait
lret
mov
add
push
jge
jp
int3
sub
aad
dec
andl
lock
push
lods
xor
adc
mov
movsl
out
jnp
mov
push
pop
jle
pop
fwait
leave
arpl
adc
sbb
popf
cmp
mov
popa
imul
sub
int3
dec
dec
or
lods
aaa
or
jecxz
jb
ds
cltd
jnp
pop
mov
lods
test
repz
cwtl
pop
cmp
aaa
icebp
cmp
lods
push
inc
sbb
cmp
sbb
add
cld
clc
dec
fistpl
or
sub
test
xor
dec
andl
sub
sbb
cli
or
test
add
inc
xor
into
adc
mov
cli
push
frstor
push
cmp
repnz
gs
inc
test
fidivrs
mov
xchg
or
sbbl
flds
cmp
pop
fwait
xor
pop
mov
push
hlt
xor
mov
stos
inc
icebp
shrb
repz
xor
push
loop
mov
push
je
sub
jmp
mov
fwait
std
xor
fxch
popa
cmp
insl
outsb
sar
inc
test
les
daa
xor
ficomps
sub
scas
dec
sbb
ds
dec
jg
lret
and
out
cmc
negb
imul
mov
mov
jmp
stc
outsl
sbb
lea
jno
sbb
pop
mov
mov
faddp
mov
outsb
loopne
out
mov
subb
popa
loop
aas
push
push
vmovq
mov
jle
adc
pop
mov
mov
or
or
add
iret
daa
mov
je
std
push
cs
push
sbb
imul
xchg
cmc
mov
repz
cmp
insl
mov
push
stc
xchg
mov
inc
add
or
xchg
addr16
pop
cmp
scas
aam
jge
push
nop
aaa
out
sbb
xlat
lods
mov
arpl
mov
ds
sub
xchg
push
jo
jl
or
mov
jns
dec
das
scas
clc
mov
pop
mov
fidivl
xchg
repz
test
cmc
mov
mov
loop
push
test
into
dec
call
xor
popf
outsl
mov
xchg
ljmp
aam
mov
mov
cmpsb
inc
jb
sbb
sbb
out
push
or
add
xor
mov
push
xchg
jmp
sub
or
sub
add
stos
push
mov
rorl
sti
ret
ss
cmpsl
adc
xor
adc
sub
leave
call
add
scas
pop
lock
mov
cmp
pop
stc
jp
aam
popa
xor
or
sbb
test
popf
sub
mov
ja
mov
outsl
sub
adc
jg
or
sub
into
cmc
loop
cmc
mov
std
add
daa
cli
in
fcomip
sti
cmp
sahf
mov
adc
inc
loopne
xchg
xchg
lea
lock
arpl
nop
daa
pop
mov
xor
lods
scas
pop
lea
dec
pop
cmpsb
enter
gs
in
clc
scas
pop
loopne
xor
test
arpl
out
push
lea
cld
dec
xchg
popf
popa
faddl
int3
sbb
in
mov
pop
push
scas
out
cmp
pop
test
rol
or
mov
sti
nop
jp
out
mov
test
shll
inc
test
cmp
jbe
push
test
adc
repnz
adcl
mov
or
adc
stos
stc
cmp
and
lods
lds
int3
addr16
sbb
adc
jp
sub
and
data16
mov
fwait
out
pusha
mov
or
subl
adc
stc
lods
popa
mov
movsl
jns
mov
mov
adc
cld
loope
sahf
fidivrs
add
add
sbb
ds
js
clc
fwait
mov
push
arpl
push
adc
pushf
aas
cmp
push
dec
sar
push
daa
mov
jle
jecxz
std
or
push
lock
cmp
xchg
pusha
dec
lods
add
movsl
dec
xchg
cmp
or
inc
movsl
test
push
xlat
rorl
ljmp
adc
mov
test
outsb
scas
dec
adc
inc
jp
shll
lahf
cltd
cmp
xchg
insb
stos
movsl
repnz
call
stos
je
ja
jle
pop
lret
add
jo
xchg
xchg
les
lock
arpl
jae
or
mov
adc
test
add
cs
iret
aas
jmp
mov
jb
or
scas
cltd
mov
fwait
pop
pop
and
insl
add
lea
into
jge
xor
inc
pop
mov
es
cmp
xor
cli
ljmp
cmc
pop
push
cmp
in
inc
mov
jmp
jmp
scas
push
adc
insl
std
jae
and
je
std
add
sbb
shlb
test
cmp
sbb
loope
pop
jo
in
pop
mov
popf
or
xchg
pop
aaa
sbb
jns
jmp
sti
int
jnp
or
and
push
outsb
xlat
shll
repz
iret
dec
xor
sbb
dec
dec
add
jmp
repz
xor
pushf
add
xchg
xchg
daa
adc
push
subl
enter
popa
cmp
mov
out
push
and
cmpsb
fldl
dec
xchg
sahf
in
jbe
int3
test
xor
jle
xchg
add
out
bound
mov
xor
push
or
int3
dec
adc
adc
stc
xchg
test
mov
mov
xchg
adc
or
in
gs
push
fnstenv
popa
pop
pop
jne
mov
movsb
xchg
or
pushf
dec
or
sbb
cmp
jp
movsl
lret
push
inc
and
mov
mov
pop
pop
orb
in
cmp
adc
pop
mov
xor
orb
xlat
inc
dec
in
pop
pushf
inc
cmp
or
xchg
iret
pushf
xor
test
mov
push
sti
push
pop
addr16
push
iret
mov
sub
popa
bound
xor
jne
out
pop
or
or
xchg
jb
inc
inc
dec
jbe
je
stos
fstpt
fcoms
add
jp
or
xor
repnz
lcall
lds
jg
and
xchg
lds
sub
subl
arpl
lock
pushf
mov
fistpll
jl
dec
dec
fsts
jp
push
das
sbb
push
lcall
jo
gs
fwait
push
test
inc
fmulp
dec
aam
dec
xor
fcoml
add
xorb
and
imul
xlat
out
or
inc
aas
push
xor
dec
sbb
adc
cmp
ret
jnp
mov
xchg
jbe
or
pop
dec
and
bnd
insb
push
add
sub
inc
dec
and
mov
jne
stos
sbb
dec
in
test
dec
rcr
adc
push
add
jge
dec
sbb
cmp
imul
dec
xor
test
mov
sarb
cmpsl
mov
call
packsswb
xchg
fstps
mov
cli
sbb
fbstp
lret
movsl
sbb
rcll
lahf
pop
mov
mov
dec
and
in
lock
jecxz
idivl
jle
lock
pop
pop
mov
xorb
fisttps
je
aas
sbb
and
outsl
jae
or
iret
or
outsb
repz
lret
cmp
dec
adc
xor
negb
fmull
or
jne
or
adc
aam
jne
sub
cmpsl
xor
push
cmp
ja
sub
enter
or
xor
mov
sbb
sub
sahf
sub
popf
adc
and
es
xchg
mov
and
push
pusha
and
int
in
out
mov
into
imul
pushf
cmp
lods
outsb
pop
jbe
dec
dec
cmp
xchg
sub
jecxz
jl
mov
mov
enter
sub
or
pop
push
adc
push
and
pxor
adc
pop
jo
xchg
ja
filds
lret
mov
inc
imul
jge
or
jmp
mov
scas
jge
pop
jno
xlat
repnz
ret
rorb
push
push
ljmp
loopne
std
xchg
loope
lcall
mov
mov
or
in
out
sub
adcb
test
sub
xor
jecxz
or
dec
je
jb
imul
sbb
pushf
cld
enter
xor
sbb
jnp
stos
fistl
inc
pop
call
cmp
aas
mov
clc
lcall
leave
lds
inc
mov
push
cwtl
hlt
sti
push
fcompl
in
lock
jae
out
lahf
xor
divl
sub
jge
inc
jmp
adc
xor
jbe
ljmp
rclb
shll
lahf
in
mov
xor
sub
mov
pop
adc
mov
cmpsl
adc
gs
out
cmpl
adc
mov
adc
ret
scas
mov
std
in
repz
scas
jp
mov
sub
jne
mov
add
mov
aaa
sub
loope
in
out
mov
in
xor
leave
push
xchg
test
dec
xchg
xchg
lds
fsub
fs
push
nopl
jae
ss
sub
cmp
sub
addr16
adc
mov
enter
push
xchg
insl
push
adc
in
loope
jl
push
mov
test
add
mov
mov
mov
or
sub
das
repz
mov
push
std
sbb
cmpsb
aad
cwtl
inc
hlt
add
out
mov
ret
stc
addl
jo
ja
cmp
lods
cmc
or
adc
out
ja
cmc
mov
jge
bound
je
rolb
xor
dec
ljmp
cltd
xlat
bound
adc
adc
cmpsb
out
adc
xchg
insb
push
lds
movsl
mov
push
and
pop
mov
add
shll
loopne
pop
sar
in
shrl
xor
movsb
repnz
nop
mov
and
sti
jge
and
pop
out
jle
nop
cmpl
shll
cmp
scas
cwtl
scas
sbb
xor
xchg
imul
push
and
dec
das
xor
aaa
mull
or
lds
leave
cmp
lds
push
sub
inc
clc
xchg
xchg
pop
mov
fwait
pop
mov
xor
inc
xchg
xchg
out
xchg
vmread
in
sub
cs
jl
outsb
mov
adc
push
xor
adc
stos
arpl
into
or
xor
or
cmp
sbb
fbld
test
loopne
pop
dec
sti
sub
sbb
lahf
pushf
ret
icebp
xchg
fldl
ds
cmc
fstpt
insl
pop
add
adc
inc
in
repz
mov
loope
and
and
sbb
inc
ret
repnz
fstpt
sub
pop
adc
imull
cli
xchg
outsl
je
out
icebp
lds
loop
movsb
test
mov
push
dec
xor
mov
fcmovne
inc
fcoml
push
jbe
dec
cwtl
xlat
test
jecxz
daa
fidivl
mulb
in
arpl
cmp
cmp
sub
fisubl
adc
jae
ret
hlt
cmp
cmp
paddw
xor
ficompl
xor
loope
aas
pop
sbb
loop
cmpsl
dec
jmp
add
fimull
push
test
xor
aam
dec
stos
xor
fsubrs
xor
xchg
sar
out
lock
jmp
in
mov
sub
std
xor
sub
inc
sub
xor
jb
push
inc
adc
sub
push
icebp
rorl
cmpsl
inc
pusha
loope
mov
movsb
xor
andl
les
mov
mov
jp
pop
mov
pop
leave
lods
sbb
dec
into
out
cmpsl
xchg
or
cmp
dec
lret
int3
loopne
repz
pop
je
xorl
push
aad
jne
imul
ficompl
add
idiv
in
out
xchg
mov
adc
inc
sbb
cmpsb
sarl
mov
ja
add
roll
xor
mov
scas
cmc
mov
pushf
pop
out
out
insl
gs
and
cmp
sub
repnz
adc
push
fdivrs
lods
outsl
mov
xor
adc
ficoms
insb
nop
cmpsl
test
jl
pop
push
lds
cld
pop
mov
jl
mov
push
adc
addr16
inc
cli
movsl
sbb
push
mov
add
aad
pop
push
daa
icebp
lret
les
bound
sub
into
sbb
movsb
lods
and
pop
ja
add
cmpsb
add
xchg
push
sub
mov
ja
lock
fistpl
les
lock
and
cmp
jl
andb
pop
and
aaa
nop
test
rcrb
dec
sbb
std
xor
mov
and
push
sub
aam
or
xor
sub
pop
xor
adc
mov
xchg
arpl
iret
mov
test
shlb
push
mov
xchg
mov
jno
in
jo
push
out
inc
xor
push
dec
add
mov
pop
sbb
push
xor
cli
cmp
lret
dec
push
push
jl
std
dec
enter
cmp
or
aas
mov
mov
dec
stos
rclb
lock
int
xor
gs
outsl
fs
movsl
sbb
mov
inc
push
inc
lahf
lds
mov
push
push
jbe
ret
mov
div
arpl
hlt
jbe
xchg
repnz
jmp
inc
movsb
cld
out
inc
shl
cmp
out
cwtl
dec
clc
cmp
std
lret
outsb
aaa
pop
mov
js
ficomps
fmul
sub
in
loopne
test
cltd
cmp
pop
cmp
mov
repz
cs
jecxz
dec
cmp
test
cmpsb
jnp
js
mov
je
sbb
cmpsl
lret
aam
adc
and
lock
shl
rorb
pop
and
xchg
out
sbb
push
int
xor
popa
pop
xchg
jae
lods
pop
jnp
popa
xor
cmpsl
test
inc
sbb
test
xlat
push
inc
call
inc
int
divl
scas
test
jge
adc
mov
sbb
testl
lock
fs
mov
xchg
sub
es
push
pop
arpl
insb
iret
dec
loop
inc
sub
inc
fcoms
out
in
mov
mov
and
or
inc
push
mov
je
push
xchg
add
mov
lods
pop
xchg
dec
jo
js
push
jmp
pushf
fwait
mov
test
mov
cmp
push
stos
xor
pop
xor
xor
scas
xchg
rcl
ret
stos
int
aaa
stc
pop
movb
sbb
jns
test
insl
mov
ret
jg
sti
negb
xlat
fsubrs
nop
xchg
repz
jnp
shl
xchg
mov
rclb
xchg
xchg
pop
push
push
xchg
push
mov
xor
push
out
adc
pop
stos
out
and
dec
leave
sbb
jg
addl
mov
xor
testb
xchg
add
mov
dec
cmp
in
out
push
lret
mov
out
cltd
sahf
sub
xor
inc
scas
repnz
jp
sbb
xchg
stc
sub
add
lahf
cli
cltd
xlat
loope
pusha
repnz
cwtl
sub
mov
jbe
cltd
out
stos
iret
out
js
cmp
sahf
pop
cmp
and
dec
lock
xor
inc
inc
and
adc
mov
xchg
xchg
xor
shll
sahf
stos
xchg
jecxz
fsubrl
and
sub
and
or
adc
cmpsl
mov
ret
xor
xchg
push
inc
sub
test
rcll
xlat
sti
jb
adc
xchg
ja
xor
mov
xchg
push
subl
scas
outsl
mov
jno
add
mov
jp
movsb
sub
sub
jo
ja
or
mov
insl
push
xor
lret
inc
popa
sub
mov
lahf
dec
xor
mov
movsb
clc
jl
incl
mov
or
xchg
xchg
gs
push
int3
cmp
shl
sbb
mov
mov
gs
mov
cs
into
mov
iret
jns
mov
inc
lcall
mov
jae
gs
inc
push
jg
cs
push
idivb
int3
pop
imul
add
bound
cmp
je
dec
cmc
cli
mov
das
push
inc
and
cmp
aas
sbb
ret
xor
push
pop
pop
rcr
addr16
mov
xchg
mov
pushf
dec
and
sub
push
pop
xor
dec
sub
or
push
add
push
sbb
outsl
or
and
imull
mov
xchg
add
lods
or
xchg
movsl
cmpsb
outsb
sub
popa
jns,pn
enter
aam
xlat
rcll
stos
enter
dec
outsl
cmpsb
inc
movsl
or
push
and
sti
mov
pop
mov
push
ds
jo
mov
pushf
xchg
add
cmp
stos
shrb
pop
gs
inc
cmpsb
mov
pusha
aas
fisubrl
imull
lahf
es
sarl
push
stos
in
in
out
outsb
js
in
mov
imul
imul
inc
jb
mov
dec
pop
das
arpl
lds
pop
dec
cmp
cli
xchg
stos
sub
cmpsb
int
xchg
sbb
pushl
xchg
mov
fisttps
inc
das
test
adcb
mov
jecxz
xchg
jns
or
lret
push
jl
das
dec
jp
xor
je
scas
dec
xlat
mul
push
jmp
rclb
cwtl
mov
in
xor
inc
aam
daa
dec
push
or
add
mov
in
in
mov
scas
out
dec
dec
mov
cmp
addb
shll
cmpsl
sbb
clc
sbb
cmpsb
push
cld
or
cmp
mov
cld
mov
in
ds
leave
lds
mov
xor
xchg
inc
mov
inc
push
push
and
imul
xor
inc
cmpsb
jae
sbb
insl
fsubs
lock
cmp
sbb
adc
int
clc
outsl
xor
push
pop
and
mov
ds
push
add
or
movsw
daa
mov
jg
and
negl
imull
add
je
movq
aad
pusha
sub
or
or
add
mov
mov
inc
add
jb
mov
mov
pop
push
cli
xchg
sbb
sbb
mov
scas
mov
clc
pop
cmp
adc
dec
je
mov
push
xchg
xor
pop
jg
mov
mov
or
xor
dec
or
shll
imul
mov
and
into
fxam
mov
rcr
push
pop
insl
push
adc
arpl
adc
out
add
fcmovnb
jge
xor
dec
daa
jp
inc
pop
cld
faddl
aad
mov
dec
xchg
push
pop
lea
fistpl
pop
adc
and
xchg
sti
jle
push
loop
pop
add
mov
dec
or
jns
in
push
daa
jmp
xor
xor
ljmp
pop
fisttps
xchg
push
jb
pop
repnz
fisubl
out
or
icebp
cmp
pop
mov
loop
xor
cs
mov
in
inc
cmp
adcb
in
jae
ljmp
outsl
negb
out
jae
push
and
jno
stc
lea
jnp
mov
inc
or
in
cmp
push
mov
cs
andb
std
or
sbb
mov
pop
imul
sbb
jecxz
mov
insb
sbb
rcrl
pop
jae
fpatan
jbe
pushf
mov
cmp
out
fildll
lcall
cwtl
mov
loope
cmpsl
jns
imul
lods
out
adc
int3
xchg
daa
loopne
ja
les
jg
lcall
lahf
adc
mov
das
pop
mov
add
shlb
cs
mov
nop
jmp
ret
mov
adc
out
inc
scas
fidivl
and
xor
mov
outsb
imul
bound
and
and
sahf
or
scas
mov
and
xlat
dec
pop
aam
out
add
sbb
mov
jmp
enter
adc
push
movsl
addr16
pop
jp
xorl
outsl
xcrypt-cbc
cmpsl
xchg
mov
aam
divl
imul
scas
mov
inc
test
xchg
in
lock
subb
popa
cmpsl
popf
dec
xchg
jge
pop
sbb
and
rcrb
pop
call
lea
mov
popf
rcr
xchg
scas
pop
movsb
cmp
pop
cmovae
push
int3
dec
sub
pop
dec
mov
loop
jns
jbe
and
outsl
jmp
in
inc
xor
inc
jne
sti
fnsave
xchg
xchg
add
movsl
xchg
stos
cld
fsubp
lods
mov
push
cmp
hlt
pop
jmp
inc
xchg
das
clc
test
call
add
pop
cwtl
mov
pusha
int
sub
cmp
adc
pavgb
popa
mov
inc
xlat
leave
xchg
sbb
adc
loope
pop
dec
fwait
mov
jp
lahf
jp
mov
cmpsb
mov
movl
call
stc
cmp
cwtl
push
cmpsl
xor
pop
or
jbe
cmp
mov
xlat
fs
push
add
repz
or
adc
sbb
inc
andl
leave
iret
mov
bound
xchg
mov
cmpsb
mov
test
push
enter
repz
rcl
pop
add
pop
mov
adc
fwait
cmp
loop
jnp
xor
pop
jmp
jmp
mov
sbb
iret
insb
mov
inc
fsubs
jmp
push
aam
cmc
xchg
sbb
ss
shll
into
push
lea
cmp
fwait
xchg
dec
daa
icebp
dec
xchg
inc
xchg
add
lcall
nop
insl
mov
je
push
and
ret
jecxz
aam
adc
mov
mov
repnz
mov
sbb
push
pop
sbb
add
xor
add
test
inc
cmp
aas
jbe
push
cmp
cmpsb
insl
mov
mov
les
icebp
inc
data16
jle
xchg
fidivrl
sar
fsubr
and
pop
loop
adc
shll
push
push
outsl
in
xor
mov
addr16
shrl
fisttpll
fiadds
jge
out
adc
data16
js
repz
mov
popf
movsb
aad
or
xchg
ljmp
lods
jne
and
pop
pop
int
fsubl
jae
jnp
mov
mov
out
inc
shl
or
adcl
mov
jb
leave
push
cmp
mov
lahf
mov
sarb
jno
fisttpl
adc
and
lcall
pop
pop
xlat
pop
adc
inc
ljmp
xchg
dec
push
cmp
push
pop
cld
xchg
push
xor
xchg
lahf
add
sbb
and
in
dec
cwtl
sti
call
adc
mov
xor
jne
mov
hlt
sub
cli
call
or
push
and
popa
push
rorl
loopne
adc
xchg
inc
jbe
out
xor
test
pop
jg
ret
pop
add
xchg
xchg
lret
and
fidivrs
sub
inc
jecxz
clc
adc
pop
mov
aas
jae
or
or
cmc
or
mov
lahf
loop
xchg
xor
in
in
mov
pop
push
push
test
out
iret
clc
jp
jg
dec
xlat
and
das
iret
inc
add
xchg
push
test
sbb
mov
cmc
and
int
add
push
test
cwtl
sbbl
jle
sahf
xor
inc
dec
xor
out
adc
pop
dec
popf
rcrl
fnstcw
xchg
push
mov
xor
inc
pop
ds
shlb
lods
push
insb
out
mov
into
shrl
scas
xor
pushf
or
popa
test
sub
fstl
mov
cmpb
dec
push
notl
popa
dec
mov
rorl
mov
dec
xchg
into
push
pop
mov
inc
cld
push
adc
cmp
push
sub
jecxz
mov
shll
std
movsb
in
adc
stc
xchg
sti
lahf
fwait
jae
push
cli
add
sbb
in
mov
xchg
sbb
jae
sub
shlb
scas
imul
cwtl
fistpll
pop
xchg
mov
movsb
insb
push
je
aaa
pop
jle
out
mov
enter
loop
rclb
ret
fbstp
jno
es
and
dec
jp
ret
roll
addr16
bound
inc
pop
ret
push
push
pop
ss
cs
cs
sub
cwtl
cmpsl
cli
xlat
pop
bnd
push
and
inc
or
out
das
ret
xor
push
adc
xor
inc
jbe
repnz
sub
pop
and
dec
lods
repz
cmp
mov
jl
fnsave
and
movq
inc
push
lret
jbe
pop
scas
push
sub
popa
es
dec
cmpsb
lods
stc
loope
cmp
mov
xor
sbb
mov
push
mov
add
fwait
xchg
mov
push
push
mov
mov
inc
shrl
fdivrs
call
cmpb
std
xchg
dec
data16
imul
jae
push
cmc
es
icebp
jl
lret
das
sub
bnd
fdivr
outsb
shll
push
jb
xchg
xchg
add
dec
mov
or
xchg
sbb
jno
push
pop
ja
fs
out
or
mov
cs
jge
jne
loop
gs
rcrl
mov
xchg
pop
hlt
and
pop
push
add
xchg
je
sub
js
movsb
jb
add
xchg
mov
sbb
insl
std
in
cmp
mov
adc
xchg
test
xor
mov
cmp
pushw
mov
inc
mov
add
stos
mov
and
out
mov
adc
xlat
adc
jbe
pushf
xor
clc
xchg
lods
add
inc
sbb
pop
sub
inc
fisubrs
mov
repz
push
lock
mov
push
test
push
pop
lahf
inc
sti
pop
jge
and
pop
rcll
inc
xorb
inc
cmp
sbb
sbb
mov
aaa
ljmp
push
xchg
push
mov
mov
jmp
daa
jg
bound
nop
cmc
shl
aam
xor
jno
bt
sub
xchg
insb
cltd
or
jle
push
movsl
add
adc
std
push
jl
decb
mov
and
sbb
xlat
xlat
dec
int
pop
jg
push
leave
lret
inc
das
fst
push
push
arpl
sub
out
xor
cmc
icebp
daa
inc
fists
mov
les
int3
jge
aad
xchg
into
subb
adc
movsb
mov
and
andb
pop
scas
fs
pop
cmp
icebp
fiaddl
insl
push
dec
push
test
scas
in
outsl
xor
dec
mul
cmp
mov
fistpll
lcall
fists
les
mov
leave
int3
pop
pop
cmp
cmp
in
mov
push
mov
clc
cld
rcr
outsb
jp
pop
lds
add
add
rcll
jno
xchg
dec
in
xchg
jae
push
xchg
int
lods
adc
sbb
insl
out
gs
mov
inc
popa
dec
out
mov
sbb
sub
dec
xchg
insb
in
jp
ljmp
test
stos
lods
mov
inc
jnp
bound
push
scas
cmp
insl
cmpsl
jp
aas
xor
lret
push
shl
ficomps
pop
push
pop
leave
mov
cs
mov
cmp
std
sbb
les
jne
dec
or
repz
xor
pop
mov
push
fadds
jns
or
push
jl
cmp
cs
push
push
jmp
sbb
stos
cmp
ja
mov
mov
lret
arpl
pop
iret
add
jae
pushf
stc
addb
mov
mov
add
rolb
jns
fiaddl
pop
or
dec
test
stc
fidivl
and
cmp
iret
xchg
jecxz
stc
jb
push
mov
dec
xlat
mov
or
jnp
lcall
inc
cmp
addr16
jae
jge
push
cld
mov
aad
mov
leave
mov
inc
jno
lcall
aad
mov
and
rclb
mov
js
enter
out
addl
pop
mov
xor
pop
and
fistl
jb
test
fdivrl
pop
push
shl
stc
sbb
sub
lahf
andb
imulb
movsb
sbb
ja
mov
pop
repz
sbb
jb
test
mov
mov
xchg
xlat
add
mov
jno
xchg
movsl
mov
dec
mov
mov
jge
mov
pushf
and
xchg
cld
mov
add
ret
enter
push
fwait
pop
jno
outsl
popf
push
repz
ret
fwait
jmp
xchg
ljmp
or
enter
inc
xor
sbb
inc
in
mov
movb
rolb
adc
ja
subl
mov
xchg
xchg
xchg
and
outsl
loopne
add
inc
xchg
push
pop
pop
ds
movsb
in
sbb
shlb
rdpmc
les
mov
adc
xor
lock
xchg
xchg
mov
fldenv
dec
mov
inc
or
jmp
std
mov
mov
mov
jl
pop
rorb
xchg
inc
mov
or
out
mov
mov
jns
loop
jecxz
mov
aad
mov
ret
xor
push
jnp
jp
data16
xor
jnp
xchg
push
dec
xchg
mulb
ds
jmp
in
xorb
aad
ror
jb
cmc
lods
or
xchg
cltd
call
or
cwtl
shll
dec
scas
data16
xor
pushf
push
cli
xor
jne
pusha
insl
test
testb
or
push
xlat
jb
dec
xor
sub
jno
lds
xor
cmp
jne
sbbb
mov
rorb
mov
out
cmp
mov
sub
std
lock
cmp
js
xlat
popf
test
mov
or
adc
je
aaa
daa
jmp
cmpsb
inc
pop
dec
mov
mov
push
ja
xchg
enter
pop
fstpl
cmpb
jno
stos
cmp
lret
adc
popf
mov
dec
cmpsl
adcb
mov
movsl
add
or
outsl
arpl
mov
jno
sarb
bound
fistl
push
cld
jp
aam
xchg
push
or
insb
dec
push
and
int3
jle
sub
sahf
int
ds
mov
cmpsb
lret
andl
jle
push
mov
imul
clc
and
cmp
test
ds
push
add
xchg
lahf
mov
dec
in
fimuls
jp
jmp
les
jb
sub
pop
cmpsb
sub
mov
pusha
cmc
popl
loope
in
mov
and
and
gs
or
int
ret
add
mov
or
cld
xor
xor
push
out
popf
adc
inc
testb
roll
fwait
rclb
push
inc
xchg
repz
and
outsl
sti
hlt
popa
leave
js
outsl
add
sbb
pop
push
out
xor
dec
cld
add
and
out
add
push
ljmp
cmp
iret
add
xor
cmpsb
dec
and
mov
repz
es
sub
sarl
push
mov
cld
mov
lret
fistpl
inc
hlt
mov
jl
fsubs
xor
jecxz
scas
cmp
add
mov
shl
movsb
addb
xchg
movsl
cli
push
or
xorb
stos
inc
xchg
scas
lods
add
and
mov
inc
xchg
xchg
add
dec
mov
xor
aad
mov
and
fdivrs
fisttpll
fmull
mov
lret
push
hlt
jecxz
push
pshufw
outsl
sbb
jmp
test
pushf
insl
leave
int
clc
cli
cmpsb
jo
xor
add
sbb
or
adc
mov
add
xor
outsl
sbb
scas
stos
popf
sbb
js
cld
enter
inc
imul
fildll
fimuls
mov
fwait
outsb
pop
mov
mov
sbb
popf
aaa
out
inc
push
or
mov
adc
ds
fnstenv
test
jp
mov
dec
arpl
ret
out
test
jle
mov
rclb
mov
dec
xor
jp
dec
xchg
mov
dec
jp
adc
pop
fsubrl
ja
mov
int3
fucomip
mov
iret
popf
inc
inc
dec
enter
enter
es
push
inc
sbb
mov
sbb
xchg
movsb
pop
inc
inc
fldenv
inc
enter
leave
mov
jne
adc
imul
xor
into
cmc
mul
push
testl
pushf
stc
daa
jg
jo
jmp
rclb
add
nop
icebp
es
cs
lds
stos
inc
pop
popa
dec
add
lret
cmp
lea
mov
sub
xor
and
mov
jmp
and
adc
imul
insl
dec
inc
dec
jg
test
mov
cld
sub
nop
std
sbb
inc
scas
xor
xchg
in
sbb
ret
subb
incl
or
and
fstps
das
outsl
test
lret
adc
xchg
jle
lea
jmp
cmpsb
int3
pop
xor
inc
mov
or
fidivl
or
pop
ret
mov
in
ja
fisttps
jmp
icebp
out
outsl
jg
repz
adc
aaa
inc
sbb
aas
mov
mov
lahf
int3
xor
fwait
xor
cmp
rcll
lret
or
and
dec
lods
lahf
imul
dec
imul
rorb
leave
jmp
add
int
jg
adc
inc
lcall
iret
add
or
lret
jmp
or
mov
negl
int
das
mov
pop
cmp
cs
fimull
scas
ss
cmc
in
fsubrs
jne
rorb
shlb
sbb
sbb
test
jbe
ffreep
scas
cmp
mov
ret
jbe
loopne
pop
ljmp
push
popf
cmpsb
popa
mov
fldt
orl
sbb
adc
jb
mov
inc
pushf
cwtl
jae
incl
lea
and
call
into
inc
or
dec
mov
sbb
or
pop
xlat
dec
lahf
xchg
push
push
out
ljmp
mov
mov
sbb
jp
insb
adc
cmp
xchg
sub
jl
in
cmp
mov
xlat
ljmp
arpl
fwait
clc
jl
in
in
fbld
jmp
pop
pop
push
les
loope
mov
xor
repnz
pop
cmp
jne
daa
jno
inc
mov
xchg
jnp
mov
out
cmp
mov
out
cmpsb
aam
sarl
ds
je
push
dec
inc
push
cld
mov
out
add
inc
add
and
or
lret
mov
iret
mov
lea
enter
inc
mov
rcll
xor
mov
lret
fistpll
stos
xor
dec
iret
or
sbb
sub
inc
je
jb
fs
pushf
push
test
shrb
sub
and
sti
push
into
mov
inc
cmp
cmpsl
movsl
shl
pop
sub
fcmovu
xor
out
mov
sub
mov
cs
lret
mov
mov
aaa
pop
jo
mov
jl
mov
and
jl
jnp
mov
pop
jne
in
ret
dec
xchg
sub
les
iret
pop
jb
dec
lret
push
lret
rclb
or
ja
cld
xlat
sbb
push
mov
jg
push
insb
xchg
daa
mov
xchg
xlat
xor
shll
out
in
test
repz
mov
xchg
es
test
mov
int
and
test
sub
dec
ret
adc
sbb
fistpl
sbb
mov
daa
sbb
mov
inc
pop
icebp
jno
jl
daa
mov
aam
je
jns
loope
dec
shlb
test
in
jno
test
xchg
icebp
mov
pop
cmpsb
dec
cmc
sbb
mov
sub
les
test
mov
jle
insl
mov
ror
out
adc
push
pop
jge
in
adc
outsb
sbb
xorl
fwait
lods
push
inc
inc
mov
jae
sbb
inc
lods
pop
adc
sbb
lds
cmp
stos
or
push
pusha
sub
mov
adcb
imul
sub
or
ja
inc
dec
sub
adc
mov
jns
nop
mov
cmp
shll
lods
sub
dec
pop
pop
mov
adcl
repnz
imul
mov
les
push
jo
dec
aaa
xor
xchg
mov
ror
pusha
lods
rorb
shll
js
fcompl
orl
cmpsb
jns
mov
loop
push
imul
mov
imul
fbstp
inc
add
xlat
out
cltd
adc
adc
pop
push
push
cli
lds
cmp
pusha
arpl
dec
jp
push
pop
or
loop
mov
dec
clc
int
add
ud2
std
mov
cli
sub
lret
call
add
into
lea
sbb
cmp
xlat
mov
push
leave
in
enter
jecxz
js
jno
mov
pop
stos
lret
jnp
jne
xchg
sti
js
xchg
sbb
inc
mov
cli
push
daa
cld
mov
sbb
ds
lret
mov
inc
orb
popf
scas
jne
push
adc
add
jle
pop
fildll
push
ret
adc
or
push
and
orl
push
xor
sbb
mov
mov
pop
add
push
loopne
xchg
jl
sbb
xchg
lock
int3
mov
mulb
movsb
cltd
mov
pushl
pusha
lods
into
lods
jle
ja
nop
shll
sub
out
cmc
jns
mov
jl
aam
xchg
test
inc
jo
mov
inc
loopne,pn
or
cltd
xchg
mov
mov
xchg
or
mov
push
int3
sbb
jp
xor
dec
clc
rorb
push
mov
shll
pushf
cmp
lea
add
das
inc
cmc
or
ljmp
cmp
fstp
sbb
pop
stos
cmp
loopne
scas
stos
mov
imul
inc
sub
adc
xchg
push
pop
out
sub
mov
imul
xchg
addr16
daa
jp
mov
test
dec
out
cmp
test
call
jp
pop
push
pop
fsubl
push
sub
incl
add
pop
rcl
jl
andb
aaa
lret
xchg
sti
jne
mov
cmp
sub
andb
dec
inc
lods
mov
sbb
cmpsb
lahf
push
and
push
jge
lret
cld
ja
outsb
adc
fisubs
movsb
cmp
fdivl
mov
test
xchg
pop
out
notl
bnd
scas
inc
pop
stc
xlat
push
scas
cli
xchg
mov
and
jecxz
cmpsb
dec
call
inc
arpl
iret
jg
and
enter
pop
dec
pop
mov
loopne
mov
ds
dec
enter
les
pop
pop
or
js
cmp
test
es
mov
lods
shr
adc
imul
std
call
jns
mov
mov
mov
inc
mov
imul
jg
mov
sub
push
stos
rcll
pop
sub
pop
icebp
loopne
out
insb
ss
stc
les
sub
aam
cmp
enter
out
sbb
mov
or
sub
inc
insb
lock
inc
in
push
and
jg
les
rolb
xchg
cmc
sub
xlat
cltd
popf
push
inc
inc
mov
inc
stos
leave
sub
fwait
loopne
pop
cmp
sbb
pop
js
roll
in
mov
movsb
fildl
cmp
arpl
ret
jnp
mov
mov
inc
dec
lret
mov
arpl
repnz
xchg
inc
xchg
mov
inc
loop
mov
adc
jecxz
arpl
cmpl
xchg
add
stos
sbb
loope
out
mov
cmp
subb
daa
mov
jge
mov
jbe
cmp
xchg
addr16
mov
pusha
push
mov
inc
lds
jne
mov
xchg
cmp
pop
pop
sbb
test
and
arpl
dec
mov
sbb
push
xor
aas
push
loop
jne
jmp
cmp
sub
xor
pop
xlat
ss
shrl
in
dec
in
or
sbb
push
fwait
std
popf
cmp
fisubrl
add
fstps
jnp
inc
nop
sbb
push
test
sbbl
in
inc
xchg
jne
push
ja
rcrb
cs
mov
mov
sub
and
jb
jl
aam
or
out
sbb
arpl
aaa
fs
movd
jle
sti
xchg
jnp
loope
cwtl
test
scas
add
lret
addr16
aad
push
xor
sub
xchg
mov
sbb
mov
gs
xchg
test
cmc
pop
mull
adc
fimull
pushf
dec
mov
pop
sarl
sbb
loop
push
pop
iret
fmuls
rcrl
scas
aam
cwtl
mov
or
in
dec
rcll
jo
and
sub
push
sub
lods
push
adc
sub
aaa
cmp
movsb
add
sub
add
mov
pop
jnp
jne
adc
mov
mov
mov
or
pop
jo
addl
addr16
push
add
jecxz
mov
and
cmpb
scas
cmp
icebp
sbb
dec
divb
push
pop
insb
ja
aad
pop
dec
cmpl
jns
jle
and
jmp
ficompl
xchg
popf
leave
sbb
xchg
dec
shl
inc
sbb
icebp
cld
dec
jl
les
mov
push
dec
mov
push
addr16
nop
pop
sub
movsb
cmp
mov
push
add
out
std
ljmp
pop
dec
pop
stos
enter
popf
inc
fimuls
loopne
pop
int
rol
repz
xor
sub
hlt
mov
xchg
or
jmp
mov
stos
dec
roll
xchg
nop
pushf
cli
adc
mov
std
insl
scas
ficomps
push
inc
jae
sub
lods
push
push
mov
pop
repz
xchg
sbb
jmp
shlb
mov
lock
push
lret
push
addr16
aas
jnp
hlt
xor
adc
cmc
jne
push
mov
push
xchg
sub
icebp
cli
test
cmp
lahf
loopne
es
stos
jne
dec
sub
pop
pushf
jl
daa
inc
out
push
fcmovbe
xor
dec
or
jle
inc
aam
sbb
lret
inc
mov
xchg
xchg
xchg
mov
pop
imul
out
mov
leave
loopne
adc
jecxz
xchg
ljmp
cwtl
mov
sub
cmpsb
icebp
imul
lcall
push
pop
daa
sub
xchg
enter
mov
into
jp
and
sub
sbb
adc
das
aam
mov
aam
sarb
rcrl
out
mov
call
mov
out
jge
pop
rcrb
xchg
cwtl
je
cmpsb
cmp
inc
ror
dec
mov
fsubs
cmc
sub
out
ja
jg
dec
iret
sbb
imul
adc
out
adc
sbbl
sub
sbb
in
in
lea
loop
popf
push
mov
incb
hlt
mov
in
lahf
mov
xchg
test
add
js
pop
insb
jno
push
enter
pop
stos
xor
loope
out
lock
std
mov
js
jge
stc
jge
outsl
inc
or
out
faddp
inc
movsl
cmp
pop
jp
es
loopne
movsb
rorl
mov
xchg
mov
sbb
mov
inc
in
jle
jg
scas
xchg
divl
and
sbb
mov
push
cmp
and
dec
aam
xor
jne
push
lret
cmc
int3
pop
fs
cld
add
out
mov
cs
mov
aas
clc
xchg
cmp
sub
shll
xchg
stc
xor
ja
sub
loop
lret
xchg
sub
pop
xlat
pop
adc
pusha
test
loopne
xor
pusha
rcll
add
outsl
pop
decb
scas
pushf
iret
fcoml
sub
fcoml
roll
movsl
pop
dec
mov
adc
push
gs
iret
aaa
add
cwtl
fisttps
cs
mov
js
and
pop
fistpl
ret
loop
xlat
cmpsb
stc
sub
pusha
movl
nop
jl
cmp
ss
inc
inc
mov
roll
xchg
push
jbe
mov
cli
pcmpeqb
nop
mov
push
and
adc
jl
ja
add
out
mov
js
shrb
sub
aaa
cmp
add
add
loop
and
lods
jbe
loop
imul
mov
jbe
jno
ret
jns
test
cmp
fptan
mov
jge
adc
push
rcrb
cmp
dec
nopl
pop
cmp
imul
jmp
adc
popl
fwait
scas
outsl
jge
dec
bswap
repnz
jne
xchg
push
push
mov
mov
xor
mov
cmpsb
popf
inc
add
mov
sub
lock
int
adc
lock
and
adc
nop
cmp
mov
es
rep
cmp
push
loope
lea
lds
or
arpl
std
std
add
fmuls
mull
mov
in
adc
mov
es
and
insl
sub
lret
add
lods
loope
push
imul
ds
mov
inc
mov
jl
mov
int
ljmp
sub
jmp
mov
dec
dec
xor
sub
mov
ljmp
inc
dec
outsb
loope
push
pop
std
imul
adc
jne
loope
sbbl
out
and
sub
loopne
jns
popf
test
popa
xchg
pop
movsl
jl
mov
mov
int3
inc
aaa
cmpb
adc
fsubrp
dec
bound
inc
fldl
adc
dec
add
lods
and
popf
pop
mov
stos
insl
jnp
mov
icebp
mov
pop
mov
sbb
adc
leave
mov
fisubrl
test
add
jns
push
ja
sub
push
mov
test
mov
adc
loope
pop
ljmp
cli
sarl
lret
push
daa
or
scas
and
divb
loope
daa
jne
sbb
arpl
add
fmuls
mov
push
dec
fs
xor
and
jle
inc
push
jle
push
adc
lods
lahf
mov
movsb
mov
cmpsl
mov
pop
jo
push
pop
fmuls
inc
fiaddl
cld
cmp
fcoml
and
or
and
cwtl
add
arpl
icebp
ja
xor
repnz
mov
push
lret
repz
cmp
insl
inc
jne
mov
pop
popf
dec
xor
xchg
jbe
inc
and
dec
lea
stc
mov
pop
scas
cmp
push
clc
jmp
repnz
js
mov
dec
fcmovne
push
rolb
and
mov
movups
inc
ja
int
imul
ljmp
out
int3
sbb
mov
adc
xor
aas
push
dec
adc
neg
cmp
mov
sbb
push
fs
sbb
pop
daa
cmc
push
push
and
inc
rcrb
sbb
movsl
orl
jne
adc
imul
xchg
pop
pop
or
pop
loop
rcrl
add
jge
and
dec
push
pusha
les
cmp
or
lret
hlt
adc
fistpll
sbb
pusha
mov
ja
clc
fistpll
dec
arpl
mov
daa
pop
test
nop
mov
xchg
sub
mov
dec
push
pusha
mov
dec
mov
fs
insb
test
fldt
aam
insb
mov
push
aaa
mov
or
les
dec
adc
adc
inc
pushf
jle
andb
dec
add
push
xor
fisubrl
int3
bnd
sbb
outsb
adc
negb
dec
les
fwait
or
rcr
fcomip
push
std
jp
ret
cwtl
mov
add
fmulp
adc
jge
mov
dec
xlat
fndisi(8087
dec
lcall
sub
jno
and
aas
dec
jbe
aad
cmp
fs
das
inc
movsb
mov
repz
mov
push
jo
popf
nop
loope
adc
imul
ljmp
inc
sbb
adc
cmp
outsb
xchg
mov
arpl
sbbl
inc
xchg
in
dec
cli
xchg
addr16
mov
testl
ss
inc
push
and
stc
xor
mov
sbb
arpl
addr16
mov
popa
lahf
fisubl
out
call
pop
and
pop
pushw
mov
into
lret
pushf
mov
sub
sub
mov
mov
xabort
mov
stos
inc
pop
jo
int3
mov
jb
movsb
fbstp
jns
ret
pop
mov
and
mov
cmp
add
js
pop
jbe
pusha
or
pushf
leave
add
fcompl
jg
jae
xchg
push
and
rorl
xor
xchg
rclb
lods
ds
test
xchg
pop
addb
insb
pop
xor
fdiv
xchg
jecxz
sbb
ror
cld
sbb
scas
jb
clc
mov
push
xchg
outsl
sbb
xchg
into
aad
dec
adc
inc
out
loopne
mov
jno
pop
sbb
enter
cmc
jns
stc
pusha
dec
lods
mov
mov
fsts
xor
ss
sbb
mov
xchg
ret
add
mov
jmp
shl
les
fs
imull
fld
and
pop
leave
test
pop
jae
xchg
ret
cmpsl
mov
addl
inc
stc
dec
pop
sbbb
sbb
fdivrl
pcmpeqw
ret
loop
js
pop
sub
scas
sbb
xchg
pop
jbe
xchg
cmp
and
sub
dec
cmp
insb
xchg
inc
cli
sbbb
add
mov
loop
popf
pop
pop
push
xor
adc
arpl
mov
sub
ret
dec
test
popa
lds
push
jae
call
mov
and
jb
in
and
aaa
popf
call
jno
or
xchg
jns
or
add
lods
pop
cli
xorl
dec
mov
int
and
push
daa
or
mov
ss
adc
in
inc
outsb
push
enter
ds
div
dec
outsl
subl
rcll
arpl
stos
lret
stc
jo
les
fiadds
jl
loope
pop
mov
out
into
add
add
mov
shll
inc
xchg
fnstsw
xor
xchg
xchg
dec
inc
sarb
hlt
mov
jns
ja
imul
movsl
sbbb
outsb
mov
dec
loopne
jl
repz
fnstenv
xchg
ljmp
not
dec
adc
push
cmpsl
xor
and
ret
dec
rol
adc
sar
and
xor
dec
adc
sub
test
jae
dec
repz
mov
loopne
cmpsb
sbbb
outsl
adc
adc
mov
push
mov
sbb
mov
push
stos
xor
fiaddl
pop
es
jae
loop
mov
xchg
xor
cmp
xor
cltd
dec
ret
and
mov
cmp
stos
mov
sbb
enter
mov
or
sub
push
mov
cmp
fcomps
mov
pop
sub
mov
cmp
mov
subb
jle
inc
ds
or
push
ds
jp
insl
test
clc
mov
inc
pop
adc
inc
mov
lea
mov
mov
push
ss
xlat
mov
xchg
mov
and
xor
mov
push
dec
ret
popf
pop
pop
cmp
mov
pop
out
sahf
xor
push
mov
cmp
and
sub
lds
data16
push
mov
lret
fistpll
mov
inc
jle
mov
scas
push
ja
nop
add
lcall
sub
aam
xchg
divb
scas
jle
add
out
arpl
add
sarb
out
mov
mov
xor
fwait
mov
jae
mov
mov
movsb
push
loop
dec
mov
div
jp
jnp
fmull
daa
add
fidivrs
and
sarl
inc
and
mov
aas
dec
movsb
pushf
jo
dec
mov
inc
test
mov
inc
dec
push
or
cld
xlat
mov
inc
mov
testb
aam
daa
xchg
fadds
push
pop
mov
int
daa
fsubrl
call
in
inc
je
xchg
enter
ss
sbb
or
in
inc
arpl
jmp
jmp
push
mov
lods
les
add
jb
cli
sub
loop
subb
jns
sbb
xor
pop
movsl
daa
or
or
fdivrs
fsin
pop
jns
mov
cmp
out
or
mov
aam
xor
and
fwait
fwait
or
adc
push
mov
add
push
add
xchg
ljmp
mov
pusha
shrb
xor
mov
add
test
push
cmc
aaa
jae
and
mov
pop
pop
pop
arpl
test
xor
cmp
xchg
insl
pop
add
in
into
ret
lods
xor
push
jns
mov
pop
push
testb
ret
clc
lods
insb
jnp
mov
jl
ljmp
push
xchg
jo
xchg
push
mov
shrb
data16
mov
lcall
std
jp
fsub
pop
cmove
push
cmp
push
in
fistpl
into
aad
dec
inc
push
fcomps
icebp
mov
mov
xchg
jno
adc
popf
rorl
gs
es
jg
in
es
pop
inc
push
dec
in
cmp
sbb
xor
cs
sub
and
sbb
popf
ja
jl
sbb
sub
cmp
ljmp
mov
lds
mov
icebp
add
shll
jle
dec
adc
mov
pushw
imul
mov
mov
pushl
aam
les
js
jo
sub
xchg
cmp
inc
xchg
xchg
mov
dec
push
adc
ret
clc
adc
xchg
pop
lret
add
pop
lret
dec
push
adc
std
or
sub
in
xchg
cli
xchg
rcll
add
pushf
in
loope
mov
pushf
call
aas
lds
call
in
fwait
cltd
ljmp
rcrl
mov
cwtl
shll
enter
in
cs
js
pop
lock
mov
inc
mov
rcrl
iret
fwait
sbb
mov
cmc
dec
jae
jns
push
add
jecxz
xor
cmpsl
push
mov
xlat
push
mov
sub
cmp
cmp
push
cmpsl
cmp
mov
pop
lods
push
mov
test
jg
sahf
es
cmpb
lahf
jp
arpl
xchg
and
adc
insl
mov
movsb
push
or
je
push
mov
or
sbb
dec
and
adcb
into
pop
movsb
enter
out
fdivl
adc
into
dec
mov
test
dec
ljmp
lret
xchg
loope
xor
addr16
int3
or
inc
insb
mov
dec
inc
adc
push
cmpsb
sub
mov
adcb
cmp
call
sti
bound
xchg
xor
push
or
int3
mov
shlb
mov
les
dec
mov
xchg
shrb
in
into
cmpl
mov
shlb
addr16
loop
or
repnz
mov
mov
add
cmp
mov
push
dec
cltd
jmp
push
pop
mov
mov
jo
push
adc
out
dec
ret
rcrb
push
xchg
mov
cmp
fisubs
jmp
lret
pop
popf
lahf
inc
call
jmp
pusha
dec
mov
mov
fidivrs
in
inc
pop
pushf
fbstp
and
mov
pop
xchg
jge
xor
or
dec
mov
stc
dec
push
mov
add
sub
mov
mov
push
inc
fs
dec
filds
push
clc
mov
push
xchg
mov
cmpsb
pop
jp
add
or
loope,pt
js
adc
sub
inc
add
mov
jp
dec
fildl
mov
jo
and
inc
pop
shlb
pop
sbb
or
push
and
push
xor
mov
pop
lahf
xchg
adc
sti
in
pop
pop
jbe
out
dec
sbb
aaa
sarl
xor
andb
mov
out
aad
push
movsl
mov
sbbb
repz
and
ds
stc
bound
bound
jne
inc
and
push
outsb
fs
dec
lcall
dec
or
cmp
xchg
testb
in
dec
inc
sbb
sarl
sub
jmp
jg
lods
sbb
test
fidivs
push
adc
movsb
std
pop
mov
jnp
cmp
or
cs
into
leave
push
dec
sub
pop
lods
popf
inc
cld
fadds
shrl
sub
and
stos
scas
cmp
jp
inc
out
xchg
adc
adc
add
arpl
test
add
jne
push
sub
jae
addr16
jecxz
jne
nop
or
cltd
pmaddwd
xor
xor
push
sbb
push
dec
dec
inc
pop
int3
push
orl
loope
xor
xchg
pop
insl
cmpsl
mov
icebp
inc
cs
or
fsubs
mov
mov
pop
pop
fcmovnu
in
xor
mov
add
imull
sti
mov
mov
mov
inc
jne
mov
sub
roll
xchg
sti
nop
pop
cld
jl
insb
fstl
and
mov
adc
insl
jns
push
jne
sbb
addb
test
cmpsl
repnz
adc
lret
test
mov
mov
push
mov
inc
bound
out
cmp
xchg
push
sbb
adc
loope
pop
pusha
sarb
stc
lea
iret
addr16
cmpsl
cmp
rcrl
aam
aas
add
lods
push
aaa
lock
cwtl
cli
aas
sbb
aaa
rclb
cmp
jnp
shrl
fsubl
rcll
cmp
sbb
push
out
mov
sbb
cld
outsl
xor
imul
inc
cmp
loopne
mov
cmp
in
fsubl
jno
vrcpss
test
out
xor
push
mov
jnp
and
xchg
popa
adc
push
xchg
pop
cs
sub
mov
push
popf
lds
mov
xchg
loop
push
mov
gs
mov
jecxz
sub
sbb
jne
jo
insl
movsb
aas
xchg
xchg
inc
dec
out
andb
and
in
jno
clc
jbe
loopne
mov
mov
cmp
sbb
pop
in
or
jb
notb
movsl
sub
in
lds
popf
repz
shrl
mov
add
ja
out
xorb
mov
shl
aas
mov
jns
sti
xchg
loope
lods
inc
and
push
scas
fcompl
xchg
jae
popa
rcl
xor
test
adc
daa
lock
mov
fdivr
iret
push
add
divl
outsb
xor
adc
or
stc
arpl
mov
sbb
jae
int
sub
pop
std
mov
push
mov
lcall
push
push
cwtl
aad
pop
sti
dec
sahf
and
das
fnsave
jns
popf
fidivs
fsubl
dec
je
outsb
iret
data16
int
int3
sbb
into
push
cmc
pop
jmp
inc
xchg
jecxz
popa
hlt
mov
je
jbe
jnp
pushf
movsb
fnsave
cs
scas
push
xchg
js
fldenv
cmp
ljmp
mov
mov
ss
push
dec
push
push
pusha
test
add
fs
repnz
arpl
hlt
cmp
orb
fistl
cli
cli
jne
xor
rclb
lods
imul
stos
mov
cmp
out
lods
ljmp
rol
fnstcw
jbe
movsl
adcb
push
test
insb
js
mov
inc
jp
adc
pop
ja
in
test
jge
mov
loope
loopne
cs
sbb
mov
push
push
push
adc
mov
sbb
test
lret
jno
dec
test
dec
push
insb
pop
pushf
jp
into
pusha
sarb
mov
out
dec
xchg
or
fsubrl
js
pop
push
rcr
scas
mov
outsl
enter
adc
out
movsl
aad
out
jb
cmpsb
fs
or
std
sti
clc
mov
sbb
ret
sub
bound
cli
mov
test
sbb
cmp
mov
stc
push
xlat
mov
mov
mov
and
out
pop
xor
mov
in
mov
jmp
pop
pop
xchg
aam
addl
dec
shrl
sbb
jne
pop
cmp
js
mov
sub
lods
mov
out
test
sbb
je
jb
and
xchg
fstpl
push
inc
cmp
xchg
sub
inc
icebp
stos
cmp
les
sub
lods
inc
fisubs
sbb
push
jne
push
sbb
or
ss
daa
adc
sub
add
mov
jle
cmp
adc
pop
push
mov
mov
or
add
cmp
jnp
mov
popf
hlt
mov
movsl
fistpl
das
jns
loop
or
xor
adc
andl
inc
sbb
pop
xchg
fcoms
cmp
divl
pop
lahf
or
jns
mov
adc
mov
fsubrl
mov
mov
pop
mov
cmc
pusha
in
cld
adc
xlat
lock
pop
lock
xor
mov
xchg
mov
fisttpl
test
dec
daa
std
mov
dec
rcll
nop
mov
cmpsb
stos
sub
aas
aaa
pop
mov
or
push
ds
pop
and
and
xchg
leave
adc
sub
mov
test
cmpb
cmp
cli
setns
bound
pushf
inc
pop
and
mov
test
pop
gs
ffree
ss
xchg
incl
lret
push
adcb
mov
decb
sub
pop
movsb
sbb
cld
test
cltd
mov
mov
int3
inc
cmp
data16
pusha
and
push
les
mov
mov
xchg
in
pop
je
sub
cmpsl
xor
in
fsubl
ret
dec
insb
or
mov
rcll
loope
xchg
or
cmp
mov
mov
mov
mov
mov
aaa
subb
push
inc
test
inc
jmp
mov
fdivrs
fsub
cmp
insl
jl
mov
mov
mov
sub
movsl
or
add
sbb
sbb
jnp
popa
scas
and
cli
xchg
sub
data16
ret
in
mov
adc
mov
jne
fists
cli
jecxz
pop
and
sub
lea
mov
and
scas
fstpt
cmpsb
stc
jb
scas
clc
mov
xor
jmp
sub
fistl
das
fs
movsb
xor
out
out
inc
repnz
fiaddl
scas
test
lea
adc
mov
mov
test
stos
sub
xor
sbb
mov
out
outsb
push
sbb
add
mov
jecxz
cmpsb
add
mulb
sbb
xor
mov
fdiv
lods
ja
in
or
push
sbb
aas
loope
fmull
add
lock
xchg
mov
cmp
sub
jb
pop
push
cmc
push
jb
mov
xchg
push
cmpsb
int3
sbb
inc
stc
pop
xchg
xor
or
es
sahf
xlat
dec
cltd
idivl
xchg
movsl
shlb
add
lea
and
fstps
sarl
aas
fsubp
xor
pop
jg
xor
xor
pop
pop
xor
loopne
out
mov
cmpsl
and
div
xchg
adc
add
mov
inc
jp
inc
test
ret
ffreep
mov
push
andb
clc
cli
push
push
shlb
loope
divb
daa
or
out
in
dec
test
in
popa
or
sbb
lea
push
xor
pusha
in
adc
andl
cld
cmp
lds
stc
or
out
pop
lea
roll
ret
repz
rcl
addr16
sahf
dec
adc
or
insl
dec
pop
xchg
push
mov
jle
inc
mov
and
leave
xchg
shlb
cli
setns
cmp
and
dec
sub
push
dec
sub
mov
cltd
dec
cld
pop
test
js
mov
cmpsb
ja
cmp
arpl
cmp
jb
mov
add
pusha
pop
pop
int
movsl
sub
sub
sub
add
mov
jns
loopne
adcl
mov
addr16
std
xlat
jae
ret
stos
imul
ja
mov
bnd
dec
lret
or
mov
add
sbb
lock
ret
dec
add
imul
xor
out
or
cmp
into
push
dec
adc
push
pop
es
aad
mov
out
inc
repz
in
cltd
sub
pushf
jg
fwait
mov
jno
mov
clc
push
and
fs
into
xchg
sbb
mov
mov
pusha
movnti
rolb
dec
pop
xchg
rcrb
sbb
sbb
push
add
popa
mov
or
add
test
lcall
push
push
jl
push
subl
or
popf
mov
out
bound
iret
repz
ss
dec
addr16
loope
ret
imul
popl
lods
divb
mov
in
or
mov
mov
cmp
aad
ss
sbb
xlat
or
scas
push
inc
and
cwtl
orb
clc
sbb
mov
arpl
sub
or
sbb
push
ds
cmpsb
xlat
cmp
orl
push
and
cmpsl
adc
xor
fidivl
dec
icebp
aam
cmpsb
xchg
pop
ss
flds
mov
mov
es
scas
mov
fcoml
mov
fsubr
sub
xchg
test
and
paddusw
sahf
test
jb
xchg
out
pusha
adc
jge
fldl
or
or
sbb
xorl
mov
xor
scas
mov
pop
int
mov
stc
mov
and
stos
jecxz
push
mov
sbb
cli
dec
cli
fdivrl
cmp
enter
adc
rolb
cmpb
xchg
jmp
jecxz
mov
fs
leave
rcrb
mov
je
dec
mov
test
jmp
scas
xor
imul
sub
sbb
inc
xchg
fldenv
stos
sub
stc
getsec
call
fdivl
pop
pop
xchg
mov
das
mov
xchg
test
lahf
ror
mov
fmull
incl
xchg
inc
je
insl
cmp
outsb
mov
sub
dec
lcall
cmpsl
cmc
or
test
and
shll
adc
popl
lret
or
mov
insl
cs
jmp
dec
mov
subl
cld
inc
adcb
xor
xor
and
jl
loop
or
pusha
pusha
pushf
push
dec
cmp
push
inc
or
push
sti
jl
mov
aad
mov
mov
push
mov
push
pop
imull
mul
movsl
call
push
shrb
clc
or
pop
fstps
shrl
mov
mov
xor
ss
jnp
lods
out
jo
push
and
push
js
xchg
lret
and
xchg
dec
dec
insb
jo
cmp
xchg
adc
and
lds
rcll
lods
pop
shrb
mov
pusha
rorl
adc
mov
inc
lds
dec
in
jl,pt
std
xorl
adc
pause
lock
xchg
pop
adc
loop
adc
hlt
in
cmp
test
shll
sbb
mov
scas
outsl
jge
cmp
mov
pop
sbb
xchg
lods
mov
movsb
movsb
xor
and
test
iret
cmpl
rol
je
cmc
clc
sarb
movsb
xchg
das
or
adc
lods
inc
daa
cmp
aaa
push
lret
shlb
ja
fisubrl
adc
in
je
test
or
ja
xchg
jae
ret
xchg
repz
fiaddl
cmp
ret
mov
and
pop
xchg
enter
jae
gs
andl
or
mov
xchg
or
stos
pop
ja
imul
jp
or
leave
mov
dec
add
cmp
iret
adc
xchg
hlt
jbe
jno
sti
test
sbb
lds
add
mov
adc
xchg
mov
jle
mov
call
fisttps
inc
xchg
inc
inc
leave
sbb
pusha
mov
test
cmp
push
sbb
mov
inc
shlb
adc
or
mov
dec
inc
add
jecxz
pop
or
stc
loope
mov
loopne
mov
cltd
jl
sbb
scas
sub
cmp
dec
mov
bound
out
stc
stc
cli
sbb
or
cltd
adc
lret
push
int3
or
add
fs
lods
outsb
test
mov
sub
sbb
fidivl
push
jb
pop
cmc
bound
adc
insb
stos
adc
sub
dec
xor
cmp
lret
cmp
mov
dec
pop
stc
inc
pop
xchg
push
xor
and
sbb
or
mov
cltd
in
sub
lea
ror
adc
jns
insb
adc
add
sbb
pushf
or
xchg
or
lcall
in
xlat
push
lock
inc
cli
movsl
and
mov
pop
push
imul
outsl
sbb
aam
dec
xor
ret
fimull
out
pop
test
push
jle
lret
push
test
pop
or
sub
push
xchg
add
stc
jl
test
and
sub
xchg
ret
inc
das
lcall
rorb
pushf
pop
mov
jp
mov
push
inc
xchg
popf
outsl
jne
sahf
ret
mov
mov
test
sbb
fwait
test
xchg
out
sub
dec
mov
and
negb
pop
fiadds
lcall
loope
cld
xchg
icebp
xchg
xchg
stc
pushf
cmp
insb
and
mov
dec
cmp
jl
cs
jecxz
outsb
adc
lcall
sbb
lahf
leave
rclb
adc
rcrl
xor
inc
stc
insb
fnstsw
pushf
or
inc
sbb
scas
lea
lea
fsub
aas
flds
lret
sbb
sbb
add
adc
mov
push
and
pop
and
cmc
inc
adc
in
dec
lret
ror
jbe
cmp
sbb
mov
js
lock
dec
pop
daa
in
xchg
push
cmp
aaa
xor
aam
mov
loop
sti
jo
or
imull
pop
xchg
in
test
std
mov
enter
mov
mov
bound
sub
cmp
xchg
xor
in
pop
jge
vpor
pop
cmc
push
ja
mov
dec
dec
sbb
dec
dec
sub
xchg
inc
fabs
jp
jl
pop
adc
xchg
sub
lcall
or
or
mov
xor
mov
pop
repnz
xor
pop
sbb
add
xchg
rol
lret
adcb
shlb
in
cltd
sub
xchg
out
int3
inc
push
xchg
adc
aaa
add
mov
push
push
in
in
jb
cmp
leave
leave
mov
pop
dec
imul
pop
mov
adc
loopne
mov
push
idivl
xor
sub
rol
mov
shl
ja
pop
mov
bound
roll
and
fcomps
inc
out
test
sbb
jmp
xor
cmp
enter
test
mov
adc
adc
fists
dec
loopne
or
aad
cmp
mov
add
and
stc
xor
cld
sub
cmovns
sbb
adc
sbb
mov
xor
adc
stos
out
les
fldt
aaa
aas
mov
rclb
ficompl
mov
cmp
lret
cmp
in
dec
ja
aas
repnz
xchg
scas
fdivrp
add
sub
stos
dec
xchg
mov
and
dec
stos
dec
clc
pop
lds
xchg
adc
icebp
fisubrl
insb
and
jo
imul
adcl
cmp
fildll
outsb
sbb
sbb
xchg
sbb
aaa
repnz
pusha
inc
pop
push
xchg
mov
test
jbe
ss
adc
jl
jp
mov
jg
cmp
insb
enter
ret
subl
insl
jp
aas
popa
cltd
sub
dec
cmp
or
xor
push
std
negb
lock
scas
ljmp
movsb
sbb
sbb
ret
xor
fldenv
xchg
inc
sahf
mov
faddl
fcmovu
bswap
jmp
push
dec
faddl
dec
sbb
stos
movsb
mov
pop
adc
pop
mov
and
and
mov
xor
clc
jnp
ud2
or
vpcmpub
pop
shlb
mov
push
add
dec
xlat
sub
jne
push
cmp
or
jp
testl
jae
or
pop
in
xchg
shrl
mov
lods
or
insb
out
popf
or
or
cli
inc
shll
mov
inc
or
add
xchg
rol
dec
pusha
mov
jo
cmp
imul
fcompl
into
inc
mov
sbb
cmp
jecxz
addb
out
dec
ljmp
adc
nop
mov
je
psrlw
sbb
call
xor
jg
jnp
sub
popa
push
sbb
jno
es
scas
pop
pusha
pusha
and
or
push
sbb
mov
xchg
in
movsl
std
mov
into
in
sbb
int
scas
lea
pop
jbe
fimull
test
push
mov
lea
add
pop
xchg
sbb
mov
mov
mov
mov
pop
ljmp
adc
dec
or
xchg
in
mov
add
out
loop
gs
or
cmp
pop
and
andb
cltd
push
dec
sbb
aad
bnd
lahf
int
fadd
mov
idivb
push
jo
clc
push
adcl
jp
cmp
adc
enter
movzbl
arpl
insl
pop
and
stos
repnz
xchg
pop
mov
mov
out
jne
push
outsb
push
dec
shlb
shr
pusha
sbbl
add
xchg
cmpsl
or
fnsave
sbb
lret
push
adc
leave
cmpsb
fcmovne
loopne
add
outsl
adc
addr16
add
mov
adc
stos
out
cld
sbb
and
pusha
loop
dec
roll
in
out
ja
xor
outsb
popa
fneni(8087
xor
mov
aad
int
xchg
sbb
mov
and
lret
mov
pop
jge
in
sbb
dec
pushf
outsb
rorb
xor
xchg
out
adc
mov
fdivs
nop
jmp
sub
test
pop
in
mov
pop
aas
xchg
fisubs
jo
rorl
push
inc
cltd
rcll
es
in
dec
fldcw
mov
or
cmp
je
push
jl
jmp
cmc
sub
les
movsb
inc
fst
and
mov
addr16
sub
mov
test
in
les
std
sub
ss
sahf
mov
mov
fdivl
into
out
mov
push
enter
pop
xor
loopne
addr16
mov
jnp
xchg
shll
subl
inc
and
icebp
xchg
push
popa
mov
lret
les
push
or
jecxz
and
das
mov
inc
push
push
or
dec
and
mov
insl
mov
mov
lcall
test
mov
xor
mov
add
mov
ret
shl
jne,pn
es
mov
mov
inc
mov
cwtl
push
lds
inc
mov
mov
gs
jb
cmc
lods
push
cmp
xchg
lods
xchg
int
xchg
aas
jne
pop
mov
add
movsb
push
cmpsl
pop
cs
pop
sbb
or
xor
xor
inc
xchg
loop
sub
sti
rcl
ret
js
mov
inc
loop
cmp
aad
ds
xchg
sahf
and
push
adc
ja
inc
std
hlt
fistps
push
into
push
outsb
dec
jnp
mov
add
jmp
sbb
xor
inc
repnz
iret
sub
add
jge
insl
lcall
dec
xchg
js
pusha
mov
pop
dec
pop
in
je
sub
mov
sti
mov
lock
push
mov
rcl
shlb
cmp
push
std
imulb
mov
or
scas
aam
pop
mov
insl
leave
cmc
call
xchg
jp
ds
mov
push
daa
bound
push
and
nop
mov
mov
test
es
fsubrp
js
movb
rcl
insl
jmp
sbb
mov
add
sub
jbe
imull
insb
mov
out
stc
mov
lahf
mov
imul
push
fwait
mov
and
cmpsb
pop
aaa
push
xchg
icebp
icebp
insb
dec
test
mov
xor
gs
loopne
outsl
in
subb
pusha
fisubrl
lds
test
imul
jmp
cwtl
mov
cltd
stos
mov
jl
push
xchg
xor
mov
or
imul
mov
cld
inc
or
sub
push
inc
es
js
inc
add
sbb
push
cmpsl
into
sub
aad
or
cmp
or
sbb
push
jge
ljmp
mov
xor
fcoms
lea
cmc
call
lds
xor
test
pop
shrb
jbe
mov
insb
into
movsl
mov
jo
fbld
mov
rcrb
aas
push
cmc
push
jb
jns
les
sub
fsubp
adc
jb
or
mov
mov
loope
add
popf
xchg
pushf
add
ret
or
pop
xchg
mov
mov
pop
lcall
fimull
leave
adc
fdivs
jge
loopne
or
xchg
out
sbb
push
mov
cwtl
sbb
pop
push
rolb
imul
in
aam
lret
dec
stos
lods
arpl
and
and
call
add
cmp
pop
add
dec
mov
out
test
mov
andb
shlb
lods
and
cs
sbbl
dec
mov
shlb
lds
fcoml
push
ret
hlt
push
cmc
push
jg
sar
sbb
push
addr16
push
pop
jb
jp
adcl
aad
mov
movsl
fwait
repz
outsl
rclb
pushf
mov
and
adc
nop
inc
dec
aaa
dec
cmp
dec
rolb
sub
mov
icebp
imul
jmp
iretw
add
repnz
test
lret
fcoms
mov
adc
and
lock
cmp
xlat
cmp
insl
out
push
lret
xor
call
in
pusha
loopne
pop
push
and
stos
inc
fdivrp
cmp
xchg
std
cmp
adc
clc
dec
fistps
xchg
mov
jge
xor
sahf
jecxz
fistpl
mov
int3
jp
imul
jbe
add
dec
push
popf
fxch
inc
dec
sub
pop
imull
mov
in
pop
out
sarb
cmp
xor
push
lods
mov
dec
xor
pushf
rclb
divl
adc
les
repz
lea
mov
std
js
rcl
aam
cmp
dec
mov
imul
lret
popf
xor
dec
scas
int
cmp
les
push
xchg
out
enter
adcl
adc
rorb
pop
dec
call
xor
lret
mov
dec
add
in
sub
bound
enter
push
stc
xor
cld
scas
cli
lds
ja
negb
sahf
sub
mov
pop
test
shll
cli
inc
jbe
dec
push
push
cmp
movsb
sbb
adc
jb
nop
xchg
fisubs
jns
mov
and
in
adc
stos
test
out
testb
into
int
xchg
mov
aam
ljmp
arpl
cmc
es
movsb
adc
pop
call
push
and
inc
leave
and
mov
add
xlat
jl
cmp
add
sbb
mov
push
or
data16
and
clc
stos
dec
add
mov
lahf
stos
pop
sub
dec
xchg
sbb
xchg
sbb
aam
cwtl
fsubl
jl
in
dec
sub
push
mov
stc
enter
sbb
inc
inc
out
out
or
clc
xchg
mov
sarb
pop
popa
dec
cli
shlb
or
into
inc
fnstenv
push
int
in
lods
xor
divb
dec
dec
insb
pop
loope
cmp
jmp
lods
ret
jle
mov
inc
das
xlat
inc
mov
sbb
shr
jg
mov
scas
push
sub
shll
xor
inc
call
lahf
addr16
mov
data16
add
in
sahf
mov
push
push
or
fwait
cmp
int
cwtl
sub
push
xor
cli
push
aam
adc
dec
mulb
mov
jne
fcmovb
adc
js
xorl
sbb
inc
imul
imul
cs
or
adc
or
out
repnz
ret
or
rcl
sub
mov
push
cmp
cmc
mov
sub
ficoms
daa
cmp
mov
fs
rorl
jbe
xor
xor
data16
push
inc
sbb
imul
ljmp
dec
cmp
test
popf
mov
ljmp
leave
enter
or
jnp
addr16
jg
cld
ss
daa
lahf
push
mov
dec
adc
aas
insb
daa
adc
or
test
aad
xor
out
cmpsl
inc
and
out
in
mov
sub
fs
xchg
dec
pop
sahf
adc
xchg
test
dec
popa
dec
out
outsb
in
imul
daa
cmp
or
xor
xchg
pop
sbb
call
mov
mov
outsb
push
out
pusha
nop
fucomi
clc
mov
repnz
dec
out
popf
push
push
cmp
or
repz
lock
scas
dec
sub
jp
ret
sbb
sbb
or
push
jae
or
loop
pop
ret
and
jecxz
inc
enter
mov
hlt
inc
jno
mov
pop
and
xor
jne
psraw
int3
add
movsb
cmp
adc
xchg
pusha
push
add
movsb
rolb
lea
mov
sub
mov
push
xor
jecxz
jnp
fwait
push
insl
pop
int
movsl
sub
mov
xchg
mov
pop
or
aam
mov
inc
fistpll
cmp
sub
pop
dec
andps
or
lods
xchg
dec
sbb
cmp
push
sub
jge
pop
xchg
mov
or
and
xchg
mov
std
sahf
pop
pop
or
xchg
mov
cs
xor
or
rcrl
sbb
sarl
test
pop
and
loopne
int
roll
incb
sbb
adc
xchg
inc
jmp
sub
mov
fsubl
iret
jmp
xor
fmull
xorb
out
inc
xchg
daa
inc
in
lret
je
scas
or
in
outsb
lcall
inc
lret
sti
pop
jl,pt
lret
test
fimuls
mov
sbb
fsub
loop
or
mov
or
jecxz
aas
das
push
lahf
push
outsb
push
xchg
xchg
push
ret
les
and
inc
sahf
cmpsb
nop
mov
je
test
add
es
push
xor
push
sbbb
sahf
mov
pop
cmc
outsb
popf
test
mov
fwait
cmc
in
jmp
dec
cmp
push
dec
lods
push
dec
mov
ret
lds
outsb
out
jp
ret
push
aas
cmc
pop
cmp
mov
or
xor
mov
or
jle
decl
jno
je
add
adc
pop
popa
call
xchg
sub
dec
jmp
cld
cmp
add
test
test
and
ret
stos
icebp
adc
pop
push
mov
into
adc
enter
mov
sub
shll
lods
popa
dec
jne
ljmp
sahf
out
gs
and
out
les
test
insl
bound
push
aas
lds
in
push
mov
xor
and
imul
and
pop
push
or
jnp
xchg
xchg
push
xor
movsb
jne
out
stos
ficoml
ret
push
jbe
mov
bound
aaa
add
xchg
push
test
jp
shlb
cmpsb
call
xor
lods
inc
and
pop
out
cs
test
test
add
sahf
sbb
jae
sbb
imul
adc
loop
or
mov
rolb
fidivs
jle
pop
je
inc
ss
push
sub
gs
data16
ljmp
mov
ficompl
andb
cs
pop
inc
dec
sahf
jl
jo
imul
addr16
mov
mov
cmpsb
cmovnp
xchg
cli
mov
cmp
adc
mov
scas
mov
js
out
mov
or
jmp
inc
push
xor
xchg
rorl
cwtl
jbe
daa
jle
add
dec
pop
adc
xchg
pop
xchg
scas
or
ret
pop
out
arpl
inc
loopne
test
dec
popf
lds
inc
jbe
xchg
shl
pop
xor
shrl
push
les
cmp
psrad
mov
adc
fcoms
or
pushf
iret
add
xor
pop
jmp
cli
mov
loope
mov
call
movsb
test
xchg
es
nop
andb
aad
in
lock
mov
cmp
in
xchg
movsl
mov
xor
jae
jae
inc
int3
sbb
movhps
test
outsb
sbb
xor
cmp
push
push
dec
lcall
pop
out
ljmp
inc
test
jbe
das
loopne
lahf
dec
adc
ljmp
add
lret
popa
neg
scas
pushf
insb
fadds
dec
dec
and
fcmovb
imul
arpl
dec
insl
sbb
fisubl
cmpsl
xor
sub
inc
cmp
pop
scas
rcll
push
aaa
and
cmpsl
fs
scas
shll
push
test
push
loopne
cmp
push
xor
dec
xchg
popa
addl
imul
sub
xchg
aam
mov
xchg
inc
sub
adc
xor
stos
ja
sbb
sbb
fnsave
push
add
jne
xchg
or
push
and
jns
adc
mov
dec
lods
dec
out
push
xchg
jb
cwtl
andl
inc
subb
jb
ljmp
jnp
inc
cld
cmp
scas
push
push
es
cmpsl
dec
bound
insb
mov
in
pop
mov
leave
faddl
xor
insl
sub
xchg
xchg
mov
mov
jbe
pop
inc
dec
xchg
and
or
repnz
sbb
sbb
jbe
xchg
repnz
push
negl
lea
cmp
add
cmp
sbb
sti
rcll
xchg
outsb
adc
pop
incb
and
jmp
jne
in
loop
pop
sub
jp
xchg
sub
lret
add
sahf
cmpsb
jnp
adc
std
sbb
xchg
fldcw
xor
pusha
mov
and
sbb
fisttps
push
cld
filds
popf
and
popf
sahf
daa
dec
xchg
lahf
mov
pop
jo
ret
ljmp
cmpsl
dec
cwtl
jge
or
jl
inc
xchg
enter
xor
sub
push
sti
scas
shrl
sub
mov
mov
and
fstpt
xchg
pop
cwtl
sbb
mov
imul
dec
push
push
push
pop
sub
jge
dec
jmp
dec
in
andnps
push
fstpt
aad
inc
and
dec
push
aaa
xchg
mov
add
and
dec
sbb
xchg
cmp
incb
roll
xchg
cmp
adc
sub
xor
fmull
scas
xchg
sub
test
addr16
jl
xor
adc
cwtl
iret
jbe
cmp
xor
cmp
mov
or
or
sub
movsb
pop
add
xchg
mov
packuswb
xchg
dec
push
mov
pop
ffree
adc
adc
xorl
add
and
adc
lret
push
adc
mov
insl
test
and
loopne,pn
xor
inc
stos
mov
movsb
sub
ljmp
pop
jne
add
lods
shl
hlt
add
data16
js
fnstenv
cmp
xchg
popa
pusha
cld
mov
stos
or
xor
xchg
sub
mov
stos
in
jmp
stos
mov
pop
adc
lcall
aas
or
inc
popl
iret
push
lea
pusha
lcall
inc
inc
dec
pop
mov
xor
cmpsl
popa
sbb
mov
lcall
je
enter
dec
cmp
inc
iret
popa
pop
ljmp
fcompl
sub
lods
in
stos
test
jb
and
mov
into
jae
dec
mov
mov
mov
das
shl
sub
adc
aad
sbb
push
leave
mov
cmp
xchg
testl
jb
sarb
push
cmp
pop
imul
sub
loope
scas
inc
jb
fadds
stos
test
mov
mov
fmull
dec
fwait
cmpsl
movsb
lds
mov
in
pop
fdivrl
push
outsb
pop
sub
adc
out
in
cmp
mov
jle
pop
lahf
xor
dec
in
mov
pop
mov
outsl
stos
pop
daa
iret
out
xchg
emms
sbb
popf
mov
sbb
add
xor
or
pop
or
pusha
xchg
test
enter
pushf
es
cmc
arpl
mov
jecxz
xchg
jne
adc
repz
in
add
lea
cmp
shrl
push
sbb
je
decl
pop
add
inc
sub
add
push
jle
scas
lods
ljmp
sub
mov
or
lea
movsl
mov
insb
daa
xchg
popf
pop
jns
mov
pop
repz
push
mov
cmpb
test
inc
sbb
mov
mov
cmpsl
decl
mov
adc
cltd
xchg
imul
inc
int
outsb
mov
scas
push
mov
fsubrs
mov
icebp
fs
and
push
sbb
push
fucomip
xor
cmc
shlb
ljmp
out
dec
inc
mov
fisttpll
pop
clc
jae
dec
mov
xor
inc
test
shr
aam
sbb
dec
xchg
sub
leave
pop
sahf
or
lock
icebp
insb
sbbb
loop
mov
inc
jns
sub
cmp
cld
in
addr16
in
sbb
sbb
cli
repnz
push
das
pop
mov
or
popf
add
andl
inc
or
in
mov
push
lea
sbb
jge
cmp
push
inc
or
xor
dec
xor
xchg
lock
data16
mov
xchg
xchg
mov
jg
pushf
or
pop
outsl
mov
dec
repnz
cli
mov
int
xor
mov
lock
cmpsl
xor
jae
dec
pusha
les
popl
lcall
out
ffreep
ficoml
lahf
xchg
dec
nop
dec
push
jno
sub
cmpsb
ficoms
mov
enter
xchg
int
stos
sub
inc
les
cs
jo
pop
popa
mov
aam
imul
stos
cmp
and
inc
and
sbb
popf
lods
or
ficoms
lods
lock
cmp
nop
insb
or
and
mov
out
lods
dec
jae
mov
adc
js
addr16
xchg
xchg
dec
in
test
pop
or
rol
mov
loope
xchg
push
inc
aaa
xchg
out
fimull
dec
aad
sub
addr16
data16
int3
push
jecxz
and
ret
inc
adcl
pushf
mov
mov
gs
pop
xor
repz
mov
mov
movsl
and
mov
cmp
xchg
fincstp
insb
or
inc
jno
and
adc
mov
mov
stos
xchg
jns
and
sarb
pop
bound
movsl
xor
sahf
pop
push
or
xor
push
mov
lea
push
lods
ss
sbb
in
stos
ss
ja
sub
cmp
and
or
pushf
and
inc
negl
cmpsl
cs
cmc
stc
mov
enter
and
movb
pop
mov
outsb
sbb
std
inc
mov
cli
fs
jp
adc
cmp
or
xchg
sbb
movsb
shl
movsb
fistpll
jmp
add
sub
fildl
out
es
mov
int
sbb
xor
popa
test
push
sarb
rcl
lret
and
js
mov
push
les
scas
fwait
stos
push
xchg
es
cmc
outsl
mov
lods
icebp
jns
xchg
fwait
mov
and
inc
inc
cltd
sub
dec
addr16
clc
push
mov
stos
pop
sub
fsub
shlb
mov
inc
push
dec
in
xor
lcall
out
cmp
or
and
in
xchg
std
push
xor
dec
stos
push
loop
inc
cmp
mov
xor
stos
out
mov
jmp
pop
xor
xor
pushf
mov
sahf
xlat
inc
xlat
sub
or
dec
cld
out
pushf
adc
sbbb
mov
and
fildl
or
loope
pop
xchg
cld
inc
jbe
jp
int3
jle
cmp
int
aas
pop
outsb
pop
out
xchg
in
pop
movsb
fimuls
ficomps
fcmovnbe
cli
push
sub
outsl
sub
mov
sbbl
inc
in
cmc
in
mov
fldenv
aaa
cmpsl
aam
ss
and
mov
inc
xchg
arpl
adc
iret
nop
jp
rcr
movsl
mov
cld
inc
scas
and
clc
sbb
sub
and
divl
xchg
jo
lock
fbld
rcrl
push
pop
push
xchg
cltd
and
mov
cmp
dec
pushf
je
sarb
mov
test
stos
hlt
sbb
mov
mov
jns
pop
mov
mov
loop
xor
dec
mov
cmp
pushf
pop
cmpsb
out
mov
outsl
movsb
enter
add
outsb
insl
popa
aad
or
and
ja
ds
icebp
jmp
dec
cmp
cmp
jmp
orb
imul
test
stos
rcl
popa
lcall
fwait
inc
xor
outsb
inc
dec
push
out
bound
or
in
sbbl
subl
cmc
inc
lahf
fbld
inc
adc
movsb
sub
aad
lds
sbb
dec
push
jp,pn
pop
sub
cmp
loop
sub
xor
sub
sub
repz
mov
jns
std
roll
xor
pop
in
fildll
movsl
pop
cmp
popa
inc
cmp
test
or
mov
scas
jge
jb
add
movb
jbe
xor
pushf
daa
fidivs
sbb
test
and
jo
daa
push
test
js
mov
dec
xchg
dec
add
cmpb
js
scas
adc
jmp
xor
dec
pop
xchg
pop
mov
daa
and
xchg
dec
fmull
shll
mov
jg
dec
jns
dec
xor
lods
cld
xor
jecxz
mov
mov
sbb
push
pushf
lahf
popa
cmp
push
test
in
lods
les
mov
addr16
test
test
mov
and
lahf
out
push
inc
xchg
test
pop
add
mov
stos
jg
jl
xor
cltd
mov
outsb
sub
inc
mov
cwtl
pop
test
rorb
xor
xor
and
sbb
ss
xchg
sbb
dec
fdivs
mov
inc
xor
dec
push
sub
add
inc
or
std
loope
adc
xor
push
inc
negl
cltd
adc
in
insl
cmp
nop
lcall
ljmp
in
sub
dec
sar
aam
int
xchg
mov
jbe
mov
pop
xor
jno
xor
test
jno
sbb
loopne
pop
inc
sbb
dec
inc
sbb
insl
ds
pop
sbb
dec
lock
cltd
pop
repnz
loope
scas
outsb
js
das
and
jge
leave
cwtl
lahf
mov
jns
imul
scas
iret
sbb
inc
pop
push
cmp
hlt
inc
test
pop
mov
adc
mov
sbb
dec
xchg
aas
push
aad
xor
int3
pop
mov
or
or
mov
sbb
pop
out
and
push
add
call
ljmp
jb
test
int
sti
dec
pusha
in
rol
out
sti
clc
xorl
dec
jge
xchg
cmpsb
mov
lea
movsl
xchg
fstpt
movsb
outsl
rclb
add
andl
ffreep
imul
mov
or
push
cmc
mov
adc
mov
adc
sub
add
cs
pop
lret
adc
dec
dec
sub
jae
aaa
mov
push
fwait
dec
scas
gs
mov
js
sbb
adc
sbb
adc
sub
and
nop
push
push
xchg
sbb
aaa
push
test
movsb
test
mov
std
leave
lahf
pushf
ds
cmpsl
stc
sbb
xor
call
scas
sbb
cmp
mov
inc
jae
movsl
shrb
jo,pt
cmpl
inc
sub
in
push
clc
mov
xchg
push
and
addr16
sarl
pop
mov
xchg
mov
mov
dec
jmp
adc
imul
movsl
leave
stos
lea
dec
xor
sub
mov
adcl
test
stos
mov
inc
movb
mov
push
test
xor
mov
out
push
mov
adc
test
lret
or
push
das
xchg
push
bound
cmc
pop
mov
jmp
dec
es
shl
icebp
or
pop
adc
jmp
push
push
inc
mov
stos
push
mov
inc
fsubs
insl
les
stos
adc
inc
xchg
mov
sbb
sub
mov
lret
or
pop
push
out
cwtl
popl
in
sbb
dec
clc
push
movsl
int
js
jno
daa
cwtl
test
rcr
pop
and
mov
and
lret
loopne
adc
std
fistps
cli
iret
jg
je
mov
mov
cmp
insb
cmpsb
mov
je
jmp
testl
sbb
loope
cmpsb
lods
repz
mov
pop
sbb
jmp
popf
or
arpl
das
and
repz
lds
cmpb
shl
ret
mov
pop
push
jno
jge
lahf
or
adc
pop
out
andl
jle
and
sub
add
push
pop
xchg
push
add
shrl
cmpsl
push
idiv
cmp
jg
pop
mov
rolb
sbb
add
mov
push
and
dec
cmp
push
sahf
mov
xchg
out
xchg
push
jns
xchg
out
dec
fwait
add
mov
push
xchg
jl
sbb
lock
cmp
jb
push
dec
mov
adc
aad
ret
ds
sub
out
xchg
in
xchg
adc
insl
pop
notb
jo
push
outsl
xchg
mov
xchg
cld
mov
out
push
inc
pop
adc
push
movsl
ret
mov
sbb
ret
or
movsb
and
cmp
pop
fs
std
adc
in
adc
inc
mov
mov
sub
stos
clc
mov
stos
negl
cmp
push
and
xor
mov
mov
repz
xor
js
mov
cld
sub
aas
scas
add
or
or
add
sti
mov
fmuls
outsl
adc
inc
xchg
lcall
push
dec
inc
pop
stc
pop
imul
mov
mov
push
in
fstpt
xchg
aaa
pop
addl
jge
add
adc
adc
sub
lods
xor
dec
mov
pushf
fisubrl
fstpl
fistps
or
mov
xor
xor
add
je
push
and
test
movsl
and
stc
pop
mov
not
adc
call
and
push
mov
pop
xchg
pop
push
call
test
cmpl
jb
lcall
sbb
jge
adc
sahf
repz
clc
sub
lock
ret
pop
fucomp
push
testb
jb
decl
repz
xor
pop
cs
cmp
std
add
insl
jnp
xor
sub
addr16
sbb
mov
lcall
in
sbbb
xchg
stc
into
and
mov
aam
add
mov
mov
and
loop
rclb
test
lea
rolb
mov
gs
call
mov
pop
dec
xchg
inc
jge
dec
testl
and
mov
jae
cmp
jle
scas
mov
cld
sti
mov
not
jae
inc
loope
push
in
lods
lods
or
mov
sub
jge
mov
mov
add
jo
sub
test
jns
mov
outsl
loop
mov
test
les
mov
xlat
xchg
cmpsb
repz
loop
xchg
inc
jle
cmp
adc
in
jo
int
out
iret
aam
ss
pop
xchg
jecxz
repz
mov
ret
push
adc
daa
mov
xor
mov
frstor
jne
adc
mov
repnz
push
cs
fidivrl
push
or
shll
push
sar
or
push
mov
push
in
and
mov
mov
mov
sub
sbb
sbb
push
repnz
adc
push
pop
or
js
mov
outsb
cmp
lock
push
mov
xchg
push
mov
aad
adc
shlb
mov
addr16
cmp
sbb
sub
mov
cmp
cs
inc
push
adc
jno
daa
adc
sahf
lret
mov
push
fsubrp
je
test
test
gs
adc
insl
mov
in
dec
mov
frstor
mull
cmp
std
mov
outsl
out
in
lret
cmp
cmp
stc
shlb
inc
rcrb
movsl
std
call
xchg
mov
mov
jp
mov
jne
in
inc
in
leave
xor
mov
cmc
mov
clc
lahf
mov
insb
dec
shl
cmp
ljmp
fdivr
xchg
push
das
into
pop
xor
fnstenv
sub
es
out
inc
add
xchg
aam
andl
je
jp
cmp
pop
shrl
add
movsl
repz
add
or
mov
and
loopne
pop
dec
dec
stc
decl
mov
mov
pop
cmc
call
scas
mov
call
leave
out
lcall
fists
xor
add
push
cmp
and
mov
sbb
movsl
push
push
mov
push
push
nop
inc
push
inc
xchg
add
in
popa
mov
push
inc
fcmovnb
sub
inc
and
jmp
ror
iret
cmovnp
pop
push
out
mov
pushf
sarl
je
or
mov
pushf
cmpsb
push
dec
pop
fwait
scas
pusha
cmc
testb
fwait
mov
push
jmp
scas
lds
sub
or
ret
add
fnstcw
pop
testl
fwait
js
sub
fcmove
adc
cvtps2pi
insb
aas
push
ret
xchg
mov
pop
out
mov
movsb
mov
out
cmp
shlb
jae
pop
iret
lock
lret
fnsave
xchg
pop
mov
std
adc
bound
insl
xchg
mov
and
pushf
aad
popf
aaa
mov
push
cmp
jbe
jle
cltd
jns
jbe
stos
mov
or
into
rorl
scas
and
push
rorl
xor
and
test
inc
shll
xchg
hlt
mov
jl
jge
ret
fdivl
adc
jne
dec
mov
mov
lcall
test
jp
leave
push
adc
and
mov
pop
jle
push
lcall
mov
push
xchg
xchg
inc
push
rolb
and
and
mov
fs
jg
fmul
mov
sbb
ror
shl
out
je
insb
push
popa
and
in
jno
jmp
ss
inc
adc
mov
sbb
loope
mov
push
loopne
jns
xor
mov
in
or
inc
repnz
sbb
pop
cmp
push
add
outsb
or
and
xchg
into
mov
xchg
ret
cltd
lret
fcompl
lcall
jp
gs
cmp
lret
nop
jp
gs
cli
sbb
test
ret
add
xchg
fucom
adc
pop
xor
adc
jno
dec
cmp
mov
push
cld
daa
push
add
cltd
adc
and
gs
insb
ljmp
mov
mov
sbb
lcall
cmp
xor
mov
shrl
mov
cmp
mov
js
jecxz
cwtl
push
and
jl
add
fstp
mov
insb
mov
mov
sub
mov
loope
lock
cmc
mov
and
or
in
mov
pop
loope
shlb
mov
mov
mov
popf
adcb
xlat
imul
push
mov
data16
xor
jle
pop
sahf
scas
pop
imul
std
imul
inc
lcall
repz
xchg
bound
fwait
mov
pop
jp
cli
lods
push
stc
jmp
adc
loope
pushf
outsb
lret
je
xchg
adc
adc
dec
lret
test
dec
dec
fcmovb
mov
or
call
cmp
inc
or
cltd
movsb
mov
inc
cmp
adc
xorl
pop
mov
test
aad
dec
push
and
sub
sahf
cli
aad
or
out
or
int
adc
test
cmp
dec
pop
or
fdivl
imul
push
loope
pusha
mov
inc
add
insb
pop
icebp
enter
dec
or
aad
gs
ret
lods
call
xor
mov
aaa
shll
rclb
mov
ljmp
jns
xchg
and
sub
jecxz
fadds
aam
call
ljmp
aas
scas
loop
mov
mov
int
pop
sbb
movsb
popa
push
gs
stc
add
cli
jecxz
les
push
dec
stc
ja
aas
lds
shll
popw
mov
sbb
cmpsl
push
jo,pn
add
jbe
add
aaa
sbb
out
push
cltd
inc
out
sahf
or
push
sub
int3
test
cmp
hlt
push
dec
sbb
jns
cmpsb
aaa
fistps
cli
inc
mov
lcall
push
pop
repz
pop
mov
mov
or
fstpl
add
mov
jne
sbb
add
mov
and
cltd
push
aam
cmpsb
inc
int
xchg
rorb
or
pop
push
aas
cs
aas
push
xor
test
mov
leave
mov
pop
pop
pushf
mov
lcall
cmp
not
fstpt
int3
fcom
pop
pusha
push
cs
bswap
rclb
cmp
ljmp
and
lds
cwtl
push
dec
out
xchg
push
cmove
pop
and
and
icebp
xlat
push
xor
filds
pop
sahf
pop
nop
push
iret
mov
fs
inc
push
out
dec
sahf
insl
xor
mov
or
xchg
popf
fiaddl
add
xchg
lds
push
cmpsl
in
ss
pushl
mov
clc
out
cmp
push
mov
pusha
loop
ret
sub
enter
inc
inc
push
int
push
js
and
mov
jl
lds
push
mov
mov
std
jle
push
dec
ret
nop
scas
stos
sub
push
insl
into
mov
push
iret
fisubrl
mov
gs
hlt
dec
sub
mov
fdivrs
push
mov
push
ror
dec
mov
jns
and
js
addps
aad
cmp
xor
jg
aad
or
cwtl
jbe
stos
lock
cmp
mov
int3
adc
cld
mov
cmp
mov
pop
inc
mov
mov
popa
or
daa
daa
fidivl
sbb
add
sbb
mov
in
xor
dec
pop
arpl
xchg
xor
sub
add
xor
pushf
cmp
mov
call
mov
or
lods
dec
loope
int
cwtl
cmp
cmp
icebp
insl
stos
adc
sub
or
mov
xchg
sub
inc
inc
scas
movsl
inc
aaa
xchg
enter
inc
push
sarl
add
lcall
inc
xor
pop
mov
xchg
xor
xchg
mov
mov
adc
dec
shl
in
pusha
aam
scas
in
fisubl
mov
mov
inc
in
leave
mov
je
jl
sbb
add
push
push
test
insl
cmp
push
push
fucomp
xchg
add
cli
out
insb
jnp
jo
mov
js
bound
inc
sub
fcoms
cmpsl
pop
dec
repnz
mov
add
incb
int
imul
div
sbb
mov
dec
push
outsb
jl
push
xchg
mov
fbld
cltd
pushf
push
cmp
in
inc
ja
pop
mov
xor
adc
stos
sub
test
adc
cmp
sarl
mov
sbb
popf
jmp
jo
cmp
cmp
stos
or
cli
dec
xchg
inc
and
dec
outsb
call
pop
into
std
das
sbb
in
pop
je
sti
outsb
out
adc
fdiv
and
or
mov
push
test
dec
outsb
andb
mov
sbb
cmc
jge
in
in
mov
xorl
sbb
mov
insb
arpl
jmp
xlat
sub
insb
ffreep
adc
pop
lods
stc
or
xor
dec
shlb
sbb
xlat
push
das
repz
push
ds
inc
push
mov
xor
adc
aas
jnp
into
mov
out
inc
inc
jno
cmp
mov
stos
mov
sub
inc
popf
mov
push
loope
inc
inc
adcb
clc
xor
mov
loopne
sti
add
cmp
push
dec
adc
stos
adc
in
xlat
into
nop
inc
cmc
add
inc
in
into
jmp
cmpsl
stos
inc
xchg
inc
mov
sub
fildll
cmpsb
ja
xchg
das
push
mov
loop
into
add
fisubrs
imul
or
sahf
ss
mov
fisubrs
dec
imul
xchg
and
std
call
leave
ret
pop
lock
mov
in
push
jno
sub
or
in
jmp
pop
sub
mov
mov
xlat
jp
sbb
jne
or
push
decb
iret
and
insb
fwait
out
or
daa
xor
add
sub
scas
stos
inc
dec
mov
push
test
lock
daa
sub
mov
je
inc
add
std
lret
inc
into
cli
popf
outsb
sub
push
sub
ret
dec
sbb
and
std
adc
mov
push
dec
sub
movsb
lods
lock
dec
adc
xchg
popa
les
addr16
xchg
sbb
mov
pop
mov
or
jbe
push
mov
sahf
mov
sub
ja
cmp
or
xor
scas
dec
push
mov
xchg
lcall
pop
sbb
mov
mov
ja
hlt
push
pop
sbb
cmp
jmp
lahf
ret
lods
mov
and
aad
loop
xchg
jns
cmp
cs
mov
dec
jp
mov
xchg
movsl
cmp
das
fidivrs
insl
adc
add
imul
imul
movsb
outsb
or
dec
pop
lret
adc
call
dec
in
pusha
popl
mov
aad
xlat
push
or
shl
pusha
fistl
add
add
inc
jg
daa
or
or
mov
mov
hlt
mov
adc
cltd
lcall
pop
iret
inc
setle
ljmp
in
bound
loop
adc
mov
add
fisubs
loope
ret
mov
sbb
xchg
rclb
xor
mov
sub
and
into
lods
mov
xchg
mov
push
xchg
dec
imul
or
dec
jne
inc
xlat
mov
shlb
imul
pop
and
push
inc
adc
dec
dec
dec
fisubrs
xor
dec
sub
adc
cltd
pop
mov
shrb
lock
out
mov
push
inc
jmp
jmp
adcb
adc
adc
lcall
aas
jb
int3
cmp
cmp
mov
cmp
mov
mov
push
dec
xchg
mov
int3
fnstcw
add
cmp
mov
mov
mov
mov
sub
scas
addr16
faddl
mov
cmp
xor
fdivl
nop
les
ret
add
mov
insl
jecxz
cmp
push
ja
test
cltd
sub
mov
adc
arpl
jbe
mov
enter
popa
fs
aad
sbb
xor
les
cmc
shlb
stos
das
rcr
mov
fisttpl
mov
pop
ja
movntq
cmp
push
sub
shr
sarl
xchg
repnz
mov
in
jnp
dec
xchg
cli
fists
outsl
fnstenv
adc
and
xchg
sub
call
aas
mov
cmp
inc
inc
adc
and
jo,pt
inc
pushf
mov
decl
inc
sbb
mov
shrb
fwait
xchg
out
cmp
push
adcb
leave
xchg
inc
or
sarb
sti
lahf
and
jle
lcall
push
jae
sti
dec
es
sahf
jbe
dec
mov
or
pop
sbb
push
loope
push
fadds
dec
pop
das
fidivl
push
fwait
mov
mov
jne
sub
inc
ret
aam
cmp
aad
add
mov
push
sbb
lret
jmp
outsl
xor
push
das
push
out
aam
adc
dec
fistpl
movsb
mov
in
mov
fsubrs
rcrl
test
int
or
dec
sub
ja
fmull
xor
cwtl
xlat
adc
inc
jnp
mov
push
in
ret
lods
aaa
mov
inc
mov
pop
test
pop
sub
fmull
cmpsl
add
cs
fisttps
movsl
mov
sub
loop
xchg
pop
mov
mov
mov
fwait
or
cmp
mov
or
rolb
or
in
inc
sub
ret
out
jge
std
adc
mov
pop
add
sahf
or
mov
sub
iret
cmp
jge
int3
into
mov
mov
cmpsl
jb
jle
mov
sti
mov
divb
popf
imul
inc
jae
insl
pop
repz
mov
dec
xchg
aaa
sbb
lock
lret
cs
fiaddl
mov
pop
lods
mov
andb
rcll
call
inc
movsl
lahf
inc
jl
push
arpl
mov
and
ret
es
sbb
js
cmpsb
inc
push
xor
imul
inc
sub
lea
mov
vmovss
pushf
outsl
dec
and
adc
xor
sbb
ficomps
fcomps
push
inc
jmp
test
repnz
adc
xlat
and
ja
lods
lds
test
and
mov
inc
aas
xlat
in
cmp
jo
push
mov
test
pusha
cmp
xchg
imul
add
lcall
jl
ljmp
scas
das
aad
rcr
cmp
int
sbb
pushf
out
pop
gs
sti
cmpsb
shr
jb
jne
jl
loope
jo
fdivrs
movsl
fwait
jno
sbb
mov
ljmp
push
xchg
loopne
mov
jecxz
lods
xchg
notb
sbb
dec
icebp
xor
and
fwait
adc
mov
adc
test
insl
ljmp
and
jp
xchg
jle
mov
xor
mov
lret
push
ret
push
in
pop
mov
xchg
push
sub
loop
gs
cmpl
out
inc
cmpsl
push
mov
cmp
add
in
cmp
rol
pop
adc
pop
cmc
insl
pop
cmpsl
andb
mov
out
pop
lahf
jns
call
inc
pop
fwait
xchg
scas
xchg
and
mov
xor
sti
push
cmc
daa
imul
mov
jp
loop
mov
rolb
jmp
int3
ret
ret
adc
imul
in
in
test
daa
adc
mov
movsb
cmc
mov
add
pop
xor
adcl
scas
arpl
mov
pop
insb
and
dec
scas
xor
sbb
imul
sbb
dec
dec
adc
push
sar
es
addl
cmpsl
dec
jnp
mov
imul
aaa
dec
xchg
jp
ret
lret
outsl
subl
mov
pushl
pop
jg
xlat
sahf
ss
hlt
movb
pop
arpl
hlt
inc
fistpll
mov
mov
shr
enter
mov
sub
mov
psubq
mov
ret
cld
dec
pop
cmpsb
or
inc
xor
dec
pop
jp
subb
sti
fs
arpl
sub
imul
jo
or
jno
sbb
xchg
imul
addr16
mov
xchg
xor
add
shrd
popf
test
les
stc
mov
push
lret
insl
fstps
mov
outsl
xchg
xchg
lock
sti
stc
push
mov
mov
loope
subb
cmp
inc
mov
pop
je
push
nop
jmp
std
sbb
jo
cltd
sti
and
nop
into
sahf
inc
xchg
lods
pushf
and
out
sbbb
dec
dec
adc
dec
or
loopne
insl
cmp
hlt
pop
movsb
daa
aas
cmc
sbb
adcl
sbb
pushf
sub
mov
and
adc
adc
pop
sub
cltd
jnp
rcrb
mov
dec
push
xchg
pusha
mov
adc
jmp
push
jno
shlb
mov
lods
add
add
lods
into
and
xor
sub
xor
dec
inc
stos
ss
call
jle
jne
sbb
jp
mov
rorb
sub
mov
ret
pop
jnp
ret
lea
scas
cs
or
cmc
jecxz
jle,pn
imul
je
scas
push
loop
imul
push
sarl
cmp
popf
cmpsb
push
jmp
inc
mov
xchg
inc
aad
outsb
sti
lea
jnp
xchg
outsl
sbb
add
mov
xchg
adc
and
cmp
in
cmp
add
lcall
and
dec
fimull
pusha
xchg
ret
dec
and
mov
mov
lahf
dec
into
cli
sub
imul
mov
mov
iret
xor
mov
cli
inc
insl
cmc
roll
push
cmp
xchg
push
inc
insb
pop
dec
in
mov
shrb
daa
fidivl
inc
jp
xchg
dec
xor
dec
loopne
add
es
cli
push
push
cmp
test
dec
jnp
or
mov
mov
dec
xchg
pop
dec
mov
into
sbb
stos
sub
mov
outsb
mov
jg
fwait
sbb
sbbl
sbb
nop
cmp
cmp
shll
inc
orb
inc
sti
jg
adc
xlat
loop
in
jns
and
fbld
cs
fcomps
xchg
mov
cmpsb
inc
inc
inc
icebp
mov
ja
mov
xchg
int3
mov
jno
pop
mov
cmc
or
les
loopne
dec
ss
push
mov
leave
stos
sti
insl
pop
in
jbe
lods
xlat
xor
sub
ficoml
les
mov
or
stc
xlat
ljmp
popf
ss
pop
add
ljmp
fucomi
mov
adc
push
ja
repnz
in
scas
cmp
jge
fadds
add
imul
outsl
inc
xchg
add
incb
pushf
xor
repz
idivb
iret
inc
int
dec
ret
imul
mov
mov
outsb
inc
out
mov
scas
jae
mov
ljmp
inc
movsl
outsl
in
cmp
test
or
fstpl
jge
fs
mov
js
dec
push
insb
mov
mov
xchg
rclb
iret
popa
adc
cmpsb
in
shrl
loopne
sbb
mov
or
repz
jb
icebp
sub
adc
mov
inc
add
xchg
arpl
les
movsb
in
push
adc
cmp
cmp
stos
testb
pop
sbb
push
push
pop
test
popa
pop
jg
inc
jmp
mov
daa
mov
sbb
sbb
inc
mov
shlb
sbb
mov
aas
pop
outsl
addr16
dec
mov
pop
xor
insl
data16
test
add
xchg
mov
cmpsl
mov
sbb
xchg
fwait
stc
push
xor
xchg
pop
dec
pushf
js
and
pop
xchg
mov
xchg
adcb
lea
jae
sbb
fwait
push
sbb
adcb
mov
insb
xchg
shr
and
cmp
aaa
imulb
dec
es
outsl
sub
inc
ror
adc
mov
repz
add
push
cmp
pop
stos
add
imul
sbb
data16
lahf
int
cmp
jns
shll
cli
push
push
mov
lea
fs
mov
std
add
inc
push
insl
push
vmovaps
adc
mov
inc
aad
rcrl
adc
loopne
in
daa
xor
sub
xchg
pop
aas
cmp
cmp
pop
or
mov
loope
xor
jne
dec
cmp
cli
adc
jmp
or
lock
dec
aaa
mov
inc
push
xchg
push
xchg
mov
and
mov
pop
fistl
mov
cmpsb
hlt
push
pop
or
call
sahf
test
lock
sub
xlat
xchg
gs
add
data16
dec
jbe
sahf
ds
nop
arpl
mov
jge
mov
pop
mov
gs
lods
or
mov
loope
xor
scas
pop
cmpsb
stc
pop
pop
cmp
repnz
adc
adc
xor
int
and
ret
xchg
iret
push
shl
rorl
push
lods
add
out
cmpb
mov
pop
pushl
push
jbe
in
test
push
mov
and
lds
pop
in
pop
inc
inc
dec
sbb
push
in
loope
fiadds
mov
mov
test
lahf
push
cmp
xchg
pop
push
sub
scas
mov
mov
add
stos
ja
or
or
cmp
push
mov
fstps
in
lea
idivb
into
xor
insb
mov
or
or
push
jg
mov
loop
push
shr
mov
mov
sarl
push
mov
add
cld
adc
dec
js
push
adc
rclb
rclb
movsl
add
ds
pushf
add
lret
adc
sub
test
sub
push
insb
xor
ds
push
xchg
cmc
sbb
pop
lea
mov
sbb
mov
push
pop
fiadds
cmp
or
out
add
dec
fisubs
mov
inc
mov
and
cmc
popa
popa
add
inc
testb
cli
daa
jmp
insl
ficoml
inc
cmp
jo
lahf
call
dec
ss
xchg
sub
push
andb
icebp
das
add
xchg
fistps
out
cwtl
mov
mov
fsubs
int3
cmp
mov
xchg
cmpsl
pop
je
iret
mov
push
addb
cmp
je
mov
ds
int3
notb
cmp
into
adc
xchg
cmpsb
mov
fs
adc
mov
mov
and
jno,pn
xchg
pop
stos
xor
mov
or
arpl
xor
and
push
adc
out
flds
pop
je
cmpsl
sbb
iret
pushf
jl
xchg
or
fnstenv
daa
stos
loope
mov
dec
decl
xchg
push
sbb
add
test
pushf
daa
pop
aad
pop
xchg
mov
sarl
and
addb
les
addr16
jbe
inc
jnp
loop
pop
jge
xchg
push
out
stos
rcrl
push
bound
push
aaa
es
aas
js
or
jle
test
leave
cmp
jno
call
fistpl
pop
or
push
scas
in
cmpsb
pop
xchg
fcoml
mov
outsb
clc
inc
popf
popf
fistl
xchg
xchg
and
popf
das
pop
push
xchg
out
mov
test
or
imul
xor
jecxz
adc
insl
in
stos
test
sbb
dec
push
sbb
push
arpl
stc
jne
out
sbb
scas
add
pop
fnstenv
pushf
repz
out
or
mov
inc
movsb
mov
mov
sbb
sub
shrl
dec
inc
jmp
xchg
or
ret
cli
xor
fdivrs
pop
lret
sbb
push
shll
cmp
cmp
xor
aad
insb
aaa
dec
fbld
cmp
cmp
xor
cltd
pusha
notb
fldlg2
mov
ds
lcall
sub
fwait
or
mov
inc
ss
fistpll
rcll
jnp
lret
mov
pop
sub
pusha
sbb
int
lock
jnp
mov
push
aas
fdiv
xchg
jmp
mov
dec
push
mov
in
cmp
dec
sbb
adc
or
addb
push
pop
popf
xchg
fiaddl
leave
jae
cmp
cwtl
sbb
insl
sub
and
mov
xchg
lods
cmpsb
push
out
mov
stos
push
mov
or
mov
xchg
icebp
adc
mov
mov
stos
in
jne
fistpl
sti
dec
mov
sbb
inc
dec
shrb
mov
fwait
adc
push
dec
je
or
mov
repz
sarb
xchg
or
dec
ja
std
jnp
daa
inc
pop
or
push
jo
nop
rcl
fsts
xchg
sbbb
lods
lods
in
mov
movsb
test
add
ret
cld
push
xor
pop
xchg
pop
rolb
hlt
std
mov
inc
pop
lds
jnp
pushf
in
mov
and
lods
mov
pusha
fdivrs
adc
sarb
hlt
scas
fstpl
adc
lcall
xchg
int3
push
add
dec
xchg
pusha
std
ja
fs
mov
mov
adc
lock
fdivrs
add
addr16
jae
pop
sbb
das
inc
mov
push
jne
leave
shll
scas
scas
stos
push
repz
mov
jmp
mov
pop
in
ss
jmp
insb
sbb
mov
faddl
cld
out
lods
mov
iret
ljmp
aas
xchg
mov
movsb
push
xor
jbe
push
punpcklwd
mov
in
add
push
fnstsw
dec
dec
cld
aad
aas
push
aas
push
call
sahf
cld
ss
cld
xchg
push
ds
into
cli
sub
sbb
scas
pop
fsubrl
push
pop
popa
ret
and
jp
xor
std
enter
rolb
xchg
push
jle
insl
jecxz
mulb
mov
inc
xchg
sub
das
push
add
pop
pop
lods
sbb
aas
jl
pop
dec
mov
cli
add
aas
mull
ljmp
ds
lcall
idivb
outsb
add
mov
mov
ret
or
sbb
xchg
mov
insl
mov
xor
add
sbb
jo
fst
mov
xchg
scas
and
loopne
lds
popa
mov
and
mov
inc
ljmp
push
and
lret
pop
inc
punpckhbw
mov
or
fucom
loop
cmpsl
inc
std
or
xchg
xchg
idiv
call
xchg
stc
cs
sahf
lock
inc
adc
fsubs
xor
mov
aad
bswap
inc
mov
lahf
cmp
stos
mov
repz
into
push
add
lods
lret
xchg
inc
into
jns
xor
aam
call
or
pop
insl
idivb
ret
fnstenv
jno
out
pop
mov
testb
std
cmp
iret
jne
lret
sbb
or
xor
lahf
imul
test
fiaddl
jae
dec
fs
scas
imul
xor
mov
sbb
cmp
sub
in
add
inc
push
mov
addb
jmp
jo
enter
shr
xchg
cmp
jp
sti
mov
inc
test
inc
push
inc
inc
and
cmp
sbb
cmp
in
mov
lret
sub
lret
shll
cmp
inc
repz
mov
pop
add
imul
pop
lds
outsb
add
cltd
lret
sarb
and
aas
pop
daa
mov
xchg
cli
lahf
lahf
popa
inc
shrl
jle
int
stos
int
xchg
jae
lcall
leave
adc
mov
clc
div
je
pushf
mov
outsl
cmp
xchg
out
mov
cmpsl
and
and
fsubrl
stc
in
leave
jle
xor
stc
xor
push
ret
mov
xchg
mov
aas
cmp
lock
pusha
mov
mov
ds
xchg
out
pop
aaa
mov
nop
inc
stc
orl
push
cmp
std
arpl
popa
and
popa
add
shufps
mov
mov
lret
scas
imul
sub
divb
or
in
arpl
fucomi
jae
mov
jbe
lock
jl
test
and
cmpsb
clc
inc
aaa
adc
mov
jb
fmul
mov
xchg
aaa
aaa
aam
mov
mov
or
mov
inc
rcrb
jmp
pop
in
mov
and
out
test
xchg
testb
mov
aad
adc
clc
movsl
fisttpll
mov
xorb
or
call
test
inc
pop
mov
inc
inc
mov
jmp
push
daa
mov
cmp
xor
jge
adc
push
fsubs
fwait
inc
push
mov
fwait
jmp
pop
mov
das
sbb
js
jnp
and
lcall
mov
scas
in
mov
repz
daa
xor
inc
cmp
sahf
xor
xor
ror
fistpll
pop
jecxz
cli
and
lock
cmp
shll
fimuls
mov
fdivrs
clc
fcmove
iret
mov
in
pop
xchg
aam
add
sub
pushf
aas
in
push
xchg
outsl
cmp
out
cld
sti
and
jnp
mov
xor
mov
xchg
lea
add
xor
inc
js
sbb
cmpsl
in
or
adc
data16
sub
pop
jne
fistpll
imul
stc
mov
adc
push
mov
or
andb
xchg
mov
leave
outsb
mov
and
test
sub
pop
xor
push
bound
lret
loopne
mov
push
add
scas
addr16
dec
push
ret
inc
cmpsl
jmp
push
iret
rol
xchg
mov
in
enter
push
sbb
cmp
add
mov
fldl
lea
or
sahf
dec
rcr
dec
push
or
mov
scas
jne
into
insb
stos
out
aaa
movsb
hlt
fnsave
nop
pop
push
outsl
icebp
nop
mov
or
cli
aad
xor
sbb
lds
inc
test
jo
fbstp
loopne
adcl
lods
and
sub
or
cmp
xchg
aad
xor
inc
negb
aam
inc
and
aad
divb
inc
or
ret
fistl
mov
mov
pop
hlt
es
pop
pop
push
stc
jo
push
iret
ds
movsl
xor
addr16
rcrl
xor
inc
jno
push
mov
push
shll
add
adc
cli
xchg
lds
leave
fs
and
ret
jg
fs
and
test
in
loope
mov
ljmp
repnz
insb
rorb
fstps
add
push
jmp
mov
mulb
mov
sub
xor
ret
lods
js
repnz
insb
lock
pushf
addr16
adc
xor
inc
cmp
inc
jne
sub
int3
xchg
daa
xchg
cmp
aad
push
sub
sub
jae
xchg
jb
ja
push
ror
pop
daa
hlt
xchg
cmc
dec
sbbl
loop
stc
sbb
testl
mov
in
or
jge
imul
je
inc
jge
cmp
insl
imul
iret
jns
fs
or
cmpsl
mov
ret
pop
add
sub
imul
out
add
lahf
and
xchg
out
inc
cs
add
loope
pop
dec
push
lret
or
or
mov
repnz
push
pop
stos
cltd
inc
shll
in
xchg
adc
fcmovbe
cmp
inc
ficomps
jns
out
lods
mov
jns
scas
mov
dec
xorl
jl
sub
arpl
and
mov
int3
and
jl
and
or
mov
mov
sti
or
mov
xchg
xchg
cmpsb
test
imul
add
lahf
sbb
mov
mov
jp
lea
addl
stos
and
sti
cmpsb
pop
pop
into
ret
dec
xor
inc
sahf
push
stos
idivb
jle
sub
and
adc
sub
dec
xor
sbb
add
fcmovnb
push
stc
hlt
sub
dec
mov
mov
xchg
mov
outsl
and
push
xor
in
arpl
dec
in
xor
dec
pop
js
fmull
pop
pop
test
mov
je
ret
xor
jle
push
out
psrld
push
mov
repz
lods
push
bound
shlb
ret
fldenv
push
or
jo
cmp
xor
cmp
fs
mov
sub
fstpl
xchg
jg
pop
stc
mov
fisubrl
incl
es
xchg
dec
outsb
cli
aad
cwtl
pop
pop
sbb
pop
or
std
int
testb
inc
shrl
sbb
cwtl
sbb
leave
xchg
andb
xor
fcmove
mov
pop
cld
rolb
popf
int
add
cmc
popa
stos
hlt
dec
mov
data16
stc
fidivrl
insl
insl
dec
divb
cmp
cmp
sbb
mov
jmp
inc
dec
fisubl
push
data16
mov
int
cmp
pop
jne
mov
adc
push
add
fidivs
jnp
push
adc
in
xchg
push
pop
xor
pop
mov
or
mov
fcoml
xchg
lods
into
mov
out
ss
sub
push
nop
jae
jb
add
sub
xbegin
or
clc
bound
adc
int3
mov
pop
bound
int3
pop
dec
imul
leave
out
rcrb
mov
js
jge
sarb
insl
mov
xor
ljmp
es
mov
in
mov
js
jne
pop
aam
jl
xchg
pop
popa
mov
sub
cld
xchg
push
shl
loope
dec
mov
sbb
cmp
int3
ret
inc
popf
pop
add
sub
imul
push
fmull
pop
push
seto
sti
xorl
xor
movsl
cld
or
mov
outsb
call
pop
pop
jae
in
jno
into
jns
fucomi
push
xchg
aam
pushf
pop
testl
push
inc
cld
mov
mov
repz
popf
insb
fistpll
iret
and
cs
or
push
mov
xchg
pushf
ret
sbb
dec
movsl
lods
iret
test
jecxz
xor
add
popf
adc
rorl
push
mov
call
aaa
setno
mov
int3
inc
outsb
lods
imul
stos
ss
pop
pop
push
out
je
in
std
or
push
mov
or
out
lret
xchg
fimull
jne
aam
sbb
icebp
dec
ror
daa
jns
sbb
inc
dec
add
mov
mov
out
mov
push
mov
je
hlt
push
dec
xchg
sub
cmp
add
loop
inc
mov
cmp
gs
mov
push
cmpsl
inc
popa
in
inc
xor
fs
adc
std
pop
pop
mov
mov
cltd
aas
enter
insb
js
ds
das
xchg
mov
ss
and
int3
sub
les
cmp
adc
inc
aad
jne
mov
testb
fisubl
repz
cmp
mov
jp
pop
cmp
in
jno
pop
repz
inc
push
sti
mov
pop
test
xlat
jecxz
mov
jg
dec
fdivrl
adc
pusha
mov
dec
fimull
push
cmp
icebp
sbb
mov
jbe
shll
jecxz
pop
orb
mov
sti
sbb
mov
fwait
test
push
ljmp
mov
push
jo
cmp
iret
jl
inc
inc
and
pop
std
sbb
xor
mov
jae
lods
ret
gs
lret
push
out
stc
lret
outsb
loop
pop
mov
add
xchg
xchg
add
rcrb
dec
sub
dec
or
mov
test
xchg
cmpsb
test
insb
into
and
repnz
inc
push
shll
pop
lahf
or
incb
mov
addr16
and
mulb
test
lds
xchg
jmp
arpl
lahf
fsts
jns
sysenter
sahf
push
mov
test
in
js
pop
pop
add
or
aam
mov
pusha
lds
and
add
xchg
ficoms
mov
add
fcoml
lds
test
cmp
jmp
adc
adcb
xor
xchg
sbb
hlt
cmpb
push
scas
test
daa
cld
adc
pop
lds
lods
jecxz
aam
mov
insl
out
js
cmpsb
and
inc
movl
mov
aad
jmp
mov
pop
adc
mov
add
pop
pusha
jl
out
push
cwtl
out
ret
and
ss
mov
xchg
or
and
sub
jns
mov
lcall
adc
pop
int3
sbb
or
ficoml
push
mov
sbb
in
sbb
inc
sub
imul
sub
jmp
add
inc
dec
pop
xlat
insl
add
mov
test
xlat
inc
and
pop
pushf
jne
call
and
jle
rcr
dec
fdivrl
inc
in
adc
cmc
test
adc
xor
jb
in
repnz
lock
cmp
jnp
pushf
or
and
scas
sbb
mov
jl
mov
call
pop
xorl
test
pop
or
xchg
push
jge
jae
or
xchg
push
int
add
into
push
adcb
push
dec
mov
ss
in
fs
add
stos
xchg
xor
in
sahf
movsb
shrl
mov
jg
leave
lds
lahf
out
addr16
sti
and
jmp
inc
jge
xchg
std
pop
es
jne
cwtl
rorb
icebp
pop
add
sub
mov
cmpsl
pop
ret
lea
jecxz
stos
mov
mov
in
xor
mov
hlt
aas
push
ja
push
std
xchg
mov
pop
shlb
aas
lcall
arpl
lret
dec
or
jle
xor
iret
ds
pop
stc
dec
pop
hlt
sahf
mov
lea
jns
and
imul
shll
dec
or
or
stos
dec
dec
cwtl
push
aaa
mov
pop
in
jne
jg
sub
cmp
inc
inc
xchg
and
inc
repnz
icebp
or
ud1
push
sub
lods
dec
sahf
idivb
adc
and
inc
test
je
sub
imul
sub
mov
and
outsb
pop
mov
and
mov
daa
add
lea
cmc
fwait
mov
mov
inc
inc
cltd
rorb
mov
adc
dec
fimull
pop
adc
jg
and
cs
fsubl
repnz
fcomi
in
adc
out
gs
xor
and
sub
jge
or
mov
js
cmp
pop
pop
andl
xor
les
clc
out
jbe
jbe
mov
jecxz
mov
cltd
out
hlt
loop
mov
lahf
jmp
and
dec
cmp
xchg
fyl2xp1
pop
mov
or
orb
stc
mov
inc
jmp
mov
rcrb
jp
dec
and
xor
mov
popf
test
movsl
dec
mov
push
inc
js
sub
inc
shll
aam
cli
int
mov
fisubrs
sub
push
sbb
cli
arpl
lret
hlt
add
jbe
push
fsubp
shl
mov
insb
loope
inc
lods
leave
fistps
cmp
aad
adc
xor
dec
mov
out
add
push
add
push
ja
adc
push
mov
jp
scas
or
lahf
rol
sub
ret
dec
jl
mov
inc
mov
push
dec
jge
jle
shlb
jmp
jbe
and
pop
mov
push
stc
xor
push
arpl
out
sar
push
mov
loop
ret
mov
test
daa
and
jae
test
insl
sbbb
xchg
xchg
dec
lahf
je
sti
shll
ljmp
in
xlat
dec
push
pusha
imul
and
mov
out
cmp
inc
sub
xor
adc
mov
icebp
and
push
pop
sbb
sti
mov
cmp
daa
pop
add
cs
sarb
outsl
dec
lret
cld
push
jb
add
out
ret
fcoms
pop
das
dec
ret
dec
fdivp
ret
ss
das
add
loop
repz
fs
push
dec
clc
push
and
out
fsubrs
push
cmp
and
mov
pop
inc
jecxz
repnz
cmc
sub
pop
cmpsb
cltd
repnz
xchg
pop
jmp
mov
insl
sbb
mov
xchg
push
sbb
ljmp
add
push
xor
sahf
nop
notb
pop
inc
jecxz
mov
sbb
dec
cmpsb
mov
sub
push
jge
cli
mov
dec
stos
mov
pop
sti
push
data16
push
xchg
out
adc
jns
in
push
movsl
cmp
pop
adc
aam
pop
pop
les
les
push
daa
ja
pop
mov
gs
mov
dec
cwtl
and
repz
pop
in
das
test
push
xchg
mov
int3
inc
mov
xor
scas
insl
rcl
andb
and
insl
add
push
lods
cmpsl
mov
out
fsubp
push
pop
pop
stos
xchg
push
jg
pushf
bnd
inc
xchg
push
das
scas
xchg
push
movsb
xchg
inc
cwtl
jo
mov
leave
repnz
fimull
mov
std
mov
in
pop
xchg
pusha
push
sub
inc
push
jge
cmp
lock
outsl
fisttpll
das
inc
fwait
dec
in
in
adc
mov
f2xm1
cmp
pushl
int3
test
ret
inc
rcrb
ja
adc
sub
sbb
pop
sub
xchg
push
mov
sbb
pop
mov
cmpsl
inc
hlt
pop
stos
stc
imul
lds
dec
test
inc
jno
mov
enter
call
ficomps
shll
roll
sub
push
add
xor
addr16
xchg
sub
rorl
and
test
or
insb
pop
shll
arpl
fidivrs
fistl
out
cmpsl
inc
xchg
fists
imul
dec
stos
mov
xlat
mov
xorb
push
push
mov
mov
loope
lret
stos
add
jno
icebp
shrb
cmc
or
ds
das
fcomip
xlat
push
cmc
cld
jg
lods
xchg
lea
mov
push
dec
pop
outsb
or
fsubrs
aas
pop
fdivrl
mov
daa
iret
mov
cmpl
stos
push
jno
js
mov
clc
or
cld
lods
ljmp
or
aad
lods
icebp
xor
stos
push
xor
mov
sbb
aas
maskmovq
idivl
adc
roll
nop
arpl
mov
out
je
push
sub
js
gs
fsubp
add
not
in
pop
leave
sbb
subb
inc
mov
imulb
mov
mov
data16
pop
mov
and
pushf
mov
mov
bt
pushf
cltd
cltd
popf
daa
jnp
mov
jl
xor
gs
pop
mov
into
push
loopne
pop
and
xor
mov
stos
pop
sub
add
push
in
pop
jge
out
out
movsl
dec
out
xchg
fisubrl
stos
mov
in
flds
mov
mov
mov
jb
repnz
sahf
js
pop
add
call
add
test
dec
lods
or
sbb
mov
or
xor
cwtl
std
icebp
outsl
scas
and
adc
arpl
xchg
lock
mov
pop
sub
movsb
stos
inc
dec
dec
arpl
xor
loope
jge
jge
jge
cmc
mov
dec
dec
sti
dec
push
shl
shlb
jmp
push
push
lods
imul
faddl
testb
jle
sbb
dec
into
outsb
cmpsl
daa
imul
xlat
ljmp
cmpsb
adc
add
inc
push
push
mov
sti
outsl
fldt
addr16
leave
inc
mov
or
js
ret
push
rorb
adc
add
scas
fistl
ljmp
ss
stos
in
sbb
cwtl
and
loope
jnp
out
aas
or
lret
dec
in
test
push
test
sbb
mov
jle
add
jne
ret
push
std
jo
aas
push
popf
add
movsb
daa
lock
fcomip
sbb
ret
es
cmp
pushf
sub
ret
pusha
icebp
enter
movsb
or
push
jl
fcmovu
daa
or
add
push
mov
xlat
loop
bound
add
cli
xchg
inc
mov
stc
stos
xchg
sbb
prefetch
push
jno
xorl
cmpb
out
xchg
dec
add
outsb
imul
mov
daa
sti
or
jl
orps
fiadds
pushf
insb
sub
mov
sbb
and
pop
and
out
pop
insb
cmpsb
lret
adc
loop
je
jmp
xchg
push
push
jnp
movb
xor
adc
mov
xchg
cmp
fistpll
xor
dec
mov
fs
or
jmp
enter
movsl
data16
call
push
in
fwait
and
mov
cmpb
push
mov
shl
insb
js
pop
pop
fisubs
fdivrs
sbb
mov
push
jns
fs
cmpsl
iret
mov
ret
and
clc
imul
repz
stos
push
sbb
rcrl
fstl
mov
xchg
sub
mov
sahf
xlat
in
out
scas
lea
sbbb
dec
push
movsl
mov
mov
cmpsb
jecxz
test
dec
push
ficoml
pop
push
nop
lds
xchg
and
fisubs
mov
pop
cld
pop
aaa
xchg
add
cltd
push
orl
jmp
jo
insb
clc
lahf
data16
and
adc
xor
push
loope
movsl
jl
mov
rcrb
dec
rclb
dec
clc
xor
pop
ja
jp
adc
xor
iret
pop
mov
imul
je
mov
sub
xor
int3
pop
lods
neg
mov
loopne
mov
ret
in
cmp
popa
mov
pop
add
subb
testb
fsubrl
imull
loopne
aas
or
outsb
lock
aaa
js
stos
and
out
push
shr
xchg
lea
mov
data16
add
xchg
push
mov
mov
jns
fstl
push
cmpsl
inc
sbb
push
adc
inc
addr16
bound
pop
test
cmp
rclb
push
inc
pusha
jns
add
inc
push
icebp
jnp
jle
or
lea
sbb
add
dec
cmp
jne
or
es
add
into
jp
sti
pop
sbb
fisubs
push
and
bsr
call
lret
hlt
xor
ret
shrl
enter
mov
pop
jg
out
bound
cmc
es
dec
out
xchg
push
popf
mov
xchg
ss
or
mov
fsubr
mov
ds
and
into
in
rolb
push
loope
aad
stc
sub
aas
add
adc
lock
aam
sub
mov
mov
jmp
aas
enter
sbb
adc
xchg
enter
lods
adc
jb
movl
xlat
mov
mov
jns
inc
testl
sbb
ljmp
cmpsb
mov
insl
mov
mov
mov
inc
adc
xchg
jle
mov
lds
loopne
dec
test
jge
dec
xlat
inc
mov
rol
and
and
lahf
dec
les
ja
fidivrs
add
fsubrs
sub
xchg
lea
push
mov
xor
stos
mov
lahf
movsl
rol
das
sbb
aas
push
sub
inc
adc
lahf
cmpb
loope
push
cmpsl
lea
dec
mov
jnp
push
pushf
xor
fmuls
push
flds
mov
sub
nop
pop
jb
push
leave
lea
sti
and
adc
and
movsb
lret
scas
jae
xchg
ret
mov
mov
xor
sbb
loopne
mov
lcall
loopne
subl
outsl
pop
pop
adc
mov
mov
fsts
pop
mov
mov
sbb
stc
mov
adc
pop
jecxz
xor
jge
mov
jno
pop
das
inc
fsubr
jmp
icebp
mov
int
aad
dec
sub
cmp
arpl
pushf
xlat
mov
jne
icebp
sar
xchg
iret
fidivrl
add
fisttpll
ja
or
push
push
ds
jg
test
push
and
jecxz
jge
add
adc
cmpsl
inc
xchg
shl
rol
das
and
inc
stc
pop
in
pop
out
cmp
or
sahf
mov
add
ljmp
xor
sarl
jns
aas
dec
fwait
std
push
cmp
jnp
mov
pop
jle
popf
push
cmp
jp
add
mov
fadd
dec
aaa
in
adc
inc
xchg
add
push
sbb
daa
leave
in
mov
shll
jle
ret
sar
xorb
add
push
xchg
arpl
scas
cli
mov
enter
and
jbe
addr16
dec
imul
add
popf
fsubrs
test
subb
mov
jp
addb
push
xchg
push
inc
pop
jge
and
or
rcl
sub
mov
jle
jnp
ja
or
in
ja
fwait
shr
out
pop
xchg
test
fxch
imul
popf
int3
xchg
in
test
push
pop
stc
pop
push
add
aam
sbb
adc
cmp
pop
or
xchg
sbb
stc
jnp
in
xchg
ljmp
push
and
mov
movb
sub
fdivr
jns
rorb
test
aad
int3
dec
xor
or
sbb
leave
adc
xor
popf
push
mov
iret
mov
push
push
cmp
test
fnstcw
out
rclb
aad
xor
lea
adc
cmp
cwtl
decb
rcrl
and
jl
ss
adc
mov
dec
sarb
rep
sub
jne
mov
jnp
out
mov
pop
in
fwait
xor
pop
mov
jno
outsl
jnp
fisttpll
bound
push
sub
pop
in
fwait
negb
mov
inc
fs
adc
in
orl
xchg
inc
sbbb
incb
add
imulb
push
and
mov
jae
xor
test
sbb
repz
aad
sbbb
push
jo
xor
dec
mov
leave
fmull
fcomi
pusha
filds
call
adcl
xchg
xchg
jbe
xor
and
or
xor
jecxz
xchg
dec
out
daa
jbe
xchg
ret
repz
mov
repnz
test
test
inc
pusha
sub
push
mov
sahf
and
fldl
and
jge
dec
ja
outsl
js
add
imul
enter
clc
mov
jbe
fucomi
lret
das
leave
outsb
push
nop
std
cmp
lahf
lret
in
dec
adc
cmpsl
sbb
bound
push
lds
add
cmp
test
push
push
das
jbe
popf
mov
sub
jle
sahf
push
mov
stos
outsl
out
arpl
xor
inc
jp
in
std
das
leave
sub
jno
and
iret
adc
insl
lcall
std
aad
loopne
pop
cli
mov
pop
cmp
loop
mov
sub
dec
movsl
xor
inc
xor
popa
cmp
loope
push
dec
xchg
and
fsts
cmp
xor
cmp
cltd
rcll
inc
xchg
stos
xchg
test
mov
pop
out
mov
fdivs
loope
es
xchg
xor
sbb
inc
leave
mov
int3
addl
pop
jne
sbb
push
sbb
repnz
sbb
dec
bound
cltd
cs
fcmovnbe
ja
and
pop
incl
mov
sub
out
mov
jno
mov
or
lret
outsl
inc
insb
pop
inc
mov
xor
pop
push
scas
decb
sbb
mov
popf
mov
sahf
jp
cmp
and
popa
pop
push
gs
test
in
out
pop
dec
adc
sbb
jne
cmp
jle
sbb
pop
push
cmc
or
pushf
out
jo
ja
fcoms
mull
add
insl
jnp
jns
stc
das
repz
adc
stc
hlt
mov
in
jmp
inc
mov
es
roll
dec
xchg
hlt
sbb
push
mov
cmp
xor
push
adc
int
rcrl
cmpsb
inc
test
jmp
cli
jle
mov
inc
jne
fadd
push
fnsave
xor
jmp
movsb
dec
enter
pop
xor
adc
in
hlt
insl
pop
iret
jge
pop
cmp
or
mov
je
or
pop
loope
inc
push
dec
dec
gs
test
fwait
dec
xor
jmp
jle
shrl
sbb
push
cs
lcall
sub
jg
lock
fimull
jno
push
shl
add
es
add
cwtl
push
bound
add
mov
dec
lods
xor
and
insl
dec
mov
sbb
addr16
and
imul
or
in
mov
or
xor
lret
std
xor
sub
sbb
or
dec
or
stos
cltd
pop
inc
pop
mov
xor
test
mov
dec
lock
lock
scas
sub
push
mov
addb
fistpll
ficoms
pop
outsl
call
ret
ljmp
push
lret
test
ljmp
repnz
call
mov
adc
mov
push
rorl
stos
out
sbb
jnp
roll
aam
dec
test
push
scas
pop
popa
lock
mov
adc
cmp
xchg
rorb
cs
and
jecxz
cmp
clc
in
mov
xor
mov
dec
xchg
adc
js
pop
pop
into
stos
mov
lea
arpl
inc
sbb
mov
ret
sti
mov
push
push
mov
adc
dec
sub
loopne
js
dec
inc
addb
xchg
sbb
loop
mov
bound
lea
pop
jl
push
mov
stc
adc
mov
xchg
fsub
insl
xchg
xor
pop
jno
adc
push
and
pushf
addr16
jnp
and
scas
mov
cmovno
call
cwtl
ds
pop
lock
adcl
js
xchg
ds
loope
pushf
dec
sbb
jb
adc
mov
test
dec
fisubrl
mov
push
fs
push
into
add
jmp
push
jecxz
adc
fwait
je
das
inc
std
lock
aaa
ret
imul
dec
fdivs
movsl
xor
sbb
mov
cmc
mov
inc
ret
dec
push
push
decl
adc
inc
rcl
test
mov
rorl
pop
push
outsl
jge
addb
add
outsb
pop
aad
cs
xchg
loope
push
sub
fwait
xchg
or
sbb
pop
pop
mov
cmc
ficoms
daa
sub
dec
sbb
mov
or
in
outsl
sub
nop
mov
adc
clc
faddl
outsl
mov
push
ret
ret
test
push
flds
imul
data16
data16
mov
rcrb
dec
fwait
sub
into
adcb
movsl
sub
cltd
fildll
int
sbb
loopne
push
test
and
jle
lret
test
jmp
mov
jbe
sbb
or
in
adc
xor
popa
jne
sub
push
ljmp
jl
outsb
inc
in
iret
mov
int3
lods
mov
or
mov
sbb
and
cld
iret
stos
mov
pushl
dec
outsl
not
cmp
fists
xchg
inc
push
test
stos
pop
sbb
jmp
test
dec
jne
or
leave
stc
lahf
xor
dec
insl
in
mov
frstor
pop
dec
mov
mov
sub
xchg
mov
fimuls
xlat
or
fsubrl
insl
ja
sub
scas
jl
aad
cmp
gs
mov
inc
dec
cmp
sub
imul
cs
repz
sub
cmp
mov
mov
loope
inc
sub
jle
xchg
jno
outsl
sub
adc
aaa
lcall
stos
jae
rolb
and
shll
filds
xor
gs
ss
xchg
add
dec
xchg
adc
sbb
mov
xchg
mov
mov
fwait
adc
scas
pop
lcall
adc
sbbb
push
jno
dec
test
out
addr16
push
lods
and
mov
push
jno
loop
jae
jo
lds
stos
jecxz
or
cmp
int3
pop
iret
clc
mov
adc
sti
mov
mov
out
pop
pop
inc
or
mov
cs
fcomip
cmp
movsl
push
mov
insl
outsb
leave
hlt
adc
sbb
rcll
ret
stos
lock
fisttpl
imul
cwtl
lcallw
jno
fadd
mov
dec
arpl
ret
rorb
and
and
lret
jp
push
cmpsb
dec
xor
ja
cmpsb
mov
jno
cld
adc
shr
pusha
arpl
je
mov
mov
or
sbb
jl
push
xor
stc
inc
pop
mov
jbe
pusha
daa
mov
outsl
daa
sbb
in
push
fs
cmp
or
dec
sub
in
push
cmpsb
imul
lea
aad
dec
xchg
inc
mov
inc
dec
mov
in
inc
dec
fcoms
les
out
cmp
cwtl
adc
loopne
push
jecxz
xorb
frstor
mov
pmaxsw
decb
lock
adc
cltd
movsb
lea
aam
jmp
dec
mov
pop
xor
repnz
sbb
fwait
cmpsl
xor
in
jae
ljmp
ret
push
push
sbb
cmp
movsl
xor
mov
addr16
out
pop
ret
xor
iret
popl
push
jg
sarl
sbb
cmp
push
and
notl
out
xchg
mov
dec
movsb
aas
andl
aad
in
daa
lods
cld
cs
push
inc
jle
inc
xor
inc
ret
and
not
sti
inc
ja
movsl
movsl
sbbb
test
addr16
inc
imul
enter
fistps
cld
pop
rclb
inc
inc
cld
xchg
sbb
pop
hlt
insl
in
and
and
cmp
cld
and
fucom
sbb
add
sub
dec
push
fildll
or
xlat
add
inc
push
mov
inc
jmp
test
je
fmul
xchg
repz
loopne
repz
push
push
mov
hlt
movsl
push
int3
enter
jp
jecxz
cmp
loopne
std
xchg
dec
arpl
je
cmpsb
leave
in
mov
or
cmp
icebp
insb
mov
rcrb
xchg
push
aad
mov
icebp
cmp
shrl
push
mov
lcall
push
mov
std
or
jb
aaa
ja
or
jae
sbb
or
inc
adc
rolb
push
sbb
push
ljmp
fucomi
xor
pop
and
add
loop
adc
fdiv
jnp
inc
outsb
sbb
cwtl
loop
cmp
xchg
mov
je
cmp
cmp
mov
inc
jbe
mov
lods
xchg
lret
mov
push
inc
inc
mov
cmp
sub
inc
push
inc
xchg
adc
das
fwait
movsb
rorl
arpl
loopne
gs
cmp
call
jae
pusha
pop
sbb
sbb
dec
mov
outsl
sbb
jl
jmp
add
push
dec
xor
inc
pop
idivl
inc
leave
call
xchg
out
push
test
dec
fisubrs
push
orb
cld
xchg
insb
inc
fstl
jmp
nop
jle
lahf
pop
or
inc
imul
mov
subl
cmp
pop
idivb
popa
lret
push
mov
std
fsubrs
insl
dec
or
popf
inc
ss
jp
pop
cltd
push
mov
dec
inc
sub
mov
ljmp
je
push
repnz
jp
mov
sub
xlat
dec
jl
cmp
sbb
jbe,pt
js
iret
pop
push
add
xchg
shlb
inc
sub
out
in
mov
add
xchg
dec
movb
xor
inc
adc
xchg
ss
inc
pop
inc
sbb
mov
xor
jo
hlt
or
aam
mov
test
push
das
roll
fs
rcrl
mov
adc
push
and
jle
fdivrs
lds
cli
pop
lods
loope
or
mov
push
add
dec
ja
pop
pop
pop
inc
cld
cmpsl
stc
push
push
jae
pop
hlt
xchg
out
jnp
xchg
xor
jns
jno
sbb
mov
cmp
sahf
jp
lret
ss
add
out
fstps
mov
or
jnp
outsl
arpl
push
dec
test
push
pop
mov
pop
mov
inc
es
mov
xor
add
jno
stc
ds
iret
xchg
aas
xchg
arpl
xchg
push
stc
iret
add
sbb
mov
imul
inc
jg
adc
repz
pop
outsl
leave
inc
push
inc
mov
pop
out
mov
mov
mov
push
xor
xor
jl
and
stc
faddp
data16
lret
jo
push
and
aam
push
cmp
mov
test
lret
mov
cmp
fimuls
les
fs
in
inc
arpl
add
xor
ds
push
push
mov
sbb
popa
loopne
fwait
jmp
es
ret
push
sub
jo
mov
xchg
xchg
xorl
jno
ds
mov
mov
cmp
jecxz
outsb
ror
icebp
ffreep
cmpb
mov
jne
push
test
in
fidivs
and
hlt
jg
xchg
sbb
jmp
sbb
cmp
mov
data16
xor
adc
and
ret
outsb
dec
stos
push
dec
fstl
imul
arpl
inc
ror
int
adcb
xlat
mov
add
dec
mov
movsb
inc
xchg
mov
js
jbe
std
sbb
cmp
cmpsl
inc
cmpb
lret
jnp
bndstx
xorb
mov
ds
sbb
mov
mov
add
icebp
mov
test
adc
sub
adc
shll
mov
and
xchg
pop
xchg
not
fs
xor
and
lahf
out
or
cmp
mov
and
cmp
fcomps
mov
jnp
pop
dec
or
sub
cld
pop
pop
sbb
stos
addb
lods
movsb
mov
mov
dec
stc
cmpsb
aam
lea
fisttps
cmp
xchg
cmp
cltd
lcall
movsb
cs
movsb
shr
push
test
dec
cld
and
shlb
rorb
mov
jbe
dec
in
loope
out
ss
or
arpl
in
fwait
or
push
ror
xchg
lret
pop
scas
inc
das
fsincos
push
pop
arpl
add
stos
xor
sbb
push
jne
repz
mov
loope
or
jp
cmp
test
sub
cs
testl
lods
hlt
jbe
jo
fmuls
mov
xchg
lahf
pop
fcomps
fisttps
movsl
lods
lods
fiaddl
inc
cwtl
imul
dec
mov
adc
cmp
adc
les
push
sub
pusha
xchg
push
psubd
jbe
pusha
push
pop
cmp
fisubrs
push
or
jge
lods
jns
bound
fiadds
lock
pop
sbb
adc
cmpsl
xor
inc
aad
xchg
push
cmc
into
cmp
sub
jb
mov
xlat
jmp
nop
add
dec
shl
inc
xor
sbb
leave
ljmp
mov
mov
call
loopne
push
sbb
inc
lock
sbb
int3
outsl
je
shlb
ret
lds
mov
pop
add
es
sbb
insb
xchg
adc
stos
stos
pop
repz
in
push
mov
jle
push
sub
add
cmpl
push
popa
inc
mov
push
lcall
cld
je
aaa
add
gs
iret
xchg
lea
and
jge
xchg
and
inc
push
add
sbb
cmpb
shr
js
push
lock
and
filds
xor
dec
sub
inc
fistpll
ret
out
pusha
push
aaa
mov
or
nop
xor
stos
push
daa
xchg
mov
sbbb
mov
ja
daa
std
lret
cmp
jmp
cltd
aam
push
cltd
xchg
lock
mov
jo
rorl
shlb
xor
push
ss
pop
sbb
test
rcrb
fcmovbe
add
ret
xchg
test
int
repz
mov
pop
int
in
xchg
data16
jnp
pop
pop
dec
mov
shlb
dec
repnz
pusha
aas
insb
mov
mov
leave
rcl
adc
divb
fsubs
shld
mov
or
leave
inc
jp
pop
push
call
xchg
adc
test
mov
std
xchg
inc
sbb
out
xor
sbb
out
xor
lods
je
dec
mov
testb
dec
stos
jle
push
in
jnp
sbb
addr16
push
stos
cmovg
adc
lods
rorb
fidivl
cltd
xchg
cmpsl
add
inc
loop
jnp
es
jo
xchg
cmp
icebp
sbb
in
sbb
sbb
js
and
vmread
add
xor
mov
insl
jge
ficompl
xor
leave
dec
test
cmp
or
sub
xor
call
fwait
mov
shlb
adc
mov
mov
stos
mov
popa
es
test
fsubrl
rol
into
insb
sbb
fdivl
iret
push
jg
sub
add
lret
movaps
mov
dec
lds
in
movsb
pop
notb
push
std
scas
pushw
imul
pop
inc
add
mov
push
in
and
mov
push
lods
and
out
loopne
xor
jne
mov
arpl
stos
xchg
xchg
xor
cmp
aaa
push
xchg
and
xchg
in
mov
popa
sub
push
ja
sahf
scas
arpl
cmp
xchg
ret
das
mov
inc
aaa
xor
test
ret
in
out
push
sbb
ret
call
lret
sub
mov
in
out
mov
pusha
cmp
push
mov
pop
push
add
outsb
stos
mov
mov
scas
jg
mov
mov
orl
jns
jnp
adc
andb
jne
push
lock
sbb
and
mov
mov
pop
mov
out
mov
imul
in
loop
pop
scas
shrb
hlt
js
dec
fcmovb
add
xchg
xor
add
add
mov
mov
adc
cld
rcl
or
clc
outsl
shlb
imul
pop
jo
loop
lcall
cmp
sub
ror
fisubrs
cli
cmp
push
jl
int3
jmp
lock
cmc
test
mov
mov
push
inc
mov
push
rolb
mov
test
stos
and
lcall
push
pusha
push
push
pop
jo
in
xchg
dec
fidivrl
subl
add
icebp
jmp
mov
push
arpl
cmc
push
imul
xchg
adc
mov
jl
pop
mov
cmpsl
pop
add
push
bound
ret
cmpsb
jmp
pop
jns
adc
repz
mov
cmp
and
in
xor
push
rcrl
aad
cs
ss
sub
loopne
inc
push
lahf
mov
in
or
mull
sub
xchg
dec
mov
cwtl
in
subl
das
inc
sbb
jo
mov
test
repnz
sarb
add
lcall
test
push
out
stos
jg
fucomi
add
mov
sbb
push
pop
mov
pop
sbb
jnp
sbb
push
mov
mov
aad
icebp
test
xchg
fs
insl
push
pop
inc
mov
enter
leave
stc
insl
pop
sub
lahf
cmp
cmp
mov
dec
test
stos
push
cwtl
sbb
jge
xchg
inc
add
popa
and
bswap
aaa
rcrb
dec
es
inc
xor
cmp
aam
aad
add
aas
ja
outsl
test
inc
dec
jl
fldcw
or
push
mov
fstpt
jno
enter
subb
gs
dec
jp
popa
lock
cmp
push
nop
push
ret
jbe
xor
and
ljmp
lods
and
inc
into
sub
pop
pop
push
inc
leave
mov
mov
sub
sub
clc
in
rcrb
adc
imul
push
clc
in
xchg
outsb
inc
sahf
lret
aas
jp
addr16
fcomps
jecxz
mov
inc
mov
mov
repnz
jmp
test
je
add
adc
mov
pop
cmp
or
or
mov
repnz
std
xchg
cmp
movsl
mov
xchg
jecxz
xchg
in
std
rclb
sub
and
dec
insb
jb
xchg
xchg
or
xor
andb
push
add
in
movsl
shlb
xor
push
hlt
sbb
in
stos
lret
jo
fwait
cwtl
ljmp
lcall
mov
les
inc
aad
or
jbe
jle
cli
cmp
fisttpll
pusha
mov
and
hlt
nop
shlb
dec
xchg
aas
mov
lds
cmp
and
or
ljmp
imul
lock
cmp
push
fistl
mov
ja
and
sbb
into
ret
cmp
rorb
out
icebp
sbb
or
mov
push
jle
xchg
mov
out
pop
mov
imul
lret
pop
pop
mov
push
fwait
in
sub
ret
ficomps
xor
in
mov
push
add
mov
lea
in
adc
lret
dec
in
in
addl
adc
xchg
bound
cltd
movsb
or
push
stos
push
mov
adc
sub
out
sbb
dec
mov
push
xchg
fisubs
ret
cmp
adc
in
jl
popf
movsl
addr16
push
clc
mov
fs
pop
jecxz
mov
int3
or
xor
xor
je
mov
mov
iret
mov
test
fnsave
iret
jnp
xor
jp
mov
shlb
sbb
lcall
jl
sub
mov
cld
xor
outsb
adc
sbb
int
push
dec
int3
call
pop
push
sub
leave
out
cmpsb
sbb
push
andb
repnz
or
sbb
sbb
push
out
sbb
push
subb
gs
out
and
xchg
push
ss
mov
mov
mov
xchg
push
mov
xchg
repnz
mov
xchg
or
insb
idivl
xchg
movb
fxtract
sub
call
out
adc
mov
pop
dec
inc
jmp
dec
sbb
outsl
cmp
add
add
nop
loope
cld
xchg
orl
jae
pop
ds
pop
das
lahf
mov
scas
mov
jle
xlat
ss
mov
lods
lods
lds
ss
cmpsb
mov
push
sbb
mov
adc
out
dec
call
scas
push
jae
adc
adc
inc
movsl
pop
add
in
scas
and
sub
xor
out
push
jae
jecxz
jo
mov
mov
pushf
loop
call
enter
xchg
rol
hlt
jl
xor
dec
je
negb
push
imul
lret
ljmp
in
leave
out
pop
shlb
lcall
jmp
pop
mov
cltd
jp
movsl
push
ljmp
mov
push
xchg
imul
adc
mov
dec
fisubl
in
aad
adc
cltd
mov
mov
xchg
andl
es
jno
cmp
aaa
insb
or
add
jmp
xor
pop
sub
loope
pop
test
push
pop
adcl
mov
xorb
imul
jae
lds
lea
add
push
sbb
pushf
out
lock
stos
dec
dec
mov
add
aam
addr16
in
or
loopne
fcmovbe
cmc
outsl
jbe
cs
push
lock
dec
cmpsb
mov
push
ja
cld
cvttps2pi
js
xor
adc
xchg
js
sbb
pop
movsl
cmc
loopne
cmc
cli
xchg
xor
lods
and
mov
cmc
push
inc
call
fldenv
add
xchg
adc
pop
and
daa
adc
imul
icebp
mov
mov
fisubrs
stos
inc
mov
xor
mov
testl
xchg
or
outsb
aam
test
and
jb
add
cmp
push
int3
cmc
rcll
adc
mov
xchg
sahf
adc
in
cmp
and
mov
filds
pop
aaa
pop
or
and
mov
mov
arpl
pop
aad
or
push
xchg
outsb
insl
mov
loop
andb
repnz
xor
fbld
aad
test
outsl
sti
out
sub
icebp
cmp
lret
lods
nop
mov
call
xchg
sbbb
ss
andb
pop
sub
sub
mov
mov
jmp
mov
add
popa
push
push
cmc
test
bound
std
fildl
rorl
mov
push
adc
mov
imul
cs
int3
popa
sbb
xor
lahf
mov
jnp
push
lret
repnz
sub
cwtl
scas
in
imul
sbb
fstpt
push
pop
rorb
jmp
aas
jg
iret
lea
leave
inc
cmc
push
and
lods
push
inc
decb
pushf
imul
push
nop
mov
sub
and
adc
iret
xchg
scas
xchg
insb
xlat
lods
jmp
imul
std
cli
sub
sub
aaa
shrb
sbb
push
dec
mov
mov
in
mov
adc
int
iret
add
sbb
aam
xor
lahf
imul
dec
clc
adc
adc
cmp
and
test
cli
sub
or
sub
or
data16
xchg
test
stos
cli
jmp
cmp
inc
cmpsb
dec
arpl
push
and
test
bound
push
imul
sbb
test
in
jbe
mov
shll
jno
test
in
ficompl
mov
xchg
inc
or
stc
xchg
pop
mov
cmpsb
sbb
jmp
gs
cli
cld
sub
jp
cmp
movsl
out
gs
jns
shll
lcall
sub
pop
sbb
lret
cmp
push
mov
sbb
or
push
es
or
aaa
aam
ljmp
mov
rcrl
addr16
lea
push
or
add
gs
rcrb
rorl
cmp
push
pushf
aad
push
mov
add
pop
sbb
ds
mov
imul
jo
leave
test
sbb
dec
xor
in
fnstenv
cwtl
mov
fninit
in
dec
add
aaa
inc
test
sbb
bound
into
jle
push
mov
jmp
xchg
aad
sub
insl
fbld
sub
mov
or
cld
andb
push
mov
xchg
imul
cmp
pop
cld
jo
js
repnz
jp
sub
push
jno
ja
dec
cs
rcrl
cmp
inc
sbb
lahf
pusha
int3
sbb
pop
rcll
aas
xchg
ret
mov
out
push
add
mov
fwait
icebp
dec
mov
shl
rcrb
mov
ljmp
call
xchg
fnstcw
js
arpl
xor
push
inc
sbb
scas
push
es
or
push
cmp
imul
xor
sbb
call
mov
or
push
iret
xor
or
test
sbb
dec
cmp
outsl
aaa
in
cmp
mov
lea
insb
jnp
mov
xchg
push
lret
ja
and
sub
or
insl
pusha
push
int3
loopne
or
add
ss
dec
jb
repnz
cltd
push
inc
pop
mov
int
imul
or
out
clc
xor
ss
insb
push
les
cmpl
inc
inc
std
mov
orb
fwait
mov
inc
out
cmpb
sbb
bnd
mov
mov
dec
repnz
and
js
insb
jl
les
jne
dec
push
mov
sub
xor
jnp
and
xlat
int
pushf
sbbl
mov
adc
push
fidivs
ret
shrb
xchg
out
inc
mov
mov
je
dec
and
or
push
daa
leave
mov
xor
dec
mov
nop
sbb
dec
sub
in
dec
or
movups
pop
jae
push
mov
cmp
rcrl
loop
add
enter
aad
pop
jb
mov
pop
and
add
cmp
add
push
pop
test
jbe
cmp
push
les
jp
cli
xchg
xchg
int3
ret
dec
adc
shrl
dec
push
je
lods
mov
jno
cmp
stos
js
sub
outsl
loope
or
pop
sub
mov
sbb
xor
mov
cld
mov
pusha
ret
mov
cmc
cmpsl
imul
push
ljmp
rolb
je
bound
in
push
test
hlt
jns
and
out
out
dec
lret
lret
imul
mov
outsl
push
inc
scas
push
sub
add
pop
sub
inc
mov
les
js
adc
aad
and
fwait
popf
push
movsb
rolb
test
sub
pop
cmpl
movsb
rcrl
xchg
outsl
pop
mov
test
loopne
and
nop
in
aam
sub
arpl
mov
adc
xchg
push
mov
or
mov
lods
shl
jg
add
and
aam
mov
xor
jmp
adc
leave
out
xchg
pop
mov
sub
notl
enter
es
ss
or
push
mov
mov
jbe
add
cltd
frstor
or
mov
lods
mov
movsl
xchg
lcall
mov
jnp
push
orl
andl
negb
push
sbb
in
mov
pop
into
mov
aad
push
and
sar
aaa
orl
int3
sub
lahf
adc
lods
pop
fs
and
jg
add
xchg
or
cmp
dec
cmp
testb
repnz
inc
sub
mov
mov
stc
fldenv
or
fcomps
les
xor
dec
cmp
inc
inc
pop
jle
sar
ss
sub
sbb
mov
mov
fwait
lds
xor
jg
int3
arpl
inc
xor
jp
pop
sbb
sbb
sub
sbb
cmc
gs
mov
hlt
sbb
mov
fcoms
add
movb
add
test
push
notb
sbb
out
rcl
cwtl
push
pop
movsb
aad
pop
push
jecxz
in
popf
fdivrl
sub
loopne
pop
xchg
and
cmpl
mov
push
aad
push
cmp
xor
jne
dec
add
jg
sub
lret
xchg
outsl
gs
sarl
notb
xor
idiv
and
pop
adcl
nop
daa
cltd
imul
out
ljmp
xchg
sbb
test
or
mov
jno
pushf
xor
sbb
cwtl
adc
pushf
pause
pusha
xor
add
push
pushf
cmc
mov
pop
mov
das
bt
mov
or
push
lea
mov
test
jp
xor
dec
inc
ret
sbb
sarl
push
out
std
push
popa
dec
aaa
xor
aas
aaa
enter
sti
arpl
outsl
fists
xchg
rorl
and
mov
ficompl
shl
pop
mov
ds
shrb
mov
xor
push
mov
fists
outsb
in
add
push
pop
jp
xor
push
sbb
fwait
enter
adc
inc
aam
inc
mov
nop
mov
nop
or
push
jecxz
call
xchg
xchg
int
pop
in
and
mov
lods
pop
fsubs
dec
jne
les
das
cmp
push
jae
aad
lea
mov
movsb
inc
lret
jns
lcall
leave
jb
pop
jg
cmp
das
filds
pushf
data16
outsl
xchg
ret
push
mov
lods
inc
movl
das
jg
push
out
and
xor
popf
or
enter
rolb
dec
adc
mov
mov
call
xor
ja
pop
ja
lds
stos
into
fists
or
cmp
jle
cld
cld
dec
lcall
ficoms
mov
sub
lahf
and
and
out
add
cli
inc
jl
clc
dec
cmp
mov
fwait
repnz
daa
sahf
iret
push
xor
or
push
mov
pop
das
dec
push
incb
lds
lcall
int3
cwtl
xor
cld
fidivl
adc
loop
sub
mov
xor
das
insb
inc
and
inc
cmc
sbb
sbb
pop
or
cmpl
int
pushf
add
outsl
xchg
clc
lds
jl
lahf
in
xchg
and
mov
cmp
lods
int3
test
mulb
data16
push
fsubrl
push
xchg
aaa
les
arpl
push
fisubs
mov
loop
cmp
push
cwtl
add
push
adc
mov
insl
jo
xor
sub
xchg
pop
out
mov
add
mov
mov
pushf
shrb
sbb
mov
and
adc
inc
xor
mov
jp
pop
or
xchg
arpl
fnstenv
rorb
dec
mov
xor
leave
jge
mov
lea
bound
stc
adc
or
idivl
test
dec
insb
mov
dec
sbb
das
mov
dec
mov
inc
xor
and
mov
sbb
dec
mov
cmp
dec
cmp
add
flds
aam
adc
cmc
test
xorb
mov
pop
mov
pop
inc
pop
out
je
movsl
push
loope
ret
cmc
nop
fwait
pop
or
lds
je
pop
push
dec
xchg
in
cmpb
or
es
clc
das
js
jecxz
rolb
imul
enter
pop
adc
adc
int3
leave
inc
fwait
adc
loope
jmp
pop
mov
shlb
add
pop
push
xor
inc
mov
sbbl
test
or
shrl
adc
data16
rcrl
enter
and
std
mov
cmpsl
jmp
shr
cs
int3
mov
push
inc
iret
pop
inc
mov
xchg
in
pop
popa
pop
mov
xchg
xor
stos
jno
inc
decl
dec
pop
mov
jecxz
js
add
jnp
mov
and
dec
and
sub
sti
or
mov
xchg
test
fstpl
jmp
ljmp
add
clc
pop
daa
xor
loope
jp
mov
out
xlat
iret
xchg
or
mov
mov
fstp
sub
pop
lock
aaa
pusha
movzbl
dec
push
clc
mov
loopne
aad
sub
stos
lds
insl
jnp
mov
test
out
push
int3
aaa
xor
ljmp
sbb
mov
sub
cmpsb
adc
inc
es
loop
mov
pop
inc
gs
fists
loopne
mov
pusha
ljmp
outsl
das
mov
nop
dec
scas
pop
add
loop
cltd
add
xor
out
clc
sbb
mov
es
addr16
sbb
pop
insb
or
mov
xchg
mov
xchg
js
aaa
inc
mov
aam
lock
or
add
xorb
mov
pop
lds
inc
shll
pop
icebp
inc
xchg
sbb
mov
sub
aaa
xchg
arpl
outsb
pop
fimull
adc
dec
loopne
pop
push
lret
and
in
mov
mov
and
sbb
jo
out
mov
pop
sub
loop
push
jecxz
nop
xlat
cld
pop
mov
mov
pop
mov
sub
movsl
out
mov
es
mov
incb
or
fidivl
stc
insl
xor
adc
inc
fnstsw
mov
and
test
dec
out
in
push
icebp
and
or
cmpsl
and
jmp
cmovno
and
adc
pop
push
rol
mov
or
je
dec
push
in
fstl
lret
mov
pushf
in
rcrb
cmp
jno
mov
insl
xchg
shll
mov
push
bound
iret
pop
in
dec
and
jb
leave
xchg
add
jmp
mov
pusha
ret
hlt
mov
or
xchg
popa
inc
cmpsb
inc
add
adc
arpl
add
cmp
push
push
ss
cmp
cmpsb
fwait
xchg
pop
dec
ja
pop
test
inc
jg
lods
aam
jecxz
mov
dec
lret
cmp
sub
push
lret
mov
cmp
inc
scas
shll
aaa
sahf
test
jmp
xor
mov
ljmp
fdivr
popa
ja
cmpsl
stos
cmp
adc
data16
xchg
dec
mov
int
dec
add
repz
or
cwtl
lret
mov
sub
ds
add
pop
out
cmp
cmp
ljmp
cli
fnstenv
fs
fidivs
shlb
into
inc
ss
xlat
fwait
xor
dec
les
sub
lcall
mov
xchg
aas
call
pop
pop
push
sbb
dec
clc
repz
xor
inc
fwait
push
jge
pop
jl
es
cmpsl
ret
mov
dec
mov
test
jnp
and
data16
lock
fildll
shr
es
shl
or
push
pushf
test
arpl
out
mulb
xor
mov
push
pushf
popa
jecxz
cwtl
arpl
xchg
or
push
adc
lods
jne
push
les
movsb
xchg
les
jns
jl
adc
inc
jecxz
test
pop
dec
repz
jne
loop
jmp
pop
lods
cmp
jge
test
lods
jmp
fidivs
jle
dec
clc
mov
sub
out
and
jl
js
notb
xchg
push
or
inc
jecxz
cmpl
aam
jns
adc
and
xchg
jmp
scas
fs
xchg
data16
pop
inc
add
jns
ja
add
sbb
pop
sbb
cmc
ljmp
or
test
pop
dec
popf
idivb
jns
out
xor
stos
mov
dec
add
push
test
iret
xchg
shrl
mov
scas
mov
outsl
popf
scas
test
pop
setae
lcall
int
test
xchg
cli
add
lock
icebp
sub
cmp
sub
sub
lds
cmp
mov
out
adc
insl
popf
adc
add
push
mov
push
xlat
sub
cld
popa
push
das
inc
jbe
pop
js
call
sti
inc
std
test
xor
pop
sub
xor
or
movl
xor
cltd
out
push
add
push
stos
lcall
test
pop
mov
ror
cmc
dec
jo
cmp
or
hlt
ficomps
mov
sub
sub
push
xor
jnp
xchg
and
sub
inc
jo
push
leave
inc
aaa
adc
repz
test
sub
lods
push
lret
adc
push
fstpl
push
inc
sti
xor
fldt
push
fmull
adc
mov
cmp
or
mov
xchg
mov
lahf
mov
sub
or
cwtl
push
fsubrl
add
imul
pop
jne
rol
out
ret
aad
arpl
cltd
filds
jecxz
insb
mov
or
rolb
mov
dec
clc
cmp
jge
fs
repz
push
pop
mov
xor
test
or
xchg
xor
stos
repz
jne
mov
aad
shrd
pop
jae
sub
pushf
cld
rolb
push
jne
aad
or
lcall
das
jo
mov
inc
inc
fmuls
pusha
cwtl
adc
dec
inc
jle
sub
xchg
push
add
jmp
rcrb
pop
std
sar
add
push
lods
cmp
or
sbb
mov
xchg
sbb
add
sub
std
pop
ret
cmpsb
pop
setns
lock
popa
push
rsqrtps
icebp
jno
adc
and
mov
int
push
das
sub
jnp
in
jbe
inc
mov
cmpsl
std
lds
sub
lds
aaa
add
push
mov
ljmp
ljmp
nop
addb
pop
adc
gs
das
push
out
andb
aam
lea
pop
mov
mov
sub
mov
mov
pop
jbe
pop
sub
dec
mov
fwait
dec
add
xchg
mov
scas
push
call
cmpb
mov
mov
sar
cmp
mov
nop
pop
sub
pop
push
fidivrl
sbb
and
push
cmp
je
fstpt
xchg
pop
sub
inc
pop
out
push
inc
mov
and
inc
scas
ljmp
mov
pusha
cmp
adcl
push
gs
jae
adcb
outsb
fldl
fs
or
pop
imul
lret
ror
fadds
mov
adc
popa
or
je
leave
cld
jnp
lahf
test
jno
mov
xor
shlb
aaa
mov
bnd
aas
outsl
sub
dec
xor
lret
cmpsl
add
test
cmp
jecxz
pop
mov
adc
je
es
adc
cld
daa
imull
add
out
fcmovb
sbb
xchg
in
loopne
notb
inc
adc
sbb
loope
adc
or
pop
scas
jmp
mov
push
incb
mov
int3
aam
bound
mov
cmpl
lret
dec
out
hlt
jecxz
popf
fldenv
mov
inc
lret
fsubr
fwait
cmp
fsubrs
divl
das
lcall
icebp
movsb
sbb
add
jae
lret
cmp
add
or
aaa
ja
inc
leave
sbb
out
mov
push
inc
and
test
in
jecxz
adc
inc
shlb
int3
stc
inc
dec
add
lret
les
push
mov
cltd
push
fcompl
dec
jne
shll
add
orl
ret
xchg
and
aam
xchg
jmp
and
cltd
add
or
or
out
mov
stos
lret
dec
shr
fcmovu
inc
imul
cli
and
insl
jne
and
inc
gs
inc
sub
adc
mov
dec
and
lret
inc
sub
bt
subl
into
roll
es
mov
xor
mov
je
xor
cmpsl
in
es
or
mov
add
mov
cltd
push
test
out
lcall
pop
jne
daa
dec
div
out
pop
jae
cmp
jnp
add
fldenv
jo
cwtl
jecxz
jae
sbb
jno
mov
daa
xlat
xlat
inc
outsb
rcl
imul
push
inc
mov
push
or
insl
inc
shlb
add
rol
xchg
sbb
xorl
aam
es
fldenv
jbe
xor
dec
mov
push
clc
loop
mov
cmp
pusha
insl
push
cmp
inc
or
ficoms
fdivrl
adc
add
dec
adc
sbb
jecxz
imul
pop
mov
lret
sub
movsl
xor
popf
push
xchg
pop
scas
insb
inc
add
shlb
adc
mov
jo
call
jle
push
mov
scas
xchg
leave
jno
pusha
add
sub
bound
fcomi
xchg
jb
inc
enter
mov
sub
sub
les
mov
sub
pop
imul
xchg
ret
or
push
push
xor
mov
ss
pop
push
mov
cmp
mov
mov
dec
dec
int3
ficoml
cmp
add
repz
hlt
adc
xor
xor
nop
lahf
dec
mov
and
sub
cmp
xor
adcl
adcl
mov
xchg
xor
jne
mov
cld
outsl
jmp
jge
pushf
mov
inc
xor
adc
xchg
scas
adc
mov
loop
add
jl
loop
lcall
loop
clc
and
fwait
adc
hlt
sbb
adc
sbb
add
cmp
sub
mov
dec
mov
jne
out
pop
notb
int
rorl
push
jmp
loope
rcrb
fs
and
inc
stos
jmp
cld
add
nop
sub
cld
test
dec
cmp
add
mov
xor
and
stc
or
pop
test
dec
and
fistpl
adc
stc
outsb
mov
jl
dec
stos
or
adc
int
cmp
inc
dec
ljmp
inc
add
loope
ret
or
dec
ret
mov
mov
repnz
mov
lret
sub
mov
dec
insb
mov
xchg
xchg
sbb
arpl
imul
andb
pop
lcall
mov
push
bnd
mov
jne
out
pop
mov
jnp
es
xchg
and
popf
push
pop
mov
arpl
inc
jle
xchg
das
push
inc
push
push
jmp
pop
stos
fsubp
cli
pop
not
mov
sbb
push
xchg
std
outsl
and
sbb
les
int
mov
out
sbb
not
add
imul
sbb
aam
adc
dec
add
cmp
insb
rclb
push
out
ret
iret
mov
cmpsl
adc
lcall
nop
out
cwtl
mov
inc
lea
push
in
iret
imul
cmpsb
mov
mov
jo
mov
mov
sahf
sbb
into
rcrl
cmp
and
dec
cmpsb
fcomps
fcmovnb
sarl
dec
mov
mov
stos
std
push
das
push
aas
divb
pop
mov
push
paddd
inc
and
leave
js
das
mov
sbb
lds
inc
mov
lods
adc
inc
sbb
cbtw
loopne
or
cmp
es
add
or
enter
scas
mov
mov
loope
jp
in
fdivp
repnz
jge
jns
cmpb
addb
shlb
int
add
sub
push
push
outsl
inc
jg
pusha
add
inc
or
cmc
xor
outsl
mov
sti
xor
mov
cmp
aam
sti
and
aam
addr16
popf
jg
mov
mov
jmp
pop
add
sbb
adc
jmp
les
mov
jbe
hlt
or
or
mov
cli
scas
inc
lods
sti
pop
pushf
lret
push
mov
push
outsb
ss
testl
or
add
sti
into
mov
jge
dec
in
test
insb
xchg
out
cmp
aaa
jae
mov
test
scas
pop
imul
push
adc
daa
pusha
adc
mov
fnstenv
mov
xchg
int3
sub
or
inc
loopne
adc
lret
sub
lock
mov
sub
iret
shlb
lods
push
lea
sbb
movsl
cmp
dec
sbb
fdivrs
jmp
loope
cmp
mov
aad
add
ficomps
std
mov
ret
and
xchg
inc
lret
cmpsl
cld
xor
add
dec
cmp
push
sub
aad
jle
dec
fsubr
xchg
les
rolb
int3
dec
pop
dec
push
adc
lock
cmp
lds
mov
xor
arpl
mov
pop
and
ss
adc
je
pushf
push
sub
mov
mov
mov
aaa
shl
stos
ss
out
sbb
pushf
sub
dec
in
dec
sub
inc
aaa
popa
xor
nop
adc
sub
adcb
leave
punpckldq
divl
mov
int
sub
test
cmp
pop
aas
bound
iret
xorl
adc
repz
fildll
xchg
out
fadd
sahf
mov
jns
subb
test
ja
out
test
mov
cmp
inc
xchg
pop
pop
xchg
mov
mov
shrl
push
mov
in
jmp
push
hlt
sub
sub
and
pushl
adc
mov
cmp
mov
xchg
push
push
and
adc
sub
lods
scas
push
mov
xor
shlb
add
add
lea
cmc
cmpl
fcmovb
jae
inc
cmp
mov
xlat
cmp
mov
adc
sahf
xchg
es
hlt
xor
sbb
fldpi
dec
cld
aaa
icebp
pop
mov
jle
fbstp
and
ret
test
push
cmp
inc
mov
add
roll
in
fisttpll
fiaddl
adc
sbb
cmpsb
test
and
sahf
and
pop
faddl
fs
popf
add
sbb
mov
enter
aam
mov
cmp
je
ljmp
loope
test
mov
fnstsw
or
in
mov
xchg
mov
into
push
add
or
leave
push
xchg
dec
cs
mov
stc
jle
mov
push
mov
dec
push
mov
jmp
pop
fistpl
xchg
sbb
jge
rol
mov
jle
push
cmp
lahf
cmp
ja
sahf
rorl
sbb
xor
scas
rcrl
push
cmpsb
std
pushf
adc
les
mov
push
xor
cmp
rcl
test
jbe
xchg
pop
push
and
inc
dec
lods
cs
pop
shlb
mov
test
mov
daa
repnz
jns
dec
push
dec
xchg
xchg
and
push
and
lea
mov
lahf
mov
sbb
mov
movsb
dec
pop
mov
cli
mov
push
cli
jge
ljmp
lods
test
mov
or
addl
pop
xor
mov
push
aad
data16
ljmp
test
rcrl
inc
push
out
scas
mov
push
dec
mov
popf
sti
test
xchg
sbb
add
lods
jmp
popf
mov
bound
jae
scas
xor
loopne
fisubs
jp
cwtl
outsl
std
dec
cltd
adc
lret
jb
jb
hlt
enter
out
mov
outsl
push
xchg
add
push
jmp
lods
out
pusha
cmovae
insl
add
cmp
cmp
sbb
testb
sti
push
notl
cmp
shlb
out
cmpsb
and
enter
mov
mov
mov
lods
pop
sbb
cmp
mov
mov
cwtl
dec
int
jge
imul
and
addr16
into
mov
enter
rclb
ss
mov
incb
fistl
subb
cld
mov
out
or
jns
xor
cmpsb
adc
jmp
and
pop
pop
sub
pop
push
push
dec
xchg
inc
mov
stos
cs
arpl
fs
cmp
mov
pop
scas
push
lods
ljmp
lahf
lds
stos
xor
cmpsb
and
mov
mov
cmpsb
adc
rorb
inc
xor
fld
enter
dec
outsb
cmc
loop
decl
sub
sub
movl
push
push
jns
repz
mov
cltd
daa
xor
adc
jle
test
sbb
mov
scas
repnz
dec
aad
xor
sub
lock
std
push
jp
fmuls
dec
jge
jl
js
pop
sub
mov
push
nop
xor
add
pushf
loop
xor
mov
out
aas
or
dec
arpl
push
add
dec
je
iret
pop
jl
or
or
cli
movsb
and
sub
mov
mov
nop
xchg
lds
cli
test
xchg
mov
mov
pop
insl
xorb
cs
sub
aas
scas
aam
or
insb
sbb
insb
mov
mov
inc
ret
imul
gs
pop
push
mov
inc
sbb
pop
in
and
fwait
cli
sarb
push
mov
cmc
xchg
xchg
mov
xor
cwtl
mov
das
fs
push
jnp
cmp
cmpb
mov
and
sbb
fsubrs
inc
btr
insl
lods
inc
inc
dec
pop
clc
inc
and
repnz
mov
in
mov
mov
inc
das
fistl
mov
addl
xchg
xchg
sbb
dec
adc
pusha
pop
jmp
xchg
cltd
stos
adc
js
sbb
pop
sub
and
outsb
xchg
lods
mov
subb
cltd
mov
jmp
jecxz
in
push
call
mov
push
outsl
mov
movsb
sub
inc
fdiv
inc
imul
cmp
push
dec
sub
add
inc
mov
sub
xchg
push
out
clc
add
test
mov
leave
xor
mov
inc
push
pusha
pop
xor
iret
test
mov
repnz
cli
push
mov
cs
stc
sub
xor
sub
js
dec
dec
sbb
pop
lods
mov
fsubr
pusha
out
insl
sub
gs
mov
push
sbb
cltd
je
and
aam
ljmp
icebp
lret
stos
in
jmp
cpuid
scas
cmp
fmull
pop
and
jb
movsb
dec
mov
sub
fnstenv
frstor
xor
lcall
outsb
pop
cmp
fildll
and
jmp
test
push
frstor
push
xchg
jg
fmuls
out
mov
xor
inc
jmp
out
je
push
jno
cmp
inc
push
add
int
pop
jecxz
push
sub
inc
popf
push
fcmovnb
gs
fcompl
fwait
out
lds
lods
fcompl
mov
ljmp
or
xor
int
insb
dec
and
aaa
pop
rcrb
insl
call
sbb
fldl
sub
mov
sbb
lcall
loope
ret
add
aam
adc
js
pop
mov
lods
jecxz
mov
jg
daa
cltd
jo
outsl
test
jo
pop
lods
repz
sbbl
xchg
dec
inc
dec
int3
inc
andl
sti
xchg
or
jmp
mov
cmp
gs
test
cmpsl
pusha
mov
outsl
mov
and
scas
and
stc
dec
int3
test
in
pop
dec
cmp
push
popa
aam
xor
xor
xor
mov
push
and
push
test
mov
out
mov
popa
dec
insl
fisubl
add
incb
inc
xchg
xor
lds
in
mov
lods
scas
lea
cli
test
jecxz
mov
in
jae
jae
pop
push
mov
push
ss
roll
xor
jl
call
mov
in
jnp
mov
rclb
movsl
and
out
adcl
cmp
aad
in
xor
std
push
jg
rsqrtps
bound
sarl
cmpsl
xchg
mov
bound
mov
pop
cwtl
add
ss
adc
popa
mov
incl
fcomp
stos
repz
push
adc
sub
and
inc
fcmovb
mov
outsl
xor
mov
jp
lret
xchg
sub
cmc
fld
inc
xchg
mov
cwtl
or
mov
xor
cld
mulb
imul
xchg
adc
push
xor
lds
fimuls
out
mov
enter
stos
push
adc
out
jle
or
or
lea
dec
cmpsb
mov
and
xchg
push
cmp
cmp
cltd
pushf
imul
lods
loop
sti
inc
ss
es
lea
sbb
mov
mov
add
inc
add
cmp
dec
adc
sub
and
cltd
aad
add
std
or
sbb
and
xor
pusha
pop
xor
jo
mov
jg
notl
cmc
imul
jo
std
test
mov
sbb
add
mov
or
mov
mov
cmovge
fs
mov
or
inc
sub
mov
sub
inc
pusha
icebp
cmp
gs
pop
xor
cli
adc
or
dec
outsl
ss
pop
loopne
add
es
inc
lea
out
jne
out
add
push
sub
mov
push
mov
adc
fstpt
adc
cs
mov
sti
cltd
icebp
mov
dec
aaa
and
dec
mov
xchg
add
mov
push
out
call
icebp
je
mov
sub
cwtl
push
mov
pop
mov
jae
fcoml
or
clc
sub
hlt
cmpsl
out
sub
jo
sar
ds
xor
xor
mov
add
adc
stos
stos
jmp
sahf
mov
pop
adc
clc
push
sub
jae
mov
int
rcrl
stc
lea
xor
lret
pop
cli
bound
jg
mov
jnp
mov
xchg
inc
dec
push
pop
mov
movsl
push
insl
test
mov
xor
or
push
and
imul
inc
mov
and
leave
in
or
mov
jbe
jl
push
xchg
pop
jno
xadd
xchg
cs
loop
out
lahf
orl
add
fistl
hlt
outsl
js
push
or
mov
loopne
cmp
pop
mov
loopne
pusha
loope
jae
les
sbb
mov
xor
inc
cwtl
and
dec
adc
leave
xlat
pop
insb
mov
cmp
pushf
gs
popa
leave
addr16
xchg
cmp
mov
lret
jnp
shr
add
test
jmp
xchg
or
call
cmp
mov
push
shl
pslld
mov
push
sub
fistl
xchg
scas
dec
jg
imull
push
jg
xor
dec
jb
jecxz
fmul
popf
std
pop
ljmp
test
pop
cwtl
jecxz
mov
loopne
xor
cmc
xor
mov
cmpsl
rcrb
xchg
sbb
jne
add
pop
pop
cmp
adc
test
mov
repz
lcall
mov
daa
in
jne
shll
adc
dec
mov
clc
in
mov
lahf
xor
int3
in
sbb
icebp
push
pop
mov
adc
int3
popf
lahf
ficompl
sub
loope
and
test
gs
les
cmp
outsb
cmp
imul
lods
ljmp
xchg
inc
out
fildl
mov
popa
cld
fidivrl
in
jp
repnz
in
shrb
dec
dec
push
loope
lret
xchg
xor
fwait
test
dec
push
icebp
out
fldl
push
lcall
inc
and
lods
repz
aas
sti
ja
mov
add
jge
jne
mov
mov
adc
je
ja
lock
das
mov
cmc
hlt
mov
sub
ss
in
xchg
push
daa
jp
dec
ljmp
mov
and
inc
sbb
pop
mov
dec
into
arpl
mov
xchg
sti
sarb
clc
cmp
mov
xor
cmp
in
xchg
mov
push
xchg
mov
inc
enter
dec
lahf
daa
cmp
mov
fldt
inc
xor
enter
mov
jmp
mov
pop
xor
push
das
rorb
pop
push
jle
jbe
inc
ror
and
sti
scas
xchg
stos
inc
inc
pusha
adc
mov
push
adc
sub
ljmp
in
mov
test
fs
adcl
mov
orb
ss
dec
cld
in
push
mov
icebp
call
jns
rcrb
xor
stc
iret
mov
shlb
xor
pop
cmp
jne
push
pop
or
mov
mov
mov
scas
dec
jle
jb
rcll
out
inc
outsb
pop
jae
repz
inc
cmp
daa
xchg
adc
sbb
test
xor
adc
es
jecxz
out
cmp
jle
sub
repz
adc
mov
sahf
sbb
push
rcr
adc
push
ja
jge
cld
fwait
sahf
aas
sbb
push
pop
cmp
hlt
dec
jns
xchg
adc
inc
ret
cwtl
in
inc
adc
je
push
lods
push
sub
mov
adc
and
ja
dec
push
inc
add
mov
sub
jp
xchg
shlb
imul
ja
cs
dec
arpl
sub
pop
adc
xchg
and
ffreep
dec
das
mov
js
mov
popf
sbb
sar
fs
cltd
out
js
dec
aas
add
cwtl
xchg
push
mov
fdivrl
ja
dec
and
sbb
fldenv
dec
addb
stos
sti
adc
and
jle
jle
shlb
cmpb
inc
lahf
out
adc
lock
mov
push
clc
cld
loope
sub
fcompl
ret
pop
xchg
mov
cmpsl
adc
mov
pop
js
adc
fldenv
add
inc
data16
stos
fdivrl
mov
cld
daa
movsl
add
jnp
sbb
stos
out
jmp
pop
arpl
mov
std
jecxz
mov
popa
xor
adc
aaa
sub
dec
cli
imul
mov
out
cwtl
arpl
ret
inc
test
mov
pop
int
frstor
sti
jge
or
lods
mov
push
mov
nop
sub
sub
add
xchg
aaa
nop
jae
mov
loop
add
aaa
pop
out
ljmp
add
stc
add
movsb
fldcw
filds
cmc
insb
lods
xchg
dec
rclb
adc
or
cmpsb
insb
adc
inc
jae
std
or
mov
movsl
mov
mov
fmull
daa
shrl
lret
js
pushf
xor
les
mov
repnz
jno
pop
dec
pusha
popf
mov
insb
rcl
lock
mov
les
ss
repz
movsl
fmuls
xor
cs
inc
movsb
shlb
enter
xchg
rorb
aaa
and
push
and
aaa
bound
mov
aam
insb
and
sub
daa
inc
xor
pop
std
and
cmpsl
mov
inc
pop
sub
sbb
mov
loop
mov
punpckhwd
es
lahf
add
jne
popf
lcall
cmpsb
popa
cmp
jo
leave
add
das
mov
jmp
jl
and
or
and
sub
insl
pop
fdivr
leave
scas
sub
sbb
gs
int
dec
jmp
cmp
jnp
add
inc
lods
sbb
and
loop
mov
int3
pop
jns
mov
popl
push
repz
jmp
loop
popf
insl
test
and
inc
sub
or
sbb
adc
push
push
and
shlb
adc
dec
sbb
pop
xchg
mov
xchg
or
jle
test
inc
sbb
pop
xor
repz
outsl
out
notb
dec
in
xor
enter
push
jmp
xor
adc
rcrb
xchg
cmp
mov
cmp
xor
sbb
pop
mov
jno
cmp
and
mov
mov
outsb
stos
add
xchg
out
pop
add
incl
jmp
lcall
xchg
lret
pop
mov
lods
sub
scas
in
bound
add
mov
imul
fisubrl
addr16
jo
ficoml
mov
daa
mov
ja
add
adc
test
das
inc
dec
cmp
addr16
jnp
cmpsl
jae
push
int3
jp
inc
mul
mov
xor
xchg
xor
repz
and
mov
sub
cld
pop
insl
inc
or
mov
int3
push
sbb
loopne
inc
sbb
scas
outsl
xor
imul
out
icebp
insl
loope
subl
insl
mov
push
jmp
or
stc
add
mov
aas
sahf
pop
ret
sbb
mov
loopne
dec
mov
fldt
fsubr
shrb
mov
stc
sbb
aaa
pop
xchg
leave
xchg
cmp
inc
dec
pop
lods
mov
cli
inc
nop
xchg
shrl
add
movsb
xor
push
mov
cmp
mov
mov
mulb
ds
xchg
mov
cs
enter
mov
imul
jnp
adc
les
aam
nop
or
cs
xor
inc
inc
jle
sbb
sub
inc
push
aad
cltd
lahf
hlt
dec
xorb
popf
cmc
and
mov
js
fistps
mov
sbb
sti
nop
mov
xor
cmp
dec
push
push
pop
out
add
xchg
in
subb
add
and
pop
out
sub
int
test
push
mov
pop
or
and
cmc
insl
loopne
sbb
pop
andl
in
inc
inc
imul
add
ds
std
dec
imul
xchg
inc
movsl
es
jle
stc
loopne
mov
addr16
cmpsl
lea
fldenv
pop
add
pop
cmp
ds
mov
lret
pushw
dec
cmp
out
int3
addl
jg
sub
or
cmp
inc
out
adc
es
sbb
je
fbld
add
pop
fsub
jecxz
adc
xor
iret
inc
jle
jmp
cmp
mov
js
mov
xor
inc
cmp
imul
mov
cwtl
ss
jns
adc
pop
jno
orl
and
ror
mov
lds
aad
nop
pop
mov
xadd
clc
mov
and
adc
dec
and
sub
and
fucomip
mov
andb
enter
fcoms
mov
or
dec
add
icebp
push
push
xor
pop
xor
das
fsubrs
test
or
das
stos
jbe
shlb
scas
sub
stos
mov
std
or
test
insb
jmp
movsb
or
push
add
fistpll
in
lods
jnp
xor
xor
pop
cwtl
sbb
mov
loopne
rcll
insl
mov
jno
xor
roll
stos
push
inc
fcoms
pop
ljmp
xchg
mov
mov
cwtl
jmp
sti
call
mov
fildll
aaa
cmpsb
sub
jnp
shlb
lret
jge
mov
popf
mull
or
push
cli
sbb
push
or
test
jbe
sahf
push
scas
sbbl
sub
sub
or
test
std
pop
pop
dec
jnp
lods
mov
mov
gs
jo
xchg
lret
sbb
pop
push
bound
jbe
and
loop
sti
mov
stos
mov
or
int3
ja
xchg
sbb
xor
dec
xor
or
enter
adc
mov
filds
pushf
ds
jb
jle
xor
movsl
sbb
add
pop
push
rorl
xchg
add
mov
ret
pop
fmulp
pop
add
and
mov
stc
data16
jl
js
hlt
imul
push
mov
mov
xchg
scas
in
mov
loope
mov
cmc
std
roll
cltd
pop
ror
lcall
sub
sbb
pop
aad
sub
sub
test
int
gs
sahf
mov
inc
jmp
fisubl
leave
jo
shll
dec
adc
and
bound
ret
pop
cmp
outsb
int3
nop
xor
pop
pop
jbe
insb
enter
or
fnstsw
jl
popl
xchg
das
sbb
mov
cltd
nop
inc
incl
shlb
push
mov
add
cmpsb
cmp
shl
out
mov
dec
lds
addb
lahf
pop
jo
enter
push
push
mov
mov
pop
ror
popa
es
cmpsl
nop
sub
lock
rorb
aas
lcall
sahf
jno
mov
lods
cmpl
dec
add
sahf
enter
push
hlt
xchg
dec
add
mov
repz
dec
lock
dec
repnz
inc
mov
lods
fisttps
dec
sub
push
push
mov
test
cld
jp
ret
or
fdivrs
or
ror
loop
outsb
shrl
push
dec
faddl
cmp
cmc
cltd
insl
fiadds
sbb
stos
inc
push
dec
sbb
jle
mov
jne
push
int3
push
xor
int
xchg
insl
add
ss
pop
cmpsl
test
dec
sbb
push
dec
sub
push
lahf
out
cmp
jge
cmp
popa
movsl
push
dec
cs
loop
ljmp
popl
movb
sub
inc
les
pop
outsb
adc
mov
xchg
mov
add
sbb
imull
adc
lea
inc
cmp
je
and
push
clc
fwait
repnz
add
sti
and
fsub
push
cwtl
imul
sahf
adc
enter
into
dec
push
cmp
aaa
inc
mov
gs
inc
pop
lret
add
movsl
data16
js
or
dec
ret
add
aam
push
push
mov
adc
popf
dec
inc
sub
push
cld
sub
xchg
jo
or
je
jo
out
mov
jnp
mov
inc
add
adc
jle
push
enter
or
add
fcmovne
push
hlt
push
push
shr
imul
data16
jb,pt
pusha
out
pop
inc
loopne
mov
dec
sbb
sub
push
push
dec
and
insb
jns
push
nop
dec
jmp
test
inc
gs
outsl
xchg
mov
mov
adc
and
jns
xlat
fdivrl
clc
push
in
jae
push
jns
sbb
in
sub
mov
jge
orl
scas
std
addr16
mov
cwtl
lret
adc
xor
jl
dec
popf
push
fidivrs
lahf
adc
sub
pop
stos
int3
dec
and
loope
inc
testb
dec
loope
sub
ret
daa
ror
sub
dec
adc
loopne
das
adc
pop
out
jmp
fldt
mov
aaa
jb
ss
mov
lret
pop
lods
xorw
xlat
and
mov
mov
and
incl
hlt
push
jle
mov
adc
and
es
nop
pop
data16
bound
inc
mov
mov
out
sub
jg
daa
test
iret
lret
aam
xchg
imul
sbb
fisubs
cli
push
test
xchg
lret
das
mov
mov
lods
push
test
orl
adc
push
stos
mov
inc
scas
les
pop
mov
cmp
imulb
out
subb
inc
push
xchg
mov
mov
cmpsb
bound
jnp
mov
repz
lahf
movsb
sbbl
mov
and
pusha
loop
in
lcall
fwait
ja
jle
push
or
sub
xor
and
dec
jmp
fmuls
mov
sub
or
in
inc
lcall
out
push
mov
lods
sbb
mov
sub
inc
loope
sub
int3
outsb
mov
cmp
xchg
cmp
ja
or
mov
sarb
pusha
xchg
cmp
sub
sbb
mov
hlt
clc
xchg
jnp
aas
fnstcw
outsl
xor
data16
mov
xlat
mov
add
aam
or
fdivs
add
add
je
jp
pushf
cli
pop
xchg
pop
imul
fdivl
xchg
inc
packssdw
pop
jmp
sti
and
and
aaa
nop
jne
aas
inc
lret
jne
or
pop
jno
cmp
sub
lea
ficoms
pop
gs
inc
mov
push
pushf
dec
sbb
lds
or
pop
jbe
into
sub
addr16
jns
inc
das
cmpsb
enter
aas
lea
mov
mov
cwtl
mov
cmp
xchg
lahf
in
outsl
test
les
daa
sbb
rclb
sub
cld
insl
mov
fs
and
jb
stos
jge
or
gs
xchg
pop
mov
xor
mov
sarl
mov
incl
xchg
enter
inc
fcompl
mov
sub
sub
inc
test
sti
adc
mov
push
loop
call
or
xchg
jnp
stos
and
pop
loop
in
push
pop
jae
leave
lret
int
stc
aas
cs
out
inc
jbe
push
push
in
pop
imul
repz
dec
jae
in
jecxz
notb
xor
pop
push
push
test
jnp
dec
idiv
xchg
imul
out
loop
les
jmp
sbb
andb
adc
dec
in
dec
mov
pop
ljmp
lret
mov
and
jp
icebp
outsb
and
pop
and
icebp
and
pop
js
mov
out
call
in
pop
jg
xor
mov
into
out
cs
or
cmp
inc
and
mov
loop
and
jle
imul
adc
sbb
cld
enter
ret
and
inc
int3
push
cmp
cmp
orl
ljmp
iret
jbe
daa
jle
lret
add
cmp
jmp
sub
bound
in
insl
dec
cs
dec
xchg
fdivp
mov
lahf
pop
orl
cmp
or
xor
sti
aas
dec
lods
jecxz
imul
lret
sbb
in
cmpsl
fdivl
push
aas
jne
enter
leave
loope
dec
xor
sbb
or
repnz
mov
add
cld
sub
scas
cmp
push
and
lods
push
and
aam
adc
mov
and
sub
in
jns
jne
jl
inc
jns
pop
ret
dec
mov
rorb
js
aaa
cltd
mov
cltd
jo
outsl
mov
es
pop
jecxz
cmp
sbb
and
adc
repnz
sub
cmp
or
sub
fwait
xchg
ficomps
int
xchg
js
mov
fmuls
and
cli
aad
lret
arpl
gs
sub
call
push
sub
aaa
rolb
or
lret
hlt
mov
inc
lods
in
push
sub
out
orl
mov
sub
or
daa
cmp
in
call
mov
sti
fcomps
pop
ljmp
add
xchg
lcall
jle
fistpl
jae
sahf
xchg
pop
lret
or
and
rcrb
and
cmc
sbb
or
xchg
nop
out
bound
adc
mov
cli
dec
mov
sub
jbe
or
sbb
inc
sub
push
pusha
dec
je
rorb
mov
dec
sti
jg
pushf
in
jecxz
pop
dec
xor
out
in
fs
pop
test
mov
push
aad
pushf
movsb
sbb
xchg
push
je
int
sub
enter
into
insl
xchg
cltd
pop
jns
xchg
fwait
mov
stos
repz
dec
xchg
stc
pop
mov
fstl
jnp
sub
dec
sbb
jg
push
shrl
in
hlt
mov
in
pop
neg
mov
sbb
je
push
cli
in
mov
rcl
xchg
lods
shlb
loopne
mov
add
xchg
aas
inc
adc
inc
cmp
fcoms
addr16
xor
sub
sbb
or
adc
xchg
mov
loop
cmp
mov
scas
lcall
call
scas
sahf
mov
push
push
xchg
xchg
cmp
jg
inc
imul
push
or
push
lahf
pop
sbb
into
fbstp
push
pop
jmp
bound
jmp
adc
lock
xor
dec
lds
jg
pop
enter
push
mov
push
inc
cmpsb
sbb
out
pop
or
pop
es
xor
mov
ds
fnstcw
iret
loop
cmpsb
out
jno
xor
fnsave
dec
outsl
clc
shlb
popa
leave
dec
jecxz
test
cmpsb
and
and
hlt
cmp
sbb
divl
jbe
sbb
xor
ljmp
push
sarb
adc
fs
mov
mov
adc
fs
imul
and
mov
or
cmp
sbbl
sbb
jb
cli
add
pushf
pop
jge
cli
in
jno
jp
movsb
sbb
pop
les
add
push
daa
mov
ljmp
jo
xor
push
and
call
outsb
or
push
hlt
pop
loopne
sti
pop
sub
pop
lea
mov
sbb
aam
cwtl
jbe
jnp
ljmp
mov
lahf
mov
add
add
jg
cmpl
mov
jge
jl
cmp
xor
xor
mov
xlat
fwait
xchg
scas
xor
mov
hlt
ds
push
push
stos
mov
bound
nop
pusha
sbb
push
inc
mov
lcall
sub
mov
cmp
bound
enter
cmc
popf
in
jmp
lea
scas
push
stos
std
mov
arpl
outsl
inc
mov
lcall
loopne
xchg
push
test
in
outsb
lds
mov
mull
and
sbb
add
jbe
lods
inc
js
mov
pop
movsl
lahf
cli
arpl
jp
fucom
xchg
and
and
sbb
dec
mov
and
jae
neg
and
ja
cmc
cltd
push
arpl
pop
push
xor
xchg
in
add
or
int3
insb
mov
div
out
sbb
mov
xor
mov
sub
cmp
push
popf
dec
and
cmp
mov
sbb
aas
shll
mov
in
popa
rolb
dec
aam
sbb
xchg
cmpsl
push
jmp
push
icebp
dec
pop
push
cmc
fiaddl
jns
push
outsl
aam
adc
lea
je
pop
repnz
out
testb
and
cmc
sarb
xchg
notl
in
andl
leave
jbe
popf
inc
sub
push
mov
xchg
rcrb
ret
aaa
sub
add
cmpsl
loope
dec
out
das
or
jbe
popa
pop
out
adc
fstps
repnz
add
pop
loop
orl
out
or
fistpll
adc
lods
push
nop
push
or
stos
test
test
jl
sti
mov
dec
dec
cmp
mov
ds
cs
cmpsl
clc
pop
cs
mov
stos
pop
stos
subl
xchg
xor
dec
adc
sahf
xchg
xor
cmp
aam
test
push
push
cmp
mov
inc
push
shlb
hlt
call
std
pop
arpl
cmp
fs
add
dec
aam
xchg
mov
xchg
fisttpll
mov
jnp
push
mov
cwtl
je
pop
cmp
sbb
aaa
stc
dec
inc
inc
inc
dec
loope
cmp
dec
fstpt
dec
xor
inc
and
roll
or
lcall
cmp
mov
lock
jmp
add
mov
addr16
je
lods
pop
push
or
imul
mov
dec
in
xor
iret
jae
ja
aad
into
outsl
not
enter
and
outsb
add
add
add
les
xchg
add
and
cltd
cld
cmp
inc
xchg
outsb
shufps
imul
cvtps2pi
mov
and
and
call
popf
outsb
add
cli
fnstenv
out
sbb
pop
dec
sbb
mov
sub
jb
add
lods
adcl
stc
incl
pop
xor
xor
push
jp
enter
jbe
push
and
test
mov
sarb
les
mov
rclb
ds
fdivr
pop
loope
xlat
dec
mov
call
jb
or
mov
in
icebp
jb
xchg
lret
mov
sub
inc
mov
pop
xor
push
adc
fmull
inc
stc
lock
push
mov
xor
sahf
stos
cmp
lea
xor
ja
push
mov
loopne
adc
in
push
sub
ljmp
and
pop
xchg
iret
mov
fsubrs
shrb
inc
repz
dec
ljmp
or
jle
ret
bound
lods
cmpsl
loop
test
cmp
mov
inc
push
xor
and
push
push
mov
iret
fwait
test
mov
sub
loop
or
stos
icebp
mov
jo
aad
mov
ljmp
push
adc
mov
ret
std
mov
sbb
loope
mov
jp
mov
std
faddp
clc
jmp
mov
mov
cmpsb
xchg
das
cs
test
rcll
cmpsl
cmp
imul
mov
icebp
icebp
subb
ja
push
sbb
stos
sub
mov
call
push
hlt
iret
or
adc
adc
stos
in
mov
scas
fstpt
mov
fwait
jp
xor
lock
push
sbb
inc
mov
mov
pusha
iret
fildl
push
push
jb
push
add
les
pop
popf
lock
ret
mov
lea
int3
jno
ds
orl
in
mov
data16
sub
and
ljmp
cmp
mov
push
mov
mov
cmp
les
push
or
cld
jmp
push
sbb
xchg
sub
ss
jbe
xchg
cmp
add
cmp
sbbl
inc
imul
sub
jae
lcall
mov
popa
leave
mov
call
xor
dec
enter
lods
inc
iret
mov
push
iret
out
outsb
xchg
mov
push
ror
pop
les
sub
or
push
outsl
ljmp
push
fadds
pop
data16
bound
mov
das
inc
and
dec
ficoms
stc
jb
cli
pushf
mull
stos
leave
mul
xor
xor
pop
mov
xor
dec
ss
fimull
pushf
push
jbe
mov
pop
iret
cmpsb
adc
bound
lret
imul
cmp
fstps
and
lods
adc
mov
pop
cmc
aaa
mov
flds
bound
push
fldt
jle
rcll
lret
lock
dec
pop
jbe
push
les
mov
bound
xchg
jne
mov
inc
sbb
pop
aam
test
lcall
xchg
outsl
leave
cli
adc
aad
inc
es
adc
imul
inc
mov
cmp
push
xor
lods
loop
es
sti
xor
mov
lret
add
xor
xor
xchg
out
ds
mov
pop
nop
dec
aaa
push
mov
xor
xor
ret
ret
dec
cwtl
inc
jg
add
dec
cmpsb
cltd
enter
push
and
jl
cmp
mov
ret
xchg
mov
push
andl
out
jp
jae
jmp
add
imul
mov
jge
push
fsubr
imul
sub
and
or
xor
inc
fdivs
and
sbb
cmp
jo
dec
pushf
or
adc
shl
cmp
leave
push
and
mov
xor
sub
dec
push
add
pop
in
cmp
mov
sti
cltd
xor
add
push
xor
int3
and
inc
test
xlat
pop
pop
sbbl
xchg
ret
rcll
mov
inc
flds
aad
insb
push
das
inc
add
xchg
adc
cli
jl
pop
pop
mov
aad
rcll
mov
ljmp
outsb
sbb
inc
arpl
mov
clc
repnz
test
mov
xchg
pop
cmp
pusha
mov
dec
xchg
cs
dec
mov
pusha
sub
lea
and
inc
stos
adc
into
mov
cmp
daa
aaa
enter
imul
mov
jecxz
addl
xor
sub
inc
xchg
dec
cmp
xor
xchg
int
or
pop
push
fdivrs
leave
into
nop
push
repz
xchg
fistps
in
lods
aaa
inc
add
mov
push
mov
cltd
cmp
mov
cmp
dec
pop
pop
or
pop
stos
sbb
fwait
in
and
lods
ficoml
sti
dec
popf
outsb
mov
push
nop
stc
cmp
nop
outsl
jmp
lods
and
int3
outsb
cld
std
xorl
out
push
test
aam
fnsave
insb
addl
test
sub
mov
sub
sbb
imul
add
insb
test
adc
adc
pusha
into
cld
dec
ss
ret
push
mov
inc
out
mov
iret
pop
mov
femms
out
nop
dec
sub
clc
add
subl
jle
in
mov
sahf
call
sbbb
xchg
push
mov
popf
lahf
imul
fnstsw
mov
mov
mov
add
sub
push
add
lret
in
inc
push
jns
xor
push
jg
les
sub
aas
loop
es
mov
iret
repz
clc
notb
rol
inc
mul
pop
dec
dec
mov
lret
or
add
dec
mov
cmp
ror
int3
repz
push
or
aaa
jle
enter
or
sbb
xor
sbb
imul
les
addb
lahf
sub
lods
out
inc
cmpsl
shlb
add
sub
bound
jle
data16
cmp
hlt
ja
leave
xor
movsb
sbb
ds
cmpsl
imull
outsb
xchg
xlat
fstpt
sbb
add
mov
in
nop
inc
inc
push
sbb
sub
sarb
mov
cmp
out
push
fbstp
repnz
or
jae
push
cwtl
cmp
repz
outsb
mov
add
idivl
sub
add
push
inc
iret
ud1
inc
push
xchg
notb
cmp
sbb
mov
je
fisttpll
jns
adc
jno
mov
sahf
push
dec
test
inc
sbb
ljmp
in
call
and
fstpl
int3
leave
dec
icebp
subb
ret
shlb
cmp
or
lret
clc
idivl
je
or
pop
inc
ds
das
inc
mov
es
pop
xchg
dec
icebp
nop
inc
loop
cltd
repz
ja
test
les
mov
fldl
and
jle
mov
sbb
fbstp
pop
sbb
xchg
roll
xor
xor
mov
add
faddp
lea
jns
ljmp
fistpll
sbb
jb
dec
out
in
dec
daa
inc
dec
and
fs
outsb
fisubrl
ret
aaa
in
xor
das
jae
pop
dec
out
fstps
mov
xlat
push
rep
sbb
cmpsl
xor
sub
xchg
cmp
clc
and
popf
pop
jmp
rclb
loop
inc
xchg
test
fisttpll
jno
adc
cmp
insb
dec
je
pusha
pop
mov
pop
das
pusha
out
mov
xor
mov
ss
loope
jo
push
ja
ret
or
inc
test
sbb
es
inc
inc
lahf
jl
adc
test
dec
add
out
push
int3
ss
clc
sarb
nop
jnp
mov
data16
mov
push
mov
pop
jecxz
mov
icebp
out
adc
dec
arpl
dec
cs
into
or
jmp
cltd
loop
or
mov
clc
out
xor
inc
loope
test
jl
fxch
bnd
xor
mov
int3
jl
ret
aam
mov
decl
add
popa
mov
xor
sub
lcall
lcall
repnz
repz
imul
adc
inc
mov
mov
xor
mov
adc
inc
and
dec
mov
mov
pop
and
mov
mov
stc
js
mov
cwtl
scas
mov
add
fnstenv
xchg
adcl
pop
xchg
cmp
call
xor
sbb
fdivs
or
out
xchg
xlat
lock
inc
or
sahf
insl
cmp
or
push
cwtl
fisttpll
pop
icebp
stc
pop
push
add
test
xchg
adc
push
add
push
add
pushf
mov
add
adc
and
or
lods
push
fdivs
jg
adc
je
push
arpl
jbe
add
add
jbe
mov
adc
push
jb
cmpsl
stc
push
fwait
add
fimull
push
cmpsb
int3
outsl
loop
test
jne
sbb
movsb
shl
daa
je
push
cmp
push
jecxz
ror
or
fcompl
sbb
mov
aaa
inc
sarl
jl
pop
sbb
dec
and
xor
sahf
cmp
lahf
dec
iret
and
xor
dec
mov
adcb
ds
scas
add
add
pop
enter
pop
ds
ja,pn
pop
push
andb
mov
imul
jmp
pop
mov
out
loopne
into
and
je
lods
lds
xchg
stc
out
push
and
lods
out
das
sbb
mov
pop
mov
cmp
mov
xlat
call
aas
fwait
enter
popf
adc
cmp
imul
dec
mov
and
and
leave
cmp
jnp
xlat
mov
jle
mov
pusha
and
pop
mov
xchg
jecxz
push
xchg
das
ljmp
fildll
sbb
xor
xor
fmull
bound
addr16
xchg
and
adc
jno
outsl
mov
fwait
xchg
out
imul
inc
mov
fildl
shlb
outsl
mov
inc
mov
push
adcb
loopne
scas
xchg
cmp
mov
ss
pop
cli
fldl2t
arpl
pop
mov
sub
cltd
adc
inc
xor
push
mov
push
fsubrs
mov
aam
sbb
adc
insb
mov
jecxz
movsl
dec
in
sub
rorb
push
add
movsl
pop
mov
or
shl
fs
xor
sbb
xchg
aad
xor
sbb
push
inc
sub
lods
test
iret
lock
fcoml
lods
sub
add
pushf
icebp
int
imulb
cs
push
aam
js
jmp
mov
xor
and
mov
pusha
sbb
jo
jmp
jno
js
sbb
mov
dec
dec
and
pop
subl
lea
and
sbb
scas
xchg
stc
bound
sbb
iret
pop
bound
pop
mov
repz
dec
pop
mov
lds
dec
leave
loope
jo
inc
jb
fildll
fcoml
lcall
fcoml
push
cmp
pop
stos
movl
mov
fs
pop
stc
sahf
mov
hlt
and
insb
leave
iret
orb
imulb
dec
in
push
mov
in
movsl
mov
sub
roll
cmp
pop
test
mov
or
cmc
lock
adc
sub
es
jae
xchg
xchg
mov
adc
mov
push
push
dec
dec
add
out
lock
mov
bswap
movsl
cmp
fadd
out
jae
fmuls
je
cmp
outsb
cmp
test
fsubp
dec
inc
cmp
or
pop
cmp
leave
cmpsb
fistl
pop
xchg
icebp
pusha
sbb
pushw
inc
inc
add
stos
stos
fwait
rorl
xchg
pop
push
sbb
test
nop
std
xchg
lods
scas
sub
xchg
push
imul
cmp
frstor
sti
fstpt
icebp
sub
ljmp
sub
adc
icebp
add
push
push
mov
add
sbb
aam
sub
xchg
je
cmp
push
push
fidivl
sub
push
enter
jae
shrl
das
jg
cltd
cmp
jmp
jns
shlb
movsl
cmp
inc
dec
insb
xchg
sbb
popf
mov
pushf
jg
imul
mov
test
js
or
pop
inc
jp
sub
rcrb
lods
rorb
repz
xchg
dec
xor
testl
mov
shrl
add
cmp
arpl
mov
xor
pop
dec
loop
sub
xchg
push
dec
push
test
or
in
rcrb
dec
sub
push
mov
dec
divb
lds
imul
jo
movsb
lret
sbb
cmpsl
cmp
js
lods
cmp
xor
int3
fisubs
fimull
jne
xchg
outsb
push
or
jno
gs
push
aas
inc
cmp
sbb
dec
out
push
enter
cmp
sub
cmp
jge
pop
fnstenv
push
into
sub
test
mov
jae
clc
sarl
jg
dec
lcall
mov
test
repnz
ret
lods
sbb
mov
rcl
mov
mov
out
xchg
insl
addr16
or
jge
test
dec
push
sub
xchg
pusha
pusha
aam
or
and
lock
lret
xchg
xor
push
or
loope
out
jb
cmp
pop
pop
pop
cmp
stos
iret
and
cwtl
les
sbb
pop
out
imul
sarl
and
insb
sbb
or
iret
dec
cmp
ss
push
xor
inc
in
pop
xor
pop
adc
les
add
and
ficoms
je
scas
cmpsb
fnstsw
adc
fcmovnbe
ja
jl
fsubrl
iret
lods
push
cmp
lods
mov
dec
jb
mov
test
fwait
jg
jmp
popf
mov
xrelease
jl
outsl
pop
cltd
push
and
shll
cli
sbb
dec
push
pushf
inc
sahf
mov
cwtl
mov
mov
movsb
out
cli
pop
inc
sub
xchg
lea
mov
aam
test
and
cli
rcl
mov
out
inc
xor
iret
lea
mov
cwtl
cmp
mov
mov
push
mov
aaa
or
ljmp
cmc
jmp
dec
roll
shlb
and
xor
cmp
mov
aaa
and
pusha
inc
std
mov
push
add
pop
out
enter
cmpsl
fidivrs
add
ds
inc
mov
fdivs
cmp
push
rorl
sub
stc
les
stos
inc
mov
mov
jno
xor
mov
iret
int
sub
sbb
inc
mov
mov
rcrl
lret
aaa
inc
push
pop
jae
and
out
jg
inc
ja
jmp
repz
and
fisttpl
push
scas
push
cmc
and
sub
inc
and
out
push
add
push
out
dec
lock
sub
fsubr
lods
mov
mov
pop
mov
aaa
bound
rcrb
add
xor
insl
cmp
fwait
movsb
mov
stos
stos
mov
pop
loopne
mov
das
mov
push
lods
push
xchg
sub
xchg
jns
popa
push
mov
orb
ljmp
enter
xchg
xor
inc
imul
xchg
push
push
fdivp
add
je
daa
dec
enter
loopne
adc
inc
mov
push
gs
adc
adc
out
shr
push
stos
mov
out
fs
or
repz
adc
pop
xor
test
sbb
jb
sbb
bound
pop
adc
in
mov
pusha
out
or
movsl
retw
xadd
xchg
cs
push
ljmp
sbb
mov
repnz
push
mov
lret
jb
and
popf
repz
sub
jnp
and
sbb
or
lods
popl
xor
scas
jp
iret
sub
push
insb
lds
adc
icebp
lds
sti
in
popf
in
ret
add
add
sbb
rcll
cltd
ja
sahf
cmp
leave
cmpsl
stos
push
dec
inc
cmp
cmovnp
cmp
mov
sar
push
lahf
push
dec
add
mov
mov
out
out
jae
pusha
push
push
mov
fidivs
into
outsb
mov
fdivs
pop
dec
inc
aad
sahf
enter
fldt
fwait
repz
pop
sbb
aad
jb
add
dec
or
imul
out
es
cli
sub
shlb
int3
inc
sub
jne
iret
jecxz
sbb
clc
xchg
mov
mov
mov
daa
add
and
arpl
addr16
jmp
jle
test
pop
mov
push
mulb
outsb
mov
test
js
xor
jne
mov
pusha
dec
aas
js
jb
ja
ja
lods
inc
lret
outsl
popf
mov
xchg
fs
push
loopne
divl
test
aam
loope
xor
lock
push
lods
add
jle
push
data16
and
push
pop
push
jecxz
xor
lretw
push
outsb
mov
ljmp
cld
xchg
jecxz
lods
dec
sub
push
int3
cs
test
movsl
mov
or
mov
mov
push
out
xchg
push
cwtl
ret
dec
cmpsb
shl
insl
xchg
mov
inc
xchg
out
fldenv
lret
mov
int3
test
push
sahf
jecxz
mov
inc
mov
mov
inc
scas
cmp
leave
inc
jecxz
jno
mov
push
test
sub
mov
jns
lcall
mov
jmp
lahf
xor
inc
xor
xor
or
dec
and
pop
les
mov
or
cli
aaa
andl
pushf
pop
cmc
xchg
mov
xlat
subb
dec
cmp
and
pop
add
int3
and
pop
out
es
push
and
cmpl
jl
outsl
ret
push
int3
je
test
dec
lahf
sbb
movsb
es
mov
out
in
mov
push
mov
inc
sarb
ds
shll
test
scas
add
ret
imul
add
clc
xchg
nop
std
in
stc
add
jne
sub
inc
addr16
insb
add
int3
into
cwtl
sbb
repz
inc
ror
stos
jnp
mov
jne
and
add
cld
clc
hlt
testl
in
subl
xchg
loop
pop
hlt
out
push
out
and
cmpsb
dec
repz
cld
gs
dec
lds
sbb
icebp
les
pop
and
fs
mov
sarl
scas
lahf
arpl
ss
js
xor
test
addr16
rclb
add
iret
pop
add
cmp
xchg
mov
adc
mov
cmc
add
push
notl
mov
xor
movsl
add
push
fadds
retw
mov
pop
jp
jp
test
cwtl
jo
and
or
add
nop
xor
repnz
stos
dec
dec
xor
xor
cmp
lcall
pop
loop
inc
mov
adc
dec
jmp
repnz
lahf
enter
scas
jmp
scas
scas
push
hlt
pushf
je
inc
jge
loope
xchg
aam
push
int3
dec
jmp
xchg
push
aad
or
jg
or
sbb
rorb
outsl
lea
imul
ljmp
ret
adc
dec
push
fcoml
daa
xchg
cli
cltd
inc
jmp
fisttps
sub
cmc
in
fdivrs
test
iret
aam
inc
dec
or
loopne
lret
inc
imul
sbb
sub
ficoml
or
xor
aad
shll
adc
scas
sbb
fsubrl
out
ljmp
sahf
mov
fdivs
pusha
push
pop
push
push
mov
rcrb
mov
xor
mov
sbb
out
xor
inc
stos
xor
inc
iret
or
out
xchg
pushf
popa
push
xor
imul
fistpl
sub
cmp
aam
ss
negb
sub
mov
jg
imul
mov
test
loop
and
xor
push
mov
cmp
jo
mov
ret
test
jmp
pop
mov
and
aas
iret
and
pop
pop
aaa
aaa
loopne
or
dec
negl
xchg
lret
movsl
inc
data16
negl
inc
js
push
sub
call
jle
xor
mov
mov
scas
lea
adc
pop
lret
cwtl
lret
xchg
and
es
jbe
adc
nop
add
cs
ja
hlt
shr
outsl
aam
ds
add
sub
sbb
movsl
out
add
mov
mov
push
inc
aad
push
cmp
jo
lret
cs
stos
loop
sub
or
mov
icebp
bound
mov
aam
fildl
sub
mov
mov
push
fst
cmp
popa
push
or
cmpsl
mov
out
test
mov
iret
lea
push
ret
sti
cmp
mov
scas
xchg
aad
test
push
cwtl
dec
sub
sub
stc
xchg
daa
xchg
std
je
sub
jns
ds
cmp
popl
push
pushf
and
mov
cmp
xor
push
incb
mov
mov
int3
add
sbb
lock
sbb
mov
sub
int
lods
cmp
sub
dec
les
stos
addr16
ret
orl
ret
xor
subl
cmp
mov
sbb
insb
inc
cmp
ficompl
int3
dec
lock
cmp
insl
or
ret
ret
in
loope
shll
fcmovnb
or
xchg
fisubrl
push
jmp
xor
inc
incl
jle
stos
rorl
jo
jmp
mov
scas
mov
mov
shr
jge
jno
leave
or
xlat
inc
sbb
xchg
mov
dec
ret
pop
jg
mov
mov
mov
jno
pop
push
pop
movsb
mov
adc
out
cmp
xchg
push
xlat
in
fcmovb
scas
or
into
cmp
inc
ss
sub
xor
dec
or
fnstcw
inc
aam
inc
imul
mov
loopne
stc
dec
mov
xor
in
fadd
xchg
aad
lock
jg
cmp
push
push
mov
imul
inc
outsb
add
add
or
notb
inc
fsubs
jno
xchg
xchg
mov
push
cmc
into
sub
mov
pop
fldl
lds
mov
ficomps
add
movb
enter
xchg
pop
mov
jl
mov
mov
cmp
dec
enter
mov
jbe
sub
mov
popa
in
lea
mov
or
addl
js
push
loope
js
jp
sti
or
repnz
inc
mov
out
ficoms
fst
stc
sbb
adc
push
subl
or
loop
or
dec
hlt
cmp
push
ljmp
fistps
mov
fistpll
add
stos
dec
mov
aam
enter
sbb
ret
movsl
imul
mov
mov
xor
scas
lahf
pop
sub
fldenv
sub
fldcw
popa
push
cmc
cmp
ret
movsb
add
loopne
clc
xor
addr16
xchg
push
dec
mov
mov
xchg
mov
lods
adc
mov
jle
xchg
pop
lods
add
adc
mov
test
popf
push
adc
add
xlat
incl
fs
lret
pusha
out
push
loopne
call
mov
sub
inc
mov
jmp
and
out
in
xchg
aaa
lret
or
xchg
push
sub
ret
aad
push
movsb
mov
out
mov
call
popf
subl
repnz
pop
arpl
push
push
cmc
sub
or
inc
fsubr
or
xchg
into
or
dec
mov
test
xchg
into
add
push
pop
pmulhw
add
adc
add
mov
xor
cmp
jl
fwait
xchg
fwait
pop
inc
pop
fildl
dec
jmp
fistps
imulb
scas
jbe
mov
sbb
stos
push
push
call
pushf
ret
out
stos
push
aaa
test
scas
test
popa
sub
mov
mov
add
or
sub
jno
inc
subb
mov
std
sbb
jb
sti
xchg
in
out
insb
jle
lods
jmp
je
bound
fdivrs
jo
psubq
or
addr16
ret
mov
les
in
jo
sahf
jle
dec
jns
aaa
xchg
addr16
pushf
sbb
xchg
pop
jbe
dec
mov
jg
mov
std
adc
js
and
xor
or
lahf
fimuls
loope
pushf
mov
or
lcall
mov
push
lods
loop
xchg
mov
aaa
clc
repz
sbb
xchg
in
push
adc
xor
icebp
add
mov
out
aad
inc
sti
loop
sub
cmp
mov
movsb
cmp
adc
fnstenv
and
pop
das
lahf
popa
sbb
fsub
push
mov
jecxz
mov
xchg
jge
cmp
push
fiadds
mov
xlat
bound
fcmovbe
imull
mov
jge
ret
mov
xor
cmpl
push
cli
mov
int3
xchg
iret
xchg
pop
xchg
push
rorl
adc
jno
push
in
shlb
mov
add
lods
das
stos
pop
or
or
dec
shlb
push
ds
sub
scas
xor
pop
je
push
and
sub
call
xchg
add
sbb
mov
in
cmp
mov
jae
inc
mov
pop
or
bound
jno
sbb
aam
pop
imull
enter
movsl
loope
or
xor
xchg
adc
sub
addr16
xor
pop
mov
or
sbb
sti
push
or
push
sub
mov
push
andl
push
stos
lret
cli
pop
bound
shlb
ljmp
insb
call
shll
inc
pusha
sarb
sbb
cmpb
lock
xchg
jns
and
mov
dec
and
pop
repnz
sub
xchg
gs
mov
stos
push
lea
add
cs
and
leave
test
jns
je
push
dec
ret
pop
cltd
dec
ds
push
clc
cmp
outsb
aam
mov
push
pop
cld
in
in
icebp
inc
cli
dec
xchg
aad
lcallw
vmaxpd
int3
add
sarl
mov
in
mov
movsb
cmp
cld
orl
inc
cmp
pop
add
rorb
test
mov
or
andl
mov
jecxz
jb
and
fwait
or
lds
dec
and
je
gs
xor
pmaxub
mov
imul
pop
stos
stc
stos
jae
or
adc
in
aam
xchg
cmp
xchg
sarb
call
lret
pop
movsl
repnz
mov
ret
pop
inc
imul
jecxz
sbb
xor
mov
stos
movsl
pop
xchg
or
push
cmc
sub
mov
add
leave
icebp
rorl
repz
mov
js
adc
adc
jns
xor
fs
jne
pop
data16
xor
cmp
loope
mov
mov
push
push
scas
fisubrs
or
cmp
fsubp
ficompl
je
out
movsl
enter
xor
push
fisttpll
sbb
add
jae
inc
ret
aaa
cmp
sti
dec
mov
call
add
repnz
test
cmp
rorl
movsb
nop
stos
sbb
cs
adc
inc
xlat
sarb
repz
jae
xlat
jns
mov
sbb
into
push
enter
mov
scas
pop
std
jne
outsb
push
arpl
in
adc
inc
mov
outsb
and
loope
loopne
cmp
testb
aad
mov
pop
jmp
imul
or
pop
or
push
negl
cmp
mov
out
loop
fstp
fcmovne
sub
cmp
sbb
call
cmp
xor
jg
mov
sub
or
mov
sti
pop
xchg
ljmp
push
loop
add
add
mov
imul
or
stos
call
jae
fsub
adcb
inc
icebp
stos
or
sub
mov
push
add
arpl
ds
mov
jne
and
mov
into
adc
or
jle
rorb
mov
fsubrp
pusha
fsubs
rorl
adc
pushf
mov
ss
dec
movsl
and
fdivrs
inc
cs
push
jae
movsl
push
dec
sub
popa
xor
test
dec
sub
and
mov
fs
int
mov
mov
fiaddl
push
cld
test
dec
cmp
inc
mov
jno
adc
ret
mov
lea
dec
jmp
jae
aas
push
inc
pop
or
lret
cmpb
xchg
sub
test
insb
sub
lea
dec
mov
fs
in
mov
in
xchg
cmp
dec
daa
fiadds
insl
insl
push
call
dec
aaa
add
inc
fisubl
aaa
fdiv
fwait
cmp
xchg
rcll
stc
mov
adc
fucom
jne
sub
mov
insb
mov
lret
fsubs
push
aaa
push
fcom
mov
sbb
add
popf
pop
in
lcall
xlat
xor
mov
mov
push
adc
cli
mov
xchg
push
outsb
movl
int
in
into
push
test
jle
insl
add
daa
dec
stos
sbb
push
stos
sahf
mov
dec
clc
sub
in
inc
loopne,pn
fiadds
inc
jb
cmp
cmp
cmp
and
loopne
fwait
jbe
mov
cmp
jl
pop
push
adc
xchg
push
xchg
cmc
fcomps
or
enter
dec
cmpsb
add
popa
add
mov
mov
push
arpl
push
jge
and
xlat
lods
mov
fistps
pop
sbb
mov
push
xchg
xor
hlt
test
ret
test
add
insb
pushf
cs
jae
std
mov
mov
inc
lret
jle
bound
dec
test
mov
jne
jno
idivl
rcrl
in
add
test
dec
dec
pop
mov
fs
xchg
mov
les
jle
mov
and
adc
dec
push
mov
or
notb
decb
xchg
lock
xlat
cmpsb
sbb
mov
movl
lret
pop
adc
and
inc
adc
ret
int3
dec
cmc
jne
mov
test
mov
cli
cmc
push
xchg
cwtl
or
imul
aas
repz
popa
xor
mov
xchg
cld
mov
mov
sbb
rcll
rol
inc
or
ret
mov
jmp
inc
dec
pop
cltd
and
jbe
out
andl
xchg
loopne
in
lahf
lods
pop
out
mov
test
cmp
and
and
mov
push
xor
push
dec
cmpsl
add
int3
xor
cmp
imull
lock
xchg
sub
mov
cmp
push
adc
jg
push
out
imul
ret
inc
xchg
dec
xchg
push
jb
adc
jg
daa
cmpsl
mov
jbe
pop
fs
test
repz
lret
mov
das
sub
mov
mov
cmpsl
or
mov
in
lods
sbb
dec
mov
cmpsb
rcll
dec
pop
adc
jecxz
xor
pusha
movsl
jnp
push
repz
mov
mov
rol
leave
jmp
xchg
fs
adc
jbe
sbb
mov
dec
dec
aad
test
fwait
mov
clc
fnstsw
dec
push
loopne
mov
cmc
repz
std
imul
hlt
add
xor
fidivl
out
ja
dec
das
or
outsb
sbb
and
mov
lahf
mov
cs
fs
xor
sub
or
inc
vmread
cmpsb
xchg
and
in
fs
mov
add
sbb
shrb
in
divb
add
jae
jo
sbb
inc
xchg
insl
out
push
cmp
into
push
sbb
movsl
imul
out
jecxz
sub
into
pop
fidivrl
iret
adc
or
in
or
out
adc
mov
in
scas
repnz
sub
ljmp
inc
cltd
cmp
jne
lock
xchg
jnp
fstps
movl
mov
cmpsb
mov
or
pop
xor
ss
or
jge
lods
scas
subl
ret
pop
pusha
push
out
pop
loopne
repz
jecxz
hlt
mov
dec
push
inc
jmp
sbbl
sbb
inc
adc
out
cli
jle
inc
mulb
push
dec
pushf
test
loop
jg
fs
inc
jo
in
lahf
gs
int3
fsubr
lds
out
imul
and
mov
pop
fwait
jecxz
pop
imul
loopne
shll
cmc
cmp
je
outsb
xchg
out
xor
push
and
jl
jbe
xor
mov
das
in
adc
pop
out
ss
ja
sbb
pop
out
rclb
ds
insb
loop
and
mov
enter
lea
movsl
fistps
adc
mov
lock
iret
pop
xchg
iret
movsl
ljmp
enter
xchg
ds
inc
mov
cmp
imul
fiadds
stc
push
xchg
xchg
push
xor
xor
adc
pushf
pop
xchg
rclb
leave
pop
jno
lret
mov
rorb
lods
sub
and
stc
mov
dec
push
xchg
cmpl
mov
push
call
xchg
xor
add
mov
stos
pop
andb
in
in
insb
or
xor
adc
bound
cmp
add
jbe
scas
test
pop
push
jno
ljmp
jmp
loop
jmp
adc
jg
cli
lahf
mov
out
mov
sub
and
adc
scas
ror
jecxz
xlat
xorl
ffree
push
js
sbb
aam
mov
inc
cmpsl
popf
mov
loop
shll
inc
test
out
bound
adc
vmread
in
mov
ljmp
mov
sbb
jp
adc
inc
cwtl
mov
repnz
arpl
adc
je
rol
mov
loope
subl
sbb
lcall
jmp
pop
and
iret
repz
cmpsb
popf
test
sbb
mov
add
bound
aaa
mov
mov
ret
lahf
clc
sahf
mov
stc
jge
movsb
in
testb
imul
adcl
insb
jno
jno
sub
mov
ds
std
mov
cmp
out
sbb
push
push
jp
cs
cmpsl
push
fcmovbe
daa
es
xchg
lock
cltd
push
mov
shlb
int
mull
fnstsw
inc
repnz
lock
push
imul
icebp
lcall
mov
cmp
inc
adcb
ds
ss
mov
jl
cs
loope
cmp
lret
pushf
pushf
aad
or
pop
jbe
in
fidivl
xchg
imul
andl
ds
aad
adc
jo
adc
push
into
dec
sub
jle
and
jae
shll
and
push
subl
out
or
inc
shll
dec
push
sbb
or
push
dec
or
mov
loopne
aam
mov
and
adc
jb
fists
bound
rolb
or
push
xchg
sub
rcll
cmp
or
fisubrl
jne
pop
testl
js
add
mov
and
xchg
mov
and
mov
sub
push
jge
inc
cwtl
push
jae
mov
mov
lret
dec
xlat
lahf
or
in
lea
pop
ss
dec
sbb
pop
sbb
and
jl
dec
sar
movsb
mov
add
mov
and
mov
stos
subl
pop
mov
daa
xor
xchg
testl
jmp
add
repz
out
adc
out
jne
imul
mov
push
pop
nop
or
insb
mov
sub
inc
inc
xchg
cli
shll
lret
call
mov
or
inc
lahf
mov
add
je
xor
je
inc
xchg
cmpb
dec
iret
dec
mov
je
rclb
mov
fdivrs
enter
add
pop
xlat
or
sub
sbb
insb
cmp
cld
add
jno
imul
adc
dec
push
xor
arpl
out
iret
scas
outsb
aam
xchg
loope
adc
ds
repnz
jnp
clc
insb
fsubrp
or
insl
cwtl
fnsave
pop
and
nop
xor
and
shrb
sbb
add
imul
xor
push
xchg
push
sbb
mov
fistpll
aaa
cmp
mov
jne
loopne
test
cwtl
iret
clc
dec
in
jl
dec
popa
fucomp
jns
mov
pop
pusha
das
loopne
rorl
daa
push
inc
xor
fs
jl
lahf
jns
add
sub
cmp
lock
mov
lock
mov
imul
add
push
clc
dec
add
adc
in
ret
ret
arpl
mov
data16
nop
push
imul
sub
test
ret
mov
jge
out
dec
inc
jecxz
jmp
pop
idivb
frstor
or
jnp
mov
sub
mov
sarb
adc
mov
cwtl
rorl
das
inc
inc
aaa
jne
mov
mov
out
sub
aam
adc
data16
js
jle
jae
push
sub
mov
popa
and
jecxz
jnp
pop
cld
sbb
sub
imul
popa
fbld
xor
or
push
mov
cld
add
cmp
shl
and
test
pop
popa
stos
das
jne
icebp
and
cltd
out
xorl
add
icebp
xchg
mov
sti
rcl
inc
jp
jp
fistl
scas
jnp
lds
decb
rclb
jne
fs
mov
je
les
sub
out
xchg
test
cmp
dec
fcmovnbe
test
xor
push
cmp
js
gs
xchg
dec
sbb
mov
pop
rolb
mov
push
sbb
sbb
mov
pop
cmp
lret
outsl
cmpsb
xchg
mov
subl
mov
jge
adc
repz
icebp
mov
or
ja
or
xchg
inc
addr16
and
in
hlt
dec
inc
add
lahf
mov
pop
lret
fwait
xchg
jg
repz
pusha
ret
bnd
xlat
xchg
push
mov
in
test
rep
test
dec
clc
hlt
sub
negb
dec
fs
call
mov
push
mov
xorb
jge
fcomps
inc
cli
pop
cltd
cmp
dec
adc
movsl
cltd
cltd
mov
shlb
sbb
aas
mov
adc
test
pop
enter
xchg
push
lret
nop
or
xchg
aam
mov
xor
das
and
data16
std
mov
jbe
dec
sub
sbb
jno
and
into
jle
and
dec
lea
loope
sti
imul
or
mov
gs
mov
add
faddl
mov
jl
aam
cld
movsl
xor
mov
les
icebp
mov
xchg
repz
fwait
arpl
cmc
dec
subb
lock
inc
fwait
inc
lods
pop
jge
lret
mov
inc
fdivs
out
call
sbb
sbb
dec
sti
pusha
xchg
or
fadd
mov
lods
lret
mov
outsl
test
push
pop
jp
lret
mov
xchg
push
test
fsts
jb
jg
adc
push
andb
push
or
xlat
mov
test
fiadds
out
lds
stc
jmp
cld
push
mov
adc
cmp
sarb
sbb
ja
das
fwait
mov
xor
fistpl
push
ss
mov
popf
xchg
xchg
stos
loopne
or
add
jno
xchg
stos
ds
or
inc
fiaddl
outsl
xor
mov
enter
cmc
and
out
cmp
and
push
and
mov
roll
sbb
adc
sub
jbe
inc
cli
setne
addr16
push
sub
repz
cmc
mov
sbbb
lret
mov
incb
pop
add
add
cwtl
nop
mov
call
and
fs
pop
push
lahf
incl
clc
mov
fadds
xor
mov
aad
aad
jmp
mov
push
or
ja
clc
push
add
sbb
fmulp
pop
jne
xchg
sahf
rclb
sbb
push
xor
js
sbb
enter
sbb
push
sub
push
cmp
pop
dec
movsl
xadd
popf
and
and
jb
cmpsb
pop
and
inc
sahf
shrl
pop
ret
lret
mov
subl
inc
push
or
bound
in
xor
sub
inc
out
fcom
mov
enter
jmp
push
das
xor
or
dec
out
pushf
iret
mov
push
mov
loopne
mov
push
mov
outsb
in
decl
lea
jmp
inc
ljmp
aam
sbb
enter
mov
dec
jno
and
mov
popa
adc
in
mov
das
into
inc
dec
sahf
mov
adc
inc
cmp
clc
dec
jmp
in
adc
dec
sub
mov
mov
sub
mov
inc
call
inc
push
cld
ljmp
mov
push
and
daa
sub
dec
fnstenv
mov
outsl
mov
and
push
cmpsl
frstor
inc
adc
cs
or
imull
rcll
xchg
imul
in
out
cmp
into
mov
mov
enter
sub
push
lds
stc
jge
inc
mov
loopne
divb
jp
adc
mov
popf
add
inc
idivb
jmp
jno
adc
cmpsb
pushf
sbb
call
fsubs
mov
jge
add
xchg
mov
adc
adc
sub
sti
mov
or
or
sbb
lds
ljmp
cmp
adc
push
add
les
pop
sahf
adc
dec
inc
add
cwtl
mov
jmp
dec
ja
int
or
sbb
pop
mov
xchg
mov
and
scas
add
sub
div
int3
sbb
sbb
int
popa
sub
cltd
fs
aas
outsl
das
sub
add
and
fcmove
orl
jno
shr
outsl
and
sub
mov
clc
sti
cmp
jns
rclb
push
pop
ljmp
sub
fimuls
bound
pushf
js
xor
stos
pop
js
and
mov
push
in
lret
or
lods
mov
and
push
jp
sub
clc
sub
sbb
jo
lock
fsubrp
sbb
es
ljmp
rorb
adc
arpl
and
xlat
push
dec
test
and
pop
or
insb
imul
clc
inc
bound
pop
dec
jb
or
cwtl
orb
push
inc
cmp
out
cli
push
push
pop
aaa
fcmovnbe
scas
sub
test
faddl
push
mov
je
dec
xchg
cmp
jns
mov
out
mov
xchg
mov
pop
mov
xchg
xchg
mov
push
idiv
jno
mov
fwait
ja
or
and
js
inc
and
int3
les
arpl
loop
xchg
lret
cmp
sar
mov
call
cld
cmp
andb
xor
ret
das
and
cmpsl
pop
sahf
push
ja
mov
shl
cmp
and
mov
mov
cmp
fadds
cs
enter
and
popf
push
xchg
fistl
repnz
lods
hlt
adc
sub
pop
add
and
imul
in
dec
shrl
cwtl
cmp
rolb
cs
scas
aad
scas
cltd
cmovp
cmpsl
out
jecxz
mov
jl
outsb
xchg
adc
test
xchg
popf
or
add
mov
mov
mov
add
out
out
stos
outsl
ficompl
dec
leave
mov
addr16
sti
sub
hlt
adc
add
loope
pop
mov
and
mov
nop
inc
xchg
int
push
xchg
and
pop
cmpsb
cltd
xchg
sahf
push
cmp
xchg
das
mov
dec
and
push
xor
push
std
jl
rorb
test
dec
or
or
cltd
xor
movsb
pop
out
jle
inc
jmp
jecxz
xchg
sbb
jecxz
jo
stc
pop
or
xor
inc
mov
and
outsb
rep
pop
hlt
pop
ret
sbb
xchg
fdivp
enter
sub
cmp
adc
sub
adcb
imul
std
xchg
int
add
push
mov
jns
fidivs
loope
ret
insb
push
inc
out
imul
or
inc
das
pop
xor
pushf
xor
dec
repz
test
xorb
fcmovb
hlt
pop
xchg
cmp
cmpsb
hlt
adc
pop
enter
cmp
ret
imul
dec
jnp
bound
in
fcomi
roll
xchg
lret
cmp
dec
cmp
lcall
pop
cmp
pop
mov
jae
loop
test
je
js
ficompl
or
nop
mov
dec
or
xchg
stos
push
mov
lcall
jmp
jge
adc
pop
dec
in
int3
fcmovbe
or
mov
sbb
out
cmp
or
adc
mov
sub
dec
add
decw
loop
test
fcoms
or
test
test
mov
jg
mov
cmp
popa
repnz
adc
mov
or
adc
leave
fnstsw
rcr
push
sbb
fcmovbe
imulb
repz
test
ret
mov
mov
fidivrl
test
or
int3
inc
pop
mov
mov
loope
and
std
adc
in
repz
popa
and
and
mov
xor
mov
push
dec
mov
mov
cmc
inc
jb
sub
popa
add
fildl
rorl
rcl
loop
jmp
dec
outsl
sub
sbb
mov
jg
ret
push
icebp
loope
mov
fnop
pinsrw
mov
out
sbb
or
aad
jns
cmpsb
mov
jmp
mov
test
cmp
dec
cmp
pop
ret
int
fwait
stc
movsl
mov
add
mov
mov
lcall
addl
lock
cwtl
push
jl
int3
and
mov
fmul
and
mov
pop
adc
jecxz
xor
lcall
inc
arpl
insl
fistl
and
lods
int
push
inc
ficoml
out
sub
sbb
pop
jl
sahf
int
cli
int
das
out
xor
push
mov
repz
pop
addr16
adc
mov
push
fcoms
xchg
dec
pop
shlb
outsb
push
rclb
sbb
fcomps
add
inc
sbb
in
pop
imul
sub
adc
scas
sbb
enter
inc
inc
sub
xor
xchg
jnp
std
rcrb
je
pop
or
into
add
mov
outsl
xchg
inc
cmp
aas
sub
or
gs
mov
outsb
mov
push
push
jge
icebp
insl
cld
sbb
pminsw
int
and
or
pop
mov
fadds
fwait
and
je
adcl
inc
push
call
xchg
mov
sbb
mov
out
insb
mov
repnz
pop
lahf
vcvtpd2dqx
mov
mov
fisubrl
xor
sbb
dec
jnp
push
add
dec
jmp
xchg
lea
mov
aad
in
mov
sbb
data16
jmp
dec
push
in
mov
adc
mov
mov
jo
inc
pop
stos
push
pop
stos
pop
in
lcall
cmp
sar
addb
fmul
sub
mov
dec
pop
pop
cmp
scas
daa
cs
xor
imul
imul
sub
and
dec
jne
jp
mov
mov
jne
dec
jmp
or
jbe
scas
sbb
scas
xor
pop
add
mov
fiaddl
test
dec
scas
in
mov
ret
out
sbb
xchg
lret
jl
into
sub
xor
adc
adc
repz
out
ja
pop
out
orb
jnp
push
in
rcrb
add
ffree
push
adc
pop
xor
jne
pop
daa
fstpl
xlat
dec
test
in
xor
repz
fsub
sbb
dec
cs
inc
es
and
rorb
cmpsb
push
jp
jmp
clc
aas
jns
inc
daa
inc
mov
pop
stos
pop
fisubs
call
fdivrl
jg
leave
pop
jb
cmp
jno
sub
push
add
inc
cmp
rcll
push
sbb
add
fndisi(8087
into
cmpb
cli
inc
mov
xor
negl
jnp
inc
lock
je
call
outsb
pop
in
data16
jle
adc
ss
xor
inc
stos
lret
push
xor
inc
pop
mov
inc
mov
xchg
cmp
add
lods
mov
test
xchg
cmpsl
mov
ljmp
psubusw
push
pmullw
out
mov
and
mov
push
sub
pop
lret
adc
in
hlt
cmpsb
in
push
adc
xor
popf
pop
imul
out
in
loop
stos
daa
movsl
xchg
push
or
fistpll
dec
fwait
mov
fcmovnu
hlt
imulb
and
xchg
daa
test
mov
cs
in
pop
stos
imul
cltd
adc
add
fidivl
fisubs
cmpsl
cmc
imul
and
xchg
ret
mov
cmc
cmp
inc
orb
mov
inc
sarl
push
cmpsl
mov
lret
movsb
cmc
sub
andl
mov
adc
push
aam
add
cmc
lret
test
fwait
outsb
pusha
xchg
cmp
outsb
sbb
les
lcall
jl
out
mov
test
sbb
imul
les
iret
std
test
lret
test
xchg
cmpb
shl
push
je
out
sub
xor
mov
pop
xchg
aam
pop
out
fsubr
je
mov
push
pusha
cmp
jl
test
mov
dec
adc
and
imul
lret
arpl
cs
cmp
out
mov
fmul
adc
push
or
or
inc
sarl
rclb
pop
pusha
ror
mov
icebp
mov
movsl
push
popl
mov
stos
xor
mov
gs
mov
xorb
imul
ret
cmp
adc
cmp
ss
stos
jno
mov
adc
call
repz
xor
adc
push
ret
lods
mov
sbb
ret
jmp
dec
lret
mov
das
js
sbb
mov
sahf
cs
jne
xor
out
dec
decl
sbb
pop
xchg
cmpsl
mov
xor
mov
out
clc
lret
and
repnz
or
jae
or
xlat
mov
popf
aam
add
pop
sub
inc
inc
add
push
fnstcw
nop
repnz
adc
arpl
arpl
dec
pop
mov
ljmp
lret
xchg
std
out
cmpsb
mov
in
push
outsb
adc
in
movsb
imul
fsubrs
adc
movsb
inc
mov
mov
dec
cmp
lcall
repnz
lds
adc
and
mov
repz
and
pop
jge
dec
lds
cmpsl
out
sbb
enter
mov
out
shlb
xor
imul
mov
sub
or
cmp
sbb
dec
inc
nop
sbb
mov
and
xlat
mov
mov
lods
les
lods
sub
mov
out
ljmp
loope
push
jbe
sbb
dec
inc
mov
mov
roll
cwtl
jne
js
jp
jo
jmp
scas
inc
aas
and
out
mov
mov
sub
arpl
in
jae
nop
bnd
data16
mov
sub
or
loope
add
fnstsw
cmp
hlt
sbb
mov
add
and
mov
xor
lret
mov
pop
inc
or
sub
adc
cmp
and
insb
push
in
mov
jo
mov
mov
loop
addb
pop
popa
pop
pop
sbbl
js
adc
and
les
push
pop
jg
ret
int
adc
adc
adc
cmp
sbb
into
mov
mov
xchg
pop
cwtl
fdivr
cmp
cli
jbe
out
testb
mov
loop
shll
ret
pop
lahf
and
scas
or
cltd
cltd
push
adc
fdivl
mov
adc
xor
xchg
adc
dec
shr
imul
xor
cli
cli
sbb
mov
fsubrp
sarl
inc
sbb
inc
fsubp
incl
in
adc
push
and
subl
inc
push
mov
fisubl
in
push
fdivs
ficoml
js
loop
pop
inc
inc
mov
adc
jge
or
std
cltd
in
orl
inc
lcall
push
shll
int
dec
inc
inc
sbb
mov
or
sub
jecxz
pop
pop
add
idivb
mov
imul
inc
and
dec
xchg
cmp
inc
mov
aam
arpl
xor
mov
jecxz
push
ljmp
stos
test
push
popf
out
test
inc
xchg
cmp
pop
scas
push
or
std
sti
sbb
fucom
add
mov
and
stos
cwtl
xor
in
idiv
js
pushl
stos
or
iret
or
andb
jne
push
cmp
sbb
outsb
adc
dec
and
jno
mov
iret
mov
cli
cmp
ja
outsl
push
xchg
xor
push
lret
jne
cmp
adc
lock
xor
dec
xor
ret
mov
jae
cmp
lods
mov
sbb
or
frstor
mov
daa
das
xchg
sti
arpl
arpl
fs
cmp
dec
pop
daa
mov
outsb
mov
popf
mov
frstor
xchg
mov
test
call
jge
add
add
xchg
rorl
popa
call
and
cld
add
mov
push
push
andb
enter
mov
or
jge
outsl
sub
out
xchg
gs
test
inc
xor
out
in
popl
lds
lahf
insb
xlat
cld
scas
pop
mov
push
and
mov
jmp
mov
push
dec
rcr
push
cmc
jno
outsl
enter
jne
shl
and
jp
xor
out
push
or
scas
movsl
lahf
adc
inc
sbb
sbb
xor
lods
lcall
lods
fdivs
daa
hlt
mov
mov
dec
sub
cmp
xchg
or
sti
fwait
xor
cmpsl
lods
mov
mov
jecxz
fidivl
push
add
pop
push
xchg
lods
fdivrp
shl
ret
flds
loope
jge
xchg
or
lods
clc
xchg
pushf
cmpsb
imul
sub
hlt
cmp
and
xchg
rcr
inc
das
fdivr
fwait
bound
adc
addr16
outsb
add
jge
xor
add
mov
cmpsb
test
jno
daa
xchg
inc
mov
sub
xchg
xor
and
outsl
stos
shl
inc
test
jbe
pop
enter
je
daa
loopne
popa
xor
fbld
outsl
lock
xchg
nop
inc
dec
call
jle
mov
out
mov
xchg
add
fnsave
rsqrtps
jnp
ljmp
mov
nop
xchg
push
mov
cmpsl
aam
cmp
and
mov
xor
cld
cwtl
in
sbb
sbb
test
insb
in
cli
dec
stos
sbb
les
popf
push
aaa
aaa
xor
push
sbb
mov
jne
outsb
and
and
lret
sti
and
lret
add
mov
push
push
or
insb
clc
dec
faddl
mov
add
cltd
gs
xchg
add
xchg
or
popf
fcmovnbe
jne
jp
inc
lcall
es
jb
movsl
in
xchg
xchg
push
add
mov
test
push
jo
dec
inc
adc
push
mov
loope
xor
popf
out
or
inc
andb
addr16
xchg
repnz
into
mov
std
push
pop
cld
push
mov
inc
test
andl
call
push
mov
repz
jg
lcall
fsubrp
and
lods
pop
xchg
pop
ss
mov
cltd
pop
lcall
int3
outsb
mov
shlb
adc
dec
arpl
imul
xlat
rorb
fisttps
fnsave
jnp
pop
and
lods
into
mov
xor
out
std
fstpl
pushf
shll
push
add
dec
or
and
test
ds
int3
jecxz
dec
clc
in
rcrb
or
clc
fidivrs
out
push
out
adc
sbb
push
shll
mov
add
xchg
jnp
sub
fcomp
mov
dec
bound
push
popf
sbb
pop
loop
cmp
adcb
pop
or
add
jge
in
in
cmpl
inc
push
pop
gs
test
fs
gs
jns
push
cltd
insl
mov
data16
das
cwtl
andl
push
mov
std
push
int3
xchg
inc
testb
push
cmp
xor
out
int3
dec
icebp
rolb
mov
jnp
add
shl
fdivl
xchg
mov
loop
jbe
scas
add
mov
jle
adc
sbb
gs
les
cwtl
mov
push
dec
ljmp
jle
filds
sbb
jnp
jbe
ret
jl
pop
jecxz
add
sbb
jge
xchg
mov
shrl
leave
cwtl
sbb
inc
push
pushf
and
push
daa
insb
jo
jbe,pn
rcr
lcall
ja
inc
das
adcl
xchg
rorb
jbe
cmp
aas
inc
test
adc
int3
or
andb
scas
dec
les
fwait
es
mov
push
test
call
dec
flds
ds
aas
in
or
inc
daa
lret
inc
dec
sarl
mov
sbb
push
mov
xchg
xchg
sbb
mov
scas
xor
cmp
rolb
add
push
and
inc
or
add
pop
int3
loopne
cmc
push
dec
adc
mov
iret
add
stc
mov
or
inc
in
mov
jbe
sbb
mov
mov
insb
cmp
xchg
cld
lret
and
je
test
int
lods
sbb
mov
scas
push
cltd
xor
mov
pushf
pop
cmp
and
popf
jnp
ret
ficomps
aas
mov
ds
loop
rorb
pop
xorb
inc
xor
out
add
cmpsl
das
adc
mov
mov
and
xor
shlb
ds
push
xlat
jno
fisubrs
mov
jbe
rcll
into
out
sub
nop
rcrl
push
xchg
stos
das
popa
sbb
jnp
fsts
mov
pushfw
js
pop
call
repnz
in
jge
push
mov
rcll
arpl
mov
outsb
pop
jl
into
sub
inc
jbe
loope
sub
shlb
pushf
js
dec
lcall
scas
add
in
push
cli
fwait
enter
mov
adc
ja
movl
ljmp
lcall
sti
cmp
xchg
cltd
dec
mov
insb
push
sahf
push
push
inc
fisttpll
into
jge
lcall
int
das
ret
cwtl
aaa
outsl
setbe
push
jb
mov
hlt
mov
or
fnstsw
lea
pop
cmpsb
xchg
xor
push
mov
mov
pop
and
loopne
add
sbb
jae
insb
sbb
adc
jp
test
negb
xchg
sbbb
ja
add
xchg
sub
dec
adc
idivb
stc
cmp
loope
mov
inc
in
and
movsb
mov
adcb
sub
rol
inc
fldl
inc
lock
mov
popf
xor
jmp
test
adc
push
or
pusha
loop
out
jno
mov
add
mov
jle
test
jno
out
aad
out
scas
or
ja
dec
js
mov
xchg
das
or
out
add
sar
mov
push
iret
rol
lds
xchg
lahf
cmpsb
mov
cld
sub
jmp
push
mov
xchg
mov
scas
pop
test
mov
pop
dec
sub
mov
mov
cmp
inc
shll
mov
mov
mov
pop
mov
pop
leave
mov
aas
push
std
xchg
negb
lods
nop
pop
mov
rcr
xchg
jns
cmpsl
push
sub
xchg
sbb
cli
mov
cmp
xor
cmc
ficomps
mov
ja
jge
repnz
iret
mov
jge
sbb
lcall
rep
insl
sti
cmp
mov
mov
xor
loopne
mov
and
bound
imul
and
adc
mov
mov
ret
mov
mov
xor
push
cld
subb
and
mov
mov
fisubs
icebp
jo
insl
sbb
lcall
jp
subl
and
mov
cltd
das
in
lods
xchg
cmc
push
dec
ret
inc
jo
bound
jne
les
push
ljmp
insl
getsec
loop
out
outsb
dec
sbb
jo
cmpsb
push
mov
xchg
add
mov
and
dec
push
mov
sbb
jmp
mov
xchg
mov
pushf
dec
adc
push
sub
out
lcall
incb
cmc
cmpsb
jbe
push
dec
mov
icebp
into
call
inc
sbb
or
mov
and
shrb
mov
add
inc
lahf
pop
sub
inc
mov
xor
jp
jae
mov
jmp
cmpsb
je
xor
subb
ret
fadds
test
jnp
test
adc
rcll
nop
shrl
pushf
ret
loop
adc
xchg
pop
sahf
push
shll
inc
int
dec
ret
cmp
pushl
jp
xor
lds
cmpsb
jge
in
ret
ficomps
adc
cmp
out
add
pushl
adcb
addr16
xorl
lcall
std
inc
adc
out
in
sub
ret
gs
lahf
mov
imul
mov
add
mov
sub
bound
or
lds
sahf
or
rcll
je
mov
in
dec
pop
stc
add
fcoms
aaa
and
out
mov
inc
ror
sbb
loopne
mov
scas
sbb
add
mov
jne
mov
jne
and
xor
mov
cld
xchg
push
pusha
dec
mov
jb
push
in
ss
pop
dec
mov
aad
shl
add
push
inc
xchg
incb
sub
xchg
lahf
sbb
pop
fwait
inc
stos
pop
iret
gs
lahf
mov
in
pop
rclb
enter
lcall
test
lods
leave
sbb
les
wbinvd
inc
sub
stos
mov
insb
push
xor
inc
icebp
or
dec
sub
cmpsl
add
lock
test
rorl
mov
and
int
test
sub
sub
ffree
decb
adc
cmp
or
dec
popa
and
lahf
cwtl
setp
bnd
cmp
inc
and
mov
int
and
data16
pop
add
xchg
ljmp
inc
sbb
rcll
push
xchg
cmpb
pop
fadds
mov
adc
pop
mov
in
addb
cli
xor
xor
ret
sarb
mov
fisttpll
repnz
lret
pop
cwtl
dec
insl
icebp
mov
sub
mov
mov
out
int
push
cltd
stos
inc
or
gs
mov
push
pop
dec
lods
cltd
adc
inc
adc
sbb
std
daa
dec
out
sub
fsubrl
fisubrl
test
mov
cmp
scas
out
nop
xchg
adc
iret
mov
cltd
aad
pop
mov
pop
mov
lds
mov
popl
mov
mov
sbb
imul
cmp
mov
loope
jle
mov
mov
cli
movsb
call
dec
inc
sbb
jl
mov
inc
iret
lret
fwait
lcall
mov
and
scas
out
fmull
aad
in
jns
cltd
ret
loop
dec
or
ffreep
mov
pop
ja
inc
in
xor
outsb
stos
sbb
add
dec
andb
xor
pop
xor
cmp
sbb
cmp
or
icebp
dec
mov
shlb
fwait
adc
int3
shl
cmc
xor
popa
shll
add
push
mov
pop
addl
adc
push
out
cmp
imul
cld
addr16
sub
lock
nop
jno
push
and
push
inc
push
sub
or
push
fdivs
push
dec
lods
and
data16
jne
or
loope
jb
pop
mov
callw
cli
mov
int
cwtl
es
push
rcr
sahf
lret
push
int3
pop
mov
or
lea
jae
enter
and
bound
and
pop
out
xchg
cmp
aad
sub
push
addr16
cmpsb
xchg
ljmp
mov
roll
int
cwtl
adc
insb
mov
decb
cwtl
in
cmp
lea
mov
andb
fwait
mov
outsb
xchg
ja
jbe
xor
mov
cli
pusha
movsl
pop
push
mov
cmp
inc
lods
adc
aaa
jp
add
or
push
insl
mov
xor
xor
pusha
add
inc
cltd
sbb
aad
sub
in
popa
inc
add
sbbb
icebp
stc
jl
mov
pop
incl
pop
and
dec
fisubl
cmp
adc
test
xor
xor
xchg
lea
adc
test
xor
imul
mov
movsl
pop
mov
sbb
xchg
dec
mov
and
lds
pop
mov
test
fs
in
movsl
push
stos
inc
movsb
out
or
movsl
aad
and
pop
mov
push
mov
jp
adc
mov
cmc
jp
fldt
js
scas
inc
pop
dec
xchg
inc
ds
cmp
fyl2x
sub
pop
mov
dec
arpl
cs
addl
je
adc
ljmp
jae
clc
jb
cwtl
lcall
out
mov
inc
push
icebp
adc
mov
lret
inc
in
lret
stc
or
aad
loope
test
imulb
pusha
test
mov
inc
sub
jns
mov
push
sub
jmp
xchg
sarl
xchg
jne
movsl
ljmp
dec
insl
ss
mov
push
lahf
dec
or
lret
cs
cmpsb
mov
adc
loope
jnp
movsl
adc
sti
test
xchg
idiv
sub
mov
mov
cmp
or
ret
addl
jns
jbe
jmp
fistpll
and
movsl
mov
or
xchg
iret
cmp
loop
mov
lds
and
jbe
mov
or
mov
mov
scas
js
aam
data16
cmp
insl
mov
add
add
mov
cld
jg
sbb
loop
push
mov
add
insl
jne
or
in
pop
xchg
push
test
mov
adc
push
lcall
test
sarb
dec
popf
cmp
cmp
aad
dec
ja
or
adc
pop
and
mov
or
push
mov
inc
cli
xchg
sub
or
sahf
pushf
pop
ljmp
cmp
push
lods
cmp
notb
jb
dec
sub
pushf
cld
scas
aam
xor
sbb
je
cs
jl
and
shlb
test
adc
push
cltd
xor
xor
push
and
mov
xchg
push
rcl
dec
jo
jo
jmp
scas
ret
stc
sub
mov
mov
movsl
and
inc
or
insl
lea
clc
test
mov
pop
push
jle
inc
pop
gs
xchg
bound
sub
push
push
push
cli
or
jb
lcall
das
and
adc
cli
das
mov
test
into
cltd
cmp
push
pop
mov
bound
lods
dec
push
mov
inc
xchg
paddsw
or
cmp
xlat
fidivl
rol
ljmp
pop
mov
cli
cmp
icebp
ss
stos
sarl
dec
mov
gs
and
sub
testb
cmp
adc
clc
dec
push
adc
mov
movsl
mov
popa
pop
sub
cmp
stc
xchg
aas
sbb
aam
dec
add
ds
mov
call
bound
test
dec
repnz
nop
mov
inc
cwtl
mov
or
and
fstps
inc
es
xor
outsb
xor
pop
mov
scas
sbb
mov
sbb
test
lret
icebp
xchg
out
inc
sahf
inc
insl
jbe
mov
mov
test
sbb
leavew
pop
dec
mov
pop
jp
sahf
lret
sub
jp
jno
in
jae
mov
dec
out
das
add
push
repz
and
fnstsw
cltd
or
cwtl
fdivrl
ss
aad
outsb
push
jge
call
inc
mov
sbb
inc
das
mov
push
aas
sbb
popf
push
mov
or
in
inc
in
mov
jae
sub
test
add
mov
ss
scas
push
fisttpll
jge
sahf
sub
push
xchg
mov
and
paddsb
mov
dec
xchg
add
test
mov
stc
popa
sbb
data16
xor
push
addb
jmp
mov
push
jmp
or
and
test
pop
popl
mov
in
pop
mov
pop
xor
mov
dec
fsubr
stos
and
daa
mov
shll
sbb
adc
inc
xchg
sub
dec
jo
add
dec
hlt
loop
fadds
jb
aaa
mov
fst
jo
je
shrb
lret
sbb
stos
cs
xlat
adc
movsl
jbe
test
shl
psllq
xor
pop
imul
sarl
lcall
jae
and
mov
test
sbb
push
jge
jae
decb
push
outsb
inc
mov
roll
sub
push
add
jl
fwait
mov
mov
cmp
lods
mov
jns
sub
sbb
sbb
aaa
inc
jb
mov
cmp
adc
adc
add
mov
and
inc
loop
pop
push
gs
aas
sti
xchg
fstpt
stc
xchg
cld
cmc
inc
jbe
lret
jg
push
jl
mov
push
mov
shrb
inc
subl
jl
icebp
shr
repz
or
dec
in
stos
xor
addr16
or
mov
decb
enter
sub
pusha
fldenv
push
adc
mov
xchg
or
pop
test
or
test
adc
jb
push
into
dec
fnstenv
or
mov
add
arpl
out
leave
xor
and
adcb
mov
stc
stos
fldl
addr16
push
and
jl
mov
aaa
cmp
and
add
scas
adc
or
adc
pshufw
dec
sub
aam
fiaddl
jnp
lds
push
mov
lretw
cmp
add
mov
sub
mov
enter
sarb
mov
stos
xchg
hlt
loopne
cmp
sub
dec
inc
add
andl
xor
or
test
nop
lock
xchg
sub
clc
cs
in
inc
insb
push
adc
stos
mov
mov
pushf
add
nop
leave
fidivrs
or
mov
cmp
mov
icebp
mov
lahf
add
pop
push
pop
push
shl
jnp
arpl
adc
daa
rolb
ret
movsb
xchg
stos
push
movsl
adc
pop
inc
mov
pop
xchg
lahf
jns
mov
pop
sub
cmp
push
mov
push
imul
add
cmp
pop
xchg
lret
cld
shll
xor
lret
in
cmp
jecxz
jnp
fmuls
mov
lcall
pop
pop
in
or
out
inc
stos
outsl
enter
cli
je
out
movsl
mov
scas
jmp
mov
fs
adc
push
pop
xor
sub
inc
jle
outsb
pxor
cwtl
test
popa
rclb
mov
popf
int3
aad
fdiv
adc
cld
ljmp
mov
cmpsl
loop
and
nop
mov
jno
jmp
mov
pop
xor
fcoml
pop
es
pop
push
test
pop
mov
adc
add
repz
int3
mov
negb
xchg
cmp
das
rcrb
mov
in
stos
or
out
add
lahf
dec
or
push
fnstcw
dec
add
imul
jo
dec
cltd
aas
js
rcr
mov
dec
daa
rorl
mov
push
push
cmpsb
mov
pop
sahf
fwait
push
inc
and
mov
mov
sub
add
inc
in
lea
inc
inc
fwait
std
ret
daa
mov
jns
xchg
mov
mov
lea
cltd
xchg
mov
pusha
bound
shll
nop
mov
imul
mov
xchg
xor
xchg
stc
and
xchg
movsl
mov
arpl
loop
out
sbbl
jecxz
pop
adc
lock
pushf
bound
stc
push
mov
fstpt
in
mov
repz
sahf
bound
sub
clc
cmp
pop
mov
mov
push
mov
loopne
pop
adc
mov
dec
sub
add
scas
fs
pushf
mov
inc
pushf
pop
jle
xchg
arpl
fs
mov
inc
jp
cmp
decl
jecxz
xor
je
sbb
push
movsl
sbb
jae
lahf
push
fs
in
xchg
cmpsl
xchg
test
push
test
push
jmp
orb
add
pushf
mov
insl
scas
mov
jnp
loope
and
lods
pop
mov
test
push
add
xor
daa
hlt
ficompl
cli
push
movsb
js
add
jne
fnsetpm(287
adc
add
mov
shll
pop
and
ss
push
cmc
sahf
jb
mov
pop
insb
aad
xchg
mulb
jle
pop
int3
test
or
mov
jl
push
and
mov
xchg
lds
call
dec
xchg
fists
cmpsb
push
jno
pop
pop
ds
aas
adc
mov
cmpsl
rcrl
cld
dec
pop
cmp
mov
aam
repz
cmpsl
fldlg2
movsl
loopne
in
xchg
lcall
jge
lods
scas
cmp
jmp
incl
pushf
jmp
xor
jnp
and
iret
call
sbb
rcrb
dec
in
adc
mov
mov
in
loope
or
push
fwait
lods
and
inc
es
inc
test
je
sbb
lods
repnz
add
and
or
xor
adc
add
insb
push
lret
pushf
mov
scas
sub
iret
push
mov
movb
push
xlat
fcomps
sub
adc
out
jo
enter
gs
adc
inc
push
inc
xor
leave
fs
adc
ret
push
jae
leave
sbb
lods
adc
xchg
cmp
pop
repz
sbb
jae
roll
int
test
dec
cltd
lret
in
mov
mov
js
pop
sub
inc
fstpt
mov
xor
ljmp
aam
add
cmpsl
test
mov
mov
in
add
or
xchg
mov
sbbl
roll
lea
pop
test
in
std
jno
push
pop
xlat
dec
push
sub
adc
cli
out
xor
insb
imul
sbb
add
add
lods
jbe
cmp
pop
mov
aam
loope
rorb
test
mov
inc
mov
jmp
jl
orl
loop
xchg
in
xchg
adc
js
inc
jle
fwait
mov
loop
stos
xchg
fstpt
xchg
jmp
ret
outsl
inc
cld
iret
movsl
cmp
mov
xor
lds
test
mov
jle
je
out
loope
mov
ss
push
jecxz
test
jae
push
outsb
cltd
cld
les
sub
pusha
out
enter
out
pop
mov
loope
pushw
cmpsl
enter
sbb
pop
sahf
fimuls
jg
push
test
push
loope
pusha
inc
inc
loopne
adc
xor
fnstsw
mov
cmp
stos
adc
test
jns
dec
addr16
inc
xchg
repz
into
add
int
sahf
out
lock
jmp
jb
fimull
sti
pop
insl
outsl
sbb
shrb
xlat
xor
lods
inc
insl
iret
sbb
xor
imul
jecxz
ljmp
in
pop
or
cli
fs
shll
lcall
mov
adc
cmpsl
shrl
shll
lahf
jne
jae
dec
into
inc
cmc
jge
mov
sti
mov
cs
push
inc
movsl
fsts
insb
out
cmpsl
sub
ret
fistpl
scas
test
je
or
js
testl
dec
jp
aas
lret
loopne
pop
xchg
and
sbb
iret
push
ds
cs
roll
cmp
or
adc
pop
cmc
inc
outsl
cli
jmp
iret
mulb
in
push
pop
fnstenv
push
push
sbb
inc
cmp
and
inc
scas
mov
je
mov
mov
fsts
jmp
mov
scas
sub
lret
adc
mov
mov
add
stc
cld
dec
loopne
daa
push
add
outsb
xchg
pop
rcrl
out
mov
cmp
push
cmc
mov
shll
xlat
jle
je
fiaddl
sub
xor
aad
insb
adc
fsubr
pop
mov
mov
clc
cwtl
or
stos
stos
notl
jmp
arpl
adcb
out
repnz
pop
push
js
jne
sbb
int3
mov
test
clc
sub
cld
lahf
ds
jle
and
aaa
insl
xor
divl
fdivr
dec
and
mov
xchg
jbe
dec
mov
out
cltd
shlb
xor
stc
adcl
int3
push
shll
aas
pushf
cld
adcb
mov
push
cmpb
or
or
arpl
icebp
cmp
mov
sahf
inc
push
movsl
nop
push
daa
pop
fbld
inc
clc
fld
add
in
int
mov
push
lock
stos
cmp
test
cmpsb
pop
dec
xlat
pop
add
and
pop
push
pop
add
decb
outsb
xchg
lahf
push
sub
js
pop
xor
sbb
jne
rolb
push
xchg
outsb
sbb
adc
rcrb
mov
add
lret
push
aaa
rcll
and
sbb
xchg
jnp
insl
mov
les
pop
xor
mov
sub
xchg
push
cltd
push
repz
xchg
xchg
jbe
pop
cwtl
mov
stos
jae
js
int
lret
aad
inc
lds
inc
out
sbb
mov
enter
pop
fisubl
rclb
jne
jne
xlat
push
clc
mov
push
out
push
jbe
add
inc
out
fildl
ds
jns
dec
add
mov
xchg
les
outsl
dec
out
sub
xor
pop
sbb
or
into
andb
add
cld
out
inc
in
xor
and
out
pusha
and
addl
lahf
xchg
loope
lcall
jbe
xor
mov
push
inc
outsl
xchg
popf
cli
cmp
add
dec
fsts
mov
dec
pusha
cld
in
inc
jb
pusha
mov
add
insb
cmp
mov
mov
test
sbb
xchg
cltd
jnp
xor
push
or
push
sarb
test
aas
pusha
cmpsl
or
push
test
or
pusha
jg
xchg
jno
sbb
xchg
fldcw
out
shlb
sbb
aas
idivb
push
sub
rorb
lods
jns
out
jle
or
sub
adc
xor
addb
and
insb
mov
pop
decl
lret
inc
mov
fmull
insb
sbb
push
or
imul
loop
jle
test
add
lret
jno
push
test
mov
add
std
lret
xchg
and
or
mov
add
jb
xchg
mov
fiadds
jae
adc
in
inc
add
xor
dec
jns
aam
dec
pop
mov
xor
add
xor
pop
mov
inc
lret
scas
dec
xlat
mov
and
test
stos
mov
xchg
sub
jnp
icebp
clc
cltd
xor
jle
mov
push
popf
lods
sahf
lods
sbb
add
hlt
xchg
and
into
sbb
gs
jp
outsb
mov
inc
test
ja
jbe
cmp
bound
pop
aaa
pop
shlw
xchg
lret
adc
push
and
ja
cs
fildll
push
mov
insb
cwtl
aam
add
dec
xor
int3
adcb
sub
xchg
xor
xorps
lret
cmp
and
pop
dec
mov
mov
test
mov
adcl
loope
xchg
ds
lret
stos
mov
aad
and
xchg
cmc
std
mov
mov
fidivrs
add
imull
fiadds
in
pop
andb
in
pop
daa
sub
jge
mov
cmpsb
mov
imul
mov
dec
into
imul
outsl
in
xor
shll
inc
or
xlat
lods
push
mov
pop
mov
dec
fcompl
dec
bound
sbb
cmpsb
jecxz
xor
and
and
mov
notl
xor
sub
inc
ss
mov
cmp
or
lods
ljmp
inc
push
sahf
fdiv
jb
inc
mov
lret
cmp
push
loope
mov
sahf
dec
jg
addr16
shll
cmp
jbe
mov
cmp
int
lods
lds
shrl
into
inc
inc
lahf
gs
add
inc
xor
dec
mov
hlt
enter
fwait
sub
cmp
rorl
xor
inc
jae
mov
aad
xor
push
lea
jp
mov
adc
lods
repnz
add
xlat
cmp
imulb
jno
sbb
inc
sbb
inc
cmpsl
mulps
ja
mov
mov
enter
add
pop
fcomps
pop
inc
inc
push
mov
xchg
lock
add
sbb
scas
lmsw
jo
int3
add
sahf
pushf
jno
lahf
mov
xor
stos
insl
dec
imul
add
mov
into
ss
sbb
roll
push
fs
add
sub
xor
mov
cmp
cwtl
mov
test
inc
cmpsb
sub
fwait
lcall
incl
jo
add
pop
sub
fwait
aaa
movsb
mov
jb
xor
jae
xchg
push
mov
lcall
xor
cmp
sub
out
and
inc
insb
aas
bound
stos
stos
outsl
mov
mulb
cmp
xorb
or
test
out
adcb
das
mov
mov
mov
and
jg
inc
bound
jg
jmp
data16
popl
sub
loop
lret
cli
and
push
cmc
loopne
or
adc
fs
cs
push
mov
pop
and
jmp
std
popl
mov
mov
add
inc
and
ja
cmp
flds
jle
pushf
leave
arpl
clc
outsb
push
fs
sbb
subl
test
clc
jns
add
cmp
pop
xlat
mov
xchg
push
in
sbb
dec
popa
sbb
jle
cmp
aam
sub
dec
movsb
idivl
lret
int
pop
jae
cmpl
lcall
dec
or
fldt
jle
std
sahf
stos
or
sbb
push
or
and
sti
push
out
and
or
in
mov
sbb
ja
jno
xchg
es
imul
and
cmc
aas
imull
push
adc
push
mov
js
pop
out
jo
in
and
mov
xchg
adc
jo
xchg
sub
lods
mov
xorb
rcrl
int3
loop
sarl
jae
in
jnp
mov
inc
push
push
rol
push
sti
pop
and
out
and
mov
add
lock
iret
jecxz
cmpsb
and
jo
cmc
mov
add
fisttpll
fdivrl
pop
jns
lea
out
daa
lds
jecxz
mov
dec
aad
jno
sbb
loope
in
arpl
inc
and
loopne
jmp
mov
adc
inc
arpl
aam
mov
sbb
inc
out
mov
stc
jbe
nop
ss
out
jl
imul
jno
and
sbb
imul
xchg
sbb
outsb
popa
out
add
pop
mov
clc
inc
fdivrp
shlb
mov
fisttpll
cmpsl
js,pt
aam
mov
cmp
gs
cmp
outsb
mov
roll
cld
adc
cmpsb
push
int3
sbb
int3
or
add
inc
jp
jbe
jo
enter
and
add
jp
jo
mov
add
xor
dec
imul
outsb
insl
enter
mov
xor
adc
mov
push
push
addb
push
push
shl
mov
mov
inc
inc
out
pop
xchg
pop
ss
add
adc
xor
mov
jp
fadds
cmp
popf
mov
ret
iret
fwait
lods
adc
adc
lcall
adc
dec
js
xchg
lea
inc
pop
pop
mov
add
sbb
cltd
cld
jmp
popf
sbb
and
mov
cmp
mov
jo
mov
cmpsb
int3
jl
jle
push
ret
or
push
loop
dec
add
add
mov
and
sub
stc
popa
sarl
mov
repz
std
sub
adc
xor
pop
cld
les
ror
dec
into
sahf
add
iret
add
xchg
nop
ret
pop
pusha
or
stos
dec
loop
daa
mov
push
fldz
xchg
jo
push
mov
mov
out
roll
xchg
pusha
cli
dec
xchg
sbb
cmp
inc
movsb
pop
pop
ds
or
stos
aas
inc
and
adc
push
inc
addr16
mov
call
and
lret
mov
lods
fidivl
pop
movsl
idivb
cld
mov
aas
ficomps
int
inc
popl
cmp
mov
adc
shrb
test
rcrl
cmp
lcall
mov
cmpb
pop
sub
xor
add
push
xchg
lret
push
xbegin
mov
mov
sub
add
dec
movsl
push
mov
pop
aas
inc
add
es
fidivs
jmp
jne
das
enter
repnz
fcomps
fs
das
jnp
push
pop
fwait
push
mov
or
fdivrs
pop
mov
push
sbb
clc
add
mov
dec
fistl
ss
pusha
jo
mov
fdiv
inc
rcrl
cmp
jecxz
jo
out
mov
mov
addr16
andnps
dec
callw
lods
pusha
add
test
mov
iret
xchg
cmp
xlat
dec
call
add
movsl
jp
sbb
cmp
push
cld
aad
sti
lret
mov
sbb
xor
cmpsb
stos
adc
lods
test
mov
sbb
cmpsb
adc
jno
mov
ljmp
dec
fxch
dec
sub
mov
mov
leave
push
aas
inc
mov
jle
inc
dec
test
sbbb
add
lods
xor
mov
or
add
jp
push
adc
push
lods
cmp
int3
pop
popf
push
test
call
pusha
inc
lods
nop
adc
bound
inc
xlat
aaa
push
test
mov
mov
jnp
cmp
jbe
jnp
and
sbb
xor
and
push
sahf
or
orb
pusha
pop
cld
std
cld
sbb
jg
push
lea
sub
xor
in
adc
and
aad
add
xor
push
add
scas
mov
add
mov
mov
call
enter
in
imul
jns
mov
insb
or
jnp
into
sbb
out
ja
in
sub
sbb
std
mov
mov
sbb
outsb
sahf
lock
pop
lds
dec
cmpsb
mov
cs
mov
test
std
dec
jl
je
das
test
add
jp
adc
add
cmp
rorb
imul
psrlw
rol
dec
sbb
dec
jle
hlt
add
repz
ror
xchg
rcpps
scas
sbb
xor
xchg
mov
test
das
xor
sbb
faddl
ror
pop
mov
cmpb
aaa
lds
mov
es
mov
pushf
jnp
jle
pop
rcrb
mov
idivb
mov
push
adc
push
lock
and
push
cmpl
sub
pop
pop
test
jp
stos
je
mov
nop
outsb
mov
in
sub
pop
add
jp
add
jg
es
push
imul
jmp
pushf
pop
in
lods
leave
arpl
xlat
popa
inc
mov
inc
repnz
loope
jbe
jno
pop
mov
xor
data16
sbb
add
lds
add
cmpsb
aas
cmpsb
xchg
add
and
sbb
adc
ss
aam
sbb
xor
jge
add
and
add
dec
aaa
lret
int3
out
adc
push
sarb
jnp
fistps
cwtl
fistpll
cwtl
mov
lods
or
ja
ljmp
mov
out
add
push
adc
rorl
pop
aaa
ret
popf
mov
xchg
xchg
push
cmp
cmp
adc
inc
aas
adc
scas
push
inc
xor
into
push
pop
jp
loope
movsl
aas
mov
add
mov
adc
outsb
mov
lods
mov
cmc
push
cmp
int
mov
mov
xchg
fld
in
testl
inc
leave
sbb
or
andl
lds
pop
subb
xorb
mov
xor
dec
insb
inc
test
sbb
ror
sarb
xchg
adc
cld
in
shll
scas
jp
add
mov
cmp
xchg
sbb
jge
test
push
and
push
jecxz
ret
repnz
inc
mov
adc
negl
sarb
jnp
xchg
mov
loope
leave
clc
add
lcall
and
sub
jo
xchg
dec
add
pop
lds
cmp
inc
mov
push
add
cwtl
cmpsb
outsb
sub
pop
push
ja
inc
xchg
pop
stc
mov
loop
adc
mov
jge
arpl
add
lahf
add
mov
and
test
pop
dec
out
sub
inc
iret
mov
fstpt
dec
loop,pt
mov
mov
clc
jnp
lds
xchg
test
sub
add
lds
pop
inc
scas
dec
mov
into
daa
mov
loop
xchg
outsl
mov
or
aad
int3
enter
or
addr16
mov
mov
push
out
rcr
mov
enter
je
pop
scas
pop
fbstp
mov
and
or
dec
lret
mov
repnz
jle
mov
push
xchg
mov
xchg
sbb
dec
and
arpl
xor
mov
pop
cmp
ret
iret
inc
enter
push
aad
jbe
out
and
xchg
sbb
loop
fmulp
xchg
cwtl
and
ds
leave
std
xchg
fiaddl
jbe
push
js
adcl
movsl
mov
int3
repnz
xchg
mov
adc
je
cs
xor
pusha
cltd
xor
jge
jne
inc
popl
xor
pop
sbbl
or
mov
push
or
mov
call
outsl
sahf
sub
mov
sbb
lcall
stc
sbb
out
das
push
test
insl
fcomp
jne
in
mov
cmpb
lods
adc
repnz
xor
push
pop
loopne
xchg
mov
xor
arpl
mov
out
lret
pop
push
dec
in
fstl
int
fldenv
push
ja
inc
in
pop
addr16
mov
ret
sbb
mov
xchg
fistps
cltd
cld
test
mov
mov
mov
cmp
inc
pop
mov
jecxz
sbb
add
mov
in
cmpsb
jne
in
dec
or
je
jbe
ret
in
inc
insb
repz
out
nop
dec
cs
imul
inc
xchg
shl
loopne
xor
mov
pop
push
mov
xchg
outsb
aam
jecxz
sahf
scas
popf
test
sub
imul
js
or
jne
mov
lds
jp
pop
sub
cltd
adc
push
dec
cmp
inc
sub
in
fwait
in
lret
ret
inc
je
xchg
das
mov
int3
push
jae
fdivl
and
test
mov
nop
mov
aam
xlat
sbb
xor
mov
in
and
lods
jb
sub
cmp
mov
sbb
fistps
test
std
mov
cmp
ss
aam
jo
mov
cs
lods
sbb
xor
sbb
mov
xchg
sub
sbb
lea
icebp
adc
test
mov
push
or
adc
daa
adc
xor
pop
dec
mov
lret
sbb
sti
sub
scas
loope
jae
cwtl
ret
call
fnstsw
mov
das
rcrl
notl
pop
mov
dec
mov
ljmp
fldenv
lods
dec
iret
test
stos
jae
sub
and
xor
inc
mov
jg
movsb
push
aad
das
subb
and
js
sahf
cmp
je
fs
stos
test
or
cmp
outsl
das
dec
outsl
pop
in
xchg
je
pop
push
mov
sbb
push
testl
mov
mov
jl
popf
lea
dec
fdivs
cmp
in
and
fidivrl
mov
pushf
jp
aaa
or
xor
sbb
sbb
lods
mov
push
mov
or
rolb
orb
pop
pusha
mov
lds
sbb
inc
and
in
ljmp
or
scas
mov
add
movsb
insb
add
jp
data16
mov
sbb
pop
xchg
sbb
xchg
xchg
cmp
dec
ret
jne
arpl
nop
add
xchg
lock
jg
ret
xchg
xchg
mov
outsb
sub
nop
lock
call
cmpsl
clc
int3
pushf
cmpsl
jg
in
int
xor
popf
ret
jo
bound
cld
das
into
jae
and
int
mov
jg
insb
cmpsb
sub
cmp
js
adcb
rorb
mov
popf
lahf
dec
add
movzwl
call
xchg
sbb
and
lea
hlt
aas
or
sbb
fcoml
in
stos
pop
xor
cmpsl
out
leave
mov
pop
cltd
cmpsb
stos
jp
push
sbb
outsl
mov
and
rcll
add
in
sub
jp
pop
cmp
insb
insb
or
or
ja
and
test
sbb
in
pop
cwtl
cli
or
filds
adc
xchg
jp
sbb
pop
imul
xor
xor
insl
pushf
and
add
nop
mov
inc
stos
aas
or
test
jmp
sar
out
mov
mov
sbb
cmp
stc
daa
ja
sub
sti
cmp
mov
jns
xor
test
inc
pop
fs
dec
inc
enter
in
repz
test
lods
mov
push
mov
in
ds
cli
push
cmp
ljmp
sbb
pop
push
icebp
add
sbb
test
sbb
mov
adc
movsb
cmp
in
in
lcall
insl
popa
dec
push
cmp
loopne
iret
push
aam
dec
add
cmp
stc
mov
inc
mov
mov
test
ds
bound
out
ja
dec
in
mov
sub
jl
or
xchg
scas
fwait
sbb
sub
arpl
test
adc
hlt
cmp
int3
add
adc
or
inc
mov
nop
add
mov
int
mov
push
dec
pop
jo
movsb
jnp
addr16
cmp
mov
ss
push
jnp
adc
sub
mov
pop
inc
cmp
inc
bound
fidivrl
pushf
and
rorl
sub
leave
data16
add
sub
sarb
or
cmp
adc
add
mov
jle
adc
test
mov
cmc
xor
dec
push
aam
mov
jbe
mov
mul
dec
data16
loop
mov
sbb
faddl
jecxz
pop
dec
xor
xlat
jns
sub
dec
sub
out
rep
sbb
xchg
mov
xchg
push
lret
push
push
and
mull
loopne
in
sti
cli
sbb
outsl
mov
sbb
jp
aad
popa
cmp
sahf
jl
or
scas
pusha
lret
and
idivb
sbb
push
lea
das
notl
xchg
jmp
jns
lock
int
and
rclb
and
andb
cmp
aam
mov
mov
addr16
adc
adc
mov
rol
add
xor
mov
push
lods
rol
pop
push
sahf
pop
popa
jo
inc
xor
push
les
push
jmp
mov
pushf
int
mov
xchg
pusha
add
jo
ret
repnz
shrl
lahf
push
xor
dec
fnstenv
call
cmp
xor
cmp
mov
jge
clc
in
je
adc
push
or
fwait
out
or
xchg
test
icebp
jmp
cltd
mov
ds
jns
cmp
xor
aam
mov
xchg
jmp
int
cmpsb
adc
jmp
xor
iret
dec
or
and
fsubr
inc
daa
scas
ror
mov
in
jnp
inc
nop
stc
pop
in
cld
sahf
cld
mov
adc
mov
mov
dec
adc
enter
lds
in
dec
out
and
sbb
insl
or
add
cmpb
je
jb
test
mov
test
mov
jns
ss
leave
sub
les
push
je
jb
in
sbb
inc
and
addr16
iret
movsl
lock
call
inc
add
push
xor
out
pop
les
stc
pop
lahf
jmp
lds
ficompl
dec
pop
cmp
xor
movsl
jb
leave
inc
or
scas
adc
xchg
aas
xor
popf
jg
fstps
adcb
xchg
jp
push
ret
pop
andb
lahf
inc
or
fcompp
cmp
lret
fimull
pop
mov
mov
sub
scas
mov
popf
push
dec
and
sbb
ret
jecxz
xlat
inc
push
dec
ret
ret
or
and
in
jo
push
enter
cli
pop
fsubs
xchg
push
mov
push
push
mov
push
outsl
cmp
scas
fsubrp
dec
push
add
das
xchg
fldenv
cmpl
cmc
cmp
inc
push
mov
ffreep
repz
scas
or
push
jne
rcr
call
insb
jecxz
push
or
and
insl
jg
or
sbb
lods
pusha
or
daa
xor
mov
mov
dec
pop
sti
xchg
or
or
dec
addr16
ds
mov
mov
ljmp
xor
mov
cld
xchg
xor
pushl
mov
out
sub
loopne
add
mov
daa
mov
cmc
xchg
sahf
push
and
pop
enter
cmc
in
pop
xchg
jne
lods
scas
sub
cmpsb
repz
out
scas
hlt
lds
sub
lcall
xlat
sub
mov
or
cmc
fmul
loopne
arpl
add
sbb
sbb
ds
dec
and
pop
lret
sub
sti
imul
arpl
shlb
out
dec
xor
fistl
repz
adc
add
xor
adc
hlt
pop
lods
dec
repnz
adc
cmpsb
adc
jmp
out
inc
xchg
rorl
mov
out
test
testb
cmpl
jne
lcall
ficomps
mov
mov
fisubrl
pop
addr16
xchg
push
pop
dec
push
sub
sbb
ljmp
sahf
les
push
sbb
scas
jns
loop
hlt
js
or
fstps
ja
je
xor
mov
cmp
cmp
sbb
sbb
mov
loop
push
test
xchg
jge
nop
mov
scas
insl
pusha
adc
push
in
fcomps
sahf
movsb
sti
fadds
or
cli
repnz
pusha
cld
xchg
dec
outsb
push
icebp
pop
sbb
in
in
sbb
repz
cmp
sbb
in
pop
sahf
pop
mov
sti
aam
jle
stc
fwait
cmpsl
andl
js
call
push
add
bound
rcrb
push
mov
lods
insb
lahf
test
icebp
adc
pop
imul
scas
xor
push
or
mov
movl
mov
arpl
mov
cli
mov
push
lods
int
xor
les
mov
lock
adc
sti
call
xor
inc
mov
lahf
inc
inc
mov
dec
pusha
push
mov
mov
scas
jbe
notb
push
dec
sbb
pop
pusha
fdivrs
cmpsl
in
mov
cltd
orb
push
in
cmpsl
jmp
cmp
imul
sahf
int3
cli
test
fs
cld
xchg
mov
outsb
dec
aad
dec
and
fsub
lods
pusha
push
ficoml
mov
mov
or
push
push
outsb
push
sub
push
dec
adc
mov
mov
fmull
lods
xchg
lcall
add
push
jmp
lock
mov
enter
ror
pop
xor
add
das
pushf
adc
daa
sbb
movsl
fsubrs
inc
dec
lahf
fstps
sub
lods
or
mov
xlat
vpsadbw
arpl
xchg
mov
jl
out
mov
push
and
mov
enter
stc
and
int3
cmp
insb
mov
into
daa
lds
test
ljmp
pop
adc
mov
dec
outsl
lcall
dec
fdivl
push
fildll
in
or
mov
ss
dec
or
out
add
shlb
int
pop
inc
inc
inc
inc
ja
sbb
lea
mov
and
dec
jmp
daa
aam
push
hlt
mov
mov
push
loop
push
stc
xor
sbbl
mov
pop
cs
mov
vpshuflw
inc
leave
xchg
push
jecxz
in
lahf
movsl
pusha
mov
cwtl
mov
xchg
add
cmpsl
dec
cmpsl
cwtl
push
lret
mov
sti
shl
dec
add
or
js
pop
adc
add
test
push
arpl
jo
les
jnp
xor
xor
rcrl
outsb
adcb
lahf
add
fsub
jnp
out
dec
sub
ud2
cld
psubb
or
mov
dec
mov
jbe
outsb
xor
mov
lock
pop
fmuls
ds
pop
mov
xchg
lods
add
cmp
pop
mov
out
fs
insl
jbe
jmp
subl
cmp
dec
mov
push
sub
arpl
jbe
sar
mov
sbb
hlt
outsb
sbbb
outsl
xor
dec
clc
inc
mov
inc
cmp
jecxz
call
mov
sub
orb
in
push
mov
aas
cmpl
or
adc
lret
lods
in
dec
stos
mov
ret
mov
sahf
and
out
cmp
xchg
mov
movsb
add
mov
jno
lods
xor
stos
inc
xchg
ret
jnp
sahf
mov
aad
pop
and
cmp
ja
jl
call
or
pop
js
mov
and
sahf
push
lret
push
push
dec
cmp
sarl
ficompl
inc
add
cmp
sub
fwait
adc
mov
lret
push
add
mov
stos
iret
lahf
xchg
fs
cmp
dec
fmuls
mulb
adc
push
xlat
aam
cmc
jl
lock
jo
mov
imul
stc
mov
loope
mov
ja
js
dec
hlt
shll
pushf
shlb
cmp
fistl
xchg
inc
int3
repz
and
repnz
ja
xchg
mov
popa
mov
mov
dec
or
jbe
andb
push
out
repz
jge
call
aad
notl
sub
jmp
mov
int
push
fisubrs
out
mov
pop
mov
and
lcall
xchg
dec
jb,pn
iret
xchg
cld
sbb
push
and
push
out
stc
aaa
jae
sbb
es
ret
sub
daa
sti
pop
jbe
cs
xchg
and
movsl
lods
fldt
fwait
clc
push
inc
sub
jb
lods
in
jge
gs
inc
and
mov
aam
lcall
cmp
dec
fstp
movb
cmp
shrl
lret
cmp
scas
cmp
lcall
aad
cltd
jb
aaa
insb
push
add
xlat
adc
sbb
pop
cltd
insb
mov
std
jnp
mov
test
lret
imul
pop
icebp
popa
fsubrl
inc
lods
shl
out
push
xchg
jecxz
or
insl
mov
mov
xor
ja
mov
in
sub
scas
mov
sbb
repnz
and
ljmp
dec
aaa
aam
fmuls
mov
sbb
ljmp
pop
lret
dec
and
js
push
lret
nop
dec
sbb
inc
sbb
xor
leave
dec
dec
je
gs
mov
enter
stos
mov
or
jle
mov
mov
add
rorb
xor
jne
fwait
loope
loopne
inc
or
test
xor
adc
nop
ja
mov
into
ds
xchg
jo
lret
addr16
push
xor
rclb
nop
cwtl
aaa
mov
and
call
decl
sub
push
adcl
mov
adc
pop
mov
fidivrs
ss
jge
int3
jecxz
gs
mov
lahf
cmc
xchg
sahf
repnz
cmp
pop
cmp
xor
gs
cs
add
and
pop
dec
mov
mov
xchg
loop
mov
daa
pop
popl
ljmp
stc
lock
sub
arpl
imul
jp
dec
sbb
xor
int3
and
sub
cwtl
mov
sub
push
mov
jl
mov
aad
std
sbb
pop
xorl
movups
loope
or
inc
adc
test
cltd
pushf
pop
jnp
mov
xlat
lret
mov
xchg
jmp
cmp
mov
jnp
arpl
sti
test
push
push
add
adc
mov
arpl
adc
or
cld
cmpsl
pop
adc
xor
xor
and
pop
mov
test
lock
jl
sub
cli
mov
cmp
into
sbb
cs
cmp
and
movsb
cmp
mov
and
sub
pushl
xorl
mov
or
mov
jge
push
or
cld
notl
cmp
cli
xor
enter
cwtl
mov
or
cmpsl
jnp
xor
jl
xor
push
sbb
dec
icebp
xchg
jnp
mov
xchg
cmp
sub
mov
sti
and
orl
add
cli
inc
add
mov
push
pop
cmp
xor
jecxz
je
jge
loopne
mov
pusha
movsb
movsb
push
sbb
sub
push
xor
sub
cmp
mov
add
sbb
je
mov
cmpsb
out
bound
xchg
jo
repz
lds
pop
cmp
gs
jmp
bound
rcrl
pop
mov
fcmovne
mov
pushf
das
xchg
enter
outsb
jb
pop
fnstenv
sbb
iret
cmp
jns
aaa
and
not
aam
lea
xchg
cli
xor
mov
insl
cli
push
mov
icebp
daa
or
push
jo
and
repnz
sahf
mov
jo
jne
mov
lds
mov
out
inc
xchg
lock
adc
mov
mov
scas
sbb
jp
stos
cmp
enter
xor
testb
push
ja
pop
xor
jnp
pop
mov
inc
cltd
add
scas
pop
push
pop
scas
test
add
xchg
sbb
inc
push
lock
outsb
dec
and
xor
push
push
std
cmp
jl
out
xchg
mov
ficoms
pop
lret
cwtl
push
sub
sarb
pop
sbb
enter
xchg
fildl
gs
adc
daa
xchg
lahf
jo
arpl
bnd
bound
out
in
cmp
pop
sti
loope
je
sub
pop
sahf
fwait
sub
nop
int
pop
je
xor
sbb
adc
fnstcw
jl
lea
mov
mov
xor
pop
xor
xchg
xchg
repz
repz
cwtl
dec
lret
cmpsl
mov
sbbl
loop
stos
or
mov
rol
xchg
gs
cmp
imul
inc
data16
xchg
push
mov
push
jp
dec
xchg
enter
inc
out
jo
jne
pop
out
out
adc
fsubs
pusha
ja
fistpll
dec
pop
dec
cmc
xchg
in
dec
add
aas
out
mov
sbb
or
mov
push
xchg
and
xor
mov
xchg
mov
sub
cmp
jns
cmpsb
cmpsb
xchg
sbb
inc
loop
dec
cmc
imul
mov
dec
lret
fsubs
push
xchg
dec
insl
lret
enter
adc
xchg
adc
je
sbb
daa
xchg
add
mov
pop
ret
pop
cli
addl
cmp
push
std
push
ret
cld
dec
sub
inc
jle
mov
dec
xlat
add
add
ret
sub
fcoms
cmpsl
aaa
ljmp
push
imul
lret
mov
aad
enter
push
test
adc
xchg
ljmp
mov
scas
loope
orl
xor
inc
or
push
pop
ljmp
nop
mov
cmp
jge
and
or
sbb
and
xchg
and
sbb
dec
adc
dec
ja
insl
mov
std
test
cmpsb
hlt
test
movsb
test
and
adc
mov
sbb
out
or
cmp
xchg
aas
add
and
mov
gs
mov
mov
aaa
repz
push
push
inc
mov
mov
xchg
or
or
mov
fsts
or
leave
repnz
call
sbb
xor
sbb
in
frstor
xor
cmc
or
and
pop
xor
mov
repz
orb
lds
lret
push
sti
push
hlt
xchg
mov
repnz
mov
lcall
mov
popa
and
mov
pop
adc
repnz
dec
and
lods
shlb
mov
addb
xchg
fs
or
insl
push
outsl
push
adc
iret
jle
daa
nop
push
jg
xchg
testl
mov
dec
jmp
mov
jg
mov
sbb
push
mov
outsl
jns
xlat
push
sbb
out
cltd
clc
push
adc
pop
push
ror
mov
leave
jne
sbb
pop
les
movsb
aam
shll
lret
mov
push
enter
arpl
mov
pop
jle
xor
pop
lock
add
aas
mov
sub
sbb
push
int3
scas
pop
popl
insb
aad
adcl
sub
scas
aas
in
sub
cmp
sbb
xchg
dec
sub
add
sahf
ja
sbb
dec
add
and
bound
inc
dec
and
jno
std
arpl
cmc
les
or
jno
ss
test
xor
sub
mov
push
ret
cmpl
mov
push
nop
clc
jns
mov
lret
add
or
xor
mov
push
shlb
sub
xor
cli
and
scas
cmp
cwtl
add
js
inc
aaa
sub
mov
pop
xorw
mov
mov
loop
shrl
push
jmp
mov
sub
push
sub
stos
mull
in
adc
ja
jg
fsubrs
jmp
das
imul
fimuls
in
pop
movsl
push
dec
out
jmp
lret
inc
popf
inc
mov
sbb
test
mov
in
push
fists
push
push
pop
loop
push
xor
loop
lcall
xor
xchg
dec
jae
lret
mov
sbb
inc
loop
shl
arpl
daa
mov
or
cmpsb
dec
xchg
jp
test
test
and
dec
xor
xor
into
jbe
add
adc
into
sub
push
dec
imul
cmp
mov
dec
outsl
inc
mov
sub
movsb
sub
xchg
addb
cs
inc
sbb
movntps
and
mov
mov
sub
mov
pop
cmp
jmp
mov
xchg
adc
xor
sbb
mov
xlat
and
bound
gs
fs
push
xor
frstor
dec
cmpsl
into
int
inc
negl
rol
dec
scas
arpl
xchg
push
xchg
mov
sub
xchg
or
fwait
loopne
rcrl
sbb
sbb
mov
mov
sub
inc
lret
pop
insl
adc
mov
sbb
dec
cli
ffreep
mov
mov
mov
sub
push
push
das
jg
cmp
lret
or
xchg
xor
xor
jmp
ds
xor
add
xchg
and
push
or
jae
pop
jg
cwtl
fs
arpl
pop
lahf
cmp
stos
ror
mov
mov
or
ljmp
xchg
cmp
stos
inc
lds
adc
pop
lcall
adc
js
push
jmp
fwait
sub
stos
xchg
jge
rcrl
jmp
insb
jge
ret
nop
outsb
jmp
out
pop
cli
es
popf
dec
fcom
pop
add
jg
add
and
stos
and
sbb
add
jmp
cmp
mov
pop
xor
js
jge
loopne
insl
xor
xor
inc
in
sahf
ss
inc
outsb
arpl
dec
imul
inc
jge
xor
mov
movsb
jl
push
into
lods
out
sub
test
mov
movsl
fidivl
rol
jmp
xchg
mov
dec
cmc
es
cld
std
and
sbb
dec
mov
cltd
dec
mov
xor
jmp
lock
add
push
add
add
sti
xchg
mov
xchg
popf
scas
jbe
outsb
repnz
lds
jo
test
int3
push
push
inc
dec
mov
loopne
je
insb
outsl
mov
cmp
xchg
adc
xchg
sbb
in
lock
jp
in
push
imul
ja
sbb
inc
ss
rcll
scas
xchg
and
and
push
pop
lds
insl
mov
xchg
dec
addb
add
sub
adc
push
cld
movsb
cmp
xchg
mov
sub
sbb
int3
shlb
xor
mov
fistpl
cmp
sub
and
adc
dec
ror
sbb
cmpsb
cmc
adc
das
test
arpl
fs
fmuls
mov
movsb
fmuls
dec
jmp
pop
mov
ret
cmp
fldl
mov
pop
andl
cmc
mov
cli
xor
jp
dec
push
in
out
outsb
push
aaa
test
hlt
add
scas
notl
jae
pushf
add
pop
mov
and
and
and
lods
inc
scas
jo
popa
daa
jae
pop
scas
sbb
mov
mov
and
and
stos
add
icebp
adc
push
cmpsb
push
int3
lcall
jno
push
pop
mov
mov
stos
movsl
or
lds
dec
jl
mov
or
fcom
out
aaa
call
xchg
movsl
and
mov
loop
cli
inc
lods
and
rcr
fwait
orl
std
aad
sub
lods
sub
int3
movsl
dec
sahf
in
into
icebp
cld
jbe
mov
dec
sbb
jnp
arpl
cmc
sbb
fadds
pop
fstpl
dec
push
push
xchg
lock
xchg
pop
sarb
pop
sahf
es
add
in
pop
pop
icebp
ret
or
roll
sbb
loope
std
add
or
sbb
add
sbb
mov
mov
and
sbb
jg
stos
nop
xlat
cwtl
shll
mov
and
fidivl
test
ffreep
popf
cwtl
adc
lods
pusha
aas
sub
mov
repz
mov
cltd
xor
mov
int
pop
fcomps
pop
icebp
daa
pop
pop
hlt
popa
push
scas
inc
xchg
jmp
xchg
cmp
imul
mov
imul
inc
inc
inc
std
lds
lcall
loop
ja
adc
std
mov
adc
enter
pop
mov
imul
in
mov
fistps
xchg
sub
out
adc
adc
loop
dec
movsb
jle
mov
or
je
in
cmpsb
mov
mov
loope
mov
aas
xchg
std
sbb
push
xor
rorb
jl
xorb
mov
dec
sahf
jecxz
out
mov
jbe
out
cmp
jmp
leave
inc
sub
jp
cmp
pop
pop
pop
movsl
fwait
call
js
pop
or
mov
mov
mov
int
pop
lds
mov
pop
sub
xor
adc
mov
daa
push
scas
lea
cmp
lret
jns
loope
int
fcompl
xor
mov
xchg
cmpsb
insb
cltd
cs
call
cltd
hlt
jmp
lret
sub
mov
push
mov
test
fnsave
mov
stc
add
or
push
adc
popa
pop
xor
adc
fwait
nop
adc
push
mull
mov
clc
adc
jp
fnstenv
and
inc
pusha
push
and
mov
movsb
dec
push
sbb
pop
mov
cli
aam
adc
fbstp
add
int3
sbbl
loope
add
leave
sahf
adc
add
aam
xor
jmp
mov
in
push
clc
add
adc
or
filds
sar
cld
dec
jns
xchg
test
jns
ror
cld
xchg
sbb
rcl
cli
imul
push
aas
clc
sahf
mov
xchg
fsubs
repz
adc
test
or
imul
sbb
mov
mov
bound
mov
and
out
add
outsb
mov
mov
jle
cmp
fcoms
push
xor
xlat
in
and
pop
inc
push
mov
fucomi
adc
shll
jg
in
cmp
aam
cmpsb
divl
adc
lods
loope
sub
dec
or
das
cmp
clc
in
xor
xchg
cs
lea
arpl
jg
stos
out
mov
mov
repnz
stos
dec
popf
add
mov
les
out
fmuls
cmp
push
stc
mov
andb
sub
adc
xor
lcall
and
jno
fsubrs
hlt
push
fldenv
add
fnstsw
mov
andb
popf
das
dec
inc
cmp
push
inc
out
add
or
dec
and
adc
ds
js
add
lcall
sub
daa
in
cld
ljmp
push
mov
jb
jle
jge
mov
jp
xchg
xchg
inc
ss
pop
mov
lcall
pushf
xor
subl
mov
inc
cwtl
lcall
mov
insl
cmp
or
insb
es
sbb
dec
outsl
xor
cltd
adc
push
adc
xchg
sbb
jo
aam
dec
sbb
sbb
cld
les
mov
scas
int3
or
add
daa
lds
cli
notb
jnp
repnz
add
sbb
cmp
jns
sub
adc
mov
out
scas
inc
inc
scas
or
adc
inc
sbb
clc
cmpsb
xor
mov
dec
daa
fisttpll
push
scas
popf
adc
lahf
xchg
push
out
cmp
and
sarb
pop
push
popl
sub
sub
and
stos
in
or
and
fimull
adc
mov
stc
fsubl
xor
add
xchg
cmp
sti
xor
faddp
lea
inc
or
pop
pop
lods
fwait
in
cld
xor
lock
or
jno
mov
ss
xor
or
cmc
xor
jb
jnp
lret
jge
lds
sub
xor
pop
stos
lods
or
mov
cltd
xchg
mov
xor
sahf
insl
imul
dec
stos
xor
test
dec
push
inc
mov
mov
add
adc
dec
aaa
in
arpl
ret
fstpt
xor
push
fnstsw
cmpsb
xchg
adc
fldenv
inc
test
adc
movsl
call
push
loop
xchg
out
jmp
xchg
mov
cld
adc
xlat
jecxz
push
cmp
push
inc
mull
imul
xchg
pop
loope
xchg
xchg
sub
cmp
xchg
pop
stos
inc
mov
jp
pop
insl
aas
push
jp
mov
lea
mov
testb
mov
push
sbb
push
sbb
mov
ljmp
pop
pop
fstpl
mov
stos
loop
inc
and
pop
jecxz
stos
adc
repnz
arpl
int
sub
lea
xor
xchg
xchg
and
mov
out
jo
cmc
test
push
pop
into
das
out
popa
in
jecxz
add
ljmp
push
xorl
movsl
xchg
mov
addr16
out
jg
add
or
cwtl
jle
mov
insb
or
sbb
leave
gs
test
pusha
stos
fldt
mov
jb
jp
mov
sub
lahf
das
inc
adcb
push
mov
adc
movsb
mov
cmpsl
xchg
cli
es
jl
loopne
xchg
testl
xchg
lret
call
js
jecxz
ljmp
jecxz
repz
or
ficompl
sbb
sti
sbb
ds
pop
cli
pop
dec
cwtl
hlt
sbb
mov
cmpsb
mov
ljmp
inc
push
ds
test
xchg
mov
stc
rolb
faddl
mov
mov
mov
pushf
jnp
cltd
int
repnz
xor
xlat
js
dec
push
mov
mov
and
and
outsb
rol
add
adc
call
jns
inc
outsl
adc
add
push
jle
popa
cmpsl
sub
mov
repz
cmc
lret
js
jbe
mov
dec
sbb
lods
sahf
push
fwait
lods
scas
push
imul
xor
jge
xchg
lea
mov
daa
pop
and
mov
mov
xor
hlt
std
or
ret
ret
pop
int
lcall
xorb
and
or
aas
sub
sbb
push
dec
insb
movsl
jl,pn
repz
xchg
in
mov
cmc
jnp
scas
lret
push
xor
sbb
push
cli
add
pop
in
dec
push
add
push
lds
xchg
push
cld
sahf
mov
push
outsb
mov
mov
scas
xchg
and
call
sub
cmp
xchg
int
lods
std
fstps
imul
cmp
jmp
pop
add
push
shlb
imul
movsl
xchg
fsubrl
add
jne
or
imul
jge
gs
lea
jae
push
dec
pushl
movhps
lret
inc
mov
mov
inc
jne
aam
lret
popa
xchg
mov
fwait
ret
pop
pop
mov
lods
mov
push
mov
xor
cmpsl
pusha
inc
aas
jo
aad
pusha
add
lret
dec
add
inc
fldenv
addr16
mov
and
add
data16
pop
push
insl
dec
cmp
in
pop
mov
jae
out
in
cs
mov
push
bound
jp
pop
cmp
imul
cld
mov
in
in
ficoms
rolb
stos
mov
sbb
fisubs
or
loope
xchg
test
pop
sub
sub
out
sub
xchg
lock
ret
aaa
or
xchg
in
clc
sahf
mov
dec
ds
icebp
mov
xchg
cmp
daa
pop
aas
imul
rorl
call
add
les
mov
out
cmpsb
pop
out
cmp
shlb
xchg
cs
adc
pop
push
sub
jno
pop
addr16
out
pop
mov
mov
mov
sbb
sbb
popf
sub
out
or
cmc
sbb
mov
or
bound
mov
mov
dec
or
push
test
fiaddl
mov
pusha
popf
jge
hlt
xor
jp
es
scas
or
arpl
jp
pop
ja
mov
icebp
push
fdivl
jmp
cmp
xor
popf
sub
call
and
add
add
jle
pop
test
mov
xlat
pop
mov
xchg
pop
in
push
sar
in
push
jecxz
jno
ret
imul
and
mov
lods
add
and
aaa
xor
dec
inc
movl
dec
xchg
int
pop
adc
jb
mov
xchg
and
test
es
cmc
add
pusha
mov
xchg
xor
cmc
sub
ret
adc
fwait
mov
subl
loopne
or
push
sbb
loope
pop
jl
cli
cmpsb
lock
adc
out
out
jge
pop
test
push
sbb
mov
cli
xor
mov
dec
push
movsb
mov
mov
out
in
into
dec
push
mov
mov
fwait
iret
sbb
mov
mov
push
or
repnz
push
mov
xchg
lods
arpl
add
std
outsb
xchg
mov
add
aam
jl
mov
sbb
fnstenv
xchg
push
lea
jno
xchg
lock
jne
pop
fmuls
mul
test
push
lahf
jl
xchg
ds
push
test
jbe
or
into
mov
push
pop
jmp
add
xchg
mov
scas
sub
and
fidivrs
fists
leave
cmp
or
sbb
or
mov
fmulp
pop
fdivr
mov
pop
movsb
mov
je
sbb
push
cwtl
mov
cmpsl
loopne
lds
push
in
aaa
test
mov
cli
xchg
scas
movsb
push
adc
pop
cs
adc
cmc
mov
loopne
lods
je
gs
imul
adc
push
mov
mov
sub
cmpsb
inc
imul
mov
cs
int
sbbb
cli
stos
std
jg
imul
xor
or
aad
in
or
mov
sti
roll
in
inc
adc
inc
shlb
cmp
call
dec
in
mov
fdivp
mov
popa
pop
mov
jnp
popf
jne
mov
mov
aas
int3
rcrb
pop
mov
sbb
inc
push
lret
sbb
leave
xor
and
incl
xchg
call
hlt
xor
add
mov
popa
shr
call
jo
cmpsl
aam
imul
xor
xlat
dec
xchg
push
or
lods
mov
mov
addr16
sub
inc
cmpsl
cli
js
hlt
orb
cmp
mov
test
movsl
divl
and
sbb
ds
aam
cmp
push
jle
rorb
test
sub
cmp
dec
jb
ss
adc
or
cmpsl
dec
adc
fs
inc
inc
inc
je
roll
mov
cld
ja
std
adc
pop
cmpsl
cmp
nop
icebp
mov
mov
xor
xchg
ret
test
xchg
jl
push
sub
mov
dec
push
push
icebp
xor
and
and
mov
or
push
arpl
cs
inc
scas
or
mov
mov
jne
in
mov
pop
adc
insl
mov
pop
stos
xlat
xchg
and
mov
mov
jle
andl
pop
fisubrs
adc
insb
popa
fsubl
fldl
les
int3
adc
cmc
lret
mov
mov
or
ss
xlat
lcall
inc
sbb
mov
cmpsb
mov
pop
pop
xchg
loopne
inc
lcall
mov
sub
dec
xchg
or
ficoml
ljmp
jp
das
dec
jb
gs
and
or
sub
pop
cs
mov
repz
aas
mov
push
fstpl
stos
add
mov
fs
ficomps
imul
arpl
dec
movsl
and
rcrl
lea
stc
add
insb
push
test
mov
pop
pop
sub
lods
inc
int3
sbb
and
mov
and
cmp
es
movsl
cs
push
inc
mov
inc
insb
push
sub
push
ljmp
mov
mov
add
iret
loope
out
mov
add
pop
scas
stos
mov
ret
cld
and
cmpl
pop
jle
cmc
mov
in
ret
rcl
and
add
mov
cmp
pop
dec
mov
pop
cmp
pop
je
and
inc
in
arpl
and
pop
imul
nop
cmc
push
push
cmp
sbb
xor
inc
mov
aad
jl
pop
jmp
fidivs
add
sub
and
mov
push
sbb
pop
adc
push
iret
inc
out
movl
movsb
adc
fmuls
sbb
gs
aam
push
pop
aas
dec
mov
insb
xor
js
add
xor
ljmp
repz
addb
pop
sbb
shlb
les
jmp
pop
adc
mov
rolb
cli
sub
or
pop
add
xlat
fs
push
adcb
mov
mov
pop
cmpsb
sbb
adc
lods
cwtl
popf
out
lods
dec
cs
xchg
xchg
sub
pop
scas
lret
movsb
clc
bound
fimuls
faddl
mov
and
repz
push
adc
add
es
mov
insb
and
jl
mov
mov
or
leave
pop
cli
cs
mov
lods
inc
shll
movsl
pushf
push
mov
jle
mov
jo
popa
mov
pop
xchg
in
sbb
hlt
adc
xor
inc
jb
xchg
push
push
lods
stc
add
into
enter
mov
addr16
xchg
push
out
lret
inc
scas
fsubl
xchg
xor
mov
fstpt
clc
or
and
sub
daa
cmp
out
inc
pop
xchg
fnsave
ficompl
fdivs
sbb
jmp
leave
dec
mov
in
add
xor
fidivrl
jmp
rclb
pop
mov
idiv
add
pop
cmp
mov
or
imul
inc
insl
mov
jno
cmp
ljmp
dec
sar
mov
sub
inc
mov
arpl
inc
arpl
inc
or
cmpsl
push
orl
mov
xchg
fwait
gs
xchg
push
push
push
jle
fdiv
out
adc
fcoms
and
sbb
mov
pop
xlat
stos
push
mull
push
xchg
push
sti
js
add
xor
cmp
jne
xchg
movsb
nop
je
in
sbb
leave
lcall
xor
fwait
cmp
mov
xchg
call
xor
sbb
inc
int
or
pop
sbb
mov
nop
pop
clc
loopne
rol
ljmp
movsl
cmp
dec
mov
das
fistps
mov
push
push
pop
cltd
sub
cmp
test
jnp
mov
inc
push
adc
outsb
lret
mov
fdivrs
loop
mov
cmp
int
test
xor
mov
dec
jb
mov
mov
imul
aam
jns
pop
dec
dec
sahf
fisubs
sub
dec
orl
inc
add
cmc
stc
sbb
or
out
mov
adc
sub
push
mov
xor
dec
or
mov
and
bound
mov
outsb
fisttpll
xchg
shrb
stos
fs
test
pop
bound
cs
adc
ljmp
imul
clc
test
and
xor
cli
lods
mov
fsub
pop
jne
jle
cmp
or
jle
xchg
int3
xchg
and
sahf
dec
sbb
mov
je
sti
or
mov
cltd
rcll
adc
inc
lahf
jb
mov
popa
jp
push
sub
sbb
push
and
lods
dec
imul
dec
out
icebp
pop
or
rorb
stc
push
bound
cmpsl
inc
in
dec
int3
mov
int
xchg
je
je
movswl
push
pop
fabs
inc
sbb
aam
or
jmp
mov
test
outsb
cs
xor
fimuls
cli
adc
pusha
mov
adc
inc
xor
or
fs
clc
lds
cltd
gs
dec
out
inc
out
mov
adc
lds
icebp
loopne
inc
into
and
mov
cs
sub
and
lret
jge
xor
mov
pop
fimull
pop
clc
xchg
jle
dec
jno
test
push
testb
push
loopne
nop
mov
push
js
and
push
lock
pop
es
push
popa
orl
in
inc
mov
xchg
frstor
mov
sbb
pop
imul
fisubs
mov
push
mov
mov
add
outsb
stc
repz
sbb
je
fxch
xor
sbb
sti
lock
loope
jl
mov
mov
out
push
jl
xchg
int
pop
inc
cmp
aaa
mov
mov
insb
imul
pop
in
pop
cmp
lret
xor
ljmp
fs
test
movsb
popf
out
dec
or
outsl
mov
xchg
and
stos
enter
sbb
repnz
in
fnsetpm(287
lahf
push
test
sahf
xchg
or
push
int3
push
iret
mov
repz
sub
cli
inc
test
dec
pop
xchg
push
mov
pop
loopne
xorb
es
in
cmpsb
orb
push
sti
xchg
jecxz
mov
mov
shll
call
mov
fcom
rcrb
jb
dec
pop
fwait
sbb
adc
xchg
sbb
push
movntq
call
inc
push
xchg
inc
mov
in
jno
push
aad
jecxz
nop
test
rcrb
fnstsw
scas
mov
add
std
lods
ret
imul
push
cmp
lds
arpl
inc
jge
sub
mov
fsubs
dec
mov
ss
push
or
cs
xchg
xchg
sub
mull
dec
nop
fdivp
xchg
pop
js
pushf
jo
pop
add
cld
addb
pusha
lea
jle
je
mov
sub
inc
cwtl
jb
xor
jg
or
xor
aas
pop
mov
dec
and
sbb
or
cmp
inc
lahf
xor
lcall
sbb
lret
xor
push
leave
sbb
cltd
outsl
sbb
cmp
into
xchg
cmp
mov
inc
push
filds
enter
sub
cltd
das
out
xor
fsubs
jne
icebp
lods
cmp
jg
scas
sarb
or
int3
sub
sbb
sbb
out
adc
test
and
dec
sub
ja
xchg
xor
mov
enter
jbe
rcrl
and
adc
inc
adc
dec
inc
mov
int3
dec
ret
leave
sub
and
mov
fistl
mov
popf
dec
fstpl
mov
push
xchg
mov
push
icebp
jbe
aaa
mov
lahf
adc
cmp
xor
je
jbe
ret
sub
sbb
pop
and
pop
dec
incl
addr16
dec
pop
shrl
or
pop
push
iret
ds
push
cmp
push
dec
shrl
add
push
mov
daa
mov
fidivrl
push
fidivrl
jbe
xchg
arpl
and
pmaddwd
and
push
movsb
xchg
xchg
fcmovu
jae
and
cmp
lods
dec
mov
ss
lods
mov
stos
sarb
mov
add
add
imul
aam
mov
sti
pop
jnp
mov
and
xchg
xor
sub
xor
sahf
out
mov
inc
xor
in
jl
notb
jecxz
out
and
pop
cmp
mov
push
fwait
notl
mov
or
imul
iret
xor
loopne
fwait
sti
je
fcomps
js
mov
jge
repz
in
inc
push
movsb
fidivs
mov
repz
std
fprem1
push
rolb
xlat
pusha
imul
aaa
sbb
cltd
and
xchg
dec
jno
sbb
mov
cmc
movsl
xchg
mov
mov
dec
jae
xchg
insl
popa
lret
add
mov
mov
jno
scas
test
test
loope
outsb
shll
xchg
add
dec
sbb
notl
xchg
loop
fldl
add
jge
pop
xchg
mov
sub
ja
sub
shrb
jae
rorl
push
pop
flds
outsb
popf
xorb
icebp
cs
dec
js
cmp
iret
fdivp
xchg
iret
push
or
dec
nop
jg
xorb
xchg
add
cltd
pushf
or
out
mov
cwtl
push
hlt
mov
or
or
popf
or
lcall
inc
sahf
lock
mov
mov
pushf
int
push
or
imul
sbb
adc
aaa
pop
and
xchg
cmp
xor
gs
ja
push
or
pop
movsl
int3
lret
xchg
xlat
inc
xchg
into
int
and
bound
mov
adc
xor
cmpsb
xor
movsb
sbb
mov
jns
sub
pop
and
lret
or
xchg
inc
sbbl
cwtl
loop
adc
int
mov
icebp
scas
pusha
fdivr
cltd
mov
add
mov
mov
mov
pop
pop
xor
es
push
cmp
es
inc
xchg
lock
lahf
aaa
lahf
inc
sub
test
rcr
fwait
sbb
aam
cmp
in
push
dec
mov
fsubr
jp
out
imul
fildll
dec
sti
fidivrl
popa
dec
fldt
push
rcrb
out
mov
iret
repnz
xor
js
lods
sbb
push
push
rorl
stc
es
and
mov
pop
les
lret
xchg
scas
les
push
repz
sbb
or
jl
les
xlat
fadds
bound
jecxz
mov
loop
sarb
lock
bound
cmp
ret
adc
cmp
lock
mov
movsl
imul
pop
dec
insl
adcl
jp
ds
dec
dec
bound
outsl
jp
jne
push
pushf
fsubl
loope
fnstcw
idivb
xchg
ret
push
fiaddl
pop
in
xor
mov
mov
test
jl
jno
jmp
out
push
xor
mov
sti
pop
pop
into
pop
or
stos
mov
scas
in
popa
mov
mov
sahf
xchg
scas
out
fnstcw
cs
icebp
gs
out
mov
test
loopne
push
xchg
movsb
xor
outsb
test
pop
inc
xchg
outsl
je
jmp
out
test
push
dec
out
mov
pop
mov
test
fmulp
stos
cld
jno
xchg
outsl
and
test
loopne
aad
mov
cmp
inc
fisttps
add
repz
ret
das
dec
jecxz
test
push
ja
add
notb
pop
inc
jecxz
cltd
jmp
xchg
stc
add
mov
or
icebp
lret
mov
xor
sbb
cmpsl
dec
outsl
out
ret
shlb
xor
and
dec
inc
pop
mov
inc
inc
mov
andb
xor
stc
sub
popa
cs
pop
jg
ja
xor
cmpsb
adc
pop
inc
mov
or
test
dec
es
sub
xchg
aas
pop
iret
push
sbb
repz
sarb
and
mov
ds
add
mov
stos
inc
test
mov
pop
push
adc
dec
aas
std
aam
popf
jge
outsl
push
pop
ds
dec
add
jo
imul
test
cmp
inc
fimuls
in
out
daa
pop
xor
movsl
adc
jmp
int
push
cltd
jo
jl
jnp
data16
xchg
pop
xchg
addr16
int3
shlb
cvtps2pi
mov
jle
dec
push
call
out
inc
pusha
xor
push
stos
lret
insb
jmp
pop
loop
insl
push
adc
mov
and
je
ljmp
jne
rep
jmp
jmp
mov
xchg
push
js
mov
mov
lcall
push
jne
jno
outsl
jo
test
int
cmc
xor
jne
test
pop
call
negl
push
push
xchg
jae
shlb
into
adc
test
popf
daa
jnp
pop
mov
xlat
test
xor
mov
xchg
outsb
jecxz
add
cmpsl
push
cmp
or
mov
mov
inc
mov
enter
push
out
fsubs
and
pusha
jmp
or
cmp
add
add
lret
sbb
in
sbb
mov
cmp
dec
mov
ljmp
jb
scas
mov
cmp
adc
cld
mov
inc
fidivl
mov
movl
sub
push
in
lds
int
mov
xchg
or
ja
lret
sbb
mov
inc
pop
cmp
mov
xor
test
adc
aaa
adc
cmc
lahf
cmc
dec
les
in
out
xchg
push
jo
sbb
std
xchg
cmp
pop
xlat
test
xchg
xor
test
xchg
or
sbbl
repnz
pop
loopne
sbb
repz
nop
mov
dec
sbb
outsb
pop
dec
push
xor
sbb
out
imul
shlb
push
lret
fisubl
loop
cmc
mov
sbb
loope
fcmovne
nop
add
jo
sub
jns
adc
xor
and
lods
in
push
out
fiaddl
jle
mov
sbb
subb
xor
shlb
xchg
inc
repnz
sbb
sbb
xor
pop
inc
mov
outsl
cld
shlb
into
xchg
dec
roll
push
mov
or
cli
add
lds
int
fbstp
mov
leave
jbe
jns
fnsave
push
sbb
jmp
mov
scas
dec
or
xchg
add
cs
loop
push
xor
out
out
lods
inc
dec
dec
and
push
cmp
aad
das
xchg
aam
cs
pop
lea
pop
shrl
lret
mov
int
and
idivl
mov
shlb
xor
mov
mov
hlt
ljmp
jg
popa
inc
jg
add
cmp
jne
adc
lods
xor
in
adc
ljmp
mov
hlt
stos
push
es
mov
loope
out
pushf
jge
add
ds
mov
cmc
lea
data16
ret
adc
popa
in
nop
nop
add
in
jl
jb
jg
test
xchg
xchg
out
fbld
je
stos
xchg
mov
lea
lods
inc
pop
adcb
mov
test
lret
cmp
aas
test
mov
inc
sbb
fstpl
mov
bound
xchg
mov
adc
lret
mov
movsl
ja
inc
bound
mov
sub
iret
cmpsl
test
shlb
mov
dec
rcr
out
cmp
push
xor
je
stos
mov
pusha
fs
in
xchg
cld
pop
inc
hlt
mov
dec
jg
das
adc
adc
in
test
push
mov
or
xor
mov
fidivrl
jecxz
aam
add
push
fsubs
dec
xchg
add
xor
pushf
push
xchg
js
push
xlat
test
pop
popf
aaa
je
imul
and
adc
xchg
cs
cltd
mov
orl
jae
dec
pusha
jp
mov
xor
inc
daa
shlb
das
loop
movsb
inc
nop
mov
sub
pop
je
arpl
pop
jns
push
xchg
and
xchg
cmc
mov
push
sbb
adc
scas
cwtl
mov
out
push
bound
xlat
or
rclb
cmp
mov
lock
and
int
insl
js
sti
daa
adc
xor
enter
in
testb
mov
pushf
insb
xor
lret
mov
mov
cmpsl
cmp
pop
mov
fdivs
mov
inc
jl
cmp
adc
rorl
test
dec
inc
faddp
lcall
mov
sti
nop
ljmp
ret
fidivl
mov
push
mov
xor
mov
jp
clc
or
sbb
xor
push
xchg
cmpsl
popf
xor
mov
jbe
call
loopne
lret
jmp
icebp
repz
ds
dec
xlat
mov
lods
dec
lret
sarl
cmp
fiaddl
fs
lahf
pop
and
aad
xor
cs
mov
leave
out
push
sbb
mov
fstpt
mov
sub
nop
xchg
inc
popf
pop
mov
mov
cmp
insl
imul
into
sahf
into
fists
jns
cli
xor
daa
shlb
je
push
test
push
mov
addr16
pop
in
mov
xor
jecxz
mov
xchg
inc
push
mov
mov
shlb
sbb
fldenv
in
lea
xor
jge
xchg
out
adc
cmp
mov
out
sub
lret
cs
ror
scas
mov
and
out
scas
sahf
jp
or
lret
and
ja
add
dec
or
fistps
mov
ss
xor
es
add
xchg
inc
sbb
in
bound
adc
sahf
and
popa
shl
seto
enter
dec
cwtl
hlt
ljmp
mov
fidivrs
dec
ret
add
xorb
in
mov
add
xor
leave
outsl
cmp
adc
jns,pn
loop
inc
xor
shl
lock
mov
jb
movsb
push
test
xchg
int
jno
sbb
xchg
loope
das
les
jmp
sub
mov
dec
out
xor
add
dec
into
nop
test
enter
push
jb
xor
lods
roll
cs
sub
inc
push
push
sub
clc
rcrb
je
inc
adc
mov
xor
sbb
mov
shl
xchg
mov
out
jbe
les
add
fwait
inc
fidivs
mov
mov
pop
jno
xchg
repnz
add
and
out
ret
mov
push
scas
subl
loopne
loope
sahf
ja
xchg
sti
xchg
mov
bound
loopne
xchg
sub
gs
loope,pt
pop
movsl
lea
sub
dec
andl
arpl
jbe
js
mov
cmp
jne
inc
fcmovnb
sbb
pop
loope
cli
in
imul
or
dec
inc
mov
jno
pop
stos
jmp
nop
push
stos
shll
fwait
imulb
sarl
cmc
mov
dec
pop
xchg
xchg
xor
xchg
lret
cwtl
pushf
adc
shrb
sbb
iret
sti
fnstcw
push
mov
jae
inc
mov
jbe
jl
insl
jmp
fnstcw
or
gs
dec
xchg
ss
mov
pop
sub
aad
rorb
mov
push
repnz
or
inc
inc
ljmp
lret
mov
js
inc
enter
pop
pop
sbb
lcall
mov
push
scas
cmp
les
movsb
or
jecxz
lahf
sub
dec
jo
repnz
add
outsb
jae
jae
orl
hlt
out
in
lea
rclb
push
popa
xor
inc
hlt
movsb
mov
mov
jp
pop
hlt
inc
push
movsb
cs
push
loope
fildl
push
sub
jns
in
dec
lret
or
test
and
dec
xor
add
in
dec
insl
xor
std
mov
pop
xor
rcl
nop
es
es
fcmovu
repz
fs
add
fiaddl
out
das
pop
inc
jae
je
loopnew
sub
or
xor
pusha
mul
fwait
into
inc
ficomps
jnp
jae
inc
or
mov
cltd
mov
jns
inc
mov
jecxz
in
outsl
xor
cmp
push
mov
popf
movsb
jmp
adc
jns
or
nop
faddl
dec
aaa
clc
mov
daa
loope
mov
mov
jbe
jae
fnstsw
imul
mov
test
mov
jae
mov
adc
arpl
rcrl
mov
sub
sbb
jnp
sbb
add
loopne
sub
inc
push
aad
xchg
or
test
cs
rorl
mov
mov
cs
shlb
add
rorb
stos
push
sbb
xchg
xchg
ret
pop
pop
mov
addr16
mov
push
les
sub
inc
jge
insb
out
mov
rcrb
xor
popa
jno
js
mov
dec
ret
test
and
push
fmulp
mov
pop
rcll
repnz
mov
push
ret
mov
out
add
and
je
loop
push
mov
sbbl
mov
mov
sti
push
test
scas
mov
shrb
mov
sbb
mov
es
fbld
int
mov
call
cmpsb
dec
pop
lods
pop
insb
cmp
mov
cmp
inc
push
jle
dec
add
out
jns
or
push
adc
pop
ret
sub
add
inc
jmp
mov
mov
jb
sub
jo
hlt
lods
lret
or
mov
add
je
sahf
stos
mov
mov
call
bound
xor
mov
and
rcrl
scas
call
sub
mov
lsl
xchg
insl
mov
push
repnz
in
adc
cli
fld
push
lahf
pop
outsb
loope
leave
pushf
xor
flds
out
cmp
inc
movsl
inc
and
sub
jns
loop
mov
push
cwtl
stc
imul
mov
sub
pop
sub
pop
lret
ds
adc
add
or
adc
sbb
rcrl
lds
push
or
je
dec
pop
notl
or
arpl
xor
rcl
adc
mov
jbe
push
inc
enter
cltd
rorb
gs
add
cmp
xor
sbb
pop
aaa
adc
stos
cmp
cmp
push
pop
sub
imul
adc
sti
inc
jecxz
mov
sbb
cmp
cwtl
xchg
hlt
mov
mov
hlt
sub
lds
mov
dec
pushf
pop
xchg
push
scas
das
mov
jl
test
jo
daa
aas
pop
and
adc
popa
mov
aam
addb
sub
mov
test
adc
or
dec
jbe
sub
aam
dec
imul
inc
addr16
and
fwait
ja
and
movsb
dec
mov
sbb
mov
imul
push
nop
mov
in
inc
sbb
popa
fnstenv
mov
push
pop
fs
iret
cltd
repnz
sub
xchg
fnstsw
negl
pop
lock
cmp
jne
jnp
in
scas
in
xor
leave
pop
mov
fdiv
bound
rolb
std
aas
pop
fimull
fbld
movsb
cmp
negl
and
imul
lcall
sbb
iret
add
dec
or
push
and
push
add
xor
pop
mov
add
mov
jns
or
inc
pop
clc
inc
push
adc
lods
mov
pop
rcrb
cmp
xchg
roll
cli
das
decb
xchg
mov
sub
xchg
inc
ret
cmpsl
sbb
gs
std
cltd
fs
cwtl
cld
cmp
cmpsb
stc
imul
pop
mov
rcrb
mov
sbb
mov
andb
mov
shrb
add
sbb
lret
push
outsb
sub
scas
test
sbb
movsb
xchg
je
mov
fcomip
mov
ret
xchg
push
shll
sub
nop
jnp
inc
shll
clc
shrb
push
pop
aam
pop
pop
lock
ljmp
data16
mov
nop
lock
inc
addr16
inc
mov
dec
push
mov
adc
sbb
dec
push
sub
ds
ljmp
inc
stc
jmp
cmpsb
jecxz
out
jl
sbb
push
sbb
dec
daa
mov
cmp
xchg
jo
dec
pop
lcall
inc
sbb
movsl
dec
mov
fcoml
sub
and
xchg
dec
clc
mov
add
mov
movb
mov
jecxz
mov
jmp
lds
xchg
xlat
loop
call
ficoml
cmp
gs
push
and
testl
out
popf
cmpsb
testl
leave
inc
sbb
pop
sbb
push
mov
loop
sbb
sub
test
hlt
cmpsb
or
lds
ficompl
cld
adc
lahf
rclb
mov
jb
and
dec
popa
test
cmp
push
mov
mov
add
dec
add
mov
aam
and
ljmp
imul
int3
sub
xor
xchg
aas
xchg
or
add
mov
fldl
gs
add
xchg
mov
fs
scas
movsb
imul
adc
stos
in
pop
xor
and
out
je
mov
das
sbb
inc
dec
lret
loope
sub
jecxz
or
jmp
inc
mov
jne
adcl
jp
test
movsl
xchg
ja
loope
loopne
les
lret
xchg
sbb
repnz
dec
incb
jbe
cld
lods
gs
rclb
dec
ret
inc
or
or
xchg
sbb
jl
ja
pusha
movsl
jne
data16
cld
inc
push
mov
add
je
scas
test
pop
fs
lahf
jge
cli
xor
mov
inc
inc
cltd
pop
cmp
cmp
subb
jle
sub
ljmp
cmp
je
imul
and
aas
cmpl
dec
xlat
aas
fdivrs
mov
and
into
xor
xchg
push
cmp
xchg
mov
fld1
lahf
xchg
into
jb
xchg
cmpsb
mov
andl
mov
scas
add
dec
and
add
cmp
push
jle
in
pop
scas
lcall
jmp
mov
pop
or
ret
add
imul
movsb
inc
bound
inc
xchg
sti
and
bound
in
dec
or
adc
xor
xchg
or
sub
and
lock
xor
pop
cmp
mov
mov
ds
call
inc
loope
les
or
popa
subl
dec
les
in
in
jecxz
sub
jo
lahf
repz
push
pop
jmp
xor
cs
mov
xor
jp
bound
jbe
sub
fadds
call
mov
popa
subl
cmp
or
adc
add
mov
aad
push
mov
add
out
addr16
cmp
and
sub
mov
test
or
mov
test
ss
pusha
adc
mov
lcallw
movb
cld
sbb
in
aaa
call
pushf
adc
pop
insb
fisttpll
mov
sub
push
inc
mov
jbe
dec
pop
push
add
leave
push
jnp
mov
call
iret
out
xor
std
sub
xadd
or
xor
mov
insb
lods
stc
cmpsb
insb
xor
cli
test
popa
lret
cltd
repz
mov
frstor
push
ret
mov
fadds
cmp
pop
push
enter
add
inc
mov
sub
jb
sub
mov
xchg
sbb
call
xor
mov
add
add
in
dec
int3
pop
mov
adc
mov
jnp
adc
dec
out
sbb
mov
cmpsb
imul
loope
sub
fldenv
in
lcall
jne
pop
sbb
pop
jb
adc
jne
sbb
xor
sarl
ja
jbe
mov
jecxz
fs
lods
shll
and
js
loopne
pop
loop
es
or
test
mov
mov
orb
dec
sbb
addr16
inc
mov
or
fisttpll
out
je
dec
mov
mov
or
jnp
add
popa
stc
sbb
xor
pop
pop
bound
lcall
mov
sub
fcoms
mov
sbb
pop
cmp
dec
out
fcmovu
adc
outsb
mov
mov
stc
imul
xchg
cmp
insb
xchg
add
negb
loopne
mov
xor
lea
push
mov
xchg
jmp
mov
sub
testl
add
dec
dec
cmpsl
xchg
cmp
sub
scas
dec
jns
std
fbstp
cmp
aad
cld
jmp
arpl
mov
in
icebp
js
push
loop
pop
rcll
adc
fcmovu
scas
in
sub
mov
xchg
aad
mov
mov
lods
push
sub
add
daa
xlat
sbb
lods
pop
div
cmp
xor
mov
sub
ss
mov
stos
cmp
xchg
insl
xlat
jg
je
gs
dec
lret
les
inc
ljmp
test
xchg
sub
pop
inc
mov
xlat
inc
clc
cmp
out
jns
pop
aad
insl
mov
xor
sub
data16
fsubrp
pop
out
lds
or
sbb
push
xchg
stos
mov
and
pop
leave
cmpsl
in
jbe
scas
dec
insl
outsl
pop
leave
pusha
mov
insb
movb
pop
and
add
ljmp
movsb
ja
ret
mov
xchg
mov
cli
push
aam
icebp
xor
xchg
int
pop
lock
cmpsb
cmp
scas
movsb
loopne
push
pusha
mov
rcll
pop
push
sbb
jge
cmp
dec
dec
loope
jns
or
imul
orl
clc
pop
into
or
cmpsb
cltd
dec
xchg
in
test
incl
push
nop
and
pop
add
shl
pop
xor
xor
add
dec
pop
out
jo
sahf
jb
lds
unpcklps
out
sti
mov
push
jo
insl
xchg
or
jne
movsb
xchg
adc
mov
pop
push
mov
pusha
ja
call
xor
hlt
mov
mov
inc
sub
or
daa
adc
scas
rcrl
in
adc
mov
lret
cld
dec
lret
pusha
clc
movsb
addb
pop
sahf
ja
jne
mov
dec
push
test
xor
std
or
lret
push
jo
fwait
insb
lock
xchg
arpl
sbb
mov
imul
es
xor
test
lods
pop
out
pop
lea
mov
sbb
pop
arpl
ret
aaa
out
inc
dec
insl
roll
adc
pop
pop
jmp
and
into
aas
inc
adc
test
test
hlt
cmp
sub
jo
ljmp
pop
xor
repz
xchg
andb
enter
mov
ds
add
aaa
dec
aaa
add
lret
jmp
fwait
dec
repz
arpl
ljmp
lcall
xor
in
push
xor
cmpsb
push
inc
rcl
dec
mov
jnp
xchg
je
xlat
std
xchg
mov
shlb
ret
int3
sub
push
xchg
add
cwtl
xchg
mov
repnz
addr16
into
and
stc
dec
and
mov
cs
sbb
push
and
fwait
in
mov
lret
fstpt
je
cwtl
and
aas
ret
out
push
std
xor
ret
dec
mov
xor
mov
inc
pusha
dec
xor
das
add
adc
das
inc
sbb
outsb
shrb
out
arpl
jae
out
add
lret
int
cmp
sub
jl
repz
xor
mov
cwtl
mov
rcr
adc
push
pop
xchg
mov
shlb
jne
lds
push
aaa
and
push
in
lcall
leave
int3
pusha
pop
mov
dec
sarb
decl
scas
push
int3
loop
insl
and
and
lret
jmp
add
mov
iret
mov
daa
stc
jbe
sbb
xchg
or
mov
dec
cwtl
jge
rcrb
adc
mov
int
add
sbb
mov
fisubrs
jo
mov
cld
dec
lea
lcall
xchg
pop
jae
std
sub
add
in
mov
inc
lret
ret
aad
andl
cmpsb
sar
rcrl
stos
sub
out
repz
test
and
lea
and
fs
pop
adc
cld
or
or
ljmp
loop
clc
ljmp
shlb
xor
aas
cmp
enter
mov
mov
push
lret
sub
mov
mov
test
out
idivb
cmp
into
bound
iret
mov
dec
xor
shlb
inc
lret
dec
adc
xchg
mov
xchg
popf
or
lea
repnz
mov
mov
cmp
mov
mov
jnp
push
xorb
adc
inc
sub
jge
into
sub
iret
fildl
std
out
cld
imul
incl
mov
mov
jne
dec
sub
mov
add
out
sub
in
sbb
ret
dec
mov
popf
movsb
daa
pop
aaa
int
repnz
mov
addb
ja
push
stos
inc
mov
clc
inc
inc
jo
insb
idivl
ret
xlat
and
jns
lea
or
loopne
xchg
xchg
loop
cmpsl
andl
inc
es
mov
mov
push
test
int3
test
mov
jns
outsb
mov
daa
cmp
decl
inc
cmc
pop
in
ja
add
je
rcrb
iret
sub
pop
bound
adc
dec
iret
loope
jb
push
int3
pop
hlt
lahf
test
sbb
sub
outsb
ficompl
aam
pop
jnp
xor
icebp
mov
aas
push
pusha
test
jns
mov
add
in
push
xor
int3
icebp
fldl
lahf
xor
fimuls
adc
dec
cmp
stos
fucomip
xchg
cwtl
fisubs
adc
lcall
cmp
or
xchg
add
add
mov
mov
mov
inc
sbb
mov
pop
sbb
xlat
push
xor
jmp
mov
leave
scas
test
movsb
fldt
rcll
mov
pusha
mov
repz
repnz
pop
xchg
and
mov
dec
rcrl
xchg
sti
mov
sbb
xchg
neg
out
cmpsl
xor
lret
pop
mov
setp
xlat
jne
add
and
sub
or
popa
ja
test
cwtl
icebp
or
enter
lret
enter
lret
bound
in
mov
popa
dec
lret
dec
mov
adc
leave
xchg
mov
fisubrs
cmp
lahf
sbbb
xchg
mov
stos
je
xor
cltd
pop
xor
or
outsb
jne
mov
mov
mov
cs
pop
or
push
push
push
aaa
stos
pop
stc
int
inc
addr16
adc
dec
sbb
in
fidivl
aam
movsb
pusha
jbe
xor
push
sbb
mov
xor
xor
or
popa
movsl
aaa
pop
stos
or
and
pushf
rclb
mulb
push
sub
jo
stos
mov
dec
sbb
jp
inc
mov
repnz
cmpsb
dec
add
adc
jne
loope
ret
xor
pop
xor
sub
push
ret
std
xchg
adc
out
and
mov
push
mov
fsubp
push
data16
ds
lods
add
sbb
aad
bound
bnd
sti
mov
xchg
or
mov
or
dec
lock
ljmp
xchg
ret
pop
cld
fs
inc
xchg
in
data16
adc
in
push
xchg
xchg
sbb
mov
jp
andb
add
and
pop
inc
pop
pop
inc
push
mov
dec
jnp
int3
jp
aas
mov
cmpsb
or
xchg
adc
out
cwtl
fwait
out
cli
std
lahf
stos
movsl
imul
loop
rorl
adc
jp
cmp
fwait
xor
lods
mov
mov
in
test
gs
dec
fwait
mov
push
loope
pusha
mov
add
mov
inc
ljmp
std
and
sub
mov
push
fcompl
push
xchg
stos
jmp
mov
enter
fsts
aas
pop
push
dec
lahf
sub
outsb
mov
imul
repz
and
out
dec
push
es
add
pushf
push
lds
jns
mov
adc
or
lret
inc
mov
and
mov
ret
adc
pop
push
mov
xor
push
sbb
hlt
pop
dec
mov
je
imul
sbb
add
inc
ret
psllw
dec
ljmp
mov
xchg
mov
push
je
cmc
ret
sbb
js
or
xor
cmp
add
rclb
call
sbb
xor
and
mov
repz
jle
jg
fiaddl
ss
and
add
dec
xor
lock
push
jbe
roll
leave
push
or
mov
mov
aam
mov
insl
xchg
and
jge
scas
aas
fs
xchg
in
je
clc
daa
sub
setle
jo
adc
push
push
jl
inc
int3
pop
cmpsl
mov
sbb
out
ja
stos
or
mov
aam
xorb
in
adc
mov
in
shr
jg
pop
or
sub
sbb
push
orl
rcl
int
inc
add
jp
mov
mov
repnz
or
aam
push
and
add
or
pop
pand
cmp
xchg
sub
mov
sub
dec
and
fmuls
ja
pop
addb
in
mov
cmp
faddl
and
and
or
fildl
mov
dec
inc
test
loopne
sub
std
cmp
je
test
loopne
faddl
imul
ds
es
lods
dec
out
out
sub
call
pop
dec
negl
pop
adc
outsb
pop
mul
ss
jo
in
mov
jp
push
aam
xlat
sbb
jmp
fs
pop
ja
movsl
jmp
jbe
pop
stos
sbb
mov
stc
inc
imul
dec
lret
add
fcomps
clc
fisubs
out
fsub
and
cmc
aaa
outsl
push
stos
xor
iret
push
add
and
inc
sbb
add
adc
std
scas
inc
or
lock
repz
and
mov
int
mov
icebp
out
popa
adc
xor
sub
push
lret
popf
pop
add
push
inc
pop
cmpl
push
movsl
mov
psubsb
sbbl
jns
mov
xor
cmpsb
out
pop
xchg
xchg
imul
inc
enter
nop
jle
shll
es
lea
dec
push
movsl
mov
aam
dec
pushf
mov
push
test
lret
pop
xlat
bnd
jno
mov
idivl
pop
js
pop
scas
push
movsb
pop
cmp
sub
pop
dec
pushf
cmp
mov
fwait
outsb
and
xlat
scas
mov
cs
test
lds
jg
jl
mov
rorl
outsl
xchg
inc
rol
mov
ss
jl
je
fcomps
fisubs
dec
rclb
aaa
lds
lahf
jmp
cmp
adc
sbb
push
adc
and
xor
pop
int3
mov
adc
xchg
cwtl
arpl
xor
inc
addr16
rclb
pop
rcrl
sub
jecxz
or
adc
repz
lret
and
xchg
push
pushf
cmp
fwait
push
lret
mov
push
jmp
and
fmuls
sbb
jae
adc
lcall
push
je
lret
js
add
mov
cmp
mov
xchg
and
or
not
cmp
lahf
adc
ljmp
push
dec
fcos
out
arpl
cmpsl
outsl
inc
pop
pop
lods
pop
std
cmp
jl
ja
and
mov
cmp
test
sahf
mov
dec
jge
call
and
xor
push
les
cld
stos
in
inc
xor
cmp
xor
pop
movsl
sub
push
xor
sub
push
js
pushf
out
mov
dec
fdivp
int3
xchg
aam
jbe
xchg
hlt
cltd
inc
fmuls
dec
imul
xlat
dec
adc
adc
jns
push
sbb
xor
es
mov
out
loop
clc
jo
loop
inc
call
xchg
mov
dec
hlt
test
andb
ljmp
mov
enter
push
in
mov
mov
pop
sub
jb
dec
lods
push
cmp
or
xor
setle
cs
mov
bound
adc
jg
or
cmp
push
cli
stc
cmp
mov
sbb
out
iret
sbb
shlb
dec
inc
xchg
pusha
rclb
pop
lock
jne
jnp
sub
inc
hlt
xchg
icebp
fdivrl
pop
mov
or
xchg
inc
into
pushw
mov
mov
jno,pn
push
arpl
ljmp
rcr
jmp
mov
fcomi
idivb
xor
into
or
lret
aam
sbb
jge
cmp
dec
cmpl
fbld
movsl
cmpsb
dec
adc
stos
lea
sbb
pushl
lods
xchg
ret
test
mov
cmpsl
adc
adc
mov
dec
bound
mov
arpl
push
push
mov
xor
mov
mov
inc
mov
ja
enter
cmp
sbb
push
cmp
rclb
stos
adc
cmp
das
loopne
es
adc
into
fisubrs
arpl
inc
mov
mov
cmp
push
dec
out
psubq
cld
cmp
popf
add
inc
pop
jg
or
or
out
xor
jb
dec
jmp
cli
mov
sbb
loopne
nop
xchg
xlat
push
loopne
test
fcoms
and
clc
or
loope
push
jmp
mov
sti
imul
pop
inc
pop
das
addb
xchg
in
xchg
test
int
shll
test
and
inc
adcl
sub
arpl
xor
sbb
pop
mov
in
popa
sbb
shll
inc
push
inc
pop
sub
test
push
dec
adc
mov
imul
jns
push
xchg
adc
xor
inc
push
push
sbb
mov
pop
lock
or
lahf
fwait
or
inc
ja
pop
mov
adc
insb
pop
mov
data16
shrl
mov
sbb
faddl
popf
dec
jne
jp
adc
divb
pop
test
push
xchg
loope
lret
mov
ds
incb
adc
dec
in
aaa
cmp
lret
ficompl
shlb
out
cmp
lds
test
imul
clc
sub
inc
orb
adc
dec
jp
adc
push
xlat
icebp
mov
mov
sti
pop
cmp
imul
push
out
add
xchg
dec
fisubs
enter
cmp
hlt
fs
pop
int
leave
xchg
mov
loope
dec
cmpsb
pop
pop
xchg
lds
adc
fcoml
bound
jae
in
jg
xchg
test
stos
jbe
icebp
addr16
pop
dec
or
mov
cmpsl
pop
addr16
jae
test
mov
pushf
in
add
stos
jmp
mov
loope
out
stc
lret
loope
and
and
cs
cmpsl
mov
mov
ret
xchg
mov
push
sti
inc
fs
lret
xchg
cltd
adc
xor
jp
jno
push
imul
jecxz
adc
push
jae
ret
stos
popf
clc
cwtl
daa
rorl
push
dec
in
inc
and
les
jl,pt
xor
jge
add
pop
frstpm(287
iret
and
inc
decl
cmpsb
cmp
scas
pop
cmp
mov
imul
in
cmp
add
mov
into
jle
pop
in
mov
xchg
mov
mov
sbb
mov
icebp
cmp
and
or
mov
popa
lea
lret
dec
xlat
out
sub
in
ss
test
dec
mov
pop
xor
dec
fs
sarb
test
jbe
fidivl
dec
popa
out
cmp
nop
imul
add
cmp
js
adc
fsubl
aad
mov
mov
mov
jmp
daa
mov
out
mov
mov
pop
jle
in
jle
cmp
roll
movsb
daa
mov
cli
insl
loope
mov
test
sbb
fmul
add
outsb
mov
mov
ficoml
pop
shlb
jae
pusha
jp
std
es
loope
lods
sbb
out
fbld
lret
sub
or
pop
arpl
cmp
dec
pop
pop
mov
int3
push
loop
mov
xchg
loope
jge
daa
jmp
xlat
rorl
add
xchg
push
mov
insb
insl
adc
shrl
pop
sub
lcall
movsb
jb
pop
rorb
mov
jae
mov
mov
jl
mov
lods
pop
dec
outsb
out
jae
test
cmc
pusha
lea
and
pop
in
pop
mov
jb
repz
divb
negb
xchg
fs
jbe
addl
push
cmp
sti
sahf
jle
sub
lock
xchg
int
push
sar
sub
rcll
cs
push
pop
outsl
fcoms
lcall
pop
in
sbb
lahf
movsb
fists
sahf
clc
xchg
into
negb
and
xor
xor
xor
leave
sbb
icebp
sbb
addr16
xchg
sarl
in
loope
jns
sahf
pop
mov
lods
jnp
roll
icebp
sbb
xor
daa
subl
fistps
out
in
fistl
int3
scas
xor
inc
cmpsb
mov
int3
sub
and
or
pop
std
idivl
dec
ljmp
fwait
fwait
push
fdivrl
scas
dec
popf
lcall
popa
adc
lcall
xchg
and
adc
cld
sbb
add
arpl
cwtl
lcall
jmp
pop
mov
outsl
aam
cmp
aad
jmp
lods
jb
das
and
xor
push
test
and
cmpsl
loop
mov
cmp
or
rcl
mov
push
mov
sbbb
andl
scas
leave
mov
in
jno
filds
xor
dec
adc
sub
xchg
push
jge
jl
ss
in
dec
xor
push
cmp
adcb
jl
mov
lahf
sbb
sub
mov
jo
dec
inc
mov
repz
lods
sub
mov
lret
and
sub
mov
xor
xlat
data16
or
xor
movlps
xchg
adc
jbe
fs
dec
cmpsb
push
sub
pop
sub
gs
mov
pop
add
testl
cld
adc
mov
gs
adc
int
and
aas
lods
add
mov
push
clc
push
jg
xchg
clc
arpl
jle
inc
lcall
mov
xchg
push
sub
int
loopne
mov
cmpsl
cli
add
lock
loope
jp
sbb
out
popa
sbb
aad
push
data16
outsb
shll
ret
inc
jns
fmulp
mov
shll
mov
scas
loopne
xor
xchg
xchg
dec
xorb
jne
je
add
ljmp
imul
dec
insl
add
test
pushf
xor
jp
cltd
orb
loop
add
gs
lret
out
dec
mov
iret
nop
out
mov
adc
out
mov
shll
mov
sub
ss
add
adc
cmp
scas
imul
and
jp
iret
and
mov
xlat
icebp
add
stos
fsubrs
stc
push
sbb
mov
fdivp
jmp
inc
sub
dec
in
test
mov
xor
cmp
ss
or
lret
repz
cmpsb
sub
arpl
lret
vpsubq
pop
js
arpl
xchg
fmul
stos
cmc
xchg
inc
stos
add
test
stos
aam
addl
out
sub
xorb
xchg
sbb
andb
int3
fwait
xor
mov
fmull
scas
sahf
flds
lea
scas
out
mov
or
cli
or
pop
mov
pop
push
jo
mov
cmp
cmp
repz
fs
insb
faddl
mov
xchg
dec
pop
outsl
xor
add
push
sbb
fistl
sti
push
inc
repnz
inc
xchg
jge
dec
jb
and
aaa
inc
push
xchg
andb
mov
ljmp
fsubl
xchg
int3
mov
adc
sbb
ja
and
xor
les
mov
sub
mov
jns
push
mov
lret
or
movsb
mov
lahf
xchg
and
je
inc
pusha
pop
mov
aad
or
lods
adc
outsl
shrb
mov
cwtl
jecxz
or
mov
xchg
popf
or
mov
jp
call
mov
sbb
mov
pop
cs
sahf
pushf
pushf
sub
xchg
cmpsb
int
push
repz
int3
sarb
add
sub
fcoms
stos
mov
lret
sub
jmp
pop
lret
xor
xchg
xchg
test
cltd
jmp
pop
shrb
mov
sbb
inc
xlat
lahf
add
pop
mov
dec
movsb
insb
push
push
lods
outsb
add
jbe
dec
cli
xchg
mov
test
jnp
and
inc
js
dec
sub
arpl
mov
ljmp
out
daa
add
jle
repnz
cmpsl
push
insl
sub
mov
push
repnz
jg
sbb
push
sub
fisubrl
dec
lock
adc
add
sub
jbe
and
lret
test
mov
sub
das
hlt
repnz
mov
inc
xchg
filds
lret
inc
lods
mov
fimull
out
cli
arpl
mov
cmpsb
into
mov
out
sbb
dec
jns
lcall
jmp
mov
adc
adc
adc
push
jmp
daa
mov
lcall
sbb
add
aad
sub
dec
and
imul
aaa
mov
cli
sbb
sbb
pop
int
out
ds
rcrl
arpl
jmp
popf
inc
sbb
xorl
jle
jmp
and
lods
mov
sub
pop
pushw
sbb
dec
imul
mov
add
adcb
data16
insb
cmp
cmp
pop
or
movsb
jns
xor
cltd
mov
out
repz
enter
lcall
repnz
pushf
add
push
or
mov
or
xchg
in
adc
push
mov
and
outsb
icebp
add
call
add
es
popf
xor
out
inc
enter
dec
cmp
inc
mov
push
push
cld
stos
xorb
cli
insb
pop
xlat
ds
in
jne
mov
mov
lods
xor
arpl
adc
mov
or
push
mov
lods
or
inc
sbb
sub
data16
mov
es
sub
mov
mov
sub
in
mov
loop
call
lret
lret
shl
rol
pop
sbb
adc
and
push
mov
jne
fidivs
ficoms
popa
fcompl
and
std
sbb
inc
xor
push
push
push
cli
mov
pop
push
mov
mov
fstl
mov
mov
add
scas
out
jl
and
insl
insb
sub
cmp
pop
pop
mov
or
insl
into
cmc
imul
mov
jge
aas
jb
lret
aas
inc
in
mov
mov
cmp
test
lds
pop
lods
call
lret
adc
pop
pushf
int
xchg
push
inc
or
push
ret
jne
lods
add
or
jge
mov
push
xchg
aaa
push
xlat
jae
adc
mov
sub
pushf
je
adc
es
and
xor
inc
fdivrs
mov
xchg
lds
cmpsb
sub
lcall
xchg
orl
out
inc
cld
xchg
sbb
inc
movsb
setne
or
push
mov
dec
imul
stc
xchg
mov
jns
push
cmp
shll
movsb
popa
add
mov
jbe
or
xor
add
test
cmc
jg
pop
jle
and
inc
shr
ds
xchg
rolb
push
jge
std
cmp
jl
cmp
xor
loope
leave
fwait
add
xchg
std
and
xlat
sub
out
sbb
popf
js
add
aam
mov
sbb
jl
mov
xor
cwtl
adc
dec
dec
pop
mov
imul
add
lods
out
mov
sbb
xchg
mov
cmp
dec
sahf
xchg
or
push
ret
add
jle
xchg
cmp
or
mov
jns
cmc
test
loopne,pn
das
pop
pop
lret
pop
popf
pop
pop
fwait
mov
mov
push
fisubrs
in
add
dec
cmp
sahf
push
mov
movsb
adc
int
mov
xor
les
dec
mov
test
std
adc
in
outsl
and
or
fisubrs
cmc
dec
repz
mov
push
ficompl
pop
cmp
jns
inc
mov
push
fisubs
sub
dec
mov
ja
mov
lret
sub
lock
jge
aad
in
repnz
lret
xor
push
and
push
ret
cli
es
inc
not
xor
enter
std
or
dec
and
clc
dec
sahf
lea
jecxz
daa
xor
jae
in
jbe
pop
sarb
movsb
push
ss
aas
xchg
and
adc
pop
jg
rcrl
inc
and
imul
push
fdivrs
pop
mov
push
mov
xchg
clc
ljmp
fwait
jb
out
jne
stc
push
movsb
lods
mov
cli
push
rorl
fs
popa
insl
xlat
movsb
sbb
dec
cmp
loope
and
stos
pop
mov
mov
popa
loopne
add
daa
rep
repz
mov
xchg
jns
mov
xchg
push
xchg
cmp
repnz
xchg
les
lods
pop
push
bound
stc
mov
ret
cmp
sub
ret
lahf
bound
cli
imul
mov
adc
dec
mov
or
das
in
lcall
jl
nop
stos
pop
mov
mov
push
data16
lods
and
arpl
popa
push
in
cld
adc
inc
sub
inc
mov
scas
imul
dec
sub
jnp
faddl
clc
inc
nop
xchg
sti
inc
push
pushf
cwtl
add
cmp
jno
dec
loopne
cmp
add
fnstsw
push
inc
adc
cli
stos
addr16
push
and
dec
jecxz
mov
push
push
adc
inc
movsb
lret
out
icebp
je
lods
cmp
icebp
pushf
ret
repz
adc
out
fisubrs
xor
jecxz
mov
add
cmpsl
cltd
mov
ficompl
ret
enter
lret
push
jl
pop
jecxz
and
add
inc
xor
add
sub
pop
jecxz
js
cmpsb
iret
decl
push
ds
push
dec
jae
pop
dec
nop
push
mov
push
int
unpcklps
and
jmp
dec
or
aam
mov
rorb
mov
push
jae
pop
imull
dec
rolb
lea
mov
movsl
add
out
fistpl
cmp
mov
mov
pop
sbb
dec
call
ret
cli
push
xchg
inc
pop
xchg
sub
inc
mov
testl
lcall
loop
or
iret
dec
jno
push
or
in
cmp
xorl
scas
inc
insb
out
xchg
aad
stc
sub
xchg
and
or
and
sub
pop
mov
and
data16
pop
xor
mov
add
leave
inc
jns
int3
out
push
or
clc
lret
clc
loop
jae
dec
out
inc
and
stc
xchg
stos
push
pop
or
test
xchg
jg
and
aad
jns
dec
or
pop
faddl
lcall
cmp
mov
pop
inc
bound
cmp
lahf
sbb
fwait
daa
dec
xor
ret
adc
cmp
inc
jb
xchg
leave
sbbb
lret
mov
fcoml
pop
dec
mov
imul
mov
add
xor
and
mov
bound
fbld
rcr
insb
or
mov
pop
inc
pop
push
arpl
add
call
jnp
or
ljmp
ja
lods
mov
mov
or
imul
js
cwtl
mov
sbb
mov
xchg
cli
or
mov
sbb
sub
pop
pop
push
sub
sub
push
outsl
int
popa
andl
sub
movsb
fnsave
test
outsl
or
jb
lret
pop
push
test
xchg
insb
xchg
cmp
xchg
jmp
leave
movmskps
and
inc
in
adc
adc
aam
or
in
test
pop
test
jno
call
jno
fiaddl
inc
mov
jbe
insl
pop
bound
sub
lret
cmpl
adcb
add
sbb
or
xchg
xchg
adcb
inc
pop
sahf
mov
adc
dec
xor
jmp
lcall
pop
js
les
pop
pop
or
js
xor
lods
cmp
fwait
push
test
loopne
es
mov
xlat
sub
and
push
xor
mov
arpl
xor
and
test
ds
imul
repnz
jne
iret
mov
inc
int
lahf
sbb
neg
adc
inc
cmpb
movsl
mov
lds
sbb
add
fnstcw
in
dec
ret
inc
subb
mov
fs
mov
xchg
rorb
out
loop
imul
xchg
xchg
inc
pop
xor
push
inc
shl
jecxz
std
jle
pop
xchg
pushf
mov
xor
popa
xchg
cmp
mov
inc
push
lods
and
insl
sar
std
je
outsb
pop
data16
lcall
push
mov
and
mov
or
lcall
mov
sub
pop
jl
cmp
cmpsb
adcl
fwait
in
xchg
jle
push
sub
xor
xlat
cli
rcll
test
pop
lret
test
pop
adc
mov
mov
mov
push
sub
pop
test
out
movlps
mov
data16
xchg
insl
fisubl
jb
ja
out
mov
mov
xor
pushf
dec
out
push
xchg
test
sti
mov
out
inc
das
inc
fwait
push
scas
bound
lock
pop
xor
xor
pop
sahf
pop
xchg
mov
jg
push
jge
popa
adc
sti
add
repnz
add
movsb
dec
mov
xor
xchg
push
cmp
sbb
fwait
xchg
into
int3
je
addb
push
jns
mov
lds
lock
xchg
cld
push
stos
rcll
cltd
xor
in
dec
call
les
or
pushf
sbb
mov
xlat
sarb
cmp
mov
mov
gs
iret
ss
pushf
lcall
pushf
addr16
xor
xlat
add
sbb
xor
out
sbb
mov
pop
cmp
sub
mov
gs
cmpl
or
movsl
fisttps
out
mov
dec
lds
lea
nop
pop
fucomi
pop
rclb
pop
aaa
and
mov
mov
xor
sbb
rcrb
pop
je
ret
add
into
mov
loope
lock
mov
adc
cwtl
xor
dec
stos
lea
unpckhps
dec
mov
stos
in
lcall
fldt
test
inc
out
adc
inc
adcb
aas
xor
push
mull
test
xor
jnp
rcl
pop
dec
es
testb
cmp
xchg
pop
lea
loopne
xchg
mov
decb
push
fwait
jne
cs
mov
inc
imul
or
mov
adc
dec
sbb
mov
xor
repz
cmp
aas
shrl
cmpsl
or
xor
or
xor
sahf
and
gs
adc
cmpl
cmp
push
popa
add
inc
shrl
cmpsb
jae
push
xchg
adc
cmpb
lds
loope
test
push
pop
add
add
mov
lds
sbb
xchg
shrb
addr16
pop
shlb
leave
sahf
fistl
jo
jae
jmp
dec
dec
lret
cmp
repz
test
rorb
mov
pop
jp
test
or
inc
and
ss
pop
in
mov
xor
scas
mov
cmp
pop
add
decb
ljmp
rclb
pop
dec
inc
daa
dec
out
pop
sub
jbe
push
icebp
xor
xorb
and
enter
inc
push
sub
repnz
xor
mov
dec
cmovne
fld
xchg
mov
xchg
cmc
jae
fiaddl
and
loope
adc
cltd
clc
popf
mov
add
sub
add
push
sti
scas
xor
lods
clc
xchg
mov
jae
xchg
inc
jle
mov
sub
mov
adc
jmp
push
sbb
fmul
mov
aam
or
mov
sbb
addr16
and
je
dec
mov
and
add
adc
pushf
xlat
repz
push
mov
sti
sbb
or
inc
adc
test
sbbl
push
adc
stc
xchg
daa
testl
pop
pop
popw
adc
dec
pop
mov
mov
int3
js
data16
jle
push
inc
push
xchg
rclb
adc
mov
and
or
cmc
push
or
push
mov
out
mov
xchg
jmpw
int3
and
sbb
sbb
jmp
in
lock
add
nop
adc
jb
movsl
lock
div
arpl
sahf
imul
in
sub
jae
xchg
cwtl
daa
adc
jns
xchg
xchg
dec
mov
jge
add
inc
adc
jl
daa
stc
sti
mov
cmp
aas
data16
xchg
sub
ds
jns
jbe
cs
sub
ja
insb
inc
xchg
cmpsl
jp
imulb
out
repz
clc
out
sub
adc
sbb
jae
sbb
pop
movsb
xchg
les
add
pop
mov
cli
mov
add
lods
scas
lods
adc
test
mov
adc
cltd
shl
pop
dec
stos
push
adc
push
sbb
mov
cmp
aad
sub
or
and
adc
int3
out
push
hlt
fs
ret
and
xor
and
push
mov
push
test
mov
or
mov
sub
mov
pop
sbb
jl
or
cmpl
and
jle
and
mov
add
inc
mov
mov
pop
and
push
lock
jne
xor
xchg
gs
pushf
xchg
xchg
mov
popf
xlat
inc
or
aas
ret
cmpl
scas
aad
inc
cmp
loop
scas
add
ret
cmpb
push
loop
sub
push
outsl
mov
inc
jp
jae
fildll
sub
jb
idivb
sub
loopne
mov
or
test
aam
mov
int
cli
ss
xchg
add
inc
ds
pop
rol
fcmovnu
enter
xor
xorl
in
mov
scas
cmp
data16
nop
outsl
fiadds
mov
jne
sub
push
enter
adc
jb
out
xchg
mov
mov
sub
pop
lret
lret
sub
fwait
insb
shr
mov
pop
je
sbbb
fildl
lods
popa
stos
fwait
in
inc
mov
loop
dec
jle
xor
push
dec
in
popf
popf
jle
lret
mov
mov
ja
pop
adc
lods
cwtl
fs
dec
or
sbb
movsb
cmp
cmc
lods
mov
cmp
push
mull
mov
mov
sub
mov
cmc
jne
jge
lea
and
loop
outsl
mov
inc
adc
mov
scas
test
je
pop
scas
inc
mov
fwait
lea
inc
cmp
ljmp
inc
insb
data16
cwtl
repz
mov
outsl
dec
dec
arpl
xchg
iret
xchg
xor
jle
outsl
enter
mov
ret
lods
fsubrs
sub
rol
fisubrs
inc
sub
xor
adc
sbb
xchg
daa
out
and
nop
leave
mov
mov
mov
or
and
movsb
ds
xor
push
sub
out
das
rolb
mov
dec
gs
daa
cmp
sbb
xchg
cmc
mov
leave
gs
dec
out
pop
mov
aam
hlt
out
push
or
push
jns
pop
adc
adc
inc
jle
mov
jb
mov
adc
ret
test
xchg
ss
mov
test
ret
dec
bound
or
pop
aaa
adc
sub
stos
clc
aam
or
adc
loope
or
arpl
test
js
fldt
push
fldenv
pop
pop
nop
xor
sbb
mov
jae
push
xor
fldl
inc
inc
jo
mov
and
or
dec
sbb
insl
repz
sub
push
mov
gs
scas
dec
arpl
sbb
mov
pop
push
pop
mov
cmp
sbb
mov
and
xchg
mov
shll
inc
xor
cmp
pop
adc
mov
rcll
mov
mov
test
mov
pop
xor
or
push
mov
mov
jae
imul
nop
arpl
cmc
xchg
adc
nop
arpl
lds
addr16
dec
icebp
push
int
shll
insb
jno
stos
xchg
ret
jb
pop
rcrb
outsb
out
cmp
push
xchg
add
decb
mov
lcall
fs
mov
clc
out
fisubrl
mov
insb
stc
mov
dec
mov
dec
lea
mov
loopne
cmp
iret
jnp
and
outsb
ja
loopne
rclb
pop
loope
cli
cs
push
inc
mov
out
in
add
xorl
push
or
inc
adc
mov
enter
cmc
ds
std
pop
adc
ja
inc
sbb
mov
leave
xchg
sbb
sahf
fsubrl
in
pushf
loopne
push
xor
dec
dec
push
idiv
and
enter
sbb
stos
push
lock
xor
xor
sub
xor
cs
loop
adc
aaa
mov
scas
ds
cmp
xor
add
pop
aad
rcrb
popf
sbbb
push
out
fstl
or
mov
push
pop
jge
stc
inc
add
loopne
xlat
dec
pusha
not
push
and
iret
cmp
mov
movsl
push
pop
cmpsb
xchg
adc
cwtl
fcompl
mull
cltd
push
icebp
sub
addr16
jl
ret
jns
loopne
xchg
rcr
pop
or
test
xchg
scas
lahf
sahf
das
pop
jae
inc
adc
ja
dec
inc
fld
add
sahf
or
push
push
loop
dec
jl
fadds
insb
hlt
insl
cmpb
xor
xchg
xchg
dec
rcll
ds
ja
out
fists
les
out
mov
test
jno
ja
cmp
push
xor
inc
sub
dec
dec
mov
das
mov
fisubs
mov
call
push
dec
pop
jns
in
add
xchg
js
sub
mov
stos
cmp
inc
adc
repnz
test
out
pop
enter
out
iret
hlt
dec
mov
dec
ret
xchg
xchg
lds
sbb
pop
inc
mov
cmp
push
popf
xchg
or
pop
dec
adc
jb
rcrb
mov
inc
jns
add
ja
mov
adc
idivb
add
das
pop
outsb
mov
movsl
inc
push
rorb
jecxz
sub
dec
and
jl
and
cmp
insl
lds
mov
mov
arpl
das
movsb
gs
hlt
inc
bnd
sub
fwait
xor
lcall
in
test
mov
cmp
testl
adc
jg
or
push
loop
inc
adc
and
ffreep
sbb
fwait
jne
insb
movsb
nop
call
jo
imul
orb
xor
dec
push
cmp
lds
push
test
or
mov
pop
inc
lahf
push
std
repz
xchg
xchg
push
or
addr16
aaa
ret
adc
scas
shll
pop
mov
fcomi
jne
mov
pop
xor
cmp
sahf
repnz
mov
jmp
jo
xchg
insl
repz
lcall
outsb
orl
fistpll
cli
les
mov
fldt
mov
sub
push
pop
adcb
fists
test
and
loope
imul
popf
rorl
scas
mov
pusha
pop
add
scas
leave
popa
pop
and
push
sbb
fcoml
inc
jge
and
movsb
xchg
pop
outsb
pop
xchg
push
sub
int3
and
jmp
aas
mov
pop
dec
sub
lds
inc
int
lds
cmp
dec
and
fisubl
or
xchg
jno
int
lods
ds
xchg
fmuls
out
xchg
in
rol
mov
sub
jae
pop
jmp
xor
inc
cmp
jnp
mov
mov
and
fnstcw
xor
je
data16
loope
mov
es
subl
das
push
loop
int3
xchg
mov
test
mov
xor
cmp
or
push
ficompl
jecxz
cmp
lea
cli
shl
mov
sbb
addb
aas
fcompl
push
decl
fstpt
lds
cmc
testb
test
add
popa
hlt
mov
outsl
dec
dec
mov
xor
test
mov
mov
dec
jmp
lods
sahf
int3
mov
inc
icebp
jle
repz
jmp
push
jmp
fstl
or
xchg
daa
jmp
push
jnp
adc
ja
cld
clc
gs
clc
inc
or
or
or
das
cmovo
mov
add
cmpsb
fldenv
pop
fstpl
mov
int
xchg
inc
pop
dec
xchg
fstpt
inc
loop
insl
or
mov
int3
enter
testb
outsl
pop
pusha
adcl
add
sahf
lret
jbe
rorl
imul
cmp
mov
adc
xchg
lods
and
and
xchg
int
push
jnp
inc
out
mov
out
in
ljmp
pop
jne
pop
shr
cltd
out
cmp
dec
daa
fs
jle
icebp
fmuls
lahf
lret
add
dec
rcll
scas
mov
daa
jnp
xor
push
mov
sbb
jne
sbb
lret
adcb
mov
jle
xor
pop
cmp
test
jge
ret
leave
mov
mov
out
fiaddl
jge
mov
adc
inc
mov
jge
sti
out
lret
into
int3
jge
jp
test
jge
imul
adcb
or
imulb
movsl
in
add
dec
mov
add
and
addr16
inc
fwait
lds
jecxz
inc
jecxz
into
out
dec
fcompp
cltd
imul
pop
mov
pop
sub
out
xor
add
imul
popf
push
mov
sahf
icebp
and
cld
xchg
xchg
shll
outsb
sub
push
stc
inc
nop
insl
add
dec
aaa
test
pop
and
xchg
mov
inc
mov
aad
iret
fsubrs
into
jecxz
mov
mov
sbb
mov
push
data16
out
mov
sub
xchg
mov
xchg
mov
pop
fsubl
cmpsl
addl
lock
add
jmp
nop
out
out
shrb
sbb
push
xor
bound
jbe
pop
repnz
sahf
rol
leave
cwtl
nop
inc
sbb
inc
jo
enter
pop
into
lcall
push
popa
test
stos
sbb
adc
pop
dec
idiv
inc
xchg
lret
mov
insb
js
sahf
repz
xlat
lock
adc
mov
cltd
cmp
loope
jno
fcomps
fwait
or
imul
hlt
test
mov
jb
push
in
xchg
cmp
test
xchg
shll
outsl
int
sti
xchg
out
push
int
out
xchg
incb
xor
xchg
adcb
push
xchg
jo
imul
inc
lock
mov
push
push
movsl
jo
scas
pop
jnp
pop
scas
cmpsl
js
cmp
pop
pop
adc
and
int3
out
xlat
iret
jl
clc
push
popa
scas
sarl
leave
xchg
clc
icebp
cs
sbb
xor
pop
push
xchg
sbbb
jmp
in
xchg
push
fldl
jae
and
or
scas
and
test
jne
icebp
pop
mov
inc
lcall
bound
cmp
outsb
and
jno
mov
mov
imul
lods
fimull
push
xchg
lret
xchg
or
insl
sar
aam
mov
pop
ljmp
add
cmp
push
add
mov
and
sub
ficoml
out
adc
lcall
inc
jno
lcall
xor
push
es
mov
mov
mov
js
or
inc
lcall
in
and
shl
inc
in
jb
cmp
je
insb
mov
rol
subb
mov
test
loope
in
inc
mov
mov
add
js
hlt
imul
jp
inc
sbb
iret
mov
fiadds
bound
adc
pop
nop
jns
mov
loope
lahf
sbb
jg
cmpsb
pop
aas
sbb
add
add
add
je
lds
cltd
and
mov
and
call
jl
mov
sub
adc
ja
shr
cmp
push
movsl
or
out
sbb
add
xchg
dec
addr16
into
inc
adc
jmp
adc
test
bound
mov
aam
sbb
xchg
mov
sub
bnd
xor
int
sbb
push
je
pop
add
xchg
pop
push
and
ret
xor
mov
inc
les
testl
jo
push
je
or
loope
jle
out
or
xchg
cmp
mov
stos
test
jl
subl
jg
notb
pop
enter
mov
into
xor
js
cli
repz
sbb
xchg
sub
push
inc
daa
dec
outsb
adc
xor
fmull
into
movsl
test
iret
popf
mov
int3
dec
sbb
aas
or
cld
addr16
add
insl
test
iret
pop
push
jp
mov
pop
or
sbb
cmp
adc
mov
outsb
outsb
and
clc
adc
jmp
mull
out
inc
xchg
mov
jbe
int
cwtl
dec
mov
test
int3
inc
adc
push
jmp
mul
rcrb
add
jmp
mov
scas
mov
cmp
cmp
mov
test
pop
pop
jle
test
dec
jae
jns
movsb
in
sahf
jns
mov
fcmove
int3
lods
or
pop
adc
xchg
dec
or
jl
addr16
jnp,pt
test
fcmovu
dec
stos
test
push
adc
ss
adc
int3
mov
leave
stos
das
in
pop
lds
add
rorl
add
and
orb
cmp
sub
add
popa
testl
and
xchg
sbb
dec
insb
xor
dec
mov
movb
ljmp
mov
sbb
xor
ds
inc
mov
jp
adc
insb
mov
or
cmp
leave
cmp
rorl
add
xor
out
aam
cmp
add
loope
rol
or
stos
icebp
mov
or
out
push
sub
cmp
mov
movsb
push
jb
in
jmp
pop
mov
andl
loop
xor
sbb
mov
aas
lcall
pop
outsl
push
shlb
inc
pop
repz
xchg
mov
test
push
jmp
push
adc
or
nop
cmovnp
scas
dec
xchg
movsb
pop
sbb
outsl
popf
pushl
ret
adcb
lock
andb
adc
push
out
push
pop
sbb
popa
sbb
aad
jnp
pop
in
sbb
mov
push
test
pop
jg
loopne
push
inc
jmp
sub
lds
mov
stos
xchg
mov
out
add
pop
nop
xchg
popf
aaa
fcmovnu
lea
dec
out
lock
cwtl
cmp
mov
fs
cmp
cmp
mov
adcl
inc
mov
pusha
ds
mov
pop
adc
mov
out
pop
or
shlb
push
push
mov
scas
ret
mov
adc
push
mov
cli
dec
add
stos
addr16
ss
adc
or
sbb
cmp
fcomip
nop
das
in
dec
loop
sbb
mov
or
jns
inc
loope
loope
ds
cmp
cmp
inc
pop
out
jae
test
repz
xor
adc
push
pushf
repz
movsl
mov
jno
cmpsb
or
cmp
add
daa
arpl
dec
aad
pop
mov
xchg
andb
in
inc
fs
test
out
xorl
sti
inc
movsl
loopne
enter
dec
push
js
fadds
ret
xor
repz
test
cmpsb
icebp
dec
pshufw
mov
stos
inc
push
pop
mov
mov
xor
call
lods
lds
pushf
lahf
push
test
fnsave
xchg
aad
and
shufps
xor
fnstsw
mov
add
cs
jbe
iret
stc
or
cmp
and
push
jb
xchg
rol
sub
leave
push
push
dec
gs
push
xor
add
xor
cmpsb
and
pop
mov
cltd
mov
push
push
push
addr16
mov
daa
mov
das
xor
pushf
call
ss
mov
lea
lret
mov
rcrl
mov
and
scas
lahf
push
cli
xchg
jge
ret
int3
fld
rcrl
and
stc
movb
push
push
jno
pop
loope
dec
sub
push
out
cmpsb
xchg
call
arpl
inc
sahf
movsl
subb
test
lahf
js
scas
push
add
addr16
stos
jg
push
jns
mov
lcall
sbb
shlb
jns
lds
jno
mov
ficoms
mov
lds
jns
adc
dec
xor
inc
stc
notb
movsl
insb
sbb
mov
or
sbb
dec
mov
movsb
sbb
sbb
rcrb
sub
sahf
jmp
mov
cmp
lahf
jg,pt
mov
push
mov
sub
push
mov
out
lret
and
push
inc
in
call
xchg
mov
andb
push
cmp
orl
out
add
jno
out
dec
dec
loopne
out
clc
and
or
jle
sbb
imul
fstp
mov
lret
jae
jns
cmpsb
sub
pusha
negl
outsl
lret
es
jo
fs
adc
pop
pop
scas
imul
sub
cs
int
xchg
cmp
push
cmp
repnz
imul
mov
inc
mov
mov
out
adc
notb
push
add
in
pop
sub
cmpl
clc
and
in
xor
push
leave
popa
mov
mov
scas
dec
dec
fldcw
jp
mov
cmc
dec
frstor
push
xor
dec
inc
cs
test
jno
roll
cs
adc
lcall
add
mov
test
int
sub
add
cmp
mov
jle
push
pop
jnp
imul
inc
roll
sbb
dec
dec
cmpsb
and
popl
stc
or
jno
test
mov
lret
nop
insl
and
pop
orb
aaa
and
ds
insl
jl
mov
dec
rorl
pop
pop
loop
loop
cmpsl
xor
test
scas
or
int3
xchg
fistl
push
nop
push
dec
jl
adc
sub
dec
cs
xchg
and
scas
loop
pop
cmpsl
sub
mov
sub
mov
incb
sbb
lahf
jo
insl
fwait
push
mov
into
mov
ja
dec
jp
pusha
fimull
shll
pop
popa
shr
out
inc
ret
cli
adcl
mov
and
andb
cmp
adcl
mov
sbb
ljmp
mov
in
mov
lahf
dec
jecxz
movsl
jne
dec
cmp
adc
sarb
or
fcomp
sub
ret
faddl
push
pusha
xchg
in
movsl
scas
pop
mov
or
xor
xorb
hlt
lds
xchg
fildl
add
jl
push
cs
jmp
fisttpll
or
mov
pop
adc
popa
jg
in
adc
adc
and
mov
mov
jo
mov
xor
cmp
cmp
adc
js
pushf
sbb
xchg
xchg
adcl
fs
pop
mov
sbb
aaa
sbb
je
adc
pop
aad
int3
outsb
int
gs
in
repnz
cmp
sbb
repnz
sbb
aad
add
pop
lret
jle
mov
gs
popf
test
jne
mov
imul
add
ljmp
mov
dec
out
xor
popf
dec
xchg
iret
int
movl
out
mov
push
cld
mov
push
cs
cmc
cli
mov
inc
push
sub
out
pop
fidivrs
mov
sub
push
test
scas
loopne
xchg
hlt
sub
faddl
dec
mov
outsl
add
fbstp
push
je
outsl
or
add
jae
je
test
mov
test
xor
mov
adc
cmp
enter
sbb
sbb
insb
mov
mov
add
xor
int3
cld
jno
scas
xchg
pop
xor
adc
imul
adc
imul
lock
mov
mov
dec
ds
cmp
sbb
fs
int
mov
out
loope
mov
nop
cmp
sbb
sub
aam
out
shlb
je
push
add
enter
or
jecxz
movb
fsubrs
pop
cmc
sub
adcb
lds
aad
lret
je
inc
je
xor
cmp
or
fdiv
pop
xor
jae
pop
cli
inc
ljmp
inc
xchg
fs
clc
push
sbb
imul
pop
xchg
mov
out
or
jo
enter
fsubl
es
cltd
lahf
jb
dec
cmpsl
shrl
js
sub
imul
fxch
sub
mov
out
in
lock
push
and
leave
cli
jb
push
call
mov
mov
cmpsb
dec
rcrb
push
arpl
cmp
jp
and
inc
push
repz
adcb
shrl
dec
or
inc
es
push
loopne
inc
push
cltd
rorb
pop
and
pusha
enter
sbb
in
arpl
nop
lds
add
add
add
in
xlat
daa
jecxz
cmp
fmul
sub
jmp
cmp
push
dec
orb
rcr
and
mov
bswap
stos
xchg
xchg
adc
sub
cmp
fisubrl
int
shrl
ret
jbe
iret
ss
or
icebp
ljmp
out
outsb
or
test
pop
negl
sbbb
inc
and
pop
sub
stc
xor
mov
fstl
mov
jle
sbb
jb
stos
mov
in
gs
into
scas
xlat
cmp
hlt
adc
stos
sarl
mov
push
lds
jbe
insl
jne
in
mov
jp
inc
push
in
nop
pop
mov
aas
loopne
fld
fmul
add
ret
push
inc
dec
mov
cmpsl
push
nop
scas
xchg
cmp
inc
loop
jns
push
adc
cwtl
mov
leave
pushf
clc
add
xchg
mov
icebp
and
imul
jo
scas
xor
xchg
out
push
adc
stos
cmp
jno
daa
test
sarb
pop
stos
mov
popl
push
cld
cli
xor
push
cltd
lret
fistps
push
in
xlat
xor
cmp
xchg
and
push
inc
aad
adc
jnp
dec
dec
fdivrs
xor
cmp
xchg
dec
ret
and
iret
or
shll
jnp
mov
sbb
push
jg
leave
ss
push
and
and
in
mov
xchg
pop
neg
rclb
mov
fcoms
stos
inc
aam
jg
outsl
les
jmp
pop
out
inc
dec
pop
cmp
xchg
dec
movsb
jge
repnz
test
pop
incl
fnstcw
pushw
xchg
xchg
daa
je
scas
ljmp
mov
xchg
std
cmc
int
pop
ss
jp
pop
add
cmc
decb
or
dec
pusha
arpl
push
sbb
shr
xor
leave
and
xor
and
stc
sbb
ljmp
int
mov
jne
pop
mov
lcall
ss
movsb
sahf
mov
sar
inc
dec
insb
aad
sbb
pop
negl
xlat
mov
lods
fldl
jp
mov
shl
cmp
push
outsl
lods
mov
in
dec
cmp
outsb
pusha
mov
flds
and
sahf
fs
and
jbe
pop
sbb
pop
inc
dec
xchg
fnstenv
jge
adc
idivl
shrl
fldcw
rcrl
pop
cmp
mov
lods
vdivps
add
sbb
div
test
test
fcoml
push
dec
or
push
inc
out
adc
pop
jge
pop
mov
fildll
popa
fistpl
fildl
pop
push
mov
stc
jnp
fs
call
test
hlt
fidivrl
addr16
imul
test
and
lret
clc
dec
or
iret
add
mov
data16
ds
cmp
pop
xchg
xchg
sbb
and
lds
in
aas
mov
aam
insb
or
ret
mov
std
lahf
jecxz
test
cs
bound
cmp
fnstenv
pop
or
fsubrs
scas
jge
dec
insb
aad
test
mov
js
mov
fwait
jo
sbb
push
in
int3
xchg
divl
in
mov
jae
rol
es
movsl
sbb
push
adcl
gs
xor
mov
pop
push
inc
insl
aam
je
xchg
and
jb
pop
sub
in
dec
jecxz
loopne
xor
push
mov
mov
hlt
inc
cli
adc
push
mov
jecxz
adc
lock
xchg
mov
shll
and
push
inc
icebp
stos
rcll
frstor
das
ljmp
or
inc
xchg
jo
cmp
fs
cli
sarb
inc
fnstcw
push
lods
adc
cmp
fdivr
jb
or
data16
push
mov
pop
test
enter
lret
jl
xchg
ljmp
xchg
ficompl
repnz
push
pop
cmp
ja
push
push
sub
sbb
mov
mov
sub
dec
jne
inc
and
insl
mov
fcoms
cmp
jnp
orb
cmpsl
adc
rcll
subl
mov
push
pop
pop
cmp
mov
shrl
inc
mov
mov
xor
into
push
jb
mov
pop
stos
mov
dec
popf
mov
movsb
leave
decb
xchg
aad
pop
not
data16
dec
cwtl
rorl
outsl
movsl
out
mov
testb
push
lcall
and
sbb
dec
out
es
add
in
in
cli
es
aad
lcall
test
lods
cli
cs
add
jns
fwait
out
xchg
dec
dec
jns
sbb
mov
test
test
iret
bound
fadds
push
xchg
or
lock
fnstsw
mov
cwtl
mov
xor
xchg
subb
xchg
js
sti
je
pop
xlat
lods
filds
xlat
mov
les
in
sub
das
rcrl
movsl
cmp
jns
iret
push
les
sub
mov
jbe
push
mov
xchg
lods
or
pop
adc
cmpsb
mov
xchg
dec
rclb
fdecstp
test
mov
movsl
mov
xor
push
push
loop
and
clc
aas
into
jp
movsl
ss
dec
pop
rclb
cmpsl
xchg
add
in
mov
aam
sub
das
mov
sub
pop
addr16
cmp
lret
leave
iret
xor
pop
inc
mov
cmp
inc
daa
xlat
lock
adc
jns
jle
ja
jp
jl
mov
popf
inc
or
stos
or
mov
fldenv
in
sbb
outsl
xor
pop
jmp
bound
and
pop
add
mov
sub
mov
nop
out
icebp
xlat
or
xchg
adc
xor
sbb
push
mov
aas
mov
xor
mov
mov
cmp
mov
pop
xor
js
pushf
out
lret
repz
push
std
faddl
inc
mov
rcrb
adc
mov
xor
je,pn
jae
je
stc
cmpsb
fidivrs
ret
jnp
mov
fcmovnbe
pusha
std
pop
notb
test
aam
cs
or
sub
enter
xchg
jp
mov
ds
sbb
push
xor
setle
or
mov
movl
dec
adc
push
mov
add
add
mov
inc
lret
sbb
negb
in
add
mov
mov
cmp
jne
jl
ljmp
pop
sub
jp
sahf
inc
mov
lcall
dec
adc
arpl
or
add
sbb
or
mov
lcall
iret
xor
fisubs
mov
insl
fistpll
mov
ja
and
and
fucom
adc
cmp
daa
insb
lcall
push
bound
test
rcll
enter
cmp
pusha
shl
shlb
dec
pushf
mov
out
into
add
and
inc
or
ret
jbe
lret
add
lea
rolb
cmpsl
adc
adc
gs
lea
loop
shll
sbb
stos
mov
sub
shl
pop
dec
nop
adc
jmp
mov
mov
sahf
dec
cmp
push
pop
jecxz
gs
add
loope
sbb
sbb
in
mov
or
inc
iret
insb
xchg
clc
sbb
pop
aad
mov
loopne
pusha
imul
ror
rorl
shr
orb
xor
pop
sbb
aaa
jae
outsl
or
sub
dec
movsl
int
test
cmp
jo
aaa
roll
lret
adc
pop
movsb
ret
xchg
int3
orl
rcr
cs
and
add
shll
insb
mov
push
sbb
sbb
outsl
dec
cs
sbbl
sub
cs
mov
fcomps
popa
adc
bound
shlb
lcall
ret
cli
scas
call
xchg
push
mov
dec
and
jmp
jbe
cld
sub
test
mov
test
loop
cmp
sub
fadd
push
sub
jno
popa
insl
aad
xchg
fstp
stc
adc
js
mov
nop
or
dec
out
std
cmc
ret
pop
push
dec
sub
loopne
dec
xchg
movsl
adc
ljmp
jb
mov
adc
sub
push
jne
aas
push
adc
fidivrl
and
aam
lods
insb
push
add
sub
leave
popf
stos
adc
roll
pop
ss
pop
pop
pop
jae
push
out
test
push
into
stos
ret
mov
das
popa
push
lods
xor
mov
add
aaa
ret
lcall
sbb
xor
jnp
imul
loopne
shlb
decb
lahf
xor
sub
cmp
xor
jne
sbb
push
xchg
push
dec
and
loopne
sbb
fdivs
push
lods
sub
call
leave
cs
cmpsl
stos
sbb
lds
pop
dec
xor
xor
movntps
repz
ds
pop
or
jbe
enter
fnstcw
and
into
aam
rcll
mov
cmpsb
shrb
inc
das
call
pop
in
das
out
mov
insb
dec
in
and
lret
push
adc
or
mov
jmp
cmp
in
out
sub
idivb
lods
push
fnstsw
rcrb
or
and
pop
mov
mov
add
xor
dec
bound
jge
pushf
js
daa
ret
push
push
out
xor
jle
rclb
in
mov
movsb
inc
sti
xor
adc
dec
stc
push
insb
mov
ja
xor
aas
jnp
arpl
lods
sbb
xor
xchg
jmp
fdivr
int
stos
jecxz
daa
sub
daa
pop
push
mov
loop
push
lahf
adc
jnp
push
emms
test
mov
xchg
sti
into
dec
pop
nop
hlt
jbe
mov
add
fimull
clc
test
loop
cwtl
jb
cs
loope
lods
mov
mov
in
push
rcr
rclb
lret
pop
push
addb
data16
mov
jae
mov
inc
push
lahf
push
push
loope
lds
outsl
fcomps
adcl
adc
mov
fcomi
decl
push
std
stc
xor
loop
sbb
sahf
and
push
jns
add
leave
jb
ss
jge
sbb
mov
jmp
cmp
mov
mov
xor
int
fdivrs
adc
adc
nop
jge
ss
addr16
xlat
sti
call
dec
pop
cmpsl
inc
sub
mov
sti
aam
lds
jae
jg
mov
cltd
pop
xor
into
push
mov
push
jmp
mov
ficoml
pusha
xchg
lods
dec
int
daa
inc
inc
repz
push
fsubr
dec
cwtl
sbb
push
movsl
cwtl
arpl
bound
adc
mov
loopne
cmpsb
mov
push
sbb
adc
xor
in
cmpsb
push
lea
push
cmpb
rcll
movsb
mov
call
cli
out
aas
sub
testb
mov
cmp
scas
scas
ja
add
and
or
jne
sbb
pop
test
mov
dec
inc
popf
ret
jmp
jge
jecxz
xor
loop
inc
outsl
mov
mov
mov
cld
test
and
xlat
and
scas
xchg
call
je
jo
pop
push
dec
loop
pushf
sub
lock
pop
push
dec
cmp
test
mov
xchg
jb
xchg
push
insl
pop
and
mov
adc
js
sbb
cmc
mov
orb
lcall
fwait
stos
lret
xor
xchg
mov
sub
sahf
lret
pop
cmp
inc
cmp
pop
popa
xchg
mov
mov
out
sub
sbb
cmp
adc
pop
xor
and
pop
mov
mov
mov
fists
and
add
leave
sbb
mov
or
cld
inc
add
pop
sub
inc
or
xchg
pop
in
or
fisubrs
xchg
sahf
cmpsb
push
outsl
dec
sub
xchg
stos
sub
imul
enter
inc
and
cmpsl
pop
push
lcall
pop
jb
cmp
repnz
inc
dec
xchg
jecxz
je
push
or
xor
xchg
pop
stos
gs
sbb
mov
lret
mov
sbb
iret
shlb
sub
enter
inc
xor
sub
test
mov
imul
push
mov
push
jns
pop
dec
push
enter
push
mov
cmpsl
mov
xor
pop
scas
cmp
inc
pusha
mov
movsb
or
sar
lea
or
adc
pop
and
add
pop
xchg
adc
xchg
test
and
insl
adc
mov
nop
cmpsl
cmpsl
xchg
adc
mov
lret
cmc
sbb
jns
clc
adc
shrb
or
fdivp
pushf
xor
orb
lods
adc
cmp
stc
push
neg
fnstcw
mov
lds
fisttpll
xchg
cmc
rclb
push
std
cmc
mov
call
stos
jo
xchg
mov
maskmovq
testl
cli
cmp
cmpsl
dec
xor
lods
xchg
push
stc
mov
cmp
das
into
dec
out
xchg
dec
shr
nop
push
sti
imul
mov
movl
xchg
sub
lods
adc
notl
pop
dec
sti
pushf
push
pushf
push
daa
cld
mov
push
xchg
sub
lea
fisubrl
xor
in
fwait
pop
out
cmc
mov
stc
neg
or
in
rorl
xlat
cmp
or
imul
mov
mov
pushf
and
mov
movsb
xor
ds
popa
or
cmp
and
je
call
or
rolb
pop
lahf
jo
mov
pop
hlt
out
or
dec
ret
sbb
in
in
out
cmp
insb
jno
lcall
or
aad
cmpsb
fcoml
aad
movsl
jp
jo
jne
mov
cmp
mov
adc
cmp
and
stos
pop
sbb
mov
cld
push
push
sub
das
das
sub
mov
sub
jge
lcall
dec
pop
dec
cld
adc
fwait
orl
xchg
adc
hlt
mov
mov
je
sub
lret
push
jbe
jg
xor
aam
in
mov
and
jnp
mov
dec
pusha
test
rclb
push
pop
xchg
cmp
sub
or
sub
orl
test
adc
gs
and
inc
dec
out
lcall
std
push
sub
mov
xor
push
addr16
add
sti
pop
leave
pop
sti
stos
sub
xor
test
movb
lcall
roll
in
ss
push
ja
mov
out
pushf
call
sbb
inc
dec
xchg
ds
xchg
imul
fadds
xor
addr16
add
inc
pop
mov
jo
jle
aam
es
sti
in
fstps
mov
in
mov
mov
fiadds
cs
cmpsl
sahf
in
mov
les
sarl
mov
pop
aad
rcr
shrl
adcb
lahf
repnz
rclb
sbb
add
gs
scas
sbb
into
rorb
es
rcrl
mov
dec
jl,pt
mov
mov
mov
ret
pop
aas
or
xor
popf
mov
leave
into
pop
scas
fidivrl
jae
sbb
insl
lret
add
lods
mov
int
pause
xor
mov
lret
add
xchg
iret
adc
xchg
jno
mov
add
lret
fsubrs
jb
cli
inc
pop
mov
mov
jo
and
xchg
imul
stos
aas
and
and
fisubl
inc
shrl
or
shrl
rcll
lret
mov
jmp
test
in
movsb
jns
mov
repnz
adc
push
clc
mov
xor
ja
outsb
mov
cmpsb
stos
test
es
and
jnp
adc
or
js
mov
ljmp
adc
sub
out
xchg
stos
ljmp
pop
lods
jecxz
iret
mov
mov
pop
arpl
sti
pop
mov
les
pop
mov
iret
jo
cmp
sahf
mov
fmuls
lret
sbb
and
push
fisttps
cwtl
adc
in
xchg
and
test
in
jnp
xor
negl
jl
xor
push
jne
aaa
orl
out
repz
into
and
stc
popf
or
fadds
jmp
orl
fs
mov
loop
daa
jg
fidivs
js
enter
jmp
mov
push
mov
orb
out
in
mov
add
repnz
cmp
lahf
adc
outsb
sub
popa
cld
es
lahf
mov
scas
call
pop
mov
aad
scas
loopne
jl
loope
cmp
jecxz
idivb
aaa
mov
jl
jl
inc
mull
negb
imul
int
stos
std
incb
test
rcr
hlt
jp
pusha
jno
jg
pop
jmp
push
push
push
outsl
aad
dec
xchg
lahf
push
imul
mov
xchg
inc
jg
mov
mov
xchg
or
stc
cwtl
testl
cltd
shlb
mov
xchg
aas
loope
ss
lret
lods
das
cmp
pop
xchg
xchg
adc
cld
or
cmp
sub
xor
testb
in
rcrl
aad
pop
cwtl
mov
mov
pop
in
push
mov
sub
mov
adc
adc
cmc
frstor
push
ret
jecxz
decl
pop
push
lods
stos
xchg
rcrb
mov
pop
push
rcll
sbb
add
stos
ffreep
inc
loop
fistl
int3
pop
pop
out
xor
xlat
imul
inc
pop
adc
push
and
dec
dec
xchg
mov
bound
test
cmpsl
cwtl
inc
and
call
mov
lahf
sbb
push
arpl
pop
daa
jne
sahf
or
jb
adc
clc
sbb
loope
sub
jl
mov
xor
call
and
mov
nop
pop
inc
dec
dec
inc
sarb
jbe
fisubrl
divl
test
xor
cli
sbb
mov
mov
sbb
jo
inc
xchg
jo
cld
jl
push
sarb
jne
jnp
xchg
push
xor
dec
clc
dec
inc
sub
adc
sub
mov
nop
and
sti
rcrb
push
push
push
out
loop
mov
push
test
mov
in
jmp
sahf
xchg
mov
jecxz
in
pop
sub
push
mov
mov
mov
scas
out
fsubs
rclb
repnz
out
jg
fadds
inc
dec
sbb
adc
repz
sbb
jnp
leave
jns
sbb
jb
cmp
ret
mov
aam
xchg
int3
andb
mov
icebp
jmp
mov
data16
cld
fistl
jge
mov
inc
fisttpl
shl
and
jmp
test
fs
fnsave
pop
add
call
push
or
insl
dec
es
mov
cmpsb
xchg
ljmp
dec
gs
ja
das
popf
jns
lods
mov
pushaw
xor
mov
mov
pop
flds
test
iret
call
shr
into
jmp
push
daa
dec
mov
pop
stos
out
jg
sbb
mov
stc
cmc
hlt
test
call
sub
fcmovne
movsl
and
push
xchg
movsl
loopne
lcall
fidivs
add
repnz
jns
nop
push
xchg
push
inc
adc
jmp
out
out
dec
xchg
xchg
inc
imul
push
xorb
lret
sbb
lahf
jb
loopne
or
jmp
mov
stc
fnstcw
jo
rolb
fwait
or
or
push
push
mov
adc
in
mov
mov
mov
jno
addl
cli
sub
mov
jl
adc
push
aad
push
pop
dec
push
and
xchg
daa
xor
mov
scas
lods
and
push
lret
mov
stc
or
lcall
int3
movsb
pop
and
arpl
xor
mov
in
push
adc
sbb
pusha
in
ss
mov
repz
test
pusha
push
adc
aad
mov
jno
dec
jo
dec
xchg
xchg
test
lods
jmp
ret
js
push
test
xor
or
xlat
sbb
dec
fdivrs
leave
imul
sub
dec
pop
lret
punpcklwd
in
es
mov
loope
ss
leave
cmc
cld
pop
and
or
sub
xlat
es
cmp
jmp
gs
jl
fdivrl
cmp
or
fnstcw
cmp
int
lea
push
xor
in
mov
roll
or
xchg
jge
jnp
mov
bound
inc
xchg
jecxz
add
test
dec
xchg
pop
aad
xor
mov
int
jb
bound
cmpsb
mov
enter
dec
push
mov
loopne
dec
dec
ljmp
adc
sbb
ret
imul
idivb
xchg
push
jo
xchg
testb
divl
lock
adc
or
pop
loope
jbe
jbe
hlt
mov
xor
or
mov
mov
push
or
loope
mov
pop
cmpsl
dec
gs
fidivs
jns
mov
enter
adc
push
cld
sub
inc
mov
jl
inc
mov
inc
cwtl
mov
jns
push
neg
xchg
jbe
hlt
sbb
and
sbb
or
imul
hlt
cmc
adc
jb
jge
int3
pop
imul
sbb
xor
ja
lds
in
lock
push
shrb
and
and
int
sarb
sbb
ja
push
or
mov
sahf
cld
xor
or
adc
cs
sahf
cmp
mov
bound
out
cmp
and
xor
stc
mov
push
sahf
std
xlat
cmp
ss
das
push
test
pop
mov
popf
push
subl
mov
in
cmp
push
mov
xchg
outsb
into
les
inc
lds
lods
mov
mov
dec
out
cltd
insb
icebp
imul
ret
inc
or
xchg
les
mov
mov
outsb
or
rcr
mov
jne
out
push
fistpl
push
add
cld
mov
jae
cmpsb
mov
push
jae
or
lret
pop
push
lcall
js
sub
out
push
xchg
rorb
push
mov
push
dec
outsb
mov
xor
notl
lcall
mov
jae
push
subb
or
es
js
lods
pop
or
pop
jne
xchg
cli
inc
add
and
jmp
sub
andl
and
mov
hlt
iret
sub
sub
fdivrs
daa
cld
add
dec
pop
fadds
dec
cmp
ds
insb
je
xor
out
scas
cmpsl
aas
mov
xchg
pop
push
enter
xor
stc
cld
mov
mov
mov
test
inc
mov
mov
push
daa
xor
jle
out
outsb
inc
adc
or
jg
imul
push
ljmp
pusha
bound
dec
repnz
lahf
adc
and
sbb
pop
sbb
dec
mov
call
aas
faddl
adc
sub
out
push
add
pusha
into
inc
arpl
adc
ss
out
out
xor
xor
dec
sub
push
jecxz
fsubs
jmp
sub
jmp
sbb
insl
push
cmp
sbb
repnz
nop
jns
inc
mov
sbb
mov
pop
xlat
movsb
mov
push
jae
xlat
lahf
mov
mov
jecxz
jge
mov
add
or
shll
out
push
push
and
scas
xor
add
imul
mov
jnp
repz
xor
inc
mov
icebp
mov
mov
push
mov
nop
or
test
mov
xor
sbb
jo
adc
lods
mov
and
pop
out
fiadds
push
arpl
clc
mov
mov
inc
mov
jb
aas
iret
scas
push
or
inc
or
pop
int3
jno
iret
movsl
out
inc
out
dec
dec
das
inc
and
push
movsl
fistps
test
add
pop
out
inc
push
adc
jae
cmpl
add
mov
cmp
lcall
cli
and
into
dec
clc
hlt
add
decb
imul
test
xchg
mov
mov
jle
inc
mov
addr16
test
aas
in
nop
repz
out
jae
xchg
xchg
dec
mov
andl
je
lods
or
stos
mov
stos
mov
jbe
shrl
adc
pop
test
aas
es
jns
and
or
pop
mov
dec
nop
imul
pop
jl
dec
mov
les
das
mov
mov
inc
test
cmpsl
test
inc
ret
fcomps
mov
out
lock
pop
dec
sub
shll
sub
add
jg
pop
mov
and
fiaddl
test
stos
inc
or
push
push
mov
sbb
imull
div
test
pop
cwtl
xchg
sbb
and
aad
in
adc
flds
xchg
sub
aam
fdivs
pushf
add
sbb
mov
daa
adc
mov
fisubrl
jmp
imul
jae
xchg
mov
add
push
out
cmpl
pop
ret
jecxz
add
cmp
pop
cmp
mov
mov
xor
aad
sub
adc
mov
inc
rorb
dec
mov
sub
ds
and
dec
mov
push
lret
jnp
ds
mov
dec
push
push
shl
jl
lret
dec
lahf
or
push
xchg
popa
sti
mov
mov
push
lods
pop
and
popf
xchg
sbb
fwait
mov
rep
cmp
lods
and
jecxz
dec
push
fdivrs
cmc
popa
jge
xchg
insb
jno
and
cwtl
xchg
xchg
cs
push
cld
cmp
mov
daa
dec
mov
push
popf
mov
jl
leave
jp
ret
std
shlb
pop
or
test
stos
ficoml
lods
push
mov
hlt
jp
pop
dec
testb
jg
cmp
inc
jecxz
or
fcoml
arpl
test
jecxz
push
mov
shlb
sub
push
xor
push
jmp
imul
inc
dec
dec
sbb
stc
insl
adc
and
mov
push
dec
or
arpl
in
sbb
mov
mov
mov
add
adc
lret
inc
sti
xchg
xchg
popa
sub
jno
xchg
pop
pusha
jno
push
repz
and
mov
fmul
push
mov
hlt
sahf
cmp
sub
xor
inc
mov
mov
inc
pop
and
int
das
jns
inc
jmp
out
rolb
push
sahf
jns
push
dec
fdivrs
sbb
in
mov
test
popa
sarb
inc
out
inc
pop
cmp
rcll
sub
test
dec
dec
xor
push
cltd
imull
pop
imul
ja
rcrl
repz
inc
add
shlb
xchg
mov
cmpb
pop
mov
lret
pop
adc
adc
sbb
bound
outsl
adc
pop
jbe
mov
loope
into
cmpsl
gs
ds
cmpsb
out
imul
stc
int
sub
xchg
nop
in
pop
mov
push
fsubrl
pushf
lahf
sahf
enter
sbbl
dec
xorb
xor
xchg
xchg
xchg
jae
in
pop
insb
xor
sarl
mov
das
mov
sbb
into
and
mov
or
sarb
mov
mov
mov
sbb
lods
xorl
fisubrs
dec
ss
push
data16
ficompl
xlat
sbb
das
andb
inc
pushw
add
repnz
cmpsl
adc
push
cmp
fistl
jl
inc
sub
divb
pop
mov
xchg
gs
pop
add
sbbb
mov
dec
jl
mov
mov
rcll
or
movl
push
jecxz
nop
jno
stos
mov
pop
dec
mov
cmpb
mov
push
pop
cld
cld
dec
pushf
stos
pop
mov
or
mov
fdivl
jecxz
rcl
test
add
in
cmp
sub
sahf
add
es
call
popa
and
push
in
bound
sbb
cmc
mov
push
inc
pop
stos
add
test
mov
testl
inc
fmuls
lcall
xor
mov
or
ja
lcall
cmp
ds
mov
sub
mov
adc
idiv
pop
adc
div
rolb
andl
mov
loope
sub
mov
jl
mov
insb
out
add
in
pop
mov
mov
test
add
sahf
out
and
pop
mov
ljmp
pushf
jb
xchg
dec
enter
sbb
movsb
scas
arpl
out
pop
inc
cmp
rcll
cltd
pop
cmp
xchg
jno
jne
mov
lret
loopne
sbb
movl
icebp
mov
lret
cmpsl
sbb
in
dec
mov
stc
mov
fwait
or
int
mov
mov
hlt
mov
xor
adc
dec
bound
mov
push
outsb
mov
inc
out
rorb
out
ljmp
adcl
addr16
pop
ficompl
ss
add
mov
mov
ficoml
shll
test
pusha
dec
push
sbb
push
inc
jns
or
mov
dec
btr
mov
adc
aaa
fmuls
jo
sub
sbb
ds
out
xchg
push
les
push
pop
mov
adc
pop
or
sahf
fsts
add
mov
insl
lock
test
es
imul
roll
sub
hlt
xor
popa
enter
adc
jae
aam
cltd
or
shrl
mov
mov
sahf
les
cmp
sbb
leave
xrelease
add
adc
rorb
jmp
sbb
pop
hlt
repz
sub
push
jmp
ja
pop
mov
repnz
sbb
loope
sahf
das
sbb
data16
add
mov
dec
dec
sbb
cli
mov
sbb
ds
mov
or
or
leave
jnp
sti
call
fstps
movb
inc
cmp
sub
ljmp
jg
jle
push
adc
repnz
aas
ja
mov
or
test
data16
sub
push
inc
xchg
pop
je
and
addr16
or
add
inc
add
out
repz
out
cs
loope
push
xor
xor
cltd
sub
adc
or
add
mov
push
test
jl
sti
mov
fildl
lock
lock
jb
in
into
lcall
mov
mov
sbb
cltd
dec
popf
into
push
jge
cli
mov
call
jmp
aas
jmp
sbb
push
adc
ret
pop
notl
nop
push
movsl
sbb
add
outsl
jmp
loope
lahf
lret
mov
icebp
adc
sub
cmpsl
fisttpll
cmp
pop
data16
jb
and
adc
sahf
leave
das
aaa
push
je
mov
inc
cmp
fdiv
aad
in
cmp
mov
jp
add
xadd
fdivs
and
mov
jmp
popf
out
pop
pop
rcll
push
or
negb
push
jnp
sub
sbb
leave
enter
pop
js
pusha
xchg
test
pop
in
out
pusha
cmp
out
sbb
es
inc
popf
mov
mov
xor
inc
mul
arpl
xchg
add
push
fidivs
mov
or
pop
sbb
stos
test
cmpsb
mov
in
adc
cmc
sahf
sub
cmpsl
adc
shlb
lcall
dec
insl
movsl
nop
ret
xor
and
clc
pop
int
mov
notb
pop
ds
std
fstps
xor
xor
or
in
sbb
testl
xor
test
inc
cmp
mov
insl
adc
dec
fiadds
xlat
xchg
fisubrl
popf
scas
outsb
outsb
hlt
add
add
adc
pop
push
push
mov
sbb
or
jmp
push
inc
cmp
testb
in
lcall
xchg
stos
jp
mov
xchg
out
dec
aas
dec
xor
lea
jmp
rcll
nop
hlt
push
scas
dec
xchg
popf
addr16
xchg
roll
cltd
jge
sbb
mov
or
push
repnz
ss
cmpsl
sbb
xchg
inc
hlt
imul
cmp
mov
push
push
pop
and
mov
sub
into
lret
sub
adc
ret
mov
repnz
or
cmp
mov
dec
sub
xlat
fwait
jle
out
out
das
lahf
xorl
pop
xor
cmp
ljmp
nop
pcmpgtb
bound
mov
ja
mov
pop
lahf
and
andl
xor
jae
jecxz
or
mov
ja
loop
fcmovu
pop
pop
lea
push
testl
mov
insb
sbb
sbb
cwtl
ret
jp
sbb
push
fistps
dec
clc
fdivr
ja
jae
xor
dec
es
das
mov
ljmp
mov
insl
loopne
es
aaa
lret
fcoms
dec
xor
incb
popf
inc
mov
xor
pop
das
sbb
shrl
mov
or
icebp
inc
test
out
jl
add
cmpsb
dec
sbb
stos
loopne
xor
and
mov
insl
pop
or
dec
mov
repz
mov
dec
addl
adc
dec
or
jp
adc
out
dec
stos
mov
popf
inc
pop
mov
into
ret
lods
icebp
mov
std
jle
sub
sbb
mov
pusha
cltd
inc
ljmp
push
xor
cltd
mov
cmc
call
call
xchg
adc
test
arpl
xchg
je
int
out
outsl
rorl
cmp
mov
sbb
xlat
leave
gs
jns
xchg
inc
out
sub
cmpsl
xchg
cwtl
popa
fsubrs
add
daa
inc
mov
push
scas
inc
fst
int
rcrb
dec
dec
mov
adcb
inc
out
adc
rcll
and
xor
lods
sti
mov
out
xor
or
xchg
inc
fnsave
ret
dec
cmp
jo
jg
es
stos
xor
xchg
mov
xchg
jle
jb
leave
fsubr
jge
ljmp
ret
cmp
adc
lea
sbb
aam
fcoml
dec
inc
cmp
jne
pop
call
push
add
sti
sbb
sahf
mov
int3
and
addb
stos
addr16
lds
clc
jne
cmp
test
cmpsb
cld
mov
add
faddl
cmp
bound
sbb
push
inc
cmp
roll
mov
shll
sub
lods
xor
cwtl
push
pop
xchg
out
adc
in
and
repz
pop
xchg
dec
inc
push
mov
pop
mov
fadd
xchg
sahf
cmp
jmp
inc
mov
xlat
jns
call
mov
adc
mov
pop
push
mov
dec
pop
mov
stos
cmpsb
add
sub
or
jo
std
ret
jbe
lock
pop
es
pusha
adc
jecxz
sub
test
movsb
mov
movsl
or
repnz
mov
pop
sbb
and
enter
mov
insl
inc
loope
push
es
sbb
popa
scas
add
and
push
sub
dec
cmp
push
add
cltd
adc
and
inc
fbld
movsb
mov
aaa
adc
sub
out
clc
iret
dec
sub
xor
mov
mov
push
push
lret
xor
out
cmp
jge
sub
adc
sbb
mov
movsb
jg
imul
enter
cmp
in
in
add
sub
lods
inc
inc
jle
mov
das
addb
xchg
sbb
cmpps
jnp
adc
arpl
and
sub
ss
hlt
shll
into
dec
inc
aaa
shrl
cmp
push
push
jb
xlat
mov
dec
fdivl
inc
pop
cmp
je
out
xchg
and
repnz
push
sub
push
lods
testb
mov
out
outsl
dec
jmp
or
clc
dec
test
loope
pop
mov
lock
out
stc
movsl
mov
jmp
pop
scas
add
push
jne
mov
shlb
xlat
fisttpll
int3
addr16
or
jae
fbstp
mov
ficoms
imul
jae
ffreep
aam
xor
sbb
and
or
in
push
loopne
popf
push
or
add
pop
jmp
sub
test
ja
cli
mov
dec
pop
addr16
add
mov
cltd
rolb
mov
inc
dec
stos
adc
xchg
push
pop
mov
mov
push
xor
dec
movsb
cmp
and
add
mov
stc
lahf
mov
mov
data16
out
cmp
bound
lock
pop
mov
stc
out
pop
insl
mov
push
jp
mov
xchg
and
fdivrl
xor
or
outsl
pop
and
subl
sub
xchg
push
push
pop
lret
in
inc
movsl
add
cltd
rcl
lahf
out
add
mov
notl
mov
jbe
cmp
les
adc
jge
mov
xchg
call
movsl
scas
icebp
out
insl
insb
jo
test
mov
and
test
push
stos
call
jnp
call
lea
xor
adc
pop
sbb
dec
loopne
in
jg
pop
pop
dec
adc
mov
inc
aam
out
xor
loopne
or
fcmovnbe
adc
test
push
jbe
inc
jbe
cmpsb
mov
sbb
test
xchg
mov
subb
mov
push
cmpsl
lahf
cwtl
jl
or
xor
mov
cmpsl
cs
and
aad
mov
cltd
stc
shll
adc
repz
fdivrs
and
lret
or
cwtl
sub
inc
mov
scas
or
fidivrl
stos
lea
roll
js
xor
jo
cs
cltd
movsb
push
cs
jl
jmp
outsl
rolb
mov
add
stos
std
cmp
hlt
fs
mov
outsb
push
jp
in
jge
fmul
rorb
fwait
adc
xchg
adc
popf
movsl
fs
dec
inc
xchg
dec
xchg
jne
jno
mov
sub
cmp
mov
and
pop
stc
pop
xor
nop
loop
movsb
cmp
cmp
or
xchg
test
popa
pop
call
mov
mov
mov
xor
xchg
in
cmc
ss
and
xchg
lret
das
cs
inc
mov
ret
pop
sbb
stos
test
pop
inc
or
aad
or
pop
jg
in
pop
add
movsb
leave
cmp
and
data16
fs
loop
add
and
or
call
std
jmp
nop
aaa
xabort
lods
daa
xchg
in
call
xlat
xchg
aam
sbb
rclb
xchg
pop
pop
insb
ljmp
es
sbb
push
mov
movsl
fisubl
aas
imul
in
sbb
adc
in
mov
push
and
dec
cli
push
pop
rcll
movsb
push
test
xor
push
fs
dec
aad
je
and
or
shlb
mov
faddl
mov
mov
out
fidivrl
xchg
mov
push
dec
lret
dec
es
mov
inc
xor
push
xchg
scas
mov
xchg
push
inc
mov
xchg
push
add
inc
or
dec
sbbl
jae
enter
lock
xchg
or
bound
into
jae
aas
mov
daa
out
jnp
shll
xchg
push
jns
movsb
mov
xlat
cltd
in
addb
call
inc
test
push
xchg
pop
jp
push
jle
in
xchg
jmp
mov
add
and
cmpsl
adc
pushf
idiv
xchg
test
pop
movsl
incb
xchg
jge
jecxz
jle
sbb
and
push
imul
xlat
push
out
or
cmpsl
nop
lret
shlb
push
icebp
jp
out
scas
and
ror
jae
pop
bound
mov
mov
cmc
mov
dec
xchg
add
out
enter
xor
lret
or
cmp
scas
pop
in
ret
arpl
imul
or
mov
sbb
or
xorb
movsb
push
imul
or
adc
sahf
inc
subw
or
sbb
jno
add
dec
pop
movsb
and
cwtl
jmp
push
mov
jnp
push
cmp
push
and
xchg
pusha
adc
loop
mov
shll
mov
shl
aad
xor
push
mov
and
dec
and
fiaddl
inc
adc
cmpps
lret
out
adc
cmpsb
cld
aam
pusha
xor
adc
cmp
and
pop
sub
enter
add
push
sbb
pop
in
add
and
cmc
sub
loopne
popa
in
xchg
mov
or
test
xor
inc
add
lock
imul
shll
leave
pop
movsl
lret
add
lea
mov
push
cmp
rol
test
pop
movsl
lret
add
pop
pop
notb
cmpsl
inc
ret
fdiv
mov
jl
or
xor
insb
movsb
lock
mov
jmp
fwait
or
adc
dec
sub
outsl
pusha
test
xlat
adc
mov
enter
aam
adc
cmp
sub
lcall
fadds
cmp
pop
addr16
add
xchg
es
push
stos
mov
jne
in
or
in
in
sbbl
dec
ret
out
jg
mov
ret
dec
push
jb
push
adc
xchg
sub
scas
sub
xlat
es
add
mov
mov
out
rcrl
adc
mov
inc
jo
test
push
lcall
rcr
mov
and
push
jg
and
shll
imul
sub
pop
xchg
inc
je
xchg
and
jge
jmp
xchg
imul
xlat
fists
xchg
and
mov
mov
lock
imul
xor
pop
clc
jmp
fistps
cltd
jnp
mov
stc
jbe
and
sub
xor
movsl
mov
push
pop
and
sbb
mov
test
pop
push
lods
and
into
push
xchg
enter
fisubrl
je
jmp
lahf
xchg
test
xor
loopne
sbb
mov
mov
iret
cmp
test
pop
sub
adc
jbe
mov
jecxz
or
mov
movsb
add
mov
sbb
xchg
scas
sub
adc
test
ljmp
ficoml
and
xchg
lods
aam
sti
mov
mov
stos
cmp
lahf
push
sub
sbb
aad
pop
lret
and
daa
mov
addr16
xor
in
mov
add
inc
jl
lds
loope
or
inc
lret
lahf
and
lret
shl
pop
cmp
in
push
or
je
iret
mov
add
sub
pop
dec
sub
inc
scas
mov
orl
mov
faddl
mov
aaa
shlb
pushf
iret
xchg
testl
xchg
fcomps
xor
stos
andb
lcall
or
push
inc
cli
mov
das
jmp
mov
gs
xor
hlt
lahf
push
mov
out
and
mov
cs
je
dec
mov
out
pop
lcall
aas
xchg
jmp
adc
addl
or
outsl
cmpsl
idiv
cltd
mov
or
push
test
jmp
orl
decl
mov
mov
lahf
ljmp
inc
or
daa
loopne
inc
and
cmc
pop
and
fistpll
in
loop
pop
cmp
jle
loop
sub
push
push
enter
stc
mov
pop
cld
mov
bound
inc
mov
or
pop
leave
ljmp
xor
lret
or
lahf
icebp
jle
enter
jnp
aaa
dec
and
cmp
in
xor
sub
jge
repz
movsl
pop
pop
mov
push
pop
mov
arpl
and
mov
sbb
clc
insl
mov
pusha
mov
xchg
push
iret
aam
fldcw
add
jl
sub
xor
leave
adc
mov
cmpsb
pop
incb
and
push
cwtl
js
dec
sbb
into
aas
jns
in
jns
push
and
mov
fs
movsb
popa
push
jle
lret
idivl
out
push
shrl
cmp
mov
in
push
jecxz
in
sbb
pop
sub
cmpsl
jo
outsl
sub
pusha
mov
push
add
pop
lcall
cmp
dec
mov
fiadds
lods
js
adc
mov
fistpll
mov
xchg
fisttps
add
inc
lret
shlb
rol
stos
sub
push
nop
cmp
aaa
push
aad
pop
jp
stos
lahf
push
xor
or
mov
dec
rclb
aam
sbbl
scas
jge
aaa
mov
mov
inc
insb
mov
mov
enter
or
pop
gs
push
das
adc
mov
mov
repz
jg
pop
imul
push
mov
pop
mov
sub
xchg
dec
mov
in
and
mov
adc
lret
repnz
sbb
cmpsb
sub
sbb
imul
lret
insl
cmp
push
jp
xor
xor
xor
lods
imul
mov
ss
jp
or
mov
jb
mov
ds
lods
add
add
xor
lahf
push
int
test
xchg
lret
add
mov
or
xchg
dec
mov
xchg
rcrb
mov
shll
mov
xlat
inc
adc
and
call
cmp
cmp
push
sub
pop
js
cmp
out
mov
insl
rclb
arpl
sub
dec
jmp
pop
scas
ss
mov
jge
jne
cmpsl
and
pop
jmp
dec
xchg
pop
popa
or
xchg
in
push
shlb
aaa
xorl
es
test
scas
stc
push
mov
sub
cli
dec
adc
pop
aaa
pop
mov
sub
movb
add
iret
push
je
test
or
jbe
xchg
push
dec
cmpsb
or
out
dec
mov
sub
fistl
add
arpl
out
out
and
or
and
das
in
push
xchg
cli
push
xchg
cmp
ss
cli
iret
and
ficompl
in
leave
add
dec
inc
inc
std
sub
sbb
lea
mov
outsl
pop
jbe
mov
aam
es
mov
sub
out
add
mov
push
pop
lock
std
hlt
cmp
jp
stc
sub
je
push
cmpsl
xor
addb
into
sbb
mov
sahf
xchg
call
or
pop
notb
sub
sti
test
add
nop
movsl
shlb
cltd
dec
jmp
xchg
leave
jo,pn
mov
popa
and
andb
mov
aas
add
mov
inc
mov
in
movsl
xchg
call
sub
mov
outsb
sub
data16
fucom
cmpsb
insb
xor
jno
mov
outsb
xor
mov
inc
jbe
xor
pushf
iret
xchg
iret
jle
mov
insl
fimull
or
pop
sbb
fbld
xor
pop
pusha
jae
or
mov
and
sub
add
cld
jb
sbb
push
test
sbb
lahf
push
inc
mov
or
repnz
or
push
mov
mov
repz
and
fsubrs
mov
xchg
movsb
roll
sbb
jo
lods
sub
jle
mov
or
and
out
fs
xchg
jmp
mov
sti
adcl
icebp
inc
mov
mov
fistl
hlt
jecxz
ret
imul
ja
jnp
dec
cltd
cltd
add
pop
imul
xorl
adc
jb
incb
sub
scas
nop
pushf
and
xchg
ret
dec
ss
aad
mov
sti
lea
pop
jns
push
sbb
sub
outsl
sbb
push
stc
divl
add
ss
loop
fimull
cli
fimuls
push
in
fbld
fs
xlat
inc
or
sub
lods
out
fmull
mov
xor
mov
fmuls
mov
jecxz
jb
inc
jle
stos
cmp
rcrl
pusha
divb
sbbl
minps
out
pushf
pop
push
ss
or
lcall
cmpsl
sub
out
mov
adc
xchg
add
icebp
cmc
mov
rclb
add
outsl
icebp
fildl
mov
or
jnp
add
mov
aaa
icebp
cmc
cmp
mov
dec
lods
inc
sub
addr16
hlt
mov
cmpb
jns
test
push
rcrl
and
lea
push
outsb
cmpl
pop
or
inc
icebp
popf
mov
in
outsb
inc
aas
mov
sub
jb
ret
sbb
imull
sub
push
test
test
mov
popa
hlt
out
xchg
arpl
sub
out
leave
les
out
add
sub
mov
pop
aam
sub
leave
mov
mov
mov
nop
in
lcall
nop
popl
insb
iret
xchg
cmp
adc
cmp
jb
jl
jl
nop
pop
adc
cmp
add
enter
stc
xor
dec
mov
sub
pop
pop
jne
push
push
fsubl
idivb
and
into
lcall
dec
daa
loope
adc
sti
fcom
ret
pop
inc
xchg
test
mov
in
fiadds
cmc
mov
xchg
mov
test
jae
xor
jno
in
frstor
std
imul
cwtl
xchg
mov
movsb
inc
pop
jl
cltd
sbb
shll
dec
icebp
lock
push
fistpll
clc
mov
jo
pop
fs
dec
xchg
push
lods
outsb
dec
iret
test
icebp
inc
lods
sub
push
repnz
gs
xchg
bound
sub
push
fisubrs
fsubr
sbb
sbb
call
pop
sub
out
hlt
push
push
movsb
es
adc
lods
fdiv
push
xchg
xor
nop
incl
insb
mov
sbb
mov
xchg
pushf
subl
fwait
mov
pop
das
mov
jle
cli
jmp
rcll
stos
push
js
xchg
lret
sub
adc
std
ljmp
pop
aad
dec
addl
push
loop
jg
pop
mov
mov
in
sbb
add
in
cmpsl
das
lcall
aas
mov
test
aaa
mov
sarb
cmp
xlat
and
and
xlat
add
or
or
adc
addr16
adc
cmpsb
andl
mov
in
fdivrl
push
pop
inc
and
inc
out
xchg
out
or
mov
push
aad
ja
xchg
inc
jp
cwtl
enter
lods
out
imul
add
adc
jb
int3
adc
test
mov
push
imul
pop
adc
mov
xor
and
or
loope
cld
nop
and
dec
fldcw
pop
lret
inc
jecxz
lcall
pop
imul
mov
sbb
mov
leave
xchg
push
mov
inc
pop
int
pop
les
lahf
sub
adc
push
push
mov
sarl
xor
scas
loopne
call
mov
mov
fwait
icebp
xchg
fisttps
push
andb
cs
mov
push
xchg
add
mov
inc
loop
xor
inc
scas
lret
mov
sub
test
repnz
xchg
frstor
pop
cmp
fistps
sbb
dec
or
cmp
bound
lahf
mov
popl
cli
addr16
xor
pop
rcrb
in
ficoms
push
in
sub
sub
inc
push
or
push
pusha
push
sbb
cmpsb
into
stc
and
mov
inc
or
adc
in
fstl
dec
jg
cli
cli
xchg
lock
mov
cmp
sub
pop
testl
enter
mov
scas
mov
ror
aas
fdivs
imul
or
lret
and
mov
out
mov
sub
test
in
mov
int3
jnp
xchg
pop
scas
sbb
outsl
inc
iret
xor
addr16
outsb
sahf
sbb
jae
mov
mov
ljmp
das
imul
orb
adc
mov
sub
aam
pop
insl
mov
gs
xor
fimuls
push
push
dec
cmc
inc
xor
fsubrs
xchg
xchg
addb
push
std
lcall
mov
and
push
push
inc
cmp
leave
push
sub
sub
sbb
mov
in
pop
pop
add
jecxz
xor
std
push
add
push
hlt
pop
enter
lods
cmp
repz
jle
aaa
insl
repnz
cmp
inc
and
xchg
scas
seta
xchg
out
push
testl
pop
or
hlt
jp
in
or
data16
cmp
bswap
das
or
cmp
push
xorl
lcall
jns
inc
scas
daa
int3
orl
jo
loopne
fs
push
jne
pop
shll
pop
dec
push
lock
clc
cltd
push
jb
or
sub
or
lea
inc
jl
and
add
jp
dec
test
bound
sarl
xlat
sub
mov
xor
outsb
xchg
clc
adc
dec
ds
les
fwait
into
mov
fnsave
ror
fcomi
rclb
push
or
sub
xchg
xor
push
push
jne
outsb
movsl
mov
and
pushf
or
push
push
sbb
mov
push
imul
and
jne
mov
cmpsb
cmpb
das
popa
push
fistps
cs
hlt
mov
inc
xlat
adc
rcll
js
out
dec
fsts
add
in
insb
and
stc
enter
jge
xchg
or
sub
enter
jl
insl
arpl
push
mov
or
add
jno
lds
fwait
leave
sbb
aas
daa
jg
adc
mov
mov
xchg
mov
xor
and
cltd
into
mov
jo
jne
push
inc
mov
dec
ds
dec
cs
xchg
test
push
stc
jl
repz
pop
dec
stos
sub
adc
push
leave
les
cs
out
outsb
in
lock
loopnew
je
add
mov
sahf
push
das
cmp
cs
push
mov
arpl
pushf
es
mulb
cwtl
pop
rcr
push
sahf
cltd
gs
popa
cmpsb
mov
jmp
or
dec
xchg
inc
aad
sbb
pop
rclb
lea
stos
sbb
test
or
add
movsb
push
cli
loop
lea
xchg
andb
or
aad
add
xor
cwtl
cmc
mov
stos
xor
sbb
out
or
or
imul
pop
lret
jl
dec
ror
stc
lds
sbb
xchg
nop
inc
cmp
xor
out
add
xchg
es
adc
nop
sbb
cwtl
jecxz
pusha
cmp
into
inc
fisubl
out
fsubrl
arpl
iret
outsb
pop
fucomi
jo
jge
lods
pop
cmp
mov
and
jnp
xor
cs
flds
xchg
adc
inc
loope
xor
mov
ljmp
ds
inc
pop
lret
pop
int3
xchg
mov
icebp
arpl
push
jecxz
jg
adc
mov
sub
jae
sahf
pop
andb
pop
jae
ja
sbb
repz
repz
shld
movsb
pop
inc
sub
pop
or
nop
out
data16
mov
add
jne
inc
inc
mov
mov
pop
inc
mov
sbb
arpl
sbb
aad
stos
mov
pusha
out
mov
movsl
push
cmp
adcb
into
and
add
std
mov
add
rorb
cmpsl
mov
cld
popa
mov
and
roll
xchg
lret
js
shll
imul
and
mov
loop
inc
or
mov
scas
cmp
inc
rclb
jns
mov
xchg
mov
adc
popa
dec
pop
shr
ja
dec
adc
cmp
fadd
sub
or
fsubs
adc
jns
movsl
rclb
push
in
sar
inc
arpl
mov
ret
in
pop
mul
iret
dec
fildl
or
pop
and
pop
lret
shrb
repz
inc
imul
inc
into
mov
fbld
adc
popf
icebp
paddd
inc
into
dec
imul
loop
add
adc
out
pop
sbb
mov
decb
cmpsl
lcall
iret
negb
jb
adc
fbld
ss
lods
cmp
fsubs
es
mov
jbe
js
pusha
pop
popf
out
aas
enter
std
outsl
xchg
and
mov
or
jl
movsb
xor
cltd
jmp
push
sbb
or
insb
rcll
repz
jg
push
fs
shr
xor
pusha
ret
push
clc
stc
inc
sbb
or
sub
inc
cmp
pop
sub
enter
out
ret
lcall
pop
xor
xchg
or
jle
push
and
insl
mov
dec
test
xor
fwait
xor
dec
jae
mov
gs
dec
mov
cmpl
mov
mov
pop
hlt
cwtl
cmc
sbb
repnz
add
mov
push
out
inc
je
mov
data16
cmc
xor
cli
lods
jg
jecxz
in
xor
or
sbb
popa
mov
pop
push
xchg
add
cmc
jp
and
ljmp
inc
add
jp
icebp
and
adc
pop
push
mov
repz
repz
into
mov
arpl
adc
mov
mov
xor
jecxz
fiaddl
outsb
and
bound
cmp
jo
push
jbe
xchg
mov
aam
scas
add
cmp
jae
gs
pop
adc
iret
out
adc
and
lds
xor
aam
sti
out
xchg
js
add
mov
arpl
aad
push
cmp
or
push
scas
mov
out
pop
leave
xor
ja
mov
pushf
mov
sbbl
add
mov
das
insl
adc
push
jmp
std
addr16
stc
sub
xchg
adc
mov
mov
jge
and
and
or
xor
arpl
mov
into
in
fdivr
in
incb
mov
cltd
outsb
bnd
popa
inc
aad
add
fwait
out
lods
push
xlat
loopne
lret
push
push
sbb
xchg
movsl
or
and
inc
shrl
sbbl
sbb
adc
push
cmpsl
dec
push
dec
dec
sahf
xchg
add
and
ficoml
xor
push
pop
es
dec
ficomps
mov
fidivrs
sbb
leave
cwtl
repnz
jns
sub
mov
orl
add
movsl
and
mov
into
sbb
out
push
mov
or
ficoms
sub
lret
cmp
mov
mov
fcmove
jmp
loop
jecxz
xchg
xchg
jge
ret
mov
cmpsb
fwait
lret
and
imul
out
sti
inc
cs
shl
jns
shlb
jmp
and
mov
inc
cwtl
dec
dec
push
fildll
mov
inc
mov
fs
xchg
rcrb
testl
sub
push
mov
es
and
mov
mov
adc
cmp
into
mov
mov
mov
push
or
lods
and
sbb
out
insl
xor
dec
sub
addr16
or
xlat
pop
pop
sub
xchg
push
imul
cmc
push
test
stos
fsubr
jb
cld
lret
rorb
and
mov
cmp
test
stc
add
xor
enter
sbbb
cmc
jbe
xor
mov
mov
xchg
xchg
adc
xchg
scas
inc
jns
iret
push
dec
adc
mov
adc
clc
push
mov
sbb
into
or
repnz
hlt
push
and
push
or
sub
adc
pop
adc
cmpsb
pop
stos
fwait
clc
stos
push
mov
mov
inc
xlat
jp
fildll
or
lcall
pop
sub
aaa
cmp
dec
or
ret
xor
out
ret
dec
div
sarb
pushf
movsb
add
aaa
js
xchg
pusha
push
dec
cli
orb
dec
ret
js
lret
pop
call
lods
pop
cmpsb
jae
lds
pushf
repz
mov
push
fidivl
jp
adc
cmpl
fistpll
lods
sub
flds
ror
in
mov
das
int
fimuls
inc
icebp
ret
lods
add
test
inc
jo
test
lds
in
push
sarb
rclb
scas
scas
adc
cmpsl
cmc
push
xchg
arpl
jae
inc
hlt
xchg
pop
ja
push
mov
cltd
cmp
sbb
icebp
sysret
lret
mov
out
aad
dec
imul
xchg
inc
add
sub
in
cld
xchg
pushf
or
sbb
je
test
or
loope
into
sbb
dec
std
cmp
xchg
sbb
add
shrb
filds
aas
fldl
nop
hlt
pop
and
mov
adc
jne
fcompl
std
icebp
negb
jmp
mov
sarb
push
imul
scas
stos
call
insb
mov
int
sbb
add
lret
imul
mov
in
iret
outsl
js
dec
xor
mov
dec
outsb
add
pop
pop
pushf
test
cmp
shrb
fnstcw
mov
pop
into
fs
jns
ret
aad
add
subb
sub
leave
xchg
leave
adc
jbe
jns
or
pop
and
fld
shrl
add
rclb
stos
or
in
or
addr16
pop
push
sbb
cmpsl
fsubrp
fs
lods
dec
add
imul
test
xor
call
jmp
xor
push
sub
lock
cmpsl
push
mov
scas
cs
xor
ret
and
lods
nop
in
addr16
xor
stos
fadds
inc
aaa
mov
or
sbb
das
cmp
cmpsb
jl
xchg
xchg
div
mov
adc
ja
in
sub
xchg
mov
mov
imul
push
fldt
cld
dec
inc
int
fcmovbe
jbe
xchg
pop
adc
mov
push
pop
popfw
sub
in
mov
out
insl
aaa
lret
mov
pushf
mov
jne
ja
xchg
repz
sti
test
cltd
jg
lea
or
jae
and
lds
xchg
add
add
lret
lock
add
dec
jl
inc
out
aas
ljmp
add
dec
popa
stos
push
pop
add
rcll
mov
add
cmp
mov
cmp
rolb
ja
ds
fs
mov
clc
enter
pop
or
jne
arpl
push
push
inc
loop
addl
mov
leave
lret
fimuls
ds
dec
mov
loope
sbb
add
jle
jno
push
jge
jmp
inc
aad
mov
aad
jge
testl
xorb
stc
xor
test
stc
idivb
xor
bound
lret
js
or
dec
push
xor
mov
xor
pushf
stc
xchg
fst
aaa
dec
cltd
adc
loop
frstor
push
lret
cs
pop
add
testb
shll
xor
push
jp
xor
or
xor
clc
push
fs
popa
adc
stos
hlt
add
fcmovnbe
mov
xchg
js
movsl
mov
sub
jmp
cmc
and
cmpsl
adc
pushf
push
jl
or
and
sbb
scas
cmpsb
xchg
std
dec
ja
out
and
xor
mov
in
into
shlb
test
and
int3
jns
int
out
xor
bound
imul
call
and
inc
movsl
inc
xchg
mov
cmpb
cmpl
adc
stc
xlat
or
ss
jb
loopne
js
mov
and
call
insl
mov
in
mov
out
and
push
or
cmp
mov
sbb
or
pop
pop
dec
xchg
clc
dec
xor
xchg
push
push
scas
inc
aas
movsl
pop
ret
ror
lods
inc
or
lea
push
es
loope
jecxz
mov
jp
dec
je
mov
insb
sub
push
test
and
adc
jae
inc
jbe
push
xchg
movsl
fsts
shll
cwtl
scas
mov
in
mov
pop
popa
mov
lret
das
push
clc
inc
orl
pop
enter
arpl
jp
lahf
mov
jl
xorb
fadd
ds
jmp
jp
mov
lea
leave
and
pop
repz
dec
and
aaa
inc
in
adc
mov
mov
adc
mov
loope
ss
push
mov
mov
adc
and
inc
pop
pop
sbb
sti
push
and
popl
jg
ret
push
jns
push
scas
pop
push
mov
imul
dec
ss
loopne
imul
or
mov
mov
repnz
adc
xchg
xor
cmpsb
push
pop
dec
add
outsb
ret
std
sbb
cltd
aaa
icebp
repz
fisubs
mov
mov
mov
ror
stos
repnz
sub
popf
test
addl
xchg
dec
rcr
xlat
push
inc
stos
es
bound
inc
sub
mov
pop
jp
or
iret
xor
push
sbbl
aaa
test
sub
rorb
mov
xlat
stos
mov
jo
mov
and
aam
pop
rcl
cmp
jo
leave
inc
mov
std
fimull
pushf
xchg
jge
and
iret
mulb
or
ret
enter
movsb
jecxz
scas
dec
jno
add
out
xchg
out
addr16
mov
jg
push
xchg
inc
mov
movsl
fsubs
stos
push
inc
and
fcoml
push
push
sub
ret
ret
jecxz
jle
jae
sub
outsl
cmp
aas
aaa
cmp
popf
adc
or
in
inc
sbb
pop
sbb
pop
sahf
pop
jmp
orb
loope
lcall
fs
es
xchg
jns
and
cld
cmp
adc
shl
dec
in
mov
iret
jge
push
and
cmp
xchg
fs
jle
das
aam
out
cli
mov
mov
cltd
out
xor
adc
adc
pop
mov
pop
or
and
leave
xor
sub
jle
test
mov
mov
inc
mov
mov
push
popf
adc
into
hlt
inc
xchg
cli
loope
out
cmp
rcr
mov
pop
popl
aam
xchg
jns
sub
push
test
js
xchg
ret
into
inc
jnp
pushf
out
icebp
mov
pushf
add
pop
out
inc
fdivrs
int
mov
push
cmp
lret
test
lds
les
adc
pop
mov
shl
outsb
and
rcll
cmpsb
cmc
clc
push
call
int
push
out
and
fstpt
jg
sbb
in
enter
jne
jecxz
jae
xor
adc
xchg
push
mov
fstps
lods
lret
or
jne
dec
icebp
inc
dec
mov
sub
ror
pop
cmp
out
shlb
cmp
stos
or
mov
mov
aam
cmp
rep
sbb
push
add
xor
nop
negb
jp
mov
pop
add
jae,pn
push
xor
shrb
or
pop
or
int3
cld
out
je
add
or
lret
frstor
repnz
fisubs
daa
in
dec
ds
jnp
sub
into
inc
cmp
aas
ss
das
sub
aaa
jnp
popa
or
jbe
xor
shr
pop
push
mov
sbb
push
jecxz
sbb
enter
jbe
call
je
bound
rol
push
int
pusha
insb
lea
std
test
and
push
pop
and
scas
and
clc
stc
sti
sti
jge
fnstcw
inc
pop
pop
lret
mov
adc
sti
nop
cli
adc
push
jne
fcomps
jg
imul
out
mov
and
fdivrs
inc
cmp
mov
jo
pushf
iret
mov
mov
mov
sbb
mov
push
leave
add
mov
pop
insl
cmpsl
mov
mov
movsl
add
xchg
imul
mov
nop
movsb
inc
xchg
xlat
inc
adc
pop
pop
dec
xchg
sub
loopne
xchg
dec
aaa
push
nop
push
aam
cld
jmp
ficoml
ss
and
shrb
in
or
push
outsb
lcall
cmc
mov
mov
test
hlt
ss
or
mov
aam
cmp
sub
mov
scas
sbb
lock
test
push
adc
cli
pop
cli
psllq
int3
push
popf
lods
imul
xor
xor
or
cmp
dec
lock
movsl
and
fcoms
cltd
jbe
cli
xchg
leave
xchg
out
jmp
jmp
and
or
dec
dec
adc
and
xlat
xor
int3
std
dec
cltd
pop
mov
or
push
pop
scas
pusha
inc
fs
sub
in
nop
iret
xchg
dec
push
movsl
divb
inc
push
push
xor
cmc
xor
fcmovbe
in
test
int3
inc
or
add
jmp
xor
sbb
cmp
jb
adc
inc
sub
cmp
repnz
ljmp
shl
or
test
in
xchg
jno
test
inc
or
jl
js
mov
fidivs
shr
rclb
sbb
xor
insb
inc
imul
pop
xchg
mov
sbb
pop
dec
xor
in
loop
inc
loopne
ja
or
cmp
stos
mov
jl
mov
add
sbb
rcrb
lea
hlt
and
xchg
cmp
pushf
aas
push
or
and
clc
adc
pop
mov
ret
repz
xchg
add
inc
and
add
sbb
outsl
nop
ret
adc
sbb
xchg
dec
sbb
inc
mov
push
stos
fcompl
push
dec
pop
pop
adc
aad
rcl
int
lea
in
loopne
and
call
jb
adc
movsl
mov
inc
popf
sub
jno
fdivrl
mov
pop
adc
stc
lret
fwait
sub
dec
or
or
dec
mov
adc
arpl
inc
out
add
or
mov
push
daa
sarl
mov
fcomip
rolb
xor
mov
or
inc
pop
les
adc
clc
subb
pop
push
inc
enter
js
roll
pop
imull
xchg
icebp
test
aaa
pop
mov
stc
ja
jl
push
or
jae
imul
int
call
sbb
cmpsl
mul
xchg
lods
xor
xchg
loopne
daa
aad
cmp
push
sub
dec
idiv
js
dec
jmp
pop
shll
sub
cvtps2pi
sub
stos
mov
idivl
mov
sti
and
inc
sbb
push
mov
jne
adc
pop
xchg
sub
jmp
cmc
adc
push
adc
dec
test
mov
cmp
test
cmpl
jmp
addr16
mov
hlt
mov
lret
dec
xchg
mov
push
mov
test
lods
xchg
aas
je
imul
in
sub
or
aad
call
int3
dec
cs
flds
mov
mov
stc
stos
xor
sahf
leave
or
testl
xchg
jmp
shl
mov
outsb
aam
push
sbb
or
push
mov
jnp
or
xchg
xor
push
jp
pushf
dec
sbb
inc
xchg
push
mov
mulb
cli
mov
cld
loope
dec
mov
out
inc
inc
mov
shll
pop
fs
fst
sbb
mov
mov
imul
sbb
add
rcr
mov
das
test
es
ffreep
arpl
lods
ds
and
xchg
cmp
add
jmp
ljmp
inc
adc
dec
xchg
jp
cwtl
dec
jg
sbbb
and
mov
in
repnz
dec
ljmp
mov
dec
jnp
mov
pop
in
lahf
sub
mov
rorb
sahf
in
mov
shlb
cli
repnz
scas
jge
aad
mov
mov
xor
subb
test
ljmp
in
data16
arpl
fisubrs
jmp
aam
dec
xchg
jl
mov
sub
sub
pop
add
mov
dec
push
mov
push
aaa
ficoml
jo
fsubrs
test
lret
jge
jno
mov
or
mov
cmc
out
aad
imul
xchg
shlb
les
cltd
rorl
pop
hlt
mov
movsl
adc
xchg
adc
gs
cmpsl
int
in
rorl
or
or
mov
pusha
mov
dec
test
mov
or
movsl
sbb
iret
ja
mov
push
rclb
sub
test
sbb
inc
sub
aaa
pop
jno
push
xchg
mov
fldl
enter
sub
dec
xchg
or
dec
sub
jbe
xlat
and
fldt
pop
sub
push
adc
xor
xor
add
mov
and
es
adc
jnp
pop
lahf
ds
popa
shll
xlat
cwtl
and
mov
scas
stos
lods
sar
push
sub
test
sub
lock
imul
dec
jb
pop
outsb
fmuls
mov
and
das
mov
pop
mov
inc
leave
aas
cld
cmp
in
enter
bound
push
decl
mov
fistl
out
mov
mov
stos
mov
and
lret
adc
or
dec
xchg
cmpsb
sbb
push
iret
fstpl
int3
loopne
ror
stc
adc
pop
or
push
lret
sbb
or
das
sbb
and
fdivrl
mov
dec
bnd
jae
subl
pop
dec
jl
inc
outsl
or
loopne
and
mov
test
or
pop
jmp
gs
xorb
mov
mov
sbb
add
cltd
fwait
movsl
jp
dec
fwait
movl
fnstenv
arpl
push
test
push
ret
mov
ds
js
mov
loop
fdivrs
dec
xchg
and
cmp
cli
cmp
push
lock
aaa
enter
stos
mov
and
inc
aam
sub
dec
adcl
ljmp
mov
and
hlt
jp
cmpsl
xchg
jecxz
add
call
jecxz
fcomi
mov
fidivs
or
lret
pusha
dec
nop
pusha
rcrb
jnp
push
cmpsb
sub
and
pusha
cmp
in
xlat
sbb
shll
push
in
outsb
pop
jbe
inc
fwait
jae
cli
les
jmp
push
mov
sbb
or
rorl
popf
sub
pushf
mov
lahf
xchg
xor
cmp
rcrl
out
sub
adc
jb
and
stos
add
adc
pop
int3
jecxz
mov
cmp
add
loopne
outsl
divb
pop
ss
cmc
mov
ret
pop
jmp
hlt
nop
dec
sub
ljmp
adc
push
aas
mov
or
inc
lcall
iret
test
popf
sub
dec
xorb
leave
popf
inc
xor
sbb
js
test
dec
mov
cld
mov
fbld
inc
jg
pop
and
mov
sahf
lods
mov
rcr
popf
cli
in
jle
xchg
ja
jp
add
xor
mov
jg
testl
cli
test
sub
lcall
add
dec
push
aaa
lock
arpl
xchg
mov
mov
das
testl
pop
and
and
inc
test
mov
mov
and
mov
into
mov
fnstcw
push
aad
pop
mov
or
ds
cmp
in
mov
in
imul
xor
jns
xchg
xor
pop
arpl
fsubrs
ja
xchg
sbb
push
xor
stc
xchg
adc
jae
xchg
into
adc
xchg
aad
flds
and
sub
push
mov
mov
mov
mov
xchg
clc
je
pushf
sub
xlat
out
mov
dec
push
stos
mov
and
or
mov
ret
lret
mov
sbb
xchg
int3
insl
dec
and
addr16
hlt
push
mul
loop
sub
aaa
gs
and
es
rorl
add
xor
jbe
mov
xchg
adc
inc
scas
xchg
push
loop
inc
imulb
cmp
dec
ret
test
inc
je
mov
jl
pop
push
in
sub
pusha
rcll
cmpl
sbb
sbb
jmp
cmp
fldl
pop
pop
mov
icebp
nop
pop
xchg
cmpsl
and
sbb
sarl
push
adc
mov
mov
mov
aad
mov
add
or
pop
sub
pop
cmp
mov
mov
test
jmp
decb
mov
mov
mov
sbb
test
clc
popf
into
mov
ret
sbb
xor
xchg
push
dec
outsb
jge
data16
pusha
mov
iret
aas
test
or
popa
popa
movsl
outsl
icebp
aad
push
adc
jb
or
cmpsl
cmp
pop
jmp
test
mov
mov
test
sti
cmpsb
sarb
fisubrl
jge
mov
inc
gs
mov
mov
test
mov
stos
repnz
mov
mov
outsb
imul
mov
add
mov
jecxz
jge
xor
fisubl
push
stc
jnp
ja
and
pusha
ficompl
punpckhdq
lcall
js
mov
loopne
sbb
pusha
inc
imul
mov
stos
pop
push
and
sub
fwait
inc
cs
daa
das
cmpsb
testb
insb
into
sub
xchg
cmpsl
fstpl
gs
mov
push
pop
mov
lods
and
cmp
imul
mov
lods
mov
sbb
xor
mov
iret
cld
fsub
push
cmp
mov
add
imul
push
add
pop
xchg
ret
mov
sub
ret
imul
jge
es
test
js
push
dec
ret
cmp
sarb
notl
sti
pop
pop
jo
hlt
fisttps
pop
cmp
jno
iret
push
pop
sbb
jecxz
push
or
imul
mov
sub
outsb
fs
mov
rcll
xchg
fchs
aam
xor
data16
gs
add
fstpl
push
repz
xchg
mov
push
and
mov
popf
pop
sub
test
out
cli
negl
ds
pop
repnz
icebp
mov
mov
lcall
lds
jmp
pop
outsl
in
mov
xor
sbb
mov
dec
clc
stos
scas
sti
movsl
aaa
rclb
cwtl
mov
inc
push
jmp
fiadds
scas
cmc
push
mov
push
lds
aam
xor
nop
or
fidivs
aam
jmp
ret
dec
xor
stc
sbb
push
mov
std
hlt
xor
loope
gs
fistps
je
xor
out
inc
xchg
pop
jae
push
lahf
push
bound
aas
shrb
mov
pop
int
xchg
or
jecxz
mov
sbb
push
aam
mov
cvttps2pi
jg
xor
add
fwait
xor
fisubs
jb
xchg
cmp
les
mov
and
scas
das
add
or
push
repnz
ret
xchg
not
out
es
addb
call
xchg
leave
insl
cli
mov
push
add
cmc
mov
shll
loope
jb
rorl
cwtl
popf
jne
daa
bound
pop
cld
push
dec
sbb
mov
fs
sub
repnz
fs
mov
adc
mov
add
jecxz
daa
or
sti
out
clc
sbb
dec
mov
cmp
nop
lahf
add
loope
push
out
dec
xor
les
fstps
mov
sbbl
adc
in
aaa
cmp
pop
std
cmp
pusha
push
sar
dec
inc
xlat
sub
xor
pop
je
mov
je
fwait
pop
shrl
and
std
push
mov
and
imul
icebp
xor
stos
cmovp
cmp
outsb
aas
ds
cmp
sub
push
loopne
sahf
or
call
jp
mov
inc
mov
xchg
or
inc
lds
add
in
inc
lcall
dec
ljmp
push
es
in
xchg
filds
push
mov
mov
and
push
pop
mov
xchg
xchg
and
cmc
nop
jmp
int3
dec
push
ret
dec
cs
cmc
cmpsl
mov
lods
sub
out
mov
in
sub
mov
sti
ja
pop
sub
or
adc
jmp
jp
arpl
scas
xchg
add
cmp
pusha
test
scas
push
addr16
inc
inc
cmp
sub
in
xor
lret
cmpsl
pop
mov
iret
cld
xchg
and
jecxz
dec
dec
pop
ret
insl
adc
inc
xchg
daa
add
mov
xor
sarb
sbb
or
mov
cltd
jb
mov
ret
xchg
fiaddl
pop
mov
sub
orl
movb
aas
mov
cs
mov
push
fists
sti
pop
jge
das
sahf
push
mov
xor
mov
mov
jae
xchg
insl
out
push
cmpsl
xor
push
in
jno
inc
pop
dec
in
xchg
imul
sbb
cmp
fs
and
xchg
inc
stos
nopl
scas
pop
dec
cmp
es
xchg
inc
jbe
ret
bound
outsl
and
lret
mov
add
jb
dec
inc
stos
movsl
cli
pop
and
mov
sub
popf
add
or
push
into
testl
inc
aad
mov
dec
clc
jbe
fnsave
cltd
mov
mov
ds
xchg
mov
adc
jg
sub
loope
push
dec
out
sbb
push
and
inc
and
nop
rcll
mov
xchg
jmp
insl
xchg
dec
aaa
data16
or
or
outsb
sub
cld
pop
and
mov
pop
xor
dec
lret
sti
mov
pop
stos
int
inc
jnp
push
clc
or
inc
jnp
mov
hlt
push
mov
fmull
outsl
jg
mov
push
sarb
call
adc
fimuls
ds
bound
icebp
aas
add
add
jbe
jmp
lds
divb
and
movsl
lods
or
scas
or
enter
pop
lret
xrelease
das
popa
mov
sub
out
loope
jo
and
sbb
arpl
mov
subl
addb
xchg
fimull
push
pop
popa
dec
hlt
ds
mov
cli
xor
push
rcll
aas
mov
cmp
add
adc
sbb
mov
mov
mulb
inc
loop
lea
rclb
adc
loope
ljmp
mov
fcomps
inc
arpl
adc
push
mov
jb
in
adc
and
pop
test
nop
xor
adc
bound
adc
into
mov
mov
vorps
aas
iret
repnz
push
pusha
jge
pop
cmp
cwtl
add
scas
and
add
xchg
jbe
jecxz
xchg
popf
mov
adc
add
adc
inc
iret
int
sub
int
nop
clc
sbb
inc
mov
adc
jnp
jbe
es
add
loopne
cmp
test
jge
ret
or
lods
dec
es
sbb
insb
lods
adcb
in
mov
jo
lods
and
insb
ss
lock
pop
dec
sbb
stc
ljmp
iret
mov
fldl
and
add
or
jns
dec
rorl
xchg
and
dec
pop
aam
push
mov
clc
frstor
adc
loope
addr16
jmp
repnz
fdivr
or
cwtl
stc
inc
inc
push
popf
adc
add
inc
sahf
jae
and
pop
aam
icebp
jns
loop
xor
out
and
mov
cmp
lret
cltd
cs
or
jbe
je
mov
mov
jl
pop
cld
sbb
imul
mov
jl
mov
lret
int
push
mov
or
push
sub
sbb
xchg
or
mov
lret
std
popf
es
xlat
imul
in
cmpsb
and
outsw
sub
iret
aam
sub
fs
imul
xchg
lret
xor
push
mov
andb
or
xor
xchg
jmp
add
in
jp
dec
and
mov
jae
sub
push
outsb
fsubr
sbb
mov
pop
pop
sbb
and
dec
out
int
xchg
loopne
fnstcw
jmp
hlt
dec
dec
cmp
dec
push
arpl
mov
jo
rcrb
pusha
adc
jg
sub
dec
cmp
jbe
sbb
jns
sub
lret
out
push
pop
push
xor
or
xchg
mov
mov
dec
mov
dec
aad
repz
mov
inc
cmp
pop
add
loop
adc
pop
addr16
stos
sub
es
and
jno
mov
int3
or
push
xchg
fcomip
sbb
pop
adc
pop
jmp
xchg
xchg
rol
std
insl
jbe
jmp
dec
push
add
imul
scas
clc
mov
xchg
pop
push
jecxz
cwtl
push
sbb
xor
dec
lods
lcall
shll
repnz
aaa
pusha
or
lcall
rol
in
lahf
lods
out
loop
cmpsl
jbe
fnstsw
out
jbe
shl
lods
in
xor
clc
stc
mov
push
adc
in
mov
jmp
cmp
clc
test
jg
cmp
in
outsl
enter
add
mov
push
pop
in
mov
cmp
aam
sarb
mov
cmp
jmp
xchg
sbb
int
lods
push
addr16
sbbl
movsb
lock
push
stos
cmp
xlat
repnz
pop
mov
add
mov
mov
fs
adc
ja
sub
aas
movl
aam
lret
jl
sbb
jbe
int
mov
js
sub
and
pop
aad
rolb
xchg
jnp
push
dec
mov
or
fwait
scas
sbb
xchg
cmp
lds
mov
xor
mov
cmpsl
out
enter
dec
std
mov
mov
sbb
mov
adc
es
mov
xchg
cmpsl
dec
cld
loopne,pn
sub
into
or
pop
or
mov
mov
das
stos
in
out
stos
cmp
pop
fs
jae
adc
jmp
outsb
push
incl
xor
push
movups
push
cs
inc
in
push
out
aad
fldl
out
push
or
sahf
jne
inc
lods
fmuls
mov
stos
gs
cli
jmp
cmp
mov
mov
or
lcall
mov
fcompp
jns
dec
daa
dec
iret
das
nop
xor
push
inc
andl
aam
and
or
pop
adc
mov
cmpsb
cmpsl
lods
leave
loopne
push
xor
lods
std
adc
dec
jge
test
fdivrl
jl
cli
test
frstor
mov
sub
arpl
js
mov
push
jbe
sub
xor
jns
insb
mov
inc
or
sbb
xorl
add
stc
mov
push
ds
and
in
sbb
sar
xor
rolb
jge
fdivl
and
cmp
sub
insb
cmpsl
xchg
mov
ss
sub
or
push
dec
xchg
mov
fisubl
arpl
ret
cmpsl
mov
fisubrl
or
pop
jmp
test
fnstsw
and
xchg
or
iret
xchg
pop
fstpl
sbb
add
jge
lcall
sub
mov
call
cmp
movsb
enter
sub
es
lods
pop
adc
mov
dec
popa
idiv
movsl
dec
push
test
das
lds
xchg
std
mov
subl
xor
sbb
aas
outsb
dec
daa
jne
adc
inc
sub
dec
inc
pushf
cmpsb
outsb
xchg
push
cmc
lahf
inc
arpl
addb
popf
insl
and
stc
sbb
push
les
outsb
sbb
out
fwait
lcall
jl
mov
mov
jle
cmp
out
rcll
adc
sti
push
xor
out
jecxz
sub
jnp
mov
sub
sub
es
insb
mov
mov
jbe
jbe
cmp
push
xor
scas
or
repnz
stos
cld
inc
scas
insl
scas
xchg
add
mov
mov
push
std
fiaddl
cmpsb
or
push
cld
cmp
or
repnz
add
je
mov
push
push
gs
xchg
inc
xorb
aas
dec
ds
xor
pusha
mov
imul
xchg
stc
lds
test
scas
pop
roll
and
dec
jae
push
into
lret
dec
push
popa
or
lcall
adcb
stos
mov
push
pop
ljmp
fmul
add
or
mov
loop
xchg
nop
pop
shrl
jae
test
lock
xchg
leave
inc
push
mov
movsl
mov
out
inc
xchg
mov
mov
push
aam
pushf
mov
pop
aad
or
cli
clc
enter
push
lcall
sub
sbb
stos
out
fmul
popf
inc
xchg
mov
out
inc
outsl
and
stos
loopne
iret
test
pushf
and
mov
loope
stos
push
mov
xlat
das
stc
pop
loop
push
fdivrl
push
outsb
iret
mov
movsb
std
sbbb
movsb
pop
stos
mov
sbb
lcall
les
pop
add
cmp
aaa
movl
std
or
nop
push
jp
rolb
inc
sbb
mov
cmp
mov
scas
and
aas
adc
inc
jno
mov
leave
cld
sbb
int3
mov
xor
aam
and
fwait
jle
and
push
xchg
or
add
or
push
dec
ds
into
xor
dec
jl
sbb
lods
shll
test
cmp
mov
hlt
aad
lea
pusha
inc
add
jo
es
adc
xor
adc
or
inc
sub
mov
push
aam
aam
pop
mov
lds
add
ja
xor
pop
mov
dec
lahf
ljmp
call
mov
incl
pop
outsl
shrb
in
mov
lret
das
mov
mov
pop
out
push
in
nop
push
sbb
imul
aas
int
ja
fcomps
js
push
sbb
sub
fisttps
jle
pusha
mov
test
dec
ds
jne
insb
loop
mov
clc
lea
popa
mov
mov
lret
arpl
sahf
insb
pop
jecxz
and
jo
adc
inc
flds
cmpsb
push
lret
mov
jnp
xchg
mov
dec
lahf
sub
fs
or
lock
stos
and
mov
sbb
lret
xchg
adcl
test
aad
and
sti
in
cwtl
mov
leave
loopne
mov
ret
dec
jmp
adc
stos
lcall
pop
leave
dec
xchg
js
mov
test
push
xor
or
jno
popa
aas
add
xor
cmp
lods
jns
rorb
cli
out
jmp
cmpsl
sarb
mov
lock
jae
pop
adc
add
add
mov
pop
or
fmuls
mov
push
jle
jmp
imul
dec
rcll
pop
cmp
leave
sub
dec
or
arpl
cmc
push
mov
mov
add
outsb
push
dec
cmpsb
vmovq
call
aaa
movsb
push
sarl
sub
pcmpgtw
inc
out
rol
ds
imul
xchg
nop
lret
sbb
jp
push
mov
sbb
scas
repnz
xlat
xchg
xchg
push
fwait
in
adc
iret
dec
inc
inc
xorl
add
xor
adc
lcall
rorb
dec
les
and
lods
fidivrs
pop
movsb
cmp
cltd
idivb
jns
or
inc
cld
add
push
loope
push
sub
stc
mov
mov
outsb
decl
adc
jno
mov
cld
xor
pop
loope
push
es
ret
call
pop
lahf
cmp
and
rorb
js
xor
and
dec
stos
cmc
cli
mov
test
dec
push
sbb
flds
mov
daa
adcl
jo
jmp
push
aaa
xor
mov
push
cs
rcl
pusha
jg
mov
xor
xchg
lret
scas
cmp
pop
in
scas
mov
aam
dec
std
aas
adc
sub
xor
notb
pop
out
sbb
mov
arpl
sbb
mov
test
ret
out
cmp
dec
sub
jo
xchg
xchg
or
cmp
add
sub
dec
jae
insl
js
push
loopne
cmp
ficomps
push
cmpsb
sub
jp
xlat
sub
mov
cmp
xchg
xor
out
xor
ss
sbb
push
jecxz
aaa
fcomps
gs
aas
testl
fmull
inc
es
daa
mov
xcrypt-ctr
cmpsl
pop
jae
es
pop
jmp
mov
loop
sahf
cld
or
int
jno,pt
in
addr16
sub
loopne
outsb
sub
cmpsb
lret
and
testl
es
sahf
xchg
fisubl
xor
out
or
aaa
push
incl
sahf
cwtl
mov
push
xor
jge
data16
mov
pushf
fistps
fs
push
mov
mov
js
into
and
ljmp
adc
lcall
cmpl
inc
fimull
jne
mov
ljmp
add
outsb
adc
enter
adc
aam
jg
mov
fwait
imul
cmc
addr16
ret
arpl
cmp
movsl
jle
das
jl
mov
or
lock
adc
jae
je
enter
cs
pop
jle
adc
insb
push
fcmovb
sbb
pusha
xchg
add
add
mov
pop
mov
in
lcall
scas
fs
lret
mov
jnp
xor
scas
mov
repz
push
orb
jle
fisubrl
jns
xchg
or
hlt
jecxz
pop
jne
out
xchg
xor
push
sbb
andb
inc
lcall
gs
mov
ds
sub
movl
jle
aad
enter
repz
addr16
xchg
sbb
mov
mov
xchg
popf
add
hlt
add
mov
sbb
dec
xchg
int
sbb
cmp
lea
xchg
loope
push
ret
dec
sbb
loopne
mov
or
mov
jmp
add
stos
inc
imul
fwait
and
out
adc
cltd
rcll
clc
dec
hlt
test
xor
push
pop
adc
mov
shll
sbb
xchg
loop
ds
and
iret
mov
mov
mov
jge
and
mov
lahf
push
leave
inc
rolb
pop
into
xor
xchg
sbb
jb
jnp
cltd
xor
jnp
xchg
cmp
out
aas
push
mov
inc
out
outsl
dec
sub
test
sbb
mov
sub
lret
dec
fists
jo
inc
xlat
jge
ja
scas
ficoml
movsl
das
cmp
dec
int
sti
sbb
pop
push
mov
pushf
add
test
sbb
loopne
fstpl
xor
cli
std
jb
xchg
pusha
adc
and
and
xchg
out
ds
or
mov
lods
shlb
mov
dec
out
xlat
and
rcrb
inc
mov
jb
cmp
sbb
xor
aaa
jl
push
les
test
mov
pop
test
add
clc
add
jno
inc
sarl
xor
lods
out
adc
sbb
mov
adc
test
lock
mov
bsf
adc
and
loop
test
pop
cmp
popf
sub
xchg
psrlw
mov
jge,pn
sbb
cmpsl
jecxz
or
pop
jnp
mov
add
cmp
jle
scas
orl
push
popw
cmp
in
sub
cmp
pop
add
sub
testb
and
adc
mov
inc
xchg
inc
andl
xor
mov
push
fsubs
ss
cs
inc
pop
mov
or
jns
scas
push
movsb
mov
jo
in
lret
sub
jmp
mov
xor
stos
jp
mov
out
into
in
or
std
ret
push
fcomps
imul
incl
sbb
sub
cmc
xchg
jne
add
mov
dec
pop
mov
and
repnz
jmp
outsl
xchg
test
imul
adc
sbb
pop
adc
mov
ror
cmc
jne
jle
test
gs
sub
jl
int
clc
shlb
sbb
insl
mov
in
fstpt
mov
xchg
andl
outsl
push
mov
pushf
inc
xor
sbb
negb
dec
adc
push
sbb
push
jae
jle
imul
ds
add
push
mov
mov
pop
ror
fnstsw
repz
fcom
mov
jp
add
sbb
int3
inc
fwait
or
cli
mov
outsl
es
sub
or
dec
pop
in
pop
div
imul
dec
movsl
repnz
inc
es
roll
movsb
mov
mov
cld
or
mov
roll
testl
std
loope
loopne
out
out
cmp
push
sub
sub
jns
xchg
nop
loopne
xchg
imul
mov
xchg
mov
and
pop
fisttpl
inc
mov
addb
fisttpll
setl
popa
dec
lea
out
iret
loope
mov
into
cli
ja
int
lds
xor
pop
sbb
xor
fisubs
scas
scas
xchg
push
fstpl
clc
das
int
xchg
lcall
mov
loop
rcll
pop
pop
or
ljmp
push
xchg
lcall
repz
shrl
std
cmp
sbb
xchg
repnz
shlb
nop
bound
xchg
in
lods
jecxz
xchg
movsl
repz
push
addb
cmc
dec
cmpsb
jl
lcall
dec
mov
jne
sahf
xor
add
push
sub
mov
test
xchg
mov
sbb
fnstenv
jb
shl
lds
and
mov
mov
jge
aas
loop
out
push
dec
or
scas
cmp
mov
out
sbbb
sbb
mov
or
dec
inc
inc
push
push
lahf
daa
xchg
out
leave
mov
out
iret
ja
test
mov
add
lahf
add
mov
incb
add
je
sbb
das
add
ret
xchg
xchg
mov
mov
sub
and
sbb
mov
push
cmp
xor
pop
inc
cld
stc
push
xchg
add
movsb
iret
or
arpl
shrb
dec
adc
push
setae
or
sub
push
jb
xor
gs
into
and
jl
mov
cmp
popa
mov
sbb
xchg
test
enter
jle
ljmp
inc
add
jae
es
cmc
push
stos
push
mov
mov
fistl
stc
loop
fcmovne
ss
loope
xor
out
lahf
andb
mov
sub
xchg
sbb
cmp
inc
out
imul
mov
sahf
arpl
stc
mov
push
pop
jp
adc
pop
mov
inc
scas
stc
mov
xor
jecxz
adcl
inc
lret
es
decl
jno
push
insb
cmpsl
adc
inc
popf
mov
mov
inc
sub
imul
mov
xchg
cmc
sbb
lret
and
cmp
leave
sarl
cmpsl
sbb
jns
lea
xor
outsb
jne,pt
push
inc
mov
jns
jbe
add
cmpsl
insl
shll
ret
sarb
idivl
notb
ret
test
sarb
jmp
push
mov
fwait
mov
xor
sub
clc
shl
xor
fnsave
pop
cmp
lcall
and
xor
xchg
into
aaa
cmp
jno
insb
jge
aaa
sub
xchg
mov
add
mov
rclb
aad
lret
insb
ss
cmp
or
cltd
cmp
aam
jbe
ret
ret
dec
stos
and
lret
mov
xor
nop
jnp
repnz
jne
ret
stos
std
jne
xchg
cmp
or
pop
loopne
cmp
int3
cmpb
xchg
jle
pop
xchg
data16
out
mov
pop
ljmp
mov
loopne
mov
jno
mov
fdiv
pop
mov
adc
push
inc
cmc
pop
ds
inc
mov
jae
int
xor
fs
pop
aam
add
and
daa
pushf
mov
pop
mov
test
ret
movsb
jo
leave
sub
daa
insb
jns
push
in
dec
fcompl
pop
xor
inc
dec
xchg
xchg
xchg
inc
pop
pop
fcomi
ret
sub
stos
mov
xchg
pop
test
jmp
dec
jge
cmp
repnz
test
push
cmp
mov
xor
stc
stos
aaa
subb
adc
loope
adc
gs
jns
xchg
push
hlt
jno
pop
addr16
cld
mov
mov
xchg
clc
jae
pmulhuw
arpl
inc
push
dec
lock
add
xchg
ja
sbb
pop
sbb
loop
repnz
daa
nop
sbb
pop
add
jmp
xor
cs
xchg
leave
mov
int3
cltd
sbb
adc
in
cs
es
popaw
cwtl
xchg
add
cmpsl
xchg
lds
je
dec
loope
nop
nop
push
jg
inc
lret
xor
pop
and
lock
inc
cmp
outsl
cmp
sbb
xchg
popa
inc
xor
insb
lahf
push
push
lock
lret
aam
pop
ret
into
xchg
rcr
and
pop
xchg
push
xchg
inc
notl
jb
std
or
jne
mov
ret
add
daa
lods
jno
dec
and
mov
insb
add
add
incl
or
loopne
mov
pop
out
mov
pop
divl
insb
roll
lds
popa
mov
adc
pop
xor
mov
fisubl
xchg
cld
loopne
fiaddl
scas
cmpsl
mov
cmp
lods
and
mov
cmpsl
iret
jl
lods
in
stos
cmp
fs
dec
rolb
iret
cltd
lds
push
arpl
loop
mov
mov
xor
ret
lock
out
lahf
mov
sahf
mov
stc
pushf
cld
push
add
mov
test
sbb
rcrb
sarl
nop
xchg
fistl
out
push
jmp
es
cmp
mov
xor
rorb
adc
sbb
int
fimuls
jmp
in
fadd
cli
mov
fidivrs
loopne
mov
cld
in
stc
lret
pop
mov
outsb
mov
insl
arpl
dec
mov
imul
mov
sbb
subl
pop
rorl
cmp
rcr
jns
insl
mov
jecxz
pop
gs
outsb
addr16
mov
dec
push
movsb
repz
loopne
add
jno
repz
int
mov
rcl
sahf
or
sub
mov
mov
mov
xor
xor
lea
lahf
add
push
inc
pop
push
shrb
mov
xor
cmp
outsl
sbb
int
mov
sbb
xor
jecxz
adc
nop
lods
lea
mov
pop
lret
sbb
dec
dec
sahf
inc
adc
int3
or
push
sarb
mov
sub
push
clc
clc
pop
sbb
arpl
and
add
xchg
icebp
cltd
jo
lea
dec
pop
mov
rcr
adc
data16
clc
hlt
mov
push
xchg
fnstenv
xchg
movsb
stos
xor
repnz
test
repz
add
mov
push
xlat
xor
add
adc
jnp
xlat
jle
ss
jns
mov
fisubs
pushf
shll
xor
js
inc
ds
jg
mov
jl
add
dec
lret
std
push
add
jecxz
push
jne
test
and
loopne
inc
outsl
or
outsl
jb
popf
mov
xchg
lret
xor
fs
dec
mov
js
movsl
bound
jg
xchg
jne
push
sbb
mov
in
mov
jns
je
inc
rcl
mov
xor
and
dec
dec
fcomps
in
adc
inc
imul
scas
pop
dec
xchg
add
orb
mov
and
shrl
gs
adc
shl
pusha
in
stos
shll
out
jne
mov
aas
add
sti
rorb
in
push
aad
fiaddl
xchg
aas
mov
add
imul
js
imul
add
jp
mov
xchg
jp
repnz
mov
mov
lds
cmp
and
sbb
lock
aad
push
push
mov
sbb
inc
lcall
nop
sti
hlt
data16
inc
cmpsl
in
and
mov
or
div
xchg
adc
movsl
jno
adc
andl
and
dec
xchg
mov
mov
dec
xchg
loope
mulb
testl
incb
fildl
int3
sub
lret
dec
jnp
imul
and
std
loopne
mov
stc
mov
mov
fidivs
in
mov
js
xadd
cwtl
pop
pushf
jno
and
add
ret
cmp
xor
js
add
xchg
push
push
pop
add
or
mov
rcll
and
ds
adc
clc
xchg
sbb
inc
or
ret
lcall
jecxz
add
xchg
xchg
ret
jl
idivl
and
xor
or
lea
push
push
sub
jmp
testb
mov
ja
shl
or
add
cmp
fldcw
and
cmp
or
mov
push
jne
sub
pushf
shlb
push
stos
mov
ss
mov
mov
sub
setg
push
push
xchg
inc
lahf
xor
jo
add
xchg
scas
leave
or
xchg
jbe
decb
or
loop
in
es
sbb
enter
jae
pop
jg
mov
mov
mov
fdivr
jp
lods
adc
ljmp
stos
test
shl
push
fldt
inc
mov
les
mov
fadds
sub
cmpsl
cmpsb
pushf
mov
or
or
cld
lds
cmpsl
xor
push
mov
or
aaa
lahf
jecxz
jno
bound
insl
sub
xor
stc
lcall
cltd
mov
notb
loop
add
out
push
cmp
loop
scas
mov
xlat
push
and
jb
loop
ds
pushf
pop
jb
fidivs
inc
test
sub
out
pusha
and
and
js
clc
test
add
ret
xchg
add
clc
enter
sub
inc
lret
popf
or
xchg
jo
push
loop
inc
lcall
sbb
pop
sbb
repnz
lock
adc
data16
cmc
jmp
out
leave
xchg
add
adc
out
loopne
scas
cmp
inc
clc
insl
sub
pop
idivl
sub
popf
sub
fcoml
push
hlt
ret
pushf
je,pn
add
lret
lahf
xchg
push
add
fimull
cmp
sti
dec
jmp
dec
jne
add
xor
pop
ret
mov
xlat
dec
ret
mov
cmp
push
mov
ret
decl
loopne
ja
sahf
pop
ret
fidivrs
mov
sbb
cmp
cmc
loope
pop
fildll
addr16
jnp
arpl
jmp
aas
shrb
jbe
sub
push
fwait
sbb
mov
addr16
popf
jns
je
daa
addr16
call
mov
mov
inc
dec
insb
mov
setp
addr16
add
cld
inc
in
stos
cmp
sahf
add
push
dec
adc
fdivl
shlb
cmp
jecxz
in
jmp
cs
sub
and
out
je
fsts
and
push
lret
popa
xchg
pop
fmuls
cmp
dec
fwait
inc
sti
shr
ret
cmp
decb
nop
mov
subb
ret
js
addr16
rorl
and
push
movsl
popa
aam
push
aas
add
pop
mov
cmp
push
adc
lret
mulb
adc
lods
test
pop
or
xchg
das
into
scas
frstor
sbb
leave
jbe
loop
sub
mov
iret
sbb
daa
int3
nop
and
sbbl
jns
pop
jg
mov
xchg
mov
or
add
test
jle
fimuls
cmp
push
mov
sbb
leave
fs
jne
jb
inc
push
jns
mov
jnp
out
popa
dec
pop
repnz
mov
xchg
repnz
cwtl
test
xchg
in
movsl
nop
and
pop
loope
psubsb
lret
push
repnz
lods
mov
add
push
jmp
enter
lock
bound
rcrl
or
mov
mov
jno
leave
fcomi
cmp
imul
mov
add
add
in
mov
pop
jl
push
pop
adc
ror
or
jbe
leave
sub
lea
dec
into
jnp
idivl
mov
xor
pop
xchg
es
jecxz
xchg
clc
cs
aaa
push
pop
addr16
aad
adc
mov
test
enter
outsl
sbb
imul
mov
outsb
inc
mov
mov
int3
lock
jb
cmp
sub
aaa
test
jecxz
push
dec
loopne
and
lds
pushf
fmull
pop
sub
or
xlat
cmp
jg
jp
mov
insb
data16
inc
fsubl
push
jns
push
mov
sbb
ret
dec
pop
or
inc
jmp
ret
jmp
imull
jns
negl
mov
arpl
mov
cltd
ds
lods
dec
cmpsb
push
mov
jmp
int3
xlat
outsl
lock
in
mov
mov
xchg
std
les
mov
movsl
in
pop
or
mov
mov
out
or
inc
sub
pop
fstpl
stos
mov
rcrl
jp
mov
shlb
mov
fdivs
jbe
cmp
jo
sub
xor
mov
popf
jbe
popf
and
mov
add
into
mov
lret
inc
imul
xchg
lds
push
repnz
rcl
ja
inc
push
test
cmp
pop
inc
jbe
push
shll
into
mov
fstpl
and
or
outsb
loop
pop
push
cld
and
dec
fisubrs
aad
lods
sbb
fmuls
jnp
adc
fisttpll
fucomi
insb
fcmovnbe
scas
fs
lods
adc
cmpsb
aas
in
add
orl
xlat
cltd
mov
inc
loopne
outsl
pop
popa
xor
pop
and
scas
dec
fstpt
jge
cmp
jnp
mov
jns
outsb
xchg
lret
aad
icebp
fimuls
mov
fwait
sub
xor
nop
aaa
shll
ficompl
dec
and
es
mov
enter
inc
xchg
cmp
fldl
scas
adc
icebp
xchg
mov
xchg
jle
lret
repz
push
mov
cltd
mov
adc
pusha
xchg
mov
pop
mov
or
jg
mov
adc
rorb
jnp
test
imulb
jno
clc
mov
mov
shl
xor
ret
stc
sub
jnp
or
out
and
cmp
ficomps
cmp
mov
scas
push
dec
pop
mov
stc
mov
orl
and
fwait
pusha
out
fimuls
inc
add
or
or
adc
sbb
push
push
push
jne
add
jecxz
gs
mov
into
gs
lods
out
clc
and
fnsave
leave
jp
xchg
rorb
mov
xor
push
push
add
gs
pop
and
out
or
sub
xchg
mov
inc
xchg
popf
shll
std
add
inc
sub
and
cmp
fcomp
stc
stos
add
or
dec
mov
movsl
xor
adc
arpl
mov
jae
xchg
call
mov
jns
add
insb
xorl
test
lods
or
xor
in
inc
push
in
test
mov
xchg
nop
cltd
sahf
aaa
jne
inc
xor
xchg
xor
xor
inc
fists
mov
push
jns
es
mov
leave
subb
adcb
ror
mov
xor
in
pusha
mov
out
inc
fcmovnu
scas
fdivrs
jo
rcrl
dec
pop
pop
fwait
and
jecxz
out
sahf
je
cmpsl
push
mov
insb
lock
rcll
sub
cmp
inc
fcompl
enter
sahf
xchg
mov
mov
mov
xadd
inc
movsb
add
add
les
sbb
or
movsb
sbb
jb
pop
dec
int
cmp
out
sahf
aas
lss
lods
sbb
mov
orb
fisttps
fnstenv
adc
and
xor
testl
jmp
adcb
in
add
popf
sbb
mov
stos
and
dec
and
cwtl
and
jle
mov
clc
fdivs
pop
sbb
adc
add
lods
je
leave
bnd
add
lock
hlt
in
lds
mov
les
add
pop
bound
cmp
inc
call
mov
test
xchg
cli
pushf
inc
and
js
dec
popl
shrl
mov
test
das
into
cmp
jp
jnp
pslld
or
pop
dec
aas
js
insb
add
cmpsb
jb
push
jnp
cmp
fiadds
mov
and
ret
sub
mov
jp
or
sti
sub
push
mov
das
ljmp
pop
fiadds
adc
fldcw
mov
scas
add
cwtl
sarl
or
ret
movsl
mov
sbb
mov
mov
ss
frstor
outsl
mov
mov
stos
mov
cmp
jmp
imul
incl
je
xchg
cld
cwtl
fimull
scas
fcomps
lock
hlt
and
in
jb
pop
out
lret
ds
sub
in
ja
cmp
aam
dec
add
lcall
ss
repnz
xor
mov
into
xchg
inc
dec
jb
int
lds
inc
push
int3
jne
in
cmp
mov
negb
add
mov
xlat
sti
or
mov
xchg
adc
shl
test
push
dec
outsl
pop
fldl
push
filds
cmp
jmp
cmpsb
sbb
incl
je
pop
fsubrs
aad
clc
inc
cmp
lret
lds
cs
outsb
mov
rcrb
push
es
es
cmc
ret
dec
imul
and
imul
stc
arpl
xchg
arpl
imul
push
test
mov
or
loop
sarb
adc
out
dec
aaa
mov
adc
cmc
mov
jae
xor
dec
xchg
hlt
xor
scas
inc
inc
or
adc
sar
xor
adc
outsb
addr16
mov
cmp
popa
stc
imul
xchg
mov
jns
repz
fimull
or
ja
mov
nop
cmp
cmp
fistl
pop
into
xchg
lods
fisttpll
lds
js
mov
and
or
test
or
ljmp
rclb
popf
les
mov
cmp
es
fbstp
xchg
mov
sub
lods
mov
into
adc
imul
pop
mov
jp
add
add
leave
scas
jb
imul
es
std
mov
xchg
push
loopne
lock
aas
sbb
mov
insl
dec
xchg
xchg
mov
mov
sbb
pop
push
aad
inc
adc
mov
xchg
iret
or
dec
and
add
enter
push
jge
sar
fdivl
inc
sbb
dec
mov
leave
mov
mov
or
xchg
lods
xchg
xor
idivb
inc
and
cmpsl
in
insl
popf
and
and
mov
mov
push
das
aas
fisttpl
mov
add
pusha
clc
subb
movsb
aaa
test
push
repz
repnz
push
into
jo
xlat
lods
shlb
cmp
xchg
jno
dec
and
jnp
add
xor
jbe
mov
stos
stc
and
mov
jg
or
ljmp
mov
fcoms
arpl
out
loop
in
movsl
inc
mov
push
mov
fldenv
sahf
stos
je
xchg
push
incl
xchg
mov
cmpsl
xor
lcall
iret
iret
mov
lds
aaa
xlat
rcrb
inc
add
xor
pop
mov
fwait
add
jne,pn
fisubl
in
inc
add
imul
popa
clc
mov
sbb
repz
cmp
mov
test
scas
pop
mov
scas
fimuls
in
cmp
call
and
movsb
aad
or
in
call
lock
push
push
add
pop
lahf
pop
push
pushf
and
dec
or
dec
neg
xchg
adc
or
aam
push
or
cmp
lods
loop
test
fdivrl
imul
out
xchg
shr
inc
les
push
sub
and
xor
xchg
pushf
jo
mov
sbb
rclb
push
xor
or
mov
and
fistl
xchg
sbb
repnz
hlt
aad
inc
outsl
inc
add
imulb
dec
xor
scas
pop
fisttpll
popf
iret
jb
mov
repz
jg
inc
jmp
jle
addr16
xor
jbe
and
out
push
add
pop
les
bound
sbbb
jle
push
dec
mov
hlt
popa
xchg
pop
push
outsb
idiv
imul
push
lods
mov
inc
mov
pop
jae
add
pushf
mov
mov
std
sub
inc
outsl
inc
xor
jmp
repz
repnz
xor
inc
adc
popa
scas
push
xor
mov
lock
lods
sub
iret
fwait
push
push
lds
iret
mov
lret
sub
dec
fisubrs
sbb
add
pop
jle
stc
mov
fistpl
dec
xchg
popa
jmp
dec
icebp
or
add
or
jb
xchg
push
ret
decl
fisubl
test
cwtl
or
fldcw
mov
out
push
icebp
adcl
jp
xchg
js
outsb
ljmp
add
ds
test
and
les
pushf
das
mov
mov
sbb
cmpsb
mov
insl
hlt
test
mov
push
mov
push
jno
idivl
mov
mov
sbb
cmp
nop
mov
jb
in
adcb
decb
cmc
xchg
xchg
push
add
xlat
cmpsb
xchg
cmp
enter
rcrl
mov
push
leave
cmp
mov
lcall
push
jbe
or
jbe
pop
jb
mull
lret
push
cli
adc
jg
dec
add
sar
jecxz
jb
loopne
jo
in
jg
or
sub
cs
or
xor
adc
rolw
push
int3
shl
test
xchg
shlb
dec
lret
sub
and
in
movsl
push
jp
mov
jg
daa
and
lods
aas
loop
push
xchg
or
and
pop
icebp
rorl
sub
mov
mov
lock
mov
push
sub
and
imul
outsl
push
ror
rclb
sarb
pop
sti
cld
add
push
mov
test
in
jecxz
or
pusha
and
divl
pop
mov
arpl
mov
popf
xchg
mov
mov
add
insb
cmp
popa
mov
adc
and
mov
push
rorl
decl
nop
negb
adc
sahf
xorl
jp,pt
jb
js
inc
and
jnp
mov
sbb
aam
mov
cltd
pop
mov
pinsrw
jnp
and
mov
movsb
xor
dec
sub
mov
mov
outsl
das
or
mov
adcb
sti
je
push
addl
lock
push
outsb
push
push
mov
adc
sarb
outsl
mov
mov
imul
push
inc
iret
iret
xor
scas
jmp
je
arpl
mov
jo
and
adc
fimull
andb
call
movsb
push
lock
ds
popa
and
pop
or
jmp
and
xor
fisubs
insb
shl
loopne
adc
push
mov
dec
cwtl
incl
pop
je,pt
out
stc
pushf
or
fwait
push
ret
mov
andl
jp
jb
cmp
mov
loopne
mov
out
scas
xor
sub
mov
or
dec
mov
pop
adc
xchg
lock
adc
insl
cld
xor
out
mov
fcom
inc
sub
push
stos
inc
sbb
rcl
xchg
test
cmp
pop
cmpxchg
cmp
test
les
fs
mov
call
mov
or
rolb
xor
mov
xor
test
sbb
data16
insl
sti
sbb
pop
ret
mov
push
inc
cmp
addr16
jne
aad
mov
jns
dec
int
mov
jp
je
sub
add
mov
jne
ss
ret
xchg
movsl
cld
jb
push
lret
xorl
movsl
dec
or
test
lea
shlb
flds
fimuls
dec
je
clc
in
or
rcrb
call
movsl
jmp
ficomps
inc
shrl
test
sahf
mov
and
addl
push
js
sbb
mov
idiv
pop
cmpsl
mov
stos
cmp
mov
mov
outsl
mov
ret
lods
rol
or
shlb
inc
mov
xlat
int
inc
add
mov
sub
mov
xchg
ds
inc
add
lret
lods
iret
sarb
out
adc
in
jg
out
fists
insb
das
mov
mov
mov
and
cmp
out
cltd
xchg
insb
mov
mov
loope
dec
jb
enter
and
pop
or
fwait
ret
or
pop
inc
gs
inc
cli
test
mov
ljmp
dec
xor
adc
xorl
fadds
insl
shll
push
or
stos
push
add
lds
ja
lahf
lret
loope
fildl
repnz
sub
in
js
out
lods
mov
mov
and
adc
inc
and
or
pop
icebp
mov
inc
test
jecxz
jno
call
and
lods
cmp
testl
add
dec
jp
inc
fidivrs
jb
aaa
inc
hlt
cmpb
push
dec
dec
mov
data16
negb
mov
sub
scas
cmp
sbb
orl
jmp
out
int
dec
iret
sub
xchg
xchg
in
loop
dec
jno
movsl
push
jbe
cwtl
das
jge
fcoml
push
and
rol
xchg
jg,pn
outsb
gs
push
inc
push
cltd
lods
movsb
sahf
lahf
test
cmp
test
xor
dec
outsl
roll
cmpsl
sbb
gs
icebp
mov
aam
or
adc
or
cmpsl
xlat
imul
sti
inc
cli
pop
adc
xlat
std
push
loopnew
fdivr
not
aam
outsb
and
mov
mov
mov
xchg
or
push
mov
or
push
dec
mov
sub
mov
test
dec
daa
push
in
pop
movd
pop
popa
in
xchg
shrb
cmp
add
orl
inc
movsb
mov
lahf
push
mov
rcll
pop
loope
daa
mov
push
jns
and
push
fdivp
xor
icebp
and
xchg
aaa
or
sbb
push
loop
push
hlt
cli
push
cmp
iret
jnp
and
leave
pop
jne
sub
es
mov
nop
mov
sbb
xor
cmp
ss
lds
dec
mov
xchg
outsl
hlt
dec
push
xor
jne
mov
cvttps2pi
xor
jecxz
mov
sub
arpl
and
lods
adc
sbb
pop
aas
and
fiadds
adc
shlb
push
mov
mov
jno
out
dec
cli
mov
fistpl
leave
pop
cltd
mov
mov
ja
and
xchg
mov
repz
xlat
xchg
jbe
push
outsb
dec
mov
int3
enter
cltd
loop
xor
pop
lret
mov
mov
ret
into
push
xlat
hlt
or
popf
add
inc
and
das
dec
outsl
cld
stc
push
aas
mov
cmp
pushf
icebp
pop
cmp
inc
ret
bound
out
es
mov
xor
sub
and
sub
push
rol
repnz
push
es
push
jg
pop
mov
inc
fldcw
call
stos
xchg
movsl
stos
push
ljmp
cltd
in
in
lahf
iret
xchg
std
arpl
mov
or
pusha
arpl
and
arpl
push
jno
ss
mov
leave
mov
lret
pop
dec
and
sbb
add
xchg
mov
pop
test
repz
int3
inc
mov
stos
inc
pop
fdivr
xchg
lret
cmp
and
imul
jge
push
lods
adc
push
sarb
bound
xor
jg
xor
push
adc
pop
adc
mov
add
push
add
adc
xchg
fnstsw
xchg
cmp
jmp
xchg
inc
pop
lock
and
pop
sbb
in
lret
xor
inc
les
mov
mov
and
in
xchg
aad
in
negb
adc
loope
aas
inc
xor
mov
ficoml
fstps
or
lods
cmp
push
pop
ljmp
movsl
stos
faddl
xor
insl
pop
jb
sbb
pop
mov
or
jae
mov
je
fnstsw
aas
pop
jo
add
inc
jl
sbbl
gs
ret
mov
or
fildll
outsl
loopne
adc
xchg
add
dec
push
mov
pusha
pop
repz
inc
mov
fsubrl
push
xchg
aam
jecxz
and
dec
fistl
cltd
push
inc
out
or
fldt
dec
dec
aaa
jge
xor
es
sbb
fucomp
sub
sub
aam
sahf
pusha
inc
jmp
dec
xor
mov
jmp
les
int
mov
sarb
sar
hlt
xchg
xchg
testl
pop
add
fmul
rcrl
stc
inc
jmp
js
outsl
xchg
repnz
mov
daa
loop
scas
lods
add
adc
xor
mov
pop
loopne
sub
push
cmpsb
pop
xchg
adc
dec
sub
dec
pushw
mov
lret
int
aam
jecxz
aas
jecxz
mov
rcrl
enter
push
adc
aas
test
out
push
pop
test
push
push
iret
jbe
push
mov
mov
or
jl
push
dec
int3
lds
mov
cmp
lea
sub
addr16
sub
lcall
addl
pop
lds
in
insb
out
inc
or
jle
push
pop
das
fmuls
push
jo
dec
adc
xor
stc
xchg
fildll
dec
jno
or
mov
pop
inc
test
mov
mov
addr16
insb
in
out
dec
cwtl
inc
push
std
mov
fdivrl
fsubl
xchg
xor
sbb
add
lods
iret
mov
dec
sbb
cmp
pop
sub
test
sbb
jge
es
jge
in
cmp
das
cmc
pop
aad
pop
mov
pop
inc
inc
xchg
ficoml
push
cltd
jns
fcomps
mov
fs
adc
mov
mov
jge
add
mov
xchg
jns
das
dec
mov
sbb
sub
das
xchg
push
jp
faddl
fnstsw
lds
roll
mov
add
bound
adc
push
fistpll
add
imul
imul
cltd
adc
mov
sub
nop
push
sbb
pop
dec
pop
push
mov
js
aad
pushf
mov
or
mov
sub
dec
inc
gs
insl
jmp
xor
push
mov
cmpb
inc
adc
popf
movsl
jp
popf
fcmovne
and
push
mov
fstl
filds
cld
dec
or
or
in
mov
pop
daa
jae
leave
addl
jge
pop
sarb
xor
inc
loop
fwait
notl
push
mov
or
xchg
dec
mov
js
cmpsl
pop
pop
scas
push
xchg
les
mov
inc
idivl
ret
lds
ljmp
stos
jg
jecxz
out
not
and
mov
and
scas
fbld
xchg
mov
icebp
je
cwtl
dec
pop
fstpl
jns
inc
fs
xor
cmc
dec
daa
cmp
add
outsb
mov
ret
push
std
lods
dec
inc
cmpsb
inc
movsl
cmp
or
push
mov
mov
scas
xor
frstor
dec
sub
add
and
xorl
inc
inc
fcomp
and
inc
dec
and
mov
sub
mov
ret
dec
aaa
popa
or
popf
daa
xchg
adc
movsl
lret
push
mov
pop
mov
mov
pop
dec
lods
cmp
add
push
lcall
popa
negb
mov
fucomip
adc
bound
pusha
inc
add
sahf
loope
adc
nop
roll
jno
stos
mov
jae
adc
popf
fnstsw
push
push
pushf
push
mov
cmp
movl
mov
call
or
outsb
data16
xchg
daa
pop
pop
jecxz
pop
adc
dec
xchg
jb
jne
pop
sbb
dec
call
or
pop
idivl
pop
cmp
aas
jmp
or
adc
mov
test
int
daa
fnstenv
aaa
addb
push
iret
std
jne
int3
mov
sbb
dec
push
aas
mov
sbb
adc
mov
xchg
roll
rcrl
mov
andb
dec
dec
jmp
ljmp
and
jecxz
outsb
jne
sub
push
rorl
xchg
mov
rcrb
arpl
mov
in
scas
imul
sbb
filds
subl
outsl
xchg
test
push
mov
fstpl
mov
mov
mov
jo
push
and
mov
das
dec
or
pop
insl
sbb
mov
cmp
push
dec
and
stos
adc
push
subl
inc
scas
pop
in
nop
lcall
inc
push
test
divl
pusha
push
or
leave
cmp
pop
adc
mov
push
mov
add
push
xchg
sbb
sahf
or
mov
mov
dec
push
xchg
sbb
pop
dec
mov
mov
push
sahf
dec
cs
add
mov
loope
dec
ficoms
dec
mov
out
sub
rolb
lret
cmp
and
ret
sbb
adc
and
lea
andb
fs
inc
cwtl
insl
aas
pop
imul
pop
setae
rorb
mov
sbb
pop
push
dec
xchg
jmp
stos
cwtl
cltd
fiadds
fldt
jg
pushf
test
lods
mov
push
scas
pop
push
imul
sbb
std
push
enter
in
imul
dec
lret
xchg
xor
mov
mov
sub
mov
leave
pusha
fwait
push
gs
pushf
lea
nop
fdivrl
dec
add
inc
lods
mov
sarb
cmpsb
pop
xchg
ret
cmpsb
dec
jne
stc
scas
pop
aad
sbb
aaa
int
aam
inc
pop
pop
or
jnp
fdivl
sti
mov
mov
sbb
mov
subl
push
mov
push
cmp
mov
jnp
ja
movl
mov
pop
pop
xchg
add
negl
adc
lcall
jne
aad
repnz
ret
flds
mov
cmc
xor
xor
roll
loopne
faddl
stc
popa
xchg
jo
xchg
fiadds
mov
test
pop
push
mov
push
jb
pop
sub
iret
cmp
aad
xor
push
daa
cmp
pop
loop
or
push
mov
cltd
out
pop
push
fildl
cmpb
dec
jl
lcall
and
sub
cmp
adc
push
xchg
and
ja
data16
mov
push
loopne
and
mov
add
pop
xchg
sbb
shlb
insl
lods
add
clc
sbb
sti
enter
jecxz
push
fcmovnu
hlt
pop
xlat
inc
cmp
xchg
jne
or
insb
out
and
mov
inc
mov
xchg
xchg
mov
cs
cs
loopne
aas
dec
sbb
in
jge
pop
push
push
hlt
pop
lock
jl
mov
outsb
add
mov
fimuls
in
cmp
aas
xchg
dec
push
push
and
ret
lret
sahf
adc
pop
data16
sbb
gs
xor
or
xor
pop
bound
cmp
fmulp
cltd
aad
bound
pop
dec
or
iret
jae
imul
in
in
pop
iret
pop
add
lret
and
pop
mov
jns
movsl
xchg
push
in
push
xchg
mov
subl
lds
negb
cmp
loopne
sti
dec
xchg
das
iret
pop
sub
dec
sub
dec
and
cs
in
int3
adc
push
push
sbb
lock
faddl
iret
clflush
xor
push
addr16
aam
and
sub
lret
ljmp
mov
out
arpl
jecxz
idivb
jmp
divl
xor
mov
mov
push
les
inc
jno
in
jl
lret
imull
xchg
int
les
mov
pop
ss
add
xchg
mov
jge
int
mov
lahf
mov
sub
loop
movsl
cmp
pop
rcrb
xchg
pop
xchg
and
push
push
fstps
in
pop
add
mov
push
scas
popf
jnp
nop
push
xchg
test
dec
push
mov
mov
or
mov
add
pop
and
aas
add
lods
and
cmp
push
iret
mov
mov
push
xchg
rcr
inc
mov
add
loope
xchg
cmpsl
mov
pop
xor
pop
kmovw
hlt
data16
xchg
repnz
ficomps
push
mov
mov
and
loop
mov
scas
fwait
and
lods
jnp
dec
lds
sbb
cmp
and
or
push
sahf
add
in
jp
daa
cmc
fstps
fisttps
pop
sub
pop
jnp
mov
rsqrtps
add
hlt
xchg
addb
sahf
out
sbb
out
out
iret
mov
xor
ss
dec
sahf
pushf
fcomip
adc
and
lahf
shll
int3
mov
sub
lret
lods
fnstcw
pop
pop
outsb
jp
or
testb
les
daa
je
stos
push
dec
xor
sbb
pop
cmp
hlt
lods
subl
rcrl
xchg
mov
jle
xchg
fdivs
inc
xchg
sbb
icebp
jnp
sarl
mov
cmp
jecxz
adc
lods
sbb
mov
repnz
outsb
mov
scas
push
and
jge
xchg
sub
jae
sti
pusha
jbe
in
inc
mov
cmpsl
aam
das
ret
adc
push
shlb
xor
push
insb
sbb
repnz
and
out
inc
sub
jns
mov
adc
fadds
inc
pusha
pop
pop
or
popa
mov
bound
fstl
inc
lret
xchg
xchg
xchg
fidivs
insb
pop
xchg
cmp
pop
inc
add
out
nop
mov
cld
xchg
aaa
or
push
cmp
aas
xchg
fistpll
ret
adcb
pop
sahf
outsb
or
xor
inc
push
inc
test
pop
clc
fdivl
cwtl
test
aad
jo
jle
mov
mov
mov
lods
and
call
jnp
and
pop
ret
cmc
das
mov
cld
scas
shrb
fstpl
mov
push
fistpll
cmpsb
dec
xchg
test
add
fcoms
aam
std
fisubrs
pop
xor
iret
inc
adc
or
mov
movl
rcl
add
outsl
mov
and
adc
leave
lods
imull
mov
jo
jno
push
push
shlb
das
daa
and
fsts
inc
cs
fldenv
or
cmp
and
icebp
fwait
sbb
sbb
cmp
adcb
cmc
mov
in
addr16
sub
gs
inc
xchg
outsl
mov
out
enter
push
clc
lcall
push
lock
mov
cmp
mov
sbb
sahf
lods
sbb
cmc
pusha
dec
dec
mov
cli
clc
jmp
pusha
inc
jecxz
add
dec
pushl
jnp
iret
jg
mov
jge
jmp
sub
aas
push
sahf
adc
pop
lret
lcall
mov
dec
xchg
insb
mov
icebp
jecxz
sti
imul
xor
outsb
pop
or
out
lds
push
jecxz
mov
sbb
jns
sub
ja
and
fcomi
loop
xchg
sub
mov
sub
test
cmpl
xor
xor
mov
pop
inc
cs
lret
jp
pop
test
xor
adc
pusha
mov
cld
es
iret
xchg
rcll
xlat
dec
fisubrl
pop
fcomps
and
lods
es
jns
sarl
sub
in
dec
shl
push
ss
xchg
fwait
stos
xchg
push
scas
movsl
sub
das
pop
or
out
out
cmc
dec
push
pop
push
mov
push
inc
lea
push
fbld
pusha
mov
mov
mov
movsl
aaa
sub
push
cmp
and
popa
inc
outsb
gs
test
ljmp
pop
push
rorl
rcll
lahf
out
pop
and
fcompl
sub
inc
test
pop
sbb
jmp
push
in
aas
dec
pop
loope
mov
dec
mov
jmp
mov
cmpsl
ds
loope
xor
sahf
and
sub
cmp
fsubl
sarl
pop
pusha
out
xchg
jmp
cmp
std
mov
mov
fimull
xchg
inc
ljmp
das
mov
jge
aam
fbstp
rcrl
in
cmpl
cmp
subl
inc
cmpsl
mov
mov
imul
repz
addb
call
mov
test
call
in
pop
aad
mov
and
dec
lahf
inc
dec
dec
stos
xchg
cli
jl
cmp
test
loop
cmc
imul
cli
lret
cmpsb
push
jle
mov
ret
flds
fisubrl
xchg
pop
or
pop
xlat
cmpb
mov
jbe
jae
out
test
push
fldenv
andps
ds
rolb
dec
ja
lret
idiv
lds
mov
xor
mov
outsb
mov
mov
ret
cmp
lods
test
push
int
sbbb
add
test
pop
insb
seta
dec
outsb
jmp
xor
cwtl
ss
mov
pusha
out
inc
jl
insl
cmp
icebp
int
outsl
dec
fwait
and
orl
movsb
sbb
add
pusha
jl
pop
cmp
addr16
mov
pop
inc
repz
sub
jle
cs
stos
repz
xor
mov
xchg
mov
mov
dec
adc
dec
pop
cwtl
mov
pop
outsl
fs
imul
push
jge
stos
pop
sahf
outsb
rorl
cli
gs
xchg
sub
mov
dec
into
sbbl
loopne
test
clc
bound
nop
clc
repnz
pushf
jno
xor
dec
xchg
lcall
insb
cltd
andl
mov
mov
add
or
sbb
adc
gs
xchg
aad
aas
adcb
or
mov
mov
xchg
xor
pop
outsb
test
mov
sbb
xchg
and
mov
jp
flds
jp
sahf
cmp
mov
fsubrs
xchg
pop
aaa
push
fistl
adc
leave
xchg
push
std
outsb
rol
dec
add
pop
inc
into
mov
movsb
inc
rcll
or
dec
pop
dec
test
mov
dec
mov
jge
mov
mov
aas
cmp
lds
aam
jnp
insl
repz
adc
pop
push
in
loope
push
pop
xlat
js
and
pusha
or
outsl
push
lcall
dec
add
cli
jo
out
cmpsb
mov
add
in
idiv
and
jg
ret
xor
arpl
in
shrb
inc
xchg
inc
adc
push
rcll
fldenv
xchg
lcall
cmc
sti
xlat
pop
dec
sahf
test
pop
cmp
in
push
daa
sbb
mov
cmpsb
adc
into
push
loopne
lods
popa
loope
jbe
popa
cmpsb
or
jbe
enter
xor
mov
fstl
xor
test
jmp
addr16
mov
into
test
xchg
add
pop
xor
shrl
mov
les
add
push
lods
sub
sbb
or
push
jnp
mov
decl
jg
stos
in
jb
out
dec
repnz
stos
daa
and
fucomp
mov
mov
jbe
icebp
dec
jno
mov
inc
arpl
push
lret
pusha
and
adc
fsubrs
aaa
and
fwait
inc
xchg
mov
in
in
cmc
dec
loope
cmovnp
xchg
sub
jge
shlb
rcl
rorb
fcmovbe
xchg
test
xchg
mov
and
push
cs
aaa
xchg
lea
mov
adc
mov
popa
loopne
xchg
test
pop
testb
or
in
mov
lods
ja
sub
cltd
dec
mov
ja
or
or
pop
stos
clc
sbb
movsb
inc
dec
ljmp
inc
xor
mov
rolb
xor
fs
inc
mov
js
nop
pop
or
push
and
sbb
mov
pop
mov
insb
out
repnz
loop
cltd
nop
testl
gs
jae
insl
pop
inc
sub
test
push
idivl
jb
and
mov
les
jb
imul
clc
fcompl
pop
imul
xchg
rcrl
add
dec
xchg
ret
repnz
inc
iret
in
mov
test
mov
ret
stos
imul
outsl
mov
leave
push
adc
sahf
cmp
dec
jae
xchg
lret
mov
xor
fwait
cli
aad
jno
loope
lock
outsb
sub
or
mov
cwtl
mov
out
js
xor
jb
in
xor
pop
in
addr16
cwtl
fnstcw
and
dec
push
cli
fmulp
sbb
push
test
jp
mov
sub
mov
adc
sub
push
inc
and
neg
insl
mov
jge
cmp
cltd
out
inc
out
sub
adc
pop
imulb
test
loop
dec
cmp
in
aaa
lods
xor
in
hlt
inc
inc
shrl
xchg
mov
loopne
jb
out
int3
or
and
and
out
inc
lret
pmaxub
stc
xor
jb
ss
pop
lret
ret
and
add
std
inc
ret
dec
xchg
ljmp
stc
bound
pop
div
inc
sahf
ljmp
inc
jb
dec
pop
sbb
fisttpl
notb
mov
das
sbb
cs
mov
or
push
push
push
mov
jnp
mov
mov
shlb
outsb
or
loop
mov
call
mov
ret
repz
push
jns
mov
mov
insb
aam
fwait
xor
jge
cmp
jno
push
out
je
cld
sub
jge
mov
mov
sbb
lods
mov
pop
jl
shlb
iret
xchg
daa
scas
stos
sbb
push
sub
lret
jl
test
ja
cmp
popf
mov
jge
inc
in
clc
jmp
push
and
inc
inc
cmpsb
lahf
push
ljmp
cmp
jbe
inc
insl
and
jne
das
subl
jno
test
add
fidivrl
xchg
dec
cmpsl
movsb
cli
test
sti
and
jle
inc
sbb
jle
push
sub
adc
jmp
dec
hlt
in
aaa
and
sbb
fisttpl
mov
lret
pop
les
mov
inc
sbb
sahf
mov
sahf
movsl
push
lds
xor
int
orb
jecxz
adc
lods
jns
repnz
pop
fwait
aaa
mov
aam
in
lcall
xchg
mov
mov
pop
out
pop
or
xor
in
decl
xchg
lods
mov
lret
adc
imul
mov
mov
jbe
mov
push
dec
test
orl
notb
push
push
movsl
stos
mov
jge
in
loope
cwtl
mov
mov
mov
data16
xchg
or
scas
fildll
das
lds
int
mov
shl
cmp
repnz
in
mov
test
cmp
push
je
mov
mov
fidivl
bound
fimuls
dec
push
mov
mov
fmul
inc
dec
mov
ret
jae
mov
lret
pop
aaa
in
cltd
adc
clc
popf
cmp
test
pop
cmp
aaa
add
je
inc
xor
mov
cmp
test
jno
lods
push
mov
adc
lea
or
mov
cs
popf
and
inc
test
out
mov
lret
das
repz
inc
mov
cmp
and
and
dec
xor
jmp
sub
push
outsb
mov
cld
mov
and
push
cmp
imul
xchg
imul
xor
or
pop
loope
cmp
pushf
repz
call
jae
addr16
insl
inc
out
movsb
mov
and
mov
cwtl
xchg
inc
jno
sub
fisttpll
sub
lret
cmpl
insb
or
dec
xchg
mov
aaa
add
aas
fstl
in
gs
imulb
mov
ljmp
jp
mov
or
test
test
xlat
sub
push
insb
stos
jnp
mov
in
adc
pop
aas
ljmp
inc
data16
adc
xchg
stc
stos
xchg
popa
orl
in
lret
dec
aaa
mov
xor
or
sub
nop
movsb
imul
inc
sub
sbb
popf
push
dec
leave
sub
ljmp
pop
xor
popa
mov
mov
adc
mov
sbb
add
pop
pop
mov
sbb
fisttpll
jecxz
or
pop
in
jp
push
enter
inc
aam
push
int3
xor
into
inc
adc
adc
cmp
fadds
mov
sub
xchg
dec
daa
fiadds
inc
jbe
dec
addr16
push
pop
jb
xchg
pop
dec
adc
mov
pusha
xchg
into
and
rcrb
xchg
xlat
mov
cmp
jb
fdivl
rcll
and
xor
in
jecxz
in
clc
pop
push
pop
bound
jmp
jo
mov
push
jns
lock
xor
lret
mov
out
adc
pop
in
xchg
mov
pop
pop
adc
testl
pop
loope
cld
push
xchg
cmp
cmp
stos
xchg
aad
jno
push
sub
mov
hlt
inc
sub
or
hlt
fwait
movsb
jbe
xchg
xchg
clc
jae
ljmp
pop
nop
lea
clc
fildll
in
inc
pop
xor
cld
xchg
xchg
push
ss
in
push
outsl
and
add
ss
and
mov
add
mov
or
dec
push
jae
sub
lods
cmpl
in
xor
insl
mov
cld
sbb
dec
leave
adcl
lock
jp
fcompl
mov
push
and
dec
orl
gs
xor
sbb
inc
std
jmp
adcl
cmp
add
mov
sub
sub
das
sbb
loopne
cmp
std
dec
stos
ror
sbb
or
int3
sub
and
add
lea
neg
or
xor
scas
mov
insl
xor
xchg
add
inc
mov
xchg
jmp
mov
leave
cmpsl
mov
mov
dec
cmpb
fwait
jno
sbb
and
sti
xchg
pop
xchg
test
push
mov
fcom
cmp
daa
cmpsb
std
or
mov
xchg
int3
lret
outsb
pop
addr16
pop
repz
rcrl
sbb
xor
dec
adc
adc
test
rol
inc
test
cmpb
or
xchg
ret
adc
mov
mov
fbstp
jnp
push
out
pop
add
jp
mov
xor
and
mov
sub
mov
cmpsl
stos
adc
movsb
adc
adc
cmp
mov
sbb
out
mov
fucompp
js
stc
cmp
push
mov
mov
arpl
inc
xor
out
adc
notl
leave
rorb
shlb
and
and
add
jp
or
cmpsl
jb
nop
push
xchg
sbb
mov
ret
int3
cltd
mov
adc
loopne
rcr
mov
nop
xchg
pop
dec
adc
push
pusha
or
mov
lock
enter
xchg
pop
dec
imul
jmp
dec
pop
ret
imul
repnz
sub
cmp
add
inc
push
jg
adc
xor
sti
adc
adc
dec
cmp
and
adc
inc
lods
pushf
imul
push
xchg
mov
sub
mov
dec
cwtl
adc
pop
ja
push
dec
stos
sbb
pop
fwait
pop
out
icebp
vcomisd
or
dec
mov
mov
push
or
adc
sbb
int
fsubrs
mov
inc
and
fnsave
test
shlb
test
fcompl
jecxz
loop
test
jns
pop
repz
add
xor
mov
adc
aam
push
mov
xchg
fcom
or
fsts
jb
sti
jno
and
adc
jno
mov
js
inc
icebp
inc
add
test
aas
cmp
sti
icebp
dec
andl
imul
inc
pop
inc
enter
bound
sub
arpl
iret
stos
xor
fcomi
insl
mov
fwait
pop
jp
xchg
xor
push
sbb
mov
jecxz
xchg
mov
aaa
add
or
mov
out
adc
std
das
sub
push
mov
lea
mov
ljmp
inc
fucomi
cmp
test
push
sbb
in
hlt
imul
rcl
adc
adc
and
std
inc
rcrb
stos
lds
inc
sbb
xor
cltd
incb
imul
test
mov
ror
or
pushf
rclb
insb
xchg
sbb
adc
sub
xchg
pop
adc
aaa
lea
clc
outsl
push
loopne
sub
test
imul
test
push
push
call
fistpll
xlat
mov
fidivs
sub
xchg
adc
je
es
fwait
cmpsb
xchg
shr
xchg
insb
mov
dec
les
idivb
leave
popa
xchg
in
mov
mov
pop
jle
jae
iret
adc
and
cmp
shll
adc
jbe
xchg
and
fcmovnu
cmp
mov
push
jb
xor
dec
cli
mov
dec
add
negl
subb
lock
out
cwtl
adcl
fimull
push
inc
xchg
gs
insl
xchg
aas
jb
lcall
mov
dec
pop
mov
mov
or
loopne
ljmp
mov
jns
cmp
mov
dec
jecxz
nop
push
loope
jg
cmp
jnp,pt
push
mov
and
insb
bound
jns
push
sub
xlat
push
mov
lret
js
cmp
add
test
sbb
adc
and
lock
xchg
push
adc
jge
xor
dec
dec
int
xchg
push
aam
adc
scas
sub
dec
js
push
mov
cwtl
add
ljmp
adc
jne
or
fimull
mov
add
ror
inc
or
jge
orl
mov
pop
add
pushl
mov
nop
orl
mulb
lret
lock
cmp
sbb
cmp
push
inc
and
add
pop
stos
in
cmc
in
lods
ror
jle
lea
mov
fisttps
or
mov
jae
mov
roll
iret
dec
inc
adc
lret
pushf
lcall
scas
mov
dec
push
iret
or
pop
sub
jl
movsl
and
and
je
or
jo
cmc
pusha
sbb
and
pop
repnz
pop
adc
mov
jge
out
mov
aam
bsr
xchg
push
or
sarb
mov
stos
mov
add
test
cwtl
arpl
repz
orl
inc
mov
test
cld
popa
mov
push
popf
cmp
add
add
mov
in
je
or
into
jmp
dec
inc
add
out
xor
pop
int
or
adc
sti
mov
xor
and
lea
in
xchg
shr
pop
icebp
jbe
sbb
mov
movups
cmp
mov
sti
rorb
orb
sbb
or
push
cmpb
mov
inc
lock
mov
adc
add
fisubs
inc
cltd
or
stos
sahf
std
push
aas
or
jl
das
push
movsl
loop
mov
lret
inc
and
mov
inc
aaa
das
push
cmp
push
push
pop
ljmp
cmp
xchg
push
inc
sub
in
addr16
mov
fisubrl
push
mov
in
ss
xchg
xchg
int
mov
repnz
int
imul
loope
neg
cmp
aad
fcomps
jns
nop
fucom
cmpsl
shl
shll
inc
cmp
cmp
dec
and
test
out
xor
cwtl
cld
test
adc
pop
call
test
insl
mov
leave
dec
sbb
mov
adc
fs
shlb
pop
mov
les
sub
adc
cmp
add
aas
lahf
in
cmp
xchg
add
inc
cmpsb
stos
lea
push
jp
push
mov
push
add
dec
inc
adc
fsubp
jg
push
add
inc
cmp
mov
faddp
mov
lcall
pushf
pop
push
loop
mov
mov
lret
and
repz
xorl
popa
fldl
sbb
mov
rorb
jno
lahf
inc
stos
gs
divb
imull
mov
xchg
popa
mov
push
and
dec
cmpsl
jmp
adc
dec
push
stos
cmpl
or
dec
mov
in
scas
lock
pop
or
fwait
xchg
test
dec
dec
jl
test
negb
sti
lret
mov
mov
xor
jae
adc
jecxz
push
jg
xchg
das
jns
cli
dec
insl
addb
and
jmp
int3
xor
lcall
cmp
jne
xor
repnz
ja
mov
mov
pop
or
mov
movsb
ficompl
cmp
pop
sub
pop
cmpsb
fldl
xor
xchg
es
mov
mull
mov
jno
mov
stos
pop
imul
lret
cld
inc
mov
jp
nop
pop
scas
or
into
icebp
push
lahf
add
jl
mov
fsts
fidivl
adc
add
and
sbb
imul
ds
push
or
lock
mov
jo
cmp
movsl
ja
fs
dec
fdivrl
cmp
cmp
xchg
insl
outsb
pop
outsl
outsl
push
decl
dec
leave
jbe
jo
test
jge
addr16
dec
pop
leave
jle
data16
xchg
je
outsb
stc
cmp
movsl
mov
stos
xchg
jge
in
push
mov
mov
pop
sub
sbb
mov
xchg
mov
jmp
bound
test
sti
xchg
test
ja
mov
or
stos
imul
jno
adc
cmpsl
rcrl
mov
dec
loopne
push
pop
movsb
xor
clc
push
ret
aaa
push
stos
sub
sbb
jo
mov
xchg
test
in
clc
fdivrs
push
lods
mov
leave
add
cltd
xchg
jae
divl
mov
and
jne
pop
out
inc
faddl
ret
sahf
mull
iret
aas
or
push
adc
test
iret
fnsave
fsts
lods
lret
mov
imul
stc
cmp
cmp
dec
jno
mull
xor
idiv
sbb
es
xchg
sub
jno
lods
ffree
pushf
stc
in
test
xchg
leave
sub
shl
enter
sbbb
rolb
dec
sbb
inc
int
jmp
int3
xor
mov
dec
vcvtps2pd
mov
cld
inc
mov
loop
sub
jl
pushl
or
or
add
jns
cltd
movsl
push
fyl2x
inc
inc
pop
test
out
rorb
mov
popa
fs
aad
mov
jecxz
movsb
pop
sub
lret
pop
push
fidivrl
xor
adc
fidivl
adc
mov
xchg
mov
mov
push
add
aad
pusha
gs
jno
mov
mov
sub
incl
ror
jle
sub
jae
jg
add
jmp
out
iret
sub
push
xchg
xchg
dec
jle
stc
cmpsb
stc
dec
lods
mov
rol
cmp
gs
jmp
in
mov
add
xchg
fs
sahf
inc
and
loop
out
pop
sub
daa
jg
clc
add
jns
inc
jne
xchg
out
adc
xor
rcrl
jae
test
xchg
adc
aam
push
aam
test
sbb
test
mov
mov
inc
arpl
fs
lock
lods
mov
push
ret
daa
sub
call
sbb
les
test
pushl
xchg
cltd
insl
push
jb
jo
xor
pop
pop
sarb
loop
mov
sub
nop
in
add
sahf
jae
push
in
sbb
mov
and
enter
xor
push
jle
lret
pop
scas
cmp
xchg
std
inc
add
rclb
sub
fs
push
iret
mov
inc
lret
pop
in
adc
popf
jecxz
mul
outsb
lock
and
mov
lcall
mov
mov
cmpsb
pop
and
mov
fs
mull
push
arpl
dec
nop
and
nop
mov
jbe
repz
ljmp
sub
arpl
out
xchg
inc
pop
mov
inc
pop
sub
lods
loope
sbb
jnp
mov
loopne
cli
test
jecxz
in
repz
sbb
jno
cwtl
jo
cmc
outsb
iret
cmp
push
push
sub
dec
outsl
inc
mov
call
negl
xchg
cmp
mull
inc
mov
pop
mov
cwtl
call
rep
pop
jae
mov
mov
push
sbb
dec
inc
fnstenv
sub
and
sti
mov
xchg
aad
out
mov
sar
fsts
hlt
addr16
push
jne
cmpsl
popl
jne
mov
mov
or
dec
in
vfrczps
mov
scas
push
ja
jns
idivb
sti
sbb
xchg
jo
cmc
and
pushfw
loop
cmp
loopne
add
pop
xor
adc
adcl
push
aas
or
inc
repz
lods
cmpsb
and
addr16
adcl
rclb
push
xchg
pop
fcmovbe
push
dec
xor
dec
cmp
lret
fistl
and
dec
out
lock
hlt
cmp
inc
and
lock
fistpll
rolb
mov
push
shll
mov
mov
je
jle
fwait
repnz
ret
fwait
mov
pop
inc
push
pop
scas
adc
pop
icebp
sbb
or
xor
adc
fwait
cmpsb
test
fisttpll
pop
data16
pop
mov
mov
add
and
xchg
dec
xchg
cmp
pusha
xor
fistl
sub
mov
popa
pop
fwait
or
or
xchg
sbb
cld
mov
adc
mov
hlt
pop
dec
xchg
lea
jmp
sbb
shrb
xchg
dec
test
pusha
xchg
mov
sbb
iret
sti
mov
icebp
jmp
jnp
outsl
add
dec
out
in
das
imul
adc
out
inc
out
and
imul
push
fmull
fdivs
xchg
fwait
dec
jl
in
pushf
aad
jns
lock
lcall
sub
xor
adc
pop
popa
jae
or
push
testb
pop
int
data16
jb
pop
hlt
mov
and
pop
or
pop
adc
filds
xchg
aas
sub
sbb
mov
movsb
lock
xchg
lcall
dec
xchg
ss
dec
aaa
xchg
dec
push
fisubs
fwait
aad
repz
cmp
sbb
push
dec
lods
cmp
sbb
inc
ja
dec
fwait
rorl
xor
push
shlb
jno
inc
mov
mov
cmp
cmp
movsb
gs
sbbb
mull
push
jg
add
imul
mov
enter
push
ret
ret
adc
outsb
stos
jg
adc
outsl
gs
cwtl
push
xchg
cmp
enter
scas
data16
adc
sub
sbb
mov
lahf
dec
pop
dec
mov
push
iret
mov
lahf
inc
and
and
negl
lea
xchg
mov
jle
das
mov
mov
aad
sahf
popa
sbb
test
fdivs
jge
mov
jge
aam
shr
inc
adc
lea
test
fcomi
xchg
xor
scas
mov
lods
imul
call
mov
in
aad
mov
cltd
repnz
enter
mov
cltd
rclb
cmc
mov
xchg
jl
cld
loope
clc
shlb
pop
adc
pusha
mov
out
dec
cmp
mov
aaa
mov
jg
std
jae
je
imul
test
divps
das
movb
sbbl
rolb
add
xor
repnz
sbb
pop
dec
push
movsl
jbe
or
flds
jae
int
cli
inc
mov
insl
pusha
pop
xor
add
pusha
pop
je
add
push
sbb
or
popf
sbb
pop
out
sub
repz
sti
jbe
sarl
and
push
add
inc
shll
js
lcall
jle
push
add
ljmp
stc
mov
mov
cmp
enter
gs
mov
or
pop
adc
jl
das
xor
shrl
xor
int3
rcr
inc
push
sub
outsb
cmp
in
insl
adc
xchg
roll
pop
frstor
bound
pop
add
xchg
arpl
out
cmp
loop
push
loop
jns
fs
les
in
xchg
lds
fcmovnbe
xchg
sub
push
cltd
leave
adc
sbb
mov
jl
mov
repz
or
inc
scas
cmp
into
xchg
mov
dec
and
in
aad
shll
in
testl
push
movsb
mov
repz
cmp
jge
xchg
cmp
add
cmp
mov
subl
add
movsb
hlt
jae
scas
sti
in
jns
lret
or
and
inc
or
cld
dec
fwait
mov
push
mov
mov
imull
cmp
xor
sub
leave
adc
cmp
mov
repz
fcmovu
cmp
jecxz
mov
lret
enter
push
scas
into
jecxz
lock
jg
leave
loop
mov
cmp
xchg
enter
cmp
and
ret
ljmp
sbb
add
aas
jns
mov
cmp
mov
adc
es
jecxz
sahf
sbb
stos
lods
sahf
cld
jp
and
or
scas
add
xor
out
sub
lock
jnp
mov
inc
icebp
imul
jg
lock
call
es
pop
push
insb
add
cmp
push
cltd
push
pop
in
test
inc
aaa
loope
insb
inc
jge
test
cmpb
xlat
pusha
in
rcrl
ljmp
jle
xchg
sub
adc
outsb
cwtl
and
or
fisubl
in
push
cli
outsl
xor
jg
daa
pop
pop
stos
mov
add
lcall
jbe
out
lods
or
out
imul
cwtl
ret
mov
test
push
leave
pushw
repnz
dec
sbb
pop
popf
dec
pop
jnp
jne
xchg
out
adc
cmp
xchg
mov
stos
out
ret
dec
out
mov
jae
mov
cli
jae
repnz
mov
in
in
sub
imul
int
imul
cmpsl
mov
dec
mov
cmp
fwait
data16
jb
fisubrl
es
mov
adc
inc
orl
test
mov
and
xchg
insl
xchg
pop
out
and
aam
inc
jno
cwtl
stos
xor
xchg
adc
push
push
and
faddl
mov
pop
xchg
sub
push
ret
aaa
jns
add
dec
jl
add
inc
pushf
jne
ljmp
jmp
jns
fucomp
cwtl
mov
pop
add
clc
sarb
sbb
fstps
jp
mov
dec
jne
lods
inc
sub
scas
jmp
inc
jo
inc
inc
fs
push
xor
enter
sarl
fisubl
popa
mov
lods
and
shrl
cmp
add
int
out
rorb
sub
jns
stc
fcom
out
lcall
lea
psraw
adc
add
xor
imulb
add
rorl
push
jns
test
popa
pop
xor
daa
mov
out
stos
arpl
dec
stos
lock
sbb
xchg
fsts
push
push
add
inc
jo
adc
out
ret
stc
add
shll
dec
imul
or
sarb
jmp
dec
cmpsb
dec
jmp
in
mov
jae
scas
lret
ret
jno
dec
movsl
sub
xchg
lret
lock
and
pop
xchg
rcrb
hlt
shrb
dec
cli
push
adc
inc
shl
ds
es
push
add
daa
lods
mov
ds
push
lock
xchg
ljmp
add
loopne
jne
in
sahf
pop
lfs
insb
and
sub
mov
daa
enter
sub
push
mov
inc
addl
xchg
and
mov
pop
pop
or
cmp
pop
add
iret
into
sarb
inc
and
ret
mov
mov
jbe
stos
fs
adc
int3
push
subb
or
dec
mov
ds
arpl
dec
and
push
movsl
test
sbb
pop
xlat
repnz
lcall
sub
scas
cmp
cmp
jp
mov
pop
sti
bound
mov
sarl
inc
dec
mov
lret
repz
ret
aas
movsb
sub
imul
stos
jmp
cmp
loope
mov
int
and
mov
fwait
mov
pop
jne
sarb
sub
scas
pop
fisttpl
add
or
aaa
sub
cmp
add
inc
sti
ljmp
push
inc
sbb
out
in
xchg
sub
mov
sub
iret
sbb
mov
sbb
push
xchg
jb
fdivl
and
mov
test
lcall
sbb
das
xchg
insb
pop
fwait
or
sbb
jecxz
pop
push
test
imulb
lcall
and
and
mov
add
nop
jmp
fwait
sahf
fimull
out
dec
pop
jg
ds
jo
jae
lea
ja
popa
cwtl
jle
call
and
les
add
lods
cld
fs
test
inc
test
xchg
sti
push
jecxz
jle
imul
cmpsb
and
sbb
insb
loop
sub
jmp
out
cmp
aam
scas
test
mov
mov
xchg
fisubrl
dec
aad
rol
sub
mov
xor
push
sbb
clc
push
aaa
popf
cmpsl
pop
xor
insl
mov
or
inc
mov
imul
mov
sub
mov
xchg
mov
mov
ss
insl
sahf
cs
adc
test
and
jp
inc
sarb
clc
xchg
arpl
cmpl
rcll
out
mov
out
and
push
jne
cmp
push
sub
mov
jno
int
xchg
xchg
adc
jge
pop
aad
mov
out
push
pop
ficomps
mov
mov
loop
outsl
add
xor
subb
je
les
mov
mov
xchg
addr16
cmpsb
cmp
dec
and
mov
xchg
fisubrs
dec
movsb
stos
mov
mov
push
pop
shl
dec
xchg
fsubp
add
mov
xchg
jle
cltd
adc
fistl
jle
jno
inc
movsb
mov
dec
loopne
nop
mov
jmp
cmp
jns
mov
pop
test
daa
in
fstps
push
mov
push
andl
fnstsw
pop
in
aad
aad
mov
mov
pushl
movsl
jns
pushf
push
daa
xchg
mov
add
fidivrs
lahf
adc
dec
lea
pop
push
clc
loopne
pushf
testl
pop
mov
ret
lcall
or
pop
inc
adc
xor
lret
and
dec
cmpsb
mov
xchg
xor
ret
nop
in
or
aaa
enter
xchg
dec
inc
in
push
add
clc
push
dec
jmp
sub
add
sub
cli
mov
mov
fwait
orb
pop
aas
scas
xor
push
pop
jmp
out
push
sti
or
iret
loopne
cmp
mov
sahf
sarb
push
hlt
mov
cmp
repnz
xor
mov
inc
adc
cmpsl
push
sub
repnz
mov
stc
push
sahf
repz
add
out
lods
push
xchg
pop
aas
stc
inc
dec
xchg
ljmp
out
adc
add
sub
in
ds
or
pop
gs
jnp
subl
iret
leave
push
sub
lret
hlt
xchg
addr16
adc
jl
stos
adcl
push
enter
mov
xor
out
mov
inc
or
out
jp
xchg
inc
ret
enter
mov
cld
iret
pop
jmp
aas
nop
aaa
xlat
jecxz
dec
cmp
push
sub
mov
icebp
imul
mov
bound
push
sub
imul
addb
movsl
dec
cs
mov
shll
lret
push
ja
cwtl
xchg
mov
push
jne
fbstp
leave
or
sub
push
sub
jp
adc
negl
cmp
fcomps
mov
pop
leave
cmp
aad
loopne
aam
das
pop
jge
pop
sar
lods
mov
mov
and
xchg
cmp
ljmp
dec
dec
js
mov
mov
adc
xor
xor
faddp
es
lods
orl
popa
sub
ljmp
int
push
xor
imul
insb
loope
call
imul
push
pop
push
aad
out
jns
divl
arpl
adc
ret
bound
repnz
mov
fstl
sar
rcl
ljmp
xchg
cmpsb
mov
ljmp
repnz
push
lock
ja
test
ss
negb
mov
mov
repnz
stc
in
adc
ja
add
push
adc
push
pusha
xor
cmpsb
scas
in
aam
stos
jae
push
push
push
call
sbb
sarl
loope
or
rcll
jge
jmp
daa
ja
xchg
gs
cltd
insb
stos
ret
scas
xlat
aad
sub
inc
clc
inc
push
fmuls
jbe
test
cmp
icebp
mov
xchg
ss
jae
inc
shlb
and
pop
sbb
push
push
push
pop
fisttpll
adc
aaa
imul
add
insb
cmp
cmp
inc
movsb
mov
sbb
pop
leave
push
or
fistpll
mov
scas
arpl
push
jo
pop
jp
mov
push
divb
inc
lret
pop
dec
jno
xchg
adc
mov
stc
inc
inc
add
mov
inc
or
ret
stos
movsb
adc
cmp
push
les
pop
xchg
sub
leave
adc
or
pop
xor
sub
mov
and
pushf
jecxz
fiaddl
adc
mov
movsb
sub
adc
aaa
ffree
inc
int3
mov
adc
int3
and
jp
jge
and
shll
inc
jbe
jle
pop
sub
dec
mov
jl
ret
scas
cmp
stc
push
decl
xor
out
scas
scas
push
outsl
dec
pop
in
sbb
xor
sbb
int3
and
fmuls
loopne
lcall
frstor
mov
cmp
push
in
mov
and
jne
shr
cmp
fiaddl
mov
adc
fcmovnb
ds
mov
mov
fwait
mov
jmp
xchg
mov
lea
pop
dec
roll
sub
or
repz
mov
lock
iret
ja
add
inc
dec
loope
call
movl
dec
popa
mov
mov
xchg
xor
mov
scas
xchg
xor
negb
jecxz
rcrl
jnp
testb
rcll
jno
and
inc
movsl
test
jbe
jb
into
clc
hlt
xor
loop
jo
adc
cmp
test
mov
test
push
sbb
in
add
jnp
les
vpaddd
ss
pop
jae
push
mov
div
outsb
sub
movsb
or
mov
adcl
sub
and
loopne
iret
aam
pop
xchg
sti
lret
jo
dec
push
sub
mov
scas
in
mov
pop
out
ja
jle
push
push
mov
jg
adc
cwtl
xchg
sti
xor
push
sub
xchg
mov
test
dec
in
cmp
push
cwtl
or
jl
in
mov
pop
or
shll
push
inc
adc
fsubrs
jl
mov
mov
mov
add
xchg
pop
xchg
sbb
test
lods
mov
push
insl
clc
clc
fcomps
ret
or
cmp
pop
xchg
sbb
sbb
add
loopne
add
aaa
or
sub
call
adc
mov
lahf
mov
repnz
and
bound
shl
sbb
cmp
add
inc
mov
scas
fstpt
int3
addb
inc
cmp
mov
roll
int3
cmp
sbb
mov
jecxz
inc
dec
out
icebp
dec
mov
sub
cmpl
aam
mov
jg
mov
aam
test
int
and
mov
sub
stos
mov
scas
mov
inc
mov
push
in
dec
popa
pop
push
dec
xor
jnp
xchg
fwait
negl
or
pop
in
sbb
push
push
cwtl
dec
stos
xchg
popa
jge
sti
into
aad
push
andb
jae
or
dec
aam
fistpll
xchg
dec
push
jge
int3
fstpl
push
jb
cwtl
sarl
jns
mov
jae
pop
pop
cvtps2pi
iret
jp
mov
push
jl
test
into
push
adc
aad
push
sbb
test
sub
mov
out
rol
mov
mov
or
xchg
mov
push
and
dec
testb
lods
pop
flds
xor
dec
xor
fsubl
insl
xlat
cli
cmp
add
cld
xchg
das
jp
cmp
loop
mov
clc
out
cwtl
push
fstpl
lcall
jmp
xchg
repz
fiadds
mov
xlat
iret
ljmp
xor
lret
xor
mov
icebp
mov
add
mov
push
jl
mov
and
cmc
lret
xchg
adc
icebp
mov
push
push
shr
jne
xor
nop
shlb
or
cmp
sbb
jg
mov
std
mov
std
pop
cmp
jmp
cmp
inc
ss
mov
imul
addr16
js
adc
insb
mov
mov
xchg
dec
ljmp
lahf
push
insl
sub
jno
and
sub
adcb
out
test
lahf
dec
jle
push
aad
adc
pop
call
mov
or
test
fdivs
rcrb
dec
sub
dec
push
pop
std
in
mov
pop
jmp
ds
mov
out
add
pop
add
dec
shll
or
cmpsl
xor
add
lds
push
fsubrs
adc
into
mov
out
das
shl
push
mov
mov
or
pop
pushf
jb
out
push
adc
cs
jl
ret
les
lds
mov
andl
push
or
pushf
cwtl
jg
and
push
sbb
jle
cmp
xchg
shll
xor
dec
ret
mov
xor
sub
jae
jecxz
shrb
push
cmpsb
repz
movsl
mov
mov
cmp
adc
ds
inc
mov
loop
mov
dec
sub
ljmp
es
repnz
or
std
push
bound
or
insl
jne
or
push
adc
and
push
sbb
pop
stc
mov
scas
and
and
mov
jae
cmp
enter
scas
sub
add
or
loope
out
scas
push
xor
mov
test
mov
or
cmc
and
rclb
xchg
xlat
cmp
mov
mov
repnz
test
and
cmp
sbb
fcmove
cltd
mov
inc
push
addl
xchg
cltd
xor
mov
ret
xor
stc
xchg
jns
adc
adc
xlat
mov
pop
rolb
mov
sbb
inc
in
aaa
pop
push
ljmp
mov
add
lret
shll
shr
in
inc
xor
jo
pop
and
out
push
cld
mulb
add
movsl
stos
mov
xor
cmp
fs
add
lcall
sub
xor
or
mov
lcall
xor
sti
push
xor
push
mov
out
cmpsl
cmp
xor
pop
je
sub
mov
adc
xchg
lods
xchg
pop
negb
mov
or
fiaddl
lcall
mov
cli
mov
je
or
dec
or
cmpsb
mov
daa
ror
loop
filds
in
sar
pop
jl
cwtl
test
pop
cmp
push
mov
lds
push
jns
push
cmc
cmp
fldl
int
jae
xchg
mov
fcoml
shll
fsubr
cmp
xchg
jmp
imul
pop
daa
sbb
mov
loope
pusha
jo
out
lds
pushf
aam
addr16
repnz
jns
ljmp
push
mov
imul
lea
popf
sub
ror
mov
push
dec
and
aaa
mov
sbb
add
insl
arpl
mov
lret
rclb
test
or
push
adc
aam
andb
in
out
jle
sahf
call
shrb
or
sbb
cmp
mov
mov
adc
xchg
sub
and
ja
loop
jns
sub
mov
ja
aad
cmp
add
push
cs
add
mov
cmp
shlb
jmp
pop
push
movsl
jge
or
jne
jbe
mov
sahf
or
imul
push
into
dec
popa
out
jmp
scas
int3
adc
inc
cwtl
shll
and
xchg
push
or
loope
leave
and
int3
mov
mov
lret
hlt
dec
cmp
inc
ret
xor
imul
inc
jp
add
push
inc
or
and
bound
cmp
int3
andl
sbb
out
jp
pusha
add
inc
mov
fldt
mov
fstps
sbb
fwait
cmp
inc
or
jmp
andb
icebp
mov
inc
lods
add
pop
jmp
mov
xchg
sub
dec
cmp
fs
rorl
or
scas
das
pop
fldcw
ds
mov
jl
movsb
cmp
rolb
cmpb
xor
shll
test
mov
xor
out
xchg
inc
dec
inc
cld
xlat
add
add
add
cmc
cmp
mov
gs
jecxz
leave
loop
popa
sbb
adc
icebp
lret
push
add
jnp
mov
movsb
add
mov
out
adc
call
int
adc
push
es
mov
mov
in
cli
or
aaa
iret
inc
in
pushf
dec
cltd
fildll
loope
jge
jecxz
out
or
and
and
mov
lcall
lds
int
sarl
pop
cmpsb
xor
and
stos
les
mov
jo
sub
dec
jbe
es
push
dec
jecxz
push
push
add
mov
cwtl
cmp
stos
mulb
sahf
fldt
into
mov
mov
xor
mov
mov
int
add
xlat
and
adc
xor
push
shll
mov
imul
mov
or
add
dec
scas
jmp
inc
int
jnp
mov
pop
in
sub
xchg
addr16
js
xchg
sbb
mov
mov
sbb
push
shl
add
push
adc
cwtl
add
jnp
cld
jge
sub
inc
push
out
lahf
xor
test
push
sub
push
xchg
jb
or
call
cmpsl
test
ja
mov
fneni(8087
popa
sub
jae
pop
popa
lcall
sub
inc
push
bound
mov
leave
mov
hlt
pop
mul
mov
inc
lds
fcompl
sub
and
cld
sub
bound
pop
dec
sub
add
and
push
and
in
fisubs
mov
es
lcall
out
dec
loope
or
dec
sbb
out
jne
adc
mov
cmpsb
mov
enter
push
mov
pop
cmp
push
aaa
push
std
icebp
mov
ss
jp
lds
loop
popa
out
pusha
pop
imulb
cmp
jp
dec
mov
cwtl
ret
push
push
lods
mov
imulb
sbbb
aam
mov
ja
outsl
lea
sbb
subl
cmc
and
or
mov
mov
fcmovb
push
and
ret
xor
aaa
pop
dec
pop
iret
pop
inc
adc
xor
xlat
lods
test
jg
aad
inc
xor
cmp
sub
pop
sub
ss
or
mov
mov
rclb
cmpsb
in
test
ja
pusha
es
popf
sbb
jae
inc
xor
mov
test
push
cld
sub
shl
lock
enter
pop
in
and
mov
mov
mov
iret
inc
in
mov
repnz
xchg
xor
sbb
out
xchg
icebp
push
or
push
mov
add
ficomps
and
dec
cmpsb
jb
lret
xor
push
fdivrp
cmpl
cmp
jns
mov
fstpl
into
inc
fdivrs
push
ljmp
jns
testl
inc
loopne
sti
sub
or
jle,pn
inc
aad
xor
and
push
cld
mov
sub
xor
add
push
movsb
fcom
pop
sarb
push
lahf
es
and
aaa
pop
jge
or
mov
adc
dec
pop
testl
in
das
jp
add
lods
hlt
fsubp
out
mov
dec
icebp
lret
lret
dec
movsl
lds
stc
mov
mov
fndisi(8087
cli
inc
inc
stos
jl
ret
les
sub
test
repz
push
addb
inc
xchg
popa
xor
shl
int3
lcall
adc
sub
cmp
mov
pop
psrad
pop
xor
sub
je
out
aaa
xchg
pop
je
push
loope
bound
or
adc
push
mov
out
in
jmp
mov
pop
sbb
dec
lods
adc
cmpsl
daa
mov
mov
cmp
inc
in
xchg
xor
mov
or
int3
mov
inc
jbe
sbb
data16
icebp
stos
jge
sbb
fwait
mov
jmp
lcall
into
cmpsb
lock
or
or
addb
mov
mov
jmp
push
jg
arpl
arpl
pop
push
add
add
aam
rorb
pusha
mov
xlat
xchg
int
daa
fists
mov
dec
fadds
aaa
jg
pusha
sub
mov
int
mov
hlt
and
mov
or
fldt
iret
outsb
jmp
mov
push
push
pop
pop
mov
push
lods
mov
mov
xchg
repz
es
lock
inc
jbe
shll
iret
dec
pop
sub
pop
mov
cmp
jne
or
aam
movsb
mov
xchg
cmpsl
adc
pop
sub
inc
sbb
sub
push
fsubrl
xchg
dec
fnstenv
shlb
sbb
push
xchg
aam
push
sub
xchg
call
mov
pop
jb
or
movsb
mov
xor
cmpsb
test
test
clc
cmp
push
cmp
aad
scas
inc
sbb
dec
push
fcmovnu
test
mov
into
sbb
shl
mov
jb
add
pop
cli
cmpsl
loopne
mov
and
js
ret
xor
addr16
adc
sbb
scas
out
lock
in
sub
add
add
mov
xor
lea
test
aas
stc
scas
outsl
jns
adc
out
aam
aas
mov
cmpsb
cld
cmp
pop
lret
test
mov
add
sbb
ss
xchg
cmc
addr16
mov
pop
inc
fst
test
data16
inc
push
loop
cmp
push
or
gs
cmp
jne
fadd
and
mov
pop
subb
mov
out
data16
cmp
sbb
repz
idivl
adc
fwait
nop
outsl
fnstsw
mov
mov
jmp
imull
sti
sub
enter
pop
lods
jg
or
xor
sub
imul
sub
popa
adc
repz
scas
aaa
cmpsb
push
daa
out
inc
jo
sub
push
cmp
jnp
xchg
sbb
stos
inc
add
jae
test
jnp
jb
push
pop
sub
je
pop
dec
jle
pop
hlt
xlat
call
xor
cmpb
jno
adc
jne
ljmp
mov
mov
push
and
cmp
enter
aad
outsl
dec
movb
inc
movsb
dec
jl
setne
sar
sarb
jbe
das
jo
inc
sub
mov
push
cmp
mov
or
mov
jno
or
addr16
loop
in
je
je
inc
stos
and
cmc
cmp
pop
mov
xchg
or
loopne
inc
and
fs
paddb
hlt
std
sarb
jl
xchg
sub
sub
popa
fs
push
enter
adc
loopne
mov
lods
addr16
gs
aas
fldcw
pop
jl
lock
lcall
outsl
out
pop
sti
imul
pop
adc
dec
iret
js
fprem
mov
dec
in
push
cmpsb
push
je
sub
sbb
dec
cmpb
sub
ret
cmp
cltd
jp
jnp
decl
add
popa
sbb
scas
movsl
outsl
stos
adc
xor
inc
repnz
das
inc
mov
pushf
push
mov
into
adc
lock
in
fwait
pop
pusha
mov
jl
sub
or
imul
cs
mov
lods
xchg
stos
cmp
popf
jo
andl
mov
sbb
lock
imul
mov
pop
inc
jg
and
addb
sti
push
out
rorb
xchg
mov
mov
call
aas
test
mov
mov
gs
or
and
adc
inc
shr
mov
inc
pop
pop
pop
adc
pushf
mov
imul
jecxz
jg
jmp
ret
and
lret
mov
iret
outsb
jae
and
mov
jae
sarl
sub
push
scas
sbb
mov
inc
adc
adc
jo
mov
xchg
mov
imul
sti
enter
adc
daa
mov
mov
pop
cmpb
dec
adc
xor
imul
mov
lcall
cmp
das
lock
cmp
inc
mov
dec
mov
cli
adc
hlt
jp
and
pushf
xor
incb
inc
mov
mov
sub
pop
jnp
int
dec
std
mov
push
jg
mov
cmpsb
pop
fnstenv
sarb
fcoml
loopne
popf
pop
mov
sarb
cmpsb
adc
js
mov
repz
cmc
push
push
out
xchg
mov
mov
sahf
shl
lea
in
sarb
lea
lret
loopne
fstpt
loopne
push
mov
xchg
cmp
aad
xor
dec
nop
pop
fiadds
loopne
adcb
testb
push
addr16
loopne
rorl
xchg
cmp
std
scas
push
int
repnz
popa
rcll
js
outsb
adc
pop
in
mov
xchg
jg
jg
pop
dec
mov
add
dec
das
mov
lahf
add
inc
sub
cmp
mull
mov
inc
push
fisubrl
mov
dec
lcall
dec
fsubrl
jg
insb
sbb
scas
adc
icebp
insl
xchg
enter
lret
push
iret
into
lea
in
jo
lock
pop
lock
sbb
add
sub
icebp
push
hlt
mov
pusha
push
dec
and
mov
pusha
push
jp
out
jne
mov
push
pop
pop
mov
iret
in
mov
xchg
dec
lods
insl
inc
adc
repz
je
fildl
out
fs
xor
test
adc
lods
xor
mulb
stos
sbb
sti
adc
sub
notb
push
daa
jmp
xchg
pop
mov
inc
mov
xor
jl
pusha
das
mov
mov
hlt
push
pushf
gs
xchg
in
rclb
inc
ror
ret
insb
mov
enter
in
push
jecxz
mov
mov
sbb
and
ret
test
dec
fwait
sub
sub
repnz
in
fdivrp
mov
xor
push
xor
xchg
out
rorl
cmc
dec
jmp
sbb
mov
mov
mov
push
jb
lret
dec
psadbw
cmp
clc
loop
inc
daa
movsb
shl
sbb
out
add
dec
mov
popf
movsl
adc
cmp
imul
movsb
aad
out
jae
pop
fisttps
aaa
lret
dec
fstsw
sarb
sub
push
fistpl
je
rolb
xor
add
lock
pop
push
test
adc
insl
sub
add
outsl
jge
enter
adc
jp
jge
iret
mov
push
pop
dec
lcall
or
jmp
push
pop
int
sahf
jecxz
sub
push
loope
inc
cmpsb
mov
sbb
jbe
enter
jmp
jmp
stc
xchg
xor
or
leave
jbe
push
sbb
push
sub
dec
call
in
pop
mov
and
mov
mov
add
adc
sub
sub
xchg
in
cmpsl
icebp
fdivrl
test
insl
jno
stc
nop
xchg
lds
hlt
fcompl
add
jb
mov
clc
insl
jle
shrl
lock
inc
iret
ds
push
stos
push
call
push
push
icebp
add
and
pushf
push
push
and
add
out
xchg
jge
push
jg
and
in
mov
insl
repnz
mov
outsl
cmp
jne
sub
lods
push
push
cmpl
ret
repz
cmc
movsb
mov
aad
sub
loopne
stos
into
add
dec
shll
in
mov
repz
fnstenv
lds
ss
lock
stos
jbe
outsb
arpl
mov
rcrb
push
sub
shlb
xchg
lret
inc
mov
jno
call
insb
or
push
in
dec
movsb
mov
fld
in
xlat
adc
fiaddl
ljmp
loop
add
mov
mov
cld
mov
xchg
ss
pop
cli
and
pop
or
mov
push
mov
out
inc
push
test
xchg
jbe
iret
push
sbb
xchg
out
push
das
int3
dec
xor
push
mov
int3
fnclex
bswap
aaa
dec
stc
add
mov
mov
dec
mov
pop
stos
adc
add
adc
jmp
jbe
xor
cmp
popa
mov
pop
addr16
sahf
inc
sbb
loop
subb
sbb
mov
inc
push
adc
dec
jb
xor
jl
stc
push
jns
jns
lret
sbb
sub
xchg
jle
jb
inc
cld
jae
mov
cmp
cmc
sbb
mov
inc
cmc
add
sub
xchg
paddd
mov
pop
jae
test
rcr
mov
repnz
or
pusha
les
sbb
add
loopne
fisttpl
xor
les
adc
pusha
mov
xchg
jl
insb
jo
addr16
lods
lahf
jle
out
adc
js
jns
cmp
movsb
hlt
in
stos
das
adc
int
iret
rcll
mov
jl
and
mov
mov
clc
mov
sbb
mov
mov
inc
ret
cmp
les
cld
jbe
jl
stos
jmp
popf
repz
pop
out
lahf
shrb
add
sti
xor
stc
daa
xchg
aam
pusha
imul
hlt
adc
fs
push
inc
lock
enter
adc
mov
bound
jl
rorl
test
add
sub
inc
push
outsl
std
js
sbb
jmp
outsb
popa
adc
push
iret
cli
cmpsl
subl
jne
fcomps
mov
inc
adc
pop
dec
rcll
inc
mov
lcall
addr16
lahf
mov
enter
decl
call
cld
xor
divl
outsb
mov
fldz
cmp
idivl
and
lcall
jne
clc
or
push
sbb
mov
rcrb
das
dec
loop
iret
fimuls
mov
sub
fwait
xor
jle
and
in
sbb
addb
popl
push
lods
outsb
xchg
ficompl
mov
pop
mov
pushf
dec
movsl
ja
insl
xchg
js
add
xor
mov
sbb
mov
insb
icebp
and
cwtl
mov
test
dec
sbb
out
sub
imull
clc
cmp
add
adc
mov
insl
aam
dec
jle
fstpl
xchg
cmp
ja
js
cmpsb
dec
ret
jo
out
xor
jno
lock
xchg
out
mov
leave
fstl
inc
sbb
and
xlat
push
cmc
jb
imul
sub
sub
fists
mov
ret
je
add
mov
pop
mov
or
inc
fdivrs
stos
xchg
nop
adc
inc
pop
mov
jle
mov
xchg
mov
js
cld
lcall
shl
push
dec
pushf
or
or
xor
pushf
testb
lods
cmp
push
jecxz
xchg
pop
int3
mov
pop
mov
scas
daa
cwtl
nop
pop
jge
xchg
adc
in
arpl
incl
mov
sub
xor
sti
lahf
jg
mov
mulb
mov
xlat
sbb
aaa
mov
xor
pop
or
fs
or
orb
rorl
icebp
push
aas
sbb
dec
xchg
dec
xor
pop
std
mov
int3
sbb
push
divl
sbb
mov
leave
sub
xchg
or
enter
pop
ds
repz
or
shlb
push
pop
fildl
arpl
add
jp
mov
push
fildl
test
je
std
cmp
pop
iret
mov
add
inc
jg
aam
push
repnz
jnp
cmp
cmc
inc
loope
ret
push
mov
data16
pop
jecxz
loop
push
loop
sbb
push
test
cmp
sbb
mov
jae
and
mov
pop
sbb
enter
in
movsl
and
xor
rolb
popa
fwait
xchg
mov
jbe
xorb
aam
sti
mov
or
rcl
je
and
lods
mov
jno
rolb
push
inc
and
out
out
out
adc
cmp
in
adc
inc
pop
mov
xor
push
jae
or
movsb
jb
mov
fmuls
mov
pop
adc
push
xor
lock
cmp
sbb
mov
inc
insb
hlt
xlat
sbb
jmp
imul
pop
jo
add
inc
add
flds
das
je
or
mov
in
fisubrs
js
xchg
in
pop
push
mov
or
xor
pop
xor
insl
sub
push
xchg
pop
pop
or
jne
popa
push
sbb
popf
add
int3
mov
xor
xor
dec
out
xor
inc
or
pop
call
adc
mov
imul
xor
dec
push
and
popf
xchg
sbb
xchg
sub
and
out
movsb
mov
sbb
jmp
jg
lock
jno
and
int
imul
mov
sbb
cmp
es
sbb
xor
into
imul
sub
jbe
xchg
call
mov
int3
je
fucomip
cmpsb
scas
movsl
cs
test
icebp
loope
mov
mov
shlb
mov
lret
pop
sti
fstpt
inc
inc
rorb
cmp
mov
fisubs
xchg
out
ja
mov
or
xor
gs
fidivrs
lahf
and
icebp
and
mov
xor
mov
out
mov
aad
sbb
dec
jg
call
addb
xchg
lock
sbb
test
in
fwait
je
mov
jnp
pop
out
jb
gs
clc
shrb
movsl
jle
out
pushf
repnz
dec
sbb
cmpsl
mov
inc
xchg
or
mov
ret
movsl
sbb
inc
cltd
sbb
xchg
jl
cmp
mov
dec
jecxz
sub
jl
rol
lret
lahf
cmpsl
lret
inc
mov
or
mov
rcr
out
daa
push
push
je
or
cli
je
inc
imul
mov
out
jb
out
ret
stos
sarb
arpl
aaa
ret
int3
lahf
rorl
lods
push
std
roll
test
jmp
jbe
push
pushf
pop
dec
dec
cmp
jp
dec
pop
aam
or
aad
ror
mov
mov
xchg
dec
push
inc
sub
or
outsl
jno
ljmp
stos
jno
movsl
xor
fsts
xor
add
jbe
mov
adc
mov
mov
ljmp
test
cs
std
pop
out
cmpsl
addr16
and
and
popa
repz
push
mov
jle
fcomi
mov
ja
nop
pusha
sbb
sbb
ret
adc
test
aas
test
mov
lcall
loope
bound
test
lret
and
mov
cmc
rolb
jae
dec
inc
inc
js
jo
push
jb
xchg
push
lods
mov
sbb
std
loope
aas
dec
mov
pop
int
int3
jnp
das
mov
les
mov
hlt
pop
lahf
push
pop
jmp
call
fsubl
fcompl
pop
mov
cmp
jl
cmc
dec
push
add
lcall
xchg
dec
arpl
cmpsb
lock
pop
ds
and
test
dec
inc
loopne
add
ret
dec
xor
add
adc
xchg
shlb
clc
lea
or
cmp
jne
mov
or
pop
xor
sub
sete
sub
add
sbb
xor
into
mov
cmp
mov
adc
das
cmp
cltd
aaa
fwait
and
out
and
cltd
push
dec
mov
sahf
adc
clc
pushf
jmp
aas
mov
fstpl
ror
add
rolb
jno
dec
lcall
dec
sub
jmp
dec
scas
rol
call
out
push
iret
cmp
lds
mov
daa
lret
jne
push
clc
adc
mov
cmc
inc
xchg
push
dec
imul
popf
pop
inc
daa
xchg
clc
cltd
setl
mov
scas
cwtl
add
ret
add
loope
cmp
mov
mov
sarb
xchg
push
dec
js
jbe
push
cmc
es
fistps
pop
cs
xlat
adc
iret
xor
ret
xchg
push
mov
arpl
ret
mov
sarb
inc
pop
in
sub
push
je
xor
push
shlb
ss
pop
mov
loope
jns
out
lret
jno
xchg
fwait
jo
lds
mov
mov
add
and
sub
repz
lret
jl
in
cmp
fbld
clc
repnz
mov
jle
mov
inc
push
subb
or
les
shll
pop
frstor
sbb
jl
jl
dec
inc
dec
pop
arpl
daa
sub
mov
insl
xchg
mov
pop
mov
pop
mov
in
loope,pn
sub
mov
lods
repz
mov
aad
xchg
test
enter
or
in
cmp
mov
insb
sub
ljmp
mov
inc
sub
jns
test
jmp
mov
pop
xchg
jl
add
fcoms
lea
add
dec
dec
adc
fcmovbe
lcall
sub
enter
repz
loopne
pop
enter
sbb
mov
inc
mov
mov
xlat
adc
push
mov
xor
and
pop
mov
and
push
mov
or
repz
push
int
sub
stos
int
repz
fistpll
arpl
mov
test
cld
mov
adc
repz
mov
cmp
xchg
test
pop
fwait
mov
sti
sbb
sub
mov
cs
test
add
mov
popa
and
mov
xchg
loope
mov
sbb
push
dec
xor
push
arpl
sarb
and
shll
xor
pop
lods
jle
mov
xchg
push
adc
push
ljmp
mov
lock
xor
aaa
add
out
mov
clc
push
cmp
xchg
lock
scas
loopne
sbb
push
mov
xchg
xchg
xorb
fwait
out
dec
push
arpl
pushf
fadds
popa
fsubs
push
ret
push
out
sahf
scas
stos
push
lea
xchg
aam
dec
mov
cmp
js
inc
pop
sub
push
mov
xor
mov
cmpsb
dec
mov
jmp
std
push
jge
pop
push
stos
mov
sub
aas
loop
in
int3
adc
pop
and
psubd
add
pusha
jp
push
movsb
popa
lods
xor
add
or
sbb
adc
out
mov
xchg
add
loop
mov
out
mov
gs
sub
sti
or
repz
sbb
cmpsb
sahf
scas
pop
aam
lret
mov
mov
xor
jg
sub
imul
xor
xchg
lods
fucomi
pop
push
and
mov
dec
mov
push
add
add
inc
cld
gs
dec
add
xor
rol
int3
lea
sub
rcrb
mov
or
xchg
mov
xchg
loop
into
pop
adc
mov
shll
mov
push
inc
xor
inc
push
inc
loope
shl
imul
clc
repnz
mov
mov
mov
out
test
imul
setnp
cmpsb
dec
pop
shll
mov
mov
cmp
popa
inc
or
push
aad
mov
adc
cmp
ss
clc
xchg
add
outsb
imul
outsb
push
addr16
repz
mov
xchg
clc
out
adc
adc
push
sahf
ljmp
stos
cld
jmp
or
test
dec
inc
jo
cmp
or
iret
push
sbb
outsl
stos
outsb
sbb
and
dec
cmp
gs
jg
arpl
idiv
push
jmp
add
inc
scas
push
roll
loop
mov
shll
lock
rep
insl
aad
jp
xchg
sahf
dec
repz
sbb
and
inc
mov
flds
data16
adc
xchg
lods
xlat
rcrl
sbb
xchg
xor
adc
dec
enter
repz
push
mov
xor
gs
xor
lcall
pop
fucomip
loope
jl
ss
xchg
or
jae
jmp
dec
test
xchg
rcrl
lods
fisttpll
stc
push
andb
rcrb
inc
loopne
mov
lods
jmp
mov
scas
loopne
imul
inc
out
in
add
mov
ret
addb
mov
push
pushf
dec
repnz
push
or
mov
jg
pop
mov
cmc
xchg
data16
xchg
iret
inc
gs
push
or
add
mov
mov
iret
out
cmp
outsb
pop
std
xorl
mov
pop
dec
mov
das
imul
xor
jecxz
sub
cmp
jp
rolb
dec
inc
lcall
mov
jns
test
fcomps
xor
outsb
mov
xchg
fdiv
mov
leave
popf
lgs
xor
pop
push
mov
cmp
sbb
loopne
pusha
lret
pop
ljmp
lods
dec
repnz
or
jne
sbb
daa
pop
enter
xchg
jp
stc
dec
or
int3
sub
repnz
pop
push
adc
xchg
sub
push
cmp
sbb
add
fdivrs
dec
jnp
mov
out
sar
push
xorl
out
dec
xchg
ffreep
mov
dec
ss
mov
pusha
jle
movsb
loopne
lret
es
lret
add
mov
mov
mov
pop
and
jno
je
add
sbb
das
in
push
sahf
jo
test
fimuls
out
daa
mov
cmp
ljmp
mov
insl
pop
fistps
pop
mov
hlt
and
pop
call
movsl
insb
and
and
ret
bound
inc
xchg
scas
cmp
mov
mov
or
daa
add
bts
ret
mov
call
int
movsb
and
fildl
or
out
test
fisubrl
lods
ss
fwait
or
xor
xor
jnp
in
add
lcall
scas
or
in
add
or
in
jge
gs
xor
mov
clc
add
push
ret
mov
lods
enter
scas
adc
sbb
mov
xchg
xchg
cmpsb
scas
jl
jecxz
sub
fwait
cmp
sub
and
or
xor
into
out
clc
and
pavgb
sub
popf
cmpsb
stos
fdivl
adc
sbb
fists
lret
movsb
xor
arpl
jmp
xchg
out
nop
adc
dec
sar
clc
push
sbbl
not
scas
arpl
xor
in
std
iret
lcall
arpl
popa
push
mov
std
movsl
aaa
test
mov
sahf
xchg
les
cmpsb
add
stos
jmp
jmp
jmp
sbb
mov
jne
push
push
pop
xchg
pop
inc
outsl
data16
add
inc
lret
jno
outsl
pop
cmp
and
je
adc
mov
jnp
mov
aas
mov
dec
dec
mov
divb
data16
sbb
xchg
int3
in
loopne
push
jno
test
cmp
lods
cmp
cmc
sbb
push
jne
push
int3
mov
jl
sbb
ss
bound
lods
inc
cmp
xchg
sub
pop
ljmp
fcmovbe
jg
daa
jno
push
cmp
lods
pushf
jl
push
fsubr
xor
fucom
bound
shl
push
loop
out
fnsave
jp
adc
loop
in
popa
or
in
mov
popa
adc
mov
ret
arpl
js
inc
sub
pop
mov
shrb
xlat
cmp
jb
mov
mov
inc
pop
repz
cmp
sub
mov
add
jle
lods
xchg
mov
xchg
dec
jno
iret
push
idivb
icebp
lahf
std
or
lret
xchg
cmp
xchg
ja
or
int
test
xor
mov
or
push
in
in
je
stos
dec
mov
sarb
iret
xor
push
pop
mov
inc
mov
lods
add
rorb
out
mov
jns
lea
push
enter
mov
pop
inc
clc
mov
pusha
xor
push
adc
mul
call
inc
in
mov
fdivrs
clc
push
ljmp
data16
popf
mov
stc
incl
pop
outsb
or
addr16
ja
ljmp
daa
xchg
inc
inc
cmp
fdiv
jae
cmp
pop
jg
and
sub
inc
gs
sbb
mov
push
scas
sbb
out
out
sbb
mov
ds
or
shll
fdivp
aaa
ja
cmp
testl
sub
stos
inc
pusha
jg
jne
dec
out
dec
test
mov
test
jb
jmp
pushf
fbstp
mov
testb
jo
sub
gs
inc
test
adc
and
pop
and
xchg
rcrl
adc
inc
push
jle
mov
insl
xchg
sub
stc
inc
movsb
xor
nop
sub
pop
addl
mov
and
test
gs
prefetch
arpl
fisubs
ljmp
test
fsub
dec
call
dec
add
dec
pop
aad
leave
insb
jge
je
ds
or
jle
sti
in
movsl
sub
outsb
cmc
jmp
ret
dec
mov
out
aad
enter
add
push
jnp
lcall
mov
outsb
add
mov
pop
or
fcmovbe
and
fdivrl
inc
repz
daa
lretw
mov
orb
xorl
popl
arpl
fnsave
xchg
jns
aam
hlt
xor
add
shrb
out
fldcw
cmp
movaps
or
ja
pop
cmc
jp
xor
shll
ds
push
mov
sbb
in
cltd
cltd
mov
adc
push
ret
jp
xor
add
jbe
inc
ljmp
cmpsb
imul
push
leave
cmp
repz
jge
fdivrp
jp
and
fs
ficoml
inc
negl
push
mov
jne
fisttpl
sbb
adc
inc
jno
lods
sub
jnp
nop
and
repnz
sarl
xorl
test
and
mov
pop
push
dec
ss
aaa
xor
imul
in
and
mov
cmp
jo
mov
jp
shld
sbb
cli
fcomip
fildll
or
daa
pushf
mov
addr16
adc
gs
insl
push
xchg
mov
mov
rorb
ficomps
test
mov
adcb
push
inc
divb
incl
roll
xchg
pop
nop
pop
bound
addr16
xor
pushf
push
mov
or
je
popf
out
cmp
popf
sbbl
pop
lods
scas
sbb
add
xor
cmpsb
cltd
mov
jge
push
and
sub
mov
xor
data16
mov
pop
lcall
xor
inc
andb
in
dec
push
mov
popa
pop
insb
push
notb
in
fstps
cmp
push
xlat
roll
icebp
das
sbb
jge
push
mov
out
mov
and
ret
lods
jns
inc
cld
not
jmp
jg
mov
mov
std
cmp
xor
inc
cmp
add
adc
add
js
pushf
cmpsb
mov
mov
push
adc
dec
shll
in
add
rolb
out
shlb
mov
and
sub
xchg
dec
mov
insl
sub
and
mov
pop
call
addr16
sarb
jne
repz
cmpl
sub
repz
xchg
dec
sti
push
popf
mov
dec
in
or
sub
repz
iret
push
sub
repnz
aaa
addl
es
iret
mov
movsb
mov
out
scas
add
inc
adc
aas
aas
cmpl
adc
jge
mov
sbb
bound
jmp
push
sbb
cmp
jne
and
adc
cwtl
push
dec
adc
jbe
jne
test
mov
loope
sarb
int
mov
stc
sti
cmp
std
mov
mov
pop
and
test
divb
jge
loopne
loop
mov
loopne
mov
push
sub
push
scas
in
or
mov
cmpsl
xchg
out
imul
xlat
pop
pusha
dec
jmp
dec
aas
sub
adc
js
mov
repz
push
dec
jnp
mov
ja
and
negl
mov
add
arpl
icebp
push
ret
dec
mov
xchg
mov
fbld
out
loop
pushf
jnp
xchg
adc
push
loop
mov
std
pop
dec
inc
xor
fstpt
inc
repnz
sbb
inc
dec
mov
pop
lock
mov
dec
subb
clc
mov
lea
push
aad
aam
push
and
and
jne
and
sbb
jbe
popf
push
jge
outsb
jp
mov
rclb
fstl
mov
add
repz
lods
cmp
aas
inc
inc
lods
and
sahf
pop
lcall
and
and
sub
ja
xor
sbb
rolb
sbb
fsubl
fcmovb
hlt
aam
mov
dec
jbe
enter
dec
xorl
push
adc
ljmp
dec
lret
jno
mov
mov
sub
imulb
push
aam
sti
lret
movsb
and
xchg
mov
push
mov
and
das
cld
cmp
xor
xor
jle
cmpsb
fdivs
aas
imul
pop
lock
add
lret
gs
mov
lahf
leave
loope
jmp
lret
mov
add
fcmovu
jge
imul
xlat
push
hlt
sbb
pop
insl
xor
ret
mov
inc
into
jle
pop
daa
pop
ret
pushf
cmp
clc
scas
daa
mov
sbb
xor
mov
stos
fnsetpm(287
mov
leave
int3
fcompl
inc
sub
mov
xchg
pusha
punpcklwd
ss
mov
xor
ret
mov
pop
ss
cmpsl
jbe
hlt
int3
sbb
xchg
arpl
or
push
call
push
clc
inc
bound
push
cmp
jo
in
mov
add
imul
cmp
pop
mov
adc
je
jecxz
sbb
jne
out
push
adc
mov
shll
les
adc
sbb
popf
in
push
rcll
cmpsl
jo
mov
hlt
lods
int
das
repz
jno
lea
mov
pushf
lea
jns
rclb
add
jmp
and
inc
mov
mov
inc
pop
ja
jmp
pop
lock
adc
sub
jne
fwait
and
cvtps2pd
xchg
into
lcall
in
inc
mov
sbb
aaa
jge
sub
pop
xor
ja
cmp
fcoms
fwait
xchg
jg
adc
mov
sub
int3
add
les
daa
and
sbb
leave
adc
add
stos
sti
cli
insl
aad
and
adcl
retw
and
scas
es
insl
sub
sbb
add
or
inc
mov
or
lret
sarb
sub
stos
jns
cmpb
dec
add
xor
sarl
push
push
jp
mov
jbe
or
std
dec
psrad
mov
inc
sub
je
das
incb
pop
and
mov
jb
pop
fadd
leave
push
mov
test
std
repnz
hlt
filds
call
push
xchg
mov
in
mov
pop
mov
or
test
sti
mov
inc
rcll
or
outsl
fisttpll
shl
addl
cmp
loopne
mov
push
jae
js
push
and
mov
pcmpgtd
dec
sar
sbb
jmp
and
in
mov
shlb
gs
lods
es
mov
push
test
jle
inc
or
cmp
jnp
pop
and
fcomps
stos
or
divl
stos
inc
sahf
push
movsl
loop
lea
out
rclb
int3
lock
repz
lea
movsb
or
lods
inc
cmp
fildll
rorb
sbb
inc
mov
roll
push
inc
addr16
cwtl
adc
mov
mov
aaa
fidivrs
xor
xchg
repz
mov
scas
jge
sti
sub
mov
inc
push
out
lahf
xchg
lds
dec
push
jp
in
pop
jp
mov
daa
lahf
cmpsl
fs
fldl
push
push
jecxz
inc
subl
add
inc
push
insb
xlat
xor
xor
or
sarb
daa
and
cmp
xor
adc
ret
pop
push
jo
cmp
gs
aad
pushf
mov
fnstsw
orb
push
test
pop
jo
jle
inc
movsb
sub
pop
stos
cmp
push
outsb
rorb
jnp
incl
inc
jb
adc
and
sti
mov
icebp
in
outsb
jno
inc
cld
xor
mov
nop
into
test
dec
and
jmp
testb
jge
cmp
mov
xchg
js
dec
and
movsb
adc
or
or
movsl
add
xchg
push
cmp
ret
push
jne
push
lods
push
bnd
xor
and
add
adc
xchg
das
jecxz
cmp
xor
and
adc
gs
rorb
add
pop
adc
into
adc
xchg
lcall
dec
stos
add
pop
int
add
mov
cmp
add
adc
jge
lods
and
pop
mov
mov
inc
in
stos
notb
or
roll
jnp
data16
cwtl
jl
cmpb
and
out
dec
das
int3
pop
dec
pop
das
sub
dec
or
push
test
inc
test
jl
gs
lahf
inc
mov
pusha
adc
mov
shrl
push
xor
cmp
push
imul
cmp
loope
repnz
test
mov
stc
sub
mov
test
dec
rcrl
and
cmp
sbb
mov
mov
xchg
jl
out
into
fisubrs
popa
call
cs
imul
lods
pop
mov
lds
push
push
jecxz
scas
cmc
out
insb
ljmp
in
mov
hlt
pop
dec
out
fdivr
jne
adc
sub
pop
nop
mov
mov
mov
jno
shrb
out
in
xchg
jmp
inc
call
pop
push
or
nop
add
xchg
imul
adc
ror
out
pop
push
mov
ret
pop
pop
xchg
ficomps
es
bound
addr16
pop
push
inc
fstp
ja
xor
fnsave
dec
aam
or
fwait
dec
mov
xor
in
and
cmp
imul
aas
push
mov
mov
cltd
repz
dec
loopne
cld
jno
call
mov
mov
dec
test
and
xor
mov
xchg
xorb
pop
jg
adc
cmpsl
and
loopne
jbe
imul
cld
mov
ljmp
inc
pushf
sbb
add
adc
std
and
sti
mov
xor
out
pusha
mov
bound
aam
xlat
jno
call
xor
jp
pop
leave
test
icebp
adc
lea
xchg
test
mov
cmpsl
xor
outsb
aaa
pushf
cmp
add
fdivr
cmp
scas
inc
mov
clc
jmp
and
scas
fmull
or
sarb
outsb
lret
sub
stos
sahf
sub
mov
sub
mov
mov
pop
and
push
pop
jbe
and
inc
mov
pop
fidivs
call
andb
inc
fld
cmpsl
out
push
cwtl
and
push
mov
cmp
lock
mov
or
adc
cs
cmp
pop
push
bound
adc
out
lods
mov
into
std
lahf
fbld
rcrb
add
mov
sub
xor
imul
jl
sbb
ret
add
mov
outsb
push
adc
lret
sar
ljmp
ljmp
inc
pop
push
cmpsb
lea
pop
out
adc
pop
jl
std
movsl
jmp
je
popf
adc
sti
sbb
imul
addr16
insb
xor
test
pushf
cmp
push
leave
enter
test
clc
push
das
mov
jle
gs
xchg
out
and
mov
negb
jle
jbe
inc
xor
cmpsb
and
ja
cmp
push
lahf
out
out
cmp
xor
push
mov
gs
es
clc
sbb
loopne
js
sub
int
mov
stos
insl
addl
arpl
adc
push
xorl
add
mov
mov
push
adc
stos
xor
popf
mov
outsl
lret
out
jno
xchg
jg
je
aas
pop
mov
mov
out
popf
out
push
sub
or
fwait
test
rorl
cmp
mov
cmc
fsubs
dec
pusha
cmp
mov
out
cmp
je
gs
push
or
lret
adc
jno
mov
push
or
orb
jg
movsb
xor
addr16
push
test
sub
jg
mov
mov
add
sbb
psubb
jecxz
cltd
aas
insb
xchg
ja
push
or
sub
jle
push
mov
mov
les
ret
push
mov
cmc
movsb
stc
mov
int
push
push
pop
scas
lret
das
in
fisttpll
inc
inc
inc
dec
mov
sbb
pop
mov
mov
mov
jle
xorl
cmpsb
mov
cs
cwtl
and
pop
push
sub
adc
jno
mov
sbb
jb
icebp
cmpsb
dec
in
icebp
inc
xchg
out
inc
add
mov
mov
mov
ficomps
mov
out
sbb
push
test
les
shlb
cmp
lock
loope
jns
mov
or
adc
or
js
sub
pop
in
lds
cwtl
clc
adc
in
push
mov
sbb
adc
lcall
pop
sbb
imul
icebp
dec
sbb
jns
lcall
sbb
and
dec
stos
in
and
or
test
cli
or
das
or
daa
cmp
lcall
cmpsb
mov
mov
adc
mov
inc
ja
stos
push
or
adc
fisubs
pusha
pushf
out
mov
sub
xor
fisubrs
push
hlt
xchg
pop
stc
lods
bound
gs
int
fisubs
push
les
int3
stc
push
mov
in
sub
cmpsl
inc
scas
mov
dec
cmp
int3
jns
outsl
mov
sbb
out
sbb
xchg
js
push
cwtl
shll
jle
sub
test
mov
jo
mov
iret
jbe
int3
or
push
das
call
dec
dec
mov
mov
lret
icebp
and
adc
push
je
cmpsb
outsb
jo
mov
ljmp
and
in
mov
nop
ret
mov
push
xor
dec
jge
stos
das
fistps
xor
cwtl
inc
repnz
pop
out
in
adc
mov
add
leave
pop
or
sbb
inc
stos
loop
outsl
mov
jecxz
xorl
mov
jno
ficoml
push
mov
mov
test
out
push
aad
arpl
popf
mov
mov
add
test
dec
scas
decb
mov
roll
mov
pop
xchg
mov
and
cmpsb
cld
arpl
sti
mov
cmp
sbb
shll
movsb
push
dec
xor
mov
scas
les
out
into
pop
pushf
idivb
adc
fldcw
popf
push
lea
dec
mov
out
push
test
or
stos
adc
out
fstps
idiv
pop
int3
adc
or
inc
in
js
push
mov
add
icebp
and
cmp
push
or
sub
jg
push
in
out
pop
jg
stc
test
jae
sbbb
jno,pt
mov
mul
ja
cmc
call
loopne
mov
pop
jae
add
adc
rcl
mov
arpl
adc
xchg
push
imul
aam
das
je
mov
jnp
jp
pop
cli
cmpsl
jp
ss
inc
pop
pop
mov
lock
and
cld
mov
dec
adc
dec
mov
inc
mov
mov
popa
lahf
mov
inc
xorb
outsl
cmp
movsb
jl
inc
mov
sbb
sti
and
and
ret
lds
jae
dec
adc
inc
sbb
leave
pushf
mov
rcrb
and
sbb
xor
cmpsl
xchg
mov
push
inc
mov
dec
shlb
pushf
in
lcall
and
shlb
jp
sbb
xor
sbb
pop
adc
push
mov
loope
adc
jle
adc
mov
in
je
dec
dec
inc
lahf
dec
pusha
mov
das
mov
lds
aas
int
mov
mov
div
and
xor
loop
clc
cs
idivl
hlt
ja
loope
arpl
inc
sub
ss
sbb
arpl
jns
dec
mov
adc
mov
lcall
add
add
daa
mov
push
mov
jne
push
shlb
loop
rolb
sub
fbstp
inc
xor
fnsave
daa
mov
and
imull
in
imul
xchg
andl
mov
ljmp
or
es
aad
dec
dec
pop
data16
and
mov
bound
or
std
push
shlb
jecxz
jns
aad
sub
pop
mov
ljmp
mov
mov
push
cmp
cld
inc
int
das
and
in
nop
sbb
xlat
mov
xor
jo
cmp
test
dec
ljmp
fwait
sti
jo
add
jmp
push
fbld
adcb
push
js
sbb
sbb
mul
sbb
jl
add
sbb
inc
or
lock
pop
sub
push
mov
icebp
popf
loop
sbb
cs
jae
mov
sbb
adc
cmc
jno
mov
push
sysret
into
daa
mov
cmp
cltd
jmp
inc
shl
and
outsl
loop
flds
in
in
ljmp
stc
cmp
or
dec
in
das
and
mov
lods
lret
mov
jnp
xchg
mov
andl
jg
adc
rcrl
mov
loopne
aam
push
out
xchg
out
in
cmpb
je
mov
inc
pop
lods
adc
inc
fsubl
ja
fucomip
dec
push
sub
in
in
aaa
in
je
aad
jle
jns
adc
or
mov
fmuls
mov
adc
xchg
push
insl
mov
data16
pop
fists
test
push
push
ljmp
sub
xor
sahf
add
pop
mov
cmc
xor
nop
or
pop
out
outsb
and
cs
shr
imul
inc
pop
xchg
js
sbb
dec
dec
add
dec
call
loope
cmp
mov
pop
je
loop
cld
sarl
jl
mov
out
jle
mov
in
adc
movsl
data16
pop
or
rcrl
ds
sub
cs
bound
mov
icebp
dec
lods
cli
popa
sbb
out
xchg
push
les
inc
add
ret
insl
pop
cmpsl
add
aas
cld
ret
adc
lret
je
inc
lahf
sarb
pop
or
cmp
cmp
loope
shr
pop
insl
movsl
call
in
or
mov
mov
lds
fadds
ljmp
fwait
stos
rcll
lea
dec
data16
lret
sub
cli
ds
mov
pop
fcomps
push
fldcw
add
sbb
lret
mov
xchg
xchg
ss
hlt
xchg
in
add
scas
adc
stc
loop
cmpsl
sbb
or
insl
in
xor
and
popa
and
or
xchg
cmp
mov
filds
imul
add
fwait
stos
scas
ret
inc
pop
and
xlat
aad
and
cltd
push
cmp
test
sub
or
lret
add
popa
xor
outsl
lods
call
or
xor
and
inc
shl
mov
sbb
pushf
repz
insl
and
loop
inc
push
in
jb
iret
adcb
shlb
cltd
lcall
dec
pop
mov
popf
or
test
and
add
add
mov
sbb
xchg
aaa
out
xchg
pusha
xchg
mov
or
and
pop
in
push
dec
sub
ss
fstpl
jle
sbb
jns
pop
rcll
int3
mov
mov
cli
sahf
icebp
in
cmpsb
sbbb
pop
xchg
sbb
cld
cld
jae
mov
push
cmc
sub
jb
cmpsl
dec
inc
aad
mov
mov
out
pop
pop
daa
cmp
xor
les
outsl
popf
mov
stos
test
stos
sbb
dec
inc
je
ss
mov
jle
aad
je
movsl
xor
insl
jmp
dec
clc
imul
cld
out
dec
dec
scas
sahf
mov
aad
cmpsb
sub
testl
je
push
jae
mov
das
pop
pop
sti
and
xorb
cmpl
jbe
into
mov
mov
icebp
cmp
or
inc
dec
mov
mov
leave
cmp
sar
jae
adc
cld
movsb
mov
testl
xchg
pop
push
subl
test
xorb
sbb
ret
daa
xchg
jb
ret
push
xor
add
adc
add
jge
or
lcall
div
cmp
loope
in
push
leave
nopl
aas
jge
jbe
test
push
and
je
sbb
push
mov
mov
lahf
in
adc
clc
ss
jge
sbb
mov
sub
shrb
inc
mov
sub
pusha
sub
mov
test
movsbl
sbb
in
insl
push
pushf
dec
sar
xchg
lock
and
addl
xor
testl
jnp
and
daa
sti
rcl
rcl
andl
outsb
mov
test
mov
jle
rorb
mulb
aas
int3
cmp
xchg
ja
shl
data16
stos
mov
inc
mov
scas
jp
and
inc
adc
push
test
cmp
or
fildll
ret
mov
jle
push
leave
add
mov
test
push
je
xor
push
mov
push
ds
mov
or
sbb
mov
stos
int3
ljmp
sahf
mov
xor
xchg
mov
xor
out
lock
inc
inc
inc
addr16
dec
cmpsb
adc
out
sbb
xchg
lock
or
add
push
loopne
add
xor
sub
pop
add
push
sti
lods
cmp
cli
pushf
pushf
cmp
dec
sub
imul
les
mov
dec
int3
test
mov
pop
lds
in
and
mov
dec
adc
and
or
ljmp
mov
push
push
or
les
jle
push
lods
mov
adc
jo
hlt
sub
aam
cmp
call
jl
add
fcomps
daa
mov
adc
clc
outsb
movsb
add
cli
repnz
test
ja
push
movsl
lds
shll
sub
outsl
xchg
cmp
jl
mov
fimull
dec
shll
mov
xchg
test
cmp
mov
outsb
add
rolb
cmpsl
popa
xchg
dec
gs
out
inc
mov
lds
pop
inc
mov
cmpsb
ret
clc
mov
out
sahf
and
mov
push
mov
stc
lcall
xor
mov
pop
aas
out
test
int3
push
mov
fnstsw
mov
inc
in
test
rcrb
mov
mov
fidivs
loop
cmp
out
es
mov
fistpl
mov
out
dec
lods
add
js
adc
dec
and
idiv
cmp
imul
mov
test
xor
push
mov
clc
xor
mov
clc
push
addl
mov
mov
mov
mov
aas
popl
and
aad
shr
and
notb
cmp
adcl
push
jbe
cli
push
ds
in
sbbb
sbb
mov
fstp
jns
sbb
es
mov
mov
dec
mov
jns
lods
lock
call
jnp
cmc
xchg
mov
jbe
cmp
cmp
xor
push
sub
aas
push
adc
out
inc
mov
mov
lcall
sub
jnp
xchg
mov
push
or
xchg
dec
sbb
in
cmp
iret
aaa
sub
in
pop
cmc
cld
sub
rol
mov
loope
inc
and
mov
in
in
jecxz
mov
add
std
adc
jb
cmc
sbb
subl
sbb
nop
shlb
cmpsl
ficoml
inc
sub
pop
pop
repz
pop
stos
movl
repnz
cltd
inc
out
mov
fidivrl
adc
cmp
and
std
or
adc
adc
lret
ja
pop
pushf
repnz
mov
scas
dec
cmp
sub
mov
or
fnsave
fs
rclb
and
nop
fsubs
xor
sub
ss
scas
cmpsb
adc
sti
subl
cmpb
sbb
pop
jae
dec
jg
rol
and
movsl
xchg
imul
aas
cmp
or
inc
adc
sub
and
divl
mov
movsb
cld
fdivl
out
push
movsl
pop
rcrb
mov
jae
mov
pop
xchg
outsl
adc
fiaddl
lods
adc
hlt
adc
pop
pop
add
push
xchg
mov
lods
mov
inc
clc
dec
push
lods
xor
lea
int
aad
mov
push
pop
repz
pop
adc
sbb
inc
push
in
jns
insb
addr16
int
or
repz
add
loope
or
mov
fadds
cli
js
sub
inc
xor
or
cli
sahf
cmp
xchg
jcxz
sub
or
sub
pop
sbb
movsl
dec
mov
sub
push
or
call
mov
push
rol
sub
adc
xchg
sbb
and
dec
lret
jl
push
inc
lock
mov
push
pop
xor
pop
mov
dec
mov
fcomi
pop
sbb
jp
add
vmovq
xor
lahf
in
sti
cld
stc
jne
sub
xchg
cmpb
and
pushf
add
jmp
mov
aad
mov
pop
pop
push
add
mov
mov
sub
sahf
pop
dec
inc
es
push
arpl
adc
addb
xchg
xchg
sbb
movsl
xor
adc
xor
cmpsb
push
mov
mov
adc
ficoml
push
cld
jmp
sub
popl
jmp
test
fwait
mov
lock
add
jne
cmpsb
addr16
cmp
hlt
stos
mov
xchg
push
fdivl
add
int
or
lods
loop
pop
pop
push
xchg
inc
mov
cmp
pop
push
pop
lahf
lahf
insl
cmpsb
mov
je
test
outsb
movsb
add
sbb
fxch
sub
mov
or
insb
mov
leave
testb
ss
loop
fstps
jae
inc
jg
xor
mov
cmpsb
sub
roll
push
in
cmp
pop
inc
stc
repz
jge
inc
xlat
sub
movsl
inc
xchg
xor
loope
xlat
subb
in
rolb
xlat
and
data16
mov
fcoml
popl
ret
inc
adc
lahf
ds
in
std
jp
dec
aad
cmc
and
popl
pop
scas
lods
adc
arpl
stc
popa
les
js
fwait
sub
inc
push
cld
cmc
add
jl
sbb
fwait
jmp
out
movsb
push
enter
or
adc
push
pop
add
ljmp
inc
add
push
sbb
enter
repz
fcomi
loop
mov
insb
sub
push
cwtl
fs
inc
xorl
in
lahf
divl
decb
in
or
js
mov
movsb
adc
xchg
jns
xchg
mov
repnz
inc
push
fdiv
push
movsb
fadds
and
sub
cmp
or
test
adc
sbb
add
inc
xor
dec
sbb
loopne
sbb
push
ds
mov
fmuls
ret
pop
les
sbb
inc
int
daa
pop
mov
mov
inc
out
mov
into
cld
mov
pop
mov
loopne
sbb
int3
scas
repz
out
bound
mov
push
xchg
xlat
xchg
orl
jbe
repnz
pop
jl
mov
xchg
lahf
mov
repz
rcr
mov
mov
aad
xor
xchg
cmp
stos
shlb
je
mov
lcall
lret
pop
jecxz
sbb
dec
dec
cmp
bound
add
mov
mov
pushf
push
pop
dec
sub
mov
rorb
add
fsubrl
cmp
mov
and
cmp
popf
dec
aam
sbbl
mov
ret
cmp
add
jg
dec
repnz
std
pop
adc
dec
xor
mov
movsb
subb
or
fwait
adc
mov
inc
aam
xor
jmp
xchg
scas
sahf
daa
adcl
adc
jno
push
and
add
aaa
adc
pop
sbb
pop
add
mov
xor
inc
test
mov
xor
cmp
mov
inc
mov
je
pop
nop
orl
call
sbb
xor
aas
jl
push
fnstcw
ljmp
imul
jl
loopne
fwait
dec
mov
cmp
sbb
pop
shll
jmp
and
add
sub
add
cmpb
test
dec
bound
mov
jmp
inc
popa
pop
jbe
cmp
scas
cmp
mov
icebp
sahf
insb
and
mov
mov
cmp
std
push
mov
lock
push
inc
mov
testl
inc
jns
adc
sbb
sbb
push
adc
roll
push
mov
mov
mov
or
mov
xor
cli
inc
mov
sbb
push
mov
xchg
shrb
mov
pop
xor
decb
pop
lahf
faddl
ror
mov
cli
adc
xchg
push
xor
cmp
mul
sbb
push
das
mov
dec
pop
or
fwait
in
mov
add
or
clc
fidivl
enter
out
pop
push
mov
testb
xchg
jp
lret
add
inc
mov
fstpl
in
fsts
adcl
pop
dec
inc
call
or
ja
gs
xchg
in
mov
mov
add
mov
sbb
mov
or
xor
jne
and
xlat
mov
shrb
mov
loop
adc
mov
fstl
and
frstor
jmp
cmpsb
xor
mov
pop
mov
out
xor
les
mov
push
cmp
dec
cmp
or
or
mov
mov
cmc
out
pop
int3
jge
dec
jno
jp
xchg
add
lret
out
jmp
clc
dec
cmp
imul
xchg
xchg
dec
push
je
xchg
sub
push
or
or
adc
decl
jmp
xor
fwait
mov
movsb
mov
lret
mov
dec
outsb
or
pop
fidivs
icebp
mov
push
ss
test
lods
fsubrs
outsl
ret
cli
jl
aam
add
or
scas
in
or
push
xchg
cmc
js
pop
imul
mov
pop
cli
mov
ljmp
mov
sahf
push
out
cltd
jo
inc
lret
mov
out
sbb
xor
shl
pop
xor
cli
xchg
jbe,pn
cmp
outsl
mov
inc
lods
stos
mov
push
add
xor
sbb
mov
mov
push
add
add
sbb
jns
shl
iret
push
sti
cli
and
jo
inc
adc
mov
pop
jb
lahf
out
outsl
xchg
scas
int
pushf
pushf
pop
sbb
repnz
out
loopne
xlat
fmull
xor
clc
and
sub
rclb
loopne
adc
arpl
das
inc
xchg
cs
loope
lret
mov
outsl
sbb
jo
imul
repz
cmp
lcall
mov
inc
cmc
std
dec
in
sbb
push
ds
fwait
xor
imul
mov
push
pop
call
sub
iret
xor
aaa
ja
mov
sbb
popf
addl
mov
and
fmull
fwait
ljmp
testb
lcall
sub
jb
je
mov
add
pop
mov
arpl
mov
jecxz
test
rclb
or
inc
call
mov
shlb
pandn
iret
cli
jle
mov
push
es
lock
add
jbe
mov
pop
push
idivl
pushf
xchg
cltd
aaa
dec
add
sub
xor
pop
xor
mov
pusha
out
push
cmp
or
jp
into
fs
sub
mov
pop
mov
mov
mov
ljmp
cmp
dec
int
jns
adc
sbb
ja
rcl
mov
mov
cmp
decb
lods
movapd
repnz
flds
ljmp
adc
icebp
cmp
mov
xor
dec
mov
cltd
push
mov
mov
add
mov
inc
lahf
jp
sub
or
es
inc
loope
jae
sub
mov
fisubrl
dec
sbb
insb
sbbb
add
ret
sbb
or
call
fimull
hlt
cmp
sub
xor
inc
std
cmp
mov
sbb
push
jnp
gs
fstl
xor
imul
mov
jge
push
adc
cmp
sub
pusha
std
push
loopne
push
cmpsl
cmc
ss
xchg
ret
push
stos
std
cmp
mov
mov
fmull
mov
and
and
push
aaa
imul
jns
mov
pop
scas
pop
scas
pop
aaa
arpl
mov
push
add
mov
push
jns
inc
push
pop
cmp
xchg
and
lret
mov
das
and
push
or
push
stos
ljmp
pop
ljmp
sub
add
sub
hlt
in
imul
jnp
mov
fcmove
push
xorl
xchg
mov
mov
push
movb
test
and
ss
insl
insl
dec
test
pop
iret
mov
adc
icebp
lods
jb
test
out
loopne
jb
shl
xor
imul
fstps
test
cwtl
sbb
push
xchg
popa
scas
sti
shrl
sub
cmp
xor
xchg
or
frstor
test
inc
jns
leave
leave
pop
gs
rcll
xor
sub
das
aaa
dec
push
shrb
push
xchg
xlat
outsl
push
xor
mov
mov
jmp
pushf
stos
test
rcrl
insl
jg
cmp
pushf
inc
sbb
mov
xchg
aas
dec
clc
call
stos
out
test
push
mov
mov
push
lods
mov
push
jb
cwtl
lret
pop
sub
in
aad
jle
cmp
sub
insl
out
es
jne
mov
push
jecxz
xchg
mov
dec
mov
mov
stos
call
insl
xchg
push
stc
dec
iret
cmp
xchg
jp
xorl
movsl
push
cmpl
xor
imul
add
mov
addr16
and
fimull
mov
jge
pop
jo
loop
pop
jnp
mov
sti
pop
loopne
mov
sbb
mov
cs
xchg
mov
arpl
cmp
or
xchg
pushf
adc
fucomp
stos
mov
jle
jns
xchg
icebp
sbb
inc
lock
push
or
cltd
enter
je
inc
pop
icebp
iret
cmp
movsb
cmpsl
sub
jmp
adc
sbb
icebp
in
adc
adc
push
xchg
std
xchg
aaa
add
test
dec
push
push
sbb
stc
inc
xlat
stc
jae
sar
pop
mov
dec
mov
scas
dec
popf
mov
xor
pop
cltd
add
fwait
inc
imul
aaa
sbb
mov
out
ss
sahf
nop
inc
or
jbe
or
add
fsub
mov
xor
sub
adcb
jns
pop
pop
jno
sahf
into
and
xor
mov
dec
dec
xlat
cmp
ret
jecxz
idiv
into
xor
shlb
cld
jne
bswap
data16
push
cmp
push
shrl
pop
loopne
js
mov
sbb
pop
mov
into
das
jae
aad
mov
xchg
pop
or
int
pop
xchg
inc
xchg
push
or
cmpsl
addr16
inc
xchg
dec
loopne
inc
jp
mov
cmc
xor
sbb
mov
ljmp
adc
cmp
fstps
dec
fisttps
mov
mov
cmpsb
bound
arpl
pushf
mov
pop
dec
mov
inc
cmpsb
xchg
nop
mov
jmp
enter
xor
lcall
pcmpeqb
addr16
cmpsl
cmpsl
xchg
dec
clc
mov
cmp
in
adc
pop
call
out
repnz
into
scas
test
divl
addr16
or
cmp
popa
divl
test
xchg
loopne
and
sbb
and
mov
jge
and
mov
push
sbb
in
gs
or
sbb
xlat
push
mov
scas
or
aaa
xchg
xchg
jns
movsb
cmp
jg
loopne
pop
inc
imul
sbbb
adc
jl
adc
xchg
ss
movsl
aas
mov
les
std
xchg
pop
adc
lcall
lock
popf
pop
fsubrl
and
invd
lds
test
inc
lcall
test
arpl
inc
sbb
jmp
into
sbb
loopne
adc
mov
add
sbb
pop
jne
push
cltd
mov
mov
test
jae
sub
pushf
das
ss
mov
je
lret
mov
testb
add
cld
cmp
hlt
test
loopne
sub
push
es
test
sbb
ret
imul
sbb
mov
gs
jbe
aad
mov
mov
ror
pop
sarb
mov
scas
jecxz
cmpsb
sbb
inc
movsb
fs
bound
pop
jo
sbb
xchg
mov
jle
mov
scas
dec
aad
pop
sub
mov
mov
insb
imul
lret
orb
das
aam
ja
lods
cmc
jno
xchg
push
lock
dec
ja
ret
outsl
pop
shrb
or
inc
stos
iret
sub
fwait
mov
imul
sub
add
push
push
sub
stc
sub
roll
fwait
les
dec
in
stos
adc
clc
ljmp
jae
xor
mov
cld
loop
pop
or
loopne
arpl
or
jns
xchg
cmp
popw
or
and
test
sbb
sti
icebp
xlat
pusha
inc
cli
adc
and
push
aas
adc
and
cltd
ret
pusha
out
mov
sbb
lds
inc
xor
enter
mov
pop
movsl
mov
sbb
fwait
mov
inc
call
or
mov
ja
ja
push
divl
or
scas
jb
fstl
enter
roll
in
into
jp
xchg
xchg
test
imulb
inc
pusha
movsl
xchg
jnp
lea
and
enter
cltd
test
imul
cmpl
lods
pop
ret
or
shrb
ds
nop
xor
push
mov
mov
jno
dec
js
cmp
cmpsb
scas
cmpsl
jmp
xor
lods
rol
pusha
add
push
mov
mov
xor
inc
daa
xchg
xor
bound
and
add
sub
shll
pop
mov
mov
test
xor
add
push
cmp
ja
add
ds
sti
call
dec
jmp
mov
fwait
add
lods
ficoml
dec
pop
xor
dec
jns
sbb
pusha
cli
test
js
mov
push
jae
adc
cmp
adc
scas
or
jge
pop
xchg
pop
daa
inc
xor
pop
sub
push
scas
in
add
cwtl
cmpsl
push
int
pop
add
sbb
inc
shlb
test
jl
ja
popa
enter
adc
fwait
lret
cmp
rcl
sbb
pop
enter
mov
ss
lcall
mov
pmuludq
lods
and
mov
mov
das
jecxz
repnz
rolb
push
fwait
cmpb
sar
je
mov
cmp
cmp
cmp
jmp
inc
testb
shll
cmp
push
inc
cs
call
into
leave
int
das
jae
push
sbb
mov
mov
jp
push
mov
enter
cld
cmp
pop
mov
scas
into
ss
ss
test
push
std
mov
out
int
pop
aam
and
cmp
jo
pop
or
popf
loope
adcl
xor
fidivrs
stos
iret
aas
jns
mov
shlb
sbb
add
xor
sbb
movsl
pop
jl
jns
fs
sbb
insb
jns
push
sbb
and
jnp
mov
dec
imul
pop
adc
loopne
mov
jecxz
adc
dec
mov
popa
adc
mov
ja
xor
or
sbb
push
jg
daa
lods
cltd
inc
add
movsb
lods
rolb
insb
xlat
jmp
call
adc
xchg
jb
addl
push
cmp
insb
adc
mov
insb
jo
jno
mov
jo
xor
sub
mov
cmp
push
mov
in
jb
push
rsqrtps
mov
fdivrl
jmp
sub
pop
test
sbb
mov
fildll
imul
mov
push
and
or
sbb
lahf
jae
nopl
movsb
subb
add
sti
jl
sahf
js
aaa
xchg
gs
inc
sub
fisubl
sbb
jg
or
mov
sbb
cmp
push
xchg
cmp
mov
rcr
xchg
repnz
jns
ret
fcoml
pusha
inc
or
ljmp
cmp
je
addl
stos
or
jne
hlt
lods
imul
inc
dec
push
push
data16
idivl
add
popa
mov
push
aam
ja
imul
cs
and
outsl
xor
ret
xor
or
subl
scas
pushf
pop
cwtl
xor
enter
sub
cltd
xor
sbb
movsl
sarb
in
push
sub
ss
test
repnz
push
or
mov
mov
ret
pop
repnz
out
push
and
adc
sahf
adc
outsl
sahf
add
dec
pop
push
mov
dec
sahf
cld
xor
popf
jne
sarl
leave
je
gs
repz
xchg
je
pop
fimuls
pop
cmp
xchg
push
repnz
repnz
sub
rolb
imul
outsb
into
std
scas
pop
cs
push
jns
push
into
sbb
loope
pop
das
cwtl
jl
fdivs
push
lea
idivl
or
adc
stos
hlt
xor
lods
rclb
push
pop
movsl
mov
push
push
ljmp
xor
jnp
mov
sbbb
stos
enter
divl
push
cmpsb
sbb
sar
lods
repnz
je
inc
cmp
sub
mov
andl
scas
mov
pop
inc
sub
push
imul
mov
jp
out
pushf
cmpb
jmp
add
jb
cmpsl
cwtl
push
lret
decb
movsl
lahf
aad
lret
lea
adc
cld
jae
add
rorb
lahf
mov
in
gs
inc
sub
mov
xor
push
sbb
aam
fdivs
pop
add
lret
xchg
stos
loope
dec
sbb
mov
scas
lods
mov
ss
or
sub
shl
js
int
or
adc
pop
sub
xchg
add
fs
pop
js
mov
scas
cli
aas
adc
outsl
cld
sti
xlat
sbb
divl
inc
xor
xchg
out
jge
mov
sahf
sbb
imul
add
insl
outsb
or
test
scas
cmpsb
inc
lea
es
movsb
jp
fimuls
xchg
sub
test
jge
sbb
jmp
sar
mov
lcall
and
push
xor
out
add
dec
add
stc
cmp
mov
adc
push
fldcw
adc
push
and
icebp
adc
mov
stc
add
dec
dec
lods
xor
inc
out
test
push
xchg
sbb
cmpsl
pusha
loop
sar
sbb
jo
sbb
jecxz
push
add
add
adc
dec
shll
cltd
stos
mov
sub
lods
xor
sub
fmuls
cmp
xor
mov
sbb
scas
jo
in
add
mov
pop
pushf
or
in
dec
jae
rolb
mov
lret
xor
fucomp
fistpl
pop
push
cmp
enter
sub
in
addl
into
sbb
sahf
add
mov
inc
xor
cmc
daa
and
cmp
shrb
cmpsb
jo
psubb
mov
std
popl
inc
jnp
mov
push
scas
jmp
cmpsl
int
pop
cmpsl
or
or
jp
mov
inc
xchg
test
call
imul
scas
data16
push
push
mov
xor
js
sbb
cmp
in
fildl
jl
sub
ds
dec
push
xor
sbb
ret
mov
arpl
sub
mov
push
dec
aaa
fimuls
mov
sarl
xchg
jmp
push
mov
arpl
xlat
rorb
add
cmovbe
mov
inc
bound
pop
xchg
mov
inc
xor
add
filds
inc
jge
cmp
in
clc
add
mov
jbe
fstl
xor
mov
repnz
fsubr
cli
fsubrp
pop
out
push
loop
mov
sbb
mov
mov
pushf
add
ret
enter
es
sbbl
fwait
das
loop
testl
mov
jl
fwait
inc
sub
cmp
int3
das
fwait
jg
data16
rol
pop
clc
aam
mov
push
pop
sbb
aas
cld
aaa
cmpsb
xor
sub
push
repz
int
stos
mov
pop
aaa
frstor
cmpsl
insb
fistps
mov
lahf
data16
lea
jp
add
xor
xchg
pop
sbb
xor
or
mov
mov
inc
pop
xchg
imul
mov
pushf
pop
sarl
add
jae
mov
push
pop
xchg
ja
jle
adc
cmc
aas
fsubrp
outsb
test
xor
push
mov
lea
mov
gs
jnp
xchg
mov
inc
nop
inc
aam
fisttpll
fisubrl
mov
xchg
in
push
movsl
mov
ret
sbb
sbb
add
ret
ret
cltd
mov
cwtl
cmp
lock
cmp
add
movsl
push
insb
jmp
lock
cwtl
popa
rcrb
fcoms
out
sbb
into
fs
mov
or
arpl
ds
mov
pop
pushf
in
mov
nop
adc
push
fndisi(8087
rolb
push
xchg
xchg
ffreep
insl
inc
lea
jmp
repnz
mov
push
adc
xchg
fcoml
jg
enter
add
enter
jl
push
sub
mov
jmp
sbb
aaa
fwait
stc
xchg
and
fcompl
loopne
jg
xor
cld
and
in
mov
adc
dec
aam
mov
inc
pusha
int3
cmp
sub
push
jmp
enter
xchg
je
xchg
daa
mov
inc
jne
out
push
cmp
xchg
cmp
loope
imul
cltd
lods
stos
adc
xchg
pop
pop
les
testl
pop
fsts
hlt
movsb
pop
movsl
dec
gs
fmull
mov
hlt
mov
mov
add
xchg
int
lret
notb
xlat
cld
pop
lods
pop
sbb
andb
lret
jmp
pop
xchg
insl
sub
and
inc
cmc
pop
fcompl
xor
or
pop
and
aam
jecxz
shlb
pop
loopne
push
out
sbbb
shrb
out
push
jecxz
inc
lcall
scas
cltd
mov
xchg
cwtl
rcrl
add
call
dec
push
xor
pushf
mov
popf
hlt
push
or
outsb
fcomps
mov
lods
cmc
lcall
sahf
and
cli
and
add
xchg
and
mov
pop
out
loop
xchg
stc
cli
inc
dec
test
test
jb
imul
addb
incb
cmp
sub
and
xchg
les
xchg
mov
incl
imul
pop
and
xchg
xlat
stc
in
lcall
pop
fcompl
inc
sbb
ds
sar
xchg
scas
stc
mov
frstor
xor
call
fs
loope
and
push
xchg
out
outsl
insl
sbbl
cmp
shr
movsl
and
xchg
shll
jnp
pop
jnp
add
repz
out
mov
rol
js
aad
xchg
jmp
mov
fs
aas
fdivrl
pop
lret
fsubl
dec
mov
fstl
pop
pop
xchg
xchg
lret
cmpsl
push
cmp
fcmovnu
sub
loop
lcall
sbb
aas
mov
fucomip
int3
jge
test
loope
mov
dec
push
dec
leave
jl
cmp
push
pop
dec
clc
inc
jmp
mov
xchg
cmp
jp
push
sarb
outsl
mov
dec
ret
mov
inc
lret
flds
xchg
mov
sub
addl
cmp
mov
and
aad
mov
inc
sbb
and
subb
and
dec
mov
add
gs
iret
jns,pn
pop
iret
cmp
adc
shll
imul
popa
notl
mov
or
sub
xor
or
mov
es
sbb
das
loop
sti
xor
lods
add
jbe
push
addr16
ja
gs
rcll
jbe
gs
dec
cmpsl
jbe
in
dec
cmpb
xor
xchg
xor
push
xchg
into
adc
mov
pop
jle
fiadds
cmp
insb
and
nop
cmp
and
or
push
shlb
xchg
adc
add
insl
cld
leave
clc
getsec
jb
adc
pop
in
stc
rcrl
xchg
xor
cmpsl
or
jmp
sbb
sbb
dec
cltd
cmp
orl
mov
mov
mov
enter
jmp
fmull
lds
dec
adc
ds
lods
ljmp
leave
cltd
pop
add
lcall
cmp
add
or
push
les
adc
lret
rorl
pop
sub
fs
add
aad
pusha
sub
adc
cltd
inc
push
push
imul
xor
lock
push
push
outsl
movsl
pop
stos
or
repz
cmp
sub
pop
inc
mov
xlat
jb
dec
ljmp
in
aam
mov
data16
jb
in
push
shl
push
push
dec
loope
adc
mov
sahf
inc
mov
push
sub
test
jp
clc
add
xchg
rorl
cmp
in
in
pop
into
mov
sub
lea
push
iret
adc
mov
dec
add
lea
aaa
insl
push
dec
and
repnz
jecxz
mov
pop
add
aad
test
jo
icebp
arpl
out
xor
icebp
popf
das
stos
icebp
inc
fcoml
imul
mov
sahf
pop
lock
out
ljmp
mov
pop
push
cld
cmpsb
mov
push
push
mov
movsl
adc
les
js
arpl
sbb
sub
inc
add
outsl
mov
les
das
ficoms
fmuls
bound
adc
sub
dec
adc
dec
cmp
ds
stc
mov
popa
jl
jecxz
mov
stos
mov
aas
pop
cmp
ret
inc
ja
pop
xlat
jno
cltd
into
test
pop
in
xchg
fcoms
imul
add
out
ljmp
pop
ret
mov
push
sub
and
xchg
sub
sbb
fidivrl
out
icebp
mov
scas
fs
or
inc
mov
imulb
cmp
sahf
mov
mov
add
aam
sbb
sbb
or
push
dec
addl
adc
loope
enter
enter
push
mov
aad
loopne
pop
mov
das
movsl
add
cwtl
mov
jo
jae
in
pop
in
lahf
ret
out
dec
outsl
aas
mov
push
imull
in
inc
inc
jne
and
push
dec
lahf
sbb
jecxz
xchg
fimuls
mov
mov
fsubs
out
jecxz
mov
pop
and
adc
mov
mov
jl
sub
or
dec
mov
std
sub
adcl
loope
or
jl
jne
test
sahf
push
pop
dec
xor
insb
imul
sub
add
ret
mov
add
cli
clc
call
adc
call
cmp
pop
push
ljmp
and
mov
pop
inc
sbb
sub
ss
cmpsl
incl
cmp
fnstcw
mov
es
out
inc
cmc
fstpt
in
scas
jb
aad
loopne
sub
aam
jns
lods
rorl
lods
sub
sbb
mov
int3
aaa
xchg
jb
lcall
and
push
jmp
and
rclb
into
sbb
lds
ret
stos
ficoml
dec
pop
test
lods
sbb
mov
scas
push
mov
ret
fsubr
mov
std
or
push
mov
sbb
mov
test
sub
mov
dec
lds
lock
imul
adc
mov
xchg
fs
movsl
mov
fcmove
lds
rep
stos
outsb
out
into
enter
loope
xor
add
iret
jp
dec
xlat
outsl
jl
lahf
inc
mov
inc
lods
lret
push
sarb
inc
jecxz
loopne
inc
pop
ss
push
je
scas
insb
push
and
gs
sub
jns
mov
xchg
cli
adc
pop
rclb
inc
add
cvtpi2ps
enter
pushf
and
push
sbb
add
dec
roll
call
pushf
push
lret
mov
iret
movsl
movsl
lcall
shrl
aas
stos
or
sub
fadds
cld
insl
loopne
movsb
out
and
pop
pop
dec
movsl
dec
or
aas
sahf
mov
jnp
mov
mov
icebp
mov
cli
test
shl
or
dec
ret
sub
ljmp
ret
or
add
iret
cli
jo
mov
mov
rclb
dec
shll
lret
jg
gs
mov
std
and
fcomi
add
iret
les
lret
xor
xchg
sub
fdivrl
dec
xchg
test
rcrl
bound
repz
popf
rcrb
or
gs
fs
repz
outsb
loope
aaa
xchg
pusha
pop
fildll
fidivl
aaa
lods
mov
rorl
ds
jecxz
movsb
pop
push
shll
push
adc
xchg
add
xor
or
pop
inc
pop
push
scas
inc
pop
mov
jle
loop
gs
cmp
addb
inc
test
stc
pop
scas
cmp
and
or
mov
icebp
inc
mov
test
insb
mov
out
scas
mov
movsl
sub
add
aam
dec
ja
fisttps
outsb
jp
gs
mov
cltd
imul
stos
fnstsw
mov
xor
mov
push
in
mov
mov
ret
inc
clc
scas
mov
add
jg
sub
jne
add
cmpsb
stos
arpl
cmp
xor
stc
lahf
sbb
adc
hlt
and
adc
scas
and
push
dec
scas
fildl
inc
fadd
data16
movsb
outsl
arpl
jns
lds
xchg
data16
ret
out
push
xchg
sub
loopne
xlat
scas
mov
pop
pop
add
jo
jg
xchg
dec
dec
push
xchg
into
or
test
fwait
sub
and
out
cmp
mov
sbb
sub
push
aam
shll
mov
mov
and
jnp
mov
gs
xor
pop
lock
sbb
popa
or
sub
pushf
aaa
ror
fs
cli
inc
xor
roll
sbb
dec
scas
fstps
mov
and
sub
mov
mov
mov
push
push
sub
pushf
cmp
push
mov
adcl
out
int
es
in
pop
out
pop
sub
sbb
mov
sub
push
and
cmp
cs
dec
test
jbe
stos
dec
ja
add
jecxz
xchg
mov
dec
jp
std
iret
data16
loopne
mov
outsb
push
jmp
jl
inc
xor
out
cli
in
sub
xchg
inc
js
subl
js
in
mov
in
ja
adc
cs
das
roll
adc
jmp
sbb
in
cmpsb
ja
lods
mov
mov
and
or
andl
aad
das
movsb
jg
cltd
adc
sbb
pop
rcl
std
bound
mov
jno
push
fmull
into
push
cld
xchg
dec
popa
push
scas
lret
push
addr16
pushf
xchg
and
aad
push
mov
xor
outsl
leave
mov
cld
dec
les
mov
adc
jecxz
jo
loop
stos
les
sub
je
dec
je
xor
push
adcb
mov
clc
hlt
clc
xchg
aas
cltd
cmc
add
andl
pushf
ja
pop
aas
call
inc
xchg
dec
xchg
push
popa
mov
mov
mov
push
dec
lahf
js
mov
mov
enter
rol
nop
mov
and
xchg
inc
and
arpl
daa
mov
and
in
scas
adc
mov
jo
jns
push
and
xor
aam
insl
sub
cmc
pop
xor
mov
sub
mov
inc
stos
dec
loop
popa
fcmove
repnz
data16
insb
popa
mov
les
pop
and
cmp
add
inc
int3
sbb
push
push
mov
test
fsubrl
iret
sub
jmp
add
stc
scas
xchg
mov
mov
scas
xor
and
mov
je
inc
dec
xchg
xchg
mov
mov
leave
call
rorl
ret
lcall
ds
xchg
jmp
sbb
add
xchg
cli
dec
mov
pop
scas
aaa
popa
mov
mov
xchg
push
adc
frstor
int
andb
sti
push
imul
movsl
ljmp
xchg
pop
xor
mov
mov
add
jg
pusha
fnsave
int
sarl
aam
orb
adc
fucom
jno
xor
stos
popf
fnstenv
lea
popf
shlb
in
dec
js
adc
push
rolb
rcll
mov
inc
mov
push
sub
mov
jecxz
pand
call
adc
jno
insl
insl
pop
xor
push
add
outsl
loope
pop
cmp
mov
dec
push
stc
sti
rorl
outsl
mov
pop
arpl
xchg
insl
ja
xchg
stos
js
repz
jmp
cmp
push
or
cmpsb
dec
cmp
and
sub
jle
push
push
xor
fs
mov
cmp
cs
xchg
fwait
in
mov
icebp
xchg
pop
xor
fldcw
xlat
je
cmp
mov
mov
jge
cmp
sahf
ljmp
fucomp
inc
mov
das
jl
mov
call
mov
push
push
push
push
fs
jno
jns
pop
and
mov
leave
std
in
or
fsts
cmp
jmp
stos
ficoms
loop
mov
in
push
sub
mov
add
mov
sub
sub
adc
lea
iret
push
or
add
and
mov
dec
insb
scas
clc
adc
pop
jle
pop
cltd
subb
repnz
sbb
xor
ret
sub
add
mov
mov
scas
cmpl
dec
xchg
add
je
jl
jmp
in
out
mov
sbb
pop
loop
add
jae
or
xchg
ljmp
imul
push
int
aam
loop
std
xchg
xlat
ss
stc
xchg
lea
test
dec
adc
subl
dec
call
divb
out
and
and
push
xor
addb
in
pop
push
jb
out
dec
jns
sbb
shrl
das
loopne
xor
jo
cld
xor
jp
sti
outsl
xchg
loope
jp
inc
push
sbb
aad
dec
add
pop
sub
pop
daa
cmp
rclb
or
xchg
pop
mov
pop
ja
mov
xor
adc
out
dec
sbb
jo
mov
jnp
leave
jmp
cmpsb
mov
lcall
fwait
pop
ja
push
ret
sub
dec
pop
movsl
xor
in
inc
push
xchg
inc
pop
pusha
xor
xor
lock
ds
je
into
adc
jp
jg
ja
jo
inc
push
addr16
pop
test
shrl
scas
in
cld
cmpsb
loopne
jge
call
jp
adc
xlat
add
sub
sub
lock
mov
mov
sbb
push
mov
adc
cmp
test
out
fisubl
xor
mov
sahf
call
sub
xchg
add
cmp
and
inc
scas
sub
inc
shl
add
jmp
push
adc
xor
stc
lods
rorb
sub
mov
or
call
add
hlt
add
loopne
lods
arpl
aad
mov
mov
cmp
mov
sbb
subb
mov
sbb
inc
addr16
fs
sbb
loop
cmp
loop
sub
or
aaa
out
insl
dec
mov
dec
adc
and
cmp
sub
xchg
pop
adc
jnp
ficompl
ret
mov
enter
pop
negl
xchg
jno
adc
mov
sub
sub
pop
ljmp
in
mov
xchg
inc
mov
ds
adc
xchg
enter
idivb
pushf
fstpl
cmp
stc
in
cmp
leave
std
sub
dec
mov
or
nop
cs
push
xchg
xorb
sbb
pop
pusha
sahf
xchg
jecxz
sub
jg
gs
dec
popf
xlat
std
cmp
xlat
mov
xchg
or
call
pop
lahf
jne
mov
std
jmp
pop
test
mov
aad
fldl
into
ljmp
loopne
addr16
jge
push
dec
adcl
enter
cmpsl
je
jbe
cmpsb
jecxz
mov
and
leave
call
in
in
cmovne
push
in
neg
jne
inc
inc
int3
insl
xchg
dec
mov
jno
lds
jnp
outsb
push
fdecstp
jns,pt
mov
loope
push
leave
es
push
jp
jne
fistl
xchg
mull
push
mov
lds
test
or
jl
sub
mov
sub
mov
add
xchg
dec
les
mov
ja
jecxz
pusha
sbb
out
std
int3
inc
cmp
fisubs
cmp
xlat
lcall
cmpsl
pushf
pop
rclb
call
pop
push
js
xlat
into
pusha
out
fwait
jmp
nop
stc
mov
sub
stos
cmpl
in
movsl
repnz
dec
in
push
push
dec
je
stos
pop
dec
sub
cmp
jp
push
and
fwait
out
mov
fcmovb
inc
ss
jno
daa
clc
in
shll
insb
mov
and
in
sbb
test
enter
out
fwait
addr16
xlat
xor
pusha
add
sub
and
jp
loope
fisttpll
in
fidivrs
jle
push
ja
hlt
jae
pop
xchg
ja
push
imul
dec
jb
add
mov
mov
loopne
fdivl
sahf
xor
dec
jle
pop
scas
daa
data16
or
jb
cmp
ds
adc
ss
lds
jno
xorb
inc
jmp
adc
test
movsl
sbb
sub
sub
stos
or
dec
lods
jecxz
xchg
dec
mov
icebp
mov
ds
jb
mov
inc
mov
push
jg
lods
mov
and
jecxz
movsb
lcall
scas
pushf
jl
push
inc
pop
xor
dec
mov
clc
retw
push
dec
popf
cmp
clc
xor
pusha
std
push
add
pop
cmp
std
jle
mov
mov
push
out
sub
mov
push
arpl
push
sub
movsl
arpl
pop
cmp
sub
stos
sub
jnp
mov
inc
mov
adc
mov
adc
adc
sbb
push
add
fcomp
fs
mov
inc
push
bound
aaa
dec
jg
sbb
test
push
or
pop
lods
pop
jge
outsl
xchg
xchg
leave
in
fiadds
push
fwait
xchg
testl
sub
mov
ror
mov
xchg
xchg
fsubrs
addl
pop
jmp
out
pop
jecxz
inc
cld
repz
push
cmpsb
pop
insb
bound
mov
fidivs
bound
in
popf
dec
insb
enter
in
and
xchg
push
inc
adc
and
adc
mov
mov
cld
in
mov
xor
or
cmp
js
mov
and
fistpll
scas
stc
and
xchg
shll
js
mov
jge
inc
enter
out
das
sub
push
jecxz
rcr
mov
cmp
pop
sbb
bnd
or
add
push
jbe
cwtl
xor
jne
push
pop
mov
mov
sbb
int
push
rcll
in
xchg
cmpsb
mov
pop
ret
dec
inc
clc
cmc
push
dec
jno
fstl
sub
cmpsl
nop
arpl
out
and
adc
xor
sbbl
pusha
and
add
mov
aad
fcmovbe
jecxz
leave
jge
je
scas
imul
lea
loope
fldenv
addr16
ficomps
pop
arpl
sbb
lea
xchg
mov
fdivl
lahf
push
out
pop
add
outsl
or
sbb
jmp
mov
xor
or
push
nop
inc
dec
cwtl
ljmp
cmpsb
pop
pop
xchg
mov
mov
aas
dec
xor
jp
mov
fisttps
xchg
in
inc
sysenter
out
cmpsl
jg
or
mov
inc
xchg
ret
imul
rclb
imul
sbb
cmp
into
int3
and
cmp
gs
or
pop
lret
nop
in
adc
pop
pop
push
xchg
out
mov
aam
clc
lock
and
jb
lahf
mov
movsb
pop
aad
jecxz
inc
jmp
pop
xlat
lcall
nop
mov
and
cmp
repnz
push
adcl
shlb
mov
std
push
addr16
mov
adc
mov
add
mov
lods
add
ljmp
cmpsb
mov
in
in
xor
shrl
adc
icebp
adc
sbb
add
les
bnd
cmp
inc
les
mov
pop
movntq
adc
lret
sbb
fldenv
or
xor
stos
outsb
leave
mov
jbe
andb
push
cs
add
cmpsl
stc
movsb
cs
ljmp
clc
and
jge
xor
lcall
mov
pushf
sbb
fmulp
and
in
cld
push
stos
xchg
fcmove
cmp
jbe
mov
lret
outsl
mov
out
out
dec
pusha
subb
shl
rorb
mov
sub
mov
and
jmp
inc
push
cwtl
or
aad
add
jle
cwtl
inc
test
jns
sub
out
adc
ljmp
pop
in
gs
andb
cmp
mov
mov
nop
sti
inc
popa
add
stos
and
or
mov
mov
jb
jne
xchg
das
loop,pn
push
lods
ficoml
ds
push
test
push
mov
je
and
aad
xchg
dec
fstl
dec
mov
loopne
lods
dec
jns
push
shlb
jo
sbb
inc
out
fstpl
mov
imul
mov
and
xchg
cmp
aas
mov
js
arpl
enter
push
push
push
popf
fcompl
or
xlat
jnp
test
dec
pop
mov
in
dec
adc
pop
clc
xchg
inc
rcrl
add
cmpsb
iret
in
push
adc
fwait
jecxz
cmpsl
std
inc
fstpl
js
mov
mov
mov
push
cwtl
jg
mov
in
and
pop
cld
push
or
sbb
movsb
ss
jecxz
mov
insb
jmp
lods
push
jp
dec
les
sbb
cmp
outsb
ret
nop
insb
cmpb
xchg
inc
and
pminub
fstl
js
inc
roll
dec
shlb
or
in
fsubrp
clc
cmp
push
sbb
sbb
push
outsl
cli
push
aas
jns
cmp
mov
sub
and
adc
popf
lods
icebp
pop
test
jb
stc
addl
aaa
std
cs
add
mov
lods
insb
js
push
or
dec
push
push
fists
mov
cmpl
push
out
add
or
cmp
mov
adcl
push
jns
out
mov
add
inc
dec
imul
shl
cmpsb
push
aas
mov
ss
addl
rorl
push
hlt
fisttpll
shl
jl
loope
cmp
mov
adc
sub
nop
pusha
aam
sarl
mov
lds
into
ds
jns
jecxz
adc
mov
rcrl
or
mov
and
lock
xor
pushf
add
push
adc
loopne
xor
add
into
mov
idivl
push
push
sbb
lret
adc
and
pop
ret
sub
jg
lock
cmp
mov
or
and
adc
adc
mov
sbb
pop
sbb
mov
test
sbb
dec
and
pop
mov
cmp
jo
jp
add
ret
fcomps
mov
iret
pop
int3
loopne
pop
fdiv
xor
jbe
mov
mov
out
fdiv
adc
in
dec
push
out
pop
lcall
jecxz
aas
pop
lock
and
xchg
cmp
rcrl
mov
fidivs
sub
out
repz
lret
cltd
cmp
xchg
pusha
xchg
cld
out
loope
pop
xchg
movsb
adc
inc
es
call
and
xor
ljmp
xorb
dec
movsb
mov
jbe
std
idivb
mov
mov
sub
popa
pop
sub
rcll
mov
mov
ss
test
pop
and
das
xor
pop
stc
andl
jno
mov
or
dec
cli
or
lods
inc
push
jg
xchg
or
addr16
mov
push
ret
out
inc
sub
adc
and
ljmp
pop
xchg
inc
aaa
roll
ret
and
adc
cmp
adc
std
dec
adc
cmp
xor
and
sbb
outsb
xchg
ret
jle
repz
push
out
cmp
stos
inc
popf
imul
sbb
movsl
jns
or
cmp
cli
mov
xchg
ret
mov
mov
hlt
repnz
pop
xor
xchg
stc
fcoml
mov
xchg
out
mov
lea
repz
pop
es
xor
fs
dec
adc
mov
inc
adc
xchg
int
inc
mov
jecxz
stos
pop
jmp
mov
popf
out
loopne
out
push
popf
push
jne
mov
xchg
shll
jns
push
cmp
mov
mov
test
push
fdivl
adc
jbe
add
xchg
call
imul
sbbb
andb
sbb
sub
xlat
std
das
or
fs
mov
push
call
enter
inc
xchg
pushf
cmc
outsb
cmp
hlt
sub
xorl
xlat
rclb
mov
xor
sub
inc
or
mov
pop
xchg
notl
shrd
icebp
cmp
test
push
ret
addr16
xchg
shl
dec
mov
sub
mov
mov
pushf
cli
jg
dec
aam
jle
push
push
mov
adc
test
sub
push
je
xor
inc
push
das
adc
push
pop
and
fistps
lahf
mov
out
stos
sub
cmc
out
in
loop
sbb
xchg
loopne
push
mov
outsb
pop
cwtl
mov
popa
cmp
add
or
clc
push
gs
jno
and
or
out
pushf
test
xlat
add
out
push
mov
in
nop
outsl
cmp
mov
and
incb
lock
inc
cmp
ret
pop
sbb
out
push
int3
dec
push
dec
decb
out
sbbl
inc
aad
in
shlb
inc
daa
add
jg
mov
xor
sub
inc
je
pusha
icebp
dec
xchg
push
aam
subb
push
or
push
cld
loope
push
push
cmp
dec
int
jne
mov
fs
outsb
pop
loop
adcb
xchg
and
pop
movsb
add
ror
rorl
mov
cltd
stc
lds
or
loop
inc
cmp
push
loopne
imul
xor
hlt
lret
mov
and
xor
push
cmp
sub
subl
scas
lods
xchg
out
ss
jg
icebp
addl
leave
and
xor
mov
loop
gs
cmc
fdivrl
cmpsl
ja
jp
ror
ret
and
popf
inc
mov
pop
sbb
js
std
mov
mov
pop
scas
push
or
fsubl
push
mov
sub
es
loope
iret
adc
outsb
mov
insl
add
sahf
dec
adc
adc
xchg
repz
mov
notl
push
ja
mov
rep
sub
jmp
movsb
pop
insb
fdivs
test
loopne
adc
sbbl
inc
adc
cld
decb
push
mov
cwtl
push
pop
xorl
lods
xlat
ret
fdivrs
inc
push
insb
rcrl
jp
xchg
and
xlat
scas
pop
dec
ret
addr16
sbb
repnz
shlb
pop
and
gs
push
xor
inc
into
dec
in
mov
adc
movsl
out
aad
xchg
mov
daa
xchg
pop
cli
jne
inc
ret
ja
mov
je
pop
pop
enter
fstpt
pop
cs
in
pushf
fdivrs
fstps
xor
aam
xchg
xor
sbb
xchg
push
jne
aad
jo
cwtl
mov
push
xchg
es
push
out
mov
in
lds
push
fs
dec
dec
add
cmp
icebp
mov
andl
sbb
int
xchg
fbstp
push
mov
add
dec
fnstcw
sahf
mov
icebp
mov
in
int3
mov
mov
mov
and
add
dec
lock
clc
pushf
xor
mov
stos
out
or
hlt
insl
daa
rolb
push
and
dec
in
cmp
jp
fs
jge
mov
aaa
cmp
loope
or
xor
jg
push
mov
add
add
ljmp
lock
xchg
or
lret
and
into
pop
jmp
mov
ret
pop
jno
cmp
xorb
loop
or
lahf
rorl
pop
adcl
hlt
inc
fidivs
sub
mov
xor
jmp
or
rolb
mov
jne
mov
daa
movsb
sub
mov
inc
xchg
enter
sub
stos
scas
and
rol
xchg
add
data16
jne
xchg
je
pushf
inc
sub
adc
stos
pop
pop
adc
dec
ret
mov
sub
icebp
push
jns
imul
mov
sub
insl
sbb
pop
mov
imul
adc
and
ja
pop
gs
icebp
dec
out
notb
jno
sbb
xchg
lods
or
shlb
movsl
push
mov
jne
mov
sbb
cmp
inc
cli
fidivl
xchg
or
outsb
js
add
mov
fists
pop
jge
rclb
jno
inc
push
inc
xchg
aas
test
mov
testb
mov
in
mov
inc
jecxz
jp
cwtl
add
lock
cmpsb
xor
notb
jge
or
fistpll
bound
or
cmpsl
jmpw
ja
pop
add
call
and
gs
xchg
mov
cmp
idivb
pop
sahf
inc
xor
add
xchg
ret
fcomip
out
jb
movsb
ss
cmpsb
xor
in
sbb
cltd
inc
cmpsb
test
jno
imul
movsl
rcll
adcl
arpl
loopne
cmp
dec
leave
out
sub
mov
arpl
test
outsl
negb
push
mov
push
cmpsb
lds
stos
out
pop
jns
and
shlb
or
or
in
cmpsb
cltd
add
pop
cmp
loop
outsb
mov
inc
in
add
aas
clc
frstor
and
aad
add
xchg
cmp
push
jmp
sub
sbb
enter
fadds
ds
outsl
or
mov
pop
mov
sbb
mov
mov
fisubs
mov
push
test
rcll
mov
in
push
inc
sarl
pop
mov
jbe
roll
lock
popf
mov
popf
xor
mov
pop
or
outsb
jo
inc
rol
out
out
xchg
xor
scas
mov
cmp
xor
movsl
push
mov
lea
push
jp
cmpl
dec
inc
pop
xchg
jg
mov
jecxz
pop
push
mov
out
mov
xchg
and
inc
push
mov
mov
pusha
adc
pop
pop
push
das
push
xchg
sub
rorb
pop
aaa
clc
or
mov
scas
fldenv
addb
add
xchg
fisttpll
xor
jmp
mov
sahf
or
in
mov
mov
das
movb
add
into
test
aam
sbb
mov
lahf
into
rcll
repz
xchg
mov
jnp
or
test
push
fimuls
push
into
pop
cli
add
loope
out
js
aad
shrb
cmpsl
std
repz
or
in
in
in
xchg
loopne
loop
pop
cltd
decb
xlat
cmp
xchg
inc
test
rolb
xchg
pop
cmp
push
adc
ret
sub
das
cltd
das
inc
ss
or
popf
dec
dec
outsb
and
xor
sbb
insl
sti
mov
pop
inc
repz
js
pusha
inc
pop
popa
arpl
sbbb
movsl
in
lods
addr16
cmp
out
jl
ja
out
xchg
outsl
pop
jne
inc
push
cmpsb
add
and
adcb
stos
and
push
dec
pop
mov
je
sbb
aas
scas
push
pop
dec
iret
lods
jmp
and
fs
xor
cmpsb
out
xchg
mov
cmp
push
mov
lods
test
jge
mov
call
cwtl
add
jle
cwtl
ret
jo
pop
xchg
data16
xor
outsl
sahf
ljmp
loop
inc
stos
cld
enter
mov
xchg
sub
sub
mov
mov
jne
jno
popa
cltd
xchg
sbbl
fs
sar
pop
pop
out
mov
jno
xchg
aaa
cmp
dec
mov
or
in
sbb
xchg
movsl
scas
loop
addr16
dec
dec
jge
push
aas
andl
scas
pop
cmp
sub
mov
int3
int3
mov
push
addr16
xchg
cwtl
in
add
pushf
cli
lret
pop
sbb
xchg
adc
aam
mov
mov
clc
xor
fwait
dec
fnstcw
lods
xchg
fwait
sbbl
push
add
lods
inc
loopne
mov
lahf
test
and
in
js
repz
cmp
nop
mov
ss
mov
cmc
inc
sub
test
jbe
inc
adc
jbe
test
lret
loopne
insb
and
xchg
pop
ret
mov
and
push
sti
pusha
mov
inc
aad
jb
fwait
out
jmp
adc
jle
mov
sbb
imul
xchg
hlt
cmp
xlat
jl
xor
fsubrs
ss
pop
cltd
in
aaa
repnz
shll
dec
mov
ror
mov
adc
jae
scas
das
push
mov
mov
jge
scas
ret
inc
imul
aam
xor
fwait
insl
loopne
mov
push
jge
add
sarl
inc
lods
icebp
and
jae
push
out
dec
call
xchg
xor
out
add
in
fiadds
pop
cmc
lret
data16
xchg
push
mov
mov
setp
outsl
dec
fistpll
xchg
mov
decl
pop
add
dec
out
out
outsb
nop
jne
adcb
fistpll
add
cmp
ror
adc
leave
sub
add
jno
jnp
fninit
sub
pop
pushf
mov
mov
or
addr16
fiaddl
xor
adc
push
rcrb
icebp
andb
or
enter
jne
or
lahf
sbb
faddl
dec
jne
push
inc
push
xlat
daa
ds
loopne
movsl
shl
jno
push
jecxz
add
fldl2t
cmp
pop
mov
mov
or
fiadds
cmp
or
or
cmp
fsub
mov
sbb
cmp
inc
mov
ljmp
sub
xor
add
cmpsl
xorl
mov
pop
push
repnz
aam
and
xchg
push
mov
jmp
adc
inc
mov
adc
ret
push
fidivrl
jp
cmp
push
fdivs
gs
mov
sub
jne
outsl
fwait
or
mov
or
loopne
cmp
popa
jbe
ja
mov
scas
dec
pop
mov
ds
jmp
jp
adc
dec
mov
icebp
out
xor
lret
dec
arpl
iret
insl
xchg
fmuls
test
jmp
push
insb
enter
xchg
pop
pop
push
mov
push
enter
add
les
subb
cmp
xchg
and
loopne
mov
mov
sbb
arpl
mov
cmc
in
into
loopne
and
mov
mov
outsb
test
fldl
sbb
arpl
push
cld
add
add
ficoml
cmp
fimull
xor
mov
fimull
push
add
xor
nop
sbb
insl
dec
sti
sub
test
mov
popf
orl
stc
push
loope
lret
adc
fcomps
fadd
icebp
pop
mov
cmp
in
loopne
xchg
rclb
mulb
sar
ret
pop
andl
stos
popl
cmc
pop
into
sbb
xor
mov
clc
in
pop
ljmp
push
aad
sub
mull
addr16
popf
push
or
fimuls
or
repz
insl
leave
lock
or
or
lds
adc
lods
inc
fisubs
jmp
mov
mov
xlat
mov
mov
cmpsl
jg
lock
sub
pop
pop
inc
stc
cmp
nop
aad
xor
subb
xchg
gs
dec
ret
movsl
mov
adc
aas
jle
xchg
mov
sbbb
sub
pop
das
push
fmul
fdivrl
adc
jbe
out
mov
sbb
mov
movsb
xor
lea
call
mov
sbb
test
push
movsl
fimull
mov
lret
fcmovu
mov
in
insl
sub
xor
inc
lods
mov
xlat
shl
and
jmp
adc
jo
test
and
adc
mov
popa
and
bound
xor
xorl
pop
test
add
xlat
mov
fstp
dec
sub
push
jb
pop
lods
js
aaa
lods
jns
popa
adc
xchg
mov
cmp
cs
fistl
sub
dec
sarl
cmp
repnz
inc
movsb
xor
aas
pop
popa
jecxz
xor
rcrl
xchg
test
add
out
insl
clc
lea
fstpl
not
and
fimuls
pop
fs
insl
scas
imul
mov
addr16
sub
jle
arpl
out
insl
das
jge
cltd
in
sbb
ds
in
mov
cmp
pop
or
mov
xchg
xchg
imul
jne
icebp
mov
ss
mov
rcr
and
cmpsl
adc
mov
adc
dec
jnp
les
ds
ja
lahf
cltd
adc
lret
and
add
in
add
gs
sbb
push
lret
out
jmp
cmpsl
bound
ja
shl
and
movsb
xchg
sub
movsb
cmpsl
and
dec
or
jb
shrb
mov
mov
repnz
sub
mov
pop
jg
les
mov
stos
int3
pop
clc
lret
out
in
mov
pop
adc
jle
adc
add
pop
gs
imul
sub
sarl
loop
sub
mov
dec
call
imul
push
pop
outsb
negb
icebp
pop
cmpsb
mov
adc
pop
int
cs
mov
fwait
jle
or
mov
fadds
addl
pushf
jge
pop
inc
loopne
sbb
lahf
sahf
test
lahf
call
lock
xchg
jbe
test
popa
push
fs
es
pop
daa
push
and
push
mov
mov
popa
inc
jo
pushf
insl
les
loope
pop
inc
dec
aam
sarl
je
int
ja
dec
aam
mov
jb
inc
cs
add
xor
movb
or
pop
cld
pslld
imul
jmp
into
imulb
xchg
stos
daa
adc
les
adcb
xchg
mov
or
push
mov
mov
jb
pop
mov
push
enter
jge
je
insl
inc
mov
push
mov
js
imul
jns
xor
push
sti
push
leave
pop
inc
out
mov
xor
movsb
fcomp
insl
into
xchg
cmp
mov
or
popf
push
dec
sub
mov
mov
in
insl
sub
or
xchg
imull
mov
ret
lods
sub
pop
dec
ds
jne
test
jl
mov
xchg
or
iret
mov
mov
daa
push
in
push
sbb
add
push
aam
les
nop
mov
mov
adc
pop
ret
jne
fdivs
imul
je
dec
shlb
cli
xchg
movsb
xchg
lock
xchg
jl
xor
sbb
cmp
stc
js
test
lea
cmp
cmp
and
push
xor
cltd
push
push
inc
aas
imul
adc
pop
jp
clc
jo
mov
aam
and
push
adcb
and
mov
pop
icebp
pop
push
mov
xor
imul
ds
out
loope
pop
lret
pop
sti
aam
pushf
lds
cmp
andl
in
dec
sahf
jno
add
push
pop
mov
hlt
fldcw
xor
or
add
bound
in
loopne
enter
pushf
lcall
xchg
mov
mov
cmp
js
sahf
call
push
pop
push
dec
lea
mov
bound
fisubl
js
xorb
pop
push
fs
cs
arpl
movsb
xor
cmp
ds
inc
mov
pusha
mov
push
outsl
mov
out
movsb
dec
aaa
shl
or
push
scas
iret
inc
mov
dec
jae
outsb
test
mov
test
mov
cli
adc
inc
in
loope
mov
sbb
flds
cli
xor
int
fisubrl
pop
jno
pop
jle
ja
mov
ret
pop
int3
mov
cmp
and
cmp
or
imul
cmp
and
jg
mov
cmp
jmp
roll
call
mov
adc
ds
jno
push
sbb
lret
shl
lret
pop
test
out
enter
xor
push
jl
ds
jecxz
cli
mov
pushf
adc
inc
popa
icebp
ret
push
jmp
jge
loope
xor
add
scas
lock
mov
xor
xor
dec
inc
int3
pop
inc
push
mov
fldcw
lea
aad
test
dec
mov
mov
mov
imul
push
or
mov
jbe
lds
arpl
push
and
pop
fiadds
jbe
jno
in
cmpsb
dec
aam
aas
jge
pop
pushf
mov
push
out
adc
or
sbb
pop
adc
inc
lret
sub
dec
jb
data16
outsb
faddl
frstor
scas
gs
xchg
repz
into
sbb
stc
mov
jl
pop
jmp
repnz
jae
cld
xor
lret
mov
push
dec
sbb
and
pusha
mov
dec
in
mov
mov
and
sbb
or
push
enter
jge
jo
jb
jg
jmp
cmp
and
xchg
mov
stos
daa
sbb
xor
xor
inc
push
hlt
adc
scas
add
jnp
cmp
dec
scas
mov
sbb
sahf
jbe
testb
addr16
stc
cmp
add
xchg
bound
movntq
out
scas
jg
pop
dec
sub
sbb
addb
arpl
nop
cli
or
bound
rorb
mov
fcomip
sbb
push
jno
add
and
add
push
insb
push
mov
lcall
xchg
pop
dec
pop
in
fsubl
inc
sbb
xchg
mov
mov
dec
and
pop
xlat
jns
gs
mov
dec
fsts
pop
pushf
sahf
shr
testl
fs
sti
ja
mov
jno
ffree
divb
int3
shlb
into
mov
mov
insl
lds
aas
out
push
sbb
fisubrs
popf
sahf
cmp
nop
and
jbe
aas
leave
xchg
enter
cs
xor
in
cmp
mov
push
add
sbb
mov
jp
cs
mov
push
and
xchg
mov
push
shrb
mov
jecxz
pushf
or
pop
hlt
popa
xchg
pop
cltd
xchg
vphaddbd
xchg
test
movsb
mov
rolb
add
fmuls
scas
cmpsb
pop
xor
xchg
stc
lcall
inc
ficompl
pop
call
pop
bound
add
pop
inc
movsb
je
outsl
push
cld
xchg
lret
cmp
aad
sarb
sahf
dec
sub
adc
jle
std
mov
mov
pop
incl
and
add
arpl
cmc
fdivrp
leave
ret
mov
lods
sti
iret
and
rcr
sbb
push
andl
test
sub
cmpl
fsubl
pop
inc
mov
mov
sub
cmp
xchg
inc
push
adcl
repnz
outsb
shrl
mov
cmc
pop
pop
or
jno
loopne,pn
fnstcw
cmp
pop
cmp
shlb
orl
adc
mov
inc
das
cmp
out
lods
xor
movsb
cmp
xchg
ljmp
lds
loope
pop
cli
push
stos
lds
xor
cmpsw
cmpsl
out
mov
or
jg
popa
scas
mov
in
sbb
add
out
mov
scas
fbstp
fnstcw
in
rcrl
and
xorb
mov
or
js
add
inc
in
push
outsb
sahf
lods
std
jno
fwait
icebp
daa
mov
mov
mov
and
sub
mov
sub
test
and
inc
push
call
out
inc
sar
xor
mov
test
jmp
jnp,pt
mov
mov
mov
dec
pop
push
jae
and
lods
dec
mov
push
jbe
repnz
sbb
out
sub
sahf
xchg
cmp
int
sbb
push
jl
xchg
bound
loop
mov
fnstsw
shll
ss
xor
sbb
push
pop
pop
dec
and
xchg
gs
or
ja
std
xchg
mov
lret
xchg
ss
and
pop
mov
mov
jmp
mov
sbb
push
out
xchg
loop
add
notb
sbb
sub
es
adc
arpl
aaa
inc
xchg
xchg
jnp
xor
stos
std
sub
and
mov
add
cmpl
xchg
addb
cmp
loopne
aas
xor
aam
pop
in
adc
mov
ds
xchg
hlt
lret
inc
js
fnstcw
add
lock
sub
and
dec
xchg
sbb
lds
mov
fwait
test
movsl
sbb
rol
xor
jle
pushf
lar
push
xlat
iret
rclb
arpl
inc
inc
cmpsb
mov
mov
xchg
and
pusha
bound
lods
pushf
push
loop
pop
add
insb
pop
int3
mov
cmc
and
andb
shl
mov
lds
aas
fcomip
insb
shlb
lret
and
sub
dec
mov
and
decl
rorl
xchg
sbb
sub
adc
add
icebp
fnstenv
lea
jl
stos
sbb
rcrl
pop
dec
mov
inc
es
lret
out
push
inc
mov
lods
cwtl
test
lret
shlb
inc
mov
lahf
sbb
cmpsb
dec
cmp
jns
push
mov
jge
mov
push
mov
sub
cmp
inc
and
pop
mov
sub
iret
cmp
cltd
int3
mov
cltd
dec
or
gs
sbb
fmulp
mov
cmp
mov
out
fisttpll
jbe
popf
push
imul
loop
js
repz
lahf
in
jnp
mov
aam
add
push
lea
push
lods
dec
out
pop
xchg
mov
pop
lcall
sbb
mov
enter
filds
out
cmp
les
pop
loopne
test
test
sub
mov
iret
mov
std
jns
lret
xor
pcmpeqw
cmpsb
dec
stos
xchg
inc
mov
adc
cld
dec
xor
dec
je
sbb
stos
add
arpl
pop
fcmovne
test
xchg
call
fstl
daa
sti
pop
pusha
aaa
xchg
mov
xchg
pop
mov
lea
repz
hlt
jbe
dec
cmpsl
xchg
add
jno
fildll
xchg
in
mov
xor
xor
pusha
mov
push
fs
call
fsts
mov
rcr
std
shll
push
mov
out
or
dec
stos
je
jle
mov
push
push
dec
lods
shlb
movsb
lcall
cmpsl
mov
fstps
dec
sub
inc
shl
xlat
or
sub
mov
stos
push
xchg
popf
sbb
andb
inc
leave
ret
cmp
outsl
push
sub
scas
xor
insl
mov
mov
jne
pop
xor
pop
pop
imul
add
aas
mov
jle
fldt
cmp
xchg
aad
mov
cmp
pop
and
dec
adcb
pop
cmp
lds
sub
pop
test
movsl
cmp
cmp
mov
out
dec
mov
and
inc
cs
out
mov
push
sub
add
add
jno
add
ss
push
fs
xchg
cs
mov
test
std
lcall
adc
sahf
dec
xchg
subb
scas
aad
fadds
frstor
loop
xlat
sbb
mov
test
les
sbb
aas
cmp
mov
icebp
jo
ficoml
sbb
xor
or
xchg
das
cs
test
ficoms
fs
stc
fadd
mov
xchg
test
xchg
xchg
test
in
pop
out
inc
in
cmp
inc
inc
out
sub
xchg
cs
sbb
cmpsb
fcompl
adc
popf
sub
mov
adc
mov
mov
adc
push
aas
decl
aad
mov
xchg
addr16
movsb
inc
xchg
mov
push
adc
pop
fisttps
xor
dec
sub
xlat
xor
cmpsl
pushf
sbb
inc
push
call
lret
das
mov
popf
mov
cltd
xor
out
pop
or
aad
jecxz
xchg
cmp
and
imul
push
xlat
popa
sub
jno
and
push
pop
and
in
xor
addr16
cmpsl
and
fdivl
jbe
xchg
push
cs
xchg
mov
xchg
mov
ljmp
sahf
cli
push
ret
push
mov
xchg
inc
fsubr
cmc
push
jb
sar
stos
jo
test
mov
sbbb
cmp
push
es
mov
out
out
lods
dec
jns
andb
test
mov
jl
cmpsl
cs
loopne
in
loope
cli
add
leave
scas
mov
add
lods
mov
fst
xchg
adc
cmpsb
lahf
out
fdivl
fistpll
inc
jno
imul
fs
iret
or
test
repnz
jbe
push
push
inc
cmp
outsl
mov
test
pop
jecxz
push
sbb
shl
mov
out
dec
add
dec
imul
jp
adc
jl
pop
push
jge
cmp
xlat
mov
add
mov
out
test
in
or
push
xor
fs
cmc
enter
cmp
cmp
outsl
jg
mov
ljmp
mov
mov
mov
mov
sar
fsts
pop
inc
xchg
fxch
adc
jmp
sbb
adc
lock
mov
jmp
add
icebp
or
mov
jae
hlt
xor
mov
out
sub
cmpsl
hlt
sbb
fimuls
ljmp
xor
cld
add
lahf
push
push
roll
outsb
mov
add
inc
xchg
cmp
call
rorb
addr16
cmp
add
push
jle
inc
inc
je
adc
mov
lea
adcl
xor
mov
mov
inc
mov
mov
and
add
mov
cmp
xchg
push
sub
gs
pop
xor
mov
fiadds
not
push
sbb
xchg
xchg
mov
inc
leave
shlb
and
scas
loop
cmp
repz
cld
in
adc
int
pop
cs
enter
notb
sub
mov
aas
mov
shlb
adc
push
out
mov
int3
rcrb
cmp
xchg
jnp
mov
stc
push
not
test
into
stos
xor
jb
add
xor
xchg
mov
pop
sub
xor
jecxz
loope
iret
dec
sub
cmp
scas
outsb
test
stos
add
das
insb
popf
in
leave
xchg
adc
out
sub
jle
fprem
cmp
push
cmp
imul
sub
orl
xchg
pop
and
bound
lds
loopne
daa
daa
mov
lahf
push
or
ljmp
fs
les
lret
insb
shrb
loope
sahf
and
sub
push
pop
call
test
jbe
xchg
hlt
and
repnz
adc
add
mov
mov
or
cmp
in
cmpsb
scas
push
leave
test
inc
rcl
pop
cli
jns
adc
xchg
or
lods
addr16
sbb
sub
in
mov
out
test
sbb
pushf
jmp
int
mov
lods
xchg
je
jp
enter
adc
test
dec
push
fwait
in
xor
add
add
push
mov
mov
insb
imul
daa
xchg
stc
lcall
pop
adc
fisttpl
mov
or
stos
mov
xchg
fmuls
into
mov
lret
pop
lods
push
cmp
dec
push
adc
push
icebp
mov
xor
add
dec
push
jge
std
shll
or
mov
push
cmpsl
or
popa
inc
jmp
mov
shr
push
or
jb
inc
push
dec
adc
jne
push
repnz
sti
ret
cmp
mov
pop
test
xchg
icebp
jecxz
rcrb
std
test
mov
shlb
mov
mov
or
adc
dec
push
dec
scas
nop
xor
mov
pop
shl
jno
mov
adc
push
push
mov
xor
rcll
xchg
mov
xchg
lcall
add
fbstp
ljmp
rorl
mov
adc
aad
shll
iret
in
or
sarb
lret
push
jnp
fisubrs
sub
jae
pop
add
cmp
mov
jnp
add
push
xchg
ret
xchg
arpl
stos
pop
hlt
movsl
xor
in
dec
out
ret
mov
loope
jg
adc
inc
mov
jl
mov
cmp
xor
hlt
fnsave
pop
mov
mov
mov
adc
dec
add
mov
adc
out
push
popa
xor
lret
popf
out
jecxz
aad
adc
sub
or
or
mov
push
mov
xchg
mov
into
in
repnz
pop
mov
xchg
or
cli
sub
adc
mov
sub
and
int
andb
repnz
shlb
out
and
jmp
pop
into
xchg
addr16
add
mov
in
and
mov
xchg
cmp
jp
lcall
movsb
sbb
aam
sbb
pop
jge
mov
in
dec
popa
fidivl
insb
dec
mov
data16
push
push
in
arpl
test
cltd
sbb
ret
push
repnz
je
idivl
mov
pop
insl
in
les
mov
mov
push
xor
mov
xchg
je
push
push
sub
mov
imul
add
adc
ror
cli
ja
xchg
mov
sbb
sub
adc
mov
test
outsb
mov
mov
dec
inc
push
jle
enter
mov
cmc
jnp
mov
mov
aas
sbb
decl
outsb
leave
mul
push
add
jecxz
xchg
xor
sar
adc
fcompl
icebp
cmp
inc
aas
sub
mov
fcmovne
scas
fiadds
push
xor
lods
jge
sub
out
mov
cmp
clc
xchg
mov
jmp
pop
mov
clc
cmp
push
and
ljmp
addr16
or
push
adc
inc
xor
push
sbb
hlt
roll
inc
outsl
cmp
hlt
ds
push
pop
xchg
add
or
imul
pinsrw
and
add
mov
in
test
xlat
or
aas
out
jnp
sub
cmp
adc
sub
imul
cmpsl
ja
pop
xchg
nop
cmp
dec
and
int
adc
mov
inc
stos
add
sbb
xchg
loopne
sbb
lea
or
pop
cmpsl
out
out
scas
push
and
mov
pop
dec
jl
pusha
mov
repnz
es
xor
addr16
push
out
adc
xor
lods
mov
aad
push
inc
orb
clc
mov
fucompp
lcall
push
icebp
push
dec
push
adc
or
das
jo
pop
sub
or
adc
mov
addl
divb
and
test
add
mov
fistl
sbb
lahf
pop
loop
lds
fdiv
sbb
rorb
sbb
adc
lcall
scas
dec
inc
xchg
mov
bound
push
sbb
enter
adcl
mov
pop
imul
cmp
add
cmp
jge
test
sub
subb
stc
cmp
xor
push
mov
xlat
cmc
rcl
cmp
pop
bound
enter
cmc
xchg
cmp
xchg
cmp
not
int3
xor
jae
and
sbb
repnz
xchg
enter
adc
sbb
int3
pop
inc
in
inc
jle
fbld
imul
add
jb
or
pop
in
in
fdivrl
loope
xchg
lods
loopne
dec
fldz
push
jmp
inc
xor
cwtl
and
lahf
cld
jl
out
push
pop
push
pop
cwtl
stos
imul
leave
mov
sub
nop
xor
inc
fisubrl
push
jo
xchg
jge
inc
flds
push
mov
adc
inc
pop
lock
cmp
mov
push
je
pop
lret
cmpsl
jno
movsb
dec
cltd
mov
test
mov
andb
imul
mov
imul
enter
add
sarb
xchg
dec
xchg
pop
jo
adc
sbb
pusha
pop
cmpsl
mov
sbb
pushf
inc
push
jge
fsub
cwtl
pop
dec
insl
movsl
das
sub
push
xor
jmp
fists
out
testb
or
and
dec
jge
roll
daa
push
cltd
mov
dec
add
out
rclb
pop
movsb
and
inc
out
push
jl
mov
lahf
adc
or
mov
mov
subb
add
jecxz
mov
lea
mov
jmp
cmp
pushf
lods
push
mov
outsl
xor
dec
cltd
pop
pop
imul
inc
jle
xchg
scas
mov
lret
pop
xor
xchg
xor
inc
shll
sti
xlat
xchg
insl
sbbb
mov
xor
scas
mov
ja
inc
test
cmpsl
push
jecxz
hlt
outsl
mov
rolb
cmpl
ds
pusha
cmp
xor
test
orb
movsb
push
cmp
lret
test
out
int
int
mov
adc
push
mov
jnp
mov
jae
inc
jge
xor
fwait
xchg
roll
sub
and
dec
inc
jmp
arpl
movsl
movsl
outsl
cltd
xchg
push
mov
dec
or
es
pop
int3
test
and
jbe
push
test
xchg
bound
jmp
add
ss
pushf
sub
ds
jl
adc
fnstcw
cmpsb
mov
push
popf
mov
repz
push
push
jnp
decb
sub
jecxz
dec
push
mov
mov
imul
lahf
mov
mov
push
divb
dec
daa
std
daa
push
sbb
mov
enter
shl
or
pop
jle
inc
dec
test
mov
or
lods
setb
jle
fmuls
push
add
push
or
xchg
mov
dec
addr16
jae
adc
jle
hlt
pushf
xchg
ss
lret
mov
mov
mov
xchg
cmpsb
in
je
jbe
jecxz
mov
mov
xor
jl
pop
lcall
inc
xor
cmpsl
adc
lret
lods
scas
push
stos
or
sti
xrelease
jecxz
dec
cld
mov
sub
push
pushf
sub
cld
and
out
imul
push
cmc
aam
dec
repnz
cmpsl
pop
inc
shll
jmp
adc
loop
call
test
mov
xor
dec
sahf
dec
mov
push
push
push
addr16
cwtl
sti
push
test
nop
insb
adc
addr16
pop
mov
flds
add
push
data16
orb
mov
mov
jecxz
adc
dec
nop
jecxz
mov
push
and
sub
dec
and
repnz
add
sub
jle,pt
adc
push
add
push
popa
call
xor
punpckhwd
pop
cmp
inc
xchg
mov
jp
or
and
mov
jne
gs
pop
pop
in
mov
ret
xchg
sbb
in
fwait
mov
bt
adc
sahf
mov
inc
cmp
mov
or
cld
add
scas
push
or
inc
out
cmp
mov
mov
inc
add
push
sbbb
loopw
cmovno
xor
test
scas
mov
sbb
cmp
push
xor
stos
aaa
scas
gs
les
addb
cltd
fnsave
ds
clc
movsl
xor
adc
push
dec
sbb
dec
pop
clc
pop
fsub
push
jecxz
mov
and
fcoms
enter
das
addr16
ret
mov
scas
xor
lods
mov
pusha
mov
stc
xchg
pusha
dec
ret
lea
in
pusha
mov
clc
stos
mov
outsb
inc
ficoml
inc
test
fs
inc
in
cltd
or
dec
leave
sbb
rorl
cwtl
outsl
dec
cmp
scas
jp
pop
or
jne
mov
cmp
cli
dec
in
out
stos
int
push
sbb
mov
negb
popa
loop
xlat
lcall
pop
and
test
jge
pop
inc
inc
call
mov
mov
dec
push
push
ss
mov
add
sbb
push
adc
cltd
mov
mov
aas
pop
or
mov
sbb
jo
adc
call
jae
or
inc
dec
mov
lret
ffree
adc
call
push
loope
pop
lock
gs
xchg
fsubs
add
mov
push
lds
adc
out
push
and
aad
cmp
stos
cwtl
mov
jge
dec
and
sbb
adc
dec
xchg
loopne
out
xchg
add
mov
inc
pop
push
sub
jns
adc
adc
xlat
cmp
sbb
mull
push
sarb
cli
mull
sbb
repnz
xor
test
movsb
cmp
dec
fs
adc
fwait
rcll
scas
std
mov
mov
jb
andl
xor
xchg
loope
das
loop
and
std
lods
xor
inc
xchg
cmpsb
mov
lock
fdivr
loope
fs
pop
cltd
mov
rol
mov
bound
cmc
ljmp
repz
call
fistpl
leave
hlt
cmc
popf
aad
xchg
push
jo
cmp
scas
movsw
or
xchg
push
pop
or
cmp
das
mov
std
cli
dec
sbb
lcall
testb
pop
push
jno
lds
jns
inc
addr16
fs
pop
mov
div
lods
push
push
ljmp
push
lds
jg
call
mov
out
stos
cmp
mov
sbb
ret
test
lds
stos
dec
jle
mov
add
nop
jl
mov
adc
outsb
cltd
notb
cmp
aad
cld
out
mov
jecxz
sbb
lock
pushf
jp
cmp
xor
jg
rclb
jg
xchg
mov
sub
fcoms
push
adc
sti
jae
shrb
enter
adc
inc
pop
mov
ja
stos
sbb
dec
push
fs
xchg
loopne
sub
cwtl
xchg
imul
pushf
jp
mov
pop
repnz
pop
mov
in
dec
jo
adc
adc
jmp
mov
ja
push
subl
test
inc
in
sub
adc
pop
addr16
rol
inc
xor
xchg
shlb
iret
iret
rcrb
mov
sub
addr16
mov
into
jo
outsb
mov
sub
push
aas
sub
test
sub
sub
or
mov
ds
daa
cmp
dec
xor
std
or
aad
pop
cmp
clc
pushf
test
sarl
insl
mov
push
mov
mov
push
push
addr16
inc
dec
add
or
jo
jl
cmpl
jl
jnp
ja
xchg
inc
aam
or
jmp
or
cmpsl
call
les
mov
sub
leave
daa
dec
add
pop
adc
aam
mov
fcoms
popa
ret
mov
nop
mov
add
rol
xchg
pusha
fwait
cmpsb
mov
shll
mov
pop
inc
xor
test
pop
bound
insb
std
xchg
les
add
or
in
pop
xchg
adc
and
sub
test
sbb
das
lret
cmpsb
xor
je
pop
fcomps
push
or
xor
adcl
adc
xlat
fdivrl
popa
sub
pop
lcall
rorl
xlat
xchg
jnp
jg
pusha
gs
inc
mov
rolb
push
fs
outsl
mov
pushf
pop
neg
fisttpll
and
jae
fldt
pop
mov
mov
adc
or
aam
mov
aaa
or
cmpsl
fcoms
cwtl
mov
mov
sub
iret
mov
fadd
scas
cld
dec
and
pop
and
push
scas
xchg
mov
jmp
cmp
inc
lcall
mov
fisttpll
pop
mov
and
fsts
mov
in
push
inc
std
loope
into
xchg
and
outsb
jmp
jo
sub
shrb
jg
ret
add
stc
movsb
mov
fwait
push
add
pop
xor
xchg
sub
push
leave
je
cmpsb
mov
ja
mov
xor
jb
push
in
cwtl
pop
jl
adc
call
jmp
push
repnz
imul
das
cmpsb
jo
outsb
jge
leave
xchg
lret
sub
in
add
lods
adc
cli
jp
xor
pop
bound
sbb
stc
cwtl
push
inc
pop
adc
popf
adc
lea
cmp
xor
inc
mov
mov
cmp
jne
xchg
xor
stos
mov
or
push
mov
xor
shlb
push
int
jo
add
and
and
inc
adc
pop
and
pop
add
popf
adc
into
leave
cmpsl
fidivrl
les
mov
test
mov
inc
inc
and
stos
mov
push
inc
bound
dec
add
imul
loope
mov
pusha
adc
daa
or
pop
jae
mov
inc
ret
fistps
pop
sbb
or
mov
sub
popa
pushf
dec
cltd
mov
inc
out
cmp
xor
cmp
inc
in
mov
xchg
jmp
xchg
ljmp
jo
cmpsl
or
pop
int3
mov
push
cmp
rcrl
in
xacquire
adc
rolb
or
cld
jl
sbb
adc
mov
jge
push
xchg
sub
test
mov
and
out
test
sub
stos
push
sbb
in
popf
adc
sub
and
mov
xor
iret
push
movsb
sahf
loop
jg
cld
xor
sub
adc
movsb
push
xorb
dec
cltd
mov
jl
out
sub
cltd
xchg
lds
cld
mov
mov
mov
fucomi
lds
loopne
iret
xor
push
push
call
mov
jecxz
cltd
and
enter
xchg
sti
add
xor
aas
cmpsb
inc
push
gs
dec
sbb
test
dec
ja
fimull
and
pop
sbb
xchg
aad
stos
hlt
xchg
scas
lret
gs
mov
fisubrs
in
cmp
rolw
mov
lahf
ret
jno
repnz
cmp
sub
enter
xchg
ret
pop
mov
mov
adc
adc
mov
dec
icebp
add
fisubrs
aas
add
mov
fcomi
test
lods
mov
adc
jns
sub
inc
pop
sub
adc
sbb
rcrb
pop
and
cmpsb
packuswb
fistpll
lcall
jno
lods
jo
inc
test
sarl
push
jo
jmp
stc
sub
cltd
push
mov
lock
cmp
test
sub
adc
mov
and
test
lret
push
ret
rcr
das
pushl
gs
push
jle
adc
jmp
pushf
or
je
cmc
xchg
loope
movsl
mov
mov
xchg
fstpl
sbb
and
movsl
fldt
popf
movsb
add
shl
cltd
ds
or
mov
jno
mov
fsubl
in
xor
pop
scas
sub
xchg
xor
loop,pt
xchg
rcrl
lahf
mov
sub
inc
jne
out
xchg
sbb
xchg
and
cltd
pop
mov
mov
mov
ss
jl
sub
adc
jl
mov
xor
jae
lcall
pop
jns
adc
stc
jg
loope
js
and
lods
icebp
mov
dec
adc
inc
repz
repnz
in
stos
cmc
sti
mov
adc
add
popf
in
or
clc
cmp
mov
xchg
pop
dec
mov
sub
mov
fcomps
je
and
mov
pop
outsb
aaa
bound
rolb
add
mov
push
test
lret
xchg
xor
jae
addb
cmpsl
inc
mov
leave
push
or
enter
dec
lock
pop
into
xchg
shlb
out
push
dec
cmp
out
ffreep
jmp
adc
imul
jge
ret
out
enter
ja
xchg
ret
adc
test
subl
cmpb
sahf
add
stc
je
inc
inc
xchg
add
push
mov
jecxz
repnz
enter
mov
out
leave
jmp
mov
xchg
xchg
cmp
adc
ds
insl
sub
imull
mov
push
inc
mov
aad
es
fldt
jmp
add
mov
jae
lock
arpl
stc
xchg
pop
cs
gs
cs
int
addb
mov
data16
pop
je
test
cli
and
popf
mov
inc
in
aam
aam
shrb
cmpsb
push
lock
dec
adc
int
and
sbb
mov
jp
dec
mov
ds
mov
ja
lods
js
mov
dec
adc
sub
xor
mov
jns
je
sbb
mov
fnstenv
outsb
popa
push
sbb
mov
sub
lahf
add
fildl
mov
cmc
addr16
stos
ss
jl
jecxz
sub
inc
push
cmp
push
and
xchg
mov
insb
lock
jns
sti
push
sbb
add
push
mov
adc
sub
lea
mov
pop
pushf
cmc
push
js
sub
lea
sbb
push
test
js
arpl
sahf
mov
fidivrs
mov
or
jb
cli
daa
mov
jo
movsl
pop
scas
cld
mov
stos
inc
mov
aas
mov
fs
loop
das
jae
daa
int
outsl
and
dec
testl
fwait
mov
and
pop
mov
jl
pop
sahf
add
jl
sbb
and
or
mov
adc
xchg
aad
xchg
pop
cmp
jbe
mov
or
add
push
sbb
sahf
aaa
test
mov
sbb
aas
inc
int3
popa
popl
pusha
jne
or
mov
lahf
and
pop
mov
or
mov
lods
pop
jo
xchg
dec
mov
outsl
fstpl
sbb
out
push
movsb
scas
cli
arpl
jns
mov
cmp
les
les
test
out
int
test
out
mov
enter
ljmp
push
mov
pop
ja
inc
loop
fcoml
lea
arpl
jno
fdivs
loopne
xlat
movsb
cmp
sub
out
outsb
dec
mov
or
and
test
test
xchg
jb
mov
les
lds
stc
lahf
pop
pop
cmp
and
sub
xchg
push
mov
jge
sbb
xchg
out
minps
bound
push
popf
inc
cld
xor
jl
mov
push
loopne
fisttpll
jecxz
out
rorl
mov
cmpsl
push
rol
outsb
jge
mov
cmp
hlt
lahf
and
and
fsubrl
rol
inc
push
dec
mov
xchg
xchg
fs
xor
mov
mov
movsb
mov
fsubs
fdivrl
xchg
push
lcall
mov
shlb
mov
movsl
push
scas
sub
sarb
xor
lods
sarl
jns
jnp
repnz
mov
adc
insl
sahf
sbb
add
add
sub
add
scas
adc
cs
xor
inc
repnz
sub
xor
and
cmc
cmp
mov
aas
cmpb
inc
or
add
lods
ljmp
xchg
and
pop
dec
addr16
xchg
inc
pushf
jge
arpl
daa
and
hlt
outsl
push
jecxz
inc
movl
xor
movsl
je
push
fwait
xchg
scas
iret
mov
inc
xchg
fwait
push
inc
clc
shrl
sub
xchg
or
aad
fisubrl
xor
mov
fbld
int3
and
push
enter
add
xor
jge
stos
fstl
es
enter
lds
test
dec
in
inc
int3
xorb
and
mov
subl
insl
pusha
repz
push
out
aas
pop
jnp
mov
and
dec
mov
les
rorl
xor
xor
sub
mov
or
jo
roll
aas
mov
jb
add
repz
gs
mov
arpl
adcb
or
and
in
test
mov
std
data16
in
andb
mov
dec
or
xor
cmp
xchg
pop
xchg
adc
xor
push
test
mov
sbb
jnp
pop
mov
icebp
cmpsl
lea
sti
out
xchg
adc
jmp
std
add
dec
sub
loopne
stos
dec
sub
test
loop
ss
insl
and
jg
xchg
js
sub
mov
pop
movsb
pop
repz
out
gs
data16
mov
out
frstor
icebp
and
rcrl
in
lods
arpl
lcall
mov
pop
jge
and
lock
or
test
or
int3
icebp
and
and
subl
mov
out
mov
daa
fwait
test
mov
mov
mov
and
addr16
loope
jbe
mov
adc
movsb
mov
and
gs
shrl
ds
enter
sub
aaa
addl
fwait
into
hlt
sbb
mov
jne
cltd
movsb
mov
adc
dec
push
repnz
pushf
jmp
mov
add
mov
sub
add
negl
repnz
loopne
mov
adc
das
imul
mov
sbb
or
inc
cmp
xor
xor
mov
outsb
aam
cmp
dec
dec
call
xor
sahf
cld
inc
insb
movsl
sbb
push
add
jmp
cs
ret
ljmp
xchg
mov
jns
pop
stos
jbe
call
mov
dec
xor
shld
scas
push
dec
sbbl
mov
xchg
add
rcrb
addb
dec
roll
lret
out
xlat
and
movsl
push
mov
roll
int3
out
sub
dec
test
mov
lcall
int3
mov
bswap
popf
pop
sub
inc
in
jnp
dec
mov
test
sub
pusha
rclb
insl
ljmp
fnstenv
repz
inc
pop
cmc
inc
inc
imul
adc
inc
addl
repnz
mov
loopne
ljmp
in
cmc
push
mov
cli
shr
inc
stc
out
ss
jmp
jp
ss
push
call
cmp
mov
daa
mov
insl
mov
adc
push
xchg
inc
mov
xchg
mov
fs
xlat
xchg
ljmp
xchg
xlat
mov
cli
cmp
adc
push
mov
popf
insb
dec
dec
add
add
dec
mov
mov
ja
cmp
cwtl
das
les
dec
mov
or
pusha
push
inc
sub
lret
adc
das
loop
sbb
insl
xor
add
push
mov
cmc
aad
mov
add
or
sti
movsl
js
stc
sbb
in
dec
movsb
icebp
add
xchg
aas
inc
pop
lcall
out
fs
arpl
fistpl
xor
push
cs
adc
mov
ljmp
inc
decb
cli
lock
add
push
hlt
cli
enter
pushf
mov
fsubr
dec
pop
xchg
stos
jnp
push
inc
hlt
in
stos
cwtl
mov
jbe
stc
mov
mov
sbbb
insl
cld
stos
imul
gs
aad
movsl
and
aaa
scas
call
push
xor
mov
popa
inc
pusha
jae
pop
dec
icebp
xor
adc
inc
push
mov
xchg
mov
sarb
int3
ret
ss
out
mov
insb
out
adc
mov
add
jl
and
lsl
lds
ficoms
cmpsl
lret
insb
xor
sti
mov
and
cld
adc
inc
push
mov
sub
mov
xor
pop
inc
cli
adc
pop
mov
imull
aaa
in
jp
push
orl
iret
enter
cltd
in
out
dec
stos
push
dec
addb
addr16
stos
push
push
repnz
nop
arpl
xchg
xchg
pop
xchg
hlt
jl
or
ror
cmp
cs
jo
sbb
mov
or
pop
jne
xchg
add
push
das
lods
call
mov
sub
push
insb
adc
in
popa
jecxz
and
rcrb
orl
adc
mov
dec
xor
dec
mov
xor
jae
es
mov
push
xchg
rcll
sub
mov
js
push
xor
pushf
dec
mov
xchg
loopne
dec
into
test
inc
sti
mov
push
mov
mov
mov
add
and
push
pusha
test
std
mov
adc
js
bound
clc
shlb
out
pop
adc
push
lret
scas
push
mov
in
fidivrl
loopne
int
jnp
ret
cmpb
outsb
lret
push
fstpl
inc
jge
cltd
rcll
push
jle
sbb
testl
test
loope
mov
cmp
mov
and
shr
fbstp
dec
cmp
adc
lahf
adc
mov
mov
xor
push
jne
stos
iret
jno
rcrl
mov
aam
in
ret
insb
sbb
cmpb
std
pop
repz
jbe
aaa
push
cld
add
jnp
xor
aas
repz
repz
inc
je
in
pop
pop
and
orb
inc
add
add
sar
push
jecxz
outsl
xchg
ja
dec
jns
mov
mov
lret
mov
pop
neg
imul
leave
int
cli
shl
mov
sarb
insb
xor
xor
push
loopne
aaa
shll
rcl
add
mov
cmp
jle
jbe
xchg
inc
push
stc
lret
mov
inc
data16
mov
loope
jmp
jmp
and
xor
loopne
sbb
xchg
popl
in
into
sub
aad
dec
add
pusha
insl
or
or
adc
cmp
mov
xchg
add
and
xchg
ljmp
pusha
xchg
stc
sbb
inc
pop
mov
sahf
lds
adc
and
inc
jle
mov
insb
push
arpl
xchg
lods
jp
jg
repnz
push
xchg
push
jge
shlb
sbb
add
int3
and
xor
popa
cmp
iret
fdivl
out
jmp
xlat
or
shlb
or
cmp
stos
dec
rolb
mov
mov
or
sbb
out
mov
fmull
lds
sub
xchg
xchg
lds
xor
outsb
xchg
mov
mov
xchg
mov
mov
call
out
ss
stc
in
cmp
push
or
dec
push
popf
es
movsl
cmp
cld
xchg
cwtl
mov
enter
push
jmp
mov
mov
mov
aas
push
adc
mov
je
cmpsb
add
ret
mov
lret
pop
lea
jb
dec
adc
aad
mov
jae
in
lods
xchg
pop
cmp
hlt
ja
inc
jo
stos
ja
outsb
mov
mov
movsb
cmp
mov
push
popa
mov
test
adc
sbb
lds
andb
fadd
adc
or
sbb
mov
sahf
mov
add
mov
or
outsl
lods
mov
cld
fdivrs
adc
adc
mov
sbb
or
stos
mov
in
std
aad
call
pop
xor
adc
rcrl
push
push
dec
adc
test
es
dec
xchg
addb
adc
sbb
enter
mov
cmc
fidivrl
inc
fists
jge
pop
and
outsb
test
xchg
push
sarb
and
repnz
mov
call
cltd
fincstp
inc
cmc
pop
dec
cmp
sarl
sti
dec
jo
sbb
mov
lea
dec
mov
jno
cmp
dec
push
in
mov
insb
xchg
xor
stc
pop
stos
lahf
mov
sar
enter
adc
popf
push
imul
mov
push
mov
movsl
inc
mov
and
pop
out
fmull
xchg
xor
sbb
mov
movsb
mov
shlb
add
jge
pop
cmpsl
test
jge
lcall
xor
mov
pop
sbb
xor
fists
push
cs
push
sub
mov
jle
shrb
dec
mov
cmp
cmpb
jmp
mov
in
leave
push
jae
adc
sbb
sub
sbb
ror
mov
push
mov
lahf
das
add
sub
mov
inc
push
jle
int
push
adc
cmp
arpl
dec
dec
std
fnstenv
imul
ljmp
es
or
and
cmpsl
push
cmp
push
jp
mov
cwtl
and
cmp
cltd
cmpsl
test
ja
pop
popf
sbb
hlt
xchg
and
scas
adc
stos
sub
jmp
add
je
lahf
jnp
push
into
into
adc
jl
push
sahf
shr
rorl
sbb
mov
out
sahf
cmp
dec
xor
add
lods
or
cmpsb
adc
movsb
loope
bound
ss
adc
push
sub
xor
dec
sti
inc
pushf
sub
lahf
add
mov
add
and
sti
add
in
hlt
enter
or
addr16
mov
push
sub
bnd
add
ficomps
call
mov
stos
test
and
rclb
mov
mov
dec
les
xor
fildll
add
jno
jb
addr16
add
lods
add
lods
lods
sarb
or
cbtw
xchg
pop
loopne
lret
and
sahf
pusha
pop
fisttpll
repnz
fmuls
cmpsb
pop
xchg
into
jbe
addb
lahf
popf
data16
aam
add
jo
dec
insl
or
cltd
xchg
sar
sub
lods
test
add
stc
ret
xchg
addr16
and
roll
mov
adc
pop
mov
aam
mov
in
or
add
movsl
mov
movsb
repz
hlt
shrl
mov
loopne
jl
xchg
sub
outsb
cld
cmp
ljmp
pop
mov
fldt
es
ds
lret
mov
lods
add
leave
jb
jg
je
bound
mov
xchg
mov
pop
dec
inc
pop
ja
xchg
cli
sbb
pop
scas
inc
or
or
push
lods
cld
fidivrs
mov
lret
xchg
jle
gs
repnz
fistpl
rcr
push
imul
mov
add
popf
lods
das
mov
cld
dec
pushf
inc
inc
and
gs
test
or
pop
push
push
add
xchg
xchg
js
rcl
push
mov
out
fwait
into
cwtl
xchg
dec
or
js
sbb
adc
sub
jnp
jmp
pushf
add
and
push
call
cmp
add
push
push
adc
sbb
mov
imul
push
mov
jo
or
ja
add
mov
mov
ds
and
and
mov
jne
loope
popa
mov
fldenv
lret
hlt
sti
sbbb
mov
add
cmp
push
dec
es
pcmpgtw
out
and
call
fdivrs
aas
fnsave
or
mov
add
push
ja
push
adc
cmp
mov
sarb
inc
mov
cmp
cli
dec
pop
pop
and
push
data16
mov
lahf
xor
fsubrp
or
mov
push
mov
lds
sbb
xor
arpl
stos
add
jle
mov
fdivrl
pop
idivb
push
inc
jbe
push
jecxz
imul
add
xchg
pushf
adc
xlat
sbb
nop
stos
and
cwtl
mov
or
rolb
xchg
jl
cmp
outsl
lods
mov
mov
sahf
jg
push
dec
roll
dec
or
mov
xchg
clc
mov
push
imulb
mov
pop
xchg
mov
jne
es
shlb
xchg
mov
stc
lret
xor
loopne
ss
scas
inc
jle
pop
call
fildll
test
xchg
pop
test
popf
push
adc
fcomi
adc
cwtl
cmc
sbb
or
mov
cmp
adc
movsb
jmp
pop
xor
add
test
cmp
pop
add
out
shrl
ss
adc
mov
jbe
pusha
pusha
outsl
ret
jo
rorl
push
cltd
out
mov
sbb
mov
test
icebp
cmpb
nop
jne
pop
add
add
push
mov
push
pushf
data16
jno
jo
push
movaps
lock
clc
mov
jbe
out
jno
pminub
and
add
pushf
shrb
jle
idivl
cmp
pop
fsubs
enter
mov
xchg
pop
outsl
imul
rclb
mov
into
dec
xchg
sarb
or
xchg
mov
pusha
mov
jmp
cli
sub
pop
mov
mov
sti
aaa
xor
adcb
or
stos
addr16
fcmovne
loop
lock
sbb
cmp
pushf
lret
jne
jbe
mul
dec
cmp
popf
sub
pop
dec
daa
lods
adc
icebp
mov
inc
push
cmp
push
mov
xchg
add
mov
addl
dec
loope
shlb
insl
and
sbb
push
jecxz
out
jne
jl
rcrb
lods
or
jge
loope
jno
cmovle
test
adc
dec
push
adc
lret
sahf
or
rorl
inc
mov
jmp
fs
clc
adcl
cmp
dec
out
outsl
dec
mov
in
mov
jb
xchg
sar
and
mov
nop
dec
cltd
into
dec
hlt
popf
mov
jb
cmc
xchg
outsb
sahf
adc
pop
mov
out
out
rorb
mov
cmp
cmp
and
fstpt
popf
mov
lods
mov
loope
xor
dec
add
shl
popa
call
xorb
faddl
cli
pop
add
in
adc
arpl
notl
fwait
mov
mov
mov
and
inc
lock
lea
xchg
jp
cmp
fucompp
dec
adc
push
test
jae
sahf
out
xor
or
lods
cmp
je
jmp
out
mov
pop
mov
cs
mov
sbb
cmp
jp
or
mov
fisttpl
cmp
jecxz
adc
scas
int3
mulb
push
repz
mov
push
push
mov
adc
scas
mov
aam
pushf
cmpsb
mov
inc
adc
add
adc
sub
push
dec
hlt
test
mov
xchg
and
sbb
jg
ja
mov
push
cmp
mov
int
nop
stos
je
inc
ficoml
je
push
decl
cs
mov
cvtpi2ps
pushf
jge
sbbl
fnstenv
jns
sar
out
mov
out
mov
pusha
sahf
xchg
leave
jne
ljmp
xor
hlt
cmpsl
mov
pushf
stos
xchg
xchg
mov
and
fsubr
push
xor
xchg
pushf
sbb
add
data16
add
fidivs
test
mov
pop
movsl
cmpsb
ficoms
sub
inc
mov
rorl
adc
sbb
out
xchg
in
ljmp
repnz
scas
mov
lcall
arpl
push
cmp
xor
and
add
roll
xchg
stos
shr
hlt
push
cmp
add
cld
pop
jne
jp
cmp
ja
adc
push
jle
les
and
cmc
inc
xchg
je
cmp
popa
cmpsl
mov
mov
pop
incb
push
sub
dec
xchg
mov
lret
jle
aad
adc
jmp
cmp
inc
mov
push
pop
lock
fisttpl
mov
inc
lar
or
or
inc
push
outsl
jg
or
dec
hlt
out
sub
imul
jo
push
mov
and
out
pop
psubb
add
pop
jb
mov
inc
movsb
out
adc
insl
sbb
daa
call
fsubl
das
jae
or
inc
test
fisubs
pop
cmpl
and
imul
sub
xchg
cmp
insl
inc
push
adc
mov
cwtl
dec
scas
mov
je
frstor
rcl
cwtl
xor
fdivs
adc
or
out
and
into
mov
insl
sti
xor
leave
rorl
iret
std
push
lret
jle
das
outsb
sbbl
cmpsl
xchg
loop
call
jmp
loope
cli
xchg
insb
fiadds
xchg
movsl
mov
xchg
mov
mov
inc
xor
jnp
jmp
test
jge
pop
mov
mov
jmp
push
mov
push
pop
cli
shrl
or
ds
jmp
loop
push
sub
mov
orl
mov
pop
mov
pop
xchg
pmulhuw
or
repz
xchg
lret
sti
movsb
loop
mov
pop
push
in
sbb
sub
daa
push
test
aad
mov
rcr
or
fdivrs
shlb
int3
sbb
push
mov
adc
repz
pop
ffreep
adc
aam
shrb
adc
xchg
int
adc
insl
adc
lret
adc
mov
and
out
pop
faddp
lock
mov
xchg
or
andl
push
and
fadds
cmp
cltd
ja
lret
sbb
rcll
add
cli
mov
and
cmp
cs
hlt
sbb
add
dec
mov
movsl
test
mov
mov
push
roll
stos
pushf
xor
and
pop
jno
mov
dec
ja
cmc
lods
cmpsb
fnsave
push
pop
cmp
lahf
or
int3
adc
mov
out
out
pop
push
test
shrb
mov
jp
jb
xor
pop
inc
dec
jle
sbb
cld
adc
pop
push
mov
mov
inc
push
daa
lods
subb
add
ret
fmul
std
clc
sbb
inc
out
push
and
xor
adc
adc
cld
aad
pop
imulb
pop
fs
add
je
inc
push
mov
jmp
and
mov
shll
cmpsb
xorb
inc
push
mov
test
fs
das
out
add
lods
scas
dec
jle
jmp
mov
test
mov
fsts
sub
adc
out
dec
xor
mov
sbbb
fisubs
stos
adc
dec
cmp
popa
imul
ficomps
sahf
or
incb
push
mov
aam
sbb
jnp
jbe
cli
mov
xor
aad
in
lods
lea
dec
push
popa
flds
inc
das
mov
test
test
sti
mov
cmp
sbb
rorl
shrb
popa
jmp
dec
shrb
stc
mov
dec
js
out
adc
adc
sub
pop
inc
cmpb
hlt
inc
push
lds
jbe,pn
sub
cltd
in
xchg
pop
or
and
stos
jge
fdivrp
sti
addr16
jae
mov
push
xor
push
mov
rorb
or
rolb
dec
push
les
jp
mov
std
sbb
arpl
inc
stc
aas
dec
popa
movsl
jb
les
jg
pop
xor
jecxz
js
outsl
and
adc
lock
inc
adc
jmp
xor
out
movsb
test
mov
adc
mov
icebp
mov
mov
mov
roll
insb
and
and
inc
fwait
vucomiss
cmpsb
jp
lahf
jl
in
sbb
incl
xchg
popa
mov
in
fisubl
xor
ficomps
mov
mov
push
pop
repz
cmp
mov
push
movsb
outsl
stos
xchg
jns
add
pop
or
push
cmpsb
dec
ja
xchg
jnp
call
or
jge
sub
test
inc
pop
ret
mov
test
pop
sbb
stc
xchg
dec
shrb
sub
test
xor
jns
cmc
loopne
and
mov
sarl
stc
jge
mov
jo
fldenv
push
into
xor
push
push
shrl
mov
dec
xchg
push
fisubl
add
loopne
mov
add
out
repz
xor
fcmovb
dec
mov
test
cmp
loope
xchg
lds
popf
shlb
mov
mov
xchg
mov
xchg
mov
mov
xchg
pop
push
mov
add
jne
jae
jo
jnp
pop
stc
push
rcll
mov
xchg
nop
cltd
lea
xchg
lods
inc
sbb
adc
mov
movsl
mov
xchg
in
pop
push
adc
outsb
cmpsb
data16
icebp
out
insb
in
je
or
push
ret
push
xchg
pop
mov
imul
xor
inc
mov
shll
lea
subl
xchg
sub
lds
dec
mov
adc
cli
adc
clc
icebp
mov
cmp
cmp
mov
mov
push
mov
sti
pop
xchg
scas
xor
rclb
push
pop
push
xchg
and
xchg
movb
sbb
xchg
popa
xor
hlt
push
mov
pop
cmp
dec
jnp
jnp
int3
ss
and
jp
mov
insb
sbb
pop
jne
test
inc
mov
stos
sub
shlb
fnstsw
les
add
push
int3
add
and
ret
sbb
lcall
mov
cmpsb
sti
shll
andb
insl
mov
aaa
insb
mov
std
mov
dec
mov
fld
push
mov
pop
movsb
push
sahf
jl
add
stc
dec
movsl
rcrb
adc
and
jns
sbb
sub
dec
cmp
out
add
mov
and
cs
je
cmp
addr16
in
loope
sub
adc
inc
cmc
dec
roll
iret
inc
push
ja
cltd
orb
movsl
cmp
push
out
xor
or
addl
pop
adc
repz
fistps
arpl
fwait
lret
mov
pop
sub
gs
loopne
daa
scas
out
mov
push
dec
insl
les
jb
in
daa
xchg
and
inc
push
sbb
jo
pop
ret
es
and
dec
add
arpl
jle
mov
add
sbb
cltd
jmp
test
mov
cld
push
push
subb
adc
push
mov
or
daa
outsb
lea
mov
and
inc
push
scas
gs
mov
xor
pop
fs
test
fdivl
and
mov
iret
das
shr
or
push
test
sbb
add
aam
idivb
aas
mov
les
notb
cmp
pop
push
or
scas
xor
lea
adc
std
mov
and
lcall
cmp
jl
sti
outsb
in
inc
test
dec
mov
les
data16
shll
add
add
gs
std
enter
mov
pop
fsubp
cmp
pop
cld
rcll
and
pusha
ret
and
push
popa
pop
xchg
orl
jno
mov
cmp
and
stos
addr16
das
lcall
movl
enter
lock
fmull
xchg
fnstcw
push
jo
leave
pop
and
mov
jae
sbb
push
shl
fisubrl
inc
cmp
inc
ja
jbe
ljmp
jle
mov
pop
test
push
mov
mov
je
mov
inc
mov
pop
sti
fstl
nop
and
mov
ljmp
icebp
test
xchg
mov
sbb
cmc
not
outsb
xchg
sbb
movsl
ret
cmp
dec
cmpsb
mov
inc
xor
jmp
jnp
mov
cmp
sbb
lods
and
lcall
push
add
fstpl
jge
push
data16
adc
pop
inc
pop
pop
mov
pop
ret
xor
dec
rorb
xchg
popf
push
or
push
adc
xor
jg
xlat
mov
lods
push
mov
push
mov
shlb
ss
and
fdiv
cmp
leave
pusha
repnz
xor
pop
sti
mov
sti
shr
sub
add
aas
shll
dec
pop
rcll
pop
jb
frstor
push
enter
sti
cmp
mov
mov
fs
jl
xchg
sub
in
sub
test
mov
cltd
jns
sub
aad
inc
cmp
dec
push
mov
gs
pusha
push
imul
add
imul
enter
xchg
mov
sbb
xchg
lods
mov
roll
pop
lds
lar
out
mov
dec
and
test
or
sub
aas
repz
or
cmpsl
es
cltd
out
leave
dec
mov
xchg
out
movsl
jne
sub
push
jns
daa
jne
rorb
push
add
shrb
mov
inc
xchg
nop
shll
fs
loopne
lock
dec
out
sarb
sbbl
inc
mov
cmp
pop
cld
cmovp
sbb
lock
inc
call
add
push
add
add
and
in
gs
hlt
ffree
jg
rcrl
out
xchg
enter
clc
mov
xor
arpl
push
xor
ds
and
int3
call
xchg
jbe
mov
lock
sarb
lods
mov
add
inc
adc
adcb
pop
xor
mov
fdiv
stc
cmpsl
xorl
xor
fisttps
loopne
insl
inc
sub
loopne
xchg
add
mov
xor
push
out
in
rorl
add
inc
sub
push
jae
test
lods
xchg
cld
jl
daa
lcall
mov
rcl
insl
scas
enter
sbb
cmp
push
adc
mov
cmc
rclb
test
inc
mov
mov
cwtl
inc
out
dec
filds
rclb
lcall
lds
loopne
cmpsl
push
push
icebp
mov
mov
inc
xchg
sub
das
pop
enter
jbe
adc
and
into
rcrl
imul
dec
int3
out
or
adc
fwait
cmc
fyl2xp1
stc
xlat
inc
push
clc
loopne
and
mov
testb
add
xchg
je
dec
repnz
insb
sbb
jmp
sub
jge
xchg
ret
xlat
test
mov
cmp
push
insb
outsl
in
adc
cs
push
lds
push
jg
pop
or
mov
and
lods
inc
sub
test
mov
lea
inc
pushf
ja
adc
je
fistl
xchg
push
int
pop
cmpsl
clc
mov
xor
sbb
jnp
or
jno
in
fcoml
mov
stos
addr16
xor
sahf
stos
test
cmp
sbb
cmp
int3
pop
jb
xor
and
call
xchg
mov
push
incb
cmp
insl
push
popf
add
push
xchg
pushf
xor
jecxz
in
mov
ret
je
mov
sbb
lret
sbb
icebp
out
mov
int
lock
cmp
aam
xor
cmp
imul
dec
pinsrw
mov
aad
jl
xor
jnp
fsub
cmpsb
or
ds
stos
repnz
cmp
jne
nop
mov
test
fdivp
pop
fisubs
mov
jns
xor
arpl
rcrb
jo
cmp
aam
mov
int3
ja
pushl
or
add
stc
and
mov
pop
xor
popa
lock
add
sbb
iret
pusha
std
scas
or
mov
mulb
repnz
leave
dec
repz
fistpll
repnz
mov
inc
ljmp
clc
push
sbb
mov
cmp
dec
sub
lret
adc
imul
movsl
add
lods
ret
push
mov
pop
pop
lret
add
loope
enter
or
out
push
jecxz
jne
enter
stc
fiaddl
in
adc
inc
adc
cmp
jnp
movsl
sub
add
clc
je
cmpsb
dec
loop
fistl
fmuls
mov
sarb
aam
jo
sbb
jp
shl
dec
out
sbb
adc
inc
xchg
mov
test
or
int3
int3
out
push
sub
push
in
push
or
mov
dec
jl
xor
jnp
jg
sahf
adc
and
inc
sub
outsl
mov
jg
xchg
adc
mov
rcr
cs
mov
es
ljmp
pop
push
loopne
push
mov
adc
lcall
cmp
inc
sahf
out
mov
inc
fisubl
jno
mov
shrb
leave
mov
loop
popl
test
cmp
test
jo
sub
xchg
cmp
fcmovu
mov
mov
les
xor
mov
mov
pinsrw
mov
arpl
fsubrl
xchg
addr16
repz
mov
or
inc
fsubr
pop
jecxz
add
jle
stc
cmp
lret
cltd
mov
call
rol
movsl
xor
hlt
adc
std
sub
sbb
mov
sti
add
pop
std
lds
mov
jge
sti
andl
inc
loop
inc
sti
sti
or
cli
call
notl
push
outsl
lcall
xchg
sub
dec
je
mov
fwait
or
add
leave
push
dec
stc
add
cmpb
sub
aaa
cmp
and
out
inc
jecxz
inc
stc
dec
mov
xor
xchg
adc
adc
stos
sbb
cmp
sub
repnz
xlat
inc
mov
sbb
cmc
inc
adc
cmp
or
adc
lahf
pop
adc
xchg
movsb
or
stc
out
lcall
dec
nop
fs
xchg
popa
xchg
stc
cltd
xor
movsl
cmp
loope
xchg
inc
lods
fimuls
push
xchg
inc
iret
fdivs
cmpsb
arpl
dec
adc
mov
rorb
push
mov
les
mov
lret
call
clc
and
add
add
or
fnstcw
dec
paddusw
mov
or
scas
or
push
insb
inc
clc
pop
inc
and
xchg
or
pop
inc
sub
jmp
sbb
mov
or
movsl
mov
cmp
pop
jb
push
negl
push
js
lret
push
mov
sbb
or
and
clc
shr
inc
dec
sbb
lods
cmpsl
lret
in
or
loop
xor
test
adc
clc
outsl
lods
mov
mov
jge
sub
das
add
and
fiadds
pop
jnp
scas
in
dec
mov
adc
popa
fcompl
out
push
lods
or
jae
add
lret
mov
sbb
scas
ficomps
sbb
push
inc
sub
add
inc
sbb
scas
icebp
cmpsl
nop
jmp
cld
mov
pop
mov
sar
jno
sti
leave
loop
jge
sub
stos
test
xchg
mov
sti
jno
data16
adc
and
out
lock
lods
sbb
inc
jmp
ja
lret
shl
das
mov
xchg
mov
cmp
das
or
test
fsubl
mov
out
mov
jp
mov
in
add
sbb
inc
push
push
xchg
push
sarl
jb
lret
pop
gs
lahf
dec
sub
sahf
ds
icebp
dec
push
inc
outsb
mov
test
repnz
or
out
cs
int3
adc
insb
je
test
inc
inc
adc
xchg
es
xor
lcall
outsb
add
loop
cmp
mov
mov
mov
cmpsl
into
xchg
add
lret
out
xor
xorb
jecxz
pop
shrl
cwtl
fldl
and
bound
lret
repnz
ja
mov
xchg
cmp
mov
mov
push
nop
and
int3
or
dec
loope
sbb
xchg
xor
lret
dec
ficoms
addr16
push
mov
fbstp
scas
xor
popf
decb
xchg
andl
push
addr16
mov
xor
mov
movl
inc
mov
push
cli
push
dec
les
sbb
or
sbb
xor
scas
cmp
cmp
xor
lret
in
mov
jo
dec
ss
loope
adc
inc
sub
es
sti
lods
in
fistpl
or
sbb
fildl
jp
dec
mov
pop
xor
icebp
dec
ds
pushf
scas
rcl
mov
cmc
cmp
mov
in
add
insb
stos
pshufw
mov
int
rorb
pop
sbbb
aas
sbb
std
jae
aas
cmpsl
ret
jmp
rol
mov
dec
std
dec
out
daa
insl
test
jbe
cmc
inc
or
pusha
mov
pusha
mov
sti
lret
cld
jae
outsb
push
push
loope
lcall
sub
xchg
int3
xchg
in
xor
inc
lcall
cld
adc
push
adc
roll
mov
cltd
push
mov
leave
add
xorb
es
mov
leave
mov
mov
sub
lea
nop
pop
mov
or
xchg
sarb
adc
divl
pusha
in
mov
xchg
test
fadd
add
sub
jnp
inc
ret
sbb
mov
movsl
push
dec
mov
sbb
ljmp
xchg
inc
dec
add
sbb
sbb
aaa
sub
and
loopne
arpl
mov
inc
stc
ret
jp
mov
sbb
mov
inc
pop
lods
or
lahf
mov
popa
add
jno,pn
mov
lods
mov
jle
sub
mov
outsl
movl
mov
jl
cmp
sub
fidivs
test
imul
ss
jp
std
xor
stos
les
bound
cmp
cmp
cmp
dec
xor
jmp
add
ljmp
in
rcll
lods
imul
jmp
lods
loope
filds
push
aad
mov
mov
les
fnstsw
push
ret
jbe
lcall
pop
aad
mov
sub
push
mov
pop
movsl
arpl
loopne
ds
sub
xchg
pop
cld
aaa
call
sbb
pop
pop
dec
mov
test
test
aad
sub
fldl
inc
dec
jge
cmp
test
jmp
shr
testb
add
out
lret
jge
cmp
lret
dec
sti
int
or
popa
hlt
leave
jbe
loope
lret
xchg
int
cmpsl
mov
jae
int
sbb
push
mov
sbb
lahf
sbbb
jns
icebp
in
lahf
inc
int
cmpsl
jp
sti
arpl
adc
jno
lret
rol
loope
pop
scas
sbb
aam
adc
inc
cmpsb
daa
mov
lahf
pop
mov
dec
das
sbb
mov
ficomps
movsb
adc
sbb
xlat
leavew
mov
inc
flds
adc
outsl
and
test
push
aad
cs
in
jge
cmpsb
sbb
jbe
push
ljmp
push
cmp
movsbl
add
adc
test
mov
push
mov
fdivs
inc
imul
mov
and
mov
mov
lret
xchg
inc
sbb
jo
adc
sbb
in
pusha
sbb
aad
xchg
rorl
pop
or
adc
fs
jns
xchg
shlb
andl
xchg
icebp
rcrb
out
sbb
cmc
jl
xchg
outsl
add
adc
adc
mov
jmp
test
lods
loop
add
in
pop
dec
push
jbe
ja
sarb
lods
sub
fidivrs
cmp
negl
xor
daa
fsts
jl
scas
test
pop
lods
xchg
idivl
mov
cs
add
call
jne
aam
mov
and
rcrl
cmpsb
push
daa
cmp
fcoms
stos
aam
cmp
pop
out
lahf
shrb
push
shll
cltd
jle
sbb
stos
pusha
push
mov
mov
dec
xchg
xor
sbb
xor
xorb
pop
dec
push
xchg
inc
push
ss
jmp
xlat
pop
int
and
test
push
push
lcall
or
xchg
dec
pop
sub
cmp
push
sbb
pop
fimuls
in
adc
in
add
mov
jg
sti
add
mov
inc
movsl
or
push
or
cmc
add
js
outsb
xchg
add
inc
sbb
data16
pop
dec
repnz
adc
jmp
or
fadds
fxch
mov
cld
inc
inc
dec
stos
and
mov
mov
push
in
sub
popa
enter
xor
loope
insl
add
jle
push
pop
pop
jns
xor
aaa
movsb
in
imul
xor
cltd
cs
mov
xorb
push
jo
mov
mov
xor
inc
stos
cld
push
mul
repnz
lods
out
movsb
mov
jp
or
push
mov
xor
sub
xchg
lods
shrb
test
adc
push
arpl
dec
dec
jne
cmp
sahf
push
lock
inc
cmp
xor
outsl
xchg
ds
sbb
pop
adc
pop
out
data16
call
or
repnz
add
movsl
ret
mov
or
push
bnd
pop
or
cmp
cli
xchg
lods
stos
cmc
push
std
cs
cmp
dec
nop
mov
mov
pop
test
dec
inc
push
and
subps
mov
add
cmp
clc
and
loope
pop
push
push
inc
shrb
mov
xor
mov
pmuludq
lret
lods
adc
add
outsb
xchg
test
lret
pop
and
popf
push
int
inc
inc
mov
jp
ret
xlat
movsb
push
adc
sub
mov
mov
cmpsl
outsl
je
push
imul
icebp
jno
cmp
xor
mov
xlat
jle
mov
test
jge
xor
sbb
pusha
mov
sub
cmp
aaa
fwait
mov
int3
incb
fsubl
movsl
jbe
mov
loop
lods
into
mov
mov
mov
mov
rcl
shl
xlat
or
jp
enter
lea
iret
in
bound
mov
stos
fadd
aad
rcrb
enter
push
inc
mov
into
out
call
int
insb
scas
mov
mov
dec
int
fst
out
mov
push
popa
js
and
cmp
es
pop
mov
aas
add
sbb
mov
adc
fs
lods
push
aaa
popa
ret
pop
imul
sub
inc
stos
shrl
pop
xchg
iret
fs
sbb
mov
jp
pop
loope
sbb
test
or
push
call
sbb
mov
xchg
push
lret
leave
add
lret
sub
push
fwait
sub
sub
or
ret
pop
testl
int
andb
jmp
add
ret
jb
add
jle
fidivrl
sub
sbb
sarb
ljmp
adc
ror
and
add
je
sub
and
jp
adcl
addb
xchg
mov
mov
push
mov
mov
lret
loop
or
data16
test
push
push
mov
repnz
inc
fldenv
sbb
negb
jmp
into
jno
loope
loope
js
test
mov
popa
je
add
add
inc
xchg
aam
out
lret
cmp
int
sub
mov
jecxz
addr16
bound
sbb
jbe
iret
jbe
ja,pn
inc
mov
loop
jge
add
push
pop
mov
inc
popa
shll
sub
nop
push
adcl
std
movsl
aaa
int
mov
mov
vphaddwq
in
test
sub
inc
mov
xchg
sbb
cmp
insb
jmp
out
lods
and
jl
movsl
mov
roll
xor
inc
mov
lods
add
fistl
cmp
test
add
int3
insb
mov
fisubl
mov
fcoms
pop
les
adc
or
push
cwtl
jno
mov
rclb
or
push
aam
loop
daa
jne
fcomip
dec
push
aad
dec
ret
js
pop
daa
jle
jnp
add
je
jmp
fisubrs
inc
repz
sbb
clc
mov
dec
daa
mov
mov
arpl
pop
add
push
jge
gs
sbb
adc
cmpsl
leave
sbb
dec
and
push
pop
clc
pop
push
pop
test
movsb
lds
mov
jle
cmp
xor
in
xor
xchg
adc
push
aam
je
inc
mov
mov
push
mov
cwtl
test
inc
cmpsl
andl
mov
push
mov
pop
sub
cmc
pop
xchg
sub
adc
mov
xchg
lods
xchg
and
xlat
cmpb
adc
or
mov
lret
fcmovne
pop
sbb
pop
addr16
add
test
mov
pop
ret
and
stos
and
mov
pop
inc
fnstenv
movsl
call
adc
xchg
cmp
imul
in
jmp
sahf
pop
or
ja
int3
sbb
sti
push
das
push
push
cli
jne
and
insb
cmp
cmp
fsubl
movsl
gs
xlat
sahf
in
jae
rcll
xorb
sti
call
out
movsb
out
and
cmp
js
fcom
and
and
arpl
rcrl
int
rol
jne
cmp
sub
jp
xor
addr16
push
aas
push
adc
cs
lret
in
clc
dec
add
nop
mov
inc
and
leave
repnz
das
pusha
sbb
loopne
adc
scas
sub
dec
pop
cwtl
xchg
jp
jnp
cvtdq2ps
lahf
jne
aas
xor
sub
sub
adc
xchg
add
hlt
mov
lds
cli
push
movsl
ss
adc
insb
in
testb
bound
xchg
pushf
icebp
push
out
xchg
test
adc
mov
daa
mov
jge
lock
sbb
mov
lret
xor
sbb
rcll
or
mov
adc
lock
dec
xchg
add
mov
lods
fcom
sub
add
psrlq
sbb
mov
sarb
xor
and
cmp
enter
mov
xchg
pop
loop
pop
or
xchg
mov
lods
mov
mov
jg
lret
ret
lea
lods
jno
adc
add
push
clc
pop
repz
dec
push
xchg
cmp
mov
mov
insl
std
pushf
mulb
adc
movsl
mov
enter
mov
sbb
adc
out
adc
or
imul
cmc
pop
aaa
add
das
stos
add
fldcw
pop
adc
xor
pop
pop
movsl
pop
andps
dec
jl
fcompl
rcll
cmp
pop
iret
pop
push
adc
shll
test
push
arpl
cmp
notb
arpl
loope
aas
pop
sub
jo
jge
sbb
aad
movsl
sbb
call
and
mov
adc
and
mov
sub
push
das
cmc
lods
popf
cld
sbb
mov
or
dec
inc
out
mov
scas
aad
decl
or
stos
loopne
or
inc
outsl
int3
jae
mov
jo
sub
or
es
lahf
mov
push
mov
sbb
sub
jnp
mov
inc
out
jo
cs
loope
xor
dec
mov
cmp
loopne
add
cmc
sbb
fwait
idivb
cmp
int
inc
aam
nop
lahf
sub
jne
ja
jno
mov
test
mov
cmp
repz
dec
loopne
add
add
adc
fisubs
outsb
idiv
addl
jl
out
cmp
push
loope
lahf
jns
xadd
aad
insb
testb
mov
cmp
popa
sub
ja
popa
in
or
xchg
pusha
fisubrl
push
lds
loopne
lcall
jge
sub
call
mov
decl
in
jecxz
xor
dec
jno
mov
aas
mov
scas
jg
jg
push
xor
sub
and
pop
es
mov
mov
mov
cmp
sbb
repnz
adc
xchg
mov
lret
jo
and
sbb
int
shrb
adc
xchg
rcr
aaa
adc
ja
outsl
fcoms
add
sti
jp
cmp
xlat
xchg
cs
inc
cmpsl
fisubrl
movsl
fistl
xlat
pop
pop
ljmp
xchg
jnp
sub
or
cmpsb
sub
into
adc
es
dec
jecxz
push
pop
cmp
xchg
and
xor
xorl
sub
xor
mov
decb
mov
push
or
ds
jl
cmp
adc
push
test
in
outsl
push
loope
dec
mov
jecxz
sub
jl
pop
hlt
shlb
pop
add
sbb
jmp
pop
sbb
lds
push
shlb
and
push
mov
jae
or
dec
nop
fisubl
adc
sub
xlat
or
out
out
mov
sar
mov
jbe
or
mov
add
jecxz
mov
dec
adc
je
mov
jb
rcll
mov
fwait
repz
into
fmuls
adc
repnz
xor
or
or
lock
sar
xchg
imul
jge
mov
in
cwtl
push
ds
jo
insb
add
imul
out
mov
jp
mov
call
jl
aam
movsl
ds
pop
rolb
repz
push
leave
in
inc
punpckhdq
fcmovbe
lock
adc
in
jne
addr16
call
cmpsl
out
inc
xchg
popa
mov
add
int
or
jbe
cmp
dec
pop
popf
dec
adc
push
lock
inc
xchg
dec
cltd
mov
mov
pop
sbb
cmp
roll
dec
cmp
je
inc
sbb
into
jno
jns
mov
repz
mov
push
fwait
pop
and
mov
mov
pop
jne
cmp
sbb
mov
in
xchg
jl
sub
aad
or
leave
dec
inc
stc
add
outsb
inc
loop
orl
jmp
jb
imul
out
adc
lret
leave
jne
and
xchg
cltd
call
sub
push
lods
dec
std
out
pop
rcll
mov
in
sub
int3
out
pop
idivl
lcall
xchg
sarb
push
pop
add
imul
mov
dec
ret
inc
mov
insl
adc
test
int
adcl
add
std
fdiv
jp
xor
ret
and
fadd
pop
shll
sbb
fisttps
dec
push
negl
or
loopne
ja
cmp
pusha
jae
das
adc
jmp
dec
sub
fs
loope
bound
orl
lret
movsb
jg
inc
mov
push
add
dec
inc
lds
cld
xchg
push
sarb
mull
xchg
sti
mulb
fmull
addr16
repnz
mov
cmp
cmc
fwait
xchg
stc
inc
inc
lea
xor
inc
cmpsl
ds
xor
mov
movntps
mov
sub
ja
into
ljmp
lods
jle
in
sub
jne
add
push
ret
add
mov
popa
lret
into
jle
jns
mov
iret
inc
fsubr
mov
mov
stc
adc
outsl
cltd
test
xor
stos
or
lcall
outsb
sub
lea
add
jne
lret
rolb
sbb
jbe
fucom
xor
or
std
dec
addr16
lock
jne
aaa
mov
sgdtl
nop
hlt
mov
jae
cmpsl
push
push
push
jl
sbb
ljmp
mov
sub
inc
testl
sub
adc
or
out
or
push
xchg
push
subb
mov
mov
flds
inc
repz
cmc
mov
daa
pop
aas
mov
adc
add
cmp
xchg
stos
push
pop
xorl
add
scas
cmp
outsl
mov
lret
sti
sahf
cmp
jo
push
dec
popa
lods
js
dec
sbb
or
ss
xchg
insl
mov
aad
js
inc
and
scas
sbb
sbb
xchg
xor
push
xchg
aam
mov
pop
xor
xchg
push
testl
xor
dec
in
and
and
sarl
outsl
inc
push
pop
or
fdiv
data16
fdivl
mov
shlb
sahf
add
mov
pop
or
clc
push
leave
stos
shr
sub
xchg
mov
jo
xchg
mov
clc
xchg
push
push
cs
loopne
imul
and
mov
pop
inc
pop
scas
test
cmp
lret
lcall
jnp
sbbb
or
or
cmp
rol
scas
in
and
jp
stc
scas
xchg
pop
pop
jnp
in
pop
mov
add
sbb
dec
outsb
mov
subl
jmp
cmp
and
pop
repz
sbb
jg
push
clc
filds
rol
fs
shlb
lock
lea
pusha
xlat
call
push
les
cmp
inc
xlat
xor
xchg
adc
test
inc
sub
sub
lahf
xchg
repnz
gs
dec
or
cmp
jne
mov
mov
arpl
cmpsb
cmp
xor
pop
push
cmpsb
pushf
mov
sahf
pop
orl
ja
jns
push
mov
or
jbe
add
cmp
lock
icebp
insb
test
sub
push
add
push
leave
daa
cwtl
inc
adcb
sub
out
popa
pusha
insb
pop
test
neg
sti
add
push
aas
imul
xchg
jle
adc
int
cmp
and
jmp
adc
repz
jne
ret
sub
inc
aad
rolb
mov
in
adc
push
fwait
mulb
lods
lods
std
dec
pop
mov
or
pop
ds
lds
aaa
lahf
fstpt
idivl
pop
fstpl
jb
fnstcw
xrelease
test
out
cwtl
int
xchg
sub
push
aas
loope
or
cld
pop
aas
outsb
adc
je
push
mov
xchg
arpl
jecxz
ret
add
out
stc
sub
fxtract
sbb
in
jbe
mov
jl
adc
sub
int3
pop
mov
adc
push
xchg
scas
push
mov
push
inc
das
mov
sbb
xor
addb
mov
pop
aam
or
rcrb
les
faddl
pop
dec
push
mov
mov
lret
mov
dec
fidivl
repz
aas
movsl
andb
adc
xchg
aas
filds
add
dec
test
outsl
inc
jno
js
sbb
or
ret
push
in
adc
mov
imul
scas
das
adcl
imul
inc
push
dec
push
lds
std
out
cmp
in
adc
sub
ja
icebp
push
ret
das
and
aad
jmp
cmp
add
cmp
sbbb
outsb
rcll
xchg
iret
adc
sbb
cvtpi2ps
stc
addl
adcl
jecxz
xchg
xchg
cmc
bound
lea
xorb
outsl
xchg
sub
xlat
and
mov
sub
aam
pop
add
cmpsl
push
fwait
popf
cmp
imul
loopne
pop
movsl
fdivl
xchg
sbb
mov
sub
push
fmull
cmp
jmp
mov
or
xchg
int3
movsl
xchg
mov
xor
cmp
dec
stos
popf
xlat
pop
pusha
pushf
and
scas
hlt
pop
jae
nop
mov
repz
xchg
pop
pop
ror
cmp
pop
mov
out
cmp
sub
bnd
movsl
pop
fs
orb
cs
stos
fiadds
out
xchg
xor
push
xchg
andb
mull
xor
popw
imul
into
ljmp
sub
out
add
out
or
dec
jne
popa
cmp
or
push
mov
mov
cmp
mov
xchg
push
in
sbbb
out
adc
movsl
dec
movsb
cmp
repz
and
stos
jnp
jmp
xor
cmc
std
js
xor
leave
test
fs
fldcw
loopne
jp
push
inc
das
in
mov
push
stc
sbb
icebp
cmp
mov
pop
pushf
aam
sub
int
jb
mov
popf
fisttpll
shrl
cltd
test
adc
jl
sbb
movsl
inc
nop
sub
ljmp
arpl
out
ficoms
jno
test
mov
inc
movsb
adc
or
nop
xor
jmp
push
cmpb
jnp
xchg
sbb
fwait
mov
nop
stc
mov
pop
mov
cmpsb
cmp
fisubl
push
mov
push
mov
js
push
mov
mov
movsb
ret
xor
cmp
es
arpl
repz
xchg
and
dec
or
xchg
mov
xchg
mov
cmp
inc
ss
aad
cltd
push
rorb
sti
jecxz
hlt
stos
inc
mov
cmp
addl
jbe
mov
jmp
cmp
in
xor
add
jae
lods
cmc
xor
cmp
ljmp
negl
hlt
lcall
faddl
orb
in
aas
jge
mov
imul
jmp
pop
movaps
js
rep
sbb
push
push
adc
mov
push
jae
dec
in
daa
ret
loopne
popf
jno
adc
outsl
cmpsl
outsl
nop
mov
fst
sub
push
or
cmpb
hlt
testl
xchg
sahf
nop
insb
xor
sbb
es
repnz
inc
or
ds
jp
sub
adc
movsl
ja
movsb
xor
sahf
sbb
add
jb
addr16
jecxz
flds
cmp
test
rcl
cmp
cmp
cltd
or
mul
movsb
frstor
mov
inc
push
iret
out
adc
popf
fstpt
leave
jg
faddl
into
ss
or
js
int3
and
sub
and
scas
mov
ficomps
inc
stc
jl
scas
imul
pop
test
data16
or
pop
loopne
jnp
mov
fnop
push
jecxz
fcoml
push
scas
pop
mov
data16
adc
cmpb
test
mov
dec
scas
and
shll
mov
pop
xlat
fwait
jnp
jae
sub
jns
cli
xchg
sub
mov
sub
stos
cmc
jle
js
lock
mov
push
xchg
sbb
mov
push
lock
mov
pusha
in
ljmp
pop
popa
jl
sub
fistps
and
sbb
cs
mov
imul
js
add
cli
pop
cwtl
das
inc
adc
lahf
pop
sub
mov
inc
push
jle
lcall
std
lret
and
and
jb
mov
aaa
mov
cli
or
pop
loop
xor
ja
adc
test
sub
inc
adc
lea
add
mov
loope
ret
outsb
mov
sub
jo
into
and
dec
lret
cmp
cmp
sub
cmpl
inc
ds
clc
cmp
inc
gs
call
mov
mov
cmp
pop
testb
out
icebp
push
out
lcall
mov
fnstsw
cmp
push
jae
push
mov
cmp
lock
cli
cmp
push
push
fdivrs
jae
insb
cli
data16
push
pop
inc
aam
and
test
nop
dec
stos
iret
push
sub
mov
mov
ja
jmp
outsb
in
pop
push
add
mov
in
cltd
xlat
sbb
enter
enter
inc
lea
push
sbb
lret
mov
jp
cltd
fdivs
inc
fcmovbe
cmc
adc
ljmp
inc
xchg
in
xor
pop
out
movl
outsb
ja
mov
insl
cmp
into
shr
iret
les
mov
lret
adc
loopne
mov
dec
cmp
fnstcw
pushl
add
pusha
loop
xchg
mov
mov
mov
into
fidivs
ret
int
jo
push
scas
cld
dec
xchg
fcoml
mov
mov
stos
sub
aaa
test
aam
dec
sub
sarl
stc
xchg
sub
sbb
jb
or
addr16
fstps
cltd
xchg
xchg
test
aaa
loope
and
adc
hlt
popf
mov
es
test
pop
lds
call
sbb
shll
aam
mov
in
ds
jb
imul
add
push
fcompl
adc
adc
aam
rorl
loope
imul
sar
xchg
lea
pop
push
push
jle
adc
pop
cld
cli
iret
dec
scas
int3
cwtl
repnz
cwtl
mov
sahf
pop
inc
lock
lds
in
push
in
jecxz
cmp
jne
cmpsl
test
test
fadd
roll
push
xor
sub
sub
or
fistpl
jl
dec
rclb
xor
fs
mov
and
aam
mov
stc
cmp
inc
and
mov
loope
xchg
or
repz
lods
sub
mov
out
mov
add
and
ds
xorl
lcall
lahf
test
xor
addb
pop
pop
or
jo
inc
sub
pushf
dec
out
add
loope
adc
cmpsb
adc
test
push
leave
dec
fs
lds
sbbl
xchg
std
xor
outsl
cmpsb
add
inc
sti
je
js
mov
xor
popa
fldcw
mov
xchg
ljmp
scas
inc
fildl
call
pop
loope
and
jg
je
rolb
mov
in
rcrl
mov
jbe
push
ret
mov
xor
inc
movsl
mov
ret
sub
test
add
ja
out
call
cmc
pop
jl
mov
jnp
inc
jmp
out
and
int
test
lods
mov
loopne
notb
inc
loope
mov
cmp
loopne
ret
je
loop
ss
andb
pop
cli
shr
mov
repnz
out
push
jo
in
pop
call
rolb
sbb
pop
dec
int
lret
mov
cmp
xchg
mov
and
out
mov
cmp
adc
loop
out
push
test
jne
jecxz
inc
mov
and
sub
insb
in
inc
mov
xor
and
sub
hlt
mov
cmp
inc
inc
stc
mov
or
inc
stos
mov
xlat
push
ficomps
rcrl
addl
sbb
adc
aad
enter
dec
pop
pop
pop
call
or
push
fdivrs
xchg
push
stos
loope
mov
stos
xorl
sbb
mov
pop
push
sub
in
jne
mov
add
imull
inc
rcrb
and
sahf
movsb
mov
or
pop
jae
xchg
imul
lock
aad
mov
cltd
rolb
out
mov
cmp
cmp
les
xchg
jge
inc
and
lcall
dec
xor
repz
mov
mov
pop
ja
sahf
outsb
xchg
cltd
xlat
push
mov
imul
sub
push
cs
rorb
inc
or
popf
xor
scas
mov
cmpsb
hlt
popa
xchg
test
loopne
add
push
pop
jns
dec
dec
and
jl
inc
call
pusha
in
jo
jle
popf
push
jae
mov
and
adc
push
sbb
pop
fs
pop
xchg
bound
mov
jae
inc
mov
sbb
pop
mov
lods
scas
fsubrp
xor
adc
mov
in
outsl
je
test
dec
push
addr16
jae
push
jmp
mov
jbe
je
dec
ret
stos
xchg
jmp
mov
dec
mov
movsl
xchg
lods
jo
out
lret
int
mov
dec
xchg
xchg
pop
inc
dec
enter
icebp
jmp
stos
xchg
out
adc
enter
push
outsl
mov
mov
dec
mov
aad
out
mov
push
add
in
sub
movsb
gs
mov
daa
and
sub
adc
adc
lret
outsb
jnp
dec
push
insl
add
imul
in
jge
xor
push
jmp
addr16
imul
mov
ds
sub
dec
lea
cmp
mov
lods
jmp
hlt
jp
jmp
or
out
xchg
lea
add
or
cmp
cmp
fildl
imul
cwtl
adc
enter
and
movsb
cs
mov
gs
imul
xchg
std
inc
jae
pop
data16
push
xchg
testl
sbb
push
jns
jb
iret
add
insb
cmp
push
in
cmp
nop
movsb
dec
mov
pop
insb
push
into
cmc
cmp
rcll
rcrl
mov
es
mov
fsubrl
jb
inc
xchg
pop
push
aas
addl
jae
mov
sub
mov
xchg
mov
jle
and
mov
xor
cmp
pop
aad
push
js
mov
add
and
dec
adc
jge
dec
and
lret
and
or
adc
xchg
movb
add
pushf
repnz
das
ror
push
shll
cmpsb
push
push
andl
stos
cmp
js
fists
lcall
popa
mov
jp
or
mov
cmp
add
rcll
cmp
mov
xchg
rcr
leave
sbbl
setne
push
sar
in
xor
mov
repz
xchg
jmp
xor
cmc
dec
or
xlat
fdivp
sub
inc
ljmp
cltd
mov
imul
outsb
in
push
adc
and
pop
xor
fstpt
cmc
int3
outsl
lods
mov
and
adc
sbb
aad
out
adc
lock
clc
loope
mov
xor
shll
xchg
mov
fsubrl
mov
or
push
mov
fisubrl
cld
pop
insl
mov
sti
and
jg
call
hlt
add
mov
call
rolb
adc
ficompl
xchg
mov
or
lret
dec
rorl
sbb
pop
cmpsl
pop
add
xchg
lods
inc
sub
sub
inc
or
loop
cmp
pop
inc
ret
xor
xor
xchg
jmp
jge
stos
sbb
sarb
inc
mov
lcall
pop
fwait
sahf
or
jae
shlb
aad
mov
fisubs
pop
pusha
pop
loope
mov
mov
pop
lret
insb
out
lret
jg
xor
jb
addb
rcrl
ss
and
stc
xchg
add
fisubs
ljmp
sti
jg
jnp
xchg
shrb
aam
fdivs
jne
das
pusha
mov
pop
cli
sahf
mov
dec
cltd
je
daa
ja
push
mov
daa
mov
mov
int
ljmp
mov
aad
int3
mov
cmc
xchg
aaa
mov
mov
inc
in
mov
push
ficoml
repz
lods
xor
outsl
pop
or
jo
repnz
jg
pop
sub
lahf
out
push
aad
test
mov
pop
dec
cs
mov
jnp
into
sub
lds
push
xchg
dec
mov
mov
out
insb
or
test
enter
push
leave
call
jnp
inc
cli
push
pushf
js
jg
push
xor
pop
insl
repnz
cmc
out
pop
pop
adc
dec
add
push
lret
sub
ds
xor
and
cwtl
jecxz
aam
cmp
sbb
mov
js
xchg
rcrb
pop
add
popf
mov
movsl
xor
mov
es
jno
or
mov
dec
push
mov
mov
in
addr16
mov
or
jnp
enter
push
das
sub
push
repz
jmp
cwtl
xchg
in
icebp
ja
dec
ds
mov
pop
cmp
jns
sub
ds
fs
and
aam
adc
lock
ss
pop
jns
push
daa
xchg
mov
mov
sub
xchg
cmp
inc
int3
mov
mov
mov
sub
push
mov
cmpsb
mov
loope
add
ret
jp
adc
add
and
fnstsw
or
jb
sbb
repnz
xlat
mov
pop
insl
cltd
jb
xchg
stos
mov
in
pusha
inc
stc
ret
not
out
inc
int3
sbb
dec
stos
jo
pop
arpl
cltd
insl
pop
gs
aad
scas
and
cld
fucomi
mov
and
sub
aaa
outsb
and
push
pop
les
xchg
repz
jp
inc
ljmp
test
push
negb
lods
cmpsb
jno
ljmp
ds
call
add
lret
mov
mov
lods
sbb
icebp
pop
popa
jbe
insb
add
inc
sbb
les
push
dec
lcall
addr16
decl
and
idiv
ficomps
cli
fsts
clc
mov
fsubs
xchg
inc
std
inc
dec
push
push
cmp
in
cmp
jbe
std
sub
push
sti
xchg
int
xchg
xchg
mov
andl
out
lods
cld
sub
cmp
inc
lds
pop
outsb
call
ljmp
or
sub
les
jl
int
pop
loope
int3
adc
inc
pushf
pop
ljmp
xor
popa
je
adc
pop
xchg
flds
or
push
jle
pop
adc
jae
outsb
jecxz
jbe
loopne
mov
xor
pop
insb
add
cmp
push
dec
cs
test
addl
inc
cwtl
push
jbe
dec
sub
xchg
cmp
jnp
arpl
or
and
xor
sti
add
fbld
sub
ds
xchg
push
adc
or
adc
dec
test
xor
adc
add
leave
pop
mov
data16
pop
mov
stos
jns
xchg
in
cld
fstl
movsb
pop
stos
je
add
adc
sbb
jge
and
xchg
jl
mov
or
pusha
mov
ret
mov
push
and
inc
and
popf
lcall
push
mov
mov
adc
adc
outsl
push
fbld
dec
jno
push
and
jle
jg
fsubs
adc
sahf
inc
jb
cmpsl
icebp
scas
out
or
lcall
mov
adc
jnp
outsl
daa
shll
mov
out
adc
cld
lcall
imul
out
xchg
leave
sub
ret
aas
int
push
xchg
lds
fiaddl
push
mov
inc
adc
es
sbb
pop
cmc
movsl
clc
sub
cmpsl
imull
lahf
aad
inc
xchg
out
dec
mov
cmc
dec
dec
sbbb
mov
aam
dec
into
push
adc
and
mov
cmpb
popa
ds
adc
and
inc
std
inc
add
and
outsl
aam
mov
daa
push
lods
or
xchg
sub
loop
in
pop
jp
out
clc
jae
and
test
cwtl
scas
mov
cmpb
xchg
scas
rcrb
cwtl
pop
icebp
sub
aaa
or
jb
int
lods
js
addr16
fidivrs
test
fisttpl
clc
fsts
jbe
stos
stos
lcall
fdivrl
xchg
push
shll
icebp
sbbl
adc
push
ret
xor
mov
add
cmc
inc
sub
sbb
xchg
cmpsl
sbb
push
in
push
ja
inc
cmp
out
push
and
leave
inc
sub
mov
mov
dec
jo,pt
inc
or
jecxz
lret
pop
mov
jns
int
imull
pop
or
sbb
mov
out
mov
jnp
les
xchg
pop
inc
loop
jnp
dec
dec
jb
mov
popf
jb
lds
adc
jle
gs
scas
inc
leave
inc
jo
xor
cltd
inc
repnz
leave
in
sti
sarl
mov
loope
and
in
frstor
add
in
lea
jno
or
push
movsl
dec
pop
mov
and
js
jge
daa
imul
ret
jbe
push
cmp
js
mov
cmp
lahf
fdivp
movsb
sub
ret
in
or
ds
gs
test
push
aaa
ret
jnp
mov
mov
pop
xorl
push
ss
cmp
pop
pop
or
mov
mov
ret
push
mov
push
cmpsl
int
jmp
pop
mov
add
mov
sbb
or
pop
xchg
in
sub
adc
inc
sbb
nop
arpl
lods
xchg
movsb
into
inc
pop
repz
mov
jne
xor
adc
cmpsl
push
sbbl
jbe
imul
adc
xchg
inc
call
push
mov
nop
icebp
or
and
push
clc
cmp
mov
push
mov
ret
lcall
inc
ljmp
add
pop
inc
lret
xorl
xchg
mov
pop
cmp
xor
mov
sub
add
push
scas
nop
mov
jge
xchg
push
push
insb
call
pop
fisubrl
lret
sub
mov
dec
xor
dec
sti
lret
dec
cwtl
xchg
inc
mov
mov
dec
mov
mov
add
lods
stos
popf
stos
push
aaa
adcb
mov
cmp
sub
nop
inc
mov
out
and
jecxz
jecxz
ljmp
xchg
mov
xchg
loopne
cmpsl
out
fnsave
pop
insl
daa
out
cld
push
add
insb
aas
div
inc
aas
dec
mov
cmc
sbb
xchg
lds
ja
mov
pop
mov
ljmp
dec
fnstenv
iret
cld
xchg
cmp
or
mov
cmp
mov
xor
xchg
lea
add
cli
and
test
or
f2xm1
orb
in
orl
out
inc
orl
add
mov
adc
scas
push
jl
loop
mov
out
ds
add
rorl
inc
insl
xor
arpl
sbb
add
out
cmp
xchg
xchg
sbb
jle
pop
sub
mov
mov
xlat
jg
movsb
push
mov
push
stos
cmp
sbb
decb
mov
in
into
mov
mov
cmp
push
mov
int
and
mov
xlat
add
scas
les
add
test
leave
outsb
cmc
and
inc
es
test
jb
mov
mov
cwtl
xor
dec
popa
insl
push
cmp
orl
nop
jecxz
outsl
mov
add
push
call
fs
push
popa
and
inc
add
in
call
cmp
fcomp
mov
jno
mov
xchg
lahf
ret
and
arpl
gs
int
lods
inc
add
std
mov
daa
andb
mov
int3
mov
leave
dec
imul
push
pushf
add
and
jecxz
xor
imul
cltd
pop
pop
testl
lahf
add
pop
addr16
and
arpl
mov
cmpsb
xchg
sbb
mov
adc
and
mov
je
cwtl
mov
test
outsl
and
cli
sub
jg
imul
cltd
xchg
add
insl
push
sub
into
ret
push
fimuls
sub
test
rol
add
mov
ret
cmpsl
lea
pushf
adc
cld
pop
push
sbb
pop
lahf
divb
pop
push
pop
mov
push
leave
xchg
loop
push
mov
lock
cmpb
repz
xchg
lret
out
decl
jbe
bound
adc
mov
outsl
mov
inc
xor
jnp
dec
and
aas
mov
mov
and
sbb
pop
adcb
movsl
mov
int
addb
jge
cpuid
pushf
cld
push
clc
sar
lret
cmp
pop
mov
inc
repz
ds
xor
and
xchg
xchg
es
scas
fmulp
xor
push
rclb
ds
dec
jns
pop
add
sub
iret
lea
or
xlat
mov
scas
xorb
sub
fucomip
sbb
pusha
pop
mov
xchg
loopne
les
xorl
jo
push
add
mul
jp
in
xchg
xchg
mov
popf
mov
adc
mov
les
leave
and
jne
int3
mov
mov
add
push
adc
add
jg
push
adc
pop
push
mov
add
insl
test
test
data16
mov
pop
pushf
fldt
fcomps
data16
jo
inc
sbb
lcall
jecxz
jo
cmp
sahf
dec
gs
addr16
add
es
rcl
sub
xchg
jmp
and
mov
pop
cmpsl
sbb
arpl
test
lret
add
cmp
movsl
imul
insl
outsb
inc
ret
jp
jo
push
xor
fstps
add
mov
adc
mov
movsl
int3
bound
push
sub
or
jnp
pop
shll
ds
cmp
jo
jecxz
push
pop
push
and
mov
test
movsb
push
out
mov
jge
into
out
ss
dec
fists
push
call
sti
cs
arpl
rcr
pop
dec
pcmpeqw
rclb
js
jae
mov
add
imul
fbstp
and
pop
add
mov
xlat
lods
mov
pop
sbb
cmovs
adc
arpl
xchg
and
jne
ret
fisubrl
std
and
xchg
inc
inc
pop
pop
mov
mov
pop
mov
hlt
or
jmp
out
jle
add
rcrl
and
jp
loope
and
or
rol
adc
test
mov
pop
or
pop
out
loope
xor
adc
pop
and
mov
ret
pop
sahf
pop
enter
jo
lods
lods
sbb
adc
and
arpl
ss
outsl
mov
jle
daa
xchg
sbb
xor
sarl
pop
push
cltd
push
ljmp
push
frstor
das
jecxz
imul
sbb
cmc
fists
test
pop
mov
loope
popf
mov
cli
popa
dec
adc
pop
jp
xor
andnps
repnz
sbb
dec
jge
mov
call
jle
or
dec
ss
lods
dec
movsb
mov
jp
pop
shl
xchg
scas
or
mov
sahf
adc
mov
mov
dec
mov
xchg
and
xor
movsb
sti
mov
mov
add
ficoml
std
jle
pop
ret
or
xchg
jle
inc
jle
cmp
mov
outsl
movsb
jl
adc
mov
icebp
dec
mov
or
je
into
fldt
xchg
jl
jle
repz
xor
push
add
movnti
xor
test
mov
mov
ja
add
fcoms
xchg
xchg
lds
rorb
pop
xchg
mov
add
nop
xor
push
gs
in
jbe
jp
dec
cmp
cs
mov
mov
push
sti
aam
sahf
cmc
or
xlat
dec
enter
adc
push
scas
hlt
dec
jge
fdivr
sub
aas
nop
push
push
xor
xlat
dec
fwait
leave
jb
pop
jge
sbb
shrl
leave
icebp
cs
shr
out
mov
aas
nopl
imul
aam
icebp
sub
mov
xchg
or
cmp
cmp
icebp
outsb
in
cli
adc
push
hlt
mov
mov
cmc
jb
dec
mov
pop
push
sahf
mov
pushf
mov
imul
mov
sarl
mov
ja
cmp
and
cmp
adc
inc
mov
cltd
lret
add
lods
add
xchg
push
aaa
jl
in
mov
fildl
imull
stc
cmp
std
imul
push
mov
fstps
sbb
movsl
dec
mov
xor
mov
cmpsl
repnz
in
and
sub
pusha
in
push
in
gs
stc
stos
cltd
mov
aam
dec
out
shrl
ds
and
pop
repz
sbb
and
lds
mov
add
insb
std
sbb
lods
push
mov
adc
rcl
xchg
push
dec
push
adc
bound
nop
cs
les
sbb
mov
inc
repnz
jnp
inc
insl
fildll
and
jns
fidivl
add
into
dec
dec
and
pop
dec
mov
clc
jno
mov
scas
mov
loopne
enter
and
jmp
dec
mov
hlt
call
mov
push
sub
pop
in
xor
inc
repz
push
sbb
insl
mov
dec
push
add
das
or
add
mull
mov
pop
and
jge
cmp
dec
dec
lcall
scas
pusha
inc
jecxz
mov
or
jecxz
and
and
inc
xor
xchg
rcll
mov
and
dec
mov
loop
push
js
js
dec
adc
inc
into
js
and
int
es
fwait
lret
pop
and
jno
aam
mov
icebp
sub
mov
and
mov
jle
scas
sbb
lods
jb
jo
mov
sahf
or
cmp
int3
aas
out
insl
stos
mov
cmp
fwait
aad
mov
out
mov
insb
fadds
xor
in
aad
xor
xor
test
inc
sub
je
jge
cmpsl
das
inc
dec
xor
adc
aaa
add
aaa
pushf
pop
pop
mov
lcall
pop
in
push
pop
arpl
ds
sahf
ret
repnz
mov
lods
enter
aad
adc
adc
popa
ljmp
xor
adc
pop
push
lahf
inc
dec
sbb
int
data16
cli
adc
push
and
cmpl
fidivrl
mov
sbb
pop
pop
cmp
jo
leave
daa
outsl
jge
jecxz
shll
pop
push
add
or
mov
sub
mov
decb
or
and
inc
push
les
mov
addr16
stos
mov
mov
test
in
and
inc
aaa
pop
in
cmp
idivb
mov
movsl
scas
lods
push
adc
pop
jne
fnsetpm(287
in
clc
adc
inc
fwait
inc
loope
mov
push
xor
arpl
push
test
xchg
sub
scas
fidivs
adc
mov
mov
jb
movsb
push
sarb
cltd
int
xor
bound
pop
lret
roll
bswap
xchg
fs
mov
dec
jbe
or
and
stc
shll
jg
movsl
sub
cli
movsb
xchg
popa
in
sti
or
imul
jo
filds
push
mov
scas
pop
cmp
dec
stc
cmp
sbb
sub
dec
add
add
mov
add
stos
into
adc
bound
and
loop
mov
lds
inc
int
xlat
rclb
dec
sti
xchg
pop
cld
fcompl
scas
repnz
mov
movsb
push
sbb
xchg
or
mov
xlat
cmpsl
sbb
mov
icebp
daa
pop
mov
sub
xchg
xchg
sarb
push
jmp
das
dec
push
cmp
test
xchg
scas
in
pop
mov
jnp
or
pop
out
or
test
xchg
jle
les
fdivp
cmp
push
inc
movsb
xlat
xchg
pop
or
sbb
add
push
cli
lock
pusha
push
jmp
cmp
hlt
mov
jmp
call
pop
mov
lods
or
sub
pop
orb
repz
mov
jl
inc
or
mov
jns
pushf
and
arpl
adcb
in
sub
adc
in
aas
push
jl
lret
push
imul
sbb
add
or
vpaddd
ror
inc
lret
ja
out
jbe
out
sbb
pop
inc
data16
cmp
cmp
or
add
xor
imul
rcrb
testl
orl
andb
clc
fisttpl
ret
mov
fdiv
adc
mov
mov
mov
lods
xchg
mov
mov
lahf
pop
popa
out
pop
test
mov
in
dec
in
sub
lcall
dec
and
push
cmp
cmp
daa
stos
bound
or
mov
aad
mov
and
cld
xchg
aad
pop
mov
xchg
push
push
xchg
test
xor
inc
out
cmp
mov
call
inc
rcll
push
adc
mov
pushf
scas
cmc
fcomip
push
negl
outsl
pop
test
addl
out
aam
pop
pop
aas
pop
pushl
xchg
mov
in
xor
mov
outsw
cmp
popf
rcll
sbbl
lret
hlt
rolb
lcall
es
scas
int3
and
loopne
mov
mov
mov
adcb
cltd
push
xlat
rorb
add
test
xlat
xor
push
lea
out
testb
pop
fwait
mov
fwait
mov
adc
xchg
xchg
mov
loopne
roll
adc
xchg
dec
fisubrs
adc
push
jmp
and
icebp
int
mov
jle
inc
jge
jle
adc
inc
orl
or
inc
pop
in
pop
movsb
lea
push
divb
mov
push
jno
ss
std
adc
fidivl
push
fsubrl
jae
xor
push
dec
cmp
sub
rclb
push
cs
mov
nop
cmpsb
fidivrs
lahf
xchg
mov
adc
dec
xor
mov
lock
icebp
jo
add
xchg
cltd
mov
xchg
scas
into
loop
rclb
fnsave
dec
xor
sub
cmpsl
mov
leave
push
iret
leave
jae
insb
inc
jp
mov
aas
adc
fbld
cmp
clc
sbb
cwtl
xchg
aad
into
cmpsl
mov
inc
push
int
popf
jb
xchg
ds
mov
sub
pop
mov
ret
pop
in
popf
mov
repz
push
clc
dec
lds
cli
sti
jo
rorb
out
sbb
fldt
sbb
aad
lods
pop
mov
jbe
out
addr16
push
cmpsb
es
imul
xor
xchg
shlb
pop
lds
popf
test
stos
jmp
adc
jnp
jmp
pop
push
sbb
xor
jmp
sub
mov
mov
addb
mov
push
out
lods
fs
sbb
std
pushf
sub
mov
jns
aaa
popf
outsl
cmp
mov
lahf
cmpsl
add
mov
mov
inc
mov
loope
xlat
mul
inc
dec
pusha
cmpsl
adc
or
xor
out
xchg
in
enter
cmp
orb
ret
or
sub
rcrl
fisttpl
sub
jle
push
in
clc
inc
sub
cmp
arpl
jp
jecxz
test
jb
inc
sbb
cld
ss
icebp
cltd
repz
into
outsl
data16
ds
xchg
fmull
loop
pop
cmp
lods
lea
imulb
push
or
stc
and
mov
adc
aas
or
jb
jb
sbb
test
push
inc
movsb
adc
add
insl
mov
inc
dec
push
es
dec
sahf
jb
stos
dec
and
jbe
into
cmpsl
stc
xor
cmc
dec
cmp
mov
push
scas
cli
push
dec
cmp
add
sub
scas
ja
push
shl
or
xor
cmp
subl
cmpsl
inc
imul
sbb
mov
mov
add
aas
outsb
add
jge
pop
hlt
lock
push
cli
call
adc
push
xor
dec
cmpsb
jge
lret
add
cmp
mov
xchg
dec
mov
or
xchg
adc
dec
mov
test
pop
imul
iretw
push
or
fadds
mov
mov
call
mov
sub
ss
fnstenv
sub
pop
mov
xor
push
push
xchg
sar
adc
push
pusha
mov
loop
popf
adc
mov
adc
rolb
pusha
enter
add
xchg
lahf
out
mov
out
dec
iret
mov
xchg
lock
imul
sbb
mov
mov
lcall
pop
outsb
jge
repnz
out
int3
aam
dec
aad
lea
in
lea
sarb
dec
add
push
fisttps
sbb
adc
push
cmc
jo
ficomps
jmp
add
daa
aaa
mov
fwait
sbb
or
pop
ja
jge
int3
push
pop
bnd
inc
lods
loop
and
test
sbb
jo
dec
jnp
loopne
fsubl
xchg
ficomps
in
mov
out
es
int3
sbb
inc
into
add
add
pop
mov
sbb
int
into
sbb
movsl
cmp
test
pusha
sarl
popw
and
daa
inc
insl
add
and
dec
lret
ret
mov
sub
adc
push
xchg
sbb
dec
xchg
sbb
lahf
jmp
leave
jmp
ret
push
jmp
imulb
std
pop
lods
jp
inc
jne
add
mov
xor
xchg
push
fcmovnb
push
mov
xchg
dec
add
jg
mov
test
shl
push
xor
dec
inc
jg
popa
addr16
jl
inc
push
pop
cld
cmpsl
and
adc
lea
jmp
fisttpll
fbld
pop
cmp
push
cmp
hlt
or
ret
or
rol
dec
popf
and
insb
cwtl
xchg
or
popf
sub
jb
mov
imul
mov
sbb
call
xchg
jecxz
loope
push
ljmp
repnz
lods
add
in
in
push
push
xlat
sbb
clc
mov
xorl
cwtl
add
sbbb
sti
aad
insl
lahf
in
inc
sbb
mov
mov
popa
stos
jl
and
lret
shl
sahf
out
ljmp
xchg
ja
sub
adc
jg
popa
cmc
cmp
inc
push
mov
orb
cmpsb
into
lods
add
fisubl
inc
pushf
inc
dec
shl
jns
std
cld
inc
and
in
jmp
jmp
inc
add
stc
xchg
iret
out
inc
xchg
dec
push
ds
sahf
pushf
fists
push
fwait
sub
inc
lock
clc
mov
adc
sub
stos
jl
push
ljmp
nopl
gs
pop
push
jmp
xchg
mov
ss
les
insl
or
mov
add
add
jbe
mov
mov
pop
int
aad
dec
cmp
and
int
mov
or
push
loopne
push
cmp
mov
inc
xchg
sbb
dec
lea
jmp
mov
addr16
pop
dec
call
add
lods
push
call
mov
or
xchg
sub
pop
ret
lret
inc
js
jbe
cmp
dec
sbb
cmp
pop
cwtd
enter
leave
fsubs
and
mov
mov
jne
sbb
adc
jb
mov
sub
imul
js
mov
arpl
aad
test
inc
punpckhdq
xchg
jnp
lds
js
shll
stc
mov
push
jbe
and
add
add
aam
fdivr
movsb
mov
cld
pusha
xchg
ficoml
xchg
pop
adc
xorb
mov
roll
test
jns
cmp
insb
dec
popf
add
push
jp
xor
and
adc
int3
pop
inc
pop
pop
fadds
push
pusha
xor
mov
jge
fld
add
adc
mov
lds
cmp
sub
scas
mov
outsl
add
lock
jge
fwait
or
add
push
out
and
jl
rclb
fcompl
icebp
inc
cltd
sbbb
int3
jno
cli
in
inc
ja
push
mov
inc
je
xor
mov
jmp
dec
rcrb
lcall
dec
inc
adc
sub
jmp
and
dec
fs
cmp
in
sbb
fwait
sub
dec
aad
adc
or
nop
ror
sub
or
test
sbb
imul
stos
adc
inc
push
popf
shll
mov
lret
leave
sub
jecxz
adc
std
fiadds
jecxz
lods
test
cmp
push
push
cmp
jbe
jge
xadd
in
into
rclb
shr
icebp
push
ljmp
cmc
cwtl
xchg
stos
pop
shll
imul
mov
imul
aam
push
or
test
scas
mov
push
out
sbb
lcall
fwait
std
mov
int
xchg
pushf
adc
pop
push
sti
dec
dec
sub
arpl
andb
push
xchg
fwait
stos
out
adc
pop
ljmp
je
repz
outsl
lahf
cmc
out
dec
lods
adc
pop
xorb
cmp
je
sbb
sub
int
cwtl
test
cmp
outsb
enter
mov
pop
hlt
adc
dec
mov
dec
mov
jae
cmp
fisttpll
push
mov
cwtl
testb
test
outsl
stos
andl
fistpl
and
mov
mov
aaa
loope
pop
jg
lahf
lds
dec
outsb
xor
out
cli
int
popf
subb
adc
mov
mov
dec
push
pop
jb
push
mov
call
shld
adc
xlat
add
in
rorl
push
aas
pop
out
adc
jb
mov
pop
clc
leave
pop
mov
and
cld
mov
xor
adc
hlt
movb
ret
or
and
in
js
into
icebp
lods
cmp
pop
inc
subl
dec
jno
out
and
jecxz
cmp
nop
stos
aad
fxch
push
loope
ljmp
mov
or
mov
lock
jle
pop
adc
push
inc
pop
dec
dec
pushf
adc
testb
pop
sbb
push
addr16
push
xor
pusha
addr16
mov
push
pop
mov
jge
mov
pop
cmp
ret
iret
push
std
je
mov
mov
sbb
mov
and
jg
fsubrs
mov
pop
and
jecxz
dec
add
push
pop
test
jo
xor
movl
into
sbb
ret
test
outsb
arpl
sti
shlb
cmp
adc
inc
rolb
dec
sub
add
rorb
mov
dec
sub
add
and
pop
inc
jne
dec
cmp
cltd
fildll
jns
in
insb
push
pop
inc
pop
test
sub
jbe
push
jb
and
add
imul
jbe
pop
lods
adc
es
and
xor
lret
adc
jmp
lahf
fwait
sarb
addr16
push
sti
imul
xchg
push
jmp
dec
pop
test
pop
out
in
inc
sub
xchg
jne
adc
inc
jb
popl
mov
or
or
cmp
loopne
fimuls
xchg
out
cmpsb
sbb
mov
and
aas
ljmp
pop
test
mov
out
pusha
test
mov
cmpsl
xchg
out
add
aad
cmp
xor
imul
in
or
xchg
and
sahf
loop
inc
fbstp
pop
xchg
arpl
mov
xchg
lods
push
cmp
push
cmc
iret
mov
cmp
pop
mov
incb
popf
xchg
cmp
push
add
cmp
mov
leave
push
add
inc
incl
test
jb
jecxz
aad
mov
testl
push
lret
movsb
imul
xchg
out
sub
scas
cmp
jmp
xchg
cmpb
mov
cmp
and
fwait
mov
jbe
out
sub
mov
aam
inc
addr16
pop
out
xchg
cmp
imul
mov
push
out
jo
ret
fstps
jg
cmc
sahf
inc
icebp
add
dec
xor
mov
adc
xor
jp
inc
add
xor
int3
notl
add
add
xchg
push
daa
daa
fisttpl
mov
data16
mov
dec
fimuls
mov
imul
test
jno
sahf
adc
pushf
sahf
cmpsl
cmp
xchg
fidivl
xchg
sub
jp
scas
push
cld
dec
xor
sub
mov
aaa
inc
pop
jecxz
jae
das
mov
mov
jo
and
test
and
dec
adc
outsb
js
ss
and
and
cwtl
daa
outsl
gs
sbb
or
inc
out
mov
aad
jmp
outsl
js
dec
mov
lods
dec
mov
jne
inc
insb
mov
jo
scas
test
in
scas
sub
repnz
jge
adc
inc
ljmp
iret
xchg
out
lret
ds
jge
in
js
clc
jnp
adc
fwait
mov
imulb
mov
fiadds
insb
int3
mov
cli
leave
fnstenv
mov
ret
int
adc
insl
mov
xor
mov
inc
pop
inc
imull
lahf
packsswb
in
push
sub
repnz
fucom
and
mov
sub
sbb
cs
pushf
mov
cmpsb
mov
scas
aas
jge
cmc
aam
dec
pusha
aas
add
inc
fstp
hlt
divl
xor
gs
mov
mov
dec
dec
mov
inc
mov
pop
mov
sub
test
shrb
nop
sub
lret
xchg
aad
xchg
lahf
push
and
dec
jl
fwait
add
sahf
in
arpl
mov
sub
dec
outsl
lods
repz
push
fidivrl
lods
or
je
xor
xlat
mul
jae
push
sub
icebp
int
jne
adc
mov
popf
mov
mov
imul
notb
inc
or
fcmovu
aam
jnp
insl
mov
clc
repnz
and
mov
or
or
not
loopne
cmp
add
sahf
sub
je
pop
dec
push
leave
imul
aad
pop
cld
jl
mov
pop
and
dec
daa
dec
xchg
dec
xor
enter
mov
aam
adc
inc
adc
mov
push
cs
push
cmp
nop
jmp
mov
push
push
xchg
out
movsb
aad
fwait
int3
and
or
jb
mov
inc
insb
jg
nop
adc
sbb
out
sbb
sti
shlb
loope
jl
dec
ret
data16
inc
inc
ret
add
sub
mov
sub
pop
inc
popf
pushf
mov
inc
imul
ret
sbb
lret
rcrl
inc
in
outsl
das
arpl
stos
fiaddl
or
jg
dec
push
pop
cmp
std
stc
dec
cmp
sbb
ds
clc
add
cmp
xor
int3
adc
daa
adc
es
cli
lock
inc
ljmp
movsl
inc
xlat
les
and
cli
divl
adc
out
lea
outsl
lea
push
test
in
mov
and
cmp
iret
adc
inc
cld
roll
xor
add
jnp
sbbl
adc
mov
or
punpcklbw
jbe
xor
vphadduwd
sbb
mov
xchg
push
roll
jp
inc
sub
add
out
ret
inc
cltd
imul
jge
sub
push
sbb
jno
scas
and
adc
movsb
lret
dec
xchg
daa
out
xchg
gs
jnp
das
aam
xchg
inc
sub
push
dec
mov
cwtl
mov
int
mov
test
mov
jecxz
addl
hlt
or
shll
mov
divl
imul
or
mov
xor
sahf
jge
dec
sub
mov
or
fs
je
mov
repz
mov
das
imul
xorb
in
loope
in
xchg
cmp
stos
and
add
arpl
jae
sbb
mov
lret
shrl
loope
mov
cld
sarb
sbb
mov
dec
and
push
test
outsb
loop
loopne
xchg
sti
sub
and
dec
jge
out
pop
cmp
ljmp
cmp
loop
mov
icebp
adc
mov
cmp
rcr
pop
mov
cmp
push
push
xor
mov
xchg
push
fucomp
lds
mov
push
push
cmp
xchg
leave
fisubl
inc
dec
andb
sbb
lahf
mov
daa
fidivrs
cmp
data16
cmp
imul
fisttpll
int
xor
and
jecxz
int3
dec
cld
adc
mov
incl
std
and
enter
xlat
bound
lahf
jnp
pop
push
in
fdiv
into
inc
das
pop
and
push
movsl
xchg
aaa
sub
std
imul
xchg
jmp
mov
xchg
xor
mov
loope
inc
imul
mov
xchg
mov
lret
iret
jns
xlat
sub
xor
in
jge
js
mov
pop
cwtl
test
andb
jbe
or
movsb
lods
and
and
cmp
and
ds
adc
adc
in
cwtl
scas
cmp
out
setp
ljmp
xchg
adc
dec
ror
imul
insl
out
mov
xchg
sub
and
es
mov
sbb
out
lahf
jae
sbb
cmp
sbbl
rcrb
aad
jmp
sti
or
dec
dec
stos
std
cmpb
adc
add
adc
out
and
scas
or
inc
pop
cltd
stos
inc
iret
adc
sbb
mov
pop
gs
cwtl
mov
imul
jp
dec
fsubrl
sbbb
ja
jno
mov
in
pop
lods
ret
pop
push
daa
cld
imul
and
xchg
stos
outsl
xchg
cmp
lret
pop
inc
pop
dec
addr16
orb
xchg
lret
push
xlat
div
fdivrl
add
jp
shl
aaa
mov
sbb
sbb
sti
and
mov
push
mov
or
mov
mov
jno
xadd
fnstsw
lods
imul
mov
jg
xor
push
cmpsl
jge
push
adc
cmp
sar
fsubrl
sbb
jb
jecxz
sub
aad
mov
pop
pop
test
lea
add
in
cmp
and
aad
fldenv
xchg
or
lea
mov
addr16
jns
daa
pop
mov
push
sbb
mov
xchg
movsb
ljmp
mov
xchg
stc
pop
int
mov
decb
jns
pop
hlt
shll
repnz
stos
mov
mov
cwtl
adc
sbb
cs
dec
loop
or
loope
mov
gs
scas
push
hlt
insb
sbb
out
or
push
icebp
mov
dec
sub
fnstsw
push
adc
pop
sub
mov
out
add
sahf
adc
scas
xchg
push
fimuls
filds
popf
stos
sbb
or
nop
sub
and
lods
or
dec
loopne
out
out
and
das
cmp
aam
ret
mov
cmp
repnz
pop
or
jle
xchg
sahf
scas
aas
repnz
jp
cli
ljmp
push
jge
inc
loop
or
push
mov
lret
inc
push
inc
test
xlat
divb
ds
out
push
mov
insl
imul
or
ret
push
rorb
popf
jb
add
xchg
std
fiadds
insb
push
xor
js
mov
pop
jle
lret
fwait
inc
xchg
mulb
insb
fistpll
mov
xor
jmp
adc
pushf
cmp
pop
jl
xchg
inc
scas
inc
imul
test
pop
lcall
lret
xorl
push
stos
pop
movsl
cwtl
out
ljmp
lods
test
out
loop
scas
sub
or
leave
add
lret
jecxz
in
pop
pushf
pusha
xchg
insb
mov
cs
xor
jmp
pop
push
leave
xor
in
dec
cmp
adc
sub
dec
xor
add
xchg
push
adc
out
std
mov
push
xor
cmpsb
pop
push
insl
jb
add
mov
sbb
inc
mov
mov
pop
lcall
add
out
sub
xor
adc
adc
push
cmp
xor
imul
mov
lods
dec
pushf
jae
mov
lds
pop
ds
repnz
repz
push
cli
data16
shll
xor
mov
inc
in
imul
jecxz
push
mov
int3
push
rcrb
push
or
sbb
mov
xchg
push
cmp
mov
jle
cmc
mov
dec
pop
mov
fisttpl
ljmp
pop
jg
ja
cmc
pop
push
cwtl
dec
mov
mov
sub
stos
cmp
mov
jbe
popf
mov
nop
lds
mov
cmpsl
fdivs
insb
xor
inc
adc
shl
inc
and
dec
bound
mov
sub
add
aam
push
test
sub
pusha
adc
cmpsb
out
sbb
or
dec
xchg
adc
lahf
sbbb
repnz
out
cmpsb
out
cmp
push
inc
rorl
push
push
es
jle
mov
dec
bound
mov
xchg
jno
arpl
loope
and
pusha
adc
inc
test
stc
call
cmp
popf
sti
pushw
pop
dec
push
rclb
outsb
xchg
add
call
enter
fistps
clc
mov
ljmp
loop
mov
push
mov
jbe
out
jecxz
loopne
xchg
je
dec
scas
int
scas
dec
es
mov
jge
jb
pop
gs
push
jno
lcall
cmpsb
out
lds
stc
xor
je
call
cltd
clc
xor
popa
sub
sbb
mov
jecxz
adc
mov
mov
andl
cmpl
inc
cmp
pop
cmp
adc
pop
icebp
dec
add
arpl
jle
aad
sub
std
stos
cmc
aad
adc
cmp
push
adc
pop
int3
cmp
mov
cmp
aam
inc
data16
cmp
xorb
pop
stc
mov
jle
mov
jno
sbb
adc
jae
dec
cmpsb
push
mov
test
fcoms
or
ret
cmc
xchg
fwait
das
push
pop
add
cmp
xchg
lret
add
iret
fs
sub
mov
jae
push
and
adcl
push
push
leave
pop
stos
jg
bound
pop
filds
push
pop
xor
pushf
leave
cwtl
dec
stos
or
clc
xchg
sbb
imul
insb
movsb
lcall
jmp
pop
bound
scas
xchg
frstor
xchg
xor
shl
jl
dec
andl
mov
ret
fcmovnbe
xchg
xchg
pop
xor
and
mov
and
inc
dec
jno
or
pop
mov
cmp
lret
js
cwtl
ljmp
fstpl
adc
pop
notb
cmpsb
rcrb
or
dec
rcl
xchg
jns
pop
mov
and
jae
inc
and
mull
negb
int3
jl
in
inc
mov
jp
mov
je
mov
test
cmp
je
mov
mov
cmpsl
out
icebp
movsb
add
bound
inc
ljmp
jbe
into
and
mull
dec
stos
xchg
pop
movsb
shrb
or
xchg
adc
jno
das
ret
in
xlat
movsl
pop
cld
int3
lahf
loope
cmp
jb
ljmp
mov
lds
call
ja
fadds
jp
in
add
popa
stos
ret
outsl
inc
adc
daa
inc
push
ss
pop
call
in
push
ss
xorl
arpl
inc
xchg
jmp
jl
add
mov
das
cltd
xchg
lret
inc
jno
push
adc
ds
push
lea
sbb
sub
out
jl
xchg
mov
ja
or
xor
out
push
jb
outsl
sbb
fcmovbe
pop
dec
bound
xchg
call
inc
add
cmp
mov
mov
iret
cmpsb
jecxz
adc
nop
jb
ret
iret
ss
cmpsl
call
and
mov
mov
mov
xchg
mov
insl
add
jg
lods
popa
out
imul
jae
lret
mov
in
in
lahf
lret
incl
pop
cmc
cld
mov
push
mov
pop
add
mov
repz
mov
seta
shlb
imul
cmp
int
popf
sbb
scas
imul
movsl
pushf
jmp
outsl
mov
hlt
pop
stc
sbb
insb
dec
fildll
and
push
sbb
mov
loope
push
aaa
jae
sbb
xchg
cmpsb
movsb
add
adc
or
cmp
lods
enter
scas
movsb
xchg
sbbl
inc
cmp
pushf
push
jo
inc
jl
jl
int3
dec
nop
mov
mov
enter
jmp
pusha
je
call
in
adc
adc
push
mov
stos
push
xor
fisubrl
rcl
in
aas
int3
dec
das
lcall
ljmp
dec
ficompl
add
add
push
ss
lret
shll
dec
mov
mov
into
push
cmpsb
rcrl
mov
lret
pushf
cmp
enter
aad
subb
mov
mov
into
xchg
sub
nop
int3
lcall
xchg
insb
popf
cmpsb
sub
mov
jae
adc
stc
lret
in
jbe
pushf
mov
clc
mov
sub
repnz
mov
mov
lahf
jbe
je
sbb
lret
xchg
pop
fs
jmp
and
inc
stos
mov
sbb
fmull
adc
cmp
add
inc
sbb
mov
loope
xor
stos
dec
add
dec
sbb
lahf
push
xchg
fsubs
addr16
add
aam
sbb
mov
fnsave
fdivrl
xchg
aam
outsl
dec
sub
xor
and
add
add
push
jne
pop
pop
mov
pop
mov
cmpsl
cmp
roll
out
call
mov
int
adc
mov
es
in
adc
fldcw
gs
fbstp
cwtl
add
mov
xchg
xchg
push
add
lcall
pop
and
clc
xchg
or
ljmp
sub
mov
fwait
push
stos
sti
in
aad
out
inc
in
rcpps
pop
shlb
jmp
movsb
sub
cmp
jp
push
sub
fcomp
bndstx
mov
push
mov
cmp
cmp
jge
push
pop
lahf
andb
sbb
dec
sub
lcall
sub
or
sub
lock
scas
and
lret
fiaddl
movsb
pop
popa
push
jnp
rolb
dec
inc
pop
xor
mov
xchg
scas
lock
cmpsl
scas
push
or
popa
test
mov
in
ficompl
mov
inc
adc
lock
test
roll
shl
jp
ret
pop
lock
sub
aas
push
lds
jmp
mov
jecxz
fstl
sbb
jp
aam
dec
fs
adc
and
inc
lret
ss
inc
xchg
outsl
hlt
je
xchg
pushw
ret
insl
xchg
iret
and
jnp
or
fisubl
lds
aas
incb
pushf
mov
inc
ja
in
jecxz
ss
adc
movsb
mov
and
jp
mov
and
adc
dec
out
data16
scas
jae
dec
mov
lahf
faddl
xor
clc
adc
stc
dec
das
out
ds
jge
push
rclb
mov
je
sub
mov
popf
inc
fldl
aad
mov
lret
xchg
xchg
inc
mov
xchg
fists
sbb
lods
push
lret
mov
shr
sub
jns
pusha
pop
add
out
js
rcll
test
xchg
jecxz
or
sub
xor
mov
push
xchg
into
fsubrl
stc
leave
push
mov
in
arpl
pop
fdivrp
xor
inc
loop
push
mov
in
insb
xlat
add
mov
orl
out
aas
js
fucomp
test
pop
cmpsl
repz
mov
fisttpll
mov
sbb
dec
push
push
push
pusha
jp,pn
mov
push
repz
xchg
dec
cwtl
imul
fwait
insl
into
test
shr
jge
loope
lea
enter
nop
mov
lret
das
mov
movsl
sbb
lret
sbbb
repnz
mov
pop
inc
adc
mov
and
inc
jne
call
pop
shrb
les
jecxz
in
jae
jge
rolb
push
imul
and
mov
push
lods
xor
sti
mov
dec
adc
loopne
shlb
adc
loopne
or
cltd
push
add
adc
add
adc
add
add
movsb
cli
lret
in
xorb
xchg
call
mov
jg
in
pop
adc
jl
ret
pop
pop
sti
cmc
inc
stos
je
movl
sub
pop
or
insb
aaa
insb
and
lea
es
push
faddl
aas
or
fucompp
sub
pop
adc
add
mov
ror
in
or
or
add
outsl
or
mov
cmp
push
mov
mov
pushl
jp
dec
loopne
cmpl
inc
cmp
movsl
jnp
cmpsl
dec
fdivrs
notl
scas
jecxz
scas
adc
or
jle
jecxz
scas
push
sbb
sub
sub
movsl
inc
stc
hlt
shll
mov
adc
or
sbb
repz
mov
inc
cmpsb
fwait
cli
pop
and
pop
mov
out
jno
scas
jo
dec
repnz
hlt
mov
lcall
pop
shr
jae
push
add
adc
fs
add
and
mov
rcr
dec
mov
insb
mov
pop
jbe
lcall
subb
lret
lcall
lods
pop
imull
sbb
mov
pop
sub
mov
decb
sbb
cmpb
jl
and
in
ss
mov
leave
jp
mov
jecxz
addl
insl
jp
push
mov
dec
rolb
push
xor
mov
inc
mov
or
aaa
mov
pop
sbb
jnp
je
mov
push
gs
sbb
nop
add
aam
cmpb
roll
cmp
test
aam
cmp
test
xchg
cmp
add
in
imul
mov
sbb
jo
testb
fstpl
lods
sbb
into
xchg
call
xchg
repz
sbb
adc
xchg
orl
jae
add
jl
mov
mov
ret
lret
call
ret
addb
or
sti
pop
pop
xor
adc
shl
pop
in
xchg
dec
pop
ljmp
test
popf
mov
mov
ja
pop
and
sarb
pop
lahf
mov
jecxz
inc
sub
out
mov
in
ret
xchg
jno
enter
push
add
inc
mov
pop
outsl
mov
add
mov
xor
pusha
push
out
int3
pop
push
push
sar
push
mov
push
pop
enter
pop
dec
daa
and
gs
mov
cmpsb
adc
push
sbb
nop
add
or
mov
aas
sub
sub
jne
aad
mov
imul
or
or
inc
xchg
pop
cltd
mov
sbb
adc
cld
pop
push
and
nop
or
mov
sbbb
mov
in
jae
pop
push
shl
pop
and
clc
in
hlt
pop
fistpll
shll
orl
lock
and
and
sbb
push
pusha
xchg
adcb
outsl
cltd
pop
push
lock
cmp
ror
stos
dec
invlpg
cli
adc
pop
jecxz
dec
dec
das
fs
mov
xor
pusha
mov
adc
dec
and
ljmp
pop
int
jl
mov
icebp
xor
repz
stc
mov
hlt
and
popa
lret
xchg
pushf
popf
sub
jl
dec
test
es
out
mov
icebp
andb
xor
mov
or
push
outsb
mov
cmpsl
sbb
out
and
pop
fldcw
loope
jno
rcrb
mov
clc
lea
pusha
enter
adc
fstpt
into
es
mov
xchg
test
orb
fwait
daa
dec
inc
sahf
dec
push
out
xor
add
inc
sbb
jp
mov
nop
sahf
cmpsb
rcl
push
mov
roll
loop
inc
loope
add
test
fstpl
or
cmp
sti
mov
jae
fimuls
ss
add
nop
and
stc
test
jns
lods
cmpsb
xchg
xchg
add
cli
rolb
popf
xchg
scas
mov
lcall
mov
lahf
daa
adc
nop
out
inc
cmp
jecxz
or
add
xor
mov
sahf
inc
cmp
out
inc
or
popa
aaa
jo
lret
adc
sbb
popf
pusha
jne
sti
test
in
jae
lret
loope
xchg
lret
cmp
push
fsubr
cmp
mov
stc
jecxz
popf
mov
add
jns
lds
push
mov
mov
mov
pushf
or
adc
or
movsl
mov
ret
test
dec
sbb
out
or
mov
les
sarb
push
fwait
push
std
fisubrl
test
push
xor
mov
inc
xor
pushf
push
cli
xchg
int3
enter
jno
mov
push
add
inc
in
imul
inc
mov
cmp
mov
xor
mov
aad
testb
inc
les
leave
mov
xor
inc
sub
xchg
mov
xorl
mov
enter
jnp
aas
jle
cld
aam
adc
xchg
in
xchg
or
in
aas
adc
scas
sub
xor
jg
lods
mov
enter
out
lcall
rorl
sub
and
or
nopl
loopne
push
push
and
notb
data16
pop
mov
sbb
ja
js
addr16
adc
add
sbb
cmpsl
xchg
sub
clc
mov
mov
ficoms
jb
xor
inc
pop
es
cmpsl
mov
and
or
dec
out
mov
cmp
inc
jo
fldl
adcl
flds
repnz
in
dec
leave
imul
fcomp
jge
ss
mov
and
mov
mov
jp
hlt
std
int3
into
imul
dec
popl
mov
lds
mov
std
push
sub
js
and
pop
mov
add
sbb
xor
cmpsl
jg
cmp
sbb
dec
fsubp
mov
xchg
and
movsl
inc
mov
punpckhdq
fisttps
ret
push
test
xchg
push
xchg
cltd
loop
pop
mov
movsb
jge
andb
or
jne
sbbb
mov
sub
dec
stos
dec
add
or
or
or
dec
ja
push
scas
outsl
add
scas
inc
inc
inc
ds
popa
int
rcl
es
repnz
dec
mov
lods
je
scas
xchg
inc
sbb
cmp
push
cmpsl
mov
movsl
mov
cmp
or
sti
inc
mov
aas
inc
mov
hlt
adc
stos
mov
cmpsl
loope
mov
testl
das
mov
ljmp
cmp
ficomps
mov
xor
pop
mov
xlat
shl
mov
test
jmp
stc
xchg
test
loope
fdivl
push
ljmp
mov
sbb
mov
setbe
fisubrs
loopne
pop
popf
mov
adc
popf
aad
inc
sub
dec
les
inc
sahf
cmp
nop
cmpsb
mov
add
mov
dec
push
sub
and
cs
in
sbbl
icebp
pop
push
imulb
or
bound
jno
js
or
test
aad
popa
into
stc
aam
mov
mov
cmp
sub
xchg
mov
popa
pop
daa
cmpb
outsl
sarl
sarb
jmp
xchg
xchg
pop
sbb
ficoms
mov
mov
mov
ret
sbb
and
mov
loop
test
aas
mov
cmpsl
es
push
cmp
jo
push
mov
cmp
adc
out
jmp
loope
lahf
movsl
out
je
js
addr16
mov
out
pop
aaa
jecxz
or
xor
inc
mov
repnz
stc
xchg
and
xchg
jg
out
xchg
xchg
stos
loope
jnp
fmull
int3
movsl
in
shll
insb
mov
insb
outsl
imul
jbe
leave
ds
movsb
cmp
rorb
sbb
push
pushf
sbb
push
or
cmp
sbb
lds
ja
cmp
adc
xchg
xchg
jmp
mov
call
pop
fwait
mov
ror
jecxz
leave
mov
or
pop
addr16
jns
out
popa
cmpl
xchg
fs
pop
lods
mov
stc
jl
sub
or
outsl
into
adc
xor
pusha
inc
adc
push
rclb
in
rcrl
mov
fstl
cmpsb
cmp
pop
and
aas
jne
adcl
test
and
or
xchg
sbb
sub
push
cmp
mov
testb
imul
push
mov
dec
idivb
xchg
out
iret
dec
pop
repz
inc
arpl
jmp
addr16
loope
imul
inc
dec
and
inc
loope
mov
nop
hlt
loop
arpl
in
test
test
sbb
icebp
cmp
inc
out
lods
in
xchg
sbb
sbb
icebp
sub
dec
lret
sbb
mov
mov
rolb
enter
mov
or
pop
and
mov
xor
clc
sub
pop
xchg
ja,pn
push
mov
jae
jbe
mov
push
mov
xor
cmp
or
mov
scas
push
imul
psllq
mov
jbe
jle
ret
dec
test
mov
jge
push
adc
push
mov
in
fldenv
pusha
in
fnstcw
add
fdivl
outsl
cmp
mov
jl
add
dec
ret
lahf
sub
push
movb
pop
xor
lock
leave
mov
lret
and
into
push
lret
in
jp
or
xchg
mov
jb
jne
jecxz
dec
jnp
in
ret
xchg
rcr
pop
jg
or
pop
filds
push
into
test
int3
or
jg
mov
jle
push
mov
xor
sti
fld
mov
cmp
sub
jne
sub
xchg
or
dec
or
stos
loope
push
cmp
ss
fbstp
push
imul
fisubs
repz
add
int3
mov
orl
shll
push
mov
test
rorl
push
or
push
pop
and
cwtl
xchg
xor
mov
mov
imul
push
mov
and
cmc
mov
pusha
dec
test
sbb
test
sbb
sbb
psubq
add
mov
sub
inc
rcrl
xchg
pop
pusha
lock
xchg
imul
dec
xchg
add
ss
mov
push
rcll
push
rorl
push
mov
jg
mov
mov
mov
xor
std
mov
xor
fmuls
jae
fstps
push
inc
push
imul
fbld
nop
rep
push
aam
mov
test
or
popa
jp
ja
jo
push
xor
xchg
sbb
rcl
or
gs
and
inc
dec
sub
jecxz
int3
push
lods
popf
in
insb
popa
daa
es
mov
dec
or
sbb
cmp
loop
and
dec
cmp
xor
nop
inc
sub
loopne
inc
imul
ficomps
push
rorb
sbb
mov
or
lcall
mov
aas
dec
pop
fldcw
int3
xchg
cmp
js
aam
xchg
cmpsb
popa
test
das
icebp
rclb
sub
int3
xor
and
sbb
xchg
fsubp
jge
cmpsl
and
hlt
inc
inc
cmpl
imulb
mov
xor
fcmovbe
hlt
divb
xchg
xor
adc
adc
xorl
insl
popf
adc
and
mov
pop
jbe
push
iret
insl
mov
jb
fxch
hlt
dec
jo
cmpb
mov
lea
xchg
push
inc
xchg
mov
jp
das
cs
and
mov
dec
imul
cs
mov
jle
lcall
cli
leave
lods
test
xor
xor
les
xor
js
ret
adc
jo
clc
adc
mov
add
bound
sub
mov
inc
jge
repz
or
push
xchg
mov
rcrl
das
xchg
loopne
aad
jb
xchg
mov
fs
pushf
out
lock
mov
pusha
cmpsl
sub
lods
sbb
mov
icebp
xchg
fs
or
mov
dec
shl
shl
push
call
jg
mov
popf
mov
pop
xor
mov
rorl
lret
std
sbb
adc
jle
push
fdivrs
lret
lahf
popf
sbb
shlb
xchg
inc
xchg
pop
add
jl
pop
and
lret
mov
pop
pop
xchg
add
out
add
push
pop
or
add
xchg
adcb
sbb
das
fildll
ljmp
subl
mov
scas
jp
es
pop
out
lock
repz
cli
add
mov
shrb
jne
xchg
pop
popf
incl
fimull
repz
scas
and
cmp
loopne
out
xor
lods
dec
data16
imul
adc
or
and
push
dec
das
popf
faddp
pop
or
in
pop
mov
adc
dec
jecxz
xchg
cmp
jecxz
pop
cmp
lods
xchg
ret
ljmp
jmp
fnstsw
in
dec
or
mov
sahf
loop
push
dec
arpl
push
jnp
mov
dec
xchg
mov
rcr
pop
push
gs
scas
jmp
pop
cld
ds
add
loopne
and
mov
pusha
scas
cltd
pop
adc
push
cmc
inc
aaa
mov
cmp
mov
jle
insb
ja
ljmp
inc
in
xor
loopne
fcmovb
pushf
mov
ret
nop
and
or
cmc
jecxz
mov
push
xor
mov
sub
sbb
test
jle
xchg
imul
mov
cmc
add
imul
loopne
repz
push
sub
mov
out
sahf
cmp
jbe
lock
int3
lea
and
jbe
test
jl
or
push
push
movsb
insb
mov
jbe
xchg
push
clc
xchg
or
add
rolb
xor
push
sub
imul
inc
and
lahf
stos
mov
iret
push
pop
ljmp
cmp
xlat
push
mov
loopne
inc
mov
leave
lds
jp
int3
dec
pop
pop
mov
adc
or
or
sbb
adc
addr16
dec
cmp
mov
inc
daa
aas
jbe
rolb
inc
inc
mov
fstpt
cwtl
test
push
cmpsb
test
pushf
mov
mull
daa
jnp
add
stos
mov
sub
mov
loopne
stos
inc
xor
pop
rcrl
adc
mov
dec
jle
fbstp
push
xchg
jns
sbb
mov
adc
rorb
loopne
inc
in
lea
mov
aaa
or
ja
pop
push
movsl
push
clc
shlb
ret
pusha
push
push
iret
jecxz
inc
add
sub
sub
movsb
adc
testl
loope
pop
jge
pop
repz
test
mov
and
in
inc
stc
push
mov
shrb
cmp
rcl
inc
push
xchg
xchg
imul
mov
mov
lret
out
bound
pop
sub
repnz
xlat
outsl
push
xor
in
adc
or
and
addr16
mov
xchg
js
notl
ja
mov
or
fs
int3
mov
pop
jns
add
mov
gs
shl
fists
int3
sbb
mov
sahf
jne
aaa
and
out
fcmovnu
mov
pop
repz
repnz
dec
stos
jae
or
and
mov
dec
and
xor
jno
leave
jb
and
call
xor
inc
je
cmp
call
in
fimull
mov
jne
pop
int3
rcrl
test
mov
arpl
jmp
in
jecxz
push
jae
add
subb
leave
aad
dec
lds
mov
push
mov
adc
dec
cmp
mov
jl
push
aam
adc
into
push
fldl
or
test
xchg
out
mov
adc
push
jp
push
sub
mov
fstpt
es
stos
shlb
scas
jecxz
add
les
xchg
fisttps
decb
lcall
lea
sub
sbb
sbb
cmpsb
and
out
in
in
ds
fcomps
lods
dec
xchg
mov
sbb
mov
jbe
sub
and
jecxz
jle
push
test
xchg
movsl
and
fdivl
xlat
push
push
inc
mov
inc
fidivl
mov
aad
push
leave
jmp
adc
cmp
jmp
insb
popf
addr16
adc
lods
jnp
mov
das
inc
cs
cwtl
adc
pop
cmp
loop
inc
out
xchg
add
mov
les
in
dec
ror
xchg
mov
pop
stos
mov
movzwl
outsb
imul
pop
lret
mov
outsl
sub
test
jp
push
jno
inc
pop
sbbb
repz
aas
sahf
ja
stos
rol
add
pop
out
imul
mov
mov
and
lods
mov
insb
call
je
cs
sub
insb
push
lods
fsubrs
in
xlat
insb
inc
xor
xor
pop
mov
jge
idivl
xor
sub
mov
or
mov
movsl
dec
xor
dec
dec
in
mov
pop
push
mov
inc
out
sarl
sahf
rol
lret
aad
sub
aam
sub
xchg
fstpl
xchg
mov
sub
adc
lret
jle
mov
dec
pusha
fistl
movsl
push
mov
out
shll
nop
adc
in
xchg
lret
dec
xor
xchg
jecxz
mov
and
pop
popa
pop
push
stos
pop
mov
jge
into
scas
stc
in
mov
lret
jle
cltd
push
stos
mov
cli
jo
jae
stc
inc
mov
pusha
xlat
or
loop
fs
jb
xor
mov
push
and
cmp
dec
movsl
mov
and
xchg
ret
or
gs
inc
mov
inc
push
lret
or
dec
notl
in
push
pop
icebp
jo
shlb
cmp
xchg
lods
jle
sub
jb
sub
sub
xor
dec
insl
or
in
aad
inc
xor
inc
mov
icebp
les
mov
aaa
or
inc
jno
mov
or
je
add
mull
mov
roll
sub
fdiv
test
stc
dec
add
pusha
loopne
fnstcw
hlt
mov
addr16
mov
int3
xor
mov
jge
dec
fnsave
inc
xor
ret
mov
fmuls
sbb
out
sar
insb
sti
dec
cmp
inc
stos
push
test
ja
mov
and
fsubr
mov
repz
pushf
adc
inc
add
es
mov
lret
push
and
aad
xchg
ss
jmp
xchg
mov
add
and
into
mov
scas
in
ds
mov
scas
jo
dec
xchg
xchg
and
aas
push
pop
dec
mov
xchg
into
dec
xchg
mov
mov
subl
rorb
popf
inc
adc
int
push
jmp
dec
mov
rcll
enter
or
add
ja
xor
adc
shll
out
mov
add
adc
inc
inc
adc
decl
push
sbb
fistpl
pop
hlt
in
pop
out
inc
mov
aad
in
lret
add
enter
pop
lods
out
mov
iret
fdivrp
xchg
mov
mov
jnp
insl
dec
pop
ds
ret
in
outsl
lahf
xchg
push
and
scas
pop
js
popf
popa
adcb
add
xlat
mov
aaa
mov
mov
lds
std
mov
into
or
xor
test
lahf
xorl
rcrl
xlat
mov
fidivl
fsubp
adcb
inc
test
or
push
cmp
adc
out
and
cmpsl
lods
test
xor
mov
push
movsb
mov
and
mov
adc
mov
hlt
push
mov
mov
daa
cmp
sbb
jmp
pushf
js
lea
and
subl
sbb
and
dec
out
in
mov
mov
enter
test
pop
shrl
mov
mov
ficompl
inc
ret
das
xor
rclb
movsb
jns
das
fnsave
cmc
in
xorb
add
jns
imul
jne
stos
les
std
sbb
repnz
xchg
sahf
dec
fcoms
bound
jbe
add
jp
mov
addr16
mov
rclb
xchg
mov
cld
stc
and
xchg
or
test
inc
add
arpl
pop
lcall
ja
in
ljmp
xchg
mov
fistpll
int
movsb
inc
shrl
mov
xchg
jecxz
das
sub
sbb
add
lret
popf
int3
nop
xor
xchg
jns
add
sbb
sbb
mov
nop
mov
mov
xchg
fisttpll
arpl
rorl
inc
add
mov
int
add
rorl
stos
mov
loope
mov
jmp
stos
jae
inc
jno
xlat
sub
lds
mov
push
lcall
xchg
add
das
jge
imul
lock
sahf
ret
dec
and
sub
dec
mov
jmp
push
sti
mov
sbb
lods
push
mov
add
mov
nop
addr16
mov
mov
push
add
addl
mov
ja
jg
test
push
out
scas
or
and
inc
xor
sbb
adcb
inc
jb
mov
int
lock
out
jmp
ja
xchg
pusha
mov
add
test
andb
data16
xchg
mov
in
std
mov
mov
xchg
inc
mov
add
sub
or
and
xchg
add
pusha
cmp
pop
jae
dec
mov
xchg
icebp
ss
sahf
mov
fwait
pop
jle
jp
xor
rcrl
loopne
jae
jp
adc
inc
inc
push
pop
mov
das
cli
adc
repz
test
adc
sub
mov
shlb
ja
iret
jp
inc
jnp
pop
jmp
push
pop
add
jne
es
jbe
nop
xchg
and
and
xchg
xlat
push
cs
ss
pop
repnz
lods
dec
inc
ds
pushf
out
and
or
mov
movsb
rep
xchg
xchg
xchg
xor
sarl
push
and
lods
scas
mov
mov
mov
cmp
cwtl
adc
pop
lea
mov
xor
loop
inc
pop
mov
xor
or
xchg
in
mov
and
cmp
sti
fwait
out
scas
popa
add
xorb
jge
inc
sub
mov
push
jno
rcr
push
or
rcr
or
cmp
ret
sub
xor
repz
fs
lahf
fldl
or
stos
testl
ficoms
sub
ret
fsubl
adc
pop
insb
enter
inc
jns
push
add
fwait
xchg
movsb
shl
sbb
fsubl
jl
push
add
jae
sbb
mull
and
jnp
call
sbb
leave
icebp
or
inc
mov
out
enter
sub
gs
fwait
pop
fsubrp
xchg
mov
sub
mov
cmp
lret
test
scas
jmp
dec
ss
cmp
fs
inc
out
push
subb
icebp
sub
xchg
decl
and
jle
jecxz
ret
in
stos
cmp
push
data16
add
dec
movsb
add
gs
sbb
xor
sbb
lds
aaa
mov
lret
inc
sbb
or
fs
in
hlt
mov
or
fldt
mov
mov
les
xchg
dec
loope
incl
xor
enter
push
jae
xchg
pop
cmp
mov
sti
int
fstpt
mov
mov
inc
push
mov
jne
adc
xchg
adc
test
cmp
xchg
mov
mov
gs
sub
fwait
push
pop
push
adc
imull
adc
xchg
mov
mov
dec
mov
sub
sub
fisttpl
mul
cmp
orb
lcall
jnp
cmc
or
sti
daa
das
enter
data16
imul
imul
mov
push
aam
sub
insl
movsl
xchg
xchg
dec
adc
mov
imulb
pop
in
rep
mov
mov
cmpsl
fldl
mov
pop
sub
sub
fcom
ljmp
call
inc
shl
and
call
aad
movsl
cmp
lods
adc
ja
cmp
xchg
sub
or
adc
mov
stos
arpl
data16
test
lret
int3
scas
mov
jns
lret
adc
je
jnp
les
loop
dec
pushf
adc
xchg
add
cmp
shrl
ljmp
mov
mov
loope
lods
dec
aaa
or
arpl
aas
xchg
jl
dec
les
lret
sar
jno
push
xor
loopne
ljmp
movsl
adc
imul
loope
push
xor
inc
push
inc
jnp
mov
pop
repz
addr16
adc
dec
lret
jne
push
push
xchg
xlat
and
out
mov
pop
mov
jmp
adc
div
dec
push
ret
popl
dec
push
or
mov
inc
xor
pop
fwait
psubsw
add
movsb
xchg
push
shlb
jle
aas
sub
xchg
mov
sbb
pop
xchg
xchg
leave
loope
fwait
mov
cld
adcb
shl
jne
mov
push
add
test
pop
lea
adc
fs
or
mov
xchg
ss
mov
arpl
pop
out
mov
movsb
lret
scas
pushf
sub
jecxz
fsubs
sqrtps
jnp
lods
movsb
mov
stc
loopne
pop
jmp
out
jp
xor
lret
sti
mov
sub
movsl
daa
ljmp
sbb
mov
mov
std
add
and
fdivrs
iret
add
lret
add
pop
mov
mov
pop
sbb
sbb
inc
xor
xor
in
sbbb
pop
cmp
pop
rcl
rcrl
dec
fmuls
jmp
pop
loopne
push
dec
xchg
and
bound
inc
push
out
sbb
notl
sub
pusha
sti
nop
imulb
je
xor
aas
xlat
and
jne
ret
movsl
stc
aam
jecxz
das
leavew
jno
pop
sbb
rclb
mov
scas
push
subb
test
and
rcrl
shrb
and
adc
mov
sub
outsb
mov
inc
idivl
clc
imul
cmpsb
mov
fwait
ss
or
insl
rorl
popf
jecxz
mov
and
and
fcomip
push
inc
es
jle
mov
push
adcb
add
mov
xchg
mov
push
or
mov
push
add
sbb
dec
popa
inc
rcrb
mov
fmulp
inc
cmp
iret
push
pop
in
xchg
das
stos
out
xchg
xchg
mov
xchg
rcr
loope
sbb
mov
xor
sarb
pop
and
loope
mov
push
addr16
movsl
dec
mov
pusha
ficoml
jp
jle
cwtl
mov
addr16
cmpsl
xor
div
and
movsl
inc
mov
lea
int3
jns
add
insb
stos
bound
sbb
int
test
testb
cmp
pop
dec
enter
insb
arpl
jg
push
in
js
cmp
test
cld
jo
push
mov
out
imul
mov
dec
sub
movsl
arpl
xlat
cli
mov
mov
jns
fsubs
cltd
aad
push
je
aas
adc
std
cmpsl
dec
scas
insl
scas
arpl
call
ficomps
lahf
out
ret
inc
sbb
les
pop
lcall
shrl
cwtl
jl
mov
nop
mov
aas
pop
inc
xchg
and
or
dec
dec
mov
fidivl
jno
jle
mov
rolb
outsl
lretw
push
jp
pop
inc
pop
xchg
push
call
pinsrw
and
jg
fwait
aas
jno
in
lock
mov
push
add
push
mov
icebp
enter
out
inc
pop
mov
jge
jecxz
sti
nop
xchg
je
xor
js
mov
mov
inc
push
jno
cmp
jp
jno
negb
mov
jb
xchg
aad
mov
inc
jae
xor
mov
jg
out
mov
stos
lret
mov
test
xchg
xchg
xchg
xchg
ljmp
add
mov
mov
push
bound
adc
cmp
push
fisttpl
les
in
ss
add
daa
mov
mov
int
divl
sub
mov
mov
inc
mov
js
mov
mov
mov
mov
mov
in
xor
mov
call
adcb
mov
pusha
fwait
cmp
iret
mov
or
testl
enter
xchg
cmp
mov
inc
cmpsl
lret
sahf
adc
movb
daa
xor
or
xor
lds
xchg
dec
out
push
fimull
mov
addr16
sub
xchg
shrb
cmp
adc
push
in
je
sub
incl
sahf
xchg
sbb
adc
roll
pusha
dec
and
aaa
cltd
and
inc
mov
sbb
sbb
scas
xor
ja
out
out
shll
les
mov
nop
adc
push
roll
stos
mov
cwtl
mov
jg
pop
sbb
dec
push
jp
add
cmp
inc
out
sub
leave
out
jmp
in
in
add
dec
fsubrl
loop
jmp
cli
loop
out
mov
sti
pop
in
inc
data16
pop
popa
in
mov
pop
mov
jg
popa
mov
xchg
mov
mov
std
xor
loopne
or
push
push
mov
movsl
xchg
in
push
push
test
xor
popf
push
jne
fldcw
movsb
sbb
mov
mov
imul
push
aad
jecxz
sbbl
jg
lods
xor
jae
sar
xchg
pushl
mov
shlb
addb
js
jp
mov
push
and
mov
push
fcomps
lret
fcmovu
ret
clc
fucom
lret
sbbb
mov
dec
pop
call
inc
clc
pushf
shll
xlat
cmpsb
add
pusha
scas
cmpsl
sbb
dec
dec
loope
in
push
mov
push
icebp
fidivrl
lods
push
jl
mov
mov
and
push
jg
mov
mov
aad
xchg
xchg
adc
bound
int3
xchg
aaa
mov
sbb
or
xchg
mov
dec
daa
push
adc
lret
push
addr16
pop
push
xor
movsl
mov
jns
shrb
adc
loope
cmp
stos
or
inc
rcl
adc
cwtl
shll
lds
insl
or
idivb
int
jnp
imul
cmp
jle
ret
or
xchg
das
sbb
ficompl
lahf
enter
sbb
pop
out
insb
nop
or
rorb
filds
cli
push
sbb
pop
cmp
lret
aam
or
sbb
sub
xchg
sub
add
sbb
repz
stos
push
and
repz
pop
jp
and
xchg
out
int
test
and
testl
and
dec
shl
pop
stc
addb
mov
daa
xchg
xor
xor
or
xor
xchg
and
or
xlat
int3
cwtl
stos
pop
jmp
mov
movsb
cmp
loop
xlat
dec
mov
sub
xchg
outsl
lods
cmp
lods
push
or
in
lahf
mov
mov
mov
insl
jnp
icebp
push
push
les
sbb
cwtl
xchg
jnp
iret
jno
push
sub
mov
push
jl
mov
mov
insb
push
lea
jp
rol
and
ret
je
cmp
mov
jbe
inc
pusha
push
arpl
insl
stos
push
xchg
test
shl
xor
aam
xchg
shl
pop
dec
adc
mov
push
in
addl
push
xlat
or
lcall
jo
cmpsl
nop
dec
mov
inc
repz
pop
cmp
lcall
ss
out
xor
pop
jle
mov
popf
inc
mov
and
pop
xlat
jge
pop
jbe
popa
negl
push
jmp
mov
mov
pop
adc
pop
out
fs
daa
dec
lret
in
aam
cmp
out
cmp
fsub
ss
xchg
cmpsb
arpl
fistpl
outsl
bound
rcrl
xchg
xchg
in
out
rorl
cltd
ljmp
sbb
arpl
movsl
stc
xchg
shrd
mov
jae
outsb
dec
je
dec
imul
insb
mov
xor
fisubrs
mov
int
lods
push
fstps
test
sti
pop
or
sub
aam
xchg
icebp
xchg
mov
and
sub
jbe
xor
mov
hlt
bnd
sub
insb
es
aam
inc
mov
inc
and
or
sbb
mov
push
sub
ds
fcoml
loope
adc
sbb
aad
loop
mov
jbe
cmp
imul
insb
movl
stos
or
adc
gs
inc
sahf
push
xchg
enter
div
add
mov
cmp
stos
idivl
mov
jg
loop
stos
arpl
shl
cs
adc
das
pop
cld
xchg
push
mov
in
out
xchg
hlt
movsl
clc
into
repz
dec
xchg
jnp
push
push
add
pop
inc
sahf
or
imulb
xchg
adc
scas
inc
sub
nop
pop
ret
adc
jecxz
aaa
test
out
mov
ds
xor
call
jmp
movsl
xor
mov
ss
movsb
inc
dec
rep
push
rclb
sbb
cwtl
cmp
add
pop
lock
insb
xor
lock
notb
inc
jg
mov
into
das
sti
test
mov
fdivrs
add
insl
sub
jle
fsubs
jnp
test
rsqrtps
xor
punpckldq
sub
dec
imul
sbbb
rol
lret
es
pop
gs
mov
adc
je
add
les
push
pop
lahf
scas
daa
leave
sbb
int
adc
xchg
pop
test
jg
gs
daa
ljmp
loopne
jno
mov
fcmovb
out
xchg
test
push
cmp
call
ja
inc
xor
xor
mov
mov
icebp
mov
adc
mov
lods
ljmp
cmp
mov
xchg
add
xchg
push
mov
fdivs
daa
out
xchg
mov
and
mov
sub
scas
push
add
outsb
push
lods
inc
xchg
cmp
push
cs
inc
mov
cmc
popa
sub
and
hlt
xchg
pop
pop
loopne,pt
mov
icebp
fs
jecxz
rolb
add
daa
test
push
sbb
pop
jecxz
sbb
xchg
mov
inc
scas
cmpsb
add
out
adc
fcmove
mov
jle
add
xchg
mov
inc
jl
fldcw
xor
xchg
fldcw
dec
cmp
sarb
iret
lea
in
cmp
or
and
or
mov
test
add
dec
repnz
inc
sub
push
cmp
lods
icebp
jno
sbb
outsb
pop
mov
popf
inc
xor
adc
pop
icebp
leave
jb
xorb
icebp
leave
sub
cmp
stos
dec
dec
mov
cmpsb
mov
sub
push
std
adc
pushf
adc
inc
aad
lock
push
pop
dec
lods
mov
mov
dec
lods
sbb
push
push
adc
and
bnd
int
insb
in
mov
test
adc
jp
sub
sahf
push
repz
or
addb
arpl
adc
in
loope,pn
fcmovnbe
lock
mov
dec
mov
adc
insl
popf
orb
iret
adc
daa
mov
mov
jmp
and
out
dec
shl
aam
mov
push
cmp
fldl2e
sub
sahf
sub
nop
int
in
movsb
orl
sahf
and
lret
push
sub
xorb
cmpsl
dec
jle
mov
out
pop
sar
shl
rolb
leave
pop
and
dec
mov
sbbl
mov
push
mov
cmp
xor
inc
jbe
mov
enter
mov
add
scas
popf
aas
cmp
jecxz
jecxz
inc
jl
hlt
cmpsb
xor
mov
fisubrl
pop
pop
sahf
sub
cld
into
icebp
std
mov
mov
test
mov
leave
or
or
xchg
lsl
rclb
sub
mul
pop
or
push
jecxz
sbb
int
pop
ret
popa
jo
sbb
xchg
adc
sub
mov
xchg
xchg
mov
mov
iret
mov
xlat
mov
or
push
adc
dec
cli
dec
pop
cmc
mov
add
inc
cmp
lret
fstps
pop
fiaddl
aaa
jne
pop
mov
mov
mov
ficoml
cmp
flds
scas
leave
pop
clc
rcrb
push
push
aaa
inc
jno
mov
and
jle
jne
sti
inc
adc
test
rolb
sbb
inc
jecxz
inc
or
int
fisubrl
sub
cmp
dec
test
dec
out
push
sub
mov
push
xlat
daa
mov
leave
ljmp
cmpsl
or
jge
or
and
adc
mov
add
icebp
xchg
cmpps
movsl
fisubl
sbb
repz
and
out
cmpsl
dec
aaa
and
pop
mov
mov
aad
test
jo
in
sbb
es
adc
out
imul
xor
outsb
lcall
push
mov
push
sarb
iret
adc
inc
jle
jle
xchg
fwait
jo
and
addr16
sub
xchg
mov
loope
sub
xor
out
popw
inc
pop
fldt
fwait
xchg
sub
mov
cld
es
jmp
add
dec
scas
mov
push
mov
add
mov
push
leave
xchg
mov
gs
inc
sarl
fildll
mov
add
out
cmp
jg
dec
testb
add
adcb
fdiv
fcompl
adc
sub
push
inc
xor
pop
cmpsl
fs
xlat
cmc
cmp
lcall
cld
lods
sti
pop
mov
lods
aas
std
movsl
add
and
pop
cmp
pop
jmp
adcb
pop
inc
cmpsl
jle
enter
call
arpl
jg,pn
inc
aaa
mov
andb
dec
xchg
lcall
shll
mov
mov
dec
adc
leave
cmp
rol
into
dec
mov
addr16
cmp
loop
lcall
leave
inc
sub
mov
jge
pop
test
aaa
jp
mov
rcrl
pusha
jnp
mov
inc
pop
int3
popa
sarb
cmp
in
cmpsl
push
xor
test
into
sbb
inc
das
push
stos
mov
repz
and
push
pop
xor
pop
cli
outsb
dec
rcrb
cmpsb
lahf
repnz
pop
xchg
sbb
jg
cmp
pushf
mov
jg
and
leave
bound
cld
aam
sbb
inc
add
ja
xchg
jg
nop
or
xchg
loop
add
popf
cmp
jle
sbb
cs
jge
xchg
fdiv
jb
pop
loop
push
adc
lods
or
push
popl
movsl
arpl
test
sub
fldcw
mov
mov
rcr
cmp
or
test
and
push
popa
mov
mov
jmp
xchg
fsubr
adc
sbb
push
xor
and
cld
and
fcomps
adc
faddl
ljmp
pusha
mov
cmp
test
ret
mov
pop
xchg
push
or
sbb
les
push
xchg
imul
and
lea
or
int3
sub
sahf
call
shll
or
lea
repnz
ret
jl
into
sbb
popa
lcall
jge
cmp
in
cmc
pop
cmc
fisubs
push
mov
or
push
sub
dec
lock
push
mov
out
or
inc
jnp
sub
push
xor
mov
adc
mov
jae
shrl
popf
inc
xchg
repz
sub
lods
mov
cwtl
sbb
and
pop
xchg
sbb
xchg
add
mov
cmp
decl
jne
ror
test
xchg
mov
mov
and
and
xor
push
jl
neg
inc
jno
mov
adc
add
add
icebp
mov
mov
js
outsl
adc
test
test
cli
test
or
int3
mov
sbb
pushf
dec
icebp
jge
dec
test
sub
pop
iret
xchg
clc
pop
dec
scas
mov
jb
out
movsb
test
mov
jbe
pop
std
and
pusha
push
xchg
mov
bound
sub
xor
ss
loopne
jns
scas
inc
in
dec
loop
es
lret
sub
mov
subl
out
std
push
and
sub
xor
mov
jne
mov
xchg
sub
or
inc
lahf
cs
fcmovnb
bound
pop
sbb
mov
and
push
fistpll
dec
ret
loopne
ja
push
clc
jno
push
pop
jl
mov
pop
into
mull
std
aam
mov
push
cmp
decl
in
jl
sub
jmp
xor
mov
cltd
add
mov
mov
shl
pop
xchg
xchg
adc
pop
nop
add
lret
inc
inc
imul
mov
mov
jp
inc
rcr
xchg
aas
nop
ss
mov
sbb
decb
cmp
loope
pop
sbb
cld
divb
lcall
fsubrl
mov
es
pop
sbb
sub
shr
mov
pop
addr16
ja
cmc
and
mov
pop
idivb
push
add
shll
pop
add
fidivs
insb
inc
dec
stos
shrl
mov
stos
xchg
or
sbb
mov
daa
mov
xchg
out
mov
ror
popf
and
popa
imul
fcmove
daa
scas
mov
test
push
sbb
pop
cmp
and
hlt
mov
test
les
push
pop
in
inc
nop
in
xchg
mov
lret
or
pop
and
cmp
add
aad
push
cs
push
mov
mov
mov
in
popf
loope
mov
mov
sub
xchg
mov
lcall
inc
rclb
das
fcmovnb
cltd
fs
cmp
or
inc
push
push
sti
add
shrl
xchg
test
and
in
push
and
cmp
std
xor
dec
out
es
mov
xor
frstor
dec
sbb
bound
mov
in
out
and
testl
ja
mov
mov
dec
test
leave
push
fstpl
test
nop
mov
pop
test
mov
leave
out
pop
bnd
das
and
sahf
icebp
cmpsl
push
in
sbb
fistpll
negl
push
add
mov
lock
std
cld
cmc
repnz
xchg
jne
ljmp
outsl
lret
lahf
mov
aad
mov
test
mov
xchg
pop
sub
mov
fadds
pop
in
mov
sbb
jno
add
cmp
mov
js
stos
lds
add
je
pop
xchg
scas
iret
inc
imul
jmp
sbbl
mov
repz
jecxz
xchg
mov
or
sbb
push
xchg
jle
lods
mov
test
sbb
pop
xchg
cmp
lret
mov
dec
cmpsb
iret
xlat
fmulp
aad
in
inc
inc
xchg
call
xchg
out
aam
mov
xchg
push
adc
xchg
imul
or
out
mov
test
inc
or
sub
dec
test
xchg
push
push
cmp
out
add
std
mov
call
or
daa
loop
dec
shll
mov
lock
cltd
pop
jg
adc
outsb
lds
jo
push
outsl
inc
bound
cmpsb
je
lea
in
mov
jl
push
jl
and
push
in
rclb
mov
xchg
pop
mov
adc
inc
lods
add
xchg
pop
fistps
les
and
out
shr
enter
call
xchg
sar
jmp
je
push
pop
insb
xchg
test
jno
mov
pop
add
out
arpl
xchg
insb
inc
cmp
lcall
cmpsb
pusha
call
mov
jle
and
xchg
movl
mov
pop
lret
testl
cld
lds
pop
xor
rcr
fidivl
flds
pop
shlb
cmp
xor
cld
pop
test
js
cmp
xorb
fistpll
pop
cmp
rcll
cmpsl
dec
jecxz
mov
arpl
jno
clc
call
pop
aas
aaa
push
arpl
out
dec
dec
xlat
das
pop
pop
mov
out
sti
fmuls
les
stos
ljmp
imul
leave
pushf
or
lcall
aaa
jmp
push
insl
ljmp
das
cs
ret
bnd
sub
nop
clc
pop
dec
mov
mov
mov
xchg
sub
push
repnz
mov
mov
inc
outsl
pop
js
xchg
aaa
and
push
fstps
dec
jg
add
call
push
jecxz
hlt
out
jne
jg
loop
outsb
test
pop
dec
in
fisttpl
mov
or
sub
mov
and
iret
fildl
leave
adc
mov
jbe
in
rolb
jl
repnz
and
cli
push
mov
cmpsb
andl
pop
pop
inc
int
sbb
cmpl
inc
pushf
lods
mov
push
mov
push
add
aas
les
in
or
addr16
jbe
scas
repz
mov
mov
cmp
xchg
std
xchg
pop
xchg
lods
jo
pop
push
cmovne
add
mov
bound
sahf
adc
ss
jb
shrl
ds
sub
inc
pop
pop
int
add
cli
sbb
ljmp
fs
data16
push
or
iret
lods
push
shll
jecxz
inc
xchg
xor
and
out
aas
sub
mov
push
fildl
mov
xlat
movsb
fnstcw
adc
jg
rcl
add
out
sbb
xor
insb
pop
push
sub
jns
cmp
rol
sub
mov
mov
mov
inc
pop
push
dec
xchg
mov
aam
outsb
jae,pn
cmp
mov
sti
xor
push
mov
mulb
jne
cmc
add
cmpsb
roll
dec
push
mov
cmp
xchg
cmp
roll
popa
xchg
pop
push
xor
sahf
dec
push
adc
pusha
push
addr16
idivb
mov
pushf
cltd
pushf
push
outsl
ffreep
jno
inc
call
popf
xlat
mov
out
dec
out
jae
push
fdivrs
pushf
xor
rolb
js
loope
loop
sub
adc
cmp
xchg
cmp
fsubs
adc
lods
mov
cvtdq2ps
icebp
sub
xchg
add
and
jecxz
mov
dec
mov
lahf
mov
inc
xor
outsl
sahf
pop
adc
mov
fisttpll
pop
cwtl
jo
sbbl
out
add
out
icebp
data16
stc
jle
in
push
arpl
push
pop
or
xchg
subb
xchg
xchg
lcall
jmp
call
lods
adc
repnz
pop
in
push
push
movsl
mov
inc
pop
in
das
inc
fldl
inc
or
sahf
jmp
insl
cmp
les
lret
inc
add
ffreep
push
add
xchg
leave
add
adc
mov
adc
fsts
mov
lds
jge
xchg
or
xorb
hlt
cli
fs
andnps
dec
in
sbbb
test
stc
mov
sub
and
repnz
adc
sahf
pop
ds
stc
jne
sub
call
mov
or
xor
lret
imul
and
add
cwtl
dec
fcmovu
and
push
addl
mov
push
xchg
je
dec
push
jg
inc
dec
dec
cmpsb
mov
xor
dec
dec
arpl
sarl
sbb
mov
jno
cmpsl
xor
rcrb
pop
es
out
fs
aaa
ja
lds
cli
sar
adc
pop
and
fisubrs
push
xchg
mov
jl
jnp
mov
and
ja
fadds
inc
xlat
and
sub
dec
ret
adc
sub
mov
xor
aaa
jg
mov
jg
xchg
sarl
cmp
add
and
cs
dec
or
mov
and
mov
xchg
imulb
jno
mov
pop
sub
and
pop
fs
mov
cmp
sub
aas
jecxz
jns
loopne
out
cltd
ficoms
scas
mov
shlb
dec
in
jo
lock
ja
dec
bswap
mov
dec
clc
or
ficoml
adc
or
dec
out
ret
pop
movsb
mov
inc
pop
push
mov
dec
fs
stos
lock
lahf
arpl
pop
jmp
in
fildll
push
lcall
inc
rclb
lods
sub
ss
mov
sbb
mov
ljmp
punpckhdq
dec
xchg
mov
jne
xchg
in
mov
add
daa
sarb
cs
mov
fisttpl
scas
scas
pop
push
mov
pop
repnz
adc
loop
or
push
test
leave
mov
jp
mulb
int3
or
jno
movsl
iret
xor
sarb
jae
add
jge
mov
aad
jns
cmp
cmp
mov
rcll
or
lret
mov
imul
aaa
sub
jns
mov
add
sbb
mov
pop
push
sbb
add
pop
addr16
fcmovnbe
pop
cwtl
xor
and
jp
int
movsb
pop
loope
xchg
mov
out
lret
sub
fidivl
or
or
loop
das
and
mov
daa
cli
pop
adc
mov
mov
fs
and
ja
or
xchg
scas
pop
mov
pusha
xor
adc
outsl
arpl
icebp
mov
add
es
fst
adc
inc
mov
jmp
xor
mov
xchg
jp
cmp
mov
mov
lcall
adc
inc
xor
mov
loop
mov
loope
lods
sbb
cmpsl
loope
adc
inc
jp
jl
lods
in
xor
or
clc
call
mov
clc
aas
lcall
stos
ljmp
jp
out
pop
cmpsb
cwtl
and
add
inc
es
lock
jle
dec
fwait
mov
add
ss
inc
orb
imul
lcall
pop
cmp
inc
sti
jg
add
jno
es
dec
mov
or
ret
les
mov
in
imul
fidivl
test
jp
std
push
fstpl
or
mov
add
push
int
push
sub
inc
pop
es
or
sbb
test
sbb
xchg
adc
xchg
sbb
or
inc
xchg
stos
mov
cmpsb
sbb
lea
pop
hlt
lret
sbb
and
push
insb
jb
push
push
mov
dec
mov
lcall
nop
rcr
dec
jno
xchg
fists
sti
xchg
aam
xchg
inc
mov
lcall
int
repz
adc
outsl
xor
add
ja
out
stos
out
les
mov
mov
aam
dec
mov
dec
pop
inc
shl
push
rcrb
add
mov
loop
scas
aaa
das
xchg
sti
aaa
mov
ss
push
mov
andb
mov
popa
xchg
xor
pop
sub
sahf
push
add
jns
and
stc
push
push
stc
ret
xor
add
test
inc
sbbb
je
or
clc
data16
in
cmp
scas
sub
mov
mov
sbb
sarl
rorl
xchg
sbb
mov
bswap
dec
out
and
add
insb
jmp
notb
ja
cmpsb
stos
pop
add
fnsave
out
data16
sbb
jnp,pt
ret
fidivs
or
xor
pop
xchg
dec
sub
out
jle
in
pop
pop
clc
les
xchg
jne
jnp
add
ficompl
xor
adc
mov
addr16
lret
xchg
sub
sub
adc
xlat
fdivl
sbb
push
xchg
push
adc
sbb
sti
js
pop
insl
outsl
shll
stos
xor
jmp
inc
out
mov
mov
xlat
xchg
fistpl
or
aaa
test
sbb
xor
aam
xchg
stc
out
imul
out
enter
jae
sbb
jbe
ret
lds
div
jbe
icebp
mov
cli
sarb
sbb
cmpl
repnz
sbb
es
xorl
and
fldenv
lcall
in
shll
mov
xchg
addr16
mov
inc
jnp
shll
jb
int3
or
inc
jp
mov
push
es
pop
clc
xor
shll
stos
mov
stos
and
test
sbb
xchg
dec
call
mov
cmp
adc
adc
js
icebp
adc
lea
jp
dec
push
or
cmpsb
push
pop
cmp
fmull
add
clc
mov
pop
mov
fistpl
sbb
add
ljmp
push
fs
cli
cmp
sbb
add
sbb
jae
lock
sub
fistpl
cmpsb
sub
aaa
jp
fnstsw
rorl
out
push
cmpb
adc
push
roll
lea
jp
jo
mov
sub
mov
push
test
dec
and
xor
inc
sahf
inc
xchg
mov
xchg
xchg
and
xor
ret
test
repnz
lock
loop
and
out
rol
xor
pushf
and
clc
mov
adc
sbb
or
rcrl
cmp
mov
xor
add
lret
pop
sub
int3
push
sti
outsl
fsub
enter
pop
push
movsl
lds
lock
cld
test
daa
sbb
mov
sbb
sahf
and
testl
add
inc
adc
in
fbstp
push
push
scas
iret
dec
nop
ljmp
cmp
in
jb
add
xor
clc
fs
push
sbb
or
pushl
pop
lea
sarl
fldcw
mov
lret
xor
pop
mov
jo
cmp
lds
dec
aad
mov
data16
imul
shlb
pop
sti
mov
inc
cs
andb
inc
cmc
aad
jmp
fidivs
sbb
dec
or
scas
mov
shrl
cs
cmpsl
and
mov
dec
lods
outsl
mov
cli
iret
dec
loope
mov
dec
xchg
jbe
movsl
loop
aam
push
shrl
lret
dec
out
and
cmp
mov
std
inc
add
jbe
pop
test
rcll
pop
pop
mov
sbb
aas
jae
or
and
out
test
mov
test
testb
push
xchg
jne
fs
jmp
bnd
fs
xchg
std
mov
ds
jo
mov
mov
sub
jcxz
and
mov
loop
lds
inc
stc
loop
cmc
mov
mov
cmpsb
mov
adc
subb
jl
xor
or
mov
xor
pushf
and
jmp
sbb
mov
jmp
and
inc
cwtl
sub
scas
iret
movsl
xor
and
jne
mov
and
sbb
enter
shll
insl
xchg
jb
mov
add
leave
loopne
jg
out
mov
mov
adc
xor
mov
iret
pop
and
dec
jecxz
sub
dec
les
dec
call
iret
push
stc
icebp
cltd
pushf
mov
leave
push
js
fs
or
mov
push
cmp
imul
les
fsubr
mov
js
int3
jge
clc
add
lea
loopne
aad
lcall
les
mov
cmp
int
insb
inc
std
push
or
dec
mov
jmp
sbb
cmp
out
insb
jl
mov
push
mov
jo
add
les
test
jne
xchg
inc
mov
sbb
cs
xchg
inc
jo
add
addr16
or
mov
pop
fwait
jl
and
lret
scas
popw
repz
push
mov
push
add
iret
rcrb
xchg
sub
sbb
ja
pop
mov
xor
pop
push
jmp
stc
cmpl
fcoms
out
das
lock
xchg
push
into
loopne
pop
cmc
mov
loopne
dec
mov
enter
fimull
incb
pop
inc
xor
dec
sub
pop
mov
mov
sbbl
sub
xchg
int3
mov
mov
movsl
in
sbb
cmp
outsl
push
imul
inc
dec
push
ficoms
cltd
cmp
pop
lcall
popf
jp
mov
lcall
cmp
fsts
cmp
sbb
sub
push
fstp
lret
mov
bound
data16
cmp
stc
mov
inc
dec
movsb
mov
add
inc
pop
movsl
mov
dec
or
jp
pop
pop
inc
adc
dec
stos
and
sbb
add
std
and
fwait
xchg
mov
stos
int3
arpl
fistps
cs
jb
scas
xchg
iret
jmp
call
daa
fwait
mov
xchg
fadd
testb
fs
cmp
outsb
xchg
cmp
sbb
scas
and
dec
es
xchg
addb
xor
push
xchg
leave
stc
jecxz
int
ss
clc
add
call
xchg
inc
mov
adc
icebp
test
inc
stos
dec
rclb
inc
testb
aas
or
ss
nop
push
mov
sahf
es
or
lret
stc
test
dec
mov
push
sbb
push
lret
xchg
inc
dec
mov
jecxz
stos
and
mov
aam
mov
mov
ljmp
out
hlt
xlat
outsb
negl
inc
cs
and
push
push
pop
xor
pop
dec
cmpsb
push
sahf
jno
ror
fisubrl
shlb
jl
addr16
and
sti
inc
mov
xorl
movsb
enter
cltd
mov
shl
scas
jno
hlt
mov
neg
ljmp
loopne
or
dec
inc
mov
je
fprem1
add
xor
insl
pop
jecxz
repz
inc
scas
mov
sarb
popa
clc
popa
push
xlat
lret
out
or
repz
rcl
out
std
cld
ds
stc
subb
test
jbe
test
cs
getsec
xlat
movsb
dec
test
mov
cmovp
repnz
push
mov
mov
inc
clc
and
pop
js
arpl
stos
movsl
sub
inc
mov
mov
or
mov
cltd
mov
mov
xchg
shlb
fwait
mov
orl
adc
rcrl
aam
lods
jg
int3
insb
leave
xlat
add
lea
stc
pop
or
cli
jmp
inc
mov
into
mov
sub
popf
rcll
dec
mov
and
jae
inc
dec
outsb
daa
mov
sbb
adc
clc
out
mov
repz
sub
nop
mov
cs
pop
add
xchg
movsb
cli
sub
loope
jg
or
push
stos
mulb
mov
inc
add
das
aaa
in
push
jne
mov
pop
out
imul
xor
push
ja
mov
pushf
bound
or
push
mov
cmp
lret
mov
or
jbe
cmp
es
or
mov
shl
mov
jns
jb
mov
and
mov
fwait
in
push
or
fcompl
pop
jl
fadd
sarl
lret
insl
pop
lea
cmp
ret
mov
aaa
insb
test
inc
mov
in
inc
iret
mov
cmp
ret
das
movsb
popf
xor
dec
shlb
out
push
aam
in
leave
adc
ret
mov
les
push
loop
mov
fistps
out
adcl
pop
sarb
jb
rcrl
sbb
mov
aam
dec
sarl
pop
mov
loopne
mov
daa
aas
and
jo
fsubs
or
push
popf
push
stc
in
cmp
adc
mov
stc
mov
xor
hlt
fmuls
je
das
test
add
aad
test
push
addr16
stc
nop
fildll
shlb
and
pop
pushf
mov
inc
xchg
push
popl
or
mov
mov
iret
mov
testl
cmp
sbb
subb
xor
mov
sti
add
xor
xor
jb
mov
jae
repz
imul
mov
sbb
jns
cmp
jns
test
lods
and
jo
repz
in
jbe
jmp
test
mov
dec
jbe
mov
mov
shll
in
adc
and
scas
jmp
lds
outsb
test
loope
mov
mov
jbe
and
pop
mov
xchg
sbb
xor
das
testb
mov
cmc
sbb
xchg
notb
add
and
pop
jae
sysenter
inc
insl
int
push
sub
pop
nop
sti
mov
jae
inc
jge
shr
mov
fmuls
out
out
jge
add
pop
scas
xor
push
rorb
xchg
lret
rcl
cmp
lea
or
jo
insb
popf
jns
jo
cmp
xchg
inc
mov
ja
mov
js
xchg
cmp
stc
sub
hlt
ret
ficoms
and
sbb
scas
in
mov
xchg
out
mov
inc
add
push
mov
scas
mov
jge
mov
inc
imul
or
cli
push
mov
shlb
xchg
xor
movsb
daa
mov
adc
aam
jnp
repz
adc
cli
sahf
jo
cmpb
lahf
mov
lea
repnz
scas
push
sub
jnp
fs
leave
outsb
or
jns
cmp
jg
jle
mov
cmp
or
arpl
and
or
add
addr16
mov
roll
fisubrl
sbb
arpl
les
and
dec
addl
mov
fstl
inc
mov
cmp
daa
xchg
cmp
bound
out
push
inc
xchg
fwait
add
fdivr
leave
shll
mov
js
imul
lock
and
enter
int
xchg
leave
mov
cmp
jbe
jbe
mov
sbb
fbld
addr16
stos
clc
out
daa
push
mov
nop
xor
mov
sub
add
push
xchg
add
inc
add
add
dec
lret
cmpsl
xchg
repnz
out
xchg
mov
sti
sbb
rcl
aad
or
cmp
call
cmp
test
and
stos
sti
sub
ds
cmp
and
inc
sahf
mov
push
clc
xchg
arpl
or
xchg
xor
loope
push
iret
xor
pop
push
movl
xchg
cmpsb
jns
jp
xor
mov
dec
sbb
test
in
push
hlt
mov
imul
bound
sub
push
sub
mov
ret
sahf
ret
clc
cmpsb
mov
add
mov
push
fildl
push
cmp
mov
pushf
repnz
push
in
arpl
clc
and
push
jmp
mov
pop
adc
int
mov
ljmp
push
out
xor
and
ja
cmpsb
cmpsb
or
pop
pop
push
jmp
jb
pop
inc
enter
lods
jae
xchg
ljmp
xchg
je
andb
arpl
psrlq
dec
mov
lahf
push
inc
cmpsl
xor
mov
mov
loop
or
push
jb
icebp
push
fildll
repnz
and
push
push
push
mull
inc
dec
das
xchg
lret
mov
xchg
cmp
test
cs
cmpsl
inc
or
mov
xlat
ret
or
xchg
scas
xchg
outsl
int3
test
test
rcr
js
cli
orl
push
mov
mov
pop
ret
pop
into
xchg
xor
jns
outsl
loopne
call
popf
inc
mov
sbb
leave
mov
jne
cmp
push
nop
or
mov
leave
cmp
pop
cmc
sbb
inc
dec
mov
sub
push
mov
sbb
xchg
pop
les
dec
es
add
inc
fdivl
xor
pop
stos
sub
bound
pop
mov
dec
xor
sub
aam
out
and
add
enter
and
outsl
push
jmp
dec
pop
adc
adc
sub
shrb
es
mov
insb
icebp
jae
lea
sbbb
cli
sahf
or
mov
loop
int3
in
and
iret
sbb
pushf
and
test
cmp
test
in
lret
add
mov
sti
xchg
sub
ret
xchg
out
out
mov
daa
fsubl
jle
int3
sti
outsl
sti
inc
inc
bound
and
xor
rorl
jnp
jl
inc
jl
aad
leave
sub
mull
test
mov
fnstsw
shl
cmpsl
sub
ljmp
das
out
xchg
les
pop
jbe
or
inc
xchg
sub
test
jl
add
jle
add
xor
adc
loop
fwait
push
xchg
ret
movsb
pusha
shll
jo
aad
sub
mov
mov
xchg
ret
push
pop
pop
jae
xchg
and
ds
dec
ret
adc
retw
data16
iret
xchg
imul
or
inc
sbb
pop
ret
add
pop
dec
aam
mull
push
andl
adc
cmp
jle
xchg
aas
add
fildl
ret
sub
sub
in
fsubs
test
push
pop
int
cwtl
push
lock
mov
nop
xchg
xor
xchg
mov
stc
jns
ficoms
mov
jnp
mov
inc
mov
lahf
push
add
mov
and
inc
adc
cli
arpl
cmp
call
or
scas
push
repz
lret
jno
push
ljmp
sarl
cli
scas
cmp
sahf
test
push
push
int
cmp
xchg
xor
push
pushf
pop
pop
dec
mov
dec
paddsw
imul
mov
pop
mov
jnp
rclb
pop
and
loopne
cs
jns
and
mov
xchg
add
mov
xor
push
cmp
enter
imul
shll
in
and
js
adc
aas
jmp
cld
push
lods
mov
rorl
insb
xor
mov
dec
es
bound
cwtl
and
idivl
in
lret
mov
dec
pop
lfs
mov
outsb
out
std
aas
repnz
cmp
cmp
loopne
inc
and
xchg
lret
hlt
into
clc
jmp
int
dec
loope
outsb
push
jns
pop
cmp
out
insb
push
shr
das
jno
mov
cmp
test
jecxz
lret
rolb
fidivrs
jns
ljmp
shlb
xchg
mov
dec
add
or
lods
and
cmp
ljmp
push
or
sbb
ljmp
xchg
dec
cmp
mov
mov
mov
ficomps
fstp
jg
rol
xchg
cli
push
add
sub
pop
lods
jp
sbb
add
es
adcl
xor
inc
mov
and
loopne
adc
aaa
sub
cli
fmuls
fimull
and
test
adc
stc
pop
add
mov
pop
jmp
pop
stos
and
enter
add
pop
push
dec
int
mov
rclb
outsl
add
and
fwait
in
jo
arpl
mov
imul
dec
cs
enter
ljmp
sbb
and
fbld
mov
fbstp
mov
aaa
and
push
ja
mov
xor
lods
mov
into
cmp
inc
inc
iret
adc
mov
out
data16
das
add
dec
push
push
clc
push
push
movsb
sbb
inc
xchg
push
mov
stc
jne
rcrl
cli
push
push
pop
pop
xor
xchg
mov
lock
inc
push
adc
js
gs
dec
test
and
jg
test
pop
cmc
xor
and
stc
std
add
pop
pop
jo
fstsw
sub
push
jae
xorl
and
ljmp
mov
pop
fwait
psubd
jg
mov
dec
js
adc
pop
mov
and
mov
pop
into
push
mov
ljmp
and
sub
mov
add
pop
jg
jne
pop
pop
or
sub
mov
inc
jle
mov
sti
sbb
push
es
enter
rorl
aam
inc
inc
jg
sub
mov
mov
popa
jns
lahf
nop
sub
push
repnz
xchg
jg
movsl
pop
push
mov
aam
sbb
cmp
push
jp
or
int
aas
and
pop
das
out
push
dec
push
and
stos
inc
mov
dec
ret
or
int
xor
xchg
fstpt
test
push
lahf
lods
cmpsl
enter
sub
rcl
decb
nop
jnp
mov
or
dec
add
faddl
xchg
inc
xor
aam
inc
sahf
xlat
sbb
add
cmpsb
sub
call
stos
jg
adcb
mov
jbe
push
loop
insl
add
lret
popf
enter
push
or
aam
rclb
popf
dec
jns
in
test
ds
xchg
stos
or
mov
and
push
dec
jmp
cmp
nop
ja
push
bound
mov
insb
and
in
cmp
push
and
fs
fidivrl
aad
inc
test
imull
int3
outsb
lea
maskmovq
push
mov
or
sbb
pop
decb
mov
mov
push
push
gs
mov
pop
cmp
adc
cmp
sbbb
in
iret
insb
ds
push
ss
dec
xor
sub
roll
xor
jnp
mov
scas
daa
out
jbe
or
inc
add
aas
mov
xchg
mov
pop
and
sub
mov
fisttpll
mov
sti
loopne
in
mov
in
call
push
mov
aad
int3
pop
xor
repz
dec
xchg
push
fnstenv
push
lret
push
daa
pop
sub
in
adc
dec
jne
add
inc
repz
cwtl
inc
push
data16
push
fcmovnb
cmp
loope
and
into
cli
xor
mov
in
lcall
sub
xor
popa
mov
int3
scas
inc
jno
dec
sbb
fsubrl
xlat
inc
cmp
xor
dec
ljmp
pop
jecxz
mov
test
jae
cmc
enter
fisubs
jae
popf
inc
inc
pop
sbb
in
fiaddl
or
jl,pn
sub
mov
lret
loope
in
dec
movsb
icebp
dec
fs
lods
mov
inc
test
popa
in
repz
and
mov
mov
comiss
cmpsb
faddp
lret
push
inc
arpl
and
xor
int3
add
arpl
in
cmp
xacquire
rcrl
xor
call
xor
mov
xchg
fs
int
je
fs
push
mov
popa
js
nop
cmc
aas
push
loope
mov
cmp
and
jne
gs
out
sub
icebp
adc
mov
push
push
bound
xchg
dec
ja
ss
inc
mov
and
loopne
inc
jg
lock
or
lahf
addr16
dec
xorb
push
popf
fyl2x
test
adc
shlb
sub
sbb
adc
orb
add
push
fucomp
jge
ficomps
pop
rcrl
bound
xor
xchg
jae
sbb
shll
repnz
cmp
gs
cli
cwtl
sub
and
mov
cltd
jmp
sub
cmp
or
shrl
int
pop
out
movsl
mov
pusha
ja
jp
adc
cli
cmp
push
fnstcw
aam
jl
xor
mov
cs
shr
mov
fbstp
aam
add
push
adc
rcrb
enter
repz
cltd
sub
lock
jge
cwtl
cld
std
lds
mov
jne
movsl
jle
repnz
test
nop
aas
daa
pop
inc
pop
subl
mov
and
jp
lret
andl
test
inc
xorb
inc
xchg
rorb
fildll
cmpsb
dec
iret
ret
xchg
push
loop
push
insb
inc
mov
das
sub
cmc
imulb
das
dec
mulb
stos
mov
lds
pop
push
mov
xor
adc
mov
mov
inc
shlb
mov
dec
or
xchg
add
je
adc
sub
cs
xchg
mov
fsubrp
dec
push
cmp
shlb
in
lock
sub
inc
inc
cmp
xchg
and
adc
ja
pop
mov
test
daa
jg
insl
fmuls
loop
clc
dec
fcomps
js
sub
ja
cmp
movsb
jmp
fmuls
iret
pop
insb
aad
lcall
fcompl
and
xchg
shlb
fildl
fbstp
out
and
lds
or
pop
and
xchg
jmp
call
lahf
jge
dec
push
insb
pop
aam
jno
jo
mov
add
jle
icebp
inc
insl
xor
push
mov
lcallw
cmp
xchg
or
inc
xchg
sub
int
cltd
movsl
jmp
mov
push
xor
das
push
jbe
repnz
adc
inc
xor
jne
lock
out
imul
mov
dec
imul
ret
mov
test
xchg
enter
mov
inc
fstpt
cmpsl
cmpsl
pop
pop
pop
sub
push
jle
adc
dec
lods
inc
inc
push
xlat
and
out
xchg
subl
dec
xchg
popf
dec
mov
sub
and
testb
daa
push
adc
fiaddl
dec
loope
mov
inc
jae
addl
sub
pop
sub
or
jns
std
lods
fsubl
mov
push
daa
cltd
mov
stos
sbb
shlb
addr16
dec
xchg
dec
jp
adc
jg
pop
inc
mov
imul
movsl
xchg
inc
cmp
ja
js
xchg
jp
lods
fstl
in
mov
mov
div
fsubrl
test
shll
call
mov
xchg
mov
or
add
fisubs
or
jb
pop
jp
dec
fcomps
mov
mov
cmpsb
iret
adc
dec
jno
aas
pop
rcll
push
pop
imul
stos
or
xchg
mov
nop
mov
stos
mov
jle
ror
xchg
outsb
outsb
aaa
je
nop
xchg
mov
out
stos
and
mov
push
in
cmpl
dec
xchg
insb
sub
fstl
inc
pop
mov
cmpsb
inc
les
je
pop
idivb
pop
shll
movsb
mov
jle
xor
mov
nop
mull
repz
sbb
mov
loopne
xor
push
bound
shll
lahf
pop
mov
icebp
fimuls
fadd
adc
and
push
and
fstpt
scas
gs
ret
dec
hlt
std
fs
adc
xchg
in
insl
out
pop
mov
sub
andl
inc
jl
movsl
xchg
rcrb
xlat
cmpsb
fnstcw
jnp
adc
add
popl
stos
ret
sbb
xchg
dec
jge
or
stos
shrb
push
adc
loop
and
aaa
push
pop
xor
mov
fs
xchg
or
std
pop
daa
repnz
mov
dec
pop
inc
fldl
cltd
inc
mov
xchg
sbb
xchg
addr16
inc
inc
cmpsl
mov
xor
sbb
mov
push
out
mov
lahf
inc
fnsave
repnz
imul
jmp
jle
je
sti
test
jge
pop
and
sbbl
popf
mov
dec
sahf
and
and
mov
mov
jne
adc
mov
or
add
nop
aas
stos
pop
jae
adc
andb
push
subb
fcmovnu
mov
xor
or
aas
fcompl
int3
jne
jnp
jmp
pop
inc
shrl
mov
je
cmp
loopne
ljmp
movsl
je
inc
jl
lock
add
fsubl
adc
adc
sahf
lcall
sbb
int3
mov
cmp
bound
jo
popf
xor
mov
pop
push
clc
mov
imul
cmp
xchg
pop
pop
dec
test
xchg
mov
push
in
popf
pop
and
leave
xor
cld
and
mov
pop
flds
stos
stos
jmp
xchg
cmp
scas
or
sub
nop
stos
push
cmp
scas
clc
xor
gs
or
fdivrs
jne
dec
push
add
jae
adc
and
adc
test
aad
push
idivb
pusha
and
cmp
or
xchg
adc
int3
inc
pop
push
jno
movsl
cld
int3
movl
in
jo
movsb
aad
gs
test
mov
addr16
mov
rorl
jecxz
cmp
insb
mov
ror
shl
pop
xor
push
js
push
sti
jno
loop
dec
aas
ret
cwtl
cs
jge
data16
movsb
in
ret
mov
add
push
clc
pop
fiaddl
jmp
daa
add
mov
inc
test
and
push
std
stos
lcall
cmp
outsl
sar
inc
arpl
mov
stos
sarb
lret
aas
in
stos
fs
add
and
adc
mov
or
inc
xor
xor
adc
notl
dec
sti
dec
cmpb
xor
jecxz
fucomi
scas
dec
pushf
in
mov
and
jbe
nop
rcr
in
xor
jo
xchg
leave
ror
push
xchg
lods
inc
fcoml
or
inc
xchg
sbb
xchg
inc
adc
int
xchg
lods
andl
jmp
test
jecxz
pop
daa
shl
mov
repz
push
and
push
inc
out
mov
inc
pavgw
add
or
cmpsb
popf
bound
jmp
gs
insl
sbb
pop
add
test
aaa
loop
sbb
fistpll
mov
lods
inc
setb
or
loopne
jo
mov
pop
inc
out
sub
cmc
inc
shrb
movsb
push
es
decb
rorb
fiadds
lock
incl
negb
aas
fstpt
loop
clc
mov
jg
push
fnsave
add
xor
inc
nop
dec
jge
aad
leave
dec
rol
mov
mov
insb
lock
hlt
out
mov
insl
movsb
loope
cmpsl
cmp
fdivrs
add
lds
daa
arpl
aas
in
pop
jecxz
jno
sbb
lret
sub
fstpl
scas
xor
aad
mov
jp
cmc
out
jne
arpl
mov
repz
loopne
xchg
in
enter
or
lods
std
mov
add
stos
adc
insl
rol
pop
shrl
scas
push
sub
inc
push
lcall
daa
dec
xchg
xchg
jae
jge
cltd
popa
test
add
adc
xchg
insl
cmpsl
out
daa
ret
adc
inc
pop
inc
call
aam
sti
mov
mov
fsub
push
stos
insl
in
ret
jge
push
sbb
push
cmp
loope
mov
xor
jmp
adc
lods
fistpll
mov
pop
jno
negl
ljmp
lds
or
addb
enter
aaa
sarb
or
std
mov
in
sbb
rcl
xlat
cmpsl
adc
dec
mov
bnd
outsb
xor
cmp
jb
outsb
or
xchg
xchg
sbb
clc
test
mov
les
nop
arpl
jecxz
xchg
mov
popf
mov
mov
mov
imul
lcall
and
fdivrs
arpl
push
mov
fbstp
dec
in
xchg
lret
in
pushf
jbe
xor
mov
cld
xor
scas
outsb
shll
sarb
enter
hlt
mov
push
stc
cmp
lea
stos
int3
ds
outsb
push
lcall
push
les
mov
loop
js
dec
dec
test
push
mov
fistps
loopne
jecxz
push
and
movsl
fs
sti
ss
dec
mov
jo
sub
or
mov
movsb
dec
repnz
movaps
sarb
pop
cmpb
sbb
jg
pop
repz
lds
mov
and
adc
sub
xchg
jne
andb
sub
cmp
std
xor
lods
and
adc
mov
cmp
inc
inc
xorb
push
in
jmp
enter
dec
jae
jne
dec
out
test
pop
sub
jbe
push
jno
stos
push
dec
inc
inc
idivb
mov
cmc
stos
inc
add
lret
jecxz
cltd
pop
dec
adc
cli
inc
cmp
out
js
cmp
lds
inc
test
out
mulb
inc
xlat
insb
xor
pop
jne
fdivrl
pop
dec
icebp
je
into
das
stc
xor
test
loopne
bound
repnz
pushf
cltd
jle
rcrl
push
or
xchg
inc
fmul
sbb
outsb
out
insb
repz
in
or
call
cmpsb
jp
dec
and
ret
cmc
inc
aad
jne
sub
xlat
jo
push
test
movsb
inc
push
mov
popa
mov
sub
fidivrs
outsl
insb
mov
and
ret
inc
jle
push
lret
cs
add
dec
clc
pop
jp
xlat
sbbl
je
cmp
push
loopne
xchg
dec
add
stos
dec
dec
and
ja
daa
repz
hlt
pop
scas
push
mov
push
xchg
inc
dec
fists
xchg
mov
aas
adc
xlat
cmp
mov
or
jp
pop
fildl
icebp
lcall
cmp
outsb
ret
jl
aaa
cmpsb
sarl
and
sub
mov
cmp
mov
mov
ss
adc
cmp
lds
int3
je
mov
test
int
popf
push
mov
cs
movsl
nop
jecxz
xor
jp
scas
push
mov
mov
jnp
lds
ljmpw
loope
xchg
ja
cmp
pop
dec
sbb
and
add
adc
mov
je
jns
mov
test
jno
nop
push
adc
fcmovnb
inc
pop
fimull
lret
push
shrl
inc
add
test
xor
fnstenv
mov
dec
dec
xlat
movsl
lret
cmpsb
jno
fildll
push
cmp
jne
pop
cs
sub
test
les
test
jge
or
mov
push
imul
aam
xchg
pop
in
mov
mov
and
out
add
mov
cli
je
ret
sub
cmpsb
jg
aad
ljmp
testb
pop
sub
cmp
rclb
and
mov
addr16
fyl2x
mov
add
push
pop
pop
or
add
jo
add
cmp
insl
insb
inc
nop
jp
jnp
pop
jo
test
out
int
dec
arpl
jne
or
mov
jecxz
xor
outsl
fildll
mov
cmpsb
xchg
sub
sahf
mov
mov
test
xchg
cmpb
adc
mov
popl
or
sti
outsb
cld
xchg
adcl
cmp
mov
xor
cltd
push
data16
adc
ret
fisttps
cs
mov
mov
clc
jns
mov
xor
and
les
xchg
sbb
mov
push
jge
xor
or
cmp
xlat
fists
mov
xor
aad
xchg
lret
mov
push
inc
jns
hlt
jbe
pop
fucomi
sbb
mov
mov
cmp
les
cli
jno
sub
ss
scas
mov
pop
jno
ret
pop
ficoms
scas
push
dec
mov
mov
ljmp
pop
pop
adc
jp
loopne
sbb
cmpl
das
pushf
and
sbb
mov
push
mov
test
lock
sbb
loopne
aas
imul
les
mov
cmp
repz
fiadds
loopne
push
movsl
mov
cmp
jge
pop
or
and
xor
popf
shll
int3
cmpsb
xor
sub
jl
mov
pop
xor
or
emms
mov
push
mov
cmpsl
lock
jle
add
inc
push
pop
jle
insb
test
fidivl
aaa
adc
push
jl
cmpsl
filds
jns
in
pop
dec
insb
jo
xchg
daa
je
mov
inc
adcb
push
aaa
outsb
insl
xchg
xchg
mov
out
aam
jecxz
pushl
mov
sahf
out
lds
ss
xchg
jo
cmp
lods
nop
shr
or
in
adc
repz
sbbb
xchg
cmc
inc
call
js
jb
in
sub
xor
clc
xor
mov
sbb
mov
and
iret
pop
or
ja
push
pop
cli
cltd
xchg
test
pushf
mov
pop
inc
push
movl
add
xor
cmc
call
mov
mov
scas
gs
adc
iret
adc
xor
jl
push
rcl
adc
inc
adcl
cmpsb
rcr
ret
mov
imull
adc
ds
cs
push
dec
test
stc
ds
dec
or
outsl
sub
xor
in
bound
jl
mov
mov
repz
popf
mov
mov
or
fwait
ret
sub
adc
les
inc
hlt
xor
add
xor
into
lcall
jns
cltd
aad
sub
fdivr
mov
mov
imul
sbb
mov
inc
cmp
jbe
and
mov
cmp
and
aam
loop
xor
into
mov
xchg
jmp
adc
je
fbstp
jle
int3
pop
xor
aam
mov
jnp
pop
add
dec
add
mov
inc
and
jg
xor
enter
jne
jnp
out
hlt
sub
out
mov
mov
sub
push
mov
sbb
roll
inc
add
fcoml
adc
or
mov
cmp
pushf
jbe
jl
pop
sub
push
pop
push
test
pop
dec
clc
jns
in
inc
pop
push
stos
es
in
stc
es
testb
push
out
adc
jnp
sti
fsubrl
sbb
dec
or
push
in
cmovp
add
sahf
lret
mov
rcr
int3
in
mov
pop
mov
xchg
das
out
sahf
cmpsl
jl
mov
xor
lock
int
jecxz
lcall
push
pop
sbb
sbb
pop
xor
scas
fwait
roll
addr16
lret
add
dec
add
pop
add
and
icebp
cmpsl
sahf
movsl
cli
mov
enter
dec
pop
sbb
cmpb
xchg
mov
pop
jnp
mov
loopne
mov
out
xchg
movb
jbe
ljmp
aas
mov
mov
inc
sbb
in
daa
fwait
jo
cmp
stos
push
gs
dec
mov
push
test
jbe
mov
repz
orl
lret
fbstp
sahf
lret
or
rcrb
insl
xchg
mov
outsl
mov
lods
fwait
leave
sub
mov
les
xchg
or
sbb
sub
jnp
xor
mov
sbb
pop
ljmp
xchg
cli
andb
shlb
jp
sti
mov
mov
scas
rcl
fdivs
and
sbb
stos
add
mov
xor
cmp
scas
ret
es
push
lds
pop
in
and
fisubl
cs
sarb
jle
xchg
jnp
cmp
mov
jge
mov
mov
arpl
sub
and
push
pop
pop
mov
sub
or
cld
cmc
in
data16
inc
xchg
test
inc
out
lea
ljmp
mov
test
decb
fstpt
out
cmp
in
loope
jb
fwait
sarb
cmpsl
push
push
mov
mov
mov
roll
movsb
dec
fsts
and
inc
and
les
divb
xlat
bndldx
push
testb
cmp
hlt
mov
fwait
inc
pop
mov
jecxz
es
or
xchg
dec
push
inc
aam
movsl
lret
sub
fwait
xchg
dec
jl
pop
mov
aam
andb
scas
sbb
sub
pop
lret
push
cmpsl
cmpsl
cmp
cld
mov
or
mov
bound
cwtl
sbb
xchg
iret
or
and
gs
dec
mov
test
xchg
add
popf
pop
scas
jl
sbb
popf
pop
std
and
pop
mov
cmp
or
pop
pop
addr16
jp
jmp
dec
insb
mov
dec
popf
in
movsb
dec
std
faddp
ja
dec
enter
mov
mov
adc
sub
push
iret
int3
inc
sar
idivb
pop
not
pop
mov
dec
cmpsl
into
ret
inc
jmp
pop
xor
repz
mov
push
adc
fsts
test
mov
in
adc
sbb
outsb
clc
mov
cmpsl
imul
loope
call
subl
pop
mov
sbb
les
fldt
int3
pop
fwait
inc
fcmovne
sarb
sbb
dec
lcall
and
mov
je
adc
mov
and
mov
cmp
jbe
jecxz
rcll
scas
and
jl
mov
lods
cmp
stc
clc
inc
dec
mov
sub
push
jne
or
sub
cld
or
or
fidivrl
test
sti
inc
inc
xor
sub
hlt
cmpsb
xchg
sbb
fs
lahf
mov
xor
lahf
mov
shrl
aad
shlb
mov
push
insb
shlb
ljmp
sub
cmp
repz
icebp
ss
fwait
jle
or
push
addl
or
xor
clc
idivb
xlat
loopne
add
test
fdivr
ds
push
cltd
jns
mov
pop
insb
mov
jg
leave
jae
jnp
inc
cmp
fldenv
aas
xor
sarl
mov
pop
xor
test
pushf
lds
bound
pop
leave
vshufps
jmp
jno
pop
or
test
data16
inc
sbb
push
push
push
mov
fnstenv
or
in
mov
sbb
std
push
fidivl
dec
or
rcll
dec
mov
stc
addr16
adc
pop
jne
aas
cld
and
fisubrl
fwait
lods
adc
in
adc
mov
movsl
dec
loop
data16
xchg
mov
push
les
std
pop
les
xor
jne
imul
aam
push
es
pushf
pop
ss
mov
push
cs
iret
adc
push
dec
test
pop
mov
mov
and
jmp
je
out
movsb
sbbl
push
test
out
xorl
popa
push
enter
cmp
punpckhbw
fists
or
inc
popa
xor
add
and
mov
ja
in
int3
add
sti
pop
in
xchg
mov
aad
cwtl
adcl
push
js
adc
insl
adc
push
or
push
dec
or
dec
xor
aas
fwait
pop
add
push
and
pop
aaa
fsubrs
fldl2e
mov
mov
movsl
adc
mov
xor
mov
loop
lods
sbb
scas
icebp
popf
loop
mul
insb
and
jbe
test
jno
mov
xor
jg
or
or
ret
add
test
jl
addr16
sbb
cmpsb
es
sbb
jg
fwait
dec
pop
mov
clc
cmp
fstps
pop
ljmp
in
or
adc
dec
xor
xchg
lods
fcmovbe
dec
mov
mov
stos
sbb
shl
mov
enter
out
sub
mov
in
and
sub
stos
or
push
push
cs
jns
jg
mov
sbb
mov
lock
xor
test
psrlw
dec
loopne
cwtl
pusha
popl
sahf
dec
ljmp
test
cmp
sbb
dec
jns
cltd
jmp
dec
cld
pop
jl
ljmp
jo
jnp
in
and
int
leave
lret
cwtl
dec
int
lret
fsub
shl
rorb
fisubs
dec
sub
clc
out
push
repnz
cltd
mov
aas
sub
icebp
lcall
jno
push
dec
ret
xor
dec
arpl
inc
dec
clc
in
inc
push
icebp
shlb
inc
inc
int
scas
xchg
aad
ljmp
sar
mov
gs
mov
mov
popa
xchg
jb
shll
sahf
pop
and
pop
mov
mov
cmp
aam
dec
leave
fisttpll
xorb
adc
and
mov
imul
mov
push
lods
sbb
imul
jns
stc
mov
inc
in
int
mov
adc
in
lcall
sub
jl
je
dec
jne
jns
dec
pop
movsb
pop
lret
and
jmp
je
mov
jne
cmp
cmpsb
rorl
inc
mov
cli
aad
nop
jmp
addl
jns
dec
jmp
adc
or
sbb
mov
ror
add
test
xchg
imull
add
icebp
mov
stc
mov
push
movsb
and
fnstenv
ficoms
or
iret
jle
xchg
mov
insb
ss
lods
inc
test
fisttpl
les
nop
sbb
cld
fdivrs
cmp
dec
outsl
sub
mov
repnz
arpl
std
orl
xor
and
pushf
into
ljmp
aam
enter
insl
aam
in
dec
mov
cmpsb
stos
xchg
or
lods
loopne
cmp
mov
push
ret
xor
fildl
jmp
sub
dec
mov
ss
pusha
int
jbe
sahf
jnp
lods
nop
loopne
leave
and
pop
mov
std
or
stos
pop
pop
loopne
or
sti
sub
daa
cmp
enter
mov
mov
dec
push
adc
or
push
xor
mov
mov
insl
and
mov
mov
mov
jbe
push
jecxz
mov
push
push
cltd
or
cmp
or
or
fisubl
fsubl
cmp
cmp
xchg
aaa
stos
pop
repnz
repnz
push
dec
popf
lods
popf
mov
movsl
xor
sub
inc
sub
push
jecxz
cmp
mov
pop
push
mov
data16
xchg
inc
mov
jns
ret
push
out
xlat
inc
adc
mov
enter
and
inc
jb
call
popa
ret
add
aam
mov
aad
cld
jp
mov
or
xchg
pop
ret
and
shl
sbbb
xor
sbb
inc
dec
mov
sbb
jl
sbb
lret
imul
push
mov
xlat
sbb
aaa
andb
jl
mov
aad
and
adc
adc
movsl
xor
adc
adc
dec
repnz
sbb
sbbl
dec
loope
aam
aad
fmulp
and
test
std
xor
xor
inc
jmp
stc
push
mov
shll
je
out
adc
push
outsb
mov
loop
inc
inc
adc
mov
adc
mov
rorb
cmp
dec
jae
mov
sub
cmpsb
cmp
pop
mov
test
push
mov
fdiv
mov
hlt
adc
xlat
sbb
loopne
call
cmp
xor
fwait
or
ss
sbb
sbb
arpl
adc
fidivs
lret
fld
fisubs
mov
flds
jl
mov
or
xchg
jg
cs
arpl
dec
jnp
cmp
fisttpll
in
adc
fcmovnu
jnp
hlt
movsl
nop
cmp
pusha
enter
bound
xor
sub
jb
and
sahf
mov
fucomi
testl
jmp
imul
ret
sbb
test
mov
inc
popf
pop
out
int
stos
xor
pop
jo
jno
jo
push
cs
rcll
call
div
arpl
jg
lock
push
sub
add
mov
sti
mov
pop
mov
cmpsb
sub
in
inc
leave
mov
jge
enter
xor
push
mov
xchg
mov
jge
or
inc
xchg
sbbl
xchg
loope
imul
daa
cltd
pushl
inc
ret
adc
pushw
scas
es
leave
addr16
sub
inc
dec
jae
mov
mov
sbb
add
mov
pop
inc
sarl
and
loope
ss
rorb
push
jmp
rolb
jnp
xor
in
xor
insb
jo
add
scas
push
outsl
mov
movsb
les
mov
ret
sub
stos
cmpsl
outsl
sti
push
jg
test
adc
sti
add
jp
jle
testl
and
fwait
and
and
inc
mov
addr16
dec
xor
xchg
sbb
push
add
mov
test
adc
adc
jle
jae
outsl
or
cmp
scas
pop
mov
push
lods
shll
stc
dec
int3
mov
jbe
sub
pop
cltd
scas
ficoml
mov
jg
orl
push
jno
fucom
cli
stos
push
out
xor
lock
lea
xlat
jns
hlt
sbb
mov
inc
adc
push
iret
ss
cmpb
mov
jle
cld
and
sbb
cmp
test
cmc
inc
repz
mov
loopne
jmp
mov
test
push
push
add
cmp
jb
sub
inc
jmp
arpl
mov
sti
aam
pop
sbb
loopne
mov
cld
mov
das
out
out
mov
fldcw
test
popa
lea
jbe
mov
ljmp
sahf
std
das
sub
inc
shlb
mov
and
jmp
cmp
jno
jbe
into
je
cwtl
ds
out
pushf
les
ja
jae
shll
movsb
das
pusha
push
enter
push
ret
dec
dec
mov
pop
sub
dec
pop
xor
mov
sub
repz
dec
and
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
movswl
pop
call
jae
test
mov
pop
push
mov
pop
add
add
mov
pushl
pop
push
mov
pop
sub
jmp
stc
ds
in
mov
repz
xor
or
push
xchg
test
xor
imul
add
mov
push
push
mov
pop
popl
sub
or
add
add
sub
jne
movzwl
jmp
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
push
movswl
pop
jmp
cltd
pop
aas
or
push
pop
sub
xor
sbb
pop
fstl
fisttpll
sahf
inc
les
sti
daa
inc
cltd
mov
pop
sbb
sbb
pop
push
shlb
inc
es
sub
scas
or
add
insb
test
fstpt
mov
or
in
jle
sbb
lock
push
inc
arpl
and
pop
push
es
mov
sbb
fsubl
adc
dec
mov
faddl
iret
jl
testb
ljmp
aas
ds
mov
movsb
or
outsl
inc
sub
inc
ffreep
out
xchg
in
arpl
cmp
iret
movsb
pop
lods
mov
cmp
loope
movsl
mov
scas
mov
jge
stos
out
mov
xchg
xchg
loopne
push
pop
lods
enter
xchg
fnsave
cs
mov
jns
adc
mov
cmp
scas
or
movsb
jmp
cmpsl
xchg
sub
inc
mov
adc
test
inc
call
xor
or
test
lret
scas
xor
lock
sbb
ds
stc
mov
or
clc
in
test
in
mov
xchg
mov
mul
sub
dec
mov
cmp
ljmp
iret
adc
push
jne
pcmpgtb
or
adc
test
mov
je,pt
mov
jg
test
nop
push
jnp
pop
filds
or
popa
mov
inc
aas
pop
je,pt
data16
jmp
je,pt
outsb
clc
sbb
in
mov
sub
dec
ljmp
mov
jp
scas
pop
inc
mov
cmc
xchg
xor
je
ja
cmp
dec
xor
jno
je
bound
in
andl
adc
pop
sbb
sahf
out
movsb
cli
dec
ds
push
jle
mov
push
mov
push
int3
lret
mov
or
and
add
je
xlat
cmp
cli
dec
in
add
je,pt
es
js
lahf
mov
push
pop
sub
jb
cmpsb
data16
lret
inc
out
lock
add
lcall
lods
leave
and
lret
lahf
lret
lahf
inc
scas
aad
lock
sub
mov
or
mov
cmpsb
add
push
adc
push
popf
mov
xor
cmp
call
push
push
repz
in
add
hlt
xor
and
ds
mov
push
rcrl
leave
and
and
into
cmp
lods
cltd
lock
push
clc
mov
lock
gs
bound
lock
jne
divl
xchg
dec
ror
pushf
pop
inc
mov
imul
mov
fwait
xor
lret
mov
aam
leave
and
xchg
leave
leave
and
lock
int3
mov
in
lock
clc
test
int3
and
lock
xchg
mov
and
mov
and
lock
movsb
ror
and
lock
add
lods
leave
mov
lock
pop
in
test
sub
mov
and
lock
in
xor
mov
mov
or
dec
mov
mov
mov
lahf
leave
leave
and
jb
leave
and
lock
sbb
lds
mov
loop
add
lret
mov
and
in
clc
seto
inc
insb
movsl
mov
cs
mov
sub
mov
mov
lock
in
andb
leave
leave
and
lahf
leave
leave
and
inc
cwtl
and
xor
mov
lock
pop
in
test
sub
mov
in
xor
mov
and
xor
sbb
movsl
mov
and
lock
std
lock
and
lock
and
out
arpl
cld
adc
xchg
and
popf
in
or
and
enter
xor
sbb
lcall
push
xchg
fwait
iret
repnz
mov
and
lcall
sub
or
jae
jb
jae
lret
cs
xor
xor
gs
jbe
cli
loope
mov
cmpsb
jge
sub
and
adc
xor
xor
xor
sbb
iret
call
mov
jae
lret
cs
xor
xor
sbb
stc
insb
or
add
stos
xchg
hlt
jae
test
lock
and
or
jae
cmp
xor
sbb
mov
dec
iret
scas
int3
and
push
cld
xchg
cmp
mov
dec
xchg
sub
aam
push
call
sahf
lods
xchg
and
arpl
adc
lahf
push
arpl
xor
gs
sub
jo
pushl
dec
shr
mov
and
lock
and
lock
dec
dec
pop
add
xchg
out
dec
lock
mov
xor
xor
cmp
and
lock
mov
in
mov
jge
mov
and
insl
mov
or
test
in
lock
shll
sahf
sarl
in
leave
and
icebp
stos
and
push
adc
movsl
fwait
out
loopne
js
leave
mov
aam
jbe
and
out
movsb
cs
aad
stc
push
in
push
jnp
loop
add
jbe,pt
mov
addb
dec
xchg
or
andl
insl
pop
icebp
lods
sub
fildll
rorb
fnstcw
mov
jne
addr16
and
lock
and
lock
and
lock
and
lock
fisttpl
and
mov
and
lock
and
lock
and
mov
and
lock
and
lock
xlat
outsb
ffree
cmp
sub
das
out
rcll
push
and
into
adc
sub
popf
cmp
decb
push
mov
and
lds
aad
shll
and
sub
aas
adc
xlat
test
imul
adc
test
dec
sub
mov
cmp
mov
aas
mov
jbe
stos
sbbb
dec
push
test
pushf
shl
bound
les
mov
int3
call
adc
fsubs
pusha
mov
mov
clc
or
fcompl
test
rol
add
test
das
lret
dec
push
xorb
dec
sbb
ud2
in
push
sub
mov
xchg
push
and
or
mov
test
push
cmp
fldenv
pop
and
cltd
hlt
sbb
mov
mov
aam
cmpsl
sbb
dec
pavgw
lret
sub
mov
inc
shr
lahf
fcmovnb
iret
js
push
pop
andl
adc
es
xchg
pop
pop
pop
loop
jmp
movsb
outsl
dec
repz
addr16
adc
xor
jecxz
cmp
jecxz
data16
xlat
std
add
mov
pop
test
cmp
pushf
inc
cwtl
lock
sub
lods
mov
lock
or
cmp
jp
mov
mov
je
popf
xchg
inc
sbb
hlt
setg
mov
inc
lahf
inc
xchg
rcrb
adc
rcr
inc
mov
or
pusha
aaa
lret
inc
movsl
std
mov
pop
jae
and
sahf
mov
cmp
fstpt
add
out
divb
and
jmp
cmp
ss
aaa
loopne
subl
leave
mov
mov
pop
xlat
fnstenv
fs
addr16
in
mov
stos
mov
mov
push
shlb
es
cmp
push
jp
dec
out
mov
jbe
mov
sti
dec
cmp
lock
dec
std
enter
or
or
hlt
and
shrl
mov
mov
imul
push
jge
adc
ror
shll
pop
push
out
add
pop
sub
push
lahf
cmp
cmp
shlb
pop
cmp
jns
mov
lcall
jbe
addr16
xchg
addr16
xchg
sarb
xchg
xor
fs
mov
mov
dec
js
add
out
xlat
loop
xor
clc
sub
add
sbb
push
add
rcll
mov
inc
cwtl
mov
adc
jl
add
add
add
or
add
adc
insb
push
add
insb
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
push
add
imul
cld
insb
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
insl
push
add
add
add
insl
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
into
and
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
ljmp
add
add
add
sbb
adc
mov
sbb
cmp
fs
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
sar
push
sub
pop
pop
mov
push
push
es
cmpsl
or
int3
rcrl
jmp
mov
pop
cmpsl
mov
dec
out
jl
shll
mov
movsb
idiv
add
pop
mov
mov
mov
ret
sub
arpl
xorl
leave
or
pop
ficomps
fisttpll
jbe
in
and
jle
call
xchg
pop
cmp
lds
adc
or
push
dec
mov
pop
sbb
movsl
push
pop
jecxz
clc
imul
ljmp
ljmp
enter
jmp
lock
and
jmp
mov
loop
sbb
jne
scas
lds
cmp
push
sbb
out
mov
lea
addb
aam
setb
push
in
sbb
lahf
pop
enter
je
jb
shr
sub
inc
andb
pop
outsb
mov
mov
jge
jns
nop
push
fwait
test
lea
xor
call
cmp
nop
dec
cli
mov
push
xor
dec
inc
jmp
dec
insl
sub
ss
test
pop
sbb
sar
cs
clc
lock
fs
into
mov
lods
shll
sbb
adc
mov
aad
mov
xchg
xchg
pop
mov
push
sbb
mulb
pop
das
inc
and
stc
sub
inc
sub
hlt
mov
repnz
sarb
pusha
xchg
pop
inc
add
jnp
jbe
repnz
pop
mov
cmpsl
lods
in
and
mov
or
push
mov
fstps
and
adc
sti
add
jl
mov
or
push
pop
jns
mov
cmpsl
loopne
mov
ret
lea
add
bnd
ret
and
sbb
mov
cli
arpl
mov
test
adc
sub
sbb
and
jnp
adc
push
or
les
cmpsb
pop
inc
mov
xchg
test
clc
xor
cmp
out
inc
push
popf
xchg
add
maskmovq
negl
push
insl
xchg
pop
mov
push
sbb
fwait
out
pop
mov
xchg
jo
jns,pn
ja
cmpsb
xor
clc
sbb
dec
je
cmpl
sbb
dec
mov
mov
out
shlb
in
sbb
or
shlb
push
xchg
pushf
cli
call
push
daa
pop
outsb
push
add
das
add
rclb
adc
loopne
push
cmpsl
bound
sub
leave
pop
xlat
xor
decl
mov
icebp
insl
jge
lret
xor
dec
pop
loop
mov
jge
push
cmpb
push
add
or
mov
cmpsb
fs
pop
push
test
stos
pop
rcrb
push
fwait
adc
and
or
movsb
popa
and
lea
insb
scas
loop
mov
adc
stos
pushf
jae
ret
push
adc
pop
jg
cmpsl
movsb
mov
add
xchg
mov
popa
and
lcall
cli
aam
rcll
loope
mov
test
arpl
mov
imul
in
imul
sbb
pop
push
insb
sahf
cmp
test
dec
push
loop
xchg
cmpsb
outsb
and
inc
inc
mov
mov
and
leave
fisubrl
dec
or
cmp
repz
jb
push
sub
pop
inc
adc
push
imul
xchg
fmull
repnz
push
and
test
dec
sbb
push
inc
cmp
scas
mov
fwait
adc
in
fs
in
mov
sub
aas
mov
popa
clc
sahf
lret
cmp
outsl
sub
rcrl
nop
adc
jo
push
push
das
mov
pop
fidivrl
mov
cmp
test
jne
ret
jmp
sti
imul
fnsave
hlt
addl
imul
popf
sbb
lret
or
popa
pop
jns
cs
mov
or
lahf
sub
sti
mov
inc
mov
ret
or
mov
jae
add
repnz
js
jns
stc
and
pop
xor
xchg
push
cmp
leave
pop
jno
ret
arpl
sub
dec
sub
icebp
inc
inc
and
mov
ss
adc
sahf
or
iret
enter
sub
xor
test
pop
outsl
rcr
pop
rcll
push
push
repz
xchg
mov
test
sbb
notl
and
movsb
xchg
aaa
and
paddw
arpl
push
xchg
sbb
outsb
cwtl
imul
mov
stos
rorb
mov
sbb
mov
jmp
or
and
xor
ljmp
neg
fidivs
add
or
jle
shll
pop
and
jnp
pop
dec
adc
cwtl
imul
lods
sub
rolb
scas
repz
scas
in
popf
sub
jg
arpl
or
or
inc
in
stos
les
mov
push
leave
lcall
and
and
add
add
mov
inc
cwtl
xlat
pop
push
pusha
lock
mov
in
jp
xchg
enter
xchg
imul
cmp
jge
mov
adc
lcall
cmpb
lret
fcomps
pop
aaa
call
jl
inc
repnz
dec
cltd
iret
pop
notl
mov
jp
pop
cmp
mov
daa
mov
and
insb
jmp
sub
xor
or
lods
shrb
push
jbe
mov
xchg
movsb
jge
gs
cmp
push
pop
insb
sub
popf
aaa
mov
negl
ljmp
push
jecxz
push
shr
call
mov
add
movq
bound
mov
add
dec
inc
fwait
inc
mov
sbb
daa
mov
pusha
and
xor
into
mov
mov
cli
dec
jne
mov
fsub
jns
adc
jg
sub
sbb
pop
sbb
mov
cmp
push
cmp
inc
lret
sbb
ljmp
rcr
dec
jmp
sarb
mov
xchg
popf
test
cmp
mov
inc
sub
mov
dec
push
mov
test
cmp
cmp
jmp
fstl
test
xor
inc
imul
sbb
and
cmp
por
mov
adc
bound
out
arpl
mov
test
imul
mov
mov
ret
cld
fcoms
rorb
xlat
jmp
cmpsl
adc
xchg
jmp
push
call
fcmovnbe
sub
pop
int3
cmp
inc
xchg
inc
arpl
aaa
stc
fwait
scas
xchg
shl
jae
fidivrs
adc
stc
in
mov
jnp
or
xchg
adc
sbb
and
push
jl
cwtl
sub
idivl
aad
sbb
and
jp
push
insb
xchg
mov
xor
in
stos
add
push
push
add
out
lret
push
out
push
xchg
arpl
and
pop
out
mov
jmp
pop
push
mov
jge
mov
int
in
cmpsl
or
fmuls
xchg
add
sub
xor
int3
je
mov
test
xor
push
movsl
insl
outsb
rol
dec
cltd
pop
xchg
push
out
dec
lds
shrl
icebp
mov
sarb
movsl
outsl
pop
ljmp
pop
loopne
leave
sub
ficomps
popf
mov
stos
sbb
mul
push
ficoms
pop
xchg
mov
mov
jmp
lcall
test
inc
in
call
push
cmpsb
sbb
or
xchg
mov
rcrl
mov
ljmp
xchg
fsubr
push
enter
jns
jecxz
imul
mov
stos
ljmp
xor
mov
mov
flds
cmp
pop
mov
pop
xchg
or
xchg
and
mov
and
push
arpl
cwtl
lea
inc
popf
sahf
inc
mov
and
or
inc
jo
mov
mov
jmp
xchg
in
cmovl
mov
repz
and
dec
mov
add
pop
loop
push
inc
mov
cmpsb
or
lods
movsb
lret
sbb
outsb
xchg
xor
pop
cli
shll
xor
sahf
fcoms
mov
adc
lret
mov
inc
rcll
shlb
dec
pop
dec
cmpsb
lahf
je
pop
dec
push
ljmp
or
pop
xchg
push
dec
pop
sbb
mov
pop
divl
mov
jnp
aas
imul
pushf
xchg
xchg
shrb
sahf
push
fistl
lcall
data16
std
movsl
adc
jbe
xchg
or
in
xchg
sbb
inc
imull
jmp
mov
sbbl
and
mov
addr16
hlt
mov
adc
test
mov
ja
sbb
sahf
dec
and
push
fldt
push
loop
insl
push
mov
js
fnstsw
and
cwtl
mov
adc
cmpl
lods
scas
pop
aad
jle
pushf
cmp
das
or
loop
std
jle
aas
xchg
inc
jo
rcl
enter
adc
inc
jg
js
xor
lea
andl
mov
and
mov
mov
mov
fcmovnb
popa
mov
mov
inc
stos
cmp
cltd
sub
add
jno
mov
shlb
jae
xor
mov
jle
test
xor
or
lahf
mov
pop
stos
je
push
test
xor
jge
adc
dec
repnz
sbb
xchg
dec
mov
outsl
and
push
mov
mov
mov
loope
cld
inc
push
inc
arpl
sub
lahf
iret
push
hlt
jl
inc
fwait
cmp
mov
aaa
lock
cld
cld
int
movsl
arpl
jne
out
andb
int3
sub
push
dec
cs
stos
xor
cmp
jmp
popa
jo
into
mov
sbb
js
jmp
and
jns
sub
cltd
nop
nop
pop
stos
lods
std
repnz
mull
sbb
ja
aas
mov
cmpsb
inc
in
jo
out
out
repnz
mov
addr16
pop
mov
mov
push
sti
aaa
loopne
es
clc
ret
frstor
xor
mov
mov
in
pushf
subb
jecxz
add
mov
xor
fstpt
or
dec
xchg
mov
fidivrs
and
jo
icebp
movsb
xor
call
dec
rclb
sbb
pop
pusha
call
popf
outsl
jnp
mov
lods
cltd
out
shrb
aaa
sub
cmpsb
insb
hlt
mov
lret
sbb
jp
sub
data16
mov
in
shlb
gs
lods
or
call
shl
cmp
xchg
adc
inc
sub
outsl
in
xchg
or
ret
out
cmp
xor
decl
cmpsl
pop
lods
pop
popw
faddl
jne
shrb
mov
jns
outsb
ljmpw
sbb
push
sub
aam
je
xor
push
cwtl
stos
sub
push
shll
add
stos
jecxz
scas
dec
and
loopne
lods
testb
pop
push
mov
xchg
jmp
jae
push
push
cmp
xchg
mov
rclb
and
push
push
and
imul
popf
std
sbb
mov
stc
push
push
jne
test
test
sti
xor
cmp
cltd
lock
jnp
sub
clc
fisubrl
adc
movhps
sub
xor
sub
mov
xchg
psubw
xchg
aad
lods
push
mov
daa
or
mov
sbb
mov
sbb
movsl
lock
inc
ret
ds
or
jne
dec
inc
movq
sbbl
pop
imul
adc
in
ja
jb
fcomip
mov
dec
repz
sahf
fidivl
aaa
inc
sub
pop
jno
std
fwait
jle
push
inc
pop
lahf
test
push
testl
mov
inc
adc
mov
mov
imul
mov
mov
sbb
sub
pop
and
mov
mov
sti
test
inc
or
mov
jge
adcb
mov
lret
sub
mov
cmpsl
bound
push
arpl
stc
dec
mov
imul
sub
jp
xor
or
inc
jg
test
jmp
mov
sub
hlt
and
push
dec
cmpb
push
push
xchg
out
pop
cmp
shlb
loope
nop
sbbb
arpl
jae
xchg
inc
insb
inc
aas
ret
and
sarl
fcomps
cwtl
inc
fistps
cmp
lock
dec
test
sbb
jne
xlat
mov
add
in
icebp
mov
pop
inc
mov
lods
addr16
out
cmp
out
ljmp
push
adc
xor
xor
pop
push
adc
ljmp
cmp
lret
icebp
and
push
jg
dec
daa
iret
jae
mov
ror
xchg
pop
sub
sahf
movsl
push
sbb
in
movsb
imul
add
jle
dec
out
add
add
lock
sahf
inc
push
sbb
sbb
mov
mov
dec
mov
hlt
mov
in
mov
cmpsl
xchg
xlat
jecxz
adc
and
sahf
sarb
xchg
add
cmpsb
outsl
pop
jmp
pop
inc
mov
xor
mov
data16
adc
call
cltd
jnp
xlat
push
lret
in
xchg
push
xchg
dec
sbb
and
daa
ljmp
imul
cs
or
ror
mov
clc
shl
add
dec
and
imul
lahf
pop
push
mov
mov
mov
lods
daa
es
test
mov
or
ret
sub
insl
fidivs
mull
rorb
cmp
imul
mov
fcmovnbe
jns
bound
mov
sub
pushf
and
xor
scas
mov
std
adc
add
cmpsl
sbb
xchg
mov
jl
ret
cmp
fldcw
popa
or
cld
ja
fidivs
xchg
ljmp
sbb
rcr
les
jecxz
lret
pop
jmp
je
cmp
add
xchg
mov
clc
fwait
dec
add
addr16
inc
leave
sub
xor
cmpsl
xor
loopne
movl
sub
sarl
xor
adc
roll
call
mov
xor
xor
in
sub
inc
adcb
add
inc
jle
cmp
stos
pop
call
shll
pop
or
jp
sbb
mov
popf
and
faddl
nop
pop
pop
pop
mov
js
testw
mov
iret
mov
repz
sti
pop
outsb
mov
jmp
iret
jne
sahf
mov
add
pmuludq
adc
mov
jns
sub
fmulp
aad
imul
js
pop
std
xlat
xor
aad
xchg
xor
add
jbe
xchg
jle
popa
sbb
sbb
ss
xor
sbbl
inc
push
lret
mov
push
es
xchg
mov
shr
test
mov
clc
push
jbe
roll
dec
fidivl
movsb
lahf
or
push
testl
rcrb
cmp
pop
dec
call
leave
add
xor
jo
push
orb
adc
scas
in
ja
mov
sub
adc
mov
cmp
and
ja
loop
into
aaa
jl
arpl
xor
push
push
rolb
cltd
jge
mov
int3
mov
jmp
push
addr16
and
std
scas
push
popf
dec
mov
pop
aad
adc
out
into
push
shlb
sbb
mov
add
mov
push
and
cmp
xor
sti
sbb
mov
mov
add
stos
jg
rorl
ret
out
punpckhdq
arpl
push
movsl
or
ds
lret
pop
test
lret
and
mov
pop
mov
or
push
cld
push
jmp
fmuls
pop
mov
sbb
push
add
stos
cmp
aam
ret
lds
scas
mov
and
cmp
pusha
or
dec
lods
and
mov
lods
mov
rcrb
das
leave
sub
ffreep
insb
call
sub
pusha
mov
stos
hlt
mov
pop
inc
fsubp
mov
jnp
xchg
fdivs
pop
filds
gs
mov
pop
addl
xchg
mov
outsb
jnp
xchg
into
outsb
repz
inc
push
add
loope
add
sbb
sub
xor
jae
add
out
jg
jbe
push
iret
sbb
dec
xor
rolb
pop
test
pop
lret
adc
cmp
mov
arpl
mov
jb
mov
push
add
cld
fcompl
sbb
xchg
mov
out
stos
xchg
es
mov
jne
cmc
and
sub
xchg
out
xchg
data16
faddl
jae
test
sbb
iret
int
cs
xor
mov
push
mov
scas
xchg
mov
inc
shll
call
cmc
dec
scas
mov
daa
das
out
pop
inc
add
add
push
in
in
push
pop
jle
pop
loop
pushl
jnp
outsl
mov
push
pusha
data16
pop
movsl
jecxz
out
mov
iret
call
sahf
in
loope
gs
sbb
sbb
ljmp
popa
std
sarb
stos
out
outsb
test
mov
loop
inc
dec
shll
cld
push
push
shrb
sbb
ja
loopne
movsb
inc
fwait
dec
cld
pop
pop
adc
or
outsb
pushf
push
pop
jne
or
pop
push
cmpsb
je
push
mov
jae
int3
dec
sbb
fidivrs
fucom
test
or
jae
aaa
ret
jmp
repnz
xchg
jl
xchg
lods
jbe
xorl
ss
pop
insl
imul
cmp
stos
ret
cmc
loopne
stos
xchg
pop
mov
cmp
add
arpl
rclb
fstpt
dec
aaa
mov
in
adc
adc
xchg
and
aad
dec
push
adc
adc
cmp
cltd
fs
les
inc
xor
fistpll
mov
test
in
xor
aas
nop
pop
ret
sbb
sbbb
mov
dec
pop
ja
adc
das
outsl
idivb
shlb
into
movsl
int3
push
mov
cmpsl
in
cmp
les
cmp
pop
sbb
movsb
or
popf
dec
cmp
mov
sahf
dec
lock
push
sub
jmp
jns
push
mov
jg
push
and
mov
lcall
loope
adc
jns
xor
das
int3
mov
iret
cli
insl
mov
add
adc
pushf
cmp
mov
outsb
iret
inc
sub
adc
incl
xchg
adc
add
enter
push
fisttpl
mov
icebp
dec
xchg
ljmp
je
push
sub
or
and
fstpt
dec
mov
mov
imul
aad
movsb
leave
cmp
dec
lods
jae
adc
mov
cmp
adc
movsb
lahf
sbb
insl
mov
mov
lcall
inc
mov
iret
mov
mov
mov
data16
or
cld
jae
sbb
popf
dec
pop
psubusb
and
sti
mov
rolb
into
into
arpl
jne
scas
inc
xor
mov
push
mov
fdivl
pusha
ret
movsl
ret
cmc
test
push
sub
cld
enter
mov
mov
je
xor
repnz
sub
jb
or
inc
and
js
lcall
add
jle
mov
mov
or
cltd
sbb
ret
aad
das
xchg
inc
mov
sahf
data16
push
pop
mov
cltd
ss
fstpl
inc
dec
and
jecxz
insl
or
mov
push
mov
dec
out
xor
leave
test
stos
out
pop
dec
andb
into
repnz
and
into
xchg
lcall
andb
jge
inc
lods
jns
les
jo
push
rcl
das
in
inc
mov
aas
xchg
es
out
cmp
orl
dec
pop
movsb
mov
adcb
xchg
iret
jns
mov
sahf
jb
sbb
jge
cltd
addl
mov
imul
sahf
mov
adc
pop
je
sarl
je
cmp
push
dec
in
mov
sub
aad
dec
ficoms
iret
mov
inc
and
xchg
dec
mov
inc
jo
push
pop
or
jmp
test
mov
xchg
inc
add
ficoms
pop
sar
pop
jmp
shll
xchg
cltd
dec
jo
mov
repz
add
jno
mov
sbb
xor
movsb
rorl
jb
hlt
or
and
mov
dec
rep
adc
pusha
incl
mov
dec
jg
jae
nop
clc
ja
xor
dec
xchg
fwait
shr
xchg
out
into
adc
xor
xchg
out
je
sbb
add
push
pop
hlt
lret
mov
add
and
xorl
shlb
mov
stos
loopne
and
arpl
daa
rclb
mov
fs
mov
push
lea
cmp
icebp
std
mov
xor
pop
orl
fldenv
negl
outsb
xlat
fmull
add
out
push
rolb
dec
or
repnz
fcomi
notb
fistl
jnp
sub
xchg
xchg
pop
xchg
test
test
cmp
mov
ja
iret
jge
or
insl
mov
adc
addr16
cmp
ror
mov
inc
repnz
jle
insb
lret
sbbl
mov
fcompl
and
sub
daa
shl
leave
hlt
out
mov
sbb
jno
add
xchg
push
iret
in
test
cmp
je
inc
aaa
pushf
popf
cmpsl
add
idivb
dec
call
in
test
dec
adc
jg
jmp
scas
mov
push
xor
in
adc
sbb
jecxz
jg
cmp
mov
testl
cmp
arpl
icebp
loopne
iret
std
adc
xor
pop
cwtl
sti
maskmovq
divl
popa
stos
in
lea
inc
sub
subb
and
xchg
je
jmp
pop
sahf
bound
mov
out
call
push
fdivl
es
sbb
push
mov
push
test
lahf
jg
mov
aaa
call
ja
cwtl
push
cmp
dec
jmp
das
jnp
mov
mov
pop
inc
rorl
add
mov
cmpsb
imul
xor
in
xor
add
jge
add
fsubr
aas
mov
pop
test
out
aas
bound
adc
sub
jl
mov
xorb
out
mov
push
lret
lahf
outsb
movsb
test
daa
pop
cmp
loope
push
xchg
mov
sub
movsl
xchg
shlb
imul
shl
pop
inc
fsubrs
sub
pop
fadd
fsubrp
mov
hlt
pop
jo
lock
lret
clc
fiaddl
in
insl
in
mov
sahf
test
outsb
sbb
mov
int3
aaa
fldenv
jnp
pop
adc
add
sub
popf
push
push
mov
arpl
dec
sbb
mov
cli
fwait
jne
dec
mov
xlat
add
sbb
push
jne
jl
and
mov
add
cmpsl
and
fildl
fdivrl
frstor
fisubrl
test
sbb
decb
aas
outsb
mov
ss
pop
enter
or
cmp
cmp
push
sbb
shl
pop
push
lock
in
xor
jmp
add
mov
inc
fwait
cmpsb
imul
mov
sub
xorl
bound
push
adc
mov
push
lds
dec
gs
push
in
cwtl
jo
mov
scas
xchg
jbe
in
pop
jmp
pop
cli
push
xchg
daa
fdivrp
popf
mov
cmp
push
call
sub
mov
sbb
popa
xor
clc
mov
mov
adc
jg
rorl
lea
inc
sub
jnp
push
pop
mov
shll
dec
data16
loope
xorb
mov
lea
sbb
mov
lret
cmp
dec
stc
cmpsb
mov
enter
mov
aad
inc
xor
pop
sar
or
lea
mov
cld
add
daa
pop
cmp
das
aaa
int
nop
movsl
dec
ret
subb
xchg
inc
jns
out
inc
push
jno
xchg
and
inc
outsl
mov
and
in
sahf
lret
dec
dec
sbb
pop
sbb
cli
dec
jp
dec
inc
mov
enter
sub
movsl
mov
lret
sub
or
or
mov
push
rorb
aam
scas
ret
add
out
adc
addb
arpl
xchg
adc
popf
repz
inc
fdivrp
flds
test
dec
pop
rcrl
cmp
mov
fidivrs
adc
lahf
mov
xchg
jb
incb
rclb
daa
in
add
add
cmpsb
sahf
cltd
dec
fbld
jmp
fdivrs
push
imul
mov
sub
add
loop
mov
popf
xor
scas
mov
mov
pop
mov
loope
les
stc
push
sbb
or
inc
add
mov
roll
lea
adc
or
add
cmp
adc
xlat
cwtl
fld
or
dec
test
or
add
add
gs
lock
jb
test
js
popa
out
sbb
ss
ja
push
sbb
movl
mov
call
fiadds
scas
in
mov
jecxz
rol
fiadds
sbb
mov
aaa
aad
stos
xchg
sub
xchg
jmp
arpl
push
cwtl
cmpsb
ss
xor
push
icebp
xchg
fistpl
xor
mov
mov
mov
aas
test
shrb
sti
mov
and
addl
in
lcall
scas
pop
out
cld
daa
outsl
jb
and
call
and
subl
add
cltd
movsb
xchg
inc
jnp
jno
or
outsl
loop
push
push
bound
cld
fstpt
iret
data16
dec
mov
sub
sbb
mov
loop
sub
sub
push
out
or
jnp
mov
lret
nop
xor
xchg
shrl
cmp
test
inc
lahf
and
jp
lea
js
xchg
enter
sub
jbe
push
add
adc
dec
and
dec
dec
fwait
mov
or
ficoml
xlat
mov
or
lods
les
dec
adc
popf
and
out
jl
lods
jo
adc
repz
imull
lods
stos
push
xor
xor
or
nop
adc
mov
data16
movsl
jecxz
mov
mov
jl
adc
mov
sub
mov
test
inc
mov
popa
sbb
ljmp
adc
mov
and
outsl
cmp
adc
into
test
sbb
scas
cmp
sub
ja
mov
xor
push
inc
and
test
xchg
and
and
jg
lcall
inc
pop
popf
mov
mov
xlat
loop
mov
push
jae
iret
mov
inc
lock
pop
pusha
testb
mov
es
push
inc
cmpsb
or
and
add
pop
adc
imul
xchg
inc
pop
jecxz
adc
adcb
xchg
clc
jecxz
mov
cwtl
pop
imul
sub
pushf
cmp
inc
stc
jo
adc
es
das
flds
dec
roll
into
cmp
ds
in
cs
push
dec
loope
cmpsb
rcrb
imul
mov
lret
mov
sar
and
mov
inc
cmp
cli
stos
dec
int
xor
dec
xor
xchg
cmc
decb
int
fistpll
adc
push
pop
imul
rorb
add
fxch
fstl
pop
dec
test
sbb
jle
xchg
aaa
fsubl
pop
push
cmpsl
jbe
pop
xchg
jae
jno
cmp
mov
lock
arpl
and
adc
add
xchg
push
shlb
outsb
mov
mov
push
das
stos
xchg
xchg
mov
or
inc
cmpsb
or
cmpsb
ds
bound
js
sbb
lods
xchg
jmp
dec
adc
push
cmp
add
jl
push
adc
or
scas
and
lds
sarb
js
or
cmp
push
mov
andl
jecxz
adc
arpl
pop
stc
jb
pushf
loopne
imul
cmpb
fidivrs
das
mov
xor
into
cmp
mov
and
popa
cmp
push
lcall
test
jle
nop
dec
hlt
add
and
mov
sbb
jae
test
movsb
mov
pop
sti
aas
mov
sub
mov
das
int3
in
mov
adc
or
icebp
xlat
pop
jp,pn
pop
xchg
xchg
mov
dec
jno
or
add
iret
cmp
pop
pop
jnp
lea
lret
in
xchg
lods
movsl
loop
and
mov
mov
cmpsb
xchg
mov
scas
push
repz
push
aas
mov
pop
sbb
pop
stos
les
mov
insb
arpl
jg
push
shlb
push
gs
inc
or
les
mov
insb
lds
pop
jnp
daa
cli
xor
pop
shrl
xchg
out
ficoms
arpl
push
mov
jo
xchg
xlat
in
sbb
mov
mov
mov
leave
lahf
mov
gs
jecxz
mov
jbe
int
scas
mov
aad
aad
jae
pop
ret
cmpsb
sub
mov
mov
jae
pop
adc
aaa
inc
sti
lds
rclb
xlat
jnp
add
push
push
sarl
jne
push
bound
push
cltd
inc
cmp
int
and
fcomps
pop
inc
jecxz
xor
sbb
pop
jne
sbb
sbb
xor
outsl
jo
jp
cmc
xor
scas
lahf
push
shll
xor
cmp
push
js
mov
push
lret
in
jle
inc
push
sbb
cmp
jl
in
sarb
ds
xchg
mov
xor
mov
sahf
movsl
imull
xchg
mov
leave
movsb
testl
pop
insb
inc
cmpsl
jb
fists
mov
jb
sub
lret
pop
iret
das
imul
lds
enter
leave
sbb
out
xchg
inc
std
fcoms
loopne
roll
rorl
repnz
push
pavgw
dec
fisttpll
or
push
lods
and
loopne
mov
insl
gs
xchg
rorb
jmp
adc
jae
xlat
sbb
mov
rcrb
sbb
dec
pop
xchg
fdivs
hlt
jg
xchg
insl
aaa
add
add
movsb
mov
dec
test
daa
je
fimuls
je
cmpsb
and
ljmp
or
adc
out
loope
mov
ret
mov
inc
mov
pop
icebp
mov
jno
push
mov
jae
jnp
movsb
lea
mov
jl
jbe
insl
frstor
add
cld
fistpl
mov
jae
pop
in
inc
repz
mov
adc
movsl
mov
into
pop
sub
xor
xor
loop
or
sbb
cmpsw
addl
notl
inc
pop
cmpsl
sbb
rorl
jo
add
mov
mov
and
fadds
mov
xchg
jmp
test
dec
je
jo
and
cs
enter
and
and
scas
pop
cltd
ret
gs
vcvttss2si
push
sub
dec
das
shll
jnp
test
mov
mov
mov
xor
pop
loop
scas
xchg
and
out
out
sub
or
subl
sub
xchg
es
loope
incl
jg
xor
push
and
adc
pop
push
addr16
scas
les
loopne
mov
call
and
test
xchg
dec
sahf
jo
lods
scas
aad
and
xchg
mov
mov
dec
ss
imul
jle
sbb
xor
aaa
jmp
pop
pxor
xor
lcall
int3
shll
inc
in
mov
ja
fsubrl
push
and
lret
lahf
out
popa
mov
in
push
aad
ds
mov
mov
loop
js
add
jno
jo
rcrl
shlb
inc
popl
push
rcl
pop
data16
aas
and
add
idivl
bound
out
cmp
add
loop
scas
adc
fsubs
enter
jecxz
mov
pop
mov
jl
adc
jge
imul
fwait
mov
stos
loopne
pop
push
mov
cmp
jbe
popa
inc
out
ss
add
inc
sarb
lds
call
dec
mov
dec
popa
and
dec
lods
jl
call
repz
shll
jne
and
jmp
jns
add
mov
and
push
lods
hlt
mov
and
and
out
ds
pusha
jnp
push
and
jg
pop
jmp
mov
pop
push
aaa
shll
fwait
nop
imul
sbb
das
je
mov
jb
out
stos
in
das
sbb
test
cmp
out
adc
addr16
lock
mov
pop
push
xor
dec
fisttpl
cmc
std
mov
arpl
lods
mov
mov
mov
pusha
jge
push
sbb
and
lret
and
bound
lods
adc
gs
or
das
push
xchg
in
or
xchg
sbb
scas
sub
testb
jns
jnp
or
mov
pop
cmp
rol
fbstp
dec
test
mov
outsl
xchg
pop
push
ljmp
les
mov
fldl2e
xor
push
movsb
sar
scas
dec
xchg
rcrl
pop
movl
rcl
jg
enter
mov
xchg
lods
push
lcall
pop
pop
nop
mov
push
sbb
inc
mov
out
fiaddl
stos
je
lret
movsb
inc
das
mov
mov
rclb
fimull
daa
shr
push
pop
pop
gs
clc
fstp
out
sbb
sbb
ss
push
sti
or
dec
xlat
fnstcw
and
mov
rorl
bound
sub
mov
out
mov
andl
mov
dec
inc
adc
jnp
scas
icebp
xor
mov
into
sub
call
dec
pop
mov
mov
in
push
pop
or
mov
cmp
subl
repz
adc
cmp
mov
push
imul
pop
shll
add
je
or
stos
jmp
jo
inc
sbb
jno
mov
lea
ret
gs
push
clc
jmp
pop
repz
test
divb
rdtsc
push
in
gs
mov
mov
out
sbb
dec
aad
out
insl
dec
icebp
popa
mov
insl
jo
mov
fdivs
imul
jp
push
push
jecxz
ret
pop
iret
push
mov
push
mov
push
push
jo
lcall
cmc
mov
pop
testl
mov
shlb
xchg
ja
inc
mov
pop
stos
lahf
clc
pushf
out
cli
dec
iret
ds
cmp
and
stos
sub
fcmovnbe
stos
pop
jb
les
shll
cli
outsb
mov
mov
xor
and
call
add
sub
mov
mov
imul
loope
popa
sub
sbb
sub
jp
jo
stc
pop
push
cmpsl
push
sub
inc
iret
mov
sarl
pop
les
repz
push
test
jge
dec
leave
daa
and
add
in
out
movsb
repz
aad
mov
lea
xchg
sub
repz
dec
popl
cmp
fs
mov
daa
sub
aad
jo
fcompl
push
adc
lret
jnp
mov
cltd
div
leave
push
hlt
mov
adc
stos
jnp
data16
xchg
mov
call
xor
and
sub
inc
mov
je
std
jecxz
dec
scas
push
insb
ret
out
pmaddwd
mov
dec
sbb
mov
testb
jae
and
pop
xchg
dec
mov
int
outsb
daa
and
add
clc
shlb
sahf
enter
dec
pop
xchg
mov
add
jno
jbe
insb
rcrl
or
cwtl
add
and
cmp
loope
mov
dec
sahf
mov
inc
sub
xor
fimuls
outsb
xor
jg
ret
repz
jp
jl
pop
cwtl
cmp
movsl
adc
call
mov
imul
sbb
iret
mov
dec
cmc
sbb
int
mov
xor
lods
mov
outsb
rcll
mov
sub
int
popf
aam
sarl
ss
mov
ficomps
push
inc
push
clc
cli
and
outsb
rorl
add
pop
push
or
push
jl
ret
jae
loope
and
adc
sub
jns
xchg
push
push
insl
or
xchg
pop
sub
pop
push
inc
mov
data16
movsl
cmc
xlat
das
filds
mov
adc
rorb
arpl
in
pop
in
cld
int3
push
push
or
repz
ss
movsl
jbe
push
jg
sbb
adc
xor
and
mov
xchg
sub
mov
iret
lds
inc
jecxz
or
fdivrl
or
nop
push
stc
pop
add
jns
push
xchg
arpl
jp
jae
out
out
xor
fildl
imul
add
fs
pop
xchg
sub
cmp
in
int
addr16
sbb
lods
cmp
dec
push
jecxz
push
mov
orb
scas
out
cmp
lahf
push
sbb
sub
aas
js
int3
scas
mov
scas
stc
mov
or
xorl
push
add
push
loop
sbb
pop
mov
dec
pop
xlat
sti
out
ljmp
pop
dec
repz
call
mov
dec
pusha
push
nop
test
jge
mov
jl
cmp
stos
addr16
jne
add
out
inc
mov
int
fdivrl
out
jecxz
ss
cmp
jp
mov
pop
jmp
jecxz
mov
push
mov
xchg
aas
or
imul
push
adc
xor
out
sub
std
mov
push
mov
daa
pushf
jb
stos
push
dec
push
lret
cmp
data16
out
out
push
dec
pop
and
icebp
mov
sbb
je
out
pop
bound
jecxz
push
negb
enter
or
sbb
cmp
mov
pop
not
es
pushf
sbb
push
lret
sti
push
push
sbb
jg
sarb
or
pop
cld
pop
mull
inc
lods
ret
daa
mov
adc
dec
dec
inc
or
es
mov
push
adc
cltd
das
jae
in
icebp
pop
arpl
das
sbb
cs
mov
add
add
push
add
int3
aad
sbb
cs
insl
sti
and
dec
outsb
mov
in
in
add
cwtl
or
ja
adc
adc
cmp
repz
insl
jns
addr16
sub
das
cld
daa
loope
xchg
cmp
dec
mov
dec
call
mov
dec
xor
out
jbe
pop
jmp
ljmp
xor
into
mov
les
add
xchg
movb
cmpsb
sbb
jge
repz
aam
inc
xchg
xlat
cld
js
test
mov
push
sub
jno
lods
and
and
dec
sbb
jno
rclb
inc
xchg
repnz
xor
rcl
cmpsl
jns
push
mov
fwait
dec
std
roll
adc
aad
push
icebp
clc
jnp
movsb
cmp
arpl
aam
fsubrl
add
add
dec
fcompl
pop
pop
gs
sbb
jns
ds
out
out
xor
aam
dec
xchg
aad
xor
jno
int
jge
add
lret
in
into
aam
into
mov
cli
jg
popf
dec
add
shlb
add
imul
cmpsl
mov
xor
xchg
add
fwait
mov
or
mov
lret
aam
jmp
dec
lea
inc
xor
inc
and
mov
xor
jmp
xor
setp
unpcklps
dec
push
orb
jg
adc
or
inc
loope
ret
add
aas
add
add
fsubl
mov
fs
dec
cmp
mov
push
cmp
sahf
dec
xor
mov
push
data16
aaa
pop
adc
pushl
jns
sbb
ret
mov
xor
and
xor
hlt
stc
pop
inc
pop
inc
mov
hlt
push
ret
inc
xchg
xor
jbe
cltd
jg
pop
xchg
jmp
cwtl
inc
jl
aam
sbb
outsb
xchg
xor
push
bound
mov
scas
dec
xchg
jg
and
dec
jp
stos
xchg
cmc
jmp
push
out
stc
testb
gs
lods
sbb
cmp
mov
idivb
pusha
or
xlat
jo
and
pusha
js
add
dec
outsl
and
and
sbb
sbb
mov
add
repz
dec
jae
and
sarb
in
clc
or
dec
popf
andl
aaa
fwait
pop
sarl
int
push
push
mov
popa
icebp
mov
lods
and
repnz
les
xchg
inc
adc
xchg
dec
dec
add
pop
cld
sahf
add
ds
scas
aaa
xchg
dec
lahf
in
rcll
and
and
fprem
repnz
cmpsl
inc
cmp
or
mov
cmpsl
dec
xchg
cmp
test
out
pop
sub
mov
mov
stos
push
call
pushf
cmp
jne
push
out
clc
cmp
repz
jecxz
test
std
pop
mov
xor
std
fimuls
or
inc
and
fsubl
xor
mov
sub
or
negl
aam
jno
cld
jg
fs
sbbb
sub
add
hlt
sub
fisttps
mov
jbe
sarb
mov
jp
pop
int3
jl
arpl
jecxz
add
test
imul
add
arpl
sbb
mov
or
arpl
fisubrs
das
sbb
out
mov
fisubs
popf
pushf
test
push
pop
test
fucom
push
mov
ja
or
insb
and
push
pop
scas
fcomip
jnp,pn
xorb
popf
pop
mov
dec
fidivrs
mov
out
rcll
inc
repz
pop
test
popa
pusha
jl
push
insl
sub
insb
xor
dec
adc
mov
cmp
adc
fwait
dec
jb
jbe
sub
xor
lea
xrelease
sbb
clc
add
mov
pop
xor
cld
or
vmaxpd
loop
lods
js
or
mov
sub
fmuls
jmp
in
subl
fnstsw
gs
dec
xor
popa
and
or
imul
stos
sbb
mov
pop
out
mov
ret
xlat
pop
dec
pop
lods
ja
mov
sbb
call
idivb
or
in
cmp
test
mov
cld
xchg
or
scas
sub
add
dec
push
push
jns
mov
xchg
mov
adc
xchg
push
pop
and
adc
xchg
sbb
nop
push
mul
sarl
loopne
test
pop
inc
xchg
mov
jp
sahf
inc
jns
and
adc
dec
push
ret
test
sub
es
into
sti
test
push
std
incb
stc
ror
popf
sub
xchg
aam
movsl
xchg
inc
xchg
adc
cmp
test
push
add
sahf
test
and
jl
inc
gs
rorb
out
nop
decb
jmp
add
call
xor
cmpsb
jne
aam
out
aas
and
pop
push
adc
dec
imulb
addr16
adc
test
pop
js
pop
lahf
enter
push
scas
in
xor
fisttpll
je
lret
loop
mov
cli
jle
out
scas
iret
ja
fbld
cmpl
push
repnz
jo
jmp
repnz
mov
in
add
fsubl
push
sar
cmpl
popf
adc
cmc
mov
push
scas
jmp
aad
iret
dec
mov
cmp
xor
xlat
xchg
and
xchg
push
out
xchg
pop
push
fs
fidivl
pop
cwtl
sti
mov
add
adc
cmp
stos
addr16
lahf
xor
mov
push
adc
lcall
add
std
mov
sub
int
in
cmpsl
rolb
mov
cmpsb
daa
xchg
ror
or
call
repz
sub
cld
test
xchg
jmp
ds
test
inc
inc
xchg
xchg
pop
loope
nop
jmp
int3
out
dec
sub
ja
jbe
mov
lods
mov
aam
out
jmp
jl
stos
flds
or
arpl
push
daa
dec
mov
outsl
mov
jo
inc
lods
fistpl
or
dec
ret
rorl
lret
jg
add
lret
leave
inc
mov
lods
sub
mov
mov
adc
outsb
or
into
dec
xor
push
insb
ljmp
aad
cmp
pop
rcll
ret
repz
in
mov
sbb
sub
test
xchg
nop
xchg
imul
sbb
out
pop
in
call
aam
mov
pop
push
xor
and
dec
dec
jnp
mov
adc
stc
fildll
jl
imul
sbb
data16
insb
sbb
inc
sahf
mov
rolb
jg
gs
push
add
inc
leave
mov
jp
jle
mov
dec
push
test
in
pop
mov
pop
and
jmp
clc
divl
jp
xor
aaa
lret
mov
cltd
iret
shlb
dec
popf
xchg
shrb
push
addr16
shrb
mov
inc
and
cmp
scas
loope
clc
fiaddl
mov
test
inc
xor
ja
cmpsb
insl
rolb
jecxz
andb
sub
or
ds
add
test
scas
lock
cmpb
jmp
inc
lods
sahf
add
xchg
ss
orl
sbb
and
out
push
mov
dec
movsb
add
pop
sti
mov
sbb
xor
and
push
push
cmp
repnz
repnz
push
cmpsb
pop
xor
jbe
cmp
mov
push
inc
jecxz
std
js
pop
and
pop
mov
ret
movsb
jl
jmp
or
jbe
pop
mov
jno
out
outsl
push
dec
mov
pop
mov
ret
push
jo
push
mov
in
sbbl
into
push
cmp
and
mov
sarb
imul
mov
pop
std
das
and
dec
and
je
lea
sbb
mov
popf
mov
pusha
xchg
pop
outsl
loop
test
cmp
push
mov
sbb
mov
out
cmp
or
sbb
lcall
push
or
xchg
insb
inc
mov
in
test
jne
in
pop
mov
lahf
mov
out
lcall
jg
xchg
dec
mov
mov
mov
call
call
mov
push
in
adc
cmp
fdivrl
mov
lds
cmpsl
mov
fidivrl
push
mov
mov
test
sbb
js
clc
fidivrl
imul
testl
push
out
sub
jo
mov
ljmp
iret
mov
stos
sahf
and
or
das
cmp
pop
lods
sub
push
sarb
or
mov
and
mov
mov
mov
js
fwait
pop
push
cs
lcall
xor
sbb
inc
push
jo
or
mov
and
xchg
sbb
loop
adc
jp
jecxz
dec
xchg
aad
sahf
and
mov
fwait
testb
xlat
aad
mov
mov
mov
lods
jle
aad
hlt
xor
adc
or
mov
pop
sub
inc
jne
xchg
adc
xchg
mov
popa
fmull
cli
insb
mov
cmp
jg
lea
inc
in
js
push
cmp
xchg
lds
xor
pop
pop
mov
leave
or
leave
sub
or
mov
sahf
pop
mov
loop
xchg
sub
cmp
js
sub
inc
mov
in
mov
mov
iret
xchg
ret
and
nop
outsb
aad
jne
stos
sahf
andb
inc
loop
pop
movsl
xchg
pusha
in
mov
out
cmp
push
sahf
adc
test
jae
enter
add
mov
cmc
mov
shr
or
sbb
aas
jbe
pop
call
cli
das
inc
mov
jle
push
sub
sarl
cmp
iret
cmp
xor
push
nop
scas
sub
xchg
sbb
rcr
cli
dec
dec
dec
cmpsl
cltd
aas
jnp
insl
in
ljmp
testl
fcomi
jle
jmp
imul
xchg
aad
fsubrs
inc
pop
es
cmp
mov
push
into
mov
and
inc
sti
out
cmp
inc
inc
iret
push
mov
pop
into
ds
nop
jg
adc
xor
ret
xchg
sbb
inc
dec
sbb
and
cmc
lcall
jge
fs
add
dec
adc
jb
shl
mov
cmp
jb
mov
dec
subb
loop
add
and
push
mov
roll
ret
addl
push
shl
pop
xor
mov
lahf
insb
adc
add
pop
push
xchg
and
sar
sbb
and
push
shlb
jno
adc
sub
adc
sarl
push
sub
pop
or
xchg
jp
pushf
dec
psadbw
aam
adc
divl
mov
inc
mov
cmp
je
repz
mov
jle
jg
sbb
aaa
divb
inc
mov
loope
mov
test
sbb
negb
sub
sbb
pop
rorb
mov
stc
push
mov
jae
ret
fldenv
xor
add
add
inc
test
out
cmp
out
ja
cltd
fstl
in
add
inc
ret
inc
flds
mov
mov
add
xchg
cmp
test
shrb
sub
clc
les
and
fs
dec
inc
mov
sbb
xor
mov
sub
outsb
jbe
clc
je
mov
dec
ja
mov
outsl
jp
neg
lcall
pop
rorl
fadd
dec
addr16
dec
cli
test
in
js
xor
xchg
and
icebp
sub
cmp
push
test
stos
repz
sahf
aaa
and
adc
lods
andl
jne
arpl
push
sti
lods
mov
adc
into
iret
nop
mov
jne
cwtl
addb
mov
je
loopne
in
or
xchg
adc
inc
mov
push
imul
aaa
fldenv
inc
mov
adc
int3
mov
adc
ds
or
xchg
inc
cmp
inc
movsb
ja
int
or
in
rcrb
jl
outsb
push
lahf
test
ret
and
push
xor
aam
clc
lock
nop
sub
std
repz
and
cli
outsb
test
or
lock
mov
jae
mov
mov
in
xchg
xor
loope
push
cmpsl
sarl
push
les
xor
dec
or
aad
xor
push
inc
dec
sbb
xchg
add
xlat
pusha
es
cmp
dec
jne
jbe
mov
adc
pop
popa
out
pop
jne
fisttpl
mov
popa
test
aas
out
dec
sub
push
sbb
mov
mov
fstpt
xchg
cmpsl
add
aad
jecxz
sub
iret
sahf
ja
jae
sbb
adc
mov
pusha
dec
adc
sub
rcl
push
cltd
push
dec
in
hlt
push
int
pop
es
out
cmp
sub
mov
addr16
and
iret
mov
xchg
push
mov
jle
addr16
cld
mov
adc
pop
cmc
xorl
enter
sub
lret
ljmp
cmp
in
aam
arpl
cwtl
jo
in
or
pcmpgtb
fisubrs
lds
test
mov
dec
lcall
lds
shrl
pop
jnp
out
sbb
scas
or
push
test
pushf
adc
dec
xchg
aaa
and
or
sub
xchg
jmp
push
inc
xor
lret
adc
outsl
ror
add
add
pop
lds
sub
xchg
push
int3
dec
mov
add
aaa
faddl
fdivl
sbb
sub
add
xchg
sbb
sub
push
cmp
pushf
jo
mov
jp
jbe
sub
divl
mov
scas
sub
addr16
or
dec
stc
xchg
repnz
or
cmc
cs
dec
mov
sub
rorl
outsl
mov
sbb
jne
loope
and
inc
out
or
cmp
mov
mov
stos
cli
mov
inc
xor
dec
pop
adc
dec
jge
dec
dec
icebp
cmc
sti
aad
mov
add
and
movsl
fists
add
and
sbb
adc
xchg
out
dec
jge
dec
push
nop
add
int
and
inc
cmc
add
cmp
addr16
test
mov
sbb
lods
mov
mov
aas
orl
xor
shll
xchg
lds
fwait
lret
sahf
aas
inc
insb
sahf
ja
mov
call
loop
ss
dec
mov
pushf
pop
dec
jnp
dec
arpl
xchg
mov
pop
and
or
lret
cmp
clc
sub
dec
rcl
mov
js
lret
aad
dec
inc
dec
or
mov
dec
xchg
mov
pop
cld
int
fisubl
cmp
push
mov
xchg
iret
add
call
and
call
stc
inc
or
stos
dec
int
sub
push
btc
push
jmp
jno
fidivs
out
out
mov
sbb
roll
insl
pop
xor
mov
cmp
push
mov
mov
nop
mov
dec
fisttpll
inc
dec
pop
sti
jmp
cltd
push
je
outsl
out
pop
lret
jl
adc
dec
mov
pop
arpl
imul
aaa
ss
pop
jl
mov
outsb
inc
scas
cmpl
jnp
cld
negl
dec
or
iret
arpl
mov
adc
jns
jp
in
jp
mov
xor
fstps
pop
fistps
lds
lea
pushf
xor
jg
pushf
mov
xchg
stos
les
push
bnd
fsubl
add
call
dec
xor
mov
addl
andl
cmpsb
cwtl
outsl
xchg
call
inc
lahf
pop
in
xor
push
push
fistpl
push
aaa
movsb
mov
lods
popa
out
das
fiadds
ds
dec
mov
xchg
sub
and
dec
mov
insb
xor
inc
mov
or
dec
jge
xchg
xchg
push
scas
in
es
dec
and
fdivrs
in
adc
nop
mov
mov
lcall
or
mov
lods
pop
inc
dec
and
fisubrl
mov
je
push
rcl
jbe
out
push
popl
push
pop
jns
sbb
andl
and
xor
pop
or
es
inc
insl
int3
cmovp
stos
adcl
add
mov
xchg
mov
out
sub
jmp
insb
aaa
cltd
fsubrl
adc
sub
sub
arpl
xor
js
adc
adc
push
lea
mov
inc
xor
nop
gs
mov
pop
out
stc
cli
sub
sub
movsl
push
xchg
push
mov
nop
mov
nop
push
daa
push
fildll
adc
add
inc
fsubs
sub
add
jo
mov
out
xchg
jae
xchg
aas
enter
and
add
mov
sbb
ja
into
cwtl
mov
inc
mov
rcl
sub
push
push
shrl
inc
mov
jecxz
pop
cmp
inc
rorb
cli
sbb
imul
jmp
mov
stc
shl
or
int
and
sub
gs
pop
pop
mov
cli
xchg
sub
cmp
add
test
std
cld
repnz
std
nop
insb
mov
call
out
daa
addr16
mov
mov
scas
adc
cs
push
loop
lods
jge
and
lahf
lret
int3
jmp
outsl
pop
lock
stos
cmp
sbb
std
xchg
xchg
xchg
movsl
dec
jl
scas
decb
gs
sbbb
incl
xchg
out
pop
xchg
pop
mov
in
pop
les
add
jbe
popa
mov
add
pop
outsb
add
inc
xor
pushf
scas
movsb
loope
repnz
adc
gs
into
pop
enter
mov
popa
ret
jg
mov
ret
inc
pop
jg
xlat
add
jl
jb
sahf
xlat
xchg
nop
les
add
sub
cmp
fisubl
or
ret
mov
sub
xor
mov
push
shlb
loop
outsl
add
push
and
insl
stos
movsl
aaa
adc
pop
dec
mov
mov
rcl
es
stc
push
in
pop
jp
loopne
xchg
arpl
xor
lock
popf
mov
xchg
or
fwait
push
xchg
notl
repnz
int
out
aas
test
icebp
loopne
and
mov
mov
adc
jle
imul
stos
push
lock
and
cmp
out
stos
sub
cmpl
sarl
lods
pop
xor
pop
pop
push
leave
dec
sub
test
sbb
aad
in
and
adc
cmp
xchg
cwtl
mov
dec
push
dec
stos
push
push
loop
out
xor
sbb
inc
sub
mov
push
mov
mov
into
insb
sub
iret
push
xchg
add
pop
cli
push
shl
aaa
int
aas
hlt
call
inc
push
fdivl
fwait
sbb
lret
push
cmc
jmp
icebp
inc
xchg
lahf
enter
pop
sub
mov
lahf
pop
xor
in
mov
adc
xor
lds
mov
setns
test
fsubs
add
sub
out
push
stos
das
call
or
and
out
hlt
ficoms
lret
inc
push
add
cmpsl
sbb
or
sbb
inc
mov
jns
pop
lods
xor
dec
mov
xchg
lret
pop
sub
push
or
xchg
sahf
jl
test
leave
imulb
mov
xchg
inc
ds
pop
jge
gs
sub
cmp
prefetcht0
in
into
push
fwait
je
mov
pop
adc
add
aad
stos
nop
faddl
inc
cmp
lea
in
mov
outsl
mov
out
rorb
or
mov
fiadds
fwait
movsl
push
dec
bound
cmp
jle,pt
cmpsb
loop
sub
ficoms
xor
fs
pop
lods
enter
mov
sub
xor
subl
insb
mov
lock
pop
insb
mov
loope
loopne
inc
mov
mul
js
sbb
jmp
clc
fcoml
loop
sbb
out
dec
or
lods
cmp
ds
mov
xchg
pop
fdivs
mov
shl
mov
stos
xor
das
sbbl
xchg
or
and
or
mov
cmp
sub
dec
icebp
out
or
out
xor
sub
mov
ss
xor
jmp
xlat
cmp
dec
ds
test
pusha
lock
mov
dec
inc
loopne
je
mov
aad
fs
mov
outsl
jb
fs
fsub
dec
or
aam
mov
adc
scas
mov
push
jo
pop
mov
xchg
push
test
das
in
out
and
test
mov
cmpsl
pop
stos
loopne
pop
sbb
inc
sarb
jl,pt
int3
xor
jmp
aad
pop
xchg
fsubs
push
and
lock
iret
test
mov
and
cwtl
xor
dec
and
pushf
mov
push
xchg
inc
frstor
add
push
jl
aam
dec
outsb
nop
sbb
push
lds
bound
adc
aad
insl
repz
mov
push
xchg
je
in
mov
mov
cmp
mov
and
popl
fcoml
xor
xchg
ds
or
mov
pop
mov
je,pt
shll
aaa
xor
xchg
xor
stos
push
into
push
pusha
mov
movsl
xchg
adc
jb
and
fisubrs
sub
ret
inc
inc
pusha
pop
and
outsb
addb
stc
cmp
jl
test
lds
ficomps
movb
repz
hlt
stos
mov
out
movsb
lahf
je
push
pop
data16
or
adc
mov
mov
fcmove
out
push
loop
fildl
mov
lcall
pop
in
add
sbbl
nop
movsb
out
pop
inc
addb
stos
inc
mov
push
mov
addl
cmpsl
or
ja
push
dec
dec
jo
push
das
jns
fstps
shll
pushf
inc
pop
mov
lock
aas
movsl
rclb
xor
in
lods
insb
sbb
fstpl
mov
outsb
xlat
test
pop
je
inc
repnz
sub
rcll
sub
mov
stos
pop
popa
jns
push
push
cmp
mov
outsl
iret
xchg
lock
sbbb
sub
push
pop
clc
movsb
pop
pop
adc
orl
ret
out
fidivrl
pop
out
mov
fdivl
lock
jne
pxor
shrb
dec
jbe
imul
jecxz
sub
filds
add
sbb
sti
inc
adc
jno
aas
adc
ret
xor
stos
sbb
roll
inc
pop
lea
xor
loope
rcll
sahf
mov
in
cmpsb
shlb
push
dec
jmp
mov
movsb
insb
sbb
jp
sahf
dec
cs
popf
add
cmp
inc
ret
push
cmp
popf
push
push
rorl
pop
sub
inc
shl
sti
sub
xor
adc
sub
sub
mov
clc
mov
and
fisubs
and
xor
jo
jmp
fcoml
icebp
out
repnz
fucomi
or
scas
rorl
jmp
and
int3
imul
xorb
iret
fwait
pop
js
jmp
xchg
mov
push
mov
sahf
test
into
fst
std
int
jg
xor
push
jae
movsl
lahf
and
rcrb
inc
out
sti
lret
or
adc
jns
or
lea
inc
fdivrl
mov
mov
adcb
inc
mov
cmp
cld
test
idivb
sub
mov
aaa
in
and
in
addl
mov
ret
mov
aaa
jmp
adc
mov
lcall
out
insb
test
dec
pusha
mov
mov
cmpsl
adc
mov
fsts
std
cmp
in
fdivrl
jge
mov
subb
mov
decl
mov
and
cld
sarb
push
add
out
pop
pop
sahf
xlat
and
jbe
in
push
pop
mov
pop
ror
jg
popa
sub
add
je
aaa
in
dec
adc
add
lahf
fistps
add
push
push
mov
andl
popa
mov
lods
cmc
and
sbbb
push
fnstsw
xchg
sbb
fdivrs
xor
jbe
fsubp
aad
popf
stc
inc
sub
mov
ljmp
loope
pop
adc
xchg
inc
push
mov
xor
rorl
dec
xchg
sarb
jmp
nop
mov
std
jns
pop
or
insl
jns
add
ljmp
dec
ficoms
in
dec
cltd
push
mov
sbb
and
push
and
test
imul
imul
cli
je
outsb
mov
rolb
cmp
leave
lcall
mov
jg
inc
add
adc
mov
das
inc
mov
cld
inc
jnp
mov
sbb
xor
pop
fsts
push
and
or
push
pop
lods
and
lret
insl
inc
lods
enter
adc
cmp
aam
ss
jg
aas
aam
push
pop
insl
sbb
outsb
cmp
sbb
loopne
xchg
inc
lea
mov
push
jecxz,pn
mov
out
ret
pop
mov
push
xor
add
pop
sbb
ja
sbb
mov
pusha
dec
std
movsl
adc
jg
dec
mov
das
scas
sbb
mov
push
mov
lea
push
inc
fs
add
pop
addr16
outsb
xchg
sub
sarl
mov
out
xchg
fsts
test
shll
pop
call
mov
pop
or
mov
pop
shl
lods
inc
xchg
dec
cld
mov
ror
jae
sti
mov
mov
mov
sbb
cltd
rorb
pop
and
xor
sbb
push
mov
lcall
in
icebp
mov
mov
xchg
fdivr
fiadds
jp
pop
sub
add
and
ficomps
xor
push
add
xchg
fists
pusha
mov
and
outsl
ja
fucom
xor
mov
pushf
sub
inc
aam
scas
ljmp
push
adcb
insb
mov
pop
push
inc
xchg
in
addr16
push
sbb
mov
lock
mov
scas
lds
decl
lret
stos
mov
push
lods
xchg
adc
ljmp
sbb
add
ffreep
jmp
arpl
sahf
in
pop
lahf
es
jg
and
dec
lahf
ret
js
popa
decb
fwait
lret
das
popf
xlat
in
fs
adc
jo
xchg
popf
inc
lret
mov
xlat
sub
ret
ret
mov
hlt
int
cmc
js
mov
mov
mov
fcoml
add
call
dec
jg
stos
xor
lahf
xchg
incl
icebp
fdivrl
hlt
and
xchg
sbb
insl
repz
nop
lcall
xchg
xor
push
pop
pop
data16
jmp
pop
jns
mov
fisubl
inc
hlt
std
insb
adc
mov
loopne
sub
in
stc
adc
addb
ret
imul
mov
mov
jmp
scas
shlb
dec
iret
call
sarb
lcall
fnstenv
dec
rol
or
and
lahf
push
or
imul
bound
sbb
mov
add
loopne
or
push
push
adc
push
pop
xor
loop
xor
push
daa
lret
movb
loope
cmp
movsl
push
ficompl
clc
insb
sbb
mov
int3
push
sets
and
pop
xor
adcl
mov
addr16
push
test
fs
stos
xor
cwtl
ret
jg
ds
mov
or
mov
jb
rcrl
iret
and
dec
rcrl
pusha
xor
ficoml
and
adc
ljmp
jg
loope
add
iret
sbb
and
stos
xchg
faddl
scas
inc
sbb
fldenv
mov
mov
adc
insb
imul
scas
outsb
cmp
es
fwait
dec
aam
or
sub
or
out
sti
mov
add
arpl
mov
cmpsl
out
jmp
xchg
xchg
std
mov
and
lea
lock
dec
pop
fstpl
add
mov
jle
sub
outsb
shl
dec
mov
inc
movsl
dec
jp
inc
mov
data16
sub
jbe
inc
cmc
into
xor
xchg
mov
push
fidivs
sub
outsl
iret
addr16
sub
loope
fnsave
lods
icebp
xor
jl
mov
iret
outsb
addl
cmpsb
mov
stos
pop
sti
nop
movsb
dec
xor
orl
or
adc
and
sbb
lds
and
ss
insl
out
sub
push
mov
jle
stc
mov
ja
xchg
pusha
loop
push
sub
jge
les
in
dec
xor
xchg
movsb
ja
add
dec
daa
sbb
xor
les
bound
push
dec
inc
fsubl
out
mov
sbb
repz
push
push
fimull
call
mov
nop
jnp
or
js
sub
data16
sbb
jne
jns
add
sbbb
es
clc
push
gs
mov
sti
int3
push
aaa
lcall
or
movsl
or
mov
fsubr
sbb
or
jne
addr16
push
or
push
fimuls
or
insb
jnp
and
int3
test
ficoms
icebp
addr16
cmp
mov
movsb
add
pusha
dec
push
int
addl
jno
cld
lods
push
push
popf
sbb
stc
sbb
jb
xlat
lods
stos
mulb
push
inc
mov
jmp
push
pop
xchg
imul
inc
inc
xchg
cmp
in
movsl
iret
add
jmp
imull
or
test
test
ret
jl
pushf
in
sbb
push
xchg
sbb
rol
push
cs
out
ret
mov
inc
sbb
adc
and
xlat
mulb
sub
xor
div
adc
xor
lcall
xchg
jo
mov
call
jmp
sub
jne
mov
out
in
movsl
popa
jmp
incl
inc
sub
mov
inc
sub
mov
push
fs
negb
cmp
repz
jo
ljmp
xor
sbb
push
ret
fnstenv
lret
mov
sbb
cmpsl
js
lods
pop
dec
jl
inc
jp
jb
pop
xchg
dec
mov
xor
adc
iret
xor
xchg
adc
cmp
and
push
ja
xchg
test
aad
mov
inc
sub
xor
sub
dec
scas
pop
sbb
cltd
inc
pusha
out
dec
and
dec
mov
addb
mov
inc
fcmovnbe
push
lods
jmp
mov
mov
popf
jae
addr16
in
fisubs
mov
mov
clc
or
pop
das
lret
cld
mov
mov
sbb
stos
push
xchg
test
pusha
push
push
pushf
jg
inc
ljmp
arpl
insl
xchg
inc
add
sub
mov
xchg
loop
pop
sbb
lret
mov
dec
cld
mov
xorl
int3
lods
inc
push
fsubp
pop
jmp
mov
cmp
mov
sti
arpl
sbb
sub
sbb
gs
aas
xchg
adc
xchg
stc
mov
push
ja
imul
gs
lock
push
add
stos
xor
mov
fisttpll
sbb
dec
push
jbe
ds
rclb
push
adc
xchg
mov
in
ljmp
pop
fwait
xor
aas
inc
std
adc
or
push
dec
xchg
popf
ficoms
ret
sbbl
decl
and
mov
lods
mov
xlat
sub
sti
jmp
or
jns
jg
call
ljmp
flds
mov
daa
icebp
xor
daa
jl
fildl
adc
test
xor
push
inc
out
cmp
pusha
lcall
sbb
jl
mov
imul
pop
iret
cmc
jge
ror
or
or
stos
dec
mov
xor
and
rcrl
daa
mov
lcall
dec
pop
out
mov
dec
sub
mov
mov
gs
push
pop
ja
mov
lods
daa
push
cmovae
enter
push
adc
loopnew
mov
loop
nop
sub
jns
mov
out
mov
rcrb
out
mov
aam
push
xor
addb
out
add
nop
shlb
dec
push
icebp
jne
push
pop
xchg
cmp
push
cmp
cld
aaa
js
inc
xor
and
in
idivl
pop
mov
push
sarb
xchg
push
in
js
popl
push
xor
je
push
out
pop
rcr
sbb
mov
movsb
repnz
add
sub
popf
mov
jl
pop
lods
pop
mov
sbb
inc
jns
mov
xchg
insl
jge
push
jg
mov
push
or
push
repnz
add
call
add
jg
mov
add
pusha
fiaddl
lahf
push
rcr
push
mov
mov
or
xchg
mov
scas
mov
int
mov
call
in
aaa
xor
lods
and
das
mov
or
push
inc
sub
or
mov
cmp
std
in
jg
sti
xchg
idivl
adc
sahf
add
or
stc
jns
jbe
cld
cmp
lret
adc
push
jl
pop
dec
clc
or
jbe
in
lods
or
daa
mov
dec
lods
rcrb
mov
pop
ficoms
mov
push
xchg
div
test
or
es
mov
das
test
clc
inc
push
fistpl
lret
mov
cltd
inc
and
jmp
pop
xlat
cmp
fs
push
repz
les
sub
fbld
xor
cmp
enter
xchg
xchg
mov
pop
movsl
outsl
xchg
mov
fisttpl
fstl
mov
mov
cmpsl
dec
mov
and
jno
xor
test
mov
add
imul
or
sub
pop
cmpsb
sbb
pusha
popa
push
dec
inc
call
sbb
dec
dec
xchg
cmpsb
inc
fstps
dec
iret
pusha
cmpsl
iret
rorb
fs
jge
test
mov
xchg
jbe
cmp
cwtl
xchg
xor
xchg
push
fsubrl
xchg
mov
bound
ja
daa
data16
sti
iret
ss
je
mov
jp
or
jne
xor
scas
fwait
jg
pop
pop
cwtl
pop
jb
sbb
cmpsl
sub
and
jle
push
xchg
mov
negb
jle
ret
in
enter
shrb
mov
xchg
ret
dec
cli
in
outsb
out
push
notl
das
lods
mov
dec
fwait
add
imul
jo
shr
jnp
lahf
dec
shll
negl
popf
dec
add
sub
stc
je
test
repz
jmp
in
inc
add
aad
add
push
adc
cmp
loope
add
in
sub
aas
in
out
ljmp
mov
mov
insb
movsl
pop
push
inc
jno
insb
int3
xchg
ret
mov
and
push
in
arpl
jg
push
inc
and
fsts
sar
ficomps
rorb
loopne
ss
add
mov
mov
and
jno
mov
mov
ja
sub
es
in
add
scas
ficoms
mov
test
daa
jg
sbb
and
jmp
push
jle
shlb
rorb
iret
int
je
sub
xchg
pop
jnp
jae
pop
jns
aaa
jmp
inc
out
mov
sub
mov
add
push
decl
lods
cmp
xor
test
and
or
mov
addr16
mov
add
js
fsubrl
in
jp
cmp
icebp
mov
xor
into
push
add
push
aam
scas
xor
xchg
scas
fdivrs
cmp
mov
jg
js
push
add
mov
mov
cmpb
jge
xchg
orb
jl
pop
test
iret
test
outsb
jns
insl
or
ss
or
out
int
dec
lods
cmp
enter
jle
mov
or
xchg
sbb
leave
adc
int
add
cli
xchg
adcb
xchg
daa
mov
lret
fmuls
dec
outsb
das
xchg
lea
pop
stos
dec
icebp
mov
or
push
outsl
add
adc
mov
repz
aad
inc
pop
push
les
dec
lods
push
icebp
xchg
hlt
mov
jp
mov
mov
insb
aas
inc
jno
mov
jecxz
sub
cmc
cli
push
fstpl
gs
push
cmp
mov
ss
aam
mov
clc
jecxz
cmpsl
call
add
flds
repz
repz
push
push
cmp
cmp
daa
push
push
test
xchg
jle
dec
push
les
int3
push
subl
loop
push
xor
mov
jae
scas
loop
xchg
sbb
test
push
daa
dec
lcall
jns
mov
daa
cli
lock
cmp
test
test
ss
sahf
adc
mov
mov
pop
mov
or
mov
in
jae
pop
jb
xor
push
or
pop
in
pop
inc
in
pop
jae
adc
outsb
push
xchg
cli
pushf
jmp
insb
xor
fimull
xchg
fnsave
sti
leave
sub
fisubl
or
dec
lret
mov
push
sahf
ss
sub
push
cltd
xor
pusha
in
pop
pop
test
xor
xor
mov
lds
pop
fbld
mov
cmp
pop
cmp
push
rorb
arpl
popa
jp
lock
nop
cmpsl
pusha
repnz
sub
mov
leave
jne
pop
icebp
cld
sbb
or
movsb
push
pushf
imul
adc
push
adc
xchg
cltd
mov
mov
xchg
xchg
test
jbe
adc
lock
add
mov
insl
aas
mulb
mov
test
aas
mov
movsl
cmpl
lret
push
aas
inc
test
leave
rolb
mov
xor
outsl
testb
loope
rorb
xchg
inc
xchg
test
ja
mov
aam
inc
jmp
test
add
je
scas
repz
adc
sbb
cmp
gs
dec
jnp
jle
call
push
xchg
dec
sub
mov
mov
cmp
lods
inc
fildl
add
andl
repz
cmpsl
or
xlat
xchg
cmp
cltd
icebp
jae
pop
push
add
sbb
cwtl
inc
lock
cltd
mov
and
popl
pusha
int3
pop
jo
push
jo
mov
cmpsl
jo
dec
ljmp
je
in
push
cmp
jge
cmp
pop
imul
les
add
jns
cmp
rcll
add
test
cmc
sbb
ss
lcall
lahf
ss
scas
arpl
pop
pop
mov
mov
jb
shr
xor
shlb
sbb
adc
lods
lret
push
stc
xchg
adc
jmp
in
and
jg
dec
in
sti
data16
aad
ret
mov
xor
int
pop
dec
sahf
lea
fcomps
dec
inc
lret
in
push
mov
and
inc
mov
lea
cli
pushf
pop
xchg
or
adc
cwtl
mov
mov
sub
xchg
adcb
mov
or
shlb
sub
jo
movl
mov
insw
xor
push
dec
lock
test
arpl
adc
iret
imul
cmpsb
or
sbb
fimull
fists
push
pop
sbb
mov
fidivrl
xchg
stos
repnz
add
mov
sub
cmp
iret
dec
mov
lods
test
pop
cmp
inc
xchg
push
hlt
xchg
mov
lock
xor
jge
dec
push
loope
and
icebp
dec
mov
mov
pusha
mov
in
fcompl
aaa
pushf
sub
pop
mov
test
dec
pop
mov
jecxz
push
daa
aas
add
cltd
jns
cmp
mov
es
sbb
scas
popf
xor
sub
out
out
leave
aaa
mov
mov
ds
sbb
mov
pushf
add
push
cmpsl
stos
cmp
pop
mov
inc
lret
cmp
loop
mov
sbb
add
negb
adc
ja
or
jbe
hlt
cmc
out
sti
shrb
mov
push
jnp
stos
or
nop
loopne
rorl
idivl
push
pop
inc
and
jle
cmp
and
test
enter
pusha
into
push
mov
inc
mov
or
cmp
add
mov
fidivs
jno
or
jns
pushf
data16
mov
sub
pop
lods
xor
inc
push
dec
lret
nop
inc
pop
lock
cli
add
sahf
je
sub
lds
push
loope
mov
xchg
in
inc
popa
mov
aaa
sti
je
sub
xchg
dec
stos
xor
test
sub
cmpsl
xchg
popa
sub
sti
lock
inc
ds
pushf
idivb
xchg
mov
cmp
clc
xor
jns
mov
mov
test
sbb
and
pop
loope
xchg
xchg
mov
repnz
mov
push
inc
xchg
cmp
or
inc
jge
add
inc
jno
movsl
dec
sub
jns
add
adc
test
push
stos
lods
imul
je
rclb
aad
dec
dec
lret
push
bound
in
test
lods
jmp
enter
imul
and
fcmovnb
addr16
negl
pop
sahf
sbb
mov
fstp
mov
and
mov
stc
mov
aas
inc
arpl
scas
pop
and
addl
repz
ficomps
inc
call
xor
out
jecxz
push
inc
xor
cmp
int3
sub
ss
popf
outsb
sub
imul
rolb
arpl
out
xchg
popf
xor
mov
xchg
inc
iret
xchg
add
cmpsl
insl
mov
cltd
in
aas
add
ret
mov
push
popl
fisubrl
imulb
push
add
ds
cmp
or
aas
test
mov
test
jp
cwtl
test
ficompl
popa
lret
out
lds
mov
lock
loopne
mov
push
scas
xor
mov
mov
jb
adc
adc
xor
dec
sub
jmp
dec
test
imul
shlb
aas
shlb
popf
lds
out
out
leave
dec
js
push
dec
sbbb
adcb
js
push
iret
lret
lea
adc
pop
iret
xchg
inc
xor
jns
dec
popf
cmp
add
loopne
push
jmp
xor
xor
mov
aam
scas
fwait
outsb
mov
mov
xchg
push
test
ud2
inc
push
into
fldenv
mov
int3
or
sti
add
pop
push
lret
and
shl
inc
call
pop
pop
pop
jecxz
adc
add
xor
scas
sub
add
leave
shrl
cltd
fidivs
cmp
jmp
cmpb
les
mov
pusha
inc
jl
dec
fidivl
jae
lock
lret
cltd
fsubrl
pop
xchg
mov
pop
lret
jecxz
jno
xlat
or
shlb
cs
fildll
jo
cs
imul
aam
jae
inc
aas
mov
jmp
rol
icebp
dec
jnp
adc
sbb
sti
mov
xchg
sub
pop
dec
dec
mov
dec
out
jle
sbb
sbb
iret
or
in
jge,pt
push
jle
jecxz
gs
mov
outsl
jecxz
adc
xor
mov
lods
sub
pushf
jmp
xchg
or
jns
and
sub
sbb
iret
sub
lods
sub
and
dec
lret
cltd
aas
loope
mov
jmp
cltd
sarl
mov
push
lret
pusha
nop
jb
int3
jl
int
sbb
je
or
inc
sub
xchg
mov
ret
fcom
data16
and
gs
lret
push
adc
adc
jb
ret
mov
jecxz
adc
add
inc
lods
xchg
cli
aas
pusha
xlat
and
fidivrs
popa
xchg
xor
pushf
shl
addr16
sub
lea
or
cmp
in
pop
lds
jne
lahf
mov
xchg
cmc
ljmp
mov
jmp
add
insb
out
push
sti
cmp
imul
sub
shll
cs
dec
or
insl
mov
in
call
pop
mov
aas
xchg
mov
xchg
lret
add
insl
jecxz,pn
and
sbb
xchg
jns
pushl
pop
sbb
jecxz
sbb
xor
or
ror
inc
int3
cwtl
hlt
dec
int
lea
adc
cmpsb
inc
fucomp
sbb
arpl
ja
push
add
or
pop
dec
int3
leave
repnz
stc
sbb
xchg
inc
rcrl
inc
and
and
and
and
or
sbb
bound
fwait
xchg
or
mov
dec
hlt
pop
mov
lea
fstpl
push
stc
dec
lods
cmp
icebp
shll
and
sbb
into
pop
addr16
clc
mov
std
cmp
in
pushf
mov
jbe
outsl
outsb
imul
xchg
mov
mov
stos
sti
out
aam
cmpsb
or
mov
into
inc
lret
adc
sti
dec
sub
ficompl
jno
sbb
hlt
cmp
or
sub
ja
sbb
decl
icebp
mov
xchg
shrl
popa
mov
insb
adc
add
mov
imul
arpl
rclb
mov
pop
out
fs
sbb
daa
mov
mov
or
mov
pop
pop
std
push
add
mov
outsb
out
cs
xor
inc
mov
incl
mov
add
pushf
in
mov
pop
xchg
outsl
add
xchg
inc
or
das
jl
fstps
inc
lods
add
dec
adc
xchg
or
sti
xchg
mov
imulb
mov
xchg
sbb
jb
jne
pop
lahf
mov
test
pop
in
and
push
sub
mov
xchg
xchg
xor
inc
aaa
cmpsl
mov
ljmp
es
push
mov
or
sbb
cli
dec
mov
mov
popf
sbbl
dec
and
push
jg
int
jne
cmc
sbb
xor
xchg
mov
mov
sbb
sar
addr16
jnp
lods
sbb
jp
imul
rol
cmp
in
in
xchg
fimuls
aam
outsb
and
setnp
cmp
fbld
lret
dec
sub
scas
adc
pusha
jmp
popf
out
xchg
ret
test
cmc
lock
jno
mov
popf
test
sbb
adc
ss
popf
jmp
lahf
mov
inc
test
mov
cmp
sub
jne
out
shl
push
mov
push
aam
push
int
fisttpl
mov
push
mov
jg
cld
loope
pop
scas
jp
xchg
push
xor
es
mov
jp
adc
mov
ret
mov
jl
jge
mov
daa
xor
mov
lcall
into
ds
sarl
push
pop
insl
clc
inc
out
xchg
sbb
mov
dec
ja
xchg
adc
or
add
pop
mov
jbe
repz
jl
mov
or
fmull
add
in
mov
push
xor
inc
shrl
fs
lods
cmp
inc
fsts
and
or
subb
mov
add
adc
jp
adc
cs
int3
push
or
int
imul
sti
pop
adcl
add
insb
dec
adc
insl
inc
mov
outsb
or
pop
stos
push
mov
and
jmp
insb
shr
clc
mov
movsl
cmpsl
lcall
les
inc
sbb
pop
loopne
jbe
loopne
cwtl
sub
std
imull
dec
add
cmpsl
dec
push
cmp
int3
sarb
mov
leave
xor
jns
adc
mov
cmc
mov
daa
scas
std
stos
test
and
out
mov
test
push
mov
jae
or
stc
pop
add
pop
stc
push
in
cmp
pop
mov
cmp
adc
push
fadds
jb
adc
xor
dec
sbb
fistpll
sub
testb
add
rcrl
pop
scas
dec
cs
xlat
aam
xchg
fidivl
aaa
push
mov
sub
add
pop
xchg
out
popf
out
dec
jb
push
icebp
push
xchg
mov
mov
cs
sahf
and
cmpb
rcpps
in
fcoml
push
sbb
mov
dec
les
cmp
fwait
ljmp
scas
jge
movsb
std
lahf
mov
ljmp
imul
mov
aaa
cmc
leave
dec
xor
iret
stos
sbb
out
mov
push
subl
xchg
jecxz
dec
mov
xchg
sarl
cmpsl
adc
sarl
adc
scas
leave
test
sub
aam
jnp
add
adc
xchg
mov
mov
xchg
sub
xchg
fldt
fmulp
adc
std
ret
mov
ret
into
dec
and
jmp
popf
pop
imul
mov
fisubrs
movsb
leave
jecxz
jnp
jbe
cs
cmc
std
adc
xchg
xor
je
aaa
daa
loopne
arpl
fdivrl
loop
andb
out
xchg
lea
jae
out
jle
xor
dec
out
mov
fimuls
fldenv
dec
mov
imul
fisubrl
sub
nop
jne
xchg
sbb
fiaddl
cmp
lock
pop
lahf
int3
in
dec
inc
xchg
jns
cmpsl
mov
sub
mov
jp
xlat
jne
ret
xchg
mov
xor
sbb
pusha
or
repnz
cwtl
test
sbb
orb
xchg
cs
adc
push
jle
sub
mov
cmp
fdivr
add
xchg
cmp
insl
in
xchg
or
fcoms
xchg
adc
mov
or
cmc
mov
or
or
sbb
jo
bound
mov
test
stc
push
pop
sahf
mov
sub
adc
cmpsl
xchg
add
pop
enter
add
aaa
div
cld
pushf
ss
push
dec
sub
sar
pop
inc
fldz
and
cmpsl
jno
or
lea
sub
cli
cmpsl
in
movsl
stos
pop
cs
xchg
negb
adc
cmp
dec
mov
rorl
mov
xor
mulb
lret
sbb
bound
push
loop
mov
mov
cmc
repz
dec
add
sub
pop
sbb
leave
in
cs
xchg
sbb
xchg
push
pop
or
or
into
fcomi
xchg
push
shlb
dec
dec
aam
repz
fidivl
sub
and
push
xorb
shll
pushf
clc
sbb
cmp
mov
in
daa
jne
cs
aas
cwtl
aam
andl
popa
lahf
mov
push
test
insb
cmp
adc
cmp
push
mov
insl
mull
xchg
or
mov
pop
insl
mov
inc
inc
jnp
aad
dec
pop
stos
ja
outsl
mov
stos
ss
mov
lret
ljmp
aad
sub
inc
pop
aas
lcall
and
int
xor
sbb
cmp
cmpsb
sbb
dec
not
push
cmpsl
cmpsl
aam
dec
mov
packsswb
out
rolb
add
fdivl
dec
xchg
sbb
push
mov
into
fwait
pop
lcall
mov
pop
test
or
scas
or
dec
mov
movsl
data16
sub
pop
mov
shlb
mov
cmp
push
fdiv
insb
mov
jnp
rcl
sysexit
sarl
dec
push
and
add
pushf
xor
xchg
daa
test
add
mov
mov
add
sbb
xchg
sub
xchg
inc
lods
and
mov
mov
mov
in
or
idivb
xchg
les
push
in
mov
dec
aad
in
mov
addr16
repnz
sti
test
xchg
adc
clc
icebp
push
out
adcl
adc
cld
mov
xchg
dec
daa
sbbb
jle
and
cmp
mov
add
lahf
push
lock
aad
lret
repz
aaa
loopne
sti
das
jp
xchg
test
mov
jae
or
ja
inc
add
add
inc
hlt
ret
xchg
push
mov
mov
stos
test
ljmp
enter
movsl
inc
repz
daa
dec
rclb
std
sub
ja
jge
or
sub
add
inc
and
lret
add
mov
out
cmpsb
insb
mov
push
pop
and
pop
data16
add
dec
jp
int
lods
cld
mov
data16
lret
gs
mov
fs
inc
ret
mov
call
insb
cs
ss
scas
fsubrp
rcr
out
sub
pop
pop
xor
out
fidivs
xchg
lret
call
pushf
insb
push
callw
jne
jae
cld
icebp
loope
jbe
adc
cmpsb
cmc
insb
in
dec
pop
in
mov
icebp
lretw
or
aam
and
jne
int3
or
sub
icebp
sub
xchg
les
repnz
adc
and
cmc
mov
dec
xor
adc
jbe
test
cmp
repnz
cmp
out
sbb
and
push
lock
ja
pusha
or
std
fwait
dec
sub
adc
call
lret
popf
repnz
lahf
negb
cmp
inc
fistl
mov
into
lret
repz
mov
or
ljmp
push
xor
cmp
fisubl
aas
test
pushf
out
inc
shrb
jg
cmp
cmpsl
adc
mov
sbb
lahf
sbb
mov
repz
and
rcl
or
add
push
sahf
jo
addr16
je
jns
push
ret
jbe
jl
or
pop
aaa
add
dec
mov
es
or
dec
mov
pushl
test
sti
jnp
popa
adc
add
scas
outsb
movsb
pop
int
into
jae
cs
ficoms
notl
lcall
ret
stc
mov
fisttpl
mov
mov
sti
loopne
sbb
movsl
push
test
ret
mov
jecxz
call
test
xor
roll
jle
inc
pusha
loope
push
lret
add
jbe
out
xchg
push
pusha
lcall
lods
adc
cmp
int3
jne
add
addr16
xchg
pop
mov
testl
shll
mov
add
jb
pop
sti
repz
adc
ror
fisubrs
push
pop
cli
int
sub
push
fimuls
sub
orb
jle
loop
push
dec
lock
inc
or
iret
repnz
cmpsl
notb
jns,pt
int3
scas
cmp
push
and
xchg
icebp
or
cmp
xchg
incb
inc
xchg
das
jl
sbb
xchg
inc
sti
and
stos
adc
inc
andl
xchg
imul
stc
bound
int3
shrb
hlt
or
call
sub
aas
mov
mov
test
test
dec
dec
ror
int3
mov
mov
jmp
sub
xor
inc
and
and
adc
fdivrs
daa
lcall
movsb
shll
je
movsb
mov
icebp
jmp
scas
inc
jg
gs
in
cmpsl
fsub
mov
dec
push
push
icebp
sub
and
outsl
pop
dec
cmp
xlat
mov
imull
ret
push
andl
add
movsl
ljmp
rorl
pushf
into
cmp
fxch
bound
mov
jb
cmp
xchg
sub
sub
sbb
xchg
enter
in
repnz
dec
dec
jne
push
or
mov
pop
dec
jmp
mov
out
mov
mov
mov
sbb
sarl
mov
repz
mov
xchg
icebp
sub
jmp
rolb
mov
cmp
stc
mov
push
and
xchg
xor
ja
xchg
gs
lock
cli
mov
mov
ret
lods
add
push
lods
scas
mov
fdivl
push
dec
push
mov
xor
push
das
inc
mov
lret
aad
sub
pop
dec
cwtl
jp
pop
data16
mov
jb,pt
xlat
push
pusha
xor
or
iret
push
push
mov
jl
fisttpl
incl
fldl
jg
xchg
add
cmp
pop
push
outsb
repz
loopne
jno
cltd
dec
fisubl
sub
jne
sbb
inc
icebp
cld
popf
outsl
aad
stos
lcall
inc
sar
int3
adc
xchg
cmp
test
and
test
and
repnz
shll
xor
dec
mov
cmpsl
sbb
cltd
adc
mov
fistpll
cmp
lock
aas
mov
xchg
fldt
sub
rolb
adc
mov
pop
push
ret
sarl
sbb
test
movsb
bound
mov
movsl
push
pop
cmp
sti
inc
fadds
iret
call
add
xor
loop
loope
loop
je
cmp
rcll
pop
cmp
add
lods
push
cli
pop
cmpsb
popa
jl
jecxz
loop
fisttps
dec
pop
aam
cmp
pop
or
mov
xor
inc
adc
scas
xlat
or
sahf
outsl
sub
and
cltd
and
insl
lods
cld
mov
stos
add
or
jmp
in
out
xchg
repnz
fsubrl
xor
sti
jmp
mov
cmpsl
adc
push
rcr
nop
push
sub
jns
scas
xchg
jp
push
dec
cmp
cmc
adc
loop
addr16
cmp
shrb
mov
inc
xchg
inc
add
push
cmp
lea
loope
xor
sub
cmp
or
sbb
add
test
dec
lret
lret
push
dec
popf
sbb
cld
movsb
sti
add
notl
imul
mov
mov
fwait
adc
sub
pop
push
call
jne
and
enter
pop
jecxz
inc
adc
cli
daa
inc
insb
out
jne
inc
out
ficoml
cmp
mov
cs
lods
subl
mov
rcll
jnp
cmc
mov
push
dec
or
mov
loop
rclb
out
cmp
mov
rcl
add
push
fbstp
or
pop
cld
dec
ficomps
daa
int
jecxz
inc
jmp
mov
popl
rorl
or
adc
mov
into
daa
rcl
dec
ret
or
inc
push
js
shrl
or
jno
out
cmp
lea
mov
jmp
in
pop
cltd
movsl
pop
mov
push
jmp
fs
push
and
repnz
fisttpll
out
jecxz,pn
cmc
loop
fsubrs
mov
or
les
je
test
pop
cmp
sub
ds
xor
cwtl
clc
frstor
cmpsl
insl
stos
push
movsb
fbstp
pop
and
mov
xor
push
jnp
sub
mov
inc
inc
cli
fcoms
rcr
push
jne
xor
shl
aaa
jo
jg
jmp
dec
dec
cmp
bound
lahf
icebp
push
fwait
mov
shll
sub
fimull
jg
mov
lret
test
mov
repz
rcrb
sbb
out
fcmovbe
mov
mov
sub
jno
js
xor
out
and
int3
pop
aad
pop
je
inc
shlb
mov
arpl
mov
mov
sub
xor
cmp
sbb
in
push
add
mov
outsl
cmp
lods
sub
dec
pop
sbb
sub
mov
dec
icebp
cwtl
out
test
aam
fs
add
dec
enter
add
push
cmc
inc
out
add
adcl
les
dec
loop
dec
mov
xchg
mov
dec
cmc
jb
dec
mov
pop
mov
jle
out
cmp
sahf
jnp
shlb
data16
jmp
aaa
sbb
or
mov
cmp
adc
je
rclb
mov
out
jmp
je
vsubpd
inc
inc
and
push
push
cmp
add
iret
add
inc
pop
xchg
pop
les
movsl
mov
clc
scas
popf
pop
cltd
cmpsb
ret
xchg
dec
movsl
mov
sti
testl
lcall
jo
cld
jp
pop
cwtl
jb
enter
xchg
or
insb
cmpsb
xor
arpl
push
in
or
scas
mov
xchg
pop
jmp
js
out
xchg
jg
cmp
pusha
inc
pop
pop
adc
jae
call
int
cmp
dec
and
fdivp
dec
sbb
pop
sbb
dec
mov
sarb
or
pop
cmp
jo
sub
push
aaa
imul
mov
add
pushl
out
into
cmp
mov
test
nop
dec
and
mov
into
adc
push
cmp
push
jb
int3
cmp
loope
adc
lods
mov
out
or
cli
sbb
clc
jns
adc
stc
nop
sbb
xorb
mov
ja
cli
or
jb
leave
jbe
nop
out
mov
cmp
push
sub
add
mov
mov
jmp
sub
xchg
xor
xchg
or
aaa
push
push
out
mov
xchg
pop
push
dec
xchg
and
bound
cmp
gs
std
or
ss
xchg
cwtl
pop
out
push
push
and
mov
jmp
add
fistl
movb
aaa
mov
or
or
or
adc
push
inc
pop
jecxz
dec
xchg
dec
mov
ds
imul
sub
jne
dec
je
sti
or
adc
lock
xor
pushf
adc
imull
pushf
jge
jmp
push
aad
ret
pop
out
dec
mov
and
push
dec
xchg
in
pop
popa
cmp
sti
cmpsb
mov
dec
and
jg
inc
fsubl
mov
push
push
repz
mov
mov
jae
andl
push
xchg
sbb
sub
push
shll
nop
sub
mov
jae
xchg
cmp
dec
push
cltd
xchg
pop
jge
inc
pop
lea
sbb
loop
adc
loopne
lahf
xor
mov
insl
xchg
ds
push
jecxz
xor
je
or
push
aam
cli
sub
in
adc
jno
and
mov
or
cs
pop
int3
push
out
pop
cmpsl
pop
pop
dec
mov
mov
and
mov
xchg
jl
sub
psubq
jae
sahf
or
sbb
nop
xchg
ds
pop
xor
jbe
or
shll
inc
xchg
das
scas
pop
mov
lcall
nop
or
sub
movsb
mov
xchg
test
add
xchg
clc
inc
js
cli
lahf
jl
push
jno
push
outsb
xchg
rcrb
in
add
divl
movsb
repnz
inc
mov
aad
xchg
fadds
iret
add
xchg
neg
repz
mov
dec
cmpsb
ret
fsubrp
push
xchg
cltd
in
sbb
dec
int3
push
in
jnp
dec
fldt
call
out
mov
and
popa
js
sub
xchg
stos
sahf
sbb
or
mov
add
les
cmpsl
pushf
nop
push
cmp
mov
ljmp
inc
mov
nop
out
xor
arpl
repnz
mov
popf
dec
sbb
jbe
pop
pop
sub
sbbl
xor
xchg
sbb
int3
or
scas
sub
sub
in
outsb
inc
push
sbb
fcmovnu
mov
popa
or
jno
out
cmp
lcall
enter
cwtl
push
into
insl
cmp
and
mov
loopne
mov
jb
imul
jp
cmp
add
mov
xor
cmp
inc
call
cmpl
repz
les
addr16
jge
cmp
lcall
imul
data16
pop
and
pop
ret
xchg
in
aam
adc
jnp
push
or
cmp
mov
idivl
xchg
dec
enter
fimull
stos
jns
shlb
fwait
cmpsl
sbb
push
out
sub
push
mov
cmpsl
mov
push
or
push
push
in
xor
ja
insl
es
sbb
andb
inc
ja
out
adc
sub
mov
jno
aaa
mov
iret
xchg
jns
aam
in
aam
lea
push
pop
aaa
or
clc
loop
xor
jmp
adc
mov
and
push
push
or
pusha
and
mov
ret
aas
test
cld
cmp
mov
pop
fadd
push
icebp
pop
pop
mov
data16
push
xchg
adc
dec
les
xchg
lods
mov
sets
cwtl
sub
out
push
stos
js
push
jb
sbb
mov
xchg
mov
sub
adcb
and
cmp
sub
fstpt
gs
pop
sti
and
mov
xor
jecxz
adc
outsb
adcl
add
jne
fisttpll
das
cltd
cltd
push
inc
push
int3
data16
xchg
cmp
pop
xchg
stos
leave
hlt
stos
clc
xchg
sub
enter
cmpsb
sub
mov
mov
cmp
popf
es
daa
clc
fsubrl
or
jne
test
pop
xchg
jge
shl
mov
sbb
pop
fidivl
xchg
inc
sub
adc
dec
cmp
adc
movb
dec
shll
pop
mov
mov
jecxz
rorl
xchg
loop
out
xchg
gs
leave
dec
aaa
hlt
outsb
scas
in
mov
push
pop
sub
xor
out
bound
xchg
adc
pop
cmp
or
inc
sub
test
aaa
movsb
loope
mov
xchg
cmp
mov
popf
and
rdmsr
inc
dec
imul
movsb
movsb
decl
mov
das
inc
cmp
enter
mov
in
pop
rcl
add
pop
xchg
stc
and
imul
mov
out
mov
mov
dec
shll
xchg
add
jo
les
lret
mov
testb
push
or
xchg
ljmp
mov
je
rol
movsb
jnp
mov
popf
cmp
push
pusha
and
add
and
push
or
mov
nop
pop
jmp
xchg
je
movb
xchg
rorl
dec
dec
and
fistpl
loop
sbb
ja
lods
int3
jecxz
lahf
jmp
imul
fsubr
dec
imul
or
push
in
inc
and
sbb
pusha
mov
imull
sar
adc
ret
adc
xchg
movsb
stos
ss
fnstcw
das
dec
or
jbe
push
add
pop
loope
addr16
add
mov
es
leave
pop
xchg
xor
mov
cltd
mov
add
ja
inc
sbb
lock
lea
mov
in
push
pop
jbe
mov
ss
into
cmpsb
fsubrl
jle
push
pushf
jne
mov
and
dec
pop
adc
pop
xor
mov
pop
std
lock
ljmp
mov
cmpsl
in
mov
mov
dec
pop
imul
push
mov
sbb
jecxz
push
fcomi
or
insl
fisubs
rcr
push
mov
add
dec
mov
sbb
xchg
and
int
xorb
and
roll
popa
push
jo
lret
bound
ja
loope
push
ficoms
pop
movsl
stos
mov
dec
jl
mov
and
rcll
push
lret
xchg
xchg
lock
mov
sub
xchg
nop
fs
inc
ret
xchg
mov
ss
xor
adc
mov
and
inc
xchg
xchg
mov
or
push
pushf
ret
out
lds
cld
xor
sub
pusha
call
in
lcall
add
pop
loope
lock
xor
jbe
mov
sub
push
out
lret
sub
sbb
push
das
add
inc
dec
cmp
test
or
xlat
mov
mov
out
push
mov
mov
es
in
lock
push
add
add
pop
inc
stos
add
lret
add
insb
lock
adc
orb
inc
mov
push
aas
jb
fld
sub
or
pushf
lahf
bound
xor
adc
mov
add
iret
fcoml
cmp
cmp
pop
mov
lahf
jl
sbb
fucomp
mov
ret
outsb
mov
mov
fwait
out
ret
jns
aam
aaa
fs
fisubl
sarb
jbe
cld
rolb
fiadds
ljmp
ss
cmpsb
inc
pop
mov
aaa
push
xchg
mov
scas
fwait
and
scas
mov
out
call
cltd
cmpsl
pusha
inc
aam
data16
xor
mov
les
dec
mov
dec
push
cmp
ss
mov
pusha
lods
adc
dec
pop
or
mov
pop
data16
and
pop
into
sti
fnsave
cmp
sti
fwait
or
sub
aam
and
xor
test
xlat
sub
jle
pop
outsb
mov
fs
sarb
mov
jno
inc
cwtl
cmpl
add
mov
out
xchg
faddp
push
jnp
jmp
mov
adc
cmpl
stc
or
leave
inc
push
icebp
insl
pop
mov
in
mov
stos
sbb
cltd
sbb
dec
cmp
ss
hlt
jp
or
pop
dec
movsl
adc
and
cmpsl
lahf
dec
mov
xchg
imul
les
adc
fsubrs
pop
sar
in
dec
push
mov
lods
jae
aam
sbb
fs
push
in
push
test
lock
loopne
cmp
push
jbe
fwait
add
fdivrl
inc
cltd
imul
sbb
push
test
es
and
xor
clc
mov
cmc
cmp
in
sub
jno
push
adc
in
dec
xchg
mov
pop
scas
push
enter
imul
imul
test
pop
inc
jecxz
jbe
or
ja
jmp
lods
faddp
mov
mulb
js
jns
inc
loop
sub
idivb
call
int
std
or
loop
or
scas
fisttps
fs
push
iret
push
andl
sbb
or
jno
sub
ret
jnp
out
push
or
cld
push
leave
xor
push
jns
insl
mov
movsb
jns
movsb
pushf
das
jmp
movsb
scas
add
hlt
ja
mov
insb
popf
rcrb
test
dec
sahf
and
dec
lods
loope
jp
jle
cmp
xorl
xlat
stc
ds
out
mov
icebp
test
ja
mov
je
sbb
mov
repnz
pushf
sti
cld
cmpsb
or
xor
adc
roll
cmpb
adc
jnp
test
test
ss
dec
and
adc
aaa
inc
cmpsb
mov
xchg
addr16
sub
les
pop
cmpl
xor
ficompl
fcmove
fcomps
lds
loopne
out
mov
orl
rcll
mov
and
int3
jbe
stos
adcb
test
mov
fwait
xchg
int
inc
push
mov
xor
xchg
jmp
cs
xchg
pop
fbstp
xchg
negl
ja
pop
ret
int3
fstpt
inc
push
cmc
sbb
and
sub
pop
fwait
jp
aam
xor
cltd
mulb
addr16
int3
xchg
xor
jmp
and
inc
jecxz
jne
insb
in
cmpsl
jae
push
iret
js
sar
cmp
push
xchg
loope
scas
sti
es
test
push
ficomps
jns
insl
pop
arpl
popf
je
lret
mov
xor
leave
in
aaa
mov
scas
or
fdivp
in
inc
push
movb
push
icebp
xchg
movsl
pop
out
jb
xchg
scas
jne
test
stc
loopne
leave
adc
mov
mov
in
arpl
test
and
push
in
int3
jl
loope
mov
pushf
rorl
add
loopne
cs
sahf
jbe
inc
dec
dec
lods
testl
jle
dec
xor
add
arpl
aad
lret
int
leave
cmpsb
dec
int3
in
sbb
mov
xor
pop
test
sarl
cmp
test
imul
mov
mov
mov
add
add
scas
push
xchg
jbe
stc
insl
in
sti
mov
adc
dec
mov
stc
xchg
xlat
lds
scas
fists
rcl
cld
mulb
inc
out
sub
sbb
push
add
cwtl
mov
mov
ljmp
sub
xor
cmp
movsb
or
daa
stc
push
cmp
sahf
mov
sub
call
fsubrl
addb
movsb
jmp
sub
lock
sub
test
pop
inc
push
or
sbbl
mov
cs
jg
mov
in
pop
cmpsl
lods
or
sbb
or
and
icebp
dec
lcall
pop
rcl
mov
cmp
xor
push
push
repz
outsb
add
and
clc
and
scas
jns
add
test
xor
pop
fsubrs
sbb
test
cli
cmc
hlt
adc
fs
shrb
push
je
mov
jmp
and
gs
pop
inc
or
aad
jo
mov
sbbl
stc
inc
adc
dec
mov
cmpsb
or
rcll
fnsave
subl
addr16
stos
jp
dec
jnp
ret
inc
out
pop
adc
mov
cltd
and
fucom
dec
mov
cmp
push
in
xor
sbb
movsl
mov
les
lods
adc
dec
pop
jbe
icebp
insb
jmp
insb
jnp
sbb
pop
ret
les
scas
mov
jno
lock
sbb
sbbb
pop
add
pop
pushf
sub
js
inc
xlat
sub
dec
xchg
sbb
es
idiv
cs
jo
lds
hlt
adc
mov
shlb
ret
adc
or
lds
test
out
dec
push
xchg
inc
cmp
dec
push
sbbl
mov
pop
mov
cmpsl
shlb
aad
sbb
cmc
and
add
int3
test
and
daa
or
imul
or
ja
sbb
iret
mov
ds
jbe
imul
iret
mov
push
fdivrs
add
cmp
sbb
outsl
inc
int3
mov
daa
push
out
lea
insb
or
mov
mov
xor
in
into
cmp
inc
shl
aas
dec
fnsave
pop
cmp
pop
iret
sub
scas
mov
lret
dec
xchg
mov
add
cmp
fs
jecxz
mov
dec
and
sub
cmp
lret
pushf
add
outsl
in
push
xor
out
sbb
or
cmp
dec
mov
test
repnz
inc
xor
test
ja
test
jb
push
shll
loopne
jns
xchg
adc
lods
xchg
mov
adc
sub
fwait
xchg
faddl
stos
jge
jns
mov
fcompl
and
push
iret
test
mov
loope
je
jmp
je
icebp
pop
in
lods
push
rcll
out
and
andb
cld
cmp
mov
repnz
sbb
push
into
jo
les
adc
sbb
pop
mov
xor
std
stos
in
ret
sbb
cmpsl
leave
or
out
jp
lea
aam
sbb
mov
push
mov
ror
sub
call
ljmp
dec
out
pop
jmp
in
xor
out
mov
mov
lds
and
icebp
in
stc
xor
aas
xor
push
ret
call
int
mov
out
xchg
add
cmp
out
inc
cmp
stos
hlt
cmp
and
cmp
pop
mov
add
adc
insl
xchg
fwait
mov
lock
loopne
xchg
ds
inc
mov
fs
fsubrl
or
rcr
add
mov
cs
sbb
imul
dec
xchg
div
icebp
dec
push
cltd
sub
mov
mov
cmp
test
sub
adc
xor
ljmp
and
mov
jmp
int3
push
movsb
das
je
cmpb
xchg
mov
and
bound
sbb
xchg
xchg
dec
xchg
push
sbbb
mov
ds
stos
xchg
enter
sbbb
mov
mov
cmc
lret
lods
test
lcall
arpl
and
cmpsl
stos
mulb
out
inc
loopne
cld
and
mov
addr16
push
mov
dec
outsb
sbb
jg,pn
repnz
enter
sub
enter
push
jbe
push
xchg
lret
pusha
clc
sahf
bound
mov
imul
test
add
movsb
fcmovbe
jbe
sub
pop
push
out
cmpb
imul
push
add
pop
lods
ret
lods
iret
cmovnp
das
pop
dec
fisttpll
mulb
dec
xchg
xchg
push
sbb
leave
sarl
mov
imul
fcmovne
inc
adc
inc
aam
jno
into
lcall
cwtl
xchg
clc
push
daa
xchg
sbb
fs
insb
loop
out
mov
cli
into
mov
sti
repnz
popl
xor
call
ret
je
add
comiss
fdivrl
lret
push
dec
xchg
aas
movsb
test
fildll
sub
adc
aad
mov
in
xchg
outsl
ret
scas
mov
jl
mov
cmp
jp
fwait
test
fucomp
add
repnz
popa
adc
xchg
xchg
or
movsl
and
mov
push
es
scas
add
mov
xchg
movsl
sub
pop
xchg
sahf
xchg
cmp
mov
aaa
pop
out
pushf
es
push
or
mov
into
and
push
lret
out
add
fisubs
jns
pop
jo
add
stos
mull
imul
inc
lret
inc
xchg
ja
call
stos
and
pop
sub
push
ret
idiv
ret
ja
shl
cs
fwait
cli
push
lds
pop
stc
mov
loopne
sahf
les
or
adc
jge
cmp
pop
or
pop
out
ficoml
push
into
and
mov
iret
orl
jmp
jo
aaa
out
lret
xor
testb
addr16
popa
loope
mov
fwait
out
pxor
mov
push
lods
push
call
mov
repz
sbb
fsubrs
sub
mov
sub
scas
das
jne
fsubl
xchg
loop
lds
and
add
out
cld
ss
xor
lahf
lock
mov
je
push
adc
add
loope
popa
sbb
andps
stos
call
xor
cli
out
js
or
push
push
or
popa
xor
cld
cmp
jno
std
std
fcoms
jmp
jnp
jecxz
mov
xchg
sti
jmp
psrlq
test
clc
ljmp
dec
cmp
cmpsl
jl
jg
cwtl
les
test
inc
rol
movsb
push
push
and
mov
mov
ret
lods
ret
mov
lods
dec
pusha
mov
mov
fs
xchg
loope
sub
push
pop
in
neg
inc
lock
nop
push
imul
pop
cmpw
xchg
in
push
add
adc
pop
xchg
xlat
dec
test
mov
jmp
mov
inc
adc
pop
push
int3
sbb
pushf
sbb
enter
push
mov
push
daa
xchg
cmp
inc
and
jo
add
inc
push
adc
push
or
adc
in
push
add
dec
jecxz
mov
cltd
xlat
adc
xchg
stc
lret
mov
ja
ret
xabort
sub
bound
test
push
dec
cmp
jge
dec
pop
iret
sbb
mov
push
pop
ss
ficompl
push
dec
inc
mov
xchg
jne
mov
adc
lcall
push
push
mov
nop
test
add
in
js
repz
cmp
sti
in
loope
xchg
out
ficompl
stos
ret
in
and
xor
add
icebp
sub
dec
add
dec
pop
shlb
mov
push
sahf
xor
inc
fdecstp
lock
jmp
imul
sub
ljmp
out
sbb
cli
cmp
ret
dec
and
push
fs
stos
cwtl
lcall
int
cs
push
lret
lahf
push
jecxz
pop
cmp
mov
sbbl
inc
call
jl
rcll
push
cmp
dec
jmp
bound
xchg
pop
jecxz
pop
aad
andl
out
adc
mov
sub
or
sbb
test
xor
fildl
jge
mov
jg
adc
lds
mov
adc
fimull
fnstcw
push
repnz
inc
dec
cltd
jbe
cmp
into
pushl
lret
mov
mov
sbb
cld
push
fsts
push
xchg
inc
incb
dec
call
ds
pop
inc
sbb
mov
adc
sub
out
dec
leave
push
fmul
hlt
mov
lahf
cmpsl
aaa
push
jmp
out
outsb
shlb
aad
fs
adc
int3
jmp
pop
sarl
pop
je
int
test
movsb
dec
je
xor
jle
inc
ret
lds
mov
adc
sbb
pop
loope
cmp
ficoms
cmp
jae
sbb
scas
shl
and
mov
mov
push
xor
add
es
jno
sub
jae
icebp
pusha
fwait
and
jnp
fnstenv
jmp
cli
xchg
jo
jb
and
or
ficomps
sar
mov
mov
and
jp
aad
pop
in
aad
sbb
push
shrb
daa
add
ret
andl
stos
mov
leave
pop
adc
pushf
ret
lods
cmp
sub
push
divb
insl
out
or
in
dec
outsb
in
and
inc
int
add
xchg
inc
mov
lods
data16
add
cld
xchg
mov
jp
pop
push
insb
out
repnz
inc
lcall
outsb
adc
mov
jae
pop
out
mov
faddl
push
mov
lods
cli
ja
sub
rcrl
ljmp
pop
pop
pop
mov
lret
fildl
pusha
pop
mov
add
pop
loopne
sub
outsl
shl
mov
and
aad
jecxz
dec
shll
inc
xor
mov
jmp
pop
lret
leave
mov
int
xchg
orl
mov
test
das
dec
dec
into
pushf
int
cli
cmp
movsb
aaa
repz
dec
les
mov
jo
sbb
inc
cmp
lods
movsl
movsl
mov
jge
mov
ljmp
stos
sbb
fidivrs
xchg
sub
insb
faddl
popf
mov
push
in
jle
in
daa
xchg
scas
sarl
cwtl
jae
pop
mov
cmp
dec
mov
ja
push
outsl
adc
xchg
mov
jns
fwait
and
or
shll
mov
insb
movntps
mov
aaa
push
cmp
sbb
pop
cmpsb
sbb
jmp
or
inc
mov
push
pop
out
popl
ret
push
pop
std
xor
add
xchg
push
push
out
push
adcb
xorl
ds
lea
roll
cmp
lds
jmp
xchg
pop
pusha
lods
les
cmp
stos
dec
hlt
sahf
clc
test
loopne,pn
arpl
shlb
adc
inc
iret
lods
and
icebp
mov
or
push
pop
pop
stos
movsb
in
fs
or
mov
add
imul
lea
and
out
js
push
jno
shll
add
rcrl
movsl
pop
jb
lods
mov
sub
andnps
lret
inc
sbb
lret
cs
jmp
mov
mov
xor
daa
or
fimull
mov
mov
or
mov
scas
mov
rorb
cli
popa
cmp
icebp
mov
xchg
adc
mov
push
pop
test
movl
inc
push
and
pop
cs
mov
mov
out
repnz
movl
jmp
push
inc
pop
sub
iret
add
lods
mov
mov
xchg
stos
inc
push
repnz
pushf
mov
bound
mov
dec
mov
aam
inc
pushf
mov
mov
mov
imul
and
push
xchg
inc
inc
dec
orl
fisttpl
mov
pop
loopne
mov
outsb
lahf
dec
lock
outsl
sbb
inc
xor
lcall
out
hlt
cmp
outsb
push
sbb
sbb
inc
xor
sarb
jg
cwtl
push
xor
or
std
and
mov
pop
out
test
mov
ja
lret
sbbb
mov
lods
mov
rol
addb
and
cmp
xor
inc
mov
adc
inc
sti
cmp
and
sbbl
scas
jae
jle
jmp
into
mov
clc
scas
cmp
movsb
add
daa
pop
je,pt
cmp
call
sub
adc
into
dec
pop
leave
rorl
mov
mov
pop
pop
push
add
jo
push
cmp
dec
mov
js
pop
push
insl
testl
mov
pop
xor
sahf
jle
minps
popf
add
loope
ljmp
sub
adcl
scas
lret
push
mov
and
push
add
pop
mov
icebp
pop
ja
mov
aaa
gs
into
fsubrl
or
mov
outsb
stos
push
jns
inc
jns
mov
push
sbb
test
sarb
stc
xchg
es
jmp
mov
leave
fstp
enter
orb
lcall
sub
enter
mov
lea
jns
mov
sbb
arpl
ss
data16
arpl
xchg
test
mov
into
rcll
lret
pop
arpl
inc
pop
jns
fcmovb
inc
fdivrp
xor
mov
pop
das
mov
test
cli
mov
aas
mov
out
inc
ds
pmulhuw
mov
lahf
push
adc
outsb
mov
xchg
loope
mov
sbb
sarl
jbe
fildl
or
lods
jle
bound
shrb
and
pop
adc
repz
jmp
cltd
mov
fs
sti
sbb
or
push
mov
pop
loop
or
sbb
sbb
inc
mov
sbb
sbb
and
sbb
les
add
jne
mov
push
push
cmpsb
pop
cmc
ror
popa
mov
adc
ds
sti
sbb
ja
lods
mov
xlat
add
inc
in
lea
pusha
jg
and
add
mov
mov
sahf
push
xchg
sub
jl,pt
xchg
cmpsl
mov
lock
xchg
mov
pop
or
incl
movsl
jnp
or
xchg
xlat
loop
fwait
push
mov
add
jecxz
aas
shl
cmp
push
add
inc
bnd
shlb
dec
and
jne
mov
jnp
fists
add
mov
sub
and
pop
adc
jge
ja
xchg
jne
mov
popf
lret
incb
shll
jp
xchg
xor
cli
xor
repnz
jns
aas
imul
out
in
lret
mov
push
aas
dec
stos
dec
jbe
or
adc
push
daa
adc
aas
lret
or
push
dec
insb
movsb
sahf
xchg
or
push
dec
sub
jae
push
stos
sub
push
mov
lcall
aam
or
out
push
dec
in
sbb
pop
jg
cmc
int
bound
stos
xor
pop
push
setae
or
push
xchg
stos
mov
lret
push
lock
pop
std
add
jne
fstpl
mov
addr16
scas
mov
gs
loope
and
inc
adc
fwait
push
jge
mov
push
and
loopne
scas
and
xlat
inc
fdivrs
xchg
mov
out
or
test
or
xchg
lcall
faddl
es
sarb
inc
push
out
es
sahf
push
les
jmp
imul
cmp
mov
push
imul
xor
dec
lret
xor
mov
outsl
xor
pop
pop
test
inc
and
stos
sbb
sbb
cwtl
lock
adc
mov
inc
sub
out
lods
sahf
sbbl
orb
jmp
push
dec
sub
pop
imul
push
sub
cmc
leave
je
or
push
xchg
movsl
sbb
cwtl
insb
push
lods
sbb
add
jge
loop
mov
scas
test
out
fildl
lret
pusha
inc
push
adc
mov
push
int3
dec
outsb
mov
and
addl
ds
mov
pop
adc
sbb
lock
scas
dec
int3
lods
sbb
ds
aas
in
pop
icebp
sbb
mov
test
rorb
popa
out
in
mov
popf
ficoml
pextrw
dec
sbb
cwtl
ljmp
push
mov
and
dec
xchg
outsl
test
call
fs
aaa
mov
andb
dec
xlat
or
fcoms
mov
xor
push
xlat
test
cmp
push
sti
clc
push
out
jb
push
mov
daa
jge
inc
xor
std
push
imul
jns
cmp
in
jmpw
ds
sti
sarb
pop
dec
push
sub
push
lds
push
or
dec
into
or
pusha
sbbb
dec
xchg
test
rclb
add
std
fiadds
insl
bound
addb
sub
dec
sbb
push
push
mov
cmpsl
outsb
cmp
fisubs
icebp
rorb
adc
mov
mov
or
sub
aas
subl
leave
int
insl
mov
sbb
test
add
inc
mov
jb
or
cmpsl
orb
xor
sbbb
loop
mov
popf
sbb
inc
mov
inc
insl
xchg
push
in
xor
jg
dec
fs
mov
cmp
lcall
dec
les
push
aas
in
dec
dec
and
xor
imulb
dec
fisttpll
and
loopne
mov
mov
movsb
sti
mov
add
mov
shlb
out
lahf
dec
arpl
and
mov
ret
pop
push
dec
sub
sub
enter
xor
sbb
fwait
cld
jecxz
and
cs
sbb
pushf
sub
push
out
pop
push
fdivrs
sti
sahf
inc
or
jle
int
roll
out
shll
divb
sub
jle
mov
arpl
cmc
mov
subl
push
ja
jp
fs
mov
imul
das
jg
icebp
xchg
xor
in
pop
outsl
pop
icebp
aaa
mov
movsl
int
sbb
cmp
sbb
pop
jb
push
xchg
adc
mov
xlat
imul
pusha
and
inc
cmp
adc
fnstsw
shrl
fiaddl
outsl
mov
xchg
sbb
xchg
xlat
cmpsl
mov
xchg
xchg
push
inc
sub
mov
jo
sbb
aas
sbb
push
and
jp
adcb
sbb
adc
or
shl
adc
repz
or
cld
push
insb
shl
xor
dec
popf
inc
and
dec
sbb
lcall
xchg
bound
jmp
cld
adc
mov
mov
cmpl
jmp
out
xor
popa
push
out
sti
sub
mov
cmp
xchg
add
out
mov
jbe
adcb
cld
mov
lds
sub
push
mov
les
dec
or
scas
sub
jb
mov
scas
mov
push
jbe
repnz
adc
icebp
xor
mov
outsb
push
dec
mov
aas
xlat
xor
pop
adc
pop
lea
and
lahf
popf
sub
cmpsb
xchg
test
jge
leave
mov
add
int
rcll
dec
out
inc
add
fldcw
filds
mov
stc
cmpsl
sbb
in
sub
sti
ja
insb
xor
sti
jmp
and
cld
sub
xor
xchg
add
bound
imul
shrl
sbb
inc
lods
jg
push
mov
aam
mov
adc
jp
push
dec
jecxz
in
xor
fcmovnb
sar
inc
dec
fadd
adc
cmp
pushf
push
sbb
push
adc
lret
push
lods
scas
sbb
jnp
jb
ret
add
aaa
rcr
mov
or
stos
mov
repz
jo
add
lods
xchg
leave
stos
xchg
xor
inc
or
cli
fsubrl
inc
insl
fs
add
adc
add
or
aam
and
mov
lods
test
outsl
inc
lahf
scas
add
add
adcb
sub
cld
inc
push
push
xchg
add
inc
xchg
mov
xchg
mov
mov
sub
out
mov
xlat
sub
jmp
out
sub
push
add
divps
xchg
xchg
xor
roll
inc
out
stc
dec
mov
call
shrl
push
int3
xor
in
call
and
add
xorb
mov
xor
lcall
mov
jecxz
mov
mov
das
or
sbb
fldcw
loope
cmp
jmp
lods
sbb
in
lret
test
fwait
in
ja
js
mov
add
ret
or
or
addl
fs
jmp
mov
popf
jp
xchg
dec
xor
dec
out
push
int3
sbb
ficoms
fistpll
mov
or
push
and
je
daa
or
mov
insb
xor
cmp
aaa
xorb
dec
std
mov
pushf
and
nop
cmpsl
je
mov
mov
bound
inc
rorl
push
inc
sbb
sbb
dec
lods
icebp
mov
xchg
cli
aam
pusha
loope
test
movsl
adc
mov
call
xchg
lret
or
sub
insb
sub
cmp
repz
or
loope
sbb
insb
dec
and
sbb
jno
popf
sar
mov
mov
ljmp
adc
xchg
das
scas
xor
out
jg
add
sub
sub
insb
mov
fmuls
insl
jb
pop
add
cwtl
insb
ret
jo
jbe
lods
jmp
mov
int
jl
cmp
mov
loope
mov
xchg
or
jle
daa
lcall
xchg
adc
aas
or
ja
mov
xchg
or
adc
dec
push
cmpsb
subb
pop
cli
inc
or
aas
add
outsb
jp
out
push
pop
fisttps
cmova
aas
jl
or
outsl
inc
sti
cld
inc
aad
lock
jecxz
test
cmp
cmp
mov
out
push
jne
add
call
jecxz
cmp
sub
sbb
pop
mov
mov
scas
sub
add
pop
mov
adc
jle
xchg
jmp
insl
ds
pop
inc
mov
scas
pop
and
pop
fwait
sbb
mov
enter
push
add
mov
mov
xor
outsl
pop
mov
fxch
dec
push
and
jne
mov
inc
lods
popf
dec
rcl
add
inc
xor
pusha
dec
and
and
push
adc
arpl
movsb
xor
clc
repz
adc
mov
loope
mov
or
fcoms
xchg
xorl
jae
xor
sbb
loope
and
inc
mov
add
leave
cmpsb
jo
int
inc
and
shrl
push
jge
xor
insl
arpl
mov
push
cmp
add
in
sub
pushf
and
mov
mov
mov
addb
rol
mov
xor
or
xor
movsb
rclb
mov
xor
sbb
ret
xchg
dec
jle
lea
je
push
xor
pop
cmpsb
jne
push
aas
pop
dec
iret
ucomiss
jp
adc
fildll
test
or
aas
in
ret
lea
enter
test
mov
in
testl
or
ret
xchg
mov
xor
mov
jecxz
lcall
lods
mov
sbb
lcall
ret
popf
mov
insb
ljmp
fnstcw
or
mov
mov
ret
xchg
sub
repz
cmp
adc
mov
or
mov
dec
mov
leave
sbb
sub
adcb
inc
sub
sahf
lahf
push
shrb
lods
mov
cmc
push
enter
push
pop
test
mov
xchg
inc
jle
xchg
jb
mov
lock
adc
mov
test
push
jl
sub
mov
pop
adc
mov
cli
dec
push
xchg
add
xchg
cmpsl
xorb
fdivl
aad
mov
lea
mov
cmp
jp
gs
sbb
mov
xor
add
inc
test
xchg
ficomps
jmp
jo
adc
scas
push
dec
or
or
push
lcall
pop
adc
mov
xor
inc
inc
repz
fdivl
sub
xor
mov
les
loop
jmp
xchg
cmpsb
mov
rcrl
dec
push
mov
add
xchg
xchg
pop
push
test
mov
aam
dec
out
aam
adc
movsl
negb
pop
lods
mov
or
sarb
lods
jmp
movsl
aaa
add
xor
pop
movsl
jmp
and
movsb
jle
push
xchg
pop
add
lcall
fwait
pxor
inc
divl
rorb
push
in
test
push
cmp
sti
repnz
addr16
stos
shrb
call
test
fisubrl
scas
push
push
adc
xchg
ror
fcoml
aad
cltd
loopne
lea
pop
dec
fldcw
sbb
jns
movl
mov
mov
inc
mov
mov
fmuls
les
push
xor
inc
mov
push
inc
mov
adc
cmp
scas
lcall
xchg
mov
push
inc
ret
cli
cmp
outsb
sub
mov
lret
insl
mov
popf
ljmp
leave
int
into
packssdw
pop
push
pop
push
les
cmc
sub
push
flds
fstpt
push
in
inc
xchg
test
add
repz
fucomip
xchg
cmpsl
sbb
int3
test
rorb
cs
pop
xor
scas
lods
jmp
pop
jo
fcmovbe
fcompl
add
jno
sbb
or
xor
lods
xor
xchg
hlt
bound
sub
push
clc
or
ss
or
in
daa
push
and
push
pop
or
mov
xor
xchg
dec
jecxz
aaa
xchg
sub
nop
in
and
xchg
cs
mov
leave
xchg
dec
fidivrl
out
push
in
movsb
lcall
mov
inc
cmp
xchg
jp
repnz
ret
or
cld
popa
mov
stos
sbb
mov
push
mov
mov
and
mov
iret
cs
and
push
dec
mov
xor
dec
add
das
int3
imul
add
inc
notb
push
out
sub
or
test
cs
mov
popa
aad
stos
dec
or
les
cmpsb
add
into
lahf
or
call
bound
leave
xchg
cmpsl
mov
xchg
shlb
and
je
pop
push
xorl
mov
mov
xor
cmpsl
addr16
shrb
mov
aas
insb
cmp
stos
repnz
sbb
sbb
imull
xchg
cli
fistpll
push
repz
sbb
pop
cmp
in
sbb
xchg
loop
dec
outsb
movsl
mov
xchg
fs
push
add
cmpsl
jecxz
fistl
inc
std
vmwrite
dec
arpl
shll
inc
ficomps
sub
mov
ja
pop
cmpsl
mov
jl
sub
jbe
jo
aad
inc
push
loopne
xchg
data16
inc
sbb
mov
pushw
roll
enter
xor
add
js
addr16
cli
sbb
js
aas
in
aaa
daa
xlat
mov
push
divb
push
clc
rorb
ds
sub
notl
or
sub
stos
cmp
out
loop
dec
push
or
jmp
cwtl
jp
dec
stos
jmp
jge
arpl
pop
shrd
and
jmp
test
mov
cmpsl
inc
imul
popa
and
pop
xchg
adc
les
lcall
push
out
xchg
xchg
lock
inc
mov
enter
mov
xor
pop
loope
sub
push
mov
push
jle
dec
stos
push
xor
lret
adc
fbld
adcl
xchg
dec
sar
xor
ljmp
add
push
add
cmpsw
psrlw
imul
sub
pushf
lret
out
sti
or
cwtl
dec
inc
and
adc
jae
jne
not
or
push
loope
push
test
add
push
lcall
std
call
mov
cli
adc
cmpsb
stos
loope
xor
les
enter
and
popa
cmp
jmp
pop
sbb
dec
sbb
cmp
lcall
popf
inc
add
in
je
filds
jo
cmp
xchg
cmpsb
pop
ret
ljmp
imul
arpl
push
jns
jb
inc
in
popa
mov
cmp
fisttpll
outsl
imul
jge
add
pop
cmp
cmc
int3
lea
mull
mov
insl
adc
mov
or
sub
ss
gs
fisttpll
in
fwait
nop
mov
mov
pop
sbb
pop
and
inc
repz
daa
fstl
dec
nop
and
flds
pop
push
stos
sbb
gs
shrb
test
jecxz
jl
notb
mov
sub
out
insb
jle
dec
lahf
imul
cmp
stos
push
out
test
ret
jo
jnp
push
pop
push
add
xlat
fisttpl
je
shr
mov
cwtl
lock
cmp
pop
xchg
adc
cmp
inc
xchg
fldt
movsl
pop
ja
insb
ret
pop
in
ljmp
icebp
mov
pop
jmp
pusha
ja
jp
push
inc
js
and
jne
or
lock
xchg
push
fsubs
aad
cmp
inc
outsb
or
pop
or
mov
pop
jle
inc
cmpsb
imul
mov
xlat
jmp
pop
sub
push
out
movsl
push
test
inc
les
das
aas
lret
pop
mov
pop
dec
add
outsb
testl
jno
mov
sub
stos
test
jb
leave
dec
fldcw
mov
pop
popa
cmp
mov
stos
mov
inc
cmp
pop
add
stos
sub
dec
lock
push
add
sahf
jp
aam
or
rol
xchg
imul
inc
addb
push
mov
add
mov
sub
repnz
xor
cmovge
mov
ss
stos
and
xchg
lods
pop
fisttpll
xchg
mov
imul
insb
adcb
cmpsb
mov
call
cs
cwtl
sti
sbb
or
sti
xchg
inc
loopne
test
scas
dec
clc
sub
into
int
pop
jp
fistps
xchg
addr16
mov
jns
adc
repz
mov
push
call
jl
mov
aas
ret
lret
mov
fldcw
or
es
cmp
push
rorb
in
jnp
cmpsl
jl
dec
sbb
out
fs
mov
bndldx
int
lret
pop
mov
mov
lahf
shll
mov
fwait
jno
xor
dec
lahf
in
sub
cltd
dec
mov
insb
add
cltd
ret
and
mov
mov
sbb
es
cwtl
cmc
test
dec
add
inc
fmuls
leave
dec
push
jne
aaa
cmp
mov
inc
sub
les
sub
repz
mov
mov
addr16
stc
add
shl
rorl
inc
adc
jbe
fistpll
mov
lahf
shrb
mov
pop
add
mov
xchg
mov
cwtl
fiadds
mov
repz
pause
sub
je,pt
adc
popa
testl
inc
stos
mov
and
add
test
xchg
stos
adc
arpl
sar
mov
or
in
pop
mov
cli
sbb
popa
mov
cmp
dec
push
in
out
pop
addr16
cs
std
mov
scas
std
push
push
xor
add
sbb
xor
hlt
mov
adc
loopne
mov
add
pop
jb
add
out
pop
cwtl
adc
jg
jnp
jne
into
test
cmp
jmp
mov
lret
cmp
sub
das
add
xor
outsb
or
mov
mov
clc
movsl
js
sub
std
shl
jbe
inc
push
and
xlat
leave
mov
push
lock
cli
inc
pop
or
decb
add
pop
scas
jmp
xor
fstps
in
test
xchg
xchg
movl
loope
mov
fcompl
push
js
test
out
sbb
scas
sti
jae
jae
sub
jne
and
jmp
add
xchg
mov
or
test
xchg
cld
adc
push
mov
jecxz
inc
push
mov
je
jle
xor
cmp
jle
dec
xchg
test
pop
lret
int3
cmpb
push
sbb
pop
add
and
ljmp
pushf
roll
mul
cmpsl
jo
fiadds
mov
dec
outsl
mov
clc
scas
sub
dec
mov
jno
sbbl
jp
jbe
mov
dec
outsl
mov
jecxz
lock
xor
mov
pop
mov
jg
mov
sbb
sbb
sub
pop
and
pop
mulb
hlt
enter
adc
add
dec
pop
push
xor
inc
or
dec
xchg
mov
sbb
push
ret
jnp
roll
adc
dec
sub
dec
bound
jecxz
cmpsl
mov
orl
inc
or
inc
mov
pop
add
sub
mov
mov
cwtl
out
mov
aas
mov
outsb
fldt
popa
adc
dec
cmp
fs
sbb
xlat
nop
mov
pop
adc
push
adc
jmp
mov
mov
pop
jne
pushf
fisubl
inc
mov
daa
mov
es
fsts
ret
adc
outsb
iret
ret
mov
jnp
and
insl
stc
xchg
push
pop
mov
push
cmpsb
iret
mov
dec
ret
sbb
push
and
xchg
pop
add
xor
rcrb
add
iret
mov
fcmovu
fistps
stos
fscale
rcrb
jbe
add
outsl
add
mov
fs
or
movsb
loop
test
stos
daa
scas
sbb
mov
aaa
scas
xchg
or
ss
cld
push
mov
lahf
sbb
sar
cmp
rcrl
adc
addl
pop
cltd
dec
ror
pop
fdivrl
testb
add
cmp
decl
cld
outsl
aad
hlt
sbb
cli
dec
inc
rcll
jp
test
or
dec
les
cli
imulb
std
dec
jecxz
or
cltd
push
mov
mov
cli
aad
hlt
sbb
icebp
jl
cmp
inc
push
cmp
shll
bound
push
jne
mov
mov
lods
fwait
dec
iret
ja
enter
fistpl
jle
fldcw
and
mov
jne
ljmp
shll
call
mov
cwtl
aas
jle
pop
lea
dec
mov
stos
shrl
jl
pop
push
in
pop
xor
jae
lret
adc
jns
adc
sbb
mov
jp
inc
mov
pop
repz
sbb
mov
cmp
out
adc
push
or
out
in
sub
pop
int3
das
and
jl
data16
xor
loope
add
push
mov
jbe
adcb
mov
inc
aam
into
dec
sbbl
pop
int
stos
sub
stos
and
lods
into
fldl
inc
mov
jle
mov
jb
ret
imul
hlt
mov
addr16
or
ret
cltd
iret
xchg
adc
pop
pop
ror
out
dec
cmc
cmc
dec
or
sbb
jle
mov
dec
dec
adc
push
push
mov
sbb
jp
inc
mov
push
or
bound
jmp
xchg
jl
pop
test
clc
pop
out
inc
fldcw
lcall
out
test
gs
jg
lcall
cmpb
sub
xor
ss
fistpl
insb
pop
mov
les
pop
adc
gs
xchg
push
cmp
std
outsb
mov
sti
mov
jg
or
xchg
push
in
out
dec
std
insl
mov
xorps
or
mov
cmp
fldcw
sub
std
insl
int3
rcrb
sahf
mov
cmp
jl
pop
cmp
pop
mov
addl
out
pop
scas
lahf
roll
sub
sbb
mov
movsb
adc
cmp
outsb
xor
push
jno
jns
push
mov
lret
mov
cmp
in
mov
jge
add
sub
push
adc
add
inc
jmp
lds
lods
mov
cmp
imul
enter
cmp
xchg
addl
into
mov
int
mov
xor
mov
outsl
push
cmp
add
nop
pop
and
ret
pop
xor
cltd
testb
sub
push
adc
and
cmp
push
sbb
pop
fists
add
daa
dec
jbe
xor
orb
test
and
mov
push
mov
stos
roll
jnp
mov
in
es
add
iret
adc
ljmp
mov
fwait
mov
test
lret
ss
test
sub
imul
lret
je
jae
popf
add
xor
mov
jbe
dec
cmc
mov
rclb
jmp
out
das
add
adc
push
or
sbb
push
xchg
mov
push
pop
jge
pop
and
jge
dec
add
sbb
xlat
sub
adc
not
xchg
das
das
sbb
jns
mov
aam
sub
into
popa
xor
lods
inc
pop
repnz
mov
jmp
std
mov
std
out
push
hlt
vpshufhw
movsb
test
jp
int
pop
pop
and
inc
mov
sub
fsubs
sub
ret
subb
ret
fidivs
cmp
movsb
into
push
aad
in
mov
or
inc
in
aam
xchg
add
repz
out
cmp
sub
decb
lods
mov
mov
subl
add
mov
daa
push
rcrb
sbb
cld
enter
mov
int
pop
jl
add
inc
imul
pop
adc
xor
ret
mov
int
movsb
sub
or
jno
cwtl
mov
ljmp
dec
mov
fistps
lds
sub
xchg
lahf
mov
pop
fs
pop
adc
nop
sbb
aas
outsl
jle
hlt
inc
mov
daa
adc
call
jbe
mov
stos
xchg
test
iret
mov
daa
dec
mov
inc
sbbl
xchg
jp
fcmovu
sahf
and
out
or
js
or
mov
gs
pop
mov
ffree
pusha
lods
push
mov
push
cmp
leave
xchg
movsb
enter
xor
dec
stos
and
faddl
adc
aaa
out
orl
add
jo
pop
xchg
out
push
push
jae
addl
add
stc
aas
push
rcr
jnp
ja
pop
sub
les
ror
pop
les
mov
pop
mov
jne
fcmovb
or
in
jno
lret
mov
jecxz
pop
je
xor
movsb
test
sbb
pushf
das
sbb
daa
ret
leave
cmpsl
add
out
flds
fiaddl
mov
cmp
icebp
shrb
lods
lods
pop
addl
cmpsb
push
dec
sbb
addr16
sti
pop
xchg
xlat
cmp
in
push
mov
pushf
sbb
ja
jmp
mov
or
mov
in
xchg
in
mov
sub
out
call
and
fisubrs
lods
loope
add
imul
scas
int
andl
test
pop
mov
imul
shlb
xor
lret
jp
mov
test
out
fsubrs
hlt
or
stos
and
cmp
xchg
adc
cli
mov
jecxz
jmp
data16
add
mov
dec
push
xchg
je
lret
andb
repz
jle
cmpsb
lret
jp
cli
inc
daa
nop
xchg
sbb
sbb
mov
add
lea
or
ja
inc
cli
pushf
insb
push
and
adc
cs
dec
dec
lds
mov
sub
aam
shl
push
jle
imul
push
pop
sub
xlat
dec
xchg
jb
push
xchg
std
mov
cmpsb
mov
adc
xlat
fwait
push
stos
test
sbb
gs
push
jne
andb
sbb
lret
cs
lret
adc
jp
dec
inc
fcoms
lcall
dec
out
push
cmp
cmp
mov
pop
shrb
int
sub
sbb
and
sahf
daa
inc
xchg
pop
rcrb
fmuls
pop
xlat
mov
cmp
andb
test
jmp
push
sub
jp
cli
jle
sbb
enter
lea
cmpsb
movl
xchg
or
mov
in
push
jge
cmp
outsb
jl
cli
stos
push
sub
stos
inc
fwait
imul
sbb
xchg
jmp
aad
pop
ljmp
in
mov
add
data16
inc
add
and
mov
xchg
and
lahf
ret
mov
or
pop
leave
or
addl
rcll
xchg
xchg
arpl
mov
xor
popa
roll
push
mull
icebp
mov
xchg
sbb
enter
rcl
aam
push
xchg
in
and
iret
adc
mov
lcall
fisubl
arpl
mov
repnz
push
inc
adc
adc
repz
mov
out
pushf
ret
or
nop
cli
lock
sub
fwait
std
mov
xchg
or
inc
cmc
std
mov
pushf
xchg
imul
je
xor
cltd
out
jge
stos
dec
arpl
sub
shll
jnp
mov
push
je
sbb
in
push
push
sbb
pop
mov
out
fs
out
mov
ret
movsl
repnz
mov
cmc
mov
clc
sbb
jns
fcoms
stc
repz
cmp
aad
mov
adc
fcmovu
sub
mov
mov
dec
xor
jmp
cmp
ret
rclb
mov
das
pop
inc
cmp
sub
mov
jno
adc
xchg
jecxz
xchg
dec
movsl
sbb
inc
jae
xchg
clc
fsubrl
dec
test
loop
nop
pushf
jle
scas
push
loopne
mov
fsubs
push
mov
jle
push
daa
movsb
push
xchg
outsb
jae
or
adc
or
jp
mov
add
push
jb
xorb
iret
rclb
adcb
mov
jns
addr16
jge
in
cmovp
mov
test
and
inc
loop
mov
or
in
mov
fwait
and
call
push
cld
rolb
jecxz
and
or
lret
adc
mov
push
dec
and
jae
xlat
push
mov
mov
loop
int
mov
add
out
lcall
int
or
lret
sbb
sahf
xchg
in
cmp
sbb
adc
cmp
and
fsts
or
mov
push
inc
mov
faddl
xchg
sbb
mov
sbb
push
xor
cmp
lret
mov
push
lahf
hlt
sti
and
adc
les
mov
xor
sqrtps
dec
mov
pushf
fistps
or
mov
jo
mov
xlat
idiv
and
ds
in
push
cmc
push
fcmovnbe
inc
cmpb
fcmovnu
cmp
stc
sub
mov
adc
hlt
movsl
mov
pushf
xor
jmp
shll
cmp
cmc
popw
imul
xchg
lods
or
push
mov
push
mov
fs
shll
pop
std
adc
in
call
mov
fadds
mov
jmp
jecxz
loope
inc
xchg
icebp
data16
ja
addr16
pop
or
xor
cli
pop
mov
mov
push
mov
cmp
cmp
mov
adc
inc
orl
jae
dec
push
and
adc
jle
das
decl
push
mov
cmp
imul
mov
pop
iret
and
sub
ljmp
rsm
arpl
xchg
jns
adc
push
arpl
xchg
cmp
repnz
xchg
mov
cmpsb
jbe
mov
mov
push
repz
cmpsb
dec
push
cld
pop
cs
push
mov
dec
inc
imul
and
sbb
sbb
or
fsubl
das
and
shll
push
cltd
pop
inc
mov
pop
dec
dec
push
nop
jmp
xchg
jo
cwtl
aas
add
test
outsl
push
sbb
icebp
jae
jns
call
xor
xchg
adc
pop
jecxz
xor
dec
lock
dec
mov
mov
in
dec
xor
xchg
adc
and
pop
das
aaa
mov
sar
or
sahf
jg
jne
clc
push
push
stos
xchg
ja
push
lahf
aad
dec
mov
xchg
inc
jp
xchg
cmp
mov
in
dec
loope
stos
dec
push
cmp
or
jnp
lahf
push
or
int3
and
pop
sbb
dec
xchg
add
popf
cmp
ret
jbe
xor
sbb
adc
jnp
push
push
mov
inc
jns
in
cmc
inc
sbb
and
movsb
das
shrl
out
jp
push
sub
scas
xlat
push
mov
adc
push
lods
in
adc
gs
or
sti
out
push
sbb
popf
sahf
push
mov
jo
pop
in
imul
adc
out
lods
mov
fimull
pop
ret
pop
fdivp
add
test
jo
xchg
shrl
lcall
sbb
adc
aas
xchg
mov
cmpl
dec
dec
pop
mov
xor
jmp
xchg
insb
das
shll
out
call
ljmp
push
adc
and
xchg
mov
jns
out
dec
inc
xor
out
mov
outsl
cmp
sti
push
repnz
inc
pop
les
out
push
icebp
rcl
negb
insb
dec
and
out
or
sbb
add
stc
lret
nop
pop
xor
fldt
loopne
xor
inc
dec
push
fdivr
bnd
stc
leave
push
add
dec
mov
in
jmp
jb
cld
pop
xchg
inc
stc
int3
sbb
sbb
frstor
fiadds
xor
fucomp
jle
cld
lret
orl
xor
mov
aaa
bound
ret
inc
ss
test
test
add
gs
ror
push
cmp
cmpsl
mov
or
les
inc
jl
test
cmp
sub
cld
add
loope
sbb
popa
divb
int3
aam
scas
cmpsb
xlat
cmp
mov
dec
adc
insl
pop
rolb
fdivrs
jmp
call
dec
cmpsb
arpl
sub
ja
shll
enter
nop
dec
lret
cld
pusha
sbb
mov
inc
pop
mov
mov
idivl
outsl
mov
clc
inc
push
imul
pop
adc
push
pop
in
pusha
jle
xor
pop
cmp
popf
icebp
jae
add
inc
sub
xchg
repnz
adc
push
ds
iret
mov
xor
test
push
xor
lea
bound
inc
jo
lea
ljmp
or
mov
cmp
pop
jnp
jecxz
test
mov
cltd
push
cmp
sub
ss
push
push
mov
addr16
push
adc
cwtl
add
ss
mov
pop
lea
hlt
push
incl
and
je,pn
mov
int
dec
repz
jae
lret
xor
in
sub
inc
xchg
daa
filds
add
add
jb
xchg
xor
mov
jne
or
into
ss
xor
xor
pop
mov
adc
mov
cmp
sbb
pop
rcll
push
rcll
out
repnz
xchg
and
es
and
imul
ja
lea
insb
add
repz
dec
and
fiaddl
jl
mov
push
es
adc
scas
push
stos
outsl
repnz
cmpsb
es
adc
imul
mov
cmp
mov
iret
idiv
loop
cmc
into
fwait
pop
repz
jle
mov
sub
xchg
fistps
into
sbb
fiaddl
xchg
pushf
cltd
lds
jae
jp
in
lods
ljmp
mov
ds
ror
pusha
or
dec
and
mov
xlat
and
sti
pusha
or
movsl
fisubrs
into
mov
testb
lods
mov
nop
xchg
mov
push
movsb
jbe
xchg
push
mov
cmp
push
aad
jbe
xor
imull
add
adc
mov
mov
mov
push
dec
inc
rcll
inc
scas
sti
push
mov
popf
or
aas
mov
adc
jno
movsl
js
nop
pusha
add
push
pusha
inc
cli
call
cmp
sbb
cs
cmp
aam
popa
imul
icebp
sbb
jbe
leave
mov
xchg
lea
pop
or
or
movsl
xor
lret
sbbl
jl
and
test
aam
adc
mov
lahf
sbb
push
sub
add
adc
aas
in
mov
mov
mov
ret
in
cli
inc
mov
xor
imul
insl
and
cmp
or
ret
daa
sbb
or
mov
fidivrl
inc
imul
or
lock
jae
mov
inc
mov
stos
push
adc
sbb
data16
mov
imulb
or
xor
and
sbb
jl
pop
push
cmp
jb
clc
dec
jmp
fwait
lods
in
cmp
in
adc
cmpb
mov
push
prefetch
dec
mov
aas
sub
push
mov
jle
loop
pop
enter
jmp
cld
inc
lods
xchg
arpl
sub
das
inc
inc
mov
or
add
cmp
pop
jo
aad
cs
push
xor
push
inc
or
cmp
repnz
aam
jns
dec
mov
mov
imul
test
add
jno
loop
mov
jo
les
jg
ljmp
push
inc
decb
sbb
mov
out
xchg
xor
mov
xlat
adc
outsl
aaa
mov
jno
cmp
fsubrs
mov
mov
xor
sub
insb
sti
push
stos
mov
sub
shrd
out
dec
stc
sbb
cltd
push
push
cs
ljmp
shll
je
xor
es
nop
movsb
xor
int
adc
dec
mov
dec
fcmovnb
or
push
int
hlt
add
mov
fsub
call
jg
jle
xchg
mov
lods
xor
pop
add
cmpsb
sbb
movsl
dec
sti
xchg
std
ja
mov
scas
shll
cmp
loope
push
mov
mov
cltd
dec
xor
and
jg
xor
mov
fldcw
sbb
sub
mov
mov
or
push
test
shl
pcmpeqw
jl
pop
adc
pop
imul
inc
rcll
pop
jno
xchg
test
fwait
sbb
mov
jp
in
ljmp
fcomps
mov
stos
xorb
push
cli
roll
or
push
adcl
pop
or
lea
xchg
xchg
es
daa
sbb
adc
lret
pop
jmp
and
repnz
xor
sbb
mov
inc
xlat
pop
jae
add
jmp
jecxz
aam
lods
pop
sbb
js
xchg
push
int
iret
aam
and
xchg
push
in
push
in
jb
idivb
ds
cmp
mov
movsb
daa
cwtl
jbe
mov
ret
jbe
dec
shrl
pop
pop
jmp
push
mov
sbb
nop
jae
sahf
jl
pop
rcrb
mov
xor
fcoms
mov
insb
pop
call
or
loope
jp
test
pop
mov
and
and
popf
subb
mov
dec
inc
mov
add
stos
ss
outsb
sub
xchg
push
xorb
sub
dec
xchg
test
iret
mov
sahf
fcmovnu
xchg
dec
or
mov
pop
call
sahf
fs
or
jno
mov
or
sbbb
in
int
imulb
mov
mov
in
sbbb
sbb
stos
mull
hlt
rcr
inc
or
dec
mov
cld
pop
push
enter
testb
mov
std
mov
dec
mov
pop
repz
push
out
test
or
adc
scas
and
pop
xor
cld
push
orb
jmp
jge
stos
int3
mov
cmp
add
jns
or
jmp
cmp
add
add
pop
push
sub
test
xchg
sub
insb
jmp
movsb
jp
mov
sbb
or
popa
xchg
mov
mov
andl
xchg
clc
mov
xchg
fnstenv
xor
xchg
or
jge
frstor
xlat
lods
pusha
in
mov
loopne
dec
inc
add
lcall
sub
rolb
shlb
lret
or
sbb
pusha
xchg
pop
in
arpl
fisttpl
mov
add
fcoms
rcrl
mov
jg
or
mov
jae
movntps
add
dec
fwait
mov
sub
mov
dec
adc
cwtl
pusha
dec
sub
bswap
xlat
test
ja
xchg
dec
cmp
adc
aad
and
jmp
mov
or
pop
dec
imul
pop
cmp
cmp
data16
std
cld
loope
push
movsb
xor
jns
arpl
add
call
int
mov
xchg
jae
hlt
mov
js
xchg
pop
xor
mov
out
xor
ret
xchg
aas
arpl
das
stos
inc
pop
in
dec
adc
jno
pop
mov
in
xchg
push
and
sarl
aad
or
iret
add
mov
test
cmpsb
in
cmp
ljmp
add
sbbb
pop
push
sbb
loopne
add
mov
pop
inc
mov
cmp
sahf
repz
jae
and
xlat
jle
out
or
cmc
fisubrl
mov
xchg
xor
push
iret
jl
dec
les
je
jnp
test
xchg
add
das
ret
xor
es
imul
inc
xor
mov
dec
ret
js
repnz
mov
mov
and
mov
sub
cltd
xchg
add
jnp
pop
sbb
mov
dec
fcmovb
into
lahf
mov
loop
out
test
sbb
popa
mov
xor
xor
inc
xor
lahf
sub
or
or
mov
pop
jbe
jbe
shr
test
loop
rcl
dec
dec
adc
sbb
mov
iret
mov
jnp
lcall
in
sbb
pop
repnz
sbb
adc
inc
insb
push
incl
cmpsb
enter
pushf
add
mov
pop
cmp
pusha
cmpsb
cmp
mov
leave
leave
add
sub
test
pop
mov
mov
cs
adc
pop
pop
sub
adc
cmpsl
lret
add
cmpsl
mov
addr16
sbb
mov
mov
xchg
mov
mov
jb
pop
sti
lods
mov
mov
andb
and
stos
das
jg
jo
out
push
aaa
aad
jo
and
into
mov
roll
push
fs
mull
je
xchg
insl
push
loope
or
cs
pop
add
sahf
andl
inc
push
and
push
mov
lahf
ret
mov
pop
shr
xor
xchg
out
cwtl
adc
lock
inc
lock
pop
idivl
pop
testb
add
pop
fsubrl
incb
cmp
jle
push
imul
into
call
pop
xchg
push
push
popa
or
add
dec
mov
out
hlt
mov
imul
mov
scas
cmp
jae
pop
insl
push
adc
insl
test
sub
xchg
stc
pop
lret
movsl
pusha
pop
leave
out
mov
in
rcr
cmp
sbbb
xchg
cmp
cmp
jb
and
int3
call
push
adc
push
clc
inc
mov
xor
fiadds
dec
stc
arpl
in
dec
imul
rclb
daa
loopne
aad
aas
pop
dec
cmp
rol
jno
pop
pop
test
stos
out
sbb
adc
ja
shll
jae
ss
jp
xor
xchg
bound
mov
aas
mov
mov
nop
sub
pop
imull
xchg
and
mov
adc
movsl
mov
mov
push
jnp
inc
dec
pop
scas
xchg
lcall
inc
stc
push
call
fwait
rcll
push
stc
add
mov
adc
cli
jmp
aas
mov
jecxz
dec
pop
mov
jle
inc
dec
pop
repnz
mov
movsb
ss
pop
rcll
popa
cmc
sbb
test
loopne
iret
add
rorl
inc
xchg
mov
in
shll
negl
add
ficompl
mov
add
stos
jno
sahf
out
into
shl
rcr
fbstp
shll
xchg
sbb
cmpsb
pop
xor
lock
test
roll
push
repnz
test
lods
lret
pop
fcmovnb
sbb
adc
popa
ds
adc
inc
mov
mov
int3
sub
out
xacquire
or
push
adc
inc
stos
or
es
mov
les
mov
or
scas
dec
sti
out
cmpb
xorl
pop
popf
lahf
sti
push
xchg
loop
sub
push
orb
sahf
outsl
shr
cmp
mov
out
jge
jnp
pop
mov
dec
int
push
decl
jmp
lahf
cmp
mov
jb
insl
sbb
in
fwait
push
sub
movb
lock
jne
iret
imul
mov
rcrl
and
fnsave
mov
inc
in
cmp
aaa
ljmp
repnz
iret
xor
push
push
cmp
adc
imul
das
scas
mov
xor
fsubs
lea
xchg
addb
std
sub
dec
push
xchg
adc
addl
mov
inc
dec
lods
and
add
pop
xchg
out
arpl
pop
sub
mov
push
pop
out
push
lcall
and
cli
cltd
rcrl
inc
cmp
es
lds
jnp
test
push
cmp
rorl
clc
pop
mov
rol
testb
insl
in
push
adc
leave
jg
and
push
pop
cli
clc
lret
mov
scas
stc
loop
cmp
push
lret
outsl
xchg
in
adc
xchg
fdecstp
mov
sti
pop
mov
icebp
add
push
dec
jl
out
mov
xchg
pop
icebp
shrl
sub
jno
test
jno
ret
mov
jge
mov
pop
push
xor
decb
data16
jge
dec
in
or
ficompl
stos
les
sub
into
aaa
mov
fsubrs
adc
cmp
xchg
imul
mov
mov
adc
pop
xchg
in
jg
jns
test
add
jmp
cli
out
or
sti
popa
jecxz
mov
xchg
and
mov
addr16
dec
cmp
push
je
in
das
sub
imul
mov
push
and
lds
sub
lret
lret
xchg
cmpsb
scas
rcll
inc
std
rcrl
pop
pop
imul
and
stos
pop
and
int
addr16
push
or
sbb
fistpll
stos
mov
xchg
mov
push
mov
and
jns
lret
push
xchg
mov
scas
jg
fwait
sub
and
mov
imul
cwtl
adc
in
mov
sbb
xchg
sbb
sete
mov
pop
ljmp
stc
arpl
pop
lods
and
and
jge
jns
cmp
jbe
clc
aam
jbe
push
or
cwtl
inc
inc
rcll
push
xchg
mov
in
nop
and
imul
add
cwtl
xor
in
fcompl
push
divb
es
lret
lds
mov
shld
cmpsl
xchg
mov
movsl
movsl
les
cmp
loopne
orb
jmp
or
leave
cmpsb
push
pop
sub
aaa
add
push
add
pop
mov
shrb
sub
aam
and
shl
aam
pop
mov
jg
adc
aaa
cmc
push
scas
enter
jns
jno
mov
or
mov
data16
sub
mov
xchg
or
add
cli
mov
gs
push
adc
xchg
test
xchg
add
adc
jb
popa
rcl
jl
out
xchg
pushl
jp
rol
sub
sub
mov
icebp
push
mov
outsl
sub
inc
inc
movsb
pop
xchg
inc
pop
xchg
mov
xchg
push
fisttpll
fnstenv
lea
in
dec
ret
dec
sbb
and
mov
xchg
push
test
in
lock
mov
fimull
test
add
adc
icebp
in
and
dec
xchg
idiv
xchg
push
loope
sti
ja
sbb
mov
sti
add
into
push
pushf
je
inc
jo
inc
fs
xchg
xlat
mov
cs
inc
cmc
nop
mov
insb
mov
pop
mov
jmp
jmp
push
add
loopne
inc
cmc
fwait
icebp
aad
outsl
push
test
push
decb
mov
pop
cmpsb
scas
cld
jecxz
jbe
outsl
loopne
ds
loop
mov
in
cld
pusha
into
and
insl
push
add
fmuls
cmc
adc
mov
addr16
popf
cmp
adc
pop
mov
mov
mov
dec
cmc
lods
dec
mov
mov
dec
lods
fistpll
fbstp
popa
sbb
cmp
daa
clc
sbb
shlb
mov
mov
mov
imul
xor
inc
pop
jne
jns
lcall
inc
ror
data16
repnz
mov
iret
or
aaa
mov
dec
mov
inc
mov
movl
jnp
and
test
lock
fnsave
lea
shll
xor
int
push
repnz
pop
mov
cs
mov
scas
sub
pop
js
jae
outsb
sbb
dec
pop
lahf
inc
mov
popf
clc
lea
ror
jae
sbb
mov
imul
or
adc
pop
and
dec
mov
dec
arpl
jl
xor
xchg
adcb
loopne
imul
jmp
vcvtps2dq
or
xor
aas
cmp
lahf
mov
and
mov
mov
adc
mov
and
mov
lahf
fbld
les
loop
dec
call
xchg
cmc
mov
add
das
cmp
adc
enter
add
leave
mov
or
arpl
lods
ds
jle
add
fidivs
adc
push
add
shlb
andl
xor
test
popf
pop
lods
push
mov
xchg
cli
jo
adc
leave
jnp
jnp
out
adc
rorl
sbb
sub
and
pop
pop
xor
adc
mov
rcr
scas
mov
fnstsw
or
stos
mov
icebp
popa
popl
iret
data16
js
movl
or
stos
lock
push
push
pop
sub
adc
mov
dec
fbld
sahf
or
adc
xchg
adc
jmp
mov
fcomp
int3
das
fnstenv
lods
paddusb
adc
cmp
lret
cmp
pop
negl
push
std
aam
xchg
push
enter
push
jns
aas
lret
xchg
push
dec
xlat
jle
scas
dec
xchg
add
mov
xchg
mov
icebp
out
mov
movsl
mov
repz
inc
out
loope
xchg
popa
xor
inc
arpl
stc
cmp
cmp
lds
test
xor
imul
test
inc
mov
or
stos
adc
jns
fidivl
mull
lods
cmpsb
mov
fstl
pusha
mov
mov
push
insl
inc
push
mov
pop
or
rorl
ret
mov
ret
imul
scas
test
aaa
push
push
stc
in
ja
and
push
pop
das
jno
repnz
in
push
int3
pushf
jmp
push
mov
shlb
out
inc
push
jg
cmc
outsb
sbb
sbb
cli
aas
sahf
in
cld
xor
shrl
imul
es
mov
push
and
mov
xchg
adc
inc
mov
iret
cld
popf
inc
cmp
in
xchg
adc
scas
insl
lahf
jo
pop
inc
shll
push
stos
mov
mull
pop
cmp
mov
add
mov
repnz
xchg
dec
and
imul
inc
adc
sbb
insb
pop
jle
loop
in
call
and
xchg
outsb
mov
imulb
loopne
das
inc
jecxz
add
dec
in
enter
mov
out
jecxz
out
daa
or
insb
lret
sub
nop
adc
test
adc
std
stc
out
sbb
xchg
lds
push
insl
or
jge
pushf
js
lea
adc
in
int3
or
mov
js
and
fs
stos
dec
jns
iret
out
mov
sahf
add
cmp
shll
dec
cmp
bound
aas
inc
fldl
mov
sub
fcomip
mov
pop
leave
dec
cmp
xor
jg
adc
xchg
leave
test
sbb
pop
inc
add
adcb
lds
adc
shl
mov
mov
mov
mov
pop
cltd
or
xor
jmp
ss
xchg
outsb
jge
pushf
repz
sub
push
cmpsb
cltd
or
mov
sbb
cmpsb
mov
dec
repnz
mov
mov
adc
es
inc
xchg
sub
mov
xchg
dec
sub
mov
hlt
adc
or
pop
loope
or
lea
adc
and
sbb
xor
fwait
xchg
mov
imul
jae
add
sub
and
out
xchg
cmp
mov
pop
push
push
sbb
mov
cmpsl
or
iret
xchg
jae
mov
cmp
sbb
les
or
sub
xor
xor
jmp
cmp
xchg
rcrb
nop
push
lea
jmp
and
mov
mov
call
inc
cmpsb
cmc
xchg
enter
cmpsb
push
mov
adc
clc
inc
sbb
fwait
mov
cs
xchg
push
mov
and
pop
mov
shll
fwait
hlt
mov
pushw
ja
lods
dec
mov
ss
pusha
shr
ss
add
cmp
adc
mov
mov
out
push
adc
in
xor
hlt
add
lock
mov
incb
push
xchg
xlat
enter
imul
mov
pop
xor
sub
adc
adc
rcrl
cwtl
and
pushf
mov
repnz
cmc
jno
repz
jbe
sub
mov
repnz
adc
jg
lret
fwait
mov
repnz
and
sub
mov
dec
rcll
in
push
xorb
pop
mov
inc
jbe
mov
push
hlt
int3
mov
sub
mov
sub
mov
dec
jge
leave
xchg
call
loop
cmpsb
les
pop
xchg
pop
or
and
mov
push
inc
dec
imul
push
or
aaa
jecxz
sub
xor
add
scas
inc
and
shlb
icebp
loope
or
ja
adc
jl
bound
mov
adc
inc
or
fwait
into
out
rcl
ret
cs
mov
cmpsb
ret
call
cmc
out
jmp
adc
xchg
cmp
imul
std
stos
dec
jl
sbb
pop
pop
and
out
mov
dec
shll
push
gs
inc
movsl
cmp
lret
stc
adc
xchg
xor
or
rorb
mov
bound
dec
adc
sbb
int3
faddl
mov
push
cltd
mov
xor
dec
stos
sub
clc
xor
rcr
lret
push
dec
aam
cmp
js
fisubs
add
subb
add
sub
iret
sub
ret
cmp
testl
jge
std
decl
leave
inc
mov
dec
mov
or
adc
dec
xor
addr16
rol
hlt
mov
not
mov
rcrb
into
iret
int
push
inc
aaa
push
sub
mov
mov
mov
xchg
sub
fdivrl
add
in
push
out
incb
test
jns
sub
inc
xor
fbstp
sbb
jb
cmp
andb
push
push
scas
cmpsl
sti
cs
sahf
dec
loop
fs
xchg
jno
movsl
notl
and
and
jle
or
mov
mov
dec
add
mov
mov
outsb
and
clc
xor
shl
lods
adc
addr16
and
mov
fs
stos
xchg
lds
mov
mov
icebp
and
adc
sub
jecxz
mov
das
int
std
add
in
ret
push
shll
test
sbb
push
cld
pusha
sub
je
stos
inc
inc
outsb
or
mov
scas
je
fisubrl
add
cmp
mov
sub
iret
test
mov
mov
rcl
test
sub
dec
pop
arpl
sbb
lcall
inc
pop
jae
nop
fwait
lcall
xor
or
stos
fst
mov
das
testb
cmpsl
out
push
aaa
out
loopne
add
mov
sub
jge
frstor
hlt
addb
pop
add
rcll
sbb
add
fwait
adcb
cmp
fsubs
and
jg
push
sbb
and
iret
jge
fisttpll
xchg
enter
mov
and
jns
xor
movl
jl
in
fcmovb
mov
rorl
ja
cmpsl
pop
sub
dec
movsb
or
lods
shrl
jnp
int3
jbe
out
leave
xchg
add
xchg
jg
shl
cmp
orl
push
pop
or
cmp
mov
cmpsb
fdivrs
in
lea
std
jg
add
andl
mov
mov
mov
push
mov
mov
mov
loop
mov
scas
xchg
lcall
ret
insb
cld
ret
lret
and
jecxz
cmp
roll
cmpsl
mov
movsl
pop
pop
pop
clc
sbb
lahf
insb
push
je
popf
mov
adc
stc
dec
sub
popf
push
push
insb
in
jns
outsl
sub
aad
push
rdtsc
xchg
call
cmp
shl
adc
mov
pop
sbb
hlt
pop
jmp
inc
iret
dec
jmp
rcrb
xor
ljmp
hlt
mov
sbb
daa
and
ficoml
out
dec
ja
enter
ds
arpl
sub
fsubs
cmp
gs
push
dec
leave
pop
xchg
push
push
cli
int
test
push
arpl
xor
bound
insl
lods
push
mov
jb
push
dec
sbb
or
ror
or
mov
pop
pop
scas
xchg
inc
cmpsb
cli
ja
pop
cmp
scas
movsb
cld
jg
nop
sbb
and
push
mov
pop
jl
add
in
in
jg
outsl
test
ds
mov
lcallw
inc
mov
push
inc
mov
or
push
push
cmovg
sbb
mov
mov
into
fsubl
fisttpll
lcall
and
movsl
mov
nop
movsl
in
daa
popf
imul
mov
pop
bound
sub
cs
pushf
cmp
push
push
add
pop
sbb
jecxz
insb
pushf
aaa
sbb
repz
ret
jae
adc
and
fnstcw
push
xchg
insl
push
or
enter
fsub
lock
addr16
mov
shrl
in
rep
push
bound
push
mov
mov
ret
int3
mov
arpl
or
out
push
loope
insl
push
or
lock
iret
cmpsb
pop
dec
jbe
paddw
add
je
lahf
sbb
or
mov
mov
mov
cld
ljmp
clc
push
mov
push
xchg
fsubp
or
sbb
mov
mov
insb
data16
pop
aam
lock
jno
movsl
mov
cmpsb
in
scas
pop
lahf
mov
mov
pop
cltd
cmp
ja
pop
das
arpl
fidivrl
mov
or
push
push
mov
pop
pop
jns
cmpsl
adc
mov
sub
insb
enter
cmp
ds
fs
push
aas
cs
sub
mov
sbb
cli
mov
addr16
out
pop
pop
jecxz
push
push
cli
cmp
outsl
add
cmp
repz
push
std
or
faddl
cld
and
jl
pushf
negb
adc
cwtl
inc
mov
popf
push
jae
int3
sub
sbb
scas
popf
push
push
hlt
rclb
test
rcl
rorb
pop
xor
fucomip
jbe
jbe
in
jmp
jmp
cli
divl
clc
and
push
xchg
xor
mov
mov
in
inc
ss
ficomps
in
sub
cmp
mov
dec
cmc
in
xor
cmp
sbb
js
out
mov
sbb
cld
jnp
cld
or
cmp
jl
inc
adcb
inc
jp
and
push
push
inc
or
clc
jmp
inc
int3
add
popa
shlb
js
cmp
cmc
icebp
out
or
adc
shrb
adcb
fcoml
adc
xor
cmpsl
ljmp
dec
adc
sbb
int3
dec
pop
leave
push
jg
pop
into
dec
ret
add
mov
gs
jmp
push
cld
das
jbe
xchg
setno
popf
mov
repnz
push
imul
std
add
sarb
out
imul
stos
rorl
shl
or
subl
xlat
inc
mov
fnstenv
mov
inc
fnsave
imul
xchg
stos
pop
loopne
mov
add
hlt
call
and
pusha
ja
loope
or
out
inc
lods
jbe
pop
loopne
dec
je
jecxz
insl
xchg
out
inc
pop
add
push
test
sub
mull
popf
or
mov
outsb
inc
movsl
popf
mov
cmp
fwait
cmp
or
add
in
dec
fsts
cli
jbe
inc
clc
push
outsb
loope
mov
rclb
xor
mov
xchg
push
mov
imul
add
dec
je
sub
sbb
push
adc
cmp
sub
cltd
adc
xor
stos
daa
mov
pop
add
add
rcll
loopne
mov
mov
fisttpll
je
das
sbbb
dec
adc
inc
adc
xor
test
pop
cmp
ljmp
jp
repz
and
add
and
mov
jmp
jno
fistpll
adc
ret
adc
push
jb
aas
loopne
xchg
cs
fistl
div
movsb
test
insl
cmc
sub
jb
jnp
lret
test
hlt
out
jno
clc
dec
jb
hlt
mov
fs
mov
jno
out
and
fdivr
js
test
jle
jne
cli
jge
addr16
pusha
js
popf
xchg
cmp
xchg
aam
mull
adc
jecxz
test
mov
push
mov
cmpsb
das
rcr
aaa
loopne
dec
das
and
aam
fsubs
and
mov
aas
scas
sbb
mov
xchg
or
sbbb
ficoml
dec
sub
fistps
add
outsl
sbb
xchg
jmp
loopne
xor
inc
dec
lea
aaa
cld
sub
in
mov
dec
cmp
mov
add
stos
jecxz
dec
push
pop
push
bound
sti
dec
call
adc
aam
sub
mov
xchg
mov
clc
out
cli
int
lret
push
adc
dec
outsb
mov
inc
xchg
cmp
mov
add
sub
shlb
orl
les
xchg
imul
rolb
mov
sbb
inc
bound
insl
push
jmp
or
hlt
pop
sub
inc
gs
push
in
lods
mov
sbb
add
aam
lods
lret
push
notl
je
int
push
or
lahf
hlt
mov
test
cli
mov
clc
stos
push
xor
movsb
lcall
iret
sub
mov
add
pop
jg
out
xor
mov
pop
and
mov
cmp
dec
frstor
dec
add
call
xchg
lret
data16
inc
imul
es
mov
out
xor
pop
repz
setb
mov
aas
repnz
in
mov
sbbb
call
insl
inc
psllq
stc
fidivs
addr16
push
arpl
cmp
es
test
push
jp
add
pop
pop
inc
sti
jnp
mov
mov
push
adc
sub
mov
fs
add
test
push
jbe
test
in
outsl
push
and
adc
pop
xchg
inc
xchg
rol
cmc
cmp
pushf
jno
mov
xor
mov
out
ss
dec
jmp
icebp
aam
sarb
imul
push
out
mov
roll
clc
cwtl
imulb
xchg
xor
pushf
fdivrl
in
xchg
inc
into
ret
mov
test
flds
cltd
movsl
popa
ja
xchg
pop
loope
push
and
cmpsl
stos
push
into
into
inc
push
in
test
pop
push
or
cli
imul
fisubs
repz
mov
cmc
adc
mov
test
adc
dec
mov
dec
mov
jecxz
or
add
addl
outsb
cmp
pop
jl
stos
es
ljmp
xchg
das
ljmp
push
lds
mov
out
mov
and
xor
jle
xlat
dec
int
xor
xchg
stos
push
sub
and
rcll
test
pop
testb
jge
xor
add
aaa
ljmp
pop
push
mov
sbb
inc
shll
add
rcrl
cmc
jg
lods
scas
cmp
adc
mov
adc
mov
or
sahf
push
dec
sub
xor
stos
hlt
pop
mov
ljmp
jno
fcmovnu
stos
jae
mov
shrb
or
inc
inc
testb
push
xor
je
cltd
cmp
push
sub
mov
test
aaa
mov
dec
push
sbbb
imul
xchg
movsb
or
fcmovnbe
dec
and
and
mov
testl
aad
cmp
push
push
jp
rcl
adc
cltd
dec
fwait
mov
orb
xchg
nop
adc
hlt
cmp
pop
sub
push
fdiv
mov
test
pop
das
pop
js
pop
push
pop
lods
jbe
in
push
iret
cltd
fs
xorb
shl
lret
dec
lock
dec
pop
and
mov
movsl
sahf
lods
mov
inc
sbb
dec
push
cli
lods
out
mov
fidivl
inc
shr
lds
mov
and
insb
clc
sub
sbb
cmp
push
lret
pop
inc
es
idivb
inc
lcall
lods
adc
cmp
testb
popa
mov
in
inc
or
jae
sbb
repnz
pushf
mov
shrl
stos
das
jb
mov
adc
fstpl
out
rol
or
movsb
mov
cli
jb
jb
mov
add
sbb
loopne
aaa
jmp
push
dec
mov
js
xor
push
je
int3
push
mov
adc
imul
or
jae
xor
mov
mov
push
mov
or
jge
push
movsb
in
fwait
xchg
push
ss
insl
sub
stos
leave
icebp
in
dec
fidivrl
push
mov
ffreep
push
and
sub
enter
scas
mulb
and
mov
lea
dec
add
pop
inc
dec
ljmp
xchg
add
hlt
icebp
stos
outsl
inc
xor
inc
pop
test
jno
movsb
push
jb
mov
mov
lret
popf
popf
and
push
test
in
inc
imul
inc
test
lds
sub
in
or
icebp
insl
pop
insl
xor
inc
por
pop
stos
or
pop
jae
mov
pop
push
lahf
mov
insb
push
pop
sub
mov
in
adc
aad
or
cltd
loopne
in
aaa
cmpsl
movsb
mov
popf
add
sbb
sub
mov
pop
leave
das
jno
mov
jbe
pop
fsts
cmp
aaa
stos
rolb
pushaw
insb
outsl
mov
mov
ja
out
push
push
fcom
int3
gs
push
dec
fisubs
jge
repnz
inc
stc
adc
push
cmp
mov
jb
jb
dec
and
int3
iret
jmp
shll
sub
and
ljmp
and
cmpsb
imul
dec
pop
movsb
adc
stos
sub
adc
push
test
sti
lods
sbb
dec
popf
call
popf
in
lods
dec
insb
aam
mov
je
loope
jns
aad
mov
or
notb
lock
pop
xchg
stos
jmp
imul
pop
hlt
les
pop
ds
sbb
loopne
aaa
adc
adc
mov
cli
mov
cmp
dec
xor
push
dec
lods
enter
lods
sbb
adc
gs
popf
xlat
fistps
int
inc
xor
repz
sti
and
fisttpl
inc
pop
int3
rclb
out
jne
and
outsl
inc
xor
subl
pushf
outsb
push
dec
inc
imul
push
push
jmp
sub
cmpsl
dec
cltd
mov
aaa
aaa
cli
decl
in
push
int3
in
ret
out
and
rol
cmpsl
mov
pop
stc
or
jb
and
ficoms
in
pop
sahf
test
filds
aad
iret
jns
stos
sbb
xchg
mov
xchg
xor
dec
imul
je
cltd
or
leave
and
sbbl
shll
sub
and
movb
stc
adc
xchg
adc
ja
inc
testl
xchg
adc
cmpsb
loopne
and
mov
aam
sti
sbb
in
data16
sbb
cmc
pop
lds
dec
popa
test
jp
sahf
push
xchg
mov
xor
scas
add
stc
jle,pn
pop
outsl
stos
sub
ds
mov
adc
test
movsb
movsl
pop
mov
loop
adc
jbe
pop
mov
lods
lret
pop
mov
jp,pn
lods
int3
add
cmp
xor
cmp
sbb
pop
ja
clc
ret
adc
xchg
cwtl
adc
pop
inc
inc
popa
xchg
popa
jmp
leave
shrl
jmp
mov
cli
xchg
insl
subl
enter
xchg
iret
fbld
movsb
shrl
test
lock
sbb
add
scas
sub
clc
rclb
xorb
pushf
js
rcl
out
ror
mov
push
loope
push
icebp
or
shll
jb
jl
inc
in
push
mov
insl
pop
push
and
and
cwtl
pop
cmp
std
stc
dec
loope
cmpl
neg
dec
cmc
pop
push
mov
mov
negl
and
or
clc
cmc
mov
adc
cli
orl
mov
and
hlt
dec
mov
mov
mov
imul
mov
sahf
aad
add
mov
stos
mov
mov
out
js
inc
add
add
mov
aad
or
fcomi
adc
dec
inc
negb
xorb
and
push
sarl
daa
add
imul
pop
leave
pop
scas
loope
push
push
rorl
jle
dec
pop
fs
int
mov
xor
xchg
hlt
mov
mov
jbe
sbb
call
lret
mov
insb
mov
in
xor
cmp
imul
sbb
pop
cmp
sbb
and
mov
fimull
xchg
dec
or
mov
xchg
dec
xor
cmp
pop
lds
sub
fidivs
cmpsb
in
push
hlt
pop
add
mov
and
rclb
insb
lcall
push
jmp
arpl
push
xor
cld
or
dec
cltd
pop
jnp
ss
inc
mov
test
xchg
int
pop
mov
mov
dec
mov
sub
mov
jnp
aas
loop
cmp
repnz
popf
and
add
inc
ja
aam
xlat
jae
jg
xor
dec
aam
cltd
xchg
and
fwait
pushl
cmpsb
lret
xor
xor
out
or
ja
push
xchg
and
push
xor
jno
mov
cld
jmp
stc
inc
inc
rolb
push
add
mov
ds
mov
inc
and
sahf
rep
mov
xchg
add
sbb
mov
aam
mov
inc
and
insb
icebp
js
loope
test
ds
push
sbb
js
adc
int3
lods
jns
fcmovbe
jb
xchg
or
dec
push
sbb
pop
enter
dec
cmpsb
sbb
mov
popa
jne
and
movsl
test
fs
jns
and
popf
push
repz
dec
icebp
leave
mov
jmp
repz
pop
xchg
xor
cmp
fwait
punpckhbw
andb
fimull
push
adc
pop
xchg
imul
xor
js
scas
xchg
clc
scas
aas
bound
push
fisubl
mov
pop
inc
mov
fsubl
in
fmuls
push
lret
inc
adc
scas
pop
xchg
sbb
lds
pop
xchg
adc
mov
xchg
mov
inc
inc
mov
dec
mov
lret
mov
scas
mov
loop
out
sbb
xor
les
les
cmp
mov
jl
or
pop
hlt
add
add
in
add
dec
loop
insb
jmp
add
call
pop
jns
enter
popa
jmp
xor
iret
sub
addr16
sarl
xchg
inc
mov
sahf
or
inc
inc
pop
pop
sti
xchg
addr16
xor
mov
adc
jne
arpl
cmp
pushf
dec
sbbb
inc
dec
rorb
hlt
mov
fs
xchg
adc
xor
inc
sbbl
mov
jne
not
pop
gs
mov
push
shlb
xchg
sub
ret
mov
xor
out
cmpsb
movsl
sbb
jns
add
add
push
mov
jno
inc
repnz
xchg
in
jns
dec
xchg
jle
sbb
adc
xor
and
mov
insl
mov
jns
bound
push
arpl
lret
fwait
xchg
enter
xchg
iret
mov
dec
lcall
ret
xchg
fdivl
jne
pop
clc
loopne
adc
mov
cmp
cwtl
inc
pop
repnz
sub
or
cmpsb
add
xchg
sar
add
lds
cli
push
sar
ret
shlb
fadd
shl
div
xchg
sub
cmc
das
mov
adc
xchg
jnp
daa
mov
mov
daa
jns
push
cltd
shl
pop
out
repnz
sub
test
and
sub
jmp
mov
adc
sbb
cmp
rolb
mov
mov
je
or
bound
mov
scas
daa
dec
sbb
push
imul
mov
sub
push
out
cmovb
fwait
nop
push
push
in
mov
xchg
jl
aad
mov
mov
jbe
mov
mov
pop
int3
sub
pop
data16
shlb
push
inc
clc
sbb
push
pslld
cmp
sbb
addr16
sbb
call
lods
fidivl
push
mov
cmp
out
mov
sbb
inc
adc
mov
jp
mov
fadd
add
lcall
cmp
sub
fucomi
popf
stc
xchg
sub
ja
rorb
pop
xor
dec
aam
js
ss
jg
int
jnp
leave
fwait
movsb
shll
lea
push
pop
push
mov
cmp
inc
mov
or
in
inc
dec
mov
test
and
sbb
stos
lahf
pop
pop
cld
inc
subl
xor
mov
sub
or
mov
das
fs
mov
shll
rcrl
adc
addr16
mov
ret
sbbb
into
outsb
mov
adc
xchg
movsb
adcl
dec
je
clc
fimuls
pop
push
dec
push
mov
fnstcw
xchg
push
jnp
or
rorl
ds
sbbl
mov
pop
dec
outsl
arpl
rorl
mov
inc
sub
inc
or
sahf
sub
aam
and
xchg
mov
inc
js
mov
shrb
rorl
add
pop
popa
push
outsb
mov
pop
push
test
test
xlat
scas
cmpsb
sbb
lock
int
repnz
sahf
cmpsl
adc
sbb
xchg
lret
loop
mov
shl
imull
xor
pop
add
mov
push
icebp
push
mov
cltd
jge
xor
lds
cli
jae
mov
mov
out
nop
test
lret
shrl
dec
xor
testl
clc
add
push
pop
jl
lcall
popf
jno
rolb
xor
or
mov
lods
jecxz
pop
mov
mov
mov
push
inc
mov
int
enter
enter
dec
ret
iret
insl
daa
pop
std
out
jae
push
xchg
insl
sub
mov
repnz
cwtl
sub
in
fnstsw
sbb
loop
mov
sub
mov
jnp
add
xor
mov
pop
cmp
add
out
pop
xor
push
das
jl
push
mov
in
sti
push
outsl
push
outsb
test
xchg
mov
and
lods
and
sarl
pop
add
sti
jo
inc
push
loopne
fs
add
mov
add
sbb
pop
mov
aad
cld
jae
ds
int3
push
or
sub
das
mov
jp
mov
sbb
addl
imul
adc
mov
push
sbb
sbb
pushf
push
jmp
or
mov
push
fdivs
ret
mov
or
mov
roll
sub
je
cs
inc
andb
out
cltd
mov
sub
xlat
jg
adc
add
bound
test
out
in
test
dec
pop
push
add
cmpsl
jmp
and
or
aaa
filds
ds
mov
xchg
inc
cmpsl
add
dec
mov
popa
in
xor
fucomip
dec
loope
inc
xor
loopne
stc
mov
mov
mov
rcrb
mov
jns
lcall
repnz
popf
stos
gs
in
cs
shrb
idivb
inc
ds
cwtl
xlat
pop
out
push
jecxz
push
and
pop
mov
lret
data16
sub
mov
repnz
rcrl
or
push
pushf
movsl
out
mov
adcl
xchg
xor
xchg
push
sbb
cs
testb
lods
jbe
mov
stc
in
xchg
mov
pop
mov
sub
jns
push
or
adc
popa
sbbb
push
or
subb
icebp
push
movb
add
add
int3
ret
aad
push
cwtl
rorl
pushf
outsb
mov
and
scas
xchg
jmp
jmp
orps
hlt
ret
cltd
inc
in
jb
mov
loope
loopne
das
mov
adc
add
vphaddbq
xor
xchg
ljmp
mov
dec
divb
xchg
pusha
iret
adc
push
sbb
xor
cmp
ret
inc
jl
add
mov
into
inc
cmp
push
gs
dec
mov
das
cmpb
lcall
sti
cmp
loope
loop
push
fldenv
sub
les
adc
mov
movsb
cwtl
stos
and
fbld
lret
aam
jne
or
je
cs
lcall
adcl
into
lea
and
adc
call
push
insl
mov
mov
int3
push
repnz
jmp
add
out
pop
popf
movsl
push
popa
test
cmp
arpl
mov
out
xchg
or
in
push
sbb
push
test
inc
loope
loopne
das
js
pop
in
adc
push
out
adc
jecxz
or
jecxz
inc
mov
push
pop
cs
or
cs
jbe
push
push
push
mov
jg
jg
dec
mov
lahf
inc
arpl
push
cwtl
lock
inc
or
sti
or
stc
jae
mov
test
aad
js
adc
or
pop
lret
imul
test
pusha
sbb
add
xchg
mov
dec
imul
xchg
jle
dec
adc
dec
fidivl
or
or
pusha
out
es
adc
adc
inc
aaa
fwait
cld
int
mov
jno
dec
jmp
push
arpl
dec
adc
fstp
movsb
fldenv
fisubrs
xchg
inc
mov
daa
jno
mov
xchg
gs
lret
ret
cmp
adc
notl
hlt
push
mov
sbb
mov
xor
gs
testl
cli
mov
or
or
jge
int
mov
hlt
xchg
and
ljmp
hlt
dec
test
in
mov
arpl
cwtl
je
addr16
pop
fs
fidivl
addl
in
pop
rcrl
xchg
push
lret
lahf
lcall
nop
sub
stos
mov
add
dec
add
inc
fadd
inc
push
out
xor
pop
inc
rcrl
fwait
repnz
shll
inc
dec
imul
mov
jae
xor
jmp
adc
pop
shlb
lods
push
mov
lea
sbb
push
in
movlps
sbb
outsl
in
jle
mov
aam
mov
xor
neg
addr16
aam
fstps
in
es
js
mov
adc
dec
int
jge
pop
pop
sub
aas
lret
jnp
sbb
bound
stos
movsb
mov
mov
and
scas
cmp
inc
pusha
es
aas
fsubs
stc
in
ficompl
mov
fsubp
sti
ds
lods
lods
fiadds
cmc
cmpsl
xchg
pop
push
aas
gs
jbe
jae
loop
inc
add
xchg
lock
mov
in
inc
wrmsr
mov
pop
aas
arpl
dec
insl
cmp
pop
xchg
lcall
test
xor
push
lret
test
push
pop
je
inc
mov
xlat
push
in
imul
mov
inc
movsb
sub
jl
fdivrs
scas
cmp
xlat
jbe
cltd
mov
jae
lods
aam
movsl
xor
mov
iret
pop
stc
mov
mov
cmc
inc
sahf
xchg
pop
out
and
shll
movsb
dec
mov
in
cmp
inc
fisubrs
rorb
stos
mov
or
xchg
push
shll
push
pushf
stos
std
dec
sbb
loop
jnp
dec
adc
push
xor
cmp
out
or
jle
stos
xor
cmp
pop
jae
xor
xor
push
fcoml
adc
inc
inc
fwait
jae
xchg
xchg
pop
lret
cmc
jge
inc
cmp
dec
dec
movsb
mov
out
aam
cmp
dec
and
xor
jno
stc
rcr
pop
sbb
push
xchg
push
sbb
call
xor
xor
std
xchg
mov
cltd
loope
jle
loop
mov
out
jge
xorb
out
std
add
lcall
mov
inc
jbe
icebp
adc
xchg
cld
mov
xchg
cmpsb
cmp
sub
ss
push
cmpsl
icebp
subb
int
loope
mov
push
popa
js
or
movsl
dec
and
cmp
hlt
sahf
dec
and
push
mov
ret
imul
stos
mov
dec
popf
das
std
rclb
aas
jge
pop
sahf
add
js
xlat
test
jo
add
xchg
xchg
push
push
cmp
cmp
mov
int3
mov
mov
adc
mov
inc
stos
jns
enter
das
test
testl
jo
hlt
enter
fildl
ficomps
fstpl
push
imul
dec
sub
cmp
icebp
mov
ljmp
daa
lret
loop
ficoml
add
mov
loop
add
push
imul
xchg
shll
mov
jnp
daa
xor
or
adc
in
out
pop
mov
cwtl
and
in
adc
or
inc
push
add
popf
mov
pop
dec
xor
mov
and
cmc
aam
jecxz
int3
lcall
lret
ljmp
rcll
jo
mov
fimuls
dec
movsl
test
imul
imul
test
pop
sub
cli
pop
push
xor
outsl
jnp
lock
xchg
aam
add
out
push
xlat
scas
jp
cwtl
pop
fidivl
pop
push
leave
cmc
cmp
jns
push
icebp
dec
test
insl
js
into
repnz
lods
xor
xchg
sbb
dec
xor
or
sbb
and
jnp
add
inc
int3
jne
aaa
std
popf
mov
into
xchg
sahf
mov
fwait
sti
pop
mov
mov
sub
in
dec
mov
dec
jmp
push
std
jl
push
cmp
jne
push
sbb
lret
sbb
stos
cmp
jmp
mov
jp
cmc
adc
nop
std
icebp
icebp
pusha
out
decb
adc
or
pop
cltd
pop
out
jb
sbb
mov
sbb
adc
jl
arpl
repnz
test
and
push
push
js
in
popf
and
xchg
jg
jl
aam
pop
jmp
jo
or
adc
push
pusha
cmp
push
dec
pop
out
sub
add
enter
add
add
sub
insb
cs
mov
jb
cmpsl
xchg
add
adc
mov
adcl
data16
rorb
mov
cmp
jl
popf
sub
out
aam
add
dec
adc
pushf
dec
or
mov
push
stos
mov
inc
test
xor
imul
sub
lds
jno
in
lea
sbb
xor
fildl
ret
aad
and
insl
push
repz
sub
or
adc
xchg
pop
xor
sbb
sti
out
decb
mov
insl
push
or
test
lds
mov
xchg
pop
and
adc
mov
sbb
or
leave
mov
cmp
xchg
jb
in
pop
repnz
in
popf
and
dec
les
dec
xlat
pushf
xchg
and
sub
test
lret
sub
lea
mov
pop
popa
arpl
pop
lret
cs
or
mov
xchg
roll
mov
or
pop
xchg
mov
faddp
in
int3
iret
push
push
mov
push
sub
pop
lret
aas
xchg
push
adc
and
push
add
int
sarb
cltd
test
add
std
fwait
divps
add
push
or
fwait
repz
sbb
je
push
mov
push
inc
push
in
fdivs
add
rcll
xchg
or
inc
test
jno
cmpsb
push
or
sti
cmp
inc
sbb
xor
add
dec
inc
in
or
iret
adc
or
push
out
nop
mov
push
rclb
mov
imul
jg
jmp
rcrl
inc
aad
sbb
or
fistps
subb
xchg
sub
loope
cwtl
xor
nop
mov
stos
pusha
jp
enter
pusha
or
test
ds
repnz
jl
and
ljmp
mov
fucomip
aam
lds
sahf
xchg
push
rcrb
xor
xor
sbb
or
insl
repnz
pop
outsb
lds
rcrl
lock
outsl
push
clc
inc
outsw
ds
in
cmp
test
hlt
xor
out
sti
stc
mov
mov
popf
and
xor
pop
add
roll
ss
fs
pop
insl
add
cmp
jmp
repz
mov
bound
sub
cmpsl
shrb
repnz
mov
clc
xchg
out
dec
mov
shlb
daa
mov
dec
fisubrl
sbb
ss
sbb
push
data16
push
je
fwait
aam
lret
js,pn
adc
decl
pop
and
mov
test
mov
icebp
mov
pop
int
into
out
jg
int
cmpsl
or
or
cwtl
xor
push
dec
clc
and
jae
fwait
dec
fisttpll
push
pop
test
pop
xlat
mov
lret
nop
rclb
das
call
fsqrt
clc
int3
push
test
add
bound
fwait
test
pop
ss
sarl
and
mul
adc
jne
xchg
mov
in
add
sbb
xchg
push
subb
fdivs
outsl
cmp
lea
testb
mov
xor
sub
sub
mov
popf
push
iret
mov
out
lahf
or
xchg
stos
sarl
mov
loopne
mov
insl
lret
inc
mov
cli
ficoml
xor
mov
mov
iret
cmp
or
xor
cmpl
mov
mov
into
mov
sysexit
sbbl
push
sub
leave
leave
scas
mov
pop
sarl
pop
bound
mov
adc
lods
add
imul
lret
insb
mov
or
and
xorb
sbb
movsl
jns
loope
adc
repz
dec
mov
test
mov
das
jns
mov
stc
sub
lods
push
sbb
lods
daa
xchg
test
adc
cmp
and
iret
add
pusha
shll
fnstenv
xorb
xchg
mov
xor
sbbb
cmpsl
push
loop
pandn
sub
in
push
sub
push
xchg
pop
add
sti
or
pop
repnz
jecxz
and
sahf
or
xlat
sbb
xor
push
jnp
in
iret
movsl
outsb
dec
or
scas
int3
xchg
pushf
sub
sub
in
sbb
aad
mov
sub
stos
sbb
aam
ss
xor
addr16
sbb
leave
sub
ret
jg
pusha
aam
fimuls
push
fs
adc
sub
mov
jne
addr16
clc
loop
push
fnop
adc
sbb
loopne
dec
sub
mov
inc
xchg
lods
jg
cmp
popa
jbe
outsl
jb
xor
add
jp
dec
sbb
mov
pop
mov
cmpsl
jns
popf
in
push
ss
ss
add
cmp
dec
cmp
dec
scas
jae
sub
mov
cltd
sbb
add
or
enter
xor
jle
dec
jb
daa
jnp
pop
test
dec
cmpsl
rcll
or
test
mov
jge
inc
xchg
pop
iret
hlt
sub
xchg
movzbl
adc
leave
dec
mov
jo,pn
jo
addr16
iret
mov
mov
jle
jecxz
push
xchg
sub
xor
iret
cs
imul
js
sti
dec
adc
movsb
xor
push
add
arpl
cmp
inc
or
les
mov
adc
into
or
pop
ja
sbb
js
cld
mov
scas
lds
mov
mov
imul
inc
jnp
adc
fs
fisubl
pushf
pop
sub
jp
push
mov
pushf
aam
pop
sub
inc
sarb
repz
push
cltd
mov
and
pop
lret
in
adc
repnz
test
mov
sub
stos
es
imul
enter
pop
push
roll
out
xor
sbb
inc
cmp
mov
sbbb
pop
mov
into
inc
iret
push
stc
loop
push
cld
xchg
mov
push
in
sub
fucomp
test
into
xlat
mov
inc
xchg
enter
loop
inc
jmp
in
daa
rol
xchg
loope
iret
and
inc
sbb
or
insb
mov
dec
xchg
mov
pusha
jge
fildll
pop
jecxz
call
lahf
negl
sbb
jle
ret
inc
cmpsb
js
cmc
sahf
clc
rolb
scas
fs
adc
enter
pop
push
addl
xor
inc
lock
js
loope
add
lcall
mov
adc
xchg
and
subb
insb
push
mov
sbb
das
xor
shrd
cmp
jno
repnz
out
jge
and
insb
stos
in
in
xlat
mov
push
xchg
popa
inc
pop
pop
popf
in
inc
cmc
adc
mov
fisubrl
sbb
enter
xlat
jge
xchg
sbb
cmpsb
movsb
dec
push
push
inc
shl
push
jnp
ljmp
pop
jl
aas
mov
cmpsb
mov
push
jae
flds
mov
imul
adc
xor
arpl
roll
lahf
lcall
jecxz
aas
cld
jp
mov
mov
js
cltd
ljmp
add
or
fucomip
xchg
icebp
mov
leave
dec
callw
out
inc
je
nop
sub
stos
sub
push
add
pop
pop
or
mov
das
pop
xor
xchg
cltd
xchg
sahf
aas
test
rdmsr
pop
adc
jo
push
fs
mov
jmp
bound
lret
mov
inc
addr16
sbb
dec
pop
leave
or
mov
into
fldcw
sbb
pop
lea
mov
jae
mov
jle
pinsrw
sub
aad
fimuls
cmp
in
orl
xchg
jnp
add
cmp
popa
popf
or
pop
aad
mov
notl
cli
jo
mov
mov
fwait
adcl
jne
push
call
std
mov
inc
mov
jno
sar
mul
pop
inc
xor
imul
not
fidivrs
jmp
insl
stos
cltd
push
mov
fs
into
add
fidivs
xchg
jmp
int3
cmc
mov
ret
push
pop
and
add
cmp
push
sahf
std
jo
insl
cmc
mov
lcall
sbb
add
out
lea
or
pushf
lahf
inc
dec
or
pop
jp
sub
dec
mov
fimuls
divb
test
scas
ja
sbb
ljmp
adc
sahf
loop
cmc
cmp
mov
imul
mov
inc
adc
scas
inc
fnstsw
sub
arpl
fstpt
mov
pop
out
lods
cmc
jge
cs
sub
notb
dec
popa
add
dec
pushf
or
int3
mov
mov
mov
or
xor
ljmp
xor
jl
dec
cmp
imul
jbe
icebp
inc
movsb
mov
sbb
fwait
jb
shll
jnp
subb
or
shll
dec
adcl
gs
jge
jg
inc
sub
pop
jns
fcmovnbe
or
jo
sbb
es
jmp
or
and
or
sub
mov
mov
arpl
nop
pop
dec
ds
or
into
lds
fdivs
bound
clc
in
push
xor
stos
pop
insl
adc
das
sub
int
in
rolb
sbb
mov
cmp
outsl
lcall
scas
cli
pop
dec
into
enter
sbb
stc
add
mov
in
movsb
mov
xlat
data16
push
jbe
dec
jnp
cmp
dec
xchg
pop
nop
call
scas
mov
incl
dec
adc
nop
loopne
sbb
stos
jae
adc
aad
cmp
jge
dec
stc
pusha
sub
int3
fstps
insb
das
aad
pushf
cmp
outsl
push
cltd
fidivrl
test
clc
cli
jno
dec
jnp
js
push
jo
inc
inc
fnstenv
add
adc
in
push
pop
ljmp
cli
pop
pop
into
dec
test
jle
push
pop
not
bound
ret
lret
pop
lock
insl
cmp
sub
pop
shl
test
add
push
js
xor
push
stc
das
test
popf
inc
push
fstpl
cs
sti
pop
cmp
mov
repnz
cmp
mov
push
clc
pop
jns
pushf
ret
dec
cmpsl
addr16
mov
mov
jae
xchg
movsb
cltd
and
lods
icebp
mov
sub
das
mov
pop
xor
add
push
int
iret
and
xor
shlb
push
cmp
mov
mov
cmp
push
sub
stc
mov
add
adc
add
into
ret
in
fisttpll
adc
push
icebp
test
fildll
movb
into
test
arpl
jle
movsl
bound
fcom
pop
enter
and
fdivs
aad
mov
jl
test
cmp
dec
test
mov
cmp
xlat
dec
adc
pop
out
insl
test
jo
fisubs
insb
lods
jo
stos
icebp
rcll
dec
push
ret
not
fsubrp
pop
pushf
xor
mull
and
jg
and
cs
inc
sahf
ljmp
or
bound
mov
arpl
ss
add
rcr
jb
scas
lcall
xchg
mov
out
and
xor
cmpb
imul
aam
cmpl
imul
icebp
fstps
out
xlat
jmp
ret
fimuls
mov
ljmp
xchg
arpl
cwtl
aaa
das
jmp
fdivrl
xchg
inc
nop
ss
jns
xlat
out
xchg
pusha
cmp
mov
cmp
pop
mov
cmp
bound
lret
imul
or
xchg
cmp
pop
movsl
push
mov
xlat
call
loopne
mov
aad
hlt
addr16
adc
mov
out
cmpb
inc
outsb
push
lcall
push
sbb
inc
sub
adc
cmpsb
push
pop
in
mov
jbe
rclb
or
inc
shlb
fucomi
inc
cli
je
push
xchg
pop
xchg
int3
xchg
cmp
or
cmp
jne
testl
test
iret
cmp
sti
pop
call
jbe
sbb
idivb
push
hlt
push
jg
add
xor
clc
repz
mov
cwtl
mov
jo
in
mov
lds
add
lds
dec
and
fdivl
xlat
xlat
cmp
int3
inc
adcl
fimull
sub
cld
mov
push
mov
rol
pop
dec
out
aam
pop
sub
sub
aas
mov
ficomps
mov
std
pop
stc
xchg
push
scas
fcomps
adc
bound
hlt
cmpsb
mov
shlb
cmp
add
inc
jb
mov
pop
push
imul
xchg
mov
ja
sub
sub
jnp
mov
pop
adc
in
sub
aam
lock
and
mov
scas
shll
ret
xchg
bound
stos
jl
mov
adc
mov
lods
subb
dec
nop
push
cmpsl
xor
lret
ds
lret
out
sub
les
popf
mov
push
sub
in
cmpsl
sub
stc
loope
lcall
movsl
divb
mov
push
repz
fadd
xchg
andl
add
mov
xor
dec
dec
xor
outsb
icebp
push
push
xchg
cmpsl
mov
pusha
arpl
cmpsl
sbb
push
rcll
xchg
loopne
fsub
les
icebp
fistpl
cmp
push
xchg
fdivrp
enter
and
push
mov
bound
call
notb
and
test
shll
rolb
cltd
mov
adc
or
ret
fwait
sbb
decb
xchg
xor
notb
xchg
std
pop
out
cmp
jnp
jle
clc
sub
sbb
inc
stos
inc
lods
outsl
mov
iret
mov
mov
aas
mov
stos
insb
in
or
stos
jno
and
aas
pop
pop
imul
fcomip
mov
into
int
xchg
cmpsb
shlb
xor
lods
mov
test
lea
pop
mov
ds
mov
stos
mov
mov
lods
test
pop
push
or
xor
xorl
decb
cmp
mov
jne
dec
jno
aas
xchg
arpl
cld
fists
jo
leave
pop
push
adc
das
test
ds
jnp
lahf
adcl
push
xchg
xor
scas
rcrb
repz
fimuls
sub
fs
cmc
sub
lock
adc
data16
notl
mov
ss
dec
ljmp
and
sbb
cmp
mov
and
pop
adc
in
and
repz
dec
ret
scas
sub
ss
aas
repnz
dec
incl
dec
pop
dec
push
xchg
inc
cmp
int
dec
aam
cltd
int3
leave
mov
dec
adc
jmp
pop
add
pop
mov
push
test
xor
sbb
xchg
inc
mov
pop
jno
fimull
fldt
fidivl
xchg
push
cld
fildll
jns
mov
xor
jge
push
adc
and
sub
mov
mov
lret
xchg
stos
movsb
lds
inc
dec
imul
ja
into
fwait
inc
repz
mov
jle
imul
sbb
mov
inc
ds
cmp
inc
pop
movsl
into
mov
mov
fidivl
pop
pop
mov
sbb
mov
adc
mov
xchg
lods
loope
cmp
cmpsb
xchg
rcll
imul
add
xchg
sub
adc
mov
shrl
mov
xchg
mov
aam
int3
dec
push
mov
pop
xchg
cmp
sub
std
mov
andb
out
cmc
sti
cmpsl
jp
ja
cmp
pop
xchg
xchg
adc
sub
cwtl
mov
xchg
mov
dec
mov
or
adc
xor
outsl
pop
push
sti
js
add
push
addr16
ss
push
fcomps
push
daa
call
sbb
mov
sti
movsl
pop
xchg
xor
xchg
fldt
mov
dec
test
inc
scas
sub
sub
pop
call
sub
clc
mov
fldt
aam
push
imul
mov
dec
mov
inc
dec
pop
mov
cmc
dec
lods
inc
jns
insl
pop
into
ret
or
test
cwtl
sub
ljmp
insb
mov
add
jg
imul
add
mov
or
mov
negl
loop
cmp
sub
pop
mov
stos
in
lods
lods
lret
or
xchg
shl
ljmp
xor
adc
or
pop
inc
rolb
push
jg
cmc
leave
call
push
fistl
add
sti
cmp
dec
cmpl
adc
xchg
add
lahf
out
and
mov
loope
sub
and
fbld
fcomps
call
push
mov
jmp
es
aaa
mov
loopne
jle
xorb
and
ficomps
jae
push
dec
out
out
pusha
or
mov
pop
pusha
xchg
arpl
fisubl
pop
pop
pop
pusha
cs
push
mov
loop
pop
out
arpl
orb
insl
sbb
and
mov
and
int3
es
jno
ja
aam
dec
adc
cmp
popf
lret
or
mov
sub
add
mov
fcmovu
shrb
movsl
pop
dec
add
mov
into
mov
loope
pop
jge
cmc
and
out
cmpsl
rorb
pop
add
cs
int
xor
push
or
mov
imul
dec
add
aas
push
xchg
sarb
arpl
xchg
push
call
fmuls
jecxz
outsl
in
test
adc
lcall
and
mov
test
nop
jae
in
ja
push
mov
adc
ds
aam
mov
or
sub
xchg
jp
inc
jo
movsl
movsl
cmp
shlb
cmp
popf
lds
inc
cmp
xchg
add
adc
cmp
cmpsb
cmp
lcall
jno
push
push
xchg
ss
dec
pusha
gs
jmp
xchg
imul
mov
sarl
cmpb
repnz
cli
fcomps
lds
lret
fidivl
xor
adc
sti
inc
in
cltd
in
dec
lea
inc
out
sbb
xor
shr
mov
inc
add
loop
cmpl
push
cmpl
imul
adc
out
je
sub
push
inc
cld
lods
cmpsl
outsb
or
rorl
arpl
cld
data16
movsb
dec
and
xchg
inc
mov
pop
ljmp
data16
pop
iret
mov
mov
movsb
int3
cltd
mov
adc
stc
lods
ljmp
or
cltd
mov
fisttps
ds
pop
int3
stc
mov
push
outsb
ror
in
es
adc
add
clc
xchg
mov
jp
arpl
pop
inc
int3
xor
adc
pushf
add
pushf
lahf
lahf
push
lcall
movsl
lods
sahf
mov
mov
sbb
cltd
es
mov
adc
adc
pop
jmp
cmp
rcll
dec
xor
add
jb
dec
sahf
push
arpl
aam
sarb
xor
sahf
call
mov
outsl
mov
push
in
add
ja
aam
xor
popf
pop
mov
jbe
repz
cltd
clc
push
in
js
add
fistpl
fcompl
jo
or
mov
or
or
mov
xor
jecxz
repz
sti
pop
dec
insb
loope
dec
pop
loope
inc
aad
ljmp
sbb
mov
dec
mov
nop
repz
fcmovnu
inc
in
sub
insb
daa
add
stos
add
and
dec
mov
push
pop
test
andl
and
jne
rcl
jbe
add
pop
insb
mov
insl
test
ficomps
insl
cli
fwait
out
mov
mov
xor
movsb
aam
test
xchg
pop
call
inc
or
or
shll
sbb
push
sbb
insb
mov
sub
and
xor
or
adc
dec
rorl
push
sub
sbb
sbb
fcoml
push
add
ds
call
imul
pop
lahf
xor
test
pop
and
mov
hlt
and
xchg
shlb
add
call
mov
shlb
cli
rcrl
andb
inc
push
pinsrw
in
fisttps
js
jle
mov
pop
stos
adc
add
int
dec
rolb
stc
push
je
imul
jbe
in
sub
dec
sbb
cmp
les
jmp
shl
fcmovnb
add
dec
js
rclb
dec
aad
mov
jnp
push
mov
push
imul
jecxz
pop
loop
outsb
cmp
add
divl
movsb
clc
pop
inc
mov
sbb
out
or
pop
xchg
pushl
hlt
mov
imul
cmp
sbbl
xor
cld
and
jmp
test
pmulhuw
ljmp
sbb
cs
ja
dec
or
mov
js
dec
push
lea
std
ja
adc
adc
scas
dec
popa
mov
add
add
popf
xor
push
test
push
cltd
pop
and
outsl
stos
decl
lods
dec
int
jne
sub
ficoml
jae
pop
push
cltd
dec
xchg
lods
adc
sbb
int3
lods
dec
ss
fsubs
mov
mov
dec
pop
jmp
shrb
or
ds
xchg
test
lea
shld
test
faddl
and
pop
xor
jne
or
sbb
movsb
push
push
adc
or
or
sbb
nop
push
mov
lahf
mov
dec
jne
enter
push
xor
jb
mov
and
push
or
mov
testb
push
mov
adc
mov
shll
shr
fildl
bound
sub
pop
add
pop
dec
xchg
into
loopne
mov
mov
jae
push
mov
and
mov
push
stc
in
mov
sub
xchg
and
cmc
mov
out
inc
hlt
cmpsb
push
jne
cmp
int3
mov
jp
jae
ds
andl
mov
test
bound
cwtl
push
adc
stos
ss
pop
mov
xlat
inc
mov
aas
mov
and
mov
pop
cmp
push
into
enter
sbb
cli
jle
jmp
xchg
dec
jge
mov
push
out
je
adc
ds
fsubs
mov
xchg
js
sahf
add
jbe
inc
push
das
stos
out
mov
lea
shlb
adc
jno
sbb
jno
push
mov
dec
mov
ret
out
jo
cmp
cmc
lret
xchg
scas
aad
aam
and
pop
outsb
push
inc
loopne
js
int
cmp
push
jl
jp
test
adc
add
jp
xor
mov
and
sub
popa
inc
nop
adc
inc
xchg
into
repnz
adc
mov
push
mov
jp
sbb
call
ret
dec
push
push
nop
cs
jns
or
out
mov
fwait
aaa
add
push
mov
pop
ret
and
add
push
pusha
ljmp
idivl
push
inc
clc
cmc
xchg
and
push
fimull
mov
mov
out
dec
mov
jno
mov
popf
push
sbb
push
in
je
xor
dec
ret
inc
sub
idivl
dec
icebp
pop
mov
in
push
ds
sahf
idivb
pop
cmp
ja
icebp
jae
loop
js
out
hlt
mov
stos
hlt
lock
outsl
mov
addb
nop
mov
out
sub
or
popa
imulb
cwtl
dec
push
mov
xlat
push
sarl
xchg
jl
cs
in
mov
fwait
repnz
shrl
shrl
xchg
adc
and
add
mov
lcall
sti
pop
inc
push
jbe
pop
mov
push
iret
test
jnp
mov
dec
sbb
bound
in
pop
je
loopne
mov
adcb
insb
adc
ret
cmp
mov
jmp
hlt
sub
fs
add
and
adc
lret
stos
mov
cmp
cld
pushf
mov
cmp
dec
out
mov
push
and
bound
outsl
daa
xchg
xchg
sub
hlt
sti
aad
jno
xchg
xchg
je
test
adc
mov
sub
jg
cs
idiv
jmp
imul
pop
pop
mov
xchg
xorl
xchg
mov
adc
and
sahf
test
jge
adc
out
scas
sub
dec
outsb
sahf
xchg
enter
movlps
inc
das
pop
cs
xchg
push
and
sub
insb
or
push
bound
sbb
hlt
mov
fwait
pop
aam
jle
inc
or
rclb
mul
inc
inc
out
addr16
sarb
movsb
loopne
leave
mov
sub
adc
mov
inc
mov
in
dec
lahf
int
sti
sub
jbe
sbb
in
jge
sub
in
cld
jmp
jg
or
inc
add
fwait
in
sub
jmp
fnstcw
jl
xor
out
lahf
mov
inc
xor
adc
jmp
loope
imul
mov
push
add
lcall
test
movsl
ja
sbb
jns
mov
addl
or
push
lahf
leave
insb
mov
dec
pop
jg
push
xchg
sub
push
pop
xchg
mov
jp
ds
xchg
push
stos
mov
out
cmp
dec
and
inc
fsubrs
pop
cmpsb
xchg
dec
mov
jb
pop
mov
mov
clc
popa
mov
cmp
pop
nop
cmp
xlat
sarl
xor
mov
in
bound
pop
push
mov
scas
dec
pop
mov
fld
clc
xor
out
out
adc
jnp
das
mov
and
cmp
pushf
add
mov
js
repnz
ljmp
stos
jne
or
cltd
jle
adc
pop
sbb
mov
dec
stc
cld
mov
lock
roll
les
adc
or
roll
loopne
fwait
repz
xlat
jge
push
in
gs
and
mov
je
sub
clc
cs
push
addr16
pop
shrb
xor
or
ss
sub
aas
mov
xor
jmp
popa
std
sub
fmull
fisubl
or
sahf
add
scas
aam
mov
dec
or
fidivrs
es
cmc
push
mov
inc
pop
lcall
or
dec
mov
mov
aam
fidivs
into
mov
xor
sbb
xorl
adc
les
lret
pop
cmp
icebp
dec
adc
lret
xchg
cmp
movsl
pushl
call
mov
je
test
jb
push
jae
ss
sbb
mov
loopne
push
and
ja
jmp
mov
popf
cmp
sub
mov
dec
scas
insl
fnsave
adc
mov
cmp
mov
jo
mov
in
lds
aad
mov
push
int3
sbb
jecxz
dec
pop
sarb
andb
aaa
push
popa
mov
mov
push
imul
inc
out
dec
pop
lods
and
pop
shrb
xor
aaa
mov
mov
pop
sbb
aad
add
sub
movsl
push
icebp
push
push
mov
add
stos
xor
aad
xlat
jecxz
or
insb
leave
in
xchg
fsts
jnp
cmp
jb
scas
or
mov
jbe
repnz
cmp
dec
mov
andl
push
ror
call
call
xchg
jecxz
fwait
add
push
mov
jmp
xlat
jns
jmp
xchg
out
pop
jno
mov
xchg
and
es
ret
leave
jmp
xor
insb
scas
ja
sub
call
cli
sahf
xchg
pop
call
or
add
mov
ss
adc
insl
std
bound
jp
xor
cmp
daa
mov
sub
out
lock
sub
lcall
pop
leave
sub
cmp
sahf
adc
sahf
loope
mov
push
inc
jmp
adc
repz
cmp
popa
mov
cmp
dec
cltd
push
push
xchg
push
aaa
or
inc
push
imull
jp
int
xchg
mov
movsb
mov
sub
xchg
adc
scas
clc
es
test
mov
adc
das
jns
stos
dec
repz
stos
inc
and
mov
push
test
ljmp
mov
mov
insb
push
insb
nop
test
add
cmp
sbb
or
mov
sbb
adc
mov
sarb
cmp
push
das
out
xor
fldl
enter
in
outsb
mov
xchg
je
mov
and
sbb
xchg
fs
dec
aas
mov
add
adc
jbe
cmp
std
or
pusha
jmp
les
imul
jmp
shl
push
into
dec
imul
lea
shl
pop
mov
insl
test
in
add
mov
mov
fwait
jl
push
mov
pop
dec
xchg
push
dec
out
decl
les
call
ss
sub
gs
mov
push
fcoml
psubw
cmpsb
fbstp
ret
dec
mov
das
addr16
in
jg
sub
out
fcom
jbe
sahf
rcll
mov
push
sbb
mov
mov
rcll
inc
jnp
scas
mov
fcoms
fstpt
repnz
pop
lods
push
in
xor
mov
pop
in
jecxz
xchg
xchg
aaa
jle
pop
xchg
movsb
fbld
js
add
rdtsc
sub
cmp
cli
inc
mov
sbb
mov
mov
lock
cmp
inc
psubusw
pop
add
add
mov
ret
mov
cltd
bound
xchg
mov
mov
sarl
adc
stc
mov
imul
pop
sbb
sets
dec
mov
push
insl
add
gs
test
inc
mov
mov
inc
or
xor
sbb
addr16
clc
sub
mov
jne
subb
into
mov
push
in
cld
xorb
xor
xor
lods
lret
daa
in
insb
stc
lret
pop
out
sti
jg
sbb
jp
push
jl
mov
nop
adcb
mov
pop
ljmp
or
jo
out
sbb
mov
insb
sahf
dec
cli
test
jnp
xchg
cwtl
lcall
add
hlt
jle
mov
cmp
shll
mov
inc
push
pop
mov
jge
jle
pop
xlat
pop
mov
mov
std
fadd
sub
cmpl
dec
jp
xor
inc
and
cs
fistl
pop
cltd
push
push
mov
inc
add
xchg
in
adc
repnz
cmp
stc
dec
mov
mov
jo
test
add
dec
xor
jmp
lock
mov
mov
mov
js
mov
inc
pop
decl
in
in
repnz
xchg
scas
int3
arpl
sub
out
fstps
mov
cmpsl
fcoml
mov
and
jne
insb
clc
pop
jle
mov
dec
jecxz
das
xchg
sbb
jo
mov
mov
fstpt
addr16
inc
lods
inc
adc
pop
cmpsl
adc
ja
in
dec
add
in
jne
adc
notl
mov
inc
inc
jmp
add
orl
hlt
pop
sbb
dec
addr16
mov
push
loope
pop
sub
xor
mov
inc
jbe
pop
repnz
in
movsl
popf
dec
dec
mov
or
pop
or
fs
jnp
mov
adc
mov
mov
rclb
add
pop
ficoml
rolb
cmp
mov
lahf
and
jbe
xor
jge
jnp
xchg
add
cmpsl
sub
lea
add
pop
sahf
out
psubusb
popl
das
bound
mov
daa
in
mov
jmp
fiadds
adc
pop
xor
jo
jge
int3
sbb
orb
and
les
imul
add
fnsave
gs
jnp
xchg
push
mov
clc
inc
push
jbe
int
loop
lods
dec
sbb
aaa
mov
mov
mov
sbb
fnstenv
dec
adc
ljmp
sub
popa
clc
mov
rolb
cmpsb
fbld
jp
adc
bnd
xor
cltd
addb
adc
jp
mov
sub
enter
pushf
js
repz
inc
fwait
sub
aas
sahf
mov
jp
sub
jge
ja
ret
scas
ret
fadd
fs
arpl
das
pop
push
out
and
in
inc
pop
movsb
enter
pop
push
pop
lds
inc
and
inc
ja
loop
int
or
jo
mov
push
pop
outsl
repz
lock
adc
out
sti
xor
je
ret
or
cmpsl
imul
pop
loope
pop
xor
testb
fsubrp
cltd
adc
jnp
fisttps
push
mov
cmp
sub
add
xchg
xor
fwait
xchg
stos
xchg
test
loope
je
mov
cmp
inc
es
and
mov
push
in
adcb
movsl
jecxz
mov
adcb
sub
aad
lods
mov
push
insb
test
and
jp
lds
testb
lods
inc
iret
mov
pop
ret
dec
or
in
mov
lret
roll
in
adc
xlat
in
sbb
cltd
lret
jbe
or
sbbl
rcrb
pop
leave
std
daa
mov
cmp
pop
mov
push
jecxz
into
or
inc
loop
lods
ljmp
or
jmp
std
jg
shll
testb
mov
xlat
addr16
pusha
push
xor
cmp
mov
ja
inc
out
pop
out
xchg
mov
loope
push
cmp
lea
lahf
mov
adc
fmulp
cmp
inc
in
clc
or
lcall
shrb
fcoms
sbb
mov
enter
out
addb
int
or
adc
inc
cmp
push
pusha
pop
cli
dec
mov
subl
ljmp
cli
and
stc
lcall
xor
pusha
cmp
mov
or
std
gs
outsb
mov
dec
or
fsubs
pop
bound
xchg
notb
stos
test
mov
arpl
sub
aaa
pop
scas
mov
push
sahf
cmp
add
mov
lret
je
fwait
pop
clc
dec
lock
cmp
daa
pop
jae
pusha
cmc
dec
xlat
mov
mov
adc
fnstcw
jg
in
adc
jge
fnstsw
iret
or
or
cmp
mov
hlt
out
out
pushf
inc
jl
inc
pop
sub
fldcw
xchg
dec
cld
cli
ficompl
mov
sub
xchg
sti
dec
push
fwait
dec
and
xor
popf
sub
and
xor
fdivs
lea
in
mov
xchg
call
aaa
fadds
into
out
pop
cmp
mov
fs
inc
lods
stos
int3
push
or
push
imul
xorl
mov
or
pop
test
daa
pop
aas
clc
shrb
inc
jge
mov
and
fidivl
insb
mov
jl
das
fcmovbe
cmp
jmp
rcrl
iret
cs
roll
dec
sbb
dec
imul
shrb
xchg
callw
cmpsl
insb
call
lret
push
jae
mov
cmp
mov
mov
jae
aaa
mulb
mov
mov
xor
sub
mov
insl
mov
mov
ds
sahf
daa
sbb
sub
and
adc
cmp
mov
push
test
pop
sub
je
fsub
movsl
ds
cmpsb
dec
shlb
mov
repz
in
gs
ss
filds
ds
rcrl
pop
movsl
scas
pop
cmp
ss
push
fmuls
or
ret
nop
jnp
push
sbb
out
stos
jo
pop
and
clc
sbb
cs
cmpb
repnz
and
and
inc
pop
dec
sbb
xchg
push
pusha
xchg
ret
jg
in
test
mov
mov
push
scas
push
mov
fisubrl
mov
stos
xor
push
push
xor
in
cmp
loope
mov
xchg
aaa
inc
push
add
cli
and
popf
dec
mov
xchg
stos
les
lock
xor
pop
cmp
stc
or
loope
cs
xor
mov
mov
jae
push
jo
push
fistpll
fdivs
aam
lock
push
filds
sub
dec
cmc
mov
pop
sub
inc
lods
repz
jl
repz
adc
or
and
sbb
dec
sub
ljmp
add
test
repz
sbb
mov
fxch
dec
repnz
push
dec
lcall
sub
push
aad
ljmp
shll
test
dec
push
je
ljmp
push
jo
in
aaa
daa
push
test
mov
js
and
mov
pusha
xchg
jle
in
filds
add
sub
cld
mov
test
sbbb
mov
mov
or
xor
ret
mov
sbb
and
cmp
push
jcxz
mov
int
jo
enter
ret
sbb
push
and
hlt
adc
sbb
lods
fidivrs
sub
mov
push
test
cmc
push
jle
cli
mov
lret
or
dec
sub
sub
cmp
and
sub
sub
arpl
dec
das
daa
pushf
sti
mov
mov
or
and
or
dec
and
xchg
movsb
mov
fstps
das
adc
sbbb
adc
or
lret
cmp
sbb
dec
ss
popa
sub
xchg
lret
and
repnz
pop
lock
ret
leave
add
aam
pop
pop
lds
pop
sti
adc
andl
in
sbb
insl
adc
pop
lods
fcoms
outsl
mov
sbb
icebp
dec
aam
jns
hlt
in
pop
negb
xchg
stos
xlat
push
jl
adc
lret
test
cmp
sbb
outsb
sbb
aam
inc
jmp
gs
add
cmc
shlb
lret
shl
jmp
inc
scas
inc
and
mov
push
scas
ret
jno
pop
lret
daa
loop,pn
cld
or
xchg
into
pop
and
arpl
fdivrs
jb
xchg
adcb
mov
pop
shll
adc
mov
add
into
testb
imul
mov
sti
rcrb
cmc
pop
xor
scas
inc
in
mov
xchg
mov
out
pop
in
cmp
mov
lret
outsl
das
adc
leave
cmc
movsl
adc
pop
xchg
dec
gs
cmp
xor
mov
inc
mov
and
imul
xchg
xor
mov
movsl
and
xor
adc
dec
in
push
adc
mov
fmul
mull
in
hlt
jecxz
jbe
leave
xchg
filds
sub
outsb
xchg
mov
cmp
fs
out
addr16
rcr
pop
jae
int
jb
fdivrl
mov
pop
dec
int3
xchg
inc
jns
movsb
xchg
lods
pop
loopne
movsb
add
pusha
sbb
pop
div
dec
and
jbe
sub
jmp
mov
push
ds
rolb
or
jmp
movsl
xchg
mov
mov
call
inc
test
mov
sub
pop
push
or
mov
sbb
cwtl
adc
cmc
aam
in
aad
jl
push
dec
mov
pop
pop
test
shlb
pop
jne
xchg
enter
ret
dec
stc
nop
add
lea
and
mov
dec
pop
mov
outsb
dec
sbb
xchg
andl
mov
lret
sub
rcpps
sub
xchg
imul
stos
inc
cli
pop
std
subl
add
add
cmpsb
sub
jmp
out
fisttps
dec
push
clc
icebp
xchg
and
andl
cmc
mov
mov
or
pop
movsb
push
stos
sahf
in
fs
test
add
push
ss
ljmp
pushf
enter
xchg
sub
fbstp
aas
loop
dec
jnp
es
push
push
addb
lds
andl
or
jno
lds
sub
push
jnp
lea
or
stc
mov
aaa
daa
xchg
cmp
push
mov
repz
sub
cmp
jp
dec
mov
scas
in
test
leave
jecxz
mov
lea
cld
repnz
push
hlt
pop
out
cli
inc
hlt
rcll
shlb
inc
adc
lret
aas
pop
sbb
scas
jne
ret
ja
clc
mov
mov
adc
mov
iret
push
out
rol
mov
in
popa
mov
je
mov
inc
jmp
push
mull
std
addl
push
cmpb
xchg
push
fmulp
sbb
xor
fldcw
adc
and
aas
cmp
ret
ror
rolb
jbe
mov
daa
outsl
xor
loope
mov
divl
int3
inc
cwtl
popa
aad
out
cmp
mulb
xchg
adc
in
ficompl
jbe
dec
mov
xchg
loop
and
insb
in
adc
push
jo
and
pop
mov
movsb
mov
sub
js
fwait
repz
sub
ss
lea
push
or
xor
pop
aam
and
adc
sub
mov
test
mov
pop
hlt
ss
out
les
insl
sbb
lret
pop
aas
lcall
ss
pop
dec
sbb
mov
cltd
add
subps
xchg
cli
mov
ret
ss
xor
cwtl
push
dec
sbb
dec
pop
call
jo
jae
fsubl
push
stos
push
jp
movsl
add
xor
push
jae
sbb
cmpsl
repz
in
xchg
dec
popf
pop
add
inc
lcall
and
sbb
and
and
push
push
or
jmp
sbb
pushf
test
xchg
or
test
jp
sbb
leave
dec
cs
mov
sbb
fldcw
lods
scas
mov
cld
adc
out
push
in
cwtl
lods
push
dec
mov
ficomps
in
jo
dec
mov
mov
dec
push
mov
push
mov
insb
jae
repnz
lret
mov
inc
leave
imul
iret
fmull
mov
je
fchs
jle
adc
push
jl
cmp
fistpll
xchg
pop
inc
jno
push
rcll
pop
push
lock
xchg
xchg
inc
xchg
lds
mov
jge
ds
mov
inc
pop
mov
call
mov
xchg
sub
cmp
and
out
imul
adc
or
sbb
jo
lcall
push
pop
sub
pop
mov
pop
adcl
cmc
out
sbb
adc
mov
pop
shll
out
clc
or
xchg
imul
or
aad
movsl
out
ja
mov
mov
mov
mov
pop
iret
adc
jle
pop
push
add
dec
inc
push
sub
cmovnp
inc
cmc
repz
call
pop
icebp
cmpsl
lods
lock
insb
mov
scas
xchg
push
sbb
jmp
cmp
call
push
adc
jnp
push
mov
arpl
loope
jmp
or
mov
js
pop
test
or
push
ret
sub
adc
gs
adc
and
and
mov
test
jge
mov
lock
adc
scas
in
movsl
push
mov
leave
cwtl
pop
clc
daa
mov
cmp
add
mov
test
and
mov
dec
fnstenv
jbe
adc
mov
pop
push
icebp
cwtl
aaa
lods
or
call
cltd
out
cmpsl
lcall
std
push
add
leave
cmp
in
fdivs
fisubs
pop
pop
lock
arpl
mov
mov
scas
sbb
cmp
dec
mov
mov
arpl
testb
mov
repnz
mov
clc
pusha
fistpl
cmp
loop
repnz
int3
fwait
movsb
shlb
add
and
frstor
popf
and
ret
pop
fwait
mov
push
mov
mov
lret
dec
sub
and
cmpsb
in
subb
movsl
fsubr
sub
inc
ret
stos
mov
lcall
sbb
jle
dec
mov
inc
lret
inc
and
scas
fidivrs
push
cmp
pushf
iret
or
fisubs
mov
cli
sbb
rcrb
jns
jmp
mov
mov
popa
push
imull
sti
ret
lret
mov
lahf
inc
cmpsb
add
mov
mov
xor
sbb
vmovaps
scas
mov
icebp
in
sbb
adc
mov
mov
mov
mov
pop
cs
fsubr
xlat
adc
inc
orb
pop
sbb
sti
dec
inc
gs
test
mov
or
inc
adcl
cmp
xor
jns
test
sahf
adc
out
add
js
into
leave
add
dec
cmp
mov
adc
pop
lds
dec
jl
jle
outsb
lahf
sti
add
xchg
cmp
aas
pop
cmpl
pop
rcl
xchg
add
pop
movsb
clc
cltd
adc
xchg
pop
out
enter
mov
aam
push
subl
and
movsl
fimull
dec
and
addr16
and
fstl
xchg
daa
mov
repnz
mov
lahf
add
jns
popa
fsts
mov
add
sbb
pop
cltd
xor
sub
sbb
lds
movsl
pop
rcrl
nop
ljmp
mov
pop
insb
dec
xchg
adc
jno
add
pop
outsb
inc
and
pushf
jge
neg
ja
cli
test
cld
xorb
push
out
pop
mov
xor
pop
loopne
mov
sbb
scas
mov
push
xchg
mov
mov
lcall
or
cmp
das
jae
jo
lcall
ss
xchg
pop
mov
sbb
ss
jecxz
popa
push
inc
movnti
jne
fidivs
inc
out
pop
or
cltd
pop
mov
xorl
add
lock
jecxz
mov
mov
add
es
shrb
xlat
push
cltd
mov
push
xor
mov
dec
xor
js
inc
das
push
test
add
popa
leave
mov
in
push
rolb
add
in
fistps
cltd
xor
dec
mov
ret
push
jge
inc
fcmove
pop
ljmp
sbb
mov
and
mov
repnz
cmc
mov
sbb
mov
dec
xor
mov
ret
sti
add
xchg
xor
adcl
das
test
xchg
je
or
jmp
je
inc
mov
dec
pop
mov
mov
mov
add
sub
mov
das
int
xlat
inc
pop
in
imulb
mov
shll
aam
add
std
sbb
lock
repz
movsb
mov
and
out
mov
out
cmp
xor
sub
mov
inc
xor
movsl
adc
mov
pop
outsb
jge
arpl
sbb
int
pop
xchg
or
xor
popa
fwait
push
push
or
ljmp
cmpsl
scas
sub
sbb
push
mov
adc
enter
lods
lahf
mov
in
inc
out
clc
xorl
dec
jmp
cmpsb
add
jg
mov
and
and
sub
mov
int3
adc
mov
and
out
int3
mov
add
cmp
repz
sbb
int3
or
mov
nop
mov
cmp
add
ja
dec
pop
lahf
cmp
mov
adc
pop
jno
cltd
push
sti
jl
sub
lock
sbb
pop
fwait
lods
inc
data16
loopne
push
push
mov
std
xor
jb
iret
test
jo
incl
add
jne
xchg
or
roll
sbb
jo
dec
outsl
push
ficompl
dec
and
cmp
xlat
aaa
add
mov
push
push
ja
push
xchg
aam
clc
or
mov
pop
cmp
lds
lods
jbe
jns
call
jnp
mov
in
repnz
jg
jb
into
jmp
lock
outsl
imul
int
pop
dec
mov
lahf
jg
mov
out
adc
pop
and
imul
test
mov
fstpl
sub
mov
pusha
jl
mov
pop
ficomps
xchg
and
cltd
add
jecxz
mov
push
test
mov
push
mov
jmp
xor
or
inc
aas
sub
or
lods
mov
push
popf
das
sbb
sbbl
ficompl
jo
in
jle
sub
lahf
xchg
pop
jg
sbb
sub
adc
push
pop
ljmp
push
xor
out
dec
hlt
das
lret
sbb
addr16
lret
sub
add
int3
push
scas
xchg
test
dec
int
inc
sbb
icebp
mov
jp
push
sub
std
mov
addr16
insl
movsl
mov
jge
gs
int
add
addl
aad
rcll
dec
xchg
sub
push
hlt
mov
into
xchg
jns
insl
lret
jb
push
shrl
inc
in
ss
aad
or
push
inc
imul
or
sbb
or
clc
jns
je
and
sub
dec
push
inc
ret
and
ja
sti
popa
adc
sbb
push
pop
xchg
mov
push
in
push
push
add
and
das
addr16
addr16
add
push
lahf
adc
pushw
out
cmc
mov
mov
inc
or
sbb
in
pushl
scas
movb
cmp
adc
xorl
inc
cmpsl
cmp
mov
xor
add
mov
mov
push
iret
sub
pop
add
imul
rcl
or
inc
jns
mov
rol
add
stc
or
nop
push
jle
and
xchg
xor
arpl
push
loop
sbb
xchg
pop
cmp
adc
int3
or
pop
pop
lods
or
loopne,pn
das
and
and
or
leave
pop
dec
fimull
int3
xchg
lock
jl
lds
add
aaa
xor
mov
orl
mov
mov
inc
or
push
xchg
sub
mov
xor
xlat
ljmp
or
sbb
aaa
pop
mov
jmp
pop
faddl
jle
arpl
lods
lcall
gs
pop
stos
outsl
cwtl
leave
jge
xor
push
repnz
sub
and
sub
push
and
or
sbb
xchg
negl
dec
es
std
cmp
lods
sahf
mov
insl
fnstsw
mov
mov
xchg
popa
pop
add
lds
sarl
adc
xchg
lahf
pushf
push
jp
pop
inc
or
inc
cli
es
daa
inc
pop
mov
pop
mov
mov
add
sti
jns
fnstcw
into
cmp
push
out
mov
aas
xor
jge
shlb
mov
aam
or
and
das
out
xchg
cmp
xchg
movsl
cmp
sbb
jl
mov
stc
mov
es
or
xchg
into
xchg
mov
add
sub
andl
imul
stc
aam
rolb
or
sub
scas
jecxz
pop
sti
imul
fistps
sub
insl
inc
xchg
and
lock
aad
ficoms
sbb
jns
icebp
dec
scas
mov
xchg
into
xor
test
jb
mov
in
or
push
les
scas
call
ds
out
mov
mov
jg
inc
nop
sub
lock
cmpl
cmpsb
js
add
inc
and
inc
lret
sbb
mov
lretw
rol
and
arpl
adc
scas
sbb
daa
mov
sbb
push
adcl
pop
jnp
mov
lods
xchg
outsb
imul
cmpsl
mov
sti
seta
insb
inc
outsb
dec
in
pop
push
cmc
push
mov
ret
jg
ja
dec
push
stc
xor
in
add
mov
dec
xor
pop
xlat
out
xchg
pop
sub
repnz
jae
data16
xor
add
push
sbb
out
mov
gs
sahf
xchg
cmp
mull
lock
jae
xor
movsb
cmp
fiadds
sub
adc
ss
jae
xchg
pop
int
pop
pop
lcallw
daa
dec
popf
xchg
cwtl
cmc
adc
adc
dec
mov
fcomip
fs
xchg
or
sub
shrl
mov
push
cmpsl
mov
inc
adc
jmp
inc
xchg
mov
xor
mov
and
ds
push
xchg
fimull
jb
jns
sub
test
fwait
ds
mov
fcmovnbe
sub
adc
leave
dec
push
decl
call
fwait
sub
out
mov
sbb
inc
pop
lea
jnp
adcb
sbb
mov
sub
mov
arpl
stos
inc
int
sahf
mov
outsb
dec
loopne
cs
movsl
sbb
stc
cwtl
xchg
or
outsb
das
rolb
addb
out
out
iret
push
sbb
fisubrl
stc
push
cmpb
lea
add
inc
or
je
std
add
jmp
lcall
push
out
hlt
inc
sti
or
push
pop
push
sub
shll
jne
cvtps2pd
lret
xchg
ret
cmpsb
adc
mov
dec
iret
pop
mov
inc
pushf
and
icebp
adc
push
jnp
xor
ja
aad
mov
and
lods
ret
xor
inc
fcmovb
fldt
pop
xor
mov
xlat
out
rcll
mov
ret
aas
lahf
int
std
in
je
cmp
loop
ss
xchg
mov
fld
pop
adc
fistl
or
jmp
dec
das
dec
mov
fsts
cmp
inc
loop
pop
shll
xchg
rcrl
outsl
sub
stos
xor
js
out
mov
push
test
push
push
sbb
pop
stc
mov
lahf
repz
push
aaa
pusha
fnstcw
repnz
and
dec
cmp
mov
push
loopne
adc
lcall
add
cmp
push
mov
and
aad
mov
push
shll
inc
lret
jle
cmp
mov
hlt
ljmp
xor
push
in
mov
inc
scas
push
loope
inc
or
rorl
add
ljmp
stos
add
inc
je
aad
loop
negb
mov
jecxz
out
in
sbb
iret
icebp
in
jns
xchg
nop
and
in
inc
and
xor
add
sti
jmp
add
ds
jb
xor
stos
xchg
fidivs
inc
xchg
movsl
mov
je
lods
or
and
fsubrl
fdecstp
hlt
adc
push
iret
xchg
xchg
sub
ss
into
inc
inc
cmp
pushf
ror
lret
fisubl
jbe
addl
enter
ja
test
add
push
add
and
inc
adc
imul
roll
std
cltd
test
or
jg
sub
mov
pop
andb
add
pop
xor
xchg
ret
stc
and
mov
stos
shlb
test
inc
add
sti
sahf
jge
sbb
rcrl
sbb
dec
nop
shlb
stc
mov
push
adc
sub
xchg
out
cmp
inc
xchg
cmp
jge
adc
inc
inc
push
out
daa
fdivs
inc
inc
out
inc
insl
pop
stc
push
sbb
sbb
or
mov
shrb
mov
mov
and
dec
jne
jg
mov
pop
stos
mov
mov
or
sbb
cwtl
cs
clc
jg
testb
cmp
xor
and
nop
xchg
mov
je
xchg
fwait
movsb
xchg
pop
add
xchg
or
xchg
xchg
movsl
add
sub
jg
cmp
ss
sbb
inc
mov
cli
out
push
jae
mov
mov
data16
or
push
push
add
imul
push
xchg
fmuls
jne
out
cmp
fnstenv
or
es
lods
loope
xor
mov
std
pop
sub
test
icebp
mov
sti
ljmp
and
ljmp
sub
xor
mov
data16
mov
mov
scas
cmpsb
sub
cmp
sub
dec
fistpll
popa
ss
mov
and
add
xor
in
dec
fidivrs
cmc
shlb
lods
inc
adc
out
in
pop
fwait
xor
cld
lret
in
daa
or
sbb
cmpsb
jnp
ret
or
add
sub
mov
pop
mov
gs
das
lods
push
daa
push
push
pusha
xor
mov
ret
or
out
xchg
sub
pop
lea
sti
sahf
in
push
insb
cltd
in
cmpsl
dec
lods
xlat
mov
into
mov
rcr
mov
fcomip
fisubrs
push
cmp
mov
jno
mov
arpl
add
pop
sbb
sbb
sub
ret
jns
out
test
es
sbb
or
and
sub
repz
je
and
xor
andb
push
push
out
das
xchg
mov
aad
pusha
jb
fldcw
xchg
and
mov
jle
test
xor
jae
mov
inc
gs
cmp
jns
outsl
push
push
out
stc
insl
sub
mov
adc
cmp
jno
mov
xchg
js
movsl
sub
jg
sahf
mov
xchg
sbb
mov
scas
aaa
rcll
icebp
fcomps
xor
dec
std
pop
add
jp
adc
push
cmp
push
pop
fs
mov
call
int3
imul
xchg
ficoms
gs
lcall
sahf
push
test
data16
cmp
xorb
fidivl
pop
sarb
adc
lcall
push
pop
cmp
dec
in
cmp
adc
sahf
mov
imul
or
xchg
xacquire
repz
push
mov
mov
add
and
adc
arpl
icebp
cmp
pop
xchg
bound
mov
sub
cmpsb
or
divl
shr
mov
popf
loop
cmovno
imul
add
fiaddl
pop
fnstenv
push
sub
je
loopne
das
push
jo
subb
inc
push
xlat
out
in
cmp
mov
and
ljmp
divl
lock
xchg
pop
adc
filds
adc
push
mov
pop
mov
mov
ja
lret
ja
lret
xor
sub
cmp
lods
aad
movsl
repz
jp
ja
xor
jo
mov
icebp
adc
xor
pop
jbe
mov
xchg
loop
push
loope
ljmp
xchg
test
cli
mov
outsl
push
imul
cmp
or
xchg
insl
push
push
jge
gs
std
jbe
test
cs
pop
xchg
loope
nop
inc
jns
mov
jecxz
push
xorl
cmp
mov
stos
out
adc
roll
mov
frstor
fistpll
jo
cs
loope
jmp
mov
ret
bound
ret
pop
mov
adc
shlb
loop
lret
jg
mov
bound
push
adc
adc
aas
jg
xor
dec
pushf
icebp
popa
jle
or
arpl
into
xchg
cmp
mov
ja
mov
lods
and
pop
pop
sub
push
lods
sub
dec
and
ja
cmp
pop
test
pop
mov
sub
add
lods
mov
cmp
push
sbb
mov
enter
arpl
and
inc
inc
adc
push
mov
into
scas
stc
cmp
hlt
mov
clc
ret
mov
out
lret
cmpl
cmp
movsb
mov
jecxz
icebp
xorb
les
pop
rcrb
push
std
mov
and
xchg
rclb
popa
movsl
es
in
aam
inc
lret
out
jno
lret
lea
int
inc
adc
jns
lea
aad
cmpl
mov
xor
setg
xchg
dec
push
sub
xor
loope
in
je
rcrl
enter
stos
sbb
jnp
and
push
sub
mov
adc
sub
inc
pop
test
dec
dec
jmp
mov
jne
and
push
add
push
fmull
mov
repnz
push
mov
mov
cmp
xchg
dec
fistpll
jnp
test
xor
jmp
sbb
jp
insb
cmp
xor
imul
jo
aad
and
or
lods
mov
inc
mov
xchg
dec
ret
or
pusha
fcoml
scas
out
cmp
xchg
mov
lcall
pop
imul
lods
inc
dec
push
inc
push
mov
insl
adcb
lcall
int
dec
sahf
inc
enter
lock
fildl
xchg
adc
dec
jp
in
lret
in
and
in
aam
xchg
adc
lods
sbb
sahf
aaa
aaa
scas
xor
lods
lahf
push
cmp
popa
mov
test
and
push
inc
dec
and
jmp
lcall
cmpb
dec
iret
jp
push
add
inc
jne
xor
das
mov
mov
lahf
push
ss
dec
pusha
lcall
in
xlat
and
inc
clc
and
or
sub
mov
inc
sahf
cli
pop
jp
outsl
lods
jl
mov
adc
xchg
mov
push
pop
xchg
aaa
data16
cmp
call
or
dec
testb
fs
jbe
fimull
scas
cli
and
dec
adcl
js
int
shll
and
mov
inc
sbb
nop
pop
mov
inc
in
out
inc
daa
imul
insl
lahf
jno
fyl2x
cld
add
pop
push
add
xor
push
cwtl
notb
aaa
push
add
subb
xor
lret
add
add
xor
lea
and
push
lods
push
dec
mov
xor
imul
mov
and
xor
cli
mov
xchg
xchg
pop
enter
sub
in
adc
mov
mov
and
imul
mov
cmp
xor
push
int3
xchg
jmp
movsb
scas
push
stos
xchg
mov
fsubs
sbb
push
pop
insb
xor
fwait
add
push
call
sbb
stos
ret
xchg
into
int3
mov
push
or
call
loopne
cs
push
pop
dec
dec
fisubrl
leave
mov
in
mov
xchg
or
cwtl
cld
mov
push
ds
ja
cltd
inc
jnp
ret
adc
shlb
out
hlt
pop
lds
mov
xbegin
fadds
movlps
ficoml
mov
jp
jnp
xchg
pop
dec
stos
xchg
dec
addr16
filds
orl
std
adc
sub
clc
push
dec
pop
fwait
test
fstl
sub
mov
xor
xchg
mov
packuswb
dec
dec
test
sbb
sub
das
cltd
inc
icebp
push
subb
lods
clc
setle
outsb
insb
sbb
dec
in
outsb
inc
loopne
movsb
test
pop
mov
lcall
out
stos
jl
test
cltd
arpl
lahf
xchg
add
rorl
xchg
jg
jns
pop
sbb
lods
sar
mov
adc
ficoms
cs
and
add
cmp
rcll
sahf
xchg
cmp
out
pop
push
pop
adcb
std
addb
clc
add
enter
rcll
and
imul
push
je
testb
adc
sti
jo
pop
aas
cmp
inc
push
jo
test
inc
pusha
addr16
adc
cmp
and
jo
stos
cmpsl
addl
std
dec
adc
push
test
das
into
es
std
addb
cmp
xchg
sti
loopne
ficoms
push
xor
in
mov
cli
mov
xchg
mov
pop
sub
cmpsl
mov
stos
xor
dec
movsb
cli
cmp
js
shl
in
movsl
test
roll
ljmp
xchg
lret
pop
push
addr16
lahf
frstor
ljmp
pushf
sti
lcall
pop
mov
or
mov
into
jb
or
and
mov
int
jne
xchg
cmpsb
gs
popa
xchg
notl
fcomps
push
sbb
in
cmc
xchg
loope
push
jmp
scas
mov
push
frstor
adc
rcrl
push
mov
and
sub
lret
inc
jno
es
or
mov
shrl
dec
xor
push
push
inc
jne
jge
movsl
fsub
pusha
sbb
insb
jmp
and
movsb
lret
into
outsl
out
mov
push
sub
test
cmpsl
jl
ds
jb
nop
sub
cmp
and
ja
pop
cmp
jmp
ja
inc
testl
pop
inc
fcoms
ds
sbb
jmp
in
sbb
lea
shlb
jne
dec
add
xor
or
mov
push
mov
movb
pusha
adc
stc
sahf
cwtl
outsb
inc
mov
add
push
push
inc
sahf
jnp
mov
xor
call
xlat
pop
jl
dec
fldcw
jne
sarb
arpl
push
mov
push
and
loopne
dec
dec
cltd
daa
shll
arpl
push
pop
shll
daa
popf
inc
cwtl
mov
iret
xor
mov
lahf
mov
or
xor
test
mov
inc
dec
in
fwait
cmp
stos
jo
sbb
push
popa
pop
mov
lret
aad
fistl
hlt
sbb
in
fwait
iret
sbb
outsl
or
je
mov
xlat
sbb
das
adc
popa
jbe
lods
mov
xorl
mov
adc
pop
out
sbb
inc
mov
movsb
int
add
or
or
push
adc
loopne
xor
push
dec
adc
bound
lahf
mov
xchg
sbb
sub
sub
loope
aad
stos
insl
cli
pop
aas
dec
adc
cwtl
xchg
lea
jbe
xor
adc
xchg
lahf
jbe
xor
cmp
jl
dec
lds
mov
sbb
xor
xor
pop
arpl
pop
mov
mov
cli
lret
pop
hlt
push
hlt
xrelease
gs
cwtl
fistl
jl
xchg
pop
sub
jbe
pop
sahf
mov
movsb
mov
loopne
inc
mov
mov
mov
xchg
ret
jno
xchg
mov
int3
lea
add
aad
das
or
fidivs
dec
jmp
dec
add
mov
into
call
jbe
into
lahf
adc
sbb
pop
mov
mov
add
push
ret
inc
imul
sub
dec
push
xor
xchg
gs
jb
sub
inc
movsl
insl
inc
mov
pop
and
xchg
inc
mov
sub
dec
lods
or
test
fldl
mov
lods
add
push
ret
aas
dec
pop
in
call
scas
xor
in
clc
ja
cmc
rorb
fcmovnbe
les
je
mov
loopne
pop
imul
sbb
add
jnp
fsubrl
jg
popf
adc
insb
sbb
stos
movsb
outsl
sbb
shlb
xorb
popf
xor
int3
xor
loop
mov
xchg
jae
cmpb
arpl
fsts
sbb
mov
cmp
paddusb
mov
fstps
jb
cmpb
push
dec
addr16
aaa
mov
mov
xor
data16
loop
adc
fildl
scas
dec
aaa
and
stos
jns
stc
inc
or
fmul
imul
cld
mov
icebp
hlt
mov
inc
sbb
pop
popa
jnp
jnp
fisubrs
mov
sub
cs
dec
insl
ja
cltd
sti
cli
out
adc
and
mov
mov
ja
add
mov
mov
loopne,pn
push
fcomip
jp
sbbb
mov
xchg
xchg
cmp
arpl
repnz
cltd
addr16
adc
mov
inc
cld
or
dec
and
hlt
inc
inc
repnz
lcall
dec
nop
icebp
mov
cltd
mov
pop
xor
sub
jae
ds
adc
lods
lret
in
or
and
rcr
xor
mov
jle
add
mov
scas
pop
sbb
jne
jg
insl
xchg
das
xor
mov
sbb
out
mov
push
jnp
jno
cmp
mov
push
test
lcall
inc
and
jns
in
ret
in
push
adc
repz
inc
inc
ror
jle
inc
imul
imul
jno
jle
das
pop
fcomps
sub
mov
push
xor
test
cmp
xchg
mov
movsb
mov
pop
and
ljmp
xchg
sti
insl
dec
adc
scas
lods
sahf
es
test
sbb
xchg
in
push
cs
scas
imul
adc
lods
imul
loopne
sbb
pop
imul
jne
xchg
lcall
fldenv
js
push
popf
je
daa
aaa
aas
inc
sub
stc
ss
icebp
mov
cmp
fdivl
shrl
cmp
imul
test
adc
out
add
xchg
sbb
jp
iret
xchg
cmpsb
insl
mov
pop
push
xchg
jge
mov
jl
add
xor
ss
push
dec
test
adc
add
mov
pushf
jo
jbe
push
inc
add
addr16
inc
add
dec
mov
or
or
ss
ds
loop
adc
cmpb
call
cmp
sahf
jne
aaa
fildl
pop
inc
mov
mov
jne
rorb
sbb
adc
repnz
imul
mov
sub
pop
les
dec
shll
mov
dec
mov
cli
push
and
mov
ret
pop
dec
mov
lea
addr16
mov
lcall
jmp
test
xchg
pop
sub
mov
add
xchg
leave
dec
and
mov
mov
or
add
mov
push
pop
adc
imul
sub
imul
jecxz
mov
pop
inc
repnz
loopne
mov
mov
mov
rol
hlt
pushf
adc
pusha
dec
jno
add
clc
push
cltd
jle
test
std
test
out
push
jle
pop
in
fwait
sbb
sbb
les
insb
mov
mov
pop
lcall
lcall
xor
cmp
mov
loope
loope
or
rorb
jo
mov
pusha
sub
inc
popf
dec
inc
int
cmp
dec
xchg
cmc
dec
xor
aam
xchg
cmc
ja
jmp
pop
mov
lock
loopne
pop
dec
xchg
inc
sbb
cmpsb
or
fwait
das
xor
and
jno
mov
mov
cltd
cmp
outsb
test
cmp
sub
hlt
mov
sub
mov
std
jns
scas
in
dec
outsb
ljmp
pop
shll
pop
das
adc
and
nop
fnstsw
or
aaa
jb
mov
sbb
cs
mov
cwtl
leave
ret
stc
movsl
addr16
cmp
cmpsl
daa
and
cmp
mov
ror
mov
pop
rcrb
shll
mov
xorl
push
jle
xchg
mov
xchg
xor
push
or
rep
or
add
dec
dec
dec
insl
arpl
fisubs
jae
data16
outsb
jnp
cld
xchg
sahf
fwait
adc
movsl
aad
cli
push
mov
mov
sub
dec
pushf
cmpsl
notb
pop
xchg
outsl
movsl
rorb
out
icebp
push
dec
fdivrl
ljmp
sub
sbb
roll
xchg
dec
mov
pop
add
stos
ret
or
dec
add
sbb
shrb
movsl
dec
gs
xchg
ja
mov
push
pop
shl
jecxz
mov
add
hlt
xchg
jnp
cmpsl
or
mov
clc
xchg
or
iret
mov
xchg
and
in
sbb
inc
lods
std
xchg
lock
sbb
stos
xor
fs
push
loopne
or
ljmp
xchg
ljmp
jne
push
and
push
pop
test
push
lods
xor
popa
xchg
sbb
fdivs
or
pop
loop
gs
fidivs
out
sbb
mov
inc
sti
icebp
iret
push
dec
cli
loop
dec
xchg
dec
push
xchg
cmp
lock
fwait
jnp
or
out
test
pop
in
add
cmc
dec
sti
mov
xor
lret
inc
xlat
test
add
xchg
sub
pushf
pop
or
insb
or
adc
add
or
pop
mov
inc
shrb
in
scas
out
mov
add
sarb
sbb
movsl
popa
fs
or
aas
mov
shlb
add
push
cmp
jb
das
stos
movsl
mov
adc
fcoms
out
aad
jp
mov
sub
cmp
pushf
je
cmp
xchg
das
rcll
lock
adc
add
pusha
movsb
sbb
sbb
mov
mov
pop
cmp
inc
js
out
cld
dec
jae
xor
leave
xor
inc
fucomi
push
fnsave
dec
mov
mov
mov
lods
sub
fldt
dec
loop
xlat
add
enter
hlt
xchg
push
daa
repz
mov
cmp
mov
jl
pop
sub
fwait
sbbb
mov
xor
lcall
pop
mov
sub
add
out
sbb
add
movsb
lods
pop
div
stos
repz
jnp
stc
lcall
andb
pop
lcall
push
scas
dec
xor
popf
lods
xchg
std
lods
mov
dec
jae
cmp
mov
mov
xchg
or
mov
fnsave
bsr
cli
cmp
pop
addr16
adc
or
jge
dec
repnz
xor
nop
arpl
lds
sahf
push
sub
pop
dec
xor
mov
adc
xchg
mov
xor
and
iret
adc
ret
cmpb
jns
movsl
js
pandn
ret
fs
push
sub
mov
mov
pop
lahf
mov
add
leave
inc
test
jg
sar
mov
jmp
xchg
lahf
dec
imul
dec
inc
add
hlt
fbld
mov
push
sub
xchg
in
popf
fsubrl
ss
test
stos
xchg
sbb
mov
sbb
mov
or
incl
out
xchg
loop
test
popf
in
repnz
testb
fistpl
daa
nop
adcb
push
jnp
xor
int
punpcklbw
les
xor
mov
inc
out
inc
negl
lahf
cmpsl
imul
fwait
mov
negl
stos
and
or
add
mov
lcall
sub
psubusb
jne
inc
push
fidivrs
add
ss
cmc
xor
cmp
xchg
insb
mov
ja
cltd
std
sub
add
sbb
mov
xor
mov
jle
jecxz
mov
mov
enter
hlt
adc
adc
jns
inc
sbb
addl
lock
test
push
nop
mov
adc
shlb
sarl
mov
jnp,pt
mov
orl
and
inc
movsl
repz
add
inc
sbb
add
lret
sbb
add
jmp
push
push
imul
sti
es
movsb
jb
pop
add
sbb
xchg
dec
and
stos
int
lret
mov
push
inc
in
dec
pop
addl
sub
cmp
lea
sbbl
pop
pop
cmp
or
ljmp
mov
stc
out
and
mov
mov
icebp
pop
shlb
fstpl
ljmpw
xor
inc
mov
xchg
mov
addl
jb
pop
add
cmp
push
sub
dec
iret
adc
lret
in
out
cli
push
pop
scas
jg
repnz
xor
pop
inc
sti
sbb
fldenv
or
scas
popf
ds
fnstcw
mov
pushf
sbb
in
pop
jb
jp
adc
lock
jecxz
xor
dec
pop
cmp
sbb
leave
jo
and
push
in
xchg
ljmp
xchg
adc
pop
enter
lock
loopne
loopne
inc
or
xchg
fstpt
inc
sub
add
xchg
inc
or
dec
roll
cmovnp
xchg
aas
in
dec
in
mov
pop
pop
mov
mov
inc
es
pop
jno
rcr
add
out
int
aam
outsl
lahf
lcall
pusha
movsl
setg
add
mov
mov
xchg
aad
orl
fsubl
bound
adc
xor
adc
ret
pop
or
sbb
adc
cmp
jmp
pop
pushf
jecxz
bound
lahf
ret
pusha
dec
fstl
mov
mov
mov
inc
xchg
mov
adc
scas
stos
mov
dec
cltd
adc
cmp
lock
mov
push
neg
cmpsb
sub
fcomip
push
mov
sbb
out
mov
stos
cwtl
sti
dec
in
dec
sub
mov
cmp
cmpsb
pop
adc
popf
or
movsl
add
cmp
sub
inc
je
mov
aam
pop
ss
push
push
cmpsb
lock
add
les
pop
pop
push
or
ja
sub
inc
or
xchg
negl
gs
pop
jne
loope
int
mov
sahf
lea
pusha
lcall
xchg
pop
cmp
jmp
add
mov
in
cmpb
push
cmp
push
jl
jbe
jge
scas
push
ret
add
xchg
push
das
lahf
fmuls
int
ret
sbb
add
ja
fisubrs
inc
int3
push
and
cltd
ja
rdpmc
stc
push
push
testl
mov
roll
das
xchg
in
xchg
push
jo
jge
movsb
jns
mov
mov
mov
lods
lret
mov
mov
scas
mov
dec
inc
leave
lret
push
fnsave
pop
cmpsl
leave
aad
mov
loope
mov
inc
jnp
mov
cmc
sbb
dec
jae
pop
int3
repnz
push
xor
jae
outsl
cmc
mov
int3
pop
cwtl
sbb
nop
fnsave
mov
adc
mov
pop
jne
jle
ds
or
movsl
xor
rcl
ss
jne
dec
push
inc
cmp
mov
cmpsb
enter
out
ss
lret
push
sbb
and
and
mov
xlat
pop
xor
push
push
dec
mov
push
aaa
adc
hlt
lret
push
mov
mov
pusha
or
out
sub
in
int
lea
sub
or
push
push
lods
push
pop
mov
inc
rol
mov
movsl
repz
loop
or
popf
test
mov
cld
mov
mov
je
pop
push
lcall
fs
mov
mov
cmpsb
adc
cmc
mov
aas
sub
cmp
outsl
ja
in
push
push
mov
add
push
out
and
xchg
push
xor
call
pop
pop
imul
adc
pop
mov
mov
cmp
js
lret
jo
push
adc
inc
sbb
cmpl
pop
cli
popf
jle
mov
cmp
cmpsb
cld
sub
jns
fdivrp
out
push
movsl
test
shll
repnz
out
stos
repz
cli
in
in
jae
pop
inc
stos
es
and
xor
ror
xchg
push
into
mov
mov
cld
xchg
or
mov
xchg
cmpsb
lock
xor
fsts
sbb
fnstenv
push
xor
mov
cmpsb
cmp
gs
jnp
mov
add
inc
rcr
jmp
loop
cltd
cmp
sbb
popa
sahf
stos
es
fwait
test
mov
push
xorb
pop
pop
fisubrs
add
push
stos
jecxz
ja
push
sarb
mov
fnstcw
bound
mov
mov
arpl
pop
sub
mov
popf
popa
scas
enter
push
std
rcr
ret
mov
mov
add
mov
xchg
xorl
jns
mov
popa
jo
mov
out
add
fcoms
loope
mov
cmpsl
cmp
sub
and
addb
push
lahf
fsubrs
movb
pop
sahf
sarl
xor
or
scas
inc
cmpsl
and
cmpsb
insb
jae
js
lods
shr
aam
push
movsb
xlat
mov
fstl
fbstp
hlt
mov
mov
push
adc
sahf
sub
hlt
pushf
or
mov
scas
mov
adcb
mov
ret
lods
jae
or
addr16
test
adcb
sti
cwtl
call
or
idiv
cmc
cmp
fwait
jbe
push
cmp
or
mov
pop
imul
jbe
adc
sbbb
test
add
les
cmpl
adc
pop
sub
divl
shlb
lret
inc
pop
mulb
lock
xor
add
int
fisttpll
das
add
out
cwtl
adc
out
hlt
adc
lahf
lret
pop
repz
mov
addr16
cltd
push
movsl
cltd
lahf
push
lods
lods
mov
or
in
xchg
stc
inc
shrb
cmp
sub
ja
xor
call
dec
fwait
pop
and
jo,pt
imul
sbb
push
lret
pushf
xchg
add
rorb
popa
mov
sub
or
inc
stos
scas
and
sbb
dec
inc
mov
xchg
fs
dec
xchg
mov
adc
bound
push
add
nop
outsl
inc
adc
fisubrs
orb
sbbl
fiadds
push
movsb
or
lock
sbb
call
loopne
cmp
orb
cmp
into
jo
adc
repnz
insl
or
mov
mov
jecxz
dec
mov
fisubrs
add
push
test
testb
sbb
push
test
pop
xor
int3
sbb
and
add
cmp
mov
adc
mov
loope
inc
inc
mov
xchg
dec
sub
xorl
mov
dec
and
test
pop
mov
imul
hlt
sub
xor
adc
aad
mov
mov
ljmp
dec
dec
lahf
paddsw
xchg
les
or
inc
fcmovnbe
jp
push
dec
and
mov
shl
lods
pop
or
xchg
popa
xchg
jae
pushf
clc
orl
add
int3
jno
mov
mov
inc
xor
sub
push
mov
push
mov
std
sbb
jb
jg
and
icebp
orb
das
pop
repz
nop
adc
xchg
pop
aam
mov
push
pushf
aaa
mov
lret
int3
sbb
cmp
ret
or
ljmp
jno
xor
adc
inc
push
push
out
popa
cmp
es
lret
pop
jne
xor
stc
ja
loope
xor
popa
movsb
lods
sbb
sub
or
gs
lret
jp
and
test
and
lcall
fcoms
push
pusha
xor
mov
test
mov
dec
mov
je
sub
mov
jns
test
out
dec
add
push
xchg
add
mov
pop
sbb
xchg
xor
insl
jecxz
loope
cmpsb
cmpsb
or
call
inc
push
cmp
mov
std
fmuls
scas
hlt
int3
daa
ret
dec
je
and
push
ds
inc
mov
add
mov
fwait
xor
repnz
out
adc
mulb
lods
jb
fwait
fadds
cmp
sbb
mov
push
loopne
xor
push
pop
mov
int
mov
outsb
xchg
pop
jp
sbb
outsb
push
aas
fistps
notb
pop
aam
push
push
ret
adc
inc
xchg
mov
xor
je
ret
hlt
mov
push
push
push
inc
rcll
orb
mov
test
pop
sbb
push
jg
and
mov
xlat
enter
jp
scas
enter
xor
lods
iret
scas
push
pop
loope
inc
div
mov
leave
pusha
ret
int3
sbb
outsb
aad
outsl
icebp
xchg
sbb
jg
imul
je
in
dec
mov
out
sbb
bound
pop
loopne
inc
in
sub
mov
pop
jo
aas
sub
rcrb
xchg
cmp
rcrb
pop
pusha
jmp
dec
xchg
xchg
les
ljmp
pop
fwait
jnp
into
scas
xor
jne
mov
stos
gs
hlt
mov
jnp
mov
push
xor
push
cmpsb
xor
ljmp
idivb
mov
jge
repnz
jle
mov
push
adc
mov
push
pop
mov
mov
imul
mov
orb
mov
clc
in
xchg
lcall
sbb
dec
jae
mov
add
movsl
lcall
xchg
sub
xchg
cmp
or
outsl
and
std
inc
int3
jae
movsl
mov
fsubr
andl
inc
push
leave
ss
call
fdivrs
push
jae
mov
xchg
xchg
push
sub
test
pop
pop
or
lret
inc
icebp
jae
mov
pop
mov
fwait
dec
les
je,pn
sti
cmp
mov
inc
adc
in
lret
cmp
mov
cs
or
xchg
lods
adc
ljmp
mov
push
pop
popf
es
mov
mov
aad
scas
fistl
call
xchg
stc
mov
cmp
loop
pop
sub
jno
jp
loopne
outsb
in
add
mov
jp
mov
fwait
data16
pop
xor
les
into
mov
pop
ret
flds
js
mov
lods
out
mov
and
jp
lahf
in
ja
mov
or
test
sub
or
lock
movsb
sarb
sub
jo
push
pop
je
push
pop
clc
pcmpgtd
pop
scas
jg
jmp
lret
shlb
nop
sub
xor
inc
mov
inc
cmp
mov
mov
cld
sbb
pop
cmpsl
pop
inc
push
mov
dec
pop
je
mov
xchg
mov
es
xor
xor
dec
mov
int
fimuls
ja
inc
lock
xorl
cmp
xchg
xor
sub
pushfw
push
xor
sub
lea
xchg
jo
rorb
lahf
pop
and
sbb
sub
das
shlb
ret
fsubl
mov
faddp
mov
flds
rcll
jmp
loopne
cli
dec
sbb
std
test
mov
jae
testl
insl
aaa
jp
stos
xlat
xor
mov
cmc
inc
pop
ja
dec
test
ljmp
int3
stc
mov
pop
icebp
sbb
jecxz
mov
popa
fiadds
sti
xchg
loope
inc
je
adc
aam
cmp
js
mov
mov
xorb
fwait
push
cmp
push
fistl
arpl
cmpl
sub
es
jecxz
mov
rcll
sbb
inc
ja
fistpll
sbb
imul
jg
daa
mov
mov
cmpsl
aad
fldl
mov
push
inc
imul
add
repz
jno
sbb
shll
jae
push
push
jl
stc
jo
sar
pop
call
mov
mov
les
mov
cmp
mov
andb
dec
shll
pop
pop
xor
fldl
sbb
loopne
les
add
mov
pop
into
lret
mov
je
js
jae
sub
and
jmp
aad
or
xchg
adc
jg
in
dec
stos
adc
add
sbb
inc
insb
dec
push
stc
in
add
loopne
inc
inc
jecxz
push
int3
mov
xchg
fisttps
mov
test
push
ret
fsts
repz
cwtl
popa
adc
mov
jecxz,pt
mov
call
pop
mov
daa
stos
pop
pop
lods
inc
not
mov
test
or
sbb
dec
sti
mov
sub
pushf
add
jns
lock
adc
out
in
jo
mov
push
xchg
pop
sub
jns
and
pushf
mov
sbb
test
repz
push
mov
xor
insb
movsb
jge
xchg
ja
mov
ror
xchg
pop
xorb
movsb
pop
insb
sub
scas
xchg
sub
fisubrl
push
ljmp
cmp
xchg
dec
or
shr
sub
pop
lret
fmul
sub
jecxz
or
adc
sub
mov
arpl
fsubs
shll
xor
and
mov
stos
mov
adc
hlt
pusha
mov
imul
pushf
mov
jo
sahf
pop
repz
insb
enter
stos
pop
fcmovb
cmc
in
pop
cmp
dec
pop
mov
fnstsw
cli
lea
pop
cmp
lds
xlat
dec
cwtl
stc
fmull
jbe
ret
scas
sub
mov
mov
mov
jns
in
jnp
ret
in
sbb
inc
inc
inc
xchg
cmp
and
push
cld
inc
aaa
repz
icebp
lret
push
push
xor
xchg
scas
arpl
mov
mov
xchg
adc
cmp
xchg
js
jno
sbb
loope
repz
mov
push
xor
xor
repnz
call
push
pop
insl
in
sub
scas
int
fwait
pop
pop
jbe
ret
jne
fisubl
movsb
pop
flds
cmpsb
xchg
or
aas
rorl
inc
cmp
and
mov
xor
fisttpl
popfw
push
decb
sarl
sub
scas
sar
jb
loopne
divb
out
mov
mov
mov
push
addl
fwait
cmp
adc
test
into
cmpsb
in
sti
pop
or
fs
movsb
jae
xor
cmc
inc
shrb
push
adc
out
adc
cs
fists
dec
inc
xchg
popf
xor
push
std
pop
dec
jno
stos
push
sub
adc
test
dec
lds
or
inc
push
jo
pop
adc
outsl
das
mov
fists
add
insl
cmc
in
push
fisttps
adc
shl
lret
jbe
int3
or
adc
inc
repnz
outsl
cld
lods
test
dec
mov
fidivrl
sbb
mov
in
jnp
lret
adcb
mov
cltd
mov
aad
jl
scas
shrb
jnp
cmc
xchg
scas
fildl
ss
rcl
imul
flds
push
push
jb
outsb
add
dec
mov
popa
ss
hlt
xor
push
fistps
andb
pop
dec
adc
pop
orb
scas
mov
sarb
cld
push
jb
jne
jo
mov
dec
and
push
xchg
sbb
shlb
jnp
adc
push
pop
xchg
push
xor
pushf
sbb
nop
mov
mov
xchg
sbb
add
fistpl
popa
cmp
das
rcll
dec
adc
mov
sub
push
push
fucomp
outsl
push
xlat
loop
push
jl
pop
dec
sbb
std
fadds
jp
sbb
outsb
and
out
xchg
xor
lcall
in
ret
pop
adc
inc
jnp
and
int
push
dec
pusha
fcoml
test
stc
dec
stc
cmpsl
cli
stos
imul
sub
xchg
int3
mov
mov
andb
pop
stos
sarb
insb
iret
sbb
jno
cmc
scas
rorb
out
mov
out
push
cmc
lds
cmovl
imul
mul
inc
and
out
xchg
jmp
jle
rclb
pop
fnstsw
dec
popf
notl
pop
mov
insb
and
jle
arpl
out
movsl
fistps
enter
loope
aaa
xchg
loop
lods
and
lret
in
pusha
cli
ret
pop
inc
and
fwait
push
es
dec
dec
daa
sbb
dec
xchg
call
or
xor
push
cmpsb
daa
outsb
sub
mov
push
popa
mov
aam
lret
and
loop
pop
pop
mov
popf
inc
test
jnp
scas
jne
addr16
add
hlt
adc
aad
rdpmc
pop
sti
adc
dec
bound
mov
ds
mov
dec
mov
in
push
test
mov
sbb
out
sbb
loopne
push
lds
mov
adc
rclb
sarb
jns
xchg
dec
cltd
sub
rolb
ss
insb
leave
mov
daa
or
cmp
shl
outsb
insl
addb
mov
in
xchg
sbb
sub
loop
push
jnp
fisttpll
negl
sbb
jno
xchg
push
and
add
int3
dec
jge
fnstsw
dec
mov
into
sub
mov
cmp
pushf
fdivs
and
push
mov
outsb
push
push
mov
mov
jne
mov
pop
pop
mov
dec
xor
jg
or
xchg
cmp
sahf
push
lods
cmp
jns
std
mov
jnp
add
orb
push
pop
pop
filds
pop
sti
xchg
sbb
hlt
rclb
xor
cmpsb
push
push
dec
xor
cmp
cld
xchg
popa
xchg
jmp
icebp
call
mov
notl
stc
mov
jle
or
mov
cmpsb
int3
push
adc
mov
inc
outsl
ss
call
movsl
dec
outsb
pop
pop
ljmp
jne
js
add
dec
mov
ret
lret
sub
add
pop
out
cmc
mov
insb
adc
jmp
addr16
stc
aad
data16
xchg
loop
sbb
sub
cltd
lds
test
repz
stos
hlt
sti
push
imul
inc
fs
pop
gs
mov
mov
ret
mov
inc
pop
and
add
out
je
jmp
fwait
repz
aam
push
sub
pushf
loop
ss
mov
cli
aas
mov
sbb
jns
inc
jg
inc
sbb
and
sub
xchg
or
jge
aas
movsb
inc
xchg
sub
dec
div
stc
adc
xor
inc
into
xchg
xchg
outsb
or
dec
adc
stos
cmp
ret
dec
sbb
in
mov
repz
fcomps
loopne
ffreep
cmp
add
sub
sub
and
ror
pop
xor
inc
repz
shll
ljmp
cmpsl
scas
test
outsl
bound
jns
idivb
fbstp
xor
outsb
andl
push
xchg
shlb
cmpb
aas
in
clc
movsb
xchg
or
lods
cmp
enter
imul
mov
fmull
fldcw
lret
xor
stos
int3
and
std
test
jo
xor
mov
dec
add
xchg
or
and
lcall
lcall
cmpsb
stos
pop
sbb
bound
arpl
mov
push
jnp
xchg
pusha
push
or
les
add
mov
fstps
sub
sbb
mov
pop
jmp
xchg
sbb
aas
adc
in
pop
and
cmp
sub
lds
jp
test
pop
push
xor
arpl
pop
xlat
adc
test
int
leave
sbbl
dec
loop
mov
je
xlat
add
shll
pop
mov
push
dec
aad
lds
pusha
loop
mov
sbb
cmpsl
adc
sbb
out
xchg
cmp
arpl
out
and
jbe
mov
cmp
mov
cwtl
inc
xchg
test
dec
cmc
adcl
mov
enter
mov
std
ffree
sahf
fstps
movsl
pop
in
pop
iret
jo
mov
data16
movb
xchg
mov
jg
ja
stc
jmp
lods
stos
sbb
sub
mov
sub
pop
add
mov
or
enter
addb
and
pop
sbb
das
push
jecxz
add
push
fs
mov
mov
mov
xchg
add
or
push
test
dec
push
scas
jmp
mov
cmp
lock
data16
sti
stc
rorl
sub
xchg
sub
dec
inc
add
dec
pop
push
dec
jo
xchg
or
xor
pop
inc
data16
cmp
clc
push
cli
decb
fwait
subl
out
jbe
jmp
push
repz
dec
and
out
dec
loop
mov
ret
rclb
xlat
jae,pt
lods
stos
cmp
mov
iret
pusha
mov
inc
sete
or
fucomip
push
scas
xchg
add
gs
pop
adc
inc
in
fadds
mov
lcall
dec
arpl
imul
ficoms
jno
jecxz
in
push
out
clc
xchg
mov
sub
aam
aas
shll
pop
lods
out
bound
xor
repz
xlat
cwtl
inc
add
mov
outsb
sti
icebp
and
and
inc
das
jmp
xor
push
pop
pop
out
jne
jns
mov
js
inc
mov
ljmp
fs
xor
push
shlb
xchg
jnp
sar
dec
xchg
shll
mov
inc
test
mov
sbb
pop
adc
loop
jbe
fwait
movb
andl
jg
mov
xlat
insl
cmp
fwait
push
fistpl
sbb
mov
pop
inc
cwtl
or
aaa
push
sti
mov
jne
fisttps
dec
mov
leave
push
push
adc
add
dec
icebp
cmp
xchg
or
js
mov
and
and
cltd
outsb
or
ret
xor
test
lret
rorb
sbb
push
dec
cld
jnp
push
mov
and
mov
pusha
xor
push
sbb
mov
insb
xor
push
out
notl
inc
inc
inc
push
push
dec
and
jb
cmpsl
out
xor
xchg
push
mov
dec
movsb
inc
jae
hlt
push
mov
pop
mov
sti
mov
jge
das
adc
mov
dec
pop
iret
xor
out
push
dec
movsl
loop
pop
sub
xchg
pop
jae
xor
jp
stc
int
sbb
inc
mov
push
sbb
lret
mov
sub
shlb
xchg
push
cmp
push
adc
cmp
dec
dec
mov
xchg
cmp
vpacksswb
xor
cmpb
cmp
aaa
push
dec
clc
scas
push
loopne
movsb
je
push
jns
sub
outsb
mov
sbb
xchg
pop
sub
dec
aam
and
sbb
lods
clc
cmp
xor
aad
jle
jge
shll
arpl
mov
pusha
mov
int3
or
ret
jle
in
lods
dec
cs
pop
or
pop
adc
imul
dec
fnsave
pop
pusha
mov
xlat
sub
lret
mov
test
call
and
push
push
push
ds
jle
das
pop
sbb
lock
std
loope
push
sub
into
fs
jg
loop
mov
mov
sbb
mov
sub
test
pop
shll
in
lcall
iret
enter
insb
jno,pt
xor
addl
ret
sbbl
adc
movsl
repz
xchg
loope
or
int3
pop
add
jl
ret
sub
cmp
inc
out
test
jb
dec
mov
xchg
sub
sub
pusha
out
inc
mov
out
jge
adc
call
pushf
loope
imul
mov
inc
push
cmp
xor
xor
into
nop
jns
or
mov
cmp
jge
mov
ja
cmp
mov
into
pusha
fs
xor
lds
push
add
call
sarl
lods
inc
mov
pop
je
fidivs
icebp
fcmovbe
mov
xor
mov
ja
xchg
jne
dec
xchg
dec
sub
dec
fadds
and
dec
sbb
fcmovu
jne
inc
mov
xchg
stos
mov
repz
and
ret
fildll
enter
or
pushf
addr16
xchg
iret
cmpsb
out
rcrb
push
loopne
sub
xchg
lea
ljmp
cmp
adc
sti
adc
mov
push
sti
pop
mov
inc
push
push
sbb
lret
push
fists
lret
lret
imul
push
jmp
outsb
xchg
inc
push
pop
inc
jo
popf
adc
je
jno
fs
imul
jle
cmpsb
xchg
out
mov
push
dec
push
sub
out
push
pop
aaa
push
pusha
leave
mov
xor
sbb
outsb
outsl
pop
sahf
mov
jns
or
mov
mov
ljmp
pop
and
subb
lods
sub
dec
jge
sub
das
sbb
adc
add
rcrb
bound
dec
in
dec
pop
or
addb
icebp
mov
push
addr16
mov
jns
xchg
daa
mov
and
fimuls
vxorpd
or
and
inc
xorb
push
jecxz
lcall
rclb
xchg
outsl
das
jbe
push
adc
push
push
inc
lods
pop
gs
push
jecxz
test
jmp
jne
enter
xchg
in
mov
loopne
idivl
in
sub
push
mov
mov
mov
push
clc
dec
repnz
jo
ljmp
inc
imul
iret
loope
sub
adc
test
add
addl
mov
jns
repnz
mov
pop
insb
or
cs
aad
fs
rcll
in
cmpsl
jecxz
aam
sub
xchg
decb
cmp
shr
loope
or
lods
cmpsl
sub
jge
xchg
das
enter
repnz
cli
icebp
shrl
add
add
sbb
in
fnsave
push
dec
xchg
jne
sub
xchg
aaa
fsts
out
dec
push
mov
cmc
rcrb
xchg
pop
add
mov
sbb
sbb
cs
psubsw
in
daa
mov
pop
push
inc
jbe
xor
lahf
dec
pop
dec
xchg
lds
mov
cmp
cmpsb
pop
jae
lcall
mov
les
mov
enter
andl
in
jno
andl
and
fwait
pop
mov
dec
lret
or
loop
popa
push
sti
inc
inc
and
or
sub
std
leave
fwait
imul
xor
sbb
push
enter
mov
fildl
pushf
pushf
or
cmp
jb
test
mov
cmp
imul
nop
fisubrs
mov
mov
pop
push
rcll
decl
imul
cmpb
inc
cs
xorb
xor
divl
push
add
push
xor
mov
cmpsb
roll
cmp
sarb
cmp
aaa
leave
xor
test
jge
or
cmp
pop
xor
lock
pop
fmuls
fwait
test
rorl
aam
dec
sub
ds
add
test
cmpsb
mull
cmp
nop
test
xor
shlb
pushf
adc
jnp
ja
jge
add
dec
subl
cmp
mov
add
pop
add
jae
insl
xchg
ljmp
aam
jnp
ss
ja
lods
test
cmp
dec
pop
and
scas
pop
xor
daa
sbb
scas
lock
pop
ljmp
pop
in
jne
into
sbbb
jns
mov
push
cmp
adc
aad
stc
lock
or
push
sbb
imul
ds
popf
pusha
daa
outsl
cltd
mulb
cwtl
loop
fistpll
lds
push
subl
inc
lods
dec
in
loop
mov
and
xchg
mov
cld
pop
aad
les
push
xchg
dec
xchg
mov
in
in
test
mov
xchg
aad
in
push
arpl
das
and
cmp
pop
lods
lret
cmc
out
pop
ds
out
mov
push
rolb
cmp
pop
sbb
lods
ds
cmp
inc
jecxz
dec
arpl
sti
add
cmp
xor
sbbl
insl
ret
xchg
aam
movsl
jge
add
cmpsl
xor
bound
aaa
stc
cmp
repz
sbb
sti
lret
lahf
fidivrs
push
cmp
inc
push
adc
xor
pop
jge
iret
fadd
ja
inc
mov
cmp
in
sbb
add
popa
mov
stc
add
add
jno
jne
mov
lods
xor
shrl
pop
mov
lcall
dec
xchg
push
push
mov
add
int3
mov
mov
clts
add
shll
dec
jo
mov
pop
adc
jo
jno
and
cmp
es
mov
or
stos
sub
sub
xchg
fiaddl
sahf
cmp
xchg
adc
jl
fsubp
stos
push
out
lahf
out
sub
ds
fcmovu
clc
cmp
xor
pop
nop
test
ja
add
push
cmp
shlb
repz
dec
pop
lds
xchg
in
fs
pop
jp
jns
aas
pop
mov
clc
xlat
out
cmp
loope
mov
inc
sbb
jno
or
lcall
add
mov
loope
jge
out
pop
shll
cmp
inc
xchg
pop
test
pop
push
cmp
pop
aam
xchg
je
mov
out
in
push
dec
test
fdiv
pop
adc
shl
xor
jmp
xchg
or
popa
pop
in
sbb
out
push
mov
and
cld
xor
adcl
leave
bound
add
ja
aam
jb
je
and
out
inc
and
pushf
iret
or
sub
xchg
loop
rsqrtps
pop
hlt
push
popa
xor
xor
push
lods
xor
movsb
ss
fistpl
insl
dec
mov
scas
mov
imul
jle
shll
cmp
jnp
fisubs
gs
xchg
int
outsb
sar
mov
inc
out
ret
dec
ret
mov
xor
add
repz
add
mov
or
adc
mov
shl
xchg
pop
inc
xchg
mov
fcmovnb
leave
inc
xor
xchg
mov
xchg
lcall
pop
mov
or
loope
ljmp
pusha
ljmp
push
jnp
sub
sub
inc
stos
xchg
aaa
xor
fwait
and
cmp
dec
outsl
pop
pop
gs
mov
nop
xorl
daa
outsb
out
loop
cmpb
xchg
inc
and
pop
mov
cmp
dec
js
ja
andb
ds
pop
jnp
sub
fmuls
ret
lock
or
loopne
adc
pop
rclb
iret
bound
sbb
pop
mov
dec
movsl
mov
fsubrl
add
mov
in
icebp
shl
je
sbb
aaa
jge
mov
stos
xchg
aaa
movsb
outsb
fldcw
and
in
jle
xlat
jne
jbe
or
jg
mov
mov
mov
mov
inc
mov
jge
rolb
mov
mov
jg
mov
push
shrb
repz
xchg
mov
sti
imul
mov
sbb
and
movsl
adc
or
pop
fsubrs
pusha
repnz
test
aas
gs
lds
jns
pushf
addb
mov
mov
popf
mov
pop
push
xchg
add
jp
stc
das
mov
push
daa
out
cmpb
js
adc
es
jmp
xchg
int
adcb
and
or
loopne
scas
sub
mov
adc
inc
aaa
gs
push
outsl
xor
mov
fcomps
pushf
std
lods
jg
sti
sbb
and
pop
mov
cmp
outsl
mov
lock
enter
mov
xor
data16
xor
mov
shlb
ljmp
out
call
push
dec
in
fidivl
or
bound
fisttpll
cmpb
cmp
not
add
xor
inc
mov
lock
add
xchg
outsb
sahf
adc
pop
sti
nop
dec
adc
rorl
cmpsb
lods
outsl
loopne
push
xchg
fnstcw
arpl
icebp
mov
ja
mov
test
arpl
icebp
mov
sbbl
rorl
sbb
sti
adc
inc
in
mov
lock
test
jns
inc
cmpsb
cmp
pop
xchg
fdivl
movsl
xchg
and
imull
mov
lcall
loop
test
jge
jmp
jae
repnz
test
pop
xchg
loop
ljmp
mov
xchg
popf
xor
leave
sbb
fdivl
jp
stc
or
cmp
or
push
adc
scas
es
movsl
out
adc
clc
popf
mov
push
stc
insb
call
rorl
push
dec
push
jne
into
cwtl
ljmp
jb
cmp
andb
mov
xchg
cmc
or
les
adc
or
test
test
jno
ss
cmp
cmp
or
insb
shrb
dec
and
xchg
popf
push
and
fs
push
imul
mov
mov
jns
in
push
cltd
inc
jecxz
sub
xlat
addr16
sub
rorb
lods
repnz
xchg
xchg
mov
dec
in
fs
std
pusha
call
loope
push
rcl
int
adc
ret
int3
adc
repz
stos
pop
outsl
mov
aaa
je
leave
addr16
push
daa
adc
jae
add
sbb
pop
or
pop
xchg
lods
outsb
lea
ret
outsl
out
xchg
push
cltd
bound
pushf
push
ds
mov
shlb
imul
stc
mov
sub
hlt
pop
scas
jno
mov
outsl
push
dec
sahf
ds
sub
push
pop
xchg
mov
mov
fsts
cltd
jg
inc
hlt
pop
scas
xchg
subb
int3
pop
mov
jge
outsb
pop
outsl
xor
xchg
stos
out
in
je
mov
jbe
pop
jmp
jmp
std
scas
or
cmpsb
test
mov
out
sti
popf
mov
out
pusha
lea
aas
lret
scas
pop
lock
add
xor
mov
out
and
imul
pop
es
stos
movsl
aad
jne
lea
xchg
and
push
pop
jle
adc
clc
lods
pop
and
ss
mov
jns
adc
aad
insb
pop
adc
sbb
and
lea
adc
lods
add
test
les
rclb
lods
sub
ljmp
notl
inc
xchg
xchg
and
xchg
inc
data16
mov
jne
jb
xlat
xchg
and
ja
inc
pop
sub
push
sbb
loop
xchg
and
mov
loop
cmc
adc
xchg
aas
idivb
add
pop
ret
test
mov
cmpsl
add
jne
or
iret
lahf
clc
mov
sub
cmpsl
or
adc
or
mov
xchg
fwait
scas
mov
xor
and
xchg
xchg
push
ja
lcall
cmpsb
mov
insl
add
movsb
inc
divl
mov
das
dec
pop
pop
mov
mov
sahf
jge
inc
cmp
out
mov
sub
dec
lcall
aad
pop
subl
lods
mov
outsl
insl
js
sahf
xchg
test
mov
cs
dec
bound
push
mov
loopne
sbb
inc
cmc
xor
ret
add
jl
sbb
lea
outsl
mov
mov
and
inc
sub
aas
nop
push
out
mov
fidivs
sbb
pop
into
stos
sub
push
xor
fcmovnb
xchg
mov
shrl
jl
aas
and
add
movsb
inc
jns
in
mov
push
cmp
and
imul
imul
mov
lods
fisubs
jecxz
sbb
push
sbb
add
mov
mov
and
mov
cmpsl
jne
fnsave
xchg
mov
jo
and
inc
jp
sti
or
sbb
aad
sarl
pop
or
push
mov
sahf
sub
rcl
fdivl
scas
ds
movsb
xor
push
fs
push
lret
or
pop
dec
push
dec
pop
gs
push
pushf
pop
pusha
es
movsl
fmuls
and
jbe
arpl
jg
loope
sarb
mov
cmp
push
nop
lds
or
mov
out
rolb
les
mov
dec
nop
jne
das
gs
lret
icebp
call
or
jp
ja
cmpsb
ret
xchg
sahf
mov
sbb
push
outsb
test
test
loope
or
mov
sarb
push
sub
add
jmp
pop
clc
cmpsb
jge
clc
mov
xchg
inc
mov
jbe
xchg
test
stos
addr16
add
in
dec
data16
inc
push
mov
data16
push
xchg
nop
sub
aas
pop
inc
push
inc
sbb
mov
push
jno
push
and
orl
outsl
sti
inc
inc
mov
add
mov
mov
or
sub
test
stos
pop
or
mov
or
inc
jl
push
cmpsb
cmp
lret
test
dec
mov
mov
or
in
xchg
mov
mov
xchg
fwait
loope
subb
xchg
mov
xlat
in
clc
inc
or
mov
insb
mov
insl
xchg
lahf
xor
or
into
pop
les
cwtl
inc
dec
rcrl
or
mov
mov
test
and
cmc
dec
cmp
mov
inc
mov
cltd
xor
jo
fs
pusha
mov
clc
inc
fistpll
fstps
in
aas
lea
mov
mov
adc
outsl
push
pop
xor
daa
and
cmc
mov
mov
out
sbb
movsl
xchg
popa
jbe
popa
cmpsl
leave
mov
sbb
ret
jnp
pusha
xchg
shlb
xchg
inc
arpl
cmp
push
push
arpl
stc
in
and
sub
aad
out
pop
nop
int3
sub
push
int3
insl
sub
mov
divb
imull
divl
sbb
std
in
sbb
fs
lret
dec
jle
pop
lahf
mov
jle
mov
mov
push
lods
push
outsl
adc
inc
jb
cmpsl
fimull
push
push
jns
in
dec
pop
dec
sahf
sbb
imul
cltd
fwait
movsl
mov
pushf
xchg
xor
inc
std
xchg
mov
mov
mov
js
test
mov
test
add
xchg
cmpsl
cwtl
jg
sahf
jecxz
pop
xor
push
mov
gs
mov
inc
mov
pop
addl
movsb
and
ficoms
mov
adc
push
cmpl
jecxz
xor
sahf
call
jb
mov
adc
xchg
fnstsw
xor
cmpsl
adc
loopne
dec
jnp
cmpl
sbb
push
or
orb
cli
sub
xor
cwtl
mov
daa
ja
aaa
mov
sub
std
dec
cmp
fcoms
xchg
lock
mov
push
dec
outsl
insl
leave
jge
xchg
or
aaa
adc
mov
ljmp
pop
sub
in
inc
adc
xchg
in
cmp
pusha
pop
in
loopne
testb
int
sbb
fdivl
dec
xchg
xor
and
int
add
mov
stos
fsubr
push
mov
jne
xor
stos
xchg
fisttpl
lret
fstpl
adc
adc
lods
mov
and
mov
test
and
lret
test
faddl
xchg
pop
push
cltd
sub
leave
lods
xor
je
mov
inc
mov
test
mov
sub
cwtl
je
dec
lods
sbb
sar
add
jnp
aas
sbb
push
iret
repz
inc
test
xchg
dec
sbb
mov
sub
ds
int
cmp
loope
iret
arpl
popf
or
xchg
das
sbb
inc
mov
or
sub
sbb
shl
push
les
daa
sbb
in
push
push
sub
sbb
inc
arpl
out
pop
fmuls
outsb
push
sub
loop
cmpsb
ja
xor
subl
mov
mov
cld
fcomps
push
mov
outsb
mov
dec
mov
sub
and
icebp
in
rcr
test
test
sub
mov
mov
inc
push
data16
xor
pop
ja
pop
in
lahf
inc
mov
sub
movb
jo
test
ret
mov
fstps
add
inc
xchg
mov
outsl
std
getsec
icebp
scas
or
xor
mov
add
ds
add
fnstcw
jle
inc
sub
stos
xchg
xor
movsb
hlt
imul
xchg
mov
jne
aaa
inc
push
pushf
dec
or
popf
push
loope
xchg
xchg
pop
stc
push
mov
mov
or
add
rclb
mov
adc
inc
cld
inc
mov
jl
xchg
shll
mov
jo
jae
rcll
add
xchg
sbb
mov
fbld
addr16
jg
pop
pop
inc
outsb
or
pop
sub
shlb
sbbb
aas
adc
dec
je
inc
scas
mov
push
mov
outsl
shll
add
mov
aaa
xchg
cmpsl
fidivrs
or
mov
jo
sti
jecxz
imul
adc
fsts
addr16
sbb
aam
rcrl
imul
outsl
jns
sub
in
outsb
inc
cmp
hlt
mov
stos
lret
call
and
cmpsb
push
int3
mov
pop
jnp
mov
pop
adcb
cmp
out
imul
int
adc
add
je
jmp
mov
repnz
xchg
jnp
mov
inc
cmpsl
push
es
pop
lcall
in
ds
pop
mov
mov
addr16
mov
cltd
loop
dec
xor
push
sti
iret
enter
push
sahf
bound
popa
push
lock
sarb
int3
lahf
push
mov
leave
int
sbb
jle
lods
or
pushl
out
into
adc
stos
add
push
jge
xor
sub
cmp
sbb
iret
call
repz
jns
dec
fistps
test
loope
leave
and
sub
repnz
push
adc
sbb
wrmsr
inc
dec
into
xor
rcll
in
outsb
cmp
aas
adc
dec
push
or
incl
jle
ret
xchg
ljmp
xchg
in
ficoml
inc
loop
pop
movsl
filds
loope
stc
cmp
ss
dec
or
push
movb
inc
out
mov
dec
push
mov
xchg
ficomps
popf
inc
mov
fcomp
cmp
popa
mov
in
dec
lahf
mov
aaa
jb
into
push
cmpsl
movsb
cmp
push
sti
test
nop
add
shll
jp
repnz
icebp
and
xor
mov
into
cmpsb
lea
xorl
adc
mov
stos
cmpsl
cmpsb
jge
cltd
pop
inc
negl
sbb
mov
push
je
xchg
xchg
sbb
mov
push
jmp
xlat
mov
out
inc
call
xlat
pop
dec
daa
ret
cwtl
dec
movsb
sub
mov
fcmovu
xlat
js
or
rorb
insl
cmpsb
imul
test
jle
xchg
ret
cmpsl
ss
mov
imul
insl
lcall
cmp
mov
jne
xor
lret
add
mov
lock
push
mov
jno
dec
cmpsl
add
jp
rcll
in
pop
movsl
aam
in
movsl
xchg
ja
mov
out
cmc
sub
lods
out
or
ja
out
popf
es
out
xchg
sub
sbb
out
fists
std
xchg
test
int
dec
fmul
cs
negl
loopne
adc
jo
out
mov
imul
mov
fmull
xor
mov
push
adc
leave
out
arpl
fimuls
js
xchg
rclb
sub
mov
je
xor
adc
dec
push
jo
loop
mov
cmp
jnp
xchg
dec
out
movb
jl
dec
sbb
cmc
pusha
push
mov
dec
xor
xchg
int
sub
add
xor
idivb
in
in
lret
adc
jmp
sbb
aad
mov
xor
mov
cs
repnz
mov
push
lahf
bound
add
xchg
or
pop
mov
test
sub
cmpsb
sbb
lahf
int
stos
sbb
subb
mov
xchg
add
mov
jbe
dec
push
dec
fildll
push
and
mov
push
popf
or
mov
cmpsb
or
mov
outsb
outsl
mov
push
inc
mov
xor
cmpsb
fucomip
std
out
push
imul
in
xchg
sub
popa
test
sahf
jp
mov
xor
jl
adcl
inc
dec
ret
aas
mov
sarb
lret
insl
mov
inc
pop
sahf
pop
cmp
inc
aas
push
mov
stc
insl
fnstcw
sbb
or
daa
mov
nop
cmp
ds
inc
dec
jle
xchg
xor
dec
or
adc
roll
adc
in
fidivrs
xchg
push
sahf
je
iret
arpl
test
and
cmpsl
mov
push
dec
xchg
std
shrl
mull
xchg
outsl
inc
mov
cs
lret
les
in
imul
ss
pop
push
add
pop
lods
inc
cwtl
fimuls
sub
mov
add
aad
fs
mov
push
xchg
cwtl
add
sbb
mov
loop
loopne
testb
stos
add
out
xchg
cltd
inc
sub
movsb
xor
int
ljmp
cltd
sarl
cmp
xchg
cmp
pop
add
negl
inc
ljmp
loope
push
mov
cwtl
add
insb
xchg
punpckhdq
pusha
in
sub
ja
sub
fmuls
sbb
jne
add
in
repz
and
inc
fdivl
pop
aam
imul
inc
fildll
ffree
mov
lea
and
pop
imul
xchg
xchg
inc
fmuls
inc
sub
jp
js
ja
or
xchg
outsb
mov
inc
aam
mov
mov
pop
mov
adc
imul
push
imul
daa
out
loope
lds
xor
inc
fidivl
test
and
adc
arpl
or
xor
in
cs
inc
aaa
push
cmp
push
loope
imul
jb
xor
loopne
cld
or
int
repz
mov
subl
sbb
add
mov
pop
add
mov
jp
mov
cmpl
jmp
or
icebp
aam
ret
xchg
mov
push
fsubr
add
in
sbb
pop
nop
mov
mov
jb
jp
inc
xchg
inc
rcll
jl
sub
ret
push
and
sub
clc
mov
push
test
cmc
pop
ss
lret
mov
xchg
insb
xchg
or
jnp
dec
dec
mov
cmpl
sbb
data16
subl
das
popf
pusha
repz
add
xorb
jge
addb
dec
decb
repz
adc
pop
mulb
test
bound
push
mov
enter
pop
rorb
mov
xchg
xchg
imul
in
scas
js
adc
and
out
adc
stos
loope
test
cmp
xchg
xchg
into
sti
jo
in
ds
jb
pusha
leave
in
jo
sbb
sub
ss
dec
les
cmp
fs
jmp
lcall
mov
sbbl
sbb
dec
movsl
rorl
iret
lcall
movsl
inc
dec
scas
jecxz
into
push
cmp
pop
push
mov
movsb
fwait
push
es
in
push
inc
cmp
cmp
testl
inc
lock
push
sbb
je
scas
adc
and
jmp
loopne
inc
mov
push
add
pop
dec
inc
pop
fs
scas
push
lcall
jge
subl
cmc
notb
cmp
jne
shrb
pop
lods
cmc
testb
sbb
ja
fwait
cltd
mov
xlat
shl
jb
mov
sti
mov
xchg
sahf
pop
loopne
xchg
xlat
pop
mov
mov
into
in
iret
and
arpl
int3
lock
sbb
gs
stos
insb
or
fdivs
xchg
inc
divb
pop
outsl
adc
out
aad
adc
xchg
into
shlb
pop
cmp
add
or
stc
xor
sbb
sub
pop
rol
cmpsl
ror
aaa
es
jns
call
cmpb
jmp
sbb
pop
push
roll
and
mov
scas
push
or
into
inc
popa
fwait
mov
mov
fcoml
xor
mov
shlb
mov
movsb
push
jb
out
mov
fldl
ret
popa
jno
iret
xchg
clc
aaa
add
sub
mov
xchg
ret
push
pop
mov
push
push
popa
inc
inc
sub
enter
addl
pop
insb
in
lds
push
out
sbb
cs
loopne
fmull
adc
ljmp
push
jle,pn
cli
fbld
fidivrs
ss
adc
loope
and
cmp
out
aaa
xchg
cld
sub
jnp
mov
add
mov
dec
jo
jmp
or
in
fsubr
mov
clc
ja
leave
pop
adc
xor
jg
xchg
mov
hlt
lods
stos
sub
push
inc
pop
sub
and
int
and
dec
pop
or
inc
fldl
enter
xor
movsb
jle
sub
pop
mov
orl
lds
sbb
cmp
add
dec
mov
dec
and
xlat
ja
cmp
pop
dec
scas
cmp
pop
push
js
sub
sub
inc
outsl
xor
call
clc
js
jmp
and
ss
stos
xor
insb
ja
inc
xchg
lods
mov
add
ljmp
iret
mull
jo
push
adc
add
sbb
call
in
movd
cmp
jg
inc
pop
fwait
pop
insl
mov
fdivs
ficompl
mov
rcl
push
js
nop
and
pop
mov
out
pop
fidivl
hlt
xor
or
push
mov
and
push
xchg
test
dec
repnz
fldcw
pop
mov
int3
subb
sti
imul
fwait
repnz
sub
pop
lcall
cmp
imull
or
repz
and
frstor
dec
stc
adcb
xor
dec
dec
shrb
adc
dec
out
cmpsl
jmp
je
frstor
sub
sbbb
mov
into
stos
adc
popf
cmpl
lods
cmp
insl
test
mov
ljmp
lods
sub
lods
pop
insl
lahf
movb
out
lcall
mov
cmpsl
call
loop
and
ret
mov
mov
fidivs
mov
xlat
jbe
lcall
cmp
xchg
jnp
adc
in
sbb
jmp
push
fcmovnb
enter
mov
xchg
stos
mov
dec
in
dec
inc
in
gs
mov
lcall
xchg
push
mov
arpl
fsubrs
inc
cs
pop
rol
sbb
inc
in
lea
shrb
push
stc
add
xchg
outsl
or
aam
push
hlt
jg
mov
out
mov
dec
dec
icebp
inc
popa
mov
cmp
stos
jbe
mov
dec
or
mov
jmp
pop
sub
push
fstpt
das
addr16
xchg
sbb
ret
xor
cmp
cmp
mov
xor
cmp
fdivl
mov
test
xchg
loop
xor
clc
cmp
stos
out
flds
outsl
in
je
rcrl
mov
jnp
in
ret
lds
jae
js
sub
inc
push
testl
mov
int
test
mov
inc
test
jmp
out
mov
loope
mov
popa
inc
ljmp
mov
test
xor
mov
nop
stos
and
aaa
jae
push
jl
and
pop
inc
rcrb
mov
mov
clc
enter
ljmp
leave
lods
or
popa
cltd
les
ret
xchg
and
daa
cmp
sub
mov
and
mov
punpckhbw
sub
shlb
cltd
or
hlt
sub
jae
shlb
shrb
mov
adc
mov
cmp
add
sbb
sbb
pushf
xlat
pop
mov
outsb
call
inc
bound
leave
xchg
mov
cmpsl
xor
jns
push
mov
dec
int
inc
int3
out
je
es
mov
mov
push
in
mov
sub
cmpsl
mov
or
std
or
dec
addr16
rcl
dec
idiv
jnp
and
aad
ret
push
sbb
int3
test
pop
jne
aaa
aad
insb
mov
insl
outsl
out
scas
loop
mov
adcb
mov
pop
orb
sbb
ficoms
inc
sbb
mov
cmc
mov
bound
repz
mov
cltd
rorb
dec
aas
loopne
mulb
inc
push
jne
adc
mov
inc
push
stc
and
add
test
sarb
loop
shrb
les
clc
inc
and
pop
addr16
nop
les
cmp
inc
and
sub
in
mov
shl
and
lahf
pop
and
jne
or
sub
cmpsb
push
adcb
mov
cmp
xchg
xlat
divl
out
mov
outsb
cmp
js
mov
mov
adc
jecxz
pop
fsubp
adc
fnsave
sub
mov
and
or
dec
iret
or
rcll
js
jg
je
fwait
inc
ret
cmpsb
stc
lret
gs
pop
aaa
mov
pusha
inc
aad
scas
imul
cli
daa
popa
cmp
mov
mov
lcall
test
enter
cmp
enter
jnp
cwtl
inc
xchg
inc
jns
test
jle
cmpsl
or
cmp
aad
cmpsl
ret
mov
test
xchg
and
fstp
mov
lea
xchg
inc
and
xor
inc
pushf
and
xor
dec
testl
stos
cli
sub
pop
aas
cmp
push
sbbb
mov
stos
pop
gs
cmc
lret
call
es
enter
and
push
xor
jno,pn
pop
and
add
popf
push
mov
lcall
pop
ret
lods
jns
push
add
mov
movsl
jae
in
sub
xchg
and
popf
xlat
xchg
test
xchg
ds
movsb
pop
mov
iret
insl
sbb
inc
insl
mov
icebp
dec
gs
and
bound
cmc
jge
roll
jecxz
inc
pop
ret
push
cwtl
mov
mov
clc
cmp
popa
push
sbb
xchg
mov
mov
adc
movsl
push
outsl
mull
jecxz
fistpll
jecxz
dec
sbb
insl
lret
and
cmc
xor
push
jo
stos
and
roll
xchg
push
jbe
into
test
lea
test
ljmp
or
popl
sbb
add
adc
xchg
fildl
imul
ss
notb
sub
in
push
bsr
iret
mov
daa
sarl
jg
lcall
fs
adc
or
and
or
sarb
mov
addb
shrl
jo
jns
inc
xor
sbb
xchg
sbb
ret
imul
stos
and
xchg
cld
pop
sbb
inc
jo
push
aaa
pushf
and
xchg
fiaddl
nop
push
pop
aam
clc
ss
cmp
sub
out
ss
push
mov
and
fnstsw
cmc
repz
cmpsl
add
push
iret
ds
popa
or
mov
aas
xchg
mov
push
inc
ja
push
sbb
xchg
sbb
push
js
loope
outsl
adc
mov
mov
sub
fwait
out
shrl
mov
mov
push
and
mov
mov
mov
cld
jmp
int
dec
hlt
cmp
or
in
mov
pop
xchg
inc
aam
fs
movsb
icebp
xchg
test
test
push
pop
scas
movsb
xor
pop
repz
sub
cs
push
pop
adc
inc
pop
aad
dec
sbb
xor
xor
lock
stc
mov
lods
push
jmp
mov
stos
test
dec
subl
imul
mov
cltd
sub
icebp
pop
and
xchg
in
add
or
ret
cli
mov
cmpsl
xor
test
dec
mov
ret
cmpsl
lods
jo
mov
call
aaa
adc
fcomp
rcrb
lods
into
pop
xlat
lods
xor
adc
jg
sahf
sbb
jne
pop
subl
mov
sbb
mov
cltd
int
pop
dec
push
pushl
push
es
outsl
popa
sti
int3
xchg
cltd
adc
jecxz
or
fs
ds
jns
sub
add
testb
jle
push
mov
jo
jbe
jns
jno
inc
inc
mov
es
int
push
fwait
in
cltd
dec
jle
jge
out
insb
jecxz
xchg
sbb
fst
xchg
adc
sub
int
xor
outsl
fadds
dec
mov
das
fisttpl
nop
sub
sbb
cmp
testl
ret
inc
test
inc
pop
fisubrs
movl
pop
fimull
mov
fsubr
adc
push
call
sahf
fwait
loope
or
pop
shlb
cwtl
push
adc
es
xchg
cmpsb
adc
shll
jge
jno
dec
mov
and
sub
popf
sahf
sbb
movsb
lret
or
and
adc
inc
xchg
and
cmp
lock
int
add
sti
and
cmp
scas
or
push
dec
lds
pusha
outsb
xchg
rolb
ficompl
add
cmp
sub
dec
das
sti
or
mov
xchg
imul
out
add
inc
sub
loopne
mov
sub
fs
inc
mov
cmpsl
icebp
aaa
adc
dec
xor
cmp
cltd
pop
lret
mov
ds
jecxz
in
sub
loop
sub
or
and
loop
lret
incb
lea
mov
in
outsl
xchg
sti
xchg
shrb
push
mov
mov
ljmp
xchg
inc
fildll
les
sub
adc
rcr
fstpl
adcb
push
add
mov
add
in
mov
adc
push
repnz
dec
adc
pop
add
test
ret
inc
push
inc
push
mov
outsl
push
frstor
jnp
lret
mov
mov
sub
out
inc
sbb
mov
add
push
xchg
push
mov
aaa
mov
leave
sti
mov
mov
mov
dec
jo
ljmp
pop
je
addl
adc
cli
push
pusha
stos
mov
jno
push
mov
sub
imul
or
and
aas
sbb
fisttpl
pop
xchg
xchg
ret
xor
and
push
mov
mov
stos
inc
jns
mov
sbb
test
xor
pop
sbb
cmp
rolb
pop
sbb
xor
repnz
iret
ss
clc
mov
clc
mov
popf
sahf
mov
mov
inc
mov
fstpl
add
or
lods
mov
aaa
mov
jmp
inc
fcoml
and
jne
ja
mov
sub
test
repnz
adcl
sbb
jmp
sbb
mov
add
cmpl
xor
lret
dec
dec
lods
sbb
mov
dec
lcall
pushf
int
adc
jecxz
mov
sbb
sub
scas
xor
pop
xor
mov
shl
sbb
lds
or
ja
mov
mov
adc
or
sbbb
sub
test
cltd
cmc
adc
call
popf
cmpsb
subb
popa
gs
jmp
mov
fsts
notb
push
pop
nop
dec
mov
in
mov
imul
cwtl
sbb
push
pop
fs
mov
mov
cmp
imul
adc
stos
inc
ret
out
nop
sub
xchg
ljmp
movsb
outsb
mov
stos
pop
cmp
pop
insb
movsb
outsb
ret
in
adc
xchg
sti
xlat
xor
out
pusha
sub
jmp
add
movsl
mov
clc
scas
xchg
cmp
jg
loope
imul
sbb
xor
in
rcrb
and
push
icebp
sar
outsb
int
add
loope
mov
xchg
pop
or
fidivrs
in
out
es
hlt
mov
mov
xchg
push
rcrl
xchg
add
jp
in
call
pop
xchg
and
out
ss
mov
fildl
jae
rcrb
mov
into
daa
mov
mov
xlat
xchg
push
pop
push
rorb
clc
jmp
or
daa
cmpsb
sti
and
inc
cmp
repnz
jp
sbb
aad
sbb
ds
clc
push
xorl
mov
pop
xor
sbbb
add
in
and
mov
mov
xor
add
and
mov
jl
jge
mov
xor
lock
fnstcw
sti
and
xchg
cltd
in
inc
mov
out
push
shll
push
jmp
out
imul
mov
add
or
jne
rcr
loope
mov
cmpb
inc
daa
jge
es
or
mov
sub
inc
mov
mov
sub
js
insl
gs
scas
or
dec
mov
pushf
lods
mov
nop
or
cmp
rcll
mov
pusha
stos
pop
mov
repnz
inc
inc
daa
xchg
dec
adc
xchg
rcll
jns
in
inc
into
sbb
lods
decl
ss
sub
add
mov
pop
lods
mov
jb
inc
push
adc
mov
add
add
xchg
or
imul
cmp
lret
xchg
and
lcall
pop
fisttps
mov
push
jp
inc
push
adc
add
dec
in
adc
mov
inc
cltd
xor
mov
cmp
mov
cmpsl
jns
adc
arpl
cld
pop
popf
and
sub
aam
mov
enter
jle
push
cli
idivb
xchg
mov
hlt
lahf
cmp
out
mov
test
ret
loopne
push
mov
sahf
clc
roll
pop
dec
or
xchg
xor
aad
hlt
ljmp
mov
iret
js
cmp
cwtl
mov
in
cmp
sbb
sti
jb
xchg
push
xor
ret
mov
adc
imul
js
mov
xchg
mov
out
mov
out
divb
inc
lahf
loope
or
into
in
push
inc
push
add
pop
ret
insb
mov
mov
stos
imul
xchg
sub
ret
lock
mov
pusha
cs
mov
xor
xor
in
imull
aam
push
mov
cmp
fs
pop
add
pop
adc
sbb
loope
sahf
add
icebp
push
xor
sahf
sahf
xchg
dec
cmp
das
fsubl
fistl
xor
enter
in
mov
mov
dec
mov
jecxz
dec
lea
mov
ret
inc
adc
gs
xor
jno
loop
mov
aas
lcall
jg
ror
aam
jg
or
jge
pop
loopne
mov
popa
adc
adc
call
lahf
sbb
lods
sbb
sbb
xchg
adc
push
lcall
jae
popa
sbb
or
data16
das
jle
mov
roll
cmpl
cmp
xchg
mov
or
es
or
fdivr
cmp
xchg
inc
rcrl
jl
je
mov
add
inc
dec
das
call
dec
lods
jno
xchg
outsl
fdivl
dec
push
pop
xor
mov
sbb
lcall
jo
and
cli
add
cmp
push
cmpsl
in
xchg
imul
mov
aas
out
jmp
outsl
sbb
dec
popf
jne
xchg
rorb
fidivrs
mov
popf
test
jmp
imul
stc
sbb
push
xchg
js
insb
add
xchg
repnz
jns
sarb
push
ret
xchg
jg
daa
cmp
cmpsl
add
lock
std
pusha
popa
cmpsl
loope
xchg
ljmp
es
jge
sbbb
or
push
lret
push
or
pop
xchg
add
inc
into
repz
gs
inc
pusha
and
out
negl
jl
jg
adc
mov
mov
nop
mov
push
jnp
pop
jnp
add
loop
hlt
lea
aaa
inc
sbb
add
cmp
cmp
or
pushf
out
test
xor
xorl
push
js
pop
sbb
jno
xor
dec
dec
dec
pusha
adc
push
popf
cmp
or
cmpsl
pop
mov
gs
mov
into
les
dec
push
scas
imul
and
xchg
scas
or
pop
jb
pop
or
rcll
mov
ret
fsts
xchg
lea
cmp
in
cs
fs
or
xchg
fstpt
enter
js
dec
or
pop
and
push
xchg
or
push
int3
pop
mov
sub
mov
sbb
std
xchg
pusha
mov
xchg
or
push
inc
dec
ja
adc
adc
push
dec
test
mov
dec
inc
mov
pop
stos
jmp
xor
shll
dec
jge
sbb
xor
rclb
or
cmpsl
cmp
push
cmp
loop
lret
mov
in
push
cmpsl
sbb
icebp
xchg
inc
dec
pop
jb
xor
or
xlat
and
cmp
push
add
sub
or
dec
stos
out
sti
pop
icebp
pop
icebp
xchg
addr16
and
and
ljmp
add
jne
ss
xor
inc
testl
mov
enter
push
repz
imul
jns
jg
rcrb
into
fdivs
mov
pop
jo
unpcklps
sti
cwtl
sub
mov
jge
scas
rcrb
daa
insb
cwtl
cmp
scas
push
mov
jbe
mov
jae
cld
and
adc
ds
les
and
aad
lret
lods
aam
scas
sub
xor
add
loope
xchg
or
inc
push
pop
sub
pop
aad
pop
test
xor
cltd
pushf
inc
xchg
outsb
fsubr
adc
movsl
mov
mov
fadds
jl
addr16
clc
inc
fisubl
ljmp
repnz
sub
sub
or
fidivrs
mov
idiv
mov
stos
sub
out
pop
in
roll
enter
in
pop
shrl
leave
mov
jbe
icebp
pop
dec
push
in
adc
mov
aaa
shl
cs
add
push
xchg
and
mov
sti
incl
out
add
movsb
cmp
xchg
js
and
add
jle
mov
fwait
pop
adc
mull
sbb
add
enter
cltd
in
cmc
or
push
out
lret
push
pop
push
mov
aad
test
xchg
fcoml
push
addb
mov
inc
add
loop
aad
xchg
push
and
dec
aam
mov
sub
mov
popf
adc
push
ss
xor
add
inc
and
cltd
in
mov
xchg
mov
fdivl
out
cmp
push
adc
mov
fmull
sahf
outsl
cli
outsb
int
stos
push
and
testl
aaa
inc
sbb
popf
cmpb
ljmp
mov
mov
mov
dec
lea
arpl
jmp
test
adc
fisttpl
insb
cmc
pop
aad
cltd
fwait
int3
movsb
mov
roll
rol
inc
mov
or
cmp
mov
loope
pop
jmp
insl
cmp
lret
pop
xabort
fbld
push
pop
das
ret
lcall
lock
mov
xor
dec
and
ljmp
push
pcmpeqb
inc
mov
fs
sbbl
cmp
mov
push
pusha
rorb
aaa
lea
mov
inc
ja
and
mov
data16
mov
mov
cmp
cmpsb
dec
dec
xchg
or
push
add
push
or
pop
das
adc
dec
jae
push
push
ja
sahf
jnp
add
pusha
dec
adc
mov
stos
mov
or
jle
jp
mov
xchg
sub
lock
shl
shlb
mov
mov
mov
jno
push
loop
cs
cmpl
xor
mov
adc
push
cmp
pushf
mov
adc
divl
int
sti
jmp
addr16
pop
insb
xchg
out
into
scas
and
cmp
and
mov
mov
negl
fstpl
dec
les
pop
fwait
rolb
ljmp
scas
stos
fadd
adc
aas
popf
mov
rorl
pop
outsb
in
test
popf
push
sub
subb
sub
push
das
dec
mov
stos
imull
add
xor
incb
outsl
mov
fwait
ret
fs
jo
sbb
jo
aad
addb
and
jns
sbbb
idivl
fcomip
out
inc
xchg
cmp
xchg
mov
mov
cmp
adc
add
mov
jecxz
ds
mov
ja
fimull
push
mov
mov
fdivr
dec
mov
pop
in
aas
fcomp
xchg
push
rol
push
out
loopne
jmp
xchg
fcoml
movsl
mov
push
ds
sub
xor
lcall
stos
lcall
les
dec
fwait
and
sub
cltd
out
stos
rcl
out
pusha
adc
ljmp
fidivrs
mov
cld
push
sbb
cmp
mov
test
loope
add
jo
sbbb
stos
inc
jae
mov
or
out
mov
xchg
aas
dec
add
push
xchg
es
xchg
leave
inc
dec
xchg
xchg
in
add
roll
nop
sbb
imul
xlat
in
xchg
or
test
popf
int
imul
cld
sbb
push
rcr
xchg
fsubrs
jp
les
int3
jno
insl
mov
std
dec
fdivr
add
pushf
adc
sahf
or
pop
in
cmp
jle
cmp
mov
mov
sarb
xor
push
and
inc
fmull
pop
aaa
hlt
test
or
jns
pop
jle
jmp
adc
sahf
repnz
js
dec
push
xchg
and
pop
xor
cmpsb
or
in
outsb
ds
xchg
mov
jg
jne
lret
xor
les
cs
jg
jecxz
sub
cmp
dec
xchg
inc
in
push
add
sub
jle
jg
in
cmpsb
stos
in
cmc
sub
xor
push
add
mov
sbb
loope
pop
xchg
pop
or
test
mov
out
cmp
sub
mov
and
lret
dec
jns
fwait
mov
jnp
shll
push
stos
jecxz
inc
mov
or
mov
enter
pop
jp
mov
stos
aas
in
push
stos
fisubrl
ds
rclb
mov
add
sbb
and
mov
cltd
and
mov
and
add
andl
mov
loopne
pop
dec
xor
xor
or
imul
sub
mov
out
sbb
push
xchg
pop
cli
adc
out
push
jge
pop
add
fnsave
inc
aam
mov
jle
imul
xchg
or
mov
jnp
mov
inc
xchg
testb
aad
ret
dec
aad
adc
dec
into
repz
out
hlt
xor
xchg
inc
push
ret
pop
sbb
or
mov
push
rcll
mov
xchg
dec
cmc
lods
mov
jo
andb
iret
add
fs
jp
aad
pop
sub
pop
push
lods
jne
insb
sub
sub
mov
pushf
add
hlt
xor
adcl
push
inc
mov
jno
cltd
pop
cmp
cmp
ljmp
push
stc
icebp
aas
jo
jl
or
mov
in
or
cmp
inc
not
jae
mov
aad
popa
lock
shlb
adc
mov
sub
lock
ja
loope
leave
xchg
mov
jbe
mov
cmp
in
adc
mov
sub
mov
sbb
addr16
int
pop
mov
movsb
fsub
mov
dec
sub
test
dec
pop
popa
sub
std
bound
sub
adc
sbb
insb
add
fwait
sub
or
xor
pop
adc
lods
stc
cld
sbb
pop
or
and
bound
dec
in
stos
xor
shll
pop
daa
and
or
in
mov
jne
or
pop
lods
es
test
add
dec
nop
mov
cld
lahf
mov
cld
mov
mov
aaa
push
out
stc
sbb
pop
sub
mov
cmp
mov
rolb
push
pushf
cwtl
mov
and
adc
sbb
loope
cmpsl
or
dec
bnd
jo
pop
insb
sarb
lods
repz
iret
or
push
int3
cmp
lcall
jl
lcall
jne
es
add
mov
xchg
jg
scas
adc
ljmp
xchg
jb
shlb
mov
sub
jb
in
xor
sub
ret
movb
fistpl
mov
jno
cmp
dec
mov
pop
mov
not
push
int
out
xchg
aas
add
mov
push
mov
add
mov
push
movsl
mov
xchg
sahf
jge
mov
sub
nop
or
cwtl
jbe
les
pop
ret
lahf
lods
test
mov
mov
jmp
mov
incl
movsb
mov
xor
stc
ret
shr
and
mov
lods
add
adc
inc
mov
xor
movsb
lcall
jbe
addb
js
popa
ficoml
mov
rcrb
ja
out
pop
add
rclb
pop
daa
xor
test
fadd
mov
sbbb
cmp
stc
enter
jecxz
lret
cmc
lret
es
int3
mov
enter
sub
test
mov
cmc
repz
xor
mov
dec
test
add
jo
xchg
aaa
outsb
sti
mov
and
testl
sub
inc
daa
fistpll
mov
xchg
shr
mov
stc
cmp
popa
aad
lahf
push
sbb
cmp
pop
add
outsb
daa
fwait
shl
aas
add
push
out
out
int3
movsb
ss
fmull
cmp
jns
mov
xor
jp
pop
push
aas
notb
push
sbb
xor
ds
push
pop
fistpl
cmp
sbb
mov
push
pop
mov
fwait
out
mov
cmp
ret
mov
mov
push
test
ss
dec
jmp
imul
pop
aam
sbb
sbb
ja
out
mov
push
jecxz
or
xor
add
in
in
xchg
or
aam
sub
mov
sbb
cmp
cmpsb
aad
lods
mov
lret
xor
xchg
mov
mov
cmp
repnz
stos
mov
or
repnz
xchg
jmp
imul
sbb
pop
mov
adc
mov
sbb
lahf
lahf
cld
or
mov
push
pop
mov
ror
add
sub
clc
lret
lods
xor
adc
int3
movsb
mov
cltd
add
test
xchg
xchg
fwait
test
sub
nop
loope
inc
inc
cmp
sub
popa
mov
js
int
inc
lock
sbb
or
inc
pushf
test
test
xorl
pop
lock
dec
imul
push
shlb
xchg
cwtl
inc
sub
inc
sbb
dec
hlt
pop
int3
dec
movsl
insl
movsb
jbe
mov
push
or
movsl
pop
notb
push
cmp
dec
mov
icebp
xor
fistps
sbb
pop
or
jp
mov
push
or
xchg
shl
sbb
aas
in
loope
xchg
mov
repnz
xchg
cs
sub
inc
and
mov
out
lods
adc
push
subl
cmpsb
out
cmc
addr16
jns,pn
std
xchg
mov
inc
sub
adc
scas
out
outsl
rcl
mov
stos
rcrb
mov
push
xor
xlat
lahf
fmulp
add
push
add
scas
pop
add
and
lahf
shr
push
lods
jnp
lar
hlt
in
mov
jne
add
and
jae
daa
push
out
xchg
outsb
dec
out
pop
inc
pop
dec
stos
daa
mov
dec
add
out
sub
lret
les
rcrl
fs
xchg
dec
push
ds
mov
cmp
ds
nop
jle
shrb
mov
lahf
loopne
cmp
dec
mov
add
push
and
and
scas
out
add
mov
xchg
cmc
aam
and
icebp
inc
jne
push
add
leave
lret
in
xor
pop
insb
imul
fstl
enter
add
xchg
push
mov
jne
pop
jb
inc
jg
adc
dec
in
jbe
mov
mov
cmpsl
mov
pushf
popf
mov
pop
jp
arpl
js
lret
pop
cwtl
rorl
pop
xchg
mov
dec
add
mov
jl
je
aas
inc
adc
cmp
mov
mov
mov
pop
cmp
or
mov
push
adc
pop
jp
lcall
out
dec
add
add
les
cmp
aaa
push
ss
lock
adc
add
jae
push
orl
outsl
mov
sbb
pop
int3
pop
xor
rcl
mov
addr16
popa
xchg
jle
mov
shll
je
das
xor
sub
shll
cmp
add
mov
mov
pop
dec
pop
mov
xchg
fiadds
sbb
sub
andl
xchg
sub
int3
jecxz
mov
pop
aam
mov
xor
dec
push
and
lods
test
popa
cwtl
mov
pop
pop
push
xchg
mov
clc
xor
dec
xchg
lret
outsb
cmp
and
les
and
mov
pop
paddb
sbb
aam
in
dec
test
push
jl
test
push
add
mov
xor
bound
mov
jp
test
xor
pusha
jp
cmp
out
out
cmp
xchg
inc
or
mov
sbbb
pop
mov
sbb
fisubrl
pop
out
pop
bound
pop
push
push
push
add
jp
mov
fcomip
stos
outsb
lret
xchg
sub
stos
mov
jmp
xorl
xor
and
clc
mov
dec
sbb
lret
mov
mov
ljmp
das
and
push
or
pop
mov
inc
mov
outsl
add
js
pop
mov
adc
cwtl
or
aas
mov
in
adc
test
js
add
shlb
dec
aad
cmp
sbb
jno
mov
pusha
imul
mov
xor
push
arpl
push
clc
ja
cli
loope
fiaddl
cmp
cmp
or
popf
push
iret
push
iret
fsubr
mov
icebp
nop
insl
inc
cli
jecxz
pop
mov
adcb
pop
mov
dec
clc
push
inc
inc
cwtl
stc
scas
js
or
shlb
arpl
paddb
and
push
lret
pusha
dec
xchg
cmpsb
push
sbb
gs
add
sub
and
mov
lret
shll
adc
and
push
rolb
es
aam
inc
xor
sub
in
jo
mov
nop
dec
out
xorb
fimull
in
inc
ds
lahf
test
or
push
cmp
lahf
imul
and
add
push
xchg
or
into
and
in
repz
xor
dec
jns
mov
cmp
pusha
sub
jg
sub
loopne
jns
sbb
test
pop
addr16
fucom
sbb
addl
cmp
cli
mov
push
scas
push
xchg
lcall
pusha
mov
in
inc
push
adc
mov
addr16
add
sbb
addr16
sub
mov
add
and
push
lds
daa
xchg
std
jne
dec
and
notb
adc
push
lds
adc
das
loope
jp
inc
inc
aas
andb
xor
popa
daa
cmp
xchg
add
mov
mov
pop
shl
pop
movsb
push
xchg
jnp
popl
sahf
and
idiv
cmpsl
cmc
adc
popa
xor
daa
mov
xor
push
mov
add
or
or
inc
or
insl
mov
add
sahf
pop
cld
dec
orb
fwait
mov
jnp
or
mov
nop
inc
test
lret
sahf
data16
gs
xchg
out
bound
mov
xchg
aas
in
stos
xor
shl
mov
dec
int3
xor
lock
ds
cmp
jns
mov
pushf
adc
mov
inc
cmp
xchg
push
fcoms
movsl
out
push
pop
xchg
inc
mov
add
repz
push
mov
cmp
push
mov
test
adc
xlat
or
mov
call
cmp
aas
stos
push
cld
adc
push
push
or
and
jns
lods
cmp
adc
jno
pop
push
punpckhwd
mov
sbb
mov
or
adc
les
pop
dec
sbb
sub
xlat
loopne
pop
rcll
fsubp
inc
jp
and
push
xchg
fsubr
in
ljmp
lea
mov
mov
push
xchg
mulb
xor
cmp
leave
sti
add
xchg
push
sbb
in
or
in
leave
fisttpll
rcrl
xor
mov
adc
outsl
add
sub
push
mov
jns
pop
add
ss
sbb
lods
and
call
shlb
aam
add
fcmovne
cmpsb
je
lret
and
divb
movsl
add
outsb
dec
xchg
dec
pop
add
and
jmp
addr16
test
loopne
loopne
in
dec
or
aas
push
pop
mov
loopne
aam
pop
fnstcw
fmuls
or
shll
pop
jo
pop
loopne
dec
or
fucomp
jb
insb
mov
fisubl
adc
shl
nop
roll
pop
xorb
pop
enter
fstpt
hlt
mov
fucomp
insb
mov
test
imul
lds
lret
cmp
sub
movsb
push
inc
ror
pop
iret
out
mov
int3
jmp
pop
pusha
out
aam
mov
fs
and
jnp
mov
xchg
cwtl
pushf
aas
outsl
or
inc
jns
outsl
or
les
shll
cmp
mov
xchg
ljmp
orl
stos
hlt
inc
mov
test
movsl
dec
dec
call
lock
mov
push
pop
cmpsl
xor
fsts
or
fildll
xor
imul
or
jl
inc
sub
jno
movsb
orl
push
jae
and
inc
mov
push
adc
cmpsb
cwtl
cli
xchg
lea
add
xor
imul
int3
inc
cmp
outsb
mov
pop
int3
sbb
adc
jp
sbb
insb
out
cmp
sbb
pop
pop
mov
aam
pop
adc
sbb
mov
and
xor
pushf
xlat
sbb
xchg
and
xchg
rol
addr16
loopne
sbb
imul
ret
pushf
cmp
mov
daa
std
mov
jle
adc
les
out
fnstenv
and
inc
stos
xchg
inc
fildll
push
cli
rorl
inc
lret
dec
sub
push
cmpsb
add
push
sub
mov
je
xor
cmp
inc
sbb
adc
enter
rolb
pop
lock
xchg
lds
add
xchg
sbb
inc
xor
and
mov
xor
loopne
pop
imul
mov
mov
int
dec
rolb
sarb
repnz
pop
fst
mov
fcomp
mov
aad
int3
xor
xchg
add
ret
cwtl
mov
std
ja
xchg
fmull
arpl
pop
add
std
shrb
mov
int
data16
inc
mov
pop
sbb
loope
mov
jae
jnp
sbb
imul
dec
lcall
xchg
jl
je
lret
jge
nop
in
movsb
dec
fnstenv
add
daa
fisubrs
or
mov
cmp
mov
sahf
jge
enter
mov
lds
aas
adc
mov
cwtl
scas
sbb
stc
add
adc
sarl
insl
loope
xor
out
add
xchg
int
dec
fbstp
mov
aas
add
inc
insl
ja
hlt
leave
in
rcll
cmp
and
jl
pusha
rcll
cld
jmp
mov
data16
fdivr
call
xchg
mov
pop
mov
testl
pop
push
add
popf
inc
inc
cmp
pop
repz
and
ror
rcrl
sub
repnz
xchg
dec
sbb
das
sbb
cmp
and
push
rorb
jecxz
inc
jns
and
mov
xor
inc
outsl
xchg
xchg
jbe
mov
push
cmp
mov
pop
adc
jmp
jecxz
and
jmp
mov
cmp
mov
inc
xchg
mov
jno
arpl
stos
enter
or
lret
dec
cmpsl
dec
ret
xchg
adc
das
inc
out
and
cmpsl
or
fistpll
test
es
icebp
xchg
xchg
mov
and
xchg
imul
dec
das
sub
lods
inc
adc
lods
mov
data16
outsl
push
mov
mov
addsubps
cmpsl
loope
stos
sub
orl
lcall
pop
imul
cwtl
mov
sbb
inc
and
stos
arpl
push
add
cmovns
sarl
jg
xchg
pop
scas
xchg
or
and
or
inc
push
pop
push
mov
addr16
mov
iret
rcl
cmp
mov
or
mov
mov
fstps
int3
call
je
dec
cwtl
sbb
aas
cwtl
pop
fistps
mov
push
push
inc
mov
out
mov
loope
push
push
leavew
or
sub
pop
inc
mov
stc
inc
imul
ret
les
adc
sbb
xchg
pusha
fdivr
inc
mov
in
xchg
es
mov
dec
test
cmp
negb
sub
cld
inc
push
cwtl
lock
fstpl
mov
in
fistpll
jne
loope
aad
fldcw
adc
fstpt
jp
sti
mov
mov
test
pop
ret
cld
and
adc
jle
pop
bnd
inc
and
mov
stc
fsubrl
popf
xchg
testb
and
aad
fcompl
sarb
int
lock
cs
push
orl
dec
into
fstpt
xchg
mov
das
sbb
dec
mov
fcoms
loop
fwait
push
or
mov
or
inc
ret
xlat
lods
data16
dec
cmp
inc
fcomps
adc
or
test
dec
mov
popf
ret
inc
xor
sub
xor
iret
rclb
add
adc
sbb
in
pop
mov
bound
jne
bound
cld
lock
pusha
fsubs
sarb
bound
std
imul
jno
dec
ficomps
dec
dec
std
mov
fmull
test
les
test
in
nop
loopne
cmp
adc
and
or
and
in
sub
xor
mov
and
mov
addr16
cld
dec
mov
xchg
cmpsl
cld
pop
je
mov
mov
sub
fwait
lahf
jl
and
cld
push
xchg
cmp
mov
pop
pop
mov
insl
lds
aam
mov
out
lods
jp
call
push
movsb
adc
jns
pop
adc
adc
sbb
jl
imul
mov
and
jp
add
push
pop
dec
jg
push
push
inc
xor
add
cmp
bnd
mov
mov
push
nop
xchg
out
cmp
aaa
lret
sub
in
rclb
dec
or
jns
loopne
test
sub
shl
nop
xor
cwtl
and
mov
ja
in
out
insl
push
imul
xor
movl
ss
in
pop
adc
cmpsb
xchg
push
mov
mov
mov
adc
ret
popf
mov
inc
ror
into
adc
mov
in
dec
dec
push
sub
push
repnz
in
ljmp
push
ljmp
and
outsl
jge
and
or
xchg
sti
ret
jno
aam
pushl
adc
fstl
cmp
add
test
lods
stos
push
movsl
inc
sbb
mov
push
leave
sbb
enter
mov
arpl
mov
xchg
and
mov
dec
pop
jns
inc
push
mov
fbld
rcrb
sbb
or
popf
lock
leave
imul
fisttps
cli
hlt
or
mov
push
fisttpll
sub
xchg
adc
in
test
add
stos
je
push
cmp
and
fstpt
dec
push
hlt
lea
outsb
dec
cmp
xor
jnp
fwait
push
jno
lods
lods
stc
or
orb
into
xor
mul
xlat
mov
je
ja
dec
fstl
shr
notl
jnp
dec
mov
lods
cld
out
push
les
nop
adc
loope
imul
jp
inc
ja
loopne
xor
arpl
mov
add
push
movsb
sub
push
or
lret
xchg
jns
movsb
sub
aaa
inc
test
sahf
movsl
rorl
insb
push
repnz
or
add
enter
movsb
sub
fadds
xor
scas
adc
ljmp
fwait
js
popa
sbb
mov
in
sbb
pop
mov
mov
or
es
pop
imul
push
push
mov
ljmp
dec
scas
enter
jo
ljmp
fdivp
cs
and
xor
or
clc
push
iret
push
std
mov
jnp
pop
cmp
mov
lahf
mov
js
jb
cmp
adc
je
scas
push
daa
outsb
sbb
pushf
mov
or
into
les
xor
bound
icebp
sbb
inc
sub
xchg
rcll
jmp
stos
adcb
dec
sub
std
mov
ja
jnp
cmpsl
fcoms
fcmovbe
cmp
sbb
dec
mov
dec
lcall
xor
lret
mov
cs
aas
das
mov
mov
nop
std
push
fstl
or
or
inc
add
and
adc
in
orl
cmp
das
outsb
xchg
ret
sub
jmp
or
dec
adc
cld
push
xchg
mov
out
inc
lds
adc
into
pop
int3
daa
inc
and
roll
lods
mov
mov
repz
sbb
xchg
mov
negl
pop
lea
push
jnp
xchg
notb
or
test
test
mov
and
cmp
in
or
sti
js
lds
mov
pop
ret
ja
lock
mov
pop
test
jns
pop
sbb
sbb
adc
sub
into
jne
loop
mov
add
jle
pop
mov
push
decb
pusha
and
mov
rcrb
aaa
mov
adc
bound
movsb
dec
daa
cmp
inc
imulb
mov
jge
add
cltd
jae
cmc
movq
pop
stos
cmp
cld
add
movl
call
jb
divb
mov
or
or
std
adc
push
addl
adc
xchg
inc
dec
sub
xchg
dec
stc
sbbl
lahf
push
sbb
je
jecxz
pop
cltd
out
and
pop
xchg
xchg
je
or
js
inc
cmpxchg
out
dec
mov
js
pop
xchg
mov
xor
cmpsb
inc
ret
ds
sti
jne
mov
add
dec
ss
into
inc
in
and
adc
mov
cmp
pusha
fstpt
aam
rolb
push
mov
bound
cmpsl
jb
sbb
pushw
jmp
dec
push
jns
aam
jae
and
clc
test
mov
push
popf
jns
dec
sti
push
scas
out
pop
mov
sbb
rcrb
das
mov
push
mov
sub
xchg
ss
mov
pop
push
inc
out
outsl
ret
popf
pop
in
add
dec
and
and
insb
pushf
addr16
dec
mov
jnp
xchg
sbb
popa
fstps
inc
mov
testb
outsb
outsl
mov
jp
push
popa
sub
shr
imul
mov
in
sarb
aaa
std
lahf
lds
xchg
into
lods
push
jns
in
mov
ljmp
insl
arpl
movsb
cld
cmp
sub
sbb
sub
cwtl
pop
scas
pop
mov
push
jle
add
xchg
mov
pop
push
adc
push
fsubp
outsl
arpl
sbb
stos
out
adc
xor
or
adc
cmp
dec
jae
or
mov
mov
arpl
lea
daa
es
cwtl
mov
test
dec
push
sbb
loop
mov
jbe
mov
xchg
lods
lds
scas
xlat
lods
dec
int3
adc
jnp
dec
ss
iret
fisttpll
adc
jbe
xorl
cld
add
out
or
addr16
push
xchg
mov
cmc
sub
fsubr
dec
and
das
ds
fistps
mov
cmp
adc
adc
push
lods
cmc
push
push
add
lret
ret
inc
test
lahf
lods
lods
pop
jmp
xchg
test
jo
adc
mov
lahf
ss
push
shlb
mov
gs
push
fsubl
xchg
dec
xchg
shll
inc
xor
adc
movd
push
sub
adcl
mov
test
int
push
dec
cmpsl
hlt
or
test
jg
stc
fsubrl
lods
stos
cmc
jp
insl
mov
hlt
les
xchg
push
test
push
jbe
xor
and
test
jp
mov
popa
inc
xor
pop
adc
shrb
push
inc
add
inc
sbbl
sbb
mov
mov
pop
cltd
mov
dec
push
sub
gs
lods
xchg
inc
lret
push
adc
dec
mov
fsubr
xchg
push
idivl
pushf
movb
inc
cmp
pop
cmpl
mov
sbb
mov
lds
sbb
js
push
inc
pop
xchg
in
fidivrl
into
add
mov
ss
xchg
sbb
shrb
leave
push
mov
stos
cmp
dec
fistps
nop
push
jp
pop
cmp
dec
sbb
dec
cmp
fidivl
outsl
mov
sbb
call
push
clc
insb
aad
fistps
sub
inc
ss
inc
jp
scas
loop
pushf
sbb
xor
jg
xchg
mov
pop
sub
inc
clc
xor
push
xchg
cwtl
cmc
aad
or
sbb
loope
cltd
decb
dec
icebp
testl
js
rcl
ja
iret
pop
pop
sub
je
inc
mov
loop
push
adc
mov
jbe
movsl
cmc
flds
xor
mov
sub
out
cli
pop
leave
cwtl
bound
push
popf
pop
jbe
loopne
cld
pop
mov
cvttss2si
daa
inc
inc
lahf
dec
nop
ret
leave
jp
je
lahf
or
dec
daa
incb
xchg
sub
ljmp
in
arpl
adcl
out
mov
ret
add
fcmovbe
aaa
adc
push
sbb
mov
aaa
shlb
rclb
dec
jb
xchg
sbb
in
loopne
out
frstpm(287
negl
or
push
dec
insl
lods
push
fwait
sbb
mov
jnp
cmp
stc
mov
ss
adc
inc
mov
scas
iret
mov
add
mov
push
push
add
out
mov
je
jl
push
sbb
inc
push
jmp
jecxz
cmp
dec
imul
mov
push
sub
imul
jle
leave
cmpsl
insl
ds
movsl
imul
les
out
add
lods
add
cmp
pusha
jne
lds
subb
sar
push
ret
and
inc
imul
mov
push
cli
or
sbb
int
and
mov
out
adc
sahf
mov
xchg
xchg
cmpsl
lcall
sub
dec
jb
inc
and
cmpsl
mov
sub
aaa
jg
cmp
nop
mov
jno
outsl
sub
push
insl
cmpsl
lret
inc
stc
icebp
sbb
xchg
pop
add
add
ds
xchg
push
mov
pop
adc
enter
fwait
pop
push
leave
repz
out
and
dec
je
fmulp
push
jbe
imul
outsb
pop
mov
xor
movsl
xchg
mov
lahf
sbb
mov
std
fimull
jecxz
mov
sbb
popf
adc
fwait
fs
jg
xlat
adc
js
ljmp
inc
and
out
push
cmp
pushf
jnp
pushf
or
mov
or
cmp
rorb
jg
stos
ljmp
stos
push
xchg
cmp
vsubps
jmp
inc
ret
lahf
sub
enter
xchg
iret
push
negl
mov
fisubrl
xor
lods
lods
aaa
int3
pushf
lds
add
add
jmp
fstpt
cmp
lret
mov
xchg
cli
cmc
xor
xchg
mov
movsl
repnz
jnp
mov
xchg
inc
xchg
cmc
std
mov
rolb
xchg
mov
addb
mov
mov
fiadds
sbb
mov
fisubrl
stos
pusha
xor
adc
jl
sbb
stc
cmp
xchg
ss
mov
sbb
loopne
sub
jg
es
mov
mov
jb
lea
aad
ret
shll
jb
add
jmp
xor
ja
jg
mov
jo
sahf
mov
or
push
inc
add
push
sub
pop
stos
int3
popl
mov
push
pop
adc
mov
xchg
sub
jno
cmp
cmp
jns
pop
push
xchg
enter
lcall
insl
mov
into
testl
sar
dec
adc
pop
scas
mov
ss
jge
sub
mov
sbb
outsl
adc
dec
adc
je
xor
out
arpl
ret
mov
pop
cli
or
inc
sti
rolb
js
enter
push
mov
pop
js
je
or
lahf
out
or
push
leave
push
fldt
rcrl
mov
sub
stos
lds
mov
jns
xchg
sbb
outsl
push
fists
inc
jae
xor
repnz
mov
dec
sbb
insl
cmp
out
adcl
fbstp
int
or
test
mov
stos
xchg
or
xor
push
inc
aas
dec
icebp
adc
iret
or
stos
adc
dec
enter
inc
dec
ss
adc
cmpsb
sti
pushf
rdmsr
das
mov
cld
jg
xchg
fs
jecxz
xchg
pop
pop
push
pop
or
sbb
dec
scas
add
jns
sbb
push
stc
lock
pop
mov
xor
add
mov
cmp
pusha
or
sti
xchg
mov
sbb
add
and
mov
aaa
pop
dec
fsubrs
mov
and
outsb
xchg
xchg
test
outsl
push
jp
xlat
imul
dec
cmp
adc
and
rcrl
flds
cmpsb
mov
arpl
xor
loop
pop
addr16
lods
cmovge
mov
adc
ljmp
mov
aam
into
mov
mov
mov
sarb
testl
dec
std
cmp
push
push
sbb
out
push
dec
popf
ret
sub
mov
adcl
cli
ss
xlat
jbe
sub
cs
bnd
pushf
mov
push
into
add
pop
jle,pn
in
or
pop
adc
mov
pop
jno
mov
mov
es
int
movsb
xchg
xor
push
imul
dec
jns
inc
mov
and
pop
jle
adc
into
lcall
lds
lahf
lods
mov
ficoms
aaa
aaa
stc
stos
push
jnp
push
lea
inc
jns
ljmp
lea
mov
stos
dec
mov
ret
icebp
repz
pop
lahf
lret
mov
daa
xor
sysexit
jp
cmp
xchg
mov
shll
in
icebp
dec
inc
cmp
test
cmpl
ret
ds
cmp
sub
fcoml
std
mov
movsl
xchg
lods
lds
mov
adc
pop
inc
test
loope
les
adc
add
mov
sbb
pusha
jl
dec
inc
xor
mov
roll
inc
repnz
sbb
push
pop
pop
or
mov
movsl
cmpsl
xor
jo
or
mov
aad
addr16
dec
mov
filds
mov
jne
data16
cmpsb
and
xchg
imul
adc
inc
jae
lods
fisubl
loope
lods
jno
mov
inc
mov
sbb
pop
leave
aaa
push
cmp
in
mov
notl
leave
sbb
movsb
xchg
or
push
dec
pop
pop
lods
push
andb
aad
xchg
add
ret
lods
mov
mov
mov
fwait
ds
jbe
cs
mov
test
xor
sbb
stc
scas
sub
sbb
cld
cmp
insl
jo
outsl
negl
repz
scas
das
stc
js
mov
mov
cmp
insl
sbb
pop
and
sub
sbbl
xchg
imul
jo
in
arpl
lods
fdivp
mov
inc
and
in
jnp
gs
adc
movsb
cltd
inc
xchg
out
in
fnstenv
js
or
aaa
inc
mov
int3
fdivp
aas
js
mov
std
xchg
aas
cli
lahf
addr16
push
cmp
mov
nop
movsb
mov
cmp
mov
out
repnz
imul
outsl
xor
xchg
add
mov
dec
je
or
in
sbb
into
add
std
and
rcrl
xor
shrb
dec
into
lods
xchg
sahf
fdivr
outsb
push
inc
push
xor
adc
imul
cmp
clc
sbb
mov
push
test
test
xor
cltd
iret
ret
mov
mov
jl
and
enter
out
popf
loop
cmc
dec
mov
popf
enter
xchg
mov
and
cmpsb
fnstenv
imul
dec
push
xchg
jbe
shl
push
in
pop
test
jae
hlt
xchg
and
stos
add
mov
inc
mov
dec
aaa
testl
jnp
ja
shll
mov
xor
ficomps
leave
insl
jmp
xor
inc
jmp
cmpsb
push
sbb
xor
adc
push
pop
cwtl
xchg
add
pop
dec
lcall
cmp
aad
lahf
cli
data16
or
in
lods
mov
icebp
in
mov
in
test
addb
pop
xor
push
shll
or
xor
in
push
cmp
or
pushf
jae
into
stos
out
jb
push
stos
shlb
mov
mov
mov
or
rcrb
sar
add
popl
xchg
fisttps
jmp
jnp
push
fstpl
test
mov
dec
cmp
jnp
dec
test
out
fdivr
int
incb
xor
inc
testl
outsl
repz
and
push
out
je
push
inc
inc
or
je
xor
sub
jecxz
cmp
and
cs
das
pop
filds
dec
cmp
push
insl
pop
xor
in
loopne
xchg
andl
jp
jae
repnz
adc
iret
inc
pop
negb
leave
jb
xchg
push
int3
loopne
xlat
sub
and
shll
mov
cwtl
mov
jno
icebp
mov
aad
pop
addb
ficompl
and
int3
sti
mov
out
cmpsb
adc
sub
dec
mov
mov
andl
outsb
insl
mov
outsl
inc
loopne
push
shll
in
loopne
out
loop
jle
loope
fwait
push
enter
out
std
xlat
jecxz
sbbl
ds
mov
bound
fwait
jecxz
xchg
jbe
movsl
mov
or
add
fs
lret
inc
mov
pop
les
insl
dec
dec
js
xor
xchg
pop
mov
xorl
lret
hlt
jnp
xchg
fsubp
xor
push
mov
js
inc
inc
cmp
repz
leave
dec
rcrb
cltd
out
imul
out
pushf
sbb
add
test
mov
gs
adc
push
mov
sub
push
dec
inc
out
js
xchg
je
int3
enter
scas
icebp
aam
shrb
xchg
addr16
or
push
shl
fisubrs
loopne
flds
pushf
rclb
or
sbb
in
fcoms
cmp
dec
pop
add
cmc
dec
push
mov
roll
inc
jge
sbb
outsl
lods
mov
pop
lea
push
mov
sbb
aad
push
rolb
pop
pop
testl
mov
loopne
jmp
pop
or
loope
test
mov
fwait
adc
xchg
push
shlb
out
mov
xchg
adc
add
shr
dec
or
mov
push
jg
push
dec
ret
cltd
jne
outsb
cltd
lahf
push
mov
inc
cmp
xor
sbbl
icebp
xor
test
andl
push
sub
xchg
xchg
mov
add
add
and
push
push
or
idivb
mov
shrl
pop
nop
jecxz
aad
pushf
loop
mov
out
loop
and
ds
lret
xchg
mov
lods
push
cli
sbb
push
sbb
or
push
pop
adc
adc
scas
push
or
mov
jno
jb
mov
mov
bound
enter
cltd
pop
cmp
in
test
or
rorl
push
or
pop
dec
ss
mov
int
ss
into
and
push
pmaxub
or
add
adc
pop
xchg
push
adc
mov
lods
lods
cmp
sbb
push
clc
dec
test
arpl
xor
mov
jp
or
and
into
lods
mov
xchg
hlt
or
jge
sbb
or
arpl
stc
adc
int
stos
frstor
mov
inc
mov
sbb
cmp
jae,pn
xchg
sbb
xor
pop
lods
lea
inc
mov
leave
imul
das
rorl
sarl
adc
push
divb
sarb
dec
repnz
push
jnp
mov
std
jb
jb
fsubrp
cmpsb
or
imul
rcrl
orl
jb
sahf
cmpsl
cmc
or
push
clc
sbb
lahf
fs
mov
pushl
mov
lea
int
fldl
das
scas
into
mov
mov
stc
stos
popf
mov
mov
jb
mov
xor
adc
call
in
mov
xor
syscall
bound
arpl
xor
push
iret
mov
orl
cmpsb
inc
adc
or
jl
jns
mov
mov
sbb
ljmp
mov
loop
jne
cmc
imul
and
or
mov
jecxz
cmp
pop
adc
mov
xor
int
ds
je
pop
int3
test
mov
jg
out
ja
or
sarb
subl
xchg
fldl
scas
popf
stos
add
adcb
cld
sub
xor
pop
jns
lcall
fwait
xchg
add
adc
push
xchg
shlb
rcll
lahf
push
and
js
push
ret
jmp
ret
movsb
or
push
cmp
xchg
mov
loopne
pusha
enter
repz
cmp
ret
loopne
fsubs
xchg
sbb
xchg
idiv
jl
bound
lcall
pop
pop
xor
insl
lret
inc
inc
andl
pop
push
test
add
das
dec
shll
sti
push
xchg
push
jae
mov
je
push
add
scas
icebp
pop
test
sub
pop
and
aad
cmp
mov
std
stos
push
fists
adc
xchg
lods
movsb
test
sbb
pusha
push
inc
xor
stc
idivl
xor
cmp
insb
ljmp
fstpt
pop
push
mov
cld
fdivs
dec
lds
inc
and
out
pxor
sbb
out
aam
rorb
xor
subl
shlb
add
mov
and
sbb
pushf
push
mov
fabs
lret
cli
cmpb
fdivr
fnstsw
xor
add
sbb
inc
add
pop
lds
mov
loopne
in
out
push
fdiv
lods
pop
repnz
inc
or
push
push
outsb
divb
adc
pop
and
mov
cmp
aas
add
add
fisttps
mov
imul
movsb
loopne
pop
pop
leave
cmp
push
mov
or
jl
adc
cmp
jb
push
test
pop
scas
jmp
add
inc
cmp
cmpsl
mov
cmp
shlb
cmpsb
popa
repz
aad
repnz
add
insb
jecxz
sbb
jns
dec
pop
mulb
test
adc
fnstsw
fidivl
sti
inc
dec
xchg
cmp
jge
fsubrl
adc
std
pop
cmpsl
subb
adc
movsb
lret
add
cmp
pop
or
cmpsl
iret
mov
js
cwtl
pop
test
push
cmp
popf
sbbb
sub
imulb
sahf
xor
and
dec
push
cmp
and
mov
cmp
mov
and
mov
icebp
js
push
lods
lret
in
dec
push
jg
inc
lock
scas
mov
faddl
or
add
clc
movsb
out
scas
add
mov
aam
sahf
lds
out
inc
sti
jae
cld
imul
addr16
mov
mov
arpl
jge
push
jo
repz
or
add
dec
subl
popf
inc
repnz
ljmp
daa
push
sbb
sti
out
sbb
push
jne
outsb
shr
ja
nop
fstps
insl
cmpsl
clc
scas
dec
mov
sub
mov
mov
and
pushf
xchg
sub
out
pop
or
push
sub
sbb
push
loopne
adc
push
and
insb
mov
arpl
mov
add
or
push
pop
or
push
mov
adcb
push
sbb
lret
add
adc
cmpsb
mov
mov
add
inc
jb
push
in
jmp
inc
fcmovne
nop
dec
cmp
ljmp
cmp
ss
jns
clc
incl
nop
adc
inc
enter
mov
mov
iret
sbb
dec
in
subb
mov
inc
fldl
scas
cmpsl
xchg
popf
xchg
sbb
cmp
sarl
cmp
add
insl
repz
or
dec
insl
or
sahf
xchg
jo
xchg
push
add
push
shll
inc
testl
into
mov
cmpsb
popa
cmp
push
cwtl
push
loop
lahf
adc
adc
stos
enter
jl
and
ret
mov
je
inc
and
xchg
bound
jnp
mov
push
cmpsl
dec
repz
pusha
cmpsb
in
dec
addr16
cmp
ficomps
fsts
mov
divb
xchg
ficompl
inc
sbb
sbb
mov
pop
fists
lret
jmp
adc
xchg
pop
outsl
repnz
roll
mov
loope
xor
rclb
stc
inc
mov
lock
test
rcrb
outsb
aaa
pop
xor
push
cmp
sbbb
sbb
and
addb
insb
in
repz
pushf
dec
fmull
loop
stc
or
test
out
daa
mov
jecxz
repnz
leave
dec
add
sahf
push
scas
xchg
and
adcb
imul
sbb
test
imul
rorl
movsl
xchg
stc
adc
adc
test
test
add
mov
push
movsb
popf
xor
testl
pop
out
jnp
pcmpeqd
aaa
adc
in
lods
push
mov
in
mov
jecxz
rcrb
hlt
mov
pop
jb
in
roll
xchg
inc
ss
jl
testl
xlat
shl
test
ljmp
and
xor
test
in
xor
hlt
in
mov
sub
and
cmpsb
sbb
movb
and
or
fnstsw
fnsave
mov
add
cmp
rorl
in
xchg
fistpll
ljmp
sbb
push
sbb
xor
in
mov
or
sub
les
or
movsl
pop
jl
cli
adc
jmp
in
mov
dec
aas
aaa
mov
call
xchg
outsb
fsubs
cmp
cmc
in
adc
leave
les
andb
and
aad
push
xlat
jne
add
xchg
invd
incb
mov
cli
adc
mov
jle
jne
out
pop
sub
mov
sub
stc
jo
enter
adc
mov
les
lods
sbb
bound
xchg
insl
or
sub
into
jmp
in
mov
shrb
jmp
xlat
sbb
pop
pop
cmpsb
pop
pop
pop
dec
in
jge
and
in
sbb
out
arpl
jp
scas
jnp
xor
cmpsb
testl
push
scas
es
sbb
sub
sub
js
lret
daa
fwait
jle
jge
idiv
mul
rcrb
sbb
inc
xchg
or
fs
cmc
mov
lds
add
cld
scas
aas
dec
pop
pusha
addb
orl
xor
adc
mov
or
jl
or
push
sub
gs
rcrl
stos
js
push
add
lret
dec
jmp
add
movsl
outsb
pushf
bound
int3
xchg
and
mov
jo
loop
xor
sahf
pop
mov
add
push
stos
xor
push
mov
lods
cli
sub
sbb
aam
sbb
lcall
in
mov
xchg
jecxz
sub
into
popf
xchg
and
dec
das
or
push
mov
push
jp
ret
pop
mov
insl
adc
int3
rcrl
in
xor
cmp
fsincos
mov
mov
jecxz
add
nop
and
adc
fsts
mov
xor
imul
test
stos
gs
or
and
mov
mov
rorl
pop
push
xchg
stc
cmpsb
jecxz
mov
add
icebp
movsb
mov
cli
jbe
dec
xchg
xchg
push
repnz
daa
fstps
xlat
mov
pop
dec
inc
mov
adc
inc
jnp
mov
loop
add
aad
aaa
out
add
cmpsl
cs
lds
out
mov
std
push
mov
inc
pop
stc
pushf
ss
loope
imul
repnz
aaa
test
dec
cld
mov
push
mov
andb
xchg
test
pusha
adc
arpl
lods
add
out
xchg
rorb
push
outsl
cmpsb
pop
iret
cmp
xchg
test
shrl
pop
push
pop
sub
loope
push
out
jmp
pop
dec
mov
and
push
sub
repnz
pop
gs
jne
mov
inc
sub
mov
div
or
mov
fdivrl
add
xor
xor
outsl
inc
add
mov
frstor
jp
jno
dec
add
pop
add
xor
lahf
int
stos
cli
fisttpl
sub
xor
sub
mov
lret
stos
repnz
mov
dec
or
or
cmp
inc
xchg
mov
cmp
cmp
arpl
rcrb
jmp
aad
xchg
fadd
inc
test
sarb
testl
add
div
arpl
cmpl
and
xor
adc
lcall
ret
push
cmp
in
test
mov
dec
int
or
out
pop
push
mov
popa
mov
rcll
pop
scas
sahf
sub
scas
imul
lea
xor
fnstsw
jg
sbb
add
lcall
lock
cmpsb
in
in
ret
or
cmc
cli
cmp
loop
adcb
fsubl
mov
add
es
addr16
inc
xchg
movl
int3
mov
lea
cmp
push
xor
sub
push
add
mov
xor
nop
jnp
nop
scas
mov
out
mov
add
js
loopne
adc
cli
adc
cwtl
daa
xchg
jbe
inc
daa
xchg
cmp
xchg
fmuls
push
in
xor
sbb
pop
xor
mov
xchg
cmp
jmp
sbb
xchg
outsb
adc
jle
lcall
addb
lcall
sbb
cmpsb
or
stos
sbb
jle
jae
fnstenv
mov
xchg
add
cmp
push
loopne
add
ss
mov
loop
mov
popf
repz
sbb
movb
insl
ja
cmp
sbb
dec
imul
mov
jb
sub
or
push
movsb
std
mov
cs
add
lret
dec
es
jg
roll
jne
lock
les
int
icebp
repz
js
and
ds
jp
outsl
out
je
and
outsb
popa
xchg
push
int
xor
push
push
jmp
shlb
scas
sub
and
fnsave
das
pop
sbb
push
xor
pop
push
or
lret
jp
stos
mov
aam
jecxz
adc
subb
cmp
or
xchg
mov
ret
mov
enter
test
inc
iret
or
or
nop
xchg
mov
pop
jp
fnstsw
mov
pop
jmp
adc
cmc
mov
cmc
push
inc
cmp
paddusw
dec
mov
ljmp
shll
mov
aad
into
lods
adc
nop
xor
rolb
int3
pop
faddp
add
mov
cmp
fsub
lds
push
mov
xchg
test
push
dec
lods
rcll
mov
or
push
xor
pusha
pop
mov
in
mov
shrb
scas
pop
jmp
fisubs
pop
into
add
in
add
int
lret
divl
xchg
pop
pusha
repnz
xchg
and
mov
sahf
fidivs
push
aam
xlat
fwait
mov
mov
cmp
popw
lret
dec
dec
mov
fdivr
mov
enter
sub
sahf
sbb
and
jg
jge
mov
pop
pop
aam
imul
js
enter
andl
fadds
out
adc
call
and
out
xchg
das
out
daa
xor
in
xchg
adc
mov
mov
xor
test
outsb
andb
cmc
enter
or
pop
xor
jnp
xor
inc
add
jnp,pn
xorl
jae
cld
leave
andb
orb
jnp
cmpsb
cmc
pop
jo
or
jecxz
sbb
test
push
ja
loop
dec
movsb
xor
sti
adc
sbb
scas
and
xchg
sub
popf
mov
sub
addl
sahf
sbb
in
inc
mov
cmpb
mov
push
mov
jnp
movsb
or
xchg
or
out
mov
push
cmp
mov
or
pop
arpl
mov
cmp
pop
pop
test
cltd
out
dec
xor
popf
pop
inc
cli
das
or
and
repnz
mov
cltd
or
les
test
sbb
shr
dec
iret
lcall
daa
in
addr16
shl
sbb
lock
push
movsl
lock
jp
sbb
fsubl
xchg
push
mov
pushf
jle
adc
stos
xchg
xchg
adc
pusha
out
test
ds
inc
and
adc
inc
sub
pop
mov
sarb
cmp
lahf
mov
data16
aad
scas
adc
dec
cmc
movl
lret
mov
lds
repz
stos
mov
pop
das
insl
inc
xchg
add
leave
jecxz
inc
fucomi
hlt
sub
es
push
push
or
or
and
std
ja
fldenv
test
and
jecxz
mov
popa
pop
inc
push
jecxz
jp
popf
icebp
popf
aam
rcrl
leave
or
push
mov
test
dec
sahf
lea
mov
test
es
out
push
gs
insl
mov
xchg
inc
jno
pop
lea
pusha
ds
jmp
flds
pushf
push
fdiv
pop
pop
test
pusha
xor
push
testl
shll
insl
xchg
fadds
repz
add
das
jmp
xor
mov
mov
lret
and
mov
mov
arpl
subl
or
push
ret
lcall
pop
lret
repz
sbb
xor
add
or
pop
xor
cli
daa
push
movsb
and
cld
add
mov
mov
stos
int3
mov
stos
dec
jg
insb
aas
in
stos
outsb
outsb
xor
mov
push
scas
cli
lock
shlb
fldenv
stc
sub
popa
lret
mov
mov
dec
jmp
movsb
sub
pop
imul
in
out
push
jle
loope
bound
lock
inc
pop
aas
mov
loope
add
arpl
lods
aad
cmpsl
sub
das
add
es
jmp
cmpsb
adc
ds
mov
and
sbb
add
push
loop
xor
dec
dec
xor
cmpsl
push
cmp
push
js
ret
mov
or
xor
adc
pop
das
ret
sbb
push
pop
mov
adc
aam
outsl
xchg
and
test
sub
xchg
push
rcrb
popa
pop
push
scas
movsb
mov
add
icebp
mov
dec
jmp
nop
insb
fstl
insb
inc
dec
mov
adc
push
in
test
push
aaa
cli
dec
loop
test
fldlg2
cs
clc
jae
adc
cltd
and
xlat
jb
fidivs
sbb
push
dec
clc
cmp
jle
pop
lds
mov
add
or
icebp
adcl
push
lahf
dec
das
ds
cs
ret
mov
call
sar
sbb
and
fiadds
inc
es
cltd
adc
mov
jnp
repz
xor
repz
pop
pop
aam
jbe
daa
mov
mov
pop
cmp
dec
add
jmp
add
insb
movl
pop
xor
hlt
xchg
dec
testl
sbb
cmp
lret
jmp
push
testl
xchg
stos
inc
decb
cs
push
lds
test
pop
push
mov
addl
fwait
sar
cs
mov
add
sbb
mov
cmp
or
pop
jg
int3
lcall
in
pop
lahf
lcall
push
xor
pop
fnstcw
mov
lcall
jle
sbb
pusha
push
lahf
push
sub
adc
inc
or
in
jg
cmpsl
lea
in
push
rorl
pop
fildl
xchg
mov
mov
or
cltd
mov
test
and
nop
rcll
or
popf
push
call
or
xor
mov
clc
out
andb
jo
mov
xchg
cmc
mov
ret
push
pusha
cli
int
clc
jmp
imul
adcb
sub
pop
out
mov
mov
or
cmp
insb
push
test
xor
add
repz
fs
inc
fstl
jo
sar
inc
mov
orb
add
jl
daa
mov
push
ljmp
sub
xchg
aaa
sub
add
test
in
mov
pop
in
rcrl
int3
push
clc
lret
loopne
rcr
inc
lock
jno
jmp
aas
adc
jbe
xor
jp
andl
cmp
in
int3
or
ret
or
adc
pop
xchg
movsb
insl
push
iret
sbb
repnz
pop
xor
jge
imul
mov
or
cltd
jle
adc
pop
xchg
lcall
je
les
dec
fdivrl
bound
dec
out
jl
arpl
and
fwait
imul
inc
xchg
stc
mov
fists
aad
add
in
aaa
shlb
ret
inc
sti
es
cmp
in
shl
repnz
pop
inc
aam
outsb
imul
data16
pop
rolb
aam
push
cmc
add
cmp
out
dec
mov
dec
shrb
pop
es
dec
leave
jne
sahf
in
xor
mov
enter
or
sti
addr16
ss
jmp
ja
iret
adcl
adc
mov
lahf
dec
xchg
cs
test
and
jno
lds
inc
sti
out
inc
lret
mov
pop
fstpl
test
adc
lock
pop
test
cmp
in
fucomp
jg
add
leave
cmp
imul
cli
and
cmc
es
mov
mov
xchg
push
cmc
lcall
js
sarl
into
jns
pop
ret
aas
push
sbb
adcl
add
shll
mov
decl
dec
orb
sub
or
cltd
pop
in
fucomip
push
mulb
push
cmpb
inc
or
mov
add
pushl
xchg
clc
mov
rcl
cwtl
les
mov
jp
add
xchg
adc
and
lcall
lret
dec
dec
lock
cltd
or
jp
xor
jbe
jo
test
xchg
lods
jbe
inc
hlt
imul
push
pop
lods
adc
ss
jo
xor
and
mov
addb
sub
sbb
addr16
lcall
repz
fists
movsl
outsb
mov
jbe
pop
xor
xchg
mov
inc
adc
jge
insl
scas
into
sbb
clc
xchg
addb
popa
inc
jns
inc
andb
dec
pop
aaa
jnp
fwait
jae
cmp
mov
dec
je
js
add
dec
adc
mov
jns
rolb
xchg
pop
mov
dec
test
or
cmp
mov
ljmp
dec
mov
stos
or
lods
sub
push
jno
pusha
cmp
jne
cmp
adc
out
cmp
imul
jo
pop
nop
jae
inc
mov
jp
fdivp
dec
dec
dec
punpckhwd
mov
jmp
xor
loope
mov
mov
jae
xchg
fsubrs
dec
fiadds
aaa
sbb
cmp
dec
lds
add
push
ds
jg
xlat
jle
repnz
arpl
sub
cmpsl
and
sub
xchg
mov
xchg
repnz
cmp
enter
or
into
jle
pop
push
or
bound
adc
cmpsb
mov
ja
xchg
cmp
xchg
dec
int3
sbbl
jl
push
push
ret
push
push
xlat
cmc
notl
push
subl
inc
add
gs
outsb
mov
xlat
cli
pusha
push
mov
sbb
xchg
sarb
or
roll
into
or
xchg
sub
movsb
fiadds
out
shll
scas
cmp
je
es
lret
pop
fisubl
push
pop
push
popf
sbb
jmp
sbb
imul
ljmp
push
sbb
andb
ss
sbb
jnp
lret
add
fsubp
popf
lcall
inc
push
mov
jnp
call
repz
xchg
xchg
jge
and
cli
in
adc
and
lret
pop
inc
jmp
jb
leave
pop
mov
call
add
in
lahf
or
std
sbb
pop
pusha
andl
mov
sbb
bound
aaa
or
xchg
pop
xchg
inc
cmp
gs
xor
nop
xlat
mov
ret
int3
and
mov
ficompl
xlat
inc
enter
or
add
jg
cld
mov
rcr
xchg
push
std
and
inc
cli
movsb
test
jmp
and
xor
dec
sbb
xchg
push
insb
mov
and
je
outsb
aas
insl
fwait
movsb
cmp
mov
iret
mov
mov
mov
cmp
cmp
lods
jbe
add
add
test
aam
jo
mov
mov
dec
add
lcall
sbb
adc
push
scas
fidivrs
cmp
mov
mov
roll
mov
insl
mov
loop
aas
daa
test
pop
gs
xor
sbb
pop
test
xlat
dec
xchg
fidivl
or
loope
mov
jmp
and
mov
sbb
pop
xorb
xchg
fwait
jecxz
sub
mov
fwait
mov
in
sub
push
or
ret
xor
movsb
in
cmpsl
in
push
fisubl
jg
sbb
nop
fwait
sti
test
ror
mov
hlt
add
nop
es
sbb
fwait
stos
or
shll
scas
leave
mov
test
nop
aam
ja
adc
subb
cmp
int
jnp
rcl
mov
imul
leave
leave
std
lea
jge
aad
add
mov
push
sub
idivb
pushl
cmp
rep
iret
sub
dec
mov
insl
ret
mov
loop
repnz
loope
cmp
test
mov
cmpsl
jo
insb
test
and
mov
dec
pop
mov
fiaddl
push
jno
lahf
inc
fwait
out
pushf
xor
notb
dec
xor
cmp
mov
adc
jnp
push
dec
pop
push
cmpsl
lea
mov
ret
pop
pop
test
aad
jne
or
call
lret
lock
loopne
flds
xor
mov
add
pop
cmp
jp
and
subb
jno
pop
dec
or
es
xor
bound
addr16
jp
mov
test
jne
push
bound
fiaddl
xor
popf
push
xor
and
cld
sarb
push
inc
sub
lods
icebp
insb
push
pop
cmpsl
xlat
roll
pop
out
jb
test
repz
ret
lods
adc
mov
inc
xchg
aas
jns
mov
push
lock
test
add
mov
jae
out
lret
fisubl
mov
jl
xchg
jmp
jbe
popa
inc
mov
cmp
out
sub
sub
bnd
dec
shrl
inc
ja
and
lret
stc
mov
in
call
or
insb
rol
or
lods
pop
mov
in
mov
push
pop
xchg
xchg
add
test
int3
filds
in
pusha
icebp
mov
or
add
and
mov
in
or
or
push
mov
xor
clc
adc
jns
jns
ret
aas
sbb
scas
in
test
xor
sahf
pop
cwtl
push
out
loop
fistl
pop
and
enter
stos
push
jno
sti
adc
or
inc
test
test
aad
and
sub
icebp
mov
push
add
fwait
outsb
jo
add
fcompl
jns
jl
fldcw
cmpsl
or
fs
pop
mov
jae
mov
sbb
inc
in
xor
and
push
jbe
sbb
punpckhdq
sub
dec
jne
hlt
push
fnstsw
inc
fisttpl
xor
fsub
jg
push
ror
mov
dec
lret
stos
jmp
pop
and
lods
jg
push
repnz
xor
scas
push
pop
cs
pusha
loope
cli
mov
and
and
movsb
xchg
es
and
or
fdivrl
pop
pushf
push
pop
pop
dec
imul
pop
push
mov
cmp
sub
scas
int
test
push
sub
adc
mov
inc
push
iret
add
lahf
mov
xor
xchg
sti
or
add
inc
insb
gs
add
ja
or
sbb
cmp
mov
adc
add
lods
pop
jmp
les
repnz
inc
shlb
inc
sub
xor
in
sub
pop
and
fcomp
das
gs
sub
adc
add
and
nop
jno
add
leave
mov
shll
mov
pushw
push
popa
xor
and
mov
or
imul
adc
jle
push
xchg
mov
push
popf
aam
mov
test
imul
popa
testl
mov
mov
popf
cmp
adc
push
sbb
push
je
push
fcomi
test
fwait
inc
push
fadds
out
test
mov
xchg
fdivrs
into
rcrb
mov
outsl
xor
insl
mov
pop
stos
pop
or
pop
sub
fwait
dec
cmp
inc
popf
lock
pop
xchg
subb
mov
xchg
stos
xor
sbb
fstpl
inc
pop
pushf
mov
bnd
sbb
loop
mov
rcrl
popl
mov
mov
and
pop
nop
jg
cs
cmp
ret
push
jl
xchg
jmp
cwtl
sbb
mov
movsb
loop
scas
add
mov
inc
test
bound
sbb
mov
call
incl
dec
pop
call
mov
pusha
cmp
push
jbe
pushf
rclb
std
mov
inc
add
sub
lcall
test
mov
arpl
adc
sub
pop
lahf
int
pop
sahf
jae
nop
es
in
hlt
out
sub
js
into
testl
std
pushf
pop
repnz
adc
dec
test
inc
fsubs
pop
in
sub
add
mov
cmp
testb
out
bswap
pop
rcll
aaa
mov
and
in
jp
xor
mov
cmp
jb
into
mov
loopne
or
in
cs
sub
iret
negb
xlat
and
dec
and
sbb
mov
cs
mov
cmp
or
lock
mov
mov
lcall
loope
std
std
dec
cmp
ljmp
mov
orl
popf
xchg
jae
inc
mov
aam
adc
dec
outsl
and
insb
and
xchg
xchg
add
iret
xlat
push
out
addr16
mov
pop
shrb
mov
push
das
daa
rcl
inc
movsb
and
jo
push
out
add
loop
into
jno
popl
cwtl
ret
mov
imul
test
inc
mov
lods
orb
jo
enter
lds
xchg
imul
aad
addr16
test
bound
lea
pop
sti
mov
movsl
dec
mov
into
jns
add
aad
popf
aam
cltd
jl
lret
jg
dec
enter
adc
adc
loop
push
test
test
dec
add
jne
lcall
arpl
push
es
adc
pop
adc
sub
sbb
jnp
ret
jl
dec
std
out
jb
test
orl
in
jns
mov
ds
mov
push
es
dec
mov
xor
pushf
hlt
cltd
cmp
or
clc
adc
pop
xor
xchg
test
aas
and
inc
mov
popf
mov
dec
mov
cltd
hlt
addr16
jo
movsb
aaa
ljmp
mov
cs
mov
je
xchg
leave
mov
scas
icebp
idivb
rolb
gs
xor
or
in
adc
adc
push
lods
std
dec
mov
sbb
sbb
pop
daa
movsb
call
push
shr
push
testl
movsb
and
stos
jmp
fwait
cltd
popa
frstor
mov
adc
icebp
and
scas
dec
rcl
add
pusha
stos
movsb
push
mov
inc
sbb
inc
xor
jno
mov
jle
cmp
scas
jg
xlat
enter
shrl
cmp
jno
mov
stos
enter
mov
lret
shlb
sbb
pop
arpl
outsl
in
mov
mov
sub
adc
pop
je
inc
and
loop
mov
mov
sbb
repnz
sub
xchg
mov
sub
popa
imul
bts
push
push
insb
xor
in
sbb
jecxz
cs
sub
sbbl
xor
dec
jno
cwtl
nop
adc
push
dec
lcall
xchg
shlb
pop
push
mov
sub
ret
in
cld
push
xor
and
xchg
bound
adc
int3
cld
mov
mov
out
fists
pushf
popa
leave
fmul
mov
daa
ss
or
data16
sub
js
add
movsb
mov
shll
lods
dec
sub
cli
scas
aaa
sub
out
lock
push
addb
ljmp
pushf
mov
or
movups
jecxz,pt
bound
or
dec
cs
subb
js
pop
xor
sub
xlat
repnz
popa
ds
push
cmpsb
xchg
js
xchg
cmp
std
pop
xchg
ds
loope
out
je
xchg
and
mov
xchg
xchg
ja
movsb
cmp
add
shrb
repnz
fidivs
das
mov
lret
int3
js
or
fstpl
jns
jno
dec
fisubrs
pop
sbb
sbb
scas
and
insb
dec
std
mov
xor
shr
bnd
in
mov
sahf
pop
out
xchg
sub
lcall
arpl
xlat
movsb
and
or
inc
add
outsb
mov
fadds
or
inc
dec
jg
enter
test
mov
sarb
inc
jecxz
push
in
ljmp
xchg
aad
push
out
ja
mov
dec
sbb
pusha
filds
ljmp
xchg
mov
pop
xchg
xchg
pop
adc
pop
pop
xor
in
sub
dec
jb
dec
fcoml
sub
jno
pop
mov
push
ret
mov
inc
lock
cli
sub
jmp
in
mov
test
jbe
sub
sbb
jl
adc
jmp
rclb
inc
pop
jl
jne
xchg
cltd
out
test
movsl
or
inc
fnstenv
adc
mov
call
and
inc
pop
mov
xchg
inc
les
ljmp
sbb
mov
clc
iret
inc
cmpsb
lcall
cs
loope
loopne
or
or
adc
aam
rcrb
hlt
notb
inc
iret
shl
cld
mov
fistps
push
push
fcmovne
shr
lock
push
mov
ss
mov
xor
mov
mov
call
push
inc
clc
xor
and
xchg
bound
mov
lock
inc
sarb
lret
mov
stos
testb
push
dec
movsb
movsb
xor
lahf
in
fdivrl
push
mov
popa
fadds
ja
stos
mov
bt
ret
rolb
dec
adc
fldt
arpl
jge
ljmp
pop
les
cmp
fistl
shrb
xchg
cld
or
jno
mov
and
jno
fisubrs
pushf
dec
mov
or
cmp
pop
std
out
jne
xor
mov
mov
or
pop
cwtl
jns
pop
rcl
lcall
adc
imul
mov
xor
or
frstor
cltd
idivl
push
mov
lea
xchg
jl
push
inc
adc
test
nop
out
es
orb
xchg
or
inc
and
enter
fistpl
pop
adc
sbb
std
shll
sar
dec
pushl
xchg
sub
xor
adc
sbb
int
outsl
mov
mov
mov
gs
cld
enter
sbb
xchg
jle
xor
fs
rcll
cmp
movsb
sub
int3
inc
dec
sub
inc
in
jns
iret
push
roll
inc
jns
loopne
jb
xor
pop
out
into
dec
push
adc
sub
nop
rcll
dec
mov
cmp
pop
inc
sbb
rcrl
jmp
std
mov
mov
xchg
fisubl
xchg
push
ficomps
adc
inc
mov
cltd
mov
sbb
jl
into
idivl
mov
iret
sbb
in
pop
add
mov
cmc
mov
cmp
xor
push
sub
rcrb
cmp
bound
sarb
and
aas
lret
dec
out
cmpl
sub
sarb
es
jo
add
loopne
sbb
fidivs
lcall
jmp
and
inc
add
out
mov
mov
jp
outsb
movsl
jo
mov
adc
int
sarl
sbb
loope
rcll
or
mov
mov
xchg
jns
pop
fdivp
cmp
adc
ja
mov
subb
test
sbb
negb
and
insl
jp
jno
aas
hlt
mov
ret
fnstenv
pop
mov
addl
xlat
bnd
pop
and
jo
bnd
add
mov
xor
adc
fs
lahf
inc
mov
mov
hlt
xor
mov
testb
push
shlb
push
jecxz
dec
scas
ret
jbe
sub
popa
mov
lock
test
sahf
mov
pop
call
inc
adc
cmp
icebp
in
stos
loopne
inc
push
in
aad
dec
jae
push
in
out
popa
test
pop
pop
jg
stos
aaa
xor
les
ret
cmp
dec
xor
xlat
sub
notb
jle
jne
xor
xor
arpl
cmp
sbb
mov
jbe
test
cmp
xor
ds
out
push
andb
or
test
jmp
mov
push
mov
pop
mov
pop
mov
js
test
mov
sbb
and
jnp
clc
adc
mov
addr16
xor
in
adc
mov
aad
sub
ret
pop
nop
ja
cmpsb
fs
nop
mov
arpl
xor
lret
lcall
cld
imul
lods
jbe
pop
je
push
fsts
loopne
xor
mov
shlb
rcrb
or
int
fs
outsl
hlt
mov
mov
fcompl
cmpsl
outsl
mov
xchg
fldt
xchg
in
pop
rol
sub
jo
cltd
jne
and
and
insb
or
ror
mov
je
dec
xor
cmp
call
pop
or
push
ljmp
inc
fdivl
xor
mov
lcall
and
push
sbb
xor
and
xchg
es
and
and
adc
fisubrs
dec
xchg
jo
jl
test
jno
jle
mov
shll
sub
and
or
outsl
jp
inc
jo
lds
rolb
idivl
mov
xlat
lea
loope
fstl
jmp
mov
xchg
and
jnp
test
in
push
std
clc
mov
sarl
jmp
fcmovbe
and
lea
jg
jg
out
imul
fisubl
xor
push
push
lret
pop
lret
call
and
mov
push
sbb
sarb
sti
rcrb
xchg
ret
cmp
rcrb
daa
rcr
inc
lcall
mov
cmp
jp
push
clc
rclb
sub
push
iret
rorl
daa
stc
call
sub
in
mov
fsubr
ret
hlt
mov
in
loope
xor
test
xchg
jnp
loop
clc
int
jb
enter
cltd
xlat
jo
inc
pop
jbe
pop
mov
mov
fcomps
adc
dec
jns
mov
inc
push
mov
xchg
or
in
idivb
or
fnstenv
mov
sub
mov
cmp
popf
pop
fnstcw
jmp
pop
mov
movsb
outsb
shrb
sbb
cmp
hlt
jno
int
or
xor
dec
xchg
scas
add
lcall
mov
mov
addr16
mov
cmpsb
inc
inc
jecxz
in
fcompl
adc
push
jno
int3
mov
jp
xchg
loopne
jecxz
clc
and
inc
subl
int3
int3
dec
std
and
pusha
sbb
mov
pop
repnz
scas
fsubl
je
add
or
push
xchg
lods
cmpsb
shll
add
lcall
or
sbb
xor
movsl
lds
push
ret
sub
xor
inc
dec
sbb
or
mov
popa
and
nop
xlat
inc
sbb
aas
pushf
sub
cmp
push
add
dec
mov
in
cmp
or
cli
cmp
jmp
jb
rolb
jns
push
rcll
dec
sub
das
js
pop
jmp
test
xchg
outsb
out
fnstcw
add
push
pusha
loope,pn
inc
int
sub
cmp
inc
lcall
sbb
cmp
in
lods
rolb
adc
insb
add
out
pop
lret
or
fdivp
cmpsl
repnz
popf
out
mov
sbb
ds
xchg
and
lods
sahf
lret
xor
jb
pop
clc
scas
adc
xor
pusha
in
jne
jb
notl
or
ljmp
xor
pop
fldt
cli
mov
rcrl
sti
js
shl
jmp
push
cmp
adc
mov
loop
jns
pushf
out
xchg
push
scas
mov
xor
cmp
imul
xlat
insb
mov
test
dec
shll
icebp
mov
scas
mov
mov
or
data16
jbe
fidivl
roll
lea
shll
mov
sbb
and
mov
or
mov
mov
adc
and
push
sarl
mov
mov
cmp
jns
ss
aas
hlt
adc
hlt
inc
fwait
insl
repz
test
shlb
les
push
push
add
push
sub
ljmp
fisttps
xchg
in
push
inc
push
sbb
fadds
xchg
add
fwait
add
push
pop
pop
pop
loopne
enter
jecxz
mov
sbb
subl
push
jne
and
xor
jne
mov
jbe
call
jae
test
jge
mov
out
movsb
cli
mov
xor
sbb
or
outsb
std
in
out
push
arpl
imull
popa
aad
cmp
jbe
repz
das
xchg
and
pop
outsb
pop
es
mov
sub
jg
sbb
xor
mov
jbe
pop
lret
test
push
rcrb
cmpsl
int
pusha
and
shll
sahf
aam
divl
inc
mov
pop
or
scas
push
or
adc
xchg
clc
sbb
iret
mov
push
mov
and
call
push
ds
hlt
fs
jnp
inc
lcall
fldcw
push
test
in
dec
push
mov
mov
rolb
mov
dec
gs
mov
cmp
cld
cmpsb
jnp
shl
jno,pt
ret
jl,pt
pop
jge
cmp
movsb
push
hlt
or
or
shrb
hlt
test
xchg
inc
stc
ret
and
scas
pop
ss
cmpsb
cmp
or
push
nop
dec
int
fxch
mov
xchg
adc
xor
dec
lcall
mov
call
mov
inc
or
scas
mov
lret
dec
in
push
cli
pusha
and
nop
fcomps
int3
into
sti
push
mov
mov
into
mov
arpl
arpl
stc
push
sub
pop
and
popa
adc
mov
mov
loopne
addl
mov
stos
frstor
adc
mov
xor
movsl
or
pop
pushf
test
xchg
lret
mov
jno
add
idivl
jg
outsl
pop
mov
mov
pop
mov
xor
xchg
xchg
cmc
cld
ret
sahf
fwait
or
call
push
jmp
mov
xchg
call
scas
arpl
sub
pop
lods
adc
mov
push
mov
inc
add
pop
sbb
fcoml
out
inc
dec
in
popa
je
cmpb
int
movsl
mov
mov
insb
pop
or
test
lea
push
pop
inc
push
fstl
mov
insb
xor
rcrl
daa
loop
mov
mov
out
pop
sbb
xchg
cmp
cld
mov
ss
fidivs
mov
sub
test
fildll
shlb
iret
and
je
imulb
push
test
push
enter
divl
outsl
or
out
test
or
push
sbb
arpl
dec
popf
dec
mov
jmp
lock
pop
test
imull
neg
push
bound
inc
out
roll
scas
frstor
or
jle
outsb
inc
xchg
fsubrs
aam
fs
mov
lahf
std
incb
inc
jnp
test
inc
psubb
jno
int3
shrb
das
push
sbb
or
mov
adc
leave
cltd
cmp
cmp
mov
dec
das
loop
insb
push
outsb
cli
fstpl
dec
xchg
data16
out
icebp
in
dec
pop
jno
sbb
sub
loope
mov
adc
mov
cmpl
sbb
int3
jp
ss
jnp
sbbb
repz
dec
or
stos
xchg
mov
push
pop
jb
xchg
mov
add
test
out
subb
add
aas
test
arpl
add
or
xor
ljmp
repnz
addr16
loope
jl
stc
adc
mov
fisubl
sarl
fs
movsb
add
leave
push
sarl
mov
int
cmp
fdivrs
test
add
add
insl
sub
push
test
adc
xlat
push
xchg
idivl
insl
loopne
lahf
dec
sub
xor
sahf
cli
aam
outsl
pop
and
mov
push
subb
rep
adc
aam
pop
clc
jnp
jp
lcall
js
add
bound
les
dec
mov
fnstsw
jb
inc
mov
test
sub
fdivrl
adc
shll
in
imul
test
lret
or
jae
in
sbb
out
das
pop
adc
jae
movsb
sbb
and
push
lds
pushf
mull
in
xor
push
dec
ljmp
mov
jmp
pop
mov
add
lret
mov
mov
mov
sub
push
repz
and
lods
lcall
xor
ds
inc
dec
xlat
es
mov
ja
sub
dec
sbb
push
iret
lods
lret
lcall
dec
inc
push
lcall
xchg
push
scas
insl
in
lea
or
mov
xlat
lcall
lods
xlat
inc
push
inc
fisubl
pop
push
inc
outsl
jbe
movsb
insl
cmp
lahf
daa
test
cmp
cmpsb
lret
into
xor
faddl
icebp
xchg
mov
jbe
jecxz
div
mov
mov
inc
fwait
sub
push
adc
sbb
mov
dec
fisubl
inc
mov
xlat
rolb
repnz
inc
mov
mov
test
outsl
sbb
jg
push
jp
or
lods
repnz
xor
rcll
and
jp
adc
and
cmp
int
lea
inc
enter
mov
cli
aas
sub
inc
je
adc
or
pop
and
in
dec
test
adc
mov
pop
dec
dec
sbb
mov
mov
loop
std
xrelease
call
jb
inc
pop
jb
dec
push
mov
xchg
std
fidivrs
fcompp
and
int3
xchg
dec
call
xchg
out
mov
dec
gs
sub
sbb
decl
inc
pop
mov
push
int
jle
cmp
jmp
out
je
jle
rcrl
cmp
movsb
xchg
dec
repz
sti
dec
rcrb
in
adc
idivb
adc
ljmp
mov
test
addb
sbb
cmp
aad
in
scas
call
push
xchg
push
sub
mov
sbb
cli
cmc
adc
fs
or
pushf
pusha
mov
push
xchg
shr
imul
pop
imul
mov
sbb
pop
xchg
sbb
repnz
popf
adcb
or
and
cmpsb
xchg
lret
mov
inc
jns
or
test
mov
mov
adc
add
push
mov
dec
ret
dec
gs
data16
mov
pop
xchg
aas
lret
out
rorb
cmpsb
jmp
stos
testb
mov
adc
loopne
push
jmp
out
out
sarl
test
fucom
lret
adc
nop
push
cmp
lock
mov
push
jne
xchg
sbb
lods
jmp
aas
mov
xchg
push
inc
mov
inc
jbe
mov
or
xor
push
sub
fdivrl
mov
loop
inc
cli
xchg
cmpsb
jb
stc
xchg
add
sub
cmp
aas
dec
jle
aas
inc
inc
cmp
cmc
cmp
lea
sbb
add
sub
mov
outsb
xchg
push
sub
mov
mov
cmpsb
fimull
lods
or
pop
mov
mov
push
push
cmpsb
mov
mov
std
xlat
sub
mov
jl
mov
mov
call
rcr
push
or
ret
enter
xchg
adc
add
sub
mov
cwtl
pop
aas
mov
bound
popl
pushf
fwait
push
jns
aam
clc
iret
gs
push
push
mov
inc
out
mov
stos
xor
scas
dec
mov
jp
leave
in
in
mov
rclb
and
loop
and
or
or
or
out
roll
jb
mov
or
xor
mov
jg
jbe
dec
cmc
mov
hlt
dec
cmp
mov
jge
pop
xor
add
dec
or
push
cmp
inc
fdivp
pusha
aad
or
xor
pop
ja
das
ljmp
or
xor
and
pop
xor
cld
jns
aas
pop
push
adc
outsb
push
jbe
lods
mov
std
cmove
arpl
push
xchg
adc
and
cmp
lods
push
imul
add
sarb
lods
push
inc
cltd
les
lcall
jp
jae
push
cmc
xor
sbb
push
call
xor
aas
push
mov
outsb
xor
les
je
shll
loopne
cmp
xor
push
shlb
mov
fsubr
xlat
ds
xchg
mov
movsl
pusha
pop
out
stc
mov
xchg
adc
adc
in
in
and
sbb
lods
rcrl
dec
test
pop
fdivl
setno
ds
jnp
out
mov
bound
xchg
sbb
mov
outsb
cmp
jl
gs
fsub
and
push
push
mov
mov
mov
test
sbb
xor
dec
arpl
ret
stos
sbb
gs
fnsave
and
imul
inc
mov
testl
jg
and
cmpsb
enter
and
scas
fs
repnz
push
cltd
jmp
lcall
rorb
mov
sbb
addl
addr16
sbbb
mov
popf
pop
pop
inc
xchg
mov
push
std
out
scas
push
and
das
and
repz
js
and
xchg
sbb
incl
pop
arpl
clc
jg
rolb
sub
jge
sub
push
out
and
inc
sub
scas
add
lret
push
rorl
and
sbb
lods
lea
in
mov
push
xchg
test
mov
pop
paddsb
lea
lea
aaa
mov
lock
fwait
enter
jns
cmc
mov
pop
insl
xchg
lret
cmp
int3
test
dec
daa
cwtl
dec
mov
cmp
pop
sub
out
stos
push
dec
sub
push
dec
inc
das
mov
sbb
std
mov
adc
sub
mov
out
xlat
mov
mov
movsb
push
pop
fidivrl
push
sti
jg
rcrb
jp
imul
xchg
pusha
mov
jle
cmp
push
pop
gs
jp
addb
mov
bound
repz
movsl
mov
mov
lock
inc
cli
in
adc
sbb
mov
sbb
pop
xchg
into
jmp
hlt
sarl
cmpb
aam
mov
popa
gs
xor
xlat
mov
gs
aaa
xchg
mov
sub
mov
pop
mov
int
xchg
lds
test
xor
inc
push
jno
xchg
mov
push
pop
cmpsb
inc
lods
nop
sub
shrl
lds
enter
ss
adc
inc
push
fsts
gs
mov
out
popf
add
mov
jmp
scas
push
cmpsl
test
movsl
test
andl
xor
jg
mov
jo
aam
xchg
rorb
pop
sbb
dec
mov
mov
test
jno
pop
ja
adc
movsb
mov
loopne
xor
in
rcrl
ljmp
add
push
cmpsb
movsl
pop
inc
popf
sub
movsb
cld
mov
sbb
ret
es
mov
jbe
idivl
xchg
mov
pop
sub
test
ljmp
or
arpl
rcrb
sub
mov
div
shl
lock
ret
cmpsb
or
push
mov
mov
je
jl
sar
xchg
pushf
fistl
test
cmp
or
hlt
cmp
aam
call
pushf
push
inc
fstl
sub
jge
jecxz
movsb
adc
mov
cmp
or
mov
cmpsb
into
pop
sahf
stos
dec
loopne
add
and
dec
push
fwait
push
js
xchg
in
or
pop
in
mov
push
rorb
cmp
fldl
icebp
jmp
or
inc
rolb
jle
pop
mov
xchg
or
scas
xchg
inc
mov
push
push
fildll
out
gs
push
int
jnp
leave
aad
jmp
inc
outsb
imul
fs
sbbl
mov
decl
rorl
push
popa
jne
pop
or
add
enter
push
in
pop
pop
xor
pop
aas
xor
cmp
loopew
or
and
loopne
in
mov
ret
push
aaa
push
cmp
aaa
and
int3
mov
mov
jmp
dec
repz
scas
dec
or
push
enter
fldenv
pop
xchg
xchg
lds
jecxz
stos
in
sbb
and
lahf
sub
and
cmp
jge
jo
rcrl
cli
add
test
aas
jle
leave
lcall
push
mov
pop
out
jle
xorl
pop
mov
push
push
mov
test
mov
pop
out
inc
cmp
loop
mov
test
inc
jp
mov
pop
push
push
sub
xchg
fcom
movl
sbb
pop
shll
roll
fmull
insb
inc
insl
mov
addr16
out
push
mov
pop
scas
xor
test
je
mov
jmp
sub
aas
adc
ja
and
jp
cmpsb
mov
aam
sbb
mov
mov
cwtl
sahf
xor
in
jp
or
nop
push
lahf
gs
xor
pusha
loopne
ret
dec
jl
in
ja
inc
out
and
pop
xchg
daa
adc
inc
shr
aaa
jae
gs
fs
jp
inc
jbe
mov
lods
shl
aam
fisubrs
insb
push
movsb
lret
sahf
add
jecxz
fldt
mov
ja
adc
loopne
inc
pop
inc
xchg
add
es
jge
es
add
jl
inc
mov
jae
inc
nop
jl
repnz
stos
cmp
mov
fcompl
inc
fs
cld
sar
aaa
in
out
jle
fdiv
sbb
sub
arpl
push
or
cwtl
aad
loopne
dec
gs
sbb
xlat
mov
test
out
scas
add
jl
mov
xchg
inc
pop
or
das
jle
pushf
std
and
lock
test
call
popf
mov
jg
and
xor
xchg
pop
stos
adcl
scas
aas
push
push
add
sub
cmp
ret
mov
clc
scas
mov
dec
das
das
test
jmp
test
fidivs
loop
and
push
ret
xchg
push
pop
cmp
shlb
daa
cld
sbb
add
imul
xchg
and
mov
in
jecxz
in
jnp
mov
xchg
sbb
sbb
cld
cli
lret
xor
dec
push
add
pop
or
add
fists
mov
lods
mov
xchg
push
mov
inc
mov
cmp
and
jae
pop
sbb
xchg
fnstcw
scas
jl
adc
mov
or
jb
xchg
dec
and
inc
and
mov
adc
cmp
add
subb
add
int
sbb
into
cld
shl
outsl
adc
mov
sub
and
xor
jb
and
sahf
adcb
outsb
mov
ja
int
in
dec
xchg
rcrl
and
xor
push
jne
out
lea
xchg
pop
lea
rcr
icebp
es
inc
sub
das
push
push
xor
jbe
in
cltd
fisttps
sbb
je
xchg
or
cmp
push
xor
pushf
xor
fidivl
idivl
xor
mov
loop
stos
out
fstl
dec
sahf
decb
pop
xor
imul
fildll
inc
inc
out
stos
add
ss
sbb
and
add
adc
dec
mov
dec
movsl
lret
rol
scas
addr16
cmc
dec
je
adc
cmpsl
add
mov
mov
cmpsb
cmp
xor
mov
push
pop
push
mov
dec
cmp
add
jbe
pop
push
xchg
insb
and
add
push
es
cwtl
repnz
sub
pop
inc
cs
adc
xor
std
call
int
add
add
sub
cmp
mov
sahf
sbb
in
cmp
add
mov
xor
mov
cld
sbbl
sub
mov
push
stc
jae
inc
push
lods
adc
mov
jle
insb
lret
pop
or
test
decb
insl
stos
inc
sub
mov
pop
lods
mov
hlt
push
inc
cmp
leave
dec
cmp
mov
jbe
mov
fstl
dec
mov
jge
in
repz
xchg
jns
popa
dec
cwtl
mov
pop
in
jge
in
test
addr16
mov
add
mov
push
aad
jmp
movsb
mov
mov
jle
dec
cli
hlt
inc
mov
mov
inc
aad
and
aaa
fwait
jp
popf
lock
sahf
ret
jae
and
jae
or
adc
push
push
in
imul
mov
sub
or
cmp
shrb
into
incl
pop
shll
pop
add
mov
std
push
xchg
cmp
mov
mov
nop
in
jmp
aam
mulb
inc
jns
ljmp
loope
inc
rolb
stos
sbb
push
fsubl
cmp
xchg
rcll
rorb
movsl
adc
cmpsl
icebp
jo
in
std
pop
xchg
aad
mov
mov
cmp
add
and
std
popl
xorl
scas
fs
fs
js
cld
push
jbe
clc
rcrl
jg
rcl
mov
in
cwtl
push
bound
es
std
daa
cmp
or
lods
push
sbb
sub
xorb
test
sar
jne
fisubrs
jle
imul
dec
jle
and
xchg
insb
shlb
mov
mov
lret
test
cltd
pop
sti
cmp
lods
push
mov
mov
scas
cltd
add
mov
scas
pusha
inc
sub
in
inc
or
cmp
and
jns
adc
mov
lret
mov
fimuls
loopne
xchg
mov
clc
arpl
scas
jno
or
into
fstps
dec
lret
sub
inc
mov
rcll
lret
inc
push
and
ds
jp
js
mov
scas
orl
lcall
stc
dec
stos
movl
ret
mov
cmpsb
push
mov
fnstenv
repnz
xchg
jno
xchg
dec
cmp
popl
call
cld
xchg
push
xchg
insl
xlat
cltd
aaa
ja
mov
add
sub
adc
aaa
data16
decl
xor
movsb
add
shl
jb
lret
testb
lahf
dec
dec
xorb
popa
mov
and
aaa
lahf
adc
dec
pop
push
mov
clc
mov
add
push
cmp
cmpsl
jnp
cmpsl
inc
mov
mov
stos
insl
inc
sahf
loopne
xor
push
fsts
sbb
add
loopne
idiv
nop
jae
pop
rcll
fldenv
outsb
cltd
icebp
or
jmp
xchg
pop
jge
lahf
sbb
loop
sub
xchg
pop
movsl
clc
dec
mov
mov
mov
es
pop
mov
jno
mov
icebp
add
sbb
xchg
push
faddl
pop
cmp
repz
stos
dec
mov
ljmp
mov
xor
sub
jbe
aad
pushf
in
push
flds
mul
addr16
cmp
dec
fcomps
fwait
les
repnz
push
pop
repz
arpl
mov
cmp
loopne
div
mov
jno
popa
enter
jnp
fsubrl
inc
js
lcall
cmc
arpl
xchg
pop
push
pop
cmp
loopne
push
cmpsl
mov
imul
lock
in
into
loopne
std
daa
sbb
mov
mov
mov
dec
add
loope
je
stos
fucomp
lea
fdivrs
call
clc
imul
sbb
cmp
inc
lret
mov
and
aad
dec
pop
mov
xchg
decl
add
sub
fisttpl
pop
add
movsb
out
cmc
insl
adc
xor
dec
pop
aam
jb
dec
inc
mov
js
pushf
sub
push
sub
clc
enter
push
add
shrl
outsl
les
popa
lret
insb
mov
dec
fstpl
or
dec
adc
jmp
call
fidivl
subl
gs
add
add
rclb
pop
pushf
loope
adc
sarl
leave
nop
sbb
inc
dec
xchg
scas
sub
iret
mov
inc
push
ja
xchg
pop
push
xchg
test
nop
imul
mov
push
enter
mov
fcom
mov
sub
push
addl
sub
addr16
std
sbb
aad
testl
xchg
xchg
jne
bound
jb
adc
insl
and
push
mov
ss
pop
or
pop
cs
sub
xchg
pop
push
in
ret
mov
fs
shrb
and
mov
mov
adc
out
clc
inc
add
std
insb
outsl
mov
pop
jno
subb
xchg
int3
pushf
push
pop
loopne
xor
sbb
inc
add
test
imul
dec
mov
aaa
sar
add
mov
cwtl
sar
icebp
dec
cmc
adc
mov
inc
dec
push
test
jg
cltd
jl
in
jo
in
cmp
xor
int
cmp
pop
out
jne
dec
add
xor
sub
shlb
jg
jp
jo
cli
jns
into
std
testl
xchg
test
push
scas
sbb
and
xlat
lods
dec
lds
dec
adc
popa
sub
pop
sti
enter
adc
call
das
sbb
iret
push
shl
popl
insl
popa
popl
cmp
lds
sbb
fildll
push
inc
js
cmp
iret
mov
fs
pop
and
dec
cld
mov
or
mov
mov
push
loopne
loop
xchg
lret
cs
icebp
js
and
ret
lock
mov
mov
pop
out
leave
dec
icebp
icebp
testl
xchg
jno
push
and
pop
inc
mov
es
inc
mov
xchg
sarl
xchg
cmc
jp
aaa
data16
xchg
xor
mov
cmp
aaa
mov
pop
std
cmc
add
sub
arpl
iret
xchg
sbb
int3
mov
mov
stos
cmpsb
sub
mov
sub
adc
lret
gs
dec
mov
push
xor
xor
mov
repnz
mov
pop
hlt
mov
jne
xlat
xchg
addr16
pop
fnsave
mov
movsl
popa
xchg
add
mov
xchg
outsl
fs
jbe
push
sarl
cs
addr16
jns
popf
mov
sbb
or
dec
adc
repz
es
cmp
or
cmp
bound
sar
push
jp
outsl
jmp
prefetcht2
jns
inc
outsl
inc
ds
push
xchg
xor
push
xlat
leave
fmull
insb
jno
mov
in
sub
fbld
dec
ror
daa
mulb
adc
adc
xchg
sub
fwait
cli
pop
mov
add
mov
dec
mov
cmp
ss
push
enter
adcl
mov
stc
outsl
movsb
enter
adc
mov
test
js
sarl
insl
ljmp
popl
pop
addr16
and
test
fsubrl
mov
mov
add
arpl
cmpsb
aaa
inc
or
adc
or
js
mulb
nop
add
xor
xlat
mov
mov
or
pop
aas
cmp
negb
dec
fsubr
cmpsb
sub
gs
xchg
xor
ret
xor
data16
jno
dec
dec
mov
int
jmp
sub
push
leave
push
js
scas
mov
das
movsb
xchg
push
cmpsb
jae
xor
mov
pusha
lcall
mov
out
mov
or
xor
out
arpl
sub
js
in
mov
adc
jns
loope
cmp
adc
cmc
or
cmp
imul
mov
cmp
lea
lret
sbb
dec
xchg
dec
in
ret
lods
ljmp
inc
out
insl
mov
jnp
lds
cltd
pop
roll
dec
cltd
out
aaa
adcl
in
jecxz
jecxz
pop
sbb
pop
cmp
xchg
mov
adc
push
popa
dec
insb
mov
sbb
mov
cmp
outsl
repnz
dec
arpl
inc
xchg
cmp
dec
stos
and
push
push
test
and
xchg
clc
push
cmp
xchg
cltd
in
and
inc
outsb
rorl
popf
enter
ss
inc
iret
inc
mov
aas
jno
outsl
icebp
adc
mov
or
fcoml
pop
xor
cmp
pop
mov
decl
fisttpll
int3
mov
clc
mov
fstl
and
sbb
mov
int
leave
add
push
adc
and
sub
mov
mov
xchg
sbb
and
adc
dec
not
orb
jns
arpl
and
sub
iret
and
adc
shl
xlat
orb
sahf
pop
gs
adc
jno
mov
aam
js
mov
test
add
inc
or
stos
dec
cmpsl
mov
ja
jl
mov
mov
or
xchg
adc
rorb
popf
mov
loop
dec
mov
movzwl
pop
repnz
sub
bound
fucomp
imul
xor
ret
lcall
push
push
xchg
pop
jmp
fnstenv
mov
filds
aam
ret
jg
push
lock
pop
ret
dec
aad
nop
call
adc
test
sarl
xchg
es
xorl
aaa
adc
sub
dec
push
cld
inc
mov
mov
daa
dec
or
ljmp
clc
movsb
mov
imul
pop
adc
mov
sub
and
outsb
mov
mov
inc
pop
pop
loope
out
enter
adc
fimull
fldlg2
in
jl
sbb
adc
fbstp
inc
xchg
inc
nop
rcrb
sub
sahf
test
icebp
jg
adcl
jl
mov
push
stc
push
icebp
jecxz
mov
pop
dec
mov
insl
es
or
popf
shll
loope
ljmp
xor
shll
mov
rcll
xchg
inc
jb
leave
adc
push
jne
adc
jg
lds
push
movsb
or
push
pop
std
loope
loopne
dec
fnsave
mov
enter
ret
jo
sub
push
mov
lahf
pop
cmp
mov
pop
add
push
cli
sub
and
or
sub
adc
scas
fisubrs
or
imul
adc
jb
enter
scas
push
xchg
rorl
inc
je
fprem1
pushf
std
stos
lods
leave
stc
pop
fidivs
and
inc
call
push
addr16
mov
sar
cmp
pop
test
sti
into
into
or
test
ret
jmp
insl
dec
xchg
add
jl
cld
jl
pusha
jle
mov
pop
out
cwtl
lret
add
sub
push
pop
lods
pop
xchg
push
mov
or
pop
dec
sti
sbb
pop
inc
xchg
lock
mov
insl
adc
or
mov
pop
xchg
push
lock
and
movsl
adc
inc
aas
xorb
add
cld
das
sarl
js
push
jg
insb
sub
rcl
push
data16
rcll
imul
xor
imul
mov
pop
loop
sub
sbb
mov
jg
divb
or
push
icebp
sub
stos
aas
lods
in
outsb
mov
por
xchg
aaa
push
pusha
ret
cmpb
fdivs
jne
lahf
loop
or
rol
xchg
pop
shll
inc
movsl
xchg
xchg
mov
jbe
mov
push
mov
scas
or
push
fwait
mov
jmp
pop
lret
addr16
add
pusha
aaa
dec
xacquire
fmuls
imul
gs
icebp
std
mov
mov
stos
lods
push
sub
push
mov
mov
das
mov
int
ja,pt
popf
pop
movsb
jb
mov
lods
mov
mov
les
cld
mov
insl
fadd
cmp
xor
or
out
mov
lret
mov
mov
out
call
lahf
rcrb
add
or
cmovbe
inc
rclb
or
js
rorl
test
push
inc
adc
inc
arpl
out
cs
jmp
lahf
jbe
sub
bound
shrb
xlat
dec
aad
dec
dec
loope
pusha
pop
mov
ljmp
orb
or
fmulp
ds
jl
add
leave
lock
insb
jl
cmpsl
pop
loope
ret
fisttps
jp
loop
popf
ja
lock
xor
and
stos
push
dec
prefetchnta
mov
out
arpl
arpl
in
push
and
sbb
mov
lods
sti
nop
icebp
or
mov
out
iret
mov
mov
xor
mov
icebp
movsl
pop
hlt
xor
insb
data16
std
hlt
fxch
dec
mov
cs
daa
loopne
aam
hlt
popf
xor
mov
lahf
push
psrlq
cld
sarb
xlat
xlat
leave
jl
loop
dec
fmull
pop
mov
aam
and
jecxz
imul
les
push
inc
loop
cmc
movsb
adc
pop
cmp
mov
jp
add
loope
rcr
dec
xchg
push
icebp
xchg
ds
subl
fadds
mov
outsb
jp
cmp
xor
out
mov
cltd
jmp
sub
mov
cmc
pop
push
pop
inc
mov
add
add
sbb
push
push
sbb
mov
mov
scas
fwait
sub
es
and
scas
push
add
icebp
jmp
mov
mov
and
icebp
iret
ret
lock
cltd
lret
aad
fsubs
push
out
jns
jnp
stc
out
icebp
stos
push
pop
fimuls
lahf
in
mov
lods
mov
aas
bound
gs
mov
lock
jg
xchg
adc
lret
incb
mov
jno
lcall
fbld
bound
shrb
sarb
pop
pop
popa
push
fidivrl
fisubl
mov
or
inc
je
sbb
aaa
jge
pusha
mov
shrb
cmpsl
sub
inc
scas
pop
cltd
addr16
inc
xor
push
pop
sbb
dec
xor
stc
or
inc
xchg
mov
jb
int
cmp
xchg
pop
jbe
inc
lcall
jnp
imul
sti
push
out
dec
out
and
mov
mov
push
mov
push
stos
pop
add
dec
int3
dec
fwait
mov
adc
stos
sbb
cmp
jmp
fadd
lods
jecxz
sub
xchg
xchg
rol
lock
xchg
fwait
ret
xor
sbb
stos
push
push
xchg
xor
sbb
les
xor
movsb
das
sbb
fs
sub
adc
js
lods
pop
es
sub
sarl
mov
dec
xchg
or
shrb
lahf
fidivrl
xor
inc
lock
xor
pushf
pop
sbb
lahf
je
jne
inc
call
pop
cwtl
cwtl
xor
xor
mov
aam
jae
jbe
push
mov
push
fs
fsubl
clc
stc
xchg
add
cltd
mov
and
xor
ret
aam
cmp
xchg
or
pop
lret
rcr
lahf
sbb
xchg
xor
les
or
inc
test
jae
mov
push
pushf
shlb
and
xchg
push
jbe
xchg
mov
xchg
sub
ds
pop
push
mov
addr16
pop
dec
add
push
js
and
xor
mov
mov
pop
stc
or
xchg
mov
mov
jb
scas
and
add
pop
das
adc
loop
xor
xchg
rol
mov
fcmovb
push
aaa
imul
aaa
lods
xchg
test
mov
sbb
ficoml
sub
mov
mov
sbb
sbb
or
aam
shlb
cld
xor
dec
push
sbb
push
or
pop
js
ja
repz
adc
bound
inc
pop
pushf
sub
movsb
les
nop
les
mov
sbb
mov
sarl
fcmovnb
xor
pop
jno
push
addl
dec
push
push
mov
pop
jnp
enter
push
pop
mov
cli
cmp
mov
lahf
push
outsl
jp
out
xor
mov
lret
lock
push
lods
adc
jmp
pop
cli
push
pop
ss
mov
lahf
sub
xor
jns
sbb
lret
clc
mov
push
xor
mov
repz
mov
adcl
or
repz
mov
rolb
and
popf
imul
cmpb
mov
out
jge
aas
jle
sub
call
inc
sbb
loope
ret
xor
imul
test
jge,pt
xor
imul
mov
jo
aad
imul
scas
inc
jns
out
sub
xor
cmp
mov
icebp
jno
mov
icebp
sub
loopne
ds
js
adc
cli
cmp
shrb
sti
fisttpl
sbb
lret
test
xlat
je
dec
lock
sarb
int3
mov
loope
cmp
sub
push
cmp
lcall
out
adc
inc
and
mov
das
in
ja
incb
push
or
xor
push
push
and
jmp
cmp
js
cmp
lahf
and
jle
aam
cmpsb
popf
ret
pop
or
cmp
sub
mov
xor
outsb
sub
fs
cmp
popf
or
or
aad
repnz
int
sub
push
orb
pop
shl
pop
js
or
gs
aad
xchg
shl
outsb
mov
mulb
xlat
ds
stc
dec
push
lods
pop
int
add
cmp
mov
add
xchg
into
inc
add
push
cmp
and
clc
push
or
mov
cmp
ss
stos
inc
stos
pop
iret
jbe
out
add
dec
jmp
mov
and
imul
lret
push
shll
int
mov
fisubs
int
lcall
stos
mov
lahf
data16
or
std
dec
or
pop
gs
test
pop
add
mov
lret
repz
rorb
daa
loop
fistps
popa
jae
cmpl
push
push
push
repz
jmp
sahf
push
mov
or
dec
stos
in
jne
andb
and
jno
movsl
push
leave
adc
sarb
jne
mov
xor
and
add
jnp
adc
cwtl
xor
ja
dec
mov
cmpl
dec
jnp
sub
iret
fs
mov
mov
rorl
or
push
sub
mov
and
mov
push
movsl
imul
pop
je
outsl
hlt
je
sub
stos
adc
mov
mov
fsub
gs
mov
in
jne
call
ficoml
pop
test
leave
xchg
and
loopne
xchg
dec
or
in
lret
popa
push
loopne
imul
adc
push
ret
int3
mov
cwtl
bound
and
adc
dec
sahf
cmp
cs
mov
loop
push
call
decl
sub
or
mov
data16
imul
inc
mov
pop
sbb
repz
iret
jb
lods
mov
subl
or
neg
add
sbb
loope
push
cmp
push
arpl
add
mov
test
iret
fists
ljmp
enter
jl,pn
add
hlt
xchg
mov
enter
subl
test
lock
pop
dec
mov
stc
ret
or
inc
pushf
mov
insl
jne
xchg
jge
jb
in
xor
sub
push
mov
xlat
push
jmp
or
inc
adc
mov
dec
push
inc
pop
cmc
xorb
inc
pop
addr16
sarl
scas
pop
jmp
movsl
scas
in
std
fs
mov
sub
push
mov
mov
ds
filds
inc
mov
inc
mov
movsl
mov
dec
je
leave
push
inc
push
aam
and
adc
lock
nop
jmp
mov
sbbb
xchg
cmp
bnd
and
rorb
cld
in
cmp
lds
stos
mov
out
jmp
add
bound
aas
mov
scas
cmpb
ja
lea
pop
cmc
mov
jno
or
dec
cltd
and
push
adc
stos
fsubr
push
imul
je
pop
ljmp
push
fadd
mov
xor
add
pop
imulb
je
mov
pop
mov
push
xor
and
mov
cmp
lea
mov
cmp
mov
aad
or
scas
sbb
call
sbb
ja
iret
stos
mov
xchg
add
sub
cld
or
xchg
push
xor
push
and
dec
cmp
pusha
push
outsl
xlat
nop
add
add
inc
push
inc
add
movsl
mov
cmp
jnp
pop
jecxz
imul
push
inc
les
sbb
mov
cmp
mov
fs
rcrb
mov
inc
dec
xchg
and
ret
sbb
mov
das
mov
add
adc
lcall
push
insl
xor
pop
clc
daa
mov
push
cli
mov
jns
xchg
and
mov
fstps
daa
repnz
xchg
jb
jo
test
dec
aam
int
jno
ja
adc
pop
add
repz
mov
dec
or
out
cmc
dec
jp
and
cltd
xor
pusha
xor
insl
mov
leave
sub
xchg
aad
dec
int3
pop
stc
add
push
inc
ret
sti
mov
fwait
xchg
jns
ja
jno
xor
mov
jecxz
fidivrs
xchg
push
add
cmpsb
imul
add
mov
push
aas
pusha
and
dec
push
stos
jmp
xchg
imul
out
lcall
inc
scas
aad
add
dec
xchg
test
xlat
out
gs
or
pop
les
fisubrl
scas
mov
push
das
sub
adcl
mov
ret
std
imul
out
cli
scas
out
out
loope
sbb
and
adc
ljmp
les
mov
xchg
cmp
adc
rol
xor
les
mov
cmp
fbstp
cmpsl
sbb
mov
out
leave
and
aaa
cld
test
icebp
es
or
push
in
scas
mov
sub
sub
xchg
gs
mov
stos
mov
arpl
add
jl
jg
jne
adc
push
mov
dec
adc
enter
xchg
jb
push
pop
or
imul
popa
sbb
imul
daa
ljmp
push
mov
mov
stos
jae
aas
sahf
aad
push
cwtl
mov
or
lods
test
xor
xor
lcall
shll
dec
fnstsw
pop
repz
mov
sahf
push
jae
pop
movsb
cs
push
xor
fsubrp
in
cltd
out
jecxz
pop
cmp
pop
int3
and
in
pop
or
pop
jno
xchg
ret
pop
fsubrs
ret
jp
mov
out
inc
jnp
and
xchg
popl
sbb
lret
dec
dec
loop
into
and
es
xor
lock
mov
nop
or
fimull
mov
xchg
pop
mov
imul
cld
fsubrp
ret
sbb
outsl
jmp
mov
jbe
jg
mov
pop
dec
cld
xchg
mov
incl
aad
mov
mov
cltd
pop
lods
jbe
inc
mov
add
aas
cmpsl
pop
repz
jbe
movsl
aam
fcom
sub
inc
pusha
push
cmpsb
in
aaa
sub
lock
push
pop
adc
push
xchg
ds
xchg
js
popf
mov
cli
or
ja
add
ss
test
sti
imul
movaps
sub
repnz
adc
cwtl
int3
and
and
les
mov
inc
xchg
push
or
dec
stc
or
cmc
out
push
jno
je
and
add
aaa
addr16
packssdw
xor
fs
jns
ljmp
push
lds
jns
shrb
xchg
add
adcl
jne
int3
xor
hlt
out
aam
mov
sub
mov
stos
add
jbe
push
sbb
repnz
cwtl
ja
push
push
adc
push
pop
jg
loop
jae
add
xchg
iret
push
js
xchg
or
sbb
hlt
cltd
cltd
or
ja
testb
xlat
jmp
fadds
jg
sarb
pop
mov
adc
mov
inc
jecxz
jecxz
movsb
test
in
jge
shll
xor
push
sarb
lret
mov
jp
repz
stos
bound
js
outsl
lret
sub
sti
mov
or
leave
std
iret
cmp
cmc
jg
mov
pop
or
inc
test
xchg
or
roll
loop
stc
adc
dec
cld
gs
push
in
add
repz
push
mov
push
mov
push
std
inc
lods
out
pop
int
sub
adcl
push
push
push
pop
add
mov
cmp
adc
cmp
mov
push
xor
jbe
mov
aad
jge
dec
ja
pop
pop
mov
or
cmp
nop
fwait
mov
test
and
xchg
mov
cmp
gs
testl
movsb
jb
lahf
ret
pusha
jecxz
imul
xchg
lcall
or
pop
in
in
pop
cltd
lahf
mov
negb
or
xlat
sub
push
imul
out
xorb
cmc
movb
cmp
ja
or
and
pop
outsl
aas
add
sub
dec
insb
ja
dec
stos
xchg
aaa
das
stos
jmp
xchg
jl
and
pop
xchg
ss
jmp
inc
insb
std
sarb
out
and
cli
push
imul
push
inc
mov
cwtl
jno
jp
inc
pop
jnp
push
into
ja
cwtl
jmp
ds
mov
inc
push
jb
sbb
mov
inc
cmc
lret
pop
aam
mov
mov
mov
sbb
xorb
divb
pop
call
jo
mov
ret
popa
xor
lds
dec
mov
repnz
nop
scas
mov
std
fiadds
sbb
test
sbb
data16
aad
int3
jl
push
ja
xchg
loope
pop
jns
pop
jbe
div
mov
xlat
push
outsb
int3
dec
sahf
dec
sub
adc
arpl
dec
fsubrs
cmpsl
les
call
xor
dec
ret
jae
gs
xchg
jbe
cltd
push
mov
pop
stc
or
pop
jecxz
push
dec
cld
or
jmp
or
scas
imul
jno
in
add
lret
cmp
add
push
movsb
jbe
arpl
push
sub
sahf
pop
mov
enter
and
add
int
inc
gs
and
test
pop
or
dec
xchg
mov
mov
fldcw
imul
push
mov
ds
sub
push
enter
mov
xchg
sbb
addr16
pop
or
cmp
inc
pop
push
cwtl
fisubrs
shrb
or
loop
pop
lret
xorl
or
adc
push
aaa
add
imul
pop
mov
iret
ja
adc
cmp
je
insl
and
inc
stos
scas
and
add
mov
outsl
mov
psubsb
fstps
push
xchg
ret
jmp
ljmp
ja
mov
out
std
lcall
sahf
xor
daa
les
movsb
adc
or
pop
xchg
negl
test
push
jnp
hlt
xchg
xchg
mov
in
mov
movsb
and
jo
push
lcall
ret
or
gs
xor
in
mov
imul
and
in
inc
or
adcb
arpl
subb
setg
insb
xchg
or
or
das
cwtl
es
sbbb
cmpsl
imul
frstor
std
out
push
stc
imul
pushf
xor
add
enter
insl
fndisi(8087
add
jge
xor
and
aaa
movsb
xchg
jns
jp
roll
ds
adc
shlb
repnz
popa
push
push
mov
and
inc
jne
adc
mov
push
adc
popf
jg
dec
aas
andl
data16
aaa
in
pop
or
xchg
arpl
sbb
cmp
popa
loopne
arpl
jb
lods
dec
icebp
hlt
mov
rorl
and
mov
je
ret
in
shll
aaa
test
call
insl
mov
sarl
cmp
adc
dec
sub
push
mov
mov
daa
adc
jnp
jno
sub
popa
lea
insl
repz
sub
add
cmpsb
cmp
inc
lcall
in
mov
push
adc
push
sti
mov
fadds
test
jmp
sub
insl
sti
addr16
dec
shl
aaa
mov
lds
outsb
jle
pusha
jne
pop
push
inc
lcall
ficomps
rorb
push
nop
sub
gs
or
dec
xchg
sbb
fisttpl
inc
push
lcall
sbb
jne
in
movsl
lahf
mov
mov
loope
ja
lods
or
xlat
stc
dec
movsb
mov
sub
xor
push
lds
or
idivl
push
xor
out
and
sbb
sbb
arpl
sbb
shll
push
lock
jae
enter
jnp
adc
jne
push
sbbb
pop
stos
mov
dec
and
xchg
xor
inc
mov
bound
fstpl
popa
add
mov
es
repz
or
xorl
ds
int3
pop
and
add
jae
rolb
cmp
insl
popf
js
lret
push
ret
lods
push
or
fstps
jge
mov
or
xchg
xchg
scas
unpcklps
decb
fcmovbe
fucomp
clc
pop
test
ret
lret
repz
imul
mov
and
dec
pop
sbb
mov
jnp
inc
mov
loopne
ret
inc
push
jp
xchg
es
dec
mov
sbb
mov
pop
mov
pop
jge
and
or
in
ss
popa
testb
cmp
inc
popf
mov
inc
subl
pop
jmp
sti
jecxz
sub
dec
mov
sub
or
push
inc
push
stos
movq
xchg
ret
rcr
sar
andps
lcall
sbb
pop
cwtl
mov
sbb
sti
popf
mov
cli
sub
push
or
and
mov
inc
je
das
test
icebp
test
xor
sub
cmpsb
and
pop
xor
mov
pop
lea
dec
ds
sub
cmp
dec
adc
scas
addb
and
pop
lock
dec
push
in
rcll
ror
scas
or
xchg
xchg
or
add
test
into
inc
dec
iret
xchg
inc
icebp
or
mov
adc
insb
cld
xchg
loope
pop
lret
lret
push
addr16
xchg
push
stos
add
cmpsb
and
bound
in
adc
mov
lret
popa
test
cmp
mov
shr
sub
fdivp
pop
dec
push
rol
aas
fs
lods
hlt
ss
daa
das
pop
push
jle
xor
mulb
jg
push
jg
pop
pmullw
cli
leave
js
shrl
mov
fwait
ss
shr
lods
mov
roll
push
or
nop
lahf
imul
fldenv
imul
sbb
cwtl
into
pop
sbb
stos
push
adc
inc
mov
stos
mov
push
lret
cmpsl
sarb
scas
jno
or
xchg
daa
jo
mov
js
xchg
sbb
enter
lea
xor
xor
xor
dec
in
push
mov
mov
je
sub
xor
or
data16
xchg
mov
mov
in
mov
repnz
mov
xchg
jbe
ja
mov
sub
test
cmp
jnp
adc
and
stc
inc
jb
pop
sub
inc
jb
rorb
xlat
jo
or
cmp
shll
ret
xchg
dec
mov
adc
or
mov
data16
insl
mov
cltd
adc
inc
aaa
bound
mov
jns
inc
roll
cmp
iret
xchg
stc
cld
fbld
jnp
add
pop
pop
inc
inc
movsl
ficompl
std
mov
fcomip
pop
fcompl
hlt
test
push
sbb
dec
aam
mov
dec
ret
ret
xor
pop
mov
sbb
push
sbb
ljmp
or
pusha
pop
jg
cmpl
inc
or
loop,pt
insl
and
sbb
int
mov
sbb
mov
inc
fidivs
mov
sub
sbb
mov
ret
aas
sub
mov
mov
sahf
pushf
push
lcall
dec
mov
test
enter
stos
movsb
or
inc
sbb
mov
mov
mov
mov
and
and
std
popf
xor
mov
sbb
cmc
sub
loop
sbb
add
stc
lea
cmp
or
add
mov
ss
cmpsl
leave
xor
jnp
mov
insl
inc
dec
movsl
and
cld
je
cmpsl
cs
scas
and
jne
push
daa
andb
push
pop
sub
insb
push
push
dec
lret
nop
xor
bound
pop
ljmp
lcall
cmp
xchg
lods
sbb
scas
rclb
daa
sub
leave
fstcw
clc
repnz
sbb
and
xor
loop
daa
gs
push
mov
clc
lock
adc
dec
test
hlt
sub
sahf
sub
mov
pop
adc
lret
andb
inc
test
cmpsb
popf
hlt
das
adc
mov
push
sarl
mov
mov
jl
and
pop
inc
js
xchg
out
fcmovnu
in
and
or
lcall
mov
jecxz
mov
jo
outsb
xor
or
movsl
nop
mov
test
out
stos
jae
ljmp
rcrl
into
adc
pop
cld
dec
lds
bound
rorb
sbb
sti
std
mov
jbe
sti
lea
cs
xchg
jb
push
mov
sub
jns
pop
and
jl
add
jo
lods
jo
fidivrl
repz
in
loopne
rcr
les
pop
add
inc
int3
inc
or
incl
cmpsb
xchg
mov
test
cmpsl
lret
xor
int3
or
xchg
aaa
adc
mov
adc
mov
stos
cmpl
cmp
into
sub
push
dec
cmpsb
mov
add
movsl
jo
ja
lret
ss
inc
jae
in
xlat
jae
adc
jns
cmp
ljmp
push
sub
xchg
mov
orb
and
aas
dec
lea
mov
pop
mov
adc
lahf
cli
popf
adc
xlat
inc
push
xor
xchg
mov
mov
mov
iret
push
jne
and
jns
in
xchg
cmpsb
cmpsb
mov
jno
jae
fidivs
loopne
fistpll
aas
fdivr
aaa
stc
aas
pop
jmp
push
cwtl
adc
dec
mov
cmpsb
fdivr
cmp
jg
nop
daa
rcrl
lds
xchg
loope
add
ds
or
sbb
mov
mov
sbbl
jecxz
adc
xor
out
outsb
cmp
outsb
aas
jmp
cmp
popa
add
push
cmp
lcall
inc
add
in
add
xlat
pop
insb
push
inc
ja
xor
mov
and
sub
sub
ror
cmp
int3
jne
adc
xchg
pop
data16
loopne
push
iret
add
out
push
mov
or
or
test
and
mov
pop
fninit
inc
sub
pop
pop
lcall
sub
or
movsl
sbb
add
shl
xchg
stc
inc
add
std
pop
jb
fmul
sub
test
dec
mov
inc
cmc
xor
inc
xchg
popf
pop
xor
xchg
out
or
mov
sahf
stos
out
cli
add
das
jg,pn
mov
push
pop
or
fdivrs
stc
push
iret
mov
xchg
mov
cltd
pop
fmuls
lahf
cmp
clc
push
rorb
js
ja
mov
leave
mov
jae
enter
mov
shl
dec
repnz
vpunpcklwd
push
rorl
pop
dec
movsb
or
mov
mov
pop
dec
jmp
pop
inc
lahf
or
frstor
data16
movsb
xchg
jle
daa
xchg
rorl
or
push
xor
xchg
pop
pop
lods
adc
mov
out
push
mov
sub
das
and
imul
cmp
push
test
fildll
insl
mov
lcall
jl
mov
es
jb
mov
fcompp
xor
enter
or
jb
leave
js
push
mov
jns
push
xchg
loop
pop
sub
icebp
xchg
insl
dec
jmp
leave
cs
lods
in
in
mov
adcl
or
movsl
out
stos
xchg
ret
nop
loopne
adc
lret
cmpsb
fidivs
pop
fnsave
cmp
and
lea
cmpsl
iret
adc
lds
cmp
fcompl
and
scas
push
sbb
jbe
push
cltd
dec
arpl
popf
aam
xchg
mov
popa
and
sarb
loopne
mov
icebp
hlt
imul
xor
mov
cmp
dec
rolb
ss
adc
testb
pop
and
inc
xchg
test
mov
pop
adc
push
scas
daa
mov
mov
daa
xchg
fimull
out
stc
scas
lcall
insb
hlt
pop
or
insb
sti
mov
scas
hlt
arpl
push
test
pop
adc
cs
xchg
lcall
std
or
andb
fs
insl
icebp
jo
icebp
jbe
aam
aad
in
sub
jb
cs
add
pop
push
sbb
cmp
xchg
ss
lahf
mov
stos
add
cmovns
js
pop
lds
seta
pushf
jae
adc
or
das
jmp
xor
test
rcll
lock
push
ja
mov
and
dec
inc
clc
lods
jmp
test
scas
fcoml
fdivrs
aas
mov
rolb
jb
mov
inc
rolb
out
int
mov
dec
cs
mov
outsl
out
mov
cmp
inc
aas
out
das
lcall
mov
mov
ffreep
and
xchg
leave
pop
mov
les
leave
pop
push
xor
sbb
in
movl
jl
stc
add
int3
xorl
adc
test
jl
in
lahf
cltd
and
xchg
out
scas
adc
gs
pop
xchg
mov
and
xlat
xchg
les
mov
xor
dec
aaa
imul
insl
dec
cmp
lcall
pop
popa
in
dec
lds
jmp
cld
cmc
mov
pop
xchg
mov
mov
sbb
aaa
addr16
push
imul
sti
dec
or
mov
dec
push
adc
dec
mov
lods
das
subl
imul
jo
jge
push
or
js
test
fcomp
stos
in
pop
enter
cmp
repnz
inc
nopl
cmpb
dec
int
mov
and
cmp
push
into
push
es
fimull
pop
scas
out
and
mov
and
mov
bound
add
stc
adc
aaa
sub
dec
mov
mov
cli
mov
cmc
repz
fmull
sub
cmpsl
call
pop
and
insb
pop
out
push
push
push
mov
insb
mov
mull
mov
and
dec
jecxz
lcall
lea
testl
bswap
fistpll
mov
jg
add
mov
int3
dec
test
or
xor
ss
loope
push
sub
clc
out
adc
jb
fsubp
mov
push
aas
rcrl
jmp
test
js
fnstenv
pop
aas
popa
lcall
adc
lods
pop
push
sbb
lret
xor
sub
mov
push
movsl
or
mov
xor
mov
mov
push
lcall
mov
sub
push
arpl
dec
jmp
inc
xlat
jmp
sub
cmp
shl
inc
jmp
pop
and
dec
jg
mov
push
cmp
and
sbbl
adc
jb
or
in
or
jae
xchg
ljmp
call
fs
xor
adc
cli
adc
scas
jb
add
into
shl
cmp
push
ret
mov
call
loope
mov
add
leave
mov
mov
mov
ret
push
stc
test
cld
out
mov
push
adc
and
mov
repnz
sbb
xchg
mov
lds
sarb
insl
jb
pop
mov
xor
adc
and
out
sbb
fstl
xchg
into
xchg
subb
aam
rep
popa
addr16
ss
sahf
xor
in
mov
push
add
mov
leave
jg
jp
mov
aad
mov
out
roll
or
inc
adc
cmp
shll
iret
shlb
fld
test
loope
in
mov
sub
outsl
fwait
or
dec
xlat
jae
rcr
add
xchg
ds
scas
inc
xchg
lds
inc
cmp
fcoms
xor
jp
inc
ret
sbb
shrb
inc
addl
sbb
sbb
xchg
insl
outsb
cmpsb
dec
xchg
cmp
cmpsl
sbb
cmp
popf
push
push
xchg
movsl
out
mov
sahf
xlat
inc
inc
ret
in
testb
enter
push
mov
or
stc
dec
sub
or
and
sub
jnp
xor
sbb
rol
inc
sub
and
push
inc
sbb
scas
pop
lock
push
lahf
lods
mov
dec
mov
loopne
pusha
clc
push
mov
dec
xor
mov
push
fiaddl
add
in
pop
loope
movsb
jae
cmp
cltd
fldenv
insl
and
pop
pop
cli
movsl
fnstenv
jnp
sbb
hlt
adc
cmp
xlat
mov
lahf
dec
or
mov
adc
adc
pusha
leave
cmp
xor
aas
mov
push
mov
push
mov
xchg
sub
repz
cwtl
loop
fidivs
insb
inc
out
push
xchg
enter
dec
inc
popf
imul
and
outsb
push
sub
fsubs
cmp
stc
xchg
lds
addr16
mov
je
aam
cmpsl
arpl
inc
push
cmp
inc
lret
iret
lahf
jge
mov
hlt
imul
jp
cltd
add
imul
pop
jne
or
or
aad
js
std
not
mov
and
xchg
es
out
add
jecxz
mov
test
xchg
push
or
sub
mov
iret
mov
jbe
imul
mov
test
stos
mov
mov
xor
mov
xchg
mov
mov
test
aam
lock
fwait
aaa
push
mov
fldln2
and
aad
and
scas
ss
jmp
jmp
add
jae
xchg
add
push
push
xor
xchg
stc
arpl
mov
xor
jecxz
popa
clc
jno
xor
jmp
mov
lcall
sbb
loope
enter
mov
xchg
stos
data16
pop
nop
add
xchg
add
jle
sub
fidivs
pop
push
push
loope
fwait
insb
int3
adc
inc
lahf
pusha
and
sub
xchg
mov
in
outsl
cmpsl
stos
cmp
nop
dec
push
sub
imul
xchg
rcrb
push
adc
loopne
rorb
xor
jb
arpl
stos
pop
sbb
inc
mov
jmp
jmp
cmp
and
dec
sbb
ret
push
int
mov
push
mov
in
jmp
sbb
mov
mov
scas
mov
cmpsb
inc
maxps
mov
popf
mov
pop
ficoms
push
imul
and
adc
repnz
sbb
pushf
cltd
xchg
insb
dec
jo
int3
ds
data16
in
adcl
stos
cmpsl
sbb
adc
jbe
movsl
mov
xchg
mov
push
jle
push
sub
and
js
fwait
or
mov
test
mov
mov
sub
adc
mov
inc
shl
adc
inc
mov
repnz
jns
xchg
push
xchg
ret
xchg
mov
es
adc
cmpsl
pop
int
add
icebp
inc
push
loopne
ss
leave
adc
xchg
dec
sbb
cmovb
fdivrl
jo
dec
pop
stos
xchg
inc
mov
lret
or
cmpsl
inc
in
jp
mov
or
fcmovu
pop
pushf
pop
sub
sti
cltd
push
jae
inc
inc
dec
mov
sbb
add
out
and
pop
xor
xor
jmp
repnz
rcrb
fidivl
adc
jae
add
push
sarb
push
jg
fcmovnu
lds
int
cmp
fs
mov
push
mov
xor
ror
xor
out
xchg
pop
sbb
out
sbb
pushf
xor
dec
inc
repnz
inc
lea
sub
arpl
mov
or
je
jns
fldcw
jle
mov
sbb
fistl
mov
cmp
inc
in
lahf
leave
mov
fs
fcoms
or
dec
jmp
lahf
fsubl
lock
mov
xchg
pop
jb
mov
gs
xlat
icebp
not
adc
cmp
mov
inc
aam
loopne
and
cld
mov
cmp
mov
std
test
scas
cmc
leave
ret
and
ja
lahf
js
lcall
xchg
cmpsb
shl
je
xchg
cmp
xchg
outsb
outsb
data16
cli
stos
fs
aam
jb
jmp
das
movsl
pop
cld
cltd
jae
cmp
arpl
sbb
add
xchg
add
jb
inc
push
push
jb
jg
cmc
jo
xor
cs
mov
repnz
jge
fld1
shlb
fidivl
add
mov
xor
mov
dec
mov
xchg
xchg
mov
mov
les
push
sub
adc
add
movsl
push
dec
stos
mov
aam
cltd
inc
mov
or
aas
xor
adc
push
dec
push
fsin
and
imul
arpl
xor
divl
sti
leave
and
bt
sbb
cld
cmpsl
push
cmc
out
fcoms
jle
mov
push
aas
cmp
ret
sub
jp
movsl
pop
add
scas
fbld
test
sub
rdmsr
ret
repz
add
push
movsb
inc
test
jne
lret
cmp
into
dec
aas
test
sub
pop
fnstcw
mov
in
jae
cli
sarl
and
popa
pushf
sbb
andl
lcall
pop
push
imul
pop
nop
jmp
imul
sbb
sub
or
sti
mov
mov
dec
adc
xchg
mov
fs
xchg
fisttps
push
sbb
lcall
inc
dec
pop
inc
popf
xlat
adc
gs
sbb
jl
out
add
jp
xor
cmp
fsts
mov
mov
imul
and
les
or
into
std
std
lock
jb
jb
jae
or
out
inc
xchg
cmc
add
push
mov
call
lret
inc
imulb
test
ret
rorl
mov
mov
xor
jp
add
outsb
mov
sarb
rcrb
adc
push
pop
outsl
ljmp
pop
jo
pop
sbb
or
xlat
arpl
add
cmc
sbb
jmp
pop
nop
cmp
mov
pop
push
dec
jns
mov
btr
loop
cmpsl
mov
repz
cltd
push
mov
pop
ficoms
ss
mov
jle
cmp
and
xor
cmp
fistpll
xchg
jbe
lods
daa
xchg
sub
out
dec
and
mov
dec
or
lahf
out
push
pop
out
fwait
xor
sub
je
ja
pop
jb
stc
xchg
sbb
pop
and
or
sub
outsl
lahf
pop
pop
add
int3
pusha
jnp
int3
xchg
jmp
repz
loop
ret
and
lods
ret
or
int3
mov
ret
daa
je
add
aad
fsts
andl
roll
or
push
test
cwtl
adc
mov
mov
add
out
ljmp
fstps
ds
popa
in
mov
mov
jmp
xchg
xchg
cmp
fwait
mov
and
stos
out
gs
jmp
decl
fists
mov
pop
cwtl
ds
dec
rcrl
cmp
arpl
lcall
shlb
mov
rclb
shrl
fisttps
pop
sub
adc
mov
ret
in
or
pop
mov
add
out
sub
pop
inc
sub
xor
outsl
xchg
pop
jnp
mov
cwtl
pop
movb
push
js
sub
lret
and
rcl
jmp
add
shrl
cmpsb
loopne
push
sbb
push
neg
jae
lret
cmp
mov
lahf
in
dec
std
or
mov
cmp
sub
out
les
jb
sbb
mov
cmc
add
cmp
sub
lahf
fnstcw
add
imul
test
jnp
cs
je
push
mov
adc
std
dec
mov
std
cli
xchg
adc
adcl
and
mov
pop
loopne
xchg
fnstenv
scas
das
mov
bound
sysexit
fs
dec
fdivl
adc
mov
jge
push
sbb
popa
lahf
fstpt
fptan
das
mov
loopne
dec
mov
mov
xlat
insl
jg
jge
lock
ret
sahf
shll
inc
outsb
pop
in
mov
jmpw
cwtl
xchg
int
scas
pusha
xchg
cmpb
ds
cld
pop
xchg
xlat
fcom
or
and
push
dec
cmp
ljmp
xlat
in
shlb
js
mov
dec
mov
cwtl
jno
jp
xor
pop
and
fbld
xlat
sbb
dec
sbb
pop
pusha
and
mov
xchg
push
orb
xor
mov
lods
cmp
pop
inc
cmp
jle
add
sbb
in
dec
inc
int
andb
mov
lods
cmp
sub
and
jns
push
push
scas
ret
adc
addr16
mov
push
and
aam
fildl
dec
decl
mov
fstl
daa
enter
push
cwtl
cmp
and
push
push
inc
mov
mov
stos
xor
imul
push
movsl
outsl
test
aam
je
jae
push
inc
mov
add
and
pop
adc
push
cmovne
mov
and
or
dec
mov
call
add
mov
test
pusha
lods
sbb
stos
push
cmp
sub
out
repz
repz
ljmp
pop
dec
cmc
pop
mov
cmpl
add
inc
mov
lods
push
inc
push
jns
mov
es
shlb
adc
xchg
je
repz
xchg
push
jp
fcoms
fucomi
dec
addr16
cld
fcmovne
addl
xchg
adc
jo
jne
movsl
fadd
dec
lock
jns
repz
addr16
pop
mov
addl
int
mov
cmpsl
loopne
mov
ss
adc
imulb
and
cmc
inc
cwtl
pop
cmp
lcall
int
mov
sub
jns
inc
ljmp
xor
pushf
add
sar
adc
sub
enter
jle
rcll
and
mov
fwait
sbb
mov
sbb
mov
push
push
inc
adc
xor
jbe
jmp
xchg
mov
push
cs
xchg
fs
out
fldt
jl
cmp
call
outsb
sahf
push
or
sbb
pop
mov
test
mov
lahf
jae
repnz
jne
pusha
in
push
icebp
mov
int3
add
or
jecxz
subb
inc
std
les
lret
sahf
push
dec
or
push
sub
inc
jno
les
and
jg
xchg
js
mov
scas
popf
movsl
add
cmp
push
inc
gs
stos
popf
push
fsub
movsb
push
mov
mov
xor
xor
adc
js
push
sbb
adc
jp
bsf
or
loopne
out
jg
xchg
cmp
xor
sti
add
xchg
mov
dec
test
aas
xchg
push
xor
xchg
in
mov
mov
jl
in
mov
in
jmp
mov
sbb
or
ss
mov
sbbl
sub
xchg
mov
pop
ds
mov
enter
fcomi
mov
push
or
inc
or
xchg
sbb
int3
push
and
loop
fisttpll
leave
mov
aaa
add
mov
int3
imul
add
xor
imul
jp
xchg
test
js
mov
out
and
xchg
xchg
mov
cmp
push
subl
rcrb
out
stos
pop
pop
fcomps
ljmp
jl
ficomps
test
arpl
test
push
scas
cwtl
jmp
loope
inc
xchg
push
adc
cmpsb
xor
jne
and
push
xor
pop
mov
sahf
jle
xchg
lret
push
cli
jae
lods
jns
test
insb
data16
add
push
sbb
fwait
dec
dec
pop
aad
std
sub
inc
adcb
rol
es
enter
sbb
inc
nop
add
iret
pop
nop
adc
pop
stos
subb
sub
test
mov
je
sub
inc
bound
scas
in
xchg
fistpll
xchg
mov
shrl
mov
in
enter
inc
cmpsb
fsubrs
adc
nop
dec
xchg
insb
mov
lret
push
and
mov
std
mov
push
test
lea
data16
sbb
call
in
xchg
xor
je
filds
shl
repz
js
jmp
cmp
lds
pop
jns
mov
lea
scas
insl
jg
xchg
fcmove
cmp
jle
cmpsb
and
sub
mov
mov
push
lea
jbe
jns
adc
push
lret
mov
data16
sub
sahf
xchg
stc
xchg
insb
sub
pop
repnz
mov
and
push
lret
outsb
sarl
sahf
cmova
stos
add
and
movsl
and
pop
stos
fbstp
cli
fstp
adc
jmp
and
add
inc
cmp
pushf
addl
mov
adc
push
pushf
cmp
orl
movsb
xor
xor
mulb
ds
cmp
cmp
sub
pop
push
push
shl
lods
cmp
ljmp
rorl
sbb
jg
in
cld
mov
mov
es
push
das
popf
pop
data16
shrb
fisubrs
pop
sahf
inc
nop
js
lcall
cmc
das
cmp
cwtl
call
mov
lods
imul
outsl
imul
mov
xor
xor
push
or
pop
cltd
pop
xchg
cmp
ljmp
fdivrp
sahf
insl
and
sbb
mov
adc
or
jbe
cmc
sub
or
jb
rcl
repnz
jecxz
or
dec
push
mov
jmp
test
xor
push
sbb
adc
xchg
je
int
int3
cltd
xor
sub
pop
cmc
fbld
push
cmp
out
subl
jno
xchg
fisttpl
cmp
push
imul
icebp
lea
pusha
dec
test
lea
addl
fisttpl
gs
cmp
inc
sub
aad
mov
fnstcw
or
add
xchg
push
mov
aad
push
adc
imul
sbb
xchg
cld
sub
inc
stos
lods
dec
xor
loopne
pop
adc
sub
jmp
or
sbb
add
dec
out
pop
stos
leave
cwtl
and
pop
inc
push
repz
cmp
dec
adc
push
call
aaa
push
cmpsb
fcoms
push
popa
cmp
mov
push
push
pusha
mov
in
movsb
or
daa
sub
sub
mov
xchg
jle
jo
pop
lods
fstl
pop
and
cmp
xor
cmc
inc
inc
ret
adc
nop
out
divl
push
ja
lahf
sub
fadds
add
cmpsl
lods
shlb
xchg
mov
repnz
int3
push
and
test
pop
dec
in
mov
pop
je
out
test
shrl
nop
inc
push
pop
inc
push
hlt
lods
xor
fcompl
leave
jecxz
dec
aad
sub
adc
repz
mov
ja
arpl
bound
stc
jnp
pop
mov
ljmp
and
test
nop
pop
mov
out
sub
sub
test
xor
xchg
dec
mov
pop
fs
xorb
adc
push
icebp
adc
inc
enter
std
outsl
rorl
in
call
mov
mov
roll
fistpl
rolb
cmpsb
fnstsw
hlt
jno
jl
mov
insb
test
xlat
dec
jg
and
and
sub
inc
das
repz
aad
sbb
sub
fnstsw
int
shrb
jne
fbstp
clc
or
lds
in
sbb
jno
inc
inc
mov
add
sub
dec
popf
sub
daa
aaa
sarl
push
je
mov
or
int3
leave
insb
lods
in
mov
mov
adc
mov
pop
outsb
push
jg
dec
cli
fs
fbstp
rol
lock
pop
movsb
push
test
push
xor
inc
lcall
out
jl
sub
lcall
jno
dec
push
cwtl
inc
daa
lret
aad
insl
sti
inc
mov
xlat
push
popa
xchg
or
mov
iret
cmp
push
lahf
stc
mov
bound
and
lea
fcomps
mov
cmpsb
or
mov
mov
jo
inc
jp
and
clc
xor
lret
stos
fbstp
sub
push
xchg
fisttps
aad
and
pop
xor
pop
lods
fistl
mov
push
or
mov
cmp
div
fcoms
sub
fnstsw
pushf
movl
int
dec
rorl
clc
push
icebp
mov
scas
adc
fidivs
mov
ror
stos
ds
jae
sbb
lret
hlt
rorl
clc
and
inc
mov
enter
sub
xchg
inc
inc
lods
jns
insb
add
pop
stos
les
or
sub
pop
xchg
sbb
movsb
je
mov
dec
xchg
int
imull
int3
clc
mov
in
ss
sub
sub
orl
ficomps
sahf
mov
xchg
dec
sbb
arpl
incb
dec
repnz
aad
push
dec
dec
cmpsb
jne
out
movsl
and
mov
push
cmp
cmp
mov
lcall
mov
pop
sub
mov
scas
push
push
sub
sti
push
clc
movsb
clc
fstl
jae
cltd
xchg
mov
mov
push
or
jl
enter
fldenv
mov
incb
lock
fs
mov
out
sub
pop
cmp
cmp
pop
test
int
push
ss
xchg
dec
inc
adc
jg
inc
ljmp
icebp
in
dec
into
push
mov
and
shll
aas
jbe
call
or
mov
cmp
jmp
out
repnz
js
fsub
faddl
or
aam
sbb
jne
int3
dec
outsl
cmp
fstps
cmpsl
test
cmp
push
xorb
mov
outsl
cmpsb
inc
push
outsl
jmp
leave
pop
jbe
or
and
lret
test
inc
pop
in
inc
mov
lods
outsb
jne
js
bound
mov
add
enter
stos
pop
pop
pop
popa
and
mov
loop
addr16
or
into
std
dec
int3
mov
xchg
rcr
xchg
pop
out
mov
cmp
insl
faddl
dec
jl
adc
jno
and
mov
subb
mov
rcr
shlb
xor
add
add
mov
jo
sbb
loopne
in
cmpsl
add
fsubs
mov
incb
loope
inc
out
xchg
mov
in
dec
das
daa
pop
inc
lock
dec
push
jge
sti
mov
movsb
nop
das
ret
mov
insl
stc
jo
ss
mov
aaa
cwtl
sbb
insl
mov
paddsb
flds
adc
push
xchg
xchg
jle
cli
repz
cmp
lret
mov
call
aad
jmp
mov
adc
mov
mov
jl
iret
subl
test
test
clc
movsl
test
adc
add
mov
shll
dec
fcoml
jne
xor
mov
stc
sub
jg
adc
icebp
cld
and
sbb
call
jg
flds
mov
push
fdivl
aaa
fiadds
stos
outsl
mov
mov
jp
jmp
mov
je
mov
int
movl
mov
movsb
jnp
adc
inc
lods
cmp
out
push
in
mov
mov
pop
sbb
jl
stos
test
fstps
fidivl
test
add
mov
movq
mov
jnp
bound
ss
adc
aas
mov
das
movsl
mov
mov
lds
pop
stos
mov
mov
adc
ret
push
push
rcpps
aaa
test
sbb
test
pop
inc
add
stos
mov
xor
mov
xchg
jp
and
fs
adc
lcall
jl
sub
rcr
inc
icebp
inc
mov
add
rorb
dec
xchg
xchg
imul
fstpt
int
shll
fistps
insb
aad
mov
or
dec
test
xor
xchg
jno
mov
add
push
jg
mov
pop
stc
mov
mov
jb
gs
sub
push
int
lret
adcb
jg
jp
ds
popf
jecxz
cmp
dec
adc
mov
daa
dec
inc
mov
jo
mov
pop
imul
add
movsb
cmpsb
jbe
int
add
stc
cmpsb
ss
sbbl
lret
call
jle
cmp
addr16
out
test
pop
cmp
or
and
and
push
mov
ja
xchg
cli
or
xchg
dec
lcall
ljmp
nop
idivb
aaa
insb
jmp
lods
mov
in
adc
repnz
mov
and
fisubl
sub
push
push
sub
aam
les
xchg
pop
pmaddwd
fsubrs
mov
cmpsl
xor
fsubrl
stos
rorb
repnz
pusha
mov
jmp
push
xchg
and
iret
imul
dec
push
push
js
loopne
loopne
or
ss
xchg
daa
mov
rolb
testl
pop
mov
addl
test
jnp
aaa
je
ja
pop
cmc
xor
dec
cmp
mov
or
test
ljmp
sub
and
jnp
jo
push
adc
shrl
fwait
in
sbb
pop
inc
mov
mov
loopne
mov
in
sub
fistpl
dec
push
loopne
mov
bound
lea
xor
inc
rcr
pop
cmp
mov
or
sbb
clc
push
pop
or
xchg
sbb
lock
push
mov
xor
add
mov
call
mov
push
mov
cmp
fidivrl
cs
push
js
fstps
ret
and
aam
and
rcl
in
xchg
outsb
call
out
shlb
jmp
cmc
and
adc
cld
jb
popa
int
lahf
leave
xor
mov
aaa
out
xchg
jne
lds
std
mov
cmp
data16
in
sbb
pusha
adc
jne
movsl
inc
mov
add
cmp
in
cmp
push
stc
cmp
cmpsb
je
je
pop
add
inc
subb
iret
mov
loop
aam
jl
mov
xor
inc
xlat
pop
mov
push
nop
pop
jecxz
test
inc
sbb
push
xor
fiadds
inc
lcall
jle
xor
xor
enter
outsb
xchg
ss
mov
out
sub
imul
mov
test
mov
lods
and
pop
lea
dec
sub
scas
orb
mov
push
jo
int
xor
jne
fmull
inc
push
sbb
insl
jle
imul
rorl
out
dec
std
paddd
ljmp
sub
cmp
cmp
mov
xlat
pop
nop
out
cmp
add
lret
and
jecxz
cmp
dec
inc
stos
xchg
fdivrl
popf
inc
jl
sbb
shlb
cmpl
mov
push
lods
adc
cmpsb
pop
bound
push
mov
ret
sub
jns
and
loope
movsb
jge
xor
mov
jge
mov
jnp
mov
xchg
inc
pop
jge
push
js
daa
and
fists
and
gs
push
mov
pop
jmp
loop
lahf
cmp
cmp
outsb
fbstp
imul
mov
cmc
mov
mov
outsb
daa
and
pop
jae
stos
ret
aaa
scas
xor
push
adc
aad
dec
jmp
stc
sbb
cwtl
mov
fstcw
scas
inc
mov
adc
out
pushf
stos
mov
xchg
push
mov
loope
add
into
pop
mov
test
aad
mov
dec
shrb
and
xchg
pop
sub
jmp
push
mov
sbb
rclb
jp
in
js
addr16
jae
jp
sbb
lahf
xor
addr16
inc
fwait
mov
xor
dec
out
add
sub
mov
inc
imul
lret
out
add
mov
rcrl
out
jbe
and
jns
sub
leave
push
push
lock
imul
movsl
cmpsl
hlt
add
mov
add
ss
sbb
pop
imul
test
ja
add
sub
int3
les
lcall
jno
mov
mov
cmovge
mov
xchg
xchg
daa
sbb
negb
mov
xor
loope
clc
mov
sub
or
into
jge
and
cli
pop
or
mov
cs
gs
test
xchg
shll
or
pop
mov
push
cli
or
lcall
push
push
jo
js
call
lret
mov
mov
subl
imul
arpl
cmp
mov
dec
js
mov
push
pop
es
ljmp
mov
call
xchg
mov
outsb
jne
in
pop
cmp
rolb
push
in
dec
xchg
xor
pop
sub
jle
pop
or
addr16
jne
fcmovne
cmp
adc
cmp
flds
mulb
pop
sbb
test
jge
sbb
sahf
mov
and
aaa
and
repnz
ss
mov
and
loopne
mov
insl
out
or
cmpsl
leave
fdivl
ss
int
movsl
jno
push
mov
daa
dec
inc
aad
mov
testb
lcall
jg
test
or
mov
sub
push
xor
and
rcl
push
ret
rolb
lods
mov
aam
test
or
xchg
movsb
cld
icebp
pop
pop
stc
test
insl
fimull
sub
or
lahf
loop
pop
testl
addr16
and
lcall
lret
mov
stc
mov
loopne
sub
cmp
mov
leave
addr16
mov
call
jg
mov
mov
jns
iret
adc
push
sub
or
inc
push
mov
aas
sbb
es
or
adc
test
cmp
and
outsb
jge
mov
sbb
lret
test
sbb
insb
test
incb
add
xchg
imul
sahf
mov
daa
dec
xor
pop
inc
jg
add
in
pop
outsb
dec
adc
or
dec
cmpsb
aas
jb
jae
jb
inc
push
in
xor
sahf
dec
sti
fwait
add
sub
loope
in
enter
and
mov
psrlw
popa
xchg
pop
xchg
subl
lret
cmp
in
cmpl
ss
push
push
cs
xchg
dec
aaa
mov
and
je
stos
push
mov
pop
jecxz
loop
inc
push
es
push
pslld
adc
fmul
pop
fidivs
repz
int3
sbb
rcpps
mov
imul
test
add
or
mov
xchg
dec
in
pop
call
subb
sub
in
mov
aaa
aad
sub
sub
inc
jg
push
mov
pop
in
sub
jno
pop
jno
jo
lret
imul
push
movsl
jle
lds
pop
or
pop
mov
repz
mov
sub
cmp
sahf
in
rclb
insl
fildll
inc
mov
rclb
mov
lcall
test
push
enter
mov
dec
jno
movsb
iret
fdivl
nop
mov
imul
jecxz
std
es
pop
shrb
jmp
movsb
iret
aaa
and
in
shrl
xchg
jge
pop
or
divl
nop
pop
into
xchg
sti
xor
out
jge
cmp
test
fsubs
insl
mov
pop
repz
imul
inc
popf
das
cmpsl
mov
adc
inc
dec
fnstsw
fstpl
inc
pop
stc
std
dec
enter
xor
push
iret
cwtl
xchg
pop
sbb
jnp
lock
push
xor
push
std
push
mov
ds
mov
add
outsl
pop
jge
sub
stc
nop
sub
jp
ja
cs
and
mov
jg
aas
and
jmp
mov
test
cmp
call
sbb
imull
pop
mov
mov
cmp
sub
ljmp
insl
ds
fwait
mov
mov
add
insb
pop
sbb
loope
xor
inc
mov
xchg
popf
jo
mov
adc
pop
dec
loop
mov
or
shrl
cmp
mov
push
jmp
add
clc
aas
rclb
rcr
cli
push
inc
ficoml
scas
lods
jecxz
mov
mov
js
mov
mov
lahf
out
pop
xchg
cwtl
ja
pop
mov
test
mov
push
out
test
dec
mov
dec
lret
mov
ffree
dec
inc
inc
push
jne
insb
iret
call
ret
push
adc
inc
pop
pop
popf
xchg
aas
xchg
mov
jno
hlt
cmp
fistpl
mov
lea
add
hlt
push
je
add
mov
xchg
adc
aad
cmpsl
ret
jmp
dec
shrl
mov
and
and
and
out
shl
push
jmp
lahf
jbe
and
nop
mov
adc
jle
pop
xchg
outsl
test
nop
into
pop
sub
push
jecxz
aam
and
testl
cli
inc
mov
repnz
lcall
dec
imul
pop
andl
clc
hlt
pop
ljmp
jge
xor
bound
cmpsl
or
jecxz
loope
cmp
repz
push
cmpsl
dec
ja
test
incb
ja
push
je
scas
pop
adc
clc
cmc
pusha
insb
mov
popf
insl
inc
add
sbb
pop
sahf
mov
out
cmp
data16
das
mov
enter
jmp
ss
mov
addb
sub
mov
mov
test
icebp
dec
mov
gs
pop
repz
jb
inc
stos
imul
add
std
adc
stos
xchg
cmp
pop
insb
pop
push
enter
pop
cwtl
pushf
mov
dec
or
fisttpll
dec
and
and
ret
lcall
adc
pop
cli
dec
into
mov
inc
and
mov
enter
sub
popf
fidivrl
lea
dec
nop
cmp
jne
jb
pop
test
lea
push
adc
mov
jns
adc
repnz
mov
add
std
or
dec
fadds
aaa
cmp
push
leave
xor
ret
sub
bound
negb
ss
xchg
addr16
cmp
mov
repz
subps
sahf
movl
loop
jae
push
or
cmp
hlt
stc
sbb
and
adc
aaa
das
and
test
mov
sbb
icebp
push
or
ja
addr16
mov
in
and
jmp
fnstenv
sub
movsl
bound
hlt
sbb
sbb
mov
dec
cs
inc
and
pop
cmc
xor
out
push
pop
inc
ds
fisubs
push
mov
and
push
negl
mov
arpl
xchg
mov
cld
push
mov
and
fsts
cmp
mov
outsl
lret
out
add
sarl
or
mov
cld
es
inc
inc
jnp
mov
or
add
inc
pop
mov
mov
xor
out
pop
xor
push
bound
xor
push
arpl
in
dec
jne
jae
not
push
fucomip
sbb
inc
test
imul
jno
out
mov
xchg
fbld
cmp
cltd
imul
adc
pusha
xor
fdivr
jb
pop
mov
das
mov
out
sbb
cmp
std
xor
ds
call
icebp
sti
sub
and
leave
stos
fimull
test
pop
mov
test
out
popf
adc
xchg
mov
add
mov
cmp
sbbl
mov
jbe
movsl
or
daa
divl
push
sub
fadd
xor
pop
jb
sub
jl
sbb
mov
dec
popf
sbb
xorl
stos
fsubs
xchg
lock
sbb
xchg
or
cs
aad
lods
inc
mov
pop
jge
jo
inc
fisttps
addl
sarl
cmc
enter
movsb
push
pushf
pop
jnp
jnp
xchg
scas
leave
test
add
sbbb
ds
pop
inc
cmc
dec
lock
jb
xchg
cwtl
mov
dec
dec
inc
add
ja
call
subl
mov
lods
push
sub
xor
sbb
lods
dec
arpl
imul
scas
idiv
and
loope
cld
or
xchg
in
bound
shl
je
inc
xchg
test
mov
cmp
movsb
movsb
xchg
imul
popf
outsl
fcompl
pop
pop
repz
add
cmp
scas
pop
nop
or
xchg
negl
add
inc
mov
repnz
fstpt
test
ret
push
jmp
test
aad
jbe
sti
cmp
ss
push
jecxz
ljmp
mov
cmp
test
dec
cwtl
mov
and
xor
mov
test
xchg
bound
jle
jne
jno
adc
insb
dec
out
push
movsb
or
jl
sbb
pop
int
mov
add
ret
xchg
dec
aam
aad
add
scas
mov
mov
imul
inc
mov
dec
out
cmp
and
push
pop
lds
add
push
push
adc
clc
stos
gs
mov
bound
jle
cmp
mov
test
and
jmp
lea
mov
pop
add
mov
push
out
adc
mov
mov
lock
daa
push
lcall
jge
sbb
xchg
sub
fwait
add
cmp
adc
stos
fdivrp
add
loope
and
fbstp
adc
add
adc
mov
outsb
pop
mov
aaa
sbb
pop
adc
movsl
leave
jmp
mov
jne
std
jge
and
insl
ss
mov
jo
dec
adc
mov
or
inc
scas
jmp
and
or
dec
pop
sub
loop
pop
daa
dec
jnp
jae
cmpb
xchg
dec
mov
xchg
xor
inc
mov
push
mov
cmpsl
xor
jge
mov
inc
lcall
or
mulb
pop
icebp
xor
mov
incb
int
sahf
pop
aam
into
add
ss
jmp
aad
push
shlb
icebp
push
fidivs
sbb
jbe
push
mov
sbb
test
imulb
aad
outsb
push
lods
xchg
inc
out
inc
mov
inc
and
jmp
xor
mov
cmp
sub
int3
push
adc
push
out
jmp
lea
jno
xor
fdiv
pushl
pop
mov
test
ja
push
subl
mov
daa
mov
loopne
daa
shrb
pusha
pop
mov
dec
ret
scas
adc
mov
xchg
nop
fsubrp
addr16
cmp
stos
dec
jo
or
movsb
push
and
pop
test
inc
adc
cmp
je
jp
mov
mov
pushf
loope
mov
jnp
hlt
lds
test
fucom
mov
mov
ret
and
mov
xchg
call
jl
mov
add
mov
cwtl
mov
popa
sbb
xchg
push
xchg
in
aaa
leave
push
cmp
sbb
cmc
pop
mov
out
lcall
popf
mov
dec
xor
cmp
pop
mov
jle
adc
cmpsb
outsl
jbe
jmp
lahf
jmp
insb
pop
mov
ja
idiv
inc
mov
pop
xchg
push
push
sbb
enter
inc
sti
sbb
lods
xchg
cmp
push
sub
lcall
sahf
cmc
test
dec
add
jno
sbb
arpl
mov
push
inc
sti
imul
mov
mov
dec
push
daa
ja
mov
mov
outsb
xor
sti
adc
and
ret
jno
mov
std
dec
ljmp
add
inc
mov
test
mov
in
in
popf
mov
push
lock
sub
pop
leave
and
adc
notb
xor
leave
dec
push
iret
ret
aad
fldenv
fildll
scas
cld
add
cmp
into
pushf
xor
jmp
xor
cmp
pop
dec
jmp
mov
fldl
popa
popa
fadds
fwait
lea
adc
jns
test
cmc
jne
push
push
inc
call
movsb
mov
stos
jmp
gs
mov
dec
stc
pop
stc
adc
daa
sar
sbb
into
dec
aad
and
and
movsb
push
cwtl
push
push
fistps
jmp
adc
lods
leave
mov
jmp
mov
mov
push
addl
popa
daa
bound
or
hlt
aad
stos
and
jmp
or
fbstp
or
xchg
mov
add
adc
dec
out
int3
repnz
cmp
jne
push
add
scas
or
ret
mov
xor
jnp
pop
ss
mov
mov
movsb
pop
call
jno
xchg
pop
or
add
aas
pop
mov
mov
push
lahf
adc
je
ss
and
roll
dec
add
popf
cli
or
out
inc
mov
mov
pusha
jle
leave
nop
mov
mov
sub
pop
sbb
imul
cmp
mov
mov
test
scas
sbb
and
lods
int3
mov
dec
or
or
sbb
push
iret
shlb
push
mov
arpl
and
insl
sbb
aas
dec
out
jle
bound
bound
sub
jns
and
xor
jmp
pop
fldenv
pop
popa
aas
shl
lret
leave
jmp
mov
out
jo
xor
and
pop
ss
fimuls
rorb
pusha
ja
pushw
daa
mov
ljmp
jo
adc
inc
add
adc
sub
enter
fucomi
movsb
sbb
add
mov
xchg
mov
mov
int3
inc
jp
inc
inc
cmp
cld
pop
arpl
and
mov
test
cmp
movntq
pop
cmpsl
je
shrl
mov
pop
xchg
xchg
lahf
mov
insb
cmp
andl
cmpxchg
movsl
imul
sahf
mulb
rclb
ret
inc
adc
push
dec
jmp
setbe
in
pushf
push
add
push
push
les
sub
xchg
or
cmc
add
xor
sar
mov
cmp
sub
mov
shlb
cltd
jns
aam
sarb
jbe
pop
and
cmp
not
sub
fistpll
jnp
in
push
testl
mov
xor
call
sub
in
mov
push
xchg
inc
inc
mov
push
jl
je
andb
pop
ljmp
int3
xor
or
or
aam
sbb
std
push
pusha
push
sbb
ficompl
ret
shll
aad
adc
lcall
pop
push
out
popaw
and
mov
push
and
fstl
dec
xchg
lret
loop
sub
pop
dec
push
or
cld
das
clc
orb
pop
scas
stos
lea
xchg
loop
xor
loop
cmp
add
mov
rcll
roll
mov
dec
cwtl
fldt
sbb
sbb
lret
repnz
push
mov
sbb
aaa
shll
outsl
icebp
cmp
nop
outsb
ret
inc
stc
orl
roll
pop
aaa
divps
movsl
ljmp
daa
or
jne
cmp
cmc
inc
in
lods
mov
mov
popa
dec
clc
outsb
adc
leave
pop
mov
sbb
fisttps
add
stos
rclb
in
insl
aas
adc
inc
sbb
pop
lahf
popa
jnp
jno
aad
cltd
sub
mov
fldcw
pop
cmpsb
jl
subl
and
pop
mov
mov
add
lds
pushf
leave
fwait
sbb
sbb
and
xor
mov
ss
push
leave
stc
mov
loopne
sbb
fbstp
mov
test
pop
les
jnp
xlat
call
mov
jne
xchg
push
cwtl
inc
dec
xor
pop
test
bswap
sbb
nop
mov
clc
jns
xlat
pushf
scas
and
cmp
and
imul
mov
inc
pop
pop
outsb
nop
push
add
xor
xchg
bnd
movl
sub
add
in
mov
test
add
lods
jp
test
xor
inc
test
or
sub
icebp
xor
cmp
mov
xchg
in
shl
mov
jnp
aaa
andb
jae
in
fcom
lret
add
and
lds
insb
aam
mov
cmp
xlat
mov
or
xchg
ds
sti
negb
push
mov
inc
xor
adc
push
fists
addl
idivl
mov
js
mov
pop
xlat
adc
push
pop
add
andb
cmp
nop
mov
xor
sbb
repz
dec
or
movsb
daa
jne
xchg
jno
stc
xor
sub
fs
lock
cs
cmpl
cmc
mov
scas
shll
stos
jecxz
xchg
dec
mov
xchg
inc
mov
outsb
mov
shll
mov
mov
push
movsb
repnz
les
jg
mov
jnp
ss
faddl
mov
pop
dec
dec
aas
dec
repz
mov
sub
daa
hlt
shlb
nop
jb
repz
das
pop
andb
xor
xorl
or
roll
add
insl
add
add
fidivrl
lcall
or
or
sbb
xchg
push
xor
shl
mov
mov
fs
rcrl
cmp
jecxz
lods
or
lock
mov
pop
push
jne
xor
scas
inc
or
dec
std
sbb
xchg
inc
jno
icebp
les
int
mov
mov
or
mov
into
cld
xor
div
pop
cmp
fldl
popa
in
fldt
leave
rolb
mov
ret
mov
mov
test
shlb
sahf
adc
mov
shll
or
js
jmp
in
mov
fdivrs
jo
mov
cmp
aas
int
pop
fucomi
in
ficoms
xor
xor
lahf
in
lock
push
pop
pop
jmp
sbb
insl
push
cmp
pop
xchg
sbb
frstor
jmp
stos
inc
stos
loopne
repnz
adc
fadd
pop
cs
sub
xchg
or
jo
int3
inc
add
addb
shrb
add
and
rorl
or
push
and
aam
je
sarl
addr16
xchg
in
add
adc
int3
sub
xor
stos
cmp
outsl
loopne
inc
cmp
mov
rcrb
adc
les
fisubs
mov
aam
clc
fdivl
xchg
mov
arpl
leave
push
add
psubsb
push
xchg
popa
daa
sbb
dec
xchg
movsl
addb
mov
ret
pop
push
xchg
xor
xor
sbb
mov
jb
das
mov
fcmovb
dec
mov
pushf
les
and
mov
xchg
and
inc
scas
push
or
ret
cmp
pop
push
mov
lret
fmuls
push
pop
scas
test
xchg
push
in
cmp
sahf
xchg
data16
mov
bound
and
pop
mov
int3
pop
outsl
shl
inc
movsb
jp
cmp
je
push
mov
add
stc
cmp
pop
push
mov
dec
mov
lock
push
dec
or
mov
dec
adcb
shrl
pop
sub
arpl
xchg
movsl
cmpw
fldenv
ljmp
nop
out
xchg
jbe
movsl
adc
es
fdivrp
imul
loope
hlt
mov
es
xchg
js
pushf
xor
jp
push
or
cltd
and
aam
sbb
mov
aaa
inc
lock
push
movsl
pop
call
cmp
add
mov
aad
sub
ja
mov
push
push
sbb
pop
scas
mov
and
jg
or
mov
rolb
gs
addr16
gs
cmp
das
nop
mov
mov
cmp
lods
ds
imul
insb
pop
out
pushl
cltd
in
ja
jae
fwait
mov
and
mov
loope
sbb
sbb
mov
sahf
jge
pop
in
movsl
cli
in
cmp
rep
xor
mov
add
das
jo
lds
xchg
or
xchg
xor
push
stos
xor
mov
jne
je
push
and
sub
pop
stc
xor
loope
nop
imul
xor
or
call
pop
inc
sbbl
mov
dec
inc
adc
popf
cli
mov
sub
enter
lret
mov
loopne
mov
push
jmp
stos
mov
or
xor
adc
cmp
insl
lret
jmp
adc
cmp
inc
or
cld
test
cmp
lock
mov
mov
mov
jmp
push
pop
in
dec
pop
push
pop
push
mov
pop
lods
int
dec
adc
sbb
adc
adc
je
out
cwtl
stos
inc
insb
mov
xchg
xchg
cmp
cwtl
ret
pop
call
fcmovu
mov
std
loop
into
add
pop
fdivrl
aaa
pop
pop
icebp
imul
cmp
dec
leave
mov
out
test
scas
ljmp
mov
xlat
mov
cmp
shrb
push
mov
mov
daa
mov
rorb
mov
jne
fwait
push
leave
stos
cmpsl
adc
adc
xor
stos
dec
nop
inc
mov
xorb
mov
mov
sbb
mov
add
js
xchg
enter
and
pushf
inc
and
push
ficoml
popa
sarl
dec
sbb
enter
push
shl
loope
mov
in
mov
mov
pop
jp
in
pop
lea
adcl
das
adc
pop
movsl
push
pop
cmp
push
out
aam
lret
push
dec
enter
fwait
cli
lods
sub
out
inc
ljmp
dec
aad
add
scas
mov
popa
andl
inc
push
cmpb
pop
bound
mov
aad
stos
addb
sub
xchg
inc
outsl
xor
pop
fcompp
sbb
sub
cli
lret
or
std
sub
add
enter
or
xor
and
dec
pusha
popa
fs
mov
jecxz
fstps
lret
dec
stos
mov
sbb
lods
addr16
outsb
add
in
inc
and
rcrb
cli
icebp
cmpsb
jo
inc
and
movsl
gs
outsl
aas
adc
ja
mov
or
insl
xchg
adc
push
or
xchg
in
aas
aaa
fiaddl
aaa
sub
mov
in
xchg
bound
rorl
js
aas
jne
fwait
in
xchg
test
dec
lods
adc
cwtl
dec
mov
pop
pusha
loope
lock
js
push
add
imul
mov
xor
pop
and
scas
js
adc
add
dec
xor
cmp
add
pusha
xchg
gs
push
in
lods
mov
cmpsb
jbe
jmp
dec
jmp
cmp
and
clc
push
or
dec
xchg
mov
nop
pop
jmp
pop
shlb
in
enter
das
rcl
fdivrl
das
in
dec
repnz
in
adc
imulb
add
mov
fcomps
insb
mov
mov
inc
mov
dec
xchg
inc
mov
xchg
arpl
std
iret
sub
mov
loopne
insb
mov
lcall
pushf
ret
mov
dec
fistpl
xchg
jmp
dec
into
js
cld
xor
pop
scas
mov
arpl
aas
lcall
dec
mov
sub
out
or
popf
sub
loop
mov
pop
sti
imul
add
sbb
mov
dec
and
mov
jl
push
daa
leave
std
push
movb
cltd
popa
sarb
test
ss
lock
and
and
mov
test
xchg
test
adc
aad
sub
sti
sbb
dec
leave
lds
cltd
popf
cwtl
sub
frstor
pop
sbb
lret
fs
and
mov
sbb
pop
cmp
and
popa
sub
inc
add
dec
stos
ficoms
lods
mov
into
gs
mov
clc
jne
clc
push
jno
xor
inc
icebp
enter
sahf
stos
sub
ret
jb
lods
jg
inc
pop
popa
mov
push
cmp
push
popf
iret
xchg
cli
adc
mov
and
jbe
sbb
jmp
and
fldt
xchg
or
xor
push
sub
sbb
mov
loopne
sti
mov
loope
xchg
popa
xchg
mov
dec
inc
pop
fnsave
jmp
xchg
ret
adc
inc
test
jmp
add
sub
jle
adc
cltd
pop
cs
mov
rcll
repnz
mov
aam
fisttpll
outsb
sub
negb
add
mov
and
insb
push
in
adcb
out
faddl
jae
jp
xor
pop
add
jne
sbb
mov
lret
ds
xor
imul
cltd
loop
add
cmp
xchg
aas
cmp
jp
fcomps
fcmovnb
outsl
jge
clc
jno
pop
inc
mov
sbb
or
into
out
movsb
and
inc
adc
popf
insb
jnp
in
arpl
jmp
cltd
in
enter
pop
mov
mov
mov
daa
mov
lcall
imul
out
iret
aas
xchg
es
repnz
sbb
inc
xchg
cmc
aad
jno
stos
jge
add
pop
or
outsl
jge
ltr
jb
pop
rcrl
xchg
jmp
ret
cmpsb
insb
mov
add
mov
fs
jle
pusha
out
xor
sub
xchg
or
cmpsl
fsubrl
popf
mov
pop
xchg
mov
gs
xchg
mov
das
sub
jge
in
xchg
lods
lock
xor
mov
mov
negb
stos
faddp
jns
leave
out
stos
bound
sti
stc
sbb
sub
stc
hlt
mov
xor
sbb
or
test
mov
add
pop
imul
xchg
nop
movsb
mov
mov
pop
lahf
xchg
fstl
iret
dec
inc
aas
imul
jle
cld
scas
fs
das
mov
cmc
test
jp
neg
jb
mov
push
insl
mov
dec
hlt
test
loop
mov
mov
and
jne
test
hlt
imul
add
push
and
push
ret
push
cmpsb
sub
pusha
adc
movsb
xor
dec
fldt
or
dec
mov
out
ss
inc
in
adc
out
push
cs
hlt
mov
jecxz
loop
xorb
addr16
cwtl
dec
push
xchg
cmp
das
mov
sahf
arpl
sub
add
add
jne
out
jecxz
divl
cwtl
push
or
inc
cmp
loopne
push
out
sub
fdivr
push
mov
inc
jmp
shlb
push
mov
add
xchg
pop
mov
xor
and
arpl
xor
popl
sbb
jle
cli
sahf
pop
jae
or
outsb
es
adc
pop
adc
mov
imul
lods
fnstenv
or
imul
jb
bound
xor
push
arpl
das
cs
mov
xor
sar
mov
pushf
xchg
movsb
sbb
icebp
pop
notb
lods
lods
add
jg
lods
lret
popf
push
mov
mov
sahf
inc
push
jns
gs
xor
dec
cmp
jae
in
adc
adc
out
mov
and
pop
mov
jb
cmc
call
sub
cmp
mov
int
lahf
adc
stc
insl
jo
gs
mov
pop
pop
insl
and
repnz
hlt
fidivl
fwait
stos
and
add
iret
scas
xlat
pop
hlt
call
pop
nop
pop
lds
mov
lds
xchg
mov
push
fistpll
add
jno
jbe
sub
jbe
push
xor
and
in
loop
mov
loopne
mov
and
fwait
rcll
hlt
aam
pop
ret
test
mov
xchg
xlat
mov
push
cwtl
daa
stc
subb
lock
add
sar
aaa
cli
stos
mov
repz
adc
pop
cmp
push
xor
nop
cmp
jle
push
mov
mov
mov
inc
test
and
inc
movsl
xchg
push
mov
testl
rcr
xor
sarb
xlat
adc
out
lock
ret
jns
xorb
ret
nop
bswap
push
cmp
dec
cli
push
jns
mov
sub
fcomp
out
bound
xor
mov
ss
rcrb
push
mov
and
imul
pop
pop
dec
outsb
jne
and
or
fisubrl
int3
jg
xchg
mov
testb
int3
imul
sub
into
or
clc
mov
sti
and
adc
idivl
lock
mov
jle
in
ljmp
mov
cmpsl
mov
fmull
push
jp
test
jg
loop
push
push
or
rcr
leave
cwtl
mov
mov
pop
hlt
sbb
xchg
aam
out
scas
rcrb
lcall
mov
mov
cmpsb
cmpsb
mov
stos
call
inc
mov
aad
insb
cmc
or
rclb
dec
xor
lahf
mov
daa
rcl
mov
in
aam
push
jmp
lcall
lods
sbb
or
mov
mov
inc
add
mov
imul
xchg
xor
mov
fidivrl
dec
push
add
xor
lahf
and
jge
imulb
and
outsl
xor
mov
or
inc
testb
fnstcw
xchg
aam
cmpl
xchg
adc
mov
jl
fadds
rolb
mov
mov
dec
push
jne
fcomip
cmp
mov
out
add
jge
das
or
adc
mov
push
clc
lcall
xchg
iretw
ds
in
adc
pop
adc
in
rcrl
dec
pusha
sbb
stos
sub
sub
das
roll
dec
cmpsl
mov
add
push
in
xchg
es
xchg
push
cmp
pop
push
loope
sbb
hlt
xchg
jbe
into
jmp
aad
push
loope
push
out
or
outsl
add
jge
std
jg
aad
mov
scas
idiv
flds
adc
xchg
jno
aas
push
clc
cmp
call
mov
xor
nop
mov
ss
ja
jle
xchg
inc
dec
cmpb
stc
in
test
or
shll
arpl
lcall
test
mov
inc
sbbl
out
stc
lret
xor
lcall
xchg
push
dec
les
add
xchg
add
xor
sub
sub
xor
outsl
dec
int3
jmp
pop
pushf
lahf
fdivr
sub
adc
fs
emms
cld
repz
lods
adc
fmull
and
xchg
or
xor
mov
movsb
mov
cmp
sbb
inc
and
mov
scas
ret
dec
ljmp
aam
fmulp
fcomps
cmpsl
push
popa
add
mov
pusha
lock
sbbb
cmp
addl
mov
cmc
mov
loopne
mov
inc
jae
mov
mov
pop
lret
xor
dec
fisubl
cmp
jne
mov
bound
inc
pop
daa
inc
inc
sub
movl
add
int
cmp
fldl
aam
fs
or
and
movsl
or
in
inc
enter
fs
pop
call
xor
loope
pop
push
dec
cmp
dec
adc
xor
sbb
ret
repnz
jge
xchg
and
push
pop
adc
test
popa
sub
mov
xor
outsb
mov
imul
dec
or
in
add
jns
in
or
mov
sbb
xchg
xor
sti
bnd
lea
iret
cmp
dec
fwait
sub
or
xchg
adc
jno
cmp
lret
inc
xor
ja
aam
jp
cwtl
aas
add
aad
cs
data16
xchg
imul
outsb
xchg
adc
xor
aaa
sbb
jnp
inc
cmp
and
cmp
jg
call
pop
adc
add
xchg
lea
mov
jb
gs
scas
aad
jmp
inc
xchg
movsl
dec
xchg
mov
gs
je
imul
sar
jno
inc
mov
shlb
or
mov
jns
shll
mov
add
test
adcb
mov
sub
jp
mov
push
cwtl
test
xor
inc
push
push
repz
jecxz
outsl
add
stc
lcall
inc
lock
xchg
mov
jecxz
pop
xchg
and
jp
xchg
push
cli
in
push
js
xchg
mov
mov
dec
enter
jp
loop
jno
scas
lret
icebp
or
push
inc
and
xor
pop
lahf
sbb
push
pop
pop
or
xchg
test
cmpsl
cmpsl
sub
fs
and
or
ret
js
iret
nop
and
in
test
or
fdivrs
xchg
push
or
jecxz
lds
xor
sub
add
and
iret
pop
mov
push
mov
ss
push
push
ret
loop
imul
xor
cmp
sti
movsl
xor
dec
push
jge
les
pop
dec
cmp
sbb
push
call
push
icebp
outsb
inc
pop
push
jp
mov
xor
sub
sbb
xchg
fwait
mov
outsl
cmp
jle
lahf
shr
sbb
shrl
dec
rcrl
adc
inc
push
push
scas
call
imul
mov
iretw
sbb
loope
mov
pop
addr16
xor
jp
mov
in
int3
xchg
xchg
pusha
mov
inc
cmp
jg
lahf
and
das
arpl
sahf
mov
aas
rcrb
pusha
ss
hlt
cmc
xchg
loop
cmpsl
je
fcom
dec
pop
lods
out
ret
dec
push
sbb
call
or
cmp
int
into
cmp
xchg
or
lods
sti
xor
sbb
lret
aas
xchg
push
popf
push
out
movsl
lds
xor
sbb
movsl
sbb
sbb
xorl
int
movb
pushl
dec
ljmp
arpl
cmp
mov
out
stos
arpl
in
adc
lock
and
fcompl
loopne
iret
xor
subl
and
xor
dec
inc
push
enter
adc
mov
jae
adc
jnp
pushf
adc
pusha
xchg
dec
inc
sub
jmp
dec
cld
das
dec
pop
dec
int
jge
movsb
shlb
xor
fs
mov
outsb
shll
movsb
mull
fwait
loop
and
mov
js
cmpsb
xor
push
test
stos
inc
sbb
std
iret
hlt
inc
pop
aad
pop
jnp
cmp
adc
jl
outsb
adc
aaa
and
sbb
dec
cmpsb
push
pop
dec
test
nop
fwait
shlb
cltd
int3
ja
stos
push
cs
jge
push
mov
jg
lea
push
int3
xchg
push
fcmovu
xchg
notl
mov
dec
js
pop
data16
stos
cmp
dec
mov
pusha
or
inc
jo
push
xor
ja
jle
and
cmp
movsl
sub
ret
pop
jle
lret
cmp
sub
pop
das
ficoms
fwait
or
out
cli
lcall
enter
lock
negl
scas
fmuls
xchg
cmp
loope
outsb
xchg
or
and
push
jg
movsb
leave
ja
push
cmpl
orb
aam
scas
in
push
xchg
pop
sarb
prefetch
lahf
xor
int3
jae
xor
jg
pusha
sub
push
push
neg
push
test
movsb
pop
fisttpll
out
popf
dec
inc
stc
xchg
loopne
rorw
das
pop
xchg
out
flds
push
add
aaa
negl
fdivrl
sbb
cltd
xchg
mov
aaa
fnstcw
add
shl
mov
decb
int3
jae
scas
insb
adc
cmpsl
in
mov
mov
push
bound
and
int
cmp
cmovne
jb
sbb
pavgb
int
jmp
inc
lea
or
jbe
or
xchg
mov
jg
imul
les
mov
ss
out
and
mov
mov
push
jmp
fwait
jns
jno
jmp
dec
cwtl
lea
or
push
aaa
inc
fwait
enter
sbb
fisttpl
movsl
in
shll
sbb
repnz
mov
cmp
xchg
fists
ss
ror
xchg
sub
sbb
out
mov
sub
mov
mov
push
add
xchg
cmp
jno
mov
inc
mov
push
lahf
lods
popa
jmp
fisubrs
jnp,pt
mov
icebp
adc
push
pop
orl
cltd
nop
jo
dec
cmp
ss
shlb
int
xor
push
add
in
popf
inc
subb
cmp
inc
sub
mov
mov
and
loop
mov
sete
pop
xchg
adc
or
fs
out
adc
inc
sub
inc
shll
cmp
push
testb
imull
aam
dec
adc
dec
push
push
sub
lahf
mov
jno
sahf
mov
inc
das
add
jge
pusha
push
sbb
shl
and
jmp
mov
cmpsl
icebp
ja
rorb
ret
xchg
sti
push
jo
cwtl
jb
fs
loopne
aas
jo
add
mov
shlb
scas
in
icebp
dec
and
push
push
scas
xlat
sub
flds
adc
dec
test
jecxz
inc
rsqrtps
bound
loope
mov
lods
subb
dec
enter
pop
repz
loopne
aaa
mov
add
je
fadds
loop
inc
test
testl
bnd
mov
out
insl
and
ret
or
pusha
bound
mov
outsb
pop
int
add
xor
adc
loope
xchg
fnsetpm(287
mov
sbb
ret
mov
loopne
jbe
or
rcr
mov
xchg
jno
es
ljmp
fldenv
mov
stos
mov
lahf
cmp
jge
js
mov
in
cli
sbb
inc
and
dec
out
xchg
popf
add
inc
sbb
pop
fisttps
movsb
xchg
icebp
bound
cltd
mull
je
xor
pop
xor
mov
ja
cwtl
into
popf
cmp
hlt
stc
repnz
fisttpll
jmp
xor
add
jecxz
test
fs
inc
ret
gs
movsl
loopne
fidivrl
scas
dec
mov
nop
xlat
or
fwait
outsb
cmp
nop
xchg
inc
mov
mov
insl
test
inc
sbb
rcrb
nop
in
push
divl
iret
xor
pusha
mov
cltd
aaa
adc
ljmp
mov
push
sets
sbb
jle
xchg
fstps
xlat
push
stc
push
jecxz
clc
cmp
lcall
add
pop
popf
adc
imul
mov
ds
not
cmc
mov
lcall
dec
popf
arpl
stos
int
or
lods
mov
aaa
sbb
daa
in
test
fisubrl
stos
jecxz
pusha
dec
negb
xlat
sub
loop
inc
ret
leave
icebp
test
fs
ret
icebp
mov
and
jmp
dec
cmc
or
lret
pop
je
pop
shlb
pop
push
dec
mov
jmp
movsl
enter
pop
or
test
pop
in
and
std
repnz
aaa
push
sbb
fs
out
or
or
or
pop
icebp
mov
inc
xor
movsb
add
inc
pusha
jle
cld
js
push
or
mov
xchg
mov
xor
in
out
jae
in
popa
push
cmp
fnstcw
dec
movsb
add
cmp
fstpl
cwtl
daa
test
cmpsl
aaa
add
lds
push
sbb
sub
sub
mov
or
clc
mov
inc
sahf
addr16
dec
negb
jo
sbb
jo
cmp
int
inc
lds
movsl
fildll
and
jp
pop
jmp
int
jo
arpl
jne
outsl
subl
push
int3
xor
stc
cmp
xchg
aam
call
in
mov
aam
clc
sub
sub
jp
pop
gs
cltd
sbb
jne
shll
nop
xor
bound
jns
aam
xor
ds
xchg
cmpsl
sbb
pop
imul
or
adc
fs
jae
jmp
lods
jno
ja
jo
pusha
xchg
fldt
pop
out
in
jmp
icebp
pop
fmulp
imul
bound
add
jle
sub
mov
push
push
jmp
push
sub
add
stos
lea
xchg
push
nop
in
leave
mov
pushf
cltd
cli
mov
dec
push
sbb
pushl
push
jmp
mov
push
jmp
mov
cmpsl
push
sbb
adc
idivl
fcmovu
or
test
lods
inc
nop
enter
fstl
push
cli
imul
xchg
jbe
lea
mov
mov
sti
pop
xchg
int
addr16
cmp
cmp
jge
add
stos
jbe
lcall
dec
cmpsl
ljmp
addr16
cmc
cmp
mov
lock
int3
cmp
sub
sub
push
test
aam
fistpl
mov
js
or
bnd
icebp
les
push
es
inc
mov
inc
push
jg
inc
jae
arpl
dec
fucomp
mov
in
data16
into
mov
inc
push
aad
jecxz
mov
push
push
push
test
cmp
call
rorb
jecxz
ss
add
lock
cltd
adc
out
es
movsl
mov
pop
ret
sbb
das
outsb
adc
mov
pop
mov
inc
xor
cmpsl
push
movhps
jecxz
sahf
or
movsb
sub
out
jmp
push
jae
xor
jmp
lcall
adc
xchg
and
xchg
mov
xorl
xchg
mov
out
leave
adc
hlt
shrl
adc
mov
ret
xor
sbb
cld
mov
jp
pop
pop
pop
pop
stos
and
mov
lds
ds
mov
sub
or
pop
jns
loop
jno
adc
push
orl
test
rcr
sbb
es
dec
outsl
xor
je
clc
sub
pop
insl
in
cmp
jo
fcoml
cltd
adc
js
fsubs
sub
jns
shll
adc
sub
into
nop
or
or
sbb
push
filds
out
mov
addr16
sbb
sti
push
repnz
test
sub
push
aas
int3
int
popf
fwait
lock
lcall
ds
push
pop
add
cmp
xchg
ret
cmp
pop
sub
ret
jo
and
adc
fstl
mov
stos
cwtl
out
push
dec
lods
out
xchg
in
and
in
movl
sbbb
sti
inc
aas
daa
xchg
and
fidivs
imul
aaa
push
push
adc
arpl
cltd
sub
xlat
cmp
xchg
and
jae
outsb
push
fildll
push
xor
inc
enter
clc
dec
insl
cmp
ret
push
sahf
mov
cld
nop
pop
insb
xchg
outsl
and
jecxz
imull
repnz
push
xor
repz
ffreep
sbb
insl
ja
cs
sub
std
xchg
orl
mov
jmp
testl
xor
dec
inc
cmp
cmp
jae
aam
sbb
clc
out
nop
push
pop
loopne
sbb
aas
loop
ljmp
scas
in
pop
je
outsl
daa
daa
in
jl
push
sahf
or
scas
and
adc
pop
popa
fcoml
pop
dec
inc
in
int3
pop
js
cmp
mov
sub
jnp
lcall
mov
gs
or
aad
xchg
fwait
lea
jg
sbb
inc
repz
ret
std
dec
sbb
cmpsb
je
sbb
push
rcpps
push
stos
clc
mov
adc
or
cmc
sbb
fcomps
movsl
push
icebp
pusha
add
bound
mov
setge
cmp
sub
pushf
ds
mov
sbb
xor
push
jp
out
fsubp
push
xlat
repnz
cmp
sbb
rcrb
lret
ljmp
mov
mov
push
cmp
enter
and
es
js
jl
adc
dec
bound
jb
and
fsubrl
lods
les
loop
gs
push
jo
sbb
jbe
js
shll
and
or
movsb
pop
pop
lret
jnp
aad
sbb
sub
jmp
inc
xor
add
cmp
pop
jmp
xchg
jo
in
sbb
icebp
cmc
mov
mov
pop
fcoms
mov
je
cltd
je
lret
cmc
popa
icebp
or
jg
test
enter
dec
xchg
push
dec
jno
mov
pop
loop
or
hlt
aas
xchg
sub
pop
push
cwtl
and
inc
out
pop
pop
inc
mov
pop
cmp
xor
mov
pop
xchg
inc
push
push
sbb
fildll
mov
out
adc
lret
push
cmpsb
sbbl
mov
leave
clc
mov
pop
scas
test
mov
je
xor
dec
clc
mov
xchg
pop
jp
in
pushf
popa
mov
push
pop
and
add
adc
int3
inc
jmp
pop
or
imul
lock
fimull
ret
loop
dec
ja
aad
sbbb
lret
sbb
hlt
xchg
pop
jne
stos
pop
xchg
test
lahf
rorb
xor
dec
adc
and
sbb
mov
outsl
aam
fbld
testb
mov
sub
into
cmp
mov
xchg
jp
inc
sarb
pop
data16
cmc
xchg
sbb
lea
rolb
adc
adc
xchg
xor
rcll
push
xchg
pop
mov
arpl
in
mov
xchg
and
sbb
scas
add
das
mov
loop
clc
inc
das
es
jle
sub
push
push
scas
call
pop
and
push
pop
call
int
cmpsl
xor
loopne
fisubrl
dec
xchg
fwait
in
pop
inc
inc
adc
mov
repz
out
jg
mov
stc
mov
mov
mov
idivb
int3
sub
cmp
xchg
cmp
or
mov
dec
pop
inc
xor
addps
xchg
inc
cmp
es
sub
or
lret
out
lcall
xor
stos
divb
jb
test
into
cmpsl
mov
dec
ficompl
movb
fiadds
mov
hlt
inc
pop
cmp
dec
xchg
xchg
in
loop
cli
cmp
andb
or
xor
pop
mov
mov
jno
add
xor
into
das
push
mov
ja
stos
ss
nop
pop
roll
sbb
or
pop
and
and
fists
xor
pushf
jp
and
push
cmpsb
dec
pushf
jmp
punpckldq
ljmp
sahf
std
nop
sub
lds
repnz
mov
pop
pop
mov
ss
bound
push
or
nop
push
outsb
xor
mov
test
xor
inc
mov
adc
cs
cmpl
add
pushf
pop
cmp
inc
ret
cmpl
mov
aam
dec
icebp
outsb
std
mov
cmpsl
mov
or
xor
lcall
outsb
enter
dec
mov
pop
addr16
std
shrl
je
mov
call
mov
mov
test
push
movsb
mov
mov
mov
or
mov
push
jle
sub
call
xchg
adc
into
stc
add
sub
mov
lods
outsl
lcall
adc
xchg
inc
out
add
fsubrl
push
xlat
aam
out
jmp
pop
cmc
test
lock
sbb
mov
lds
sub
dec
mov
xor
sbb
sbb
pop
daa
cld
pop
out
push
shrl
out
mov
push
in
cmp
lods
int
cld
iret
or
dec
ficompl
xchg
xchg
cld
icebp
sub
jl
mov
lds
mov
test
pop
xchg
outsb
sbb
or
sbb
jge
mov
test
fdivl
jbe
pop
jns
or
adc
ficompl
dec
outsb
mov
xchg
sub
movsl
xor
in
scas
daa
push
int
add
shrb
ljmp
pop
scas
and
mov
pop
mov
loop
cmp
mov
or
jmp
cmp
pop
outsl
add
pop
push
popa
test
stos
call
pushf
jo
xor
sub
cs
arpl
fsubl
xlat
shl
mov
enter
sahf
in
or
xor
aam
int
das
int3
sub
xchg
inc
psllq
cmpsb
popa
push
inc
movsb
xchg
es
push
adc
xchg
sbbl
and
nop
scas
mov
cmp
jb
jns
adc
out
out
roll
nop
mov
fstpt
sarb
xor
test
frstor
mov
lcall
xor
jae
leave
ds
lods
mov
insb
add
jne
jo
repnz
mov
jg
add
inc
stos
loopne
fdivl
fcompl
into
xor
cmp
or
cmpsb
cmp
mov
fwait
mov
fsubrl
test
mov
cmpsl
xor
mov
shll
xchg
jecxz
xchg
mov
sbb
inc
gs
ret
sub
xlat
cli
jb
repnz
inc
sahf
loope
inc
in
cmp
pop
fstpt
in
and
imul
sbb
fucom
jle
xchg
mov
lahf
cld
mov
leave
ja
pmaxsw
jae
push
lret
mov
daa
shrl
pop
out
xchg
and
pop
loopne
adc
mov
adc
cli
jb
and
nop
ja
pop
nop
stos
jnp
aaa
es
jno
insl
xor
xchg
icebp
xchg
push
mov
negb
shll
call
adc
and
adc
hlt
cwtl
add
icebp
jecxz
adcb
or
shl
mov
dec
ljmp
sbb
dec
dec
dec
pop
jae
stc
xor
sbb
lea
jp
push
jns
ljmp
push
imul
adc
in
gs
mov
iret
xchg
fstps
stc
mov
dec
adc
int3
pop
movsl
sbb
xor
mov
addr16
mov
fisubl
cmp
cli
inc
movsl
loopne
inc
mov
xchg
in
mov
fistpll
adc
pop
mov
or
roll
popa
ficoml
add
jnp
adc
xor
out
mov
pop
jg
xchg
xor
inc
inc
js
cltd
addr16
jecxz
adc
and
cmp
call
incl
mov
push
xor
dec
pop
aaa
into
pop
cs
iret
sbb
cmp
adcl
xchg
rolb
ljmp
lods
arpl
lret
sub
inc
scas
mov
xor
dec
jbe
fcompl
ret
xchg
out
bound
or
cmpsl
mov
pop
push
or
mov
sub
out
lret
loop
aad
leave
arpl
push
adc
in
or
mov
arpl
ret
sahf
stos
jno
stos
test
insb
xor
lret
inc
jns
inc
lret
mov
and
sub
inc
mov
and
dec
mov
es
push
clc
or
idivb
inc
cmp
lds
and
imul
loop
bound
jb
iret
loop,pt
dec
and
fistl
jecxz
dec
lods
mul
pop
cmp
cltd
subl
dec
cltd
mov
in
xchg
pop
adc
cltd
cmp
test
mov
xlat
hlt
xchg
cmpsl
inc
mov
or
cmpb
cmc
rorb
and
xor
xchg
mov
mov
pop
sbb
cli
fisubs
into
jmp
popf
mov
and
or
movb
dec
or
mov
int
ja
ror
in
cmp
lds
inc
adc
inc
inc
xchg
add
out
mov
xor
or
add
test
into
pop
fistpll
sub
pop
nop
adc
dec
daa
jmp
inc
xchg
pop
cmp
imul
and
pop
jecxz
outsl
mull
adc
sbb
push
scas
les
pop
inc
mov
pop
mov
ljmp
ss
pop
add
lods
pop
gs
loope
roll
arpl
add
mov
jle
pusha
push
cmp
fs
xor
arpl
aam
aaa
pusha
xchg
nop
or
ja
sbb
ficompl
dec
jno
cmpsb
xor
mov
and
jg
adc
cmpsb
in
pop
ficompl
shr
cmp
sub
das
or
xor
test
add
or
xchg
adc
push
xchg
int
shrl
pop
mov
pop
addb
je
fstps
add
mov
je
mov
das
mov
pop
in
das
ss
mov
iret
pop
or
movsl
mov
repz
mov
dec
mov
xchg
movl
shll
mov
cmp
dec
push
loope
es
pop
pop
push
fldenv
mov
aam
jp
cltd
xor
je
int3
pop
xor
mov
arpl
mov
and
cmpsl
sbb
cld
scas
jg
sbb
pop
dec
mov
fistpl
adc
sbb
bnd
mov
insl
sbb
cs
gs
push
sbb
jmp
xchg
mov
rolb
mov
lds
mov
stc
xor
repnz
loop
mov
jg
imul
popa
cmp
ret
push
xchg
fstpt
lock
hlt
adc
xchg
fs
mov
jae
mov
mov
sbb
outsl
fsubl
inc
inc
add
sub
dec
xor
cwtl
jbe
int3
adc
sar
lea
xor
bound
call
daa
imulb
cmp
movsb
xor
bnd
repz
adc
cld
aaa
aad
xchg
jmp
xchg
mov
cwtl
fdivs
outsb
add
lret
pop
into
jno
or
sbb
sti
or
sbb
push
xchg
das
fwait
jl
rorb
out
xchg
aas
push
movsb
nop
sbb
pop
movsb
enter
test
and
jge
jg
cltd
dec
in
out
lods
pushf
adc
int3
nop
imul
sub
pusha
insl
lcall
rcr
outsb
test
inc
out
xchg
pop
cmp
movsl
lods
xchg
mov
add
pop
pop
in
xchg
mov
adc
pop
xchg
lret
imul
fisttps
mov
or
cmp
lock
sti
arpl
leave
fisubrl
iret
fimuls
xchg
jecxz
sub
repz
mov
jp
push
fs
dec
pop
sbb
mov
mov
xchg
pop
cwtl
imul
adc
orb
fdivrl
imul
xlat
inc
lcall
sub
cmpsb
lods
in
cmc
loop
pop
xchg
ss
loop
pop
xor
inc
pop
jae
mov
scas
sbb
mov
jno
imul
in
inc
mov
lea
and
dec
add
jmp
pop
mov
adc
xchg
insb
mull
shrb
movsb
pop
fidivrs
ficomps
loop
mov
and
add
xchg
leave
mov
popf
cmp
sub
sbb
out
xor
cmpb
aam
adcb
cmp
das
mov
jo
lret
leave
pop
fdivr
cmp
ret
loop
sbb
stos
sub
inc
sbb
sbb
xchg
push
pop
jle
push
sub
pop
sub
mov
stc
xchg
jae
push
loopne
lcall
fidivl
and
lods
xor
inc
mov
insb
xor
inc
mov
jnp
arpl
pushf
sub
inc
shll
or
sbb
jle
pop
and
cmpsl
cld
stc
mov
xchg
insb
or
pushf
mov
test
xchg
movsb
stc
xchg
pop
pop
lea
push
sbb
inc
xor
adc
adc
fisubs
push
or
xchg
mov
mov
push
mov
jp
push
jns
filds
mov
xorl
xchg
arpl
mov
in
aaa
cltd
js
push
test
out
push
aaa
mov
push
pusha
inc
test
sbb
xor
mov
mov
mov
aas
imul
mov
lock
mov
sahf
push
adc
inc
rclb
jbe
xchg
and
xchg
sbbb
dec
dec
aas
es
sbb
xchg
stos
xchg
and
fwait
rolb
xchg
inc
push
stos
adc
loope
sub
push
dec
mov
loope
and
movsb
clc
mov
mov
les
push
mov
dec
pop
jno
lods
lret
or
jge
in
mov
and
out
xchg
test
faddl
rcrb
cmp
inc
xlat
jl
into
jmp
xor
inc
aad
stos
icebp
or
movl
push
cli
int3
or
adc
les
and
aaa
les
enter
mov
call
je
push
inc
push
cmp
nop
add
sub
rorl
cmp
lret
push
daa
add
ja
lods
jp
jg
mov
mov
inc
adc
cmc
xchg
push
iret
adc
mov
imul
mov
jp
pop
push
ds
xor
cwtl
push
push
aas
inc
cmp
pop
jecxz
mov
mov
movsb
sub
mov
xchg
out
movsb
cmp
mov
dec
mov
andb
arpl
adc
or
arpl
push
cmc
lods
mov
push
pop
gs
mov
movsb
inc
mov
fidivs
cmp
jmp
jno,pt
push
dec
mov
pop
mov
sbb
and
loopne
cmpsb
adcb
sub
push
cli
lret
jle
cmp
bound
fimuls
int3
test
inc
lret
lods
daa
or
jle
cmpsl
and
cltd
adc
add
std
roll
sar
sub
sbb
sbb
addr16
xor
pushf
push
jmp
ss
js
sub
ds
push
adcb
lea
lock
iret
test
push
sbb
cmp
mov
xchg
sbbb
fs
jo
xor
loopne
lcall
dec
in
ss
sbb
mov
jp
inc
add
push
sub
pop
xor
inc
loopne
mov
or
add
andb
push
add
fldt
imul
jb
xchg
in
test
and
sub
lret
nop
push
mov
clc
sbb
outsb
mov
es
lret
movsl
or
jecxz
fldl
and
sbb
shl
js
or
shlb
scas
push
mov
scas
cmp
lcall
jmp
lea
pop
ret
jmp
mov
adc
clc
shrb
enter
xor
pusha
sub
xchg
add
cmp
popf
xor
or
movsl
cmp
push
dec
sbb
mov
out
shll
jbe
lea
mov
jb
std
sbb
pusha
push
push
jmp
mov
lock
mov
sub
mov
cli
test
pop
and
mov
hlt
mov
mov
adc
sub
shlb
sbb
ljmp
sub
add
icebp
mov
das
mov
sbb
mov
lods
imul
pop
in
arpl
jns
mov
lahf
scas
add
or
xor
mov
aad
lock
or
sbb
dec
fnstenv
xchg
lds
pop
add
pop
lcall
lea
insb
fisubs
jle
jbe
mov
fidivl
inc
cs
in
lret
xor
insl
stos
cli
int
arpl
outsb
movsl
cmp
xor
add
and
lea
out
popf
rcrb
and
xchg
mov
movsb
movl
cmp
add
flds
in
ficoml
fs
out
das
cmp
mov
test
jb
and
loopne
xchg
sarb
mov
test
movsb
rorb
push
jle
lret
scas
mov
xor
daa
fs
movsb
lds
idiv
test
shll
loop
or
sub
add
mov
iret
jne
xchg
jno
ja
xchg
lahf
cwtl
xor
cltd
dec
pop
push
ret
addl
xchg
jmp
movsl
dec
xor
test
arpl
push
cld
cmpsl
cmp
cltd
loop
xchg
adc
iret
add
in
fwait
or
popf
and
aaa
int
dec
pop
stos
jae
test
push
lea
sbb
cmp
dec
inc
mov
aam
rorl
mov
xchg
daa
cmp
push
mov
xchg
icebp
rcrb
insl
test
pop
mov
mov
loop
xchg
iret
popf
xchg
push
lret
int
aam
pop
loopne
and
cmp
lret
out
lock
xchg
out
cwtl
insl
hlt
pop
mov
loopne
xor
mov
inc
int3
aad
mov
pop
popa
pusha
mov
jae,pt
mov
mov
sbb
fwait
or
sub
iret
add
add
aad
xchg
xor
les
push
into
cwtl
fnstcw
push
add
push
sbb
lods
loopne
inc
shll
enter
in
ss
xchg
subl
dec
fmul
jle
adc
stos
faddp
fisttpl
mov
mov
dec
mov
lods
es
push
push
sbb
test
or
subb
cltd
xor
sub
out
int3
mull
sbb
add
aas
mov
popf
push
repnz
nop
or
mov
xchg
and
mov
in
push
out
mov
add
enter
cmp
and
or
add
daa
ds
and
pop
jb
mov
adc
loop
mov
dec
push
wbinvd
lods
fildll
inc
int3
inc
xchg
rolb
mov
dec
popf
ljmp
leave
cli
xchg
out
jecxz
inc
and
sub
or
cmp
in
mov
xor
andnps
add
mov
stc
cs
push
lods
test
sub
out
jns
out
jbe
mov
fisubrl
adc
addr16
aad
jae
pop
in
fdivrl
sbb
jbe
inc
ficoml
movsl
cs
dec
jg
jno
push
lods
or
mov
add
fisubs
dec
nop
pop
test
roll
movsb
out
js
mov
pusha
popf
mov
gs
out
sub
mov
mov
sub
scas
outsl
int3
std
iret
push
cmpsl
adc
lahf
aam
xor
cmpl
leave
xchg
cli
mov
ret
pop
pop
testl
pop
bt
sub
jbe
lahf
cmpsb
stos
add
push
adc
or
lds
sub
lcall
bound
outsb
sahf
sbbb
out
add
xchg
sbb
pop
cmp
mov
or
lods
call
and
aad
push
push
push
xchg
ret
out
or
insl
or
cld
push
repz
and
lahf
test
loopne
mov
pop
addr16
stc
adc
jnp,pn
stos
std
mov
inc
clc
ljmp
divb
cmp
out
clc
push
call
and
jg
stc
or
xchg
jno
sbb
dec
inc
rcr
xchg
or
push
inc
xchg
inc
out
push
lods
lret
divb
inc
jle
lret
adc
stc
in
imul
xor
or
imul
icebp
mov
and
hlt
mov
lcall
insb
sbb
jae
inc
sbb
fs
jns
mov
repz
into
mov
je
nop
inc
cli
arpl
repnz
push
sub
inc
xor
repz
mov
dec
scas
push
lret
in
sarl
or
mov
sub
fwait
pop
cmp
cmp
outsb
lret
sub
dec
cmp
jns
std
mov
outsb
in
imull
mov
popf
xor
fwait
mov
mov
enter
pushf
int3
movsl
into
dec
and
stc
xor
xchg
sahf
lret
push
outsb
mov
add
cmpsb
xchg
lcall
mov
jp
and
push
fnsave
jge
ss
in
pop
cli
mov
push
bnd
out
sti
push
std
es
and
push
mov
pop
stos
fcoms
jo
push
imul
sub
jae
cmp
mov
cmc
and
sbb
test
dec
popa
xorl
mov
loope
cmp
ds
lret
insb
shl
orb
cmp
out
int
xor
cld
adc
mov
shr
mov
sbb
ljmp
aad
cmpsb
pop
insl
lods
lret
xlat
mov
xchg
fidivl
in
dec
mov
lahf
cld
sbb
jecxz
notl
xchg
mov
in
loop
or
sub
aas
dec
mov
cmp
and
mov
loopne
insb
mov
xchg
push
jp
push
subb
inc
icebp
sbb
jp
push
lahf
push
or
repnz
or
std
mov
movsl
movsl
fwait
push
pop
mov
and
cmp
cltd
and
loope
lahf
bound
in
dec
pop
cmp
data16
pusha
mov
lods
xor
dec
add
sbbl
or
xor
dec
out
xor
mov
rol
les
cmp
test
inc
outsl
shll
sarb
ret
push
mov
es
xor
into
mov
jecxz
stos
dec
jecxz
sahf
fs
int3
push
sub
lret
dec
jne
adc
push
icebp
fiaddl
insb
cli
mov
icebp
jnp
bound
dec
test
sbb
mov
cmpsl
jae
cwtl
ss
jmp
adc
loop
xchg
lock
hlt
add
js
xor
sbb
pop
fcomps
xchg
fisubs
or
inc
jl
cmp
dec
pop
add
or
pop
adc
xlat
in
mov
imul
jmp
jp
lock
sarl
imul
int
and
call
lods
mov
in
and
and
loope
xchg
adc
enter
push
ss
adc
out
js
cmpsb
mov
in
push
lahf
stos
imul
dec
shlb
or
data16
mov
xchg
fidivs
push
xchg
pusha
add
and
mov
xchg
fwait
inc
pop
call
insb
aaa
mov
popa
push
mov
inc
add
subl
test
cmc
loope
mov
push
jmp
adcl
adc
mov
mov
nop
mov
fistps
cmpsb
pop
inc
ss
std
xchg
fimull
ljmp
daa
sbb
cmc
sbb
mov
loop
push
pop
out
cli
lea
lret
jp
adcl
xchg
inc
xor
fisubl
jl
rcll
or
cmp
aaa
fnsave
mov
stos
mov
aas
inc
mov
inc
sbb
ds
mov
and
out
addl
cs
cmp
push
scas
mov
imul
mov
jg
jp
mov
or
movsb
pop
xchg
ret
jbe
add
mov
cmp
dec
int3
repz
cs
jns
cmpsb
add
inc
inc
cmp
jl
mov
insl
lea
jl
sbb
jge
lret
inc
cmpsl
mov
pop
jg
sbb
add
cmpsb
cli
mov
fldcw
pop
stos
or
pop
jp
dec
repz
ljmp
jb
insb
add
sub
sub
ss
and
inc
loop
or
fsubs
and
scas
mov
test
mov
cwtl
pop
mov
ds
add
push
adc
lock
les
nop
scas
es
add
popf
jecxz
int3
dec
mov
cmp
outsl
pop
mov
rcrl
jns
rcrl
sbb
jge
add
adc
jbe
loopne
push
mov
iret
pusha
cmpsb
gs
xlat
int3
jnp
push
push
inc
xorl
xor
stos
sahf
pop
mov
pop
insb
ret
leave
mov
push
rcl
mov
xchg
loope
cmpsl
js
inc
cli
nop
daa
insb
xchg
loopne
je
adc
xchg
mov
daa
mov
jns
inc
jle,pt
loopne
push
aas
push
or
and
pop
out
jle
clc
jl
xchg
mov
push
loope
cltd
cmp
pop
loop
inc
or
push
dec
mov
hlt
es
or
test
inc
bound
dec
xor
cmp
adc
xor
jmp
shrb
xor
jg
mov
lret
pop
in
add
add
pop
xor
repz
hlt
jbe
shll
inc
dec
inc
daa
fdivrs
fsincos
xlat
in
or
and
sbbl
push
dec
xchg
sub
add
or
outsb
ret
xchg
orb
and
pushf
rclb
pop
movsb
jg
mov
mov
jge
fidivl
sub
lcall
dec
cs
fldl
insl
sub
pop
inc
stos
sub
dec
push
pop
push
loopne
pop
js
mov
ss
out
pop
add
push
jnp
mov
sub
xchg
and
cmp
mov
jb
or
pushf
lret
mov
js
or
sbb
out
in
dec
sub
push
xchg
jmp
mov
in
dec
and
add
push
dec
mov
jnp
adc
or
or
aad
mov
sbb
xchg
sbb
mov
jns
aam
push
sbb
lret
adc
add
scas
mov
ljmp
push
push
stc
stos
or
clc
push
inc
in
xorb
arpl
insb
or
test
cmc
adcl
imul
pop
or
pop
dec
xor
add
out
test
push
lret
je
leave
fsubrs
stc
mov
lcall
mov
cmp
jmp
jg
insb
test
outsb
push
pop
jnp
loopne
mov
push
cltd
mov
and
or
popf
ds
test
out
movsl
add
sbbl
popf
out
sub
dec
jno
xlat
mov
test
in
pusha
sarb
lods
jo
mov
cmp
sub
jo
sahf
push
decl
imul
mov
mov
mov
ret
push
cmp
or
push
lock
sbb
loop
xchg
sub
test
or
pop
stos
xor
arpl
dec
hlt
xchg
sub
mov
addb
les
nop
cmp
ss
dec
cmpsb
push
mov
pop
lds
dec
pusha
je
hlt
mov
push
inc
mov
testb
lret
fbstp
lods
hlt
sahf
leave
mov
stc
ret
cmpsl
mov
in
push
scas
add
pop
push
fistpl
enter
das
jne
les
mov
repz
mov
mov
es
ss
pushf
pop
mov
push
and
xchg
pop
in
pop
imul
shl
xchg
or
inc
subb
sbb
jb
dec
mov
sahf
sub
icebp
cmc
sbb
jmp
mov
clc
sbb
repnz
inc
jbe
sahf
in
insl
pop
xor
sarl
add
cmp
xor
mov
js
bound
mov
loop
mov
fistpl
aas
js
gs
movsb
jg
sub
mov
arpl
jno
mov
mov
mov
fmul
into
aas
push
add
mov
push
scas
mov
and
int
pop
ja
mov
mov
fwait
cmc
mov
and
gs
push
pushf
in
jl
pop
and
stc
aad
jo
mov
cmp
int3
inc
inc
lock
xlat
into
insl
or
fwait
dec
mov
rorb
xor
xor
out
or
call
jecxz
imul
sahf
push
hlt
adc
and
jmp
dec
push
fists
xor
mov
dec
in
int
add
pop
fisttpll
push
loopne
push
orb
sbb
arpl
and
and
pop
xlat
jl
inc
add
out
push
mov
das
dec
or
lods
lahf
or
aad
cmpsb
xchg
mov
dec
ret
inc
sbb
add
jg
ds
mov
adc
insl
adc
adc
les
jb
push
lcallw
push
mov
js
movsl
data16
sbb
mov
and
lods
lcall
inc
xchg
pop
mov
stc
out
or
jns
lods
xchg
pop
add
cltd
lret
add
and
rclb
mov
adc
push
pusha
leave
test
stos
jg
xor
popf
push
dec
mov
xchg
add
lret
xor
push
mov
mov
in
lds
fisttpll
xor
pop
bound
push
insb
fmul
pop
push
pop
mov
push
adc
scas
sub
inc
inc
testl
or
repnz
dec
push
inc
cmp
adc
lea
loop
out
dec
ss
ds
dec
pop
daa
mov
sbb
push
ss
repnz
fdiv
int3
scas
fldl
leave
in
mov
outsl
mov
outsb
das
lods
mov
xchg
rcl
adc
mov
popf
cmp
mov
inc
xor
cmp
fs
dec
sub
inc
cmp
add
ret
add
push
ds
push
sub
bound
aaa
jmp
mulb
mov
xchg
or
movsb
and
fs
jmp
outsl
or
xchg
popf
or
int3
out
sbb
inc
lret
daa
movsb
jae
pop
xchg
jns
adc
adc
jg
jb
je
inc
andl
fwait
packssdw
int3
popf
std
adc
insb
test
adc
or
int
cmp
mov
jecxz
mov
ljmp
arpl
dec
enter
cmp
stc
mov
xchg
sbb
jnp
test
jnp
sub
jecxz,pt
arpl
cs
shl
ret
cmpsb
or
movsl
or
jo
leave
nop
push
movsl
inc
push
enter
mov
lods
or
js
and
and
inc
test
jmp
popf
dec
imul
mov
shlb
testb
pop
repnz
xchg
push
lods
pop
insl
jge
mov
xchg
jb
inc
fnstcw
popf
xchg
push
sub
insl
push
inc
dec
mov
mov
negl
mov
xor
mov
adc
mov
outsb
sbb
mov
push
in
loope
inc
out
mov
jae
jnp
adcl
stos
out
bswap
aad
cmp
leave
xlat
je
sti
inc
push
nop
cs
xchg
pop
roll
lds
stos
lahf
mov
push
in
push
jb
imul
push
aas
scas
int
pop
outsb
inc
hlt
ljmp
lods
inc
mov
push
in
cmp
stos
lods
jne
insb
cmpsl
mov
sbb
sbb
xchg
xor
push
push
imul
nop
xor
pop
cmp
lods
push
test
jae
cli
dec
pop
pop
push
lea
hlt
adc
insl
jg
cmp
mov
sti
divb
sbb
dec
fcmovb
cmp
and
scas
ror
ret
rcll
or
in
dec
mov
imul
aaa
hlt
sub
jb
int3
ret
idivl
cmpl
cmp
inc
call
adc
jecxz
and
xor
push
sbb
fidivl
in
jno
loope
leave
outsb
outsl
movsl
mov
adc
inc
xchg
mov
mov
pop
stos
jge
gs
pop
movsb
push
push
jnp
sbb
inc
cld
push
mov
icebp
fsts
movsl
or
out
jnp
cld
test
jnp
pushf
pop
dec
imul
out
xor
shrb
imulb
xchg
jne
lea
or
pushf
nop
add
push
stos
rcl
mov
mov
add
mov
das
xlat
adc
lret
cltd
sarb
and
ljmp
cmp
push
aas
and
movsl
hlt
adc
push
inc
test
sub
sub
mov
out
aas
test
mov
mov
jge
std
icebp
dec
sub
outsl
push
pop
cs
push
int
xchg
xchg
mov
push
cmc
scas
jp
ret
mov
sbb
lcall
sar
addb
inc
pop
or
cli
pushf
adc
fnstenv
rcll
loop
sbb
mov
stos
dec
fsub
mov
daa
shrl
clc
ljmp
out
mov
adc
out
out
out
arpl
mov
shrl
in
or
in
push
jl
push
in
mov
mov
test
xchg
lret
or
push
fists
imul
xchg
xor
and
aaa
or
pop
jnp
mov
jne
sub
es
cmp
sub
mov
jnp
jne
xor
fwait
loop
ss
rorb
fisubl
adc
add
mov
out
ja
pop
mov
jp
bnd
push
dec
lea
jecxz
xchg
enter
xchg
mov
adc
jno
roll
mov
sub
cmp
sbb
add
mov
negl
ja
jo
xchg
jo
cltd
data16
inc
aam
call
fwait
mov
ficomps
fwait
std
call
inc
jmp
xchg
xchg
sub
test
and
and
int3
shlb
jb
movsl
test
sti
xchg
pop
bound
fcoms
mov
mov
adc
jnp
adc
lock
mov
aam
mov
fistl
pop
mov
nop
pop
jb
pop
xchg
cmp
add
cltd
cltd
leave
lret
test
pop
push
call
and
mov
mov
pop
sub
iret
jne
xlat
xor
lret
inc
mov
mov
jmp
pop
mov
jecxz
push
mov
bound
out
xchg
lret
stos
or
sub
nop
xor
test
xchg
out
xchg
cmpsb
testb
dec
mov
sub
shrb
icebp
xor
pop
loop
add
cli
cmp
rolb
add
js
cmpsl
pop
sub
and
fcoml
dec
dec
es
xor
movsb
mov
dec
sbb
movb
cmp
jecxz
loopne
imul
sub
jmp
pop
sub
pushl
jo
lds
cmp
add
jb
xor
mov
adc
cmpsb
inc
pop
int3
ss
and
movhps
mov
xchg
movsl
push
clc
or
lahf
push
dec
rclb
in
xchg
adc
ljmp
mov
push
jo
stos
mov
mov
test
insl
xor
mov
out
gs
or
pop
pop
mov
adc
adc
faddl
nop
cmp
ffree
aad
xchg
cmpsb
popf
arpl
xor
mov
or
test
dec
les
xor
push
popf
addr16
mov
enterw
and
adcl
out
stc
rcrl
pop
cmpsl
icebp
leave
aad
jg
sbb
and
test
or
xor
pop
sbb
sti
bound
les
cmp
push
pop
decb
hlt
fdivs
dec
xor
mov
rorb
mov
jnp
cltd
sbb
mov
jnp
aam
mov
xor
mov
push
mov
mov
jnp
das
sub
ja
scas
loopne
jle
mov
mov
mov
xchg
lret
mov
sbb
addr16
pop
scas
mov
xor
sarl
fdivrp
inc
cmpsb
xchg
movsl
insb
add
push
adc
popaw
sbb
mov
sti
test
push
out
inc
jecxz,pn
outsb
adc
xchg
xchg
cwtl
imul
imul
test
pop
je
cmp
sbb
push
mov
lds
aad
addr16
loope
adc
xchg
mov
xchg
ss
add
aaa
insl
xchg
shl
mov
repz
mov
loop
mov
jmp
adcl
cmpsb
or
iret
aas
inc
cmp
js
adc
ficoms
ds
or
xchg
cmp
int3
and
xchg
and
pop
lods
aad
js
movsb
and
int
inc
add
insb
mov
lock
hlt
push
pop
jg
jne
mov
test
xchg
push
ljmp
jle
cmp
pop
mov
mov
loop
imul
inc
dec
mov
into
mov
pop
in
and
in
pop
or
movsl
adc
adc
shll
sahf
fmuls
pusha
les
repnz
push
mov
adc
adc
jge
insl
imul
inc
mov
jp
arpl
sbb
adc
lock
cli
fidivl
aam
jnp
push
cli
sub
ja
or
idivb
mov
sbb
push
sbb
xchg
sub
das
jge
imul
mov
je
je
decb
rolb
mov
add
std
push
js,pn
mov
pop
int
loope
cmp
pop
xchg
xchg
ret
rolb
loop
ret
push
jl
roll
orb
hlt
testl
popa
push
mov
outsb
mov
ror
mov
sub
or
add
xchg
adc
jle
movsl
sbb
or
xchg
xchg
adc
push
movsl
rcll
int3
push
dec
and
pop
andl
stos
adc
in
popa
push
movsb
mov
test
or
mov
bound
jb
imul
insl
rolb
xor
in
mov
push
adc
cs
xchg
push
mov
call
sbb
dec
inc
dec
dec
ljmp
mov
dec
stos
cs
call
cmpsl
adc
cld
pushf
xchg
popa
mov
push
enter
dec
jae
test
cmpl
scas
in
lahf
in
cmp
xor
call
notb
jp
mov
mov
xor
fs
push
mov
sub
inc
sbb
ret
adcl
inc
push
jecxz
nop
mov
in
fwait
sub
ja
pusha
and
cld
mov
in
test
ret
stc
data16
pop
hlt
cmpsl
cmp
lods
adc
fdivr
jge
inc
push
aaa
push
lock
je
icebp
mov
and
push
loope
lea
sub
cmp
icebp
jbe
lods
sbb
cltd
fwait
inc
imul
iret
xchg
jle
ss
and
or
hlt
sub
jg
out
sub
outsl
sub
jne
adc
xlat
cmp
addr16
xlat
lcall
ja
pop
je
cwtl
lods
pop
daa
inc
pop
mov
dec
popa
jo
jl
add
xor
xor
jb
hlt
jp
rol
das
push
jp
cs
insl
cmp
imul
cwtl
ljmp
je
push
lea
gs
dec
aas
adc
addb
inc
out
push
ds
imul
adc
sbb
lcall
pop
lret
ret
aas
aad
ret
fstl
fisubs
or
fstps
sub
sbb
mov
outsb
dec
mov
js
add
mov
sub
sbb
in
jne
or
in
psadbw
xchg
lods
and
xchg
xchg
fbstp
xchg
mov
jns
mov
mov
arpl
aad
icebp
out
pusha
xlat
loope
mov
xor
and
jbe
jo
pop
bound
les
test
jo
or
sbb
and
cmp
fs
add
push
xchg
fiaddl
jne
lods
inc
cmp
dec
and
clc
popf
cmp
aad
or
hlt
lods
mov
or
repnz
scas
lods
fstl
mov
dec
xor
xor
or
andl
xlat
lret
mov
test
push
xlat
adc
mov
aaa
testl
fdivrl
pop
ret
jb
push
push
outsb
daa
sbb
pop
int
cli
hlt
gs
jo
push
cmp
negb
in
cmp
cld
jo
add
stos
jo
pop
push
int
in
push
movl
mov
sub
pushf
insb
cmp
loopne
cmp
cmp
shrl
push
arpl
mov
mov
push
repnz
jp
test
sbb
xor
scas
push
daa
sbb
rcll
push
addr16
push
sti
cmpsl
add
jecxz
stos
cmp
pushf
sbb
fistpl
aas
aas
in
add
loop
ret
push
pop
repz
cmp
xlat
lahf
xchg
mov
xchg
or
jae
pop
insl
jge
scas
add
mov
xchg
mov
mov
insl
imul
jno
push
and
xchg
push
fstpl
xchg
inc
negb
mov
xlat
scas
add
ds
je
xchg
fwait
icebp
ficoms
push
roll
adc
pop
fidivs
aas
jecxz
cmp
push
out
decl
arpl
mov
inc
sbb
xchg
fwait
scas
adc
lea
push
data16
outsb
xchg
jmp
xchg
sarb
outsl
and
or
fucom
sub
cmp
call
sbb
nop
sub
std
pop
dec
std
in
add
lock
cmpsb
or
xchg
sub
pushf
push
insl
int
lds
pop
lret
inc
leave
jne
dec
mov
clc
imulb
je
xchg
xchg
ret
mov
adcb
jmp
xlat
pop
xor
stc
push
stc
sbb
xchg
sbb
mov
inc
fwait
dec
and
pushf
loopne
adc
out
add
xchg
pop
xchg
cmpsl
jmp
jl
xchg
add
ja
pop
push
pop
fildll
add
jae
arpl
stos
and
adc
in
xor
fistps
stos
gs
and
sbb
xlat
sbb
stc
and
es
sbbl
and
adc
mov
shll
data16
shrb
cwtl
sub
sti
and
pop
divb
jo
add
pop
test
xor
xor
std
movsb
mov
xor
mov
dec
adc
mov
cmpsb
mov
ret
mov
lret
cmp
xor
xor
cli
cmpsb
push
jmp
cmp
pushf
into
dec
call
mov
rolb
mov
cwtl
push
sbb
shlb
cld
sbb
mov
add
shll
sbb
test
div
mov
in
js
sbb
push
and
cmp
fcmovb
cmpsb
push
and
mov
shlb
mov
or
leave
aaa
dec
fsubrs
add
push
out
mov
push
arpl
and
mov
sti
arpl
push
sub
rorb
or
lods
test
imul
or
add
ror
or
inc
daa
es
insb
push
dec
pushf
xlat
push
into
not
mov
add
rcl
push
jle
jecxz
jl
cmp
cltd
xchg
mov
loop
ret
jle
add
aad
sbb
fidivrs
mov
push
or
ds
cwtl
je
rol
scas
jge
fiadds
add
loope
jae
test
mov
lret
cld
pop
ror
es
lods
xor
dec
ljmp
xor
pop
jb
sbb
xor
es
les
mov
cmp
or
pop
or
push
fimuls
pop
bound
sbb
cmp
push
mov
add
insl
push
int3
sub
mov
shll
je
dec
jne
mov
adc
jg
jmp
inc
or
inc
adc
out
pusha
cwtl
pop
into
or
cwtl
lret
notb
push
cli
lea
inc
jnp
mov
clc
divl
cwtl
pushf
jnp
ds
insl
out
dec
pop
push
iret
fsubl
div
ret
into
add
loopne
xchg
inc
mov
sbb
sbb
pop
or
fld
and
int
divl
inc
rcl
cltd
ds
push
mov
push
repnz
xor
pop
dec
mov
add
xor
ljmp
fisubs
outsb
pusha
mov
cmpb
xchg
sbb
int
insl
sahf
fisttpll
lret
subl
addb
scas
cmp
sub
test
jno
fisttps
bswap
testb
add
setns
push
sbb
ss
push
mov
jae
xor
jmp
dec
cmp
inc
ljmp
int3
sbb
cmp
jge
pop
adcl
mov
mov
xchg
mov
das
cmpsb
dec
repz
cltd
fcmovnu
inc
inc
call
push
jbe
fs
sbb
pop
and
ret
sbb
insl
js
nop
pop
add
mov
dec
or
insb
push
call
xchg
push
sbb
xor
inc
xchg
imul
jbe
leave
sub
push
cmp
in
pushf
add
and
out
cli
mov
add
inc
cmp
orb
cmp
ficompl
out
sub
or
and
fwait
pop
cmpsl
push
inc
cmp
mov
dec
shll
cli
mov
outsl
mov
fcoml
mov
jns
divl
out
mov
inc
xor
ret
into
rorl
inc
stc
add
orl
faddp
daa
add
sub
out
adc
and
push
divl
pop
jbe
nop
fnstsw
mov
movsl
xchg
out
ret
pextrw
jb
mov
add
xchg
scas
sbb
mov
mov
lods
inc
addr16
push
xchg
xchg
and
pushf
addr16
scas
pushf
lret
jo
inc
lahf
xchg
ljmp
dec
mov
ror
popf
pop
int3
call
dec
pop
popf
fldl
int
es
loope
xor
add
daa
add
xchg
xchg
stc
mov
dec
inc
test
mov
jl
pop
stc
push
iret
cmp
aaa
or
sub
orb
xor
push
fs
and
jo
cmpb
dec
or
mov
cmp
xchg
adc
lods
xor
jnp
out
std
sub
mov
pop
adc
jae
pusha
xchg
jne
lea
outsl
fsubl
fcmovbe
xchg
test
jns
jns
and
in
orl
push
or
lods
fnsave
pop
push
lods
lds
pop
jmp
jne
pop
enter
sub
mov
mov
inc
out
pop
pop
mov
add
and
push
mov
jecxz
cs
enter
imul
aas
ljmp
cmpsb
jl
sete
cmp
test
loopne
pop
dec
scas
pop
sbb
cmp
andb
xlat
rcr
loopne
aaa
add
pop
lret
sti
xchg
fsubrp
pop
push
cmpsb
ucomiss
jmp
xlat
push
sahf
fsub
pop
enter
adc
cmpsb
push
lret
lock
mov
icebp
inc
aad
ja
adc
iret
pop
sbb
mov
sbb
ds
push
pop
mov
insl
sub
mov
jmp
xchg
jno
jmp
lock
or
add
dec
and
add
xor
int
dec
insl
mov
push
aaa
jle
cmpsl
cmp
dec
fnstenv
cmp
ds
adc
fistpl
or
mov
cmc
out
mov
inc
std
mov
pop
push
pop
push
sbb
nop
and
pop
data16
pop
mov
inc
pop
dec
and
push
jno
addl
push
cmc
fildll
cs
sti
ds
sbb
mov
pop
in
or
icebp
icebp
nop
and
inc
cmp
ffreep
icebp
jecxz
aas
fldl
jbe
daa
jg
sarl
mov
fwait
shll
jnp
cmp
xchg
bound
cwtl
add
xchg
test
fldcw
mov
xorb
lret
loop
in
ret
ljmp
and
lahf
dec
movsb
push
xor
test
pushf
stos
mov
aaa
inc
xchg
sti
mov
aas
cmp
jl
and
ds
test
insl
enter
mov
xchg
int
jge
out
add
adc
mov
sbb
cmp
loopne
cltd
push
test
xor
orl
ret
aam
stos
into
sub
ret
xchg
je
mov
push
cs
and
insl
lea
cmp
push
xchg
ja
fwait
movsb
jno
out
outsl
test
mov
pop
adc
mov
dec
and
mov
or
ds
xorl
or
cs
lods
sub
out
aam
clc
sbb
sahf
dec
push
sub
inc
mov
dec
cmp
lods
fwait
mov
into
adc
sti
jmp
xchg
das
sahf
out
sub
pop
xchg
push
enter
xchg
xchg
xchg
insb
xchg
adc
fsubs
shll
nop
fsubl
lods
xor
stos
and
int
jnp
push
cli
int3
aaa
mov
pop
gs
mov
inc
lahf
pop
lods
scas
xchg
dec
or
enter
inc
loope
lahf
cwtl
push
in
and
std
ljmp
repz
aam
stc
fisubl
xlat
mov
out
out
popf
mov
jecxz
or
outsb
stos
xchg
sub
xchg
call
enter
inc
push
jmp
ds
xchg
xchg
mov
mov
iret
mov
pop
or
aam
addr16
or
insb
and
mov
lock
dec
es
test
sbb
xchg
cmp
jge
stos
xchg
cmp
push
ret
add
mov
jno
andl
ret
jmp
call
loopne
out
ljmp
idivb
leave
sbb
clc
mov
hlt
fnstenv
shl
jbe
fisubrs
lea
fld
dec
xchg
sbb
inc
adc
and
mov
mov
popf
loop
mov
push
jmp
in
push
push
popa
jl
mov
pop
dec
sbb
sbb
fadds
scas
subl
fisubrs
sbb
sbb
cltd
mov
movsl
or
mov
dec
movsl
repz
les
jp
jge
notb
std
ja
cmp
aas
mov
push
popa
sti
sarl
add
hlt
mov
mov
sbb
pop
adc
dec
dec
std
cmpsb
sub
sarl
icebp
dec
or
das
aaa
ljmp
xor
fistpl
dec
cmpsb
push
mov
fistpll
cmpsl
add
xor
pop
loop
repz
add
add
push
pop
js
in
jle
mov
les
push
hlt
push
arpl
push
std
or
add
adc
lea
xor
xor
jmp
addr16
xchg
rorb
xchg
mov
daa
stc
std
and
mov
sub
shll
mov
inc
cwtl
into
xor
fsubp
insb
jb
jg
push
orl
pop
call
loope
push
cs
into
inc
mov
out
mov
loope
mov
lret
xchg
jmp
scas
jbe
mov
orb
int
add
movb
jge
daa
mov
mov
add
mov
mov
add
jns,pt
jmp
test
lods
movsb
mov
stos
movsb
lods
aad
fwait
mov
xorb
les
add
faddl
adc
jmp
das
or
mov
mov
xchg
mov
xlat
mov
xchg
push
dec
mov
in
sub
fcoms
add
mov
mov
aaa
mov
xchg
xor
add
sbb
movsb
fmuls
incb
push
push
xor
mov
subl
inc
test
imul
xchg
sar
dec
imul
daa
mov
lds
cmp
xor
sbb
mov
mov
aad
imul
dec
xorl
lea
adc
hlt
sub
push
lcall
lock
lea
aam
push
push
mov
or
fld
mov
push
xchg
cmp
insl
orl
add
pop
es
dec
fsts
dec
fistps
test
cmp
cmp
popw
jno
lcall
lea
or
push
daa
jbe
fisubl
stos
ja
into
scas
push
or
add
mov
daa
lea
mov
andl
icebp
push
xchg
xchg
arpl
or
and
and
dec
shlb
imul
stos
or
xchg
xchg
xchg
mov
cmp
dec
cmp
jg
push
jns
jbe
shrb
jbe
push
jo
push
dec
inc
and
mov
or
cli
or
ja
aam
lock
clc
cmp
cmpsl
je
into
pop
mov
mov
add
mov
ret
test
outsl
xor
arpl
scas
je
dec
dec
and
or
sub
or
clc
cmp
dec
cmp
movsl
or
pop
pop
pop
and
mov
pop
pop
stc
adc
mov
data16
add
sarl
push
adc
and
or
les
cmpsl
in
mov
xchg
pop
add
cmp
mov
and
cmpsb
xchg
cli
adc
sub
xchg
lea
and
loope
div
fnstsw
lret
dec
aaa
leave
sub
daa
cmp
sub
out
pop
andb
sub
or
pop
push
dec
cmc
into
imul
xor
outsb
sub
outsl
lret
daa
jecxz
cltd
iret
mov
adc
sti
cmp
out
shlb
es
sbb
jge
daa
int3
mov
fs
fwait
pop
sub
dec
loope
push
or
out
fs
mov
aam
inc
mov
in
nop
test
aaa
push
jge
addr16
mov
imull
sbbb
movsb
scas
pusha
xchg
mov
mov
xchg
cli
push
adc
aam
pop
lods
sub
repz
orb
cwtl
cmp
scas
aaa
aaa
push
jns
outsl
ret
int3
pop
or
movsb
push
sub
inc
mov
jns
sub
aas
sbb
push
icebp
insb
in
jp
imul
jnp
adc
test
dec
jno
cmp
mov
cmpsl
dec
mov
out
pusha
push
nop
aas
setbe
xor
xchg
cmc
cmpsl
cli
lods
cmpsb
mov
lea
cmp
stc
xchg
adc
das
jmp
mov
sub
enter
nop
addb
shlb
loope
pusha
mov
icebp
jmp
push
out
aas
cmp
mov
test
lret
xchg
shrl
xor
movsb
fisubrl
push
popf
addb
lret
cmc
stos
call
int
jl
scas
sti
and
movsb
xchg
lock
pusha
ret
adc
pop
sbb
dec
stos
fdivrs
sub
dec
out
mov
push
push
sbb
xchg
cmp
cmp
mov
xor
sbb
test
jbe
sub
clc
push
inc
push
insb
jmp
shll
insb
dec
sbb
enter
ret
add
out
cmpsb
adc
mov
mov
call
add
or
mov
add
addr16
pop
pushf
push
mov
dec
pop
inc
loopne
dec
mov
int3
jbe
or
lods
adc
ss
leave
cs
enter
sahf
xchg
mov
xchg
out
inc
ror
sti
sbb
fwait
rcrl
jns
in
test
sbb
mov
cmc
pop
sarl
aad
adc
pop
iret
test
mov
mov
pushf
mov
xor
fiadds
data16
mov
pop
outsb
iret
cwtl
mov
inc
mov
and
adcl
imul
lret
mov
fwait
clc
stos
add
out
push
ja
mov
fs
cltd
std
push
or
neg
pop
jo
adc
out
out
xchg
cmp
rcrl
in
sarb
loope
call
mov
loop
dec
ficomps
clc
hlt
and
cld
jnp
dec
mov
dec
orb
and
jo
ss
push
test
or
lea
out
mov
div
adc
jnp
dec
mov
mov
mov
mov
jae
xor
xor
popf
sub
sbb
shrl
mov
inc
mov
test
mov
ljmp
insb
es
or
jnp
pop
adc
movsl
addr16
mov
in
nop
imull
cmp
xchg
jl
in
jns
dec
aam
and
or
push
mov
shrb
stc
push
je
call
xor
mov
mov
push
test
pop
cmp
cmc
mov
lahf
in
sbb
xchg
sbb
mov
ss
insb
mov
out
mov
push
cmp
ret
fsubs
clc
in
stos
sub
popf
mov
ret
push
sarl
sub
cmpsb
gs
bswap
fistps
and
push
xchg
icebp
xchg
shrb
fistpll
sbb
fists
neg
stos
cmp
scas
mov
xchg
scas
in
fisubrl
xor
movsl
push
sbbb
ja
and
inc
cli
dec
mov
dec
add
dec
scas
dec
push
cli
pop
sbb
pop
adc
xlat
les
lods
movsl
jb
mov
jns
les
aaa
mov
sbb
lcall
xchg
outsb
sbb
pop
daa
aam
push
mov
jne
xchg
xchg
leave
inc
fbstp
lahf
sbb
test
imul
ret
jns
pop
mov
jmp
in
lds
lock
mov
rcrb
test
rcrl
ret
sbb
pusha
cmp
push
fisttps
and
jo
pop
aaa
sub
push
stos
or
dec
iret
mov
decb
in
cmp
movsl
lea
out
bound
lock
xchg
xlat
and
pop
insb
dec
cmp
add
fdivp
mov
xor
addr16
sbb
dec
jmp
inc
push
jo
insb
or
imul
inc
stc
pop
int
dec
pop
xor
lds
in
add
add
pop
mov
data16
loop
stc
xchg
push
loop
test
fistps
aas
inc
sbb
pop
inc
jne
aad
ss
or
sub
sahf
and
mov
movsb
push
ljmp
and
sar
loop
jl
leave
jne,pn
into
mov
jae
stos
dec
mov
mov
sub
add
inc
incl
repnz
repnz
fnsave
lret
dec
aas
jmp
jb
or
rcrb
push
ds
mov
std
ljmp
adc
fucomp
xor
fistps
dec
loopne
jmp
enter
push
shr
aad
and
xchg
repz
pop
and
jno
iret
or
shr
cmp
push
mov
mov
adc
repz
les
xor
rol
sub
mov
pop
jbe
psllq
and
aas
and
pop
mov
sbb
push
je
sub
jle
pop
xor
jle
xchg
cmp
add
sbbl
or
xor
xlat
xchg
jbe
fiaddl
movsl
lahf
test
jmp
lret
pop
insl
xor
push
clc
iret
pushf
sbb
dec
dec
add
or
xchg
aas
push
fwait
push
sbb
aaa
push
iret
scas
mov
pop
subl
cltd
adc
outsb
inc
add
loopne
sbb
ss
xchg
dec
push
sub
mov
repz
mov
push
jge
xor
adc
fcoms
lcall
add
sbb
je
mov
adc
inc
pop
mov
cmovne
cmp
out
insl
int
adc
push
push
cmp
and
jge
loope
mov
cwtl
mov
push
xor
adc
ja
jns
sbb
xchg
mov
aam
pop
mov
in
test
mov
jo
mov
cmpsb
and
divb
shlb
adc
ret
pop
ret
fs
daa
in
insl
loopne
mov
scas
push
aaa
out
sub
add
cmc
shlb
xor
cs
das
inc
or
cmp
popa
inc
adc
int
pop
xchg
jb
out
pop
mov
stc
push
movsb
push
mov
and
dec
into
bound
jo
pusha
shrb
pushf
icebp
pop
and
sub
dec
insl
std
bound
test
adc
mov
fldenv
call
or
sbb
ret
mov
idiv
xor
dec
bnd
mov
ror
push
xor
aad
fisubl
jp
lret
ret
add
pop
pop
mov
adc
in
arpl
shl
in
xorb
scas
cmpsl
mov
aad
repz
dec
ds
mov
insb
neg
mov
test
dec
mov
and
cmp
xor
cld
mov
ret
jbe
mov
push
sarb
pop
ljmp
jle
push
push
and
jmp
pop
jno
lret
int
pop
shrb
imul
test
add
or
or
and
dec
jo
mov
inc
inc
cmp
inc
in
mov
adc
mov
stos
inc
sub
push
rol
push
fcmove
jns
push
push
jl
xchg
aaa
ret
or
xor
repz
lock
push
add
xchg
cmpsl
jmp
adc
xor
iret
ds
dec
mov
adc
adc
and
mov
mov
out
int3
pop
cs
fnsave
pusha
mov
or
ret
bound
in
sub
pop
fsubrl
adc
scas
xor
dec
mov
loope
lock
push
sbb
push
sbb
mov
fldl
cmp
shrl
pusha
aaa
add
jno
xor
test
fdivrs
out
or
xlat
jno
pusha
xorb
push
ljmp
nop
sub
adc
inc
pop
pop
lret
test
cld
mov
popf
dec
mov
push
fcoml
xchg
mov
or
cmp
mov
ficompl
ret
pusha
inc
sub
aas
fisttps
lods
push
jecxz
jecxz
push
pusha
mov
es
enter
shlb
or
pop
pusha
incb
jb
cltd
popa
jbe
or
cs
daa
scas
dec
popa
fcomp
pusha
fidivl
pop
adc
xchg
fmull
xchg
or
jge
stos
cli
jecxz
pop
mov
pop
popf
add
cmc
push
mov
mov
movsl
mov
insl
xchg
push
shl
dec
mov
lods
jb
jbe
sbbb
jo
pusha
shlb
icebp
sub
int3
insb
rdtsc
fwait
dec
xlat
ja
das
push
xor
test
dec
and
stc
xchg
xchg
or
sub
jno
jne
jne
pop
inc
and
mov
iret
lcall
popf
xchg
mov
jbe
mov
aas
outsl
ja
xor
lahf
into
push
out
mov
jne
je
jmp
adc
mov
sub
and
sbb
and
arpl
ficomps
shrl
js
.byte
sbb
push
dec
.byte
