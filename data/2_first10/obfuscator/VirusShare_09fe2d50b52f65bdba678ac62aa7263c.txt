xchg
outsl
cltd
jecxz
mov
les
les
fs
imul
inc
addr16
shll
adc
dec
stos
xchg
xor
inc
mov
inc
jno
aaa
cmpsl
stos
push
es
mov
mov
xlat
pop
jnp
cmp
pop
stos
or
cmpsb
fildl
sbb
adc
cmp
mov
mov
fldcw
out
add
xchg
and
leave
js
inc
xor
xchg
cmp
test
in
fildll
es
xlat
push
jno
call
mov
mov
repnz
sub
mov
divb
subl
sub
jmp
push
or
ss
dec
cs
or
push
insb
or
mov
lods
lods
ljmp
js
daa
sbb
cmpsl
adc
movl
pushf
call
lock
cmpsb
push
sub
imul
int3
lods
jl
fldl
xor
jmp
mov
shl
out
das
jle
mov
shll
inc
or
mov
xlat
sbb
test
push
sub
int
scas
pop
jnp
fldt
inc
hlt
xor
bound
fbld
sbb
hlt
bound
cmp
ja
xor
sub
cmc
mov
sbb
mov
jmp
test
sub
or
cmp
pop
or
pop
pop
cmp
rol
mov
in
jl
sahf
out
jle
outsl
lock
call
outsb
test
std
stos
push
ds
mov
or
mov
push
sbb
bound
jecxz
leave
sub
faddp
adc
jmp
mov
jo
gs
dec
inc
pop
popl
or
clc
iret
ja
fsubl
inc
cmpsb
push
pop
or
sbb
or
mov
and
jae
sti
rorl
mov
mov
cld
cmc
iret
cmpsl
stos
sub
mov
int
jg
adc
nop
lcall
or
or
xchg
imul
push
iret
lahf
jno
popa
icebp
adc
jmp
xorl
fucomi
push
mov
jnp
repz
out
push
js
jno
pop
or
mov
or
fldcw
jecxz
shlb
xor
pushl
lea
jne
push
lea
call
pushf
movw
movb
lea
jmp
negb
jo
cmpsb
push
lcall
int3
sub
sbb
int3
inc
xor
aad
cmp
into
cmp
cmp
lahf
jo
push
jb
pop
in
fistpl
push
inc
pop
in
lods
cmp
daa
mov
shlb
mov
sti
fists
mov
cmc
daa
mov
test
jmp
mov
push
in
std
pop
outsb
fimuls
outsl
pushl
push
movsl
xchg
inc
xchg
sub
imul
shl
lahf
and
pop
and
push
daa
cmpsl
clc
movsl
in
jmp
fcoms
xchg
pop
les
fld
arpl
inc
icebp
cltd
mov
cltd
sbb
pop
add
ret
into
xor
popa
mov
xchg
adc
movsl
inc
sub
sub
mov
xor
lods
push
add
fdivl
inc
and
jle
xchg
sahf
pop
add
mov
jge
fs
je
push
pusha
movw
jmp
call
lea
call
sbb
les
push
inc
inc
out
pop
sbb
cltd
dec
or
adc
xchg
cmp
inc
add
repnz
lods
jl
ror
sub
push
sbb
pop
hlt
in
or
pop
ficompl
sub
sbb
sti
icebp
popa
insl
fbstp
inc
daa
cmc
sub
inc
lock
jbe
out
data16
inc
insb
xor
sbb
ret
in
jge
mov
sahf
mov
mov
in
inc
daa
mov
sysenter
sub
sub
push
lea
jb
pusha
movw
pushl
ret
adc
lea
pusha
jmp
lea
je
push
stc
pusha
push
cmp
jmp
pushf
lea
je
call
mov
push
jo
push
icebp
shll
adc
push
inc
arpl
ret
xchg
cmp
cli
jmp
lock
int3
jns
scas
icebp
lahf
test
add
mov
je
in
adc
and
mov
fsts
flds
movsl
mov
dec
ficomps
push
pminsw
sub
ret
sahf
fbstp
cli
mov
xchg
push
subb
enter
test
dec
push
mov
jae
pop
mov
or
add
jl
inc
and
push
cmp
adc
xor
and
push
pushl
ret
cmp
movl
call
pushf
lea
je
setge
sub
or
mov
das
cmp
pusha
mov
shl
bt
ror
shr
sub
or
mov
jmp
stos
pop
xor
push
outsl
jo
and
jno
icebp
jno
icebp
push
loope
mov
cmp
les
test
pop
andb
and
jle
push
cmp
test
gs
fnstsw
jnp
pop
test
iret
call
cmp
xchg
mov
mov
xchg
pop
sti
push
pushf
cmpsb
fs
push
inc
stos
xchg
scas
shl
add
mov
xchg
and
jmp
arpl
in
nop
mov
jmp
jns
push
inc
cmpsb
push
cmp
insl
aas
lock
bound
xchg
inc
repnz
into
daa
pop
imul
mov
sbb
lods
sub
sbb
add
jo
add
insb
adc
call
addr16
mov
sbb
sub
jo
dec
out
xchg
filds
imul
ret
mov
jmp
lea
ja
not
call
movl
pusha
pushl
jmp
aas
jns
ja
xchg
shlb
je
add
fs
call
push
push
adc
movb
call
push
movl
jmp
call
jmp
lea
call
push
pushf
pushl
lea
jae
inc
pusha
setl
mov
not
not
inc
not
mov
lea
pusha
pusha
pushl
lea
call
pusha
adc
call
lea
jne
jmp
push
lea
jne
jmp
sti
test
cmpsb
push
cld
sbb
add
mov
les
xor
mov
jnp
aaa
dec
pop
jp
cmp
sti
fwait
jnp
xor
mov
movsl
ja
dec
and
jae
test
pop
xchg
scas
arpl
scas
test
ffreep
std
daa
inc
shr
pop
push
jbe
pushf
les
xor
sbb
push
les
pop
into
lds
mov
ja
push
sub
mov
jne
daa
xchg
mov
cmp
mov
loopne
mov
pop
int
shlb
stos
ja
aas
inc
mov
adcb
bound
mov
push
gs
xor
jl
aas
mov
adcl
shlb
sti
fcmovne
jp
add
push
push
or
push
popfw
jge
pop
outsl
pop
sbb
ljmp
ss
out
ja
add
in
adc
mov
ljmp
fst
repz
jb
push
push
movl
pusha
pushf
jmp
pop
sub
cmpsb
push
inc
shl
bound
and
add
test
cltd
ret
sub
inc
in
lods
imul
push
jno
inc
enter
push
cmp
psubusb
flds
jne
stc
frstor
shl
cltd
dec
or
stos
mov
mov
mov
lahf
sub
in
jle
das
add
andb
inc
mov
into
jb
lods
xor
adc
insb
push
aaa
jmp
jno
xchg
cmpsb
push
pop
cmp
sub
jmp
cmp
and
and
xchg
enter
lahf
ret
in
test
nop
mov
add
addr16
lcall
imul
shlb
cld
cmp
int
iret
outsb
bound
inc
mov
rclb
fldenv
push
and
loop
mov
xor
int
pop
lock
in
xor
cwtl
popf
lcall
outsl
pop
pusha
add
and
daa
ja
fisttpll
mov
add
cmc
inc
sahf
loop
mov
ss
push
into
adcl
insb
cmp
aam
fwait
scas
scas
aas
repz
fiaddl
and
in
negl
call
inc
inc
inc
adc
mov
pop
jns
insb
bound
jp
les
dec
loopne
lsl
ret
ret
xchg
push
jne
das
pusha
cli
mov
pushf
or
push
xor
mov
jecxz
or
inc
nop
loopne
test
cmp
repz
pop
int3
push
add
sbbb
adc
add
outsb
mov
mov
cld
push
sbb
push
hlt
jmp
inc
incl
pushf
mov
movsbw
push
call
mov
movb
mov
not
push
mov
mov
pushl
ret
lea
jne
xor
shld
rcl
setns
mov
or
test
pushf
shrd
sub
bswap
ror
rcr
lea
cmc
movw
push
sub
stc
cmc
bt
pushl
popl
movb
stc
call
bt
stc
test
call
pushf
lea
ja
stc
adc
jmp
pushl
dec
pushf
ror
std
clc
pushw
popfw
mov
pushl
inc
call
add
inc
imul
outsl
ja
add
addl
xor
add
lock
lea
jae
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
movsbw
movsbw
movsbl
call
movw
pushf
lea
jb
pushf
pushl
cmp
cmp
pusha
push
lea
je
pushf
lea
ja
shl
add
inc
clc
xor
mov
clc
cmp
pushf
jmp
dec
stc
stc
ror
call
lea
jge
push
jmp
test
add
pusha
test
cmc
cmc
mov
pushf
test
movw
lea
je
cmc
stc
add
stc
cmc
call
stos
fidivrs
cmpsb
push
ret
loop
adc
aad
out
divb
lret
xchg
shll
mov
push
sub
xlat
and
mov
pop
inc
imul
cmc
or
inc
mov
or
ds
shlb
cwtl
adc
mov
or
fisttpll
out
sub
and
pushf
pusha
jne
mov
xchg
mov
inc
mov
movzbw
not
mov
pushf
push
pushl
ret
cmc
call
mov
call
stos
into
mov
pusha
adc
ret
and
fimull
dec
push
mov
xor
into
jnp
ror
lahf
rcll
sub
jae
pop
jbe
xchg
sahf
divl
ja
movsl
clc
popa
bound
jmp
xlat
or
jae
popf
xor
ret
push
repnz
dec
pop
or
repz
dec
inc
movsb
jmp
pop
inc
or
pop
mov
xor
mov
ror
mov
pushf
mov
mov
repnz
pushf
pushf
lea
jne
not
not
not
call
xchg
mov
pop
push
dec
movsl
push
rclb
mov
sub
xor
and
fbld
shrl
pop
mov
test
sub
lret
dec
inc
cmp
mov
xor
aam
sub
daa
and
cmpsl
inc
cmp
cmp
inc
push
fidivrl
and
rcrl
aas
roll
fcom
icebp
aaa
ret
ret
sub
pop
dec
lea
rcr
xchg
das
xlat
cmp
cmp
add
mov
cmpsl
push
and
outsl
mov
cmp
scas
xor
pop
insb
xor
and
call
jmp
in
jnp
fsincos
test
mov
bound
xor
mov
jno
test
xor
and
add
add
scas
xchg
std
sub
and
push
sub
dec
or
inc
sub
movsl
in
adcl
lds
pop
into
sub
fsubrs
lret
xor
xor
jne
loop
inc
movsl
je
cmc
cmp
lods
push
sub
cli
pop
ret
cmp
aad
arpl
fs
lods
jge
mov
ss
fldt
addr16
lods
jns
jae
insl
imul
lods
pop
and
addr16
addr16
addr16
loop
test
rcr
mov
fs
sub
dec
js
xor
repz
int3
jmp
sub
dec
fldt
pushf
xchg
loope
pop
cmp
fcmovnbe
sub
push
pop
repnz
mov
mov
mov
mov
xor
jge
xlat
fnsave
push
push
mov
fcomi
movsl
mov
adc
ljmp
movsb
das
xlat
push
int
adc
int3
pop
daa
test
rcrb
cmpsb
inc
sarl
pop
mov
inc
jo
stos
push
inc
push
sub
sub
pop
test
shll
rcll
fldt
mulb
dec
sub
roll
fxch
fldl
inc
sub
cmp
inc
in
fistl
inc
xorb
fisubrl
call
sub
es
fcomps
sub
cmp
and
xlat
daa
jp
aas
xlat
lds
mov
addb
cmpsl
movsl
es
lret
jo
arpl
push
xor
mov
inc
jno
push
movl
xor
cmp
mov
lds
mov
dec
sub
mov
rcl
xchg
rcrl
imul
adcb
push
repz
xlat
dec
aaa
push
cmpsl
aad
outsl
sub
cmp
je
push
negb
sub
mov
push
scas
daa
roll
pop
fs
xor
push
lret
rcr
daa
pop
cmp
dec
push
jnp
jbe
daa
shlb
mov
pop
jl
outsb
pop
fs
pop
stos
fcomps
and
and
push
cmp
cmp
mov
dec
sarl
lret
sub
jg
lea
jo
jbe
push
xchg
push
dec
js
mov
aad
jge
fnsave
push
cmp
mov
mov
inc
gs
repz
inc
shrl
xchg
aad
jp,pt
xor
leave
inc
imul
daa
insl
cmp
cltd
int
cmpsb
sarl
fdivrs
mov
jbe
inc
inc
push
scas
xchg
xchg
icebp
push
mov
jbe
test
or
mov
dec
inc
rcrl
ret
dec
insl
adc
fldt
push
push
adc
cmp
mov
imul
push
inc
mov
cmp
mov
sahf
jne
jno
inc
test
mov
jae
out
push
sahf
lods
pop
mov
mov
pop
pop
inc
mov
lahf
mov
sub
in
ds
addr16
out
jmp
cmp
xor
push
mov
adcl
ficomps
popa
or
and
xchg
lret
jp
cmp
push
dec
push
sub
std
xchg
pop
das
inc
les
aad
xchg
in
push
aaa
and
clc
push
push
mov
jae
pop
lcall
dec
dec
int
inc
xor
sub
xchg
sub
xchg
mov
outsl
arpl
xchg
jno
and
ja
mov
fcmovbe
sbbl
arpl
cmc
inc
ret
pop
cmp
repz
pop
dec
push
imul
push
daa
jnp
mov
nop
push
sub
adc
inc
movsl
push
data16
xor
and
jmp
test
inc
sub
and
mov
das
xor
in
test
xor
mov
pop
mov
inc
dec
in
sub
xor
xor
lahf
xor
or
stc
das
jbe
in
cmp
popl
dec
inc
lahf
stc
sub
ret
mov
dec
cs
stos
lea
mov
cmp
sbb
xor
xlat
push
pop
fucomip
xor
mov
inc
outsl
xchg
push
or
push
sub
dec
sbb
inc
ret
mov
and
adc
push
pop
inc
les
jp
lods
repnz
loope
and
dec
bound
test
shl
aas
xor
int3
pop
les
mov
and
shlb
and
and
les
mov
lahf
jbe
shlb
sub
sub
mov
mov
xchg
and
and
popa
xor
pop
and
loop
jecxz
and
gs
out
out
and
imul
insb
and
insl
in
outsb
out
outsl
out
jo
lock
jb
jae
je
hlt
jne
jbe
ja
js
clc
jns
jp
jnp
jl
cld
jge
jle
jg
andb
addl
test
add
xchg
mov
or
or
and
adc
xchg
adc
xchg
push
xchg
pop
xchg
sbb
lcall
popf
push
sahf
pop
lahf
and
and
and
daa
cmpsl
sub
stos
sub
and
xor
mov
mov
mov
and
cmp
mov
and
inc
rcll
rclb
push
aam
aad
and
push
xlat
pop
fcomps
pop
and
pop
fistpl
fstpl
into
dec
iret
push
rclb
xor
loopne
and
popa
jbe
roll
inc
ret
inc
les
inc
and
dec
enter
lret
lret
dec
int3
dec
int
lods
xor
idiv
rcl
pop
sub
aad
fstl
fmul
std
rcr
out
sub
fisubrl
mov
push
fcomps
xlat
lret
in
das
mov
push
inc
sub
pushf
dec
insl
lret
jbe
sub
stos
repz
jo
push
pop
push
lret
add
mov
cmc
jg
mov
add
push
dec
movsl
jae
dec
stos
xor
pop
mov
rcrl
pop
sahf
pop
mov
push
scas
test
pop
cmp
pop
mov
xchg
xchg
xchg
cltd
xchg
pop
cmp
xchg
dec
pop
sub
mov
rcrb
mulb
xchg
or
cwtl
mov
jo
aas
sbbb
popf
sub
cwtl
mov
jge
mov
xchg
scas
cmp
lcall
xchg
cli
imul
dec
pop
xchg
add
jne
jno
fcmovnu
icebp
in
ds
daa
or
xchg
pop
add
jp
add
inc
mov
xchg
shrb
and
shll
mov
dec
pop
shl
lds
inc
cmpb
cmpsb
mov
mov
xorb
in
es
jns
xor
cs
and
xor
mov
icebp
test
out
cmp
mov
loope
mov
icebp
test
mov
cmpl
push
sub
sbb
add
leave
int3
icebp
lods
xor
sub
jp
jl
mov
ret
lea
cltd
sub
popf
subb
into
cmp
arpl
out
das
dec
mov
push
pop
jmp
push
pop
shlb
fnstenv
fwait
xor
pop
and
pop
fistpl
fisttpll
push
pop
pusha
popa
stos
sub
push
jne
inc
or
mov
sbb
and
test
push
cltd
inc
pusha
push
xor
sbb
inc
pop
in
sub
jno
jns
jg
mov
xchg
in
test
xor
inc
inc
repz
outsl
xchg
pop
movsl
inc
addr16
jns
test
mov
jmp
fnsave
movsl
inc
inc
dec
push
in
sub
jo
jge
test
mov
mov
xor
movsl
cmp
inc
in
sub
pop
inc
jmp
jge
imul
data16
xchg
add
sub
ss
mov
adc
cmp
pop
outsl
mov
pushf
call
fstpt
push
add
jae
cmp
packsswb
and
fisttps
fwait
call
mov
sub
xchg
sub
cltd
mov
mov
add
scas
pop
andl
add
iret
cmpsb
push
cmp
sub
jge
jp
xchg
and
ss
jmp
mov
ja
fmuls
mov
inc
jge
dec
jle
test
dec
pushf
iret
dec
push
cmp
ljmp
and
sbb
imull
xchg
xchg
ret
pop
sbb
mov
add
in
jmp
int3
add
bound
test
mov
mov
roll
aaa
pop
adc
inc
mov
jl
or
rcr
xchg
shlb
push
movsb
and
xchg
insb
sbb
test
xor
ljmp
cmp
in
popf
aam
lds
xor
adc
mov
inc
lds
mov
add
jecxz
sub
mov
scas
lahf
cmpsl
popf
lahf
loopne
dec
sbb
or
and
rclb
loope
shll
mov
jp
aam
mov
test
jo
push
push
inc
cmpl
scas
mov
push
dec
add
add
loopne
jl
xchg
test
loop
xor
dec
and
cltd
xlat
push
mov
aad
rcll
lea
aad
sub
xor
mov
xor
stos
cmpsb
push
pusha
mov
fwait
ja
gs
out
ja
int
or
jp
mov
fnstcw
pop
cmp
sub
xor
xor
adc
insl
xlat
pop
dec
das
cmpsb
inc
sbb
cli
out
shl
jno
pop
cs
mov
xchg
inc
ret
xchg
and
sbb
inc
and
jle
scas
jb
jg
pop
std
scas
in
add
xor
mov
jge
xchg
test
jecxz
das
inc
and
out
adcb
xchg
aad
push
call
and
fisttpll
in
inc
in
cmp
cmp
add
push
or
das
test
sub
sub
scas
iret
dec
lahf
das
movswl
xor
push
mov
sub
push
cmpsl
and
and
pusha
add
jmp
daa
sub
xchg
arpl
sbb
int3
jl
mov
add
in
ficomps
jg
and
icebp
sub
in
cmp
jo
jmp
adc
popf
sub
mov
aaa
out
ficomps
ds
enter
mov
add
push
aam
int3
xor
jae
adc
sbb
cmpsb
andb
sub
add
lret
pop
ret
jo
fmuls
or
add
pushf
mov
lea
call
push
mov
push
lea
jae
bt
cmp
stc
cmp
sub
call
pushf
jmp
jmp
shl
rol
mov
neg
mov
sar
cmp
stc
seto
mov
test
mov
cmp
call
movb
lea
mov
push
bswap
lea
jmp
and
shrd
add
pop
dec
movl
xor
movb
not
or
mov
sub
jmp
add
bound
push
test
cli
cmp
sub
std
lea
xchg
out
scas
sbb
and
cltd
inc
scas
and
jle
out
pushf
pusha
and
andb
hlt
je
fwait
pop
inc
repz
or
cli
jnp
fmull
outsl
adc
cwtl
inc
mov
dec
or
sahf
xor
sbb
mov
adc
fimuls
out
por
cmp
leave
lahf
cmp
push
negl
aam
mov
test
xchg
mov
loopne
push
ja
dec
rol
push
mov
pushf
pushf
pushl
ret
rcl
setb
rcr
pusha
mov
cmc
cmp
jmp
call
and
mov
add
jne
aad
cmp
cmp
daa
shl
js
or
cmp
mov
sub
sbb
imul
lret
mov
sahf
sbb
jmp
shlb
jmp
pop
in
loopne
lods
inc
cld
lods
mov
mov
jl
gs
pop
dec
enter
xchg
mov
out
sbb
push
out
sub
imulb
jle
push
aaa
das
aas
fcomip
cmp
bt
test
pushl
cmc
clc
cmp
pusha
jmp
push
jmp
icebp
out
mul
jns
vmwrite
fisttpl
loope
jns
fistl
jns
out
jns
fcomi
notl
out
icebp
jns
fnstsw
jmp
repz
out
jecxz
loope
cmc
adc
outsl
adc
testl
xlat
add
call
or
jne
je
rcr
add
movsbl
shr
rcr
xadd
sub
push
sbb
add
jmp
pushf
movl
mov
movl
pusha
lea
jmp
pusha
shld
mov
shr
rcl
rcr
sbb
add
pusha
mov
lea
call
call
cmp
cmp
cwtl
not
call
jmp
jo
imulb
cmpsb
push
stos
cli
lcall
mov
adc
sahf
pop
rol
or
into
jnp
lcall
enter
jmp
lods
testb
repnz
or
mov
push
push
ljmp
call
daa
lock
lahf
ret
mov
and
nop
fisttpl
lea
push
fcmovu
hlt
pop
popf
popa
in
mov
or
loopne
cld
sub
add
addb
roll
aad
sub
dec
aas
lea
mov
enter
popa
test
das
jp
sub
fcomps
xchg
mov
push
shll
mov
shrl
fdivr
push
xor
cli
pop
xor
fwait
jg
addr16
addr16
cmpsb
mov
or
bound
in
sub
sub
xchg
push
add
or
mov
push
fs
jb
call
mov
pushf
mov
jmp
add
cmp
in
fstpl
or
mov
pop
sbb
pop
pop
mov
cmpsl
xor
inc
xchg
or
inc
cltd
mov
cs
shrb
sbb
mov
mov
shll
adc
sub
pop
xchg
ficomps
xchg
add
adc
and
inc
pop
mov
dec
sahf
xchg
sbb
pusha
mov
fcmovb
jbe
testl
pop
and
lahf
in
jmp
jae
pop
aaa
mov
jbe
jge
pushf
bswap
sar
mov
call
pushf
call
sub
jmp
lods
pop
das
sub
sub
sahf
push
into
cs
repz
hlt
pop
push
movsl
stc
test
hlt
mov
aam
push
cmc
mov
jo
adc
testl
pushf
sbb
xchg
out
adc
xor
cmc
out
jle
pusha
inc
jno
mov
or
inc
jmp
loop
cmp
js
lret
call
mov
xor
repnz
mov
and
or
mov
adc
pop
or
and
int
push
lea
call
pusha
adc
mov
pusha
pushf
lea
jae
call
ror
mov
pushf
cmc
cmc
cmp
repnz
pushl
lea
jne
movzbw
lahf
lea
movb
call
adc
push
daa
cmpsb
push
test
in
fisttpll
fidivrs
mov
xlat
gs
jmp
shll
lods
pusha
xor
mov
mov
push
jg
repz
imul
inc
mov
adc
nop
insb
popf
sub
adc
dec
iret
andl
mov
idivl
mov
cmpsb
push
mov
lds
gs
repnz
pushl
dec
insl
ss
mov
shrb
cmp
sub
sub
push
inc
mov
loope
sbb
ja
lahf
xor
cld
lock
mov
sbb
fidivrs
mov
and
xchg
hlt
pusha
loopne
or
adc
sub
xchg
icebp
lahf
sub
ds
sub
cwtl
lret
cmp
cld
outsb
jg
xor
push
xchg
sub
pushf
popf
out
adc
dec
mov
cmp
inc
out
xchg
dec
stc
aad
add
lods
shlb
jno
ret
cmc
fiaddl
subb
jno
push
add
pop
jo
xor
and
dec
mov
pushf
pushf
push
lea
jmp
pushf
movl
pushf
mov
mov
pushl
push
pushl
push
pushl
ret
lea
ja
jmp
lea
jne
clc
bsf
pushf
mov
cmc
call
setne
lea
cwtl
mov
jmp
cmpsl
push
xor
fldcw
cltd
sbb
cmp
xchg
inc
push
mov
fldcw
mov
mov
stos
dec
cli
sub
or
inc
rcrb
add
pop
inc
push
pop
dec
fmuls
push
fdivrs
sbb
pusha
inc
jns
and
sbb
scas
mov
cmpsb
push
movsb
adc
data16
shlb
into
daa
jns
xchg
or
inc
xchg
inc
in
fs
xor
fs
loop
es
cmpsl
cmpsb
out
mov
push
mov
or
cmp
in
adc
add
sub
shr
ret
fcoml
int3
jl
xchg
mov
test
mov
enter
xchg
mov
xchg
mov
shlb
and
jae
pushf
mov
pusha
lea
jne
call
jnp
jmp
cmpsb
push
adc
adc
add
mov
mov
add
push
cwtl
loope
xchg
aaa
mulb
iret
ja
pop
jnp
aam
xchg
mov
cmp
mov
and
cmpsb
insb
fsts
mov
mov
dec
adc
jbe
movsb
push
mov
adc
inc
aas
outsb
adc
cmpl
lea
sub
js
fisttpl
mov
pop
int3
pop
in
adc
cmp
ret
xor
mov
or
aaa
or
jae
sbb
jnp
inc
out
das
jecxz
ljmp
xchg
mov
xchg
sub
cli
pop
pop
fbstp
in
bound
lret
mov
jmp
lret
popa
mov
popf
mov
pop
mov
jns
ficoms
or
add
fdivrl
mov
sbb
orl
inc
imul
lods
negb
jb
sbb
jecxz
in
aas
fldcw
add
lock
add
repz
add
cmp
cmpsb
push
rol
jecxz
ret
add
in
gs
inc
mov
ror
pop
in
mov
cmpsb
add
jl
pop
or
aad
lahf
push
lahf
ret
xor
inc
loop
or
enter
in
or
out
dec
mov
cmp
cmpsl
sbb
cmpsb
movsb
mov
xorb
xchg
mov
mov
pop
test
std
test
sbb
call
push
push
pop
pop
in
loop
inc
cmc
shll
out
pop
movsb
mov
push
add
sti
mov
cmp
mov
clc
or
mov
sbb
mov
shll
aas
mov
and
or
mov
test
add
xchg
addl
sub
popa
adc
into
icebp
sub
fldl
idivb
ja
mov
and
cmp
test
sti
cmc
mov
mov
push
pushl
lea
je
jmp
add
push
lea
jmp
outsl
sbb
and
mov
push
mov
jecxz
fiaddl
inc
pop
mov
jns
in
divl
push
loopne
and
ja
inc
adc
or
xchg
imul
daa
hlt
and
aad
xchg
pop
adc
sbb
adc
std
jns
mov
aas
jecxz
dec
and
adc
pop
stos
into
aad
stc
mov
jae
test
jl
fstps
push
out
inc
pop
cmp
lret
sub
or
jecxz
cmp
sbb
dec
bt
mov
shl
add
sbb
mov
pushf
repnz
jmp
jmp
imul
inc
loopne
mov
add
popf
xchg
add
mov
mov
mov
sar
in
cli
pop
loopew
fwait
in
xchg
jl
popa
mov
mov
stos
sbbl
rcl
push
adcb
push
stos
jbe
dec
sti
pop
xor
ljmp
loopne
loope
jne
jb
xrelease
das
adc
or
xchg
stos
push
arpl
ds
xlat
pop
fistpl
test
fs
call
jae
pusha
lea
jb
push
pushl
movb
pushl
ret
lea
jae
push
lea
jne
pusha
stos
mov
mov
lea
jmp
add
pushf
pushl
lea
je
cmc
cmp
add
pusha
push
movb
lea
jmp
mov
pushl
movb
push
push
movb
pusha
lea
jmp
cmc
stc
cmc
push
or
pushf
pushl
lea
jne
cmp
dec
mov
pusha
or
pushf
lea
je
call
stos
pop
xor
cmpsb
push
lods
jl
cmp
jl
out
pop
pop
scas
mov
push
stos
pushf
push
jg
cmp
mov
cwtl
insb
loop
push
or
and
push
idiv
inc
insb
dec
and
jle
push
dec
jecxz
jnp
inc
je
push
jbe
lds
in
inc
adc
adc
stos
nop
sub
iret
pop
mov
add
out
dec
sub
dec
mov
and
xchg
jmp
adc
inc
adc
xchg
sti
xor
dec
xchg
addr16
jg
jno
ret
ja
jno
popa
sub
cmpsb
push
aam
push
xlat
push
push
jmp
scas
mov
sub
sbb
sbb
lods
rcll
dec
cmp
pop
mov
sub
push
inc
addl
or
shl
movsl
ret
mov
icebp
jne
jge
scas
rcll
mov
add
lock
mov
mul
sub
movsl
xchg
add
mov
ja
std
iret
dec
daa
xchg
inc
les
mov
xchg
jmp
aam
pop
adc
dec
inc
out
jle
pop
sub
jne
mov
xor
cmpsl
mov
push
jl
pop
int3
jl
dec
insl
sahf
lahf
mov
pusha
xor
insb
push
lahf
loop
pop
xlat
pop
aam
and
das
xor
dec
cwtl
sti
outsb
push
lret
mov
push
cld
shlb
cltd
mov
mov
sub
cwtl
lods
in
xor
pushf
dec
add
pop
jle
add
mov
add
pop
ds
fwait
mov
or
lock
lcall
pop
pushl
stc
cmp
movb
pushl
pushl
push
lea
jae
rcl
adc
mov
add
mov
test
bswap
sub
xor
mov
pushf
xor
pushf
pushf
test
repnz
push
lea
jne
xor
or
ror
mov
add
bt
rcr
xor
sub
bsr
mov
stc
sub
bt
test
stc
pushl
jmp
addr16
push
cmpsb
push
xchg
adc
xor
imul
arpl
lahf
aaa
mov
xchg
andb
inc
add
inc
and
push
push
push
ret
or
mov
mov
not
sarl
dec
add
insb
dec
mov
in
jae
dec
push
adc
mov
clc
cwtl
xchg
cmpsl
repz
insl
rcll
repnz
push
sub
inc
add
push
xlat
addr16
out
xor
popf
cmp
movsb
push
jecxz
xor
jnp
sbb
dec
pop
ss
cmp
xor
fwait
dec
ret
or
pusha
or
pop
arpl
pushl
popl
bt
cmp
call
mov
bt
cmp
lea
jae
jne
push
inc
call
ja
gs
sub
pushf
mov
loopne
adc
pop
mov
cmp
in
pmulhw
repz
int3
inc
imul
repz
test
adc
inc
mov
call
loop
add
lds
scas
enter
inc
cmpsl
sbb
das
mov
daa
mov
out
inc
jo
add
scas
aas
fists
cltd
bsr
lea
add
adc
mov
call
dec
mov
cmc
mov
bsf
stc
mov
test
stc
push
call
std
stos
fistps
push
jle
das
scas
loopne
icebp
roll
xchg
and
xor
xor
jae
mov
sub
fwait
out
xchg
notl
and
or
fcompl
jno
into
inc
jmp
iret
repnz
dec
adc
mov
mov
add
pop
stos
lret
sbb
cmp
rorl
sbb
nop
jmp
xchg
push
inc
gs
inc
aas
add
mov
jns
loop
insl
nop
stc
fmull
jp
push
add
mov
mov
dec
mov
xor
bnd
push
lcall
jp
ja,pn
pop
repz
cmpsb
push
and
aaa
sub
sbb
or
dec
pusha
mov
mov
and
ds
inc
out
js
and
adc
mov
iret
xchg
pop
sbb
push
pop
loopne
enter
or
movb
jge
and
lcall
shrb
pusha
cli
or
push
incl
mov
dec
and
rclb
sub
popa
xor
push
inc
pop
imul
je
cmc
mov
lcall
cwtl
sub
scas
mov
bnd
push
inc
fs
pushf
ljmp
in
insl
nop
cmp
pop
pop
cmpsb
xchg
fildl
daa
js
jecxz
inc
lock
sahf
repnz
das
andb
or
push
mov
into
lret
mov
out
adc
fsubl
push
push
iret
adc
and
jmp
je
sub
push
or
jmp
push
or
int
mov
call
cmpsb
push
ljmp
int
sahf
push
into
mov
fldpi
dec
enter
decl
fiaddl
leave
lahf
adc
pop
jns
push
sub
mov
xchg
cmp
push
add
ljmp
jl
jmp
ret
sahf
jo
mov
mov
mov
push
out
lods
mov
xchg
pop
inc
fmuls
mov
ja
fdivs
repz
dec
sahf
and
xchg
ds
sbb
push
ss
mull
popa
inc
push
cmc
xchg
jno
add
rcl
xchg
adc
adc
jmp
sar
addr16
xchg
inc
repz
enter
sub
lods
ficomps
cmpsl
daa
mov
xorb
in
jmp
movsl
mov
xorl
pop
sub
xorb
fiadds
and
add
pop
jnp
inc
mov
and
push
ret
test
pop
jnp
cmpsb
mov
and
movsl
push
cwtl
scas
aas
lret
lods
loope
test
mov
inc
push
and
sti
out
jmp
xor
mov
add
cwtl
pop
jnp
xchg
outsl
outsb
das
leave
cltd
sub
sub
into
cmp
cmp
outsb
push
outsb
or
stc
lods
rcrb
lret
pop
scas
push
mov
movsb
cmc
popf
sub
and
add
orl
jnp
dec
lahf
xor
push
and
cmc
imul
xchg
add
jne
push
daa
out
leave
jno
inc
inc
push
xchg
push
xor
rorl
sub
jg
cmp
int3
ja
adc
or
adc
jp
add
inc
push
jp
mov
mov
pop
ds
lods
clc
call
push
push
cmp
call
jmp
push
call
movb
movb
bt
sub
mov
movb
mov
cmp
call
lea
jne
pusha
pushf
movw
pushl
lea
jmp
lea
ja
seto
push
inc
lea
not
not
not
inc
dec
shr
xchg
pushf
btc
mov
rcr
mov
dec
setl
mov
lea
clc
push
cmc
movzbl
bsr
ror
mov
cmc
sub
call
insb
cli
pop
cmpsb
push
jecxz
mov
test
and
jne
outsb
jp
inc
add
xchg
aas
out
lahf
ret
enter
insl
jle
adc
ja
das
xlat
aaa
mov
lret
inc
rcrl
adc
and
mov
jno
data16
arpl
sbb
shlb
jo
fstpl
add
pushf
push
call
call
neg
bsf
rcl
add
movsbw
mov
push
stc
add
stc
mov
rcl
rcr
mov
bt
clc
movb
jmp
add
dec
gs
popa
addr16
outsl
js
add
xor
cmpsb
push
mov
and
xchg
cld
dec
outsl
scas
stc
lahf
ret
movl
fs
hlt
inc
gs
sbb
xchg
mov
hlt
mov
pop
dec
sbb
cmpsl
push
add
stc
lahf
ret
dec
lret
stc
lret
je
lret
cmp
rorl
sbb
hlt
icebp
cwtl
pop
cmpsb
push
fs
lds
sbb
jmp
ss
jmp
ss
cli
lret
je
aaa
daa
clc
call
fldcw
xor
pop
scas
or
les
push
repnz
pop
outsl
inc
jno
mov
inc
mov
les
mov
cli
push
fimull
sub
sub
sbb
xor
jp
sbb
clc
call
mov
pushf
mov
and
inc
adc
jno
jl
loopne
jl
aam
out
jb
and
movsl
mov
push
stos
mov
jae
push
mov
push
mov
cmp
add
sbb
adc
pushf
dec
pushf
mov
dec
mov
inc
lea
jl
mov
call
mov
push
pusha
adc
inc
mov
cltd
push
sahf
rolb
mov
mov
add
and
loop
ret
and
loop
mov
push
ljmp
decw
pop
imul
fdivs
test
stos
sbb
and
lret
dec
repz
cmp
repnz
mov
fmuls
fimuls
loopne
rolb
add
movb
and
mov
mov
mov
pushl
test
jmp
cli
sbb
sahf
iret
jg
and
jno
stc
aad
enter
into
mov
push
test
dec
jnp
adc
adc
pop
add
roll
mov
fsubr
or
or
pop
push
mov
dec
bound
mov
mov
add
inc
lea
mov
jmp
stc
arpl
daa
inc
and
adc
sub
test
mov
movsl
push
daa
pop
add
add
scas
cs
or
xchg
scas
mov
push
cmp
push
add
test
sub
add
add
shld
push
cwtl
mov
stc
clc
cmp
mov
cmc
lea
shl
sub
shl
ror
push
test
pushf
rol
dec
mov
bswap
call
call
pushl
popl
pushf
movb
pushf
mov
pushl
ret
aas
in
popf
adc
jg
adc
add
xor
data16
mov
cmp
xor
fisubrl
imul
pop
jmp
jmp
fistps
xchg
aas
psraw
jp
push
ja
enter
add
enter
cmp
mov
lods
dec
mov
cli
pop
jnp
movsl
xchg
sbb
cmp
outsb
adc
mov
in
push
sub
jnp
std
ds
rcll
ret
mov
test
mov
pop
cmpsb
jbe
shll
test
loop
xor
xlat
test
or
sub
mov
and
mov
dec
push
mov
dec
imul
jno
and
jge
push
dec
cmp
insb
sbb
dec
test
push
mov
aam
les
add
hlt
xlat
cwtl
cmpsl
cmp
iret
lock
dec
insl
icebp
ss
fmuls
hlt
pop
cltd
jp
ret
inc
aaa
pop
dec
lea
mov
xchg
movzbw
call
xor
adc
push
addr16
cmp
mov
ret
into
daa
pop
jge
add
cmp
add
push
ret
jae
daa
orb
pop
fcomps
mov
outsl
mulb
push
jge
shrb
xor
jecxz
adc
shrl
enter
cmp
sub
mov
dec
ret
aaa
out
pop
mov
int3
dec
sbb
les
lock
jb
test
adc
fldt
push
jbe
inc
mov
out
add
mov
adc
or
add
jno
and
daa
nop
jo
shl
mov
dec
mov
cmpsb
out
js
or
mov
out
inc
cmp
stos
mov
push
add
icebp
hlt
frstor
mov
cmpsb
push
sub
stos
imul
stos
lods
fstpl
mov
jo
cwtl
clc
movsl
loop
fldt
lret
out
xchg
push
push
mov
movsl
xchg
inc
ret
cmp
dec
sub
adc
jno
out
dec
pop
bnd
mov
imul
or
mov
push
cmp
add
mov
outsl
std
dec
test
lea
mov
mov
mov
fs
sub
popf
scas
mov
shll
lcall
xchg
mov
push
lds
jmp
jns
jno
test
jns
push
pop
ljmp
xchg
cmp
xchg
hlt
or
or
divb
push
mov
lods
test
or
cli
jnp
fdivrp
sub
add
out
add
sbb
xor
andl
or
hlt
loope
test
pop
ljmp
je
ss
xor
mov
jb
pop
jge
dec
mov
js
out
pusha
bound
hlt
mov
insb
pop
inc
pop
pushf
into
daa
lods
lcall
stc
ds
leave
xchg
fisttpll
jl
dec
cmc
push
mov
mov
push
push
loop
mov
mov
xchg
mov
mov
out
das
and
push
add
pusha
jno
add
in
add
hlt
add
add
rclb
icebp
lahf
addb
mov
das
jle
push
loop
adc
popa
ret
cmp
and
loope
shlb
xchg
mov
cmp
fxch
ss
or
loope
push
push
repnz
out
cld
sar
pop
int
jb
cmc
bound
or
push
pop
loop
sbb
je
sti
push
mov
jae
sbb
fs
jmp
stc
mov
bt
pushf
shr
stc
bt
cmc
jmp
pushf
pushf
lea
ja
stc
pushf
cmc
imul
pusha
jmp
xor
push
pop
cli
dec
mov
and
mov
mov
mull
insl
nop
inc
hlt
sub
pop
faddl
mov
nop
sub
testl
outsl
xchg
icebp
mov
test
pop
in
jp
jne
lret
pop
lahf
sbb
nop
pop
pop
pop
lock
mov
inc
addr16
iret
jl
inc
in
dec
stos
outsl
je
pusha
mov
xchg
movzbw
push
pop
mov
movzbw
not
jmp
loope
test
cmpsb
push
test
inc
aaa
mov
sub
sti
ja
jl
cmp
aaa
sbb
icebp
lahf
rolb
iret
stc
inc
ret
mov
push
push
aam
int
in
divl
pop
or
jno
scas
pop
add
and
dec
out
sub
xchg
adc
and
inc
imul
mov
cmp
mov
ret
mov
sbb
jno
pusha
push
movl
lea
jne
pusha
call
clc
stc
cmpb
jmp
mov
movb
jmp
jmp
cmc
push
repnz
push
jmp
stos
mov
lea
jmp
bswap
push
push
jmp
int3
jns
xsha256
cmpsb
push
cli
cmp
dec
sbb
pop
insl
mov
pop
lahf
les
mov
inc
iret
cmpsl
pop
fisttpl
int3
mov
insl
insl
or
dec
mov
orb
pushf
xchg
sbb
and
mov
pop
jmp
stos
sub
xor
xor
push
addr16
repz
aad
arpl
lret
and
sbb
push
cmp
mov
xor
xor
fs
mov
and
aaa
out
test
cmp
into
clc
imull
insb
fdivl
push
lods
push
adc
xchg
jno
int3
mov
out
add
push
movsl
push
leave
and
or
ja
lahf
imul
call
lods
jmp
jge
xchg
into
pop
out
pop
in
and
mov
mov
insl
pop
sbb
std
dec
and
sub
push
es
mov
lods
jle
push
jns
data16
out
sub
cwtd
or
push
adc
dec
xacquire
fiaddl
in
mov
call
push
mov
dec
fidivrs
aas
jo
je
int3
stc
mov
dec
jle
push
pop
shrl
adc
xchg
push
add
adc
repnz
inc
pushf
mov
pop
cmpsb
add
inc
mov
icebp
notl
pop
cmpsl
aaa
insb
sbb
or
jle
xchg
ljmpw
mov
cmp
inc
repnz
dec
ja
gs
cmpsb
push
js
or
stos
pop
fwait
int3
dec
pushf
push
int
shlb
inc
jns
sub
stc
das
pavgb
in
push
and
pop
ret
xor
pop
cli
mov
std
lods
pop
xor
sahf
leave
and
popf
rol
jg
outsl
movsb
andb
jp
rclb
sbb
outsl
in
out
scas
lret
xchg
lret
lret
push
sahf
in
xchg
cmp
pushf
roll
push
je
adc
imul
insb
sbb
icebp
mov
jge
mov
cmp
popf
push
out
jno
loop
fistpll
and
ffree
test
cs
push
dec
xchg
mov
lret
xor
cmpsb
push
movsb
aad
data16
xchg
aaa
cmp
fsubrs
mov
cwtl
add
mov
lahf
inc
mov
inc
push
inc
gs
rcrb
jecxz
cmp
xlat
jg
add
movl
sub
test
cltd
nop
pop
arpl
data16
call
test
pop
cs
js
call
insl
push
add
inc
or
jae,pn
stc
mov
lea
jne
setbe
movb
pushf
lahf
movsbw
cwtl
mov
pushf
lea
lea
jl
push
movl
jmp
sarb
or
push
shl
push
push
inc
lds
movsl
jne
mov
ja
iret
leave
sub
mov
repz
lock
push
fsubrp
jns
subb
sar
shll
scas
pusha
sti
or
or
jae
fbld
push
lods
push
cli
lret
xchg
add
out
outsl
sbb
inc
push
jo
les
ss
pop
xchg
test
insl
dec
into
icebp
shr
push
mov
and
dec
scas
pop
popl
int
sti
popl
pop
repz
imul
test
xorl
outsl
pop
and
mov
pushl
ret
inc
icebp
cwtl
or
push
jb
and
arpl
mov
mov
cwtl
das
xchg
in
decb
push
adc
mov
loopne
sub
mov
push
js
fwait
pop
add
in
daa
mov
add
lcall
xchg
push
pop
jnp
or
adc
mov
adc
sbb
pop
mov
mov
pop
lahf
ret
push
cli
push
aas
in
add
imul
pop
icebp
aad
in
xchg
gs
push
dec
outsl
mov
iret
les
push
mov
imul
sbb
daa
and
outsl
xor
mov
and
mov
das
pop
incl
sub
scas
dec
add
scas
rclb
popa
jge
jmp
imul
xor
push
adc
sarl
jne
xchg
pop
ss
mov
dec
mov
lcall
ror
adc
pop
into
icebp
mov
cli
mov
movsb
cwtl
ffree
mov
call
jno
fwait
cmp
inc
nop
push
enter
pushf
sub
jl
cmp
pushf
pushf
push
lea
jb
stc
test
jmp
add
add
nop
adc
adc
adc
sbb
adc
pop
inc
sub
add
add
dec
and
inc
subl
mov
repz
and
and
mov
inc
sub
lcall
xor
xor
and
es
mov
adc
cmp
es
cmp
test
and
cmp
sarl
lret
mov
and
int
rcll
sub
pop
jmp
imul
popa
jnp
loope
and
das
arpl
jmp
sub
js
lret
mov
jmp
jno
mov
push
or
daa
mov
mov
cmp
and
mov
test
push
add
movsl
les
aas
inc
jmp
sub
cmp
test
imul
outsl
ret
fwait
or
ljmp
xchg
sub
jmp
jge
in
sub
imul
xor
arpl
pop
sub
pop
inc
pop
jmp
push
dec
in
sub
cmp
sub
xor
inc
xor
sub
lahf
mov
inc
lea
dec
test
jnp
ja
jae
outsl
inc
imul
sub
dec
inc
aas
jmp
sub
or
cltd
inc
xchg
xchg
in
sub
jmp
imul
inc
cmp
push
sub
inc
inc
cmp
das
xor
mov
ret
jne
sub
sub
sub
cmp
xchg
lds
adc
cltd
xchg
mov
movsb
popa
mov
mov
mov
rcll
push
rcll
push
aad
push
xlat
pop
and
pop
fstps
pop
fistpl
pop
fstpl
add
and
lds
inc
and
dec
leave
dec
lret
movsb
dec
int3
dec
int
and
lret
lds
and
jp
pop
es
push
sub
and
sub
xchg
lahf
bound
popa
lods
jne
roll
repnz
mov
sti
in
cmp
pop
jl
or
push
add
xchg
adc
mov
icebp
es
push
pop
mov
mov
pop
or
sub
push
add
mov
lret
mov
and
xor
and
loopne
mov
in
pop
testb
leave
aas
xchg
xchg
mov
arpl
fildl
ficoml
mov
push
mov
movsl
lahf
mov
jmp
xor
loopne
jno
and
test
and
aaa
dec
mov
test
xor
insb
insl
sub
xor
and
push
scas
push
sbb
dec
cltd
xor
mov
testl
iret
and
mov
pop
loop
fldcw
ret
mov
sbbl
sbb
sub
aam
std
or
or
or
scas
lds
test
push
les
jne
sarl
lret
mov
out
sbb
adcl
out
pop
pop
pusha
jbe
ret
xchg
pop
adc
and
xor
xor
fstpt
adc
sahf
popa
pop
hlt
mov
sbb
pop
jmp
ret
roll
je
jno
adc
inc
inc
cmpsl
bound
addb
and
dec
inc
xchg
hlt
ljmp
sbb
adc
adc
mov
jo
mov
cltd
icebp
xor
mov
dec
test
push
paddq
popf
movsb
sbb
popa
pop
inc
and
out
in
xor
dec
push
sub
xchg
arpl
mov
icebp
mov
and
pop
sub
pop
sbb
add
aaa
shrl
cld
or
and
scas
xchg
ja
add
cwtl
and
jl
push
clc
movsb
mov
cmpl
add
mov
xchg
xchg
cltd
mov
movl
mov
or
sbb
cltd
nop
aam
jle
mov
or
cltd
xor
add
sbb
int
mov
sub
rcrb
out
subb
pop
fadds
add
push
mov
inc
jne
and
ja
xchg
jg
pop
and
lret
inc
rcr
and
xchg
jmp
sahf
lods
pop
shlb
ja
mov
or
jge
and
and
fs
popf
test
arpl
inc
movsb
jl
fstpt
fldcw
mov
lds
mov
or
jb
cmp
hlt
dec
lock
int
cld
sub
mov
xchg
mov
mov
mov
call
adcl
adc
aas
and
dec
loop
sub
push
and
fildll
mov
je
jl
jns
in
sub
outsl
sub
call
adc
cmpsb
push
xchg
icebp
add
push
mov
pop
adc
daa
notb
sub
mov
into
stos
fistl
xor
testb
cmpsl
ja
ja
pop
sub
in
pcmpgtw
and
lock
inc
lds
mov
lods
cmp
add
repz
sub
dec
call
xor
adc
pop
sarl
or
je
sub
mov
xor
sub
cmp
jle
push
lret
jb
movsl
dec
cmp
aas
adc
mov
ss
cmc
aaa
xchg
inc
xchg
adc
mov
cmp
ds
outsb
out
out
mov
ret
sbb
arpl
lret
add
xchg
xchg
icebp
lahf
xchg
pop
les
jl,pn
mov
dec
cmovge
fistl
cs
pop
pop
dec
sub
into
dec
jb
add
jne
stos
pushf
arpl
insb
call
ja
push
adc
repz
mov
stos
lock
mov
shl
mov
fcomps
and
std
out
lea
jne
call
add
pusha
bt
and
mov
push
stc
bt
pushl
cmp
push
jmp
dec
imul
cmpsb
push
in
or
pop
xor
mov
xor
movsb
or
jo
cli
lret
ficomps
sub
fmul
jae
cmp
andl
aaa
and
inc
jge
add
mov
fwait
movsl
cmp
push
add
andl
int
ret
push
xchg
fwait
dec
mov
cmp
ss
dec
fldcw
out
add
add
pop
bound
jmp
pushf
mov
jmp
inc
jmp
pusha
lea
jne
bsr
sub
push
lea
call
movb
movl
pusha
movl
pushl
pusha
mov
lea
jmp
repz
adc
arpl
cwtl
add
sub
jmp
shll
add
jl
or
ds
scas
scas
adc
xor
push
nop
xchg
and
ror
jne
pop
push
andb
mov
in
aad
fcoms
or
mov
bound
cli
jmp
lods
inc
xchg
clc
sub
and
sbb
mov
jmp
not
push
pusha
lods
test
push
sub
clc
not
pushf
stc
rol
pushl
test
xor
mov
pushf
cmp
movb
movzbw
lea
lea
lea
pop
lea
mov
call
mov
call
movb
pushf
lea
jne
stc
btr
stc
pushf
xor
daa
mov
jmp
mov
call
cs
cmp
cmpsb
push
rolb
adc
adc
in
in
aad
xlat
enter
inc
mov
cmp
and
in
leave
push
in
rcl
adcb
or
sub
add
cmp
out
mov
mov
ret
jge
cmpsb
push
jg
xor
repnz
mov
jecxz
jecxz
neg
sub
test
fsubrs
gs
lret
in
mov
rcrb
test
icebp
cmpsb
leave
cmp
fsts
sbb
fwait
sbb
popl
mov
push
in
dec
enter
or
decl
sbb
adc
xor
in
pop
stc
outsb
popf
push
or
hlt
movsb
stc
fsubrp
push
fsubrs
xor
or
rolb
movsb
idivl
andb
lcall
roll
shlb
or
mov
andb
cli
das
mov
lea
je
pushf
push
adc
pushf
lea
jmp
cmpsl
push
xor
dec
lret
cld
mov
mov
lods
sahf
pushf
loopne
test
mov
arpl
or
mov
push
in
mov
in
sbbb
mov
daa
insb
jno
or
mov
setae
mov
mov
pop
xchg
inc
inc
add
push
xchg
out
push
aaa
in
push
jmp
fsts
mov
das
inc
sbb
lods
jle
ficomps
pop
and
or
xor
push
jo
xchg
mov
cli
mov
add
push
ret
sahf
xor
cmp
out
add
jmp
sti
push
lea
call
push
mov
push
lea
jae
bt
pusha
xor
pusha
mov
pushf
lea
call
pusha
lea
jns
push
pushf
lea
jae
stc
sub
pushf
jmp
sub
sar
push
add
add
clc
call
pushf
clc
add
rcl
test
call
ss
xor
movsl
push
int3
insb
int3
jl
lods
sbb
add
adc
out
outsb
fcomi
add
jg
xchg
data16
lahf
mov
mov
hlt
ss
jge
xchg
rorb
icebp
out
dec
cmp
int
cmp
add
loop
fmull
pop
test
call
jmp
xchg
sbb
and
dec
jg
jge
cmc
mov
mov
lret
xchg
pushf
nop
mov
sub
xchg
mov
jmpw
out
es
push
push
mov
dec
mov
movsb
mov
inc
test
arpl
test
mov
pop
in
les
scas
push
cmpsl
pop
dec
push
imul
xchg
sub
pushf
pusha
lea
jae
lea
neg
lea
mov
shr
shl
xadd
bsf
mov
dec
clc
add
mov
cmc
sub
pusha
stc
stc
test
repnz
jmp
push
jmp
pushf
pushf
mov
movl
pusha
pushl
push
lea
jmp
inc
jmp
int3
popf
call
lea
jae
call
iret
repnz
movsl
push
inc
ss
xchg
aaa
xchg
imul
cmp
lcall
mov
cltd
and
ret
in
inc
stos
into
sbb
mov
js
test
push
inc
push
mov
pop
sub
scas
push
sbb
adc
dec
mul
xchg
mov
inc
popa
int
sub
scas
pusha
sub
sbb
xchg
and
ja
ret
jo
mov
aam
sub
addr16
and
nop
inc
lock
cli
sahf
ret
enter
fisubl
pop
adc
mov
pushf
movzbl
pushf
lea
call
cmpsb
leave
sar
push
loopne
mov
add
adc
repz
xor
sahf
or
mov
in
mov
lock
add
and
pop
and
loope
dec
cli
stc
jae
shl
jb
fwait
test
gs
int3
and
add
ret
in
fcmove
in
xor
hlt
sub
mov
push
stos
das
xchg
inc
sbb
push
jmp
lcall
outsb
push
inc
shl
lea
pushl
push
clc
sub
cmc
bt
mov
cmc
pushl
popl
pusha
cmp
push
lea
ja
or
rol
cmc
cmc
sub
not
not
add
sbb
cmc
mov
movzbw
mov
rcr
pushf
not
xor
mov
cmp
mov
pushf
pusha
repnz
mov
movb
lea
jne
setns
not
movsbw
lea
movb
cwtl
lahf
push
call
movl
pushf
jmp
push
movl
pushl
mov
pushl
pushl
ret
lea
ja
jmp
jb
hlt
sti
movsl
push
or
fisubrl
fcmovne
imul
loopne
es
pop
mov
push
mov
dec
mov
shrl
cltd
adc
out
in
sub
ja
test
or
inc
rorl
jbe
sbb
ret
push
dec
mov
out
dec
je
cmp
call
call
aaa
pop
xor
imul
movsl
push
xor
mov
xchg
adc
jp
mov
mov
stos
lret
imul
leave
lahf
adc
sbb
divb
shll
xor
test
add
xorl
xor
mov
pop
and
pop
jns
inc
out
lret
sbb
xor
or
adc
sbb
or
pusha
stos
not
not
mov
pusha
push
push
jmp
lea
jae
clc
clc
stc
sub
push
pushl
jmp
pushf
jmp
test
mov
call
jmp
test
pushf
push
pushf
mov
lea
je
stc
call
cs
cmp
movsl
push
movsl
test
or
jae
cli
xchg
decl
rolb
inc
adc
ret
mov
repz
xchg
int3
sbb
cmp
ret
add
dec
dec
mov
cli
sub
jl
sbb
xchg
and
out
push
rolb
leave
cltd
jne
or
add
dec
add
hlt
fisttpll
and
insb
cli
movsl
push
nop
xor
fbld
ret
aas
sbb
xor
xchg
cmp
push
rolb
bound
shl
mov
xchg
cmpsb
cmpsl
inc
cmpsl
addr16
push
imul
sbb
setg
xchg
gs
aad
pop
ljmp
lods
mov
clc
adc
in
xchg
mov
mov
jns
cmp
loopne
jl
push
push
xchg
lret
test
mov
push
stc
lea
add
lret
mov
jp
jle
aam
push
mov
and
scas
loope
mov
pop
push
mov
lea
jmp
call
mov
not
mov
call
jmp
mov
jmp
jmp
test
pusha
lea
jne
call
jae
stc
movsl
push
hlt
push
inc
in
jne
cmpsb
push
push
cmpsl
aaa
jnp
xchg
xlat
shlb
sti
shrl
insl
cmp
icebp
lahf
fsts
clc
fxtract
pop
stc
data16
xor
inc
sub
leave
pop
mov
cli
cmp
cmp
mov
mov
scas
aam
icebp
ficoml
rep
outsb
ds
mov
iret
pop
je
push
pop
in
aad
shl
jbe
add
dec
cs
leave
test
or
cwtl
push
inc
and
bswap
mov
pushf
lahf
movl
pop
lea
call
xchg
dec
call
push
or
subl
les
mov
cltd
icebp
lahf
mov
jp
lods
scas
sub
into
icebp
sbb
rcrl
ret
inc
mov
dec
inc
sbb
imul
popf
mov
enter
call
jl
icebp
or
and
sbb
push
mov
mov
and
jle
push
mov
mov
pushf
lea
jbe
clc
clc
inc
mov
setnp
add
add
bswap
push
and
mov
cmc
sbb
clc
add
sub
movl
pusha
mov
clc
stc
cmp
pusha
pushl
jmp
mov
mov
call
add
dec
outsl
popa
fs
imul
add
pop
clc
movsl
push
jle
mov
push
pop
inc
and
jno
jb
adc
stos
push
ljmp
movsb
add
xor
shr
call
sbb
sbb
jno
add
mov
push
lods
jo
cld
ja
stc
and
out
fistpll
testb
rol
das
shlb
xchg
ds
rol
mov
pop
outsb
cmc
cli
cmpsl
inc
pushf
jge
in
inc
mov
pop
pusha
inc
pop
sahf
add
into
push
ja
adc
xor
mull
xchg
xor
and
push
inc
je
jnp
pusha
mov
cld
lods
mov
push
xchg
xlat
mov
and
scas
lock
imul
cltd
jne
inc
rorl
mov
out
iret
mov
mov
jno
sbb
jmp
mov
dec
inc
mov
fdivl
or
xchg
fstpl
xor
jmp
sub
mov
adc
repz
enter
stos
jns
fnstcw
or
sbb
movsb
test
pushf
andb
cltd
test
popf
outsl
es
outsb
and
outsl
and
insl
xor
outsl
stc
imul
scas
mov
sub
movsl
push
loope
add
and
cmc
lds
inc
mov
insb
nop
mov
lcall
repz
rclb
xchg
lock
or
shl
aas
mov
mov
stos
jno
cmp
fidivl
pop
push
jl
sub
outsb
dec
lcall
aam
imul
adc
cmp
les
push
ret
das
fdivl
aas
xchg
stos
fadd
adc
lea
je
movzbl
mov
lahf
push
js
lea
push
pushf
push
movl
call
mov
push
mulb
fisubrs
jb
mov
call
call
out
pushf
sub
test
add
jp
cmp
ja
xchg
dec
outsb
sbb
adc
stc
sbb
popf
aam
outsl
jo
repz
dec
stc
outsb
andl
test
jp
xor
dec
mov
jp
mov
out
out
push
mov
jbe
push
and
jne
add
insl
nop
lahf
gs
adc
arpl
lcall
repnz
ljmp
popa
cmp
adc
push
repz
mov
pop
xor
aad
sti
pop
xor
mov
mov
insl
sbbl
xor
sti
xlat
addr16
jnp
sub
ret
push
add
ds
dec
push
push
mov
pop
mov
mov
jp
dec
fmuls
xor
stos
int
mov
push
xor
loopne
push
je
fistpll
or
mov
pop
pop
or
and
rol
mov
movsl
push
adc
push
daa
fdivr
lret
jl
ja
inc
jg
and
out
adc
mov
mov
or
cli
push
sub
sub
cmpsb
adc
movsb
js
cmp
add
repnz
push
lret
inc
jl
leave
ljmp
fsubl
call
int3
jnp
cld
adc
dec
adc
lcall
xchg
and
or
rep
push
mov
mov
fisttpl
fmull
hlt
popa
fwait
pop
cmpsl
lret
repz
xchg
scas
dec
aam
pop
int3
dec
decb
jp
mov
mov
loop
lahf
mov
lods
push
in
test
push
and
mov
std
out
push
mov
fs
enter
test
add
nop
hlt
test
add
test
arpl
loopne
sbb
sahf
fildll
fistps
jg
pusha
xchg
mov
xchg
cmpl
xchg
push
shrb
hlt
aad
add
out
jns
mov
shrl
mov
outsl
std
adc
xchg
inc
lcall
pop
in
outsb
sbb
sub
jo
mov
cmpsw
and
pop
xchg
inc
popf
pop
or
push
add
ror
inc
pop
cmpsl
push
movsb
in
fbld
inc
adc
sbb
js
test
mov
ret
cmpsl
imul
push
pop
aad
jns
icebp
gs
jmp
push
int
call
stc
nop
rep
push
jp
imul
dec
out
into
rclb
mov
inc
je
fmul
out
or
mov
and
inc
into
jbe
cmp
icebp
insb
push
xchg
add
xchg
loop
adc
jg
cmpsb
clc
inc
loopne
dec
cltd
inc
xchg
mov
mov
xchg
mov
std
adc
mov
mov
adc
mov
std
repnz
mov
daa
jl
mov
mov
out
ja
outsl
je
pop
push
in
lods
mov
add
adc
mov
mov
test
stc
cmpb
call
push
lea
jne
pusha
pushf
pusha
pushf
inc
pushf
inc
push
mov
movl
lea
jmp
lea
ja
not
pop
pushf
mov
setl
bswap
movzbw
mov
not
pop
call
jp
vfmadd213pd
sub
or
mov
cmp
mov
dec
adc
pop
icebp
lahf
xor
fsubs
mov
pop
add
icebp
xor
aad
movsb
cmp
in
sti
push
sbb
lahf
shl
jecxz
aaa
inc
mov
in
out
or
adc
pop
pop
mov
notb
fisubl
mov
dec
outsl
xor
sbb
and
clc
cmp
and
test
sub
mov
push
mov
lea
jmp
lea
je
mov
pushf
mov
movsbw
cwtl
lea
pushl
jmp
movl
pusha
mov
pushl
pushf
lea
jmp
and
mov
xchg
adc
mov
xor
movsb
add
lds
std
fildll
adc
xchg
shrl
aam
push
push
je
mov
arpl
push
xor
sbb
popa
dec
cmp
ficomps
cltd
inc
nop
loopne
inc
mov
push
dec
add
pop
cld
pop
int3
imul
popa
sub
push
into
add
rolb
fneni(8087
push
ja
inc
or
xchg
sub
loope
cmpsl
lea
push
mov
push
pusha
mov
xchg
jmp
push
mov
pusha
pushl
movl
pushl
movl
pusha
lea
jmp
jmp
pushl
call
jmp
cmp
push
lea
ja
shr
or
sub
rcr
pusha
bsr
lea
add
call
movsl
push
aaa
lock
push
rol
adc
add
push
aaa
pop
pop
mov
lret
aam
dec
pusha
int
pop
sbb
hlt
mov
out
jl
hlt
mov
and
mov
xchg
adc
hlt
inc
cmc
popf
cmp
inc
movsl
dec
cmp
icebp
mov
cmpsl
xor
inc
call
cvtdq2ps
and
cld
mov
jmp
mov
add
sbb
fiadds
sti
pop
jecxz
cmp
or
cwtl
jo
in
int
pop
stc
cmp
stc
add
sar
dec
mov
push
test
pusha
lea
je
push
sub
movb
pusha
movb
cmp
pusha
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cwtl
inc
adc
pushl
pusha
pushf
lea
lea
movzbw
mov
mov
push
movzwl
jmp
xchg
mov
out
movsl
push
sub
jmp
mov
mov
shrl
inc
push
sbb
jecxz
mov
mov
pusha
rclb
xor
dec
mov
mov
into
jle
inc
imull
xlat
or
push
and
scas
wbinvd
and
shl
mov
outsb
add
xchg
mov
push
ds
cmc
in
dec
jne
inc
cmpsl
dec
xadd
imul
xchg
mov
cwtl
hlt
mov
adc
ret
pop
adc
or
hlt
stc
popf
and
shl
mov
out
popa
sub
movsl
push
js
sub
fstpt
in
insb
int3
pusha
aad
pop
xchg
adc
push
shll
push
mov
std
jg
sub
setb
adc
mov
lahf
ret
inc
sbb
pop
inc
mov
fsubr
test
test
hlt
lahf
nop
mov
int
mov
sbb
shlb
jmp
std
outsb
imul
pop
shl
push
xchg
adc
arpl
mov
rcrl
insb
push
test
fldl
and
push
int3
mov
jmp
xchg
mov
cmp
cld
mov
or
xchg
pop
push
sbb
dec
mov
lahf
mov
stc
inc
inc
lods
scas
pop
jmp
in
or
out
pop
mov
jno
xor
enter
dec
mov
xchg
dec
add
data16
lea
add
imul
adcb
or
sahf
adc
or
xor
mov
outsb
test
jle
movl
sub
cmc
clc
bt
cmp
call
bt
cmc
cmpb
push
pushf
pusha
lea
jne
setns
xor
sub
movsbw
xor
mov
setg
add
add
sar
mov
call
jmp
icebp
in
movsl
push
or
fldt
or
xor
adc
stos
divb
mov
mov
dec
call
insb
inc
and
xor
fwait
pop
pop
int3
or
jp
or
jecxz
loop
bsf
mov
cmpsb
push
imul
xor
add
popf
loop
add
das
push
fldcw
push
out
aam
int
ss
mov
imul
adc
arpl
xor
and
adc
xor
push
aaa
lret
out
mov
and
jge
pop
das
je
int3
jo
or
sarb
loopne
jp
fcompl
out
pop
loope
mov
mov
inc
add
movsb
aad
in
shl
in
enter
sbb
jle
inc
and
jo
cmp
jae
cmpb
inc
adc
orl
pop
xchg
popa
xchg
inc
or
hlt
fstl
ret
sub
inc
push
rcll
test
mov
in
dec
ljmp
jle
call
inc
push
stos
pushf
mov
jg
icebp
sbb
push
sti
cmp
loopne
jb
mov
stos
ret
in
and
dec
or
fs
sub
fisubrs
jb
mov
testb
imul
mov
call
ljmp
shl
xchg
in
movsl
push
je
inc
test
test
jne
mov
daa
inc
int3
sub
negb
push
jl
dec
sbb
cld
or
mov
lret
mov
inc
fstp
mov
call
nop
lcall
mov
mov
jnp
jae
jl
shlb
dec
adc
push
outsl
pop
sbbb
dec
xorb
dec
jno
enter
mov
clc
js
fs
push
cmpsb
pop
aaa
cmp
mov
adc
push
adc
mulb
sbb
mov
push
xchg
aam
js
cmc
pop
aaa
add
lds
roll
fimuls
ficoml
cmp
sub
and
sub
nop
setge
stc
js
aas
sub
mov
adc
and
mov
mov
xchg
push
jl
adc
out
and
rcr
pop
out
cli
push
xchg
pushl
stos
jnp
sub
or
clc
fwait
xchg
rol
aas
dec
rcll
ficoml
sub
in
mov
mov
or
add
in
jg
enter
nop
orl
sbb
std
iret
dec
dec
out
imul
push
push
jp
mov
mov
or
mov
out
out
iret
outsl
fimuls
sub
das
ss
sub
ljmp
push
mov
sub
mov
push
push
add
adc
push
jge
stc
and
push
movsb
jno
daa
push
cmp
xchg
mov
pmulhw
xchg
xchg
andl
jne
fldt
lods
xchg
mov
jge
ficoms
lods
aas
pop
push
ffree
mov
nop
das
cmp
sub
in
aam
fisubl
mov
xchg
js
cmp
loope
mov
cltd
dec
push
insl
sub
loop
mov
add
cltd
dec
int3
xchg
xor
push
lahf
mov
movsl
shl
jg
mov
inc
and
or
bswap
insl
xchg
push
inc
xchg
daa
sub
iret
lods
mov
and
jae
or
popf
jno
jecxz
pop
cs
pop
sub
or
xchg
lcall
rclb
push
push
pusha
fldt
daa
loop
add
test
sub
pop
pop
daa
cmp
xchg
test
cmp
ret
loope
sti
test
pushl
inc
daa
dec
mov
out
pop
and
add
push
scas
std
cmpsl
fwait
test
mov
daa
mov
roll
and
orl
mov
popf
fistps
mov
add
cmp
sbb
popf
xchg
scas
das
movsb
mov
and
mov
lods
cwtl
inc
popa
mov
mov
dec
mov
loopne
call
out
add
pushf
jne
movsl
xchg
mov
xorb
fadd
pushf
imul
dec
xchg
dec
jo
int
jmp
mov
mov
sub
lea
inc
xor
loope
dec
imul
mov
lahf
jne
jecxz
fisubrl
and
push
jg
js
push
daa
dec
sub
imul
insb
jecxz
scas
push
iret
movsl
fs
push
xor
dec
daa
xor
ss
fwait
es
arpl
enter
mov
imul
in
fistl
mov
sub
mov
or
push
xor
push
pushf
xchg
sub
sbbl
sub
in
lock
and
cmp
rcr
mov
test
rclb
dec
pop
cmpsl
xor
mov
sub
mov
dec
sub
test
jae
in
shll
lods
lcall
shlb
fbld
mov
scas
cmp
mov
loop
lahf
sbb
lea
les
push
mov
inc
out
inc
enter
inc
push
add
pop
aas
lahf
mov
ds
mov
xor
shl
mov
xchg
and
and
sub
or
mov
mov
pop
sbb
aad
loopne
scas
pop
sub
mov
cmpsl
xor
cmpsb
pushf
les
shll
pusha
loop
mov
fwait
mov
fwait
push
repz
iret
popf
lock
loope
add
orb
out
in
jb
out
jae
cmp
push
and
imul
push
xchg
out
or
mov
leave
cmp
push
inc
mov
mov
outsl
adc
cli
dec
arpl
cmp
xor
enter
sbb
sbb
mov
fnsave
adc
jne
daa
fwait
adcl
mov
and
out
outsb
mov
movsb
mov
xchg
jbe
jmp
sub
movsl
rcrl
and
push
cmpsl
cmp
dec
jnp
andl
imul
mov
sub
fldt
movsl
xchg
or
aad
dec
fldl
adc
cwtl
fcoms
arpl
sbb
pop
sub
scas
mov
mov
cmc
adc
sub
mov
aaa
sti
lods
repz
mov
mov
out
or
out
lea
jae
inc
mov
popa
les
inc
cmpsb
xor
cld
inc
es
and
mov
fcomp
pop
dec
mov
out
adcl
jbe
scas
test
loop
pop
jp
mov
repnz
push
inc
lods
and
xchg
loop
pop
cmp
jne
sbb
lds
shlb
adc
movsl
sub
cmpsb
pop
cmp
push
pop
int3
insl
iret
xchg
push
mov
ja
inc
cltd
mov
or
xchg
add
and
mov
pop
mov
sbb
sbb
sub
outsl
xchg
fwait
pop
dec
and
jo
aas
fdivrp
add
pop
mov
clc
cmp
scas
xor
mov
jmp
fs
test
fistpl
cs
xchg
cmp
mov
xor
push
add
sub
push
test
lahf
xchg
cmpl
xchg
test
ss
xor
fmull
xor
pop
xor
stos
xor
sub
xor
mov
mov
sub
roll
mov
fcmovne
mov
loope
cmpsl
cmpsb
and
push
inc
stos
fldt
pop
fbstp
sub
scas
incl
cmp
pop
xor
bound
sub
mov
addr16
pop
lcall
xchg
imul
loopne
jo
jle
int3
push
sbb
in
stos
mov
adc
repnz
mov
lods
int3
push
dec
scas
aaa
leave
sbb
add
and
push
sub
push
mov
xor
xchg
mov
inc
lcall
xchg
lea
pop
inc
add
lcall
xor
daa
mov
stos
adc
popf
add
int
jnp
cltd
out
std
mov
push
push
sbb
iret
add
insb
sub
cmp
xorl
jae
in
xor
jmp
fisttpl
sub
jb
mov
pushf
sub
cli
xor
and
imul
popa
int3
roll
inc
scas
es
sbb
movsl
inc
dec
daa
sub
xor
add
jno
scas
ret
movsl
xor
mov
lret
out
loop
lret
daa
sbb
leave
lods
mov
loope
xor
stos
and
cmpsl
lahf
sub
scas
fwait
inc
mov
gs
sub
movsb
sub
ret
stos
mov
xchg
mov
call
xrelease
and
out
jb
xchg
imul
int3
pop
xchg
icebp
scas
cmp
scas
xorl
lods
subl
aas
jo
fs
aam
and
cmpsb
stos
inc
xchg
sub
xor
xor
mov
or
insl
dec
lds
inc
lods
sub
lods
sub
sub
inc
sub
in
les
pop
inc
shl
xchg
mov
push
add
int
inc
mov
in
xor
mov
xchg
bnd
push
and
dec
stos
ljmp
xor
xor
imul
xchg
mov
push
bound
and
icebp
and
fidivl
movsb
andb
push
gs
pop
daa
xchg
push
mov
int3
out
addb
mov
cwtl
cltd
sahf
loop
adc
xor
hlt
ja
and
cmp
inc
rclb
icebp
fbld
push
shll
dec
push
add
sub
push
inc
or
sub
fsubrl
mov
add
mov
mov
dec
daa
push
fists
sub
test
and
test
arpl
sub
subl
ss
inc
xor
les
lods
xorl
inc
push
cmp
mov
loop
mov
push
jns
pop
loopne
mov
add
test
shrb
movsb
sub
and
stos
cmp
cmp
imul
dec
jl
frstor
icebp
mov
push
outsl
mov
daa
bound
mov
pop
sahf
scas
and
shr
aaa
xor
xor
xchg
into
inc
and
mov
xor
lahf
fiadds
lcall
mov
aaa
int3
arpl
fnstsw
sub
push
jmp
addb
ljmp
cmp
pushf
lods
sub
mov
sub
es
daa
and
mov
mov
mov
pop
sub
add
jg
pushf
sbb
inc
imull
mov
cltd
pop
dec
in
scas
and
imul
roll
cmpsb
add
sarl
js
sub
dec
pop
aam
es
ret
es
jmp
stos
es
and
and
push
sbb
fcmovnb
cmpsb
mov
les
loope
sub
add
out
jnp
stos
pop
mov
lret
lahf
push
sub
inc
pop
pop
bound
test
push
push
stos
lea
jo
fcomip
gs
lret
mov
test
push
mov
push
shll
pusha
cmp
ja
andb
fistpl
mov
add
mov
mov
sarb
ss
push
movsb
push
addr16
cmpsb
test
movsb
imul
sub
mov
lods
pop
das
jp
mov
daa
lret
and
and
xchg
pop
mov
stos
test
inc
and
pushf
jo
and
and
inc
daa
sub
test
dec
insb
shrl
test
imul
fldt
sub
cmp
test
xchg
das
nop
out
jns
test
out
push
mov
popa
cwtl
shrl
cmpsl
mov
icebp
ret
xor
push
mov
cmp
add
jns
push
int
and
dec
sub
out
pushf
push
dec
cmp
jmp
and
push
cmp
and
stc
xchg
inc
dec
mov
mov
xchg
stos
out
push
stos
xorl
xchg
mov
ret
sbb
scas
inc
mov
sub
or
sub
fs
jns
xchg
shlb
sub
aam
sub
icebp
sub
loop
stos
jne
sub
in
sbb
insb
inc
lods
sti
dec
mov
sti
imul
pop
imul
int3
dec
jo,pn
in
ds
std
xchg
repz
mov
out
xchg
stos
xchg
mov
aaa
dec
push
mov
sub
mov
xorb
inc
lea
out
mov
mov
addr16
popf
movsb
out
xchg
sub
test
andl
test
mov
cwtl
lods
fwait
lods
add
jmp
lds
mov
lds
sub
mov
addr16
jbe
mov
xor
jnp
movsl
inc
ret
mov
out
cld
add
push
out
sub
ret
mov
xor
sarb
push
cwtl
dec
push
push
dec
inc
inc
subb
add
mov
sarl
insl
gs
stc
mov
lret
mov
in
movsl
xor
iret
add
adc
sar
xchg
leave
dec
mov
fdivl
mov
or
pop
stos
shl
push
mov
sbb
inc
sbb
test
dec
push
test
inc
popa
fsts
int
test
daa
mov
xor
mov
sub
and
mov
mov
xor
jb
mov
xchg
xchg
loopne
mov
mov
mov
cltd
jg
test
push
dec
jp
pop
xchg
xor
arpl
dec
push
xor
lret
xchg
insl
cmp
movsl
dec
in
xchg
dec
sbb
jae
inc
mov
cmpsb
push
repnz
cmp
in
ss
rcl
jg
adc
leave
push
aam
iret
mov
inc
or
mov
das
test
add
dec
sub
and
and
mov
add
mov
and
jb
push
jmp
push
cs
lods
aam
add
lret
xchg
in
lret
into
out
sub
cmp
xchg
mov
ds
inc
add
cltd
adc
jne
jecxz
pop
add
or
sbb
cmpsl
inc
loopne
jo
or
popa
fbld
jmp
sub
xchg
pop
xchg
mov
mov
loope
and
fcmovbe
xchg
mov
inc
xor
and
sbb
and
out
popa
mov
sub
daa
mov
fildll
and
mov
push
ljmp
insb
xor
inc
inc
popf
sub
insb
jne
les
arpl
and
jle
outsl
mov
push
enter
pop
xchg
shll
lods
push
inc
mov
dec
jecxz
dec
pop
sub
inc
mov
leave
gs
inc
aaa
in
and
cmp
and
sub
xchg
dec
and
iret
aaa
mov
les
fnstsw
aam
sub
jno
pop
cmp
sbb
jmp
cmpsb
jp
loop
movsl
inc
fninit
dec
mov
adc
cmp
adcl
jns
call
lds
and
mov
xor
and
cmpsb
pop
nop
jae
sub
scas
rclb
sub
xor
add
mov
inc
mov
add
das
test
cmp
sub
jmp
pushf
adc
cmp
into
sti
outsl
std
xor
sbb
leave
insb
xor
sarl
xchg
jns
mov
inc
dec
ficoms
lods
jns
cmp
inc
inc
jbe
pop
push
popa
dec
leave
jge
jno
xchg
sti
lret
cmp
pop
and
repz
popf
pop
add
push
sahf
xor
sbb
adc
cmpsb
loop
xor
in
fstl
cmc
and
jnp
mov
and
pop
or
movsb
dec
and
aam
xchg
pop
or
in
dec
in
dec
mov
push
dec
inc
shlb
cmp
cwtl
mov
scas
xor
cmp
mov
int
xor
xchg
jle
xchg
jge
aas
cmp
push
lods
xor
imul
in
push
and
cltd
sub
movsl
out
add
test
mov
pop
sub
sub
movsl
dec
pop
push
inc
dec
orb
push
rol
das
push
push
mov
adc
cltd
sub
loop
adc
jne
mov
push
fbstp
dec
mov
and
negl
mov
sub
mov
aaa
mov
test
dec
int3
sbbl
nop
out
mov
test
mov
xchg
xchg
mov
cmpsl
pop
push
loope
popf
loopne
into
dec
and
mov
mov
dec
and
pop
mov
and
ret
mov
push
and
pop
lods
push
fldt
out
mov
mov
sub
xor
mov
xor
sub
fldt
inc
lods
sub
cli
sbb
lods
sub
cmp
or
cmc
xlat
xchg
mov
cld
mov
mov
and
dec
cmp
test
dec
cmpsl
lret
pop
jmp
jne
test
icebp
sub
xor
aaa
subb
mov
pop
mov
popa
push
adc
das
xchg
scas
push
add
cmpsb
movsl
inc
out
mov
pop
mov
scas
aas
jne
mov
ret
daa
shlb
inc
jae
loope
and
add
sub
mov
mov
and
xchg
leave
ja
jnp
xchg
cmp
int3
xor
mov
pop
out
cmp
xchg
xlat
out
lods
mov
sub
fisubs
and
icebp
daa
popa
inc
xchg
pop
and
aad
sub
add
mov
and
pop
sub
lsl
clc
lea
js
js
mov
pop
scas
mov
mov
push
push
jmp
mov
out
and
xor
popa
jle
xlat
add
mov
fs
daa
pop
int
fwait
icebp
sbb
in
ror
es
int3
cmpsb
jae
divb
xchg
int
pushf
dec
testb
inc
mov
shlb
gs
cmp
pop
fcomi
lods
jno
jne
mov
xor
in
stos
sub
jmp
bound
pop
stos
pusha
addr16
dec
inc
adc
and
push
decw
loope
adc
in
bound
test
push
pop
cmpsl
and
push
fs
mov
push
mov
stos
fs
pop
sub
xor
movsl
out
inc
bound
xchg
pop
mov
sbb
inc
cmc
xor
stos
mov
xchg
andl
mov
dec
adc
movsl
pop
push
ss
xor
push
mov
dec
sub
dec
inc
mov
mov
add
or
mov
push
dec
and
push
and
xor
jmp
jbe
shlb
cmp
lahf
sbb
push
dec
loope
gs
xchg
jnp
mov
add
xor
shll
pop
in
pushf
inc
fwait
push
mov
mov
dec
mov
cmp
cmp
movl
shlb
fisubs
push
mov
and
add
and
adc
sti
ds
fwait
jecxz
mov
out
inc
and
and
aas
inc
and
push
aad
shrl
xor
xor
sub
xchg
jb
and
daa
into
fs
lret
addr16
sbb
pushf
mov
inc
movsl
push
in
mov
stos
pop
ss
xchg
mov
icebp
sub
addl
push
mov
sub
mov
aas
inc
movsl
cmp
lret
jmp
or
pop
push
cmp
cmpsl
sub
popa
cmp
add
mov
inc
add
pop
xchg
sub
es
dec
movsl
sub
xchg
and
dec
int3
jns
into
inc
push
gs
arpl
push
int
mov
fbld
pop
xlat
out
jl
addl
xchg
lret
mov
fcom
push
fwait
lds
xchg
out
std
repnz
and
sub
adc
pop
test
xchg
scas
mov
cs
mov
cmp
lret
ss
test
fmuls
mov
pop
movsb
pop
bound
xchg
inc
mov
imul
insl
xor
add
mov
push
xor
pop
mov
gs
mov
xchg
sub
pop
sbb
xor
loop
and
dec
arpl
push
sub
in
jb
sbb
out
pop
inc
imul
sub
loope
pop
test
adc
and
add
das
xor
jb
inc
fcmove
sub
inc
xor
in
and
je
dec
push
jle
pushf
daa
jnp
loop
mov
mov
and
loope
fwait
jle
sti
arpl
stos
mov
int3
out
mov
mov
mov
or
push
add
fistpl
and
sub
xchg
daa
mov
sbb
mov
es
rolb
push
cmpsl
and
and
js
mov
jmp
inc
enter
mov
in
sub
test
popa
out
insb
add
bnd
xor
mov
rorb
mov
add
in
mov
test
xchg
popa
inc
inc
out
pop
loope
jb
pushf
cmpsb
and
lret
mov
aaa
sub
push
xchg
xchg
addr16
jge
leave
xorb
sub
xor
push
arpl
test
jb
mov
cmpsb
jno
loope
leave
loop
inc
das
xor
gs
cmp
cwtl
push
jns
pop
popa
fidivl
jno
cmpsl
xor
test
mov
or
pop
mov
pop
jb
push
xor
mov
pop
or
jb
pop
dec
mov
inc
int3
add
movsw
aas
fnstsw
sbb
es
addl
loope
mov
or
shll
cmp
imul
inc
and
out
daa
push
sub
jmp
shr
dec
and
sub
pop
push
ret
inc
pop
icebp
pop
cmpsb
movsl
xchg
popa
dec
fisubl
lods
pop
flds
mov
es
add
dec
sbb
jo
popa
out
popf
add
inc
int3
dec
xchg
stc
xor
add
mov
inc
fmuls
inc
cmp
mov
cmpsb
lods
lods
and
movsl
icebp
es
aaa
imul
gs
ret
cmpsl
mov
pushf
inc
fwait
add
xor
fadd
adc
scas
lock
cmp
xchg
jo
clc
arpl
pusha
mulb
movsb
dec
push
cmp
repnz
fisubs
and
add
loop
dec
pop
shl
jno
std
mov
push
ret
out
jae
cmpsb
mov
dec
cmpsb
or
int3
mov
loop
pop
xorb
cmpsb
arpl
out
mov
or
and
ret
push
xlat
int
dec
scas
decb
inc
int
in
dec
cmp
xor
jle
pop
mov
fisubrl
call
test
ret
mov
ss
and
jb
call
add
mov
cmc
and
cli
lea
icebp
cmpsb
xor
fucomip
inc
xor
dec
popa
cmp
fildl
and
lea
orl
aas
pusha
aaa
or
scas
mov
cmp
cmp
add
sbb
nop
and
xor
add
push
fimull
es
push
xchg
mov
clc
movsb
sbb
pop
or
dec
gs
fs
arpl
xor
aad
or
cmp
cmpw
shrl
jns
mov
inc
and
jmp
mov
stos
aad
sub
xor
push
cmp
jmp
imul
mov
in
lahf
adc
insl
sti
addb
lret
add
and
outsb
push
push
fnsave
push
lods
lods
mov
inc
and
test
mov
movsl
ret
sbb
pop
arpl
jmp
push
jmp
shll
add
leave
sub
jno
mov
mov
lds
ret
test
fisubrl
js
add
jo
mov
bound
pop
mov
cltd
leave
and
ret
xor
push
cmc
rcll
xchg
popf
xor
icebp
in
or
push
enter
mov
push
out
xor
cmpsl
lods
inc
orl
lahf
lods
push
xor
cltd
xchg
inc
jno
pop
das
xchg
daa
xor
sub
jbe
sub
inc
dec
gs
push
inc
or
test
jno
and
sbb
mov
sbb
mov
push
arpl
enter
mov
lods
mov
outsb
mov
xor
test
out
dec
or
mov
lods
sbb
nop
xor
lods
jns
cs
movsl
jne
mov
loope
push
daa
sbb
out
adc
and
cmp
sbb
inc
jns
xchg
and
adcb
push
out
inc
and
pop
imul
lds
mov
cltd
pop
mov
test
push
inc
mov
ret
sub
stos
dec
push
imul
cmpsl
cs
sub
inc
xor
jb
shll
fwait
inc
popf
pop
out
xchg
xchg
fwait
imul
adc
inc
arpl
dec
add
cwtl
dec
addr16
push
sbb
inc
or
in
pusha
sub
test
insl
ret
mov
mov
xchg
mov
or
pop
push
mov
ss
xor
push
cwtl
and
sub
ljmp
mov
fsubrl
cmp
mov
jae
pop
insb
into
sbb
mov
sbbb
and
push
dec
int3
inc
lret
dec
cmp
jbe
add
mov
jmp
sbb
add
sbb
xchg
xor
sbb
and
xor
popf
fimuls
das
cmp
movsl
mov
jne
iret
pop
arpl
mov
pop
pop
jns
jb
test
or
or
push
sub
cmp
jae
inc
bound
jb
xor
mov
popf
jb
mov
repnz
mov
aaa
test
mov
aas
mov
inc
test
inc
test
sbb
sub
xor
jmp
jmp
xor
outsl
dec
and
in
loope
stos
jp
dec
mov
mov
pop
cld
push
cmp
ljmp
push
fnsave
fnstsw
sub
daa
loop
loop
sub
clc
mov
jecxz
iret
mov
cmpsl
mov
dec
add
adc
loopne
stc
ss
jge
xchg
xor
out
pop
shrb
sti
dec
inc
clc
inc
mov
push
lds
repz
adc
loop
push
jl
imul
xchg
adc
pop
test
xor
mov
push
movsl
xchg
test
clc
movsb
sub
or
stos
lods
xchg
int3
jg
xor
xor
cmpsl
xor
aaa
jno
loop
xor
repnz
lahf
mov
cmpsl
sub
aaa
inc
jae
xor
or
ret
pop
xor
cmp
mov
xchg
pop
jmp
iret
jg
mov
inc
dec
movsl
in
xor
xchg
xchg
mov
xchg
iret
adc
inc
cmp
testl
testl
xchg
mov
push
sbb
sub
repnz
sub
xor
mov
push
mov
ds
pop
jo
rcl
pop
in
pop
movsb
js
pop
push
push
ror
stos
sub
sub
icebp
fs
cmp
push
popf
jae
mov
mov
mov
fs
movsl
xor
fs
movsb
stos
stos
mov
adc
fwait
repz
xchg
inc
ret
outsb
xchg
nop
dec
add
lret
push
mov
loopne
int
pop
les
mov
popf
ror
mov
aaa
mov
cltd
xchg
aas
push
adc
imul
and
stos
fwait
popl
daa
sub
or
dec
test
stos
inc
icebp
addr16
push
xor
es
fmuls
pop
push
xchg
push
add
fidivrl
xchg
jmp
dec
daa
mov
sub
mov
out
les
scas
and
add
loop
and
jb
loop
lea
arpl
out
lods
push
inc
and
ljmp
ret
stos
and
fnstcw
xor
xchg
cmp
dec
icebp
clc
push
inc
cmp
jo
lds
aaa
xor
popf
mov
jg
xchg
mov
add
push
mov
shll
sub
push
dec
adc
sarl
mov
in
mov
adc
lds
push
mov
mov
lods
shlb
jb
test
adc
arpl
mov
out
in
loope
cvtdq2ps
cmp
mov
icebp
aad
xor
cmp
and
xchg
jecxz
mov
scas
inc
push
mov
mov
in
cmc
or
stos
addr16
pop
leave
sub
adcb
jle
sub
notb
and
loope
dec
subl
arpl
movsl
fs
pop
xchg
inc
mov
dec
repnz
jg
jo
js
push
xor
pop
loop
test
sbb
xor
ficomps
mov
les
pop
in
mov
cmpsb
xor
fsubp
sub
cli
scas
sub
lock
dec
std
xor
lea
push
cmp
add
gs
rcll
adc
mov
cmpsb
sub
aas
mov
pop
sub
pushf
and
mov
jmp
and
int3
xchg
iret
jbe
pop
inc
ret
inc
cmc
std
sarl
pop
mov
bound
push
dec
mov
lret
mov
int
mov
xor
movl
sbb
dec
in
xchg
rcrl
mov
mov
cmpsb
or
and
inc
fsubs
fsts
adc
pop
push
xchg
outsl
push
rcll
stos
lods
lret
hlt
xchg
dec
insl
es
daa
add
push
mov
movsl
not
sub
cs
in
addr16
ljmp
imul
pop
aas
add
xor
gs
daa
daa
popa
xor
inc
subl
inc
addr16
popl
mov
arpl
inc
cmc
popa
pop
xor
or
movsl
inc
lock
stos
test
jge
jmp
push
xchg
inc
and
jg
movsb
inc
pop
sbb
adc
lods
mov
cmp
mov
mov
cmp
dec
pop
push
jae
into
xor
test
out
mov
cmp
xchg
cmp
cmpsl
pushl
add
or
jle
ss
fildll
loopne
fistpl
xchg
sbb
je
dec
and
les
aas
mov
into
mov
xchg
adc
sub
push
adc
xchg
mov
or
bound
dec
dec
loopne
lea
cmp
and
push
sub
jb
mul
or
push
out
shll
mov
inc
bound
cmp
push
and
jno
pop
mov
xor
imul
in
mov
jb
dec
jae
lret
fistps
push
inc
inc
scas
mov
inc
lds
push
jae
adc
test
pop
inc
cmp
mov
test
pop
lret
mov
and
push
and
stos
pop
xor
dec
jle
jmp
fisttpll
xlat
enter
lea
sub
push
pop
mov
and
xchg
cltd
int3
rclb
sub
xchg
or
sub
add
mov
pop
cmp
push
fldt
cmp
xlat
fwait
movl
xchg
and
lcall
jo
lcall
lcall
xchg
imul
inc
int3
ds
push
dec
xor
push
out
rorb
pop
and
dec
xchg
jecxz
sub
mov
fdivp
jmp
out
add
mov
sub
mov
mov
cmp
rcrb
cmp
mov
rorb
jnp
stos
andl
sbb
add
es
fisubl
repz
mov
sbb
sbb
loop
leave
mov
insb
cmpsb
pushw
xchg
test
xor
xchg
push
das
push
in
and
inc
and
and
in
xor
sbb
push
push
mov
daa
loope
mov
cmpsb
dec
pusha
push
mov
movsl
add
sbb
pusha
mov
loope
pop
mov
push
mov
ljmp
jecxz
bound
call
cmp
loope
mov
arpl
sub
push
push
and
in
es
movsb
adc
leave
sub
hlt
sub
sbb
push
jae
dec
cmpsl
or
jo
jae
cmp
and
cmp
popa
cmpsb
add
cmp
lahf
push
xor
mov
and
imul
inc
mov
xor
ret
in
cltd
fstps
shrl
test
sti
pop
xor
mov
mov
sbb
sti
es
sub
sbb
out
cmpsl
test
mov
cltd
jns
arpl
cmp
ja
push
cmpsl
xor
dec
or
bound
sub
dec
fisubl
mov
xchg
mov
dec
mov
sbb
das
jns
ret
xchg
pop
sarl
test
scas
aas
xchg
pop
stos
sub
jne
fwait
inc
xchg
mov
sbb
sub
lahf
inc
icebp
les
xchg
or
cltd
mov
adc
bnd
rclb
popa
outsb
jl
loop
sbb
rorb
push
fldt
in
in
push
mov
sub
inc
outsl
divl
shlb
xor
mov
or
into
fwait
rcrb
imul
fstps
lds
sub
es
stos
into
loop
xchg
les
lds
mov
mov
push
and
inc
pop
ss
movsl
ret
ss
dec
inc
dec
xor
xchg
cmpsb
push
inc
movntps
inc
bound
or
arpl
push
ljmp
adc
xchg
scas
gs
dec
sub
push
xor
and
sub
jge
mov
stc
mov
daa
add
aam
fwait
mov
and
std
psadbw
inc
or
es
dec
adc
push
push
mov
fldt
xchg
arpl
jne
pop
cmpsb
xchg
inc
xchg
movsb
test
inc
pop
dec
mov
mov
decb
push
and
xchg
xchg
stos
imul
out
sahf
stos
mov
and
xchg
cmp
pushf
test
sub
ja
xchg
fisubl
mov
mov
xor
shlb
ss
push
jl
mov
adc
jge
mov
sub
movsb
inc
movsb
cmpsb
lds
xor
xorl
mov
std
fiadds
pop
ret
cmp
xchg
cmc
inc
mov
mov
pop
faddl
nop
lahf
lods
bound
orb
test
loope
pop
mov
jnp
sub
mov
scas
orl
jae
jge
adc
mov
stos
and
gs
xchg
jle
xchg
mov
cmp
push
insl
pop
adc
mov
jb
xor
lods
pop
mov
sub
xchg
lret
mov
and
xchg
lret
and
test
orb
xchg
call
mov
jb
push
fsubl
mov
xor
sub
cmpsl
cmp
or
push
jne
pop
sub
and
rcrl
cmc
dec
dec
insl
or
pusha
mov
in
call
movsl
cmpsl
xor
and
mov
push
mov
stos
incl
loope
push
aas
lret
adc
in
inc
and
cmp
cmp
scas
stc
inc
pop
fadds
and
inc
push
xchg
out
pop
jo
sub
pusha
test
adc
xor
fwait
call
inc
fnstsw
cld
mov
loop
xchg
mov
sahf
jno
in
dec
lea
gs
push
mov
and
mov
movsl
sarb
mov
inc
dec
push
aas
inc
scas
pop
and
sub
xor
pop
pushf
pop
notl
mov
test
repnz
into
xchg
sub
iret
outsb
mov
dec
pop
mov
pop
out
sti
add
cmp
push
popf
gs
inc
and
xor
loop
gs
and
sub
pushf
movb
fdivp
shll
mov
pop
fcoms
lret
notb
mov
or
pop
enter
push
aad
cmc
popf
push
cmp
lahf
dec
xor
hlt
imull
lods
popa
rcr
dec
push
dec
pusha
sub
repnz
mov
xchg
ljmp
sub
ficoms
add
jb
or
stos
adc
cmpsl
dec
sub
mov
stc
cmpsb
movsl
cmpsb
adc
int3
pop
mov
and
mov
jmp
scas
and
movsb
dec
sub
xor
mov
jecxz
jge
dec
imul
orb
mov
inc
inc
push
add
shrb
outsb
or
xchg
mov
flds
fsubp
fucom
shlb
fs
stos
inc
hlt
pop
sub
inc
mov
test
into
cmp
test
inc
pop
xor
dec
jno
add
pusha
sub
movsb
int3
test
cmpsb
loop
cmpsb
loope
sub
test
sbb
pop
call
xchg
inc
xchg
std
mov
test
fdivr
sbb
mov
shll
ljmp
lds
or
cmpsl
data16
add
xor
in
stos
daa
pusha
les
bound
stos
shl
or
or
fs
mov
mulb
leave
out
adc
or
inc
mov
bound
repz
mov
int3
push
test
rclb
in
loopne
dec
push
lcall
adc
lret
jb
cwtl
rcr
jmp
pop
sarl
arpl
fsubl
adc
js
adc
out
int
loop
push
popa
xor
cmp
mov
cmp
xor
mov
push
jno
adc
xchg
hlt
and
test
scas
repnz
int
imul
pextrw
mov
insb
pop
inc
gs
sbb
adc
imul
mov
lods
daa
xchg
ret
aaa
ljmp
std
cmp
rorl
lods
xor
push
jb
adc
fnsave
shl
push
sub
cmpsl
lret
xchg
inc
rorl
sub
xchg
test
push
and
push
push
xchg
mov
or
pop
int
pop
mov
xor
nop
sub
into
mov
sub
ljmp
lahf
push
or
stos
arpl
lahf
pop
add
jge
pushf
pop
add
call
mov
sub
xor
scas
imul
jp
mov
rorb
mov
mov
pop
mov
iret
insb
lcall
shl
out
sub
dec
out
inc
push
mov
dec
adc
add
sub
jecxz
pop
cwtl
and
jmp
inc
and
mov
shrl
and
sbb
pushf
inc
pop
and
popf
loop
jl
jns
cs
sti
add
scas
test
cmc
lds
mov
ret
cltd
mov
cmp
ret
cltd
and
in
add
xor
dec
xor
lods
subl
aaa
push
push
push
inc
rcll
xlat
jmp
xchg
sub
inc
or
dec
cmp
loopne
push
or
outsb
push
dec
xchg
or
out
mov
xchg
jl
out
add
out
ret
and
scas
call
shr
std
lods
std
xor
in
push
out
push
mov
test
ds
push
mov
adc
fisttpll
ret
cld
push
out
inc
sbb
popf
mov
daa
cmpsl
sub
and
mov
mov
add
mov
pop
mov
lret
mov
pushf
shrl
in
ljmp
rclb
bnd
imul
jmp
lahf
pop
icebp
mov
data16
jbe
and
pop
lcall
or
fmull
fsubrs
mov
lahf
popf
lahf
bound
xlat
sbb
mov
push
xor
inc
movsl
lods
cltd
cmp
cmp
or
adc
sub
out
push
dec
xor
popa
int3
push
xor
loop
fmuls
jb,pt
shrb
dec
cmp
das
in
xor
out
mov
mov
mov
jne
xor
pop
shl
clc
dec
mov
or
fbld
int
push
cmp
daa
add
imul
mov
and
push
jae
lret
or
sub
shrb
mov
xor
cmpsl
out
imul
and
push
inc
pop
ds
xor
dec
pop
sub
data16
arpl
dec
incb
pop
mov
jecxz
out
sub
pop
ss
ljmp
push
fisubl
xor
pop
xchg
cmp
mov
inc
ffreep
aas
mov
dec
ret
xor
cmpsl
cmpsb
mov
test
mov
sbb
sarl
jb
add
shrl
dec
daa
fnstenv
mov
jge
inc
and
sarb
adcl
pushf
mov
es
loop
xor
stos
pop
lock
loope
mov
dec
sbb
icebp
inc
dec
insl
es
and
neg
cmp
in
xor
cmpsb
es
andl
mov
dec
insl
dec
mov
dec
jae
sbb
and
xor
rorl
mov
adc
shlb
inc
push
loope
mov
fwait
add
stos
mov
cwtl
decb
out
push
into
arpl
mov
jg
and
jp
or
jno
cmp
loope
test
lahf
dec
mov
icebp
xchg
sub
stc
sti
shl
movl
ret
mov
into
clc
fists
sbb
xor
push
leave
add
sub
dec
sub
mov
push
mov
scas
imul
jnp
sub
jg
or
jnp
xor
mov
cld
cld
xor
mov
sub
frstor
arpl
leave
imul
dec
and
hlt
xchg
pop
in
and
cmpsb
in
movsl
out
push
and
lcall
iret
xor
or
pop
ficoms
push
aas
pop
xchg
xchg
ljmp
inc
cmpsl
loop
daa
pushf
add
pop
test
test
loope
and
cmc
jae
push
mov
mov
aaa
fmul
or
mov
lahf
xchg
push
push
or
add
pop
fsubrp
lock
cmpsb
or
lahf
leave
lock
int3
movsb
sbb
fucomi
lret
jae
std
pop
dec
out
test
dec
inc
cltd
aad
mov
or
xchg
sub
lret
lahf
movsl
das
push
add
in
int3
pop
pop
hlt
xchg
int
cmpsb
fcmove
inc
lds
aad
aas
fnstcw
mov
sub
cltd
sbb
pop
or
pushf
pop
inc
mov
popa
lret
fwait
pop
mov
and
sbb
movsb
mov
into
pop
sub
nop
nop
inc
adc
insl
hlt
aam
ss
sti
sub
mov
mov
arpl
add
lcall
jo
inc
sbb
xor
adcl
fldt
vmovdqu
and
loop
and
and
es
xchg
jp
fs
out
in
leave
pop
clc
push
je
mov
xchg
ror
xlat
leave
inc
dec
xor
pop
cmp
shrb
and
pop
or
jecxz
and
scas
in
inc
nop
inc
xchg
mov
and
sub
cs
mov
movsl
jno
mov
cwtl
insb
xor
dec
lods
xchg
out
shrl
bound
and
mov
dec
clc
pop
movsl
jb
icebp
mov
loop
enter
xchg
mov
push
pop
pop
sbb
pop
or
sbb
add
repnz
dec
sbb
add
jb
mov
inc
sbb
rcll
dec
mov
xchg
arpl
inc
lahf
lcall
mov
dec
push
vpaddw
fistl
mov
inc
mov
insb
mov
xor
punpcklbw
cmp
jg
lret
daa
sub
scas
ret
cmpsl
jno
mov
inc
push
pop
inc
inc
lahf
dec
sbb
shlb
out
jb
out
shlb
sbb
dec
pop
scas
cwtl
mov
push
pop
pop
imul
add
xchg
test
jne
mov
xchg
mov
xchg
inc
movsb
cltd
push
ffree
push
aaa
jmp
dec
fwait
push
call
jl
xor
jecxz
out
sarb
std
or
out
loope
mov
mov
add
mov
es
test
pop
inc
adc
mov
or
rcll
ret
jp
test
mov
aam
push
pusha
jno
movsl
das
ffree
test
aam
pop
sub
jb
xchg
inc
push
loopne
mov
mov
test
jno
loop
loope
popa
jecxz
das
lock
ds
dec
cmp
xchg
sbb
shlb
lds
xchg
xor
test
pop
shlb
sub
jns
pop
and
jmp
rclb
data16
jle
mov
daa
inc
mov
xor
cmp
cmp
mov
shrb
push
movsl
arpl
or
movsb
push
movsb
ret
test
daa
xlat
and
sub
test
add
ja
les
ret
xor
sub
xchg
cmp
xor
scas
mov
xchg
movsl
xchg
jmp
xchg
push
cmp
xchg
push
sub
push
sub
xchg
out
and
lcall
sub
inc
sbb
test
mov
cltd
inc
imul
mov
jb
imull
jbe
addr16
sub
pop
mov
xor
lahf
sbb
push
mov
dec
jle
push
imul
sub
shlb
push
in
subl
sarb
inc
cwtl
inc
test
sarl
into
repnz
xor
push
movsl
pushf
xor
xor
rcrl
jecxz
push
mov
test
test
popa
inc
gs
das
jle
test
sub
ret
daa
mov
and
mov
outsl
mov
lods
jg
sub
mov
xchg
repz
sub
in
mov
push
push
test
add
inc
fwait
out
lcall
movsb
xor
mov
out
inc
pop
mov
mov
gs
inc
dec
xor
pop
out
in
popa
inc
fisttpl
mov
js
add
out
inc
mov
fidivrs
pop
das
cmp
pop
add
lods
lods
aaa
and
fadd
adc
call
sahf
and
dec
add
lea
into
mov
add
iret
push
and
mov
pop
repnz
push
lret
test
dec
xchg
pop
mov
mov
push
inc
out
xchg
cs
int
mov
mov
int3
mov
pop
stos
cmp
dec
insb
ljmp
js
bound
daa
mov
aam
mov
pop
out
cltd
sbb
je
les
das
test
inc
cmp
mov
in
adc
cmc
gs
cmpsl
popa
and
jp
cmpsb
mov
sbb
scas
sbbb
cbtw
adc
jmp
jg
movsl
and
movsl
cmp
lcall
sub
pop
xor
sbb
and
orl
lahf
fdivl
addr16
lods
inc
addl
mov
out
xor
sbb
inc
aaa
cmp
sub
mov
jecxz
int
dec
push
lods
popa
sbb
cmp
dec
bound
inc
inc
out
stos
or
aaa
into
jnp
fs
mov
in
inc
stos
data16
sub
ret
cmpsb
out
lret
xor
stos
out
das
scas
inc
scas
mov
cmp
dec
cmp
ficompl
push
xor
pop
test
ret
in
es
mov
add
out
pop
mov
mov
inc
mov
mov
mov
hlt
pop
rorl
jo
add
in
scas
cmp
xor
inc
mov
xor
mov
fwait
leave
incb
repnz
dec
jb
push
sub
mov
or
mov
jae
push
lds
arpl
jbe
les
and
mov
es
cli
cmp
cmp
mov
jne
inc
jmp
outsl
mov
dec
and
lret
test
and
sar
dec
mov
jns
repnz
dec
push
push
mov
aas
stc
scas
mov
and
loop
lds
pop
mov
sti
ljmp
aam
sahf
sub
in
jmp
mov
stc
lds
mov
and
jne
mov
loope
dec
in
xor
das
xor
stos
mov
push
and
sub
gs
test
dec
das
ja
sahf
push
xor
and
inc
out
push
and
rolb
repnz
data16
jae
cmpb
ret
arpl
mov
inc
mov
mov
rcll
gs
sahf
call
andl
sahf
stos
sbbl
arpl
gs
xor
clc
add
mov
xor
test
push
shrl
mov
test
push
test
sti
or
xor
loop
sub
bnd
cli
mov
sub
in
mov
push
mov
loop
mov
into
es
in
out
out
test
cmp
xor
ljmp
jecxz
xchg
push
mov
sub
lret
data16
mov
shr
imul
xchg
add
xor
out
test
push
aas
or
inc
jmp
cmp
mov
test
or
movsb
xchg
dec
test
sub
and
mov
in
orb
add
fcmovbe
out
stos
movsb
sbb
inc
mov
stos
add
mov
out
sub
orl
test
loopne
pop
push
sbb
mov
out
push
int3
mov
xor
pop
rorb
sbb
loope
cmp
daa
stos
ljmp
aas
push
adcl
push
inc
xchg
fistl
sub
out
mov
je
mov
js
pushl
repnz
lods
in
xchg
pop
lock
mov
adc
mov
pop
or
pop
test
add
cs
or
inc
das
arpl
or
loope
cmp
mov
stos
inc
into
lahf
mov
jbe
mov
add
sbb
imul
aas
popa
into
adc
mov
cmpsb
fidivs
pop
mov
mov
sbb
inc
jg
fstpt
cs
in
stos
inc
jnp
xchg
icebp
xor
sub
inc
orl
test
mov
push
dec
sub
or
cmpsb
xchg
add
or
push
rcll
lods
xchg
mov
shl
je
negb
nop
mov
inc
rcrl
or
jecxz
xlat
and
ret
in
lds
arpl
aas
ret
rorb
and
ficomps
mov
mov
lahf
fdivl
xchg
ret
sub
xor
cmp
mov
cmp
xchg
fistl
out
arpl
xchg
mov
pusha
in
jnp
jg
add
pop
fs
jmp
pop
fdivrs
push
xor
pop
and
fisttpl
inc
jge
lods
jmp
cmc
loope
loop
jl
cmp
ljmp
push
push
cmp
jns
inc
xor
mov
cmp
xorl
mov
push
ret
test
mov
mov
add
xchg
lods
jmp
pop
dec
fs
sub
mov
push
dec
inc
mov
add
out
mov
stos
test
cmpsb
sbb
jb
fidivrs
les
rep
inc
subb
add
ljmp
lods
pop
mov
cmp
add
int3
jns
push
in
sub
inc
mov
loop
ror
loope
mov
movsb
mov
icebp
ljmp
and
and
or
sbb
inc
pop
pop
xor
cmp
das
pushf
lods
rcrb
push
fbld
shlb
scas
push
pop
loopne
jo
pop
sbb
mov
aam
xchg
or
and
xor
punpckhwd
xchg
add
cltd
push
aad
es
arpl
sahf
jge
push
jne
daa
sub
dec
and
out
shlb
das
pop
pop
mov
test
test
daa
add
pusha
and
sub
imul
mov
sub
sub
popa
fmulp
fistpl
fs
sub
add
pop
push
repz
lods
out
xchg
std
pushf
fidivrl
pop
and
cmp
add
jmp
push
fwait
data16
cwtl
int3
test
stos
xor
out
sbb
and
mov
mov
inc
dec
out
cmpsl
jb
popa
dec
xchg
std
subb
retw
test
pop
push
leave
pop
jp
popa
adc
popf
jg
jae
xchg
mov
lret
mov
mov
push
jmp
sub
rolb
or
mov
int3
push
mov
addr16
ret
aam
inc
lods
sub
and
sub
mov
nop
dec
imul
add
push
cld
xor
rolb
dec
les
push
jecxz
call
push
mov
daa
out
inc
and
arpl
jno
mov
xor
pop
lods
fsubl
aam
xor
or
pop
sahf
mov
daa
inc
inc
xchg
imul
dec
sarl
daa
sub
xor
imul
xchg
popf
sub
inc
loopne
stos
out
push
fldlg2
imul
aas
cmpsl
test
pop
xor
ret
cmp
lods
adc
fadds
cli
xor
add
dec
les
cmp
fmuls
sub
xchg
lods
add
lea
js
fcoml
push
adc
in
mov
sbb
sbb
xor
in
lret
xchg
push
mull
mov
aas
inc
cmc
fldt
sub
test
lahf
movsl
fdivl
inc
and
mov
jno
lock
ljmp
xor
pop
stos
fldl
sub
gs
jle
pop
ret
ret
out
push
push
cmpsl
push
adc
sbb
lods
pop
adc
loop
cmp
sub
imul
pop
xor
and
jmp
out
xchg
or
jmp
push
jb
out
das
inc
push
popl
adc
loop
fidivrl
inc
mov
and
fistps
out
sbb
sub
cs
cmpsb
mov
mov
es
fucomp
sub
outsb
in
push
pop
nop
mov
cmpsl
mov
sub
mov
mov
push
inc
and
lahf
imul
inc
mov
cwtl
popf
mov
xchg
movsl
cmpsl
idiv
aad
mov
aam
xor
push
and
es
push
out
outsl
jle
ret
jecxz
xor
push
and
lahf
daa
mov
or
mov
cmp
add
sbb
push
jnp
sub
mov
sub
pop
pushf
shlb
cmp
sbbl
jnp
popa
fldenv
push
xorl
mov
jle
xchg
inc
fisubs
pop
hlt
mov
arpl
adc
cwtl
repz
ret
xchg
rcrb
mov
mov
xchg
add
xchg
lea
lds
fidivrs
test
xchg
jno
int3
mov
jae
sbb
out
jecxz
ss
test
js
push
pop
sbb
loop
lock
jbe
fidivrl
inc
mov
xor
pusha
arpl
ret
add
test
in
xor
jecxz
in
push
loope
fistps
or
shrl
jo
jp
adc
add
xor
ss
xchg
or
and
arpl
fstpl
push
scas
inc
ret
daa
pop
lea
mov
ljmp
sub
das
gs
es
insb
stc
sub
popf
cmpsb
jecxz
add
xchg
sub
call
stos
mov
int
daa
scas
jb
and
testl
push
mov
aam
mov
pop
cmp
adc
mov
jmp
sbb
sarl
push
mov
sbb
xchg
dec
pop
repnz
stc
gs
pop
add
mov
int3
sub
sub
sub
gs
dec
xchg
and
pop
xchg
movsl
inc
inc
dec
cmc
rolb
stos
sbb
and
daa
push
mov
out
cmpsl
popa
adc
cmc
negl
int
lret
movsb
xchg
inc
mov
sub
jg
mov
jns
ror
xchg
xchg
jnp
and
jno
sbb
mov
mov
jecxz
test
mov
dec
iret
mov
push
subl
push
mov
xor
xor
push
outsb
enter
imul
daa
pop
cmpsl
mov
out
xor
insb
inc
xor
cmpsb
dec
daa
leave
dec
mov
andl
in
int3
and
jbe
fiaddl
mov
xchg
mov
aad
sub
pop
xor
dec
lret
in
jnp
xchg
aad
mov
mov
ds
or
mov
in
jl
stc
enter
ljmp
push
mov
inc
rol
xchg
fcmovbe
add
pop
mov
sub
sbb
jbe
setno
push
push
pop
int
push
lret
pop
or
outsl
ljmp
mov
scas
or
inc
mov
add
pop
xor
pop
dec
mov
loopne
pushf
mov
orl
cmpsb
jge
push
jg
mov
inc
stos
xor
mov
add
xchg
inc
mov
testb
cmpsb
loopne
cmp
mov
xor
and
lods
xchg
mov
push
inc
vmovntps
in
inc
cs
pop
lret
add
fmull
or
out
lock
mov
loope
loop
test
cmp
inc
inc
sub
divl
imul
icebp
mov
push
push
les
enter
lret
push
jnp
dec
addr16
xchg
or
fcomip
jle
aam
insl
mov
push
mov
add
xchg
jg
mov
or
mulb
ljmp
or
punpcklbw
movsb
mov
and
aaa
ror
sub
push
mov
fildll
push
int3
dec
in
inc
test
pop
adc
and
or
inc
mov
and
mov
pop
push
jb
pushf
outsl
mov
cmp
lods
xchg
pop
mov
mov
pop
sub
repnz
sub
leave
push
jg
outsl
dec
das
push
fcoms
mov
mov
jp
stos
sbb
lea
mov
in
and
lret
xchg
cmova
mov
fld
clc
pop
out
aad
cmpsb
adc
bound
loope
adc
les
add
cmp
jnp
sub
mov
push
lods
mov
mov
test
adc
rolb
addr16
lods
push
mov
cmp
js
and
cmp
cmp
fbstp
scas
imul
dec
imul
out
sub
and
push
std
test
jno
add
cmp
push
mov
icebp
sahf
mov
fnclex
pop
roll
nop
mov
mov
aas
and
pop
jnp
cmp
ror
jp
test
hlt
pop
into
andb
imul
loope
mov
jno
loop
imul
xchg
cwtl
stos
in
inc
cli
and
pop
nop
popa
xor
movsl
sub
cwtl
sub
pop
xor
sub
mov
mov
std
push
xchg
jae
jmp
icebp
in
pop
fs
push
lret
mov
sub
test
mov
movsb
xor
cmpsl
clc
push
cmp
lcall
sub
jnp
jle
repz
jnp
ss
sub
xchg
cld
test
inc
sub
mov
pop
and
push
arpl
cmp
cmp
loopne
and
inc
addb
aas
pop
push
ss
inc
out
ret
pop
jo
out
mov
repnz
fsubp
into
push
loope
add
idiv
push
inc
pop
xorb
dec
sar
add
into
fcomi
add
sbb
xor
jmp
jae
xor
sub
pop
xor
push
fldl
movsl
push
fwait
lret
in
xchg
inc
shlb
data16
les
cmp
das
sbb
mov
xchg
xchg
inc
and
and
pop
xchg
dec
or
int
imul
rol
dec
push
dec
lds
scas
lds
subb
in
jno
scas
jne
jb
dec
lock
inc
push
arpl
and
pop
jne
fimull
fldenv
and
xchg
popf
lcall
daa
and
arpl
pop
mov
aam
test
je
jne
add
insb
test
stos
pop
fildll
aam
and
mov
dec
dec
test
mov
movsb
mov
mov
aas
loop
sub
cmc
insl
in
loope
pop
xchg
out
lahf
fistpl
xlat
xchg
push
outsl
stos
test
sub
outsl
or
sbb
add
cmpsb
mov
clc
ds
fcomip
bound
test
lock
and
dec
mov
push
xor
sub
cltd
xchg
test
shll
mov
or
incl
cmp
loopne
out
sbb
out
lret
seta
dec
lds
or
les
int3
nop
or
in
add
into
inc
cltd
hlt
int
push
and
repnz
icebp
scas
mov
mov
int3
xor
cmpsb
scas
sahf
test
xchg
iret
loopne
imul
inc
pop
dec
jae
lret
add
xchg
sbb
movsl
dec
leave
mov
jmp
adc
movsl
mov
cwtl
mov
out
mov
add
stos
mov
fbld
pop
es
je
jnp
push
lods
lcall
push
fwait
xchg
pop
cmp
inc
pusha
pop
and
iret
or
xor
inc
popf
mov
or
inc
jb
pushf
push
mov
pop
mov
test
jno
stc
je
in
mov
into
hlt
arpl
loop
push
mov
cmpl
fsubrl
inc
mov
push
fists
shld
adc
jl
int
sbb
inc
in
cmpsl
std
cltd
dec
fsubs
xlat
mov
insb
fs
ja
outsb
fisttpll
or
push
sub
and
xchg
dec
pusha
push
dec
cmpsb
out
leave
jne
es
mov
mov
mov
pop
mov
adc
cltd
pop
in
or
dec
test
push
dec
imul
jns
mov
subb
add
test
xchg
mov
sub
bound
shll
loopne
cmpsl
inc
cs
pop
mov
jecxz
dec
push
sbb
and
jecxz
xor
mov
dec
push
lea
jae
or
dec
ret
jl
xor
xor
lock
into
jae
repz
std
lock
iret
xor
inc
mov
mov
inc
jmp
jp
and
pop
sub
sbb
mov
test
mov
icebp
repz
call
xor
test
xchg
outsl
lods
enter
push
sbb
nop
and
jae
leave
add
js
in
or
lock
inc
mov
xor
cmp
icebp
popa
mov
mov
sub
imul
sbb
cmp
cmpsb
subb
fs
mov
loope
jge
mov
out
add
aam
cmpsb
mov
jp
ficomps
aad
outsb
insb
out
dec
loop
pop
cltd
out
lahf
push
enter
rorl
and
jg
jnp
dec
ds
lahf
fcmovnb
lods
dec
and
mov
sbb
mov
add
sub
cmpb
adcb
xchg
lods
inc
dec
out
lds
inc
stos
mov
jmp
in
lods
enter
dec
mov
aaa
rclb
popf
out
int
or
pop
dec
pop
and
loope
pop
lcall
andb
loopne
xchg
movsb
pop
roll
lret
mov
or
fdivr
movsl
dec
sub
dec
xor
cmp
loopne
movsl
enter
int3
pusha
inc
rcr
sahf
inc
andl
inc
pusha
pop
mov
xchg
bnd
pushf
pop
aaa
out
scas
dec
mov
movsl
inc
fcomi
dec
mov
ds
aam
hlt
pop
mov
lock
fldl
jmp
dec
mov
mov
in
inc
sub
mov
pop
test
pop
mov
les
sbb
sbb
add
xchg
out
ja
sub
aas
ret
int
aaa
cmpsb
add
jae
adc
mov
icebp
cmpsl
dec
in
imull
xor
dec
pop
lock
movsl
cli
mov
and
mov
aad
push
xchg
mov
mov
pop
or
pop
stos
push
add
xor
xchg
push
ja
dec
mov
xchg
fistpll
sbb
xor
sub
push
daa
xchg
push
inc
mov
push
push
cmp
fidivrl
gs
loop
mov
mov
pop
xor
pop
orb
leave
scas
dec
push
movsl
or
push
xchg
fdivrs
inc
test
dec
mov
cmp
out
cmpsl
aad
arpl
push
jmp
neg
lods
dec
movsl
lods
xchg
pushf
jno
jle
cmp
add
mov
xor
cld
stos
inc
pop
and
sub
sti
rcl
inc
or
or
es
or
and
pop
mov
ds
inc
mov
std
jbe
incl
mov
sbb
inc
bound
xchg
mov
scas
push
test
dec
lock
fildll
or
pop
xchg
out
scas
push
add
mov
out
aad
push
mov
mov
mov
mov
mov
pushf
mov
iret
divb
mov
stc
push
adc
hlt
jb
and
sub
mov
sub
mov
and
lret
adc
mov
jecxz
enter
into
mov
mov
rcrb
ret
cltd
mov
mov
sub
mov
xor
and
inc
arpl
cmp
and
sub
dec
and
cltd
lods
push
adc
lods
push
and
in
pop
adc
fs
pop
ret
pop
pop
data16
outsb
xchg
and
jne
cmpsb
ret
sub
icebp
sub
test
pop
cmp
daa
insl
arpl
push
mov
sub
test
inc
cmp
shlb
arpl
cmp
addl
daa
test
and
clc
cli
xchg
mov
test
test
ret
xchg
sub
test
inc
idivl
xchg
test
ret
cltd
sub
fwait
inc
loope
popf
test
ret
inc
mov
mov
imul
jae
sub
mov
xor
sub
das
mov
imul
mov
js
xor
aaa
sub
cmp
test
ret
aas
sub
inc
inc
idivl
inc
test
ret
in
daa
cli
inc
arpl
lods
dec
arpl
cmpsb
dec
arpl
fidivl
dec
inc
iret
cmp
dec
leave
ret
sub
in
int
and
xchg
cmp
mov
data16
in
sub
das
cmpsb
addr16
cmp
mov
divl
mov
sub
sub
aad
xchg
pop
xchg
loop
pop
daa
les
add
inc
cmp
inc
mov
inc
das
out
shrl
mov
dec
pop
fnstsw
aam
xor
dec
das
lret
addr16
cmp
xor
and
mov
push
les
cmpsl
sub
popa
gs
ja
and
adcl
mov
loop
mov
add
push
fnstsw
dec
sub
pusha
mov
sub
sub
inc
loope
push
add
lcall
sub
cs
cmpsb
add
push
inc
and
pop
movsl
xchg
mov
movsl
ljmp
sub
and
stos
dec
mov
xor
push
push
addr16
mov
xchg
test
and
mov
and
fsubrl
js
xchg
dec
das
aad
jne
pop
pop
test
aaa
mov
bound
pop
or
fwait
push
sub
xchg
mov
dec
clc
or
notl
and
lds
imul
xor
mov
jae
add
push
pop
xor
stos
ja
mov
repnz
data16
mov
cmp
fistps
pusha
inc
hlt
ljmp
popa
mov
mov
test
pop
push
add
xchg
and
in
dec
out
sbb
jp
add
jnp
sub
or
sub
and
xor
dec
int
icebp
xchg
sub
sub
adc
cmp
xchg
pop
sub
rcll
lahf
mov
push
lret
mov
mov
or
sub
movnti
or
cmc
lods
adc
jns
xor
adc
push
sub
lock
xlat
movsb
pop
push
movsl
jmp
fs
das
lds
mov
pusha
aas
mov
xor
lahf
mov
jecxz
inc
adc
pop
jle
jp
dec
clc
inc
xchg
and
ja
call
test
test
mov
leave
dec
arpl
cmp
dec
xchg
lahf
jmp
incl
sbb
and
gs
mov
gs
stos
lods
xchg
push
in
xchg
test
cmc
scas
insb
adc
sub
iret
adc
mov
imul
pushf
mov
and
add
pop
fwait
hlt
inc
movsl
dec
jmp
nop
subl
and
xchg
xor
jo
cmp
daa
imul
sub
jbe
mov
fwait
stos
jns
xchg
fcmovnu
enter
mov
fidivrs
mov
test
mov
mov
add
stos
in
test
push
cmp
ret
aas
loope
xor
mov
enter
lods
mov
push
cltd
adc
dec
xor
xchg
cmpl
cmp
jno
cmpsl
jb
shlb
ret
and
ja
sub
inc
xchg
xor
mov
xlat
ficoml
dec
push
or
shl
loope
std
add
push
xor
mov
xchg
mov
dec
xchg
aas
icebp
lret
mov
mov
scas
icebp
nop
mov
sbb
xchg
cmc
scas
mov
jb
scas
dec
pusha
mov
push
xchg
adc
in
sbb
mov
mov
ja
inc
dec
adcl
sbb
pop
jne
and
jns
mov
cld
mov
icebp
add
dec
push
andl
push
lock
xchg
mov
jbe
push
repz
adc
repz
lcall
sbb
jne
adc
fisubs
lret
push
das
mov
bound
or
stos
sbb
sub
popf
mov
and
cmp
adc
enter
fistl
clc
repnz
test
push
xor
lds
cmp
mov
roll
xchg
imul
aas
push
ficomps
pushf
into
jmp
fistpl
das
movsl
or
imul
stc
mov
xor
test
mov
xorl
mov
pop
sbb
mov
jg
push
popa
pop
xor
push
and
daa
mov
test
in
cmpsl
rcll
lret
xchg
mov
andl
test
mov
inc
mov
std
jnp
mov
mov
mov
xor
mov
pop
sub
or
loope
test
push
dec
aad
inc
inc
fwait
rcrb
rcl
xchg
mov
outsl
push
das
pop
jge
dec
mov
add
inc
sti
leave
fs
pop
mov
lcall
bound
and
add
xchg
jp
cmp
repz
mov
popf
add
leave
cmp
or
je
xchg
mov
xor
imull
ss
rcrb
cltd
cmc
cmpsb
push
iret
repnz
and
sub
aaa
pop
mov
fisttpl
add
int3
lods
fsubrl
mov
mov
lret
cmpsb
mov
mov
jne
and
sar
jl
adc
dec
xor
xchg
or
mov
sub
popf
mulb
adc
and
pop
cwtl
stos
inc
add
int3
jecxz
or
or
dec
xchg
pop
and
sbb
adc
pop
dec
hlt
inc
mov
inc
pop
popa
xchg
loop
mov
repnz
add
insb
mov
cld
jmp
jecxz
xchg
jnp
inc
xor
add
push
enter
das
sub
jecxz
imul
xchg
sub
pop
sub
testl
fcom
popa
sub
pop
mov
cltd
xchg
popf
and
es
enter
push
mov
es
dec
imul
xor
jecxz
ret
lret
add
cwtl
lock
mov
daa
xlat
std
ret
jge
or
fisttpll
mov
test
movsl
jge
imul
icebp
and
mov
cmc
scas
test
repnz
cwtl
ret
sbb
dec
pop
lahf
or
out
sbb
mov
movsl
and
and
cmp
pop
xor
shrl
mov
adc
add
and
mov
stos
mov
cli
jns
fimull
int
sub
imul
push
test
int
call
push
cmp
xor
inc
fidivrs
test
add
incl
sub
gs
mov
daa
xor
add
or
or
lods
daa
daa
mov
xchg
jbe
push
pop
mov
mov
mov
inc
dec
xor
pop
push
pop
subps
fistpl
sub
inc
loop
xchg
daa
dec
pop
sub
pop
test
int
movsl
dec
mov
mov
push
bts
jmp
cmpsb
xchg
or
push
rcll
mov
cmp
cmpsb
test
mov
sbb
daa
push
les
loop
into
mov
pop
sub
push
call
lahf
int
add
cli
outsl
push
stos
popf
inc
aam
lahf
inc
jno
and
cs
fs
cmpsl
xor
daa
mov
mov
ret
in
and
int
jecxz
insb
push
mov
or
xchg
xchg
aaa
pop
dec
out
jns
mov
test
and
sub
adc
inc
lock
push
int
dec
sbb
loopne
mov
pop
jg
mov
sub
js
filds
loope
xor
sbb
and
jle
pusha
push
mov
int3
mov
das
arpl
xchg
push
cmp
sbb
daa
xchg
mov
xor
shrl
cmp
ret
jns
sbb
rorb
sahf
stos
push
sub
inc
gs
mov
mov
push
cwtl
popa
pop
sub
mov
pop
fidivl
cwtl
cmp
pop
lods
xor
xchg
fisubs
or
mov
shl
cmpsl
cmpsl
and
test
cmpsb
sbb
cmp
cli
mov
add
xor
dec
push
mov
clc
test
push
lock
push
mov
aad
xor
aaa
lds
inc
inc
dec
movsl
xchg
in
fwait
dec
loop
push
push
loope
mov
sbb
mov
shll
jecxz
daa
pusha
mov
add
fdiv
xchg
inc
mov
int3
xor
sub
scas
sub
jns
loop
mov
xchg
imul
mov
cmp
rcr
loop
fbstp
test
inc
jnp
pusha
xor
jne
xchg
popa
jmp
xor
movsb
cmp
ret
sub
nop
outsb
cltd
inc
int3
movsb
jl
aam
int3
pop
lret
pop
iret
xchg
push
push
jmp
push
mov
xchg
lahf
jmp
pop
out
and
loope
mov
les
packuswb
fisttpll
mov
pop
cmpsb
ds
push
add
jp
jg
mov
pop
daa
mov
pushf
mov
shlb
push
popa
sbb
in
shll
or
leave
scas
push
push
adc
xchg
lock
jne
push
aaa
xlat
pop
pop
sbb
rorb
iret
into
fwait
test
jae
and
jmp
adc
sbb
jmp
push
jmp
in
pop
push
pop
inc
and
cmpsb
stc
mov
xor
mov
cmpsb
push
lock
lds
fwait
pop
mov
scas
nop
insl
scas
mov
jl
daa
arpl
mov
pop
cs
ret
mov
inc
mov
xor
xchg
push
xor
pop
pop
sub
dec
add
xor
fidivs
cmpl
popl
add
fnstcw
xchg
xchg
mov
pop
out
fldenv
imul
test
daa
xchg
addr16
hlt
cmp
cmpsb
mov
jg
mov
in
test
mov
or
push
sub
push
pop
cmpsb
push
lret
pop
cwtl
xchg
test
jecxz
pop
ror
sub
dec
mov
imul
and
xchg
and
je
and
enter
pop
mov
mov
jmp
popa
mov
dec
inc
loop
sub
popa
mov
pop
inc
gs
lods
push
rorl
mov
movsb
push
pop
lret
sub
push
popa
adc
mov
push
mov
test
pop
icebp
leave
out
sub
sbb
add
loop
xchg
loope
adc
loopne
push
add
loop
and
sarl
mov
push
mov
mulb
outsl
pop
sub
mov
mov
shrl
jle
es
pop
jb
sub
in
pop
imul
insb
fwait
hlt
push
sahf
leave
std
je
loop
mov
lret
popf
movsl
dec
test
xchg
fcomps
xchg
cmp
inc
push
inc
inc
jecxz
cld
and
popf
mov
add
xor
and
inc
test
test
mov
lcall
xor
jb
adc
leave
cmpsl
pop
leave
dec
lret
daa
out
arpl
mov
popa
fistps
add
and
or
pop
cwtl
lcall
dec
sub
add
gs
add
add
jbe
mov
pushf
or
mov
pop
sbb
cltd
jmp
sub
rep
jne
xchg
mov
movsl
mov
imul
scas
or
mov
push
add
jle
lds
cmp
sub
ds
or
jo
jmp
sti
shll
add
lret
jns
inc
shll
fcmove
cltd
adc
push
push
adc
xor
mov
push
adc
jl
les
xor
arpl
in
scas
inc
adc
and
mov
in
out
or
int3
inc
fmull
dec
xchg
cmpb
andb
push
dec
add
std
add
pop
push
or
int3
movsl
les
xor
loop
xchg
mov
and
vaddpd
roll
xchg
push
adc
fmul
in
mov
xor
sbb
shrl
cltd
xor
imul
in
cltd
sub
jbe
out
aam
pop
xor
adc
daa
xchg
xchg
out
movsb
add
int3
or
adc
aad
xor
push
dec
repnz
aas
push
les
movsl
cmp
aad
test
leave
inc
push
jl
push
cmp
mov
xor
mov
dec
xlat
in
sub
pusha
xchg
lea
pop
fsub
jl
movsb
mov
jb
and
mov
call
popa
cmpsl
xor
xor
add
test
rcrl
mov
and
adc
arpl
popa
lods
test
add
stos
ja
ss
pop
dec
jmp
js
xor
aas
in
lods
push
xor
test
out
pop
sub
pop
push
js
and
jo
push
int3
xchg
lea
xchg
test
add
out
mov
sub
xor
movsb
into
les
push
pop
gs
mov
loopne
mov
or
dec
das
cs
xor
test
xor
repnz
cmpl
scas
rcrl
or
and
pusha
jns
sub
mov
sarl
jbe
pusha
or
xor
test
sbb
inc
lods
pop
popf
mov
das
orb
dec
jns
mov
cmpsb
mov
and
pushf
loope
xchg
add
dec
push
xchg
and
ljmp
js
or
fistps
mulb
in
scas
pusha
add
mulb
test
pop
movsl
sub
dec
fcomps
fucomp
mov
rclb
inc
call
daa
pop
sub
fdiv
dec
mov
and
xchg
test
pop
jmp
jp
lods
adc
into
shl
jnp
jecxz
pushf
or
mov
fbstp
xchg
clc
filds
mov
pop
jmp
xchg
pop
sub
xchg
lods
push
dec
cs
pushf
xor
pop
mov
pop
jae
push
mov
aaa
xchg
rol
sub
and
adc
out
dec
xchg
cmpsl
mov
mov
push
outsl
add
xchg
jne
mov
js
mov
fistps
fadd
fldt
imul
popa
ret
imul
inc
cmc
xor
mov
movsl
ret
fwait
cmp
xchg
popa
inc
cmc
xchg
popa
cmc
jae
inc
fdivrl
test
movsl
dec
xor
inc
jmp
cmp
jb
sub
imul
jge
jle
pop
ja
inc
testb
jbe
das
testb
dec
test
fwait
mov
testb
dec
dec
mov
test
cltd
ret
popf
add
shrb
xor
cmpsl
cmp
jne
js
pushf
push
xor
lret
daa
fsubrl
mov
xchg
adc
adc
or
mov
test
adc
lret
sub
mov
addb
fsubrl
xchg
stc
aaa
mov
pusha
mov
jecxz
mov
and
rcrl
addb
mov
gs
push
push
adc
popa
mov
pop
mov
mov
cwtl
inc
dec
mov
and
mov
hlt
popf
fbstp
outsl
pushf
aas
dec
pop
mov
daa
xchg
pop
xor
add
and
ret
dec
lcall
inc
dec
arpl
fwait
scas
mov
ljmp
ds
add
aas
cmp
daa
xor
xor
fldt
xacquire
fadds
in
dec
arpl
sub
inc
dec
mov
jmp
xchg
fldenv
rol
jo
or
stos
sub
mov
push
push
loope
or
and
pop
xchg
call
push
push
inc
and
cmp
inc
xor
int3
mov
pop
mov
mov
ljmp
cltd
lahf
fpatan
ficoml
mov
in
xchg
push
scas
ret
xchg
adc
and
std
mov
mov
or
sub
sbb
notb
out
jb
sub
dec
inc
xchg
rcr
xor
lret
mov
cmp
les
push
push
das
sbb
imul
adc
adc
sub
das
add
pop
imul
sub
ss
bound
inc
xor
rdpmc
sbb
das
lods
sub
sub
imul
frstor
fldt
stos
iret
stos
adc
popa
daa
push
inc
fisubrl
imull
mov
xchg
es
je
jo
mov
xchg
dec
sub
fidivrs
notl
popf
mov
stc
and
inc
push
das
lahf
cltd
out
xor
daa
arpl
and
test
lods
out
incl
pop
cs
pusha
daa
leave
movsl
cmp
jnp
inc
aas
pop
mov
cmpb
cmp
push
xchg
xchg
xor
mov
push
jle
xor
and
daa
cltd
scas
and
loope
adc
in
pop
pop
pop
dec
rcrb
or
mov
mov
and
add
addl
pop
mov
in
and
mov
rorl
cltd
test
xchg
repz
aad
pop
push
popf
in
xor
xchg
jp
sbbb
inc
int3
cmp
sub
mov
test
and
xchg
jnp
mov
outsb
int
hlt
inc
or
ds
out
sbb
xchg
sbb
inc
mov
into
pop
daa
arpl
mov
add
in
jecxz
int
or
into
loope
sub
sub
xchg
in
mov
xchg
ret
rcrb
inc
mov
sahf
clc
subl
call
lret
ret
pop
scas
xchg
push
mov
xor
mov
rcrb
inc
shll
test
mov
or
stos
and
in
dec
pop
cmpsb
fisttpll
pusha
es
jg
xor
push
mov
outsb
jg
fbld
out
data16
movsl
sbb
or
ret
mov
imul
push
movsl
sahf
shll
call
ret
mov
mov
push
dec
mov
sbb
stos
add
lock
push
lret
or
sbb
insb
xor
or
out
out
jle
mov
out
lods
mov
cwtl
dec
cmc
cmpsb
fisttpl
sahf
xchg
add
movsb
mov
jne
push
and
ficoml
mov
mov
and
dec
push
sbb
xchg
gs
pop
fnsave
dec
out
call
and
jne
ja
rorl
rep
shrb
std
cld
hlt
ja
sub
dec
loop
xchg
inc
xor
outsl
bound
hlt
pop
mov
or
and
in
dec
sbb
arpl
mov
dec
clc
xor
mul
pop
mov
inc
jbe
sub
mov
fstl
push
mov
insb
mov
data16
jno
out
pop
adc
rcr
in
leave
push
sub
clc
fcoms
inc
stos
lret
lret
insl
loop
scas
mov
cmpsl
test
cmc
sub
dec
xchg
out
jp
stos
or
mov
repz
mov
adc
or
cmpsb
loope
cltd
dec
push
icebp
hlt
push
inc
mov
ljmp
or
data16
fcomip
xor
and
and
xor
inc
int3
rorb
adc
test
bound
pop
cmpsb
imul
lods
loop
inc
lods
or
xchg
adc
int
and
fcmovnb
mov
dec
lods
rolb
xchg
sahf
fucomp
or
mov
fwait
jecxz
imul
imul
sahf
iret
lcall
push
pushf
sub
and
inc
jne
xor
aaa
jge
addr16
dec
insl
daa
jnp
and
sub
jno
outsl
jns
imul
ja
jecxz
enter
aas
and
dec
mov
in
ja
and
and
andl
cmp
popa
rcrb
test
iret
das
mov
sub
or
and
push
lahf
cli
pop
jl
movsl
or
mov
int
push
xorb
sub
cmpsl
sub
sar
cmp
mov
jns
shl
ret
addr16
and
jae
imul
mov
out
repz
jne
negb
sbb
mov
imul
mov
xor
add
push
ret
pusha
es
push
sbb
cmp
ds
jle
mulb
and
xlat
inc
push
mov
movzbl
sub
popa
sbb
fistpl
pop
sub
aas
mov
jnp
fisubl
mov
lea
add
sub
jns
push
fists
inc
imul
push
scas
mov
jae
xor
es
ds
adc
cmpsb
jae
xor
xchg
pop
xlat
xor
inc
xchg
push
notb
push
out
int
jp
outsl
shll
mov
dec
xor
sub
mov
inc
jmp
sub
int
leave
cld
lods
sub
xchg
add
mov
xor
jae
pushf
notl
sub
ljmp
in
xchg
add
mov
sbb
in
xor
mov
mov
mov
ljmp
push
adc
ret
pop
int
es
jmp
and
jo
lods
leave
sahf
xor
adc
mov
sub
out
mov
mov
pop
push
cmpsb
dec
test
push
jmp
scas
sbb
test
or
popa
shlb
mov
dec
add
imul
jmp
outsl
mov
mov
icebp
cmp
dec
sub
jns
sub
es
mov
clc
jo
jns
jmp
lods
std
xor
bound
ja
sbb
daa
fbld
sub
mov
mov
pop
dec
push
xchg
sub
inc
inc
add
jp
sbb
xchg
ja
fists
xor
arpl
gs
orl
sbb
push
mov
dec
sbb
jo
xor
fnstsw
iret
insl
rcll
jo
in
mov
test
ret
inc
and
cwtl
mov
or
add
xchg
aas
gs
fistl
inc
push
push
mov
xor
sub
and
ss
andb
dec
cmpsl
push
test
push
sbb
mov
xchg
test
test
sub
subl
add
cmp
inc
ret
lods
mov
sub
push
in
pushf
xchg
lods
xor
divb
xor
outsl
cmpl
andb
out
jb
and
sub
clc
and
lahf
out
and
scas
and
sub
fcompl
fs
pop
pop
and
xlat
jno
mov
outsl
cmp
fstps
test
jne
pusha
loopne
imul
and
push
pusha
mov
add
lea
sti
cltd
stos
popf
mov
mov
pop
aad
dec
fisttpll
shll
sub
lods
fldl
cwtl
inc
xchg
and
mov
mov
imul
or
les
xchg
mov
sbb
xchg
sub
fucomip
push
fistpl
aaa
mov
nop
je
mov
dec
std
jno
xchg
sahf
lea
daa
fstpt
icebp
stc
mov
sti
icebp
push
mov
sub
das
punpckldq
pop
movsb
inc
nop
fwait
movsb
in
pop
rol
pop
sub
xchg
and
int3
mov
sbb
mov
adc
push
cli
imul
mov
xlat
and
pop
mov
cmpsb
aam
ljmp
andb
xchg
mov
xor
mov
xchg
test
mov
adc
xchg
push
lods
inc
and
xchg
pop
lret
dec
xchg
pop
inc
mov
shl
pushf
cmp
jle
scas
jno
mov
mov
arpl
cmp
ret
push
addr16
test
cmp
outsl
imul
and
xchg
pop
leave
arpl
sub
out
xor
jmp
repnz
stos
in
rep
mov
jne
lahf
or
jae
fcmovnb
in
loope
das
push
inc
ja
inc
dec
xrelease
sbb
or
jo
pop
cs
mov
lea
pop
shlb
test
and
xor
push
jo
and
mov
rcrb
adc
ffree
jno
or
xor
push
cwtl
add
cmp
rolb
inc
and
in
cwtd
orb
sarl
scas
popa
sub
stos
mov
and
scas
sbb
movsl
stos
push
lahf
pop
loop
pop
lret
outsl
aam
mov
pop
sub
jle
xor
loope
scas
push
xchg
sub
adcl
sbbb
popa
arpl
push
xchg
scas
enter
out
stos
imul
inc
in
out
push
aad
sub
add
xchg
fisubrl
dec
ret
aas
arpl
daa
sbb
add
inc
cmp
xchg
push
lea
sbb
xor
inc
xchg
sbb
xchg
ds
xchg
or
jecxz
fisttpll
jmp
xor
mov
sub
dec
out
add
mov
aam
iret
push
mov
sub
std
xchg
mov
lods
cli
daa
and
jge
and
xor
out
mov
sbb
xchg
cmp
out
mov
push
adc
cmpb
popw
xchg
xor
jo
cmpb
mov
fsubrl
jnp
daa
fistl
push
mov
mov
xchg
jecxz
xchg
gs
adc
imul
cmp
adc
cmp
jnp
mov
out
lea
jns
xor
out
mov
xchg
lcall
and
es
pop
inc
dec
jl
clc
test
and
es
movsl
mov
push
and
imul
sub
push
jg
pop
mov
loop
and
loope
xchg
sahf
sub
pusha
mov
popa
sarb
xor
cltd
lahf
ficompl
add
mov
pop
mov
xor
out
xor
push
or
add
loopne
mov
shll
popf
andb
pusha
sub
jecxz
mov
cmpsl
cwtl
cmpsb
sbb
push
mov
inc
in
lret
js
mov
adcb
cmp
pop
in
cmpsl
punpckldq
cmp
sahf
fs
les
pushf
arpl
lcall
push
and
xchg
cmp
fiadds
cmp
add
mov
dec
mov
test
mov
mov
rcrl
jne
inc
cltd
fwait
bound
push
mov
jge
mov
adc
sub
push
dec
inc
and
push
aas
jp
stos
jge
int
cltd
mov
sbb
push
into
xchg
and
mov
lcall
insb
call
loope
out
fists
imul
bound
out
sbb
pop
inc
in
imul
sub
cmpsl
imul
xor
in
push
mov
mov
test
jae
pop
mov
inc
and
and
movsb
xor
out
lea
dec
jne
imul
xchg
xor
push
movsl
in
add
and
mov
arpl
loope
mov
movsl
xorl
add
add
test
pushf
inc
in
aad
out
imul
in
pushf
pop
in
sub
sbbl
sbbb
push
cmp
gs
addl
sub
jae
divl
in
and
fistl
les
xor
outsl
push
jnp
sbb
push
and
mov
loopne
push
fsubrs
mov
jno
add
sub
lahf
and
test
push
fidivrl
daa
add
rolb
sub
loope
mov
or
and
iret
stc
mov
or
xchg
loope
mov
cmp
out
jae
cmpsl
jg
ds
in
and
nop
loope
add
cmp
les
and
in
add
push
dec
cmp
xor
dec
and
inc
cmpl
icebp
pop
lret
mov
aad
cltd
adc
sbb
push
inc
pusha
ljmp
mov
mov
sbb
loopne
ja
cmp
or
xor
fs
lods
out
and
movsb
lcall
adc
arpl
ficoms
dec
test
sub
jns
sub
mov
add
mov
push
push
test
cld
pop
rclb
scas
mov
mov
or
xchg
inc
push
insb
bound
cmpsl
rol
int
aaa
loop
and
sub
fildll
push
rol
popa
mov
mov
pminub
lcall
add
lea
mov
test
pop
gs
mov
addr16
xor
rcrl
pushf
ds
sub
xchg
sbb
jge
ja
movsl
lret
jno
inc
mov
and
cmpsl
adc
and
icebp
dec
sbb
sub
xchg
push
daa
and
test
sub
sub
mov
test
sbb
loope
and
pop
jg
inc
mov
xchg
mov
in
je
mov
mov
lret
cmpsl
fdivl
xor
mov
push
inc
push
pop
push
daa
into
iret
fldt
and
test
dec
sub
push
sub
sbb
dec
clc
mov
out
xor
dec
push
add
in
mov
mov
xor
bound
dec
add
repnz
dec
in
pop
mov
inc
push
xor
mov
push
into
loope
push
lods
jno
dec
and
or
test
test
inc
hlt
js
hlt
fistpll
outsl
out
push
jno
iret
push
mov
inc
mov
xor
dec
mov
sbb
sub
andb
xor
mov
xchg
push
andb
fldl
test
jbe
pop
xor
fwait
lock
popa
scas
sub
shlb
ja
mov
xchg
mov
jecxz
fldt
cs
jb
pushf
fwait
push
sub
fbld
stos
and
orb
mov
js
bound
insb
cld
ret
inc
popf
push
sbbl
lret
test
dec
subb
ret
xor
adc
cwtl
rolb
xlat
andl
mov
mov
dec
movsb
loope
adc
movsb
mov
icebp
popa
xchg
dec
fnstsw
inc
cmc
mov
mov
mov
pop
bound
mov
decl
movsl
out
jmp
ss
push
test
in
scas
xchg
mov
movsb
test
add
mov
push
loopne
cmpsl
lods
data16
jb
data16
sub
loope
and
cmpsb
xchg
lea
movsb
jno
jns
xchg
stos
outsl
out
dec
add
lret
int
xor
mov
push
mov
or
or
mov
push
sub
xchg
push
jecxz
sub
call
xor
mov
dec
call
inc
mov
scas
loope
add
jg
pop
fs
dec
cmp
mov
jbe
popa
in
js
and
xor
leave
sub
mov
dec
xlat
rorb
in
jmp
and
fs
add
xchg
jmp
bound
gs
scas
arpl
sub
rorl
push
push
mov
mov
push
dec
icebp
pop
or
lods
clc
xor
xchg
mov
xor
jle
add
sbb
in
inc
and
dec
cmp
sub
mov
sub
xchg
push
sub
mov
je
pop
pop
push
shl
xchg
movsl
das
mov
nop
dec
xor
dec
arpl
jno
pop
jmp
inc
jae
pcmpeqb
nop
mov
sti
mov
shrl
cmp
and
mov
mov
out
aad
pop
sub
and
lds
sar
repz
cmp
lea
arpl
test
andl
out
and
mov
and
cltd
add
in
cmp
and
sbb
pushf
adc
bound
inc
mov
xor
lods
and
add
sbb
push
sub
lcall
mov
and
xchg
inc
and
push
aaa
push
out
jp
es
xchg
fcoml
inc
dec
rolb
pop
xor
icebp
dec
pushf
and
rolb
mov
js
and
out
test
mov
hlt
cwtl
scas
icebp
movsb
mov
sarl
jg
cs
cmp
ja
mov
jecxz
mov
fstpt
push
das
push
mov
push
shl
and
loop
or
rcll
mov
call
mov
jbe
xor
push
inc
aaa
icebp
rcll
stc
pop
std
mov
out
mov
cmp
dec
stc
ljmp
sbb
notl
mov
push
push
jg
pushf
lea
mov
icebp
pop
repnz
iret
push
jl
jge
imul
sub
test
mov
dec
mov
pop
mov
add
insb
daa
in
sub
mov
and
icebp
lret
outsl
lea
jne
shld
test
xor
movzbw
bswap
mov
inc
clc
add
shr
setb
push
and
mov
call
call
popa
test
es
cmp
fxch
sub
fnstenv
xchg
pop
add
jne
test
mov
pusha
bound
les
or
call
lahf
cltd
mov
mov
arpl
test
sbbb
jb
fdivp
jo
sbb
cmp
pop
add
push
subb
dec
mov
mov
scas
rcrb
push
and
add
int
movsl
cltd
fidivs
imul
sub
xor
cmp
dec
xchg
push
pushf
movb
movl
push
push
lea
jmp
fimuls
or
or
movq
nop
rcll
xchg
push
imul
out
out
mov
dec
ljmp
sub
sbb
js
and
rcll
mov
pop
daa
mov
mov
and
mov
xchg
mov
push
aam
pop
adc
push
add
mov
jbe
repnz
stc
repnz
cmp
xlat
test
popa
popa
adc
in
push
lcall
addr16
andl
xor
stc
pushf
cmp
mov
lea
ja
pushf
pushl
clc
imul
stc
cmc
cmc
add
push
lea
jmp
pop
sub
movsl
push
stos
lods
in
out
fimuls
xor
adcb
fcmovnbe
adc
icebp
lock
stos
int
out
lahf
hlt
es
jns
clc
dec
mov
sbb
add
push
clc
ss
pop
adc
mov
mov
push
sarl
pop
mov
jmp
push
movsb
push
iret
jae
not
bound
repz
xchg
add
xor
fldcw
test
fwait
sahf
aad
pop
mov
bt
stc
cmpb
pusha
lea
jne
shr
shrd
mov
stc
add
bt
movzwl
clc
btc
sbb
btc
mov
pusha
call
mov
mov
movsl
push
pop
stc
jmp
out
lcall
ret
jo
lcall
dec
sub
fcmovu
fwait
mov
jb
sub
ljmp
lahf
loop
jl
mov
mov
rolb
pop
xchg
movsb
adc
sub
push
imul
je
test
and
dec
jle
pop
test
and
in
push
add
mov
ffreep
or
add
sbb
mov
push
pusha
mov
pushf
mov
jmp
nop
cmp
mov
cmovo
add
mov
sub
cmovno
push
inc
movsl
pop
xchg
or
out
lahf
cltd
sbb
xor
push
sti
pop
shll
lret
mov
jmp
icebp
and
sub
pop
pop
sbb
into
dec
cld
add
daa
push
cmp
xchg
rol
cmp
xchg
loopne
fildll
xor
push
rcrb
out
cld
jecxz
arpl
add
lret
sbb
xchg
inc
sub
es
push
lret
das
fs
sbb
shl
fsubrl
cmc
out
stos
fbstp
push
fidivrs
aas
push
mov
xor
xchg
and
bound
sub
inc
fcmove
mov
adc
and
test
aas
in
and
mov
jmp
leave
mov
or
repz
push
mov
in
iret
mov
add
jl
ret
ljmp
dec
movsb
cmpsb
fsubs
mov
ret
push
repz
test
ret
enter
push
in
mov
sbb
movsl
push
fsubrl
cs
mov
mov
fstpt
sub
mov
aad
mov
lea
nop
mov
jp
xchg
cwtl
fnstenv
xor
pushf
mov
movsl
push
cld
das
xchg
cmc
or
push
and
bsr
push
bsr
das
neg
mov
call
lea
jne
bt
mov
clc
test
push
stc
cmp
lea
jle
push
push
pusha
lea
ja
xchg
pushf
jmp
inc
out
lcall
push
repz
repz
add
jno
nop
lods
insl
sub
sbb
test
cmpsl
and
jg
xor
sbb
inc
ss
mov
xchg
in
data16
cmpsb
loop
jmp
les
je
add
mov
enter
les
mov
mov
std
outsl
and
cmp
jecxz
pop
es
in
lods
pop
xchg
sbb
xchg
in
mov
sub
push
xchg
stc
push
and
out
bswap
in
or
mov
cmp
test
push
lea
je
cmp
stc
add
jmp
mov
pusha
lea
jl
jne
pushf
pusha
lea
jmp
dec
clc
xchg
je
push
jns
sbb
stos
sbb
sub
jnp
jmp
shl
mov
cmpsb
sbb
xlat
sbb
push
jns
push
rorb
pop
mov
sti
mov
xchg
test
das
sar
mov
sub
leave
mov
insl
ja
mov
pushf
sbb
fisubrs
es
mov
jmp
lcall
jae
clc
mov
shl
ror
mov
ror
mov
cmp
call
push
push
pusha
movw
pushl
ret
dec
pushf
pushf
call
pushf
pusha
call
movl
jmp
push
inc
dec
jae
push
mov
fs
and
sahf
dec
jle
imul
popa
icebp
adc
push
and
xor
icebp
repnz
push
addl
adc
xor
out
das
scas
sarb
xchg
test
pop
dec
inc
imul
shll
in
dec
cmp
xchg
push
adc
addr16
jle
pop
stc
mov
stos
jl
jge
lds
xchg
daa
insb
inc
jne
stos
mov
xor
repnz
pushf
push
bt
test
jmp
mov
add
xor
add
adc
movsbw
mov
cmp
jmp
call
pop
or
jae
push
jg
and
xor
push
dec
repnz
sub
rorl
xor
xlat
or
add
xchg
es
js
sbb
and
int
data16
ja
hlt
frstor
sbb
jae
push
push
movb
pushl
ret
call
sub
pusha
cmc
jmp
push
add
pusha
add
pushl
call
movl
push
call
pushf
pushf
pushf
xor
add
stc
test
or
push
mov
call
jmp
cmp
pushf
mov
movzwl
neg
mov
call
bt
pushf
bt
cmc
cmp
pusha
movb
pushf
movb
lea
jae
bt
pusha
add
call
push
lea
ja
jmp
btc
test
pushf
mov
jmp
jbe
data16
push
movsb
xor
add
jne
xchg
xlat
in
mov
out
push
rclb
daa
je
adc
lahf
inc
mov
jle
pushf
inc
test
outsb
xchg
arpl
fsts
pxor
jo
adc
outsb
int3
push
out
inc
jb
notl
push
xor
and
call
or
dec
cli
icebp
pop
insb
test
fdivrs
sub
add
pop
mov
or
or
fstps
shll
sbb
scas
pushl
lea
jmp
lea
je
cmc
jmp
lea
call
jmp
lea
call
push
lea
jae
push
xor
push
mov
pusha
pushf
lea
call
jmp
movl
pushl
lea
jmp
pushf
mov
jmp
fdivr
mov
push
jb
xorb
repz
in
inc
xchg
mov
cli
adc
loope
xlat
sbb
mov
loope
push
and
mov
cmp
jno
and
inc
adc
mov
popa
jne
or
int
and
mov
cmc
mov
outsb
sbb
scas
mov
mov
jb
pushf
shll
xchg
fs
inc
and
or
xor
jmp
xchg
mov
outsl
movsl
push
aaa
cmp
mov
fstpt
int3
mov
lcall
pop
test
pop
cmc
mov
adc
dec
imul
mov
push
sarl
inc
dec
cmpsb
imul
inc
mov
mov
sbb
push
js
dec
mulb
push
clc
or
mov
sub
out
mov
mov
pop
pop
push
inc
out
push
xchg
mov
bound
hlt
in
lret
pop
in
push
lock
lcall
mov
addr16
mov
lcall
cmpsl
mov
clc
in
lea
movsbw
movsbw
jmp
sub
jo
push
bound
inc
je
hlt
xor
in
movsl
imul
popf
mov
jmp
fdivr
cmc
ds
mov
jmp
das
and
mov
xchg
and
jno
push
dec
icebp
cmp
daa
ss
pusha
or
push
jecxz
int
xor
mov
push
aad
imul
cmp
fildll
daa
lret
aas
ret
xchg
insb
mov
push
mov
cwtl
inc
inc
outsl
movsl
push
movb
das
pop
inc
cmp
xchg
jg
popa
inc
arpl
es
pop
out
mov
jns
fidivrl
or
fs
out
addr16
jecxz
mov
mov
sub
ljmp
add
fmul
imul
and
outsb
push
jmp
in
fdivl
mov
in
std
out
push
lea
jbe
jae
cmc
stc
stc
clc
sub
pusha
call
push
sub
call
sub
outsb
movsl
push
mov
mov
sub
movsl
push
mov
repz
enter
enter
lcall
jmp
cs
in
or
stos
dec
and
sub
addr16
div
or
inc
arpl
imul
dec
mov
push
jle
int
xchg
adc
ds
mov
out
das
pop
push
scas
mov
add
pop
jge
mov
and
mov
testb
push
cmpsb
leave
and
repz
jae
movsl
push
xchg
daa
out
sub
iret
gs
daa
stc
pop
jle
js
mov
mov
jg
pusha
lock
popa
mov
xchg
xchg
inc
mov
pushf
mov
std
jmp
xor
pop
pop
dec
shll
stc
dec
pop
sahf
push
lea
testl
lods
add
lcall
mov
xchg
test
cmp
decl
scas
inc
out
mov
out
jecxz
adc
jnp
inc
mov
push
add
jmp
fimuls
or
jmp
lea
jae
ror
pusha
bsf
mov
seta
btr
mov
sub
and
pushf
mov
cmp
pushf
push
sub
test
repnz
jmp
mov
push
lea
call
call
lea
jne
cmc
dec
mov
call
fldl
mov
push
pop
out
enter
or
pop
jp
sub
lret
mov
fbstp
sbb
fwait
adc
lahf
out
adc
pop
into
test
es
mov
push
movsl
xchg
or
cmp
bound
lret
push
sbb
in
inc
or
xor
cmp
jo
mov
sti
and
sbb
push
lcall
and
out
inc
addl
imul
and
add
jbe
mov
mov
sbb
leave
test
xor
mov
jl
icebp
lahf
sub
jle,pn
sbb
pop
or
add
in
xor
pop
adc
daa
xor
and
adc
add
lret
std
stos
sub
je
mov
push
adc
xchg
adcb
sti
cmp
data16
addr16
push
jne
out
loop
lret
push
mov
jo
jns
rolb
sbb
xchg
setne
mov
pushf
setnp
pushf
inc
inc
not
mov
call
mov
fistpll
adcb
adc
push
xchg
inc
xchg
inc
aaa
movsl
jo
cwtl
sbb
iret
and
orl
imul
loopne
test
popf
dec
nop
cmp
dec
sbb
xchg
sub
or
jge
rorb
cmp
pop
fstl
and
jae
pop
lret
pusha
pop
mov
mov
jmp
nop
or
cltd
fimull
xor
inc
dec
out
pop
stos
jmp
inc
push
inc
movsb
push
daa
pop
cmp
stos
data16
pop
idivl
or
or
mov
jle
in
jle
mov
loopne
xchg
iret
mov
fs
cmp
in
lcall
push
shl
cmp
clc
fstp
pushf
movb
imull
and
andb
add
lods
push
xchg
add
sbb
sub
add
dec
mov
jnp
inc
in
dec
fwait
mov
jno
lahf
sbb
adc
sub
mov
adc
inc
cmp
mov
xchg
call
imul
dec
xchg
adc
mov
and
xor
and
push
mov
fdivr
mov
add
or
dec
cmp
int
pop
mov
jns
mov
cld
shll
mov
sahf
or
inc
jp
mov
sub
and
cmpsl
daa
xchg
sti
jnp
sbbl
sub
or
cmp
ret
out
ds
lcall
sbb
xchg
mov
and
int3
sbb
rol
ror
lea
jl
seto
dec
stc
ror
jmp
test
xor
clc
test
bt
repnz
pushl
push
lea
jne
sar
shld
mov
bsr
cmc
sub
shl
movzbw
rcr
mov
pusha
pushf
sub
clc
pushl
popl
pushf
cmp
pushf
pushf
lea
ja
jmp
pushl
movl
mov
push
jmp
call
js
out
imul
movsb
xor
test
movsl
ficompl
ljmp
lret
loope
lcall
dec
fstps
cmc
jge
pop
sub
aaa
in
pop
loopne
jge
test
cmc
lret
inc
xlat
imul
xchg
mov
out
sti
stos
aas
in
xor
cmp
lcall
xchg
sti
inc
inc
cltd
mov
jp
jo
or
jmp
inc
push
jmp
jb
insl
nop
movsb
ja
daa
lea
cmp
xchg
push
xchg
xchg
xchg
fdivrs
pop
lcall
int3
push
and
dec
je
test
mov
pushf
or
sub
clc
bound
cmp
sahf
mov
push
jecxz
sbbb
rcrl
pop
fwait
mov
out
pop
cs
jae
sub
movsl
enter
dec
mov
insl
nop
cmp
mov
xchg
cltd
sub
int
xchg
ret
dec
mov
imul
in
mov
std
and
enter
imul
scas
jle
dec
nop
xchg
jno
pop
sbbb
cwtl
fiadds
cmp
mov
mov
lea
mov
adc
cmp
dec
mov
push
test
orl
pop
mov
inc
fwait
xchg
mov
ret
sub
pusha
xchg
loop
mov
enter
scas
jecxz
loop
aad
cwtl
mov
rorl
pop
pop
cmp
add
jo
or
test
or
jmp
call
out
push
clc
cwtl
dec
imul
or
aad
xor
ljmp
mov
push
cmp
aaa
sub
rorb
push
addr16
lods
mov
cwtl
sub
or
inc
pop
pop
cmp
lods
dec
lret
cmpsl
xchg
mov
push
jne
cmp
insl
sbb
lods
sbb
jmp
or
pop
addr16
mov
jno
daa
fcomps
jmp
inc
push
ja
jo
scas
cmp
leave
push
mov
sbbl
push
xor
icebp
movsl
lret
negl
jo
adc
dec
cs
aaa
popl
test
pusha
mov
cmp
jmp
ds
movsl
push
insb
or
jge
lea
movsb
adc
cmp
mov
sub
mov
lds
xchg
aaa
cmpsl
in
adc
dec
div
das
lea
push
sbb
mov
jae
mov
fistpll
jge
lock
jl
ffree
and
inc
hlt
frstor
insb
movsl
push
nop
inc
lock
ret
cmp
adc
lea
push
dec
cmp
adcl
xchg
jb
les
cmp
movsb
arpl
rolb
mov
cmpsl
lret
or
mov
call
out
dec
push
xchg
inc
out
adc
pop
test
arpl
mov
push
sbb
movsb
adc
out
mov
mov
lcall
outsb
xchg
xchg
push
out
jnp
mov
lods
xor
sbb
imul
and
in
xor
dec
jb
movsw
push
repz
cmc
aad
and
out
daa
mov
xchg
sub
pop
sub
out
fwait
cmp
push
jne
push
es
pop
fimuls
or
imul
dec
cmc
loope
push
out
cmpl
sub
adc
sub
push
fwait
es
or
xor
pushf
shl
out
bound
call
inc
in
fsubl
jne
pushf
lea
jne
bsf
call
jmp
or
pop
movsw
push
andb
add
and
xor
dec
inc
lods
and
movl
fcompl
jnp
mov
popf
loopne
scas
sbb
mov
jbe
rolb
jb
xchg
sbb
mov
lds
aam
push
mov
and
movsb
dec
push
ret
jge
dec
stos
push
jle
stos
inc
lahf
out
cwtl
js
inc
les
scas
add
lret
adc
fs
lret
aas
ret
mov
movsl
push
mov
fdivrl
std
mov
cmp
xchg
mov
lea
iret
cmpsl
pop
cltd
mov
adc
jnp
addr16
aaa
mov
int3
cmc
notb
popf
gs
pop
les
dec
sarl
lods
push
dec
mov
movsl
push
xchg
fldt
dec
mov
test
loopne
sub
pop
lock
ljmp
loope
out
pandn
xchg
mov
inc
and
out
pushl
ret
xchg
das
stos
sub
and
inc
xor
out
andl
and
push
lret
scas
sub
lods
xor
cmp
xchg
sub
mov
hlt
sub
mov
cmp
xchg
test
sbbl
and
out
cmp
xor
mov
xchg
fiadds
inc
push
cmp
insl
daa
rclb
movsb
pushf
mov
out
and
xorl
out
xlat
or
lretw
and
test
xor
mov
mov
es
push
dec
push
jb
in
and
test
mull
lahf
mov
inc
jne
cmp
out
rorl
jbe
and
jp
jg
cmp
pushf
inc
arpl
lahf
sbb
dec
out
lock
push
movsl
inc
test
shr
dec
push
mov
nop
lret
inc
es
push
mov
test
repz
popf
jg
pop
xor
mov
xchg
and
pop
loop
mov
stos
jle
in
xor
cmc
xchg
loopne
adc
out
adcl
mov
movsb
outsl
popf
add
dec
push
and
mov
cs
cltd
pop
sub
xor
addps
ljmp
aam
cmpsb
popf
push
insl
dec
in
insl
adc
lret
and
sbb
mov
mov
pop
lds
jmp
ret
jo
push
enter
mov
mov
pop
xor
in
cli
and
mov
sub
xor
out
xor
push
daa
lret
aaa
call
pop
es
sbb
dec
bound
push
mov
dec
andb
mov
xchg
rclb
aaa
inc
cmp
push
das
lea
sub
adc
dec
and
daa
xchg
aaa
repnz
inc
std
test
xlat
push
adc
scas
sub
sub
add
mov
gs
cmp
in
clc
sub
inc
leave
shll
ja
in
xchg
leave
cmp
sbb
push
mov
loop
aas
xchg
test
sbb
in
sbb
movsb
movsl
inc
or
lahf
lds
inc
mov
xchg
and
test
stos
mov
adc
outsl
xor
inc
test
or
and
push
loope
pop
jne
cli
sbbl
sub
insl
and
xor
sbb
sbb
sub
rcrl
fs
inc
sub
je
es
xchg
mov
and
push
adc
adcl
mov
pushf
add
push
cmp
push
or
cmp
cmp
lds
lds
insl
and
push
ret
movsb
xchg
or
xor
adc
bound
cltd
insb
pusha
lret
aad
xor
sub
inc
xchg
and
bound
cmp
push
or
adc
and
negb
mov
mov
cmpsl
mov
lea
and
cmp
mov
add
daa
addl
fwait
adc
push
push
push
mov
data16
lret
dec
imul
jno
push
divl
and
incl
and
jle
mov
xchg
jns
jne
mov
popa
push
add
dec
push
pop
rclb
or
jae
xchg
xchg
sub
sbb
lahf
mov
inc
notl
adc
loop
jg
popa
in
adc
icebp
movsb
xor
icebp
mov
sbb
gs
dec
xor
xchg
cmp
or
sub
ret
lods
stc
mov
sub
inc
insl
and
pop
jp
xor
arpl
mov
and
mov
or
push
push
addl
in
int
adc
dec
data16
movsl
and
push
in
lret
lds
push
xchg
roll
jl
lahf
push
stos
lods
push
popf
xor
cld
test
movsl
test
mov
jne
adc
xchg
mov
fs
xchg
outsb
pop
jg
xor
incl
fbstp
ss
aam
and
gs
ud0
cld
mov
andl
fistpl
jmp
push
xchg
or
cmpsb
mov
aaa
push
push
xchg
push
cld
cmp
xor
and
push
arpl
inc
or
push
scas
xchg
sub
add
xor
push
repz
add
cwtl
pop
popa
mov
test
or
loopne
inc
pop
xor
pushf
stos
push
or
jl
and
mov
loopne
fimuls
test
das
push
mov
inc
sub
push
mov
adc
fisttps
and
xchg
add
xchg
mov
cmc
nop
ja
daa
lret
out
into
icebp
sub
sti
nop
insb
inc
dec
inc
rclb
or
adc
push
jmp
jns
je
lods
sub
mov
or
pushf
pop
mov
shr
inc
add
cmpsb
or
cmp
mov
sbb
xor
and
and
mov
jbe
mov
jmp
sarl
and
mov
insw
add
loop
push
stc
in
cmp
push
dec
ret
arpl
int3
ret
aas
or
and
cmpb
pop
jmp
ljmp
fstpt
push
mov
push
lds
repz
mov
xchg
test
ret
add
loopne
sbb
aad
inc
cli
and
mov
jo
add
jb
pop
xchg
sahf
lret
cmp
add
adc
nop
or
and
in
sub
dec
cmc
popa
test
sbb
popa
jne
push
lea
pusha
cmp
imul
rcrb
ja,pt
mov
es
aas
adc
push
push
sbb
andl
inc
xchg
xor
jno
movsl
fists
iret
xor
or
shll
stc
cmpsb
xor
aas
arpl
gs
sahf
mov
insl
add
add
and
cmpsb
sbb
daa
imul
les
ret
xchg
cli
mov
mov
push
ss
mov
cmp
xchg
sbb
push
xchg
mov
xor
ds
lods
in
das
inc
xor
xor
gs
xor
mov
fisttps
mov
add
lahf
xchg
loopne
or
andb
lock
les
insl
jle
adc
pop
or
loop
out
and
mov
push
mov
cmp
jp
jb
mov
shr
popf
pop
pop
push
popf
xchg
pop
add
scas
stos
sub
push
jns
and
imul
mov
inc
fisubrs
xchg
sub
sbb
je
adc
lea
add
in
pop
movsl
push
sbb
ud0
mov
adc
shll
sub
xchg
xchg
cli
insb
mov
hlt
jnp
aad
or
cmc
popl
cs
int3
sbb
sahf
mov
mov
push
mov
repz
cli
or
std
and
shlb
sahf
push
pop
or
pop
shrb
sahf
arpl
rolb
out
mov
and
addr16
aam
mov
add
xchg
push
inc
ljmp
leave
lods
mov
aad
ret
add
in
loop
je
add
fs
je
pusha
mov
call
lea
jne
pushf
stos
pushf
mov
lea
jmp
jmp
mov
clc
mov
clc
mov
repnz
pusha
lea
jne
jmp
lea
call
call
in
negl
push
adc
jae
movsb
mov
jbe
aaa
pop
addr16
daa
dec
push
mov
mov
pop
lods
sbb
cltd
mov
pop
cmp
cmp
dec
leave
jbe
adc
mov
fiadds
ds
xor
fld
test
iret
jl
cld
jg
les
ljmp
divb
push
sar
cmp
cmp
loopne
mov
inc
int
jbe
popa
loope
sbb
jmp
xchg
mov
inc
ret
iret
sbb
xchg
test
push
add
daa
xor
rcrb
aam
push
add
pop
xor
dec
adc
std
clc
and
mov
sbb
jae
adcl
pop
shll
jb
subl
loop
inc
push
mov
mov
jmp
loopne
jbe
subb
adc
sbb
pop
mov
or
or
sahf
dec
mov
xchg
js
ljmp
pushf
mov
aas
shrb
or
mov
das
push
insb
push
or
push
aad
sub
dec
fisubrl
push
inc
sti
aad
iret
mov
add
inc
data16
push
lcall
xor
sbb
ret
cmp
xor
dec
stc
pop
shr
push
pop
xchg
lods
push
in
int
idivb
outsl
mov
test
lea
movb
push
pushf
mov
pushf
xchg
pop
mov
call
add
add
out
fwait
out
pop
movsl
push
push
mov
jle
push
shlb
imull
xorl
pop
mov
out
addr16
sbb
push
mov
es
insb
outsb
dec
imul
roll
dec
out
aad
adc
jno
push
lret
inc
and
std
pop
mov
add
cltd
fwait
sbb
ja
div
xchg
mov
push
les
movsl
out
sahf
mov
jle
inc
push
mov
in
icebp
mov
rol
stos
jo
or
in
pusha
movsl
lret
push
sub
xor
cs
adc
or
sahf
sahf
movb
lea
jmp
sbb
push
dec
lret
jnp
mov
or
pop
xchg
pop
push
mov
test
enter
shll
outsb
insb
out
lock
sub
and
stos
sub
lods
xchg
adc
ljmp
jb
rcrl
psrld
out
cmp
negb
rolb
jmp
jp
in
insl
dec
mov
mov
aas
xchg
push
pop
shl
insl
add
mov
imul
adc
movsl
push
stos
in
pop
in
mov
cmp
mov
and
pop
dec
dec
lret
stos
in
mov
nop
je
push
popa
cmp
mov
pusha
stos
or
shll
int
popf
dec
out
mov
hlt
jo
sti
cwtl
movb
outsl
dec
jmp
jmp
lods
in
xchg
xchg
xchg
pop
xchg
out
jle
add
ficomps
mov
add
ret
cltd
xorb
ret
into
mov
in
mov
adc
loopne
jp
in
fldl
filds
jg
fsubrl
xor
movsb
push
add
popa
ss
out
andl
iret
mov
sub
bound
cli
pop
shl
pop
dec
add
fwait
shl
lea
call
jmp
ljmp
push
xor
movsb
in
xchg
cmpsb
xlat
cmpsl
or
inc
xchg
incb
pop
popa
je
int3
std
and
sub
cmpsl
mov
divl
xchg
bsf
cmp
lods
inc
fwait
xchg
cmp
jne
insb
cmp
push
fs
push
and
into
daa
and
insl
cmp
dec
mov
loop
fs
popf
dec
mov
push
and
bnd
aam
clc
pop
lock
in
push
push
leave
incb
dec
add
adc
mov
ror
movsl
push
xor
fs
aam
push
call
fiadds
jbe
sti
jl
popf
dec
push
aaa
enter
int3
test
cmp
push
cli
xlat
jbe
enter
ja
xor
popa
imul
and
and
outsb
push
mov
jb
sahf
jne
mov
pop
cmp
inc
xor
in
je
cmp
fnstsw
pop
dec
cld
in
insb
in
loopne
arpl
daa
fdivs
jns
loopne
mov
or
fcmovne
int3
xor
sub
mov
sbb
xchg
mov
lock
popa
pop
movsl
arpl
jns
push
out
in
add
push
or
cmp
sub
xchg
dec
inc
stc
jb
or
scas
sbb
sbb
push
inc
jl
jecxz
insb
bts
aad
xchg
add
sti
out
loope
push
cmp
loopne
mov
int3
sub
xchg
nop
sbb
aad
lods
mov
lret
mov
fwait
pop
pop
adc
cld
inc
mov
bound
push
xor
test
fiadds
stc
out
push
cli
movsl
mov
in
test
xor
push
das
mov
cmp
shlb
inc
bound
rcr
xchg
sarl
in
pop
test
fistl
dec
out
mov
nop
mov
cmp
aas
mov
movsl
push
loope
daa
pop
push
rcrb
push
fs
pushf
out
jnp
mov
sub
iret
sub
pop
arpl
enter
dec
adc
mov
movzbw
not
mov
movsbw
mov
lea
call
jecxz
stc
push
movsl
push
adc
xchg
fs
and
jne
cmpsl
push
call
sahf
cmp
pusha
jno
jne
adc
mov
and
stc
dec
dec
or
pop
pop
adc
shl
mov
in
inc
adcb
test
fwait
pop
idiv
jns
mov
add
mov
mov
cli
dec
sub
sub
cltd
sub
mov
xchg
sub
cmc
push
cmpsb
dec
outsl
jecxz
or
js
jno
sub
pusha
pop
call
lahf
dec
cmp
jge
jle
sahf
push
dec
aas
filds
and
push
ja
pop
mov
int3
std
lods
sbb
pop
jmp
das
in
mov
adc
mov
xchg
xor
push
jp
fsubr
xchg
arpl
add
movsb
mov
sub
and
cmp
push
movsl
push
inc
push
jbe
pop
pop
or
add
repnz
pop
dec
pop
pop
lock
dec
shll
inc
cmc
aad
inc
push
push
cmpsb
push
mov
xor
fistps
popl
cmp
adc
inc
and
dec
pop
pop
lods
std
stos
jno
lods
repz
ret
xor
fnstsw
push
cmp
push
push
in
add
jbe
icebp
jno
sub
pop
xor
push
enter
outsb
out
lret
mov
insb
cmp
fadds
ja
sbb
dec
fdivrp
and
adc
jno
pop
in
mov
in
mov
mov
xchg
je
gs
mov
xchg
outsl
aas
cwtl
icebp
or
or
ret
sub
pop
sub
jb
push
cmp
mov
mov
cltd
stos
les
sbb
pop
lods
push
les
insl
mov
stc
mov
call
lea
ja
clc
clc
cmc
imul
cmc
add
pusha
pushf
pushl
pushf
lea
jmp
pusha
clc
cmp
pusha
lea
jns
pushf
lea
ja
cmc
clc
cmc
imul
stc
add
pushf
mov
pushf
lea
jmp
xor
jmp
call
test
cmc
or
pushf
push
call
pusha
lea
call
cwtl
push
mov
call
aas
in
popf
push
movsl
push
insl
or
scas
arpl
mov
jno
mov
mov
cltd
xchg
mov
mov
add
inc
repz
fdivl
ss
or
add
add
xor
mov
cmp
test
or
repnz
and
stc
int
lods
sbb
cli
pop
and
std
repz
in
lods
jg
cmp
cmp
lds
pop
add
inc
pop
jmp
stos
xchg
cmp
fstpt
sti
push
push
adc
les
push
inc
popa
iret
dec
xchg
mov
pop
ja
jecxz
test
enter
sub
andb
mov
xchg
test
insb
jno
leave
mov
jnp
and
xchg
mov
stos
mov
xorb
and
lea
ja
push
clc
imul
clc
cmp
cmp
add
mov
pushf
pushl
lea
jmp
in
push
movsl
push
nop
mov
jb
test
jl
std
stos
xor
push
and
mov
mov
mov
add
xchg
out
cwtl
mov
es
dec
lods
lret
xor
mov
int
pop
push
push
test
add
dec
mov
dec
negl
fnstenv
and
loope
mov
xchg
adc
rep
test
jecxz
adc
add
jecxz
pandn
dec
loop
lret
das
xor
int3
icebp
sahf
mov
cmp
cli
mov
ljmp
cmp
sbb
pop
insb
sub
dec
into
jle
adc
dec
xor
push
scas
insl
pop
pushf
xchg
ds
pop
or
cli
repnz
mov
test
imul
cld
pop
lds
mov
fmuls
cmp
pushf
mov
xor
mov
mov
sbb
lcall
ljmp
xchg
out
notl
loopne
arpl
jnp
mov
movl
jmp
pusha
push
jmp
dec
aam
and
lds
dec
adc
movsl
sub
insl
and
dec
sbb
and
jne
cwtl
push
movb
cwtl
bswap
jmp
ljmp
ds
outsb
outsl
xorb
add
xchg
inc
movswl
rolb
dec
cmpsb
leave
pop
stos
std
sti
je
pop
stos
jnp
mov
xlat
adc
nop
mov
lret
cmpsb
jbe
adc
lea
sbb
fs
rdmsr
pusha
icebp
fistpll
cli
or
fimuls
mov
in
cwtl
dec
xor
jnp
mov
xchg
std
and
cltd
mov
pop
add
jmp
outsl
dec
stos
xchg
push
add
cmp
adc
lock
jae
add
insl
sbb
cmp
cmc
popf
scas
mov
loop
or
js
and
lea
inc
aad
cmp
das
and
mov
mov
and
rorb
pop
jge
mov
adc
cmp
push
call
adc
mov
sti
fsub
in
jae
xor
popa
adc
jmp
add
es
mov
mov
loop
lret
outsl
jecxz
insb
shl
mov
adc
clc
or
std
shll
pushf
lea
je
pushf
stc
bt
add
movl
pushf
cmc
cmp
pushf
lea
jb
cmp
push
bt
stc
cmp
movw
lea
jae
xchg
mov
bt
rcl
mov
shrd
mov
inc
xor
mov
clc
pushf
stc
sub
cmp
stc
clc
pushf
repnz
call
ret
push
movsl
push
ret
in
movsb
push
les
xchg
out
fcmovnbe
add
in
jmp
or
xchg
inc
and
mov
fmuls
mull
inc
jae
fmuls
jecxz
and
push
mov
andb
pop
jecxz
fistpl
out
in
int
ja
dec
inc
jb
outsb
jne
add
fldcw
dec
fsubr
dec
andl
test
sub
mov
sbb
mov
test
pop
sti
out
xor
addb
lds
add
xchg
sub
xchg
lahf
adc
xor
adc
pushf
cmp
sub
cmp
and
shld
sub
add
call
pusha
movb
cmp
mov
lea
jb
push
cmp
movb
jmp
mov
push
movl
call
call
pusha
dec
rol
cmc
lea
jae
clc
ror
push
not
pusha
pusha
stos
mov
mov
not
mov
movb
call
pusha
lea
jle
lods
call
mov
lea
ja
pusha
lea
jb
pusha
pushf
call
daa
aam
dec
movsl
push
jmp
dec
sbb
movsb
and
dec
jb
pop
int
or
test
cs
js
aam
xor
daa
push
mov
imul
lock
cmpsl
pop
cwtl
icebp
sbb
dec
fidivrs
jns
mov
das
test
nop
popa
adc
loop
push
sbb
push
popa
test
add
mov
jp
std
into
sahf
dec
jmp
in
fadd
sbb
movsl
adc
or
test
fdiv
inc
repnz
mov
mov
pop
bt
ror
call
lea
movw
movl
pushf
mov
push
movb
pushl
ret
call
dec
stc
shl
mov
lods
pushf
push
pushf
dec
jmp
push
sub
movsl
push
pushf
in
or
mov
repnz
popa
test
mov
repnz
inc
imul
jne
cmc
inc
lds
popf
rclb
lahf
loop
int
aam
es
sbb
fistpll
xchg
pop
js
into
mov
inc
add
dec
push
mov
clc
call
rcll
fcmovne
cltd
jmp
outsb
scas
and
int3
icebp
push
dec
sub
mov
push
cmp
shlb
dec
ret
mov
test
mov
pop
sub
pop
imul
sbb
jb
push
out
sbb
cmp
out
pop
mov
jns
stos
mov
sub
and
seta
mov
lea
pushf
lea
jns
call
jmp
push
add
lds
jbe
xchg
xchg
aaa
dec
test
test
popf
xchg
std
cmp
mov
pop
stc
jmp
repnz
add
into
test
insl
sbb
icebp
jb
arpl
mov
mov
cmp
mov
fldenv
rol
jbe
mov
gs
int
jb
mov
lods
fnstsw
mov
pop
sahf
adc
mov
push
add
out
adc
jle
call
shl
add
fs
call
aad
inc
aaa
rcll
and
xchg
shrl
lahf
loopne
loopne
mov
push
ljmp
mov
andl
jb
xlat
xchg
mov
ret
xor
shll
test
and
adc
icebp
lds
mov
aam
jo
in
frstor
dec
fdivp
push
stos
pop
test
sbb
mov
shll
cmp
mov
pop
dec
sbb
lods
push
mov
lods
lods
pop
mov
out
cmpsl
mov
mov
jmp
mov
seto
jnp
and
icebp
xchg
movsl
jnp
or
and
sahf
dec
mov
mov
mov
add
mov
add
pop
clc
enter
mov
pushf
pushl
pushl
pushl
ret
adc
movsl
push
xchg
arpl
push
cltd
fisubrs
int
sahf
iret
adc
loop
mov
test
xchg
xchg
ja
or
cwtl
movsl
mov
imul
or
sub
cli
adc
mov
and
xchg
cmpsb
jl
icebp
idivb
jmp
inc
inc
pop
or
nop
andb
mov
outsb
test
sub
arpl
lret
into
loopne
dec
cmp
cmp
pop
and
fiaddl
lahf
pop
inc
popa
aaa
cmc
mov
and
fcoml
jne
ffree
out
and
jle
xor
imul
out
notl
out
fnstsw
adc
outsl
minps
jne
jmp
push
je
dec
movsl
push
enter
lcall
pop
cld
in
andb
sbb
xchg
repnz
fwait
and
sbb
mov
cld
cmp
cmpsl
clc
sbb
leave
ds
arpl
pop
add
lcall
repnz
push
xorl
iret
lds
xchg
fnsave
iret
loopne
insb
or
and
lret
xchg
sbb
lret
mov
adc
fstpl
and
dec
xchg
mov
and
movb
jmp
pushf
pushl
popl
movb
pushf
pushl
pusha
pushl
ret
lea
lea
mov
pushf
push
call
repz
jae
movsl
push
sub
maxps
pop
dec
das
mov
dec
mov
ja
jg
dec
imul
outsb
call
test
lcall
dec
sbb
aas
scas
xor
stc
add
jns
idivb
inc
add
enter
xchg
ljmp
pop
fcomps
jmp
jg
addr16
xor
sub
or
push
push
sub
push
shr
cwtl
adc
call
cmpb
jmp
mov
jmp
mov
push
mov
jl
pushf
inc
in
xchg
mov
dec
loop,pt
mov
sub
lcall
das
mov
test
jge
and
fmuls
mov
in
mov
mov
leave
insl
pop
add
lret
call
fsubrs
mov
out
mov
sbb
mov
lea
call
jmp
pushf
add
pusha
or
call
pushf
lea
jne
jmp
insl
nop
stc
inc
movsl
push
adc
add
jnp
pusha
subl
inc
ja
jg
mov
cltd
dec
call
dec
pop
or
cmp
mov
ljmp
loope
dec
jle
pop
sub
add
add
mov
movl
mov
pushf
jmp
push
jp
dec
movsl
push
sti
imul
dec
iret
add
mov
mov
mov
scas
pop
inc
lret
mov
arpl
in
incl
fcmovbe
js
cltd
inc
mov
gs
repnz
adc
or
test
adc
and
pushf
mov
and
add
nop
xor
icebp
adc
sbb
xchg
mov
mov
imul
and
pushf
cmp
mov
jmp
cmp
cmp
pusha
pusha
pushf
movb
lea
jae
clc
push
call
movl
lea
jb
cmc
cmp
cmpb
call
pusha
pushf
dec
lea
jb
pushf
stc
push
ror
test
cmc
shr
movb
pushf
lea
je
call
in
addl
fcomip
and
xor
int
push
mov
push
mov
out
push
ficompl
mov
pop
test
sbb
dec
std
jmp
pop
mov
fwait
in
xchg
push
iret
and
dec
ret
int3
push
aam
push
rep
dec
jmp
push
mov
xchg
jge
and
ret
mov
pop
sbb
leave
arpl
je
inc
lds
rorb
pushf
xchg
mull
out
leave
sub
push
negb
pusha
hlt
enter
pop
push
pop
xchg
inc
mov
or
dec
cmp
add
mov
sub
mov
and
cmp
inc
adc
aam
adc
xchg
xor
pop
xchg
std
sbb
popf
jge
in
push
xchg
rolb
aaa
test
sub
icebp
movb
lea
push
call
pop
pop
sub
jns
pushf
pop
push
cmp
jg
push
pop
and
mov
push
and
sbb
addr16
andb
fcomps
in
cmp
sub
cmpsl
mov
addr16
sbb
fwait
xchg
inc
inc
mov
repz
mov
aam
and
xor
popa
test
jnp
inc
push
fiadds
lods
jge
push
jb
lret
cmp
fiadds
and
sub
stos
jl
ss
stos
sub
outsb
inc
mov
cmc
scas
outsb
push
jbe
movsl
punpckhbw
xchg
leavew
aaa
adc
addl
lock
xor
cli
adc
sub
add
xlat
mov
cmp
and
repz
out
dec
xchg
sbb
inc
dec
sub
mov
push
jns
sbb
ja
cmp
dec
adcl
fmul
sarb
push
lods
shlb
add
fcmovbe
jg
xor
shll
mov
pop
repnz
mov
inc
callw
aad
cmc
or
lock
inc
movsl
push
test
add
mov
jecxz
push
int
or
mov
lock
and
xor
in
into
xor
push
ret
pop
xor
jecxz
hlt
fnstsw
fidivrl
dec
test
add
clc
xlat
add
add
mov
xor
call
lea
je
call
call
inc
and
push
call
mov
jmp
xchg
push
mov
cmp
addr16
imul
cld
push
add
add
cmc
popf
dec
and
loopne
mov
mov
into
jbe
pop
or
sub
les
jmp
int
sub
roll
aad
jo
je
aam
insb
jge
lret
pushf
popf
in
add
dec
repz
adc
out
add
ds
xor
fucomi
pop
sahf
pop
cltd
add
test
cmp
imul
mov
fwait
mov
jecxz
or
and
cmpsb
xchg
mov
sbb
unpckhps
jno
pop
js
and
push
stos
pop
inc
xchg
frstor
mov
mov
scas
inc
movsl
push
pop
mov
mov
or
adc
daa
aam
and
adc
jns
and
out
mov
inc
repz
lds
adc
notl
cmp
jg
inc
pop
cmpsl
lods
jle
lret
mov
fs
lock
popf
jge
adc
cmp
int
xor
nop
arpl
in
pop
ret
std
in
cld
std
in
repnz
or
lahf
adcl
test
and
sbb
addr16
add
adc
cwtl
pop
sbbb
mov
add
sub
aas
mov
mov
out
mov
mov
das
add
imul
push
sbb
push
xchg
mov
xchg
jns
insl
icebp
push
mov
jmp
imul
push
dec
out
mov
and
je
call
test
call
cmp
push
imul
mov
push
ja
ss
shll
pop
sbb
mov
and
ja
and
jae
mov
cmp
mov
mov
addb
addr16
xchg
add
stc
adc
or
cmpsb
push
ja
fwait
or
iret
outsl
xchg
mov
shl
scas
mov
cmpsb
ja
xlat
imul
insb
lock
cmp
cmpb
sub
movb
push
mov
lea
jmp
inc
fs
cmp
stc
lret
mov
xchg
cs
push
cmpsl
cwtl
and
mov
lahf
jb
cltd
pop
add
rol
mov
push
negb
mov
ds
icebp
and
or
add
in
or
mov
mov
js
icebp
push
mov
and
push
filds
dec
clc
hlt
outsb
ja
inc
shll
mov
ss
mov
push
dec
dec
bt
pushf
cmc
ror
pushf
jmp
fisttpll
std
insl
mov
cs
inc
shlb
loope
cmp
pop
jecxz
nop
mov
mov
or
push
ja
leave
pop
ja
mov
mov
xchg
mov
aaa
call
shlb
dec
stc
sbb
aad
pusha
and
mov
sbb
jle
mov
mov
or
mov
or
dec
fdivr
movsb
mov
lock
sahf
xchg
ss
mov
push
dec
lods
pop
cmc
cmpl
aam
rolb
cld
pushl
dec
call
jb
clc
jmp
inc
movzbl
sub
das
rcr
clc
mov
sub
jle
or
clc
add
clc
test
mov
pushf
call
shr
btc
btc
btr
sub
lea
movsbw
pop
pusha
sete
mov
mov
mov
lea
jmp
call
movsbw
jmp
movl
pusha
pushf
movl
movb
mov
pushf
push
lea
jmp
call
not
cmc
pushf
movw
add
movb
stc
cmc
bt
mov
jmp
add
movzbl
not
push
lea
mov
pushf
push
mov
jmp
push
add
ret
aam
aam
and
inc
jbe
lods
xor
or
add
jbe
mov
lret
or
cmp
mov
repnz
int
inc
shrl
add
mov
loop
or
pop
repz
pop
mov
int
in
scas
shll
insl
in
adc
push
push
fistpll
stos
inc
dec
jbe
int3
test
in
inc
pop
adcb
gs
frstor
daa
cmp
out
xor
pushf
cmp
call
jmp
pop
mov
popf
or
mov
inc
rclb
push
adc
lret
test
les
out
sarb
jno
jl
inc
dec
je
sub
inc
je
enter
jbe
cmp
test
dec
out
or
jnp
xor
dec
mov
push
scas
arpl
pop
xor
mov
fisubrs
outsl
repz
movsl
or
push
xor
loop
sbb
and
mov
dec
les
jecxz
lods
sahf
cmp
jmp
push
je
aas
movsl
push
cmc
lds
ss
pop
xlat
jp
out
mov
imul
mov
loope
pop
outsl
mov
and
xchg
imul
xchg
mov
mov
jp
aam
cmp
mov
setg
jmp
inc
fs
jne
es
xchg
addr16
js
mov
push
dec
dec
sbbb
sub
sub
mov
aaa
ret
push
shlb
add
mov
push
dec
in
or
push
loope
dec
fdivrl
scas
sbb
push
push
cmpsl
lret
and
xor
shl
push
ret
fmull
notl
mov
adc
call
mov
ror
and
pavgb
inc
xchg
imul
jbe
scas
xor
outsl
test
lahf
andl
xor
fs
insb
add
sbb
stc
add
movb
pushl
lea
jmp
xchg
ds
movsl
push
mov
popa
shll
loope
adc
dec
push
lret
jo
xchg
and
xor
mull
push
aas
out
xor
push
mov
xor
push
lea
push
fidivrl
pop
xchg
dec
jl
push
pushf
dec
imull
inc
fwait
btr
sub
fidivs
hlt
fstpl
arpl
stc
jns
mov
push
adc
ds
imull
xchg
hlt
test
mov
lcall
dec
cld
pushf
int
pop
mov
fisttps
push
push
fidivl
adc
inc
mov
imull
add
push
ss
push
test
ljmp
call
xchg
inc
dec
lods
xchg
push
jne
outsb
and
loop
lret
add
dec
hlt
in
mov
push
sub
out
shrl
adc
negl
mov
cli
mov
jne
jae,pt
pop
adc
inc
nop
cmp
hlt
pushf
mov
xor
cmp
push
jecxz
xchg
jae
add
movsl
xchg
xor
cmp
movsb
cmp
jne
dec
scas
rorl
scas
leave
lahf
mov
scas
inc
das
sub
repz
jns
xor
or
lods
popa
xchg
adc
cmp
push
inc
push
jle
jg
bound
outsl
sub
jl
mov
fldt
inc
imul
daa
add
adc
sarl
icebp
cmpsb
inc
add
jg
and
repnz
xchg
stos
xchg
in
lret
mov
adc
rcr
dec
or
xchg
inc
mov
inc
out
iret
xor
dec
test
push
add
mov
mov
xor
jmp
sub
mov
movsl
push
push
cwtl
cmp
or
cmp
in
jl
sbb
cmp
aam
or
adc
fnsave
lcall
inc
das
test
xchg
mov
push
pop
outsb
stos
rep
pushf
mov
sahf
out
adc
daa
movsl
arpl
inc
sti
sub
cmp
mov
popf
dec
mov
shrb
imul
sub
xor
in
xor
gs
lret
jecxz
cmp
mov
call
dec
ffreep
bswap
jl
jl
ds
mov
pop
pop
fdivrl
data16
daa
pop
xchg
push
inc
sub
in
call
cmc
push
dec
mov
rolb
pop
fdivl
stc
popf
rolb
shrb
push
and
jnp
add
mov
arpl
fnsave
and
cmc
xchg
cmp
pop
pop
popf
outsl
sbbl
adc
outsl
sbb
add
insb
in
mov
aas
fildll
rcrl
jbe
test
xchg
xchg
in
pushl
loope
jae
bswap
jo
nop
add
test
lret
pop
stos
iret
ja
dec
pop
adc
ja
dec
mov
test
in
jle
outsb
fsubrp
pop
in
inc
inc
lds
rolb
and
and
ljmp
lods
jbe
fdiv
aad
pop
push
pop
cmp
arpl
xor
daa
or
lret
push
xorb
jge
lahf
mov
and
lcall
mov
pushf
sbb
je
cld
adc
loope
or
sub
test
inc
cwtl
in
nop
add
std
mov
sti
dec
inc
cmpsl
lret
mov
js
mov
push
cmc
movsbl
xchg
aas
mov
clc
dec
sub
shld
lea
dec
push
call
bswap
mov
movsbw
bswap
lea
pusha
call
push
pushf
movb
lea
je
clc
sub
clc
bt
cmc
cmp
pushf
jmp
or
cmp
jmp
sbb
int
adc
fisttps
iret
shlb
and
stos
jge
ds
mov
sub
xchg
arpl
loop
or
mov
cmpsb
xchg
mov
jp
dec
sbb
nop
or
adc
not
lods
dec
sub
mov
mov
sbb
xor
push
cmp
pop
jbe
pop
mov
cmp
dec
clc
call
push
pushl
inc
push
pushf
lea
jmp
aad
xchg
cmp
adc
adc
xor
hlt
push
and
xor
xchg
imul
mov
lahf
pop
fimuls
aad
jge
pop
frndint
adc
sbb
fiadds
xchg
or
popa
imul
cmp
lock
adc
in
inc
lret
inc
mov
test
pop
or
xor
xor
push
and
adc
or
imul
sarl
xor
pop
cltd
sub
cmp
int3
in
dec
popf
lea
add
push
cs
fwait
pusha
iret
icebp
or
loop
movsb
cmp
mov
jecxz
repz
stos
push
jmp
sbb
mov
inc
pop
sub
xchg
xor
mov
push
out
mov
pop
pusha
adc
lods
cmpsl
rcr
lahf
inc
daa
pop
add
into
jae
fisubrl
dec
sbb
dec
sbb
test
cltd
mov
jae
iret
lock
inc
cmp
dec
outsl
add
and
int3
test
lcall
mov
aaa
lret
dec
jb
mov
ss
lahf
jmp
pusha
lea
ja
push
pusha
imul
clc
cmp
call
add
inc
js
je
jb
arpl
jae
push
mov
aaa
movsl
push
cmpsb
cmpsl
aaa
js
dec
cmp
jmp
fstpt
iret
sarl
cmp
push
mov
mov
xor
mov
es
out
sub
lea
ret
notl
shl
in
out
pop
cmpsb
psrlq
and
xchg
in
test
insl
jns
in
mov
mov
dec
add
insl
inc
push
pop
jle
pop
add
dec
int
lds
pushf
lea
jae
bt
call
push
jmp
call
mov
jmp
jmp
xor
aaa
movsl
push
cmpsb
cmpsl
addr16
test
ljmp
xchg
dec
add
fisubrs
mov
jmp
push
inc
pop
sub
dec
sarb
mov
push
nop
add
shrb
mov
sbb
movsb
xorl
int
mov
pop
inc
stos
xchg
push
cmp
mov
fistpl
pop
jg
jge
mov
outsb
arpl
push
xor
inc
jne
cmpsb
testb
fdivr
in
int
iret
pop
pop
mov
xchg
outsb
lods
push
mov
in
lods
lea
adc
ret
cmp
adc
mov
lahf
add
cli
mov
mov
lds
push
daa
pop
sbb
in
into
cli
dec
repnz
push
mov
cmpsl
in
mov
bound
sti
xor
dec
int
pop
pushl
or
xor
mov
aaa
outsb
insb
into
faddl
inc
stos
loop
ss
xor
es
and
mov
and
xor
int3
mov
out
ret
inc
out
incl
xchg
jae
xchg
inc
stos
add
pop
mov
adc
xchg
push
xor
sbb
adc
stos
inc
mov
pushf
cmpl
jmp
sub
xchg
inc
pop
or
ljmp
leave
ljmp
xor
in
xchg
cli
ret
lods
data16
pusha
pusha
test
mov
push
cmp
cwtl
inc
out
jmp
xchg
pop
sub
sbb
enter
dec
fmuls
push
and
cli
pop
xchg
xchg
jl
icebp
sub
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
cli
lock
inc
add
test
int
decl
sbb
movsl
push
shll
xor
jae
adc
adc
jnp
popf
mov
mov
stos
cli
dec
insl
imul
cmp
cld
gs
movsb
xchg
cld
ja
pop
jnp
dec
mov
mov
add
and
mov
pop
adcb
mov
dec
pop
in
adcl
xchg
outsl
mov
std
dec
sbb
rolb
push
sbb
in
lods
mov
lcall
jnp
leave
cmp
pusha
push
ror
push
shr
push
push
call
pushl
add
stc
cmp
pushf
mov
clc
cmc
test
pusha
lea
je
stc
cmc
test
clc
add
cmp
call
movzbw
neg
mov
call
cmc
cmpb
movb
lea
jne
mov
movsbl
btc
aas
xor
btr
mov
push
cmp
add
clc
mov
pushf
stc
mov
test
pushf
pushf
lea
je
test
sub
test
cmp
jmp
lea
jae
pusha
mov
not
inc
inc
setno
mov
call
pushl
call
inc
lea
pushf
lea
call
call
pushf
mov
adc
call
call
mull
test
addr16
pop
test
push
ss
movsl
and
xchg
push
scas
ret
out
pushf
popa
mov
cli
lcall
mov
jg
xor
stos
pop
fsubl
and
mov
adc
cmp
nop
in
inc
add
dec
sub
sahf
dec
jo
std
ret
sti
mov
dec
dec
jno
jno
fs
insl
mov
lods
sub
jge
jecxz
push
sahf
daa
mov
push
xchg
adcl
push
cwtl
inc
adc
frstor
pop
imul
pushf
jle
pop
movsb
xchg
push
ja
xor
les
insl
in
adc
and
iret
das
mov
rol
outsl
pop
out
sbb
fwait
imul
faddl
or
adcl
iret
add
and
testb
push
test
pop
xorl
or
xor
loopne
adc
xchg
pop
test
addr16
iret
repnz
int
mov
or
mov
loop
test
int3
mov
fucomi
add
pop
scas
dec
jo
inc
movsl
jecxz
sbb
call
adc
cs
popf
imul
adcb
cmp
mov
nop
add
popf
jbe
lcall
push
sbb
shlb
test
and
fwait
adc
pusha
xor
dec
adc
jmp
mov
inc
outsl
iret
add
dec
inc
and
jecxz
fnstenv
push
sbb
inc
cmp
xchg
pop
cmp
fcompl
ljmp
adc
mov
mov
adc
and
xor
hlt
insb
fs
lea
in
inc
pop
jns
mov
or
scas
sub
aaa
aad
dec
sbb
dec
outsl
jne
jno
pop
add
mov
mov
lods
sub
cli
lret
loop
inc
repz
ljmp
cmpsb
and
inc
addr16
add
xchg
inc
xor
cmp
clc
cs
dec
pusha
loope
and
jecxz
adcb
es
sahf
loop,pt
loopne
or
lds
mov
mov
fnstcw
es
insb
jno
enter
or
in
iret
jp
cld
or
cmp
push
daa
cmp
out
out
mov
push
pop
xor
lock
mul
pop
sub
leave
jno
push
dec
jge
leave
jno
insl
or
fistpl
ja
popf
shlb
movsl
imul
xor
dec
out
adc
lock
cmp
pop
les
pop
outsl
lock
cmpsl
mov
push
in
dec
in
nop
mov
xchg
inc
cmp
lods
inc
ja
movsb
adc
subb
inc
pop
les
ljmp
jo
sbb
shl
or
xchg
xchg
rdmsr
stos
or
jne
lahf
lock
into
xor
pop
xchg
ds
push
andb
sahf
sbb
pop
pop
shlb
shlb
mov
cld
int3
dec
inc
jnp
test
popa
adc
pop
pop
subb
pop
mov
add
inc
lds
inc
adc
sub
sub
inc
iret
ja
or
jge
notb
enter
xchg
mov
adc
inc
sub
nop
adc
xor
sbbl
mov
mov
xchg
out
mov
jns
xchg
adc
xchg
pop
movsb
mov
push
dec
inc
jl
cmc
jne
or
mov
add
sub
inc
inc
icebp
push
scas
dec
enter
or
sbb
push
data16
cmp
lea
test
dec
in
xchg
mov
push
int
scas
addb
movsl
pop
pop
push
mov
in
insb
adcb
pushf
pop
out
jmp
iret
cs
icebp
inc
ljmp
imul
mov
mov
arpl
insb
sbb
test
jle
loope
loope
stos
pop
mov
popa
mov
and
pop
cmp
ljmp
lods
inc
cmpsl
pop
sub
pop
jne
fstps
inc
ret
outsb
jno
pop
lahf
pop
sub
xlat
mov
int3
out
aaa
or
in
insb
lock
cwtl
aad
push
test
mov
enter
mov
pavgw
sub
shlb
xchg
fwait
dec
pushf
lahf
sub
psllw
adc
dec
pushf
test
lret
xchg
push
xor
jmp
imull
pop
inc
inc
aam
mov
repnz
sti
mov
xchg
add
sarl
and
cmpsb
stos
into
or
jecxz
imul
pop
or
mov
cmp
or
js
cltd
xchg
rclb
mov
xchg
pusha
add
inc
dec
clc
in
jcxz
loope
ljmp
cmp
mov
adc
mov
jbe
out
aas
cmp
dec
mov
test
sbb
dec
push
loopne
cmp
jg
out
mov
jmp
mov
insl
adc
pushf
cwtl
cld
sarl
cmp
push
mov
push
js
scas
mov
shlb
shl
das
jg
imull
and
sub
sub
std
or
push
aad
cmpsl
subl
aas
sub
lcall
in
mov
hlt
sbb
pop
gs
jle
xchg
data16
iret
cmp
mov
jmp
xor
fadds
xchg
cmp
scas
nop
rcll
mov
ds
jbe
stos
dec
leave
imul
cmp
pop
cmc
movzwl
call
pop
push
inc
loopne
adc
cmp
jge
sbb
ficompl
xchg
jmp
and
in
leave
mov
arpl
and
dec
sti
loopne
and
insb
jge
inc
cmp
inc
mov
push
pushf
iret
lahf
shl
dec
scas
xchg
inc
cmpsl
dec
iret
dec
mov
jnp
ds
aam
mov
inc
adc
sub
loope
mov
sub
cmp
cwtd
imul
imul
addr16
cmpsb
mov
or
dec
int
je
out
aas
xor
jae
inc
lret
dec
add
adc
into
push
jle
add
xor
outsb
mov
inc
adc
icebp
mov
pop
push
pop
cmp
data16
cli
mov
lea
loop
fsubrp
pushf
add
inc
add
dec
ret
and
sub
gs
dec
repnz
rcl
clc
in
adcb
fadd
roll
ss
mov
es
aad
std
in
incl
rcll
sti
pop
or
fcmovbe
sbb
dec
push
pop
mov
jne
outsl
nop
adc
cwtl
aas
js
popf
sbb
les
dec
ljmp
out
xchg
or
outsl
and
out
add
cmpsb
leave
cmp
test
mov
push
push
out
movsl
lahf
call
xor
adc
jno
jne
daa
mov
roll
lret
scas
ret
rcll
sub
and
pop
add
pop
mov
sarb
les
cltd
xor
cld
pusha
sbbl
and
mov
inc
mov
addb
popf
ret
mov
fdivrs
dec
arpl
adc
jae
out
cmp
cmp
mov
clc
cwtl
test
jb
out
push
cmp
jnp
scas
jns
scas
push
mov
in
xchg
xor
fcomp
mov
adc
pop
outsl
lock
mov
leave
xchg
or
xchg
inc
daa
sbb
inc
jne
das
jnp
xor
call
mov
mov
xlat
pop
cmp
add
and
fidivrl
push
and
pop
mov
pop
mov
xchg
inc
movsl
or
dec
pop
repnz
dec
dec
fists
xchg
adc
into
sbb
cltd
stc
stos
jp
sti
mov
popf
cwtl
push
arpl
daa
sub
xchg
or
xchg
add
xchg
rdmsr
lret
fmuls
fsubl
mov
xchg
test
repz
shl
call
clc
sbb
inc
lock
stc
lret
in
fbstp
test
repnz
jle
into
push
push
jp
jae
cwtl
and
mov
repnz
fisubrl
jecxz
cwtl
test
xor
inc
scas
push
shll
add
stc
jl
sub
cmp
test
inc
shll
mov
iret
mov
sahf
adc
pusha
jno
xor
rorl
sub
push
and
sbb
xor
loope
imul
in
fists
fs
insl
jle
movsb
sbb
push
cmp
pushw
xchg
sbb
sahf
push
xor
and
add
sub
popa
mov
cli
dec
sbb
push
mov
xor
pop
push
in
lea
push
dec
mov
lods
iret
clc
cmp
repnz
adc
add
add
iret
ret
dec
test
les
add
enter
pusha
les
push
loopne
scas
in
mov
and
dec
bound
mov
out
out
daa
add
jno
push
xor
sti
jne
mov
push
dec
insb
call
jle
cltd
push
test
lahf
ret
xchg
stos
addb
enter
adcb
iret
lods
jno
lret
fdiv
negb
leave
dec
in
and
inc
les
popf
dec
into
push
jne
stc
jg
bound
and
jo
insl
shrl
pop
cs
xchg
in
and
ljmp
mov
sub
add
add
scas
push
aad
push
cmpsb
mov
dec
mov
xlat
push
daa
sti
push
mov
js
fcmovbe
sub
sti
and
aad
rolb
movsb
test
pop
std
mov
sbb
cmp
or
or
sbb
mov
hlt
push
add
jbe
or
stos
dec
lds
or
and
mov
icebp
and
sub
lods
in
icebp
fistps
jnp
mov
addr16
sub
mov
and
lret
aas
aad
and
mov
shrb
mov
xor
xchg
dec
mov
mov
xor
cmp
shrl
cmp
xchg
xchg
mov
cmpsl
xor
mov
movsb
dec
sbb
mov
out
jo
sbb
popf
jno
test
push
mov
lcall
add
jg
daa
lods
inc
push
xchg
mov
jne
and
movsl
or
xor
cmp
insb
jge
aas
in
xchg
stos
hlt
inc
push
test
ljmp
xor
icebp
jmp
in
adc
loop
in
sub
les
adc
test
out
aas
test
test
push
add
cmovl
sub
hlt
outsb
inc
mov
sub
push
lcall
nop
dec
add
lahf
push
repnz
arpl
dec
out
hlt
mov
add
push
cltd
xchg
icebp
or
push
mov
dec
sti
iret
push
jecxz
dec
out
xchg
xchg
inc
cwtl
and
push
xor
aam
adc
dec
pop
jo
mov
mov
adc
fwait
imul
mov
fisubs
lret
js
insb
scas
lret
xchg
push
sar
pop
ret
fists
jno
insl
aam
and
std
and
lret
movsl
arpl
fs
sub
inc
out
out
sbb
out
sub
or
xchg
jne
cld
js
mov
push
dec
sbb
loopne
push
fildl
daa
insb
data16
popa
movb
jmp
add
adc
xchg
divb
scas
adc
or
jl
lea
or
sub
jae
iret
frstor
jl
js
cwtl
lret
push
sbb
sbb
pop
jg
cmpsl
aas
mov
hlt
cmp
jb
push
mulb
sub
mov
jle
pop
mov
bound
mov
cltd
mov
sbb
imul
add
and
jmp
adc
mov
inc
sbb
pop
andl
or
adc
xchg
mov
test
fisttps
pusha
gs
push
test
jne
cmp
sub
iret
jl
nop
inc
dec
mov
fs
sbb
out
adc
adc
popf
mov
ret
out
cmp
outsl
je
push
arpl
mov
sub
jg
mov
and
lahf
aas
jecxz
or
sarl
out
push
jle
lret
aam
adc
cmp
out
icebp
inc
test
add
sub
outsl
aas
mov
imul
andl
imul
jmp
rcll
xchg
mov
outsb
fstpl
mov
pusha
nop
out
pushf
cld
jge
fimuls
dec
imull
mull
jmp
mov
out
cs
out
inc
stos
push
or
push
mov
int
adc
sub
imul
call
dec
pop
or
aas
jl
jne
in
lods
xor
mov
pop
cmpb
iret
and
icebp
scas
pushf
lret
adc
mov
test
movsl
mov
insb
in
cmp
enter
push
lcall
lahf
jae
mov
xchg
test
outsb
push
pushf
mov
fisttpl
push
aad
jns
cmpsl
dec
jo
in
inc
xchg
shl
movsl
inc
jmp
imul
icebp
test
and
add
add
in
call
xchg
xchg
movsl
inc
jmp
inc
bound
scas
fadds
subl
iret
jl
inc
and
aaa
pop
jo
sub
stos
push
jb
jecxz
xchg
cmp
cmp
add
pop
push
nop
fstpl
cmp
mov
lea
sbb
mov
lock
test
cmpl
push
in
lea
dec
inc
mov
cmp
and
push
ja
sub
lret
adc
ja
push
cmpsb
and
dec
cmc
add
imul
adc
adc
hlt
imul
dec
jo
xor
frstor
push
and
dec
xchg
push
pop
inc
and
icebp
jge
into
outsb
xchg
fdivs
fcmovb
pop
mov
call
add
inc
pop
jo
xor
push
dec
jp
fstpl
add
sub
idivb
xor
mov
sub
sahf
cmp
push
mov
repz
mov
xor
sub
icebp
xchg
and
gs
fcoml
stc
cmp
lahf
add
ljmp
incb
mov
data16
jns
jne
pop
fistpl
inc
pop
push
jmp
mov
gs
notb
icebp
add
push
cmp
or
loop
mov
popf
or
subl
dec
sub
js
loop
in
mov
adc
xchg
jb
jne
rcrb
xchg
inc
and
ret
inc
in
dec
subl
mov
mov
pmaxub
outsb
lahf
ret
add
mov
dec
mov
add
jne
xlat
in
mov
cmp
arpl
jnp
pop
or
and
mov
lds
adc
mov
shl
mov
cmp
lahf
dec
into
adc
xor
mov
test
fldz
sbb
or
in
lods
add
popa
push
test
ja
mov
mov
out
decl
btr
sbb
shl
mov
shl
mov
call
movl
pusha
movl
pusha
pushf
lea
jmp
decl
jmp
mov
sub
movsl
push
rolb
xchg
and
in
leave
cmp
mov
negl
lahf
adc
pushf
insb
dec
imul
sub
lods
ret
xchg
ss
cltd
stos
sub
fnstsw
inc
fs
inc
push
pop
pop
jae
adc
pop
les
rorb
ja
push
xchg
xor
push
daa
divl
or
hlt
lds
and
mov
imul
stos
loopne
or
loopne
cltd
into
bound
pop
xchg
adc
mov
and
rclb
in
sub
and
mov
dec
and
aad
inc
inc
ja
pop
sub
call
shll
mov
pop
cmp
cli
fidivs
push
mov
dec
xchg
pusha
into
dec
aas
dec
insb
dec
dec
cmp
rcl
push
push
xor
push
lret
jl
fistpll
leave
jno
test
scas
xchg
jb
sahf
dec
jae
or
adc
sub
int3
cltd
lock
or
or
add
xchg
cmc
ss
xchg
out
test
sbb
sub
adc
dec
or
sub
scas
ror
cmpsl
enter
mov
inc
ret
ja
adc
popf
push
lret
sub
and
add
mov
and
pop
cmp
xor
ja
insb
dec
pop
push
in
arpl
inc
mov
lret
jne
mov
adcl
xor
out
loop
mov
mov
pop
or
bt
push
add
pushf
movw
mov
pusha
lea
jne
push
pusha
pushl
mov
pushfw
popw
jmp
pusha
add
jae
cmc
cmp
not
lea
bswap
pop
push
pusha
pusha
call
clc
sub
jmp
mov
sub
movsl
push
loop
mov
mov
movsb
mov
out
dec
iret
leave
sub
sbb
xchg
fnstsw
repnz
aaa
mov
pop
insb
lds
stos
fsubl
mov
movsb
xchg
leave
in
ljmp
and
jbe
stc
lret
xchg
mov
out
cwtl
or
inc
adc
xor
xor
scas
adc
aam
push
xchg
cmp
scas
in
or
pop
and
bound
jb
in
in
lds
ljmp
rclb
mov
loope
repnz
pop
ss
push
movsb
cld
fnstenv
mov
ss
test
sub
and
jae
mov
mov
mov
push
cmp
or
add
out
ss
cmp
inc
xchg
jnp
inc
clc
std
icebp
ss
rep
sbb
mov
fnstsw
shlb
pushf
lea
jb
call
adc
mov
aaa
cmpsl
xchg
push
fwait
ja
gs
inc
pop
sahf
shll
xchg
jo
xchg
inc
addb
jb
push
jecxz
jbe
and
xbegin
and
stc
mov
push
imul
mov
pushf
mov
sarl
addr16
lea
xor
pop
inc
pop
xchg
pop
loope
fidivrs
into
mov
or
xor
faddl
add
adc
and
call
jae
cmc
cmc
pusha
push
sub
pushf
jmp
movl
push
jmp
add
dec
outsl
arpl
inc
jb
add
in
push
movsl
push
icebp
and
jae
xchg
repz
inc
je
xchg
pop
sub
rorb
adc
xchg
jge
stc
sbb
repnz
xor
dec
leave
cmp
cmpsl
cmp
aas
jg
xchg
cli
sbb
adc
lahf
in
cmp
imul
lods
nop
std
in
adc
or
div
mov
pop
pop
ret
xchg
cmp
xor
push
jbe
xchg
inc
cmp
jmp
pushf
pushf
not
mov
pusha
mov
not
pushf
mov
mov
pushl
ret
or
movw
push
lea
je
cmp
stc
or
jmp
push
pusha
rol
mov
test
xor
clc
test
cmp
cmp
bswap
movzbw
lea
lea
setp
cwtl
jmp
shld
dec
mov
test
clc
cmc
push
shl
call
pushf
pusha
push
lea
je
cmc
test
cmp
pushf
pushl
ret
cld
test
shlb
mov
and
std
jae
and
mov
jno
lea
mov
xlat
xchg
cwtl
mov
in
pop
push
mov
jl
test
mov
and
mov
insl
frstor
shrb
push
pop
lahf
cltd
scas
mov
xor
mov
add
lods
ljmp
sbb
lods
cmc
enter
fisubrl
fistpl
cltd
inc
and
fistps
pop
jge
dec
and
xchg
jns
jle
push
cmp
mov
sub
pop
sub
repnz
pusha
cmp
test
enter
sub
sub
xor
aam
rcrb
aad
pop
adc
test
lea
icebp
shll
push
xor
mov
fcomps
inc
cltd
in
mov
push
sarb
mov
xchg
mov
in
or
hlt
mov
dec
rolb
in
lock
adc
sbb
push
sub
sub
repz
mov
sbb
sahf
outsb
ds
ret
out
scas
pop
jg
in
inc
loopne
cli
sbb
shrl
out
mov
into
fistps
mov
stc
push
fcom
test
into
js
test
and
dec
call
out
adc
lret
cmpsl
addr16
jbe
dec
cmp
dec
cmp
cmp
cmp
imul
lcall
test
push
das
jg
jo
mov
cli
int3
movsb
movsl
sub
or
add
repz
jno
sbb
push
repnz
inc
adc
daa
fmull
or
frndint
leave
int3
movsb
movsl
jne
cmpsb
mov
pop
sbb
lcall
mov
addl
mov
add
cmc
adc
jmp
sbb
sbb
lds
out
es
addr16
and
pop
dec
jecxz
xor
xchg
jbe
xlat
jmp
outsb
pop
sti
cmp
lahf
jge
icebp
rol
movsl
push
std
mov
pop
aas
xchg
cwtl
sub
lds
icebp
inc
leave
fsubp
nop
mov
iret
or
sbb
mov
xorl
int
jg
mov
inc
xor
cmp
xchg
push
xlat
addr16
xchg
outsb
push
into
icebp
xchg
adc
out
xor
out
sub
leave
ljmp
jmp
dec
lock
mov
loop
fs
xchg
cli
movsl
jl
push
or
or
lock
mov
xor
cmp
enter
subb
in
ljmp
pop
and
inc
imulb
incl
dec
mov
addr16
dec
push
ss
scas
mov
movsl
push
jo
icebp
ret
aas
mov
leave
mov
xchg
lods
lods
or
jge
sub
cmp
in
in
fisubrs
cmp
and
inc
mov
mov
inc
or
push
and
sbb
cs
push
jle
mov
rolb
shlb
sub
pushf
inc
jl
or
stos
mov
sub
xor
arpl
sub
mov
pushf
in
cmpsb
mov
iret
dec
lahf
mov
mov
push
test
stc
shll
cld
test
dec
scas
jg
xor
mov
or
icebp
es
add
test
inc
xor
xor
call
mov
movsl
push
adc
hlt
lds
mov
mov
xchg
test
in
add
xchg
add
inc
rol
insl
insl
shl
mov
mov
xchg
ficoml
pushf
loopne
jnp
movsb
xorl
pop
lcall
cmp
jo
inc
dec
jmp
push
push
out
xor
sbb
add
in
rol
js
mov
scas
das
ss
xor
mov
add
add
add
pushf
pushf
lea
jmp
fdivr
mov
movsl
push
outsb
pop
jg,pt
iret
xchg
push
and
jns
in
push
push
add
insb
fisttpll
das
ljmp
xor
js
pop
xchg
fcmovne
mov
fwait
dec
pop
outsb
and
and
sub
stc
lods
loop
lret
cwtl
mov
outsb
out
xchg
add
cmpsb
inc
push
out
cmp
jle
je
divl
and
and
mov
ret
in
pop
in
adcl
dec
scas
arpl
sbbb
sub
jnp
mov
clc
dec
lods
inc
xchg
mov
mov
bound
adc
int3
mov
fsubrl
jno
data16
orl
mov
dec
sub
aaa
mov
int
sarb
adc
mov
adc
jecxz
sti
add
jns
data16
in
loopne
dec
mov
clc
clc
pushf
test
cmp
pushl
pusha
lea
jb
cmp
cmp
pushf
call
cmp
pusha
lea
ja
pusha
add
sub
rcr
jmp
push
push
lea
jae
push
pusha
setb
mov
dec
pusha
dec
pushf
inc
mov
jmp
test
cmp
jmp
sub
sbb
xor
and
adc
andl
ret
inc
sub
ficoml
fs
mov
add
push
or
jle
jbe
and
arpl
hlt
pop
or
decb
inc
shl
in
and
jbe
movsb
mov
pop
test
add
mulb
cmpsb
push
or
jge
iret
sti
shll
into
push
lret
hlt
fistpl
dec
mov
xor
cmp
ret
inc
stos
dec
and
aad
mov
loope
sub
xor
and
add
xlat
inc
jmp
pushf
jmp
movb
sub
stc
pushf
not
mov
rol
movb
movb
call
dec
insb
sbb
icebp
adc
inc
repz
adc
sbb
and
test
mov
movsb
lock
xchg
adc
jl
cli
shrb
cmc
sbb
inc
xor
jmp
inc
je
sub
xor
sub
mov
push
jbe
lret
fnstsw
in
repnz
push
xchg
sbb
int
stc
sub
xchg
fistpl
pop
jnp
xchg
aaa
in
cmpsl
cmpsl
fdivs
fsubrs
jno
pushf
pusha
movl
push
lea
jmp
adc
push
push
movsl
push
stos
dec
sub
dec
jmp
jl
in
cmp
dec
sbb
inc
sbb
ficompl
jo
xlat
inc
movsl
jecxz
out
push
and
jae
dec
inc
in
mov
test
in
popa
push
push
jmp
pushf
pusha
pusha
xchg
jmp
add
bt
cmp
jmp
cmp
call
inc
pushf
push
mov
mov
lea
jmp
jmp
and
cmc
call
cmc
add
pusha
mov
cmp
cmc
test
jmp
and
movsl
push
xchg
mov
xchg
add
dec
outsl
mov
cs
scas
add
sti
cld
int
sahf
mov
nop
and
mov
mov
xor
cmp
mov
push
push
mov
mov
ljmp
add
or
jae
mov
repz
insl
xor
ds
popf
jns
orb
mov
test
sub
cmp
xchg
push
data16
adc
lods
pop
lods
nop
adc
dec
push
cmc
jmp
into
jnp
mov
mov
stc
mov
mov
movl
pushl
ret
pop
inc
inc
adc
test
call
fisttps
pushf
pusha
subl
xchg
ss
aaa
xchg
xchg
ret
lret
in
mov
or
aam
mov
in
jl
jbe
int
daa
sbb
mov
insb
and
jp
fcomi
xchg
mov
mov
mov
xchg
cwtl
inc
or
repz
push
out
adc
mov
out
inc
xchg
jae
mov
rclb
ret
push
and
xchg
xlat
rcl
fcmovnbe
ss
cli
jmp
ret
pop
dec
into
popf
out
sbb
inc
enter
jmp
andl
insb
fidivl
pop
mov
mov
into
mov
sti
mov
mov
mov
lret
mov
fcoms
pop
dec
jp
mov
pop
mov
fstp
push
jno
lods
pop
inc
loop
movsb
ds
fbld
sbb
add
rol
cmp
mov
ret
test
daa
xchg
aas
pusha
add
loop
and
lahf
dec
jo
idivl
or
int3
fwait
orl
in
fsubr
fidivrs
fs
push
mov
sbb
fildll
mov
imul
mov
and
leave
mov
push
mov
aad
int3
stc
jecxz
insl
adc
pusha
mov
pushf
pushf
lea
jmp
push
jb
movsl
push
cwtl
test
fidivrl
or
sbb
call
popf
dec
jmp
ret
sarb
shl
loope
inc
and
jb
int3
dec
cli
ficoms
mov
shlb
scas
add
jmp
mov
mov
repz
ljmp
gs
popa
jbe
mov
lret
push
cmp
stos
imul
fiadds
dec
jmp
and
pop
add
sbb
xchg
inc
push
dec
jl
in
lea
aas
and
daa
adc
aas
in
popf
adc
into
ds
nop
adcb
jbe
shlb
std
lea
fldcw
add
enter
and
add
mov
inc
push
stc
pop
stc
sub
push
and
lret
rcrl
cwtl
mov
and
mov
out
mov
mov
mov
in
lock
jne
or
xor
mov
bound
lock
pop
pop
mov
cmpsb
inc
cli
pusha
mov
setg
lea
pushf
jmp
jmp
pusha
lea
jae
add
shl
mov
cmp
or
shl
push
mov
shl
mov
bt
test
test
pusha
sub
stc
clc
test
pusha
repnz
call
pushf
lea
call
call
in
lcall
lods
pushf
cld
jl
sahf
fists
and
addl
stc
movsl
test
cmp
jnp
repnz
sahf
pop
dec
cmp
sub
cmp
movsb
sub
push
sbb
pusha
pushf
mov
mov
sbb
aaa
sub
mov
sbb
insb
xor
stc
mov
nop
cmp
jp
jecxz
xor
nop
pusha
subl
pusha
icebp
xor
rcrl
dec
and
aas
inc
cwtl
mov
loop
sbb
jae
cs
inc
out
and
adc
jns
stc
dec
sbb
imul
jge
inc
cmp
cmc
movsb
dec
jge
push
dec
mul
mov
inc
rorb
dec
mov
cwtl
inc
push
jae
aad
fs
sub
mov
jnp
or
fwait
xchg
les
cmp
push
mov
movsl
cltd
jnp
addr16
mull
xchg
inc
test
nop
xor
push
loop
stos
dec
adc
mov
scas
pushf
ss
or
adc
add
xor
push
mov
cmpsb
divb
mov
pop
lods
or
enter
lret
imul
or
cs
xchg
sbb
xchg
cmp
faddl
and
dec
mov
mov
dec
rorb
repz
inc
aas
ja
sbb
loop
enter
es
lret
dec
popa
xchg
pop
scas
and
stos
push
add
jne
lret
movsl
push
cmp
aas
push
add
xchg
loop
and
stos
jbe
dec
cmovg
jns
jmp
jns
pop
jg
fiaddl
dec
xor
mov
pop
and
push
mov
jo
xchg
push
fistps
pop
subb
lret
repz
call
push
xor
inc
inc
sbb
cmp
mov
xchg
mov
loope
adc
xor
xchg
test
inc
fcmovbe
xor
call
xor
cltd
sbb
or
adc
scas
sti
pop
sub
dec
or
fnstenv
cmpsb
push
outsl
shll
xchg
jl
es
ja
sbb
lods
pop
bound
aas
jo
jno
dec
xor
rcl
adc
sub
mov
aas
repz
cmpsl
loop
movsl
push
mov
sub
or
int
mov
cmp
mov
xlat
cmpsl
jno
adc
repnz
in
and
js
daa
lds
pop
dec
out
inc
movq
jl
lret
int
inc
out
scas
fs
popa
cmp
mov
dec
dec
fnstenv
push
sub
arpl
mov
add
push
int
mov
aaa
call
push
jae
add
loope
jle
lahf
roll
mov
inc
bound
mov
testb
mull
adc
scas
cmpb
push
stos
into
inc
aas
popa
or
leave
ds
clc
stos
into
add
fisubrs
dec
loop
push
fsubrl
mov
pusha
aas
push
push
stos
into
pop
arpl
mov
mov
add
push
enter
imul
mov
aas
dec
cmp
int3
lcall
mov
rclb
mov
jnp
pop
insl
popa
sbb
aas
dec
cwtl
stos
into
sub
lea
dec
je
into
push
daa
adc
popa
mov
mov
inc
outsl
cmpsb
add
pop
aas
push
push
cli
add
adc
stos
into
and
add
into
cwtl
jae
adc
cs
and
stos
into
sbb
or
inc
mov
pop
insb
push
sub
mov
mov
sub
jl
xor
stos
into
lds
mov
push
mov
sbb
jb
inc
mov
ss
dec
dec
aas
mulb
stos
into
in
cltd
mov
ja
push
adc
into
sub
cmp
stos
into
shrl
aas
icebp
out
into
cwtl
lea
popa
and
fsubrs
adc
insl
mov
lods
inc
mov
mov
jns
push
aas
popa
adc
aas
or
push
mov
pusha
add
mov
or
loop
push
mov
imul
aas
push
pop
stos
into
and
push
aas
dec
inc
stos
into
mov
pop
and
idivb
fs
es
add
push
in
into
movsl
shrl
pusha
add
aas
push
dec
stos
into
add
je
add
aas
push
dec
stos
into
clc
inc
or
mov
dec
cmp
adc
adc
cmc
popa
fwait
lods
xor
mov
fnstcw
add
lret
dec
mov
add
add
ds
dec
stos
into
clc
xor
push
inc
js
into
sahf
in
test
movsl
push
scas
push
scas
mov
sbb
jp
mov
add
shll
insb
sbb
adc
push
das
pop
push
push
add
cmp
cmp
jno
pop
or
jl
inc
cwtl
divl
and
add
and
mov
adc
ja
mov
pushf
insb
inc
sbb
pushl
jmp
mov
in
adcl
jecxz
mov
add
arpl
mov
push
cmp
push
ss
outsb
arpl
inc
adc
nop
and
jno
xor
mov
scas
mov
outsl
stos
sti
jl
sbb
xor
jmp
ja
stos
xchg
aaa
pop
dec
inc
cmp
fisttpll
or
mov
pop
inc
stc
stos
jnp
jns
sti
jl
sti
test
ljmp
test
add
dec
outsb
loopne
repz
pop
xchg
xorl
or
push
mov
fs
xchg
movsl
inc
lds
fisttpl
stos
sti
jl
imul
jmp
ja
xchg
movsb
in
out
clc
repz
or
ret
xchg
fidivrs
jl
add
stos
xchg
aam
push
out
scas
test
dec
or
mov
outsl
mov
adc
sbb
and
out
scas
ljmp
repz
or
popa
adc
pop
cs
addr16
rorb
push
sub
aam
cmp
jmp
mov
xor
xorb
push
and
dec
dec
out
dec
ja
jecxz
arpl
imul
or
fidivs
xchg
sbb
les
add
call
movb
movw
test
jmp
ror
cmp
pushf
call
lods
pop
xor
movsl
push
fcmove
sbb
sbb
ja
test
push
loop
jmp
lods
push
xor
fsubl
leave
dec
dec
pop
insb
mov
mov
lcall
cltd
sarl
pop
fstpt
pop
xchg
fs
pushf
dec
jo
daa
xchg
push
into
add
xchg
pop
repz
shll
lock
fstp
push
aam
frndint
lea
movsl
push
push
rolb
push
and
push
shll
mov
mov
xchg
lret
sbbl
mov
mov
mov
cmpsb
mov
push
mov
or
call
mov
jmp
out
testb
push
adc
test
xchg
pop
cmpsl
pop
xlat
clc
fmuls
insb
mov
ret
mov
and
add
jbe
lahf
mov
testl
popf
rorb
push
mov
or
cwtl
mov
clc
sub
cmpsb
fisubl
and
push
mov
test
jmp
xor
sub
add
fldl
xchg
push
adc
jo
imul
call
sbb
dec
or
mov
mov
repz
xor
mov
mov
xchg
lock
lahf
and
or
stc
inc
push
inc
cmp
call
pop
pop
pop
rol
outsb
push
mov
mov
dec
nop
mov
cwtl
mov
mov
pusha
add
push
adc
out
push
inc
inc
cmp
pushl
push
cwtl
bound
jae
popa
test
cmp
ret
arpl
add
lea
xchg
mov
mov
sbb
xchg
negl
outsl
or
dec
pop
scas
cs
das
jg
xorb
imul
aam
jg
fisttps
lahf
xchg
loop
mov
jecxz
xchg
lock
adc
or
test
cmpsb
jp
in
fdivs
ljmp
out
pop
mov
out
popa
adc
das
btr
sub
test
lcall
pusha
call
cmp
movsl
push
iret
scas
mov
lock
and
push
addl
aam
lcall
xchg
in
push
pop
pop
sub
repnz
add
scas
outsl
lock
mov
sub
leave
clc
sahf
add
inc
mov
out
out
arpl
loop
mov
mov
sub
xchg
cwtl
push
jge
mov
insl
xchg
ss
push
or
rolb
hlt
pop
fs
cmp
fisubs
mov
decl
adc
and
lcall
add
mov
ret
outsb
xchg
clc
pop
movsl
push
test
test
sbb
lea
mov
dec
fbld
rorb
pop
lds
out
jecxz
std
jg
lea
add
or
out
dec
xchg
push
iret
jl
push
scas
mov
adc
dec
pavgb
data16
xchg
int
xorb
mov
lods
xor
fwait
shl
or
dec
mov
push
ljmp
push
dec
fstpl
jle
push
pop
push
scas
scas
pop
xor
and
mov
adc
push
mov
mov
insb
ljmp
enter
lcall
mov
cwtl
mov
test
and
pop
fstpt
and
xchg
fsubr
push
les
dec
fmull
in
mov
nop
insb
jge
jmp
jp
xchg
cwtl
cld
xor
clc
or
sub
inc
and
movsl
push
fisubrl
cmp
mov
test
jb
fidivl
out
das
xchg
cmp
adc
jg
iret
sbb
adc
or
mov
insb
rolb
das
mov
hlt
pop
mov
push
shr
xchg
mov
push
ljmp
sbb
sub
mov
idivl
adc
jle
movsl
mov
mov
mov
adc
pop
addl
aam
or
jp
dec
test
mov
enter
in
dec
negb
repz
jne
pop
pop
addb
push
jp
fsubrl
aad
je
cmp
loop,pn
fcoml
add
xorl
jae
xchg
and
stos
int3
adc
mov
adc
out
mov
pop
push
cmc
fstps
movsl
ja
dec
sbb
adc
mov
lock
inc
xchg
jae
mov
in
fldl
sub
movsl
push
je
aam
push
call
addr16
mov
add
popf
outsb
outsl
dec
or
mov
sbb
lock
inc
mov
and
xchg
add
cwtl
in
mov
cmpsl
jbe
push
inc
insl
outsb
mov
pop
aam
int
sbb
xchg
push
inc
mov
sub
outsb
add
push
add
push
and
test
daa
dec
ret
and
into
daa
xchg
mov
add
cmc
outsl
dec
lahf
dec
outsl
enter
outsb
into
jbe
sub
jmp
jne
xchg
cmpsl
enter
inc
shl
sub
cmp
mov
fwait
aas
je
pop
inc
mov
adc
in
fcomp
shr
test
inc
inc
add
gs
push
cmpsb
push
div
or
fnstcw
dec
loop
cwtl
xorl
xor
add
fistps
jg
scas
fs
push
out
jno
jb
jle
les
sbb
movsl
roll
roll
mov
xchg
insl
push
mov
out
push
fimuls
jns
push
inc
pop
nop
test
pushf
mov
cmp
inc
test
lea
jne
neg
or
mov
shld
adc
btr
sub
sbb
mov
bt
stc
push
stc
sub
call
sti
push
imul
bound
add
test
mov
aad
in
pop
pop
fdivrs
pop
mov
call
ret
push
push
push
in
inc
adc
push
mov
adc
icebp
adc
jbe
add
jl
dec
iret
mov
or
jns
pop
das
iret
aas
push
cltd
sahf
mov
or
repnz
scas
stos
sbb
dec
in
push
decl
addb
jmp
cli
cmpsl
push
pushf
cmc
cmp
pusha
movb
pushl
jmp
adc
push
pushf
lea
jae
push
push
jmp
call
lea
call
jmp
jmp
cmp
add
push
shlb
adc
mov
fwait
xchg
rolb
mov
ss
cmp
cmpsb
xlat
or
scas
nop
lock
mov
cmpsl
in
inc
jae
pop
push
pop
frndint
xchg
stos
pop
pop
lret
lahf
dec
leave
in
adc
gs
add
jge
ljmp
jecxz
dec
mov
and
add
cmpsb
adc
pushf
cmp
xor
mov
jo
test
shlb
mov
test
stc
cmpl
fistpl
fs
lea
jae
call
aaa
pop
das
add
mov
mov
out
and
ljmp
in
pop
or
push
mov
out
or
in
outsb
cwtl
clc
sub
loopne
and
sub
icebp
imul
or
sub
mov
cs
add
mov
inc
adc
jae
rcrb
dec
lock
mov
adc
popa
mov
jbe
lahf
adc
or
xchg
inc
or
jo
pop
dec
dec
clc
xchg
add
cld
insb
cmp
mov
xorb
cmpsb
test
stos
dec
loop
or
int
cmp
mov
xor
fiaddl
cs
and
ja
test
or
mov
shrl
sub
sti
stos
pop
xchg
pop
cwtl
popf
out
mov
add
jno
sbb
add
sub
lds
add
popf
popl
and
lea
je
bt
sub
cmp
cmc
cmp
push
lea
ja
stc
clc
imul
clc
clc
clc
test
add
pusha
movl
pusha
pushl
lea
jmp
adc
and
shrd
mov
not
das
bts
jmp
lea
je
cmc
push
call
jmp
pushf
push
stos
movb
pusha
pushf
lea
jmp
clc
pushl
popl
movb
clc
cmp
pusha
movb
lea
ja
shl
sub
btc
inc
add
shl
shl
bts
sar
mov
rcl
sar
jl
add
mov
jmp
lea
je
pusha
lea
jmp
roll
add
xchg
mov
jbe
bswap
daa
mov
sbb
xchg
jb
xchg
mov
aam
push
adc
lods
fsubrl
movl
push
pop
xor
pop
jae
push
mov
adc
jp
ljmp
mov
enter
shr
ds
leave
shr
test
mov
cmp
imul
cli
mov
mov
add
dec
push
add
cld
mov
das
sbb
add
add
xchg
xor
test
test
rcll
test
decl
lock
or
adc
jg
push
pop
repz
jmp
mov
lret
and
mov
mov
jno
dec
incl
pop
test
xlat
mov
adc
rorl
out
sahf
dec
mov
dec
sti
inc
push
sbb
adc
shlb
mov
pop
scas
mov
and
pusha
rep
movsbw
mov
pushf
lea
jmp
movl
pushf
pushl
push
movl
push
pusha
pushl
lea
jmp
jle
pop
jmp
inc
adc
rcr
mov
int3
dec
outsl
in
fimuls
adc
scas
xor
and
sbb
xorl
mov
or
and
inc
iret
push
sub
data16
sbb
popf
xlat
ror
out
mov
cld
roll
mulb
push
nop
push
dec
pop
push
xor
or
dec
jno
pusha
lret
test
dec
jmp
add
xor
clc
sbb
push
loop
pushf
mov
jmp
sbb
dec
push
hlt
in
popf
sub
jbe
push
mov
repz
cmpsb
and
and
cmp
cmc
gs
cmpsb
xchg
gs
push
push
xlat
or
call
in
xchg
mov
inc
or
popa
xor
and
lods
or
pop
hlt
in
push
jmp
ljmp
adc
shlb
test
jno
mov
out
fdivs
or
push
out
mov
ret
xor
cltd
dec
lret
pop
push
pusha
adc
adcb
inc
xor
test
into
mov
push
popf
mov
aaa
test
ret
dec
pop
dec
dec
lahf
adc
jmp
repz
xchg
add
add
dec
rorb
push
sub
aaa
or
ja
dec
sub
xorb
out
jmp
fidivrs
sahf
or
imul
stos
add
xchg
mov
fwait
sbb
or
dec
cltd
jns
lock
xor
icebp
cltd
imul
fwait
outsl
inc
sarb
in
pusha
pop
je
push
mov
fidivrs
rcrb
fwait
cmp
out
pop
mov
pop
scas
leave
sbb
jnp
jae
push
pop
xchg
fisubrs
add
cmpsb
sbb
lock
or
pop
ss
jb
repnz
jp
adc
jle
addr16
movsb
mov
mov
xchg
rorb
jmp
push
pushl
mov
push
lea
jmp
lea
je
bswap
add
ror
clc
setbe
stc
sub
and
bts
shr
mov
pusha
cmp
mov
rcr
add
sub
pushf
shl
mov
add
call
pop
pushf
push
call
lea
call
call
leave
jbe
std
movsb
push
divl
mov
fists
mov
and
or
shlb
mov
or
pop
fstpt
in
mov
mov
cmp
mov
sbb
pusha
das
and
repnz
or
test
lock
shll
inc
xor
sbb
div
sub
paddb
xchg
push
adc
rcl
mov
jbe
movsb
cmp
imul
jecxz
stc
clc
add
add
call
lea
je
call
push
jmp
fcomi
out
icebp
unpckhps
jns
fstl
adc
out
adc
repz
fisttpl
loope
jns
fistl
jns
out
jns
fcomi
notl
out
icebp
jns
fnstsw
jmp
repz
out
jecxz
loope
cmc
adc
outsl
adc
movsb
push
dec
dec
in
fisttpll
mov
sbb
inc
out
roll
and
xchg
mov
mov
inc
adc
sub
adc
pusha
xor
add
jecxz
and
jp
xchg
bound
inc
adc
sub
sbb
sbb
push
and
in
or
jns
xchg
je
adc
mov
mov
leave
pop
loope
lcall
mov
xor
lcall
push
pop
dec
pop
jmp
mov
out
scas
dec
jg
inc
lods
mov
loope
gs
test
out
ss
mov
lahf
mov
dec
mov
cmpl
xor
fcoms
test
mov
cmp
mov
shrl
test
xor
imul
dec
jle
daa
fwait
rolb
shrl
xorl
lea
call
push
pushf
lea
jae
test
pushf
pusha
xor
call
mov
mov
movsb
push
pop
sub
mov
mov
sub
or
ljmp
sbb
lods
cs
repnz
or
mov
xchg
adc
outsb
push
lahf
ret
in
movsb
mov
and
push
add
add
iret
cmc
or
ret
xchg
lret
pushf
jl
ret
aam
inc
push
jnp
cmp
movsl
outsl
dec
scas
xchg
testl
xchg
fisubrl
add
jle
arpl
mov
movsb
push
fmull
push
jmp
nop
pusha
xchg
xor
mov
jp
or
pop
mov
jne
or
movl
lcall
lret
and
icebp
mov
subl
mov
inc
stos
iret
mov
movsb
test
cwtl
imul
out
jecxz
insb
mov
cmp
rolb
and
fisubs
sub
jne
cmc
pushl
bt
push
cmp
call
xchg
mov
stc
movsb
push
sub
dec
or
sub
lods
loop
cltd
jne
clc
and
jbe
call
out
xor
inc
mov
shll
jbe
or
cmp
pop
and
add
jne
popf
cmp
faddp
inc
mov
push
pop
fwait
sub
scas
jg
mov
bound
dec
jo
fcoms
rcrl
fisttpll
xorb
add
popf
xchg
jne
mov
mov
iret
lock
sub
cld
pop
movb
call
xchg
push
stc
movsb
push
mov
mov
xlat
daa
mull
dec
pop
fs
sahf
lea
mov
jmp
lock
jge
jnp
out
sub
mov
xchg
jo
mov
inc
push
mov
fdivs
xchg
mov
in
or
jno
data16
fs
mov
mov
push
pop
iret
arpl
iret
outsl
dec
stos
pop
setae
mov
jmp
aaa
cwtl
cmp
or
push
ss
movsb
push
jbe
pop
out
push
js
mov
pop
adc
js
out
hlt
push
movsb
adc
lahf
inc
ljmp
inc
pusha
andl
or
sbb
mov
fs
sbb
shlb
dec
or
or
xorl
and
lret
out
xchg
hlt
fisubl
xor
sbb
mov
fwait
pop
or
jnp
pop
push
dec
neg
sar
mov
cmp
cmpb
call
jmp
add
xor
jae
in
aad
jne
insb
xor
lock
adc
sub
mov
mov
push
xchg
mov
mov
notb
stos
mov
imul
pop
mov
scas
push
gs
not
fwait
jge
lcall
and
dec
test
or
call
jmp
cmp
cmp
pusha
call
rcl
setnp
mov
shl
not
shl
add
or
not
ror
rol
mov
bt
test
test
push
movb
call
movw
movl
pusha
push
pushf
lea
jmp
push
lea
jne
push
lea
jmp
daa
dec
aas
mull
or
mov
insl
outsb
out
mov
sbb
ror
xchg
sub
cld
test
push
into
jnp
nop
out
fidivl
sub
out
adc
cmpl
insl
out
fwait
aas
int
push
lcall
in
adc
xor
adc
stos
push
sbb
adc
dec
mov
fwait
cmp
xor
push
ss
movsb
mov
push
jo
pop
pop
repnz
mov
aaa
or
je
in
inc
cmp
adc
sbb
lea
je
pusha
cmp
mov
movb
lea
je
clc
pushf
stc
cmc
cmp
pusha
jmp
pop
sub
movsb
push
stos
mov
in
lods
fidivrs
aas
mov
push
mov
imul
out
dec
iret
rorb
insb
dec
mov
jb,pn
sbb
and
sbb
mov
ret
cmp
popl
pop
cmp
and
movsl
mov
test
push
cmpsl
pop
lods
test
xor
aas
in
lcall
jo
dec
scas
xchg
inc
lods
adc
lds
or
push
inc
repz
std
mov
adc
popl
push
mov
pushf
pushl
pushl
ret
mov
shld
btc
test
movzbw
mov
ror
push
bts
movsbl
test
adc
push
bt
shrd
stc
push
or
shl
sbb
xor
push
or
sbb
bts
rcr
push
add
test
bt
mov
pusha
bts
jmp
repnz
ljmp
mov
movsb
je
inc
mov
sub
adcb
leave
add
xor
cli
pop
lock
pop
loopne
imul
pop
ja
jne
std
and
pop
das
stos
pop
stos
into
fs
in
sti
xor
in
adc
xlat
pop
push
pop
sbb
or
or
push
mov
sbb
cmp
fimull
and
int3
mov
enter
fldt
and
cmpsl
dec
inc
add
add
add
popa
jb
add
add
std
call
add
add
add
icebp
adc
add
add
xor
add
and
add
and
add
add
js
sub
add
add
shl
adc
add
repz
add
repz
push
push
add
add
jb
add
daa
fcomps
inc
sub
mov
bnd
lcall
add
mov
dec
inc
add
mov
push
push
pusha
aam
cmp
adc
mov
add
in
mov
cmpb
faddp
and
leave
push
fcmovu
cli
pusha
fadd
leave
outsb
ss
push
dec
ret
aad
dec
js
or
push
out
test
xor
sub
mov
or
dec
test
add
repz
mov
sub
sti
push
leave
sti
or
fwait
jp
cmpsb
jmp
idivl
lcall
or
push
arpl
inc
int3
lods
sbb
ret
mov
std
fisubrl
insl
hlt
jns
xor
or
lods
jl
sbb
xchg
ja
nop
cli
adc
popf
sbb
inc
pop
and
dec
movb
js
lea
xchg
icebp
inc
outsb
pop
repnz
sahf
and
mov
jbe
sub
lret
add
mov
movsb
imul
dec
mov
adc
dec
xchg
imul
lret
stos
xchg
pop
xlat
jo
movsb
repz
int3
sbb
jle
mov
mov
lods
cmpl
in
inc
lret
gs
push
xor
into
mov
adc
pop
or
int
push
or
sbb
mov
pop
xor
imul
das
enter
xor
inc
adc
pop
stos
addb
jbe
rcl
mov
mov
xorb
sub
xor
mov
and
mov
push
out
xchg
inc
sti
movsl
push
add
icebp
popa
stos
comiss
pop
mov
shll
pop
mov
push
push
aas
lret
and
jns
cmp
scas
mov
fsubp
xchg
imul
outsb
push
popf
mov
xor
add
in
rol
dec
pop
sub
sti
pushw
mov
add
mov
repnz
xchg
inc
mov
in
mov
dec
inc
stos
je
outsb
dec
cwtl
pop
push
movb
lods
sub
xor
mov
out
sbb
cmp
jb
xchg
ljmp
int3
imulb
dec
pop
out
push
mov
in
ds
cmc
jg
mov
push
das
xor
sub
pop
add
or
sub
sub
sub
cmp
sbb
outsl
mov
adc
push
mov
lock
bound
jge
int
addl
popa
mov
inc
add
mov
push
pop
test
dec
cs
mov
push
inc
loope
mov
push
or
fprem1
ja
scas
adc
out
jge
movsb
jo
testl
rolb
adc
sub
dec
jl
inc
sbb
mov
scas
inc
addl
push
in
roll
idivb
and
jle
cmp
scas
adc
clc
cld
sbb
mov
sbb
orl
int3
nop
cltd
sbb
jg
sbb
fsts
inc
rorl
sbb
into
daa
in
cmp
lock
and
aas
out
inc
dec
fldenv
dec
and
shrl
cmpsl
inc
loopne
push
sbb
lods
scas
jge
popf
loope
jecxz
ficompl
push
sub
adc
dec
sub
cvtpi2ps
push
loope
adc
shll
pop
arpl
adc
and
mov
in
push
into
sub
pop
adc
in
mov
out
ds
jmp
hlt
outsl
mov
imul
bound
int
cld
mov
ja
cwtl
imul
into
inc
lea
sbb
dec
cmpsb
insl
push
vandnps
lods
jae
pushf
loopne
jg
pop
sub
or
pop
fadds
lret
inc
push
insl
dec
ret
dec
pushf
push
push
jne
addb
add
lret
js
mov
sbb
or
cmp
add
in
mov
aas
jl
ja
pop
iret
lock
cmp
and
mov
outsb
jmp
push
xchg
subl
ljmp
xor
mov
idivl
sahf
aas
aam
outsl
iret
jb
mov
pop
inc
cmp
xor
outsb
cmp
movsl
mov
pop
idivb
cmpsl
lret
daa
iret
sub
leave
mov
cmp
mov
jp
enter
xlat
scas
pop
xorl
fsubrs
cmp
cli
into
arpl
clc
fcoms
inc
cmpb
cltd
mov
xor
jmp
popf
test
xor
push
mov
lods
out
or
xchg
sub
scas
stc
cmp
lret
jae
jecxz
sub
lods
cwtl
or
inc
add
test
sub
push
out
lret
out
mov
pop
mov
adc
or
notl
mov
sarl
mov
in
loop
xchg
jp
jae
xchg
and
mov
xor
push
xor
ds
int3
push
add
sub
add
sbb
sbb
mov
fnstenv
scas
push
jle
cmp
test
pop
call
and
or
punpckhdq
dec
xor
and
leave
adcb
jb
adc
jo
cmp
movsb
sub
adc
sub
int
mov
sbb
addr16
out
mov
push
aam
lea
sbb
mov
inc
and
ret
sbb
out
mov
fsubrl
inc
inc
xchg
pop
or
sbb
xchg
jbe
pop
lock
jmp
cmp
bound
ficoms
outsb
sub
xchg
les
stos
outsb
adc
out
outsl
or
sub
rorb
sub
xor
cmp
xchg
inc
inc
xchg
xchg
fists
data16
pusha
enter
sarb
push
out
and
test
imul
inc
dec
mov
ficompl
xchg
jb
add
mov
je
push
fs
jb
in
mov
stc
pop
lea
shlb
inc
pop
stos
inc
lret
imul
adc
movsl
sub
inc
mov
add
adc
mov
cltd
imul
add
push
sbb
inc
dec
adc
mov
lea
sub
clc
jae
rolb
jnp
inc
dec
push
popa
inc
jae
pop
stc
inc
stos
dec
mov
in
ljmp
mov
and
sub
mov
lds
push
orb
mov
lcall
mov
incb
xchg
addl
sbb
mov
in
mov
dec
out
jno
or
shlb
pusha
cmp
js
mov
dec
mov
lea
inc
call
cmp
out
xor
push
insl
fiaddl
vmaxps
sbb
lods
imul
fimuls
adc
test
and
push
inc
dec
adc
aam
in
ja
xor
ss
xchg
mov
stc
xor
sbb
lret
stos
mov
into
mov
push
or
mov
mov
fsqrt
or
or
jecxz
and
loopne
pop
jl
mov
int
jmp
enter
pushf
int3
and
mov
mov
xchg
cmp
leave
xchg
div
xchg
data16
call
cltd
dec
nop
adc
sti
jmp
mov
push
jbe
je
inc
rcl
sbb
test
jmp
pop
xchg
jecxz
push
jnp
and
sbb
and
cmp
fucom
pop
sbb
insb
push
data16
sahf
mov
rcrl
cmp
sub
push
adc
dec
jbe
inc
imul
mov
lahf
lea
flds
dec
cmpsl
sbb
xchg
cmc
pop
sub
adc
lods
movsb
push
nop
mov
xchg
lahf
xor
jb
pmulhw
jmp
push
cmpsl
and
sbb
mov
add
test
jne
inc
hlt
cld
jae
stc
mov
test
test
add
popa
pop
add
call
xor
push
dec
sbb
cmp
stos
sar
loop
mov
and
push
and
lahf
ljmp
adc
js
and
jo
or
inc
xor
mov
ret
cmp
jle
inc
data16
les
fmull
stc
lea
push
add
shrl
add
mov
lcall
lock
pop
notl
inc
in
and
xor
push
daa
or
cmc
or
mov
mov
ja
shl
sub
or
or
xchg
xorl
add
xor
cmc
test
cltd
fs
cmpsl
sub
movsl
lock
mov
fisubrl
test
pop
or
in
rol
inc
push
ror
orb
movsb
and
mov
sub
out
into
lcall
jae
xchg
and
or
xor
inc
outsl
jns
lods
push
adc
nop
mov
add
or
xor
or
mov
lret
in
inc
or
xchg
pop
mov
xchg
cltd
insl
cld
scas
fs
inc
iret
iret
or
shrb
rcll
ja
sbb
imul
mov
xchg
xor
xchg
pop
xchg
leave
adc
outsl
mov
mov
jl
clc
push
inc
or
pop
xchg
mov
pop
mov
mov
mov
jae
cmpsl
insb
inc
adc
sahf
sti
push
mov
repz
dec
stc
loop
lds
mov
cmp
inc
fiadds
sbb
stos
hlt
jns
dec
call
push
and
xchg
mov
sub
loop
cmpsl
push
xchg
test
nop
rolb
rcl
push
cmp
cmp
add
out
push
arpl
jno
lea
inc
jno
xor
pop
lret
leave
mov
cmp
test
hlt
cld
jge
xor
daa
comiss
and
sbb
ljmp
aas
insl
dec
pop
add
push
shlb
mov
dec
cmp
out
adc
push
iret
mov
and
jecxz
cmpsb
push
dec
or
push
fists
in
jecxz
adc
fistpl
inc
mov
aam
pop
push
pop
popa
or
mov
inc
inc
adc
ret
jno
xchg
xchg
adc
mov
push
lods
stos
aad
and
sub
jmp
and
ret
mov
mov
sbb
mov
cmp
dec
rol
push
popa
dec
xchg
fs
cmp
and
sbb
mov
inc
push
push
add
ficomps
sub
js
fwait
mov
call
jp
mov
sbb
pop
dec
fs
das
cmp
movsl
xchg
int
push
push
xor
sbb
jb
fs
insb
add
add
lea
jne
call
jmp
mov
xor
test
movsl
dec
stc
leave
fwait
scas
mov
pop
scas
fnstenv
sarl
addr16
and
and
bound
inc
roll
adc
loop
enter
hlt
in
std
push
xor
in
xchg
add
fs
xor
push
scas
push
iret
aas
inc
mov
ja
add
xchg
popf
ret
mov
fs
int3
clc
mov
clc
aam
xchg
call
pop
icebp
push
lret
imul
in
cmp
dec
ja
call
jae
pushf
inc
inc
pushf
mov
setbe
not
inc
push
jmp
mov
movb
movzbl
movsbw
push
not
bswap
sets
lahf
lea
pushf
jmp
and
mov
jmp
inc
arpl
in
push
in
test
fsubr
jns
push
rol
cmc
and
xorb
clc
cmp
lods
fistpl
or
jb
push
xchg
addr16
mov
push
add
adc
pop
jns
scas
push
mov
adc
sbb
xchg
aaa
mov
mov
imul
or
outsl
pop
xlat
dec
out
in
mov
and
mov
inc
dec
maxsd
out
and
inc
mov
push
loop
repz
jno
and
imul
xchg
shll
stos
lahf
inc
xchg
jp
push
inc
inc
mov
or
ljmp
xor
inc
and
mov
rcl
or
xchg
push
jns
jge
mov
sub
cmc
ljmp
lret
or
scas
dec
fidivrs
push
xor
jae
mov
pop
dec
fucomip
pop
fnstenv
push
xchg
inc
int
clc
xchg
enter
jl
leave
mov
xlat
or
pusha
shrb
mov
xchg
outsb
and
lods
daa
jnp
fimull
hlt
xchg
icebp
test
push
insb
dec
cmp
dec
jae
mov
mov
test
fcoml
push
sub
pusha
cmp
pushf
lea
jae
pushf
lea
jmp
movb
push
mov
mov
pushf
mov
lods
pushl
movb
test
sub
jmp
push
pushf
lea
ja
push
pusha
sub
test
movzbl
lea
add
xor
or
mov
xor
rcr
ror
mov
stc
stc
cmp
push
repnz
call
lea
call
pushf
lea
jne
movsbw
call
lea
jne
movzbw
jmp
push
mov
movsbw
push
mov
pushf
pushl
ret
test
mov
filds
pusha
jno
and
mov
rcrl
adc
mov
cmpb
xchg
sarb
sbb
lods
inc
dec
sbb
mov
repz
icebp
cli
pusha
pop
loope
gs
fsubrs
add
lcall
testl
ss
xchg
stc
fnsave
mov
cwtl
jl
push
mov
es
mov
lahf
aas
repz
in
fiadds
mov
movsb
push
add
mov
mov
xchg
xchg
gs
fnstcw
mov
call
push
std
pushl
loop
cld
roll
mov
or
cmpsb
ljmp
lahf
sbb
adc
push
cli
ljmp
sbb
push
ss
xchg
xor
adc
pop
insl
xchg
sbb
clc
call
sbb
aaa
orl
jmp
test
jl
mov
jge
addr16
sub
add
cmp
movsb
push
rol
add
jae
adc
jae
jb
and
mov
roll
outsb
mov
jmp
and
ret
cmp
rcrl
in
cltd
xchg
adc
mov
add
push
subb
popa
call
sahf
ds
sbb
out
adc
rorb
call
pushf
mov
stc
lea
out
mov
xchg
call
and
jne
or
mov
mov
clc
push
cmp
push
add
push
movzwl
pushl
mov
call
push
add
mov
pushf
pushf
pushf
lea
jmp
std
stos
fnstsw
movsb
push
sbb
jmp
lock
daa
or
xchg
push
cli
mov
imul
clc
dec
mov
jp
stos
cmp
push
jnp
jae
xchg
jg
sbb
mov
test
sti
sar
mov
outsl
xchg
shlb
push
insl
das
xorl
scas
or
das
add
xchg
je
push
mov
jae
pop
fistl
stos
or
and
mul
lock
mov
xchg
clc
std
jno
jmp
callw
push
mov
sub
pushf
bswap
not
mov
pop
mov
call
lea
jae
jmp
out
fwait
out
loopne
push
mov
addl
hlt
add
jae
sbb
cmp
nop
test
mov
je
lds
mov
jmp
adc
loope
sbb
fdivrs
inc
jmp
call
js
out
fbld
jl
fisubrs
iret
rolb
loop
xlat
push
jns
jl
mov
or
mov
add
les
mov
xor
or
or
inc
ss
xor
lods
lea
lods
jg
or
xor
ja
or
in
leave
je
and
lret
pop
pop
dec
add
xor
lods
loopne
ja
arpl
sbb
inc
mov
rcl
mov
call
add
xchg
daa
sub
xor
adc
sub
sub
fwait
daa
sub
shrb
add
add
add
add
add
test
add
sub
xor
adc
inc
push
sub
add
inc
and
sub
and
push
pushl
lea
jmp
xchg
mov
xchg
daa
loopne
fsubl
push
xor
push
cmp
mov
push
sub
cmp
push
cs
cmc
test
stos
mov
movsl
movsb
scas
xor
out
inc
dec
mov
mov
and
gs
mov
xchg
rorb
sub
pushf
inc
xor
mov
add
sub
sbbb
loop
and
test
int
loopne,pn
dec
mov
mov
out
test
jae
lods
mov
adc
jecxz
imul
mov
cmp
daa
mov
inc
and
and
mov
mov
movsl
es
sbb
cltd
in
cmpsb
cmp
mov
aaa
inc
xchg
movsb
out
mov
fldcw
pop
test
repnz
sbb
leave
sarb
sub
daa
test
stos
adc
sub
dec
movsl
stos
sub
and
mov
addr16
and
les
fcomps
push
pop
and
into
pop
jge
movsb
inc
xor
cs
mov
dec
popf
and
bound
jge
ret
andb
push
mov
cmpsl
movsl
push
dec
shll
fnstcw
lret
xchg
adc
pop
movsb
mov
mov
pop
ljmp
add
xchg
cltd
push
cmc
loopne
adc
loopne
popa
fbld
fdivs
push
mov
nop
xchg
fbld
test
add
xchg
into
jno
pop
inc
cmp
das
xchg
daa
cmp
std
cmp
add
stos
cmp
shrb
push
sub
jl
loopne
jns
cli
mov
jecxz
adc
cmovno
popa
arpl
xor
jl
sbb
dec
nop
sub
jno
mov
faddp
loope
outsb
popa
movsb
shlb
sahf
movsb
push
lret
and
inc
outsb
popa
cwtl
jns
push
xor
test
push
push
div
dec
add
and
push
push
push
arpl
adc
cld
dec
and
mov
cmp
xchg
sahf
inc
pop
mul
push
xchg
mov
push
fmuls
cmp
jb
scas
fcomip
sbb
add
int
or
call
add
fcmovne
mov
xchg
mov
push
xor
dec
jne
out
movsb
mov
cmp
sbb
jno
lea
in
xor
test
movb
or
and
dec
sub
push
push
xor
lock
stos
gs
popf
aaa
enter
or
addl
mov
pop
cmp
and
out
add
and
and
xor
mov
jle
cld
xor
test
popf
mov
out
xor
dec
sub
cli
movsl
pop
aaa
or
pop
gs
cmpsb
xor
adc
sub
cmp
push
out
xor
fs
or
sbb
sbb
sub
fistl
lods
add
leave
das
out
cld
loop
pop
popa
add
gs
xchg
add
fsubr
inc
add
add
fistl
ja
and
test
or
mov
out
or
xchg
inc
jne
xchg
test
lcall
sarb
ja,pt
mov
in
and
int3
stos
jmp
sub
repz
or
sub
mov
test
dec
dec
das
and
mov
add
jmp
jb,pt
mov
cmp
push
out
out
loopew
mov
imul
scas
call
adc
test
ds
sarl
and
or
add
stos
pop
and
cmp
movsl
mov
jne
je
das
movsl
stos
std
xor
adc
mov
imul
addb
add
mov
mov
adc
inc
dec
mov
ss
in
inc
fisubs
inc
lods
aam
fmuls
aaa
inc
jg
and
xchg
lahf
andb
dec
jae
js
inc
das
in
mov
inc
iret
test
stc
scas
sub
rol
and
jnp
dec
idivb
push
repz
outsb
stos
xchg
dec
adc
cmp
in
rcrl
and
out
dec
test
enter
popa
and
sub
xchg
dec
add
ficompl
fcoms
invd
enter
sbb
cld
imul
and
stos
adc
xchg
push
mov
dec
xchg
push
sub
inc
cmpsb
cmp
sub
push
das
xor
mov
pop
push
iret
dec
loopne
inc
addb
add
push
mov
repnz
arpl
daa
pusha
loope
adc
test
sbbl
adc
push
into
push
fidivrl
adc
lods
sub
push
popa
adc
push
mov
imul
mov
and
loop
xchg
cmc
movsl
in
add
scas
test
mov
es
ss
lret
in
xchg
dec
icebp
inc
scas
daa
xchg
pop
leave
pushf
mov
movsb
dec
xchg
pushw
cmp
jecxz
iret
andb
mov
scas
adc
cmpsl
call
fsub
xorl
push
add
mov
fldt
out
xchg
dec
fwait
jno
push
das
lret
push
imul
fwait
iret
xor
sahf
ret
sahf
dec
lahf
cmp
in
push
pop
xchg
sub
mov
cmpsb
test
lret
and
mov
lahf
iret
fsubl
mov
pop
sub
in
int3
inc
mov
cmpb
jg
push
into
iret
faddl
sub
sub
adcl
xchg
shrl
nop
add
and
cmp
sbb
cmovp
cli
add
into
xchg
scas
int3
xor
int
stos
popa
pop
repz
stc
test
mov
push
lods
addr16
test
mov
or
fdivp
xor
loopne
jno
xchg
mov
into
add
loope
xchg
adc
lods
neg
jno
loope
and
sub
jo
daa
dec
sub
ret
xor
dec
scas
xchg
mov
cmpsl
push
sub
xchg
add
mov
dec
or
cmp
add
icebp
cwtl
mov
test
pop
mov
sub
inc
scas
lods
add
imul
push
sarl
clc
insl
les
in
out
daa
push
push
dec
cmp
mov
addb
push
push
mov
hlt
jmp
fbld
lcall
hlt
sbb
ret
daa
and
movsb
pop
and
push
lahf
shlb
daa
pop
mov
iret
sbb
test
imul
push
and
and
lcall
xor
and
test
es
popa
cltd
inc
ds
pop
inc
xor
sbb
lods
test
adc
lahf
sub
sub
sbb
dec
fisubs
lcall
cmpsb
das
xchg
out
sti
sbb
in
cmpsb
stos
test
cmc
les
xchg
test
mov
push
and
add
jo
loop
push
xor
push
loopne
mov
mov
jo
push
pop
iret
out
jecxz
out
sub
push
inc
in
addb
jnp
pop
sbb
cmpsb
fmul
mov
push
dec
je
daa
dec
lds
aam
jne
or
pop
xchg
popf
lods
test
jae
icebp
loope
push
andl
pop
mov
adc
inc
xor
and
sbb
mov
stos
add
and
xchg
adcb
pop
sbb
mov
mov
jle
xor
push
scas
and
push
xchg
mov
insl
pushf
daa
sub
leave
imul
test
mov
or
movsb
xchg
inc
and
sbb
sub
push
mov
aad
jae
aaa
cmp
pop
loop
xor
imul
cmp
inc
mov
movsl
push
inc
dec
dec
in
sub
cmp
xchg
cmp
jmp
xchg
lods
inc
jmp
lods
inc
jmp
lods
ret
jmp
int3
mov
xlat
leave
mull
jne
jg
jle
outsb
orb
ret
mov
dec
sub
inc
aaa
daa
out
mov
ljmp
ret
sub
xor
sub
jb
mov
daa
xor
cmp
out
mov
inc
cwtl
inc
test
sarl
into
repnz
xor
push
movsl
pushf
xor
xor
rcrl
bound
sbb
dec
dec
mov
test
fwait
inc
lahf
and
outsl
das
cmp
xor
jmp
daa
lods
inc
jmp
lods
lds
outsl
ja
push
cmp
dec
data16
imul
sub
das
sub
jg
jno
daa
dec
int3
loop
popf
mov
jb
insb
movsl
jb
push
sub
mov
add
mov
pushf
mov
pop
cli
cwtl
xor
mov
scas
inc
fbld
stos
daa
mov
pop
lods
xor
sub
mov
scas
lds
sub
add
jne
xchg
push
rcll
dec
lahf
mov
mov
or
sub
popa
inc
pop
fistpll
das
sar
cmpsb
xchg
mov
adc
mov
sub
clc
cld
jecxz
sub
jmp
int
mov
cmp
cli
cld
cmpsl
mov
daa
inc
in
and
shrb
mov
sbb
push
jge
add
loop
and
jns
sub
mov
sahf
push
mov
pop
int3
outsb
mov
mov
sub
dec
push
loope
push
or
pusha
addr16
jo
or
xchg
lcall
ret
xchg
jecxz
pushf
clc
sub
add
subl
lahf
cmpsb
mov
mov
jae
aas
imul
add
lods
dec
insb
sub
cmp
xorl
sti
pop
movsl
outsb
xor
jmp
lds
sub
sub
mov
pushf
sub
stc
xor
rcl
mov
aad
dec
test
lahf
faddp
shl
sub
scas
inc
es
pusha
and
push
mov
cmc
xor
fwait
sahf
inc
xor
xor
mov
mov
dec
loop
lret
daa
sbb
lds
and
call
add
and
ds
enter
mov
in
inc
sahf
ljmp
sub
mov
popa
cmp
popa
out
enter
mov
add
inc
cmp
lods
pop
ja
add
push
mov
into
xchg
push
loop
add
add
movsl
add
and
repnz
mov
aas
rcrb
mov
leave
movsl
and
test
out
and
and
in
lahf
xchg
xor
and
repnz
es
mov
out
xor
jns
and
xchg
fidivrl
stos
aaa
add
xor
addr16
mov
ljmp
inc
cmp
mov
mov
jne
mov
repnz
je
outsb
scas
imul
ss
add
pop
jg
aas
inc
test
dec
push
and
loope
xchg
stos
lds
dec
push
lret
mov
inc
dec
cmp
mov
das
add
xor
push
sub
inc
xor
sub
movsl
push
popf
sub
les
es
movsl
xchg
xor
cmp
add
add
cmp
ret
scas
roll
inc
lret
in
outsl
push
xchg
push
inc
mov
xor
xor
outsl
xor
leave
int
mov
sub
fldpi
movsl
std
int3
mov
outsl
push
mov
or
add
loop
ja
daa
popa
fldt
cltd
out
xor
add
xchg
mov
icebp
jge
push
or
sub
mov
das
push
xchg
pop
arpl
in
inc
movsl
int3
cmpb
int3
push
or
maskmovq
testl
and
enter
inc
jmp
sub
or
pop
sub
mov
je
and
daa
lods
repz
iret
jb
jecxz
xor
popa
cmpsl
xchg
mov
mov
div
inc
icebp
es
fcmovnb
push
xor
add
add
out
xchg
sbb
sarl
addr16
shrb
lahf
fcoms
mov
in
es
das
fwait
mov
pop
in
insl
cltd
and
and
jecxz
push
jecxz
gs
push
arpl
sbb
or
lods
fldt
xor
icebp
test
inc
xor
cli
imul
sti
test
test
cmpsb
mov
inc
fstpt
fisttpl
lds
das
inc
lods
stos
imul
jl
mov
pop
subb
add
outsl
sub
repnz
sbb
icebp
cmp
xor
repz
fwait
push
inc
scas
out
stos
push
andl
cmpsl
das
mov
and
daa
sub
push
xor
int
xchg
and
jmp
arpl
mov
inc
xchg
jmp
movsb
sub
xchg
sub
mov
ret
idivl
outsl
call
sub
out
push
add
jp
xchg
lods
fwait
sub
lds
add
in
jbe
push
sbb
lret
stos
lods
sub
lea
and
insl
sub
divb
and
lds
pushf
xlat
xor
and
and
sub
or
adc
xor
push
mov
and
xchg
loopne
movsl
xchg
push
jp
je
iret
and
push
imul
push
mov
sbb
test
cmpsl
dec
aaa
pop
cmp
mov
sub
mov
pop
loop
and
cmp
mov
add
repnz
sub
mov
es
xchg
sub
jp
xor
xchg
jmp
jno
imul
out
sub
cmp
insb
aaa
lds
ds
mov
push
int3
xchg
adc
push
js
jno
pushf
cs
sub
out
mov
mov
xchg
mov
add
mov
cmpsl
xor
movq
shrl
int3
mov
fistps
xchg
mov
inc
loop
cs
cwtl
cmpsb
add
inc
jl
dec
push
cmp
out
jg
mov
movsl
dec
push
jo
xor
lahf
int
sub
aam
inc
sub
lret
les
add
sub
in
sbb
sub
rolb
test
leave
movsl
xchg
std
andb
sbb
pop
imul
test
addr16
shll
mov
mov
pop
cmp
cwtl
mov
std
mov
daa
out
test
push
es
in
test
push
inc
cld
pushf
push
rcrl
lret
lahf
cmp
ret
adcb
add
jmp
gs
add
xor
or
addl
cmp
cmp
fwait
sub
movsb
inc
out
lea
loop
jbe
sbb
xor
popa
dec
add
rorl
lret
mov
ret
xchg
cmp
cmp
cs
pop
pop
gs
mov
mov
repnz
cmp
je
and
cmp
add
jb
mov
mov
outsl
mov
mov
gs
and
pusha
es
mov
jg
jno
mov
mov
pop
loope
sub
ret
mulb
aad
inc
mov
ficompl
lods
push
popf
in
xor
icebp
jl
mov
inc
inc
test
jnp
and
dec
cmp
xor
cmp
cmp
scas
sub
inc
icebp
stos
xchg
sarl
mov
mov
jge
stc
jmp
inc
ss
cmpsl
gs
lret
xor
cmp
jg
cmp
push
out
pop
das
insb
add
arpl
sub
and
fndisi(8087
add
mov
add
push
repnz
add
xor
and
xchg
dec
outsb
popa
dec
add
in
fs
imul
test
sub
mov
jmp
push
cmpsl
add
scas
mov
push
dec
std
inc
adc
inc
xor
mov
xchg
stos
inc
push
imul
xchg
mov
inc
addr16
stos
or
inc
es
add
jb
addl
das
rcrb
dec
imul
pusha
popf
dec
jmp
in
dec
adc
pop
ds
adc
sub
sbb
out
push
xor
add
repz
xchg
jg
andl
jecxz
mov
movsb
cmpsb
push
ret
test
or
or
push
sub
sti
cs
test
adcl
pop
jns
sub
mov
cli
cmp
movsb
shrl
aaa
mov
test
aas
push
fstpt
inc
inc
pop
addr16
inc
mov
movsl
dec
mov
ds
mov
out
pusha
push
jecxz
ss
icebp
sub
loope
jp
dec
xor
cmpsl
into
pop
into
lahf
insl
je
lds
pop
inc
push
mov
stos
mov
xor
dec
imul
pop
shr
sbb
xor
sti
xorb
and
push
int3
sub
daa
test
push
push
std
repz
mov
fbld
jae
stos
mov
cmp
ljmp
pop
mov
lahf
divl
cmp
dec
mov
test
lock
into
pop
cmpsl
cmp
inc
mov
push
sbb
in
and
add
int
scas
cltd
daa
inc
addr16
inc
jno
bound
mov
repnz
sarb
xor
out
movsl
clc
hlt
shlb
jbe
inc
ret
jl
add
movsl
aam
mov
xchg
sub
add
in
sbb
push
mov
xor
jae
sub
sub
shlb
inc
jbe
xchg
jmp
sub
inc
test
inc
inc
xor
mov
adc
mov
xchg
gs
sahf
fs
jmp
std
jecxz
inc
inc
sub
and
cmp
mov
sahf
inc
scas
mov
pop
and
sub
pop
movsb
xchg
xor
mov
gs
icebp
xor
mov
sub
and
imul
addr16
pop
mov
jle
cmpsb
cli
fidivl
out
inc
and
les
push
bound
int
lods
dec
push
testl
test
adc
xchg
mov
sti
xchg
fs
pop
aas
popf
and
xchg
shll
mov
xchg
dec
scas
icebp
hlt
cltd
shll
lods
test
lods
sub
and
scas
cmp
mov
dec
or
imul
gs
and
call
loop
push
out
mov
test
add
incl
pop
xor
jns
test
inc
xor
rclb
gs
pop
scas
push
in
sub
push
cwtl
ret
bound
sub
mov
pop
push
pop
ss
out
and
push
in
mov
xor
and
add
mov
inc
dec
pop
push
sub
aaa
lea
mov
and
pushf
cmpsb
ficoms
test
push
in
jmp
push
jae
pop
sub
in
cltd
lock
xor
loop
add
jecxz
mov
push
popa
filds
ja
rol
stos
push
pop
and
inc
aaa
mov
push
andl
sub
data16
scas
loop
ja
add
lods
add
jl
les
stos
inc
cmp
inc
pop
jne
cltd
jmp
and
and
xchg
and
mov
pop
add
sub
sub
xlat
mov
xchg
das
ret
inc
enter
call
ss
cmp
lods
add
pop
cmp
aaa
aas
pop
jae
ss
stos
inc
and
test
fldt
xor
mov
xor
call
mov
lret
inc
in
daa
dec
pushf
insl
test
andb
sbb
pop
mov
sarl
fsubl
push
mov
lods
inc
sti
and
mov
je
xchg
mov
fists
cwtl
imul
movntps
sub
mov
xor
into
iret
iret
push
mov
pop
daa
out
and
sub
fldt
mov
loope
jae
popa
fstp
jne
mov
adc
xchg
dec
sbb
sub
xor
pop
mov
lahf
add
test
dec
and
aas
dec
mov
sbb
lret
push
push
mov
cmp
cmpb
lahf
pop
sub
popl
into
cmpsb
pop
xchg
pop
mov
daa
and
push
mov
imul
mov
or
xor
popf
sbb
xchg
pop
sub
pop
and
std
in
test
ja
dec
push
sub
cmp
enter
shr
rolb
stc
inc
cmpsb
pop
dec
test
pop
out
mov
pushl
faddl
xchg
pop
out
jl
cmc
roll
mov
out
push
fwait
rcll
in
and
dec
mov
dec
daa
out
mov
add
or
popf
or
test
jno
cmpsb
or
daa
out
inc
loopne
in
xchg
mov
xchg
dec
dec
lret
inc
add
daa
fbstp
fdivl
xchg
loope
or
adc
lcall
sahf
ret
or
fcmovnbe
mov
push
xchg
mov
adc
mov
inc
fimull
lahf
mov
inc
fsts
xor
sbb
pushf
repz
dec
lret
dec
xor
test
mov
sub
xor
outsl
arpl
mov
add
and
mov
pop
adc
add
and
xchg
mov
hlt
add
hlt
xchg
mov
lret
xor
lret
and
movsb
popf
jb
dec
sarl
dec
out
push
dec
cwtl
movsb
pop
mov
addr16
test
jb
iret
lret
xchg
lahf
mov
pop
mov
in
popf
into
sbb
xor
xchg
add
imulb
int3
xchg
in
pop
mov
mov
mov
push
jns
sub
mov
sub
push
icebp
movsb
pop
mov
xchg
outsb
nop
mov
push
fs
dec
jp
mov
test
jbe
movsb
xchg
add
push
xchg
gs
icebp
inc
xchg
add
pop
les
mov
dec
cmp
int
jmp
push
push
daa
dec
pop
dec
imul
mov
add
dec
add
fs
loopne
mov
add
rcll
sub
mov
mov
adc
xor
jmp
push
jle
mov
adc
mov
stos
call
sbb
test
jne
iret
push
out
push
test
movsl
movsl
test
push
sub
push
mov
cmp
cmpsb
mov
int
hlt
adc
in
pop
cltd
sub
add
js
add
imul
insl
sub
and
pop
xchg
xor
xchg
fbstp
xchg
inc
mov
call
xchg
xor
fcmovnu
push
cmpsb
xchg
icebp
in
inc
inc
push
and
mov
inc
xchg
jge
dec
mov
mov
rclb
mov
int
scas
dec
push
movsl
xchg
lret
xor
sbb
iret
adc
dec
cmp
sub
stos
shll
mov
scas
outsl
icebp
fcomp
in
adc
inc
aaa
pop
cmpsl
jb
test
and
mov
sbb
test
mov
push
fwait
ss
jo
dec
cltd
dec
mov
daa
xchg
loop
and
int3
xchg
pop
and
mov
movb
out
mov
pop
stc
push
test
and
or
sub
leave
stos
inc
xchg
dec
aaa
xchg
aaa
xor
nop
jnp
iret
push
pop
sub
lock
dec
arpl
jge
popa
cmpsb
xchg
rcrb
sub
mov
mov
add
xor
test
mov
and
aad
mov
sub
es
dec
shll
push
inc
add
sub
test
sub
daa
daa
ss
mov
mov
and
sub
test
mov
and
decl
push
sbb
xor
push
push
cmpb
dec
push
cmp
pop
movsl
movsl
frstor
loope
sbb
inc
test
inc
mov
push
mov
xor
insb
repnz
andl
cmpsl
out
daa
add
sub
test
adc
dec
loop
mov
sub
lods
and
mov
cmp
pop
out
mov
cmp
rcr
gs
mov
dec
inc
dec
jo
cmp
loopne
pop
stos
xorb
inc
push
into
jae
stos
xchg
insl
pop
push
jae
andl
mov
xor
cmp
xor
hlt
xchg
popa
les
ds
popa
test
sub
mov
out
stos
pop
and
es
jne
xchg
and
pusha
xlat
icebp
call
pop
aam
mov
jne
mov
cmpsb
pop
and
adc
out
mov
test
popf
mov
xchg
mov
jecxz
xor
gs
and
out
sbb
ljmp
enter
ret
and
dec
and
sub
ljmp
mov
cmpsb
cld
es
icebp
popa
dec
and
imul
imul
inc
add
inc
mov
adc
mov
add
push
ret
shrb
out
in
inc
mov
lcall
movsl
or
hlt
insb
and
mov
xor
inc
out
pop
cmpsl
mov
pushf
inc
sbb
pop
dec
mov
pop
test
pop
adc
pop
movsb
mov
addb
in
call
sub
pop
xchg
les
cmp
jb
inc
add
pop
int
je
sbb
mov
add
aaa
mov
adcb
fisubs
mov
xor
cltd
mov
dec
pop
in
push
jns
and
sub
and
mov
lods
jae
in
out
ss
add
je
push
jp
fldcw
imul
push
lahf
ret
inc
mov
push
lret
jp
int
lds
and
adc
mov
sar
dec
mov
cmpsb
push
mov
add
mov
into
add
xchg
stos
push
xor
addb
dec
xchg
out
cmp
dec
loopne
enter
add
jecxz
movsl
jmp
insl
loop
and
mov
fcmovnb
lret
aas
test
cmp
aas
add
testb
and
in
cmpsb
xor
xchg
mov
inc
dec
pop
xlat
cmpb
cmp
inc
add
daa
arpl
pop
cmp
jno
cmc
popa
mov
test
stos
test
push
std
sub
pop
aas
mov
out
inc
addl
lods
mov
adc
loope
ret
sub
mov
loop
pop
and
inc
dec
pop
push
js
xor
add
pop
push
repnz
pushf
popa
push
cmp
cmpsl
repnz
dec
add
or
jns
sub
fbld
ss
inc
or
dec
sbbl
jae
cmc
loop
movsb
xchg
les
ror
dec
in
into
mov
repz
adc
cmpsl
dec
adc
insl
mov
mov
sub
dec
insb
and
jge
inc
cmp
dec
stc
clc
aas
pop
bound
loop
in
mov
daa
movsl
in
punpckldq
mov
arpl
insb
mov
sub
lret
scas
jae
ret
or
icebp
fs
addr16
rorl
lock
lret
fistps
push
push
sub
inc
cmpsb
loope
clc
dec
movsl
inc
loope
add
imul
pushf
enter
dec
fcmovne
mov
mov
and
push
and
icebp
pop
xor
imul
icebp
jne
in
sub
in
jge
sub
mov
add
cmp
mov
inc
bnd
addr16
pop
sub
mov
and
es
and
jno
pop
mov
cmpsl
jecxz
jo
fcmovnbe
mov
xchg
mov
sub
sub
lcall
xchg
pop
ds
loop
popf
inc
dec
int3
dec
sub
pop
sub
mov
jne
addr16
scas
mov
cmp
add
pop
xchg
dec
lahf
shlb
orb
xor
dec
pop
mov
add
inc
add
and
movsl
das
and
jmp
adc
dec
pop
mov
xchg
push
sub
cmp
push
xabort
and
sbb
ret
into
adc
out
or
scas
lea
lret
mov
inc
movsl
adc
jbe
repz
inc
bound
and
int3
ret
fisubrl
sub
dec
sub
stos
ja
shlb
jo
add
arpl
xchg
push
arpl
popf
push
mov
bnd
loopne
loop
iret
adc
sahf
mov
cwtl
push
int3
cmc
fcoms
sub
sahf
ja
pusha
mov
loop
push
imul
inc
mov
sar
test
mov
dec
sub
es
sub
mov
push
sahf
cmp
scas
inc
ror
imul
and
sub
fwait
mov
xchg
leave
dec
jne
dec
inc
inc
addr16
dec
icebp
and
lcall
adc
loop
add
pop
cwtl
adc
test
and
addb
lret
and
xchg
pop
in
or
sbb
mov
lret
xchg
test
stos
out
dec
push
in
popf
in
ja
sub
sub
push
ljmp
jecxz
sub
in
adc
add
mov
xor
push
pop
stc
pusha
imul
and
jmp
xchg
dec
bound
cmp
push
mov
xor
in
pop
push
imul
dec
mov
inc
mov
ljmp
jecxz
bound
mov
and
movsb
inc
data16
cwtl
push
lcall
cs
cli
xor
gs
jns
rcr
xor
xchg
and
or
lcall
dec
sub
test
cmp
movsl
add
pop
in
xor
mov
push
ss
rcll
xchg
xlat
lds
push
repnz
sub
cmpsl
dec
sbb
xchg
shl
inc
dec
cmc
mov
xchg
pushf
inc
js
mov
and
add
pop
out
sub
xor
mov
cmc
nop
cs
stc
sub
cltd
test
and
imul
icebp
cmp
into
subb
pop
shl
lds
and
inc
lock
cltd
sbb
mov
test
cmp
mov
loopne
mov
mov
bound
fisttpl
pop
xor
loop
fildll
ds
xlat
rcrl
std
test
sti
loope
mov
bound
aaa
insb
xor
and
nop
inc
and
test
and
stos
sub
jecxz
mov
mov
push
inc
sub
test
inc
popf
in
mov
ljmp
arpl
inc
and
loope
xor
movsl
mov
dec
stos
fs
sub
push
das
sti
dec
ret
sub
popf
sub
lret
add
inc
lods
cmc
mov
scas
cmpsl
jecxz
mov
cmp
pop
push
dec
jae
xchg
popf
or
fcomp
lods
aaa
cltd
ss
jne
jecxz
sbb
daa
test
sbb
scas
and
hlt
xor
sti
pop
cmpsb
jecxz
sbb
insl
xchg
sub
test
push
shrb
inc
repz
xchg
das
in
xchg
add
xchg
xor
cmp
xchg
lods
xor
lods
adc
inc
dec
ds
mov
pop
cmp
xchg
aad
fcompl
mov
cmpsb
sbb
fwait
mov
es
test
jge
es
xor
add
loop
xchg
mov
cmc
movsb
mov
out
rcrl
push
stos
test
sub
shll
push
mov
add
aaa
lahf
push
dec
xchg
sbb
mov
arpl
pop
mov
mov
lock
dec
loopne
xchg
xor
jnp
aad
jns
mov
push
cmp
mov
dec
add
ret
lds
mov
xchg
fistl
mov
jl
xor
out
or
ret
mov
sub
rorb
aad
mov
cmpsb
loop
sbb
icebp
lcall
pushf
stos
mov
add
and
add
sbb
test
inc
adc
test
sbb
ficoms
sbb
insb
lret
mov
inc
sub
sbb
stos
loop
and
or
fisttps
test
ss
rolb
xor
dec
and
fdivs
test
pop
inc
bound
adc
fists
pusha
sub
arpl
lahf
sub
loope
out
inc
stc
mov
add
dec
jae
loope
int
fldcw
sub
leave
jle
mov
test
jmp
mov
lods
sub
data16
cmp
dec
ret
testb
cmp
sbb
add
clc
xor
sub
out
out
add
out
inc
in
jns
pop
test
mov
mov
cmpsl
xor
icebp
xchg
and
sub
popa
mov
cs
loope
xchg
pop
loope
subl
leave
inc
add
imul
dec
les
scas
mov
mov
cld
or
push
jmp
lods
mov
jmp
add
xor
lahf
mov
popa
mov
out
lods
in
fwait
daa
ljmp
lahf
daa
xor
sahf
and
xchg
shrb
out
add
inc
fiadds
popa
xor
fisubrl
out
dec
and
and
movsl
or
out
int3
xchg
cmpsl
outsl
jge
shrb
and
int
cmc
jbe
lret
into
sub
mov
sbb
call
cmp
pop
iret
popf
pushf
adc
imul
mov
pop
aad
cmp
sub
push
mov
out
imul
jns
pop
push
push
cmpb
jnp
shlb
out
or
jne
inc
mov
jmp
mov
xchg
dec
sub
mov
inc
movsb
jns
push
dec
ljmp
push
shr
pop
lret
fwait
test
xchg
mov
arpl
jae
inc
cltd
out
or
mov
nop
iret
fsubl
fistl
stos
mov
add
jae
mov
popa
bound
sub
outsb
int3
addr16
movsl
lret
lods
daa
inc
push
inc
bnd
sub
sub
mov
jp
mov
lods
xchg
push
arpl
movsl
in
data16
das
and
inc
cmp
and
jae
xor
inc
lea
cmpsl
jns
mov
loop
push
loop
test
add
test
inc
daa
decb
add
jecxz
dec
and
ds
mov
xorb
add
stos
jne
movsb
stos
and
jno
ror
lret
pop
daa
jl
stos
fisubrl
out
or
adc
add
cltd
inc
mov
push
mov
mov
sub
inc
dec
jl
aas
dec
mov
dec
mov
sub
and
jne
mov
sbb
sub
ljmp
rcrl
stos
addb
fstpt
add
inc
xchg
mov
test
imul
cmp
push
repnz
rcrl
jne
dec
arpl
add
into
push
in
sub
loope
out
lods
mov
daa
fs
sub
pop
mov
cwtl
mov
dec
arpl
pop
mov
rcl
out
mov
xchg
test
adc
adc
mov
push
jl
comiss
add
or
aad
mov
cmp
ret
ds
dec
cs
and
roll
fwait
shl
pop
pop
scas
arpl
adc
jp
inc
out
popf
sub
xchg
mov
out
mov
in
bound
mov
xor
ret
mov
add
daa
shlb
loop
ds
add
gs
or
lods
test
sub
lahf
cltd
jno
dec
and
cmpsl
sub
pop
dec
dec
adc
stc
enter
pop
mov
jle
insb
stos
mov
inc
movsl
xchg
push
cmp
inc
ret
and
arpl
cltd
cmp
mov
xchg
sbb
rcll
mov
ss
rorl
inc
xor
lods
add
jle
enter
lds
sahf
mov
xor
inc
or
pushf
add
adc
push
dec
adc
call
add
and
aaa
dec
mov
push
int
out
add
outsl
cmpsb
ret
push
and
adcl
data16
xor
mov
ret
add
scas
lods
outsl
imul
in
aam
loopne
mov
mov
cs
mov
in
repz
mov
add
enter
cmp
sbb
test
xchg
das
pop
test
ss
inc
jl
daa
or
in
mov
fdivrs
fcmovne
arpl
stos
enter
shrl
test
sarl
xor
icebp
or
fdivrl
cmp
insb
sub
pop
cmp
inc
rcll
xor
add
popf
push
aas
mov
adc
mov
mov
dec
inc
rol
pop
dec
mov
mov
aam
loop
or
push
pushf
ret
cwtl
inc
loope
scas
pop
cmp
ror
sub
and
pop
sub
leave
dec
fs
and
sbb
pop
sub
in
js
fldt
fldcw
scas
out
sbb
mov
cmp
out
adc
dec
int3
and
out
jg
sub
das
lret
mov
push
sbb
mov
mov
xor
scas
push
aaa
int3
dec
in
ret
movsl
add
and
sub
adc
cmpsb
subb
mov
add
inc
jo
lds
sub
cmpsb
adc
rclb
pop
cmpsl
mov
mov
hlt
pop
in
popf
push
aas
sub
mov
lahf
adc
es
sub
and
xchg
and
inc
int
xor
push
push
popf
into
pop
jns
adc
xor
das
xchg
push
dec
push
stos
xchg
enter
out
mov
stc
jb
mov
adc
ret
dec
ja
fisttpl
or
lret
pop
das
pop
add
loop
push
arpl
addr16
adc
les
or
mov
mov
mov
mov
add
jmp
pop
iret
adc
inc
mov
shll
int
notb
shlb
push
mov
les
enter
adc
sbb
sub
pop
mov
inc
insl
and
inc
push
or
cmp
xchg
mov
gs
andb
cmp
cmpsb
pop
aaa
xor
outsb
pushl
out
push
dec
shlb
pop
sbb
mov
adc
xor
ret
arpl
outsb
inc
loop
ret
daa
xchg
push
lea
bound
inc
out
xor
add
fimuls
inc
cmp
movsl
mov
imul
pop
mov
xor
icebp
fldenv
jg
test
adc
movsl
mov
dec
cmpsb
in
add
movsl
je
shrb
mov
cmp
fisttpll
das
inc
dec
xchg
cs
fcomp
insl
fiaddl
sub
mov
fcmovne
push
mov
adc
xor
test
pop
sbb
out
push
insb
iret
outsl
jns
daa
and
and
aad
inc
sahf
vfixupimmps
xchg
sub
daa
mov
int3
xor
push
and
pop
mov
mov
or
cwtl
sub
out
push
stos
and
sub
xchg
xchg
add
push
and
ret
imul
xor
rclb
cmpsl
and
mov
xchg
jbe
mov
int3
iret
xor
dec
imul
popf
sbb
pushf
mov
mov
mov
call
and
add
mov
inc
add
or
lcall
sti
push
cwtl
movsl
fidivrs
lahf
mov
inc
pop
stos
ja
and
int
add
xor
fildl
sbb
mov
imul
sub
ja
mov
icebp
popa
mov
movsb
dec
out
xchg
iret
pop
enter
mov
xchg
test
aas
es
mov
adc
cltd
cmp
jmp
push
push
xchg
jl
sub
lock
push
lds
imul
adcl
sub
int
pop
ss
push
cmp
addb
icebp
ljmp
sbb
inc
dec
and
and
jnp
es
mov
enter
mov
fdivrs
popa
mov
xor
xor
cmp
in
outsb
ss
ret
stos
mov
mov
fildll
and
dec
in
test
pop
setne
pop
mov
inc
test
lret
popa
je
lods
stc
push
xor
lock
push
nop
jmp
das
in
in
and
imul
xchg
sub
adc
mov
xor
out
adc
push
stos
popa
xchg
test
push
aad
or
jbe
sarl
ss
int3
pop
lahf
ldmxcsr
mov
sub
scas
or
xchg
es
ds
push
test
mov
pop
aaa
cmp
pop
sub
lret
rclb
popa
cmp
jno
enter
mov
les
xor
cld
shll
ss
arpl
xor
out
leave
push
daa
xor
xchg
daa
mov
and
pushf
popa
std
mov
scas
pop
mov
cmp
sub
and
rcrl
inc
scas
stos
loope
scas
push
nop
ss
xor
int
fmuls
inc
jae
mov
jle
push
iret
ds
mov
xor
inc
aas
xor
mov
enter
cwtl
data16
sub
jns
pop
in
sub
sti
dec
outsl
in
dec
and
xor
push
and
es
mov
icebp
aaa
das
jo
jmp
movsb
stos
in
cmpsl
inc
in
xchg
mov
fisttpl
or
in
iret
lret
outsl
or
mov
fdivrs
push
jmp
push
jg
cmp
jge
lods
stos
inc
mov
jl
fmulp
xchg
scas
add
inc
cmp
jns
cmp
or
gs
in
inc
das
subl
and
xor
add
mov
add
mov
adc
mov
subl
sub
orb
insl
outsb
jbe
sub
insb
fldt
sub
mov
pop
out
dec
push
bound
loopne
inc
push
imul
push
in
cmpsb
stos
push
callw
rcrb
and
loop
cmpsb
xor
and
test
imul
loope
cmpsl
cmpsb
pop
cs
xchg
in
sbb
repz
cmpsl
jge
jnp
pop
in
out
in
int
sub
das
jecxz
ficomps
and
add
loop
in
inc
lret
call
fmuls
call
jle
test
jo
in
xchg
cmp
jg
test
js
add
into
add
mov
hlt
ret
mulb
cmpsl
mov
xor
push
cld
in
mov
inc
jns
adc
icebp
pop
xor
inc
pop
pop
sub
loop
push
sub
mov
pop
sti
andl
rorb
out
popf
fcom
loopne
rorl
inc
push
out
mov
pop
adc
and
add
aas
ret
xchg
inc
mov
mov
and
cmpsl
or
inc
test
add
mov
xchg
js
xchg
cmpsb
insl
push
sbb
das
or
xor
test
add
daa
mov
and
sub
insl
fs
testb
std
dec
push
repz
es
mov
add
sub
movsb
sbb
mov
jecxz
sub
int
xchg
das
push
mov
int3
out
xchg
jl
xor
xchg
push
lret
movsl
jns
bound
inc
call
ret
inc
pop
mov
cwtl
out
int3
test
dec
xor
rcrl
mov
jl
push
fsubrl
add
dec
out
cmpsl
xor
xor
inc
bnd
mov
lahf
aam
jns
pop
aam
pop
fwait
lods
vaddsubpd
lret
ud1
mov
int3
int3
mov
add
lret
das
fadds
inc
mov
mov
loopne
mov
push
xor
addr16
ret
aam
and
and
scas
sub
mov
xor
and
xor
sbb
and
dec
pop
rolb
jecxz
jmp
ss
mov
xor
out
sub
dec
xor
pop
lods
fcoml
sub
fmull
loopne
cmpsl
pop
test
sahf
xor
jp
bound
mov
mov
scas
push
rclb
gs
divb
cmp
lds
xchg
popf
stc
outsl
les
scas
loop
lods
out
fcoml
xchg
add
pop
cmpsl
mov
xchg
sti
les
sub
mov
xor
and
adc
xor
add
icebp
jno
in
ss
out
mov
sbbl
rcl
test
adc
out
fcoms
leave
std
lds
out
cltd
xchg
mov
nop
stos
in
dec
jnp
mov
add
cmp
cmpsb
iret
lahf
pop
ret
cmpl
and
aas
inc
mov
sub
aaa
xchg
sub
mov
and
aas
pop
and
mov
mov
xor
cmpsb
sub
dec
pop
push
popf
mov
dec
mov
mov
cld
xchg
pop
cmp
out
out
dec
push
sub
xor
jmp
loop
cmpl
xor
and
cmp
mov
push
jmp
add
shlb
out
pushf
dec
mov
cmp
mov
repz
dec
dec
dec
xchg
repz
mov
repz
lea
fs
leave
lods
cwtl
hlt
or
stos
out
sbb
push
push
jmp
aaa
inc
mov
outsl
push
je
les
cmp
call
jle
out
stc
pop
outsl
adcl
xor
xor
mov
mov
push
and
and
mov
pop
xchg
ret
std
pop
cmp
push
mov
jnp
pop
push
out
js
arpl
and
pop
insl
mov
in
daa
cltd
sub
push
mov
mov
les
inc
fistpl
sbb
xchg
or
cmc
cmpsb
mov
push
cmpsb
add
and
jg
cmp
mov
std
mov
popa
and
inc
push
and
xchg
sub
mov
icebp
jl
xchg
les
into
jle
xchg
fisubs
pop
jne
mov
dec
stc
fbstp
mov
sub
ret
scas
mov
roll
xchg
in
rclb
cltd
pop
push
and
ret
mov
jne
inc
xor
mov
jecxz
jo
in
loopne
xor
aam
gs
pop
sbb
mov
mov
mov
fidivrl
int
inc
lret
add
lahf
shll
pop
jecxz
popa
jo
repz
sti
test
out
inc
int
xor
sub
push
push
push
cltd
loope
dec
iret
sub
dec
or
pop
xchg
push
insb
mov
xor
outsb
xor
mov
loopne
and
repnz
mov
push
adcb
daa
arpl
jmp
mov
mov
roll
add
shlb
dec
mov
cs
cmpsl
inc
sub
dec
in
lods
push
adc
sub
push
insl
and
mov
movb
xchg
scas
sub
or
leave
divl
stos
add
xor
pop
lds
pop
lea
mov
mov
jno
push
xchg
rcrb
xor
xchg
dec
repnz
divl
jnp
dec
dec
out
scas
sub
xchg
and
adc
xchg
sbb
dec
iret
add
sub
adc
leave
in
push
mov
or
and
and
insl
js
jmp
lcall
pop
daa
or
pop
mov
sahf
sub
xchg
lcall
dec
sar
jne
in
jae
push
cmp
ficoms
std
sub
pop
jns
xor
int
sub
aaa
outsl
rcll
pop
mov
pusha
mov
add
mov
pop
dec
jb
add
rorl
jbe
xor
mov
ja
cmp
mov
fsts
and
cmpsb
xor
pop
fsubrs
lret
lcall
jns
add
sahf
in
into
push
in
cmp
jns
cld
add
insb
xor
shrl
add
lock
out
stos
inc
cmp
cmp
insb
cs
frstor
cmp
xchg
add
aas
xchg
jnp
je
pop
and
mov
sub
sbb
lret
insb
mov
jno
xchg
xchg
popa
cld
push
push
and
and
fistl
ds
test
cmc
dec
xchg
jp
pushf
pop
shrb
xor
popf
xchg
push
fiadds
out
sub
shr
jp
cli
and
xor
mov
andl
gs
xor
inc
mov
ret
inc
fwait
inc
jp
pop
cmp
mov
daa
push
popa
test
mov
into
push
cld
adc
cmc
dec
imul
fistl
mov
daa
adc
sub
sbb
stos
or
xor
add
sub
insb
lods
daa
xchg
jge
sbb
add
cmp
jno
mov
lods
dec
cmp
or
mov
les
fldt
fwait
sbb
test
dec
pop
sub
mov
test
int
pop
movsl
dec
mov
scas
push
xor
daa
jp
and
mov
loop
gs
pop
xchg
dec
push
push
push
jbe
dec
test
and
inc
or
push
xchg
dec
outsl
enter
scas
addl
inc
hlt
cmp
xor
lods
mov
clc
xchg
dec
sbb
in
inc
sbb
inc
adcb
xchg
int3
mov
sti
inc
push
mov
mov
fdivrl
push
fcmovne
pop
sub
adcb
arpl
imul
outsl
xchg
xor
sbb
xlat
xor
add
inc
movsl
mov
mov
mov
jp
dec
cwtl
mov
lcall
push
sbb
and
inc
adc
add
cmpsl
leave
xor
mov
mov
icebp
jbe
push
cmp
xor
xchg
cltd
sub
add
sub
push
xchg
cmp
jle
inc
lret
push
cld
or
or
inc
ljmp
adc
sub
test
jge
jo
jo
int3
xchg
enter
jg
xchg
add
mov
mov
jae
mov
movsl
lahf
inc
lea
cmpsb
xchg
xchg
stos
and
xlat
data16
lock
jns
sub
idivl
dec
imul
inc
jl
mov
inc
dec
xor
inc
add
shl
sub
in
gs
out
and
mov
lret
lret
sub
pop
shrb
cltd
jb
xor
adc
fwait
xor
xchg
std
ja
mov
adc
out
andb
mov
adc
sbb
int
xchg
and
icebp
aas
loop
xchg
daa
inc
mov
lds
jecxz
fnstcw
mov
out
out
dec
adc
dec
iret
inc
sub
mov
push
mov
in
call
into
push
orl
mov
pop
xchg
cli
loope
sbb
shrl
movsb
jle
push
enter
bound
mov
stos
imul
je
stos
add
adc
xchg
std
cld
jge
dec
loope
push
mov
gs
shll
dec
ret
cmp
cmpsb
mov
sub
not
dec
inc
xor
test
rcll
and
out
and
scas
lahf
lret
and
push
pop
movsl
dec
pop
jmp
das
pop
imul
xor
mov
dec
add
push
dec
mov
icebp
adc
mov
and
lret
jb
or
or
push
dec
inc
mov
mov
insl
xor
cs
lods
and
mov
sbb
fcoms
add
push
jg
xchg
adc
jecxz
lds
push
pop
andl
lea
add
adc
add
shl
push
maxps
pop
cmpsb
fwait
and
add
cmp
stos
int
ja
daa
jb
pop
jns
cmp
xchg
jnp
je
imul
or
and
sub
and
ret
mov
mov
push
mov
jle
out
loope
imul
rorl
add
jp
cld
sbb
jecxz
sub
lcall
jl
aam
fwait
lretw
sub
mov
push
daa
sub
dec
mov
rorl
dec
pushf
dec
mov
inc
movsb
xorb
aad
push
adc
push
cmc
es
outsb
inc
out
pop
fildl
dec
cmp
test
call
and
mov
mov
cltd
cmp
data16
mov
mov
fistpll
cmpsb
test
popf
sbb
in
sub
mov
jns
mov
aaa
jmp
out
fisubrl
arpl
and
and
and
and
imul
imul
in
lods
dec
push
in
test
movsl
pop
sub
arpl
jmp
fldcw
divb
lods
andl
imul
repnz
bound
jge
scas
jnp
mov
jns
mov
stos
lea
cmpsl
xchg
mov
push
mov
cmp
mov
js
and
iret
out
xor
xchg
push
rolb
pop
imul
push
dec
jae
xor
sahf
push
jo
in
fsubr
cmp
inc
dec
xchg
fdivl
mul
xchg
test
cmp
int
in
inc
jl
push
test
xor
sub
lds
adc
dec
inc
lret
cs
sub
loopne
jp
pop
push
and
daa
add
inc
push
test
adcl
in
push
shlb
jns
jb
es
inc
dec
xor
pop
loopne
mov
add
rcrl
outsl
aas
lahf
pusha
lds
loopne
and
push
mov
gs
sarl
lods
mov
in
or
push
fwait
sbb
mov
test
cli
push
cltd
cmp
sub
sub
popa
movsl
leave
xchg
pusha
add
bnd
dec
cs
scas
leave
cli
enter
popf
fldenv
adc
test
mov
mov
or
test
xor
lods
pop
xor
mov
cltd
es
mov
adc
lret
add
jecxz
enter
xchg
aam
arpl
xor
lock
or
stos
inc
es
add
inc
and
xor
aas
dec
mov
jo
sub
or
call
mov
push
mov
sbb
pop
adc
daa
pop
cltd
shlb
int3
int3
loop
lcall
arpl
xor
fs
imul
movsb
lods
outsl
and
jno
sbb
jne
cvttps2pi
lea
sahf
and
mov
dec
gs
repz
retw
dec
cmp
je
dec
mov
in
mov
push
pusha
push
daa
and
inc
xchg
xor
push
mov
sub
mov
jmp
pop
test
subl
bnd
pop
test
test
sbb
stc
and
mov
outsl
and
shrb
mov
xor
sbb
jp
or
and
scas
test
out
dec
adc
leave
aam
ljmp
push
imul
sarb
mov
xorl
pop
cmp
jecxz
or
jns
loope
pop
cmp
pop
mov
mov
hlt
scas
add
loopne
ss
push
subl
fidivrl
movsb
int3
aad
ret
pop
cmpl
pop
adc
cs
daa
and
inc
sub
cld
xchg
inc
test
in
aas
loope
pop
or
loopne
cmp
inc
shlb
sub
xchg
pop
add
out
mov
das
xchg
sub
mov
bound
out
adcl
out
sahf
fidivl
dec
adc
or
xor
adc
movsl
sub
push
cmpsb
pop
sbb
dec
push
push
sbb
movsl
int
jmp
mov
push
addr16
in
sbb
mov
ss
xor
mov
pop
push
ljmp
fwait
mov
in
inc
mov
leave
enter
shl
push
jb
sbb
pushf
arpl
clc
rolb
out
xchg
mov
out
dec
shll
adc
sar
and
ret
xor
daa
xor
les
dec
stos
xchg
sub
push
mov
jg
lock
ret
dec
fiadds
lds
xor
add
shlb
sub
scas
xchg
sub
fstpt
inc
int3
inc
adc
clc
into
adc
xchg
or
push
addr16
mov
xchg
mov
sub
pop
xchg
jne
sub
pusha
xor
fucomi
mov
loope
inc
mov
loop
sub
and
movsl
icebp
xchg
imul
mov
xchg
jmp
ret
inc
sub
sub
inc
xor
mov
mov
xchg
add
xlat
pop
and
sub
mov
fwait
roll
or
inc
out
int3
adcb
push
mul
cmp
sbb
bound
test
xor
push
sub
cmp
sbb
pop
mov
jecxz
xor
mov
hlt
int
sub
sub
imul
add
movsl
pop
sub
mov
es
add
push
cmp
cs
insb
divb
adc
sub
cmc
xchg
jnp
lods
sub
in
loopne
dec
sahf
and
outsl
aaa
sbb
jae
test
jg
push
dec
call
fwait
cmp
pop
and
xchg
idivb
xchg
cmp
xchg
dec
movsb
daa
push
mov
mov
paddsw
test
nop
pop
int3
or
leave
pop
andb
cmpsb
addb
lods
repz
xor
call
fbld
xorb
cmp
mov
in
mov
arpl
add
add
cmp
add
lret
dec
add
and
scas
xor
dec
fwait
pop
and
dec
xor
dec
int3
sub
lock
sbb
stos
mov
mov
loopne
mov
pop
dec
out
aas
aaa
cld
xchg
cmp
cwtl
jae
outsl
jno
outsb
mov
repz
arpl
mov
cmp
and
cmp
mov
leave
out
bound
mov
iret
inc
in
add
xchg
outsb
push
push
arpl
inc
sub
xor
loopne
xchg
push
iret
out
sbb
cmpl
xor
push
lods
sub
and
mov
cmc
cld
add
lcall
inc
fisubl
dec
out
cmp
sub
insb
jnp
add
pop
add
aaa
sub
xchg
and
fs
daa
cli
in
xorb
gs
in
movsl
push
rol
pop
cld
xor
jge
dec
mov
inc
outsb
stos
push
out
es
and
shrb
mov
insl
je
sub
mov
jno
mov
cmpsb
in
movsl
out
push
sahf
and
inc
lret
leave
dec
dec
int
xchg
into
cld
and
mov
js
daa
arpl
jg
in
ficompl
and
fwait
sbb
ret
loopne
adc
imul
and
pop
dec
rclb
mov
insl
mov
pusha
cmp
inc
jno
lcall
mov
insl
cmp
cmp
dec
rol
push
rorl
sub
mov
cs
sti
scas
sar
cmp
xchg
and
ja
inc
jb
rcrb
xor
mov
leave
cmp
scas
aaa
rclb
and
fists
movsl
subl
fimuls
stos
ret
jmp
push
add
loop
mov
cmp
add
adc
movsl
pusha
into
loope
xchg
and
cmp
movsb
mov
sub
fnstenv
or
pop
xlat
pop
pop
pushf
inc
jb
or
and
xchg
push
push
je
in
mov
out
cmp
icebp
orb
push
dec
lods
enter
loopne
iret
xchg
jecxz
scas
mov
xor
push
push
xor
push
loope
xchg
pop
into
cmp
inc
leave
adc
insb
jne
sub
sti
xor
cmp
dec
jo
popf
jge
cmp
dec
dec
mov
xor
movsl
hlt
ss
jae
xor
mov
dec
mov
cmp
cmpsb
sub
xchg
and
jno
mov
mov
cmp
pop
es
popa
stc
and
add
xor
push
lret
sub
sahf
fbld
cld
and
cli
dec
jl
fwait
sub
movsl
movsb
pop
mov
es
jg
movsb
ds
fsubl
add
pop
cwtl
stos
inc
add
mov
sub
push
std
add
pop
and
push
shlb
out
inc
add
into
or
enter
loope
lock
jbe
fisttpl
movsl
pop
stos
data16
jnp
push
arpl
insl
leave
xor
push
lahf
add
sub
and
mov
lods
loop
add
stos
rorb
test
loope
call
and
and
cltd
xor
into
pusha
ret
mov
pop
cmp
es
or
adc
add
adc
mov
xor
pop
insb
dec
aam
int
test
lahf
arpl
sti
pop
cs
mov
push
jge
imul
fisubrl
xor
test
sub
addb
mov
popa
adc
ficomps
xor
cmp
dec
mov
pop
in
add
and
inc
xor
cmpsl
pop
xor
sub
les
dec
xchg
pshufw
andl
subl
lods
daa
and
inc
call
dec
lret
repz
sub
sti
in
jnp
mov
push
add
mov
xlat
or
sub
sahf
jb
push
aam
cs
and
dec
mov
jp
frstor
icebp
loope
inc
test
lret
jno
mov
cmp
call
sub
push
adc
imul
xchg
mov
cmp
xor
sbb
shrl
and
stos
mov
jg
hlt
push
cmpsb
loope
lahf
popl
xor
push
test
add
add
mov
inc
mov
pop
jmp
cmc
cmc
das
push
lds
das
lcall
lods
mov
mov
sub
xor
inc
dec
scas
or
rcrb
into
lea
sbb
dec
out
xchg
out
mov
stos
mov
inc
loopne
sbb
mov
inc
mov
push
mov
sub
push
cmp
push
mov
jb
mov
int
fisttpll
in
test
dec
lahf
out
xchg
pushf
and
push
test
jno
pop
inc
loope
or
mov
xchg
or
cltd
jnp
lds
xor
cld
and
adc
xchg
mov
cltd
aas
fstpl
js
inc
dec
aam
add
mov
sbb
cmpsb
pop
jmp
inc
stos
jmp
imull
inc
pushf
lods
cmpsl
sub
xchg
mov
paddq
sbb
mov
aas
sbb
inc
mov
iret
xchg
int
mov
dec
push
es
mov
adc
xchg
scas
or
popf
inc
test
movb
push
std
sub
or
cld
les
mov
inc
dec
outsl
out
pop
xor
sub
push
mov
sub
push
inc
fildll
movsb
shl
mov
mov
stos
loopnew
dec
mov
lret
jg
in
iret
sub
sahf
mov
movlhps
lds
loop
test
nop
pop
fidivl
jne
into
push
and
dec
dec
lret
loop
adc
cmpsl
xlat
loope
lea
xchg
push
sahf
loop
ljmp
ficomps
shl
outsl
hlt
or
pushf
ret
mov
insl
ja
leave
cmp
cmp
pop
ljmp
sti
pop
xor
inc
test
pop
shlb
inc
ret
jae
jle
sarl
fs
push
loopne
out
inc
xor
dec
sub
and
xchg
pop
and
fneni(8087
sbb
aam
stos
pop
loopne
and
sbb
sub
xor
mov
out
sub
ret
pop
and
sub
jmp
mov
pop
mov
mov
es
in
addr16
es
sbbl
jecxz
addr16
push
scas
dec
out
dec
jecxz
addr16
ret
or
or
mov
insl
add
sahf
or
outsl
add
data16
stos
xor
je
push
mov
scas
outsb
aaa
movsl
das
jl
jne
add
out
add
imul
in
movsl
push
das
cmpsl
outsl
add
mov
lret
pop
sub
inc
lods
xor
xor
inc
and
and
inc
inc
daa
fldenv
stos
lea
push
arpl
xchg
and
movsb
mov
mov
xor
cmp
lret
and
xchg
loope
cltd
test
mov
fadd
xor
pop
shrb
pop
aad
add
mov
insb
inc
lock
xor
sub
xlat
rcll
pop
test
cmpsl
es
lret
imul
inc
enter
xor
xchg
dec
daa
cmp
mov
lahf
rcrl
push
aad
mov
popa
adc
xlat
rcpps
orb
in
sbb
fcomps
push
jo
xchg
push
cmp
and
aam
push
cld
rorl
shlb
shl
pop
push
cltd
cmp
fisttpl
jl
cmp
xor
push
cli
mov
jge
push
cli
mov
js
nop
in
lods
jbe
dec
cmp
push
sub
inc
add
imul
add
cmp
push
vrcpss
pop
out
insl
aam
xchg
in
pop
shr
xor
xor
pop
add
dec
lods
cmp
adc
and
fcmovnbe
mov
fstl
pop
ja
cmp
jno
mov
or
xor
add
xor
push
jg
jbe
xlat
adc
cmp
and
and
imul
leave
mov
inc
dec
fs
shr
jo
jae
ret
cmp
and
rcl
jp
test
outsb
mov
es
push
bound
ret
out
inc
in
idivl
fbld
orb
pop
or
sti
push
pop
jne
jmp
mov
push
ror
push
inc
xor
inc
cmp
call
xlat
jno
das
ja
dec
mov
xchg
jge
cmp
int3
push
dec
cmp
pop
aad
loope
inc
hlt
icebp
mov
cmp
xor
rorb
cmp
jp
movsb
adc
les
mov
pop
popa
je
sbb
xchg
xchg
int
lods
jnp
inc
scas
bound
cmp
mov
xor
xchg
push
ret
xchg
test
clc
cmp
jmp
jge
sarb
inc
inc
fistpl
je
adc
sub
xor
aad
sahf
clc
fwait
stc
aad
stos
sbb
in
roll
sbb
or
xor
jl
dec
ljmp
mov
or
pop
dec
cmp
stc
stc
xor
daa
aad
push
ret
push
push
addb
daa
jl
aaa
dec
sbb
xchg
ret
jmp
sbb
xor
and
aam
addps
push
inc
adc
hlt
cmp
xor
dec
jae
repnz
cmp
xor
dec
mov
cmp
inc
subb
aaa
jno
push
ficoml
scas
lret
dec
icebp
stos
mov
adc
aas
lods
ret
mov
mov
xlat
scas
fistpll
adc
imul
dec
push
inc
lahf
cmpsb
daa
push
scas
inc
and
and
call
jmp
test
std
es
int3
in
aas
loopne
in
stos
jno
inc
lret
dec
mov
push
sub
cmp
inc
call
jmp
stos
scas
das
mov
arpl
arpl
repnz
inc
lea
lret
lret
dec
mov
xor
mov
sub
cmpsl
sub
sub
stos
sub
sub
and
xor
mov
mov
mov
sub
cmp
cmp
mov
inc
and
inc
roll
ret
inc
and
inc
lds
inc
dec
and
dec
leave
dec
lret
and
int
into
mov
push
andb
jmp
push
xlat
loope
pop
fstps
cmc
fistpl
pop
fstpl
pop
fbld
xchg
mov
xorl
cmp
jecxz
orl
push
aaa
or
aad
ret
push
fisttpll
add
inc
xchg
sub
inc
fnsave
mov
insl
xor
and
push
insb
lds
enter
mov
aas
push
aam
cmp
mov
push
arpl
jl
call
divl
push
popa
out
sbb
es
adc
roll
push
rolb
sti
pop
xor
push
icebp
jmp
repnz
nop
push
push
ljmp
sub
lock
cmc
cmp
push
jp
stc
jno
in
gs
push
iret
dec
imul
jecxz
test
int
mov
clc
mov
pop
inc
fnstcw
popf
fmull
push
aaa
jno
in
pop
push
lds
ret
inc
and
inc
or
mov
pop
push
xor
jnp
imul
testb
dec
sarl
adc
mov
out
pop
lahf
in
gs
out
cltd
cmc
orl
mov
dec
cs
mov
inc
pushf
mov
data16
mov
in
icebp
inc
mov
pushl
sub
push
lods
jecxz
jmp
je
xchg
sub
fcoms
out
xchg
push
dec
mov
sub
push
jle
push
pop
movsl
xor
aas
mov
and
movsl
mov
mov
in
add
cmp
pusha
inc
xor
jl
and
xor
movsl
inc
mov
xlat
aam
and
scas
and
das
jae
inc
mov
cmp
mov
mov
ljmp
mov
leave
daa
xchg
aam
push
push
lods
pop
stos
scas
xchg
sub
cmp
test
aaa
push
subl
repnz
cmp
push
std
xor
lods
adc
test
cmc
push
cmpl
sub
fwait
pop
and
addr16
rcll
in
test
ja
xchg
lods
inc
cmpl
xor
ja
in
sub
imul
xor
arpl
pop
sub
pop
inc
pop
jmp
push
push
in
sub
dec
inc
dec
jmp
inc
inc
in
sub
jmp
xor
xor
mov
xorl
in
sub
mov
push
push
lds
pop
xor
inc
inc
in
sub
xor
inc
xchg
test
jne
popa
xor
cmp
and
xchg
push
xor
inc
sub
ss
pop
cmp
mov
add
test
inc
and
fwait
push
xor
repz
add
inc
bound
int
cmpsb
fwait
sarl
sti
xor
and
push
mov
inc
mov
push
and
mov
and
and
lahf
sub
sub
test
mov
sub
and
push
popa
sub
popa
loope
loop
jecxz
fs
in
out
out
push
ljmp
in
outsb
out
outsl
out
and
jno
jb
jae
and
cmc
jbe
ja
and
jns
jp
jnp
and
std
jle
jg
and
add
test
xchg
xchg
and
or
lea
mov
adc
nop
adc
adc
xchg
adc
xchg
sbb
cwtl
sbb
sbb
pushf
sbb
lahf
and
dec
subb
and
inc
popa
or
dec
stc
mov
lret
push
inc
cmpl
adc
push
mov
xor
lods
dec
movsl
scas
frstor
or
xor
jmp
cmp
movb
orl
enter
sub
adc
stos
sarl
dec
inc
jecxz
dec
inc
sub
arpl
rcrl
push
vcvtsd2ss
inc
rcll
fistpl
add
cmpsb
or
bound
inc
inc
cmp
frstor
inc
xor
loop
pop
inc
jmp
int3
push
outsb
inc
outsb
inc
xorb
fisubrl
call
sub
es
fcomps
sub
cmp
and
into
xor
lds
rcll
leave
in
ret
jmp
outsl
leave
bnd
stc
sub
add
ret
mov
jno
loope
pop
mov
xchg
ficompl
and
jne
mov
enter
pop
sub
mov
ret
sub
mov
nopl
mov
push
push
mov
scas
xor
call
cmp
xor
leave
jno
pop
dec
push
sbb
enter
out
int
jmp
sub
test
push
push
dec
jmp
jp
fdiv
stos
mov
sub
inc
push
push
ret
dec
mov
aas
not
pop
cmp
mov
xor
enter
add
lret
xor
rcll
dec
pop
cs
push
aam
and
popf
lea
stos
ss
dec
push
cmpsl
xor
xchg
cmp
cmp
popf
push
push
dec
das
daa
dec
ficomps
gs
sub
stos
test
int
sub
in
mov
push
mov
jae
rcl
lret
xorl
loope
fldenv
and
pop
mov
loope
popa
addr16
test
lock
dec
pop
shlb
aas
lods
ret
mov
dec
enter
dec
adc
cmp
inc
pavgw
jne
xor
movsl
rorb
sub
mov
push
push
sbb
imul
push
fmuls
mov
movsl
pop
xor
mov
lods
cmp
pop
xor
dec
jno
dec
jno
mov
jg
push
xchg
adc
mov
push
gs
fldt
stc
mov
sub
xor
test
in
pop
cs
sub
out
mov
xchg
pop
inc
popa
jmp
inc
mov
xchg
aas
inc
jns
mov
icebp
inc
fwait
lcall
push
cmp
pop
test
aaa
popa
test
aas
in
mov
movsl
pop
sub
test
popa
sbb
cmp
popa
in
scas
test
xor
ret
sub
fiaddl
pop
xchg
cmp
inc
cmp
repz
push
xchg
cwtl
mov
sbb
mov
push
jb
pushl
and
stc
lcall
lahf
test
lea
pop
in
dec
add
inc
inc
cltd
imul
testl
addr16
test
jnp
dec
mov
iret
stos
frstor
jno
adc
inc
xor
mov
mov
mov
aaa
call
cmp
jecxz
cmp
test
xor
repz
xor
out
jmp
stos
mov
fimull
sbb
sub
push
jno
daa
mov
in
push
jns
addr16
gs
or
mov
push
mov
xchg
xor
xor
jmp
push
lea
cltd
dec
scas
mov
inc
inc
dec
in
sub
gs
insb
jmp
xchg
mov
inc
in
das
movsl
cmp
inc
xor
push
jmp
jae
in
sub
inc
xchg
movsl
xor
inc
sub
inc
push
jmp
jno
in
sub
adc
dec
xor
push
pop
in
sub
jo
jns
xorb
inc
pushf
and
cmp
inc
sub
imul
arpl
fldcw
mov
aaa
testb
jmp
push
dec
rclb
mov
lret
icebp
aaa
dec
adc
xchg
cld
es
adc
add
push
repz
mov
imul
int
iret
xchg
push
test
cmp
aaa
and
xchg
dec
sbb
das
mov
adc
or
popf
and
add
and
xor
and
jbe
cmp
mov
jle
ret
out
and
push
push
fdivl
sub
rolb
pushf
fldl
gs
aam
push
or
cmp
int3
pop
insl
mov
adc
lods
cmpsb
mov
ja
sub
lcall
push
push
int
and
and
rorl
aam
into
hlt
inc
jns
push
xchg
and
mov
fsubrp
imul
fdivrl
pop
enter
cmpsb
rcrl
fcomps
in
sti
jne
and
xchg
testb
push
ret
adc
aas
dec
cmp
aaa
xlat
jmp
scas
mov
fcmovb
add
or
cli
xchg
mov
sbb
cmp
hlt
adc
test
sbb
and
ret
mov
sub
dec
outsb
mov
xor
lcall
pop
faddl
clc
inc
imul
xorb
pop
dec
das
movsb
sub
inc
cmpl
and
lea
sarl
dec
cmp
ror
bound
shrb
dec
jg
das
pop
dec
pop
dec
cs
aas
aas
in
inc
insb
jb
in
repz
lahf
sub
aas
and
mov
sub
jmp
movsb
insl
jne
je
les
cmpsb
lcall
cmp
in
sub
and
sub
das
ret
dec
cmp
and
int
pop
push
in
sub
pop
inc
das
jmp
ja
and
shll
jnp
in
and
push
jmp
sub
icebp
imul
mov
xor
daa
jmp
ja
sub
xchg
push
sub
pop
sub
sbb
dec
xchg
stos
xor
sub
inc
das
cs
push
loope
sub
das
inc
arpl
xor
in
lods
and
shlb
mov
mov
xor
in
sub
xor
inc
daa
jmp
pop
in
sub
xor
inc
push
daa
stc
shll
es
cwtl
xor
xor
xchg
mov
lcall
xor
orl
fidivl
ja
adc
lods
sub
mov
out
xor
sub
fsubrl
insl
outsb
sub
imul
push
test
push
add
mov
cs
mov
fisubrl
sub
outsb
or
lds
das
mov
mov
push
mov
je
adc
lock
lahf
and
and
repnz
mov
sti
repz
shrl
or
xchg
pop
cs
adc
xchg
inc
into
jnp
imul
movsl
mov
mov
cmp
or
mov
popa
sbb
arpl
mov
in
aas
pop
mov
pop
and
sub
jmp
lea
xor
jae
jno
outsl
inc
insl
imul
sub
gs
arpl
popa
xor
pop
pop
in
sub
dec
inc
dec
cmp
inc
inc
jmp
xor
xor
inc
popf
pop
daa
xchg
movsl
lea
and
dec
aaa
push
cmp
hlt
jmp
ret
loopne
mov
push
cmp
insl
mov
es
pop
xor
sbb
inc
dec
cwtl
lds
stos
dec
inc
inc
sahf
mov
mov
popf
sub
iret
adc
repnz
xorl
mov
in
in
sub
or
cmp
cmp
xchg
pop
xor
inc
insb
jnp
or
lcall
mov
imul
dec
in
dec
dec
dec
lods
fxch
or
loop
rcl
fldl
mov
daa
pop
fstpl
push
dec
inc
jns
inc
rsqrtps
cmp
inc
pop
push
cwtl
mov
mov
sub
sahf
dec
pop
push
push
sub
jno
inc
add
rol
in
inc
loop
fdivrl
and
inc
mov
xor
mov
das
leave
pop
fldl
int3
flds
add
shl
fisubrl
call
and
inc
js
cmc
rcl
mov
imul
mov
in
cmpsb
and
sti
shlb
and
xchg
sub
and
push
jmp
test
lods
and
and
mov
adc
mov
sub
cmp
mov
and
fnstcw
and
call
fwait
sbb
repnz
and
mov
movsb
and
jmp
push
nop
fstpl
shlb
rcrl
lahf
add
and
lea
ja
mov
inc
and
fistpl
jmp
sub
cld
repz
and
xchg
cltd
fwait
adc
cmp
popa
adc
and
out
and
pop
xor
adc
nop
adc
dec
add
add
out
mov
or
lock
xlat
jne
out
cltd
and
inc
rcrl
add
and
lea
test
push
in
pop
pushf
jmp
mov
jbe
mov
fstps
xchg
and
mov
mov
cli
loop
pop
jo
mov
les
or
and
sub
and
bound
push
xlat
fwait
inc
das
fcoml
popa
scas
or
dec
and
pop
push
addl
data16
adc
sahf
pop
out
sub
hlt
cmp
mov
and
cmc
aam
or
pop
les
mov
gs
push
xchg
cmp
cld
xor
adc
push
hlt
je
xchg
and
fistpll
mov
pop
stc
pop
lods
mov
lret
adc
nop
jns
addl
dec
sahf
in
xor
pop
and
xchg
xor
mov
insl
and
inc
cmpsb
mov
cmp
ds
sbb
outsl
gs
add
pop
mov
cmp
inc
adcl
pop
and
xor
xchg
xchg
mov
and
lds
fcmovnu
sub
out
pop
xor
and
les
xor
jb
ret
cmpsl
lods
out
lcall
addb
jl
sbb
mov
mov
pop
and
rclb
jmp
sub
xor
adc
icebp
mov
push
xchg
lds
movsl
pop
aad
sub
mov
fldt
movsb
xor
xchg
int
xor
rcrb
inc
and
mov
frstor
movntps
pop
mov
sub
loopne
or
rcr
imul
movsl
in
sub
and
pop
jp
andl
pop
scas
and
jmp
das
and
jnp
and
stc
jb
les
and
lahf
dec
and
out
jb
and
push
xlat
mov
dec
int
mov
in
rorl
std
mov
inc
cmp
mov
xchg
outsb
mov
int
pop
cmp
or
and
and
std
xchg
adc
and
mov
ret
cli
jmp
or
xchg
xor
loope
movsl
mov
movsb
push
test
add
mov
cmpsb
xor
hlt
xchg
add
out
outsl
jne
stos
mov
inc
fcmovnb
push
cmp
insl
test
sub
and
and
jp
or
fisubs
and
lret
mov
in
cmpsl
and
sub
and
sahf
xchg
fucomp
xor
mov
push
cmp
mov
push
sarb
popf
cwtl
and
push
and
mov
push
and
add
cli
inc
and
sbb
iret
push
mov
sahf
jae
and
je
cmp
mov
or
data16
repz
mov
or
xchg
and
add
das
sub
sub
push
and
data16
inc
ror
arpl
in
insb
cmp
or
add
jp
scas
aad
push
and
loop
ljmp
fisttpl
cmp
xchg
gs
jb
lahf
pop
jp
rorb
and
mov
and
mov
xor
test
sub
and
test
xor
in
pusha
mov
mov
and
xchg
enter
and
or
xchg
push
push
dec
mov
inc
jae
negb
fcmovne
lods
daa
hlt
and
cmp
and
cltd
xchg
push
dec
or
and
inc
mov
xor
xchg
out
mov
out
xchg
jne
js
cmpsb
repz
popa
imul
jnp
sahf
cmpsl
outsl
jg
in
out
fsubl
mov
rclb
jecxz
inc
mov
jmp
and
push
mov
loop
test
pop
lcall
mov
xchg
push
xor
pop
shl
aaa
xor
xchg
fbld
lods
and
jp
std
adc
pop
xchg
pop
ficomps
pop
and
mov
jbe
mov
sub
and
or
lods
sub
and
ds
js
push
andl
sbb
xor
push
lods
arpl
jno
stos
and
inc
lods
and
dec
inc
scas
mov
and
jl,pt
test
lret
fwait
stos
mov
push
imul
push
push
mov
shll
jns
add
mov
dec
aas
mov
xor
and
jbe
or
je
fstpl
and
sbb
jnp
add
mov
or
and
int
add
adc
aas
and
inc
enter
inc
mov
pop
in
sub
and
xchg
aaa
ss
and
mov
jne
sub
pop
mov
test
sbb
or
pushl
and
pop
sub
test
jb
push
pushf
fbld
mov
adc
or
leave
sub
adc
pusha
mov
sahf
mov
call
fisubs
bswap
xchg
mov
pop
mov
mov
jb
mov
orl
call
inc
push
and
outsb
mov
and
nop
call
and
inc
scas
scas
push
cltd
mov
sahf
jo
test
jge
std
shl
lahf
mov
and
cmp
pop
arpl
xchg
fdivrs
xor
in
sub
dec
insb
xor
cli
mov
cmp
cmpsb
push
repz
outsb
ret
movsb
mov
pusha
adc
jno
or
push
and
mov
scas
mov
popa
gs
movsb
and
xor
push
and
push
fstpt
inc
add
nop
and
and
sbb
mov
jbe
imul
push
jne
sub
ss
sub
sbb
and
xlat
inc
pop
mov
xchg
push
and
push
clc
xor
test
cwtl
jne
sbb
mull
inc
sbb
xor
mov
sbb
mov
cmp
mov
xchg
mov
cmp
adc
out
loop
lahf
ret
call
jnp
pop
cmpsb
dec
mov
test
and
repz
js
xchg
out
pop
ja
push
cmp
cmp
jne
adc
data16
mov
pop
cltd
jge
or
and
or
std
add
xchg
and
cmp
pop
and
mov
popf
pushf
loope
jo
jbe
outsl
mov
scas
sub
addr16
pop
xor
and
enter
or
cwtl
test
stos
cmp
jbe
cld
cmpsb
mov
jo
je
cmc
andl
stos
push
sbb
cmp
or
lahf
sub
mov
and
add
addr16
lock
popf
lahf
xor
adc
pop
out
imul
int
sub
xor
adc
and
mov
or
bndldx
push
aas
and
xlat
add
movsb
and
xchg
hlt
mov
es
minps
adc
movsl
mov
loop
movsb
inc
adc
mov
and
aaa
pop
test
or
push
popa
out
cltd
cwtl
jae
sbb
cmpsb
sahf
push
loope
fbld
pop
shlb
outsl
inc
sub
mov
xchg
jmp
jnp
and
pushf
mov
scas
pop
movb
and
es
cmp
fs
icebp
stos
push
imul
mov
add
mov
and
mov
in
xchg
dec
adc
out
mov
inc
sub
xchg
loopne
pop
das
filds
movsb
jle
xchg
sub
mov
cli
out
inc
mov
cmc
cmp
adc
sbb
dec
mov
cmc
negb
mov
sub
cmp
xchg
lods
mov
test
into
sbb
lahf
leave
sub
and
cltd
jb
dec
jge
mov
xorl
fdivp
call
cmpsl
sti
insb
and
movsl
sahf
jo
dec
jl
push
dec
jnp
pushf
and
jae
pop
and
add
cltd
imul
sti
stos
das
loopne
and
idiv
aas
movsb
fwait
jnp
shl
inc
xchg
insl
inc
inc
add
xchg
push
and
fldt
cld
movsb
or
pushf
imul
nop
cmp
xor
lahf
loop
test
sbb
adc
sub
es
sbb
add
or
inc
jecxz
sahf
mov
ds
jg
loop
add
test
js
dec
dec
push
dec
jns
inc
icebp
movsb
fcoms
sahf
push
ljmp
outsb
pop
lcall
push
dec
jno
sbb
aad
xor
movsb
cmpsl
outsb
inc
neg
cpuid
xchg
in
mov
fisubrl
pop
out
jle
loope
pop
and
push
lcall
and
and
xchg
cmp
in
aam
aaa
mov
push
inc
mov
lahf
pop
xor
mov
mov
ficompl
mov
in
imul
push
sub
jns
lods
and
xlat
cmp
inc
push
dec
testl
icebp
movsb
push
mov
cltd
pop
cltd
xchg
rolb
xchg
mov
sti
inc
xor
cmc
mov
mov
push
mov
dec
mov
push
jp
sar
and
nop
bound
mov
dec
and
ret
cwtl
push
je
lea
std
ds
lret
xlat
push
mov
bound
sbb
inc
push
addl
sub
test
shlb
mov
pop
ret
fwait
movsl
inc
jb
mov
and
inc
mov
push
and
mov
xchg
and
mov
jmp
mov
popa
leave
push
or
jp
cmp
mov
and
lcall
test
aam
inc
push
int3
pop
push
daa
mov
and
scas
sti
mov
pushf
and
mov
adc
sbb
mov
mov
lcall
mov
and
shl
sub
and
mov
add
xchg
mov
push
xchg
push
inc
iret
pop
mov
push
fimull
repnz
xor
shr
jl
fwait
mov
cltd
aaa
xchg
dec
scas
and
stos
xor
ficoms
adc
jo
js
leave
fs
push
add
fldenv
xchg
and
jg
xor
clc
fsubl
scas
xor
fstl
adc
fisttpl
and
jle
sahf
cmp
and
xchg
sbb
dec
rorl
daa
clc
jb
and
shl
mov
pop
fisubrl
sub
cltd
and
jae
je
imul
ljmp
jnp
xchg
mov
fbld
mull
xchg
pextrw
adc
testb
gs
andb
cpuid
sbb
sub
inc
inc
imulb
adc
ss
xor
mov
inc
hlt
popa
sub
popf
mov
mov
xor
and
xor
sbb
pop
inc
mov
push
andl
mov
mov
rorb
ss
push
sub
cmp
dec
cmp
jne
lret
sub
and
and
mov
and
ret
and
gs
scas
popa
and
add
dec
shll
mov
jns
pop
push
jne
mov
jns
push
lds
sub
pushf
in
inc
push
push
xchg
inc
arpl
mov
push
daa
leave
sub
and
sub
mov
arpl
xor
pop
xor
mov
mov
es
rclb
mov
and
pop
icebp
cs
xor
test
pop
xor
das
sub
mov
sub
arpl
out
cltd
push
in
popa
movsl
inc
dec
cmp
cs
xor
xor
dec
jns
push
adc
jg
sub
test
sub
mov
imul
stos
inc
pop
mov
xor
mov
xor
inc
and
lea
push
es
dec
xchg
fwait
jl
dec
xor
pop
push
sbb
jne
and
imul
cli
mov
dec
pop
cmp
lods
cltd
icebp
inc
jno
mov
inc
and
sub
fistpl
push
lds
pushf
addl
arpl
fbstp
sub
es
rorb
xchg
add
inc
xor
xor
dec
push
shll
xor
test
sub
xchg
icebp
xor
mov
mov
imul
dec
xor
cmp
or
sub
out
push
xor
cmp
jnp
jno
inc
xor
bound
fistpl
inc
add
mov
push
add
rorl
mov
pop
xor
pop
mov
ret
and
push
mov
push
lds
test
cmp
aas
les
arpl
fldt
add
cltd
and
loop
or
sub
push
add
fldl
push
inc
inc
adc
add
and
lea
add
push
jge
addl
mov
or
push
lret
and
or
push
out
pop
stc
cmp
jecxz
sbb
dec
jle
sbb
xchg
add
mov
mov
bound
and
add
push
push
xor
jb
mov
call
dec
push
jae
daa
or
add
sbb
into
popa
cmp
outsl
add
lods
push
jecxz
adcb
xchg
gs
lret
mov
add
jae
adc
test
mov
ret
and
fs
cmp
cmp
xor
gs
jne
inc
push
lods
inc
mov
in
xor
and
aaa
xchg
xor
mov
dec
imul
dec
push
add
or
xchg
out
das
push
popa
or
rcll
xor
lea
mov
mov
inc
test
push
das
add
and
add
sub
sbb
sub
shrb
ret
adc
sub
loop
nop
int
lret
mov
push
adcl
mov
dec
xchg
cmp
and
mov
mov
mov
cltd
not
xor
push
mov
addr16
inc
enter
test
ss
cmp
xor
sub
add
adc
testl
xorb
mov
jne
insl
stos
aas
mov
orl
bound
sub
addr16
inc
das
push
adc
add
sbb
mov
xchg
fwait
imul
mov
gs
imul
xchg
pop
mov
dec
gs
push
adc
xor
push
sub
aaa
push
mov
sub
aaa
add
xor
test
sbbl
and
outsl
arpl
xchg
mov
and
ss
imul
mov
ret
fdivl
inc
adc
popa
push
or
loop
dec
dec
loop
lods
outsb
push
scas
and
loope
adc
dec
orb
stos
dec
sub
jp
pop
jae
aad
test
and
jne
popa
xor
fdivl
sub
xchg
sub
lret
cmp
mov
dec
arpl
xchg
inc
push
jmp
lret
and
lods
xchg
test
push
or
cmp
and
in
push
pop
sbb
mov
sub
jne
xor
aaa
push
jbe
out
scas
push
aas
cmpsb
adc
xor
xchg
jp
in
cmpsb
inc
popa
sbb
inc
movsl
cmp
in
push
pop
dec
and
adc
mov
sub
inc
push
mov
mov
into
pop
out
cmp
test
xchg
push
jns
ficomps
adc
pop
and
test
adc
nop
xor
popf
xor
shr
jo
cmpl
mov
xchg
stos
add
lock
dec
subl
or
inc
jge
adc
sub
movl
rclb
test
push
xor
and
mov
adc
sbb
mov
arpl
in
test
gs
loope
pop
sysenter
lock
gs
pop
or
xor
popa
movsl
xchg
push
cmp
or
and
faddl
inc
push
imul
sti
mov
sub
rolb
xchg
fisttps
scas
push
arpl
xchg
jg
pop
adc
mov
outsl
fidivrl
jmp
cmp
popa
push
xchg
mov
sbb
mull
mov
mov
rolb
popa
cltd
mov
or
scas
dec
mov
sbb
fisubrs
xchg
out
loope
lds
pop
sub
stos
adc
inc
sahf
loopne
shrl
push
cmp
or
test
dec
jns
mov
test
out
cmp
xchg
popa
and
pop
jecxz
push
jne
xor
scas
faddl
mov
mov
inc
fldenv
loope
int3
in
xchg
push
push
push
or
mov
push
and
cmpsb
popa
dec
adc
cmpl
ja
in
sub
ret
add
pop
insb
inc
imul
test
mov
in
cmpsb
lahf
jmp
mov
jae
ja
cmp
sub
sub
loop
push
push
mov
daa
mov
movsl
hlt
push
sarb
mov
test
aam
daa
fldenv
xlat
outsb
xor
aam
aam
inc
push
push
sbb
fldl
cmc
popf
test
sbb
andl
out
frstor
icebp
xchg
daa
lret
pop
test
stc
push
cmp
cmpsl
andl
pop
sub
leave
in
mov
dec
idivb
mov
es
ret
hlt
push
test
mov
add
jae
movl
bound
in
dec
xchg
shrb
test
cmp
in
inc
xchg
ret
test
int3
dec
lods
aam
sub
pop
inc
pop
push
sub
jg
push
cltd
dec
mov
int3
xor
aas
dec
test
frstor
data16
pusha
dec
jecxz
inc
inc
fistpl
popa
or
push
pop
jne
xchg
jmp
sub
push
int
cmp
jno
daa
pop
add
ljmp
fdivrs
jecxz
pop
je
stos
mov
popa
mov
xor
pushf
xor
and
mov
xchg
pop
adcl
imul
popf
mov
inc
arpl
xor
xor
jp
into
inc
jno
dec
xchg
fstps
dec
test
mov
push
cwtl
sti
das
arpl
and
xlat
xor
inc
lds
mov
lods
sub
jno
sub
xchg
sbb
sbb
and
adc
xor
sti
aaa
mov
sahf
xor
mov
jl
xor
aas
icebp
gs
sub
and
mov
mov
and
push
mov
data16
push
sub
jnp
and
pop
sub
jg
imul
popa
xor
inc
test
por
ja
mov
sub
popa
cmp
cmp
and
loope
mov
inc
or
daa
sub
jnp
fadds
xor
xchg
addr16
sub
lods
mov
xorl
inc
test
sub
and
arpl
rcrl
cld
inc
xor
or
xor
es
mov
xchg
lea
inc
imul
and
add
mov
mov
js
ja
sub
mov
insl
inc
aad
adc
movsl
mov
stos
cs
and
mov
sub
mov
pusha
sbb
lds
test
popf
adc
jbe
imul
inc
jnp
or
dec
aad
repnz
jns
xchg
inc
push
in
inc
icebp
jno
movsl
cmp
dec
popa
push
pop
arpl
mov
das
test
mov
pop
adc
pop
xor
daa
lahf
stc
repz
leave
fwait
push
push
inc
jno
sub
lea
dec
stos
js
lahf
test
aas
ss
xor
fisubrl
leave
sub
inc
rorl
cmc
push
xor
xor
sub
xchg
and
arpl
lea
rol
jno
cmp
mov
in
ds
xor
push
inc
push
jb
inc
insl
xor
cmp
bound
bound
and
insl
gs
sub
push
arpl
leave
xchg
cmp
pop
lahf
int
sbb
dec
outsl
insb
sbb
mov
cmpsl
xlat
pusha
into
pop
dec
sbb
ss
out
movsl
test
xchg
mov
aas
ljmp
or
add
dec
fs
cld
add
dec
mov
sub
push
xor
insb
sub
cmp
mov
mov
nop
and
insb
cmpb
and
and
mov
outsl
and
xchg
mov
aaa
dec
lock
add
int3
and
orb
push
sub
or
js
in
and
add
xor
mov
scas
cmp
cs
cmpsb
fnstcw
add
gs
sahf
int
es
fnsave
arpl
jecxz
add
mov
movsb
push
jo
or
movsl
mov
mov
or
lahf
push
xchg
repz
outsl
mov
aas
xchg
xor
outsb
pushf
add
sub
sbb
scas
push
mov
js
lods
sub
dec
xor
mov
push
jnp
cmpsb
sarl
mov
mov
addl
popf
outsl
push
es
jmp
push
xor
sub
dec
loopne
push
cmpsb
sbb
dec
insb
and
movl
movsb
xor
adc
sub
jbe
rorb
push
push
sub
pushf
int3
jl
inc
mov
outsl
xchg
lret
inc
mov
jno
push
push
subl
and
dec
fidivl
xchg
jo,pn
cltd
and
lret
mov
sahf
inc
or
rcll
and
sub
aaa
test
sub
out
cmp
jnp
sub
push
fadds
push
adc
loop
sbb
outsb
mov
sub
xchg
xor
int3
or
fildll
lret
movsl
push
popa
sub
cld
inc
adc
daa
push
sub
pusha
test
cmp
mov
sbb
mov
jecxz
in
push
push
pop
ret
or
fildl
outsl
mov
xchg
and
clc
cs
je,pn
and
aas
inc
and
cmp
push
icebp
mov
push
dec
push
mov
jnp
fnsave
sbb
in
push
lds
ret
adc
adc
xor
or
pusha
sub
cmp
and
arpl
icebp
push
insl
ljmp
mov
gs
pop
bound
hlt
xor
test
xor
repnz
cmp
roll
jnp
mov
vmwrite
push
mov
push
rolb
outsl
pop
sbb
fsubs
arpl
ja
nop
inc
mov
add
push
pop
incb
es
push
aad
in
xchg
push
cwtl
push
push
adc
das
test
sub
xlat
int3
sarb
rcl
xchg
sarl
sbb
inc
or
testb
cmp
and
or
pop
push
inc
mov
push
add
dec
arpl
mov
lcall
enter
aas
xor
jae
ss
fwait
push
sub
jb
mov
push
push
sbb
mov
sub
dec
gs
xlat
scas
inc
add
xchg
lret
popa
ss
lods
mov
or
in
sbb
icebp
cmc
xor
bound
sbb
std
mov
mov
in
adc
clc
frstor
aas
and
and
mov
mov
pop
pop
in
stos
arpl
jle
clc
aaa
fsubl
add
push
std
xor
cld
loop
inc
inc
push
mov
ljmp
int3
rcrl
lds
jg
adc
dec
aas
pushf
sahf
adc
sub
repnz
dec
mov
jg
push
pusha
dec
enter
mov
mov
fwait
les
stos
hlt
enter
inc
in
in
fisubs
insb
movsl
dec
sarl
dec
push
leave
int3
xor
lea
xchg
push
xchg
and
jge
and
lods
and
test
xchg
into
imul
daa
lods
popa
and
cmpsl
sbb
xchg
data16
mov
jge
adc
iret
gs
dec
and
pop
cli
leave
dec
fsts
and
out
cltd
das
mov
out
mov
or
insl
inc
out
addb
movsl
xchg
cmp
daa
imul
jb
and
scas
inc
clc
push
lods
mov
push
in
xchg
and
lock
cmc
pop
inc
sahf
dec
dec
lock
fsubl
jbe
dec
jne
or
mov
testb
sub
js
repz
call
out
stos
sti
jl
lods
fidivrs
int3
push
mov
movsl
xchg
xorl
das
mov
nop
xor
cmp
mov
lds
push
mov
dec
adc
inc
std
lods
cmp
inc
xchg
lds
dec
lahf
inc
xchg
add
inc
xchg
daa
dec
icebp
in
rorb
std
fidivs
out
pop
lock
ret
call
add
and
sbb
out
dec
mov
cmp
rcrl
sub
add
iret
loop
popa
insl
pushf
test
jno
push
movsl
inc
test
xor
or
push
xchg
dec
lret
cmp
stos
inc
je
cld
pop
mov
out
push
movsl
mov
cmp
jmp
dec
imull
aas
out
test
adc
or
xor
mov
or
and
push
push
jp
insl
inc
mov
xchg
mov
and
inc
jecxz
pop
stos
leave
pop
pop
push
jp
in
in
dec
jne
xor
jbe
addr16
xchg
pop
shrb
xor
pop
fwait
ret
lea
push
adc
pop
cmp
sbb
lods
mov
aaa
push
imul
dec
insl
adc
popa
stos
addl
testl
insl
cmp
xchg
pusha
orb
xchg
sub
shrb
push
loop
and
push
push
fs
and
inc
lods
sbb
mov
xchg
int3
dec
push
hlt
xor
ficoml
lock
sub
movsl
leave
inc
or
add
adc
jae
in
sbb
popa
mov
jle
movsb
xor
popf
xor
aad
dec
cmp
daa
inc
lds
cmp
push
cmp
jne
pop
movsl
push
cwtl
push
negl
pop
jp
sti
arpl
mov
test
inc
dec
push
addl
movsl
lret
jae
and
add
mov
mov
and
jge
in
jmp
das
mov
fldt
aaa
xchg
insb
sub
and
add
notl
xchg
cvtpi2ps
pop
add
mov
xchg
popl
push
stos
test
xchg
xchg
lock
dec
sbb
xor
mov
or
cmp
sub
leave
ja
and
movsl
enter
and
fcoms
push
adc
cltd
imul
sub
jb
rol
popa
pop
sbb
leave
push
aad
popf
out
push
inc
lret
cmp
sub
inc
cmp
sahf
fildl
or
cmp
mov
xor
rcll
push
movsl
inc
into
roll
lods
push
sarl
lea
pop
gs
sub
mov
lock
cmpsb
mov
out
lret
sub
test
jge
inc
icebp
push
cmpl
orl
lock
into
mov
xchg
cld
dec
cmpsl
cmc
mov
jecxz
filds
lods
icebp
das
bound
dec
jmp
jecxz,pt
xor
insb
out
xchg
sub
inc
sbb
or
mov
inc
mov
sub
fsubp
pop
mov
inc
sub
dec
mov
push
inc
xor
stos
and
jns
lock
sub
roll
adcb
xor
js
in
or
sti
aaa
cltd
in
es
nop
ror
or
popf
inc
test
inc
out
mov
push
scas
sub
sub
repz
daa
push
repnz
sbb
ljmp
or
mov
add
mov
mov
mov
dec
mov
lret
stos
fwait
aad
test
fcmovnb
insb
mov
xchg
fisubl
into
or
jb
mov
out
and
cmpsb
test
and
cmp
lds
pop
popa
xor
xor
ljmp
cli
adc
push
test
add
or
lea
cmp
dec
test
mov
andl
in
xchg
adc
out
aas
xor
add
add
xor
insl
pop
movsl
loope
aad
loope
test
inc
push
popa
stos
lret
pop
pop
jp
cwtl
das
cld
cmp
sarl
and
inc
inc
sub
jmp
cs
shlb
lret
xchg
and
in
in
jnp
push
mov
xchg
cmc
sub
int3
test
int
mov
mov
mov
test
aam
bound
insl
inc
jns,pn
jmp
daa
sbb
pop
pop
rclb
sub
dec
sub
mov
push
test
loopne
mov
sbb
jns
sub
sti
leavew
orl
or
dec
mov
fcom
or
repnz
dec
dec
push
xchg
daa
pop
and
pushf
pusha
dec
rcll
outsl
jne
aas
xchg
xor
iret
push
out
loop
test
aam
call
cld
shll
push
xchg
inc
cmpsb
push
movsl
sub
xlat
pusha
out
into
and
push
sarl
mov
cmc
jge
fbld
fsubrl
push
cmp
sub
addb
sub
fsts
andb
std
out
lret
dec
aaa
ja
call
mov
and
mov
stos
push
dec
sub
rolb
jp
dec
mov
push
dec
and
movsl
add
mov
lods
loop
and
pop
cs
test
pop
outsb
dec
outsb
popl
pop
das
add
shlb
xchg
jl
add
leave
cmpsl
inc
mov
xor
cmpsl
sub
gs
xchg
aad
daa
imul
ret
stos
popf
push
in
dec
rol
mov
fists
xchg
lods
stc
rdtsc
jae
dec
xchg
int
fcoml
xorl
or
xor
inc
xchg
imull
ret
xchg
movsl
cmpsb
xchg
test
loop
push
pop
xchg
mov
clc
arpl
insb
xor
ja
sub
sbb
and
repnz
inc
mov
call
aaa
dec
lds
aaa
aaa
pop
lds
and
dec
fistl
dec
inc
and
xorb
xor
jno
dec
xlat
loope
sub
or
popa
push
cmp
inc
nop
outsl
gs
shlb
test
out
fcoms
push
subb
mov
mov
pop
mov
sbb
dec
sub
les
stos
sbb
adc
jnp
xchg
ret
mov
arpl
std
push
je
add
nop
cmp
loope
mov
and
test
cltd
stos
daa
mov
in
outsb
test
clc
ss
fidivs
add
jno
xor
das
aaa
xchg
test
jnp
sbb
xchg
mov
and
lahf
mov
pop
push
ficoms
and
xchg
inc
outsl
ja
pop
and
xchg
bound
repnz
mov
imull
dec
lcall
std
lahf
hlt
aad
jle
dec
cmp
inc
or
stc
and
in
mov
and
mov
int3
push
gs
mov
fwait
xchg
lahf
shrl
add
clc
cmc
fdivr
jmp
pop
cmp
jge
stos
mov
loope
popa
add
push
iret
stos
xor
mov
pop
cltd
fldcw
jle
and
sbb
pop
mov
push
lcall
cmp
mov
cmp
arpl
mov
push
loopne
xchg
loop
test
push
test
sub
push
push
jb
mov
inc
outsl
push
stos
push
mov
inc
inc
sub
notb
jg
and
sub
jns
sti
dec
cmp
addl
notb
xorl
xor
sbb
imul
movsb
dec
xchg
pop
mov
lret
fwait
mov
pop
fdivs
fsts
lcall
cmpsl
fisttps
add
imul
cs
xchg
imul
mov
cld
ds
and
pop
jg
xchg
or
jo
push
cmp
dec
push
cmp
test
add
shlb
paddq
inc
les
sub
push
jecxz
imul
mov
rcl
add
mov
and
mov
add
or
adcl
xchg
cld
sub
sub
mov
push
push
jg
jp
inc
mov
lds
cltd
inc
arpl
pop
push
stos
and
xchg
inc
outsl
arpl
xor
lea
mov
loope
sbb
and
ljmp
dec
gs
push
xor
lret
push
sarl
inc
in
add
mov
pop
inc
into
dec
mov
pusha
jp
roll
adc
cmp
inc
sbb
ret
sub
dec
mov
jle
imul
pop
das
test
lret
push
pop
lea
xor
xor
xchg
adc
mov
xor
popf
mov
pop
mov
cmp
movsl
xchg
into
pop
leave
push
mov
scas
inc
pop
inc
dec
fsub
cmp
test
push
bnd
and
leave
xor
jecxz
dec
insb
int3
lods
dec
xchg
loopne
gs
call
testl
sbb
sub
test
orl
lret
and
arpl
push
adc
xor
cmp
adc
cltd
out
rcrb
inc
sbb
sbb
mov
out
cmp
or
xchg
mov
mov
add
call
mov
test
lds
pop
xchg
mov
subb
in
and
xchg
sub
sbb
ss
ljmp
test
out
jmp
cli
fisttpll
bound
dec
push
dec
pop
dec
and
cmpsl
out
pop
dec
xor
sarl
sbb
nop
and
adc
xchg
test
std
test
sbb
inc
sbb
xor
out
jmp
loope
cmp
in
data16
adc
xchg
daa
and
fsts
push
jl
dec
xchg
lcall
adc
xor
rorl
mov
and
or
js
cmp
jge
js
add
cmp
ss
sbb
and
jo
xchg
mov
xor
adc
jo
lcall
movsl
xchg
movnti
jg
push
push
adc
sub
lret
pop
mov
loop
rcll
and
daa
xchg
dec
sub
mulb
test
push
xchg
mov
xchg
sub
and
insb
int
adc
jecxz
mov
mov
xchg
int
inc
stos
int3
in
daa
xor
imul
cli
inc
push
and
mov
cmp
dec
mov
pop
in
pop
aaa
mov
enter
filds
and
push
sub
cmpsl
sub
cld
xor
rol
push
sub
das
mov
cmc
andl
cmp
sub
jae
clc
pop
cmpsl
test
loopne
frstor
xchg
add
insb
stos
inc
imul
mov
addr16
lock
pop
or
insb
subl
imul
movswl
push
xor
loop
jecxz
aas
pusha
jge
lds
ficoml
mov
leave
sbb
mov
daa
cmp
nop
lock
mov
push
sub
cli
sahf
xor
mov
out
cmp
ss
push
mov
xchg
cmpsb
addr16
dec
cmp
scas
push
push
fisubl
dec
cmpsl
xor
cmp
rolb
dec
cmpsl
cmp
inc
mov
dec
push
fnsave
mov
sub
dec
pop
subl
mov
mov
loope
or
mov
lods
push
add
sub
sbb
dec
mov
inc
cs
outsb
mov
add
loopne
aas
sahf
mov
pop
lret
stos
xor
and
loopne
push
dec
mov
fnstsw
adcb
je
and
sub
cmp
xchg
mov
mov
outsl
popf
cmp
sti
ja
xchg
insl
mov
mov
jp
add
iret
in
incl
cltd
and
and
xchg
jno
and
clc
movsb
push
jmp
dec
or
dec
xor
or
cmp
dec
xor
nop
jmp
jbe
xchg
push
pusha
daa
sti
outsb
sub
cmc
ds
push
sub
repnz
rcl
cmp
in
ss
cmp
adc
push
dec
jmp
sbb
popa
test
jp
into
pop
mov
push
fstp
pop
push
xchg
fwait
jae
sub
push
add
push
xchg
mov
stc
insl
rcr
sub
xchg
push
adc
mov
push
loope
int
repz
xor
rcl
xor
stos
adc
jp
inc
outsl
sbb
fdivr
xchg
and
rclb
cld
ds
xorl
imul
or
std
jg
in
push
hlt
ficoml
mov
scas
sub
sbb
mov
into
jnp
mov
adc
mov
adc
mov
hlt
out
jns
mov
xchg
clc
cmp
mov
cmp
mov
push
or
dec
mov
notl
addb
data16
js
arpl
arpl
or
jl
push
bound
push
inc
out
push
xchg
cmp
cmc
pop
fstpt
jmp
xor
mov
mov
outsl
lock
pop
xor
inc
xchg
nop
push
lret
mov
lret
mov
test
sub
sahf
inc
mov
test
and
lods
cmp
movsl
pusha
daa
in
filds
stos
mov
lahf
push
jo
in
xor
mov
xchg
loop
jmp
mov
lret
dec
call
mov
mov
jmp
xchg
pushf
dec
pop
in
add
gs
mov
test
test
cmc
xlat
out
dec
ret
fwait
mov
and
cld
jg
orl
and
cltd
fwait
xor
mov
dec
nop
testl
lret
xchg
test
mov
cmpsb
cmpsb
subb
scas
rolb
movsb
xor
push
int
mov
xor
icebp
fstl
dec
xor
push
lock
sbb
dec
cmpsb
cli
leave
push
mov
imul
sahf
int
lea
neg
mov
in
aaa
fsubp
xor
jae
xchg
dec
shlb
mov
xchg
popf
lret
xchg
sbb
in
in
insb
add
mov
adc
push
add
into
imul
push
out
ret
loope
dec
das
in
outsl
test
add
add
movsl
push
xor
xor
and
mov
sub
push
xchg
stc
push
movsl
xchg
adc
xor
jmp
mov
call
add
push
mov
inc
outsl
xchg
push
add
mov
add
in
pop
xor
test
mov
xor
xor
mov
imul
nop
insl
pop
mov
pop
scas
mov
mov
mov
xchg
popf
addl
movsb
dec
andb
lods
inc
push
ljmp
or
movsb
sub
sub
jnp
mov
inc
ljmp
pop
rcll
in
dec
stos
cmpsl
mov
add
gs
xchg
out
adc
jecxz
push
in
xchg
js
test
es
mov
push
dec
lret
gs
cmpl
push
cmp
imul
movaps
in
addr16
ret
scas
in
inc
leave
in
xor
sub
andl
icebp
repnz
aaa
xchg
movsl
lds
in
mov
or
mov
lret
push
push
xchg
pop
inc
test
test
je
or
cs
cmpsl
and
and
dec
mov
jecxz
dec
jne
cs
adc
outsl
popa
aas
push
aad
cmp
adc
inc
jno
cmpsb
popf
mov
outsl
jns
mov
mov
xchg
mov
daa
dec
mov
cmp
fwait
hlt
push
sub
and
lret
stos
test
leave
dec
xchg
sbb
subl
mov
pop
test
ret
sub
outsl
imul
push
in
adc
mov
mov
dec
cmp
push
mov
inc
pop
dec
xchg
arpl
lods
out
push
xlat
lahf
aaa
in
jl
xchg
dec
inc
into
inc
and
mov
insb
leave
and
ljmp
dec
cmpb
cmc
mov
repz
clc
in
popa
mov
mov
leave
push
and
adcl
jecxz
pop
std
sub
repnz
cli
lret
and
test
dec
mov
mov
add
push
jl,pt
movsl
xchg
inc
inc
rorb
or
adc
mov
inc
push
jp
inc
loopew
sbb
cmp
out
xchg
daa
scas
sahf
xor
inc
imul
cmc
mov
in
and
ljmp
aaa
dec
inc
rol
mov
push
push
inc
neg
lock
lret
enter
inc
push
lock
cmpsb
cmp
xchg
in
pushf
pop
ja
test
xchg
ljmp
mov
inc
mov
cmp
inc
mov
mov
mov
movsb
loop
xchg
fisubl
xchg
or
popa
loop
add
sub
mov
popf
hlt
dec
inc
ja
mov
lcall
jno
test
push
xor
das
cld
xchg
dec
mov
test
decl
popa
xchg
insl
push
insl
jp
cmpb
push
int
icebp
imul
fucomi
xor
cmp
das
or
andb
or
bound
das
lahf
sub
xor
xchg
cwtl
das
sub
sub
xchg
scas
mov
and
push
popa
sahf
rcrl
dec
xchg
dec
aaa
xor
test
mov
xorb
xchg
mov
dec
push
stos
addr16
xchg
cs
mov
iret
imul
popa
dec
lahf
cmp
mov
or
or
inc
sub
scas
bnd
mov
mov
jle
mov
push
inc
dec
cmp
sub
movsb
mov
mov
inc
xchg
fdivrl
add
push
lahf
mov
dec
pop
movsl
xor
outsl
adc
push
in
add
adc
mov
sbb
pop
negl
movsl
sbb
fcompl
xor
jp
jle
lock
lea
pop
popa
jl
fsubs
push
into
pop
xor
sub
xchg
and
stos
mov
push
sahf
js
sbb
cmc
pop
pop
sbb
in
sahf
pop
mov
out
in
inc
xor
sub
pop
xchg
mov
adc
into
mov
stos
out
outsb
leave
jp
inc
xchg
sub
lods
das
jae
push
dec
rolb
cli
push
inc
xor
xchg
xor
mov
xor
lods
and
test
lahf
inc
lock
mov
and
lock
jo,pn
inc
in
add
push
cmp
push
push
and
or
lods
push
mov
in
push
pushl
pushf
call
or
push
mov
dec
loopne
push
xchg
cli
in
xchg
aaa
mov
xchg
and
clc
iret
leave
test
push
push
dec
sbb
nop
inc
sbb
push
or
insb
cmp
push
dec
inc
push
syscall
inc
push
gs
inc
pop
imul
inc
dec
jb
inc
nop
leave
add
dec
inc
pop
stos
gs
cmpsb
sub
mov
jns
fs
inc
sub
lret
cwtl
out
repnz
adc
xor
inc
dec
iret
xor
sub
xor
mov
dec
in
mov
add
sahf
mov
xchg
and
out
push
sub
pop
jg
push
aad
and
adc
shl
and
sub
sti
push
push
push
sbb
cmp
xchg
rol
cmpsl
mov
dec
imul
scas
xor
xchg
insb
popa
gs
jae
movsb
jnp
nop
movsl
mov
jo
xchg
dec
lea
sub
fadds
out
insl
add
add
repz
shlb
jg
mov
sbb
adc
jbe
jno
push
ss
mov
jb
mov
dec
in
lds
mov
scas
test
xor
mov
jl
jno
inc
mov
rcll
xchg
stc
arpl
mov
pop
mov
cmpsl
cs
sbb
lods
jecxz
leave
repnz
sub
pop
mov
sub
subl
je
xor
adcl
cmp
iret
in
sub
lcall
inc
mov
into
dec
inc
pop
add
ret
inc
out
test
sbb
je
add
cltd
es
dec
std
pushf
in
mov
sbb
daa
gs
std
roll
insb
xor
sub
add
ljmp
mov
and
mov
sti
test
addb
out
clc
pop
jae
insb
imul
jp
dec
dec
test
inc
and
incb
and
fdivrp
clc
adc
movsl
sbb
int3
push
daa
push
jg
loopne
mov
movsl
test
loope
cmp
movsl
and
popa
cmp
push
push
xchg
aad
pop
pop
lret
es
out
add
push
test
sbb
stc
mov
test
push
mov
jle
lods
xchg
mov
jl
mov
stc
sbb
and
and
and
in
clc
inc
bound
sub
repz
bound
fsubs
scas
and
aaa
xchg
sbb
popf
pop
push
sbb
daa
rcll
add
xchg
sbb
xchg
inc
mov
cmpsb
addr16
push
scas
scas
sub
xchg
and
lcall
and
or
mov
jecxz
aas
dec
jecxz
mov
in
stc
decl
jp
pushf
add
xchg
mov
jl
mov
mov
dec
push
popa
repz
mov
roll
jg
aaa
rorl
imul
int
mov
sbb
icebp
sbb
pop
dec
push
lret
adc
test
in
cmp
pusha
ljmp
adc
dec
jg
inc
dec
add
pushf
xchg
aas
jecxz
mov
jo
xchg
mov
push
xchg
mov
arpl
mov
mov
adc
arpl
push
cmp
fisttpl
repz
jnp
cmp
std
stos
mov
xor
jbe
mov
mov
out
pop
rep
mov
cwtl
sbb
push
js
or
xor
mov
ljmp
mov
inc
sbb
and
movsb
push
and
loope
mov
mov
xor
aaa
rclb
or
hlt
dec
jmp
adc
cmpsb
xlat
repz
or
icebp
push
mov
or
rolb
int3
xor
lock
jge
mov
mov
push
mov
pop
push
jbe
pop
pop
outsb
add
pop
enter
push
ret
fcoms
ret
sub
push
sub
push
xor
mov
test
pop
pop
pop
inc
orb
sarb
mov
mov
shll
addr16
pop
jbe
in
dec
mov
mov
add
bound
outsb
shl
xchg
push
subl
or
xchg
fldenv
imul
es
das
pushf
shlb
cld
push
mov
push
inc
adc
mov
inc
push
jne
movsl
push
dec
insl
jle
sub
roll
mov
popa
lcall
in
or
bound
mov
insb
jmp
aad
fidivrs
push
xor
aaa
into
shll
adc
push
pop
lods
shlb
and
inc
imul
pushf
popa
xor
mov
push
inc
das
lds
jp
jnp
jp
subl
add
sub
int3
push
jmp
mov
cmc
in
mov
in
xchg
cmp
stos
pop
cmp
shll
fisubrl
mov
fistl
add
mov
xchg
or
mov
xchg
add
pusha
test
sub
xchg
mov
cmp
loope
mov
push
push
jno
pop
push
xor
add
lea
jno
push
mov
outsl
jae
cmp
push
sub
push
dec
inc
mov
xchg
sub
ficoml
add
pop
cltd
les
or
jg
mov
pop
push
lock
aad
loope
pop
xchg
test
adc
xchg
jp
sub
xor
fcmovne
push
dec
mov
cmc
xchg
mov
ss
aaa
adc
lcall
fdiv
insl
sub
jne
ja
inc
dec
js
mov
leave
lahf
insl
pop
lods
pusha
les
push
imul
and
imul
mov
repnz
test
daa
jno
inc
in
xor
jecxz
fldenv
addr16
mov
sub
mov
sub
and
shl
xchg
sbb
mov
xor
subl
mov
sub
loope
xchg
inc
mov
xchg
jns
inc
rorb
arpl
rcrl
and
orl
test
mov
xor
push
xchg
jae
xor
popa
push
rcll
inc
mov
add
and
xlat
xorl
aad
test
add
movsl
arpl
mov
sbb
mov
sub
or
pushf
or
enter
mov
mov
cmp
insl
sub
sahf
push
imul
or
sbb
and
mov
lahf
dec
lret
gs
popf
jge
test
call
push
sub
jl
sbb
lcall
loop
lea
data16
bound
cmpsb
nop
dec
int3
pop
push
stos
or
xor
xchg
push
cmp
push
xorb
and
cmp
push
test
pushl
lds
mov
inc
inc
andl
jecxz
popf
cwtl
movsb
and
cmpsb
jns
sbb
movsl
adc
out
and
lahf
mov
inc
jmp
jbe
adcb
mov
fisttpl
int3
push
push
push
addb
jg
jnp
bound
test
movsl
cmp
push
je
cmc
cs
outsl
fistpl
out
daa
pop
push
inc
mov
cmpsl
push
xor
clc
addl
arpl
cmp
shrb
push
cltd
sti
pop
pop
sub
fstps
sbb
iret
fwait
inc
mov
js
in
popf
dec
cli
mov
jno
mov
inc
push
sub
push
add
mov
dec
lahf
outsl
push
out
lret
push
loop
in
and
push
mov
inc
add
push
cmp
sub
push
cmp
pop
loop
inc
push
mov
test
mov
in
xorl
xchg
popa
lcall
cltd
push
outsb
add
cmp
push
xor
xchg
adc
cwtl
aaa
out
aaa
push
loope
push
mov
sbb
inc
push
gs
jb
sbb
pop
daa
rclb
arpl
mov
sbb
inc
mov
cmpsl
jb
sub
xchg
sub
mov
and
jnp
ret
cmpb
shlb
daa
dec
rclb
dec
fcmovnb
notb
arpl
dec
aam
jae
xchg
and
sub
jmp
and
jge
xchg
test
jg
add
lds
mov
mov
in
stc
stc
icebp
xor
jmp
mov
js
push
lock
inc
jp
psubb
outsb
sub
xor
addl
gs
push
outsl
idivb
push
sub
xor
mov
dec
add
xor
dec
push
sub
push
mov
push
out
xor
leave
inc
outsl
gs
or
popa
cwtl
sahf
test
subb
ja
sub
rcr
cmpsl
pop
push
cmp
outsb
mov
sub
mov
test
test
push
popf
mov
cmp
mov
dec
or
push
loopne
enter
inc
sub
dec
stos
and
adc
mov
cmp
xor
or
leave
call
push
and
shl
fnstsw
fstp
sub
sub
inc
cmpsb
pop
inc
ret
cmp
push
arpl
loope
xor
xor
test
sub
jmp
call
mov
outsl
leave
fsts
cmpsb
stos
inc
int
repz
cld
stc
and
pop
push
and
push
fisubl
mov
nop
push
inc
mov
dec
loope
mov
push
dec
cmp
cmp
mov
xor
loope
fdivs
cwtl
mov
sbb
test
xor
sarb
out
dec
lret
push
jg
aad
test
leave
in
mov
inc
inc
lcall
sbb
jno
leave
push
pop
ljmp
xor
inc
mov
in
lea
xchg
jp
adc
inc
out
mov
ds
sub
add
push
icebp
dec
mov
les
mov
fsts
xor
or
and
loop
dec
in
dec
cmp
sub
xor
aam
addb
lea
inc
pushf
movsb
outsb
add
lock
dec
icebp
push
and
mov
sub
mov
pop
push
out
movsl
lcall
aad
inc
dec
add
in
mov
pop
shl
dec
imul
jp
dec
movsb
sub
movsl
mov
pop
pop
dec
push
in
std
fwait
clc
cmp
lret
inc
cmp
inc
xchg
ljmp
popf
xchg
cmp
fidivs
int3
in
xchg
push
dec
xchg
lds
test
jp
or
loope
popf
aas
inc
fstps
mov
sub
jle
add
cmp
push
mov
mov
add
lea
push
mov
inc
popa
inc
push
dec
inc
sub
fucompp
jge
inc
jmp
pop
sub
in
lods
push
fcoml
xor
mov
adc
rorl
movsb
dec
xchg
push
movsl
add
push
lcall
bound
stos
movsb
loop
mov
je
mov
imul
lock
cmpl
dec
and
cltd
mov
mov
imul
mov
mov
orb
pop
and
or
cmc
inc
xor
add
inc
push
call
outsl
mov
inc
fsubl
xchg
out
pop
or
or
sub
in
cmp
and
out
cmp
dec
sub
adc
sub
push
lods
jbe
call
dec
push
mov
push
mov
cmpl
outsl
xorb
cltd
pop
sbb
mov
mov
sahf
test
andl
cmp
pushf
repz
sub
fwait
divl
push
or
dec
sub
fsts
pusha
xor
sub
sbbl
popf
inc
inc
lea
mov
jle
call
jge
mov
xchg
outsl
xchg
repnz
sti
mov
icebp
rol
sub
pushf
push
dec
cmp
adcb
jno
ljmp
gs
in
mov
push
pusha
mov
mov
sub
dec
dec
sbb
scas
pop
mov
mov
jecxz
dec
dec
je
stos
xchg
and
push
sbb
sub
dec
xor
in
insl
dec
mov
sbb
add
rclb
cmp
arpl
push
pop
push
xor
xchg
addb
stos
cmpsl
sbb
test
inc
and
push
ds
xor
cmc
jmp
xchg
inc
mov
push
jmp
push
in
sub
in
push
popf
xor
push
cmpsb
cmp
sbbl
loope
xchg
pop
stc
push
lds
cmp
ffree
dec
rcr
xchg
loop
pop
mov
mov
jb
inc
int
push
mov
xchg
out
cmp
cwtl
jmp
into
or
and
xor
inc
xor
dec
fs
in
jb
push
sbb
mov
frstor
lahf
push
lds
xchg
xchg
ret
xor
sub
push
into
mov
outsl
mov
test
adc
adc
call
mov
pop
in
and
rorb
lods
xchg
pop
lock
mov
sub
cld
dec
push
clc
cmp
push
aas
push
lret
loop
mov
pusha
into
psrlq
fstpt
inc
pop
mov
js,pn
aas
cmp
stos
mov
add
sub
out
push
test
sub
cmc
outsl
push
addr16
xchg
out
jmp
into
xor
sub
les
sub
mov
mov
cmp
fwait
jmp
int
lods
and
and
out
adc
inc
in
hlt
imul
push
not
imul
xor
xchg
lret
jno
notl
dec
sub
mov
push
insl
loopne
mov
dec
sub
ljmp
or
sbb
xor
jle
xor
js
lret
xchg
mov
movsl
add
test
out
add
inc
mov
jecxz
in
add
xchg
sbb
push
jecxz
dec
mov
push
neg
fisubrl
mov
jle
pop
dec
cmp
pop
rcl
push
mov
xlat
jecxz
scas
int3
aaa
mov
inc
lods
iret
jge
clc
insl
xchg
inc
cmp
push
xchg
shlb
push
cmp
int3
imulb
push
out
jge
cmp
sub
jmp
adc
leave
imul
inc
sbb
mov
inc
stc
pushf
movsl
lahf
je
mov
stos
mov
mov
ret
sbb
jecxz
icebp
sahf
mov
aaa
daa
andl
inc
push
pusha
xor
leave
je
inc
dec
xchg
mov
int
popa
mov
dec
xor
enter
outsb
data16
xor
mov
rorb
push
mov
test
push
sub
mov
repnz
ds
fdivrl
iret
movsl
dec
sbb
test
jle
popa
mov
mov
push
dec
lock
xor
jecxz
outsb
push
pop
push
mov
pop
lcall
mov
andl
fbstp
dec
cli
xchg
mov
test
push
jecxz
adc
and
test
aad
push
push
into
dec
fldenv
push
mov
xchg
push
movsl
aas
imul
fimull
leave
movsb
fwait
clc
push
int3
fldcw
addl
jae
cmp
insb
lahf
sbb
arpl
pmulhw
fs
dec
push
sub
pop
mov
subl
cmp
push
inc
sbb
dec
stos
fildll
xchg
mov
cmp
lret
clc
mov
inc
xchg
or
mov
fwait
xchg
lahf
jmp
sub
sbb
cli
inc
mov
push
ret
sub
lahf
popf
cmp
lea
loopne
ljmp
or
sahf
inc
sarl
out
in
xor
and
adc
inc
xchg
pop
fs
xor
cli
adc
imul
push
add
mov
imul
mov
fcompl
mov
push
inc
sbb
call
test
andb
lcall
imul
cmpsl
in
lock
cwtl
mov
mov
jae
and
movsb
aam
sbb
out
nop
cmp
push
push
loope
xchg
jle
outsb
cmpsb
push
adc
test
ret
xor
cltd
push
mov
mov
test
mov
xchg
divb
outsl
fnstcw
mov
loopne
inc
dec
outsb
xor
jmp
sbbb
mov
popa
sub
lahf
dec
xchg
dec
sbb
dec
adcl
out
jb
test
es
sub
stc
loopne
mov
movsl
cmpsb
outsl
mov
sahf
jg
lods
or
dec
jge
roll
hlt
xchg
push
arpl
cmp
dec
test
shrb
js
sbb
gs
repz
mov
dec
mov
jle
mov
lock
xchg
imul
sub
push
je
fucomip
push
gs
bound
call
add
jbe
jg
pusha
ret
push
into
sub
insb
push
mov
or
cli
mov
adcl
fwait
cmp
popf
mov
mov
out
xchg
les
gs
sbb
push
push
lahf
jb
adc
and
lds
pop
jge
sbb
xchg
leave
xchg
ja
daa
inc
dec
sub
hlt
cmp
push
sub
xor
xchg
inc
imul
in
mov
mov
mov
je
sub
xchg
test
inc
mov
sub
mov
sbb
and
subb
add
pop
mov
jecxz
and
adc
call
dec
or
imul
xchg
cmpsl
dec
idivl
jmp
pop
mov
push
int3
push
mov
mov
sub
popf
xor
mov
es
es
mov
xor
stos
dec
test
dec
lret
add
and
pop
add
mov
popa
mov
dec
mov
outsl
in
dec
js
leave
push
jbe
pusha
cmp
push
jecxz
mov
jae
inc
sub
pop
cmp
dec
insb
push
shlb
out
xlat
jbe
push
and
mov
subl
aaa
in
mov
mov
cmp
scas
cmp
nop
test
cmp
addl
push
aas
cmp
push
andb
fldt
sbb
inc
mov
test
pop
dec
dec
fs
push
outsl
push
inc
lods
jb
sub
mov
inc
in
push
imul
xor
xchg
inc
out
int3
test
fwait
andb
push
dec
mov
xchg
ror
mov
pop
inc
pop
pop
dec
rorl
sbb
leave
in
out
mov
lret
outsb
in
mov
in
scas
mov
pushf
push
out
add
bound
mov
mov
xor
jno
in
test
daa
ds
nop
mov
mov
rol
int
pop
movsl
fbld
xchg
or
cli
jb
mov
mov
ss
mov
cs
cwtl
cmp
frndint
daa
pop
pop
into
cld
rorl
stos
add
add
in
push
aad
xchg
inc
mov
in
xchg
mov
daa
mov
push
inc
popa
sbb
fiadds
or
xchg
imul
daa
cmp
push
imul
data16
dec
mov
xchg
jp
xor
jecxz
std
imul
xor
sub
mov
ret
mov
hlt
inc
xor
stos
mov
test
in
inc
scas
pusha
cli
in
sub
push
lcall
sbb
mov
clc
fstp
cmp
daa
push
mov
test
lea
push
mov
mov
sub
fs
dec
cmp
in
shlb
cli
mov
stc
inc
lahf
pusha
xor
push
mov
aas
add
stos
jne
xchg
mov
in
and
sbb
mov
addb
pop
sbb
inc
sub
sbbl
xor
mov
jp
aaa
fbstp
push
mov
mov
xchg
lods
push
loope
xchg
daa
arpl
xor
push
lea
mov
stos
shll
cmp
imul
insl
push
xor
xorl
iret
cld
mov
out
mov
stos
sbb
push
inc
jge
xchg
jmp
sub
movl
or
xor
lds
mov
mov
faddp
push
bound
adc
arpl
push
cli
outsl
pop
push
in
push
xor
cmp
xchg
into
cwtl
ljmp
dec
xchg
jecxz
mov
gs
enter
pop
bound
insb
jmp
mov
movsl
in
stos
popa
lahf
outsl
loop
pop
mov
or
mov
in
je
add
mov
sbb
mov
fidivl
and
add
push
arpl
push
xchg
xchg
adc
and
xor
ret
cmp
ja
das
add
andl
cwtl
and
inc
jnp
ret
push
sbb
clc
shll
xchg
iret
sub
pop
cmpsb
leave
aas
and
pop
stos
popa
xchg
mov
mov
movsl
cmp
mov
imul
cli
push
shll
sub
das
arpl
clc
sub
and
lahf
mov
pop
js
cmpl
or
cmp
setle
dec
popa
loope
orb
ds
insl
pop
sub
cld
cltd
push
and
jge
leave
vcvtsi2sdl
shrl
popf
les
mov
roll
pusha
cmp
mov
mov
lret
mov
stos
inc
adc
ja
inc
jmp
cmp
sub
cs
int
ret
dec
jbe
movsl
xchg
jl
in
pop
inc
stos
loope
cmc
lods
sub
xchg
jne
jns
add
mov
mov
or
insl
and
pop
out
sub
cmp
inc
sbb
xchg
sbb
sbb
add
lahf
outsl
pop
mov
pop
fs
outsl
in
lcall
addl
xorb
outsl
in
dec
and
push
sub
loop
jg
in
mov
sti
xchg
cmpsl
pop
dec
and
push
jge
inc
test
push
addl
mov
cwtl
jecxz
rclb
jns
mov
mov
lret
inc
jmp
outsb
rcrl
ja
cmpsb
stos
mov
movsb
jae
push
and
adcl
outsl
arpl
ss
push
insl
fsubrl
sub
lret
and
bound
subb
cmp
scas
jmp
cmp
outsb
es
push
dec
cmpsb
add
cmp
ret
daa
jns
jp
push
mov
dec
push
sbb
pcmpgtw
push
popa
push
mov
jecxz
dec
sbb
xchg
daa
sti
mov
insb
sbb
pop
mov
enter
lret
insl
movsb
into
popa
or
push
jmp
mov
dec
outsl
xchg
cld
push
jmp
leave
aaa
call
enter
inc
pop
push
fldt
dec
add
fs
push
cmp
lcall
push
jae
gs
test
mov
das
cmc
pop
scas
push
xchg
enter
or
pop
loope
jns
push
xchg
fisubl
mov
and
pop
push
and
jle
xchg
jecxz
mov
adc
sub
cmpb
sub
add
and
lods
lods
fmull
repnz
movsl
mov
cmpsl
inc
push
vxorps
jne
inc
addr16
mov
movsl
into
jp
dec
in
leave
insl
leave
sub
in
rcr
popa
pop
and
xchg
cmp
cmp
mov
dec
dec
out
jle
mov
pop
jecxz
xchg
outsb
pop
inc
outsl
mov
inc
mov
fsubrp
add
into
jl
rcl
gs
cwtl
mov
and
and
pushf
mov
pop
fidivl
xchg
sti
popa
xchg
decl
mov
mov
hlt
in
sub
daa
test
out
push
movsl
es
adc
insl
js
mov
cmc
lret
repnz
shl
pop
sub
xor
lret
mov
pop
fcmovne
data16
adc
mov
xor
stos
stos
or
stc
fstps
aam
push
and
xchg
addr16
or
jle
push
mull
inc
aaa
dec
and
push
lea
movsb
sbb
mov
add
fidivrs
cmp
popf
insb
movsl
dec
cwtl
addl
jmp
outsl
push
add
jle
cmpsb
enter
mov
out
mov
cmp
mov
jno
fsubrs
rcrb
loope
cmp
pop
adc
sub
je
ljmp
inc
xchg
xchg
fidivrl
xchg
mov
inc
sub
shll
inc
fsubr
fnstenv
xorb
xchg
lea
ds
adc
mov
inc
sahf
push
subl
jae
add
mov
or
add
or
addl
loope
std
sti
jns
sub
adcl
dec
mov
xchg
cmp
mov
cmp
int3
inc
repz
bound
cli
inc
mov
in
push
and
dec
adc
lds
leave
dec
sub
cmp
gs
sarb
push
add
push
inc
cld
cmp
fsubrs
sub
adc
cmp
xchg
push
cmc
std
arpl
jg
add
test
jle
push
mov
inc
mov
lds
dec
xchg
xor
imul
push
addr16
mov
cwtl
mov
push
mov
sub
bound
cmp
push
cmc
jecxz
add
push
xor
adc
pop
pop
lahf
inc
sbb
mov
xchg
sub
sub
xchg
cld
jge
or
sub
push
xor
mov
fisttpll
push
jg
push
xor
imul
popa
les
aam
inc
in
dec
int3
mov
bound
inc
push
push
jb
mov
xchg
cmp
nop
es
enter
inc
dec
mov
in
inc
mov
sbb
lret
mov
xchg
lfs
sub
push
scas
sbb
sub
out
sub
out
cmp
dec
mov
jmp
icebp
inc
jle
inc
cltd
push
dec
sbb
pushf
xor
mov
pusha
mov
int3
push
daa
inc
dec
addb
test
xchg
sbb
inc
filds
push
sub
je
insl
rclb
add
xor
pop
loope
leave
mov
mov
add
jp
fcomi
mov
inc
add
and
push
pop
push
gs
inc
jb
or
push
in
xchg
pushl
pushl
mov
and
or
daa
aas
addb
fsts
push
sub
inc
divl
dec
pop
stos
push
jmp
rorb
pop
adc
ljmp
cmp
or
adc
lret
inc
jbe
and
inc
lods
mov
daa
sti
inc
clc
loop
add
mov
or
roll
icebp
adc
andb
push
xor
and
push
sub
adc
jmp
popf
push
popa
dec
push
sti
bsr
insl
jmp
sub
out
mulb
jp
mov
add
pop
shll
push
fsubl
or
sub
adc
js
cmpsb
pop
push
mov
push
outsb
push
lods
bound
mov
icebp
sub
and
xchg
imull
cmpsl
addr16
aad
ret
lea
sbb
xchg
xchg
sbb
inc
sbbl
into
repz
faddp
and
fnstenv
xchg
mov
les
aas
dec
rcl
cmp
mov
bound
cmp
out
shll
push
push
sets
and
inc
jecxz
mov
mul
xchg
dec
mov
mov
out
push
xchg
lret
out
or
daa
inc
sub
sar
sarb
xchg
add
lahf
xchg
or
sub
jmp
and
and
add
push
jb
sub
push
push
xchg
in
inc
xor
sub
scas
sbb
pop
bound
jb
jbe
mov
out
ljmp
stc
and
mov
sub
inc
ror
jbe
inc
sbb
in
push
lds
fisubrl
jb
int3
test
cmp
stos
xor
loope
dec
nop
cmp
jmp
adc
lcall
inc
xchg
je
sbb
xchg
pushf
add
outsl
popa
stos
sbb
std
hlt
mov
lcall
sbb
aaa
jo
and
inc
ss
add
inc
test
enter
mov
lea
rolb
add
pop
in
pop
idivb
imul
pop
mov
jecxz
xor
mov
sti
push
out
sbb
push
and
mov
mov
jb
outsl
xor
dec
sub
jle
mov
mov
dec
mov
and
subl
and
inc
or
in
sub
jno
popa
xchg
loopne
lcall
test
subb
repnz
mov
xchg
pushf
jle
mov
in
xor
mov
out
imul
daa
xchg
push
outsb
je
mov
push
xor
sub
xor
adc
leave
out
dec
test
and
mov
push
or
pop
cmp
ficoml
and
sub
add
dec
ret
test
aas
and
cwtl
div
cmovs
adc
test
xor
cmp
sahf
pop
movsb
mov
arpl
idivb
dec
adc
mov
je
lea
sub
inc
popf
lods
andb
and
inc
sbb
popf
outsl
dec
lock
and
pusha
cmp
pusha
push
cmpsl
pushf
mov
test
mov
daa
int
jns
mov
add
mov
and
stos
add
outsl
popa
scas
loope
pop
sub
dec
sbb
dec
jle
cmp
xchg
push
stos
push
mov
xor
lds
cmpsb
push
push
dec
or
sub
gs
push
js
pop
stos
push
inc
ret
push
mov
pop
sbb
mov
lret
mov
adc
dec
loopne
xorl
adc
lcall
insl
or
out
push
movsl
addb
inc
xor
fmuls
mov
popl
movsl
and
cmpsl
inc
test
and
sub
mov
cmpsb
xchg
dec
push
bound
and
repz
movsl
movsl
inc
aaa
push
cmpsl
incl
pmaddwd
pop
dec
mov
out
push
or
stc
pop
mov
mov
lds
orl
iret
jmp
push
jge
pushf
lret
cmp
std
adc
sbb
ret
inc
outsl
dec
adc
repz
inc
push
cmpsb
or
enter
inc
mov
fwait
and
mov
addr16
outsb
inc
aad
out
or
sbb
sbb
ss
dec
sti
leave
inc
out
inc
pop
add
cwtl
out
xor
push
add
inc
ret
cmpsb
out
and
loope
in
pusha
in
imull
cmpsb
add
aam
cmp
mov
cmp
dec
push
mov
mov
adc
jae
add
mov
scas
xchg
mov
lds
cmp
cltd
pop
inc
mov
push
push
frstor
je
daa
push
and
test
daa
push
std
mov
sbbl
dec
sbb
movsl
adc
pop
add
jecxz
int
and
outsl
not
pushf
jne
push
xor
out
add
outsl
dec
jg
outsl
lea
aaa
cmpsl
jmp
adc
add
imul
movsl
test
pop
addb
daa
add
xchg
push
inc
xchg
inc
inc
stc
push
into
mov
pop
aad
hlt
inc
addb
mov
sub
data16
push
jp
popf
xchg
int3
lahf
lock
lock
inc
lret
ret
es
out
jmp
push
add
movsb
test
je
mov
pop
and
call
movsb
out
outsl
int3
xor
movsl
pop
mov
notb
cmp
mov
stos
push
cmp
push
sbbb
xchg
dec
lcall
mov
aam
sub
mov
cmp
xchg
and
jmp
lahf
mov
ret
sub
push
xchg
subl
lret
cmpsb
pop
int
xor
pop
lret
sti
stos
outsl
fwait
test
or
xchg
or
mov
outsl
test
push
jmp
out
fwait
dec
outsl
lcall
jg
add
clc
out
add
jg
gs
and
std
sub
sub
push
fsubrl
mov
xchg
cwtl
jae
int
ret
dec
and
jmp
dec
push
add
mov
jmp
subb
in
and
mov
and
gs
out
insb
and
movsl
xchg
mov
cld
push
popf
xacquire
insl
mov
push
nop
xor
xor
ss
movsl
test
mov
dec
jb
lock
sbb
mov
int3
cs
cmp
in
insl
je
sub
xor
jmp
into
push
test
popf
fimull
mov
inc
xchg
push
cmp
sti
inc
push
lock
insb
dec
push
xchg
add
dec
mov
popf
jns
mov
mov
pop
push
jns
pop
inc
jmp
jmp
fstpt
push
or
out
sbb
push
aas
adc
daa
xor
sbb
ss
mov
sbb
mov
add
cmp
and
fidivl
cmpsb
mov
jns
shlb
and
orb
or
pop
xor
sti
adc
push
loope
jae
push
mov
jb
outsl
int
movsl
mov
leave
mov
push
insl
lods
aaa
pop
outsb
pop
out
or
add
nop
adc
pop
sub
in
cmp
pop
sub
or
int
sahf
dec
adc
int3
shrl
divb
push
mov
scas
lcall
cwtl
mov
rcll
daa
lret
mov
enter
gs
ljmp
mov
cmpsb
jno
push
jbe
dec
xchg
cmpsl
sarw
in
inc
addb
xor
fistl
dec
stos
add
fs
push
fwait
mov
xchg
xor
stos
dec
mov
pop
dec
jmp
jle
insl
repz
addr16
push
jne
jns
inc
xchg
jmp
xor
sub
and
push
add
inc
repz
xor
mov
mov
into
push
mov
leave
inc
mov
push
lods
dec
cmpsb
les
sahf
pop
rcrb
xor
xchg
dec
sub
mov
mov
add
xor
shr
in
popf
lock
jp
shrb
stos
scas
popa
daa
push
pushf
sbbl
nop
xor
lret
inc
ret
cmp
nop
fwait
cmpl
xor
dec
ljmp
cld
enter
xchg
je
dec
push
popf
inc
icebp
loopne
pop
and
in
pop
xorl
je
or
pop
sub
pop
inc
push
and
sti
sar
push
cmp
xchg
jg
and
jb
sub
and
addl
mov
mov
mov
iret
das
inc
arpl
jnp
popf
jo
inc
or
or
cmp
jae
dec
in
imul
pop
push
push
jnp
cwtl
dec
jecxz
fstl
push
mov
xchg
imul
push
loopne
fsubl
jmp
xor
in
push
pop
xchg
movsl
movsl
cmpsl
add
enter
lret
decb
xchg
xchg
mov
inc
jb
xchg
stos
xchg
test
lds
pop
push
mov
sub
jo
ret
sub
rcl
and
add
dec
add
repz
fimuls
movsb
xor
das
mov
arpl
popf
movsl
and
lret
and
bound
lds
dec
orl
inc
inc
jbe
or
fsubl
jle
xchg
push
jns
cmpsb
fsubs
aad
and
daa
leave
or
cmpsl
in
sbb
pop
inc
into
push
mov
xchg
data16
mov
push
cmpsl
popa
out
and
cmp
mov
pop
and
push
in
leave
adc
xor
and
push
jne
mov
loope
ds
or
or
test
scas
push
dec
sub
push
in
sbb
or
push
lret
ljmp
sub
aaa
clc
rcrl
mov
in
push
ds
sub
jne
imul
and
ficoms
xor
push
dec
jecxz
mov
stos
into
adc
cld
xchg
fxch
jmp
test
test
push
mov
arpl
inc
cmp
xchg
xchg
jmp
mov
xchg
sub
mov
push
xchg
cmp
loopne
xor
lcall
popa
mov
push
lock
jge
sub
mov
push
lods
mov
pop
inc
out
pop
or
jnp
mov
push
pop
imull
adc
rcll
scas
inc
mov
daa
jecxz
push
js
add
shl
cmp
stos
mov
fs
int3
decb
jb
mov
jge
out
push
pop
mov
fsts
sub
adc
lret
pop
jmp
lret
push
sbb
shl
fimuls
cmp
ss
xor
xchg
mov
loopne
cmp
or
add
xchg
mov
mov
mov
xchg
xor
xchg
sbb
int3
movsl
mov
dec
cmp
and
shll
sub
sub
and
mov
xor
test
movsb
sub
sahf
jae
inc
into
pop
push
popf
sub
mov
call
and
imul
aad
adc
mov
cmc
aad
movb
shll
cmp
inc
mov
lret
inc
dec
dec
xchg
ds
shll
roll
mov
enter
mov
adc
xchg
cmp
sarl
sub
lea
add
in
xchg
xchg
test
gs
xor
and
sub
jmp
pop
push
push
mov
push
cmc
cmp
das
mov
dec
cmp
mov
cs
and
dec
je
leave
inc
xor
insl
test
xor
xor
inc
push
mov
das
inc
dec
push
popa
jne
and
mov
dec
pop
call
inc
xorb
inc
test
mov
push
dec
sub
pop
gs
addr16
fdivl
cmpl
dec
push
shlb
leave
sub
cmp
fistl
aas
test
push
pop
arpl
xor
push
ret
jns
aaa
in
mov
inc
xchg
mov
push
jae
imul
movl
dec
dec
xchg
shll
xor
cmp
cmp
dec
ror
jae
and
cmp
inc
arpl
jb
sub
inc
lahf
stos
dec
ret
push
xor
mov
dec
inc
test
imul
jmp
ret
xor
sub
gs
xor
mov
xor
fwait
cmp
pop
sbb
inc
jno
ja
imul
inc
xor
inc
cmp
ja
in
push
test
mov
cmp
lea
cs
xchg
pop
imul
push
inc
xor
out
imulb
jmp
enter
pushf
out
sub
mov
lcall
mov
aas
test
mov
imul
in
mov
dec
adc
mov
into
mov
pop
adcl
pop
dec
cltd
idivl
mov
push
xor
sbb
ds
fsubs
in
sbb
adc
ret
or
insl
mov
mov
cmpsb
movl
loope
aam
sub
orb
jns
outsl
push
jecxz
mov
ficompl
popa
mov
mov
repz
imul
sub
sti
inc
mov
push
loope
icebp
jno
xchg
mov
js
jns
fidivs
lret
in
popf
pop
xchg
jo
fs
subb
pop
sub
iret
sub
xor
jnp
xchg
xor
ds
iret
bound
leave
sub
repz
inc
mov
add
xchg
sbb
rcrb
xor
push
push
aas
pop
and
or
cwtl
and
test
ficoml
test
fcompl
cmp
xchg
add
xor
pushf
adc
xchg
loope
addr16
das
or
movsl
cmp
sbb
rcr
ret
notl
out
and
mov
or
xor
aam
pop
adc
add
loop
lock
push
cmp
fsubr
mov
and
mov
and
or
lcall
sub
test
xchg
arpl
jmp
das
stos
leave
xchg
sbb
addr16
xchg
ret
hlt
xchg
sbb
and
int3
cmp
test
push
sbb
inc
adcl
fnstcw
dec
sbb
push
inc
adc
mov
and
popa
push
cltd
sub
adc
ss
addl
xor
and
ss
cmp
movsl
and
lods
mov
fcomps
mov
pop
mov
fnsave
test
sbb
cld
repz
sub
insb
sbb
and
cmpsl
test
test
xchg
rcl
or
cmp
subb
ror
repnz
sub
mov
xchg
jnp
or
mov
orl
jno
rol
aaa
xor
pop
leave
mov
add
push
scas
jno
or
lret
enter
push
jo
stos
sbb
aam
xchg
imul
xor
insb
movsl
cmp
lds
sub
pusha
push
mov
pop
inc
sahf
mov
push
mov
add
xor
sbb
and
sub
add
cli
push
push
mov
rorb
jb
rcrb
jno
mov
xchg
xor
scas
popa
int3
fstpl
push
adc
fsubr
xor
sbb
mov
jmp
scas
push
inc
sub
push
mov
or
jg
out
push
outsl
xchg
jl,pt
and
sbb
add
and
inc
jne
inc
sahf
hlt
cltd
mov
inc
rcll
or
mov
and
pop
or
pushf
int
mov
pop
and
inc
icebp
cmp
push
inc
adc
inc
push
data16
popf
mov
ja
sub
mov
pop
popa
aaa
mov
popa
aam
popa
gs
popa
rorb
dec
popa
sub
gs
and
inc
jg
arpl
das
inc
aaa
cmc
dec
xchg
sub
lods
add
cmpsb
divb
pop
xor
lds
cmp
jno
dec
lods
jge
popf
inc
cmp
shll
jo
sub
pop
push
inc
outsl
mov
xor
inc
jns
sub
cmpsb
scas
gs
push
orl
movsl
and
inc
xor
mov
and
addb
inc
sub
sub
xor
pop
inc
cmp
popa
and
inc
popa
outsb
cltd
sub
inc
jns
jb
aas
popa
addr16
mov
jo
imul
xor
xor
adc
insl
xchg
mov
or
leave
sub
lahf
inc
cmp
sub
jnp
and
inc
cmp
les
inc
sub
inc
ja
xor
fs
xor
andl
lock
gs
insl
hlt
cmp
inc
inc
mov
push
cmp
jns
sub
addr16
out
idivb
outsb
cmp
inc
ja
das
outsw
mov
sub
cmp
cmpsl
stc
aas
dec
lods
jns
xor
jge
jae
jmp
xor
lret
inc
cmpsl
arpl
cmp
fidivrl
and
bound
inc
push
data16
jae
imul
push
cmp
out
test
adc
out
das
push
jno
inc
and
mov
loope
ja
xchg
cmp
mov
xor
xchg
vcvtps2dq
aam
sub
sub
cmp
and
loop
fwait
xchg
jecxz
xchg
add
cwtl
mov
mov
outsl
push
sbb
or
xchg
lods
push
clc
roll
ret
cld
push
out
inc
xchg
cmp
cmpsb
adc
push
pop
dec
test
fsubrs
dec
iret
mov
popf
push
fdiv
xchg
iret
lods
push
gs
sbb
mov
shll
lods
sbb
lds
jo
inc
jge
insl
xchg
adc
adcb
lret
push
mov
icebp
test
sub
mov
xchg
pop
mov
dec
sub
divb
and
xor
stos
inc
xor
cmp
scas
lret
push
test
pop
xchg
int3
insb
jp
dec
xor
and
mov
icebp
jne
mov
sub
ss
cmpsl
arpl
leave
or
out
lahf
mov
push
aam
dec
sti
mov
mov
out
enter
push
popf
popa
and
aaa
pusha
xchg
daa
jb
mov
jmp
out
inc
mov
pop
inc
xor
mov
jns
push
jo
ss
imul
test
inc
mov
and
sbb
xchg
fs
push
pop
dec
xchg
mov
gs
in
push
aas
push
movsl
int3
loop
movsl
fucomi
pop
sub
ss
pop
inc
lcall
lock
jle
dec
scas
ret
mov
jmp
xor
stos
fisttpl
xchg
cmc
mov
pushf
add
and
mov
dec
daa
addr16
and
popf
sbb
repz
push
pop
and
mov
jecxz
mov
push
iret
in
xchg
mov
insl
popf
xchg
movsb
or
push
fsub
pusha
mov
out
sbb
rcll
outsl
cmp
lock
orb
sub
inc
rcrb
cmp
subl
std
mov
test
sub
push
and
pop
xchg
dec
xchg
push
inc
dec
mov
dec
ss
fists
sbb
xchg
sbb
dec
test
jg
in
xor
cmpl
inc
push
pop
fcomi
lods
lahf
mov
in
cmp
xchg
xor
nop
xchg
out
push
cwtl
jae
shr
and
aam
mov
or
inc
or
or
in
mov
or
sub
xchg
ja
fisubl
cli
jo
lahf
push
mov
test
dec
pop
push
fstps
sub
add
sub
sub
cwtl
lods
jl
and
popf
inc
roll
rcrl
and
xlat
cmp
fdivs
in
outsl
sbb
inc
inc
push
arpl
aas
xchg
push
jns
xor
adc
mov
gs
xor
idivl
push
aaa
cmpsb
and
popa
mov
int3
jecxz
pop
imul
adc
xchg
adc
push
xchg
inc
or
mov
mov
cmpb
ja
push
cmp
mov
adc
mov
les
in
xchg
loopne
or
sub
ljmp
xor
xchg
outsb
mov
xchg
daa
dec
xchg
into
aaa
test
xchg
div
lods
adc
mov
mov
pushf
inc
lods
inc
es
and
imul
mov
int
jb
and
add
hlt
cmpl
jg
outsb
repnz
cld
mov
lds
sub
movsl
jge
arpl
cltd
jns
test
aas
push
jmp
dec
lods
add
enter
insb
std
dec
jl
sbb
xchg
stc
mov
aaa
inc
or
pushl
cmp
ror
sahf
push
sbb
jecxz
mov
repz
sub
mov
add
rcrb
subl
mov
ficoms
mov
pop
insl
and
lret
fiaddl
push
das
cmp
cmpsb
push
jns
adc
xor
sub
sbb
mov
fstpt
cmc
push
push
xor
mov
sarl
ds
inc
ficoms
fisubl
jge
in
movsl
jge
arpl
push
xchg
pop
push
inc
mov
mov
jno
pop
adc
cmp
cmpsb
push
leave
lret
sub
add
push
pop
and
imul
dec
push
add
jmp
xchg
imul
repz
fdivrs
in
mov
jno
aaa
mov
mov
jbe
or
aaa
gs
cmpsl
movsb
sub
or
lods
cli
add
clc
shlb
and
xchg
xor
in
rolb
jp
into
lock
outsb
cld
ss
je
sub
sbb
mov
xor
push
jmp
in
push
lock
imul
xor
sub
jae
hlt
and
push
mov
pop
cwtl
lahf
andl
sub
cmp
sub
adc
push
pusha
in
loope
xchg
jle
push
fs
add
push
xchg
neg
mov
jnp
jne
lcall
cmp
dec
adc
inc
push
int3
cld
or
das
push
xchg
imul
dec
xchg
dec
adc
push
loop
cmp
cs
stos
push
mov
lods
lret
movsb
sub
sub
gs
push
test
arpl
int
mov
mov
movb
lods
jmp
shlb
sbb
out
pop
shrb
sbb
mov
dec
sbbb
fadds
enter
mov
daa
test
add
in
fldcw
mov
fwait
jl
cmovns
mov
out
push
mov
fisubs
cmpsb
popf
mov
adc
pusha
jmp
xchg
das
mov
pop
push
sub
dec
mov
and
or
jae
test
sti
or
and
push
adc
xlat
push
int
cmp
repnz
mov
aad
movsl
das
add
stos
mov
les
pop
test
in
imulb
pop
sar
rcrl
push
sbb
adc
arpl
mov
aad
jp
sbb
adc
gs
cld
insl
icebp
push
js
lock
in
loopne
or
fstpl
lret
roll
mov
mov
jo
dec
pop
ja
jl
loop
aad
movsb
push
jae
inc
xor
xor
aas
jbe
test
jg
dec
lret
rcll
daa
lea
nop
push
inc
popa
and
fcoml
arpl
push
inc
dec
ret
pushf
cmpl
sbb
int3
dec
pop
xchg
ljmp
sti
lret
pop
lret
mov
cs
into
xchg
cld
loop
mov
pmaxsw
push
pop
cli
adc
and
outsl
mov
add
enter
xchg
push
popa
push
push
mov
out
pop
push
add
orb
jge
pusha
mov
ljmp
int
xchg
xchg
mov
push
into
arpl
leave
cmpb
and
das
inc
and
sbb
or
cmp
lret
inc
outsl
stc
jle
cmpsl
inc
dec
mov
test
sub
cmp
cmpsb
mov
outsl
dec
popf
cmp
sbb
movsl
aad
inc
in
and
push
stc
jmp
adc
xor
fucom
in
sub
mov
inc
mov
mov
stc
mov
cmp
das
push
add
fldcw
sarb
xor
in
test
cmp
jo
or
dec
inc
call
dec
and
push
gs
test
jns
dec
daa
sbb
test
xchg
xchg
dec
jbe
adc
adc
arpl
shl
hlt
dec
sub
push
mov
test
lea
mov
loope
and
add
clc
stc
stos
xor
mov
imul
adc
lock
mov
cld
nop
xor
dec
sahf
push
dec
pusha
in
push
fldt
xor
imul
pop
jge
xor
fsts
in
sbb
xchg
push
jl
xchg
fidivs
add
push
jbe
test
jne
sub
lock
jle
push
pop
mov
dec
ficoml
inc
mov
pop
xor
lret
xor
bound
and
xlat
xchg
jmp
addr16
je
xchg
or
cmp
aaa
xor
push
ret
bound
lods
pop
and
lahf
pushf
or
pop
rcrl
rorb
mov
dec
push
test
cmp
xchg
push
repz
hlt
or
aaa
dec
and
cmpsl
pop
push
mov
dec
cmp
sbb
cmp
dec
mov
inc
cmp
xchg
cmpsb
pop
mov
test
cmp
adc
and
mov
sahf
sbb
je
pushf
mov
mov
ss
addb
cmp
jg
jnp
dec
lock
mov
jg
cmpsb
popa
xchg
popf
loop
mov
mov
dec
sub
xor
dec
mov
inc
dec
daa
outsl
orb
add
jae
rorb
jno
jmp
outsl
dec
push
les
out
filds
inc
stos
and
data16
mov
out
push
or
movsb
addl
push
fcomps
gs
loopne
outsb
and
sub
add
out
add
ljmp
cmp
jbe
popa
or
ss
adc
push
mov
aaa
adc
jae
mov
imul
cmc
cmp
jmp
aaa
jo
sub
jmp
ljmpw
mov
loop
mov
push
add
ret
lret
xchg
movsl
jne
dec
and
pop
sub
mov
pop
mov
adc
mov
and
and
lahf
addr16
mov
xor
sbb
jnp
add
test
cli
in
push
pushf
sbb
cmc
imul
or
test
mov
movsb
push
rol
or
pusha
push
andb
mov
sub
std
daa
push
loope
dec
push
dec
cwtl
sbb
shrl
xchg
insl
inc
xchg
call
and
mov
cmp
test
push
mov
test
enter
pop
or
cmp
jae
adcl
xchg
mov
out
stos
jbe
loopne
push
inc
mov
outsb
sbbl
sub
inc
and
sub
sbbb
fnsave
inc
mov
sub
not
jecxz
push
and
repnz
push
jge
fnop
push
sbb
sar
sub
aam
lods
fs
nop
sbb
and
mov
dec
rcrb
loopne
ljmp
and
lcall
xchg
cltd
add
test
rcrb
sbb
sbb
xor
imul
cmp
lahf
bound
loopne
inc
add
fwait
sbb
je
lea
iret
lods
insb
mov
nop
in
gs
dec
jmp
inc
rol
xchg
outsl
dec
inc
dec
adc
sub
push
xchg
adc
gs
into
inc
jb
push
mov
mov
cmc
inc
mov
and
xchg
sub
sahf
adc
cmp
mov
jecxz
sub
add
pop
inc
lret
xor
addl
fsubr
push
push
push
xor
sbb
push
mov
mov
ja
xor
jns
fs
lea
and
repnz
aaa
test
dec
push
and
test
aaa
mov
scas
inc
sub
dec
cmc
call
xchg
push
cmc
std
mov
jg
add
xchg
lahf
inc
push
push
hlt
addr16
mov
push
iret
stos
push
addl
sub
push
test
mov
or
cli
sub
popf
cmc
enter
popa
mov
das
xchg
sub
jne
push
or
xchg
jl
pushf
mov
in
and
jns
outsl
data16
mov
cmp
cmp
and
cmpsb
jbe
movl
sub
jp
push
sti
inc
jno
int3
and
bound
push
dec
sub
loopne
shl
lret
adc
lock
fdivrl
sub
or
call
repnz
ja
adc
push
addb
data16
xchg
xor
cwtl
cmc
lea
aaa
push
imul
mov
sbb
push
mov
cmp
push
int3
fistl
and
out
add
fisttps
push
and
divb
xchg
das
xchg
push
jg
jge
outsl
in
in
test
test
or
scas
das
inc
push
mov
arpl
orl
mov
stos
fidivrs
fldt
aad
inc
and
int3
ja
pop
dec
int3
outsb
mov
unpckhps
inc
inc
mov
xchg
jecxz
mov
loope
cltd
out
xor
pop
bound
cmp
stos
mov
add
or
add
cmpsb
cmp
sub
pushf
pop
lret
and
daa
in
push
sub
and
je
mov
sub
inc
pop
xor
sub
mov
inc
repnz
push
aaa
out
lods
xchg
imul
pushf
add
sbb
in
orl
push
jae
jno
inc
cs
pusha
jno
sbb
cmpsb
leave
jecxz
xchg
test
and
ljmp
add
ret
lret
es
out
mov
arpl
sahf
popa
pop
sub
mov
jmp
inc
mov
sbb
jmp
mov
sub
clc
mov
stos
adc
cs
mov
popa
scas
inc
dec
mov
sbb
xchg
push
sub
cld
sub
ss
test
cwtl
xor
lret
loope
jecxz
ljmp
rorb
and
mov
sbb
aaa
or
notb
outsl
cli
adc
pop
movsl
mov
push
pop
fwait
in
xchg
nop
push
dec
into
push
and
dec
jecxz
test
push
fcmovnu
push
jge
shl
mull
pop
or
in
jmp
sub
inc
adc
xchg
inc
insb
add
sbb
or
cmpsb
sub
ficompl
sub
cmp
loopne
jno
sub
push
pop
and
ljmp
in
xchg
sahf
cmc
xchg
cmpsl
icebp
mov
les
addl
xchg
lcall
test
and
dec
out
ljmp
bound
js
and
dec
jnp
dec
inc
add
movsl
aas
jb
push
xchg
adcl
pushf
inc
inc
sarl
xchg
pop
inc
push
lahf
sbbl
cld
sbb
ss
push
mov
sub
push
fisubl
sub
push
cmpsb
xchg
jp
lods
das
adc
lods
inc
push
mov
pop
hlt
lds
jg
mov
ds
adc
xlat
repnz
jne
fsubr
stos
out
out
adc
fs
sbb
push
cmp
and
dec
ret
or
add
pop
mov
xchg
pop
xor
outsb
loop
xor
add
pop
xchg
xchg
decl
out
hlt
xor
mov
sbb
aas
outsl
gs
cmp
dec
ljmp
push
orl
dec
lahf
nop
mov
inc
lods
lock
sub
daa
sub
and
xchg
xchg
pop
outsl
pop
inc
pop
ret
and
test
or
push
sub
lahf
lods
loope
mov
cltd
push
popf
push
sbb
add
imul
shlb
jnp
inc
fmulp
bound
adc
ja
insl
and
sub
push
bnd
push
pushf
out
lods
jae
push
xor
jecxz
sbb
movsl
movsl
jmp
test
cmp
sub
aam
test
in
std
incl
pop
or
aam
and
ds
xchg
jae
push
gs
je
stos
mov
dec
loop
fstpt
pushf
xchg
cld
xor
push
std
jnp
fdivrs
xchg
cmpsb
outsb
sbb
outsl
dec
push
add
push
sub
lea
push
pop
xchg
aam
sub
in
push
fcompl
mov
sub
mov
imul
push
popa
es
cmp
lcall
jmp
cmpsb
icebp
sub
cmpsb
mov
mov
test
addr16
inc
mov
push
test
mov
lahf
roll
in
xchg
loope
xchg
pop
cmp
xchg
jge
stos
sbb
xchg
inc
movsb
lahf
mov
sbb
pop
pushf
mov
arpl
cmp
sbb
mov
stc
push
out
xor
hlt
dec
adc
mov
andl
mov
xor
jno
adc
lret
mov
or
gs
std
js
cmp
test
inc
and
add
inc
cmp
cmp
test
mov
lret
into
jl
and
mov
cmc
gs
mov
mov
lahf
jno
in
dec
jns
pop
xchg
insl
mov
fsubrs
sti
dec
mov
xor
outsl
sti
mov
int3
mov
push
int
mov
xchg
lcall
pop
and
xlat
sbb
inc
add
adc
pop
shr
push
pop
test
add
inc
inc
int3
cmp
and
insb
mov
dec
leave
mov
outsb
jbe
lock
negb
bound
push
xchg
sub
xchg
iret
repnz
xchg
popf
cmpsb
pop
movsl
xor
adc
sahf
mov
popa
mov
dec
xor
stc
push
inc
lods
nop
iret
fcoml
lock
mov
push
addb
in
popf
roll
and
fcoml
mov
and
and
pushf
test
mov
cmp
mov
repnz
fisubrs
decl
sbb
or
xor
mov
test
sbbb
mov
mov
add
mov
or
xchg
xor
cmp
rolb
lea
or
popa
xchg
xchg
jmp
xchg
addl
lret
ja
mov
xchg
lret
stos
xchg
cmp
or
in
and
xchg
lods
dec
or
leave
add
fdiv
dec
daa
test
xchg
popf
sahf
stos
cmp
mov
cmpsl
cmpsb
je
adc
out
punpcklbw
pushf
push
and
in
xor
xchg
jg
and
daa
adc
cmp
and
xor
stos
daa
lcall
add
cmp
and
std
je
daa
and
mov
dec
enter
inc
or
adc
cmpsb
jo
add
movsb
inc
add
cmpsl
sub
pop
pop
or
pop
adc
push
mov
int
mov
inc
lret
ljmp
cli
push
insl
hlt
dec
and
sub
inc
xchg
xor
addr16
pop
or
xchg
ds
mov
pop
inc
mov
leave
lock
xor
lahf
cmc
outsb
adc
in
or
scas
fstpl
int
out
xor
mov
ljmp
sahf
xor
decb
repnz
cmc
dec
add
addr16
out
push
rcrb
sbb
inc
insl
fistpl
lds
dec
mov
inc
add
jae
movsl
incb
cmc
fcmovb
inc
js
xchg
jl
shll
testl
int
cmp
pop
xor
js
fldcw
cwtl
pop
inc
jmp
repz
jle
lods
loope
insb
lret
xchg
scas
add
xchg
imul
push
stos
aam
out
xchg
push
sti
push
push
push
test
shrb
fnstsw
pop
xchg
mov
cld
inc
fidivl
mov
push
subb
pop
push
xor
push
clc
mov
xor
mov
dec
fists
aam
cli
push
jno
ror
or
pushf
mov
loope
push
das
add
stos
jmp
cli
xchg
sbb
push
mov
bound
sbbb
ss
cltd
push
in
movsb
lahf
fs
sbb
cs
push
lcall
mov
cmp
test
adcl
push
cs
push
xchg
rolb
rclb
fwait
popa
shlb
mov
add
dec
push
xor
sbb
cli
xchg
shl
jne
mov
lahf
mov
or
aas
push
xchg
jb
and
push
jecxz
cld
and
popa
push
sub
dec
push
dec
or
addr16
add
pop
cmpsb
mov
and
dec
cld
or
jmp
maskmovq
negl
mov
testl
mov
inc
test
incl
jne
aad
mov
pop
sbbl
inc
ds
fmuls
imul
mov
mov
mov
cmp
cmc
push
xchg
leave
ss
testl
out
xor
lock
or
fidivl
mov
adc
pop
ficomps
mov
arpl
pop
repz
push
lock
jmp
jge
es
jge
fcoml
loopne
test
leave
cld
ss
in
out
and
add
inc
or
cltd
mov
lds
icebp
sub
stos
into
or
jno
int
mov
pop
test
xchg
add
mov
lods
sub
cltd
mov
lea
leave
js
adc
ret
xchg
out
pop
push
jle
fcomps
outsb
lods
dec
lret
mov
xchg
sbb
push
xor
lock
adc
mov
add
pop
cmp
pop
cmpsl
push
jmp
jp
push
pop
sarb
popa
pop
dec
repnz
push
push
and
movsl
jno
mov
flds
sub
push
jno
push
testb
or
jno
or
dec
add
in
cmp
push
in
xor
inc
mov
test
mov
orl
jne
and
orb
mov
arpl
ja
lods
cmp
xchg
negl
mov
orb
add
test
loop
cmp
jmp
push
add
push
insb
dec
lret
in
dec
pop
cs
xlat
push
lods
arpl
jno
popf
insl
bound
test
xchg
daa
sub
lcall
cmpsb
push
mov
cmp
push
andl
imul
dec
push
out
data16
sbb
dec
push
outsb
jnp
shrl
pop
push
sbb
mov
sub
movsl
inc
or
push
and
shl
xor
push
adc
sub
cmpsb
cmp
add
mov
cmp
shrb
add
popf
cli
loope
xchg
mov
jl
lods
push
mov
in
jg
cmp
push
jae
mov
mull
xor
cmpl
ljmp
jb
addb
push
sub
lock
fiadds
and
mov
insl
loope
inc
lock
sbb
pushw
mov
jl
gs
cmpsb
repz
inc
dec
xchg
in
gs
lret
leave
inc
lds
mov
loopne
mov
and
shll
inc
sbb
push
xchg
pop
jg
push
out
fs
or
xor
inc
dec
jmp
cmpl
push
mov
push
sub
popa
lahf
iret
pop
add
or
jg
jecxz
rcrb
out
xchg
push
leave
stos
dec
dec
mov
stos
jp
inc
aas
jl
lcall
aam
cmp
subb
xor
lret
sarl
push
jo
pop
dec
xchg
std
popa
and
mov
xchg
jmp
mov
lret
mov
and
xlat
push
jmp
into
push
dec
and
jb
adc
add
xor
test
inc
sti
das
inc
dec
xchg
int3
daa
mov
loopne
sti
mov
jno
outsb
adc
test
push
adc
out
xchg
das
lds
arpl
lds
xchg
sbb
sbb
or
jecxz
inc
or
call
jge
mov
mov
or
cmp
or
push
push
pushl
popa
sub
sbb
and
leave
push
ljmp
dec
shl
cs
cmp
scas
loopne
pop
inc
mov
sub
cmp
mov
mov
push
adc
sbb
xorl
aas
pushl
insb
cmpl
push
jmp
xchg
cltd
push
sub
push
inc
xor
in
subl
xchg
ja
push
dec
mov
out
fldt
fwait
test
es
das
in
mov
push
movsb
mov
lds
call
bound
in
call
out
inc
xchg
mov
xchg
xchg
push
fidivrs
mov
sbb
mov
xchg
into
and
daa
xchg
dec
pop
shl
sub
cmpb
test
inc
cmpb
mov
adc
stos
jg
shlb
outsl
pop
out
push
pop
and
mov
mov
xor
mov
push
outsl
xchg
ret
fistps
xchg
xchg
daa
cmp
and
jmp
jmp
mov
lret
mov
mov
cmpsb
notb
and
push
lret
or
jae
xchg
scas
pop
loope
shl
scas
sub
enter
insb
add
lods
xchg
jb
rolb
mov
and
jbe
adc
push
mov
sub
out
xchg
ror
inc
lcall
fwait
outsl
cmp
movsb
leave
xchg
push
mov
sub
push
movsl
test
iret
sbb
dec
ret
loop
push
dec
nop
mov
cmc
in
and
lcall
or
and
pop
leave
push
xchg
daa
dec
dec
push
inc
divl
push
mov
fld
cmp
in
repz
dec
dec
cmpsb
fwait
roll
dec
jle
lret
mov
mov
ds
fmull
insb
jle
lock
xchg
mov
fwait
pop
sub
cmp
xchg
outsl
leave
mov
aam
mov
insl
jne
inc
pushf
test
add
mov
je
xor
xlat
adc
add
inc
stos
pop
dec
inc
adc
mov
push
movsb
mov
add
push
pop
dec
push
mov
sbbl
add
inc
jae
dec
xor
mov
mov
dec
lea
es
out
sub
sub
and
add
push
pop
mov
mov
cmp
das
sbb
pop
mov
mov
cmp
push
out
push
into
xchg
dec
push
add
jmp
push
pop
dec
loope
lcall
out
pop
xor
cmp
in
loopne
push
rorb
fsubs
popf
and
jecxz
mov
aad
movsl
ss
add
movsl
pop
cmpsl
push
push
shrb
xor
push
mov
mov
imul
xchg
jno
and
adc
jmp
pop
int3
cli
mov
and
imul
xor
insl
or
sub
add
ret
mov
sub
cmc
adc
pop
ja
sarl
xor
jle
and
or
lds
addl
test
push
pushf
pop
arpl
cmp
mov
arpl
test
lret
inc
jns
xchg
mov
and
adc
hlt
addb
and
cmp
and
dec
lret
lahf
stc
shll
andl
dec
mov
lahf
push
dec
mov
out
xor
into
sub
repnz
sub
call
add
inc
xchg
inc
add
add
xchg
and
push
lret
movsl
and
leave
pop
jecxz
testl
sbb
out
rorl
es
cld
push
xor
mov
lret
push
jbe
out
cmpl
les
pop
scas
dec
ljmp
ds
mov
and
mov
dec
xor
xchg
or
and
xlat
cli
add
push
mov
sub
aad
clc
movsl
lret
insl
inc
xor
jno
add
and
loop
mov
cltd
adcl
xor
adc
mov
push
mov
dec
jecxz
jp
cltd
mov
outsb
push
int
out
loope
in
xchg
and
sbb
adc
je
and
dec
lock
gs
mov
pop
pushf
add
jne
arpl
xchg
jb
lds
cmp
pop
or
bound
fbld
out
in
dec
mov
cmpsb
ss
xor
lcall
or
movsl
cmp
in
pop
or
popa
cwtl
xor
xchg
gs
mov
mov
sub
daa
fs
mov
divl
pop
daa
and
jp
clc
jb
sub
pusha
in
add
mov
mov
inc
push
adc
movsl
lds
push
xchg
jmp
sub
dec
fs
jb
or
js
movsb
jp
fwait
stos
push
or
xor
xchg
pop
cmpl
outsl
dec
mov
push
jbe
pop
call
mov
sub
jecxz
cli
jge
mov
outsb
movsb
add
push
push
nop
loopne
scas
popa
mov
or
mov
movsl
sbb
inc
mov
lock
hlt
mov
mov
xor
sbb
cmp
inc
jnp
jmp
pop
das
cmc
fisubl
xchg
mov
push
jo
sbb
mov
xchg
out
xor
sbb
inc
pop
cltd
cmp
adc
int3
sbb
sahf
xchg
movsb
mov
jo
inc
sbb
cmc
and
shll
xor
sbbl
pop
dec
nop
rorl
mov
mov
adc
aaa
fdivl
sti
or
inc
data16
ja
jmp
mov
bound
push
mov
adc
push
mov
insl
xchg
add
popa
push
cltd
sub
lock
and
add
test
shlb
andl
dec
sahf
mov
sbb
sbb
cli
rcr
dec
push
aam
push
mov
sahf
movq
xchg
or
popf
je
mov
xlat
add
data16
cmp
arpl
loop
cwtl
movsb
mov
out
adc
popf
sub
aad
lods
popa
and
sbb
nop
push
shl
jb
pusha
les
mov
pop
clc
mov
xor
jl
adc
xor
clc
dec
mov
std
faddl
cmp
sub
outsb
mov
pop
outsb
outsl
bound
jo
sbb
mov
cli
roll
in
test
adc
xchg
cltd
xchg
enter
and
nop
and
sahf
rcrb
adc
outsl
cmp
mov
add
ja
sbb
push
jbe
mov
fimuls
out
sbb
adc
xchg
sub
push
jmp
jno
imul
daa
sub
sbb
lcall
stc
outsl
jle
test
xchg
add
mov
dec
mov
jl
sbb
dec
xor
cmc
sbb
lea
mov
xor
adc
es
hlt
cmpsb
cs
add
outsl
pusha
adc
sub
int3
push
ret
test
lods
pushf
int
daa
ficomps
aas
mov
loop
or
mov
xchg
dec
cli
xor
in
enter
or
rorb
pop
rcrb
and
push
js
xchg
test
xor
faddl
inc
aas
add
lods
in
mov
js
xor
std
pop
pop
repnz
add
push
fwait
test
mov
cltd
cmpsb
pushf
imul
scas
mov
push
imul
rorb
fldl
pop
rcrl
out
jp
fldcw
xchg
int
sub
jne
mulb
mov
or
or
ret
lcall
dec
xor
frstor
adc
adc
sub
jno
iret
rclb
push
call
xor
add
xchg
jle
mov
lock
aas
add
rorb
movsb
jns
frstor
xchg
dec
and
or
push
aas
adc
and
and
faddp
insl
dec
mov
fistl
in
push
gs
jo
jg
stos
xchg
xchg
xor
ret
movsb
test
aam
sbb
mov
popf
test
and
xor
faddp
ja
push
frstor
and
sbb
mov
in
imul
incl
jo
cmpsl
mov
call
sub
inc
mov
lcall
test
test
or
add
or
lea
sub
insl
xor
or
pop
adcl
movsb
adc
inc
inc
clc
inc
aas
cwtl
loop
movsl
mov
jb
jb
scas
mov
sarl
xchg
cmpsl
adc
cmp
xchg
mov
xor
mov
cmc
popa
lcall
dec
add
loop
ret
push
shrb
addr16
xchg
daa
mov
enter
xor
mov
icebp
imulb
arpl
push
outsl
fildll
loop
cmp
icebp
jb
xchg
push
jno
aad
sub
outsl
and
shlb
add
xchg
fisttpl
xor
rcrl
cmpsl
stos
in
push
aad
push
push
flds
mov
inc
sbb
inc
add
cmp
mov
dec
xor
subb
jle
or
xchg
and
xor
loop
dec
test
and
inc
and
push
pusha
cld
xchg
loop
cmp
loopne
dec
in
test
mov
dec
rorl
cmp
cs
popa
jl
movsl
add
lahf
rcrl
xchg
int
popa
jb
scas
popf
lds
sbb
daa
inc
jmp
shrb
and
cmpl
lret
popa
in
or
jmp
adc
xor
and
cmpsl
clc
jg
jns
sahf
sub
and
cmp
jge
imul
or
imul
es
int3
sbb
mov
test
rorb
pop
rcll
in
mov
fmuls
mov
inc
cli
loop
daa
sub
jnp
test
and
das
jb
ret
inc
std
dec
sub
xor
daa
xor
aaa
andb
dec
inc
jmp
cmp
jle
mov
and
cmc
shrb
and
in
into
mov
sub
ss
fbld
sbb
mov
push
jb
sub
imul
adc
push
dec
rcr
nop
fisubl
lods
and
xchg
xchg
mov
xchg
jns
sub
icebp
in
xchg
add
lods
pop
enter
in
js
orl
sub
mov
xor
mov
loop
and
loope
loop
fs
dec
aas
imul
jecxz
shll
je
insl
in
imull
xchg
and
push
lahf
jnp
lods
repnz
push
adc
xchg
fdivp
imul
dec
imul
call
lods
fwait
mov
int3
loop
jg
inc
push
iret
daa
fisubrl
cmp
xor
add
add
fs
ja
pop
bound
lret
and
xor
cmpsb
jmp
pop
pop
xchg
sub
cmp
outsb
add
jns
inc
and
xlat
inc
jmp
pushf
bound
sbb
pop
sbbl
adc
xor
rcrl
stc
sbb
insl
imul
test
scas
xchg
push
adcb
fsts
mov
test
sbb
rcr
pusha
jecxz
xchg
gs
fcompl
lods
rcl
dec
loopne
call
in
xor
sub
add
mov
outsl
inc
jo
sub
adc
imul
movsl
xchg
hlt
xchg
test
stos
or
push
popa
xor
inc
aas
out
cmp
hlt
push
cmpb
dec
test
pop
mov
mov
inc
lods
iret
insl
aaa
imul
lcall
sub
jno
pop
mov
xor
jnp
mov
xor
test
mov
js
aaa
sarl
bound
xchg
jo
shrl
stos
push
or
sub
bound
lds
lods
and
fiaddl
jne
fstl
jecxz
inc
test
push
push
jge
imul
pusha
or
popa
cmp
xchg
lahf
lods
inc
mov
arpl
xor
cmpb
add
hlt
jle
sahf
movsl
or
loop
sub
lea
aas
push
mov
add
iret
mov
and
inc
jno
cltd
movsl
mov
mov
aam
jae
and
loop
frstor
xor
fcompl
fldl
dec
lcall
and
into
sub
mov
inc
add
push
mov
lds
stos
ljmp
mov
imul
popf
js
adc
xchg
cld
in
pop
loop
cld
xor
jg
adc
daa
jnp
sub
lods
mov
cmp
mov
mov
fstpt
add
add
gs
sarb
adc
inc
stos
or
dec
imul
in
fstps
lcall
insl
enter
or
mov
lods
xor
roll
fisubl
push
push
mov
mov
pop
add
fistpll
mulb
in
popa
xor
jno
xor
and
fisubrl
mov
inc
inc
out
mov
xor
sbb
lock
jmp
in
lods
adc
inc
sub
cmpsl
dec
test
lret
out
lds
xchg
repnz
jg
add
ja
xchg
mov
mov
cmp
xor
in
rcrl
aas
mov
bound
add
sti
mov
lahf
js
popf
std
pop
cmp
loope
xchg
and
test
mov
in
inc
test
cmp
jno
xchg
andb
xchg
jae
sub
test
je
and
daa
and
scas
pop
ja
inc
jmp
mov
adc
mov
out
sbb
adc
adc
fistl
xor
insl
pop
jns
xchg
mov
cltd
inc
adc
jae
and
add
or
jns
mov
imul
and
xor
les
scas
rcll
das
outsl
jmp
xchg
inc
lds
mov
daa
dec
pop
mov
lcall
mov
pop
adc
movsb
sbb
mov
sub
dec
fists
jb
dec
cmc
inc
mov
sub
pop
sub
cltd
aam
dec
jle
out
in
dec
and
pop
cmp
push
imul
std
dec
sbb
and
fs
test
pop
inc
aas
clc
adc
dec
or
popf
pop
ljmp
inc
cli
jo
cld
mov
rcr
outsb
test
movb
lret
xor
in
frstor
popa
test
and
rolb
popa
jmp
lods
xor
subl
and
sti
adc
dec
and
mov
mov
dec
orb
cmpsl
push
int
in
pop
inc
ret
and
pop
test
xchg
cmp
or
and
adc
adc
sbb
or
pop
in
and
push
and
add
and
cld
xor
and
fistpl
and
ljmp
or
sbbl
addl
push
pop
dec
pop
jmp
loopne
insl
dec
and
mov
lock
in
adc
and
popa
insb
xor
mov
lock
std
xchg
jle
addb
cmp
sbbl
je
popa
orb
aas
addl
lock
lahf
lods
jnp
and
ja
xchg
outsb
and
clc
jne
cmpsb
sbb
add
test
std
test
out
inc
jno
mov
jecxz
fdivl
and
push
test
scas
push
cmp
pop
and
and
gs
sarb
pushf
dec
xchg
test
mov
and
fwait
lcall
or
js
and
adc
stos
sbbl
dec
icebp
mov
out
cli
mov
sub
call
lods
adc
lds
iret
movsl
scas
sarb
and
out
and
xchg
sub
xor
scas
xchg
jge
and
add
xchg
push
repz
hlt
sub
inc
mov
mov
fsubrp
fs
test
mov
in
add
das
or
cmp
pop
bound
and
lcall
push
repz
pop
clc
fs
pop
sbb
sbb
xor
aad
inc
dec
cltd
outsb
xlat
in
cli
mov
and
mov
insb
pop
jns
push
xchg
and
cmp
push
xchg
and
add
cmp
sbb
cmc
cli
and
dec
xor
mov
push
out
sbb
mov
mov
mov
les
and
mov
inc
mov
imul
rcrb
popf
dec
mov
imulb
dec
andl
pushf
aaa
insl
and
sbb
push
test
and
lods
cmp
or
pop
push
mov
sub
jmp
xor
sub
cltd
dec
inc
pushf
shlb
inc
test
jge
leave
mov
ds
add
test
sbb
and
jmp
push
dec
es
pop
xchg
mov
cmp
dec
pop
and
inc
popa
inc
dec
inc
sub
cmp
jnp
jne
push
ja
jp
cs
jno
lods
and
fwait
xchg
stc
pop
jle
mov
pop
xorb
cwtl
and
add
std
and
dec
incb
insb
js
and
jle
jbe
inc
push
adc
lret
cld
lcall
xor
ljmp
push
push
mov
cmpsb
addl
repz
xchg
or
jno
adc
aam
mov
xchg
fildll
insb
and
adc
jg
shll
mov
fwait
mov
lcall
xor
test
int3
mov
loope
mov
andb
sub
cmp
call
sbb
in
jl
cmc
loop
mov
and
nop
test
outsb
mov
inc
iret
sub
mov
push
ss
mov
mov
shrb
fildll
int
mov
mov
mov
mov
adc
fbld
mov
xchg
aam
pop
cmp
shl
jecxz
andl
lods
and
int
jb
popf
mov
aam
and
lahf
sub
fs
add
mov
push
aam
mov
sub
in
inc
lds
mulb
das
je
mov
dec
stos
dec
and
mov
addr16
add
xchg
cmpb
sbb
mov
xchg
js
enter
and
inc
in
dec
xor
sahf
test
divb
xorb
aas
cli
and
push
test
daa
pop
test
sbb
mov
xchg
inc
push
pusha
and
mov
and
and
and
mov
and
mov
xchg
add
fs
and
lods
es
fidivl
and
pop
test
sbb
push
lock
mov
xor
add
push
push
add
mov
adc
cmp
dec
cmp
movsl
addr16
orl
int
adc
std
popa
mov
sub
pop
and
mov
mov
test
imul
scas
cmp
popa
jne
cltd
in
mov
and
shlb
adc
cmp
ljmp
xchg
insl
loope
mov
and
push
xor
pop
and
mov
sub
int
outsb
sbb
adc
loope
loopne
push
into
loope
cltd
jl
adc
subl
and
dec
movsb
mov
dec
int3
push
inc
stos
movsl
xchg
dec
pop
scas
in
xor
nop
push
js
repz
push
sbbl
loop
es
popa
adc
das
cmpl
aad
out
mov
ss
adc
in
and
xor
xor
inc
insb
and
popa
jmp
es
xchg
and
mov
ror
aas
iret
inc
mov
cmp
adc
mov
outsb
inc
cltd
lods
sbb
les
push
imul
mov
mov
int3
bound
lds
fsubrp
xor
mov
popa
cmp
dec
inc
xor
and
dec
or
test
clc
scas
inc
push
nop
and
mov
mov
mov
sub
cmp
movsb
push
mov
out
pop
in
sub
xchg
mov
or
out
jns
xor
pop
inc
cmc
xor
and
sbb
sub
inc
scas
or
xchg
jp
out
dec
inc
lahf
push
xchg
shrb
sti
push
ret
and
or
or
and
aad
inc
bsf
and
pop
andl
push
fistps
mov
sahf
out
pop
cs
cmp
xor
arpl
mov
and
pop
sbb
pop
cmp
outsl
and
insb
out
push
sub
in
lods
repz
in
inc
fwait
shlb
inc
idivb
sbb
lds
mov
mov
jg
popa
jle
lock
ret
mov
jne
and
into
dec
aas
int
jae
push
mov
mov
pop
xchg
pushf
and
mov
xchg
and
cmp
mov
dec
pop
and
adcb
xchg
push
mov
and
test
rorb
mov
push
pop
mov
lret
cmp
test
cmp
test
mov
jg
scas
call
mov
stos
lret
push
icebp
and
ficoms
jb
adc
std
jae
sbb
xchg
lods
aad
mov
sbbl
outsl
pop
inc
jmp
pop
and
dec
xchg
dec
adc
mov
popa
test
inc
les
repnz
xchg
repz
adc
sbb
mov
scas
lahf
adc
pop
jae
push
mov
xchg
je
ljmp
test
movmskps
mov
adc
add
cltd
xor
ds
loopne
and
jns
or
xorb
fiadds
icebp
add
sbb
jg
and
and
xor
push
cmp
sbb
add
cltd
orl
xchg
mov
shrl
mov
jmp
pop
mov
shll
push
in
push
push
mov
cld
or
loop
mov
shll
or
mov
pop
xchg
les
pop
push
daa
dec
lods
push
and
push
imul
add
push
loope
and
inc
movsb
ffree
pop
test
dec
push
jbe
sbbl
and
icebp
insl
rol
cmpsl
pop
mov
inc
xchg
out
orl
out
shr
cli
andb
gs
pushf
outsb
push
jge
mulb
sbb
iret
cmp
push
and
mov
dec
mov
xor
and
xchg
mov
and
dec
mov
arpl
jge
lods
outsb
mov
sub
cmp
push
jb
das
mov
fbld
push
lods
adc
and
rcrb
dec
dec
dec
cmp
cmpsb
dec
pop
es
enter
and
add
mov
jmp
mov
jne,pn
jp
dec
mov
push
xor
fs
mov
inc
pop
and
xchg
and
mov
int3
sub
inc
scas
and
scas
inc
mov
lea
and
lock
jmp
aad
repz
out
pusha
xchg
fdivrl
repnz
rol
jnp
cmp
jg
movsl
push
xor
ror
ret
jl
sub
and
mov
and
and
shll
lds
xchg
and
adc
data16
and
test
and
push
les
fsubrs
adc
loope
jbe
inc
add
xor
sbb
fbld
add
loop
sub
stos
nop
jmp
in
call
mov
jecxz
imul
mov
test
pop
in
sbb
xor
cmpsl
and
repnz
jb
stc
aaa
and
adc
cli
inc
fsub
ficoms
add
loop
jg
outsl
pop
jl
cmp
push
int3
insl
lcall
xor
popa
in
mov
inc
lock
sbb
dec
addl
and
fisubl
sbb
jmp
ja
inc
addr16
inc
ljmp
and
add
loope
outsl
sbb
out
cmp
or
xchg
lret
testl
mov
jno
cmp
sub
and
push
or
dec
jge
sub
mov
cwtl
int3
inc
imul
mov
call
inc
add
cmp
sub
and
or
lock
add
dec
adc
lea
leave
rcr
and
or
out
xor
inc
cmp
push
lock
scas
mov
mov
inc
mov
addb
and
dec
add
and
dec
sbb
mov
jnp
push
clc
mov
mov
lock
inc
lret
mov
jo
in
xor
or
xchg
cmc
fwait
aam
dec
popf
ds
sbb
js
fistpl
push
cmp
dec
lret
imul
daa
loop
or
and
shrl
add
add
ljmp
sbb
add
fnstsw
lods
xchg
xchg
mov
jle
imul
jns
mov
cmp
and
arpl
mov
popf
divb
insb
sbb
cmp
aaa
repnz
sbb
cmpsb
add
fstpl
mov
ss
enter
stc
and
shll
jge
and
jmp
and
sbb
imul
outsb
mov
fs
mov
dec
and
les
je
add
mov
test
mov
mov
xchg
inc
mov
iret
mov
idivl
out
scas
and
int
cmp
pop
cwtl
and
out
mov
ds
fs
lea
push
pushl
jecxz
loopne
roll
and
add
test
pop
mov
pop
mov
cmp
fcoml
adc
repz
imul
add
enter
scas
pop
enter
ljmp
xchg
jb
popa
loopne
out
pop
stos
push
jbe
sbbb
xor
fldt
or
mov
and
jp
in
pop
addl
loope
pop
out
movsb
cmpl
add
fnsetpm(287
and
xor
repnz
pop
fiaddl
and
add
pop
sub
cmp
arpl
and
or
je
js
and
dec
adcl
and
and
das
or
push
xor
and
fcmovbe
cmpsl
push
fbld
lds
xchg
clc
xchg
mov
jnp
out
fnstsw
movsb
stos
adc
lock
repz
popa
push
cmp
sub
cli
rcrl
sbb
push
fsub
ret
jno
sub
xchg
lock
lds
and
ljmp
pop
sbb
movsb
mov
and
and
mov
in
imul
aaa
in
inc
mov
mov
stos
jnp
lret
and
jecxz
dec
iret
xor
pop
ljmp
nop
add
mov
loopne
inc
movsl
add
loop
das
out
aas
pop
add
sti
pop
js
and
popf
mov
les
jl
and
jno
aas
push
roll
dec
rolb
mov
mov
gs
lods
sahf
and
idiv
mov
jp
and
mov
or
sbb
cmp
test
sti
test
fiadds
mov
scas
fistl
mov
jno
and
in
outsl
lea
jnp
rol
push
and
add
loop
mov
shlb
andb
add
fiadds
testl
xchg
lods
dec
ret
jmp
and
and
sub
xchg
fwait
xlat
sub
and
aad
addr16
or
xor
mov
xchg
sbb
push
sbb
mov
stc
jp
pop
xchg
xchg
and
test
push
addl
sub
add
call
and
test
push
pushf
sub
and
cmp
imul
out
gs
jno
sti
push
pop
into
rolb
inc
adc
scas
mov
lahf
and
mov
mov
pop
xchg
out
cli
mov
jge
and
rclb
test
loop
out
and
and
andl
cmp
enter
mov
out
jns
fwait
lret
and
or
push
xor
pop
and
ds
dec
dec
xchg
ds
sbb
cmp
iret
movsb
outsb
pop
loopne
and
xor
fldt
and
and
or
adc
popf
movsl
sbb
jg
sub
clc
jno
jl
lea
and
jno
cmp
out
mov
adc
sarl
dec
adc
xor
lcall
jmp
mov
xchg
add
enter
jns
cld
adc
and
sub
daa
insl
daa
and
adc
xchg
cmpsl
sub
lret
xchg
shlb
inc
cmp
xchg
sbb
popa
lods
push
jmp
pop
decb
and
adc
in
das
pop
mov
mov
and
push
repnz
and
add
insl
outsl
movsl
inc
fmull
pop
bound
pusha
push
addr16
jbe
inc
push
je
movsb
inc
call
popl
sbb
lods
pushf
lods
dec
cmc
and
and
ror
mov
add
and
push
shll
xor
loope
icebp
xchg
push
sub
int3
enter
xor
cld
or
sti
adc
out
test
int
loope
pop
jecxz
push
imul
and
adc
push
pop
rorl
and
lahf
jg
push
in
xchg
sub
cmp
xchg
cmc
or
sbb
mov
nop
stc
and
add
test
xor
adc
jbe
jl
or
iret
imul
and
pop
push
lods
inc
jge
imul
fsubs
in
or
and
mov
movsb
in
and
daa
fmull
movsb
mov
sbbl
mov
fldt
mov
mov
xchg
mov
add
sbb
data16
fsubrs
subl
and
adc
and
outsb
mov
mov
xchg
sub
pop
and
je
loope
inc
in
mov
decb
pop
pop
xchg
dec
sub
stc
cmpsb
mov
lea
dec
and
push
out
std
xchg
and
in
cmp
cmpsl
xchg
xchg
lret
adc
shl
mov
cmp
bnd
xchg
jmp
mov
and
inc
mov
fmulp
mov
jns
lahf
call
and
sbb
test
and
dec
xchg
bound
aam
imul
std
pushf
in
jno
stos
mov
inc
xchg
leave
pusha
or
xchg
and
or
int
and
mov
movsb
mov
xchg
js
adc
icebp
lret
sarb
add
adc
sbb
dec
mov
jb
pop
adc
loope
jg
xor
adc
and
add
xor
xchg
fs
add
dec
and
repnz
pop
mov
sbb
fdivrl
imul
jnp
adc
xchg
pop
and
insl
xor
addr16
lahf
lods
das
and
push
iret
popa
mov
mov
leave
and
or
xchg
rclb
push
test
lds
lods
mov
mov
pop
push
sbb
fwait
in
sub
cmpsb
mov
pop
aam
adc
push
sbb
xchg
mov
cli
jmp
mov
pop
cmp
jne
dec
nop
testb
and
out
repz
pop
out
jl
and
dec
cmpsl
mov
push
insl
mov
call
inc
shll
and
jp
jbe
pop
leave
add
xor
std
pusha
and
and
add
xchg
addr16
mov
inc
push
and
jecxz
repz
addr16
subb
xchg
stos
sub
daa
pop
and
in
mov
sarb
into
dec
imul
retw
clc
and
dec
or
sub
pushl
push
add
test
pusha
lret
adc
movsb
rcrb
sbb
loop
popfw
mov
shll
test
in
pop
cli
outsl
or
and
jno
xor
cs
shlb
xchg
mov
clc
loope
cltd
rorb
xchg
mov
sbbb
scas
adc
and
cmp
lcall
aas
roll
test
xchg
out
inc
cmp
xor
cwtl
in
movsb
xlat
dec
and
movb
and
or
and
fidivl
popa
dec
leave
les
fsubl
mov
arpl
repnz
sub
orl
xor
and
xchg
dec
pop
push
dec
push
and
sbb
cmp
test
lret
xor
xchg
shll
sub
dec
mov
xchg
clc
mov
cs
mov
imul
fs
and
fldenv
xor
popf
or
into
stos
sub
jnp
loope
cld
clc
in
push
int
add
dec
out
add
mov
cmpsb
jnp
mov
jne
fisubl
fistps
cld
mov
adc
mov
add
mov
sarl
and
loope
pop
daa
or
movsb
or
pusha
adc
stos
sbb
nop
cmp
pop
dec
mov
daa
sarb
pop
scas
call
sbb
rorb
pop
inc
into
and
sahf
jmp
xor
adc
cmp
insl
xchg
and
iret
dec
or
and
adc
test
cmp
das
outsb
inc
jge
push
mov
arpl
mov
dec
daa
leave
jecxz
lock
mov
mov
stos
push
ja
inc
mov
je
pusha
mov
pop
and
fstpt
and
rcrb
and
xor
stos
mov
cmp
movsbl
push
sub
and
push
dec
push
and
popa
push
cmpsb
fs
dec
pop
mov
sbb
roll
arpl
repnz
std
hlt
xchg
and
push
inc
mov
les
jecxz
add
call
sti
cs
fwait
stc
int
adc
xor
inc
sbb
xor
imul
insb
imul
scas
mov
adc
sub
sbb
push
push
sub
xor
push
dec
sbb
xchg
push
xchg
shll
in
vpaddd
rcrl
fwait
stos
aas
and
and
pop
je
push
andl
xor
mov
shl
lret
cmp
leave
sub
mov
and
push
movq
ljmp
not
mov
inc
push
jecxz
mov
out
and
testl
pushf
popa
aam
daa
and
fcmovnbe
iret
pop
pop
xchg
and
imul
inc
stc
or
xchg
ret
jmp
and
dec
pusha
push
add
ret
daa
fidivs
repz
lods
mov
jne
out
call
dec
inc
jbe
push
adc
push
and
daa
loopne
and
xor
sahf
and
adc
push
shlb
fs
add
sub
enter
cmp
xchg
adc
and
cmpsb
add
xor
leave
pop
mov
jmp
popa
adc
dec
and
scas
mov
and
add
mov
xlat
sbb
push
adc
cli
rorl
insb
mov
inc
or
lods
ret
mov
shrl
mov
mov
addl
test
bound
out
mov
mov
sahf
nop
mov
int
out
cmpl
sub
stos
xlat
dec
clc
and
aam
xchg
pop
and
xchg
jl
sub
mov
mov
cmc
addl
popa
addr16
repnz
jg
pop
dec
ljmp
xchg
sub
and
lock
xor
mov
mov
mov
movsb
pop
pop
iret
sub
and
aaa
sub
sbb
adc
data16
addb
movsb
mov
inc
inc
pop
jmp
pusha
cld
call
push
ljmp
jbe
ret
fsubs
pop
mov
inc
mov
lcall
mov
pop
cmp
pop
aas
sahf
jb
pop
push
pop
push
and
adc
mov
xor
stc
mov
pop
movsl
out
aad
popa
fmul
ja
cmp
push
int
xchg
sarl
dec
cmpsb
in
xor
or
fisttpl
xchg
insl
push
mov
fldcw
and
mov
idiv
and
insl
imul
negl
and
xor
push
fistl
sbbb
lcall
push
pushf
and
ja
or
dec
sub
js
popa
push
test
pushf
jno,pn
dec
cli
out
es
sub
fcompl
jb
xchg
and
dec
sub
mov
sub
push
push
xchg
fsub
lret
mov
rorl
dec
sarb
xor
popa
and
pop
call
cmp
stc
repnz
stos
and
jle
and
std
fistps
js
xchg
and
repnz
jns
cmp
and
mov
mov
and
int
and
jp
pop
cwtl
add
adc
xorb
inc
in
sub
test
fdivr
xchg
sti
xor
popa
cwtl
and
cmp
mov
gs
jbe
pop
es
sub
cmp
imul
dec
jb
lret
dec
imul
cwtl
dec
mov
and
sbb
pop
in
mov
jmp
and
or
mov
cwtl
mov
rorl
fwait
xor
out
jbe
push
dec
mov
adc
jl
scas
xor
cmpsl
sub
cmp
cmpl
and
or
icebp
sbb
sbb
mov
pusha
rcrl
mov
jb
xchg
sub
mov
orl
and
hlt
mov
sbb
jle
pop
loope
jmp
xor
or
sub
cltd
or
pop
mov
adc
mov
mov
mov
cli
inc
ret
inc
and
pop
aad
mov
mov
inc
inc
imul
dec
ret
xlat
cltd
mov
pop
jecxz
adc
mov
cmp
sarl
out
push
and
les
and
icebp
inc
pop
sbb
xor
add
imul
cmp
testl
jnp
fwait
into
and
push
mov
sub
cmp
fisubl
add
cli
loope
gs
lock
or
jb
mov
mov
int3
push
rcrl
jmp
and
pop
sub
xchg
test
xchg
inc
mov
movsb
test
icebp
roll
shrl
and
mov
imul
std
sub
cld
stc
arpl
inc
pop
xor
mov
jb,pn
pop
push
and
out
ss
popf
mov
and
mov
in
inc
and
ror
jp
scas
pop
xchg
mov
mov
fsubl
insl
push
push
call
and
popa
sub
xchg
scas
push
movsb
cli
and
fbstp
mov
mov
and
sub
or
and
lret
das
sub
in
mov
jmp
and
push
dec
or
jnp
outsl
popa
incb
mov
mov
inc
add
push
std
pop
and
jmp
adc
mov
stos
fsts
addl
and
xor
shr
rorb
mov
fcmovb
push
mul
adc
pop
movsl
mov
cmp
test
and
hlt
std
dec
divl
cmc
adc
mov
cmp
je
fwait
bound
mov
mov
and
mov
out
adc
dec
mov
or
out
mov
ret
dec
jmp
scas
ljmp
and
fwait
dec
pop
ret
inc
mov
cmpsl
iret
mov
scas
shlb
dec
insb
mov
push
xchg
cs
shr
xchg
pop
ret
push
mov
and
lahf
xor
pushf
and
aaa
inc
fnstenv
mov
cltd
sbb
lock
and
daa
xchg
dec
mov
stos
cld
dec
out
add
inc
cmp
fdivrl
mov
inc
cmpb
and
jbe
outsl
sbb
cmp
cmpsb
and
lea
and
call
xlat
ss
or
movsb
adc
and
pop
and
cltd
jno
and
cmp
clc
popa
aaa
fs
mov
lods
adc
xchg
andb
popa
stos
rclb
cs
dec
es
jge
and
jbe
int
cltd
push
pop
xor
sub
jecxz
inc
outsl
xor
xchg
jae
sbb
mov
and
sbb
mov
icebp
dec
add
jle
sub
sub
push
adc
repz
adc
and
pop
mov
and
pushf
sti
mov
fiaddl
pop
stos
inc
xchg
push
push
sub
cmp
xchg
in
and
jp,pt
in
cmc
push
cmpsb
push
fsubs
push
jo
pop
ret
andl
and
push
xchg
in
shlb
sahf
mov
dec
pop
cmpsb
pusha
or
push
sbb
xor
and
and
lds
sbb
push
or
mov
fdiv
xlat
aaa
scas
mov
hlt
arpl
les
inc
xor
lret
mov
jbe
xchg
xchg
fwait
jb
mov
testl
pushf
pop
test
daa
pop
popa
hlt
mov
mul
and
nop
subb
shlb
bound
mov
fcos
xor
and
in
sbb
and
inc
test
leave
push
std
pop
cmp
mov
pop
popf
adc
insl
mov
and
xor
nop
mov
sti
cmpsb
add
shll
je
adc
xchg
adcb
lahf
popa
sub
out
popf
mov
cs
out
mov
cmpl
movb
enter
test
pop
lock
std
mov
push
inc
and
dec
jle
pop
pop
mov
add
pop
insl
cmpsb
in
mov
fadds
jmp
xchg
or
rcrb
hlt
jl
mov
mov
xlat
sbb
ds
pop
inc
inc
jle
gs
jl
js
sahf
and
stos
fisubl
and
pop
xor
lret
jno
xchg
mov
test
xchg
sti
push
inc
and
mov
dec
push
fsts
sub
jg
aam
lret
inc
and
mov
cmp
mov
sbb
out
pop
mov
je
dec
xor
and
mov
mulb
bnd
movsl
std
xor
rol
lods
add
out
bound
inc
lock
scas
pop
dec
mov
cwtl
out
test
jo
aad
push
dec
imul
xorl
pop
inc
cmc
sub
mov
xchg
mov
lret
mov
shrb
and
sarl
and
sub
and
iret
or
and
add
aad
and
shll
xor
imul
into
psubb
cld
adc
pop
push
mov
jno
and
lds
and
adcl
xor
stos
sub
xchg
stos
cwtl
and
cli
add
js
mov
xchg
xor
frstor
pop
dec
jno
mov
xor
inc
push
fidivs
xor
fisubl
aaa
addr16
ret
movsb
mov
mov
rcll
div
mov
xlat
in
cmp
bound
jnp
mov
sub
repz
lods
imul
inc
and
mov
xchg
lea
cltd
inc
sbb
out
and
xor
lds
popa
bound
fildll
inc
adc
adc
enter
push
jge
jecxz
and
jg
jp
add
sub
and
jecxz
int3
ss
and
adc
push
and
pop
cmp
dec
xchg
sub
sbb
sar
outsb
lds
jb
mov
dec
jbe
stos
push
sub
pushf
and
icebp
fldt
xor
mov
ja
sti
xchg
mov
aam
dec
xor
cmp
inc
pop
and
insl
dec
movsl
call
nop
aaa
sub
sbb
xor
mov
and
push
enter
popa
adc
mov
push
jmp
push
pop
test
scas
fbstp
arpl
rclb
pop
pop
and
lods
or
mov
push
sti
jb
adc
and
pop
and
int
outsl
cwtl
cmp
sub
bound
cwtl
xor
out
out
test
aam
mov
stos
push
bound
dec
cmp
test
outsl
jge
pop
mov
sub
fwait
inc
lahf
stos
dec
and
sub
jbe
sub
call
push
cmp
jmp
lock
pop
jle
aas
ficoml
inc
mov
fiadds
fildl
xchg
sbb
mov
push
mov
out
xchg
adc
subl
jp
rolb
and
pop
pop
out
insb
aaa
repz
jl
xlat
pop
lahf
daa
stos
and
inc
stos
sub
shl
xor
jecxz
sub
mov
insl
mov
fldt
test
repnz
out
cmpsl
and
sbb
xor
in
rol
mov
out
and
lock
test
arpl
mov
sbb
cmp
dec
pop
popa
jno
shrl
fs
mov
mov
cmp
dec
orb
and
popa
push
mov
push
mov
sub
faddp
jge
cmp
fmull
inc
sub
sub
movsb
fadd
sbb
cmp
rolb
fnsave
mov
lret
lahf
and
adc
pop
mov
and
xchg
or
mov
ds
cmp
mov
into
fildl
mov
inc
orl
popa
ffreep
dec
dec
dec
xchg
scas
cwtl
xchg
jge
pop
out
leave
mov
jo
scas
sub
arpl
mov
push
movsb
mov
sahf
sbb
dec
jp
add
and
rorl
mov
mov
stc
cmp
test
sahf
imul
fildl
mov
and
sub
push
test
icebp
imul
fdivl
out
and
xchg
or
xor
inc
cwtl
aaa
aas
jp
mov
pop
icebp
cmp
test
call
jo
sbb
fwait
data16
pop
sub
inc
xorb
adcl
and
pop
mull
xor
loope
or
lret
sti
push
scas
shll
mov
sarb
in
mov
xchg
das
dec
imul
xchg
pop
cmp
cltd
fistps
pop
out
cld
xchg
movl
and
bound
insl
int
sub
push
mov
rol
mov
push
sbb
sub
xlat
lds
mov
add
fsubs
add
shlb
ljmp
jns
xor
divl
scas
out
xorl
and
inc
push
xlat
xchg
pop
xchg
add
movsb
xchg
and
xchg
in
push
sahf
mov
jbe
or
inc
clc
xor
out
shlb
xor
mov
cmp
and
mull
pop
outsb
jno
xlat
sbb
xchg
xor
arpl
push
pop
aaa
lods
loope
popf
push
and
xchg
or
sbb
icebp
dec
xorl
cli
das
push
ja
lds
lea
jge
jg
pushf
mov
sub
sub
or
mov
ja
loope
push
shl
push
test
and
outsl
mov
push
fistps
jg
mov
mov
aas
in
cmp
std
sbb
mov
in
test
cmp
iret
xor
sbb
imul
jle
mov
xchg
dec
jno
cmpsl
outsl
sub
mov
pop
addr16
mov
xchg
add
dec
and
sub
ret
test
xlat
aaa
cmp
mov
dec
push
inc
int3
xchg
inc
xor
push
repnz
rclb
lahf
sbb
mov
jne
sbb
and
pusha
les
xor
data16
imulb
push
loopne
fpatan
push
mov
hlt
mov
dec
xor
cmpsb
out
lds
test
mov
lods
inc
je
jne
and
nop
add
push
fbld
jbe
xor
cmp
mov
std
shll
into
inc
jle
xchg
xchg
xchg
insl
pop
and
int
cmp
pop
rcrl
and
aam
sbb
stos
jp
lods
negl
xchg
jge
pop
aad
in
mov
mov
cmp
test
repz
mov
ljmp
stos
and
jmp
xor
mov
into
fldenv
xchg
and
andl
adc
aad
mov
pushf
xor
bnd
and
dec
and
pop
out
ret
outsl
andb
add
sub
into
fst
bound
and
sub
mov
xchg
arpl
test
sub
and
cwtl
aad
shl
clc
test
jbe
dec
add
cli
add
test
insl
lea
stos
mov
mov
mov
mov
pop
cmp
jecxz
mov
ret
in
cmp
pusha
out
lret
and
adc
jae
sub
insb
cmp
out
inc
push
imul
xchg
jecxz
loop
test
call
dec
xor
jg
fiadds
and
fidivrl
mov
pop
jo
mov
dec
and
test
and
roll
and
dec
arpl
xchg
pushf
repz
inc
sbb
and
stos
add
and
jo
xor
jmp
xchg
mov
dec
lret
xor
in
xlat
mov
in
and
loopne
out
rcl
fmull
rcll
xchg
cld
inc
jmp
gs
pop
add
pop
movsb
pop
cmc
xchg
xchg
out
and
js
enter
and
add
insb
int3
jne
and
pushf
dec
fdivrs
inc
xchg
enter
out
mov
sbbl
jg
test
dec
jecxz
out
jns
push
and
pop
loopne
push
out
dec
pop
mov
sti
xchg
mov
lea
mov
push
add
loop
mov
mov
dec
sub
or
and
aaa
jge
test
fwait
nop
es
push
insl
cmc
mov
cmpsb
popa
shll
jno
jl
and
sbb
leave
jle
imul
xchg
push
cmpsl
pop
fisttps
and
add
sbb
jp
mov
cld
and
int3
sbb
cmpsl
ficoml
cmpsb
push
lds
and
rorb
and
jg
and
es
jne
mov
mov
out
and
enter
cmpl
pop
xor
fmull
xchg
and
rolb
hlt
push
xor
popa
std
outsb
je
cmp
jb
cmp
lock
jno
mov
push
or
lds
sbb
js
push
add
and
or
jl
movl
dec
je
push
jnp
rclb
dec
dec
xchg
mov
in
mov
outsl
movsl
dec
lahf
loope
bound
ret
andl
mov
jl
mov
popf
stc
cmp
push
inc
popa
out
xor
fidivrl
int3
adc
xchg
cmpb
popf
mov
dec
sbb
test
lods
sahf
pop
xchg
and
daa
pop
lcall
cld
adc
scas
es
popa
leave
push
jne
sub
xchg
cwtl
sti
pusha
icebp
aas
in
dec
sbb
xor
insl
pop
mov
lods
xor
out
and
sbb
ret
bound
mov
push
das
and
ficoms
loop
nop
mov
xor
and
mov
lahf
jno
stos
mov
dec
cmp
push
pop
shrb
sub
leave
mov
sbb
popa
push
sub
sti
mov
mov
lcall
push
sub
in
je
aas
mov
jb
jns
int
jg
push
incb
adc
sub
and
mov
jnp
and
inc
repnz
inc
or
mov
xor
popa
pop
jmp
jle
je
out
sub
xor
add
js
cmc
mov
nop
test
out
and
je
sub
cmp
out
push
mov
pop
cltd
fidivs
push
cli
in
and
mov
mov
inc
inc
xor
mov
and
sub
into
leave
inc
or
into
xchg
movsb
push
sahf
sbb
in
or
and
and
out
push
aas
adc
cmpsb
inc
out
popa
aaa
lahf
mov
dec
cltd
cmp
sbb
mov
sub
jbe
rcll
sub
ljmp
call
adc
rclb
dec
pop
fcmovb
mov
mov
and
pop
push
jl
mov
ret
repnz
and
and
rolb
insl
mov
in
adc
movsb
pop
add
pop
xchg
leave
cmp
sub
loop
dec
inc
inc
dec
jnp
adc
and
and
scas
arpl
mov
sub
jne
sbb
push
add
imul
mov
and
lods
mov
int
cli
mov
popa
adc
cmp
sub
test
ret
mov
push
add
sub
fadds
movsl
add
sub
cmp
cmp
pusha
mov
jecxz
dec
std
sub
mov
shlb
int3
subl
adc
jnp
adc
sbb
sub
push
lods
mov
movsl
inc
xchg
mov
and
push
inc
je
push
and
add
mov
mov
test
and
push
das
jecxz
into
sti
and
push
mov
mov
test
shlb
mov
test
icebp
push
dec
and
lret
pop
mov
sahf
push
sbb
fs
mov
ds
and
mov
aas
inc
inc
popa
js
movsl
out
sub
daa
test
pop
push
inc
shlb
push
iret
icebp
mov
sub
pusha
cmpsl
pop
aas
cmp
sub
push
mov
jns
mov
loope
adc
cltd
repz
xorb
ret
mov
mov
jno
or
mov
movsb
cld
adcl
bound
mov
scas
outsb
stos
cltd
sbb
daa
or
imul
mov
and
sub
pop
cmp
pminub
and
xchg
push
test
sahf
and
dec
clc
wrmsr
inc
and
mov
and
cmp
int
xor
loopne
decl
leave
popa
mov
push
stos
shr
js
shlb
in
insb
repnz
jle
cld
cmp
cmp
stc
sub
ret
pusha
push
xchg
jge
cmc
and
xor
repz
xchg
mov
lret
or
push
push
sbb
test
xchg
push
rcl
aad
xlat
popa
and
rcll
sub
or
and
push
mov
shll
mov
fisubl
daa
sub
cltd
xchg
rolb
popa
mov
mov
cwtl
push
inc
add
ja
mov
mov
and
or
xor
dec
pop
roll
sub
stos
mov
and
int
or
mov
enter
sub
test
rcrl
out
test
in
and
fisttpll
cs
or
add
add
imul
aas
jnp
and
cmp
dec
mov
and
dec
or
pushf
jmp
push
sbb
xorl
pop
out
aad
iret
mov
fwait
sub
stos
pop
cmpsb
orl
icebp
sbb
and
add
and
adc
push
xor
test
sub
ljmp
fs
sub
xor
mov
ds
loop
cld
push
mov
or
fmuls
aaa
and
pusha
or
xchg
das
and
push
inc
mov
out
sbb
jg
mov
and
and
lods
sahf
and
addl
aam
movsb
pop
xchg
lods
inc
or
mov
out
and
cmp
push
rclb
and
mov
jno
movsb
or
push
mov
js
ljmp
adc
inc
dec
popa
sti
mov
mov
inc
jmp
pop
cmpb
push
adc
mov
js
pop
jbe
sahf
xchg
xor
xor
out
and
sbb
mov
pushf
bound
inc
mov
inc
push
cltd
jl
push
test
pusha
bound
or
add
mov
into
popa
into
aaa
in
inc
and
push
push
mov
xor
out
and
in
add
lods
outsb
jae
inc
movsb
sub
repz
sbb
push
cmp
in
inc
and
aam
test
out
cmp
popa
sbb
xchg
in
push
dec
jecxz
push
mov
cmp
pusha
scas
sahf
iret
and
mov
xchg
and
stos
stos
in
jbe
cmp
and
loop
mov
sub
jp
inc
dec
mov
imul
pop
cmc
and
add
cmp
xor
pusha
and
fs
mov
movsl
xor
orl
lcall
and
mov
push
scas
mov
std
sub
movsb
pop
inc
lahf
pop
inc
mov
and
or
ret
dec
cmp
ds
into
fstp
mov
pop
arpl
cmp
pop
test
add
in
shll
adc
and
jne
mov
movsl
insl
fisubs
add
xchg
into
insb
lret
scas
jo
pop
mov
in
mov
xchg
jl
mov
sbb
sbb
push
mov
and
sub
addr16
outsb
sbb
push
pop
das
push
popa
mov
out
aas
and
pop
fwait
adcb
mov
aaa
push
sbb
fidivrl
ja
ret
cmp
mov
push
mov
test
and
or
pop
pop
and
out
push
inc
push
movsb
lcall
pop
inc
or
pusha
sbb
sbbl
shlb
sub
mov
pop
lcall
aaa
cmpsb
add
movsb
mov
sub
pop
jmp
sbb
scas
mov
and
jb
lock
sbb
xchg
inc
mov
js
test
lret
hlt
or
ret
xorb
lods
stc
fwait
mov
and
cs
jle
out
add
jg
sarl
movsl
ret
sbb
and
int
es
sti
sbb
cmp
mov
and
and
pusha
xchg
and
ds
adc
insb
rcrl
mov
rcrb
push
repnz
push
push
add
xor
or
cmp
imul
cwtl
inc
inc
mov
test
xlat
in
push
jo
pop
in
outsb
adcl
call
addb
pop
mov
mov
pop
popa
cmp
popa
xchg
pop
repnz
xchg
mov
cmp
orb
fcom
aaa
popf
dec
sub
lods
push
sub
and
mov
mov
cmpsb
mov
mov
mov
push
pop
popf
dec
jae
or
add
and
xchg
mov
scas
dec
mov
std
add
out
push
stc
xor
cmp
or
add
and
cli
loope
bound
push
pop
mov
xchg
repnz
and
jge
inc
aaa
jle
mov
call
xor
popf
add
cmp
xor
and
negb
sbb
cmpsl
lea
sub
mov
out
push
mov
cwtl
sub
xchg
movsl
and
mov
push
push
in
xchg
add
dec
mov
xchg
mov
and
and
mov
iret
outsl
push
inc
fbld
push
or
cmp
xor
andl
sub
mov
mov
cmp
mov
or
jne
push
popa
cmp
mov
xor
lods
outsl
lea
dec
pop
mov
aad
mov
jge
nop
mov
sub
les
aas
and
out
jbe
movsl
and
xchg
cmp
or
inc
push
jbe
dec
and
nop
mov
and
arpl
sub
cmp
cmpl
js
in
shlb
sbb
xchg
and
daa
pusha
mov
xchg
addr16
and
jo
jns
gs
and
movsl
leave
inc
inc
mov
push
sub
mov
in
mov
es
xchg
das
lods
sbb
popa
pop
enter
fwait
sub
pop
pop
into
inc
nop
pop
int3
cmpsb
push
and
mov
push
popf
cmp
cmc
pop
fs
dec
jl
andl
and
sarl
enter
push
mov
andl
push
jge
dec
cwtl
je
add
xchg
jmp
inc
xor
aas
std
mov
push
cltd
in
repnz
jae
jne
inc
pushf
mov
lret
xor
push
cmp
int3
aaa
fildl
and
push
inc
push
and
popa
out
dec
cwtl
and
xor
and
ret
rclb
jg
nop
pop
sub
imul
movsb
and
jge
mov
bound
ss
cs
aas
lcall
jecxz
add
filds
fucomp
out
daa
sbb
xlat
mov
pop
xchg
and
xor
and
stos
fcmovbe
and
or
mov
dec
mov
inc
popa
sbb
mov
or
insl
pop
lods
arpl
mov
in
sbb
xchg
loopne
test
gs
imul
xchg
fdivl
sarb
cmc
stos
dec
cmp
push
xor
cmpsl
pop
jae
in
push
in
mov
and
popa
sahf
imul
sub
sbb
test
aam
push
inc
sub
aaa
mov
mov
gs
xchg
addb
fs
cmpl
ret
add
leave
cmp
mov
fnsave
adcl
pop
or
xchg
dec
xor
and
aas
jbe
outsb
mov
or
lcall
cmp
and
inc
pop
fisttpl
sub
sahf
stc
aas
and
dec
dec
add
and
ds
xchg
or
loop
mov
xchg
dec
xchg
dec
add
pop
scas
loope
popa
adc
mov
or
dec
orl
xchg
cmp
cmp
or
int
mov
xchg
mov
call
inc
cld
mov
and
enter
je
and
sub
shlb
std
xchg
or
daa
inc
sbb
stos
inc
xchg
sti
and
sub
repnz
xchg
popa
push
nop
mov
int
sub
jmp
mov
pop
push
mov
test
cmp
mov
and
dec
dec
or
sub
push
push
xchg
cmp
xchg
and
xchg
fndisi(8087
sarb
out
stc
add
and
lahf
roll
inc
cld
test
cltd
and
cmp
outsl
arpl
mov
or
imul
xchg
dec
outsl
jge
cmpl
lret
cld
andl
lods
dec
inc
scas
les
sbbl
enter
and
frstor
bound
pop
call
movq
jno
and
jns
mov
cmp
popa
fnclex
test
movsb
push
lea
ss
fsubrl
and
lock
rcl
pop
jmp
mov
test
push
sub
add
ja
imul
mov
int
mov
das
sbb
popa
cmp
jae
push
cs
cmpsl
or
adc
scas
and
jmp
cmp
daa
leave
xchg
into
pop
xchg
xchg
ljmp
add
repnz
test
xlat
mov
rorb
sub
daa
sarl
and
mov
adc
xor
sahf
and
scas
inc
into
push
mov
imul
lods
and
out
dec
jle
es
cwtl
or
imull
mov
and
pop
xor
loope
push
pop
fstl
fnsave
addr16
mov
and
into
and
add
popf
or
xchg
lds
test
xor
ja
push
movsl
adc
rcrb
and
sbb
add
or
cmpl
es
adc
push
add
loop
push
and
push
data16
adc
outsl
push
mov
das
or
lods
popf
mov
and
push
cmp
push
cli
nop
and
and
push
movsb
repnz
pop
cmp
and
add
and
jbe
inc
int
fsubs
loop
test
orb
rclb
mov
sub
xlat
leave
f2xm1
into
lcall
pop
sub
lds
pop
addl
inc
mov
idivb
jbe
pop
and
pop
pop
mov
lds
adc
push
and
adc
and
sbb
jp
jae
jge
fdivl
sahf
push
sub
and
rcr
adc
adc
push
jle
or
test
push
test
and
inc
jle
adc
enter
xor
jge
call
sub
mov
call
sbb
xor
add
inc
sub
lock
adc
inc
mov
inc
fldenv
mov
jmp
jp
leave
or
ret
jg
jge
sbb
jl
test
mov
es
imul
jle
test
fbstp
mov
cmp
xchg
and
negl
mov
stos
and
fwait
inc
sbb
or
in
ret
ja
xchg
shlb
std
mov
fs
and
push
adc
add
daa
push
push
dec
std
xchg
lret
push
and
xor
push
ss
sbb
mov
ds
mov
push
mov
mov
mov
adc
and
jnp
insl
test
aad
and
mov
sub
stos
out
sub
mov
sbb
sub
lock
into
adcl
in
rcll
movsb
jp
adc
add
dec
and
mov
leave
out
adc
test
mov
pop
mov
ret
rcrl
mov
cmpsl
add
insb
or
and
pop
pop
xor
mov
cmp
and
fwait
in
mov
jmp
inc
arpl
mov
inc
mov
add
push
fmulp
adc
ja
and
or
out
jle
cmpsl
test
fdivs
das
jno
sub
test
jge
lahf
inc
jmp
xor
jmp
dec
js
mov
xor
iret
and
inc
xchg
fbld
out
dec
in
push
mov
outsl
and
imul
sbb
mulb
push
cli
inc
into
lods
test
mov
addr16
or
pop
outsl
cmpsb
lock
xchg
jp
std
mov
dec
inc
bound
and
adc
adc
cltd
mov
mov
adc
test
es
mov
jecxz
sub
outsl
and
and
xchg
push
ds
jne
enter
repnz
fs
mov
iret
and
aam
clc
shlb
dec
mov
flds
rorb
js
addr16
jbe
icebp
hlt
and
xor
mov
movsb
mov
bnd
cmp
sub
icebp
push
sbb
xchg
es
push
mov
and
roll
and
and
jae
push
and
or
cltd
add
repz
and
mov
pop
dec
lea
call
inc
and
add
or
jle
push
push
cld
inc
push
mov
shrl
movl
das
daa
adcl
into
lret
lahf
std
movsb
xor
and
cmp
stos
xchg
adc
ds
mov
sub
lahf
rolb
mov
test
test
adc
and
mov
in
xchg
jae
inc
and
int
push
stos
pop
add
cld
xchg
or
enter
xor
xchg
xchg
lods
lods
push
xchg
cltd
in
inc
and
cmpb
daa
mov
add
jecxz
pop
inc
mov
popf
shl
mov
rclb
loop
sbb
or
sbb
and
int
dec
xchg
lods
repnz
cmpsb
mov
sub
mov
mov
setge
insl
bound
and
jg
mov
std
lret
xor
sub
inc
in
or
xchg
data16
sar
jnp
imul
add
sbb
lret
ret
aad
clc
into
push
adc
movsb
je
sub
test
das
xor
leave
inc
orl
jle
and
xorb
sbb
cli
pop
xchg
xchg
mov
sbb
cmp
and
push
fs
and
or
cmp
push
scas
inc
dec
cmp
xchg
push
popf
push
and
mov
mov
pop
push
out
aaa
cmp
adc
hlt
in
mov
mov
fsubp
mov
outsb
repz
sub
mov
std
cmp
jmp
mov
mov
faddl
jnp
inc
popa
jle
insl
cmpl
jae
xchg
and
and
push
sub
repnz
add
nop
jecxz
push
int3
aad
sbb
pop
lret
add
jns
mov
mov
data16
dec
jge
cmp
and
or
cmp
ret
jbe
jae
mov
outsl
jns
and
xchg
lret
jnp
cmc
and
sahf
lock
mov
mov
movsl
fnstenv
mov
sub
mov
outsb
jb
dec
lahf
dec
sub
ljmp
or
add
adc
rolb
and
loopne
inc
sbb
mov
lret
ret
inc
outsb
inc
push
pop
mov
mov
push
jp
movsb
faddl
dec
and
shr
inc
stc
lret
add
mov
popf
sbbl
mov
test
xchg
xchg
inc
mov
jg
fs
clc
mov
mov
enter
adcb
ljmp
jno
jge
test
sub
lock
and
daa
xor
jno
loop
xor
lcall
scas
dec
bound
test
sub
sbb
or
sbb
insb
mov
sub
flds
int3
jmp
rorl
mov
hlt
and
sbb
push
sbb
adc
jge
adc
lret
test
dec
cmpsl
pop
inc
cwtl
add
fsubs
push
div
mov
rorb
push
and
rorl
xchg
mov
out
lock
ljmp
cmpsb
mov
popa
ja
int3
clc
scas
xchg
xor
and
mov
and
push
data16
lahf
pop
sbb
pop
jb
test
fidivl
pop
pushf
sub
repnz
push
mov
dec
push
jl
jae
push
rclb
incb
and
mov
ds
xor
jge
and
push
push
dec
test
and
mov
push
inc
stos
lahf
and
dec
add
ds
pop
cmpsb
xor
mov
movsb
mov
xchg
pop
pop
inc
and
mov
pop
sbb
and
ja
in
rolb
repnz
and
pop
fidivrl
mov
push
inc
mov
aad
or
cltd
je
or
out
sub
mov
and
out
cmpsl
mulb
cmp
popf
lock
mov
xor
repz
xor
ficomps
sub
mov
sbb
lods
dec
mov
and
sub
xchg
push
sub
mov
mov
jp
das
mov
mov
jae
mov
sub
and
push
mov
adc
inc
and
negb
mov
ja
jnp
and
fldt
arpl
shll
fildl
adc
lcall
mov
clc
loope
mov
jns
add
test
push
sub
pop
enter
loope
and
adc
pop
and
push
data16
jge
mov
cltd
inc
ret
mov
push
movsl
mov
outsb
ds
jo
movsb
andl
fistps
enter
in
sbb
dec
lcall
stos
andb
jns
pop
mov
mov
fs
inc
add
popf
outsl
push
mov
push
or
pop
cmc
push
add
adc
or
push
xchg
lock
mov
sbbb
daa
cmpsb
inc
sub
aad
and
pop
mov
and
jb
cmova
repz
and
int
add
test
gs
arpl
mov
in
xchg
ljmp
mov
arpl
lods
and
cmp
dec
setp
add
mov
inc
das
and
pushf
xchg
movsb
xchg
std
outsl
fstps
push
dec
mov
and
xlat
popf
out
test
xchg
and
addr16
mov
jg
enter
fisubrs
adc
push
sahf
cltd
ljmp
cmp
int3
movsb
aas
mov
scas
inc
xchg
hlt
sub
aaa
ret
pop
and
fs
and
jb
dec
push
hlt
clc
and
pushf
test
sbb
mov
xor
call
and
mov
push
jl
sub
dec
ja
nop
data16
push
cmp
or
xor
and
xor
fadds
fisubl
jecxz
pop
and
popa
sub
adc
push
and
push
xchg
fildll
cmp
loope
sub
mov
push
xchg
add
dec
leave
xchg
pop
pusha
cmp
pop
imul
pushf
dec
movb
lea
popa
stos
mov
cli
pop
nop
and
or
ja
mov
mov
enter
repz
cmp
pop
addr16
jl
popa
lcall
out
add
jne
mov
cld
mov
mov
leave
shlb
and
inc
jge
sub
jmp
and
and
mov
mov
push
ljmp
adc
loopne
shl
lcall
aad
hlt
icebp
xchg
mov
clc
cmpsb
enter
mov
inc
xlat
mov
jns
mov
scas
pop
push
jmp
and
in
mov
and
xchg
inc
cltd
pop
lahf
xchg
jle
addb
stc
repnz
inc
inc
mov
in
outsl
cmpb
outsb
test
or
inc
adc
push
in
push
lahf
and
mov
xchg
jo
adcb
cmp
lcall
fistpll
xchg
xorl
pushf
mov
ret
enter
inc
fcomip
scas
pop
hlt
leave
inc
mov
xor
cld
ljmp
inc
cmpsl
repz
movsb
pusha
lea
cmpxchg
icebp
in
mov
mov
pop
mov
pop
dec
jl
inc
in
loope
imul
ljmp
sti
inc
pop
popf
pop
andb
imul
and
push
mov
dec
xor
cltd
adc
ds
loop
lock
mov
call
fidivl
outsl
mov
cld
or
dec
in
add
sub
enter
dec
jge
or
cmp
xchg
inc
cld
lods
pop
pop
push
mov
dec
and
mov
xor
mov
dec
mov
cli
jecxz
bound
icebp
fsubl
push
xor
subb
inc
push
or
dec
lret
shlb
add
and
or
mov
sbb
dec
push
mov
and
or
mov
mov
xchg
cwtl
and
push
push
and
sub
and
mov
sbb
and
les
adc
xlat
ja
ret
andb
sahf
jmp
insl
mov
cwtl
leave
mov
cltd
mov
fldcw
mov
and
js
or
adc
add
popf
test
bound
adc
dec
and
and
and
mov
fisubs
cs
pop
lret
jo
and
mov
ljmp
cmp
js
test
sbb
and
je
push
jo
addr16
lds
sub
push
adc
fbld
pop
into
jns
call
xchg
mov
add
sub
inc
jle
and
mov
shl
dec
xlat
xor
mov
andb
or
movsl
das
xchg
mov
cmpl
inc
dec
mov
lahf
leave
xchg
and
ds
pop
pusha
pop
add
arpl
fstl
mov
jp
aam
and
mov
lea
and
push
and
call
or
testb
pop
insl
sub
scas
cmp
iret
mov
das
push
leave
test
movq
xlat
inc
inc
into
mov
movsb
xor
ficoml
sub
cmc
and
out
dec
adcb
scas
fmull
sbb
dec
adc
add
fmull
add
fnstenv
pop
inc
xchg
scas
pop
loope
test
cmpl
inc
xchg
hlt
fsubr
stos
mov
andl
cmp
and
mov
and
jl
std
test
xor
and
jecxz
mov
and
xchg
mov
cld
lods
das
cli
push
xchg
cmp
stos
jecxz
sbb
push
or
scas
xor
jbe
cmp
fbstp
and
or
and
or
aas
popa
adc
test
push
and
jne
mov
test
lds
lahf
ss
std
push
test
popf
call
xchg
xchg
out
and
cmp
outsl
and
iret
jge
es
sub
mov
adc
lcall
push
fwait
add
inc
ja
push
push
sub
loop
cmpsb
mov
inc
xchg
test
jecxz
lret
fbld
test
inc
xor
pop
lahf
pop
and
jmp
fisubrl
cli
inc
dec
sub
sbb
js
jmp
out
jns
add
adc
popa
mov
rol
test
pop
ds
inc
xor
jge
xchg
pop
and
or
lods
test
movsb
adc
stos
or
pusha
dec
sbb
and
into
mov
and
movsl
aaa
fistps
ja
jbe
in
jecxz
cmp
mov
decl
test
xor
cmp
jbe
add
clc
mov
jmp
and
mov
push
cmc
ficompl
popa
test
xchg
addl
and
push
int3
fisttpl
pop
out
hlt
adc
xchg
inc
scas
into
jno
inc
inc
rolb
sub
dec
cmp
pop
and
and
or
jns
test
dec
decl
cmp
clc
sub
sbb
add
ljmp
adcl
pop
cmp
xchg
add
scas
or
mov
inc
xor
xor
and
jecxz
and
jns
push
xchg
test
dec
and
dec
pusha
mov
mov
aam
das
fs
inc
mov
pop
jno
xchg
stos
mov
and
pushf
cltd
xchg
and
and
or
pop
mov
ficomps
inc
xchg
mov
sub
enter
sbb
push
das
sub
mov
sahf
loop
mov
imul
and
out
sub
jl
lods
xor
adc
pop
sbb
shrb
popf
jecxz
push
movsb
jp
loop
shll
cltd
pop
lds
mov
mov
cmp
push
and
sbbl
js
dec
outsl
pop
push
and
mov
and
mov
scas
movsl
dec
mov
lahf
mov
xchg
sbb
lret
xchg
xor
aaa
int
cmc
mull
inc
add
cmpsl
cli
pop
inc
int
xchg
lea
movsb
rorb
xchg
sub
sbb
jbe
pusha
mov
rcrl
std
jno
or
and
jl
pop
fldl
and
cli
cwtl
push
ror
sub
daa
aaa
shr
or
roll
inc
out
mov
and
inc
pop
mov
ss
out
push
cwtl
insl
cld
inc
xchg
jge
and
notl
enter
push
jns
and
fcmovnu
pop
or
and
hlt
sbb
mov
cmpl
sub
push
movsl
cwtl
jg
mov
je
xor
jbe
inc
adc
aad
ret
sub
mov
in
and
popa
lret
xchg
add
push
jle
fcmovb
xchg
aaa
mov
xchg
pop
fisubs
xor
inc
and
rorb
and
push
cli
mov
and
xor
mov
inc
and
sub
cmp
mov
lahf
mov
popf
xor
mov
loopne
js
aas
jbe
mov
ja
iret
in
sbbl
ljmp
aam
and
test
sarb
push
add
jmp
cmpsb
fdivl
inc
adc
rolb
popa
lods
sbb
and
jmp
sbb
dec
lds
hlt
aas
push
sbb
add
and
call
sub
pop
lea
and
or
scas
sbb
push
aad
cli
xor
dec
jnp
das
cmpsb
and
dec
movsl
stc
and
cs
push
sbb
addr16
sbb
cmp
fsubp
xor
pushf
pop
out
adc
pop
mov
and
ret
mov
xor
js
xor
sbb
inc
and
sar
leave
and
orl
push
xorl
lret
cmc
lods
xchg
lock
jmp
push
jge
and
cmp
aas
adc
jle
push
lock
and
or
test
mov
push
inc
adc
dec
mov
sahf
ret
mov
push
adc
mov
lods
addr16
pop
lret
and
add
xor
xchg
mov
es
movsb
adc
xor
jae
andl
mov
xchg
nop
jns
cmp
jge
jbe
fmull
ds
cmc
popa
mov
pop
pand
jp
cld
lods
and
or
das
sbb
sub
xchg
out
mov
and
lret
adc
mov
and
or
inc
into
add
jmp
lcall
int3
xchg
insb
or
fstpl
in
or
enter
cmp
popa
daa
imul
jl
push
pop
mov
push
ja
and
in
and
js
out
and
mov
push
mov
repnz
push
loop
jmp
repnz
es
xor
mov
and
mov
subl
dec
cmpsb
jle
in
inc
cmc
push
mov
xchg
jp
into
jne
lds
sub
ret
les
das
mov
adc
pop
int
push
arpl
and
xorb
jmp
and
dec
in
inc
ljmp
jle
sbb
adc
incb
ss
push
cmp
dec
ret
pop
and
loopne
cmp
mov
cmp
push
lock
mov
pop
push
and
aad
fucomp
cmpxchg
jmp
cmp
fisubrs
and
fsubl
gs
loope
mov
movsb
xchg
or
mov
push
mov
pop
xorl
inc
loopne
and
sti
dec
lods
inc
mov
pop
push
xchg
mov
fildll
cmp
xchg
dec
sahf
dec
jg
add
lahf
jmp
and
inc
xchg
test
sub
xlat
fmul
inc
add
arpl
mov
mov
aam
jno
data16
jno
call
push
and
push
mov
inc
add
and
mov
mov
add
add
jle
add
jno
arpl
jne
dec
leave
xor
movb
cmpsb
mov
pop
mov
ss
mov
dec
aaa
push
and
mov
test
loope
or
call
add
int3
sti
push
cmpsl
push
dec
sbb
jne
ret
and
pop
cli
lods
push
lret
sbb
add
iret
jge
and
repz
inc
js
mov
xchg
nop
enter
and
adc
jns
outsb
and
dec
out
lret
jno
and
movsb
lcall
adc
insb
add
dec
xor
mov
jl
pop
in
stos
cltd
push
sub
sub
mov
sbb
mov
and
shrl
daa
pusha
jae
jne
mov
mov
mov
outsl
movsl
shlb
mov
xchg
fstpl
and
std
ja
loopne
rolb
lret
cmp
repz
mov
les
xlat
popf
call
cmpsl
and
mov
mov
mov
sbb
fildll
jno
inc
fcoml
ljmp
pop
je
popa
xor
dec
dec
add
jecxz
incb
or
and
in
repz
dec
adc
add
pushf
mov
shll
sbb
mov
and
cmp
jno
add
cwtl
ja
inc
jae
out
lret
movsb
les
dec
inc
xchg
pushf
dec
mov
cmpsl
push
lock
add
cmp
mov
xchg
out
and
popf
sbb
xor
scas
and
mov
or
hlt
in
into
sub
pop
inc
loopne
call
and
cmp
outsb
and
fwait
rorb
gs
enter
or
test
in
dec
xchg
and
push
loopne
jp
xchg
sub
push
sbb
fs
adc
fldcw
or
imul
xchg
pop
add
push
mov
xchg
mov
cld
dec
mov
jnp
add
mov
movsl
pop
in
and
push
xchg
cmc
mov
out
add
sbb
lea
mov
frstor
fstl
test
mov
popa
xor
pop
out
inc
jno
movsl
cmp
adc
andb
into
aaa
lahf
cltd
xchg
subl
jb
sub
je
mov
pushf
pop
fcmovb
gs
cmp
ret
jmp
xchg
and
fimuls
inc
shll
and
fwait
xchg
test
pop
daa
por
cltd
sbb
xchg
hlt
fldl
adc
inc
push
adc
and
test
dec
in
and
in
call
sub
les
and
rorb
stos
jecxz
mov
add
cmpsl
dec
and
xor
paddb
ret
add
jo
and
xchg
stos
test
pop
cmp
andl
int
and
outsb
adc
push
add
mov
rclb
dec
fwait
cwtl
movsb
outsl
aam
and
pop
pop
cmpsl
cmp
andl
ss
fwait
and
ljmp
out
and
cmc
dec
push
and
push
jmp
and
scas
sbb
adc
inc
fcom
fwait
rol
xchg
clc
and
ljmp
mov
das
push
imul
mov
or
sub
leave
and
inc
sub
xchg
cli
icebp
loope
jns
lahf
imul
cmpsb
and
xor
cltd
pop
fnstcw
cmp
push
or
arpl
imul
and
in
sbb
dec
pop
xor
pushf
out
aaa
push
and
xchg
fdivs
xchg
cltd
data16
and
mov
xchg
sahf
xor
add
inc
xor
push
pop
call
jns
inc
cmc
push
mov
popa
pop
xor
dec
dec
and
xor
pop
cmp
or
sub
pop
xchg
ja
test
lods
jae
bound
adc
and
add
or
out
test
adc
mov
jmp
jne
or
imul
adc
push
and
xor
or
sarb
test
pop
jecxz
pop
dec
mov
inc
push
dec
pop
test
pop
fcoms
and
and
push
and
inc
and
dec
popf
and
adc
pop
adc
shlb
mov
popf
mov
dec
mov
dec
inc
xchg
inc
shlb
out
inc
or
lock
jge
fmulp
inc
mov
mov
pusha
sub
aas
push
leave
rcl
inc
jle
and
repnz
in
inc
jns
and
xor
pushf
pop
fldt
movsl
mov
mov
out
lcall
loope
push
or
add
xor
adc
sbb
add
adc
mov
mov
xor
je
ret
iret
loope
popa
mov
jmp
push
inc
and
cmp
xor
lcall
push
scas
add
dec
mov
mov
comiss
movsl
pop
xor
cmp
add
jns
mov
test
mov
add
and
std
and
imul
test
xchg
mov
test
and
insl
sbb
and
xchg
jno
ljmp
insl
repz
xor
cmpsl
insb
ret
stos
fstpl
sbb
jnp
clc
int3
mov
jmp
test
insl
loop
out
outsl
jbe
mov
push
popa
xor
test
imul
xchg
mov
stos
cmpsb
and
sub
les
mov
jb
xchg
and
mov
in
sbb
jno
dec
inc
fcoml
mov
fbld
lock
insl
mov
scas
cwtl
push
jle
and
notb
dec
mov
iret
mov
mov
scas
cmp
and
mov
dec
fiaddl
pop
jne
in
and
jl
out
mov
sbb
ja
cmp
incb
xchg
and
mov
and
into
outsb
sahf
inc
out
mov
rcrl
test
xor
mov
xchg
iret
pop
cmp
mov
mov
dec
and
push
adc
and
xor
test
cli
or
and
mov
jns
xlat
adc
cld
imul
dec
inc
outsb
pop
out
push
ret
and
shrl
lahf
mov
push
push
pop
cmp
pop
and
in
mov
and
xchg
insb
icebp
inc
dec
mov
sub
xchg
test
aam
rorl
outsb
push
popa
rolb
and
popa
add
add
js
outsl
sub
and
sti
sub
and
adc
sub
adc
and
outsl
insl
sti
out
aam
lea
test
or
sar
and
out
push
mov
aas
in
mov
fstl
mov
xor
xor
fisttpl
fldt
and
cltd
popf
pop
xor
xor
das
xor
mov
or
mulb
and
push
push
ds
cmpsb
adc
les
mov
mov
mov
xchg
adc
or
push
and
add
jge
shll
and
sbb
mov
sbb
push
mov
adc
rorb
push
dec
dec
imul
jle
adc
in
ret
inc
xchg
dec
pop
pop
jnp
fincstp
popa
and
mov
stc
dec
and
into
test
mov
xor
jns
and
and
mov
scas
cmpsb
jg
outsl
xor
and
xorb
sahf
and
and
inc
jl
frstor
mov
lds
leave
jns
mov
pop
mov
pop
rcl
jne
frstor
das
mov
sub
call
jns
sti
dec
push
add
mov
repnz
cltd
movsl
lahf
mov
rorb
cmp
std
jp
shlb
fsubr
dec
push
testl
ret
cmp
pop
pop
and
or
xchg
test
aaa
pop
and
lret
nop
sub
das
cmp
sbb
test
or
xor
pop
sub
mov
divl
xchg
inc
or
mov
and
or
or
aad
push
push
out
cltd
ja
repnz
testl
insl
fidivrs
rol
out
cmp
or
outsl
insb
dec
enter
mov
and
cmp
jle
push
mov
add
and
decb
add
lods
pop
and
cmp
push
aaa
pop
das
mov
mov
scas
mov
sbb
pop
cmpb
mov
arpl
jno
pop
xor
adc
add
mov
jae
inc
sbb
fsubrs
cltd
dec
fucomip
shll
frstor
mov
push
xchg
mov
and
inc
xor
push
push
jnp
push
sub
fisubl
mov
adc
adc
addr16
daa
fsubrl
inc
test
rorb
pop
mov
mov
jbe
fwait
pusha
out
lahf
and
dec
mov
xchg
enter
lret
aam
push
int
and
aaa
dec
rolb
lods
push
and
mov
push
push
and
jl
jge
sbb
xchg
popa
das
lds
fldcw
popa
xor
cmc
les
sbb
sub
mov
sbb
or
inc
mov
lock
mov
and
out
xor
fbld
sub
int
push
push
stos
jb
cli
xchg
inc
push
jge
cmp
mov
popf
mov
lea
leave
pop
ljmp
push
mov
popf
movsl
adc
pop
inc
push
inc
mov
jns
popf
ljmp
and
and
scas
jns
pushf
sti
fmull
mov
imulb
mov
outsb
jae
cmc
andb
push
stos
push
or
fisubs
ret
cmpsb
movzwl
fisubl
pop
bound
test
xor
sbb
mov
push
call
pop
shlb
xchg
push
push
je
loope
and
mov
mov
and
ss
icebp
into
cmp
sbb
mov
jno
out
mov
pop
mov
jb
mov
bound
xor
iret
xchg
popa
mov
jmp
add
or
orl
sbb
push
pop
and
add
cmp
aas
jae
inc
jno
cmp
cmp
mov
jmp
shll
xchg
das
popa
dec
mov
inc
xchg
push
and
push
iret
add
cs
and
out
aas
int3
add
add
stos
shll
iret
push
cmp
pop
add
or
into
int3
shrl
mov
jae
and
shl
in
or
mov
and
outsl
push
pop
jno
neg
in
and
pop
and
daa
adc
and
xchg
sub
movsl
shll
pop
mov
dec
pusha
xchg
in
stos
pop
jl
sub
aas
or
and
jbe
jnp
movsb
xor
xchg
or
xchg
insl
das
in
and
imul
adc
xchg
xor
sub
sub
pop
gs
sub
clc
es
xor
shll
jmp
cmp
add
popa
ss
das
cwtl
sbb
mov
pop
add
mov
lea
in
pop
ja
out
aas
test
adc
xor
dec
jns
jnp
push
push
pop
fsts
and
pop
cmp
pusha
negb
aad
push
shlb
xor
test
fwait
pop
jmp
into
mov
sub
jecxz
xor
xchg
shll
adc
lock
sub
jno
sbb
pop
mov
mov
mov
mov
dec
lcall
ja
arpl
pop
and
cltd
shrb
and
fisubl
xor
leave
lcall
inc
aas
stos
mov
jp
loop
dec
lock
std
xor
ds
and
dec
sbb
daa
cmpsb
cmpsl
gs
lcall
cwtl
mov
dec
je
inc
push
insl
push
lods
int3
test
pop
or
and
mov
lret
and
mov
shll
push
aaa
addl
sub
and
adc
jo
and
dec
clc
mov
fistps
mov
flds
push
movsb
repnz
jle
faddp
mov
inc
lret
sub
fstps
imul
inc
mov
inc
les
or
and
mov
dec
pop
and
mov
aas
xchg
stos
pop
out
sub
push
lods
jno
inc
mov
out
push
int3
adc
jl
insl
jge
mov
and
scas
sahf
lcall
cmc
sti
lods
and
mov
and
mov
mov
inc
popf
fadds
cld
and
or
scas
xlat
jo
adc
aad
repz
and
cmp
mov
in
push
and
fcmovne
xor
or
mov
mov
lahf
mov
stos
test
and
sub
fistps
mov
and
movl
mov
ret
mov
cld
mov
push
jmp
dec
in
jg
shlb
sbb
cwtl
test
sbb
mov
cmp
xchg
xchg
and
adcb
add
fwait
inc
jno
mov
and
fcoms
push
clc
push
and
enter
repnz
sub
and
push
sbb
rclb
cmpl
add
les
outsb
push
and
push
adc
pop
push
lods
dec
and
lret
ja
cltd
fcmovnb
mov
jge
push
aad
inc
scas
pushf
lcall
mov
dec
adc
jne
cmpsb
jo
jb
lret
inc
nop
pop
and
cmp
mov
fbld
jmp
jge
and
jae
loop
sbb
and
sbb
les
sub
xlat
shlb
jbe
mov
xor
ljmp
sbb
aad
and
mov
aas
xchg
jp
popa
and
push
je
push
and
leave
push
movb
inc
and
adc
mull
les
out
lock
imul
push
mov
adc
or
jbe
adc
popf
insb
loopne
cmc
rcr
pushf
mov
jp
leave
daa
loop
out
mov
lahf
pop
call
xor
mov
scas
mov
ret
test
and
sbb
adc
shll
fstps
jo
loop
or
cli
and
pop
inc
in
adc
and
js
icebp
in
sub
adc
push
and
xchg
xlat
lret
popf
test
and
mov
std
repz
testb
popa
cmc
mov
push
mov
xor
enter
shlb
mov
inc
aaa
les
fcmovnu
fs
jo
sbb
cli
pop
mov
sbb
mov
sti
add
xor
dec
call
cmpsl
push
fwait
jle
scas
dec
lock
xchg
and
cmp
mov
and
cmp
jp
icebp
xor
push
js
cltd
cwtl
inc
fists
aad
leave
into
in
ret
inc
imulb
rcrl
dec
mov
xor
clc
fsubrl
int
mov
push
sbb
and
loop
imul
and
test
dec
or
movsb
jns
mov
insl
cmpsl
push
imul
in
push
and
fnstcw
inc
mov
loope
sub
mov
lock
or
xor
mov
pop
push
and
popa
jo
sbb
and
mov
xchg
mov
movl
add
stos
add
in
dec
cltd
test
sarb
hlt
adc
test
cmp
andl
scas
cltd
fs
fcomps
in
hlt
aaa
aam
out
fists
sbb
out
jp
xlat
popf
cmpsl
mov
mov
add
jmp
inc
es
inc
xchg
and
adcb
fnstsw
xchg
jne
incb
call
sub
imul
shrb
inc
and
mov
pushf
jnp
or
push
xor
je
xlat
fsts
push
movsl
popa
dec
jo
jge
jmp
aaa
jnp
test
adc
jp
pop
lea
ljmp
ds
jl
in
cmp
rcll
mov
jnp
cmpsl
push
and
sarl
push
and
fmulp
aaa
sub
add
stos
xlat
mov
and
popf
mov
fwait
adc
test
fs
imul
xchg
and
inc
shrb
insb
inc
rcll
push
mov
lds
sub
sub
das
fidivrs
arpl
xchg
mov
pop
lock
loopne
cmp
outsb
out
insl
xchg
xchg
dec
sub
cmp
movsb
jne
addb
xlat
and
jbe
adc
sub
xchg
or
push
xor
popl
jnp
mov
int3
jl
lea
and
cmpsl
lahf
mov
fidivl
popa
paddw
pop
or
adc
cmpsb
and
mov
andb
sahf
nop
add
push
sub
movsb
mov
sbb
roll
mov
out
sbb
cmpl
or
jmp
lods
xchg
dec
and
add
pop
jbe
mov
mov
mov
xor
outsl
pop
ret
arpl
xchg
popa
fimull
push
pop
ljmp
pushf
cmp
mov
mov
scas
xchg
jmp
add
insb
shl
dec
les
or
aas
inc
mov
and
inc
mov
movsb
or
fsub
mov
clc
movsl
sar
daa
test
and
addb
mov
jno
sub
push
pop
push
mov
pop
test
popa
jg
pusha
sub
ljmp
scas
or
jb
mov
scas
loope
mov
push
pop
lods
scas
rcl
repnz
sti
add
outsl
jp
jge,pt
inc
or
xchg
push
aad
cmp
inc
jl
fwait
loope
movsb
jnp
rcrl
xchg
test
out
mov
jo
mov
inc
and
xor
mov
and
shl
cmp
xchg
imul
aas
insl
jecxz
cmpl
jns
sti
cmp
mov
dec
push
cmp
or
cwtl
in
arpl
sbb
and
out
outsb
outsl
stos
mov
xchg
mov
pop
mov
ds
and
daa
sub
out
or
fldl
mov
add
mov
and
popa
lds
lods
and
pop
pop
jl
clc
jb
pushf
sbb
adc
xchg
mov
push
pushf
mov
push
push
movsl
dec
sub
inc
push
pushf
mov
or
js
ss
loop
addb
mov
movb
and
xchg
lea
dec
inc
rclb
loopne
and
shll
test
jecxz
fwait
and
add
clc
pop
sub
mov
cmp
fnstsw
pop
or
push
in
push
sub
xchg
std
adc
mov
rol
andl
and
pop
or
mov
insl
xchg
mov
repnz
loopne
and
lea
or
imul
or
and
and
outsb
cmp
or
pop
push
and
fwait
mov
popa
mov
push
rorl
sub
and
jle
cmp
lret
add
pop
repz
mov
inc
stos
and
mov
lret
outsl
pusha
or
test
mov
or
mov
push
xlat
and
mov
mov
cltd
xchg
and
pusha
sbb
movsl
lods
int3
mov
dec
dec
xor
xchg
outsb
jae
mov
ss
mov
push
ljmp
xchg
fs
int3
jns
scas
xor
shrb
stos
mov
mov
mov
and
ret
mov
jb
pavgw
xor
jmp
jl
and
dec
mov
sbb
hlt
mov
add
vpcmpeqd
and
xchg
andb
aas
sbb
aad
cmc
and
inc
movl
insl
xor
sti
inc
add
mov
dec
lds
xchg
jge
hlt
push
das
sbb
lret
dec
int3
cmp
or
and
pop
adc
mov
into
in
popa
in
lods
test
in
cmp
daa
loopne
adc
dec
add
lcall
jp
mov
and
xor
and
add
sbb
pop
adc
fnstcw
and
loopne
lahf
stos
pushf
jb
mov
or
adc
insb
jg
inc
mov
and
mov
adc
mov
and
push
push
shll
aad
iret
sbb
mov
sbb
dec
and
jns
aas
notl
mov
clc
adc
mov
mov
xor
notb
loope
mov
loopne
movsb
jo
xchg
mul
andl
push
dec
and
adc
sbb
test
jne
add
into
enter
mov
and
xchg
cmpsl
dec
xchg
test
and
push
leave
lods
pushf
xor
aam
jno
sub
aaa
and
cltd
scas
sbb
xor
and
xchg
pop
or
dec
mov
stos
das
sub
push
clc
imull
xor
sub
adc
popa
sub
mov
mov
cmc
loop
or
adc
or
mov
into
pop
cmp
pop
push
jo
push
xchg
xor
lods
loop
mov
mov
inc
and
aad
jne
ret
jns
xchg
xchg
sub
das
pusha
jnp
cmp
jo
inc
stc
and
std
sub
adc
movsb
outsb
push
clc
cmp
mov
jge
lahf
xor
pop
stos
xchg
les
mov
enter
nop
fisttpll
mov
ret
pop
inc
add
xor
je
adc
lods
jne
and
and
pop
test
sub
outsl
call
lahf
inc
cmc
add
pusha
sub
jns
je
or
inc
popa
and
pusha
jecxz
push
xchg
pop
and
dec
xchg
fmul
jmp
mov
repz
jl
sub
aad
and
mov
cmpsb
xchg
inc
out
imul
add
out
test
add
xchg
test
jecxz
lret
out
add
aad
inc
movb
mov
std
mov
add
dec
and
pop
repnz
and
pop
push
scas
clc
inc
inc
inc
xchg
jno
lods
orb
sbb
inc
and
lcall
xor
push
outsb
pop
cmpsb
les
addb
sarl
cmp
lret
xor
push
andl
sbb
lods
mov
ficomps
xchg
push
sub
arpl
ljmp
inc
call
add
lret
pop
push
and
add
and
cmp
inc
lea
daa
sbb
cltd
test
and
insb
push
lock
mov
xchg
sub
mov
sub
pushf
std
push
ljmp
xchg
jp
jmp
andl
ficoml
sbb
xor
mov
pop
cli
sub
adc
mov
push
and
daa
rorl
movsl
sub
jmp
cld
dec
and
jecxz
jge
add
das
add
dec
popa
lea
mov
addr16
and
mov
mov
xchg
scas
into
mov
test
or
pushl
call
adc
pop
or
loope
test
scas
mov
bound
sbb
xlat
push
push
xchg
mov
xor
and
xor
pop
and
prefetch
mov
add
and
xor
andl
xorl
and
inc
cld
subb
jp
and
jl
jmp
jge
ror
outsl
fisubs
sahf
pop
and
or
cmc
stos
jge
adc
mov
pop
jno
xor
maxps
dec
inc
xchg
add
adc
jp
xor
test
es
popa
jmp
and
jp
xor
sub
cs
cltd
imul
mov
push
sub
test
and
aas
mov
and
push
or
sub
pusha
push
mov
js
mov
add
mov
fcom
in
and
popf
jmp
jne
pop
mov
es
ret
and
sbb
pop
mov
and
loopne
adc
lahf
sub
adc
mov
pop
and
or
add
hlt
xlat
xchg
xchg
sub
fcompl
in
xchg
nop
cmp
jp
and
push
mov
sub
mov
in
scas
daa
inc
testl
jl
pop
push
pusha
movsl
jb
adcl
flds
sub
aas
movsb
and
adc
xchg
pcmpeqw
and
cmpsb
add
mov
push
outsl
and
xorb
shll
jnp
mov
jae
test
mov
lea
lock
adc
and
das
sbb
test
movsb
push
popf
sub
or
aas
dec
jmp
arpl
push
scas
add
je
jns
ret
jbe
and
and
stos
mov
gs
and
inc
lods
aam
pusha
popf
dec
and
adc
jno
push
and
icebp
push
xorl
movsl
sbb
lret
jnp
and
mov
sarb
sarl
sti
ljmp
xor
les
popf
jb
dec
ja
sbb
rcrl
sub
in
adc
imul
xlat
push
xchg
mov
repnz
mov
cwtl
sahf
mov
sbb
and
or
imul
dec
mov
xor
cld
addl
repnz
popf
es
pop
mov
or
stos
jmp
mov
push
inc
xchg
jne
mov
imul
mov
and
dec
into
addr16
lahf
mov
outsl
adc
push
pop
in
sbb
push
sahf
hlt
mov
jbe
and
xchg
movsl
and
pop
sbb
jmp
push
sub
jle
and
dec
in
mov
cli
push
push
mov
into
lret
fsubrs
loopne
aas
cmpl
and
mov
jle
aas
mov
inc
icebp
ret
push
sti
movsl
iret
adc
iret
popa
inc
enter
and
rolb
inc
andb
stos
adc
xchg
jge
and
jns
cmp
dec
and
adc
lods
movsl
and
jg
fidivl
pop
jne
test
clc
icebp
mov
cmp
jg
inc
test
add
lret
nop
pop
and
xchg
or
xchg
fsubrl
jecxz
sbb
and
jns
icebp
jmp
or
inc
mov
or
nop
bound
lret
daa
test
inc
and
jo
out
iret
or
popa
repz
xor
aaa
dec
inc
test
jge
xchg
mov
add
mov
fidivrl
fs
das
aas
mov
ss
adcl
stos
and
roll
mov
jecxz
mov
lcall
gs
adc
fildll
sbb
xor
and
imul
les
pop
push
add
stos
and
das
clc
mov
roll
sub
outsb
out
fwait
dec
and
out
or
dec
jge
and
xchg
movsl
inc
int
lods
and
pop
dec
push
jno
xchg
cltd
and
fnstcw
shlb
inc
out
dec
sub
sbb
repz
cwtl
and
mov
mov
cmp
inc
negb
inc
inc
xorl
pop
jle
pushf
mov
cmp
jnp
loop
lds
daa
fdivrl
xchg
repnz
pop
and
outsb
sub
and
pop
fildl
sbb
inc
sub
fiaddl
in
jnp
sub
sbb
and
xor
sub
xor
ja
movsb
xlat
data16
iret
pop
rorl
add
sbb
mov
das
mov
dec
das
cli
test
test
insb
and
pop
push
inc
es
mov
jb
dec
xchg
xchg
out
and
stos
sub
and
sti
or
stos
mov
and
push
and
adc
sbb
mov
cmpsb
sub
adc
std
mov
sbb
cmp
mov
cmp
inc
pop
xchg
nop
or
jo
mov
jle
subb
fsubl
xor
mov
sbb
imul
mov
or
pushf
pusha
and
fimull
aam
xor
pop
jo
nop
clc
mov
mov
dec
mov
inc
jno
sbb
pop
aas
inc
shl
inc
ds
jle
sbb
push
sbb
sub
and
adc
adc
cmp
mov
iret
ficoml
mov
outsb
xor
and
or
scas
cli
pop
pop
xor
lods
popa
and
mov
jmp
daa
ret
xor
mov
mov
gs
xchg
mov
jmp
mov
and
mov
mov
push
into
aaa
jbe
cmp
and
pop
sub
xchg
test
and
xchg
jmp
mov
and
push
mov
add
pop
repz
insb
and
hlt
and
mov
insl
and
jle
icebp
and
pop
and
movsb
test
aas
mov
sub
test
and
jne
push
and
in
lea
insb
outsl
xchg
and
xchg
xchg
sub
repz
imul
and
push
nop
mov
xchg
lcall
gs
push
sub
jp
xchg
mov
into
or
push
and
cmp
test
fisubrl
push
sub
mov
mov
mov
cld
push
lea
ljmp
adc
mov
fbld
push
ret
jns
pop
xchg
and
icebp
mov
xor
stc
pusha
cs
sbb
adc
inc
shlb
scas
mov
sbb
psrlq
mov
push
popf
and
or
jge
scas
in
push
and
xor
xor
outsl
adc
mov
lea
push
lds
push
jno
in
pop
or
gs
clc
xor
push
and
mov
dec
and
cmp
inc
or
sub
aam
aas
dec
pushf
jg
and
roll
mov
test
sub
sbb
mov
jne
les
and
or
enter
outsb
aas
daa
jns
push
sub
out
adc
stos
jno
mov
and
notl
mov
mov
and
adc
scas
out
popa
cmp
and
jbe
fisubrs
adc
and
mov
mov
mov
cld
inc
insl
test
sbb
push
cmp
and
and
test
in
sarb
inc
jecxz
std
adcl
push
lds
inc
insb
adc
mov
ucomiss
sbb
and
pop
push
aaa
push
inc
int
and
adc
out
stos
jb
dec
and
cli
orl
adc
sbb
pop
mov
es
jo
push
mov
mov
cmpsl
pop
test
aas
xorb
jl
cmpl
push
pop
sub
stos
dec
cmc
in
mov
and
sub
fbld
movsb
dec
and
fstpt
lock
mov
jo
and
cmpsl
outsl
mov
push
and
and
adc
movsb
pop
into
and
jnp
jae
cmp
and
dec
mov
ret
cmp
ret
sbb
and
std
adc
sub
sub
inc
aaa
loop
pop
and
sub
xor
xlat
mov
popa
lcall
add
pop
scas
and
push
cmp
and
addb
into
sub
stos
lea
lcall
and
and
push
in
outsb
push
adc
js
mull
mov
stos
and
loope
sub
adc
mov
adc
test
xchg
idivl
stos
mov
test
subb
int
push
loop
add
add
aad
gs
lret
dec
mov
sbb
hlt
and
xchg
movsl
dec
dec
ds
and
clc
cmpsl
test
pop
outsl
push
and
sub
mov
xchg
or
pop
or
jnp
fwait
iret
out
mov
loop
xor
push
aas
outsl
sbb
and
adc
mov
frstor
in
xor
jns
mov
jae
lret
jne
cli
popf
ss
xchg
out
and
ror
lret
sbb
push
mov
adc
xchg
inc
and
add
pop
jo
outsb
and
pop
jmp
jne
jbe
test
aas
push
push
pusha
mov
adc
and
popf
xchg
out
idiv
sbb
push
mov
cmp
push
movsb
divl
push
out
sbb
bndldx
ja
enter
and
aas
ficoms
mull
inc
daa
mov
lahf
pusha
mov
mov
jle
shll
dec
mov
sbb
pop
rclb
enter
and
loopne
stos
insb
or
and
mov
ficompl
mov
xor
sub
mov
inc
cmp
mov
xchg
fisubs
xlat
cld
bound
inc
loopne
daa
jns
xchg
inc
mov
pop
movsl
iret
and
and
mov
mov
pop
and
push
pop
push
stos
jecxz
fwait
test
xchg
movsl
or
dec
xchg
mov
bound
in
es
dec
orb
icebp
add
sbbl
and
adc
mov
and
inc
jle
add
hlt
mov
lahf
jne
and
xchg
rolb
outsl
sti
pusha
out
fs
inc
test
mov
scas
lods
xchg
cmp
test
and
push
sahf
data16
adc
dec
cwtl
es
pop
and
inc
int3
add
in
cmp
pop
mov
mov
mov
mov
push
and
sbb
lea
aad
fisttps
gs
sahf
xor
aad
mov
cmp
sti
adc
mov
aas
and
mov
push
arpl
push
shrb
es
imul
or
sbb
das
mov
pop
andl
stc
dec
sub
push
push
stos
popa
push
sti
adc
dec
into
shlb
mov
fimuls
inc
sub
int
mov
sub
shlb
mov
push
jnp
sub
and
adc
jmp
sbb
and
cwtl
jb
test
add
call
inc
add
movl
cmp
mov
sbb
push
and
sub
adc
movsl
push
mov
in
and
loopne
sti
mov
jmp
lret
repz
lods
cwtl
in
mov
gs
mov
inc
adc
movsb
push
add
sarl
pusha
pop
les
mov
adc
in
popa
js
or
and
roll
sub
adc
jne
sbb
repz
add
mov
fsubrs
mov
push
jns
lret
scas
push
jmp
xor
mov
add
icebp
rclb
mov
hlt
test
lock
xchg
loop
popf
out
and
aas
mov
sbb
incl
fisubl
xchg
out
cmp
inc
and
and
pushf
push
push
and
jge
xor
cmpsb
adc
pop
sbb
xor
dec
inc
add
and
loopne
rcrb
xor
outsl
cmp
push
push
mov
sub
shll
inc
andl
pop
movsb
mov
out
shlb
sub
test
hlt
mov
mov
fisubs
scas
inc
mov
mov
and
xchg
inc
inc
out
in
sub
mov
push
cmp
mov
pop
int3
cmc
cs
fwait
xorl
fs
jo
xor
sub
adc
int
icebp
andl
fbld
xchg
in
and
int
push
xor
das
aaa
repnz
test
jmp
adc
test
pop
sub
clc
gs
sub
mull
pop
lcall
xchg
add
cs
and
stc
ret
imul
pop
cmpsl
jge
and
mov
add
mov
xchg
sub
jo
adc
les
jno
fsubs
lods
es
sub
shll
xchg
inc
jl
dec
cwtl
ja
add
mov
mov
add
lret
ds
and
dec
jo
scas
jns
in
mov
push
xchg
mov
jns
pop
mov
inc
test
addl
cwtl
lahf
daa
and
mov
inc
mov
les
and
bound
and
lcall
idivl
and
or
sub
frstor
enter
xchg
clc
xchg
in
dec
loope
dec
cmp
cltd
mov
sbb
xchg
cmc
mov
sbb
push
data16
mov
out
scas
or
fcomi
xchg
jmp
mov
and
int
testw
fidivs
lcall
das
add
and
inc
cmpl
repnz
clc
roll
inc
lods
push
dec
cmp
mov
std
cltd
gs
loop
add
pop
mov
and
mov
repnz
jb
sti
pop
lret
jae
movsb
out
dec
mov
sub
add
cmc
mov
mov
and
push
lahf
add
fisubl
rorb
push
push
inc
mov
xchg
movsl
pop
sbb
push
pop
dec
and
repz
or
add
sub
sbb
in
pop
xchg
popf
cmp
pop
popa
popf
test
adc
xchg
test
roll
push
push
gs
fistps
adc
push
aaa
sub
and
mov
in
mov
pop
add
xor
imul
and
lods
popf
popa
mov
mov
movsl
lock
push
cs
sub
xchg
testb
xchg
sbb
and
jnp
stc
std
stos
mov
pop
andb
push
test
loopne
sub
push
xlat
ljmp
jno
and
dec
enter
fisubrs
rclb
movsb
mov
inc
test
mov
mov
xor
bnd
int
xchg
push
sbb
icebp
mov
stos
frstor
out
dec
lcall
addl
movsb
push
mov
arpl
jns
xchg
or
and
fcoms
cld
push
call
xlat
popf
jae
mov
mov
outsl
cmp
test
pop
inc
stos
pop
cmpsb
pop
loop
test
in
mov
xchg
pop
and
adcl
mov
sbb
pop
outsb
popa
adc
push
and
lret
rolb
and
sub
data16
stos
mov
jecxz
xchg
lds
xchg
add
push
mov
ret
jae
int3
mov
xor
sub
cmpsl
push
sbb
mov
lods
jmp
and
xor
sub
icebp
add
xor
xlat
fstps
push
or
pop
mov
mov
dec
cmc
add
je
sti
pop
push
subl
pop
add
movsl
lods
in
sbb
xchg
jg
lret
jp
loopne
fcomps
ficomps
lds
add
jg
lock
jp
popa
jae
jecxz
enter
and
repz
and
add
xchg
and
jno
fadds
rcrl
or
push
xor
mov
outsl
and
lret
fstps
sbbl
cmpsl
fwait
in
pop
mov
out
jno
mov
xchg
pop
rcr
insl
add
jb
mov
cmp
pop
popa
mov
mulb
xchg
pop
add
pop
and
add
xchg
fisttpl
pusha
lahf
imul
movb
and
iret
scas
xchg
push
lret
push
sbb
jns
mov
sahf
mov
push
movl
inc
dec
in
out
xor
sub
sbb
add
sbb
je
and
popa
add
test
xchg
pop
ljmp
push
pop
mov
push
mov
adc
add
or
mov
icebp
cmp
lea
fwait
jae
and
mov
lcall
pushf
scas
insb
in
push
sub
mov
stos
sub
cmpsb
add
jge
xchg
insb
aam
push
xor
and
pop
scas
in
dec
add
andb
cmp
lret
and
cs
stc
out
adc
lret
and
jecxz
dec
lea
inc
xchg
and
jne
iret
xchg
les
and
and
xor
xchg
or
sbb
arpl
xor
push
xchg
xchg
iret
lds
push
push
xchg
jns
decb
add
mov
and
cmpsl
sub
sub
cwtl
popf
mov
aam
and
dec
fsubrl
cmp
movsb
and
nop
mov
pop
out
and
gs
and
and
push
data16
cmp
mov
imul
mov
sti
mov
and
adc
jle
dec
fdivrl
rcr
popl
call
add
inc
and
cmc
into
pusha
push
mov
mov
pop
cmp
inc
aam
out
mov
aad
add
sbb
mov
fdivrl
mov
or
lods
dec
pop
ja
cmp
jns
aas
shrb
xor
test
ljmp
adc
cmp
push
adc
loop
out
ret
std
xchg
pusha
sub
xchg
shrb
mov
xor
and
cmp
sbb
xor
std
nop
and
add
and
push
lret
lahf
push
ss
inc
lock
and
and
xor
xor
subb
sub
aaa
mov
cmpsb
jmp
and
xchg
sub
cmpsl
xor
adc
cli
and
and
xchg
arpl
sbbl
cld
out
imul
inc
stos
and
in
dec
xor
lahf
push
das
cmp
dec
cmp
dec
and
roll
and
scas
inc
and
stc
adc
mov
and
fmulp
test
push
inc
ja
or
jle
and
call
scas
jns
sub
das
xor
and
out
pop
cli
inc
test
and
fst
leave
das
jb
add
loop
and
aas
outsl
cwtl
and
inc
lods
cmpsb
movsb
cmp
lea
jno
mov
addl
mov
adc
and
add
rclb
cwtl
movsb
push
fwait
xor
loopne
cli
jg
and
sbb
and
fs
ret
cmpsb
xor
push
and
stc
nopl
gs
dec
mov
in
push
shlb
push
jno
xchg
movsl
jne
adc
aaa
xor
ret
lret
outsl
lret
jge
cmp
pop
pop
mov
stos
sahf
pop
dec
fmul
test
mov
jno
lea
into
pop
pop
cmpsb
lods
shlb
popa
mov
pop
ret
imul
and
fs
sbb
andb
rcr
shrb
out
mov
jns
ja
pop
out
adc
xor
mov
pop
and
leave
sbb
and
fisubs
dec
and
push
imul
push
jne
xchg
cmc
sub
cmp
and
arpl
and
in
adc
popa
call
cmpsb
fnstsw
xchg
pop
push
jnp
int3
outsb
mov
ss
cwtl
scas
popa
sar
dec
dec
mov
sbb
mov
cmp
jmp
push
movsb
or
popf
into
and
test
mov
andl
insl
mov
jge
sub
jecxz
fisubs
pop
pusha
aas
ret
jns
ret
popf
push
push
in
push
jp
sub
mov
frstor
lds
stc
arpl
lret
cmpsl
lahf
aad
adc
jmp
and
pop
mov
imul
xchg
dec
and
out
and
stos
ljmp
stc
mov
or
jb
and
in
aas
lods
xor
in
mov
aad
jbe
cltd
and
popa
adc
enter
jne
loop
fwait
dec
xor
sub
push
jno
add
mov
addr16
sbb
dec
xchg
or
sbb
xor
fcmovnbe
cmpsl
mov
fcmovnu
test
push
or
xchg
inc
jg
jo
and
cmp
sub
xchg
shlb
orl
out
frstor
and
bswap
inc
pop
mov
and
inc
movsl
jecxz
or
and
lcall
das
xor
cld
movaps
xchg
lret
aas
mull
int
or
and
add
cs
jo
arpl
popf
enter
fidivl
and
ret
xor
iret
or
mov
out
loop
gs
pop
jno
lcall
je
mov
and
imul
insl
leave
ds
sub
xchg
pop
test
insl
inc
mov
jmp
adcl
das
imul
nop
inc
mov
xor
outsl
and
cld
fcmovb
and
mov
xchg
and
mov
jp
cld
jl
and
dec
and
pop
mov
add
xchg
and
test
mov
lea
int
test
test
movsb
roll
in
pop
and
test
sbb
and
cmpsb
imul
addl
inc
xchg
fbld
in
xor
jge
add
mov
iret
and
mov
cmpsl
inc
xchg
xchg
push
and
xchg
es
cmp
test
leave
js
out
lods
and
je
cmpsb
pop
adc
jmp
ljmp
aam
and
or
cmp
loopne
sub
push
mov
pop
les
xlat
es
pop
push
adc
cli
sar
or
divb
xchg
movsl
inc
lock
cmp
in
out
sub
sbb
add
repz
cmp
hlt
xchg
and
inc
xorl
rcl
fsubrp
ret
ds
pop
and
pop
xor
fisubl
daa
sub
push
cwtl
cmpsb
les
call
fwait
sub
xchg
call
or
mov
adc
xor
xor
jo
sbb
int
sbb
je
pop
pop
and
pop
or
cmpsl
push
leave
push
repnz
pop
xchg
out
aas
pop
jb
cmp
cmp
xor
and
and
add
jnp
popa
cwtl
in
mov
jmp
cmp
pop
jb
add
push
sbb
jbe
loopne
push
jecxz
or
shlb
lret
fwait
lcall
jno
sbb
icebp
or
dec
push
out
lods
in
sub
adc
and
xchg
out
shr
pushf
xchg
cmpsb
mov
xor
xchg
and
mov
fldenv
roll
dec
or
sti
movsl
xlat
or
adc
xor
xchg
dec
mov
and
icebp
xchg
jne
adc
jns
mov
mov
mov
xor
lret
xchg
push
and
and
dec
dec
scas
ja
movsb
ljmp
fwait
call
dec
js
push
adc
xchg
mov
aaa
or
mov
popa
test
xor
mov
inc
cmpsl
fcomip
cwtl
icebp
cld
mov
clc
xchg
jno
xor
jl
inc
jmp
ljmp
lret
repz
ds
popa
movsb
out
scas
push
js
fcoml
scas
xor
mov
and
sbb
ljmp
and
int3
pop
sbb
arpl
and
inc
mov
jae
inc
xchg
and
in
dec
add
fidivrl
pop
sbb
push
in
or
movsb
fstps
mov
sbb
jmp
jp
and
pop
jb
and
sbb
mov
in
jmp
loopne
fsubp
jae
mov
lock
aad
xchg
pop
stos
shr
and
mov
push
test
jle
dec
cs
sub
and
dec
xorl
jl
add
and
xor
test
cltd
shll
sarl
and
out
and
mov
hlt
aam
mov
xlat
lds
out
movsl
xor
jae
push
pop
lret
xchg
test
jae
jo
das
mov
adc
lret
lock
push
mov
push
jae
cmc
push
icebp
mov
imul
sahf
gs
mov
movsl
sbb
addl
shll
in
inc
and
and
enter
push
clc
xor
cmp
out
imul
lcall
add
fld
int3
mov
dec
and
dec
xchg
xor
cmc
xor
fbstp
mov
jmp
inc
lcall
lret
movsl
jl
out
mov
lds
mov
popf
mov
dec
xchg
iret
movsb
jo
xlat
fimuls
aaa
int3
add
jp
mov
fnsave
es
nop
imul
sub
mov
cltd
mov
mov
push
movsb
repnz
pop
add
adc
jb
filds
inc
hlt
rcrl
lret
push
movsb
mov
ror
jno
pop
mov
stos
insb
mov
je
lods
sub
and
enter
xchg
sbb
ljmp
test
xlat
and
cltd
aam
cwtl
and
sub
inc
add
std
mov
dec
mov
inc
sbb
sub
das
stos
jns
adc
shlb
sarl
and
and
arpl
sahf
and
pop
xor
pop
fsubl
mov
loope
xor
movsb
std
xchg
leave
sti
pop
inc
and
rcll
insb
mov
cli
in
fiadds
roll
mov
les
in
mov
adc
xchg
aaa
xchg
xchg
addr16
cmp
das
pop
loope
ja
and
inc
sbb
cmp
inc
jecxz
cmp
flds
ds
ss
lahf
dec
movsl
inc
and
mov
or
popa
xchg
inc
ja
jmp
addl
das
fstps
and
push
rclb
jl
mov
cmp
or
push
mov
es
int3
pop
sub
das
popf
dec
mov
sbb
push
jg
xor
jbe
arpl
jb
bound
add
shr
and
shrl
pop
int3
insl
push
pop
lahf
cwtl
dec
test
mov
cmp
fisttpl
jne
das
mov
push
ficoms
mov
in
pusha
inc
xchg
insl
xchg
lahf
jbe
mov
cli
pop
adc
xchg
aaa
mov
or
leave
fwait
pop
inc
aas
xchg
fnsave
pop
stos
sub
and
iret
pushl
cmp
fwait
imull
call
pop
and
int
push
cwtl
stos
jno
inc
sbbb
outsl
and
mov
add
cmp
mov
and
xchg
adc
std
and
les
jl
int3
and
daa
jnp
mov
out
sub
mulb
jmp
xchg
call
mov
inc
fsubrl
loop
lea
xchg
and
mov
ror
xor
in
and
notb
hlt
aaa
pop
ds
fsubrs
xor
repz
xchg
sub
les
dec
mov
mov
dec
jp
xchg
out
out
popf
mov
fdivp
push
cmpl
push
and
xchg
jg
outsb
sahf
scas
hlt
inc
icebp
mov
les
inc
sbb
mov
mov
xor
fidivs
cmp
xchg
mov
mov
les
and
pop
cmp
or
lea
jmp
cmp
nop
in
mov
xor
ja
pop
xor
test
xlat
and
lock
call
and
insl
add
mov
gs
popa
mov
adc
and
out
sti
jp
sub
or
iret
fists
loopne
out
sbb
lahf
or
gs
lret
repnz
dec
mov
in
jmp
mov
sub
sub
and
sbb
adc
sbb
inc
out
and
test
push
xchg
in
and
xchg
inc
jbe
sbb
and
scas
jb
mov
jg
xchg
xchg
movsb
movsb
cli
fwait
jmp
or
xchg
mov
xchg
orl
and
inc
or
arpl
inc
and
scas
jle
shll
ljmp
and
add
and
sub
jle
pusha
mov
popa
test
cmpsb
xor
scas
inc
and
std
fdivl
dec
or
sti
enter
fiadds
and
repnz
out
add
push
mov
xchg
outsb
sbb
jg
in
test
and
movsl
repz
nop
fistpl
fcomi
aam
push
and
sahf
cmp
sub
pop
rorl
fmull
lret
and
xchg
jecxz
and
andnps
stc
pushf
jge
and
frstor
and
sbb
pop
push
test
jno
ds
fwait
add
nop
dec
and
jge
mov
outsl
bnd
jns
adc
push
addr16
cltd
xchg
inc
out
sbb
adc
mov
test
icebp
pusha
popa
aam
adc
in
pop
rorl
adc
xchg
imul
mov
test
add
divl
cmp
aam
mov
in
dec
xor
and
cs
cli
fs
and
imul
loop
mov
mov
ret
addl
mov
pop
das
loope
les
nop
and
mov
fs
inc
push
push
or
movsb
and
pop
mov
ffreep
pop
sub
cltd
lret
stos
iret
nop
jbe
popa
sbb
and
insb
pop
fwait
loope
sub
cmp
movsl
jle
lret
pop
lcall
push
push
and
jmp
mov
add
shll
ss
mov
inc
out
in
sub
mov
push
mov
test
sti
mov
and
fiaddl
insl
cmpsl
popf
add
lods
pushl
adc
popa
gs
mov
in
xor
xchg
mov
mov
sbb
aas
inc
xor
stos
push
hlt
xchg
and
enter
cmp
inc
cmp
in
lea
fs
movsb
sbb
and
je
mov
and
dec
dec
lea
push
ret
add
ret
pop
daa
cmc
xchg
push
fstpl
sbb
push
mov
and
xchg
adc
loop
test
push
pop
jbe
inc
cmpsl
mov
out
mov
cmp
xchg
dec
and
xchg
shrl
pop
and
cmp
sbb
and
jnp
pop
inc
jp
sbb
aaa
ja
popa
pushf
xchg
aas
sub
and
leave
push
imull
mov
and
push
adc
mov
dec
and
int
sbb
into
and
cwtl
out
and
in
fnstcw
push
fisubs
mov
mov
dec
and
data16
and
adc
sub
mov
sub
mov
insl
pop
loope
adc
lret
mov
clc
and
cmp
push
insl
jne
and
dec
scas
or
lds
xchg
and
leave
in
mov
lret
out
fsubl
arpl
jno
mov
inc
xor
inc
mov
mov
xchg
and
jne
cmp
xchg
mov
inc
loope
lcall
pop
test
movsb
push
push
into
jnp
in
pop
fisubl
aad
and
sbb
mov
and
das
mov
or
sub
enter
imul
or
xor
xor
xchg
add
mov
imul
je
and
in
mov
mov
add
lahf
mov
cmp
jl
test
stos
and
or
test
and
or
inc
sbb
xor
dec
pop
andl
xchg
loopne
mov
outsb
cli
les
flds
aam
jne
dec
xchg
sbbl
js
inc
cmp
push
cmpsb
adcb
cmp
pop
pop
mov
call
test
movsb
mov
push
insl
mov
xchg
pop
int3
push
xor
xchg
lock
cmp
mov
addl
push
and
pop
jmp
inc
inc
jge
and
imul
std
dec
xor
aas
mov
cmp
outsl
add
imul
mov
nop
and
pusha
ds
cld
leave
movsl
test
inc
aas
xor
pmaddwd
in
into
mov
jo
and
xchg
pop
mov
xor
addr16
and
addl
js
xchg
pop
xor
push
jle
or
pop
xchg
lods
add
jae
clc
inc
or
fwait
xor
cmp
out
or
xlat
and
xchg
inc
int
lods
adc
out
popa
in
mov
jne
and
jns
mov
or
mov
xchg
mov
jae
sbb
ds
and
add
notb
int
sahf
xor
imul
sub
fdiv
loope
pushl
movsl
into
cmp
add
clc
pusha
lret
xchg
sbb
std
imul
xchg
add
and
pop
mov
xlat
movsb
iret
pop
aam
mov
inc
or
in
cmp
push
cmp
movlps
push
mov
xor
or
in
mov
aaa
inc
inc
mov
dec
inc
and
jl
cmp
and
pop
outsb
sbb
les
and
leave
std
bound
pop
inc
push
xor
sbb
icebp
and
mov
jge
and
mov
cld
loop
movsb
lret
xor
mov
les
mov
loope
jmp
push
or
jg
mov
push
and
scas
test
std
stos
daa
xor
ret
fisubs
push
or
add
add
mov
sti
out
and
dec
loopne
and
cmp
jb
test
fcoml
dec
popf
adc
lods
push
daa
cmp
and
cwtl
insl
hlt
loope
jno
mov
mov
push
arpl
jb
and
add
popa
mov
test
push
jg
jo
iret
and
int
pop
notb
daa
adc
pop
inc
and
xchg
ja
and
sbb
and
xor
jp
add
cmp
andl
mov
cmp
push
jp
shl
shlb
call
gs
sbb
and
loopne
ljmp
shrb
jns
mov
ljmp
inc
lcall
pushf
enter
addr16
cld
xorb
jno,pt
mov
out
outsb
lahf
repnz
xchg
mov
mov
aaa
addl
movsb
mov
sub
repz
jbe
in
dec
test
and
pop
out
sub
jmp
lods
jle
fstps
inc
xor
scas
and
dec
mov
mov
ss
mov
imul
xchg
scas
add
repz
andb
lods
pop
int3
cmp
in
mov
and
imulb
lods
mov
or
and
push
rcrb
and
cmp
jb
and
cmp
mov
inc
xor
ret
xchg
dec
in
and
mov
mov
jg
pop
mov
out
xlat
shrl
xchg
psllw
stc
jecxz
scas
and
cmpl
and
jle
xor
cmpb
test
and
mov
xchg
cmpsb
dec
inc
mov
repz
and
xlat
and
repnz
push
popa
jo
jbe,pn
mov
dec
lcall
sub
xchg
aad
push
fstp
iret
lds
movsb
in
addr16
mov
push
jp
enter
push
dec
movsb
mov
fbstp
xchg
shlb
ds
shl
into
test
imul
xor
xor
icebp
fdivrp
cmc
hlt
adc
and
jnp
ja
mov
xor
scas
xchg
and
add
out
subl
cltd
sub
es
clc
pop
roll
pop
sub
pop
jl
lock
lea
in
add
and
std
movsl
jl
les
sar
mov
mov
fadd
out
mull
in
in
and
int
nop
cmp
jp
push
jecxz
or
imul
cmp
lcall
cmc
in
and
adc
dec
ljmp
push
xchg
int3
shlb
mov
jo
arpl
std
add
movsl
sarl
popa
ret
sbb
lock
pop
mov
dec
addl
dec
and
mov
jmp
sub
xor
rcl
out
fnsave
cltd
and
inc
stos
out
mov
dec
inc
aas
adc
lea
lahf
jo
push
test
mov
jne
daa
lds
ljmp
and
insb
je
push
ljmp
dec
push
xchg
aaa
and
sbb
imul
lods
dec
pop
or
pop
aas
bound
inc
or
xor
orb
dec
sub
jnp
add
push
mov
push
and
push
mul
and
jbe
movsl
and
jg
add
ja
and
push
andb
cmpsb
rolb
call
pop
dec
push
and
mov
popa
scas
std
in
sub
push
xlat
sbb
cld
jb
and
mov
out
push
insl
sbb
push
in
mov
test
push
and
fimull
sub
loop
cmp
imul
xor
pop
das
and
xchg
cmp
xchg
and
out
nop
mov
addl
jae
loopne
xchg
or
and
std
in
sub
cmpb
fst
dec
clc
push
push
sbb
movsb
sub
out
push
sbb
jnp,pn
pop
mov
les
pop
and
fstpt
aad
inc
sbb
inc
fcom
mov
int3
js
leave
outsl
and
stos
mov
out
mov
rcr
cmp
popf
leave
mov
push
sahf
dec
mov
and
flds
ror
je
or
lahf
fsubl
and
cmp
mov
and
jp
pop
jo
xor
cmc
das
lcall
in
loop
xor
cmp
xchg
int
lock
sbb
push
xchg
lds
push
and
inc
xchg
push
test
mov
pop
mov
and
or
xchg
pop
imul
cmpsl
mov
add
jne
jno
sub
lret
mov
or
add
mov
sti
mov
sub
jae
and
movsb
in
hlt
xchg
loope
and
mov
and
js
andl
aaa
mov
xchg
pop
xchg
mov
add
lea
pop
jmp
mov
cmpsl
lahf
mov
fldl
and
jns
push
and
sbb
sahf
mov
push
xchg
in
nop
sbb
mov
pcmpeqb
pop
mov
arpl
fstps
ret
and
std
or
shr
popa
ret
and
push
xor
push
xchg
xor
imul
pop
push
inc
loope
gs
jbe
das
incb
movl
decl
movsb
adcb
psubusb
imul
push
push
push
and
mov
inc
mov
or
mov
jno
in
aas
popa
inc
and
clc
rorl
mov
lods
push
and
sub
sbb
fistps
and
push
jbe
and
inc
es
outsl
jo
and
aas
lret
inc
test
jne
adc
mov
jecxz
mov
or
cmp
mov
and
sbb
sub
jl
and
les
imul
jno
adc
and
lods
frstor
jge
pop
and
push
push
repnz
subb
mov
lods
ficoml
and
pand
mov
and
sbb
fsubl
insl
and
inc
jnp
sub
or
lret
mov
mov
dec
cmp
sbbl
pop
js
out
and
inc
cwtl
jbe
mov
cmp
mulb
mov
and
subl
and
mov
stos
lcall
sbb
fldl
leave
and
dec
sub
shr
xor
and
lods
imul
adc
sbb
push
ss
leave
and
sub
and
add
cltd
inc
jp
mov
push
pusha
mov
mov
xchg
and
cmpsl
cltd
dec
xor
scas
pushf
out
fbld
call
outsb
mov
les
jns
jns
lcall
jae
scas
movsb
cwtl
add
rorb
dec
inc
frstor
movsl
out
test
mov
jg
iret
inc
mov
imul
aas
out
les
fbld
cmp
jge
icebp
pop
test
insb
add
nop
and
xor
fnstenv
lcall
cld
cmpl
insb
and
insl
push
sub
pushf
jmp
mov
add
push
ret
call
fistps
push
mov
and
fucomi
pop
jo
sub
sti
dec
cmp
lahf
pop
jno
out
jge
xchg
jecxz
and
mov
pop
test
cld
fnstenv
enter
and
mov
test
popa
sub
fstps
loopne
and
or
stc
xchg
add
fisubs
mov
std
mov
nop
stos
test
int
xor
ljmp
and
adc
push
push
lods
cmp
ja
and
mov
mov
push
inc
push
orb
add
pusha
mov
out
imul
xor
dec
lods
sub
push
fs
fxch
mov
das
mov
sub
mull
xchg
hlt
or
cmpsb
xchg
jbe
out
and
call
cld
out
mov
test
js
jg
shll
out
inc
loope
loopne
dec
push
xlat
and
jne
call
shlb
jnp
hlt
outsb
mov
decl
pop
inc
addl
dec
loope
fists
pop
jge
pop
jns
std
scas
out
lds
dec
pop
and
mov
xchg
testl
xor
jmp
and
cmp
mov
sub
rorb
fildll
push
or
stos
mov
pop
add
push
xor
and
cmpsl
xchg
mov
das
int
lret
in
and
add
cmpsb
jl
mov
outsb
inc
xchg
addr16
repz
sub
pop
and
xchg
xchg
shrl
push
das
test
fsubl
mov
mov
arpl
and
mov
and
xor
jo
push
mov
aas
cmpsb
dec
mov
and
adc
sbb
in
movsl
xchg
into
das
and
push
add
aad
pop
inc
mov
jp
mov
sub
xchg
push
test
dec
jl
push
pusha
sbb
lahf
jo
insb
jbe
out
cmpsb
rcrl
add
pop
jmp
vorps
js
dec
fdivl
inc
lret
enter
push
cmpsl
cmc
cmp
and
inc
pop
nop
es
xchg
xor
lcall
xor
inc
and
testb
xor
daa
cmp
shrb
and
sbb
cwtl
and
mov
insb
mov
movb
ret
and
push
pop
stos
and
push
mov
mov
pop
gs
rcl
and
jae
imulb
sbb
xor
xchg
xor
xor
mov
add
mov
les
mov
add
adc
fldt
aam
xchg
mov
test
pop
jbe
or
inc
ret
push
cmp
call
insl
and
xchg
fs
stos
mov
cs
lock
pushf
sbb
jns
test
clc
jne
adc
test
out
and
or
cmp
mov
loope
sbb
fidivs
and
sub
pop
shlb
push
int3
sbb
mov
mov
je
lahf
add
popf
enter
dec
mov
stos
stc
insl
and
aad
imul
mov
les
mov
jge
sbb
insl
mov
daa
mov
data16
push
jecxz
dec
movsb
cmpsb
push
mov
xor
mov
sti
and
xor
pop
xor
and
xchg
popf
mov
popa
fdivl
jle,pt
dec
push
inc
loop
je
fyl2x
cmp
subb
fmull
sub
popa
pop
cmp
movsl
fwait
insb
frstor
daa
outsb
or
and
out
fsts
pop
sbb
outsl
gs
fisubl
cmpsl
adc
pushf
out
and
pop
lahf
and
pop
xor
fstps
in
aas
jae
ja
sbb
mov
xchg
sti
sub
aaa
das
inc
cmp
out
mov
and
mov
int3
cltd
test
mov
fidivrl
push
fsubl
adc
jg
mov
movsb
cs
js
mov
and
repz
jno
lea
sbb
scas
push
in
mov
jbe
mov
add
dec
dec
movsb
outsl
mov
cs
cmp
in
sub
sub
mov
stos
in
mov
sbb
mov
jo
jp
aad
xchg
adc
mov
stc
dec
sub
and
repnz
mov
out
xor
mov
loopne
mov
adc
orl
movsb
call
cltd
dec
fucomi
jae
xchg
xorl
hlt
mov
dec
les
popa
xchg
xchg
fdivs
rol
scas
outsb
jle
and
out
daa
fcmove
push
and
xchg
sub
or
daa
std
rcrb
mov
lahf
rcrb
popa
adc
and
dec
repnz
sarl
mov
push
jg
fstps
and
fwait
shl
divl
xchg
xor
adc
es
or
and
dec
hlt
adc
mov
mov
movsb
mov
jns
loope
mov
rclb
cs
xchg
mov
subb
jg
cmpl
neg
adc
push
popf
out
inc
cmc
cli
mov
movsb
xorl
fisubl
jb
sub
daa
push
insb
sbb
push
and
dec
pop
push
and
jnp
inc
out
andb
test
fsubs
roll
inc
mov
aad
mov
xchg
pop
pop
jge
movsb
lret
arpl
sbb
xchg
cmp
or
out
in
and
in
sbb
daa
daa
int3
xor
push
shlb
dec
dec
sub
fmull
pop
sub
and
out
and
and
loop
cmpsl
shld
push
cmp
jle
shlb
and
inc
inc
in
cwtl
add
mov
xor
or
popa
cmpsb
insl
ljmp
out
sbb
ds
shll
andb
repnz
pop
adc
mov
jg
sbb
mov
add
xor
sahf
leave
and
ljmp
inc
and
pop
sbb
pop
mov
mov
or
das
arpl
cmc
mov
pop
cld
inc
cmpsb
mov
sbb
sti
fsts
movsb
mov
and
mov
mov
mov
shll
leave
js
pop
inc
mov
popa
inc
lret
and
pushf
psrad
mov
jecxz
bound
dec
sub
cmp
mov
andb
jle
outsb
and
add
scas
pushf
andl
xorl
and
xchg
test
sbb
inc
pop
push
mov
test
pushf
lea
popa
stos
xchg
push
loopne
mov
adc
mov
roll
inc
test
or
sbb
xchg
and
into
push
jge
mov
cmpsb
stos
arpl
call
sbb
les
add
insl
cmp
cmp
jne
adc
js
repnz
xchg
and
add
adc
and
push
push
xchg
dec
movsl
sahf
movsl
jnp
and
xor
mov
and
stc
rorl
data16
imul
lret
xchg
inc
lret
adc
jmp
and
idivl
popf
mov
add
dec
lret
fs
sub
inc
shlb
cld
cs
or
and
and
not
stc
add
and
pop
lods
fdivl
lahf
shrl
and
inc
sbb
and
or
and
xchg
lea
inc
sub
jns
fnstenv
into
popa
pop
cmp
shlb
outsl
push
in
pop
mov
push
subl
je
xchg
adc
lds
movsl
inc
inc
daa
out
inc
in
repnz
and
insl
cmp
stos
mov
shrb
or
test
adc
mov
icebp
cmpsb
push
cltd
mov
in
dec
cmp
pop
mov
and
cs
mov
rcll
sbb
cmpsl
adc
cmp
pop
lahf
cmp
push
js
cwtl
shll
test
sti
jo
or
and
test
jmp
mov
mov
and
loope
movsl
jns
jmp
scas
bound
xchg
hlt
and
push
and
in
fldt
and
fisubrl
push
sbb
test
sbb
ret
popf
mov
mov
and
and
repnz
test
mov
inc
cmp
jne
movsb
jb
mov
xor
outsb
stc
movsb
inc
mov
mov
ret
dec
and
cld
cs
bound
outsl
int3
and
popa
pop
test
adc
fs
push
scas
jbe
and
stos
int
and
mov
mov
dec
jge
mov
call
test
fidivrl
in
add
mov
lea
push
fstpt
mov
int3
jb
mov
movsb
sub
lods
mov
rcr
out
imul
mov
sahf
xor
dec
outsl
fwait
mov
xor
dec
icebp
fwait
and
jg
and
pop
jecxz
cmc
add
jge
add
xchg
xor
jp
push
in
push
mov
mov
mov
cltd
shr
nop
and
ds
sub
std
xor
xor
xor
dec
sbb
and
imul
fbld
test
cmpsb
cwtl
int3
adc
addl
add
xchg
jp
xchg
and
stc
shlb
push
jmp
mov
mov
xlat
jle
fs
cmp
shlb
test
sub
aas
fisubrl
cmp
or
outsl
insb
xchg
cld
jle
mov
inc
addr16
and
push
bnd
and
aas
xor
insb
test
pop
cmp
adc
ret
and
jg
fldl
mov
jge
and
jge
cmp
dec
cli
aam
mov
repnz
lahf
jmp
jbe
adc
jno
fnsave
stos
stc
pop
sbb
int
pop
and
idivl
lcall
and
repz
call
push
mov
xchg
add
ds
in
and
jbe
push
mov
fsubs
repnz
cwtl
loopne
mov
push
inc
mov
lds
dec
cmp
pop
daa
cli
ret
mov
jle
inc
mov
cmpsl
aas
adc
jbe
dec
scas
loopne
and
repz
sbb
cmp
lock
std
enter
and
cld
lret
std
lock
fisubs
push
addb
cmp
fistpll
js
xor
inc
and
push
in
ljmp
xor
and
mov
pop
adc
jnp
and
lea
movsl
pop
cmpsb
or
fldl
and
sub
push
fbld
movsl
push
cld
and
ljmp
and
popa
stc
fdivrs
xor
xchg
cmp
insl
fisubs
sbb
inc
cmp
sub
out
mov
jmp
imul
mov
mov
clc
mov
mov
inc
jg
xchg
cmc
lret
gs
lcall
sbb
and
iret
add
mov
push
les
es
sbb
inc
lods
les
out
loope
enter
dec
and
lock
dec
clc
stc
in
mov
stos
and
daa
pop
leave
es
imul
or
push
cmp
sahf
divl
call
test
pop
int3
rolb
pusha
fs
dec
and
fisttps
mov
and
negb
jb
loope
arpl
and
mov
adc
push
lods
in
dec
jecxz
das
call
inc
xchg
sub
and
and
or
and
outsl
xchg
cli
xchg
xor
mov
popa
aam
jge
lods
sub
xor
fadds
inc
lds
iret
push
and
jmp
cltd
xor
mov
add
repz
loop
dec
sub
inc
mov
sbb
iret
sarl
negl
dec
in
push
sub
ret
test
inc
loope
shl
imul
push
pop
fisttpll
push
insb
xor
and
dec
mov
movsl
sub
fistpl
imul
add
filds
test
adc
cmp
push
daa
test
xchg
or
pop
iret
icebp
fistpl
aad
and
mov
or
and
lahf
sbb
xor
or
xchg
jp
sbb
sbb
and
add
mov
push
outsb
xlat
and
lods
mov
test
movsb
sbb
jno
daa
push
and
mulb
mov
rcrl
and
shr
rcrb
daa
out
sahf
mov
faddp
popl
in
cmp
and
int
div
sub
jae
push
stos
popa
xor
addb
outsb
xchg
jb
mov
or
repz
and
inc
inc
rorl
and
xchg
xchg
and
mov
mull
dec
push
sub
int
cmp
data16
xchg
lea
popa
mov
ljmp
pop
push
pushl
inc
jl
pushf
mov
lock
sbb
xlat
mov
ret
cltd
add
inc
rolb
sub
js
cmp
cltd
fsubs
mov
ror
imul
mov
and
mov
popf
jno
popa
cwtl
repnz
xor
lret
bound
jae
sub
popa
imulb
js
jb
in
and
sqrtps
sub
and
add
out
sub
scas
or
mov
and
lcall
xchg
into
and
add
mov
lods
cmp
icebp
push
and
mov
jge
imul
popa
jbe
pusha
mov
push
lods
loop
xor
adc
push
inc
pop
cmp
iret
mov
out
mov
lock
movsl
add
xchg
dec
loop
dec
insb
xchg
sub
add
or
and
mov
and
and
mov
mov
and
xor
cmp
mov
not
call
addr16
adc
mov
loopne
cmc
lret
aad
sbb
or
cmp
gs
rorb
call
int3
dec
sub
out
inc
roll
call
and
mov
lret
aad
mull
pop
scas
pop
arpl
or
fildll
jae
fnsave
fs
inc
sub
hlt
aas
xor
push
insb
popa
push
inc
ret
xor
and
lret
and
adc
sub
test
xchg
mov
xor
pop
and
sbb
es
mov
movsb
cmp
push
cltd
outsl
insl
inc
cmp
push
icebp
adcb
mov
inc
cltd
imul
js
pushf
dec
and
stos
dec
test
sbb
fidivs
pop
loopne
xchg
pop
jmp
sbb
adc
mov
pop
shll
and
push
test
jno
in
push
pop
add
cld
and
sub
cmc
and
pop
mov
push
lret
divl
mov
and
pop
mov
and
mov
mov
pusha
pusha
ds
pushf
pop
jge
gs
rorb
data16
jmp
clc
cmpl
dec
notl
pop
pop
and
aad
lods
adc
and
mov
in
and
adc
enter
arpl
repnz
jge
loopne
and
add
adc
adc
or
mov
jbe
movsl
cmp
imul
ja
popa
add
ljmp
mov
mov
mov
xor
aaa
movsl
push
scas
popa
push
idivl
movsb
sti
push
and
and
add
lods
and
or
imul
cmp
pushf
jle
loope
and
hlt
mov
ds
das
lahf
xchg
push
rcr
push
push
lods
mov
and
daa
fldl
and
pop
xchg
outsb
imul
cltd
cmp
push
lret
out
bound
mov
das
call
clc
adc
mov
sti
leave
lcall
and
adc
and
sub
inc
jmp
inc
jg
fwait
xchg
cmp
mov
mov
or
rcrl
shlb
arpl
mov
cmc
and
xchg
pop
dec
scas
push
mov
mov
adc
push
inc
leave
pop
xor
pushf
push
xlat
and
daa
fdivl
jb
sbb
loop
push
jno
cmpsb
ret
hlt
and
mov
dec
and
mov
xor
cmp
and
mov
daa
push
and
and
mov
rcrl
jo
xor
repz
rclb
imul
scas
dec
mov
fiadds
popa
and
inc
sbb
idivl
push
push
clc
addl
jmp
lock
and
testl
and
and
sub
pop
and
in
mov
test
mov
and
or
fs
and
sub
std
fbld
jl
scas
push
sbb
repnz
out
push
lods
das
cltd
test
and
jnp
xor
jno
shrb
sbb
sahf
idivb
sti
lea
call
mov
out
stos
or
jle
xchg
lods
mov
inc
mov
test
inc
mov
andb
adc
arpl
loopne
test
fwait
mov
es
mov
testb
inc
test
pop
pop
xor
add
addr16
push
shll
and
fcomp
pop
or
mov
mov
xor
ja
push
fwait
and
dec
enter
push
movsl
cmpsl
dec
xor
pop
xlat
adc
and
mov
in
imul
mov
lahf
adc
loope
andl
xlat
pop
and
arpl
jp
and
icebp
mov
cmp
push
aaa
enter
std
pop
mov
cmpsb
aad
and
and
and
xchg
andb
xchg
jo
inc
pop
dec
fsubrp
and
xchg
pop
sahf
dec
xchg
inc
pop
andb
lret
ja
repz
imul
sarl
gs
or
in
inc
and
sub
ret
inc
dec
jae
sti
and
loopne
jge
jnp
adc
sbb
lods
push
outsb
and
stos
sbb
or
xor
xchg
in
cmp
pushf
push
push
mov
jl
std
out
mulb
test
insl
lock
and
push
das
and
mov
pop
cli
and
out
and
lods
testb
push
ljmp
inc
popa
xor
and
push
dec
adc
inc
int3
stos
xchg
mov
clc
stc
and
cmpl
mov
and
stos
lret
movsl
scas
aas
test
dec
add
lods
pop
and
xchg
push
xor
insb
mov
pop
push
pop
aaa
push
mov
mov
pop
clc
xchg
movsb
ljmp
add
and
mov
mov
repnz
mov
push
lret
sub
lahf
and
mov
and
add
cmp
xor
int3
and
jo
jbe
dec
lcall
inc
sbb
xchg
aas
insl
fistpll
aaa
mov
popa
pop
jne
add
mov
dec
cmpsl
stos
sti
bsr
out
pop
add
pop
mov
test
and
inc
mov
xlat
mov
addr16
and
lods
cmpsb
cmc
test
inc
mov
cli
xchg
test
fwait
mov
dec
test
aas
outsl
jne
pusha
pop
jmp
inc
out
xchg
jl
inc
insb
and
push
test
sbbl
jne
test
and
push
dec
lds
mov
pusha
add
push
and
ljmp
mov
dec
fucom
rol
cmp
movsb
dec
xchg
daa
lods
test
mov
xchg
and
out
cmp
add
cmp
inc
cmpl
pop
or
lock
fisttpll
mov
loopne
sbb
pop
sub
and
jnp
dec
les
fs
repz
sarb
pop
lcall
icebp
inc
ret
inc
xchg
jge
xchg
mov
shlb
cwtl
sub
into
push
fldl
fwait
xor
mov
jl
insl
out
adc
dec
mov
sbbb
xchg
out
dec
ljmp
mov
popa
mov
shlb
push
jb
bound
ljmp
in
push
aad
arpl
mov
enter
and
fs
dec
mov
push
inc
scas
sti
sub
aam
xchg
and
ret
lock
test
mov
xchg
popa
divb
and
pop
out
cmp
jmp
incl
lods
out
xchg
fisubl
and
mov
movsb
inc
sub
sub
xchg
and
test
mov
mov
and
push
popf
daa
adc
and
mov
adc
mov
cmp
lahf
and
add
push
xor
scas
cs
adc
xor
xchg
mov
and
sub
jle
aad
cli
mov
and
aas
lock
andb
inc
roll
fsubl
xor
pop
and
test
cmp
ds
cmc
leave
and
and
pop
and
xor
je
cmc
xchg
and
lods
rcrb
mov
lods
dec
fistps
out
mov
enter
flds
mov
stos
stc
and
sub
sbb
mov
jmp
jns
and
pop
and
mov
gs
or
and
lea
jp
adc
outsl
inc
mov
out
aaa
es
lds
das
orl
jmp
movsl
ljmp
jns
js
mov
adc
xchg
popf
xchg
das
in
int3
cmpsb
and
inc
inc
inc
and
xchg
mov
fisubl
fwait
or
loop
mov
mov
mov
mov
dec
xchg
or
mov
and
orb
scas
push
pop
and
clc
xchg
negl
and
mov
push
and
jg
and
xchg
or
out
movsl
and
jns
inc
mov
fisttps
sub
xchg
xchg
and
test
mov
pop
xor
dec
cmp
mov
imul
test
inc
and
loope
cmp
mov
into
ret
and
lods
jmp
add
dec
jns
fwait
movsl
lcall
cmp
movsl
mov
ds
or
cwtl
or
stos
cmp
add
repnz
mov
mov
jbe
and
clc
mov
mov
ret
and
push
mov
lret
int
movsb
xlat
or
mov
and
lods
daa
cs
jns
mov
movsb
mov
cmpsl
sub
mov
imul
insl
and
mov
ljmp
ja
stos
in
pop
and
cltd
mov
mov
mov
insb
test
xor
lahf
pop
int
inc
pop
fucomip
mov
inc
lahf
in
and
cmpsl
sti
lret
sbb
fsubs
jb
repz
xchg
loopne
mov
daa
dec
in
xchg
cmp
repnz
push
and
mov
iret
and
push
jge
lcall
in
xchg
jbe
and
sti
xchg
and
and
and
jg
sahf
outsb
arpl
cmp
dec
sub
fidivrl
xor
xlat
xor
movb
rclb
test
iret
mov
mov
inc
and
ret
sahf
scas
fcompl
mov
out
ljmp
les
clc
out
sub
adcb
adc
call
or
and
dec
insb
ljmp
or
mov
aas
sub
cwtl
push
gs
mov
jae
icebp
xchg
push
dec
lahf
and
loope
addl
mov
sbb
test
fdivl
adc
popa
das
adc
and
xor
scas
and
fimuls
push
fcompl
movsl
les
xor
inc
arpl
dec
sub
and
jmp
xor
imul
or
scas
imul
fcomps
dec
fwait
push
fsubl
mov
scas
xchg
jb
and
mov
shll
lock
pop
push
icebp
and
loop
repz
arpl
push
ljmp
call
mov
pop
inc
xor
dec
stc
loope
mov
rcr
sub
push
out
imul
xchg
xchg
inc
jge
xchg
push
mov
scas
data16
adc
or
sub
sbb
es
xor
dec
mov
fisttpl
loopne
cmp
mov
lcall
test
xchg
shl
data16
bound
and
jne
xor
loope
fbld
mov
test
add
loop
data16
xor
arpl
pop
cs
dec
and
mov
jae
sbb
and
cltd
divb
cwtl
and
mov
sbb
popf
mov
je
cld
ljmp
loop
inc
and
or
jl
pop
fildll
dec
push
mov
push
dec
push
or
jnp
xchg
cmpsb
and
mulb
iret
push
push
das
or
sub
sbb
lea
adc
adc
push
xor
pusha
int
jae
lea
push
scas
daa
pop
and
test
cmp
dec
add
jge
es
subb
std
sbb
and
jns
lretw
or
in
lods
and
movsl
xor
sbb
sbb
faddl
fcmovu
sub
sbb
mov
push
addr16
mov
orb
orl
aad
pop
and
popa
imul
jb
push
call
in
movsb
push
push
adc
inc
xor
dec
aas
push
out
sub
xor
xor
jnp
les
and
xor
repz
loop
and
mov
out
and
dec
xor
jno
shll
imul
repz
lock
mov
js
sbb
movsl
ds
dec
dec
cmpsl
and
sbb
aam
inc
in
mov
xlat
add
ret
dec
andb
je
imul
popa
ret
std
cwtl
and
pop
adc
lcall
jp
sbb
insb
std
fsubl
adc
mov
fwait
call
xor
mov
jns
dec
pushf
mov
and
cli
arpl
sbb
dec
and
movsb
mov
aaa
cmp
stc
pop
nop
and
mov
lcall
jmp
adc
jecxz
xor
fs
flds
ret
mov
xchg
pop
mov
shll
xchg
pop
popa
cmp
pop
movsb
in
ljmp
ret
xchg
and
mov
fwait
jbe
repz
ret
sbb
dec
aas
shlb
scas
adc
je
push
scas
ret
xchg
push
sbbl
xchg
jge
popa
and
loopne
fs
aam
loop
mov
out
insl
xlat
and
xchg
xchg
xor
mov
jbe
popa
dec
repnz
mov
and
push
ljmp
pop
push
aaa
iret
and
fmulp
sahf
sub
test
cltd
push
mov
and
mov
test
je
sub
adc
xchg
cmpsb
adc
int
add
xchg
ss
and
mov
xchg
iret
pop
dec
and
stos
sbb
pop
cli
mov
daa
addr16
mov
mov
xchg
stos
shrb
mov
inc
movb
rcll
test
jecxz
std
pop
mov
mulb
pop
mov
outsb
mov
xor
popa
jmp
mov
aas
fisttps
test
jae
lock
push
sbb
lods
mov
bound
pop
movsb
push
sarl
in
inc
sti
fimull
lret
add
jnp
shll
das
inc
push
sub
cwtl
pop
dec
js
loop,pt
add
std
mov
dec
jmp
movsb
fbstp
cmp
repz
adc
xor
imul
test
or
sbb
test
push
and
lea
xchg
mov
cwtl
test
into
push
mov
daa
sbbl
adc
in
int
ja
addr16
xchg
mov
sbb
and
movsl
ljmp
push
mov
cmp
mov
iret
lock
aas
jg
jmp
cwtl
mov
xchg
dec
and
push
xor
mov
lret
mov
push
inc
je
xor
xchg
sub
lahf
test
insb
cmc
lods
lds
or
mov
pushf
loopne
fadds
jecxz
inc
ja
pop
push
mov
ret
andl
adc
sub
icebp
jno
lods
cmp
pop
insl
shlb
sub
cwtl
cli
fisttps
push
loope
ret
and
jbe
in
ret
inc
loope
rolb
jns
out
cmpsl
and
jg
dec
ret
mov
into
mov
add
imul
pusha
and
in
mov
and
jbe
negl
out
xchg
and
sarb
gs
cwtl
and
push
xchg
and
addr16
xchg
and
add
les
sub
movsl
fistps
dec
mov
cmp
jl
orl
sbb
add
lahf
jae
push
jmp
jb
dec
push
and
inc
lds
mov
fldcw
fdivs
pusha
mov
pushf
jo
jg
xorl
sub
popa
stc
decl
ljmp
insl
inc
hlt
mov
mov
dec
popa
fidivs
and
cmpsb
in
push
adc
xlat
std
in
sbb
and
ret
mov
jecxz
andb
test
sub
push
sti
fistpl
inc
push
inc
xor
cmp
outsb
and
out
xchg
add
das
popf
jge
inc
sub
and
mov
cld
adc
and
jmp
out
movsb
mov
enter
ljmp
andl
fs
and
movsl
addr16
lods
imul
enter
adc
push
call
dec
lcall
out
mov
cmp
add
sub
jae
fisubrl
and
jg
mov
xchg
xor
and
ror
stc
pop
lret
mov
add
and
push
lret
inc
dec
and
cwtl
sbb
push
ljmp
insb
inc
and
xchg
add
xchg
jmp
xorl
ja
and
push
out
mov
rclb
and
xor
push
stc
push
cmp
mov
mov
mov
push
xchg
fstpl
and
insb
mov
and
add
adc
and
outsl
adc
icebp
push
or
leave
into
in
shlb
sbb
and
ljmp
xor
and
rorb
fisubrs
xor
push
loop
mov
pop
inc
mov
cli
iret
lret
sarl
mov
mov
scas
and
jo
sti
ret
and
dec
mov
mov
add
loope
push
mov
cwtl
push
aaa
imul
mov
in
mov
fisubs
and
dec
or
pop
push
xor
outsb
iret
and
push
xchg
cmp
push
and
lcall
jae
xchg
pop
push
inc
adc
inc
das
and
adc
popa
icebp
mov
adc
mov
pushf
add
adcb
shlb
push
arpl
orb
cs
in
and
pop
jae
cli
lea
clc
and
and
stos
aaa
ja
sub
cmp
dec
and
adc
mov
movsb
jmp
nop
popa
sub
push
decb
enter
mov
add
leave
dec
push
mov
inc
and
fcmovbe
je
dec
decb
and
divb
mov
sub
aas
pop
cld
jne
ds
out
je
jnp
cmp
jge
scas
clc
dec
or
or
out
cmc
lcall
and
mul
mov
lods
in
rcll
xor
fisubrs
jb
inc
ret
lds
inc
cli
nop
test
stos
cs
aaa
xchg
movsl
outsl
and
sub
adc
movsb
cmp
les
clc
xorl
jmp
xchg
shlb
jns
xlat
stc
sub
out
push
push
test
add
xchg
or
sub
cmp
jmp
pop
or
mov
dec
sbb
and
sahf
pop
fs
imul
notl
and
push
fsts
jge
mov
xchg
jmp
imul
arpl
cltd
int
subb
mov
sbb
iret
data16
and
cmp
frstor
jb
add
andb
pop
lahf
inc
in
sub
gs
and
jge
lock
and
pop
aas
sub
hlt
add
mov
test
sbb
mov
push
pushf
adc
ja
out
and
repz
mov
add
and
mov
imul
daa
pop
inc
movsl
lcall
fbld
cld
jge
loop
inc
jns
shl
dec
lds
and
cmpl
movsb
inc
cmpsb
lea
xchg
fcoml
mov
es
popa
lcall
ret
test
imul
sbb
cmpsb
sub
push
mov
cltd
lret
jne
repnz
inc
lcall
inc
dec
mov
shlb
jmp
pusha
jb
fidivrl
and
lods
xchg
test
inc
cltd
jmp
mov
and
xchg
mov
movsb
pop
mov
dec
subl
inc
lahf
repz
inc
stos
mov
xchg
xchg
jae,pn
rol
cltd
movsb
mov
repnz
xor
adc
das
stc
or
popf
and
push
lcall
rcrb
and
int
jne
test
sti
sahf
je
add
lock
sbb
pusha
movsl
and
sbb
and
sub
adc
adc
jmp
pop
lea
sahf
xlat
shll
and
sbb
xor
inc
outsl
fsubr
mov
js
jno
sbb
outsb
aam
push
lods
lret
adc
repnz
jnp
and
add
iret
sti
mov
push
dec
push
inc
mov
lahf
ficomps
xor
and
imul
push
into
outsl
jne
mov
mov
arpl
out
int
ret
or
lret
xchg
sub
loope
shll
js
mov
xchg
into
inc
lods
test
mov
aas
inc
inc
push
iret
jmp
lahf
xlat
jmp
xchg
pop
push
mov
test
mov
in
int3
popa
ds
push
sti
popa
and
rep
ficomps
out
aam
mov
daa
faddl
insb
mov
in
dec
dec
iret
loopne
frstor
mov
ljmp
cltd
push
cld
loope
scas
mov
popa
jbe
ret
inc
in
sub
sbb
jb
xchg
push
xor
xchg
sbb
push
pop
fwait
aaa
sub
push
add
jmp
mov
jl
and
add
fsts
and
nop
jge
sbb
xor
je
mov
xor
aad
cmp
or
imul
cmc
or
inc
jb
and
movsb
cmp
and
into
loopne
repnz
les
and
jmp
dec
pop
and
mov
sti
adc
cmp
sbb
jge
jae
fldt
cmpsb
stos
dec
push
cmp
add
lcall
stos
xchg
jno
imul
dec
dec
out
popa
mov
mov
fsub
jmp
and
rclb
pop
movsb
jp
pusha
and
aas
in
sub
mov
rorb
aam
and
popa
nop
push
sbb
mov
lods
add
fcmove
ret
mov
pop
pop
sbb
and
adc
and
cltd
fcomp
sub
and
pop
loop
and
cmpsl
inc
jns,pt
fwait
sbb
adc
or
jecxz
and
cld
mov
xor
and
int3
xor
mov
loope
imul
testl
xor
jne
ljmp
mov
mov
ror
mov
and
loopne
fsubl
push
loop
jmp
and
sarb
xchg
and
lock
int3
push
jmp
fdivs
adcb
cld
mov
inc
mov
push
das
xchg
cmp
mov
loopne
mov
in
test
mov
mov
add
pop
pop
and
mov
and
mov
cmp
or
and
rolb
rcrl
cltd
mov
ret
xor
popf
sti
insl
xchg
xor
movsb
inc
add
addr16
shll
mov
xchg
cmp
mov
lock
lret
add
hlt
test
imul
adc
mov
sbb
test
sub
push
and
lcall
sub
call
imul
and
pop
insl
pop
mov
leave
inc
or
and
jbe
jns
mov
scas
mov
sbb
cmpsl
arpl
inc
lea
cmp
push
and
call
pop
and
ds
popf
sub
mov
repnz
imul
and
in
inc
jns
mov
pop
popa
jb
lret
cwtl
and
mov
mov
adc
xor
xor
jge
mov
and
sub
and
movsb
or
outsl
into
jge
and
adc
neg
inc
and
cmp
jno
imul
and
mov
jb
add
nop
sbb
jl
mov
pop
xchg
mov
sbb
hlt
popf
push
stc
and
out
mov
and
and
mov
add
and
notl
in
pop
inc
aas
xor
into
mov
or
pop
jg
lods
pop
in
xchg
mov
mov
int
jo
sub
dec
cli
sti
lods
xchg
gs
jmp
loopne
inc
push
cmpsl
adc
fdivrl
jl
shll
push
and
mov
adc
and
in
mov
push
push
pop
or
icebp
test
test
xchg
jb
or
insb
cmp
negb
and
xorl
jnp
lea
inc
sbb
and
jmp
push
fildll
add
lret
pop
adc
dec
pop
sub
jbe
dec
enter
sbb
xchg
sub
lcall
scas
push
and
fwait
ror
test
sbb
aam
and
sbb
xchg
loopne
and
jo
mov
orl
adc
mov
and
loope
pop
and
lret
fstl
and
mov
repnz
mov
sahf
popf
cmpsb
int
inc
mov
mov
mov
sbb
shll
ja
outsl
and
js
or
and
mov
jecxz
or
sbb
adc
ret
and
lea
lret
add
sti
sub
scas
mov
pop
test
cmp
pushw
and
xchg
call
movl
mov
jo
and
stc
xor
sbb
mov
pop
and
mov
aaa
je
cmp
jge
ror
dec
in
adc
xlat
loopne
sub
fsubrp
push
mov
mulb
sbb
add
xchg
stos
or
bound
adc
aas
rcll
sti
and
test
pop
push
xchg
jmp
mulb
push
rcr
pop
iret
jmp
and
xor
mov
dec
insb
push
mov
fistpl
or
lods
sbb
or
aad
imul
fstl
and
aaa
jmp
xchg
lcall
xlat
xor
mov
movsb
xorl
outsb
icebp
cmpsl
mov
sbb
pop
stos
dec
iret
test
mov
dec
je
loope
sbb
daa
pop
and
inc
out
popa
adc
push
xor
mov
push
lock
or
nop
fstpl
fnstcw
add
sbb
rclb
sbb
lret
lods
and
arpl
lea
mov
scas
sbb
leave
and
pop
icebp
lret
mov
xor
test
js
mov
inc
pop
xchg
xor
movsl
ret
mov
adc
sbb
int
cmp
adc
lds
fildl
sub
xor
in
mov
inc
jecxz
icebp
ret
xor
std
xchg
jo
sub
and
and
pop
insl
dec
push
add
push
adc
xor
inc
int
and
in
sub
dec
call
or
xor
jle
dec
and
sub
mov
ss
pop
xchg
icebp
int3
and
es
and
arpl
sbb
out
jns
bound
sub
loopne
xor
out
jge
scas
mov
sbb
adc
mov
pop
imul
inc
lret
cltd
cwtl
push
fistl
add
in
xchg
cmp
and
xorl
mov
dec
pop
movsb
sarb
js
dec
aam
sbb
popa
push
les
das
popa
xchg
pushf
jo
movsl
cmpsl
out
cmp
dec
xchg
clc
jnp
cmpsb
dec
cli
andl
fidivrl
push
xor
mov
push
push
dec
sub
xchg
or
outsl
push
stos
pop
add
lcall
loop
and
dec
push
inc
dec
cmp
and
jecxz
pop
xchg
cwtl
std
clc
cmpsb
sbb
xchg
inc
inc
and
daa
lcall
movsl
inc
outsl
in
push
adc
mov
add
imul
jle
sub
insb
cmp
and
adc
int3
cmc
xor
and
add
lock
adc
and
and
push
lcall
sahf
scas
inc
popa
andb
lods
push
sub
cmpsl
adc
gs
sbbl
mov
xchg
movsb
push
andl
dec
or
mov
adc
jle
inc
and
lcall
jle
sbbl
jp
push
dec
gs
mov
sbb
dec
pop
mov
add
xchg
hlt
xchg
sahf
and
aam
sub
mov
iret
hlt
stc
fcoml
inc
testb
nop
mov
mov
fildl
dec
in
inc
int3
fwait
xor
or
outsl
popa
push
sub
sub
pop
push
arpl
xor
inc
and
and
and
mov
dec
and
add
cmp
dec
cld
ja
scas
push
push
fldt
xchg
rcrb
clc
push
ljmp
jae
push
and
inc
out
jmp
inc
aas
xor
lea
or
dec
pop
aam
inc
adc
fxch
in
push
xchg
or
call
test
xor
dec
mov
ds
and
add
pop
mov
andl
outsl
pop
stos
xor
sbb
and
data16
imul
cltd
popa
xchg
shll
in
ss
out
push
mov
lea
out
mov
mov
stos
adc
outsl
jmp
inc
dec
xor
clc
ja
or
iret
inc
add
push
insl
pop
mov
adc
dec
and
push
push
fwait
pop
enter
loopne,pn
jns
cmc
mov
mov
cli
and
add
xchg
jns
cmp
lea
cltd
sbb
cmp
or
and
lods
mov
sbb
mov
xchg
push
and
sub
or
imul
mov
shr
and
out
aad
pop
inc
popf
and
push
xor
int3
mov
mov
jecxz
or
gs
cmp
jmp
lock
dec
sarl
sub
or
xchg
movsb
jns
cmp
ret
mov
mov
pop
cltd
pushf
pop
jbe
push
sub
cmpsb
jns
loop
mov
testb
xchg
inc
and
xchg
sub
stc
loop
pop
mov
movsb
sarl
movsb
shlb
bound
xchg
pushf
rcll
xorl
mov
mov
sbb
inc
jne
jmp
inc
cld
xlat
getsec
mov
dec
arpl
and
jb
ret
mov
lea
je
arpl
jmp
enter
out
dec
and
aam
leave
popf
imul
and
mov
push
cs
xor
shll
mov
inc
dec
push
mov
fwait
adc
jb
subl
sbb
popf
and
lea
xchg
xor
xchg
and
inc
daa
sti
jo
out
xchg
sbb
lea
fisubl
and
pop
cmp
xchg
add
in
and
test
mov
popa
insb
test
jae
fbstp
mov
or
sahf
je
add
dec
and
popf
fs
cmpl
cmp
mov
std
pop
rclb
cmpsb
lahf
ds
jge
jb
mov
ret
cwtl
and
mov
or
xchg
cltd
xchg
scas
and
mov
xor
xor
test
icebp
push
loope
sub
add
ret
popf
ss
leave
mov
sbbb
loope
jns
lahf
mov
cltd
xor
mov
push
xchg
and
int3
inc
mov
test
sbb
jae
test
jmp
xchg
xchg
push
enter
cmp
fnstsw
pusha
lea
cmc
cmp
inc
jmp
loop
addb
notl
push
jge
sbb
jp
cltd
mov
pop
adcb
dec
jb
jmp
cwtl
dec
and
push
mov
and
lods
cmp
insl
cmp
mov
push
aas
adc
and
jns
jae
dec
dec
xor
iret
xchg
and
sarl
fistps
inc
call
lods
jmp
xchg
pop
pop
stc
cmc
mov
jnp,pt
mov
jmp
out
iret
and
js
aam
popf
and
jg
sub
ja
pop
inc
dec
lock
fidivrl
pop
inc
push
and
push
out
sti
jg
mov
fsub
ficoms
xchg
and
jno
add
pop
cltd
jp
sub
push
mov
cwtl
call
jle
mov
xchg
or
and
xchg
popa
jg
and
and
adc
aas
clc
jecxz
mov
out
cmp
push
ljmp
cwtl
pusha
data16
insb
nop
jb
sub
mov
mov
and
pop
or
rcrb
fistpll
pop
cmp
mov
pop
mov
ret
jle
sub
dec
mov
or
push
out
les
gs
xchg
mov
xor
cltd
or
in
xchg
mov
pop
xchg
inc
mov
aam
gs
push
pushf
adc
sbb
in
dec
sub
mov
xor
in
inc
pop
push
pop
mov
imul
and
hlt
mov
pushf
pop
cmp
push
sahf
loope
outsb
cmp
jp
and
xor
movsb
cmp
add
mov
repz
leave
fst
mov
ljmp
jmp
scas
mov
fwait
subl
movsl
and
shr
aad
insb
pop
xchg
and
in
fldenv
and
test
xor
movsb
xchg
inc
and
jecxz
in
lret
mov
jne
jo
or
mov
xchg
loop
push
jge
movsb
sbb
movsl
cli
dec
addl
int3
cltd
jno
movsl
popa
pop
hlt
add
cld
jmp
clc
jae
mov
pop
mov
out
int3
js
fbld
xchg
scas
das
aaa
push
mov
mov
xchg
xor
inc
add
lret
pop
adc
cltd
mov
pusha
jb
rcrl
out
lret
movsl
inc
xchg
fmul
dec
xchg
xor
mov
mov
jp
mov
notb
mov
and
or
mov
push
inc
lret
mov
outsl
xchg
in
lea
imul
pusha
cmp
mov
xor
fldl
push
push
ljmp
xchg
push
lock
adc
fsubl
inc
push
mov
jo
js
cmp
movsl
push
scas
adcl
and
cmp
jg
ljmp
testl
mov
inc
and
fildl
scas
xchg
mov
data16
outsb
aaa
shlb
and
and
xor
dec
sub
das
pop
inc
and
ds
sbb
out
and
aas
repnz
hlt
cmpsb
fdiv
daa
pop
sbb
hlt
pop
cmp
and
sub
and
cld
outsl
mov
pop
lods
andb
cmp
dec
dec
psubq
loopne
shl
ret
and
mov
add
pop
xchg
sub
or
scas
adc
hlt
into
cmp
push
inc
and
mov
mov
inc
and
mov
xchg
fwait
lods
int3
movsb
pop
jmp
jle
sub
nop
dec
mov
sbb
pusha
pop
pop
fsubrs
or
aad
xor
push
dec
gs
push
jns
sahf
testb
lods
inc
or
xchg
daa
fistl
call
test
push
fwait
sub
push
shlb
and
jg
clc
andl
jne
xor
xchg
mov
in
and
adc
shlb
andl
outsl
sbb
cmp
test
jecxz
mov
fwait
iret
push
and
adc
or
jbe
lea
jecxz
push
and
addr16
clc
and
in
add
mov
sbb
sbb
adc
hlt
xchg
mov
xor
out
and
xchg
mov
scas
xor
xor
inc
lret
mov
into
fadds
pop
call
fsubrl
out
aaa
sqrtps
mov
add
scas
inc
in
mov
lock
xor
or
mov
and
add
and
das
jno
mov
mov
pop
ds
sub
add
cmp
pop
mov
and
sub
cld
inc
incb
xchg
and
jb
ficoml
imul
testl
arpl
or
push
and
pop
jmp
dec
mov
stos
mov
lret
push
and
and
adc
and
inc
add
fnsave
testl
dec
pop
mulb
cwtl
dec
jle
dec
pop
movsb
addr16
pop
pop
fbld
fdivr
pushf
add
dec
hlt
jns
sbb
and
and
jo
cmpsb
ret
int
icebp
and
pop
mov
sarb
inc
int3
pop
xchg
shrl
rcr
and
fnstsw
fisubl
push
fimuls
adc
lahf
and
fldcw
scas
call
mov
loopne
pop
pop
adc
mov
sbb
inc
pop
es
inc
mov
mov
jg
and
aam
inc
xchg
aas
sbb
and
cli
mov
xor
add
xlat
ljmp
adc
dec
inc
bound
mov
lcall
fdivl
jecxz
and
es
nop
and
xlat
mov
and
in
dec
push
push
xchg
shll
ljmp
dec
dec
iret
sub
pop
and
and
mov
push
inc
xchg
mov
mov
and
dec
jb
and
in
push
mov
lock
loope
scas
xchg
movsb
js
out
sbb
fcmovbe
cmp
and
cmp
add
cmpsb
xor
jae
dec
jge
sbb
xchg
outsl
sbb
and
fldt
arpl
fdivs
sysenter
jb
addr16
rcrb
and
iret
cmpl
pop
fstps
outsb
inc
pop
int3
xor
and
push
enter
and
jo
push
scas
mov
movsb
xchg
xchg
or
and
xchg
mov
lods
lahf
cmp
and
jnp
dec
pop
shll
or
popf
and
out
dec
repz
xchg
sbb
inc
and
and
or
lcall
ss
mov
xchg
dec
mov
and
mov
mov
push
add
in
test
aam
movsb
add
xor
jbe
dec
and
inc
aaa
int
cltd
sti
add
shll
js
sub
xchg
sarl
push
jmp
push
int
xor
pop
jl
scas
adc
popa
mov
fistps
pop
movsb
pushw
mov
iret
xchg
dec
enter
mov
dec
mov
mov
pop
insb
adc
and
mov
ret
push
mov
scas
sbb
and
call
shrb
insb
sti
test
push
mov
test
jns
or
sbb
pop
ret
repnz
ret
or
push
iret
xlat
nop
imul
sub
daa
sahf
jno
xchg
xor
dec
and
sub
dec
test
repnz
loope
xor
cmpsb
imul
and
push
push
pop
or
jo
ss
das
aam
and
mov
pusha
aad
mov
data16
jmp
mov
push
mov
pusha
hlt
push
mov
loopne
sbb
ror
popa
dec
ljmp
pop
bound
xor
test
mov
orl
sub
dec
enter
pop
mov
cmp
mov
jmp
test
mov
loopne
pop
add
and
repz
mov
ret
outsl
in
mov
mov
and
or
jno
rorb
call
out
ja
and
imul
xlat
cmp
lret
adc
cmp
add
int3
mov
sbb
cs
and
sahf
sub
fisubrs
jge
movsb
mov
push
lahf
ret
shll
sub
repnz
sub
xchg
sbb
shlb
cmp
dec
sbb
jo
sarl
push
jne
inc
or
cmp
mov
mov
insb
cmp
cmpsb
jg
int
and
lds
into
jns
lret
jecxz
or
mov
roll
bound
or
loope
cmp
lea
fcompl
mov
sbb
shlb
orl
sbb
mov
stos
push
out
mov
mov
imull
das
mov
call
sti
and
outsl
popa
mov
and
jecxz
frstor
in
cs
sub
bound
mov
es
popa
lods
std
jb
push
and
inc
xchg
jecxz
andl
movb
pop
jg
and
fsubrl
or
repz
adc
aam
cmc
aas
push
daa
or
rcr
int
sub
push
mov
dec
repz
dec
leave
mov
xchg
cmp
push
mull
aaa
addr16
xchg
sahf
mov
add
ja
movsb
lahf
inc
inc
xor
ret
sbb
xor
inc
inc
mov
lods
mov
movsl
pop
jb
and
nop
adc
inc
lock
daa
push
add
dec
je
fildl
jo
adc
xor
and
xor
sub
scas
xchg
addb
jne
scas
jbe
lret
shrb
les
test
bnd
xchg
jnp
test
nop
int3
shrb
pop
fisttpll
add
sub
lahf
in
fdivp
and
xor
popa
pop
adc
xchg
ret
push
xchg
sub
and
inc
repnz
jp
mov
xchg
mov
pushf
insl
or
scas
mov
push
jge
cmp
inc
and
xchg
les
and
clc
add
and
das
out
movsb
lea
mov
aas
xchg
jno
jo
jno
or
sub
test
mov
test
push
mov
je
jge
dec
and
aaa
add
add
aam
std
insl
jle
and
jecxz
cmp
mov
ja
lods
test
mov
push
in
popf
out
and
pop
mov
in
sbbb
les
sub
adc
fstpt
testl
pop
cmp
xchg
cmp
xchg
and
fnstenv
lds
lock
jle
rclb
cmpsb
push
jle
and
or
addr16
dec
cmp
fbstp
in
cmp
push
scas
outsb
xchg
or
fdivrl
adc
fiaddl
cs
lock
adc
and
rorb
ficomps
pop
and
add
and
dec
mov
jns
mov
mov
rcrl
xor
pushf
and
mov
decl
add
test
adc
and
and
iret
clc
and
lds
movsb
dec
aas
and
mov
adc
and
int
mov
addr16
push
gs
daa
mov
adc
lock
dec
je
icebp
mov
or
add
push
bound
pusha
std
mov
fsubrp
call
mov
fidivl
mov
pop
repnz
inc
mov
and
lret
shlb
inc
insl
inc
fmul
xor
push
scas
popa
in
sahf
xchg
testl
dec
and
pop
dec
fdiv
sub
jnp
add
loope
aam
out
fsubl
sub
push
popf
into
jb
out
in
cld
xchg
jge
stc
xor
mov
mov
inc
xor
test
or
scas
cltd
andb
imul
mov
lret
inc
xor
pop
jo
xchg
out
subb
adc
jo
fsubl
insl
out
mov
adc
push
xchg
inc
mov
cmc
and
jo
mov
xchg
cmpsl
cmp
inc
lea
shrl
mov
adc
inc
sub
daa
fsubrl
mov
scas
cwtl
jo
loope
fisttpll
shrb
pop
cltd
and
mov
clc
mov
shrl
mov
pop
cmp
scas
sub
mov
test
popa
push
fcomip
mov
add
insl
shl
mov
fiadds
cmpsb
mov
out
out
hlt
sub
cmp
sbb
and
sbb
sub
orb
lret
lcall
es
movsl
pop
fsubs
mov
out
test
ss
mov
and
icebp
in
test
ret
inc
lods
inc
shrl
or
pop
cwtl
sub
and
or
leave
mov
and
idivb
daa
cmp
mov
xchg
arpl
clc
in
das
outsb
dec
lea
lahf
fwait
xchg
loop
ds
push
and
rcr
imul
inc
inc
jecxz
mov
and
test
cmp
stos
and
add
insb
mov
in
aad
sub
cmpsl
inc
arpl
inc
push
loope
mov
inc
mov
and
lcall
popa
push
or
iret
sbb
push
lcall
loop
loope
push
sub
xchg
xor
in
cld
out
mov
jge
movsl
loope
shlb
cmp
lock
mov
js
daa
xchg
ljmp
xchg
cs
and
ficomps
jge
pop
mov
jmp
ret
push
mov
and
movsb
pop
add
scas
in
icebp
xor
jns
out
pusha
sub
lret
sub
inc
shrb
enter
dec
and
dec
imul
mov
jae
xor
cwtl
and
stos
loope
popa
sbb
std
and
jnp
pop
pop
loopne
movsb
mov
or
lahf
add
and
outsb
fwait
cltd
mov
pop
loop
dec
pop
and
mov
cltd
pop
cmpsb
and
int
cmp
movsb
or
repnz
rorl
aad
xor
mov
stc
jmp
sbb
je
pop
scas
pop
adc
cmp
cmp
shll
sbb
push
adc
pusha
xor
xchg
and
dec
jo
adc
mov
lret
movsb
imul
aam
and
cmp
or
hlt
dec
pop
mov
mov
and
mov
sarl
xchg
ja
pop
jns
cwtl
test
mov
xchg
nop
dec
mov
fs
in
rcrl
inc
sbbl
insb
xor
lds
push
mov
outsb
cltd
sti
and
push
loopne
cmp
and
mov
and
ss
and
push
mov
xor
mov
fxch
sbb
push
xchg
dec
aas
jp
loope
adc
shrb
imulb
out
and
jns
add
or
js
sub
mov
in
mov
hlt
in
ja
adc
sbb
sbb
aaa
daa
and
andb
inc
out
bound
in
test
cmp
je
sub
movq
aad
and
imul
xchg
jl
mov
movsl
ror
jbe
push
and
jns
int3
lods
sbb
pop
out
or
mov
push
add
dec
and
pop
xchg
add
imul
pusha
and
lahf
int
or
mov
in
jne
push
push
mov
push
mov
cwtl
scas
mov
sbbl
pusha
sbb
popa
jno
cmpsb
sub
add
pop
add
sub
push
mov
and
and
imul
aaa
into
ret
xorl
cltd
sub
lahf
jae
mov
int3
and
push
push
lods
mov
xor
fsubs
xlat
sbb
test
xchg
xchg
in
inc
jl
scas
pop
nop
or
add
orb
mov
and
mov
cmp
movsb
dec
push
iret
jp
popa
mov
xchg
push
imul
in
icebp
out
push
ljmp
nop
insl
shlb
notl
sub
call
outsb
jmp
pop
xchg
outsl
fisttps
jnp
loop
sbbb
jne
int
daa
call
cmpsl
push
aaa
insl
inc
out
and
xlat
scas
mov
rcll
sbb
mov
cmc
cs
std
rcrl
and
cmpsb
cltd
stos
stos
loop
and
mov
mov
xor
pushl
fcoml
push
adc
pop
repnz
test
sub
out
or
mov
into
dec
ret
mov
push
and
add
add
aaa
push
lock
dec
stc
pop
cmp
and
subl
pop
mov
mul
and
xchg
xchg
lret
stc
jmp
jle
pop
fwait
test
mov
rclb
xor
push
adc
push
cmp
loopne
movsb
shll
sbb
pop
jbe
xor
push
mov
mov
lahf
and
xchg
nop
hlt
jge
outsl
sbb
push
ret
lcall
xchg
call
and
or
or
add
fs
push
xchg
insl
pop
and
mov
jg
shr
movsb
movsb
fsub
sub
mov
xor
xchg
dec
adc
ds
and
sahf
and
stc
leave
sub
imul
insb
ljmp
loopne
jae
ja
mulb
ret
sub
loopne
push
and
cltd
jbe
movsl
mov
push
ja
add
inc
daa
clc
and
or
fchs
sub
jbe
popf
sbbl
sub
adc
rep
in
lock
xor
adc
mov
test
cmp
mov
cmp
hlt
add
insb
scas
cltd
jecxz
fdivrl
jmp
sub
mov
lock
and
mov
stos
das
test
and
cmp
jo
popf
mov
and
add
and
decl
cmp
data16
cmp
xchg
das
addr16
sarl
pop
adc
pushf
pop
popa
mov
sub
mov
mov
cmp
fcom
sbb
ret
and
and
cmc
pop
xor
and
shll
and
jno
fldcw
insl
sub
out
cmp
mov
add
xchg
loope
push
lret
cmp
or
ja
mov
pop
cmp
out
and
push
inc
inc
pop
ljmp
dec
sub
fwait
mov
leave
add
pop
mov
insb
arpl
dec
into
and
jmp
in
dec
cmp
xor
lahf
cmp
cs
cmp
ds
iret
pop
push
push
lock
cmpsb
and
xor
and
inc
shll
in
xchg
fcompl
cmp
ret
bound
mov
cmp
cmp
add
jns
iret
sub
sub
sub
test
push
scas
xor
ja
lods
daa
cmp
mov
int3
mov
jns
cmp
xchg
test
or
enter
imul
lods
mov
popf
dec
sub
js
and
pop
and
sub
shlb
mov
push
popa
nop
adc
and
pop
aas
loope
adc
add
lret
xchg
pop
and
cld
jbe
mov
inc
test
add
popa
jnp
std
push
sarl
and
cmpsb
insb
out
scas
ss
sub
push
sbb
gs
andb
or
lods
and
pop
and
nop
xor
cmp
jge
inc
iret
fucomi
push
mov
or
jnp
inc
sbb
push
xlat
popf
dec
shl
push
lods
and
jae
popa
inc
movsl
sub
popf
loop
fwait
in
xchg
or
fs
jmp
mov
xlat
fisttpll
mov
and
iretw
comiss
adcb
dec
clc
mov
mov
sub
mov
or
and
call
and
fdivl
ror
mov
cmp
enter
aaa
add
aad
outsl
packuswb
mov
mov
pop
mov
push
pop
int3
icebp
jnp
mov
mov
rcrb
xor
xchg
mov
add
jns
outsl
push
xchg
out
movsl
lods
addr16
push
test
cwtl
jno
mov
adc
movsl
and
clc
inc
ljmp
adc
pop
sbb
fcmovnb
xchg
scas
arpl
inc
mov
std
sbb
testl
popa
std
clc
movsb
mov
sti
imul
and
inc
and
aam
in
adc
push
and
xor
and
lahf
xchg
jns
movsl
add
jbe
test
mov
pop
push
dec
movsl
mov
int3
call
fcmovb
cmc
iret
aas
dec
pop
and
subl
xchg
mov
mov
arpl
iret
pop
push
movsb
xor
cltd
adc
xchg
push
jae
jbe
and
xorb
sub
dec
and
lods
adc
jne
and
cmp
xchg
and
mov
movsb
iret
jno
data16
lods
inc
push
jae
sbb
dec
std
sub
and
dec
dec
sbbl
test
and
fcmovnu
loop
inc
sub
push
stos
pop
mov
add
scas
adc
pop
xlat
xorl
xor
leave
cwtl
mov
cli
jge
sub
jne
aam
and
cmp
test
out
jp
ss
imul
mov
jb
test
mov
outsl
ss
xchg
cmp
mov
out
sbb
push
mov
aaa
xchg
jo
pop
mov
jge
and
repnz
shll
in
aaa
test
andl
and
jo
and
or
mov
push
mov
push
pop
adc
stos
movsb
and
aaa
jno
and
popa
cwtl
rorl
adc
and
lock
jnp
and
roll
xor
in
sbb
ret
mov
pop
pop
hlt
js
es
adc
aam
ss
and
mov
or
fisubs
sbb
orl
jns
outsl
test
aad
outsb
popa
xchg
aam
cmc
fcoml
adc
pushf
xorl
movsb
cli
push
mov
and
lock
outsl
adc
push
pushf
sub
cmp
or
xor
pop
cmpsb
sti
lret
das
out
fidivs
dec
shr
rcrb
lock
sbb
cwtl
repz
pop
ficompl
and
gs
popa
in
movsl
aad
sbb
pop
xchg
push
fidivl
imul
loopne
cltd
and
pop
lahf
xchg
mov
and
mov
movsb
cmp
dec
cmpsl
sti
ret
mov
fldenv
fldl
pusha
ds
jnp
das
mov
push
lret
daa
cmp
push
lods
ljmp
imul
lea
stc
aaa
mov
out
loopne
outsl
dec
push
aam
mulb
loop
xchg
inc
imul
xchg
jbe
sub
cmc
mov
movsb
cmpb
push
outsl
xchg
push
and
cli
add
and
cmp
cltd
inc
inc
mov
dec
jg
mov
gs
inc
xchg
pop
aaa
sarl
sub
leave
mov
in
mov
xchg
inc
inc
mov
sahf
and
push
and
loope
jg
and
dec
in
and
xchg
out
call
and
mull
adc
or
xchg
push
and
test
xor
ljmp
push
sub
fwait
xor
jnp
mov
mov
inc
and
push
mov
and
in
jno
mov
pop
ljmp
mov
add
mov
pop
int3
stos
cmp
push
lock
xor
test
mov
cmpsb
out
inc
mov
lds
push
xor
mov
mov
and
mov
pushf
pop
clc
popa
mov
mov
pop
stc
and
test
mov
and
mov
jge
and
sub
scas
in
aas
push
pop
nop
inc
add
mov
loopne
and
pop
fsubl
mov
data16
hlt
popa
or
pop
das
and
sbb
adc
or
xchg
adc
insb
sub
jo
xor
inc
and
cmp
incl
adc
test
add
add
sub
xchg
mov
mov
ret
ds
cmpsl
mov
int
xchg
outsl
outsb
andl
sub
lcall
data16
pop
and
repnz
sub
lock
jnp
mov
popf
xor
insb
xchg
loopne
aas
loope
mov
or
mov
fildl
adc
in
pop
ss
loop
xchg
jo
dec
rclb
xor
ss
add
inc
fisubrl
mov
ret
fmul
test
sbb
gs
jne
pushf
xor
bound
pop
or
sbb
sbb
adc
mov
push
repz
popf
daa
inc
and
roll
and
mov
sub
xchg
mov
mov
and
xor
and
inc
imul
push
xor
and
in
push
les
and
loop
sti
jmp
jbe
sub
lds
inc
lret
adc
push
inc
test
fsubl
sub
jle
outsb
gs
push
hlt
and
cmp
dec
lret
adc
nop
testl
mov
lock
jnp
cmp
mov
popa
adc
mov
and
mov
adc
adc
dec
add
cmp
inc
push
popa
jnp
mov
test
adc
push
add
and
jge
sbb
and
lds
jb
and
in
addr16
mov
cmp
or
mov
into
fdiv
mov
mov
in
mov
sub
and
xorb
or
pop
les
pop
and
xchg
cmp
lret
clc
repnz
push
sbb
push
popa
and
mov
in
inc
xchg
sarl
loope
mov
ljmp
and
dec
jno
and
out
call
add
stc
cmp
lahf
push
mov
data16
inc
mov
jo
ret
stos
mov
pop
leave
and
mov
cli
inc
and
mov
cmp
pushf
jnp
xor
push
dec
incb
and
sbbl
das
jl
pop
ljmp
mov
dec
mov
sub
lcall
addb
ret
cmc
popa
dec
shlb
push
repz
cmp
and
jecxz
fwait
and
ret
xchg
inc
mov
add
or
inc
or
pop
or
push
outsl
push
and
mov
ljmp
rorl
push
and
add
jg
sub
dec
jns
and
dec
es
in
and
adc
icebp
xchg
sub
cmpsb
and
mov
scas
stos
movsb
es
pop
insl
xchg
and
push
and
push
daa
sub
and
rorb
std
push
and
cltd
pop
sbb
int
and
dec
sti
xor
sbbb
mov
dec
pushf
inc
dec
std
imul
and
dec
and
pop
shlb
or
in
js
mov
pop
and
jg
mov
mov
or
fisttps
dec
ret
lods
jnp
outsl
cwtl
xor
fs
dec
mov
jle
push
xor
js
push
lock
mov
daa
int3
push
inc
mov
sbb
cmp
jno
dec
fidivrl
mov
add
push
stos
out
ds
pusha
cmp
repz
or
jmp
pop
push
subl
and
cmp
sahf
inc
push
stos
std
pop
aas
adcb
jno
sahf
push
mov
sbbl
and
pop
add
enter
out
lcall
sub
frstor
mov
add
dec
mov
mov
jmp
and
xchg
dec
jg,pn
xor
outsb
cmpsb
lea
js
dec
sub
cmp
out
fiaddl
hlt
iret
push
sbb
push
ljmp
inc
adc
and
je
test
aam
shrl
dec
cmp
popa
fdivl
iret
clc
ds
lock
aad
ja
mov
and
jmp
mov
sbb
add
jmp
int3
and
sub
dec
fwait
es
sub
add
adc
mov
in
jnp
test
sub
mov
or
bnd
aaa
test
inc
test
andl
cmp
and
call
jae
or
jp
push
in
sbb
call
popa
sub
outsb
inc
popf
scas
and
ss
add
and
push
xor
adc
les
mov
lods
sbb
shrl
inc
jmp
jge
popa
mov
ljmp
and
jge
lidtl
daa
or
lock
pop
or
divb
xchg
mov
sbb
lods
xor
and
mov
mov
add
and
sahf
sub
cwtl
jns
jo
enter
xor
sbb
jns
mov
push
xor
xor
adc
adc
stos
arpl
repnz
popa
push
fistl
xchg
stc
and
mov
push
and
repz
lahf
sub
and
xchg
jp
scas
ja
sbb
stc
add
cs
sub
xor
push
faddl
and
sbb
lcall
mov
mov
and
es
andl
or
testb
fisubrs
into
dec
in
cmp
and
xchg
and
test
xchg
ret
dec
std
shll
movsl
xchg
inc
out
movsb
ja
aad
ds
push
adc
loope
dec
aam
xchg
cmp
mov
call
and
fidivl
cmp
jns
scas
jl,pt
add
fimuls
ret
and
ffreep
es
mov
fidivl
sub
das
dec
leave
out
popf
xor
and
mov
sub
in
and
das
cmp
imul
cmp
add
mov
in
mov
jg
sub
cmp
test
int3
hlt
dec
mov
dec
lahf
jbe
lea
in
arpl
pushf
dec
dec
movsb
inc
sub
adc
add
dec
sarb
and
xorl
cmp
rclb
sbb
in
pop
cmp
enter
sub
insl
imul
addb
and
push
lret
xchg
push
das
pop
push
and
and
and
and
mov
or
rcll
jnp
lahf
mov
scas
adc
daa
adc
aaa
aaa
fisttps
fisubl
push
sbb
cmp
pop
xor
insl
inc
cltd
push
sub
xchg
and
sbb
loopne
popa
xchg
shrl
and
sub
jno
cmp
movsb
out
sbb
popa
sbb
mov
and
jl
dec
daa
jne
lds
and
pusha
data16
add
fists
jnp
sub
push
cmpsb
je
scas
adc
pop
dec
sub
jbe
sahf
push
adc
mov
je
pop
nop
jno
test
test
add
jns
and
pop
cmp
insl
repnz
mov
adc
jle
mov
scas
mov
sub
pop
fsubs
inc
adc
ds
mov
popa
jbe
push
and
sbb
push
inc
xchg
out
mov
mov
dec
pop
ja
popa
fdivrl
adc
popa
cmpsb
cltd
pop
mov
xor
and
shll
push
repnz
sbb
outsb
inc
mov
mov
fisttps
lahf
cs
mov
shll
leave
sti
pop
fisttps
js
cmpsl
fisttps
mov
cmp
popa
and
inc
aam
push
test
mov
fmull
daa
mov
fdivrl
xor
jmp
jecxz
daa
inc
fucomp
sub
add
sti
xchg
stc
imul
add
or
lahf
mov
dec
cmp
mov
call
push
je
xchg
test
mov
cmp
out
sbb
xchg
xor
adc
push
push
push
jg
mov
mov
cmpsb
inc
fnstenv
mov
imul
inc
and
ror
aam
mov
cwtl
bswap
pop
cld
mov
jle
out
inc
imul
push
movsb
mov
and
jecxz
dec
popa
sbb
imul
mov
in
lahf
loop
insb
or
mov
stos
nop
fldl
loope
shlb
mov
test
and
test
mov
jbe
and
or
mov
mov
jle
inc
sub
out
jg
ja
shll
sbb
inc
fnstsw
hlt
inc
push
sub
sub
lcall
cli
das
out
mov
and
sub
xchg
and
lds
and
sti
pop
add
cmpsb
loop
mov
add
push
mov
xchg
xchg
jnp
and
popf
idivb
jne
mov
and
jno
mov
dec
or
aas
and
lods
std
nop
ja
adc
and
xor
cmp
mov
imul
lock
pop
xchg
movsl
adc
xor
sbb
lods
mov
sub
push
nop
rcrb
and
imul
xor
cmp
cli
mov
movsb
lret
daa
in
int
add
pop
xchg
mov
mov
fisttpl
out
jbe
mov
imul
push
aas
and
push
pavgb
in
sub
fcomps
and
pusha
inc
inc
popa
jmp
inc
pop
mov
jae
cmp
jg
jbe
daa
mov
fwait
mov
and
nop
and
lret
sahf
fsubp
lds
test
fucomp
and
jnp
add
sub
mov
jecxz
js
pusha
xchg
push
and
fdivs
mov
jae
push
xor
sahf
push
push
cmp
andb
xchg
and
in
imul
test
imul
xlat
and
inc
and
mov
test
add
mov
bound
pusha
and
iret
cmpsb
adcb
loop
mov
sbb
out
mulb
and
jb
cmc
daa
sbb
jno
add
and
xor
jp
jo
les
incb
mov
adc
mov
out
and
inc
mov
push
or
jl
pop
cli
push
and
lahf
loope
aaa
sbb
and
rorl
mov
movsl
mov
adc
test
xchg
ficompl
sti
inc
rcrl
popa
sub
out
cmpsl
sub
and
push
push
dec
aas
in
mov
lea
pop
lahf
hlt
les
and
cli
cmp
and
mov
adc
mov
and
add
pop
mov
mov
les
ds
jo
pusha
and
sahf
fs
mov
push
out
mov
sbb
mov
inc
pusha
fwait
aad
inc
and
xor
cld
mov
push
lahf
and
lcall
js
popa
xlat
push
pushf
sub
aam
mov
rolb
and
test
icebp
pop
call
or
popa
dec
pop
pop
mov
push
inc
mov
decl
je
jle
mov
pop
loop
jo
movsb
jno
js
mov
fs
out
xchg
xor
mov
inc
and
xor
int
push
in
lds
cld
lret
push
lock
lahf
ds
push
dec
aad
xchg
add
sbb
das
push
add
daa
out
test
sub
in
and
pop
fidivl
clc
loope
loopne
add
cmp
push
mov
test
fdivr
inc
xor
push
inc
in
mov
dec
pop
and
cmp
mov
pop
and
push
fcoml
jmp
dec
cltd
aaa
and
xchg
add
or
ja
and
stc
jecxz
ljmp
fiaddl
jle
hlt
gs
es
icebp
shl
xchg
int
addr16
shlb
xor
push
fwait
movsl
cmpl
sub
xchg
fstps
cmpsb
gs
push
orl
stos
mov
scas
icebp
outsb
aam
xor
rorb
outsl
and
test
not
inc
and
pop
cli
cwtl
and
aam
push
dec
mov
shrb
and
push
jno
lods
pushw
and
lods
es
in
mov
add
and
push
mov
jns
and
sti
test
pop
pop
push
mov
lahf
and
ret
pusha
icebp
pop
jb
addl
cmp
shll
push
mov
rcrb
dec
out
enter
and
rorb
rclb
popf
loopne
and
icebp
test
lahf
movb
mov
loopne
jbe
fwait
lock
sbb
and
dec
loop
xchg
aam
and
inc
mov
mov
mov
mov
jbe
fwait
mov
push
cmp
mov
cmc
push
jg
xlat
add
in
xor
mov
adc
and
out
aam
inc
nop
and
add
loop
fsubrp
xor
frstor
inc
pop
cmp
pop
push
and
arpl
pop
add
sub
lret
jmp
or
pop
icebp
cld
shrl
ret
movb
jge
adc
push
pop
aam
pop
sbb
push
rorl
jl
sbb
cltd
xchg
mov
or
or
lcall
jg
loopne
mov
das
mov
in
add
add
lods
mulb
push
cmp
popa
outsb
movsb
pop
and
in
dec
and
cmp
lock
mov
xor
and
loopne
dec
and
mov
rcrl
mov
add
lahf
mov
int3
dec
fbstp
ja
std
and
imul
cmp
pop
test
outsb
and
or
and
out
test
ret
sub
fisubs
xor
dec
and
mov
jns
lret
dec
and
xchg
adc
xchg
test
pop
pop
and
pop
aas
mov
loopne
shr
jae
pop
lea
in
movsb
in
sub
cmpsb
adc
push
and
pop
sbb
xchg
das
ja
mov
inc
adcb
mov
imul
cmpsb
aam
aad
loopne
sub
pop
and
sbb
jae
xlat
aam
mov
int3
xchg
mov
sub
xor
and
jnp
out
sbb
dec
and
loop
mov
sbb
jns
sbb
sahf
add
push
and
add
xchg
pop
std
push
pop
and
clc
aam
and
sbb
and
shll
xor
fbld
sbb
mov
stos
dec
and
pop
cmpsl
push
and
cmp
jno
dec
xor
inc
fldt
test
cmp
push
push
adc
mov
sub
push
aad
mov
int3
les
popa
rclb
adc
jmp
and
inc
mov
mov
movsb
mov
mov
popf
cmp
scas
and
xor
cmp
lods
or
repz
and
xor
ss
hlt
rcll
push
das
pop
fidivs
pop
and
mov
fsubs
and
xchg
ljmp
jmp
cmp
adc
jle
popa
jnp
jp
imul
or
pushf
lods
push
xor
pusha
push
jl
xor
movsb
movzbl
inc
inc
aad
jecxz
mov
cmp
jbe
sbb
jne
cmpsl
hlt
mov
mov
movsb
push
sarl
sbb
mov
jne
sub
xor
add
lea
xor
jbe
add
push
push
pop
insl
pop
inc
xchg
jo
fstl
test
push
lea
movsl
pop
add
pop
xchg
jmp
push
jb
jns
mov
add
lds
int
adc
mov
mov
int3
imul
and
jbe
jmp
jno
repz
pop
and
cmp
add
addr16
push
push
ret
cmpsl
and
movsl
stc
mov
or
pop
int3
ljmp
sbb
cwtl
pop
and
test
xchg
nop
pop
and
jnp
fs
out
mov
in
mov
mov
pop
push
and
xor
and
push
xor
cmp
lret
adc
gs
and
sub
dec
imul
call
imul
mov
out
add
arpl
divb
mov
into
pop
aam
xchg
dec
cmpsb
int
aad
daa
pushf
adc
sbbb
cmp
and
mov
popf
jae
jb
daa
or
jbe
in
ret
xor
dec
movsl
adc
mov
imulb
int
adc
mov
jne
and
mov
push
push
and
jns
or
mov
mov
mov
aas
xcrypt-ecb
cmpsl
or
stos
jno
stos
clc
test
sahf
mov
imul
aaa
and
fmuls
push
mov
mov
and
daa
loopne
dec
and
arpl
hlt
jns
adc
movsb
push
add
lea
loop
loop
repnz
das
clc
jecxz
mul
int3
enter
lea
sahf
mov
out
movsb
xor
dec
jne
or
jg
xchg
cmpsl
aad
scas
pop
jle
jnp
adc
jge
pop
xchg
mov
and
mov
loope
in
loop
xchg
movsb
push
and
shll
push
imul
iret
xchg
xor
jecxz
inc
mov
sti
pop
mov
leave
jle
sub
imul
or
hlt
out
mov
shr
repnz
xchg
das
aas
lods
mov
jbe
push
and
fsubrs
sub
aam
push
mov
push
rclb
cmc
sub
divl
pop
scas
mov
and
sbb
pushf
and
hlt
xor
rcl
inc
xor
push
and
or
clc
inc
aam
loop
je
jp
cld
xor
mov
and
insb
or
and
sti
dec
inc
adc
aam
dec
aaa
sub
add
cltd
mov
in
out
aad
fiaddl
jns
sbb
popa
sbb
loopne
mov
inc
dec
xchg
out
pop
cmpsb
mov
fdivrl
mov
in
mov
inc
xlat
adc
xchg
gs
and
dec
in
mov
loope
outsl
iret
popa
movsb
inc
movsl
inc
mov
jmp
dec
pop
push
aam
xchg
out
and
and
or
and
leave
jno
fisubrs
scas
push
mov
insl
out
js
test
jo
inc
hlt
ljmp
and
and
addr16
insb
xor
divl
mov
push
add
mov
xchg
and
aaa
outsl
xchg
sarl
push
stos
notb
mov
and
mov
and
cmpb
test
int
jp
or
mov
jecxz
push
pop
sti
pushf
xchg
imul
and
scas
sbb
popa
and
cmpsb
jge
cltd
push
and
cltd
push
and
fstps
or
daa
inc
pop
inc
fstl
and
and
shr
hlt
cmpsb
aam
divb
sub
adc
sub
and
or
std
push
push
ss
pop
dec
test
int3
cmp
mov
mov
jb
je
ret
cmp
xchg
leave
mov
inc
out
scas
adc
fstpt
sub
scas
jg
or
gs
fdivrs
js
and
icebp
test
pop
imul
pop
dec
xor
jge
or
leave
ljmp
jne
mov
and
lcall
inc
mov
les
lgs
cmp
mov
jmp
movsb
pop
push
inc
fstl
and
stos
clc
icebp
shll
push
jae
int
test
jge
jl
add
pop
lret
movb
pop
and
inc
mov
repnz
call
fadd
daa
andl
push
dec
xor
xchg
and
pop
cli
adc
je
fwait
das
jle
popf
sbb
in
add
jno
jmp
and
ja
adc
or
or
jecxz
cld
mov
scas
and
popa
arpl
mov
test
and
pop
ljmp
fistps
inc
mov
test
popa
and
test
stc
jle
add
mov
mov
ss
ja
dec
and
cmc
je
and
lea
xchg
xchg
mov
push
xor
xchg
adc
inc
mov
and
das
xor
in
xor
mov
jecxz
ja
mov
mov
xchg
add
fisubs
shrl
dec
insb
scas
shlb
inc
std
lret
loopne
loop,pn
lcall
les
aad
or
cli
jecxz
inc
movsb
ja
sbb
lods
iret
add
xchg
mov
xchg
sub
and
icebp
mov
ja
fs
loopne
and
pop
xchg
cmp
sub
fwait
inc
pushf
cs
sahf
and
xchg
aas
xor
and
and
aam
lcall
jl
aaa
and
dec
cwtl
movsb
xchg
es
mov
and
adc
pop
and
jnp
jb
mov
rcl
movsl
and
or
mov
sub
pop
fs
sbb
popa
out
push
jl
mov
and
push
rorb
and
aam
movsl
in
push
sub
push
sbb
into
insb
sbbl
inc
xor
lods
and
dec
xchg
dec
je
pop
cmp
in
push
lods
lcall
push
mov
mov
pop
orl
pop
repnz
lods
in
push
jae
and
jne
subb
add
and
mov
test
sbb
xlat
jecxz
lahf
insb
push
and
inc
popf
push
arpl
jmp
xor
mov
fmul
pushf
and
test
cmc
sbb
mov
cmp
bound
in
sbb
pop
test
movsb
std
jle
pop
add
pop
xchg
lods
mov
adc
xchg
cltd
fcmovne
and
cld
xchg
add
jb
pop
pop
mov
dec
jecxz
pop
add
sahf
test
jb
pushf
push
pop
movsl
and
pop
arpl
jo
fabs
and
fstpt
ds
jb
lds
das
in
add
cmp
or
addr16
movsb
mov
aam
lods
std
mov
ljmp
cmpsb
and
jl
imul
adc
and
add
inc
sub
pop
ljmp
shll
adc
push
movsl
push
mov
bound
and
inc
cwtl
cltd
xchg
and
pop
jb
test
and
inc
and
das
fs
mov
pop
lods
xchg
in
push
mov
and
adc
xchg
mulb
xchg
pop
mov
sub
add
notl
fldenv
jle
xchg
nop
and
and
xchg
or
fisubs
and
shr
imul
in
and
popa
xor
popf
cwtl
push
jmp
xchg
push
and
es
lcall
and
and
lret
int
cmp
mov
or
xchg
pushf
leave
cwtl
not
mov
movsl
mov
xor
xor
imul
in
and
jmp
popa
insl
jne
outsb
and
or
mov
in
jle
sahf
loop
xchg
testl
fwait
push
ret
cs
lret
ljmp
xor
and
and
mov
jp
mov
in
or
push
push
add
sub
cmpsb
dec
lods
in
addr16
idiv
ds
and
adc
xchg
ja
mov
and
movswl
and
mov
cmp
and
frstpm(287
movsb
std
idivl
rclb
sub
sub
mov
inc
add
sbb
arpl
sti
pop
inc
enter
sbb
inc
mov
push
sub
push
mov
in
fcoml
jnp
push
imul
sbb
adc
dec
iret
sub
sub
and
push
dec
sbb
sub
add
xor
mov
repz
ret
xor
movsb
and
fsub
and
mov
and
xor
addb
or
jae
popf
pop
decl
and
divb
push
addb
dec
imul
sub
and
mov
test
out
push
aad
mov
and
aas
sub
sti
xor
pop
aaa
sub
das
xchg
loope
test
lods
ret
jg
outsl
mov
adc
adc
dec
test
fld
adc
dec
loopne
movsb
mov
xchg
mov
cwtl
sbb
rol
and
lret
and
decl
pop
xchg
push
lock
sub
sub
mov
orb
sub
dec
mov
aaa
jne
adc
push
ss
pop
dec
dec
sbbl
pop
jl
rcrl
pop
rol
mov
dec
sti
pusha
add
pop
int
add
jno
test
push
mov
push
mov
imul
push
cli
xor
call
outsb
mov
xor
icebp
stos
mov
cli
and
mov
inc
jae
xchg
loopne
cmp
test
bound
xor
cmp
insl
out
dec
xchg
or
adc
mov
mov
adc
dec
inc
lock
jns
sbb
pop
cltd
call
mov
sahf
pushf
andl
loope
enter
jge
jbe
arpl
aad
scas
lcallw
push
movsl
mov
or
js
pop
push
leave
faddl
inc
int
aas
out
imul
push
sub
in
movsl
mov
or
xchg
and
mov
and
or
cmpl
ret
sbb
loope
xchg
sbbl
cwtl
loop
fmul
cmp
ds
bound
jb
mov
and
pop
pop
xor
or
filds
popf
in
popa
mov
and
addr16
adc
pushf
mov
lods
movl
add
mov
ficompl
xchg
sub
xchg
dec
dec
mov
popa
jmp
lahf
scas
xor
cmp
negb
aas
adc
popa
pop
cmp
mov
ds
push
push
popa
dec
mov
cvtdq2ps
movsl
loopne
mov
cltd
and
enter
repnz
and
xor
cmp
sub
fsubrl
fwait
jmp
out
xor
xchg
test
mov
xor
outsb
cmp
and
dec
aam
repnz
xchg
mov
xor
lret
pushf
push
cmpsb
lret
sti
cmc
inc
mov
imul
push
mov
and
mov
pop
and
jae
push
mov
xorl
xchg
xor
lock
adc
jecxz
push
sub
xchg
fsubr
cmpsb
mov
int3
fsubl
cmc
lods
xchg
mov
sbb
jbe
and
imul
add
out
andb
pop
cmpsl
add
fsub
xchg
xchg
and
lds
sbb
add
cmpsb
jns
pop
imul
out
sub
add
mov
inc
in
sub
push
insl
push
lret
stos
popa
mov
sbb
pop
pop
and
js
aam
mov
inc
daa
pop
and
andb
and
mov
mov
cmpl
mov
cwtl
or
in
adc
aad
cmc
iret
dec
lcall
das
jmp
std
or
xlat
outsl
inc
stos
add
or
icebp
enter
cltd
xor
and
pop
je
js
popa
loopne
bound
mov
test
dec
xchg
inc
mov
sub
cvtpi2ps
loope
fisttpl
lret
push
mov
cmpsl
les
fwait
testb
sub
mov
fbld
shll
xor
xor
push
cs
inc
sahf
push
and
test
adc
fwait
loope
andb
sarb
lret
cmpl
jge
and
mov
fldl
loope
enter
imul
xchg
imul
mov
xor
mov
xor
jl
fwait
adc
fdivr
jge
and
lods
push
adc
in
and
inc
sbb
xor
jmp
popa
push
shr
mov
lods
mov
jge
fwait
dec
movsl
pop
mov
lods
xor
mov
jns
add
mov
dec
imulb
dec
insl
subl
jmp
aam
dec
ss
subl
xchg
cmp
jecxz
jp
movsl
pop
or
sbbl
inc
adc
negb
and
mov
test
outsl
out
fstpt
mov
xchg
xor
and
inc
ss
adc
pop
stc
ficoms
inc
gs
mov
cmp
bound
lods
xor
lock
fs
repz
mov
xor
int3
fadds
mov
in
cmp
and
cld
gs
xchg
jbe
cwtl
sahf
and
jnp
outsl
pop
sub
and
add
cmc
fsubrs
mov
add
cmp
xlat
jge
and
gs
cmp
mov
pop
adc
stos
adc
pop
and
in
sub
lds
mov
jp
push
mov
and
adc
and
add
and
out
lcall
and
sbb
mov
std
out
roll
js
test
cmp
adc
out
stos
ret
dec
loope,pt
mov
out
out
inc
pop
xchg
push
das
jl
mov
mov
pop
nop
and
push
xchg
addb
jne
lods
xchg
jg
loope
rcrb
lea
clc
push
pop
push
aaa
jg
fnstenv
and
out
fsubl
adc
adc
test
xchg
and
mov
push
and
xchg
pop
lcall
sbb
jnp
pop
add
jmp
sbbl
pop
xor
xchg
or
and
sub
fistl
xchg
inc
lods
and
ljmp
xchg
mov
rorb
jae
and
mov
mov
push
or
loope
dec
fsubl
aam
add
cld
outsb
popf
xor
std
jge
jo
and
xchg
mov
mov
aaa
loopne
popf
shll
mov
mov
xchg
dec
xor
mov
mov
push
cmp
mov
lds
dec
popa
iret
and
pop
popa
popf
and
aaa
mov
clc
out
jae
push
cmp
mov
pop
aam
sub
dec
mulb
out
adc
sub
fistpl
test
fs
xchg
daa
fucomp
and
lods
dec
test
decl
and
cmp
sbb
pop
and
add
jns
mov
pop
cmp
xchg
adc
imul
int3
int3
push
stos
mov
ljmp
mov
aaa
lahf
add
test
in
in
xchg
cmpsl
and
add
jecxz
gs
or
clc
in
mov
jb
pop
push
outsb
and
popf
lods
dec
pushf
pop
out
shlb
xor
and
inc
outsb
pop
mov
addl
inc
ds
xlat
rcl
push
lods
pusha
fstpl
pop
pop
add
in
fsubrs
and
inc
repnz
fwait
or
fildl
or
push
data16
xchg
daa
sub
and
lods
stc
mov
mov
aam
popf
daa
leave
cmp
pushf
cmp
outsb
dec
addb
mov
std
and
dec
pusha
mov
lods
dec
mov
jmp
xlat
cmpl
jae
mov
push
inc
xorl
imul
sub
or
fisttpl
popl
lea
fmuls
cli
jbe
pop
jne
shlb
insl
mov
out
popa
cmp
aad
xchg
dec
loope
rol
idivb
xlat
xchg
and
aam
movsbl
and
and
loope
xchg
jno
fidivrs
and
in
xor
push
js
mov
in
loop
aam
mov
and
out
fwait
and
ret
xchg
mov
and
xchg
push
fcompl
jmp
popf
nop
mov
inc
rcr
and
lahf
sbb
push
push
popa
cmp
dec
and
call
sub
inc
loopne
insl
jle
jmp
jp
popa
push
jge
and
decb
arpl
mov
mov
iret
or
push
and
incb
pop
mov
addl
jle
addr16
sub
iret
xor
xchg
sub
sub
aaa
push
bound
adc
lret
rol
mull
and
mov
mov
loope
cmp
mov
ret
shlb
outsb
xor
inc
and
lea
mov
movsl
insl
inc
es
das
and
sbb
jmp
xchg
ljmp
xor
mov
xchg
jae
aas
in
jecxz
cmpsl
test
fwait
add
mov
mov
and
scas
lret
arpl
fbld
stc
pushf
pop
jle
adc
lods
pop
inc
in
jp
mulb
mov
test
test
imul
dec
push
jns
mov
mov
inc
stc
mov
nop
jl
cld
movsl
movsb
lods
sbb
pop
mov
sbb
jmp
and
xor
sub
jecxz
movsb
out
call
stos
loope
adc
or
xor
and
lcall
cmpsb
imul
and
outsb
or
rcr
push
or
ljmp
add
push
pop
and
or
pop
and
push
imul
inc
pop
gs
jbe
mov
mov
fdivs
popf
aaa
movsb
push
scas
sbbl
icebp
and
dec
push
inc
lods
push
and
xor
push
jle
sub
ret
aas
sbb
mov
imul
and
push
shll
insl
fbld
nop
push
jl
mov
inc
and
fs
fsubr
mov
scas
adc
sub
push
cmc
aad
mov
ret
repnz
stos
cmp
cmpsb
and
ret
xchg
xorl
push
out
jmp
push
icebp
adc
and
adc
push
and
or
and
mov
int
cmc
pushf
and
jnp
sbb
pop
and
and
bound
stos
mov
jmp
pop
xadd
and
fldt
and
das
xchg
add
inc
lock
popa
fidivl
add
push
in
xchg
inc
arpl
xor
and
ficompl
cmpsl
adc
scas
dec
inc
xor
add
in
mov
dec
imul
arpl
lahf
adc
mov
push
and
mov
in
lahf
fmulp
and
push
out
mov
clc
sbb
pop
dec
dec
sti
sbb
shlb
push
adc
jo
or
sbb
cmp
imul
jae
pop
popf
mov
dec
mov
and
ds
sbb
xor
outsl
aaa
mov
mov
push
mov
mov
inc
mov
and
sti
test
cmp
jbe
in
lods
loop
hlt
popf
sbb
mov
push
jecxz
cmp
andl
xchg
pop
and
mov
orl
dec
sub
xor
cmovge
popa
and
push
into
ja
add
mov
jg
jns
movsb
pop
mov
sub
xlat
add
pop
jp
lods
stc
mov
mov
mov
sti
dec
push
movsb
sub
cmp
pop
and
lahf
ljmp
scas
and
mov
cmpsb
pop
sahf
xchg
inc
cwtl
sbb
jl
ss
mov
sub
pop
cmp
shr
and
add
out
adc
push
pop
mov
push
test
sbb
jb
nop
pop
mov
cmpb
mov
dec
outsb
subb
pop
sti
xchg
or
and
fcmove
and
test
xchg
mov
loope
lret
and
cwtl
lds
cmp
test
adc
out
iret
xor
mov
fisttpl
rcll
add
and
mov
mov
mov
mov
mov
ret
int
mov
xchg
and
mov
out
mov
jb
inc
mov
movsb
push
outsb
and
push
and
and
out
mov
xor
and
cmpl
mov
jl
sub
and
fidivrl
cmp
and
les
pop
and
loope
xchg
xchg
adc
and
sbb
mov
mov
dec
mov
jbe
sub
xchg
and
push
shrb
clc
mov
out
jb
bound
sti
sahf
mov
fdivrs
gs
pop
xchg
movsl
cmpsb
sbb
out
push
jge
aaa
test
rcll
fildll
mov
inc
cmp
in
pop
imul
movsb
fldt
mov
imull
jb
and
movsl
je
ret
inc
movsb
sub
test
popa
adcb
and
mov
dec
and
push
aas
and
scas
js
das
imul
ljmp
ja
and
adc
movsb
push
push
pusha
adc
gs
lds
mov
mov
mov
arpl
and
xor
add
scas
fmull
adc
ret
sti
or
mov
test
test
out
sub
jmp
jno
or
test
mov
mov
mov
mov
add
jl
and
sbb
adc
xchg
pop
xor
cwtl
add
incb
cli
addl
int3
xor
xchg
or
es
sub
sbb
jle
mov
pop
or
ret
out
nop
ds
insl
xchg
movsl
movsb
dec
shrl
pop
repnz
cmpl
and
pop
imul
and
jge
xchg
adc
adc
inc
or
popf
ficoml
pop
shl
jg
add
shlb
xor
fdivrl
sub
shll
imul
out
and
sbb
push
cmp
scas
cwtl
add
sub
in
test
mov
or
mov
popa
movsl
in
push
and
push
inc
stos
cmp
pop
sbb
dec
adc
mov
cmpl
loopne
inc
xor
loope
sbb
push
and
sbb
adc
xchg
xchg
jno
sub
mov
adc
xchg
nop
dec
je
and
testl
jmp
mov
arpl
insl
rcrb
push
xor
fldt
in
pop
orb
inc
push
in
add
lahf
mov
sbb
and
arpl
adc
xchg
add
nop
sub
mov
mov
iret
jmp
fisttpl
clc
mov
inc
lods
jp
out
lret
lds
push
filds
xchg
mov
stc
jg
push
and
push
lret
in
fwait
ljmp
inc
push
subb
push
shll
push
loope
push
jnp
test
cmp
adc
arpl
push
or
gs
xor
push
cmp
les
cmp
jae
rcll
loopne
adc
mov
mov
mov
or
xchg
and
xorl
jge
add
arpl
sub
rorl
and
inc
fs
fnsave
cs
loope
adc
popf
xlat
pop
and
jo
shlb
cld
mov
clc
and
addb
pushf
rclb
daa
out
sti
and
and
and
push
xchg
jmp
cmc
mov
sar
cmpsl
cltd
fcmovnb
pop
sbb
iret
jae
mov
xor
mov
and
mov
sbb
lret
into
je
popf
insl
jp
xchg
ja
xabort
mov
ss
jnp
out
add
mov
jne
push
mov
and
repnz
into
scas
push
xor
mov
sub
xchg
int
and
push
add
adcb
popa
test
dec
xchg
rcrb
out
sub
pop
xchg
jne
jo
push
mov
mov
cld
or
and
push
dec
adcb
inc
shll
lock
mov
sbb
popf
xor
pop
aam
sub
popa
stos
and
and
push
add
push
test
xchg
scas
xchg
and
jb
out
and
divl
and
pop
hlt
add
imul
fistpll
outsl
not
and
dec
jb
dec
xor
addl
testb
lcall
cwtl
and
in
outsl
mov
xchg
faddl
movsb
negl
xchg
cmp
mov
enter
adc
pop
lret
xor
and
push
mov
lahf
push
pushf
rolb
scas
xchg
popa
test
lods
aaa
sub
push
hlt
nop
dec
repz
cmp
fwait
stos
mov
sub
cld
out
or
push
loope
je
bound
inc
mov
mov
repz
xor
fcomps
pop
mov
cmp
stos
loope
loopne
imul
cmp
lret
dec
and
adc
jo
and
push
mov
and
lcall
jge
movsl
adc
sbb
fcoms
push
lret
mov
rol
jmp
std
mov
into
outsb
push
xor
xchg
push
and
jmp
ret
repnz
out
loop
das
icebp
in
lcall
in
xor
jge
mov
dec
and
insb
out
push
testl
xor
inc
andb
push
mov
leave
enter
cmc
adc
mov
movsb
ja
outsb
sbb
pop
and
stos
add
adc
lret
lds
and
xchg
enter
scas
cmp
nop
test
pop
mov
aad
stos
fs
and
repz
sahf
xchg
and
xor
and
jae
scas
mov
js
and
pop
int3
outsl
and
xor
mov
sbb
inc
mov
aam
add
mov
jge
adc
out
sahf
stos
inc
and
sbb
shlb
rcl
pop
cmp
jne
and
pop
jg
sub
cmpsl
xlat
loopne
inc
and
test
frndint
inc
add
jmp
mov
and
xlat
iret
mov
out
out
and
jae
xchg
and
mov
inc
cmp
cmpsl
dec
movsl
add
loope
dec
ds
fcoms
jns
vsqrtps
es
adc
imul
sbb
aaa
gs
and
and
rorl
aas
shlb
push
pop
incb
out
pop
xor
mov
mov
cld
mov
add
or
inc
mov
xchg
sbbb
and
xchg
pop
gs
shlb
or
dec
arpl
and
jbe
clc
dec
mov
call
arpl
inc
push
push
in
int3
and
cmp
lahf
and
rcll
sub
xchg
cld
nop
rol
push
out
insl
test
shll
and
jnp
push
cmpb
and
nop
insl
inc
daa
mov
mov
aad
sub
xchg
fsubs
test
xor
pop
cmp
mov
rcrb
bound
jp
lea
popf
daa
insl
das
cmp
test
mov
lcall
mov
adc
adc
leave
shll
repz
and
sub
dec
sbb
and
cmp
call
push
ja
add
cli
sub
or
fbld
jno
inc
inc
and
lock
fcomps
mov
dec
insl
inc
repz
int
pusha
sbb
lret
fwait
lea
scas
pop
sbb
subb
mov
out
mov
cmpsb
adc
dec
lock
xchg
sub
adc
jnp
repnz
mov
add
dec
mov
call
cmp
fwait
xor
cltd
add
sub
pop
sbb
fdivrs
stos
mov
jnp
inc
fisubl
mov
mov
jns
cmpsl
cmp
shlb
xor
popf
mov
lods
ret
sbb
in
pop
je
xor
and
cltd
or
pop
rcll
lods
out
aas
lcall
fnstcw
mov
cli
and
xchg
nop
lcall
adc
sub
cld
pop
lahf
mov
xlat
xchg
and
mov
and
jo
in
jg
sub
inc
ss
nop
sysexit
scas
fldenv
push
add
lahf
gs
aas
outsb
mov
pushf
popa
push
in
cli
xor
xorl
or
adc
cmpb
imul
in
and
call
or
fucomp
xchg
cltd
push
push
and
mov
lock
jl
stos
dec
pop
push
and
test
divl
sbb
cmp
xabort
sub
cmpl
cmp
out
jle
pop
lock
push
scas
imul
push
mov
mov
sbb
sub
xor
aas
ror
adc
or
rclb
out
es
std
ret
xor
stos
fucomp
adc
or
push
mov
loop
lret
sbb
insb
shll
add
sub
mov
jbe
inc
fdivrl
jne
xlat
shll
mov
imul
sbb
dec
adc
test
enter
mov
and
sub
cmc
sbb
sub
and
cmp
in
add
mov
mov
and
and
inc
out
andb
dec
jae
shll
fistps
xor
sbb
fstpl
mov
aad
dec
push
lret
inc
xchg
ljmp
xchg
pop
scas
mov
xchg
jne
mov
movsl
xchg
cmc
in
inc
push
rcrb
lret
push
xor
mull
bound
mov
jno
out
sbb
mov
jns
mov
dec
sbb
cmpsl
popa
push
push
push
lahf
push
mov
mov
sti
xchg
push
int3
mov
enter
push
pushf
pop
xchg
jne
mov
aad
add
mov
and
fs
mov
orb
rclb
not
daa
and
xor
pop
push
in
or
mov
cmpsb
and
adc
repnz
shr
mov
inc
mov
sub
test
xor
lcall
push
xor
andb
repnz
jg
push
arpl
in
outsl
lahf
push
out
iret
jo
and
push
addr16
sub
nop
arpl
xor
xor
jo
lcall
scas
xchg
mov
and
dec
sub
stc
cmpsl
sub
shll
pop
stos
rcr
sub
and
mov
mov
push
into
pop
xchg
aam
shll
adc
xchg
imul
sbb
fdivl
push
push
cmp
cmpsb
mov
xchg
scas
jmp
lea
cmpsb
dec
sbb
adc
clc
into
xchg
and
and
sub
and
das
imul
mov
loop
js
cs
int3
ljmp
aad
pop
push
lcall
jb
lock
xchg
push
fbld
negb
adc
and
add
insb
lret
mov
cmc
aam
cltd
push
fnstsw
popa
shrl
jp
cmp
pop
jbe
sub
rol
mov
daa
mov
out
stos
inc
push
lahf
push
movsb
and
shlb
dec
cmp
sti
clc
dec
fisttpll
fucomi
sbb
scas
gs
repnz
inc
mov
push
and
inc
cwtl
loope
std
jne
sbb
stos
xchg
pop
and
addps
sbb
aas
xlat
mull
outsb
pop
pushf
mov
rcrb
cmp
mov
and
xchg
jbe
call
dec
dec
in
jecxz
add
rolb
enter
or
lods
idivb
and
stos
pop
sti
scas
pop
mov
cmp
pop
imul
into
push
mov
push
jno
cltd
subl
rcrb
xor
sbb
jl
sub
mov
popa
cltd
stc
jns
push
outsb
adc
cs
cmp
sub
ret
mov
test
and
xchg
push
and
xchg
fsubr
mov
xchg
je
and
jecxz
in
mov
or
xor
lods
and
inc
jmp
and
mov
sub
jg
xchg
mov
push
xchg
and
fimull
jns
das
popf
inc
jg
test
and
mov
fnstenv
daa
mov
call
js
fcomps
sbb
xor
aaa
sub
jp
jle
mov
cmp
scas
dec
mov
mov
in
imul
pop
ret
in
in
gs
dec
push
imul
lock
scas
aaa
addr16
popf
push
mov
dec
jg
pop
outsl
and
xor
lret
add
and
add
scas
push
pop
mov
push
push
jle
lea
mov
sbb
cmp
cld
jmp
lods
and
hlt
and
daa
int
mov
or
test
test
pop
lret
into
mov
int
pop
pop
aad
cmpsb
test
xchg
or
dec
mov
dec
xchg
lods
outsb
and
add
adc
push
mov
and
and
jmp
enter
push
and
push
pop
shlb
adc
rol
ja
xchg
add
mov
and
push
in
and
cmc
es
sahf
int3
and
pop
aaa
std
jp
jbe
mov
cmp
subl
aas
enter
popf
sbb
pop
lods
test
cltd
pop
das
popf
mov
aad
jo
jns
and
scas
movsb
sub
dec
movsl
pop
test
push
push
sub
in
aaa
add
loope
mul
scas
jno
adc
jnp
add
jecxz
orb
fwait
bound
push
jg
add
adc
xchg
add
dec
cmp
cmp
rolb
test
pop
xchg
or
pop
imul
pop
movsb
pop
xchg
push
out
jmp
xchg
push
jnp
loop
mov
push
cmp
lret
mov
jl
adc
fidivrl
dec
jmp
xor
cld
mov
stos
and
addb
lock
adc
and
js
sbb
lret
mov
push
fldl
mov
addr16
dec
ss
fsubrl
lret
adc
cmpsl
or
sub
jns
pop
inc
mov
cmp
setne
divb
cmc
dec
and
jp
fbstp
mov
jl
popa
test
mov
cmp
js
or
nop
inc
rep
imul
add
outsb
push
mov
ret
xor
call
inc
fidivrl
push
scas
jno
nop
test
dec
jnp
xor
aas
dec
sbb
pop
push
and
fwait
mov
add
scas
and
scas
mov
subb
or
and
pop
push
dec
ret
mov
sub
andb
cltd
mov
dec
xor
dec
out
fdivl
notl
rol
xchg
in
test
mov
adc
outsl
js,pt
or
xorb
push
pop
dec
mov
mov
mov
ds
xor
scas
jno
scas
add
mov
mulb
add
imul
cmpsl
mov
cmpb
lret
clc
jle
sbb
dec
adc
orb
jbe
and
popf
std
pop
push
push
and
sub
adc
mov
lcall
cmp
in
xchg
and
lock
and
sbb
pop
in
pop
inc
and
mov
ds
ret
scas
dec
das
dec
testl
in
lock
mov
ret
ret
mov
jge
fstpt
sbb
inc
jg
jne
pop
mov
test
fisttpll
jle
pushf
call
inc
arpl
and
loop
add
in
adcb
and
stc
pop
sbb
imul
push
popa
out
mov
xchg
xchg
pop
push
inc
loope
fsubrl
dec
xor
scas
mov
sbb
or
cltd
into
jno
xor
dec
lock
in
addr16
xor
mov
lcall
mov
repz
or
shll
dec
dec
jle
scas
jo
inc
mov
mov
and
mov
inc
movsb
pop
xchg
inc
mov
dec
cmpsl
mov
outsb
out
jne
gs
inc
push
add
pushf
and
sahf
scas
in
aad
movsb
and
fucomp
lret
movsl
xchg
int
xor
pop
sub
popa
or
fsubs
mov
mov
cmpsb
cmp
mulb
sub
addb
fwait
push
jecxz
in
and
sub
and
fistps
push
xchg
and
test
gs
icebp
and
sub
bound
out
dec
push
mov
jae
and
jne
rorb
and
gs
inc
sub
mov
cmp
test
cmpsb
sbbb
popa
sub
vandps
and
mov
inc
mov
and
mov
push
mov
sarl
pop
jo
xor
loope
loope
adc
dec
and
jno
and
cmp
inc
imull
fwait
and
add
and
mov
mov
xchg
aaa
test
adc
cmp
adc
insl
popa
inc
sub
jnp
sbb
xchg
call
ds
pop
mov
or
pop
and
daa
inc
and
dec
ja
add
jae
fucomp
cli
lods
pop
lcall
and
jp
push
rorl
and
in
imulb
sbbb
mov
inc
push
rclb
mov
in
popf
fildll
insb
add
or
sub
pop
cltd
mov
into
aam
ffree
enter
repz
jbe
mov
lahf
jb
dec
sbb
mov
mov
jno
sub
clc
ss
popa
mov
xor
inc
cli
out
mov
shlb
lahf
daa
insl
pop
jl
and
pop
jne
pusha
shlb
movsb
ret
pop
xchg
xchg
arpl
and
sub
xchg
and
jae
add
jmp
sbb
xor
je
mov
outsb
xor
sbb
jne
and
mov
shll
ficoms
addb
and
mov
and
idivl
dec
fsubrs
sub
push
lea
lods
push
andl
jp
sub
sub
out
int
popa
xlat
push
xor
mov
imul
add
inc
and
fdivp
ds
in
and
sbb
mov
mov
mov
jno
dec
pushf
and
push
adc
aas
mov
mov
pop
leave
push
inc
and
and
andb
jo
mov
lret
mov
mov
mov
js
sbb
mov
shlb
or
cmpsl
das
inc
adc
or
rcr
mov
inc
int3
jne
sbb
mov
cmp
push
mov
mov
dec
mov
mov
call
cmp
pop
cwtl
das
cmpsb
data16
and
or
and
test
insb
inc
bound
addb
das
pop
ds
and
jle
add
fmuls
lds
jmp
or
aas
ljmp
pop
mov
popf
pop
and
xchg
je
dec
sub
repz
stos
arpl
xchg
dec
cmp
lret
adc
ror
orb
pop
pop
repz
pusha
sub
scas
mov
stos
inc
jbe
mov
mov
js
outsl
push
mov
and
lds
enter
je
sub
ss
cmpb
les
xor
and
out
arpl
ds
ret
inc
jnp
lcall
lret
cld
xorl
sub
mov
sarl
fxam
fwait
pop
jg
cs
fwait
pop
insb
dec
mov
mov
xchg
mov
sub
cmpsb
ja
add
pusha
sub
stc
ficoml
es
push
and
add
xlat
fnsave
mov
sub
popa
jl
lea
pop
movsb
sarb
adc
xor
subb
shl
rorb
xchg
rolb
shll
fidivrs
adc
arpl
jmp
jns
pop
dec
je
xchg
and
dec
lret
and
adc
jge
int3
fwait
and
andl
adc
loope
and
mov
pushf
leave
jno
adc
xchg
inc
les
fs
adc
test
cli
xchg
out
loope
mov
dec
fisubl
and
movsb
in
lret
in
push
mov
and
loope
enter
dec
dec
popa
mov
jb
sbb
and
sbb
jo
lods
sub
and
lahf
test
mov
add
pop
arpl
frstor
xchg
in
mov
call
mov
popf
nop
les
xchg
sbb
mov
inc
and
popa
xor
dec
imul
mov
and
int
ret
int3
cmp
pop
arpl
mov
inc
pop
sbb
mov
orl
insb
and
movsb
adc
inc
and
sti
repz
push
fs
insb
lret
fldenv
aas
dec
mov
mov
push
bound
inc
xchg
lods
das
pop
cmp
adc
stos
pop
fwait
cmp
jge
in
mov
shrb
shll
adc
pop
popa
out
mov
sub
jg
lcall
gs
js
fwait
sbb
imul
movsl
and
arpl
add
sbb
adc
stos
mov
jne
cmp
enter
bound
loop
arpl
jo
imul
mov
inc
dec
hlt
xorb
xchg
xchg
push
in
daa
cwtl
push
gs
into
xor
mov
cmpsl
movsb
xchg
jno
js
arpl
add
and
or
and
sbb
add
and
insb
dec
in
test
aaa
jmp
arpl
test
cmp
push
outsl
mov
cs
push
cmp
cmpsb
xchg
jp
push
fistpll
pop
lahf
xor
sbb
inc
push
jle
das
sub
int
xor
xchg
or
int3
xchg
ret
icebp
jmp
and
out
mov
xor
jmp
and
mov
inc
mov
xchg
and
fs
cmp
xchg
and
jge
lcall
adc
lahf
pop
ret
test
cmp
fadds
push
test
inc
dec
aad
lods
sub
ficoml
fisttps
push
out
pop
sti
mov
cmpl
addr16
mov
rcrb
fwait
inc
dec
pop
mov
add
jp
and
jl
cmp
inc
mov
and
jecxz
sub
mov
and
mov
mov
xchg
lds
movsl
and
fsub
fwait
sbb
out
and
lea
and
test
and
in
or
into
mulb
loop
push
lea
fidivs
or
cmc
frstor
popa
cmp
les
and
std
aas
jp
xlat
mov
xchg
mov
xor
or
fiaddl
daa
ss
shll
push
push
and
stos
sbb
xor
jae
out
and
push
std
adc
fimuls
sub
and
fbld
shr
movsb
stc
mov
pop
fwait
jmp
and
jo
push
xchg
inc
cld
and
adc
cwtl
jmp
or
jge
cmp
fcomps
nop
loopne
lret
cmc
cmp
mov
sub
int
adcl
and
cmp
cmpsb
xor
cmp
loopne
mov
and
aaa
dec
sub
sbb
and
mov
pushf
inc
test
dec
and
and
in
orl
cmc
test
xor
pop
mov
mov
sbb
lahf
mov
incb
add
cmp
mov
pop
clc
and
popf
push
jmp
pop
add
dec
inc
testl
push
adc
sti
nop
and
and
fxch
mov
xchg
sbb
ds
inc
mov
pushf
call
jp
movsb
enter
dec
push
insl
push
mov
mov
adcb
bound
sub
and
push
jmp
cmp
andl
fdivr
rcr
and
hlt
xchg
lahf
shr
lock
popf
or
and
dec
xchg
mov
and
jl
outsb
jb
mov
push
int3
add
loope
cmp
or
stc
out
gs
add
loop
hlt
mov
test
jno
aaa
push
ja
inc
loop
imul
push
iret
aas
leave
js
push
push
lret
mov
inc
in
push
dec
cmp
scas
fwait
stc
and
in
lret
cmpsl
jge
test
iret
mov
popa
js
mov
xchg
mov
and
int
xchg
xor
stos
push
out
bound
jbe
roll
xchg
dec
push
fnstenv
ds
lret
mov
outsb
in
mov
dec
fsubl
lods
cmpsl
test
shlb
clc
xchg
and
sub
xor
mov
cmp
int
ja
pop
and
cmpl
movsb
mov
sub
sahf
sbb
lods
mov
leave
mov
inc
pop
dec
insl
mov
inc
loope
test
pop
xchg
in
push
cmp
test
and
adc
and
mov
and
das
in
mov
pop
sub
ljmp
jge
imul
xor
jg
mov
mov
in
or
jl
shll
call
rcrb
and
pop
ds
test
lahf
and
cmpsb
sti
cwtl
pop
and
cmp
and
mov
ret
lods
and
mov
jb
dec
add
jle
push
rcll
inc
enter
xor
xchg
mov
add
iret
dec
popf
sub
mov
ss
xlat
lcall
mov
and
insb
xchg
sbb
cmc
enter
jl
push
push
js
sbb
adc
pop
movsb
mov
adcl
sub
jno
and
or
mov
cmp
ret
hlt
mov
out
rol
and
ficomps
pusha
cmpsl
and
addr16
push
cwtl
xchg
pop
or
dec
mov
and
pop
xor
push
inc
insl
jae
dec
and
and
movsb
mov
or
sub
sub
pop
mov
push
adc
and
test
adc
movsb
sbb
stc
andb
aas
inc
int
std
pop
dec
loope
mov
jg
insl
addl
adc
xor
sub
or
int3
inc
jae
lcall
jecxz
repnz
movsb
and
adcl
mov
in
mov
cmpsl
push
dec
cld
or
shr
enter
mov
imul
mov
and
test
icebp
xor
adc
inc
pop
mov
lea
aam
std
dec
fwait
lods
shrd
pop
out
dec
mov
dec
ja,pn
test
inc
imul
xor
push
cmp
in
mov
and
adc
and
popa
stos
xor
call
outsb
add
loop
inc
mov
frstor
cmc
bound
jbe
and
fcmovnb
divb
push
cmpsl
add
sbb
and
mov
xor
shrl
fcoms
and
outsb
dec
sub
xor
enter
std
mov
lret
adc
adc
and
sub
jmp
and
dec
adc
and
inc
xor
mov
sbb
jmp
scas
out
pop
jb
mov
xor
xor
out
add
cmp
xor
inc
mov
iret
and
cmp
and
pushf
insl
jp
jl
adc
ss
sbb
and
icebp
xchg
and
popf
cmpb
mov
xchg
rorb
mov
mov
xchg
dec
cltd
push
mov
movsb
dec
fists
pop
cmpsl
fisubl
cmp
xchg
push
daa
sbb
mov
shll
int3
cmp
fldcw
out
jle
mov
and
mov
aaa
rorb
dec
xchg
in
push
add
xchg
ds
mov
push
jnp
sub
iret
adc
and
or
push
adc
push
gs
lea
sub
cmp
pop
mov
jo
and
es
repz
mov
movsb
das
gs
mov
sub
fbld
inc
shl
int3
fimull
and
rclb
sti
add
adc
jmp
and
movsb
xchg
push
dec
popf
sub
push
sub
add
ds
lds
sub
and
lods
xchg
movsl
mov
int3
fcomip
dec
xlat
mov
and
sbb
push
into
mov
test
or
cmp
push
icebp
mov
repnz
pop
and
test
dec
and
cli
shll
cmp
imul
lods
cmp
push
and
xor
or
push
ljmp
rclb
popa
dec
lds
data16
insl
sbb
mov
and
xchg
xor
mov
ret
add
and
cld
adc
movsb
inc
pop
xor
push
sub
inc
xor
movsl
cld
mov
bound
push
iret
inc
mov
and
into
mov
sub
in
in
push
mov
loop
rcl
addl
xor
xchg
inc
cmp
mov
and
xchg
gs
and
adc
sbb
xchg
push
mov
jecxz,pn
and
lds
cmp
mov
jge
icebp
and
or
js
and
bound
push
lods
sbb
mov
add
mov
cli
and
gs
adc
scas
sbb
into
jp
icebp
and
and
js
sub
jo
dec
mov
jns
pop
sbb
out
sahf
push
ss
pop
adc
cmp
shrb
cltd
dec
and
iret
scas
imull
pop
xchg
and
push
jge
repz
in
jp
pop
jbe
incl
mov
das
fisubs
decb
xorb
dec
sub
jbe
test
push
push
nop
mov
movsb
andb
inc
cmp
push
push
das
adc
and
rclb
lahf
shlb
jns
jns
inc
fstpt
mov
sbb
cltd
outsb
and
nop
or
mov
jnp
mov
sub
dec
push
js
rcr
call
ret
pextrw
inc
xor
adc
mov
imul
jae
rcr
mov
sub
inc
and
inc
inc
jp
push
dec
int3
fnstcw
xor
adc
and
out
add
in
inc
mov
mov
mov
aad
inc
pop
push
pop
into
push
loop
jecxz
loopne
lret
mov
cld
popa
lock
dec
xchg
mov
call
test
daa
inc
sahf
nop
sub
xchg
xlat
popa
je,pn
jb
and
sbb
and
insl
push
adc
ffree
in
sub
cli
fistl
and
mov
and
sub
popa
inc
push
xchg
mov
fimuls
lahf
jmp
movsb
mov
das
pop
jl
and
out
and
mov
adc
sub
outsb
xchg
movsb
test
cwtl
les
push
adc
jb
cmp
xor
xchg
mov
leave
lcall
jecxz
loopne
and
mov
jle
and
pop
mov
lcall
rcrb
inc
and
movsl
lods
sbb
popa
dec
push
out
je
xor
xor
jp
inc
xor
sub
push
inc
aaa
mov
pushf
pop
scas
mulb
and
push
dec
cmp
sub
andb
or
lods
xchg
mov
imul
xor
jmp
sar
nop
sbb
jno
push
and
pusha
lds
cwtl
xor
shrb
fistpl
out
inc
push
movsl
dec
sub
inc
popa
mov
dec
loopne
and
and
pushf
daa
mov
lret
push
out
das
dec
sbb
and
xchg
out
mov
inc
and
mov
rorb
dec
je
movsb
mov
pop
lods
jle
pop
push
gs
outsb
repz
lret
and
insl
dec
test
or
iret
testl
xor
fdivp
adc
cmpsl
sub
les
nop
sbb
mov
repz
xchg
cmp
mov
and
mov
fsubrp
lds
mov
lock
in
popf
fcoml
imul
popa
dec
test
test
dec
aas
jle
mov
insl
add
sub
sbb
mov
dec
outsl
roll
sub
and
insb
pusha
and
dec
push
sahf
and
xor
push
or
add
in
ret
mov
xchg
or
dec
jg
insl
or
out
popa
lods
movsl
fstl
push
xor
dec
jae
divl
loope
xchg
pop
test
lods
xchg
cld
mov
mov
int3
cmpb
addr16
sbb
sub
and
aas
mov
adc
and
insb
lret
mov
xor
outsl
push
add
mov
mov
in
repz
loop
or
cmpsb
jecxz
cmpsl
and
add
jecxz
into
movsl
clc
rclb
add
notb
push
rcll
push
jge
or
or
insl
jecxz
test
sbbl
adc
dec
xorb
inc
mov
jns
dec
lock
addl
scas
add
imul
lahf
mov
mov
es
push
pop
pop
mov
sub
fdivs
js
fisttpll
and
mov
shrl
insb
sub
push
outsl
mul
in
inc
and
nop
jp
ss
sbb
imul
popa
je
pushf
mov
mov
dec
add
push
out
adc
ficoml
out
pop
lahf
int3
jp
lods
lret
mov
xchg
and
es
and
xor
pop
adcl
out
mov
pop
testl
sbb
and
mov
into
adc
dec
mov
mov
jns
and
pop
rcrl
xor
inc
movsb
data16
cmp
stos
movsb
fnstcw
loopne
pop
xor
cmpsb
pcmpeqd
xor
add
inc
andb
push
in
repnz
fs
cmc
adc
dec
mov
jl
sbb
inc
jp
jmp
pushf
and
into
xchg
movsb
jmp
cli
cmpb
ja
insl
lahf
cmpsb
jns
or
xor
pop
popa
and
sbbb
sbb
insl
push
and
mov
out
xchg
mov
stos
push
addr16
stc
popa
mov
ds
mov
cmpsb
lret
inc
and
sbb
xor
and
in
push
inc
fsubl
adc
and
push
cmc
nop
mov
dec
cmpsl
jns
push
and
pop
jne
cmp
fwait
mov
addl
and
mov
in
inc
mov
jge
insl
xor
shll
adc
inc
movsb
popa
lea
mov
mov
popa
pop
mov
and
inc
add
rcll
testl
outsb
and
jae
inc
and
xchg
iret
mov
and
ljmp
and
or
mov
pop
and
and
jmp
arpl
lret
daa
sarl
notb
or
pop
xor
out
iret
mov
pop
sub
mov
call
and
jae
mov
stos
mov
xchg
mov
shrl
pop
inc
or
sub
push
adcl
bound
arpl
sbb
mov
jl
cmp
and
ljmp
aaa
add
inc
cmp
and
fcomps
and
mov
cltd
add
dec
fidivrl
xchg
scas
and
ds
mov
in
hlt
fildl
jae
inc
mov
arpl
mov
and
or
sbbl
mov
hlt
fdiv
popa
mov
mov
lahf
push
scas
xchg
and
test
enter
xor
mov
popa
adc
and
stc
push
inc
inc
bound
jns
outsb
xchg
jno
mov
and
mov
jae
xchg
pop
and
mov
lcall
cmp
insb
inc
and
sar
inc
and
mov
sub
cmp
sbb
mov
aaa
fldl
inc
out
pop
loopne
add
and
mov
ja
pop
and
add
or
sub
xor
adc
das
or
jge
and
dec
cltd
mov
mov
push
cmpsb
jg
insl
inc
and
movsb
and
mov
mov
add
xor
aam
jecxz
sbb
xchg
and
call
stos
mov
leave
in
stc
shll
dec
jmp
xor
jmp
push
fisttps
dec
or
into
das
cmp
push
xor
xor
loop
jbe
and
cmpsl
mov
mov
fwait
movsl
out
leave
dec
mov
add
xchg
lds
xchg
or
pop
push
inc
lods
jne
js
and
push
mov
fisubrl
mov
cwtl
sub
push
cmp
jle
daa
cld
mov
xchg
dec
cmpsl
sti
loop
mull
out
jp
push
mov
jg
xchg
mov
stos
push
or
andl
sahf
sbbl
adc
testb
andb
mov
jo
and
mov
subl
mov
lahf
xchg
sub
push
imul
sub
pop
xor
in
je
xlat
ja
mov
dec
mov
test
pop
test
dec
iret
xchg
push
xor
inc
nop
mov
outsl
adc
dec
and
sbb
sub
xor
pop
lds
popf
or
jmp
xor
outsb
and
mov
lea
sar
gs
and
mov
test
lds
test
push
movsl
pop
xor
fs
and
push
sub
cmp
mov
push
es
lea
cmp
rcrl
pop
inc
loopne
and
inc
push
jle
push
and
pop
adc
cmc
fidivs
js
sarl
xchg
xor
inc
pop
dec
fsts
mov
in
mov
push
push
sub
mov
aad
and
xlat
inc
stos
xchg
mov
ja
jecxz
movsb
fisubs
daa
sbb
adc
test
adc
clc
inc
cwtl
jp
sahf
jbe
or
shlb
inc
push
repnz
cmpl
pop
icebp
movsb
and
popa
or
stc
mov
and
ret
add
in
and
xchg
cmp
inc
insl
cmp
dec
leave
mull
lea
xchg
lods
mov
ds
and
xchg
cwtl
fdivrs
mov
mov
jmp
mov
outsl
sub
push
and
in
int3
out
adc
push
leave
in
and
ficomps
pushf
inc
add
adcl
and
test
andl
stc
mov
mov
cmpsl
xchg
stos
cmp
xchg
and
enter
lcall
pop
xchg
js
popf
sbb
outsb
pop
inc
xor
shlb
rcrb
cmp
aad
inc
std
lods
sbb
fs
aaa
movsb
jne
lcall
dec
int
push
inc
in
and
push
xor
or
push
popf
jo
mov
lods
in
scas
xchg
push
pop
xor
cmp
mov
cmpsl
hlt
lea
shlb
out
outsb
inc
shrb
jnp
inc
mov
andb
dec
adc
and
and
and
pop
in
cwtl
add
int3
push
cmp
outsl
rcrl
pop
jmp
fsts
test
inc
add
lahf
adc
test
push
negl
inc
stos
fmull
hlt
mov
ja
fsubl
jns
xchg
cmp
stos
clc
xor
cmp
cmc
dec
aad
dec
jbe
inc
mov
fdivrl
sbb
test
jp
pop
lods
lcall
cmpl
sti
out
xor
sahf
jmp
repz
xchg
test
test
and
mov
and
cmp
arpl
aas
and
mov
and
jne
lret
jg
in
ffree
mov
add
stc
mov
scas
and
and
testb
pop
js
jmp
xor
ljmp
faddl
das
fldenv
data16
sub
popf
scas
into
mov
mov
nop
cmc
dec
xchg
xchg
int3
popf
cs
mov
adc
push
jbe
and
lahf
rorl
and
and
lods
xlat
push
and
cld
mov
popf
lods
sbb
sbb
push
lcall
cmc
mov
mov
jno
jg
jl
cmpsb
popf
pop
lds
pop
mov
popa
push
inc
jns
insb
bound
idivb
gs
repnz
and
mov
inc
mov
enter
mov
scas
sbb
and
and
adc
divl
mov
sub
sub
jns
inc
jge
sub
push
push
pop
pushf
and
mov
cmp
add
lret
or
call
xlat
fsubrl
jg
cmpsl
fidivl
cmp
jne
sub
mov
pop
mov
jb
jne
sbb
ss
test
mov
pushf
loope
xchg
mov
popa
sbb
add
add
and
rolb
fisttps
dec
pusha
leave
and
sub
shl
and
xor
mov
mov
fwait
and
mov
ljmp
and
je
mov
or
pop
bswap
or
lahf
and
and
jle
cmp
and
ret
loopne
lcall
inc
dec
push
loop
ljmp
and
and
les
add
rorl
xchg
pop
and
sub
and
imul
mov
cmp
sbb
idiv
xchg
xchg
and
mov
in
and
mov
ljmp
push
lock
lcall
and
ds
iret
and
and
xor
or
pop
jbe
sub
push
imul
mov
and
fwait
jo
dec
jne
daa
pusha
cmpb
xchg
and
mov
mov
test
xchg
dec
adc
xlat
jecxz
mov
stc
and
ficomps
push
and
adc
icebp
and
dec
and
add
and
mov
pop
in
push
lods
loop
sub
inc
repz
or
mov
das
loop
mov
lret
out
and
mov
xchg
cli
jmp
push
xchg
sbb
push
adc
fldt
or
je
cmpl
sbb
add
daa
xchg
shll
mov
loope
inc
and
outsl
cld
and
push
aas
dec
mov
rcrl
sahf
orl
push
push
xchg
int3
jp
outsl
push
stos
sbb
sbb
mov
in
ljmp
mov
fldenv
push
sbb
in
pop
movsl
jg
imul
xchg
cmp
jp
jl
cld
ret
jg
lods
rorb
subl
cltd
mov
cmp
or
pop
mov
jnp
xor
pop
lock
fbld
iret
movsb
out
and
cmpsl
xchg
cmp
xor
and
mov
arpl
mov
in
out
or
and
inc
and
mov
adc
mov
clc
jp
cltd
mov
mov
std
mov
mov
and
leave
jmp
mov
jecxz
and
movsl
scas
je
insl
enter
cmp
add
ret
and
out
shrb
mov
dec
mov
pop
int
popl
in
mov
and
sub
pop
in
dec
js
out
jge
test
cmp
push
xchg
mov
and
arpl
out
and
pop
cs
mov
xchg
mov
and
add
lock
movsb
enter
lret
xchg
incl
jo
sbb
sbb
adc
loopne
sbb
mov
xchg
jg
inc
and
lret
in
add
xor
ret
and
jnp
cwtl
push
fsubrl
push
xchg
fadds
mov
xchg
sahf
pop
and
push
sub
add
and
iret
daa
mov
add
lods
and
and
xor
int
je
xor
call
xchg
mov
add
gs
jg
icebp
add
dec
fcmovnu
and
dec
sbb
cltd
cltd
mov
mov
add
lahf
cmpsl
movsb
xchg
out
scas
popf
xchg
dec
ss
push
and
clc
pop
sub
les
jp
mov
xchg
fiadds
add
decl
push
aaa
scas
xchg
enter
insb
and
jae
and
test
sub
mov
pop
je
mov
outsl
mov
and
pop
bound
icebp
jne
mov
push
mov
test
ret
and
inc
adc
sub
mov
xchg
or
cmpsb
push
push
sub
in
jl
addr16
aam
cmp
dec
xor
daa
mov
pop
add
cmp
and
inc
cli
lcall
inc
cmpsl
or
jl
xchg
pushf
mov
shll
test
out
and
jecxz
cmpsl
std
js
repnz
xor
pop
sub
pop
and
shlb
insl
ss
test
pop
cmp
ljmp
xor
dec
cmpsb
lea
and
daa
pop
and
popf
jb
cs
inc
and
mov
sbb
loop
and
xor
ret
out
jo
std
and
or
adc
push
xchg
mov
xchg
in
test
fmuls
and
test
push
lret
mov
call
ret
push
xchg
outsl
add
mov
and
in
out
aas
aad
inc
gs
dec
sub
jno
and
inc
mov
scas
xbegin
or
aam
ficoms
pop
int3
enter
mov
lcallw
lock
and
outsb
cs
enter
into
aaa
adc
aad
fiaddl
jmp
cmp
mov
movsl
enter
mov
xchg
cmp
mov
andb
mov
data16
mov
cmp
ds
sbb
sahf
std
gs
out
inc
and
jecxz
pop
sbb
movsl
add
push
call
push
adc
aas
dec
imull
sub
in
test
fcmovb
push
mov
and
sti
test
and
add
shlb
lods
pushf
mov
push
jbe
xchg
addr16
movsb
adc
mov
dec
mov
cmpsb
dec
mov
mov
mov
cmpsl
ret
icebp
or
mov
xchg
or
adc
aas
arpl
xchg
xor
mov
cmp
jno
movsl
pop
add
mov
or
int3
xchg
in
popf
and
into
out
sbb
jle
and
mov
sub
loope
sbb
mov
pop
mov
jae
xchg
lidtl
decb
test
scas
leave
or
movsl
mov
andb
test
clc
fbld
ds
lods
repnz
pushf
dec
and
shll
mov
jae
int3
mulb
pop
and
or
rcrl
and
loope
and
pushf
mov
and
pop
cli
pop
cwtl
aas
std
dec
and
pop
mov
mov
imul
mov
movsb
add
sahf
cmp
aas
sub
popa
cld
enter
cmp
xchg
mov
mov
and
and
cmp
mov
pop
pop
and
pop
pop
mov
stc
out
popa
popa
lea
ja
cmpsl
mov
dec
js
add
mov
push
jo
lahf
loop
inc
aam
mov
ret
sbb
sbb
mov
sub
and
mov
sub
mov
sahf
fwait
andl
and
scas
push
mov
push
dec
inc
jns
movsb
or
aas
out
mov
jge
repz
rcll
inc
cmc
sahf
sub
in
dec
xor
jo
adc
add
inc
into
int
or
push
mov
testl
jp
inc
popa
pop
and
fcomip
sub
std
and
mov
mov
and
xchg
lret
xorb
xor
mov
fwait
pusha
ds
xchg
in
and
adc
sti
jecxz
lcall
inc
shlb
gs
or
je
add
daa
jge
mov
mov
in
imul
mov
and
pusha
sbb
and
cld
cmpl
sbbl
repz
xchg
inc
ret
adc
push
sbb
mov
jl
push
jns
clc
div
scas
fisubs
popl
pusha
mov
lea
fwait
lret
sbb
mov
sub
movsl
mov
stos
bound
adc
and
mov
cmp
jmp
sub
push
cwtl
sar
inc
popf
div
pop
xchg
out
popa
lods
mov
push
and
mov
pop
and
arpl
cli
xor
mov
addl
rorb
sub
test
and
and
jae
cmp
mov
loope
mov
pop
jns
xchg
push
mov
mov
jecxz
xchg
jmp
and
push
pusha
inc
jmp
mov
sarl
mov
xchg
xor
jnp
je
sar
std
mov
addr16
popa
adc
out
mov
and
ds
xor
sub
mov
or
popa
syscall
xchg
or
and
add
pop
mov
dec
pusha
and
test
adc
aam
int
jle
push
push
popf
inc
xor
inc
and
inc
or
jecxz
jmp
int
out
and
add
dec
cmp
enter
outsb
out
lcall
test
cmp
push
popa
sub
cmpsb
and
and
leave
xchg
fnstcw
and
jb
sbb
sbb
mov
push
lcall
cmp
mov
cmp
or
push
pop
dec
sub
lcall
aas
fbstp
sub
test
je
nop
xchg
pop
and
dec
jbe
jne
pop
shlb
adc
movsb
sarb
leave
xor
jg
fmuls
aaa
and
and
jno
cld
fisubl
jecxz
fisttps
loopne
and
or
mov
movsb
jp
xchg
sbb
jno
pop
cli
and
xlat
js
cmp
fdivrl
fwait
test
movsl
mov
push
mov
cmp
negl
and
sar
test
mov
xor
ficompl
and
adcb
cs
andb
mov
movsb
fcoml
push
popa
sub
aaa
or
movsb
insb
mov
and
cltd
leave
sbb
popf
or
push
ds
and
sub
fisubrl
das
jmp
rolb
add
jmp
dec
mov
mov
sti
inc
and
pop
punpckldq
mov
jle
loopne
aad
jo
xchg
mov
and
int
clc
loop
adc
notb
test
mov
sbb
cs
mov
loope
inc
add
xor
xchg
stos
xchg
mov
add
popa
pop
movsb
xchg
and
popf
jmp
cmp
mov
lahf
and
mov
inc
adc
repnz
dec
pop
or
mov
dec
dec
and
daa
jo
mov
outsb
cmpsb
sbb
cmp
adc
mov
or
movsb
out
push
bound
hlt
jne
ds
cs
jp
and
or
outsl
mov
adc
cmp
popa
mov
test
push
imul
mov
and
jb
lret
cmpsb
and
add
cltd
fidivrl
popa
push
popa
push
xor
xor
mov
and
mov
test
mov
push
adc
stos
push
jno
mov
xchg
xchg
stos
sub
dec
mov
jle
int
cmp
cltd
sub
fldenv
sbb
adc
insb
inc
cmp
xor
iret
xchg
mov
in
inc
bound
aad
repnz
jp
pop
shll
pop
mov
jbe
xchg
and
dec
aas
mov
and
imul
and
or
insl
mov
in
ss
jecxz
repz
adc
push
mov
repnz
lods
std
insl
shlb
push
rorl
sub
fidivrs
mov
inc
bound
sub
pop
cmp
daa
loop
stos
inc
pop
mov
or
jge
mov
pop
jmp
mov
jbe
xchg
sbb
les
stos
sbb
imul
jb
cs
cwtl
and
insl
pop
daa
mov
push
mov
shll
addr16
sbb
and
xchg
jnp
test
lcall
and
and
cmp
in
jne
add
mov
add
and
and
push
pop
lcall
insb
dec
mov
popa
out
push
cli
and
shlb
mov
jg
lock
mov
sub
adc
loopne
and
cs
sub
jno
aaa
sbb
shll
mov
xchg
jns
and
andb
mov
nop
push
ror
xchg
loop
out
in
pop
inc
pushf
and
mov
pop
pop
daa
mov
mov
mov
fldl
fisubl
inc
cwtl
mov
mov
and
outsl
sbb
pop
jno
jns
and
and
jmp
test
ljmp
mov
and
and
cmpsb
std
test
iret
out
inc
leave
sub
aaa
or
pop
out
adc
fchs
dec
test
call
pop
in
xor
ja
jnp
and
inc
cli
and
subl
lock
addr16
leave
pop
cmp
xchg
pop
ja
pop
and
push
push
mov
sub
dec
jg
movsb
cmpsb
mov
adc
push
adcl
std
out
ljmp
and
pop
inc
push
push
push
mov
stc
popf
int
out
cmp
mov
and
and
cwtl
xor
mov
lret
cmc
imul
arpl
and
sbb
inc
fstl
adc
mov
std
fistpll
insb
movsb
mov
cltd
mov
push
xor
lcall
popa
lahf
aad
call
and
out
outsl
jmp
inc
and
aas
test
jns
inc
repnz
out
push
mov
mov
push
sahf
or
andb
sbb
mov
inc
mov
dec
adc
jns
push
pop
inc
and
and
out
mov
sub
ds
xor
and
loope
and
inc
mov
out
mov
inc
bound
sub
imul
scas
mov
add
pop
cld
in
repz
sub
mov
in
enter
push
test
and
push
add
dec
and
leave
enter
and
arpl
mov
scas
and
nop
mov
test
pop
sub
adc
or
xlat
cmc
mov
bound
xor
and
sti
xchg
mov
pop
aam
xchg
add
movsb
scas
loop
sbbb
ja
pop
pop
or
movsb
jmp
push
jne
stc
or
and
daa
sub
adc
scas
sub
mov
in
lods
bound
fwait
test
and
in
ret
push
pop
shl
sar
popa
inc
sub
or
fwait
push
and
xor
loopne
xor
add
push
pop
sub
inc
pop
cmpsl
cmp
fsub
pop
gs
mov
sbb
jno
pop
and
mov
jl
xor
pushf
and
dec
mov
xchg
and
shrb
es
fsubrl
flds
leave
pop
pop
inc
clc
bnd
push
fistpll
mov
and
mov
lret
jo
cmp
push
in
insl
lea
lock
add
mov
ficoms
lahf
xchg
popf
jge
test
xor
mov
fs
into
loopne
sub
sbb
pushf
pop
push
popa
push
in
out
jb
stc
aad
cwtl
sub
and
push
mov
xchg
shll
xchg
add
rcll
sbb
dec
pop
data16
fcmovu
xor
and
push
sbb
mov
popa
into
das
gs
push
cmpl
mov
fsts
or
insl
jne
xchg
inc
cltd
adc
adc
add
xor
cmp
xor
sti
in
popf
iret
and
movsb
sbb
das
cmpsb
sbb
mov
insb
movsb
inc
lea
xchg
aam
mov
jle
jno
or
and
lahf
dec
and
fimull
mulb
aaa
negl
fimuls
cltd
pop
mov
push
mov
dec
andl
es
mov
inc
das
jno
test
stc
out
and
mov
pop
add
nop
movsl
sbb
inc
mov
push
mov
das
popf
mov
inc
and
pop
ss
sub
xchg
outsl
call
in
mov
mulb
xchg
add
and
cwtl
rcll
mov
and
pusha
movsb
inc
ror
addb
sbb
jno
and
and
cmp
and
mov
push
repz
xchg
and
iret
dec
test
and
imul
shll
mov
das
loop
out
sub
sub
push
stos
and
mov
push
sub
leave
std
jge
and
cmp
andb
lcall
mov
cmpsl
jge
pop
add
and
shl
mov
adc
test
inc
and
add
and
stos
push
andb
cmp
push
shlb
jle
push
cmpsb
jge
fdivrp
lock
ja
mov
fnstenv
test
pop
arpl
push
stos
fidivrs
ficompl
addb
jl
and
and
adc
jge
xor
dec
dec
mov
mov
cwtl
insl
pop
cwtl
adc
std
ss
mov
dec
xchg
push
xor
sub
dec
dec
add
xor
and
das
insl
add
scas
hlt
dec
pusha
and
or
int
mov
push
lock
sub
fldenv
inc
test
xor
insb
and
stc
sub
and
mov
insl
and
mov
adc
dec
mov
mov
out
inc
and
cmp
sbb
mov
test
or
and
gs
jl
mov
adc
adc
pop
enter
js
add
loope
cld
cmc
loope
xchg
mov
sahf
insb
mov
fwait
jle
and
jecxz
rclb
lods
jnp
out
popa
outsb
push
in
gs
pop
mov
xchg
shll
icebp
mov
lea
adc
ficompl
push
je
sti
sbbb
loope
mov
xchg
fsubrp
dec
sub
imull
mov
insb
test
jb
xor
cmpsb
lods
movsl
loop
test
mov
xor
arpl
pop
je
mov
and
sahf
add
clc
push
mov
stc
dec
mov
inc
ret
enter
inc
dec
mov
adc
loop
xor
jns
inc
mov
pushf
and
in
adc
rcr
scas
and
fistpll
loope
xchg
xor
jae
ja
fsubrp
xchg
and
adc
sub
xchg
imul
ss
and
add
popa
and
mov
hlt
and
inc
daa
test
shl
jno
sub
scas
jle
cmp
outsb
movsl
mov
jle
and
lret
jbe
sti
xchg
int
gs
shll
cld
mov
mov
sub
inc
loope
cmc
pop
mov
dec
sbb
stos
stos
fsubrp
je
inc
jno
sub
inc
orl
push
mov
in
int
ljmp
xchg
dec
popa
jp
dec
push
outsl
add
sub
jno
and
xchg
enter
or
inc
mov
notl
mov
popa
push
aam
bound
lds
sbb
pop
or
cltd
loopne
and
xchg
faddl
fimuls
and
jmp
sti
insl
outsl
enter
push
and
movsl
adc
ds
iret
xchg
xchg
jbe
sbb
movsb
das
aaa
subb
push
push
dec
pop
xlat
addl
loopne
push
push
addb
mov
push
and
dec
mov
lea
xchg
cmp
ret
aas
or
sub
loopne
inc
and
lret
movsl
sbb
sub
sbb
push
push
mov
test
xor
mov
dec
dec
out
sbb
sub
dec
xor
sub
add
cmc
or
stos
or
out
fwait
addr16
in
mov
inc
and
pusha
stos
dec
dec
fs
sub
push
popf
and
je
repz
sub
xor
outsb
cs
fnsave
aad
push
add
sbb
mov
jns
and
jg
orl
movsb
test
push
push
push
inc
mov
push
lret
and
fisttps
push
imul
inc
lods
cmp
repnz
adc
xchg
test
imul
xchg
insl
mov
enter
mov
imulb
xor
or
pusha
js
fwait
and
push
jg
and
mov
jne
fs
mov
cmp
xlat
mov
sub
push
sbb
stos
imul
add
jp
mov
or
mov
jns
cmp
divb
cmp
xchg
aam
push
shlb
ja
mov
gs
jl
xchg
cmp
cmp
mov
jno
dec
and
add
or
out
jnp
rcrb
push
inc
movsb
scas
cmpsl
addr16
push
test
push
pop
daa
or
loop
fcoml
mov
ffreep
mov
dec
push
mov
fcmovb
scas
popa
fcomps
scas
loope
push
test
and
clc
dec
dec
pop
les
cmp
int
and
cmp
and
xor
mov
push
pop
out
dec
and
xor
mov
into
loop
xchg
pop
and
xlat
std
mov
pusha
push
sbb
and
pop
cmpb
jg
and
push
cmpsl
repz
and
out
jne
das
xor
push
sbbl
daa
leave
mov
test
notb
les
xchg
pop
xorl
scas
jg
lret
rcll
mov
lock
mov
dec
fbld
push
cld
insb
sub
sub
pop
push
sbb
iret
jecxz
xchg
insl
int
scas
mov
leave
bound
xorl
out
out
fbld
cmpsb
shrb
push
push
xchg
jae
pop
mov
out
int3
mov
shlb
sub
sub
xchg
mov
andl
in
call
pop
loop
xor
and
test
jnp
and
lock
pop
xor
out
ljmp
mov
lcall
leave
aas
and
jp
and
mov
daa
cmp
and
in
mov
cmp
nopl
lcall
mov
jno
in
aad
dec
mov
sahf
stos
sbb
and
test
inc
shlb
pop
jno
into
and
cli
or
sub
pop
enter
or
dec
ds
aas
and
adc
xchg
aad
mov
aaa
push
cmp
idiv
adc
xor
popf
cmpl
sahf
movsb
xchg
test
xchg
cmc
nop
movsb
add
inc
and
pop
mov
jp
rcll
mov
arpl
or
and
lods
cmp
pop
and
std
inc
and
das
push
xchg
and
push
or
and
dec
scas
shrb
mov
pop
inc
cmpsl
xchg
mov
lcall
in
fcomi
and
loope
and
andl
pop
xchg
cs
out
xchg
jno
push
movsl
rclb
call
cltd
imul
lods
repz
sti
sbb
cs
popf
insb
and
in
repnz
into
out
adc
dec
aam
mov
test
rorb
sbb
imul
aam
inc
push
popa
test
lock
add
cmp
test
mov
mov
push
outsl
xchg
ja
jne
xor
lea
add
mov
mov
and
inc
es
daa
jne
iret
and
sbb
mov
add
adc
and
pop
fadds
lock
cld
std
mov
jge
fisttps
aam
fwait
rcl
movsl
movsb
pop
and
negb
xorb
inc
mov
inc
dec
xchg
jle
and
push
or
pop
mov
test
adc
dec
mov
xchg
insl
lds
and
xor
in
jmp
xor
out
jns
test
lret
je,pt
popa
and
sqrtps
loopne
xchg
xlat
ss
cmpsb
lock
clc
mov
and
out
ficoms
ror
and
fisubl
enter
xchg
xor
cli
xor
and
and
push
mov
jg
push
andl
daa
repz
xor
mov
jne
pop
movsb
xchg
add
inc
bound
jnp
lea
mov
mov
popa
cmc
push
xchg
push
or
fcomps
cltd
jl
mov
mov
aaa
dec
jno
push
cmp
add
mov
ja
test
imul
cmc
push
xlat
pop
pop
mov
shrl
sbb
test
and
fadd
xchg
jmp
test
notl
and
das
shll
popa
pop
stos
fbstp
and
mov
and
mov
mov
sbb
mull
mov
mov
cltd
push
sub
sub
add
xor
sub
xor
sbb
test
and
sbbl
sub
sbb
and
mov
and
sub
pop
sbb
mov
lahf
mov
and
pusha
std
pop
mov
or
xchg
push
mov
cmp
shl
and
aaa
pushf
les
pop
inc
xchg
mov
and
pop
scas
pop
scas
mov
cs
pop
and
dec
es
fistpll
aaa
nop
lret
sub
pop
in
cmp
or
lds
and
outsl
sub
stc
adc
push
sub
lcall
popa
sub
loopne
fsubs
and
out
inc
insl
sbb
jl
inc
push
jae
in
mov
adc
test
mov
lret
inc
cltd
jnp
andl
sbb
dec
and
or
or
mov
jns
inc
gs
mov
scas
dec
lret
dec
mov
lods
jge
jae
popa
add
lds
pop
sbb
das
pop
test
in
das
jne
das
xchg
addl
xor
fcoml
and
mov
out
mov
decb
sti
add
jmp
mov
sarb
ret
mov
mov
add
ret
sbb
and
shll
jb
dec
out
call
nop
dec
jge
xor
enter
jbe
lock
imul
sbb
mov
jp
mov
test
hlt
test
or
and
jg
fisttpl
cmpsb
mov
dec
mov
and
xor
pop
shl
add
xorl
iret
dec
sbb
aad
loope
dec
and
push
cli
out
pop
and
xlat
imul
popa
push
mov
mov
lods
andl
xchg
repnz
xor
cmpb
mov
out
or
cmpsl
sub
mov
push
xorl
and
mov
cmp
jbe
test
shlb
and
and
mov
cmp
xor
mov
aad
mov
xchg
and
sub
xor
dec
and
dec
pop
cld
popf
mov
aad
cmp
cmp
lea
test
adc
cmc
and
cmpsl
mov
xor
sbb
test
push
sti
popf
and
push
shlb
mov
movsl
stc
jp
outsl
lahf
adc
mov
cmp
jo
adc
movb
sti
xchg
loopne
aas
and
sarl
rcrb
sub
inc
sbb
push
cltd
or
mov
stos
mov
and
flds
insb
mov
xchg
pushf
mov
adc
inc
jge
in
dec
pop
and
hlt
pusha
inc
and
jo
pusha
in
or
push
stos
in
mov
and
or
dec
movsl
mov
out
stos
mov
fcomi
and
fs
fcompl
pop
cmp
mov
setg
ss
jl
hlt
lea
jecxz
lret
sbb
pop
jo
cltd
xor
and
adc
ljmp
nop
jge
sub
or
jmp
xchg
xor
les
or
and
jne
iret
mov
inc
fists
shl
mov
jno
cwtl
sbb
jmp
mov
sub
xchg
xchg
jns
and
push
popf
stos
mov
out
loope
sbb
sbb
lds
and
mov
inc
inc
sbb
fsubr
gs
test
sub
in
dec
fnstenv
out
xor
xchg
shlb
dec
ficomps
into
popa
mov
mov
ja
bound
inc
clc
pusha
test
or
xchg
idivl
int3
pop
mov
jno
push
cltd
dec
fwait
and
out
push
shll
push
arpl
dec
and
and
inc
test
xor
or
xchg
out
mov
and
xor
cmp
call
xchg
das
iret
popa
rcrb
sub
and
dec
xor
lods
mov
mov
icebp
inc
and
loope
push
sub
cmp
xor
and
mov
push
out
and
ds
mov
jl
fisubs
sahf
mov
xchg
aaa
fwait
dec
and
xchg
mov
loopne
fmuls
jmp
and
jne
pop
dec
cmp
add
ss
andb
jge
lods
frstor
and
popf
rolb
aam
mov
xchg
and
in
pop
mov
mov
fstpl
jns
rcl
sbb
cmp
adc
and
ret
imul
sub
mov
xchg
mov
out
cmp
cmp
movsb
stos
add
mov
movsl
add
mov
jle
sbb
sti
shlb
jg
popa
cwtl
mov
test
inc
jecxz
xchg
out
and
cmpsl
mov
and
mov
out
or
jae
mov
pop
sub
fidivrs
lret
and
movsb
imul
fistps
jg
push
cs
xchg
mov
mov
xlat
sub
sub
movsb
pushf
outsb
xor
mov
rclb
mov
pusha
and
mov
popf
in
and
fsubs
ljmp
mov
fwait
lods
repz
dec
dec
mov
mov
and
call
pusha
mov
std
repnz
cmpsl
int3
and
push
rcll
push
fldt
stos
lret
xor
cmp
test
pusha
stc
pop
pop
fcomi
pop
adc
jg
inc
dec
and
xchg
push
pop
lea
xor
shlb
cltd
popf
fsubs
pop
inc
mov
and
dec
mov
aad
mov
xor
lret
dec
imul
mov
and
fldt
mov
mov
xchg
push
adc
mov
scas
and
add
scas
lods
ret
sub
stos
pop
mov
test
setl
inc
ds
int
cmp
cmp
jno
mov
mov
jp
pop
mov
and
loopne
mov
lahf
rorl
sbb
xchg
fldcw
and
and
pop
test
mov
stos
stc
fwait
sub
xchg
clc
pushf
rcrb
sbb
data16
inc
xor
fwait
mov
mov
and
sbb
xchg
icebp
outsb
and
push
sub
and
ret
push
push
mov
xor
cli
in
pop
and
and
les
nop
mov
call
and
sahf
movsl
xor
out
and
lods
sub
mov
lods
xor
arpl
sbb
insl
shll
fldcw
xchg
sbb
push
aaa
dec
inc
daa
lods
rcrb
rorb
xchg
jmp
into
lcall
lods
dec
aas
icebp
inc
rclb
sub
mov
sahf
and
push
sub
push
sti
mov
jl
mov
and
aas
dec
mov
xchg
mov
mov
clc
xchg
or
push
pop
sub
xchg
lods
or
xchg
outsl
mov
push
push
pop
push
push
sahf
fists
dec
fidivs
outsl
jb
cwtl
jb
dec
jnp
ss
jae
pop
sbb
cmp
test
cwtl
sahf
or
push
in
and
movsl
push
xlat
inc
inc
pop
push
clc
scas
jns
inc
push
xor
dec
and
mov
adc
addr16
sbb
xchg
loope
mov
lcall
lock
hlt
mov
aas
enter
fwait
iret
cmpsb
mov
jns
xchg
xor
fisubl
sub
mov
cmp
scas
ret
or
inc
icebp
nop
and
pusha
mov
subb
js
pop
mov
out
adc
inc
cmpb
std
inc
mov
out
out
dec
jmp
inc
push
pop
xchg
and
aas
mov
popf
push
cwtl
insb
and
int3
fwait
mov
push
mov
pop
fiadds
push
pushf
movsl
outsb
test
xor
int
and
fisttps
fldcw
cmp
jne
push
scas
cmp
insb
add
outsl
cmp
movsl
inc
andl
imul
sub
push
test
adc
dec
dec
inc
cmpsb
sub
out
and
mov
movsb
scas
xchg
inc
and
pusha
and
adc
call
mov
fcmove
fcmovnb
and
sbb
insl
cwtl
and
push
inc
xchg
loopne
and
nop
mov
pop
and
inc
into
sub
sub
xchg
pop
sarb
popa
outsb
jg
scas
push
pop
frstor
adc
jl
nop
xorb
inc
cmp
sub
sbb
imul
fdivs
sarl
stc
xchg
jge
sub
loop
push
mov
xorb
push
fcos
push
mov
hlt
sbb
and
pop
xchg
sarl
and
fistl
jns
jge
imul
lods
in
jp
xor
or
inc
adc
add
shll
inc
das
and
xchg
sbb
lock
jp
div
fidivl
jg
cmp
jnp
mov
outsl
and
sub
cmp
and
sti
int3
pop
mov
pop
stc
add
mov
xor
ds
mov
inc
jnp
push
push
cwtl
es
out
popl
sbb
mov
xor
jns
aas
jne
popa
fs
out
pop
cmp
lock
inc
mov
xchg
in
movsl
addl
data16
push
mov
and
fcompl
push
sub
inc
inc
popa
stos
lret
mov
xor
movsl
aad
aaa
cmp
mov
mov
lahf
push
fbld
insl
lahf
stc
xchg
ljmp
leave
pop
outsl
sbb
and
daa
repz
xor
xchg
or
and
push
push
sbb
and
inc
out
pop
insl
pop
and
les
and
and
mov
cmp
dec
fucomp
adc
loope
jns
and
hlt
xchg
dec
mov
sub
pop
lds
das
push
and
add
cmp
aas
movsb
mov
lods
xchg
inc
and
in
pop
fisubl
jmp
and
sbb
rcrl
add
and
sub
pop
lret
mov
mov
scas
movsb
test
sub
and
jl
addr16
cmp
ds
or
cmc
adc
mov
in
test
mov
inc
sub
cmp
popf
lret
ret
cs
adc
std
mov
and
mov
and
test
and
in
mov
std
cmp
fistps
and
popa
dec
sub
mov
inc
stos
fwait
push
mov
pop
ljmp
scas
test
nop
repz
sbbl
cmpsl
fidivrl
fcoml
pop
and
mov
mov
int3
xor
loopne
or
and
not
push
mov
lahf
and
lcall
and
cmpsl
and
icebp
dec
and
xchg
inc
push
fwait
cmpsb
imul
lret
push
dec
mov
js
pop
incb
xor
outsb
stc
out
mov
fwait
imul
loopne
std
or
and
or
xor
sbb
and
xchg
xchg
pop
inc
ljmp
loopne
push
cltd
mov
outsb
pop
daa
mov
and
cmpsb
dec
xor
fwait
lret
cmpsl
dec
ret
into
popa
cmp
pusha
movsb
lret
pop
lods
add
icebp
or
cltd
mov
add
into
jae
je
pop
xor
aad
test
popf
and
mov
mov
xchg
mov
mov
push
out
inc
int
add
into
scas
aas
leave
incb
scas
mov
and
cmp
aas
push
shll
aad
mov
mov
jle
and
sbb
loopne
and
cli
mov
add
test
add
fmull
sbb
jmp
add
cmpsl
jg
pusha
insl
jp
les
sub
mov
push
cmpb
dec
cmp
lds
punpckhwd
dec
pop
sbb
pop
cmpsb
add
loop
movsb
popf
adcb
test
mov
ss
lahf
push
movsb
xchg
push
or
cltd
repz
and
ljmp
adc
lcall
jg
movsl
or
push
pop
cmp
loop
pop
dec
xchg
outsb
pop
and
cltd
jl
mov
lea
cmp
rolb
or
and
ret
in
push
jbe
andl
mov
xchg
pop
pop
inc
and
cmp
frstor
sub
push
and
dec
mov
or
and
sarb
xor
and
jnp
dec
xchg
or
mov
fcompl
in
inc
fcoml
and
add
push
adc
out
cltd
cmp
sbb
xor
mov
ret
xchg
popa
jge
sbb
insb
cli
or
int3
inc
daa
test
mov
xchg
or
and
dec
xor
cmp
aaa
cpuid
add
dec
jne
in
movsb
stos
xchg
fcmovnbe
outsl
or
enter
fwait
jns
jmp
outsl
push
les
shrl
fists
test
and
lcall
xor
pop
mov
and
clc
das
in
adc
and
mov
pop
inc
and
jns
cld
mov
fwait
push
xor
movsl
mov
ret
mov
push
xchg
and
sbb
pop
xchg
jge
pop
ljmp
popa
jnp
and
sarb
ja
dec
xor
push
add
jecxz
pop
mov
and
roll
and
subb
sub
push
pop
and
and
imul
mov
movsb
dec
pop
mov
inc
jnp
ror
aad
mov
out
sar
and
push
rcrb
and
pop
fsubs
mov
sbb
jno
je
xchg
ss
out
dec
jb
cmc
mov
jb
repnz
mov
je
fs
xchg
sub
popf
ret
dec
test
pop
mov
ret
and
das
pop
pop
repz
jbe
mov
ret
mov
sub
lods
mov
in
push
xor
push
sub
jne
mov
notl
dec
bound
xor
insb
into
iret
stc
ja
popa
sub
pop
cmpsl
sub
and
out
iret
filds
js
sub
cli
sti
cmpsb
mov
fwait
and
shl
je
bound
mov
adc
and
adc
push
mulb
mov
and
jle
out
and
lods
cli
lret
cs
pop
mov
mov
and
mov
insl
xor
fldt
call
popa
out
leave
icebp
dec
mov
outsl
mov
loop
and
pushf
outsb
lds
push
je
sub
and
xor
sub
stc
int
push
add
adc
or
lods
mov
xchg
xor
mov
xor
adc
movsb
mov
fisubl
bound
xor
outsl
pop
repz
data16
add
popf
dec
clc
and
push
je
cmp
jmp
inc
insl
inc
rcrl
mov
push
std
cmp
and
adc
xor
in
push
sahf
mov
int3
fisubl
mov
insl
and
cltd
shr
inc
jns
mov
enter
jo
add
dec
pop
jp
sub
ret
aas
fdivl
push
stc
mov
and
lea
mov
push
pop
loop
lods
dec
sub
aam
xor
sbb
mov
and
dec
jae
outsl
xchg
mov
adc
mov
das
fsubrs
mov
pop
and
cmpsb
clc
lret
inc
sbb
and
mov
addr16
or
and
dec
xchg
inc
outsb
shlb
mov
adc
and
adc
xchg
inc
imul
xor
sub
das
mov
loope
outsb
ret
mov
arpl
idivb
into
and
push
jne
fs
and
mov
scas
inc
xor
clc
and
lods
dec
jmp
sub
imul
jne
loop
aam
cld
pop
push
cmpsl
pop
sub
and
sbb
mov
and
lds
decb
xor
mov
jno
test
and
xor
mov
repz
mov
es
scas
cld
in
pop
and
pusha
dec
cs
cmp
and
dec
add
aad
inc
stc
cmp
daa
pop
and
in
mov
int3
lods
sbb
and
mov
push
push
adc
and
sbb
pushf
and
das
dec
mov
and
xor
jp
or
fs
cmp
inc
outsb
movsl
movsb
and
lret
mov
pop
and
add
cmpsl
out
sbb
cwtl
ds
loope
sub
jno
push
and
lods
xchg
test
addb
ret
jmp
iret
loop
add
jecxz
jg
xchg
and
lret
fmul
sbb
movsb
scas
test
int3
and
adc
and
push
dec
dec
jl
sub
push
add
mov
mov
addb
mov
sahf
jae
and
add
dec
pop
sub
add
jge
outsl
and
gs
ss
cmp
push
add
cmp
fisttps
cmpb
xchg
enter
mov
pop
sbb
popa
andps
call
loopne
sub
jle
xor
addr16
aas
xchg
pop
ffreep
pusha
add
movsl
mov
adcb
js
or
shrl
mov
idivb
cmp
sti
pop
test
pavgw
cwtl
nop
into
repz
xor
and
mov
and
inc
daa
std
mov
lahf
scas
lea
jmp
and
sahf
mov
insb
ret
and
mov
movsl
rcrb
adc
and
mov
lock
jno
add
sub
loope
dec
adcl
mov
mov
stos
test
sub
sub
and
leave
lods
dec
dec
mov
ret
push
mov
shll
ja
shll
mov
sub
stos
int
cmpsb
sub
pop
xor
fnsave
mov
bound
cmp
shll
and
out
test
push
and
loop
jmp
pop
push
out
pop
xor
mov
mov
inc
lea
or
dec
mov
mov
push
cmpsb
fdivr
lds
movsb
icebp
mov
sti
pop
fisttpl
test
aad
test
jae
rcll
pop
cmpl
dec
enter
mov
push
dec
fwait
mov
cli
imul
add
sar
dec
mov
mov
enter
sub
mov
repz
add
rcrl
pop
and
and
push
mov
fs
pop
das
mov
ds
mov
or
sub
cwtl
pop
popa
dec
mov
ljmp
cmpsl
xor
xor
imul
popa
pushf
mov
mov
jnp
add
pop
jmp
and
cmp
xor
cltd
xchg
das
add
mov
out
mov
push
xor
mov
xchg
sub
outsb
test
outsl
dec
lods
push
in
gs
and
or
dec
push
inc
mov
add
test
in
xorl
sub
and
xor
pop
ljmp
dec
push
and
aad
and
arpl
mov
sub
cltd
loopne
pop
and
sbb
and
or
inc
mov
out
mov
sbb
add
cli
mov
dec
imul
jns
sub
call
andl
inc
mov
and
aaa
lcall
push
inc
stos
int
pop
cmp
jo
pop
dec
out
mov
jbe
push
inc
mov
fldenv
mov
mov
xor
push
or
arpl
mov
and
lods
loop
stos
popf
push
and
jno
xchg
imul
out
sub
push
and
ret
push
push
and
and
nop
fiaddl
stos
adc
sbb
or
pop
lock
and
mov
mov
outsb
aam
pop
ret
sbb
test
stc
adc
cmp
es
mov
jge
popa
push
addb
and
js
jb
and
ja
jecxz
push
movsl
and
scas
rolb
test
cmp
xor
imul
sbb
push
jno
test
cmp
mov
mov
dec
xor
das
push
fwait
mov
xchg
mov
lea
decb
aas
pop
ljmp
aad
repz
cli
and
sub
fsubrl
dec
adcb
icebp
imul
inc
jno
scas
adcb
lods
orl
and
mov
xchg
shl
adc
push
pushf
cmp
ds
dec
and
and
das
insl
mov
sub
fists
jns
in
or
int
call
push
movsb
mov
lods
and
and
push
lods
sbb
dec
push
mov
aam
push
roll
imul
cwtl
xchg
mov
lock
dec
into
pop
xchg
jb
stos
pop
daa
jns,pt
fisubl
fnstsw
scas
clc
and
push
test
dec
cmp
and
lret
aam
or
scas
inc
fisttpll
and
adc
std
inc
xor
jmp
cmp
rcrb
mov
inc
je
inc
jnp
xor
bound
in
cmp
sub
and
sub
inc
cmp
push
xor
mov
cltd
xchg
orb
cmp
adc
jbe
iret
cltd
out
and
push
inc
jo
fwait
pop
xor
mov
pop
mov
imul
sbb
insl
inc
movsl
dec
or
sub
popa
pop
push
pop
and
in
ret
fistpll
jns
mov
push
pop
mov
lods
jmp
imul
jle
mov
in
int3
and
std
push
dec
addr16
mov
add
nop
jne
push
pop
xchg
jmp
insb
iret
fcomps
lods
add
mov
adc
ss
push
pop
repnz
cmpsl
fidivrl
and
push
and
call
fbld
fimull
imul
gs
cwtl
scas
pusha
xchg
das
and
adc
and
sahf
pop
inc
dec
jnp
aas
and
inc
sbb
cmc
and
out
jge
loop
sar
and
fidivl
mov
xor
mov
lret
iret
sahf
les
loope
int
ficoms
inc
enter
loop
jmp
bndldx
and
aad
push
adc
das
test
and
mov
mov
stos
adc
jnp
inc
push
and
gs
movsb
jne
inc
jmp
int
and
iret
sbb
and
xlat
mov
and
add
lret
cmpl
jle
mov
and
ja
add
faddl
cld
shrl
sbb
je
or
movsb
inc
mov
mul
sbb
jp
ficoms
std
pop
lods
and
jnp
loop
fildll
jge
and
push
xor
mov
iret
incl
pusha
popa
dec
enter
lods
pushf
jb
xor
and
faddl
bound
jmp
jnp
and
fucomi
mov
and
addl
and
jmp
js
cmpsb
mov
shrb
sub
push
mov
roll
into
adc
std
cld
aas
cmp
cmp
mov
imul
push
mov
xchg
push
mov
mov
push
and
leave
push
fmul
add
and
scas
and
cmpsl
outsl
cmp
pop
mov
cltd
add
mov
and
xor
bound
ljmp
pop
jmp
dec
repnz
xchg
out
mov
pop
nop
arpl
and
mov
mov
mov
out
mov
push
push
lret
push
pop
dec
jne
aad
lods
xchg
xor
jmp
dec
or
repz
and
jns
scas
fmuls
inc
sub
ss
sbb
stc
outsl
jae
lock
sbb
pop
sbb
sub
or
push
jno
dec
in
insl
sahf
xchg
and
jae
or
and
add
sbb
jae
cltd
lods
sub
add
xchg
cli
and
mov
icebp
and
pop
in
xchg
and
mov
push
push
das
jle
test
sbb
fwait
hlt
popa
pop
push
and
outsb
fisttps
push
push
gs
icebp
ja
sub
jecxz
and
push
xchg
loopne
mov
lret
in
xor
movsl
adc
xchg
cmp
mov
inc
mov
aad
fsubl
mov
fisubs
leave
repnz
aaa
rolb
jge
lods
movsb
imul
pop
fbld
cld
or
push
sti
test
push
jne
cmpsb
mov
and
popa
adc
test
fs
insl
fisubl
jno
cmp
stc
addb
mov
mov
xchg
popa
cwtl
arpl
mov
and
es
jne
lahf
movsb
clc
test
shlb
or
enter
or
fstpl
add
and
inc
stos
repnz
int3
sbb
mov
dec
pop
inc
lock
out
enter
push
jecxz
mov
xor
lds
mov
outsl
imul
add
xor
pop
and
push
mov
and
in
mov
movsb
push
pop
sbb
xor
and
or
mov
or
push
cmpl
cmp
inc
jo
jmp
mov
adc
je
pop
ljmp
in
subb
mov
and
or
dec
adc
xor
aaa
subl
and
rcr
js
xchg
jg
cmc
dec
imul
pop
pop
bound
sbb
mov
sbb
das
lock
pushf
lea
xor
pop
pop
fcoml
aas
pop
arpl
les
pop
xchg
das
pushf
add
mov
sub
xrelease
jp
xor
cwtl
into
stos
add
xchg
sbb
cwtl
sub
mov
imul
lret
xchg
call
es
xchg
stos
sbb
mov
test
jae
mov
sub
dec
rolb
lcall
push
jno
xor
mov
xor
in
loope
mov
xchg
daa
sbb
xchg
jbe
test
notl
add
push
pop
lods
icebp
in
outsl
shlb
fdivrl
push
sub
pop
mov
ds
push
in
jne
int
cs
aaa
xchg
test
dec
xor
not
xor
push
notb
mov
push
call
sub
fldcw
and
ja
sbb
mov
dec
mov
es
imul
cld
stos
dec
and
mov
mov
mov
arpl
inc
dec
imul
jmp
fldcw
sahf
mulb
lds
addr16
jge
and
cwtl
inc
cltd
rcrl
xchg
mov
in
sub
lock
das
dec
sub
leave
es
adc
ret
pop
shlb
aaa
loope
inc
and
xor
fdivrl
bnd
popa
sbb
add
ret
xlat
fidivrl
outsb
test
popf
in
push
testb
xor
push
icebp
mov
cmp
pusha
jmp
test
mov
imul
xchg
mov
popa
scas
dec
roll
add
flds
std
jno
push
outsb
inc
fsubp
sub
in
rolb
and
stc
mov
and
out
or
enter
neg
add
and
gs
pop
ja
and
es
out
ss
add
clc
pop
in
dec
insl
and
je
xlat
sub
rol
scas
jno
push
add
out
mov
insb
xchg
into
popa
mov
mov
and
or
add
jp
fisttps
and
dec
xchg
into
mov
and
ret
stc
adc
dec
mov
or
and
mov
sbb
mov
mov
push
inc
int
and
and
and
cmp
mov
mov
dec
adc
cltd
pop
jg
inc
stc
les
pop
addr16
cmp
shl
push
pop
fisubrs
mov
xor
push
jmp
sbb
outsb
mov
xchg
in
xor
push
inc
insb
jge,pt
repnz
and
mov
push
cld
fwait
loop
and
cmp
and
cmc
mov
xchg
cltd
xor
insl
jg
sbb
aam
xchg
push
inc
rclb
lret
mov
xor
ljmp
push
mov
dec
loope
sub
dec
sbb
test
and
movsb
sub
xchg
mov
call
fisttpll
clc
repz
daa
jge
fs
dec
pop
outsl
aaa
test
pop
mov
popa
jns
jne
xlat
into
shll
cmpsl
lea
xchg
dec
mov
jecxz
or
xor
push
mov
es
pop
mov
jl
pop
rorl
loope
dec
mov
mov
cmpsb
imul
test
and
movsl
popa
aas
push
adc
or
or
add
icebp
stos
inc
xchg
adc
push
mov
xchg
insb
xorl
pushf
dec
mov
push
mov
xchg
push
pop
or
cli
cmp
shl
movsl
mov
andl
adcl
fxch
or
jge
add
xor
arpl
rcr
adcl
cld
and
imul
adc
or
inc
imul
test
sbb
dec
and
adc
sub
sub
imul
lods
das
pushl
cmp
push
aad
and
pusha
lock
loope
pop
mov
dec
shr
in
pop
loop
jmp
icebp
sahf
mov
inc
xchg
cmpsb
rorb
mov
inc
adc
and
pop
mull
and
mov
cmp
dec
and
insb
or
rcll
mov
jg
xchg
dec
imul
rolb
lahf
shll
xchg
dec
repnz
pop
push
popf
mov
out
mov
mov
ss
stc
in
clc
mov
into
xor
cmpsb
pop
and
shll
cmp
call
mov
popa
jmp
sbb
aas
in
lods
popa
xchg
ficoml
mov
pop
xor
push
fldcw
pusha
xor
pop
sbb
test
mov
inc
fstpl
inc
mov
jne
cmp
aaa
jbe
pushf
mov
pop
and
and
adcb
mov
test
nop
jo
jp
cmc
and
arpl
out
and
xchg
movsb
stc
sti
adc
and
out
jge
stos
jae
mov
xchg
jle
shrl
insl
out
or
daa
fwait
and
lea
push
movsl
inc
repnz
jmp
and
shlb
jl
leave
jno
test
adcl
push
adcb
jo
adc
jp
cmp
push
dec
fnstenv
sbb
clc
sbb
sbb
pop
or
mov
or
mov
inc
pop
popa
aas
xor
je
adc
test
popa
or
lret
and
push
xchg
popf
mov
shlb
enter
jmp
pop
in
dec
insl
inc
stc
cmpsl
mov
and
add
test
aaa
lret
cwtl
subl
and
ret
add
or
jecxz
insl
popf
aas
pop
andl
outsb
pushf
add
or
inc
and
xchg
ss
sbbl
lahf
or
xchg
and
jp
and
and
dec
push
das
iret
std
pushf
and
cmpsl
mov
and
xor
lahf
out
cmp
movsb
repz
data16
push
jne
rorb
movsb
xchg
cmpsb
xor
add
fwait
es
shr
sub
mov
jno
imul
movsb
or
jl
or
icebp
mov
les
dec
jmp
jg
push
incb
imul
lcall
lcall
xchg
out
rorl
push
bound
inc
and
jecxz
movsl
add
iret
fadds
mov
enter
nop
out
mov
lret
ds
sbb
and
pop
les
jb
pop
push
rol
mov
mov
pop
dec
and
dec
mov
jns
sub
mov
and
stos
xchg
cmp
cli
push
daa
lods
subl
inc
es
push
mov
and
fsubrs
int3
adc
push
mov
fs
xor
pop
and
pop
pop
jo
mov
mov
addr16
push
lret
or
and
mov
pop
and
add
cld
add
push
shrb
xchg
push
fwait
icebp
subl
cmp
mov
and
pop
bound
and
sbb
cld
inc
in
sub
cmp
dec
icebp
test
ret
dec
das
sbb
mov
test
pop
pop
sub
fwait
cmp
dec
and
add
push
push
jno
js
test
pushf
sbb
and
std
fnstsw
cwtl
test
xchg
insb
movsb
dec
movsb
dec
pop
jg
push
xchg
lahf
inc
dec
shlb
leave
pop
cs
nop
daa
outsl
sub
aas
jne
mov
roll
hlt
dec
jne
pop
mov
in
dec
mov
xchg
sahf
dec
push
push
mov
fiaddl
rcrb
and
or
addl
in
mov
fldl
mov
inc
lods
int3
mov
cmp
lea
icebp
test
in
dec
imul
mul
arpl
out
mov
insb
sub
sub
clc
sub
and
flds
mov
cmpsl
jle
push
jne
mov
sbb
mov
pushf
jo
push
daa
mull
mov
cmpsb
into
aam
ss
cltd
jns
mov
adc
sub
push
xchg
psadbw
jmp
push
cmp
popl
mov
xchg
cmpsl
popa
xchg
mov
ret
notl
sub
in
mov
nop
rorl
out
mov
xor
jb
inc
fs
inc
xchg
push
inc
and
and
mov
fstp
mov
pop
cmp
hlt
aam
xlat
and
mov
adc
popf
fidivrl
das
pop
es
and
repz
movsb
ja
cmp
pop
insl
jge
and
cld
mov
mov
jmp
imul
jno
repnz
dec
and
pop
jne
mov
adc
outsl
cld
push
sub
mov
sbb
push
lcall
and
push
cmpsl
and
test
push
lea
mov
out
dec
roll
frstor
inc
outsl
jae
push
add
sub
sbb
out
enter
xor
add
xchg
mov
or
jo
mov
mov
cwtl
repnz
cmp
loopne
push
xor
mov
and
xor
mov
lcall
push
xchg
add
mov
out
and
lods
decb
mov
or
jnp
and
mov
sub
sbbl
call
xchg
sub
cltd
popf
and
fbld
or
mov
lods
popa
lock
subb
mov
push
aas
xlat
and
add
and
mov
and
pop
scas
xchg
imul
sub
mov
xor
mov
add
or
dec
inc
mov
in
push
insl
fcompl
or
iret
add
arpl
test
pop
inc
insl
or
lret
movsl
inc
mov
popf
add
rclb
iret
scas
mov
mov
testb
loop
mov
adc
sbb
xchg
push
mov
xchg
and
sub
xchg
cmpb
out
lea
adc
mov
lods
inc
cmp
ret
movsb
fisttps
arpl
clc
cli
in
lea
and
push
xor
jno
add
repz
mov
out
inc
in
inc
dec
lds
mov
popa
icebp
out
ficoms
pop
push
imul
mov
sub
sub
fwait
lret
popf
sbb
aam
das
and
and
pop
sub
add
inc
cld
mov
jo
ret
dec
xchg
and
jnp
js
inc
jecxz
dec
push
xor
outsb
and
mov
push
jae
je
pushf
mov
mov
aad
sti
sbb
add
das
imul
arpl
aam
add
add
adc
movsl
loope
mov
xchg
jns
cmp
inc
in
lret
data16
and
mov
jle
pop
xor
lcall
imul
push
pop
insb
mov
and
jno
call
mov
jns
test
xor
lret
xchg
dec
jp
and
inc
loopne
push
dec
adc
mov
fldcw
pop
cmp
mov
push
in
jnp
and
cwtl
xor
or
fwait
adc
pop
and
and
push
aad
and
popa
inc
outsb
les
adc
inc
lahf
jg
loopne
dec
mov
and
sahf
sub
cmp
dec
xchg
cltd
jne
popf
pop
lock
lahf
lret
sti
and
out
movb
out
pop
mov
je
popa
popw
and
xchg
cmpsl
pop
pusha
sarl
fsubrs
sbb
fdivl
rorl
push
frstor
enter
into
pop
adc
jmp
and
inc
ret
fwait
inc
add
cmp
shll
xchg
test
in
inc
outsl
and
scas
cld
fimull
and
ljmp
jg
cmc
push
and
mov
mov
inc
pop
cltd
call
lock
xorl
push
imul
movsl
adc
popa
aaa
xor
and
jge
xor
push
cwtl
cmpl
pop
add
jge
and
aad
jecxz
add
pushf
test
and
sub
fsubrs
xchg
mov
push
pop
and
dec
cmpsl
mov
dec
mov
xlat
fstpl
dec
jne
call
dec
out
xchg
icebp
add
movsb
pop
aas
xchg
mov
dec
and
mov
mov
loopne
cmpsb
loope
pop
push
xor
out
pop
lahf
jae
mov
roll
xchg
mov
mov
out
push
js
pushf
jmp
jb
test
popa
imul
stc
mov
or
and
ret
push
cmpsl
popa
mov
inc
and
mov
out
and
loopne
cmp
insb
rol
xchg
sbbb
sbb
in
and
xchg
test
movsb
lds
lret
std
mov
jnp
cld
and
jecxz
adc
jmp
and
inc
xor
and
jmp
mov
aam
lret
cmc
inc
fbld
cwtl
fldl
in
and
xchg
cmp
cwtl
divb
pop
cmpsb
sub
sub
cmp
mov
ror
popf
lret
lea
push
out
jnp
insl
and
pop
scas
jns
das
mov
lcall
cmp
rorb
pop
mov
popf
mov
xchg
sub
jnp
xchg
and
mov
inc
dec
or
les
fwait
shrl
ds
test
push
and
clc
test
outsl
and
repz
out
lods
test
jg
filds
inc
dec
les
jbe
ss
and
inc
sub
or
andb
mov
xchg
int
mov
sbb
jmp
out
fsub
cmp
and
lea
xor
adc
and
ss
into
push
push
imulb
loop
fsubl
inc
and
mov
sub
mov
popa
push
adc
mov
mov
pop
and
cmp
inc
and
fwait
in
cltd
movsb
fisubs
mov
lds
push
stc
add
pop
fs
in
add
push
ljmp
enter
out
push
es
mov
stc
and
jo
mov
mov
xor
mov
xor
cmp
ret
aas
out
lea
insl
negl
and
cmpsl
cmp
insl
subl
push
enter
in
xchg
nop
sahf
ss
sub
aad
xor
mov
cmp
aaa
push
icebp
adc
filds
arpl
pop
loop
and
test
or
jg
lea
pop
and
sbb
xor
cld
stc
mov
or
adc
xchg
andl
addr16
pmaddwd
xchg
and
inc
mov
and
shll
cmp
sahf
or
cltd
xchg
and
pop
notl
fadds
ret
mov
adc
fidivrs
cmp
mov
or
cwtl
and
adc
negb
mov
adc
sbbb
sbb
daa
mov
popa
and
xchg
mov
cmp
das
mov
push
bnd
dec
fs
std
jle
push
rcrb
daa
or
jnp
jno
lds
add
movsb
pop
insl
inc
rcl
scas
stos
add
xor
sub
and
clc
or
aas
pop
popa
inc
push
stos
cmp
out
add
xor
in
cli
push
sbb
xchg
mov
sbb
pop
mov
aad
in
dec
int
add
jno
and
ret
hlt
out
mov
mov
cmp
in
mov
loop
andb
xlat
push
dec
ds
scas
jp
pop
add
adc
call
and
inc
and
shll
xor
jne
inc
lahf
dec
mov
gs
sbb
push
test
xchg
xchg
jle
pop
shrl
sbb
mov
and
add
and
dec
xor
xor
and
add
and
jo
jmp
add
or
jp
xchg
xor
adc
adc
mov
cmpsb
sub
cmpsl
insl
or
sub
mov
cmp
add
flds
dec
and
aam
sub
cmpb
sbb
mov
dec
push
xor
pop
dec
mov
sbb
loope
ljmp
jbe
dec
mov
shrb
pop
shll
fsts
xchg
mov
mov
int
sub
scas
xchg
lea
jg
push
loope
push
mov
push
mov
data16
hlt
jmp
in
test
fisubrs
loope
and
fcoms
pop
fcmovne
and
addb
xor
cmc
stos
cmp
enter
or
push
mov
and
lods
inc
mov
xor
and
dec
rcll
mov
mov
data16
cmp
mov
ljmp
mov
fs
gs
push
dec
test
out
pushf
push
fxch
and
sub
ret
in
dec
mov
data16
mov
outsl
sbb
loop
dec
insl
out
mov
lods
sbb
data16
and
aam
or
sbb
push
fstl
pop
mov
sub
sbb
scas
sahf
pushf
std
jo
inc
fldenv
mov
ds
lods
fstps
scas
and
sub
lret
aaa
xchg
sbb
or
push
add
dec
or
and
cld
lcall
mov
and
popa
pop
and
cmp
jno
and
das
and
enter
mov
int3
xor
xchg
andb
shl
imul
xchg
jno
or
jecxz
repnz
adc
ret
stos
cmc
test
cltd
pop
add
fdivrl
dec
cld
ss
das
ret
loopne
popa
dec
je
and
enter
mov
and
sahf
int
cmpsl
add
outsb
xchg
fisubl
popf
into
jnp
lods
lods
imulb
and
sbb
xchg
scas
inc
fisubs
push
shrb
xor
push
mov
loope
push
out
jno
inc
rcrl
shrb
and
mov
mov
cwtl
xchg
repnz
or
dec
push
and
mov
sbb
arpl
and
es
enter
adc
cmpsb
cmp
xchg
sahf
ret
jae
sub
sub
add
and
pop
repz
and
and
imul
ja
inc
mov
dec
jno
in
lods
sub
xchg
pop
mov
scas
push
mov
hlt
lret
out
xor
insl
sahf
mov
dec
icebp
int3
push
mov
test
and
sbb
ret
xchg
jno
jl
cmpsb
adc
mov
and
ss
mov
pop
xchg
dec
jns
push
or
repnz
push
adc
cmp
jmp
inc
adc
fbld
iret
andl
and
dec
mov
push
stc
test
jo
cmpsl
mov
xchg
add
jmp
lea
ss
loope
inc
popf
push
movsl
roll
mov
lahf
xchg
cmc
mov
gs
jb
push
or
insl
sub
add
dec
mov
mov
adc
cmp
pop
mov
inc
cmp
in
fs
jns
or
stc
and
cltd
and
xchg
jae
inc
inc
ret
cmpl
mov
fsubs
in
test
out
jne
gs
fcomi
inc
jnp
push
inc
inc
mov
das
ds
dec
movsb
or
add
cli
sub
and
and
push
sub
push
inc
and
out
mov
nop
out
ja
aam
push
mov
lahf
std
and
popf
xchg
mov
dec
jmp
push
movsl
shl
hlt
push
xchg
movsb
dec
sub
lods
mov
cmp
jecxz
scas
inc
sbb
and
imul
sub
cmp
jns
movsb
test
rol
or
in
sbb
add
aas
adc
dec
pop
mov
rorl
pop
lahf
cli
aaa
mov
cmp
mov
fsts
aam
loopne
sbb
xchg
cmpsl
sub
and
lock
mov
je
shrl
adc
inc
out
loopne
jge
mov
or
cmc
lods
xor
and
cli
inc
and
hlt
mov
push
cmp
js
lret
xor
pop
and
mov
enter
mov
sbb
movsl
xor
test
cmpsb
movsb
sbb
pop
cmp
inc
jge
popa
mov
adc
int3
push
adc
dec
mov
inc
cmp
out
pop
xchg
ja
mov
cmp
scas
nop
lret
insl
push
xchg
ss
sub
push
cmp
popa
push
sub
hlt
in
movsb
enter
dec
adc
fwait
lods
adc
test
and
cmp
xchg
stc
and
cmp
test
sub
pop
cmp
jle
xchg
or
test
popa
jecxz
das
jp
xchg
in
and
push
pop
mov
mov
and
int
mov
scas
arpl
add
fldcw
adc
sti
loop
cmpsl
xchg
jae
jg
in
mov
add
pusha
xor
sub
sub
in
sti
xor
jle
sub
pop
movswl
push
inc
sbb
repz
add
mov
mov
mov
and
sbb
xor
inc
aas
aaa
ret
add
mov
sub
xchg
add
and
cmpsb
pop
pop
dec
and
jno,pn
and
in
sub
mov
mov
dec
pop
test
cmp
imull
lds
jmp
mov
stos
cwtl
pop
scas
loop
outsl
and
pop
add
sbb
bound
insl
inc
gs
jne
push
xchg
or
mov
sbb
test
pop
sbb
xchg
add
dec
emms
xchg
int
adc
nop
mov
mov
repnz
mov
aam
mov
cs
xchg
fsubs
mov
loope
in
popa
ret
outsb
sbb
sub
hlt
testb
inc
mov
xor
jg
mov
push
clc
js
mov
and
dec
pop
xchg
repnz
in
cmpsb
and
add
mov
jl
push
out
in
sub
jmp
add
outsb
bound
jns
mov
das
and
add
pushf
loop
xor
mov
test
inc
xor
add
xchg
xchg
loop
mov
daa
and
lret
dec
mov
push
lahf
cwtl
popf
mov
mov
inc
xlat
aas
scas
movsl
out
or
jle
and
cmpsb
inc
push
test
pop
mov
and
push
sbb
and
dec
xchg
mov
or
lahf
pusha
repnz
movb
test
jne
mov
jbe
aas
es
popa
sbb
daa
push
cmp
cmp
inc
xor
pop
jns
and
cli
xor
enter
out
mov
orl
fwait
jae
mov
lds
mov
inc
int3
fcoml
pop
inc
shrl
sbb
out
movzwl
shr
jo
sub
je
push
insb
or
push
imul
test
adcb
add
aam
and
hlt
cmp
push
imul
cld
cmp
jnp
pop
daa
adc
pop
or
jno
out
sub
dec
rolb
add
jb,pt
pushf
xchg
push
je
and
lret
mov
push
pusha
and
pop
mov
and
lahf
mov
dec
or
mov
cld
popa
test
mov
jmp
rclb
mov
aam
sub
int
and
xchg
ds
xchg
inc
and
repz
and
push
bsr
icebp
mov
js
jmp
pop
and
xchg
cmpl
and
mov
fsubrs
dec
shlb
push
insb
dec
xor
or
rol
adc
jge
sub
and
cmpsb
push
int3
das
into
and
cmpb
mov
pop
sarb
push
inc
dec
mov
lods
fsubp
xlat
adc
and
ljmp
lcall
pop
xlat
js
xchg
and
sbb
call
push
mov
add
stos
icebp
lahf
sbb
add
dec
clc
imul
hlt
and
arpl
jg
int
mov
or
push
loopne
shll
or
push
orb
jno
sbb
popa
adc
push
ja
xchg
mov
fmul
cmp
repnz
fwait
and
popa
imul
enter
mov
sbb
fdivrs
mov
push
sar
xchg
sbb
push
ljmp
lahf
mov
and
or
mov
mov
in
lods
imul
daa
pusha
adc
test
mov
or
cwtl
sbb
pop
adcl
lcall
inc
jnp
mov
add
lods
and
outsb
ss
cli
inc
das
fdivrl
and
subl
repz
outsb
or
mov
iret
or
pop
aas
push
mov
movsb
inc
push
adc
movsb
cmpsb
lahf
cmp
out
push
fwait
cwtl
pop
pop
and
mov
cltd
mov
sarl
movsb
mov
mov
xchg
mov
popf
and
loop
pop
jg
fwait
cmpsb
mov
xor
pop
loopne
and
mov
mov
sub
insb
add
jbe
and
mov
andl
es
sti
and
inc
xchg
xor
enter
es
push
adc
aas
cwtl
and
and
jecxz
jmp
push
jle
inc
hlt
lods
and
insl
rcll
sub
and
outsl
movsb
pusha
pop
adc
aaa
and
jno
fcmovnbe
mov
lret
out
jo
xor
and
adc
imul
push
in
xor
ret
and
nop
dec
mov
out
sub
sbb
subb
jmp
sbb
in
pop
les
rcll
push
sub
nop
mov
pop
jge
and
add
and
into
and
divb
mov
cmpsl
push
jmp
and
int3
push
and
mov
adc
fadd
lock
test
cs
add
and
negl
mov
dec
cmp
and
mov
push
and
fwait
cli
or
aad
pop
in
and
jge
fisttps
aas
repz
lds
xor
popa
nop
test
repnz
sti
add
mov
adcl
push
call
dec
sbb
xchg
lahf
and
out
sbb
and
test
dec
and
jg
aaa
and
mov
clc
or
push
pop
out
aas
inc
push
mov
popa
frndint
xchg
lock
testl
and
daa
and
rorl
or
adc
add
mov
aam
mov
mov
sub
sbb
inc
es
insl
xor
cmp
xorl
movsb
pushf
sub
cmp
sbb
outsb
cmp
or
jno
mov
push
cs
nop
out
add
lods
movsl
cmp
and
jns
sbb
pop
or
xchg
lret
pop
outsl
cmp
jae
sbb
and
xchg
mov
sar
and
gs
hlt
cmc
and
pushf
lods
test
imul
scas
and
insb
mov
pusha
lods
fs
ret
mov
inc
imul
sub
or
test
mov
and
das
sbb
inc
loopne
dec
dec
and
adc
push
ret
jmp
add
test
push
fwait
push
shll
pop
jmp
repnz
jnp
aaa
or
push
into
mov
pop
mov
lods
popf
out
sbb
mov
lds
scas
push
push
fisttps
pop
and
loopne
int
mov
rorb
push
mov
adcb
add
jmp
dec
je
mov
inc
insl
sbb
ds
sbbl
sbb
rclb
and
push
das
inc
add
and
repz
fstps
fidivl
and
lds
jecxz
xchg
in
cmpsb
fcomps
fsubp
ljmp
enter
pop
jg
jl
push
push
pop
jecxz
mov
xor
inc
and
sbb
loop
pop
cs
mov
test
mov
jno
out
add
sar
rorl
daa
pop
pop
insl
sub
fdivs
sub
xor
out
inc
mov
std
mov
movsl
xchg
jp
ljmp
das
call
in
and
pop
push
and
jg
hlt
negb
lods
das
pop
mov
lret
fidivrl
decb
push
mov
imul
cld
mov
fisttpl
lods
in
scas
mov
mov
pushf
jg
push
xchg
imul
aam
imul
xchg
pop
sub
sub
mov
popa
sbb
mov
cmc
sbb
xchg
ja
test
xchg
and
daa
ss
aad
pop
mov
leave
adc
sub
pop
sub
es
or
in
sahf
popf
xchg
or
aas
leave
dec
int3
mov
inc
mov
push
and
lret
in
shrb
mov
cld
dec
jnp
and
cmpsb
xlat
rolb
adc
in
addr16
test
clc
mov
fsubs
xor
mov
adc
inc
insl
jecxz
clc
and
dec
fs
and
mov
mov
and
cmp
adc
int
imull
jne
jb
fcomps
aas
push
fimuls
daa
push
and
popa
jae
sbb
xor
mov
repz
lods
lret
and
and
and
testl
add
push
lcall
stc
insb
xorl
xor
pop
cmp
mov
and
inc
repz
andl
xchg
stc
pop
fadds
popa
push
mov
in
idivb
and
loop
insl
data16
mov
in
pop
popf
xorl
cmpsl
xor
rolb
inc
mov
and
enter
insl
sub
repz
mov
int3
and
push
lret
push
aaa
movsb
cmpsb
sub
jno
inc
mov
imul
in
add
mov
dec
pop
sub
cmp
out
adc
rolb
xchg
mov
mov
xor
scas
test
push
lods
sbb
xor
pop
pop
addr16
xchg
fwait
test
xchg
and
loop
mov
call
xor
sahf
mov
out
push
mov
cwtl
dec
xor
lods
sub
cmp
stos
pop
aam
push
mov
sbbl
xchg
sahf
jno
and
xchg
fdiv
cli
arpl
test
mov
cmc
jno
xchg
rcll
mov
inc
xchg
mov
mov
push
and
dec
lock
and
insl
into
add
cmp
es
pop
inc
xchg
adc
xchg
lret
das
mov
push
dec
cli
cmpl
divl
jmp
add
mov
test
pop
icebp
sarl
cmp
sbb
outsb
ds
pop
pop
insb
out
popa
ljmp
mov
in
xor
call
outsl
fildll
inc
fsubrs
sti
and
repz
popf
in
pop
and
sti
jmp
jmp
or
nop
adc
mov
mov
pop
mov
adc
jl
mov
xlat
push
ds
out
jne
xchg
and
movsl
mov
sub
lods
pop
pop
ds
push
push
pop
and
fistl
testb
push
mov
pusha
pop
or
xor
lods
add
xchg
pop
xor
js
xor
ficomps
or
imul
aaa
shlb
xor
call
lods
sti
xor
insb
mov
xorl
sub
and
and
push
adc
inc
mov
test
sbb
sub
lcall
mov
pop
jo
xchg
movsb
iret
test
in
lahf
loop
jns
shrb
add
pop
or
std
xchg
cmp
dec
cmp
in
fldt
xchg
mov
aas
das
mov
mov
lds
andl
popa
fildl
xlat
call
xor
dec
xor
adc
loope
push
or
and
xchg
aam
mov
imul
and
mov
repz
add
jle
movsb
ret
cmp
movsl
popa
xor
inc
dec
xchg
xchg
jo
inc
mov
xlat
mov
inc
push
and
aas
test
movsl
and
bound
inc
pop
and
insb
fstpl
mov
sahf
jno
xchg
sub
cli
mov
dec
popa
dec
add
movsl
dec
enter
xchg
sbb
clc
push
jbe
aam
cmp
push
dec
test
sub
or
and
xchg
add
and
adc
hlt
adc
enter
int3
and
push
cmpb
insl
ds
pop
in
adc
xchg
jae
add
outsl
lret
sub
xchg
xor
adc
in
adc
jp
mov
mov
mov
cmpsl
xorl
push
push
loope
or
jmp
into
pop
out
and
sbb
push
xor
rcll
xchg
arpl
mov
push
sub
mov
sub
jae
mov
jmp
fnstcw
pop
jno
push
xor
mov
out
icebp
mov
adc
dec
fstl
cmpsl
insl
xchg
xchg
andl
loopne
inc
mov
fwait
jnp
cmp
push
dec
xchg
scas
xchg
and
fbld
scas
mov
mov
and
dec
mov
outsl
mov
imul
insl
pop
shl
pop
daa
and
fisubrl
cltd
push
mov
and
test
sub
cs
inc
mov
int
fisubrs
push
shl
xor
rclb
aas
and
lahf
pop
pop
push
xor
arpl
in
jns
inc
je
xchg
mov
lahf
push
movsb
out
jmp
pop
push
add
mov
pop
cmp
dec
bound
dec
imul
lods
xchg
and
adc
cmp
popf
xchg
and
xor
or
data16
out
mov
jo
sahf
cltd
mov
fistps
scas
imul
xor
jne
js
jmp
gs
pop
cltd
and
aas
push
dec
mov
jne
repnz
mov
dec
sahf
gs
push
add
scas
cmc
cmpsb
mov
fistpl
adc
test
sub
outsb
scas
das
sbbb
add
subl
into
test
mov
sar
and
ss
push
and
outsb
add
sub
je
mov
and
pop
arpl
imul
sbb
mov
cwtl
jne
ja
lock
sub
adc
and
fsubl
mov
mov
pop
and
outsl
jl
adcl
jmp
loop
fistpll
push
mov
xor
popf
jno
inc
mov
call
adc
pop
add
xchg
ljmp
add
fmuls
push
push
gs
adc
andl
jns
jbe
and
fnstsw
cmp
sub
xchg
and
test
movsb
and
repnz
sahf
mov
shl
enter
cmp
xor
iret
aaa
cmp
inc
add
adc
aam
lods
loop
aas
mov
push
sub
sti
sub
and
mov
jb
les
mov
dec
stc
popa
jle
mov
pop
lock
and
test
shll
imul
xor
add
and
lret
fiaddl
sti
roll
and
outsb
jns
fwait
movsb
xchg
fimuls
out
loope
dec
xor
and
pop
push
orb
jae
push
sub
and
fnsetpm(287
les
or
int3
insb
pop
mov
popf
cs
and
mull
ljmp
daa
ret
setne
test
imul
mov
push
and
out
nop
or
pusha
dec
jae
and
push
mov
jle
cltd
clc
dec
and
out
sbb
and
iret
cmp
xchg
inc
sub
sub
loopne
andb
sub
ja
push
scas
and
push
rolb
fcmovnbe
mov
loopne
loope
test
pop
xlat
popa
push
out
nop
inc
fsts
or
rcl
jle
sub
xor
lock
je
xor
and
test
and
scas
jno
and
dec
adc
fadd
sbb
add
xor
and
mov
insb
movsl
scas
adc
movsb
out
int3
aaa
mov
sbb
jg
out
repnz
mov
mov
test
mov
insb
ljmp
mov
ret
xchg
lcall
pop
insb
xor
and
out
cmp
nop
aad
mov
loop
mov
jno
cmpsl
inc
dec
add
sub
std
xor
sub
fbld
cli
mov
lds
ljmp
outsb
cmpsl
in
and
add
xor
pop
xor
jo
loope
adc
lahf
mov
inc
mov
and
rcll
push
stos
push
lahf
mov
xor
xorl
js
fstpl
fistpll
mov
sub
sub
mov
and
jmp
in
mov
seta
push
mov
mov
or
outsl
outsl
jp
stos
out
mov
loope
movsb
mov
roll
fists
or
push
and
mov
lods
mov
adc
pop
cmp
popa
out
mov
and
or
or
sub
sbb
fnstenv
push
mull
inc
inc
mov
jmp
sub
cmp
fldcw
mov
rcrb
sti
dec
mov
int
pop
movsl
ret
mov
popa
or
gs
jno
call
fs
leave
adc
bound
xor
adcl
ljmp
jne
inc
adc
cwtl
dec
sahf
cmpsb
xchg
gs
and
fldcw
and
pop
xchg
stos
scas
push
mov
lds
repnz
ficomps
popa
push
adcl
sti
jle
dec
cmp
mov
lods
and
jg
add
adc
in
and
sub
pop
lds
jmp
out
das
sub
bound
mov
and
ljmp
jns
pop
xlat
movsb
fwait
adc
aas
nop
mov
fwait
sub
xor
jl
pop
fisttpl
clc
fdivrs
mov
and
push
inc
mov
mov
jnp
and
repnz
clc
addl
sbb
xor
imul
mov
cmp
ret
or
lret
sbb
inc
xor
sbb
xor
push
andb
ss
cmp
sbb
xor
and
mov
aam
add
daa
inc
rcr
fnstsw
movsb
mov
xchg
cmc
jmp
std
and
mov
xchg
test
mov
mov
js
mov
dec
and
mov
sahf
xor
test
push
flds
js
mov
mov
mov
mov
xor
in
iret
ja
xor
mov
loop
jns
push
cs
insl
mov
out
lock
sub
add
inc
add
xor
inc
and
mov
cwtl
insb
and
bound
fwait
mov
xor
pusha
rol
and
dec
sbbl
out
jbe
jle
test
and
pop
mov
and
icebp
or
xchg
jl
xchg
push
push
mov
xor
and
jnp
addl
xlat
mov
pop
jns
jl
push
and
push
lods
in
dec
aam
add
mov
sarb
sbb
pop
and
xchg
jbe
and
dec
push
and
in
stc
shr
xchg
mov
test
xor
mov
frstor
inc
xorb
jmp
add
mov
pop
jns
and
loopne
sub
sub
jmp
mov
mov
and
inc
xchg
mov
and
lea
aad
test
mov
daa
in
lahf
push
addl
loopne
popa
iret
add
test
repz
out
jecxz
nop
pop
adc
rcrl
fdivrl
mov
mov
cmp
xchg
push
add
mov
mov
sbb
out
and
mov
xor
lods
push
popa
test
sub
mov
rolb
std
mov
and
movsb
hlt
cmpsb
jno
sub
leave
call
es
and
cmpsl
sbb
and
sbb
jp
xor
cwtl
insb
cmp
fwait
lret
call
stc
popa
cltd
es
and
mov
dec
mov
inc
ds
push
imul
fidivs
nop
mov
sub
adc
pop
sub
sub
add
cmp
and
dec
dec
xor
call
test
in
loope
stos
jae
cmp
sub
mov
inc
shl
mov
sub
lods
stos
and
mov
shr
imul
mov
aas
cwtl
sub
xlat
xchg
jg
cmp
pop
dec
and
mov
mov
jecxz
gs
push
mov
sub
cmp
ja
ret
and
test
xchg
xor
fcompl
sarb
mov
std
mov
and
ss
movsb
mov
cmp
out
lret
or
mov
or
jmp
gs
jne
in
pop
mov
cwtl
lea
add
dec
xchg
loop
out
fdivrs
add
and
lods
nop
aam
insb
jb
and
loope
or
xchg
and
movsl
lea
inc
in
push
jno
sub
pop
pop
or
repnz
and
mov
std
stos
andl
jno
scas
ja
pop
adc
int
addb
xchg
fimull
dec
and
mov
xchg
test
push
test
das
rolb
cmpsb
cmp
or
jle
loope
push
mov
js
jbe
test
cmp
and
add
les
aaa
mov
pop
das
mov
icebp
push
in
clc
and
scas
mov
dec
test
xchg
and
mov
and
sub
outsl
push
pop
cmpsb
and
xor
push
lock
ljmp
test
data16
dec
hlt
inc
cltd
aam
scas
mov
xchg
sbb
mov
adc
jge
popa
fwait
add
test
out
cld
sub
mov
push
add
fstpl
and
mov
mov
out
shrl
and
add
lea
test
cs
shll
pop
ja
ret
xchg
cmp
jl
lods
mov
lods
push
and
add
repz
cmp
mov
out
mov
fld
xchg
repz
stos
pusha
mov
data16
add
mov
and
orb
loope
jno
test
mov
outsl
mov
or
push
fildll
and
sbb
imul
mov
sub
and
pusha
int3
and
mov
push
xor
mov
adc
jae
jbe
out
mov
and
mov
mov
mov
test
pop
cmp
incl
add
movsb
mov
imul
adc
daa
xchg
leave
and
repnz
jno
and
inc
xchg
mov
fcmovne
popa
lods
jo
pushf
inc
and
aam
inc
dec
js
and
lahf
jns
push
out
inc
pop
sti
and
or
push
cltd
enter
and
mov
test
jp
iret
mov
or
xchg
adc
push
mov
hlt
cmpsl
and
test
xor
lock
cmp
mov
xor
cmpsl
inc
or
je
add
test
icebp
lcall
sahf
push
and
xchg
mov
popa
cltd
outsl
aam
lods
mov
xchg
mov
js
mov
adc
stc
leave
mov
dec
push
jle
movsl
fcmovb
pop
mov
loopne
xchg
js
or
and
popa
sub
andl
punpcklwd
push
loop
mov
push
pop
mov
arpl
sahf
scas
icebp
imul
adc
test
adc
mov
hlt
pop
pop
push
enter
sbb
adc
dec
test
xchg
dec
std
in
loopne
and
or
mov
in
lahf
inc
out
and
fwait
or
test
jmp
and
sub
enter
stos
push
mov
popa
dec
ud0
and
outsl
xor
mov
sub
je
push
jno
fisubl
cwtl
jae
push
movsl
adc
pop
outsb
mov
mov
iret
xchg
mov
push
inc
push
lock
fisttpl
mov
loop
es
or
je
sub
or
push
adc
iret
out
or
add
into
rolb
js
sub
and
cmp
mov
and
inc
sarb
leave
sti
and
popa
sar
xor
pminsw
into
and
and
jg
out
or
xor
and
inc
mov
and
lods
insb
ljmp
loopne
push
and
mov
bound
test
jne
rcrb
mov
scas
push
icebp
sbb
push
mov
pop
jae
adc
sub
and
pop
fidivs
cwtl
jnp
dec
aad
inc
mov
ds
sub
aaa
pop
bound
in
fistl
test
js,pt
cltd
movsl
imul
iret
shl
jno
xor
xor
bound
test
cmp
shll
ret
popf
and
and
test
dec
jmp
push
mov
mulps
int
inc
arpl
mov
aaa
addl
mov
cmp
jge
aam
and
clc
xchg
xchg
shrb
sti
inc
mov
jecxz
cmp
dec
movsb
jmp
sti
subl
fisttps
ss
pushf
and
movl
repz
pop
xor
aas
rcr
sub
adc
xor
xchg
ss
imul
cmpsb
roll
jae
or
and
or
cs
aas
xor
and
xchg
and
xor
mov
popf
dec
xchg
pop
scas
rol
and
cmp
scas
push
add
das
test
sbb
ljmp
add
addr16
loopne
in
leave
xchg
and
and
mov
xchg
icebp
sbb
gs
add
les
adc
jo
push
js
sbb
or
cltd
hlt
push
mov
xchg
lock
scas
js
outsl
mov
jbe
lds
in
int
jl
lret
mull
insl
push
repnz
jmp
mov
imul
jecxz
xchg
daa
and
mov
dec
lcall
pusha
push
and
ret
push
jo
sub
int3
cmpl
ret
jne
inc
push
mov
out
fwait
xchg
add
jle
lea
mov
test
lock
icebp
je
push
aas
sbb
sbb
jno
ret
mov
pusha
pop
stos
xor
jbe
add
nop
mov
cmp
test
fldenv
imul
mov
push
jno
out
das
stos
shrb
les
jo
mov
adcl
repz
lcall
sbb
and
inc
xchg
push
mov
ficoml
fwait
stos
movsl
and
ja
out
fistpll
imul
lods
xchg
imul
dec
cmc
aaa
fisttpl
mov
popa
sbb
pushw
add
mov
mov
or
mov
in
mov
and
cli
mov
dec
aaa
push
add
scas
rcll
pushf
inc
cmp
cmp
jl
lods
rcll
movsb
xor
ss
test
repz
cmp
mov
push
and
scas
and
ret
ds
xchg
arpl
fwait
and
scas
inc
add
sub
out
fnstsw
lea
cmp
dec
mov
and
cmpsb
mov
dec
mov
add
sbb
lock
and
add
cltd
dec
into
cmp
sub
xchg
outsb
mov
sbb
lcall
inc
movsl
test
inc
xor
pop
and
out
xchg
addr16
addr16
xchg
and
fdivl
inc
dec
and
xorl
lret
and
cmc
dec
sub
imul
and
xchg
xchg
jnp
repz
inc
cmp
and
pop
sub
add
cltd
sub
inc
sahf
dec
fldt
mov
lret
push
jnp
fisttps
push
and
inc
popa
mov
add
imul
in
mov
add
adc
out
and
or
sbbl
movsl
cmp
pop
and
adc
add
mov
fwait
jnp
and
repz
rorl
sub
rorb
hlt
clc
dec
test
in
xor
push
subl
movsb
mov
cltd
dec
std
mov
cmp
and
fldenv
dec
adcl
das
push
inc
dec
xlat
push
test
call
dec
inc
popa
sbb
xchg
sub
xor
and
ljmp
loop
out
mov
scas
lods
lock
jnp
or
xchg
or
inc
jns
mov
imul
cmpl
adc
das
gs
loopne
in
xor
pop
and
jno
arpl
out
sub
fdivr
scas
lcall
jl
mov
mov
insb
xchg
pop
cld
mov
or
imull
addr16
popf
fldl
inc
fldl2e
cmp
out
outsb
mov
iret
mov
inc
adc
loopne
mov
pushf
and
jmp
xchg
cmp
push
pop
mov
inc
and
pushf
xor
ds
mov
das
add
and
jmp
idiv
daa
dec
push
inc
xor
addr16
mov
aas
xlat
cmp
sub
sbbb
lods
jns
add
stc
mov
inc
test
dec
rcll
and
mov
mov
push
and
mov
xchg
ja
test
lods
and
xor
hlt
popf
shrl
int3
mov
and
and
xchg
pop
jge
jmp
pop
and
ss
push
iret
cmp
int3
jno
jp
push
repz
in
mov
or
inc
cltd
pop
outsb
and
adc
dec
andb
dec
cltd
gs
cmc
aam
fcompl
mov
sarb
pop
and
inc
add
inc
and
shl
and
mov
or
push
push
push
pop
mov
repnz
ljmp
and
mov
mov
pop
xor
cli
shlb
mov
test
or
gs
sbb
hlt
push
mov
pop
dec
xchg
and
mov
into
inc
and
xlat
or
inc
inc
mov
and
push
imul
lods
and
and
xchg
jg
dec
and
mov
xchg
or
cmp
xchg
aas
jmp
add
cli
test
das
sarb
les
and
clc
shrl
mov
and
jg
loopne
insl
or
fcompl
repnz
xor
jns
das
lds
xor
in
gs
push
and
rcrb
mov
stos
ja
mov
fwait
sub
xlat
loop
push
imul
cmp
mov
push
and
and
sub
mov
dec
insl
pop
test
inc
cmc
lock
leave
xchg
enter
js
adc
xor
testl
add
sbb
xchg
out
xor
xlat
xchg
cmp
or
fistl
add
in
arpl
mov
mov
xchg
icebp
shrl
mov
push
lret
jb
cmp
and
jle
in
lods
subl
gs
and
xchg
jmp
mov
mov
or
inc
inc
push
inc
icebp
nop
andb
aam
push
mov
clc
iret
and
loopne
push
insb
inc
jmp
inc
and
or
scas
int
popf
mov
add
pop
mov
push
mov
pushf
shrb
and
clc
insl
adc
adc
cmp
push
mov
mov
cli
add
hlt
adcl
popa
sahf
in
cli
xor
and
call
adc
or
lahf
push
add
and
std
xchg
test
sbb
test
cmp
leave
inc
je
mov
dec
imul
and
inc
push
push
popa
addr16
mov
mov
and
cld
shrl
lock
mov
int
pusha
inc
js
cltd
jb
xchg
mov
sbb
sub
mov
jno
pop
in
outsb
insb
push
and
out
xor
push
mov
stos
or
mov
movsb
sbb
and
mov
jae
xor
and
inc
subl
jbe
xchg
push
and
jno
and
stos
popa
out
jnp
inc
fcmovnbe
and
sub
and
pop
adc
movsb
shl
add
aas
xchg
and
xchg
add
iret
pop
inc
movsl
mov
into
imul
mov
mov
imul
xor
arpl
js
pusha
and
mov
xor
pop
movsl
jle
mov
repnz
xchg
xchg
push
adc
xor
inc
push
and
push
out
mov
inc
add
cmp
dec
jno
dec
js
cwtl
and
adc
add
and
leave
rol
inc
cmp
push
loope
xchg
data16
cmpb
and
xchg
pushf
scas
adc
and
inc
aas
addr16
jg,pt
and
arpl
lods
fistps
sub
jle
pop
xor
movsb
jge
loope
insl
andl
in
xchg
sbb
cmpsl
and
pusha
aad
sub
jb
dec
mov
jecxz
int
add
iret
cs
push
add
mov
dec
and
insl
imul
cmp
fldl
les
out
stc
iret
jno
lahf
cwtl
mov
test
push
aas
sub
mov
loope
mov
js
fsts
mov
stos
sti
orl
jle
gs
fisubl
cmpsb
mov
dec
mov
sub
jb
popf
movsl
mov
sub
cmp
lcall
xchg
mov
sbbb
push
imul
xchg
fldt
or
loopne
pop
or
mov
cs
sub
bound
jp
outsl
and
insb
rolb
ficoml
or
jge
daa
and
lret
inc
pop
bound
ss
or
push
and
cmp
and
or
mov
inc
or
and
add
mov
sbb
sub
sub
jecxz
bound
xor
xchg
gs
mov
pop
mov
xor
xchg
push
sti
fsubs
pop
mov
das
in
int3
mul
jecxz
or
jno
outsb
jns
mov
clc
xchg
dec
rorb
jl
int
mov
mov
push
cmp
enter
insl
xchg
mov
popa
push
lcall
sbb
repz
hlt
movsl
mov
stos
mov
fsubrs
ret
mov
or
repnz
jl
and
jo
sub
sbb
jmp
lods
scas
cmp
repz
insl
pop
mov
add
insb
or
or
pushf
les
push
cmpsb
lahf
fcomi
popf
out
push
jb
out
cmp
pop
shlb
setns
and
loop
mov
addr16
mov
iret
sub
loopne
shlb
imul
scas
mov
aaa
jbe
cmc
popa
scas
arpl
popa
fdivr
imul
xchg
je
aas
xchg
cs
scas
dec
adcl
jp
insl
int
cli
es
push
push
jns
mov
repz
lea
and
cmp
js
shr
mov
fs
inc
imul
ds
dec
pop
testb
and
mov
bound
inc
add
jno
or
cmp
and
mov
mov
jno
jle
aaa
jg
jns
out
mov
test
xor
or
dec
addr16
and
orl
xor
and
and
cmp
mov
test
sbb
ljmp
insl
or
or
lahf
mov
add
out
rcll
into
popa
add
pop
in
jb
add
push
cld
loopne
ret
adc
ss
ljmp
lods
cmp
and
aaa
shll
bound
ret
and
int3
or
inc
repnz
daa
shl
push
popa
je
loopne
and
mov
pop
int3
test
xchg
sahf
and
test
jle
xor
cwtl
xchg
lock
pop
sub
mov
or
dec
insb
mov
out
fidivrs
cltd
xchg
pop
lret
sbb
movsb
pop
sbb
push
pop
imul
push
test
and
sti
jmp
mov
mov
and
and
fadd
in
popa
sub
dec
xchg
insl
in
xor
call
pop
sub
push
sbb
sub
inc
push
pop
xchg
push
jl
das
xor
mov
cs
xchg
lahf
mov
mov
out
mov
shll
adc
and
cmp
mov
aad
xchg
leave
pop
sbb
lahf
fnstsw
dec
push
in
and
mov
jp
sbb
insb
pushf
and
inc
and
sbb
flds
jns
popl
movsb
outsl
mov
in
adc
jo
imul
lret
gs
lea
pop
pushf
es
mov
out
jmp
jno
test
or
xor
popa
sub
adc
mov
mov
and
sbb
pop
and
lock
mov
fistpl
rolb
mov
ljmp
in
fwait
ret
mov
loopne
dec
add
adc
out
das
sub
push
movsl
popa
popa
xchg
inc
xchg
xchg
jnp
outsb
sub
repnz
lock
dec
gs
lret
ds
fisubs
xor
add
test
cmp
repz
lods
xlat
adc
adc
frstor
daa
out
gs
outsl
mov
mov
and
xor
into
cmp
int3
test
and
inc
out
stos
daa
pop
mov
mov
cmp
pushf
ss
pop
frstor
pop
jbe
or
mov
and
cli
adc
cmp
and
dec
lret
dec
insb
dec
and
movsb
mov
and
out
mov
xchg
and
cmpsl
inc
mov
xor
es
or
daa
and
sbbl
pop
cmp
test
lret
mov
sub
cmp
cmp
out
shrl
dec
cmp
out
popa
xlat
lret
and
adc
or
cmp
and
mov
jo
push
mov
out
adc
push
inc
pusha
and
dec
or
and
lret
push
mov
cli
mov
fwait
popf
shrl
ljmp
ja
out
push
or
rclb
cmp
jmp
mov
shl
and
or
dec
and
add
enter
and
movsb
push
gs
cmp
and
push
inc
or
addr16
jecxz
dec
cmp
mov
je
inc
push
mov
mov
insl
jno
inc
mov
test
cmp
shrl
daa
test
js
push
and
call
and
fwait
pop
stos
movsb
mov
hlt
lret
fldlg2
lcall
xlat
pushf
orl
pusha
movsb
xchg
in
inc
push
dec
imul
push
inc
or
pop
push
add
add
clc
scas
sbb
ja
and
out
xor
cmp
pop
and
fwait
das
scas
push
lcall
subb
add
ret
cli
mov
cltd
or
xor
mov
icebp
add
in
enterw
scas
cmp
jle
sub
fisubrs
xchg
dec
jge
mov
repnz
adc
rcrb
mov
popa
les
icebp
lret
scas
dec
scas
xor
jge
int3
stos
fwait
and
mov
dec
add
and
sbb
add
movsb
inc
lds
mov
imul
sbb
cltd
add
mov
popf
or
enter
out
mov
add
and
sbb
andl
cli
popf
pop
cmpl
sub
xchg
and
or
jb
and
xchg
daa
popa
out
aam
inc
inc
sbb
call
fwait
adc
in
arpl
mov
out
dec
int3
xor
movsb
and
popf
adc
fcmove
outsb
jge
sbb
les
pushw
sub
mov
into
rorb
and
sub
es
mov
xchg
and
push
and
pop
cmp
sbb
pusha
push
add
cltd
sub
in
mov
sub
and
push
mov
ret
rorl
push
push
and
adc
stc
cli
std
xchg
fildl
and
sub
push
adc
add
cmp
int3
int
cld
movsb
repz
jne
and
xor
and
push
sbb
stos
loopne
scas
mov
pop
fildll
je
sub
movsl
sub
popa
ficoms
rclb
and
push
pop
adc
shll
insb
lret
xor
sarb
int3
in
sbb
cmp
out
mov
test
mov
hlt
and
imul
bound
sub
test
add
add
inc
add
cmp
push
jb
push
push
push
test
jg
and
aad
and
imull
cmp
xchg
cld
loope
sub
xor
adc
addr16
mov
movsl
adc
notb
cmpsb
rcrb
insb
inc
call
jb
sahf
dec
jge
mov
les
cmp
repnz
daa
xchg
cli
andl
lahf
aad
and
movsb
mov
sbb
dec
or
aaa
sub
leave
out
mov
test
push
mov
das
sub
or
aaa
jmp
pop
jns
push
or
sbb
loop
and
test
cltd
scas
test
pop
call
xor
mov
jbe
stc
roll
in
add
in
add
pop
inc
das
and
inc
sbbl
popa
clc
xor
xchg
sub
outsb
mov
add
and
dec
ret
std
and
adc
lret
sub
cmp
add
and
add
arpl
inc
out
pop
or
jns
dec
fwait
movsb
ficompl
fstpt
aas
dec
jge
popa
addr16
outsb
in
iret
mov
insb
mov
fldcw
lahf
lcall
and
dec
test
jo
sub
mov
push
out
sub
mov
and
into
dec
outsb
mov
ds
xchg
loop
in
bnd
and
repz
and
mov
call
inc
in
sub
jg
jecxz
inc
sbb
pop
test
and
adc
movsl
mulb
cmpps
push
and
mov
ljmp
test
push
mov
and
adcb
es
les
jno
sbb
or
fisttps
repnz
and
jnp
pop
mov
shl
aam
in
es
stos
and
cmp
movsb
stos
dec
jae
repz
movsb
add
xlat
lock
movsl
xchg
je
inc
jmp
mov
cmp
in
insl
and
test
aaa
and
cmp
add
repz
and
or
popa
out
in
jno
cmp
popf
xor
dec
and
or
shlb
test
xor
inc
pushf
push
pop
and
inc
das
jg
jne
clc
mov
sbb
call
jnp,pn
push
in
ret
add
loope
sub
out
pop
mov
iret
sbb
popa
rolb
aam
or
lcall
cwtl
aaa
fwait
or
fsubrl
xchg
and
inc
das
and
inc
scas
add
mov
mov
pmaxub
push
sbb
mov
std
and
pusha
push
push
cwtl
add
popa
add
and
add
jg
mov
xchg
pop
xor
mov
stc
das
icebp
fbld
inc
sahf
in
jmp
mov
ret
inc
out
jle
xchg
and
fs
push
and
fucomip
into
pop
adc
bound
xchg
cli
jnp
sbb
frstor
movsl
aad
fprem
rolb
dec
xchg
je
mov
popa
and
push
aad
push
sbb
and
adc
sbb
aam
push
mov
adc
jp
and
ret
mov
das
loop
jnp
and
xchg
je
and
sti
fcmovnbe
add
insl
sub
ja
cmp
or
jo
xchg
add
cmpl
aaa
xor
and
adc
or
movsb
fdivrs
cmp
loopne
out
mov
mov
ja
call
jne
orb
adc
pop
mov
data16
andl
dec
inc
mov
jp
lock
imul
clc
and
sbb
fbstp
and
popa
jecxz
adc
cwtl
mov
xor
loop
jne
leave
test
cli
outsl
xchg
pop
movsb
fdivl
and
push
out
scas
ja
into
and
dec
fistpl
and
cmpsl
hlt
in
lds
insl
mov
fmull
sub
mov
out
inc
outsb
mov
adc
fnstenv
pop
cltd
xor
lods
ret
jg
mov
mulb
and
jmp
daa
bound
inc
mov
adc
nop
inc
std
jle
mov
sub
xchg
int3
and
shrl
xchg
test
es
adc
pop
mov
add
shrb
adc
shlb
mov
imul
xchg
leave
push
loopne
adc
subb
ficompl
shll
sbb
fistpll
mov
dec
mov
aad
sti
push
xor
dec
stos
xchg
add
xchg
punpcklwd
xor
out
sahf
or
lods
fcoml
clc
nop
xchg
jle
insl
lcall
jno
dec
aad
lods
or
subb
push
scas
sub
push
jmp
dec
test
ds
cmp
fsubl
jne
and
mov
aas
ja
cmp
in
test
and
arpl
or
xchg
inc
cwtl
xor
push
mov
movsb
push
sti
mov
add
out
out
ficomps
mov
stos
fs
xor
and
and
or
xchg
jbe
mov
sub
add
xor
push
and
sub
jmp
cmpsb
int
imul
jbe
xor
in
cwtl
sbb
lcall
les
es
aad
xchg
and
sbbl
nop
mov
sahf
and
pop
je
fsub
icebp
jae
sbb
or
xchg
subl
xor
andl
das
jp
inc
fisubrs
stos
jecxz
lahf
and
scas
shufps
sbb
push
jle
loop
mov
sbb
test
cli
pop
jne
cmp
inc
sbb
subl
and
mov
movsb
or
cli
test
pop
cmp
cmp
loope
andb
lods
mov
movsl
fwait
icebp
movsb
pop
js
mov
fucomi
add
popf
push
test
mov
xchg
add
out
lock
and
push
idivb
mov
int
mov
in
outsb
xor
sub
je
daa
scas
das
mov
hlt
fiaddl
mov
movsl
add
jge
mov
cmp
shlb
sbb
sbb
and
out
sub
pop
mov
add
outsl
int3
add
or
inc
test
fnstcw
or
test
xchg
fbld
xor
push
sub
jns
dec
and
ja
std
lods
mov
out
and
idivb
mull
out
add
pop
jecxz
movsb
dec
in
lcall
scas
insl
inc
mov
dec
lea
adc
and
inc
stc
divb
std
cs
and
arpl
test
sbb
movsb
mov
gs
and
outsb
incl
add
addl
mov
mov
adc
pop
mov
bound
loopne
add
das
jle
and
mov
scas
and
mov
xchg
lods
icebp
into
mov
mov
mov
pcmpgtw
nop
and
jae
push
ja
in
dec
mov
add
sub
repnz
stc
mov
adc
mov
cltd
clc
enter
shrb
xchg
and
fadds
pusha
and
mov
add
xchg
mov
mov
addb
cmp
mov
cmp
test
enter
clc
sbb
popf
insl
mov
mov
jge
and
xchg
xchg
clc
mov
in
or
dec
scas
dec
jge
ret
ja
push
pop
mov
lods
lahf
and
shrb
lds
popf
enter
lcall
jp
xor
sub
mov
in
ret
bnd
outsb
lcall
mov
pop
in
les
mov
inc
ja
mov
add
inc
xor
fldenv
adc
dec
pop
pushf
sub
and
sbb
ja
into
xor
sub
inc
in
movsb
and
sub
fwait
cmp
push
jg
cmpsb
movsb
movsb
jnp
xchg
lret
pop
and
icebp
rcll
aad
nop
cli
push
out
ret
cmp
daa
push
popfw
iret
stos
adcl
in
popa
jl
xchg
cmp
scas
xlat
mov
int
and
stc
push
js
cmp
pop
sub
pop
std
cmp
push
lock
xchg
pop
sahf
xor
stc
pop
inc
mov
fldenv
cmp
cmpl
cmp
popa
or
pop
fcompl
mov
push
mov
sbb
xchg
push
xor
add
ficompl
inc
cwtl
mov
scas
push
sub
or
push
fnstenv
int3
sbb
adc
jecxz
inc
push
add
and
add
imul
loope
xchg
shll
mov
sbb
fwait
pop
dec
and
mov
and
mov
rcrl
outsl
sub
lods
and
adc
sbb
sbb
test
pusha
mov
mov
scas
cld
je
adc
ffreep
pop
mov
sbb
push
or
pushf
and
testb
pop
mov
sarl
frstor
loop
sahf
mov
and
inc
and
sahf
ret
pusha
add
jmp
rolb
jmp
pop
loope
sub
and
mov
xor
mov
jmp
js
cltd
out
scas
lcall
xchg
xlat
or
jge
mov
lret
sbb
jns
test
cmp
popa
pushf
das
mov
and
push
and
andl
xchg
fsubrs
lods
loopne
and
mov
and
pusha
shlb
rcrb
out
mov
and
cmpsl
mov
xlat
test
jo
inc
xorl
or
xchg
and
and
mov
dec
std
enter
push
out
lret
fwait
insl
dec
xchg
xchg
test
lcall
mov
sahf
jg
lock
pop
imul
adc
loop
jmp
out
rolb
popa
fsubl
pop
and
jbe
shlb
push
and
ja
stos
sbb
mov
in
and
mov
je
mov
test
and
es
repnz
and
lea
in
movsb
jg
dec
dec
push
push
insb
fs
push
mov
and
sbb
or
mov
push
int
gs
push
lret
cmp
addr16
mov
jae
and
cmp
sbb
inc
ljmp
fdivrs
mov
sbb
and
cli
xor
pop
scas
xchg
push
movsb
adc
loope
xor
mov
sub
in
inc
xor
ljmp
push
and
push
and
mov
data16
imul
push
and
cmpsb
or
maskmovq
test
sbb
adcb
xchg
mov
jge
dec
out
and
cmpsl
push
mov
sbb
fidivl
mov
loopne
and
and
lock
adc
fistps
test
add
loope
out
rcll
popf
pop
movsb
mov
lods
sahf
pop
imul
sub
nop
cld
xchg
mov
dec
arpl
mov
push
sbb
sub
pop
cmpsl
data16
and
push
ret
in
jno
add
sub
xchg
cmp
lahf
jae
sbb
loope
rol
lea
mov
sbb
mov
nop
mov
jge
fdivrl
icebp
cmp
pop
je
mov
pop
xor
rcr
adc
lods
jne
xchg
notl
fidivrs
andl
nop
call
jmp
repnz
xchg
sub
sar
jmp
clc
pushf
jle
fcmovnu
xor
lea
and
loopne
mov
aaa
inc
jl
adc
jecxz
cmp
in
xor
out
cmpsb
push
and
insl
cmp
mulb
add
outsl
scas
inc
test
cwtl
and
sti
jo
cltd
jmp
lods
and
adc
shrb
faddl
and
mov
imul
ja
insb
and
adc
aad
in
cmp
xchg
rclb
jne
mov
and
add
or
inc
ja
sti
lcall
jmp
cltd
xor
rclb
imul
gs
divb
mov
inc
lcall
push
mov
cmp
xchg
and
aaa
adc
daa
and
stos
fnstcw
adc
out
popa
jg
pop
sbb
mov
add
sub
fsts
and
xchg
stos
insl
mov
xchg
jle
and
push
mov
lds
and
push
xchg
cld
negb
push
push
mov
scas
fnsave
add
cmp
rcrb
test
mov
in
fists
sti
and
mov
fisttpl
movsl
and
dec
and
test
mov
sub
xchg
lret
hlt
pop
jnp
mov
and
je
fisubs
gs
repnz
daa
lods
and
pop
dec
iret
cmp
insl
push
fsubrl
jno
jne
loopne
and
inc
sub
sbb
out
xor
mov
mov
mov
cmp
mov
xor
mov
aaa
xlat
sbbl
dec
loopne
xor
int
enter
es
dec
mov
and
jmp
fmuls
arpl
jns
and
jbe
xchg
and
out
fsubrs
or
test
lahf
pop
and
mov
pusha
jecxz
adc
push
mov
mov
sub
test
mov
and
sbb
sub
movsl
shll
ljmp
sub
das
sbb
cmp
pop
rorb
add
insl
lahf
aad
les
insb
mov
mulb
sub
xchg
pop
jb
leave
je
inc
push
mov
xchg
add
mov
mov
mov
mov
pop
lcall
dec
sbb
std
js
or
push
les
sub
arpl
xchg
sub
cltd
xor
das
vmulsd
pop
and
push
add
sarl
les
loop
stc
rcr
outsl
inc
mov
push
adc
sbb
xchg
xchg
xchg
adc
mov
mov
fists
jmp
in
popa
mov
mov
push
mov
adc
mov
sub
and
out
mov
pop
cmpsl
or
lcall
xor
fwait
mov
popf
out
pushf
dec
and
loope
mov
imul
add
inc
dec
scas
sbb
icebp
jne
cmc
sub
popf
fwait
ljmp
push
inc
into
fstl
fs
xor
shrb
xor
cltd
test
leave
and
and
mov
test
and
cld
jo
clc
cmp
and
cmpsb
ds
jns
data16
mov
xor
and
and
sbb
and
cli
ja
in
pop
repz
enter
and
cmp
scas
push
jecxz
movsb
stc
addr16
dec
fisubl
lds
bound
scas
jmp
out
lock
fwait
jecxz
and
mov
mov
pushf
sub
xchg
mov
mov
into
popa
jp
push
pop
and
je
mov
inc
adc
popa
jmp
rcrl
addr16
mov
and
int
inc
inc
sub
dec
and
ljmp
movsb
push
and
sahf
movsb
popa
pop
in
sbbl
adc
or
mov
in
inc
clc
push
aaa
jne
jecxz
ds
sbb
dec
jno
ret
cmp
inc
aas
int
loopne
and
pop
out
mov
mov
push
in
clc
and
and
inc
mov
popa
xor
xchg
cmp
movsl
sbb
add
imulb
xchg
mov
and
pop
sti
sub
push
push
inc
inc
adc
dec
mov
xchg
stos
pop
push
jb
cmp
inc
mov
les
ss
xor
cmp
jmp
fwait
dec
xchg
pusha
add
fsubrs
cmc
ss
movsl
mov
add
and
cmp
repz
and
push
lret
movsb
dec
mov
xor
enter
mov
aad
xchg
push
das
and
cmp
fxch
or
jmp
xchg
mov
pop
and
mov
jnp
adc
pop
aas
xchg
and
mov
sbb
mov
pop
mov
sahf
sub
adc
pusha
sub
dec
jno
addr16
fwait
pop
cmpsb
aad
movsb
cmpsl
inc
pop
les
repz
sahf
and
hlt
aam
fstpt
ficomps
inc
test
jmp
je
cld
pop
and
outsl
out
mov
bswap
jge
mov
jp
xor
inc
pop
mov
xor
sti
mov
movsb
pop
inc
repz
and
testb
stos
insl
push
and
sbb
mov
stos
sbb
xlat
and
sub
in
cmc
push
inc
aas
push
push
push
shll
out
jge
fisubl
cmp
jle
out
movsl
push
cmp
movsb
shl
xchg
test
and
cltd
and
lods
jbe
fldt
xor
add
dec
jle
and
enter
jp
push
cmpsb
rcll
test
sti
and
or
mov
insl
pop
sbb
lcall
out
cmp
inc
mov
xchg
rorb
pop
and
leave
lcall
mov
inc
sbb
fs
and
jecxz
data16
add
and
fmul
mull
inc
and
push
aaa
cmpsl
push
rorl
xchg
nop
and
mov
jl
dec
sarl
sub
aam
and
mov
sbb
cmpsb
inc
les
addr16
inc
pop
inc
and
fdivrp
movsb
in
sub
pop
xchg
je
mov
mov
and
mov
int3
mov
add
sti
and
dec
xor
add
enter
popa
and
adc
pop
das
movsb
inc
daa
loop
in
push
pushf
mov
sub
pop
lret
and
dec
push
pop
sbb
push
and
dec
xchg
xor
lds
imul
mov
and
inc
mov
and
jb
push
gs
jge
add
or
xor
inc
in
popf
inc
push
push
popa
mov
cltd
sbb
mov
lock
bts
test
xor
icebp
add
lcall
ds
lahf
bound
dec
xchg
ljmp
add
jnp
cmp
sub
push
jne
mov
arpl
in
xor
das
xchg
inc
es
pop
clc
pop
pop
sbb
js
dec
push
mov
or
adc
adc
mov
popf
outsl
dec
jns
test
out
das
repz
pushf
mov
movsb
sbb
mov
pop
cmpsl
and
ret
test
testl
insl
dec
cmpsb
scas
fs
test
and
cs
mov
enter
sub
in
test
adcl
or
pop
dec
sbb
push
das
xor
bound
mov
and
push
mov
mov
mov
loope
sahf
dec
jne
push
mov
std
sub
and
inc
xchg
icebp
sub
inc
mov
and
aam
pop
stos
lret
mov
lea
sbb
arpl
xchg
xlat
insl
cmp
mov
ret
sti
push
das
pop
cmc
and
pop
mov
sub
push
fprem
lcall
inc
cmp
andb
int
xorl
test
xchg
les
shll
repnz
repz
test
mov
icebp
xchg
lock
jbe
mov
mov
xchg
mov
repz
cmp
cmp
dec
scas
and
xor
pushf
fstps
pop
loopne
and
pop
in
gs
lret
xchg
pop
and
push
cmp
and
sbbb
mov
push
push
and
imull
xchg
xlat
xchg
sub
sub
stos
imul
stc
loopne
and
cmpsb
push
dec
pop
in
fcomp
and
jmp
in
add
xchg
jne
test
movsl
mov
popa
cmp
outsb
and
mov
cmp
jmp
nop
mov
repz
xor
fbld
mov
and
jle
and
and
jnp
sub
lods
and
jb
xchg
loop
jecxz
outsb
sub
pop
xchg
ret
and
hlt
and
inc
fsubrl
cmpsl
or
mov
add
cmp
movsl
std
mov
das
mov
xor
dec
push
mov
pushf
fidivs
and
mov
insl
and
lock
jl
and
inc
stos
aam
bound
fwait
or
or
adc
sbb
in
xor
pshufw
rorb
push
mov
mov
push
lahf
popf
sub
sbbb
sub
xchg
jns
mov
test
xchg
or
lret
popa
pop
cli
lahf
ljmp
les
pop
sub
call
add
xchg
and
mov
xorl
sbb
and
jge
push
outsb
xchg
rolb
mov
insb
inc
xor
lock
sbb
cmpsb
or
cmp
adc
popa
and
andb
dec
mov
mov
sub
jbe
jmp
mov
and
cmp
and
notb
sahf
and
shll
call
ret
add
cmp
popf
mov
ret
cli
lods
and
jae
inc
add
int3
ljmp
and
xchg
cmpsb
into
xor
ljmp
sub
dec
pop
adc
out
mov
insl
movsl
imul
mov
add
mov
or
je
xchg
sub
filds
stc
pop
xchg
out
enter
popa
mov
and
pop
jmp
adc
adc
pop
hlt
rcr
xchg
lock
outsl
cmpsb
xchg
mov
inc
xlat
js
aam
scas
jbe
xchg
es
lcall
lods
aad
sbb
frstor
jns
ror
and
insb
inc
aas
dec
pop
jle
mov
adc
xchg
in
and
pop
cmp
mov
dec
jbe
mov
call
orb
insb
popf
out
out
lods
mov
push
ds
and
test
push
sbb
mov
jnp
jne
sub
lahf
movsb
call
cmp
lods
and
xorl
cmovl
add
jg
mov
add
jecxz
sarb
arpl
sbb
leave
jle
lret
mov
lahf
in
inc
sbb
push
outsb
jns
and
add
shl
pushf
dec
push
idivl
daa
push
test
and
pop
inc
jns
and
xchg
out
mov
mov
sub
cmp
inc
loopne
out
pop
and
ljmp
and
in
enter
xor
daa
cmp
adc
and
jne
in
and
pop
out
mov
xchg
push
out
or
sti
pop
mov
lods
dec
insb
inc
rcl
cwtl
loop
inc
inc
shlb
add
lods
in
push
cwtl
lods
fldenv
sbb
xlat
xor
or
int
dec
and
pop
mov
fwait
cmp
popf
lea
mov
mov
xor
mov
push
add
or
lds
and
pushf
imul
mov
inc
and
ljmp
pop
and
push
in
pusha
sbb
imul
std
pushf
fs
repz
imul
sub
adc
jbe
mov
xchg
and
mov
or
and
sarl
and
icebp
shl
bnd
cs
adc
xor
add
xor
sbbl
jmp
clc
xor
cmp
cld
mov
xor
and
adc
pop
in
and
push
dec
cmc
and
jno
pop
inc
adc
or
adc
add
popa
lea
pop
bound
lock
xor
outsb
movsb
lahf
pop
inc
jns
bound
sub
mov
xchg
push
jmp
and
mov
int3
cmp
icebp
mov
cltd
sahf
int
inc
cltd
leave
mov
movsb
sub
mov
sti
cmpl
inc
jge
xchg
xor
in
and
cli
or
lret
stos
and
pushf
push
test
add
lahf
cmp
outsl
lds
enter
or
sub
lcall
in
or
mov
inc
loop
fnsave
out
sbb
and
push
mov
ja
outsl
imul
inc
mov
push
lcall
adcl
mov
sub
repz
pop
lods
lahf
add
leave
imul
mov
and
mov
dec
and
sbb
mov
and
push
inc
jae
push
and
data16
jo
xor
xorl
sti
mov
gs
jle
mov
mulb
mov
pushf
push
andb
dec
xor
ja
jl
sub
add
loope
xor
xchg
mov
mov
and
hlt
daa
inc
xchg
pushf
jno
xchg
and
push
sahf
imul
setae
test
jo
push
xor
dec
add
mov
xchg
test
jno
jns
scas
out
jp
in
test
or
sub
loope
mov
xor
xor
decb
mov
and
in
es
test
fldl
and
add
push
mov
pop
das
loop
sbb
jp
mov
pop
movsl
xor
adc
popa
cld
repz
cld
dec
fwait
lods
sarl
fildl
shl
cmp
xchg
fcomp
into
cmp
sbb
call
dec
and
push
mov
shr
pop
or
lock
adc
and
sti
adc
outsb
popa
rcll
shrb
and
push
add
daa
add
movsb
pop
and
js
mov
xor
or
and
mul
scas
es
cmpsl
outsl
and
mov
sub
pop
test
push
and
inc
popf
insl
cmp
push
lahf
mov
sti
movsb
les
and
fstl
xor
and
jb
sahf
jp
xchg
jno
loop
and
mov
rcll
mov
or
rcrl
mov
xchg
lds
pop
movsb
and
mov
call
popf
std
and
xor
xchg
shll
popf
pop
and
lret
pop
inc
and
jbe
inc
and
and
xchg
mov
xchg
and
push
pop
in
movsl
es
push
and
sbb
and
pushf
sbb
movsb
inc
inc
add
mov
sub
and
fisubs
lcall
xchg
popa
push
lret
and
and
lock
mov
inc
jg
and
or
sub
cmp
int
mov
xchg
and
lret
mov
or
in
test
dec
mov
inc
pushf
sub
bound
pop
dec
sbb
sti
cltd
test
and
les
ret
dec
aas
mov
jecxz,pt
mov
sbb
loopnew,pn
jns
mov
push
add
xchg
fsubs
xor
push
pop
mov
xchg
mov
stos
aas
dec
sbb
mov
jmp
sar
sbb
popa
cli
fsubrs
adc
mov
jle
loope
gs
mov
movsl
loopne
lahf
push
in
not
notb
lret
out
add
rcll
and
pop
dec
mov
fwait
push
sahf
jb
into
inc
add
test
and
decb
das
pop
dec
cmpsl
shr
xchg
ffree
and
mov
and
in
and
xor
and
or
js
lret
out
popf
int
imul
insl
pop
icebp
xchg
push
scas
add
mov
test
and
lods
xchg
shll
add
dec
xlat
inc
lret
push
pop
sub
push
cmp
inc
sbb
sti
dec
mov
int3
dec
in
and
shufps
enter
sahf
dec
sub
cmpsb
faddl
and
out
pop
xor
inc
xor
inc
jbe
inc
hlt
mov
mov
and
js
xchg
mov
cmp
jge
and
ss
movsl
sub
jno
popa
inc
or
or
and
inc
and
and
pop
jle
pop
add
es
out
arpl
mov
sub
mov
xor
xchg
and
test
xor
fwait
cmp
xchg
add
aad
dec
xchg
add
or
std
sarl
les
js
and
cmp
inc
lcall
in
clc
mov
nop
cmpsb
daa
and
mov
xor
and
push
push
cli
cmp
pusha
aam
mov
into
push
gs
and
dec
pop
adc
mov
and
sahf
mov
mov
mov
push
das
popa
and
orl
mov
lods
insl
aad
lock
mov
mov
add
and
fwait
mov
inc
das
inc
sahf
mov
dec
and
xchg
and
mov
out
outsl
lods
fistpl
fwait
js
sub
inc
adcl
xchg
pop
and
subb
sub
in
hlt
jbe
and
push
sbb
fstps
pop
mov
rolb
and
out
mov
push
int
aaa
movsb
pop
sub
cmp
xchg
push
int3
mov
mov
ja
push
std
push
loop
mov
fsubr
dec
mov
push
and
mov
dec
sub
fwait
push
imul
cli
orl
in
jle
push
mov
mov
mov
fnsave
and
and
sbbl
fidivrl
pop
mov
dec
rorb
cmpl
clc
test
dec
lahf
jg
js
shlb
jae
jbe
rol
add
insl
sbb
mov
outsb
pop
mul
inc
scas
daa
cmpl
out
mov
or
and
push
in
fsts
jbe
mov
gs
and
mov
stos
popa
xchg
imul
jg
gs
ja
or
jns
sbb
movsb
pop
in
data16
pop
in
das
jg
and
xchg
fwait
push
inc
aaa
xor
mov
sbb
xchg
movsl
and
mov
popf
mov
dec
and
es
inc
and
push
mov
push
call
pop
mov
dec
xor
dec
nop
pop
cmc
dec
pop
jp
cmp
inc
cwtl
lods
pop
movsl
mov
and
cltd
sahf
jge
mov
xchg
pop
adc
out
mov
ljmp
int3
mov
js
enter
inc
cmc
popf
add
ds
xchg
cltd
jmp
pop
lods
and
pop
push
and
out
inc
mov
sbb
and
inc
lods
add
out
mov
xchg
mov
les
xor
dec
repz
and
repnz
sbb
popa
iret
push
jo
and
ficomps
imul
jge
and
lock
out
mov
in
test
and
pop
imul
cmpsb
fcoml
jg
add
fidivrl
push
ds
lahf
adc
inc
and
popl
ret
mov
and
rorb
jo
xchg
xlat
and
dec
jmp
xor
ljmp
xchg
subl
inc
mov
push
shlb
fbld
cltd
or
lahf
es
imul
pop
xchg
mov
mov
inc
aas
cmp
mov
addl
ret
call
lahf
sub
push
into
xor
xchg
mov
cmp
mov
movsl
mov
and
jecxz
stc
js
les
or
fimuls
outsb
out
inc
jo
push
les
mov
xchg
and
adc
and
mov
add
jg
outsb
das
adc
std
fbld
jae
xchg
mov
sbb
inc
ds
cmp
pop
in
cmpb
mov
xchg
ja
sti
mov
mov
sbb
fwait
cmc
and
sub
lret
and
pop
lcall
ja
sbb
jle
inc
pop
jp
mov
stos
lret
clc
or
mov
pushf
imull
inc
and
cmp
das
insl
lret
gs
into
dec
pusha
jp
push
sbb
or
inc
and
mov
mov
sbb
imul
and
jmp
sbb
pop
mov
popf
movsb
test
push
mov
add
iret
lahf
xchg
pushf
cmp
movsb
sbb
repz
and
into
cld
xchg
out
nop
mov
hlt
ret
fisubrs
in
dec
jge
loope
and
bound
int
shll
mov
imul
sub
pop
push
js
adc
pop
in
mov
shl
jl
ja
jmp
xorl
push
mov
stos
and
cmc
add
out
adc
or
ja
and
test
xchg
inc
mov
cmp
aas
popa
inc
out
xlat
imul
aaa
test
hlt
movsb
and
in
mov
xchg
adc
xor
push
dec
icebp
mov
popa
pop
pop
les
and
std
push
add
negl
xor
cmp
mov
jns
mov
push
jg
pop
je
cmpsb
inc
pop
xchg
ss
sbb
xchg
pop
inc
sub
pushf
aas
popa
stos
loop
xchg
and
cld
repnz
push
xor
mov
mov
push
and
mov
mov
sbb
pop
iret
xlat
add
test
push
aas
repnz
jmp
cltd
in
scas
push
push
mov
jbe
out
ret
arpl
mov
adc
adc
out
jl
pop
into
outsb
fldenv
jnp
pop
adc
mov
je
repz
popa
aas
orl
fidivrl
scas
cs
cli
lock
mov
shl
jnp,pt
pusha
xchg
and
js
mov
in
enter
mov
jns
and
lds
mov
stos
int
and
adc
aaa
sbb
and
adc
dec
pop
pop
cmp
repz
sbb
mov
pusha
pop
lods
jb
popf
add
dec
int
sbb
push
sbb
andb
call
aas
lock
pop
nop
addl
lods
aaa
adc
cmp
nop
inc
inc
adc
and
xchg
mov
in
fsubrl
lds
ss
cmpsl
jbe
and
inc
clc
movsb
aaa
or
popa
testb
fbld
xorb
mov
lea
out
add
imul
ror
push
jne
adcl
mov
mov
mov
outsl
cmp
std
mov
push
hlt
rcrl
out
popa
jge
inc
stc
ja
pop
fadd
iret
and
inc
mov
lret
mov
ljmp
fistps
mov
shlb
imul
movsl
scas
dec
jmp
cmp
movsb
adc
int3
fcoml
adc
out
dec
outsb
and
mov
xchg
push
das
shll
popf
xchg
mov
xor
mov
fwait
lods
xchg
iret
cltd
pop
ljmp
imul
out
jae,pt
jecxz
mov
push
in
and
adc
mov
push
loope
and
jg
jno
sbbl
das
and
or
test
jmp
cmp
sub
xor
cwtl
or
stc
and
adcl
push
mov
and
jne
mov
sub
mov
inc
push
cmpsl
nop
and
pop
test
mov
stos
cmpsb
jl
divl
pop
clc
mov
imul
pop
dec
fisttpll
mov
jg
std
repz
mov
mov
rolb
and
popf
fs
insl
and
or
add
outsl
inc
into
xchg
mov
and
jns
ret
ret
adc
push
bound
fiaddl
insb
sub
out
and
adc
ds
lods
loop
iret
sarl
in
lahf
pop
mov
pop
and
dec
pop
or
push
jne
and
out
inc
or
test
pop
pop
ficoml
in
js
shlb
test
adcl
call
mov
jle
pushf
adc
xor
cltd
aaa
cmpl
xlat
mull
out
jnp
int
or
pop
mov
dec
dec
and
inc
and
shl
inc
orl
lret
ds
aam
sub
and
xchg
lcall
sbb
es
mov
je
les
xor
cmpsl
xchg
and
xchg
out
pop
into
and
ja
xchg
lods
pop
outsb
and
mov
push
push
jp
jp
out
mov
jne
insl
ss
pop
pop
xchg
and
or
jbe
enter
lcall
push
aam
out
and
fcompl
test
sub
dec
mov
and
sbb
mov
aas
loopne
loope
sub
out
scas
mov
jl
mov
orl
ffreep
and
sbb
xchg
fisubrl
adc
add
pop
lods
insl
popf
test
and
lea
xchg
daa
aam
popa
add
add
in
and
out
pusha
and
enter
push
mov
subl
repnz
pusha
jnp
ret
mov
xchg
and
adc
jmp
shll
and
dec
jo
lea
iret
fwait
enter
jno
pop
pop
into
and
loop
mov
popf
jns
cmc
scas
arpl
lock
xchg
cmp
mov
xchg
push
out
sub
fucom
xlat
jno
aad
aaa
mov
mov
or
xor
leave
stc
inc
jg
sub
and
shr
push
sbb
mov
sbbl
inc
test
mov
jle
adc
pop
shl
fisubrl
inc
gs
daa
jo
outsl
jl
mov
cmc
out
and
jns
mov
xchg
cmp
test
xor
push
hlt
mov
inc
and
sub
in
jecxz
call
lods
shr
xorb
mov
mov
loopne
movups
jns
xchg
daa
pop
and
popl
add
mov
and
addl
inc
pop
arpl
and
jnp
inc
je
or
nop
psrld
cltd
mov
jb
mov
adc
pop
fninit
pop
and
cmp
out
xor
inc
xchg
mov
jle
mov
fs
sbb
fimull
adc
inc
adc
and
subl
jne
cmpsb
pop
push
push
pop
lds
and
mov
dec
mov
rolb
punpckldq
xlat
and
sbb
insl
scas
sub
sbb
and
cmp
push
push
and
in
and
cltd
dec
scas
and
cmpsb
xchg
rep
cmc
test
push
stos
cmp
popa
mov
jo
outsb
inc
mov
cmpsb
lahf
dec
ljmp
decb
loopne
and
xchg
aam
add
mov
cwtl
dec
xchg
pop
add
and
inc
js
loop
mov
xchg
push
movsl
pop
push
icebp
sub
and
sbb
aaa
mov
lcall
adc
movb
aas
jl
into
pop
and
enter
lret
loope
push
int3
or
lcall
je
movsl
and
outsl
inc
push
lds
sub
sub
sub
ret
xchg
xor
add
xor
push
test
iret
jno
in
mov
lcall
dec
scas
push
add
es
and
ljmp
cmp
and
and
inc
cmp
mov
pushf
les
andl
dec
in
sbb
jge
xor
mov
xchg
ja
and
mov
shlb
dec
add
push
out
cmpsl
xor
test
popa
push
fs
rolb
xor
repnz
loope
mov
inc
xlat
fsubl
inc
out
jns
and
imul
loopne
sbb
and
pop
xchg
and
and
inc
add
adc
and
in
jo
enter
mov
adc
cmc
sub
shrb
and
mov
lret
mov
and
and
shrl
aaa
lock
sub
js
jp
fsubs
cmp
xchg
aas
jns
mov
mov
and
pop
out
popa
sbb
and
lods
and
testb
xlat
mov
inc
and
mov
and
jmp
add
dec
pop
int3
loopne
je
pop
mov
fnstcw
push
xchg
leave
push
sbb
enter
cs
mov
and
mov
dec
inc
or
inc
lcall
sbbl
pop
and
mov
xchg
and
mov
pop
and
test
and
call
in
adcl
cmp
ss
sbb
mov
and
pusha
daa
mov
push
popa
ret
jl
arpl
movsb
mov
inc
push
xor
mov
and
addr16
cmp
andb
iret
outsb
aam
aas
cmp
or
xchg
adc
inc
andl
mov
dec
decb
jge
popa
insb
sahf
xor
jnp
and
scas
sub
mov
and
push
jmp
and
test
call
pop
imul
and
dec
dec
shr
aas
mov
push
lcall
outsb
pop
lret
jnp
or
pop
not
inc
mov
push
scas
fbld
lods
fsubrp
and
popa
sbb
mov
fstpt
bound
dec
sbb
movsl
iret
push
arpl
push
sub
stos
mov
and
sub
mov
imul
jecxz
inc
loope
xchg
adc
pop
and
imul
mov
movsl
and
inc
imul
fldt
and
call
push
xchg
and
mov
and
xor
cmp
shll
xchg
lcall
cwtl
and
mov
mov
mov
dec
pop
cmp
sbb
shlb
fcomps
and
ja
fistps
in
int3
inc
adc
and
and
dec
out
fbstp
and
add
xor
cwtl
adcl
mov
or
aaa
add
dec
or
out
mov
mov
xor
push
imul
xor
repnz
bound
jns
pop
movsb
cmp
and
mov
pop
ja
and
xor
fstl
dec
and
jmp
fsubrl
sbb
ja
mov
stc
sub
xor
mov
fcom
pop
inc
sti
push
pop
ja
add
dec
sub
sub
gs
mov
imul
shlb
jb
cmpsl
test
adc
scas
loopne
lock
loope
xorl
rcll
xchg
push
les
decb
push
push
out
insb
inc
rcrb
call
mov
sahf
out
aam
loope
dec
mov
ret
cmp
adc
and
pop
fsubr
cmpsb
and
js
popa
fidivrl
adc
and
sbb
cmpsl
mov
inc
and
cmp
fildl
and
jno
xchg
mov
data16
loope
mov
out
and
xor
imul
sti
xchg
orl
sbb
xor
les
mov
and
pop
xor
pop
outsb
pop
sub
mov
push
mov
mov
and
or
dec
xchg
pop
and
jo
fsubs
inc
and
lcall
and
adc
test
mov
or
outsb
pushf
and
lods
or
mov
out
adc
inc
fs
sarl
inc
add
push
repz
loope
jp
push
and
xor
cmp
int3
ds
and
push
neg
adc
test
sub
add
fisubl
ljmp
push
mov
jmp
pop
cmp
fisubl
int
adc
daa
and
push
pop
int
lcall
xchg
xor
mov
fsubl
popa
aam
sub
xlat
je
jns
adc
add
push
jne
or
xor
or
sbb
inc
jmp
add
lock
cmp
and
inc
and
and
adc
mov
fmull
pop
insb
jge
stos
xchg
mov
dec
clc
xchg
jo
and
jl
out
adc
and
jb
cmc
pop
nop
lea
xchg
mov
or
mov
or
dec
cli
xchg
inc
jo
and
pop
xchg
ljmp
das
subl
push
push
mov
push
idiv
push
or
jg
xor
xor
add
into
repz
dec
push
pop
pop
pushf
das
and
lahf
mov
aad
and
insb
push
gs
ret
xor
and
lea
xchg
les
and
or
push
pop
aad
jo
lcall
mov
mov
pushl
cwtl
or
fildll
and
xchg
iret
mov
jo
or
test
sbb
fs
adc
inc
das
sub
popf
push
push
and
jb
adc
stos
movsl
outsl
pop
dec
notb
popa
mov
sub
and
pop
xchg
outsl
out
mov
adc
mov
cmp
sub
pop
push
mov
out
out
mov
mov
adcl
shll
cmp
in
seta
fs
adc
dec
and
fidivs
mov
and
jecxz
mov
dec
pop
mov
adc
pop
pushf
jnp
dec
jge
adcl
jae
mov
add
dec
call
mov
pop
push
dec
mov
and
mov
mov
and
repnz
hlt
or
sbb
enter
mov
cmp
popa
jmp
sti
cmpb
shll
mov
mov
jo
lds
push
jae
sbb
std
jns
or
rorb
jnp
arpl
and
adc
push
outsb
jb
pop
xchg
enter
in
int
into
mov
jnp
sahf
popa
and
jle
rol
sbb
cli
inc
mov
pop
jne
aam
dec
mulb
test
pop
outsl
mov
aaa
dec
inc
cld
mov
and
js
or
add
insl
int3
and
cmp
lret
cmp
je
dec
and
adc
adc
movl
or
ficoml
dec
nop
dec
and
loop
cmp
test
repz
push
popa
and
ljmp
stc
mov
adcl
mov
xlat
xchg
and
mov
fildll
loop
ds
mov
and
imul
and
fucom
lods
and
mov
jp
sbb
xchg
fistps
mull
bnd
pop
push
repz
mov
and
gs
cmpl
inc
sbb
sub
clc
dec
lcall
mov
cwtl
push
push
orl
pop
clc
mov
xor
inc
xchg
inc
popf
std
pop
lods
and
jle
pushf
sub
mov
push
inc
jmp
movsb
pop
lcall
subl
in
pop
jp
mov
cmp
pop
ret
jl
adc
insl
and
and
xor
inc
pop
sbb
pop
lock
xor
mov
add
dec
and
inc
or
xor
pop
lea
hlt
and
arpl
sbb
xor
mov
pop
js
fcoms
add
call
inc
dec
xor
jmp
xchg
movsl
jo
daa
add
std
pop
loope
mov
stos
bound
rol
movsb
push
xchg
or
ds
cwtl
pop
add
jae
and
push
mov
repnz
and
mov
setge
clc
or
xchg
roll
jl
mov
popf
xchg
and
insl
jne
sbb
outsl
daa
stos
or
fnstenv
xor
int
adc
arpl
jbe
pusha
jmp
out
mov
leave
adc
into
mov
mov
rolb
je
cli
dec
adcl
pop
jg
rorb
and
fistpl
jecxz
mov
adc
movsb
mov
jns
aam
push
frstor
xchg
out
daa
aaa
cwtl
cmp
cmc
test
cmp
lea
jb
scas
xchg
test
enter
jecxz
in
sub
aaa
and
aam
fimuls
movsb
and
arpl
and
test
push
xlat
push
dec
pop
in
mov
pop
cmp
int
popa
and
mov
out
lret
and
js
in
cmpsl
fildl
and
adc
jno
push
xor
jg
addr16
dec
or
fs
popf
sti
outsb
and
xchg
das
in
fcompl
push
pop
subl
xchg
dec
and
dec
scas
xor
and
aaa
pushf
xor
pop
xchg
mov
popf
jne
and
lds
shlb
and
orb
xchg
lcall
gs
adc
insl
imul
popa
jecxz
mov
mov
ret
loop
sbb
jae
mov
aam
jge
inc
stos
and
movsb
cmp
repnz
sti
sub
jl
aas
mov
mov
rorb
popf
idivb
out
sbb
jmp
push
addr16
dec
outsb
movsb
mov
dec
pop
rcrb
or
imul
sub
adc
push
mov
push
jno
cmp
cmpsb
sub
adc
popa
mov
rcrl
mov
shlb
sti
mov
aaa
and
jmp
or
arpl
sbb
or
loope
inc
mov
add
es
add
imul
ds
and
sub
andb
jo
mov
in
pop
and
in
jge
or
jecxz
loopne
xchg
push
aaa
mov
mov
push
scas
out
data16
adc
jecxz
pop
pop
add
and
negb
cli
loop
popf
mov
out
add
dec
lret
push
lock
leave
xor
lahf
sbb
pop
dec
rcll
inc
in
addr16
mov
and
or
sub
dec
sub
in
iret
test
xorl
xchg
jge
js
sub
sahf
movsb
add
test
stos
or
daa
mov
pop
inc
movsl
mov
and
mov
shrb
adc
pop
loop
imul
push
sbb
mov
out
imul
rol
xchg
outsl
in
xor
adcb
rorb
mov
adc
jno
cltd
clc
fs
push
add
xchg
inc
shll
and
adc
sbb
and
jl
cvtdq2ps
out
aaa
and
jbe
das
adc
dec
int
fisubs
push
and
mov
sub
push
and
mov
pop
loopne
mov
lds
or
add
idivl
push
pop
and
xchg
pop
mov
roll
test
inc
xchg
es
rolb
stos
cmp
mov
xor
xchg
pop
pop
mov
xchg
sub
jecxz
mov
ja
fs
add
ljmp
and
in
pop
sarl
jbe
and
add
cmpsb
je
dec
jno
ror
jge
and
push
and
mov
add
popa
xor
pop
push
scas
and
daa
adc
js
mov
mov
adc
fwait
int3
jmp
pop
lods
mov
fldcw
jns
jb
scas
cld
push
cmp
lcall
movsl
xor
or
test
and
mov
pusha
mov
jne
mov
inc
test
mov
aas
and
and
popf
dec
ljmp
nop
mov
xchg
insb
aas
add
out
xchg
sub
inc
or
jnp
fdivl
pop
cli
jno
iret
nop
out
jbe
test
and
jl
std
cmpsb
cltd
popa
test
inc
pop
inc
popa
test
scas
mov
scas
lcall
test
mov
mov
push
ja
xchg
fisubs
cmp
jns
rolb
dec
out
push
pop
popf
imulb
arpl
enter
outsb
sbb
cltd
rolb
les
popa
sub
push
mov
movl
hlt
jp
xor
and
nop
dec
or
push
push
mov
push
xchg
pop
inc
inc
pop
lods
out
add
movsl
xor
clc
or
inc
aam
xchg
repz
andl
fldenv
popf
out
and
stos
mov
pop
aaa
jmp
xor
gs
lahf
and
pop
imul
pop
sbb
xchg
pop
sbb
and
sub
jne
jmp
mov
lahf
add
andl
and
loopne
pop
and
js
push
xchg
ret
inc
inc
inc
push
and
imul
push
scas
ljmp
dec
push
and
movsb
mov
mov
idivl
and
add
pop
jmp
inc
push
xchg
pop
iret
xchg
aas
mov
je
mov
nop
out
sub
pop
rcl
dec
lret
andl
mov
repnz
push
gs
jp
and
adc
addr16
loope
mov
popa
ret
mov
add
sahf
and
lahf
adc
add
pop
aas
arpl
cwtl
push
mov
lahf
sbbb
mov
imull
jecxz
dec
inc
mov
hlt
and
movsl
adc
cmpsb
clc
lahf
mov
mov
xor
and
dec
pop
shll
in
xorb
mov
rcrb
add
dec
mov
loop
leave
push
mov
inc
xchg
out
inc
std
and
clc
xchg
adc
fisubrs
cmc
movsb
push
mov
mov
inc
inc
mov
sbb
mov
mov
xchg
in
and
es
add
and
std
aas
and
jecxz
out
sub
adc
fs
adc
in
sub
and
pop
insl
scas
and
testb
push
enter
mov
dec
popa
std
mov
lds
dec
and
fisubl
ret
inc
rclb
and
fs
mov
adc
imull
sbb
and
mov
mov
mov
push
xlat
loope
and
or
lods
daa
je
sub
pop
mov
pop
jl
cmpsb
stos
jno
push
lret
mov
jecxz
lea
in
test
addl
dec
xlat
popf
and
inc
inc
shrb
in
mov
sub
leave
xchg
fwait
mov
xchg
aas
cwtl
shlb
repz
cld
inc
push
lret
push
cmp
add
test
pop
dec
sbb
and
jecxz
scas
cmp
mov
pop
sub
inc
and
scas
jl
sub
dec
lahf
cmp
add
shl
adc
imul
push
daa
jne
adc
and
fidivrs
lds
mov
xor
mov
add
push
int
ret
in
jns
fcoml
pop
call
ret
or
icebp
in
out
add
inc
and
shld
fidivs
dec
arpl
jecxz
mov
xchg
adc
and
sbb
cmp
push
jnp
shlb
stos
insb
outsb
movsl
push
push
mov
out
aas
inc
ljmp
xor
sbb
cmp
fsubl
cmpsb
dec
mov
clc
and
outsb
push
mov
js
cmpsl
cmp
es
lds
in
sub
into
xchg
xor
cwtl
cwtl
sub
mov
mov
call
and
mov
add
xchg
adc
dec
xor
jnp
ljmp
or
and
int
addr16
nop
sub
sbb
les
xchg
imul
bound
aad
and
je
dec
pushf
fbld
ds
ss
mov
mov
scas
ret
leave
jae
adc
scas
or
pop
inc
cmp
jns
movb
scas
and
ds
rclb
cwtl
xor
into
dec
popa
fs
push
sbb
and
and
adc
sti
incl
lret
and
or
in
out
sub
je
xor
bound
xor
dec
popa
sub
sbb
nop
fadd
pop
outsl
iret
and
dec
adc
mov
sbb
subl
mov
push
sbb
int
lcall
je
adc
and
sub
jmp
pushf
inc
dec
pop
aam
adc
mov
lock
mov
push
js
test
mov
and
add
mov
and
out
mov
pop
out
or
push
lods
adc
and
jne
and
and
cld
in
xchg
and
or
and
mov
cmc
shll
xlat
inc
mov
popf
xor
popa
pop
popa
imul
in
dec
or
mov
fldenv
jp
inc
test
mov
mov
das
ret
out
xor
pop
loope
insl
cmp
mov
cwtl
jle
xor
iret
stc
jg
ret
int
das
adc
dec
adc
and
mov
ret
and
in
mov
xchg
cmp
lock
movsb
xchg
and
and
sahf
loop
leave
loopne
orb
addr16
rorb
inc
xchg
push
sub
pop
push
mov
fisubs
enter
jns
mov
test
xlat
sti
sub
movsl
pop
jecxz
and
xor
aam
loop
mov
icebp
out
cld
xchg
es
aas
lret
lock
and
pop
cmpsb
push
inc
insl
and
or
ss
call
mov
xchg
movsl
dec
jg
cmp
mov
popf
inc
cmpl
jg
cmp
lcall
in
rolb
dec
repnz
shll
lods
inc
mov
cltd
jle
xchg
mov
lahf
jp
xchg
je
movsb
pop
mov
test
sub
adc
xchg
fs
and
inc
fcmove
and
adc
xor
lea
dec
jnp
sub
push
mov
mov
add
lods
add
and
mov
mov
and
movsb
orb
dec
test
hlt
shrl
lods
popa
movsl
inc
sub
and
mov
fsubl
push
fstpt
add
and
add
fisttpll
popa
jg
push
aaa
addb
mov
or
xor
adc
xor
int
dec
pop
jo
fstps
inc
test
data16
mov
pusha
inc
mulb
test
iret
hlt
test
xor
mov
jae
sub
sub
push
ss
or
das
inc
movsb
jmp
or
xchg
lock
adc
movsb
mov
cltd
les
nop
aam
mov
jb
imul
lret
and
pop
mov
jl
cmpsb
xchg
testl
or
fdivrl
leave
and
stos
mov
xchg
andb
bound
xchg
and
mov
mov
xchg
ds
test
lods
cld
add
decl
aas
xchg
mov
pushf
xorl
imul
inc
mov
inc
pop
mov
rclb
cmpsb
sub
cmp
xor
and
push
out
mov
mov
jns
adc
inc
sbbl
xchg
dec
mov
pop
pop
fbld
loope
pop
inc
lahf
loope
xchg
sub
hlt
mov
mov
sbb
mov
sbb
mov
sub
and
int
outsl
sub
stc
and
pop
push
cmp
adc
mov
shll
xchg
mov
out
cmp
jmp
jle
movsb
push
cmp
mov
jne
push
loop
mov
push
push
cwtl
jno
mov
mov
jo
test
xor
pop
or
stos
out
leave
ret
mov
daa
pop
mov
pop
mov
adc
aad
jl
mov
jnp
fwait
aaa
cwtl
adc
leave
push
stos
pop
mov
into
and
mov
ss
outsl
mov
lcall
ret
and
in
mov
adc
pop
daa
and
aam
jbe
cli
push
pop
andb
sbb
movsb
lcall
cs
xor
mov
fiaddl
cwtl
xchg
scas
push
sahf
imul
rclb
xor
cltd
lea
daa
adc
and
inc
cmp
repnz
xchg
xchg
jg
or
bound
and
adc
push
mov
xchg
fstps
and
add
aas
lret
and
stc
sub
push
mov
and
add
pop
pop
mov
and
bound
jbe
fstl
cmp
jns
cmp
rcrb
roll
scas
or
pop
lcall
and
jbe
arpl
jno
adc
int
xchg
stos
pop
loope
leave
and
loop
pushf
sbb
stc
mov
xchg
into
mov
mov
sbb
adc
add
sbbl
outsb
inc
sub
ljmp
scas
popaw
push
dec
test
mov
js
push
push
or
and
mov
pop
push
jbe
push
and
sub
add
xchg
mov
arpl
push
dec
adc
fwait
lds
inc
mov
lcall
adc
push
movsb
lods
push
push
in
aam
push
sbb
decl
pop
orl
adc
loope
sbb
xor
xor
cmpl
cmp
push
and
pushf
add
scas
inc
push
or
sbb
in
push
add
cld
and
lret
xor
and
daa
mov
call
fisubl
outsl
popf
pusha
ficoms
cmp
test
mov
aaa
mov
dec
mov
cld
stos
mov
jo
fidivrl
adc
ss
sarb
adc
fcoms
jnp
pop
xchg
and
jno
imul
punpckhdq
ss
daa
dec
lret
repnz
dec
std
andb
call
dec
pushf
lods
dec
and
xor
cmp
sbb
lret
mov
and
mov
and
sub
test
xchg
std
popa
mov
outsl
cmc
fnstsw
and
scas
addb
mov
adc
cwtl
xor
scas
push
xchg
das
ret
mov
mov
ds
cmp
adc
ljmp
ficoml
lret
add
repnz
mov
cmpsl
out
dec
lret
js
mov
aas
push
popa
dec
in
push
mov
movsb
int
or
iret
imul
mov
dec
mov
adcb
inc
test
jns
insl
notl
enter
dec
lock
add
popa
and
rcll
push
pop
inc
or
pusha
and
aaa
negl
inc
add
mov
and
popa
dec
sbb
sub
and
mov
test
and
and
mov
and
pop
shll
or
mov
adc
mov
or
and
imul
gs
dec
ret
and
push
inc
add
pop
aam
neg
mov
cmc
and
xchg
iret
dec
and
fs
push
adc
mov
jle
popa
sub
rolb
or
enter
cmp
out
and
lahf
sbb
mov
add
fnstsw
xor
cmpsb
dec
rcrl
xor
push
and
sub
mov
lcall
aas
js
daa
xchg
lea
and
aad
ja
test
mov
xor
dec
in
mov
mov
loopne
mov
pop
loop
or
adc
xchg
out
popa
and
sarl
xor
inc
and
lcall
and
inc
popa
cld
mov
outsb
cmp
jle
inc
fwait
enter
sbb
push
mov
inc
and
lcall
shr
xor
push
sub
mov
push
mov
mov
cmp
adc
jge
aad
loop
scas
sub
add
mov
loopne
mov
clc
and
mov
xchg
sub
dec
mov
mov
loopne
mov
and
lods
ret
int
std
sbb
sbb
iret
mov
stos
test
push
pop
mov
jl
jae
scas
mov
jp
fcoms
pop
out
aas
aaa
stos
repz
mov
and
jl
mov
pop
push
xorl
mov
xchg
push
sub
inc
and
arpl
inc
aaa
andl
jecxz
adc
cmp
xchg
mov
dec
sarb
popa
test
stc
movsb
adc
pop
in
lahf
fwait
pop
add
xor
adc
fs
lock
scas
mov
adc
or
pop
mov
jl
cld
ljmp
loope
addr16
call
and
and
inc
movsl
xchg
fisubrl
and
fadds
in
pop
jp
or
stc
and
aad
jmp
daa
shlb
inc
and
xor
push
std
stc
je
xchg
or
jnp
insl
xor
sbb
popa
push
aad
dec
daa
nop
and
outsb
mov
movsb
or
cmp
notb
sbb
aaa
cmpsl
dec
mov
adc
and
data16
je
and
mov
push
stos
inc
xchg
mov
pop
inc
fs
std
mov
jp
out
or
mov
sahf
ret
sub
cmp
fisubs
mov
popf
aaa
cmpsl
roll
das
sbb
and
add
cltd
testl
xchg
lahf
mov
sbb
and
inc
mov
cmp
int3
test
fidivrl
inc
insl
or
and
jp
dec
ljmp
cmp
cmpsb
cli
cmp
sub
pop
stc
push
in
popa
test
cmp
insb
jle
call
mov
test
jecxz
mov
outsl
inc
and
imul
cmpsb
mov
faddp
jae
push
and
inc
jnp
sbb
and
jno
and
arpl
jns
cltd
movsl
jl
push
mov
fmull
mov
addr16
cmp
xchg
sti
and
jmp
push
imul
outsb
pop
ljmp
fldenv
fwait
hlt
cmp
dec
jg
jno
adc
popa
icebp
push
test
add
mov
mov
ret
xchg
sbb
mov
pop
lret
shlb
shll
stc
and
lods
and
and
in
xorb
xor
dec
or
sbb
cmp
test
stc
test
mov
ja
xchg
cmp
jg
fsubl
subl
mov
lret
testb
add
fcmovu
lea
and
xchg
enter
in
andl
lods
push
mov
cmp
sbb
dec
neg
out
sub
rcl
mov
mov
jl
push
jge
mov
sbb
test
sbb
subb
int
je
mov
rolb
cld
idivl
xchg
dec
xchg
xchg
cs
push
and
fnstcw
pop
fs
xchg
add
dec
push
add
pushf
and
lahf
outsb
mulb
andb
mov
addr16
xor
xchg
ret
xchg
iret
mov
and
mov
cmp
jmp
sub
mov
cltd
aaa
ljmp
add
test
cmp
cld
shr
mov
mov
mov
or
aam
movsb
inc
test
fwait
call
lret
and
scas
dec
and
jnp
clc
mov
and
add
mov
rcr
or
enter
jle
xlat
and
popa
xchg
xchg
fst
repnz
add
and
int3
movswl
ss
outsb
add
ficomps
add
fbstp
sub
xchg
loope
sbb
in
cmc
ss
jo
xor
je
in
cltd
imul
mov
fwait
mov
popf
pop
xchg
adc
xchg
dec
mov
inc
scas
and
and
fsubp
stc
dec
ret
jb
movsb
add
pop
dec
test
and
arpl
push
cmp
pop
and
mov
movsb
popf
dec
mov
sub
shll
pusha
push
mov
andl
fldenv
pop
sbb
jo
into
cmp
popa
sbb
outsb
and
mov
and
mov
and
mov
lcall
mov
into
add
data16
mov
bound
clc
rolb
inc
fldl
ljmp
cmc
xchg
inc
and
shrb
fstpl
ret
insb
sahf
push
mov
dec
lea
mov
popa
shlw
adc
xchg
inc
jle
mov
or
mov
movsb
add
mov
jno
push
popf
movsb
clc
jb
jnp
mov
xor
xor
test
mov
mov
movsl
xchg
mov
dec
jo
inc
inc
or
popf
fistps
adc
sahf
mov
subb
fisubs
movsb
and
jecxz
leave
ja
and
jge
push
aad
sbb
sarb
dec
je
popa
dec
sbb
dec
cmp
repnz
or
mov
add
sarb
popa
or
sub
call
sub
mov
and
dec
xchg
add
and
and
add
sub
sub
mov
outsb
mov
mov
xor
mov
jns
sahf
aas
popf
mov
js
mov
aam
jmp
cmp
in
mov
add
jbe
pop
call
and
inc
dec
jb
mov
aam
mov
lahf
and
push
rcr
mov
and
xor
mov
pop
andb
in
xchg
arpl
repnz
jl
sbb
and
insb
cmpl
js
pop
mov
xchg
lds
adc
mov
pop
dec
das
xorl
xor
lahf
and
dec
mov
jns
xor
adc
movsb
pop
popa
fldcw
and
mov
mov
xchg
xor
xor
dec
cmpsb
sbb
lods
addl
and
push
or
and
mov
into
sbb
shlb
push
xchg
and
cmp
and
fdivs
mov
ljmp
inc
gs
outsb
jg
mov
sti
adc
adc
pushf
outsb
push
cmpl
mov
push
adc
inc
mov
subl
int
inc
test
ja
xchg
pop
mov
int3
and
filds
shrl
insl
out
aad
das
fidivrl
lret
cmp
mov
mov
mov
xlat
outsb
mov
and
pop
pop
popf
inc
js
xchg
mov
lahf
movb
nop
popa
and
sbbl
shll
cmp
cmp
in
dec
and
adc
sub
mov
je
fistl
and
imul
popa
sub
mov
sti
scas
sub
stc
and
xlat
js
aas
loopne
mov
nop
sbb
xor
dec
imul
cld
out
mov
and
jns
sub
std
repnz
jmp
gs
sbb
inc
sbb
sub
push
inc
dec
pop
popa
push
out
push
add
and
cwtl
in
mov
mov
pop
and
mov
pop
sbb
dec
or
iret
xchg
push
mov
or
jne
mull
mov
pop
cwtl
and
movsb
loope
xchg
test
add
wrmsr
pop
and
pop
cmp
mov
movsl
mov
push
repnz
cmp
movsb
sub
xor
test
xchg
and
test
mov
fwait
and
mov
int3
je
pop
fisubs
in
lahf
popf
jnp
clc
xor
and
push
in
or
and
dec
scas
mov
icebp
test
mov
leave
push
xor
sub
cld
sub
xor
das
enter
cmp
adc
mov
repnz
fdivl
inc
lea
mov
push
or
and
cmc
and
mov
ret
bound
sub
cmp
cmp
push
sbb
adc
dec
and
push
jo
and
sti
cmp
fimuls
and
push
xor
mov
mov
cmpb
and
inc
mov
fnstsw
int
mov
rcrl
jo
and
and
or
xchg
and
sbb
cmc
dec
test
les
inc
mov
aas
sti
lahf
arpl
add
adcl
push
fimull
cmc
pop
movsl
inc
outsl
push
adc
sbbb
push
in
sbb
icebp
shll
add
cmp
leave
xchg
test
das
xor
pop
lds
xor
into
mov
test
push
fstps
cmp
xlat
and
or
test
loopne,pn
cmp
and
pop
adc
mov
outsb
xor
pop
mov
cli
push
mov
orl
inc
mov
aam
fwait
mov
test
in
and
outsl
in
inc
cwtl
ja
inc
lret
dec
jmp
movsl
and
push
fucomip
jmp
sbb
lcall
or
popa
mov
mov
or
int
mov
dec
cmpsb
push
add
and
rcl
jge
test
js
loope
pop
and
cmp
add
xor
lahf
aam
out
mov
icebp
mov
inc
mov
cli
and
idivb
push
and
cwtl
out
jne
scas
outsl
jo
xor
aam
and
sar
inc
fcoml
mov
add
insb
and
andb
pushf
arpl
and
testl
movsl
cmpsb
into
jmp
cmpl
xor
cmp
and
pop
cmp
in
mull
repnz
pop
pop
jnp
mov
add
mov
mull
sti
dec
dec
out
outsl
cmp
dec
xchg
mov
repz
jae
mov
and
jg
add
icebp
and
mov
std
cmpsl
ret
dec
cmpsb
adc
pushf
adc
pusha
fptan
dec
xchg
xchg
and
test
dec
pushf
cmp
or
bound
push
sbb
insl
xchg
xorl
dec
icebp
ss
inc
out
sub
mov
insl
cmpsl
sarb
xor
mov
xchg
gs
divl
adc
ds
cmp
cltd
and
pop
mov
test
faddl
and
punpckhwd
pushf
mov
mov
add
and
dec
fstpl
pop
add
cmpsl
and
out
rcl
fstps
outsl
xchg
stos
popa
les
mov
xchg
push
lahf
cmp
out
rcll
loope
addr16
pop
cmp
dec
dec
outsl
cwtl
movsl
sub
cmc
mov
or
lfs
sbb
dec
and
dec
les
push
in
add
arpl
in
and
mov
movsb
enter
dec
rcll
xchg
lret
repz
mov
jne
out
xor
and
insb
xchg
and
jo
mov
stos
or
mov
scas
aad
inc
jne
popa
pop
jbe
xor
sbb
in
inc
movsb
lods
pop
sahf
sbb
out
sahf
dec
setne
sti
mov
and
adc
cmc
lret
mov
or
mov
cwtl
dec
xchg
test
in
ret
mov
out
insl
mov
sbb
lahf
das
incb
loopne
mov
das
jnp
and
rcrl
popa
xor
push
xor
xchg
or
adc
xchg
repnz
jo
scas
or
das
or
movsb
and
sub
xchg
out
lahf
and
andl
or
ret
fwait
cmp
pop
mov
push
adc
mov
nop
xchg
iret
negb
mov
inc
daa
inc
fisttpl
das
push
data16
movl
xchg
std
and
inc
mov
jb
and
lods
pop
adc
mov
idivb
fsubs
ja
sub
dec
jg
xchg
cmpsb
cld
adc
pushf
jle
sbb
cmp
sbb
mov
push
jnp
fistl
xchg
pop
and
scas
popf
incl
cmp
insl
popa
mov
jge
jl
jge
jmp
and
mov
mov
inc
pop
mov
scas
movsl
cmp
inc
movsb
and
and
cwtl
mov
xchg
shrl
jbe
jb
test
outsl
jmp
cmpl
pop
into
dec
and
lcall
and
xchg
outsb
fldcw
mov
loopne
call
data16
test
dec
and
aad
and
xor
pop
inc
and
adc
mov
mov
sbbl
pop
and
loop
mov
dec
ss
push
xor
mov
cwtl
popa
inc
inc
mov
and
push
in
stos
push
mov
add
adc
lock
pop
cmp
adc
lods
xchg
cmpsb
xor
stos
mov
movsb
inc
mov
add
sub
cld
movsl
pop
jo
adc
add
andl
mov
sbb
in
out
xchg
push
shlb
ljmp
or
xor
and
and
or
pop
popa
lods
mov
and
inc
mov
gs
push
adc
sub
xor
dec
movb
mov
movsl
and
jmp
scas
or
inc
pop
test
inc
dec
sub
cltd
mov
mov
adc
pop
push
int3
in
mov
cmp
xchg
and
cmp
xchg
inc
mov
test
leave
and
arpl
and
popa
jmp
and
pop
sub
mov
xchg
dec
and
iret
sahf
jecxz
ret
mov
ror
mov
mov
cltd
out
in
sbb
xchg
scas
mov
cmp
mov
cmp
lods
in
sub
cmpsl
shl
jno
cmc
nop
jmp
jge
imul
call
sbb
and
xor
mov
sbb
push
mov
call
out
and
cmpsb
bound
cmpsl
insl
add
jns
pop
cmp
cwtl
aas
andl
sbb
and
ds
jp
push
sub
out
xchg
sbb
push
and
mov
mov
rcl
pop
cmp
and
dec
js
lahf
cmp
jns
inc
out
jmp
and
imul
push
out
rorl
mull
cmp
scas
pop
mov
arpl
aaa
mov
and
ret
add
stos
add
lds
xchg
and
mov
hlt
rcll
sbb
int3
popa
cwtl
push
push
popf
xlat
out
and
scas
pop
lock
lds
and
pushf
dec
inc
inc
cmpsb
fwait
xor
popa
sbb
jg
fldenv
sub
arpl
popw
mov
outsl
adc
fs
and
loopne
mov
hlt
cmpsl
repnz
or
test
repz
jl
sarb
in
and
loopne
inc
andl
movsb
jno
into
jns
bound
or
and
jp
cmc
and
add
pop
and
push
ss
cltd
insb
sbb
rclb
nop
outsl
xchg
je
mov
mov
xchg
popa
jnp
mov
shrb
and
daa
imul
lds
into
imulb
int
and
scas
add
lret
jnp
outsb
and
xor
cltd
pop
sbb
and
sub
or
push
test
and
rcrl
cmp
sbb
or
popf
mov
movsl
rol
popa
jecxz
mov
mov
dec
mov
lods
sbb
and
fimuls
out
adc
sub
xchg
gs
lea
shrb
test
enter
mov
lcall
cmpsb
cmp
pop
std
add
lahf
and
sub
gs
mov
jne
lcall
sub
ljmp
ret
pop
cltd
cmc
or
lock
lret
push
sbb
nop
sti
push
imul
sub
mov
test
mov
adc
push
je
inc
outsb
push
leave
mov
push
and
jo
mov
aaa
push
push
sub
fcoml
cli
movsl
inc
imul
adcl
mov
or
mov
lcall
sbb
aaa
jp
cwtl
mov
in
nop
pop
push
movsb
adc
add
and
mov
inc
pop
mov
mov
or
push
mov
pop
test
inc
sbb
and
mov
out
jl
fldenv
xorl
sub
pop
cmpsl
xchg
loop
and
insl
ret
and
leave
fiadds
int3
cli
inc
mov
insb
mov
dec
lahf
dec
dec
shll
mov
mov
and
push
mov
popf
inc
mov
repnz
xlat
and
mov
decb
push
inc
xchg
and
pop
mov
gs
adc
and
in
xchg
xor
and
leave
hlt
loopne
clc
nop
fs
sbb
and
fwait
and
imul
xchg
and
sbb
jp
sub
mov
scas
rolb
and
dec
sub
andb
cli
inc
in
mov
insl
cmc
and
hlt
int3
lods
jge
loope
sbb
in
dec
fs
pop
jae
adc
add
cli
mov
sti
repz
mov
and
inc
in
cmc
xor
pusha
or
cmp
mov
fwait
out
and
push
movsl
mov
and
es
push
sar
sbb
jno
clc
push
mov
sub
loope
testb
xor
adc
pushf
dec
pop
sbb
and
popf
and
loop
cmp
icebp
fldl
push
rorl
pop
sub
pop
inc
jl
xchg
and
cmp
js
repz
and
popa
mov
push
jnp
loope
addr16
and
test
xchg
notb
and
mov
sbb
cltd
sarb
sub
mov
or
inc
cmp
xchg
mov
and
adc
pusha
mov
js
cmp
inc
popf
fwait
loop
cmpsl
and
xchg
and
push
and
dec
pop
mov
cmpsb
xchg
in
and
insb
mov
rcr
sub
sbb
insb
movsb
bound
jbe
and
or
stos
pop
out
mov
movsb
mov
cmp
imul
xchg
insl
arpl
and
dec
mov
sarb
fnstenv
imul
and
stos
add
inc
push
gs
and
and
andl
adc
fildl
mov
test
push
xchg
inc
mov
xor
in
and
push
mov
lods
push
push
lahf
jbe
inc
fisttpl
push
movsb
add
cltd
inc
orb
aaa
sub
and
lret
outsl
and
ja
sahf
stos
clc
lock
leave
std
mov
mov
adc
aas
cmp
and
shrl
cli
xchg
sbb
cmp
pop
popa
push
aam
or
je
jmp
iret
and
mov
pop
and
cmp
rorb
mov
js
mov
imul
or
sub
pop
out
sarb
push
ljmp
sub
into
rclb
push
dec
shll
add
aam
cmp
cmp
cmp
mov
push
sti
dec
aaa
xchg
scas
ffreep
lahf
out
xchg
jecxz
cmp
pop
rcrb
dec
popa
bound
jo
push
xor
cmp
dec
xlat
pop
adc
call
fsubrp
cwtl
lods
and
out
sbb
and
push
js
call
ret
sub
xchg
fdivrs
test
pop
loope
cmpsl
andb
mov
int
pop
mov
cmp
mov
imul
add
inc
shlb
cmc
dec
in
inc
hlt
cli
shl
sahf
jecxz
cmp
js
jno
mov
and
sub
fisubl
cld
adc
push
test
sub
popa
cwtl
das
adc
incl
outsl
and
inc
push
dec
pop
sub
and
into
addb
sarl
mov
add
aas
mov
inc
or
fsubrp
and
push
push
pusha
cmp
mov
jle
add
pop
popl
xor
mov
sar
in
jno
inc
shlb
push
fldl
and
inc
xor
xor
imul
cmp
pop
stos
xor
fisubl
in
inc
lret
adc
cwtl
and
xor
icebp
xchg
adc
and
mov
add
movsb
push
imul
push
pop
clc
mov
mov
cmp
adc
lcall
pop
jecxz
and
stos
adc
and
xor
mov
movsl
or
mov
stos
outsl
cmp
add
sti
mov
fsubrs
test
int3
inc
jne
arpl
mov
ja
rcll
xchg
xchg
mov
and
clts
xlat
mov
jne
lcall
inc
and
adcb
and
das
movsb
aas
pop
dec
scas
int
or
xlat
out
aaa
aad
and
cmovs
mov
mov
mov
lahf
les
mov
popa
mov
stc
xorl
and
lahf
or
and
xchg
js
cltd
loop
adc
daa
dec
movsl
out
or
push
nop
and
xor
das
test
xor
hlt
inc
inc
int
and
ror
push
or
sahf
mov
in
andb
fistl
fldt
mov
pushf
mov
add
mov
test
movsl
push
imul
lea
mov
hlt
pusha
push
mov
add
push
cli
call
fsub
sbb
insl
mov
out
int
jo
jl
and
xor
test
shlb
and
fcomps
loop
push
push
enter
cmc
cmp
stos
lds
xchg
sbb
dec
push
mov
mov
js
adc
cmp
cmpsb
movsb
mov
mov
xor
pop
cltd
ror
mov
out
pop
inc
das
and
push
jo
mov
loopne
cmc
cltd
inc
push
rcrb
inc
movsl
push
xchg
jo
in
daa
hlt
cs
dec
cmp
fstpt
or
inc
add
push
xor
mov
out
mov
lock
sti
bound
or
add
sbb
addr16
jl
xlat
sbb
xchg
xchg
xchg
mov
dec
jle
jecxz
aas
jb
jecxz
gs
or
adcl
sbb
push
in
push
outsb
and
dec
shll
lock
inc
jp
int3
aas
and
cmpsb
fldl
and
bound
push
mov
adc
and
mov
or
mov
sub
gs
dec
pop
aas
mov
movsl
xchg
enter
inc
and
add
cmp
shlb
fisubl
mov
cmp
add
xor
in
ror
add
aaa
dec
mov
push
es
cmpsb
pop
adc
mov
xchg
pushf
cmpsb
in
lcall
push
xchg
mov
cmc
or
dec
fwait
popf
cmpsl
sbb
mov
lods
push
shrl
fwait
mov
lods
dec
lock
movsl
dec
add
cmp
xchg
nop
inc
outsl
and
and
cs
gs
dec
fsubl
xor
aaa
ret
add
lock
xor
xchg
test
xor
loopne
pop
and
cld
out
lahf
cmp
or
pop
mov
xchg
mov
orl
aas
sbb
sub
cmpsl
or
mov
js
inc
mov
xor
mov
and
sbb
loopne
jne
xor
and
push
mov
jl
pop
mov
lahf
mov
pop
scas
hlt
and
out
arpl
das
pushf
and
jbe
sub
sbb
add
mov
and
or
pop
and
jg
dec
pop
cmp
stc
and
orl
sub
jecxz
mov
jg
xor
push
inc
add
and
outsb
mov
push
and
repz
scas
push
and
insb
mov
adc
pop
test
and
aaa
and
cmp
andb
cmpl
out
int3
shll
mov
int
call
xchg
lret
jg
and
jns
jbe
push
mov
and
sub
test
mov
lret
andb
popa
mov
adc
cmp
lea
and
ret
jg
jnp
mov
add
cmp
popf
pop
mov
fwait
dec
out
inc
mov
loopne
push
notl
and
movsb
rcrb
pushf
out
and
adc
or
dec
mov
in
xor
cmp
insl
movsl
call
popa
fldenv
sbb
add
dec
xor
dec
test
sub
adc
sahf
xchg
dec
movsl
dec
dec
clc
test
pop
fmul
sahf
hlt
stos
daa
shll
dec
test
mov
popa
pop
mov
mov
mov
jns
sub
xchg
push
sub
xchg
inc
lcall
adc
mov
imul
sub
push
inc
xchg
mov
and
mov
popa
gs
mov
int3
sub
lcall
es
inc
fisubs
xchg
or
sub
dec
and
sub
repnz
ret
mov
stos
dec
and
out
ds
insl
xor
pop
imul
frstor
or
idiv
jmp
jp
pop
jl
fcomi
xor
and
fwait
cwtl
ljmp
mov
sbb
dec
ja
inc
mov
popa
mov
fwait
and
sbb
xchg
call
int3
push
adc
lods
dec
aam
hlt
pop
out
jo
pop
outsb
sbb
ret
push
xor
cmp
hlt
mov
mov
andl
cmpsb
sbb
xor
cmc
scas
mov
add
sahf
mov
arpl
loopne
andl
xchg
cmc
insl
lea
mov
jge
cmp
xor
and
iret
shrl
loopne
fsubp
and
loope
push
xchg
andl
and
loopne
gs
push
add
mov
fildll
nop
pop
mov
fs
and
cmc
mov
test
lock
fldenv
and
or
andl
mov
movsl
and
jae
fisubrs
insb
and
cmp
pop
push
out
mov
pusha
loopne
ja
and
jae
arpl
and
dec
cmpsl
inc
leave
pop
int
ret
sub
iret
pop
fistpll
sahf
mov
outsl
and
pop
inc
and
xor
cmp
std
mov
adc
pop
popa
and
cs
or
pop
inc
and
xor
push
outsl
jno
pop
mov
dec
sub
nop
addl
cs
shl
xor
loop
mov
sti
mov
mov
scas
xor
adc
and
mov
pop
xchg
insl
subl
idivl
push
cltd
or
mov
dec
and
test
and
int
subl
jle
mov
loopne
shlb
or
scas
adc
lods
xlat
dec
das
imul
mov
cwtl
xor
nop
mov
pop
test
xor
cmpsb
push
insl
mov
add
outsl
test
and
cltd
adc
mov
xchg
mov
mov
add
aad
ss
test
mov
sub
in
or
cmpl
andb
orl
and
sub
jne
loope
mov
mov
and
scas
inc
sbb
dec
mov
ds
lea
out
lds
cmp
push
scas
and
xchg
jl
push
stos
and
loop
inc
pop
in
and
jnp
push
add
sbb
popa
jg
pop
clc
xchg
out
and
rcrl
pop
aas
lods
mov
movsb
mov
sub
or
fsts
fisubs
and
adc
mov
movsb
stc
inc
push
pop
jno
sbb
xor
jl
dec
je
mov
frstor
popa
nop
and
nop
mov
add
cmp
jge
dec
repz
sub
dec
jle
repnz
decb
leave
and
sub
mov
icebp
addr16
and
xorb
scas
add
inc
in
repnz
pop
push
in
and
out
jmp
mov
cltd
in
xchg
daa
and
pop
sbb
mov
pop
and
aam
sbb
mov
pusha
pop
adcl
movsb
push
fsubp
or
dec
inc
test
insb
mov
and
pop
in
mov
mov
repnz
pop
xchg
or
fsubr
and
dec
xor
mov
sub
pop
mov
int
mov
jno
and
push
and
xchg
jb
sub
imul
inc
je
pop
out
popf
or
mov
call
inc
mov
stos
bound
inc
addr16
pop
int3
and
inc
stos
pop
mov
lahf
aas
fisttpl
mov
sahf
xlat
sub
and
pop
rcll
xor
aaa
fmuls
out
and
fwait
aas
cmpl
cmp
and
xchg
jl
test
add
lea
ret
jmp
pop
enter
mov
popf
add
inc
cltd
fsubl
out
popa
popa
pushf
dec
jo
mov
and
sbb
mov
push
mov
clc
lret
mov
mov
testl
enter
push
les
es
mov
jae
adc
leave
loope
xchg
ja
cs
inc
push
nop
and
movsb
pusha
es
icebp
push
cltd
xchg
sub
xor
mov
cmp
xchg
mov
gs
into
imul
mov
adc
push
cmp
xchg
pop
and
incb
les
arpl
mov
adc
pop
pop
scas
and
fstpt
andl
ret
arpl
xchg
push
and
aaa
int3
adc
mov
and
out
inc
add
inc
sub
sbb
pop
clc
mov
jnp
push
das
pop
data16
dec
movsb
stc
pop
sbb
pop
jns
jbe
jae
push
popa
dec
sub
rol
or
out
and
pop
repz
mov
xor
cli
dec
inc
adcl
sub
jne
jno
movsl
fiaddl
pop
xlat
mov
mov
dec
leave
push
or
and
cld
mov
and
cmpsb
push
mov
ret
pop
dec
mov
sahf
cli
and
xchg
push
jns
push
in
xchg
and
add
mov
mov
dec
xchg
push
outsb
and
out
sbb
mov
rol
and
leave
xor
enter
outsl
jge
mov
dec
mov
inc
cli
dec
sub
mov
movsl
adc
add
push
test
cmp
or
mov
cmc
xchg
and
add
push
jno
jmp
inc
mov
lock
jne
bound
cli
add
repz
lret
popa
jl
pop
mov
and
cmpsb
pop
movsb
in
xor
xchg
cwtl
jns
je
imul
std
int
dec
sahf
scas
inc
sti
mov
mov
adc
and
js
cmpsb
data16
inc
imul
add
ljmp
std
jge
loop
mov
test
mov
mov
and
push
mov
bound
push
popf
dec
out
and
cmpsl
push
imul
ret
in
pop
popa
insb
push
mov
push
test
mov
pop
sbbl
imul
jg
sub
push
fwait
mov
cli
rcrb
stos
daa
sub
outsl
xchg
cs
add
push
cmp
sbb
xchg
gs
and
out
lock
xor
mov
sbb
fisttps
int3
inc
fnstenv
les
push
or
scas
sub
adc
inc
inc
sub
mulb
dec
stc
cmc
xchg
pop
fiadds
gs
and
or
ret
popf
cld
pop
std
pop
xchg
movsl
add
xor
arpl
jecxz
rcll
int
insl
dec
cwtl
pop
jns
inc
jae
das
dec
mov
adc
xchg
mov
int3
scas
movsb
push
sub
test
pop
and
jmp
cs
gs
jl
cld
fstl
add
jmp
in
int
movsl
cmpsb
and
test
cmp
dec
ljmp
cmp
nop
and
inc
adc
and
ret
and
pop
mov
call
addr16
imul
mov
dec
cmp
sub
jle
dec
cmpsl
sub
jo
jecxz
pop
pop
cwtl
sub
mov
popf
mov
lods
movsb
jecxz
push
pop
test
fs
clc
and
xchg
jg
mov
and
mov
movsb
dec
and
jg
mov
in
repnz
pop
xor
jae
icebp
repz
dec
imul
inc
and
pop
loopne
dec
mov
mov
outsb
dec
mov
inc
push
add
fcoml
jle
mov
fwait
test
movsl
lret
pop
sub
and
mov
pop
hlt
push
lods
pop
int
in
xlat
jo
and
sbb
sarb
leave
mov
cmp
scas
add
call
xor
aas
and
out
imulb
cmp
mov
shlb
sbb
mov
mov
push
das
sbb
and
and
sbb
out
xchg
pop
movsb
mov
shlb
nop
js
xchg
push
pop
movsb
dec
jmp
sub
inc
xchg
pop
sti
and
out
or
mov
lea
inc
xor
pushf
mov
jbe
and
jo
push
add
lods
and
lea
and
mov
mov
fwait
jae
test
or
and
cmp
mov
xlat
lret
outsb
push
pusha
jg
xchg
dec
xor
mov
push
mov
outsb
divl
lods
add
out
fmulp
pushf
mov
push
sbb
dec
and
out
lahf
addr16
cmc
int
mul
cmp
and
imul
mov
cmpsl
out
or
icebp
dec
mov
fidivl
fmuls
test
repz
cld
cmp
sub
jne
xchg
insl
xchg
cmp
pop
and
push
and
adc
jl
stc
push
push
and
fwait
arpl
lds
xor
add
mov
into
jle
jbe
enter
out
mov
jne
cmpl
add
es
dec
mov
xor
mov
mov
fildll
popa
les
jns
or
fidivs
loop
inc
push
ljmp
inc
and
inc
mov
xchg
and
dec
mov
in
lods
das
pop
xchg
hlt
clc
lret
and
sbb
sub
jg
mov
pop
mov
mov
inc
pop
jp
sub
pop
and
int3
or
and
or
inc
mov
push
scas
and
lret
and
stos
mov
mov
push
je
lods
fcom
stos
in
shrl
mov
and
jno
out
test
aas
dec
fcoml
popf
addr16
mov
aad
ss
test
adc
aas
mov
sbb
aam
icebp
add
arpl
ret
push
movsb
mov
dec
stos
push
sub
scas
popa
xchg
mov
mulb
insl
xor
inc
inc
pop
rolb
pop
inc
mov
stos
inc
pop
xchg
sub
in
mov
hlt
adc
out
movsl
pop
sbb
and
icebp
mov
and
xchg
movsb
lds
and
mov
jae
std
mov
and
jmp
mov
fcoms
rolb
sbb
mov
jno
and
outsl
cmp
fists
pop
cmp
cld
fistpl
shrb
xchg
test
push
and
cmp
movsl
push
cld
loop
cwtl
xor
mov
push
div
cmc
cwtl
and
or
pop
adc
and
mov
inc
sub
adc
jo
jl
push
and
or
leave
sub
clc
test
xor
pop
andl
insb
mov
fsubl
mov
and
push
clc
movsb
sarb
inc
sti
pop
sub
in
aad
mov
ficomps
test
and
adc
imul
pop
dec
dec
jne
enter
push
jge
dec
push
sbb
or
fwait
and
lahf
aam
in
push
sbb
and
jno
inc
addr16
gs
jmp
mov
inc
in
cli
xor
cmp
cs
or
enter
in
cmc
movsl
push
mov
daa
and
cmpsb
mov
popf
in
add
leave
pusha
and
dec
repz
xchg
and
je
and
push
test
and
add
cmc
and
mov
fldl
adc
push
lahf
fdivr
and
xchg
xor
enter
loope
or
and
sub
dec
je
lcall
mov
addb
jne
cmp
and
dec
pop
std
hlt
dec
and
mov
xor
mov
inc
mov
xor
xchg
aaa
dec
and
call
xchg
xchg
lea
sarl
movsb
pop
push
jns
sub
cmpsl
cwtl
shrb
and
push
sub
and
test
adc
loopne
lret
sbb
jmp
ss
sub
mov
or
popa
mov
icebp
xchg
and
push
xchg
mov
fwait
nop
call
jns
pop
int
das
push
movb
jno
and
and
add
ret
icebp
and
and
xchg
ja
cld
lds
cltd
clc
and
cmp
jbe
fdivrs
fldcw
and
pop
lcall
outsl
inc
rcrl
pop
mov
xchg
push
and
test
cs
pop
iret
and
pop
leave
adc
stos
ret
out
xchg
xchg
andb
aad
fbld
lock
or
mov
cli
mov
mov
lds
jne
mov
jns
lods
cmp
test
shr
in
movlps
cld
adc
int3
in
arpl
xchg
mov
mov
loope
add
rcrb
sbb
push
pop
cmc
push
jmp
add
or
pop
mov
mov
jbe
jge
dec
sub
subb
jo
adc
fildll
ds
sbb
pop
stos
jns
mull
mov
xchg
jge
dec
jae
imul
inc
test
jecxz
cld
cmp
outsl
push
cmp
fisttps
out
das
cmp
es
jmp
push
imul
xchg
rol
xor
xor
and
mov
xchg
sbb
and
fcmovnbe
test
test
cld
pop
call
cmp
fldl
jecxz
ja
ljmp
and
sub
movsb
lahf
cs
jnp
cmp
adc
test
jl
lock
notb
in
pop
and
pop
adc
mov
adc
xchg
test
sbb
int
cmp
mov
push
test
subl
cmp
cltd
add
test
dec
sub
or
daa
in
sbb
xchg
and
bound
ret
and
dec
pusha
mov
pop
and
jl
mov
and
pop
cmp
mov
dec
pop
dec
aam
pop
dec
and
inc
mov
push
adcl
and
stos
add
and
outsb
jbe
dec
rorb
test
jecxz
ret
push
lods
dec
mov
inc
add
iret
enter
shll
xor
and
sub
mov
and
lds
movsl
sbb
xor
and
stc
out
add
cmp
cwtl
popa
out
subl
sbb
xchg
add
inc
xor
push
shl
orl
xor
and
shrl
andb
pop
mov
dec
sbb
shll
scas
push
int
fistps
mov
ret
jns
and
das
add
sub
mov
pop
inc
pop
call
fnstcw
and
sub
or
sbb
pop
fs
jp
xorl
stos
cld
mov
sub
loop
imul
cmp
mov
xchg
lret
xor
repz
in
jecxz
or
icebp
mov
and
push
pop
insb
jg
mov
jmp
les
dec
out
xchg
and
jo
and
mov
cmpsb
mov
call
pop
add
mov
inc
fwait
jmp
pop
dec
mov
sub
shlb
movb
out
cmp
add
bound
mov
mov
orl
mov
jge
shll
cmp
dec
pop
push
xchg
fs
pop
jne
pusha
pop
cmp
cmpsb
out
fucomi
faddl
ret
aas
out
add
and
mov
fwait
jb
enter
shlb
ljmp
imul
add
inc
inc
jae
daa
out
push
or
cld
and
or
cltd
cmp
lds
repnz
jae
jno
int
lods
fsubl
cmp
je
mov
or
pop
outsl
dec
scas
pop
imul
sbb
popa
push
fists
scas
and
scas
push
xchg
test
sbb
sbb
ds
shld
xchg
jge
pop
popf
das
test
call
or
clc
mov
xor
jecxz
add
aad
lea
mov
popf
insb
mov
shrb
repz
loopne
jne
pop
lret
je
out
repz
out
xor
dec
shrl
push
jne
je
mov
sub
mov
lret
and
dec
mov
and
pusha
loope
repz
mov
pop
fsubrl
inc
push
mov
jl
push
shlb
sbb
push
xchg
nop
pop
insl
sub
sbb
sub
add
in
jo
rcr
jle
xchg
fnstsw
aaa
inc
ja
popa
push
je
or
and
insl
movsb
jo
mov
ret
add
je
push
sub
pop
push
mov
loop
es
sbb
rcl
sbb
dec
nop
and
xchg
and
dec
mov
and
mov
push
out
or
in
lcall
sub
jle
jecxz
pop
adc
or
xchg
add
fwait
push
fmul
add
subb
jbe
shrl
scas
mov
mov
and
push
cmp
push
movsl
mov
and
and
push
mov
fsubrl
ficomps
addr16
das
nop
adc
mov
and
push
or
in
and
test
sbb
adc
ja
mov
xchg
lcall
and
adc
push
dec
add
loop
pop
sub
push
sbb
mov
aaa
test
clc
sbb
xchg
push
imul
xor
loope
cmp
add
ret
inc
dec
jg
xor
jle
divb
or
jns
test
xchg
inc
mov
mov
xor
mov
fiaddl
mov
xor
icebp
xchg
pop
lahf
sub
jecxz
push
pop
xor
cmp
and
mov
xor
and
or
cmpsl
xchg
inc
and
enter
cltd
data16
call
mov
movsb
push
insl
popf
cmp
sahf
mov
cli
xchg
dec
jmp
mov
and
cmc
mov
push
mov
call
rorb
or
loopne
add
inc
pop
aad
incb
aam
and
loop
int3
sub
jnp
jo
shr
fistpll
mov
mov
and
xorb
out
pop
mov
ds
lea
aaa
jb
cwtl
and
movsl
mov
and
dec
fisttpll
adc
sub
ljmp
scas
rol
mov
xchg
and
mov
adc
or
sbb
and
inc
ja
sbb
lret
xor
sti
sub
into
rcrl
inc
pop
imul
add
add
pop
cmp
sbb
in
push
imul
cwtl
insb
pushf
pop
mov
mov
mov
xchg
pop
pusha
test
insl
aas
xchg
jb
hlt
inc
push
pop
mov
arpl
roll
stos
jns
lods
hlt
out
and
xor
mov
sbbl
sbb
pop
out
add
mov
or
shrl
bound
push
test
add
mov
jmp
push
and
xchg
push
out
jecxz
pop
leave
xchg
pusha
sbb
mov
popa
inc
pop
sub
sub
pop
xor
lret
call
cmp
dec
aaa
xor
repz
lret
repz
in
mov
hlt
es
mov
xlat
cmp
ss
lret
push
pop
out
fisttpl
xor
jge
pop
sub
outsl
jb
mov
add
sub
jmp
dec
aaa
fisttpll
or
and
out
in
dec
jbe
insl
stc
and
test
mov
aam
sbb
popf
ret
test
popf
adc
xor
aaa
or
fisubl
adc
jmp
and
xor
outsl
xchg
pop
lods
sbb
aad
clc
and
lods
jnp
out
push
pop
jmpw
out
sti
loopne
cmp
jae,pt
lods
and
nop
mov
and
sbb
jmp
movsb
xchg
pop
or
andb
mov
filds
jno
lods
xchg
fisubs
and
inc
cmp
and
mov
or
dec
xor
fiaddl
pop
pop
movsb
inc
jns
xor
mov
mov
test
sub
pop
xchg
gs
jae
mov
adc
fwait
inc
pop
push
and
pop
mov
xor
ss
fistpl
inc
aas
pop
sub
mov
or
movsb
out
jnp
sub
lret
addl
out
loop
das
mov
call
lds
mov
mov
pop
es
pop
xorl
add
fistps
imul
mov
out
test
xor
sbb
pop
test
bound
popa
sbb
and
cs
jnp
hlt
outsb
aas
pop
push
sub
add
lds
mov
and
lods
mov
stc
and
cmp
jle
jl
gs
jb
inc
in
and
dec
cmp
int3
xor
daa
into
les
test
mov
stc
inc
push
and
mov
push
scas
movsb
call
ds
xchg
and
lods
enter
inc
cmc
movsb
xor
dec
xor
pusha
cmp
clc
lahf
enter
hlt
bound
dec
fisubrl
das
pusha
mov
mov
repnz
ret
jno
mov
scas
and
mov
pop
mov
adc
mov
mov
cltd
push
mov
frstor
fsts
sarb
clc
sahf
in
movsl
insb
jecxz
push
cmp
test
iret
rcrl
sub
sub
imul
cmp
sbb
je
adc
pop
ficompl
push
jne
push
jo
and
adc
sbbb
lods
xchg
in
cli
push
cmp
fs
fstpt
and
int3
cmp
icebp
imulb
and
int
adc
mov
dec
popf
or
cmp
mov
jbe
add
ja
mov
push
mov
xchg
xchg
movsl
dec
test
jno
call
and
mov
cltd
popa
and
sub
cmp
pop
and
mov
movsb
lahf
ror
loopne
push
cltd
pop
push
sbb
lret
xor
inc
cs
mov
mov
stos
mov
mov
sbb
push
xchg
mov
and
dec
gs
and
jnp
inc
jge
andl
dec
lods
sub
jo
and
push
ljmp
rol
or
fsub
fnstcw
mov
idivb
orl
aas
pop
push
movsl
rcrl
xchg
mov
mov
push
and
sbb
test
popf
sub
insb
push
shll
cltd
mov
mov
and
mov
es
and
mov
stc
mov
movsb
and
push
and
add
xchg
lret
and
pushf
pop
mov
movsb
js
out
add
mov
scas
in
movsl
test
clc
hlt
ret
cmp
xor
loopne
and
sbb
jmp
push
sub
sub
mov
or
leave
mov
test
and
rorl
lock
test
loop
lods
jecxz
dec
xchg
cmpl
mov
mov
dec
leave
mov
mov
mov
mov
cli
jno
loop
andl
jmp
dec
or
jns
and
sub
pop
mov
cmp
out
adc
xchg
jns
mov
stc
test
push
mov
mov
mov
mov
sti
mov
cli
aas
dec
xchg
cld
bound
push
xor
add
add
push
fidivrs
xchg
jne
lret
cmp
dec
mov
test
aaa
or
fbld
lods
pop
dec
jne
rcll
out
and
mul
int3
push
and
and
jle
sub
subb
inc
xor
sbb
mov
adc
sub
loope
aas
mov
fisttpll
and
add
stos
jmp
mov
jb
xchg
call
call
jmp
push
movsb
rcll
sti
lds
jmp
fsts
cmpsl
stos
inc
daa
je
hlt
xchg
pop
roll
push
xor
sub
push
test
mov
fsubs
and
out
xchg
pop
jo
and
cs
mov
xchg
and
mov
lock
clc
mov
mov
das
cmp
push
pop
scas
and
add
cmpsb
dec
xchg
sti
push
popa
adc
fs
inc
add
decl
mov
xchg
and
and
or
cmpsb
and
xor
push
inc
insb
push
cld
jp
mov
push
ss
add
jge
and
push
fisubs
movsb
pusha
xlat
popa
sti
cs
adc
cli
call
in
movsb
sub
lahf
add
push
jns
bound
xor
mov
and
mov
movsl
mov
and
mov
pop
bound
and
xchg
int
imul
out
xchg
mov
adc
stos
mov
jecxz
dec
test
ljmp
lods
mov
inc
push
xor
xor
dec
insl
and
adc
fsubrl
xor
add
stos
mov
test
imul
and
fwait
dec
mov
cmp
cmpsb
and
loop
jle
popf
dec
dec
sbb
add
pop
movsl
or
add
add
loop
clc
ds
gs
add
and
ljmp
mov
ret
and
shlb
xor
jmp
aas
roll
rorb
and
pop
arpl
js
sbb
ds
shlb
cwtl
push
fistps
mov
jecxz
pop
notl
lret
cmp
out
mov
sbbl
sub
mov
and
push
and
fs
pop
insb
dec
and
or
xchg
xor
pusha
cmp
push
das
lcall
popa
pushf
loop
sbb
cmp
data16
jp
xor
mov
bound
and
scas
outsl
sbb
inc
mov
push
lods
in
es
ss
adc
pop
and
dec
mov
xlat
insl
mov
xor
out
es
mov
aad
mov
jge
push
dec
arpl
cmp
mov
sbb
and
leave
and
pop
pop
loop
mov
nop
mov
jno
add
icebp
mov
sbb
lcall
cmp
fists
dec
xor
testb
xor
fcoms
mov
or
cli
leave
mov
sarb
imul
lods
pop
jo
and
lds
cmp
into
inc
mov
call
les
leave
mov
mov
in
into
cmp
xchg
xchg
nop
scas
push
xor
jp
xor
outsl
test
fdivs
jb
mov
jae
push
adc
dec
pop
mov
shrl
subl
fs
rorl
test
in
popa
sub
lea
loopne
pop
ret
repz
test
loop
and
pop
jecxz
or
and
es
jle
popa
loop
enter
outsb
insb
push
lods
sahf
out
xor
notb
mov
inc
inc
and
inc
and
out
decb
daa
and
fucomip
andl
fsubrs
lea
sbb
and
cmpb
mov
in
in
flds
or
in
nop
and
ret
cs
mov
dec
mov
scas
fildll
cmp
and
loope
jecxz
popa
mov
pop
or
cmp
pop
aaa
gs
adc
rorl
outsb
xor
xchg
inc
and
sub
lods
es
out
sbb
lret
cmp
push
sub
add
popf
lahf
adc
imul
andb
iret
mov
xchg
lret
mov
xchg
push
pop
jg
int3
cltd
pop
and
std
shll
stos
push
xchg
or
movl
xlat
icebp
or
nopl
bound
mov
adc
fldcw
or
pop
jge
add
popa
imul
cmpsl
clc
dec
movsb
pop
sbb
dec
dec
movsb
mov
sub
out
mov
cmpsl
lock
pop
jmp
mov
in
or
mov
ljmp
orl
adc
rorb
mov
fistl
lea
mov
iret
cmp
mov
stos
mov
xor
mov
repnz
dec
jg
and
pop
gs
enter
inc
cmp
and
lcall
cmpb
jp
and
push
rsqrtps
xchg
mov
das
ret
movsb
sahf
shll
frstor
push
fwait
insl
mov
es
fsubrs
and
loopne
sbb
push
and
lea
in
mov
cmpl
push
data16
test
popa
mov
inc
loop
in
sbb
xchg
stos
mov
movsb
ss
jno
insl
jbe
add
push
call
pop
ljmp
pop
decl
ja
hlt
inc
jns
and
inc
mov
push
mull
imul
and
mov
mov
repz
pop
dec
push
and
inc
jg
cld
add
aas
mov
and
mov
iret
dec
lahf
imul
and
shrb
jb
dec
and
lcall
and
ja
xor
jg
cmc
les
daa
add
int3
fiaddl
retw
in
pop
inc
mov
insb
push
movsb
adc
lcall
xchg
xor
sub
lret
inc
cmc
rcr
mov
addb
movsl
push
pop
arpl
inc
push
lds
int3
loopne
mov
mov
xchg
mov
jb
or
mov
add
iret
in
sbb
mov
push
inc
jl
out
mov
jg
rcr
mov
pop
pusha
and
and
loop
pop
cltd
orl
add
jl
mov
and
pop
enter
je
int
jne
test
insl
push
mov
pop
imul
hlt
mov
insb
arpl
adc
and
mov
sahf
les
mov
jle
add
and
push
shlb
adcb
stc
test
add
pop
in
mov
test
int
les
arpl
push
add
and
fidivl
jno
sbb
mov
insb
dec
shll
les
loopne
insl
aad
push
xchg
scas
push
push
test
or
mov
mov
cli
adc
jnp
and
popa
adc
dec
je
fwait
sub
push
mov
xorl
das
sub
andb
ficomps
test
pop
jge
mov
rorl
and
cmpsb
stos
testl
and
ret
xchg
or
movsb
out
inc
mov
inc
stos
mov
sbb
add
mov
imul
lds
sahf
popa
mov
xchg
and
and
movsl
adc
imul
mov
ficoml
ja
int3
ja
jecxz
pop
pop
mov
adc
mov
and
inc
dec
and
mov
mov
insb
mov
stos
jl
push
xchg
mov
das
jne
add
and
cmp
push
and
pop
ficoml
and
mov
ja
sub
das
inc
sub
pop
push
xor
lret
sti
push
and
and
cmp
in
xchg
xor
mov
and
je
mov
movsl
inc
enter
sub
daa
and
jge
mov
jbe
repnz
fs
dec
mov
les
pop
mov
scas
outsb
jno
mov
scas
sub
pop
mov
xorl
xchg
mull
push
push
xchg
cmpsb
sahf
mov
and
rclb
stos
xchg
loopne
mov
enter
fwait
jl
and
cld
ds
jae
fwait
adc
xlat
rcrl
cmp
mov
sbb
popa
arpl
sub
in
sub
add
rcll
push
shrb
mov
mov
adcb
insb
insl
pop
scas
pop
jecxz
mov
loope
mov
jno
outsl
out
outsb
fcmovu
and
inc
xor
sub
xchg
das
sub
mov
mov
out
inc
int
loope
je
add
adc
dec
mov
and
jl
int3
and
push
pop
pop
lret
and
pop
mov
into
fcoml
pop
and
inc
mov
mov
dec
add
jo
orb
pop
mov
fxch
jg
jbe
std
shrb
out
clc
pop
xchg
ljmp
cmp
mov
movsl
in
das
shll
mov
repz
sahf
mov
sub
jecxz
sub
sub
pop
or
dec
and
mov
mov
loope
lcall
mov
mov
fwait
cmp
pop
or
ja
lods
je
mov
mov
dec
les
and
push
loope
xlat
movsl
movsb
sub
sti
shlb
jb
imul
xchg
loopne
and
add
fst
pusha
adc
inc
pop
iret
or
mov
jae
and
in
repz
scas
mov
or
call
jmp
xchg
sbb
push
dec
pop
jle
sbb
roll
and
inc
sub
push
jle
and
sti
adc
xor
adc
test
lock
adc
sbb
cmp
or
or
outsb
das
jae
pusha
inc
sbb
ja
sar
and
mov
sub
jno
outsb
fdivl
sub
mov
mov
bound
xlat
and
lret
push
pop
loope
icebp
inc
imul
and
lret
lods
rclb
sbb
incb
enter
insl
and
inc
mov
pop
push
not
jno
and
lods
pop
lods
and
call
mov
out
mov
or
lds
rorb
arpl
out
cmpsb
popf
and
cwtl
xchg
mov
pop
pop
popf
dec
dec
jmp
sbb
in
rcl
in
fnsave
xchg
shlb
push
negl
out
cmpl
lea
fisttps
xchg
aad
cwtl
cmp
adc
lods
jle
xchg
mov
sbbl
or
mov
xor
pusha
in
pop
cmp
aam
and
add
movsl
and
testl
out
push
movsb
xlat
adc
mov
cltd
lods
rolb
gs
jmp
stos
and
and
push
stos
cmpsb
fcomps
push
and
xchg
mov
and
sbb
test
shlb
add
mov
jb
and
fdivrs
movsb
leave
test
xchg
inc
and
hlt
std
cmpsl
cmpsb
mov
add
popa
pop
push
mov
outsl
pop
cmpl
popa
jg
cltd
insl
js
cs
jmp
icebp
cmp
inc
pop
sbb
adc
cld
stos
rol
movsb
sbb
jno
and
test
inc
or
xchg
dec
and
pop
mov
in
adc
cmc
clc
popa
scas
test
movsb
inc
mov
mov
cwtl
pop
pushf
and
shrb
and
aaa
inc
push
mov
mov
pop
or
xor
pusha
mov
test
popf
push
lret
sbb
test
mov
lea
rorl
mov
mov
sahf
dec
mov
xchg
mov
dec
cli
subl
cwtl
push
xchg
adc
inc
mov
int
mov
jne
push
popa
roll
sbb
and
sbb
and
out
jp
lds
add
jne
push
xor
mov
sbb
jns
rol
cwtl
rcll
pop
ljmp
pusha
and
sbb
pop
sbb
inc
aam
and
cmpxchg
popa
adc
pop
cmp
imul
vpaddsb
popa
sbb
clc
mov
std
out
cmp
pop
data16
sbbb
and
test
jns
xchg
mov
jne
incb
iret
and
cld
aaa
mov
add
xchg
and
inc
xor
mov
and
fisttpl
movsb
mov
and
pop
or
std
mov
dec
xchg
mov
aam
jmp
mov
jne
push
je
mov
rcrb
push
push
inc
dec
and
nop
daa
and
pop
les
and
cmc
mulb
dec
mov
aas
xor
mov
sti
and
in
xchg
and
push
psubusb
lock
or
and
repz
fwait
mov
test
arpl
movsb
movsl
pop
push
loop
or
mov
jne
pop
sub
add
mov
daa
popa
mov
inc
and
testb
and
sar
mov
das
addr16
bound
popa
int
cmpsl
and
and
aaa
shl
inc
mov
pop
sahf
cmp
loope
in
lods
iret
enter
xchg
js
jmp
outsl
sahf
and
cmpsb
sbb
push
sub
xchg
nop
das
mov
push
lods
sbb
and
and
loop
inc
cmp
and
sub
mov
ficoms
and
sbb
loope
adc
ljmp
out
outsb
into
pop
out
jecxz
in
inc
push
mov
cmpb
loope
clc
xchg
sbb
ret
insb
pusha
ds
pusha
xchg
test
push
fwait
shll
leave
std
mov
mov
orb
inc
lods
and
sub
sub
jbe
and
into
and
jl
enter
call
cmp
adc
or
aaa
xchg
ljmp
iret
mov
dec
pop
xchg
mov
ss
xor
mov
push
cs
mov
inc
lock
ret
and
sbb
and
pop
pop
mov
gs
pop
decl
lret
pusha
dec
and
loopne
cwtl
add
dec
insl
mov
nop
int3
sbb
fsubl
mov
sub
and
push
pop
and
push
jg
call
xchg
xor
dec
pop
and
repz
lods
in
adc
cld
mov
out
fbld
add
adc
sub
and
jae
jns
scas
mov
test
push
jle
nop
pop
jno
cmp
push
lcall
jge
jb
inc
in
inc
push
and
jecxz
mov
sbb
jae
cld
loope
add
sub
fwait
xor
adc
ljmp
push
and
inc
sbb
subl
stos
and
xchg
mov
jecxz
dec
out
sub
mov
cmpsb
aas
mov
mov
adc
mov
sahf
or
cmpsb
clc
inc
and
sbbb
ret
add
pop
cltd
fsubrp
cmpsb
mov
push
push
or
data16
std
fcmovu
les
popf
popa
loope
and
orb
push
and
jle
fsubl
loope
jge
jo
xor
xorl
insl
sub
adc
mov
lahf
dec
iret
pop
mull
rol
add
cmp
and
ljmp
add
out
cmp
and
cmp
inc
std
pushf
jnp
mov
pop
lret
and
pop
imul
mov
mov
inc
or
and
xchg
mov
mov
add
xchg
push
aaa
fsubrs
cmpsb
mov
mov
int3
and
movsl
outsb
imul
repnz
pop
and
pop
daa
mov
mov
and
add
popf
mov
jp
adc
insb
or
nop
movsb
cmp
inc
lahf
sbb
mov
or
test
inc
xchg
xlat
sbbb
and
dec
mov
sbb
leave
in
sbb
or
sub
stos
in
adc
xchg
mov
and
filds
and
fwait
xchg
scas
test
stc
fcoml
inc
fldt
mov
mov
and
aaa
mov
not
xor
sbb
test
repnz
jno
ret
out
mov
movsb
xor
adc
test
inc
mov
mov
push
out
lcall
mov
push
dec
and
pushf
push
jne
push
mov
sahf
pop
das
jbe
mov
jmp
cltd
outsl
jle
sub
repnz
subl
pop
imul
mov
jmp
and
cld
fisttpl
and
bound
imul
pop
mov
fistpl
xchg
or
and
xor
packssdw
mov
mov
jb
cs
and
jge
lret
jmp
sbb
cld
push
gs
lods
mov
pop
fstps
and
sbb
push
sub
sub
mov
filds
jl
fsubl
mov
movsb
lret
cs
lods
cmp
sbb
and
sbb
sub
mov
and
loop
add
cwtl
add
and
ret
xor
stos
mov
mov
orl
bound
gs
jle
stos
and
jge
mov
adc
inc
popf
in
cmp
jle
ja
sub
scas
mov
mov
ret
jecxz
lret
in
shlb
pop
sahf
push
outsb
addl
dec
xor
es
pop
daa
enter
stos
and
dec
imul
cmp
fldenv
aad
sub
dec
fildll
xchg
or
lcall
daa
insl
scas
jge
add
mov
into
and
jnp
sarl
jne
or
mov
inc
popa
dec
jg
andb
movsl
call
sbb
lret
xchg
out
test
mov
je
imull
inc
pop
sub
faddl
and
ficoms
or
loop
scas
xchg
std
lret
lret
xchg
and
inc
fsubr
push
and
mov
jl
and
std
es
and
pop
mov
jge
inc
push
mov
fsub
cltd
stc
xchg
xchg
and
into
shrb
test
and
pop
mov
xor
cmc
inc
sub
dec
mov
cmpsb
inc
sub
or
sub
xchg
xchg
sub
lahf
arpl
xchg
addr16
fs
lret
sub
mulb
loope
movsb
and
repnz
out
inc
pop
into
dec
jmp
dec
add
mov
mov
imul
fcoms
clc
ficompl
adc
jo
and
inc
lret
push
pop
mov
das
insb
shll
ret
out
cmc
pop
and
mov
sub
and
and
and
in
add
and
jle
lret
and
mov
mov
les
mov
pop
and
jmp
jb
cmp
jg
xchg
dec
icebp
and
pop
mov
dec
pop
or
js
pop
jle
fidivs
test
and
push
scas
ja
mov
adc
inc
mov
push
xor
xchg
lahf
mov
cmc
mov
gs
sub
push
popf
bound
add
notb
inc
shll
push
mov
sub
loop
mov
fs
sbb
xchg
push
xchg
xor
jnp
cltd
xor
push
sti
xchg
aad
xorl
xor
sbb
pop
jno
test
popa
jb
fdivrl
frstor
outsb
fnstcw
lods
lock
add
in
pop
or
inc
je
sub
and
pop
lods
sahf
shlb
and
bound
ret
adc
jmp
mov
jbe
xlat
and
and
into
cmp
out
sub
leave
sbb
xor
movsl
cwtl
and
ret
jl
xchg
push
pop
add
ss
iret
imul
adc
repnz
cmp
pushf
mov
push
mov
sub
push
stos
and
pop
fidivrl
jb
cltd
inc
or
pop
and
push
mov
push
test
and
mov
and
jle
dec
pop
dec
mov
push
jl
into
jno
mov
and
jne
std
and
aad
mov
imul
aad
push
push
in
and
adc
sbb
push
out
jo
pop
push
xchg
inc
and
mov
cmpsl
push
push
rol
lret
sub
mov
push
lock
sbb
in
adc
out
fisubl
sub
rorb
sub
es
lock
out
jg
cmp
pop
inc
cmpsl
outsl
dec
or
jb
sub
push
cwtl
jle
inc
inc
pop
adc
inc
sub
jns
sbb
push
aam
push
jge
fimuls
addr16
pop
test
lret
xor
xchg
loopne
pop
mov
std
stos
fistpll
ja
jno
pushf
ljmp
cld
les
push
xor
loopne
cltd
lods
lahf
mov
push
fcmovnbe
loope
and
ret
add
scas
pop
cmp
lcall
ja
pop
sbb
lret
rolb
push
ljmp
sub
std
add
xchg
loop
sbbb
inc
bound
jnp
add
or
dec
outsl
test
int3
cmpsb
mov
xlat
mov
mov
inc
push
jmp
arpl
fadd
lods
sub
cmp
and
test
nop
mov
inc
mov
jb
and
mov
jnp
mov
arpl
pop
and
fisttpl
and
inc
insl
lret
and
pop
pop
xchg
test
arpl
add
xlat
cmp
adc
pop
mov
and
outsb
lea
mov
sbb
decb
arpl
cld
nop
insb
mov
inc
fstpl
xor
jge
sub
pop
test
lods
and
xchg
jne
push
push
cmp
and
rcrb
sbb
stc
hlt
lahf
push
mov
mov
mov
sti
cmp
imul
addr16
pop
and
das
lea
push
mov
mov
mov
insb
xor
fdivrs
or
adc
stc
gs
add
push
push
int3
enter
xorb
iret
jbe
xor
popf
out
adcb
and
jmp
or
xchg
out
and
imul
xor
and
stc
lea
popf
xchg
push
and
sahf
mov
lahf
testl
and
and
jnp
and
and
jg
inc
push
cld
cwtl
cmpb
and
xchg
mov
movsb
outsl
cltd
scas
and
pop
dec
cmpsb
sub
addr16
xchg
outsb
les
mov
and
and
cmp
adc
and
lret
mov
push
pop
sbb
mov
fildll
inc
xchg
mov
fisubrl
xchg
lret
dec
inc
xor
sbb
xchg
fistpl
add
push
sub
add
sub
outsl
jns
xorb
cmp
addr16
add
inc
jl
mov
pop
in
cld
sub
adc
push
aas
test
js
or
adc
in
xor
mov
mov
mov
push
mov
push
and
jae
adc
subl
dec
inc
pop
mov
mov
push
ret
xchg
int
pop
and
pop
fisubl
movsl
pop
daa
dec
repnz
and
std
mov
and
nop
js
mov
mov
inc
cmp
sbb
aad
and
sub
test
or
cmpsl
fnstcw
mov
dec
jae
in
mov
loopne
pushf
pop
and
xor
in
je
andb
add
and
dec
mov
mov
rolb
xor
and
scas
out
data16
addl
xorl
mov
popf
adc
pushf
and
std
insb
aaa
lods
mov
pop
pusha
sbb
push
shrb
jo
and
dec
int
mov
and
and
jbe
stc
test
les
pusha
add
shlb
insl
movsl
lock
lods
lea
mov
sbb
fsubrs
and
outsb
sbb
jnp
fsubl
fimuls
arpl
mov
ljmp
enter
mov
jge
insb
cmp
and
nop
out
loop
pusha
and
fldt
popa
mov
pop
loop
imul
dec
add
mov
fbld
cs
or
cwtl
lcall
das
test
mov
and
sub
fsubrl
shlb
test
and
pop
pop
notb
xor
add
xor
sub
inc
push
inc
pop
mov
sbb
add
and
lret
mov
mov
rcrl
sub
jo
les
push
mov
mov
xchg
shlb
repnz
add
sub
es
mov
mov
mov
mov
and
shrb
jae
pop
mov
sbb
add
mov
jns
mov
lahf
fisubs
sub
ja
lcall
ljmp
mov
mov
scas
inc
mov
test
and
mov
mov
in
mov
cltd
movsl
aad
jbe
mov
loop
jnp
add
push
popf
inc
mov
mov
scas
jg
movsb
fdivr
and
xchg
and
popf
inc
jg
fldenv
add
dec
push
out
dec
icebp
or
insl
mov
or
test
add
mov
mov
aam
sbb
lea
mov
stos
sub
and
lcall
and
jge
mov
std
inc
pop
mov
and
notb
popf
adc
cmp
and
ret
xchg
enter
das
cwtl
test
cmp
adc
mov
jle
and
push
fs
popa
outsl
or
adc
popa
pop
shlb
enter
and
fistpl
push
bound
orb
or
jbe
pop
mov
scas
lods
pushf
inc
push
addl
hlt
xchg
jmp
and
jns
test
sbb
fiaddl
and
sbb
std
roll
adc
push
imul
test
mov
scas
jge
xor
dec
jnp
adcl
push
adc
sub
push
shll
cmpsl
and
cmc
dec
mov
add
scas
int3
popa
lods
out
and
stos
das
sbb
lods
fcoml
or
jnp
stos
std
mov
xchg
imul
mov
fidivs
xlat
dec
and
mov
dec
imul
out
insl
cld
or
sub
dec
sahf
stos
out
mov
sahf
test
and
or
pop
push
adc
cmc
popa
dec
xor
lods
push
and
mov
add
mov
mov
pushf
jno
adc
aas
mov
push
mov
call
pop
mov
push
sbb
add
push
fsubp
cwtl
dec
and
lods
dec
sarb
aam
push
xchg
dec
and
sub
aas
sub
xchg
mov
mov
test
xor
mov
call
int3
mov
add
mov
outsl
xchg
fcomps
adc
mov
sbb
inc
aad
and
fstps
scas
pop
test
mov
sbb
lret
incb
adcl
jl
or
and
push
aas
fdivs
rcll
xorl
jne
sub
cwtl
push
and
sub
mov
and
stos
mov
adc
jg
arpl
mov
stos
lock
jecxz
das
push
negl
dec
xorl
dec
push
lds
and
and
out
inc
repnz
push
jno
rep
cmp
loop
push
mov
push
and
and
test
outsl
fstpl
adcb
adc
arpl
and
test
fs
mov
in
xchg
jo
pop
push
push
and
mov
cmp
pop
out
and
mov
bound
sbb
jae
sbb
mov
ror
sub
and
dec
inc
mov
lods
jg
push
push
aad
jo
scas
jbe
into
sub
movsl
sarl
push
jae
mov
and
ret
xlat
test
xchg
push
mov
lcall
dec
icebp
arpl
xor
subl
in
mov
adc
loopne
mov
jns
rcrl
mov
xchg
into
lret
imul
loope
pop
fsubr
and
popf
mov
push
dec
in
sbb
and
jo
sbb
pusha
addr16
roll
aaa
mov
push
push
mov
sbb
pop
and
aam
jb
mov
arpl
add
cmp
pop
cmc
lods
xchg
mov
and
rcl
test
aad
ja
rol
dec
pusha
scas
or
mov
test
and
push
shl
test
and
cld
inc
lea
mov
popw
addl
and
pop
xchg
mov
fists
test
mov
mov
or
das
repz
sub
dec
pop
cmp
xchg
cmp
mov
pop
xor
ljmp
arpl
test
xor
movsl
pop
xor
fucomi
jae
and
sbbl
dec
xchg
xchg
popa
and
push
sarb
pop
scas
iret
pop
add
fimuls
push
lods
aaa
mull
ret
pop
mov
cld
shrl
push
andb
jb
popa
mov
movsb
orb
pop
push
mov
icebp
xchg
jmp
fidivrs
and
mov
and
int
add
pop
out
and
adc
and
push
mov
inc
insl
jmp
or
sbb
add
fisttps
or
dec
repz
and
shrb
add
jl
mov
orl
mov
sahf
in
movsb
mov
cmp
call
enter
and
xor
inc
and
adc
dec
ret
mov
stc
movsb
mov
xor
add
cwtl
xchg
mov
jo
outsl
rcll
pop
dec
adc
xchg
movsl
and
stos
jge
and
iret
inc
sub
sbb
pop
test
movsl
push
es
repz
mov
and
int3
cmp
dec
mul
and
jbe
push
mov
or
sti
pop
fs
cmp
adc
cmpsl
and
add
insl
movsb
stos
ja
dec
cltd
scas
jmp
sub
jno
insl
dec
xchg
and
cmp
movsb
clc
iret
repz
test
ds
lcall
jl
mov
jne
dec
mov
stc
jo
lock
cld
iret
in
lods
xchg
mov
push
and
sub
dec
and
push
sbb
sti
in
clc
lea
shl
push
and
add
movsl
and
cmpsb
and
dec
test
mov
dec
and
roll
and
sbb
repnz
mov
sub
inc
mov
movups
addr16
inc
mov
pop
fs
ret
in
add
and
or
pop
mov
mov
aaa
xchg
sbb
and
vxorps
mov
and
cmp
in
notl
jmp
mov
push
cmpsl
loop
inc
fisubrs
xchg
loopne
and
repz
xchg
cld
xchg
pop
jp
mov
fcmovnb
test
stos
out
sub
mov
and
xchg
insl
das
sbbb
test
pop
loopne
push
dec
stos
shrb
push
and
xor
fiadds
and
xchg
add
fnstcw
test
inc
or
and
mov
and
fwait
pusha
inc
das
dec
sub
shll
xchg
mov
out
and
aad
jns
xlat
or
call
jg
and
dec
lret
adc
mov
frstor
cli
sbb
cld
sub
inc
sub
jno
jmp
ds
cmp
push
lods
insl
iret
enter
or
mov
popl
mov
lds
dec
dec
jo
ja
cmp
jg
test
xchg
jmp
dec
mov
insl
and
push
xor
repz
call
popa
and
jmp
out
push
adc
aaa
pop
ficomps
and
push
cwtl
movsb
mov
and
popa
out
in
jecxz
and
test
insb
mov
mov
dec
call
nop
cmp
sbb
adc
jno
daa
in
xchg
inc
mov
inc
mulb
mov
mov
push
sbbl
les
and
and
es
out
and
mov
lea
dec
leave
cli
xchg
mov
xchg
sub
mov
inc
dec
lds
rcrb
fisttpl
add
or
mov
int
popf
popf
adcb
push
sbb
cmp
pop
lock
xor
movsb
test
xor
adc
and
lods
loopne
ret
mov
loope
xchg
fistpl
mov
out
jb
mull
insb
adc
mov
xchg
mov
mov
and
xchg
and
ret
mov
daa
adc
mov
pop
or
xor
mov
adc
and
dec
in
inc
addr16
sub
jo
push
and
lea
and
dec
push
loope
pop
mov
and
jo
outsb
xor
jnp
dec
shll
mov
xchg
jne
pop
xor
mov
jl
es
je
notl
and
test
push
ficompl
jno
arpl
pop
xor
pushf
mov
iret
mov
push
shll
popl
jnp
pushf
daa
xor
cmc
mov
and
mov
push
and
sar
mov
into
mov
fimuls
inc
mov
lcall
add
xchg
xchg
pop
cmc
and
loopne
jle
cmpl
lcall
xor
jo
outsl
xlat
cmp
cmpsl
and
out
or
mov
fcompl
iret
call
mov
push
and
cmpsl
or
sub
clc
es
mov
movsl
mov
cmp
jb
sets
and
jno
adc
out
movsb
adc
setge
inc
adc
jl
loopne
negb
popa
xor
push
ss
adc
or
lds
and
ds
add
mov
sahf
pop
das
sbb
sub
lock
mov
dec
test
testb
add
and
pop
xor
cld
out
fisttpll
push
and
inc
push
lock
or
mov
cld
cmp
imul
fucomi
xor
lcall
andb
andl
inc
je
loope
or
and
and
jecxz
cli
inc
loopne
mov
lea
xor
cmpsb
shll
mov
dec
and
aam
push
xlat
andl
mov
xor
add
and
adc
pop
mov
ret
jb
mov
popa
lret
xor
dec
cmpsl
cmc
and
test
mov
stos
mov
jae
ret
and
mov
ror
ljmp
adc
ds
add
pop
cmp
rcrl
or
jl
popa
negb
push
outsb
inc
dec
fsts
mov
loopne
outsl
push
sbb
add
push
sbb
dec
xlat
pop
out
mov
jecxz
incb
and
ss
into
orl
xchg
stc
mov
rcrb
bound
sub
xchg
push
loope
addl
inc
stos
insb
and
call
aaa
and
insl
pop
and
outsl
scas
inc
and
mov
jmp
xchg
xor
add
and
insl
mov
shll
push
inc
push
mov
dec
and
add
mov
sub
pop
and
or
outsb
dec
faddl
mov
sahf
lods
or
insl
push
mov
jbe
sbb
and
adc
jns
and
repz
dec
and
pop
ja
shl
test
and
dec
xchg
mov
fs
outsb
imul
test
enter
fidivs
arpl
cmp
adc
popa
daa
ss
jo
lcall
mov
mov
or
in
fisttps
sub
into
in
pop
jnp
pushf
xor
sbb
outsb
pop
mov
lahf
dec
popa
jo
testl
in
ds
iret
cmc
push
and
scas
insb
add
xchg
loop
and
ret
pop
inc
out
cmpsb
and
fldt
shlb
and
inc
pop
mov
and
bound
cwtl
dec
pop
and
cmp
xchg
xor
scas
pusha
out
lds
lret
jne
and
mov
popf
adc
mov
sbb
lret
mov
or
in
adc
das
imul
insl
es
push
stos
or
mov
leave
imul
dec
cld
jge
inc
cmp
loop
and
cli
fidivl
js
mov
xor
rcrb
and
xchg
fs
xor
cmp
and
push
popa
cld
aam
popf
cmpsl
adc
imul
and
and
xchg
inc
lahf
pop
dec
sub
add
mov
push
xchg
lret
pop
jne
inc
and
leave
push
das
ret
iret
movsl
inc
jnp
scas
les
sahf
mov
pusha
stos
outsl
cmp
adc
stc
xchg
cmp
dec
sub
and
push
jmp
xor
push
pop
dec
cmp
aaa
and
pop
icebp
divl
out
dec
cmp
sbb
out
adc
sub
or
add
lret
jns
xor
pop
xor
sbb
jl
cmpb
inc
mov
sub
or
int
cmpl
jno
xchg
je
mov
out
fcmovnu
xchg
push
aam
das
push
pause
popa
shrl
lret
sbb
xor
cmp
and
test
jae
mov
inc
push
mov
shll
and
cs
jg
sub
insl
icebp
push
mov
fsubl
sahf
in
mov
or
aaa
dec
test
and
orb
jb
sbb
mov
push
icebp
lret
arpl
add
and
popa
dec
sub
push
sbb
and
scas
andl
into
mov
dec
imul
gs
and
or
movsb
and
cmp
in
push
xor
std
cs
push
popa
movsl
dec
push
andl
xchg
pop
xchg
mov
push
mov
daa
lcall
cmp
add
popa
sbb
or
es
pop
rol
repnz
mov
adc
insl
pop
push
mov
fidivs
mov
and
push
call
and
or
jge
pop
jne
nop
negl
mov
ficoms
sahf
sbb
dec
mov
xlat
or
push
and
and
lods
pop
mov
and
cli
xchg
icebp
leave
add
and
push
adc
lods
imul
ds
dec
rorl
and
pop
dec
stc
cmp
jle
jnp
test
push
sub
and
nop
xor
and
mov
mov
ret
xchg
push
and
cmp
xchg
repnz
andl
ret
test
xor
push
addr16
lds
sarb
cmp
mov
popf
out
add
iret
and
mov
frstor
push
lret
or
ret
vmovlps
xor
lret
mov
mov
xchg
sbb
in
mov
out
icebp
mov
es
outsl
xchg
jno
push
and
stos
ljmp
daa
shl
lret
inc
les
inc
add
and
dec
aam
dec
pop
iret
add
sbb
cltd
mov
push
lds
subl
lret
cmp
hlt
and
scas
mov
cmc
into
arpl
ret
movsb
movsb
pop
sub
or
xchg
stc
add
adc
std
das
outsl
cld
cmp
mov
test
mov
cmp
popf
jns
aaa
cmp
imul
clc
xor
inc
and
mov
ret
and
cmp
das
int
xlat
mov
push
jnp
subl
pop
test
mov
imul
insl
addr16
repz
sub
xchg
aaa
les
in
scas
pop
lods
bound
push
call
frstor
adc
fadds
push
xchg
dec
jb
and
xor
push
xchg
cmp
dec
jle,pt
shrb
mov
in
lahf
and
dec
out
sub
pop
mov
pop
and
cmpsl
or
or
mov
je
jae
add
popf
rcr
scas
inc
sbb
cmp
les
popf
enter
fnstsw
sub
les
push
sub
mov
cli
sub
jle
push
jns
cld
ficoms
jbe
jne
fistpll
mov
or
loop
adc
mov
or
icebp
das
call
pop
faddp
adc
fcoml
or
mov
rcrl
jns
movsl
add
mov
push
addb
roll
fcmovne
mov
inc
lahf
push
and
xchg
and
jae
xchg
popf
and
xor
orl
pop
and
adc
add
and
cmp
jns
repnz
out
sbb
je
shlb
jbe
fisubs
out
mov
repz
aaa
mov
mov
popa
add
cld
les
and
int3
jecxz
out
neg
and
pop
hlt
lcall
shl
push
cmp
outsb
test
adc
adc
out
mov
jmp
mov
and
dec
fs
call
andl
add
inc
mov
and
dec
data16
and
out
rolb
int3
enter
clc
and
pop
das
and
or
ss
loop,pt
mov
add
and
and
mov
rcl
imul
insb
hlt
orl
scas
mov
sbb
mov
xor
or
mov
xchg
pop
sub
sbbb
test
push
inc
ret
xchg
loop
and
mov
imulb
sbb
xchg
mov
and
add
fidivrs
jmp
xchg
lea
andl
pop
xor
and
pop
inc
fisubs
jl
adc
loopne
sub
adc
sbb
and
mov
loop
and
xchg
icebp
aad
mov
mov
std
movsl
xlat
dec
jbe
mov
mov
roll
and
aam
shlb
dec
leave
sub
clc
and
pop
xor
cmc
and
test
sub
rclb
lods
insb
imul
int
cmc
cmp
rolb
add
in
fisubl
ret
push
push
pop
sub
sti
inc
repz
sub
out
pop
and
mov
into
popf
xchg
and
add
enter
xchg
and
in
mov
mov
loop
sbb
pop
push
inc
rol
movsb
lods
mov
push
in
and
cltd
sbb
andl
test
add
gs
cmpsl
pop
or
mov
and
or
xchg
out
push
and
popf
jnp
bound
xor
inc
aaa
out
mov
out
inc
sahf
add
dec
sbbl
and
mov
loope
sbb
add
cld
lds
and
out
mov
frstor
pop
ret
sbb
xchg
xchg
and
inc
and
out
insl
insl
xchg
stos
scas
sbb
add
xchg
xchg
sti
jb
lods
movsl
jp
cmc
and
push
mov
adc
cmp
pop
jbe
pop
inc
and
sbb
push
or
sbb
and
dec
pop
mov
daa
pop
add
ret
pop
fmull
sahf
and
scas
das
test
pop
mov
dec
jne
lahf
or
cmp
data16
mov
pop
adc
adc
in
xchg
or
lahf
mov
mov
or
jg
sub
adc
loop
in
movsb
and
daa
mov
and
xchg
mov
movsl
lods
das
insb
inc
popa
mov
test
rclb
ret
sub
sarl
call
leave
fsts
and
iret
int3
repz
xor
fs
dec
and
out
lret
jle
aas
jne
and
pop
into
and
mov
aas
jnp
and
addr16
and
dec
mov
push
mov
dec
jnp
cmp
and
popa
inc
inc
mov
pop
movsb
movsl
lahf
loope
and
push
jne
xor
popf
mov
adc
and
xchg
jl
rorb
stc
and
push
aam
mov
test
movsl
aas
dec
cmp
jb
into
jecxz
rorb
mov
and
dec
test
xor
ret
mov
dec
popl
dec
movsl
test
jno,pt
enter
faddl
and
fwait
dec
add
or
in
push
cwtl
int3
pop
mov
xchg
out
les
xchg
jl
jmp
pusha
or
lcall
push
and
lret
inc
add
idiv
repnz
and
inc
cld
and
inc
mov
mov
xor
aam
and
das
and
xor
popa
jns
pop
mov
or
gs
out
mov
hlt
ds
pushf
or
les
inc
adc
pop
push
ja
push
and
xchg
mov
es
jne
and
fstpl
pushf
ret
xchg
popf
movsl
push
jmp
mov
xor
outsb
idiv
sub
mov
in
in
mov
push
and
sub
mov
pop
push
das
outsl
or
inc
mov
jecxz
inc
and
push
andb
jmp
addl
inc
test
mov
mull
jmp
xor
into
enter
lea
inc
scas
and
imul
and
cmc
iret
and
loopne
inc
int3
andl
mov
cmp
or
add
test
add
test
popa
fxch
jp
add
popa
inc
sbb
insb
jle
inc
cld
inc
jnp
xor
mov
inc
loopne
enter
cmp
jbe
sub
imul
movsb
aad
cmp
or
cmp
daa
jp
in
mov
push
push
inc
xor
and
and
into
pushf
cmpsb
sub
pop
mov
inc
addl
in
movsl
and
lods
push
jbe
or
stos
pop
mov
and
mov
cltd
push
mov
and
cld
and
jo
inc
in
xor
sub
movsb
movb
inc
das
mov
out
sbb
cli
arpl
pop
and
jne
cwtl
fsubrl
dec
fcomps
dec
xchg
push
mov
call
or
and
in
jp
aas
jg
stc
insl
sbb
push
and
xor
push
jae
mov
jmp
dec
jmp
push
cltd
repnz
mov
and
in
cld
mov
js
insl
mov
cmp
sahf
sar
jg
pop
dec
sti
cmpl
arpl
pop
repnz
movsb
popa
shrl
xor
pop
dec
imul
xchg
inc
dec
rcll
movsl
xor
mov
mov
xor
jbe
aas
add
cwtl
std
mov
mov
cmc
and
cmp
fidivl
inc
and
dec
in
cmp
add
outsb
test
and
cwtl
gs
lahf
insl
and
cmovle
inc
fadd
and
in
out
pusha
popa
cmp
add
mov
test
mov
cltd
test
iret
out
mov
shrl
gs
sub
add
adc
mov
mov
mov
movsb
pop
sbb
add
mov
scas
cmc
stos
pusha
add
dec
cwtl
mov
or
rolb
pop
hlt
outsl
xchg
fsubrs
sub
push
fs
ficompl
fsts
cwtl
and
ficoms
pop
das
cmpsb
bound
xchg
xor
and
movsb
cmp
jecxz
and
sbb
mov
mov
test
pop
and
pop
mov
mov
and
bound
and
aas
adc
pop
inc
aam
clc
mov
cmpsb
and
and
mov
pop
mov
ss
or
imul
fsub
cltd
dec
mov
outsl
iret
cld
psrlq
and
mov
pop
ret
cmp
jnp
and
lock
mov
stc
mov
and
inc
mull
into
shlb
jno
loop
push
xor
sbb
inc
and
insb
pop
loope
and
out
cmp
xchg
add
mov
and
movsb
jns
jb
xchg
and
rcrl
aam
popa
pop
call
dec
sub
cmc
mov
in
and
jno
or
lea
pushl
pop
lcall
shl
sahf
inc
and
call
mov
imul
pop
jb
sub
mov
xchg
cltd
dec
sarb
gs
and
test
lock
and
in
mov
ja
out
and
push
push
lds
fistl
or
and
push
sub
jae
and
push
mov
nop
jne
lods
ljmp
and
xchg
or
pushf
and
dec
xchg
sub
and
clc
out
dec
insl
lahf
and
cmpb
or
sti
mov
ljmp
js
jmp
mov
xor
mov
pop
push
adc
pop
and
mov
in
xchg
xor
or
int
inc
pop
filds
or
mov
inc
inc
and
negl
push
clc
test
movsl
push
sub
mov
adc
mov
jae
add
mov
and
push
dec
outsl
adc
mov
adcb
dec
push
out
add
sub
into
es
pusha
loope
bound
je
out
and
mov
push
and
shll
movsb
and
movsl
out
je
and
adc
inc
jnp
inc
and
add
das
inc
dec
loope
adc
popa
test
stos
xor
push
aad
imul
ret
fcompl
mov
ret
jno
and
pop
add
and
test
daa
into
pop
outsb
test
and
insl
push
out
and
loope
pmaxsw
sahf
xchg
movsl
inc
add
pop
mov
popa
aam
aas
les
push
pop
jne
fdivr
movsb
lock
enter
je
xchg
push
sub
push
jp
sbb
cltd
stos
out
mov
aad
mov
insb
or
push
and
push
enter
pop
test
jb
jge
add
inc
test
ja
mov
js
mov
push
jge
sub
jno
test
sub
mov
lret
loop
iret
push
jo
push
lods
cltd
pop
push
mov
movups
dec
lods
sarb
and
jl
rcr
and
les
push
inc
or
lods
movsl
pop
mov
test
mov
and
test
mov
and
lods
loop
pop
push
and
jae
pop
pop
jmp
mov
pop
fmulp
mov
xlat
mov
jne
adc
adcb
scas
and
iret
xchg
mov
jo
movsb
gs
dec
wrmsr
loop
scas
in
jns
fs
xor
pop
fisubs
or
enter
lea
and
xchg
mov
sbb
push
xlat
and
cli
and
std
ror
cmp
rorl
sub
cmpsb
pop
or
inc
in
mov
stc
cmc
mov
aaa
jo
test
push
jmp
inc
stos
popa
and
loop
xchg
hlt
mov
and
ret
inc
mov
mov
movsl
push
jmp
inc
and
rclb
and
mov
loop
mov
insl
addr16
pop
sbb
xchg
sti
loope
jge
pushf
push
aas
xor
hlt
negb
cmp
fistl
shlb
and
or
mov
push
xchg
push
mov
adc
mov
or
ljmp
jecxz
scas
and
or
sarl
jg
rclb
les
and
push
loop
rcrl
lods
sbb
push
pop
mov
fucom
adc
jg
mov
or
xchg
jl
and
imul
xchg
jmp
jl
xor
arpl
movsb
sbb
xchg
inc
add
dec
mov
scas
and
outsl
rcll
jecxz
in
and
out
notb
mov
int3
xor
and
cmpsb
divl
subb
adc
jns
mov
push
and
into
je
and
sbb
lcall
in
mov
sub
xor
mov
jg
test
dec
test
push
xor
scas
nop
jle
sub
add
and
or
jno
add
jp
pop
jns
shll
push
xchg
lcall
mov
cltd
cmpsl
xchg
sub
xor
je
call
fwait
ds
jae
or
jb
data16
and
cli
mov
and
out
xchg
mov
pop
push
stos
ds
call
sub
movsb
inc
add
ret
xchg
subl
cmp
test
xchg
xor
cmp
je
xor
jge
sbb
or
jle
jno
in
mov
sub
jno
ja
fwait
in
and
push
mov
xchg
sbb
daa
inc
push
and
inc
leave
push
test
and
xor
popa
xchg
sarb
rorb
jl
cmp
and
push
mov
and
cwtl
adc
stos
push
push
inc
cmpsl
movsb
popa
push
ja
cmpsb
xchg
scas
inc
cli
and
mov
mov
push
jae
fisttps
incb
ret
jo
xlat
adcl
jge
fistpl
and
and
and
insl
inc
push
inc
shr
test
pop
sbb
mov
sub
add
inc
jb
cmp
imul
pop
in
sbb
movsb
dec
shll
and
add
test
pop
push
jae
inc
push
cmp
and
repnz
mov
iret
cs
cwtl
ds
lock
arpl
cwtl
cmpsb
and
xchg
dec
divl
out
sbb
or
sub
mov
jle
pop
and
mov
dec
mov
insl
scas
lcall
mov
pop
push
mov
mov
xchg
bound
dec
fwait
gs
leave
mov
and
mov
mov
movsb
popa
adc
lods
xor
ds
and
andb
pop
pusha
cmpsb
push
mov
insb
mov
addl
sub
shl
stos
movsb
arpl
xchg
pop
lods
movsw
dec
lea
and
xchg
cmp
and
dec
pusha
jns
lret
add
mov
ret
adc
fcmovb
and
xchg
rolb
and
mov
loope
mov
lock
jns,pt
rol
fcomps
mov
push
shr
or
ss
mov
int3
cmp
adc
and
inc
inc
stos
cmc
imul
cwtl
mov
add
adc
xor
sbb
sbb
and
xchg
fsubrl
push
lds
jnp
lcall
popa
or
aam
and
sub
mov
ret
scas
jbe
loop
mov
sti
and
add
ja
add
ds
popa
mov
lods
leave
das
adc
test
add
xchg
inc
sbb
inc
sub
and
lret
movsb
jmp
mov
push
and
add
jp
popf
mov
pop
imul
pop
sub
insl
xor
test
cmp
inc
cld
push
lret
and
dec
sbb
cmp
or
mov
mov
ja
jmp
movsb
ss
sub
mov
iret
and
shlb
pop
cld
sub
pop
jno
test
movsb
push
jl
mov
fstps
mov
add
xchg
xchg
and
cli
push
xorl
pop
mov
cmp
ret
cwtl
call
int3
sbb
dec
add
and
mov
cwtl
pop
mov
push
mov
test
pop
and
movsb
xchg
test
insl
ret
xchg
popa
cli
dec
sahf
daa
aad
cwtl
adc
ja
shll
rorl
sahf
dec
incb
and
mov
pop
sub
pop
and
lock
and
int3
and
push
and
sbb
adcb
push
push
and
add
sbb
insl
jae
out
movsl
inc
and
jae
pop
and
or
repnz
sbb
push
xchg
cmpsb
shll
dec
and
and
dec
adc
les
jmp
mov
shlb
nop
subb
sbb
and
jl
imul
inc
add
and
fsubs
push
aad
loop
mulb
imul
xor
aaa
jne
jo
arpl
adc
and
insb
cs
jns
and
sub
daa
ljmp
jle
fcompl
xchg
mov
mov
mov
insl
mov
aas
sub
ja
xchg
in
fsubs
xor
and
pop
idivl
xlat
rcll
repnz
dec
in
jae
out
inc
jns
loope
mov
xchg
mov
add
sub
xchg
dec
mov
fwait
pop
gs
sahf
and
or
shlb
dec
cmp
inc
xchg
push
inc
adc
mov
cmp
movsl
xlat
daa
dec
icebp
xor
and
enter
sbb
and
jecxz
xchg
pop
add
movsb
scas
cmp
dec
add
cmpb
add
cmp
and
pop
jp
inc
or
rclb
pop
outsl
test
lcall
sub
adc
push
scas
popa
xor
inc
out
push
shlb
clc
leave
shrl
sub
and
sbb
mov
push
loop
dec
lea
fadds
jae
push
xor
ljmp
sbb
clc
popf
cwtl
dec
fwait
dec
push
in
into
mov
mov
int3
out
and
cmp
and
nop
push
scas
and
cwtl
pop
sub
push
das
push
int
mov
mov
imulb
jmp
pop
loope
nop
aas
stc
push
in
adc
mov
popf
adc
and
mov
lock
stos
sub
inc
and
adc
pop
in
mov
aad
push
stc
faddl
jb
mov
lods
decl
call
and
in
enter
in
and
mov
mov
rolb
sbb
aam
cmp
jbe
arpl
and
xchg
aad
rcr
push
movsb
sbb
xchg
jle
push
push
popa
bound
call
andb
xacquire
fbld
adc
adc
mov
and
push
mov
test
xchg
mov
add
and
icebp
ret
inc
loopne
xchg
cmp
inc
in
pop
pop
ds
add
jb
scas
xchg
sbb
outsl
and
pop
inc
lret
push
lods
dec
mov
xor
icebp
xchg
lods
sarb
and
popa
cmp
ret
cmc
sub
scas
pop
jae
insl
loop
fsubs
hlt
pop
add
jp
and
lcall
and
jae
repnz
int3
icebp
and
inc
lcall
or
mov
and
lcall
jg
mov
dec
jmp
or
push
sbb
adc
mov
inc
jne
adc
and
lock
aaa
imull
and
mov
adc
std
pop
popfw
jno
enter
adc
pop
dec
push
sbb
mov
sub
movsb
cmp
adc
pop
and
adc
add
push
xchg
adcb
xor
andb
es
and
mov
das
mov
mov
ss
sub
push
popa
aas
jmp
pop
scas
sahf
inc
inc
and
stos
sub
in
out
pusha
bound
xor
jecxz
nop
and
in
cltd
inc
sub
loop
mov
fcmovnbe
sbb
and
lahf
mov
adc
and
fiaddl
sub
add
popa
loope
xchg
jne
jno
jle
pop
lret
pop
loope
pop
lds
movsl
mov
xor
fsts
sub
addr16
xchg
in
outsl
and
rorl
inc
push
push
test
cmc
mov
jmp
arpl
xchg
in
mov
and
and
clc
subl
nop
lret
jno
cmp
push
mov
movsl
addb
mov
mov
and
jo
jp
mov
pop
loopne
out
icebp
fisubl
inc
sarl
inc
scas
jle
sub
test
cmp
and
and
repnz
xchg
cmc
insl
mov
out
inc
inc
jmp
enter
fbld
stc
int
mov
call
movsl
std
sub
lods
cmp
scas
shr
xchg
inc
or
sbb
sub
int3
sub
mov
and
out
push
push
mov
and
dec
cmp
and
push
xchg
cmp
add
leave
cld
mov
cltd
and
or
enter
sub
imul
shl
imul
lods
movsb
pop
out
iret
and
mov
insl
dec
and
stc
fcompp
pop
jl
jp
movsb
lret
iret
cmp
inc
test
xrelease
vpsubw
movsb
pop
xor
mov
aaa
pop
jge
ljmp
xchg
and
js
test
jle
imul
xlat
pop
daa
shrb
pushf
mov
ror
jge
ds
popa
je
xor
inc
xchg
adc
pop
int
and
or
add
mov
push
and
je
xor
xchg
aaa
into
mov
and
xlat
dec
mov
rcrl
rorl
imul
popa
shr
mov
cwtl
xchg
mov
push
mov
jge
pop
jne
or
shlb
add
mov
cli
xchg
jno
or
mov
test
adc
and
cmpsb
in
jno
jbe
pop
add
mov
rolb
and
sbb
xchg
mov
repnz
and
testb
into
loopne
and
das
jmp
and
xor
and
lock
test
dec
mov
jno
int
add
repnz
jbe
sub
push
and
inc
jne
cs
inc
and
mov
das
mov
jg
jmp
and
rorb
jbe
outsl
and
inc
test
jp
nop
test
lret
cmp
fsubrl
xchg
xor
bound
iret
cmp
inc
cld
fucomi
and
jbe
insl
xor
push
mov
out
jno
xchg
andb
pop
push
mov
mov
inc
lahf
idivb
int
xor
mov
sub
mov
mov
pusha
movsb
mov
cmpsb
stos
xor
mov
aas
loop
and
inc
push
pop
xchg
movsbl
jbe
mov
gs
iret
lea
sub
sub
fdiv
ja
andl
scas
leave
add
or
dec
cmp
add
mov
cmpsl
add
cmc
sahf
mov
push
xor
adc
popa
mov
pop
and
aas
filds
and
mov
add
jb
inc
and
pop
jecxz
fsubs
xchg
adc
rol
xorb
mov
sti
fs
mov
jns
xlat
or
mov
cmp
pop
xchg
sub
bound
pop
jg
xor
xor
dec
testb
bound
loopne
lret
pop
addr16
test
stc
jo
roll
and
jne
pop
pop
hlt
les
and
mov
pushf
and
sahf
push
imul
dec
fisubrl
addl
jne
adc
push
add
xor
xchg
in
enter
outsl
dec
push
inc
pushf
rolb
dec
mov
pop
jno
addb
rcrb
sbb
and
push
sbb
mov
jmp
cmp
bound
rorl
addr16
adc
popf
fwait
mov
repz
jo
pop
jbe
and
and
adc
xor
and
nop
rorl
mov
jno
std
icebp
jge
pop
cmpsb
mov
mov
sub
and
fwait
loopne
push
sbb
add
jmp
ret
rcr
popa
cmpb
cmpsl
pop
mov
adc
mov
jg
or
clc
inc
lahf
push
sub
gs
jl
or
push
pusha
sbb
and
lock
sub
dec
mov
adc
mov
add
imul
mov
xchg
mov
adc
mov
shll
and
sbb
and
repz
lock
lods
dec
xchg
shll
jno
xchg
popl
ret
push
push
mov
sbb
add
add
cmc
and
in
pop
mov
jno
roll
stos
test
loop
scas
jnp
data16
movsl
and
ss
push
ret
movl
cs
subb
std
adc
cmpsb
clc
stos
dec
mov
xchg
sbb
and
adc
push
aas
sub
jae
es
mov
out
push
out
cs
jne
sub
mov
mov
push
xor
and
les
sbb
mov
divb
sub
mov
subl
stos
mov
int3
rolb
cmpsb
js
xor
loop
cli
movsb
push
and
push
push
cltd
push
data16
ret
js
and
inc
in
push
dec
stc
and
addb
adc
push
inc
sbb
pusha
dec
xchg
ja
cmp
iret
dec
les
nop
and
int3
mov
xchg
add
lock
add
pop
mov
js
cwtl
andb
sub
iret
shlb
daa
loopne
adc
add
lcall
mov
fs
mov
movsb
inc
jl
fnstenv
xor
sbb
and
jns
push
bound
fcmovbe
and
jp
dec
and
out
mov
and
pop
pop
pop
xlat
out
aas
aam
xor
scas
gs
iret
jb
movsb
ret
mov
mov
lea
and
sub
jge
push
or
push
out
aas
lcall
daa
push
stos
ret
sub
cmp
daa
mov
mov
cmp
mov
inc
mov
lret
push
stc
push
pop
xlat
pop
and
pusha
lods
add
xor
loopne
or
and
rcrb
pop
xchg
sbb
insl
and
lcall
test
jg
scas
bnd
fstps
mov
jp
inc
cmp
mov
pop
adc
add
cwtl
loop
fndisi(8087
add
test
fidivrl
shrl
in
icebp
ret
ret
in
popa
adc
jns
jb
mov
push
faddl
inc
sbb
dec
dec
sub
sahf
in
jmp
sub
mov
xor
rdtsc
push
test
in
aas
lret
inc
push
and
sbb
int
xor
popa
mov
call
inc
inc
js
and
jecxz
xchg
jmp
cmp
jno
fs
dec
and
lea
sbb
xchg
cmp
jnp
and
ret
inc
fucomip
mov
adc
and
adc
or
das
inc
shlb
nop
dec
pop
cmp
mov
mov
xorl
xchg
bswap
pop
xor
js
test
inc
scas
mov
and
jg
mov
sbb
pop
jb
or
mov
loopne
and
mov
in
jne
flds
pop
data16
and
pop
inc
jno
shlb
call
push
and
movsb
mov
mov
push
jne
sub
call
pushf
andl
sahf
lahf
movsb
mov
xor
cmp
lahf
jecxz
adc
in
ja
push
inc
mov
xchg
mov
add
js
add
fdivrl
xchg
outsl
or
adc
rcrb
lds
sti
pop
xchg
and
mov
xchg
aaa
jo
and
inc
hlt
push
push
mov
shlb
ret
mov
scas
enter
bound
gs
leave
lahf
and
xchg
stos
data16
and
ljmp
add
pop
lahf
sub
popf
mov
out
and
popa
sbb
inc
pop
and
test
sub
js
scas
loop
in
cmp
dec
xorl
ficompl
adc
stc
mov
repnz
clc
cmc
cltd
mov
and
and
loope
push
insb
and
test
xor
sbb
call
and
aaa
leave
pop
push
stos
and
and
push
sub
and
jae
rol
xchg
fxch
xor
aaa
inc
aas
jae
mov
jg
ja
push
adcl
loope
gs
ljmp
sbb
mov
scas
xchg
jl
popa
fcmovnb
aam
je
das
add
adc
in
fcomip
dec
and
cld
dec
mov
or
push
sbb
xchg
insl
and
mov
adc
mov
pop
push
fs
sbb
hlt
loopne
push
pusha
stc
fwait
add
ds
test
mov
aas
bound
inc
mov
mov
jecxz
mov
clc
iret
adc
or
fisttps
insl
out
cltd
ds
dec
mov
dec
popa
xchg
movsl
imulb
add
fistpl
sahf
outsl
mov
mov
js
add
inc
or
cmpsb
gs
xchg
scas
cmp
orl
push
movsl
daa
or
jp
push
xor
cmp
push
cli
inc
cs
xchg
das
mov
cmpsb
loope,pt
jp
add
mov
pushf
out
loope
sbb
xor
dec
push
cmp
aas
ret
jne
int3
sbbl
jns
dec
shlb
loopne
dec
mov
lcall
xchg
lods
mull
dec
xchg
sub
repz
mov
subl
lcall
ljmp
xorl
sarl
out
xchg
push
add
test
lods
xchg
gs
out
and
arpl
and
cltd
and
push
fistpll
push
out
xchg
mov
push
or
cmc
fisubs
push
repnz
inc
lods
lret
ret
sbb
xchg
mov
xchg
dec
and
xchg
add
push
mov
lret
out
jns
loop
stos
test
hlt
jne
aaa
mov
bound
loopne
sahf
dec
sub
lahf
mov
test
mov
fdivrp
cmp
dec
and
and
jl
testl
mov
adcb
and
cmp
sbb
lock
test
add
xor
push
mov
cld
jecxz
shlb
scas
mov
and
xlat
fs
je,pt
and
push
lea
and
jb
aas
outsl
jno
divb
dec
and
mov
shll
mov
scas
push
ja
test
and
pop
popf
hlt
enter
xor
mov
sbb
subb
push
and
push
rcll
push
dec
inc
nop
push
fs
lcall
mov
jne
and
sub
sbb
mov
in
xchg
mov
insl
mov
and
lret
and
sbb
jge
cmc
out
rorb
addr16
mov
and
repnz
pop
mov
shrl
gs
stos
xor
sarb
adc
je
mov
lret
cmc
and
add
cld
push
xor
mov
xor
popf
mov
sub
push
outsl
inc
or
dec
test
or
ja
and
push
hlt
and
aad
test
pushf
add
cmp
dec
adc
out
pusha
xchg
or
cmp
xchg
das
jnp
int3
dec
pop
xchg
xor
and
xor
shrb
and
popf
je
jge
and
inc
aad
xchg
aas
and
loope
mov
fisttpl
lods
pop
jbe
mov
cli
scas
movsb
inc
jmp
cmc
inc
sbb
mov
aad
das
loop
test
popa
fnstsw
push
sub
dec
dec
int3
push
pushf
mov
xor
hlt
adc
and
sahf
andl
sub
dec
in
aam
movsb
cmpsb
xor
xor
dec
pusha
and
jmp
pop
sub
dec
ret
and
mov
inc
mov
dec
andl
fsubl
or
and
adc
movsl
movsb
out
stc
divb
loop
and
inc
mov
lds
mov
andb
lea
into
in
std
cwtl
and
add
fwait
and
inc
pushf
in
scas
jns
out
lods
das
push
push
lds
xor
in
pop
insb
xor
mov
into
arpl
in
movsl
cmp
sbb
cwtl
mov
jl
cmp
or
aad
jmp
and
mov
dec
cmpsl
js
cmp
and
fdivp
into
daa
push
adc
pop
ljmp
sbb
scas
dec
sub
push
jbe
xor
pop
pop
and
mov
pop
mov
and
sub
aas
aaa
lcall
stos
mov
or
outsl
bound
out
popa
fs
sahf
mov
dec
movsb
movsb
fildll
lret
jns
ja
jp
sub
or
leave
jb
repnz
pop
and
hlt
mov
adc
push
pop
or
fucomp
imul
and
mov
xor
gs
shl
outsb
out
or
aaa
or
cmp
sub
popf
mov
and
faddl
pop
and
in
push
mov
dec
mov
mov
mov
add
mov
std
jno
cli
push
inc
pop
xor
jo
and
aam
sub
sti
mov
mov
xchg
mov
stos
and
jl
ret
push
loop
and
sbb
mov
mov
and
cmp
and
popf
mov
hlt
pop
imul
outsb
cmp
jg
xor
and
imul
jmp
inc
fs
popf
and
shr
pop
jecxz
and
or
inc
dec
push
and
in
push
cwtl
leave
imul
mov
incl
pop
mov
rclb
imul
sub
lea
iret
inc
cmp
sub
pushf
sub
push
out
in
add
inc
sub
xor
sub
pop
xor
cltd
sbb
fwait
out
and
shll
or
arpl
adc
bound
popa
and
mov
lea
fcoml
outsb
gs
repz
cmp
inc
and
ss
inc
jge
adc
add
sbb
shlb
push
push
and
mov
jl
out
xchg
pop
cmp
mov
mov
ss
lcall
mov
mov
fldcw
ds
and
mov
imul
mov
popa
pop
or
mov
xlat
iret
orl
mov
mov
movsl
movsl
cmp
mov
cmp
leave
shlb
cmpsb
mov
nop
and
pop
sbb
sahf
ss
fildll
aas
jg
popa
pop
sbb
in
and
cli
int
and
loopne
sahf
lret
adc
and
repnz
das
unpcklps
dec
jecxz
lods
int3
frstor
mov
call
mov
popa
add
mov
inc
xchg
fs
and
xchg
jno
sbb
dec
bound
hlt
lea
dec
test
loop
repnz
sbb
scas
inc
mov
out
je
push
and
cmp
and
int3
adc
js
and
pop
call
sahf
and
cmpsb
iret
stc
sub
aas
pop
mov
pop
and
icebp
inc
lahf
xchg
xchg
cli
popa
mov
sub
xchg
insb
mov
sbb
pop
outsl
mov
das
lret
add
andb
xor
loope
movsl
notb
sar
cmp
fnstsw
add
dec
and
or
or
push
out
int
cmc
cmp
je
insl
pop
mov
mov
in
lret
popf
nop
dec
fstp
in
aaa
outsb
xchg
fisubl
daa
and
xchg
mov
mov
and
mov
inc
ljmp
add
jae
mov
aad
cmp
jmp
cwtl
xchg
jb
ficoml
dec
xchg
test
cmp
mov
ret
popf
inc
xchg
mov
push
pushf
push
xor
or
xchg
div
pop
int
jmp
test
mov
jb
xchg
inc
repnz
jge
sub
adc
fimull
ljmp
push
in
ror
xchg
movsb
cmp
filds
add
xchg
shlb
fwait
cmp
lods
fdivrl
jnp
icebp
lea
xor
mov
repnz
mov
addl
jp
arpl
push
or
xor
faddl
sbbl
mov
in
add
sarb
dec
jo
and
sbb
add
mov
lret
mov
lahf
mov
lahf
pslld
jnp
cmp
movsl
and
sub
jno
ja
aaa
sub
pop
mov
insl
mov
mov
and
pushf
aas
adc
outsb
fwait
cltd
mov
xchg
and
aas
inc
idivb
sbb
and
push
xchg
mov
push
pop
cltd
sbb
pop
mov
inc
xchg
mov
sbbl
inc
shll
xchg
scas
xchg
aas
jne
inc
or
out
cs
loopne
fwait
es
mov
xor
cmp
pop
adc
cmc
sub
mov
inc
inc
pop
andb
leave
pusha
addr16
and
int
fmulp
ds
jge
jl
adc
and
mov
in
out
pop
fidivl
or
sub
push
test
movsb
pop
cltd
and
mov
pop
and
ja
sbb
add
imul
jle
and
push
jmp
and
push
shll
sub
and
out
in
test
movsb
pop
int
fs
sar
test
cltd
jp
mov
fucomip
cmp
mov
stos
popa
lahf
lods
int3
mov
dec
xor
push
je
push
push
ret
movsb
daa
frstpm(287
jne
popa
mov
insl
outsl
and
bound
xchg
lods
and
or
int3
das
addb
movsb
push
aas
push
frstor
xchg
ja
pop
sahf
and
xor
pop
sub
mov
fiadds
inc
andb
sbb
xchg
adc
mov
sbb
rorb
mov
cmp
lods
mov
add
enter
leave
mov
xchg
add
pop
mov
or
xchg
jno
subb
and
orb
cmpsb
dec
and
cs
mov
das
out
inc
cmp
loopne
int
cmpsb
sahf
push
shll
mov
sbb
and
cmpb
sub
cmpsl
cltd
add
push
or
ja
mov
enter
neg
std
mov
outsl
das
lret
cmpl
and
aam
fwait
testb
rorl
mov
mov
addr16
mov
push
lret
les
mov
aam
push
mov
mov
outsl
and
sub
xchg
repnz
or
cmp
xor
mov
in
vpsubq
jp
and
jmp
mov
xchg
lods
and
mov
xchg
call
outsl
mov
popa
or
add
cli
je
lods
and
jne
shl
mov
int3
inc
dec
std
mov
clc
xchg
push
mulb
xor
in
je
and
cmp
pop
sbb
popa
leave
hlt
adc
fstl
lret
rorl
sbbb
test
sub
xchg
loope
adc
aaa
decl
clc
mov
hlt
scas
cmp
or
inc
sarl
push
rclb
push
cwtl
sub
mov
das
shll
into
and
popa
xor
fcoml
inc
pop
push
jae
repz
rcll
lds
pop
pushf
mov
sbb
mov
movsb
repnz
cmp
jle
mov
rolb
and
and
mov
or
xor
sub
outsl
push
pop
and
jne
lahf
add
cmpsb
call
push
mov
adc
push
iret
sub
adc
mov
add
add
cwtl
lcall
mov
pushf
push
xor
xchg
in
movsb
adc
and
nop
push
sbb
test
push
push
and
adc
test
xchg
dec
and
xchg
xchg
das
pop
cld
movsl
xor
lods
pop
shll
inc
push
and
push
icebp
call
inc
subb
jle
and
jl
mov
popa
nop
lods
pop
push
pop
cltd
mov
jecxz
roll
jbe
fstpl
fldln2
sub
inc
xor
mov
xchg
lret
xchg
ret
pop
and
xor
in
add
js
cmc
and
mov
sbb
shlb
pop
imul
xchg
mov
jmp
and
lcall
dec
add
dec
icebp
repnz
test
inc
cmp
test
sbb
jnp
subb
sarb
lds
push
or
ret
pushf
iret
mov
push
push
mov
and
aad
divl
nop
movsl
ds
cmc
xchg
xchg
or
or
addr16
and
xlat
mov
push
jo
jmp
stos
sar
sbbl
inc
mov
or
xchg
adc
cmp
clc
mov
test
xor
cmp
fsubl
pop
jmp
push
jo
push
movsb
movsb
fsts
mov
popa
es
fwait
pop
mov
xchg
sar
fstpt
cmp
sub
dec
leave
nop
test
and
js
pop
flds
mov
push
aam
fisttpll
adc
popf
movsb
push
add
ljmp
pop
and
cmp
xorb
jl
inc
xchg
and
ss
xor
lcall
rcll
daa
test
popa
sbb
enter
movb
and
adc
pop
xchg
movsl
mov
mov
sarl
mov
test
xchg
or
mov
add
inc
fmull
and
mov
in
lods
in
and
lcall
scas
out
jge,pt
and
pop
adc
decl
lock
add
pop
xchg
popa
sub
inc
into
mov
imul
mov
sahf
fcomp
add
adc
xor
scas
mov
inc
int
test
inc
decl
mov
mov
daa
into
push
mov
test
xchg
pop
es
ds
lods
sub
inc
inc
sub
arpl
pop
mov
data16
cmp
repz
aas
cmp
and
pusha
xchg
adc
ss
movsb
fimuls
mov
add
adcb
mov
mov
and
xlat
orl
imul
shlb
dec
lock
shlb
cli
xchg
daa
and
push
das
jecxz
mov
outsl
xchg
or
rep
insl
fmull
push
mov
insl
jmp
mov
jg
cmp
stos
cmp
pop
cltd
mov
mov
inc
adc
fwait
xchg
and
mov
inc
pop
mov
test
dec
ret
or
xchg
jp
mov
aad
mov
scas
sub
pop
mov
ja
dec
dec
and
add
xchg
in
test
sub
add
or
mov
inc
imul
pop
sti
fmull
scas
xor
inc
subl
sub
es
pop
add
push
jne
cmc
xchg
in
hlt
out
or
push
push
sbb
adc
cs
dec
jl
pop
lea
cmp
fiaddl
fs
insb
outsl
dec
and
and
cmpl
or
fsub
orl
mov
cmp
loopne
and
and
dec
jno
or
stos
rorl
inc
shlb
scas
in
jns
lods
or
push
pop
adc
cmp
repz
dec
xor
sbbl
push
mov
xchg
xor
cmp
shll
movsb
jecxz
adc
cmp
and
inc
shl
arpl
mov
and
loopne
push
aas
and
lcall
es
nop
jle
test
arpl
mov
sbb
cmp
out
and
inc
es
pop
mov
test
insl
fistpl
pop
or
push
repnz
pop
push
push
jnp
ret
mov
fcompl
movsb
dec
enter
jns
shrl
pop
adc
aad
push
and
mov
mov
inc
mov
scas
out
ja
cli
imul
ret
inc
mov
ret
cmp
cmp
xchg
push
adc
addr16
sub
rcrb
dec
xchg
lahf
cld
cltd
pushf
movsl
push
test
in
mov
jo
jnp
xchg
inc
jp
pop
movsb
adc
xchg
lods
and
mov
and
adc
xchg
push
sbb
dec
bound
popa
sub
mov
test
aad
lds
aad
ret
mov
sahf
pop
les
and
push
es
inc
adc
mov
add
and
loopne
cmp
pop
insl
cltd
and
sub
and
lcall
mov
mov
jecxz
movsb
add
mov
addl
or
lret
xchg
ljmp
cmp
paddb
scas
xchg
insl
push
pop
and
push
cmp
and
shl
adc
jno
jge
fs
pop
add
xchg
and
mov
loop
and
cmpb
adc
cmpsb
pop
fisttpll
imul
or
mov
call
fisttps
in
sbb
lods
and
inc
rcrl
mov
out
inc
xchg
cmp
lea
movsb
ss
jbe
clc
loope
sti
shll
test
push
mov
movsb
idivl
push
in
insb
inc
mov
lar
push
lahf
xor
shlb
pop
mov
inc
pop
xchg
insl
mov
push
das
adcl
fadds
fwait
icebp
mov
sub
out
ret
dec
mov
and
pusha
add
loope
repnz
ffree
popa
inc
les
push
fidivrs
mov
pushl
push
icebp
andb
jge
and
push
pusha
inc
cli
mov
and
pop
cmp
popf
cmp
test
mov
and
out
mov
pop
xchg
and
pop
pusha
xor
inc
leave
shlb
inc
imul
loopne
xor
or
orl
or
pop
gs
and
test
imul
jecxz
cmp
shrl
pop
pushf
popf
pop
sbb
sbb
xor
dec
cmp
mov
clc
mov
pop
xor
gs
imul
mov
and
loopne
dec
jo
inc
and
and
aaa
pop
ja
mov
popf
mulb
xor
and
pop
sbb
out
lret
xor
out
xchg
popa
sub
rcll
lods
xchg
fwait
pop
out
ds
test
jl
and
and
outsl
dec
or
pop
enter
add
fisubl
orb
pop
mov
fldcw
outsl
add
mov
mov
mov
ret
mov
and
out
sti
jae
mov
dec
stc
in
lods
cwtl
insb
and
add
xchg
repz
add
jae
stos
xchg
push
aad
cli
shlb
cmp
dec
mov
sub
out
xchg
jge
sar
push
inc
add
or
popa
push
out
movsl
nop
and
mov
pop
aas
daa
test
push
xchg
inc
xor
nop
movsb
xchg
fwait
setge
push
xchg
addr16
and
orb
push
cmp
cmp
mov
lret
xchg
sbb
jge
outsl
call
movl
inc
imul
and
cmp
in
and
stos
imul
adc
sub
push
and
push
and
add
mov
pop
das
sbb
orl
mov
inc
ret
and
add
arpl
test
xchg
pusha
push
sbb
fisttpll
mov
mov
stc
sub
sub
and
xor
mov
xchg
popf
jno
and
movsb
pxor
xor
and
xchg
push
aad
mov
orb
dec
lcall
insl
pop
fwait
scas
pop
ljmp
jnp
fsts
imul
push
mov
mov
pop
and
pop
pusha
out
lahf
and
pop
test
in
or
sbb
popa
sti
gs
std
and
mov
das
dec
sbb
out
add
cld
and
mov
stos
and
lods
out
sub
daa
jb
or
add
inc
inc
mov
mov
ret
aaa
push
and
xor
adc
mov
mov
jno
cltd
add
lcall
inc
mov
pop
mov
test
inc
mov
js
fwait
mov
add
out
adc
and
jl
insb
mov
pop
push
cmp
mov
and
xchg
jnp
sub
addr16
and
dec
and
or
out
cmpsl
repz
pop
nop
and
cwtl
lods
clc
sbb
aad
jg
and
inc
and
mov
popa
mov
inc
mov
ljmp
mov
mov
pop
popa
xor
jnp
dec
mov
sub
movsl
push
pop
add
cli
dec
xorl
mov
jg
pop
mov
mov
mov
and
dec
adc
push
mov
popf
adc
mov
pop
fdivrp
and
adc
roll
imul
and
repz
jae
push
cmp
xor
inc
adc
aaa
lods
and
hlt
test
cmp
mov
push
pop
or
daa
xchg
dec
hlt
int
jecxz
loope
and
subl
imul
xchg
xchg
stos
adc
shll
xlat
jbe
dec
and
xor
mov
stos
rorb
push
mov
test
aad
xchg
sub
sbb
and
xor
inc
cmpsb
xchg
in
and
push
bnd
cmp
and
ficoml
jae
pop
mov
push
mov
lcall
push
jne
cltd
add
cmpsl
dec
loope
popf
mov
notb
lods
leave
push
and
mov
jno
ds
cmc
add
jne
stos
add
mov
inc
scas
ftst
pushf
sti
xchg
mov
add
dec
rcrb
push
test
jmp
mov
sub
loopne
and
faddp
rcr
popa
sbb
adc
xor
pushl
and
and
and
inc
sub
jne
mov
push
adc
or
incb
pusha
xchg
int
and
mov
xor
and
imull
sub
out
data16
ds
outsl
shl
add
popf
jg
movsl
and
mov
js
and
add
jmp
fdivrl
testb
mov
fildl
data16
in
xchg
aaa
dec
mov
pop
insb
mov
int3
fdivl
xchg
push
and
mov
and
popf
ja
sub
sub
call
pop
cs
ficomps
add
add
and
cmpl
cli
xor
repz
xchg
daa
mov
cltd
adc
mov
ds
xchg
popa
dec
mov
pop
fidivrs
and
inc
rcrl
leave
dec
pusha
pop
xor
jnp
jp
shll
lret
dec
lods
inc
xor
cmp
xlat
addl
and
js
mov
mov
push
dec
dec
cmpsl
ds
test
icebp
push
mov
xchg
mov
push
outsl
movsb
test
adc
loope
test
cmp
sbb
cmc
xor
pusha
jp
mov
xchg
push
les
movsl
movsl
jno
push
adc
pop
in
sub
int
xchg
cmp
mov
mov
adc
push
scas
jle
movsl
movsb
cld
mov
push
sbb
in
mov
movsb
mov
hlt
sub
ljmp
dec
sub
call
popa
ja
pavgw
jg
jle
adc
daa
dec
push
pop
push
outsl
das
push
sbb
push
cmp
lcall
addr16
clc
and
cmp
mov
push
xor
flds
adc
lret
stos
mov
jle
outsl
dec
sub
cwtl
pop
movsb
repnz
xchg
pslld
out
loope
push
sahf
loope
mov
fsubs
int3
in
scas
aaa
outsl
in
mov
cmp
push
cmpsl
cmpsb
push
cmp
pop
inc
sahf
aam
add
out
pop
test
xchg
ret
loop
mov
dec
lahf
ficoms
int
and
stos
pop
jecxz
ret
rolb
popa
jnp
mov
and
insb
adc
xor
or
mov
jno
cltd
in
movsl
push
lret
test
pop
lea
jmp
movsb
cld
dec
add
jns
incb
gs
inc
lds
mov
mov
and
lahf
xor
movsl
in
mov
fistps
and
iret
inc
xor
in
dec
inc
popa
fdiv
pushf
std
in
imul
inc
out
stc
cltd
mov
jecxz
jno
xor
fcompl
addr16
mov
stos
hlt
xchg
push
loop
in
fsubs
sahf
sub
enter
jle
mov
lret
popa
pop
clc
movhps
pop
push
movsb
loop
sbb
scas
shlb
mov
cmp
mov
sbb
imul
incl
and
adc
mov
jne
add
sub
test
int
lahf
push
test
addb
inc
andl
push
or
mov
mov
sbb
lds
jg
loopne
arpl
loope
gs
sub
loopne
out
lock
ja
icebp
jbe
pop
movsb
pop
sub
adc
and
fstl
loop
mov
movsb
dec
mov
notl
mov
call
mov
add
xor
xchg
and
sbb
lock
jns
jne
stc
scas
dec
daa
inc
popa
jp
push
das
ds
mov
in
test
and
pxor
and
and
pop
cltd
sbb
out
jmp
pop
jbe,pn
ret
pop
jg
aad
xor
scas
sub
stos
mov
movsl
or
mov
inc
mov
pusha
jo
xchg
pop
pop
stos
mov
cmp
pop
xchg
jecxz
sbbb
cmpl
movsl
xchg
sbb
pop
add
and
and
xor
inc
mov
and
rclb
xor
push
cmp
push
icebp
lods
inc
xorb
dec
and
jecxz
pushf
mov
popf
loop
jns
inc
mov
stos
and
dec
pop
xchg
out
mov
or
inc
scas
add
movsl
insb
sub
push
fs
and
xor
popa
inc
daa
adcb
fidivrs
dec
mov
mov
push
jae
lods
popa
adc
pop
jmp
cli
rorl
xchg
icebp
stc
cmp
and
ficompl
sbb
push
pop
popf
nop
and
fmuls
xchg
xchg
push
add
sub
pop
cmpsl
cmp
sbb
and
and
call
sub
xor
push
outsb
and
add
in
and
dec
mov
out
cmc
aam
xor
dec
cmp
and
enter
xchg
scas
xchg
and
add
jmp
sbb
adc
push
cs
jo
push
movsl
jg
sbb
movsb
lcall
ret
push
and
sbb
in
ss
push
scas
sbb
adc
mov
push
and
faddl
std
inc
js
in
imul
jne
stos
xchg
dec
ds
daa
data16
xor
and
mov
pop
out
inc
pop
fstp
lcall
hlt
pop
sbb
and
fiaddl
aad
and
add
sbb
addl
mov
movhps
add
push
xor
and
and
or
andb
daa
fnsave
adc
rcll
das
test
xlat
and
insl
mov
fimuls
jmp
mov
add
lods
movsb
iret
lock
arpl
add
aam
test
imul
jns
xchg
mov
sub
inc
fisubs
jno
sub
clc
adc
test
outsl
or
fwait
int
inc
fdiv
out
rcll
pop
xor
push
or
add
inc
inc
ret
push
lahf
fsubs
daa
xchg
xchg
fbld
and
dec
cmp
inc
add
fsubrs
pop
xor
test
and
test
xchg
scas
cld
aaa
inc
popa
xor
movsb
push
dec
mov
outsb
jno
out
jg
fldl
cmp
and
and
mov
xchg
mov
pop
push
fldenv
lret
loop
call
mov
jo
mov
adc
stc
movsl
ds
xchg
xor
in
pop
add
in
sub
dec
dec
daa
test
mov
scas
in
and
add
add
cmpsb
adc
mov
outsl
or
mov
xchg
mov
loope
stos
shlb
ss
push
imul
push
push
lret
pop
adc
push
dec
stos
pushf
hlt
stos
mov
ficomps
arpl
and
xor
adc
addr16
and
sub
icebp
xchg
adc
iret
shl
jbe
fisttpl
ret
xchg
shlb
nop
mov
js
jecxz
mov
lret
cmpsl
lds
pop
lods
or
test
mov
xlat
jno
add
mov
mov
sbb
mov
sub
rolb
mov
cwtl
jmp
dec
nop
pop
inc
ss
jl
inc
test
int
outsl
ret
jno
xor
je
pop
add
nop
and
popf
into
or
iret
test
and
jmp
jp
mov
xchg
and
sbb
sbb
mov
leave
mov
and
mov
add
call
mov
int3
add
pop
mov
and
ret
jo
jae
xchg
or
jmp
stos
xor
sub
dec
pop
cld
insl
fldenv
ljmp
lcall
cld
and
std
pop
and
adc
stos
inc
xor
das
sub
loop
pop
cmp
xchg
lea
mov
dec
push
push
fstpt
in
jns
int
insb
iret
adcb
test
js
sub
and
pushf
and
or
jo
js
mov
inc
pop
out
push
or
or
dec
jp
add
xor
ljmp
pusha
stc
adc
mov
loope
dec
lcall
int
push
fildl
cmp
pushl
aas
pushf
sub
add
and
and
adc
push
sub
cli
cs
pop
inc
push
xchg
dec
and
sbb
fisubrl
popa
push
jge
cli
and
jecxz
pop
lahf
pop
int
mov
xor
enter
in
stos
cmp
imul
icebp
es
sub
and
std
inc
fnsave
and
inc
vhaddps
loope
and
cmpsl
outsb
lods
pop
sbb
pop
inc
in
popa
push
pop
and
push
in
aad
add
mulb
dec
stos
call
and
pop
add
adc
sbb
imul
adc
push
xchg
xchg
push
fisttpll
movsb
and
fisttpl
divps
mov
in
and
cmpsl
cmpb
into
mov
sub
ss
or
adc
out
adc
mov
pop
or
lods
addr16
push
mov
aaa
gs
fsubl
push
xchg
mov
sbb
mov
fs
push
xor
jg
stos
fistps
outsb
mov
and
je
and
adcl
mov
test
cmp
mov
xchg
sub
cmp
mov
mov
in
add
dec
fsubrp
movsb
push
testl
shll
and
mov
and
or
sahf
inc
lahf
mov
xor
and
adc
push
mov
popa
das
jg
cltd
and
stos
mov
fdivl
lahf
xchg
inc
inc
ret
test
fstpl
pop
dec
jnp
add
and
mov
movsl
and
sbb
xchg
cmp
loopne
sub
lea
movsb
pop
jb
mov
cwtl
movsl
pushf
int3
in
pop
arpl
xchg
jl
hlt
stos
cs
or
mov
and
mov
repz
cmpsb
or
and
fs
push
or
cli
and
jnp
stc
xchg
sub
xchg
xchg
dec
and
repnz
lods
rolb
push
xchg
lods
and
bound
jnp
popf
mov
lcall
inc
andb
clc
sub
in
and
cltd
cmpsb
cvtps2pi
call
jne
mov
pop
sub
mov
rol
dec
popa
push
xlat
jb
neg
and
popa
rcrl
and
int3
or
ret
jns
jl
mov
sbb
fcomp
addl
push
sub
and
jno
push
and
insl
jl
divb
insb
mov
mov
sbb
xor
scas
inc
sub
inc
in
sub
fimull
sub
aam
dec
mov
xor
sub
leave
out
shrb
and
loop
outsb
xchg
mov
mov
mov
out
mov
leave
cmp
and
mov
js
out
test
jg
xor
mov
leave
imul
lcall
and
ja
cmp
mov
shll
pop
into
inc
addr16
movsb
mov
fadds
jbe
push
shrl
insl
loope
and
mov
or
add
inc
push
add
arpl
xor
and
mov
jmp
xchg
fsubrl
and
pop
cld
pop
mov
aaa
sub
repnz
call
das
shl
xor
or
sbb
dec
add
in
fsubl
dec
mov
or
and
arpl
leave
sahf
mov
and
xchg
and
sbb
sub
aas
sahf
mov
dec
fisttpll
dec
int3
jne
cmp
pushf
shlb
lods
ja
scas
pop
push
inc
adc
mov
ficomps
mov
mov
sbb
es
dec
and
jne
xor
inc
xor
inc
and
push
scas
dec
sub
lcall
repz
sub
lock
cli
pop
aam
daa
mov
pushl
dec
clc
mov
xlat
mov
xchg
inc
mov
fdivrl
cmp
and
add
imul
jbe
and
xchg
iret
popa
mov
cmovns
or
xchg
mov
and
aas
and
insl
inc
ss
in
mov
push
cwtl
es
mov
adc
or
cmpsb
push
cmp
add
xchg
out
sbb
std
outsl
ret
adc
scas
and
movsb
lock
out
outsb
stos
and
imul
rorb
adc
cmp
and
and
out
adc
sub
pop
std
and
rcrl
pop
jne
daa
dec
pop
test
and
push
add
mov
inc
pop
out
jl
or
cmp
adc
ds
dec
sti
subb
insl
fsubrl
cmc
and
cmp
stos
jle
cltd
rcll
cld
lds
cmp
mov
mov
sahf
and
int3
in
bound
test
into
adc
adc
scas
clc
and
and
mov
jle
lock
dec
les
mov
xor
cmp
out
cmpsl
addl
jne
popa
fwait
xor
or
push
sbb
fadds
and
push
mov
and
cmp
mov
sub
sub
shrl
xor
jae
and
cmpsb
push
sbb
pop
and
dec
and
mov
iret
sub
push
fisttps
loope
push
hlt
movsb
cmpsb
push
decb
divb
in
and
or
and
and
mov
out
stos
jmp
sub
inc
xchg
lret
inc
jg
and
sbb
mov
add
pusha
sbb
js
sub
insb
jns
mov
mov
and
cmp
fistps
sahf
xchg
es
xchg
dec
mull
push
inc
jno
xor
mov
rolb
popa
cmp
sbb
out
cmpl
fiaddl
les
adc
mov
cmp
sbb
jbe
testb
mov
push
and
and
notl
adc
push
insl
sub
add
test
sub
popa
adcl
inc
pop
mov
jge
iret
xor
inc
push
add
cmp
and
adc
les
movsb
adc
mov
fsubl
loope
fwait
pop
outsl
push
inc
subl
xchg
jle
int3
ja
mov
or
and
and
into
and
and
mov
sub
lret
add
mov
insb
movsb
lret
ja
popa
jbe
jge
and
add
call
push
dec
in
andb
mov
sbb
cmp
loopne
lret
and
mov
jns
push
in
ret
stos
test
xor
stc
test
cld
push
inc
lcall
xchg
fstl
les
lock
test
mov
repnz
int3
sub
or
and
mov
and
in
mov
mov
push
leave
popf
xchg
add
sub
cmc
sbb
gs
push
pop
xor
ss
xlat
cmpsl
fsubrs
push
into
jns
xchg
adc
and
mov
push
and
or
fistl
push
cmp
nop
imul
call
int
and
daa
je
cmp
xchg
pop
xchg
sbb
adc
jne
mov
xchg
mov
ss
orl
sbb
xchg
sub
cld
fs
arpl
inc
sbbl
dec
push
or
xlat
outsb
dec
test
gs
lret
dec
add
jno
push
inc
jmp
stc
pushf
xchg
in
sub
dec
adc
jno
fistpl
inc
inc
loope,pn
xor
and
cmpsl
mov
dec
or
arpl
cmp
pop
movsb
sarl
mov
push
add
cmc
or
clc
adc
lahf
and
add
jle
xlat
mov
mov
inc
sub
and
push
mov
xor
shrl
mov
clc
dec
and
lahf
je
int
push
popf
and
mov
push
cmpsl
lea
inc
sbb
ds
jb
sub
mov
jmp
movsb
mov
test
out
push
shrb
adc
push
stos
push
loop
and
sub
xchg
cli
sub
shrb
fldenv
enter
sahf
loopne
fcomp
mov
push
fs
mov
rclb
or
mov
icebp
decb
mov
sbb
das
aaa
mov
and
mov
fs
xor
popa
and
push
pop
lods
pop
and
loop
aam
fwait
mov
std
mov
jo
or
cwtl
add
mov
fistpll
loop
cmp
cwtl
mov
movsl
stos
push
pop
mov
aam
pushf
fwait
aaa
mov
sahf
lea
bnd
enter
roll
push
insb
and
lds
sub
pop
sub
lcallw
sahf
mov
dec
test
aaa
mov
nop
mov
insl
push
xchg
into
test
and
dec
push
mov
and
jmp
sub
or
inc
test
xor
push
iret
in
loope
add
xor
das
inc
mov
rcll
and
adc
and
lahf
xchg
std
insl
fs
int
and
into
fiadds
sbb
adc
gs
enter
add
mov
fcmove
or
xchg
pop
inc
inc
mov
mov
aas
jp
jle
and
out
cs
xor
pop
orb
push
mov
and
test
mov
inc
mov
or
inc
in
stc
sub
test
and
outsb
fists
lock
and
mov
int3
inc
mov
adc
push
popf
jecxz
and
out
push
add
dec
cmp
movsb
mov
pop
popa
jp
fimull
and
inc
xchg
mov
lret
dec
xor
cld
cmpsl
movsl
push
mov
mov
test
frstor
mov
sub
inc
jne
and
divl
popf
test
push
push
dec
push
and
xor
dec
test
xchg
mov
pop
jg
leave
popf
cmpsb
pop
xor
mov
rolb
mov
out
xchg
es
dec
and
mov
shlb
jne
jne
mov
imul
mov
movsb
adc
mov
shlb
and
jo
stos
xor
mov
std
loop
pop
add
pop
outsl
aaa
gs
mov
jnp
cmp
ss
sbb
sub
stos
insb
xor
stc
inc
and
xchg
cmp
inc
push
out
and
and
mov
add
mov
or
xor
cmpsb
test
ficoms
or
fidivs
and
lret
ja
popf
xor
testb
mov
fcompl
repnz
call
jnp
rol
shrl
sub
rclb
mov
and
dec
repz
out
leave
and
sub
and
pop
mov
mov
adc
and
push
mov
fisttps
inc
lcall
stos
xchg
inc
jnp
mov
jl
inc
cld
scas
outsl
mov
stos
ds
movsb
xor
and
mov
dec
push
mov
and
sbb
push
repz
inc
dec
fbld
fstl
fsubrl
cli
loope
inc
shlb
pop
scas
and
int3
sti
inc
push
lcall
std
mov
mov
out
fs
and
sub
lods
push
mov
lret
mov
imul
lcall
sbbb
adc
cli
mov
fnstcw
fisttps
pop
nop
out
xchg
dec
hlt
cmpsl
inc
ficomps
sub
das
popf
sbb
sub
ret
mov
or
pop
add
cmp
movsb
jnp
dec
jg
imul
push
sub
aam
and
in
mov
fwait
mov
xchg
in
test
popa
cltd
mov
mov
and
adc
jae
inc
mov
xor
popa
lret
mov
and
ljmp
and
and
je
and
call
pop
and
dec
clc
ret
mov
sub
cltd
ja
mov
popf
dec
inc
xchg
sbb
and
mov
iret
jo
pushf
lcall
pop
mov
mov
test
cwtl
aas
mov
iret
das
and
lods
and
outsb
movsb
gs
mov
xchg
inc
and
inc
into
mov
in
push
mov
and
in
pusha
aas
xchg
popa
idivb
andl
mov
imul
and
out
pop
movsl
adc
lret
andl
pop
mov
lahf
and
push
adc
xchg
scas
or
subl
aaa
mov
mov
addl
xchg
xchg
xor
loopne
fcmovne
fs
popf
jle
cwtl
add
dec
mulb
mov
push
mov
or
ficompl
or
fidivrs
aam
inc
cmp
mov
adc
sbb
scas
shll
pusha
lret
adc
xchg
mov
test
dec
and
pop
stos
aam
in
sbb
pop
mov
jnp
mov
mov
arpl
mov
push
imul
adc
mov
dec
mov
push
popf
inc
and
mov
cmpsl
mov
cmp
in
pop
jno
mov
push
mov
fs
daa
jno
mov
mov
pop
enter
lret
fwait
sub
push
and
mov
out
lcall
and
loop
and
sarb
mov
lods
shlb
pmaxsw
pop
movb
outsl
pop
fnstenv
inc
dec
ds
sub
stos
daa
in
pusha
sub
or
jns
shrb
xchg
add
push
in
cmp
pop
mov
sbb
test
sub
repz
mov
fwait
popf
jne
dec
cltd
fldcw
aaa
mov
aad
dec
mov
fmul
cmpsb
repz
movsb
aaa
and
push
fstp
mov
xchg
in
sar
cmp
sub
fldt
repz
push
mov
xor
and
push
xor
adc
jle
nop
clc
push
sub
daa
out
out
shrb
jno
xor
jo
add
mov
cltd
push
sub
addl
mov
jne
mov
popf
test
lahf
scas
xor
rcrb
jb
mulb
dec
leave
push
xchg
push
outsb
ljmp
and
pop
dec
in
adc
je
iret
cmp
cltd
out
inc
pusha
insb
and
mov
jle
push
inc
lods
stc
cmp
jmp
lock
ja
cmp
decb
stos
and
iret
cmp
and
ja
xor
bound
inc
shll
and
aam
and
jl
pop
fidivrl
leave
mov
lock
dec
mov
mov
jg
lret
push
call
mov
push
or
push
lock
shr
cmpsl
xor
sub
mov
sbb
mulb
insl
or
call
sti
and
je
cli
sub
xchg
sbb
cmp
movsb
mov
inc
mov
inc
sub
add
cmp
pusha
frstor
fnstenv
push
mov
dec
lahf
and
imul
jle
in
inc
jge
adc
roll
bound
cmp
and
xchg
cmpsl
xchg
cmc
pushf
xor
lods
mov
ret
sub
sub
cltd
aaa
mov
and
xor
cmpsb
out
sub
and
pextrw
and
dec
into
or
inc
xor
push
push
minpd
mov
and
fsubl
je
jp
movsl
or
lods
sub
pop
pop
inc
pop
jno
push
pop
bnd
push
mov
mov
push
and
or
dec
add
cmpsl
xor
loopne
mov
mov
push
mov
in
and
adcl
pop
notb
cs
in
js
or
push
andl
cmc
cmpsb
or
cltd
dec
and
enter
orb
out
inc
xchg
mov
lcall
lds
push
cmpsb
adc
and
arpl
mov
jmp
xchg
cmpsb
jp
in
mov
jbe
shl
cltd
or
dec
fwait
sub
push
outsl
mov
hlt
sbb
in
mov
test
add
stos
jmp
dec
int3
mov
pop
ljmp
dec
inc
fadds
fbld
mov
sbb
sbb
outsl
add
push
cmpl
andb
jg
sub
pop
lcall
xchg
ja
mov
adc
loope
push
fsubs
je
mov
imul
popa
lods
mov
inc
ficoml
out
insl
or
push
test
mov
pop
movsl
mov
dec
add
xchg
pop
addl
pop
dec
sub
and
inc
pusha
mov
stos
fwait
cmp
aad
jo
dec
out
lock
lods
push
cmp
xor
mov
and
into
add
pushf
sub
adcb
jae
push
cld
in
inc
cmp
or
sub
push
repnz
cmpsl
xchg
fstl
push
pop
int3
cltd
rcrl
loope
daa
push
lods
sub
popf
add
cmp
inc
push
in
int3
dec
scas
cmpsb
and
mov
adc
mov
lods
jnp
jp
test
push
ja
mov
in
adc
jb
daa
mov
pop
dec
xchg
lahf
cmp
and
ja
cmp
ss
movsb
mov
push
push
xor
adc
addr16
and
adc
dec
jmp
pop
fisubl
aas
mov
sbb
test
inc
inc
lock
jne
dec
test
and
xchg
xchg
and
mov
pop
cwtl
adc
dec
mov
xchg
add
je
sub
cmp
push
out
cmp
xor
pushf
pop
movsb
cmp
aas
ret
mov
out
dec
mov
fisubrl
mov
js
pop
enter
and
test
and
push
or
jmp
push
add
xchg
test
xchg
out
mov
mov
pop
and
add
jl
pop
mov
test
cmp
xchg
cmp
push
shll
jns
pop
jecxz
sbb
aam
and
and
ret
lret
pushf
and
popa
lds
es
inc
jb
pushf
cmp
sbb
adc
xchg
mov
mov
dec
rclb
xor
rolb
inc
sbb
mov
aas
rorl
aaa
jg
and
fcmovne
pop
shll
mov
xchg
sbb
rclb
movsl
leave
xchg
and
pusha
enter
inc
xor
test
lcall
xchg
mov
push
cmp
or
xlat
xchg
fmuls
movb
mov
imul
mov
xor
sbb
pop
pusha
sub
outsl
repnz
popa
mov
jle
call
dec
and
loop
push
cmpl
fldenv
mov
and
jle
mov
mov
push
mov
mov
and
inc
mov
xchg
lahf
mov
das
cmp
add
adc
jbe
idivl
pushf
popa
mov
inc
mov
sub
jge
aaa
dec
hlt
add
clc
inc
xor
aas
mov
iret
leave
filds
ret
or
and
into
mov
rorl
sub
sub
arpl
and
daa
mulb
std
test
mov
push
or
bnd
pop
pusha
jne
fwait
enter
in
xchg
in
and
adc
rorb
dec
xorb
adc
mov
mov
xchg
add
inc
dec
imul
fmulp
out
add
int3
call
popa
mov
and
or
mov
test
mov
sbb
push
sbb
cmc
jp
push
andb
lcall
dec
and
stos
mov
and
fwait
sbb
outsl
add
sbb
add
xor
and
andl
inc
cmpsb
mov
jmp
mov
pop
cmpsb
mov
sbb
or
add
test
call
jg
shlb
xchg
lahf
and
mov
xor
cltd
sbb
sub
and
fldl
push
or
test
out
inc
jno
and
js
and
or
mov
sub
int3
in
loop
iret
xchg
dec
sahf
inc
sti
mov
test
pop
test
int
sahf
inc
mov
je
dec
mov
cmp
test
mov
inc
xor
sbb
int3
ds
xchg
push
popf
inc
adc
sbb
mov
sub
test
test
enter
movsl
pop
push
movsb
outsb
out
jb
and
icebp
push
out
iret
push
and
call
pop
je
xchg
and
in
arpl
ja
stos
aas
jecxz
and
aaa
add
fldl
and
subb
and
lcall
and
leave
mov
and
add
cmp
cmpsb
push
cmp
loope
mov
xchg
test
divl
movsb
lcall
add
faddp
adc
fmull
xchg
push
mov
sub
outsl
jmp
loope
push
xchg
ljmp
xchg
ljmp
test
and
jns
push
fsubr
and
or
mov
sbb
inc
stos
inc
pusha
mov
jg
js
and
jnp
mov
and
mov
mov
scas
std
dec
xchg
jne
and
jg
jp
outsb
and
inc
mov
loopne
cmp
mov
inc
repz
push
jmp
popf
mov
fnsave
mov
popa
lods
pop
dec
fdivl
and
sub
adc
arpl
xchg
cmp
push
je
pop
lea
adc
xchg
orl
out
aas
dec
ja
inc
sbb
pop
lea
mov
or
loop
sarb
cmp
adc
test
mov
mov
add
mov
aas
dec
roll
popa
ret
mov
sbb
outsb
int
xchg
call
sbb
mov
and
mov
int3
dec
xchg
stos
and
mov
divb
imul
sbb
and
popf
add
sub
cmp
stc
out
movsb
sbb
jb
or
hlt
mov
cld
popf
loopne
mov
pop
sbb
popf
pop
dec
fsubs
lea
xor
fnstenv
loopne
loop
aas
out
hlt
aaa
bound
push
pop
xchg
jecxz
dec
popa
inc
mov
iret
and
add
fimull
jne
push
test
aas
and
add
dec
je
mov
movzwl
in
mulb
sub
popa
push
leave
aaa
pop
xor
je
push
adc
insl
fucomip
shll
rclb
lds
push
cmp
cmp
push
popa
fimull
sub
clc
nop
movsb
ljmp
pop
ffreep
xchg
mov
das
xchg
mov
fwait
mov
sbb
cltd
ret
mov
jae
xor
add
jns
mov
movsb
mov
subb
inc
adc
adc
pushf
jle
dec
arpl
rorl
push
mov
xor
lahf
adc
mov
add
or
fcmovu
fsub
lea
jbe
pop
mov
xor
jge
popa
sbb
lods
mov
nop
adc
jne
and
cs
inc
loop
and
pushf
mov
xchg
scas
aas
mov
aam
jb
and
sub
mov
dec
and
add
gs
in
pushl
and
and
sub
inc
dec
arpl
push
and
jbe
inc
ret
mov
or
and
jne
mov
and
xlat
lock
or
repnz
add
pop
in
cmp
and
ljmp
and
sbb
xchg
call
test
inc
mov
loopne
shl
scas
push
syscall
mov
imul
shll
rcrl
stos
rol
pop
gs
inc
and
mov
xchg
dec
and
fisttpll
pop
or
inc
sti
mov
and
lahf
inc
int
stos
scas
sbb
push
addr16
int3
mull
add
cwtl
jg
insb
lock
xchg
mov
pop
dec
xor
fnsetpm(287
imulb
and
fcoms
cmp
cwtl
mov
adcl
filds
dec
and
fidivrl
call
int
add
popf
into
hlt
mov
jge
popf
mov
dec
cmp
sarb
or
aas
test
out
xchg
inc
mov
inc
mov
xor
aaa
xchg
and
push
mov
or
aad
cmp
mov
cmp
add
xor
stos
imul
jno
cltd
cmp
lods
scas
jns
pop
jb
sbb
xor
mov
mov
imul
add
xorl
xchg
dec
and
mov
cmp
xor
inc
ds
mov
frstor
call
popf
movsb
xorb
add
xor
imul
sbb
movsb
shll
movsl
dec
dec
xchg
jne
cmpsb
adc
inc
dec
sbb
mov
xchg
xchg
and
sub
dec
lods
add
pushf
or
and
pusha
fdiv
and
bound
aam
movsb
xor
mov
js
subl
in
adc
push
lds
mov
xchg
pop
jo
and
mov
es
mov
mov
jnp
or
clc
loopne
mov
dec
jbe
scas
push
and
mov
and
jl
xchg
inc
test
popf
call
jo
xor
ds
push
jge
push
lahf
jno
xchg
jle
and
je
sar
scas
and
ret
push
sub
push
inc
sbb
and
ret
shrb
push
sbb
sub
mov
movsl
mov
inc
jns
mov
mov
ret
loope
dec
or
lcall
shll
sub
out
push
mov
and
mov
jnp
cs
sub
jbe
scas
inc
sub
cwtl
xor
test
xchg
dec
xchg
cmp
push
es
insl
sbb
daa
mov
test
xchg
push
mov
cmp
jb
jp
ljmp
inc
cmp
addr16
filds
xor
loop
cld
sar
and
dec
rorb
mov
jg
popf
jne
outsl
inc
fwait
jae
out
inc
cmp
imul
push
test
adc
xchg
and
and
pop
inc
xchg
pop
cmpsl
or
add
movsb
cld
sbb
ret
rep
aad
dec
inc
pusha
loope
mov
pop
sbb
xchg
mov
mov
popa
pop
xchg
das
adc
imul
xchg
xchg
inc
pop
shrb
and
int
movsl
loopne
popa
stc
and
fstps
loop
and
mov
inc
aaa
jno
in
add
popf
cmpsl
adc
pop
add
mov
mov
jb
sbb
push
cs
popa
sub
mov
iret
xchg
mov
jne
jl
pop
je
int3
adc
lods
sub
jle
xlat
lahf
or
inc
movsb
in
subb
xchg
mov
je
loopne
out
inc
push
push
or
and
notl
stos
loop
mov
xchg
movsb
sahf
jbe
mov
inc
ja
mov
ds
mov
outsl
popa
jns
popf
jbe
js
adc
outsb
mov
pop
fcomip
lret
and
jno
push
cmp
sub
sub
or
sub
inc
shlb
pushf
insb
aad
insl
sbb
add
mov
jg
dec
and
inc
sbbl
js
xchg
cmp
inc
pusha
jmp
repnz
xchg
and
cmp
xor
stc
dec
enter
imul
test
add
mov
adc
mov
push
mov
pop
pop
add
mov
pop
insl
mov
cld
adc
mov
and
push
loop
mov
push
dec
push
xchg
test
or
and
add
and
mov
and
andb
and
mov
fdivrl
mov
add
mov
loopne
aas
add
dec
adc
xor
ror
mov
out
push
int
cwtl
mov
jge
test
stos
jl
sub
shrb
mov
lret
fstp
and
cmp
and
add
shrl
sbb
push
inc
in
lahf
lret
xlat
inc
mov
out
mov
popa
sbb
stos
push
dec
or
int3
pop
fnstenv
and
or
shr
lods
and
roll
push
mov
mov
add
cmp
xchg
test
jmp
and
push
lcall
and
jp
and
repnz
add
movsb
dec
inc
lahf
lret
imul
bound
ljmp
inc
cli
xlat
mov
cmp
mov
mov
push
stos
std
sub
mov
xchg
subl
push
and
ja
out
jge
and
mov
mov
les
fxch
sahf
icebp
xchg
adc
mov
ja
roll
pop
and
and
int
xor
cmp
cld
fidivrl
ljmp
stos
cmc
push
gs
mov
sbb
lods
dec
cmp
aas
neg
imul
pop
jnp
push
sub
imul
and
adc
js
popa
bswap
mov
daa
jg
and
push
loope
nop
inc
andb
lock
lds
sub
inc
pop
push
inc
test
loop
and
pop
jecxz
jns
lea
cmp
icebp
cmp
jle
lahf
shl
fcmovbe
mulb
dec
imul
aad
pusha
cmp
cmc
xchg
and
add
shll
pop
mov
lea
loop
xlat
xchg
inc
xor
pop
std
in
jae
add
mov
loop
shll
jmp
xor
out
repnz
into
xor
fwait
and
mov
sub
pop
pop
or
cmpl
inc
inc
push
outsb
movsl
sahf
enter
jg
cmp
and
outsl
dec
pop
push
jae
inc
stos
imul
hlt
pop
mov
jecxz
popa
movsl
xchg
sub
addr16
test
pop
in
in
and
inc
shlb
cmpsb
addr16
and
and
sti
sub
das
test
ja
cwtl
pop
sub
and
icebp
inc
xchg
stos
cmp
loope
pop
xchg
subl
push
fisttps
and
icebp
fdivl
adc
jg
js
aam
sub
cmp
fldln2
lahf
cmpsl
subl
xchg
lahf
js
mov
sbb
lock
fwait
js
popa
xchg
mov
push
js
inc
jge
and
mov
and
cmp
loop
test
and
xchg
cwtl
jne
mov
push
fs
leave
inc
add
mov
and
push
jp
scas
jb
pop
popa
ja
js
mov
mov
adc
test
test
and
icebp
mov
adc
shll
xchg
mov
xor
popf
inc
cld
xchg
pop
xor
lods
pop
ja
pop
dec
imul
scas
sbb
jne
xchg
int
and
lahf
cmp
cwtl
and
xchg
xchg
and
shlb
in
inc
mov
and
push
mov
inc
inc
rolb
adc
stos
fisubl
shll
inc
scas
and
mov
push
or
test
into
test
and
sub
sub
lea
and
jmp
movsb
mov
stos
fistpll
aas
pop
stc
or
les
or
movsb
imul
cmp
xor
in
popa
sub
and
pop
movsl
insb
jle
mov
fiaddl
push
add
mov
imul
fwait
icebp
fwait
and
insl
flds
ss
xor
pop
cmp
test
push
push
imul
and
jne
adc
sbb
and
shlb
addl
mov
sbb
lds
inc
cli
out
mov
xchg
fstp
xor
xor
adc
popa
fsubs
add
mov
and
push
rcrl
mov
xchg
dec
ljmp
ds
and
outsl
out
xchg
dec
mov
lret
inc
int3
movsb
ljmp
incl
sub
jge
add
out
mov
sbb
dec
call
out
xchg
cmp
pop
sub
dec
push
out
test
fimull
push
lea
push
leave
or
loope
inc
adc
dec
test
subl
inc
mov
popf
popf
lret
and
pop
mov
push
lahf
in
sbb
std
dec
loop
adc
in
jno
fwait
movsl
and
pop
sub
fs
fisubrs
movsl
inc
inc
fbstp
push
in
pop
aas
stos
es
and
je
lret
mull
mov
push
cmp
imul
daa
xchg
adc
push
mov
inc
imul
sbb
adc
mov
je
mov
popa
mov
ljmp
pop
and
repnz
movsl
adc
addr16
fbld
sub
xor
mov
pop
push
and
lock
mov
sbb
in
fstpt
inc
das
xchg
leave
aam
pop
xor
lret
in
jne
aad
pop
add
data16
mov
filds
imul
test
jg
pop
sbb
jmp
movsb
push
cld
mov
int3
clc
rcl
xchg
ret
xchg
lock
jl
pop
in
jae
adc
sub
popl
lock
dec
adc
cwtl
je
outsl
cltd
cmpsb
inc
and
sbb
cld
mov
cmp
mov
and
cmc
inc
xchg
mov
mov
inc
cmp
pop
or
ret
jo
cmp
ror
pop
sbbl
ret
xchg
dec
cmp
in
sub
pusha
arpl
push
nop
pop
xchg
iret
push
push
addr16
es
jmp
sti
jno
fcmovnb
add
push
and
pop
cmp
and
mov
ja
and
xchg
mov
and
dec
mov
xchg
lret
jo
and
jmp
outsb
repnz
cli
pop
mov
mov
fwait
not
fmull
lcall
pop
cmp
xorl
jo
pop
cmc
scas
mov
movsb
lea
shll
push
popa
ss
aaa
fcompl
lock
and
pop
sahf
pop
add
js
ds
xor
je
mov
xor
mov
nop
sbb
test
sub
aas
xor
add
xor
pop
mov
add
std
aad
mov
and
fldl
push
cmp
call
popa
popf
pop
out
scas
jmp
js
push
mov
and
jnp
loopne
icebp
fbld
xchg
lret
int
imul
fsubl
pop
cmpsb
adcl
jmp
je
aas
scas
push
xlat
dec
or
and
lods
mov
fiadds
rorb
fcomip
cmp
add
int
std
sti
sbb
mov
das
mov
aas
and
xchg
jmp
fsubl
iret
test
sahf
xor
es
sub
xchg
lock
inc
or
popf
test
add
inc
cltd
dec
adc
and
pop
ret
lret
sub
mov
lea
add
data16
filds
add
outsl
cmp
mov
dec
dec
jae
and
push
mov
test
xor
jle
movsb
jbe
das
xor
push
sub
sub
and
rol
test
daa
mov
pop
pusha
and
sbb
and
sarb
cmp
gs
shrb
aam
lcall
ret
or
frstor
aas
push
in
lods
mov
push
cmpsb
dec
test
add
fdivs
ror
orl
xlat
roll
test
dec
and
cmp
dec
fwait
cld
pop
inc
jo
and
pop
daa
movsb
movsl
sarl
mov
das
fsubrs
and
jo
push
cwtl
loope
xlat
in
push
inc
popa
cmp
pop
pop
xchg
cmp
shll
mov
pop
loop
sbb
jmp
and
mov
cwtl
pusha
mov
pop
push
inc
fwait
xchg
ficomps
sub
mov
pop
out
and
mov
xor
push
and
mov
xchg
xchg
into
pop
and
jecxz
and
nop
enter
cmpl
mov
xchg
cmpsb
movsb
sbb
test
mov
add
push
or
test
pop
lods
insl
out
sub
scas
fwait
in
fcmovbe
aas
mov
movsb
in
cmp
nop
dec
cli
popa
mov
fstps
and
test
inc
cmpsb
loope
mov
lret
and
jnp
popa
pop
xor
movsl
xchg
xor
movsb
mov
pop
imul
adcl
ficoml
cmpl
pushf
xor
and
fsts
clc
leave
adc
into
add
lods
xor
mov
lret
leave
jmp
and
or
int
lea
outsb
pop
pop
sti
in
xchg
dec
clc
loopne
dec
push
inc
dec
repnz
mov
inc
sar
jg
push
sahf
mov
ror
cmp
xchg
and
cmp
xor
movsl
mov
test
mov
mov
jb
jne
testb
popf
xorb
jbe
sub
cmp
and
and
shrl
pusha
or
sbb
xchg
mov
and
test
mov
add
rorb
mov
andl
out
dec
mov
and
cmpsl
imul
mov
lcall
adc
inc
mov
daa
pop
popf
push
jecxz
cmpsb
sbb
rolb
sbb
loop
adc
loopne
lea
push
or
mov
aaa
sbb
add
mov
add
scas
push
test
imul
adc
in
or
adc
sbbb
pushf
out
repnz
rcrb
and
aad
jl
popf
out
cmp
sbb
sbb
mov
loope
adcb
xor
or
das
xor
in
aas
sbb
in
xchg
inc
neg
cwtl
mov
jae
movsb
xor
mov
inc
mov
in
sbb
push
repz
loope
add
push
movsb
ret
insb
inc
xchg
xchg
add
iret
ljmp
movsl
outsb
xorl
cwtl
jne
pop
dec
popa
sahf
icebp
push
bound
adc
sti
jnp
dec
push
int
fsubrp
mov
fbld
jne
popa
stos
loop
lods
test
ret
lret
and
cltd
jle
mov
idivl
pop
sub
xor
scas
xchg
fs
das
push
sbbb
xchg
jo
and
or
cli
sbb
mov
push
jle
inc
xlat
and
mov
inc
add
movsb
in
jge
loop
cmpsb
xchg
adcb
test
adc
and
insb
aam
add
xchg
imul
cld
cmpsb
cmp
and
out
loopne
jne
mov
test
jno
bound
jb
roll
movsl
or
cwtl
inc
and
xchg
add
mov
mov
and
cmp
lea
clc
inc
add
mov
xor
cmp
mov
push
inc
movsb
inc
test
and
cmp
aas
and
and
int3
or
mov
ds
adc
adcb
nop
test
jo
dec
add
in
mov
adc
sub
and
cli
mov
jecxz
cwtl
and
push
cmp
pop
jg
and
into
lahf
cmp
scas
neg
scas
in
dec
lock
or
imul
sahf
movsb
mov
mov
push
mov
in
mov
out
push
dec
sbbb
aaa
fisttpll
xchg
xor
pop
and
add
push
dec
scas
addr16
and
adcl
int
adc
cmp
ret
xchg
mov
dec
dec
xor
sahf
fdivl
enter
xchg
addr16
add
sbb
or
repnz
jno
std
xchg
loop
aaa
divb
roll
movsl
roll
inc
pushf
mov
fs
adc
jmp
jecxz
in
rorb
into
das
rcrb
sbb
pop
dec
and
bnd
bound
clc
mov
mov
jle
push
loop
cltd
fdivrl
jp
shlb
adc
ds
outsl
rclb
push
xchg
mov
mov
jns
and
jmp
jl
jge
and
sub
imul
outsb
and
or
mov
je
nop
iret
pop
mov
xchg
loope
hlt
loopne
sbb
cmp
jecxz
dec
in
lcall
test
dec
and
arpl
movsb
mov
or
xchg
sub
inc
fstl
and
lods
xor
inc
and
loop
xor
mov
insb
lea
inc
lock
xchg
and
jge
mov
sub
mov
js
jo
fnsave
int
xchg
pop
aam
loopne
push
xor
shrl
das
xlat
pop
and
pop
inc
jo
in
test
iret
jns
dec
int
adc
jge
push
xorl
pop
jae
leave
jp
iret
add
adc
and
sbb
outsl
lahf
mov
mulb
and
and
cmp
es
and
adc
out
daa
inc
int3
sbb
fs
jns
mov
loope
push
dec
xlat
pop
mov
mov
jno
fildll
inc
jmp
pop
addb
sbbl
and
adcl
and
or
and
sbb
and
xor
scas
cmpsb
ret
pop
popa
xchg
xchg
gs
lea
mov
shll
movsb
scas
sti
jge
dec
push
out
adc
xchg
and
add
jl
vmulss
and
loop
xchg
loopne
sbb
lcall
dec
movsb
mov
in
xchg
and
aad
cld
jle
push
and
mov
rcl
sub
cld
outsb
cli
xor
mov
inc
xchg
add
cmpl
fdivs
dec
mov
jg
and
lds
jge
and
sub
push
sub
push
adc
cmovno
and
in
mov
push
inc
stos
fnstsw
cmc
lock
iret
ror
test
shrl
arpl
dec
xor
orl
ljmp
ja
lock
leave
jecxz
mov
jo
xor
pop
jmp
inc
out
imul
mov
cmp
repz
sub
pop
dec
and
shrb
cs
mov
xchg
cmp
xorl
and
dec
inc
sbb
es
movsl
sub
ret
and
sahf
movsl
and
mov
ds
in
jmp
mov
push
xchg
add
mov
pop
push
aad
adc
adc
mov
and
pop
andl
adc
and
sub
out
lds
add
mov
xor
lcall
xor
sbb
in
cltd
mov
sub
int3
and
imul
rcrb
mov
mov
mov
xchg
add
cmc
jnp
mov
dec
xchg
popa
mov
pop
adc
insl
add
sahf
or
repz
dec
mov
xchg
push
cmp
pmaddwd
and
outsl
int3
ja
lds
cmpsl
shll
and
dec
jno
mov
gs
ret
popf
xchg
imul
mov
insl
inc
stc
add
lea
mov
shll
push
fiaddl
in
ds
xor
dec
inc
adc
cltd
mov
sub
lods
loope
push
imul
add
and
outsl
loop
adc
add
popf
lea
das
mov
popa
push
and
push
inc
push
movsl
xor
add
mov
jnp
movsb
lods
sbb
test
mov
and
adc
pop
sbb
xchg
mov
aam
aaa
xor
inc
loopne
xchg
bound
push
mov
mov
test
and
mov
into
xor
imul
sub
mov
cmp
jne
popf
or
xchg
int3
fiadds
sbb
into
sbb
addr16
mov
hlt
clc
xchg
rolb
ret
ljmp
mov
cmc
push
push
cs
dec
xor
sahf
xchg
es
setg
cmp
outsb
aad
mov
rcll
dec
cmp
stos
inc
test
and
popa
xor
and
inc
ja
in
aaa
hlt
and
mov
outsb
les
imul
push
pop
xor
push
les
stos
xchg
mov
outsl
lock
mov
dec
fld
addl
push
lods
and
rep
fs
jmp
enter
in
insb
pop
popa
push
pushf
movsb
lcall
dec
jo
xchg
lods
stos
pop
sbbb
and
test
lea
js
sub
jl
movsl
dec
push
mov
and
lock
mov
loope
inc
inc
pusha
in
xchg
movsb
and
fnsave
push
dec
cmc
xchg
add
mov
rcrl
cmp
rcll
out
in
enter
and
ja
pop
pushf
nop
movsl
cmp
mov
inc
sub
dec
cmp
mov
mov
call
and
cmp
sub
and
xlat
and
ss
or
xorl
mov
xlat
iret
test
sub
inc
and
dec
mov
and
mov
push
and
jae
adc
push
imul
int3
and
add
movsb
jge
frstor
es
add
cmp
and
dec
rolb
sarl
lods
movsl
and
dec
loopne
and
sbb
sbb
andb
sub
outsb
or
cmpsl
gs
or
insl
cmp
jb
sti
repz
push
in
scas
add
movsl
dec
sub
xchg
loop
rdmsr
and
inc
jp
sub
and
stos
fdivl
mov
shl
xor
notl
mov
mov
push
inc
dec
jns
add
push
push
in
sub
mov
cld
inc
sub
lea
and
xlat
and
push
sub
xchg
sbb
jbe
call
shll
pop
adc
shl
sub
rclb
and
and
outsl
ficoml
inc
imul
and
jmp
xor
test
outsb
sbb
ss
jo
and
cmp
sbb
xor
shrb
fadd
mov
and
sbb
fwait
lcall
push
push
mov
and
stos
imul
movsb
mov
popa
in
dec
mov
adc
mov
and
outsl
idivl
mov
xchg
and
outsb
and
sahf
ja
pop
je
jge
js
nop
mov
das
sbb
mov
xchg
jne
and
enter
mov
scas
and
test
dec
or
pop
and
cmp
push
xor
mov
xchg
and
fsubrp
jb
add
inc
and
ja
out
stos
pop
mov
popa
test
mov
mov
fmuls
mov
push
xchg
fnstenv
aas
stc
cmp
bnd
mov
mov
sub
in
push
popa
test
jns
js
and
ret
xchg
aas
dec
inc
andb
out
sub
clc
pushf
or
jl
enter
add
pop
es
and
push
pusha
pop
and
mov
cmp
xor
cmp
mov
bound
lahf
test
dec
cld
lea
test
adc
std
das
lret
das
or
shll
and
sub
jp
sub
push
mov
pop
jns
cmp
push
das
std
add
aaa
push
div
xor
push
popf
push
sub
das
jbe
xchg
movsb
clc
shlb
and
cmp
inc
jecxz
mov
fadds
out
into
cmpsb
daa
cmpsl
xchg
icebp
clc
and
adc
and
xchg
add
mov
push
jmp
add
int
cmp
std
cmpsb
mov
xorb
push
ljmp
scas
sbb
ret
and
sti
push
jbe
push
sub
mulb
pop
leave
push
std
sti
cmpsb
xchg
xor
push
lcall
sub
sbb
orb
popa
cltd
mov
fdivl
enter
sub
cmp
cmp
adc
lea
push
repz
jg
mov
mov
lds
and
push
out
fnsave
cmp
mov
dec
sti
sbb
imul
in
mov
xor
dec
jle
sub
and
dec
fistpl
sarl
ja
popa
and
aas
and
dec
fidivrl
inc
subb
lods
loop
iret
xchg
xchg
pop
test
arpl
push
push
into
mov
mov
mov
ror
mov
loope
sar
movsb
cmp
pop
mov
jge
and
xor
add
cli
inc
push
fwait
lods
pop
pop
and
test
pop
shlb
mov
xchg
fidivrl
xchg
and
mov
or
mov
int3
out
or
fldcw
inc
es
hlt
aas
aam
lods
and
loopne
fisttps
mov
outsb
loop
ds
imul
push
mov
pusha
jns
jnp
gs
sub
les
mov
fs
int3
fadds
push
stos
sti
les
lcall
mov
dec
test
lcall
push
push
cli
cmp
je
mov
js
add
nop
push
flds
hlt
xchg
and
repnz
inc
sbb
cmp
jno
iret
push
addl
hlt
ret
jp
xor
inc
cmpsb
sbb
inc
popf
fwait
xchg
mov
xchg
lods
sbb
iret
cwtl
and
popa
inc
xchg
jmp
jl
mov
cltd
adc
jbe
iret
into
and
pop
sub
pop
addr16
and
sarb
xchg
add
push
adc
jmp
das
mov
adc
nop
xchg
out
insl
loope
xchg
scas
jle
jl
mov
arpl
add
and
int3
sub
xchg
xlat
and
sub
aam
sbb
in
inc
loop
xor
mov
mov
xchg
and
xor
push
adc
dec
jl
outsl
iret
jp
push
push
out
mov
lods
sub
in
out
cltd
push
insb
inc
mov
dec
sub
adc
movsb
test
push
xor
cwtl
in
push
aad
xcrypt-ofb
cmpsl
sub
pop
pop
xor
or
movsl
test
or
mov
pop
push
cmp
mov
xchg
and
sti
out
mov
mov
add
and
or
lret
and
xchg
mov
cmp
inc
sub
repz
movb
pop
mov
and
cbtw
xchg
sbb
or
adc
add
imul
andb
xchg
addr16
pop
jmp
jne
clc
jp
and
shlb
cmp
and
add
mov
cmp
mov
enter
add
mov
jo
out
and
movsl
push
jecxz
push
ja
movsb
stos
fnop
pop
rcll
roll
cmc
andl
push
ds
sub
xor
fldt
mov
in
inc
fwait
hlt
test
mov
in
sub
fdivs
stos
fistpll
loopne
sub
adc
jg
hlt
lret
and
cmp
xor
and
outsl
cmp
mov
inc
pop
test
cli
icebp
xor
loope
sub
or
and
push
add
or
push
in
mov
scas
mov
xchg
cmpsb
dec
insl
aaa
mov
jbe
in
jns
adc
jns
mov
cmp
or
leave
xchg
mov
and
popa
xchg
loopne
movsl
push
and
add
nop
lods
inc
repz
idiv
in
test
push
sub
inc
add
adc
popa
inc
repz
mov
fmull
mov
dec
movsl
sahf
rorl
adc
or
cmpsl
fnstsw
cmp
insb
push
test
ds
hlt
mulb
xchg
sbb
adc
call
xchg
iret
lret
sub
mov
nop
mov
stos
adc
jno
ret
cmpsb
and
loop
mov
xchg
and
mov
push
jmp
leave
shlb
and
push
xchg
sub
sahf
add
ret
aas
jns
and
ficoml
imul
mov
add
mov
ret
and
lods
les
fisubs
and
out
add
ret
adc
push
imul
pushf
jb
jecxz
mov
fisubrl
fisubs
lods
pop
test
fsubs
into
jl
scas
dec
push
push
aad
int3
and
pop
sbb
lret
les
mov
fdivr
xchg
or
mov
scas
xchg
mov
or
cmp
and
jmp
xchg
xchg
js
mov
jecxz
scas
std
inc
orl
sub
icebp
push
mov
sub
push
imul
or
sbb
and
lods
dec
je
sub
jb
into
arpl
or
xor
imul
cmp
in
adc
fldenv
decl
push
sar
bound
mov
shlb
mov
andb
cmpsb
imul
and
repz
mov
cs
cmovp
bound
pop
xchg
dec
adc
stos
mov
add
mov
push
and
sbb
jmp
and
popl
das
dec
sbb
sub
clc
mov
mov
mov
insl
outsl
imul
jg
in
sbb
fildll
sbb
xlat
jmp
loop
mov
pop
mov
clc
lret
and
push
scas
push
cmp
push
lcall
xor
dec
push
aam
and
shlb
push
insb
and
std
push
and
sbb
psubusb
or
adc
dec
clc
jb
sbb
jns
mov
xor
loop
lods
into
sub
or
xor
push
ja
mov
test
and
adc
mov
push
cli
and
in
xchg
mov
and
dec
cmp
mov
stos
pop
dec
sahf
pop
ds
mov
and
mov
int3
rcrl
pop
push
mov
icebp
nop
and
mov
sbb
xchg
dec
jo
iret
adc
xchg
or
and
call
ja
in
sarl
push
cli
addr16
in
fsubl
jne
nop
mov
fistpll
sub
daa
jnp
pop
sbb
notb
iret
pusha
hlt
and
leave
in
fiaddl
clc
or
and
and
stos
cli
and
pop
add
lods
sbb
test
dec
and
fimull
insl
sbb
ficoms
and
add
mov
mov
or
xchg
and
pop
dec
inc
sbb
inc
and
fdiv
sub
adc
mov
xchg
jmp
idivb
pushf
or
pop
sahf
into
scas
clc
lods
mov
cmpl
mov
push
jae
sbb
stos
adcl
sub
movsl
pop
sti
pusha
sbb
bound
or
out
in
fsubrl
popa
add
push
and
xor
and
outsb
jbe
dec
sti
dec
outsb
scas
into
decb
out
sbb
je
aad
lea
roll
test
ss
xor
sub
mov
push
push
popa
xchg
jbe
adc
sbb
cmpsl
mov
or
daa
sarb
sbb
ljmp
pusha
and
outsl
add
dec
std
divb
and
popa
push
mov
cmp
jns
scas
push
mov
cmpsl
pop
sarl
dec
pop
push
pop
orl
mov
std
leave
mov
add
ljmp
js
mov
test
xchg
and
dec
faddl
push
int3
test
lods
aad
xchg
lds
and
sbb
pop
and
push
push
and
stc
sbb
icebp
mov
cmpsl
out
inc
inc
fcmovb
int
and
jne
jb
or
mov
filds
xchg
push
aad
orl
sti
inc
jno
mov
push
and
xor
je
fisubl
mov
icebp
fwait
call
pop
not
cmp
fcmovne
ljmp
add
push
in
sub
sti
iret
sub
and
and
out
mov
sub
add
mov
inc
aam
and
aad
fbstp
adc
xor
push
mov
into
test
je
cmp
pavgb
sahf
pop
sub
insb
rcr
movsl
in
aaa
and
sub
pop
and
push
or
movsb
mov
sub
inc
sbb
and
in
in
push
ret
cli
ss
mov
jge
subl
ds
jnp
mov
inc
push
adc
mov
xlat
stos
jmp
in
iret
cmp
popf
and
scas
out
and
enter
lods
and
xor
mov
scas
pop
clc
mov
mov
cwtl
and
inc
dec
sub
mov
and
jb
jl
dec
and
mov
insb
sub
enter
fcmovb
push
xor
dec
jge
out
movsb
sti
data16
js
jo
loop
cmp
xlat
xchg
mov
xchg
insb
pop
push
aaa
lahf
and
xchg
dec
jno
dec
popa
and
push
in
jb
adc
mov
and
jecxz
repnz
or
xor
cmp
sub
lahf
sbb
mov
jbe
jge
or
sub
mov
sub
cmpsb
inc
xlat
fadd
and
jl
or
sbb
xchg
lahf
cs
inc
in
enter
and
adc
pop
mov
outsl
pop
pop
xchg
mov
add
je
mov
lods
and
push
inc
and
nopl
rcll
mov
cltd
test
mov
mov
cmp
push
mov
test
or
sub
and
idivb
mov
daa
cmp
sbb
mov
jno
inc
int
mov
sbb
cs
pusha
popa
dec
dec
push
stos
xorl
enter
and
jmp
or
and
mov
inc
and
adc
je
cmp
xor
fsub
jo
cmp
or
jle
jo
in
dec
in
cmp
js
push
cmp
fbstp
and
test
cmp
stc
lcall
dec
fidivrl
jge
popa
outsl
fisubs
mov
or
popf
movsl
jge
pop
in
andb
js
mov
sbb
mov
xchg
cmpsb
scas
loopne
in
sahf
mov
das
int
shlb
cltd
sbb
jno
sub
push
clc
or
pop
sti
roll
pop
popa
lahf
mov
shlb
sbb
dec
inc
mov
mov
push
ret
pop
popf
ljmp
imul
mov
movsb
adcb
xchg
mov
mov
or
mov
or
pusha
sub
popa
insb
add
jae
adc
mov
mov
aas
sbb
sbb
or
dec
test
mov
shrb
cmp
xchg
stos
and
negb
push
mov
sarb
mov
xor
xchg
jecxz
imul
mov
jno
and
cmp
dec
notl
and
mov
push
or
and
push
test
in
pushf
movl
push
xchg
sub
push
lahf
inc
sbbb
inc
outsb
sub
cltd
sub
pushf
jns
sbb
inc
test
loopne
xchg
lods
cmpl
out
fsubl
and
xchg
call
mov
pop
push
mov
jnp
jns
mov
xchg
push
aas
cmp
sbb
mov
pop
jb
pop
and
and
mov
and
sbb
faddl
sbb
mov
xchg
mov
sub
rcrl
sub
and
jge
hlt
mov
mov
aam
dec
pop
inc
adc
xchg
adc
mov
popa
inc
outsb
cli
pop
push
and
xchg
dec
hlt
loope
js
push
repnz
dec
and
mov
and
fdivr
push
dec
mov
fst
movsb
xchg
sti
ficoms
idivb
sbb
lods
bound
mov
rcrl
jge
lret
aam
mov
js
orb
mov
pop
push
mov
dec
lock
adc
and
or
xor
out
and
jbe
and
and
dec
aas
sub
dec
je
pop
inc
xlat
nop
and
cmp
fcomp
and
cli
aad
adc
test
and
dec
and
mov
je
and
sbb
dec
faddl
test
pop
dec
sub
sahf
dec
jno
jecxz
xor
daa
fstpl
jbe
cmpsb
and
loopne
and
xor
sub
orl
mov
bound
xchg
mov
lods
adc
fnstenv
jbe
push
and
cli
mov
adc
jle
in
fnstcw
jmp
adc
dec
xor
xor
or
xchg
sub
das
or
pusha
inc
pop
xorl
xchg
jno
js
test
out
and
jbe
jne
adc
add
stc
das
mov
adc
bound
popa
in
subb
ret
scas
lea
and
push
sub
aas
sbb
testb
inc
out
mov
sahf
xor
mov
and
es
add
xor
adc
aaa
jmp
and
adc
mov
add
and
sub
fdivrp
xchg
xchg
mov
and
sti
adc
clc
repnz
and
mov
dec
fnstsw
and
add
pop
ret
fisubl
jecxz
sub
push
pop
and
jmp
pop
xchg
mov
jno
gs
in
aad
ljmp
iret
and
nop
mov
fcompl
and
xor
and
dec
mov
out
xchg
repz
lods
inc
and
icebp
sbbl
and
mov
adc
loope
and
push
jb
cmpsb
rcrb
mov
inc
lds
and
pop
sub
je
cld
mov
cmp
mov
and
jo
lahf
movsb
sub
insb
lret
jno
cmp
fsts
mov
and
sub
fstpl
mov
sub
jge
push
mov
jno
xor
scas
mov
xor
mov
mov
jmp
xchg
jb
leave
and
das
orl
xchg
pop
scas
xor
or
mov
cmp
fistps
adc
bound
mov
lcall
jae
mov
lret
sub
jnp
shlb
jl
mov
rcr
jns
pop
mov
and
adc
and
push
push
icebp
mov
cld
lret
mov
aam
gs
jno
into
fsubrl
mov
mov
fwait
and
mov
out
xchg
fnstenv
xor
xor
popa
pusha
iret
imul
jg
mov
dec
cmpsl
and
fadds
movsb
and
dec
mov
xchg
push
lea
xchg
popf
cli
add
repnz
xor
int3
cmp
test
daa
jmp
xchg
cld
pop
lcall
inc
add
and
out
adc
sahf
fimuls
test
mov
in
xchg
mov
fwait
shlb
jb
xchg
and
and
inc
int3
test
and
inc
and
scas
out
in
pop
sub
mov
mov
dec
sub
jg
mov
jmp
pop
cmp
xchg
pop
push
dec
add
in
xchg
add
push
jge
popa
outsb
movsl
out
and
repnz
les
mov
mov
jne
xor
jecxz
inc
clc
mov
and
sbbb
jl
mov
jbe
test
mov
mov
lds
loope
push
mov
push
sarw
scas
cwtl
lods
and
mov
pop
les
into
lahf
and
fiaddl
jle
cmpsb
movsb
fisttpll
je
or
stc
push
pop
and
cld
into
jnp
mov
in
add
mov
das
sub
aam
dec
jmp
xchg
push
divps
into
rcl
dec
das
cwtl
push
dec
push
sti
xchg
lock
push
les
adc
ja
and
mov
jno
xor
and
movsb
adc
inc
mov
adc
xchg
cltd
sub
xchg
and
addr16
push
inc
scas
and
cmpsb
icebp
aad
or
and
gs
adc
xchg
cmp
sub
into
loop
xor
int3
out
and
inc
mov
and
imul
ss
mov
ds
hlt
mov
inc
rcll
jge
popa
push
mov
dec
and
cmp
mov
and
jo
adc
xor
sbbl
xor
jns
sbb
test
mov
call
pop
and
insb
cmpsl
xchg
out
bound
fucomp
aad
and
push
adc
dec
mov
sbb
addr16
mov
and
mov
sbb
xlat
mov
icebp
pop
and
fldt
int3
and
jno
ret
sbb
xchg
and
sbbb
or
xor
push
lea
or
js
dec
adc
and
sub
pop
jns
out
sub
jnp
pop
cmp
or
sbb
sahf
int
hlt
sarl
jb
xor
xchg
jecxz
pop
or
adc
imul
and
jns
pop
and
shl
xchg
fidivl
sub
jge
cmp
and
faddl
shlb
insb
popa
mov
and
lds
mov
aas
mov
negl
lods
push
loope
lock
sub
call
mov
cld
popa
pop
in
hlt
mov
aam
loope
mov
add
jnp
lock
jo
push
scas
out
fisubrs
push
mov
frstpm(287
test
xor
clc
shll
bound
sub
jnp
pusha
mov
mov
arpl
and
orb
inc
inc
loop
and
push
shll
test
pop
dec
lods
stos
xchg
xor
cmp
adc
xlat
int
andl
lret
xor
sub
popf
and
pusha
leave
pop
mov
push
jno
cltd
mov
and
imul
inc
popa
jg
push
xor
xchg
add
cli
sarl
aam
jbe
and
lods
repz
inc
and
adc
and
inc
cmp
aaa
and
shlb
cmp
imul
daa
icebp
je
mov
xlat
enter
dec
icebp
cmp
adc
divl
dec
gs
shll
popf
test
enter
mov
push
test
lahf
inc
xchg
and
sahf
adc
pushf
fcoml
rol
enter
sbb
cmpl
aad
mov
sbb
rclb
lahf
movsl
out
fildl
cmp
and
popf
sbbl
jb
mov
sbb
sub
adc
mov
pop
loop
sbb
and
rolb
jle
sub
lea
popf
and
xor
in
dec
and
and
mov
arpl
jae
stos
jg
out
pushf
pop
call
pushf
test
negl
imul
gs
cmp
cmp
xchg
and
push
mov
cmp
lock
cmp
aam
ss
in
movsl
outsb
mov
mov
fcomps
shlb
lds
jns
pop
jmp
pusha
test
pop
jp
push
out
pop
icebp
jno
inc
stos
int
test
and
dec
scas
in
loop
jbe
sbb
mov
and
mov
xor
mov
and
add
fsubrp
push
and
fwait
adc
mov
mov
pop
mov
mov
mov
ja
out
dec
sbb
add
movsb
testl
and
das
xor
mov
mov
sub
daa
shll
push
inc
sub
inc
daa
hlt
scas
lea
movsl
ror
cmc
sub
and
pop
mov
sbb
jb
inc
jno
push
push
das
mov
daa
and
jle
cmp
sub
imul
push
mov
sub
mov
and
xor
and
and
xor
jge
dec
ja
and
pop
or
xchg
cmp
out
jnp
dec
andb
jp
add
inc
pop
fwait
xlat
stos
js
inc
loop
outsb
inc
es
and
mov
adc
jo
and
lea
and
jae
or
xchg
pop
jne
clc
out
es
mov
push
mov
jg
and
and
imul
or
add
sbb
mov
jp
mov
add
inc
leave
hlt
rcrl
movsb
inc
sub
xlat
test
mov
sbb
in
lods
aas
and
or
and
adc
mov
sub
data16
pop
icebp
jns
jmp
fucomp
and
xchg
xor
test
adc
mov
clc
ss
insb
cmp
xchg
mov
mov
pop
aaa
pop
mov
and
es
mov
lahf
leave
lods
and
or
lret
dec
push
fldenv
orb
into
pusha
test
inc
and
cli
dec
out
cltd
sub
xor
jecxz
or
xchg
or
popa
int
addr16
sbb
sarl
test
adc
clc
and
dec
mov
sub
loope
mov
jmp
and
mov
push
das
xchg
scas
inc
or
add
mov
mov
dec
xchg
js
cs
and
aad
movsb
mov
cltd
push
sub
int
dec
fwait
mov
mov
movsb
xor
decl
and
mov
dec
mov
enter
lea
xchg
stc
and
clc
icebp
dec
fdivrl
test
in
sub
jp
inc
fcmovu
stos
and
mov
mov
pop
out
dec
aad
xchg
mov
loopne
out
testb
popf
inc
addl
jnp,pn
int3
xchg
and
pusha
sub
xor
dec
inc
popa
pop
rcrb
or
test
xor
jg
movsl
jo
and
pop
aas
push
scas
and
aaa
lds
cmpsb
mov
loope
and
arpl
imul
mov
in
jb
mov
leave
mov
xor
pop
cmp
movsb
xor
cmp
insl
push
jae
and
jg
and
clc
jle
mov
int3
or
and
inc
and
dec
fisubrl
jg
ds
in
aas
and
test
cmpsl
push
push
pop
and
mov
sub
dec
fs
loop
pop
mov
aad
and
fistl
daa
inc
jp
nop
mov
clc
rolb
les
push
push
and
mov
arpl
xchg
adcb
add
jecxz
xor
test
sub
dec
dec
xchg
pop
and
shlb
xchg
mov
test
dec
cmp
fwait
aaa
and
outsb
inc
out
mov
mov
jp
mov
mov
divl
and
daa
xor
sub
push
js
push
sub
and
ljmp
dec
outsl
movsb
cmp
cmp
mov
std
in
mov
loopne
or
aas
loope
lcall
push
mov
ljmp
shll
enter
and
push
lds
add
in
xchg
pop
frstor
stos
jecxz
je
pusha
cltd
push
sub
lds
add
and
mov
and
dec
imul
subl
cmpsl
jb
fcom
cmpsb
and
xchg
and
data16
rcll
subl
fsubs
push
jg
inc
test
xchg
push
jge
push
lods
mov
mov
xchg
sub
cltd
enter
movsb
xchg
daa
hlt
mov
loopne
inc
and
pushf
dec
xor
mov
mov
jp
xchg
ficomps
leave
shrb
xchg
adc
movsb
cld
sbb
shl
and
popa
and
int
in
inc
xchg
lahf
jmp
mov
and
mov
call
pop
dec
aaa
add
mov
roll
pop
hlt
cld
and
pop
imul
and
fsubrs
ret
cmp
sarl
dec
subb
and
out
and
lods
mov
movsb
shll
cmp
add
repnz
sub
movb
loope
cmpsb
adc
mov
push
mov
and
fdivrl
ss
ljmp
out
insl
mov
sub
push
shll
add
mov
cmp
lods
mov
lret
repnz
pop
mov
iret
and
push
jmp
fimull
and
ss
shlb
popa
rolb
jle
mov
and
cmpsb
jge
push
lods
fdivs
jl
lahf
movsb
rcrl
mov
test
dec
testl
lods
push
xchg
ss
shl
mov
and
pusha
jge
movsb
addl
scas
sbb
xlat
mov
inc
bnd
and
sub
jge
ret
add
inc
mov
mov
repz
xchg
jecxz
push
and
cmp
lret
mov
push
mov
jo
in
inc
test
inc
mov
daa
adc
xor
sbb
push
sub
mov
and
into
xchg
iret
inc
fdivrp
notb
lcall
out
lret
cli
push
add
shrl
and
outsl
gs
sbb
movsl
bound
sub
mov
and
fistps
inc
mov
push
fucomip
out
dec
sub
push
push
mov
gs
lcall
inc
scas
xor
lods
outsb
aas
sbb
xor
shrb
push
pop
pop
pop
mov
shrl
in
pop
push
sti
or
mov
cmpsl
add
fldcw
repnz
xor
lret
test
mov
cmp
movsl
add
sub
and
in
addr16
jmp
imul
int
mov
add
push
mov
adc
outsl
ds
pop
popa
mov
int
sahf
pop
xor
sbb
pop
in
xchg
add
mov
and
xlat
dec
mov
and
mov
add
cmp
push
mov
and
aaa
dec
test
push
jo
adcb
outsb
mov
std
shlb
jne
lods
add
push
and
and
ljmp
push
mov
lods
gs
stos
rol
sahf
mov
push
ret
cmpsl
dec
test
inc
mov
lahf
dec
sbb
jge
and
push
scas
sti
mov
mov
inc
pop
lcall
jb
aaa
push
out
sbb
mov
hlt
xchg
aas
and
aad
or
insb
stc
inc
mov
and
cmp
fcomps
test
jle
and
lret
and
cmp
int
out
call
cs
inc
and
xchg
jle
movsl
jg
aas
and
xchg
or
dec
and
popa
movsb
lret
jns
ja
jns
cmpsb
imul
cli
lods
pop
es
xchg
sub
fisubrl
and
or
mov
or
xlat
repnz
js
and
push
ror
push
jle
outsl
insb
mov
jne
fwait
jo
ja
bound
popf
xchg
jno
mov
pop
rcrl
imul
xchg
push
in
and
inc
mov
pop
xor
xchg
fdivs
push
movsb
mov
gs
je
push
mov
in
mov
inc
dec
dec
data16
imul
lods
xchg
jmp
iret
movsb
sbb
and
sbb
jb
lds
ret
pop
and
sub
and
inc
or
mov
sbb
sti
daa
add
sub
into
icebp
mov
xor
push
jno
push
sbb
jmp
adc
cmp
test
out
ret
xchg
sub
or
mov
movsb
out
push
cmp
and
adc
and
insb
add
leave
and
sub
inc
push
iret
in
jl
and
dec
cld
mov
cmpsl
mov
and
or
daa
in
fwait
sub
jae
jl
decb
sbb
cmp
sbb
pop
sbb
adc
ljmp
lahf
filds
and
mov
dec
mov
sbb
cmp
add
mov
dec
mov
fs
jno
subl
xchg
xchg
mov
insl
add
mov
jg
xchg
xor
std
xor
jge
mov
pop
adc
cmpb
cmpsl
inc
repz
mov
arpl
mov
ret
fidivl
sub
icebp
xor
repnz
jecxz
mov
and
mov
sub
inc
in
cmp
ds
test
xchg
push
lea
push
cmpsl
in
sub
and
scas
mov
fistpll
sbb
ret
daa
xorl
shlb
cwtl
fwait
lds
aad
mov
jbe
sbb
test
pop
adc
popa
mov
imull
xor
cld
and
sub
sbb
outsb
sti
mov
adc
xor
rcrb
rcl
int3
mov
in
dec
lods
and
je
addr16
push
ficomps
inc
repnz
ret
add
adc
and
leave
in
mov
or
mov
shl
jo
movsl
sbb
dec
and
sub
pop
mov
sbb
and
push
sbb
and
dec
cwtl
jg
jge
add
sbb
or
sbb
and
xchg
aad
rorb
fisubrs
sub
mov
frstor
jnp
inc
imul
stos
and
pop
adc
and
lds
and
xor
shrb
loopne
sub
test
cmp
jb
push
mov
cmp
in
aad
cmpsl
pushl
sbb
and
or
nopl
in
jo
mov
xchg
enter
inc
fistps
pop
and
jecxz
cwtl
fcomps
in
mov
mov
iret
jo
sbb
out
pop
xchg
int3
or
dec
fdiv
inc
sti
mov
and
fstl
sbb
sbb
cmp
xor
mov
add
xchg
cmp
sub
lock
push
lcall
out
dec
jb
pop
jno
call
leave
loope
jns
dec
test
cltd
mov
inc
rorb
xchg
mov
clc
dec
and
nop
and
sbb
arpl
pop
sub
mov
dec
xchg
and
pop
addr16
test
dec
or
inc
stc
movsl
and
ljmp
inc
push
adc
and
cmpb
xor
jnp
inc
and
and
out
mov
call
xchg
shll
cwtl
sbb
xchg
xor
ja
and
and
mov
movsl
xchg
and
pop
ficompl
icebp
shrl
and
iret
stos
mov
cmpl
in
xor
mov
pop
hlt
insb
aam
arpl
mov
loope
pusha
and
and
sub
into
inc
and
mov
dec
jle
adc
in
mov
sarl
mov
rorl
adc
sub
and
xchg
std
inc
xor
sub
psrlq
shrb
cmpsb
aaa
xor
int
xchg
fisubrl
mov
mov
and
repz
pop
std
or
pop
mov
sub
sbb
adc
and
and
mov
and
iret
or
mov
jle
popa
mov
and
mov
jge
mov
push
enter
and
xchg
xchg
aam
repz
dec
jno
jb
lret
mov
mov
jle
add
mov
sbb
cmpsb
jmp
xchg
jnp
mov
test
mov
adc
lods
ss
jmp
in
mov
cld
xchg
mov
xchg
cmpsb
and
dec
ret
and
mulb
jns
or
and
imul
jg
addl
outsl
sub
and
push
inc
pushl
decb
mov
out
les
mov
fiadds
inc
mov
popa
jb
cs
push
ret
and
sub
push
scas
and
sub
cmpsl
sbb
mov
mov
scas
pop
inc
test
sti
mov
dec
fstpt
cmp
push
fildll
shr
ret
mov
jno
xchg
je
arpl
add
mov
andl
enter
out
movsb
lods
decb
nop
push
pop
adc
jne
cli
into
mov
in
xchg
adc
and
cmp
sub
das
rol
sbb
push
and
sahf
outsl
clc
aad
mov
dec
ss
pinsrw
ret
and
mov
or
dec
xor
stos
cmp
adc
pop
in
mov
mov
incb
and
aam
or
shll
and
add
jae
mov
cmp
mov
sarb
add
add
xchg
lret
inc
aas
mov
mov
and
or
sub
mov
mov
pusha
mov
les
cltd
pop
and
leave
push
sbb
xor
pop
addb
mov
icebp
pop
jb
xor
and
cmp
push
and
push
mov
pop
dec
inc
and
jne
pushf
or
mov
into
lock
jmp
out
or
loop
add
popa
lea
xchg
sbb
lods
cmp
mov
sub
push
pushf
lcall
and
sub
inc
inc
push
lret
outsb
cld
dec
adc
sub
and
pop
add
repnz
jno
pop
mov
sbbl
mov
in
sbb
and
bound
xchg
inc
add
fiaddl
and
sbb
jnp
cmp
fldcw
scas
jne
scas
pushf
imul
and
cmpb
and
jmp
test
sbb
test
adc
pop
in
aaa
inc
fimuls
or
and
mov
repnz
jb
mov
adc
jnp
mov
pop
popa
out
ja
stos
or
mov
pop
cmpl
lods
push
inc
setne
inc
mov
lea
dec
enter
fmuls
add
inc
push
push
lods
push
jge
push
and
jnp
std
pop
fwait
daa
and
cmp
outsl
ljmp
enter
js
jno
bound
inc
sub
and
sbb
mov
mov
push
cwtl
popf
and
cs
mov
push
nop
fdivrl
lret
jmp
mov
mov
xor
mov
arpl
lods
cmpsb
nop
push
xchg
ret
int
mov
add
cmp
outsl
lods
dec
cmpsl
repz
mov
sbb
cmp
or
inc
mov
pop
movsb
fs
clc
xor
and
xor
xchg
test
mov
aas
cmp
inc
sub
jecxz
clc
popa
xchg
mov
xchg
dec
jnp
push
and
lret
fldpi
and
cmpsb
mov
popa
and
mov
xor
cwtl
fsubrp
and
push
xchg
adc
xchg
mov
enter
mov
in
xorl
pop
jl
lods
sbb
scas
sbb
sahf
cmp
roll
pop
xchg
leave
movsl
mov
insb
out
and
push
adc
add
inc
dec
cltd
fsubl
cwtl
adc
shlb
xchg
lcall
dec
mov
cltd
in
cmp
ja
imul
jg
sub
sub
mov
in
lret
jns
and
iret
movsb
cmpsb
int3
and
imul
dec
push
mov
push
popa
add
or
andl
popf
cmp
add
hlt
std
fdivp
fadds
sbb
sti
inc
and
frstor
add
icebp
movsb
pop
shlb
sub
cmp
popf
jg
and
xchg
fistl
add
sub
notb
dec
in
xchg
jb
dec
jl
out
imul
lds
cmp
leave
mov
xchg
and
and
test
jne
mov
out
punpcklwd
inc
or
sbb
push
test
lret
test
adc
fwait
les
bound
sbb
add
dec
std
in
and
pop
cmpsb
push
xchg
loope
push
and
negb
andb
push
push
in
xchg
cmp
and
sbb
ja
ss
lods
xchg
and
popa
jge
dec
xor
mov
jo
faddl
fbld
mov
hlt
push
mov
and
cmc
dec
test
repnz
xorb
mov
fcomps
into
adc
cmp
add
sti
xor
and
and
cli
fisttpl
mov
push
fwait
jge
addr16
mov
sti
cwtl
pop
xchg
outsl
and
cmp
adc
sbb
adc
and
mov
xchg
push
pushf
mov
inc
pop
test
and
push
or
or
into
jg
stos
shll
scas
outsl
or
jmp
and
inc
inc
push
es
aas
add
in
cmp
scas
imul
jge
push
lock
and
jecxz
aam
daa
stos
lret
cmp
mov
sti
jno
push
mov
movsl
test
pop
andb
fldcw
mov
das
leave
cmp
push
sbb
aaa
out
in
cwtl
and
push
fnsave
shll
inc
mov
xor
adc
fsubl
adc
sub
and
mov
mov
mov
insl
fucomip
std
lret
mov
xor
pop
and
xchg
test
and
cmp
dec
in
clc
out
and
insl
mov
lret
mov
and
and
and
lods
and
psrld
jae
lods
insb
and
cmp
sbb
lcall
mov
and
or
test
lret
xchg
fstpl
jno
int3
shlb
cmovno
and
iret
fsubl
aam
fs
popa
mov
arpl
inc
fdivr
adc
push
test
test
fistpll
dec
dec
and
mov
push
aas
outsb
shlb
jns
pop
push
jmp
hlt
stos
shrl
jge
in
pop
xchg
fldl
aas
pushf
ret
mov
shlb
xor
scas
cmp
ret
push
or
add
mov
mov
or
movsb
fwait
or
xor
dec
sti
xchg
xor
insl
ret
push
jmp
cmp
push
pop
and
add
imul
ret
lcall
sub
pop
cmc
scas
xor
loope
add
dec
jg
push
dec
repz
les
cmp
movsb
or
sar
xor
and
sti
push
lock
nopl
cmp
or
pop
or
jbe
cmc
jg
jecxz
and
aas
push
sbbb
stos
add
sub
or
inc
xchg
enter
bnd
mov
and
imul
icebp
pop
mov
in
sarb
add
sub
jl
loope
out
and
in
and
and
push
and
pop
stos
leave
xor
sub
adcl
icebp
and
or
in
inc
mov
push
jno
sbb
or
push
and
stos
loopne
rorb
test
push
scas
jecxz
push
or
mov
mov
xchg
hlt
test
clc
gs
adc
inc
xchg
dec
pop
xchg
repnz
imul
xor
je
and
cmp
mov
sub
mov
in
shrl
cmp
imul
pop
cmp
and
mov
pop
and
sub
aaa
inc
pop
jno
lret
add
repz
mov
int3
ja
jmp
dec
sti
and
aam
dec
add
jge
pop
xor
push
in
dec
and
cltd
or
xor
in
jl
hlt
mov
pushf
mov
out
repz
cld
pop
and
in
imul
es
jle
inc
or
pop
adc
mov
in
mov
and
xchg
push
mov
ficompl
push
and
jp
sub
bound
inc
insb
xchg
sub
xor
xchg
inc
and
jp
arpl
and
push
mov
sahf
lods
ss
xorl
int3
adc
aas
push
lcall
daa
insb
push
in
dec
dec
dec
lcall
outsl
or
xchg
daa
daa
in
pusha
dec
xor
sub
sbbb
movsl
and
xchg
pop
fistl
subb
loop
stos
iret
lret
inc
movsb
push
xchg
push
add
mov
xchg
leave
cltd
mov
push
in
or
and
fadd
mov
add
enter
xchg
into
pop
pop
and
push
shrb
xchg
xchg
jbe
dec
ss
mov
sbb
xor
into
mov
dec
add
sbb
inc
hlt
subl
inc
inc
movsb
pop
arpl
sbb
and
in
mov
mov
popf
out
pop
pop
add
inc
rolb
loope
imull
and
std
push
int3
and
pop
test
repz
mov
lahf
mov
and
inc
push
ficoml
shll
add
or
mov
rcll
and
push
cmp
int3
pop
and
loope
lahf
pushf
or
test
xchg
inc
cmp
jge
pop
xor
cmpsl
outsb
inc
rcll
test
and
xchg
pusha
jne
xchg
cs
xor
push
popa
adcb
imul
push
add
repz
pushf
xchg
sub
std
js
and
clc
mov
cmp
lea
ljmp
mov
cmpsb
test
lods
adc
mov
and
cmp
push
add
sub
hlt
cltd
pop
xchg
mov
xor
cmpsl
mov
or
add
adc
int3
cmp
adc
sub
sti
sub
pop
and
sub
cwtl
out
push
jo
cmp
inc
sbb
lods
in
loop
mov
hlt
mov
xchg
fldenv
and
cmp
aad
mov
fsubl
and
sbb
dec
sub
xchg
aad
pop
and
pop
gs
sub
lahf
lods
and
pop
insl
inc
imul
cmp
cmp
adc
sub
mov
dec
sub
add
cmpl
fs
mov
cmp
and
pop
lea
inc
in
imul
out
mov
mov
push
or
and
xor
loope
mov
sbb
aas
aas
jno
add
jecxz
mov
pusha
out
popl
fsubp
or
push
add
push
inc
jl
rcll
inc
bound
outsb
and
mov
into
and
aam
cld
rcrl
and
movsl
outsb
add
and
mov
test
sub
or
xor
mov
dec
fdivrp
movsb
iret
adcl
xor
leave
test
push
imul
ja
jl
addl
hlt
push
aam
xchg
jo
sbb
mov
push
mov
test
mull
iret
rcrl
lahf
jg
sub
int3
push
inc
jne
ret
scas
test
push
jp
and
inc
dec
cwtl
ret
test
test
mov
jmp
adc
popf
push
xchg
cmp
cld
jge
push
xchg
aam
mov
pop
test
push
mull
std
cmp
sub
sbb
cmp
dec
xchg
xchg
xor
and
aaa
clc
or
cmp
jecxz
inc
xor
sbb
pop
sti
sub
inc
outsb
or
xor
fs
aas
pop
outsl
or
mov
aad
out
or
push
xchg
outsl
add
pop
adc
dec
out
or
add
cmpsl
movsb
or
cmpl
imul
fildl
cmp
and
pop
pop
mov
js
popa
jge
xchg
jne
ljmp
cltd
push
lea
loope
fwait
inc
and
mov
mov
ret
clc
mov
enter
ret
xchg
and
data16
cmpb
push
aam
mov
jle
cmovge
push
jg
inc
int3
sbb
popa
xchg
lods
pop
fstpt
xchg
xchg
mov
jbe
mov
dec
mov
ret
sub
xchg
add
aas
cmc
fwait
sbb
hlt
cld
xor
cli
and
mov
sbb
loop
push
pushf
and
dec
pop
push
cmp
and
xor
in
jmp
adc
push
orl
mov
pop
and
push
xchg
and
sbb
ss
mov
pop
rcll
fbstp
popa
jbe
sub
jl
aaa
jne
fucom
addl
movsb
icebp
and
fisttps
mov
xchg
jne
test
fimull
and
call
and
sbb
sub
sbb
push
bound
icebp
fs
jge
and
xor
push
and
mov
xchg
int3
or
cmp
cwtl
test
jg
push
mov
sub
dec
push
cmp
mov
pushf
lock
mov
lret
lcall
popa
je
test
call
lcall
in
sub
pop
cltd
xchg
xor
sbbb
sahf
mov
and
mov
cmp
and
fstl
nop
lret
jbe
clc
and
ds
ficoms
cmp
leave
aas
and
aad
fisubl
ds
jo
pop
xchg
xchg
dec
mov
sar
sahf
adc
dec
and
mov
test
mov
inc
add
add
int3
jmp
pop
icebp
pop
add
test
sub
ja
insl
ret
mov
aad
inc
xor
cmp
sub
jae
cltd
dec
mov
inc
test
cmp
or
push
movsb
or
mov
push
bound
loope
add
lock
in
cmp
movsb
jno
jbe
dec
out
mov
lcall
lods
xchg
movsl
jbe
cli
out
adc
inc
pop
popa
sbb
call
lods
or
mov
mov
jne
arpl
aad
dec
add
rcrl
ja
aaa
mov
mov
cwtl
inc
push
and
cmpsl
jo
and
dec
jae
jb
inc
mov
popa
xor
and
sti
ret
push
sub
mov
or
out
push
push
pop
pushf
popa
ljmp
jns
adc
roll
push
inc
and
sbb
loopne
outsl
jns
lret
xchg
cld
sub
cmpsl
xlat
out
mov
adc
push
cmp
popf
cmp
lea
and
jle
and
lret
mov
daa
adc
ret
insl
test
add
call
test
icebp
movsb
lea
sarl
test
hlt
orl
push
mov
mov
xchg
and
popf
mov
out
and
pop
cmpsb
mov
rorb
adc
mov
mov
mov
test
outsb
and
xor
xchg
ljmp
out
and
cmp
sub
cmpsb
mov
sub
call
mov
shll
jns
push
jno
xchg
inc
std
add
int
sarb
cmpsl
cmp
repnz
orl
jb
xchg
sub
pop
mov
loop
adc
push
ret
jnp
gs
dec
mov
and
add
mov
jge
and
lea
adc
fdivs
push
mov
and
adc
xor
and
cmpsb
mov
lahf
pop
mov
js
dec
loope
fildll
repnz
jbe
mov
and
xchg
sub
or
inc
cmpsl
mov
out
jbe
ret
dec
and
or
sub
rcrl
aas
lods
mov
xchg
push
or
and
fsubl
sub
test
fiaddl
testl
ljmp
pop
xchg
iret
jns
fldcw
and
jmp
cmpxchg
int
popa
mov
mov
adc
and
cmp
cmp
and
sbb
sti
mov
jecxz
xchg
into
dec
mov
push
idivl
scas
pushf
and
and
insb
imul
mov
pop
or
daa
cmc
adc
in
sbb
scas
and
add
xchg
add
test
lcall
adc
inc
movsl
shl
popa
call
movsb
rcrb
push
xchg
pop
in
and
pushf
jle
test
adc
and
mov
and
movsl
cmp
ljmp
and
push
nop
sti
inc
and
aad
add
and
mov
xor
mov
jae
or
sbb
push
int
hlt
mov
sahf
fadds
mov
lcall
out
lahf
and
jns
ljmp
shl
sub
dec
xor
outsl
pop
js
add
mov
test
mov
and
popl
and
mov
icebp
movsb
sbbb
aad
mov
rcrl
inc
mov
xor
and
and
in
outsl
xchg
aaa
adc
and
clc
sbb
imul
push
testb
mov
ja
push
cmp
inc
xchg
popa
movsb
add
jmp
dec
xor
ret
mov
jg
mov
mov
out
jno
ret
fwait
lods
icebp
xor
cmp
sbb
adc
divl
incl
mov
sub
xchg
hlt
sub
pop
loopne
add
fwait
jl
cwtl
mov
je
add
sti
cmp
pop
adcl
cmpsb
dec
test
xor
lea
int3
ficompl
jmp
test
mov
adc
incb
popa
push
aaa
push
aas
push
and
adc
leave
movsb
lahf
and
rorl
sub
out
cmp
popa
cmp
and
add
loope
pop
jmp
sbb
sbb
jnp
fsubrl
mov
fs
push
pop
shr
cwtl
in
add
aas
in
popa
jo
aaa
inc
inc
mov
rcll
and
mov
in
inc
sahf
and
adc
and
cmp
sbb
imul
push
idivb
pop
rcrb
dec
cmp
push
sub
adcl
cwtl
pop
lods
loop
and
scas
inc
imul
das
imul
adc
inc
pushf
loop
and
mov
xchg
call
outsb
sbb
test
adc
stos
clc
rorb
mov
fs
lcall
jno
xchg
mov
mov
mov
pusha
insb
fidivs
mov
and
inc
ret
fnstsw
cmc
das
mov
and
ret
shlb
or
jg
mov
push
mov
fwait
jae
dec
insb
xchg
and
dec
inc
fimull
aam
jl
jmp
iret
jmp
pushf
mov
cmp
mov
fcompl
stos
mov
ljmp
inc
mov
add
movsb
sbb
stos
outsb
xchg
imul
sbb
cltd
call
loop
jmp
push
aad
cmp
xor
inc
cmp
dec
les
das
inc
and
test
and
lods
sub
testb
rcrb
popa
hlt
scas
lock
sub
repz
dec
and
daa
pop
mov
cmp
xlat
xchg
push
jl
loope
inc
ret
shrb
int3
pop
and
sbb
inc
mov
push
les
mov
lret
push
repnz
enter
adc
test
cli
sbb
stos
pop
or
in
inc
out
xorl
inc
sub
es
sub
or
popa
arpl
xchg
in
jne
pop
push
gs
sub
faddp
mov
repz
push
mov
and
sbb
jbe
push
add
fidivs
pop
ret
xlat
mov
or
and
mov
and
cs
adc
das
sbb
roll
and
jmp
or
cwtl
inc
scas
xchg
scas
pop
inc
adc
aam
adcl
ss
cmp
lahf
or
aam
das
out
xchg
pop
xlat
and
jp
push
sahf
mov
loop
pop
icebp
or
mov
movsb
push
ret
adc
cli
test
test
adc
adc
lcall
rcll
fwait
add
sub
mov
sbb
pusha
lock
outsl
js
inc
add
insb
push
xchg
and
push
jecxz
add
insb
or
adcb
xchg
and
cmp
sahf
inc
fnstsw
popf
dec
xor
dec
xchg
push
sbb
or
or
fsubrl
adc
inc
add
movsb
leave
pusha
sbb
call
insl
shrl
dec
add
mov
cwtl
sbb
out
fbstp
insl
xor
insl
das
mov
lds
loope
std
fisubrl
mov
popl
lods
test
stos
mov
and
in
dec
and
ret
sahf
mov
mov
and
cmp
test
imul
rcll
fwait
cmp
xor
and
cmpsl
mov
sbbl
lds
jp
fisttps
push
and
cmc
cmp
icebp
insb
add
mov
jno
popa
nopl
fdivl
xor
and
loopne
mov
sub
aam
and
xchg
jp
jge
lahf
lcall
adc
pop
in
lret
and
fbld
xor
ret
xchg
call
mov
xchg
sahf
scas
push
jbe
and
loope
jmp
div
mov
mov
sub
ret
insl
cs
sbb
push
movsb
cs
test
mov
loope
add
sub
and
aaa
push
push
and
cld
inc
fcoms
clc
jp
jg
je
mov
movsb
jnp
roll
inc
sbb
and
mov
mov
mov
imul
sub
xchg
cmp
sub
popf
mov
jle
sub
out
xchg
push
int
and
add
loopne
pop
xchg
xchg
and
push
pusha
idiv
addb
and
push
sub
add
aas
inc
inc
clc
lods
int3
ret
adc
jnp
xlat
movsb
dec
imul
out
popa
mov
and
inc
addb
out
out
in
adc
stos
lea
icebp
cmp
jnp
rep
ss
mov
fmull
fnstenv
lods
aas
iret
and
add
adc
adc
sub
sub
jb
and
shll
loope
mov
pop
and
and
out
sbb
hlt
mov
sub
imul
mov
push
jno
sub
and
mov
xchg
sub
and
rcr
add
pop
imul
and
xchg
imul
add
and
je
insl
gs
movsl
xchg
out
lcall
faddp
or
mov
inc
addb
sbb
in
sub
shll
or
dec
outsl
sarb
and
stos
sub
popa
dec
pop
in
mov
inc
xor
and
push
jg
pop
adc
and
mov
jmp
mov
sub
int
movsb
push
fistl
mov
xor
repz
js
and
dec
ret
out
aas
dec
loope
inc
jl
push
mov
jne
sbb
jp
pop
testb
std
lcall
mov
cmpl
ds
je
sbb
in
gs
mov
mov
xlat
add
pusha
cmp
imul
lods
sbb
cli
orb
pop
test
dec
cwtl
push
test
stc
push
inc
xor
cld
aas
stos
cmp
fbld
mov
mov
jl
pop
out
xchg
inc
js
cmp
lcall
es
popa
out
aam
xor
fbld
pop
inc
stc
cmp
cmp
jno
leave
sub
test
out
push
and
jmp
jbe
jbe
int3
imul
sub
sub
push
pusha
mov
and
and
or
push
push
scas
loopne
aas
adc
fs
out
jbe
data16
pusha
scas
jp
jo
push
sub
and
xor
iret
push
or
sbb
fsts
mov
xchg
mov
enter
cli
add
scas
push
adc
pop
cmpsb
inc
inc
sbb
and
cmpb
pop
and
mull
outsb
push
repz
xchg
add
mov
stos
pop
dec
and
iret
stc
and
pop
and
dec
cmc
ljmp
pop
add
dec
xor
cmp
mov
sbb
push
and
push
xchg
sub
ljmp
mov
and
xchg
cmp
test
imulb
jne
mov
andb
std
stos
jg
dec
rcll
or
out
aas
and
pop
fstpl
and
fisubs
pop
push
xor
inc
adc
loop
icebp
int3
sarb
movsl
jle
stos
mov
jecxz
les
xchg
leave
push
cmp
add
push
mov
xchg
push
popf
ss
push
int3
cmpsb
sbb
aaa
adc
sarl
sbb
aas
iret
out
lret
cmp
and
sbb
popa
jnp
jae
out
scas
pop
and
xchg
jle,pt
roll
and
push
jo
out
inc
adc
pop
mov
add
dec
fisubrl
icebp
pop
cltd
movsl
mov
in
mov
clc
movsb
fldl2t
pusha
jns
daa
and
shrb
mov
and
ljmp
push
pusha
in
cmp
in
sub
and
fmuls
jbe
pop
or
das
jp
mov
movsl
push
mov
add
cmp
mov
inc
push
fisttpl
insb
adc
pop
sbb
or
push
scas
nop
xor
mov
push
and
mov
mov
movsl
sarb
inc
sub
pusha
repz
call
and
pop
pop
nop
and
in
fdivrs
shlb
and
lds
cmp
rorl
bt
push
movsb
mov
ror
arpl
cwtl
scas
stos
sarb
into
or
dec
mov
and
dec
add
stc
imul
sub
xchg
jns
aas
push
mov
and
cs
push
and
into
sub
sbb
xorl
mov
push
jnp
arpl
xchg
scas
and
movsb
push
shlb
cmp
sub
movsb
loop
cmpsb
out
cmp
sbb
imul
pop
push
lahf
xchg
mov
aaa
cmpsb
adc
xchg
mov
popa
xchg
xchg
fidivrl
je
push
or
or
cmp
sbb
fcmovnu
cltd
scas
mov
mov
xor
and
mov
xchg
movsb
adc
xchg
and
mov
inc
mov
gs
enter
and
jb
in
test
insl
das
cwtl
loopne
mov
sbb
cli
and
mov
and
push
mov
and
pushf
and
imul
icebp
test
mov
sub
ljmp
pop
dec
and
add
sti
and
push
jmp
jno
xor
daa
and
ror
fstps
mov
imul
fiaddl
lret
popa
dec
push
fbstp
inc
int3
cltd
jl
add
mov
jne
push
push
gs
adc
xchg
ret
and
xchg
mov
adc
jecxz
adc
test
fstpt
ljmp
or
and
divl
test
xor
mov
popa
sub
cli
xchg
fs
push
and
add
pusha
jge
ret
adc
adc
push
jmp
cmp
adc
dec
jb
gs
xor
xlat
and
fmulp
and
add
pop
cld
movsl
and
mov
inc
and
push
stc
fstpt
sbbl
cmpsb
out
pusha
mov
fsubp
or
pop
mov
xor
fistps
sub
in
pop
lock
inc
mov
mov
jp
mov
sbb
add
pop
jmp
imul
cmp
cli
mov
movsl
out
pop
xor
out
or
adc
mov
mov
psadbw
jmp
fcomip
test
into
ret
add
fistpl
cltd
or
mov
in
push
push
and
xor
lea
push
mov
sahf
mov
mov
rep
or
sub
pop
lods
fnstcw
inc
cltd
sbb
js
je
mov
jns
or
cmp
in
inc
mov
lock
repnz
pop
out
and
add
test
cltd
sub
jb
fcompl
and
push
lret
xlat
mov
movsb
mov
jno
push
inc
pop
and
xor
insb
shlb
cmp
jge
jecxz
bound
lahf
dec
lods
adc
les
jg
push
inc
mulb
dec
lret
mov
int
mov
in
cmpps
fsubrl
addl
jg
xor
xor
and
xor
push
push
and
call
and
nop
xor
mov
fidivs
clc
mov
mov
push
sub
mov
fisubrl
test
movsb
sbb
jmp
dec
fs
ffree
jge
push
repz
inc
xor
push
and
imul
cwtl
cmp
cmc
shlb
xor
pop
pop
or
xchg
fs
inc
sub
dec
mov
ljmp
or
pop
movsl
jmp
jnp
jae
test
push
sbb
in
push
dec
test
and
or
mov
scas
and
ds
add
sub
mov
and
popf
enter
jmp
and
and
movsb
mov
jno
repz
and
enter
xchg
push
popa
jns
mov
cmc
sbbl
add
out
push
das
cmp
push
icebp
les
imul
inc
pop
and
aaa
jecxz
cmp
mov
stos
scas
inc
pop
lahf
push
mov
jge
inc
nop
movsb
xchg
inc
scas
and
fbstp
neg
lret
dec
push
aas
sbb
scas
cwtl
sub
and
loop
rcll
inc
and
inc
stos
jp
shll
and
mov
movsb
jae
sbb
xchg
adc
or
arpl
and
mov
or
lcall
adc
and
int3
imul
pop
ljmp
cmp
xor
iret
and
lea
mov
dec
in
pop
or
out
mov
data16
and
mov
and
fwait
lcall
mov
adc
fidivl
loopne
and
push
mov
cmp
and
cmp
movsb
xchg
pop
cltd
xchg
gs
jge
or
iret
jle
jno
and
stos
lea
adc
sub
pop
call
scas
jge
je
and
adc
sbb
jmp
fbstp
movsl
out
ficoms
sub
in
inc
push
and
push
lods
sbb
insb
and
mov
cmc
sbb
add
and
pop
mov
cmp
dec
jnp
and
fwait
mov
ljmp
mov
jp
imul
leave
cmp
rcll
mov
push
cmc
push
jns
popf
lret
fstl
inc
push
sbb
leave
jl
cmpsb
pushf
inc
cmpsb
outsb
xor
icebp
and
clc
push
and
add
loop
dec
mov
insl
sub
adc
push
jbe
inc
adc
not
das
loope
xor
imul
pop
loopne
mov
push
inc
push
jg
movsl
popf
imul
lock
lods
and
xlat
scas
int
andb
or
xchg
test
movsl
and
rcr
jmp
shll
ja
stc
xchg
xchg
xchg
inc
pop
mov
xorl
sarb
dec
and
iret
cmpsl
scas
lds
ret
pop
mov
sub
inc
shlb
jge
and
xor
pop
inc
in
ret
popf
pushf
jno
xchg
arpl
stos
lahf
mov
imul
adc
arpl
fisubrl
mov
push
xchg
mov
test
test
cmp
xchg
fldenv
lds
add
and
nop
repnz
test
push
lret
rcrl
pop
and
mov
dec
mov
es
sbb
fisubrs
cmc
sub
icebp
test
repz
cmp
sahf
inc
cmp
and
lods
inc
jno
loop
sub
push
adc
mov
xchg
mov
xor
or
or
sub
or
data16
and
dec
xchg
dec
clc
mov
inc
mov
add
lods
loopne
sti
outsl
sub
ja,pn
andl
or
dec
push
adc
cmpsb
das
test
adc
adc
adc
pusha
and
test
sub
inc
mov
je
mov
dec
and
or
or
sub
aas
pop
push
and
movsl
mov
mov
imul
pusha
or
dec
sarb
lahf
iret
arpl
push
jns
jbe
leave
xchg
adc
cmpsl
and
jmp
and
mov
xchg
fucomi
and
sbb
jnp
dec
cmp
push
push
sbb
mov
clc
das
xor
outsl
cmp
lods
dec
ja
call
loope
and
int
insl
mov
lret
dec
and
adc
jle
jo
xchg
push
fs
ret
je
and
xor
subb
jns
clc
cmp
stos
and
mov
lret
loopne
fstps
add
and
xchg
icebp
and
stc
add
movsl
test
push
pushf
push
adc
xchg
xor
push
dec
sbb
add
push
fldenv
je
lcall
bound
and
adc
stos
popa
and
push
arpl
push
push
pushf
and
and
popf
jecxz
loope
xchg
sahf
cmp
cmpsb
nop
mov
sub
or
and
jnp
test
nop
movsb
gs
mov
and
pop
jle
loope
cmp
pop
fucomp
icebp
jg
inc
or
fucompp
mov
into
and
adc
movsl
fisubl
mov
daa
push
movsb
and
cmp
adc
pop
insl
push
and
gs
xchg
and
arpl
sbb
out
and
cmp
in
cld
and
aam
int3
fcomp
into
pop
xor
iret
cmpl
and
dec
addb
in
sbb
arpl
mov
flds
js
idivb
and
shlb
popf
push
lret
ficompl
sub
dec
inc
sbb
icebp
dec
int
pop
mov
cmpsb
pop
inc
cmc
lds
negb
out
bound
dec
sti
pop
sub
es
loop
sub
dec
jp
and
ficompl
sub
add
divl
mov
dec
cli
and
cmp
cmp
jns
scas
data16
loope
sbb
dec
dec
sub
emms
xor
pop
sub
adc
adc
gs
and
jno
pop
mov
or
mov
and
or
hlt
dec
aaa
xor
and
movsl
aam
insl
ficompl
and
cmp
iret
inc
mov
stos
int3
neg
data16
and
push
jmp
dec
rcrl
inc
and
push
mov
mov
xchg
outsl
sub
pop
iret
ss
orb
popa
imul
pop
push
call
cmpsb
ret
sbb
and
je
inc
sub
int3
mov
rcl
mov
and
mov
mov
jge
lock
movsb
movsl
sahf
es
add
adc
sbb
jae
addr16
pop
fwait
and
push
push
push
mov
test
dec
mov
js
test
mov
stc
jns
jmp
dec
mov
push
insl
and
fildll
cmp
xor
mov
pushf
sbb
das
leave
loope
inc
add
nop
mov
push
fcmovu
inc
and
pushf
push
mov
mov
jle
jg
push
and
xlat
xchg
or
sbb
push
sarb
fwait
out
and
cltd
hlt
mov
lods
pop
loop
mov
pop
mov
sub
pop
addr16
std
xor
aam
xchg
ss
sub
mov
mov
mov
push
shlb
mov
jge
ds
and
out
dec
mov
mov
fninit
iret
xchg
stos
movsl
shr
and
sub
cs
add
lea
adc
lea
pop
and
call
inc
test
inc
mov
dec
pop
divl
popa
pushf
sbb
mov
ret
and
adc
cltd
sbb
test
push
xchg
hlt
aaa
mov
add
lahf
cmpsb
aam
pop
in
popa
scas
cmpsb
mov
lret
inc
out
add
jne
xchg
and
fwait
stos
popa
xor
mov
sub
pop
fisubrs
sub
mov
sarb
xor
and
dec
sbb
mov
pop
pop
mov
mov
out
xchg
and
adc
dec
and
xchg
sahf
mov
popa
out
push
not
sbb
loopne
mov
jl
or
xchg
pop
repz
mov
fistps
mov
xor
add
mov
pop
pop
insb
push
sahf
movsl
mov
pop
lcall
shlb
adc
jp
jno
or
and
daa
out
cmpsb
cmpsb
add
outsl
lods
loope
imul
lds
imul
test
mov
inc
add
and
xchg
cmp
cmp
mov
jle
push
or
test
fistpll
mov
dec
in
and
cmc
pop
sub
loope
xor
push
mov
xchg
outsl
and
fldl
jnp
xchg
shrb
add
jno
imul
xchg
lods
mov
mov
mov
xchg
pop
jge
rorl
int
jecxz
pusha
inc
inc
aaa
xchg
mov
daa
mov
mov
movsb
fsub
je
adc
pop
adc
mov
into
sarb
js
xchg
cmc
and
jecxz
mov
insb
pop
jle
push
mov
loope
icebp
imul
fptan
mov
aad
mov
fs
cltd
jnp
and
loope
test
cmc
push
adc
aad
cmp
call
fsub
iret
popa
pop
lods
xchg
adc
das
daa
mov
movsb
sbb
shlb
and
loope
sub
mov
cmp
leave
and
and
and
inc
hlt
jb
xor
sbb
mov
and
cwtl
mov
cmp
ficoml
bound
mov
leave
fcompl
inc
cmp
movsl
sbb
mov
ja
sbb
stos
jge
xor
inc
outsl
and
popa
dec
and
sub
idivl
lock
mov
imul
fstl
and
std
lahf
fistl
adc
jo
imul
cmp
xor
std
movsb
jmp
mov
enter
push
cmp
ja
xchg
mov
sbb
xchg
mov
and
lahf
xlat
test
pop
inc
fldenv
dec
pop
add
outsb
adc
aad
xor
rol
and
fldt
mov
sub
jo
std
sbb
andl
add
add
xchg
or
hlt
imul
std
sti
jns
jl
sbb
xchg
sbb
fwait
aaa
mov
popf
mull
cld
mov
xor
ret
sbb
add
fstpt
pushf
pmaxub
scas
fwait
mov
int3
jns
movsb
gs
es
cmc
and
cs
ljmp
and
sarb
pop
add
or
push
ffree
nop
popf
and
in
iret
and
cmp
and
fcomp
push
and
repnz
pusha
xchg
scas
and
push
xchg
movsb
mov
pop
sti
and
push
cmpsl
mov
add
and
in
jbe
jae
das
test
idiv
mov
dec
sbb
cmpsl
and
pop
fs
sbb
sub
clc
jge
jno
adc
xchg
dec
and
ret
cwtl
mov
and
out
push
inc
and
xor
pop
fsubs
ljmp
inc
mov
fsubr
adc
dec
add
aam
leave
out
lods
cli
in
and
sbb
sbb
pop
jecxz
inc
inc
inc
lahf
pop
enter
mov
push
inc
std
fucomp
dec
or
add
enter
xchg
iret
xchg
rol
xchg
rcrl
and
mov
and
pop
dec
cmp
xor
sub
sub
pop
mov
and
bound
sub
in
xor
pop
insl
mov
scas
dec
adcl
lods
mov
inc
dec
fdivrp
sbb
rcrb
xchg
out
mov
adcl
jbe
push
movsb
fsubr
imul
cmp
xlat
xor
jnp
push
aaa
bound
jno
in
fdivs
and
pushf
pop
push
sub
xor
loop
cmp
and
xorl
push
out
stc
adc
outsl
scas
pop
adc
lea
aam
gs
lea
mov
adc
xchg
cmp
sbb
idivl
mov
xor
mov
popf
sub
and
pop
mov
and
aas
jns
and
xor
cmpsl
popa
push
or
aam
loope
rol
popa
rcrb
lods
sbb
mov
fcomps
inc
mov
jne
fistpl
jg
jb
int
imul
xchg
xchg
repz
and
push
pop
or
loop
cmpsb
xor
insl
jns
lret
inc
jne
adc
lds
push
sbb
popf
jo
andl
iret
jae
inc
icebp
push
sub
jb
cltd
or
cld
dec
jle
and
mov
cmp
push
sub
test
adc
mov
dec
add
xor
out
jmp
inc
lcall
and
mov
cs
in
sub
sahf
stc
movsb
call
sub
and
cltd
and
stc
jg
pop
jecxz
insb
loop
mov
sbb
and
int
lods
mov
pushf
sub
into
insb
push
lcall
sbb
jle
inc
and
lods
lret
pop
and
sub
inc
mov
jl
movsl
popf
xorb
dec
lds
and
outsb
sbb
daa
xor
cmp
pop
call
insl
mulb
negb
daa
loop
jp
aaa
and
dec
dec
test
and
test
mov
or
push
stos
lahf
xchg
pop
mov
mov
aas
sbb
shll
sti
js
and
pusha
fsubl
lret
and
imul
dec
dec
outsb
dec
leave
frstor
jmp
inc
pop
sbb
push
push
pop
pushl
cmp
push
sub
dec
sbb
and
pusha
call
and
jno
loope
adc
cmp
jb
movsb
scas
jnp
xchg
sbb
mov
enter
and
push
jnp
lahf
jbe
rorl
add
mov
lcall
xor
jg
sub
jl
cwtl
loope
dec
and
sbb
xor
shrb
pop
mov
mov
stc
pop
and
mov
inc
xor
inc
stos
and
and
sub
xchg
add
mov
popa
dec
imul
cmp
push
fcmove
addl
sbb
and
bound
push
cmp
in
and
inc
gs
loopne
ficompl
and
cmc
cli
orl
xlat
mov
or
and
cmp
cmp
cmp
std
inc
pop
adc
jl
and
movb
mov
cmpsb
aad
jns
mov
add
movsb
icebp
loope
cltd
push
and
rclb
movsb
push
inc
sub
popa
adc
stos
and
daa
mov
and
push
jge
outsb
out
and
lahf
cmpsb
fbld
iret
dec
add
pop
xchg
gs
sbb
loopne
mov
push
and
add
int3
inc
cmp
popa
repz
and
sbb
sub
and
and
sub
es
and
lods
pop
lods
mov
jmp
cmp
addr16
lret
mov
scas
jo,pt
or
mov
dec
and
movsb
pushf
mov
pop
rorl
popf
test
xchg
lds
ljmp
lcall
xchg
jno
sahf
push
mov
xchg
pop
xchg
out
and
jge
sub
loop
call
xor
dec
or
lahf
stos
fsubl
mov
mov
lds
loopne
and
test
je
sarl
pop
leave
xor
sti
sbb
add
fdivrs
movsl
cmpsb
pop
sbb
and
lods
dec
mov
or
out
movsb
push
sbb
pop
lods
test
ret
into
fisttps
mov
and
jle
insb
stos
rorb
sub
js
loope
push
xchg
push
mov
or
xchg
cmp
adc
sti
sub
pushf
mov
repnz
pop
mov
sbbb
sub
arpl
mov
out
pop
mov
and
call
lcall
std
cltd
inc
lea
and
jecxz
jno
les
or
ljmp
hlt
mov
sbb
popl
pop
and
sub
pop
jp
lods
lret
dec
jle
das
xchg
addr16
js
movsb
pusha
mov
cltd
cld
and
sti
cmp
xlat
imul
and
push
jae
jp
stc
and
daa
popa
mov
xor
and
fsubl
xor
testl
mov
cld
mov
sti
mov
and
jo
jno
and
rcrb
jb
pop
xchg
mov
mov
push
add
jle
test
sbb
xor
or
mov
mov
dec
and
sbb
inc
dec
imull
fsubrs
mov
movsb
jbe
jl
out
imul
xchg
cmp
ja
xor
push
leave
adc
popf
inc
push
mov
or
lret
add
and
outsl
and
push
dec
xchg
inc
xchg
and
ficoms
frstor
cmp
and
jb
mov
and
add
lea
popa
cltd
add
out
rcrl
cmpsb
and
ljmp
enter
xlat
or
mov
scas
mov
add
pop
and
push
and
xchg
sahf
std
jle
out
rcrb
shr
mov
fstps
test
xchg
dec
xchg
lahf
loopne
cmp
mov
pop
dec
mov
je
adcb
pop
lock
data16
movsb
xchg
adc
jne
enter
icebp
cwtl
push
adcb
jns
push
cmp
mov
cmp
cmp
jns
es
mov
mov
jle
ljmp
iret
xor
jae
inc
ljmp
dec
sub
xchg
and
rcrl
loopne
sahf
fidivs
mov
cmp
mov
insl
sub
pushf
repnz
cmp
fildl
mov
loopne
push
mov
fisttpll
and
mov
outsb
or
push
out
sub
sbbl
adc
adcl
and
push
inc
dec
and
fldenv
mov
clc
outsb
dec
idivb
cltd
inc
and
or
mov
into
add
mov
jo
pop
mov
pop
cmc
lock
mov
sahf
enter
nop
jb
ja
in
mov
shl
xchg
pop
ss
push
inc
inc
sbb
inc
dec
jg
and
mov
inc
imul
dec
fimuls
lss
insl
cmp
sub
mov
add
in
shrl
imul
inc
ficoml
xchg
mov
lods
inc
andl
pushf
shlb
or
stos
mov
jno
and
fsts
dec
and
ret
fwait
pop
mov
test
inc
iret
cltd
inc
sbb
add
and
inc
test
les
aam
push
jnp
sbb
mov
push
repz
jo
call
xchg
xor
and
jb
lods
push
and
fxch
xor
pop
repz
pop
sbbl
xchg
push
cli
or
xchg
push
movsb
pop
cwtl
jae
and
insb
in
cmp
or
add
jecxz
mov
sub
aas
pop
and
movsl
mov
or
iret
push
mov
or
cmc
test
dec
sub
and
dec
push
mov
push
cmp
and
repz
dec
cmpsl
adc
push
push
and
sub
popa
pop
fiadds
pop
stc
mov
ss
cld
mov
mov
hlt
pop
test
jbe
jmp
mov
inc
sub
add
xor
inc
sub
dec
and
lds
mov
mov
xor
pop
push
jne
imul
push
add
jbe
mov
cmp
orl
and
lcall
hlt
enter
jbe
mov
dec
cmpsb
pop
and
or
rorl
mov
sbb
jmp
lahf
fimull
lods
xor
mov
popa
shrb
mov
and
cmp
or
test
cmp
and
mov
push
scas
in
fwait
pop
or
and
xor
test
lcall
testl
push
cmpsb
cwtl
movsl
out
hlt
and
cltd
xchg
mov
scas
testb
mov
pop
push
mov
jnp
sbb
and
jmp
adc
ret
add
movsb
or
mov
lods
in
xchg
cmpsl
and
in
mov
pop
pop
hlt
in
mov
nop
clc
shl
fadds
push
sub
and
mov
dec
and
int
stc
and
inc
and
adc
imul
fstps
es
mov
jge
adc
xor
pop
jnp
pop
xor
mov
pop
dec
mov
enter
push
push
dec
andl
jmp
mov
add
xchg
xchg
sub
xor
jmp
dec
lret
mov
jb
mov
sti
mov
in
mov
cmc
ds
cltd
sbb
and
and
mov
jno
fstpl
xchg
dec
and
mov
cld
and
mov
sbb
mov
or
and
ljmp
std
addr16
pop
dec
fsubs
repnz
adc
xchg
testb
add
outsb
mov
cwtl
test
cmpl
mov
sub
fdecstp
and
or
xchg
scas
push
popa
pop
push
and
das
mov
cmp
jl
ljmp
loope
outsl
pop
or
inc
mov
jecxz
loop
test
add
and
and
adc
adc
pop
and
clc
sbb
and
fstpl
in
into
sub
ja
sub
cmp
sbb
pop
icebp
and
fbstp
jmp
adc
mov
push
in
and
lds
and
ficompl
xchg
inc
xor
jg
or
and
int
add
pmovmskb
jge
sub
fs
mov
adc
push
lds
int3
mov
cltd
jno
xor
in
mov
pop
imulb
shrb
jle
xchg
cmp
mulb
jmp
pop
es
dec
xchg
test
sbb
test
iret
imul
enter
fsts
and
xor
xor
cmpsl
fs
pop
add
imul
and
fwait
xchg
lahf
lods
sahf
mov
mov
xor
iret
sub
adc
cmp
push
push
js
andl
lds
add
mov
xchg
jns
bound
ja
inc
push
ret
hlt
cmp
xor
leave
add
pop
inc
in
push
mov
xchg
push
and
mov
jno
enter
adc
out
mov
out
jp
icebp
cs
mov
repnz
in
cmp
leave
pop
mov
out
test
push
lea
daa
cli
movsb
add
xchg
mov
hlt
and
outsb
lcall
xchg
cmp
pop
stos
mov
sbb
loope
jae
or
repz
rorl
js
mov
mov
aaa
mul
fsubs
mov
nop
aam
lcall
out
mov
inc
fdivl
leave
les
das
ficoml
subl
mov
outsl
and
and
cld
mov
pop
xor
add
cltd
repnz
mov
shrb
jae
pop
jl
lods
and
imul
sbb
outsl
and
lods
scas
mov
pop
nop
inc
jo
and
xchg
lahf
popa
aad
shll
clc
or
psubusb
nop
stos
daa
xchg
xchg
dec
je
mov
mov
sbb
xor
pusha
or
xlat
test
stos
push
or
cmpsb
mov
sahf
scas
and
add
popa
dec
push
movsb
xor
xor
add
adc
xor
mov
pushf
push
negl
and
cmp
jno
mov
scas
or
jbe
dec
mov
outsb
iret
mov
xchg
mov
gs
lods
std
pop
xchg
push
movsl
aas
mov
cld
popa
aad
out
sub
mov
and
loop
sub
aaa
cmpsl
mov
imul
test
and
testb
xchg
pusha
inc
pop
xor
xchg
sub
jo
iret
xchg
sub
and
and
roll
mov
insl
imul
jl
adc
sbb
ss
loopne
repz
add
sbb
out
and
push
push
xchg
and
or
pop
mov
test
dec
xchg
xor
mull
loop
or
add
and
cmpsb
repz
mov
xchg
lret
outsl
cwtl
push
lea
dec
mov
and
fstpl
jge
inc
ss
ret
jl
sub
cmp
mov
sbbb
push
pop
mov
push
mov
cmp
lret
and
testb
mov
jbe
push
popf
inc
lahf
ret
stc
sub
rcrb
push
sub
mov
repnz
jbe
arpl
cmpsl
imul
test
pushf
and
scas
shl
out
mov
adc
fists
lahf
dec
arpl
andb
push
out
fldt
lret
lahf
pop
arpl
jge
sbb
add
aam
mov
xorl
rcrl
and
mov
cmpsb
push
sti
cmp
and
sbb
test
and
add
gs
lret
stos
mov
pusha
inc
or
dec
cmp
adc
gs
mov
and
les
pop
cmpb
and
fildll
xchg
aaa
and
and
andl
pop
mov
add
dec
mov
xor
xor
pusha
mov
cwtl
ret
pop
mov
mov
cmpsl
and
out
xlat
ljmp
ds
pop
cmp
and
into
lret
aaa
mov
pop
pop
mov
lods
dec
andl
lea
and
pop
sbb
and
pop
xchg
mov
push
push
cmp
jg
mov
loope
fbstp
jo
xchg
adc
es
js
fnstenv
dec
outsb
into
pop
mov
mov
mov
and
cmp
imul
ficomps
mov
push
iret
test
or
jns
jle
inc
movsb
insb
daa
pop
ljmp
and
lret
inc
lcall
and
shll
test
cmc
popl
pop
add
and
jmp
sbb
roll
sub
mov
dec
jl
xchg
and
add
fdivp
sbb
and
add
subb
xchg
mov
pop
sub
xchg
and
fsubl
insb
inc
jle
inc
les
mov
popf
xchg
or
and
sahf
in
enter
cmc
frstor
add
js
dec
lods
idivb
jne
and
adc
mov
out
push
es
inc
movsb
jmp
inc
int3
fiaddl
and
lods
fsubs
lock
cltd
inc
fnstenv
popa
pop
scas
mov
cmp
push
and
std
aas
inc
mov
aam
xchg
cli
fcom
gs
and
push
lret
or
sti
and
and
xchg
mov
push
mov
jb
sub
mov
xchg
repz
loopne
mov
xor
pop
js
xchg
push
xor
std
mov
adc
lret
arpl
and
dec
int3
aas
sub
push
mov
adc
out
jle
push
hlt
cli
and
cmp
ret
subl
and
into
out
cld
shll
and
add
pop
imul
bndldx
repz
and
adc
xlat
test
jae
xor
icebp
mov
iret
and
hlt
aam
and
les
add
mov
adc
adc
sbb
pop
loop
lods
or
xor
jmp
jmp
inc
sub
fwait
divb
lods
aas
add
fnsave
mov
gs
aam
adc
mov
daa
push
push
adc
pop
push
xor
fwait
mov
xchg
and
and
add
mov
dec
push
jbe
fadds
xchg
in
cmc
and
mov
jecxz
inc
xor
shlb
adc
decb
iret
jge
fldenv
pop
jg
mov
sub
mov
add
xor
adc
push
pop
inc
dec
and
xchg
mov
xchg
sub
cmp
jo
mov
popa
ret
push
and
les
inc
push
push
mov
sbb
sbb
pop
sub
inc
cmp
jecxz
iret
fdivl
dec
mulb
sbb
sub
stos
test
and
pop
mov
xchg
sbb
icebp
push
rclb
xor
inc
insb
push
imul
mov
es
inc
cli
fcmovne
xchg
aaa
jo
dec
pushf
lret
mov
or
pushf
mov
sub
in
xchg
and
sub
int
fucom
popf
cltd
test
popf
mov
xchg
mov
les
and
aad
pop
lret
popa
and
fbstp
in
cmp
mov
cltd
aas
inc
cld
rorl
lahf
mov
and
rcll
gs
shlb
int
lods
push
pop
out
in
addl
mov
mov
dec
push
jbe
or
popf
or
enter
dec
clc
sbb
cmp
xchg
or
inc
test
inc
lock
out
ss
push
mov
bound
adc
je
jns
lds
aam
popf
jno
pop
sbb
xor
and
bound
fbld
out
xchg
inc
xor
popl
shrb
std
and
mov
mull
and
test
pop
jo
add
enter
scas
in
movsb
and
dec
jle
mov
ja
xchg
jno
mov
lcall
jns
mov
or
lcall
jle
dec
push
cli
and
xor
icebp
xor
xchg
mov
sub
mov
dec
push
lods
cmpsb
mov
cmp
cmp
sahf
inc
cld
xchg
push
jge
mov
cmp
or
or
sbb
add
add
enter
jp
xchg
repz
xchg
std
or
cmp
xor
out
pop
pusha
and
adc
dec
mov
cs
and
aad
popa
test
fs
stc
sub
pop
and
push
lahf
cmp
out
inc
pop
ret
and
jp
dec
fwait
dec
je
movsb
cmp
xor
pop
xchg
arpl
cltd
mov
push
sbbb
int3
dec
cmp
rclb
cmc
into
xor
pop
add
dec
sub
and
sub
iret
sub
inc
repz
dec
test
ficoml
out
jno
les
insl
fstps
and
jne
lock
xor
add
jle
or
aas
iret
xchg
imul
test
sub
rclb
xorl
fisubrl
adc
pop
and
stos
mov
lahf
outsb
xchg
ja
fisttpll
pushf
movsb
add
mov
inc
test
ljmp
add
add
mov
aaa
daa
pop
inc
das
mov
adc
mov
cli
xchg
and
sti
push
sub
call
cmpsb
or
mov
outsl
sbb
mov
xchg
or
icebp
or
sahf
scas
fsubrs
lret
orl
mov
and
and
inc
cvtps2pi
pop
daa
adc
adcb
sbb
xor
dec
and
mov
loopne
aas
xor
pop
jnp
and
xor
mov
and
inc
mov
mov
mov
stos
adc
pusha
icebp
mov
push
out
push
add
stos
pop
push
dec
into
jp
jbe
inc
jb
cmp
add
xchg
pop
xor
push
inc
jecxz
and
pop
push
outsl
lods
stos
pop
stc
and
cmpsb
lcall
test
cmpsl
mov
loop
ffreep
and
mov
add
imul
push
and
std
popf
mov
sub
adc
jns
and
sbb
pushf
insb
neg
sarl
xchg
ljmp
or
and
std
cltd
sub
out
adc
mov
popl
shrl
out
inc
pop
jmp
cmp
and
pop
and
std
sbbl
loopne
jns
lcall
movsl
aas
imul
sbb
pop
out
lods
xor
cmp
sbb
push
jne
xor
push
and
loope
dec
iret
popa
les
test
push
add
aad
lea
xchg
addr16
lret
mov
dec
and
and
mov
lods
shlb
jecxz
and
xchg
insb
adc
popa
xor
outsl
jl
sbb
icebp
repz
sbbl
push
and
jnp
and
fsubl
xchg
dec
arpl
pop
ficoml
mov
xchg
call
ret
jo
and
and
sub
mov
test
jg
mov
pusha
scas
mov
jnp
scas
leave
push
in
or
adc
test
inc
iret
bound
mov
and
js
xor
aaa
and
xchg
icebp
and
lret
and
mov
sub
jno
and
movsl
mov
test
ficoms
cmpsl
pop
test
add
imul
jbe
xchg
cmpsb
adc
movsl
inc
jle
cmc
adc
and
shrb
or
and
mov
cmpsb
cli
andl
test
insb
xchg
push
pop
sub
insl
daa
nop
and
pop
xorl
add
xor
and
fisttpl
mov
loopne
mov
mov
dec
mov
stos
sbb
and
sahf
mov
or
std
jmp
mov
repnz
sub
sahf
push
mov
nop
movsb
adc
out
cmp
ss
or
cs
popa
data16
popf
push
lods
and
xchg
clc
int3
lods
pop
fidivrl
call
mov
addr16
clc
hlt
pop
and
sti
add
mov
xorl
ljmp
mov
clc
sub
sbb
scas
testl
mov
add
mov
xor
addr16
out
lods
dec
fbld
and
sbb
fcompl
inc
nop
mov
xor
movsb
call
cmp
dec
mov
nop
cli
jecxz
and
mul
int
movsb
loope
fldt
cmc
and
fidivs
aas
sub
dec
iret
mov
pop
xchg
xchg
xchg
sahf
cmp
and
shrd
and
les
and
inc
into
inc
inc
mov
mov
mov
xchg
rcrl
movl
jae
xor
loop
pop
sbb
mov
std
and
cmc
outsb
jne
xchg
loope
mov
sub
xor
xchg
and
or
push
mov
insl
dec
arpl
movsl
sbb
jo
popf
cld
and
or
push
jne
mov
popa
xchg
pop
mov
js
xor
xchg
aaa
mov
sbb
test
and
adc
mov
add
mov
cmp
push
mov
add
push
adc
popa
xlat
mov
dec
adc
loope
orl
sar
mov
leave
push
sbb
xlat
cmp
sub
je
ret
ja
mov
sub
cmp
fcomps
in
push
sub
movsl
xor
or
loope
ss
lret
xor
dec
adc
dec
sti
xchg
sbb
movsb
push
fidivs
jge
adc
jl
and
push
sub
and
xchg
push
stos
xor
and
pushf
sub
pop
inc
fisubs
std
push
inc
in
andl
jecxz
scas
pop
jno
xlat
pop
sub
mov
inc
xchg
sub
pop
sub
and
arpl
bswap
xlat
add
aad
mov
outsl
cwtl
mov
jp
jne
enter
test
mov
add
or
jae
and
and
test
lods
push
out
mov
mov
jge
xchg
cmpsb
and
xor
je
cmpsl
aaa
xor
lock
push
xor
cltd
push
rcrb
xor
mov
cmpsb
pusha
imul
sar
iret
inc
push
sahf
hlt
and
dec
sub
jo
or
ljmp
loop
frstor
xorl
mov
scas
jae
int
icebp
sahf
ss
xchg
pop
pop
js
inc
addr16
sahf
cmc
and
stc
pop
xor
daa
test
dec
mov
xor
push
out
popf
jp
pusha
cltd
mov
jecxz
sub
push
push
jmp
rcl
sbb
xchg
push
inc
xorb
adc
pop
das
rclb
inc
in
cmp
lcall
mov
mov
xchg
xor
mov
or
and
pop
loop
adc
push
mov
mov
setns
ja
or
movsl
test
nop
mov
xchg
leave
and
out
ja
dec
and
and
inc
jo
dec
fsubrl
sub
cmp
xchg
jae
in
mov
repz
xchg
push
outsb
sbb
test
adc
and
sbb
lds
aam
fwait
out
jge
cli
sub
adc
mov
push
mov
and
insb
cmc
jae
mov
std
sub
leave
cmp
add
xor
loop
xchg
and
pusha
sub
movb
push
and
jnp
mov
inc
or
cmp
mov
mov
sub
lret
pop
mov
push
inc
add
jl
xchg
out
cli
and
jnp
jb
pop
or
movsl
xchg
ss
inc
add
jae
stc
adc
push
or
sub
dec
and
jo
pushf
mov
inc
and
and
std
pop
mov
js
mov
adc
mov
fstpt
jne
pop
fsts
pop
and
hlt
out
mov
push
pop
and
inc
mov
dec
movsb
xchg
add
mulb
mov
pop
fst
fidivrl
sub
bnd
push
sbb
cwtl
sbb
adc
push
in
xlat
adc
je
mov
insl
testb
loop
shll
jp
fsubl
pusha
mov
push
imul
lods
outsl
ret
mov
inc
test
mov
and
pop
dec
inc
cwtl
dec
cmp
and
xor
jecxz
sub
rolb
and
xor
gs
mov
dec
cmpsb
and
and
stos
dec
jecxz
ret
jns
inc
push
subl
imul
sarb
jmp
and
outsb
scas
movsb
inc
adc
xor
pop
mov
nop
mov
xchg
adc
pop
scas
cmpsl
and
inc
lods
jno
aas
call
int3
daa
pop
xchg
dec
push
popf
out
cmpsb
adc
push
inc
cmpsl
dec
lret
test
mov
cltd
xor
or
inc
sub
loope
and
aas
xor
test
jb
and
inc
sub
scas
and
push
adc
jmp
in
ss
imul
fstps
mov
enter
jae
adc
or
or
lods
insb
mov
sub
mov
lods
mov
mov
bound
cli
daa
jge
and
jmp
dec
in
fists
cltd
xor
dec
and
jecxz
xchg
cmp
das
lret
sub
mov
mov
adc
push
fstpl
cltd
mov
mov
aam
inc
push
dec
or
imul
shrb
mov
cmp
mov
in
stos
adc
xor
dec
and
fcmovu
sub
sub
or
and
xor
pushf
jle
push
insb
xlat
arpl
and
ds
and
jmp
cmp
jns
pop
xchg
xor
or
push
loop
mov
fcoms
stos
cmpsl
and
push
mov
xor
pusha
daa
pop
add
aam
cmp
inc
pop
mov
mov
push
dec
jno
cmp
xchg
and
sbb
mov
adc
insl
jmp
and
mov
and
fcoms
xchg
addr16
jne
out
loop
sub
jo
sbb
push
jbe
arpl
lods
adc
adc
aad
xor
gs
mov
and
inc
das
or
pop
adc
mov
cli
jne
sbb
push
push
adc
xorb
in
sbb
jns
fsubs
inc
xchg
sbb
ss
mov
popf
ds
stc
jne
popa
cwtl
pushf
adc
dec
dec
xchg
inc
cs
mov
add
lret
das
push
cltd
movsl
pop
mov
pop
inc
out
daa
sbb
jno
xchg
ficoml
or
ficoms
mov
push
cltd
pop
xor
arpl
dec
jno
sbb
jne
sub
and
mov
arpl
cli
mov
adc
shrl
push
inc
aas
jne
and
mov
sbb
mov
mov
imul
aam
push
jecxz
or
subl
pop
fidivrl
jbe
xchg
pusha
or
and
stos
add
cltd
int3
hlt
add
outsl
add
push
and
add
pop
and
and
sbb
test
inc
repz
xchg
or
movsb
pushf
sub
adc
js
adcb
shll
mov
movsw
clc
out
or
in
jo
in
mov
dec
sbb
jno
push
inc
stos
frstor
popf
in
lcall
jecxz
insb
mov
and
add
ss
pop
xchg
and
or
inc
and
mov
shll
shr
xor
dec
cld
lock
push
stos
and
add
mov
imul
pop
mov
ds
andl
leave
popa
inc
or
popa
mov
xchg
mov
movsb
mov
rcll
scas
repnz
hlt
and
movsb
or
sbb
jns
into
jmp
and
test
frstor
out
hlt
mov
psrld
das
ljmp
arpl
jb
xchg
and
bnd
movsl
push
sub
in
movsb
and
jmp
jns
mov
adc
or
addr16
insl
and
cmp
inc
push
xor
clc
adc
movsb
pop
dec
into
xchg
sbb
pushf
out
mov
and
fistl
push
mov
orl
mov
sahf
repnz
inc
add
mov
fcompl
aad
lea
test
mov
pusha
incl
dec
dec
sti
dec
mov
pshufw
pop
and
add
and
outsl
cltd
in
add
int
dec
jle
lds
xor
xchg
arpl
cld
dec
mov
bound
mov
pop
jns
mov
popf
dec
add
jnp
push
mov
lds
mov
fildl
fwait
pop
or
fsubs
lods
in
loope
test
inc
stc
ljmp
jo
adc
aaa
jno
std
and
adc
pushf
cld
out
push
mov
and
mov
sub
jno
sahf
cmp
popa
xchg
sbb
push
pop
cmp
jne
xchg
popa
xor
das
xchg
jbe
pop
pop
cs
adc
and
and
and
sub
in
mov
and
xchg
fstl
les
push
pop
stos
cld
lret
fcmovnb
pop
dec
and
scas
mov
mov
int3
dec
add
iret
mov
mov
cltd
cmp
xchg
and
push
addr16
inc
subl
xchg
aad
movsl
and
test
test
and
outsl
or
leave
popa
mov
fbstp
jg
loope
test
and
xchg
outsb
pop
test
jns
mov
shrb
push
out
and
cmpsb
lcall
sbb
add
insb
fs
sub
stc
ret
sarb
sub
les
mov
xchg
das
mov
mov
sahf
and
loopne
sbb
ss
add
mov
sub
mov
xchg
or
jae
and
scas
push
xchg
xchg
cli
and
lds
out
and
outsl
outsb
lret
or
and
mov
xlat
insl
cld
pop
out
sub
xor
and
push
xor
and
mov
or
js
and
jae
push
and
pop
cmpsl
testl
ss
and
jg
or
push
pop
push
repz
cmpsl
pusha
pop
mov
sub
adc
stos
mov
push
cltd
and
frstor
test
cwtl
dec
pop
mov
push
scas
xchg
cmpl
xchg
std
xchg
sub
movsb
pop
sub
and
movsl
aad
cmp
mov
xor
jle
xor
sti
lea
mov
popa
call
mov
iret
and
sub
cmp
pop
sbb
shlb
mov
inc
and
test
pop
pushf
in
lock
fwait
pop
notl
test
popf
mov
jae
dec
add
xchg
fidivl
stc
arpl
add
xchg
popf
repz
and
mov
or
and
cmp
jo
mov
mov
inc
jecxz
xchg
outsl
sub
sub
cmp
sbbl
and
adc
aas
js
jecxz
shlb
movsl
cmp
xor
and
adc
mov
ret
mov
das
repz
or
sub
xchg
pusha
aaa
and
jl
mov
and
flds
rorl
out
xchg
mov
sbb
add
insl
and
jo
adc
fdivrp
popa
stos
inc
or
push
push
xor
aas
dec
push
adc
xor
fucomip
and
daa
imul
test
jl
gs
loope
addl
sti
push
mov
mov
mov
jecxz
jne
and
xchg
xchg
or
sub
lods
jae
and
and
imul
and
inc
inc
fisubrs
shlb
cmpsb
icebp
fsub
pop
mov
cmp
sbb
and
mov
cmpsb
pop
adc
and
push
mov
lahf
jns
mov
in
adc
add
and
sbb
fisubs
or
and
mov
call
xchg
adc
and
jb
lds
push
stos
in
cltd
out
inc
pop
loopne
mov
mov
cli
mov
xorl
sahf
or
and
jno
scas
pop
mov
dec
loop
push
cmpl
test
daa
mov
fildl
mov
mov
xchg
pop
insb
pop
and
lcall
mov
cmp
inc
xchg
or
test
imul
or
mov
xchg
mov
jb
dec
rcl
shll
sbb
subb
sahf
and
mov
gs
mov
inc
fwait
push
jns
mov
je
lods
test
and
fstl
xchg
aad
sahf
cmpb
mov
scas
push
xchg
add
pusha
or
loope
mov
sub
mov
out
cltd
fcmovnbe
mov
aad
insl
cmp
aas
test
popa
cwtl
xchg
popa
movsb
lret
fnstcw
inc
adc
stc
mov
scas
and
daa
fidivrl
adc
fldenv
mov
jno
fimuls
aam
jge
into
sub
cmp
mov
lds
and
movsl
loope
xor
orb
xchg
sti
mov
dec
xchg
addl
cmp
fwait
jmp
jnp
aam
pop
xchg
push
cmc
jle
mov
push
and
mov
jecxz
inc
xlat
mov
rcll
inc
mov
bound
xchg
arpl
mov
ja
enter
adc
and
dec
movsl
daa
stc
outsb
pop
aad
xlat
sahf
mov
xchg
lods
xchg
fs
or
and
push
pop
inc
sbb
cld
add
in
movsb
ljmp
popa
mov
mov
dec
pop
sub
xchg
addl
add
xchg
in
mov
push
adc
and
fadd
jecxz
mov
sub
cltd
jl
pop
dec
and
mov
das
out
inc
jo
mov
mov
js
mov
and
imul
fisttps
fcompl
mov
push
xchg
call
mov
inc
movsl
les
pop
lock
faddl
dec
push
pop
movsb
jg
pop
xor
scas
push
lcall
push
test
jbe
pop
jp
inc
inc
lahf
xchg
mov
adc
lods
std
ljmp
movsb
pusha
dec
push
notb
aas
inc
add
andl
and
mov
lods
mov
test
jb
pushf
add
cmp
std
push
pop
pop
test
lods
sbb
int
xor
and
lock
sub
inc
test
out
xor
sbb
and
mov
inc
das
xor
dec
mov
in
sbb
lret
xor
repnz
xchg
testb
mov
cltd
mov
and
mov
insb
mov
out
test
push
inc
cltd
mov
lods
movsl
outsl
cmp
movsb
in
out
movsl
fldt
jle
sub
popa
in
int3
inc
pop
pop
lock
lcall
and
aam
cltd
test
xchg
enter
shlb
xor
cmp
push
ds
sbb
xchg
dec
sti
and
jnp
push
jb
repz
xor
movsl
mov
sub
push
jbe
dec
jns
rol
and
aam
lods
stc
mov
fs
ror
push
inc
and
nop
frstor
inc
adc
shll
mov
daa
mov
pop
push
fdivrl
cmp
ja
mov
aas
aas
mov
mov
adcl
jbe
jns
lock
xor
and
aaa
push
mov
into
mov
fsubrs
sbb
shrb
mov
jle
and
mov
scas
cmp
jg
mov
mov
sarb
sub
scas
and
imul
shll
mov
and
adc
das
jbe
xor
outsb
frstor
pusha
out
je
push
movsb
jnp
pop
nop
mov
or
test
popa
rolb
mov
aas
lea
and
data16
aad
mov
movsb
push
lods
int3
fldt
and
sub
mov
fimuls
and
push
cmp
sbb
nop
insl
xchg
adc
xor
adc
dec
loop
gs
xchg
adc
and
pop
mul
ljmp
mov
mov
orl
out
out
and
repz
pushl
mov
out
push
adc
dec
and
cmpsl
cmp
ljmp
repz
lods
xor
fisttps
and
outsl
dec
push
and
movsb
out
stos
test
push
dec
js
cmpsb
lods
and
jmp
pop
fildll
xor
bound
icebp
or
leave
jmp
andb
jae
xor
cs
and
cwtl
xor
sub
mov
xchg
xchg
ss
icebp
xchg
test
push
and
inc
imulb
dec
push
stos
mov
insl
popl
std
sahf
and
pop
imul
lret
xchg
stos
jno
dec
xor
sti
pop
dec
cmp
adc
adc
and
sbbl
dec
sub
arpl
xor
mov
push
inc
dec
and
fisubs
pop
out
iret
xchg
movsl
inc
mov
addr16
cmp
xchg
jmp
arpl
jno
insb
std
stc
or
sub
iret
pop
cmp
movsb
loop
xchg
add
aaa
inc
flds
ja
xor
enter
test
cmp
repnz
inc
andb
dec
test
sub
cltd
and
fnstenv
test
mov
pusha
mov
jecxz
mov
sbb
and
sub
jnp
ss
push
mov
mov
mov
nop
push
xchg
cvtps2pi
es
mov
pop
pop
flds
loop
call
andb
xchg
or
sub
clc
mov
inc
mov
jnp
popf
or
arpl
pop
xchg
sbb
push
push
aaa
mov
jl
rclb
cltd
stos
fsubrl
and
jne
in
and
push
dec
mulb
push
inc
fwait
scas
xor
xchg
jb
mov
and
imul
into
jnp
cmp
xchg
popa
fsubrl
jmp
lods
xchg
int3
fsubl
and
lock
mov
and
jo
popf
in
xor
std
dec
mov
pop
and
scas
adc
es
xchg
mov
and
mov
ss
sbb
and
inc
push
sub
out
and
leave
test
xlat
add
pop
xchg
push
sub
and
mov
xchg
dec
cmp
lea
cmp
test
aad
icebp
cmc
push
popa
popf
loope
mov
lret
gs
xchg
mov
pop
and
xchg
movsb
imul
mov
sahf
pop
pop
dec
std
and
or
fildll
int3
and
aas
bnd
push
mov
mov
inc
mov
and
loope
stos
andl
inc
push
insl
xchg
pop
sbb
and
add
mov
into
das
add
dec
sbb
out
imul
add
and
lret
add
sub
pop
sbb
pop
push
push
js
sti
test
scas
cmp
push
pop
mov
add
mov
sub
mov
pusha
nop
es
popa
sbbl
into
shlb
ja
test
jle
cmp
test
loop
je
cmp
mov
cmp
or
push
add
test
and
push
inc
xchg
xor
and
adc
aad
pop
xchg
imul
fs
stc
and
and
movsb
or
mov
and
cmc
pop
dec
push
imul
sbb
in
sbb
mov
pop
pop
and
cmp
and
rcl
loop
xchg
mov
push
jge
xor
dec
addr16
mov
push
aam
mov
inc
mov
and
sub
cmp
mov
popf
jmp
mov
in
dec
addr16
jbe
das
pop
mov
pop
int
cli
pushf
or
fsubl
ss
sub
push
and
and
inc
out
jno
loopne
sub
dec
fiaddl
sub
repnz
das
adc
ds
cmp
popa
ror
arpl
and
sbb
pusha
int3
fistpll
inc
xchg
xor
dec
or
xchg
jg
movb
mov
jge
icebp
dec
cwtl
test
jp
lahf
sub
cmp
mov
inc
xchg
addl
xchg
cld
popa
ds
data16
ret
pop
lock
push
cltd
movsb
sub
xor
pushf
popa
xor
test
jmp
sbb
icebp
pop
mov
and
ret
cli
inc
daa
call
insb
jbe
js
push
addl
into
xlat
push
loope
shll
sub
aas
ss
shlb
adc
inc
js
xor
call
pop
aas
jb,pt
inc
std
int
push
dec
loop
pop
and
jl
ret
mov
push
sbb
addr16
pop
insl
sub
adc
fisttpll
sti
decl
jno
and
jns
mov
mov
addr16
aas
imul
jnp
and
mov
inc
jp
or
mov
cmp
movsb
and
imul
inc
out
int
pop
and
out
hlt
mov
xorb
imul
push
or
inc
add
fwait
push
or
dec
dec
add
ljmp
call
push
std
inc
filds
fcmovu
pop
add
and
movsb
jne
sahf
das
sub
fcompp
dec
adc
mov
lahf
daa
scas
xchg
bound
sar
and
push
mov
pop
jnp
inc
popf
movsb
and
sbb
push
sub
mov
xor
scas
lods
lret
and
bound
or
jl
mov
xchg
fisubrs
and
xchg
imul
test
lock
xchg
sti
fmull
xlat
and
ret
push
adc
push
fsts
lods
and
movsl
pop
and
mov
pop
call
flds
jb
push
xor
and
mov
cwtl
loopne
lea
mov
mov
mov
hlt
and
ffreep
mov
imul
loopne
aas
jne
int3
cmpsl
shrb
sahf
cmpsb
pushf
adc
imul
mov
fs
lcall
mov
inc
insl
test
lds
test
and
ret
xchg
mov
jle
xchg
ds
xor
xchg
stc
xor
adcl
loop
xchg
cltd
pusha
dec
sbb
add
imul
jne
jo
and
mov
xchg
mov
outsl
aam
push
sbb
sbb
pushf
adc
fistps
cmp
out
stc
and
in
aam
sbb
push
push
cmp
mov
ja
mov
cmp
xor
add
scas
and
push
mov
cltd
add
pop
es
dec
cmp
xchg
mov
aaa
mov
mov
les
popf
xchg
xor
je
cmp
dec
push
test
cld
add
inc
loope
and
sbb
sbb
jne
sub
and
mov
and
loop
mov
push
mov
out
call
pop
and
arpl
mov
sbb
insb
rcrb
mov
das
cwtl
and
in
mov
and
mov
jp
mov
and
adc
movsb
jg
lods
xchg
popa
test
xor
xor
test
idiv
pop
jecxz
sub
mov
cmp
pop
out
and
pop
daa
xor
and
cmp
adc
lret
xchg
ja
jne
push
xor
movsb
addr16
mull
jns
sahf
jmp
inc
fists
jecxz
out
in
repnz
lret
insb
xchg
push
jae
xor
cmpsl
or
inc
and
cli
sbbl
jb
and
cmp
xor
inc
mov
jmp
pop
popa
jmp
xor
dec
pusha
xchg
add
test
cwtl
ja
and
jo
ret
pop
pop
jne
pop
mov
jecxz
and
lahf
cltd
imul
or
xchg
popa
mov
xor
sub
popa
jno
test
xchg
mov
bound
jae
pop
xlat
and
pop
mov
inc
ss
iret
mov
xchg
mov
pop
adc
mov
xor
out
and
fwait
js
xlat
lret
enter
pushf
and
in
ljmp
mov
std
imul
sbb
in
les
xchg
loop
inc
xor
xchg
and
pop
add
movsl
and
mov
in
jbe
and
notb
in
test
lret
push
imul
andb
mov
pop
setne
ljmp
and
int3
sbb
xchg
sub
cmp
sbb
jg,pt
and
dec
movsb
sti
mov
frstor
sub
pop
pop
and
negl
lcall
pop
cmp
bound
addl
iret
ret
add
dec
xor
mov
push
fbld
xor
or
and
jne
adc
mov
xchg
xor
popa
xchg
and
add
test
das
xchg
in
xchg
outsl
jno
push
and
out
cwtl
lret
and
sbbl
sub
loop
jmp
scas
arpl
call
das
add
call
imul
pop
xor
hlt
shlb
popf
out
in
push
loopnew
mov
or
pop
popa
push
mov
and
sub
pop
test
xchg
outsb
sbb
sbb
shll
leave
xor
daa
fdivl
pushf
mov
and
lcall
mov
std
fwait
sbb
lds
out
pcmpgtw
lods
inc
xor
jge
and
xchg
jle
sbb
movsb
inc
dec
sbb
cli
subl
pushf
ljmp
dec
adc
and
mov
nop
and
push
outsl
insl
das
and
xchg
xchg
pusha
jp
ljmp
daa
loopne
jle
pop
mov
mov
push
int
push
fsubrs
popa
ret
js
sub
sbb
inc
mov
sub
jg
test
popa
lcall
fildll
aaa
lea
rcll
jecxz
ficoml
std
xchg
sti
or
pop
push
and
push
test
int3
mov
fwait
stos
clc
ja
push
outsl
jl
mov
jne
sbb
in
push
mov
insb
mov
pop
and
cmp
pop
jg
adc
icebp
cmp
fbstp
cmp
popa
push
and
sti
lret
pushf
cmp
fisubrs
cmpsb
test
jae
or
arpl
aam
sahf
aaa
test
add
mov
xor
repnz
mov
leave
outsl
call
andb
mov
dec
cmp
and
test
rcll
xchg
mov
mov
js
cltd
sub
dec
lahf
inc
mov
push
push
loop
and
ret
sbb
andl
sub
and
fwait
outsl
lahf
dec
xchg
mov
pop
push
and
push
pop
pop
std
mov
mov
xchg
fimull
gs
test
adc
cmp
lar
cli
ja
xor
inc
lcall
mov
pop
in
inc
fwait
shl
test
loope
popf
and
adc
push
mov
lods
jl
mov
lds
icebp
mov
lcall
inc
shlb
stos
lods
dec
fnstenv
push
jmp
scas
adc
adc
mov
xchg
fldl
xor
mov
roll
es
xorb
inc
jb
mov
call
xrelease
sub
pop
aaa
iret
mov
fcomps
icebp
push
and
adc
je
lret
mov
movsl
aaa
addr16
sbb
pop
xchg
dec
and
jae
in
movsl
lret
and
faddl
dec
out
loope
cmp
push
inc
ret
shll
pop
cmp
xchg
add
popf
mov
cli
pop
xor
and
cs
dec
daa
mov
das
rcrb
ja
adc
cli
add
jge
popf
push
mov
iret
pop
and
inc
jbe
lcall
das
sti
fs
cltd
stos
push
pop
add
dec
in
xchg
push
mov
cmpsb
repz
push
ljmp
pop
fisubrs
daa
and
nop
lahf
faddl
fmul
pop
das
cmpb
clc
lock
and
xchg
pop
sub
fs
or
jecxz
cmp
es
mov
push
and
lods
ss
gs
mov
mov
jp
jne
push
mov
mov
mov
popa
inc
and
adc
or
mov
mov
in
fcom
add
inc
mov
sbb
gs
shlb
lret
lret
dec
out
addr16
and
pop
scas
scas
cmpl
and
int
nop
test
mov
xchg
andb
and
dec
sbb
jno
and
enter
inc
jmp
and
mov
jo
xchg
inc
insl
xchg
and
clc
orl
lahf
adc
ljmp
mov
repz
and
or
and
xchg
adc
fs
das
and
out
push
lea
sti
xchg
repz
xor
int3
adc
adc
and
jge
push
mov
pop
loopne
sbb
cmp
xchg
shrl
mov
fisubl
add
add
pusha
sub
test
and
addr16
dec
fwait
mov
fdivl
xchg
and
and
jp
dec
or
push
xchg
addl
aam
pop
iret
and
dec
cmp
lods
ds
shlb
xchg
cmp
sub
and
push
xor
mov
mov
hlt
pop
outsl
xlat
scas
dec
inc
and
pop
enter
stc
push
mov
lahf
ja
mov
xchg
and
pop
lret
mov
and
fimull
iret
pop
xor
nop
mov
inc
push
xor
into
and
and
pushl
das
fcoml
and
push
lahf
cmpsl
push
xchg
push
mov
cmp
xchg
push
movsl
packuswb
and
and
sub
lcall
mov
jge
icebp
ret
mov
pop
xchg
pop
push
in
cmpsb
movsb
add
sub
or
xor
adc
cmp
pop
movsb
test
adc
pop
repnz
push
int3
dec
xchg
mov
mov
add
sub
adc
bound
inc
loop
and
mov
lods
fistpl
sub
leave
push
stos
and
movsl
or
fstps
lds
and
dec
cmp
and
sti
enter
jnp
or
outsb
fadds
adc
cmp
orl
push
and
push
mov
test
popf
mov
and
leave
add
and
cs
xchg
mov
inc
xchg
and
call
test
jecxz
sahf
arpl
adc
xor
jmp
jge
sar
mov
stos
lods
lret
inc
xchg
mov
mov
push
and
inc
xchg
das
add
lock
add
push
dec
insb
stos
lret
xchg
xchg
cwtl
sbb
add
outsl
clc
push
sar
popa
push
int
cltd
or
andb
jne
mov
test
lods
test
imul
and
jmp
clc
insl
mov
dec
push
mov
adc
and
jle
pop
hlt
sub
mov
cmpsb
or
and
push
push
sbbl
mov
push
inc
ss
and
and
pop
pushf
out
in
sub
sahf
mov
xchg
aas
mov
and
push
repnz
orl
xchg
stc
ljmp
imul
sub
mov
rolb
mov
mov
xchg
stos
movsb
mov
mov
jg
insl
xchg
xchg
xchg
adc
jbe
jecxz
push
gs
nop
fsubl
sbb
in
lahf
shlb
scas
sub
and
gs
shlb
jle
in
dec
dec
cmp
xor
dec
les
inc
mov
push
mov
push
scas
jne
dec
shlb
iret
jmp
cmp
ret
aaa
xchg
decl
fiadds
inc
popf
and
mov
xchg
mov
test
cmp
mov
stos
outsl
popf
gs
mov
push
daa
xchg
imul
mov
loopne
std
dec
inc
jo
lods
and
out
pushf
sbbl
and
and
lahf
sub
rcrl
push
int3
mov
lret
stc
loope
aas
data16
push
ljmp
aas
push
adc
push
daa
nop
out
push
lods
sbb
data16
cld
lcall
push
fbstp
out
push
loopne
test
daa
lock
sub
xchg
sahf
push
cltd
dec
lret
and
xor
popa
jg
jecxz
jno
test
mov
and
dec
jnp
repnz
test
mul
jno
sbb
jge
pop
or
imul
mov
add
scas
push
lds
jge
loop
sbb
js
and
pop
cmp
pop
cmpsb
repnz
mov
lcall
xchg
pop
and
in
das
push
dec
sub
ret
addb
jbe
negb
jne
dec
aas
test
jo
xchg
xlat
dec
push
sub
popa
lret
mov
ret
mov
rcrb
ret
fsubl
pop
dec
mov
adc
jmp
testb
and
outsl
out
adc
lcall
cmp
mov
jbe
and
xor
add
pop
jge,pt
mov
leave
push
jp
cmp
lods
jmp
adc
inc
jmp
fnsave
and
in
jle
es
loope
std
mov
and
outsb
jmp
and
in
lcall
inc
mov
adc
adc
and
mov
outsl
cmp
movsb
push
out
xor
fldenv
xchg
sbb
mov
sbb
dec
js
and
dec
fcompl
sbbb
sbb
mov
mov
and
fldenv
pop
cmpl
or
dec
and
orl
movsb
xchg
xchg
mov
mov
jp
fwait
dec
popf
and
ret
jns
and
sahf
xchg
test
dec
dec
fisubl
or
xorb
stc
movsb
and
je
adc
mov
cmpl
push
and
jmp
cmp
popa
std
mov
push
movsb
inc
cld
out
sbb
call
add
out
dec
dec
mov
pop
hlt
insb
and
test
add
cs
inc
ja
in
mov
mov
mov
pop
pop
js
insl
and
pop
dec
insb
ds
les
xor
and
mov
outsb
or
sahf
xchg
and
push
out
push
scas
sbb
xchg
popa
lret
stc
or
sub
cmp
popa
cmp
cli
daa
sub
loope
test
mov
jmp
xchg
sbb
popa
fcoms
inc
movsl
mov
test
and
shlb
and
imul
lea
add
sbb
popa
xchg
mov
lret
fisttps
adc
and
loop
adc
dec
jg
xchg
and
xchg
ret
enter
push
and
lret
inc
loopne
dec
and
sbbl
jne,pt
mov
and
adc
stos
cmp
pop
jge
loope
je
mov
fadds
push
pusha
sub
aam
push
jg
repz
test
jecxz
adc
mov
ja
fcoml
or
xchg
pop
adc
bswap
outsl
push
shr
add
jecxz
ljmp
and
bound
inc
xchg
stc
aaa
push
mov
mov
in
mov
dec
sub
jmp
and
or
push
or
jge
bound
out
jb
xor
loop
and
jge
push
jo
inc
push
out
out
jmp
mov
cmp
aaa
outsl
jmp
xchg
bound
aaa
adc
pop
mov
test
shrl
repz
daa
sbb
in
mov
xchg
mov
cmpl
in
inc
cmp
sub
sub
pusha
xchg
pop
or
and
sarl
lods
push
insl
es
cmpsb
fstpt
test
mov
jno
imul
movsb
cmpb
inc
movsl
dec
xchg
or
loop
lea
xor
xchg
rolb
data16
pop
imul
or
pushf
jl
sbb
movswl
pusha
cs
dec
cmp
push
dec
jnp
movsl
in
push
icebp
pop
sub
insl
mov
push
sbb
fs
into
ja
and
mov
inc
and
fs
pop
pop
aas
inc
and
movsb
cmp
scas
add
orl
and
xor
pusha
dec
xchg
jmp
and
push
pushf
or
sub
movsb
sbb
and
mov
dec
rcl
loop
sub
inc
cltd
into
cmpsb
and
xchg
test
pop
int3
push
in
and
xchg
mov
imul
jmp
adcl
xchg
sbb
push
movsb
sbb
mov
inc
mov
popa
mov
jbe
cmpsb
lret
push
xor
int
cmpl
in
outsl
aaa
mov
xchg
and
add
loope
scas
and
push
xor
and
mov
sti
push
and
mov
pop
test
push
xchg
sbbl
cmp
insb
adc
decl
and
mov
test
push
mov
jno
je
das
imul
add
pop
cmp
cltd
js
int
outsb
jle
and
stos
cld
cs
jno
and
sbb
mov
inc
in
mov
inc
lods
in
popw
sahf
dec
cmpsb
inc
mov
xchg
cltd
lahf
stc
or
in
dec
scas
inc
and
insl
das
jnp
and
mov
dec
xchg
and
sbb
mov
jbe
jne
mov
mov
xor
imul
inc
movsb
xchg
ret
loop,pt
shrb
xchg
and
ja
inc
ret
lods
jmp
in
int3
mov
push
mov
sub
add
imul
stos
xchg
sbb
mov
and
mov
mov
and
test
je
clc
mov
aad
adc
movsb
cwtl
push
pop
adc
mov
aas
ror
push
inc
test
jo
cmp
or
push
decl
ret
mov
push
rcll
and
jmp
jp
lahf
inc
dec
dec
sbb
sbb
in
jecxz
cmpsl
mov
or
std
push
xchg
cmp
mov
dec
popa
mov
cwtl
add
jmp
jo
sti
push
sbb
ljmp
inc
or
sub
in
and
repnz
imul
ret
jnp
outsb
insb
adc
test
adc
and
pop
and
pop
push
mov
and
leave
inc
lahf
push
mov
and
pushf
pusha
inc
push
insb
aas
and
mov
xchg
inc
cs
push
out
inc
jne
das
repnz
add
js
mov
gs
stc
cltd
inc
inc
test
xor
and
jno
xchg
test
arpl
cltd
or
and
sbb
or
cmpsb
and
or
aam
clc
rcrl
jmp
scas
popf
fcompl
and
and
mov
and
mov
movsb
addl
popa
lds
jle
in
fnsave
xor
or
movsl
inc
xor
jmp
and
pop
repnz
stc
or
xor
leave
std
xchg
push
push
and
aaa
dec
jb
insl
mov
cs
sub
popf
inc
xor
mov
or
mov
pusha
clc
push
mov
lea
and
sbb
jg
push
cmovno
daa
fnstsw
sub
movsb
sub
inc
je
cltd
push
int
adc
fwait
pop
loopne
mov
and
mov
dec
push
sbb
lock
jo
xchg
pop
lods
lahf
or
mov
dec
mov
jmp
cmp
cmovp
push
mov
mov
mov
xor
hlt
push
xlat
ret
repz
mov
scas
bound
js
push
cwtl
jo
or
mov
popa
jno
inc
lret
ror
mov
add
push
mov
xchg
fsts
scas
or
testb
xchg
stos
dec
loop
pop
mov
out
test
mov
adc
jae
divb
icebp
mov
mov
pop
stc
and
test
fisttpl
icebp
jp
aam
cld
mov
shlb
jbe
into
test
mov
bound
adc
jae
stc
inc
nop
cmp
pop
and
aaa
movl
sub
jecxz
ds
decl
jl
xchg
movsb
clc
sbb
and
and
sbb
js
in
push
mov
pop
loope
xor
lret
das
and
jp
push
add
aad
and
push
jle
ss
mov
and
cmc
xor
xchg
inc
subl
repz
mov
jae
pop
and
sub
jmp
repz
jecxz
and
clc
mov
jne
push
xchg
and
rclb
popf
sub
sub
insl
sbb
outsl
or
mov
or
out
pop
stc
aad
xchg
and
repz
inc
std
pop
xchg
mov
lock
mov
jnp
test
and
pushf
xchg
and
mov
cmpsl
pop
stos
popf
cltd
mov
es
sub
mov
hlt
and
sbb
fists
les
push
das
xchg
inc
xlat
adc
int
and
xor
or
je
in
pop
ja
divb
fbld
cmp
movsb
dec
xorl
lcall
mov
sbb
inc
and
mov
cmpsl
fcmovnb
out
stc
jecxz
mov
sbb
xchg
fwait
dec
and
loop
aad
daa
enter
lea
xor
hlt
lods
movsb
mov
and
repnz
xor
pop
pop
into
es
loopne
popa
and
popa
movsb
xlat
pop
arpl
pushw
pop
mov
sbb
ret
std
sbb
add
sti
imul
sarl
jb
into
sbb
dec
popa
push
cltd
mov
adc
xorb
pop
mov
add
pop
push
pop
xchg
and
out
xchg
push
stos
js
jae
fsin
rclb
mov
loope
out
sub
aad
sti
sub
sub
xchg
pop
fadd
das
jmp
sbb
cmpb
and
ljmp
divb
inc
push
std
xchg
fildl
dec
mov
out
sub
push
or
dec
xchg
mov
in
fmulp
add
mov
mov
jg
movsb
xchg
xor
movsb
and
xor
lods
mov
loope
imul
jle
mov
dec
inc
cmp
sub
mov
push
and
ret
aaa
sar
mov
aaa
lret
mov
int
insl
inc
xor
outsb
decl
nop
and
test
jb
sub
aas
popa
mov
sbb
push
adc
popa
push
and
and
lret
arpl
nop
mov
sbb
pop
roll
push
and
cmp
push
adc
xchg
inc
lods
and
outsb
shufps
ficomps
xor
mov
inc
dec
mov
and
pop
cmp
and
cld
xchg
in
fsubrl
push
jb
push
aad
and
leave
mov
mov
loop
icebp
push
dec
push
xchg
fidivs
test
inc
pop
xchg
xor
fadd
add
outsl
mov
in
test
and
loope
mov
enter
and
out
dec
into
mov
dec
pop
outsl
push
lahf
mov
and
or
and
jbe
sub
stos
out
and
aas
mov
adc
sbb
idivb
sub
cmc
mov
jno
subb
pop
mov
ret
jb
and
pop
jmp
mov
inc
xor
test
push
jmp
in
iret
aaa
sbb
and
jbe
jp
mov
push
mov
xchg
inc
pop
mov
aaa
fsqrt
jb
or
mov
cwtl
xchg
and
imull
adc
jae
call
test
sbb
push
jp
sub
and
jecxz
insb
dec
adc
call
dec
sbbb
jecxz
inc
xchg
inc
popa
sub
add
xor
and
xlat
cmpsl
mov
fisubrl
in
and
mov
ja
and
mov
pop
mov
lea
mov
ljmp
mov
fsubl
push
dec
rcrb
mov
mov
jne
add
in
lahf
pop
and
mov
push
out
push
push
or
es
les
xchg
cli
hlt
outsl
cmpsl
pop
add
shr
mov
mov
imul
push
jge
pop
xchg
push
mov
mov
mov
loop
adc
mov
fwait
mov
push
mov
fsubrs
and
outsb
add
xchg
out
out
or
xchg
xor
addr16
mov
fisubs
mov
dec
sub
cmp
mov
cmp
dec
mov
mov
cld
mov
ret
dec
add
fnstsw
mov
hlt
add
xchg
test
inc
dec
mov
and
inc
imul
and
xchg
test
andl
dec
mov
iret
jg
stc
es
leave
ljmp
add
inc
cmp
fildl
mov
mov
dec
int3
mov
mov
inc
xor
mov
add
dec
fsubl
jecxz
sbb
inc
push
insl
es
pop
jle
sbb
ds
or
mov
jmp
and
sbb
dec
cli
and
pushf
cmp
cmp
call
and
push
cs
mov
pop
dec
or
stos
pop
movsl
mov
or
adc
jne
sbb
cmp
ret
ss
xchg
das
mov
test
out
imulb
fneni(8087
dec
lea
popf
lret
decl
jae
cmpsl
and
mov
sbb
and
fcmovnu
or
pop
mov
pushf
iret
rcr
stos
cmc
and
mov
push
and
mov
ret
ljmp
mov
jne
mov
inc
shl
fisttpl
and
out
add
or
and
pop
dec
cmp
or
xor
scas
push
lret
mov
aam
andl
popa
xchg
pop
pop
mov
aas
test
insl
movsb
fdivl
jbe
mov
lcall
jns
sbb
sub
jne
adc
push
das
pop
sub
push
push
sbb
idivb
adc
popa
xchg
cltd
movsb
test
in
cmp
xchg
xchg
in
lahf
fsubp
fists
in
sbb
jo
push
or
or
leave
pop
fwait
adc
inc
cmp
das
add
in
aas
shrb
push
mov
jbe
xor
je
dec
sbb
mov
mov
adc
push
movups
pop
xlat
into
and
push
adc
mov
and
std
mov
pop
and
lret
and
mov
dec
test
push
mov
lahf
ss
xchg
mov
and
clc
dec
inc
mov
xchg
ljmp
pop
cmpsb
fstpt
add
mov
fdivrl
test
mov
shlb
testl
fwait
inc
popa
shl
pusha
btr
clc
pop
add
addl
and
and
add
and
fistps
loope
cmp
ds
and
inc
subb
jnp
pop
adc
ret
daa
push
jle
clc
push
and
jae
imul
mov
dec
push
or
aad
inc
rol
jl
jp
and
ss
push
test
frstor
and
push
mov
call
mov
mov
popa
push
adc
xor
out
xor
jo
xchg
cmp
mov
pop
sub
lea
jb
cltd
jb
in
stos
out
sti
test
ljmp
ret
aaa
mov
fstpl
mov
imul
in
xchg
stc
sub
test
daa
lret
popf
and
pop
adc
mov
test
and
jne
mov
and
fld
xor
xchg
fstpt
sub
adc
adc
loope
jne
or
and
adc
jae
fmull
sahf
orl
mov
xor
dec
daa
mov
cmpsb
mov
test
and
lds
popa
sbb
mov
mov
push
adc
and
ljmp
push
fiadds
jl
lret
xlat
or
cmp
mov
mov
xchg
jp
bound
cli
and
dec
nop
ret
in
sbb
out
and
lds
scas
aam
push
loop
in
fwait
pop
cltd
mov
sub
xor
adc
and
xorl
sub
dec
add
xchg
rclb
cld
mov
pop
push
mov
inc
cwtl
in
dec
and
jne
test
sub
int
push
cwtl
dec
in
lcall
inc
and
pop
jae
ljmp
and
mov
dec
shlb
push
sub
or
and
out
or
fistpll
push
and
xchg
mov
or
and
cmpsl
mov
mov
lcall
inc
and
test
mov
sbb
mov
lods
xchg
bound
and
push
addr16
xchg
mov
push
mov
lret
dec
cmp
loop
out
sbb
test
popa
mov
push
pop
mov
and
push
es
jecxz
aaa
xor
adcb
scas
dec
mov
movsb
insl
mov
nop
hlt
ret
push
and
xor
inc
shlb
pushf
in
sti
inc
cmpsb
jg
and
push
fstpl
mov
ret
das
or
fistpl
aas
pop
out
daa
loopne
xchg
sarl
jl
gs
movsb
ret
enter
add
js
sbb
xchg
arpl
sub
mov
jo
popa
fisubrl
lret
cwtl
movsb
xchg
frstor
hlt
jbe
scas
sub
sahf
inc
and
mov
and
mov
sub
jae
popf
ret
jp
sub
push
and
xchg
test
sub
and
and
repz
fs
cli
enter
cmp
pusha
ljmp
add
sub
jbe
dec
mov
enter
jecxz
sub
and
popl
or
mov
inc
std
daa
rclb
sub
mov
dec
sbb
sub
call
jle
or
and
fwait
imul
loop
xchg
pushf
jns
mov
inc
and
push
and
push
adc
mov
movsl
and
shrb
cltd
orl
jno
and
sti
sahf
cmp
es
sub
jp
out
in
xlat
push
mov
push
stos
das
out
and
add
in
jg
and
lods
cmc
xor
mov
and
xchg
cs
mov
cmp
push
lds
jne
loope
pop
cmp
inc
stos
pushf
shll
addr16
aaa
and
lea
and
dec
icebp
jmp
and
cmp
push
sahf
fmuls
shlb
mov
mov
nop
sbb
popa
and
lods
adc
jbe
push
mov
xchg
lock
adc
popa
pop
xchg
daa
push
scas
inc
movsb
mov
je
and
pop
mov
pop
cmp
and
outsb
icebp
push
pop
int
adc
imul
jne
fistpl
cmp
jnp
xor
xchg
leave
movsb
push
cmp
mov
lret
cmc
imul
lahf
aaa
out
dec
jle
leave
push
xor
fstpt
mov
pop
sub
pop
lods
nop
inc
mov
rorb
jg
xor
dec
pop
pop
adc
or
scas
and
int
lret
gs
bound
hlt
mov
sbb
mov
push
cmp
mov
jnp
push
cmpsl
add
mov
and
xor
mov
mov
cltd
ss
arpl
and
mov
mov
and
loopne
or
and
in
inc
jae
hlt
and
sbb
sub
sbb
xchg
push
movsb
mov
xchg
cltd
jecxz
popa
lock
and
dec
push
iret
jp
xchg
and
bound
test
add
and
dec
aaa
call
in
jle
jno
iret
mov
imul
pop
ficoms
pop
loope
pop
scas
adc
xchg
xor
mov
push
and
cmpsb
rcll
mov
xchg
xchg
jmp
sahf
lret
popa
cmc
ret
jge
sbb
and
mov
and
notl
push
data16
mov
test
jl
mov
les
push
aam
and
stc
sub
fildl
rolb
popa
jb
mov
sub
insl
les
imul
notb
cmc
xchg
mov
shrl
into
lahf
fsubrp
inc
push
cltd
clc
lahf
mov
andb
inc
push
push
in
pop
dec
mov
mov
fwait
xchg
sub
jmp
adc
cmpsl
loop
sbb
sub
sbb
lods
pop
jge
xchg
and
and
push
add
jl
test
idiv
cmp
shlb
add
mov
negb
inc
jae
or
shlb
sbb
scas
sti
pop
popa
and
mov
insl
add
andb
mov
push
and
insb
outsl
ror
ficomps
loope
das
mov
jo
and
incb
mov
xor
add
loopne
in
and
xor
stos
mov
xor
and
out
jg
adc
adc
aad
popl
ds
xchg
cmp
dec
and
cmp
sbb
adcb
lock
sub
in
adc
fwait
lahf
movsb
cmpsl
push
dec
pop
mov
adc
popa
arpl
push
in
scas
jge
add
and
push
mov
cmpsl
cmp
inc
pop
jns
cmc
in
jns,pt
and
sbbl
and
aaa
add
and
xor
and
in
cmpsl
pushf
lahf
loopne
jle
xor
sbb
sbb
push
sub
sahf
sub
push
or
sti
jg
or
and
mov
cmp
cmp
lret
xlat
xor
popf
add
sti
popa
sahf
sub
std
and
das
ficomps
rolb
aaa
int
fnsave
pushf
popa
xor
loope
icebp
push
sub
repz
xchg
jge
movsl
inc
mov
in
xlat
jge
lods
mov
sub
daa
dec
das
pop
cmp
scas
aaa
fildl
lea
add
dec
fwait
and
push
stos
xchg
push
movsl
mov
cltd
xorb
fwait
jle
inc
lods
lahf
sbb
add
cmp
adc
cmp
and
pop
cld
xor
fldenv
or
div
xor
sbb
fidivrl
mov
cmp
subl
movsb
jno
and
jno
jmp
fldl
pop
dec
aam
push
jbe
pop
or
pushf
add
sarb
cmp
ret
xor
mov
decl
call
adc
shrb
stos
and
pop
push
jo
std
inc
or
and
hlt
mov
in
xchg
dec
popa
xchg
mov
int
addr16
xchg
fcomi
jl
inc
xor
loope
sti
movb
outsb
mov
mov
push
aaa
and
in
xlat
ss
test
cmp
add
mov
mov
orl
or
fwait
adc
sbb
repz
subl
movsl
cli
test
xchg
inc
or
mov
mov
and
and
dec
mov
outsb
sarb
gs
and
std
sti
xchg
sub
jae,pt
and
in
push
mov
pop
repz
jmp
out
xchg
faddp
movsb
jbe
push
xchg
jmp
out
test
not
flds
sub
ss
sbb
cld
imul
loop
push
jmp
shl
paddw
insb
xchg
xchg
mov
int
and
add
fmull
imul
andb
outsb
sbb
push
and
ret
daa
clc
loope
and
adc
push
cmp
mov
fidivl
push
dec
js
bound
mov
imul
andb
mov
addr16
in
mov
je
das
or
in
and
jg
mov
rclb
fsubrl
adc
mov
add
jecxz
insb
cmp
adcb
jns
and
mov
out
add
push
mov
push
sub
shlb
dec
sub
stos
pop
push
mov
aad
inc
cmp
push
ja
and
xor
loope
add
test
xor
mov
jo
fxch
mov
in
xchg
jmp
dec
and
lcall
add
xor
xor
clc
pop
push
call
repnz
push
cmpsl
and
push
fdivr
push
pop
sbb
and
push
shl
and
xchg
or
movsb
loope
add
push
mov
sti
sub
lcall
dec
dec
jbe
sub
adc
add
push
xchg
das
pop
sbb
xor
dec
adc
pop
adc
popa
lods
cmp
and
pop
xchg
xor
xchg
and
xchg
outsl
sub
sahf
inc
and
icebp
dec
cmp
int3
hlt
aad
push
test
xor
aam
fwait
and
sbb
add
jb
test
test
rcrl
inc
cmp
mov
push
shrb
mov
mov
xor
mov
scas
movsl
add
dec
cmpsl
and
fwait
mov
ss
and
cmp
lods
das
xchg
jne
popf
lea
mov
jmp
mov
cmp
scas
xor
imul
and
sub
sub
mov
xor
and
sbb
and
clc
push
loope
xchg
mov
sub
inc
cmpsb
into
dec
decl
int3
movsb
push
lahf
movb
mov
cld
ret
add
inc
std
push
insl
dec
cmpsb
in
test
lcall
mov
repz
addr16
sbbb
cltd
imul
sub
xchg
dec
dec
mov
enter
mov
fdivrl
dec
adc
sub
shl
push
mov
jne
loopne
cltd
jle
pop
and
pushf
or
jmp
jbe
and
addl
pushf
fwait
test
jae
cmpsb
and
pop
popa
call
mov
jno
push
sub
adc
fildll
xchg
dec
andb
mov
xor
test
jb
push
shll
mov
dec
and
add
and
stos
xor
and
shrl
or
fisttps
fstpl
and
and
in
mul
pop
shrl
mov
adc
xor
mov
and
mov
and
dec
jae
and
sbb
cmp
sub
fs
cmpsl
test
lea
xor
rol
push
sarb
daa
scas
adc
imul
stos
popa
dec
lods
or
aad
pop
jns
xchg
dec
xchg
cmpsl
jmp
inc
pop
xor
pop
and
push
into
adc
xchg
mov
pop
sti
js
sbb
adcb
push
cmp
lret
mov
andl
inc
mov
adc
into
sub
out
mov
arpl
rolb
pop
xor
subl
imul
jg
xor
adc
cmp
test
lret
push
add
dec
jecxz
cmpsl
and
incl
out
or
mov
and
ljmp
xor
add
inc
out
scas
popa
sbb
add
int3
inc
inc
inc
cmpsb
push
sbb
and
fcmove
icebp
mov
jns
and
out
fistl
shlb
pusha
adcl
outsl
adc
dec
lret
stos
sub
xlat
mov
dec
enter
jl
xchg
and
scas
clc
adc
jg
call
dec
inc
push
adc
and
psllw
xchg
int
and
add
cltd
inc
jnp
sbb
mov
mov
sub
shrb
pop
out
pop
cmp
cmp
aam
outsl
push
test
lods
fs
jno
les
std
cwtl
insb
xchg
subl
ss
leave
add
lcall
jmp
xchg
cli
mov
pop
dec
sar
xchg
addr16
jnp
push
pop
or
test
dec
test
lcall
ja
push
push
and
adc
test
mov
sub
dec
and
js
jmp
xor
pop
outsl
out
jl
movsl
mov
inc
xchg
sub
sub
mov
add
dec
xor
movsl
lea
lds
and
mov
mov
loop
pop
xchg
mov
dec
les
rolb
lea
es
clc
js
xor
xchg
pop
mov
cmp
fmul
mov
rorb
xor
pop
out
cli
sarl
mov
xchg
stos
lret
icebp
pop
sub
and
popf
mov
xchg
fcmovne
adc
mov
dec
incl
enter
loopne
cwtl
cmp
arpl
xchg
pop
sbb
dec
add
mov
lcall
dec
jge
lahf
mov
fisttpl
xchg
arpl
and
push
mov
inc
and
clc
mov
mov
xor
jecxz
and
mov
push
popf
and
xchg
pop
data16
fistl
sub
stos
test
es
outsb
sti
js
inc
sub
out
mov
sbbl
repz
and
lock
fildll
inc
xor
sbb
and
push
or
movsb
fldcw
popa
negl
add
movsb
and
jl
leave
add
mov
imul
dec
sahf
xor
and
iret
icebp
mov
ret
jae
and
popa
mov
and
add
jns
push
xchg
and
push
mov
fnstsw
cmp
and
pop
rolb
or
out
pop
mov
and
adcb
cld
in
aas
and
mov
push
repnz
imul
lahf
xchg
mov
sbb
xor
lods
and
inc
test
rcrb
pop
or
das
insb
mov
jno
inc
xor
test
pop
mov
and
sbbb
add
sbb
mov
jae
cmp
inc
sub
and
faddl
popf
sub
and
lds
jmp
and
and
mov
xor
adc
bound
lods
cli
jecxz
and
pop
xor
xchg
out
or
xor
mov
push
pop
cmp
mov
and
loop
out
pop
aas
sub
das
mov
xchg
dec
insl
mov
mov
popa
mov
repnz
and
lds
cmp
dec
mov
push
mov
and
pop
addl
js
and
sub
loopne
test
jg
or
push
mov
cltd
fsubs
xchg
mov
sub
adc
sahf
pop
lcall
lods
inc
mov
sbb
dec
movsl
mov
sbb
je
jle
aam
aas
cld
int3
cld
and
cmc
ret
mov
cmpsl
fisubl
loopne
jmp
and
dec
nop
insl
inc
movsb
xor
and
in
mov
dec
lret
adc
dec
es
sbbl
test
lods
fsubrs
clc
enter
sub
sbb
jecxz
mov
dec
les
mov
mov
sub
cmpsb
in
shlb
cmpsl
adc
xchg
mov
sbb
iret
popa
inc
mov
and
inc
xor
leave
mov
lock
test
in
sti
and
gs
cmp
mov
test
cmp
mov
inc
lcall
or
cmp
aaa
and
push
mov
push
sub
test
cmp
jb
out
sti
and
insl
xchg
sub
cmp
aas
lods
mov
out
jle
jle
sbb
mov
and
fists
xchg
adc
rol
out
or
cs
and
mov
imul
shll
repnz
push
les
or
mov
call
mov
sbb
and
in
or
and
mov
imul
adcl
or
and
cld
or
add
xchg
out
jo
and
mov
inc
sbb
inc
subl
mov
xchg
sub
mov
xchg
pop
inc
xor
rcll
xchg
test
jo
xchg
fs
mov
rcrl
jge
sbb
or
aas
and
scas
test
sub
andl
loopne
rcrb
dec
cmp
jns
stos
orl
push
aas
sub
scas
call
aad
outsl
leave
push
lods
adc
outsb
push
subb
cmpsb
lcall
push
outsl
scas
xor
mov
out
ret
sbb
sub
test
or
add
rorl
sti
pop
inc
mov
test
jle
in
cli
or
and
or
movsb
push
mov
sub
stc
popa
fldl
popf
pop
and
push
xchg
xchg
lea
and
std
jne
sub
xlat
mov
aaa
icebp
or
sbb
xchg
cmp
xor
cmp
nop
xchg
or
and
in
frstor
arpl
or
out
and
mov
pop
mov
and
mov
addr16
clc
adcl
sbb
xchg
jb
sbb
lea
testb
xchg
cli
and
xor
pop
xchg
dec
arpl
jne
sub
and
in
cmpsb
mulb
and
imul
sbb
mov
cmpsl
adc
and
ficoms
aaa
imul
cmc
mov
in
and
mov
fsubl
int3
inc
pushf
inc
arpl
std
mov
imul
add
movsl
fcmovnbe
and
lods
aam
sub
idivl
push
cmp
xor
xchg
popf
cmp
daa
jnp
xchg
insb
mov
mov
aam
fwait
test
xor
pusha
jg
dec
cmpsb
stos
mov
sub
xor
insl
pop
mov
xchg
and
or
cmp
mov
push
insb
arpl
frstor
cmpsl
popf
lods
mov
adc
dec
es
movl
and
push
mov
mov
test
pop
das
testb
int3
mov
arpl
push
mov
sub
nop
cmp
inc
fsubrl
xor
sbb
sbb
lock
lock
pop
movsl
es
and
cmc
movl
lea
bound
ds
add
lret
shrl
or
add
and
cmp
test
mov
push
pushf
push
cmp
movsb
loop
fsubrs
adc
lcall
cs
imul
lahf
lret
inc
sahf
pop
aas
sbb
mov
and
insb
std
jge
into
sbb
scas
jno
pop
cmp
andl
pcmpgtw
push
and
cltd
add
bound
pop
xchg
imul
fadd
pop
and
mov
xchg
xor
popl
pop
pop
es
mov
xchg
and
push
inc
adc
and
xchg
cmp
push
jb
ret
push
es
jge
xor
push
sahf
dec
or
adc
mov
in
push
push
cwtl
andb
pop
into
dec
in
and
pop
rcl
movsb
out
loopne
es
adcb
push
mov
mov
fldt
and
pusha
cli
nop
out
jecxz
test
jp
in
ror
daa
icebp
popf
jl
and
test
cld
inc
mov
and
into
pop
shlb
pushl
repnz
stos
jl
push
mov
adc
and
sub
cmpsb
ss
mov
out
cmp
push
xchg
out
add
cmpsl
mov
and
ror
lret
ret
pop
and
jo
push
shll
and
push
shr
pop
xchg
sbb
or
lds
sbb
jp
aas
fcomps
movsb
xchg
popa
sbb
ret
pop
fs
faddl
add
faddp
aaa
insl
xchg
mov
sub
xchg
es
cmp
pop
sub
xchg
cmp
and
mov
xor
xor
arpl
mov
pushf
xchg
mov
cmc
aaa
dec
cs
sub
jae
test
sahf
and
mov
call
out
inc
jge
adc
and
push
sbb
lods
inc
aas
cmp
pop
imul
and
dec
fsubr
and
and
or
lea
mov
ret
mov
sub
mov
sahf
gs
and
addb
fwait
out
push
pop
enter
mov
and
and
mov
dec
scas
jecxz
ret
push
push
lock
js
mov
icebp
cld
jge
in
shr
and
ds
mov
mull
mov
dec
sti
cli
pop
and
andb
and
push
cwtl
test
jg
mov
push
pop
and
rorb
adc
and
xchg
sarl
jmp
inc
and
push
mov
jb
lea
shrb
inc
loopne
sahf
out
lar
mov
dec
xchg
enter
push
sub
das
sbbb
pop
jg
daa
in
movb
lret
and
cmpsl
pop
jns
xchg
xchg
sub
ffreep
sahf
aam
inc
sub
pusha
push
imul
add
dec
popf
mov
push
dec
adcl
sbb
sub
clc
rorl
ror
les
mov
lret
lahf
pushf
adc
lea
fwait
jle
and
jle
and
push
fmul
push
xor
movsb
xchg
push
adc
std
jo
daa
outsl
xchg
xor
out
push
and
xorb
outsl
xchg
stos
fsubs
fs
js
arpl
cmpsl
cmp
and
and
inc
outsb
mov
or
push
or
test
sbbl
inc
inc
lahf
mov
push
push
es
sub
and
je
push
popf
std
cmpl
adc
rcrl
decl
call
in
jno
cmp
popa
sub
shrb
pop
stc
cs
adc
mov
lea
push
enter
jno
inc
iret
jo
and
mov
in
adcl
pop
aad
xchg
in
in
push
icebp
sub
test
inc
jae
clc
jecxz
xor
xlat
mov
cs
popf
fbstp
leave
inc
shlb
lahf
shl
insl
sub
es
push
ja
cmpsb
xchg
and
pop
add
and
jge
xor
dec
stos
cmp
xchg
mov
jno
push
popa
dec
inc
ret
dec
jle
ret
dec
inc
shrb
cmovnp
in
cmp
divl
mov
fmul
lea
loope
jl
daa
insl
popa
pop
and
jecxz
cmp
pushf
mov
add
ficompl
pop
dec
mov
sub
push
jp
nop
out
jb
xor
in
cltd
xor
mov
std
cmpb
sti
mov
stc
test
adc
push
rolb
jecxz
and
ja
inc
ficomps
cltd
jnp
out
mov
jmp
ljmp
jae
loop
adc
movsb
jge
cmpl
outsb
add
mov
sti
les
mov
lods
sbb
mov
dec
cmp
inc
out
inc
mov
mov
ret
and
or
mov
and
mov
push
xchg
push
xchg
sub
rclb
cwtl
mov
lret
jmp
repz
aas
and
add
cmp
push
jecxz
and
mov
lcall
outsl
lcall
pop
jecxz
dec
inc
xor
stos
cwtl
mov
mov
mov
fs
mov
mov
ja
xchg
lea
add
and
sahf
and
ficompl
test
push
push
pop
ljmp
push
push
subb
mov
movsl
add
and
addl
movsb
pop
inc
pop
cmpsl
inc
xchg
dec
mov
je
in
xor
mov
es
or
jnp
xor
iret
jbe
loope
cld
sbb
xchg
out
pop
or
popf
lea
in
pop
jne
into
aas
movsb
mov
inc
std
fadd
mov
jb
dec
subl
jae
cld
pop
fisubs
pop
popa
add
xor
mov
scas
popa
inc
stc
popf
stos
fisubs
fstl
in
jle
cwtl
insl
and
dec
mov
and
sub
out
pushf
xchg
push
movsl
jno
and
or
sub
adc
repz
mov
rclb
and
sbbb
adc
aas
mov
sub
push
xor
mov
popa
fisubrs
jb
and
outsl
rcrb
loopne
and
leave
fmulp
cmp
daa
sbb
jbe
inc
sbb
push
jo
sti
xor
sbb
gs
cltd
lods
or
push
fwait
icebp
dec
pop
pop
and
and
mov
iret
cmp
inc
and
inc
dec
xor
and
pop
les
mov
push
cmpsl
orl
cmp
cmp
mov
inc
and
sbb
pop
jnp
inc
xlat
loope
push
cmpsb
sbb
sub
and
xchg
adc
or
xchg
and
mov
out
and
dec
mov
adc
mov
insl
adc
adc
into
in
and
or
addr16
sub
arpl
xchg
and
not
popf
lods
xchg
jecxz
fdivrl
mov
out
cltd
scas
mov
jnp
push
dec
loopne
mov
and
cltd
out
mov
and
mov
popf
jmp
pop
dec
and
out
dec
mov
test
in
xor
and
add
jnp
mov
mov
ret
lret
or
or
or
jmp
jp
in
and
mov
jle
push
addb
and
mov
inc
incb
cmpsb
jl
adc
cmp
mov
xlat
pop
repnz
sbb
stos
jecxz
jne
cmpsl
mov
mov
add
adc
add
mov
icebp
pop
aam
iret
xor
daa
adc
and
mov
mov
add
leave
lea
das
fwait
cmp
movsb
xor
dec
xchg
incb
sub
enter
sarb
nop
mov
andl
xchg
and
aaa
maxps
adc
push
cmp
mov
lea
xchg
push
in
int
inc
fistpll
mov
dec
mov
dec
jne
xor
mov
and
mov
add
xchg
mov
loopne
mov
xor
jle
movsb
dec
cld
sub
jno
sbb
mov
jns
mov
jns
mov
xlat
in
mov
es
movsb
hlt
sub
cmp
popf
and
test
mov
mov
mov
imul
aas
arpl
add
pop
pop
add
in
push
leave
xchg
daa
lcall
mov
xchg
and
in
pop
sub
and
icebp
xchg
mov
mov
es
and
mov
xchg
hlt
mull
or
rcrb
jecxz
xor
roll
cmp
test
iret
mov
test
sbb
mov
inc
or
mov
ljmp
jae
or
aad
sbb
and
out
sbb
int3
lret
inc
xor
movsb
movsb
ror
std
xor
es
loopne
setge
push
jno
sub
dec
xor
test
sbb
add
outsb
dec
or
imul
mov
nop
scas
cs
lods
cltd
fsub
test
cld
out
fnsave
lea
adc
jo
xchg
mov
inc
and
js
dec
mov
test
rolb
aad
sub
pop
jmp
cmp
shlb
int3
fcomps
loope
mov
pushf
and
je
jb
push
cmc
dec
and
push
mov
in
lods
mov
pop
and
cwtl
and
andl
push
mov
hlt
cs
cmpsb
adc
xchg
xchg
sbb
and
mov
jl
lret
fsubs
xor
fidivs
jge
out
mov
outsb
mov
sub
and
add
popf
add
nop
dec
lock
jne
outsl
andb
test
sbb
es
sub
dec
dec
rclb
mov
sub
jae
fwait
xchg
sub
xor
and
lret
gs
or
cmp
xor
inc
push
test
dec
in
int3
inc
push
loope
in
mov
cmp
outsl
sub
in
mov
mov
push
std
test
add
jo
aad
cmc
lahf
adc
ret
pop
mov
cmpsb
pop
xor
jle
sbb
test
dec
xor
insl
jnp
or
pusha
jns
jmp
loop
test
sbb
mov
hlt
popf
in
mov
nop
test
sub
divb
es
dec
fcompl
xor
iret
push
pusha
mov
hlt
ficomps
in
sub
mov
es
popa
and
gs
sub
dec
aas
add
cmp
cltd
dec
loope
sbb
fcompl
out
jae
lret
insl
jge
sti
in
int3
lods
sbb
sub
cmp
jle
or
fnstenv
out
pop
movsb
xor
or
ja
gs
and
xor
and
mov
insl
pop
mov
mov
mov
inc
pop
inc
std
movsb
int
lcall
cmp
lahf
popa
xchg
sub
push
in
and
jmp
addb
mov
jmp
cmp
repnz
adc
aam
xor
xchg
jge
ds
movsl
repnz
push
inc
mov
mov
mov
dec
mov
iret
jo
xor
movsb
cmp
and
and
adc
xchg
mov
pop
and
mulb
mov
shll
xor
fldenv
test
mov
lahf
push
nop
dec
mov
sub
or
push
add
shlb
mov
sbb
fisttpll
sub
rcrb
jne
adc
xchg
inc
scas
mov
mov
sti
sub
je,pt
sub
fildll
and
add
jnp
imul
aam
and
push
fs
lgs
dec
push
inc
pop
outsl
and
cltd
adc
xor
mov
and
movsl
or
and
rep
les
jbe
mov
lret
jmp
mov
dec
repnz
jno
mov
movsl
out
scas
sbb
mov
pop
insb
cmp
outsl
mov
fcomi
imul
pop
cwtl
cltd
jg
stos
mov
stc
lods
insl
jo
xlat
add
out
and
pop
leave
and
pushf
mov
and
push
jae
and
and
push
pop
and
mov
push
movsl
cmp
xchg
cwtl
popa
push
inc
dec
inc
imul
sub
loop
scas
push
sarl
pushf
lret
xor
sub
in
push
and
add
pop
and
lods
fst
sbb
test
and
aad
hlt
mov
adc
and
shrb
and
sub
inc
mov
inc
pushf
and
movsl
jle
hlt
imul
sbb
push
aas
cmpl
out
push
add
mov
and
cs
and
push
or
je
mov
dec
sbb
xchg
lods
lcall
xor
negb
mov
jae
push
je
movsb
mov
and
daa
mov
ja
pop
xchg
dec
dec
pop
pop
and
add
inc
add
dec
cmpsl
cmp
leave
pop
pop
mov
inc
sub
push
sbb
adc
mov
pop
pop
iret
cmp
mov
enter
and
mov
dec
mov
jecxz
test
and
adc
and
cmpsl
xor
adc
push
ficompl
mov
xchg
inc
outsl
or
and
popf
cmpsl
out
pop
or
ljmp
ja
sbb
shrb
push
sbbl
and
outsl
xchg
mov
roll
loopne
mov
fcmovne
cltd
stc
into
xchg
and
xchg
mov
sahf
jne
jge
adc
mov
mov
pop
sub
shl
xchg
lods
adc
insl
loope
ret
aad
mov
jne
cmpsb
mov
cmp
insb
mov
inc
subl
imul
sbb
shll
sub
xor
sahf
adcl
loope
xchg
and
stc
jmp
push
std
popf
and
cmpsb
jge
and
jg
pop
scas
jmp
inc
inc
push
imul
lea
mov
pop
or
fldenv
adc
add
mov
cmp
insl
mov
push
mov
mov
pop
pop
inc
and
and
aam
sahf
sbb
scas
cmpsb
cmp
push
les
jmp
cmp
popf
outsl
dec
enter
cli
and
pop
jns
std
xorl
pop
mov
addr16
mov
jmp
stc
xor
or
jo
push
cmp
mov
loop
cmc
cli
jg
mull
jge
out
rorb
dec
mov
jp
test
fs
stc
out
mov
and
lret
mov
mov
test
push
js
mov
push
and
je
inc
and
push
mov
sbb
loope
and
je
push
mov
mov
ss
mov
in
fadd
sbb
rcrb
cs
incl
dec
and
rcrl
jecxz
and
popa
cmp
and
ss
out
mov
iret
frstor
cwtl
popf
leave
icebp
pop
andl
add
sub
jmp
arpl
push
mov
mov
mulb
fisttpll
pop
rcrb
add
push
gs
rcll
fs
and
mov
les
sub
dec
and
inc
lea
sub
sbb
jbe
dec
pop
lcall
out
std
addb
adc
pop
scas
xchg
sub
dec
out
pop
and
xor
xchg
mulb
or
add
mov
icebp
fisubs
test
dec
mov
sub
cmc
pop
push
andl
adc
psrld
hlt
fisttpl
and
pop
inc
rcr
inc
add
mov
mov
loop
push
xor
scas
push
pop
push
jecxz
xchg
movsb
pop
cmp
cmp
adc
sub
jmp
dec
pop
jns
in
out
mov
mov
scas
push
jne
dec
repnz
add
and
adc
ja
mov
in
or
lock
bound
adc
and
test
jne
jmp
ret
sbb
loopne
mov
insb
cltd
dec
xchg
movsl
push
and
cmp
js
out
add
add
and
inc
popf
mov
and
jecxz
lock
mov
sub
or
pop
rcll
test
inc
mov
mov
mov
popa
popf
mov
and
pop
add
aam
cs
push
jmp
pop
ss
pop
test
and
scas
xchg
pop
aad
mov
repnz
movsb
aam
lahf
fidivl
xor
stc
dec
mov
ret
jb
cmp
inc
jbe
pop
push
xchg
push
jmp
mov
mov
test
imul
or
and
xchg
imul
jns
adc
out
mov
inc
jne
ja
sub
jns
inc
daa
gs
mov
push
adc
and
xchg
adc
xchg
mov
out
push
mov
in
dec
add
cld
aaa
mov
xor
xbegin
inc
add
xchg
cli
cmpsl
fucom
addr16
pop
push
test
cld
pop
ret
popa
lds
inc
inc
clc
pop
lret
push
xor
xor
popa
lods
and
inc
lahf
mov
mov
sub
aaa
aaa
adc
cmp
and
push
sahf
in
add
dec
sbb
popa
xor
test
cwtl
inc
lcall
inc
adc
outsb
sbb
pop
pop
inc
or
test
bswap
test
add
leave
pop
inc
and
into
adc
stos
lea
and
cmp
xor
xlat
add
jno
jmp
or
shrb
xchg
mov
xor
inc
jo
fwait
ds
pop
and
imul
adc
push
inc
mov
mov
in
push
and
vpmullw
sarb
and
out
inc
jmp
mov
and
rcrb
and
popf
out
xchg
xor
cld
and
outsb
mov
and
stos
fmuls
pusha
push
xor
xor
jle
mov
stos
xchg
loope
mov
dec
cmp
test
cmpsl
jp
orb
cltd
loope
stos
fs
add
push
scas
lods
cmpsb
movsl
outsl
loopne
inc
imul
xor
sbb
and
test
or
mov
mov
push
loop
xor
imul
xchg
fidivl
out
out
pusha
addb
rolb
cld
xchg
roll
clc
xabort
insb
inc
push
mov
and
pop
andb
jmp
movsb
imul
sub
xor
jns
jecxz
divl
inc
and
aas
pop
in
and
imul
xor
out
testb
mov
push
xchg
popa
sub
jge
jno
cwtl
std
and
jmp
popa
mov
daa
inc
mov
adc
add
pop
lds
push
mov
push
clc
decl
dec
add
cmp
mov
jecxz
loope
push
mov
push
mov
test
nop
xchg
lret
adc
imul
lds
jb
dec
nop
insb
sbb
cmp
and
mov
loop
cmpsl
jb
jno
test
mov
sub
outsl
movsb
lret
fldenv
pop
outsb
and
loope
stos
mov
das
rcl
or
xchg
inc
and
out
fisubl
out
xchg
push
adc
push
or
lcall
jl
loope
and
mov
ret
jae
pusha
mov
stc
sub
fidivs
les
pop
cmp
pop
bound
movsb
int
addr16
inc
scas
mov
or
jnp
mov
call
inc
fisubl
movsb
scas
add
xor
sahf
dec
cltd
sahf
push
and
test
add
int
push
notl
sub
outsl
sbb
xor
xchg
test
in
and
shll
pop
sub
push
inc
cmc
lods
and
in
cwtl
cmpb
icebp
mov
call
mov
insl
insl
out
clc
movsb
lods
test
mov
das
mov
or
and
and
frstor
xchg
adc
andl
lds
aam
movsb
pop
jb
jmp
jns
sub
add
and
jnp
loop
fsub
pusha
xchg
sarb
orb
mov
ret
fidivl
and
arpl
jns
test
mov
push
and
or
or
mov
int
mov
enter
adc
push
jecxz
es
ja
int3
popa
xor
adc
and
movsb
xlat
or
sub
and
lret
xor
das
roll
mov
and
mov
sbb
scas
adc
cmp
sbb
imul
and
pop
ja
fimull
xor
lea
jns
inc
mov
cmp
jno
loopne
add
sub
cmpsb
mov
mov
in
addb
pop
shll
fisubs
sub
dec
cmp
jne
sbb
data16
sub
imul
dec
dec
insl
sti
and
pop
jnp
xchg
mov
xor
pop
popa
mov
push
movsl
shll
xor
jle
mov
xlat
cmp
movsl
test
pop
repnz
cmc
test
push
and
movsb
xor
lcall
pop
add
pushf
push
jge
ja
aad
jb
clc
cmp
and
push
or
xchg
idivl
inc
xor
movsb
sub
dec
sub
xchg
cmp
and
aaa
push
inc
cmc
ss
jnp
sub
out
mov
shrl
test
pop
movsb
loope
icebp
stc
or
push
out
mov
sbb
and
dec
mov
pop
movsl
pop
stos
xor
in
shrl
insl
icebp
cmp
clts
int
mov
mov
or
nop
cli
pushf
rclb
mov
xlat
push
inc
decl
mov
dec
inc
iret
arpl
mov
les
inc
gs
cmp
je
fcom
enter
xor
push
mov
es
jge
test
jb
fldenv
cli
nop
dec
int3
or
mov
dec
sub
leave
movsb
cmp
adc
repnz
xchg
mov
xor
dec
dec
or
sbbl
mov
and
adc
inc
adc
std
jne
lret
aam
xchg
and
les
cli
add
loop
fchs
xor
mov
dec
add
and
imul
imul
test
test
and
push
lcall
and
pop
push
hlt
jno
and
jl
out
mov
mov
add
jbe
and
outsl
push
push
dec
push
push
js
pop
and
adc
jle
movsl
push
jnp
mov
mov
sub
stos
jl
sbb
push
and
icebp
or
and
loop
call
and
into
mov
loopne
mov
es
mov
loop
leave
jmp
aad
jp
or
push
gs
and
cmpsl
pop
add
pop
test
jge
mov
ds
cmpl
and
call
and
mov
lahf
mov
and
in
mov
or
call
lds
mov
fists
sarl
out
sub
insl
pop
shl
jbe
insl
bound
fiadds
mov
push
test
and
cmpsl
fnstsw
mov
adc
out
and
dec
inc
or
mov
xor
shlb
fdivs
in
roll
xor
test
mov
cmp
and
and
cmp
shrb
mov
sbb
mov
add
mov
dec
adc
jnp
clc
jns
es
rcrl
arpl
and
pop
mov
and
xchg
enter
lret
xor
and
xchg
xor
icebp
mov
push
jno
or
pop
ljmp
sub
and
movsb
cwtl
ret
lods
and
pop
push
cmpsb
pop
aam
xchg
out
loop
sbb
push
lea
mov
subl
sahf
rorl
dec
stc
sbb
jp
loopne
lods
iret
jb
pop
daa
sub
outsl
sbb
cmp
mov
adc
insl
lret
scas
sub
xor
enter
jne
pusha
mov
xchg
into
lret
mov
ja
pop
std
jl
js
pop
adc
or
notb
mov
pop
outsl
cmp
loopne
push
mov
add
and
mov
adc
add
and
aam
dec
mov
sahf
popa
and
cmpsl
in
lcall
in
je
and
xchg
push
and
sti
imul
xor
and
lds
rcr
adc
popf
mov
sti
and
fstpl
mov
xchg
imul
and
sbb
aas
xor
add
jle
mov
mov
lahf
jge
dec
mov
xchg
mov
xchg
xor
aas
fisubs
cmp
sbb
inc
jae
int
data16
movsb
sub
sbb
jns
aad
mov
mov
out
xchg
cmpsb
mov
into
inc
xchg
lcall
and
fists
popa
test
mov
loope
sti
cmp
hlt
test
or
and
inc
sbb
movsl
sarb
into
inc
adc
or
jb
ds
mov
and
sub
mov
add
add
xchg
aas
mov
js
movsb
or
jge
push
cmp
and
fldt
mov
fidivl
pop
and
insl
stc
cld
ss
and
sbb
fistps
push
lret
push
xchg
enter
andb
jnp
xchg
fsubrp
andl
stc
or
and
push
jle
aaa
fxch
mov
and
xchg
pushf
jle
das
sbb
push
adc
sbb
or
call
inc
cwtl
and
sbb
and
clc
adc
xchg
inc
and
out
fs
andb
mov
and
inc
jns
das
xchg
mov
test
loopne
mov
cmp
push
sub
and
or
cwtl
cwtl
sbb
jle
add
cmp
or
and
out
xor
call
icebp
and
sub
and
jns
stos
jl
sbb
or
cmp
push
and
jnp
stos
test
mov
int
mov
and
addr16
mov
inc
adc
pop
pop
outsb
loope
jg
jae
and
mov
cmc
cmp
and
filds
adc
mov
mov
mov
mov
mov
cmp
cltd
dec
into
cmp
dec
adc
mov
test
and
mov
dec
gs
insl
cmp
inc
aaa
pushf
mov
jns
or
jno
fmull
xchg
loope
inc
lea
fistpl
mov
cltd
aas
cmpsb
mov
cld
popf
push
jmp
loop
push
aad
arpl
lcall
mov
mov
jge
push
int
mov
and
add
sub
xchg
mov
repnz
lea
and
and
and
stos
imul
and
jns
or
xchg
xor
xor
jnp
jl
jo
pop
dec
cmpb
popa
sbb
mov
scas
and
jb
inc
pop
fisubs
insb
mov
mov
xchg
mov
popf
xchg
push
and
lods
ret
cltd
push
and
into
arpl
scas
stos
cmp
cmp
and
push
adc
out
dec
dec
and
sbb
movsl
insl
orb
and
lods
in
lahf
fidivl
sub
add
xorl
xor
adc
mov
pop
mov
xor
addr16
cmp
jne
mov
push
xchg
push
or
fnstenv
pop
sub
xor
ljmp
push
mov
or
lods
popf
in
xchg
mov
and
or
dec
subl
lds
je
push
aaa
mov
adc
jns
push
mov
or
mov
xchg
mull
inc
pop
cmpsb
fcmovb
and
cmc
add
and
jp
sbb
jle
fldenv
loop
repnz
pop
cmpsl
clc
adc
outsb
and
jae
scas
sbbl
xchg
pop
push
mov
cli
loopne
and
aas
push
mov
movsb
popa
fistpl
xor
jb
clc
bound
push
loopne
aam
cltd
dec
adc
push
ret
and
nop
add
fsts
mov
mov
bound
inc
insl
fucomp
popa
xchg
and
mov
xchg
and
push
mov
icebp
xor
aaa
inc
and
test
xorb
mov
cmp
repnz
mov
loopne
mov
cmp
iret
jne
adc
test
lea
mov
ds
xor
cltd
pop
pop
and
xchg
out
shlb
push
adc
inc
inc
aam
lock
dec
cltd
ljmp
xchg
jg
and
outsl
sbb
aaa
mov
and
push
fsubrl
out
xchg
dec
and
push
stc
out
mov
pop
jo
shrl
shll
and
cmp
xchg
lret
repz
cltd
pop
mov
clc
mov
jo
pop
int
mov
mov
or
ret
push
hlt
stos
push
sarl
shrl
sbb
mov
nop
cmp
xor
adc
sub
and
test
jle
scas
push
arpl
stos
leave
shlb
movsb
bound
xor
xchg
jg
mov
movsl
and
and
adc
fisubrs
ljmp
gs
aaa
xor
inc
jl
jnp
or
hlt
insl
jno
sbb
movhps
sbb
sub
arpl
repnz
and
insb
pop
mov
adc
imul
inc
mov
jl
fwait
inc
xor
repnz
shlb
mov
inc
loope
and
arpl
mov
dec
leave
scas
xor
add
dec
scas
push
xor
jne
jle
or
mov
repnz
or
dec
movsb
push
gs
add
add
mov
dec
cmp
and
scas
jmp
sarl
test
js
jmp
add
insb
and
jnp
sub
movsb
sub
mov
and
cli
lcall
dec
add
ljmp
add
xchg
mov
sarl
pop
movb
and
dec
movsb
mov
fimull
mov
or
nop
jle
jbe
jp
sub
and
push
outsb
dec
mov
mov
push
out
inc
push
pop
lret
jae
add
dec
and
pop
and
push
lret
test
jecxz
pop
andl
repnz
cmp
jne
push
mov
pop
push
movsl
repnz
movsb
clc
mov
cmpsl
ffreep
sahf
and
lods
out
jge
cmp
cs
cmpsb
lahf
jecxz
push
fidivrl
sub
pop
loope
imul
xor
dec
dec
inc
and
fistpll
daa
sbb
outsl
cld
adc
xor
pop
mov
ret
fs
dec
cmp
pop
or
sbb
scas
sbb
jno
mov
pop
and
xlat
in
push
and
hlt
xchg
test
pop
mov
push
mov
dec
cmpl
mov
mov
ret
sub
adc
xchg
in
andb
loop
into
jl
mov
add
popa
push
outsl
xchg
mov
out
and
test
sub
hlt
cmp
push
out
mov
lret
imul
and
mov
xor
xorb
dec
sub
and
lds
and
into
pop
mov
fldcw
mov
mov
and
mov
out
sub
mov
movsl
push
xor
push
in
mov
and
mov
imul
adc
add
or
fsubs
mov
add
pop
pop
pop
sub
push
es
in
test
leave
cmpsl
mov
and
dec
inc
and
leave
push
in
daa
popa
stos
mov
mov
pop
pusha
fldt
test
xor
test
xchg
lods
dec
dec
mov
insl
movsb
pop
ret
iret
mov
jmp
test
pusha
outsb
std
out
and
out
cmpsl
dec
rorb
and
imul
test
repnz
leave
in
rcll
or
ljmp
andl
sbb
loop
popa
jbe
mov
jno
popa
xchg
push
movsb
and
push
dec
mov
jo
fldl
fwait
inc
sub
push
movsb
pop
jmp
enter
and
mov
test
mov
mov
jnp
cltd
add
add
push
xlat
push
push
daa
mov
in
and
cmp
jnp
mov
pushf
and
hlt
mov
and
jbe
cmc
mov
pop
scas
cmc
xchg
dec
lahf
movsb
mov
mov
inc
fstps
scas
pop
stos
insl
popa
push
mov
lods
inc
aam
jno
daa
loop
jns
into
lret
cmp
push
xor
push
into
push
add
pop
and
mov
in
icebp
mov
loopne
xor
mov
flds
adc
mov
addb
out
and
jmp
sub
push
jle
inc
shlb
mov
sbb
sub
into
lock
xchg
ret
test
pop
in
jp
and
jl
mov
mov
sub
cmpl
cmp
pusha
movsl
repz
loopne
in
and
movsb
sti
or
out
and
inc
lcall
xor
andl
jmp
and
ss
lcall
jle
inc
add
movsl
jl
push
test
cmc
in
jmp
lcall
adc
and
mov
outsl
jl,pt
cli
add
ja
insl
jg
ret
scas
xchg
test
or
lea
xlat
not
add
in
adcl
sbbb
scas
and
mov
popa
and
mov
sub
push
mov
jo
fstl
or
push
and
cmp
add
push
cmpl
mov
push
andl
push
imul
lods
cmpsb
mov
and
inc
and
jnp
and
xchg
cwtl
mov
mov
outsl
dec
mov
pushf
orl
aaa
jns
lcall
pop
vmwrite
jmp
shll
xor
and
mov
imul
rcll
adc
leave
fimull
test
lret
pop
push
sub
cld
mov
test
ds
mov
xchg
loopne
jne
lds
out
pop
sahf
and
cmp
cmpsb
aas
inc
es
sub
inc
mov
fnstenv
arpl
adc
lahf
fisubrl
pop
add
addr16
andl
test
fcomp
push
and
mov
inc
jo
xchg
push
pop
and
pusha
mov
lods
xorl
test
es
and
push
shll
and
pop
sub
add
mov
repz
out
mov
jecxz
and
jne
xchg
mov
call
sub
adc
cmc
add
pop
sub
xchg
push
mov
jno
inc
insb
sub
jmp
jbe
jno
out
mov
and
push
mov
loop
addr16
enter
roll
cmp
fdivrp
insl
add
and
int
fcomps
ffree
mov
inc
arpl
fsubl
dec
cs
aaa
mov
and
xlat
stc
lea
inc
push
ret
cmp
and
rcrl
push
xor
and
pushf
pop
xchg
mov
lea
ss
sahf
xchg
xchg
mov
orl
add
jle
in
xor
and
ds
or
xchg
and
xlat
mov
xchg
cltd
popa
aas
dec
or
pop
sbbl
in
fstl
jae
sahf
lahf
dec
and
lret
cmpsb
dec
in
rcl
fstpt
mov
push
and
lret
shlb
and
movsl
aaa
jg
cmc
sbb
jns
and
push
or
and
push
popl
and
test
mov
fbstp
adc
or
test
xchg
icebp
and
fwait
popa
scas
sub
insb
mov
and
in
add
jbe
out
lret
or
push
jno
gs
pop
pop
jmp
js
lds
aas
fwait
push
and
ds
test
mov
testb
lcall
dec
cmp
js
out
mov
fldenv
divl
jmp
mov
adc
fildll
std
mov
pop
fimuls
arpl
inc
xchg
cli
iret
mov
add
and
out
stos
loop
lcall
outsb
popa
and
xchg
mov
xchg
cmpsb
dec
ss
hlt
lds
lcall
js,pt
loop
int
sbb
push
dec
and
mov
pop
les
mov
hlt
out
in
pop
mov
mulb
pop
stos
jno
jbe,pt
and
lea
mov
cmpsl
jmp
stos
gs
in
add
std
mov
jmp
mov
jne
mov
int3
adc
xchg
int
dec
lock
adc
out
mov
icebp
pop
pop
mov
and
push
mov
scas
and
sbbl
mov
les
addb
or
lcall
call
int3
and
xor
popf
xor
mov
mov
dec
xchg
scas
mov
xor
mov
add
popf
mov
movsb
repz
xor
shlb
add
and
lea
enter
mov
ss
test
push
sarb
and
jb
in
sub
cmp
and
lods
popa
cmp
and
out
stc
decb
and
cli
mov
inc
shll
mov
pop
mov
mov
push
or
xabort
pop
and
lods
mov
sbb
inc
and
mov
popf
and
mov
cmp
xor
push
das
jge
outsb
popa
sbb
repz
dec
mov
and
lock
test
inc
and
mov
adc
jecxz
dec
jns
add
and
mov
in
and
mov
push
fdivrl
mov
andl
xchg
and
mov
lods
add
mov
out
es
ja
outsb
add
jg
mov
adc
and
loope
pop
dec
jo
inc
and
notl
pop
out
and
lret
and
fldenv
and
std
dec
sub
ds
and
push
pop
jns
and
and
outsl
sqrtps
in
mov
pop
aaa
mov
inc
push
xchg
ljmp
data16
mov
shll
dec
hlt
xchg
idivl
insl
ljmp
mov
popa
in
pusha
fsubl
cmc
dec
push
xchg
or
push
push
mov
in
and
addr16
push
and
or
pop
and
adc
in
cli
dec
and
xor
mov
out
jne
mov
aaa
out
imul
popa
mov
in
and
or
or
xchg
bound
inc
mov
aam
xlat
ss
repnz
xor
stc
mov
test
mov
mov
addr16
fsubrs
xchg
mov
and
repnz
out
push
pop
jns
loopne
push
inc
rcll
cwtl
mov
mov
stos
xchg
pop
adc
sub
xchg
mov
outsl
loop
and
mov
mov
movsl
and
and
pop
mov
adc
jo
popa
cwtl
cltd
fdivrl
inc
inc
mov
dec
push
jae
jl
pop
out
and
scas
xor
cli
andb
mov
in
mov
push
ja
cmpsl
push
popf
push
pop
mov
xchg
xchg
mov
mov
cmp
pop
bound
jle
and
loope
adc
mov
add
addr16
mov
hlt
addr16
cmpsl
mov
cmp
frstpm(287
bswap
push
adc
mov
dec
add
and
cmc
push
int
mov
movsb
xchg
icebp
mov
hlt
xor
ss
jle
cltd
and
roll
repnz
push
negl
ds
loopne
mov
inc
sahf
and
cltd
mov
sbb
test
fsubrl
sub
mov
insb
das
rcrl
loope
mov
xor
pop
xchg
enter
adc
loope
cmp
inc
loop
and
cwtl
das
and
rolb
adcl
push
xchg
xor
add
jbe
orl
test
mov
faddl
outsb
and
leave
ds
icebp
out
mull
iret
mov
push
pop
shll
inc
in
dec
inc
and
xor
pop
loope
mov
montmul
cmpsb
sbbl
and
dec
ret
pop
or
mov
pop
cmp
sbb
adc
xchg
das
stos
repz
dec
and
cmpb
xor
cld
data16
fxch
mov
xlat
lahf
setp
enter
ret
not
test
inc
mov
push
repnz
inc
xchg
and
mov
sub
push
out
mov
and
popa
lock
gs
out
pushf
fcmove
shl
stc
pop
int3
ret
popa
or
nop
xchg
scas
push
mov
jge,pn
add
push
and
xchg
dec
push
jl
lret
dec
mov
xchg
sub
inc
mov
repnz
test
push
gs
sub
mov
sub
xchg
mov
or
icebp
push
mov
jo
sbb
pop
push
clc
rcl
mov
mov
and
dec
push
and
xchg
sbb
ljmp
sbb
and
addl
pop
sbb
and
mov
inc
push
xchg
sub
or
and
aas
xor
js
pop
dec
clc
in
jns
adcl
stos
out
js
lret
test
xor
and
std
mov
jno
xchg
jg
shll
mov
sub
mov
addb
out
das
frstor
push
mov
lods
inc
mulb
aad
mov
movsl
out
negb
sbb
cmpsb
lcall
sbb
repnz
aas
jns
insl
dec
and
push
add
cmp
lahf
and
gs
mov
pop
aam
push
sbb
push
or
movb
insb
mov
in
jae
movsb
dec
push
dec
and
out
mov
xchg
sbb
cmp
jnp
sub
sbb
popa
push
sbb
and
push
xchg
shlb
inc
sub
push
mov
movsl
mov
and
notb
insl
xor
movsl
jne
jmp
popa
test
cmp
ja
jno
xor
aam
push
sahf
inc
push
stc
cmp
mov
daa
and
jl
pop
out
rolb
dec
cmpsl
xor
sbb
mov
pop
lds
mov
and
adc
and
nop
call
and
lock
outsl
cmp
sti
icebp
and
popa
movsb
stos
mov
lret
lret
pop
pushf
loop
ss
clc
cltd
movsb
shlb
mov
scas
mov
lea
punpckhwd
cmp
add
push
iret
push
insl
orl
sub
cs
popa
sar
xor
and
xchg
out
hlt
jecxz
sub
lcall
out
pop
inc
and
dec
daa
je
pop
jb
and
fists
and
fcmovu
addb
and
xchg
adc
mov
movsb
rep
es
inc
xor
lock
scas
lods
jge
inc
mov
cmc
ret
and
lods
xor
mov
jecxz
fadd
iret
pop
xor
and
je
xlat
lret
xchg
pop
cmp
cmp
or
sbb
xchg
add
sahf
and
out
xor
push
xchg
jmp
lahf
mov
testb
adc
int3
and
sub
scas
ds
adc
pusha
clc
and
icebp
enter
pop
mov
stc
loope
test
or
das
or
out
cs
mov
add
cmp
and
xchg
movsb
jns
out
and
mov
and
aam
cmc
jle
add
sti
adc
or
ficompl
add
scas
fwait
and
jl
out
aas
and
xor
add
sti
divl
inc
lahf
cmp
xor
ljmp
fistpll
and
not
cwtl
inc
jns
int
xor
push
mov
jo
xchg
jecxz
lock
push
mov
inc
stc
int3
xchg
jg
pusha
inc
push
xor
dec
mov
inc
adc
repnz
sub
xchg
inc
xor
pop
dec
xor
push
xor
lahf
xchg
push
or
inc
mov
and
sub
pop
arpl
stc
int3
mov
les
mov
jbe
lds
fldcw
pop
lret
fimuls
and
mov
pop
add
mov
pusha
jl
scas
pop
rcl
mov
shlb
sub
pop
and
pop
add
add
fsubrl
mov
ficomps
and
adc
sub
in
idivl
subb
sub
fcmove
jle
fidivrl
and
pop
int3
movsl
sbb
shll
es
push
jge
xchg
xchg
push
dec
in
mov
fstp
sbb
and
and
out
cmp
or
mov
mov
jmp
in
stos
push
pop
nop
stos
data16
sahf
test
popa
and
bound
fldenv
cmove
xchg
mov
add
or
mov
scas
stc
mov
inc
mov
and
and
fsubs
int3
lret
adc
stc
xor
out
jmp
inc
sbbl
mov
fisttps
jbe
dec
and
adc
mov
icebp
and
mov
rcll
push
push
add
lods
xor
inc
dec
mov
cmc
sub
lods
in
mov
shrl
xchg
sbb
cmp
in
cltd
xchg
dec
cs
outsb
movsb
data16
cmpb
push
scas
jns
xchg
in
cmp
adc
in
popf
test
stos
sbb
mov
and
inc
or
and
out
xor
ljmp
stos
xor
mov
test
mov
jns
add
and
fadds
inc
and
mov
int3
negl
cltd
mov
shll
push
xor
jns
xor
add
dec
outsb
and
stos
cmp
jno
lcall
jl
sti
xchg
push
inc
and
insl
mov
adc
or
mov
dec
mov
and
lock
mov
das
jg
out
cmpsl
inc
das
xor
add
rcr
andl
inc
sub
and
test
mov
inc
xor
cli
loopne
out
mov
lods
xchg
sub
cwtl
mov
dec
fstps
adc
sbb
mov
inc
dec
loop
add
and
dec
arpl
and
cld
add
popa
add
or
xchg
and
out
cmp
out
sbb
mov
mov
push
les
mov
mov
and
mov
fcmovnbe
xorl
aad
insb
mov
movsb
push
aas
xchg
orb
jge
das
or
inc
popa
xchg
xchg
gs
pop
and
es
sub
aam
and
insl
shlb
icebp
leave
sub
and
scas
aas
xchg
mov
dec
inc
add
outsl
add
and
mov
mov
and
pop
push
cmp
add
mov
fwait
sbb
and
icebp
lea
popf
mov
cmp
and
adc
mull
cmp
shll
pop
mov
int
cld
and
dec
xchg
das
aam
cmpsl
xor
ljmp
sub
adc
jge
jmp
dec
andl
sbbl
cmp
popa
je
jo
hlt
mov
lods
and
mov
faddp
imull
push
xor
movsl
adc
mov
and
ret
mulps
out
dec
movsl
mov
adc
into
std
mov
push
sub
xor
cmp
xchg
jb
push
cmp
stos
and
push
mov
loop
adc
mov
and
movsb
push
aad
rcrl
mov
js
imul
sub
mov
ljmp
sub
out
or
or
mov
ss
xchg
sub
and
and
inc
fimuls
push
xor
push
jecxz
in
iret
cmpl
pop
nop
cmp
mov
cmc
and
rcl
call
dec
rcll
repnz
stc
cmp
int
jae
int3
lcall
das
and
sub
fcomp
adc
and
ss
mov
pop
movsl
xchg
pop
and
add
and
cli
fimull
sub
repz
mov
gs
jle
into
inc
and
and
jmp
lods
inc
add
xchg
sbb
push
mov
mov
mov
xor
sub
mov
xchg
mov
mov
popa
mov
addr16
mulb
mov
repnz
inc
mov
inc
pop
in
out
xor
jns
leave
das
xchg
jo
es
lods
int3
pop
jl
and
adc
and
shl
pop
bound
mov
and
sti
fldenv
jecxz
pusha
aad
or
popa
sub
rolb
lcall
fisttpl
pop
and
cwtl
jge,pn
movsl
mov
mov
and
pop
cmp
adc
and
pop
jnp
mov
or
and
mov
addr16
xor
push
xchg
xchg
and
les
movsb
sub
sbb
dec
mov
mov
popa
nop
adc
subl
fs
shll
stos
pusha
into
push
test
push
push
fbld
cmc
mov
and
enter
stos
fidivrl
jp
jno
xor
inc
mov
push
mov
sub
aaa
jge
imul
jae
repnz
fsts
sub
cmpsl
fisubrl
div
mov
mov
lea
mov
jle
sbb
orb
or
incb
xchg
out
in
and
pop
repnz
push
loop
and
and
nop
unpcklps
imul
fcomps
xchg
dec
cmpsl
outsl
push
fwait
xchg
pusha
jnp
xor
sarb
and
fbld
xchg
outsl
sub
arpl
hlt
enter
push
aaa
cmp
adcb
outsl
in
fldcw
sbb
test
and
fs
push
cmp
lods
jecxz
scas
aam
test
fs
lods
push
outsb
and
dec
push
xchg
xor
sbb
rol
test
inc
imul
push
insb
ret
fwait
and
negb
aas
shlb
cmp
dec
push
test
mov
inc
add
adc
shll
cmp
cwtl
gs
sbb
push
inc
frstor
dec
cmpsb
mov
mov
dec
imul
lahf
inc
dec
movsb
mov
cmp
testb
jp
pop
jle
les
jo
push
adc
stc
pop
lods
mov
out
ret
mov
sbb
and
mov
roll
aas
pop
cmpsb
and
pop
popa
xchg
push
lret
mov
jp
lods
mov
push
and
mov
leave
ja
lcall
dec
andb
mov
fdivrl
mov
inc
mov
inc
inc
aaa
test
and
call
pop
out
aas
or
mov
inc
popa
inc
or
cwtl
dec
push
cmp
clc
mov
add
add
and
out
xlat
cmpl
push
outsl
inc
mov
mov
lahf
jae
inc
xchg
or
lods
pop
std
xchg
lds
cmc
leave
mov
pop
cmp
mov
insb
movsb
adc
stos
adc
lea
insl
aas
mov
into
push
or
push
mov
movsl
inc
xchg
jg
pop
push
and
test
into
jmp
clc
pop
inc
and
dec
xor
pop
popa
adc
test
xor
xor
std
and
push
push
popa
movsb
stc
das
mov
movsb
mov
cltd
or
gs
push
fs
or
adc
pop
cmp
in
and
nop
jmp
mov
push
push
jns
pusha
popa
sbb
scas
mov
inc
test
lahf
sub
and
icebp
stos
loopne,pt
pop
mov
push
adcl
pop
xchg
xchg
jg
cmp
dec
push
and
xor
test
mov
inc
push
lds
jmp
and
loope
jl
xor
ror
into
pop
pop
mov
ret
mov
mov
and
adc
and
pop
enter
push
femms
rcrl
les
push
jno
enter
loopne
xlat
and
nop
and
add
mov
xchg
pusha
imul
imul
inc
jb
jno
add
push
test
or
or
xchg
mov
sub
fdivp
and
or
jno
or
jp
test
dec
out
lds
cmp
mov
and
pop
pop
mov
sbb
and
jne
dec
and
sub
push
and
dec
push
popf
imul
or
and
dec
xor
xchg
xor
rcll
dec
mov
imul
sbb
and
inc
in
cs
push
and
pop
repz
push
fidivs
test
push
jmp
int3
push
ret
lcall
es
and
sub
jle
mov
mov
sub
and
inc
ficompl
movsb
add
mov
pop
and
adcb
insl
out
and
push
xor
xchg
das
inc
cwtl
fucompp
xor
jecxz
cmp
mov
iret
jo
outsb
vmwrite
mov
lret
mov
and
mov
jmp
mov
das
shlb
movb
dec
mov
push
and
rclb
xchg
test
sub
out
cmp
inc
mov
xor
fs
add
xlat
mov
movsb
ret
adcl
jns
adcl
test
shlb
jle
fsubs
push
sub
fwait
lcall
mov
jl
and
js
in
sub
xchg
stc
movsl
fisubl
sarb
mov
inc
icebp
ret
and
mov
clc
mov
push
sti
popf
cmp
add
and
xor
movsb
xchg
mov
mov
test
cmc
xor
dec
js
xor
pop
cmp
lock
push
pop
pop
aas
fstps
pop
sbb
add
mov
dec
iret
dec
and
pop
mov
sahf
into
xor
movsb
fidivrs
arpl
and
adc
out
and
mov
cld
out
enter
sbb
jp
and
pop
add
ret
mov
loopne
cmc
mov
xchg
out
insb
pop
stc
fsubrl
outsb
sbb
ficomps
or
sbb
aaa
and
inc
jecxz
xchg
mov
add
push
or
jp
and
or
cmpsb
jge
add
in
dec
push
lds
cmp
jno
push
lods
xchg
test
sarl
fwait
dec
xchg
dec
xor
iret
and
xchg
pop
or
in
loopne
jnp
xchg
in
sti
jo
nop
movsl
push
lea
fs
add
or
and
adcb
sarb
insl
mov
popa
and
sbbb
push
jnp
and
pushf
shr
jmp
cmp
jns
xor
fldenv
xchg
lods
int3
arpl
mov
lea
and
dec
xor
sub
in
popa
mov
loopne
addl
and
mov
incl
ficomps
mov
push
mov
sub
push
or
popf
pop
cmp
movb
mov
jne
cwtl
test
jge
cmc
out
and
cmp
les
icebp
jl
cmp
push
ja
adc
frstor
and
push
dec
rorl
loope
insl
pop
mov
mov
mov
cmp
mov
push
fisubrl
bound
popa
rcl
or
mov
movsl
les
xlat
loope
int3
cli
jae
ds
addr16
mov
jo
push
pop
data16
out
outsb
stos
push
inc
sub
movsb
int
dec
rolb
xchg
popa
push
xor
and
dec
fwait
jnp
push
sbb
push
xor
and
jecxz
aas
loopne
mov
pop
hlt
pop
xor
aad
and
das
pop
mov
or
stos
inc
mov
icebp
dec
fmuls
and
dec
iret
add
and
cmp
add
jge
mov
add
sbb
fsubl
xor
mov
jmp
out
mov
cmpsl
ret
mov
imul
adc
and
mov
adc
pop
mov
loope
mov
xor
in
nop
cmp
xor
add
cmp
add
ret
lret
loop
pop
mov
sti
xchg
xchg
push
leave
es
into
popf
and
lahf
lahf
or
out
mov
imul
das
xchg
jnp
aas
insl
popf
inc
sub
and
and
add
and
fistpl
ret
js
sub
scas
insl
mov
add
sbb
cmpsl
aam
imul
inc
ficoms
and
mov
jb
out
and
xchg
fisubl
jg
js
mov
movsb
sbb
popa
mov
daa
cmp
xchg
jmp
xorl
bound
loopne
push
mov
inc
std
repz
leave
mov
sti
lock
jne
xchg
jp
movsb
scas
adc
sbb
inc
xchg
mov
mov
sbbl
mov
jge
stc
push
mov
cmp
bound
xchg
mov
jne
or
and
mov
stos
pushf
out
and
xchg
sub
or
push
jae
push
mul
push
push
in
and
out
xchg
hlt
xor
daa
and
mov
jne
mov
out
pop
call
mov
and
push
and
xchg
cmp
push
pop
adc
jno
das
jnp
ret
jl
repz
push
and
push
decl
mov
sbb
pop
and
add
mov
xchg
test
adc
cmp
sub
ret
in
movsl
mov
mov
jecxz
stos
jge
fstpt
cmp
push
and
push
jg
shl
sbb
add
shlb
xchg
int3
fs
mov
adc
push
mulb
mov
fs
jnp
jns
jo
and
ret
insl
scas
mov
sub
outsl
push
mov
cmp
inc
mov
mov
add
and
scas
pushf
cmpsb
push
jns
and
pop
xor
and
sbb
out
stc
sti
jmp
adc
stos
jb
jae
movsl
sbb
push
lods
mov
or
sub
in
popf
mov
arpl
jo
jge
pop
hlt
and
das
mov
dec
and
sbb
dec
inc
lods
lods
pusha
movsl
mov
shrb
jae
add
and
inc
cmp
imul
icebp
mov
fwait
mov
adc
sahf
and
dec
cmp
je
clc
xor
sbb
and
lahf
inc
pop
arpl
dec
inc
and
shlb
mov
inc
dec
popf
and
in
dec
fistps
repz
mov
push
pusha
addr16
pop
aad
mov
xor
sub
pop
stos
and
cmp
divl
sub
and
hlt
or
push
mov
and
dec
fwait
cmp
nop
pop
sub
jp
or
and
mov
xlat
xchg
cmp
aam
pop
movsb
xor
jmp
jecxz
insb
popa
pusha
mov
jl
xchg
in
cmp
xorb
aam
and
xor
push
and
or
xchg
cltd
and
sbb
mov
mov
mov
mov
sahf
and
push
xchg
aaa
inc
jns
mov
push
in
cwtl
jle
insl
cmp
xchg
insl
push
and
or
jecxz
add
aam
or
dec
movsb
cltd
push
xchg
push
inc
mov
adc
add
gs
add
ss
mov
dec
fs
push
lods
in
pushf
mov
fs
and
pop
mov
push
jbe
mov
add
orb
nop
cmc
popa
xchg
add
mov
dec
outsb
clc
xchg
cwtl
lea
repz
cli
cmp
mov
movsb
ljmp
add
shrl
inc
stc
jp
mov
mov
and
mov
pushf
in
jnp
push
pop
push
das
and
lcall
outsb
stos
jae
in
xchg
lret
and
adc
inc
and
xchg
xor
ljmp
clc
mov
push
enter
and
out
add
shlb
pop
and
push
and
add
jge
dec
xor
or
xchg
sbb
in
pop
mulb
xorl
sub
add
xchg
mov
push
or
mov
rcll
mov
int3
cmpb
and
sub
sub
loop
or
or
add
popa
sti
or
pop
shlb
and
adc
fsubrl
cmp
fisubrs
push
mov
adc
rcrb
test
push
xor
inc
or
movsl
push
ret
in
mov
pop
in
inc
and
lea
adcl
hlt
sahf
xchg
mov
xor
push
fs
add
rclb
ret
cmc
inc
sub
jae
push
leave
movsl
lahf
shll
loopne
test
adcb
stos
inc
jno
lret
and
std
clc
outsb
xor
mov
stos
test
aas
mov
lret
inc
ret
icebp
mov
aad
out
test
jns
and
pop
shrl
das
inc
lret
jnp
sbb
lods
push
cmp
jg
and
lcall
out
push
xchg
and
enter
xchg
aam
dec
cmp
sub
pop
push
pop
cmpl
repnz
int3
xor
addr16
lahf
xorl
lret
sub
loopne
add
and
sti
mov
repz
out
push
xor
and
sarl
test
and
push
sub
adc
leave
and
mov
cmp
shl
ljmp
adc
sti
xor
pop
sbb
sarb
inc
je
mov
jl
clc
adc
stos
arpl
sub
push
dec
inc
mov
dec
in
push
addl
and
out
sub
mov
sub
push
adc
lcall
dec
adc
or
pushf
sub
in
push
push
fstps
push
sub
mov
repz
lret
mov
pop
and
popa
inc
inc
outsl
add
je
pop
hlt
push
fistps
and
jg
insb
and
and
pushf
iret
pop
pop
fwait
lds
xor
andb
fstpt
and
push
fnsave
push
push
fbld
sbb
ret
xchg
add
and
test
xor
test
dec
jns
idivl
mov
inc
or
pop
insl
and
sbb
scas
and
dec
pusha
das
xchg
lock
test
jge
pop
mov
or
xor
or
popa
int3
sbb
jne
and
sub
and
inc
xchg
repnz
sahf
loop
inc
fwait
push
mov
mov
or
or
cmp
and
inc
shrb
lods
and
jg
insb
dec
cmp
aad
sub
out
inc
dec
mov
or
inc
cmp
ljmp
cltd
cwtl
mov
xor
insl
inc
jmp
and
andl
push
stos
cwtl
dec
push
test
dec
jb
jge
and
mov
mov
cmp
outsl
lea
cmp
sbb
xchg
mov
movsl
pop
insb
lods
dec
popa
xor
pop
sbb
lcall
ja
icebp
cwtl
jge
daa
or
cmp
add
push
fdivs
inc
daa
mov
and
cli
sarl
mov
sub
jnp
push
and
sti
fstpt
mov
and
lahf
push
lods
nopl
ret
arpl
inc
jmp
jnp
add
xchg
push
jno,pt
into
and
jg
sbb
mov
sub
mov
mov
add
push
mov
sbb
cmp
insl
and
rol
lds
cld
stos
push
in
dec
jle
ds
mov
test
das
xchg
nop
cmp
test
bound
mov
arpl
movsb
outsl
test
push
jecxz
daa
push
add
mov
icebp
and
rorl
imul
push
mov
sbb
xchg
mov
clc
mov
sub
cmpsl
xchg
mov
and
adcb
adc
pop
and
cs
xchg
dec
in
inc
arpl
cmp
adc
sbb
lahf
hlt
filds
add
stos
and
pop
test
andb
xor
loope
mov
xchg
ret
jb
xchg
aas
mov
daa
push
scas
sub
mov
aad
cmp
push
pusha
out
inc
jecxz
mov
frstor
push
jg
fmul
jl
outsl
xor
dec
pop
add
mov
mov
inc
or
xor
jge
cli
mov
rcrb
jp
mov
pop
jmp
testb
sti
mov
popf
jmp
adc
int
add
inc
popf
push
push
pop
jmp
and
loopne
jae
pop
shl
and
imul
mov
pop
xchg
mull
and
or
test
and
shlb
jp
sub
mov
lret
lahf
ret
xchg
push
adc
inc
xorl
daa
mov
imul
aas
test
fldl
xchg
and
xor
push
or
mov
and
je
fdivl
out
call
outsl
and
push
or
jl
and
int3
nop
and
dec
xor
out
cmp
or
testl
pop
sbb
push
cmp
or
out
clc
inc
adc
add
pop
test
jno
fs
jle
mov
xlat
popf
fwait
imul
push
loop
out
jle
enter
push
sar
cmp
mov
and
insl
mov
xchg
adc
xchg
mov
xchg
xchg
hlt
dec
add
jbe
ds
iret
in
jb
mov
add
add
jge
mov
dec
cld
add
mov
jle
fnstenv
movsb
loopne
adc
inc
mov
sub
inc
lock
popa
ljmp
or
and
mov
rcll
xchg
insl
ljmp
or
mov
popa
mov
lret
in
fldcw
cmpsb
cmpsb
xchg
dec
pop
in
mov
sub
shrb
iret
inc
mov
mov
pusha
dec
xchg
leave
dec
add
jnp
dec
or
pop
into
dec
ja
and
pop
inc
cs
xor
dec
movsl
cwtl
mov
xchg
jg
fwait
daa
and
sub
pop
ljmp
inc
xor
jbe
push
sbb
and
out
ret
and
enter
stos
or
imul
fisubrl
push
adc
sub
xchg
xchg
and
cli
cmp
call
rcrb
in
mov
cmp
push
dec
inc
adc
shlb
cmpsb
popw
popa
decb
jp
and
stos
mov
and
insb
xchg
decl
mov
hlt
std
sbbb
pop
jmp
mov
stos
cli
cli
mov
jne
mov
mov
lds
xchg
dec
leave
push
hlt
mov
mov
fimull
xchg
ljmp
repnz
xor
mov
mov
mov
xchg
stc
dec
mov
and
add
inc
cwtl
mov
cmp
adc
or
popf
push
and
insl
mov
and
push
jne
aaa
and
inc
mov
or
movsl
repnz
aad
cs
out
outsb
and
jle
pop
xor
mov
shlb
imull
ss
mov
and
repz
pusha
orl
mov
sarl
xorl
js
cmc
fmuls
cmp
popa
xor
pop
dec
cltd
mov
in
xor
dec
cmp
outsl
inc
dec
sahf
sbb
or
adc
outsb
jo,pn
mov
scas
repnz
mov
inc
mull
popa
orl
push
lock
pop
jno
and
dec
pushf
test
jae
mov
xchg
rorl
hlt
loopne
jae
movsb
aad
fisubrl
push
add
pop
add
mov
les
adc
fwait
mov
xlat
sbb
pop
call
pushf
sub
xchg
xor
mov
mov
popa
add
and
testb
fwait
ret
mov
in
test
aaa
stos
ficoml
pop
into
movsb
sti
sub
jle
adc
shrl
fwait
mov
pusha
mov
mov
andl
xlat
inc
daa
and
pop
sbb
in
mov
loop
pop
sar
incl
and
push
and
jmp
lret
insb
ss
fbld
jns
pop
mov
pop
push
pop
test
mov
sub
xchg
mov
add
mov
ret
lret
call
nop
cmp
scas
xchg
out
jae
xlat
jmp
ficompl
aad
fldenv
mov
shrb
std
pusha
data16
sbbl
rolb
cmovns
mov
add
mov
sti
or
in
push
adc
repnz
lds
sub
into
lock
sahf
xor
dec
ljmp
mov
add
popf
adc
sahf
cmpsl
add
ret
test
andl
ret
dec
and
jecxz
fimuls
arpl
ljmp
adc
sub
push
push
pusha
mov
jb
mov
sub
fmull
and
lahf
les
pop
test
cmc
pop
fists
sub
sub
mov
mull
mov
and
lret
fstp
jb
test
lods
test
inc
push
cmp
popf
inc
xlat
xchg
fimuls
mov
add
and
or
jno
out
cld
test
test
push
aas
gs
push
mov
pusha
sti
inc
mov
and
mov
xlat
das
pop
inc
and
out
mov
inc
cmp
lcall
fsubl
adc
pop
mov
js
fisubrs
xor
sub
sbb
pushf
loop
dec
inc
test
shrl
and
pop
fstps
and
jl
jo
cld
mov
fwait
insl
jp
jg
rcrb
ret
out
xor
jmp
adc
or
jle
lret
and
cs
and
aad
dec
lcall
and
ja
mov
stos
and
lods
cld
test
popa
add
arpl
mov
popa
out
in
xlat
xor
out
stos
inc
fimuls
jb
cmpsl
in
hlt
and
mov
nop
test
push
cmp
das
aaa
and
adc
inc
xchg
pushf
inc
es
sub
and
mov
adc
cltd
sbb
sub
push
push
addr16
mov
mov
or
jno
test
ljmp
lahf
loop
outsl
jmp
sarb
std
cli
xor
lods
push
push
scas
push
pop
loopne
and
pushf
fldt
psllw
xchg
lcall
in
and
mov
sti
and
or
dec
xchg
sahf
jg
mov
rcll
in
add
dec
inc
cld
push
out
aas
movsb
xchg
mov
xor
adc
mov
into
fsub
xchg
pop
and
das
pop
mov
ficomps
or
imul
push
out
mov
cmpsl
inc
outsb
cmp
mov
pop
sbb
mov
es
fnstenv
loope
mov
adc
in
push
jb
into
int3
jne
pushf
or
test
outsl
lock
imul
inc
daa
addb
sbb
sbb
mov
cwtl
mov
lcall
cmpl
cmp
mov
pushf
leave
lods
les
xchg
pop
test
idivl
loope
pusha
jns
and
jge
mov
ss
mov
inc
bound
loope
cld
cmp
aas
lahf
out
shl
clc
fcmovnb
sub
inc
mov
and
mov
mov
and
or
rcr
inc
cli
and
inc
stos
shr
cmc
push
pop
movsb
imul
popa
inc
add
pop
add
and
inc
dec
div
cs
nop
push
jge
jns
push
shll
dec
pop
bound
jl
andl
lods
cltd
push
xchg
add
and
dec
xor
aam
lret
push
mov
add
xorb
and
jge
sub
push
xor
jp
movsl
xchg
push
jmp
adc
cmpsl
es
addl
stos
out
mov
repz
hlt
adcl
xchg
popa
test
sbb
pop
or
dec
scas
xor
popa
test
xchg
rcrl
aaa
fidivs
dec
frstor
ljmp
jg
sub
lods
mov
ret
mov
xchg
lret
shrl
adc
daa
and
or
mov
shlb
mov
and
pop
cmpsb
popa
aam
jne
cli
mov
mov
cmp
cwtl
fadd
gs
out
xchg
sub
add
dec
test
js
repz
popa
jnp
xor
test
jbe
movsb
pop
cmc
sub
mov
stc
and
das
jno
outsb
pushf
subl
loopne
push
mov
push
jno
inc
inc
lea
or
movsb
orl
outsb
dec
mov
pop
mov
rep
fldl2t
and
sub
xlat
push
clc
sbb
mov
pop
sti
fwait
jns
lods
in
and
add
mov
add
mov
mov
pop
add
xor
test
in
adc
mov
pushf
xchg
xchg
and
add
aad
and
adc
arpl
mov
dec
mov
or
mov
and
inc
movsl
cltd
int
and
sbb
and
insl
out
sbb
lret
xchg
in
and
rorb
sbb
and
inc
int3
cmc
addr16
xor
jo
adc
mov
dec
and
movsl
jb
pushf
lds
and
fwait
outsb
push
jg
and
dec
fs
or
and
xchg
adc
cwtl
and
in
sub
ds
push
cmc
iret
add
leave
inc
and
cmp
and
push
pushf
mov
jl
orl
mov
cmp
and
insl
addr16
leave
lods
sub
jmp
fbld
mov
shll
jmp
mov
jge
popf
and
out
xchg
mov
and
add
int
orb
add
fmuls
outsb
sub
int
mov
pop
movsb
cmp
adc
dec
sub
movsl
in
nop
ss
pop
dec
andl
movl
pop
ror
rcr
lods
jb
je
and
push
jbe
xchg
adc
sbb
jo
lahf
arpl
jl
sbb
xor
and
test
shlb
out
ror
xlat
fwait
leave
mov
enter
aam
and
xor
pop
das
ljmp
cwtl
pushf
adc
lcall
dec
jg
jno
push
testb
mov
int3
mov
jno
and
ds
shr
pop
popf
and
push
jnp
mov
and
fcmovbe
mov
pop
jg
ret
push
in
pop
iret
mov
add
sbb
clc
dec
mov
sub
mov
test
and
pop
enter
pushf
loopne
and
leave
mov
sar
orl
dec
cmpsb
mov
xorl
das
sbb
and
cwtl
outsb
repnz
movsb
pusha
jg
mov
inc
xor
push
adc
mov
sbb
jmp
jl
pop
imul
and
push
cld
shrl
sti
sbb
pop
fcoms
subb
movsl
push
pushf
fldenv
push
leave
adc
xor
cmpsl
and
loope
push
sbb
and
push
in
fsubrl
add
loop
mov
andl
pop
push
and
mov
adc
cmp
lahf
push
sbb
les
in
dec
mov
mov
and
imulb
add
xor
xor
pop
cmp
out
adcl
dec
xor
test
scas
inc
mov
outsl
or
xchg
mov
pushf
fucom
xchg
push
cmp
push
aas
mov
test
push
je
jbe
and
orl
cmp
mov
shrl
xor
and
nop
mov
popf
cwtl
push
and
mov
fidivl
or
nopl
mov
adc
push
jo
loop
xchg
sub
sbb
and
pop
or
mov
dec
loope
jns
sub
call
mov
mov
mov
or
inc
icebp
mov
ret
mov
inc
stos
xchg
popa
outsb
test
sub
lea
sbb
lahf
fs
call
and
dec
add
pop
fmull
jo
je
and
mov
and
orps
movsb
push
scas
into
pop
jne
cmp
mov
mov
movsl
jecxz
cmc
and
and
shrb
lahf
pusha
movsb
cmc
inc
lods
add
push
and
mov
mov
test
xchg
xor
popl
and
adc
cmp
rcl
pop
and
hlt
mov
add
imul
mov
and
dec
sub
loope
cmp
push
les
jb
mov
cmp
mov
movsb
dec
jbe
aaa
test
mov
clc
dec
sti
les
aad
and
mov
popa
sbb
ljmp
je
cmpsl
out
lods
call
jb
jle
sbb
xor
dec
rclb
or
shrb
pop
insl
cmp
mov
scas
rcrb
add
jns
hlt
mov
xor
mov
sub
out
das
loop
popa
or
in
sar
jmp
and
xor
sub
loope
andl
adc
mov
push
insl
adc
and
testb
xor
cmp
cltd
mov
int
jns
nop
pop
mov
jl
bound
dec
cmpsl
arpl
fistpl
movd
outsl
daa
cmpsb
sub
pop
and
addb
cli
loop
cmpsb
pop
jns
loope
lea
ljmp
and
divl
pop
mov
push
pop
loop
gs
popf
mov
push
popf
xchg
rcr
mov
dec
cs
fs
out
push
mov
adc
into
and
pop
sub
andl
pop
xchg
repnz
iret
stc
dec
and
push
aam
cwtl
and
adc
cmpsb
xchg
and
pop
xchg
decl
frstor
scas
insl
test
add
inc
gs
pop
and
repnz
xchg
dec
mov
and
out
sbb
cmpsl
mov
and
je
nop
dec
mov
and
rorl
xor
sbb
lods
add
xchg
in
sbb
movsb
pop
mov
sahf
inc
test
std
enter
sarl
mov
aaa
mov
mov
inc
imul
mov
into
in
mov
mov
in
and
pushl
clc
push
mov
gs
fnstcw
and
and
push
sub
pop
mov
out
mov
adcl
and
push
and
jmp
mov
add
xchg
shll
pop
xchg
lret
adc
mov
add
and
push
xor
call
and
dec
cwtl
lds
imul
sub
fimull
xor
cmpb
popa
xchg
or
push
test
test
push
push
shlb
aam
jns
jmp
cmp
repz
sub
stc
and
pusha
push
sub
jne
mov
xchg
cmp
scas
jge
cmpsb
in
and
add
cmp
shlb
sbb
movsl
sub
sub
int3
add
sbb
mov
scas
pop
enter
fsubr
pop
and
outsl
lcall
outsb
cmp
mov
sub
ja
and
cmpsb
shll
popa
mov
lahf
xchg
cwtl
insb
add
and
popf
orl
stos
push
or
pop
das
lcall
or
lds
fdivrs
popa
jbe
lods
insl
xchg
inc
daa
jo
fsubrl
pop
and
aad
xor
popf
push
adc
cwtl
mov
inc
mov
and
xchg
jl
pop
jns
and
and
mov
sub
mov
push
push
dec
add
sti
adc
push
orl
les
jl
push
adc
in
and
xchg
cmp
push
ret
cmp
addb
dec
sbb
xor
and
push
jl
sub
aam
add
ds
daa
rcr
les
and
dec
xchg
and
inc
cmpl
jge
add
movsb
stos
adc
inc
jmp
dec
les
push
loopne
out
rorb
lds
sti
dec
in
or
xchg
cmp
into
and
mov
insb
jb
in
movsl
sub
loope
adc
aam
out
das
repnz
add
sub
popa
xchg
jo
iret
push
add
mov
add
movsb
sub
clc
dec
inc
mov
test
cwtl
push
popf
in
and
gs
int
pusha
or
das
cld
sub
inc
xchg
push
cmp
xchg
in
mov
mov
add
lret
pop
fcompl
mov
xchg
andb
inc
roll
xchg
push
and
mov
jae
rorl
insl
push
jp
inc
add
repnz
and
adc
dec
aam
add
fldcw
xor
mov
ret
adc
and
jne
jge
xchg
sub
mov
test
cmpsb
repz
fcmovnb
inc
movsb
cwtl
push
mov
maskmovq
and
push
ds
xchg
and
in
push
es
fwait
xor
test
cmpsb
sub
mov
jns
dec
pop
popa
fmulp
mov
push
cltd
fwait
pop
push
and
sub
or
shl
aaa
mov
ljmp
popf
stos
scas
inc
test
and
sub
out
sti
mov
mov
mov
jns
jge
cs
imul
lret
leave
icebp
sbb
and
xchg
cld
sub
mov
sbb
idiv
dec
push
lods
inc
scas
and
rclb
and
adc
jbe
dec
std
sbb
jp
push
cli
movsl
jo
arpl
xchg
inc
pop
cmc
push
ds
xor
and
add
shll
adc
or
cli
shll
shrb
aas
je
stos
push
mov
push
cmp
xor
ja
jne
lea
je
ds
push
cmp
ret
xchg
out
and
xlat
mov
push
and
outsb
ds
xchg
and
icebp
fildl
pop
and
lods
ffreep
stc
jecxz
jne
mov
xchg
mov
insl
test
das
bound
ljmp
test
outsl
or
jmp
xchg
test
and
sub
and
xchg
cmpsl
shlb
out
xchg
and
out
xlat
mov
insl
test
mov
and
imul
mov
in
push
and
mov
xor
lcall
scas
out
jo
push
aas
mov
or
mov
mov
call
adc
popa
dec
aaa
xchg
test
rorl
dec
lds
jle
aaa
xchg
xchg
rclb
mov
inc
xor
mov
aad
cmpsb
cmp
sub
xchg
lahf
push
fstps
pushf
add
cltd
pop
loopne
adc
dec
sbb
and
stos
repz
jae
push
jge
sbb
arpl
int
jle
adc
les
mov
cwtl
mov
lret
fwait
dec
pop
mulb
and
and
pop
and
stos
stos
loopne
mov
cltd
cmp
cmovle
ret
jg
inc
xor
fildl
das
sub
ficompl
les
or
lcall
andb
mov
and
push
mov
movsb
cmpsb
hlt
icebp
scas
or
pop
stos
mov
add
pop
and
lods
or
lret
jbe
mov
inc
sub
xor
leave
and
stc
test
movsb
jg
aas
add
fucomip
xor
clc
push
or
pop
xchg
mov
cltd
emms
pop
and
pop
cmp
pusha
sbb
imul
sbb
dec
cwtl
test
lods
pop
fisubrs
sbb
mov
loop
mov
aad
jo
and
mov
jns
sub
lea
mov
lret
push
dec
cs
andl
inc
jl
mov
sub
inc
adcl
outsb
xor
cmp
xor
pop
ljmp
mov
in
add
inc
or
cmp
lds
pop
inc
std
cmp
sub
ret
daa
les
and
xchg
lods
out
jbe
adc
incl
and
enter
cmp
int3
and
sub
dec
fisttpl
cmpsl
mov
fcoms
bound
jp
xchg
imul
mov
jb
ljmp
rorl
and
xchg
imul
cmp
mov
pop
sub
inc
in
test
stc
jl
fdiv
xchg
and
jbe
mov
mov
sbb
mov
jo
cltd
cld
dec
sahf
stos
sub
cmp
pushf
jb
sbb
stc
mov
pop
mov
pop
cmpsb
mov
or
out
xchg
ror
movsl
add
xchg
or
jl
mov
xor
mov
movsl
and
xor
pop
movsb
mov
push
cli
inc
test
pushf
sub
adc
dec
popf
and
jo
jne
lcall
xchg
arpl
aas
repnz
xchg
scas
mov
ds
push
hlt
push
jp
lods
dec
mov
jge
sbb
xchg
mov
imul
jno
outsl
pusha
sahf
jl
and
fldenv
lods
mov
testl
and
sbb
sub
gs
jne
push
jns
jns
scas
push
loope
aaa
pop
cmpsb
jg
popa
mov
test
push
adc
pop
pop
mov
in
daa
pusha
insb
bound
fcompl
out
xchg
and
mov
inc
sbb
popa
xchg
dec
mov
rol
andl
cli
xchg
js
sub
movsb
sub
xor
ljmp
and
adc
and
jmp
pop
shll
pop
mov
and
or
inc
pushf
mov
loop
jne
mov
jle
push
incb
scas
xor
mov
iret
fwait
push
and
stos
lcall
push
pop
and
xor
sbb
cmpsl
pop
jb
test
lods
xchg
movsb
mov
sbbl
fxsave
and
das
pop
rorb
jne
sbb
mov
cmp
es
int3
add
or
xor
movsl
adc
mov
sarb
and
push
pop
je
pop
and
and
push
pop
scas
movsb
out
loopne
or
std
and
jno
mov
and
lret
testb
aam
xchg
or
imul
lahf
movsb
jo
inc
iret
push
push
lock
push
sub
out
jne
jecxz
sbb
iret
popa
mov
cmp
lods
stos
or
int3
mov
jl
fmull
xchg
outsl
fwait
mov
dec
xor
fldenv
or
push
and
xchg
and
or
pop
xor
xor
loope
and
fmuls
and
test
cli
xor
mov
movsb
and
fldt
int
cmpsb
repnz
cmpsb
lahf
movsb
out
xchg
addl
and
dec
and
or
cld
int3
and
mull
pop
mov
xchg
mov
clc
push
lret
cmc
and
mov
nop
xor
mov
inc
scas
mov
mov
cs
int3
sub
sar
ja
scas
and
lods
sarb
pop
push
js
insw
inc
or
add
out
pop
and
ss
add
push
mov
mov
fsub
dec
mov
in
xor
cmp
jge
mov
xorl
jne
lahf
push
mov
mov
stos
and
jne
pop
mov
ljmp
fldenv
lds
loope
and
dec
cmp
pop
and
stos
cltd
mov
xor
adc
pop
decl
xor
jle
and
aaa
add
leave
pop
and
ds
mov
and
cmp
repnz
insb
xchg
std
ficomps
xor
jo
dec
shrb
sub
cmp
sub
sub
imul
ja
and
flds
sub
cmp
notl
jae
mov
inc
and
fsubl
pop
shlb
sub
or
pusha
sub
ds
sub
orl
les
fisubrs
stos
pop
and
daa
nop
jbe
jecxz
xor
popa
fchs
cltd
lock
pop
icebp
inc
mov
sbb
pop
mov
ds
movhps
pushf
les
or
js
leave
iret
addr16
sub
ljmp
inc
jns
mov
or
lea
and
lret
out
insb
fisubrl
and
or
mov
shlb
push
jb
mov
mov
add
loop
iret
dec
sbb
aad
push
loope
movsb
xor
push
or
loopne
xchg
das
fdivrs
inc
xor
xlat
ljmp
fcmovb
hlt
sub
push
or
xchg
jp
add
jb
popa
dec
sub
dec
xchg
or
push
mov
xor
inc
sbb
ret
cmp
and
cmpsl
or
push
mov
shlb
xchg
aam
in
jo
pusha
dec
cltd
xorl
mov
push
inc
dec
xor
nop
test
inc
gs
sti
push
dec
movsb
enter
std
mov
add
pop
or
cmp
ret
sub
aas
mov
in
lahf
fcom
and
rorb
mov
xchg
test
adc
movsb
mov
mov
xlat
loopne
stos
xchg
arpl
jo
sub
sub
out
insl
das
sbb
sub
loope
sub
xchg
cmpsl
cld
push
stc
andb
adc
icebp
add
and
lahf
dec
imul
inc
adc
jb
push
bound
pushf
aad
loop
in
sbb
in
jge
ljmp
mov
lret
jns
and
mov
out
xor
fdivrp
add
push
jns
push
mov
mov
or
push
mov
and
dec
aad
out
sbb
and
lock
es
aad
mov
and
and
and
mov
pop
push
out
mov
pop
jp
movsb
pop
and
xchg
sbb
and
sbb
dec
xchg
cli
and
or
imul
and
mov
bnd
inc
mov
test
sbb
popa
cld
outsb
dec
cmp
xor
aaa
sub
pop
pop
sbb
mov
movsb
pop
nop
test
xchg
mov
mov
incb
and
fs
loopne
pop
jo
adc
lods
adc
add
and
fidivrs
enter
push
aas
mov
pop
movsl
add
xor
adc
pop
sbb
pop
mov
loop
sub
std
and
fwait
inc
add
dec
andl
cwtl
shlb
cld
sub
pop
and
dec
sbb
shlb
push
popa
sbb
or
lods
ffreep
and
and
loop
inc
cld
and
scas
fprem1
movsb
imul
and
ds
stc
inc
inc
pop
mov
scas
cmpsl
inc
sbb
xchg
inc
ds
and
jae
fcoms
dec
movl
xchg
xlat
ljmp
pop
mov
out
push
lock
popf
mov
int3
sahf
push
stc
test
pop
inc
and
dec
in
jb
and
jl
inc
add
stc
pusha
daa
xchg
jno
std
or
xor
mov
xchg
leavew
repnz
int
sub
clc
icebp
adc
pop
adc
enter
js
sbb
test
rcl
outsl
push
sti
or
push
ljmp
xlat
cmp
mov
fucom
sbb
js
jnp
xor
rcrb
xorl
pop
stos
rcrb
cmpsl
enter
mull
loop
dec
mov
popf
into
fwait
jb
and
je
adc
sub
addr16
dec
lahf
cmp
and
pop
ja
sbb
pusha
mov
add
aaa
push
pop
pop
sub
and
andl
sbb
and
sbb
icebp
shlb
push
add
sahf
and
mov
in
sbb
loopne
insl
rclb
loop
inc
lods
testb
popa
add
add
call
aas
fcoml
push
repz
dec
add
xor
sub
and
push
iret
or
rcll
lds
mov
push
push
and
jmp
dec
and
mov
add
add
fdiv
sub
sub
in
xor
mov
cwtl
dec
lock
xor
and
mov
and
lahf
outsb
push
cwtl
fcos
jo
inc
call
mov
xchg
cmp
aas
cmpsb
clc
dec
cmpsb
insl
and
mov
mov
mov
cltd
mov
fsubrp
inc
lcall
fdivl
mov
aaa
loope
sahf
mov
adc
jmp
and
push
mov
cltd
sub
iret
pushf
xchg
jle
lret
xchg
pop
rol
loope
cmpsl
jns
xchg
mov
sub
add
popa
sbb
sub
jno
cmpsl
test
loope
and
sbb
and
cmpb
and
adc
mov
pop
insb
or
jne
xlat
inc
out
and
cmp
and
mov
add
out
mov
pop
push
sub
out
mov
or
mov
or
sbb
es
xor
cmp
cmpsl
push
xchg
dec
insl
cmp
and
sahf
in
xchg
cmc
imul
out
mov
dec
ret
sub
outsl
repnz
nop
fsts
dec
out
enter
xor
pop
sbb
sub
add
xchg
sti
jg
mov
add
mov
jg
test
push
add
mov
jge
fldenv
or
cwtl
test
mov
adc
sub
scas
or
cmp
xchg
nop
jno
out
lret
and
imul
xchg
xchg
mov
std
push
xor
cmc
insl
mov
sub
imul
inc
loop
mov
test
out
loopne
dec
xor
xchg
mov
pop
mov
mov
mov
xlat
movsb
lret
sub
dec
pop
in
add
mov
cmpsl
lcall
daa
out
mov
lret
lods
popf
mov
and
out
and
cmp
bound
clc
outsb
sub
sub
fbstp
fcompl
lods
mov
addr16
out
xchg
pop
add
jae
lock
and
inc
addl
and
adcb
mov
mov
daa
pushf
in
push
insb
and
gs
and
xchg
dec
cmc
aaa
ds
jno
dec
shlb
add
test
daa
dec
and
pop
or
in
aaa
dec
das
sbb
xor
rolb
in
and
inc
and
mov
je,pt
inc
xchg
and
test
jg
ret
cmpsl
movsb
in
iret
cli
fidivrl
test
and
je
jns
push
cmp
shlb
mov
add
sub
subl
mov
mov
jl
ja
push
int
jb
out
mov
iret
push
lods
fsubs
jecxz
jae
cwtl
adc
rcrl
loopne
and
cmc
dec
mov
cwtl
loopne
icebp
lret
push
and
call
bound
sahf
adc
daa
dec
jg
cmpsb
xchg
cmp
xor
and
lea
pop
gs
out
out
cmc
and
and
sbb
cmpl
out
test
push
sbb
push
or
data16
pop
dec
and
cmp
cmp
sub
pop
pop
pusha
xchg
xchg
adc
mov
lret
stos
cld
lods
and
xchg
mov
insl
ret
imul
inc
lret
fcmovu
push
mov
xchg
movsb
jmp
sub
add
xchg
sub
cwtl
popf
stos
cmpsl
shrb
xor
popa
pop
rclb
add
das
mov
push
cmp
rolb
mov
mov
dec
movsl
in
sti
daa
bound
pop
aad
dec
idiv
mov
jne
cmpl
andl
sub
lea
repz
imul
and
cmp
jno
into
mov
xchg
cmp
inc
jmp
leave
divb
hlt
jle
mov
add
std
xchg
mov
cmc
mov
iret
add
sti
pop
sahf
clc
shll
mov
pop
dec
es
cltd
push
cmpsb
or
fsubl
ljmp
in
ss
mov
jns
ljmp
jns
and
add
rorl
and
and
dec
in
daa
mov
jns
xor
std
popa
mov
mov
add
cmp
pop
mov
jge
and
xchg
dec
bound
inc
stos
mov
mov
out
and
dec
adc
push
mov
and
out
add
inc
ja
cmpsb
punpcklwd
pop
fsubrl
pop
mov
repz
repnz
mov
xor
jp
and
cmc
cmp
add
imul
and
es
mov
fsubl
repz
xor
negl
mov
inc
jge
loope
mov
push
sub
cmp
xchg
and
cmp
enter
mov
dec
pop
stos
test
ja
dec
das
popf
lods
orl
sub
mov
into
fdivs
mov
iret
push
sarl
int3
out
and
push
or
sbb
into
mov
adc
mov
pop
mov
mov
jno
ds
and
lea
sub
inc
pop
movsb
aaa
addr16
sbb
mov
jns
insb
cmp
xchg
and
jne
adc
add
hlt
popa
stos
clc
sbb
js
mov
and
in
and
cmc
ret
and
jecxz
insl
mov
and
xor
and
dec
jle
inc
aam
and
subl
jae
out
ja
stos
xchg
and
jecxz
nop
cmp
imul
test
sbb
mov
mov
and
subl
adc
and
add
clc
lods
dec
or
and
mov
fwait
je
push
sub
and
and
and
jle
mov
cwtl
sub
loope
adc
out
push
xchg
ss
mov
les
cmpsb
adc
fistl
mov
in
cmp
pushf
das
insl
or
sub
sbb
lcall
ficoms
icebp
and
xor
jb
mov
jle
je
addr16
mov
subl
push
xchg
ret
mov
sub
in
add
inc
pop
idiv
inc
jmp
and
xor
mov
movsb
out
outsb
pop
lret
pop
mov
lahf
jg
aam
add
adc
xor
pop
iret
mov
test
xchg
das
adc
sbb
xchg
aam
popa
cltd
mov
mov
mov
in
cmpsb
ljmp
pop
and
mov
add
das
aas
mov
and
push
popl
cmpb
gs
xchg
pushf
test
ret
and
rolb
pop
stos
fwait
int
test
mov
push
repz
jnp
xchg
movsl
sbbl
dec
mov
add
cltd
and
stos
stos
or
fucomp
movsb
mov
sti
mov
mov
jp
push
cmpl
subl
cmp
and
icebp
add
test
dec
stos
jl
fistl
flds
xchg
andl
pop
sar
sub
ficoml
addr16
iret
incl
jge
pop
sub
add
hlt
push
pop
dec
arpl
subl
jmp
sub
mov
std
dec
incl
sub
cmpsb
pop
cmp
in
mov
and
jnp
adc
push
lods
or
and
pop
loop
or
push
mov
enter
mov
popf
push
and
movsb
or
out
popa
mov
mov
movsl
inc
dec
and
popa
lret
out
stos
xchg
mov
fnstcw
inc
sbb
and
xchg
jb
pusha
shrb
dec
xor
inc
clc
mov
and
daa
inc
mov
testb
xor
gs
popa
inc
popa
cmp
dec
mov
and
mov
scas
xor
dec
jo
cltd
cmp
pop
mov
inc
out
cmpsl
loop
adc
sub
push
or
cli
daa
in
pop
mov
xlat
adc
and
das
or
push
repnz
sub
xchg
xchg
sub
and
jp
lret
movsl
cmp
pop
mov
mov
and
cli
and
frstor
sub
mov
js
mov
dec
shl
cmpsb
push
dec
outsl
loopne
sahf
and
cmpsl
dec
mov
lods
sbb
pop
add
test
cmc
popa
sbb
push
lods
hlt
jg
adc
sbb
adc
aaa
dec
jb
and
adc
mov
subb
hlt
movsb
out
cmp
aad
and
enter
xorl
add
out
jge
repz
inc
scas
mov
push
enter
mov
stos
sub
leave
and
aam
movsl
push
xor
loop
jmp
jl
fdivrl
lock
adc
sarb
lahf
and
aam
add
adc
in
push
sub
push
and
lcall
mov
jbe
xchg
sub
nop
mov
fdivs
cld
imul
popa
and
sub
xor
and
mov
fsubrs
dec
cwtl
popf
and
fwait
and
stos
dec
xchg
aam
mov
jecxz
push
xor
data16
sbb
cmp
xchg
and
rolb
popl
mov
in
xchg
cs
jge
ljmp
and
or
jle
xchg
pop
out
cmpsl
and
xor
mov
cmpsb
das
mov
cmpl
or
pop
sub
and
xchg
xchg
lods
sub
pop
movsb
adc
mov
push
loope
mov
xor
mov
outsb
aam
push
add
notl
cmp
and
xor
mov
popa
lcall
fildll
pop
and
xchg
enter
mov
popf
movsl
out
xor
arpl
jbe
fsubl
mov
rorl
and
leave
jnp
xchg
cs
test
imul
jge
imulb
movsb
into
and
repz
je
fsubl
mov
lahf
mov
movsl
pop
and
cmp
mov
std
xor
arpl
cmp
ret
inc
inc
dec
or
scas
fwait
mov
jns
jmp
imul
mov
xchg
cmp
push
gs
lahf
jecxz
cli
test
std
push
cmp
lods
loope
fimuls
out
cltd
and
and
cmp
pop
rolb
pop
shrb
mov
movsb
orb
das
dec
add
aam
pop
xchg
cmp
test
push
decl
push
push
mov
sbbl
dec
mov
stc
adc
insb
adc
subl
pop
xor
data16
jg
and
insb
wbinvd
icebp
xchg
mov
outsl
push
adc
das
mov
scas
mov
pusha
loope
loope,pt
shll
mov
out
pop
and
icebp
xor
and
test
lods
int
pop
cmp
mull
mov
aam
cmp
and
jo
and
ja
insl
iret
and
outsb
xchg
push
and
aam
movsb
and
dec
pushf
divb
clc
scas
bound
pop
xchg
mov
loope
xor
and
ljmp
les
dec
xor
sahf
fwait
jb
push
aas
inc
mov
or
xor
and
js
mov
decl
adc
xchg
movsb
pop
nop
es
xchg
pushf
mov
push
lds
iret
enter
sbb
adc
das
pop
or
inc
fadd
stos
cmp
les
pop
and
adc
cltd
lock
cmp
sub
stos
subl
cmpsl
imul
and
push
pop
cli
mov
jae
movsb
mov
pop
jno
js
std
cmp
popa
push
ds
and
out
hlt
push
dec
dec
sub
mov
xor
sbb
xlat
daa
mov
lahf
popa
dec
jae
inc
and
sbbb
enter
and
xor
mov
arpl
and
lahf
inc
mov
out
sub
and
pop
add
cli
jg
add
and
mov
cmp
dec
ss
lock
mov
movsb
inc
xor
in
mov
adc
popa
inc
loopne
hlt
stos
pusha
scas
and
push
and
pop
popa
das
in
push
sub
sbb
ljmp
and
jo
dec
mov
into
lea
loope
test
mov
cmc
push
jl
cmp
pop
xchg
call
xchg
jne
xchg
mov
movsl
dec
and
xchg
fs
inc
push
out
jbe
rolb
ds
jmp
dec
cmpsb
push
arpl
mov
mov
dec
shrb
cmpsl
add
mov
fwait
and
fs
pop
sbb
push
jne
les
addr16
lock
fs
movsb
imul
fwait
adc
popf
mov
jp
push
cld
sbb
js
and
stos
push
mov
ret
mov
iret
or
aad
add
adc
adc
push
and
jnp
cmc
leave
mov
push
nop
jns
ss
dec
mov
adc
jge
les
and
jbe
mov
repnz
sbb
lret
pop
pop
and
or
cmpsl
iret
and
mov
fwait
cwtl
mov
and
call
inc
jae
popa
in
cs
mov
jp
cmp
and
and
dec
lret
push
adc
adc
sbb
pop
and
aam
jne
sahf
xchg
pop
mov
jbe
mov
jmp
or
cli
ficompl
inc
movsb
mov
or
loopne
inc
aaa
mov
inc
daa
addr16
sub
mov
cmp
fstpt
shlb
jmp
xlat
leave
ret
push
fists
and
rorb
pop
jecxz
sbb
xchg
xor
fwait
call
or
push
call
push
pop
jmp
and
ret
scas
pushf
jo
mov
pop
xchg
xchg
push
sub
lods
inc
out
mov
cltd
inc
pusha
std
and
ror
and
add
fiaddl
push
mov
test
mov
cmpsb
sbb
decl
xor
int3
ficoms
pop
and
pop
mov
lret
fiaddl
push
std
mov
lds
inc
push
pop
test
sahf
gs
and
insl
xor
and
not
pop
pop
and
pop
jae
dec
xor
movsw
mov
xchg
int
mov
sbb
push
push
mov
sbb
popa
mov
std
jp
mov
fs
ljmp
add
push
in
mov
insb
imul
data16
push
dec
rorb
sbb
cmpsb
fwait
mov
cmp
movsl
popf
add
and
sub
mov
adc
and
dec
inc
xor
lds
and
sbb
jne
pop
lock
mov
sub
adc
pop
bound
and
cmpsb
mov
aas
pop
insl
and
movsl
inc
int3
bound
xor
inc
xchg
sbb
cmp
sub
call
sub
mov
pushf
iret
and
jb
cltd
mov
push
cmp
pop
repnz
call
cmpl
add
dec
sub
loopne
mov
cmp
shll
test
mov
or
mov
jmp
imul
and
xchg
inc
movsb
push
aam
dec
leave
clc
adc
and
push
and
dec
arpl
cltd
insl
and
stos
push
jbe
ljmp
popf
pop
sub
add
out
fs
and
or
outsb
mov
cmp
pop
mov
pop
loopne
loopne
push
mov
mov
xchg
in
push
and
scas
into
mov
lock
aaa
push
add
mov
incb
fists
and
mov
nop
inc
aad
cmp
inc
repnz
and
and
and
insb
outsl
inc
jno
repnz
mov
shlb
dec
inc
clc
mov
and
rolb
jno
sbb
cmp
leave
ret
and
sbb
ja
daa
adc
xor
xchg
test
in
js
push
scas
inc
add
xor
jns
and
xchg
mov
push
mov
and
fistps
cmp
pusha
loop
aam
ds
inc
imul
mov
cmc
and
xchg
call
psraw
hlt
mov
or
add
mov
mov
test
push
pushf
bound
lds
lock
cmpsb
adc
push
push
lret
mov
push
fidivrs
jecxz
dec
ljmp
std
imul
sub
insl
jmp
inc
lods
aas
es
daa
aam
xor
cwtl
inc
mov
loop
fs
adc
cmpsb
insl
pop
outsl
pop
stos
subl
cld
sub
and
mov
push
adc
mov
les
negl
jb
lea
cld
into
inc
lahf
xor
daa
jp
xchg
lret
divl
push
insb
fsubl
imul
jecxz
xor
and
cmpsb
daa
dec
jg
and
mov
xchg
cmp
loopne
popf
xlat
imul
sub
jno
mov
iret
sub
movsb
xchg
test
loopne
pop
dec
mov
cmp
jno
out
and
jo
mov
lea
mov
ret
jb
pop
mov
jle
jmp
xchg
cld
int3
mov
sbb
jle
and
and
cmpl
lcall
jns
inc
sbb
ljmpw
mov
mov
sbb
dec
lea
and
add
pusha
cmp
js
stos
adc
mov
mov
shrb
mov
notb
and
lret
mov
and
mov
dec
mov
pop
es
mov
loope
cmp
out
arpl
cmp
mov
cltd
cmp
fidivrl
inc
lcall
adc
xor
lahf
lea
xor
popa
inc
dec
ret
mov
or
and
out
add
nop
and
orb
mov
stos
pop
clc
call
das
dec
add
js
loop
push
ljmp
cmp
out
test
adc
cwtl
mov
loop
xchg
sti
mov
inc
push
add
lret
cli
mov
add
adc
cmp
add
movsl
cmp
or
incl
sub
or
xchg
loope
sbb
xor
popf
sub
or
fisttpll
cmpsl
or
inc
dec
adc
ror
cmp
aaa
and
movsb
into
inc
shll
aas
mov
and
out
xchg
imul
jecxz
push
cmp
icebp
aaa
xor
push
enter
and
sub
sub
insl
jge
pop
xchg
vcvtsd2ss
arpl
cmpsb
add
push
movsb
cli
lret
inc
loope
mov
dec
out
xlat
popf
add
sub
notw
mov
sbb
mov
mov
cmpsb
jecxz
push
adc
xchg
mov
and
outsb
std
daa
mov
nop
inc
das
xor
pop
cmp
or
sub
push
jns
movb
pop
mov
ficoml
andb
sub
int3
and
jno
aad
bnd
and
and
sub
addb
dec
inc
lcall
fstpt
mov
jne
fcoms
test
sub
jl
movsl
add
popa
dec
push
inc
out
and
adcl
lods
sub
push
and
push
jae
xor
leave
push
sbb
and
mov
cmp
call
mov
jno
pusha
inc
in
adc
out
mov
orl
and
push
in
lds
pushf
inc
sbb
add
shll
dec
or
movsb
or
or
faddp
imul
jmp
mov
push
aad
jge
mov
dec
dec
out
repnz
call
add
and
pop
out
xor
mov
stos
js
mov
insl
adc
pop
loopne
aas
jns
push
push
sub
in
push
ja
lods
inc
push
and
add
or
dec
pop
sbb
mov
popa
jae
rclb
and
fsubrl
les
and
popa
xchg
xor
pop
jae
and
mov
lret
jge
movsl
cmpsb
scas
xchg
popa
add
cwtl
js
mov
lds
call
dec
fsts
xchg
xchg
dec
ficoms
inc
enter
and
jg
pop
cmc
push
orl
ret
stc
mov
iret
or
cwtl
lods
mov
and
cmp
sbb
and
dec
and
cmp
lds
mov
inc
lods
movsl
and
fsubrl
mov
lds
mov
sub
add
mov
and
cmp
mov
xor
and
xchg
dec
cs
jp
enter
pop
pop
inc
mov
lahf
and
jecxz
call
jae
mov
dec
sub
nop
rolb
xorl
ret
in
mov
pop
sbb
mov
cmpsb
test
nop
aas
cli
movsb
push
leave
in
sbb
dec
sub
xchg
add
sub
outsb
aad
push
sbb
bound
aas
jbe
subl
push
insb
cmovns
aas
ja
jmp
mov
std
push
cmp
cmp
xchg
aad
xor
psubsw
popa
in
sti
jmp
lahf
in
xchg
popa
shrl
mov
movsl
mov
xchg
pop
xchg
and
and
pop
leave
or
xor
xchg
hlt
jle
mov
push
lcall
mov
sub
jno
sbb
movsb
or
cmpsl
push
jl
out
stos
clc
sub
pop
mov
sbb
das
test
cwtl
mov
pop
jns
sahf
cmpsb
jb
xor
popa
mov
stc
pop
xchg
ja
jns
fstpt
fldl2t
adc
push
movsb
mov
call
xchg
movsb
mov
jns
push
out
and
jno
dec
and
push
lret
fnstenv
jmp
jge
mov
sub
scas
xor
nop
jno
adc
movsl
adc
popa
xor
xchg
lcall
sti
ds
in
and
bound
mov
cld
popa
test
inc
das
mov
pop
xchg
adc
or
adc
or
and
cli
lods
xchg
xchg
xchg
scas
fldcw
and
sub
aad
adc
sub
jne
xchg
jnp
adc
xor
pop
cmp
daa
stos
sbb
and
das
adc
paddsw
jmp
sbb
sbb
cmp
pop
scas
and
adc
imul
dec
out
popa
insb
in
mov
dec
es
test
pop
adc
and
stc
xor
jae
cmp
cwtl
mov
sbb
mov
push
std
loop
push
iret
loopne
and
pop
dec
xor
jmp
in
xor
ja
add
stos
aam
or
rorl
sub
push
idivl
push
in
cmp
dec
mov
in
push
mov
adc
push
sti
xchg
ljmp
jp
xchg
int3
inc
popa
push
test
mov
stc
pop
and
xchg
jge
les
cmp
into
fcoml
sti
push
xchg
leave
mov
cmpb
xchg
adc
pushf
xlat
pop
inc
mov
lret
sbb
call
and
out
xchg
mov
test
add
sbb
adc
outsl
cs
cltd
xorl
lea
jmp
pop
insb
and
movsl
pop
sub
xor
mov
pop
rorb
add
jno
leave
add
dec
sti
lds
lock
shll
and
mov
sub
pop
add
and
insl
jae
movsb
in
inc
push
rcrb
inc
lret
add
clc
cmp
push
dec
and
sarl
lret
xchg
and
mov
xchg
inc
nop
and
mov
sbbl
lea
jle
or
mov
push
or
mov
sbb
pop
gs
xor
mov
lahf
lock
ss
insb
popl
fsubl
andl
adc
int
jmp
cmp
xchg
push
xchg
and
popa
out
or
in
and
gs
push
sub
aaa
rcrl
cmp
push
stos
and
jmp
mov
addr16
push
dec
cmp
push
aad
sub
and
es
mov
cld
or
lods
xor
push
aas
sahf
popa
add
or
imul
fwait
sub
pop
std
aaa
mulb
dec
sub
dec
cmp
jae
and
pop
nop
iret
pop
jb
mov
lahf
xlat
pop
and
push
xchg
dec
jg
and
fldl
adc
mov
fidivrl
sub
out
jns
and
push
clc
insl
invd
fisubrl
sti
ss
jle
test
pop
mov
sub
rep
mov
jae
addl
movsl
xchg
xor
and
and
addr16
out
and
push
fs
and
filds
jecxz
fisubs
pop
and
sub
scas
jne
fwait
and
ret
aam
and
add
aas
shlb
pop
mov
and
xor
and
sub
sub
push
push
add
fwait
iret
cltd
dec
cmc
and
cmp
adc
shlb
scas
fsubrs
addb
inc
adc
and
xchg
test
mov
and
pop
xchg
xor
loopne
or
fists
cmp
sbb
push
sahf
jge
mov
movsl
and
jo
in
jne
rcll
inc
call
scas
lahf
out
cs
mov
inc
push
and
and
addb
out
mov
es
inc
outsb
and
ljmp
and
movsl
loope
mov
pop
and
out
push
adc
ljmp
aas
jb
and
cwtl
loope
cli
lds
and
hlt
mov
movsb
pop
dec
adc
jns
lds
pushl
daa
xor
sbb
push
popa
frstor
cmc
rcrb
adc
mov
inc
cmpl
and
sub
mov
inc
cmp
add
and
inc
jb
adc
mov
jg
adc
ret
adc
xor
popf
cmpsb
and
push
ja
dec
repnz
test
push
into
outsb
lds
mov
push
fnstsw
jecxz
iret
push
add
mov
mov
test
in
pusha
cli
stc
scas
xchg
ja
out
sbb
add
mov
and
aam
xlat
jno
push
outsb
and
and
out
data16
les
shrb
or
aas
mov
jmp
cld
loope
mov
inc
cmp
cltd
mov
and
mov
cwtl
cmp
repnz
hlt
and
or
shl
cmp
sti
call
ss
fisttpl
jge
shrb
icebp
xor
mov
push
lods
sub
inc
and
sbb
daa
ret
pop
mov
rorl
mov
fstpt
mov
repnz
jo
adc
pop
cmp
and
shrb
icebp
push
fisubs
lret
push
fwait
loope
xchg
rcll
lods
push
or
cmp
push
movsb
gs
filds
lods
in
dec
cmp
outsb
xchg
es
pop
rcll
das
imul
sbb
fdivs
jge
or
subb
xchg
mov
mulb
pop
daa
mov
push
xchg
fnstsw
push
pop
enter
and
add
into
imul
mov
mov
inc
lret
out
lods
out
cmpsl
inc
loop
cmp
ljmp
sbb
jne
loop
xchg
repz
es
in
and
cmp
scas
adc
xlat
outsl
xchg
sbbb
add
daa
negb
add
push
mov
and
jo
rorb
and
fstps
add
and
inc
adcl
and
inc
cmp
pop
mov
aad
out
fsubrs
aas
mov
mov
repnz
lahf
ljmp
mov
repnz
xchg
push
inc
movsb
int3
cmp
sbbb
imul
push
and
sbb
mov
out
add
testb
mov
mov
test
xchg
xchg
popa
pop
inc
jno
xchg
and
push
in
scas
fcoms
or
mov
mov
mov
cli
push
xchg
je
enter
fwait
sbb
into
hlt
sbb
sub
push
subl
pop
mov
mov
inc
movsl
es
mov
aaa
cmpb
sub
pop
mov
xor
add
and
loop
xchg
test
lret
push
add
sahf
adc
dec
shll
add
fistpl
xchg
add
int3
stos
push
jno
and
mov
movsb
jecxz
cmc
jge
lss
mov
cmpsb
jae
inc
mov
xor
mov
les
es
mov
mov
movsb
xor
leave
mov
cltd
jge
cmpsb
and
mov
mov
sbb
movsb
in
pop
out
cmp
stos
loopne
iret
add
pop
mov
inc
pop
test
movsl
push
sbb
ret
pop
std
jle
pushf
test
je
shll
add
add
out
jmp
or
mov
nop
xchg
popl
mov
xor
in
and
or
pop
sarl
scas
and
dec
jge
dec
imull
int
rcll
adc
push
lret
sbb
aas
xor
jns
dec
cld
pop
push
adc
mov
pop
lods
xchg
xchg
cmp
jae
dec
jge
andl
pop
xchg
push
xor
xor
out
cmp
cltd
or
mov
mov
add
cmp
imul
aaa
mov
shrb
jmp
push
and
push
lock
xor
pop
xchg
push
movsl
xor
loop
push
out
test
in
xor
fs
push
scas
test
pop
sub
cmpsb
fbld
push
inc
push
andl
dec
sub
mov
cmpsb
mov
fldl
xchg
popf
push
inc
int
add
mov
fdivrl
sub
daa
sub
dec
sti
and
and
std
adc
call
dec
mov
cmp
pop
xor
pop
lcall
addr16
and
flds
ljmp
push
sub
shlb
cmp
mov
push
and
mov
dec
scas
sub
or
ja
lcall
xchg
xchg
pusha
push
and
sbb
movsb
pop
outsl
and
stos
loopne
sub
andps
ret
xor
hlt
jp,pn
xchg
cmp
movsl
nop
call
das
xchg
cmc
jae
ret
mov
out
mov
jno
sub
movsb
pop
inc
adc
lret
cltd
and
lret
or
and
jae
jnp
rcl
dec
mov
mov
dec
pop
test
mov
add
inc
or
mov
and
push
movsb
mov
or
xchg
popa
sub
jp
int3
popf
in
and
inc
in
inc
jbe
and
iret
shll
dec
int3
sub
mov
jmp
sbb
in
and
mov
dec
divl
jns
xor
fcmovb
inc
leave
arpl
cmpsl
lds
jbe
pushf
andb
mov
push
xchg
mov
into
add
rcrb
and
or
and
fiadds
and
push
xchg
pop
pushf
cs
and
pop
mov
cwtl
push
fbld
test
dec
lds
and
je
pop
andb
into
leave
and
adc
call
jo
inc
mov
test
cmpsl
mov
xchg
lea
jo
sbb
popf
xchg
xchg
push
push
das
add
popa
sub
xchg
fcomp
mov
pop
mov
jno
aas
jb
push
sbb
ja
and
repnz
xor
bound
clc
push
inc
or
shrl
call
cmovs
mov
fs
and
dec
and
cltd
sub
aas
and
push
sbb
and
aad
and
lret
mov
pusha
cmpsb
sub
or
cmpsl
push
push
stos
and
jecxz
push
insl
mov
or
jb
sarb
mull
mov
scas
jmp
and
sbb
adc
mov
sub
pop
mov
dec
inc
js
push
cmp
testb
and
xor
mov
mov
sub
adcl
jle
push
push
out
xchg
and
rolb
jge
sub
push
enter
lods
in
movsb
xor
inc
loope
js
out
loope
iret
enter
mov
insl
sbb
and
test
sti
sbb
and
rolb
or
cmpsl
roll
sbb
adc
cmp
and
aaa
or
adc
sti
and
sbb
jle
and
insb
sub
dec
mov
adc
mov
cmp
xchg
insl
pop
das
dec
push
cmp
ds
js
test
out
and
jl
inc
mov
mov
out
lea
mov
rcl
lods
pop
cltd
fwait
and
ret
cmp
pop
and
sub
mov
or
pop
and
nop
sbb
sub
dec
fprem1
ficomps
scas
inc
push
es
jle
mov
xor
sub
and
movsl
std
mov
lcall
mov
jg
mov
and
rcrl
xchg
aam
cmpsb
and
es
push
mov
jns
rcll
out
jno
push
push
sub
mov
sbb
cmp
int
cmpsb
cwtl
lcall
push
sbb
or
cmp
pusha
mov
mov
and
cltd
decb
jb
loope
jae
mov
pop
faddl
lcall
nop
mov
out
fsubrs
xchg
loope
cmp
insl
sbb
and
dec
mov
add
fwait
test
mov
cmpsb
enter
in
movsb
inc
and
or
stos
andl
popf
mov
and
dec
sub
mov
rolb
fwait
call
lods
or
jmp
mov
repnz
pushf
lods
and
or
xor
adc
loopne
or
jecxz
mov
test
insb
jge
pushf
add
push
sub
and
popa
xchg
fsubrs
pushf
call
es
and
push
mov
enter
aas
jecxz
mulb
repnz
cld
test
add
ds
push
xor
iret
leave
push
xor
and
push
sti
loopne
in
cmpsl
das
push
cmp
ja
es
xchg
xchg
pop
repnz
and
fsubs
cmc
mov
ljmp
mov
test
xchg
out
loope
icebp
jne
popl
imul
inc
mov
sub
jno
adc
and
in
lds
pop
mov
inc
cltd
lahf
and
stos
adc
mov
xchg
shlb
cmp
push
incb
and
stos
adc
xchg
jae
jno
and
pop
aaa
mov
mov
cmc
loop
aas
adc
nop
push
sbb
inc
jo,pt
xchg
push
and
and
jne
scas
push
inc
and
add
stos
test
repz
bound
cmpsb
mov
insl
fsubs
pop
push
xchg
and
dec
lret
pop
and
mov
xor
daa
bound
jg
movsb
fists
ret
or
xor
inc
loopne
shlb
mov
sub
push
hlt
and
cmc
mov
xchg
and
pop
adc
repnz
dec
and
xchg
jns
jnp
enter
cmp
mov
jno
add
mov
xlat
imul
xor
int
push
call
mov
and
popf
pop
adc
and
mov
cmp
sub
or
cltd
ja
add
scas
out
push
sahf
test
mov
aas
sbb
dec
dec
incb
mov
pushf
mov
inc
fldpi
xchg
and
cltd
inc
sbb
and
hlt
xchg
shlb
scas
dec
mov
mov
or
sub
mov
push
push
cmp
movsb
sahf
aas
inc
dec
jmp
out
adc
in
and
rcr
mov
loope
js
sub
mov
loopne
push
cmpsb
mov
lret
data16
push
lds
bound
insl
loope
adc
cmp
std
lods
lea
cmc
and
mov
sbb
inc
aad
or
dec
cs
add
sub
dec
xor
inc
and
pop
cmpsl
std
ret
lcall
mov
adc
and
out
loop
or
xchg
and
movsl
pop
xlat
xchg
inc
mov
mov
push
inc
scas
or
mov
shll
cwtl
and
fidivrl
in
and
pop
pop
sbb
push
les
rclb
ds
xchg
push
xor
xchg
fwait
mov
cmpsb
add
clc
popa
push
lds
out
imul
xor
aad
push
lock
rorl
dec
cwtl
sti
and
fmulp
es
pop
ljmp
and
and
jne
or
mov
loope
and
adc
shll
imul
mov
mov
adc
shl
mov
adc
or
push
popa
cmp
push
xchg
test
adc
jge
iret
mov
pushf
jae
adc
mov
push
sub
into
mov
sbb
adc
scas
or
ss
ds
mov
arpl
mov
pop
and
cmc
fnstsw
xor
test
add
imul
xchg
xor
add
jns
xlat
and
outsl
and
mov
fwait
test
push
and
pop
cmp
pcmpgtb
jmp
addb
cmp
mov
xchg
sbb
inc
int
and
arpl
and
add
fisubl
pusha
cs
into
call
stos
push
test
jmp
sarl
rolb
decb
xchg
dec
xchg
les
jmp
rorl
jl
mov
xchg
push
cmpsb
and
cs
sub
inc
jg
or
cmp
xchg
adcl
in
or
fisubs
jns
xchg
xchg
iret
pop
add
and
loope
jbe
lahf
das
aaa
out
lods
adc
mov
jp
add
adc
mov
das
and
insl
jne
cmp
mov
push
and
das
call
lea
mov
and
int
or
orl
adc
sahf
sbb
push
adc
ljmp
sbb
jle
inc
pop
pop
popa
ja
adc
sub
and
aas
insb
insl
js
stc
les
std
test
movl
mov
lahf
sbb
and
push
shlb
popf
arpl
lcall
mov
add
lods
adc
and
pop
mov
dec
mov
mov
mov
stc
lock
xor
inc
and
mov
cmpl
dec
int3
pushl
pop
cmp
jnp
adc
fildll
mov
xor
or
outsl
sbb
sub
xlat
mov
mov
or
dec
ficoml
pop
orl
nop
mov
or
xchg
mov
imul
push
scas
and
xchg
out
dec
and
inc
or
xchg
mov
cmp
sub
or
test
sub
inc
adc
aas
fnstenv
int
push
addl
test
loopne
sub
mov
adc
aas
fcmovu
out
push
addr16
mov
and
sbb
inc
call
xchg
dec
and
pop
jmp
or
inc
or
iret
and
andb
add
insb
aaa
and
add
neg
cltd
fcompl
mov
fists
movsb
je
mov
and
xchg
arpl
iret
adcl
jp,pt
fldl
mov
push
mov
popa
outsl
sub
adc
loopne
sub
clc
fistpl
and
stos
fcmovb
xor
mov
dec
jl
mov
rcll
push
loope
mulb
jmp
xor
nop
and
add
or
cmc
popf
mov
mov
daa
and
out
dec
jp
mov
loopne
lahf
jno
scas
js
mov
push
xchg
jno
mov
inc
rorb
or
and
and
minps
jns
jle
jmp
or
lahf
or
mov
lea
cmpl
inc
and
jecxz
mov
push
cmp
and
push
sub
xchg
xor
and
mov
mov
xor
add
mov
cmp
aam
outsl
call
xor
mov
imul
rorl
test
and
test
popa
mov
test
pop
xchg
cmp
and
lock
add
mov
lcall
sub
jo
cmpsb
or
ss
lcall
aas
mov
adc
or
hlt
add
ficomps
fwait
lcall
insl
xchg
sub
shrl
mov
mov
test
push
jnp
aaa
daa
js
sbb
push
or
xchg
lea
adc
popf
into
in
cmp
and
adc
cld
inc
ret
std
pusha
test
mov
cmp
aaa
mov
fsubs
add
fcoml
push
dec
aaa
cld
or
xchg
test
adc
and
bndldx
sub
mov
mov
jns
cmp
and
dec
shrl
loopne
and
test
mov
xor
mov
jge
and
mov
and
mov
push
insl
dec
xchg
das
cld
pop
mov
icebp
mov
mov
sarb
scas
sbb
mov
and
js
xchg
sbb
dec
call
xlat
sub
add
mov
fisubl
or
or
cltd
mov
rcrb
add
or
and
inc
cmc
jl
xchg
mov
xor
repz
ss
jp
popf
add
rclb
jb
movsb
imul
or
repnz
push
imul
mov
mov
mov
push
movsb
scas
cmp
sahf
int3
in
popa
enter
popa
inc
out
mov
mov
push
pop
iret
xchg
sub
and
mov
adc
push
and
pop
shlb
mov
jp
fmuls
in
imul
mov
movsl
cmpb
mov
nop
xor
mov
or
out
test
mov
cmp
lods
popa
jae
pop
loop
jnp
insl
rolb
in
mov
mov
pop
flds
push
inc
mov
jno
fsub
xchg
int3
jl
divb
stc
mov
cmp
mov
sbb
pop
or
push
cld
xchg
lret
xlat
mov
mov
repz
push
or
add
and
pop
fisttpll
and
inc
mov
push
data16
push
or
popf
gs
dec
fucom
and
fsubs
dec
insl
sbb
push
in
inc
stc
decl
mov
mov
adc
dec
xchg
jmp
mov
or
ficoml
movsb
les
call
lret
adc
push
mov
pop
and
and
xlat
sbb
cwtl
out
cmp
and
xchg
rcll
call
mov
subl
stos
das
daa
movsb
mov
push
in
mov
cmp
lahf
and
jbe
movsb
or
and
mov
xor
movsb
push
les
nop
jno
fs
mov
aas
sarl
shlb
or
aam
aad
mov
adc
xor
and
cwtl
xchg
or
inc
test
imul
mov
aaa
jle
xchg
sbb
mov
xchg
pop
and
xchg
mov
in
ficoms
in
fsubl
into
or
outsb
mov
movsb
aas
pop
mov
sub
adc
aaa
inc
insl
shlb
and
test
and
lock
leave
mov
xor
mov
test
or
inc
lcall
and
xor
and
test
push
dec
nop
int
and
hlt
popf
xchg
and
fs
push
das
jl
je
cwtl
aad
mov
fstp
sub
cmp
jno
xchg
movsb
maskmovq
mull
mov
lods
cmp
and
stc
xchg
push
sbb
jne
iret
pushf
pop
sub
xorl
xchg
cmp
shll
pop
and
dec
gs
adc
push
and
push
jle
sub
popf
fwait
and
dec
sub
add
mov
ret
fstps
sub
and
popa
push
sahf
mov
xor
xchg
les
adc
stos
out
jp
inc
outsl
daa
std
push
or
xchg
cmp
stos
mov
push
mov
fiaddl
emms
lahf
cmc
jmp
out
inc
xor
mov
push
icebp
jp
mov
fwait
jne
and
cmp
jmp
dec
and
xchg
imull
xor
and
pop
jmp
xor
adc
and
and
or
xor
es
mov
daa
outsl
stc
mov
add
jmp
imul
data16
cltd
and
imul
pop
out
ret
add
ss
push
mov
insb
push
lods
inc
sbb
and
and
jge
and
jmp
inc
xchg
fs
pop
inc
cmp
pop
in
in
and
icebp
mov
cwtl
insb
mov
xor
test
test
pop
inc
xchg
js
or
enter
popf
es
insb
mov
cmc
add
repz
outsb
pop
sub
fldt
test
xchg
insl
push
std
xlat
push
sbb
mov
mov
sbb
das
rcrl
pop
push
xor
mov
xchg
lds
mov
dec
add
and
dec
lods
mov
mov
mov
clc
movsl
popf
mov
repz
cmc
in
add
cmpsb
or
cmp
add
cmp
rclb
icebp
imul
mov
mov
and
scas
cmpsl
addr16
aaa
jnp
add
loopne
or
pop
and
xchg
imul
inc
in
mov
scas
fcmovne
xor
aas
inc
and
repnz
lock
dec
cmp
lahf
push
cmc
stos
xor
xlat
mov
xor
aas
sbb
rcrl
and
mul
xor
mov
int3
inc
push
cltd
or
add
iret
push
jmp
cwtl
and
sbb
fcmove
popa
in
repz
in
in
out
mov
or
jno
sbb
fcomps
cmp
mov
icebp
pop
push
adc
add
xchg
movsb
in
mov
dec
mov
popa
ret
fmulp
dec
and
stc
push
sub
fldenv
lcall
fcmovnbe
jns
mov
stos
bound
xchg
or
dec
mov
push
lds
xor
in
dec
sbb
insb
lea
mov
cmp
xchg
push
add
adc
mov
andb
pop
and
fucom
mov
call
pop
aas
xchg
stos
and
push
fwait
fs
test
push
xor
jno
insb
arpl
dec
mov
inc
xchg
test
pop
pop
push
pushf
jmp
inc
mov
or
mulb
jmp
jecxz
frstor
rolb
das
fidivrs
loopne
ds
and
or
imul
and
sahf
inc
das
lds
ret
mov
test
push
xchg
movsl
out
in
and
sbb
test
xchg
lret
ret
outsl
sahf
add
push
mov
inc
scas
inc
lea
movsb
mov
pushf
negb
xor
mov
imul
xchg
jbe
push
rcrl
sub
mov
add
inc
outsb
push
sub
scas
call
cmp
shll
mov
adc
jmp
mov
cmp
and
mul
sub
or
out
push
popf
sbbl
add
push
and
fmul
jmp
fidivl
clc
cmpb
fdivrl
sbb
das
and
jbe
adc
fldenv
mov
or
lret
xchg
outsl
dec
mov
arpl
push
add
faddl
cmp
and
xchg
js
mov
jae
shrb
mov
jecxz
andl
pop
mov
hlt
jbe
jbe
and
andb
xor
insb
pusha
or
test
test
jmp
xor
jmp
mov
push
jge
dec
rol
clc
and
shrl
lret
les
incb
adc
add
push
fsubrs
leave
sub
and
loopne
lahf
and
xor
lea
inc
inc
bsr
xor
test
ss
mov
push
and
xor
insb
xor
adc
cmpl
xor
jno
xchg
and
push
sti
les
imul
fs
call
fbld
and
js
and
outsl
mov
pop
hlt
popa
push
movsb
mov
xchg
sub
pop
jge
and
or
push
add
push
mov
cmp
inc
or
lcall
push
jo
mov
and
inc
mov
out
xchg
insb
dec
mov
into
mov
xchg
or
xchg
scas
jecxz
jg
sbb
xchg
push
and
fistps
inc
push
mov
hlt
movsb
adc
sahf
ja
std
xor
ds
push
xor
repnz
and
jb
jne
mov
inc
dec
mov
dec
or
adc
and
and
push
jns
pop
int
dec
loopne
es
push
mov
xchg
and
and
sbb
mov
and
scas
das
mov
cmpsl
add
call
add
push
add
loop
and
data16
sarb
and
cld
jg
pop
and
stc
mov
mov
cld
lahf
shlb
pop
add
or
sbb
loopne
call
jmp
fmull
jg
sahf
aam
mov
mov
sub
sub
out
and
cmp
lock
adc
sbb
imul
pop
stos
mov
add
xchg
inc
dec
test
outsl
imul
push
cltd
mov
data16
push
pop
push
and
cmp
outsl
push
aad
pop
lods
out
fsubs
inc
mov
push
jbe
pop
mov
addr16
cmp
xor
mov
inc
sahf
sub
hlt
stc
mov
push
repz
and
pop
popa
xor
aam
adc
cmpsb
lcall
out
push
iret
dec
sub
dec
sub
adc
ljmp
dec
pop
pop
inc
stc
sub
sbb
sub
push
das
and
mov
clc
and
in
cmp
andl
mov
fidivrs
inc
in
iret
imul
push
ja
les
adc
or
jle
xor
sbb
mov
out
shlb
fs
mov
and
xor
sub
cmp
enter
sbb
subl
inc
and
inc
cmp
pop
and
cltd
lea
xchg
andb
sbb
mov
mov
sub
and
leave
insl
frstor
mov
sub
in
and
dec
nop
mov
mov
dec
and
std
lods
cmp
andb
sub
mov
xchg
xchg
jmp
les
mov
fdivr
adc
sbb
stos
out
add
and
adc
fsubl
or
mov
cmp
jbe
rcll
jle
notb
and
add
adcb
mov
cmp
daa
fsubl
int3
test
xor
xorl
cltd
subb
jl
test
int
jmp
mov
xchg
xchg
xchg
add
ret
dec
sti
cmp
cmp
inc
out
cmpsb
cmc
int
mov
mov
and
sbb
sub
outsb
jae
gs
daa
cmp
aas
or
mov
and
jl
cli
and
es
pop
jle
pusha
mov
test
insl
pusha
ret
mov
adc
lods
xor
push
xor
mov
iret
rcll
lea
cli
mov
enter
dec
mov
and
inc
sub
mov
push
xchg
jae
and
fcomps
in
add
mov
stos
lea
mov
lea
xor
pop
adc
pop
and
outsb
inc
mov
mov
test
aad
mov
in
mov
cmp
and
sub
test
inc
xchg
imul
adc
and
incb
sub
mov
jecxz
test
popa
dec
and
pusha
enter
and
or
movsb
mov
test
cmp
and
pop
cli
popf
pop
jmp
xchg
movsb
testb
mov
mov
mov
test
inc
cmp
pop
mov
mov
mov
pop
add
sub
sub
icebp
test
add
leave
loopne
xchg
mov
pop
nop
popa
xchg
mov
and
cmc
hlt
and
sub
aas
pop
pop
mov
stos
adc
subl
inc
inc
out
lock
inc
inc
and
enter
shlb
mov
mov
mov
popa
jno
jp
add
mov
cmpl
adc
inc
mov
xorb
dec
movzwl
xor
jge
shrb
popa
xor
mov
repnz
cmp
mov
pop
dec
mov
jnp
mov
dec
and
adc
push
and
inc
ljmp
stos
sar
inc
pop
icebp
int
and
pop
ret
sbb
fwait
xchg
push
ja
push
pop
insl
and
add
and
xchg
xchg
sub
mov
add
inc
inc
add
and
shrb
popa
cmp
mov
dec
adc
jle
and
addb
rcrb
sbb
cmp
mov
mov
and
mov
push
adc
xor
inc
sub
push
fucom
sbb
push
repz
push
dec
mov
and
sarl
in
ljmp
and
out
stos
lock
or
mov
mov
ljmp
adc
movsb
and
push
sub
sbb
ret
jp
nop
pusha
popa
and
ljmp
xchg
fwait
stc
movsb
dec
xchg
mov
and
sbb
push
add
pop
int
or
icebp
pushf
add
lods
mov
call
jl
mul
shrb
push
imul
inc
bound
mov
xchg
call
sub
aas
std
les
movsb
cltd
mov
dec
or
lahf
fsubl
in
cwtl
sub
mov
and
add
push
dec
dec
lcall
into
pop
daa
mov
call
and
popa
fisttpl
inc
pop
jl
and
jmp
cmpsb
shl
mov
and
and
enter
jb
outsl
pop
mov
mov
fistpll
push
test
adc
inc
loope
ret
movsl
jns
fildl
aad
xor
enter
jns
mov
rep
and
pop
cld
test
rorb
lea
inc
mov
and
xchg
loope
aas
push
xchg
nop
cmc
lret
pop
ja
mov
jns
xchg
lods
or
lahf
sti
push
xchg
mov
and
adc
std
dec
adc
and
jbe
ja
and
xor
les
and
push
repz
inc
out
and
mov
nop
inc
jg
movsb
adc
xor
fnstenv
cwtl
lock
pop
andl
es
scas
and
and
and
ja
mov
addr16
lcall
pop
into
adc
in
lahf
popa
or
mov
sub
jp
inc
flds
sarl
in
sbb
dec
imul
fwait
mov
push
sub
arpl
daa
mov
mov
adc
add
and
xchg
pop
push
and
outsl
pusha
mov
scas
xchg
mov
dec
lea
mov
and
inc
cwtl
int
lret
insl
mov
add
icebp
sbb
dec
add
xchg
out
and
mov
pop
sbb
add
and
push
mov
or
xor
adc
cmp
inc
xchg
xchg
jb
shll
ljmp
and
add
test
xchg
inc
fwait
sub
aas
or
imul
dec
shrb
mov
nop
xor
xchg
lods
repz
or
cmpsl
subl
hlt
xchg
jae
and
add
mov
imul
pop
sub
jo
adc
shll
dec
pusha
mov
xchg
ret
cwtl
jle
cltd
and
mov
in
and
mov
gs
adc
fmuls
cmpsb
mov
pop
loop
cmp
scas
gs
ret
in
and
aaa
mov
and
call
jmp
jmp
mov
push
pop
xchg
pushf
mov
cld
stos
and
mov
bound
add
jmp
test
pop
xchg
or
cmp
push
and
popf
addr16
pop
shll
loopne
or
lock
push
sar
popa
xor
mov
lods
andl
and
leave
loop
insl
jne
dec
add
jae
and
outsb
in
cmp
push
push
and
out
mov
pop
dec
and
loopne
icebp
lahf
pop
stc
and
ds
inc
int3
dec
fcmovbe
and
scas
mov
sbb
dec
es
inc
addl
test
and
push
fmull
movsb
mov
nop
mov
test
cmp
push
and
movsb
lahf
mull
iret
xor
and
jne
jns
add
mov
cmpsb
gs
cmp
popa
sub
xchg
addr16
mov
and
sbb
imul
inc
in
lea
cmp
and
jnp
into
dec
clc
mov
dec
sub
mov
and
and
dec
jp
and
fbstp
and
je,pt
pop
negl
and
lahf
or
fcmovu
pop
and
jae
mov
sbb
and
sub
dec
cmpsb
sub
mov
shlb
jle
fsubrs
mov
das
cmp
ljmp
cmpl
and
aam
push
sub
fadd
and
adc
arpl
pusha
mov
and
inc
adc
sub
faddl
movsl
ss
dec
mov
andb
popf
ja
testb
int
fdivs
add
scas
je
loope
pmulhuw
mov
jae
push
xchg
add
mov
and
inc
psrlw
fistps
push
scas
fstps
mov
dec
mov
or
and
loopne
jbe
jns
push
mov
sub
lods
xlat
push
and
mov
fisubs
mov
xor
and
and
cltd
inc
mov
sub
sub
fisubrl
in
inc
rcrl
jl
lret
pusha
test
push
addr16
and
inc
scas
adc
lds
scas
and
cs
sbb
aam
jo
fldt
xchg
xor
cld
popa
scas
pop
xor
cmp
cmp
jae
dec
sbb
or
mulb
mov
loop
pop
and
add
fsubl
dec
jnp
neg
hlt
cmp
push
daa
movsb
ret
scas
push
or
xor
incb
ja
cwtl
mov
inc
cmpsl
enter
and
into
add
jno
data16
scas
test
nop
dec
add
shlb
cld
out
fldcw
in
sbb
jl
in
or
push
jp
daa
les
pop
xor
sub
and
std
loope
jmp
popf
test
orb
das
gs
mov
icebp
into
and
pop
xchg
out
rolb
and
xor
aaa
and
adc
mov
fbld
stos
or
gs
shlb
mov
pushf
jecxz
addr16
mov
pop
test
faddl
pop
repz
fsubrs
leave
jl
sub
rcrl
jle
and
mov
sbb
dec
imul
dec
and
push
inc
nop
aad
fnstsw
das
jg
or
repz
add
and
dec
lds
data16
sbb
pop
adc
and
xor
and
mov
scas
and
lret
cli
cld
sub
mov
or
scas
inc
outsb
inc
aas
sub
insl
call
jge,pn
jae
jg
aam
and
mov
xchg
dec
dec
pop
imul
push
lea
scas
ds
inc
add
jge
mov
mov
pop
out
mov
push
incl
mov
push
jno
sub
cltd
jge
and
divl
fildll
and
icebp
pextrw
and
mov
xchg
sub
in
xchg
mov
jecxz
jge
xlat
adc
ja
and
xor
scas
fcomps
xchg
loop
jns
popa
cmp
mov
call
push
and
sahf
inc
pop
mov
dec
mov
and
add
out
mov
jbe
adc
jb
out
sbb
xor
cld
lods
ja
sub
movsl
subb
popf
adc
and
addr16
push
iret
pop
and
aas
sbb
add
jne
popf
cmpsb
push
and
in
cmpsl
ret
sub
test
xchg
add
push
popa
nop
cmpsb
sahf
push
imul
in
ret
cmp
mov
out
cmpsb
pop
xor
and
push
iret
mov
and
dec
pop
mov
mov
aas
mov
mov
inc
shlb
outsb
scas
cli
cwtl
lods
mov
push
mov
mov
movsb
enter
adc
cmp
mov
cmpl
mov
sbb
imul
add
cmp
jbe
insb
aam
out
add
popa
insl
and
push
int
in
mov
and
aas
ja
mov
and
out
jle
and
add
mov
xchg
das
push
call
fistl
add
mov
sbb
xor
dec
icebp
add
jge
pop
sar
jl
xor
dec
scas
jp
pop
and
sbb
mov
sahf
frstor
sbb
adc
roll
mov
popa
or
push
cmp
add
sbb
daa
pusha
mov
push
push
xchg
lcall
sbb
inc
movsl
stos
mov
adc
pop
mov
test
aam
xor
add
bound
rol
popf
and
into
push
popa
dec
lret
cmp
mov
int3
jb
jns
loope
or
add
sahf
pop
sub
lret
and
sbb
dec
fst
mov
mov
cmpsl
mov
add
sub
inc
pop
sub
add
xor
cli
test
xlat
les
insl
ljmp
insb
pop
movsl
and
cltd
psubusb
inc
pusha
nop
jl
inc
and
flds
push
in
mov
inc
mov
lds
imul
aaa
inc
jle
pop
and
ljmp
lods
jge
mov
shrl
pop
and
jo
inc
and
mov
movsb
data16
negb
movsb
jnp
js
gs
popa
into
or
xlat
mov
imul
mov
mov
pop
fidivs
and
sub
adc
loop
xchg
push
subb
stos
adc
mov
inc
and
push
xor
mov
outsb
sbb
out
pop
fisubl
out
test
sub
and
mov
xor
cmp
subl
push
fldcw
jo
sti
ljmp
cmpsl
xor
pop
test
dec
xlat
pusha
and
cld
dec
and
sub
jmp
pushf
pop
fnstcw
fisttpl
and
ds
lret
mov
add
popa
mov
int
ficoms
and
mov
pop
and
aas
ret
outsl
movsl
cltd
in
and
jns
push
adc
mov
xor
movsl
lds
lahf
add
push
mov
mov
and
leave
and
mov
inc
das
and
cmpsl
in
dec
sbb
andb
pop
fwait
dec
pushf
xor
inc
and
push
push
divl
mov
out
pop
roll
add
lds
icebp
fs
lret
enter
sahf
ret
and
and
or
les
mov
sbb
pop
and
or
int3
jp
fstpt
scas
pop
sbb
loope
inc
xchg
push
mov
inc
movsb
test
cmp
jbe
aad
lods
pop
or
subl
repnz
lea
mov
aaa
sub
and
notl
popa
daa
pop
cmc
push
bound
and
les
jmp
pop
je
and
cmp
insl
cld
push
mov
mov
adc
sahf
pusha
fbstp
mov
pop
push
mov
lcall
pop
scas
and
hlt
inc
test
pop
lret
sbb
insl
and
cmp
rcrb
movsb
sub
sub
popf
xor
and
sub
bound
fistl
fsubl
testb
and
and
push
inc
andl
or
add
and
in
jnp
neg
and
jns
lods
and
mov
xchg
push
ret
mov
sub
jo
add
bound
cwtl
xor
movsl
xchg
stc
lds
add
jge
sub
out
and
movsb
jb
xchg
sti
lret
pop
and
sub
icebp
cwtl
mov
inc
jno
or
mov
mov
push
or
mov
mov
ds
mov
and
jle
and
sub
mov
int
push
add
dec
mov
and
xor
mov
cmp
add
sti
shll
shlb
test
test
xchg
leave
loop
jg
inc
int3
xor
mov
mov
dec
test
dec
iret
xchg
mov
pop
loope
cli
aas
leave
mov
rcl
movsb
out
jmp
sub
ret
andb
xor
inc
sbb
push
mov
loop
jne
sub
and
nop
pop
push
aas
mov
out
adc
addr16
cmpsl
sub
sbb
test
aad
pop
test
dec
push
xor
and
inc
clc
jmp
and
mov
mov
cmc
out
and
sbb
cld
cmp
push
jno
add
fimull
and
sub
jecxz
flds
mov
fcoms
cmp
lahf
xchg
xchg
and
and
mov
loop
or
inc
mov
dec
xor
mov
mov
pop
cmc
icebp
and
lahf
ret
and
addl
sub
jnp
fmull
cmp
xor
imul
test
mov
sbb
mov
stc
dec
adc
dec
scas
test
imul
mov
mov
popa
pop
mov
mov
xor
sbb
arpl
jae
pop
cmpsl
mov
repz
sub
and
insb
call
xchg
test
push
pop
xlat
popa
push
enter
mov
xchg
add
mov
call
xchg
std
and
cs
popa
ficompl
inc
sahf
and
jge
mov
mov
push
aas
cmp
and
and
mov
shrb
movsl
cli
cwtl
aad
and
mov
jmp
inc
repnz
inc
enter
sti
popf
xor
and
scas
push
mov
scas
je
stos
or
test
and
addr16
mov
jae
ret
mov
popa
mov
aas
dec
xor
and
push
mov
lcall
test
and
or
mov
push
out
lods
inc
mov
int3
inc
mov
cmp
xchg
mov
dec
jmp
and
mulb
inc
inc
mov
mov
std
test
daa
and
sti
fs
and
and
inc
mov
inc
jg
xchg
jae
imul
ljmp
aaa
pop
push
and
push
lcall
sbb
xchg
insl
and
aas
shll
xchg
mov
mov
into
mov
pop
test
popa
fsubl
add
insl
lcall
ja
xchg
add
jbe
jno
adc
mov
sar
dec
adc
inc
and
sti
enter
xchg
test
push
shlb
loope
lcall
xorl
cmp
mov
xor
sub
testl
leave
and
mov
das
mov
insl
scas
outsl
popa
test
push
insb
cmp
std
sub
mov
push
and
mov
add
test
cli
cwtl
imul
mov
sub
pushf
jle
mov
and
adc
daa
sti
sbb
cs
cmp
and
inc
push
sysret
loope
jge
shll
dec
jnp
fs
and
lret
xor
pop
push
add
dec
lcall
xor
fwait
jle
and
addb
push
test
aas
xchg
jecxz
inc
or
and
shll
inc
and
mov
mov
jo
pop
es
jl
xor
loope
mov
lcall
mov
roll
lret
push
jb
sbbl
xchg
xor
fs
push
mov
cmc
mov
das
and
sahf
xor
daa
mov
shrl
insl
lcallw
adc
inc
mov
and
enter
xor
dec
xchg
and
test
cmc
push
cmp
adc
mov
fsts
and
aad
mov
call
and
mov
and
lahf
jns
and
out
and
jo
mov
js
xchg
sbb
push
sbb
add
sar
pop
pop
jns
out
loopne
push
cmp
faddl
mov
and
test
lods
shl
rcr
jecxz
mov
push
dec
jns
or
and
into
xor
or
xchg
cmpsl
cmp
add
and
push
aad
push
push
sub
mov
ja
cmpsb
dec
and
and
mov
cmp
mov
inc
inc
ret
and
xor
out
dec
jns
mov
cmp
add
jp
push
and
cwtl
das
add
in
mov
lea
adc
sbb
pop
mov
sbb
popf
insl
adc
push
push
ret
loop
adcb
mov
nop
cld
aam
mov
out
lods
insl
or
insb
and
inc
mov
shr
out
adc
xchg
and
add
popf
test
and
push
imul
inc
inc
mov
and
cli
sbb
add
xchg
cmp
addr16
lods
mov
push
dec
repz
sbb
mov
mov
dec
mov
sub
and
jl
sbb
or
xchg
add
mov
inc
mov
add
pop
mov
std
mov
cmp
add
jmp
and
shlb
out
leave
lret
out
pop
outsl
jecxz
aad
test
cmpsb
pop
sub
sbb
pushf
xchg
mov
fists
es
call
lret
push
les
mov
push
enter
push
fists
xor
push
popf
sub
gs
adc
jae
xchg
jne,pt
dec
pop
xchg
and
lcall
daa
push
popf
xchg
lret
push
cmp
push
sub
add
push
daa
popa
xor
inc
test
cli
dec
xchg
idivb
xchg
add
inc
pop
out
js
clc
and
jno
and
es
mov
adc
sarb
adc
icebp
clc
pop
pop
dec
push
insl
mov
add
shlb
mov
mov
orl
and
fildll
daa
and
pop
out
rol
lods
mov
cmp
mov
sbb
shrb
jo
fmul
pop
aas
lock
les
dec
xor
and
vpand
and
fs
nop
in
push
jge
mov
mov
repnz
jp
or
mov
lahf
and
ret
dec
pushf
test
sub
adc
sub
cwtl
mov
dec
cmc
jmp
addl
pop
lea
fistpll
mov
iret
out
fcoml
push
je
xchg
insb
inc
mov
and
adc
dec
and
dec
pop
out
sub
add
movsb
sbb
out
cmp
popf
in
push
and
pop
mov
push
int
nop
jl
sarl
inc
call
mov
xchg
pop
xchg
sub
lea
ljmp
or
incb
lret
and
lahf
or
inc
js
jmp
sbb
frstor
mov
or
mov
inc
xor
and
loopne
stc
aas
jo
ds
jns
loop
out
mov
test
jge
dec
ret
xor
shrb
add
lods
movsb
bound
imul
push
xor
xchg
push
out
xor
repz
sbb
nop
inc
loope
and
lea
fbld
test
shl
or
subl
lods
add
push
test
je
xchg
xor
and
hlt
or
cwtl
in
adc
popa
jns
loopne
push
shll
enter
dec
imul
cmp
lods
and
xchg
cld
jnp
test
jmp
dec
cmp
and
fs
insl
sbb
rcrb
xchg
outsb
mov
push
and
jle
cli
aaa
mov
outsl
inc
movsb
inc
into
sub
and
lcall
popa
or
sarl
mov
popf
cmp
or
shrb
inc
iret
pop
add
xchg
orb
and
sbb
lahf
jns
mov
xchg
lcall
js
roll
outsl
lahf
mov
frstor
add
add
lret
and
xor
sbb
and
adc
mov
jge
sub
cwtl
adc
int3
hlt
mov
mov
pop
adc
inc
lea
fucompp
lods
mov
add
nop
inc
xchg
sub
and
jne
dec
jb
adc
and
mov
pop
jns
and
push
mov
lret
pop
xchg
sub
jg
mov
sbbl
and
int3
movsb
cmp
sub
and
or
scas
mov
outsb
and
and
mov
mov
fsubr
lcall
ja
sahf
popf
inc
shl
mov
and
lahf
cmp
jle
lock
and
dec
fbld
push
pop
sub
and
cmp
push
xchg
xchg
arpl
test
stos
sti
mov
xchg
and
sub
and
shr
movsl
push
loop
scas
jle
mov
pop
test
and
rolb
in
sbb
and
sbb
movsl
or
adc
and
mov
js
scas
insb
sub
popa
cmpsb
out
lret
sbb
jge
arpl
jge
mov
mov
cmp
mov
sahf
mov
xchg
mov
push
pop
lods
fsubrs
xor
add
or
and
dec
imul
mov
mov
and
xchg
shll
dec
inc
sbb
mov
fst
pop
das
xor
fsubl
xchg
mov
mov
xchg
cltd
xchg
mov
mov
jle
paddd
outsb
mov
xchg
inc
jne
xor
addr16
and
adc
adc
mov
insl
fcmovnu
and
fbstp
scas
xor
mov
and
orl
dec
fdivrl
cmp
lea
movsb
shl
mov
xchg
and
fcmovnb
fcos
loope
lret
cmp
adcl
or
scas
divl
dec
jns
sahf
orl
push
lock
push
addr16
movsl
and
and
int
in
jl
daa
out
xchg
cmp
sub
rcrb
pop
cmp
ja
add
mov
addr16
jne
add
cmp
negb
int3
test
pop
pop
mov
andl
xchg
rol
xchg
test
repnz
jmp
mov
and
lret
loopne
jo
cmpsb
push
mov
data16
in
xchg
or
jge
jne
adc
fildl
pop
or
insl
lret
xor
lcall
ret
ja
inc
xchg
adc
xlat
aas
mov
pusha
add
adc
and
and
or
cmp
and
fbstp
cld
xor
pop
shll
or
aaa
push
imul
inc
and
mov
adc
push
mov
push
lock
aad
xchg
ljmp
repnz
cmpsb
call
push
fdivl
xchg
mov
inc
lahf
daa
dec
jle
popa
ret
jp
aad
repnz
and
cmp
fbld
jg
push
cmpsb
movsb
loop
add
mov
movsl
shrb
insb
cltd
mov
lahf
pop
out
imul
int
xor
xchg
sub
pop
data16
adcl
and
mov
push
mov
pusha
mov
sub
pop
mov
jg
pop
and
sbb
test
and
mov
or
sub
imul
movsl
daa
dec
insb
push
mov
popa
xor
jmp
pushf
mov
out
loop
bound
loop
jecxz
in
enter
hlt
cltd
and
push
pop
dec
xchg
jno
out
enter
lods
loopne
xor
xchg
ret
jle
call
fwait
loope
sub
xlat
and
jp
adc
test
push
jmp
and
or
inc
xor
mov
xchg
orl
in
fbld
sub
fidivrl
inc
sti
pop
and
mov
sbb
adc
nop
jo
arpl
jne
cmp
pop
aas
xor
outsl
sti
jbe
pop
clc
xchg
push
xchg
insl
xor
pop
ljmp
pop
fldenv
int3
aad
ficompl
cmp
dec
nop
push
js
and
or
sub
pop
ret
pop
popa
lods
push
fldenv
loopne
and
xor
inc
jl
in
cmpsl
and
mov
pop
fcompl
adc
imul
pusha
test
test
and
mov
xor
movsb
pop
push
cli
je
hlt
in
gs
or
add
sbb
mov
mov
movsb
cmp
cmpsb
mov
xchg
cld
and
mov
loopne
adc
xor
enter
inc
and
mov
and
popa
adc
or
jns
and
adc
xor
sbb
xorb
dec
cmp
xchg
xlat
stos
pop
jb
pop
and
and
cmc
adc
jp
imul
add
mov
add
orl
adc
pop
sahf
lcall
and
rcrb
outsl
gs
out
movsb
stos
xchg
js
and
test
jg
sub
and
cmp
ljmp
rcr
popa
lret
lods
add
push
jne
xor
cmp
test
lock
sbb
outsl
and
mov
fidivs
mov
mov
pop
adc
add
sbb
and
popf
pop
mov
cmp
sub
icebp
movsb
mov
jns
push
dec
cmp
pushf
mov
shll
scas
rcrl
adc
cwtl
movsb
iret
jg
and
dec
jo
std
out
pop
arpl
sbb
and
xchg
add
adc
and
fdivrs
jle
adc
imul
xchg
ret
and
scas
pop
neg
and
movsb
aaa
mov
popf
outsl
dec
cmc
int
shrl
dec
push
in
daa
inc
aad
loop
and
push
or
xor
xor
je
xchg
pop
fcoml
push
pop
es
movaps
out
cmp
add
inc
cli
dec
sbb
test
push
mov
subl
mov
ret
dec
and
jns
das
push
popa
pop
bound
pop
push
lods
and
in
add
jl
dec
mov
or
mov
and
inc
aas
sub
xor
fstpl
in
sub
shl
and
push
rorb
fwait
or
jge
movsb
xor
push
ds
jb
xchg
and
lods
or
pop
sub
js
and
cmpsl
jle
and
add
add
hlt
sbb
mov
or
xor
and
test
repz
mov
sub
mov
jne
dec
shll
adcb
inc
and
movsl
sub
push
data16
jp
out
insb
inc
lcall
rclb
or
add
mov
push
out
dec
and
jne
sbb
pop
out
pop
lods
pop
in
add
jbe
rclb
stc
push
and
int3
fdivp
insb
push
and
das
xor
in
dec
ljmp
pop
mov
cmp
xor
xchg
pusha
xor
add
int
ljmp
adc
test
xchg
popa
rcll
sub
sbb
xchg
inc
aas
xchg
jg
add
jnp
lret
js
push
and
mov
fwait
or
fmull
or
call
mov
andl
data16
adc
push
and
js
or
mov
sarl
push
out
cmp
sub
push
adc
sarl
xlat
les
mov
xor
add
dec
push
or
adc
inc
in
jo
loop
mov
insb
sub
lcall
sub
and
dec
rcrl
mov
jge
and
sub
fstps
jg
cmpsb
pop
aad
and
cmp
and
push
xchg
pop
imul
xor
daa
pushf
inc
pop
or
hlt
aad
adc
das
mov
adc
into
divb
scas
fnstcw
dec
mov
and
sub
inc
sub
mov
movsb
jne
mov
mov
jle
push
inc
cmpsb
popa
fwait
cmp
cltd
outsl
pushf
inc
and
cmp
add
daa
lcall
movsl
popa
stos
xor
push
cmp
pop
sbb
inc
and
bound
pop
ror
and
cmp
out
shlb
add
sbb
inc
repz
test
mov
and
mov
cwtl
xor
adc
pop
jl
in
insl
mov
movb
lock
mov
pop
inc
insb
pop
and
cmpsl
adc
xchg
push
and
mov
xor
push
jmp
pop
movsl
fwait
and
fisubl
pop
daa
pop
inc
scas
sbb
and
movsb
xchg
dec
aaa
mov
and
cmp
xchg
rol
inc
sub
stc
sub
pop
sbb
sti
enter
sarb
test
push
xor
adc
adc
movsl
inc
pop
mov
cmp
dec
mov
adc
lods
enter
mov
fdivr
scas
mov
xor
pop
add
lods
inc
sbbl
call
loop
and
and
and
into
mov
jle
pop
cmpsb
fcmovu
popa
notb
std
mov
cwtl
and
inc
hlt
adc
xchg
mov
and
xchg
test
outsl
mov
cmpsl
popa
ss
popf
pop
and
mov
lods
out
inc
sbb
xlat
jecxz
jb
mov
mov
cmpsb
sbb
push
and
xor
rcrb
mov
mov
pop
pop
and
or
sbb
or
cmp
and
mov
dec
rcrl
xchg
jnp
xor
add
cltd
insb
adc
inc
xor
sub
mov
call
les
mov
and
and
pop
and
ficomps
and
pop
dec
iret
sbb
xchg
dec
shll
add
sbb
movsb
mov
sub
pop
les
jns
jo
cltd
push
push
and
fwait
adc
xchg
loope
jle
adcl
daa
mov
and
mov
jmp
leave
aaa
jns
into
mov
inc
push
dec
push
mov
push
loopne
nop
lds
and
ds
bound
and
imul
out
loope
cld
and
adc
and
mov
stos
shl
dec
stc
sub
test
dec
sub
loope
outsb
xor
imul
sub
xchg
pop
je
push
or
outsl
mov
in
cmp
in
cltd
and
and
sub
fstps
mov
je
add
dec
and
push
jb
loopne
inc
scas
xor
xchg
jae
notl
add
mov
or
mov
push
mov
fs
push
stos
lods
and
push
jl
in
dec
shlb
mov
daa
and
and
pushf
mov
and
mov
xor
and
sub
sbb
scas
pop
and
leave
inc
imul
adc
and
insl
jecxz
js
xchg
loop
add
and
scas
mov
jl
aam
das
jae
and
xchg
js
outsb
rolb
mov
and
stos
lea
outsl
and
lcall
xchg
inc
add
and
bound
pop
fildll
and
xchg
push
cmpsl
cmp
lea
jne
dec
in
mov
and
or
xor
inc
ds
jno
and
scas
cltd
nop
mov
xchg
xorb
sub
mov
xchg
fwait
in
cmp
bound
mov
decl
inc
les
and
sbbb
movsl
pop
and
sub
in
iret
cmc
cmp
and
gs
mov
out
or
xchg
push
in
mov
jp
dec
mov
sbb
vsubss
sahf
xchg
das
mov
scas
mov
cmp
xor
lea
and
push
out
and
orl
sub
cwtl
dec
and
push
aas
mov
mov
jmp
xchg
push
push
scas
and
test
movsb
add
cld
cmpsl
repz
out
push
xchg
mov
lock
inc
add
pop
ds
xchg
push
add
jno
dec
loope
andb
mov
sub
or
ror
cld
xchg
sbb
das
mov
xor
popa
pushf
js
dec
adc
movsl
xchg
sub
and
clc
mov
jecxz
pop
movsb
out
mov
mov
push
in
fists
xchg
subb
repz
push
sub
dec
mov
lds
cwtl
jl
xchg
jnp
mov
pop
int3
test
sub
pop
and
xor
sahf
lods
inc
cmp
cs
movsl
mov
cmp
scas
dec
or
and
xlat
inc
push
aad
cltd
and
mov
sets
xchg
push
mov
inc
test
add
cmp
and
inc
and
mov
jb
cli
and
ss
sub
mov
lahf
dec
and
and
xchg
mov
inc
lods
jg
ror
pop
movsl
in
push
addl
jg
cmp
mov
xorb
cs
and
push
test
inc
and
pop
sti
xchg
xor
scas
lcall
sub
jp
sbb
and
push
sahf
cmpw
orb
inc
pushf
fsubrs
dec
xchg
stos
push
dec
and
sbb
mov
mov
sarb
add
and
or
fiadds
ret
jg
and
pop
loope
mov
xchg
movsl
mov
and
popa
test
push
fsts
and
inc
cltd
fs
jge
mov
mov
outsl
push
mov
std
ja
hlt
and
mov
and
mov
and
and
out
lret
sub
xchg
mov
dec
ss
xor
fbld
mov
mov
cld
and
mov
or
bound
pmulhw
mov
pop
adc
popa
and
mov
inc
lock
mov
xor
shrb
or
add
loopne,pn
std
sub
movsb
sbb
jmp
sub
lods
daa
les
sub
in
mov
adc
pushf
ja
xchg
ds
in
imul
push
repz
shll
sarb
fsubs
pop
cmp
jp
jno
mov
test
fstpl
fisubs
pandn
cmp
orl
sbb
dec
popf
mov
push
mov
sbb
push
ss
daa
jno
data16
cmc
adc
xchg
mov
mov
les
and
push
mov
mov
and
xchg
and
push
cmpsb
ret
sub
mov
pop
cltd
jo
mov
aad
xchg
fldt
cmpsb
jp
mov
and
mov
aas
shlb
inc
fidivs
cli
xchg
inc
pop
das
xor
andb
js
aad
push
sti
fnstcw
in
inc
jecxz
push
push
jmp
pop
cli
ret
subb
mov
and
scas
rol
or
sbb
jmp
hlt
enter
jo
sub
jbe
inc
and
jg
stos
xlat
push
vandps
push
out
xchg
cltd
arpl
pop
test
mov
jo
int
pop
mov
push
and
mov
mov
inc
stos
dec
inc
popf
arpl
lret
inc
int
popa
and
sti
sub
push
jne
movsb
enter
dec
ret
mov
mov
xchg
mov
jo
inc
inc
shrb
jg
adc
and
les
or
push
dec
mov
sub
test
adcl
movsl
inc
bound
popa
imul
subl
pop
aas
and
movsb
das
dec
daa
and
insl
mov
xor
mov
je
sbb
cmp
sub
popa
mov
and
int3
psubb
mov
jecxz
mov
mov
mov
mov
push
shrb
aaa
and
and
or
and
cmpsl
popa
sub
sub
jl
pop
cmp
andl
xchg
in
and
enter
cmp
stos
and
add
and
shll
mov
call
and
jne
and
out
xchg
jns
or
xchg
shr
add
push
pop
and
add
xchg
loope
inc
in
insb
sub
pop
xlat
dec
xor
push
mov
mov
pop
jg
mov
and
stos
jl
inc
fidivrs
xchg
sub
aam
push
and
adc
and
movl
adc
scas
lock
jge
iret
xchg
pop
and
jne
aaa
clc
stos
je
inc
xchg
cmp
inc
popa
das
sbb
ret
and
sub
mov
addr16
inc
je
in
xor
xor
repz
lds
and
adc
push
mov
lcall
pop
test
or
xlat
ljmp
add
bound
dec
mov
stos
imul
mov
cmp
mov
mov
mov
lods
cs
faddl
pop
movsb
cwtl
bnd
jle
cltd
out
shrl
outsb
fwait
sbb
and
pusha
xor
sub
jb
popa
movsl
cmp
xchg
sbb
movsb
mov
test
mov
jecxz
sub
shlb
repnz
stos
and
add
enter
into
mov
xchg
aas
jne
mov
cmp
pop
xchg
jno
das
ja
inc
andl
xchg
mov
push
mov
mov
and
pop
xlat
jns
scas
idivl
mov
movsl
adc
jecxz
aas
cmp
fldl
push
mov
nop
int
push
or
or
and
lock
and
icebp
sarl
aaa
and
xchg
sbb
out
mov
shl
push
ret
mov
bound
popf
pop
sub
and
xchg
dec
mov
psllq
cmp
jg
add
jp
pop
mov
div
jb
adc
or
mov
clc
ss
aad
subl
push
adc
cmp
ja
mov
cmpsb
lods
or
xorb
mov
in
and
cltd
ret
movaps
movsb
and
aaa
test
mov
xchg
movsl
jno
aas
movsl
idivl
and
sub
scas
xor
inc
sub
xor
pusha
lret
insb
in
sbb
dec
push
sub
jl
stc
sub
mov
testb
mov
loop
xchg
xchg
out
cmp
and
sahf
add
mov
mov
test
mov
push
ficomps
mov
aam
addr16
dec
add
and
sbb
rorl
stos
cmp
add
out
push
xor
jno
ficoml
adc
mov
bound
mov
mov
popaw
add
jle
mov
sahf
popa
leave
outsl
test
pop
test
sub
lcall
or
mov
xchg
add
and
jns
mov
mov
mulb
mov
repz
jle
mov
push
inc
lahf
pop
ja
lock
or
sub
jno
std
arpl
je
ret
icebp
or
test
dec
push
dec
shl
jns
and
jbe
sub
xchg
adc
sub
das
pop
mov
mov
mov
and
shr
int3
into
mov
stos
sub
sub
and
lods
or
jp
mov
aaa
push
leave
out
and
outsb
sub
pop
out
pop
jno
fmul
fidivl
mov
aas
imul
es
cltd
rol
loopne
lock
and
add
xor
push
cmp
mov
mov
repz
and
or
adc
ficomps
pop
icebp
and
pop
cld
dec
fwait
mov
inc
int3
mov
jnp
cmp
loop
gs
fld
mov
mov
int3
mov
popf
pop
xchg
movsb
push
push
inc
lret
inc
or
push
mov
mov
add
fimull
push
movsb
mov
jns
pop
adc
xchg
xor
sub
aam
outsb
mov
popa
cwtl
adc
repz
mov
pop
sub
or
movsb
jle
enter
inc
add
adc
sbbl
aam
and
mov
xchg
scas
and
stos
sub
ret
mov
push
pop
and
jle
adc
sbb
repz
pop
pop
leave
sub
jns
xorl
repz
popa
imul
fiadds
cmp
mov
test
xor
and
xor
cmp
pop
fwait
aaa
and
inc
dec
aam
dec
fisubrs
nop
cmpsl
mov
xchg
jge
sub
mov
mov
and
cmp
mov
add
notb
data16
cmp
pop
pop
push
inc
dec
adc
sub
mov
jp
and
dec
pushf
and
and
or
das
and
or
pop
pusha
and
or
adc
mov
jbe
mov
movsb
idivl
and
shrl
dec
negb
cmpsl
and
pop
xchg
js
sbb
popf
xchg
pop
test
lcall
xor
inc
push
push
clc
jae
xchg
pop
pop
mov
mov
and
repz
pop
cmp
jno
nop
jae
or
xor
clc
and
jnp
nop
out
inc
add
insl
jge
add
and
addr16
dec
xor
fs
nop
jo
stos
mov
pusha
mov
clc
xor
jo
inc
and
cmc
and
pushf
xchg
sub
inc
jp
pop
fadd
and
mov
mov
and
push
outsb
fldenv
movsl
hlt
dec
lret
divb
lcall
ret
icebp
jne
imul
adc
mov
mov
sub
and
sbb
and
fs
sub
movsl
mov
sub
scas
clc
and
incl
and
movsl
jmp
add
sbb
shlb
in
or
add
and
jnp
dec
mov
add
jp
xchg
add
shll
test
cmp
pushf
cmpsb
inc
dec
insl
dec
sub
daa
xchg
xchg
xor
test
sarb
push
mov
test
out
fdivs
xchg
sub
cmc
cmp
dec
shrl
into
aaa
daa
std
call
movsl
js,pt
cmp
mov
dec
xchg
scas
cmp
mov
cmp
shll
jb
cmp
jnp
push
nop
xchg
push
je
in
cmp
sub
ljmp
lods
push
ss
pop
sbb
movsb
cmp
loope
cmp
mov
and
sbb
int
and
dec
cmp
pop
lret
dec
and
out
fxch
push
popf
je
pop
cmp
push
and
call
mov
cltd
cmpsb
popf
and
stc
xor
xor
mov
fdivl
pop
lods
and
jb
or
loope
loope
sbb
les
push
in
stos
and
lock
mov
mov
pushf
lahf
mov
les
pop
pop
jecxz
push
popa
in
inc
fsubl
push
scas
arpl
xchg
inc
jo
and
mov
test
lret
dec
and
scas
add
jl
loopne
sbbb
and
pop
mov
imul
inc
maskmovq
notl
hlt
enter
aaa
and
shrl
push
aam
sbb
cmpsl
sti
xchg
sub
iret
sbb
jmp
mov
jbe
loope
mov
and
jns
out
cmp
inc
test
fnsave
mov
or
adc
cli
pop
and
dec
icebp
std
mov
aaa
dec
hlt
mov
and
and
cmpsb
jb
das
and
add
lcall
xchg
and
jbe
xchg
pop
out
rcl
jg
xchg
and
xchg
push
and
lahf
push
aas
les
inc
sarb
jb
popa
scas
negl
loop
aad
jge
popa
mov
stos
and
je
sbb
pushf
jo
sub
xchg
xchg
sub
loope
push
lahf
or
sbb
lock
push
xchg
lret
and
mov
hlt
clc
stos
int3
cld
cmpsb
notb
cmp
in
pop
and
xorl
jbe
pop
lock
ja
in
sub
pushf
pop
mov
popa
hlt
out
inc
sub
sbb
sbb
jmp
push
scas
inc
mov
in
das
ds
in
mov
mov
xchg
adc
imul
mov
push
outsl
sbb
sbbl
insl
sub
mov
fnsave
pop
jbe
sub
hlt
loopne
gs
push
sbb
sahf
clc
push
loope
or
and
push
cmp
and
cmp
imul
push
jbe
shl
icebp
hlt
xor
jae
mov
ljmp
xchg
rcl
and
lods
xor
jge
fisttpl
ret
mov
and
jg
and
xchg
mov
dec
push
lods
lahf
lds
fists
or
or
fisubl
bound
dec
push
test
mov
jne
inc
aad
dec
and
xor
cld
mov
pop
movl
xor
jecxz
cmpsb
clc
lods
sbb
jle
lahf
pop
mov
jb
out
pop
das
ficoml
dec
xchg
shlb
sahf
jge
add
jp
mov
ljmp
and
sub
ss
out
and
test
jp
js
fisubs
xchg
dec
add
push
mov
and
pop
jle
cs
and
or
mov
pop
push
jnp
dec
inc
pop
and
and
jp
in
insl
pushf
inc
fs
mov
adcl
mov
jne
popf
dec
es
mov
adc
push
in
sbb
call
cmpsl
mov
subl
pop
add
fldt
xchg
inc
cmp
cmp
sub
stc
icebp
and
xor
in
jp
jno
cmpsl
cmpsb
add
dec
movsl
faddl
mov
call
and
rcll
and
stos
fimuls
sub
xchg
add
stc
cmp
sbb
jle
push
repnz
test
aad
and
jg
or
mov
stos
inc
testl
ds
movsl
outsb
unpckhps
xor
cltd
mov
inc
sub
aad
movsl
fs
outsb
adc
mov
loopne
jne
mov
and
shrl
pop
sbb
and
pop
pop
dec
mov
add
ljmp
aad
push
les
lock
cwtl
jmp
inc
jp
add
andl
arpl
push
mov
push
inc
push
mov
and
ja
movsb
lret
pop
lcall
add
and
push
mov
insb
ja
and
les
mov
aam
xlat
fsubl
sbb
lds
ret
and
fcoms
mov
inc
popa
pop
dec
pop
push
and
mov
adc
mov
xchg
arpl
dec
push
test
mov
out
pop
outsb
and
and
int
daa
test
fsubl
xchg
pop
fldt
imul
mov
mov
mov
jo
pop
mov
and
push
daa
mov
movsb
jp
into
xor
rclb
mov
and
adcl
mov
pop
cld
sbb
and
jg
jb
push
dec
movsb
xchg
adc
lcall
ds
cltd
dec
ret
and
shrb
jmp
ljmp
and
pop
out
xor
int3
arpl
jno
lds
and
testl
movsl
xor
adc
xlat
popa
xchg
and
adc
popa
mov
arpl
adc
pop
scas
jno
push
jp
inc
out
and
inc
out
shll
mov
dec
mov
dec
imul
mov
aad
test
loope
mov
sub
ljmp
push
and
jbe
lock
sub
add
hlt
movsl
test
fst
push
movsb
pop
cmp
mov
push
test
pusha
push
and
xchg
rcrl
cld
lods
sub
mov
ret
loope
ljmp
and
inc
mov
or
mov
aad
jns
test
pusha
out
push
mov
jg
pop
mov
adc
cmp
sbb
dec
jge
xor
bound
sub
popf
stos
pop
inc
into
cmp
and
ss
push
mov
xchg
adc
in
inc
xchg
nop
loopne
daa
xor
out
and
add
pop
push
call
nop
and
mov
gs
dec
inc
push
push
xor
sub
jne
fidivrs
loopne
or
scas
lcall
push
cmp
jl
adc
adc
sbb
and
movl
popf
lods
cwtl
loope
mov
ret
cmp
and
sti
xlat
and
pop
loopne
xchg
std
xchg
frstor
pusha
out
data16
leave
or
mov
and
rorb
xor
mov
xchg
out
mov
andl
sbb
mov
lret
pop
cmp
lods
mov
and
int3
les
iret
adc
push
push
xchg
mov
mov
mov
or
jl
xor
dec
pusha
and
add
fwait
pop
jmp
mov
adc
jge
inc
and
or
adc
test
pop
sbb
mov
cmp
lret
pop
push
cmp
sub
push
and
or
mov
mov
add
and
xor
and
xchg
jge
push
and
stc
jns
pop
lea
js
sub
stos
popa
movsl
ds
sbb
and
jge
and
popa
mov
add
in
jo
mov
xor
iret
adc
jge
mov
and
pop
and
push
ret
imul
bound
pushf
sbb
rcrl
pop
icebp
je
and
repz
xchg
jp
jae
add
repnz
fsts
js
jns
dec
push
fisubrs
sub
pop
or
or
dec
fbld
jo
inc
jnp
dec
cmp
mov
inc
and
or
dec
insl
cmc
cwtl
mov
push
jmp
cmp
and
jb
add
add
adc
rorl
and
cmc
jle
sub
call
sub
insb
pushf
inc
hlt
popf
je
pop
jge
sub
enter
sub
adc
stos
xchg
das
inc
inc
outsl
push
cmp
nop
outsb
mov
adc
aam
jb
sub
push
ficomps
jecxz
and
dec
ds
and
sbb
mov
out
mov
popf
mov
in
push
jl
out
sbb
cmp
push
lahf
pop
or
popf
pop
andb
mov
movsb
push
mov
xchg
mov
lcall
adc
mov
lahf
mov
aam
pop
push
mov
ss
dec
aaa
and
pcmpgtw
pushf
xchg
xchg
movsb
sub
mov
push
out
xor
and
popa
nop
lods
outsb
xlat
sbb
leave
sbb
lahf
xor
adcb
xor
push
push
push
lock
mov
cmp
cmp
imull
xchg
dec
pop
mov
je
sbb
push
and
cs
mov
sub
and
rcrl
out
sbb
mov
mov
jo
mov
sub
and
push
int
and
or
in
mov
add
and
inc
sub
pop
add
pop
jno
sbb
cmp
cmpsb
dec
lcall
or
inc
lret
adc
or
daa
loopne
xchg
push
mov
pop
popa
adc
mov
sub
push
shlb
cmp
mov
cld
cmp
movsl
and
ljmp
nop
fsqrt
cmpsl
shll
jbe
add
daa
popa
or
and
aaa
ret
orb
jnp
mov
stc
test
push
and
mov
xor
dec
mov
inc
scas
mov
and
pop
pop
or
repnz
mov
mov
out
cmpb
push
outsl
sub
insb
or
fcoml
cltd
adc
and
pop
xchg
pop
pop
hlt
add
pop
xchg
les
mov
mov
mov
cmpb
dec
cli
and
arpl
mov
les
push
insl
test
andl
push
xor
stos
imulb
pushf
xchg
iret
clc
cmp
out
dec
fistps
and
out
adc
jns
mulb
xor
push
fdiv
add
and
add
dec
mov
pop
popa
inc
sub
movsl
leave
inc
ss
aaa
jmp
adc
fsubl
xchg
scas
or
mov
out
loopne
fwait
push
jno
out
pop
and
mov
mov
repnz
cmp
sbb
inc
icebp
enter
dec
clc
aas
and
cli
fadds
xchg
divl
xor
fisttps
inc
loop
and
outsl
imul
cli
adc
sti
xor
les
ljmp
xor
imul
inc
pop
in
mov
and
sbb
ss
cmp
and
sub
and
scas
push
in
addr16
and
inc
xchg
mov
sub
or
dec
mov
and
data16
adc
les
aas
mov
mov
pushf
inc
jnp
pop
daa
cmp
popa
sbb
or
imul
ss
or
andb
hlt
xchg
jecxz
cli
inc
and
mov
leave
pop
sub
or
ja
add
mov
ret
xchg
mov
arpl
hlt
in
inc
push
fdivl
add
xlat
lds
jg
cmp
les
loope
pop
gs
ja
out
mov
rcrl
and
cmp
pop
cwtl
lds
mov
adc
je
sarb
mov
and
xchg
inc
jp
sahf
and
sbbl
and
jo
addr16
jae
adc
pop
shll
iret
pop
and
loopne
xchg
ljmp
jp
mov
hlt
and
dec
sbb
imul
aad
xor
jae
xchg
sub
in
and
or
gs
rclb
scas
and
push
call
mov
inc
ja
xor
sub
and
aad
mov
lea
push
insl
push
jp
nop
jns
fildl
dec
outsb
cmpsb
arpl
scas
fwait
push
and
nop
jbe
push
and
mov
orl
jl
nop
sub
xchg
fs
loope
lock
fldt
sbbl
pop
pop
adc
int
lea
shll
mov
ss
pop
jp
lock
xchg
or
mull
push
and
je
aaa
not
mov
push
xor
insl
iret
push
mov
mov
and
and
and
pop
in
lcall
ds
enter
mov
xchg
addl
xor
test
and
pop
fbstp
nop
cmp
shrb
ljmp
shll
stc
jmp
pop
mov
stos
scas
jle
adc
out
repnz
lds
fidivs
and
insb
sub
and
in
jmp
jb
and
push
xor
mov
pop
movsl
lods
mov
mov
out
xor
mov
jmp
jle
pop
or
inc
pusha
xchg
cmp
xchg
mov
fisttpll
push
adc
pop
cld
sbb
add
pop
mov
mov
and
sarb
add
imul
and
icebp
and
pop
sbb
loop
repz
and
fwait
cmpsb
lock
sbb
int
gs
enter
dec
add
push
push
jmp
fwait
movsb
sbb
fisttpl
and
int
pop
inc
outsb
or
inc
sub
ret
and
push
popa
insl
and
xchg
sub
movsb
aaa
pop
test
lret
in
sub
fcmovnb
push
and
outsb
mov
inc
dec
mov
imul
movsb
mov
push
mov
or
sub
call
iret
cmc
sbb
jmp
jbe
and
nop
mov
cmp
loopne
mov
push
push
jbe
push
and
andb
and
add
imul
cmpsl
jg
lods
cmpsb
icebp
push
pusha
in
iret
and
and
adc
mov
bound
cld
xor
and
sbb
and
xchg
mov
adc
mov
push
scas
cmpsb
js
movsb
not
push
and
sbb
mov
or
movsb
push
xlat
push
daa
sbb
push
outsb
movsb
cmp
sub
aaa
lock
or
inc
cli
pushf
sub
mov
jno
and
xchg
adcl
inc
mov
cmp
je
dec
idiv
and
leave
lock
ret
loop
rcll
mov
sahf
andl
scas
mov
push
pop
loope
lock
lret
mov
xchg
cmp
loop
fbstp
call
out
popf
data16
mov
and
sbb
sub
or
in
out
cli
xchg
and
and
jg
mov
mov
push
hlt
xchg
sahf
aad
mov
lahf
dec
lock
and
sub
mov
and
loope
addr16
out
jns
sti
or
sbb
and
testl
mov
aam
das
cli
pusha
outsl
mov
iret
imul
cmpsb
daa
and
jge
mov
popa
ljmp
mov
pop
mov
idivl
and
je
push
dec
mov
and
or
or
and
jmp
and
cmp
cli
movsb
popf
and
cmp
or
and
scas
add
inc
mov
xor
int
and
ss
daa
scas
dec
pop
clc
fstp
lcall
sub
push
ja
pop
mov
bound
lret
loopne
aas
mov
into
icebp
or
mov
jne
sbb
cwtl
xor
and
mov
adc
hlt
xchg
je
and
inc
jl
pop
lret
xor
mov
movsl
xchg
out
and
fnstcw
aad
rol
mov
int3
pop
pop
out
xor
roll
pop
scas
and
xor
test
mov
ja
pop
push
mov
add
cmp
cmc
imul
in
xchg
and
inc
xor
mov
and
fcoml
jge
in
mov
jle
bound
lret
imul
rcrb
outsl
movsl
sub
mov
mov
xor
dec
repnz
push
and
fstpl
adc
rorb
lods
xchg
push
pop
and
ficompl
jno
ljmp
mov
pop
loope
xor
sbb
shlb
rolb
test
test
fstpl
xchg
insb
sub
imul
test
movsbl
pop
mov
mov
sub
lahf
ret
test
adc
movsl
ds
mov
cmp
cltd
or
push
push
imul
and
xor
sbb
stos
jmp
or
into
mov
and
sbb
dec
fimull
imul
in
dec
popf
in
fsubs
mov
loope
loop
movsl
jne
push
mov
shl
popa
mov
andl
sub
sub
jle
mov
addr16
and
inc
xchg
mov
push
mov
jmp
repnz
cmp
or
imul
inc
push
fcomps
ljmp
pop
imul
imul
push
int3
cmp
test
mov
ds
ljmp
sbb
xchg
adc
icebp
dec
push
and
xor
xchg
call
jmp
fs
and
rcrb
or
jl
push
mov
cmpl
je
call
outsb
ds
mov
xchg
movnti
test
push
pusha
das
dec
cmc
lock
das
xchg
std
inc
int3
dec
push
push
ret
roll
popa
pop
in
mov
dec
sub
loopne
mov
mov
inc
stos
add
push
frstor
nop
das
out
pushf
push
lock
sbb
mov
and
mov
out
and
fs
xor
popf
pop
jg
gs
and
lods
pop
add
sbb
inc
adc
pushf
inc
mov
mov
addr16
sar
rolb
and
inc
popa
in
jne
lret
and
hlt
std
sahf
pop
and
sub
sbb
push
loope
jae
push
mov
and
mov
faddl
imul
rorl
lds
adc
jae
jno
sbb
std
xchg
and
or
or
pop
and
cmp
sub
pop
sub
sahf
fisttpl
lea
bound
mov
imul
xchg
push
movsl
out
or
and
fistpll
bound
and
pushf
dec
jbe
xchg
or
xor
xlat
std
sarb
add
inc
arpl
push
sub
outsb
dec
ss
sub
xlat
dec
adc
popa
fldl
adc
daa
cmpsl
xchg
sbb
fistl
pushf
add
bound
jns
mov
sub
scas
flds
rcl
inc
adc
cmp
xlat
test
add
and
mov
insl
movsl
test
ret
push
sub
and
mov
mov
js
popa
sub
ror
and
pop
mov
xchg
or
mov
dec
inc
mov
addr16
mov
mov
lock
sub
sbb
push
scas
sbb
xchg
mov
popf
test
fmull
lock
xor
lea
and
ja
mov
repnz
and
fldcw
cmp
mov
imul
xchg
lahf
imul
and
shr
insb
push
mov
popa
fcoml
and
cwtl
leave
inc
xor
ret
adc
mov
add
mov
mov
dec
daa
sbbl
and
xor
loope
add
lock
mov
pop
cmpsl
cmp
mov
mov
and
outsl
pusha
lret
aad
add
mov
mov
xchg
and
hlt
int3
xor
lahf
or
push
and
mov
test
in
cmp
out
jae
aaa
insl
inc
jmp
xchg
mov
outsb
jmp
dec
cmp
push
xchg
adc
insl
push
cltd
aas
int
es
push
rcrb
cli
push
mov
test
mov
shll
sub
adc
dec
add
test
shll
mov
fimuls
mov
xchg
dec
xchg
mov
ljmp
sbb
dec
test
fwait
imul
jp
push
dec
mov
or
outsl
out
das
push
icebp
sub
xchg
sub
sahf
out
inc
andb
addr16
ret
daa
dec
out
repz
lahf
adc
sbb
xor
jb
das
call
lea
xchg
std
mov
xchg
stos
and
mov
add
aaa
jno
imul
movsb
lods
stc
sbb
push
inc
frstor
and
popl
adc
and
lret
cmp
dec
fildll
test
ja
daa
stc
push
pop
mov
aas
and
sub
and
lods
jno
jbe
shlb
pop
fstpl
in
aas
fs
sub
mov
enter
xchg
lret
jno
jne
push
movsb
mov
imul
fsubl
cmp
xchg
pop
xor
jge
scas
adc
ss
into
ret
pop
ficompl
mov
jl
mov
mov
add
push
mov
adc
push
pop
sti
and
int3
cltd
jne
test
jle
or
cmp
add
xchg
or
lret
cli
xor
add
push
aas
stos
sub
xchg
imul
orb
sub
mov
and
sbb
cmpl
test
test
push
cld
nop
push
rcrb
ret
scas
push
sub
and
setno
and
mov
shlb
mov
pop
int
mov
fstpt
iret
pop
cmp
inc
mov
popf
and
mov
inc
adc
repz
mov
lahf
push
xorl
dec
sbb
fimuls
sub
fcompl
mov
popa
pop
out
movsb
and
cmp
orb
leave
insl
pop
push
iret
fcompl
sbb
cmp
sbb
dec
scas
test
sub
cmp
inc
cmova
filds
and
fldenv
and
test
fbld
jg
push
push
fs
xlat
adc
xor
cmp
and
inc
push
movsb
insb
push
adc
movsb
fdivl
fsubs
jnp
fsts
mov
adc
addl
push
sbb
shll
lret
add
arpl
mov
jno
fwait
int
cltd
loop
imulb
mov
cmp
outsb
call
mov
dec
ja
pop
mov
fsubrs
and
sbb
cmp
mulb
adc
enter
mov
jmp
adcb
dec
in
pop
stos
pop
cmp
mov
inc
add
orl
jnp
sti
and
andl
cmpsl
roll
scas
aam
dec
das
pop
scas
and
lock
push
dec
sbb
lahf
popa
movsl
inc
xlat
pop
push
in
sbb
mov
cmpsb
jmp
mov
popa
leave
adc
and
lds
movl
cmc
xor
or
cmp
cmpsb
mov
sub
in
out
mov
xchg
adc
rol
ds
in
dec
popa
repz
xchg
xchg
and
jg
fidivrs
cmc
inc
xchg
mov
enter
stos
jge
and
mov
push
mov
and
sub
ret
addb
push
je
adcl
les
adcl
insl
adc
push
and
xor
loope
in
and
pushf
icebp
sub
scas
and
fnstcw
and
es
push
cmp
scas
pusha
cmp
mov
xor
aad
jnp
inc
push
mov
mov
test
push
sub
xor
inc
cltd
fnsave
and
mov
jb
mov
and
adc
pop
or
out
pop
and
mov
add
dec
jo
sbb
stos
jns
and
and
mov
push
testl
int
je
inc
shlb
fcmovnbe
icebp
gs
push
andb
and
mov
aas
in
sub
mov
sbb
adc
fstl
je
mov
repnz
xor
fisubrs
int3
dec
and
mov
movsl
pop
mov
aad
dec
lahf
popa
fwait
outsb
aas
dec
pop
add
aam
stos
fld
and
add
cmp
and
inc
add
repz
xlat
sub
je
in
mov
aam
xchg
in
fists
cmpb
or
adc
stc
ret
faddl
call
lods
xlat
adc
and
bound
mov
sub
mov
xchg
dec
dec
data16
adc
jecxz
xor
cmpsb
aam
scas
inc
popa
lcall
mov
pop
test
xchg
xor
lods
insb
and
cwtl
enter
mov
adc
sbb
insl
xor
pop
enter
dec
pop
cmc
jmp
mov
test
pop
push
and
dec
sub
enter
and
test
push
push
sbb
and
js
cmpsb
push
dec
or
mov
mov
mov
in
sbb
pop
lds
imul
and
aaa
repz
data16
mov
fs
gs
ds
daa
pop
adc
imul
fstl
cmpb
and
push
mov
xor
jl
clc
jb
jmp
hlt
es
sbb
sahf
jno
adc
xchg
popf
mov
mov
mov
inc
js
xchg
fldt
mov
cmp
sub
inc
mov
mov
inc
repnz
jo
out
mov
or
jno
in
daa
cld
or
shll
cltd
xchg
xchg
movsb
push
jno
sub
movsb
clc
loopne
cli
fisubrl
out
mov
bound
push
jb
dec
xchg
js
push
lcall
nop
popa
adc
mov
lea
aam
ljmp
add
cli
or
mov
pushf
std
loop
bound
ss
call
jo
jbe
in
enter
and
sub
and
inc
xor
mov
enter
test
dec
mov
mov
sub
es
xor
fisubl
sub
inc
negb
test
mov
mov
jns
mov
xchg
imul
test
mov
xor
dec
cmp
dec
insl
ret
popf
rclb
cmpb
std
push
and
cmpb
mov
push
mov
in
pop
std
adc
and
addr16
fnsave
push
and
ret
and
shrb
add
cmpsb
cmc
or
xor
lds
aam
adc
pop
cwtl
sti
inc
shrl
and
stc
aad
fldenv
mov
xor
int
int3
xchg
cwtl
xchg
stos
out
xchg
cmpsb
and
fstps
and
out
sbb
jne
repz
insb
and
sub
push
out
mov
cwtl
dec
movsb
xor
jmp
out
inc
in
jle
out
out
fnsave
inc
xchg
mov
lcall
sahf
ret
and
bound
cmp
cld
and
ja
add
and
cltd
and
add
sbb
add
and
sub
ds
daa
lcall
clc
mov
xchg
lods
adc
mov
sbb
cltd
push
and
scas
push
adc
and
and
xor
adc
stc
mulb
clc
popa
mov
cltd
shrl
jns
nop
and
and
and
rdmsr
rcrb
pop
mov
fwait
movsb
push
out
xchg
and
mov
mov
or
and
in
jo
fistps
enter
je
fs
mov
fmulp
mov
cli
inc
lea
lahf
pop
out
cmp
testb
jmp
inc
popa
mov
mov
and
cwtl
and
ljmp
fsubs
mov
in
push
mov
rcr
sub
sbb
mov
mov
mov
and
rcrb
fsubr
dec
and
and
inc
inc
mov
insl
aam
shlb
stos
sbb
mov
lea
sbb
lock
mov
xor
hlt
int
insb
lahf
das
loope
pop
xchg
scas
jl
or
push
sti
popa
or
and
mov
or
ss
jne
and
adc
movsb
push
cs
jge
mov
jecxz,pt
outsb
jl
stos
mov
mov
push
and
ret
xor
mov
jae
fisttps
mov
rorb
insl
jl
xchg
imul
ljmp
fisubs
pusha
test
je
pop
daa
iret
in
xor
cmp
sti
out
pop
cmp
fcomp
stos
inc
test
xor
or
jnp
sbb
xor
icebp
sub
in
and
inc
pop
push
sub
jnp
mov
mov
mov
gs
push
dec
loop
or
and
pop
es
in
mov
mov
dec
stc
and
xchg
mov
mov
xchg
sbb
jge
and
ret
movl
cmc
sbb
cmp
sti
mov
or
fsubr
bound
lods
push
out
cld
mov
mov
in
jno
stos
into
sbb
ficomps
movsb
arpl
push
sub
xor
jne
sub
shrl
xchg
adc
sbb
and
cltd
mov
mov
and
pop
push
mov
lcall
xchg
imul
sub
cmc
lahf
inc
in
and
mov
inc
add
mov
movsb
and
mov
nop
loopne
xchg
leave
mov
sbb
aad
arpl
mov
dec
mov
std
mov
sbb
mov
dec
inc
cwtl
jnp
inc
into
mov
mov
pop
cmp
inc
popa
mov
popf
insb
sub
sbb
and
test
xchg
fldl
pop
xchg
aam
popa
jge
aad
fisubs
xchg
sarb
adc
jns
push
xor
out
addl
xchg
add
pop
cmpsl
imul
fistpll
mov
ss
notl
cmp
sub
sbb
sbb
test
inc
pop
and
xchg
ss
and
in
cmpsl
or
orb
mov
add
adc
sub
and
insl
push
cmc
addr16
mov
mov
mov
sbb
sti
mov
mov
lahf
mull
push
mov
xor
mov
sub
sbb
lea
and
loope
popf
and
jns
jmp
imul
nop
xchg
push
insl
lods
and
push
mov
sub
ret
imul
out
mov
lahf
mov
jge
jg
lods
push
cmp
arpl
pop
in
aam
cltd
jne
sbbb
dec
std
cmp
mov
and
dec
ss
iret
test
dec
cmp
xor
das
inc
fldcw
jnp
push
mov
mov
repz
push
imul
and
inc
push
es
push
adc
sbb
inc
sarl
test
and
stos
push
test
and
sub
and
xor
mov
addl
ret
je
pusha
and
loop
xchg
inc
das
sbb
insl
gs
into
and
and
pop
scas
loop
adc
shll
add
enter
aam
stc
xor
cmpb
iret
test
mov
add
inc
fisttpll
fcoms
popa
xchg
pop
dec
dec
pop
shlb
inc
jne
aaa
pusha
adc
xchg
add
and
mov
nop
and
or
les
xchg
cmpsl
fists
jno
dec
mov
lahf
push
ja
sub
stc
in
leave
cmpb
xchg
mov
and
sbb
out
int3
jp
mov
pop
pop
xorl
add
mov
dec
and
xchg
mov
dec
push
scas
in
sub
cmp
mov
lods
and
sub
or
jle
aad
adc
dec
push
sub
cli
pop
shlb
cmovae
ljmp
rcr
scas
and
mov
add
mov
mov
xchg
popa
insb
adc
movsb
add
push
sbb
mov
aad
adc
aad
sbb
and
inc
std
dec
test
or
mov
inc
adc
aas
xchg
jne
sub
scas
je
xor
mov
xchg
hlt
inc
dec
xor
and
mov
in
repz
sbb
xor
in
xor
ror
cmpsb
clc
adc
arpl
xchg
popa
and
cmp
mov
addr16
insl
out
push
and
add
lret
sbb
add
outsb
andb
test
das
mov
push
fidivrl
and
push
cmp
lret
and
mov
ja
pop
int3
in
popa
loopne
fcmovb
jns
lret
pusha
mov
sub
xor
in
mov
xchg
and
or
out
das
lahf
pop
sub
and
int3
xchg
rclb
orl
mov
das
sbb
cmp
imul
addr16
mov
mov
fnstsw
mov
sbb
rcl
and
jle
push
and
bound
sbb
das
enter
imull
mov
mov
mov
stos
out
popf
addr16
das
cmp
jmp
xchg
xchg
push
lcall
jp
dec
and
pop
inc
adc
jg
seta
mov
xchg
and
mov
aam
testl
and
sub
sbb
cmp
pusha
mov
push
inc
cltd
xchg
and
cmpsl
cmp
and
push
lret
stos
push
insl
jmp
shl
and
std
testb
lods
fwait
cmc
test
or
cmp
mov
test
cmp
push
xor
mov
push
sub
neg
inc
mov
xor
and
cmpsl
mov
pop
movsl
pop
cwtl
inc
mov
sub
push
fxch
mov
xor
xchg
out
cld
push
mov
enter
or
ret
push
lcall
jae
mov
xchg
ret
mov
inc
lods
or
jno
add
lods
and
jb
and
ss
cltd
inc
rolb
and
inc
mov
dec
aam
das
outsl
xchg
add
and
mov
loop
sti
lock
mov
sti
lods
or
jg
rorb
negb
push
xlat
mov
mov
mov
loop
adc
mov
and
adc
andb
add
cmp
adc
fsubl
or
and
mov
mov
popa
ljmp
sbb
push
loope
sbbl
jge
movsb
xor
jge
pushf
mov
xchg
and
xchg
push
test
adc
pop
and
inc
sti
in
out
and
push
cld
add
sbb
stos
push
push
and
jl
hlt
mov
mov
jae
and
jge
stc
pop
mulb
sbb
and
popa
outsb
daa
xchg
out
rorl
sbb
movsb
stos
sbb
sub
mov
js
dec
and
cmpsl
inc
mov
fistpll
inc
sarb
hlt
xchg
sub
lods
push
adc
loope
jp
mov
jb
sub
shrl
addr16
mov
adc
pop
in
imul
jl
push
ljmp
aas
lcall
xchg
sti
and
lahf
mov
and
les
test
sbb
inc
xchg
fwait
adc
inc
hlt
push
xchg
pop
adc
xor
sub
add
leave
enter
repnz
dec
cmpsl
jae
pop
jnp
dec
mov
shrb
mov
mov
xor
test
out
cmpsl
nop
fwait
mov
inc
das
mov
popf
fsubs
and
mov
mov
test
dec
push
and
cmpsb
jnp
dec
std
or
int3
cmpl
mov
iret
lods
mov
dec
mov
push
insl
mov
cli
fdivrl
xchg
xchg
push
mov
test
in
adc
and
push
xor
gs
in
xor
xchg
and
mov
and
push
iret
lea
pushf
out
fdivr
mov
jmp
mov
mov
orl
inc
sub
xor
mov
push
jle
std
sahf
andb
jle
mov
xchg
scas
jne
jmp
cmpb
and
fwait
loop
xchg
mov
rorb
dec
and
push
das
iret
cld
sub
test
fs
test
mov
xchg
and
cs
fiaddl
in
dec
mov
and
cmp
adc
popf
xor
cmc
push
mov
and
cmp
jp
inc
scas
inc
sub
adc
jp
and
lahf
std
stc
out
mov
cmpsb
inc
xor
popf
aad
imul
mov
pusha
lods
and
push
ss
andl
sub
xor
pop
cmp
push
nop
and
add
call
divl
push
test
add
notb
sti
fnsetpm(287
dec
popa
and
jmp
clc
fimuls
and
xchg
aad
mov
xchg
xor
adc
rcrl
lods
addr16
fisubrl
sahf
hlt
test
pushw
movl
push
movsb
lret
sub
push
and
sub
loopne
incl
and
in
jb
dec
pusha
mov
fwait
jbe
movsl
popf
jg
pop
scas
and
push
iret
aaa
cmp
mov
dec
push
in
jae
add
push
ret
inc
fiaddl
cld
shlb
sbb
stos
fidivrs
jno
sub
and
and
adc
dec
jae
and
aas
out
and
in
fisttps
push
rcl
mov
mov
loope
dec
mov
xor
inc
jecxz
repnz
cmpsb
push
mov
mov
movsb
xor
rcll
push
fdivrp
mov
stos
dec
jns
repnz
jecxz
mov
clc
enter
adc
fucom
ljmp
xor
es
popf
fwait
test
sub
orl
daa
add
loop
jg
and
and
ja
loop
mov
mov
mov
push
andl
jmp
std
lods
into
push
push
inc
dec
les
gs
sbb
sbb
jecxz
and
in
mov
int3
lret
and
sbb
mov
mov
or
and
in
mov
repz
pusha
sub
movsl
dec
shll
dec
addr16
cltd
push
cmpb
aaa
push
test
sub
insl
das
inc
stc
mulb
mov
and
jge
xchg
and
cmp
sti
xchg
inc
add
push
and
pop
fisubs
ja
icebp
jle
mov
and
push
push
xchg
scas
cltd
imul
or
loop
daa
les
ret
test
add
push
sbb
and
sub
pusha
and
outsl
jle
loopne
and
scas
pop
push
mov
filds
call
out
lods
aaa
dec
cmp
add
rol
cli
or
scas
outsb
lcall
lahf
cmp
jecxz
inc
and
adc
stos
aas
jae
xor
cmc
sbb
inc
in
or
aaa
xor
data16
je
and
sub
insb
shl
add
pop
mov
mov
mov
mov
jbe
and
mov
xchg
sub
mov
xchg
popf
jp
and
insl
hlt
dec
mov
add
push
sti
popa
dec
mov
and
test
mov
mov
dec
stos
xchg
and
mov
mov
mov
push
and
les
mov
std
mov
imull
push
ficoms
mov
xchg
mov
fistps
shr
pop
sbb
leave
and
cmc
aam
nop
mov
adcl
pop
push
jmp
notb
and
mov
das
out
mov
mov
insl
adc
mov
dec
and
xor
push
jp
dec
pushf
mov
outsl
add
ret
rolb
mov
mov
inc
xor
mov
mov
lock
mov
inc
pop
mov
cmp
jle
imul
loop
mov
inc
xlat
sub
push
repnz
out
cmp
jb
sub
jbe
test
fisubrl
ret
icebp
lds
inc
movsl
or
scas
jg
fwait
inc
cltd
dec
popa
fs
mov
in
xchg
fldenv
fadds
std
int3
and
popa
test
add
gs
lret
cs
and
inc
jmp
in
or
mov
fcompl
sub
test
push
mov
iret
mov
rclb
xlat
jns
imull
movsl
cltd
mov
shlb
xor
scas
and
mov
cli
add
dec
xlat
sahf
and
in
xchg
lods
xor
fsubl
test
lret
or
inc
rclb
call
jbe
outsl
addr16
out
loope
lahf
movsb
and
dec
out
sbb
jae
and
popf
lret
xor
incl
jo
cltd
and
sub
mov
mov
cld
shl
add
and
fnstsw
xorl
aas
insl
cmp
adc
sbb
and
push
mov
sub
cmp
xchg
pushf
jne
lods
mov
in
add
movsb
call
shrb
mov
or
stos
and
adc
xchg
test
hlt
lods
push
jno
rcrl
das
xchg
movsl
push
inc
and
sub
push
andb
fnstsw
lea
and
xor
mov
out
mov
fisubl
and
std
push
enter
xor
xchg
inc
test
pusha
aaa
lods
clc
mov
sub
mov
mov
fst
inc
xchg
mov
cmpsb
lret
and
push
mov
cmp
dec
out
sar
or
push
pop
inc
dec
xchg
and
js
ja
jl
xchg
sahf
lcall
and
stos
hlt
and
test
and
push
lcall
xor
and
hlt
rorb
adc
cmpsb
xlat
dec
or
popa
push
pop
inc
fs
and
cld
sbb
enter
dec
jae
xchg
and
xchg
leave
mov
jge
mov
addr16
shrl
push
dec
push
mov
lret
daa
inc
mov
and
cmp
and
stos
and
cmpsl
fdivr
inc
jle
and
out
jae
sub
sbb
pop
fisubrs
push
pop
pop
aas
xchg
dec
ja
cmpsb
bound
sbb
sarb
xchg
out
shll
sub
cmp
fisubs
xlat
cmpsl
jge
es
addr16
jmp
test
into
xor
rclb
jp
lcall
or
scas
cmpsl
and
push
es
pop
mov
movlhps
xchg
mov
push
pop
and
stc
loop
mov
push
cltd
xchg
fisubs
adc
das
mov
int3
and
pop
mov
mov
fadds
mov
leave
xor
adc
sub
lret
and
pop
xor
jecxz
imul
xchg
inc
das
dec
stos
mov
cmp
xchg
dec
movsb
repnz
pop
popa
sbb
jmp
fsubr
icebp
leave
js
jg
and
mov
into
and
ret
xor
shll
fidivrs
add
mov
mov
pop
mov
andl
popa
rclb
jne
lea
and
pop
sub
mov
lods
jp
leave
sahf
call
roll
adcl
icebp
mov
test
dec
and
fs
mov
repz
pop
cmpsl
mov
fisubl
push
call
and
notb
das
ss
push
popa
lahf
add
imul
inc
or
push
jae
out
pop
test
int
mov
xor
idivl
mov
mov
test
fcomps
aas
cmp
inc
jmp
jge
ficomps
inc
je
cmpsb
mov
lock
mov
cltd
imul
cld
loop
xchg
mov
test
pop
xor
mov
pushf
cmp
scas
ficoml
and
xor
jmp
xchg
inc
fcomps
das
iret
outsl
and
popa
and
test
andb
pop
mov
and
clc
xlat
repnz
test
pop
sbb
lock
sbb
and
mov
inc
lret
mov
jge
xchg
xchg
mov
mov
mov
cmp
shrl
sub
dec
daa
xchg
outsl
imul
andb
flds
imul
in
aas
pop
jg
jno
mov
fcoms
pop
jecxz
inc
inc
and
pop
mov
cmp
and
fdivrl
stc
notl
call
rcll
or
or
imul
mov
dec
ret
xchg
and
jnp
push
mov
xchg
and
push
ret
pop
push
and
sub
and
cwtl
test
cmp
shrb
fsub
or
int
xchg
mov
fists
stos
popa
jns
icebp
mov
int3
in
add
lcall
push
cmp
xchg
mov
jb
rcrl
out
add
mov
aaa
ficoms
sbbb
out
movsl
xchg
sub
mov
sbb
jo
adc
aas
inc
mov
adc
xor
sbb
out
scas
inc
lea
and
dec
in
loope
adc
lcall
or
repz
sub
mov
cmp
imul
shll
es
stos
shll
xchg
dec
and
push
mov
jno
and
xor
adc
xlat
jp
popa
pop
sbb
mov
aaa
and
mov
or
and
mov
lret
pop
add
jne
lahf
inc
cmp
daa
andl
scas
dec
aad
das
xchg
stos
push
pusha
ja
addr16
popa
movsl
lock
push
and
lea
shlb
adc
shll
dec
test
out
cmc
push
mov
dec
arpl
movsb
sti
sahf
jne
fcomip
jecxz
mov
out
call
pusha
pop
dec
imul
and
gs
mov
cltd
inc
mov
cwtl
fbstp
jge
and
enter
clc
mov
sub
lahf
sub
xchg
and
sbb
in
push
movsb
push
adc
pop
push
mov
fcom
and
inc
jg
xchg
and
aaa
jns
or
xchg
and
imul
in
andb
insb
mov
dec
jns
scas
adc
xadd
orl
cld
inc
xchg
add
inc
and
fistpl
xor
decb
and
jb
imul
in
jge
xchg
fs
push
inc
mov
mov
jg
xchg
arpl
add
xlat
stos
sub
jo
dec
sub
push
jbe
es
enter
push
cmpsb
push
shll
inc
jne
push
das
and
and
dec
pop
xor
popa
icebp
mov
cmp
je
push
arpl
dec
loopne
and
sbbl
hlt
xchg
das
jp
shlb
mov
mov
pop
aaa
ret
addr16
xchg
out
inc
cs
sahf
adc
sbb
push
lahf
and
cmp
pop
xor
pop
sbb
jns
inc
jnp
out
sbb
sti
push
and
xor
mov
cmpsl
subb
scas
aaa
dec
inc
popa
dec
fst
pop
mov
mov
mov
popf
sub
popa
imul
adc
enter
cmpsl
nop
inc
xchg
cmp
and
insl
cltd
lret
out
and
sub
sbb
outsl
jle
or
js
out
and
mov
sbbl
push
and
xor
push
lods
xchg
and
sahf
cmc
and
mulb
pop
xchg
push
and
adc
and
inc
xor
outsl
or
lock
and
aam
push
rcrl
repnz
movsb
dec
fimull
jae
mov
test
sub
gs
int
test
lods
iret
jbe
push
cwtl
cmp
andl
add
cltd
sub
daa
ss
inc
subl
insb
xchg
inc
pop
popa
lret
and
push
call
push
mov
or
popa
jp
and
add
pop
pop
movsb
sub
push
pop
ja
cmp
inc
loope
pop
xor
jo
jg
loopne
pop
movsl
mov
mov
sbbl
sub
dec
pop
les
cmp
xor
popa
jo
dec
movsl
dec
lea
shr
cmp
cmp
dec
aas
test
xor
push
test
movsb
repnz
stos
shll
adc
scas
cmpsl
in
in
adc
xor
mov
and
mov
scas
and
cld
push
sub
jb
mov
pusha
xchg
popf
lea
adc
jg
mov
ret
add
mov
jmp
inc
daa
lahf
cmc
jp
dec
push
addl
mov
jl
mov
jg
nop
or
xchg
lcall
or
das
dec
and
inc
push
and
and
add
inc
inc
sbb
pop
in
inc
mov
cltd
daa
js
cmc
lds
cmp
lods
jecxz
jbe
mov
xchg
loopne
adc
mov
push
cmc
pop
jge
popa
or
sbb
xchg
jge
xchg
mov
shll
iret
xchg
sahf
lret
ds
and
jb
test
aaa
add
stc
sbb
xchg
adc
popf
and
push
dec
clc
cmpsb
mov
pop
and
cmp
ds
imul
mov
mov
rclb
cltd
stos
cmp
nop
repnz
mov
mov
inc
es
stos
addr16
and
adc
mov
rcl
sbb
cmp
fldenv
pop
sbb
mov
dec
aam
fwait
and
add
jmp
and
mov
add
xor
cmpsl
add
push
xor
insb
and
pop
xor
sbb
mov
dec
addr16
popa
jg
mov
lods
lret
insb
and
pop
gs
xchg
and
jg
shlb
sbb
xchg
cltd
mov
out
mov
mov
test
xor
stos
xor
pop
das
pop
xor
iret
js
jns
sub
jp
cwtl
cmpsb
mov
jbe
rorb
je
outsl
test
shll
sarb
int3
clc
mov
out
bound
jo
sub
cmp
das
cltd
pop
and
leave
dec
jno
jp
cmc
mov
add
aad
jno
lret
push
fmull
sbb
mov
and
push
outsb
out
adc
and
int
pop
daa
sub
stc
push
xchg
aaa
movsb
ja
fbld
imul
cltd
in
sbb
push
fwait
sub
test
pop
shrb
adc
push
and
mov
xor
jb
jmp
mov
int3
add
orb
repnz
stc
or
cs
and
ss
xor
lret
pop
fstps
jns
sub
pop
jne
and
gs
mov
or
dec
fisubl
xchg
fldcw
movsb
push
clc
add
pop
jno
outsl
inc
add
lock
sub
and
add
into
push
fdivr
or
or
sbb
aaa
push
xchg
and
xor
cmp
sub
adc
mov
sbb
inc
hlt
cmp
mov
and
pop
mov
lret
xorb
int
aaa
clc
lahf
inc
xchg
gs
mov
mov
test
lahf
and
jnp
push
and
fisubrl
dec
and
jg
movsl
jl
pop
out
call
arpl
into
movsb
test
mov
imul
sti
fbld
cld
in
movsb
and
push
ljmp
aaa
hlt
mov
scas
clc
ss
call
and
add
shl
cmpb
stos
popa
setno
add
and
ds
pop
movsb
and
fidivl
inc
dec
mov
insl
and
dec
xchg
mov
std
and
dec
js
shll
xchg
scas
aam
ja
mov
fwait
lods
popf
out
and
mov
mov
inc
rclb
or
bound
fsubs
call
inc
cmp
push
xchg
into
cmp
and
mov
and
push
inc
inc
xchg
fnstenv
popf
inc
push
push
adc
or
and
inc
add
and
add
lock
push
xchg
xchg
dec
cmc
enter
dec
aas
sarl
fcoml
mov
mov
dec
andl
fidivrl
outsl
popa
js
imull
and
ds
out
test
fwait
cmp
in
adc
and
ret
and
lods
sub
pop
mov
loope
pop
mov
or
movsl
jmp
scas
icebp
mov
add
push
call
and
mov
xchg
cli
cmp
inc
and
psadbw
and
push
mov
jecxz
cmp
mov
push
and
mov
xchg
sbb
mov
aam
movl
push
inc
dec
ja
dec
cld
xchg
and
mov
lea
insl
cli
push
mov
xchg
pop
andl
pop
into
and
fld
les
and
out
push
and
lods
stos
shl
xor
and
pop
test
xor
pop
mov
movsb
or
cli
push
mov
dec
stos
inc
or
jo
push
mov
and
and
and
mov
cmc
pushf
lcall
lret
xchg
or
ljmp
out
push
and
cs
fimuls
adc
mov
adc
pop
jle
mov
and
sbb
je
mov
xor
bnd
push
cmpb
subl
jbe
pop
sti
jno
add
movsb
lret
mul
imul
cwtl
xchg
popa
xor
add
sub
or
imulb
push
shlb
ljmp
pusha
mov
aad
mov
fmull
inc
mov
ret
and
les
pop
and
fwait
stos
insl
and
gs
popf
cmpsl
hlt
lret
sub
inc
popa
das
stos
pop
and
lea
aaa
jp
and
mov
dec
push
mov
mov
and
push
test
fwait
jl
cwtl
movsl
lcall
or
xchg
xchg
leave
and
lds
sub
inc
movsb
jnp
shll
add
ret
repz
mov
push
mov
fnstcw
xchg
and
cmp
mov
sbb
jge
dec
and
daa
cwtl
aam
movsb
xor
pop
mov
mov
mov
or
test
inc
test
pop
mov
sti
mov
jecxz
push
pop
fdivl
cwtl
xchg
test
cmpsb
dec
sub
and
jns
and
adc
jne
sub
mov
and
and
js
mov
xor
cmp
add
mov
xor
insb
xchg
and
cltd
ret
sti
gs
repnz
popa
sbb
dec
cmp
out
xor
cmpl
das
fcomps
popa
js
and
hlt
scas
pop
xor
popa
add
scas
adc
mov
xchg
push
sahf
sbb
out
cmp
mov
mov
or
imul
push
cmp
lcall
adc
sub
xlat
xchg
sbb
adc
dec
lods
in
cmp
sub
mov
fmul
sbb
cmc
mov
mov
out
pop
inc
jno
mov
sbb
and
jg
ret
int3
leave
and
pushf
xor
mov
sub
cmpsb
rorl
mov
subb
xchg
inc
sub
or
and
mov
in
lods
mov
pop
sti
dec
adc
inc
and
fadd
dec
xor
repnz
and
leave
pop
ds
scas
ds
sub
or
cltd
lods
mov
subl
xor
sbb
aad
orl
add
and
dec
int
addr16
mov
sub
mov
int
cmpsb
push
pop
jg
loopne
and
add
dec
push
stos
popf
dec
and
cmp
or
mov
cmp
push
sahf
and
jmp
inc
stos
and
cmpsl
add
sub
je
push
flds
js
jg
mov
dec
fwait
xor
insb
aad
mov
cmp
sub
push
or
push
pop
mov
data16
dec
xchg
pop
sbb
andl
pop
sub
and
dec
xchg
sub
sub
xor
cmpsl
push
mov
sub
lahf
notb
and
aaa
or
mov
dec
xor
cld
xor
sub
sahf
and
push
out
fldcw
or
and
jno
add
xlat
adc
pop
out
lock
sub
imul
rol
push
pop
push
ja
push
insl
int
or
xchg
aas
add
popa
shll
xor
mov
cld
jmp
mov
stos
fwait
movsb
loope
add
addb
mov
lea
adc
sub
cltd
pop
das
rol
pop
popa
ljmp
into
imul
jae
fbld
lea
push
sbb
push
hlt
mov
pop
and
and
cmp
and
pop
ds
or
mov
das
add
or
jle
bound
push
cmp
lock
xchg
jbe
flds
movsl
cmp
scas
popa
dec
xor
cmp
xorb
xor
les
aas
test
and
cmp
xor
and
push
sub
ds
bound
and
ja
fldenv
stc
roll
cmpsb
ds
xor
mov
and
push
and
int3
fs
pop
inc
cmpsl
aam
and
fsts
mov
mov
cmp
jnp
icebp
adc
das
or
xchg
add
sub
push
addl
loope
and
add
fisubs
enter
insl
push
mov
pop
inc
push
lods
sub
push
outsb
cmp
pop
jns
mov
movsl
push
mov
daa
popa
sbb
repnz
jg
push
inc
outsb
and
mov
movsb
jle
in
subb
and
sbb
outsl
sbb
mov
fdivl
rcl
push
pop
gs
ss
sbb
movsb
sub
ljmp
and
inc
and
and
movsl
and
and
push
dec
mov
hlt
mov
adc
sub
test
pop
addb
xchg
test
sub
push
inc
andl
es
cmp
and
cwtl
int
xchg
add
xchg
sbbl
fdivs
outsl
add
dec
ljmp
cmp
mov
js
imul
pop
pop
sub
outsl
add
lret
xchg
dec
pop
mov
rol
pop
jnp
pop
and
jp
xor
and
xchg
sub
cmp
cmp
pusha
sub
loopne
and
xchg
test
and
xchg
adc
lret
and
pop
sbb
in
cmpsb
cmp
lds
fcoml
mov
and
mov
fldt
cmp
mov
repnz
adc
inc
cltd
and
lods
jae
aam
add
push
cmp
shlb
nop
jle
rclb
and
je
mov
out
mov
sbb
pop
or
or
and
aaa
xchg
sbb
fisttps
mov
cmp
icebp
add
sub
cmp
ja
shl
aaa
mov
mov
addr16
pop
dec
mov
sbb
out
les
icebp
ljmp
xor
imul
mov
out
fcoml
mov
int3
jmp
jp
sahf
mov
push
lods
push
scas
leave
add
or
mov
add
and
pop
imul
fisubrl
xchg
mov
and
adcl
and
repnz
cmp
mov
or
and
cmp
int
mov
add
test
fadds
mov
dec
rclb
or
push
cmp
ds
nop
adc
stc
jno
out
test
jg
outsb
and
cmp
add
sahf
cwtl
test
movsb
fidivrs
test
xlat
sbb
and
and
mov
scas
inc
push
adc
xor
outsl
dec
dec
je
and
adc
mov
data16
and
mov
popf
mov
out
gs
lcall
inc
inc
or
je
daa
fs
and
cmc
ret
int
sub
stos
hlt
push
inc
std
scas
popf
or
mov
pop
mov
mov
lcall
sbb
addr16
pop
and
int
jge
xlat
je
xchg
cld
movsb
jecxz
sbb
das
jne
and
daa
mov
mov
fildl
xchg
movsl
and
ljmp
mov
xchg
dec
add
xchg
pusha
push
pop
loop
inc
jp
js
cwtl
imul
adc
and
dec
ficomps
mov
xlat
and
cmp
mov
and
test
lcall
and
mov
out
sbb
mov
int3
into
cmpsl
xor
and
cwtl
movsl
sub
inc
inc
add
rorb
jnp
and
in
mov
adc
daa
sub
loopne
adc
jl
fwait
les
repz
inc
and
sub
arpl
pop
mov
enter
and
xor
sbb
sub
cmp
jne
fists
shll
push
and
das
mov
scas
push
xor
daa
shrl
aam
push
or
pop
sub
sub
nop
loop
mov
mov
or
xchg
cmpl
xor
lret
jge
add
movsb
lahf
adc
enter
mov
stc
test
in
pop
mov
inc
cmpsb
sbb
dec
xchg
data16
leave
mov
and
mov
jns
and
jne
fdivrp
and
cmpsb
xchg
jmp
test
mov
loope
into
lahf
out
fistps
push
cld
ljmp
mov
mov
push
mov
mov
add
mov
push
das
sti
and
hlt
addr16
or
in
call
dec
jbe
xor
and
jno
out
xchg
pop
dec
and
jle
push
inc
nop
lods
cmp
jnp
ljmp
xor
xor
and
push
pop
cmp
pop
xchg
mov
lods
dec
ljmp
or
int
imul
ja
pop
mov
in
pop
popaw
mov
movsb
sbb
cli
adc
aam
pushf
inc
insl
and
xchg
and
sub
loope
and
das
ds
clc
inc
cmp
cmpsl
mov
and
jl
xchg
and
mov
es
sbb
or
roll
cld
mov
xchg
lods
or
and
mov
xchg
fmulp
jb
cmp
or
adc
xchg
insb
push
jno
test
stc
add
icebp
and
in
popf
fisubl
and
fdivrl
cmp
popa
movsl
ljmp
jb
mull
faddl
sbb
aam
push
loopne
stos
pushf
les
cli
and
and
ja
outsl
push
test
pop
fsubl
fsubp
arpl
cmp
mulb
imul
insb
pop
scas
inc
and
mov
sbb
inc
jno
mov
in
int3
mov
mov
insb
loope
inc
push
aas
jb
and
jmp
fldl
and
adc
das
xor
jl
cli
add
cmp
xchg
inc
movsl
and
xor
lahf
pop
imul
cmp
pop
sub
and
dec
scas
test
lret
cmpsl
movsb
addr16
ret
xor
adc
imul
inc
stos
xchg
stc
fldl
popa
mov
jno
daa
sub
fbstp
pushf
and
je
inc
sub
shrl
aas
movsb
dec
loopne
and
or
icebp
xor
mov
pusha
out
fildll
rep
cmc
and
in
cmpsb
cltd
arpl
mov
dec
lods
lret
dec
mov
mov
test
data16
dec
popa
call
pushf
mov
lea
fwait
xor
cld
jbe
sbb
push
xchg
mov
mov
xchg
je
mov
ljmp
pusha
inc
call
insl
cwtl
ss
dec
addr16
and
or
xchg
lcall
push
stos
add
pop
and
dec
push
aaa
mov
pop
sahf
and
mov
add
adc
xchg
stos
into
cmp
sub
ficoml
ja
adc
push
cmp
js
or
mov
ljmp
xor
and
insb
insl
pop
and
xchg
das
mov
rcrl
xchg
inc
mov
popa
cmp
out
add
xchg
shrb
outsl
imul
mov
mov
inc
cmp
and
icebp
push
jno
push
push
push
add
mov
inc
adc
sti
pop
sbb
push
leave
push
or
mov
pop
mov
scas
addr16
cmp
prefetch
out
xor
xor
jg
notb
test
pop
add
push
shll
xchg
xchg
aaa
xchg
sub
faddl
and
movsb
fstps
mov
scas
mov
cmc
sbb
sbb
mov
out
div
roll
mov
sub
std
mov
pop
mov
fisttpl
mov
xchg
and
imulb
fs
loopne
xchg
and
sbb
mov
push
mov
popf
and
pop
pop
popa
push
push
enter
or
and
xor
lret
data16
xor
add
scas
das
push
roll
jbe
and
cmp
int3
pop
jg
and
out
movsb
push
imul
in
mov
scas
jns
and
sub
xor
dec
sahf
or
or
cld
jne
and
or
xor
xchg
jp
push
jae
and
shr
pop
add
jle
mov
cmpsb
push
or
jecxz
mov
andl
lds
jbe
xor
pop
and
mov
scas
das
and
and
ss
enter
xchg
mov
sbb
popa
pop
xor
aas
call
push
inc
mov
rolb
sbb
and
fdivr
in
sub
sti
push
mov
or
xor
mov
bound
xchg
inc
push
lea
and
fwait
loop
adc
or
lods
sub
and
and
leave
mov
scas
aaa
popf
pushf
and
mov
lods
lds
xor
mov
push
push
and
xor
adcl
aaa
popa
mov
aas
fisubs
in
in
gs
xor
and
push
xchg
lods
xor
jg
xchg
sub
loopne
iret
and
pop
mov
sbb
shlb
mov
test
mov
rcrl
arpl
fidivl
icebp
lea
cltd
and
mov
mov
imull
dec
jecxz
adc
xchg
gs
or
mov
add
mov
sbb
cmp
in
xor
iret
jg
jge
and
in
and
pop
or
or
dec
cmp
mov
push
add
sub
xor
movsb
aas
xchg
outsb
jecxz
xchg
lock
pusha
and
andb
lret
fisubl
dec
add
sbb
mov
and
xchg
sub
ror
out
mov
dec
sub
mov
and
outsb
repz
movsb
test
lods
and
test
mov
dec
sti
aaa
xor
mov
sbb
lea
xor
popa
dec
ret
mov
in
pop
enter
cs
mov
pop
sbb
jno
notl
cli
push
adc
jecxz
scas
and
outsb
aaa
pop
and
in
push
jo
lds
arpl
dec
pop
loope
popa
cltd
test
fwait
xor
lret
adc
mov
push
imul
movsb
xchg
subb
loop
jo
xor
sbb
orl
mov
and
insb
repnz
stos
xchg
loop
mov
sti
xchg
xor
pop
out
and
mov
pop
pushf
mov
inc
lahf
loope
pusha
or
in
cs
push
mov
sub
mov
pop
mov
jg
and
nop
and
push
pushf
adcb
and
jmp
divl
push
push
mov
and
imul
inc
add
pusha
add
mov
cltd
inc
push
leave
fiaddl
push
jecxz
std
out
mov
mov
sub
dec
call
lods
cmp
push
inc
push
mov
movsl
sub
movsb
aam
add
xchg
jne
xchg
std
in
test
icebp
and
mov
aad
adc
dec
in
fs
push
and
cmovge
sbb
and
push
and
jbe
repz
shrl
mull
hlt
scas
mov
mov
push
test
andl
sub
mov
jge
jno
or
scas
push
mov
iret
insb
and
sti
pushf
int3
pop
inc
popa
push
cld
jmp
and
adc
pusha
xor
and
out
adc
cltd
arpl
mov
les
clc
andl
rorb
and
rorb
pop
and
movsl
movsb
mulb
inc
leave
cmp
pop
lret
cwtl
idiv
cmp
ficoml
and
dec
mov
lock
jnp
dec
pop
pop
cmc
and
out
jp
loopne
pop
outsb
mov
xor
mov
dec
mov
jg
and
roll
out
add
sahf
push
and
jmp
lahf
jge
and
je
insb
stc
push
fbld
ret
mov
dec
out
xchg
ljmp
jns
and
rorl
xor
inc
es
cwtl
data16
mov
jb
daa
inc
and
orps
and
jo
pop
xchg
sub
push
imul
push
stos
inc
stc
push
jne
jno
jnp
xchg
rorb
mov
in
or
fwait
sti
cmp
dec
hlt
cmp
add
mov
adc
xor
sbb
pop
test
or
icebp
pushl
sbb
or
xlat
fwait
push
in
cld
and
in
cwtl
push
mov
adc
arpl
and
push
je
or
mov
adc
scas
mov
inc
out
and
popa
push
adc
fdivs
das
mov
push
pop
xorl
lods
stos
inc
sbb
push
sub
xchg
mov
mov
adc
ds
mov
sti
pop
das
inc
adc
sbb
add
subl
mov
enter
jnp
daa
and
clc
jae
dec
ds
lcall
and
jb
pop
sbb
adc
cld
rolb
xchg
shl
dec
outsl
mov
xlat
ss
mov
inc
cmp
fildl
and
nop
add
sub
and
test
and
aaa
scas
dec
sub
lea
movsl
test
lret
in
and
pop
outsb
adc
nop
cmc
push
sub
and
lods
xlat
jne
push
push
std
mov
lock
mov
test
movsb
or
enter
nop
rcrl
mov
jge
push
cld
in
mov
pop
push
arpl
xchg
sub
add
enter
in
outsb
sbb
sbb
insl
mov
mov
add
dec
cmpsl
lods
test
inc
pushf
insb
dec
xchg
and
mov
xor
push
dec
mov
cmp
dec
mov
mov
pushf
mov
xor
and
sub
mov
je
loopne
inc
fwait
es
xchg
dec
mov
int
inc
mov
sar
mov
test
mov
xchg
mov
adc
punpckhwd
mov
and
sub
sbb
pop
lret
mov
pop
cmp
lea
fistps
bound
push
shrb
in
push
imul
dec
and
loopne
sub
xor
mov
xchg
and
pop
ljmp
cmp
pop
push
das
and
fcompl
movsb
pusha
adc
and
cmpxchg
and
mov
test
push
xlat
or
ret
mov
fdivl
popa
loop
and
enter
int3
and
insl
test
popa
shr
inc
pushf
add
sbb
test
pop
push
scas
push
int
lods
cwtl
cli
add
mov
repz
pop
and
cmp
pop
int
pop
and
popf
lret
push
cmp
cwtl
xor
cmpsb
cmp
push
in
mov
mov
sbb
aad
aaa
das
shll
dec
cli
jp
sbb
adc
movsb
and
xor
push
cmp
pusha
xchg
popa
and
adc
push
and
call
sahf
fsubl
mov
cmp
and
mov
and
ja
les
lds
and
icebp
add
adc
dec
in
addr16
mov
jne
push
test
insb
lret
movsb
bound
ljmp
aaa
jns
and
adc
inc
xchg
mov
inc
int
mov
xchg
lret
mov
popa
and
into
fcmovu
repnz
test
sbb
push
outsb
adc
jbe
test
decl
imul
mov
adc
lock
sub
lods
adc
stc
movsb
shlb
ret
mov
call
movsb
lods
xchg
dec
js
mov
dec
fiadds
fnstsw
cmpsb
fidivrl
sub
jg
or
loope
loop
jne
add
xor
and
add
sarb
hlt
repz
sub
and
sbbb
es
cmp
scas
ret
in
xchg
xchg
stc
and
data16
cwtl
lcall
mov
sub
add
mov
outsl
pop
stc
shrb
lods
xchg
fs
pop
and
cli
mov
scas
push
inc
mov
std
cmp
cltd
mov
and
xchg
clc
jns
cmp
cmp
or
pop
and
cwtl
adc
cmp
movsb
imul
adc
add
in
sub
test
and
out
sahf
lods
call
mov
bnd
and
adc
inc
cmc
das
jbe
mov
jnp
sbb
cwtl
and
popa
mov
jg
and
pop
cmpl
sbb
mov
movsb
jmp
ret
and
or
enter
cwtl
mov
rcrl
andl
js
xor
test
dec
xchg
jno
out
cmp
xor
add
mov
rorl
dec
imul
add
mov
and
negl
and
repz
and
xchg
movsb
push
or
fwait
and
adc
inc
std
inc
jge
pop
sbb
dec
xchg
pop
and
test
sahf
mov
add
push
mov
mov
iret
and
xorl
outsl
sub
dec
cmp
in
inc
addl
das
test
jb
mov
fistpll
repz
cmp
scas
imul
xor
xchg
xchg
jecxz
mov
dec
add
cmp
out
add
and
les
frstor
negl
sarb
mov
sti
in
clc
movsb
and
addr16
mov
repz
test
clc
sbb
pushf
cmp
fiaddl
out
stos
and
ret
loope
imul
cmpsl
jns
ss
xchg
and
or
lcall
mov
and
movsb
mov
jno
filds
sbb
bound
sbb
dec
int3
push
dec
xchg
lahf
and
dec
xor
pusha
arpl
enter
ret
insb
sub
xchg
subb
xchg
jne
mul
adc
and
mov
mov
add
fistpl
cs
add
movsb
or
pop
mov
push
and
stos
movd
in
orl
xchg
cli
pop
mov
jl
jns
mov
popa
pop
fdivl
mov
pushf
dec
popf
sbb
dec
xor
pop
xor
jmp
adc
insl
push
lea
in
add
fcomps
jno
xor
mov
imul
sub
and
adc
iret
jns
pop
in
or
shrl
pop
pop
sub
shld
jns
aam
ds
mov
cmpsb
push
fcmovne
daa
add
imul
sahf
add
push
xor
js
mov
movsb
add
icebp
ljmp
shrl
pop
in
xchg
mov
gs
and
leave
xchg
or
lods
pop
mov
cmp
addl
adc
mov
jb
ror
loope
xchg
cmpsb
bound
pop
in
jle,pn
inc
mov
or
mov
and
sub
and
or
and
push
ficoml
dec
push
mov
xor
movsl
inc
rcrb
lret
test
fmull
popa
xlat
adc
stos
or
pop
fsub
or
iret
outsb
inc
jecxz
movsb
xor
add
pop
js
movsb
jmp
sub
and
mov
cltd
add
and
xchg
or
nop
lahf
jmp
and
xchg
add
aam
push
lds
out
inc
loopne
and
pop
or
mov
and
push
inc
and
lret
mov
lcall
adc
xchg
or
add
cmp
icebp
out
xchg
insb
test
mov
lret
xor
pop
mov
and
gs
and
mov
aas
cwtl
ret
and
mov
scas
and
call
pusha
ljmp
jnp
xchg
in
jp
popf
test
and
ret
cli
inc
xchg
pop
test
ds
push
popl
sahf
or
jl
xor
dec
addr16
pusha
dec
lcall
jge
orl
and
into
add
in
pusha
and
push
cli
mov
movsl
out
push
mov
rcpps
test
jo
je
ljmp
fcmovnbe
or
and
sub
lret
jg
and
lcall
lods
inc
cmp
rol
int
and
jno
add
or
sub
xchg
mov
call
ljmp
mov
inc
jne
or
mov
mov
mov
sahf
and
mov
test
xchg
call
sbb
adc
mov
ret
mov
fnstsw
das
lods
daa
sahf
std
stc
mov
and
je
push
pop
outsl
hlt
leave
test
pop
push
and
jmp
pushf
roll
gs
popa
jno
xchg
je
mov
jne
lods
popf
jb
movsl
jae
mov
popa
xchg
fldenv
xchg
fbstp
stos
and
xorl
xchg
cld
mov
and
push
js
pusha
adc
popa
and
adc
subl
sub
nop
sbb
add
push
ds
pop
fimull
or
push
pop
pop
and
imul
pop
lret
and
sbb
push
and
cmc
in
lods
movsb
andl
pop
sbb
mov
in
pushf
sbb
cmpl
and
aad
pusha
dec
push
loop
mov
fucomp
or
ret
loope
inc
adc
addr16
adc
push
add
int
sub
adc
jmp
cwtl
arpl
xchg
sbb
dec
in
cmpsb
es
mov
xchg
mov
mov
xor
push
push
mov
pop
and
pop
or
xchg
inc
mov
mov
push
dec
out
mov
dec
es
inc
cmp
and
push
or
add
sub
into
and
cmpb
xor
push
push
dec
inc
adcl
gs
punpcklwd
cmp
enter
addr16
cmpsb
repnz
mov
push
aas
into
aam
xor
imul
pop
inc
or
adc
fisubrs
or
mov
lahf
dec
cmpxchg
sub
lock
dec
or
or
out
dec
outsl
int3
and
and
and
pop
or
sbb
shlb
jae
or
lcall
and
mov
fimull
and
in
and
das
test
push
mov
int
xchg
sahf
aam
lret
test
sbb
dec
mov
sbb
les
icebp
sbb
jne
mov
fdivl
mov
inc
arpl
mov
pop
dec
stc
mov
test
clc
sti
and
add
pop
rorb
jno
add
mov
push
test
js
xchg
sti
loop
xchg
jmp
iret
mov
mov
out
les
aaa
out
call
pop
mov
bound
mov
movsl
jo
sub
in
mov
pop
cltd
pop
xor
fcmovne
addl
shlb
jne
jge
movsb
imul
rcrl
cmp
ja
nop
lea
stos
xchg
je
jge
mov
insl
adc
push
and
lcall
cmp
inc
shlb
and
andl
adc
xchg
lcall
jmp
mov
das
jb
jecxz
pop
clc
int3
and
and
mov
adc
insl
lods
and
loop
das
imul
mov
dec
popf
pop
mov
and
shll
shrb
in
movsb
test
insl
and
mov
add
int
xor
adc
call
repnz
loop
push
and
in
mov
andnps
mov
les
imul
std
or
test
sahf
mov
nop
stos
pop
repnz
push
es
xchg
pop
notl
jns
jnp
mov
mov
shl
pop
xlat
loopne
test
sbb
mov
and
xchg
dec
fistps
ja
and
adc
and
je
iret
lret
lea
in
mov
addr16
jmp
xor
cli
sti
and
fstps
insl
xchg
out
and
or
jns
in
sbb
and
sbb
add
push
fistpl
movl
adcl
xor
in
push
and
jae
jl
ret
jbe
xchg
sub
aas
clc
pop
and
pop
outsb
xor
push
popf
test
push
ret
mov
lea
jg
lds
add
xlat
addl
mov
mov
insl
fidivrs
and
aam
push
and
pop
and
daa
aaa
scas
cld
and
pop
gs
sub
mov
push
and
push
xchg
and
cmc
les
test
mov
decl
and
cli
adc
lret
bound
fwait
pop
mov
int
aam
popf
add
and
push
mov
xchg
mull
fstpt
mov
fdivl
mov
fwait
in
or
mov
mov
mov
cmp
mov
cmpsl
jae
decl
jns
repz
xchg
inc
mov
shlb
adc
jno
daa
and
push
ss
cltd
leave
and
aaa
std
shlb
fs
ja
and
insl
and
sub
or
mov
shl
nop
and
push
xchg
xchg
dec
aas
sub
call
add
push
aas
stc
and
sub
mov
and
scas
out
and
js
outsb
mov
into
cli
and
push
stos
fstpt
inc
xchg
into
fstpt
and
outsl
mov
jne
pop
and
mov
sarl
sub
add
mov
das
push
jae
add
addr16
xor
lods
dec
jno
int
popa
stc
and
icebp
xor
inc
sahf
ficoml
and
shlb
mov
add
jae
push
xorl
pop
adc
scas
xor
shll
jbe
popf
mov
jg
ja
mov
push
mov
popa
std
mov
fdivrl
dec
mov
xchg
xor
mov
popl
mov
mov
adc
sarb
pop
sbb
bnd
or
popa
sbb
and
push
aaa
lods
repz
mov
mov
sarl
and
cwtl
add
and
jg
and
mov
and
sbb
or
mov
and
mov
add
mov
pushf
pop
mov
xor
add
or
mov
and
xchg
fbld
mov
popa
lds
mov
push
jmp
mov
xchg
lret
cmc
cwtl
pop
cmp
adcl
mov
clc
sbb
cmp
lock
dec
and
jne
xchg
mov
fs
xchg
cs
jl
jmp
pop
sub
jge
gs
xchg
and
repz
and
mov
cmpsb
stos
and
int3
nop
icebp
shlb
mov
add
cmp
push
mov
popa
and
adc
arpl
lahf
lret
pop
clc
and
test
daa
call
inc
sub
movsb
cmpsb
inc
fnstsw
dec
cmpsb
cmpsl
sub
iret
insl
inc
cmp
inc
push
repnz
mov
xchg
jb
mov
js
mov
imul
add
and
xor
test
jbe
jg
lods
xor
or
andl
movsb
adc
jns
and
add
and
fidivrl
pop
inc
mov
test
scas
es
or
daa
xor
pop
dec
sbb
sub
inc
xchg
cmp
and
mov
inc
dec
xchg
jb
mov
bound
je
out
and
test
and
fs
mov
outsb
xchg
fsub
and
cs
or
idivb
jno
stos
xor
aad
stos
mov
and
sbb
mov
dec
dec
inc
and
ss
insl
pushf
sbb
ljmp
mov
lret
xor
adc
mov
lcall
daa
movsl
in
rolb
arpl
data16
mov
sub
adc
call
ljmp
and
in
xor
test
jp
and
sti
mov
push
and
pop
cltd
mov
cmpb
cmpsl
and
jle
mov
dec
bound
or
ret
xchg
sub
xchg
mov
push
lds
sbb
dec
pushf
div
ja
mov
and
and
fdivs
cmp
cmp
mov
and
std
out
add
add
sbb
lret
xor
sbb
push
inc
mov
fiadds
jno
inc
test
sub
and
dec
lret
stos
pop
repnz
sub
outsl
push
add
loop
mov
imul
or
pop
push
lret
cld
mov
and
leave
xchg
xlat
and
faddp
test
inc
mov
and
rcrb
movsb
orb
push
sub
jle,pt
outsl
pop
fldt
scas
cmp
scas
imul
imul
sub
xor
xchg
and
jae
popa
xchg
jne
pusha
and
ljmp
test
mov
cmc
lret
lret
add
call
and
sti
jg
andl
adc
mov
push
or
fwait
xor
lods
jp
aas
das
add
pop
cmpl
cwtl
imul
dec
insb
loope
mov
pushf
adcl
inc
shll
xor
xor
aas
add
and
and
in
inc
lahf
jne
aaa
out
outsl
sahf
rclb
and
xchg
jge
cmpsb
add
push
repnz
movsb
addb
lods
mov
cld
nop
test
ficoms
and
addl
adc
and
pop
cmp
dec
js
mov
mov
mov
adc
mov
mov
mov
pusha
jecxz
sub
mov
pop
xchg
push
push
sbbb
or
popa
addr16
push
fldenv
out
xchg
pop
cmpsb
xor
mov
test
or
jg
or
jg
pusha
mov
out
push
inc
popa
push
fwait
push
pop
add
push
lods
adc
sub
pop
jbe
imul
adc
fisubs
or
jecxz
mov
mov
sbb
mov
add
and
pop
xor
ljmp
out
shl
daa
shl
sub
push
mov
mov
pop
push
cmp
sub
mov
jp
cmp
push
dec
loope
scas
bound
mov
xor
inc
cli
out
mov
sbb
lods
roll
mov
loopne
adc
cmp
pop
push
adc
imul
je
rol
inc
sub
loope
clc
pop
nop
xchg
call
xchg
pop
shl
loope
cli
jp
mov
out
mov
inc
push
mov
inc
sbb
out
jnp
ds
xor
push
pmulhuw
icebp
inc
cmp
stos
push
and
sub
adc
lods
sbb
mov
fsubs
and
fsubs
rcll
xlat
cmp
dec
mov
push
inc
sbb
gs
push
popf
pop
movsb
push
xchg
adc
enter
xchg
dec
add
or
cmp
aas
sub
out
loop
repz
sbb
mov
in
add
cwtl
xlat
sub
cmp
xchg
push
rol
daa
push
in
js
cmp
pop
daa
mull
cli
mov
es
xor
icebp
andb
xchg
xlat
arpl
pop
xchg
push
leave
mov
sub
gs
sbb
dec
jmp
movsl
imul
mov
cs
loope
scas
xor
push
sub
fisubs
scas
mov
scas
mov
cwtl
out
pop
add
cwtl
leave
fwait
inc
and
mov
fidivs
xchg
cmpsl
add
iret
and
and
mov
shr
mov
lods
jns
das
mov
ljmp
cltd
adc
fidivrs
xor
daa
jge
pop
movsb
outsb
inc
push
decl
pop
xor
je
and
adc
jbe
aam
shl
iret
loopne
dec
mov
and
or
pop
dec
jns
push
and
in
jbe
xor
pop
inc
insl
push
push
pop
hlt
and
test
imul
test
and
daa
notb
add
xor
mov
sbb
das
xchg
movsb
fildll
imul
and
xchg
nop
and
mov
test
imul
cmpl
idiv
es
stos
mov
mov
or
pop
outsb
test
or
xor
insb
and
test
inc
xchg
xchg
pop
add
in
sahf
jmp
or
imul
and
inc
ror
imul
xor
lds
jbe
cmp
cmpsb
sub
fcomps
test
push
mov
dec
xchg
xor
mov
das
adc
sbbb
push
fsubr
popaw
mov
test
jb
bound
cmp
pop
repz
out
push
stos
push
stos
add
mov
cmp
cmp
and
test
mov
adc
ret
les
fidivl
mov
and
xor
xchg
mov
jae
and
std
mov
mov
popa
pusha
scas
sbb
popa
jge
jnp
aas
pop
add
fiadds
and
popa
bound
and
mov
test
mov
sub
push
lret
pop
movsl
pushf
mov
and
xorb
imul
sbb
cmp
fmuls
stc
add
mov
and
in
aam
negb
lret
scas
out
mov
loop
popf
rorl
jmp
dec
hlt
pop
adc
mov
and
enter
leave
jne
fsubrs
jmp
xor
stos
popf
inc
insl
mov
sbb
inc
andl
xor
cmc
pop
fisubs
jle
sub
fldt
and
xchg
sub
pop
enter
cmpsb
xchg
icebp
mov
in
fnstcw
loope
mov
xchg
cmp
push
xor
jo
jg
mov
adcl
mov
sub
inc
jae
mov
xlat
inc
mov
es
repnz
mov
dec
adc
sub
rcrb
xor
test
pop
pushf
or
call
inc
inc
or
in
punpckhwd
push
js
xchg
sbbl
sub
int
add
ds
sub
gs
lea
xchg
rol
lcall
push
imul
repz
out
out
movsl
push
pop
sbb
push
or
and
sub
test
mov
ret
mov
sub
cmpsl
push
jae
stos
repz
mov
cmp
shlb
jecxz
stos
pop
dec
xor
into
cli
mov
and
popf
std
andl
sub
sbb
aaa
flds
pop
push
add
popf
push
and
out
je
jnp
mov
scas
or
add
inc
pop
jae
cmp
mov
and
lods
out
xchg
lahf
popf
ret
and
rcrb
jge
and
or
popf
iret
and
je
rcr
scas
mov
movsb
ret
fwait
xorl
sbb
gs
or
das
jecxz
pop
cmp
dec
hlt
test
test
movsl
scas
add
push
cli
adc
out
das
shrb
and
and
xor
pop
mov
lahf
fldl
add
sbb
test
lcall
in
cmc
jne
cmp
and
repnz
xchg
add
pop
out
das
mov
jno
shrb
adc
fdivl
mov
mov
int
sbb
rorl
bound
loop
adc
mov
clc
pop
lcall
scas
cli
jp
popf
jle
shll
push
sti
sbb
and
rclb
imul
mov
sub
sahf
hlt
sbbb
hlt
jmp
bound
adc
sbb
ret
daa
in
cmp
sub
mov
push
add
add
sbb
test
sbb
and
push
jl
and
jmp
mov
ds
mov
pushf
dec
xor
mov
aaa
sub
lods
and
xor
inc
adc
movsb
and
inc
pop
out
cmp
shlb
xchg
inc
mull
enter
and
dec
dec
and
jmp
pop
adc
and
mov
notl
lahf
aam
and
jl
outsb
and
xchg
dec
and
jnp
inc
stos
jns
and
xor
sbb
cmpsl
and
inc
jg
push
les
mov
fcmovbe
loop
orl
outsl
pop
adc
and
movsl
cmp
testl
cmp
adc
and
and
inc
cmp
jp
mov
dec
movsb
xor
jge
aad
test
adc
icebp
push
or
and
mov
cmp
pushf
inc
test
dec
and
out
sbb
mov
push
lods
and
test
and
nop
jle
scas
hlt
push
pushf
mov
and
inc
mov
xchg
mov
sbb
and
test
and
faddl
and
and
mov
push
loop
adc
cmp
pop
and
jno
lods
lods
pushf
and
push
xchg
adc
pop
in
sti
orl
in
lods
ret
xchg
outsl
popf
xor
jae
fwait
daa
xchg
stos
fsin
xchg
enter
jne
push
push
mov
sub
fildl
pushf
lret
pop
and
push
outsl
mov
sbb
sbb
adc
xchg
lock
lods
mov
cmpsl
aam
xchg
popa
into
cmp
out
mov
outsl
cmp
pop
ret
daa
push
call
lods
cli
push
push
pop
addr16
stc
pop
dec
jg
mov
clc
xchg
inc
push
sub
pop
inc
sti
and
jg
and
sarb
sub
dec
pusha
lcall
mov
sbb
inc
and
xlat
fnstsw
add
outsb
popf
repnz
pop
popa
sbb
aas
call
inc
push
adcl
mov
xor
incl
js
stos
ds
and
mov
int3
fwait
mov
pop
popf
hlt
jmp
sbb
or
inc
mov
js
es
xor
test
pop
sub
lcall
fbld
and
lods
and
mov
int
and
aaa
cld
dec
repz
xor
dec
xchg
mov
inc
mulb
jmp
dec
pop
inc
setne
movsb
loope,pn
arpl
pop
mov
and
inc
sbb
push
sahf
sub
mov
sbb
loope
test
pushf
mov
sahf
repnz
sbb
cmp
jg
mov
sbb
and
pusha
pop
xor
fsubs
shrl
in
insl
rclb
and
lea
mov
lock
mov
aaa
and
std
int
ret
push
and
pop
jp
mov
and
aam
repnz
mov
mov
mov
pusha
sub
ficoml
int3
testl
cli
in
push
xchg
inc
inc
and
inc
jmp
cltd
sbb
shrb
cmc
loope
iret
pop
aad
xor
popa
push
stos
repnz
cmpb
pop
add
or
sbb
jp
fisubrl
add
gs
push
or
pop
les
leave
je
sbb
inc
loopne
cmp
cmc
andb
mov
loope
xlat
jo
push
shlb
jae
and
sub
fwait
adc
mov
add
lahf
cltd
sahf
mov
lods
pop
repnz
mov
sub
add
aas
mov
and
cld
dec
jmp
fidivl
pop
nop
stos
cmp
cmp
es
and
mov
call
outsl
mov
push
ror
sub
push
adc
fisttpl
xor
inc
dec
adc
jbe
pop
xchg
inc
add
inc
mov
mov
cmp
andl
je
and
loop
fcomps
pop
sub
add
jmp
stos
mov
xchg
mov
mov
jp
jnp
dec
or
sub
cwtl
push
mov
mov
icebp
xor
bound
inc
and
testb
jge
das
das
jl
test
pop
jno
xchg
aad
jbe
or
mov
in
mov
pop
jns
inc
test
and
or
pop
and
push
sti
push
insl
pop
andl
xchg
imul
fisubrl
xlat
mov
loopne
and
imulb
dec
push
and
aas
fldl
cmp
fs
mov
pushf
in
sbb
jle
loopne
mov
mov
in
imull
mulb
inc
arpl
push
data16
pop
and
inc
jle
cwtl
js
adc
ret
jae
je
jmp
shlb
sbb
loope
xchg
ja
out
and
pop
adc
fiadds
jle
push
dec
mov
xor
int
push
cli
and
cmp
popa
daa
mov
push
out
pop
sbb
xchg
push
and
add
jl
imul
and
sahf
ljmp
fmulp
loopne
ret
bound
mov
mov
push
mov
mov
es
js
int
loopne
and
mov
push
push
cmp
stos
scas
fiadds
loope
loop
rorl
add
jmp
and
out
daa
out
pop
mov
iret
and
inc
and
cmp
mov
xchg
mov
iret
jne
popl
addr16
test
mov
xchg
and
push
out
xchg
dec
nop
and
sbb
push
pushf
outsb
adc
lret
dec
pop
in
xchg
test
in
mov
popf
pop
mov
aas
sbb
imul
jbe
into
gs
out
fldcw
clc
popa
add
mov
sbb
test
popa
pusha
dec
inc
pop
shll
cmc
testl
mov
ficoml
mov
imul
pusha
stos
adc
cltd
or
and
iret
mov
xchg
inc
sbb
imul
jle
pop
add
and
jns
xchg
pop
dec
js
and
frstor
xchg
and
and
adc
lock
dec
mov
sbb
push
mov
and
insl
les
ss
and
pop
outsb
je
xor
sti
mov
test
outsl
ds
mov
cmp
jo
mov
std
mov
lahf
cmovns
or
xchg
aaa
out
outsb
and
out
pop
movsl
adc
mov
push
mov
add
movsl
cltd
mov
jmp
inc
jl
in
mov
and
push
shll
xchg
enter
mov
fldl
lods
rorb
loope
mov
popa
gs
xchg
push
and
xchg
fs
mov
mov
sub
xor
jge
cmp
xchg
popa
mov
push
and
sub
and
mov
shlb
xor
insl
sbb
inc
mov
and
mov
and
in
cmp
add
lcall
enter
mov
mov
add
inc
jno
push
xchg
loopne
mov
and
inc
shrb
xchg
insl
movsl
and
inc
or
out
xor
dec
scas
xor
fstl
enter
lock
pop
mov
stos
sbb
dec
mov
and
ss
test
and
inc
stos
xlat
push
in
and
push
cmp
mov
xchg
cmpl
dec
mov
or
cwtl
rol
dec
sub
inc
mov
hlt
xor
cmpsl
mov
sbb
mov
in
mov
popa
std
and
adc
fwait
and
push
mov
sbb
adc
pop
iret
sub
pusha
aam
lahf
mov
mov
jnp
push
mov
mov
jecxz
ds
lahf
mov
in
inc
andl
movsb
push
repz
in
fs
mov
and
loop
sahf
sub
push
test
orl
aad
cmc
in
and
push
ret
push
jl
mov
pop
je,pt
and
jmp
mov
insb
imul
popf
aam
std
mov
push
rolb
cmp
ret
and
enter
ljmp
and
faddp
add
and
mov
loop
sti
insl
jg
stos
sbb
rcrl
add
or
mov
iret
popa
dec
aam
out
mov
and
inc
and
cmp
bound
cmpsl
fdivl
iret
data16
cmp
mov
pop
or
push
test
xchg
imul
movsb
lods
cld
adc
aaa
sbb
xor
les
jnp
arpl
fisubl
xor
dec
popa
adcb
jmp
cpuid
insl
ret
cmpsb
sahf
call
sub
and
fldenv
sub
pcmpgtw
sub
mov
or
xchg
and
mov
and
sbb
add
dec
mulb
out
push
pusha
arpl
and
int3
and
aaa
insl
xchg
cltd
cwtl
lods
add
jb
lods
push
sahf
cmp
mov
shrl
lds
pushf
mov
insl
xchg
in
mov
inc
xor
push
cltd
cwtl
addb
mov
dec
mov
mov
mov
inc
sub
inc
shrb
in
enter
dec
jp
out
sbb
pop
mov
into
rcll
adc
xchg
insb
scas
out
or
lds
pop
xorb
jbe
mov
nop
inc
fucomip
push
xor
mov
scas
lret
mov
addl
jae
test
inc
mov
cs
test
push
inc
nop
and
mov
ljmp
in
inc
outsb
and
data16
inc
stos
pop
ficoms
popa
pusha
das
enter
and
inc
cmpsl
mov
pop
repnz
push
dec
adc
cmc
or
and
or
pop
jno
repnz
fs
push
in
stos
and
sub
sub
push
push
in
inc
xlat
cs
push
sbb
mov
int3
jne
clc
xchg
pop
test
rcrb
adc
mov
mov
popa
mov
lods
test
mov
mov
adc
xor
cmp
insl
dec
mov
sbb
jb
push
es
and
jo
int
lret
ds
loopne
in
std
mov
out
les
and
fildll
cmp
and
fidivrs
sahf
cmp
xor
mov
xchg
pop
call
sub
int3
mov
sbb
mov
xor
into
push
lret
mov
fldlg2
mov
int
dec
mov
sub
inc
inc
mov
and
rcrl
cwtl
or
xchg
test
lahf
sahf
and
push
jbe
ja
enter
dec
dec
push
ss
mov
sub
cli
jns
or
enter
mov
jnp
mov
stos
imul
push
scas
and
popa
jb
out
andb
add
and
out
addr16
mov
inc
movsb
test
xchg
lret
mov
add
jge
inc
fnstsw
scas
xchg
popa
addr16
pop
and
fwait
stc
mov
and
xchg
adcb
js
popa
sbb
jno
sahf
and
pop
fs
mov
popa
in
mov
mov
cwtl
mov
and
popa
fucomp
hlt
insl
pop
mov
nop
xor
cli
adc
dec
sbb
pop
pop
mov
scas
push
iret
fstl
and
mulb
out
call
fisubs
cmp
popa
daa
out
pushf
roll
and
cmc
xor
rcr
add
and
mov
inc
lea
lds
mov
fiadds
mov
mov
shr
mov
add
iret
cmpsb
sub
mov
lock
sti
mov
out
xchg
imul
push
xchg
fwait
aad
jbe
movsl
inc
sbb
jg
stc
xchg
outsb
inc
xor
icebp
sub
popa
aaa
lret
lods
out
and
inc
cli
or
mov
roll
notb
inc
ds
fwait
and
decb
sbb
inc
jecxz
xchg
stos
jno
in
movsl
and
and
repnz
es
fdivrl
cmp
push
and
xor
jmp
or
movsl
sarb
and
and
pop
lahf
push
xchg
hlt
popf
inc
movsl
sbb
fwait
lods
mov
stos
dec
xor
scas
lock
adc
push
loopne
add
xchg
mov
test
pop
mov
inc
jnp
add
movsl
or
push
ss
push
jno
std
cmp
outsb
xchg
cmp
sahf
xchg
icebp
xor
xor
das
add
sbb
add
xchg
jge
and
xchg
iret
push
movsb
xchg
inc
cld
xchg
inc
push
inc
sti
or
fisubrs
pop
push
adc
arpl
gs
lret
and
and
jne
adc
les
jb
outsl
jae
fdivp
and
cmp
sarb
xchg
jg
jo
pop
fldt
mov
ret
pop
jecxz
pop
loope
mov
cmp
int
jmp
adc
sbb
mov
add
inc
pop
mov
sbb
cltd
loopne
out
or
roll
push
xor
jb
adc
push
mov
fnsave
add
pop
mulb
loope
adc
push
mov
inc
loopne
jno
divb
jns
jnp
shr
mov
jl
sbb
mov
std
insl
adc
lea
gs
sbbl
and
inc
je
repnz
loope
sahf
sub
dec
test
push
cmpsl
icebp
imul
scas
xor
movsl
or
push
pop
mov
lds
xchg
scas
jbe
and
inc
js
dec
mov
xchg
fiaddl
aad
xchg
or
pop
and
xor
or
loopne
movsb
cli
cltd
or
movl
idivl
cwtl
and
sub
push
pop
push
mov
sarl
xchg
xor
cmpl
fcoms
or
aaa
sti
mov
mov
testb
mov
and
loopne
inc
in
and
sahf
scas
xchg
xchg
cwtl
and
add
lcall
push
inc
in
pop
and
clc
push
adcl
sbb
insl
pop
jmp
fcmovne
push
mov
mov
inc
mov
lcall
pusha
pop
xchg
jns
and
enter
pop
mov
dec
lods
xchg
push
out
mov
mov
es
stos
cmp
jp
fs
and
in
inc
push
fldl
pop
mov
test
aad
mov
sbb
pop
stc
bound
push
ret
jns
push
push
xor
out
fwait
mov
sub
dec
inc
test
and
sub
and
outsb
and
std
test
push
into
cmc
cltd
and
jg
fcomp
mov
std
and
sbb
test
jae
push
dec
add
int3
sub
shll
or
in
mov
pop
pop
inc
and
push
js
and
in
xchg
lea
and
jb
cmp
sbb
sbb
ret
xchg
inc
inc
push
aam
jno
sub
stos
and
adc
mov
mov
lret
push
mov
outsl
shlb
sub
push
mov
and
int
repnz
and
mov
and
repz
into
frstor
sub
rcll
ljmp
in
push
out
mov
mov
mov
mov
mov
popa
std
mull
jp
iret
scas
sbb
cwtl
sub
mov
mov
xchg
loopne
and
mov
push
popf
jge
out
repz
sbb
lods
ds
mov
and
pop
mov
rcrb
and
call
fwait
cwtl
test
mov
clc
fsubrs
movsb
inc
loop
les
arpl
test
andb
add
aaa
xchg
xor
jl
mov
and
mov
push
cmp
inc
mov
ja
or
insb
xor
mov
aad
leave
movsl
push
sti
divl
shlb
int3
sbb
xchg
add
cmc
cmp
sub
jge
loop
or
lea
jne
xchg
pop
sub
jae
repz
nop
addb
xchg
and
scas
iret
pop
sub
sub
sub
pop
movsl
push
inc
lret
and
mov
fcomps
mov
xchg
mov
shll
std
mov
push
add
jp
out
and
cs
arpl
outsl
movsb
jge
and
and
or
mov
jne
inc
xor
pop
mov
mov
xor
add
mov
push
xor
push
add
sti
ret
fisubs
jmp
xlat
and
cmpsl
in
cmp
int3
out
mov
xor
shrb
and
shrb
pop
and
dec
clc
xchg
pushf
fs
inc
dec
or
and
cs
or
and
dec
add
popa
test
fsubs
repnz
push
cs
cmp
pop
or
loopne
xchg
es
xor
mov
test
and
cmp
dec
sub
sub
cmp
enter
int
mov
ficomps
in
and
test
sti
or
push
jne
mov
inc
rcll
lret
es
sub
pop
cmpsl
and
idivl
push
shll
and
je
bound
int3
icebp
movsl
push
add
xchg
aam
rcr
dec
mov
inc
outsl
test
mov
jo
jne
fsubrp
push
pop
xchg
outsl
and
add
and
js
loopne,pt
mov
shrb
fcmovu
xchg
sub
aad
test
cmpsb
cmc
sbbl
inc
mov
loop
insl
mov
or
loopne
dec
test
and
loop
add
dec
inc
bound
xorl
adc
loop
mov
subl
jae
out
andl
add
icebp
loope
fistps
call
repz
push
out
mov
xor
or
pop
xchg
rolb
add
pop
cwtl
lods
aam
and
dec
aad
pushf
popf
leave
in
addl
test
clc
dec
inc
movsl
daa
gs
in
lea
mov
or
hlt
fcoml
fs
sub
add
xor
iret
xchg
pop
dec
cmp
iret
sub
and
xchg
in
in
lea
cmp
loope
xchg
jb
xchg
xchg
sub
mov
and
push
nop
scas
xchg
test
jmp
pop
je
scas
mov
loopne
inc
pushf
insb
sti
xchg
loopne
push
sbb
das
cmp
outsl
nop
cli
insb
mov
lods
push
fwait
jns
outsl
push
jp
mov
lahf
pop
pop
push
sbb
pop
add
stos
int
cld
cmp
mov
cmp
dec
mov
and
add
iret
stos
dec
lds
cmp
inc
in
mov
xor
jbe
push
js
daa
repz
mov
mov
or
lods
pop
mov
fs
push
and
enter
jg
adc
lock
rorl
std
and
cli
mov
fidivs
mov
push
sbb
insb
inc
fstpl
xor
adc
and
pusha
sbb
and
inc
cmpb
mov
das
das
inc
adc
fldcw
cmpsl
and
jle
cltd
jns
movsb
in
outsl
push
loope
icebp
inc
lds
dec
cmp
and
std
leave
adc
int
and
rorl
imul
call
jle
int3
cltd
jl
leave
xor
mov
sub
jp
or
scas
adc
ja
lds
stos
or
xorb
test
arpl
movsb
or
out
fimuls
cmp
xor
enter
into
fstpt
js
test
mov
jecxz
lods
add
ds
mov
cmpsl
gs
sbb
jae
dec
or
push
sub
loop,pt
lods
inc
jne
ss
movsl
sahf
add
sub
sub
xor
das
aad
cmp
lods
and
hlt
testb
test
mov
sbb
popf
icebp
inc
popa
nop
stos
sahf
xor
or
mov
inc
and
lods
out
movsl
mov
sub
cld
mov
mov
sub
pop
loop
jle
and
mov
pushf
out
loopne
scas
or
fwait
stc
sub
and
stos
cmp
push
and
aam
push
mov
add
jge
xor
and
jb,pt
and
adc
mov
jmp
pop
xchg
mov
aam
call
adc
popa
mov
xor
pusha
add
stos
inc
cmc
scas
orl
and
xchg
inc
and
nop
add
lods
mov
and
mov
and
into
dec
test
mov
and
out
push
push
sbb
loope
pusha
xchg
xchg
sub
mov
add
add
mov
sahf
ffree
int
imul
or
pop
sbb
aas
sub
test
and
push
sub
stc
orl
xor
sarl
xchg
shl
cmp
add
imul
pop
enter
aam
cmp
and
test
mov
add
mov
xchg
and
cmp
inc
in
xor
test
cltd
pushf
xchg
xchg
cmp
mov
xchg
sub
arpl
mov
mov
leave
test
rcll
stos
sub
stos
cmp
and
xchg
aaa
aaa
mov
and
dec
movsb
test
ljmp
and
rclb
mov
push
in
popa
shrl
fcomps
push
bound
inc
pop
jle
es
and
movsl
loopne
inc
shll
and
cmpl
leave
sahf
sub
inc
call
scas
test
in
fsubs
jnp
push
arpl
add
icebp
jmp
rorl
and
mov
xlat
test
movsb
popf
jg
stos
stos
enter
push
shl
scas
lcallw
movsl
pop
push
cmp
cld
add
in
and
lahf
sub
push
movsl
xchg
sub
aaa
push
repnz
add
or
lock
clc
das
shlb
iret
push
and
push
cmp
sbb
loop
call
dec
and
inc
mov
loop
sub
adc
fisubl
fsubrs
divl
sahf
das
and
test
cs
out
cmp
or
pop
lcall
mov
adcl
loopne
scas
inc
dec
leave
imul
mov
movsl
cmp
cmp
lret
adc
dec
ret
aas
insb
mulb
iret
inc
lcall
hlt
int3
clc
lahf
push
out
jl
xchg
ja
andl
imul
fmull
xchg
test
enter
nop
jmp
xchg
mov
ja
cmp
or
inc
inc
scas
loope
int
and
sahf
bound
or
out
sbb
and
inc
pushf
jnp
mov
cmpsb
xor
arpl
shlb
sub
xchg
iret
mov
subl
inc
negl
insl
enter
inc
jnp
and
icebp
push
ret
mov
out
xchg
iret
call
push
cmpsl
hlt
enter
mov
push
in
dec
sbb
xchg
pop
and
daa
push
cld
and
adc
cmpsb
mov
inc
add
call
dec
cmpsl
fwait
sub
ret
cmp
add
movsl
mov
nop
pop
sbb
and
fucomip
mov
jns
dec
xor
insl
iret
sahf
and
cwtl
mov
jp
sbb
push
sub
add
jo
jecxz
fsubrs
jbe
xchg
sbb
fisubrs
pop
rolb
jmp
cmp
out
adc
xchg
ljmp
cld
cli
push
inc
mov
popa
dec
out
mov
push
lds
and
repnz
jecxz
in
testl
and
scas
xchg
cmp
and
sarl
dec
and
inc
xchg
and
adc
cltd
inc
je
adc
imul
shll
add
pop
mov
sub
icebp
jne
and
fsub
xchg
cmp
pop
pop
lods
mov
xchg
loop
and
fwait
das
mov
xchg
aad
outsb
jne
inc
and
push
fstpl
clc
inc
or
sub
xor
and
push
cmc
jl
aaa
sub
push
cmp
mov
popa
jmp
mov
stos
in
rcrb
in
sahf
fsubl
jbe
lret
dec
andb
loop
imul
lcall
ds
rcr
or
stc
mov
jmp
and
cmp
lret
es
dec
and
push
movsb
xchg
rorb
pop
jb
fwait
adc
lock
ficoml
jge
and
inc
in
and
xor
pop
jmp
pop
rclb
push
sub
sub
into
lret
fwait
xor
repnz
loopne
sub
movsl
js
and
lret
sub
mov
sub
xor
xchg
and
je
and
pop
push
inc
test
rcrw
les
sbb
pop
mov
movsl
popf
xchg
push
popl
imul
in
stos
outsl
cmc
int
and
or
jecxz
int3
test
sub
push
mov
mov
add
inc
and
mov
cmp
pop
and
jns
and
add
mov
aas
inc
xor
rcrl
mov
cmp
sbb
and
pushf
incb
and
push
ss
pop
and
and
xchg
sbb
sub
cmpsb
cmc
or
pusha
in
mov
xlat
test
sbb
push
sbb
xchg
nop
bnd
mov
mov
add
mov
sbb
rorl
lods
and
jecxz
sbb
pusha
xor
nopl
repnz
ret
in
xchg
add
pop
mov
movb
je
movsb
xchg
add
mov
pop
cmp
or
loope
aad
sub
mov
inc
popa
insb
xor
shl
or
and
je
xchg
fdiv
jecxz
loopne
shlb
bound
xchg
jae
and
cmp
inc
fbld
xchg
jg
inc
xor
cmp
push
jge
pop
insl
or
add
jl
xor
movsb
cmpsb
push
clc
scas
aam
pop
adc
sbb
into
rcrl
sbb
push
stos
cmp
add
fmul
mov
sub
aad
jnp
jbe
cwtl
xchg
pop
test
xor
push
popf
mov
and
in
xor
lret
mov
lahf
cmc
lds
xchg
mov
ljmp
mov
pop
and
lcall
clc
es
and
jb
lea
or
inc
and
sub
ficoms
mov
and
nop
je
jne
andb
aam
jbe
sub
std
scas
jmp
adc
adc
or
xchg
sub
and
pop
pop
loop
imul
push
addl
aas
adc
mull
jmp
xchg
sub
enter
jbe
adc
loope
addr16
sbb
clc
lret
pusha
fstpt
outsl
pop
xor
jbe
and
dec
out
repz
pop
or
and
inc
inc
out
aam
test
movsl
xchg
and
and
add
out
add
out
stos
and
nop
inc
and
cmp
movsb
mov
ljmp
popf
fwait
mov
movsl
mov
and
mov
jb
shr
and
or
and
inc
jnp
sbb
cltd
xor
sub
dec
sbb
outsl
xor
mov
andl
jbe
push
pop
scas
shll
or
ljmp
and
adc
add
cmpl
outsl
mov
xchg
movsl
ds
cmp
and
int
imul
cmp
das
nop
inc
shll
push
mov
pop
sti
test
xor
adc
arpl
test
and
cwtl
and
pusha
imul
dec
add
mov
adc
push
mov
and
in
cmp
mov
add
dec
inc
mov
and
insl
pop
sub
ljmp
push
jecxz
popf
popa
test
movsl
xor
sub
mov
xchg
gs
xor
aas
js
cmp
mov
inc
and
bound
and
roll
dec
lret
mov
hlt
push
or
adc
int3
mov
roll
ljmp
cwtl
movsb
sbb
nop
dec
push
mov
in
imul
mov
mov
je
mov
sub
mov
push
mov
outsl
adc
push
add
popf
xchg
popf
push
push
imul
cs
sahf
rcr
xchg
or
movsl
and
lds
scas
push
xor
sbb
inc
iret
pusha
das
xor
dec
mov
stc
or
dec
and
mov
sub
mov
sub
into
mov
push
test
sahf
lret
int3
cwtl
and
adc
xor
fsubl
pushf
inc
add
jp
cmp
into
lods
and
fcmovnu
popa
push
lea
and
mov
lcall
sbb
inc
sub
jmp
cmp
insl
mov
and
dec
jmp
aam
pop
cmp
or
insb
stos
popf
pop
les
mov
stc
fs
mov
in
mov
call
pop
sar
out
sbb
push
and
rep
xor
mov
add
push
insb
xchg
inc
inc
xchg
arpl
mov
mov
xorl
mov
dec
lea
jge
lds
xchg
out
out
fcmove
add
sbb
mov
and
mov
sub
add
mov
fsts
repnz
mov
int3
and
mov
dec
fwait
and
ljmp
and
push
fcmovbe
xchg
pop
cwtl
dec
das
and
xor
dec
sahf
cmp
and
call
mov
push
mov
xchg
shrb
inc
in
xor
or
inc
arpl
sbb
jns
xchg
stc
and
cs
mov
mov
push
popa
pop
adcl
mov
test
mov
call
jns
push
arpl
mov
add
and
aam
adc
inc
hlt
aas
fwait
mov
and
leave
jae
xor
jmp
push
pop
test
ss
pop
dec
inc
cltd
imul
lods
int
xchg
jno
jo
jne
lock
push
and
scas
into
mov
test
popa
sub
push
sub
xchg
dec
and
jnp
jae
pop
mov
sub
aas
pop
dec
cltd
lret
push
lahf
inc
xchg
stos
out
mov
and
jge
sbbb
rclb
cmp
inc
stos
cmp
sub
or
ret
add
push
add
pop
mov
mov
daa
or
mov
xor
in
push
mov
mov
jbe
scas
out
and
and
lret
and
imul
fsts
push
fsubl
mov
push
data16
jl
xchg
mov
sub
lcall
cltd
jno
and
and
in
sbb
or
shlb
push
arpl
mov
adc
popa
jae
dec
pop
and
loopne
xor
punpckldq
cmpsl
cmp
jmp
cmp
imul
mov
popf
lea
cmpl
popf
lret
xchg
sbbb
xchg
and
fildll
ret
mov
cmc
fstpl
mov
cmp
sub
sbb
popa
icebp
push
test
lock
inc
push
in
repz
dec
lods
push
gs
push
popa
pop
in
and
scas
cltd
cmp
xchg
pop
cmp
and
inc
das
add
sbb
xchg
testb
dec
mov
mov
mov
xchg
imul
sti
ret
cmp
jae
cmp
add
scas
xchg
mov
or
mov
call
mov
aas
or
testb
xchg
xor
push
push
and
mov
lahf
xor
and
leave
inc
movsb
imul
shr
jo
pop
jmp
xchg
loope
repz
cmp
sub
inc
int3
dec
xor
and
sub
and
push
popa
shll
ret
xor
adc
jnp
lock
adcb
test
scas
int
push
mov
sub
xchg
and
fcomps
and
mov
mov
sub
dec
inc
adc
jb
testl
mov
pop
mov
movsl
lahf
mov
mov
aas
jo
arpl
mov
and
test
in
and
pop
mov
lcall
and
jecxz
push
cmp
adc
mov
icebp
fildll
and
dec
fldl
fs
insb
and
adc
into
or
pop
cltd
pop
and
sub
mov
ja
popa
cmp
mov
mov
and
fsubl
jge
xor
xchg
jae
lret
clc
and
popf
jno
xchg
stos
loopne
and
push
push
stos
jg
movsb
dec
imul
add
loopne
lods
insb
cmpl
push
jg
test
push
jo
test
add
push
pop
xchg
loopne
cmp
mov
and
mov
dec
test
cld
out
addr16
push
test
mov
mov
mov
inc
enter
and
rolb
mov
jle
lock
jecxz
in
shll
out
jno
imul
shrb
cmp
in
dec
cmpsl
pop
fidivrs
xorb
mov
dec
cmp
lods
gs
movsl
psraw
xchg
inc
dec
les
add
shrl
cmpsb
loope
call
fsubs
mov
stc
aaa
daa
jnp
sub
mov
stos
fs
rol
adc
push
dec
cmp
and
mov
xchg
sahf
xchg
popa
adc
mov
clc
lret
popf
push
and
jns
inc
and
sti
iret
and
dec
pop
out
sbb
mov
pop
mov
pop
lock
cwtl
arpl
hlt
mov
mov
sub
inc
jno
shll
lea
xchg
push
xchg
xor
pop
sub
lds
scas
imul
addl
cmp
out
hlt
cmp
sbb
and
jae
test
mov
loop
stos
and
mov
fcoms
jg
addr16
stc
pop
imul
and
sbb
jne
aad
leave
mov
and
fs
stc
jnp
push
xchg
movsl
and
test
ret
repz
and
in
xchg
mov
inc
xor
pop
dec
lcall
subl
adc
adc
and
jg
xor
cmc
movsl
xor
fs
and
mov
andl
iret
sbb
bound
and
push
mov
fcmove
clc
cltd
pop
cmp
cmc
js
add
or
loope
dec
or
fadds
ds
add
ret
jge
fildl
sub
inc
scas
sbb
mov
mov
in
push
cli
rol
ss
or
push
or
pushf
popa
inc
xchg
add
dec
sub
mov
jmp
movb
xchg
and
nop
sbb
jg
pop
jb
or
xchg
int3
and
sbb
or
test
dec
jo
jmp
sahf
stos
and
ret
outsb
xor
or
mov
fimuls
mov
push
shlb
push
add
subb
push
adc
int
sub
adc
test
fstl
sahf
dec
aad
cmp
and
dec
jecxz
test
and
loope
lret
and
add
pop
hlt
pop
lahf
cmpsb
bound
loop
xchg
xor
mov
xchg
mov
cmp
xchg
movsl
fs
or
iret
daa
push
jl
dec
and
or
out
and
aam
adc
adc
test
mov
mov
mov
or
push
push
inc
icebp
pusha
mov
lcall
shll
xor
nop
jb
xor
movsb
mov
mov
mov
mov
xchg
pop
ret
stos
dec
sub
push
bound
jb
popf
repnz
sub
add
inc
pop
pop
xchg
cmpsl
mov
je
jns
adc
pop
and
inc
int
and
into
aas
adc
outsb
inc
jb
jbe
orb
popa
push
cltd
and
and
add
mov
xor
out
and
cmpsb
cwtl
lcall
fisttpl
and
sub
lods
lds
dec
pop
inc
xchg
dec
pushf
fldenv
ficomps
scas
dec
inc
xor
sub
movups
das
cmp
insb
mov
and
push
ret
mov
les
test
mov
std
popa
and
jl
cli
sti
ret
and
aas
shll
loope
dec
mov
and
lods
movsb
in
push
or
dec
xor
cmc
jo
and
lret
sar
inc
cmpsl
inc
das
popl
push
clc
mov
xor
shll
jne
xor
jl
into
add
dec
fstl
ja
ret
push
loop
test
sahf
push
out
jo
leave
push
or
fidivl
cli
mov
rclb
sahf
loop
dec
inc
jg
outsb
mov
call
inc
push
popa
mov
mov
pop
mov
cltd
mov
sub
xchg
jp
push
cmp
and
pop
mov
stos
lret
and
push
movsl
mov
jae
arpl
push
outsb
call
xor
rcl
sbb
push
xor
lcall
jmp
ljmp
pop
xor
ds
lret
dec
loope
push
loopne
cmp
fld
icebp
add
pop
xchg
lods
xchg
mov
rcl
fidivs
jecxz
int3
fadd
jle
bound
adc
and
loopne
xor
hlt
outsl
cmp
and
jbe,pt
xchg
jge
pop
dec
xchg
xchg
and
stos
imul
cld
mov
mov
cs
insl
cmp
aaa
adc
or
cmp
mov
pop
and
and
mov
lods
test
cltd
and
in
cmpsl
aam
mov
js
sarl
adc
xor
sbb
mov
mov
mov
leave
or
xchg
imul
jo
out
pop
out
ror
pop
aas
subb
dec
movsb
pushf
cwtl
stc
outsl
pop
repnz
imul
xor
jmp
popa
pop
and
and
mov
mov
mov
test
xchg
sub
jmp
mov
iret
jo
mov
faddl
cmp
push
lds
mov
xchg
cmp
int
xchg
push
fisubl
push
rcrl
sub
aas
ffree
dec
or
jae
mov
jbe
popa
mov
cltd
sbb
mov
mov
es
andb
jne
inc
adc
or
pop
jbe
mov
cwtl
pop
and
lcall
or
lods
popa
xchg
lods
and
inc
fimull
inc
in
dec
and
insb
cmpsb
mov
shrl
into
sub
nop
and
xor
pop
scas
inc
mov
fimull
scas
lcall
and
movsl
mov
data16
and
pop
pushf
mov
mov
and
jge
sar
mov
add
mov
xlat
lahf
jnp
and
lret
and
mov
pop
xor
xchg
or
adc
and
rolb
mov
mov
mov
dec
stos
mov
jbe
test
sti
lock
sahf
and
orl
and
cli
inc
imul
adc
mov
add
pop
xor
insb
fimuls
cwtl
insl
out
and
inc
cmp
cltd
mov
cli
and
cld
adc
leave
mov
nopl
mov
inc
test
rolb
lock
andb
cmp
and
or
inc
mov
stc
lods
ret
push
pop
add
mov
push
clc
fimuls
jae
mov
adc
mov
and
comiss
mov
test
jmp
and
ret
int
add
das
shl
mov
and
mov
xchg
hlt
mov
je
sbb
jge
and
adc
pop
lods
add
cmpsb
sub
or
and
cmpsl
scas
and
pop
push
pop
loope
cld
and
add
ret
xor
mov
fidivrl
jmp
cld
sti
repnz
inc
xchg
adc
in
pop
imul
push
mov
pop
ret
cmpsl
cld
rorb
scas
gs
mov
jg
xor
adc
add
cli
std
sbb
clc
into
mov
ret
test
add
inc
outsb
add
mov
fstl
and
lods
xor
xor
loope
std
test
pusha
xlat
stos
or
setne
rolb
stc
addr16
mov
push
loopne
mov
js
in
je
mov
cld
push
mov
pop
sbb
or
xor
int
xchg
mov
enter
out
out
shll
movsb
in
or
pop
xchg
push
dec
jge
mov
insl
xchg
cld
mov
lahf
xlat
and
mov
inc
mov
push
pop
sub
and
movsb
or
imul
movsl
pusha
xor
xchg
adc
orb
dec
lods
rcrl
aam
or
aaa
push
add
cmpsb
out
fistl
je
cmp
stos
adc
and
insl
std
int
push
xchg
out
mov
daa
and
adc
addr16
arpl
popa
jne
push
loopne
mov
sbb
xchg
dec
push
idivb
or
imul
insl
jmp
jae
cmc
cmpsl
sbb
push
xchg
int3
pop
mov
push
xor
jnp
test
and
mov
ss
es
and
mov
imul
and
push
dec
int3
lock
adc
xchg
sub
push
in
sbb
pusha
cmpsb
jmp
popf
icebp
sub
cmpb
mov
dec
dec
pop
xor
sbb
je
movsb
jnp
mov
ret
ds
idiv
pop
in
xchg
inc
icebp
cltd
adc
or
call
and
movsl
andl
out
dec
mov
cmp
addl
add
dec
sub
bound
inc
aad
test
fsubrs
mov
shlb
push
cltd
and
cmp
push
sarl
in
sub
push
daa
dec
and
rcrb
popa
jno
into
mov
shll
cmpsb
xor
mov
shll
push
jge
cld
popf
add
mov
and
xchg
ret
adc
or
mov
sub
inc
mov
add
lahf
loopne
push
addr16
inc
and
loop
mov
scas
mov
pop
jecxz
mov
sbbl
cmp
mov
sahf
scas
and
sbb
ljmp
shll
mov
in
subl
test
and
fidivrs
mov
popf
mov
and
mov
mov
push
scas
ds
adc
adc
mov
jmp
push
and
cmc
mov
jne
imulb
mov
sbb
push
mov
les
xchg
xchg
mov
data16
test
cmc
shlb
cmpsb
out
imul
push
out
mov
ds
and
das
cmpsl
pop
pop
fldenv
lcall
cmc
aad
pop
pusha
and
push
or
push
repz
and
leave
aas
or
rcl
xlat
mov
cwtl
sub
and
in
ret
push
icebp
movsb
fisubl
cmp
loop
mov
adc
dec
and
cmp
scas
scas
xchg
addb
lret
mov
xchg
iret
adc
xchg
push
insl
paddusw
fwait
out
cmp
cltd
cmpl
movsb
pop
pop
loop
orb
push
fistps
ds
dec
dec
dec
daa
inc
movsb
and
push
jnp
and
into
jecxz
hlt
pop
sub
mov
and
sub
arpl
and
shrb
push
popa
mov
jae
in
push
or
mov
xor
cmp
filds
xor
adc
mov
int3
fldenv
adc
loopne
xchg
sbb
adc
or
fdivrs
shll
sbb
xor
aas
lds
pop
aaa
or
nop
ret
int
pop
popa
rclb
int3
and
sub
xor
fadd
or
test
iret
mov
test
shlb
mov
testl
push
and
lods
sbb
jnp
insl
inc
test
arpl
rorb
scas
sti
shll
arpl
call
repz
pop
jo
adc
stos
aas
and
xchg
sbbl
popa
insl
dec
ret
lods
jg
aas
pop
or
lock
and
ret
repz
push
inc
cs
out
insl
pop
mov
jne
or
in
fists
into
pop
fisubs
and
and
scas
push
push
fdivs
and
dec
ret
add
mov
test
mov
and
xchg
jg
in
dec
and
dec
fwait
popa
sbb
mov
int
fimull
les
and
mov
cmp
inc
hlt
rcrl
sub
popa
repnz
and
in
xchg
inc
call
mov
jae
dec
push
lret
jmp
jge
cmpl
sub
out
add
jno
stos
sarb
mov
adc
mov
dec
out
and
fisubs
push
subb
and
dec
and
leave
cli
inc
push
dec
movsl
lret
in
and
mov
daa
mov
cmp
mov
inc
ljmp
sub
dec
sarl
cmp
ljmp
adc
or
mov
xor
sbb
das
sbb
and
jne
add
push
shlb
mov
mov
vpshlq
mov
mov
or
int3
movsb
in
ret
dec
push
mov
xchg
ja
lret
pushf
in
enter
int
mov
cmp
and
push
and
jg
xor
leave
mov
stos
inc
cli
les
push
pop
stc
sar
and
cwtl
cmc
out
mov
mov
fsubrs
or
xchg
xchg
comiss
test
sbb
lea
inc
add
adc
pop
cmpsl
in
pop
rcrb
repz
and
daa
adc
clc
mov
xlat
scas
and
cwtl
xchg
frstor
jb
popf
dec
mov
outsb
movsb
lods
out
and
jle
pop
shl
jae
fnstenv
and
xchg
cmp
int3
stc
mov
mov
aas
lods
and
inc
jge
sub
xchg
mov
xchg
mov
cltd
loop
xor
and
jg
or
and
cmc
scas
insl
sub
mov
dec
popa
jmp
cwtl
mov
mov
or
popf
inc
mov
and
jns
hlt
mov
sti
add
das
pushf
mov
cli
sahf
inc
movsb
int3
mov
dec
fcoms
adc
aaa
mov
outsb
dec
mov
add
es
mov
pop
push
jge
dec
js
mov
test
aad
ss
push
xchg
ja
test
mov
sbbl
jb
xchg
xchg
sub
icebp
adc
fisubl
cmpsl
or
xor
jb
cmp
imul
out
and
push
add
dec
mov
jle
sbb
idivb
and
stos
push
lahf
sub
dec
out
nop
mov
mulb
add
jle
and
aam
push
sbb
adc
je
push
mov
pushf
and
test
dec
xchg
and
jo
mov
das
outsl
inc
loope
stos
popa
or
bound
jbe
pop
push
mov
sbb
mov
cli
and
cmp
lods
arpl
cwtl
xor
sub
pop
pop
mov
xchg
adc
mov
insb
es
test
nop
push
adc
sarl
testl
rcl
sbbl
movsb
jo
lahf
cltd
lcall
imul
das
pop
cwtl
test
adc
push
jno
stos
in
clc
daa
arpl
iret
sbb
movsb
popf
pop
inc
pop
in
push
nop
mov
dec
pop
xor
xchg
sub
jnp
mov
mov
ljmp
rol
cmpsl
mov
outsl
int3
mov
decb
push
daa
mov
xchg
leave
or
or
jo
lods
lahf
hlt
mov
and
fnsave
jg
ja
or
or
insl
dec
and
loope
cmpsb
mov
pop
or
ss
movsl
in
mov
popa
mov
jns
and
movsb
inc
sbb
pop
and
leave
ja
and
push
inc
and
cmp
sub
sbb
xchg
jno
adc
lahf
in
addb
movsb
sahf
mov
pop
in
test
pop
mov
test
cmp
fidivrl
and
call
inc
iret
stos
and
loope
xchg
jge
scas
enter
imul
and
adc
ja
fnstenv
push
mov
mov
mov
outsl
andl
in
lods
cld
frstor
js
dec
and
and
cmp
push
inc
fisubl
xlat
arpl
push
loopne
sub
cmp
add
movb
xchg
jp
adc
and
fbstp
lret
lods
jnp
pop
sbbl
and
out
add
inc
adc
xchg
add
inc
in
or
and
loopne
add
imul
mov
stos
in
imul
imul
push
aas
popa
int
mov
cmp
and
subb
popf
inc
adc
push
rcr
xchg
ds
and
or
push
subb
jp
shlb
jnp
lods
and
mov
mov
repz
and
mov
in
ret
mov
jnp
call
outsl
std
mov
and
mov
jge
aam
xchg
jl
fidivrs
mov
and
int
stc
adc
push
testb
sbb
mov
xchg
add
sub
add
and
or
shr
or
jecxz
and
xor
lret
sub
imull
addr16
push
frstor
ja
add
cmp
out
clc
pushf
inc
and
std
cmpsl
pop
lahf
and
mov
cltd
jnp
sbb
movsl
mov
mov
test
cmp
and
jbe
mov
cwtl
adc
and
inc
sbb
pop
cmp
mov
mov
test
or
bnd
add
shll
pusha
sub
mov
and
sub
js
lea
int3
jno
aaa
mov
adc
test
std
shrb
addl
dec
movsb
and
mov
add
jbe
pop
je
lea
mov
lods
es
ljmp
sbb
popa
or
outsl
xchg
xor
popa
pop
ds
cmp
add
bound
xor
loope
jmp
mov
jecxz
pop
and
pop
leave
scas
repnz
mov
xchg
xor
adc
pop
cli
sub
aaa
mov
push
outsl
gs
jne
andl
sbb
sbb
cmp
out
xchg
lret
enter
xchg
dec
add
and
adc
pop
in
rorb
and
pop
jg
push
out
cltd
and
jle
xchg
sbb
and
enter
andps
imul
jbe
outsl
mov
mov
popf
xor
les
ds
mov
ljmp
jae
push
jge
sub
xchg
outsl
out
popa
lcall
and
insl
das
jle
and
aad
xchg
and
repz
addr16
in
insl
xchg
xchg
cltd
mov
clc
test
repnz
jno
jnp
sahf
out
sbb
adc
out
or
imul
in
adc
pop
fdivrs
sti
out
fiaddl
cs
adc
mov
shlb
orl
bound
inc
popf
loope
ljmp
mov
loop
and
test
mov
and
bound
and
xor
pop
imul
imul
and
bnd
cmpsl
xchg
and
repz
jge
imulb
xor
std
sub
fbstp
jp
jle
aad
sub
dec
jnp
cwtl
xor
loope
jp
insl
stc
loopne
test
xor
mov
popf
movsb
push
xchg
in
jno
paddd
mov
inc
ja
scas
scas
push
and
mov
and
shlb
adc
mov
pop
test
and
es
push
sti
or
and
into
mov
push
leave
repz
cmp
sub
inc
mov
iret
into
mov
jecxz
orb
mov
out
mov
xchg
stc
ljmp
pop
jle
in
jns
pop
daa
inc
std
xchg
inc
mov
mov
cmp
andl
and
jge
mov
leave
cmc
fistpll
cltd
cmp
and
jne
aaa
xchg
xchg
and
pop
and
mov
enter
cmp
repnz
andl
out
jecxz
sbb
jo
mov
cs
pop
pop
and
and
cmp
pop
stc
and
pop
nop
push
jns
and
adc
in
and
xor
std
mov
popf
push
subl
or
fisubrs
stos
inc
sub
and
push
test
arpl
xchg
rcrb
inc
mov
xor
ja
stc
sti
and
aam
jnp
xchg
mov
inc
sbb
sub
sti
loopne
mov
leave
cli
fs
insl
ficompl
add
iret
scas
movsl
movsl
popf
insl
add
jnp
es
hlt
test
and
movsb
push
lcall
inc
andl
lods
cltd
xor
sarb
iret
js
loope
and
inc
xchg
in
movsb
test
mov
je
ret
mull
test
int3
repnz
cmp
or
cmp
sub
cmp
cld
fistpll
in
loopne
mov
pop
dec
push
iret
sahf
and
inc
sbb
jmp
pushf
and
dec
pop
pop
inc
mov
and
lods
mov
test
push
push
shll
adc
xchg
jp
fsubl
bound
jo
mov
rcll
js
add
and
into
addb
dec
das
sbb
out
cli
cmp
add
and
mov
das
xchg
jo
and
cmp
and
test
and
adc
pop
and
mov
mov
out
jns
and
movsb
sbb
cmp
testb
andl
cs
lret
mov
and
lcall
and
xchg
adc
and
jl
add
mov
and
lock
addr16
fs
rolb
and
mov
and
lret
stos
jne
loopne
mov
fimull
jmp
stc
cld
dec
and
xlat
add
or
rclb
fisubrs
fucomp
imul
out
jae
das
scas
and
inc
pop
mov
push
test
call
mov
cmc
repz
and
mov
mov
xchg
mov
inc
and
fadds
add
cmpsl
mov
js
pop
add
push
jp
adc
ljmp
lret
popf
or
js
or
popa
pushf
and
je
sub
pop
lods
bound
sub
and
int3
dec
hlt
inc
xchg
jl
or
in
inc
mov
nop
xchg
and
fisttpll
mov
pusha
movsb
xchg
push
stos
mov
and
mov
rcrb
mov
xor
pop
and
in
ss
push
and
mov
ds
xor
xchg
ret
das
jno
inc
std
mov
sub
filds
ss
jmp
andl
mov
add
daa
addb
pop
or
je
mov
add
popa
and
pop
adc
and
inc
shl
movsb
mov
push
aaa
mov
or
sbb
testl
cmpsl
popa
js
mov
ret
aad
shrl
xchg
push
cmp
cli
cld
adc
or
int3
inc
and
add
dec
pop
and
out
pop
je
movsb
das
outsl
mov
loopne
jge
jno
xor
inc
ljmp
dec
pop
jne
daa
pop
jg
and
xor
scas
das
aas
and
lock
cmp
and
mov
cli
rcrl
dec
out
sub
test
adc
dec
sahf
out
shll
or
jmp
dec
popf
popf
push
lds
cmp
clc
add
or
jbe
adc
aad
push
xlat
in
push
sbb
push
or
and
and
shll
jl
and
pop
cmp
int
push
lahf
das
pop
cwtl
sbb
ss
jno
loope
clc
test
xchg
fldt
dec
popa
dec
adc
and
push
sbb
idivb
push
shll
mov
imul
popa
dec
cwtl
jns
push
outsl
pop
in
mov
and
inc
dec
mov
jle
adc
inc
sub
mov
mov
pop
arpl
xor
repnz
lds
rcrb
xchg
mov
jbe
lahf
adcl
std
and
stos
shrl
adc
in
movsb
sub
jno
fsubs
andb
sbb
pop
pop
imul
test
and
out
insb
ret
test
xlat
dec
inc
popa
sbb
fwait
add
and
adc
mov
mov
insl
loope
and
movsb
mov
rorl
push
push
rclb
and
adcl
insb
int
xlat
stos
mov
jno
and
mov
inc
aaa
and
inc
inc
stos
xor
andb
dec
add
lock
scas
loopne
xchg
iret
sbb
or
add
and
ja
stos
and
imul
cmpsl
mov
jne
add
insb
and
inc
jg
out
xchg
in
sub
or
dec
frstor
xor
mov
pop
mov
dec
mov
cmp
cli
jge
lahf
and
cmp
xchg
and
jae
out
mov
bound
adc
nop
xlat
movsl
and
cmp
aaa
pusha
xor
sub
push
ret
mov
sub
sbb
and
dec
std
and
add
stos
xchg
es
and
and
aad
lds
xchg
or
cmc
sbb
mov
scas
mov
push
add
xchg
cmp
add
call
and
jb
sbbl
push
popf
out
adc
mov
outsb
in
add
pop
and
stc
xor
and
sti
jle
in
cmpsb
and
mov
push
and
mov
aaa
and
pop
enterw
jle
and
fdivl
lahf
pop
rcr
and
cwtl
xor
popa
pextrw
xor
jp
mov
sahf
and
ret
in
daa
and
lods
enter
inc
mov
leave
loop
fstl
pushl
cmp
xchg
aaa
cltd
mov
pop
mov
cmp
xor
inc
rcrl
xchg
add
sub
pop
mov
lret
aam
mov
push
jo
pop
xchg
lcall
imul
or
lret
mov
inc
test
sub
arpl
loopne
push
cmpsb
and
mov
aaa
mov
das
mov
cltd
outsl
and
rcrb
test
std
scas
and
and
mov
cmp
push
mull
cld
xlat
push
xor
sbb
and
fs
add
mov
movsl
loop
pushw
jo
sbb
xchg
jle
mov
add
addr16
lods
ret
xor
and
stos
mov
repz
sub
sbb
pop
mov
xchg
jns
and
andl
adc
xchg
and
or
das
mov
cmpsb
ds
push
mov
pop
cli
cltd
aad
and
rclb
daa
out
int3
pop
loope
cmpsl
bound
cmpsb
mov
add
pop
pop
clc
fstpt
movsl
inc
jg
xchg
mov
cltd
sbb
push
mov
or
xor
add
mov
add
les
push
mov
and
sub
push
icebp
mov
in
shrb
aaa
inc
jmp
icebp
insl
test
sub
cmpsb
lea
lea
inc
and
in
xchg
push
icebp
pop
add
mov
push
pop
push
ss
cmp
aaa
cmp
mov
and
adc
nop
sub
mov
or
cld
xchg
test
or
jg
and
mov
add
and
or
pop
and
loop
test
mov
and
in
dec
xchg
pop
es
pop
aaa
das
dec
xchg
enter
add
lea
loopne
out
dec
mov
lea
nop
mov
not
scas
push
mov
lock
into
es
or
ljmp
push
or
andl
rorl
xor
and
lret
arpl
push
movsb
pop
icebp
inc
shlb
and
cmp
and
sub
pushf
xor
pop
mov
inc
in
lcall
dec
popa
mov
xchg
scas
lods
mov
push
and
jno
es
jns
add
imul
jp
ror
cmp
inc
js
mov
xor
push
das
test
mov
addr16
jno
and
mov
fisubrl
fisubs
and
mov
fsubl
lods
test
dec
or
repz
rcll
mov
xchg
pop
adc
and
cwtl
mov
cmp
pminub
outsb
clc
sub
fisubrs
pop
into
and
xchg
cwtl
fwait
pop
adc
add
aas
bound
mov
adc
jecxz
adc
fs
arpl
lods
aas
fdivr
add
lahf
pop
xor
test
mov
and
movb
gs
cltd
push
and
jl
in
pop
rcr
jle
pop
fdivrs
out
lcall
call
int
dec
adc
dec
aaa
sub
dec
and
add
mov
inc
dec
push
add
adc
movsb
inc
mov
cwtl
cld
add
test
and
mov
or
and
test
pop
mov
and
jmp
nop
popa
imul
test
mov
and
andl
dec
repz
sub
sbb
push
ss
lock
popf
or
cmc
mov
add
lods
and
aaa
or
dec
movsl
fldenv
sub
mov
dec
and
loopne
inc
test
cmpsl
and
mov
pop
push
push
xchg
lods
aas
and
push
test
mov
add
and
mov
icebp
pop
cmp
push
push
push
cmc
test
xchg
popa
jecxz
int3
sbb
das
and
sub
ss
adc
stos
cmpb
les
or
cmp
iret
int3
fwait
inc
xchg
std
and
push
sti
bound
xor
inc
andl
sbb
push
lahf
pusha
push
or
cld
fists
xchg
jb
mov
sub
xchg
jecxz
cmpsl
loope
push
inc
and
inc
sbb
inc
mov
mov
jecxz
in
iret
les
pop
or
into
pusha
push
add
mov
xlat
xchg
lock
lret
fdivrl
push
sub
shlb
push
and
ja
and
push
outsl
xchg
divb
scas
and
das
leave
inc
and
pop
mov
and
loop
and
icebp
ljmp
fs
mov
add
xchg
xchg
adc
mov
cltd
pop
aas
jae
cmpl
cmp
xor
dec
cwtl
and
std
inc
aam
ljmp
sub
iret
and
xor
and
or
shlb
cmp
cmpsb
inc
and
shl
pop
scas
mov
fcoml
push
inc
addb
or
jo
xchg
loope
mov
mov
xor
cmpsl
aaa
stc
and
popf
adc
sub
mov
push
mov
test
notb
sbb
int3
mov
lret
insb
movsb
ja
sub
cwtl
xor
and
xor
sub
push
cli
shll
xor
add
sbb
enter
push
sub
lret
and
imul
xlat
and
or
pop
cmpsl
mov
add
sub
add
nop
in
mov
mov
lcall
adc
outsb
push
cmc
jmp
sub
in
fwait
insb
and
push
jb
and
and
ret
cmpb
mov
ret
add
in
je
jns
dec
lock
dec
add
mov
dec
ror
icebp
fsubl
and
out
mov
and
xchg
aas
test
pop
pop
dec
je
fsubs
lods
and
or
enter
cmp
adc
lds
loope
add
sbb
loope
xor
push
and
cltd
mov
or
orl
xchg
inc
cwtl
inc
movsb
scas
adc
loop
xchg
and
jge
xor
and
rcl
and
mov
push
fs
insl
xchg
pop
jae
rol
xor
push
or
adc
jmp
cmp
and
mov
call
dec
jnp
xchg
jne
add
add
lret
xchg
mov
cmp
mov
xchg
mov
pop
xchg
js
sbb
pop
movsb
movsb
out
lds
push
push
and
or
imul
and
xchg
mulb
fistpll
cmp
loope
pop
xor
in
inc
cwtl
jo
clc
popa
dec
dec
ficoms
outsl
and
popa
sub
sbb
and
in
or
cmpl
add
ret
out
sub
mov
and
fldt
push
scas
loopne
aas
popa
xchg
mov
cltd
add
and
scas
pop
nop
jl
daa
and
push
cwtl
mov
sbb
push
lea
ret
add
and
lcall
mov
or
pop
int3
inc
or
jns
and
cmpsb
lret
pop
outsb
rorl
xor
push
and
jbe
insb
mov
outsl
push
xor
and
pop
sub
imul
lret
jae
push
xchg
and
shlb
and
stos
push
and
fdiv
sub
mov
pusha
inc
add
mov
xchg
outsb
and
or
mov
test
and
inc
in
inc
xor
or
jb
add
ss
push
xchg
jmp
jno
stos
dec
popf
jmp
adc
sbb
push
movsl
sbb
scas
movsl
scas
sarl
insl
rcrl
jge
mov
inc
xor
xchg
scas
inc
pop
pop
push
xor
daa
adc
pop
repnz
pushf
jl
and
dec
push
xchg
movb
push
and
loope
dec
jge
int
and
sarl
sub
push
cmp
imul
cmpsl
loop
mov
jecxz
cmp
xlat
push
jg
push
movsb
lahf
or
jmp
mov
ds
push
jne
jp
jno
ret
cmp
jg
xor
out
and
inc
popa
out
pusha
sub
xchg
push
fmul
or
xchg
int3
mov
push
popf
cmp
repz
fbstp
dec
xchg
dec
push
cmp
and
hlt
pusha
into
and
mov
cltd
popf
and
movsb
ret
sub
add
and
call
mov
sbb
or
adc
and
jns
jp
insl
xor
pop
and
or
scas
add
mov
lret
loop
push
inc
dec
into
gs
jg
insl
sub
mov
int3
mov
xchg
popf
cmp
jb
movsb
dec
mov
and
sub
xchg
push
and
mov
std
and
outsb
cs
inc
sbb
fsubs
inc
loopne
dec
and
aad
fidivs
and
sti
daa
or
jns
leave
mov
dec
and
mov
imul
dec
rclb
add
and
fadd
rdtsc
jg
jmp
mov
cli
add
pop
loopne
cltd
insl
mov
push
pop
daa
or
data16
or
fwait
and
mov
cmpsl
dec
cs
icebp
and
mov
dec
push
insl
or
and
push
gs
or
mov
daa
and
mov
jne
aad
cltd
arpl
out
movsl
fcoms
imul
mov
subb
mov
fcmovnbe
push
and
xor
ds
pushf
mov
in
mov
sub
mov
ss
sahf
and
and
loope
mov
dec
outsb
and
sahf
adc
and
rolb
mov
insl
mov
push
adcb
ret
popf
shlb
cwtl
insl
clc
repnz
push
push
cmp
fisttps
cmp
cld
cltd
or
xor
dec
mov
adc
fildl
jmp
pushf
xchg
cmp
xchg
add
stos
movsl
and
mov
or
jl
push
and
or
repnz
dec
and
loope
xchg
roll
les
dec
inc
fidivl
and
or
mov
add
sub
hlt
and
das
cmp
add
sbb
mov
lods
push
push
fildll
xchg
mov
xor
je
xchg
inc
test
fldpi
pop
and
pop
adc
inc
test
jbe
adc
sub
add
sbb
pop
std
pop
stos
cmpsb
xchg
sub
push
mov
inc
mulb
test
xor
or
addb
insl
addr16
andb
sbb
and
insb
mov
mov
cmp
jle
jle
les
inc
add
and
ret
in
cmp
or
imul
pop
lret
fisubl
stos
push
inc
aam
xor
mov
push
push
pop
addl
pop
cmp
and
fnstenv
scas
jecxz
into
mov
sbb
daa
lret
je
sbb
jnp
jle
or
fdivrl
mov
xchg
imul
orl
sti
mov
lret
xlat
mov
and
jns
mov
pop
fidivrs
or
cmp
les
mov
or
cmpsl
mov
scas
jle
pop
dec
and
jns
pop
dec
sbb
dec
fcompl
das
xchg
cmp
xorl
or
lea
hlt
cmp
xchg
andl
xor
fnstcw
sbb
rcrb
jmp
add
outsb
cld
imul
ffree
pop
out
nop
xor
mov
stos
xor
pusha
push
addr16
push
and
cltd
stos
sub
mov
push
scas
xor
movsb
jp
mov
fwait
aaa
cmpl
repnz
fsubrs
aas
mov
outsl
sahf
push
dec
adc
mov
test
pop
push
sub
xchg
add
sbb
pop
aas
and
not
xchg
das
pop
jge
inc
push
push
cmp
mov
mov
pop
xchg
and
sub
cmp
dec
clc
es
jae
and
inc
in
fidivl
mov
out
and
pusha
shrb
pop
ret
jp
jle
and
and
inc
sbb
and
loopne
xorl
andl
mov
push
or
inc
xchg
fs
les
dec
inc
shlb
int3
repz
and
dec
mov
mov
dec
and
das
ret
mov
out
xor
xor
imul
mov
inc
mov
sub
imul
scas
and
roll
xchg
push
addr16
test
dec
mov
and
cltd
mov
test
test
mov
pushf
mov
mov
push
xchg
and
dec
mov
and
xchg
mov
mov
push
repnz
and
insl
call
and
int3
data16
rcrl
hlt
or
sub
mov
and
addr16
adc
pop
pushf
sbb
stos
push
movb
dec
movd
imul
sub
xchg
in
and
sbb
aas
das
and
rcll
jmp
mov
push
popf
movsl
cld
mov
mov
cmpsb
pop
and
inc
rorl
xchg
test
dec
xor
shlb
inc
pop
lods
lods
int
and
push
pop
jg
push
jge
cwtl
std
xchg
push
and
push
out
xchg
test
cld
sub
mov
out
imul
mov
mov
cmp
add
lahf
shll
fisubrs
and
pusha
mov
or
nop
movb
sarb
pop
pusha
movsl
and
cltd
add
into
and
aad
mov
jns
dec
dec
pop
sbb
jl
scas
orl
out
pop
test
push
sub
or
out
mov
pop
and
imul
movsl
push
stc
push
push
movsb
pushf
mov
add
sbb
push
in
test
out
xor
mov
xchg
sti
jl
mov
movsl
imul
aaa
xor
js
repz
and
in
inc
fwait
rcll
and
fldenv
sbb
scas
insl
andl
jp
add
in
mov
push
call
push
xchg
stc
in
leave
mov
lahf
leave
lret
pop
cmpsb
cld
dec
sbb
dec
outsb
and
loope
mov
popl
add
movsl
mov
stos
inc
mov
xchg
mov
add
fidivrs
scas
aas
dec
mov
inc
sbb
sbb
or
xor
sub
jmp
cs
and
mov
and
cltd
add
pop
shlb
call
and
add
jae
dec
inc
lret
cmp
lea
and
inc
lahf
and
scas
dec
and
stos
push
cmpsb
dec
push
std
pop
mov
popa
sub
inc
fwait
mov
inc
dec
lea
pop
lods
insl
out
ja
adc
push
sbb
popf
outsl
jmp
aas
push
cmp
add
sub
xchg
mov
repnz
mov
push
addr16
and
add
xchg
cmp
xchg
out
xchg
dec
mov
xchg
test
xchg
sbb
mov
cmpb
add
inc
xchg
and
js
jns
push
push
lret
pop
cwtl
popf
mov
mov
jo
dec
jmp
and
fs
enter
xor
ret
inc
jnp
repz
and
pop
das
mov
add
dec
xchg
sbb
test
fisubrs
pusha
mov
aas
out
rcll
je
cwtl
mov
ret
andl
loopne
lcall
incl
lock
add
fcom
inc
inc
dec
lods
ret
imul
ret
mov
bound
mov
push
inc
iret
popf
xor
or
xchg
out
adc
std
and
daa
or
mov
or
and
addr16
popa
mov
fcompl
dec
in
in
and
lea
inc
and
mov
popa
ror
mov
mov
and
pop
mov
inc
xorl
sub
sub
fcoml
sub
mov
imul
sub
and
popf
fcomps
inc
orb
lcall
inc
xchg
rcrl
and
aad
ret
push
dec
and
fs
imul
stos
mov
push
ret
cmp
dec
jecxz
and
into
js
lods
pop
movsl
fidivrl
gs
call
sub
cmpl
cwtl
or
push
fwait
mov
insw
dec
addl
mov
out
pop
bound
adc
dec
and
mov
int
and
in
pop
and
test
les
sahf
inc
xor
test
sti
popa
cmp
push
jle
mov
push
movsl
adc
inc
cmp
fucompp
outsl
dec
scas
xor
jl
cmpl
repnz
movsb
xor
js
test
sbb
mov
inc
cmp
jno
aad
pop
dec
fwait
loop
js
scas
pusha
iret
dec
sub
dec
jnp
sbb
orl
jb
cmp
mov
or
popa
insl
fsubs
mov
adc
jle
imul
iret
xchg
sbb
out
inc
in
xchg
or
cmpsl
xlat
loopne
mov
mov
loop
push
mov
adc
movsb
pop
test
js
mov
in
and
pop
dec
xchg
mov
xchg
mov
insl
lods
in
fs
mov
int3
cltd
push
cld
push
stos
test
mov
inc
mov
jp
sbb
movsl
adc
cmp
cmpsb
pop
sub
incl
fs
outsl
pop
sub
mov
jbe
cmp
dec
inc
jb
cs
and
mov
lahf
push
movsb
xor
mov
fs
cmp
dec
stc
push
inc
or
sahf
dec
mov
sub
and
and
mov
int
cmc
daa
loop
xchg
jo
bound
aam
fistpl
aaa
jmp
and
fs
test
int3
popa
in
scas
sbb
gs
fs
cmp
ret
sbb
mov
rolb
mov
mov
insb
or
and
insl
push
scas
daa
sbb
mov
cmpsl
push
inc
jo
mov
dec
and
push
fiadds
aaa
push
popa
outsb
scas
shlb
add
xchg
pop
daa
mov
mov
adc
insb
add
popf
or
aam
js
mov
push
sahf
cmpsb
jge
repz
jp
mov
pop
xchg
xchg
mov
dec
xor
push
mov
and
push
mov
and
scas
add
pop
dec
and
pop
and
push
pusha
addr16
xchg
inc
es
pop
rcll
cwtl
xchg
push
lods
shll
sbb
xchg
mov
push
popf
jne
repnz
test
leave
ret
pop
pop
inc
and
lret
and
mov
cmp
mov
loopne
dec
lahf
sbb
and
xor
xchg
sbbb
sbb
cmp
cmc
aad
ret
mov
int3
mov
mov
dec
shl
les
and
xchg
pop
aaa
xchg
jne
push
in
or
imul
cmpsb
in
xchg
add
out
ds
rcrb
inc
inc
sbb
out
cld
mov
and
fdiv
mov
std
subb
cmpsb
pop
cwtl
mov
dec
and
hlt
mov
pop
pop
xor
adc
pop
das
outsl
xor
mov
adc
mov
and
jne
lods
stos
lods
aas
jbe
cmp
lcall
pusha
fbstp
xor
pop
add
inc
hlt
mov
frstor
shrl
inc
pusha
dec
pop
das
mov
xchg
xor
dec
fcompl
ljmp
xchg
add
cmpsl
cmp
jae
int3
cli
dec
movsl
or
test
sti
or
ss
xchg
mov
push
push
pop
jns
leave
scas
stos
or
mov
cmp
notl
cmp
and
sbb
pop
ficompl
inc
mov
ljmp
enter
and
in
insb
ret
push
pop
and
cmpsl
add
or
and
jae
cwtl
ljmp
mov
mov
test
inc
and
mov
and
push
cmp
push
or
mov
mov
daa
movsb
jecxz
pop
lret
inc
scas
int
dec
and
push
pop
sbb
fs
mov
jl
sub
mov
shl
lret
xor
and
xchg
std
insl
imul
inc
mov
inc
sub
jo
cld
popa
fcmovnu
push
outsl
outsb
icebp
stos
scas
push
movsb
push
fwait
test
xlat
and
ret
in
mov
ret
lcall
jnp
cmp
mov
or
scas
aaa
leave
fistl
daa
je
sub
fistps
cmp
shrl
negb
inc
xchg
pop
aas
lahf
add
and
fld
int3
xor
test
jae
add
lea
andl
xor
mov
cmp
xchg
jns
iret
data16
and
mov
push
test
push
fsubp
ret
pop
mov
inc
out
loop
lea
popa
and
popa
repnz
and
jl
cli
cmp
cmp
movsl
lret
xor
dec
push
leave
or
loope
cwtl
popa
outsl
sarb
and
sub
jno
test
sub
shlb
cmp
hlt
aam
insl
daa
cltd
jae
iret
or
sbb
and
outsb
sub
cli
jne
std
pop
cmp
int3
pusha
fldl
xchg
pushf
jmp
clc
ja
pop
icebp
mov
sub
rcrl
cmp
dec
repz
cmpsl
add
push
sub
cmp
ja
mov
repnz
les
rcrb
lahf
adc
mov
out
hlt
inc
add
mov
push
int3
mov
mov
pop
jns
iret
pusha
insb
pop
shll
movsb
icebp
lea
or
inc
mov
dec
in
stos
shlb
mov
add
loop
movsb
out
and
lahf
mov
mov
xor
inc
out
mov
mov
pop
inc
fisubl
movsb
push
clc
imul
cmp
adc
push
jo
xchg
dec
adcl
lea
cmp
addr16
lahf
lods
loope
add
sbb
mov
mov
adc
mov
jmp
sbb
push
imul
int3
pop
dec
loope
xor
scas
ss
cmp
xor
and
sub
add
xor
and
mov
adc
xor
popf
and
or
iret
mov
das
push
mov
jno
adc
or
fstps
mov
daa
sbb
pop
fwait
and
loope
add
scas
dec
loop
movsb
arpl
adc
xchg
in
adc
fbld
jg
repz
sub
shll
xchg
pop
adc
jno
nop
jp
xchg
and
or
fdivrl
and
scas
add
fsubrs
push
mov
xchg
mov
jle
je
jnp
push
mov
jp
adcl
push
leave
imul
xchg
dec
jle
xor
mov
and
mov
pop
mov
push
les
sbb
mov
and
xchg
sarl
xchg
rclb
in
and
cmp
and
mov
and
jns
movsl
sub
jp
imul
outsl
cltd
jnp
adc
mov
cwtl
cmp
cwtl
xchg
mov
cmpsl
inc
xor
mov
or
jg
std
clc
pop
push
adc
and
data16
repz
jle
dec
out
pushf
mov
pop
adc
popf
mov
add
pop
push
orl
jno
mov
jmp
inc
push
fisubs
pop
xor
in
and
mov
and
dec
cmp
pop
sub
xor
scas
lods
mov
jp
adc
xchg
ds
xchg
aas
shll
sub
xor
and
add
adc
fsubp
in
or
and
mov
lods
mov
testb
xchg
lods
repnz
and
outsb
mov
insb
xchg
int3
and
and
xor
sub
mov
cwtl
movl
sti
mov
add
cmpl
pop
rcll
mov
leave
outsb
fstpl
push
and
rolb
push
pop
mov
into
sub
xlat
xchg
aas
stos
xor
jo
adc
and
mov
faddl
cmc
sub
aad
or
mov
or
std
and
stos
xlat
mov
fadd
movsb
add
imul
lock
test
outsl
mov
push
dec
int3
flds
jle
jno
cmp
jle
in
movsl
sub
or
out
jnp
movsl
andb
pusha
cmpsb
dec
mov
movsb
add
ret
pop
aam
fs
mov
adc
add
fnsave
outsl
and
outsb
movsb
cmpsb
pop
sarb
xchg
mov
in
xlat
xor
sbb
rcrl
orl
mov
mov
lods
clc
insl
scas
cli
aaa
mov
adc
xor
add
andl
lods
mov
push
and
inc
sbb
int3
ret
xchg
jb
xor
and
iret
jle
sbb
push
scas
and
mov
loopne
mov
push
and
je
sti
mov
pop
mov
mov
cld
loop
call
xor
out
push
mov
sahf
xchg
and
arpl
add
pusha
loopne
cmp
mov
mov
sub
out
xchg
lea
ds
and
in
arpl
scas
sub
cs
scas
scas
cmp
mov
and
ljmp
push
pop
jns
in
push
shll
shrl
dec
cmpsb
mov
loop
mov
cltd
cmp
and
leave
xorl
mov
mov
rsqrtps
pop
and
into
inc
movsl
les
ret
and
in
stos
jp
or
pop
lcall
loope
enter
fs
adc
mov
xor
dec
iret
lcall
scas
xchg
dec
test
jno
or
pop
add
fcmovnbe
and
mov
inc
adc
loopne
cld
arpl
popf
gs
mov
push
pop
mov
push
ficompl
xchg
sub
push
in
xlat
cmp
and
inc
mov
movsb
out
dec
mov
xor
sub
and
push
cmpsb
pusha
fdivrs
and
mov
xchg
sbbb
je
pop
and
cwtl
cmpsb
push
mov
xchg
and
daa
mov
push
and
inc
sti
mov
xchg
push
and
mov
and
mov
imul
mov
imul
push
cmp
fs
xor
lahf
neg
sbb
xchg
pop
jle
mov
mov
xor
sbb
andl
decb
and
xchg
gs
das
xchg
addr16
popa
mov
inc
and
adc
lcall
inc
fidivs
out
jb
stos
ljmp
dec
pop
in
enter
movb
inc
jbe
mov
dec
and
stc
or
and
mov
push
shlb
mov
neg
cmp
insb
mov
sbb
xchg
xor
jle
and
frstor
and
clc
mov
push
rorb
gs
mov
and
lods
cmp
and
in
sbb
and
mov
xchg
test
mov
in
rorl
mov
inc
jge
mov
stos
add
xchg
and
shr
loopne
movsl
and
call
das
and
arpl
and
mov
ficomps
and
popa
cmp
cmpsb
dec
dec
and
mov
push
andb
mov
jg
ret
iret
xchg
jecxz
addb
and
pop
test
mov
aad
and
rorb
xor
adcl
adc
lds
and
mov
ret
sbb
xor
repnz
push
outsl
popa
sub
movsb
xchg
insb
cli
and
jne
pusha
sbb
pop
xor
lret
popf
mov
and
xchg
and
and
mov
cmp
inc
jns
push
test
js
mov
xor
mov
dec
ficompl
mov
mov
pop
jmp
shll
dec
xor
pop
ret
add
mov
loop
mov
fmul
cmp
push
dec
and
pop
mov
loopne
and
call
mov
sub
and
jmp
dec
pcmpeqd
and
jae
sub
mov
dec
mov
pop
es
repz
mov
test
gs
shlb
stos
aas
pop
sbb
inc
push
test
and
incb
nop
and
jp
stos
into
je
sub
sbb
stc
out
mov
ret
test
in
sub
and
inc
mov
jbe
daa
andb
mov
cmp
xchg
inc
and
aad
jg
sub
enter
call
ret
xor
inc
fwait
cmp
psrld
cld
lods
jl
and
inc
lret
or
add
push
stos
int
jge
cmp
out
and
pop
popa
insl
sub
xor
das
shlb
xor
test
pop
cld
and
aas
mov
inc
and
mov
mov
leave
push
je
dec
sahf
mul
and
pushf
push
pop
fs
jle
pop
jecxz
xor
xchg
jo
scas
cmpl
and
outsl
sub
in
and
jecxz
out
jl
and
loop
pushf
mov
mov
insb
dec
lea
and
sub
es
cs
inc
pop
dec
dec
cmovo
imulb
ffreep
xor
sbb
and
test
sub
cs
sbb
mov
popf
xchg
pushf
push
mov
notb
movsl
and
rclb
lcall
lock
inc
jns
dec
movsb
icebp
xchg
das
fwait
push
orl
aas
xchg
and
push
xor
mov
mov
dec
je
loopne
mov
ljmp
mov
test
and
sahf
pop
xchg
sbb
add
inc
and
int
fbld
js
mov
ljmp
pop
add
add
push
out
stc
and
pop
and
jmp
jae
mov
mov
fistl
es
les
dec
mov
adcb
mov
inc
cmpsl
jno
push
dec
stos
notb
into
and
dec
jg
enter
movsb
aas
addr16
cmp
aad
xchg
dec
jno
lret
xchg
mov
mov
jb
iret
dec
inc
xor
and
das
in
int3
fs
xchg
adc
pop
sbb
jae
and
jp
repz
push
and
pop
and
jno
pop
cmp
push
les
js
xor
xchg
xorb
mov
sub
popf
sub
popf
or
mov
mov
aam
das
jg
pushf
cmpsb
lret
dec
push
mov
scas
push
pop
iret
sarb
pop
dec
xor
outsl
test
inc
scas
daa
shl
mov
and
in
mov
int
test
add
lods
mov
add
ds
add
ss
jle
aad
lahf
or
fnstcw
and
nop
shrl
out
loopne
xor
mov
xchg
mov
ja
xchg
adcl
mov
lret
cld
jle
rcrl
aad
mov
popa
icebp
and
ljmp
cmp
add
add
xchg
sbb
pop
and
enter
insl
jbe
loopne
ljmp
xlat
addr16
fdiv
fwait
mov
cli
add
xchg
js
and
jo
jns
in
pop
push
movsb
repnz
mov
ret
sahf
mov
jnp
cmp
out
and
push
mov
mov
jle
popa
xchg
testb
and
cmp
and
clc
and
and
je
leave
cltd
mov
repz
and
dec
movsb
lds
addr16
and
in
outsl
and
fwait
icebp
out
cmc
and
xlat
sub
mov
push
cmp
push
mov
dec
lock
andb
xor
mov
push
cmc
mov
outsb
into
andl
out
nop
les
and
cmp
dec
mov
jle
popa
dec
pushf
xor
mov
cltd
mov
mov
mov
add
jmp
cmp
fs
xchg
and
pop
and
pushf
jle
and
dec
xor
and
popa
cmp
stos
mov
mov
jo
cmp
lods
out
sub
cmp
jns
fs
xlat
pop
push
out
cltd
pop
aam
lahf
fldenv
mov
mov
mov
fxch
add
cltd
sub
sub
popa
pushf
xor
push
add
leave
xor
dec
jmp
xor
mov
scas
and
sub
push
jp
push
xchg
mov
sti
and
std
jo
sbb
and
sub
cli
xor
push
pop
xchg
enter
add
hlt
scas
xchg
clc
into
and
pop
aas
pusha
and
xor
sub
sub
popa
xchg
push
loop
push
inc
mov
mov
cmpb
ljmp
out
loopne
shrb
pop
jnp
out
pushl
push
xlat
loope
ret
add
in
mov
mov
push
movsb
push
sub
out
xor
jl,pn
jle
enter
orl
xchg
mov
mov
and
mov
add
out
inc
jecxz
inc
xor
negl
sbb
pop
lds
icebp
push
push
iret
clc
popf
ret
insl
cltd
pop
and
subb
fdivrl
daa
dec
iret
and
enter
jns
and
jge
pop
inc
fnsave
dec
xchg
lods
popa
gs
adc
scas
lods
xlat
inc
jge
subl
and
insl
cmpsb
jno
idivl
and
in
in
add
and
mov
aas
in
adc
cmp
pushf
push
sub
lret
loope
loop
jge
jno
mov
and
jecxz
std
int
leave
xor
xlat
clc
cmp
jno
inc
loopne
shrl
push
mov
daa
dec
mov
fldl2t
mov
and
notb
ss
movsl
xor
sbb
and
jns
jg
or
jb
jnp
mov
std
cmp
xchg
xchg
mov
jne
fstps
inc
inc
jnp
shll
cmpsl
adc
enter
pop
xchg
push
inc
outsl
js
sub
lret
xor
pop
bound
fisttpl
pop
call
sahf
mov
rcl
lret
mov
js
test
inc
sahf
shr
jne
sub
shll
jg
cmpsl
pop
dec
and
lock
cmp
xlat
mov
es
rcll
or
cmp
inc
js
cs
pop
and
push
and
and
inc
push
inc
orl
jns
loopne
and
stos
roll
sbb
test
fwait
jp
popf
gs
cwtl
pop
cmp
pop
nop
cmp
mov
cmpsb
lea
in
adc
add
nop
mov
aaa
inc
xor
jecxz
jns
scas
es
adc
outsl
sub
adc
jmp
sahf
cmc
pushf
mov
or
dec
mov
test
jp
xchg
sarl
outsl
mov
pop
add
push
adc
loop
pop
out
loopne
and
stos
jmp
xchg
push
ret
test
or
out
int
mov
out
add
sbb
fldt
pop
mov
or
cmpsb
jbe
mov
pop
int
stc
les
dec
imul
call
mov
mov
mov
xor
addr16
xchg
mov
xchg
sbb
mov
push
cmp
mov
inc
mov
jg
les
imull
xor
jge
mov
and
pop
dec
fwait
xlat
addr16
test
imul
and
leave
cmp
rolb
scas
mov
xchg
sarb
jmp
andl
dec
and
push
sub
sub
xor
int3
mov
push
jnp
mov
cmc
movsb
call
xchg
jne
stos
dec
movsl
mov
fidivrs
and
sahf
inc
shl
mov
xlat
imulb
gs
das
jecxz
daa
andl
cmp
fidivrl
or
xchg
das
es
mov
and
mov
js
mov
jno
add
sarl
sub
notb
xor
cli
or
and
dec
pop
je
js
or
pop
test
and
push
jb
xor
mov
pop
subl
pop
test
jnp
inc
iret
shrb
jmp
in
and
pop
dec
xchg
test
and
bound
lret
mov
mov
dec
pop
xor
sub
adc
movsb
lds
out
movsl
and
cmp
dec
xchg
mov
sub
es
and
push
push
inc
sbb
mov
fsts
add
dec
mov
push
ljmp
xchg
jnp
fwait
cwtl
dec
fmull
stos
cmp
add
and
lcall
and
pop
mov
or
pop
and
pop
popa
subb
repz
pop
or
sbb
and
or
mov
add
inc
mov
sub
sub
mov
and
mov
pop
outsl
push
xor
and
mov
lahf
pushf
pop
test
inc
mov
dec
add
inc
xchg
xlat
xor
fwait
and
je
pop
mov
movsb
repnz
and
arpl
mov
dec
ds
popf
imul
ja
mov
fistpl
fidivrs
nop
and
lcall
adc
push
ss
jg
sbb
jge
cmp
ret
adc
add
daa
inc
cmpsl
shll
lcall
lods
or
dec
loop
movsb
mov
testl
aam
lcall
popa
cmp
xchg
add
xor
and
mov
xor
lret
or
hlt
jecxz
inc
dec
cmp
mov
jmp
outsb
mull
les
inc
xor
inc
cmc
inc
xchg
aam
rolb
fwait
sub
popf
xor
push
fs
ds
and
push
xchg
cli
sub
push
and
dec
gs
push
outsl
and
dec
xorl
cmp
mov
xor
pop
in
dec
jne
mov
and
cmp
jo,pn
mov
jnp
pusha
mov
push
jp
popl
xor
xlat
scas
mov
stos
and
ljmp
sbb
xchg
nop
out
mov
je
adc
sbb
stc
dec
pop
adc
hlt
movsb
mov
cmp
lret
xchg
and
les
xchg
sahf
mov
and
cmpsl
lret
loopne
jbe
pusha
aaa
and
push
sub
movsb
popa
add
mov
insb
sbb
sbb
pop
sbb
mov
xchg
imul
mov
daa
shrb
aam
mov
neg
sbb
push
and
add
mov
mov
xor
cltd
add
negb
push
inc
scas
sbb
orl
sbbl
fdivl
cmc
add
push
out
and
in
mov
lock
in
shrb
jne
movsb
incl
inc
push
jecxz
mov
shrl
adc
stos
cmpsl
and
int3
dec
test
loop
hlt
and
call
pop
sub
adc
cltd
icebp
and
icebp
dec
jl
jmp
les
adc
adc
jae
inc
or
sbb
pop
fimuls
repz
arpl
inc
jl
in
fwait
adc
pop
stos
cli
add
ds
lret
iret
scas
jbe
adc
mov
and
mov
andl
add
ret
mov
sbb
mov
imul
ret
cmpsl
dec
adc
mov
mov
and
sub
pushf
test
std
mov
and
sub
jge
push
leave
and
in
xor
mov
dec
jle
xchg
lods
nop
pop
add
cld
in
cwtl
addr16
push
and
stos
lahf
add
push
sbb
sbb
dec
sti
cmp
imul
push
cmpsl
push
push
cmp
xor
insb
orl
xchg
cld
and
pop
mov
insl
leave
xchg
outsl
cmp
cmc
test
sub
xor
sub
loop
xchg
and
cmp
lret
mov
sbb
movsb
test
jmp
popf
dec
cwtl
inc
test
int3
dec
mov
mov
inc
loop
popa
sti
jb
jg
push
mov
jge
orb
or
shl
aaa
cmp
and
in
imul
fnstcw
and
inc
cmp
xchg
jae
xor
pop
les
mov
je
mov
lea
ljmp
adc
and
and
add
and
pop
testb
add
arpl
cmp
and
mov
mov
iret
cs
lret
push
dec
and
sahf
sbbl
dec
push
sbb
mov
flds
dec
fisttpl
jne
and
adc
insb
and
cmc
jmp
or
mov
das
test
mov
mov
sti
inc
jne
sbb
cmc
movsb
sbb
mov
popf
xor
lds
push
fwait
dec
and
cmp
jle
sarl
inc
add
and
imul
and
lock
cmp
sbb
sub
mov
scas
rcr
scas
pop
cmpsb
mov
mov
movsb
mov
and
push
and
add
int3
addl
loope
int
cmpsl
out
add
xchg
cltd
ret
sti
mov
out
push
add
push
or
lods
push
and
sub
leave
movsb
stos
js
shll
mov
fwait
sub
push
xorb
adc
add
in
pusha
xchg
jnp
mov
pop
lahf
sub
movsl
cld
pop
mov
and
or
mov
and
push
jmp
movsl
scas
and
xor
mov
cli
and
and
xor
stos
xchg
cmpsb
bound
imul
pusha
rorb
mov
sub
adc
pop
out
nop
cmp
mov
or
xchg
and
cmpb
xorl
jle
cmp
lret
cmc
mov
bound
xor
and
into
xlat
pop
add
stos
cltd
and
push
xor
xor
push
mov
lret
aad
jg
fcmovne
xchg
inc
das
dec
movsb
js
xchg
das
xchg
loope
and
sbb
add
insl
jmp
rcll
shll
enter
cmpb
cs
push
pushf
and
ds
mov
scas
mov
dec
mov
gs
in
and
loopne
jg
sbb
and
or
fcoml
inc
and
mov
lock
push
jmp
and
lds
and
aas
and
cmp
mov
test
and
fimull
icebp
adc
iret
jne
and
sub
cmp
aaa
lods
call
test
shll
xlat
push
dec
inc
sub
nop
xor
test
inc
cmp
ds
lcall
cltd
int3
insb
lds
and
sub
xchg
jno
adc
adc
mov
adc
lahf
xchg
jge
imul
push
push
and
pop
xor
xchg
addr16
mov
dec
out
fwait
and
int3
daa
fbld
sub
sahf
and
enter
cmpsl
and
jb
loopne
leave
jp
stos
push
mov
dec
and
ret
push
jl
fwait
repnz
popf
aam
xchg
and
jo
lods
dec
fbstp
and
adc
fisubs
lcall
push
ljmp
fbld
pop
mov
jno
xchg
inc
fwait
std
mov
call
xchg
out
and
push
xchg
or
mov
xor
push
dec
ja
xchg
out
and
psadbw
add
stos
and
divl
das
and
xor
in
and
push
push
mov
or
and
imul
xor
stos
cmp
andl
cld
adc
stos
xor
jl
andl
xchg
rolb
mov
popf
xchg
and
std
fisubrl
imul
pop
lcall
iret
jmp
cmpl
dec
jbe
jo
xchg
scas
clc
shrb
adc
pop
fsubs
jl
sub
push
sub
dec
inc
shlb
and
lcall
cmpsb
testb
aas
aad
popa
xor
xchg
hlt
lcall
mov
cmp
rorb
sti
nop
jecxz
lods
pop
xchg
mov
xor
jo
inc
xchg
and
xchg
push
xchg
leave
and
arpl
jns
outsb
and
sub
or
jg
and
push
sbb
inc
ds
out
popa
sbb
and
aas
cltd
divl
nop
xchg
lea
jp
and
imul
aam
dec
mov
push
pop
and
mov
dec
and
xchg
xor
pop
in
pushf
fmull
xchg
lds
fiaddl
sbb
or
orl
mov
fdivrl
cmp
mov
pop
and
vzeroall
lock
das
push
and
insb
enter
and
xchg
xor
xchg
mov
lea
and
data16
push
mov
sbb
pushf
lret
jnp
fldcw
push
and
js
mov
cli
xchg
std
xchg
and
lcall
xchg
dec
xrelease
sub
pop
jno
jp
das
jg
sbb
dec
scas
call
les
xlat
stos
in
and
repnz
or
xchg
jno
enter
mov
in
add
andb
and
add
iret
cmpsb
dec
push
decb
inc
or
and
mov
ljmp
add
outsb
and
insl
mov
and
mov
jl
pop
out
cmc
hlt
or
xchg
fcomp
and
inc
mov
and
out
inc
cmp
das
mov
mov
push
fldenv
jp
xchg
addr16
jmp
out
xor
cwtl
and
dec
mov
dec
iret
stos
pop
and
or
adc
jae
push
loopne
and
outsb
xor
movsb
and
cld
sbb
pop
dec
ja
add
loop
cmp
push
bound
mov
fwait
repnz
and
or
mov
jge
and
cmp
rcrb
mov
mov
xchg
and
sti
out
adc
and
int
frstor
outsb
push
sub
inc
inc
mov
je
sbb
or
clc
les
and
xchg
xchg
in
mov
fsubrl
mov
in
mov
mov
and
pusha
mov
inc
testb
sar
pop
xlat
and
lahf
into
es
rcl
pop
in
pop
imull
jp
insb
mov
jg
imul
add
mov
pop
addr16
dec
pop
out
xchg
and
mov
imul
test
xchg
jbe
dec
adc
xor
dec
lds
and
decb
lods
xchg
mov
sub
sarl
nopl
out
jb
lret
xchg
and
popa
imul
mov
xor
imul
pop
repz
or
sub
inc
mov
and
mov
out
pushf
sahf
cmc
push
inc
not
add
adc
pop
cltd
add
ffreep
fucomi
adcb
aad
cmp
add
mov
mov
fistl
pop
pop
inc
xchg
mov
push
or
adc
and
inc
mov
mov
movsl
mov
stc
bound
push
sub
inc
pop
pop
test
int
sub
add
inc
mov
xor
and
iret
out
pop
and
mov
rorb
shll
add
std
adc
scas
cwtl
test
into
pop
add
jbe
xchg
cmpsl
fisubrs
and
mov
lret
and
pop
inc
ljmp
fwait
push
xor
push
test
lcall
cmpsb
jl
popf
lahf
sbb
sbb
insb
fisubrs
xchg
and
adc
pusha
xchg
mov
dec
nop
insl
inc
xor
js
dec
aas
ret
sub
cmc
push
stos
adc
and
lds
pop
scas
push
aam
insl
inc
dec
jns
mov
xchg
stos
loopne
add
mov
adc
popa
and
js
and
cmc
cs
mov
push
and
and
dec
int3
fdivrl
aas
scas
mov
add
stc
fldcw
decb
and
into
call
mov
das
or
lahf
fimull
xor
sbb
xchg
enter
test
push
fiadds
cmpl
mov
sub
mov
roll
lea
adc
and
jmp
roll
dec
maskmovq
mull
or
int
and
popa
sub
jb
xchg
stos
lods
icebp
and
lcallw
mov
loop
push
repnz
imul
and
popa
outsb
xchg
fwait
aad
and
mov
faddl
xchg
and
test
jmp
mov
and
out
and
dec
push
iret
cmpl
pop
mov
loope
jp
out
pop
popa
call
fucom
xchg
and
sti
mov
and
or
rorl
stos
fsubrl
pushf
in
and
push
mov
loop
add
sti
mov
push
jb
sbb
adc
loopne
sbb
in
sbb
mov
movsl
dec
and
addr16
or
hlt
xchg
cld
test
and
loopne
scas
faddl
and
adc
shrl
mov
movsl
enter
movsb
stos
mov
add
loope
movsb
fdiv
jmp
mov
arpl
inc
push
and
popf
push
mov
dec
and
pop
xlat
test
cwtl
cmp
rorb
dec
and
sti
fwait
scas
ljmp
lods
pushf
push
mov
popa
clc
add
pop
pop
adc
adcb
mov
sar
andl
and
out
stc
sub
ja
pop
shll
mov
in
orb
and
inc
std
int
fistpl
jo
adc
das
mov
inc
ja
aaa
in
xchg
out
fistpl
mov
xchg
mov
inc
or
idivl
cmpsb
or
mov
lds
sub
and
add
loope
pushf
fdivl
movsl
lods
dec
mov
sahf
xlat
and
enter
pop
adc
dec
pop
sahf
sbb
xor
sbb
xchg
push
jmp
xchg
into
fistl
mov
scas
mov
fcmovu
mov
mov
or
and
push
or
mov
mov
lret
fmull
hlt
mov
mov
mov
mov
add
cld
movl
mov
inc
pop
test
pop
test
out
roll
leave
in
aam
ret
jns
lret
insl
sub
and
nop
and
das
fcoms
andb
testb
ret
mov
loop
adc
mov
bound
mov
mov
dec
call
mov
fmuls
ljmp
jo
jnp
cmp
xchg
xor
mov
insb
gs
and
mov
lahf
lds
loope
mov
xchg
add
mov
jecxz
imul
test
push
shlb
mov
mov
xor
ja
cmp
adc
repnz
jg
adc
jmp
mov
test
push
gs
les
cmp
jecxz
adc
out
in
mov
jp
repnz
and
inc
ficomps
cmpl
inc
and
nop
xlat
out
xchg
push
push
add
inc
jae
sub
js
mov
pop
insl
push
mov
rcll
cmp
xchg
and
call
mov
cmp
cmpsb
mov
in
adc
add
and
notl
inc
fwait
orb
push
arpl
sub
enter
out
and
jne
stc
and
imul
xchg
out
shll
and
adc
xor
sub
dec
mov
stos
push
push
and
xor
push
out
lds
pop
and
add
jge
and
push
jno
shlb
add
loope
inc
mov
xchg
cmp
xchg
inc
add
xor
prefetch
mov
xor
loope
add
dec
das
leave
or
sbbl
sbb
inc
imul
mov
mov
shlb
fstps
and
repz
xchg
add
mov
sbb
andl
and
stos
movb
cmp
mov
xlat
jnp
rclb
subb
gs
repnz
out
and
cli
popa
loop
or
and
and
fnstenv
gs
bound
test
repz
pushf
mov
adc
mov
fisubs
fistps
cld
cli
loop
jg
and
push
sub
ret
and
sub
fmuls
movsb
add
lret
mov
jle
sbb
cmpsb
push
fcoml
lahf
and
pmaddwd
dec
and
cmp
adc
add
fcmovnu
enter
mov
ret
mov
inc
movsb
push
fmul
rcl
in
cld
jge
xorl
and
in
mov
repnz
xchg
adcb
js
mov
scas
mov
and
daa
push
ds
lcall
adc
xor
mov
and
cmp
push
je
popl
sbb
xor
or
and
push
xor
mov
cmp
push
andl
in
sbb
aas
aad
fsubl
aaa
adc
aam
and
and
sbb
sub
insb
rol
and
shl
fwait
dec
and
repnz
mov
es
jp
and
mov
rclb
cwtl
xlat
mov
out
mov
and
add
lahf
bound
xchg
xor
xor
int
jnp
sti
ljmp
and
pusha
insb
jmp
call
add
and
jmp
insb
cld
shlb
push
mov
fcoms
and
jo
push
fsub
test
inc
cltd
in
in
dec
scas
and
xchg
jns
pop
aam
mov
dec
pop
mov
cmp
or
outsb
cmp
out
and
sbb
hlt
loopne
jge
mov
dec
cmp
mov
adc
fisubs
adc
mov
stos
test
add
call
and
sbb
rorb
and
push
xor
xor
test
fwait
mov
dec
test
popa
sub
subb
sahf
in
repnz
sbb
inc
call
pushf
pop
sbb
cmp
xchg
and
adc
mov
xchg
mov
out
into
inc
pop
ret
and
push
pop
aad
inc
push
pop
orl
and
sarb
rcr
pop
ds
popa
cmpl
mov
stos
jnp
mov
fldpi
jns
in
pushl
cmp
addl
and
add
cmp
popf
test
stos
cmp
xchg
rcr
int3
xorb
lret
push
lods
cld
sarl
lahf
mov
sahf
or
outsl
mov
adc
mov
in
and
fcoms
mov
fldl
sub
mov
sbb
aam
ret
lcall
cmp
aad
and
mov
jae
and
jne
bound
and
stc
fwait
push
add
cmp
cmp
and
mov
sti
stc
lret
xchg
pop
and
ss
sbb
cmpl
push
inc
inc
inc
sub
lret
lret
pop
cmp
jns
mov
mov
lock
xchg
das
clc
popa
test
loope
and
notb
xor
mov
mov
xchg
sub
aam
and
sub
les
es
and
and
lret
and
jbe
or
sub
xchg
and
fcoms
test
pop
imul
adc
xor
add
pusha
scas
and
adc
into
popaw
cmpsl
out
jp
mov
outsb
pop
iret
andb
xor
and
push
sbb
add
insb
jne
jb
mov
ds
test
mov
arpl
dec
sub
std
aam
sub
xor
mov
jnp
add
xor
jne
rclb
in
jno
adc
lret
out
inc
xchg
jb
ret
in
mov
adc
and
dec
outsl
pop
mov
cmpsb
or
push
push
daa
aaa
mov
mov
cwtl
fcompl
adc
std
add
cmp
aaa
xor
out
jne
fstl
test
fcompl
push
fadds
dec
loop
inc
imul
jbe
adc
jp
jne
cmpsl
xlat
pop
inc
insl
push
and
xchg
cmpb
movsb
mov
rcrl
mov
fisubl
add
adc
sbb
pop
andl
pop
shlb
xor
sbb
cmp
mov
int3
mov
xorl
mov
fisubrl
adc
mov
push
and
cmp
sahf
mov
sub
cmp
inc
dec
mov
das
and
adc
and
imul
add
xchg
imul
fisubrl
lret
sbb
jecxz
push
and
test
and
jb
not
cmpsb
pop
and
mov
in
inc
mov
mov
xor
and
arpl
mov
and
popf
dec
and
sub
inc
add
push
mov
cmpsb
add
dec
mov
fucomip
and
mov
inc
and
sbb
sub
mov
xor
ds
add
sub
es
lea
js
mov
adc
test
popf
pop
xchg
and
mov
pop
leave
popf
push
pop
mov
sti
push
xchg
mov
xor
xchg
std
aad
aam
inc
sub
ljmp
dec
rorb
mov
sti
popa
add
je
jbe
xlat
js
loope
adc
imul
mov
jns
lcall
jg
addl
jne
push
xchg
pop
cmc
mov
mov
fs
lahf
ds
movb
cli
jbe
add
sub
or
and
fwait
ljmp
aad
cmp
sub
and
in
lds
and
imul
adc
popa
pushl
jo
popa
push
sahf
pusha
xor
repz
outsb
out
cld
jmp
jae
pop
lret
pop
push
ret
adc
xor
xchg
aaa
mov
shlb
jle
push
popa
dec
iret
mov
cmp
repnz
sbb
dec
xor
dec
jns
jge
out
push
and
inc
sbb
mov
mov
lahf
xor
and
imul
mov
pop
mov
sub
sub
jl
jecxz
std
sti
jmp
and
jge
cltd
sbb
sub
push
pop
das
lods
orl
mov
dec
xchg
cmp
test
mov
aad
shll
xchg
mov
xor
jmp
loope
jo
test
or
dec
xchg
cmpsb
ret
adc
cmp
out
in
stos
cmp
xor
out
testl
mov
pop
imul
mov
data16
enter
push
and
call
ret
mov
je
sub
or
cmp
daa
cmpl
xor
daa
mov
fisubl
sub
jmp
sub
and
jmp
push
sarb
sub
sub
adc
leave
addr16
sbb
push
roll
in
and
aas
sar
fs
sti
add
inc
inc
imul
out
mov
fisubl
clc
stos
popa
add
jmp
adc
gs
pushf
mov
pop
scas
pushf
inc
int
and
lahf
test
loope
cmc
inc
mov
pushf
push
push
adc
ret
out
cmp
sbb
inc
adc
push
mov
outsl
lret
add
xchg
test
outsl
cmc
sbb
sbb
xchg
subb
cmp
push
inc
lods
xor
iret
test
ss
xor
in
imul
out
mov
out
sub
outsb
push
divl
add
test
or
push
pop
sub
dec
mov
cmpb
movsb
lock
ret
sbb
xor
xchg
mov
es
push
into
test
xchg
xchg
movsl
cmpsb
push
inc
mov
daa
xor
push
jge
adc
cli
add
fistpl
jbe
or
popf
add
mov
pop
jl
cmp
lea
ror
loope
in
scas
add
cltd
cwtl
push
jne
lahf
icebp
sub
test
mov
cmp
movsb
outsb
inc
inc
imul
pop
xor
jmp
sahf
push
fisubl
mov
add
movsl
repnz
rcr
sbb
mov
jae
xor
and
cmpsl
daa
loopne
aam
addr16
jmp
and
mov
push
and
out
loopne
xlat
mov
loope
repnz
ret
in
xchg
xchg
jecxz
lret
push
mov
pop
icebp
push
addr16
test
sub
inc
mov
cli
mov
in
lea
movsl
add
pop
mov
sub
sahf
jne
adc
dec
xchg
movsl
and
ret
in
jbe
lods
and
and
rcl
cmpsb
and
xchg
movsl
lods
lcall
in
mov
and
das
inc
loop
xor
cmpsb
xchg
dec
jo
pop
pop
lods
add
and
hlt
ja
test
push
adcl
sbb
int3
push
movsl
jno
mov
imul
xlat
dec
and
xor
sbb
xchg
add
and
pop
sub
inc
jecxz
and
jmp
pop
or
jae
dec
and
xor
lock
lds
add
pop
icebp
orl
or
jno
xchg
cmp
pop
fstpt
or
or
and
aam
xor
lret
jbe
push
fildl
and
push
pop
pop
pop
inc
dec
sub
or
cli
fimull
mov
rep
nop
inc
sti
fwait
push
and
xchg
insl
dec
pop
out
js
xor
mov
and
loop
jae
pusha
inc
out
bound
jae
lret
dec
inc
inc
and
outsl
adc
mov
pop
mov
and
lahf
adc
xor
sbb
lock
sti
cwtl
cmpsl
and
jo
imul
jbe
mov
sarb
xor
jns
test
push
push
and
fdivp
or
or
jnp
xchg
dec
push
push
mov
cmp
jns
mov
pop
add
arpl
and
cmp
and
inc
imul
fwait
mov
mov
pop
sub
stos
arpl
imul
inc
nop
loop
inc
into
pusha
mov
inc
test
movsb
inc
sub
add
lahf
and
xchg
gs
jbe
rol
es
and
jae
jge
mov
lods
cwtl
cmc
push
adc
mov
xchg
movsl
and
pop
jo
movsb
cmc
ss
and
aas
jmp
xchg
fimuls
jp
mov
ret
repz
arpl
and
enter
popa
mov
mov
lret
and
inc
sbb
movsl
or
jge
sbb
jmp
and
xchg
cwtl
test
jb
popa
mov
sbb
and
shlb
hlt
and
insb
gs
int
xchg
cmp
fs
push
stos
popa
inc
lcall
imul
les
or
pop
sub
fmul
out
mov
outsb
es
cmp
scas
mov
repnz
rorl
repz
pusha
call
mov
xlat
movsl
mov
mov
jmp
fnstcw
sbbl
sbb
jecxz
sbb
std
and
leave
rcrl
nop
out
flds
ljmp
popa
mov
dec
push
and
nop
pop
ret
sub
or
dec
xchg
in
inc
in
mov
xchg
pop
js
xlat
cs
mov
out
mov
int3
sbb
insb
cmp
shrl
aam
cld
les
fstps
xorb
lret
and
jg
push
fsubrl
jmp
dec
cmp
and
push
sbb
mov
cmp
sub
mov
xor
dec
int3
xor
push
jecxz
mov
js
out
pop
or
insl
cmp
sub
cs
and
int3
jp
fbld
jno
and
mov
add
and
or
and
or
daa
dec
jns
add
adc
testb
pop
and
mov
mov
pusha
pop
and
dec
lods
sbb
faddp
mov
xor
add
aad
adc
ljmp
and
adc
sub
mov
rcrl
xchg
mov
hlt
std
popf
push
mov
mov
xor
and
fistpl
and
cld
pusha
cltd
mov
subb
push
aaa
mov
movsl
addr16
daa
pop
icebp
mov
pop
add
xchg
and
mov
dec
lods
and
inc
pop
mov
jle
and
scas
adc
pop
push
mov
and
cmpb
into
mov
mov
jle
xor
or
jo
pop
and
jne
sub
sbb
out
rorb
iret
xchg
jmp
add
dec
mov
inc
add
adcl
and
jecxz
pop
mov
ds
icebp
bound
repz
mov
jg
bound
and
std
or
mov
add
dec
in
xor
pop
je
inc
xchg
mov
xlat
fucomp
sub
imul
out
xchg
mov
and
rorl
lock
mov
movsb
sub
inc
push
mov
cmp
adc
pop
cmp
inc
dec
lock
loope
jno
or
mov
jp
and
adc
and
dec
cli
inc
mov
xor
mov
lods
lock
aam
xchg
jne
dec
pop
xchg
lds
xor
or
sub
fists
sbb
pop
call
aas
mov
sub
or
push
push
call
cld
pop
pop
add
stos
lret
and
sahf
mov
jns
mov
clc
inc
insl
test
test
push
dec
sti
push
outsl
push
mov
dec
mov
imul
dec
add
add
icebp
inc
pop
inc
push
dec
pop
gs
sbb
xchg
bound
push
push
ficomps
push
lahf
shll
arpl
bound
jb
or
leave
push
adc
and
and
popa
xchg
sbb
add
ds
push
xor
and
loope
sarb
jbe
pop
arpl
or
add
lret
test
int
add
lea
and
jl
jne
leave
int3
sbb
movsl
xchg
outsl
push
push
inc
jno
xor
pop
and
pop
sbb
in
fldl
cs
mov
add
enter
popf
pusha
and
lods
cmp
call
loopne
imul
pop
lcall
in
inc
iret
jle
mov
dec
lret
jl
in
popf
ret
and
pop
scas
or
xor
repnz
pop
inc
or
cwtl
mov
ret
movsl
inc
pop
fbld
jp
shr
jno
mov
sbb
je
and
dec
jmp
and
outsb
mov
clc
mov
psrld
push
cmpsb
add
loop
popa
mov
xchg
les
push
or
xchg
sub
stc
dec
jg
loopne
pusha
dec
cltd
lahf
sub
adc
and
lods
xchg
mov
push
and
ret
fidivrl
or
mov
mov
push
jge
jbe
filds
lahf
inc
es
and
cmp
call
pop
mov
jl
mov
arpl
into
and
popf
pop
pop
push
int3
pop
inc
sub
pop
sub
mov
fildll
daa
xchg
and
cmovo
mov
pop
xor
and
sub
mov
icebp
mov
jb
ds
in
push
mov
bound
rcrl
sbb
movsb
stc
jne
out
lods
adc
jp
and
std
scas
xchg
mov
popa
push
fildll
pushf
jecxz
mov
mov
sti
loope
imul
insb
out
xchg
push
ljmp
xlat
cmc
cltd
cmp
jmp
adc
insl
inc
pop
pop
pop
pop
and
or
scas
hlt
push
jb
loope
mov
push
dec
add
jl
or
pushf
cmp
movsb
scas
insb
lea
mov
and
sbb
and
or
mov
jns
gs
and
popf
jb
mov
and
shlb
sub
cmp
add
jns
jg
cmp
mov
and
mov
mov
test
fs
or
lahf
mov
fsubr
cmpl
xor
jl
aam
insl
loop
sbb
jb
mulb
push
lock
pop
out
mov
adc
cmp
shlb
testl
cmpsl
xor
mov
mov
jo
test
dec
push
jg
cwtl
dec
and
int3
cld
sbb
and
xor
and
lret
cmp
jecxz
ret
mull
imulb
fdivrp
leave
and
add
mul
or
inc
scas
mov
mov
ljmp
xchg
and
xor
xor
mov
mov
outsb
and
pop
jne
inc
push
mov
clc
jnp
add
cmp
arpl
insb
and
jp
sub
jmp
mov
movsl
xchg
or
mov
test
or
les
push
das
adc
sub
adcb
lods
test
adcl
shll
sbb
stos
out
loop
push
ficomps
pop
add
daa
nop
lea
mov
sub
in
or
loopne
push
mov
push
cmp
pusha
and
dec
xor
and
test
mov
flds
lret
outsb
or
xchg
add
aas
mov
lret
aam
sbb
mov
ret
imul
outsl
xor
jne
sahf
out
push
or
xor
int
insb
add
cmpsb
cwtl
cmc
mov
aaa
pop
enter
shll
bound
and
fildll
mov
cli
or
and
pusha
lock
and
dec
cmp
xor
push
ror
and
mov
jnp
aaa
cmp
ds
adc
xchg
leave
out
dec
js
into
mov
mov
cltd
push
inc
jnp
std
nop
stos
sub
das
inc
push
lret
sub
and
cmpsl
xor
and
movsb
inc
cmp
ror
xor
or
jle
es
gs
es
adc
outsl
fdivrs
lods
dec
push
in
jge
leave
gs
jle
cmc
sbb
push
jecxz
jg
jo
les
mov
cmp
and
aad
scas
movsb
sub
dec
in
mov
mov
mov
and
fsubrl
pop
sbb
jne
mov
les
cmp
add
insb
cmpsb
movsl
jo
out
and
imul
add
xchg
add
and
add
mov
xor
push
ja
xor
fisubl
icebp
or
mov
jae
insb
enter
aad
cmp
out
shrl
ret
mov
xlat
movsb
outsl
xor
sub
mov
and
cmc
inc
repnz
mov
mov
pop
test
mov
and
shl
and
xor
dec
inc
nop
pop
bound
mov
bound
loop
popa
and
js
addb
js
mov
xor
add
mov
mov
fldenv
mov
movsb
and
xchg
and
outsl
add
inc
int
mov
jno
adc
in
inc
outsl
jecxz
pop
cli
and
push
add
push
adc
pop
and
movsb
movsl
jb
aaa
cmpsb
test
movsl
pop
out
lar
mov
xchg
leave
push
lahf
add
push
pop
jae
incb
je
inc
add
and
jno
push
mov
popa
movsl
aas
cmp
mov
mov
ret
adc
mov
dec
inc
xchg
loope
insl
cmp
pusha
and
sbb
xor
ljmp
fsubrl
and
cmc
movsl
inc
and
fnstsw
divb
mov
dec
gs
sahf
xor
and
mull
aaa
pusha
or
push
das
in
sarl
ljmp
outsl
and
in
mov
insl
dec
and
rcll
popa
ror
or
push
loopne
orl
pop
in
outsl
and
aas
jle
inc
xchg
inc
cltd
mov
js
sbb
orl
push
fsubp
sbb
enter
popa
add
pop
cmpsl
pop
and
xchg
sbb
mov
stos
loop
repz
and
jl
sbbb
inc
push
add
sbb
scas
xchg
and
mull
xchg
gs
sub
push
aas
cmp
push
fsub
icebp
cmpsb
mov
gs
pop
mov
outsl
pop
cltd
insl
in
mul
pop
and
mov
decl
pop
xchg
mov
mov
addb
jb
jl
xchg
mov
inc
sub
mov
call
add
insb
adc
jge
mov
add
popa
int
jmp
and
lcall
lods
mov
pop
cltd
lock
mov
lock
mov
loopne
push
loope
pop
hlt
jne
lret
xor
das
addr16
push
fcmovb
cli
push
and
mov
scas
fwait
imul
imul
shlb
and
imul
mov
sbbb
cmp
ljmp
adc
push
mov
pop
push
test
out
pop
loope
fmull
les
push
call
shlb
pop
cwtl
lea
push
add
sbb
xor
out
jmp
dec
fbstp
adc
in
mov
sbb
add
clc
pushl
or
cmp
and
and
mov
lods
in
xlat
stos
sti
jno
dec
idivb
iret
mov
xchg
and
insl
hlt
je
push
cmp
mov
push
les
aaa
mov
stos
xchg
cmp
pop
shrl
stos
or
faddl
push
fldenv
cmp
or
and
out
cwtl
sahf
cmp
sub
jp
and
mov
mov
daa
cltd
stos
pop
jl
cltd
and
inc
xchg
jmp
and
test
scas
movsb
dec
jge
add
fldenv
loope
outsb
mov
and
ss
and
icebp
lds
movsb
hlt
jg
aad
rep
popa
cli
mov
and
in
rcrb
xor
mov
clc
xorl
mov
push
jae
mov
ljmp
out
xchg
je
inc
sbb
mov
sub
in
adc
xchg
ljmp
orl
dec
ret
inc
test
popf
sub
mov
mov
loope
jmp
sahf
mov
push
sub
pushf
lcall
ds
pop
out
or
push
mov
sub
dec
aaa
sahf
mov
popa
test
int3
mulb
test
in
push
mov
nop
mov
mov
and
jns
mov
cli
xor
adc
imul
cld
mov
daa
repz
xchg
mov
negl
out
loop
xchg
outsl
and
in
and
and
push
and
and
add
mov
aad
mov
sub
shll
sahf
xor
or
test
popa
in
mov
inc
shlb
sahf
fists
lods
pushf
ret
dec
mov
or
sub
daa
sahf
cmp
sbb
jb
leave
ss
mov
rol
mov
jg
jno
jecxz
pop
pop
mov
mov
bound
mov
movsl
cmpsb
mov
lock
inc
andb
cmp
mov
xchg
mov
jmp
and
out
popa
outsb
into
js
mov
cmp
cwtl
cmp
iret
and
popa
nop
inc
popf
and
xchg
jecxz
movsl
push
sbbb
out
in
inc
mov
arpl
push
movsb
std
push
stc
sbb
jl
das
lcall
iret
ss
xchg
loopne
push
mov
les
and
or
and
test
and
stos
pusha
and
sub
and
lods
js
test
jno
leave
and
and
cli
mov
dec
jbe
mov
mov
cwtl
and
lock
les
call
icebp
xchg
test
dec
and
fsubrp
rorb
or
xchg
repnz
sbb
iret
and
shlb
and
daa
add
push
sbb
pop
and
fsubl
and
xor
and
dec
adc
imul
dec
adc
das
sbb
xchg
sbb
pop
and
xor
ss
xor
out
addl
in
bound
and
mov
mov
test
outsb
and
jno
andl
or
sub
push
and
mov
movsb
sub
frstor
ja
jnp
clc
xor
jg
ljmp
and
xor
xor
push
ds
jns
push
call
push
and
lret
lock
xchg
inc
xor
add
outsl
mov
xor
cmpsb
cmp
outsl
push
pop
out
pop
mov
lea
inc
add
ss
sub
lret
pop
cmp
adc
sub
xlat
inc
inc
sbb
shl
sub
push
sub
leave
xchg
mov
insl
push
inc
stc
insl
push
jle
movsl
mov
sub
out
lods
clc
inc
daa
insb
out
pop
xor
stos
push
jecxz
xchg
call
lods
add
xchg
mov
jns
hlt
pop
mov
and
push
mov
mov
lock
mov
and
xchg
sbb
sbb
sbbl
mov
and
and
mov
lcall
popf
jecxz
cmp
cmp
lods
and
pop
hlt
ret
sub
xchg
mov
mov
shl
roll
xorl
cmp
add
dec
popf
mov
fildll
int3
sbb
in
les
sbb
popa
shll
lahf
daa
and
push
and
pop
movsl
push
cmpsl
mov
aad
and
and
fcomps
daa
js
and
cmp
sbb
stos
and
mov
fiaddl
and
hlt
int3
mov
andl
jmp
arpl
movsb
push
data16
mov
mov
sub
gs
mov
js
cwtl
push
stos
sbb
ljmp
popa
sbb
add
add
pop
inc
inc
and
mov
or
sbb
and
daa
jae
cmp
cmp
and
std
pop
clc
and
pop
sarb
cmp
sbb
jo
pusha
loop
lods
jb
inc
leave
and
movsl
and
fsubrl
outsb
mov
gs
fwait
sub
and
xchg
and
sbb
fs
sub
and
insb
add
and
out
add
stc
inc
adc
incb
in
mov
adc
sbb
lock
ret
aaa
cmp
and
fldcw
push
and
pop
sbb
sahf
movsb
bound
and
xchg
pushf
imul
mov
push
mov
movsl
inc
fisubrs
sub
or
mov
mov
aam
mov
ljmp
dec
popa
bound
sub
push
jg
lods
fs
and
xchg
jns
cmp
and
xchg
xchg
js
fisubl
ret
jl
jecxz
sub
inc
adc
jb
mulb
mov
popf
movsb
xor
fisubs
cmp
das
sub
xor
mov
sahf
fwait
mov
or
jnp,pn
insl
sahf
mov
cwtl
sub
and
das
xor
and
cmp
insb
cmp
pop
loope
test
out
test
mov
sub
and
ror
insl
mov
sbb
in
jo
and
mov
ds
and
pop
cltd
js
into
mov
ret
mov
and
mov
inc
iret
jge
movsb
int
sub
outsl
add
cmpl
push
inc
outsb
lret
inc
and
shll
into
loope
mov
add
mov
ds
popa
mov
and
ss
hlt
jmp
fdivrs
sbb
xchg
mov
push
hlt
arpl
nop
popa
mov
sarb
data16
out
imul
scas
das
int3
insl
and
cmpsl
and
and
js
shrl
in
and
outsb
lret
pop
es
jge
and
jecxz
fst
and
data16
cs
adcb
shll
stos
ja
fs
dec
in
mov
and
out
rcrb
aas
add
movsb
pop
sub
daa
cld
xor
mov
or
fs
fwait
add
shrb
mov
mov
jae
add
mov
aam
pop
mov
xlat
cmp
int
out
inc
and
xor
test
push
test
pop
mov
and
inc
jo
sub
jmp
ljmp
fidivs
dec
jge
loop
das
imul
cmp
and
push
fnstenv
add
push
mov
push
jnp
lods
in
cli
mov
sbb
icebp
pop
mov
mov
nop
pop
mov
adc
xor
and
inc
insl
hlt
and
lods
fidivs
and
cli
fwait
xchg
mov
or
std
cmpsb
cmp
outsb
inc
andb
dec
rcrb
xchg
jnp
xor
mov
cmp
movsb
pop
mov
jle
hlt
xor
sub
int3
call
jno
push
lea
cwtl
push
and
and
lock
inc
jp
iret
or
fbld
popl
and
xchg
ds
mov
in
push
aaa
pop
push
mov
clc
pushf
adc
cmpsb
push
sar
or
or
mov
add
pushf
mov
push
pop
or
fsubs
add
push
adc
jecxz
and
pop
xorb
push
xchg
sahf
mull
and
shll
stos
add
inc
and
dec
sbb
loope
mov
cli
push
xlat
iret
out
pop
mov
cltd
adc
ret
mov
es
adc
dec
mov
cmp
push
jbe
insl
xchg
and
xor
or
mov
mov
adcl
popa
pop
dec
mov
add
jle
pop
jnp
enter
cmpsl
sti
fldt
data16
mov
jns
sub
out
rorb
sbb
xchg
rorb
cmp
enter
xchg
hlt
dec
cmp
in
push
leave
cmp
dec
xchg
xchg
fistl
or
cmp
cli
inc
test
mov
sbb
and
cmpsb
xchg
int3
and
push
push
mov
imul
icebp
popa
stos
out
inc
movsb
rcll
lds
jecxz
jne
and
icebp
popf
pop
repnz
mov
cs
movl
jo
pusha
aas
inc
movsb
jge
loopne
lahf
mov
cltd
fmul
fbld
jns,pn
dec
push
test
and
test
mov
shr
daa
hlt
and
pusha
rorb
inc
mov
mov
xlat
push
mov
push
sbb
iret
and
lcall
and
xchg
pop
loopne
push
inc
cld
and
mov
clc
gs
daa
sub
lcall
and
outsb
and
mov
rorb
xor
std
add
and
mov
insl
and
stc
xchg
mov
sarb
and
pop
adc
popa
jmp
fadd
mov
xor
lahf
arpl
adc
roll
stc
stos
xchg
sbb
and
pop
in
jl
jae
and
dec
rcrb
loope
int
popf
and
and
xor
inc
mov
and
stos
jecxz
and
fldenv
loop
or
and
jne
lret
nop
rep
fildll
mov
and
xchg
jns
sahf
mov
or
sub
fsubrs
movsb
ret
pop
arpl
adc
notl
aam
and
mov
sub
fstp
adc
mov
out
fs
cmp
sub
jmp
mov
mov
mov
arpl
loopne
and
jae
and
dec
or
iret
jbe
dec
jle
jmp
sub
in
and
push
mov
in
iret
adc
jmp
test
outsl
mov
stos
jecxz
pusha
mov
mov
pushf
dec
dec
outsl
push
loop
xor
ret
pop
jmp
and
push
push
jge
rolb
jb
xchg
test
adc
pop
push
xor
loop
in
mov
jecxz
test
push
mov
xor
mov
xor
jge
lea
mov
xchg
into
mov
push
push
cmpsb
fildll
jp
push
add
pop
bound
mov
out
mov
adc
pop
aas
push
mov
movsl
jno
fldl
or
and
sahf
ds
push
rcrl
or
dec
scas
sub
and
sti
pop
jb
mov
enter
clc
das
mov
call
aaa
jns
sub
and
insb
rcrb
cmc
jl
scas
push
bound
adc
push
pop
aad
cmpsl
or
inc
xor
lods
pop
lcall
pmaxsw
in
mov
flds
push
and
mov
and
mov
and
adc
in
and
mov
lods
mov
cmp
push
jle
out
mov
in
adcl
jmp
add
shl
and
stc
pop
fists
fdivs
mov
mov
xorb
sub
nop
out
or
insl
arpl
je
jo
push
cltd
mov
inc
int3
stos
call
and
movsl
sbb
add
xchg
jns
pop
insl
push
xor
add
iret
mov
lods
xor
and
push
test
les
ja
ficompl
mov
into
fwait
jge
push
mov
aad
mov
pop
int3
and
daa
mov
xor
stos
and
xlat
data16
arpl
jmp
out
pushf
push
movsl
gs
or
xor
mov
lret
mov
dec
sub
inc
out
adc
add
mov
mov
mov
lds
ljmp
cmpsb
and
int
jnp
inc
andl
jns
mov
aad
sbb
or
mov
and
mov
lock
jmp
andb
inc
leave
mov
xchg
je
ffree
ds
in
or
and
push
push
jns
std
inc
bound
push
repz
aaa
mov
sbb
lahf
int3
inc
in
mov
jnp
xchg
jecxz
and
mov
xor
mov
cmpsl
out
sub
and
sub
mov
mov
xor
add
and
mov
xlat
std
adc
sti
addr16
inc
fisttps
jb
or
int3
sbb
out
pop
popa
adcl
dec
arpl
test
xor
imul
sbb
push
add
lds
push
addr16
mov
ret
push
dec
shlb
iret
xchg
pop
dec
add
inc
ret
xor
jno
jbe
das
fbstp
js
cltd
dec
gs
adc
mov
sbb
in
ret
dec
jno
pop
popf
and
idivb
mov
gs
out
lahf
adc
movmskps
mov
arpl
or
mov
inc
les
shlb
sub
and
xor
scas
and
pop
xor
imull
jne
cltd
sbb
mov
inc
mov
xchg
cmc
add
pop
daa
dec
or
mov
imul
push
jo
push
repz
out
add
sbb
xchg
sbb
mov
movsl
std
lds
divb
add
inc
or
sahf
sub
adc
outsb
les
xchg
mov
mov
mov
cli
jmp
mov
pop
notb
in
and
sub
mov
and
loope
inc
mov
test
sbb
adc
repnz
xchg
in
das
iret
imul
andb
push
xchg
sub
mov
lcall
subl
nop
aas
push
xchg
fidivl
and
mov
adc
test
aaa
inc
daa
jno
mov
scas
mov
shlb
push
pop
and
icebp
jae
adc
cmp
rcrb
adc
sub
shll
and
cld
ja
and
jmp
cmp
pop
sub
jg
and
call
out
jecxz
sub
mov
add
xor
jl
jmp
rep
dec
sbbl
ljmp
push
and
push
push
adc
jne
or
jbe
cld
sub
movsb
das
inc
inc
repnz
mov
push
pop
loopne
incl
mov
cmp
inc
mov
mov
out
mov
dec
mov
mov
sub
imul
or
xor
movsl
jo
loope
and
cltd
push
sub
jl
arpl
add
and
insb
push
dec
out
ljmp
cmp
hlt
dec
lods
and
pop
pop
and
jmp
dec
and
jb
aam
xchg
test
loopne
and
in
xchg
mov
mov
mov
inc
cwtl
jbe
sbb
pop
into
xchg
pop
scas
xchg
sbb
stc
js
and
leave
dec
mov
dec
xchg
insl
js
adc
seta
xlat
outsb
and
shrb
or
mov
jb
and
fs
outsb
sbb
sub
pop
inc
outsl
jecxz
imul
mov
push
aas
xor
and
ja
test
cmp
and
ljmp
scas
mov
call
fnstenv
pop
daa
sub
cmp
divb
xchg
pop
rcll
and
mov
test
add
pop
fidivs
lods
jecxz
sub
mov
out
inc
repnz
jne
xchg
sbb
mov
adc
pop
hlt
stos
cmpsb
loope
pop
ret
xchg
mov
and
data16
pop
push
mov
shlb
loopne
cmpb
pop
mull
shlb
nop
pop
cltd
subl
and
rclb
rclb
sub
popa
jmp
xchg
outsl
and
jg
or
dec
incl
icebp
and
mov
and
mov
xorb
shll
xor
push
push
pop
push
lock
dec
xor
mov
inc
and
pop
daa
pop
fstl
pop
xor
arpl
and
and
fwait
test
mov
insl
mov
ficomps
popa
or
lcall
mov
sbb
pop
fdivrs
mull
mov
adc
aaa
mov
cmc
js
mov
repz
jae
lock
outsl
jge
cmp
sahf
mov
movsl
adcl
dec
out
mov
jl
andl
pop
and
push
repnz
sbb
cs
sbb
loope
and
and
mov
mull
xchg
or
rol
dec
pop
outsb
shl
and
and
leave
jmp
sub
sti
mov
sub
test
dec
mov
insb
mov
mov
or
outsb
ljmp
mov
push
jbe
pushf
loop
jl
xchg
lcall
and
mov
xor
push
jns,pt
push
mov
xlat
cmp
jne
fisubl
hlt
add
mov
and
popa
test
and
push
jbe
xchg
ret
fdivl
cmp
movsl
push
and
pop
stc
push
mov
and
insl
dec
mov
and
add
popf
jmp
in
push
mov
ja
frstor
stos
xchg
and
fcompl
rolb
cli
and
cmp
andl
xchg
and
js
mov
mov
test
cltd
pop
mov
xor
cmp
push
jo
sti
or
jae
popf
imul
daa
and
sbb
sbb
repz
mov
pop
and
push
cmpsb
lret
cmp
add
lock
lahf
and
sub
and
shlb
xchg
add
aaa
in
jp
mov
cltd
mov
xor
lods
push
popf
aam
jno
adc
repz
popf
fisubl
mov
out
divl
adc
push
xchg
adc
lahf
and
mov
xchg
nop
and
jp
push
cli
dec
das
and
jg
pop
jns
pop
sub
push
add
imul
int3
add
xlat
or
pop
mov
xchg
insb
test
out
xor
xchg
inc
in
sbb
fidivl
int
xor
dec
sbb
cmp
and
in
mov
mov
rolb
sahf
xor
mov
mov
adc
jne
scas
adc
pop
xor
add
or
xor
and
ds
xchg
outsb
mov
dec
lret
push
inc
mov
mov
cmp
push
pop
pop
dec
xorl
lods
cs
add
test
pop
outsl
or
test
pop
and
mov
or
clc
addl
shll
adc
adc
popf
dec
fnstsw
mov
pop
loop
loope
addr16
jecxz
and
and
shl
gs
mov
out
stos
or
test
jnp
xchg
and
sbbb
bound
fnstcw
pop
stc
and
lret
sub
and
and
xor
lahf
and
pop
xchg
les
popf
repz
andb
cmpsl
adc
xchg
or
or
pop
mov
mov
mov
lahf
and
test
mov
adc
mov
shrb
outsb
jg
aas
xchg
cmpsl
and
test
fsubs
sub
sti
and
mov
dec
mov
adc
insl
mov
movsl
jae
loopne
popa
mov
repnz
or
mov
push
test
pop
lret
push
popa
add
and
mov
jl
sub
mov
lret
adc
fsubs
push
lea
and
outsl
daa
je
in
xchg
fldenv
xor
adc
xchg
push
sub
mov
out
popa
mov
or
and
adc
mov
add
mov
dec
int3
and
push
seta
test
dec
lret
mov
sbb
aam
test
mov
and
pop
inc
dec
cmp
dec
sub
cmp
push
mov
jb
mov
insl
and
ljmp
xchg
addr16
jp
add
jnp
push
subl
push
inc
mov
mov
cltd
das
sub
inc
mov
leave
inc
add
and
movsl
out
fs
mov
cmpsb
push
and
sahf
pop
ret
push
int
mov
repz
mov
ret
dec
mov
loope
sbbl
sbb
out
jns
dec
and
adc
xor
dec
and
cmpb
lcall
or
push
pop
and
push
popf
scas
stc
fwait
shll
mov
xchg
out
lods
jns
and
rcrl
fildl
fs
and
js
jnp
and
repnz
adc
mov
dec
cmp
xchg
in
fisubl
and
cwtl
xchg
cld
test
and
or
mov
arpl
jge
ficomps
mov
stos
ljmp
fists
xchg
sbb
cli
jecxz
in
cltd
cltd
and
imul
push
pop
daa
push
inc
lcall
aaa
pushf
fs
mov
mov
push
das
mov
mov
inc
shlb
sub
rclb
mov
mov
sahf
add
xchg
dec
leave
pop
and
inc
pop
and
shlb
cltd
mov
sbb
jbe
mov
pop
add
and
xchg
add
into
adcb
ljmp
dec
and
cmp
and
call
aam
xlat
out
in
stc
outsl
cmp
mov
call
test
outsb
xchg
jo
sub
jge
mov
dec
push
or
cli
rclb
loope
les
pop
mov
mov
sbbl
pop
and
mov
or
test
xchg
icebp
mov
scas
push
inc
or
sbb
fwait
popa
adc
das
add
lret
or
jl
repz
jno
xchg
and
daa
cmpsl
and
pop
jb
pop
out
lret
and
in
das
mov
bound
outsb
add
lock
dec
and
mov
jmp
mov
pop
insl
test
fwait
gs
xchg
iret
aas
sub
push
jb,pt
and
adc
and
ficoms
pop
in
or
rcrl
and
add
xor
test
adc
cmp
and
popa
movsl
lods
jl
xor
or
scas
mov
cmp
test
and
xor
push
mov
xchg
andl
mov
xchg
je
inc
in
movsb
jmp
jo
and
and
xor
jg,pn
out
fisubl
imul
js
xchg
mov
xor
scas
sbb
inc
loope
sbb
xchg
ljmp
sub
and
push
mov
movsb
mov
xchg
stos
sub
mov
xor
jb
add
mov
fisubrl
xor
sbb
xchg
fcmovu
and
fdivrl
mov
xor
popa
adc
sub
loope
jg
pop
rcrl
ret
int
jge
int3
and
xchg
cmpsl
cmp
pop
mov
and
ret
and
sbb
mov
push
push
movsb
xor
mov
sbb
cmc
iret
adc
mov
je
pop
repnz
xchg
xorl
mov
stos
sbb
jnp
push
aaa
pop
sbb
push
xlat
mov
mov
pop
add
sub
inc
and
push
fcoml
subl
dec
mov
test
stc
cltd
shrl
add
push
dec
pushf
add
shll
popf
cltd
ss
xchg
pop
sub
ja
mov
inc
add
mov
cvttps2pi
sub
xchg
and
popa
pop
out
adc
out
pop
jae
cmp
or
pusha
pop
fidivl
and
pop
xor
and
pop
ja
and
sub
movsl
les
xor
xor
add
fnsave
andb
add
dec
fbld
lea
and
xorl
xchg
sbb
insl
and
xor
jno
in
and
inc
adc
mov
xor
sbb
test
scas
mov
sub
das
pusha
and
rolb
outsb
mov
adc
sbb
and
or
aad
jge
dec
and
jb
popa
sbb
jp
in
or
movsl
xchg
pusha
mov
and
imul
aas
inc
cmp
xchg
pop
stos
inc
shrl
pop
add
addr16
add
das
mov
jg
sub
cmpsb
jle
mov
and
out
lcall
sub
dec
xchg
aaa
hlt
mov
adc
cltd
ljmp
cli
mov
or
push
repz
mov
movsl
movsb
jecxz
xor
jns
xor
into
rolb
adc
popa
out
icebp
lds
pop
jmp
add
popa
xchg
insl
xor
and
ret
rcr
or
push
cmp
jl
outsb
cmp
dec
subl
xchg
sbb
mov
jns
and
pop
and
sbb
inc
push
lahf
lea
xor
mov
out
insb
in
fidivs
shlb
shll
fsubrl
xchg
xchg
sbb
adc
cmp
mov
mov
and
sub
daa
pop
test
cmp
jmp
movsb
shll
dec
shl
and
cwtl
xor
and
ret
push
or
dec
test
movsb
inc
js
or
adc
and
cld
add
mov
std
jle
pop
in
out
and
push
xchg
add
mov
push
mov
jmp
movsb
test
xchg
ds
mov
mov
and
mov
inc
call
inc
and
xchg
test
dec
or
sub
and
flds
lret
pop
jmp
shl
jne
cmp
xchg
subb
jle
dec
and
dec
testb
sbb
inc
mov
pop
daa
cltd
data16
push
jb
push
into
sub
mov
xor
aam
in
xchg
add
xchg
mov
xchg
dec
push
cld
movsb
cmp
cwtl
add
jns
jge
sub
mov
loopne
and
inc
call
aaa
push
mov
test
push
mov
aad
stos
jecxz
leave
and
mov
sbb
dec
fiaddl
adc
xlat
xor
xor
das
mov
stos
mov
fnstcw
clc
adc
inc
ffreep
mov
addb
cmp
jae
and
and
dec
ds
sbb
leave
push
and
xchg
sbb
mov
adc
xor
cmp
addr16
mov
cmp
inc
nop
mov
dec
jno
add
mov
fcoml
jns
cmp
dec
mov
movsb
sbb
push
inc
addb
out
and
cmp
shlb
xchg
pop
mov
cwtl
inc
xor
cmpb
aaa
imul
or
xchg
dec
add
test
add
xchg
cmp
xchg
shll
mov
ljmp
pusha
ja
cltd
pop
dec
push
jnp
mov
add
shl
inc
ret
popa
inc
push
sub
std
lods
cmp
cmp
push
adc
sbb
movsb
push
and
ret
sti
lea
jl
mov
push
mulb
rcll
iret
push
ret
inc
pop
adc
mov
rcl
sbb
lock
addb
ss
jno
push
adc
mov
movsb
xor
and
nop
add
mov
rorb
mov
push
xor
mov
and
jae
push
or
cwtl
jno
into
in
and
xchg
adc
mov
popa
test
ja
mov
dec
loopne
xchg
cmp
mov
or
vpmuludq
or
lahf
mov
xorl
inc
xchg
out
and
push
jle
sbbl
pusha
daa
clc
ljmp
loop
or
nop
and
clc
push
adc
scas
mov
sub
and
pop
xchg
xor
std
test
sub
test
mov
int3
js
popa
cmc
lods
mov
fsubs
or
test
shll
sub
ljmp
mov
add
xchg
xchg
test
adc
js
lea
and
rorb
loop
lret
cmp
mov
mov
dec
and
shrb
cltd
lret
outsl
xor
jle
lcall
sbb
les
mov
insl
int3
daa
decl
xor
insb
pushf
mov
ljmp
lcall
adc
and
jne
add
mov
fistps
mov
call
push
dec
mov
je
mov
lock
and
mov
sti
leave
fidivs
push
push
dec
inc
dec
inc
or
lahf
icebp
aas
sbb
popa
mov
sub
fsts
stos
ljmp
pop
cmp
test
dec
mov
dec
out
lret
stos
loopne
inc
push
arpl
or
fstpl
into
mov
out
pop
xor
ja
pop
xchg
insb
and
jbe
inc
call
pop
gs
ret
mov
lods
push
outsb
pop
mov
push
and
inc
sub
std
xor
cwtl
outsl
mov
or
jnp
popa
cld
in
sub
fwait
inc
mov
pop
mov
jno
add
aaa
pop
dec
xor
mov
lret
sbb
sub
push
jl
lds
arpl
insl
jmp
aad
mov
call
and
daa
cmpsl
subb
aad
test
aas
sub
xorl
pop
mov
loopne
mov
add
xchg
jl
push
inc
push
sub
sub
add
inc
xor
in
push
stos
jecxz
pop
loope
mov
jo
movsb
jl
xchg
push
mov
call
fisubs
popa
test
cmpsl
sar
cmp
mov
jns
and
pop
adcb
or
jge
in
push
and
shll
andps
mov
repnz
add
sbb
mov
cwtl
sti
jecxz
push
jl
push
lds
or
ljmp
leave
pop
dec
xor
outsl
jnp
fwait
icebp
and
in
stc
loope
test
and
jmp
push
jp
or
imul
xor
into
mov
xlat
inc
sub
and
enter
xchg
out
add
fadd
dec
ffree
add
xor
inc
jno
and
popf
push
iret
adc
inc
or
mov
pusha
dec
or
or
jns
aaa
data16
or
jp
xor
in
insl
stos
adc
mov
inc
imul
pushf
test
lcall
dec
pop
jg
into
pop
pop
and
push
jbe
mov
pop
dec
and
cmp
add
mov
inc
or
sub
add
ss
add
into
das
jp
cmp
mov
sbb
daa
xorb
cmpsb
and
dec
sbb
sarl
int3
pusha
jae
pop
cmpsl
sahf
fsubrs
data16
xchg
and
add
and
pop
adc
sbb
and
rcr
call
pop
loope
scas
fildl
and
push
jns
add
test
push
out
adcl
xor
ret
shlb
pop
inc
jl
bound
out
imul
xchg
pop
mov
dec
or
pop
and
aas
or
pop
add
mov
mov
shrb
sub
daa
jle
jmp
scas
mov
std
sbb
daa
push
out
and
hlt
mov
fwait
jnp
cmp
in
add
xor
leave
xor
mov
jp
test
aam
in
mov
cmp
movl
into
outsb
and
mull
xlat
mov
or
and
inc
inc
aam
fwait
pop
dec
jb
subb
das
arpl
stos
mov
and
hlt
add
dec
addr16
fcmovbe
in
lods
out
je
add
jl
ficoms
mov
in
and
push
gs
and
pusha
jg
mov
xchg
cmp
push
mov
jmp
adc
lret
imul
pop
jge
stos
pusha
movsb
arpl
or
inc
pop
int3
add
jo
push
sub
enter
inc
xchg
fs
xlat
inc
fistl
and
dec
jecxz
lods
loop
xchg
pop
cli
mov
lret
scas
sub
push
cmp
and
adc
stos
pushf
and
sbb
and
push
inc
mov
sbbl
pop
jbe
enter
pop
les
and
pop
xorl
and
inc
pusha
popa
es
cld
aas
leave
mov
inc
mov
stos
fsubs
push
sbb
push
xor
push
jae
scas
jns
sub
flds
cmp
mov
mov
dec
andl
test
push
mov
gs
cmp
icebp
sbb
and
and
cltd
or
inc
and
fbstp
hlt
xchg
aas
repnz
test
xor
dec
cmpsb
inc
scas
mov
and
jae
jp
push
push
pop
xor
jg
and
aad
dec
push
loop
ds
sbb
dec
lds
mov
or
xchg
jp
mov
scas
pop
ljmp
mov
into
js
sub
cmp
pop
jecxz
xchg
xchg
and
push
inc
pop
xchg
and
mov
jb
jns
outsl
add
inc
test
adc
loopne
inc
and
mov
xchg
push
dec
xchg
jne
add
fiadds
int
add
mov
or
and
pop
inc
inc
xchg
std
and
loopne
dec
je
xchg
loopne
push
and
jno
lea
sub
fmuls
popa
shr
cmc
aas
inc
xor
and
lcall
adc
mov
ret
and
pushf
xchg
rolb
testb
pop
lock
mov
or
and
adc
inc
addl
push
repz
jae
and
mull
mov
mov
cmpsl
test
mov
mov
sbb
mov
ret
dec
out
lret
adc
outsb
movsb
enter
shrl
push
mov
ret
repz
imul
mov
pop
shlb
fwait
fs
arpl
popa
leave
cltd
in
setnp
xor
lcall
mov
xchg
xor
daa
xchg
and
inc
mov
adc
loope
dec
dec
mov
xchg
das
xor
and
stos
lods
fdiv
pop
insb
lcall
fnsave
jb
popa
and
mov
mov
sahf
int3
ret
loopne
das
incl
ret
push
jge
dec
arpl
ret
adc
insb
xor
cltd
ss
pushf
popa
inc
cmpsl
mov
js
mov
pop
idiv
in
fwait
out
and
fstps
sti
lods
pop
cmp
jg
cmpsb
test
mov
pop
mov
cmp
mov
mov
std
gs
ds
sbb
adc
jno
pop
adc
lahf
cmpsb
popa
lea
shrl
sub
shll
mov
sbb
dec
fildll
jno
repz
pop
and
fsubl
mov
cmp
push
mov
ss
inc
cmp
jmp
mov
icebp
add
and
mov
mov
in
push
in
popfw
cltd
adc
enter
cmp
jo
dec
pop
imul
sub
ficompl
and
mov
xchg
and
cmp
and
mov
push
cmp
sub
mov
mov
fistl
and
into
loope
xor
ja
shll
mov
dec
dec
in
mov
xor
mov
and
loop
and
subb
pop
cmp
mov
int
xchg
dec
pop
and
iret
xchg
movsl
shrl
stc
and
stos
aas
sub
sarb
movsl
sbb
cmpb
fimuls
lds
xor
cli
nop
scas
mov
popf
ret
out
xchg
pusha
cmp
xor
fucom
int
jns
jl
and
cmp
ret
and
jno
flds
lahf
fsubs
loope
pop
loopne
xor
dec
and
xchg
cs
and
pop
mov
and
enter
dec
jbe
mov
arpl
xchg
aam
xor
pop
and
add
out
stc
daa
movsb
mov
xchg
xchg
rorl
movsl
std
ret
mov
out
cwtl
push
and
icebp
add
adc
mov
and
jbe
jae
sarl
cmc
mov
fbstp
es
and
mov
pop
cmp
cmp
inc
lods
pop
mov
pop
mov
pop
scas
shlb
jno
or
hlt
sbb
mov
popa
lcall
pop
js
ja
and
mov
jbe
fs
or
int3
fbstp
insl
das
push
cmp
add
scas
inc
and
and
mov
and
bound
lds
mov
lret
adc
in
mov
or
push
or
xorl
adc
jbe
in
lret
repnz
pop
test
sub
and
cmp
lea
pop
por
and
xor
xor
and
ljmp
and
inc
mov
push
inc
inc
pop
arpl
push
jle
popa
xchg
popf
or
xlat
or
es
jmp
and
jno
add
xor
dec
and
mov
and
loop
fld
mov
mov
mov
pop
cmpsl
dec
inc
cli
mov
pop
pop
xchg
pusha
add
cmp
mov
inc
jb
fldcw
pushf
outsl
sarb
dec
cmp
mov
mov
nop
aas
pop
popa
shl
test
sub
mov
ret
outsl
outsb
shll
jns
xor
mov
inc
andl
popa
shl
shll
mov
cld
lds
xor
cwtl
cmp
pop
and
sbb
add
mov
dec
and
and
xchg
les
and
leave
and
lret
fisubl
cli
adc
mov
jns
fbld
cwtl
fwait
push
mov
cmp
adc
sbb
and
outsb
aad
ljmp
mov
popf
mov
or
nop
sbb
push
inc
test
or
aas
pop
and
sub
std
xchg
jecxz
test
negl
push
insl
paddb
sbb
and
inc
push
add
jae
ljmp
call
mov
sbb
and
stos
data16
cmp
cmp
adcl
or
sbb
dec
mov
gs
in
xor
pop
mov
xor
inc
dec
push
mov
jae
xor
je
sbb
movsb
lcall
adc
mov
and
outsl
andl
dec
ds
loop
pusha
testb
mov
shlb
mov
mov
push
shll
aas
mov
sub
xchg
jbe
dec
push
xor
movsb
call
lock
stos
add
jno
cmp
push
jbe
arpl
mov
stc
ficoml
stos
cwtl
and
ds
popa
je
or
and
and
scas
sti
jle
loop
sub
pop
pop
pop
dec
jl
aas
data16
mov
adc
and
push
mov
add
cmpsl
and
pushf
inc
lea
call
add
fucom
mov
stos
insl
dec
xchg
and
cmp
stos
mov
and
push
filds
je
loop
shl
xor
dec
and
add
rcl
mov
jne
fisttps
lock
and
iret
push
and
sub
fs
orl
addr16
in
and
push
xor
lret
sbb
fsts
lret
mov
sbb
daa
lahf
loope
int3
pop
leave
and
add
into
add
jbe
aas
mov
daa
gs
ss
adc
sub
pop
cmpsl
and
jne
push
shl
and
mov
mov
dec
imul
dec
xchg
and
out
push
movb
insb
adc
mov
lcall
dec
imul
es
and
sti
nop
fwait
mov
lcall
notb
sub
je
cmp
jbe
push
pop
fnstenv
xchg
xchg
xor
lcall
sub
aaa
jns
rcll
add
outsb
dec
and
cmp
push
jb
and
xor
test
shlb
fdiv
cmpl
inc
loopne
into
in
sarb
fucomp
stos
cmc
mov
and
shll
mov
adc
ficomps
or
sub
mov
imul
inc
inc
and
lcall
sub
sub
and
mov
cmc
and
jno
add
cmpsb
inc
push
push
mov
insl
pusha
sbb
and
lcall
pop
mov
jnp
js
mov
and
mov
xchg
out
enter
adc
ja
and
aaa
xor
pop
dec
scas
pop
inc
sahf
loopne
xchg
loope
and
mov
sbb
or
and
pop
fucomp
clc
sti
cmp
sbb
push
shll
movsb
xchg
scas
adc
dec
gs
jmp
cmp
mov
cwtl
sbbl
inc
loop
pop
xchg
dec
adc
sbbb
mov
and
sbb
int3
mov
sbb
dec
inc
add
mov
pop
loop
add
jno
push
mov
loope
aad
xchg
cwtl
fwait
and
sahf
adc
cld
cmp
xor
shlb
out
lret
push
sbb
fcmovu
and
jmp
mov
imul
xchg
inc
push
push
fimull
js
jge
sbb
int
and
jg
mov
push
mov
idivl
cmp
mov
and
das
std
inc
ret
imul
xor
adc
and
jmp
inc
and
or
xchg
fistl
les
fisubs
jecxz
xchg
xor
fs
mov
xor
arpl
and
inc
cmp
fadds
sub
mov
pop
mov
in
xchg
xchg
cmpsb
inc
jno
lea
out
dec
aad
and
lods
mov
and
inc
lods
sbb
lcall
shll
add
inc
subb
and
sbb
iret
sub
and
jo
push
cwtl
and
jno
push
mov
popf
pop
mov
inc
lfs
xor
ljmp
cmpsb
adc
jo
aad
cmp
sbb
lcall
repz
sbb
xor
cmp
cltd
lods
in
xchg
add
xor
shlb
xor
movsb
jl
or
shll
aad
js
jnp
roll
popa
cmp
aad
pusha
shll
sbb
jae,pn
test
lcall
xor
mov
inc
xor
dec
dec
mov
fdivs
lds
mov
xor
mov
mov
sub
xchg
jne
cmp
in
sbb
xchg
pop
mov
out
and
or
arpl
nop
xchg
mov
xchg
push
repnz
scas
mov
jo
xor
jne
xchg
sbb
aas
sti
hlt
ljmp
popa
fwait
imul
bound
pop
in
lahf
vsqrtpd
out
jbe
notb
imul
xchg
rcll
sub
or
mov
popf
test
xor
push
movsl
and
add
push
or
aas
jbe
push
xor
fsts
ljmp
mov
jmp
and
push
out
in
jbe
cwtl
cmp
push
and
xchg
in
inc
and
and
pavgw
jp
outsb
insb
daa
mov
and
jae
push
in
dec
loop
mov
pminsw
pop
mov
cmp
xchg
sub
mov
and
mov
mov
addl
icebp
out
xchg
shrl
and
outsb
insl
push
or
add
clc
pop
lcall
scas
in
orl
mov
rcl
mov
dec
and
add
xor
cs
adc
jns
jbe
sub
scas
iret
outsl
jge
sahf
and
pop
inc
ret
jne
mov
repnz
jne
push
add
xor
or
outsl
popa
add
je
in
pop
movsb
fstpt
cmp
lret
scas
lds
add
sub
and
cmp
or
cmpsb
push
jge
mov
enter
rorl
sbb
sbb
pop
mov
es
dec
mov
mov
cmp
jno
fsubs
mov
cmpsb
sub
and
daa
sub
lods
xchg
push
dec
mov
push
sbb
mov
mov
gs
xor
cmp
sbb
cmp
iret
inc
dec
mov
and
fmuls
sbb
push
mov
sub
std
cmp
xchg
aaa
mov
push
sahf
or
popa
sub
stc
mov
xor
mov
insb
pusha
jl
jno
add
push
push
mov
dec
and
loope
add
lcall
and
mov
insb
lahf
xor
dec
fwait
add
inc
mov
and
dec
mov
and
mov
and
jne
mov
out
jl
push
and
dec
push
loopne
adc
jge
and
sarb
adc
mov
mov
shlb
repnz
and
pop
xchg
scas
mov
mov
dec
stc
fdivl
and
dec
scas
and
test
mov
and
aad
mov
ror
lahf
fcoms
push
mov
add
test
push
scas
push
push
inc
mov
mov
inc
jns
les
into
decb
and
add
bnd
cmpsb
loopne
jne
mov
insb
test
add
or
add
jge
ret
and
insb
mov
dec
sbbb
test
xchg
dec
dec
cltd
and
fcmovne
mov
dec
xor
mov
ss
test
scas
fs
mov
movsb
mov
xchg
outsb
push
jle
cld
and
fldl
test
dec
lods
fs
mov
and
adc
inc
pop
jmp
shlb
xchg
sub
jmp
in
mov
stos
aam
adc
push
push
or
push
in
jnp
iret
call
rorl
mov
out
fstpt
clc
push
stc
jbe
jo
and
cltd
in
int3
cmp
sub
push
dec
adc
loop
imul
xor
repz
sub
push
sub
mov
push
xchg
jnp
and
lret
loope
in
imul
xchg
test
fstpl
and
mov
and
lahf
add
out
cwtl
lock
out
shll
xchg
je
and
stos
or
adc
stos
cmp
mov
cmc
add
test
and
push
es
dec
or
mov
mov
loope
push
mov
movsb
dec
jns
xlat
pop
xor
in
and
sub
das
mov
les
push
push
scas
mov
enter
outsb
aam
jne
pop
and
iret
movl
cmp
sub
jae
data16
cld
rcll
xor
stos
jg
in
and
jge
and
data16
sti
pop
scas
iret
mov
dec
adc
and
inc
and
xchg
loope
leave
rol
and
dec
or
pusha
sub
scas
cmpsb
xor
insb
push
and
cmp
push
push
aad
jmp
push
mov
mov
outsl
hlt
inc
test
and
fdivs
cmp
sub
cmpsb
pop
mov
cmp
jno
jae
inc
je
jmp
dec
loope
sub
fwait
pop
push
jl
mov
xchg
outsl
and
in
mov
xor
add
lock
adc
imul
xor
cmp
cmp
out
jp
cmpsl
call
adc
and
inc
dec
fbstp
loope
jge
cltd
fsubrs
gs
loope
andb
pop
and
dec
stos
cli
movsl
lcall
cld
cmpsl
das
xchg
add
das
out
movb
pop
rorb
fists
and
sarl
cmp
fstpt
out
sbb
jo
sub
mov
or
das
ljmp
jle
or
sub
mov
mov
subl
jg
add
or
adc
jne
dec
iret
mov
popf
lahf
add
cmp
push
adc
rcl
and
in
xchg
push
push
jns
cmp
call
gs
ret
jg
mov
add
jmp
add
outsb
les
mov
aad
adc
mov
push
das
subl
and
mov
and
xchg
sub
add
cmp
lret
dec
push
xchg
cld
pop
mov
sub
daa
or
sbb
hlt
push
sti
sbb
adc
xchg
add
dec
in
dec
call
mov
push
mov
outsl
sub
mov
mov
and
int3
add
cmp
and
mov
and
prefetch
add
sub
fildl
leave
je
pop
add
test
test
sbb
idivb
dec
lret
jle
cld
and
iret
pop
sahf
int
fldl
sub
xchg
pop
xor
test
mov
cmp
jns
cmp
xchg
xchg
lock
ds
or
or
outsb
mov
dec
sbb
pop
das
pop
sbb
and
and
aam
inc
test
sbb
popa
sub
nop
out
cmp
pop
orl
mov
in
cmpsl
nop
int
call
cmp
dec
lock
jmp
insl
negl
mov
mov
add
mov
push
xor
cltd
cmp
sahf
push
and
mov
push
and
add
loope
out
sub
pop
enter
insl
fcomps
mov
adc
and
push
mov
ficompl
mov
gs
aaa
fwait
or
in
and
or
xchg
ljmp
sub
xor
jnp
and
sub
jns
loop
and
fmul
leave
and
cltd
pop
insl
jecxz
inc
push
icebp
push
movsl
pop
or
cmc
cmp
sub
push
mov
in
imul
xchg
and
test
push
cli
inc
pushf
shlb
ja
pop
mov
xchg
lret
inc
xchg
popa
mov
bound
and
mov
inc
out
mov
fsubl
dec
pop
out
dec
sti
aaa
ja
dec
cld
nop
repnz
push
mov
cmp
sbb
and
call
jae
inc
and
jp
stc
fldcw
xchg
bound
cmc
bound
sti
and
mov
push
xor
fwait
pop
and
mov
outsl
mov
cmpsl
inc
orl
fs
stc
int
sub
jl
push
mov
loopne
jns
movsb
imul
loope
mov
add
sahf
xchg
and
cmp
adc
add
add
sub
sub
and
daa
pop
popf
test
movsb
rorb
cmc
inc
fistl
xor
ret
insl
fcoml
pushf
in
movsl
adc
int3
or
jae
xor
dec
dec
aaa
ja
and
pushf
cltd
std
mov
mov
hlt
mov
jecxz
inc
rcrb
mov
pop
and
push
jl
cmpsb
or
in
loope
lret
xor
mov
test
outsb
enter
lcall
hlt
cmp
pop
ljmp
and
dec
cltd
jge
add
stos
daa
pop
inc
fimuls
ljmp
fld
xor
adc
pop
daa
aaa
insl
add
xorb
xor
outsb
pop
push
mov
jg
lea
mov
adc
add
mov
jge
cmp
adc
add
xchg
xchg
inc
loopne
cmp
mov
stc
push
sbb
mov
outsl
popf
inc
dec
imul
movaps
incl
cmc
test
mov
pusha
adc
imul
mov
sbb
dec
and
shlb
xchg
jmp
mov
movsb
mov
cli
test
cmpsl
dec
and
ficoml
loopne
push
xchg
sub
rcrb
mov
stos
jns
ljmp
test
roll
sub
jecxz
imul
pop
jmp
jge
xchg
and
push
lret
mov
push
movsl
mov
xor
and
cs
xchg
loopne
mov
cmpsl
pop
sbb
sub
add
mov
push
clc
test
xor
push
mov
mov
mov
cmpsl
and
iret
arpl
fistpl
loop
push
pop
std
ret
repz
pop
sarl
pop
lahf
and
xchg
jecxz
and
sbb
xchg
and
xchg
jnp
jae
mov
dec
loopnew
lds
pop
test
push
dec
xor
sbb
mov
out
int
sbb
sub
repnz
pusha
push
inc
and
addr16
int3
cltd
clc
dec
inc
hlt
and
inc
and
dec
xchg
lahf
cmp
call
bound
and
dec
fistps
and
mov
dec
or
out
pusha
push
lods
pusha
xor
jnp
iret
sbbl
sbb
mov
insl
hlt
cmp
add
inc
and
cld
test
and
js
jg
fdivrp
and
pop
mov
and
jle
ljmp
add
xor
shlb
or
mov
test
cltd
out
mov
jl
or
nop
into
pop
pop
daa
shll
dec
stos
mov
or
outsl
rcrb
pop
xor
and
aas
pop
or
mov
cltd
jg
cltd
mov
cmp
inc
sarb
cmp
pop
ds
push
mov
scas
iret
dec
pushf
push
and
jge
outsb
and
jecxz
mov
mov
rolb
movsb
cs
inc
jne
sub
dec
popa
sbb
jae
jb
or
adcl
jo
dec
pushf
stc
mov
cltd
jb
sbb
movsb
bound
ja
ljmp
inc
and
imul
adc
or
fsubrl
mov
lahf
push
xchg
pop
jno
mov
mov
lret
mov
pop
sub
jo
xor
in
sbb
adc
cmpl
ljmp
xor
ja
add
and
sti
mov
sarb
push
dec
xchg
push
and
pop
add
mov
xchg
or
or
fldl
lods
pop
mov
out
stc
jg
je
ficompl
loopne
fnstsw
outsb
mov
add
stc
dec
push
subl
cli
js
daa
xchg
xchg
test
xor
mov
fs
xor
inc
dec
out
ficomps
mov
ret
xchg
movsl
test
loope
rcl
das
test
cmp
orl
pop
das
shrb
and
dec
out
lcall
mov
divl
mov
mov
or
cmc
sbb
xchg
cmc
sbb
lods
aas
ret
push
sub
add
sub
xchg
sbb
clc
jns
add
fld
and
sub
addr16
iret
movd
or
aaa
add
movsb
cmp
sbb
ja
jno
add
rcrb
and
lahf
lcall
jns
inc
push
inc
mov
repnz
cmp
and
test
xor
pop
and
lods
mov
and
jbe
and
mov
jmp
jp
mov
loopne
cmp
nop
mov
mov
test
push
xchg
sub
add
int3
arpl
lods
mov
repnz
jbe
mov
inc
pop
sbb
scas
xor
cmp
pop
jl
push
out
lea
adc
inc
dec
inc
lret
push
andb
mov
push
xchg
scas
xor
outsb
jbe
cmp
pusha
mov
inc
mov
ss
push
les
loope
push
mov
es
stc
imul
jae
xor
lcall
ljmp
es
subb
add
xor
adc
fidivl
or
pop
xchg
and
jns
frstor
sbb
mov
mov
add
jmp
mov
in
mov
ds
and
lock
fistps
cwtl
sbb
jp
and
aam
dec
xchg
lock
inc
cli
push
inc
push
xchg
add
stos
xor
xchg
dec
and
rorl
and
ljmp
mov
lods
and
cmp
xchg
push
and
add
inc
shll
pop
hlt
lock
and
stos
sbb
aas
pop
inc
mov
xchg
fisttpll
scas
in
or
fldenv
ret
addr16
push
sub
and
testl
add
and
cmpsb
mov
pop
int
xchg
mov
mov
pop
lods
push
notl
aas
jnp
xor
mov
bnd
mov
mov
lcall
xor
mov
repnz
sbb
or
and
xor
push
jle
std
cmp
mov
in
daa
imul
add
and
and
cli
mov
and
cmp
shlb
push
int
mov
and
insl
aam
xor
pop
fisttps
and
sbb
xchg
dec
lds
and
out
es
ret
jbe
lds
xchg
fdiv
cmpsb
xor
cmp
lahf
sar
mov
and
scas
add
cmpsb
pop
pop
and
or
push
movsb
dec
shll
sbb
and
in
shll
mov
pop
pop
add
cli
or
imul
jge
and
xchg
sub
shr
stos
daa
mov
aam
sbb
mov
ds
xor
fbld
std
out
shl
jne
jge
and
aas
and
and
dec
les
jb
mov
adc
mov
xchg
mull
pop
pop
pop
popf
dec
lock
jns
push
scas
add
ret
imul
and
xor
jecxz
mov
sbb
frstor
les
mov
out
lret
push
mov
or
mov
leave
dec
imul
pop
int3
stc
rcrl
xchg
les
mov
inc
popa
and
sub
jecxz
or
cmpsb
sbb
adc
ljmp
inc
inc
add
gs
sbb
sbb
jmp
mov
push
fists
shlb
test
sbb
mov
pop
mov
or
mov
test
inc
jns
jns
and
popa
sbb
out
stos
and
sti
jl
jns
and
in
and
pslld
xchg
shlb
xchg
mov
and
sub
shrl
out
in
sub
addl
xchg
repnz
shrl
push
cltd
sbb
pop
dec
mov
cmp
inc
hlt
mov
push
out
adc
add
and
cmp
and
jg
xor
dec
xchg
loopne
cltd
cmp
das
ljmp
cmpsb
roll
and
stc
lcall
and
jae
xor
and
insl
and
or
das
cmp
and
add
inc
push
inc
cld
pop
ljmp
adc
ret
ja
fwait
inc
cmp
out
aas
icebp
mov
xchg
jl
push
mov
and
xchg
movsb
dec
clc
in
pop
sub
std
mov
outsb
bound
adc
pop
in
lods
rcrb
cld
and
mov
lcall
movsb
lret
xchg
addr16
fists
cmp
xor
push
push
lcall
pop
insl
and
je
cmpsl
sub
xchg
push
and
add
adc
arpl
inc
and
nop
cmp
push
mov
sub
out
jle
mov
and
mov
andl
mov
jg
jo
shll
sub
je
test
xchg
mov
xchg
jno
pusha
ret
pushf
in
xchg
xor
mulb
dec
mov
mov
movb
dec
pop
mov
push
jne
and
adc
xor
mov
mov
adc
mov
sub
pop
push
xchg
cltd
mov
adc
sub
out
cli
mov
imul
inc
adc
in
fcomi
and
mov
orl
and
jns
and
test
lea
jnp
jecxz
pop
daa
jne
filds
xchg
mov
push
push
loopne
jg
and
imul
je
inc
out
add
sub
mov
lahf
test
pop
cmp
mov
repz
mov
dec
fcmovnbe
repnz
ss
aas
cld
mov
loope
mov
mov
mov
daa
pushf
scas
inc
mov
movsl
arpl
pop
xor
sbb
bnd
faddl
inc
ficoml
jo
cmp
xor
mov
xchg
cmp
cmpsl
sarb
out
mov
jbe
lcall
fbld
in
mov
sbb
mov
fidivrs
xor
sbb
xchg
pop
cmp
add
push
popa
fdivr
inc
and
sub
pop
loop
pop
mov
pop
mov
les
movsl
popf
sub
lcall
adc
andb
push
gs
or
mov
mov
loope
stc
lea
sahf
and
push
arpl
loop
jo
js
sub
xchg
push
scas
mov
aad
or
iret
movsl
adcb
in
lret
popa
fildl
jae
pop
mov
stos
mov
mov
pop
mov
fstpt
and
leave
sub
mov
ret
push
lock
mov
sub
jge
and
jg
xlat
lods
into
cli
aad
inc
cmc
mov
or
cltd
dec
lahf
and
push
mov
sbb
lcall
popf
sahf
movsb
call
add
movsl
push
movsb
xchg
sub
out
enter
incb
sbb
and
inc
xchg
stos
test
pop
add
out
xor
and
mov
jle
js
pusha
mov
push
lods
cmp
sub
and
es
xchg
jnp
sarb
aaa
mov
test
inc
popf
sub
dec
jno
and
les
ret
xchg
ror
fldt
push
inc
sub
lock
out
outsb
xchg
inc
xchg
test
xor
xchg
sub
and
push
fs
stos
lcall
aam
out
and
sub
dec
out
xchg
shlb
lds
jae
iret
jmp
pushf
arpl
addl
push
and
je
cmpsb
idivl
les
icebp
adc
add
jecxz
push
rcll
dec
mov
mov
jle
mov
and
test
fs
and
fisttps
dec
lods
sbb
inc
push
out
inc
adcl
cmpsb
fistpl
sub
push
jle
adc
push
je
jmp
icebp
xchg
jae
mov
pusha
pop
and
push
push
scas
mov
mul
and
xor
movsb
and
xor
add
dec
lock
cmp
test
or
imul
pop
fidivrl
test
cmp
test
gs
mov
and
int
lret
mov
movsb
push
mov
push
cmpsb
jns
and
inc
pop
ljmp
cmpsl
pop
nop
mov
mov
bound
loop
jmp
ss
pop
mov
jmp
jnp
pop
in
and
inc
mov
loopne
adc
adc
push
addr16
fldenv
gs
fstl
test
outsl
mov
push
jno
adc
sbbl
mov
rcrl
aas
mov
mov
das
sbb
shlb
orl
sub
fildll
push
out
iret
push
inc
jg
scas
sarb
xor
sub
and
inc
cmc
cli
or
aad
loope
dec
xor
push
bound
jae
in
sahf
jge
dec
fisubl
int
stos
aam
pop
adc
movsb
lret
mov
movsl
inc
inc
mov
cltd
push
lods
std
push
in
sub
inc
aad
sbbb
mov
cmpsb
bound
adc
push
movb
jb
sahf
mov
ds
dec
push
jge
insl
imul
push
mov
repz
enter
arpl
sti
jl
mov
dec
sub
aas
xchg
pop
xchg
lods
stc
and
pop
into
add
xor
and
pop
xchg
jbe
or
and
sub
mov
mov
cwtl
sti
inc
or
jp
mov
sbb
jl
xor
add
dec
lods
popa
mov
push
mov
sbb
cmpsb
sbb
inc
and
or
lods
add
test
push
stos
hlt
mov
lret
cmp
pop
and
xlat
addl
cmp
push
mov
shll
arpl
and
mov
lcall
sub
lahf
lods
sub
outsl
xchg
sbb
and
pop
add
pop
push
mov
jmp
push
or
insb
ja
mov
aad
or
xchg
and
sbbb
daa
dec
out
incb
dec
in
mov
repz
rclb
push
lret
xor
xchg
add
data16
and
xlat
pop
mov
das
inc
out
push
pop
adc
fnstcw
and
push
movsl
and
and
dec
lea
int
inc
sbb
jns
imul
sahf
pop
pop
push
and
and
outsl
sbb
dec
push
sahf
rcrb
inc
cmc
test
lahf
push
and
cmpb
or
xchg
pop
pop
pushf
lret
xchg
mov
adc
pop
pop
popa
clc
mov
mov
cli
jbe
and
mov
jge
mov
sbb
xchg
mov
loope
sbb
push
cmpsb
add
shll
test
je
dec
jb
mov
loop
jmp
pop
and
sbb
lock
out
mov
enter
repnz
into
mov
sbb
ficoms
jl
xchg
popa
sbb
std
mov
and
lcall
and
add
and
je
fildll
jl
push
aam
sub
or
divb
and
cmp
outsb
aas
mov
jno
jmp
shll
inc
inc
and
pushfw
lahf
xchg
pop
push
jae
aam
add
cmpsb
push
pushf
std
xor
mov
jle
and
mov
clc
sbbb
fcompl
sti
in
loope
push
mov
or
cltd
stos
mulb
mov
push
cmpsb
mov
mov
mov
adc
das
mov
movsl
cmpl
rorl
and
xor
ret
aas
ss
shll
add
adc
ds
das
push
movsl
mov
sub
fcoml
andb
in
in
into
pop
call
add
and
aaa
test
outsl
pushf
mov
popa
scas
int3
push
stc
inc
pushf
xor
mov
shll
lahf
dec
push
jo
sbb
cmp
lret
push
aaa
in
test
outsb
add
out
mov
pop
imul
ds
push
xchg
pushf
jp
out
mov
sub
jge
aaa
lret
pop
push
cmpsb
fisubrs
xchg
xchg
mov
popa
and
into
decb
dec
mov
fdivrl
xor
int
test
rclb
popa
and
push
mov
out
sbb
lret
in
iret
cmc
arpl
int
stos
and
outsb
dec
icebp
shrb
ds
shlb
cmc
hlt
push
lahf
or
and
mov
and
and
in
push
out
test
adc
mov
jp
mov
pop
pushf
cmpsb
and
cwtl
and
mov
dec
and
fsubrs
and
insb
add
and
lahf
mov
rcll
popa
sub
or
fldt
cmp
aam
dec
scas
and
mov
es
pop
pusha
mov
fpatan
mov
pop
movsb
mov
jae
sbb
mulb
sbb
jne
lea
xor
xchg
scas
rclb
ja
and
nop
ss
inc
cld
mov
push
rclb
testl
inc
pop
mov
shll
das
jb
mov
cwtl
out
push
sub
and
orb
xor
and
mov
std
cmpl
ret
repz
adc
inc
mov
stos
sbb
push
xor
jge
imul
loopne
or
xchg
sahf
xor
mov
fiadds
cmp
aaa
je
jle
imul
jno
cltd
adc
push
add
xlat
jmp
and
ljmp
and
dec
int3
inc
and
cmp
stc
outsb
and
ds
mov
jg
in
jne
adc
and
test
inc
adc
pinsrw
sbb
sbb
into
push
ret
inc
mov
push
add
out
and
mov
jecxz
xor
adcl
adc
cmp
cwtl
mov
push
mov
sbb
gs
mov
lcall
pop
cmc
enter
xor
push
movsb
sarb
or
mov
movsb
jmp
mov
inc
gs
add
mov
lret
xchg
inc
in
sti
and
stos
jne
xchg
xchg
mov
fwait
and
mov
hlt
lea
popa
movsb
lods
dec
fwait
adc
rclb
push
adc
cmc
loopne
and
out
inc
pop
loop
push
lods
or
xor
lcall
out
xchg
xlat
sub
mov
jecxz
push
scas
and
nop
xchg
push
repz
cltd
fisubs
mov
pop
test
out
xlat
add
scas
push
pop
xchg
pop
and
sbb
mov
arpl
sub
ljmp
stos
mov
pop
and
lret
adc
sub
iret
pop
andb
xor
ret
imul
outsb
lock
out
imul
push
int3
xchg
sub
lcall
mov
pusha
sub
pop
je
jge
xchg
pop
and
test
and
ja
aas
mov
pusha
mov
jle
xchg
arpl
arpl
movsb
sahf
out
lock
subl
pop
and
out
int3
add
dec
imul
and
mov
lret
cwtl
and
mov
shlb
mov
or
xlat
push
lret
mov
fwait
out
inc
mov
dec
cmp
dec
xor
mov
xchg
dec
xchg
adc
ret
sbb
cmpl
or
and
mov
outsl
and
push
add
mov
jp
mov
pop
hlt
scas
bound
cmp
and
mov
cltd
mov
inc
mov
pop
cmp
scas
lods
loopne
and
arpl
fwait
nop
mov
or
and
mov
mov
test
push
hlt
aas
xor
jle
loop
scas
add
xchg
outsb
sbb
jg
pop
movsl
cmp
inc
and
popa
push
mov
popf
cmp
gs
cmp
int
andl
pop
pop
and
or
out
leave
cmc
sub
push
mov
imul
mov
je
fsubrl
outsl
xor
clc
mov
dec
ds
push
and
enter
aad
sub
mov
push
test
add
sarl
xchg
mov
push
ds
jns
mov
dec
inc
adc
or
ljmp
nop
into
dec
cmp
pop
popl
mov
xchg
or
mov
call
pcmpgtw
sbb
cmp
test
iret
scas
dec
fidivs
mov
subb
mov
lds
mov
xorb
dec
xor
sub
fs
sbb
jmp
arpl
js
xchg
cltd
xchg
gs
or
popa
dec
jp
loop
adc
or
push
and
add
and
pop
inc
xchg
lock
inc
and
xor
test
jl
idiv
mov
xchg
mov
mov
xor
sarl
dec
mov
lret
fisubs
aas
sub
mov
pop
mov
loope
repnz
pop
das
sbb
push
es
xor
cmpsl
cwtl
fucom
lods
test
mov
and
mov
fwait
push
movsl
mov
in
dec
jecxz
xchg
jnp
int3
hlt
cli
and
push
mov
dec
pop
incb
and
lods
push
lock
lea
mov
mov
out
test
shll
dec
inc
add
pop
sbb
xchg
icebp
mov
sarb
and
movhps
adc
fdivrl
ret
pop
mov
and
add
cmpsb
ja
add
lds
xchg
xchg
adc
jge
int3
leave
iret
sarl
fisubrs
push
insb
popf
or
xor
dec
addb
pop
and
lcall
lods
sbb
mov
test
inc
insb
xor
mov
mov
push
inc
dec
lahf
mov
xlat
jns
stos
stc
movsb
ret
aam
jns
sbb
imul
cmp
icebp
add
mov
lock
popf
int3
or
cmp
xchg
in
add
cmp
inc
add
pop
lret
in
dec
cmp
xchg
fmuls
pop
lahf
mov
mov
xorl
add
repz
out
push
jl
mov
cwtl
and
jo
sbb
dec
test
inc
xor
insb
sbb
andl
int
or
out
mov
cltd
outsb
jns
bound
out
mov
lods
imul
imul
sti
rclb
fsubs
movsl
lret
mov
mov
sti
arpl
xor
popa
jp
mov
pop
and
fimull
and
add
test
jnp
pop
pop
ljmp
insl
pop
dec
aas
push
xchg
lahf
xchg
ljmp
bound
stos
jle
jo
rcrl
int
xor
shrb
cli
lahf
addr16
sarb
jno
or
and
ljmp
aad
and
push
repz
push
pop
xlat
jge
movsb
jl
jmp
push
and
int
sahf
loope
mov
dec
in
push
jg
pop
and
jnp
aam
xchg
adc
outsl
adc
cmp
ret
loope
adc
sub
push
or
ficompl
scas
in
subb
mov
imul
je
sbb
mov
nop
insl
jg
aas
mov
cltd
jns
leave
jecxz
push
mov
inc
roll
loop
scas
aam
test
lds
push
and
push
sbb
sbb
sbbl
and
push
mov
pop
imul
ret
push
adc
pushf
test
adc
les
adc
jb
vmovaps
push
popa
js
ret
pinsrw
lock
xor
and
xor
mov
fdivr
out
push
pop
adc
and
lock
lahf
cmpsb
pop
ficomps
dec
push
mov
add
xchg
leave
pop
push
js
adc
pop
insl
mov
test
loop
mov
shll
mov
sbb
push
jmp
and
rorb
negb
push
mov
cld
sti
inc
mov
test
insb
inc
popa
or
inc
adc
lahf
stc
mov
mulb
pusha
mov
pop
adc
fwait
lods
xor
dec
xor
iret
push
pop
in
lods
xchg
out
jno
inc
out
mov
mov
and
rcrl
fldl
cmp
lahf
aad
cmp
sti
add
mov
movsb
sbb
add
enter
addb
and
xor
cli
in
in
lret
dec
stos
sbb
cmp
sbb
mov
cltd
xchg
scas
and
xor
in
or
ret
into
dec
xchg
pop
cmpsb
fidivrs
xchg
jnp
insb
fst
pop
loope
test
int
and
jge
add
mov
movsb
popa
xchg
push
and
sub
in
js
aas
imul
lock
lock
hlt
and
movsb
leave
out
cmp
and
aas
jp
or
mov
out
lret
clc
cli
shlb
mov
in
test
ds
jmp
icebp
sti
jno
bound
add
and
pop
mov
and
mov
push
sub
or
and
idiv
aaa
mov
dec
cmc
jno
dec
inc
and
and
out
and
cmp
repz
bound
icebp
xor
inc
leave
std
scas
pop
addr16
cwtl
and
lahf
jne
mov
popa
or
pop
rorl
adc
outsb
lods
cmc
or
fmuls
adc
sub
sbb
cmpl
and
and
fsubl
daa
add
out
sub
or
insb
sub
push
dec
hlt
add
das
add
and
in
push
aaa
outsb
push
mov
aas
sbb
or
shrb
adc
and
and
outsl
mov
lea
and
or
cmp
jno
scas
into
pop
xchg
leave
das
mov
not
leave
sub
sbb
sub
in
and
int3
push
repz
inc
xchg
lret
int
and
popa
jbe
test
push
movsl
add
sarl
lcall
ret
outsl
xchg
sub
sbb
push
push
mov
fdivl
enter
lods
xchg
dec
and
xchg
mov
push
fsubrl
mov
notb
xchg
andb
or
push
cmp
mov
add
cmpsl
xchg
and
test
and
adc
mov
mov
orl
insl
cltd
mov
test
aas
and
aam
mov
and
inc
mov
dec
movsb
sub
mov
repnz
jns
and
mov
popa
xchg
jne
push
enter
xchg
and
insl
ljmp
mov
add
mov
pusha
addr16
push
cli
and
call
mov
pop
sub
mov
fists
int3
and
icebp
cmp
inc
mov
mov
and
inc
jg
aad
or
and
sti
clc
ds
lahf
nop
xlat
and
jne
cmp
xchg
xchg
js
dec
in
and
negl
dec
dec
iret
lock
xchg
jno
cltd
pop
cmc
das
mov
iret
not
add
test
cld
and
imul
popa
outsb
dec
jge
cmp
je
mov
add
inc
pushf
sahf
shll
push
insb
and
and
fwait
stc
and
sub
scas
and
rcrb
and
outsb
fs
cwtl
inc
in
scas
mov
sbb
imul
nop
dec
imul
cmp
testl
orb
jo
sti
mov
lret
aaa
cmpsl
inc
mov
mov
jns
popl
pop
and
movsb
xor
loopne
mov
xchg
cwtl
xor
mov
es
xor
xchg
stos
movsb
and
ret
clc
lret
xorl
divl
adc
cmp
dec
movsl
aaa
mov
imul
pushf
and
jnp
stos
push
scas
inc
sarl
and
shll
repz
icebp
mov
inc
and
mov
jnp
loopne
mov
sub
and
mov
xchg
mov
adc
loopne
and
or
push
test
in
sarb
mov
es
arpl
jle
inc
iret
mov
push
push
add
pop
shrl
and
sbb
inc
and
ret
movsl
push
mov
in
adc
push
dec
jnp
xchg
sti
dec
shlb
and
xchg
xor
sbb
mov
xchg
js
add
dec
dec
cmpl
and
mov
xchg
stc
jne
jb
and
xor
insb
mov
push
and
cmp
vcvtsi2ssl
mov
pop
sahf
and
loope
in
mov
pushl
pop
push
add
imul
inc
inc
sub
sbb
sub
jnp
dec
inc
sbb
xchg
in
jo
dec
cld
pop
or
inc
and
mov
and
pop
jmp
add
inc
fldt
test
pop
xor
sbb
add
out
inc
inc
sti
jge
xor
outsb
mov
and
add
lods
push
iret
test
xchg
cmpl
and
mov
dec
push
arpl
fs
mov
cmpsb
push
add
adc
sbb
push
add
push
scas
mov
test
lods
ret
lods
jle
lret
das
push
movsl
out
mov
das
xchg
idivb
aad
loopne
push
dec
sub
gs
ljmp
and
lret
and
xlat
ficoms
jmp
test
int3
or
add
jecxz
jns
mov
or
rcll
sub
pop
gs
xchg
cltd
and
cmp
and
pop
dec
loop
adc
mov
jmp
pushf
lods
cmp
stos
pop
mov
jo
popa
sub
xor
dec
loope
adc
pop
bound
mov
imul
jo
bound
add
dec
jg
in
inc
jge
dec
movsb
xchg
aas
add
cwtl
dec
loopne
lods
jae
sub
add
or
sbb
jbe
pop
sbb
sbb
imul
ret
inc
std
cmpsl
xchg
pop
pop
dec
fucomip
mov
stos
leave
mov
mov
push
mov
lcall
push
and
lahf
inc
fsubrs
lea
push
mov
call
cmp
push
loopne,pt
sub
ret
cld
lods
push
adc
pusha
push
and
aad
roll
out
call
lea
mov
inc
movsb
mov
clc
jp
and
ffree
cmpsb
and
dec
dec
xchg
lods
jmp
into
cmpsl
movhlps
movsb
orl
adc
xchg
xchg
push
mov
leave
sub
xchg
sub
add
push
pop
in
push
xchg
cmp
xor
and
jl
sbb
and
movsb
fstpt
mov
mov
mov
sti
frstor
xchg
jnp
xchg
and
int
popa
push
sub
jb
lcall
sbb
stos
dec
or
and
adc
push
ret
mov
jp
data16
out
and
add
and
gs
popf
test
lock
add
pop
enter
jo
xchg
scas
fiaddl
sbb
cltd
sbb
inc
sub
sub
arpl
and
fcmovb
into
adc
icebp
rclb
dec
je
dec
inc
jbe
iret
out
and
mov
test
js
and
sti
shll
sbb
ljmp
sbb
iret
mov
add
lods
mov
and
add
in
loope
cmp
push
out
andl
mov
inc
scas
push
xchg
jge
sahf
popa
iret
mov
lret
pop
les
jno
adc
mov
and
mov
mov
jge
stos
andl
dec
xor
iret
and
adc
xor
rorl
add
jmp
and
lods
jbe
and
in
lock
repz
mov
cld
es
mov
andb
insl
adc
pop
sbb
xchg
sbb
stc
daa
das
rcrl
int3
push
xor
push
and
xor
bound
adc
jmp
xchg
jbe
jae
and
cmp
xchg
daa
jg
adc
mov
mov
out
ret
cmp
lret
mov
inc
les
incl
jno
fwait
mov
mov
pop
sbb
pop
inc
and
sbb
js
push
dec
repz
cld
shrb
xchg
int
pushf
dec
in
rcrb
xlat
out
je
xor
sub
rcll
in
jae
aaa
push
cmp
fisubrl
cmp
movsb
push
mov
jne
push
and
rcr
das
in
sub
inc
and
cwtl
adc
das
push
mov
dec
push
orl
mov
and
cmp
ret
inc
and
push
jns
fisttps
out
sub
repz
subl
pop
or
push
pushl
lret
fnsave
ret
add
pop
and
cli
data16
fsubl
mov
xor
cmp
and
mov
add
int3
aad
and
imul
xchg
test
add
inc
or
inc
jge
loopne
int3
test
mov
and
mov
lods
outsl
xchg
stos
push
int3
ret
cltd
mov
cltd
movsb
jl
pop
mov
mov
arpl
das
push
dec
push
orl
mov
dec
clc
and
sub
jne
pop
ret
or
fstpt
aaa
bound
adc
mov
mov
jg
subb
movsl
ja
xchg
ds
and
mov
xchg
push
and
dec
xchg
and
xchg
nop
adc
test
pop
xor
insl
xor
push
or
push
sub
lahf
cld
popa
scas
in
insl
push
push
push
movsl
pushf
sti
fldenv
stos
add
pop
push
fcomps
mov
xchg
pop
subl
xor
xor
mov
popa
cmp
cwtl
lcall
jle
movsl
pop
jae
mov
xor
movsb
pop
mov
in
inc
lock
movsb
data16
popf
push
and
iret
leave
push
xchg
cmp
add
dec
jecxz
scas
mov
dec
sub
mov
loope
out
mov
clc
adc
bound
mov
or
scas
cmp
cmp
sub
mov
je
xchg
or
stc
cmp
jmp
imul
mov
pushf
jnp
xor
xchg
imul
adc
in
add
fucomip
pop
cmp
aas
sub
pushf
call
ret
sbb
in
aaa
in
icebp
nop
mull
mov
lds
mov
and
mov
aad
xor
xchg
mov
scas
out
jbe
adcl
sbb
int
cmp
cmp
mov
dec
jg
fbld
add
stc
pop
aaa
push
and
jae
and
xchg
mulb
roll
and
lret
xchg
jg
sbb
xor
jno
test
gs
and
popa
push
xchg
fucomi
xchg
movsb
lea
mov
mov
nop
cltd
dec
sbb
jge
and
addr16
and
fmull
mov
push
pusha
ds
shll
imul
enter
and
jne
fbld
pop
ficomps
sbb
addr16
mov
mov
cmp
cmp
fisttpll
in
lea
add
mov
cmp
repz
aaa
xchg
test
repnz
cmc
icebp
and
mov
xor
andb
fidivrs
dec
pop
popf
dec
jecxz
jmp
mov
shll
cmp
push
inc
movsb
pop
and
mov
xchg
test
sub
fwait
and
and
aam
pop
and
jb
xor
push
xchg
push
push
shrb
or
or
cld
xchg
push
ds
push
or
xor
in
pop
mov
fdivrs
mov
add
adc
std
pusha
jmp
mov
mov
mov
jl
jecxz
je
mov
stos
jle
filds
inc
jmp
imul
dec
and
dec
inc
sub
cltd
fcomps
das
mov
movb
rclb
leave
and
dec
cmp
sbb
sbb
push
add
and
cmc
and
push
pop
mov
and
mull
and
xor
dec
and
ss
and
pop
imul
in
sub
cltd
add
sub
std
mov
dec
hlt
and
aad
or
rcrl
loopne
add
and
jp
jle
sub
and
movl
and
rol
popa
leave
fdivs
and
inc
add
ret
and
ljmp
inc
xor
push
push
push
cmp
and
cmp
pushf
xchg
inc
and
xlat
ja
lahf
adc
cmc
cmpsb
xchg
scas
sub
xorb
and
mov
call
lock
call
fstpl
icebp
mov
sbb
and
xchg
push
mov
bound
test
mov
xchg
loope
enter
test
in
and
inc
jnp
sbb
and
jg
sbb
shll
popa
leave
jns
addr16
mov
cmp
repnz
gs
aam
and
push
and
pop
cmpsb
jo
fbstp
and
or
mov
dec
out
popa
xchg
jmp
shll
xor
and
fwait
add
jecxz
add
sbb
insb
inc
cwtl
and
cmp
shlb
movsb
mov
sub
mov
mov
xchg
popf
or
outsb
mov
inc
xchg
lds
add
leave
mov
movsl
dec
xchg
push
repnz
adc
test
dec
xor
mov
mov
jle
popa
inc
and
mov
pushf
sub
jb
sub
sbb
adcb
sbb
and
scas
inc
mov
jl
in
lock
inc
push
addb
js
xchg
lahf
mov
pushf
aas
pop
hlt
xchg
scas
or
dec
jle
pusha
in
mov
iret
dec
jb
jns
rcll
imul
cmp
mov
and
push
scas
je
jg
andl
mov
daa
inc
xor
inc
adc
loopne
dec
clc
sub
mov
xor
jg
xchg
out
shlb
aad
mov
push
xor
gs
nop
jns
fcompl
movsl
cmp
jo
dec
jmp
lea
jne
inc
sub
fbld
bnd
mulb
xor
adc
outsb
add
xlat
loope
mov
and
pop
sub
pop
xchg
and
jbe
flds
andl
xor
adc
and
mov
popf
dec
outsb
inc
xor
pop
int
and
xchg
addb
repz
mov
pop
cwtl
or
repnz
jb
adc
je
loope
aas
xchg
mov
dec
jns
and
fwait
dec
divb
shlb
inc
mov
loopne
mov
fdivl
movsb
or
and
inc
xor
fs
movsb
pusha
lea
lods
ja
and
scas
xchg
pop
xlat
add
stos
fs
cmpsb
decb
xchg
jns
mov
cltd
imul
mov
stos
negl
test
sub
fiadds
mov
mov
jne
shll
mov
in
and
jo
fldcw
sub
pop
or
das
popa
mov
add
xor
or
and
outsl
inc
mov
inc
jnp
mov
jae
push
jle
inc
int3
js
mov
lret
repnz
das
into
lods
and
subb
xchg
adc
les
mov
and
jge
test
ret
sub
call
lods
and
rcrb
push
popa
shll
pusha
and
or
fists
popa
enter
add
daa
and
or
xor
jns
popa
xor
xchg
and
mov
sbb
mov
rorb
add
mov
je
scas
and
adc
mov
fcmove
and
stos
cmp
push
ret
pop
es
fcoml
xor
stos
fldt
sub
push
mov
popa
push
sbb
jae
stos
repnz
inc
inc
push
frstor
lds
out
lock
push
sbb
out
cmp
sbbb
and
mov
mov
dec
aaa
mull
pop
push
cmc
mov
loopne
cmpsl
lea
push
pop
lahf
sub
cltd
sub
inc
adc
in
movsb
jae
stc
sub
cltd
aaa
cltd
mov
push
inc
push
adc
fcomp
xchg
mov
loope
mov
lret
ret
mov
pop
and
in
fisttpl
mov
adc
scas
ret
rcrl
inc
out
ret
adc
insb
add
imul
and
shlb
outsl
push
add
and
bound
xchg
xchg
cmp
and
jns
and
popa
lret
ljmp
stos
pushf
into
jno
movsb
out
aad
pop
mov
jl
test
dec
cmc
xor
pusha
push
jge
pop
inc
and
add
jmp
cmp
fwait
cmpsl
test
adc
insl
les
mov
or
dec
in
and
add
dec
and
xchg
xchg
pop
and
mov
scas
or
xchg
jmp
ret
movsb
daa
xchg
pushf
push
mov
push
mov
das
mulb
orb
xchg
stc
test
dec
icebp
vandnps
in
inc
outsl
cmp
mov
mov
mov
inc
sti
sbb
add
popa
dec
and
lods
clc
test
sub
enter
mov
dec
jecxz
dec
xchg
sub
mov
sahf
jb
xchg
fwait
xor
clc
gs
loop
bound
les
fcoms
and
ds
shlb
xchg
adc
out
jnp
and
movsb
cmpsb
es
enter
cmp
std
and
fsubr
pop
and
cltd
pop
and
xlat
roll
mov
or
lret
test
inc
jno
int
push
mov
xchg
push
add
mov
or
std
pop
test
mov
mov
in
jp
add
hlt
pop
mov
gs
inc
xchg
and
test
sbb
sbb
pop
scas
outsb
test
inc
adc
aas
pop
pop
xor
dec
or
jo
pop
sbbl
jl
push
and
mov
mov
lods
jle
inc
popa
je
xchg
negl
or
sbb
in
popa
xor
jne
popa
mov
cltd
cmp
add
push
adc
movsl
mov
and
int3
or
mov
or
call
mov
xchg
inc
gs
lret
adc
aam
push
lcall
and
jl
testb
xchg
in
sbb
int3
test
adc
rol
fwait
cmc
fsubs
adc
outsb
or
and
add
mov
pop
clts
mov
jp
push
lods
mov
movsb
shr
jb
xchg
xor
pop
mov
lcall
or
cmp
dec
daa
push
add
lcall
and
fsubs
scas
mov
dec
movsl
mov
fmull
fstps
add
mov
shrb
enter
adc
repnz
inc
cmpsl
mov
sahf
inc
jmp
pop
jg
test
test
inc
or
addr16
or
xor
pop
in
and
aam
sahf
gs
sbb
mov
dec
xchg
insb
and
faddp
aad
hlt
arpl
mov
jae
jno
inc
mull
sbb
popa
gs
andb
je
or
and
repz
ja
jns
xor
aas
xchg
jg
cs
call
stc
add
and
mov
push
out
cld
xchg
mov
push
mov
ret
cmpsb
adc
popf
lock
and
push
je
sahf
imul
mov
and
shlb
pop
das
scas
fbld
mov
or
dec
xchg
xchg
fsubs
loopne
movsb
cmp
cmpsl
outsb
and
test
inc
ljmp
rolb
and
sub
cwtl
shlb
push
dec
insl
cmpsl
aam
and
cmp
mov
aad
popa
push
fiadds
sbb
fmuls
mov
mov
inc
mov
lret
mov
mov
mov
jg
xor
cltd
inc
nop
mov
lods
sti
sbb
adc
lock
xchg
scas
and
inc
jl
popa
xchg
sub
adc
pop
lods
jns
and
pushf
pop
and
les
sub
adc
mov
dec
or
push
xchg
outsl
pop
mov
and
pop
xor
cld
or
jmp
test
cmpsb
push
negl
push
addr16
roll
pinsrw
loopne
adc
cltd
es
pop
cmp
movsb
je
negl
imul
mov
sub
sbb
jg
movsl
jle
xor
pop
test
out
icebp
and
popf
lock
mov
ds
sub
cltd
js
pop
or
jno
aam
mov
dec
push
and
adc
xchg
int3
mov
addr16
xor
movsb
or
jge
cmp
inc
les
xchg
cmp
shrl
ja
and
jecxz
mov
stos
or
sbb
push
dec
icebp
mov
lcall
mov
addr16
adc
cld
jl
fistpl
and
ficoms
fisubl
pop
test
xor
and
loope
jo
mov
mov
sub
cltd
and
dec
sar
push
test
icebp
sub
stc
popa
mov
sbb
and
fnstsw
dec
and
sbb
push
stc
lret
inc
and
scas
mov
inc
xchg
test
push
xchg
imul
cmc
xlat
stos
xchg
inc
sub
and
je
das
sbb
cmp
fwait
xchg
gs
sub
jmp
cmpsl
daa
mov
out
jne
lods
adc
or
scas
iret
or
push
pop
pusha
fadds
pop
jg
negb
loop
xchg
xchg
mov
push
cmc
push
mov
or
in
and
dec
lods
and
out
and
pop
pop
mov
jb
sub
int3
imul
clc
bnd
and
testl
or
aaa
lods
mov
xchg
test
pop
and
out
scas
dec
add
in
push
lock
fldcw
lea
xor
add
adc
out
mov
xchg
sbb
lret
cmp
roll
mov
stos
jae
test
in
add
test
lods
imul
jmp
push
push
and
mov
ret
in
fidivl
or
or
fildll
sarb
and
fcom
xor
in
imul
add
mov
and
movsb
pop
jl
adc
mov
ljmp
out
or
aam
repnz
jb
int
mov
xor
xchg
adcb
rcrb
and
pop
mov
dec
and
lods
sub
mov
dec
mov
mov
sarl
mov
xor
fwait
lcall
mov
mov
mov
and
jecxz
xchg
add
js
insl
xor
cmpsl
out
and
adc
sahf
mov
roll
adc
fadd
add
insl
push
jge
and
test
shll
lock
fwait
xor
sbb
movsb
lods
repnz
insl
cmpl
repz
push
and
cli
xchg
add
xchg
jmp
and
mov
sti
mov
mov
loop
cld
and
pop
add
xor
pop
push
push
movsb
cmpsb
inc
mov
sbbb
cmp
cmp
lret
mov
std
inc
andl
and
xchg
cwtl
ja
and
pop
lods
lcallw
pop
inc
and
jns
movsb
xchg
and
cmp
and
xor
rcl
cmp
adc
mov
and
repnz
mov
mov
enter
jl
test
xor
and
or
mov
add
cmc
and
jmp
int3
test
paddw
loope
push
movsl
push
cmpl
mov
mov
shl
pushf
int
jno
jb
test
fsts
repz
addr16
mov
cmp
mov
movsl
sbbb
sbb
test
xor
sub
adc
test
cs
xchg
and
jns
and
jmp
popa
pmuludq
test
sub
mov
add
jno
xlat
fs
loope
sarb
ljmp
mov
pushl
test
and
das
lock
and
jne
nop
inc
cmp
xchg
xor
pop
std
cmpsb
adc
leave
or
rcl
and
add
sbb
fdivrl
imul
fcmovnbe
repz
jecxz
xchg
arpl
mov
test
das
and
mov
out
and
and
push
div
dec
fwait
xor
and
mov
xchg
sbb
cli
or
icebp
and
jmp
out
les
in
mov
push
xchg
lock
mov
pop
pop
and
mov
test
and
cmp
int
inc
inc
imul
xchg
out
arpl
aad
loop
and
inc
inc
sub
dec
loopne
into
mov
bound
scas
aam
and
ss
xchg
hlt
and
mov
mov
inc
outsb
repz
push
add
sbbb
and
imul
pop
data16
stos
fadds
mov
sub
aaa
and
test
and
push
insl
das
xor
rorb
enter
and
fidivrl
push
or
adc
and
mov
xor
and
mov
test
mov
inc
pop
roll
push
daa
fstenv
inc
out
mov
mov
xor
imul
int3
jne
xchg
and
and
fstl
pop
jae
mov
inc
jp
pop
mov
push
mov
push
and
je
pop
in
pop
mov
dec
jae
fnstcw
jle
and
fxch
test
mov
push
movsl
sub
add
out
xchg
xchg
data16
stos
dec
xchg
mov
insl
sbb
and
enter
not
xchg
in
push
push
mov
push
mov
and
lods
sbb
dec
mov
jl
and
insl
mov
fidivrl
fbstp
fcomip
mov
hlt
mov
dec
jmp
and
jbe
lds
sub
test
leave
and
jecxz
rclb
scas
xchg
and
mov
mov
loopne
or
fcomps
pop
je
mov
add
jnp
in
xchg
cmp
gs
frndint
insl
sub
jge
and
test
out
cltd
faddl
fcomi
jl
add
lret
jmp
add
cmpl
inc
and
dec
push
pop
js
shlb
movsb
aam
je
mov
adc
call
mov
pusha
pushf
xor
in
cli
scas
out
adc
mov
xchg
xor
lea
mov
sub
lock
shrb
scas
ljmp
inc
jge
push
sub
and
out
push
shrl
pop
test
jno
in
int
adc
mov
ljmp
adc
inc
sahf
sbb
cmp
out
mov
xchg
mov
mov
mov
xchg
inc
adc
dec
push
and
jbe
cmpb
bound
xlat
cld
xor
adcl
push
ss
not
xor
push
fdivr
lds
cmp
sub
ja
movsb
jecxz
fs
mov
int
adc
or
and
inc
push
test
cmp
jns
lahf
adc
movsb
add
ljmp
loope
rclb
sub
and
ljmp
jp
inc
lar
loope
jbe
and
mov
lods
mov
hlt
cwtl
mov
jp
inc
pop
aam
mov
fwait
cmp
lcall
mov
adc
push
push
test
stos
test
shlb
pop
push
inc
mov
and
xchg
cmp
pop
in
and
in
push
cli
mov
mov
scas
adc
lods
sbb
lret
scas
mov
out
cmc
mov
pop
call
lahf
shlb
ret
mov
and
and
mov
xchg
sub
aad
mov
xor
mov
loop
lea
lods
pop
insl
and
cltd
push
int
imul
call
stos
or
les
xchg
push
and
int
loope
fs
aam
mov
gs
xchg
add
stos
sbb
je
insl
add
adc
xchg
nop
dec
adc
pusha
aad
pushf
rcr
std
cmp
pop
cmp
das
and
pop
or
jge
jb
dec
push
add
push
les
andl
mov
nop
jg
push
xchg
roll
and
or
cmc
int
and
sbb
pusha
and
adc
fdiv
jg
loope
mov
or
pop
cli
gs
mov
add
sbb
movsb
push
int3
xlat
lahf
add
sub
xor
and
mov
jne
jmp
iret
js
push
mov
mov
inc
inc
orl
mov
jecxz
int
and
stos
out
push
xchg
fildll
mov
test
jecxz
jbe
push
mov
iret
sti
pop
mov
and
movsl
xchg
fwait
mov
fiaddl
inc
pop
int3
scas
nop
push
push
fdivrs
fs
loop
fwait
add
mov
sub
xchg
mov
fwait
inc
mov
rclb
and
jb
popa
inc
jle
inc
bound
and
cmp
mov
mov
mov
rcr
dec
and
out
leave
xor
cmp
jo
insl
xchg
xor
sub
push
pop
or
and
push
push
shlb
xchg
pop
mov
lods
sub
and
pop
mov
pushf
adc
adcl
and
mov
fst
xor
push
adc
mov
jns
pop
pop
and
lods
jnp
add
icebp
loope
pusha
sbbb
mov
fldenv
adc
movsb
pop
popf
xor
rclb
push
pop
xchg
lahf
and
push
mov
hlt
shlb
jns
add
mov
adc
and
test
xchg
jecxz
popa
and
or
cmpsb
fcomps
mov
xchg
sbb
push
mov
faddl
fnstcw
sbb
push
dec
fsubs
inc
sub
orl
lds
and
add
aaa
cmp
xor
loop
inc
inc
sahf
inc
movsb
jmp
jb
stos
subl
pop
mov
icebp
adc
adc
mov
inc
std
inc
and
cmp
push
pop
adc
xchg
mov
jnp
pushf
xor
aaa
jb
roll
mov
push
dec
xor
sbb
stos
dec
imul
clc
dec
iret
sub
jo
scas
xchg
popa
inc
jp
aas
and
flds
mov
sub
les
nop
sub
jge
and
dec
popf
xchg
cmp
push
pop
xor
pop
and
and
mov
add
jae
push
cmp
repz
sub
push
imul
lds
jle
jno
cmp
add
and
sarl
mov
mov
dec
fldenv
add
push
rorl
fwait
movsl
out
test
and
xor
sbb
inc
cwtl
inc
and
mov
pop
adc
outsb
mov
push
sbb
push
scas
sub
mov
jo
jae
rcll
nop
push
cmp
in
sbb
and
mov
and
inc
xor
add
jl
lds
dec
pop
stc
inc
dec
mov
std
add
xchg
xchg
jmp
push
xor
or
pop
push
mov
pop
in
xchg
xorb
aam
jl
inc
push
aas
int3
xchg
push
out
decl
shrb
and
sbb
cmpsl
mov
leave
jle
mov
test
xchg
cmp
pop
loop
data16
inc
mov
inc
clc
xor
or
adc
jne
xchg
xchg
scas
fidivrs
dec
adc
push
cmpsl
inc
leave
xchg
pop
pop
fldenv
fisubs
push
lret
mov
mov
mov
jbe
and
adc
cmp
inc
inc
sub
rcrl
cli
cmp
mov
fsubs
incb
mov
stc
xchg
clc
and
fnstsw
nop
and
mov
cs
lcall
push
cmpl
jno
mull
push
movsb
dec
mov
cmp
out
xchg
cmp
frstor
ret
xor
push
es
adc
lea
mov
into
mov
lret
pop
adc
enter
and
aam
inc
mov
shl
jns
push
mov
roll
int3
jnp
nopl
cmp
fld
hlt
pop
cmp
jns
cwtl
cmp
mov
icebp
fwait
mov
outsb
jmp
roll
cmp
das
inc
mov
clc
cmpsb
pop
into
and
dec
ret
lahf
mov
int
jp
pop
push
popf
cmp
cltd
stos
push
sbb
cmp
push
std
xor
lret
dec
imul
cmc
in
mov
ret
mov
mov
xor
and
mov
xchg
aaa
pop
jns
movsb
in
arpl
push
mov
bound
popa
add
shrb
jmp
loope
and
xchg
push
mov
bound
imul
jl
ret
vmovdqa
inc
or
lock
jg
insl
and
and
push
jb
and
jg
jo
or
mov
jmp
shll
push
jge
or
and
sbb
shll
cmpsl
pop
xchg
divb
das
push
insl
or
or
dec
sub
shll
std
icebp
scas
loop
cmp
dec
insb
add
enter
and
adc
and
out
pop
and
sbb
or
and
emms
dec
mov
add
pop
test
mov
and
movsb
cltd
fldcw
push
and
mov
jl
paddb
push
roll
fsubs
ret
outsb
jle
daa
loopne
rcrl
and
jno
cmc
loop
insb
and
jb
adc
push
rep
ljmp
dec
lea
jmp
pusha
and
push
fcomp
and
sub
add
or
jge
jnp
xor
xchg
pop
sbb
push
scas
inc
cmc
cmp
out
cld
popa
ret
bound
insb
and
inc
cmp
fidivrs
test
das
xor
outsb
outsl
jb
adc
push
push
lahf
mov
and
mov
lods
and
in
jne
out
xchg
inc
rorl
jns
movsb
dec
push
jle
outsb
xorl
xchg
cmpsl
mov
adc
subl
fldl
int
and
test
testb
sbb
popa
dec
into
xor
ret
inc
mov
mov
sub
adc
pop
stos
mov
push
lea
sub
xchg
shll
and
in
inc
addb
and
lods
mov
and
rorl
movsl
int3
les
mov
mov
and
mov
xchg
int
call
ret
pop
pop
push
lcall
push
jmp
lods
push
icebp
clc
stos
lods
pop
and
insb
adc
xchg
cld
jecxz
stc
out
int3
mov
les
addr16
push
outsb
insb
adc
sbb
cli
pop
xchg
das
and
and
imul
xor
push
xchg
rorl
and
push
and
scas
cmp
dec
popa
push
enter
das
xor
mov
sub
mov
fldenv
test
jp
leave
xor
sti
movsb
std
mov
dec
add
and
repnz
xlat
or
dec
js
jne
divb
mov
push
or
pushf
jne
and
movl
hlt
sub
je
lret
std
fsubl
int3
sbb
dec
dec
and
pop
mov
pop
sahf
and
dec
popa
jo
call
gs
cmp
fcompl
popf
stc
jno
adc
test
in
push
sbb
and
repz
xchg
fisubs
cmp
dec
and
push
mov
xor
cmp
imul
fdivl
test
stc
mov
push
js
scas
cmpl
add
fs
pushf
mov
test
mov
sbb
scas
xchg
cld
mov
movb
stc
add
fchs
test
mulb
fildl
cmp
mov
cmpsl
or
outsb
lods
xor
adc
mov
scas
mov
xor
adc
std
stos
push
dec
jg
xlat
push
and
mov
adc
xchg
rorb
inc
push
lods
push
mov
add
mov
rclb
pop
push
popa
or
mov
and
loop
popf
inc
sti
dec
and
in
scas
pop
sbb
mov
fdivr
daa
pop
cmp
insl
xchg
and
fiadds
or
xchg
andl
int3
test
fildll
push
loop
loopne
xchg
push
test
mov
out
mov
jge
xchg
mov
or
add
pop
or
dec
fiadds
cmp
pop
es
push
dec
movsb
les
mov
lods
jle
cmovno
add
and
mov
cmp
faddl
xchg
xor
loop
adc
inc
sbb
jge
lea
test
and
jbe
xchg
in
stos
movsb
andb
xor
push
and
or
and
in
inc
fwait
inc
and
je
mov
push
cli
loopne
xchg
addr16
and
jge
std
mov
mov
pop
and
push
loope
and
or
and
idivl
adc
sub
jns
cmc
and
mov
movsb
jmp
outsl
sti
popa
loope
cli
pop
and
jg
sub
or
testl
and
jne
loope
sbb
xchg
pop
mov
xchg
cmp
dec
stos
repnz
pop
and
pop
cmc
push
xlat
push
add
mov
push
shl
cltd
inc
ret
mov
xlat
andl
in
pop
cmp
push
cmp
enter
test
shll
cmpsb
mov
xor
sub
sbb
jmp
mov
dec
sub
and
aam
xor
bound
pop
mov
inc
das
mov
sbb
scas
xor
pop
and
add
inc
flds
jb
popa
rcrb
nop
es
and
mov
fsubr
jl
cld
and
xchg
mov
int3
and
iret
pusha
lret
sbb
and
push
call
and
mov
jns
stos
mov
std
andl
scas
cmp
je
inc
add
cmpsb
jge
aad
movsl
aam
aaa
lock
ss
pop
sbb
popa
test
int
mov
fstl
das
jg
xchg
jl
cli
mov
mov
in
mov
push
pop
movsl
and
add
jge
cltd
dec
lahf
mov
stos
mov
lahf
outsl
inc
movsb
dec
add
les
and
fnstenv
and
icebp
mov
mov
int
push
repnz
test
adc
push
mov
sub
bound
jmp
out
push
push
stos
shlb
popa
btr
cmpsl
push
xchg
lcall
je
mov
popa
sub
mov
and
mov
inc
roll
mov
push
push
mov
mov
dec
and
rep
ret
mov
xchg
loope
iret
or
and
jmp
div
fistpl
and
add
fldenv
sub
pop
adc
add
jle
mov
test
lret
mov
push
cwtl
gs
jno
cmpl
ds
sub
cmp
ljmp
movsl
push
add
pop
sub
sub
cld
das
mov
inc
les
movsb
push
filds
mov
ds
sbb
hlt
loop
lods
std
adc
add
pop
push
scas
roll
enter
jae
loope
mov
je
mov
dec
and
rcrb
xchg
negl
in
jno
fcmovbe
mov
popa
data16
jl
test
and
and
adcb
fistl
imul
add
daa
into
and
pop
out
mov
push
rclb
fwait
mov
jg
popa
fimull
pushf
xchg
add
repz
and
fnstcw
cmc
xlat
mov
in
outsb
push
and
stos
inc
shlb
cmp
in
and
ljmp
and
adc
mov
xchg
daa
movsb
mov
test
pop
in
xchg
ljmp
rclb
arpl
sub
inc
mov
mov
dec
dec
sbb
jbe
and
push
pop
mov
andb
adc
lea
push
and
out
push
arpl
pop
sub
fstl
movsb
int
jbe
xchg
cmp
lcall
xchg
mov
sub
or
cmpsl
push
adcl
movsl
repnz
xchg
arpl
xchg
xchg
push
and
insb
adc
das
pusha
je
and
adc
scas
add
xor
push
xchg
es
inc
jo
mov
and
inc
mov
mov
cwtl
pop
pop
mov
subl
rol
cli
mov
movsb
sbb
scas
sub
pushf
cmp
mov
xor
jnp
popa
mov
loopne
push
notb
test
ja
jecxz
xor
xorb
fwait
jmp
cmp
mov
push
ds
int
shll
test
mov
sbb
jae
add
pushf
scas
mov
imul
pop
mov
into
jne
cs
hlt
and
inc
fdivr
fistpl
cmp
and
call
dec
lods
mov
xchg
das
sub
test
xchg
test
mov
mov
stos
mov
and
xchg
inc
std
sub
fsts
pop
inc
cmp
jecxz
push
loope
and
ja
mov
push
and
cmpsl
add
xchg
inc
and
aas
stos
inc
daa
gs
jbe
xchg
push
and
mov
or
int
cmpsb
movsb
pop
pop
out
pop
popa
insl
sbb
mov
fdivrl
push
inc
inc
scas
mov
xchg
xchg
dec
and
cmp
dec
sarb
movsb
xchg
jae
xor
and
lods
dec
popa
mov
push
iret
pushf
andl
and
sarb
xchg
or
movsl
add
negl
je
jl
scas
push
out
xchg
pop
stos
and
out
movsb
or
mov
andb
ffree
dec
jae
and
jnp
push
dec
push
jle
jb
in
lahf
cwtl
or
sbb
or
daa
push
cmpsl
mov
xor
mov
clc
int
pop
push
jge
sbb
push
stos
dec
test
insl
lret
xchg
sub
movsb
xor
sbb
shr
pusha
outsl
sbb
xor
push
lods
lret
lods
and
sarl
push
mov
xchg
mov
mov
jge
sub
lret
mov
inc
gs
sbb
jmp
leave
adc
push
cld
fisubrl
push
sub
and
lods
xorl
jge
lods
push
call
scas
mov
aaa
sbb
sahf
mov
mov
xchg
jb
and
data16
mov
adc
and
sub
repz
arpl
xor
movsb
out
xchg
and
mov
lahf
add
inc
add
test
mov
ret
cmp
out
orb
xchg
jge
in
mov
or
add
test
sbb
aas
push
or
in
mov
loopne
xchg
adc
dec
shrb
daa
adc
xor
out
test
loope
xchg
and
or
in
dec
and
lods
mov
xor
cs
mov
inc
sub
adc
and
dec
and
adc
in
inc
and
pop
sub
outsb
subl
and
in
lock
movsb
inc
sbb
mov
fists
subl
cmp
scas
gs
mov
lock
enter
dec
pop
sbb
repnz
dec
lahf
or
mov
xor
push
mov
mov
and
mov
xor
test
mov
and
jns
stos
jmp
fs
and
movsb
out
and
xchg
dec
and
fdivp
sbb
adc
jno
jae
and
insl
jge
cmp
sahf
add
mov
sub
push
movsl
sub
test
stos
outsl
out
cmc
mov
int
xor
xor
pusha
std
in
cmpsb
mov
movsb
and
shlb
sub
cld
and
es
xor
add
aaa
icebp
and
dec
cli
xor
add
push
fdivrs
jo
dec
cmp
in
and
push
pusha
push
test
insl
popa
adc
pop
pop
in
pop
mov
std
or
push
in
insl
fcmove
mov
shl
xchg
push
daa
inc
lahf
xor
shll
adc
jp
shll
movsl
mov
rcrb
jne
popf
xchg
xor
and
les
movsb
push
dec
mov
imul
push
sub
sti
mov
or
call
inc
sti
push
and
adc
push
aas
mov
add
adc
test
sbb
and
mov
pop
jne
xchg
xchg
outsb
cli
fwait
adc
stos
push
aaa
mov
adc
icebp
insl
sub
jg
hlt
movsb
insb
cltd
jne
popa
pop
push
fnsave
sbb
out
mov
cmp
and
dec
add
and
aam
adc
and
and
sub
and
dec
es
mov
and
mov
cmp
faddl
es
or
lods
dec
pop
int3
and
push
xchg
mov
bound
iret
sbb
jo
dec
push
dec
lahf
xchg
and
sub
pop
push
push
xchg
insl
mov
cs
out
insb
cli
and
sbb
pop
repnz
pusha
add
shl
jns
sbb
or
stc
dec
hlt
and
ret
cmp
push
sub
sub
push
push
cs
inc
arpl
push
dec
out
push
into
jns
mov
cmp
cmpsl
xchg
mov
and
mov
cmc
mov
and
lret
lods
out
sub
call
sub
inc
sbb
mov
adc
data16
and
leave
push
mov
xchg
adc
inc
mov
dec
jecxz
lods
gs
xchg
gs
add
stc
xor
jg
loop
call
dec
in
out
lret
xchg
popa
mov
jno
xchg
pop
and
test
sub
inc
and
mov
scas
popa
pop
jmp
gs
int
push
push
xchg
bnd
cmp
lcall
dec
lret
aas
mov
or
cmc
xchg
add
add
ret
and
cmp
insb
push
push
xor
mov
or
and
sub
xchg
sub
and
sub
jb
popa
movsb
xor
dec
adc
fldenv
inc
movsl
dec
push
imul
insl
push
movsb
xor
lret
adc
inc
push
dec
mov
cmpsb
pop
sub
popa
gs
fidivrl
and
clc
enter
ds
xchg
sbb
and
scas
add
and
xchg
sbb
jge
push
jno
mov
sbb
xchg
pop
popf
sbbl
call
movsl
int
cmc
mov
pop
cwtl
inc
roll
jo
xchg
addr16
xor
jg
test
iret
sub
mov
cwtl
pusha
or
xor
mov
mov
frstor
sti
lea
xlat
stos
popf
and
shlb
scas
dec
fnsave
popa
daa
fsubl
repnz
cmp
or
imul
xchg
and
ficoml
dec
inc
shlb
movsb
jge
mov
mov
mov
aas
xor
cli
push
and
inc
je
pop
and
mov
orl
repz
cmpsl
and
cmpsb
adc
and
test
cmc
and
add
nop
xchg
cmp
jbe
xor
and
pop
mov
inc
adc
inc
dec
mov
test
jno
mov
xchg
and
pop
pop
popa
jg
std
stos
inc
pop
xor
pop
jmp
popa
pop
fstpl
push
or
xchg
mov
mov
mov
sbb
stos
test
cmc
lods
and
loop
bound
adc
jae
xchg
xor
mov
fstpt
cwtl
push
js
inc
pop
and
stos
aas
into
xchg
insb
and
lock
shlb
outsl
sub
hlt
and
add
and
mov
fdivl
and
pop
js
xor
and
mov
clc
sti
test
mov
fisttpl
and
stos
push
pop
mov
xlat
in
and
or
xor
mov
cli
popa
stos
and
clc
cld
cmp
mov
std
mov
pop
bound
xchg
adc
adc
or
dec
repz
mov
das
outsb
and
push
into
and
icebp
pop
addl
mov
and
cmpsb
jmp
pop
inc
jecxz
and
add
shll
xchg
sbb
sub
add
xchg
test
orb
xlat
and
out
lds
xchg
mov
lcall
mov
test
cmp
cmp
in
lahf
xor
mov
es
test
inc
xchg
and
cmp
lret
jge
and
daa
xor
and
sahf
sbb
es
jecxz
cld
cmc
and
pusha
pop
jns
adc
jge
sbb
adc
pop
xor
outsl
jne
loop
and
sbb
xor
mov
mov
fs
inc
inc
lcall
add
and
inc
fwait
outsl
daa
jns
mov
in
cmpsl
xchg
xlat
popa
pop
cmp
mov
in
in
sbb
inc
repz
test
or
popa
adc
mov
popf
and
jns
mov
and
xlat
adc
jo
or
xorb
cmp
push
test
push
test
mov
xchg
adc
inc
xlat
mov
mov
adc
and
shll
sub
test
daa
mov
jb
fs
mov
test
push
scas
jmp
sub
inc
adc
imul
test
mov
mov
and
xchg
int
and
out
fdivs
mov
lcall
cmp
movb
and
jl
das
and
or
mov
inc
adc
jle
push
mov
sub
loopne
dec
mov
das
and
cld
and
and
cmp
fnstcw
mov
in
pop
push
sbb
inc
call
and
cmp
dec
imul
push
fs
push
jg
and
iret
or
ret
lods
arpl
mov
cmp
and
xchg
dec
mov
add
push
in
add
mull
cmc
test
mov
mov
xor
push
js
xor
dec
outsl
fsubl
ret
adc
lock
das
lds
pop
and
mov
jbe
xor
imul
pop
mov
aas
xchg
in
and
sbb
or
jb
jmp
xor
cmp
fs
aas
and
xor
mov
lods
and
adc
and
pop
addr16
add
repnz
jns
test
and
cmpsb
clc
vpackuswb
or
testb
cld
dec
mov
test
orl
sbb
adc
sbb
push
popa
popa
inc
pop
xchg
pop
sub
and
add
sub
jg
ljmp
and
outsb
arpl
and
mov
xor
xchg
mov
sbb
frstor
cmp
push
mov
pop
inc
test
fcoms
and
cmp
cmpsb
lds
jl
and
pop
mov
movsl
js
out
out
and
jno
and
and
insl
pop
jmp
mov
mov
lahf
jae
aas
mov
jmp
push
iret
mov
jbe
push
shl
pop
and
push
sub
xchg
mov
xchg
mov
mov
cmpsl
and
and
jge
fsubrp
aad
sub
xor
pop
pop
sbb
stos
mov
sahf
xchg
and
add
jle
leave
jne
cmp
push
lds
cmp
pop
frstor
mov
les
mov
sbb
push
pop
fstps
dec
int
sub
je
and
movsb
fwait
cld
jmp
xor
and
mov
lea
push
loope
stos
adcl
jno
add
aaa
in
push
stos
js
and
adc
mov
add
cltd
inc
cmp
cmp
dec
iret
mov
mov
push
add
xchg
in
and
jle
bound
cs
cmp
cmpsb
mov
xchg
dec
push
mov
xor
nop
out
das
loope
inc
xchg
imul
xchg
sahf
ja
sbb
lock
out
in
mov
push
cmc
xchg
push
and
sbb
jae
popa
loope
xor
and
in
mov
imul
es
scas
and
lods
push
popf
pop
loope
mov
rorl
jbe
mov
cs
jno
aad
scas
xchg
test
jb
jnp
add
cmp
int3
popf
jmp
push
out
bnd
out
and
popa
ret
jge
mov
fidivs
add
adc
and
dec
loop
and
xlat
imul
xchg
dec
and
mov
adc
jno
and
inc
outsl
sub
inc
push
xchg
jb
sti
and
mov
and
fsts
adc
sbb
sub
sub
and
push
mov
fst
and
or
jnp
pusha
jp
hlt
int
mov
jmp
leave
sub
frstor
insb
or
and
fildll
and
or
ja
cmp
js
dec
jo
addr16
sub
cmp
add
nop
movsb
jne
pop
sti
mov
and
and
bound
repz
sub
mov
cmc
lods
xchg
pop
call
mov
test
push
xchg
mov
inc
mov
push
xchg
enter
mov
rolb
fcoml
mov
dec
and
fidivrl
mov
push
sti
jne
test
jmp
hlt
rclb
nop
jle
rorb
ret
in
in
cmp
adc
and
pop
clc
loop
andl
mov
sub
andl
mov
fcoms
jnp
xchg
cltd
push
xchg
imul
pop
push
dec
cwtl
xchg
mov
cmp
and
idiv
andb
and
add
out
loop
push
lret
pop
add
loopne
sbb
pusha
sahf
cmp
pop
add
ljmp
jo
lretw
pop
xor
push
and
aaa
or
fisttpll
sbb
xchg
arpl
mov
pop
aas
fidivl
sub
sbb
mov
fildll
loop
arpl
mov
popa
dec
iret
and
pop
adcb
jne
and
test
inc
jecxz
push
repnz
ss
stc
sarb
outsb
icebp
dec
mov
dec
push
std
and
data16
mov
and
cmp
sub
sahf
jecxz
xchg
mov
nop
loope
mov
and
pop
addb
pop
or
lret
lea
xchg
js
imul
stc
pop
pop
cld
insl
out
cli
and
mov
ret
mov
popf
es
sub
sub
and
or
std
push
loop
pop
lahf
xor
adcl
and
in
dec
in
push
xor
or
mov
mov
mov
dec
rolb
mov
setnp
push
arpl
xchg
adc
xchg
dec
popa
std
sub
jnp
shrb
pop
inc
in
das
sub
mulb
xor
push
into
mov
test
and
add
cmpb
call
movsb
popa
and
in
ret
mov
jmp
xchg
xchg
mov
fwait
and
aaa
jge
ljmp
push
stc
mov
insl
cmp
movsl
cmp
inc
addr16
and
popf
adc
mov
and
fstpl
stos
cwtl
and
test
mov
and
jmp
loope
mov
filds
adc
repnz
ror
out
adc
sahf
mov
loope
mov
jmp
sbb
cmp
popa
mov
and
xor
sub
push
pop
xlat
cmp
mov
pop
rol
fxtract
or
cmp
sub
mov
cmp
shll
mov
and
lock
and
cwtl
sti
jmp
pop
ljmp
jge
lahf
iret
mov
mov
mov
xor
out
inc
jne
cmp
gs
xchg
mov
and
dec
or
adc
xchg
and
jl
imul
in
mov
push
xchg
sub
mov
lea
or
stos
enter
and
mov
xchg
push
sti
jnp
and
cmp
push
insb
popf
arpl
insl
mov
add
cmp
frstor
xor
loopne
cmc
in
mov
sar
cwtl
xor
cmp
int
xlat
cmp
int3
fwait
sbb
movsb
inc
sbb
lds
mov
ja
test
das
inc
pop
dec
jne
or
mov
jecxz
sub
cltd
and
jmp
orl
xchg
rcr
inc
fsubrs
mov
aam
addr16
inc
mov
jnp
scas
call
jle
iret
subb
xor
jl
and
sahf
call
andb
push
dec
push
or
cmc
adc
push
dec
shlb
and
iret
dec
jns
mov
loopne
in
mov
mov
out
sbb
and
xchg
and
sub
je
mov
mov
fbld
dec
push
lea
pusha
mov
fstps
fmul
and
inc
mov
mov
add
out
mov
pop
movsb
bound
mov
sub
ss
lock
add
mov
in
and
imul
jmp
ret
push
sti
sahf
iret
aaa
int3
inc
xlat
xlat
and
adc
insl
popa
stos
xchg
xor
and
shrb
xchg
cmpsl
push
adc
das
mov
hlt
popa
inc
sbb
sub
and
and
inc
mov
xor
xacquire
in
dec
out
jg
mov
out
cmpsb
in
push
orl
popf
popa
and
and
add
rcl
and
jb
mov
fildl
and
jnp
nop
and
mov
adcl
dec
push
inc
push
nop
xor
and
test
ja
int3
xchg
fsubl
loop
sub
test
ss
and
and
icebp
cmp
and
mov
mov
bound
sbb
leave
cmp
hlt
xor
inc
lea
inc
inc
adc
repz
nop
and
dec
out
cmpsb
test
xchg
das
cmpsl
or
pop
and
inc
hlt
jge
xchg
mov
or
mov
mov
iret
mov
sti
jge
cld
dec
scas
and
stos
sub
pop
and
sub
gs
and
repnz
sbb
jo
jb
movsl
lds
data16
and
rcrl
popa
sbb
sbb
and
xor
add
mull
es
pushf
pop
mov
add
cmp
shl
adc
pop
imul
pop
divb
pop
push
or
in
cli
xchg
out
and
and
je
lods
ja
popf
in
test
popa
dec
sbb
fiadds
repnz
movsb
dec
lock
inc
stos
in
shll
sti
arpl
in
sarb
pop
fwait
dec
movsl
push
inc
add
jmp
jns
and
push
adc
test
lock
popa
fidivs
and
mov
cmp
out
sub
in
fcmovbe
loopne
and
push
sub
movb
push
lock
jbe
cmp
jnp
and
push
push
insb
sahf
or
in
add
lods
je
pop
and
test
add
frstor
cmp
cwtl
fdivrs
ja
fcompl
int
mov
adc
jle
lcall
jns
or
inc
stc
jno
insb
mov
mov
int3
fnstcw
fisubl
and
repz
and
out
test
and
loopne
xor
cld
lds
in
cmp
add
jae
movsb
or
fsubl
ret
adc
stos
call
pop
scas
pushf
mov
inc
insl
jmp
je
dec
pop
flds
mov
mov
mov
jo
mov
sbb
movsb
fidivl
and
ljmp
andb
pop
and
pusha
cmpsb
dec
and
jns
cli
or
or
jae
and
dec
movsl
jecxz
lds
repz
lahf
mov
or
js
out
or
xchg
test
fdivl
xlat
cs
and
sub
mov
pop
arpl
pop
sti
repz
scas
pusha
fxch
push
mov
bound
pop
jmp
lds
sahf
mov
mov
clc
mov
lret
scas
add
push
sub
ss
sbb
xor
pusha
mov
add
call
push
xchg
iret
pop
es
inc
mov
and
adc
shrb
loope
test
cmp
daa
and
cltd
out
shlb
test
clc
pushf
sbb
iret
and
rol
jnp
pop
mov
push
cwtl
popa
jl
and
mov
xchg
cltd
shll
pusha
jno
pop
jmp
adc
fnstenv
sbb
mov
loope
dec
int
mov
insl
xor
and
inc
xor
pusha
mov
flds
mov
out
js
pushf
and
ret
mov
jb
jle
popa
mov
cmc
jo
and
lahf
ds
js
fildl
push
inc
imul
or
push
idivb
into
dec
pop
and
push
fldt
xchg
mull
test
fs
adc
mov
cmp
and
pop
cmp
nop
add
push
push
out
push
sub
jecxz
in
mov
cmp
cmp
es
stc
sbb
mov
lret
inc
ljmp
mov
jle
enter
dec
lcall
cli
scas
pusha
daa
mov
popa
dec
adc
mov
stos
frstor
jmp
cmp
test
adc
sbb
and
inc
ja
fsubr
dec
and
js
stos
mov
and
dec
mov
and
or
fsubs
xor
push
in
dec
cmc
xchg
outsl
mov
lret
jns
mov
sub
mov
xchg
bound
xor
cmp
cmc
adc
and
mov
cmp
and
xor
sbb
leave
movsb
fsubl
sahf
lods
popa
dec
pop
lret
shl
and
add
push
jb
mov
loope
out
cmp
and
lea
sbb
xchg
negl
mov
or
gs
arpl
sub
xor
test
pop
mov
sbb
dec
mov
pop
cs
test
or
sbb
enter
add
xchg
xor
lret
cmpb
repz
rolb
lds
test
cmp
mov
and
popf
das
ljmp
mov
and
cmp
add
shrl
aad
jecxz
movsl
dec
int
in
xor
sahf
out
imull
jp
cli
mov
xchg
outsb
and
inc
rolb
ja
xor
sub
xchg
cwtl
mov
ds
aaa
or
sbb
jge
lods
and
js
sub
dec
mov
and
sub
mov
xchg
ss
mov
ficomps
mov
imul
cmp
xor
fwait
cld
cltd
pop
aas
sub
inc
inc
dec
and
imull
push
mov
inc
xchg
mov
adc
dec
push
in
cwtl
add
mov
and
xchg
fnsave
jae
aam
mov
push
jnp
rcrb
je
cwtl
pop
mov
faddl
rclb
add
cltd
into
and
add
and
getsec
ret
je
movb
inc
andl
fucomp
sbb
push
insl
mov
in
js
inc
or
and
push
cmp
pop
outsb
cmp
sub
cltd
xchg
add
and
inc
ljmp
cmp
inc
fsubr
cld
aaa
adcb
scas
mov
fs
jge
in
xor
mov
enter
and
inc
jns
or
mov
arpl
int3
lds
hlt
repz
roll
inc
scas
and
dec
add
outsl
add
and
movsb
xchg
out
jge
stos
push
mov
sub
jno
bound
orl
inc
xchg
mov
dec
and
xchg
mov
push
inc
sbb
icebp
xchg
inc
add
and
fbstp
pop
jecxz
sub
mov
pop
cmp
jp
lcall
xlat
mov
int3
popa
jb
mov
movsl
xor
in
xchg
lret
xorl
pop
sbb
sahf
fiaddl
cli
add
cwtl
xchg
sbb
enter
daa
pop
inc
lahf
insb
and
mov
out
rolb
aas
dec
and
mov
dec
inc
aad
mov
outsb
in
int3
and
push
neg
xchg
and
xchg
shll
rol
cld
cltd
jo
and
testl
dec
hlt
mov
push
pop
sub
push
cmp
and
xchg
xchg
mov
add
and
pop
in
push
jbe
add
call
pop
cvtps2pi
movl
xchg
push
dec
das
rcr
shrl
mov
les
jno
mov
push
dec
ret
dec
rorb
scas
stc
sub
leave
sarl
and
cmp
roll
and
cmp
sbb
lcall
mov
inc
and
aas
je
dec
jbe
les
popa
aam
mov
popf
or
jp
jmp
into
jb
insl
fsubs
lods
jae
dec
pop
subl
push
or
std
and
jb
pop
adc
lret
xchg
lahf
test
daa
push
pop
xchg
xchg
dec
dec
add
add
sbb
add
mov
pop
sbb
or
movsb
push
movsl
adc
popa
shlb
mov
arpl
mov
adc
subl
lcall
lock
push
iret
rclb
popa
add
aaa
int3
inc
xchg
pop
mov
outsb
push
or
add
cli
int3
lahf
enter
lahf
push
fsubrs
addl
mov
and
jecxz
outsl
popf
std
and
jns
sbb
pop
pop
mov
or
test
mov
cmpsb
sub
into
push
addb
js
rcrb
repz
repnz
sbb
xchg
cwtl
sbbb
test
sub
lahf
and
and
pop
enter
add
xorb
and
pop
call
imul
mov
scas
jl
mov
clc
mov
and
cs
sub
mov
xchg
inc
and
xchg
push
daa
sbb
pop
jne
aas
jg
sub
push
test
jbe
sbb
sbb
fisttps
push
std
shll
int3
and
jmp
cmpsl
pop
and
xchg
jle
imul
mov
loopne
popa
aam
call
and
jle
sub
mov
adc
lods
adcl
test
imul
push
in
cmp
lods
adc
mov
push
fidivrs
clc
outsl
test
add
sbb
stos
into
pop
sub
push
cmp
scas
lods
xor
and
push
mov
inc
push
lret
fdivrl
addb
push
dec
and
push
stc
cmp
out
add
lods
mov
scas
pop
adc
test
lea
xor
mov
bound
mov
xor
jl
aas
dec
data16
stos
push
sahf
and
jg
cmp
es
push
movsb
mov
cmp
je
test
xor
sub
sub
int
bound
test
push
ja
and
lahf
jge
outsl
das
es
sbbl
lea
cli
mov
out
and
and
aam
lret
push
xor
lret
aad
and
jno
insb
and
sbb
outsl
dec
data16
and
and
cmpsl
and
adc
adc
fdivrs
adc
mov
pushf
in
inc
lret
mov
and
ja
dec
sub
leave
mov
nop
xchg
xor
icebp
mov
mov
jne
sbb
sti
xor
lods
data16
push
insl
cwtl
xor
dec
mov
jbe
inc
jecxz
rorl
bound
pop
filds
and
push
fs
add
mov
movsb
out
inc
jne
stos
xor
and
inc
lea
gs
and
bswap
push
add
cmp
lret
mov
cmp
and
cmp
inc
adc
push
mov
lret
cltd
fcoml
cmp
mov
dec
das
inc
add
sbb
loopne
push
es
out
inc
dec
or
pop
or
icebp
and
test
sahf
movsb
jb
mov
stos
adc
push
xchg
and
ret
cmp
or
mov
or
and
js
mov
movsl
scas
dec
imul
hlt
mov
ss
xchg
sub
out
mov
pop
xchg
mov
in
aad
rcl
std
mov
outsb
or
mov
sub
lcall
xchg
scas
add
and
pop
jbe
aaa
es
and
lds
inc
cmp
imul
aaa
add
xchg
push
jns
or
int3
and
add
or
mov
and
cmp
adc
adc
call
jge
std
mov
add
mov
in
cmp
addl
mov
xchg
out
or
and
mov
js
pop
pop
inc
sbb
and
hlt
scas
xchg
loope
frstor
mov
mov
scas
pop
adc
and
mov
xchg
loope
or
ja
mov
popa
xchg
loope
sub
ds
dec
mov
movsb
dec
stc
mov
aas
jge
arpl
mov
inc
bound
and
or
and
sub
sub
scas
push
and
push
jb
int3
cmp
pusha
xor
repnz
out
cmpps
sti
in
and
inc
xor
dec
push
lahf
mov
jle
jmp
test
andl
sbb
sbb
test
or
and
and
mov
movsb
mov
dec
lahf
mov
cmp
scas
outsb
inc
mov
xrelease
inc
xchg
cmpsb
sub
addr16
test
call
and
fstpt
lcall
add
shlb
xchg
and
test
rolb
es
icebp
push
and
in
adc
jp
add
mov
xor
jns
daa
ja
add
sub
add
adcb
sbb
loope
or
push
rorb
and
enter
mov
jge
popa
xchg
out
rcrl
dec
iret
pop
add
fs
mov
in
sarb
add
notl
dec
jmp
ja
xchg
dec
cmpl
out
int3
mov
inc
outsl
pop
or
rcrl
xchg
jb
test
int3
imul
ficompl
arpl
ds
and
out
and
div
jmp
or
inc
cmp
inc
push
inc
pop
fists
xchg
xchg
add
xor
cmp
aas
out
jne
push
and
add
or
cmp
xor
sti
lahf
stos
clc
inc
pushf
loopne
push
fsubp
xor
sub
inc
sub
test
mov
popa
rol
dec
xor
or
fcmovnb
sbb
mov
loope
lret
jp
es
and
lods
loope
ja
call
mov
pop
xchg
push
xor
aas
into
mov
cmp
add
xor
sub
mov
pop
insb
daa
push
pop
xlat
ret
xor
mov
popa
dec
push
jo
scas
aaa
and
jecxz
xor
xchg
xchg
or
fsubl
lods
and
movsb
jb
test
dec
fists
pop
mov
adc
icebp
in
push
lea
and
les
cmpsl
arpl
shll
cs
cmp
adc
cld
arpl
jae
cltd
mov
mulb
aas
mov
mov
dec
jl
and
mov
sub
outsb
stc
pop
mov
and
scas
nop
mov
enter
mov
push
mov
sbb
and
lods
pusha
inc
movsb
loopne
popa
fcomi
jp
xchg
loop
imul
test
or
jg
cld
mov
repz
icebp
movsl
into
pop
or
fcmovnbe
mov
xchg
imul
add
pusha
mov
andb
int
mov
and
xor
rol
push
inc
xchg
test
mov
push
and
ljmp
push
jne
jp
adc
movsb
jnp
adc
fcoms
hlt
pushl
xchg
pop
xchg
fadd
aam
and
push
fwait
aaa
call
popl
and
sub
and
push
jae
ja
add
imul
test
or
dec
stos
and
int
pop
mov
flds
xlat
popa
and
aas
fdivrp
in
pop
push
and
fs
lds
and
and
lea
imul
mov
dec
cmp
mov
or
adc
leave
mov
or
loope
and
mov
out
ret
aas
jno
pop
inc
incl
out
dec
mov
mov
das
sub
and
jns
bound
cli
rclb
cld
and
mov
ja
dec
push
popf
add
imul
mov
xchg
je
insl
loop
ljmp
pop
jno
into
inc
jns
mov
imul
dec
bound
and
js
call
inc
out
das
push
movsb
xchg
repz
push
inc
cwtl
adc
inc
sbb
inc
imul
pop
jp
pop
pop
xchg
sbb
add
shlb
cwtl
cltd
cmp
push
lods
pop
and
mov
movsl
out
outsb
lret
gs
xor
inc
push
adc
add
lcall
jl
data16
mov
test
dec
aaa
cmp
mulps
movsb
and
inc
jo
daa
cld
shll
into
pop
mov
mov
pushf
adc
das
decb
mov
aaa
xor
jno
clc
add
ja
mov
adc
jmp
mov
jecxz
push
insb
and
loopne
int3
inc
xor
and
add
lods
pop
popa
outsb
mov
dec
or
scas
fs
mov
and
orl
cmp
rol
mov
and
fistps
scas
mov
iret
inc
aad
lock
adc
inc
jno
in
and
xlat
mov
lahf
out
and
lods
cmp
pop
sbb
mov
outsl
iret
adc
pop
scas
and
and
cli
pop
sbb
and
and
adc
cmp
test
or
cmc
lahf
xor
imul
fsubl
stos
jbe
aas
leave
sbb
scas
cmc
xlat
repnz
cmp
and
inc
push
test
xchg
and
push
movsl
push
dec
hlt
mov
xor
test
and
inc
jp
bound
lret
test
shlb
jmp
movsb
popf
mov
int
xor
push
out
ja
aas
insl
lods
shl
xchg
and
lds
mov
cmp
jno
jns
xor
cmp
mov
mov
and
adc
lret
and
lock
add
pushf
ret
rcrb
cmp
pop
pop
xchg
dec
test
mov
xor
mov
jae
loop
pop
jl
mov
popa
scas
push
lcall
das
sbb
and
or
int3
jge
sti
and
and
cmp
and
mov
add
lock
fstpt
cltd
lret
cld
shlb
mov
sti
ficoms
lret
ja
sub
inc
ficoml
pop
jge
xchg
aaa
lock
xchg
sarb
pushw
push
or
addr16
daa
adc
add
mov
loop
sahf
mov
or
fwait
std
rolb
xchg
sbb
enter
jge
adc
scas
push
int3
jne
ret
sar
ret
stos
mov
add
aam
cmp
pop
inc
movsb
mov
jle
or
mov
out
stos
adc
fs
xor
out
and
aaa
cmp
xor
fs
or
dec
stc
shrl
push
and
imul
rolb
pop
in
jno
cmpl
imul
and
jle
sbb
pop
mov
mov
and
rorl
clc
sbb
and
pusha
aad
mov
jp
and
test
pop
sub
add
inc
popa
inc
and
pusha
mov
fbstp
adc
xor
das
arpl
incw
cmp
add
inc
bound
inc
push
sub
xor
pop
jo
scas
xchg
lods
cwtl
dec
and
sub
lods
icebp
stos
mov
and
mov
pop
cwtl
in
add
jne
pop
movsb
push
adc
andb
xor
movsl
fsubs
mov
cwtl
jbe
int
lds
and
out
fdivs
imul
add
ja
add
in
fstl
fildl
jns
pusha
dec
aaa
das
xchg
inc
and
jno
jl
mulb
xchg
sti
mov
xlat
mov
push
insb
xorb
adc
push
mov
or
notl
lcall
jbe
rcl
inc
or
and
jmp
stc
mov
dec
gs
or
insl
jge
sub
cmpsl
fwait
push
inc
enter
imul
inc
lods
xlat
inc
and
mov
sub
and
or
mov
fidivs
out
mov
jecxz
xchg
movsl
lods
pop
or
adc
mov
cmc
pusha
mov
out
movsl
in
outsb
xor
loopne
sahf
in
cmp
jmp
in
dec
mov
jecxz
mov
insb
adc
jmp
test
and
push
xor
sahf
cmp
xor
add
mov
pop
pop
popa
clc
icebp
dec
mov
cmpsb
push
xorl
and
sub
daa
and
addl
sbb
sub
popf
and
push
push
ja
and
lds
sub
std
jb
cmp
lret
dec
mov
pop
cwtl
es
sub
testl
jg
mov
pop
push
dec
sbbl
mov
in
or
mov
and
mov
push
push
out
roll
mov
jg
cmp
in
clc
cwtl
aaa
shll
jp
mov
jae
test
ret
dec
xor
pushf
sbb
lods
fwait
out
inc
cmpsl
inc
cmpsb
movsb
lock
popa
clc
pop
xchg
mov
popa
inc
imul
fstpt
or
push
div
xchg
xchg
clc
in
arpl
lret
and
or
movsl
dec
xor
out
adc
lahf
in
mov
into
jle
mov
adc
push
push
push
mov
jge
scas
fsub
mov
imul
lret
out
cmpb
mov
cltd
pop
xchg
xchg
pop
mov
mulb
mov
xor
insl
fbld
dec
test
sti
and
jb
pop
aad
fsubs
or
lcall
mov
adc
and
push
mov
popa
cs
push
and
jp
mov
and
push
lcall
in
adc
or
cmpsb
das
imul
popa
or
call
test
movsb
nop
jge
inc
xchg
imul
je
jl
jle
cmpsb
popf
test
or
icebp
mov
mov
pop
dec
mov
dec
xor
cs
xchg
or
incl
sbb
stc
and
cld
xchg
lahf
sub
enter
sbb
cwtl
mov
stc
inc
insl
adcb
jp
loopne
lods
fstp
adc
movsb
cs
arpl
aaa
cmp
pop
dec
shlb
outsb
push
movb
and
js
and
lahf
mov
es
and
aad
mov
jae
loopne
jns
xchg
in
push
fs
aaa
dec
mov
mov
and
cmpsb
or
xor
mov
in
jno
js
test
and
push
sub
mov
inc
and
sbb
mov
mov
jge
mov
mov
sti
push
test
pusha
mov
dec
imul
fiaddl
pop
test
pushf
cli
xor
out
sub
push
pusha
push
mov
test
scas
add
iret
mov
mov
pop
repnz
cld
daa
insl
inc
and
fildl
and
aad
xor
push
test
add
mov
and
xchg
in
ret
push
and
pop
mov
or
inc
sarl
or
int3
inc
add
xchg
in
mov
jb
dec
and
stos
sbb
loopne
push
and
and
movsb
lods
or
mov
and
mov
and
dec
inc
cmp
mov
mov
add
xchg
mov
testl
adc
out
or
push
and
mov
and
insl
shll
arpl
jo
pop
adc
jne
mov
and
cmp
push
xchg
mov
shrl
mov
stos
and
or
inc
mov
lahf
ffreep
adc
pop
sbb
stos
xchg
cld
and
and
pusha
mov
pop
ret
loopne
jg
nop
mov
adc
adc
sbb
lret
and
adc
enter
mov
in
and
add
hlt
and
subb
pushf
cwtl
loope
push
cmpsb
or
and
test
xor
jns
outsl
jno
cmp
mov
out
aaa
push
pop
cli
cmpsb
dec
push
call
addr16
outsl
mov
or
test
xchg
les
call
sahf
lock
notl
rol
sub
and
cmpsl
std
inc
ja
pushf
add
imul
mov
add
dec
dec
push
gs
es
mov
xor
push
pop
and
cmpsl
sbb
shrb
je
leave
ljmp
and
xchg
jb
lret
inc
das
and
and
andb
lcall
movsb
repnz
push
fisubrl
outsl
mov
pop
lea
shrl
sub
into
and
mov
pop
push
mov
jns
jmp
add
and
xchg
dec
fwait
pop
sub
mov
fildl
dec
fbstp
sub
stos
mov
cmp
add
xor
sbb
std
mov
out
ljmp
sbb
mov
lds
nop
mov
sub
mov
or
imul
add
test
aam
jo
xor
cmp
rcl
int
and
jle
sbb
sbb
ficompl
or
inc
int
push
mov
punpcklwd
adc
pop
cmpsb
test
and
popa
pop
mov
lock
negl
fcmovb
inc
sub
fnstcw
sub
mov
xchg
and
mov
aas
js
mov
ret
xchg
jae
das
adc
xor
loope,pn
fdiv
lcall
and
fs
xor
jne
and
push
and
loopne
mov
cmpsb
jnp
jae
enter
lods
dec
push
clc
adc
push
pop
jmp
and
mov
xor
je
inc
or
xlat
les
xchg
jecxz
insb
pop
pop
mov
add
fildl
je
mov
popf
and
fsubrl
pop
and
pop
lods
test
or
xchg
and
mov
jl
lret
and
pop
movsb
iret
call
adc
jge
sub
and
fbstp
and
decl
mov
dec
lds
aam
add
mov
es
and
inc
imul
sbbl
and
sub
pop
fstps
lret
dec
jb
or
jmp
scas
add
stos
xor
pop
mov
inc
icebp
fs
cmp
dec
sub
rorb
add
loope
pop
xor
jns
imul
xor
xor
rcrl
pop
out
idiv
ljmp
pop
aas
or
scas
mov
aad
xchg
cmpsb
popa
mov
mov
push
jg
sub
outsb
sbb
push
ret
cmp
rcrb
pusha
nop
and
add
fdiv
jg
daa
sub
jne
cmp
xchg
repz
andl
movsl
add
mov
push
andb
dec
mov
sub
jns
or
push
adc
push
das
fcompl
mov
sbb
lods
data16
and
icebp
xchg
cltd
and
dec
cs
aas
mov
out
push
cmp
outsl
ljmp
jne
inc
mov
lods
or
add
fcmovbe
push
sub
gs
movsl
xchg
mov
xor
and
int3
push
xor
fs
sub
jmp
mov
stc
stos
jl
aaa
and
popa
test
mov
push
jno
aad
and
add
xchg
xchg
adc
or
xor
sahf
cs
movsb
add
popf
test
inc
hlt
movsb
xchg
insb
mov
xchg
pusha
loope
cmp
push
sahf
push
cwtl
movsb
push
adc
ja
insl
mov
dec
ss
inc
jmp
loopne
and
push
pop
cmp
xlat
or
scas
aaa
pop
xor
mov
inc
xor
xor
jmp
push
and
sbb
test
aad
jmp
adc
in
movd
and
inc
xchg
movsb
add
pop
mov
xor
add
mov
cmp
andl
daa
and
sub
divl
inc
subb
stc
into
imul
and
cmp
pop
ret
sahf
and
and
lret
dec
movsb
and
inc
sahf
mov
pop
and
ds
and
sub
bnd
mov
leave
lahf
and
push
xor
inc
and
jmp
xchg
mov
jno
mov
out
jne
or
mov
mov
test
jge
addr16
jle
inc
lods
or
imul
popf
mov
pop
mov
mov
inc
jbe
lds
inc
add
mulb
scas
jnp
inc
xchg
jae
or
stos
mov
dec
add
loop
loope
iret
pop
sub
or
lret
and
xor
into
notl
andl
xchg
jnp
nop
fiadds
mov
sub
ds
sub
xor
and
mov
and
xchg
adc
and
out
or
divl
in
dec
push
cltd
push
xor
dec
xor
add
and
shlb
dec
cmpl
movsb
mov
mov
loop
test
xlat
rorl
fnstsw
push
push
rclb
pusha
movsb
out
jmp
xchg
mov
xchg
in
push
insl
inc
lahf
and
jl
out
mov
add
jno
sub
mov
xor
dec
mov
dec
pop
sub
pop
pop
and
ja
hlt
and
gs
push
push
adc
popa
mov
and
adc
int3
inc
rorl
movsb
neg
mov
movsb
jno
std
cmpsl
lds
add
test
mov
and
out
movsb
pop
jo
lods
or
mov
lahf
jno
dec
jle
dec
jno
xchg
and
lret
out
in
mov
cwtl
leave
mov
das
call
mov
insl
gs
jl
push
repnz
jnp
mov
or
jno
nop
and
dec
rcrb
andb
fldenv
pop
rolb
imul
or
inc
jp
dec
mov
rol
and
push
movsb
je
lcall
dec
push
and
mov
mov
popf
jge
and
pop
xlat
int3
adc
add
and
imul
loope
adc
mov
lea
shll
jmp
mov
insl
and
enter
inc
and
push
jge
inc
dec
lods
movsb
cmp
popa
inc
jne
leave
pop
xor
enter
push
mov
xchg
fs
dec
xchg
sub
push
cwtl
mov
jle
xchg
jno
mov
push
leave
outsl
xchg
sub
pop
mov
decl
mov
xor
xor
mov
dec
xchg
pop
add
xchg
jbe
xchg
inc
fisubrl
and
clc
test
fsubrl
mov
test
cmpsb
mov
push
inc
das
rep
cld
outsb
ljmp
xor
cmc
mov
fadd
jns
push
test
cmp
sbb
xchg
lea
add
and
lret
jns
roll
jnp
xor
inc
movsb
vmwrite
dec
outsl
andl
insb
dec
dec
fsubs
shlb
pushf
push
bound
sahf
xchg
cmp
hlt
int3
ret
ljmp
loop
aam
push
dec
pusha
inc
dec
mov
pop
int
andl
aad
in
hlt
out
ja
pop
and
inc
js
movsb
fs
and
ja
lahf
and
push
outsb
mov
xor
ret
jl
mov
and
and
xlat
iret
sbb
lret
dec
pavgw
cs
add
and
add
push
movsl
ret
nop
ss
sbb
es
push
or
gs
stc
shll
or
in
mov
mov
es
neg
push
test
fbstp
scas
inc
lods
jo
sub
inc
test
shll
insl
sbb
repz
xor
pmulhw
inc
loopne
jno
popa
out
stos
cmp
enter
aaa
dec
and
jnp
outsb
and
mov
shll
and
pop
aas
rol
mov
fstpl
fadds
and
cmc
dec
andl
lcall
jae
ss
sub
shlb
clc
lcall
out
das
stc
cmp
aaa
xchg
xchg
addr16
testl
in
loopne
and
adc
js
push
and
push
inc
mov
mov
mov
stc
enter
mov
and
mov
fcmovnbe
pop
add
and
adc
and
fsubl
jge
and
push
add
ds
mov
xchg
ljmp
dec
pop
aam
leave
aad
out
in
push
and
jmp
loopne
push
xchg
movsl
push
or
inc
and
stos
pop
or
popa
arpl
loopne
sbb
push
jnp
xor
mov
stos
stos
xorl
test
cwtl
loopne
mov
push
js
movsb
dec
adc
loop
orb
sub
loopne
xor
lods
inc
xor
xorl
shll
lret
mov
ljmp
ja
cmp
jmp
pop
and
xchg
sbb
sub
fsubr
push
mov
add
jb
movsb
mov
fstps
xor
adc
xchg
and
lods
stos
pop
pop
dec
and
inc
fisttpll
and
mov
push
and
movsb
rorb
std
mov
xor
stc
sbb
sbb
aam
fistps
jno
xchg
popa
pop
add
fnstcw
push
mov
cltd
jg
xchg
mov
and
mov
pop
rcl
xor
mov
cli
or
mov
fcomps
sub
dec
inc
or
movb
into
in
sub
stos
add
mov
mul
outsb
adc
and
mov
adc
decb
add
inc
je
cmp
jp
push
pop
xor
dec
jbe
fdivp
into
shl
les
test
xchg
jb
popa
shlb
test
popa
das
pop
outsl
cmpb
inc
loop
mov
mov
insb
pusha
pop
popf
ret
in
lea
push
lahf
lods
cmp
loopne
iret
dec
rorl
pop
loop
arpl
adc
jae
jmp
int3
push
xchg
sub
or
mov
loop
add
jnp
popa
ret
adc
push
movsb
sahf
loopne
sbb
lret
pop
or
and
and
pop
call
and
hlt
inc
mov
and
sbb
out
ss
enter
mov
or
jns
cs
lcall
push
mov
frstor
iret
cli
cwtl
das
inc
mov
and
sub
repnz
vsqrtsd
jge
mov
sub
and
std
stos
xchg
adc
aaa
or
out
and
cmp
das
jae
pusha
mov
in
ror
push
stc
dec
lcall
enter
mov
mov
divb
push
in
add
pop
cmp
sbb
jl
mov
incl
ret
mov
pusha
inc
cli
xchg
rorl
cmp
sbb
test
insb
rclb
xchg
pop
out
shll
incl
jecxz
push
and
sbb
cmpsb
pop
outsb
mov
jns
jge
mov
pop
mov
sbb
or
mov
sbb
and
movsb
or
or
add
sbb
imul
jae
and
je
fstps
mov
call
out
outsb
lcall
test
lahf
or
testl
or
push
and
repz
xchg
push
add
push
out
adcb
and
sbb
loope
lock
sti
and
leave
add
jne
loopne
and
mov
xchg
and
call
fsubl
sub
mov
imul
pop
into
dec
inc
insb
mov
fwait
loop
addr16
sarl
daa
gs
jmp
jno
inc
imul
jnp
mov
jl
loop
add
into
and
mov
test
mov
inc
mov
lret
inc
and
and
jno
push
into
mov
std
ljmp
xchg
fisubl
mov
mov
cmp
sub
mov
das
in
xor
push
sahf
test
mov
mov
bound
adc
sbb
inc
nop
arpl
mov
xchg
andl
push
popa
pop
fldcw
pop
gs
data16
add
fs
and
repz
mov
push
sti
sarl
jp
out
in
aaa
movsb
cli
rolb
xchg
inc
scas
sub
and
ret
push
lds
adc
mov
rorl
movsb
rol
mov
das
lds
inc
mov
mov
cltd
push
dec
push
dec
stos
dec
adc
xor
pop
pushf
and
or
mov
es
mov
pop
mov
std
inc
add
push
mov
sbb
xor
inc
cwtl
xchg
and
aas
in
scas
xor
pop
inc
dec
push
mov
int
mov
or
adc
adc
test
jg
and
daa
jecxz
push
xchg
adc
cmp
nop
push
xor
js
and
mov
movsb
inc
sub
jmp
or
and
and
mov
jno
in
jmp
cmpl
loop
test
pop
xor
dec
mov
mov
hlt
xchg
adc
xchg
and
sub
loope
push
mov
push
mov
mov
adc
add
and
pop
push
sbb
rclb
aas
mov
sub
push
cmp
insl
dec
jg
cltd
test
test
insl
adcl
and
push
dec
push
and
lods
rclb
or
cmc
and
xchg
jecxz
mov
pop
in
cli
lret
xor
xchg
sub
in
jg
mov
test
and
test
mov
add
sbbl
mov
sbbb
lahf
mov
cmp
or
inc
mov
scas
adc
mov
fsubl
and
adc
mov
mov
pop
mov
inc
sub
and
cmp
leave
sahf
push
xor
stos
mov
call
push
insb
and
fbld
mov
ret
xchg
ja
or
enter
aam
xorl
cmp
push
cltd
jmp
adc
inc
mov
loopne
arpl
jbe
leave
ljmp
mov
xchg
icebp
rclb
andb
loop
inc
mov
lahf
xchg
andb
inc
push
push
mov
mov
push
ret
and
fbstp
sahf
and
rcr
dec
loopne
and
insb
sbb
in
inc
out
xchg
mov
sub
aaa
test
cltd
insb
pop
mov
loopne
popf
lea
in
ss
fisubrl
outsb
mov
mov
ljmp
icebp
test
and
xorl
inc
hlt
add
mov
fmuls
pop
arpl
scas
fidivl
mov
mov
fistps
into
not
and
inc
jns
and
mov
and
jl
mov
add
mov
andb
call
popa
idivb
adcb
xor
inc
mov
pop
and
mov
jg
or
cmp
dec
pop
and
and
or
sbb
sbb
or
sarb
test
jge
mov
dec
xchg
rclb
imul
pop
mov
ret
je
jno
das
sub
std
jno
xchg
cmp
add
jge
decl
mov
test
adc
andl
adc
and
or
xchg
addr16
and
and
pushl
jl
inc
popa
repz
and
push
and
sbb
mov
pop
inc
mov
mov
add
leave
xor
shrl
pop
mov
aad
jne
jecxz
mov
lds
mov
pop
mov
lahf
add
sbb
or
out
insl
jecxz
jb
xchg
and
push
mov
cmpsb
push
push
and
add
mov
scas
js
mov
cmp
mov
mov
xor
and
pop
pop
and
and
add
adc
cmpsb
andl
xchg
and
and
out
fisubrl
add
shll
mov
mov
test
clc
mov
repz
jecxz
dec
mov
insl
mov
dec
iret
mov
pop
scas
and
xchg
bound
loop
and
aam
xchg
lcall
adc
xchg
and
xor
push
pop
mov
xor
mov
mov
pop
inc
xlat
out
rclb
jle
lods
xor
mov
pop
lods
xlat
sarl
dec
sub
mov
lea
dec
popa
sbb
arpl
xor
and
sbb
cmc
lret
xchg
loope
pop
pop
clc
cltd
or
loop
repnz
lahf
test
xor
sub
xor
pop
xchg
sub
clc
fdivr
repz
mov
and
mov
sti
lods
adc
fsubs
mov
jnp
cld
mov
jmp
and
dec
push
jecxz
cmp
dec
pushf
push
pop
and
cli
dec
pop
outsl
test
and
rol
cmp
clc
add
fdivl
outsb
and
adc
pop
call
repz
in
sahf
out
insl
add
add
sbb
ret
xor
and
aad
addb
mov
cltd
pop
mov
and
push
xchg
and
cmp
sub
jge
fiadds
pop
arpl
or
jae
dec
shrb
lret
xchg
and
and
ljmp
mov
push
subb
xchg
les
cmp
cmp
loopne
outsl
inc
sbb
mov
andl
pop
pop
cmp
lcall
mov
dec
daa
xchg
xchg
inc
and
pop
sbb
loopne
notb
push
popf
js
and
or
pushf
and
sub
mull
and
adc
int3
add
fucom
addr16
cwtl
aas
sbb
mov
pop
fnstenv
popa
leave
loopne
push
adc
pushf
and
in
test
cld
aaa
push
rcl
mov
and
and
scas
popf
inc
mov
mov
cmp
and
sub
bound
sub
dec
notl
popa
shll
rolb
xor
std
loopne
xchg
stos
and
hlt
mov
icebp
jl
insl
stc
jecxz
ret
cmp
jmp
jl
test
jmp
out
push
outsl
cltd
push
inc
arpl
movsl
and
xor
and
xchg
es
bound
and
mull
push
jns
adc
adc
dec
jae
pop
mov
js
sbb
jle
push
add
sub
fidivl
test
and
mov
aaa
push
int
and
dec
lahf
cmpsl
ss
das
adc
fnsave
jbe
lret
insb
loopne
mov
int3
test
in
roll
arpl
sub
fdivrl
lods
cli
xchg
in
icebp
and
mov
jo
dec
cmp
sbb
xlat
mov
jmp
xchg
push
xchg
mov
cmpsl
sahf
insl
add
inc
or
xor
in
mov
stc
pop
je
loop
daa
sub
cmp
cmpsb
jno
stos
push
cmp
gs
xchg
imul
insb
jne
push
mov
xchg
cmp
jmp
cmp
jno
test
mov
add
lret
nop
and
fsubl
loope
repnz
xor
call
and
lods
cld
test
roll
and
cmpsl
fcomps
cmp
mov
lods
and
gs
mov
inc
les
dec
arpl
inc
lahf
cmpsb
jne
adc
in
push
lods
and
xchg
movsl
inc
dec
cmpsb
fwait
gs
mov
in
dec
pop
call
repnz
pop
frstor
mov
mov
fisubs
data16
mov
lret
inc
add
bound
popl
in
es
mov
dec
xorb
aas
and
popa
mov
jae
add
jbe
pop
cmp
andl
and
jl
and
mov
leave
aas
cld
and
add
pop
add
and
jmp
sbb
cmpb
or
int
mov
lret
out
and
test
lock
lcall
push
adc
add
arpl
popa
std
sahf
scas
inc
mov
addr16
popf
ficomps
call
in
test
pop
lods
sbb
fsubrp
or
mov
mov
mov
mov
addl
les
movsb
pop
and
icebp
fsubrs
cmc
pushf
out
and
xlat
pop
bound
adc
and
xchg
sbb
and
dec
pushf
sahf
jbe
je
and
jns
aad
sbb
dec
movsl
pop
aam
lock
jp
jno
mov
mov
faddp
jge
popa
rcll
cmpb
cwtl
pop
and
mov
pop
lahf
and
lods
subb
iret
clc
cmpsl
sub
gs
jle
and
ljmp
and
lcall
enter
movsb
idivb
and
lret
sub
mov
inc
lods
insl
loope
jge
add
sbb
mov
jp
sti
popa
xor
inc
test
hlt
xchg
gs
or
sbb
in
cmp
test
xchg
adcl
jnp
ss
or
inc
fstpl
pushf
insl
nop
test
lods
xor
mov
push
pop
sub
xchg
test
ja
aaa
lret
daa
mov
sub
jno
cmp
test
mov
add
mul
push
lock
in
cmpb
mov
sub
push
dec
out
in
inc
jge
mov
xlat
popf
sar
daa
and
stos
nop
test
scas
pop
leave
add
mov
and
popa
cli
test
inc
and
push
add
sbb
rcrb
pop
and
sub
mov
mov
lds
dec
xor
and
test
and
stc
addb
sar
and
loopne
or
les
and
xor
adcl
pop
es
jp
sbb
add
movsb
daa
lret
repz
imul
or
jecxz
jne
and
cltd
insl
jns
mov
pop
xchg
adc
jno
out
loop
cmp
jne
pushf
and
mov
repnz
sub
jno
sbb
in
and
call
adc
cmp
popa
iret
xor
mov
loope
cmp
xor
mov
cmp
mov
lods
jecxz
iret
and
adc
dec
stos
inc
fnclex
sbb
xor
aaa
mov
sbb
scas
addb
mov
adc
fdivl
insb
add
out
mov
jae
jnp
jns
bound
mov
jne
xchg
outsb
mov
mov
inc
lock
cmp
dec
in
cwtl
mov
cmp
lea
push
dec
push
sbb
imul
and
cmpsl
movsl
iret
mov
bound
jmp
std
ficomps
mov
stos
test
int
cmp
ja
and
daa
adc
fisttps
xchg
xchg
mov
aad
leave
and
lret
jb
sbb
and
jge
push
lods
adc
jae
pop
movsb
cmp
or
cltd
dec
inc
pop
clc
xchg
ret
and
imul
fwait
sub
lock
and
test
data16
shlb
test
lahf
sbbl
data16
and
pop
call
aas
cmp
and
pcmpgtd
pusha
in
mov
pushf
scas
stos
add
xchg
jns
or
ja
and
mov
aas
push
and
rcrl
and
add
mov
pop
or
pop
push
push
xor
cmpsl
and
ljmp
cmpsb
adc
das
call
fistpll
andl
loope
jmp
popa
dec
mov
push
xor
adc
jno
xlat
push
fsubs
aaa
cli
test
xchg
pop
cmpsb
iret
xor
inc
jmp
and
and
xchg
dec
js
pop
add
pushf
mov
cmp
bswap
add
inc
fimuls
movsb
test
cmp
jae
lcall
sbb
add
jne
lret
pop
sti
scas
sbb
or
xor
push
mov
inc
popf
jp
out
dec
movsb
arpl
addb
ret
addl
mov
cmp
subl
sub
and
jnp
dec
cmpsb
loopne
pop
stc
and
rcll
mov
sbb
add
and
aas
aad
scas
fsubrs
test
pop
scas
adc
and
incl
lock
sbb
pop
out
adc
mov
icebp
cwtl
pop
and
dec
push
pop
rolb
and
mov
cmc
mov
mov
imulb
inc
roll
cli
cld
or
shrl
rcrb
sub
sbb
and
fldt
jge
and
push
push
gs
xchg
aam
and
dec
jg
mov
pusha
icebp
sbb
add
and
insb
sub
inc
sub
inc
loope
shr
mov
cmc
fidivl
pushaw
xor
out
and
mov
and
mov
and
mov
scas
into
and
add
add
sub
imul
ja
cmp
arpl
inc
hlt
in
push
imul
pop
repz
and
fwait
push
push
popa
clc
int3
add
xchg
and
xor
xor
xlat
jnp
push
cmp
ret
loop
cmpl
and
push
ret
cmpsl
and
sbb
jo
fadd
es
repz
out
movsl
xchg
cli
mov
adc
push
push
lock
stos
jmp
fsubrs
fbld
jecxz
in
enter
into
and
push
push
jge,pn
and
dec
dec
mov
cmp
js
ftst
and
movsl
stos
and
call
xchg
adc
adc
ds
das
jno
mov
and
inc
xor
in
pusha
movsl
sbb
les
and
inc
hlt
clc
cli
jb
cmp
xchg
mov
pop
cmpsl
mov
xor
and
push
adc
shlb
pop
sub
movsl
popa
jp,pn
clc
sub
scas
mov
jbe
and
mov
jnp
and
pop
nop
push
cmp
shrb
mov
jns
test
cli
into
and
cwtl
add
adc
std
xchg
cmp
push
mov
mov
xor
out
nopl
and
or
lods
mov
mov
sbb
pop
stos
and
mulb
aas
shrb
cmp
adc
repz
adc
and
jo
fstpt
mov
xchg
mov
and
rcrb
and
stos
dec
mov
xchg
loop
jb
loopne
test
sbb
mov
leave
cs
leave
daa
and
mov
mov
lock
push
cltd
and
pop
and
pop
dec
pop
sbb
shlb
fidivrs
shl
rorl
jno
sub
jns
pop
mov
adc
cmp
ror
imul
das
cmp
dec
mov
add
aas
cmp
inc
and
or
sub
or
ret
and
out
lods
das
cld
inc
popa
cwtl
xchg
fs
rorl
std
and
mov
pop
dec
and
jge
arpl
test
dec
lds
mov
mov
xor
out
stos
or
fistl
add
lea
inc
movsb
iret
imul
aaa
pcmpgtw
sub
mov
jl
and
mov
cmp
mov
inc
jae
mov
pop
and
dec
movsl
xchg
stos
and
and
arpl
mov
inc
mov
jno
aas
frstor
pop
call
cmp
xchg
push
and
mov
movsb
lea
add
test
into
in
xor
inc
xor
inc
sbb
nop
stos
mov
xchg
push
sub
and
adc
in
fbstp
push
and
cmpsb
push
scas
and
xchg
dec
mov
pusha
ja
and
mov
jecxz
and
ja
rorb
xor
std
movsb
mov
loope
adc
outsl
adc
aas
roll
dec
ss
cmpsl
stc
and
mov
inc
test
test
add
xor
jae
and
arpl
mov
mov
popa
dec
mulb
mov
sahf
stos
inc
mov
mov
test
pop
adc
push
popl
mov
mov
movsb
xor
sti
and
mov
cmpsb
popf
pop
xchg
and
movsl
mov
mov
loop
xor
and
xchg
push
rclb
dec
mov
and
ret
cli
dec
loope
mov
mov
pushf
mov
pop
mov
out
fcomps
mov
jne
push
ffree
xor
lods
cmpsb
and
sub
mov
push
cli
shrl
mov
jo
cmp
scas
or
add
lret
jno
pop
shll
adcb
and
hlt
insb
jl
in
cmc
and
fs
xchg
lods
dec
and
cmp
scas
mov
xor
xor
sub
adc
push
das
push
cmp
adc
jno
clc
test
sub
push
shll
outsl
pop
push
stos
dec
loope
inc
leave
mov
and
inc
into
pop
out
movsb
dec
lahf
push
sub
mov
mov
or
pop
out
pop
sub
insl
mov
inc
mov
xor
sbb
pop
and
dec
mov
int3
sbb
cmp
xchg
jge
sub
jl
lahf
mov
adc
addl
and
mov
and
shrb
jbe
fisubrl
cmp
clc
andl
inc
mov
stos
stos
mov
pop
fcoms
and
sbb
and
test
adc
pop
in
pop
jmp
dec
iret
shrl
cmp
bound
xor
call
jae
jb
and
call
scas
xchg
in
aaa
push
cmp
test
xchg
add
sbbb
bound
and
scas
sbb
xchg
enter
jae
test
xor
stc
jmp
clc
and
and
outsl
sub
sub
scas
push
cmpsl
andl
push
pop
mov
xchg
addr16
ss
sub
fs
fldt
orl
aas
js
and
push
loope
jecxz
lds
mov
xor
cli
cmp
pushf
ljmp
inc
pop
cmpsb
les
jle,pn
inc
lret
mov
rcrl
pop
jecxz
das
jb
inc
xchg
movsb
dec
in
sbb
jnp
inc
aaa
daa
adc
and
sbb
cmc
leave
dec
pop
inc
and
mov
mov
enter
subb
outsl
out
jb
lock
adc
lods
out
shll
sahf
jle
aam
shrl
push
mov
push
jge
sbb
dec
xchg
dec
cmp
loope
xlat
popa
push
or
mov
movsl
mov
orl
movsb
mov
in
mov
jo
rclb
mov
push
loop
ret
sbb
jo
iret
mov
in
das
fistpll
fwait
mov
sbbl
cmc
mov
mov
pop
pusha
pusha
xchg
shlb
xchg
sub
cs
sbbl
fs
inc
enter
xor
push
fsts
jno
xor
pop
and
dec
pop
or
sbb
ret
les
or
xchg
sbb
cmp
iret
and
loopne
and
and
jge
add
mov
aas
pop
sbb
pop
arpl
and
sub
das
pop
mov
sbbl
xchg
iret
mov
popa
push
stc
jmp
aam
and
popf
mov
and
call
fstl
fsubs
repz
mov
test
xchg
and
cmpsb
lds
inc
in
sbb
mov
daa
ss
insb
jb
and
or
in
push
add
pop
loope
loop
popl
push
mov
mov
push
or
lds
ljmp
test
mov
pop
add
xor
and
dec
mov
fdivs
cmp
pop
mov
inc
pop
cmp
xchg
in
and
jns
push
shl
and
xchg
jmp
and
mov
repz
fnstcw
mov
jo
mov
mov
mov
and
test
xlat
call
push
imul
popa
popl
pop
aaa
mov
jne
popf
mov
cmc
ja
inc
dec
xchg
test
mov
cmpsl
push
aad
mov
and
pop
out
cmp
pop
imul
and
push
sbb
mov
out
mov
lret
fwait
jmp
lods
in
orl
fisubrl
es
imul
and
sub
jmp
dec
insb
lods
inc
loopne
pusha
dec
cmp
jl
jo
ficoms
push
add
fistps
shll
push
ficoml
das
jecxz
cld
popa
idiv
mov
pop
nop
add
xchg
jle
ja
inc
leave
imull
popa
imul
jb
and
and
mov
xchg
cmp
mov
and
mov
insl
push
in
fnstenv
das
orl
arpl
subl
cwtl
jo
and
and
sbb
jge
ja
pop
and
add
and
dec
cld
and
mov
mov
enter
cmp
ds
mov
mov
sbb
fwait
andb
mov
je
cltd
adc
and
aaa
outsb
or
ret
enter
aam
mov
jge
icebp
inc
fstl
insl
mov
mov
or
popa
sub
add
repnz
and
in
test
sub
push
and
mov
and
out
or
jecxz
and
into
sarl
shl
jb
clc
out
fwait
dec
popa
xchg
pushf
push
add
nop
xchg
or
sahf
dec
out
fld
insb
cmp
dec
cli
add
pop
sub
mov
jno
and
mov
adc
and
mov
inc
pushf
stos
pop
push
imul
inc
addr16
dec
sub
sar
sub
and
jle
mov
lods
and
stos
lret
scas
jns
and
lahf
mull
xor
dec
sahf
and
pop
pushf
test
cmp
inc
sbbb
mov
push
inc
xchg
mov
push
jmp
push
imul
adc
aam
fsubrl
mov
xor
and
or
out
cltd
cmp
and
je
aam
and
xor
adc
shrl
lods
xor
sahf
pop
test
clc
mov
jne
push
and
mov
dec
mov
ja
subl
add
lcall
push
jl
fsubrs
mov
into
hlt
jno
mov
sub
and
and
xchg
and
sub
frstor
sub
and
test
mov
pop
shll
ljmp
lods
sbb
in
sti
dec
mov
ss
insl
test
outsl
mov
or
dec
xchg
adc
fstpt
movb
xchg
shrl
into
icebp
sbb
jns
push
lods
mov
scas
and
sahf
jl
je
icebp
and
daa
loope
subl
rep
fldl2t
jae
mov
xor
lods
hlt
lahf
in
enter
loop
cs
xorl
sub
test
push
jo
cmpsb
sub
mov
cmp
sub
push
jnp
fs
xchg
call
adc
xor
pop
arpl
dec
cs
insl
inc
notl
lods
stos
fs
mov
push
and
out
xchg
cli
or
dec
jp
adc
mov
push
ret
pop
stc
and
push
lcall
jle
mov
dec
mov
popa
dec
out
fistpl
xchg
sub
mov
mov
scas
and
pop
clc
out
add
and
dec
sbb
std
mov
push
and
in
movsl
xorb
daa
xchg
ljmp
test
insb
or
cmp
popf
pop
jnp
xchg
je
test
cmp
lea
stos
dec
sub
gs
xchg
shr
xor
pop
cmc
and
js
mov
insb
sbb
mov
xor
clc
jg
xor
inc
and
push
inc
mov
scas
loope
nop
subl
jp
xchg
jns
pusha
stc
push
xor
pop
adc
lods
out
add
test
subl
int
pop
sbb
and
dec
sub
and
repz
fisubrl
jge
loopne
test
and
xor
movsb
sbb
mov
xchg
sti
popa
add
and
dec
ss
sub
and
push
mov
popa
inc
mov
or
inc
scas
cmp
ds
nop
inc
jge
mov
sbb
fsubs
mov
and
dec
jge
mov
pmulhuw
rcrb
jns
stos
movsb
movsb
test
pop
ss
sbb
dec
and
inc
mov
push
das
add
iret
pop
mov
pop
lret
cli
and
pop
inc
jmp
mov
push
pop
xor
mov
adc
sti
mov
mov
cmpb
mov
and
les
and
or
xchg
xor
xchg
out
mov
test
rclb
cltd
push
int3
or
sub
mov
and
cmc
mov
cmpsb
jecxz
and
mov
xor
adcb
push
dec
mov
scas
pop
pop
sub
pop
jns
pop
mov
in
cmp
lahf
add
in
js
mov
fwait
test
loope
pop
sbb
popa
cmp
aam
je
stos
pop
std
stc
movsl
xchg
jo
mov
pop
jnp
stc
inc
test
xchg
xchg
dec
icebp
cld
pop
sub
ret
icebp
fistpll
xor
aaa
pop
leave
gs
jle
pop
fmuls
mov
and
mov
popf
jnp
dec
sub
repz
xchg
shrl
mov
in
mov
inc
test
dec
adcb
lds
mov
pusha
fisttps
inc
fwait
lods
push
and
lahf
jae
add
dec
test
xlat
outsl
add
lock
jge
out
fimull
mov
push
stos
inc
test
xchg
popa
test
loopne
sub
imul
mov
lret
sub
daa
sub
gs
pop
push
and
stos
dec
xchg
cld
jns
push
das
cmpsl
mov
mov
jno
mov
popa
pop
ja
stos
jp
adc
or
fsubs
cmp
xchg
mov
pushf
nop
mov
subb
mov
loop
inc
and
adc
xchg
stos
pop
jl
dec
inc
push
dec
xlat
lret
add
int3
test
jg
or
insl
ja
xor
sbbl
and
je
add
mov
pop
mov
stos
push
in
adc
movsl
mov
jbe
xor
xchg
stc
and
pop
xor
adc
cmp
and
orb
std
ret
sbb
xor
cmp
mov
mov
xchg
pop
icebp
sub
xlat
adc
jno
push
sub
shlb
add
push
and
jp
sbb
xorl
or
inc
jl
cwtl
mov
mov
jo
sbb
ds
das
and
fstpl
push
add
sub
push
jno
sub
aad
xchg
mov
fldl
pop
adc
das
inc
cld
pop
jge
subl
scas
ja
not
push
adc
xchg
pop
xchg
mov
and
insb
sub
call
ficoml
insl
in
push
add
jl
movsb
mov
and
lea
mov
cmp
mov
cmp
lret
ret
ljmp
mov
and
mov
ret
push
cmp
add
xor
rcrl
mov
pusha
pushf
push
inc
inc
andb
xchg
out
add
mov
and
and
pusha
je
int3
sti
imul
popa
xor
pop
cwtl
dec
add
cmp
pop
mov
int3
and
pop
pushf
insl
jno
sub
sbb
jmp
mov
test
adc
iret
subl
xchg
cli
push
push
xor
test
cwtl
fstpl
xchg
pop
fbld
mov
jecxz
mov
fdivrl
rcrl
dec
es
pop
inc
adc
lahf
mov
sub
enter
sbb
mov
loope
leave
das
scas
mov
inc
and
and
or
call
std
mov
lock
xor
lret
adc
and
sarl
sub
jge
insl
and
push
shlb
ljmp
cmp
imul
pushf
sahf
cmp
icebp
sub
push
rcll
mov
aas
sub
lods
cmpsb
jnp
dec
fistpl
sbb
or
and
jle
add
and
and
arpl
pusha
sti
test
push
push
push
and
clc
jge
mov
jle
or
push
push
stc
cmpsb
fisubs
push
sub
repnz
fidivrl
popa
mov
xchg
mov
xor
push
fcoms
mov
or
lock
push
test
sub
and
push
out
ret
mov
dec
inc
ds
stos
test
mov
dec
aaa
cltd
inc
cwtl
xchg
xor
fsubs
imul
stos
adcb
loop
shlb
addb
mov
cs
cwtl
in
pop
pop
loopew
stos
and
push
sub
test
shll
cmc
insl
pushf
aas
sub
and
mov
cmp
and
lcall
cmp
and
mov
fwait
repnz
out
pop
jno
lds
add
xor
pop
and
mov
sbb
popa
push
lods
add
and
jp
lret
and
xorl
sub
mov
out
and
outsb
and
or
pop
and
decl
sub
test
in
mov
test
mov
test
lea
mov
jns
aam
in
mov
xchg
dec
mov
mov
insl
rcrl
jmp
xchg
fldenv
lret
push
stos
add
jge
jnp
push
dec
inc
or
imulb
sbb
jp
lea
and
xchg
ljmp
and
aam
dec
mov
sbb
mov
insb
dec
add
pop
aam
sub
dec
std
and
sbb
sbb
loope
loopne,pn
push
orl
scas
adc
jg
pop
sub
add
pop
jns
xchg
and
out
test
dec
test
xchg
sub
or
mov
nop
aam
dec
dec
or
and
movsb
cmp
pushf
int
add
xor
pop
hlt
rorl
in
push
mov
mov
dec
mov
mov
adc
inc
out
rol
and
fs
aaa
std
inc
int
out
push
add
in
das
ret
mov
bsf
jp
or
push
xor
push
jle
and
addr16
iret
push
test
cwtl
stos
in
sbb
add
stos
mov
dec
push
dec
ret
and
xor
jne
outsl
or
cmp
push
xor
lahf
push
stos
and
shlb
mov
jmp
xchg
adc
jp
dec
lock
or
aaa
aas
bound
mov
sub
push
xchg
cmp
jae
or
and
pop
loope
jbe
lret
adc
add
das
xor
adc
test
shll
push
das
lock
and
add
add
or
xchg
adc
subl
or
pop
xchg
addl
ret
aas
ljmp
dec
pusha
mov
jo
lsl
ss
dec
cmp
adc
cmc
xchg
movsl
mov
jp
mov
cmp
outsb
adc
int
xchg
mov
lret
les
loop
xchg
jno
dec
lahf
mulb
cmpsb
inc
clc
pop
sti
sub
in
movsl
sbb
inc
jno
fists
iret
cmpb
test
mov
movsl
push
mov
and
or
das
or
icebp
call
popf
pusha
xor
dec
add
mov
and
pop
iret
jnp
inc
cmp
jmp
xor
test
sti
xor
fnstcw
int
and
mov
xchg
rcrb
push
xchg
push
mov
and
mov
mov
leave
nop
pop
flds
xchg
ljmp
mov
ficomps
jge
push
dec
sub
push
push
xchg
daa
xchg
sahf
sbbl
les
and
js
addr16
mov
and
sub
push
les
dec
std
stc
jo
and
push
mov
dec
and
in
data16
ret
or
in
cmc
mov
xor
sbbb
push
or
mov
sub
cmp
xor
and
loope
popf
int3
sbb
stos
dec
pop
push
ficoms
pop
inc
and
inc
sbb
out
stos
push
xchg
jb
in
dec
ret
in
ljmp
xchg
shl
ret
in
inc
daa
popa
std
push
cmc
loop
sub
fstpt
xchg
aad
jnp
cltd
mov
inc
adc
sub
and
inc
or
xchg
std
movsb
sbb
pusha
push
cmp
add
popf
sarb
xor
cmp
inc
jg
leave
rolb
xlat
shrb
dec
ljmp
in
and
xor
and
cmc
push
roll
cmp
pop
pop
adc
test
mov
mov
rorb
mov
xchg
lcall
mov
add
jns
jmp
ficoml
leave
mov
call
add
les
inc
cmp
aaa
and
push
mov
jmp
push
mov
and
jnp
lock
nop
stos
and
out
jae
pop
movsl
and
xchg
mov
jg
fisubrs
pushf
clc
dec
dec
and
into
xor
and
aad
mov
shlb
mov
inc
test
inc
cmpsb
cmp
popa
xor
jno
int
ret
movsb
push
cmpsb
adc
les
icebp
inc
cmp
pusha
outsl
sahf
or
lcall
dec
adc
jns
inc
cmp
pop
or
loop
neg
and
add
sub
jge
pop
inc
dec
xor
push
ss
or
and
cmc
js
cmp
mov
xor
and
xor
lds
das
push
lock
and
xchg
sub
popf
cmp
shr
mov
xrelease
lahf
and
push
fdivrl
dec
iret
and
inc
pop
mov
leave
sub
enter
in
mov
pop
mov
sbb
sti
cltd
mov
push
and
pop
rcrb
popa
leave
fcmovbe
pop
inc
fwait
xchg
or
pop
mov
nop
xor
and
and
js
sbb
and
sahf
add
fisubs
test
fsubr
jae
loope
mov
jge
jne
xor
mov
call
fwait
and
out
xchg
int
ret
shrb
xchg
dec
push
fs
sub
jno
and
and
mov
mov
jnp
adc
or
in
mov
inc
sbb
aam
add
xchg
xor
insb
push
pop
ror
and
mov
adc
fnstenv
and
xchg
xchg
sub
sub
movsl
pop
test
ja
lds
clc
aam
movsb
and
pop
mov
mov
adc
jns
shl
mov
outsl
pop
popa
cmp
pop
push
and
dec
pop
adc
push
xchg
aad
movsb
dec
xchg
dec
pusha
cwtl
mov
mov
pop
fwait
rcrb
aad
out
rorl
mov
sub
cwtl
and
popa
sbb
aas
inc
das
addb
lds
ret
daa
lods
push
mov
and
xchg
popf
push
and
cmpl
jl
or
mov
cmp
mov
fidivl
das
inc
pushf
or
movsb
xlat
mov
sbb
adcl
xchg
fistps
dec
add
jg
mov
je
test
jp
movsb
imul
scas
rorl
fwait
in
aam
lret
mov
ret
xchg
jmp
roll
and
adc
je
inc
mov
fsubl
test
push
mov
inc
gs
scas
stos
scas
sub
mov
fldpi
push
xchg
push
nop
movsl
and
or
push
jnp
scas
and
mov
push
mov
and
std
mov
cmp
adcl
add
aas
scas
mov
popf
dec
fnsetpm(287
adcb
aam
add
ret
push
gs
rclb
mov
movsb
and
imul
cmpsb
xchg
lcall
jecxz
or
jno
loope
jnp
ds
dec
and
sti
cli
sarl
lahf
pop
scas
dec
pushl
mov
pushf
scas
bound
movsl
adc
cmp
lahf
mov
in
jns
imul
sub
popa
in
adc
and
jb
pop
xchg
and
add
fucomip
cli
int
xchg
dec
and
inc
mov
xchg
scas
pop
mov
test
xchg
push
push
xor
daa
les
jl
cmp
push
and
mov
inc
cwtl
fsubs
rcll
mov
cmp
jle
lea
cmp
xor
pop
das
movsl
ret
stos
xchg
testl
jb
popa
jo
movsl
enter
dec
mov
test
aaa
in
mov
ret
mov
xorl
xor
add
pushf
sbb
sbb
fidivs
xchg
les
jae
jmp
inc
bound
pushf
repnz
and
sub
and
cld
dec
pop
sub
xchg
roll
gs
andl
fwait
insb
xor
or
stos
and
sub
sti
cmpb
xchg
jmp
sbb
inc
cmp
and
mov
test
jl
and
jmp
das
dec
pop
and
mov
test
mov
in
flds
pushaw
movsb
inc
sub
mov
add
sarl
loopne
dec
int
xchg
and
fisubrs
insb
sti
xor
lahf
xchg
and
push
or
movsb
jb
iret
inc
subl
out
push
sub
and
mov
xchg
and
lret
dec
mov
jbe
ds
imul
js
mov
fwait
mov
mov
adc
test
dec
nop
insb
cmp
movsb
das
outsb
das
loop
loope
shll
and
adc
jae
inc
sub
push
aam
and
paddw
jmp
push
push
xchg
mov
sub
push
xor
and
mov
mov
sub
icebp
lea
popf
cs
mov
jecxz
mov
lock
or
lods
mov
in
loope
sbb
xor
insl
and
movsl
and
dec
mov
repnz
or
mov
mov
push
add
mov
sti
xlat
pop
mov
mov
in
sub
add
add
sbb
fmuls
cmp
push
aaa
sub
mov
or
bswap
fdivrl
fistl
xchg
jae
hlt
jne
mov
mov
popf
cli
xchg
and
sbb
adc
cmp
xchg
push
rol
cmpsl
lea
hlt
mov
mov
das
subl
std
and
dec
mov
cmp
xor
test
movsb
xor
dec
movsb
and
push
stos
xor
push
xchg
and
aaa
inc
outsl
and
jl
nop
ds
push
or
mov
and
cmp
aad
icebp
test
jo
inc
or
jg
fdivrs
repnz
loopne
mov
jle
push
xor
inc
sbb
and
ficompl
imul
dec
mov
and
jb
frstor
addl
or
and
cld
shll
and
xchg
clc
mov
sti
inc
stos
nop
or
aam
pop
mov
and
or
pop
xchg
scas
ss
movsb
sub
les
aas
lea
inc
fcoml
add
jmp
and
sbb
fs
push
pusha
mov
mov
sbbl
jo
cld
scas
sub
mov
movsb
sub
insb
insl
jns
stc
lahf
pop
or
adc
das
int3
das
pop
and
sub
rcrb
and
jl
fs
int
js
movb
xchg
and
fistpll
add
rorl
cmp
sbb
and
aas
rcll
rcll
or
mov
fisubs
pop
cltd
sub
dec
imul
cli
adc
and
add
add
mov
out
jne
and
imulb
xor
sahf
xchg
pop
pop
xchg
and
and
xchg
pop
cmpsb
and
dec
cwtl
mov
and
in
sbb
fldl
xchg
in
stos
movsb
lock
rorl
sbb
popa
call
std
imul
loop
mov
repz
push
test
cmpsb
pop
fldcw
push
in
jnp
adc
jl
in
sbb
jge
jmp
and
fisttpl
std
mov
popf
and
leave
popa
in
pop
add
xchg
shrl
inc
andb
out
dec
adc
and
into
pop
test
adc
and
scas
call
mov
xor
test
adc
jbe
and
aas
dec
xchg
and
mov
inc
mov
sub
out
mov
scas
and
and
enter
pop
jl
idiv
test
clc
or
mov
pop
push
add
and
gs
cltd
lds
js
jg
call
inc
data16
insb
and
pushf
push
cld
and
inc
shll
and
pop
mov
adc
sub
je
and
and
outsl
sub
and
pushf
inc
sbb
pop
imul
lods
lea
scas
sub
and
sub
ljmp
aad
js
cmp
inc
jmp
jle
int3
mov
sub
xchg
cld
movb
sub
sub
or
mov
inc
adc
mov
sub
outsl
xor
mov
xchg
push
popf
jmp
out
loopne
jmp
jnp
loop
mov
cmp
cli
pop
and
loope
cmpb
fwait
jo
push
xor
leave
rclb
push
and
xchg
and
and
rolb
mov
mov
xchg
xor
scas
lcall
and
sub
push
cmp
inc
cmpl
and
add
adc
mov
cmp
outsl
loope
push
add
push
insb
jp
xor
cmpsb
enter
cmp
sbb
and
xchg
dec
xorb
or
mov
and
ds
sti
push
cmp
jg
loopne
cs
fldl
imul
or
cld
jne
and
out
notl
xchg
stos
xor
jmp
sbb
imulb
inc
lret
out
fnstenv
ljmp
jbe
push
mov
or
and
ffreep
jns
loope
and
push
cmp
push
pop
xchg
mov
ret
and
pop
cmp
lahf
jl
cs
lods
lods
ret
fldl
pop
or
gs
push
jge
iret
sub
std
push
mov
gs
fnsave
mov
inc
sbb
and
loop
xor
sahf
add
adcl
shll
and
out
push
push
push
and
clc
push
cmpl
sbb
cld
test
or
sub
frstor
ds
push
and
mov
shl
dec
xor
lahf
orb
stc
testb
jae
cmp
loope
lods
fstps
xchg
push
inc
lea
loop
push
sahf
insl
xor
push
mov
or
ljmp
mov
inc
push
xchg
andb
sub
or
sub
cmp
loopne
cmp
nop
rclb
popa
sbb
jbe
mov
jmp
or
stos
outsb
jb
and
mov
pop
and
in
xor
outsl
mov
pop
notb
mov
fstl
and
ret
and
jle
push
mov
leave
inc
and
stos
andb
mov
cwtl
mov
and
dec
ret
in
cmp
mov
mov
es
jl
test
ret
popa
outsl
and
cmp
xchg
mov
adc
leave
adc
xchg
sbb
into
js
mov
outsb
jl
add
decl
lret
inc
inc
xorb
sub
es
frstor
fnstcw
mov
sar
das
dec
pop
jp
mov
push
mov
xchg
pop
lea
xchg
sarl
andb
in
lcall
scas
push
out
dec
addr16
sub
add
loop
dec
xor
and
scas
sbb
cmp
les
sub
fisttpl
sub
hlt
push
mov
mov
jns
cmp
jle
xor
inc
lock
adc
add
xchg
imul
push
bound
fs
cmpsl
add
inc
call
insb
mov
pop
cmp
push
xor
dec
add
push
xchg
add
and
adc
or
cmp
jge
loope
stc
adc
pop
add
sbb
pop
xchg
insb
gs
xchg
and
arpl
or
push
sub
ja
in
pushf
xorb
arpl
cmp
push
and
decb
mov
mov
and
cmc
aas
jle
cmp
loopne
lret
fs
push
leave
pop
sbb
sub
jmp
shlb
and
lcall
adc
push
xor
add
adc
adc
ljmp
movsb
movsl
jno
inc
fwait
clc
mov
or
mov
xchg
roll
imul
cltd
imul
mov
xchg
fidivs
je
push
fcoml
and
imul
enter
jg
xchg
fcoml
or
cld
mov
repz
fwait
jnp
mov
cwtl
test
cld
dec
iret
shlb
js
cmp
mov
fmuls
pop
mov
std
mov
and
in
jne
adc
movsb
cwtl
pop
aad
ffreep
xchg
mov
xor
xchg
testl
es
hlt
cli
xlat
push
aaa
add
std
xchg
stos
int
aas
subl
cli
dec
test
imul
and
sbb
xlat
jno
scas
or
and
and
movsb
scas
mov
and
popa
xchg
mov
in
sbb
pop
push
popa
cmp
addr16
inc
and
and
xor
stos
loope
aam
pop
stc
xor
push
mov
xchg
scas
or
out
push
lds
ficomps
adc
xchg
add
add
mov
daa
xor
call
orl
add
and
ret
sub
sbb
cmpb
cmp
fdivrl
arpl
aam
xor
pop
cli
scas
sub
outsl
frstor
cmp
shll
ss
dec
out
sti
inc
and
inc
shr
cmp
xor
fildll
stos
and
iret
popa
movsl
dec
stc
mov
in
aad
xchg
adc
leave
mov
ss
mov
loopne
dec
lods
popa
or
icebp
jb
shrb
int
mov
pop
fidivrl
and
cmp
xchg
and
lret
mov
popa
outsl
out
ret
pop
dec
cmp
xchg
lods
add
push
sub
ljmp
xchg
sar
popa
imul
jmp
cld
lret
xor
mov
clc
mov
ljmp
mov
popf
pop
and
inc
dec
cmp
inc
and
loope
cmc
and
add
cmp
lock
dec
call
sbb
dec
jle
xchg
push
shlb
push
and
or
test
inc
mov
cmp
xchg
mov
mov
mov
add
dec
dec
cmp
or
jae
int3
and
ds
sbb
cli
bound
pop
lahf
imulb
ret
dec
rorl
stos
test
inc
and
sub
ss
mov
and
shll
cmpsb
adc
and
pop
rcrb
or
das
mov
adc
mov
mov
movsl
dec
push
adc
lret
pop
out
xchg
lret
inc
mov
gs
fistl
ljmp
and
js
and
mov
xor
fstps
mov
fnsave
xchg
and
sub
and
pop
xor
std
and
xor
int
pop
stc
pop
test
lea
xor
and
clc
mov
push
leave
and
jb
xlat
cmpsl
das
in
and
shrl
jle
push
push
dec
fistpll
xchg
enter
pop
addr16
and
sbbl
mov
dec
lcall
cltd
sahf
popa
adcl
mov
popa
pop
mov
add
and
loope
adc
mulw
rcl
jne
stc
stos
fwait
int3
and
aas
sub
ds
push
insl
and
mov
adc
dec
cwtl
movl
mov
adc
adc
popa
mov
mov
add
lods
pop
lds
das
xchg
dec
or
xchg
test
andl
daa
out
sbb
sahf
movsb
std
fmull
fcmovbe
aas
dec
int
add
jge
pop
sbb
mov
jmp
andl
cltd
psubusb
jb
mov
sub
pop
fwait
notb
adc
movzbl
pop
jns
scas
mov
outsl
loope
orb
jae
pushf
lods
mov
stc
xchg
popa
pop
ret
std
push
and
pop
dec
mov
aam
push
sbb
xchg
sub
and
and
mov
jmp
add
data16
stos
mov
push
cmpsb
fwait
pop
popa
ret
jmp
push
ja
js
cmp
loopne
mov
outsb
dec
test
add
push
jge
lea
cmp
aas
cltd
xchg
inc
imul
aam
mov
or
xchg
jle
fucom
mov
loope
orl
pop
and
je
imul
and
jp
mov
cmp
and
data16
test
or
mov
mull
add
ja
and
out
push
adc
neg
shll
lahf
daa
and
lfs
mov
mov
movsb
mov
mov
push
pop
xchg
jbe
add
loop
pop
adcb
xchg
and
hlt
repz
insb
mov
ret
xchg
test
mov
nop
stc
mov
pushf
loope
jle
loopne
and
insb
mov
push
movsb
icebp
jne
test
int3
jg
mov
and
dec
push
or
sbb
test
jg
test
adc
push
and
gs
cwtl
jg
fidivrs
enter
lock
pop
cmp
push
dec
cmp
push
lds
repz
mov
and
outsl
scas
xchg
xchg
mov
js
and
add
inc
jp
fwait
and
cmpsl
push
cltd
pop
mov
stos
xor
and
xor
subl
in
dec
and
pop
and
jecxz
or
fcomps
mov
nop
addl
add
aad
fs
loop
and
popf
stc
jmp
pop
xchg
cmp
and
dec
shrb
cltd
mull
sbb
lret
sbb
mov
pop
test
mov
mov
inc
xor
daa
idivb
movsb
lahf
push
dec
xor
fs
pop
ljmp
xor
and
pop
scas
sti
cmpb
add
lods
adc
movsb
popa
pop
cmp
push
movaps
hlt
stc
mov
clc
out
xor
movsb
popa
cmp
popa
mov
fcompl
push
xor
pop
add
movsb
dec
xchg
cmp
movsb
sbb
pop
test
add
push
or
mov
mov
mov
lea
in
outsl
dec
add
or
cmpl
push
mov
ret
and
cmp
lods
dec
mov
xchg
and
sub
lret
and
mov
test
sbb
push
cs
gs
xlat
insb
and
sahf
les
popa
jno
push
adc
sahf
add
popf
pop
out
outsl
xor
inc
mov
imul
sub
push
pop
push
adc
cmp
push
in
and
lret
xchg
add
shll
loopne
jnp
popa
mov
sub
lcall
cs
xor
or
in
push
sub
fadds
in
xor
lods
mov
icebp
sbb
hlt
dec
adc
frstor
shll
adc
sahf
sub
mov
lods
mov
push
xor
push
in
adcl
and
das
or
inc
scas
cmp
and
adc
fdiv
movsl
mov
cmp
xor
bound
and
adc
ja
push
and
popf
stos
daa
sub
fwait
cmp
nop
sub
dec
and
cmpsl
popf
lock
and
dec
shll
jmp
xor
outsb
inc
xchg
xor
lods
js
jno
lcall
or
aam
dec
and
clc
stos
adc
sbb
jl
pop
scas
xlat
ficoml
fsubrp
movsb
and
es
outsb
jbe
and
std
cmp
mov
push
negb
add
fwait
or
add
dec
pop
sar
cmp
ret
mov
pop
mov
xchg
pusha
fimuls
outsl
sbb
addr16
push
fmuls
shlb
dec
clc
popa
mov
int
push
mov
out
push
pop
mov
xor
fimull
add
jb
jnp
and
insb
aam
aas
std
cld
movsb
roll
cmc
pop
or
mov
popf
iret
hlt
and
mov
and
jmp
cli
mov
xchg
cmp
sub
lahf
add
ss
xchg
dec
outsb
xchg
xor
pop
mov
in
icebp
imul
push
insb
subl
movsl
and
push
xchg
and
popf
mov
lods
pushf
or
pushf
push
lcall
jno
std
dec
sbb
and
insl
mov
pop
mov
cmp
mov
adc
mov
popa
addr16
pop
mov
and
sbb
and
mov
and
mov
adc
mov
lret
xor
shlb
add
pop
jo
pop
hlt
mov
mov
push
in
and
in
or
aaa
cli
outsl
xchg
or
fwait
lahf
mov
lea
popl
cmpb
lret
pusha
frstor
sub
cld
out
jl
outsb
and
test
inc
hlt
jecxz
imul
cwtl
or
jbe
fdivs
loope
jne
bsr
daa
push
test
aas
xchg
out
jecxz
sbb
jns
mov
in
fucomp
movsb
push
jo
es
test
xchg
jp
scas
pop
push
subb
mov
xor
xchg
out
sub
cltd
gs
lahf
and
lds
and
and
pop
call
xchg
ja
or
test
into
aaa
and
iret
xor
push
push
push
adcb
test
mov
insl
xchg
mov
push
repz
and
adc
stos
std
ja
daa
aad
jo
and
mov
lahf
scas
test
cwtl
xchg
aaa
inc
fcmovbe
inc
pop
jl
ja
push
pop
cmc
orl
and
sbb
dec
and
pushf
outsl
and
jae
or
xor
and
stc
mov
and
shrb
insl
out
and
ret
stc
and
test
aaa
hlt
inc
scas
std
mov
loope
jecxz
pop
or
ja
aam
and
and
pop
sub
jb
ds
sbb
movsl
movsl
pop
add
adcl
ja
in
dec
pushf
jne,pt
ficomps
mov
sub
or
push
and
dec
mov
inc
fmuls
xchg
jns
daa
cmpsb
mov
out
add
and
add
and
negl
fisubl
pop
stos
push
mov
jl
fbld
push
rcl
adc
int3
out
stos
inc
adcl
xchg
mov
push
dec
pushf
push
xor
arpl
mov
je
xchg
jns
mov
movsb
jl
xchg
xchg
test
fwait
pusha
popa
in
aad
push
cli
out
repnz
test
and
cmc
popa
nop
mov
sub
je
and
test
and
jge
xchg
das
rcl
adc
enter
mov
add
mov
mov
cmp
mov
cmpsb
mov
and
out
dec
cmpb
cs
je
xorl
sbb
cmc
jp
pop
mov
adc
sub
add
and
inc
add
dec
dec
inc
dec
stos
lds
xrelease
mov
mov
and
jns
aaa
popf
fnstenv
and
lds
and
jp
mov
insb
xchg
mov
sub
mov
aam
add
and
push
mov
bound
lcall
and
jecxz
dec
je
xor
adc
popf
mov
jnp
cs
pop
and
xor
frstor
adc
pushf
icebp
push
insb
mov
push
repnz
mov
pop
cmpb
xchg
fisubrl
gs
mov
pusha
jmp
xchg
and
hlt
sub
adc
idivb
inc
insl
xchg
mov
xor
aam
jnp
dec
sub
lock
xchg
and
jno
fcompl
ret
inc
push
in
and
popa
pusha
mov
jl
sub
pop
pushf
movsl
push
mov
mov
mov
data16
cmpl
mov
movb
jecxz
ljmp
and
push
cld
mov
adc
mov
push
and
ja
sub
insl
sti
xchg
lret
xchg
and
mov
and
mov
test
xor
inc
sub
jecxz
dec
stos
and
cmp
sbbl
xor
jg
shrb
mov
insl
xor
ret
subl
popa
ret
imul
sbb
pushf
sub
out
push
test
mov
dec
shlb
push
jmp
ljmp
mov
mov
dec
outsl
pop
cltd
ljmp
movsb
cwtl
mov
and
add
imul
or
scas
ss
add
int
and
jl
mov
jle
xchg
jmp
sub
adc
mov
cltd
aaa
mov
mov
fidivl
inc
sub
fnstcw
xor
mov
and
in
inc
stos
and
imul
rclb
stos
fs
mov
cmp
sbb
out
pop
shl
and
js
in
mov
test
jge
mov
and
fs
inc
movsb
push
xchg
movsb
lcall
dec
xchg
shrl
lret
and
and
xchg
imul
dec
test
ds
inc
popa
out
pop
pop
push
outsb
and
add
xchg
into
fsubl
pop
cmpsl
jns
adc
xor
push
pop
lods
fs
xchg
and
or
mov
cmp
or
and
inc
adc
fldenv
cld
cs
inc
add
cmp
es
xchg
mov
mov
addl
add
jge
mov
pop
sbb
cltd
fimull
push
fbld
ss
dec
mov
push
in
pop
jae
aaa
mov
jne
sbb
sti
xchg
inc
mov
lods
stos
xchg
fs
and
dec
jnp
push
lds
popa
push
sub
cmpsl
and
pop
shrb
and
mov
cld
and
push
ret
outsb
jbe
sbb
mov
out
stc
pop
cltd
imul
mov
outsb
sub
loop
xchg
xor
cmp
bound
in
data16
pop
and
inc
push
les
ja
lods
call
test
in
jo
imul
aad
and
or
cmpl
loopne
mov
inc
add
and
pop
aas
mov
and
das
sub
notb
jnp
mov
pop
pusha
and
push
movsl
lret
stos
not
cltd
pop
bound
jle
xchg
and
aaa
jp
sbb
popa
cmp
inc
and
dec
pop
add
sub
outsl
push
mov
mov
and
sbbb
out
pushf
mov
into
cltd
insl
mov
sbbl
gs
sub
push
lods
and
xchg
enter
sbb
cmc
cmp
cli
xchg
or
and
icebp
sbb
add
scas
xchg
ja
mov
add
setns
dec
rcrl
hlt
xor
and
in
or
pop
and
lods
inc
nop
mov
mov
clc
push
and
xlat
dec
iret
hlt
shr
or
push
mov
add
imul
adc
std
pusha
int
or
out
xor
rcll
dec
pop
jmp
mul
cmp
inc
pop
pop
fadd
test
dec
pop
pop
sahf
rcrl
ss
push
cmp
fistl
xchg
xor
xor
gs
inc
mov
xchg
and
data16
xchg
jle
jl
repz
lock
jp
dec
enter
push
lret
aad
push
pop
xor
lock
dec
add
int
frstor
and
mov
mov
loope
inc
lahf
pop
and
loop
sbb
mov
jmp
pop
cld
pop
std
dec
frstor
and
jmp
lcall
push
rol
imul
and
addr16
push
pusha
and
and
inc
and
pop
shl
outsl
push
mov
push
lock
ss
xor
in
mov
mov
lea
sub
xor
push
lods
aaa
popl
xorb
and
sbb
pop
shrb
and
js
mov
cmp
insl
jge
pushf
arpl
mov
mov
jg
cmp
mov
and
adc
push
push
pop
push
mov
sub
inc
sub
mov
xor
sahf
je
jns
movsb
xor
into
outsl
pop
jmp
pop
or
divl
cmpl
and
addr16
and
movsb
clc
cltd
and
js
and
jmp
int3
cld
pop
cmp
imul
push
lods
or
and
jp
or
aaa
enter
jne
aas
inc
sub
add
and
cltd
popf
scas
inc
arpl
das
push
fwait
and
mov
sub
cmp
test
mov
xor
xchg
or
icebp
faddl
popf
shl
mov
movsl
aad
and
sub
sbb
cltd
cmp
dec
ret
push
popa
push
lods
cwtl
and
push
fisttpll
adc
pop
jmp
cmp
jp
pop
and
xor
subb
in
aam
imul
iret
push
ja
and
jno
jg
xchg
pop
inc
stos
das
and
fimull
lods
push
fldcw
dec
and
jbe
pop
jno
add
addr16
xchg
adc
add
cmpsb
out
cli
and
adc
ret
lods
mov
lahf
dec
loopne
xchg
adc
popf
lock
movsb
or
iret
cmp
jg
mov
xcrypt-cfb
cmpsl
fs
mov
mov
xchg
mov
mov
scas
fisttps
mov
les
enter
iret
nop
rolb
dec
mov
stos
jmp
enter
xchg
inc
in
jp
sub
in
popa
pop
test
push
outsl
and
push
xchg
cltd
and
xor
dec
popa
inc
push
test
lods
cld
out
inc
jnp
lret
pushf
jmp
je
mov
inc
mov
daa
fbstp
out
scas
sub
or
inc
xor
enter
add
xchg
movsl
loop
and
popa
and
test
push
jecxz
gs
xor
imul
xchg
and
hlt
cmp
pop
enter
xchg
sub
pop
sbb
jp
and
movsb
into
and
fidivl
jo
in
or
lods
push
jmp
and
js
mov
aam
mov
mov
mov
repnz
nop
pop
pusha
pop
jp
xor
add
mov
add
jno
xchg
jb
lcall
fstpl
mov
out
mov
stc
pop
ljmp
in
mov
sbb
inc
hlt
push
aam
xor
in
movsb
incl
pop
mov
add
das
sbb
mov
xor
test
pop
push
xor
test
adc
sub
push
inc
and
xchg
lods
mov
cmp
cli
pop
in
bound
xor
and
or
xchg
aas
cld
in
push
and
adc
inc
enter
adc
mov
and
aaa
mov
nop
and
outsl
sbb
or
je
rolb
les
movsl
mov
adcb
sbb
mov
and
dec
add
and
ret
xor
push
and
push
adc
mov
daa
and
xchg
js
ja
and
out
dec
insb
mov
mov
jbe
mov
xchg
ror
or
into
xchg
imul
xor
dec
mov
pop
mov
adc
or
pusha
and
fisttpll
push
jo
inc
orl
mov
and
mov
test
pop
cmpsl
inc
jnp
push
mov
jl
ja
repnz
xchg
mov
jnp
int
push
sub
fsubrs
shll
into
or
dec
in
outsb
popa
arpl
call
xchg
lock
push
imul
cmc
push
mov
and
and
call
clc
sub
pop
shll
pop
xchg
xor
mov
inc
call
and
int3
repz
clc
sahf
inc
sub
push
xchg
inc
pusha
push
mov
movsl
jbe
and
iret
mov
aaa
pop
pop
jecxz
dec
in
sub
or
mov
dec
inc
and
jnp
and
lcall
xor
pop
xchg
adc
in
aam
test
sbb
addl
hlt
jmp
pop
jo
sbb
pusha
scas
and
test
jmp
lcall
aad
iret
push
xor
inc
sbb
mov
dec
and
jecxz
pop
je
in
into
mov
push
xchg
cmpsl
adc
mov
movsb
and
xor
fbstp
xchg
lock
xchg
or
pop
lret
push
and
mov
in
ret
imul
in
cmc
and
enter
faddl
fimull
mov
cmp
imul
cmpsb
push
sbb
mov
and
cmc
jmp
jne
cwtl
mov
popa
sbb
xchg
insl
or
pop
es
mov
push
fs
cmp
bound
and
jle
mov
and
out
push
and
pop
loope
stc
nop
inc
outsl
and
lds
mulb
fs
add
jge
fldcw
leave
outsb
mov
call
push
les
movsl
sbb
xor
mov
push
scas
fdiv
in
adc
test
aaa
mov
loope
push
cmovno
pop
shll
mov
jno
jmp
int
or
or
xchg
add
adc
dec
jnp
rcl
add
adc
mov
mov
and
pop
inc
rclb
push
sti
and
adc
xor
mov
imul
sub
jg
and
and
daa
adc
shrl
int
jl
fsubl
leave
jmp
repz
repnz
rolb
cmp
inc
xlat
mov
dec
jo
shrb
pop
addb
divb
fists
dec
jne
push
jg
push
adc
cmpsl
push
pushf
int3
mov
add
jb
xchg
jnp
cs
or
jg
jle
int3
imul
sahf
xchg
and
jb
mov
dec
xchg
jne
das
sub
iret
mov
xor
dec
mov
repnz
adc
test
movsl
add
jge
mov
and
bound
subl
add
mov
mov
sbb
aas
push
and
outsl
popa
cmpb
lods
mov
popa
sbb
cmp
push
les
jb
xchg
dec
push
popa
insb
or
loop
inc
mov
mov
mov
cld
popa
shrl
mov
mov
jl
sbb
cmp
mov
pop
out
shlb
push
cmp
fldenv
lea
inc
icebp
xor
aam
and
inc
fs
test
int
and
popf
ret
shlb
cmp
mov
cmp
xchg
add
scas
sbb
adc
dec
stc
mov
iret
xchg
mov
movsb
xchg
push
mov
or
pop
imul
outsl
addl
sbbb
rclb
out
and
inc
sub
fbstp
dec
out
push
and
cli
jne
mov
scas
cmp
pop
movsb
pop
stc
shll
arpl
lea
mov
mov
dec
or
pushf
sahf
and
sti
jle
jl
cmpsb
and
inc
dec
lret
inc
and
loopne
mov
iretw
out
jl
rorb
pop
insl
jns
scas
enter
xchg
mov
xor
push
dec
lret
fs
jg
es
inc
aam
jge
and
sub
jl
and
bound
imul
or
push
adc
lods
sub
xor
adc
mov
popf
and
test
xchg
sub
pushf
test
repz
xor
dec
dec
mov
movsl
push
fisttps
das
mov
vmread
xchg
dec
cmp
es
shrb
push
shrb
cmpsb
jmp
cmpsl
jle
or
std
add
jg
jle
and
sbb
mov
js
xchg
sbb
loopne
lret
mov
insl
dec
xor
ss
movsl
mov
or
pusha
mov
mov
nop
xchg
mov
and
cmp
push
and
adc
mov
rclb
sarl
fbld
adc
in
repnz
and
jnp
shll
adc
mov
add
sub
ret
sbb
sub
pop
dec
mov
xchg
popf
sub
mov
pop
cmp
stos
or
fsubs
lods
aam
into
divb
shlb
andl
jge
jns
add
push
cltd
movsb
inc
and
xchg
frstor
and
jno
fwait
sbb
enter
inc
vpaddd
cli
fidivrl
fwait
out
repnz
adc
fwait
and
add
cmp
sub
pop
ljmp
xor
and
dec
push
or
mov
ss
sbb
movsb
sub
xchg
clc
roll
and
test
sbb
js
loopne
xorb
shrb
fsubr
outsl
jno
mov
mov
insl
movsb
push
je
dec
loopne
inc
and
ljmp
and
pop
inc
sub
test
xchg
pop
aas
cmpl
mov
and
dec
xchg
scas
movsb
push
jl
icebp
xorl
mov
pop
add
mov
lcall
imul
mov
add
push
sbb
loop
fs
jge
lods
movsb
movsb
cmp
and
push
and
or
inc
sub
mov
mov
and
sbb
jp
adc
into
loope
andl
sbb
and
xchg
in
inc
xor
and
pop
pushf
mov
inc
adc
mov
mov
sub
insb
and
shrb
and
lret
and
push
cmpsl
cmp
push
cmpsb
xchg
push
gs
call
push
push
ret
xor
or
popa
xchg
add
pop
cmpsb
jge
jb
out
faddl
push
mov
cmp
mov
into
pop
aaa
xchg
ja
call
fsubs
adc
xor
and
cmp
shlb
jo
cld
fisubs
pop
notb
push
mov
adc
and
sbb
sub
adc
and
out
aas
pop
sbb
int3
pop
icebp
fildll
pushf
and
mov
sbb
or
imul
jp
push
sub
stos
adc
aad
and
add
movq
clc
std
sbb
popa
mov
xor
cld
inc
xor
xchg
mov
mov
out
fnsave
and
inc
jge
ficoms
ljmp
mov
fsubs
push
andb
je
mov
ljmp
jno
push
loop
addl
and
push
ss
sub
cmpsl
adc
xchg
movsb
jnp
push
mov
pop
pop
fidivs
and
scas
xchg
jg
loope
and
mov
int
pop
and
cwtl
inc
xorb
rorb
into
dec
cli
sub
mov
popf
and
sbb
push
pushf
sbb
mov
dec
adc
ds
or
arpl
mov
stos
ljmp
rcr
jno
inc
leave
cmp
fdivr
lret
pop
fldcw
mov
cmp
add
and
cmp
adc
andb
mov
dec
push
dec
fcmovb
and
or
pop
rorb
testl
lods
jb
mov
rcrb
ret
movsb
lcall
jp
popf
and
scas
push
jnp
cmpl
and
fmuls
lock
imul
push
mov
mov
ja
jnp
cmpsl
stos
bndstx
jo
pop
fs
fcompl
popa
sbb
data16
iret
xor
dec
and
adc
inc
std
or
daa
add
and
pop
sahf
push
xor
sub
fldenv
jns
pop
andl
insb
mov
add
push
jae
sarl
inc
test
or
xchg
out
dec
scas
ja
add
or
cmpsl
out
xor
push
pop
pop
jg
mov
xchg
idivl
mov
cmpsb
xorb
sbb
xlat
xor
iret
jb
push
lock
cli
rdpmc
sub
lret
and
lds
and
adc
bound
jp
jno
andl
jnp
imul
and
mov
mov
push
xor
dec
and
insb
scas
pusha
dec
int
je
and
jno
cmp
nop
adcb
iret
cmp
lcall
test
jecxz
pop
into
mov
mov
fistps
mov
and
dec
icebp
xchg
test
mov
xor
sbb
mov
int
icebp
mov
pop
xchg
and
pop
loope
jbe
and
cmp
inc
lret
loop
jl
mov
jae
xchg
loope
enter
stc
mov
inc
and
pop
or
incl
push
cmc
mov
xchg
and
jge
mov
repz
push
pop
inc
and
dec
add
movsb
sbb
xor
pop
cmp
icebp
insb
repnz
xchg
push
or
out
fwait
in
popa
dec
jecxz
push
data16
fdivrl
inc
mov
sub
test
es
or
cmp
cmp
adc
add
and
fistps
inc
mov
shr
popa
xchg
mov
arpl
test
push
popf
push
sbb
loope
enter
loope
push
movsb
sub
mov
test
and
lahf
push
cmpb
iret
add
push
adc
jne
and
into
imul
and
push
push
jns
mov
cmp
test
filds
mov
dec
or
adcl
scas
enter
stc
and
push
jnp
pop
or
ja
lahf
cli
mov
sbb
dec
mov
dec
or
cltd
shrl
mov
jae
cmp
daa
inc
and
test
jno
lcall
mov
iret
dec
popa
xorl
and
add
divl
xor
push
movsb
mov
int3
jno
imul
pop
xchg
stc
mov
xchg
and
push
daa
sbb
mov
sub
lock
ds
jge
and
rcrl
inc
pop
mov
or
adc
jge
sub
mov
shl
movsb
dec
jmp
insl
xlat
sub
sbb
pop
mov
inc
xchg
sub
icebp
mov
cmp
test
aam
popa
cmp
into
mov
push
insl
add
xor
sbb
push
push
jmp
cmp
leave
imul
sub
sti
xorl
sub
jae
inc
mov
mov
xorl
mov
mov
insb
adc
and
push
sbb
shll
pop
je
pushf
les
xchg
and
fidivrl
push
ss
and
cmp
and
and
mulb
insb
dec
push
jae
push
inc
adc
test
dec
popf
cmp
pop
mov
fidivrl
mov
pop
jb
xchg
stos
insl
lahf
push
and
pop
and
bound
test
das
testl
shrb
rorb
mov
xchg
jns
flds
cmp
cs
push
or
adc
mov
xor
jl
mov
mov
xor
insb
cmpsb
ficoms
dec
out
sbb
lods
add
jecxz
in
mov
and
or
pop
mov
fimull
and
inc
out
cmp
cmp
adc
lock
mov
filds
mov
push
pop
inc
push
orb
lods
xchg
xchg
movsb
repnz
ja
ss
mov
movsb
and
pop
cmpl
jp
cmpsb
inc
mov
adc
nop
adc
js
and
pand
mov
push
cltd
xchg
rclb
inc
outsb
cwtl
xor
xor
orb
xchg
jno
icebp
and
mov
xor
or
adc
stc
outsl
popf
cmp
mov
push
cmp
push
fwait
cmp
cld
les
fadds
sbb
insb
sbb
sbb
mov
orb
js
xor
xchg
cmpsl
add
cmp
and
sbb
push
fldenv
imul
dec
push
jbe
dec
cmpsl
push
and
xor
bound
adcb
sbb
jbe
dec
loopne
push
or
push
in
cwtl
and
push
mov
adc
fildll
mov
or
push
in
jno
aad
xchg
repnz
mov
sub
mov
insb
dec
xor
xchg
lock
fstpt
dec
fwait
inc
pop
in
pop
push
mov
and
sbb
sbb
leave
aaa
cmc
xor
imul
push
dec
dec
mov
jae
popa
jle
mov
add
or
ds
jbe
and
jle
pop
jecxz
in
and
cmp
cs
lcall
notl
ja
popa
outsl
lods
and
jg
add
push
adc
dec
and
xor
pop
scas
pop
push
cld
les
loopne
sub
out
and
aam
shll
and
pop
movsb
loop
and
stos
sti
fdivrl
xchg
or
test
pop
int3
mov
aad
and
cs
stos
xchg
jns
inc
and
sbb
shl
popa
push
xchg
arpl
in
push
in
mov
xchg
sub
shr
fsub
popf
sub
loop
js
inc
inc
cwtl
push
pop
jl
outsl
mov
in
arpl
and
out
leave
andb
xor
cmp
and
dec
test
and
xchg
or
mov
jo
mov
fsubl
xor
or
hlt
and
and
cmp
scas
in
movl
cmp
add
add
adc
xor
test
and
sbb
cmp
mov
cmp
add
stc
mov
nop
cmp
sub
jmp
call
push
out
mov
mov
mov
insb
dec
push
popf
scas
push
mov
popa
adc
cmpsl
inc
fdivrl
cmc
push
push
push
jne
and
push
xor
and
lods
fwait
inc
and
repnz
bound
cmp
sbb
and
or
bnd
mov
cmp
xchg
gs
xchg
inc
mov
test
fmuls
aas
lods
xor
mov
cmp
and
stos
imul
inc
hlt
mov
jo
arpl
dec
jge
and
shr
mov
xchg
and
loop
lahf
cs
jno
rorb
out
es
push
and
hlt
jb
and
ja
xchg
nop
sahf
outsb
sub
mov
inc
call
push
cltd
scas
xchg
and
push
scas
sbb
cmp
or
jne
int
and
jmp
dec
and
mov
push
ss
das
cmp
int3
adc
into
addb
gs
xchg
and
bound
xlat
subl
aaa
xchg
and
dec
mov
mov
test
outsl
loopne
cs
inc
or
cmpsl
mov
aam
lods
push
outsl
pop
xor
add
mov
movsb
jno
sub
and
pop
jge
and
mov
sub
sbb
shll
and
and
mov
and
icebp
fsubl
and
bound
inc
push
jbe
popa
push
jge
or
mov
mov
xchg
repz
adc
out
jns
sbb
pop
iret
out
movsb
stc
lahf
lods
push
les
stos
mov
cs
fsubl
sbb
loopne
sbb
insb
adc
ret
stos
jb
pop
sbb
enter
pop
mov
jo
aad
jno
xchg
sbb
and
fstpl
mov
push
insb
jno
adc
out
outsb
sbb
cmpsl
pop
jl
push
mov
nop
aaa
jo
andb
xchg
and
loopne
and
jecxz
cmpsl
push
je
gs
les
adc
xchg
ds
sbb
ja
mov
pop
and
pop
mov
out
addl
cmpsb
xor
and
aam
mov
leave
and
xor
int3
pop
lods
sub
or
jnp
aaa
pushf
mov
sbb
mov
and
xchg
arpl
and
push
aad
movsb
dec
out
and
adc
mov
inc
and
nop
inc
js
push
push
into
xor
es
fwait
sahf
or
mov
sbb
cmc
scas
shll
mov
jge
pop
jg
test
xchg
test
insl
mov
les
testl
scas
iret
mov
xor
or
lea
sarb
icebp
mov
mov
shlb
ss
dec
outsl
ds
mov
mov
xorl
xchg
mov
adc
mov
lret
add
sbb
lcall
in
dec
mov
pop
mov
push
mov
lock
cld
xor
jp
daa
jge
and
lcall
test
fmul
outsb
xor
xchg
mulb
sbb
movsb
ss
inc
jno
gs
mov
fisttpll
test
add
add
ja
stos
lcall
jo
mov
int
inc
mov
and
daa
cltd
cli
lahf
div
and
test
mov
mov
adc
hlt
push
cmp
int
cmp
mov
insb
cwtl
push
mov
pop
pop
lock
inc
call
popa
dec
subb
sti
imul
test
int3
pop
mov
loope
and
out
outsb
sbb
mov
fisubrs
sub
and
cmc
hlt
push
inc
xor
into
and
cmp
aaa
mov
mov
sahf
and
xor
xor
and
frstor
sbb
in
shll
dec
jno
lret
jae
cli
jne
sahf
outsl
mov
daa
jo
pop
jns
lahf
imul
aad
lret
mov
pop
test
xor
dec
xor
xchg
cmp
cltd
push
lcall
push
pop
pop
push
mov
xor
dec
int3
xor
mov
imul
mov
push
fcompl
inc
stos
xchg
add
test
add
xor
aam
push
sub
adc
pop
pop
and
test
pop
insl
bound
and
jg
nop
pushl
outsb
pop
outsl
push
out
stc
add
iret
xor
mov
mov
popa
push
sbb
xchg
mov
and
pop
popa
push
cli
into
sbb
stos
fistps
insl
cmp
xchg
xchg
and
push
addr16
sub
cltd
mov
pop
sbb
lods
testb
and
xchg
ret
sub
mov
sub
and
fistps
mov
das
pushf
sub
aad
and
push
xchg
sbb
mov
test
mov
mov
pop
cld
andl
adc
adc
mov
xor
xchg
and
cs
cmp
xor
sub
sub
sbb
xchg
lret
movsb
cmpsl
and
adc
cmp
mov
push
xchg
xchg
adc
mov
mov
jmp
and
xor
and
add
cmc
mov
jo
gs
mov
and
lahf
imul
cli
sbb
imul
in
and
out
pop
cmp
inc
adc
test
aam
mov
lret
cmpsl
sub
in
ret
pusha
mov
pop
push
jne
andl
shl
sub
inc
mov
dec
cmc
inc
sbb
pop
mov
pop
and
lret
mov
test
iret
add
nop
or
mov
hlt
cltd
sub
dec
or
cmpsb
movsl
and
je
mov
and
dec
cmp
les
push
inc
movswl
cmc
xchg
daa
and
or
jmp
lret
jmp
cmpsl
loopne
xchg
mov
cmpsb
jge
push
lret
pop
mov
in
push
test
in
mov
mov
daa
repnz
push
sub
mov
push
xor
xor
adcl
xor
js
imul
mov
push
cmpsl
out
or
pushfw
popa
das
dec
jg
stos
add
mov
jo
mov
movsb
add
test
popf
loop
gs
push
subl
mov
push
and
pop
aam
add
sahf
push
cmp
into
push
outsl
jge
mov
cmc
inc
jp
jmp
and
jmp
adc
int
inc
movsl
push
mov
in
mov
push
mov
dec
mov
cltd
xor
bound
add
mov
push
fists
aas
inc
movsb
enter
sbb
insl
xchg
jp
sbb
std
and
inc
ljmp
inc
into
push
or
sbbl
xchg
es
lock
mov
adc
ljmp
cmp
adc
dec
aas
inc
and
shlb
cltd
cltd
adc
lods
inc
sarb
add
icebp
and
fs
lcall
scas
ret
ret
fincstp
cmp
enter
xor
xchg
add
into
and
lcall
and
sbb
adc
movsl
push
mov
loopne
dec
mov
popa
jae
xchg
pop
cmpsb
sbb
xor
aas
or
movsb
and
and
mov
movsl
bound
rorb
and
ret
repz
and
in
xchg
stc
push
add
sar
test
sub
xor
mov
xchg
call
fcomi
out
les
ds
mov
sbb
or
aas
xchg
and
orl
insb
dec
cmp
cmpsb
loopne
cmp
and
mov
sahf
xor
xchg
aas
push
fsubs
ds
sbb
hlt
and
lds
jl
sbb
test
mov
cmp
jae
xor
js
bound
in
xor
mov
movsl
rcrl
jle
sub
adc
and
in
mov
repnz
push
popa
rcr
in
aad
imul
sbb
cltd
jmp
and
gs
shll
bound
and
enter
adc
out
popa
repz
lahf
and
mov
repnz
jnp
ret
aas
inc
shrb
and
mov
dec
shl
cmp
and
mov
scas
ds
inc
mov
mov
jmp
lock
mov
std
aas
jmp
test
cltd
sbb
loop
mov
sub
jo
cmpl
mov
push
orl
test
sbb
cwtl
iret
cltd
test
in
fistpll
push
and
jecxz
add
mov
and
and
mov
mov
pop
mov
and
in
mov
mov
clc
and
cli
xor
xor
and
in
out
jo
jb
daa
je
data16
lods
popf
and
mov
push
mov
jg
lds
inc
or
cmp
jp
sub
and
xor
and
sbb
in
fcmovnb
popa
daa
imul
mov
mov
in
add
mov
and
and
std
inc
inc
pop
mov
lahf
aas
test
add
mov
out
aas
lock
daa
push
mov
mov
sub
xchg
and
push
fcmovne
mov
nop
and
test
xchg
shrb
and
mov
and
ja
into
pop
xchg
mov
xchg
pop
loop
popa
cli
push
fwait
and
insb
ret
and
push
sub
xor
cmp
and
movsl
push
sub
icebp
pop
xor
mov
and
mov
lahf
fnstsw
repnz
inc
push
test
xchg
xor
pop
mov
imul
or
and
mov
pop
push
and
cwtl
push
add
ds
je
or
jle
jecxz
outsl
imul
test
movsb
mov
ret
scas
cmp
push
out
cs
push
and
sbb
insl
push
fwait
lret
imul
or
ret
inc
ss
sarb
dec
mov
and
insb
xorb
lahf
dec
jno
mov
leave
xor
shll
div
inc
sbbb
xchg
dec
pop
or
dec
and
dec
push
jmp
add
pop
pop
gs
xchg
and
push
sub
shrl
lds
mov
pop
and
in
jb
mov
dec
out
out
loope
cmpsl
dec
ret
push
inc
fdivl
lock
rcrb
mov
and
xchg
jmp
aas
jp
popa
int
mov
jo
adc
dec
and
fildll
dec
and
xor
inc
and
cltd
loopne
and
jns
int3
pop
cmp
xchg
sti
insb
inc
aam
imul
mov
or
mov
adc
add
inc
inc
lea
sbb
das
loopne
and
loopne
and
mov
out
shr
mov
pop
xchg
shrl
icebp
int
fsub
and
mov
test
movsl
dec
xor
pushf
popa
mov
push
mov
mov
test
into
xor
xchg
addr16
or
aas
fsqrt
sub
mov
push
xchg
fwait
insl
sub
add
push
and
aam
or
insb
and
je
addr16
mov
sarl
and
jo
mov
and
flds
mov
test
jmp
mov
out
mov
pop
jmp
cltd
and
mov
cmp
bound
mulb
jae
fidivrl
fsubp
mov
xchg
and
push
aad
hlt
out
and
inc
imul
popl
outsl
cmp
stc
movsb
inc
mov
cmp
cli
or
and
sub
and
sub
shlb
and
imul
out
shll
pop
sbb
iret
hlt
mov
push
popa
test
sbb
fdivrp
and
sub
fimull
and
xor
and
ds
lea
sub
fdivl
test
push
jae
dec
lret
jnp
es
push
sbb
fsubs
xor
cmpsl
inc
mov
push
jne
jmp
cmp
add
inc
mov
push
insb
mov
and
jb
ss
push
inc
and
xor
insl
jns
add
mov
sub
cltd
iret
jb
and
inc
xchg
mov
ja
sub
fbld
imul
sti
xchg
dec
jecxz
and
push
das
in
mov
cs
sbb
sahf
jno,pn
push
loop
mov
add
push
or
pusha
mov
mov
and
adc
pop
filds
ret
or
out
pop
jp
and
push
push
in
outsb
add
push
aas
lods
fcomps
popa
cmp
and
xchg
sub
jnp
add
popa
in
gs
push
xchg
mov
sub
xchg
or
das
fisubl
mov
lods
pusha
mov
ljmp
nop
fs
hlt
into
test
mov
mov
and
ficompl
xchg
js
in
xor
mov
popa
ret
sub
and
pusha
mov
add
pop
outsl
pop
inc
cmp
cwtl
aas
and
sbb
sarl
and
add
cmp
mov
mov
mov
pop
fadds
and
push
popa
movsb
cmp
ds
adc
out
pop
xchg
mov
mov
aaa
jns
insl
and
dec
fwait
lock
je
and
xor
adc
clc
fidivs
rcrl
push
add
or
fldenv
pop
jae
lret
pop
gs
and
and
mov
ja
and
mov
mov
mov
mov
mov
jge
popf
ja
and
and
cmc
cwtl
mov
mov
call
adc
ret
flds
inc
cwtl
push
jl
cmc
xchg
outsl
mov
push
lods
rorb
movsb
repnz
bound
or
add
lods
cwtl
pop
adc
pop
cltd
xor
addl
mov
dec
insb
cmc
inc
and
jg
insl
sbb
jo
sbb
add
push
daa
push
push
ficoms
and
ds
cmp
cmp
sub
cmp
aaa
mov
and
test
pushf
mov
inc
hlt
repz
jp
rorb
jmp
adc
mov
cmp
clc
cmp
xor
scas
push
mov
jno
add
aam
imul
jne
push
xchg
orl
pop
aas
inc
xor
aad
jge
repz
push
les
mov
test
lock
sbb
cmp
pusha
xchg
mov
and
cwtl
fdivrs
out
adc
lret
jmp
pop
jb
das
pop
pop
inc
and
push
dec
mov
mov
sbb
pop
and
arpl
and
into
xorl
ret
outsl
xor
jge
and
hlt
scas
into
lds
enter
orb
sbb
mov
je
cmp
in
test
in
sbb
shll
out
out
movsl
test
lret
lahf
daa
popf
lock
or
icebp
aas
rol
and
fildl
xchg
lea
mov
mov
fwait
arpl
mov
lods
popa
xor
icebp
fisubl
mov
mov
inc
aas
sbb
jle
xchg
jae
cmp
imul
jb
fdivrs
test
inc
mov
or
imul
dec
mov
sub
scas
nop
adc
inc
ret
xchg
btc
cmp
dec
mov
jg
mov
jp
in
lcall
mov
xor
repnz
scas
mov
xchg
push
or
xchg
pop
push
cmp
insb
adc
xchg
mov
int3
and
mov
dec
aas
adc
mov
mov
mov
and
mov
xor
and
insl
enter
pop
push
es
ss
sub
mov
stc
outsb
jp
and
ret
inc
xchg
imul
xchg
mov
int3
movsb
aam
or
pop
dec
and
mov
in
and
clc
int
and
mov
popf
stos
nop
repnz
mov
data16
flds
lret
sbb
sarb
pop
add
movsb
adc
ret
lea
int3
mov
mov
in
sahf
mov
push
pop
nop
jbe
or
fcomip
and
or
andl
cli
fstpl
cltd
jae
xchg
adc
stos
pop
push
and
andl
lcall
in
pop
je
and
cmp
xor
fiadds
add
xchg
pop
mov
push
repz
mov
push
jno
xchg
mov
ficomps
enter
std
ror
icebp
push
xor
je
jl
jecxz
and
into
cmp
fwait
imul
fs
cmp
aas
and
jno
add
ret
sbb
es
popa
cmc
insl
mov
popa
aad
int3
mov
stc
push
xor
xor
enter
and
outsl
sbb
push
lock
add
aas
xorb
xor
jmp
and
push
sub
jns
cld
ret
aad
sarb
in
xchg
and
xchg
xor
mov
hlt
jl
and
push
add
jle
and
xor
nop
fnsave
xchg
fwait
out
popf
stc
test
test
push
pusha
inc
addl
imul
in
mov
add
rcll
daa
xor
js
mov
popa
gs
mov
or
mov
popa
jnp
jb
add
and
ret
popa
leave
and
adc
je
pop
daa
and
mov
imulb
xchg
pop
movsb
inc
and
pop
movsl
scas
push
jns
and
out
sbb
or
scas
sti
dec
andb
xchg
icebp
mov
test
jbe
popf
imul
popa
call
lock
lahf
pop
mov
add
xchg
push
and
sub
mov
fdivl
sub
or
andb
jmp
js,pn
dec
arpl
and
pop
lcall
push
sbb
xchg
jno
mov
mov
movsl
xor
movsl
mov
lods
sbb
cld
xor
or
and
sar
pop
sub
bt
repnz
dec
dec
fstps
xchg
and
sbb
and
push
inc
mov
inc
popa
mov
out
stos
pop
add
test
fldenv
xchg
xchg
pusha
loop
mov
movsb
ja
das
add
mov
sbb
and
int3
test
icebp
lahf
xlat
add
jno
and
ucomiss
bound
repnz
inc
inc
repnz
jne
adc
jl
jo
jns
mov
xchg
mov
or
mov
xorb
lahf
adc
cmpsl
ficompl
or
test
or
pop
and
lods
scas
sub
dec
fiadds
mov
mov
into
les
fstl
mov
test
jns
lret
mov
cmp
jmp
pop
js
pop
insl
frstor
cltd
jo
aaa
enter
pusha
mov
xor
jno
dec
mov
and
mov
and
mov
loopne
fwait
jp
xchg
mov
lock
and
and
orl
lahf
les
jmp
mov
aas
mov
ja
sti
sbb
or
or
or
lret
push
pop
cs
xchg
add
inc
cmpsl
shrl
lock
clc
xchg
ljmp
mov
gs
mov
cmp
rclb
jae
shl
cmp
xor
xchg
jnp
sbb
enter
mov
fdivrs
popa
ds
aad
stos
repnz
imul
popa
xor
mov
push
addl
and
xchg
cmpb
and
adc
and
jo
fucomp
xchg
mov
jge
jno
jle
xchg
pop
and
xorb
jns
inc
stos
inc
jl
fucomi
and
inc
lods
push
pop
or
and
into
xor
clc
xor
adc
cvtps2pi
imul
dec
or
and
sbb
movsl
in
clc
test
mov
xchg
and
fnstenv
xchg
sahf
test
fdivl
dec
xchg
pop
and
sub
mov
les
and
inc
mov
pop
mov
inc
and
imul
bound
xor
cmovno
or
or
and
ror
dec
adc
ljmp
cmp
es
and
outsl
cltd
cmp
popa
or
mov
fstps
mov
rcrb
and
cmpsb
outsl
in
xor
and
lock
fistl
mov
arpl
cmp
mov
popf
pop
mov
xchg
adc
jecxz
jb
cmp
add
or
push
add
pop
sub
cmp
xor
test
testb
aas
sub
push
add
sub
cld
lcall
sub
in
in
sbb
sbb
mov
inc
add
adc
sub
cwtl
adc
mul
add
sub
add
add
arpl
add
sub
and
xor
mov
mov
mov
push
ret
mov
sub
sahf
out
aad
jg
mov
mov
or
jno
jg
adc
stc
leave
cmp
xchg
push
mov
aaa
or
sub
mov
and
cmc
xlat
fstl
xor
sbb
mov
pop
cltd
orb
lock
addb
and
pop
push
mov
xchg
std
bound
sarb
gs
icebp
mov
popa
fs
mov
cwtl
push
daa
add
mov
add
addr16
xchg
lock
aaa
or
leave
xchg
push
fimuls
sbb
scas
dec
cmp
xchg
xor
je
xlat
in
push
fs
jae
rolb
loope
jb
mov
popa
sbb
sbb
out
out
mov
dec
push
test
adc
push
repz
adc
jno
sbb
nop
cmpsb
push
lret
sbb
mov
xor
in
das
mov
sbb
and
sbb
pop
xor
jne
insl
push
cwtl
sbb
data16
xchg
ja
shlb
and
fadd
pop
push
daa
iret
shll
jp
mov
mov
mov
pop
sbb
mov
ja
and
jg
int
cmp
cs
lods
cwtl
loope
jo
incb
insb
and
rolb
test
pop
jbe
cltd
mov
shrb
js
sbb
xchg
ss
movsb
push
nop
cmpl
pop
movsb
fldl
cmp
dec
sbb
fsubrl
and
pop
rolb
outsb
sub
addr16
xchg
test
pop
hlt
mov
lahf
push
and
mov
cmp
mov
mov
test
mov
stos
and
les
and
pushl
and
mov
and
mov
jae
push
test
add
ljmp
loope
out
test
push
xchg
sbb
sar
and
je
pop
pop
mov
movsb
popf
mov
lods
call
and
adc
jp
push
xor
xor
fsubp
xor
cmp
jmp
fistpll
and
or
sub
bound
vcvtps2dq
leave
arpl
fcoml
outsl
subl
sahf
push
push
xchg
in
std
xor
push
loope
xor
arpl
xchg
and
sbb
int
aam
push
and
mov
fwait
jnp
popf
xchg
aaa
mov
and
aaa
test
pop
icebp
xchg
jb
cltd
and
pop
lahf
cmc
loope
sub
movsb
fmul
cli
push
lcall
popa
loope
icebp
and
ret
mov
lds
adc
and
aas
ret
dec
and
notb
xchg
push
xchg
jns
cltd
iret
add
jbe
mov
and
adc
cld
fstpt
and
mov
adc
cmp
addb
jecxz
and
pop
pop
jne
ficompl
cmpsb
repz
sbb
inc
and
ss
sahf
push
and
clc
inc
sub
and
cwtl
mov
mov
and
lahf
inc
push
cmp
mov
cmp
inc
pop
lock
dec
xor
or
popa
pop
sarl
jmp
cmp
int
sbb
and
sub
or
xchg
xorb
popa
hlt
cli
jecxz
and
mov
sub
arpl
xor
popf
movsb
mov
xchg
test
test
fsubl
cwtl
frstor
jmp
and
out
outsb
pop
and
testb
mov
enter
or
lret
mov
es
int
movsb
jno
push
lea
push
inc
imul
fisubrs
jbe
xchg
jnp
and
dec
popf
test
mov
mov
imul
repz
cmp
daa
xor
and
loop
movsb
push
ret
pop
inc
inc
cmpl
jg
lock
jmp
cwtl
insb
cmp
cli
push
lods
push
xor
mov
mov
jp
sbb
fildl
sahf
hlt
mov
and
lds
ss
sub
jb
enter
into
hlt
and
jl
in
mov
cmpsl
cmp
cmp
std
shll
add
mov
lods
das
adc
and
loope
test
or
pop
pop
or
dec
dec
aaa
in
icebp
loopne
pusha
or
adc
and
and
adc
sub
lods
and
stos
rorl
stc
push
inc
xchg
mulb
cld
subl
and
mov
leave
mov
loopne
shlb
bswap
xor
loope
add
les
sub
inc
scas
and
inc
mov
das
lods
movsb
cmp
or
nop
xchg
push
and
ret
test
sti
fisubs
inc
scas
bnd
and
mov
cmp
and
out
pop
mov
jnp
mov
and
xor
insl
lds
dec
mov
es
nop
sbb
outsl
mov
ss
xchg
leave
mov
xor
push
popf
push
jnp
inc
test
jge
aam
mov
mov
mov
and
in
push
mov
pop
or
mov
mov
mov
insb
in
push
and
or
imul
or
lret
cli
and
fsubs
mov
xchg
outsl
imul
jge
and
pop
lret
inc
inc
jle
inc
push
cmp
out
mov
into
mov
addl
mov
or
cmp
xchg
or
push
adc
or
mov
mov
fidivs
repnz
andl
fisttps
clc
push
js
sahf
adc
push
adc
sub
xor
xchg
cmp
clc
and
cli
insb
and
xchg
lods
adc
jno
imul
call
inc
jl
orl
or
mull
daa
xchg
int
test
or
cmpsb
add
mov
shlb
mov
xor
pop
nop
lret
push
in
xor
into
mov
scas
inc
cmp
popf
call
xor
jp
ret
and
and
xchg
mov
and
and
shl
cmp
or
jo
sub
and
and
lds
dec
inc
and
push
xor
js
and
mov
shr
and
sbb
imul
jle
and
cmpl
add
inc
icebp
out
das
lds
in
cmp
mov
mov
sub
push
sbb
mov
sbb
mov
sbb
jge
adc
inc
jne
negl
and
rcrb
dec
enter
xor
ljmp
xchg
or
shll
test
and
lret
mov
fcom
xor
xchg
sti
inc
mov
push
xchg
adc
dec
and
jge
fwait
push
mov
jb
jbe
aaa
sub
icebp
xchg
je
test
mov
inc
ljmp
mov
je
sbb
fstl
sbb
hlt
xchg
fdivrs
iret
push
out
cmp
ljmp
jecxz
lahf
aad
and
mov
pshufw
cmc
mov
popa
insb
loope
and
cmpsl
xchg
dec
inc
notb
jb
rolb
and
movsb
jae
test
adc
sbb
rcrl
xlat
jne
fisttpl
mov
adc
jns
aaa
aas
xchg
inc
push
push
and
mov
adc
and
sbb
loop
and
lds
fsub
xor
adcb
mov
cmp
dec
cmpsl
adc
lods
popa
jns
rolb
jbe
and
or
jecxz
jg
popa
xchg
jg
sti
and
adc
ret
and
pop
or
mov
add
inc
or
lods
nop
cmp
into
pop
aaa
push
push
leave
inc
push
cmp
mov
mov
adc
ficoml
xchg
in
inc
adc
cltd
mov
push
mov
call
test
mov
sub
arpl
xchg
mov
and
jg
push
out
pop
cld
inc
popa
lock
and
cmp
lahf
out
lcall
xchg
cwtl
or
aad
fbld
ljmp
adc
push
cmp
loope
xchg
insl
cmpsl
js
pop
jge
and
sub
cmp
push
xchg
repz
cli
mov
fucom
scas
adc
jb
andl
orb
inc
lret
icebp
adc
cli
lahf
pop
mov
popf
cwtl
fidivrs
call
adc
imul
sub
popf
addb
jl
jns
push
aas
and
iret
cmp
inc
xorl
push
mov
mov
dec
push
in
daa
and
mov
fists
popa
jo
dec
sahf
es
pop
and
clc
dec
aas
mov
stos
and
aam
mov
add
movsl
ss
add
imul
or
outsb
iret
and
add
lret
nop
and
aam
std
inc
cmp
jmp
fisubl
mov
add
lret
or
iret
and
dec
nop
mull
mov
jb
test
dec
les
fimuls
mov
jbe
and
mov
mov
bound
inc
imul
mov
pop
cmpb
and
jmp
add
push
sbb
xchg
push
cmp
out
imul
repz
push
adc
cltd
mov
and
addb
stc
and
imul
add
pop
mov
insb
pop
dec
inc
cs
lcall
jbe
stc
and
clc
and
pop
push
and
mov
fstl
mov
jnp
sub
and
push
mov
lea
jbe
rol
call
mov
and
sub
mov
and
xor
out
sub
outsl
das
and
out
mov
fwait
jo
bound
push
push
test
pop
add
pusha
mov
cmp
fsubrl
and
lock
adc
int
pop
roll
pop
xor
punpckhwd
arpl
lea
pop
dec
test
or
shrb
mov
push
test
xchg
lock
addr16
inc
pop
xchg
pop
jecxz
mov
cld
and
rcll
xchg
adc
repz
aas
and
dec
rcrb
xchg
in
cltd
inc
sbb
movsl
and
std
push
mov
or
lcall
sbb
push
outsl
repz
loopne
pop
and
sbb
and
insb
or
pop
movsb
rclb
popf
mov
and
gs
in
lds
and
test
cmp
in
mull
mov
and
ficompl
jge
dec
aas
cmp
or
sbb
fidivs
mov
xlat
xor
sarl
mov
xor
pop
adc
jmp
and
xchg
pushf
mov
jns
adc
xchg
mov
sbb
cmpl
jnp
and
aas
push
adcl
or
mov
jg
cli
and
adc
ds
jne
jns
std
inc
push
into
ljmp
mov
mov
aam
shrl
and
pop
mov
adc
mov
mov
push
in
scas
movsb
jmp
es
mov
and
or
sub
and
push
xchg
scas
and
lcall
data16
popf
xorl
add
mov
jnp
xchg
jo
inc
xor
pop
pop
popa
popa
push
dec
lock
stos
repnz
mov
movsl
sbb
push
stos
xchg
mov
iret
mov
add
adc
push
pop
xchg
dec
popf
leave
sub
cmp
mov
inc
jne
shll
test
lret
push
lahf
sub
or
pop
imul
cmp
aad
push
fsubrl
xlat
rcrl
out
out
mov
inc
clc
cmpsb
shrb
out
test
shrl
cli
movsb
mov
and
insl
lahf
add
xor
setae
lock
sub
push
xchg
cmp
mov
repnz
lahf
and
cli
push
adc
testb
movsb
sub
xchg
out
and
fsubs
or
jge
xor
jp
das
shlb
adc
mov
dec
outsb
stos
dec
das
orl
push
sbb
inc
pop
data16
fistl
and
jecxz
fldcw
sar
push
and
xor
cmp
jo
ror
fdivl
aas
xchg
mov
or
in
insb
dec
push
ljmp
and
dec
and
fninit
jns
sbb
pop
xor
imull
jno
shll
push
inc
lods
sbb
std
dec
shll
movsw
or
jle
dec
and
in
clc
and
or
lods
push
es
and
fiaddl
dec
cs
jns
fwait
imul
cwtl
xlat
and
xchg
inc
lea
mov
xchg
sub
push
test
cmp
and
and
mov
xchg
adc
es
mov
hlt
jle
out
lock
jae
pop
and
push
push
inc
movsl
mov
mov
outsb
add
mov
mov
popf
data16
or
sub
gs
insl
add
lret
xor
lock
jns
aad
mov
and
pop
and
pop
arpl
and
xchg
push
ja
sub
jnp
ret
xchg
int
fldenv
iret
xor
xlat
mov
andl
sbb
xchg
pop
addr16
and
inc
mov
and
sub
xchg
and
enter
inc
in
test
cwtl
and
mov
pop
xchg
das
cmc
fcoml
push
fisubrs
aaa
and
leave
lods
pusha
mov
jno
test
mov
adc
push
insl
xchg
jns
xchg
in
jmp
sbb
orl
test
mov
nop
fstp
in
and
lea
in
sti
and
push
push
xchg
sub
clc
out
mov
das
rcr
and
or
test
mov
or
lds
mov
xorl
data16
inc
pop
inc
rclb
clc
sub
mov
add
ljmp
add
jecxz
dec
dec
push
ljmp
out
fstpt
mov
fsubs
pusha
out
and
in
push
and
pop
ja
push
pop
test
and
push
pop
andl
and
cmp
inc
lahf
and
js
lds
mov
add
aas
sbb
repz
xor
and
add
push
mov
push
mov
test
push
fwait
and
test
outsb
pop
cmpsl
xchg
adc
lcall
jbe
adcb
call
lret
and
jp
push
ss
imul
cmpsl
lock
aaa
lods
push
push
loop
dec
ja
popf
pop
loopne
xchg
pop
and
and
addr16
fsubrp
lea
sub
mov
insb
cmp
daa
xchg
imul
pusha
and
mov
pop
ja
pushw
cld
fsubr
mov
icebp
and
xchg
movsb
xchg
xchg
cmpl
aaa
sbbb
fs
insl
je
rep
inc
inc
gs
xor
and
and
lea
inc
cwtl
ds
insb
add
jbe
jns
fcompl
pusha
fistl
xchg
mov
adc
loopne
scas
stos
jle
xchg
and
pop
or
and
bound
and
into
testb
jb
mov
jp
dec
pop
or
add
imul
jns
in
adc
xorl
loopne
and
fists
mov
mov
leave
call
and
into
icebp
nop
xchg
xor
push
shrb
mov
cmpsl
call
std
andb
test
jmp
and
or
in
pop
and
mov
xchg
jno
flds
lock
outsl
cld
lea
or
add
and
jle
pop
inc
test
pusha
sbb
imul
xor
popa
fwait
mov
rcrb
and
movsb
je
cmp
jne
jecxz
cmpl
mov
add
lret
test
cmp
mov
notb
mov
inc
test
jno
test
xchg
push
pop
fisttps
addr16
adcl
sbb
ss
push
and
std
ja
or
dec
cmp
and
scas
inc
push
mov
in
imul
rorb
sub
mulb
jbe
adc
ret
sub
push
mov
add
movsl
out
jae
bound
adc
push
dec
add
pop
andl
fcoms
mov
cmp
mov
call
push
pop
out
mov
push
lret
sti
mov
inc
push
daa
movsl
jae
and
and
ljmp
rorl
mov
movsl
jo
aaa
sbb
lods
jns
cwtl
bound
sti
mov
and
add
and
sbb
test
popa
pop
aas
std
movsb
cmpsl
ficoml
pop
cltd
aam
or
in
xchg
sbb
dec
mov
dec
xchg
fsubs
scas
sbb
ds
imul
jg,pn
test
and
mov
mov
and
fimuls
enter
popa
jp
mov
xor
arpl
gs
jge
dec
jno
cmp
aas
movsb
add
push
pop
mov
jecxz
xchg
nop
xor
shll
add
mov
or
cwtl
sub
mov
and
ss
das
cmp
pop
pop
mov
adc
lret
push
imul
test
les
movsb
or
cmp
pop
mov
daa
push
jb
dec
stc
jle
es
jo
arpl
cmp
lret
in
mov
and
push
loope
dec
xchg
cmp
in
ja
fsts
dec
and
fnstcw
popf
shll
cmp
out
scas
addl
mov
xchg
or
cmpsl
movsb
sbb
stc
dec
sbb
push
rorb
iret
cmp
popf
pop
lds
inc
mov
lcall
arpl
sbb
loop
hlt
cmp
dec
and
sub
scas
mov
lret
into
add
movsl
jle
cmpsb
push
and
pop
out
shlb
or
add
xlat
jo
mov
inc
sub
arpl
and
push
cmpsl
cmp
rorl
dec
outsb
mov
push
stos
dec
fstl
pop
xchg
popa
cmovge
xor
push
jns
stc
aas
dec
dec
popa
pop
xchg
jg
aas
das
aas
outsl
dec
and
mov
and
mov
stc
leave
mov
iret
in
pop
testl
cld
stos
jl
nop
adc
andl
imul
xchg
fldenv
int3
insl
cltd
sub
cltd
adc
and
ss
jle
es
or
clc
pop
pop
mov
shll
iret
inc
inc
dec
and
lret
xlat
imul
adc
lahf
inc
mov
popa
dec
ds
in
xor
dec
adc
pop
pop
sub
hlt
and
sbb
add
shlb
repz
mov
shrb
jg
das
jno
movsb
gs
push
inc
jne
mov
dec
and
inc
fsubs
dec
mov
add
dec
inc
xchg
cmpsl
out
leave
and
ljmp
mov
xor
jmp
xchg
adc
stos
loop
or
push
int
inc
add
lahf
cli
and
xchg
test
and
push
je
loope
cmp
stos
inc
cmpsl
dec
lods
and
cs
and
jp
cmp
cmpsb
lds
pop
out
cwtl
sbb
imul
adc
lcall
add
fldcw
popa
mov
mov
xor
andb
sub
sub
mov
out
pop
and
dec
fbld
or
xchg
fwait
out
mov
jnp
adc
ret
and
mov
shll
add
and
adc
push
push
cltd
fldt
or
bswap
into
cmpsb
xchg
add
push
hlt
leave
aaa
movsl
cmp
stos
mov
jmp
dec
insl
rolb
stos
dec
sahf
popf
and
pop
test
les
and
push
push
sbb
mov
push
jb
jl
pop
inc
and
popf
cmp
mov
and
cmpsb
mov
mov
sbb
xchg
nop
dec
push
sub
xor
push
xchg
pushf
roll
mov
inc
enter
fbld
and
mov
and
dec
sbb
cltd
dec
test
into
rorl
icebp
addb
dec
xor
cmp
pop
xchg
and
sahf
scas
movsb
dec
popa
or
mov
add
into
mov
fs
lea
arpl
fwait
xor
mov
scas
test
popa
adc
insb
std
xorb
add
mov
rcrl
and
mov
cli
xchg
std
aas
pop
xchg
sub
lcall
and
popa
sahf
into
mov
lret
shrb
mov
mov
dec
cmp
test
and
mov
stc
test
sub
lret
and
push
arpl
inc
enter
aaa
dec
push
les
sbb
mov
dec
and
std
rcr
fwait
inc
mov
adc
in
cmp
pop
or
xor
push
cmp
cmpb
inc
lea
mov
mov
pop
stc
es
xchg
cmp
out
adc
pop
lahf
jne
mov
and
xchg
out
daa
push
push
or
xchg
xchg
movsb
xchg
add
inc
sub
adc
adc
and
jl
sub
xor
mov
or
and
lahf
inc
pop
lods
mov
xchg
inc
lret
mov
in
mov
sub
push
jae
js
xor
and
xchg
leave
sub
shll
fists
xchg
stos
mov
adc
mov
lahf
stc
mov
in
js
repz
cmpsb
es
rorb
add
jb
movsl
pop
cmpsl
inc
mov
ja
inc
sbb
mov
pop
push
xchg
lahf
imul
es
pop
or
push
sbb
mov
and
sti
iret
pushf
je
jmp
in
inc
jbe
xor
mov
aad
popa
push
pop
mov
popa
mov
push
insb
push
mov
inc
push
popa
or
and
mov
jg
xchg
push
mov
movsl
lahf
or
jae
in
imul
lods
or
mov
pop
xchg
stos
mov
cmp
and
rcll
and
jb
mov
cmp
inc
pushf
dec
xor
mov
lock
scas
les
push
psubb
inc
and
xor
and
imulb
adc
scas
xchg
das
mov
adc
orl
and
imul
cltd
lcall
and
mov
xchg
in
dec
aam
pop
jg
adc
pop
out
and
loope
mov
jns
and
pop
mov
and
push
and
sub
mov
jb
cwtl
andl
dec
mov
mov
popa
out
repz
std
pushf
mov
and
cld
add
sub
mov
sbb
pop
jl
popa
repz
and
out
lods
and
inc
add
and
fcom
dec
xor
enter
pop
mov
mov
inc
pop
dec
mov
or
pushf
icebp
and
imul
ljmp
rcrb
stos
fisubs
cmp
icebp
push
aam
or
mov
xchg
popf
cmpsb
jns
push
mov
or
and
add
push
jnp
insl
cmp
scas
shll
mov
fisubs
int3
aad
outsl
xchg
pusha
mov
mov
cltd
push
mov
adc
add
dec
and
xor
inc
and
dec
outsb
cld
inc
pop
xchg
movsl
ret
sbb
mov
pop
jne
push
adc
arpl
mov
and
adc
pop
and
jle
sbb
roll
movsl
aaa
stc
fiaddl
push
aad
adc
sti
mov
cs
call
xor
and
xorl
shlb
mov
mov
xor
mov
sbb
pop
test
cmpsl
inc
int3
sub
xchg
dec
cmp
add
popa
sbb
lea
and
int3
jle
rclb
mov
ret
jb
lds
into
mov
and
jmp
xchg
dec
xchg
push
fstpl
mov
inc
andl
jb
mov
sti
push
mov
and
fstpl
xchg
mov
jl
inc
inc
or
mov
dec
inc
leave
subl
ljmp
orb
test
cwtl
inc
enter
leave
and
ja
xor
loopne
and
cmc
nop
out
mov
adc
fldcw
jp
lret
sahf
sub
mov
int3
lods
adc
scas
in
in
inc
test
and
jno
sub
ss
add
test
int3
cld
push
icebp
xchg
ljmp
sti
insl
pop
rorl
ret
or
lea
imul
mov
andl
jg
pop
cmpl
rorb
and
push
xlat
clc
sub
or
cltd
push
aad
mov
or
and
stos
sub
jb
adc
stos
shrl
test
mov
add
xchg
popl
mulb
jo
or
addl
sub
out
pop
pop
and
js
int3
hlt
adc
mov
popa
jbe
cmp
and
inc
test
and
jnp
cwtl
add
adc
mov
icebp
and
mov
clc
push
or
sbb
and
or
aaa
jge
adc
in
mov
mov
pop
xor
out
stos
jmp
mov
add
and
pop
sbb
loopne
lods
loopne
mov
fwait
push
lods
push
out
adc
gs
mov
add
fbld
sub
and
jb
daa
add
cmp
and
ds
add
fildll
mov
cltd
roll
fstps
jmp
mov
xchg
cmp
xorb
cmpsl
mov
int
dec
fsubrl
out
add
and
aad
and
xor
and
dec
sbb
insl
ret
mov
aaa
jl
lods
sti
push
in
xlat
pop
xor
sar
mov
and
adc
xchg
adc
and
mov
mov
ret
sbbb
insl
and
stos
lock
shr
xchg
pop
and
clc
jo
jg
inc
int3
pop
in
pusha
adc
jb
mov
imul
lea
xor
lcall
bound
shll
adc
xchg
leave
out
pop
inc
sbb
mov
ja
adcl
and
xchg
lds
lock
pop
push
lret
in
and
sarl
loope
and
testl
jl
pop
or
aaa
sbbl
dec
loope
ja
test
jo
xor
daa
add
sbb
jecxz
jb
jl
insl
sbb
rcl
in
pop
inc
jo
fcoms
jae
mov
and
fcompp
pop
sbb
and
lret
mov
outsl
and
pop
and
rol
add
and
inc
fcomps
enter
jecxz
xor
sub
mov
and
mov
in
and
sub
sub
mov
mov
ja
jns
movsb
and
xchg
xor
xchg
test
nop
or
and
and
and
scas
xor
pop
jg
movsl
mov
fistl
push
sbb
test
jl
call
imul
xchg
pusha
icebp
ret
xlat
movsl
adc
adc
cmpb
jb
faddl
ds
xchg
jne
bnd
iret
fs
pop
pusha
and
add
imul
inc
jae
jge
hlt
lds
and
call
int3
sbb
hlt
rorb
sbb
jp
push
and
sub
xor
and
stc
adc
and
jb
xor
push
es
aad
enter
sti
dec
xchg
pop
mov
icebp
push
or
lds
in
sub
fwait
leave
xchg
in
xchg
mulb
popa
test
pop
pop
mov
adc
popa
repz
and
mov
mov
pop
out
loopne
and
xchg
iret
pushf
divl
clc
and
test
icebp
jns
xor
stos
jo
sahf
test
add
shlb
and
movsb
add
sbb
aas
mov
or
and
jg
xchg
sahf
fsubrs
xchg
and
jl
push
push
leave
mov
rolb
inc
and
xlat
sub
nop
int3
das
cmp
sbbl
cmp
xchg
mov
dec
or
mov
mov
and
add
mov
dec
pop
jecxz
cmp
sar
or
repnz
dec
or
and
sbb
stc
xchg
pop
push
xor
repnz
popf
nop
mov
pop
rolb
notb
sub
lock
and
cmpsl
das
adc
test
popa
dec
pop
sti
inc
pop
imul
ret
pop
cmp
mov
jmp
lea
jmp
sub
xchg
cmp
jb
lret
stos
jno
jge
mov
push
dec
push
cmp
add
hlt
inc
inc
ficoms
inc
outsb
into
jl
sbb
aam
push
andl
mov
adc
pop
shlb
jg
andl
aaa
into
pop
test
movsl
push
std
xor
and
test
pop
and
sub
andl
lods
adc
and
cmp
sahf
fucomip
ret
xchg
out
nop
repz
out
jmp
push
movsl
test
sbb
jno
pusha
mov
stos
cmp
mov
or
and
lock
in
sbb
and
push
jmp
jg
push
outsl
cltd
in
sti
notb
xchg
jo
fimuls
test
shlb
das
mov
and
aad
insl
and
dec
clc
xor
sub
test
pop
and
sbb
inc
pushf
inc
js
popf
mov
or
shll
shrl
add
enter
pop
aas
and
mov
jg
and
stos
rcr
mov
incb
push
dec
repz
jl
sbbl
and
test
insb
lcall
sub
movsl
xor
notb
das
cltd
lahf
in
enter
lock
push
rcll
mov
mov
loop
popa
mov
pop
fadds
dec
lock
out
push
and
inc
stos
insb
adc
mov
dec
call
cli
and
stos
lret
push
lahf
mov
mov
hlt
jbe
add
push
int
out
push
and
mov
add
lahf
push
out
test
call
std
out
xor
sub
mov
xchg
and
ucomiss
or
xor
in
jmp
inc
sbb
push
fisubs
xchg
loop
jne
cmp
aad
mov
insl
lods
and
in
push
push
mov
rorb
popa
adc
mov
pop
mov
shrb
popa
cmp
popa
xchg
lock
out
push
gs
xor
sbbb
pop
pop
dec
mov
and
loop
mov
push
pusha
in
xchg
or
push
cmc
add
xchg
adc
cwtl
mov
ljmp
push
sarl
mov
pop
mov
inc
pop
ds
das
and
sti
xor
jns
fsubs
mov
cmp
xorl
and
mov
mov
adc
xchg
gs
mov
mov
xchg
add
xor
xor
and
pushf
push
rolb
popa
cmp
add
pop
aas
and
sbb
and
sub
shlb
dec
jmp
and
lds
mov
and
dec
insb
xchg
and
outsl
in
and
push
and
es
jb
scas
dec
inc
aam
lcall
inc
adc
popf
push
push
pushl
jmp
sub
out
aad
pop
shll
aam
ficoms
xchg
dec
sbb
ljmp
fists
les
add
xchg
sub
adc
and
mov
adc
xor
and
fisubl
mov
sbb
adc
lock
xchg
pop
out
inc
shrb
pop
rorl
jge
mov
mov
xor
sub
add
cwtl
div
and
adc
pop
and
arpl
dec
dec
mov
lret
adc
movsb
mov
xchg
fbstp
lds
push
mov
and
loop
jno
in
cwtl
add
sbb
push
mov
mov
add
xor
and
push
mov
ret
out
dec
xor
notl
outsb
push
inc
or
push
sbb
cwtl
shl
ja
outsb
cmp
inc
add
bound
icebp
imul
add
xor
cmpsb
jnp
cmp
mov
scas
lea
inc
or
cld
in
fnstenv
lcall
bound
push
andb
out
in
and
fcomps
movsl
call
loope
mov
std
ljmp
inc
mov
xor
xor
pop
cs
lcall
mov
daa
mov
clc
out
lahf
inc
fldenv
jnp
mov
dec
out
je
xchg
and
mov
inc
push
or
fists
jns
lea
mov
in
ljmp
xchg
and
lret
and
enter
and
mov
adc
sub
and
enter
nop
add
push
or
sub
sub
mov
test
movsl
mov
mov
popa
mov
jp
punpcklwd
cmp
scas
je
mov
push
dec
and
dec
xchg
out
mov
or
dec
test
or
add
lret
sub
sbb
popf
pop
mov
adc
sub
xchg
add
adc
test
lods
push
and
push
out
seta
xlat
and
enter
pushf
and
mull
mov
xor
and
dec
and
outsb
jmp
aas
clc
rolb
pop
cmp
aaa
jmp
bound
int3
and
in
stos
mov
sub
out
stos
rorl
and
iret
pusha
mov
stos
and
cs
hlt
test
sub
and
mov
push
arpl
rcrl
or
and
lret
inc
fwait
lods
and
push
cmp
jne
popa
pop
cmp
icebp
xchg
scas
or
mov
fbstp
popf
outsl
fwait
add
add
outsl
test
outsl
push
aam
and
movsl
aas
add
fsubs
sarb
sub
movsb
sub
ss
and
gs
mov
or
jmp
inc
and
sbb
test
and
mov
in
push
test
fadd
js
xlat
cmp
das
and
lret
and
add
sar
in
mov
cld
jl
incb
xchg
jb
push
adc
mov
add
scas
push
pop
inc
dec
mov
xor
int
and
sub
dec
je
data16
mov
push
and
in
test
ds
outsl
push
movl
sub
jae
sbb
push
cmp
and
cmpsl
cltd
add
daa
into
aaa
roll
cli
and
adc
inc
and
addr16
iret
xor
das
pop
or
add
cmpsb
mov
and
outsl
jb
and
shr
in
insl
leave
ljmp
repnz
out
mov
dec
mov
sub
sbb
loop
mov
shlb
and
dec
dec
shrl
add
sbb
popa
xor
and
inc
cmpsl
push
aam
fwait
scas
adc
xor
loop
addr16
movsb
data16
out
fcmovnbe
inc
pop
mov
or
add
lret
xchg
cmp
lahf
out
aaa
add
into
and
xchg
jbe
and
loope
jb
inc
and
jo
dec
sub
jbe
mov
mov
mov
and
lods
out
popa
and
jmp
mov
lds
ja
and
std
test
xchg
push
clc
push
add
and
pop
jae
jge
shl
sbb
inc
mov
in
pop
das
jle
fisubrs
out
loopne
les
js
sub
add
popf
mov
data16
stos
or
and
jmp
push
cwtl
popf
loope
and
push
jp
xor
sbb
sbb
cmp
lods
dec
pop
pop
jl
popf
popa
stos
push
data16
test
outsb
or
call
enter
divl
stos
cmp
mov
and
fnstcw
ss
addr16
and
in
das
push
mov
xor
lea
repz
bound
and
jae
int3
and
fs
xor
sbb
or
mov
and
push
outsb
in
mov
jp
dec
mov
das
sub
sbb
push
xor
xor
and
loop
fcompl
outsb
and
pop
pop
adc
inc
nop
lcall
dec
stc
int3
mov
mov
and
leave
sbb
cmpsl
ret
adcl
xor
imulb
popf
push
int3
sbb
out
loope
jge
xor
pop
adc
add
push
and
leave
imul
cmp
lret
and
pop
ret
cli
lcall
inc
push
mov
std
into
and
add
sub
sub
scas
xor
mulb
xchg
mov
dec
mov
fimuls
in
movsl
sbb
or
inc
mov
cs
fwait
test
mov
bound
and
adc
jnp
lret
push
std
sub
mov
notl
and
icebp
cmp
aaa
and
sbb
xor
add
fwait
jecxz
pop
cltd
es
mov
movsb
push
cwtl
mov
test
inc
cmp
and
adc
mov
aaa
leave
xor
pop
scas
pop
push
insb
push
mov
mov
adc
call
pushf
and
rorb
movl
int3
stos
fstpl
fwait
or
loope
xor
push
mov
sub
or
xchg
and
and
aas
sbb
and
inc
mov
cli
push
mov
lret
mov
adc
mov
jle
inc
lcall
sbb
stos
jo
iret
fwait
or
int3
inc
and
xlat
pause
pop
xchg
xchg
and
jmp
sbb
lcall
mov
or
and
test
xchg
and
loop
cmc
add
push
ja
push
lods
rclb
pop
mov
aam
inc
adcb
sahf
in
xchg
fsubrs
lea
dec
out
mov
or
and
inc
add
mov
dec
push
adc
add
sub
jno
push
adc
cmp
data16
out
and
sub
in
out
and
xchg
xor
mov
xor
dec
mov
and
aas
or
test
sbb
cmp
or
movd
mov
mov
fidivrs
pop
imul
push
and
fisubl
sbb
int3
std
adc
mov
xchg
cwtl
outsl
loopne
das
jb
test
ss
sub
repz
mov
mov
shlb
mov
aam
nop
and
ss
out
pop
and
into
ret
or
cmp
pop
clc
sub
mov
mov
int
lret
repz
aad
add
popa
lods
in
xchg
imul
sbb
mov
movsl
sbb
and
adc
inc
cltd
pop
pusha
push
and
stc
mov
inc
test
pop
ret
push
jge
or
outsb
fmuls
ror
mov
lcall
popf
sbb
inc
loope
mov
rorb
and
xor
dec
mov
jnp
and
push
movzwl
es
loope
adc
and
movsl
push
insb
jg
and
xchg
aas
popf
lea
aaa
in
je
dec
ud0
imul
loopne
pop
inc
jns
mov
jecxz
adc
pusha
pushf
frstor
pop
and
and
dec
insl
mov
rcl
adc
lea
push
imul
cmpsb
popf
int
pusha
cmp
pop
fwait
or
mov
inc
addl
js
push
or
dec
cmpsl
xor
push
stc
or
loop
and
movsl
in
loopne
mov
xchg
mov
jmp
mov
fwait
inc
test
shlb
adc
cs
dec
arpl
in
jl
xor
aaa
push
sub
and
cmp
ret
loope
inc
outsb
sbb
lods
xchg
sbb
add
daa
and
test
jb
sbb
out
movsl
hlt
out
and
pushf
push
adc
mov
mov
xchg
and
sub
xor
fcmovu
and
pop
jmp
mov
aaa
inc
rolb
and
and
inc
and
xchg
and
jns
aam
cmp
and
cmpsb
std
sub
jb
push
popa
decl
mov
pop
mov
mov
fldl
mov
adc
addb
pop
addr16
mov
fs
out
testb
rclb
cmp
addb
js
sbb
and
aam
ret
in
out
and
fists
loopne
and
add
les
mov
popf
and
dec
mov
and
movsb
push
lds
xchg
out
push
rep
fidivrs
scas
dec
stos
push
inc
and
push
mov
fcmovu
in
loope
out
mov
shrl
mov
adc
jle
clc
fbld
xor
xchg
mov
and
push
mull
jle
xchg
and
mov
mov
in
pusha
inc
cmp
scas
mov
in
mov
stos
imul
popa
push
or
and
out
out
ficomps
sub
loope
jno
shlb
in
dec
cld
sub
adc
jmp
pushf
mov
xchg
testl
inc
pop
mov
test
pop
adc
loope
icebp
or
out
shl
push
mov
xchg
sub
or
je
add
ja
notb
bswap
sub
aaa
xchg
jns
and
push
imul
jmp
jge
daa
fcmovnbe
lods
xor
mov
dec
adc
loope
dec
cmp
and
mov
nop
shlb
inc
xor
sahf
adc
xor
insl
popf
js
xchg
ret
mov
fisubl
sbb
ret
mov
push
and
sbb
xor
xchg
xlat
test
xor
jnp
sti
cwtl
out
push
and
js
dec
aad
pushl
and
jl
popa
adc
push
pop
cmpsb
mov
dec
jno
mov
adc
stc
sub
dec
mov
aas
pusha
movb
aaa
mull
daa
icebp
dec
mov
adc
int3
xchg
push
pop
es
stos
dec
mov
into
mov
xchg
andb
mov
cmp
enter
xor
add
pop
shrb
sarb
out
cmp
pop
arpl
push
cmpb
mov
and
and
sub
in
adcl
push
addr16
je
and
sbb
mov
into
lret
xchg
dec
push
ja
adc
xchg
mov
icebp
cmp
out
and
je
cmpsl
adc
and
andl
mov
add
dec
add
mov
or
push
pushf
fwait
scas
and
loopne
enter
cmpsb
sbb
xchg
sub
cmp
xlat
sti
lss
and
inc
hlt
sbb
ficoms
sub
mov
arpl
test
fdivl
sbb
incb
jno
jecxz
push
movsb
mov
dec
lret
push
int3
dec
cltd
mov
xchg
jecxz
sub
push
test
outsb
sarl
addr16
in
cmpsl
pusha
lret
jo
mov
push
add
mov
test
xor
imul
mov
cmp
xchg
inc
add
xchg
stos
sbb
jmp
mov
xor
in
lds
js
mull
test
pop
push
and
adc
xchg
loopne
pcmpgtw
lret
mov
dec
or
loope
lret
cmp
dec
sti
andl
sahf
ss
and
stc
xor
and
or
inc
push
dec
push
pop
pop
sbb
fwait
mov
enter
cmp
jl
xchg
cmp
aaa
and
aad
mov
in
and
pop
pop
xchg
in
and
out
mov
idiv
mov
xchg
loop
push
and
push
cltd
insb
push
and
and
adc
mov
fmull
sub
cmp
jno
sbb
xchg
lods
dec
mov
sbbl
and
pop
fbstp
and
shll
dec
lcall
and
push
mov
cs
add
cld
mov
movsb
popa
sub
and
pushf
cld
mov
add
arpl
pusha
or
pop
sbb
in
ret
add
mov
cltd
ds
jl
pusha
insb
inc
and
jns
pop
gs
into
mov
cmpb
pop
fwait
cmpl
cltd
jne
dec
cmpsb
movsb
into
insb
in
push
mov
insl
popf
lahf
and
xchg
and
test
jnp
inc
cmp
stos
jo
mov
mov
sub
cli
pop
js
jno
adc
lea
loop
in
in
push
mov
sub
mov
sti
test
imul
push
adc
or
pop
movsb
inc
and
mov
out
frstor
mov
add
bound
mov
xor
push
mov
and
jno
push
in
xchg
xchg
fistpll
fnstcw
pushf
xor
jle
push
dec
jns
push
jmp
in
mov
adcl
push
mov
scas
iret
sub
push
mov
ja
sub
xchg
cmp
cs
add
enter
xchg
inc
sub
xor
in
popa
jecxz
cwtl
int
popa
dec
outsl
movsl
bound
sbb
xchg
jl
mov
insl
mov
mov
add
mov
cwtl
lods
and
pop
out
js
outsl
xchg
xchg
dec
imul
mov
repnz
xchg
ljmp
push
push
cmpsb
xchg
fs
aad
mov
stos
sbb
inc
sub
fdiv
dec
cmp
jl
stos
and
xchg
lret
mov
mov
test
pop
mov
add
test
in
and
inc
into
xor
push
adc
out
scas
add
jg
mov
add
movsl
mov
jo,pt
ret
sub
or
cmpsl
bound
enter
inc
imul
push
stc
in
lret
push
and
sti
xchg
mov
cmp
add
mov
inc
into
nop
mov
mov
pop
popf
push
xchg
inc
arpl
and
lret
imul
mov
pop
sbb
out
ds
add
sub
lret
loopne
mov
and
sub
imul
push
aaa
outsl
xorb
xlat
or
cmpsb
and
lods
shlb
ret
dec
and
mov
lds
aaa
setl
fadds
and
lea
test
int3
or
and
lret
dec
mov
popa
scas
ret
and
inc
sub
push
dec
jnp
sub
int
and
adc
and
pop
pop
in
push
fldenv
xchg
mov
in
or
fcoml
dec
fsubrp
jl
sti
cmp
imul
call
stc
mov
push
addr16
xlat
mov
ja
int
je
pop
jnp
fisubrs
dec
ss
ds
scas
jmp
and
xor
pop
cmpsl
insl
xchg
arpl
test
mov
push
inc
and
jg
out
popf
and
cwtl
adc
adc
int3
sbb
test
mov
cwtl
aad
ss
sub
xor
pop
xor
outsl
push
mov
repz
cmp
shl
pop
lret
lcall
sbb
add
dec
and
or
test
xor
pop
les
sbb
jmp
add
shr
push
and
ffree
cli
nop
push
das
movsb
lahf
xor
dec
mov
and
push
popf
mov
fbstp
lods
bound
arpl
and
movsb
dec
enter
out
mov
pop
movsl
and
fidivrl
pushl
imul
inc
stos
js
mov
out
and
scas
cmp
cmp
or
xchg
daa
xchg
dec
outsl
adc
shrb
jmp
cmp
jle
dec
sub
repnz
cmc
mov
outsl
and
and
pop
push
jnp
aad
ljmp
out
mov
je
mov
cmpsl
or
xchg
sub
fdivrl
and
dec
out
dec
adc
or
insl
cmp
and
add
jns
test
and
lods
lret
int3
mov
jge
pop
xchg
push
xchg
and
mov
arpl
mov
in
push
repz
sub
lds
xchg
icebp
pop
pop
fiaddl
sub
out
popa
jmp
aas
roll
jno
mov
fnstsw
insb
testl
mov
and
push
xor
mov
inc
dec
add
and
mov
ds
mull
jge
data16
and
fldenv
out
and
cmpsb
es
pop
lcall
insb
cld
scas
shlb
and
into
stc
jne
adc
test
js
mov
std
mov
loopne
inc
fidivs
sbb
test
test
add
mov
inc
pusha
sbbl
push
mov
jmp
mov
push
popf
and
pop
cmp
scas
sbb
xchg
jnp
jmp
push
and
fwait
das
arpl
sub
xor
popa
mov
in
ja
das
cmp
lahf
and
in
fninit
and
cmp
in
fisubl
dec
adc
sbb
pop
data16
xor
cld
nop
sub
movsb
dec
and
loopne
push
add
fdivrl
enter
pop
mov
push
dec
popa
pop
pop
ret
push
rcll
jg
dec
data16
aam
jmp
add
push
jnp
mov
and
clc
les
sub
dec
mov
dec
or
xchg
pop
lahf
stos
pop
ficomps
into
fisubrl
and
insl
das
dec
and
shll
cmp
or
and
les
pop
js
jl
imul
inc
mov
sbb
push
add
sbb
pop
push
das
or
adc
sbb
and
loopne
push
and
push
inc
bound
aad
mov
and
mov
popa
xchg
fsubs
xchg
outsl
aas
lret
out
test
push
cmp
pop
dec
add
push
subl
fsts
bound
mov
pop
push
outsl
out
fxch
test
push
cld
xchg
jo
nop
and
rclb
enter
push
mov
movsl
xor
xchg
jmp
ja
loopne
push
xchg
arpl
sahf
push
jns
pusha
popa
mov
insl
lcall
inc
fnstenv
jmp
push
in
aam
adcb
xor
xchg
push
loope
pop
popf
add
push
jns
dec
loopne
mov
mov
cli
mov
and
cmp
call
insb
and
dec
push
cmpsl
and
std
icebp
dec
imul
and
and
cli
mov
fwait
sbbl
sub
push
aam
jp
popa
jp
sbb
cmpsb
jo
orl
fsubp
sar
popa
adc
in
mov
mov
dec
daa
pop
sub
push
call
and
adc
pop
sbb
adc
call
daa
and
out
mov
and
and
outsb
shl
xchg
arpl
repz
sarl
inc
and
jno
in
sub
xor
and
sbb
andb
push
and
mov
rorb
and
adc
aas
sub
or
shll
int
mov
imul
dec
sub
shll
adc
popa
pop
fsubl
inc
push
cmpsl
popf
add
aas
pop
popf
inc
inc
ja
sub
imul
mov
inc
std
xor
dec
dec
cmp
rol
jmp
cld
lcall
icebp
mov
dec
adc
jge
pop
xchg
cltd
sbb
jle
mov
add
inc
lcall
dec
lods
mov
mov
test
mov
pop
pop
aaa
mov
xchg
out
mov
adcl
pop
mov
imul
dec
add
cmp
mov
test
mov
mov
in
xchg
ja
mov
out
sub
jge
mov
xchg
add
out
xor
xchg
jg
and
xlat
orl
and
inc
cs
push
fwait
lock
aam
pop
push
adcb
mov
sbb
nop
add
out
fs
aas
int
sbb
sub
and
xor
cmpsb
scas
jns
and
pop
push
lret
stos
mov
fcomps
loope
sub
cld
faddl
sub
popa
pop
fidivrs
pop
push
and
daa
ja
imul
mov
test
test
jl
jne
pop
jb
push
pushf
jg
rcrl
sahf
cwtl
pop
imul
jns
test
ret
sti
enter
adc
jg
mov
out
pop
cmp
xor
add
xchg
mov
les
mov
lods
xor
cmpsl
mov
xchg
cwtl
and
ret
lcall
jle
movsl
dec
cmp
add
xchg
xchg
cmc
inc
fildll
ret
xchg
mov
or
stc
pop
jp
loop
sbbl
mov
test
in
xor
mov
and
sbb
in
push
xchg
fstpl
pop
xor
xchg
adc
push
inc
cmp
lock
mov
mov
mov
lods
cmc
or
dec
sub
out
and
cwtl
arpl
pop
aaa
adc
int
movsl
and
add
insb
lret
sbb
push
daa
ret
sub
sub
fistpll
xchg
mov
gs
mov
aas
insb
dec
popa
ret
in
push
insb
dec
ljmp
cwtl
rcrl
push
push
cmp
pop
and
test
shll
loope
jp
hlt
fnsave
and
pop
cltd
sbb
add
mov
and
push
test
test
and
add
mov
popa
repnz
dec
mov
aas
pop
cwtl
test
jb
push
jbe
subl
mov
pop
sbb
scas
mov
add
cmp
stc
loop
push
mov
fwait
push
aaa
xor
ljmp
inc
push
dec
mov
lahf
shrl
cmp
pop
and
jle
loopne
aad
test
inc
push
ret
sub
imul
sub
push
adc
jge
mov
dec
mov
dec
icebp
shll
pop
and
lahf
push
mov
roll
in
call
sarb
cmp
xchg
sbb
jbe
cmp
and
mov
and
ds
dec
mov
aam
sbb
aas
outsl
pop
mov
inc
scas
nop
pusha
movsb
xor
stos
test
clc
cwtl
pop
popf
and
int3
call
and
inc
nop
cmp
outsb
out
mov
mov
xchg
neg
pop
and
js
push
push
in
fisubrl
and
xor
outsb
leave
pop
movsb
sub
in
popa
in
fisubrl
push
popa
push
ficoml
push
sbb
push
lea
and
jbe
fildl
es
xor
cltd
mov
andl
aad
or
movsb
out
mov
jl
ret
mov
roll
cmp
cmc
jmp
fstps
das
mov
mov
adc
pusha
popa
mov
ret
pop
xlat
and
pop
push
repnz
jbe
fstl
and
sahf
cmpb
mov
jb
mov
cltd
inc
fildll
pop
mull
or
lods
push
push
mov
mov
cmp
and
repnz
xor
mov
pop
insl
and
and
ja
lahf
jns
push
or
sub
addb
adc
jne
jno
leave
push
shll
fneni(8087
cmp
mov
mov
push
push
sbb
cmp
aad
xchg
sti
sub
push
mov
jns
and
xor
enter
inc
and
loopne
mov
mov
push
insb
js
pusha
dec
movsl
and
lods
lods
mov
mov
mov
push
movsb
sarl
cli
and
in
jo
push
and
mov
sahf
and
add
fldenv
and
mov
cmp
or
pop
pop
cld
lcall
repnz
loopne
mov
dec
mov
outsb
rorl
shlb
sub
imul
and
je
jl
cmp
jne
subb
cmpsl
movsb
jecxz
mov
adc
cmp
lcall
cmp
mov
int3
mov
movsb
xor
aaa
fbld
lock
inc
and
and
dec
and
es
sbb
jmp
ret
and
out
stc
and
cs
fistl
xor
outsl
mov
push
or
sbb
dec
inc
int
mov
xor
mov
and
gs
jae
data16
mov
pop
jg
arpl
push
xchg
cmp
add
adc
cltd
push
call
pop
sarb
push
mov
loopne
popl
xor
outsl
and
nop
and
in
mov
sub
mov
lret
test
mov
outsb
lock
push
mov
ret
xor
sub
add
test
xor
mov
mov
loope
inc
sti
sbbb
pushf
inc
lea
imull
pop
in
shlb
cmp
and
pop
test
and
lods
lea
pushf
cmpsb
daa
out
and
loope
int
std
dec
xor
repz
test
in
adc
xor
jnp
and
repnz
lret
cmpsl
push
inc
mov
fstpl
cwtl
and
daa
cmc
mov
shlb
and
mov
insb
cs
mov
pop
cmp
arpl
and
pop
cmp
roll
out
daa
andl
stos
xor
pop
fildll
push
outsb
xor
into
and
ficoms
and
les
in
jge
loopne
fdivrl
cli
shrl
and
pop
mov
mov
dec
pop
push
add
or
enter
mov
mov
fldenv
fimull
and
or
rol
int3
jmp
and
std
inc
lock
cmpsl
or
cmp
sub
mov
fcompl
and
and
jmp
gs
and
xor
movsb
jo
xlat
cs
jg
mov
sbb
push
test
shl
dec
mov
jnp
dec
and
int3
xor
pop
rolb
cmp
sub
addr16
loope
shrl
mov
sbb
aad
mov
sahf
xchg
in
sbb
jbe
lock
les
jne
iret
test
and
xor
jl
cmpsb
inc
mov
popa
and
daa
mov
sbbl
and
xor
dec
enter
mov
pop
or
or
insl
test
inc
lods
sbb
push
aas
mov
pop
or
push
lahf
and
mov
shlb
enter
loopne
and
xchg
std
in
jo
mov
rorb
mov
iret
sbb
mov
aam
popa
xchg
data16
clc
and
adc
mov
and
lret
sbb
pop
fnstenv
add
in
dec
and
mov
mov
popa
sub
add
xlat
xor
sub
and
mov
mov
clc
dec
jns
jnp
and
add
movsb
push
and
pushf
xor
push
test
sarl
pop
std
jae
xchg
movsb
mov
push
cmpsb
fimuls
pusha
xchg
push
in
jmp
mov
mov
sbb
es
adc
cwtl
popf
ljmp
nop
popa
mov
sbb
and
mov
push
out
and
mov
lret
mov
out
mov
lret
mov
and
jns
cli
mov
movsb
inc
fwait
mov
insb
mov
lods
and
inc
and
inc
bound
sti
repz
push
mov
in
movsb
jo
fsubrs
test
xlat
inc
popa
adc
sbb
xchg
xorl
fwait
icebp
in
inc
mov
in
out
fistpll
dec
xor
arpl
cltd
stos
sub
xor
sub
cmp
mov
sub
ret
mov
or
sub
out
inc
lahf
mov
sbb
loopne
rcl
mov
addl
sbb
test
cmp
nop
ljmp
lods
test
xchg
fdivr
fmull
mov
sbb
pusha
inc
xor
and
std
or
subb
inc
jp
xchg
mov
outsl
pop
fistps
mov
mov
and
adc
cmpsl
adc
cmp
inc
cmp
xor
not
mov
aam
loope
ds
cwtl
fs
dec
pop
mov
mov
xorb
insl
dec
jae
and
arpl
outsl
xlat
mov
jne
lea
cmp
mov
fmulp
push
mov
scas
test
call
and
aas
adc
mov
jmp
xor
aad
xchg
or
pusha
loopne
inc
push
adc
sbb
dec
inc
xchg
stos
xchg
inc
inc
in
and
pmaxsw
les
mov
cmc
pop
mov
bound
js
xchg
mov
dec
pop
mov
pop
inc
dec
cltd
aaa
mov
test
pop
sti
jmp
iret
popa
push
add
ss
ret
rorb
aad
mov
jp
and
arpl
add
mov
xor
mov
sbb
and
ja
lock
mov
push
jae
or
lret
xor
dec
aaa
mov
les
mov
push
shlb
sbb
scas
test
xchg
inc
lock
ja
mov
repnz
cmpsb
out
lods
fisubs
in
cmpl
and
ss
xchg
pop
lcall
xchg
and
mov
andl
repnz
jecxz
and
adc
inc
popf
xlat
mov
ljmp
jp
popa
cmp
clc
jbe
pop
in
mov
cmp
inc
pop
ds
and
jge
repnz
pop
push
int3
sbb
or
enter
dec
and
cli
stos
in
lret
mov
sbbb
and
mov
mov
mov
lea
aaa
mov
and
fwait
shlb
lret
xor
fnstcw
mov
or
and
aas
loopnew
into
mov
mov
pop
movzwl
ret
mov
push
aad
imul
adc
jg
jecxz
pop
push
mov
hlt
lods
popa
repz
pop
dec
aaa
add
add
mov
fdivr
cmpsb
lods
dec
sub
gs
mov
sbbl
bound
out
adc
push
sbbb
push
mov
and
inc
add
jmp
into
add
movsl
outsl
in
cmp
mov
push
in
in
mov
push
rolb
mov
jne
mov
xchg
filds
xor
sbb
cmpsl
inc
push
push
dec
insb
fildll
fcmovbe
mov
movsl
mov
into
or
sbbb
pop
jge
lea
xchg
lock
out
mov
and
or
and
xchg
dec
popf
addr16
jbe
and
dec
or
jle
pop
and
stos
shl
or
inc
lret
rolb
subb
sub
jns
jecxz
mov
push
inc
aaa
bound
sub
push
movsb
rcr
push
xchg
cmp
outsb
cmc
lods
aam
inc
int
cmpsb
cli
add
lcall
and
push
jne
data16
inc
and
or
idivl
xchg
sub
xchg
mov
aaa
aas
lods
fwait
and
lret
xor
mov
xchg
jns
lea
mov
stc
xchg
inc
and
ljmp
and
mov
loop
lcall
jae
stc
and
push
shlb
test
loope
jp
add
pop
lods
dec
mov
xchg
inc
and
ljmp
and
das
repnz
dec
insl
loopne
ret
and
mov
or
insl
test
std
mov
into
cs
add
jbe
mov
and
out
imul
stc
add
lahf
mov
sti
bound
shrl
add
lds
movsb
cmpsb
xorb
jg
and
xchg
shlb
or
add
jns
popf
push
mov
push
andb
jno
jb
inc
xchg
arpl
xor
rcrl
jp
lret
pushf
addr16
mov
das
inc
mov
xchg
sub
xor
sub
pop
lahf
fwait
cmp
jns
xchg
test
add
stos
jo
arpl
call
ficompl
sbb
add
pop
rol
and
out
and
jne
inc
rclb
pop
test
loope
xor
lahf
mov
xchg
mov
stos
pop
addl
lds
adc
scas
fmuls
add
mov
pop
ret
sbb
sbb
lock
xchg
stc
mov
or
sarb
xchg
cmp
inc
add
iret
xor
std
js
push
sbb
andb
cmc
push
ret
lret
cmp
mov
fnstenv
xchg
sub
cmp
and
jno
pop
mov
lahf
xchg
jmp
dec
subl
push
scas
or
and
shr
lahf
lds
pusha
mov
inc
mov
add
and
and
andb
in
xor
xor
xor
cli
xor
jno
and
pop
out
jecxz
xchg
rorl
movsl
and
cmp
fnstcw
or
popa
mov
xchg
and
xor
lret
js
xor
add
and
sbb
mov
push
and
or
nop
enter
and
out
push
mov
loope
inc
push
cmp
insl
gs
pop
lcall
call
add
rcrl
dec
cmp
dec
ja
inc
and
idivb
cmpl
movsb
test
lds
jne
add
daa
and
test
loope
push
popf
movsl
jle
das
jns
fsub
mov
adc
xchg
sarl
and
jns
mov
and
scas
jno
mov
enter
cld
cmp
sbb
sahf
test
cs
mov
pop
idivb
and
je
in
out
jno
and
jmp
mov
cli
repnz
cmp
je
nop
mov
mov
jmp
and
ret
daa
in
insl
shll
outsl
cmp
adc
cmpl
shrl
lods
mov
jno
rcrb
and
nop
push
out
std
lds
cmp
or
rolb
stos
int
sbb
xchg
add
adc
daa
mov
mov
mov
mov
cli
arpl
popa
push
xchg
mov
mov
adcl
lcall
xlat
jo
xor
js
push
and
ja
loopne
movsb
mov
mov
xor
push
cmp
and
xor
mov
dec
shrb
pop
ljmp
loope
cmp
inc
xor
rolb
mov
dec
sbb
xchg
sti
mov
pop
cmpb
pop
lahf
and
mov
data16
les
ja
scas
loope
popa
and
jbe
sub
scas
sbb
out
or
cmpsb
scas
ljmp
mov
jne
add
jge
outsb
and
inc
cmc
jbe
dec
mov
inc
and
ja
arpl
add
sti
lds
insl
out
scas
push
xchg
pop
mov
dec
or
or
int3
sub
je
pop
xchg
pop
rolb
aad
movsb
mov
xorl
mov
fiadds
cmp
imul
xlat
pop
hlt
and
cltd
cmp
popa
push
sti
movsl
ficoml
fnstcw
leave
add
sbb
movsb
sub
js
lahf
and
cmp
dec
mov
adc
xchg
cmp
test
aas
aad
adc
clc
xchg
lret
cld
or
xchg
pop
push
dec
pushf
push
cltd
icebp
xor
in
in
jns
mov
and
enter
or
pop
movsb
sub
es
xchg
xchg
pop
jp
iret
jg
push
sub
outsl
pop
pop
andl
push
cmp
movsl
sub
and
sahf
push
pusha
nop
and
mov
es
lds
cli
into
mov
lods
mov
mov
movsl
lock
subl
xchg
add
push
and
mov
lods
and
jp
jne
jno
repz
dec
xor
fwait
in
lea
and
es
testl
jbe
and
sbb
cltd
out
sub
dec
pop
xchg
aad
arpl
push
xchg
subl
inc
dec
rcll
inc
bound
and
es
arpl
pusha
and
sbb
lock
popf
sbb
fsubrs
popa
and
hlt
xchg
xchg
mov
sbb
pop
jnp
das
rcrb
xor
imul
popa
stc
out
mov
xor
xchg
mov
movsl
scas
adc
arpl
ja
fistl
jg
adc
jns
mov
mov
jae
sub
jbe
leave
in
adcl
lds
data16
jg
add
pop
ja
and
mov
pushf
xor
add
cmp
sub
and
shlw
jge
inc
push
fsubrs
adc
push
lods
xor
xchg
sbb
hlt
scas
popa
not
sbb
push
adc
push
aad
ljmp
and
rcrb
cmc
push
lcall
xchg
mov
xchg
or
shlb
jno
repz
arpl
aaa
and
jne
imull
sbb
test
lahf
ss
lds
jg
jl
and
mov
xchg
and
push
push
and
adc
mov
mov
je
popa
stc
gs
sbb
push
and
out
fwait
rcl
popl
pop
cltd
and
push
imul
les
and
pop
mov
adc
btc
push
or
and
imul
divb
adc
or
out
mov
lds
and
pop
sub
lret
shlb
stc
inc
rorl
sbb
push
xchg
mov
jl
int3
jne
stos
and
xchg
imull
pusha
cs
xlat
push
sbb
dec
notb
and
and
das
lock
andl
leave
sub
fmuls
xchg
testl
and
das
imul
mulb
les
out
and
out
sbb
clc
pop
push
and
cltd
sub
sub
int3
das
mov
mov
xor
ret
roll
sbb
divb
add
lret
push
cmc
mov
and
leave
pop
sbb
or
push
adc
and
mov
sub
movsl
xor
push
jb
pop
pop
or
cmp
mov
inc
popf
inc
rcrb
and
rolb
mov
lahf
mov
insl
movsb
mov
sub
shl
roll
fsubs
mov
in
fbstp
mov
aad
jmp
and
inc
popf
imul
jp
shll
in
fs
mov
lea
and
push
add
mov
and
inc
mov
and
shrl
in
pushfw
xchg
jne
bound
outsb
incl
and
and
xor
hlt
pop
fstpt
icebp
and
bound
lock
sub
addl
pop
adc
add
xchg
and
add
shll
inc
es
and
cmp
shlb
popf
cmp
push
stos
push
cmp
jmp
sbb
mov
out
cmp
mov
and
mov
add
mov
xor
jp
jns
inc
scas
iret
repnz
and
scas
idivb
sub
leave
add
gs
pop
sub
mov
sbb
in
push
pop
mov
dec
nop
mov
repnz
dec
lock
out
inc
ljmp
adc
sbb
cmp
movsb
jl
pop
push
xchg
shrb
aad
jg
cld
and
imul
movsl
and
jmp
fbld
lods
fstpt
outsl
mov
repz
and
lods
out
call
fcoms
add
dec
mov
xchg
mov
call
xchg
movb
cmp
xchg
pop
xchg
dec
mov
and
lods
pop
mov
sbb
fwait
test
jo
xor
nop
dec
cld
push
sbb
lods
and
xlat
xchg
ret
orb
cwtl
popa
jge
and
push
jae
mov
ja
sub
pusha
out
mov
jg
lock
add
pop
lea
mov
cmc
xor
int
loope
movsb
int3
add
out
pop
xchg
and
cwtl
jae
mov
movl
test
sub
mov
js
je
lret
jns
mov
fistpl
aaa
leave
xor
and
sub
cmc
mov
adc
test
orl
inc
xchg
or
mov
mov
pop
and
jns
xchg
push
inc
add
mov
inc
jo
mov
dec
cmp
xor
xchg
xlat
imul
push
xor
mov
push
in
mov
sbb
dec
pop
in
xor
imul
js
cmp
scas
pmaxsw
dec
cli
jmp
ja
inc
jne
or
and
mov
movsb
rcr
iret
divl
jne
cmpsb
and
xor
movsb
jnp
pop
imul
andl
cmpsb
cli
mov
and
insb
jle
jae
shrd
mov
jmp
mov
rclb
scas
cmp
xchg
movsb
inc
stos
and
xchg
imul
movsl
stc
sbbb
sub
mov
cs
popa
orl
xchg
mov
xor
jge
add
push
sub
and
sub
sbb
leave
popf
test
jbe
push
xchg
scas
cmp
push
insl
es
ljmp
adc
xor
push
push
sub
mov
pop
cs
cmp
and
sbb
fidivs
jno
and
test
and
fiaddl
pop
out
and
jno
mov
adc
aam
push
les
imul
mov
mov
xor
and
pop
sti
push
addr16
popf
icebp
push
inc
stos
std
ljmp
sub
adc
and
imull
outsb
sti
movsb
test
pushf
fwait
cmp
xor
daa
and
insl
lods
loopne
imul
or
add
mov
add
inc
fstpl
shl
gs
cmp
xchg
insb
sahf
add
scas
cmp
adc
adc
sbb
test
sti
push
mov
sub
in
pop
data16
push
jge
and
aad
int3
push
std
aas
inc
mov
cltd
ret
insl
cld
cmpsb
mov
pop
mull
mov
inc
das
sub
pop
and
mov
aaa
je
mov
aas
jmp
fsubl
jno
sbb
es
ja
cmp
and
lock
in
lods
mov
repnz
jno
sbb
movsb
or
xchg
and
std
jb
shl
inc
or
pop
fs
cmpsl
cmp
mov
mov
jl
and
add
ret
xor
aam
int3
ffreep
enter
and
and
xchg
cmp
mov
mov
xchg
cmp
gs
aam
xor
lds
pushf
mov
out
and
cs
shll
std
jle
xchg
push
mov
jge
push
add
xor
out
arpl
mov
pushf
jecxz
hlt
cwtl
inc
and
lock
push
pop
iret
fsubl
xchg
jno
fisubl
mov
ljmp
sbb
cmp
xlat
cltd
sub
and
mov
fidivs
add
xchg
movsb
or
popa
jns
lahf
xchg
ficomps
ret
loopne
movsl
push
mov
sti
mov
insl
adc
dec
mov
or
xchg
and
xlat
cmp
fldcw
pop
rcr
and
dec
pop
int3
mov
push
jl
aam
dec
das
adc
mov
push
mov
and
push
adc
sbb
push
mov
dec
jnp
sbb
aam
mov
and
out
imul
mov
lret
imul
jge
or
xchg
adc
iret
mov
mov
pop
xor
and
adc
mov
mov
mov
pop
inc
adc
mov
adc
ret
int
lock
mov
mov
ja
mov
xorl
test
out
shll
insl
fwait
stos
movsb
mov
dec
frstpm(287
popa
pop
cmp
adc
mov
fs
nop
adc
or
mov
cmp
into
adcl
imul
pushf
fiadds
and
inc
es
and
inc
into
lock
pop
dec
and
inc
scas
test
in
xchg
mov
mov
cwtl
out
and
and
pop
pop
loopne
dec
and
sub
int3
inc
mov
test
sbb
ret
bound
jmp
inc
mov
cmp
mov
xchg
dec
leave
aaa
lock
sbb
and
pusha
mov
js
mov
jae
addl
jge
mov
arpl
cmp
cmp
andl
stos
adc
movsl
pop
add
repnz
jp
add
test
lock
push
or
in
sahf
sub
and
and
mov
mov
mov
push
lret
cmpsb
mov
stos
xchg
xchg
inc
out
cld
rorb
inc
mov
outsl
ss
mov
pop
push
jae
and
int3
xor
push
pop
ret
and
mov
cmpsb
xchg
add
cli
and
and
mov
xor
popa
and
in
fiadds
in
push
inc
popf
sbb
gs
jae
inc
mov
daa
popf
and
push
pusha
add
inc
mov
js
jns
add
mov
mov
xchg
pop
pop
or
mov
pop
fbstp
cli
or
sarl
sub
jecxz
sahf
xchg
shlb
rcrl
and
sub
mov
cmpsb
pusha
lods
push
lea
pop
movsl
cmpl
popa
lret
mov
fisttpll
movsl
xchg
ss
loope
lea
and
leave
into
fstpl
sub
push
mov
jg
loop
pop
popf
mov
inc
xlat
xor
inc
cmp
xchg
push
cltd
shll
cmp
imul
sub
adc
popa
cmpsb
xor
in
push
mov
sbb
and
js
repnz
cwtl
add
fsubs
inc
cmpsl
mov
jns
inc
in
sbb
mov
repnz
daa
outsl
pushf
loop
xor
or
stos
into
shll
pop
pop
mov
pop
mov
idivl
and
cmp
push
ss
cltd
and
dec
mov
and
mov
imul
sub
pop
sbb
pop
xchg
inc
pop
add
lods
mov
push
out
sti
mov
test
addr16
sub
rcr
mov
andb
bound
pop
insl
cmp
cmp
pop
iret
xlat
nop
and
add
xchg
fldl
popa
decb
call
jne
add
adc
xor
and
pop
cwtl
and
xchg
jp
arpl
sub
pop
xchg
xor
repz
push
inc
and
or
xor
rcll
fistl
out
ss
ds
addr16
xor
popa
adc
xor
and
and
mov
dec
and
std
and
push
xchg
xor
in
and
sub
and
xor
mov
sub
shl
test
and
and
cmpsl
dec
cmp
xor
pop
jp
xchg
dec
xchg
sub
scas
xchg
dec
cmp
inc
sbb
fistl
adc
push
xchg
xchg
sub
adc
and
loop
mov
fisubs
mov
roll
and
out
rcrl
mov
xchg
test
jmp
mov
dec
in
sbb
das
and
das
ret
sbb
rorl
clc
lods
xchg
mov
sub
jbe
ret
lahf
and
ds
fwait
dec
jge
and
cwtl
lods
xchg
dec
sti
mov
mov
or
and
and
les
mov
shlb
push
jo
sub
fidivs
mov
xchg
nop
cmp
clc
and
insb
sbb
adc
cmp
and
mov
pop
es
push
popa
js
xchg
jl
or
out
xor
mov
outsb
mov
mov
mov
int
xchg
or
cmp
sbb
test
mov
mov
mov
mov
fdivl
and
xchg
adc
push
mov
add
xor
ds
lock
fs
dec
loop
or
jg
pop
nop
mov
rolb
ja
mov
push
mov
and
inc
inc
out
in
xchg
in
mov
push
cltd
sub
mov
imul
insl
pushf
xchg
add
adc
mov
or
enter
cltd
push
shll
inc
jne
aas
outsb
pop
mov
test
das
inc
flds
cmc
xlat
jb
mov
and
sti
clc
add
ljmp
inc
popf
cmp
cmpl
mov
cs
mov
lahf
loopne
and
jecxz
sub
or
icebp
inc
cmpsb
push
and
mov
loop
and
dec
jp
mov
fdivr
jmp
pop
test
pop
add
and
mov
aas
and
imul
call
mov
mov
movb
in
dec
fbstp
and
xor
pop
fstpt
and
ljmp
xchg
jne
ds
cltd
and
or
lods
fsubrl
and
inc
jge
sbb
xor
and
sub
push
and
cmpsb
out
into
add
xor
test
xchg
lcall
mov
popa
clc
lea
loopne
push
xchg
movsb
or
sbb
shll
xor
mov
or
fsubs
test
mov
add
adc
adc
sub
addr16
adc
imul
or
mov
and
repz
outsb
lods
dec
in
xchg
mov
cld
das
push
pushf
cmp
push
and
and
sti
cmp
out
nop
push
lahf
dec
and
loop
xor
mov
xor
pushaw
and
and
pop
xor
shr
and
dec
xchg
push
int3
mov
fistps
test
ret
jae
adc
cmpsb
mov
push
les
mov
sub
outsb
xchg
test
xchg
push
or
pop
jns
xor
fdivp
push
xchg
push
or
sarb
cmpsl
gs
mov
inc
addr16
cmp
data16
adc
das
sub
adc
outsl
ret
and
push
jecxz
mov
sub
repz
mov
jle
ss
fs
daa
fists
and
xchg
dec
iret
sub
cli
and
or
sahf
test
sub
and
test
dec
jno
adc
xchg
mov
ja
cs
add
sti
cmpsb
insb
pusha
aaa
and
lods
pop
add
inc
pop
push
fwait
add
enter
mulb
add
stos
push
and
xlat
mov
inc
inc
cmpsl
popa
jl
rdtsc
shll
xchg
test
dec
dec
cwtl
test
and
pop
fdivr
mov
int3
movsl
and
adc
jle
and
arpl
aam
clc
mov
scas
insb
sbb
aaa
fcomps
mov
sbb
lods
and
cwtl
ficoml
mov
stc
or
pop
mov
add
inc
dec
sti
test
sub
lahf
inc
cmpsl
das
and
idivl
movl
rcll
loop
mov
ja
pop
inc
mov
mov
and
jp
in
mov
daa
add
push
and
popa
jmp
xchg
xchg
lods
enter
and
xchg
rorl
mov
mov
cltd
mov
pop
mov
and
stc
outsl
flds
inc
lea
and
rclb
push
xchg
mov
fldcw
popa
jge
and
mov
pop
dec
js
movsb
outsl
mov
sub
fistps
dec
and
and
in
mov
leavew
inc
and
push
fsubr
fdivrs
std
cmpsb
xchg
test
or
fwait
nop
pop
pop
and
insl
jo
add
cli
movsb
dec
xor
pop
jno
mov
js
push
and
ljmp
sbb
mov
cmc
inc
mov
mov
arpl
push
cwtl
sahf
lea
and
ret
and
pop
and
and
shll
sub
dec
dec
sub
std
xor
xchg
and
mov
mov
mov
lds
inc
xchg
adc
push
lods
push
rclb
movsl
mov
ds
pop
hlt
pop
adc
addr16
xchg
inc
jmp
push
and
movsb
dec
xor
xchg
arpl
sbb
dec
test
and
mov
and
push
xchg
nop
push
in
xlat
xchg
push
stos
fcoms
les
stc
jge
inc
pop
std
fisttps
and
inc
mov
and
mov
mov
mov
and
sbb
subb
dec
call
int3
adc
insl
pop
and
out
mov
add
adc
dec
xchg
and
das
mov
and
cmp
mov
movsb
fcoms
lock
subl
pop
xchg
pushf
sbbl
push
vmovsldup
and
dec
sarb
mov
mov
push
cmc
icebp
inc
xchg
jne
es
xchg
movsl
push
jge
cmp
jmp
mov
aas
ja
pop
xchg
and
push
addl
dec
ret
push
jo
popf
and
cmp
gs
lcall
iret
jl
adc
faddl
jp
and
pop
das
add
nop
and
pop
loop
xchg
clc
and
aad
scas
adc
jno
adc
iret
popa
sbb
repnz
sub
mov
xor
movsb
pop
aad
popf
push
imul
pop
pop
mov
and
ret
adc
or
idivl
and
dec
jnp
inc
aaa
cltd
jecxz
and
push
and
push
jne
stc
fcmovnbe
das
pop
mov
inc
mov
clc
ljmp
and
lcall
cld
inc
jbe
icebp
dec
dec
mov
cmp
nop
ss
lea
cwtl
test
push
sahf
mov
fbld
ret
xchg
push
and
add
imul
or
pop
add
ret
clc
and
in
mov
pop
sbb
mov
stos
adc
pop
mov
jno
and
aam
and
jge
rol
rcr
inc
mov
pop
into
or
cmp
mov
xchg
test
in
dec
and
pop
jne
dec
and
and
out
jg
cmpsb
push
movsb
in
jmp
mov
adc
lahf
xchg
pop
in
rcl
and
inc
into
ret
and
push
loope
inc
lock
cmp
out
mov
dec
icebp
xor
mov
xchg
add
or
cmc
mov
in
out
inc
jge
or
and
jl
out
mov
fldcw
sub
mov
popf
and
dec
sti
faddl
mov
and
and
lret
or
sbb
adc
inc
cmpsb
dec
ret
scas
jo
push
inc
sti
pop
mov
xor
mov
pop
push
movsl
mov
mov
sbb
clc
cmp
idiv
jne
and
cli
popa
add
cmp
std
imul
pop
jl
aaa
mov
xrelease
and
push
push
push
movsb
shlb
inc
testb
fsubrp
jb
and
dec
jle
dec
insl
inc
fistl
mov
and
mov
dec
aam
xchg
and
shr
in
and
cs
pop
jo
and
adc
and
lods
hlt
sarl
andl
xor
movsb
fbstp
dec
mov
cmpsl
and
lods
adc
mov
je
lret
and
xchg
fisttps
lock
add
stos
dec
mov
int
push
and
das
cs
and
sub
fwait
sub
xchg
jne
and
and
sti
stos
or
mov
xchg
and
icebp
fucomi
and
in
dec
mov
and
std
add
xor
sub
movsb
bound
fndisi(8087
aaa
out
mov
je
mov
sub
out
push
stos
dec
dec
cli
rcll
pushf
mov
xchg
mov
and
push
mov
cmp
and
shlb
xor
stos
dec
mov
mov
push
mov
mov
negl
stos
pop
popf
inc
lahf
es
adc
lcall
cltd
xchg
jl
cmp
test
lock
push
adc
and
or
call
mov
decl
dec
inc
xchg
popf
stc
and
push
insl
out
and
jmp
fimull
mov
add
cmpl
jecxz
cltd
sbb
cmpsb
xchg
mov
and
adc
and
mov
scas
roll
xchg
gs
push
and
and
stos
shlb
and
popf
cltd
push
sub
int3
cwtl
jl
mov
adc
push
adcl
and
sub
and
sub
mov
fs
dec
into
jge
adc
dec
notl
ret
sbb
mov
lahf
and
xchg
jl
xchg
ror
pop
aaa
js
cmp
jle
into
lock
mov
add
adc
cmp
xchg
xchg
inc
leave
fucomip
imul
cmp
pop
xlat
stos
adc
cli
ret
sbb
cmp
dec
dec
lods
inc
fsubs
je
and
popa
and
repnz
xchg
sbb
daa
dec
scas
jp
inc
and
jno
ret
add
mov
inc
ss
pop
loop
or
stos
cmp
jns
in
stos
mov
push
in
mov
roll
xor
outsb
or
aaa
mov
fcomi
jle
aad
das
sbb
mov
mov
test
frstor
mov
lock
jns
pop
mov
jnp
aam
imulb
or
in
les
int
and
sarl
lods
and
mov
xchg
aas
in
and
loop
fsts
mov
das
add
cmp
mov
xor
pop
xchg
and
arpl
aad
xor
mov
and
xchg
dec
nop
repnz
pop
xor
fdivrl
fldenv
int3
xchg
stc
lea
inc
mov
je
jne
cmovnp
and
adc
sbb
loop
push
and
test
inc
mov
leave
xchg
dec
shll
std
push
and
ds
cmp
movsb
xor
jbe
push
test
or
shrl
xchg
test
dec
xor
jecxz
cmp
cmp
mov
pop
out
mov
movsl
aam
mov
push
loop
jecxz
fiaddl
cltd
jno
mov
outsl
stc
pushf
jle
and
dec
movsb
adc
je
mov
pop
jne
lea
xchg
test
dec
fcoml
bound
xchg
inc
pop
jo
stc
xchg
push
xchg
addr16
and
dec
xchg
shlb
cmp
clc
sar
test
cli
push
ljmp
mov
and
pop
fwait
jns
and
das
shll
movsl
mov
imull
loop
dec
and
jmp
hlt
adc
iret
xor
push
inc
sub
aam
mov
sti
ja
and
sub
jle
pop
jge
and
mov
xor
add
xchg
andb
into
aam
test
inc
sbb
mov
sarl
testb
pop
xor
mov
cwtl
add
mov
push
and
sub
pop
jmp
in
popa
dec
test
or
mov
jp
lods
mov
and
fs
mov
xorl
and
jns
cld
xchg
outsb
jmp
inc
fs
mov
jno
into
mov
xor
adc
jns
and
cmp
fcoml
sbb
mov
jns
inc
insb
and
dec
lea
and
mov
sub
sub
ss
movb
outsl
lock
out
aaa
and
pop
mov
pop
xor
inc
fiadds
mov
cli
in
dec
loopne
lret
push
imul
icebp
jge
jle
shlb
mov
adc
jmp
xor
nop
popf
pop
mov
cmp
mov
sahf
fwait
in
mov
mov
xor
inc
das
imul
mov
iret
dec
ds
movsl
jl
loop
push
add
dec
mov
inc
stos
inc
nop
fs
sub
mov
push
inc
sub
jns
jmp
mull
call
mov
jo
cwtl
insb
sub
popa
sub
push
sub
xchg
and
aam
push
or
fwait
dec
xchg
xchg
fcos
pushf
xchg
mov
jge
std
xor
push
add
repnz
adc
push
sub
addb
push
fcompl
push
xchg
das
shlb
and
or
xchg
mov
xchg
in
test
or
arpl
dec
outsb
xchg
mov
int
mov
jmp
dec
cmp
and
nopl
insb
sub
test
ficompl
and
push
mov
jns
pop
mov
and
arpl
jle
jno
jae
and
cmp
icebp
jmp
xchg
cwtl
push
xor
mov
popf
pusha
fimull
hlt
iret
inc
cmp
dec
ds
out
cmp
adc
cwtl
popf
add
mov
mov
mov
into
cmp
dec
bound
movsb
mov
popa
add
pop
ret
sub
xchg
ja
and
and
mov
and
push
shr
ljmp
or
aaa
jg
and
xor
dec
ss
jns
xchg
test
mov
jg
ffreep
and
repz
jge
sub
jbe
cmp
push
jae
sahf
xor
and
adc
pop
mov
xchg
mov
push
shl
sub
sub
jbe
inc
dec
mov
mov
lods
stos
out
pop
pop
je
rcrb
xchg
xor
jae
jecxz
aas
and
nop
test
mov
jne
push
xchg
shlb
or
rorb
popa
imul
daa
mov
dec
orb
sti
sub
pusha
sub
arpl
not
popa
and
subl
cmpsl
insb
xor
mov
enter
popl
inc
in
ret
jne
mov
pop
lea
enter
orb
jle
cmpsb
mov
lret
repz
and
sub
dec
and
aas
inc
ror
mov
mov
les
jnp
shlb
jae
sbb
popa
cmp
stos
sahf
and
xchg
push
adc
out
and
shll
pop
xchg
inc
inc
cltd
mov
pop
aam
cmpb
and
ds
and
pop
out
fiadds
daa
cmpsb
lahf
xchg
sub
imul
pushf
ds
test
sbb
out
ret
xor
aam
or
jb
dec
inc
loope
inc
push
and
jecxz
or
pop
cmp
jmp
cltd
mov
dec
jo
jae
push
pop
ds
sbbl
je
das
mov
shll
fcompl
push
jge
frstor
add
popa
lds
fwait
and
dec
push
fbstp
lahf
xlat
xchg
sarl
cmp
cmp
xchg
test
mov
adc
adc
jb
and
fsubrs
and
dec
lock
sub
lret
and
nop
out
mov
xchg
pop
jecxz
rcl
les
scas
dec
stos
xorl
lcall
loope
in
in
adc
and
push
adc
sbb
mov
fbld
xorb
add
or
mov
and
and
mov
mov
aad
add
and
test
out
and
xchg
insl
dec
dec
sub
jae
fisubl
mov
push
repnz
loope
orl
mov
negl
xchg
dec
sahf
push
adc
xchg
push
jge
sub
xchg
mov
loope
adc
push
imul
loop
mov
mov
dec
xchg
dec
int
inc
cmpsb
inc
push
mov
lods
repz
inc
jecxz
cwtl
jns
in
cmp
and
cltd
jp
jns
add
sahf
jae
dec
jmp
push
sub
mov
divb
and
repz
mov
daa
icebp
and
scas
sbb
out
std
insb
stc
mov
sub
adc
aad
and
gs
sub
mov
outsl
and
sub
test
mov
lock
xchg
mov
add
fsubrl
and
ljmp
pop
and
add
cltd
cli
and
and
mul
pop
sub
data16
mov
lret
lds
scas
mov
out
int
and
std
dec
mov
cmpsb
imul
mov
adc
and
lods
jbe
add
shl
jo
ss
lret
sti
mov
xor
push
rcrb
cli
cmp
pushf
push
xor
mov
pop
adc
add
xchg
pop
push
sbb
ret
and
xor
roll
sub
and
hlt
pusha
mov
add
jns
jns
mov
repnz
gs
and
xor
add
adc
and
lcall
adc
lret
or
lds
cli
cltd
into
divb
loopne
cmp
and
dec
stc
nop
imul
mov
fbld
sub
popf
scas
fidivl
mov
xchg
push
push
cmp
testl
lea
pop
xchg
les
dec
xor
cmp
or
xchg
cmp
and
mov
lcall
pushf
jle
ljmp
adc
mov
dec
pop
inc
sti
rclb
push
insb
mov
cmp
mov
add
in
mov
xchg
ds
mov
xchg
and
shrb
lret
push
out
sbb
dec
adc
and
add
mov
or
and
imul
in
push
addl
jb
and
lock
pop
cs
jl
out
lret
popa
dec
inc
in
dec
mov
popa
jb
sbb
into
dec
cmp
xchg
and
mov
and
jmp
xor
mov
in
add
cwtl
ret
xchg
pop
push
adc
jl
call
jp
fcompl
inc
loope
popa
jo
into
repnz
and
fisubrl
fists
pop
mov
xchg
movsb
cmpb
decb
mov
sub
popf
pop
mov
xor
mov
popa
mov
arpl
lods
ljmp
jle
and
jne
int3
dec
mov
push
and
push
cltd
mulb
and
mov
rorl
inc
xchg
jle
repz
cli
xor
sbb
int
dec
or
incl
jne
lahf
and
subl
and
adc
push
and
fadds
movsb
aad
push
lret
jnp
xorb
iret
jae
fs
xor
sbbl
jg
dec
adc
mov
adc
xchg
pop
bound
cmpsb
cwtl
daa
mov
jmp
dec
mov
sub
and
mov
add
mov
sub
cltd
testb
mov
inc
bound
dec
outsb
mov
out
fisttpl
movsb
pushf
jb
stos
das
imul
cmp
and
xchg
xchg
or
dec
dec
inc
test
push
and
pushf
in
and
or
pop
imul
loope
mov
cmp
xor
cmp
xchg
and
push
inc
movsl
lahf
test
fs
and
scas
sub
dec
popa
adc
cwtl
cwtl
jnp
add
and
popf
sub
shlb
jle
push
xchg
xchg
sub
fucom
and
fisubrs
add
xor
mov
popf
insl
shlb
mov
jle
adc
mov
pop
pusha
lods
int3
inc
xlat
inc
and
call
mov
mov
pminsw
into
fldenv
lods
aaa
sbbb
repnz
mov
pop
add
push
and
push
and
xchg
fimull
xchg
je
sbb
loopne
out
and
testb
inc
mov
loopne
adc
mov
lods
test
cmp
movsb
sub
dec
jl
lea
les
aam
std
mov
test
dec
xchg
inc
ret
xor
jns
and
pushf
arpl
jl
iret
and
cld
cmp
subb
sbb
jge
adc
arpl
je
mov
leave
mov
mov
inc
add
movsb
outsb
loope
and
pop
js
mov
lret
iret
adc
rolb
and
fbld
jo
and
sahf
imul
mov
mov
out
sbb
test
loopne
das
ja
adc
jmp
repz
jle
movsl
xor
add
adc
mov
shrl
sub
lret
rolb
and
pop
cmp
imul
or
inc
lods
mov
and
lea
test
out
cld
lahf
mov
fwait
imul
jae
cmpl
lret
and
mov
mov
and
jnp
fs
getsec
rclb
lahf
jp
inc
mov
bound
arpl
shll
sbb
pop
cmp
in
adc
pop
shrb
popa
and
mov
jbe
xor
call
or
adc
js
loope
nop
mov
jnp
pop
jo
pop
sub
cwtl
push
popa
pop
mov
jmp
sub
and
lea
mov
out
in
and
and
mov
stos
and
aas
xor
push
insl
shl
sub
xor
stos
subb
popf
and
pop
inc
xor
cmc
push
inc
jle
xchg
iret
sub
mov
into
cwtl
xor
mov
add
push
dec
push
xor
sbb
push
and
jge
arpl
sbb
lahf
popa
mov
out
jnp
lret
mov
insl
jge
jbe
push
mov
push
lods
sbb
inc
mov
mov
test
and
add
inc
dec
mov
push
jb
pop
bswap
push
imul
dec
mov
xchg
in
mov
mov
mov
cmp
lds
test
jns
mov
mov
sbb
xchg
mov
inc
mov
movsb
cld
imul
cmp
lods
and
xchg
push
sbb
xchg
sbb
xor
outsl
test
pop
mov
call
add
pop
fwait
cltd
mov
shll
imul
in
cmp
sub
lret
lcall
sbb
mov
xchg
jbe
pop
in
xor
inc
enter
dec
xchg
outsl
cmp
add
push
dec
test
imul
dec
lods
pop
lds
lods
pop
dec
jl
and
sub
adc
stos
sbb
and
adc
ljmp
sahf
movsb
mov
or
pop
movl
xchg
xchg
cwtl
and
call
shll
pop
push
es
pop
add
and
jge
cmp
std
popa
stos
xor
add
jnp
shr
mov
insb
pop
push
lcall
xor
cmp
inc
fstpt
jecxz
aam
fisubl
sub
mov
mov
outsb
and
adc
pop
cmpsl
shrl
mov
mov
rorb
test
xor
mov
in
into
and
aam
mov
movsb
inc
and
xor
ss
std
popf
mov
and
imul
mov
clc
inc
mov
dec
cwtl
mov
out
popa
shrb
xchg
and
ja
and
sti
loop
nop
sub
cli
cwtl
punpckhbw
dec
icebp
test
andb
mov
sahf
dec
cld
xchg
mull
rcrl
adc
xlat
out
ss
nop
popf
insl
and
xchg
add
xor
movl
inc
sub
and
mov
out
gs
push
xchg
mov
dec
jne
sub
mov
dec
fmul
cmp
out
mov
imul
mov
and
xor
push
test
sarl
loop
mov
mov
inc
andb
shll
pushf
movsb
pop
jmp
in
xchg
aaa
jg
xor
xchg
jge
lods
test
int3
xor
aas
pop
ss
and
add
leave
pop
dec
mov
xchg
rclb
and
out
dec
inc
cltd
xorl
roll
mov
mov
hlt
dec
mov
mov
ds
push
pop
hlt
and
xchg
addr16
jo
fmuls
das
sub
cli
shrb
fs
push
mov
addb
inc
xchg
or
stos
addl
hlt
and
sub
adc
andl
and
test
sbb
mov
jp
push
popf
mov
outsb
inc
and
mov
jle
insb
inc
push
aad
fstps
sbb
and
repnz
mov
sbb
and
jae
shll
and
aad
sub
nop
mov
xchg
imul
in
and
lcall
aas
sub
sarl
cmp
fwait
icebp
add
out
and
jmp
mov
sti
dec
cmp
daa
cmpsb
push
and
in
xchg
jno
mov
shll
dec
ficoms
cli
movsb
and
loopne
ja
scas
or
sub
dec
add
fldenv
fsubl
cmc
dec
and
stos
add
test
add
repnz
xor
ljmp
mov
sbb
sbb
fistpll
into
mov
xor
lea
adc
mov
test
push
push
pop
xchg
mov
pop
dec
inc
idivl
pop
call
shll
xchg
jp
leave
lahf
add
jl
xor
and
movsb
mov
ja
sub
test
and
movsb
popa
xchg
fwait
aaa
and
rclb
insb
push
repnz
and
lock
push
shll
xchg
imul
pop
mov
push
add
jmp
es
and
into
xchg
xorl
jge
mov
popa
push
jmp
add
loope
daa
in
fldcw
jb,pt
sub
mov
outsl
push
dec
xchg
xchg
xor
add
sahf
xchg
ret
bound
mov
push
pusha
nop
mov
mov
push
aad
popa
jno
mov
xchg
out
and
pop
ja
nop
mov
fs
lods
pop
jo
mov
xchg
adc
lret
rcrb
mov
sub
push
pop
or
and
cwtl
fsubs
xor
stos
xor
jecxz
jl
add
add
fisubl
daa
adc
ss
je
cmp
and
and
fnstenv
push
mov
and
fidivrl
lods
push
enter
ret
sub
adc
xor
and
mov
inc
and
jge,pt
and
mov
push
cmp
subb
loopne
popa
add
out
mov
loop
jge
pop
sub
arpl
outsb
sub
mov
pushw
ficomps
add
push
jbe
sbb
xor
lcall
stos
mov
test
insl
and
push
test
fisubs
inc
lcall
pop
and
pop
std
xor
cmpb
fisubl
pop
jle
sbb
mov
push
movsl
imul
mov
xorb
mov
push
and
outsl
arpl
fistpll
mov
mov
pop
sar
inc
cmpsl
in
arpl
dec
and
hlt
inc
je
int3
cmp
call
test
mov
jge
and
testb
push
arpl
cli
and
jno
lea
dec
xor
rolb
fbstp
insl
and
or
dec
fldpi
and
and
xchg
cmpsb
insb
sahf
xchg
cmpsb
mov
adcb
stc
push
lret
mov
movsb
mov
pop
mov
xor
adc
and
insb
jmp
bound
movsb
jg
aad
inc
cld
cmp
stos
xor
push
dec
sti
mov
sub
in
lds
prefetch
jecxz
insl
stc
lcall
inc
adc
ret
and
cmp
test
push
mov
jge
popa
test
pop
mov
cmc
fwait
dec
jbe
add
mov
in
loop
push
outsb
jl
cmc
cmp
push
fdivs
out
les
mov
testb
pop
gs
je
push
movsb
js
popf
xor
jge
repnz
outsl
lret
cltd
push
pop
movsb
pushf
daa
sub
mov
jl
nop
mov
test
and
jp
and
jno
push
add
inc
mov
xchg
fdivrp
movsb
shl
leave
mov
push
das
sti
scas
mov
or
fbld
fldl
lret
add
xchg
sub
sub
jne
push
pop
nop
and
pop
fwait
mov
lods
dec
ljmp
inc
inc
push
lahf
fisubs
jns
cmp
lret
xor
call
and
or
bound
or
ret
lods
shl
std
dec
xor
imul
mov
push
push
popa
sub
cmp
daa
in
cwtl
mov
cli
mov
mov
aad
outsl
pop
out
dec
jne
push
subl
and
cmp
and
push
test
mov
add
and
inc
jg
mov
mov
and
cmpsb
mov
das
fwait
cmp
int3
or
and
and
mov
add
cmp
loopne
jle
push
test
cld
les
in
scas
sti
popa
inc
adc
enter
out
inc
add
and
mov
and
sbb
hlt
lock
roll
xor
xor
pop
stc
and
testl
push
inc
adc
imul
loopne
dec
scas
out
cmpsl
pop
insl
lahf
add
imul
fimull
inc
jle
sbb
icebp
xchg
and
cwtl
jmp
nop
mov
sarb
mov
add
sbb
stc
adc
and
loop
mov
xchg
ret
push
pop
sub
cpuid
dec
mov
push
dec
cmp
inc
aam
in
andl
or
xor
divl
xchg
and
add
shl
adc
in
pop
adc
xchg
push
les
icebp
dec
xchg
sub
xchg
or
sbb
push
and
add
pop
cmp
xchg
sub
fnstsw
jp
pop
xchg
pop
and
test
movsb
hlt
add
popf
cltd
inc
lret
and
adc
inc
and
sbb
inc
mov
sub
jmp
push
xchg
push
mov
jl
mov
std
sbb
dec
sbb
add
mov
or
xchg
pop
dec
sub
fwait
test
mov
jnp
mov
sub
and
dec
dec
lds
adc
mulb
push
fnstsw
stos
inc
push
pop
push
shrl
mov
mov
fbld
in
lret
mov
sub
aad
cs
jmp
or
and
mov
mov
inc
popa
adc
adc
test
insb
cli
sbb
shll
and
or
shrb
inc
and
jge
pop
cltd
pop
xchg
mov
sahf
cmp
add
into
xor
loop
je
test
pop
and
out
roll
push
sub
popa
dec
xchg
fadds
jb
mov
adc
repnz
loop
and
push
mov
pushf
push
pop
popf
jg
mov
fcompl
movsb
adc
adc
add
push
cltd
sub
mov
mov
imul
xchg
and
or
call
adc
and
jp
test
adc
popa
add
insl
cmc
cmp
mov
push
or
push
xor
xchg
cmp
cmp
inc
popa
xor
push
mov
jo
push
mov
aas
ret
clc
and
ds
mov
mov
xchg
push
and
cmc
xchg
pushf
rcrl
gs
lret
adc
lds
repz
outsl
or
push
out
fstpl
test
rorl
aas
xor
inc
cmp
inc
add
pop
jp
push
xchg
enter
shl
xorl
mov
and
inc
lods
filds
lret
data16
dec
jmp
out
pop
xor
jge
xor
sub
cmp
sbb
pop
in
rclb
xchg
mov
dec
je
mov
cmp
cmp
data16
push
imul
inc
push
inc
call
data16
and
cmpsl
and
push
and
xchg
cmp
enter
out
pop
stos
cltd
mov
clc
and
and
inc
stos
inc
and
shlb
mov
ds
mov
jmp
stc
dec
adc
mov
sub
int
inc
scas
popa
test
or
sbb
adc
lcall
jb
sub
scas
out
and
or
out
aam
mov
dec
repz
and
cmp
and
jl
pop
sbb
and
jns
movsb
mov
stos
inc
pop
shlb
cmp
jno
push
imul
adc
imul
jge
push
inc
push
jbe
and
into
icebp
sub
lahf
leave
sahf
call
pop
jne
gs
add
orl
fidivs
and
arpl
mov
and
lea
mov
fsub
test
stos
into
mov
dec
fistps
mov
ja
int3
ljmp
xchg
cmp
fnstsw
xchg
add
in
or
cmp
mov
adc
andb
cmp
adc
and
jmp
inc
and
xchg
loop
adc
iret
sub
pop
xchg
scas
mov
cwtl
xor
orl
dec
das
xor
shll
testl
fsubs
popa
pop
dec
push
pop
and
add
and
fninit
and
std
movsl
sub
xor
mov
lods
jecxz
ja
xor
dec
pop
ss
ficompl
movsb
lods
lahf
loop
in
dec
jmp
cmp
and
mov
pop
popa
movsb
sahf
inc
pop
sub
bound
dec
inc
jecxz
adc
popf
cmp
insl
or
packssdw
dec
fisubs
pop
inc
out
call
and
clc
or
jmp
xchg
jge
cmpsl
repnz
icebp
fcoms
fldenv
pop
imul
add
dec
cmovo
or
loopne
mov
adc
andb
fwait
and
cmp
mov
stos
xor
imul
int3
mov
xchg
and
fisttpll
hlt
adc
and
int
jnp
sbb
jne
xor
popa
or
xlat
leave
nop
ret
dec
mov
mov
jmp
jge
pop
cltd
and
lods
cs
dec
and
and
out
inc
mov
shrl
sbb
xchg
xor
out
inc
mov
mov
and
int
jge
sbbl
insl
popa
mov
add
mov
scas
jge
and
cmpsl
push
adc
cmp
inc
fwait
gs
push
and
push
stc
sub
xchg
inc
inc
mov
rcrl
xchg
les
stos
and
add
mov
ret
inc
cmp
mov
scas
xchg
adc
repnz
lds
add
ret
loop
mov
cmpsl
and
gs
adc
push
jmp
xchg
movsl
mov
int3
push
push
mov
mov
outsb
and
and
lret
push
outsl
jnp
and
xchg
aas
sub
add
lret
and
insl
call
sbb
lret
dec
dec
cmp
arpl
or
pop
sbbl
cli
int
adc
into
add
adc
imul
push
popa
testb
and
push
sahf
fs
out
shlb
add
pop
dec
mov
out
pop
adc
mov
lds
test
fmulp
xchg
xchg
lret
or
and
lea
ret
mov
pop
and
push
movsl
cmpsl
mov
imul
xchg
shrl
mov
push
pop
push
xchg
add
mov
subl
out
and
insb
sub
jmp
mov
jno
lret
xchg
lds
dec
repnz
mov
xchg
jno
or
mov
mov
cmp
mov
inc
in
or
xchg
imul
xchg
dec
push
push
pop
push
fisubs
adc
test
mov
jo
and
sub
cmp
inc
in
scas
cmc
xchg
shll
sub
cmpsl
inc
push
xlat
pop
and
inc
mov
mov
and
inc
jg
fcompp
mov
out
mov
pop
xchg
sub
clc
popf
and
cmp
dec
sub
mov
pop
add
frstor
push
scas
pop
adc
adcb
rorl
test
pop
or
cmovge
inc
or
xor
andl
pusha
push
pop
mov
sbb
and
std
mov
add
xor
sbb
pop
and
stc
sbb
cmpsb
orl
inc
xchg
push
and
or
and
es
fbld
outsl
sbb
and
push
frstor
cmp
lods
repnz
mov
sahf
and
movsl
pop
adc
push
jecxz
inc
mov
dec
lods
popa
mov
push
and
xor
and
lcall
movsl
inc
inc
test
and
mov
lods
sbbl
add
mov
fs
adc
dec
jo
insb
jae
fcompl
xorl
and
rolb
outsl
push
xorb
cmpsb
int
add
ror
and
mov
and
push
lods
fnstenv
daa
fcoml
sub
mov
cmp
mov
loopne
add
pop
sbb
or
and
add
and
jp
adc
jae
subl
jl
fsubrl
push
ljmp
mov
dec
xor
data16
push
scas
mov
dec
push
or
xchg
and
ret
and
mov
sub
xchg
and
daa
mov
pop
add
or
fists
mov
xchg
fucom
jne
iret
es
cmp
mov
push
lcall
shlb
pop
pop
or
jno
ficomps
test
es
pop
rcrl
ljmp
xchg
and
xchg
mov
shll
test
xor
subl
std
xchg
ljmp
xchg
shl
push
mov
or
dec
jb
out
inc
cld
add
test
loope
popa
mov
fisubs
in
mov
pop
sub
inc
sbb
mov
mov
into
lods
cltd
cmpsl
cmp
and
sbb
adc
fbstp
push
fstps
imul
adc
and
ficomps
pop
rorl
and
mov
xor
orl
inc
ja
es
cmp
add
and
pop
iret
test
sbbb
pop
and
sub
and
dec
adc
movb
repz
cmp
jbe
xor
inc
add
cmpsl
gs
popa
iret
xchg
sbb
and
push
mov
cmp
mov
inc
and
lcall
movb
loopne
jae
dec
lods
in
or
and
imul
push
sub
xchg
aam
and
enter
inc
or
test
xor
xor
jo
imul
mov
cmpsl
fistl
xor
icebp
fldenv
movsb
add
sbb
xlat
push
jmp
pop
xchg
sbb
call
mov
ja
adc
stos
push
mov
pop
movsb
mov
in
and
in
cmp
mov
mov
mov
and
outsb
outsl
jb
add
je
addl
pop
daa
adc
mov
aam
lret
inc
and
adc
sahf
loop
xchg
inc
jno
and
mov
and
xor
sti
xlat
sbb
in
and
and
jle,pt
test
and
mov
insl
and
and
rcrb
inc
cmpb
andl
mov
add
adc
into
movsl
mov
adc
and
scas
xor
jno
loop
cmpsb
adc
push
xor
movsb
stc
ret
or
sbb
and
clc
cmpsl
insl
push
jmp
xor
lcall
and
xchg
mov
insl
and
mov
hlt
fsubl
and
mov
jl
pusha
and
inc
xor
mov
cltd
or
insb
add
mov
icebp
shll
dec
jno
repnz
mov
jl
sbb
sahf
jb,pt
cmp
bound
push
jo
fildll
jae
fucomi
fnstsw
xchg
and
ja
adc
sub
jp
dec
mov
cmp
aad
and
aaa
insl
shll
xchg
aam
pop
addl
je
rorb
cltd
pop
int
or
lods
sub
and
rorl
call
cmc
ret
jnp
in
mov
ror
jmp
popf
test
das
push
pop
dec
sbbl
xor
sahf
add
sub
cmp
cs
inc
jbe
adc
nop
push
fsubrl
jle
jo
xchg
mov
pop
aad
sub
push
sbb
mov
sbb
add
push
hlt
inc
mov
ss
clc
mov
push
shlb
pop
imul
pushf
imul
dec
sti
in
push
mulb
inc
lret
mov
xor
xor
inc
ds
call
sub
sahf
pop
subl
stc
xchg
push
mov
cmp
shlb
jns
xchg
adc
pop
inc
pop
push
and
sbb
sub
and
jo
lcall
mov
and
imul
jp
sbb
in
cmp
bound
stos
and
out
add
into
and
jb
scas
outsb
push
loope
mov
rcll
insl
test
movsb
dec
pop
mov
daa
mov
xor
js
push
cmpsb
push
jl
adc
push
imul
ds
into
popa
and
neg
adc
cmpsb
jmp
stos
push
daa
outsl
call
and
sub
lds
pusha
and
push
and
stos
arpl
pusha
dec
and
xchg
ret
test
ss
into
push
shrb
xor
and
and
pop
and
cmpsb
xlat
jg
or
loope
lock
shlb
jns
sub
mov
or
and
fmul
adc
cli
and
cmp
push
stos
or
and
adc
decl
pop
insb
xor
into
and
cs
test
jne
jmp
jbe
jno
leave
mov
dec
mov
add
mov
mov
or
ja
push
add
cld
popa
xor
push
ret
cmpsl
adc
inc
mov
and
shrb
and
mov
xchg
jmp
sbb
test
or
pop
fmulp
and
cmpsb
lcall
pop
push
inc
inc
lret
popa
push
popa
jecxz
cmp
xor
mov
iret
add
xchg
popf
ret
outsl
xor
inc
push
inc
jle
add
mov
sub
mov
mov
sub
or
jae
mov
push
jbe
cwtl
xchg
imul
jne
fdiv
mov
adc
xor
and
and
pop
xchg
cmpsl
mov
xor
repz
frstor
push
xchg
imul
imul
sub
lahf
cmpsl
adc
dec
repz
mov
popf
adc
push
and
clc
mov
shlb
push
dec
mov
lcall
xor
inc
jmp
out
lds
lahf
pusha
xor
insl
jp
and
cld
cmp
leave
mov
and
push
lds
jno
mov
ret
and
jecxz
jbe
stos
adc
int
into
jne
movsl
jno
repnz
jns
and
sub
cwtl
fidivs
mov
and
ficompl
andl
jo
xchg
and
fsubs
mov
sbb
and
dec
fnstsw
xor
push
jl
and
push
or
and
popa
daa
push
mov
inc
outsl
out
adc
pop
jmp
enter
push
icebp
mov
and
das
xlat
jp
pop
dec
leave
jge
and
pop
mov
sub
loope
faddp
jecxz
add
arpl
xor
rclb
shll
dec
loope
add
and
pop
or
int3
and
stos
push
sti
outsb
adc
adc
clc
dec
or
xorl
mov
sub
and
mov
ja
mov
scas
sbb
mov
dec
rcll
stos
pop
inc
jno
fbstp
or
and
das
cwtl
jmp
jo
and
int3
push
adc
shlb
push
cmp
cmp
imul
push
mov
mov
orb
mov
movsb
mov
xchg
and
pop
popf
loopne
mov
sbb
add
fstpt
lock
cmpl
jl
dec
push
lahf
or
and
cwtl
rorl
mov
stos
es
int
inc
xchg
inc
leave
fsubs
mov
das
push
dec
cmp
addl
mov
pop
addr16
into
sbb
dec
out
and
sub
push
adc
add
mov
pushf
div
imul
mov
scas
jge
insl
mov
int3
xlat
push
sub
repnz
add
mov
fwait
push
lods
pop
test
out
popf
push
pop
orb
or
out
add
cmp
movsb
pop
andb
aam
dec
mov
pusha
ret
and
xor
rcrb
stc
and
loope
sbb
and
daa
lahf
push
and
adc
stc
push
jae
mov
xor
andl
movsb
hlt
adc
rorb
shr
in
and
push
push
js
test
sbb
imul
xchg
dec
sar
add
inc
and
xchg
data16
decb
scas
push
xlat
movl
xchg
cmc
push
popa
ror
ja
and
mov
insl
xchg
mov
filds
cltd
les
outsb
negb
daa
and
cltd
ljmp
jnp
sub
pop
cld
and
testl
mov
ret
popa
cli
fldz
push
mov
inc
inc
jge
and
ss
dec
push
fcmovu
xor
sub
mov
in
xchg
dec
jb
popa
jle
xchg
repnz
push
aaa
inc
lds
sbb
iret
shlb
bound
inc
ljmp
and
mov
dec
int3
or
mov
bound
lods
cmpsl
xchg
push
and
les
stos
inc
lcallw
jg
push
sub
fbld
popa
movsl
out
sahf
adc
lret
xchg
xor
iret
sti
or
in
and
mov
and
cld
enter
mulb
je
fcomps
fcmovnu
sub
out
dec
aaa
cmp
testb
fsubrl
cmp
mov
std
mov
in
clc
out
mov
xlat
or
imul
lcall
mov
pop
test
inc
mov
mov
xor
lea
shlb
clc
ret
adc
movsb
pop
aam
dec
sub
cmp
gs
xorb
fdiv
inc
repz
or
out
jge
xchg
cmp
adc
add
fdivrl
xchg
push
sub
imul
cmp
cmp
xor
and
pop
addr16
push
dec
lods
dec
out
add
inc
ret
xor
in
lret
jb
push
xor
fwait
out
call
cmpl
or
filds
pop
or
adc
and
in
cmp
loope
adc
mov
lcall
addl
lods
test
addr16
inc
pop
outsb
and
or
daa
push
xchg
inc
pop
jp
xchg
and
out
stos
addb
shll
jmp
add
das
cmc
xor
push
sub
and
movsb
xor
jb
aaa
daa
shl
lcall
sbb
roll
in
ret
das
xor
popa
fisttpll
mov
pop
enter
mov
out
dec
into
pop
or
and
ja
mov
xor
mov
loopne
and
jno
sub
gs
and
push
test
lret
cmp
xor
and
dec
cmp
mov
and
cld
les
and
mov
stos
test
iret
ljmp
and
fsubrs
in
inc
and
cwtl
xchg
pop
shlb
imul
lahf
cmp
subl
jecxz
and
fildl
adc
mov
insl
je
stos
ret
mov
sbb
jo
mov
and
imul
in
repnz
enter
sbb
lods
jg
test
lahf
and
ss
cmp
out
leave
lret
cmpsl
cmp
or
dec
or
push
enter
cmp
mov
sub
loope
and
pushf
lds
pop
xor
and
jnp
fadds
pop
mov
mov
popa
add
pop
outsb
iret
and
inc
stos
push
adc
inc
sbb
cmp
and
or
loope
sub
cltd
pop
pop
add
sbb
subb
es
sbb
daa
adc
and
ret
mov
lahf
add
shlb
or
pusha
cmp
ret
and
pop
mov
jbe
xchg
xchg
pusha
mov
and
mov
mov
pop
popf
cltd
sarb
sbb
add
mov
add
pop
and
daa
orl
mov
lods
repz
xor
xor
ljmp
mov
pop
sub
push
not
and
jnp
fbstp
cmp
pop
and
outsl
sub
pop
je
and
and
daa
push
or
stc
sub
mov
sbbb
cmp
mov
outsl
xchg
andl
ljmp
jmp
popa
mov
xor
cmp
pop
add
push
or
je
mov
jbe
mov
add
mov
test
repnz
inc
adc
jg
mov
push
movswl
add
and
or
sub
cmp
push
or
xchg
cltd
lahf
pop
lahf
mov
rcrl
sarl
lock
leave
xchg
filds
dec
push
lds
jle
out
xlat
js
adc
cmp
hlt
jmp
fildl
and
ficoml
mov
mov
call
pushf
fisubl
fimuls
out
xchg
jg
dec
xchg
pop
dec
movsb
fistps
push
xchg
or
mov
fwait
and
pop
imul
xor
pop
ret
scas
cmpl
cmp
cltd
loope
test
inc
stos
daa
push
mov
jmp
xchg
lods
push
jecxz
fcomps
and
push
push
cltd
dec
mov
xchg
inc
aad
inc
jnp
scas
jmp
dec
mov
lcall
mov
xchg
out
jns
sti
mov
les
xchg
push
push
mov
sub
jae
cmp
jns
cmp
and
push
cmp
and
sub
rdtsc
and
std
cmp
cltd
xor
and
or
mov
jno
mov
and
adc
cwtl
mov
shll
fsts
scas
fcompl
and
dec
push
xor
stos
and
cmp
loope
push
and
inc
jno
fmull
and
repz
cs
lods
and
test
xlat
xchg
add
stos
int3
mov
xor
jns
cmp
or
inc
fldenv
mov
pop
sub
and
sbb
push
pop
lods
cmp
mov
lock
xchg
or
xchg
scas
push
addb
push
xchg
sub
adc
movsl
xor
and
push
and
pop
pushf
or
jns
mov
nop
jo
rcll
test
and
sub
cmp
and
push
mov
movsb
push
enter
mov
bound
and
mov
adc
inc
popf
adc
aaa
jbe
cmp
push
pop
pop
inc
mov
pop
out
adc
dec
dec
dec
ret
imul
nop
and
pcmpeqw
lods
iret
lods
or
leave
cmpl
int
stos
popa
shll
sbb
ret
lcall
inc
xor
mov
ss
out
mov
jns
popa
jbe
les
aam
mov
cwtl
lock
ljmp
sbb
and
or
lock
and
ja
mov
pop
arpl
dec
das
and
xchg
or
aaa
and
pop
and
dec
add
and
dec
std
pop
popf
notl
cmp
sub
sbb
add
add
and
sbb
ds
xor
repnz
jge
in
cltd
jno
jmp
dec
pushf
fwait
in
and
fiaddl
mov
out
add
inc
ds
sbb
xchg
mov
sbb
test
js
leave
sub
cltd
xor
adc
sbb
xchg
lock
shll
sub
mov
mov
aaa
outsb
icebp
mov
fsubr
and
adc
pop
mov
and
rep
fists
int
and
push
and
jecxz
xor
mov
and
or
ds
and
nop
fistpll
fmull
push
int
fnstsw
fisubl
and
add
subl
mov
pushf
or
mov
jno
jecxz
push
dec
bound
insl
jp
xorl
sahf
fmuls
push
js
and
or
repnz
sub
push
xchg
and
cmpsl
lret
insl
mov
leave
cmpl
cmpsb
mov
dec
and
pop
gs
mov
idivl
and
cmpsl
mov
mov
aam
and
scas
sbb
or
ret
shlb
out
movsl
bound
std
fisubrl
and
shll
divl
hlt
and
scas
cmpsb
movsl
sub
mov
in
pop
insb
xchg
sub
cmc
faddp
push
mov
pop
jle
leave
jg
outsl
fwait
rcl
or
dec
inc
aad
xchg
mov
aas
movsb
sbb
inc
inc
loopne
lock
cmp
ds
mov
jae
sbb
dec
mov
iret
rcll
jno
add
mov
lret
or
add
loope
and
xchg
jl
lea
pop
and
fstl
aaa
mov
and
aad
and
push
jecxz
pop
cmpsl
int3
mov
sub
xchg
xchg
cmpsb
sub
fmulp
icebp
jns
pushf
subl
mov
and
push
sub
frstor
inc
jecxz
cmp
fstpt
and
sahf
cmpsl
fs
inc
mov
cmp
int3
outsl
and
in
mov
scas
cmp
sbb
jecxz
jnp
cmpsb
in
data16
mov
lea
idivl
and
in
cmpsl
jo
and
sub
dec
popf
fsubl
fwait
sbb
daa
pop
pushf
mov
imul
mov
xor
lock
cltd
enter
jg
in
cltd
das
into
inc
int3
dec
and
or
cli
push
test
int
cmp
mov
sti
and
neg
xchg
and
or
fisttpl
pop
fisubs
or
ljmp
jns
adc
mov
lea
and
push
inc
sahf
add
adc
push
and
sbb
xor
sbb
scas
andl
jle
repz
sub
push
cld
movntps
jbe
mov
xchg
xor
mov
pop
mov
mov
sub
add
mov
sahf
mov
loop
mov
sbbl
mov
shll
fcompl
jno
lret
add
mov
loope
mov
aas
jb
ficoms
inc
jns
fstl
aaa
incb
xchg
pop
mov
push
rol
xchg
xchg
and
mov
shll
scas
leave
fdivrl
mov
cmp
negl
jmp
test
adc
repnz
mov
mov
je
dec
and
xchg
enter
and
mov
movsl
popa
lahf
ficomps
repz
shrb
or
dec
push
and
push
jb
and
cwtl
rcrb
xchg
xchg
xorb
jmp
inc
mov
hlt
dec
cmpl
pop
shll
ret
mov
pushf
mov
rcll
pop
xchg
and
inc
sub
sub
jnp
xchg
push
jne
addl
in
test
and
shll
bound
test
pop
mov
lcall
cmp
add
sub
enter
and
xchg
jle
mov
fstps
mov
or
lea
imul
add
cltd
aad
popa
int3
out
and
test
jle
mov
mov
push
cmp
pop
cltd
cwtl
or
pop
orl
fisttps
sahf
and
sbb
ja
mov
movsl
and
sub
loop
adc
mov
mov
repz
sub
clc
ds
sub
push
js
and
push
sti
add
out
sbb
movsb
push
mov
mov
lcall
dec
repz
lods
and
clc
mov
sbb
and
mov
cmpsb
and
call
repnz
notl
popa
mull
imul
bound
out
aad
sub
aam
inc
push
inc
and
clc
jae
bound
jbe
and
in
sbb
mov
inc
insl
xchg
loope
sub
cmp
hlt
outsl
icebp
pop
or
jb
dec
in
stos
sbb
mov
clc
ss
jbe
sbb
mov
fs
push
sar
loop
mov
cmp
mov
int3
les
cltd
cltd
pop
jns
and
mov
push
mov
and
mov
lock
sbb
loopne
sub
and
sub
lock
push
dec
pop
imul
jmp
adc
icebp
jns
and
shlb
scas
push
lods
es
fsts
jo
sbb
insl
hlt
imul
aas
jb
int3
pushf
xchg
bound
and
ficomps
ret
and
xor
mov
sbb
jns
fsubs
frstor
xor
in
push
int
mov
mov
cmp
test
int3
scas
in
rcrl
test
pop
mov
lret
movsb
ljmp
movsb
mov
pop
sbb
loope
mov
sbb
ror
js
mov
xor
mov
in
jo
push
xchg
cmpsl
mov
inc
cli
rcll
adc
pop
mov
add
sbb
fcom
mov
lcall
lods
and
xor
push
and
mov
push
and
push
and
shlb
fcmovnb
and
rsqrtps
bound
dec
popf
jb
iret
enter
gs
cmp
or
mov
mov
jno
adc
fstps
repnz
or
sti
pop
fwait
add
and
mov
mov
repz
jmp
mov
dec
stos
aam
rcrl
inc
sub
pop
inc
and
xor
mov
imull
adc
add
scas
inc
in
push
and
cli
mov
xchg
data16
add
shrl
nop
dec
cmpsb
adc
and
pop
push
and
add
or
mov
sbb
mov
scas
jno
repz
movsb
mov
inc
frstor
or
jno
shll
push
lret
sti
outsb
fisubrs
fnstcw
and
sbb
add
fwait
mov
jge
and
int
mov
cmpsb
loope
addr16
popa
inc
frstor
pop
cltd
jmp
icebp
sub
push
and
dec
mov
clc
pop
mov
adc
aam
jge
cmpsl
or
push
pop
xlat
fwait
andb
ret
fisttpll
les
gs
dec
xlat
test
or
and
nop
es
inc
inc
add
rclb
mov
mov
and
lcall
xchg
mov
insb
mov
scas
iret
and
pop
loopne
aas
mov
jne
test
inc
inc
mov
popf
xchg
popa
mov
dec
sub
scas
mov
sbb
popf
push
lods
inc
test
add
push
mov
scas
daa
xchg
imul
cmp
mov
icebp
mov
das
outsl
mov
or
lea
testb
and
xlat
adc
rorl
subl
sub
inc
mov
data16
push
andl
sysenter
ss
xor
in
clc
and
mov
push
and
sbb
add
or
mov
and
mov
mov
sub
and
scas
hlt
cld
sub
ret
sub
mov
cmpsb
or
popa
fcmovb
cmp
loope
sbb
jecxz
cmpsb
push
clc
movsl
in
xor
hlt
jae
leave
xor
jp
pop
and
mov
popf
and
shll
cmpsl
ficompl
ret
jb
les
sahf
and
fs
iret
xchg
pop
cwtl
movsb
push
lret
in
je
shll
pop
and
mov
cmp
sbb
cs
mov
and
pop
cltd
pop
int
jno
sbb
scas
jl
stc
nop
add
mov
xor
jmp
int3
ds
jb
sbb
aad
dec
sub
fsts
frstor
gs
cmc
int3
jg
inc
dec
sbb
out
popa
jnp
adc
aas
inc
add
in
fiadds
sub
arpl
push
xchg
xchg
xor
add
add
in
add
push
imul
add
popa
jb
mov
and
push
mov
and
sahf
hlt
mov
out
shrb
loopne
sub
popa
mov
mov
dec
xchg
rorb
add
cwtl
decl
mov
and
sbb
movsb
popa
ja
and
fbld
inc
aas
bound
mov
dec
cs
mov
and
sbb
adc
andl
test
mov
loop
stos
push
pop
aad
sahf
xor
lock
insb
loopnew
sar
mov
dec
push
dec
and
or
mov
mov
aad
inc
std
jl
xchg
pop
and
mov
mov
movsb
out
sub
push
stos
lret
pop
or
push
pop
adc
int3
inc
push
mov
repz
test
xchg
orl
dec
movsb
xchg
clc
mov
adc
gs
lret
sahf
cld
xor
dec
out
jp
pop
ret
in
movsl
test
mov
popa
insl
ja
scas
out
enter
movsb
or
and
xlat
loope
stc
rclb
jle
push
andb
mov
fisubrs
inc
xchg
in
mov
pop
push
or
inc
dec
xchg
call
das
push
call
cmpb
and
cmpsl
js
mov
mov
xor
cltd
or
iret
inc
insl
sub
or
jle
xor
int
xchg
hlt
dec
jbe
push
test
pop
xchg
lods
popl
adc
jecxz
mov
jle
bound
aas
in
mov
and
push
push
pop
movsb
scas
js
and
jecxz
inc
lea
jo
loopne
and
inc
pop
lods
and
inc
call
xor
jb
dec
cmpsb
faddl
stos
and
sahf
xchg
mov
jne
and
push
push
orl
and
in
cmp
fisttpl
popf
fxch
jmp
sub
mov
out
and
mov
sbb
mov
ret
push
jl
dec
mov
sub
lcall
and
push
mov
lret
bound
popf
push
xor
cmpsl
and
sub
xchg
es
ja
xorl
push
test
add
xchg
mov
jp
add
scas
rcrl
mov
aam
mov
cltd
enter
xchg
and
mov
and
pop
adc
lea
loop
aaa
rorb
ljmp
pop
in
ret
and
push
and
loope
push
jns
out
out
rorb
sbb
xor
aam
lods
jge
cmp
notl
addr16
and
inc
jmp
es
movzwl
xchg
fs
and
pop
sub
scas
and
jb
pop
rcrl
movsl
xor
pop
dec
push
sbb
test
int3
lods
dec
push
dec
mov
mov
pop
add
ss
and
or
arpl
inc
test
mov
test
mov
mov
pop
add
jno
shrl
mov
sbb
ret
gs
add
movsb
cwtl
inc
xchg
jge
and
out
pop
ljmp
stos
xor
or
insb
dec
aaa
pushf
xor
mov
ja
sbb
pop
loopne
mov
jl
xchg
or
scas
fsub
mov
aaa
push
jg
push
xor
inc
shrb
adc
add
mov
popf
adc
pushf
add
pop
and
cmp
dec
mov
arpl
divb
mov
or
std
cltd
lock
test
addr16
nop
lods
mov
jne
or
lahf
roll
and
mov
cltd
push
out
fsubs
rcl
loope
and
sub
sub
sub
enter
test
test
sbb
or
and
mov
nop
mull
es
push
dec
add
je
popa
insl
lret
jbe
sub
les
incl
daa
adc
jmp
and
push
jne
test
nop
mov
or
and
aad
pushf
out
mov
aas
cs
inc
aas
inc
imul
dec
sub
nop
mov
sbb
push
xchg
adc
je
std
and
xchg
out
sub
in
mov
mov
sbb
push
push
or
add
gs
and
add
arpl
cs
scas
sbb
negb
push
xor
push
repnz
mov
lods
movsl
and
aad
and
cmp
sub
and
and
sbb
dec
xchg
mov
add
push
pop
imul
in
push
and
es
add
dec
lcall
out
add
pcmpeqw
andl
and
pusha
pop
outsb
test
mov
icebp
jecxz
imul
in
mov
xchg
and
jmp
push
cli
mov
inc
in
lods
jns
or
repnz
add
add
addr16
and
pop
icebp
adc
shlb
sub
inc
sti
in
push
pop
pop
cwtl
mov
xchg
movb
and
lahf
je
xchg
call
or
and
pushf
aaa
iret
into
cli
frstor
dec
sahf
adc
and
push
sbb
push
pop
lret
jb
cmpsl
pop
sub
push
mov
mov
adc
outsb
sbb
and
mov
cmc
xchg
out
jne
fwait
into
sub
icebp
iret
pusha
mov
sub
and
and
das
or
mov
pop
ret
push
xlat
aas
xor
and
add
aad
and
je
mov
mov
dec
mov
and
adc
popa
and
shl
add
mov
push
inc
and
sub
sbb
daa
lds
cmpsb
or
out
pop
xorl
loopne
lds
outsl
icebp
and
xchg
cld
enter
and
cs
das
cmc
lahf
ffree
and
sub
push
and
and
mov
fstpt
push
add
fisttps
popa
testl
inc
inc
and
cmp
cmp
xchg
push
dec
std
cmp
jp
dec
xorb
imul
fidivrl
push
xor
outsl
and
and
cmpsb
adc
iret
add
imul
add
push
and
popa
or
mov
xor
sub
mov
mov
and
and
cmpsl
mov
out
xchg
pop
adc
fidivrs
popf
jge
stos
adc
mov
mov
dec
lock
hlt
popa
test
outsl
testl
and
rcl
stos
mov
and
xlat
out
movsb
data16
lds
dec
ja
sbb
and
popa
enter
mov
into
add
jp
test
cltd
fldenv
mov
mov
pop
and
enter
jnp
push
or
das
adcl
dec
es
mov
repz
add
dec
add
test
cmp
fsubrs
test
inc
push
movsb
arpl
addr16
mov
and
hlt
sub
pushf
mov
fstps
mov
push
add
ret
mov
xor
xchg
bound
cmpb
add
inc
add
mov
in
popf
insl
and
mov
scas
lods
or
mov
stos
aas
mov
add
push
jno
xchg
sub
mov
cltd
vpmacsdd
mov
cmp
jbe
cld
inc
subb
je
xor
mov
movsb
mov
mov
mov
rcrb
call
or
mov
cli
cld
sbb
mov
jbe
push
inc
jp
dec
mulb
and
imull
pop
js
xor
fsubs
loopne
fisubs
jo
inc
addl
mov
pop
adc
sbb
scas
sbb
sbb
movsl
add
mov
imul
mov
inc
jnp
out
and
pop
adc
xor
push
jbe
xor
dec
and
adc
int3
and
aaa
mov
sbb
in
mov
mov
adc
jne
movsl
scas
enter
and
mov
js
and
hlt
nop
cmp
and
mov
xchg
jp
cmp
lret
add
jae
insl
jns
and
in
pop
xor
and
pop
out
lcall
jle
sbb
cltd
mov
and
sahf
aaa
movsb
cmp
jne
fstps
pushf
push
scas
loope
inc
sub
jns
jl
pusha
xor
sub
mov
cmp
orl
movsb
in
sub
mov
jmp
mov
lods
mov
push
ret
xor
and
xor
stc
mov
jecxz
call
xchg
jg
icebp
push
stos
xor
mov
popa
sbb
xchg
inc
xchg
mov
jge
imul
dec
lahf
and
pop
xor
adc
mov
adc
xchg
ljmp
fisttpl
int3
dec
outsl
js
fmull
pop
scas
sub
loope
and
mov
push
std
sub
mov
push
pop
xor
xchg
pop
int3
cmp
in
pop
insl
pop
mov
adcl
mov
and
daa
arpl
in
and
ret
outsl
mov
sarb
lahf
push
push
sub
mov
and
cmp
pop
inc
jno
mov
call
fistps
test
mov
dec
inc
dec
popf
mov
scas
stc
xchg
mov
cld
sub
push
inc
scas
add
xchg
nop
loopne
inc
pop
mov
adc
aas
call
loop
lods
and
jnp
btc
mov
adcl
sub
sub
lret
test
mov
pop
loop
loopne
outsl
push
mov
and
ret
and
inc
and
xchg
fs
jo
sbb
scas
leave
mulb
pop
inc
jb
lock
add
in
lods
mov
sub
ljmp
shll
xor
cmpsb
and
inc
mov
fisubl
iret
cmp
push
in
mov
and
jle
dec
lahf
scas
adc
jmp
adcl
and
fstps
cmp
dec
loope
mov
pusha
mov
sbb
test
jae
mov
jnp
add
jp
popa
scas
fbstp
mov
push
cmp
fldenv
jbe
xor
sub
lret
mov
mov
xchg
mov
mov
icebp
adc
mov
testl
xchg
into
adc
cmp
sub
pop
xchg
adc
xchg
mov
imul
repnz
insl
sti
xchg
daa
pushf
dec
and
test
fisubl
out
mov
dec
lea
fwait
nop
shrb
add
xorl
std
xchg
mov
shlb
and
aaa
adc
xchg
and
jns
mov
jbe
add
mov
jp
lret
and
adc
mov
adc
dec
mov
push
mov
iret
inc
test
or
into
push
lahf
lock
fstpt
loop
scas
mov
xchg
jp
push
pop
or
cmp
test
movsl
shl
fldenv
cmp
out
pop
ficompl
stos
mov
faddl
lods
push
mov
out
sub
inc
pusha
int
mov
movsl
push
hlt
dec
mov
pop
pop
inc
push
shlb
sti
loopw
inc
pop
jle
mov
ljmp
dec
and
xchg
ss
mov
sbb
push
add
jo
cmc
das
fldcw
js
and
lods
sti
inc
in
lds
mov
cltd
sbb
and
mov
shll
push
jg
add
mov
xor
negl
jns,pn
inc
lcall
push
and
fldt
xor
stos
jmp
jb
add
fimuls
movsb
bound
jae
mov
xlat
popa
cmp
pusha
fimull
mov
test
sub
mov
push
ljmp
call
add
jmp
es
pop
jle
into
into
jns
xor
mov
out
or
sar
and
sub
mov
jo
mov
and
mov
gs
pop
cli
lahf
movsl
pop
jmp
xor
and
xlat
xchg
shlb
mulb
jo
inc
add
jbe,pn
pop
jge
mov
out
adc
inc
int
sub
lahf
and
aam
sbb
mov
addr16
jle
xor
and
and
adc
iret
dec
mov
and
sbb
dec
and
inc
jns
hlt
xchg
repz
adc
test
inc
shll
fcoml
out
int
stos
mov
push
mov
xchg
xchg
bnd
sbb
and
pop
push
nop
fistpll
clc
imul
push
fnstsw
mov
pop
imul
or
test
dec
pop
sub
pop
mov
push
mov
jne
push
fdivs
test
and
imul
fcmovu
inc
mov
test
popfw
ret
insl
test
add
inc
jno
aad
xchg
loop
loop
xlat
lea
jnp
and
js
cmpsl
call
call
and
push
cwtl
frstor
rcrb
ja
test
push
and
lds
pop
push
fstp
xor
jle
outsl
shll
aaa
out
and
inc
cmp
lcall
in
nop
mov
or
and
jns
xlat
imul
insb
and
fwait
or
and
push
in
cmc
fildl
and
in
sbb
and
and
das
call
out
xchg
popa
adc
arpl
adc
push
incl
mov
add
mull
movsl
ret
cli
xchg
cmp
mov
xchg
test
mov
mov
xchg
mov
and
int3
arpl
stc
xor
mov
fiaddl
dec
addl
aad
les
inc
mov
test
out
pop
call
xchg
jge
dec
sarb
sbb
jmp
push
sbb
sub
test
push
cwtl
movsl
hlt
test
dec
aaa
in
xchg
dec
test
jecxz
pop
cmp
adc
movsb
lret
iret
repz
sub
and
mov
cmpsl
js
jnp
and
jbe
icebp
negb
es
ljmp
inc
dec
xchg
into
dec
lcall
cmp
cmp
scas
sub
es
imul
xor
push
sub
and
adc
and
sub
pop
sub
inc
xor
xchg
inc
inc
and
adc
aam
mov
clc
jae
xchg
popa
mov
and
test
xchg
sub
lcall
loop
data16
jbe
or
pop
loopne
in
xchg
and
sti
lods
sarb
sub
sub
imul
lea
into
scas
lds
mov
fisubs
jmp
xor
cltd
push
inc
sub
ret
and
les
icebp
xchg
int3
and
add
out
mov
insl
mov
and
clc
shll
pop
push
loope
lcall
push
xchg
hlt
loopne
cld
push
mov
xchg
mov
cmpsl
enter
scas
inc
pop
pop
and
inc
push
xchg
and
aad
imul
lock
add
mov
jo
dec
and
jge
mov
sub
in
fstl
push
movsb
cltd
aad
mov
xchg
mov
xor
push
mov
sti
out
adc
xchg
sub
jge
xchg
push
mov
mov
xchg
popa
jae
xchg
or
jge
ds
stc
call
push
and
fsubs
lock
sub
pop
es
lea
sub
mov
mov
xchg
call
adc
and
pop
cmp
mov
sub
adc
es
icebp
in
mov
stos
xlat
popa
add
xchg
or
dec
mov
xchg
popf
push
pop
das
incl
lods
loop
dec
pop
jns
das
lds
adc
and
mov
or
lcall
sbb
adc
fwait
shll
fsubrp
imul
popf
ss
xor
sbb
imulb
sub
jmp
or
jns
cmpsb
inc
cmpsb
push
adc
fucom
add
push
movsb
mov
std
insb
jnp
popa
inc
rcpps
imul
sbb
in
iret
sahf
sub
add
imul
jle
and
ret
push
mov
xorl
in
movsl
pusha
xor
popa
aam
movsb
mov
test
popa
clc
fs
mov
fwait
mov
pandn
xorl
test
cwtl
mov
cmp
xchg
cmc
and
push
cld
test
jg
or
mov
movsb
call
icebp
daa
ficoms
mov
and
aad
jo
shl
xchg
and
push
jns
pop
xor
andb
rorb
cltd
pusha
and
pop
vpandn
mov
movsb
lahf
aaa
lea
sub
aad
mov
lock
or
pop
dec
into
jecxz
iret
in
mov
out
pusha
stos
lahf
xchg
clc
jmp
and
pop
lea
add
icebp
inc
dec
loopne
sub
movsb
sbb
inc
fxch
loope
fsincos
and
fisubs
xor
xor
cmp
or
xchg
pop
repz
int
les
and
movsb
pop
outsl
icebp
in
mov
dec
iret
int
and
and
out
xchg
and
lds
arpl
clc
or
daa
in
mov
jns
jbe
mov
dec
jno
xchg
clc
and
jnp
add
lret
insb
and
mov
sbb
and
sahf
push
repz
mov
test
dec
rcl
xchg
clc
and
lret
push
add
outsb
push
jbe
aad
dec
jge
add
xchg
frstor
mov
push
fidivrl
and
pop
mov
das
shlb
aad
jl
fnstcw
mov
data16
test
sti
or
and
dec
push
xor
aas
dec
popa
mov
lret
cmp
and
aam
cmpsl
and
sub
xchg
mull
mov
xor
scas
and
int3
sbb
mov
inc
pusha
adc
and
mov
push
pop
test
mov
add
ss
mov
jmp
clc
adc
xchg
fsubrl
lods
xchg
xor
movsb
sub
pop
repz
dec
mov
mov
inc
gs
data16
mov
pop
dec
mov
repnz
xor
and
add
mov
or
xchg
movsl
and
add
data16
dec
and
jmp
push
jb
add
jg
sbb
outsl
xchg
out
pop
les
add
xchg
dec
pop
fmull
js
std
sbb
rcll
mov
adc
jle
testb
push
mov
mov
xchg
push
movsl
aas
fistpll
fdivl
and
fs
mov
movsl
into
or
outsl
adc
mov
push
ss
xor
or
add
or
nop
sbb
repnz
jns
mov
subb
movsl
mov
mov
lods
pop
cmp
movsl
out
adc
or
jno
repnz
mov
in
rclb
jp,pt
push
adc
dec
push
fidivl
arpl
jp
ss
push
shr
xchg
lea
gs
mov
or
push
sarb
out
mov
in
cmp
xor
xor
and
pushf
add
aaa
test
fcomip
sbb
xlat
ds
daa
push
xor
fistps
and
cwtl
jg
fsubrs
adc
add
fcmove
xchg
cmp
and
shll
lods
and
in
dec
mov
mov
mov
lock
xor
and
push
cmp
inc
cmpsb
frstor
and
iret
cld
in
sub
mov
push
pop
mov
fisubl
xchg
mov
repnz
push
mov
or
xchg
mov
stos
dec
ds
mov
lcall
xor
out
std
lret
and
cmp
and
lock
and
pop
xchg
movsb
adc
adc
push
sub
mov
lret
dec
cwtl
or
xor
movsl
inc
fwait
inc
pop
inc
std
and
xchg
and
fistpll
inc
lret
in
add
xor
inc
ds
andb
popa
or
xor
push
push
pop
mov
inc
in
fsubs
js
mov
insl
inc
add
push
std
mov
in
mov
mov
xor
mov
cmpsl
mov
icebp
and
pushf
or
and
push
in
add
jl
es
pop
rorb
cmpsb
in
mov
aaa
mov
fildll
shr
arpl
sbb
icebp
xor
add
pushw
insb
das
iret
sbb
sbb
and
les
test
mov
rorb
rcll
imul
cs
out
pop
xchg
jb
and
and
loop
mov
leave
jge
xor
and
mov
lret
enter
ret
push
fsubl
test
push
sub
pop
mov
and
inc
jne
jle
jmp
push
ljmp
and
into
xchg
dec
mov
sub
and
push
sub
jo
push
and
lods
movsl
sub
mov
inc
incl
xchg
js
popf
fldl
sub
loope
adc
sub
loopne
pushf
xchg
addr16
repz
mov
pop
out
inc
mov
fisttpl
jne
mov
inc
in
push
or
scas
out
je
enter
fdivr
mov
movsb
add
cmp
cwtl
outsb
mov
mov
xchg
aas
xchg
in
cmp
addr16
push
jno
add
jno
fcmovnbe
sub
and
xchg
fiaddl
xchg
enter
push
xor
movsl
jb
jl
and
js
jge
fwait
dec
xchg
out
and
ss
dec
insb
xlat
dec
dec
mov
and
fnsetpm(287
dec
movsl
mov
loope
insl
sub
mov
es
xor
and
aam
jno
mov
out
xchg
cmpsb
xchg
and
adc
movsb
sbb
int3
icebp
push
mov
and
andb
stc
mov
clc
test
push
and
add
je
and
into
sub
and
sahf
std
test
and
cmp
xchg
mov
cmpsl
and
xchg
mov
xchg
inc
mov
mov
lcall
lods
cmp
sub
xor
xchg
out
repz
nop
push
ja
and
sti
lret
ret
imul
mov
inc
cmp
cmp
movsb
jns
pop
xor
stos
dec
or
push
outsl
sub
les
mov
push
out
sub
cwtl
and
mov
sub
mov
cwtl
cltd
imul
leave
mov
jo
cli
into
and
test
pop
and
mov
mov
imul
pop
inc
sub
pop
mov
push
and
xchg
movsl
and
es
hlt
push
in
lods
sahf
jbe
lea
mov
pop
cltd
push
mov
lahf
ja
mov
cmp
inc
and
lods
cmc
lods
out
inc
jno
out
sarb
cmp
jne
pop
dec
and
add
ja
testl
enter
xchg
sub
and
dec
imul
loop
adc
insl
call
ljmp
pusha
icebp
mov
push
dec
cmc
jbe
mov
xor
mov
daa
jnp
lret
ret
sbb
repz
das
xchg
adc
jbe
inc
lcall
ja
cmc
in
outsb
and
fcmovb
fdivrs
inc
setne
and
test
movsl
cmpsb
pop
push
xorb
push
imul
scas
push
nop
mov
or
clc
and
push
loop
xor
and
sub
jge
test
hlt
push
subl
and
int
lahf
sbb
jge
and
gs
mov
in
mov
jns
inc
and
cmp
and
mov
aad
mov
roll
je
cmc
and
add
in
mov
out
testl
mov
lret
and
enter
and
jb
cmc
stc
xor
mov
je
mov
in
push
insl
fdivrl
xorb
test
mov
dec
sbb
jns
sub
adc
xor
add
jnp
dec
mov
cwtl
push
and
sub
fwait
cmp
cltd
dec
lock
xchg
and
bound
fucom
sub
cmp
stc
xor
add
mov
sti
loope
xchg
ret
aaa
das
push
cwtl
lahf
inc
filds
sbbl
pop
stos
icebp
cltd
jmp
cld
and
js
lret
adc
lcall
imul
xchg
bound
add
mov
rclb
mov
xchg
sub
mov
shrb
repnz
mov
sub
sub
jno
aaa
jg
test
mov
cli
imul
mulb
or
popf
pop
mov
pop
fwait
outsl
testl
jmp
mov
jge
mov
jae
lock
adc
into
add
clc
jg
and
xchg
push
out
jmp
subb
pop
mov
jp
adc
sub
notl
or
movsl
jb
outsl
inc
sub
mov
into
enter
rol
pusha
sarl
sub
jno
dec
and
das
ljmp
pop
fdivrl
push
pushf
cmpsl
ret
loopne
imul
xchg
sbb
ja
mov
bound
xchg
add
popl
movsb
stos
pop
pop
sbb
ja
xlat
pushl
jno
mov
and
outsl
xchg
add
icebp
mov
scas
stos
cs
fdivl
clc
cwtl
sub
call
mov
stc
cmpsl
decb
lea
push
popf
mov
dec
out
imul
scas
and
adc
ret
daa
push
loopne
in
jb
push
roll
pop
test
push
xchg
movsl
cmp
and
dec
jp
sbb
cmp
mov
adc
adcl
lret
cmp
pop
and
jg
insl
sub
fsubl
ja
pop
and
movsl
movsb
mov
decb
cmpb
shrl
cltd
fs
shlb
push
mov
inc
sub
fiadds
addb
gs
test
add
xchg
es
lret
sub
xchg
xchg
xor
ficomps
pop
xlat
gs
push
xor
sar
adc
jecxz
mov
push
shlb
cmpb
cli
daa
and
xchg
add
jns
xchg
shr
inc
movsl
jnp
mov
shll
lcall
in
jne
adc
andl
or
push
xchg
in
imul
sbb
rcrl
xor
pusha
push
mov
jmp
lods
push
shlb
pop
lea
movsb
push
or
jo
add
icebp
push
movsl
in
popa
dec
out
dec
dec
jg
mov
loopne
lahf
sub
add
mov
leave
push
inc
add
lea
sbb
fcoms
dec
fwait
call
sbb
and
test
lret
mov
stos
mov
and
out
mov
push
pop
jno
sbb
dec
mov
and
xchg
and
bound
and
loope
cmpsb
adc
mov
and
xchg
adc
inc
imul
cltd
and
subl
lret
insl
mov
dec
or
sub
jge
mov
pop
adc
test
jo
adcl
or
and
pop
and
cmpl
jno
xchg
cltd
and
sbbl
xchg
outsb
stos
repz
stc
shll
or
scas
aad
das
shlb
push
mov
aam
pop
nop
fisubl
outsb
cmpb
sub
dec
and
rcll
bnd
loop
fcoms
jp
dec
pop
dec
inc
inc
dec
fsubrs
imul
movsl
xor
xchg
movsb
sub
add
xor
dec
popa
or
xlat
add
jl
sahf
test
int3
stos
inc
ljmp
add
popa
xchg
aas
out
xor
outsb
mov
pop
repnz
sbb
xchg
xchg
neg
out
jge
and
call
xchg
and
cmc
push
add
jb
xor
stos
inc
cmp
pop
mov
pushl
jmp
and
imul
xor
and
pop
je
addr16
adc
lods
in
pusha
pop
and
cmc
inc
and
pop
mov
and
mov
sub
repnz
mov
js
in
outsl
lahf
aam
out
jb
es
xor
pop
inc
jge
adc
adc
sbb
sub
and
aaa
xor
jb
push
and
popf
mov
out
adc
icebp
inc
adc
mov
ljmp
outsl
and
jno
leave
bound
or
cmp
notl
mov
adc
cmpl
add
xor
jge
jl
iret
and
cs
ljmp
dec
pop
pushl
ss
ret
add
shl
ret
bnd
mov
sub
fsts
push
pop
mov
int
repz
outsb
cli
pop
scas
movsb
dec
lods
adc
cltd
and
ret
and
sbb
push
fwait
shlb
popf
enter
push
ja
and
test
out
xchg
int3
dec
push
ja
fs
dec
clc
xlat
cmp
and
lods
sbb
lcall
movsb
mov
pusha
mov
jns
xor
jae
ret
repz
stos
mov
adc
addl
fcoms
cmp
push
mov
and
fs
movsl
orb
ljmp
outsb
push
scas
pop
cmp
test
ret
lock
xor
cwtl
fisubl
cmp
outsb
sbb
jle
repz
sub
pop
out
pop
cmp
sti
ret
cmpsl
mov
gs
dec
cltd
push
mov
xor
pop
mov
fwait
mov
inc
popa
jg
fstpl
test
leave
cmp
scas
mov
push
xchg
cli
outsl
scas
test
add
xor
jmp
dec
mov
jne
mov
and
adc
inc
mov
repnz
pop
lods
insl
xchg
push
pusha
mov
cmp
fsubl
and
inc
jp
push
js
and
xchg
adc
add
pop
add
add
lret
pop
sbb
pop
gs
es
add
dec
xor
sbb
andb
cmp
inc
and
push
mov
lcall
dec
ds
xchg
js
arpl
xor
push
and
or
push
jb
std
in
lcall
popf
inc
jp
andb
push
jo
addr16
pop
and
and
repz
leave
pusha
xor
push
popa
adc
dec
and
push
mov
insl
sub
pusha
ljmp
pop
jp
ret
pop
lret
add
push
mov
and
fistpll
pop
cmpsl
add
push
xor
lea
fsubl
movsl
adc
pop
mov
dec
mov
movsb
mov
mov
mov
push
inc
pop
push
and
ret
lret
insb
sbb
sahf
and
aam
imul
mov
push
push
fwait
jmp
aam
mov
xor
cmp
and
push
in
jge
enter
add
xor
and
push
inc
popf
jns
nop
dec
mov
pop
inc
lahf
in
xchg
xchg
and
or
lods
jns
and
xchg
stos
mov
push
inc
dec
add
mov
es
pop
mov
and
cltd
lds
or
lcall
and
cwtl
dec
mov
inc
popl
xchg
roll
xor
pop
xor
pop
out
dec
cmp
test
js
fstl
fidivl
pop
jmp
xchg
and
call
repnz
mov
lods
mov
test
hlt
mov
out
arpl
lods
call
push
adc
fwait
dec
xchg
jae
dec
and
or
or
and
and
and
mov
cmp
pop
xchg
and
fisttpl
add
mov
xchg
shlb
pushf
and
jge
xor
xor
dec
icebp
jle
movsl
xchg
testb
xchg
sub
ljmp
ficompl
add
pop
test
mov
mov
jae
bound
sub
mov
xor
cmp
xor
fiaddl
xchg
imul
inc
movsb
pop
push
in
enter
sbb
repnz
mov
cmp
test
imul
pop
and
sbb
pop
add
xor
inc
inc
jnp
add
out
movsb
cmp
outsb
and
mov
push
sub
xchg
cmpsb
jno
cmp
pop
imul
and
stos
inc
ja
and
loope
cli
hlt
push
cwtl
adc
clc
loopne
daa
mov
jp
and
add
ret
jmp
clc
leave
mov
popf
sahf
ss
mov
fsubl
pop
xlat
inc
leave
and
xor
inc
addb
dec
pop
in
jl
ja
and
push
jmp
inc
add
lods
and
cmp
jns
lcall
pop
loope
test
cmpsl
add
lahf
fsubr
push
sub
xchg
std
xor
and
call
dec
inc
rclb
loope
int3
add
bound
mov
mov
shll
pop
xor
xchg
enter
mov
in
and
xlat
or
stc
lock
outsb
lret
inc
sahf
add
adc
dec
mov
fnsave
xchg
inc
pusha
cltd
test
jge
test
repnz
popf
push
jl
sub
popa
mov
xor
fistps
cmpl
cwtl
xchg
cmp
enter
and
insl
out
and
cmp
sbb
rcll
mov
or
and
loop
pop
addr16
dec
mov
icebp
into
jo
shll
sbb
or
shlb
pop
call
stos
push
dec
andl
in
mov
push
xchg
movsl
jno
filds
inc
jge
imul
cmp
push
nop
xorb
push
sahf
add
mov
xchg
ljmp
xchg
cld
ret
push
insl
and
icebp
pop
adc
and
jnp
lods
and
xor
fucom
cmp
dec
push
fdivl
mov
sub
add
mov
jo
lahf
push
xchg
int
and
mov
add
jge
loopne
mov
cmp
into
lods
movsb
fisubl
outsb
sub
jnp
je
dec
mov
pop
rorb
sbb
xchg
mov
les
mov
ljmp
jle
das
mov
sub
mov
add
fcmovu
pop
push
dec
mov
adc
aas
hlt
push
test
and
out
les
and
lods
inc
push
xchg
inc
std
call
popa
loopne
mov
push
in
in
push
lock
sbb
and
jl
adc
xchg
out
mov
cli
fsubr
mov
cld
push
into
pop
movsb
mov
sub
push
jo
jecxz
call
inc
rcr
fidivrl
mov
sahf
pusha
sbb
mov
inc
int3
shr
or
outsl
mov
and
mov
pop
imul
out
mov
dec
in
jmp
inc
je
loope
and
cmp
test
sbb
xor
sub
adc
or
out
imul
aam
mov
xor
fisubs
mov
aaa
lret
and
gs
xor
aam
inc
call
inc
mov
mov
fsubs
pushf
mov
das
pop
in
cld
les
cmpsl
pop
adc
cmp
xchg
sbb
cs
or
and
jo
lret
dec
loop
mov
insl
and
cmp
aaa
push
iret
mov
dec
xor
ljmp
mov
lret
and
cld
dec
pop
cmp
jo
divb
test
ja
and
imul
inc
push
and
leave
mov
xchg
jecxz
or
or
test
dec
fildll
test
mov
pop
adc
push
jns
jge
and
fstpl
mov
incl
movsb
iret
sub
popa
mov
adc
enter
repz
rclb
popa
jbe
call
notl
push
pop
jge
dec
and
xchg
mov
mov
xor
pop
inc
js
and
and
push
sahf
push
jno
popf
and
xchg
imul
cmpb
lea
aaa
pop
cli
xchg
or
xlat
and
push
jl
mov
dec
mov
sbb
aam
jecxz
pop
inc
insb
xchg
test
xchg
ret
lcall
sarb
testb
dec
mov
adc
jmp
std
mov
stos
andl
cld
shr
pop
and
aaa
sbb
int
insb
popa
sub
mov
sti
std
and
mov
bound
and
push
or
mov
mov
inc
and
stc
or
movsb
push
mov
mov
lock
and
gs
jne
daa
xor
lds
aad
in
addl
push
mov
push
arpl
dec
mov
mov
xchg
xor
gs
fs
adc
sbb
and
fsubs
pop
rcrl
mov
adc
add
imul
mov
and
gs
lods
verr
call
jmp
enter
xchg
xchg
pop
insl
nop
jg
mov
addl
and
stc
lods
jbe
pushf
pop
adc
arpl
xchg
sub
lahf
xor
add
xchg
movsb
lods
addr16
add
mov
inc
mov
mov
xchg
js
jl
popa
push
jnp
push
out
das
dec
xchg
and
xor
mov
and
cmp
add
jae
test
popa
dec
or
push
pop
mov
pop
hlt
mov
outsl
nop
push
out
xchg
leave
jns
dec
sub
and
mov
jge
and
jae
lea
mov
out
cmpsb
insl
daa
mov
xchg
lock
sbb
fildll
mulb
or
test
adc
je
xor
sbb
inc
outsl
mov
mov
adcl
mov
mov
mov
jbe
test
cltd
mov
jnp
adc
jae
push
push
stc
aas
xor
pop
push
cmp
out
pop
xor
lahf
ljmp
or
xor
jle
fs
and
cmp
pop
shlb
sti
xchg
or
mov
outsb
cmp
sub
outsl
push
pop
dec
push
dec
mov
xchg
push
jecxz
jno
out
popa
push
mov
push
test
in
insl
test
xorb
xchg
mov
frstor
mov
cli
pop
scas
jmp
and
sub
and
mov
decl
mulb
add
fnstenv
sar
popa
aaa
dec
cltd
stc
adc
stos
pop
pushf
and
or
es
std
push
iret
fwait
mov
cmp
cld
sbb
inc
pop
jns
cmp
stc
rorl
sbb
mov
push
pop
pop
jp
cld
xchg
int
mov
insb
rcrb
inc
xor
ja
mov
push
lret
xchg
and
push
shlb
int3
std
cmp
aaa
xchg
hlt
leave
xchg
and
or
pushl
lods
fmulp
mov
fucomp
in
push
shlb
popa
lret
cmc
adc
mov
je
outsl
jmp
and
pop
ss
mov
ljmp
inc
orl
and
subb
rolb
stc
int3
movsl
pop
add
adc
and
sub
and
jp
cmpsb
adc
pop
fisubs
pop
dec
and
leave
sbb
add
mov
mov
cltd
mov
lock
outsl
rorl
and
mov
push
and
add
jmp
inc
popf
add
cmpsb
and
icebp
cmp
adc
mull
add
or
cmp
sar
inc
inc
mov
pop
aam
hlt
fbld
sbb
movsl
fstl
stc
in
push
mov
mov
movsb
roll
xchg
and
sahf
out
or
lret
mov
adc
repnz
or
and
test
scas
sbb
mov
gs
popf
push
mov
insb
cmpl
dec
xor
cltd
ljmp
dec
and
fisubrs
aaa
jae
xchg
and
nop
lea
adc
dec
scas
and
add
lea
fs
shlb
je
lahf
adc
bound
dec
push
neg
jp
sub
outsl
in
sub
shl
sub
ja
mov
or
popa
pop
cmc
rolb
push
shrl
and
movsb
push
jmp
xchg
fcmovnbe
fistpl
lock
cmp
into
inc
add
daa
in
in
add
and
call
cmp
inc
and
addr16
xchg
and
inc
pop
and
adc
icebp
sbb
inc
adc
push
sub
dec
rorb
outsb
mov
dec
cltd
inc
pop
mov
xchg
or
or
lods
popf
sub
inc
addr16
pop
dec
mov
and
adc
cmp
stos
shll
fsts
test
cmp
xor
mov
mov
jo
inc
fimuls
sar
and
inc
dec
and
je
and
add
push
mov
sbb
scas
std
fcomp
lahf
jmp
cltd
loop
test
in
outsl
movsl
mov
push
dec
loop
mov
xchg
inc
cli
leave
orl
hlt
mov
lcall
cld
jge
sub
das
sbb
mov
xor
add
sub
and
outsl
pop
dec
cltd
sbb
cmc
and
mov
mov
mov
pop
repz
xchg
mov
std
mov
mov
xchg
mov
dec
loop
lods
daa
xchg
and
adc
mov
int3
mov
or
scas
dec
push
or
fldt
or
cs
clc
pop
test
cmpb
fdivrl
xchg
test
scas
adc
jns
movsb
iret
sub
enter
or
mov
cmp
push
sub
fwait
mov
dec
cltd
lret
inc
in
subl
sub
arpl
sub
test
lret
lahf
and
adc
sbb
cli
inc
cwtl
imul
sub
and
pop
mov
ret
lea
movsb
int
ljmp
adc
jo
popa
cmpsb
dec
mov
movsl
bound
fsubl
pop
add
add
js
shrd
pop
xor
iret
xor
arpl
ds
test
xchg
inc
and
mov
dec
adc
adc
and
lods
scas
jbe
outsb
sbbb
add
scas
int3
xor
mov
daa
xchg
andb
and
sbb
xchg
cmp
mov
popa
sub
test
mov
jecxz
lcall
cmp
js
cmp
out
lods
mov
lea
lods
cmp
hlt
movsb
ja
fbstp
popa
push
lret
stos
cmp
xor
push
mov
fcom
stos
xchg
cmp
jbe
jnp
std
sahf
leave
and
xor
scas
or
or
adc
and
jge
inc
fidivs
call
sbb
dec
out
and
test
popa
sub
xor
mov
sub
call
in
mull
loop
aad
add
ljmp
and
iret
fisttps
mov
ret
sub
or
jnp
pop
and
inc
scas
sbb
inc
mov
aaa
adc
inc
mov
mov
and
mov
mov
or
stc
mov
test
lea
aas
aad
pop
and
test
dec
cs
inc
jne
xchg
mov
test
lds
or
fisttpl
mov
sub
aam
mov
jbe
lods
xor
fwait
pusha
and
push
mov
test
inc
adc
pop
jne
scas
jge
dec
addr16
insb
test
mov
dec
imul
bound
fnstenv
in
sti
jg
pop
ret
ds
mov
popa
addr16
pop
imul
ud2
mov
sub
and
sbb
lahf
ds
ljmp
dec
jle
and
lods
test
out
push
xchg
sub
or
mov
jno
xchg
imul
jmp
out
push
sub
mov
cmp
mov
jno
pushf
mov
mov
sbb
loopne
cmp
pop
test
and
or
mov
test
cmpsl
pop
sub
jl
lods
inc
inc
mov
frstor
cmc
nop
lret
je
pop
fidivs
jmp
fdivrs
popf
fcompl
inc
rcr
mov
aaa
pop
mov
and
jns
pop
push
sub
mov
lret
arpl
mov
jg
mov
frstor
aaa
inc
sbb
rcl
jmp
adc
mov
mov
and
or
mov
xchg
mov
sub
or
pop
and
ret
dec
inc
ds
leave
cld
ja
jge
sbb
mov
test
ljmp
clc
out
scas
dec
push
mov
shl
and
jns
aas
hlt
enter
mul
das
aam
pop
call
pop
sub
mov
and
insl
inc
adc
fiaddl
cmc
repnz
cmpl
push
lret
popa
mov
outsl
or
pop
cmpl
dec
add
rcr
call
mov
sub
js
jecxz
or
andb
sub
mov
in
xchg
gs
lahf
aad
jle
and
and
adc
and
xchg
aad
pushf
lahf
inc
and
add
sub
mov
mov
cwtl
sub
and
xchg
mov
pop
addb
sub
loopne
mov
leave
fs
sbb
dec
push
xchg
lret
int
push
sahf
shlb
pop
mov
xor
mov
jae
call
sahf
and
fsubs
adc
sub
jae
push
mov
sub
sub
movsl
xor
inc
sbb
mov
lahf
jmp
and
test
scas
subb
mov
pop
mov
mov
adc
sbb
loopne
sbb
xchg
sbb
adc
in
sub
adc
mov
sub
and
xor
mov
inc
dec
ja
xchg
sub
mov
adc
jae
ss
add
mov
pop
repz
push
adc
and
xchg
scas
pop
adc
mov
addb
movsb
stc
aad
xor
pop
or
adc
in
daa
mov
mov
and
add
mov
das
js
fsubrs
out
cmp
and
jbe
outsl
lock
and
push
pusha
lods
loope
add
out
jns
sub
scas
repnz
and
mov
add
and
dec
fsubs
dec
inc
movsb
out
fidivrs
aad
bound
movsb
into
mov
adc
imul
add
add
sbbl
mov
and
push
dec
cmc
repz
or
addl
pop
sub
test
push
push
into
or
icebp
test
outsb
icebp
dec
inc
pop
xchg
add
and
fisubrs
push
inc
lcall
xor
in
into
sbb
lahf
pushf
and
cwtl
mov
and
cmp
push
mov
mov
mov
seta
jl
xor
push
and
xor
data16
popf
sub
pop
pop
or
push
rorb
sarb
or
push
and
pop
mov
dec
and
adc
and
lahf
cmp
jle
popa
pop
js
pop
push
and
push
idivb
mov
cmp
mov
cltd
int
and
cmp
test
pushf
shll
cmc
hlt
and
jae
inc
xchg
push
jge
sti
pop
adc
sar
cmpsl
or
daa
addr16
in
jge
aam
fsub
jae
leave
les
std
mov
test
test
and
dec
lret
xlat
or
addr16
mov
iret
clc
fwait
inc
xchg
fwait
or
push
dec
ss
repnz
mov
int
and
push
ret
inc
stos
mov
mov
xor
mov
jge
mov
scas
test
out
and
les
xor
and
call
fldenv
daa
jno
stos
xchg
lock
and
and
sbb
push
dec
push
and
enter
mov
ficomps
sub
mov
jb
mov
aam
inc
mov
sarb
je
mov
mov
mov
fadds
and
xchg
lahf
dec
push
fwait
sbb
fsubl
sbb
test
xchg
sbb
mov
ficoms
es
std
pop
mov
iret
push
or
inc
push
mov
xchg
sahf
push
ret
mov
pop
pop
xor
sbb
out
inc
xor
and
push
mov
and
xor
mov
lods
inc
sub
and
mov
or
ror
xchg
jle
in
pop
and
xchg
cmpsb
xor
fisubrs
jmp
dec
mov
test
sub
push
aaa
lret
sbb
ret
push
mov
cli
imul
pop
data16
nop
sub
mov
push
sub
jge
test
mov
iret
and
pushf
jb
adc
or
aaa
sti
sub
fisubl
loope
mov
inc
stos
pusha
test
and
in
bound
sbb
imul
loopne
inc
sub
push
xlat
lret
jp
mov
fwait
and
xchg
iret
and
shll
xchg
out
sbb
addb
add
pop
data16
xchg
jns,pt
push
aas
aaa
dec
pop
sbb
shll
mov
rcrl
int
pop
cmpsl
test
mov
imul
fistps
sbb
xor
icebp
cwtl
push
jns
pop
pop
cmc
and
lahf
lock
xor
push
and
jb
mov
call
and
into
roll
lods
pop
jb
adc
and
inc
sub
mov
sbb
pop
ja
and
mov
lds
xchg
and
sahf
push
add
mov
in
and
aam
gs
icebp
ljmp
movsl
pop
testb
and
jge
movsb
hlt
jno
idivb
stc
les
mov
adc
and
add
sbb
jge
dec
ja
and
iret
mov
shlb
jle
pop
add
lcall
pop
and
repz
fadds
cmp
out
inc
push
jmp
and
push
jle
mov
jbe
add
in
lahf
add
stos
mov
mov
mov
mov
and
push
insl
or
std
sub
push
xchg
dec
js
test
pop
jl
jno
lods
test
mov
and
stc
mov
pushf
mov
fimuls
and
inc
mov
mov
fcoml
sbb
int3
xchg
and
sub
sub
xchg
jbe
jle
sbb
int
faddl
jbe
cmp
xchg
repz
pop
push
sub
fs
xchg
pop
subb
faddp
imul
adc
cmp
daa
cmpsl
imul
mov
aas
xor
popa
cmp
mov
and
jmp
sbbl
ss
and
mov
popa
and
pop
in
and
mov
jl
push
and
mov
dec
sub
and
popa
pop
mov
sbb
rcr
inc
addr16
icebp
pop
jecxz
std
inc
push
cmp
jp
or
mov
mov
daa
outsb
xchg
xor
loopne
test
xchg
adc
mov
pop
xor
and
pop
jmp
pop
loope
fsub
sti
dec
push
and
sbb
inc
test
bnd
enter
fnstsw
and
mov
ret
xor
repz
lds
movsb
js
fst
lahf
inc
aad
aaa
mov
cld
push
ds
in
filds
mov
repnz
xchg
dec
add
cmpsl
je
test
and
pop
lahf
in
cmp
sub
cmp
push
scas
xchg
mov
inc
aaa
cmp
and
or
dec
fnstsw
jle
shl
fdiv
mov
and
jbe
inc
fidivl
xor
sub
push
adc
idivb
inc
jb
popa
mov
out
adc
jl
mov
sub
inc
xchg
xchg
and
pop
jbe
cmpsb
outsl
jb
fcompl
and
xor
clc
fisttpl
cmc
and
jno
sub
nop
cli
lcall
in
xor
ds
push
jg
enter
xchg
adc
aad
xchg
mov
lcall
cmpsl
and
cmp
jge
xchg
inc
or
mov
jno
and
sbb
add
daa
clc
and
push
mov
and
cmp
adc
test
loop
cmp
jb
out
jae
jbe
fmuls
cmpsb
and
cmp
inc
sbb
adc
and
in
and
pop
ljmp
or
hlt
xchg
dec
and
out
fs
mov
or
mov
loope
rolb
jnp
add
out
lahf
cmp
sbb
cld
sub
das
cmp
add
and
jmp
lock
dec
pop
mov
push
pop
mov
daa
push
pop
sbb
xor
jbe
xchg
jb
shlb
andl
in
pop
pop
xchg
test
jg
movsb
mov
or
xor
je
jge
lcall
push
fistpl
ficompl
mov
mov
mov
xchg
and
and
stos
cmpb
sbb
movsl
cmp
movsb
insl
xor
aas
xchg
mov
lock
rcrb
and
cmp
and
inc
hlt
cmc
cmp
mov
push
sar
lock
das
jo
jbe
sub
xor
mov
sbb
mov
adc
and
aas
scas
mov
loopne
popl
sub
loop
scas
popf
rcrb
out
mov
and
cltd
test
movsb
pop
push
ret
dec
push
loop
lret
fs
jp
outsb
mov
clc
pushf
and
cltd
inc
popf
xor
les
mov
push
push
xchg
icebp
and
in
mov
and
cwtl
dec
inc
cmp
movsb
mov
arpl
sub
mov
sahf
mov
pop
push
addb
jo
or
stos
data16
and
sub
dec
and
pusha
cmp
adc
and
pop
stc
and
repnz
icebp
inc
test
inc
inc
and
mulb
jbe
cmc
and
dec
test
fwait
arpl
and
xor
mov
out
and
test
ss
sub
jb
adc
out
or
outsl
and
sarb
lret
jecxz
add
shll
xor
jl
out
mov
and
add
and
ljmp
mov
jo
and
xor
stc
xor
aas
pop
xor
lds
xorl
lcall
inc
dec
push
sub
and
mov
and
pop
dec
fdivrl
insb
mov
push
xchg
mov
sbb
and
lock
cmp
rcrb
xchg
push
and
dec
dec
adc
mov
mov
adc
icebp
stos
loope
mov
or
scas
lahf
lods
push
and
adc
cmpsb
pop
ret
shrl
and
sti
jne
imul
inc
dec
mov
or
and
in
pop
cmpsl
repz
sub
call
test
lret
cmp
xchg
inc
or
push
adc
inc
jbe
in
aaa
sub
jo
repnz
push
dec
mov
adc
add
and
jno
pop
xor
lret
hlt
jns
insl
int
lahf
and
call
pusha
ret
mov
push
mov
sti
and
dec
paddb
cmp
out
xchg
mov
testl
dec
xor
subb
and
cwtl
xchg
cli
jmp
ret
pop
and
pop
in
daa
lods
xchg
lods
mov
xchg
sub
addr16
hlt
cmp
sbb
nop
cmp
daa
add
sub
in
dec
fiadds
mov
test
or
or
leave
push
xchg
and
loop
lock
aaa
and
fldt
add
mov
add
mov
call
mov
dec
xchg
imul
and
shl
decb
push
and
movsb
add
inc
jg
and
xor
add
adc
push
cmp
lea
outsb
das
mov
cwtl
imul
loopne
daa
addr16
inc
mov
fistpll
xchg
daa
imul
and
sbb
popf
add
das
xchg
lahf
mov
push
mov
mov
mov
imul
mov
jecxz
daa
mov
dec
ret
lahf
bound
rcr
addr16
arpl
jns
in
outsb
sub
pop
jg
inc
loope
dec
jge
stc
and
jmp
xor
add
xor
and
jb
gs
push
or
and
mov
ficoms
pop
push
cmpsl
mov
out
mov
dec
and
paddsw
jge
mov
mov
adc
inc
movsb
insl
hlt
repnz
and
loop
ss
outsl
or
and
inc
pop
jl
push
cmpsb
cmpsl
push
shll
mov
and
test
andb
or
sub
add
push
jmp
and
inc
roll
out
push
add
adc
and
mov
or
push
mov
test
lods
rcll
idivb
aad
cwtl
sbb
mov
push
aaa
xchg
mov
mov
popa
dec
mov
out
sub
xchg
xchg
mov
incl
test
or
daa
or
sub
insb
les
icebp
xor
fsubl
iret
ror
movsl
jno
repz
add
ds
xlat
pop
and
ficompl
cmc
sub
and
push
or
fwait
xchg
rcrl
aas
pop
inc
popa
ljmp
cmp
mov
lcall
pop
and
cmp
push
roll
rclb
fs
mov
and
fcmovne
xor
sbb
mov
cli
into
and
lret
mov
and
stos
or
mov
popa
adc
mov
insb
xor
push
arpl
or
jecxz
mov
js
rcrl
fsubrl
loopne
das
xor
push
sbb
lret
xor
add
arpl
orl
dec
movl
sahf
pop
jno
mov
push
and
push
outsl
cwtl
loope
lods
inc
xor
pop
xorl
test
dec
cltd
or
jno
cmp
adc
out
and
leave
xchg
mov
add
and
push
mov
mov
add
dec
scas
mov
imul
vpsadbw
mov
and
fistpl
cwtl
mov
lock
cmpsb
js
lods
in
inc
fnsetpm(287
hlt
push
xchg
fs
mov
jno
sbbl
and
cld
ss
mov
fisubs
mov
jne
mov
push
cmpsb
xchg
mov
addl
shlb
sub
or
mov
cmp
inc
dec
and
shr
xchg
int3
fisttps
out
adc
cld
mov
and
lea
cli
and
xchg
shrb
loop
into
inc
xorl
lds
mov
xlat
sub
gs
ja
leave
repz
stos
cs
stc
mov
mov
pop
fisubl
inc
jl
sahf
mov
stos
into
cmpsl
sub
sbb
mov
mov
xor
out
push
clc
jp
sbb
ret
fs
and
orb
and
insl
push
inc
and
ss
mov
pop
mov
stos
adc
jo
and
add
mov
and
scas
es
dec
push
and
out
ds
dec
sub
adc
push
and
aaa
inc
pusha
xchg
repz
enter
sbb
pop
jno
jns
ret
jg
mov
sbb
sbb
sbb
test
mov
mov
lret
insl
mov
les
stc
sub
jge
andb
sbb
pusha
push
xchg
and
iret
add
mov
loopne
icebp
mov
test
mov
jl
repnz
ljmp
xchg
mov
inc
and
orl
mov
cs
addl
jo
jns
sahf
fdivr
inc
xchg
mov
popa
inc
dec
aam
and
cwtl
xlat
jae
faddp
divb
lods
into
and
pushf
popa
inc
mov
pop
hlt
aas
and
mov
inc
movsb
xor
xchg
nop
push
fsubp
inc
rcrb
shrl
stos
xchg
adc
lods
ret
dec
mov
mov
or
pushf
add
dec
sbb
pushf
add
and
loope
aam
outsl
rcrl
test
push
push
mov
mov
push
icebp
stc
and
xchg
lods
adc
inc
and
out
and
mov
jle
loop
mov
pop
fnstcw
insl
jo
jmp
mov
add
imul
xchg
inc
dec
inc
xchg
or
lret
rcll
outsl
data16
fwait
testl
insl
imul
and
jae
int
shrl
shlb
fnstenv
mov
add
scas
mov
filds
or
xchg
int3
add
das
or
ljmp
mov
pop
xchg
add
or
mov
push
sub
sbb
sub
push
dec
lahf
xor
ret
js
add
movsb
inc
jbe
push
cmpsb
andl
lods
lahf
dec
jp
cmp
fsubs
shlb
les
sub
in
pop
mov
sub
mov
mov
insl
or
bound
mov
out
adc
mov
jmp
or
loop
cmp
ret
inc
lret
daa
push
popa
mov
fwait
cwtl
repz
and
xchg
call
jns
lods
inc
dec
test
jns
adc
dec
mov
ds
fwait
mov
xchg
ret
jge
and
lods
mov
and
inc
mov
popa
mov
xchg
and
add
adc
dec
or
push
xchg
mov
jnp
add
xchg
and
stc
mov
pop
mov
xor
and
out
jmp
and
xor
mov
jae
stos
and
adc
mov
inc
add
cmp
popa
fcmove
cltd
pop
test
cmp
sbb
int3
aad
cld
scas
popf
lea
mov
mov
jge
aas
cmc
inc
popa
xor
addr16
xlat
mulb
pusha
int
pop
movsb
and
sahf
jae
leave
push
sub
and
outsl
sbb
cmc
or
cmp
dec
outsb
test
aad
pop
and
xor
and
lds
movsb
jp
xchg
mov
ret
pushf
stc
mov
es
sub
in
cwtl
mov
mov
insl
pop
mov
sbb
movsb
jnp
fildll
test
and
sti
mov
xchg
ficoml
repz
lcall
rcll
add
xor
dec
adc
cmc
pop
shrb
mov
lret
and
gs
loope
cmp
xchg
call
xor
inc
and
add
lret
into
lods
movsb
aad
mov
fabs
pop
repnz
xor
movsb
scas
adc
icebp
and
clc
decl
mov
add
and
aaa
fldl
push
fidivrl
xor
xchg
arpl
fnstcw
xlat
lods
scas
xchg
adc
shrb
sub
leave
arpl
xor
and
mov
and
mov
adcb
inc
and
lcall
and
xor
loopne
and
jb
xchg
loop
aam
and
mov
and
and
or
shrl
loop
inc
shrl
push
jge
js
jb
mov
pushf
mov
mov
in
mov
jl,pt
xchg
in
and
mov
lods
push
out
push
sub
cli
insl
ss
mov
sbb
push
and
je
imul
mov
fnstsw
shrl
mov
fisubs
push
push
xchg
xchg
call
mov
insl
hlt
andb
mov
adc
mov
iret
mov
out
xor
int
sub
inc
orb
jo
clc
dec
cmp
jbe
sbb
xor
call
and
cld
popf
dec
sahf
sbb
out
xchg
pop
aas
xchg
test
and
leave
jge
sub
les
cld
xchg
add
sbb
xor
inc
mov
mov
jnp
jne
cmp
and
sub
dec
mov
mov
and
in
inc
and
in
add
sbb
call
adc
dec
cwtl
shrb
movsb
ja
jp
int
pop
imul
push
and
xor
or
movsb
ficompl
pop
mov
decb
pop
add
out
cld
imul
dec
test
das
sbb
and
iret
pop
and
mov
loope
call
and
xchg
fisubl
out
pop
push
les
js
mov
mov
cltd
dec
sub
mov
ja
lock
enter
pop
or
movsb
insl
push
sti
ret
sbb
and
jl
lea
and
std
mov
push
mov
and
iret
sub
push
out
dec
mov
mov
sti
stos
nop
pop
std
and
repz
cld
xchg
mov
lcall
xchg
in
inc
inc
popa
mov
repz
xchg
imul
add
fsubrs
mov
mov
push
or
and
inc
pop
das
test
ffreep
xor
jecxz
lret
pop
loope
scas
dec
push
shlb
and
mov
jae
inc
sbb
sbb
loop
push
mov
sahf
pop
test
fldenv
mov
xchg
fcmovbe
pop
scas
and
adc
sub
cld
sbb
pop
lods
cs
lods
cmp
mov
cmp
push
mov
pop
and
add
mov
jae
movsb
rcrb
jno
xor
and
mov
cmp
imul
lea
push
pop
mov
and
add
sti
clc
sbb
and
pop
int3
outsl
repnz
insl
orb
cmpsb
add
and
push
xorl
or
aas
jae
and
je
ds
call
mov
out
and
jo
lcall
push
mov
ss
shlb
mov
repnz
sub
mov
imul
cmp
lahf
xor
sub
mov
idivb
les
out
cld
cmp
and
stos
mov
mov
add
mov
ss
into
in
addl
adc
outsl
std
mov
fwait
jmp
sub
ret
mov
xchg
stc
xchg
inc
push
pop
scas
movsb
push
fmulp
lds
mov
adc
jbe
lods
adc
mov
in
icebp
pop
movsl
test
lahf
mov
jl
and
and
xchg
shrb
sub
add
ds
pop
popa
aaa
js
push
cmpsl
insl
sbb
cmp
pop
and
xor
inc
xor
inc
subb
cmc
jbe
push
fildll
pop
in
and
sti
mov
pop
push
and
mov
gs
dec
data16
test
inc
lods
or
and
mov
data16
and
cmp
xchg
pop
popa
and
cmpl
xlat
inc
adc
dec
movsl
mov
fsubl
cmp
sub
and
pop
in
cli
mov
popf
movsb
mov
adc
sub
push
mov
sarl
cmp
ja
into
add
loop
jns
add
imul
sbb
out
das
mov
cmpsb
xor
fmull
and
loope
stc
sti
pop
or
push
and
xchg
mov
and
mov
in
mov
push
or
add
mov
les
inc
and
push
outsb
jnp
ret
aaa
inc
sub
mov
pop
or
lock
mov
les
dec
or
cwtl
add
icebp
mov
mov
push
out
cmp
mov
xchg
and
lea
sbb
xchg
pushf
lret
ss
cmpsb
inc
add
sbb
jg
aad
insl
and
addl
fiadds
or
fwait
lea
pop
mov
mov
adc
pusha
add
popa
cmp
mov
ljmp
xchg
jge
mov
popa
leave
push
cmpb
pop
in
push
jecxz
shlb
xchg
shll
or
icebp
xorl
and
mov
mov
fstl
xor
pushf
das
pop
addb
dec
dec
cltd
and
lods
cmp
jbe
sahf
xchg
xchg
or
mov
or
dec
jle
sub
xor
scas
and
push
and
mov
mov
jno
mov
push
xor
mov
imul
sbb
mov
and
into
repnz
lods
cmp
cmp
and
lret
mov
scas
jae
xchg
out
and
imul
and
cli
int3
xor
repnz
jmp
out
cmpsb
out
mov
pushf
ss
outsl
and
or
aam
cwtl
sub
xor
cmp
arpl
test
sbb
das
pop
and
popf
imull
mov
iret
enter
mov
sbbl
mov
dec
imul
loop
mov
filds
jno
xor
out
xchg
mov
scas
push
dec
ret
and
enter
push
pop
cmp
iret
dec
icebp
sbb
dec
or
adcl
fs
mov
lds
lahf
repnz
inc
pop
or
in
lahf
adc
bound
popa
push
xor
outsl
jp
stos
test
jns
fcoms
cmp
leave
and
mov
out
in
movsb
adcl
outsl
shlb
cmp
push
dec
inc
add
pop
push
cltd
mov
and
cmp
xor
daa
imul
inc
sahf
and
jecxz
inc
bound
mov
cmp
in
pop
and
push
sub
mov
push
int3
mov
xor
jb
jp
mov
and
inc
mov
and
adc
fwait
and
inc
jno
lret
jmp
and
pop
stos
and
leave
nop
ss
cmc
and
xchg
push
dec
and
addr16
es
ret
mov
imulb
inc
shll
and
inc
mov
dec
movsl
pop
imulb
add
icebp
fbld
jmp
imul
ret
adc
jle
mov
stos
mov
push
in
and
mov
movsb
aas
cs
icebp
add
or
bound
mov
or
cmc
shlb
out
push
test
popa
divb
xlat
or
jmp
xor
out
pop
and
outsl
decl
stc
sbb
popa
push
test
or
sbb
in
xchg
and
shrb
xchg
cltd
and
jg
cmpsl
dec
movsb
movsb
sarl
cmp
mov
mov
stc
and
adc
inc
pop
mov
ljmp
mov
cmp
outsl
inc
lcall
push
das
dec
mov
xlat
sbb
mov
jg
sub
xchg
xor
xchg
std
xchg
mov
cmp
jns
mov
imul
repz
cmp
ljmp
fcmovnbe
mov
jl
in
scas
in
iret
test
aam
cmp
cmpsl
mov
test
cmc
nop
xor
jg
xchg
arpl
cmp
mov
fcompl
daa
mov
add
and
je
lds
and
sahf
push
cmpsl
mov
sbb
pop
cmp
and
repnz
add
sahf
jmp
or
inc
or
ret
jge
jbe
movsl
test
daa
push
xchg
mov
jp
roll
ds
mov
cmpsl
pop
mov
imul
cs
mov
loop
and
push
out
add
push
adc
ret
lcall
and
cmp
or
js
in
jae
lods
add
jle
cli
xchg
test
and
adc
les
jge
int
test
pop
add
in
mov
leave
xchg
jp
pop
and
mov
push
adc
lds
and
xor
test
cli
mov
ljmp
mov
pop
dec
inc
icebp
out
pop
xchg
mov
push
xchg
xchg
xchg
lock
popf
xor
dec
and
and
mov
jbe
push
jne
dec
in
and
xor
sub
fiadds
dec
movsb
aad
inc
dec
xchg
cmp
pop
out
addl
test
push
stos
loopne
sub
lods
jmp
adc
aad
cmpsl
mov
mov
jb
test
and
inc
js
jle
add
js
sbb
mov
and
es
add
jno
jge
cltd
lcall
loop
and
test
outsb
xchg
and
into
faddl
lret
push
xchg
cltd
mov
mov
and
inc
je
xchg
pusha
into
xor
jge
mov
call
sub
and
fsubrl
sbb
adcb
push
int
mov
test
stos
jno
mov
sbb
xor
push
and
popf
or
stos
and
lea
out
pop
mov
mov
or
pop
adc
dec
adc
bound
test
jnp
pop
jno
pusha
cmp
mov
jbe
lods
pop
nop
test
das
or
and
add
outsb
popa
les
xlat
fildl
popa
sbb
jg
inc
push
das
cmp
shll
ja
outsb
and
aas
nop
mov
fldenv
imul
pop
sbb
adc
pop
sub
push
icebp
shlb
pextrw
push
fsubs
and
or
inc
cmpsb
scas
inc
leave
std
and
mov
push
and
add
loop
xchg
mov
aam
pop
push
dec
or
ljmp
mov
out
repnz
stos
cwtl
fwait
or
outsl
out
jbe
jno
fbstp
ficomps
xor
and
and
mov
js
imul
movsl
pop
movsb
in
mov
mov
cld
lret
addl
ret
test
pop
cmc
mov
lods
es
leave
stos
jmp
mov
and
lret
or
mov
dec
or
sub
push
pushf
outsl
cmpb
sbb
add
or
cmc
xchg
sahf
iret
mov
jo
arpl
push
inc
pop
push
jo
dec
pop
mov
in
cltd
add
cmp
je
cmc
mov
int3
daa
xor
call
test
xchg
mov
xchg
fstpl
and
fldt
add
jl
mulb
mov
stos
xchg
and
out
loope
arpl
sub
sbb
cmp
and
loop
sub
and
insb
xchg
dec
dec
popa
pop
movsb
daa
ror
mov
push
lahf
lret
jns
pop
mov
jle
xor
inc
sub
incb
add
mov
out
loope
mov
dec
xchg
out
jmp
cmpsl
popa
cltd
and
cmc
push
mov
pop
pop
movsl
ret
rol
data16
stos
jmp
fwait
inc
and
pop
incb
and
cmp
fmulp
and
jns
adc
push
and
mov
and
adc
push
scas
out
xorl
adc
xchg
ret
jb
mov
mov
mov
push
add
sbb
and
mov
popa
nop
add
mov
sbb
cmp
and
dec
pop
push
lock
icebp
and
mov
and
sbb
in
fcoml
movhps
and
aaa
lock
cmc
sti
adc
imul
jecxz
fdivrs
xor
and
xchg
test
or
sub
xchg
andb
inc
mov
pop
sbb
rcrb
jge
lds
or
xorl
mov
jecxz
shll
inc
jb
cmp
test
and
dec
test
mov
mov
negl
jmp
jge
and
mov
sahf
sti
movsb
mov
in
movsl
cmp
clc
and
mov
push
pop
shll
lret
sub
lret
movsb
xchg
mov
popl
int
scas
aas
loope
and
mov
and
xorl
inc
or
inc
pop
lods
and
mov
data16
aam
or
sub
xor
jge
sbb
dec
mov
scas
and
lea
mov
xor
add
leave
cmp
or
cmpsb
sarb
and
xor
stos
push
sbb
and
jno
movsl
push
iret
and
cmp
pop
pop
fidivrs
jmp
jle
inc
fldl
in
popf
sbb
mov
es
cs
into
mov
mov
test
push
das
clc
or
mov
xchg
adc
movsl
in
out
in
and
mov
add
push
pop
jge
clc
xor
xchg
add
pushl
daa
bound
xor
repnz
mov
outsb
sub
cmova
pop
sbb
xchg
and
adc
push
mov
ds
and
sbb
push
and
cli
fwait
in
sbb
out
hlt
sbb
add
add
sahf
daa
and
test
and
scas
push
and
sbb
and
fimuls
ja
jnp
and
enter
sarl
scas
ljmp
and
dec
sub
pop
xchg
and
dec
bsr
xchg
mov
or
fwait
mov
pop
insl
shr
mov
int3
jb
inc
frstor
jg
push
fisubrl
push
shrb
and
cmpsb
mov
add
ljmp
jae
mov
jne
sub
xchg
inc
icebp
cli
push
fsubs
aaa
push
repnz
sub
pop
popf
test
int3
lock
adc
aad
xchg
adc
gs
jo
lods
out
mov
mov
pop
jg
test
rcrl
and
cs
ror
aad
lret
repnz
or
stc
and
cwtl
jae
cmp
xchg
shll
and
dec
dec
scas
adc
pusha
push
scas
test
mov
pop
decb
pop
andl
sbbl
fildll
insl
adc
jge
imul
pushf
push
mulps
fmuls
xchg
adc
and
icebp
add
pop
add
test
or
jecxz
and
adc
pop
insl
jnp
stc
and
fstl
inc
jge
and
icebp
fdivs
in
dec
jle
pushl
jb
pop
jmp
pop
stc
lock
imul
cs
mov
jne
sub
jecxz
outsl
push
out
aas
movsl
arpl
sbb
xchg
xor
push
clc
dec
or
pushf
jg
and
lock
pushf
push
lret
dec
and
mov
add
mov
test
sub
push
popa
cs
loopne
mov
pusha
js
sbb
sub
push
jbe
jmp
mov
daa
test
mov
add
inc
jo
mov
jae
jne
sub
jnp
aad
ficomps
je
iret
xor
or
mov
inc
dec
cmp
insl
loop
adc
cwtl
mov
push
add
and
cmpsb
push
scas
mov
pop
and
in
xorl
fwait
cld
push
and
dec
cmp
fabs
int3
inc
push
out
push
andl
rol
cmc
rcrl
stos
adc
bound
xlat
shll
mov
mov
jns
jno
push
pop
xchg
fdivrs
jl
imul
inc
pop
scas
and
movsb
imul
add
dec
loop
dec
jge
movsl
jge
int
and
loop
sbb
cmpsb
adc
fmull
xchg
popa
imul
test
mov
int3
ja
push
and
mov
cwtl
out
or
stos
dec
mov
xchg
sbb
cmpl
rcrl
mov
aaa
in
and
xchg
fwait
pop
and
mov
adc
mov
loopne
and
lahf
and
fbld
enter
or
mov
repz
nop
int3
dec
out
xchg
hlt
cmp
push
sbb
pop
and
lds
shlb
cli
mov
aas
les
dec
jnp
mov
aam
jge
mov
lret
mov
inc
iret
and
push
jmp
jns
sbb
movsb
xor
shrb
xor
pushf
sub
push
cld
xchg
daa
pushf
lods
mov
ret
mov
dec
cwtl
and
sbb
or
mov
mov
in
xchg
and
outsb
push
mov
dec
add
inc
push
out
mov
dec
inc
loope
int3
jge
leave
sub
pop
adc
dec
dec
pop
addl
outsl
fmull
and
aas
mov
inc
push
lahf
leave
xor
stc
sub
shlb
or
xchg
cmpsb
in
mov
jbe
mov
lret
addl
int3
and
loope
mov
jp
out
rolb
arpl
xor
sub
shlb
scas
divb
repnz
leave
inc
mov
in
add
pcmpeqw
adc
fwait
pop
pusha
sub
jnp
popa
mov
inc
mov
mov
popa
test
notl
cmp
add
out
lret
lods
cmp
imul
scas
xchg
orl
sar
add
mov
xchg
mov
pop
and
and
sbb
scas
dec
and
int3
call
jge
cld
dec
data16
mov
jge
add
mov
and
and
mov
add
and
lahf
add
add
test
mov
sbb
and
lret
mov
ret
mov
dec
test
repnz
add
add
sbb
cmp
idivl
or
iret
adc
jo
insb
shl
in
sub
jg
add
cli
dec
push
xchg
aad
shlb
lds
subl
stos
mov
cmpb
sahf
add
push
into
or
cmp
and
test
cltd
sub
scas
or
xor
pop
cmp
jp
adcl
xchg
and
fisttpl
leave
mov
shlb
lds
pushf
bound
inc
daa
xchg
inc
sbb
lcall
cmpsb
add
sub
test
xor
aas
sti
pop
dec
mov
into
xor
in
loope
push
jo
es
or
loop
out
jmp
and
push
inc
mov
and
stos
pop
nop
add
sub
xor
sbb
pusha
iret
ret
and
lds
ljmp
push
xor
and
jno
out
add
lahf
push
cmp
xchg
mov
inc
add
sub
xchg
loopne
pushf
inc
and
mov
lea
test
in
dec
daa
mov
pop
test
and
pop
xchg
and
mov
inc
ret
dec
sub
in
lret
andl
and
popa
stos
les
sbb
add
jmp
movsl
sbb
frstor
mov
sahf
movsl
or
lahf
in
jle
mov
popf
add
push
wrmsr
mov
inc
xchg
xchg
mov
inc
mov
and
adc
andl
xchg
and
mov
xor
dec
popa
aad
xchg
fisubl
and
cmp
xchg
cmp
enter
test
xchg
es
cmpl
out
inc
xor
ds
insl
int
and
pop
xchg
xchg
dec
mov
testl
neg
inc
pop
or
mov
hlt
xchg
popa
mov
lods
xchg
stos
xor
inc
adc
cwtl
pop
xchg
cmp
jnp
dec
mov
nop
mov
jns
stc
movsb
mov
xlat
and
mov
and
pop
mov
sub
in
pop
repnz
test
sbb
xor
lea
add
inc
mov
and
int3
jb
pop
cmp
and
in
dec
pop
and
cmp
and
mov
jae
and
movsl
sub
in
popa
daa
add
mov
push
jmp
mov
ljmp
adc
xchg
ret
xor
xorb
and
jmp
inc
inc
and
push
mov
or
leave
sub
ja
jmp
lods
cmp
xor
mov
fidivl
xchg
sub
loop
mov
push
xchg
das
or
out
add
mov
xlat
sub
and
repnz
popa
and
xchg
and
daa
pop
pop
sbb
divl
push
xlat
mov
sub
and
fcomps
scas
sbb
faddl
negb
pop
bound
mov
dec
bswap
and
es
leave
xchg
cmpsl
inc
mov
sbbl
stos
and
insb
dec
adc
cmpsl
rorb
jno
lds
or
rclb
sbb
fnstcw
pop
mov
test
andb
mov
cmpsl
inc
ja
imul
sub
and
and
rclb
jb
dec
mov
loop
or
test
subb
cli
mov
push
stos
adc
das
mov
xchg
loope
mov
ret
les
and
jle
and
push
nop
fimuls
push
xchg
or
cltd
xlat
xor
and
cmp
movsb
pop
and
sub
fbld
and
scas
and
daa
aad
outsb
push
sahf
or
das
aaa
ret
sbbb
cmp
inc
and
and
dec
mov
add
jle
xchg
dec
fwait
insl
pusha
lds
je
movsb
mov
out
les
and
orb
push
arpl
and
pop
fbld
test
inc
scas
dec
das
addr16
daa
movq
imul
pop
or
andl
rcrl
andl
iret
imull
inc
dec
jae
cmpsl
stos
sub
mov
push
jns
or
sbb
test
aaa
and
clc
push
mov
and
xor
fwait
sbb
sti
push
mov
push
fsubp
jmp
and
fists
mov
push
xor
add
sub
loopne
test
mov
ss
cmp
insb
push
mov
hlt
xchg
push
es
movsl
test
insb
xchg
adc
pushl
or
dec
sub
imul
int
jmp
inc
loop
and
outsb
fcmovu
jns
and
test
dec
enter
daa
int3
out
fcoms
fiadds
imul
stos
outsb
imul
test
popa
xchg
ret
pop
aaa
mov
and
repnz
and
sbb
mov
and
pop
leave
and
sub
test
sub
and
fdivr
pop
outsb
xchg
fisubl
shrb
push
test
and
std
mov
gs
pop
mov
jle
and
mov
out
aam
and
shrl
sbbl
pop
fisttpll
std
cltd
imul
pushf
pop
addl
dec
jl
and
push
lcall
sub
pop
and
mov
test
xor
fcmovnu
and
loope
sti
out
stc
stos
inc
mov
cld
xchg
cmp
and
cmpsl
sbbb
sbb
push
ljmp
mov
sbb
and
inc
icebp
or
daa
push
xchg
sub
inc
adc
in
not
jb
and
add
pop
je
fcompl
into
sbb
mov
nop
lret
and
notb
insl
in
and
imul
push
mov
rcrl
lret
and
out
mov
cmp
mov
or
test
lea
and
scas
or
jp
jnp
test
dec
mov
pop
hlt
ja
imul
fidivrl
fisubs
ret
push
xor
add
and
fsubl
das
bound
mov
inc
outsl
sbb
ss
and
jmp
scas
and
dec
fdivrs
cltd
in
and
pop
dec
data16
sub
je
adc
jae
mov
cmp
lret
mov
ret
shll
aas
call
push
push
dec
dec
scas
std
mov
dec
push
fildll
and
add
cmpsb
loopne
mov
cmp
xor
movsb
add
ret
js
and
outsb
mov
push
push
fs
iret
mov
pusha
and
push
loopne
and
xchg
and
and
fldcw
xor
jmp
shlb
nop
cmp
pop
test
adcb
and
aad
push
xchg
out
aas
int
mov
mov
and
inc
or
ret
cli
sub
mov
mov
das
add
and
mov
fwait
xor
pop
and
xchg
testb
test
add
and
lret
scas
mov
lods
mov
xor
mov
push
adc
in
nop
fwait
mov
and
inc
pop
sbb
pop
cltd
imul
adc
imul
adc
inc
dec
cmp
sub
adcl
cmp
xchg
and
hlt
push
jns
push
cmp
cmp
fmull
insl
cmp
pop
push
in
test
sub
mov
and
repnz
xor
lods
and
lret
mov
push
pop
jns
js
pop
mov
sarb
and
in
push
nop
jle
xlat
and
cmp
xchg
fldenv
or
cmpsl
pop
and
hlt
sahf
vxorps
popa
xor
mov
dec
repz
inc
xor
push
mulb
lahf
call
int3
aas
mov
mov
mov
and
cmp
add
jmp
jmp
pop
fnstcw
dec
mov
pusha
mov
ja
movntq
icebp
sbb
sbb
cmp
push
das
xchg
jb
and
add
lods
and
sbb
mov
hlt
and
fsubl
scas
and
shlb
imul
pop
sbb
mov
push
shrl
stos
dec
xchg
test
addr16
fadds
adc
movsb
and
out
or
movsb
faddl
rolb
cmp
test
or
lret
das
repnz
pop
xchg
sub
fwait
insb
mov
daa
cltd
mov
jne
push
cltd
mov
pusha
and
addr16
pop
in
cmp
inc
cmp
pop
add
and
pop
and
fwait
xchg
mov
mov
push
and
cmp
lods
fistps
test
mov
push
ss
sub
sub
lock
shl
mov
add
cmp
pop
and
add
jle
adcl
fdivp
push
mov
jge
icebp
movsb
fisubl
mov
int3
and
or
fstl
and
adcb
add
sti
das
mov
pop
js
and
inc
sub
lock
mov
mov
xor
and
xchg
cmp
or
cmp
jnp
ffree
roll
cmp
dec
andl
stos
and
bound
inc
das
stos
cld
adc
cmc
push
lret
pop
inc
xor
stos
and
movsl
dec
orb
daa
ret
int3
popf
mov
pop
or
or
lahf
cmp
sti
jmp
fisubl
mov
add
mov
subb
cmpsl
popa
push
dec
fwait
cwtl
xchg
and
int3
pop
pop
stos
mov
sbb
lret
push
sbb
ljmp
pop
movsb
iret
nop
scas
push
mov
bound
inc
movsb
jne
mov
mov
movsl
ds
les
lret
adc
repz
xor
mov
pop
lcall
popa
mov
cmpsb
in
stc
mov
lock
lods
std
push
repz
mov
pushf
clc
popf
xor
and
mov
fs
and
mov
mov
jecxz
hlt
ss
sub
and
inc
mov
insl
test
sub
xchg
dec
push
pop
mov
pop
mov
movsl
fnsave
xor
gs
jp
and
mov
xchg
ljmp
xchg
cmp
adc
jbe
pop
faddp
jg
iret
shlb
add
mov
jge,pn
popa
jno
loop
inc
cmp
dec
adc
jo
mov
sub
out
jge
shlb
insl
pushf
cli
bnd
ficoms
xchg
cltd
and
lahf
iret
push
mov
xchg
inc
and
jns
push
and
pop
push
push
cld
and
xchg
dec
mov
dec
sbb
aas
adc
in
dec
pop
push
fsubrl
cli
push
jmp
imul
mov
shrl
lahf
pusha
sbb
cmp
insl
xor
aaa
fisubl
mov
pop
dec
sub
lock
sub
pop
test
loope
cmp
lahf
dec
cld
xchg
and
jecxz
fidivl
aaa
and
and
adc
add
jb
push
lcall
and
xchg
outsb
xchg
sbb
push
sub
and
and
mov
out
and
and
rorb
ret
jb
aas
xchg
mov
cs
arpl
xor
scas
dec
jle
pop
lods
in
mov
mov
and
mov
jo
push
lret
cli
and
cmp
or
incl
dec
pop
and
dec
cmpsb
mov
push
call
sub
cmp
addr16
adc
xchg
and
aas
pop
movsl
in
shlb
sbb
jl
and
icebp
testb
leave
xor
sbb
adc
pop
test
and
hlt
js
into
dec
mov
jg
mov
mov
inc
fadds
and
repnz
inc
jge
jmp
lahf
adc
ret
in
xchg
xor
fidivrs
and
and
push
mov
adc
push
cs
ss
xchg
je
add
popf
test
repz
and
arpl
xor
test
lret
jle
decb
scas
popa
dec
ljmp
and
orl
not
mov
into
cltd
xor
negb
cmpsb
dec
lret
inc
clc
call
push
adc
mov
add
jns
lea
jl
jp
pop
cmp
sub
movsb
jnp
add
adc
popl
test
cltd
scas
cmp
ja
mov
sbb
popf
mov
xlat
mov
mov
push
and
andl
jo
and
aaa
imul
test
cld
xchg
and
addr16
ljmp
roll
cmp
add
fwait
jmp
add
stos
insb
mov
fwait
cltd
into
xor
and
sbb
inc
aas
cmpsb
sub
or
and
and
push
fadds
and
out
adc
ljmp
sbb
imull
push
in
xor
xor
push
inc
iret
outsb
out
imul
in
xor
jbe
sub
and
mov
das
cmp
outsl
dec
leave
test
push
das
mov
hlt
test
mov
shl
lret
push
jbe
xor
xchg
xchg
test
jge
arpl
test
mov
jns
xor
icebp
cmpb
xchg
add
push
push
add
sbb
lods
nop
fsubl
insl
js
sub
dec
and
inc
lahf
push
mov
pop
add
gs
cwtl
mov
jge
mov
mov
cmp
mov
and
mov
dec
pusha
jl
loopne
clc
dec
sub
leave
xchg
xor
loope
in
xchg
inc
add
push
pop
mov
and
push
push
cli
lret
cmp
xor
adc
add
sarl
shl
lock
ljmpw
or
jge
adc
add
add
test
jne
mov
push
and
mov
cmp
xchg
adc
and
mov
xchg
inc
iret
sbb
push
push
nop
clc
movsb
test
pop
inc
test
xlat
jmp
push
adc
xor
popa
enter
stos
cmp
and
insb
mov
mov
mov
ljmp
and
scas
mov
add
xor
push
xchg
sub
aad
and
or
aam
ss
dec
outsl
sub
jle
fcoms
imul
cltd
sbb
push
loope
lea
popf
push
mov
xor
vpperm
cmp
cmpl
sti
rclb
cmpb
pop
cli
rclb
fbld
sub
imul
fs
inc
add
mov
mov
mov
mov
aas
loopne
pop
arpl
stos
xchg
divl
ret
push
enter
imul
inc
inc
popf
popa
das
jno
dec
es
out
or
outsb
popa
xlat
inc
jnp
test
cmp
mov
or
es
arpl
and
adc
lahf
and
mov
push
movsb
test
lods
cmpsl
and
jbe
push
dec
push
mov
xchg
pop
xor
sahf
in
gs
xor
sub
add
cmp
cltd
sbbb
out
fstps
cmpsl
movsb
push
loopne
clc
adcl
lods
jmp
sub
cwtl
mov
push
out
aaa
add
jl
sti
push
daa
cmp
pop
push
sub
xor
push
aad
cmp
push
rclb
jecxz
pop
pop
sub
xor
push
sbb
cmpsb
rcrb
and
and
mov
push
pusha
es
and
stos
in
and
and
mov
jle
push
mov
sahf
je
stc
mov
add
popa
imul
mov
loop
sbb
pop
mov
xor
test
iret
xchg
or
ds
mov
inc
ss
and
xor
std
loope
outsl
and
mov
mov
cmp
and
jecxz
adc
stos
in
mov
push
lret
or
ss
pop
xchg
iret
or
and
mov
dec
xchg
das
lahf
sub
shlb
push
inc
or
or
xchg
and
mov
sub
sbb
add
and
and
jo
shll
adc
pop
enter
out
push
ret
cmp
dec
cmp
jb
and
movlps
and
cmpsb
push
data16
cltd
cmp
lret
sub
xchg
movsb
js
adc
leave
aad
and
daa
mov
and
xchg
xchg
and
xor
gs
mov
shl
mov
cmp
cmp
icebp
add
mov
mov
mov
and
iret
sbbl
mov
repnz
xchg
mov
inc
cmp
nop
and
fstps
push
and
arpl
rcr
and
fidivrl
lret
cmp
and
mov
push
jge
popa
mov
or
xchg
popa
jmp
aas
xchg
mov
sub
xchg
lcall
mov
cli
movsl
push
xchg
mov
adc
mov
add
mov
and
mov
add
sbb
aas
lock
cmp
fnstcw
pop
cmpsb
sbb
scas
and
inc
neg
jmp
gs
iret
ja
adc
scas
sbb
mov
dec
dec
sub
icebp
sub
mov
mov
cmc
stos
cltd
dec
push
lahf
xchg
mov
imul
mov
and
jb
sub
dec
push
mov
test
in
mov
mov
data16
filds
push
jbe
mov
jle
xchg
iret
mov
inc
in
je
cmp
mov
cli
jbe
fsubl
xor
cmc
aad
mov
adc
addr16
cmp
jecxz
push
dec
movsl
cltd
inc
cmp
outsl
pop
popf
push
std
sahf
pop
and
mov
loopne
mov
mov
in
push
xchg
cmpsl
and
push
daa
movsl
fimull
xchg
push
rclb
fisttpll
into
sub
sahf
xchg
aad
pop
mov
cwtl
mov
cld
push
cltd
mov
xor
mov
pop
nop
push
cwtl
and
xchg
sti
je
pop
daa
lahf
scas
jae
das
dec
xchg
cmpsb
xchg
add
ret
sbb
call
lret
aad
mov
jns
pop
pop
mov
loop
popf
outsl
sbb
xchg
xor
shlb
mov
xchg
pusha
jg
ret
mov
xor
pop
sub
shll
in
cmc
in
mov
and
call
mov
dec
movsl
mov
sbbb
stos
sbb
rclb
and
adc
out
jb
movsb
pop
add
push
test
mov
jge
cwtl
in
xor
push
lds
movsl
andl
insl
pop
xchg
int
and
jno
ret
rol
shrl
xchg
mov
xchg
dec
das
jge
jbe
push
add
or
aas
arpl
add
enter
jns
mov
je
xorb
out
add
xor
inc
loop
push
aam
dec
dec
int3
add
push
inc
das
sub
aas
push
xchg
scas
aam
add
adc
test
mov
inc
sub
jno
dec
lea
enter
xchg
dec
inc
sti
mov
pop
add
and
mov
jmp
push
xchg
imull
push
and
mov
mov
sub
mov
sub
xor
inc
and
jecxz
lcall
out
xlat
mov
jp
sti
movsl
push
loopne
and
inc
and
xor
mov
xchg
inc
ljmp
dec
xlat
movsl
popa
jno
inc
insb
mov
cmc
push
pop
jne
repnz
rclb
fstp
into
mov
dec
push
fs
and
xor
mov
andl
push
pop
inc
pushf
add
nop
add
out
and
popf
sub
mov
bound
insb
in
out
push
iret
mov
adc
enter
popf
jne
sti
and
and
repnz
imul
mov
mov
cli
pop
or
lock
movsb
daa
fwait
cltd
and
jb
scas
arpl
subb
xchg
ja
shr
inc
ljmp
and
mov
cmp
adcl
out
test
mov
pop
xor
mov
dec
and
push
insl
cld
dec
scas
arpl
adc
inc
js
out
fwait
xchg
xchg
sub
imul
out
and
pop
dec
lahf
lods
sub
movsb
sbb
push
mov
and
mov
cmpsb
mov
lds
add
xchg
aaa
imul
bound
mov
jae
jle
dec
inc
mov
jns
jge
mov
push
xchg
in
push
adc
inc
pop
pop
push
mov
icebp
les
addr16
xlat
ja
out
add
mov
xchg
iret
loop
xor
cld
and
ja
adc
shll
mov
pushf
xchg
and
ret
and
hlt
jmp
movsl
movsb
fstpl
jle
pop
sub
pop
fwait
arpl
out
and
xor
mov
push
jmp
mov
sub
rorl
inc
xorb
lcall
sub
mov
rolb
ret
gs
sahf
aad
mov
pusha
mov
push
loopne
and
stos
mov
and
xchg
jl
test
and
fs
lods
repz
ret
jg
call
sbb
jmp
sbb
mov
mov
mov
mov
out
sbb
and
mov
jno
xor
mov
dec
scas
push
mov
shl
jb
push
and
mov
orl
and
cltd
inc
aam
mov
cli
popa
cmp
movl
xchg
adc
push
shlb
les
cmp
inc
and
mov
inc
sbb
xor
mov
pushf
adcl
bound
sub
dec
pushf
mov
test
mov
aas
cmp
sub
jge
jne
and
or
dec
and
push
mov
fisubl
call
mov
pop
adc
sub
shr
rcrb
dec
dec
rcl
cs
stos
jno
add
lret
arpl
pop
ss
and
es
xchg
frstor
sbb
mov
loop
dec
inc
inc
mov
sbb
mov
negb
inc
lods
sti
clc
push
and
aas
add
mov
pop
and
cwtl
pop
add
jns
popa
xchg
popa
push
push
jnp
mov
lea
mov
dec
sub
mov
jle
ret
jno
mov
push
cmp
test
orl
xchg
sahf
loopne
push
outsl
xchg
cmp
cmp
and
jbe
aad
cmp
pop
mov
and
and
mov
mov
pop
pop
sbb
mov
and
mov
iret
and
rorb
jp
lahf
mov
xchg
mov
fstpl
xchg
add
mov
or
das
and
push
mov
and
std
pop
adc
or
and
inc
pop
cltd
jmp
pop
loope
dec
movsl
sub
dec
rcll
ja
icebp
adc
cltd
lds
adc
dec
imul
sahf
outsb
mov
push
mov
popa
fiadds
xlat
lods
mov
dec
push
inc
jne
cmp
adc
push
cmp
mov
sbb
and
cmp
in
adc
and
add
sub
outsl
lret
repz
insl
pushf
dec
popa
dec
pop
cmpsl
pop
aaa
shlb
pop
add
je
sahf
roll
xchg
xchg
and
pushf
lods
dec
and
in
xor
loope
icebp
push
stos
jle
xchg
cmpsb
xchg
lds
and
fnstcw
push
addr16
push
mov
hlt
gs
movsb
mov
cltd
sub
cmp
adc
adc
xchg
lret
xor
shll
movsb
pop
les
loop
xchg
dec
or
gs
push
mov
cmp
cltd
movsl
sahf
dec
and
adc
xchg
jp
sbb
test
adc
ror
and
pop
mov
mov
xchg
imul
cltd
mov
ficompl
adc
filds
ret
jmp
and
popa
lret
add
and
push
mov
scas
and
adc
fisubl
data16
hlt
stos
mov
sbb
adc
mov
insb
add
push
call
cltd
leave
and
andl
mov
stos
cs
xchg
or
dec
popf
fwait
outsl
mov
popa
cmp
cmp
sbb
jge
mov
lea
cmpsl
pop
and
and
and
xchg
xor
add
mov
test
imul
sbb
inc
cpuid
mov
fs
xchg
mov
pushf
and
mov
mov
out
mov
mov
mov
xchg
push
mov
push
movsb
xchg
xlat
xor
arpl
dec
sub
adc
rorb
mov
pop
push
mov
and
push
xchg
cwtl
dec
test
jbe
cltd
shlb
or
aas
xor
popa
mov
test
push
inc
test
push
and
xchg
andb
sbb
and
enter
sub
jo
cs
in
popa
mov
add
mov
fsubl
loop
xlat
cs
jnp
adc
xchg
mov
or
and
sub
and
push
and
add
fbld
js
movsl
and
jb
inc
addr16
and
xor
add
shll
ljmp
pusha
andl
jle
cmp
and
pop
stc
or
and
adc
inc
aaa
jae
adc
pusha
add
nop
stc
jle
out
stos
push
mov
pop
xlat
fisubrs
and
les
outsl
pushf
cmpsb
fucom
sub
aam
adc
int3
and
jmp
add
int
dec
aas
fwait
hlt
mov
add
dec
in
loop
sub
mov
das
jb
lret
sar
and
jmp
cmp
lret
add
movsb
xor
sbb
add
push
adc
ficoms
stos
adc
mov
xor
fbld
aam
pop
bound
jle
dec
pushw
mov
adc
jnp
das
pusha
ja
xchg
pop
gs
imul
mov
or
jecxz
pop
ds
push
rcr
movsb
dec
fcompl
jmp
dec
cmpsl
and
push
jge
fisubrl
and
mov
aaa
ja
cs
movsb
lods
repnz
imul
daa
movsl
or
jmp
and
dec
dec
sub
cld
and
cmpsb
out
sub
stos
mov
arpl
inc
xchg
and
push
je
pop
mov
movsl
mov
mov
inc
clc
and
add
pop
mov
loop
sti
sub
out
pop
and
outsl
adc
enter
jle
sbb
std
mov
cwtl
and
icebp
daa
shrb
insb
test
mov
int3
outsl
repz
or
xadd
inc
inc
in
dec
lcall
lods
imul
jb
jge
subl
es
cld
and
mov
and
stos
mov
jl
xor
push
mov
mov
js
out
or
add
jl
dec
pop
ret
xchg
and
dec
jb
dec
je
fs
inc
and
xlat
in
push
and
mov
mov
and
adc
mov
mov
mov
dec
and
sbbl
push
add
cmp
push
cmpsb
jno
mov
mov
sarl
and
addb
or
add
jbe
mov
fs
sub
lret
push
mov
imul
dec
and
leave
adc
data16
outsl
addl
andb
sub
ds
imul
sbb
inc
and
test
je
and
push
add
add
adc
sbb
adc
iret
push
lea
arpl
pop
mov
mov
add
loop
aas
push
pushf
push
cmpsb
push
inc
je
adc
push
insl
jmp
mov
push
sbb
mov
push
fdivr
enter
mov
pop
and
out
push
addr16
mov
and
loop
rcr
and
scas
add
call
int3
sbb
and
sbb
add
lahf
push
cmc
stos
xchg
cmp
cli
and
mov
xorl
xor
pop
shlb
pop
movsb
add
stc
push
stos
nop
popa
adc
mov
mov
inc
js
cli
sbb
icebp
xor
lods
popl
out
out
cld
lahf
mov
rcr
cmpsl
mov
push
mov
jbe
and
iret
mov
aaa
pop
pusha
push
and
lods
and
sbb
dec
scas
and
cli
add
lods
test
clc
xchg
cs
sbb
aad
idivb
mov
pop
xor
cli
mov
popa
adcb
cmp
push
dec
mov
or
mov
xor
popa
enter
dec
and
outsl
add
push
clc
sbb
xchg
out
cmpsb
les
xor
inc
jns
and
inc
and
popf
scas
or
lods
and
mov
sub
add
movsb
arpl
dec
jae
andl
xchg
dec
popf
test
ja
ljmp
xor
add
nop
loope
jle
push
mov
push
stos
outsl
xchg
imul
adc
adc
mov
mov
sub
mov
cmp
mov
and
into
fadd
and
push
mov
sbb
jno
insb
test
xor
out
jb
fldl
sbb
cmp
xchg
orw
mov
jp
outsl
sbbl
pop
dec
and
jno
jp
mov
lea
cmp
jo
and
insl
inc
jmp
movsl
inc
and
dec
jnp
testb
xor
ucomiss
adc
pop
pop
pushf
mov
push
mov
out
outsb
and
sbb
lock
ret
dec
mov
in
xchg
dec
mov
sti
mov
xor
and
sbb
pop
dec
sub
movsb
push
stc
aaa
dec
inc
pop
mov
mov
add
popf
xchg
lcall
jg
jae
lahf
xchg
in
lea
and
dec
push
stc
inc
xorl
or
xchg
add
aas
mov
out
mov
inc
daa
sbb
out
pop
fs
jo
das
push
fsubl
scas
pop
jo
add
jnp
sbb
and
push
xor
xchg
push
test
dec
push
sbb
dec
sub
cmp
and
lods
movsb
or
xchg
sbb
pop
pop
into
and
popa
mov
and
cltd
das
and
gs
scas
and
bound
and
pop
jne
in
or
xor
inc
insl
movsb
fisubl
es
mov
fsubl
jl
or
outsb
xchg
jne
scas
adc
mov
hlt
and
and
push
jge
pop
lret
sbb
mov
popa
jle
hlt
stos
push
and
add
cmp
and
sub
loopne
imul
xor
xchg
out
cltd
std
mov
sbb
dec
pop
xchg
shrl
out
xchg
std
and
nop
scas
in
xchg
mov
cmpsb
movsb
push
sbb
imul
xchg
push
lcall
stos
inc
testb
jg
jne
ret
inc
mov
lahf
cmp
inc
lock
xchg
xchg
and
ret
adc
sub
and
mov
mov
lret
out
sub
inc
pop
stc
call
mov
add
xor
scas
push
inc
pop
sbb
sti
inc
cmp
nop
lret
sub
pop
and
mov
and
pop
jl
jle
fstps
push
mov
inc
sub
lea
and
push
popa
mov
add
adc
popa
outsl
cmp
jb
fistl
fists
gs
sub
and
fsubrs
and
inc
xlat
rorl
sbb
lret
xchg
enter
mov
pxor
scas
shll
adc
test
mov
pop
lret
lea
xor
cltd
in
xchg
leave
pop
pop
and
add
loopne
and
jno
xor
and
inc
nop
into
mov
out
and
jo
ret
ds
mov
repz
rorl
cmp
and
inc
mov
xor
bound
push
sahf
or
insl
and
jmp
movsl
sarl
scas
cmp
cmpsl
popa
sub
push
data16
je
mov
push
xor
push
push
pop
push
and
jnp
jge
js
and
in
aad
and
test
cmp
sti
ljmp
push
insb
push
jae
and
jnp
mov
dec
sub
ss
xchg
mov
aaa
push
and
and
ljmp
iret
out
push
add
mov
nop
shrb
dec
mov
sub
into
sbb
or
stos
and
loop
cmc
fisubrl
shll
mov
cmp
and
lods
sbb
xchg
shrb
inc
inc
int
cmp
sub
xchg
out
xchg
popf
into
adc
out
ja
rcl
and
out
inc
mov
pop
and
push
loope
cmp
lds
fmull
fiadds
insl
xlat
or
and
or
add
das
and
scas
dec
push
test
mov
lea
shll
jno
jle
and
sub
or
aad
and
sti
aam
sbb
and
stos
mov
sub
nop
sub
jmp
imul
int3
in
dec
inc
cmp
daa
adc
dec
and
jbe
mov
movsb
sbb
repz
pushf
xchg
outsb
mov
pop
daa
lea
cwtl
mov
mov
xor
adc
xchg
mov
cmpsb
mov
arpl
cltd
fstpl
xchg
dec
sub
cmp
mov
or
push
and
mov
test
lcall
adc
dec
xor
stos
sbb
jo
xor
nop
jns
rcrb
jmp
mov
sbb
or
sub
lods
mulb
xchg
mov
pop
cld
and
mov
jecxz
shrl
xor
lods
xor
sub
daa
dec
and
cmp
sahf
cmpsb
sub
loopne
ret
pusha
inc
and
cmpb
cltd
inc
push
popf
enter
icebp
xchg
bound
sub
mov
daa
in
lock
shrb
push
mov
inc
jnp
xor
lret
pushf
ret
push
inc
xchg
bound
adc
aam
call
xchg
mov
js
push
stos
inc
xchg
mov
mov
enter
and
and
mov
dec
jns
movsl
push
das
xlat
and
cmpsl
out
andb
push
mov
mov
addr16
xchg
fs
cmpsl
daa
jg
sahf
adc
cltd
lea
cmpsb
repnz
and
cli
cmpsl
in
pop
mov
fldt
sti
lahf
push
and
in
mov
xor
out
lods
jno
ret
mov
pop
or
jae
xchg
sbb
and
pop
lock
mov
mov
loop
push
xor
push
pop
les
mov
jno
test
sahf
and
jnp
lods
rolb
out
jb
and
fdivs
and
ret
out
and
das
cmp
dec
jmp
es
leave
out
fisubs
out
xchg
gs
sti
ja
stos
mov
mov
insl
lret
jmp
aad
xchg
fnsave
popa
add
iret
xchg
mov
and
xor
cli
mov
and
cld
lea
lahf
mov
test
dec
and
pop
cmp
cs
add
in
leave
inc
mov
pop
xlat
push
inc
push
cmp
in
or
cwtl
sahf
cmp
mov
push
clc
fwait
add
and
lds
icebp
sbb
lahf
adc
jmp
and
mov
jne
xchg
hlt
push
dec
in
mov
and
pop
and
insb
mov
jns
xchg
xor
out
pop
into
loopne
shll
ret
lret
pushf
push
push
imul
mov
pop
mov
movsl
aam
jno
mov
pop
loop
je
mov
mov
inc
loope
insb
jo
pop
sahf
and
sub
into
push
hlt
lods
and
cmp
scas
popf
jg
mov
es
fwait
cltd
and
and
es
jne
adc
jb
xor
jmp
xor
test
lret
inc
ret
pushf
jp
test
and
push
popa
subb
sub
movsb
push
cld
nop
xchg
testl
sti
and
mov
adc
jns
and
jns
fsubl
and
stos
popa
inc
and
nop
insl
push
mov
mov
mov
ret
arpl
in
sbb
xor
or
shll
movl
and
dec
xchg
lods
test
adc
pop
repz
cmp
insb
push
inc
mov
inc
push
mov
and
pop
push
jl
movl
jbe
inc
aaa
sub
xchg
mov
lock
adc
rorl
inc
shl
popa
pop
test
les
sub
mov
mov
sub
inc
fs
pop
jns
mov
data16
xchg
gs
mov
push
std
test
adc
mov
add
int3
mov
mov
lcall
and
fsubs
adc
and
decw
inc
iret
cs
in
out
rolb
xlat
mov
in
pop
in
and
mov
mov
imulb
data16
lods
mov
movsl
jecxz
leave
inc
cmpsl
stc
shrb
fldcw
and
mov
and
sub
and
lret
xor
mov
repz
xchg
xchg
andl
aam
inc
sahf
inc
sub
out
lds
push
and
imul
out
std
rcll
cmp
and
rorl
lds
je
jge
or
and
scas
push
xchg
lock
pushf
ljmp
jnp
sti
hlt
mov
sarl
xchg
imul
jecxz
shlb
fcmovne
das
pop
push
std
dec
xor
mov
in
push
ret
and
jae
jge
adc
iret
and
pop
loope
xlat
aaa
sub
pushf
das
or
xor
lahf
popa
js
outsb
leave
xor
nop
repnz
ret
popa
sbb
mov
js
sbb
sub
sbb
mov
aam
scas
movsb
push
in
cmc
xchg
xchg
mov
mov
lret
add
xor
mov
mov
jae
mov
and
xchg
in
and
pop
test
adc
movsl
dec
sbb
and
push
xor
and
enter
dec
sub
inc
mov
cltd
loop
repnz
imul
or
leave
dec
jne
mov
rcr
cmpsb
nop
xchg
adc
pop
testb
cmp
mov
repnz
mov
inc
inc
popf
inc
insl
or
les
push
adc
in
out
sbb
fistps
jbe
cmpl
push
and
sbb
pop
and
mov
aad
jne
cmp
stos
mov
call
clc
push
fwait
ss
pop
pop
in
pop
xor
mov
mov
cli
sbb
iret
and
cmc
push
movsb
mov
das
mov
fidivrs
pop
sti
movsl
movsl
push
andl
arpl
std
mov
psrlw
orl
mov
addr16
decb
sbb
enter
cld
popf
cmpsb
xlat
in
add
cli
inc
int
loope
adc
fmull
mov
mov
jne
sub
loop
cmp
popa
push
sbb
mov
dec
sub
aaa
jnp
push
pop
call
hlt
xchg
and
xchg
flds
in
and
jno
icebp
loop
sbb
aam
xchg
dec
test
insb
inc
cvtps2pi
xor
jp
mov
mov
dec
cwtl
or
loop
jmp
adc
sub
xor
jno
dec
and
out
sbb
lock
pushf
ffreep
and
rorb
and
outsb
lds
gs
std
and
nop
mov
and
leave
iret
int3
and
mov
adc
xor
and
out
add
add
inc
xor
push
jle
and
cmp
loopne
and
loope
jl
outsl
rcrl
and
das
push
call
pop
xor
loopne
fsubrs
mov
and
sub
push
mov
sbb
out
fnstcw
sub
adc
jno
push
adc
dec
popa
dec
nop
push
mov
mov
mov
andb
outsl
movsl
pop
popa
sbb
insl
loop
and
xchg
pop
stos
push
inc
or
sub
xlat
push
jno
xor
ja
xor
rclb
and
fldcw
ljmp
loope
mov
dec
insl
sahf
xchg
mov
cmp
xchg
mov
inc
xchg
sbb
xchg
and
loopne
lahf
sbb
and
iret
pusha
dec
clts
cbtw
and
adc
test
mov
mov
and
cmp
pop
imul
mov
jmp
imul
popa
sbb
lods
std
and
sbb
pop
and
cli
and
mov
cmp
inc
sar
push
lds
mov
hlt
and
sbb
sahf
daa
pop
mov
pop
and
mov
and
xorb
mov
outsb
frstor
xchg
test
movsb
icebp
test
push
pop
mov
xchg
and
mov
jmp
loopne
fcoml
in
outsl
inc
and
mov
clc
pusha
adc
test
sub
add
mov
and
shll
mov
aaa
push
lcall
aad
mov
outsb
xchg
dec
and
or
mov
mov
ret
dec
jne
push
push
test
sub
mov
and
mov
push
and
mov
das
mov
jae
js
sub
cmp
aam
xor
xchg
and
cmpl
cmp
jecxz
jb
jbe
and
dec
sub
sbb
data16
out
xor
cmpsb
and
mov
and
dec
repz
xchg
xor
imul
out
into
mov
adc
xor
jle
inc
jne,pt
push
in
enter
in
popa
cmp
pinsrw
rorl
and
pop
into
lret
and
filds
xor
push
pop
lret
in
xchg
jge
and
mov
and
mov
sub
mov
popa
lret
inc
and
and
pusha
push
sub
and
jg
mov
jmp
test
ficoml
jns
fsubs
and
aaa
dec
mov
mov
and
loop
lret
xor
js
and
mull
and
sarb
pushf
xor
aaa
and
ficoml
cltd
popf
xchg
sbb
lds
mov
or
in
ret
popa
imul
in
pop
js
mov
sbb
fcomps
lret
and
in
and
pop
dec
xchg
adc
aam
into
and
adc
and
cmc
jne
testb
orb
and
sahf
int3
aam
or
popa
sub
fisttps
imul
and
inc
push
cmp
lcall
pop
mov
sub
and
mov
jbe
cs
in
fists
cmpsb
mov
sbb
mov
popa
insb
push
ficoml
movsb
push
fdivp
int3
sub
rcl
frstor
push
test
add
or
incl
aaa
sub
fcmovb
and
mov
push
lea
lret
jae
add
addr16
and
add
aas
int3
cmpl
jbe
adc
mov
mov
adc
cmp
jmp
nopl
jns
dec
popa
iret
out
xor
dec
arpl
lds
cmpsl
push
andl
testb
jo
and
mov
outsb
inc
push
and
xor
and
inc
out
fidivrl
push
in
das
decb
and
adc
sub
inc
stc
test
sbb
sub
inc
mov
sub
mov
test
inc
cmp
scas
xchg
and
fsubrp
fsubr
nop
les
add
cmp
popl
inc
hlt
repnz
addl
push
scas
rcr
cltd
sti
sbb
and
and
and
xor
sahf
addb
sub
test
xor
jno
pmaddwd
pop
out
xor
xchg
add
insb
and
es
add
mov
and
sbb
pop
mov
sti
adc
mov
js
sbb
scas
push
and
lahf
pop
pop
mov
jl
faddl
in
xchg
pop
inc
sbb
inc
and
popf
sbb
dec
adcb
lcall
popa
mov
dec
jo
jae
in
cld
lcall
pop
mov
xchg
in
frstor
cmc
stos
cmpsb
or
std
and
pop
and
add
lods
cmpsl
xor
nopl
pop
repnz
movsb
and
cltd
jo
mov
mov
sahf
iret
and
mov
lret
popa
xchg
loope
push
dec
pop
loop
lcall
loop
addr16
cmp
enter
cltd
lods
movsb
xchg
pop
fsubr
sbb
cli
adc
and
jae
xlat
cs
and
std
out
and
fabs
jle
pop
dec
and
xchg
and
xchg
popa
jns
mov
leave
not
cltd
sub
insl
xchg
mov
cld
test
test
mov
jbe
rol
and
add
into
and
and
popf
and
aas
add
test
insl
jbe
xor
adc
xchg
mov
scas
mov
movsl
loopne
ja
imul
jae
jmp
in
jge
sub
rcrb
jp
lahf
enter
push
cmp
andb
add
shl
xchg
pop
pop
dec
and
add
outsb
jo
dec
jae,pt
mov
fistpl
cmp
adc
sub
sbb
or
and
scas
data16
pop
push
and
inc
gs
xchg
addr16
jno
shrl
and
aas
icebp
nop
in
jno
and
dec
div
gs
add
fwait
cwtl
rcrb
notb
jmp
movsb
xor
and
mov
popf
and
cmp
and
pop
add
and
sub
sarl
pop
mov
and
adc
int
test
mov
adc
cwtl
and
xchg
sub
shll
xor
in
xchg
xchg
int3
sbb
sub
adc
mov
scas
jmp
and
cltd
loopne
inc
mov
ret
loop
cmp
xor
add
mov
cmp
test
leave
fs
sbb
push
mov
xor
inc
cmp
add
push
jb
or
sarl
mov
xor
lock
es
mov
and
mov
push
jno
inc
or
or
and
insb
dec
out
pop
pop
sub
movsb
lds
cmp
and
push
loope
popa
outsl
call
pop
out
mov
insl
and
scas
xchg
xchg
push
xchg
mov
dec
xor
dec
xchg
rcrb
fadd
jae
pop
mov
fdiv
mov
pop
mov
pop
fs
orb
in
daa
push
jae
sahf
add
out
adc
les
loope
xchg
mov
lret
dec
inc
aad
inc
and
sbb
decl
jbe
es
add
jle
and
or
sub
aam
pop
dec
dec
sub
sub
jbe
pop
pop
fldenv
dec
test
mov
aas
mov
das
cmpsb
addl
scas
enter
add
dec
mov
cmp
stos
aam
jno
xchg
and
add
imul
rcrl
pop
movsb
mov
iret
xlat
lds
push
jo
sbb
movsb
ds
ljmp
dec
notl
sahf
movsb
out
lods
cmc
daa
and
popf
rorb
pop
out
sub
sbb
xchg
cmpl
leave
popl
xor
push
in
pushf
or
push
out
mov
add
cmpsb
push
adc
mov
loope
push
insl
mov
int
leave
and
xchg
sbb
or
push
and
pop
addb
sub
popa
test
lds
shlb
xchg
ds
pop
movsl
lahf
sub
adc
ret
adcl
aad
icebp
dec
or
mov
ss
les
xor
cltd
adc
sub
lock
aaa
cmp
mov
push
arpl
push
ss
sub
jns
pop
jle
icebp
movsl
bound
lret
xchg
ss
fwait
movsb
fdivrp
mov
mov
and
fdivrs
outsl
and
add
cmpsb
sbb
xchg
sbb
push
scas
arpl
push
sbb
jg
sbbl
mov
inc
jae
cmp
int3
mov
cmpsl
dec
fnstenv
xchg
mov
or
and
cmp
clc
jae
test
aam
push
and
cmp
jle
out
enter
push
outsb
scas
inc
sti
xor
or
ret
daa
aad
aaa
pop
and
sub
inc
pushf
and
fadds
mov
xchg
jo
cwtl
mov
mov
pop
idiv
popa
or
in
mov
popa
push
xchg
lcall
out
enter
pop
sub
push
push
adc
add
mov
mov
mov
sbb
lock
js
xchg
or
imul
sbb
dec
mov
mov
icebp
lret
dec
and
sbb
mov
mov
lret
mov
dec
or
fs
push
pop
int3
and
scas
sbb
jle
lods
in
mov
arpl
pop
and
inc
jecxz
xchg
ds
ret
insl
xor
movsb
pop
mov
xchg
lret
and
pop
xor
arpl
inc
cltd
out
repz
sub
test
sbb
lods
and
jg
lcall
xchg
mov
xchg
sbb
aad
cmp
push
and
or
iret
cmpsb
jbe
inc
andb
jo
andl
mov
popa
sbb
das
pop
fisttpll
imul
cmpsl
in
sub
ss
into
and
shll
roll
jecxz
clc
lea
add
inc
mov
and
cld
cmpxchg
jb
pop
and
into
outsb
mov
pop
cmp
fldt
ljmp
sub
cmp
stos
mov
sub
loopne
fimull
movsb
ret
jge
cmp
out
jnp
and
pop
out
fldenv
add
jg
mov
pushf
dec
cmp
cld
and
stos
paddsb
mov
and
cmc
xchg
sti
lods
and
and
sbb
adc
inc
in
inc
sarb
inc
out
iret
and
adc
dec
les
andb
lret
inc
stc
sub
adc
in
fdivs
or
inc
test
mov
addr16
shll
and
lds
loope
pop
decb
in
or
cmp
push
xor
xchg
stos
push
mov
jbe
cltd
out
add
or
ljmp
xor
fimull
jae
and
xor
dec
movsl
dec
cmp
or
mov
xchg
sti
mov
mov
lahf
xchg
push
outsb
dec
inc
sbb
clc
imul
sbb
add
aad
sub
xorb
subb
cmc
int
jno
lds
movsb
je
cld
sbb
inc
and
test
aad
dec
pop
or
pop
decb
imul
and
xlat
in
stos
and
mov
fwait
add
inc
jge
outsl
and
cltd
in
and
vmwrite
pop
mov
mov
test
and
rcrl
in
and
mov
push
mov
lock
je
and
push
cmc
into
pop
xlat
cwtl
xchg
dec
and
mov
xchg
dec
shl
push
sub
and
inc
stos
mov
pop
pusha
inc
mov
xchg
jo
mov
aad
clc
jns
lock
adc
ret
push
add
jle
cwtl
xor
xchg
ja
xchg
insl
adc
push
pop
aas
shrl
ss
mov
dec
popf
mov
int
xchg
push
cwtl
lahf
test
sub
das
mov
sub
in
and
mov
jbe
inc
sbb
pop
and
sbb
xor
push
fisubs
loope
mov
les
cmp
leave
pop
pop
sahf
imul
ret
add
and
shlb
inc
in
mov
add
xor
es
jb
ficoml
cmp
push
and
jg
aad
adc
nop
mov
jle
scas
fwait
and
mov
cmp
cmc
mov
fcoms
cmp
xor
mov
insb
mov
dec
mov
daa
xor
pop
gs
enter
lahf
push
outsl
add
aas
and
xlat
add
push
jl
into
sahf
mov
pusha
lret
in
inc
mov
ljmp
mov
popf
xchg
fimull
pop
sbb
in
loop
mov
mov
lock
jmp
outsl
daa
jge
sbb
pop
in
push
test
pop
pop
loope
inc
adc
iret
stc
and
dec
popaw
lods
adc
fldenv
mov
adc
outsl
in
jmp
mov
mull
sbb
pop
icebp
jnp
add
dec
test
int
out
xor
or
sbb
and
mov
loope
ret
xlat
in
sub
jmp
inc
mov
sub
adc
aas
les
ror
push
pop
in
sbb
add
popa
cmpsb
xchg
test
lds
jne
lods
mov
push
aaa
sbb
add
and
xorl
icebp
and
jp
imul
or
out
push
or
push
cmp
cmp
and
mov
roll
shll
orb
mov
test
push
outsl
shlb
sahf
enter
jg
xor
aaa
inc
imul
mov
aad
and
aas
lret
inc
pop
xor
and
mov
jge
movsw
and
and
xchg
out
and
enter
xor
and
push
jl
dec
aaa
gs
pop
popf
mov
lods
and
in
inc
imul
in
and
cmc
pop
stc
dec
gs
xor
lods
mov
hlt
xor
js
and
jmp
adc
mov
and
jge
xchg
sub
incb
inc
mov
cltd
les
leave
and
pop
das
ja
ss
lea
pop
ljmp
test
jae
sub
jnp
sbb
dec
xchg
and
mov
push
mov
cwtl
sbb
outsl
test
loope
in
lds
push
lcall
cld
mov
leave
push
jmp
adc
mov
insb
stos
in
mov
fdivl
cmp
and
xor
push
mov
scas
sbb
dec
cmp
pop
add
mov
push
mov
mov
testl
adc
in
push
fcomp
shrb
pop
decl
and
pusha
mov
xchg
loop
in
xor
loope
cs
mov
or
mov
in
pcmpgtw
rorb
call
out
mov
xor
fsub
aam
adc
adc
int3
gs
lret
in
or
outsl
popa
mov
mov
mov
mov
bound
sub
sahf
cmp
and
mov
sub
pop
inc
cmpsb
lahf
pop
mov
mov
jb
and
test
les
mov
pop
fsts
cmp
and
imul
repz
orb
or
xchg
cmc
jle
mov
aam
sub
movsb
jecxz
and
outsl
and
and
push
fsubrs
xchg
popa
rcr
mov
push
arpl
mov
mov
rcr
mov
loope
test
push
and
push
add
and
outsb
sbb
mov
jmp
test
push
xchg
and
push
iret
or
cltd
cmp
sbb
push
mov
and
mov
dec
shr
and
in
pushf
add
mov
and
lret
data16
scas
sbb
inc
jo
xor
xorl
and
cltd
and
mov
adc
add
mov
mov
loop
test
lret
lods
lcall
dec
test
and
scas
push
ret
xchg
and
mov
std
jnp
jle
das
test
aam
enter
stos
stos
and
pop
das
and
mov
inc
mov
adcb
and
arpl
and
and
inc
jae
and
or
and
pop
mov
stos
and
add
popa
add
push
mov
data16
adcl
jo
hlt
repz
and
mov
cmp
nop
mov
inc
push
filds
test
loop
shrl
and
cmpsl
arpl
push
mov
lea
mov
imul
adc
jbe
movsl
and
pop
adc
pop
lahf
and
pop
out
lods
imul
int
mov
and
jns
into
mov
cmp
test
push
and
push
loopne
xor
inc
scas
inc
notl
call
outsb
jnp
into
sub
insl
daa
mov
and
fimull
mov
mov
inc
sbb
pop
adc
mov
jb
gs
pop
push
and
or
sub
jne
pop
call
in
sub
pusha
sarb
out
aas
xchg
call
xchg
dec
mov
divl
out
mov
jno
xchg
in
test
fbld
xor
and
adc
sub
lret
xchg
ret
mov
mov
and
inc
out
loopne
pushf
mov
add
jnp
outsb
push
mov
and
sbb
jg
movsb
jo
aas
pop
xor
out
stos
in
icebp
add
mull
inc
inc
cmpsb
push
adc
mov
inc
adc
inc
popa
mov
and
mov
xor
fbld
fildl
mov
pop
xchg
je
mov
lcall
jp,pt
ret
mov
gs
xor
and
add
popa
iret
mov
inc
out
popa
pop
push
sbb
sub
lods
hlt
pop
adc
pop
ljmp
fidivrs
sbb
jecxz
adc
nop
ret
and
lret
ficoms
jno
das
arpl
pop
or
in
jne
xchg
mov
ja
and
fists
dec
push
ljmp
cmpsb
clc
push
lahf
and
sahf
inc
data16
mov
notb
jp
js
in
cwtl
andl
jg
lcall
pop
les
xor
mov
sub
sub
or
inc
clc
and
mull
push
and
sahf
in
in
int
and
inc
enterw
lock
ret
std
cmc
frstor
push
sbb
jp
sub
orb
lret
push
fnstsw
cmpb
ja
ljmp
popf
sub
lea
sub
xor
imul
hlt
mov
push
xor
and
je
cmp
xchg
or
sarl
pop
and
and
addl
mov
pop
popa
sti
push
daa
sarl
cmc
pop
aas
pop
push
shll
in
mov
push
fisubrs
hlt
push
xchg
lea
and
and
mov
clc
mov
out
or
pop
xchg
jecxz
je
mov
add
test
jb
inc
and
mov
insb
jbe
xlat
cmp
and
jmp
addb
mov
jle
sub
xchg
movsb
sbb
sbb
stos
dec
mov
sub
popa
movl
fbld
mov
mov
out
pop
cmp
shll
in
mov
popaw
pushf
mov
xor
push
and
jnp
and
inc
das
sub
mov
inc
cs
xchg
lods
out
mov
out
jno
inc
and
loop
lods
sti
lcall
inc
hlt
xor
icebp
and
cmp
mov
sbb
dec
pop
cmp
xlat
ret
mov
movsb
and
or
les
mov
xchg
jb
int3
add
mov
or
jbe
daa
fisttps
fidivs
mov
and
dec
and
es
loope
cmp
sub
enter
sbb
ret
jb
add
aad
test
gs
sub
cltd
dec
xchg
ficoms
xor
add
and
jmp
xor
js
shl
cmpsb
jo
inc
or
xlat
in
popf
insb
loop
dec
push
or
stos
cltd
out
mov
int3
fsubr
xor
mov
mov
cmpb
push
loope
push
xchg
movsl
xor
mov
and
and
clc
xchg
push
mov
rep
xchg
inc
adc
movsl
and
mov
push
shll
insb
push
pop
fdivp
mov
hlt
jno
pop
fcmovbe
lods
xchg
jp
insb
xor
sub
jle
addr16
les
sbb
call
push
pushf
lcall
and
std
insl
dec
or
xchg
or
dec
and
and
cmpsb
and
dec
outsl
sti
and
xlat
stc
xchg
sub
cmpsl
in
mov
outsl
sub
dec
fisubl
or
mov
ja
inc
lahf
notb
and
clc
scas
push
insb
pop
cld
xor
std
and
add
sbb
jno
and
cmpl
lods
push
out
movsl
jp
addr16
popa
ret
sbb
imul
popa
shll
out
movsb
adcb
and
and
movsl
xor
mov
push
in
inc
add
add
gs
mov
add
sub
adc
loope
daa
push
pop
ljmp
push
push
or
pop
je
add
sub
popf
xchg
xchg
movsb
and
clc
dec
pop
idivb
xchg
fildll
sbb
or
fstl
mov
hlt
lret
call
mov
sti
in
push
mov
and
cld
jle
icebp
popa
sub
push
mov
or
cli
popa
add
push
xchg
addr16
and
idivb
adc
mull
push
test
adc
loope
rcrl
jmp
addr16
sub
jl
es
negw
lods
in
fcmove
imul
mov
jnp
test
test
cmpsb
leave
push
popa
adc
push
ljmp
pop
mov
cmpb
cmp
adc
sahf
push
and
and
aas
mov
lock
pop
inc
dec
aaa
inc
and
xor
mov
sar
lret
push
mov
movsb
cmp
popa
pop
cltd
sbb
shl
mov
stos
call
fsts
ficoms
mov
push
xor
ret
mov
shlb
cltd
cmp
imull
jno
test
inc
fistpl
in
cmp
les
test
mov
enter
fldcw
xor
rcrl
int3
rclb
imul
orl
sub
sub
test
loopne
orl
pop
test
xchg
push
mov
in
dec
pop
and
je
mov
mov
and
es
cs
jecxz
flds
and
lea
adc
cmc
jecxz
inc
push
xchg
test
addr16
xlat
jnp
pop
sub
out
jle
stc
mov
faddl
and
movsb
test
dec
mov
jl
xchg
sbb
adc
and
fmul
cli
test
adc
xor
adc
hlt
mov
mov
test
dec
pop
dec
jno
push
sahf
pop
and
inc
js
or
add
push
les
ss
adc
sub
dec
insb
xchg
gs
push
xchg
sbbb
and
sahf
pusha
movsb
nop
adc
int
xor
push
sbb
andl
scas
jecxz
pop
and
or
and
or
pop
imul
and
mov
icebp
mov
les
test
sub
jno
mov
leave
fisttps
inc
out
gs
and
andl
int3
jmp
cmp
or
sub
mov
enter
lret
inc
jg
mov
push
je
inc
cmp
and
and
cmp
sub
push
mov
lock
popf
scas
mov
pop
aas
popa
loope
cld
test
mov
arpl
rcr
mov
mov
inc
xchg
cltd
insb
sbb
mov
push
stos
xchg
push
mov
dec
mov
cmp
and
xchg
fs
xchg
mov
jb
jp
push
mov
mov
push
aaa
sbb
jo
in
jb
pusha
in
cmpsb
lods
sarl
dec
and
ljmp
and
xlat
hlt
rol
push
lods
push
popa
cld
mov
adc
xchg
sbb
push
mov
jmp
xor
rcl
and
cs
arpl
notb
and
push
adc
adc
jne
mov
ss
inc
mov
cmc
pop
insb
push
test
mov
icebp
aaa
sbb
dec
and
andb
imul
pusha
icebp
call
mov
add
repnz
xor
adc
outsb
out
mov
adc
mov
mov
and
cmpsl
dec
out
lret
or
lcall
fsubrl
daa
xor
lret
or
sbb
repz
leave
jo
pop
bound
rclb
cmp
push
or
xchg
and
add
mov
xchg
cltd
add
add
dec
sub
jge
xchg
sub
add
decb
add
and
mov
inc
and
test
frstor
loope
popf
and
je
mov
mov
mov
inc
xor
jo
repz
movsb
xchg
adc
ja
and
cs
jae
mov
jbe
add
std
push
std
mov
and
enter
icebp
es
das
or
sbb
sub
loop
cltd
and
sarb
std
mov
mov
and
mov
cmpsl
inc
repz
xor
popa
mov
and
mov
push
aas
mov
xor
or
xchg
push
mov
ret
mov
addl
inc
jp
test
sub
cmp
mov
push
sbb
pusha
sub
popa
push
add
cmp
iret
sub
dec
pusha
and
inc
push
cmp
inc
scas
ds
cmp
push
cmp
jmp
xchg
cmp
pop
fistpl
out
cmp
or
sbb
jno
add
and
jg
stc
stos
rclb
cltd
pop
enter
out
jo
lahf
fwait
jle
or
push
in
mov
mov
jmp
inc
dec
rorl
pop
and
testb
lods
mov
unpcklps
and
jmp
mov
push
out
xchg
ret
movsb
cli
test
pop
sbb
fidivrs
fidivs
inc
jle
lahf
ret
out
fbld
es
enter
inc
cmp
lock
mov
adc
and
dec
aaa
inc
dec
andb
jle
pcmpgtd
mov
popa
int3
imul
adc
jns
fsubs
and
jmp
mov
andb
adc
scas
jmp
mov
cmp
insb
xchg
add
jp
add
and
mov
and
test
sbb
or
sti
fmull
sub
pop
pop
and
jmp
jne
and
les
xlat
pop
movsb
sbb
test
pop
movsb
push
out
incb
mov
xchg
test
js,pn
popf
xor
ret
and
nop
mov
add
or
shlb
leave
push
xor
jmp
mov
mov
dec
popf
daa
test
mov
fsubs
add
mov
sbb
and
into
fcoms
insb
lock
sti
push
adc
faddp
and
jl
or
cs
and
xchg
jo
xchg
in
xor
mov
or
fucomi
fbld
jl
ficomps
xcrypt-cbc
cmpsl
push
mov
cmp
movsb
and
repz
dec
and
imul
adc
scas
mov
xor
and
imulb
sub
ja
push
icebp
push
leave
je
aaa
stos
and
imul
in
jo
fnstsw
pushf
sub
xlat
xchg
fsubrs
jnp
sbbl
adc
gs
int
std
into
hlt
and
and
fsubs
and
jl
adc
in
mov
mov
imul
ds
cwtl
addl
and
jbe
xchg
sbb
push
out
popf
cmp
aad
repnz
out
cmp
mov
pop
and
xorl
sbb
les
or
testl
sbbb
adcl
cmp
and
jns
insl
inc
scas
fsubl
lock
ja
inc
push
lahf
gs
and
cld
stos
int
out
inc
sbb
jae
ja
aas
adc
adc
out
fisubl
nop
mov
in
jle
test
jl
and
pop
movsb
xor
int
lea
adc
pop
call
and
icebp
daa
pusha
fnstsw
mov
xlat
inc
imulb
pop
and
sbb
mov
popa
push
lret
pop
lahf
and
outsb
in
adc
fmul
cmp
jns
push
mov
and
lods
das
ret
xor
and
loope
dec
add
sbb
pop
fistps
inc
and
inc
mov
lahf
fisubl
and
mov
dec
and
dec
sbb
cltd
in
mov
sub
hlt
loop
rclb
and
test
mov
ret
or
pop
imul
cld
lock
pusha
add
or
fldenv
adc
and
int3
inc
hlt
loope
and
jge
cmpsl
adc
andb
addr16
stos
sub
inc
cltd
mov
push
test
xchg
mov
cld
arpl
aas
std
and
push
stos
cmp
bound
sub
movsb
lods
mov
into
jno
sti
add
adcl
add
xchg
jb
push
inc
sub
jmp
or
inc
and
mov
fwait
and
dec
test
mov
and
outsb
jns
jno
xchg
push
cli
xchg
lcall
mov
add
pop
lods
add
pop
push
movsb
mov
xor
mov
jno
cwtl
xchg
mov
adc
iret
popl
pop
cmp
lds
popa
repnz
cs
imul
and
inc
or
and
xchg
mov
imul
and
mov
sub
and
pop
stos
stos
and
jg
jns
mov
lret
and
cmp
and
inc
mov
and
mov
adc
and
cmp
mov
add
aam
insb
sbb
mov
out
sbb
lods
mov
dec
xchg
mov
sbbb
ljmp
clc
sarb
and
lods
inc
dec
xchg
out
shrb
cmp
and
jecxz
rclb
add
pop
movl
subl
stc
in
enter
lock
sarb
mov
movsb
and
mov
sub
subl
ss
cmp
sub
and
aaa
bound
push
xchg
mov
clc
and
arpl
and
bnd
xor
pop
pop
add
jge
hlt
lret
movsb
dec
mov
stos
pop
push
dec
xchg
mov
inc
mov
xor
inc
pop
and
imul
and
inc
mov
mov
mov
xchg
and
cwtl
cmp
ljmp
xchg
or
cli
gs
insl
adc
and
xchg
mov
mov
loope
pop
xor
shl
cltd
cmp
inc
jae
and
fnsave
rcll
loope
xor
inc
outsl
shlb
sub
addr16
xchg
dec
and
les
dec
jnp
test
pop
pop
das
xchg
cmp
push
stc
or
and
dec
pop
sub
or
clc
dec
call
xchg
test
popa
push
push
mov
dec
pushf
movsb
lods
nop
mov
sub
shll
pop
and
pop
fwait
and
addr16
sahf
jl
movsb
pop
dec
xor
sub
push
andl
es
je
inc
jnp
fsubrs
push
icebp
or
pop
movsb
xor
add
push
sbb
sub
jecxz
and
xor
push
ds
and
addr16
aas
insl
adc
add
pop
dec
movsb
cmpsb
pop
daa
xchg
shll
aam
lock
mov
pop
xchg
and
popa
call
js
ss
mull
jno
mov
add
fldenv
ret
test
mov
and
aad
std
sub
or
mov
jo
cmpsb
fwait
push
xchg
call
lds
mov
pop
xchg
insl
fwait
and
clc
ds
and
cwtl
dec
mov
push
cmp
mov
and
rcrb
out
inc
mov
fs
jno
add
mov
and
jo
stos
sbb
jg
movsb
mov
popf
icebp
les
and
jp
mov
xor
pop
mov
mov
xchg
pop
cmpsb
pop
jnp
test
and
mov
mov
push
out
and
adc
fidivrs
pop
mov
dec
mov
ss
dec
mov
mov
push
and
dec
dec
xor
stc
aaa
das
iret
xor
lds
and
or
mov
in
and
rclb
out
sbb
in
in
jae
inc
test
mov
inc
adc
mov
push
jge
stos
cmc
and
cmp
pop
clc
jnp
subl
push
in
iret
dec
pop
add
loope
imul
sub
xchg
xor
aaa
fcoml
and
hlt
dec
test
cmp
cmp
mov
sub
sub
les
scas
test
add
insb
cld
in
jne
cs
loop
inc
cmpsb
daa
jge
jp
and
push
lods
add
cltd
sub
mov
sub
push
aam
ss
or
jns
jno
js
and
xor
mov
add
out
xor
fwait
xchg
mov
mov
mov
cmp
pop
jle
and
insb
out
roll
cmp
jne
push
in
fadd
icebp
mov
sahf
add
lock
mov
and
push
aaa
mov
mov
in
lcall
add
xor
and
xor
add
fdivrl
fisubs
stc
ss
aas
out
pusha
icebp
lds
and
jae
cltd
mov
push
repnz
and
pusha
and
cmp
dec
outsb
cmp
aad
push
or
fwait
or
js
push
outsl
sbb
adc
cmp
xlat
or
repnz
inc
xchg
jo
je
or
adc
rcrl
pop
test
lret
adc
pushf
fimull
or
add
push
je
testb
les
mov
mov
mov
jb
xchg
les
insb
ret
ds
and
stos
lock
mov
and
xchg
xor
mov
aam
std
in
or
out
ret
or
adc
inc
fsubs
fdivp
or
pop
mov
mov
and
and
stos
jmp
enter
pop
jns
mov
fs
out
lea
fcomps
rorl
and
popa
loop
push
scas
mov
push
cld
bound
outsl
xchg
xor
fcomps
test
mov
std
dec
ja
mov
xor
inc
inc
and
jns
and
das
les
icebp
pop
pop
and
pushl
and
lcall
movsb
cs
jnp
adc
dec
pop
int3
test
ret
jne
inc
pop
and
out
sti
pushf
dec
push
movsl
loop
and
fnstenv
outsl
and
lahf
jp
and
fwait
xchg
cmp
jno
inc
xchg
repnz
jne
sbb
dec
cmpb
and
xor
enter
fldenv
loopne
test
pop
stc
test
push
inc
mov
mov
fistps
xchg
testb
jmp
and
int3
sahf
mov
ja
mov
das
and
stos
pop
cmp
cli
and
and
adc
add
imul
mov
push
and
cmp
out
and
lcall
and
and
popa
mov
movsl
xchg
jno
les
outsb
cmp
fwait
dec
iret
and
fdivr
dec
and
outsl
aaa
sub
repz
mov
add
xor
adc
dec
pusha
add
andl
or
jg
push
xor
pop
mov
lahf
and
pusha
sti
and
pop
dec
loope
push
dec
mov
mov
sub
icebp
xor
adc
and
xor
mov
push
and
xor
cmp
mov
mov
cltd
cmpsl
jno
xor
adc
add
and
sub
movb
add
movsl
mov
ret
xor
pop
xchg
aas
mov
es
mov
inc
lock
mov
and
cltd
daa
loope
and
dec
jb
sbb
enter
out
cmp
mov
push
and
inc
xchg
mov
adc
lea
and
xchg
jne
cmp
test
mov
add
lret
jbe
pop
and
cmpsb
popa
mov
mov
add
or
inc
subl
bound
lea
lods
jle
mov
jl
je
jmp
dec
xor
leave
add
int3
mov
imul
cmpl
inc
scas
xchg
adc
pushf
fildll
dec
cmp
and
icebp
shrl
and
mov
ljmp
fs
je
stos
and
or
mov
insb
sbb
popa
mov
cmpl
popa
out
push
pop
mov
xchg
sarb
pop
mov
xchg
cli
xchg
add
dec
and
jl
arpl
add
rorb
aas
mov
jb
in
imul
and
shl
stc
and
cmp
add
mov
jle
jno
movsb
push
and
cltd
ret
add
stos
xor
mov
add
dec
lahf
pop
cld
mov
sbb
lods
dec
out
rorb
std
and
add
sbb
mov
xor
sub
lods
sahf
cmpsb
xor
or
cmp
ljmp
cmp
fcoml
popa
cmp
pop
inc
dec
and
dec
cmp
lods
cmp
mov
jecxz
aas
out
xchg
and
cmp
popf
rolb
es
mov
push
imul
push
adc
mov
mov
pop
ss
cmp
movl
lret
pop
push
push
and
or
scas
sub
mov
mov
scas
mov
mov
push
test
js
scas
xchg
in
aam
lea
or
jp
pusha
rolb
xor
xchg
and
push
iret
jno
mov
sub
test
sub
and
idivb
loopne
stc
sub
ret
adc
cmp
fidivrs
mov
jmp
xchg
fcomps
adc
test
xor
rcr
mov
fcoms
push
jb
xchg
inc
fsts
shll
cltd
leave
ja
je
xor
lahf
add
xor
sub
xor
ret
mov
gs
inc
xchg
hlt
jne
xor
sub
inc
and
shll
sub
push
and
xor
adc
inc
ljmp
sub
lods
popf
push
insb
mov
push
pop
movsb
mov
jecxz
pop
popa
mov
inc
mov
and
sub
push
and
dec
loope
pop
sub
outsl
dec
xor
in
pop
pusha
add
and
inc
into
cmp
mov
mov
jl
sub
xor
bound
stos
lcall
cld
scas
and
inc
jb
add
cmp
or
cmpl
xor
push
add
xchg
mov
dec
mov
pop
std
mov
ds
cmp
and
ja
mov
sbb
ss
jecxz,pt
popa
add
pop
ficoml
clc
sbb
lods
xor
loop
and
sarb
push
mov
dec
test
or
xor
out
and
ss
and
cmp
cmp
mov
inc
sbb
pushf
sub
add
shll
test
popa
mov
dec
es
pop
cwtl
mov
popf
adc
sbb
and
imul
push
add
cmp
pop
mov
push
cld
in
mov
cltd
cmp
test
daa
push
add
inc
lods
dec
jge
ds
movsb
scas
dec
inc
js
mov
cmp
cli
shrl
outsb
ret
xor
addr16
mov
and
and
js
mov
lea
lret
and
xchg
imul
jno
cltd
scas
lcall
outsl
scas
mov
cmpsb
orl
les
bound
inc
mov
mov
push
mov
negb
dec
inc
and
cmp
aaa
scas
pop
ljmp
int
sub
jp
mov
fisubl
add
addl
push
cmp
cmpsl
and
jl
pop
lods
pop
and
and
lea
sahf
xor
jge
popa
dec
cmp
mov
imul
push
xchg
mov
pop
inc
aad
test
cmpsl
nop
dec
cmpl
add
inc
lahf
xor
cwtl
jle
or
popf
test
cmp
in
int3
xchg
cmp
fldl
and
adc
dec
cmp
out
addr16
daa
pop
out
scas
movsb
sbb
mov
lods
add
cltd
adc
movsb
mov
fs
inc
mov
xchg
adc
stos
cmp
shrb
das
lahf
push
and
pop
inc
sbb
and
jp
add
iret
sbb
mov
imul
adc
jbe
test
sbb
popf
mov
icebp
or
and
out
or
add
test
fcoml
and
push
xchg
cmpsb
imul
xor
dec
cwtl
xchg
pop
and
cmp
ds
jo
jns
pusha
movsl
and
or
mov
dec
pusha
mov
movsb
sub
jne
cmp
dec
test
jo,pt
popa
cmp
jae
push
and
jp
and
add
cmc
jle,pt
and
inc
inc
rolb
push
jecxz
and
sbb
jns
pop
popf
xor
sub
ret
popf
test
ja
imul
cmp
fldenv
pop
lods
cmp
ret
not
push
test
add
icebp
lds
cmp
fdivl
sbb
ljmp
js
mov
xor
cmp
popa
add
andl
subb
inc
pop
or
hlt
enter
out
adc
xchg
and
xor
lcall
outsl
lds
and
push
bnd
inc
aas
jns
jge
cltd
xchg
cmp
mov
sub
scas
sub
dec
mov
outsl
jge
icebp
and
mov
jno
aaa
or
jmp
inc
lea
xchg
icebp
dec
sbb
pop
test
cmp
shlb
stos
xor
sbb
outsb
pop
push
jg
ss
in
sub
test
xchg
inc
cmp
xchg
push
mov
and
inc
jle
cltd
ja
cmp
cmpsl
fwait
and
insb
data16
sub
mov
and
inc
push
repnz
push
fsubrs
cmpl
mov
inc
push
cmp
pop
mov
in
scas
sub
xchg
outsb
shlb
or
lret
outsb
daa
push
and
push
pusha
inc
and
and
fists
mov
cmc
into
and
fdiv
mov
mov
cwtl
cmp
jno
ret
stos
mov
mov
in
sub
lods
scas
jno
add
inc
out
jns
arpl
mov
test
push
imul
mov
arpl
das
dec
add
xchg
xlat
repnz
jbe
iret
xchg
andl
sub
aad
and
ljmp
and
adc
addb
pushl
jp
cmpsl
cmpsb
and
mov
in
movsb
xorb
popf
daa
jecxz
fstpl
jg
mov
loope
fistpl
insl
movsb
or
xor
adcl
adc
xchg
shll
adc
jo
clc
data16
and
sbb
jle
jl
fsubl
xchg
sub
loop
add
sbb
and
mov
and
xchg
shlb
and
lock
cmpsb
mov
ds
mov
mov
mov
and
aaa
in
icebp
jecxz
pop
mov
cmp
lret
and
pushf
and
out
mov
xchg
shll
aas
popa
sub
pop
mov
ret
adc
popa
stc
push
push
sub
add
pop
mov
lods
icebp
or
xor
and
dec
sub
and
mov
mulb
gs
scas
mull
shll
push
dec
in
and
jp
sbb
add
jns
adc
shlb
in
mov
lret
aaa
sbb
roll
and
cmp
add
mov
cmpsb
pop
jmp
sub
shlb
stos
fdivrp
pop
mov
xor
jne
cmc
and
orb
mov
push
dec
adc
xor
popa
pop
mov
je
xor
xor
cmc
dec
test
dec
in
push
lcall
popa
daa
push
arpl
pushf
add
cwtl
popf
xor
jnp
cmc
and
sti
push
sbb
cld
stos
outsl
mov
push
repz
psrad
lahf
fcoms
cmp
shll
xchg
pop
dec
mov
add
xchg
xor
jne
xor
push
and
adc
xchg
insb
aas
and
stos
scas
outsb
daa
sbb
popf
dec
js
clc
sbb
loopne
inc
cmc
adcb
mov
mov
pop
setne
addb
mov
sub
add
ret
jae
xor
popf
daa
das
aaa
inc
push
fsubrl
hlt
mov
mov
pop
fs
mov
cmp
and
cli
xchg
movsl
xchg
andl
ret
je
inc
jbe
mov
push
jb
xchg
xlat
popf
pop
and
int
in
inc
push
and
jmp
xchg
and
ret
pop
add
and
fbstp
xchg
outsl
xor
in
sub
arpl
cmp
dec
push
push
lcall
push
mov
mov
mov
push
aas
jecxz
mov
inc
dec
add
and
and
fists
sbb
mov
add
clc
dec
xchg
mov
arpl
mov
adc
mov
jo
scas
mov
xchg
adc
orb
sahf
adc
mov
jae
loop
ret
push
sbb
test
cmp
into
and
xor
addb
and
shlb
mov
rorb
and
lret
sti
lea
dec
and
pop
ljmp
push
and
lods
adc
fs
call
pop
xor
lret
sub
adc
or
imul
jmp
or
xchg
add
push
mov
push
mov
test
outsl
add
aas
lahf
add
in
js
iret
and
mov
and
jge
and
push
push
int3
movsb
jmp
lock
mov
xchg
mov
cld
mov
roll
xchg
or
inc
stos
scas
jmp
mov
repnz
sub
xor
push
and
ret
jo
and
divl
jp
cltd
ds
xlat
movsb
ss
arpl
and
cmpsb
lods
insl
out
cmp
sub
repnz
cmp
sub
jne
adc
mov
xchg
out
sub
ret
or
inc
popf
pop
outsl
fcomps
push
movsl
dec
mov
inc
sub
xorl
fildl
dec
and
pop
xor
xchg
ret
into
jns
lret
ficompl
scas
hlt
es
xchg
pop
mov
aaa
stos
and
into
jns
stc
cltd
popf
sbb
xor
xchg
and
lods
subb
fcomps
in
sbb
inc
andl
mov
jne
sti
pop
cltd
rol
inc
cwtl
xchg
pop
ja
popf
in
shlb
adc
out
arpl
aas
add
xor
ljmp
out
ret
xor
iret
lcall
xor
insb
adc
fisubs
outsl
pop
adc
xchg
stc
and
mov
rorb
lahf
scas
icebp
xlat
and
sbb
loopne
mov
add
fucomip
imul
adc
cltd
or
sub
popf
push
cmpsl
push
scas
leave
lods
out
and
imul
aad
mov
cwtl
jno
push
mov
cmp
xor
jne
xchg
test
jecxz
and
ds
inc
cmpsb
and
xchg
mov
daa
aas
xchg
sub
jle
and
cld
mov
inc
shlb
outsl
jecxz
loope
cwtl
jne
cltd
xchg
aas
mov
shll
xor
in
loope
sbb
in
jle
pop
mov
xchg
and
subl
pop
xor
jp
dec
mov
mov
in
aaa
cltd
nop
inc
aas
clc
cmp
testb
xchg
push
jno
bound
or
stos
and
mov
and
xchg
push
and
push
test
jno
mov
pop
and
arpl
and
cmpsl
ret
adc
push
shrl
pop
out
loopne
add
jne
cmp
es
das
jl
xchg
and
jmp
inc
cmp
ljmp
sarb
sarl
jle
and
test
sbb
inc
test
and
dec
sub
pushf
dec
inc
call
mov
lcall
and
push
fdiv
xchg
fldcw
cmp
lahf
inc
add
sub
outsb
xlat
clc
and
sti
cli
sub
lods
ljmp
xor
adc
imul
inc
fisttps
js
xor
pop
inc
sbb
insl
mov
add
jns
fcomps
fdecstp
movsb
inc
mov
into
inc
xchg
pop
es
stos
sarl
sbb
pop
xchg
add
pop
loop
push
jle
adc
and
mov
nop
and
or
and
test
mov
je
inc
inc
add
jo
xchg
sbb
inc
adc
scas
and
sbb
inc
shlb
scas
ret
orl
test
loopne
test
shlb
cmpsb
and
or
test
jns
rcr
and
popa
xchg
imul
push
mov
and
ret
ficomps
das
pusha
iret
inc
cmp
xchg
call
sbb
or
test
sbb
sub
leave
xor
jno
mov
adc
cmp
xor
pushf
push
sub
repnz
dec
insl
in
popa
in
popa
mov
and
push
xor
and
mov
cmp
fldcw
jecxz
daa
mov
jne
addr16
lcall
lahf
in
xchg
mov
and
fcomps
and
aam
push
les
and
icebp
inc
mov
popa
inc
fldcw
int
and
and
outsb
and
adc
and
adc
data16
and
arpl
shll
mov
mov
mov
les
cltd
inc
repz
dec
and
inc
rorl
in
nop
je
test
decb
inc
popa
adc
pop
cmpsl
movsb
jnp
cs
mov
or
daa
dec
inc
sarb
sbb
adc
xor
stos
mov
sub
dec
xor
cltd
xor
mov
lcall
movsl
and
or
cld
and
inc
lods
sbb
ret
sub
sbb
test
and
movsl
das
sub
pop
ljmp
repz
inc
ja
and
inc
jmp
push
ret
and
lcall
pop
in
test
sbb
jnp
mov
and
fsts
shrb
sbb
outsl
sti
mov
cmp
mov
and
inc
dec
cmpsl
and
mov
imul
push
stos
and
jb
mov
mov
fadds
fwait
jo
cmpsl
push
sahf
xchg
sti
and
add
xchg
int3
and
ret
pop
movsb
popf
lods
das
and
fdivr
sbb
inc
mov
cwtl
paddq
cmp
int3
pop
push
and
lds
daa
xchg
inc
or
fwait
xchg
cmpsb
je
jle
and
call
mov
sub
fsubs
pop
int3
jno
push
imul
xchg
add
cmp
ret
xchg
pop
icebp
pop
int
mov
movl
andb
in
cmp
mov
add
pop
xchg
int
and
mov
cmp
fists
mov
icebp
push
test
cltd
into
or
sbb
push
es
shl
or
das
inc
call
popa
and
enter
jnp
pop
test
pop
inc
stc
movsb
jne
stc
stos
fsubl
int
jge
pop
in
sub
das
mov
cltd
lea
mov
sarb
pop
xorl
test
sub
mov
push
mov
sub
aaa
and
inc
jne
and
cmp
out
mov
or
adc
popf
cmc
cmp
xor
mov
cltd
sbb
out
stos
and
add
and
aas
dec
mov
dec
jae
mov
dec
lods
arpl
push
mov
mov
movsb
rorl
add
call
jg
push
mov
and
mov
push
and
jnp
sbbb
sub
test
mov
dec
sub
mov
xchg
in
popl
xchg
sbb
leave
xchg
fwait
or
xor
sub
and
push
rol
rcll
jns
test
push
mulb
mov
fsts
xchg
jp
sub
inc
test
outsl
imul
pop
out
push
adc
push
insb
movb
lret
ror
dec
pop
movsl
nop
loope
sbbl
pop
in
cld
sbb
or
and
push
rol
pop
pop
ljmp
lcall
das
push
lahf
testb
and
mov
js
shlb
jbe
and
xlat
or
mov
or
mov
pop
push
xchg
pop
dec
mov
data16
xchg
sbb
mov
scas
cmp
adc
stos
and
cwtl
add
outsl
leave
pop
imul
cmpsb
fndisi(8087
or
push
fwait
and
add
sbb
movsb
add
fnsave
adc
in
inc
sti
xchg
mov
mov
scas
aad
or
adc
inc
sbb
ret
mov
and
jnp
in
rorb
and
jne
and
push
sub
mov
inc
sub
add
lret
or
adc
and
call
xchg
sub
and
adc
sub
push
inc
push
imul
pop
cmc
pusha
push
push
mull
aaa
stos
jne
jecxz
and
xor
and
popf
jbe
mov
int3
and
inc
adc
dec
lods
sar
push
rorl
test
mov
movsl
and
test
sub
mov
pop
dec
call
sub
sbb
add
repnz
cmp
lea
ficompl
movsb
inc
insb
outsl
bound
jno
pop
push
ljmp
repz
js
xor
jmp
cmp
adc
in
and
lock
sbbl
and
cmp
in
addr16
cmp
and
jge
lret
stos
mov
subl
and
shlb
lret
aaa
add
stos
add
ret
inc
jge
xchg
jg
lret
fld1
aas
push
js
lods
cmpsb
fidivl
repz
jno
xchg
add
or
or
sub
rcrb
lahf
call
adc
insb
and
add
dec
pop
and
cmp
lret
in
pushf
es
int3
popf
call
fstl
lahf
and
sbb
enter
daa
mov
and
lret
movsb
mov
stos
xchg
out
imul
test
sub
and
and
sbbl
movsb
sbb
add
inc
test
jmp
daa
roll
cltd
xchg
stos
enter
xor
jg
outsl
sbb
lods
stos
out
inc
sbb
lds
call
inc
push
inc
bound
mov
push
ds
mov
adc
adc
adc
cwtl
movsb
xchg
pop
sub
push
push
sbb
in
sbb
fcompl
mov
cmp
outsl
sub
arpl
push
xchg
sbb
or
mov
insb
daa
or
sbbb
popa
add
inc
repnz
popf
sbbb
or
hlt
push
fistps
insb
lock
aaa
icebp
push
popf
mov
xchg
xchg
scas
dec
cmp
notb
stos
fistps
sub
rcrb
movsb
out
iret
sbb
in
mov
ficoms
or
rcr
ja
dec
in
and
loope
xor
sahf
add
mov
mov
subl
outsl
lret
jo
aaa
add
dec
fisubrs
dec
std
shll
xor
popa
sub
stc
shll
das
and
cld
pop
adc
test
fcomps
mov
xchg
dec
mov
lret
sbbl
enter
mov
in
cmp
dec
mov
fdivs
and
daa
ljmp
mulb
nop
jne
jecxz
cmp
and
enter
xchg
add
insl
addr16
imul
out
orb
mov
outsl
loop
jge
xchg
xchg
mov
das
cltd
addr16
andl
hlt
add
add
aaa
popa
fnstcw
push
or
sbb
pushf
xchg
ljmp
das
xchg
rcrb
negw
insb
imul
jne
movsb
dec
push
pushf
loopne
sub
jle
mov
mov
mov
jae
je
pusha
cmp
and
fnstsw
ljmp
mov
pusha
sbb
sbb
xchg
jg
xor
add
out
out
pop
cmpsl
jl
loope
aam
inc
pop
fldl
es
xchg
mov
xor
loope
movsb
bound
aaa
and
mov
test
xor
pop
jmp
xor
sbb
jl
xchg
xor
xor
popa
pop
in
jne
cmp
add
adc
movsb
test
int3
adc
push
jo
inc
and
xor
ret
mov
aad
jge
pop
xchg
and
imul
mov
out
outsl
mov
arpl
pop
dec
ret
fmuls
pop
cmp
adcb
xchg
and
dec
loope
and
xchg
mov
mov
mov
xchg
cmpsb
testb
sti
and
jle
test
push
lea
dec
aaa
insb
icebp
testb
xor
adc
call
and
addr16
ds
std
sti
inc
cmp
and
orb
cmpsb
cmp
jge
mov
sbb
roll
loope
lahf
jle
lods
push
xchg
xor
js
and
dec
std
xor
cmp
loopne
sub
sbb
and
jmp
dec
push
jmp
adc
pop
add
mov
sbbl
add
xchg
cmp
ds
and
mov
enter
movsb
jns
mov
les
and
outsl
imul
push
test
lds
inc
sub
sub
push
lods
mov
scas
das
fistl
push
inc
pop
dec
cmpsb
pop
inc
mov
mov
mov
xlat
push
sub
push
sbb
adc
popaw
xor
jg
shr
mov
sub
pop
and
daa
inc
xchg
mov
pop
mov
outsb
stos
adc
scas
pop
push
jg
aad
lcall
cmp
pop
mov
mov
lret
std
movsb
clc
outsl
adc
bound
sub
push
test
daa
adc
mov
int
icebp
sbb
mov
and
sbb
jns
popa
xor
and
scas
negl
aad
xchg
dec
and
sub
add
dec
jne,pn
push
push
push
mov
cmc
push
lods
push
jne
dec
and
mov
femms
subl
test
sub
rolb
rorl
cmp
ja
pusha
idivb
test
pop
pop
sahf
lock
xchg
mov
fldenv
test
inc
and
scas
xchg
inc
mov
push
repnz
dec
jno
or
mov
mov
fnstcw
jmp
in
and
jp
pop
outsl
bound
inc
sub
jmp
lock
push
sub
jmp
test
add
daa
and
cmp
jl
dec
and
fcmovnu
es
mov
loope
lods
aas
leave
std
xchg
or
or
mov
sub
movl
imul
stc
jb
cmp
insb
aad
sar
inc
lcall
and
mov
mov
push
and
jns
mov
loopne
aas
jg
and
aas
add
roll
cmp
mov
shrb
mov
fisubl
mov
add
mov
mov
mov
das
xor
sbb
popa
add
movl
add
sbb
push
xchg
dec
sub
in
call
add
and
mov
push
jmp
inc
dec
pusha
sub
mov
insb
pop
stc
and
push
push
and
rclb
test
lret
and
out
sub
adc
and
loop
icebp
fstps
push
push
addr16
xchg
sbb
and
lods
cmp
push
cmp
inc
jno
ja
dec
ljmp
and
xlat
rcll
xor
mov
inc
mov
fadds
mov
enter
mov
or
movsb
call
inc
jns
fwait
add
decb
insl
imul
mov
fisubrl
jno
fwait
inc
sbb
rolb
out
sub
or
lods
fsubrs
popa
cmpl
gs
push
ljmp
and
shlb
dec
adc
mov
cmp
and
xor
rcrb
les
or
adc
and
cli
inc
cmp
sbb
mov
loope
or
mov
lret
ds
push
jo
jnp
pop
ffreep
and
and
fs
loope
scas
das
jl
dec
bound
push
cmpsl
and
aaa
push
repnz
jle
pop
pop
xchg
ljmp
mov
push
lahf
cmp
inc
add
das
mov
cwtl
dec
daa
lret
xor
nop
popf
and
xor
lods
fbstp
and
andb
mov
xor
mov
pushf
shr
dec
or
inc
mov
sub
icebp
and
in
pop
in
lock
iret
mov
or
jnp
xchg
adc
sbb
adc
aaa
ret
push
jnp
xchg
ds
mov
stos
mov
push
rolb
pop
sbb
and
scas
in
cmpsl
out
fnstsw
and
sub
imul
or
repnz
pop
mov
out
mov
js
and
cmc
lret
push
ja
cwtl
fdivrs
scas
xchg
sub
and
lds
shlb
lcall
int3
mov
clc
ficoml
lret
lret
sbb
stos
inc
sbb
stos
add
jmp
sti
inc
inc
push
fsubs
push
add
stc
pop
adc
rcl
add
bound
ret
ret
inc
adcl
scas
and
sub
popa
movsb
push
aad
cmp
mov
sbb
orl
push
pop
and
clc
js
and
push
and
and
lds
push
outsb
mov
push
je
mov
push
or
mov
adc
insl
in
negb
sbb
mov
das
pop
lock
mov
jnp
xchg
insl
pop
addl
gs
cmp
movsl
loope
and
or
mov
mov
and
cld
or
sub
insb
clc
dec
int
mov
add
popa
cmp
and
sbb
and
fdiv
and
cmpsl
mov
pop
lret
add
call
ret
cmp
and
push
pop
jno
negb
sub
jl
mov
in
mov
pop
mov
cltd
mov
xchg
outsb
stc
mov
and
in
loope
fstps
outsl
push
cli
repnz
pop
push
cmp
xor
sti
mov
fwait
mov
jnp
ja
jns
iret
imul
xor
mov
or
mov
fsubl
xor
lret
shll
pop
out
lea
sbb
pop
jae
sbb
or
cld
pop
pop
mov
aaa
movsb
daa
inc
into
add
and
inc
shll
bound
fcomps
mov
push
enter
out
loop
movsb
subb
xchg
int
decl
std
lock
movsl
pop
jmp
sub
xor
filds
mov
dec
mov
insl
mov
mov
push
in
imul
adc
movsl
lea
sarl
imul
popf
mov
dec
int
loopne
daa
xchg
das
fwait
ljmp
pop
iret
test
rcr
or
in
mov
inc
adc
fisubs
je
iret
popl
push
jge
repnz
outsl
dec
and
scas
aaa
mov
lock
frstor
mov
xor
and
hlt
and
and
popa
push
xchg
dec
lret
insl
and
sbb
and
pop
sbb
subb
pop
imul
das
mov
frstor
xchg
clc
jae
lahf
cld
pushf
add
adcl
dec
rorl
aas
cs
sub
inc
and
dec
rclb
imul
dec
mov
enter
push
shrb
stos
mov
sbb
shrb
and
sub
js
mov
adc
das
push
fisttpll
and
mov
pop
and
mov
and
sti
and
movsb
dec
js
or
xor
and
and
aaa
and
xor
pushf
addb
xchg
inc
jle
inc
mov
inc
dec
dec
popa
xor
jno
and
jmp
scas
push
sub
scas
loop
xchg
jns
loope
sub
sbb
xor
or
test
lahf
insb
insl
cmp
pop
lods
push
jg
xchg
andl
and
out
xchg
and
adc
push
jns
inc
test
insb
mov
mov
cmpl
fidivrs
inc
cmpsb
pusha
scas
mov
adc
sbb
jbe
insl
fildl
dec
mov
mov
shl
push
pop
addr16
jns
inc
xor
scas
test
lahf
movsb
out
gs
sbbl
mov
popa
adc
pop
test
mov
cmp
lahf
leave
int
sub
push
mov
ds
cmpl
inc
cmp
fisubs
bound
mov
rorb
mov
test
mov
loop
sti
jne
push
sub
cmp
and
loopne
and
aas
out
test
push
push
out
mov
xor
mov
jb
adc
ja
jl
xchg
and
pop
test
push
xor
and
xchg
mov
mov
xor
sub
popf
out
les
push
sbb
sarb
xor
test
in
push
xor
and
or
in
and
add
push
mov
mov
mov
adc
and
add
xor
test
and
jg
sysexit
and
pop
mov
loop
or
dec
test
mov
and
cmc
and
jbe
hlt
sub
lahf
adc
mov
or
loop
iret
out
test
arpl
pop
jno
pop
psubq
xchg
and
add
xchg
sbb
xchg
leave
sub
mov
loop
sub
cltd
movsl
test
pop
andl
jae
dec
leave
adc
or
sbb
mov
xor
xchg
idivb
lods
pop
pop
adc
aas
aaa
and
dec
sub
push
rcrb
mov
inc
and
and
xchg
mov
fistl
sub
js
push
xchg
andl
pop
cmp
push
scas
ljmp
addr16
pop
and
jns
sub
add
xlat
dec
or
adc
sub
test
js
aas
mov
fwait
dec
jne
dec
jmp
test
mov
repnz
mov
mov
and
fidivrl
cld
and
mov
je
add
lahf
jo
or
and
fists
out
lahf
in
sbb
ja
cmpsb
mov
cmpsb
push
xor
pop
mov
stc
mov
inc
jne
ret
cltd
mov
call
sub
push
lahf
xchg
mov
add
sti
xchg
outsb
scas
repz
fnsave
fisttps
cmp
and
mov
scas
sbb
ja
arpl
push
rclb
inc
adc
fisubl
or
into
pop
mov
pop
push
popa
cli
ret
shr
and
test
call
stos
pop
orl
mov
ficomps
out
sbb
jns
popf
in
and
add
and
fnsave
sarb
push
mov
ljmp
rcl
nop
and
and
rcrl
cmpsb
in
ss
dec
dec
and
xchg
imul
stos
pop
jo
mov
out
repz
add
adc
loop
inc
inc
xchg
sub
loopne
jecxz
andl
lret
call
jmp
cmp
push
ja
xchg
fsubl
add
sbb
xchg
xor
lods
pop
icebp
fsubs
pop
test
sahf
jno
push
xor
out
sub
inc
lcall
and
repnz
leave
fcmovu
push
repz
pop
or
out
pop
out
test
popf
test
fldl
inc
stos
mov
inc
or
in
in
push
loop
cld
jl
aaa
mov
enter
btc
mov
and
cmpsl
stos
in
mov
xor
and
jno
into
ja
mov
and
add
push
outsl
test
or
mov
sbb
sub
push
mov
cwtl
push
popa
sarb
and
or
jmp
sub
sbb
sub
ficompl
popf
insb
dec
pop
adc
les
push
mov
popa
mov
popa
xchg
mov
out
rorb
inc
out
data16
lea
negl
mov
rclb
push
icebp
sub
or
xchg
and
movsl
pop
jb
sub
fs
add
push
cld
pop
cmpsb
push
push
pop
aas
xchg
rolb
ret
and
mov
fisubs
cmpsb
sub
jns
cmp
aad
and
es
jb
lret
mov
sar
cltd
sbb
xor
cli
sub
out
adc
in
movsb
data16
pop
and
cmp
xchg
sub
push
xor
imul
dec
xchg
xor
outsl
mov
in
mov
sahf
mov
loopne
and
lods
xchg
mov
xor
in
pop
cmp
out
outsl
das
pop
lret
mov
mov
rcl
mov
loope
jo
iret
and
adc
cmp
and
mov
mov
add
dec
mov
imul
popf
test
jbe
in
add
cmp
popa
loop
inc
jne
sub
and
cli
fsubrs
cmp
pop
popl
mov
xor
fldenv
pop
jne
cld
mov
enter
add
cmc
and
jns
cltd
and
xlat
jno
dec
rorb
repnz
push
cmp
aam
or
and
mov
cmpsb
inc
inc
xchg
and
das
sarl
push
lret
ja
pop
add
out
mov
lods
enter
add
ret
and
and
mov
cmp
rcrl
push
scas
dec
mov
rcll
insl
ret
test
and
xchg
push
pop
pop
and
mov
pop
dec
pop
popf
in
mov
cmp
adc
fiaddl
jge
or
inc
out
popa
and
dec
aaa
mov
and
stos
shr
out
mov
es
mov
fidivl
inc
dec
call
jmp
add
shlb
push
test
sub
adc
aad
popf
add
movsb
xchg
add
notl
jge
and
insb
lock
cld
movzwl
mov
jg
scas
cmp
dec
and
int3
add
sub
mov
and
mov
dec
sbb
dec
inc
and
clc
andb
mov
mov
and
les
cmp
outsb
leave
insb
roll
xor
popa
xchg
std
or
popf
sub
cmpsl
mov
fwait
mov
loope
and
movsb
sbb
or
movsl
enter
and
add
jmp
mov
cmp
dec
pop
xchg
cmpsb
and
outsb
jb
fnstcw
and
or
add
push
std
and
loopne
xlat
mov
jb
add
mov
test
lock
addl
and
mov
or
push
cltd
loopne
fwait
pop
jp
into
ljmp
popa
imul
push
in
jmp
test
push
pop
mov
or
dec
mov
jno
sbb
rclb
push
add
lcall
fdivrl
outsl
and
js
je
or
and
in
and
mov
inc
sbb
pop
pop
lret
jo
mov
ds
and
dec
jg
or
fstps
sub
cltd
scas
and
test
push
scas
or
xchg
mov
pop
test
mov
sub
test
daa
fdivrl
pop
adc
xchg
js
ss
cltd
push
rolb
mov
cmpl
lock
push
xor
andl
shlb
inc
test
and
sbb
js
les
cwtl
fcmove
rcll
and
test
test
mov
mov
and
into
sahf
in
inc
fbld
mov
scas
xchg
and
lea
stos
and
leave
dec
cmp
sub
pop
cs
gs
mov
and
mov
cmc
inc
xchg
sub
outsb
and
push
push
ja
mov
lock
mov
lcall
lret
mov
into
inc
fnstsw
and
mov
and
mov
and
push
inc
cmpsb
sbbb
push
jg
fldcw
mov
imul
jns
pop
pusha
pop
and
sarb
xlat
inc
xchg
pushf
popa
mov
and
outsb
adc
dec
insl
lahf
mov
pop
or
pop
jecxz
jmp
ret
xchg
ret
push
or
and
daa
sub
cwtl
and
in
mov
repnz
sub
and
jp
pop
jle
push
and
dec
jo
sbb
xchg
mov
popa
jb
sub
jge
xor
sbb
lock
pop
icebp
mov
jne
adc
sbb
cmp
sub
hlt
xchg
filds
xorl
mov
arpl
daa
int
or
lock
sti
dec
mov
fbstp
sbb
dec
jge
xlat
push
gs
sub
js
push
and
rorb
ds
dec
sarl
push
sub
cmpsb
testb
jge
data16
pop
xchg
xchg
or
mov
inc
mov
inc
sbb
xor
push
mov
mov
out
sbb
pop
out
shl
loope
pop
ret
inc
add
sub
adc
sti
lods
jecxz
fwait
pushf
loop
mov
repnz
mov
enter
repz
std
dec
pushf
xlat
mov
mov
mov
sub
xchg
mov
mov
in
cmpsl
jecxz
mov
cmp
insb
push
mov
ror
or
mov
insb
mov
repz
movsl
popa
jb
or
xchg
pop
negb
iret
ja
sub
xchg
and
stos
dec
pusha
and
and
xchg
xor
test
sub
cmp
ret
mov
or
rorb
add
fnstsw
cltd
inc
movsb
je
leave
out
jno
dec
ljmp
pop
cmc
and
outsb
mov
and
mov
int
push
mov
enter
in
cltd
icebp
lods
xchg
int3
cs
jnp
call
mov
stos
loop
addr16
lds
and
jbe
aad
mov
jb
push
insl
xor
out
adc
pushf
jns
adc
and
cmp
add
out
gs
repz
daa
inc
mov
sub
loope
jns
mov
int
cmp
sub
daa
and
adc
dec
adc
sub
stc
pop
je
sbbb
push
mov
in
pop
arpl
in
sahf
dec
stos
pop
dec
sub
add
push
and
fidivs
repnz
aas
in
adc
faddl
cmp
pop
jmp
addr16
and
mov
sti
and
adc
lds
mov
push
std
add
out
nop
pop
fwait
mov
add
dec
getsec
xor
ret
decb
and
lahf
jnp
mov
sbb
inc
xchg
push
vcmpps
and
push
cld
lods
and
jle
adc
and
leave
jb
add
ja
add
loop
es
call
arpl
sbb
daa
fwait
push
jns
xchg
jae
aaa
mov
cwtl
and
out
cmp
aad
xor
inc
mov
gs
or
xor
lret
dec
insl
adc
and
adc
pusha
cmp
xchg
sub
and
jbe
push
and
stc
sub
xchg
adcl
and
data16
pop
xchg
xchg
mov
push
imul
sub
xchg
sbb
push
dec
inc
std
pop
or
jb
popa
mov
jns
mov
popf
add
sub
js
or
fldcw
out
sbb
pushf
es
mov
add
call
sbb
inc
push
xchg
out
aaa
iret
insl
aam
jb
jmp
lret
push
adc
lods
mov
and
movsb
xchg
mov
and
push
xchg
sbbl
mov
pop
nop
insl
in
cmp
jg
pop
push
inc
dec
sub
stc
subl
push
iret
hlt
loop
mov
jbe
jge
sub
sahf
or
and
in
push
mov
pop
gs
pop
shlb
pop
rolb
xchg
dec
or
and
ret
and
movsb
fmull
jp
mov
adcb
and
popa
test
jl
push
cmp
pop
and
push
roll
leave
das
inc
or
lock
adc
and
cmc
das
xchg
jle
test
fs
int
jge
add
xchg
xchg
and
insl
mov
and
icebp
mov
cmp
jae
and
or
daa
loope
stos
aam
mov
test
xchg
clc
movsl
xor
out
jae
or
inc
fsubrl
mov
ret
fwait
stos
outsl
sahf
xor
sbb
push
push
aas
dec
mov
pop
push
in
lret
push
xor
in
inc
sbb
or
daa
test
outsl
lahf
imul
inc
lods
insl
pushf
mov
jmp
icebp
xchg
sti
and
sarb
bound
jne
and
cmpsb
out
add
popf
xchg
fistps
adc
je
loope
call
xchg
mov
gs
clc
or
xor
mov
jb
mov
lahf
in
fidivrl
dec
cmpl
inc
xchg
push
mov
mov
sub
and
inc
stos
inc
movsb
stc
test
push
jbe
push
call
mov
popf
cwtl
push
xor
mov
mov
cmp
inc
cs
popa
loope
cmp
lea
sbbl
loopne
lods
pop
inc
shll
cmp
push
xchg
xchg
and
movsb
push
popa
inc
xchg
movsl
mov
xchg
push
cmc
cmp
adc
repz
push
inc
cli
movsl
sbb
aam
in
out
std
inc
fisubs
mov
rcrl
and
dec
jmp
and
cmp
jge
mov
inc
int3
xchg
std
and
xor
fmulp
mov
cmp
push
xor
mov
lcall
mov
add
dec
mov
inc
sub
xor
movsl
sti
xchg
out
jle
mov
ja
lret
add
and
fldl
cld
mov
out
add
mov
mov
lcall
push
push
jno
hlt
repz
rcr
int3
xor
xor
hlt
lock
dec
pop
inc
cmpsl
and
or
mov
sarl
and
pop
inc
cmp
mov
rep
jo
and
mov
and
sbb
mov
push
xor
shl
popa
jg
push
rorl
out
pop
data16
mov
xlat
test
ljmp
fidivl
sub
fistpll
lea
loopne
test
inc
xor
mov
das
add
mov
add
imul
cmpsl
movsb
pop
fs
pop
lcall
cmp
mov
xchg
lods
and
cld
mov
imul
push
xor
and
jl
pop
mov
insb
sbb
inc
aaa
push
ret
pop
jns
mov
push
mov
test
mov
aad
dec
in
repnz
and
daa
movsb
and
sti
bound
jl
jecxz
cld
fstps
nop
or
push
and
or
loop
fisttpl
loopnew
and
imul
xor
mov
pop
sbb
xchg
jno
sub
pop
sbb
xor
and
pop
mov
int3
movsb
add
pop
and
xorb
push
pop
ja
xor
and
rcrl
decb
gs
lret
and
pop
or
and
jno
push
repnz
in
xor
mov
add
mov
and
ja
popf
add
cltd
outsl
push
cmpsb
shlb
cmp
push
add
inc
negl
popa
test
and
mov
shlb
push
mov
add
pop
jo
shrb
push
and
push
and
and
pop
xor
mov
and
stos
les
inc
adc
and
popa
fcoml
lods
movsb
aas
adc
mov
and
je
fisubrl
pop
mov
outsl
lret
out
and
sbb
insl
out
mov
push
pushf
xor
iret
and
mov
popf
imul
add
leave
and
rol
das
movsl
and
in
movsb
faddl
adc
jae
lret
loopne
or
movsl
cwtl
push
pop
dec
popa
rorb
movsb
aad
out
je
int3
pop
clc
and
mov
push
dec
mov
jl
test
and
icebp
jno
outsb
pop
cmp
cmp
xor
jo
orb
sub
mov
sbb
pop
mov
inc
addl
jae
enter
movsb
sti
mov
cli
out
call
divl
das
in
lcall
rorl
xchg
fmuls
enter
insb
shlb
movnti
mov
mov
popf
je
and
daa
jp
or
iret
and
push
out
das
shll
xchg
mul
and
lock
movsb
std
xor
repnz
daa
adc
xchg
fs
cmp
shlb
dec
and
xor
into
and
mov
in
mov
lods
cltd
and
cs
addb
and
inc
hlt
sahf
fs
and
shl
out
aad
adc
xor
xor
sbb
lahf
stos
mov
sub
rclb
inc
lret
adc
cmp
mov
sub
adc
inc
in
and
or
xchg
mov
bound
mov
rorl
pop
rcrl
adc
pushl
sbb
pop
outsl
inc
dec
shll
mov
mov
outsl
and
aaa
push
fidivs
sbb
test
xchg
leave
cmp
pop
and
pushl
scas
sahf
outsb
movsb
sub
and
les
xchg
push
fbld
xor
iret
and
inc
addr16
xorl
sbb
mov
pop
and
lds
and
loop
faddl
adc
shlb
and
orl
movsb
popf
es
pop
lods
cmp
cld
mov
jne
lret
jae
cmp
add
xor
insl
and
ficompl
lea
xchg
mov
icebp
inc
cmpl
imul
rorb
jnp
je
rolb
sub
fbld
and
push
and
sub
pushf
pop
mov
jge
rclb
push
mov
out
jns
mov
fnstsw
sbb
les
push
arpl
sub
or
inc
mov
gs
sub
or
jmp
inc
push
mov
dec
jge
mov
mov
inc
mov
pop
icebp
and
push
mov
fsubl
xor
pop
lds
ja
dec
js
sbb
xchg
dec
jl
popf
push
cmpsl
dec
ficomps
hlt
movsb
add
and
push
aas
clc
sti
ds
and
sbbl
leave
je
sarb
sub
xor
xor
popa
mov
icebp
lods
and
or
mov
sbb
out
xor
mov
int
and
cmpsl
in
sbb
xorl
mov
xor
sbbl
jb
xorb
ret
jge
push
xchg
cltd
int3
cmp
movsb
dec
rclb
enter
and
lcall
and
xchg
rorb
or
icebp
popf
das
inc
mov
dec
pop
and
pop
pop
cmp
fsubl
xchg
out
popa
mov
push
mov
ret
cmp
outsl
mov
in
xchg
aas
icebp
push
loope
test
in
outsl
push
fsubl
add
imul
lods
aaa
mov
les
pop
and
push
cmp
mov
pop
popa
dec
aam
dec
lea
or
lods
fistl
xchg
and
and
sub
nop
in
cwtl
cmp
popa
stos
sbb
and
pusha
insb
jnp
mov
gs
pop
xor
mov
shll
ss
and
dec
insb
cpuid
adc
add
mov
popa
aas
push
pop
inc
push
enter
pop
imul
call
bnd
add
das
pusha
and
cmp
mov
loop
inc
gs
rorb
xor
and
cmp
repz
lahf
ljmp
cmpsb
sbb
data16
adc
jg
sub
push
jno
les
pusha
adc
inc
and
popa
frstor
xchg
mov
lock
out
iret
mov
and
push
and
fcompl
and
inc
sbb
and
loopne
sub
lahf
and
push
sub
inc
cltd
aam
imul
push
movsb
or
fwait
in
cltd
pop
int
and
push
pushf
xchg
push
dec
fistpll
jne
pop
push
push
jae
and
or
ljmp
xchg
cmpsb
xchg
out
sbb
pop
jno
jge
and
sub
fcmovb
and
cli
or
lahf
rclb
and
jecxz
or
push
arpl
and
aad
lods
and
and
gs
jg
test
xor
ds
pop
cltd
and
test
lcall
xchg
iret
cmp
gs
add
iret
sub
popf
aas
xchg
loope
sbb
and
sub
or
add
test
mov
mov
and
jle
cmpsb
popa
or
xor
xchg
or
add
mov
cltd
jge
jb
imul
sub
sub
arpl
mov
and
jge
mov
ljmp
loopne
aaa
cmp
sub
andl
push
inc
test
push
xchg
enter
push
popa
bound
std
mov
out
adc
scas
mov
mov
inc
leave
and
mov
inc
mov
shlb
xor
dec
push
stc
rorb
aas
and
sbb
adc
inc
and
sbb
and
into
insl
and
adc
shrl
mov
pop
adc
jae
push
and
and
push
dec
mov
or
jo
repz
inc
push
clc
jecxz
out
sub
sbb
adc
ret
test
push
popa
and
lret
and
or
cwtl
jne
fwait
sub
popf
lds
or
mov
cwtl
loopne
push
iret
and
cmc
xor
dec
lcall
cld
test
mov
mov
sarl
mov
push
and
gs
mov
jno
fwait
sbb
xor
loop
popf
xchg
xchg
aam
xchg
adc
jae
std
scas
and
xorb
inc
outsb
mov
lahf
mov
inc
test
pop
adc
xchg
imul
adc
xor
and
mov
cs
push
movsl
pop
inc
push
fnstsw
mov
and
loop
cmp
xlat
mov
dec
aas
cmp
lcall
jg
ss
in
mov
and
andb
push
mov
cmp
lret
and
push
insl
loope
inc
and
mov
push
cld
sub
or
sbb
jns
mov
popw
jns
test
and
dec
js
aaa
xchg
loopne
xchg
inc
icebp
subl
or
mov
ficompl
inc
and
mov
arpl
pop
and
pop
setno
cmp
and
xor
pop
lahf
add
mov
sbb
push
xor
mov
movsl
iret
cwtl
sub
mov
push
test
cmc
dec
div
fwait
rolb
shrl
mov
movsb
ja
js
lret
sbb
and
mov
sahf
pop
xchg
call
pop
inc
test
push
int3
jb
mov
mov
xor
nop
push
and
es
xor
dec
daa
and
aaa
xor
dec
cli
scas
rcr
mov
sbb
ds
test
pop
jne
hlt
xchg
mov
fstps
and
je
sbb
cs
xchg
rolb
lock
xor
and
xchg
leave
push
mov
mov
inc
fwait
ret
sbb
and
shl
add
push
cmpb
stc
mov
lea
pop
stos
mov
and
jmp
and
push
xchg
fisttpll
add
fdivl
fbld
popa
das
std
xchg
add
les
and
mov
sbb
pop
cmp
jno
xor
and
dec
mov
in
scas
shlb
ljmp
and
cmpsb
mov
add
and
mov
rorb
sub
insb
cmp
clc
shlb
xchg
jbe
hlt
enter
mov
mov
sub
pop
add
mov
dec
fsubs
shrb
or
mov
in
mov
lods
mov
mov
mov
loopne
movsl
fsts
sub
adc
and
iret
inc
push
xor
decl
pop
movsl
js
xchg
pop
push
and
popa
xchg
das
sub
jp
cmp
xor
dec
loope
and
bound
xchg
sbb
xchg
cmp
sbbb
sarl
push
daa
push
cltd
pop
mov
adc
adc
add
dec
jl
push
push
sub
sahf
cltd
cld
push
mov
and
dec
jge
jne
mov
and
outsb
scas
test
mov
insl
call
cmp
xchg
addl
scas
pop
ss
out
outsb
aas
popa
aam
sub
out
inc
and
pop
ret
xor
icebp
mov
mov
rorl
mov
lret
jg
pusha
and
stos
and
mov
fdivrs
and
shrb
mov
rcrb
add
mul
mov
sbb
gs
mov
push
mov
fnstsw
lret
mov
adc
mov
and
inc
fs
xor
sbb
mov
cltd
xor
mov
in
pop
fcoms
filds
add
and
lcall
pop
jne
pusha
adc
loop
push
xor
push
sahf
push
and
rclb
sbb
fisttpl
cmp
dec
fisttpl
sbb
and
stos
cmp
mov
xchg
adcl
loop
cmpl
or
and
in
in
add
sub
adc
sub
and
das
pop
push
push
xchg
shl
rcll
test
jae
call
adc
xor
mov
clc
dec
inc
add
add
sub
mov
test
and
and
int3
push
jbe
jns
fisubl
pop
ret
lods
mov
xchg
aam
js
sbb
mov
xor
xchg
lcall
mov
nop
pop
cltd
inc
jb
xor
js
lcall
lods
adc
and
push
and
xchg
cmp
fdivs
and
and
inc
into
sub
or
and
rolb
and
xchg
jecxz
mov
adc
nop
mov
ljmp
fistpll
out
cmc
aad
and
adc
movsb
sub
pop
mov
sbb
ret
and
daa
lahf
out
fdivrs
loope
fwait
sub
mov
and
sub
das
in
in
and
jo
out
push
addr16
xlat
movsb
sbb
pop
dec
fdivrl
popf
pop
xorl
dec
clc
adc
fcomp
ja
or
fdivr
mov
addb
mov
xchg
not
mov
add
cmpsb
and
push
xchg
push
sahf
xchg
inc
pop
out
jo
jno
pop
iret
jb
mov
in
outsb
dec
popa
dec
pushf
movsb
cmp
stc
and
mov
movsb
scas
add
xchg
int
insl
jge
or
add
push
mov
adc
push
pop
scas
das
xchg
loop
stos
js
dec
jb
movsl
sub
push
aaa
mov
stos
and
mov
cli
loop
xor
in
jmp
stc
insb
jecxz
inc
push
rorb
addr16
int
mov
push
shll
push
fistpl
aaa
in
add
add
mov
popf
push
cmp
dec
adc
data16
mov
aad
loop
push
popf
mov
stos
dec
add
jns
cwtl
mov
mov
out
std
and
repz
movsl
jae
lret
loopne
xchg
cmp
add
mov
and
mov
pop
andb
das
jne
jnp
cmp
inc
iret
xor
sti
fldenv
daa
push
jge
jg
and
sbb
jp
stos
mov
mov
and
xchg
pop
mov
pop
pop
push
and
adc
loope
outsl
ret
xchg
dec
rolb
sbb
insb
adcb
les
ret
and
rcr
jo
fidivl
iret
push
mov
jp
cmp
icebp
adc
push
jae
into
outsl
mov
ds
xor
out
and
sub
shrl
cmpsl
cli
or
mov
inc
mov
fsubr
lea
and
xchg
outsb
sti
movsb
mov
cli
or
cmp
movsb
or
jp
add
jecxz
movsb
inc
jge
fidivrs
jnp
xchg
mov
and
sbb
lods
sbb
inc
popa
adc
in
jecxz
pop
pop
stos
call
inc
and
jmp
fsubrs
push
xchg
xor
sub
adc
rol
jnp
test
das
mov
andb
cmpsb
jno
push
dec
adc
rcrb
sbb
add
pusha
mov
and
lock
out
and
aad
lahf
add
xor
and
and
call
rcrl
aaa
xchg
and
fistps
andl
ljmp
fldl
and
push
movd
cld
and
loop
orl
push
sub
mov
add
aas
mov
inc
cwtl
push
mov
fldenv
cmp
bound
inc
daa
popa
and
das
imul
pop
call
scas
mov
jle
fwait
xor
and
cltd
cmc
sub
out
xchg
rol
cmpsb
std
mov
inc
inc
movsb
push
and
movsl
in
mov
mov
or
and
aas
and
sbb
lcall
jmp
mov
mov
adc
and
jbe
rolb
jnp
stos
cmpsb
and
leave
sbb
dec
dec
or
mov
dec
push
adc
repnz
lock
outsl
add
movsb
clc
add
pop
sbb
popf
inc
cmpsb
lods
mov
xor
push
and
cmp
sub
mov
xor
fldl
loop
mov
lret
shll
lea
pop
mov
sub
inc
fwait
adc
sub
push
fbstp
and
cld
mov
mov
fcoms
loope
mov
jmp
f2xm1
and
int
or
pop
popf
and
imul
sub
hlt
jb
cmp
jge
in
mov
cs
jae
bound
jmp
pop
xchg
pushf
movsl
lods
loope
cmpsl
shrb
and
dec
cmpb
mov
lcall
or
bound
adc
test
js
arpl
push
in
ds
adc
mov
jnp
adc
fbld
dec
aaa
frstor
xchg
dec
xchg
mov
mov
popf
jnp
out
repnz
popf
rclb
jecxz
push
aaa
or
adc
push
fwait
shl
pop
lcall
mov
inc
repnz
insb
jns
sub
cwtl
inc
push
movsb
aam
and
sbb
mov
sub
xor
adc
fnstcw
jns
and
mull
pop
fisubl
xchg
fdivr
sbb
and
cmp
mov
dec
jb
stos
or
and
adcl
mov
test
test
addr16
mov
mov
dec
clc
imul
sub
add
mov
xchg
jl
xchg
ret
add
es
add
jae
mov
cmp
and
cltd
inc
mov
scas
stos
dec
push
mov
mov
ljmp
popa
sub
mov
daa
flds
sbb
dec
add
inc
insb
mov
cmpsb
jae
fisubrl
dec
ret
loopne
and
or
fmuls
dec
jne
and
cli
les
and
and
push
xchg
and
or
pop
and
push
pop
sbb
popa
and
cltd
fstpl
add
pop
fisubs
jnp
jle
loop
xor
mov
and
jae
and
jp
inc
mov
aas
xchg
pop
sub
cmp
xchg
test
and
sbb
stc
mov
movsb
mov
jns
movsb
ja
push
mov
repnz
scas
and
push
rcll
fstpt
mov
inc
dec
or
jl
out
gs
stos
and
mov
jnp
cmpl
mov
push
popa
shll
jg
movsb
lods
loope
mov
cltd
std
or
hlt
ja
mov
jge
and
pop
mov
and
je
stos
mov
add
sahf
movsb
and
jmp
adc
mov
push
fiadds
mov
and
push
cli
or
cmp
xchg
in
and
lahf
xchg
icebp
rolb
stos
push
pop
pushf
and
adc
xchg
test
dec
sbb
pop
mov
jecxz
and
sahf
stc
pop
or
movsb
lcall
jnp
sub
decb
call
and
mov
xchg
in
ja
adc
push
add
jge
add
movsb
ficomps
idivb
in
lret
sub
shlb
scas
gs
test
xor
or
test
and
add
inc
and
push
iret
and
sbb
in
mov
fimull
mov
outsl
and
movsb
xor
sbbl
sbb
jno
je
cld
xchg
mov
pop
add
ljmp
and
xchg
cld
cmpsl
sub
add
or
sbbl
cmc
lods
and
push
scas
cs
int
sub
insl
jo
pop
and
rorb
fs
aam
pop
cmc
and
pop
adc
and
sbb
adc
xchg
sahf
pop
xor
or
jno
fsubs
mov
add
cmp
mov
hlt
pop
stc
mov
push
xor
cmpsl
pop
dec
movsl
inc
sti
out
jecxz
push
and
out
push
daa
and
scas
das
je
pop
jne
jno
outsl
sub
push
sahf
and
scas
or
sub
xchg
addr16
mov
and
out
repnz
sub
jnp
in
rclb
push
adc
mov
test
cmpb
and
push
in
jecxz
xchg
fistps
je
mov
pushf
sti
and
adc
mov
pop
sub
out
jns
insl
xchg
mov
add
shlb
xor
pushf
push
sub
mov
cmpl
dec
sti
push
negb
out
and
fbld
adc
and
mov
or
mov
and
insl
repnz
and
dec
cmp
scas
pop
inc
xorl
xchg
cmp
pop
and
pop
fisttpll
and
movsb
push
fstp
decb
idivl
sti
and
lods
jns
and
cmp
out
xorb
je
lahf
mov
mov
sbb
sarl
jg
mov
cmpsb
test
and
inc
in
adc
ret
out
movsb
xchg
and
pop
and
xchg
push
add
mov
xor
mov
cmp
popa
fcomps
popa
cmp
shl
sti
add
and
dec
filds
add
sub
subb
push
adc
scas
sub
and
jmp
push
les
jbe
adcb
je
test
push
add
data16
pop
push
mov
xchg
popa
add
and
jo
dec
jno
je
and
mov
stos
and
and
aad
bnd
dec
daa
cmpl
insl
fwait
pop
or
shrl
daa
xlat
iret
add
and
mov
mov
ret
dec
cmc
and
or
and
xchg
sub
std
add
jg
ret
outsb
and
add
pop
jnp
cmp
divl
roll
pop
xor
orl
sub
clc
jecxz
data16
and
movsl
repnz
or
xor
scas
xor
mov
and
dec
xchg
pop
cmp
fisubrl
jne
xor
outsb
and
es
cmp
push
adc
loope
xor
and
jbe
push
mov
movsb
inc
mov
mov
add
outsl
mov
enter
and
shlb
arpl
adcb
ret
fstl
mov
and
sbb
and
sbb
and
mov
dec
cltd
and
pop
add
mov
test
fldenv
xchg
cmpl
lea
mov
pop
cli
jo
inc
and
jl
es
movsl
mov
shll
jg
push
addl
inc
mov
jne
fwait
movsl
and
aaa
mov
inc
and
mov
roll
cmp
sqrtps
lods
and
sarl
or
and
and
imul
orl
fstpl
and
scas
sub
xchg
lcall
cmp
ljmp
fs
push
and
in
clc
adc
jbe
mov
dec
or
adc
push
jae
mov
popa
push
or
mov
and
pushf
stos
sbb
mov
or
mov
clc
cmc
mov
mov
mov
stc
bound
andl
inc
lcall
movsb
dec
push
push
mov
mov
cmp
xchg
push
and
dec
aaa
out
fistl
mov
in
pop
popa
pop
jbe
xor
shrl
ja
mov
cli
and
rcrl
js
add
imul
and
and
push
push
pop
imul
push
inc
mov
in
hlt
push
scas
mov
sbb
testb
adc
and
mov
lret
pop
dec
and
mov
or
push
aaa
ljmp
ret
dec
mov
push
leave
icebp
imul
jbe
aas
sbb
mov
dec
xorl
xor
inc
ficomps
cltd
mov
adc
testb
test
mov
xor
ss
hlt
movsb
mov
lods
shll
shll
mov
out
outsl
jg
cltd
ds
lret
leave
sbb
mov
sarb
sbbl
and
cltd
shlb
push
sbb
movsl
mov
mov
lret
scas
std
test
outsb
scas
xor
inc
popl
sahf
popa
notl
test
push
cmp
and
shrl
mov
aaa
fidivs
jmp
and
xchg
das
cltd
scas
mov
fwait
and
push
dec
test
and
sub
xchg
insb
mov
pop
xchg
lret
lahf
sbb
add
js
mov
and
mov
and
push
mov
sar
popf
fs
fdivr
xchg
call
sbb
nop
cmc
pop
and
outsl
clc
cmp
frstor
cmpsb
ja
and
pop
cmp
call
pop
and
xor
js,pn
xchg
sbb
or
or
rcl
popa
out
shl
pop
in
mov
sub
popa
popf
out
aas
cmpsl
xchg
shl
inc
fdivs
loopne
and
mov
and
inc
dec
and
push
shlb
and
popf
in
adc
cli
scas
and
outsb
andb
testb
and
pop
xor
adc
popl
ret
es
ljmp
sbb
jb
dec
mov
popa
outsb
cmp
jge
xchg
lods
and
lret
into
fcoms
imulb
dec
pop
test
test
lcall
xchg
repz
fs
mov
mov
jp
add
xor
bound
and
ss
movsb
push
mov
jno
pop
pop
xchg
data16
jge
and
repnz
and
mov
insb
mov
out
jle
xchg
xchg
lahf
add
push
pop
outsb
push
mov
pusha
mov
ret
rclb
jge
fisubrl
test
mov
movsb
sarl
cmp
and
daa
pcmpeqb
inc
repz
mov
mov
mov
inc
xchg
sub
cmp
and
sbb
aaa
cmp
adc
lds
inc
js
ss
nop
xchg
lods
pop
mulb
idivl
and
pusha
arpl
and
push
inc
dec
dec
inc
sahf
bound
xchg
shlb
movsl
leave
insb
or
mov
lods
jecxz
and
out
xor
and
jno
inc
outsl
fcoml
jne
mov
and
out
notl
adc
lea
aad
arpl
and
insb
popa
icebp
pop
cmc
fldcw
add
add
mov
in
outsl
mov
aas
adc
mov
mov
clc
jae
xor
jne
dec
jb
pop
in
mov
roll
cmpsl
repz
bound
sub
popa
xlat
xchg
mov
jmp
xchg
iret
shll
das
adc
clc
dec
test
jb
inc
addb
and
push
jnp
or
pop
imul
into
mov
and
and
mov
int
and
pop
rcll
lods
and
inc
pusha
shl
sarl
jns
cwtl
xor
les
dec
xchg
jg
setp
cmpsb
data16
jne
dec
imul
call
mov
jge
sub
orb
mov
xor
cltd
cmp
jb
xor
add
mov
mov
add
sbb
xorl
push
ss
or
lea
and
popf
in
mov
ja
lcall
pop
and
lea
loopne
inc
aam
and
icebp
or
pop
cmp
rorb
cmp
aaa
mov
mov
mov
cmp
or
cmp
lds
test
add
xchg
fimull
sbb
andl
push
jns
les
inc
arpl
aam
into
pop
repz
outsb
or
cmp
ljmp
dec
mov
sbb
test
xorl
push
sahf
leave
jg
and
jmp
pop
cli
aad
cmp
inc
loope
std
lds
mov
sub
out
stc
jae
ficomps
mov
mov
imul
dec
and
je
add
cmpsl
call
cmpsl
xchg
iret
jo
cmp
jge
and
fcmovu
shlb
xchg
outsb
jmp
lea
dec
push
inc
xor
shl
cmpsb
and
icebp
mov
push
int
data16
and
arpl
imul
in
rol
adc
mov
int
aas
xlat
adc
xchg
xor
les
add
aad
jp
push
sahf
scas
pop
es
mov
or
notl
and
push
mov
mov
hlt
mov
scas
xchg
mov
jg
orl
sbb
inc
dec
xchg
sub
lret
and
inc
mov
loopne
lds
mov
jno
movl
xor
and
lahf
data16
aaa
add
jge
test
or
xchg
fcomi
loop
test
push
fsubrl
mov
es
sub
xor
push
rcl
scas
lea
test
push
aaa
int
leave
test
je
scas
and
addr16
and
std
aad
sahf
popa
icebp
fdivrl
and
add
sub
jg
and
and
and
rorl
mov
pop
movsb
lcall
or
pop
jns
iret
jp
mov
outsl
cli
sub
inc
sbb
lds
les
mov
ja
clc
inc
push
pop
mov
orl
cmp
pop
push
sahf
mov
xor
jno
mov
xchg
loop
and
shrl
cltd
adc
pop
sbb
inc
jne
outsb
and
and
pop
mov
ljmp
jae
dec
inc
mov
xor
xor
addr16
out
mov
ss
adc
pop
mov
test
repz
ljmp
fwait
mov
scas
shrb
add
xchg
mov
and
sbb
mov
mov
mov
movsl
add
xchg
cmp
push
inc
sbb
test
mov
leave
test
adc
mov
add
cltd
xor
jle
jmp
sbb
pop
cmpsb
or
addr16
fsubl
pop
rcll
jne
pop
jns
mov
mov
mov
xchg
dec
out
mov
adc
addr16
adc
push
mov
mov
xor
xchg
pushf
push
mov
mov
cmp
push
sbbb
push
cltd
and
dec
sub
iret
cmc
sbb
inc
dec
pop
dec
mov
ret
pop
popa
imul
jle
push
dec
mov
add
xor
testb
cmp
and
je
shll
adcb
xchg
and
iret
movsb
lods
ja
push
arpl
andb
xchg
scas
and
outsl
idivl
adc
mov
push
jae
mov
add
js
pop
and
nop
add
ljmp
loop
jne
popa
ret
adc
xchg
or
imul
dec
call
addr16
or
sub
andb
jle
je
adc
xlat
cld
aaa
leave
andb
cmp
movsl
aas
ret
stos
push
and
fistpl
push
imul
fiadds
or
add
or
and
das
sub
or
rcrl
inc
cmp
outsb
shll
add
enter
mov
and
push
insb
into
scas
ja
mov
add
xchg
ret
shrb
das
jg
add
popa
pop
mov
adc
int
sbb
popa
mov
mov
arpl
loop
das
repz
and
add
jmp
inc
sbb
ljmp
xchg
mov
dec
popa
loop
xchg
dec
movsb
gs
icebp
lock
jb
scas
push
in
lea
sub
push
cltd
stc
and
sbb
inc
push
and
xlat
sbb
ja
pushf
and
in
or
roll
and
inc
enter
mov
pop
fstl
jl
xor
iret
push
mov
loop
popf
dec
repnz
fld
and
aaa
cli
fwait
add
lods
popf
inc
pushf
pop
scas
and
inc
lds
sahf
jno
or
jmp
dec
in
xor
test
sub
mov
fisubs
pusha
popa
lea
repnz
jno
ss
and
or
mov
mov
stos
xchg
sbb
mov
mov
filds
fwait
and
jb
mov
fildl
xor
adc
popa
and
mov
into
js
push
and
aaa
loopne
shll
push
inc
and
popa
aad
pop
add
jns
xlat
lret
jns,pt
imul
dec
adc
leave
mulb
xchg
add
cmpsb
cmp
outsl
test
sub
lcall
mov
mov
mov
mov
and
mov
push
call
sbb
movsl
dec
xchg
jge
movsb
ret
movsl
sbb
sbb
jbe
cmp
xchg
adc
sbb
loope
push
xor
leave
sub
bound
cld
push
pop
fsubs
and
cmc
or
and
imul
aaa
movsl
aam
rcrl
mov
mov
push
repnz
mov
jl
dec
cli
xor
mov
mov
aad
stos
mov
insl
and
cmp
pop
call
or
out
cmpsb
adc
rorb
sub
and
lods
mov
aam
sbb
jmp
cmp
leave
jns
daa
mov
aas
mov
jbe
pop
mov
mov
xchg
cmp
lea
sub
shld
pop
xor
or
pop
or
mov
sub
mov
leave
test
cmpsl
mov
fists
jno
int
das
fsubl
inc
add
mov
test
stos
movb
es
or
and
jns
xlat
mov
data16
lcall
push
ja
mov
or
jo
sarl
and
lods
sbb
fldenv
ljmp
repz
cmp
and
cmp
out
rorb
lret
fwait
test
mov
std
jae
mov
fnstenv
mov
sbb
sbb
cli
movsb
jecxz
dec
mov
and
xchg
rcrl
add
pop
inc
sbb
cmpl
mov
lock
out
loopne
and
add
mov
mov
and
push
fimuls
aam
cmp
lods
xor
sbb
popa
xor
xchg
fwait
imul
negb
dec
fidivs
sbb
and
add
xor
xor
and
cwtl
shrb
jecxz
push
adc
cmpsb
outsl
shlb
dec
or
and
xor
jl
data16
addl
pusha
dec
jns
shll
mov
in
fwait
out
ljmp
outsl
cmpsl
es
and
cmp
push
xchg
jae
mov
add
aam
sub
inc
fistl
mov
jns
and
inc
xchg
xlat
iret
popa
jne
and
outsb
pop
mov
outsl
daa
scas
cmp
sti
and
mov
mov
and
add
pushf
andl
add
and
lods
cld
cltd
out
ret
mulb
and
push
and
inc
jns
loop
repz
and
test
mov
je
test
hlt
aas
jae
xor
lock
mov
pop
and
mov
pop
andl
xchg
test
clc
int3
push
lods
and
sbb
aad
dec
incb
int
test
and
and
pop
add
shlb
repz
insl
ret
repnz
dec
and
fistpll
xchg
push
and
fsubrl
jne
insl
or
bound
andl
sahf
insl
scas
dec
out
mov
lock
add
sub
fs
aad
aaa
xchg
hlt
aam
add
xchg
mov
lahf
pop
ficomps
lea
sbb
pop
gs
insl
and
and
loope
fldcw
cmp
lods
aas
int3
out
mov
rcrb
fbld
ds
pop
divl
je
movsl
cltd
andl
pop
sbb
jl
cltd
push
and
jmp
pop
or
popa
addr16
fmuls
int
pop
rorl
iret
leave
adc
sub
insb
xchg
sbb
push
js
pop
iret
xchg
and
imul
mov
paddusw
mov
addl
imul
cli
ret
or
mov
push
dec
jle
and
ja
bt
cmpl
mov
adc
or
pusha
add
scas
aaa
lock
jnp
xor
stos
out
insl
int3
and
mov
push
sbb
add
movsb
sbb
pop
dec
xor
jg
in
cli
clc
sahf
jno
mov
repnz
into
cmc
lahf
and
add
pusha
stos
fnstsw
inc
aad
je
or
mov
xchg
clc
pushf
negb
and
aaa
push
jge
xor
jbe
hlt
mov
and
lret
test
add
xchg
iret
movsb
ret
test
dec
mov
xor
cmp
mov
in
or
cmp
test
jns
movsl
enter
popa
mov
mov
and
mov
inc
rcrb
ficoml
mov
or
inc
sar
fisubs
cltd
pop
push
push
cwtl
gs
mov
lea
push
out
dec
xchg
shll
push
sub
pop
cmp
outsl
xchg
scas
lahf
fists
mov
dec
icebp
ja
adc
mov
add
push
cmpsb
adc
mov
inc
mov
repz
jge
lahf
mov
mov
aam
cmp
jle
cmp
mov
lock
dec
jecxz
pop
mov
pop
lock
push
jmp
inc
mov
adc
push
loopne
and
cltd
fmuls
std
add
into
push
lsl
add
lahf
cmc
dec
popa
popa
xlat
icebp
adc
mov
and
in
daa
jae
cmpsb
push
outsb
sub
xchg
movsl
jo
repz
jle
sub
call
data16
dec
add
mov
jp
jns
fs
and
pop
aas
add
add
and
test
stos
cltd
push
out
movsl
pop
or
ss
lea
xchg
sbb
and
xchg
pusha
sub
ret
mov
jae
mov
fsubs
out
sbb
push
push
hlt
adc
repnz
outsl
aas
adc
subl
mov
add
lock
fs
xchg
stos
dec
sti
popa
outsl
pop
std
ja
push
sbbl
aas
cmp
sub
int3
or
imul
xchg
xor
dec
add
pop
sbb
dec
jae
cld
lahf
adc
xchg
and
push
mov
sub
xchg
xor
popf
push
icebp
cli
mov
jne
popa
jns
adc
ror
inc
sub
jne,pn
and
in
add
mov
dec
push
shlb
and
fwait
xor
and
test
mov
mov
and
dec
out
scas
nop
in
inc
cmpsl
and
xchg
cmp
insl
and
xchg
push
inc
push
xchg
ja
stos
je
pop
sbb
sbb
imul
out
xor
and
and
stos
mov
dec
mov
pushl
dec
adc
sub
adc
int
into
lahf
int3
and
fcmovnu
push
mov
jg
or
int
sbb
xchg
jmp
pop
push
and
dec
cmp
push
xchg
sub
je
popa
jle
mov
jmp
int
jbe
mov
mov
add
and
test
mov
cld
pop
xchg
and
into
cmp
pop
xor
filds
mov
cmc
xor
push
aas
mov
out
lea
cwtl
and
pop
xchg
pop
mov
les
xor
cmp
and
jl
cmp
sub
and
leave
std
xor
stos
mov
sub
mov
and
cli
or
push
outsb
and
fwait
lea
cmp
cmc
mov
lea
jae
fdivrs
xchg
ss
xor
out
and
xchg
bound
adc
movsb
pushf
mov
dec
fs
cmc
negl
and
adcl
fidivrs
pushf
dec
mov
rcrb
in
pop
cld
and
and
pop
fcomip
imul
dec
shlb
fdivl
ret
popa
push
popf
lret
mov
lock
cmp
stos
cmp
adc
mov
iret
and
sbb
xorl
adc
outsl
xchg
push
mov
movsl
mov
and
sahf
sub
and
pop
sub
mov
fs
add
movsb
sbb
add
and
stos
fbstp
call
push
xchg
lds
inc
fisubl
pop
dec
mov
mov
push
out
and
sub
pop
idivb
sar
pop
cmp
adc
jg
and
jmp
jecxz
mov
cmp
and
xchg
stos
xchg
jo
std
and
add
mov
push
cmpsb
aad
inc
popa
xor
pop
cmp
fcmovu
mov
jo
mov
mov
test
jno
std
xor
adc
sub
xor
mov
inc
sub
xchg
test
and
mov
cmp
scas
orl
and
loope
mov
xchg
and
adc
jae
imul
shrl
cmc
adc
mov
fcoms
cmp
or
and
les
shll
ffree
or
ss
mov
or
and
ret
dec
sub
das
xchg
jbe
inc
sub
mov
and
leave
ret
xor
andb
and
pop
and
pop
ficoml
leave
mov
stos
fwait
dec
pusha
cld
lcall
sub
mov
ret
fdivrs
lock
fbld
and
mov
and
push
repz
and
mov
adc
and
mov
cli
jns
cmp
mov
sub
pop
lahf
xor
cld
push
and
or
addl
or
and
movsb
ficomps
lods
push
mov
popa
push
aaa
mov
imul
fisttps
inc
xchg
adc
lcall
movsb
sbb
loop
and
and
pushf
sbb
popf
andb
pop
push
add
arpl
cmp
popa
cmp
push
sbb
and
push
jecxz
sbbl
xchg
jb
movsb
and
jg
and
dec
mov
addb
mov
out
and
or
xor
fdivl
and
pop
xchg
inc
outsl
aaa
popl
mul
pusha
push
fcomps
enter
les
in
jle
adc
ret
mov
arpl
push
cmpl
fsubl
push
mov
lea
or
sahf
js
sub
inc
faddl
push
mov
repz
xor
lods
push
pmaxub
es
in
and
mov
daa
std
xor
ds
es
cltd
mov
sbb
aas
ja
or
and
lea
cs
bound
and
cmc
divb
sub
popa
lret
jno
and
and
inc
shll
aaa
mov
les
pop
test
pop
xchg
outsl
lods
or
mov
stos
test
inc
jbe
sub
js
loop
je
and
ret
and
dec
mov
push
add
fbstp
jecxz
repnz
lret
mov
xchg
out
dec
clc
and
leave
pop
pop
xor
das
and
add
ds
jmp
mov
xor
dec
or
and
xor
push
jg
jns
imul
and
ret
pushf
dec
pop
sub
cmp
movsb
shrl
fistpll
dec
and
adc
or
mov
dec
pop
and
ficoml
xlat
in
mov
es
scas
pop
lahf
sub
mov
fsubs
or
pop
push
aas
adc
popa
pop
xchg
dec
dec
inc
xchg
inc
popa
push
sahf
pusha
sub
jno
nop
xorl
mov
js
add
jp,pt
loope
mov
sub
fistps
fs
loopne
and
mov
fstpl
adcb
pop
rorl
inc
mov
enter
pop
xor
mov
shr
and
mov
jle
inc
add
mov
test
pop
loope
cmp
lret
mulb
mov
loopne
jnp
jge
push
sarl
js
in
stos
stc
movsb
das
ja
and
out
mov
and
xchg
xchg
jmp
inc
pop
ss
and
scas
icebp
pcmpgtw
lcall
pop
lret
push
and
loopne
mov
lods
and
pop
ljmp
xor
out
push
out
and
aam
mov
and
push
pop
loope
test
inc
cmp
and
sbb
or
and
loop
mov
out
sti
or
push
mov
and
cmp
lds
jo
push
and
shrb
jg
fdivrs
mov
clc
dec
andl
or
leave
test
dec
enter
cmp
cltd
and
iret
cmp
lods
jp
push
js
mov
insb
shlb
mov
jne
mov
and
xor
hlt
enter
xorb
or
loope
sub
cmp
mov
sub
out
and
es
aad
add
repnz
filds
and
mov
cld
jnp
jbe
and
sbb
sahf
cmpsb
and
adc
push
dec
loop
or
ljmp
into
mov
test
add
sarl
popa
push
add
lahf
fisubs
sbb
mov
aad
cmpsl
lods
xor
cmp
and
jbe
or
dec
push
xlat
and
push
pushf
xor
dec
stos
popf
pop
stos
testl
outsb
pop
inc
xor
and
mov
sub
rol
xor
xchg
and
setp
stc
mov
sbb
pop
xchg
and
ja
push
mov
jne
fwait
pop
movsb
mov
into
pop
inc
leave
iret
xor
and
popf
out
clc
out
int3
pop
cwtl
inc
and
outsb
xor
enter
cmp
jb
ss
test
dec
jno
jbe
insl
scas
mov
sub
pushf
push
outsb
ljmp
and
mov
and
add
mov
and
sub
xchg
mov
jnp
mov
mov
aam
aas
sbb
jecxz
cmp
mov
push
dec
jae
push
and
out
cld
add
ror
hlt
and
pop
sbb
mov
lahf
jp
jmp
mov
out
jns
pop
subl
and
xchg
ja
and
ret
sahf
pop
dec
lret
and
fadd
pop
mov
rcr
and
jge
dec
push
push
jo
mov
les
pusha
clc
xchg
sbb
mov
mov
mov
outsl
cltd
inc
and
xor
bound
and
mov
xchg
test
shlb
icebp
inc
and
aaa
test
out
inc
or
pop
imul
movsl
mov
sub
in
mov
cs
lcall
xchg
xchg
sbb
push
pop
and
pop
rcll
lahf
lods
adc
inc
sub
add
cmp
and
cmc
xchg
sbb
test
movsl
rcrb
and
and
xchg
inc
dec
fcoml
lahf
cmp
mov
ror
lods
out
cmpsl
sub
or
and
nop
out
roll
and
jl
bound
push
push
sbb
aaa
jbe
and
jno
test
mov
xchg
jle
jecxz
mov
lds
imul
fisubs
int3
or
leave
or
and
daa
pop
xor
jmp
stos
mov
in
and
sub
push
dec
and
imul
mov
ret
pop
inc
push
ds
mov
xchg
js
insl
jmp
push
cmp
pop
cmp
xor
insb
xchg
and
mov
xor
fnsave
push
in
mov
movups
add
xor
fdivrl
mov
and
daa
mov
mov
sbb
sub
inc
mov
or
jb
movsb
jbe
orb
xor
std
ja
test
pop
push
or
or
fstpt
dec
movsb
ret
test
mov
sbb
xchg
mov
mov
arpl
push
mov
aas
test
mov
ror
bound
push
inc
or
imul
mov
or
outsb
pushf
decl
inc
or
ds
push
popa
add
adc
sub
pop
push
in
xchg
add
adc
cmp
push
mov
inc
add
and
test
dec
int3
mov
insl
add
dec
pop
and
cwtl
movsb
ficompl
mov
hlt
dec
lea
int3
into
scas
cmp
pusha
addl
and
jle
in
sbb
dec
cli
movsb
mov
aas
nop
and
sbb
rorl
push
rcrl
adc
mov
mov
inc
loopne
dec
add
xor
xchg
mov
cmc
in
xchg
dec
sub
pop
mov
popa
lods
cmp
xor
push
loopne
test
es
cmp
mov
mov
int
icebp
es
and
add
jecxz
insl
mov
scas
add
xor
sbb
xchg
lretw
fs
and
in
adc
and
dec
xor
or
fnsave
data16
adc
test
and
and
rolb
xchg
aaa
dec
outsb
mull
and
jp
xor
and
fxch
std
mov
ss
dec
pop
repnz
lds
and
mov
pop
xchg
or
add
and
popa
inc
aam
jns
fisttpll
gs
popa
push
inc
sub
imul
cmc
xchg
popa
sub
and
and
cmc
mov
mov
cmp
lods
fldenv
sar
pop
cmpsl
jge
cltd
xchg
dec
mov
dec
push
pop
cmp
mov
lahf
fwait
scas
lods
xor
popf
push
cmc
and
push
add
adc
mov
and
fwait
inc
and
jp
ret
inc
xor
popa
loopne
das
lods
add
fisubrs
push
and
mov
mulb
cmp
ljmp
and
mov
xchg
andb
dec
mov
push
les
mov
and
cwtl
in
out
aad
mov
dec
cmpl
cmpsl
out
dec
and
es
xchg
je
jae
loope
xor
rclb
push
or
xlat
and
or
adc
mov
jno
scas
andl
movsl
testl
or
arpl
cmpsb
lods
mov
out
popf
fnsave
movsl
cwtl
push
adc
pop
mov
hlt
popa
xor
and
sub
jmp
sbb
push
cmp
cmpsb
ja
lds
or
adc
mov
sub
iret
inc
and
sub
lahf
and
and
jae
jmp
and
push
cmpsb
mov
pop
cld
and
adc
jbe
sbb
add
xor
or
fnstcw
ljmp
addb
and
xchg
pop
pop
movsb
sbb
into
sbb
mov
jne
pop
mov
inc
scas
mov
jae
addl
repnz
and
dec
sbb
add
jb
test
stos
loopne
and
ffreep
mov
cld
loop
das
lea
jno
mov
in
jne
lahf
and
jae
pop
jecxz
mov
test
jmp
out
inc
scas
out
mov
sbb
icebp
dec
jl
push
or
stos
rcrl
and
mov
adcb
sbb
mov
xlat
data16
adcl
test
repnz
push
movsl
xchg
sbb
in
cmp
and
and
andl
sbb
sbb
out
popf
arpl
push
add
inc
xchg
push
xorl
aaa
xlat
and
cmp
popa
pushl
movsb
add
add
subl
sub
popf
or
and
lods
lret
xchg
and
dec
adc
loope
sub
test
cmp
push
push
arpl
jmp
and
dec
sub
dec
call
mov
jns
test
xor
lcall
fmull
add
aaa
and
jecxz
repz
jbe
in
testb
and
jmp
or
popf
and
push
subb
testl
and
fistl
jo
popa
or
mov
cmpsb
jae
dec
adc
popf
lds
icebp
sbb
xor
and
jg
jecxz
cmp
popf
push
or
xchg
rolb
imul
rclb
add
cmp
mov
cwtl
pop
or
and
es
sbb
jb
xchg
fwait
mov
in
insl
jp
jle
jns
pop
adc
or
push
icebp
std
lods
loope
push
and
fisubrl
xor
out
popa
sbb
fldenv
out
add
or
loope
test
cli
addr16
fmuls
inc
push
and
adcl
jecxz
push
cwtl
sahf
sbb
fwait
mov
sbb
int3
or
dec
ja
xchg
mov
movsl
push
xor
jb
sbb
aas
lea
das
dec
dec
inc
xchg
jmp
push
sbb
pop
and
mov
dec
cwtl
jmp
lock
popa
popf
jle
push
push
xor
aas
not
and
out
bound
dec
das
insb
adc
leave
and
loope
outsl
in
cmpl
imul
in
popa
pop
xlat
pop
imul
cmp
or
lcall
fnstcw
testb
rclb
cmpsl
lods
add
mov
movb
test
cltd
push
inc
mov
movsb
out
mov
adc
xlat
into
pop
or
arpl
jne
mov
adc
lret
pop
pop
pop
sbb
inc
mov
and
fnstenv
test
xlat
mov
pop
jmp
pop
fimuls
pop
sarl
inc
lods
xor
pusha
or
enter
movsb
dec
inc
and
test
mov
mulb
jge
test
fldl
outsl
mov
jno
out
dec
inc
pop
cvtdq2ps
mov
mov
or
in
sub
incb
and
aam
mov
lret
xchg
and
jmp
mov
and
adc
cli
push
aad
enter
cwtl
jp
mov
les
mov
lods
jge
jne
sub
push
jno
cli
mov
ficoml
gs
and
or
cmpb
rcrl
stos
pop
pusha
inc
mov
ljmp
xor
sub
ja
cltd
inc
lea
add
out
mov
and
sbb
ud2
push
shlb
xchg
jbe
inc
mulb
data16
addr16
dec
pop
shlb
jns
lods
mov
and
dec
push
inc
mov
mov
jge
pop
and
lahf
shl
dec
out
push
aas
sti
cli
dec
xchg
pop
push
jle
call
cltd
shll
arpl
jno
jecxz
aas
ljmp
insb
in
aam
cmpl
sahf
cli
mov
mov
testb
jmp
shll
mov
adc
mov
divb
adcb
xor
movsb
push
jno
add
and
xchg
inc
and
and
add
imul
mov
lea
ja
cwtl
xor
in
jg
mov
push
add
cs
xlat
mov
and
shlb
fwait
xchg
sub
mov
in
xchg
mov
shrl
in
and
mov
mov
dec
outsb
xchg
pop
and
sub
dec
and
sbb
adc
repz
and
sub
mov
and
lea
add
in
shlb
dec
jae
and
roll
jg
cli
pop
dec
mov
int
push
out
sbb
and
dec
inc
pop
ds
and
push
pop
pop
and
in
adc
loopne
mov
mov
lcall
sub
jle
and
sti
pop
cmp
test
and
mov
pusha
sbb
stos
rorl
xor
adcl
rclb
lahf
and
out
jge
dec
xor
loope
insl
or
int3
add
jno
shll
or
push
and
mov
fs
xor
mov
add
xchg
subl
inc
jp
popw
dec
push
mov
push
repz
mov
and
divb
xchg
es
xor
and
push
je
js
mov
lds
sub
movsb
jbe
inc
or
roll
inc
xor
mov
jecxz
ljmp
dec
pop
push
inc
or
and
xchg
xor
ds
and
movsb
stos
inc
sbb
mov
inc
popf
xchg
repnz
test
add
ret
f2xm1
loopne
and
dec
pop
push
push
sbb
enter
movsl
adc
adc
jge
mov
icebp
push
mov
lret
jno
xorb
aaa
add
cmp
push
add
pop
fstl
dec
cmpsl
negl
xchg
inc
adc
add
gs
and
and
jbe
xchg
push
jns
xor
cmpsb
pop
cmc
gs
adc
adc
dec
and
repnz
leave
sbb
pop
lcall
pop
xchg
fdivl
inc
fs
repnz
jle
inc
fimuls
jnp
cmpsl
jecxz
xchg
xor
test
mov
add
imul
and
push
ret
clc
and
and
xchg
rol
nop
lret
cmp
xor
and
dec
fwait
idivl
sahf
and
pop
int
push
xchg
adc
sbb
dec
popa
setae
stos
sbb
cltd
testl
in
push
xor
pusha
mov
push
lahf
outsb
loopne
pop
inc
pop
data16
xor
test
fs
lods
loope
pop
adc
and
dec
or
outsl
out
push
jg
orb
push
push
clc
dec
add
dec
outsl
mov
inc
loop
out
pop
add
mov
mov
push
les
push
lret
and
aam
aas
and
add
jo
and
or
movb
cwtl
and
and
insl
push
xor
leave
aas
lock
addb
fists
adc
xchg
cltd
add
stos
or
ret
in
push
shlb
stos
jno
push
push
sahf
mov
aaa
inc
les
jg
in
push
mov
xchg
cltd
test
cmpsl
mov
cwtl
mov
lods
test
xchg
mov
cmp
add
adc
jp
movsl
pop
or
xchg
aam
mov
pop
mov
push
and
dec
mov
shlb
out
lret
and
popf
or
fimull
or
mov
mov
pop
lahf
lds
imul
vmwrite
and
mov
lret
inc
mov
outsb
and
jmp
mov
mov
push
sub
test
mov
mov
stos
enter
ret
mov
imul
sahf
mov
lea
adc
sub
in
xchg
lds
data16
sbb
xchg
sub
jns
fisubrl
push
daa
push
mov
jg
int
xor
jle
mov
cmp
and
std
stos
and
jecxz
add
sbb
cli
faddl
xor
shlb
dec
xchg
xor
hlt
xchg
jo
inc
lock
jb
sbb
data16
adc
mov
ljmp
sub
outsb
and
stc
aad
dec
jle
inc
mov
mov
sbb
cld
sbbb
mov
test
orps
xor
cmp
test
xchg
ss
add
cli
out
shrb
inc
out
or
mov
push
call
and
or
cld
popf
and
adc
cmp
ja
lods
inc
fs
and
pop
add
adc
and
jne
jg
imul
xor
ret
into
mov
sub
fildll
pop
popa
cs
xchg
int3
ljmp
adc
jae
daa
xor
mov
test
push
into
jbe
test
cmpsl
lock
inc
lahf
cmc
out
mov
add
fst
mov
and
cmp
out
imul
scas
jne
outsl
mov
xlat
sbb
mov
paddusw
and
mov
sbbl
aaa
iret
push
cmc
xchg
and
adc
xlat
inc
mov
inc
dec
or
cmp
popf
aad
out
ret
adc
xchg
xchg
jmp
les
jnp
inc
into
lock
xor
pop
and
adc
int
adc
sbb
xchg
jle
call
and
xchg
push
jbe
lret
rorb
pusha
imul
sahf
jge
ret
inc
stos
lahf
int
mov
sub
push
popa
incb
jg
je
fldt
into
insl
in
addb
jns
test
outsb
dec
jno
and
jge
int3
adc
and
mov
loop
xorl
icebp
lahf
or
cmp
xchg
shlb
int
sahf
inc
and
aam
xchg
mov
popa
std
cmpsl
jae
xchg
add
xchg
push
sub
aam
jbe
shll
push
adc
mov
ret
and
jg
pop
pop
jge
mov
sbb
insl
sbb
cmp
push
mov
adc
cmpb
and
shrb
ret
push
clc
push
and
inc
out
push
dec
mov
and
xchg
push
cmp
adc
scas
add
aas
dec
test
loopne
mov
mov
lock
push
pop
nop
out
and
movsb
and
andb
xor
and
pusha
inc
push
xchg
mov
and
push
orl
mov
scas
testl
push
inc
shll
inc
and
scas
ret
mov
lods
mov
adc
and
xchg
in
and
jge
popa
mov
mov
and
aam
inc
es
sub
mov
add
popa
inc
jge
and
lahf
mov
call
into
outsl
mov
add
mov
and
xchg
fcoms
in
cmp
inc
push
movsb
xor
adc
push
je
jle
imul
push
mov
sub
out
sub
lret
and
xor
sub
push
test
sbb
shlb
xor
mov
and
fwait
or
movsb
loope
add
out
push
addr16
pushf
int3
inc
xor
lds
xor
nop
pop
dec
pop
sub
cltd
popf
and
hlt
mov
inc
shlb
sbb
loop
int
and
shll
mov
xchg
sarb
test
cmp
add
das
jl
fisubs
mov
ljmp
push
out
xorl
xor
movsb
fsubr
xor
fcomi
nop
jo
lret
ret
push
lods
pop
sahf
and
loope
aaa
movsb
inc
sub
std
jns
xchg
mov
ffree
and
sbb
aam
daa
cmp
push
gs
jae
outsb
pop
andl
push
insb
stos
int3
fs
aaa
and
adc
sbb
mov
ss
mov
fsubrs
dec
scas
clc
dec
xchg
inc
xor
push
and
or
pop
nop
cld
int3
and
inc
scas
les
movsl
mov
jo
jmp
pop
and
dec
into
sbb
hlt
pop
xor
ret
std
rol
icebp
adcl
into
and
loopne
or
int3
jmp
inc
and
inc
mov
jp
cmp
jae
and
cmp
xchg
sbb
and
pop
sub
aam
sbb
push
rcl
lretw
fldenv
sbb
sbb
adc
mov
xchg
scas
and
inc
xor
aam
clc
jbe
popl
push
inc
mov
xadd
adc
in
mov
jp
and
cmp
push
and
dec
enter
push
mov
out
int
movsb
or
inc
adc
add
mov
es
mov
daa
jle
fdivs
lahf
xchg
lcall
mov
sbbl
out
ret
push
xchg
mov
inc
or
cmp
inc
test
movsb
mov
loop
hlt
mov
lcall
iret
loop
and
or
mov
aas
mov
popa
xor
fwait
lods
arpl
cmp
mov
and
inc
xchg
xchg
aas
iret
mov
sti
test
or
mov
in
cs
push
and
mov
loope
rcll
cmp
xchg
push
imul
jle
mov
pop
cltd
mov
popa
sbb
and
and
add
subb
mov
push
iret
mov
out
inc
pop
mov
pusha
dec
xor
and
dec
cmp
scas
or
and
jnp
sub
or
pop
jbe
cs
mov
pushf
scas
and
repz
xor
lds
leave
dec
sub
push
cmp
xchg
inc
mov
call
xor
push
icebp
mov
out
mov
jb
mov
xchg
pop
imul
sahf
push
jge
jmp
in
int3
mov
jle
push
rclb
imul
shrl
and
scas
cltd
insl
dec
xor
test
cmp
mov
cmp
cmp
cwtl
push
cmp
add
lds
push
aad
and
clc
sarl
xor
and
dec
jge
and
xchg
and
aad
aaa
mov
mov
and
or
jne
sarl
ljmp
lds
cltd
aas
adc
and
cmc
push
and
mov
adc
mov
mov
and
popa
pop
push
inc
cltd
and
xchg
sbb
shl
ret
jo
inc
adc
lret
xchg
jecxz
mov
xchg
and
fsubs
sbbl
jp
pop
das
and
test
in
das
shrl
and
sub
pop
and
pop
lea
notl
mov
add
outsb
mov
repnz
das
popf
gs
or
push
sti
cltd
xor
and
xchg
test
inc
leave
dec
inc
jg
and
xchg
jnp
cmpl
str
sbb
mov
push
jle
lret
and
sub
mov
jae
clc
add
mov
out
mov
xor
mov
ljmp
lret
sbb
push
ss
cmp
and
xor
subl
cwtl
in
test
lret
adc
fidivrs
xor
and
scas
push
in
jb
push
mov
mov
sahf
xor
in
inc
das
mov
mov
pop
mov
jl
xchg
test
cmp
dec
or
mov
in
and
adc
lods
jl
fisubl
mov
hlt
mov
or
mov
jbe
cmc
pop
rcrl
je
into
cmp
mov
das
dec
inc
jb
mov
nop
fwait
sub
push
jnp
andl
rclb
mov
push
jmp
fldl
scas
mov
cltd
ret
mov
filds
push
jns
lret
sub
add
int
andl
das
sub
and
fists
adcb
adc
mov
and
loopne
cmp
mov
xor
cmp
sbbl
insb
and
daa
mov
cmc
icebp
mov
loop
and
sub
and
in
lret
mov
mov
and
and
or
pop
xchg
hlt
and
shll
loope
stc
xorb
xchg
push
fwait
or
and
mov
test
dec
jbe
out
sbb
imul
and
xchg
std
outsl
jecxz
xor
jne
sub
or
jno
adc
xchg
icebp
movsb
mov
out
rolb
and
jg
and
add
movsb
jp
stos
test
cs
in
and
dec
orps
jp
and
xor
cmc
filds
mov
and
movsb
add
dec
js
negb
aaa
ds
into
lcall
pop
sbb
loopne
aad
xchg
cld
int
mov
push
ror
dec
inc
mov
sub
jnp
fildll
and
push
cmc
push
pop
adc
ljmp
add
and
je
jno
pusha
xor
adcl
das
popa
into
addr16
loopne
xor
fldenv
test
jno
je
and
pop
shrl
iret
mov
mov
jmp
cltd
and
mov
fwait
mov
jge
mov
mov
nop
out
hlt
mov
and
les
push
xlat
mov
pop
rcll
push
cmp
add
and
fs
nop
mov
lret
push
int
and
ret
icebp
popa
pop
mov
lds
push
in
jae
test
and
push
push
mov
adc
sahf
roll
lahf
xor
mov
xor
popa
test
outsb
and
decb
in
fwait
and
and
out
mov
in
cwtl
shlb
jno
ret
mov
fsub
push
xchg
fwait
jg
popa
push
in
xor
incl
and
and
inc
sbb
movq
inc
sbb
push
test
shlb
fwait
int3
and
or
xchg
and
lahf
frstor
mov
mov
jns
sbb
jne
fsubl
adc
add
test
mov
mov
mov
cltd
pop
jb
mov
pop
jl
pop
sbb
fs
das
push
jp
push
aam
and
lock
jo
aas
pop
xchg
test
sar
push
lahf
xchg
lret
dec
lea
mov
jge
and
cmp
jle
inc
and
and
in
aas
jne
xor
and
sbb
out
cwtl
inc
mov
aaa
enter
inc
rclb
pop
fbld
mov
sbbl
jo
popa
cmpsl
and
lds
cwtl
and
mov
and
and
loope
subl
inc
push
arpl
insb
rcl
imul
movsb
out
push
rcl
movl
adc
cmp
add
lock
mov
loop
out
add
push
adcl
arpl
xor
orl
and
jecxz
xchg
mov
incb
xchg
push
insl
rclb
lret
add
pop
lea
mov
dec
ss
mov
pop
insl
lock
loope
sti
adc
and
aad
scas
mov
push
mov
mov
adc
bound
push
mov
icebp
aas
outsl
xchg
in
cld
popl
addb
popa
and
test
mov
inc
lret
insb
xor
and
jns
mulb
fstps
xor
mov
fsubrl
inc
lea
sub
cld
imul
mov
and
fimuls
jno
xchg
addr16
cmpsb
repz
push
es
xchg
mov
jl
std
fwait
add
and
mov
sub
sbb
push
xor
mov
and
cmp
pop
push
jbe
jae
xchg
adc
addr16
adcb
lods
out
cmp
and
xchg
dec
ror
pop
and
or
pusha
icebp
pushf
pop
jmp
outsb
mov
or
fwait
and
add
mull
nop
xor
leave
xor
sbb
in
test
add
xchg
movsb
sbb
ret
test
pop
scas
bound
lahf
bound
add
push
ss
push
and
test
shll
or
ss
add
int
lret
dec
jl
nop
xor
push
mov
fs
inc
push
add
imul
pop
cmp
and
in
bswap
push
dec
loopne
popf
pop
and
out
mov
mov
pushf
movsb
daa
test
xor
and
add
xchg
mov
cltd
pop
mov
push
inc
lret
xor
mov
scas
int
mov
or
movsl
add
and
sahf
mov
and
dec
loopne
add
add
shlb
das
daa
subl
lahf
cltd
insl
xchg
call
insb
pop
ret
dec
inc
cmp
push
jecxz
cmp
out
repz
inc
jnp
xor
push
xor
loopne
adc
add
mov
jno
sub
enter
call
shll
or
dec
std
push
and
repz
and
test
and
test
in
and
xor
stos
and
pop
jecxz
pop
adc
xchg
push
sbb
mov
jb
and
lahf
movsb
popa
mov
jg
mov
or
and
sub
cltd
sahf
and
sbb
iret
and
mov
ss
mov
xor
sbb
push
test
sub
jl
ds
shll
icebp
lods
fcoms
inc
aas
mov
xor
mov
pop
adc
xchg
jb
and
in
mov
sarb
and
push
xchg
add
test
popa
pop
lods
inc
scas
xchg
mov
and
imul
xchg
inc
sarl
lahf
jns
scas
in
mov
mov
sub
hlt
cmp
mov
jno
sub
and
sbb
xor
cs
fadds
mov
les
add
outsl
sbb
dec
bound
rcrl
mov
cmp
pop
lret
jecxz
les
jge
and
inc
push
pop
mov
xchg
mov
fadd
add
xchg
sbb
push
ds
or
push
xchg
and
pop
pop
jb
popa
pop
popf
mov
and
test
shlb
adc
jle
mov
xlat
mov
jecxz
add
sarl
xor
mov
and
or
es
push
sbb
xchg
cmc
mov
xor
lea
and
stos
xchg
xchg
pop
add
xchg
sub
xorb
and
into
cmp
popa
outsb
sbb
inc
es
movsb
in
jle
imul
and
mov
mov
lret
loopne
aas
jae
and
out
orb
cmc
push
subl
pop
and
dec
jns
stos
inc
popa
mov
inc
lea
pop
nop
fwait
push
test
mov
cmp
or
inc
dec
and
sub
sbb
scas
mov
div
and
ja
and
lds
pop
push
cmpsb
loop
jp
call
push
cmpsb
sahf
and
aam
cmpl
shr
shrb
into
fnstcw
imul
and
lock
lods
dec
and
mov
add
and
jmp
mov
sar
mov
sub
lret
and
mov
sbb
int3
dec
pop
xlat
dec
aaa
push
dec
pop
daa
xor
sbb
adcb
movb
sbb
ret
xchg
and
inc
clc
sub
in
push
and
and
sub
clc
andl
adc
jae
scas
sbb
out
lds
push
mov
push
and
sub
insb
inc
addr16
and
cmp
outsb
enter
jecxz
or
imul
pushf
dec
shrb
lods
and
add
aam
mov
mov
mov
movsl
cltd
xor
movsb
popf
bound
cmp
outsb
jecxz
mov
mov
cmp
repnz
or
jae
mov
pusha
lods
inc
push
adc
adc
testl
cmp
mov
jg
jp
loop
push
xor
mov
test
lea
xchg
and
mov
or
mov
int
sbb
jb
scas
pushf
sub
cmc
and
mov
add
dec
xchg
icebp
mov
stc
jp
cltd
int3
and
and
jno
fs
lret
and
scas
push
popa
dec
or
and
cwtl
fadds
xor
por
shrb
sub
jp
loop
jle
insl
ds
pop
and
sbb
dec
mov
push
xor
pop
mull
add
mov
mov
loop
outsb
sbb
inc
adcl
cmpsb
pop
pusha
and
lods
fisttps
mov
mov
lret
rorb
xor
pop
arpl
and
in
std
pop
mov
movsb
lods
js
cli
or
and
repz
cmp
cmp
and
and
stos
cmp
test
xchg
mov
aam
leave
ret
sbb
mov
sbb
mov
lods
inc
gs
and
and
cmp
sub
cld
dec
mov
and
hlt
clc
mov
inc
xor
mov
insb
in
mov
lcall
xor
push
xchg
movsl
sbb
jns
mov
aas
jge
hlt
mov
add
xchg
popf
das
iret
mov
test
mov
test
inc
sarb
insb
fcoms
xorb
fstps
cmc
and
jmp
inc
scas
leave
cmp
jle
jmp
sub
xor
mov
or
sbb
and
adc
jecxz
bt
mov
dec
and
sbbb
imul
movsl
dec
mov
sahf
mov
stos
dec
pop
lahf
mov
mov
add
push
sub
sahf
xchg
xor
adc
and
xor
mov
outsb
and
sub
stos
into
and
or
repz
pop
sbb
in
rclb
mov
cmp
leave
mov
push
jns
subl
push
inc
enter
dec
xchg
jnp
mov
push
and
scas
xchg
cmc
jo
jns
pop
dec
and
mov
inc
xor
loope
orb
dec
mov
and
jno
imul
cmpsb
clc
xchg
xchg
xchg
dec
pop
and
das
inc
fldenv
notl
and
movsl
adcb
and
mov
xchg
inc
pop
push
lahf
imul
out
push
shlb
xor
mov
sub
jne
movsb
and
mov
outsl
push
imul
popf
mov
mov
clc
dec
or
cmp
sarb
sub
and
cmp
push
push
and
insb
push
xor
jl
and
in
mov
sub
andl
daa
ja
mov
int
insl
into
and
fcoms
and
sub
andl
and
dec
fldenv
int3
fisubl
enter
dec
mov
in
scas
test
aad
stc
shll
mov
stos
xor
inc
adc
clc
mov
test
test
dec
cmp
repnz
sbb
cmc
fdivrl
add
stos
fildll
fidivrl
push
and
pop
xchg
xor
push
jae
outsl
add
jo
xor
jle
push
adc
aaa
lahf
add
push
pop
bound
dec
leave
cwtl
cmpsl
ljmp
xchg
pusha
inc
push
pop
sbbb
mov
ficompl
mov
mov
shlb
pushf
jb
sub
outsb
and
lret
imul
add
and
insl
fcoms
jmp
lds
sbb
and
test
sbb
pusha
hlt
and
mov
movsb
in
or
mulb
mov
add
das
lahf
cmpsl
fsubp
cs
pop
add
adc
das
mov
jno
mov
mov
and
clc
test
push
lret
xchg
mov
mov
mov
loope
pop
mov
ret
das
mov
jmp
mov
sub
mov
jmp
jnp
dec
gs
les
jb
dec
mull
cmp
lods
dec
aas
mov
outsb
adc
sub
sbbb
and
cmpsl
pop
lods
and
cmp
pop
jp
clc
inc
inc
xor
mov
jb
shlb
cmp
push
popf
repnz
push
sub
sbbb
jg
and
in
cmc
jecxz
jno
outsb
sub
pop
test
loope
test
rolb
shl
scas
sbb
mov
jg
and
inc
add
xchg
xor
leave
cmp
out
int3
jp
pop
in
inc
jle
adc
pop
dec
and
sbb
adc
gs
pop
lods
jne
dec
mov
sbb
iret
fisttpll
and
jo
ljmp
ror
and
sub
cmp
xchg
loop
push
mov
bnd
pop
mov
mov
test
aas
testl
insl
loopnew
and
sahf
loopne
and
push
and
mov
or
or
and
int
dec
mov
movsl
and
mov
sbb
add
outsl
in
dec
jg
out
mov
dec
mov
out
test
jb
xlat
pusha
and
jae
xchg
and
xchg
inc
push
lea
push
xor
inc
cmp
scas
add
and
gs
jp
mov
sbb
jecxz
dec
ja
sarb
sbb
and
cmp
mov
mov
mov
test
ret
lret
mov
or
repz
jbe
mov
and
hlt
dec
stos
and
dec
adc
outsb
push
clc
pop
cmp
shrl
sbb
add
sbb
int3
xchg
mov
add
adcb
adc
fistl
out
mov
stc
ret
dec
jle
cmp
and
jp
in
inc
outsl
jns
fisttpl
jg
jecxz
dec
and
das
sarb
dec
jle
fiaddl
int
or
and
insl
or
xchg
xchg
out
mov
sub
or
xor
mov
adc
mov
push
xor
lcall
mov
mov
dec
andl
in
push
je
cmp
ja
adc
insb
movl
faddl
mov
jne
and
mov
pop
and
pop
mov
in
pop
ret
xor
ja
and
cld
xchg
pop
adc
aad
pop
lahf
push
sub
dec
adc
xchg
and
cmp
cmpsb
mov
pusha
cs
out
sub
cmpl
mov
and
in
sub
mov
and
or
pop
mov
ret
in
repnz
cmpsl
stos
mov
push
popw
pop
insb
shll
insb
repz
add
sbb
and
xor
push
test
xchg
mov
ret
fsubl
mov
dec
popf
pop
cmp
mov
lock
push
cmp
movsb
cld
mov
push
sub
pop
test
popa
add
pop
pcmpeqd
movsb
popa
stos
mov
sbb
add
push
and
push
inc
lock
les
cld
orb
mov
enter
add
sub
pop
imul
fildll
lret
and
fs
and
sbb
mov
movsb
push
imul
jg
xchg
bound
fidivrl
and
testl
push
out
insb
pusha
jns
sbb
scas
add
jo
mov
mov
sub
in
and
fidivrl
dec
pushf
cmp
test
imul
fistpll
sub
movsb
and
mov
jae
leave
stos
lahf
sbb
and
in
lods
stos
xor
and
xchg
cmpb
orl
xchg
sti
sbb
cmc
inc
mov
sbb
in
iret
mov
leave
mov
push
inc
pop
scas
sti
movsb
add
xor
or
popa
outsl
rclb
out
sbb
lods
movsb
xchg
fistl
mov
cmp
add
ja
adc
cmpsb
xor
and
mov
sbb
cmc
sbbl
es
cli
adc
repz
cmp
xor
add
movsl
and
xor
cs
xchg
mov
jo
dec
dec
mov
cmpsl
add
aam
adc
or
push
cmp
in
fists
bound
and
jge
lahf
and
push
push
sbb
push
or
call
sarb
lods
mov
stc
mov
and
push
and
push
mov
lcall
and
jge
and
mov
cmpsl
int3
out
sub
loop
xchg
mov
lcall
cmp
dec
insl
sub
jge
stos
or
push
xor
jmp
adc
cmp
xchg
insl
scas
cmp
test
mov
movsl
add
fsubrl
idivb
and
xor
lods
daa
mov
sub
lods
xor
filds
in
and
pop
pop
pop
mov
mov
sarb
mov
adc
xor
xor
and
ljmp
and
pop
or
and
sub
aad
subl
movsb
cmp
test
cli
bound
jno
cwtl
das
popf
mov
mov
loope
mov
into
sub
test
sbb
insl
pop
js
and
movsl
jp
repnz
jo
movsl
mov
fadd
popa
add
inc
js
push
sbb
or
mov
in
in
jb
mov
mov
and
popf
das
std
arpl
and
dec
mov
lcall
cmc
enter
imul
and
or
sub
mov
imul
add
mov
mov
movsl
jmp
xchg
jns
mov
push
or
xchg
cltd
sub
and
sti
cld
and
and
aad
jp
sbb
xor
cli
shll
popf
lahf
imul
and
out
inc
stc
in
in
scas
inc
inc
dec
inc
push
lret
mov
pop
aam
rcll
fstps
and
outsb
imul
or
stos
jl
mov
test
call
mov
and
fdivrl
mov
dec
in
dec
fbld
movsl
lods
sub
popf
push
push
inc
jb
jbe
out
sbb
arpl
sti
jp
cmpsl
add
movsl
and
fmull
in
and
jmp
or
xchg
xor
repz
inc
push
sub
stos
ljmp
and
lods
stc
fiaddl
adc
fdivl
mov
aaa
pop
mov
xchg
mov
jg
repnz
lret
push
daa
xor
mov
xchg
or
sub
push
je
add
arpl
xchg
push
dec
leave
mov
push
jne
or
dec
outsl
ret
and
pop
sbb
push
add
add
lahf
call
cmp
push
and
dec
imul
add
xchg
cmp
fdivl
mov
insb
inc
and
push
lds
inc
sub
pushf
lret
push
mov
cltd
mull
pop
xor
enter
push
jecxz
push
das
pop
cmc
int
and
rcll
or
cmpsl
sub
pushf
mov
mov
and
lret
mov
ficoml
lahf
in
popa
cmp
push
mov
lods
add
daa
mov
jmp
and
jbe
fidivl
test
jb
lcall
sbb
jle
mov
or
je
and
or
push
xor
and
icebp
sti
lcall
pop
mov
mov
jno
jne
mov
pop
lods
and
daa
mov
xchg
add
test
lods
fcomps
nop
or
cltd
movsl
jg
push
pop
pop
sub
iret
dec
mov
and
test
add
sbb
std
dec
and
adc
mov
imul
popa
mov
mov
and
test
test
xchg
mov
mov
movsb
mov
aam
ljmp
imul
sub
push
cmp
adc
sub
add
je
xor
inc
sti
stos
pop
jg
int3
enter
cmp
mov
loope
movsl
or
xchg
xor
mov
lods
arpl
icebp
xor
test
mov
out
jmp
and
mov
scas
push
xchg
in
pop
and
call
sti
out
sbb
pop
add
sbb
push
adcl
sbb
push
sbb
xchg
cmpsb
js
add
data16
leave
mov
das
pop
dec
and
bound
imul
and
sbb
xchg
or
fsubl
xchg
inc
pop
repnz
enter
jns
add
movsb
sub
data16
andl
addr16
mov
and
loopne
push
es
and
into
mov
lock
lcall
mov
pop
aaa
sub
out
inc
xor
call
xor
push
mov
adc
xchg
test
call
add
adc
ljmp
repnz
mov
mov
out
jbe
daa
and
push
dec
pushf
imul
jno
cmp
sbb
cmp
jne
aas
ljmp
mov
loop
mov
icebp
sub
and
fimuls
mov
adc
sbb
nop
out
sub
and
push
jo
inc
xchg
and
test
icebp
fists
xchg
fdivrl
xchg
add
stos
inc
fmul
popa
frstor
xchg
jg
test
stc
icebp
adc
in
iret
jae
popa
dec
sub
cmpsl
and
pop
xor
shl
movsb
movsl
ss
lods
mov
test
xchg
lea
movsb
and
stc
mov
and
lret
jo
add
mov
movsl
std
and
out
stos
aas
adc
cmpsb
icebp
pop
ret
out
mov
jge
fsubl
loop
jmp
dec
fs
xchg
sbb
sarl
pop
loopne
inc
and
xchg
repz
and
fdiv
out
push
pop
and
roll
call
jne
sub
shl
add
and
fs
ja
inc
mov
inc
mov
dec
cmp
movsl
idiv
rorl
loop
and
mov
inc
int3
xor
xchg
jbe
mov
test
js
iret
out
stc
out
xchg
popa
into
es
sub
fidivrs
movsl
test
ljmp
sbb
and
in
add
mov
adc
push
sti
pop
mov
and
js
in
pcmpgtw
xor
xchg
sub
jle
sbb
dec
xor
sub
dec
xchg
arpl
dec
and
cmp
xor
sub
leave
sbb
cmpb
cmpsb
jg
pop
add
inc
push
mov
adc
mov
mov
out
xor
ljmp
clc
lea
inc
and
in
inc
push
cltd
sbb
adc
sahf
imull
dec
fimull
popa
add
push
mul
fsubl
jne
pop
test
mov
dec
mov
inc
pop
cmpsb
adc
rclb
pop
out
adc
test
cmc
lds
mov
sub
push
cmp
push
sub
popa
out
or
and
jae
out
and
das
jl
popf
imull
and
js
inc
jo
mov
scas
dec
das
and
popf
jge
and
jmp
inc
sub
and
mov
rdtsc
xor
and
mov
cmpsl
and
jge
dec
cld
adc
and
jle
jno
xchg
sbb
popf
pop
shlb
inc
in
push
cwtl
push
leave
inc
test
int3
xchg
test
cs
add
and
push
int
lock
dec
stc
xor
xor
call
ret
or
and
fimull
and
imul
inc
push
and
push
sub
ret
pop
sbb
lds
dec
popf
insl
mov
and
imul
and
lods
lds
imul
inc
gs
insb
sub
ljmp
push
xchg
add
push
iret
loope
std
lret
imul
sbb
lea
cmp
lret
shlb
or
je
mov
pop
pop
dec
lea
pop
add
test
jb
lahf
loop
sbb
mov
sub
xchg
xchg
push
jmp
xchg
add
dec
sbb
mov
pop
pop
and
xchg
insb
mov
cmp
lret
pop
jbe
sub
fsubs
or
jnp,pn
and
mov
loopne
jge
stc
test
insl
or
int
call
sub
mov
jecxz
pop
out
and
into
test
es
pop
xchg
jmp
push
out
sahf
and
cmp
push
push
rcrb
movsb
loopne
mov
mov
mov
and
hlt
jo
and
rcrl
jmp
clc
loope
and
cwtl
mov
xchg
push
fwait
out
mov
rorb
iret
sbb
pop
dec
shlb
jne
push
dec
mov
inc
popa
into
je
jge
pop
and
outsl
sbb
adc
mov
sbb
sub
into
jle
mov
rorl
cmp
sub
jo
ds
xchg
out
and
call
hlt
cmp
aam
inc
mov
ljmp
test
hlt
or
decl
mov
mov
lret
and
nop
pop
and
enter
xchg
jnp
and
xchg
sub
sub
sti
push
sub
mov
test
hlt
ds
xchg
xchg
pop
sub
in
movsb
and
mov
orb
dec
mov
out
repz
out
mov
mov
int3
or
mov
loopne
add
and
rorl
fbstp
stos
adc
and
and
shll
xchg
sub
inc
lahf
and
or
and
ljmp
sub
dec
mov
and
minps
cmpsb
and
sbb
mov
pop
sub
cmp
fldt
cs
cld
and
enter
mov
sub
rorl
lods
sbb
inc
cs
popa
imul
or
sbb
or
xchg
repz
sahf
sub
mov
clc
jo
sarl
adc
or
cmpsl
lods
jbe
adc
cmp
and
std
rcr
push
popa
push
xor
jge
xorl
das
or
roll
mov
xor
mov
sub
aam
adc
jne
movsl
scas
xchg
outsb
enter
cmp
mov
sub
imul
mov
add
icebp
lea
das
adc
add
or
jno
pop
stc
pop
popa
push
adc
or
push
es
cmp
jbe
rep
push
lcall
lret
dec
sbb
or
cmp
int
mov
push
jae
cs
popa
cmpsb
cmpb
sub
pop
xor
and
inc
jg
cmpsl
mov
mov
pop
outsl
mov
into
popa
leave
and
pop
and
jl
dec
cmp
xlat
inc
outsb
inc
and
push
cmpsb
sbb
add
cwtl
sbb
cmp
popa
mov
push
jae
and
ljmp
les
and
xchg
add
push
inc
and
mov
pop
jg
outsl
sbb
movl
xchg
pop
dec
sti
jno
addr16
in
testb
add
or
mov
and
pop
and
in
ss
dec
pop
mov
xchg
orb
sbb
aam
or
and
repnz
popa
xor
loopne
imul
adc
adc
adc
iret
inc
es
test
adc
xchg
int3
ds
push
filds
roll
sub
lret
mov
mov
ljmp
cmpsl
and
dec
mov
ficoms
jb
loopne
fwait
popa
cs
enter
scas
push
fistpl
mov
andl
sub
outsb
pop
and
mov
popa
jbe
sub
in
dec
add
sub
and
popa
and
nop
and
push
or
and
add
or
xor
fsts
mov
dec
and
loope
cmpb
pop
inc
and
int3
hlt
xchg
movsb
es
adc
outsb
cmp
int
nop
daa
lahf
out
xor
and
jmp
aam
pop
add
popa
adc
mov
js
cltd
mov
mov
dec
jge
xchg
dec
movsb
and
stos
shrl
xor
xchg
lahf
dec
and
bound
mov
mov
mov
and
dec
push
mov
mov
test
mov
and
insl
or
push
lea
not
and
and
xor
les
fcoms
inc
aam
add
pushf
lods
adc
clc
xor
fmull
fistl
cmp
out
sahf
ret
enter
cmpsb
jno
dec
je
cmc
aaa
mov
in
and
adc
inc
int3
fbld
pop
outsb
mov
mov
ss
bound
and
jae
add
inc
or
inc
jns
and
sub
pop
call
stos
test
sub
aad
mov
ljmp
fnstcw
jmp
sti
insl
dec
bound
cmc
idivb
test
xchg
aas
lock
add
popa
pop
inc
jnp
inc
xchg
pop
and
cmp
xchg
out
dec
out
inc
mov
jbe
xor
icebp
iret
mov
jne
inc
xor
arpl
and
loopne
in
cwtl
ds
mov
dec
inc
mov
jne
pop
pop
sub
xchg
xor
and
ss
out
sbb
and
cwtl
add
into
fs
and
notb
mov
cmp
out
popa
int3
rcl
and
push
pop
hlt
imul
xchg
pop
mov
mov
scas
pop
iret
cmp
and
repz
add
inc
pop
xor
jmp
cltd
dec
xchg
jg
out
cmpsb
out
adc
popa
add
fmulp
mov
xor
lret
mov
sub
add
jl
aaa
jmp
xor
sbb
dec
shlb
scas
inc
jo
mov
mov
shrl
lahf
mov
jge
inc
cltd
mov
dec
int3
clc
mov
imul
sub
push
into
sub
mov
mov
fistps
lcall
fisttpll
pop
and
out
mov
icebp
push
jbe
in
dec
or
pushf
and
test
and
push
lcall
fcompl
inc
jge
jge
and
in
int3
mov
mov
xchg
aaa
cmpsb
aad
adc
movsl
out
test
or
jecxz
fsts
pop
inc
mov
les
sbbb
dec
adc
adc
add
push
and
pushf
sbb
sbb
dec
ret
enter
and
cltd
jl
mov
loopne
js
fcomps
outsb
cmp
and
aas
daa
mull
jo
movsl
pop
inc
and
cwtl
int3
mov
addr16
pop
mov
add
mov
rorb
movsb
pop
gs
mov
lods
push
and
ja
xor
push
mov
insl
jo
out
lahf
pushf
and
in
cmpsl
xor
fcmove
and
sbb
in
aad
sub
sbb
and
into
push
sbb
dec
cli
and
jns
jge
or
sub
cltd
pop
mov
xchg
icebp
ss
mov
and
and
and
mov
lcall
outsb
std
and
popf
or
xchg
and
adc
adc
imul
adc
jge
pop
sub
and
mov
mov
inc
xor
mov
push
and
lds
movsl
xchg
dec
les
insb
jmp
fidivrl
stos
inc
and
or
das
or
iret
fwait
in
arpl
ficompl
sub
or
mov
loop
jge
mov
fwait
gs
andb
xor
jmp
dec
sahf
sub
xor
pop
rorl
lods
cmc
lret
jno
js
ss
test
aad
stc
mov
sarl
stos
repnz
sbb
loope
mov
test
daa
and
aaa
and
popa
stos
incb
jb
and
movsb
mov
cwtl
adc
add
xor
adc
mov
int3
in
pushf
and
loop
dec
cmp
outsl
cwtl
into
xor
inc
pop
js
or
shl
pop
and
adc
jp
addl
mov
ss
imul
jmp
int
test
mov
jns
les
data16
pop
pop
sub
fisttpl
sti
pop
sub
pushf
inc
jnp
xor
and
outsl
xchg
mov
dec
jae
adc
mov
dec
outsl
mov
push
leave
push
and
and
and
mov
and
dec
mov
xor
sbb
subl
mov
rolb
popa
mov
loopne
decl
in
mov
lds
inc
call
inc
mov
rolb
dec
addr16
xor
nop
xchg
cmpsb
sahf
inc
and
repnz
pop
xor
mov
roll
jmp
sub
adc
mov
add
cmp
pop
push
dec
and
push
cmp
and
fwait
in
jecxz
loop
icebp
and
or
lods
cmp
and
jae
xchg
insl
xor
scas
shll
mov
filds
in
orl
jnp
cmpsb
xchg
out
sti
add
jbe
sbbl
mov
inc
and
aas
das
ss
adc
and
inc
jno
pop
inc
ret
cli
mov
adc
dec
sub
sbb
xchg
dec
and
jb
nop
cmp
mov
sbb
and
jmp
dec
fwait
mov
sub
and
xorl
adc
fs
add
sti
and
repnz
push
dec
cs
test
add
fdivrp
aaa
mov
imul
ds
cmp
in
cmp
movsb
jo
mov
movsl
mov
and
sub
gs
push
push
cltd
push
bswap
insl
das
push
cli
fisubrl
mov
xor
test
push
sbb
pop
sub
pusha
call
and
pop
loop
xchg
cmp
imul
push
dec
mov
cmp
xchg
inc
and
aaa
mov
sti
mov
and
pusha
mov
addl
sub
push
mov
sbb
xor
and
in
lret
sbb
cmpsb
ficompl
mov
and
jle
push
lcall
ljmp
iret
rolb
popa
mov
add
in
and
out
lea
inc
fisubrl
lock
inc
loop
pop
adc
daa
orl
test
les
jnp
add
test
movsl
es
xchg
or
hlt
and
stos
lods
jp
inc
cwtl
sahf
xchg
push
jns
and
dec
into
jle
daa
lods
or
push
cwtl
repnz
out
pop
inc
mov
cmp
sbb
xor
out
cs
scas
or
inc
pop
das
xchg
jo
mul
push
fbld
jmp
lahf
pop
mov
xlat
mov
jb
xchg
out
pop
adc
mov
mov
movsb
and
xor
movsb
sbbl
and
and
push
ds
mov
dec
movsb
adc
jge
cld
mov
dec
fcmovne
cmpl
jo
cwtl
insb
inc
scas
sti
pushf
cltd
adc
test
xchg
cmpsl
add
mov
sub
lret
push
test
roll
jno
adcl
add
and
insl
cmp
push
popa
je
rcrl
and
cld
mov
mov
and
stos
or
mov
and
movsb
jne
mov
in
sti
shrl
xchg
and
mov
add
ret
lcall
and
push
sbb
fst
jecxz
movsl
mov
xchg
test
rclb
daa
pop
push
mov
div
push
cmp
cs
mov
push
mov
ja
negb
imul
push
test
movsb
and
push
push
lret
sbb
pop
push
lret
and
push
push
mov
aaa
nop
scas
aad
cmp
jne
js
dec
in
add
and
mov
fwait
adc
int
popa
leave
cmp
imulb
or
mov
add
push
xchg
out
cmp
and
sbb
xchg
inc
pushf
popa
inc
into
testb
cmpsb
fisubrs
adc
add
stc
lcall
incb
sub
mov
sbbl
fldl
fisubs
daa
aam
fstpt
fiaddl
inc
xchg
insl
gs
out
pop
loopne
pop
jo
or
lcall
mov
jp
xor
mov
stos
lock
ds
clc
int3
and
push
mov
mov
sbb
sub
sbb
cwtl
mov
movsb
decl
cmc
into
loop
stc
jbe
mov
lods
sbb
mov
or
fsubrs
mov
filds
and
push
dec
push
fcoml
call
xor
scas
and
mov
and
out
mov
pop
and
stos
mov
fwait
sbb
sub
dec
xchg
cmpsl
cmpsb
and
fisttpl
and
cmpsb
nop
loopne
xchg
jge
and
imul
adc
cs
and
pusha
cmp
mov
xchg
sahf
mov
mov
push
and
gs
push
mov
and
cmp
movsb
dec
bound
scas
into
mov
mov
hlt
and
cs
mov
and
negb
and
mov
addr16
gs
stc
push
push
mov
movsb
adc
mov
clc
sub
lods
inc
pop
xchg
das
inc
xorb
pop
mov
mov
imul
xchg
stos
xlat
sub
cmp
push
call
cmp
sub
and
sub
stos
inc
inc
adc
lahf
push
repz
je
or
stos
adc
xchg
aam
scas
out
loopne
sbb
pop
push
and
push
cmp
xchg
jne
sub
movsl
aam
ret
adc
lahf
bnd
mov
push
scas
add
push
filds
mov
and
mov
push
sub
pop
dec
mov
cmp
scas
shlb
push
lcall
mov
scas
push
int3
loope
jp
mov
popa
or
add
jne
sbb
ljmp
cmp
and
push
outsl
xchg
loopne
sub
mov
paddd
scas
inc
and
xchg
std
cmp
fsubrl
in
int3
out
enter
jl
inc
jmp
and
cli
cmp
outsl
imul
popa
xchg
ret
js
fistl
inc
cli
xor
test
inc
clc
or
cwtl
mov
xor
pop
lock
gs
and
add
inc
scas
in
lret
dec
ljmp
jle
subl
lret
cltd
mov
mov
pop
xchg
push
xchg
mov
xchg
mov
scas
pop
fwait
push
and
fimull
ljmp
cmpl
and
xor
mov
fwait
jbe
outsb
test
int3
xchg
push
push
cmc
mov
les
daa
fsubp
or
xchg
sub
sub
fsub
sub
pushf
sub
sub
xor
add
add
dec
lea
push
fmul
mov
fcompl
js
push
mov
test
add
cmpsl
xchg
sar
and
inc
jge
aas
sbb
into
dec
sbb
xchg
and
loope
mov
jle
mov
sbb
pop
xor
mov
and
insl
dec
xchg
ja
imul
push
imul
sub
cmpsl
push
pop
and
lret
inc
mov
enter
ja
shll
lods
cmp
inc
test
popl
cmp
and
loop
mov
and
stc
pop
or
dec
rcll
and
push
jns
imul
hlt
mov
test
jmp
pushf
loope
adc
and
out
ret
push
and
addr16
and
mov
shll
aaa
xchg
lods
pop
and
ret
adc
jno
and
adc
dec
sub
jl
and
pop
add
and
and
js
pop
xchg
stos
das
push
in
mov
inc
mov
in
push
pop
push
ret
rorb
mov
loope
xchg
ss
pop
cmp
jo
repz
sahf
dec
xchg
jno
and
subb
mov
roll
ret
cmp
and
loop
and
jecxz
and
cltd
pop
inc
fcmove
push
cmp
and
mov
ss
and
and
shll
lahf
pop
popa
stos
int
mov
fistps
and
idiv
repz
sarb
sbb
testb
jmpw
gs
lret
fdivrl
cmp
mov
adc
dec
pop
cmp
xor
xor
shr
xchg
and
and
sbb
fwait
jno
popa
ffreep
aaa
cmp
mov
and
inc
sbb
and
cmp
inc
and
test
or
std
arpl
ret
xchg
and
daa
pop
push
rorb
lahf
and
or
mov
add
sbb
sahf
cmp
or
sbb
add
ds
push
mov
mov
push
fbstp
test
pop
cld
in
xor
pop
push
movsb
and
je
and
in
pusha
sti
lds
inc
movsb
pop
out
dec
sub
and
test
bound
fs
cmp
push
and
or
shll
mov
divl
lahf
mov
shlb
jmp
pop
jle
sub
mov
cmp
repnz
ljmp
and
xor
adc
mov
and
stos
jp
inc
insl
lret
imul
push
outsl
cmovs
sub
lcall
outsb
jae
test
inc
and
test
xchg
imul
cmc
std
xchg
cmp
arpl
cmpsb
fbld
mov
pop
lea
in
adc
popa
mov
lock
dec
mov
arpl
add
xor
xlat
popa
inc
cwtl
aaa
out
adc
pop
or
jmp
sbb
movb
inc
push
imul
pop
test
js
sbb
popa
dec
rcrl
mov
pop
fnstenv
and
repz
or
lock
dec
into
shll
arpl
jbe
fsincos
std
jecxz
in
and
xchg
adc
pushf
ret
stos
insl
pop
mov
test
and
aas
xchg
jmp
and
fdiv
push
test
rcr
pop
andl
pop
dec
clc
cwtl
fsubp
cmp
imul
mov
mov
push
xchg
pop
iret
mov
dec
popa
mov
lods
push
and
jmp
cmp
out
inc
inc
mov
decb
xor
bound
sub
outsb
lcall
stc
adc
dec
mov
js
mov
or
imul
mov
xlat
in
and
rorl
push
or
push
cmp
mov
movsb
out
xor
dec
or
and
adc
push
sbb
and
lds
mov
jns
jnp
mov
js
and
or
into
xlat
xchg
dec
popf
inc
cmp
jns
movsb
push
mov
pop
xor
sub
xchg
and
lcall
lcall
jno
adc
aaa
push
cs
lcall
cwtl
loope
pop
xchg
arpl
fs
push
and
cwtl
lcall
xorb
cmp
lret
jmp
dec
and
and
mov
add
dec
iret
fcoms
and
sub
sbbb
adc
jge
cmpsb
mov
xchg
pop
sub
adc
and
ret
out
iret
mov
lock
push
mov
ds
inc
ljmp
dec
and
aas
lock
mov
lea
movsb
xchg
scas
or
jne
mov
lahf
add
xchg
mov
popf
cmp
fadds
lret
out
mov
xchg
sub
and
fdivl
and
fsubrs
pop
scas
and
jbe
movsb
xchg
nop
and
addb
sarl
hlt
and
lret
dec
insl
pop
sbb
or
out
aas
mov
jecxz
push
mov
sbb
jmp
mov
test
inc
mov
jp
mov
scas
ret
pushf
clc
lock
and
inc
xor
int3
adcl
movsb
imull
hlt
loop
fnsave
sub
push
mov
adc
xor
pop
sub
mov
mov
cltd
push
jge
push
jmp
outsl
add
call
inc
test
push
stc
pop
mov
inc
imul
pop
and
sbb
xchg
xor
pusha
lock
push
and
andl
xor
pop
in
fimull
and
add
adc
jne
lock
xor
outsl
cltd
stc
xchg
hlt
xorb
insb
mov
pop
and
xchg
mov
mov
enter
fnstcw
loop
orl
mov
push
aaa
xchg
and
dec
and
mov
push
ret
and
inc
inc
leave
mov
and
adc
lcall
mov
pop
push
push
mov
mov
or
lcall
pop
jmp
dec
mov
repnz
and
int3
jae
or
mov
mov
cmpsl
popa
add
jmp
imul
jnp
add
fcoml
test
sub
mov
and
cmpb
getsec
push
fnsave
or
repnz
loopne
cmp
imul
je
mov
mov
inc
arpl
sbb
outsb
aad
mov
mov
mov
les
cltd
popa
mov
andl
jnp
dec
xor
ret
mov
push
cmp
in
lret
push
or
mov
out
mov
sub
mov
sub
mov
xchg
testl
outsb
mov
and
sti
stos
pop
xor
mov
in
mov
lahf
inc
push
movsb
or
lods
frstor
jns
sbb
mov
mov
mov
and
lds
and
fildl
scas
comiss
scas
lcall
inc
out
or
and
and
lahf
pop
xchg
and
in
aam
lods
jecxz
ds
inc
adc
stos
sbb
pop
and
das
xchg
mov
and
mov
aaa
mov
sbb
jge
mov
les
mov
and
add
and
les
mov
mov
lahf
popa
dec
sub
stc
aaa
shlb
jae
pop
sub
movsb
pop
push
xor
insb
aas
and
es
test
lds
jecxz
ja
aad
stc
rorl
test
and
jno
subb
and
mov
ljmp
andb
call
add
test
test
jb
les
pop
add
cmc
mov
and
stos
nop
and
push
xor
push
loop
pop
dec
inc
test
in
sbb
js
push
xor
add
popa
fwait
jne
stc
and
sbb
and
inc
and
push
and
push
das
test
add
aaa
out
movsb
pop
stos
push
jmp
sbb
je
mov
mov
pop
mov
cmp
mov
fimull
push
xor
popa
jbe
cmp
mov
sub
inc
mov
cmp
pop
aaa
outsb
xchg
sub
fcomip
and
fsts
or
pop
icebp
insl
sub
jnp
push
xor
in
test
aaa
mov
xchg
pop
scas
fsubs
in
and
and
ret
jno
icebp
arpl
test
mov
xchg
stc
push
mov
cs
mov
loop
inc
xchg
mov
fsts
in
js
sub
js
ljmp
push
cmp
or
stos
popa
add
inc
mov
arpl
mov
orb
push
and
shr
inc
iret
mov
xchg
and
push
cmp
jno
popa
pop
mov
jae
daa
roll
jo
lahf
and
insl
ljmp
sub
popf
xor
add
xchg
enter
lcall
push
sub
sti
lock
cmpl
popa
adc
fdiv
inc
loop
test
cmpsb
int
xor
sub
and
lahf
jno
pop
inc
and
push
push
push
mov
cmp
xchg
and
in
and
pshufw
dec
jp
sbb
inc
jmp
cmp
repz
add
jne
cmp
sbbb
andb
stos
or
and
and
shll
adc
scas
sub
cli
lret
movsl
idivl
push
mov
mov
jne
xchg
add
add
jns
xlat
lods
test
mov
mov
decl
push
pop
or
stos
fsubrs
fldenv
fmulp
and
ds
pop
ret
repnz
shlb
cmp
sbb
cmp
add
inc
pop
cmp
dec
popf
popf
mov
cltd
pop
add
and
mov
test
sbbl
sbb
out
test
test
jno
jp
sub
and
in
mov
andl
sbb
fisubs
xor
stos
fsubrs
hlt
test
and
outsb
dec
mov
int3
xchg
test
mov
popa
pop
add
aam
and
push
adc
add
mov
loope
xor
cmp
rcll
sbb
mov
addb
jne
mov
enter
xchg
dec
mov
lcall
and
cmpsl
push
andb
mov
xchg
xlat
and
and
call
jno
aam
int
cmpsb
mov
xchg
mov
cs
and
xor
add
mov
cmc
and
and
test
lods
sbb
inc
pop
insb
and
inc
iret
ficomps
shll
sti
sbb
inc
aam
sbb
jae
and
cmp
rolb
adc
mov
xchg
fdivrl
cmp
loop
jne
xor
ss
ja
lds
lcall
out
popa
mov
and
add
sbb
mov
pushf
sti
mov
pop
es
loopne
iret
je
inc
andb
cmp
sub
mov
sbbl
aaa
mov
mov
fistpl
ret
pop
mov
pop
daa
mov
mov
mov
mov
push
ds
and
out
cmp
mov
mov
mov
repnz
cmp
fisubl
mov
mov
cltd
mov
mov
and
cmpsl
pop
out
or
or
jge
inc
cld
add
mov
insl
push
mov
mov
lret
addr16
push
pop
xor
outsb
and
cli
and
jmp
lods
stc
test
das
xor
pop
mov
sub
aas
call
lea
and
or
sub
mov
dec
mov
test
stos
mov
inc
or
fists
push
fwait
sahf
mov
inc
jns
shlb
into
and
pop
mov
mov
and
movsb
shll
jecxz
cld
shrb
inc
int
mov
sbb
orl
and
sbb
or
cmp
sbb
sahf
inc
int
adc
and
push
cmp
aas
add
and
popa
xchg
pop
lcall
push
mov
sub
popa
and
out
fistl
aas
and
fildll
scas
pushl
push
and
adc
and
test
and
and
in
dec
out
in
jecxz
mov
adc
ljmp
inc
daa
add
xor
xor
inc
mov
leave
dec
out
and
cmp
cs
inc
jle
int3
push
ret
lods
mov
xchg
das
mov
shl
dec
mov
mov
clc
dec
daa
mov
and
mov
js
and
jle
cmp
pop
insl
gs
frstor
push
ds
dec
ja
mov
xchg
faddl
sbb
adc
in
cmp
ljmp
stos
cmc
leave
inc
sbb
movsb
pop
add
xor
addr16
xchg
pop
jmp
cmp
inc
nop
movsl
pop
inc
mov
and
ret
scas
mov
inc
jl
aam
and
push
lods
xor
popa
pop
sub
jb,pn
pusha
jge
add
in
cmpsl
js
loopne
mov
mov
mov
add
movsb
xchg
lods
std
adc
pop
sub
das
pop
and
call
dec
add
push
rcrb
out
pop
subl
pusha
sub
dec
cltd
stos
cmp
mov
arpl
jmp
mov
inc
push
cmpsl
iret
aaa
xor
mov
ljmp
and
push
cmp
cltd
data16
mov
jbe,pt
and
loop
loopne
pusha
inc
or
jo
jg
movsl
and
jo
scas
sub
xchg
les
dec
sbb
repz
sti
push
jmp
and
popa
test
ret
and
or
rclb
addl
dec
cwtl
mov
into
and
and
cmp
xchg
sti
adc
dec
mov
out
dec
lods
stos
out
inc
and
jl
or
mov
push
inc
adcb
mov
sbb
xchg
mov
fstps
add
mov
or
mov
push
ds
lret
xor
jle
push
jo
outsl
and
adc
mov
cltd
mov
and
jle
in
xor
iret
mov
xlat
inc
xor
pop
mov
movsb
shrb
mov
jno
lcall
cmc
push
aam
adc
mov
dec
sub
cmp
sub
xchg
mov
and
hlt
mov
repnz
mov
mov
xlat
pusha
in
and
add
fisttpll
push
test
lods
lds
pop
sarb
dec
cmp
or
mov
inc
shll
sbb
jg
and
push
jl
add
and
sbb
pop
and
rcll
ss
ja
rcll
adc
jno
and
sub
xorb
lea
pop
test
dec
jb
in
and
dec
int3
in
jmp
sbb
and
or
xchg
mov
push
xor
xor
jp
and
mov
ret
push
test
cmp
adcb
and
lsl
fmuls
mov
sub
sub
movsl
dec
or
lahf
xchg
ss
jp
cli
int3
add
das
xor
push
mov
cmp
sti
jg
dec
jg
or
push
lret
fiaddl
std
sub
push
lahf
xchg
mov
sti
jg
sahf
fwait
test
ljmp
loopne
aas
rep
pop
lahf
xor
mov
push
push
cli
insb
shlb
push
push
push
inc
lret
in
mov
movsb
js
jb
movsl
cld
push
popa
jmp
outsl
xchg
sub
mov
test
and
gs
leave
xchg
push
push
outsb
pop
hlt
test
dec
rcrb
sbb
les
push
fadd
mov
lret
pop
jecxz
xorl
and
inc
jo
sbb
mov
and
and
jecxz
test
push
inc
nop
fs
inc
mov
fidivrs
mov
out
pusha
mov
or
mov
cmp
xlat
cmpb
pop
data16
popf
sub
fs
sahf
fcmovnb
pop
repnz
movsb
lcall
push
adc
cmp
inc
cmc
enter
aaa
daa
add
mov
mov
andl
out
jns
stos
call
popf
movsl
pop
jae
and
mov
and
jno
push
and
jns
imul
call
ja
popa
loope
repz
or
lahf
pop
addl
icebp
pop
sub
adc
sub
cli
loope
xchg
sub
lcall
fdiv
inc
mov
and
mov
lret
sub
xchg
push
xor
arpl
push
pusha
pop
mov
jmp
testl
mov
or
ret
movsb
lcall
jle
sbb
sar
jo,pn
jo
sub
int3
pop
adc
or
fidivs
pop
cmc
fwait
lods
and
andb
dec
pop
xchg
scas
cmp
stc
aad
out
popf
pop
sub
and
cmp
pop
int
mov
call
pop
mov
iret
mov
cltd
dec
lods
stc
leave
ds
or
jns
and
jmp
or
mov
iret
pop
popa
call
mov
pop
jg
push
and
push
daa
jno
inc
jge
and
sbb
and
aam
xor
or
movsb
jnp
dec
loopne
in
ret
and
das
lret
popa
pop
bswap
fadd
mov
popl
jge
adc
and
cmp
insl
and
jmp
and
push
cmp
and
loop
lods
movsl
lods
je
sbbl
mov
cmp
js
or
leave
adcb
mov
jmp
lods
inc
mov
fucomip
pop
add
lea
mov
push
and
and
mov
and
lock
movsl
sub
and
and
jge
xlat
xchg
aam
and
lds
adc
sub
mov
bound
adc
cwtl
mov
pop
xorl
and
cmpsb
adc
ss
shrb
jmp
sbb
cmp
xchg
lods
mov
imul
jb
jmp
and
mov
sar
pop
xor
mov
xchg
cmp
pop
shl
mov
cld
in
mov
and
push
mov
and
js
pushf
and
xor
and
mov
in
movsb
inc
and
sub
out
fwait
mov
rep
notl
in
push
popf
dec
popa
sub
pop
pop
xlat
sbb
jb
inc
not
add
mov
pop
roll
mov
add
xlat
mov
loop
orl
mov
add
cmpsl
hlt
jl
cmp
out
and
jns
rorl
sbb
loopne
jle
or
pop
and
fidivl
inc
jl
inc
fldenv
sub
cmp
pop
dec
pop
fistpll
fcoms
xchg
pop
sahf
inc
jle
mov
mov
or
and
sub
xchg
jge
xchg
lods
dec
mov
and
dec
push
int
and
jp
and
addl
imul
in
push
cmp
ja
xor
fbld
push
mov
pushf
test
pop
cwtl
jo
adc
sbb
sub
mov
sub
mov
in
bound
fnstcw
lods
sbbb
cmp
cmp
cmp
xor
test
push
and
adc
and
inc
enter
and
sub
push
out
and
pusha
outsl
jmp
es
pop
mov
and
movl
mov
xchg
sbbl
mov
xchg
push
pop
and
hlt
inc
dec
and
dec
popf
push
jno
imul
dec
add
lock
outsl
push
andb
dec
xchg
ror
and
xor
sarl
and
and
sbb
aam
mov
and
repz
and
pop
lcall
add
mov
popf
aaa
and
jbe
xor
js
and
xor
or
test
in
xor
jb
inc
pop
and
imul
mov
and
pop
push
scas
push
xor
and
mov
bnd
lods
adcl
mov
in
push
xchg
sub
sub
andb
or
add
add
and
hlt
mov
bound
or
int3
test
and
mov
xchg
push
mov
js
xchg
fisttpl
and
or
and
in
imul
mov
iret
popf
shrb
jl
jns
sub
and
es
cld
arpl
xor
bound
xchg
mov
and
lods
jo
and
cmp
pop
fsubrs
or
xchg
rcll
add
test
mov
cmp
jns
arpl
and
ljmp
test
xor
xchg
movsb
je
mov
loope
popa
or
xlat
and
pop
mov
cmp
mov
and
andl
into
sub
int3
push
movsb
pop
and
adc
stos
inc
ljmp
cld
jp
sbb
jae
xor
outsl
lahf
sbb
js
adc
hlt
dec
dec
mov
dec
push
and
ficoml
and
inc
xchg
stc
adc
xlat
and
and
fistpll
add
or
test
cli
cmp
lret
mov
xchg
out
mov
shll
add
inc
xchg
inc
in
xor
xor
cmp
mov
or
cmp
das
xor
and
fildl
stos
fs
lcall
cmp
xchg
das
adc
jne
adc
lcall
repnz
jmp
js
jl
and
or
and
push
icebp
sub
sub
imul
fsubr
mov
hlt
addl
inc
divl
pop
and
mov
adc
mov
jecxz
and
cli
cmp
push
je
push
movsb
repz
and
punpcklbw
and
pop
aas
and
or
and
jl
lods
and
cmp
mov
lds
insl
xchg
and
ss
pop
mov
test
outsl
scas
cmc
cld
mov
fldl
xchg
adc
int
xlat
pop
cmp
mov
and
icebp
xor
sbb
jno
and
or
push
incb
push
lcall
sbb
fisttpl
clc
outsl
cltd
xchg
shll
sub
jnp
push
stos
push
and
mulb
sbb
lock
cmp
lahf
jg
and
and
ja
lret
mov
hlt
dec
sbb
xor
push
xchg
clc
and
sbb
mov
cmp
jecxz
or
aas
mov
leave
and
push
jno
sub
adc
mov
xchg
xor
cld
add
sbb
adc
jecxz
push
data16
sbbl
scas
mov
jle
popa
stc
addr16
or
lret
jbe
fisttps
daa
push
cltd
xor
shlb
pop
cmp
push
fisubs
outsb
aad
int3
into
in
and
ljmp
or
roll
test
cltd
popa
xchg
in
xchg
and
and
and
jns
jo
xlat
sahf
mov
out
push
fisubrs
jno
add
pop
dec
jg
lds
sub
sub
fisttpll
enter
pushf
mov
imul
xchg
addr16
shlb
ja
mov
adc
jne
mov
std
icebp
sahf
out
scas
test
enter
mov
iret
aaa
shll
sti
jbe
jp
scas
mov
addb
mov
and
sbb
xchg
sub
inc
mov
in
mov
loope
aad
push
mov
and
sbb
xchg
xor
push
mov
in
in
jg
adc
cmp
mov
jns
push
lret
mov
test
subl
sbb
aas
inc
mov
js
inc
and
adc
je
and
or
jmp
push
sbb
and
sub
fsub
jmp
lahf
aas
ret
jle
bound
pop
in
cs
push
addl
fwait
xor
mov
ljmp
icebp
mov
jae
pop
and
pop
jo
or
in
imul
push
push
fsts
and
out
call
cld
xor
lret
and
xor
dec
in
cmp
inc
jmp
movsl
cmp
fadds
and
mov
lea
xchg
fdivs
pop
sbb
sub
xchg
movsl
and
aas
push
lcall
pushf
inc
jge
sbb
mov
ret
sub
pop
je
and
imul
mov
rcrb
xlat
mov
adc
pop
cmp
adc
lahf
jge
outsl
loop
stos
aaa
sbb
sub
xor
push
mov
and
rcrb
cmp
and
test
push
mov
inc
mov
daa
imul
mov
cmpxchg
add
movsb
and
dec
and
shll
push
int3
ret
xchg
jbe
loop
xchg
adc
jge
and
or
jecxz
mov
ss
repnz
scas
dec
mov
and
sub
inc
mov
and
add
inc
iret
add
aam
pminub
xchg
mov
pop
insb
je
add
push
fstpt
out
push
add
sub
mov
ret
cld
and
movsb
mov
mov
mov
mov
scas
and
mov
in
and
add
in
lret
dec
and
jl
inc
pop
adc
inc
test
and
adc
cmpsb
popa
inc
pop
push
sub
push
mov
jb
xchg
sbb
movsb
push
int3
sub
js
or
mov
faddl
aas
sbb
mov
mov
add
push
xchg
and
in
xchg
mov
movsb
mov
inc
lea
cmp
xchg
out
outsb
loopne
sub
or
aaa
mov
fcomp
and
pop
mov
and
and
and
jle
sbb
pop
pop
and
adc
and
mov
mov
cmp
and
lods
movsb
or
pusha
push
and
in
pop
cmp
cmpsb
and
int
jge
mov
shll
sbbl
adc
enter
and
rcrb
inc
sbb
push
mov
arpl
xor
popf
and
popa
pop
sub
inc
jl
movsb
je
cmpsb
pop
cltd
ja
pop
inc
and
fsubrl
and
int
jg
and
ss
mov
pop
or
ja
sub
or
pop
mov
test
cltd
loope
inc
mov
jmp
outsb
rcll
ss
loope
and
mov
cwtl
jmp
xchg
test
inc
outsl
add
push
pushf
jns
mov
and
xchg
popf
divl
and
hlt
pop
jne
dec
js
and
inc
push
fcom
mov
movsb
adcl
xchg
lret
fnstenv
jo
insl
aad
bnd
jnp
mov
pusha
roll
rcr
stos
leave
ja
movsb
push
subb
das
and
push
cli
lock
aad
sbb
cltd
movsl
jecxz
mov
jne
cwtl
es
out
dec
aas
add
call
jg
jbe
push
and
mov
jne
and
sbb
cmpb
pop
ret
mov
aas
mov
dec
pop
gs
dec
je
adc
mov
lahf
jae
sub
ljmp
shl
adcl
cltd
cmc
jl
loopne
and
pushf
mov
cmpsb
and
inc
loopne
and
pop
cmp
cs
or
sbbb
xchg
insl
aas
movsl
mov
and
adc
shlb
in
fwait
inc
imul
inc
mov
pop
mov
and
aad
xor
movsl
dec
adc
inc
and
pop
das
cmp
and
add
and
in
cli
and
and
push
arpl
out
push
xor
cmp
sub
push
rolb
and
rorb
mov
aaa
cmp
add
jns
test
adc
cmpsb
jbe
scas
sti
lcall
xchg
ret
and
pusha
push
jnp
cmp
and
mov
and
lods
int
lock
inc
mov
xlat
test
jge
push
and
mov
ss
or
mov
jnp
aas
pushf
push
sbb
mov
shll
andb
shll
mov
out
int3
loop
outsl
xlat
push
sbb
sbb
xor
lahf
mov
mov
fisubrl
and
xchg
fldenv
push
rcrl
push
hlt
test
outsl
push
das
rcrl
jo
dec
cld
jno
or
movsl
cmp
push
cmp
xchg
inc
test
rcrl
fld
cltd
movsl
mov
sub
popa
adc
lret
cmp
ljmp
jecxz
inc
loope
mov
loopne
addb
mov
adc
mov
test
mov
pop
fcomps
std
inc
test
mov
mov
dec
stos
movsb
mov
mov
or
and
and
xchg
fdivl
loop
add
shrb
cs
sahf
and
fdivrl
add
aas
xor
inc
or
mov
push
das
sbb
and
push
cmp
and
out
aad
addr16
pushl
inc
and
xchg
out
adc
dec
cli
inc
arpl
outsl
mov
adc
mov
dec
pushf
fsubp
push
ss
mov
popa
dec
fwait
addr16
dec
and
xor
and
mov
jo
in
sub
dec
mov
int
mov
and
xchg
mov
inc
les
popf
fistpll
xchg
fs
cmp
xchg
pop
mov
test
and
sbbl
inc
iret
sub
mov
push
dec
xchg
cld
enter
adc
sub
shl
jbe
or
call
inc
sub
mov
add
xor
and
insb
in
push
mov
pusha
inc
or
and
cltd
mov
arpl
push
and
sub
gs
cmp
sub
dec
and
shl
xorl
cmpsl
jp
mov
dec
dec
pop
and
xchg
or
or
arpl
fisttpll
push
fcmovnb
cltd
or
stc
cld
adc
cwtl
inc
jge
and
push
outsl
xchg
jp
pop
sbb
mov
cmp
lock
push
and
insb
push
push
gs
divps
mov
pop
loopne
stos
mov
mov
mov
xor
add
push
xor
cwtl
out
fisttpll
int3
aam
out
pushl
jle
pop
jno
lcall
dec
movsb
bound
and
dec
out
dec
nop
fiaddl
aaa
jns
pop
push
mov
push
ds
adc
lcall
push
push
jnp
xor
fwait
and
push
aam
sub
and
bound
cmp
jecxz
and
xchg
mov
jl
inc
rcll
sub
fsubl
cld
rolb
push
adc
popl
jns
popa
sbb
and
mov
iret
cmp
ljmp
xor
ret
xchg
push
ja
or
in
icebp
pop
mov
fwait
sbb
mov
pop
sub
and
stos
imul
pop
mov
in
sub
sbb
mov
imul
daa
sub
lods
or
call
test
movsb
xchg
add
mov
pop
movsb
xchg
imul
and
addl
sbb
sub
femms
test
repnz
or
mov
lcall
xor
into
lock
xchg
and
add
mov
movsb
jecxz
sbb
sti
inc
pop
loop
pop
and
les
fisubrl
ds
insb
loop
push
pop
popa
das
jge
adc
cmpsb
and
xchg
in
mov
sbb
and
push
into
faddl
and
sbb
arpl
filds
cmpsb
stos
and
aad
fs
adc
or
mov
pop
bound
and
jno,pt
lret
mov
pop
adc
test
and
leave
xor
or
ss
jle
push
out
test
lea
popf
out
inc
outsl
jne
or
cmc
iret
sbb
push
test
jmp
inc
cmp
and
add
cs
push
dec
adc
xchg
inc
mov
push
loopne
and
outsl
sahf
and
dec
add
aam
insl
sbb
hlt
aaa
fisubl
xor
jno
icebp
test
xor
out
xor
cmp
mov
mov
dec
sbbb
inc
test
and
mul
mov
cltd
testb
and
outsl
pop
cmc
ret
sbb
and
loop
test
aas
cld
add
sbb
xor
mov
rcr
pop
repnz
and
test
insb
dec
and
outsb
sbb
and
fdivrs
lcall
mov
dec
fwait
jecxz
shll
mov
adc
cwtl
pop
ds
popa
test
cmp
inc
add
stos
sub
out
rcrl
mov
or
scas
pusha
mov
and
fwait
push
jge
inc
mov
jnp
mov
out
cmp
and
clc
push
pop
mov
jmp
rcrb
cmp
mov
or
mov
and
and
daa
mov
xchg
push
and
sub
stos
loop
pop
int
dec
in
jge
mov
and
lods
outsb
and
mov
and
bound
sub
inc
xchg
mov
fsubrl
push
xor
mov
push
adc
mov
mov
es
addr16
and
mov
int
push
cmp
jbe
pop
fsub
and
adc
insb
xchg
pusha
in
mov
add
les
popf
jmp
or
dec
mov
xchg
orb
push
lds
add
mov
and
push
idivl
mov
pop
and
pop
mov
repnz
test
int3
es
outsb
inc
xor
jbe
subl
xor
lret
add
sub
mov
iret
and
fisubrs
and
lahf
repz
mov
and
adc
enter
jge
shll
xchg
decb
jmp
int
fbld
pop
movsl
cmp
xchg
mov
fisubs
pushl
mov
mov
repnz
test
out
add
push
mov
inc
in
push
shrl
cld
mov
fadds
dec
movsb
data16
sbb
or
xchg
rcr
and
xchg
xchg
jmp
mov
cli
cwtl
sbb
adc
push
and
xchg
std
repz
sti
xchg
cmpsb
sarb
jns
and
shll
popf
stc
dec
and
inc
cmp
jmp
jmp
adc
ret
push
adc
push
lods
aaa
mov
mov
push
js
jno
adc
inc
fmul
out
push
xchg
es
and
cld
pop
mov
mov
or
insl
gs
popa
test
and
dec
jno
iret
mov
lcall
outsb
and
mov
in
in
and
xchg
popf
and
add
jg
mov
rcrb
and
test
cmpsb
ret
adc
or
push
rclb
push
jp
inc
cli
repz
jl
hlt
bound
and
mov
stos
sub
xchg
rclb
mov
sbb
and
loope
cmc
xor
lret
stos
push
cs
shl
and
lods
mov
je
cmp
test
das
mov
xlat
in
adc
push
jge
and
cmc
sahf
and
and
mov
out
popa
dec
push
pusha
push
lods
ja
mov
sub
push
mov
les
and
or
jmp
and
in
arpl
and
clc
mov
and
not
les
loop
sbb
popa
push
dec
sbb
xchg
out
xor
bound
ret
mov
adc
add
sahf
and
das
loopne
mov
mov
xchg
lods
and
fstps
xor
mov
mov
popa
and
xchg
or
mov
pop
cmp
xchg
and
or
xchg
hlt
mov
and
xor
sub
push
repnz
mov
enter
test
fsubl
arpl
sbb
insl
push
icebp
adc
mov
cmp
jle
and
push
lea
mov
test
and
pop
push
call
and
mov
jmp
inc
mov
mov
popa
aam
out
add
test
sub
dec
loopne
lcall
outsb
fwait
mov
out
cmpsl
sti
mov
jp
sarb
stos
xorl
xchg
fnstenv
jmp
sub
testl
js
insl
push
and
hlt
xchg
jmp
jo
jg
pop
test
xchg
nop
pop
pushf
and
adc
adc
test
in
jno
fcmovbe
cli
xchg
pop
mov
add
xor
mov
lds
sub
lock
sbb
pusha
push
in
add
adc
lret
and
dec
push
sub
cmpsb
and
fcmovb
cltd
sub
inc
insl
fcoml
xchg
and
fisubrs
imul
sti
iret
shlb
popa
jmp
fldcw
cmp
pushf
andl
xor
ja
inc
int3
scas
aaa
hlt
fcompl
inc
xor
orl
cmp
sti
mov
and
shlb
in
lods
xor
ret
lods
and
scas
push
xor
outsb
pushl
cmp
addb
and
je
and
xchg
shlb
cmp
cwtl
push
push
jp
mov
orl
xor
and
jle
add
sub
pop
fistl
add
add
jne
and
mov
inc
insl
push
and
xor
add
and
mov
stos
xor
out
je
pushf
mov
and
sub
ja
and
fdivl
and
mov
loop
and
and
popf
repz
mov
mov
or
sbb
mov
pop
xor
adc
inc
js
cmpsl
pop
test
roll
xchg
sub
out
and
jnp
inc
cmp
inc
int3
mov
sub
cmpsb
xor
sub
mov
mov
or
in
out
fisubrs
test
inc
test
xlat
push
dec
fists
mov
lods
imul
dec
cmp
lcall
imul
jno
xorl
cmpsb
stc
mov
pop
and
sbbl
andb
out
and
test
fildl
test
lds
cs
scas
seta
and
mov
adc
pop
inc
adc
popa
int3
insl
imul
addb
imul
loope
push
iret
dec
lret
cs
jp
inc
sub
xor
cmpsb
mov
add
fwait
popf
and
xchg
popa
mov
mov
push
xchg
ja
sub
out
xchg
mov
sahf
mov
and
cmp
insl
and
fistps
inc
les
cmp
test
enter
out
nop
jns
ljmp
mov
mov
mov
sbb
xchg
inc
push
and
fsts
hlt
dec
sbb
aaa
dec
push
and
dec
xor
and
or
and
insl
mov
fists
sub
outsl
bnd
test
mov
jne
loop
adc
sub
popa
inc
imul
jbe
fisubl
mov
cmp
inc
mov
and
xor
xlat
and
rcl
xchg
dec
and
push
pmaxsw
int3
and
add
ljmp
adc
jo
cmp
and
icebp
lds
out
arpl
push
jl
xor
out
sub
movsb
push
inc
insb
int
dec
jg
std
aad
adc
je
nop
push
xor
aaa
enter
imul
xor
mov
inc
push
pop
and
pop
rcrb
mov
aam
mov
add
jp
inc
pop
adc
add
mov
test
cwtl
add
arpl
sbb
push
aaa
mov
test
adc
push
dec
movsl
dec
mov
adc
xor
mov
loopne
aas
dec
or
test
adc
and
fistpll
cs
loopne
hlt
mov
lret
test
xor
stc
pusha
mov
mov
shl
adc
sub
and
imul
int
add
cmp
mov
nop
fisubl
mov
fmuls
jmp
pushf
mov
mov
pusha
fsub
out
lods
bnd
gs
and
cmpsl
mov
xor
add
add
fldt
inc
add
push
addl
lock
push
rcr
pop
inc
jge
fstpt
xor
pushf
pop
and
add
es
frstor
and
and
jnp
pop
jmp
out
pusha
mov
inc
add
movsl
sub
fstpt
sbb
iret
mov
popf
and
ds
fs
pop
jl
xor
je
push
mov
sub
loop
test
inc
and
inc
and
adc
mov
pusha
lahf
xchg
add
sbbb
out
lret
jle
adc
and
vmulpd
jge
pop
inc
or
lea
jle
mov
xor
adc
add
popa
or
cmc
cltd
cltd
dec
out
mov
lea
xor
dec
pop
lods
clc
fs
dec
mov
and
add
pop
rcll
xor
jnp
dec
or
and
add
adc
ficoms
test
dec
dec
push
jno
cwtl
inc
xchg
jmp
pop
pop
and
aaa
ret
mov
adc
lods
popf
and
imul
push
aaa
mov
fcmovnbe
push
lcall
in
std
push
dec
push
and
mov
fdivl
clc
popa
dec
inc
gs
sub
mov
cmp
repnz
inc
mov
or
adc
mov
jne
cmpsl
jbe
mov
popa
push
and
addl
mov
les
lahf
mov
jle
mov
pop
gs
test
fs
and
add
add
shlb
lret
mov
les
dec
push
and
lea
or
hlt
sub
test
and
cld
mov
ja
sub
adc
mov
adc
push
cwtl
lret
xor
dec
pop
fbld
adc
cli
icebp
xchg
add
sub
fwait
jns
cmpsl
pop
cmp
dec
push
push
push
pop
lock
dec
pop
shlb
adc
loope
pop
js
and
popa
adc
pushf
test
xlat
dec
mov
mov
and
lcall
les
add
int
movsb
aas
decb
pop
or
out
cs
sahf
mov
mov
das
and
sbb
mov
in
hlt
push
test
dec
and
ficomps
out
in
and
xlat
shl
mov
xchg
das
lock
sub
fildl
loope
pop
push
add
adc
adc
aaa
mov
pop
js
and
ret
std
xor
popf
aas
imul
mull
add
lcall
sbb
cmpsl
cli
pop
mulb
sbb
lahf
test
inc
fsubrl
mov
shll
jge
push
or
test
mov
and
cmp
cmp
lds
sbbb
mov
pusha
pop
push
stos
aad
mov
cmpsl
aam
and
xor
mov
and
int
stc
mov
and
cs
sti
cltd
pop
ja
test
jmp
imul
xor
in
call
jno
cmp
pop
outsb
mov
rolb
aam
imul
or
and
xor
mov
mov
insl
lcall
flds
mov
jne
testl
cmpsb
inc
cmp
std
aam
sub
ja
jbe
iret
cmp
xor
add
movsl
pop
enter
inc
add
mov
xor
cmp
cmp
lock
fimuls
imul
mov
adc
mov
in
icebp
mov
and
hlt
pushf
lahf
adc
and
mov
add
mov
adc
in
and
add
fadds
movsl
or
jae
mov
ret
push
push
mov
and
mov
fists
lea
fstl
mov
and
call
shlb
jns
xchg
outsl
and
sbb
sbb
insb
inc
push
es
in
and
pop
cmp
call
jge
jle
rolb
das
pop
and
sbb
ja
or
dec
xchg
dec
movsw
and
ret
inc
movsb
out
and
clc
dec
and
mov
lock
orl
inc
and
inc
push
pusha
and
aas
daa
ja
in
mov
jp
loopne
in
rolb
jnp
xchg
xor
mov
movsb
mov
mov
in
into
mov
ret
push
out
repz
xchg
push
dec
popf
add
pushf
imull
adc
jns
popa
in
jle
arpl
movsl
inc
fisttpll
and
push
lcall
and
in
dec
cmp
hlt
mov
das
or
sub
lret
jle
mov
outsb
movsb
jbe
xchg
lea
imul
jmp
flds
insb
int
ret
xchg
pop
js
sub
roll
cmc
pop
pop
and
adc
push
cmp
movsl
xor
pop
push
add
cs
ja
js
sub
mov
and
and
push
pusha
mov
pop
mov
mov
out
inc
movsb
sub
dec
or
imul
ljmp
mov
int3
or
orl
and
xchg
pop
aam
daa
out
and
sbb
cmp
sub
cmpsl
sti
rcll
fs
faddl
mov
lock
push
lret
pop
jne
xorl
inc
xchg
pop
jo
push
pop
and
jle
in
mov
push
xchg
in
xor
in
addb
and
ja
inc
and
push
fwait
outsl
lods
fs
xor
xchg
pop
cltd
nop
add
and
repz
pop
mov
loop
sub
arpl
push
or
xor
shrb
mov
and
jns
cmp
bound
inc
and
xor
shrl
outsb
xchg
jnp
mov
cmp
jo
push
fxch
adc
fbld
push
and
jo
lret
icebp
mov
sub
test
fistpl
lea
mov
xorl
xchg
fsubrp
sbb
jl
sub
repnz
lcall
sub
push
push
and
xchg
mov
and
repnz
les
inc
inc
inc
sub
scas
test
push
sub
pop
and
popa
and
pop
inc
repnz
xor
and
sub
and
mov
mov
lahf
aaa
test
and
adc
dec
and
std
jmp
outsb
and
call
pop
or
and
outsl
test
mov
bound
mov
cmp
and
test
push
push
sub
fcmovnu
mov
jge
and
aad
xor
imul
mov
and
pop
loop
and
mov
stos
test
dec
and
xor
and
pop
cmp
gs
and
mov
inc
loop
and
inc
and
pop
test
hlt
xchg
adc
xor
bound
fst
xor
inc
push
mov
jmp
rcrb
adc
xchg
loope
and
inc
sub
ds
and
test
inc
mov
mov
and
pop
xor
xor
xorl
movsl
out
repnz
inc
mov
cmp
stos
cmp
sub
xchg
and
and
adc
sub
xchg
inc
and
repnz
cmp
xchg
push
and
lcall
ljmp
pop
mov
sub
outsb
loop
gs
arpl
pop
loopne
jo
xchg
mov
fs
cltd
mull
out
inc
xchg
mov
mov
cvtpi2ps
out
scas
je
mov
xchg
movl
or
jno
xchg
xchg
mov
xchg
and
pop
add
das
xchg
mov
into
std
lcall
aas
movsl
push
mov
mov
add
mov
and
push
mov
push
ret
push
xor
in
fildll
push
xchg
mov
mov
popf
js
push
lcall
ss
xor
cmp
jmp
iret
insb
sbb
out
xlat
mov
sub
addr16
and
fs
mov
fdivs
and
aaa
iret
and
and
int
mov
sub
outsb
inc
fiaddl
cltd
xor
dec
and
mov
add
jmp
rcrl
nop
and
fbstp
dec
sub
inc
xchg
jle
mov
loope
push
xor
cs
mov
push
imul
jg
and
mov
stos
or
popa
into
jmp
inc
sub
dec
mov
cmp
jo
negl
pop
adc
jecxz
and
fs
into
in
xchg
mov
sar
mov
and
xchg
ljmp
mov
cmc
scas
push
and
movsb
pop
xor
mov
inc
lods
movsl
add
ja
xchg
mov
and
xor
ret
jmp
xchg
cmp
es
mov
nop
insl
fists
je
lret
frstor
mov
xor
rep
ret
sbb
shlb
outsl
inc
xchg
mov
out
push
sbb
and
loope
push
std
popf
popa
and
sub
outsb
jmp
pusha
pop
push
and
mov
pushf
pop
cli
jecxz
mov
and
mov
inc
pop
adc
mov
inc
decb
and
jmp
mov
adc
xlat
cmp
mov
add
mov
and
xchg
movsb
cltd
inc
mov
add
lahf
sbb
fcoms
in
je
sub
and
mul
or
mov
push
mov
and
jp
dec
sti
add
ret
add
mov
jno
dec
and
aad
pop
sub
lahf
dec
xor
jg
out
popf
mov
cwtl
sub
aad
mov
xor
add
es
outsl
inc
jl
mov
das
sbb
lock
test
jno
sbb
bound
xchg
and
sti
pop
mov
inc
cmpsl
and
fisubrs
aad
outsl
and
mov
loope
cltd
cwtl
mov
push
inc
insl
cmp
dec
jbe
cmp
mov
push
push
cltd
scas
cld
and
arpl
xchg
inc
ret
mov
inc
add
and
fdivl
das
pop
insl
orl
into
sbb
movsb
lds
sub
pusha
xor
les
xchg
bound
mov
sub
and
bound
dec
mov
add
push
dec
and
jecxz
inc
cmp
jmp
add
cmp
mov
and
or
or
inc
and
sub
pop
and
mov
push
fnsave
mov
mov
mov
ljmp
bound
shlb
icebp
adc
xchg
and
and
jl
lds
ds
jns
jnp
js
int3
and
sub
nop
xchg
push
aaa
shlb
sahf
pop
and
and
loope
mov
jb
push
and
insl
and
adc
dec
mov
stc
jo
mov
and
adc
dec
mov
test
inc
adc
jp
fnsave
in
xchg
push
pop
jae
and
sub
xchg
in
inc
sbb
sub
jns
pop
jns
notb
subl
lcall
stc
push
dec
sub
and
push
ja
out
mov
sub
xor
and
pusha
addb
repnz
pop
cmc
push
jg
jmp
and
push
adc
bound
jle
sarb
rclb
xor
and
loope
sbb
aam
cmp
dec
add
popf
scas
cmp
jp
fisttpl
xor
mov
loopne
and
or
adc
push
inc
xor
sahf
mov
mov
xchg
or
test
xchg
mov
fildl
mov
xorl
fldenv
pop
ss
test
or
and
lods
sub
and
ret
cmpsl
or
jge
jmp
jg
mov
and
shrb
and
daa
xor
repz
mov
pop
ret
loop
jno
pop
pop
stos
cli
sub
mov
stos
aam
insl
jns
sub
call
mov
jecxz
inc
insl
nop
rcrb
jge
or
cmp
andb
xor
popa
cmp
push
cmpsl
sti
push
daa
decb
cmpsb
stos
je
xor
mov
test
mov
add
popa
loop
mov
std
push
das
pop
out
inc
scas
lret
dec
loope
mov
stos
fisubrl
dec
popa
jge
popf
enter
cs
mov
pop
fidivs
ljmp
xchg
lock
xor
mov
pop
rcll
cmp
loopne
jb
inc
pop
cs
dec
movsb
xchg
aam
mov
inc
test
lods
and
cmp
jo
xchg
xlat
adc
popa
push
fstsw
sub
pop
jbe
and
cmpsb
push
pop
sub
pusha
and
mov
out
and
push
xchg
andb
lcall
and
mov
mov
xchg
xor
mov
xchg
inc
scas
test
ret
sbbl
mov
xchg
adcl
and
imul
push
lahf
sahf
stos
into
fnstenv
and
jmp
pop
fwait
shll
jmp
xor
jnp
aas
out
movsb
fdiv
mov
and
lahf
cld
and
test
xor
lds
xchg
adc
mov
cmpsb
out
adc
mov
add
fcompl
insb
pushf
in
inc
pop
scas
mov
shl
jno
or
and
push
loope
dec
gs
aam
in
add
popf
fadds
filds
jle
sub
arpl
and
shlb
push
mov
inc
pushf
mov
push
ret
sti
sbb
lcall
mov
mov
sbb
int
and
roll
mov
lock
insl
fxtract
call
lea
rorl
mov
insl
xchg
and
imul
rcrl
into
test
hlt
movsb
pop
push
adc
and
lahf
jmp
jge
orl
lods
out
mov
rcll
imul
mov
lds
popf
inc
nop
mov
aaa
xchg
stos
or
movl
mov
lods
push
push
fisubrl
mov
mov
xchg
push
imul
and
lret
es
out
xlat
push
mov
add
mov
imul
popa
scas
leave
stc
mov
push
out
inc
xor
je
and
dec
movsb
dec
in
movsl
aam
jmp
and
cmp
xor
insb
jae
mov
or
jg
shlb
movsb
cmp
xchg
cmpsl
pop
xchg
push
xor
aas
ret
lcall
inc
xchg
sti
ljmp
stc
xchg
popa
adc
stc
pop
fcoms
out
or
mov
adcl
dec
mov
inc
imul
sbbl
mov
mov
faddl
mov
and
xchg
nop
lcall
mov
inc
dec
xchg
push
imul
xor
daa
mov
fidivs
dec
pop
mov
xchg
sysret
push
fistpl
and
ret
scas
clc
aad
adc
or
fdivrl
cld
cmc
aaa
jnp
and
jno
jmp
and
xor
arpl
leave
sahf
and
shl
push
int3
aaa
sbb
mov
pop
shlb
xchg
xchg
mov
xor
pop
inc
and
mov
insl
cld
and
popa
aad
movsb
mov
inc
lret
js
xchg
les
add
jns
in
jae
ljmp
inc
das
inc
in
push
inc
mov
cltd
and
jns
pop
mov
jno
ret
movsl
fisttpl
mov
mov
ss
out
and
mov
and
mov
adc
ret
and
in
xor
testl
enter
push
and
call
and
and
test
pop
jae
aaa
sub
inc
popa
orb
and
test
pop
movl
adc
popa
add
popf
pop
inc
xchg
test
lret
out
cmpsb
sub
fisubrl
addl
dec
aas
aaa
cmpsb
and
int
fildl
and
mov
cmp
and
aas
sub
loop
test
stc
mov
cmc
mov
dec
push
inc
mov
aam
sbbl
mov
jae
xor
enter
and
rorb
mov
sub
aaa
jg
pop
sub
and
mov
fisubs
shl
shrl
stc
mov
popf
leave
mov
loope
xchg
out
mov
adc
dec
testl
push
xchg
and
hlt
pop
stos
jg
cmp
and
fdivl
mov
pop
xchg
je
mov
and
sbb
bound
and
mov
andl
inc
aad
dec
lcall
dec
jne
mov
loop
movsl
jle
jno
pushf
adc
iret
xchg
shlb
add
rclb
test
gs
xchg
scas
mov
sbb
xorl
mov
jge
and
fsubrs
daa
fucomp
fisubl
orb
test
push
pop
or
shlb
push
cmp
sar
and
pop
push
into
and
shr
jl
fbld
and
cmp
stos
insb
jno
inc
inc
and
pop
loope
cld
push
nop
push
push
cmp
mov
mov
outsl
arpl
mov
daa
data16
push
shr
inc
mov
xor
sahf
shll
jbe
hlt
movb
mov
jo
sub
push
sub
loop
and
and
dec
jnp
inc
incl
add
imul
jae
arpl
js
in
push
inc
xchg
pop
daa
mov
mov
push
xchg
pop
fsubs
dec
cmc
dec
push
pop
sbb
and
lea
in
xorl
decb
inc
mov
test
cmpsl
and
sbb
jbe
cli
push
mov
cltd
in
jecxz
pop
cmpsb
sbb
out
in
push
and
or
fadds
and
fisubl
lock
dec
adc
and
je
dec
inc
mov
jae
sub
xchg
lods
mov
push
imul
jnp
aam
sub
test
add
test
pop
push
and
outsl
add
dec
lea
jecxz
ret
iret
and
dec
int3
xchg
sub
xchg
movsl
and
and
call
and
cmpsl
mov
and
pop
xor
fldcw
or
sub
push
jl
into
mov
xor
mov
fsubrp
popa
and
lret
andl
dec
scas
ss
arpl
es
mov
adc
outsb
and
xchg
and
bound
sbb
push
movsb
fsubr
mov
and
int3
jecxz
lcall
pushf
dec
and
mov
jmp
xchg
pop
out
jecxz
or
and
cmpsb
fcoms
xlat
and
insl
sahf
jnp
mov
sub
mov
adc
in
mov
sub
and
dec
insb
and
lea
mov
mov
add
xorb
adc
dec
xchg
jae
xchg
in
fidivrs
movsl
mov
outsb
pop
mov
jb
or
pop
mov
rorl
int
sub
mov
lret
mov
stos
pop
movsb
pop
inc
loop
and
xchg
fmuls
push
das
in
sbb
mov
push
sbb
mov
movsl
dec
jmp
fcmovnbe
out
into
and
xchg
dec
adc
sbb
add
push
jbe
sbb
andb
ja
jle
add
lahf
dec
repz
mov
stc
divl
adc
mov
mov
mov
lea
and
outsl
xchg
ss
pop
sahf
pop
and
jbe
push
jmp
mov
or
int
fwait
dec
and
sahf
xlat
test
stos
gs
cmp
icebp
xor
popa
and
xor
mov
out
mov
and
sub
sub
mov
or
into
sbb
and
sarb
mov
mov
sbbb
outsl
xchg
mov
mov
jns
cmp
popa
es
dec
pop
js
inc
sarl
adc
outsb
and
push
test
mov
daa
push
andl
and
or
in
or
sbb
xor
lods
pop
jne
and
dec
aad
and
imul
mov
and
push
push
fbld
jno
test
sarb
out
inc
lcall
mov
test
mov
or
and
aaa
andl
xor
popa
pop
cltd
icebp
or
and
or
sub
sbb
jle
in
push
test
int3
jo
xrelease
test
dec
inc
das
cmp
call
and
jl
mov
pop
inc
ja
jle
push
xchg
and
ds
loopne
pusha
mov
int
add
inc
ficompl
shll
out
pop
scas
movsl
out
fstl
and
dec
fwait
arpl
push
mov
sub
aas
jmp
jecxz
dec
add
mov
dec
mov
sbb
repz
and
mov
push
jge
data16
and
pop
cwtl
test
or
hlt
gs
imul
and
decb
popf
pop
dec
scas
push
aas
pusha
mov
and
cmp
or
sbb
stos
push
faddl
xchg
insb
and
ret
inc
mov
sarb
cmp
test
cmpsb
rep
inc
filds
iret
dec
or
jno
mov
les
popf
pop
pop
and
jge
rcrl
mov
cmp
movsl
mov
push
movsb
add
xor
fiaddl
cmp
sbb
imul
bound
div
adc
or
into
pop
fiadds
in
daa
and
cmpsl
jns
hlt
test
or
dec
pop
gs
adc
xchg
mov
push
in
stos
cld
shrb
ss
bound
and
aas
ja
inc
outsb
jne
insb
cmp
aad
or
and
fdivrs
scas
cmp
inc
mov
and
outsl
loope
sub
sub
mov
out
movsl
sbb
sbb
and
push
inc
push
mov
mov
aad
popf
pop
in
mov
adc
aaa
dec
test
loop
inc
and
sub
push
jnp
mov
pop
pusha
add
xchg
mov
cld
das
out
sub
mov
and
xchg
xchg
ret
out
xorl
add
mov
popa
sub
xor
popf
gs
movaps
adc
pop
and
stos
sub
fdiv
and
lea
sub
adc
xchg
inc
lcall
fwait
sub
mov
aas
pop
adc
and
lret
cltd
mov
gs
pop
dec
or
mov
cmp
push
sti
inc
leave
and
mov
fwait
lret
fists
pop
mov
popa
push
fadd
and
outsb
inc
mov
inc
inc
jnp
into
and
lcall
sbb
sbb
inc
jecxz
and
clc
xchg
dec
inc
aaa
add
inc
and
mov
inc
and
and
sbb
gs
and
xchg
fsubl
sub
adc
and
jmp
mov
mov
test
iret
stc
in
mov
roll
and
cmpsl
dec
mov
in
or
icebp
and
add
gs
dec
and
or
push
in
mov
xorl
and
aad
cmpsl
cmp
and
loop
push
mov
test
inc
and
imul
and
les
movsl
into
xor
test
mov
push
and
dec
rol
cmpl
ljmp
push
mov
inc
insl
test
fistl
scas
mov
ret
cld
lcall
add
sbbb
pusha
sub
jecxz
dec
or
out
ljmp
aam
inc
fdiv
jo
movsb
inc
and
xchg
push
leave
dec
and
cmp
and
shll
enter
mov
xor
ds
daa
xchg
xor
and
ja
mov
notb
repz
popa
fcmove
push
and
fdivs
sub
les
jns
shlb
jecxz
imul
cmp
push
movsl
and
out
imul
dec
bound
lret
in
jmp
cmpsl
push
sbbb
sbb
jns
and
pop
fdivrs
movsb
cmp
ds
out
cmp
xlat
mov
mov
mov
scas
sbb
icebp
cmp
xor
sbb
jns
xor
pop
movsb
lds
outsl
adc
mov
adc
repz
iret
jle
jp
js
and
fldenv
xchg
push
in
sbb
insl
insl
dec
mov
pusha
mov
xchg
test
mov
das
xchg
sub
int
les
mov
and
decl
cmp
test
test
imul
pushaw
pop
dec
leave
push
jp
mov
sti
out
nop
or
cs
aad
loop
lds
addps
mov
mov
cmpsb
xchg
adc
decb
jmp
in
shrb
repnz
aaa
and
mov
sbb
fstpl
lret
xchg
shlb
stos
xor
mov
repnz
into
sbb
jbe
inc
cmp
cmp
addb
adc
out
lea
in
push
jl
push
push
imul
bound
insl
and
push
lahf
xchg
and
mov
and
hlt
lods
mov
daa
mov
cs
dec
enter
push
lea
scas
jns
push
xor
and
js
mov
sbb
or
stos
outsb
sub
frstor
into
daa
testl
xor
imul
pop
mov
or
mov
jg
loop
jne
call
in
and
sbb
pop
shll
sub
and
jle
mov
mov
push
popa
add
test
jl
popa
dec
sub
and
adc
jle
pop
jecxz
fbld
jl
sbb
or
loope
add
test
std
aas
jne
mov
or
mov
sbb
rcrl
dec
and
xchg
xchg
sub
mov
in
xlat
inc
popa
jne
jb
js
push
xchg
mov
cmpsb
movsl
adc
adcb
movsl
mov
jg
mov
pop
sbb
test
push
pop
call
ds
popa
mov
int
and
jg
scas
ret
jb
and
sub
xorl
out
mov
mov
cli
lcall
movsb
dec
add
loope
sbb
or
je
xchg
ja
call
adc
pop
and
add
addr16
sbb
and
mov
pop
add
in
test
or
jno
pusha
ja
and
sbbl
sub
enter
dec
mov
popa
test
fiaddl
xchg
dec
jb
add
xchg
mov
jnp
add
cs
mov
cmc
lret
fwait
testl
daa
popa
dec
xor
xchg
gs
push
jmp
and
dec
clc
or
in
daa
pop
lahf
mov
or
mov
insl
add
movsb
mov
jbe
lret
xchg
orb
and
test
mov
mov
xor
mov
jo
cmpsl
subl
and
icebp
cmp
pusha
and
pinsrw
and
test
push
lret
xor
dec
popa
dec
push
and
movsb
jnp
mov
jb
or
hlt
dec
adc
xchg
scas
dec
and
mov
scas
jp
cmc
mov
push
lods
push
bound
mov
daa
sub
and
js
das
jno
xor
movsb
fidivl
mov
and
imul
push
cmp
ret
xchg
or
jae
add
mov
sub
and
dec
or
cmpsl
jecxz
test
pop
popa
call
fcoml
test
popf
xchg
out
lock
sbb
mov
xor
pop
push
and
std
jnp
and
push
adc
popf
xor
and
mov
jg
push
scas
dec
jmp
rorb
dec
popa
xchg
jne
mov
and
loope
hlt
and
xchg
aad
adc
scas
and
addr16
mov
pop
jbe
jb
andl
fsubs
mov
add
cltd
cmp
and
rcl
loop
pop
pop
mov
push
and
orl
scas
nop
mov
pop
or
fisttps
jg
sbb
addr16
cmpsb
in
imul
sahf
push
sbb
cwtl
les
add
int
mov
ljmp
mov
sub
dec
and
test
js
int3
mov
xchg
mov
fsubrl
mov
test
rorb
push
mov
ret
daa
dec
cmp
jno
sahf
enter
imul
mov
xchg
int
bound
repz
sbb
jmp
and
je
movsl
or
and
ds
lea
push
xchg
fldt
pop
jns
push
std
pop
divl
and
lcall
hlt
fbstp
insl
cmp
sbb
cmp
jle
xchg
mov
leave
scas
push
or
mov
xor
push
dec
mov
leave
xor
cwtl
sbb
aas
scas
movsl
ret
mov
xchg
mov
inc
fsubl
in
mov
push
movb
out
and
popf
pop
mulb
shll
cmpsl
add
fucomip
adc
push
andl
xor
fstp
and
aam
arpl
mov
lds
insl
pop
mov
movsl
pop
mov
out
inc
jge
popf
popa
and
jno
fwait
daa
mov
lret
fstp
pop
movsb
mov
add
sbb
dec
or
xchg
cmpsb
outsb
add
adc
mov
notb
andb
xor
fisubs
mov
and
cmc
fwait
push
cmp
and
push
mov
and
push
jge
push
and
push
imul
and
movsb
add
xchg
or
or
inc
sbb
cli
cltd
outsb
and
lock
cmpsb
xor
cmc
inc
fistl
pop
leave
lds
push
jns
and
mov
cmpsl
cmc
jg
out
xchg
xchg
jp
and
mov
sub
dec
ja
sub
mov
loope
outsb
enter
cli
fwait
outsl
daa
mov
and
mov
fstpl
and
dec
xor
cmp
add
inc
aas
cmp
xchg
adc
mov
pop
mov
scas
sub
mov
bound
mov
loope
and
or
inc
inc
or
mov
in
push
loop
push
mov
mov
sub
movsl
xor
add
jmp
and
pop
push
and
xor
jns
retw
scas
mov
popa
loopne
dec
cmpsl
test
jle
aam
cmp
xchg
push
popa
negb
add
inc
push
or
and
pop
lret
out
movsl
xchg
mov
popa
fmulp
sub
es
mov
dec
jo
or
and
xchg
mov
pop
push
and
cmp
aas
pop
loopne
outsb
jg
mov
jge
filds
mov
pop
mov
xor
sub
xchg
sbb
lcall
out
mov
ja
or
jl
hlt
lret
pop
and
cli
loope
fwait
stc
inc
and
sbb
out
add
daa
lcall
bswap
dec
and
jns
ljmp
sub
adc
into
push
push
mov
inc
or
and
push
push
cmpsl
lods
adc
mov
loope
jmp
jbe
and
filds
sub
mov
hlt
and
das
inc
and
add
fcoml
push
jmp
xchg
mov
in
inc
fcoms
popf
push
cmp
stos
insl
dec
lret
imul
and
xchg
loopne
dec
enter
xchg
xorb
sub
and
add
pushf
cmp
lds
or
lret
ret
sub
inc
scas
loopne
insl
aaa
and
popf
xor
mov
lods
dec
sub
sbb
mov
cmp
in
mov
cli
xchg
pcmpeqw
jecxz
enter
jns
add
test
sub
xor
mov
xchg
xchg
fwait
mov
mov
and
call
dec
fidivrl
xchg
pop
push
scas
lock
nop
inc
out
mov
push
jne
and
jg
fsts
xchg
xchg
or
mov
shll
inc
clc
and
enter
out
fwait
and
xlat
cltd
imull
or
sub
and
ss
and
aaa
sahf
inc
xchg
and
xor
push
and
out
mov
negb
test
pop
data16
jbe
mov
push
or
fnstsw
stos
mull
nop
and
mov
aaa
insl
push
sbb
pop
mov
imul
adc
push
cmpsl
push
and
xor
xor
in
cmpsl
stos
fwait
and
dec
insb
dec
iret
sub
add
xchg
xchg
sbb
out
xor
shrl
ffreep
jmp
std
dec
and
into
pop
mov
sub
sub
lahf
jnp
push
fwait
sbb
jae
movsl
pusha
stos
test
jge
mov
paddb
xchg
loop
popa
inc
cmp
iret
or
les
jb
pop
mov
and
mov
xor
and
jmp
push
sahf
jae
mov
aaa
jp
cmp
insb
push
clc
dec
xchg
stos
adc
fbld
icebp
loop
jb
mov
jg
cpuid
pusha
aad
mov
xchg
and
cmpsl
mov
jne
xor
gs
enter
ucomiss
pop
xchg
mov
push
jl
popf
push
and
sbb
stc
dec
push
inc
adc
cltd
inc
fisubs
gs
add
popa
mov
lds
inc
inc
clc
and
mov
sub
and
dec
cmpsb
aaa
pop
pop
fbld
in
xchg
xchg
dec
movsl
fldenv
xor
mov
mov
or
jmp
and
sub
dec
cli
mov
and
js
adc
pop
push
and
outsb
pop
out
movsl
mov
mov
adc
jmp
add
mov
mov
sub
addps
movsb
add
arpl
aam
mov
mov
jmp
cld
and
sub
inc
and
or
ds
movsl
stos
loop
loope
xlat
popa
push
cltd
adc
jb
xchg
xchg
mov
push
mov
push
dec
or
imul
pop
xor
enter
mov
jmp
iret
inc
add
fsubl
cmp
test
mov
pop
dec
pop
shrl
aaa
dec
and
icebp
push
addl
inc
sub
popa
xchg
stos
lsl
aam
pusha
inc
and
cmpsb
jg
and
add
xchg
test
and
or
push
ud1
and
and
fnstcw
test
leave
push
inc
mov
mov
daa
loop
push
and
stc
ret
fimuls
mov
mov
cmp
and
ret
and
or
xor
jl
aaa
adcl
gs
jle
xlat
mov
loope
and
push
rolb
mov
and
mov
mov
add
and
popf
outsb
and
sub
insb
movsb
loopne
inc
push
mov
popa
jecxz
mov
mulb
leave
sub
inc
movsl
int3
popf
sbbl
or
and
jg
mov
fs
and
cmp
loope
loopne
push
lds
iret
xor
mov
and
int3
lahf
sbb
bound
and
ds
mov
mov
ficomps
movsb
or
rclb
mov
and
lcall
stos
mov
test
mov
je
adc
rorb
or
hlt
mov
lea
sbb
add
push
jo
and
cmp
add
and
test
and
and
imulb
fldenv
jns
xor
sbb
jne
and
lock
fcom
jb
stc
sarl
cs
xchg
jle
inc
dec
xor
and
lods
shll
add
stos
loop
shll
dec
add
or
out
mov
bound
popf
and
push
inc
xchg
ljmp
push
and
scas
xchg
int
mov
outsb
and
or
xchg
inc
mov
and
and
jo
out
mov
scas
fcmovbe
or
xor
test
pusha
popf
popa
repz
pop
and
lock
sub
and
test
ss
sbb
fcompl
mov
sbb
xchg
je
dec
cmc
xor
and
das
push
add
negl
jmp
rorb
mov
shrl
and
mov
icebp
and
jg
movsb
sub
les
jmp
or
aam
add
mov
subb
inc
rolb
push
popa
movsb
stc
dec
mov
popa
add
cmp
push
adc
mov
and
dec
je
ljmp
clc
lods
or
in
cmpsl
and
fistpll
xor
aam
outsb
sub
adcl
xor
push
pop
sbb
push
dec
xor
xchg
mov
shr
cmp
leave
stos
addr16
dec
xchg
mov
pusha
xor
xor
xor
pop
inc
into
push
and
jmp
cmp
movsb
mov
add
leave
push
xor
je
xchg
xchg
lret
xchg
push
cmp
stc
and
and
and
inc
xchg
mov
xchg
jnp
mov
mov
xor
mov
leave
adcl
or
and
popa
xor
mov
cmp
stos
ret
repz
inc
xchg
mov
dec
in
jle
insl
mov
test
and
or
mov
stc
inc
imul
lods
cmc
testb
mov
fwait
int3
jle
das
in
rcrb
andl
jl
or
outsb
ficompl
flds
in
and
insl
int
roll
and
lcall
add
jbe
insl
pop
in
ret
mov
cmpsb
inc
mov
les
push
nop
lcall
dec
in
add
xchg
lahf
aas
shlb
push
ds
movsl
jae
mov
and
rorl
pop
scas
mov
and
push
arpl
movsb
jo
lods
sbb
add
and
in
fldl
mov
dec
pop
push
and
mov
ja
test
ss
out
popa
rcll
jnp
mov
addr16
and
push
movsb
test
addl
push
sub
push
xchg
push
out
pop
loop
scas
daa
mov
add
popf
shll
movsb
cli
dec
movl
icebp
xor
out
mov
and
and
arpl
bound
and
addb
inc
and
test
cld
xor
dec
mov
jl
adc
sub
arpl
and
xchg
or
daa
imul
and
and
xlat
pop
aam
adc
fwait
adc
and
dec
lcall
inc
repnz
pop
movsl
aas
mov
mov
xorl
cs
fists
and
sub
mov
icebp
lods
mov
out
xor
negb
jns
and
dec
mov
sub
or
lcall
gs
xchg
push
cltd
mov
ja
stos
cld
or
xchg
jo
insl
out
lock
mov
js
data16
inc
or
push
in
mov
mov
inc
inc
jnp
sbb
xchg
or
ss
jmp
dec
adc
cmpsl
mov
cmp
push
jne
pushf
ret
and
pop
es
xor
pop
xorl
and
push
mov
scas
inc
mov
mov
orl
sbb
and
inc
je
frstor
pop
xchg
fldcw
adc
jno
jmp
or
pop
repz
mov
bound
and
xchg
sbb
dec
mov
movsb
and
fsub
jle,pt
inc
and
aam
fldenv
cmc
ss
lret
mov
test
inc
jns
inc
je
mov
jmp
sbb
and
sbbl
mov
add
push
xor
cmpsb
and
jge
dec
and
mov
daa
aas
and
in
sub
movsb
rorb
push
ret
lahf
lods
pop
mov
subl
mov
iret
call
iret
and
data16
dec
push
mov
or
test
and
out
leave
clc
andb
jb
dec
mov
and
in
ljmp
jl
fidivs
mov
pop
sbb
and
loopne
mov
addr16
adc
jnp
add
daa
andl
pop
xchg
adc
and
dec
inc
adc
das
and
or
dec
flds
ds
in
outsl
mov
sub
int3
cmp
movsb
loop
popa
das
fnstsw
ss
mov
icebp
into
cmp
mov
mov
mov
cmp
xchg
and
fwait
lahf
push
out
dec
add
scas
push
jmp
nop
dec
fnstenv
ds
and
inc
pop
pop
into
mov
jl
sbbl
lea
sti
mov
cwtl
cmpsl
add
lret
gs
test
and
sbb
aaa
loop
stos
inc
test
add
in
adc
adc
cltd
loop
cld
cwtl
cs
lcall
jbe
lret
insl
popf
xchg
adc
or
and
mov
das
pop
fsubrp
and
mov
ret
jno
ror
and
daa
mov
sbb
inc
cwtl
bound
xlat
aad
cltd
or
loope
aam
dec
and
or
ljmp
loopne
int3
fcomps
mov
in
mov
cmp
lahf
push
jns
mov
mov
jb
cmp
sbb
dec
stc
fwait
and
xor
mov
and
inc
mov
std
cld
adc
and
js
sub
add
push
adc
cltd
mov
dec
or
mov
dec
cmp
lods
dec
add
icebp
jl
and
add
imulb
test
xchg
mov
mov
pop
mov
sahf
mov
dec
testb
mov
arpl
aaa
aad
cmp
dec
push
mov
dec
add
and
ljmp
fadd
shll
xor
sbb
test
sub
jbe
test
dec
mull
pop
int
test
push
mov
jno
mov
cmp
lahf
inc
popf
sbbl
or
cmpsl
adc
insb
stc
cld
out
xchg
push
xor
pop
loop
cmc
fsubrl
inc
sub
aaa
jno
add
das
inc
jp
xchg
xchg
lock
inc
iret
dec
and
rolb
and
into
mov
fmull
push
dec
aaa
pop
dec
and
int
xchg
push
and
and
jnp
xor
xchg
fmull
add
lcall
fisttps
outsl
jl
sbb
outsb
popa
aam
ja
mov
sub
jae
lea
pop
mov
cmpsl
and
adc
pop
imul
and
and
lahf
sbb
and
lods
and
clc
push
pop
loope
out
aaa
add
lahf
lcall
sub
adc
mov
test
mov
insb
add
aam
and
sbb
push
dec
adc
sahf
mov
cvtps2pi
adc
test
fxch
sbb
dec
jg
cltd
mov
sbbl
imul
and
pop
stos
mov
dec
sbb
mov
jl
imul
ja
nop
test
divb
inc
mov
cmpsb
or
xorl
mov
insb
pop
sub
jl
push
loopne
mov
mov
inc
lods
fnsave
ret
sbb
mov
add
add
and
loope
sbb
cmp
add
xlat
jae
and
clc
jo
dec
mov
and
fs
and
fiadds
movsb
xchg
hlt
lret
loop
xchg
jg
repz
js
mov
add
ja
mov
xchg
mov
cmp
dec
mov
jle
pushf
outsl
leave
fsubrs
popa
jle
sub
cmp
cmpsl
and
cwtl
add
sarb
adc
xchg
jb
in
mov
and
mov
into
and
mov
cmc
movsb
inc
mov
fisubs
xchg
enter
movzbl
out
outsb
lods
cmp
out
add
fadds
std
popa
in
xchg
sub
fwait
and
pushl
lods
and
rcr
mov
scas
test
adc
xchg
ret
repz
jl
ljmp
fbld
les
test
cmp
dec
popa
lods
stos
sbb
mov
ficompl
push
and
mov
mov
push
or
jo
filds
cwtl
push
aad
ja
xor
es
and
mov
ret
cmpl
call
mov
xchg
mov
rclb
xchg
int3
orl
and
cmp
push
and
xor
push
outsl
das
mov
and
mov
fcoml
sbb
sub
and
jp
inc
out
mov
daa
fwait
dec
cmp
dec
fbld
stc
leave
pop
xor
mov
lcall
inc
in
outsl
insb
jae
movsb
jns
mov
push
xor
adc
inc
fs
dec
mov
jo
dec
fwait
xor
lcall
inc
imul
aad
and
mov
ficomps
repz
js
inc
xchg
aad
movsb
push
lock
push
inc
push
popa
sub
inc
xor
xchg
pop
cmpsb
es
cmp
xor
loope
lods
popa
mov
xor
aaa
out
scas
sbb
aas
sbb
stos
mov
shlb
or
and
jbe
mov
and
cmpsl
outsb
push
inc
mov
into
pop
sub
cli
mov
push
adc
sub
test
daa
xchg
add
push
js
xchg
insb
and
mov
insl
xor
and
lret
or
into
and
mov
mov
sub
orl
movsl
pop
aad
movsl
or
pop
sahf
inc
adc
inc
clc
mov
mov
and
fisttps
outsl
xlat
and
xchg
pop
daa
ja
mov
cmp
ret
insl
sub
and
aad
or
and
stc
mov
cwtl
js
jle
fsts
ds
xchg
ss
mov
cmp
int3
and
sub
and
nop
sbb
mov
mov
adc
inc
sub
dec
insb
shlb
sub
mov
sbb
sub
and
pop
loop
cli
es
push
mov
rorb
stc
mov
stos
inc
pop
pop
fwait
or
inc
sbb
fldcw
xchg
push
jle
mov
and
sbb
and
xorl
mov
nop
mov
sbb
mov
cmp
xchg
xor
sti
repnz
popf
pusha
sub
pusha
cmpsb
and
push
push
xlat
and
stos
shrl
sbb
jp
push
ret
xor
insb
inc
sbb
cmpl
ret
push
fcmovnbe
movsl
cmp
repnz
pop
pop
or
and
adc
arpl
add
pop
ss
mulb
into
popa
pop
es
and
test
inc
mov
hlt
aas
jns
pop
xchg
movsl
sub
sarb
std
sub
inc
fwait
xor
scas
mov
and
pop
jecxz
pop
or
inc
push
stc
and
in
les
mov
loop
rorl
loope
out
in
adcl
cmp
aaa
scas
xchg
xchg
inc
pop
xchg
cmc
and
fsubs
loopne
cmp
mov
out
das
push
cs
mov
and
mov
push
lret
mov
ss
lods
sbb
jno
imul
mov
jnp
push
shlb
mov
iret
push
mov
pop
pop
addl
ss
mov
cmp
inc
dec
fldt
xor
push
adc
xorl
jae
push
push
mov
pop
push
cmpsl
and
jne
mov
mov
shrb
enter
and
sub
popf
push
mov
inc
push
inc
dec
icebp
sbb
sub
push
pop
pop
out
mov
adc
ljmp
sub
lret
cmpl
dec
xchg
or
popa
in
ljmp
adc
outsl
push
or
add
stos
lahf
arpl
lea
mov
sub
data16
rorl
imul
jmp
pop
fcompl
add
fiadds
push
in
cltd
mov
aam
and
cs
cmp
std
push
int3
cmc
pop
es
adc
imul
mov
and
dec
or
push
sub
fsubl
xchg
jno
mov
stos
insb
test
xlat
aaa
cmp
out
pop
jbe
fistps
xchg
pushf
lods
sbb
lock
ret
fmulp
jge
cwtl
inc
xchg
jns
aam
or
lods
repz
and
inc
fiadds
lds
jnp
cmpsl
pop
dec
sti
call
gs
lret
mov
xchg
xchg
rol
pop
xor
adc
loope
pop
and
jg
shl
dec
and
cltd
inc
inc
lods
mov
rorb
push
and
and
nop
mov
mov
popa
js
call
in
add
sub
fcomps
fisubrl
push
sahf
push
jne
sub
mov
rclb
jmp
fisubrs
shll
push
adc
push
and
std
and
pusha
xchg
xor
push
sbb
inc
mov
add
and
nop
icebp
jo
mov
enter
mov
mov
jecxz
dec
cmc
in
and
std
push
outsl
sub
cli
add
xor
pop
push
jbe
cld
pop
es
xchg
and
xchg
adc
or
mov
hlt
mov
xor
sti
mov
sub
xor
es
aas
or
xchg
dec
shlb
and
or
cmp
and
scas
sbb
aaa
push
and
test
push
in
sbb
icebp
lds
gs
cld
inc
push
and
xor
inc
lret
mov
mov
add
fisttpl
dec
das
test
mov
jnp
jne
xchg
shlb
adc
sub
jnp
xor
sbb
jecxz
pop
jbe
fidivs
push
repnz
push
aam
and
adc
psrad
or
in
ret
lret
clc
mov
lea
mov
test
movsl
mov
mov
xchg
push
sbb
mov
out
imul
aaa
mov
out
lods
sbb
je
fwait
mov
push
cld
lds
rcl
inc
xorb
mov
lods
jno
add
xchg
bound
jns
xchg
cwtl
in
movsl
cli
mull
std
and
add
inc
xor
dec
and
dec
mov
das
jmp
repnz
cmp
and
dec
xor
mov
filds
jo
cli
dec
lret
and
xor
inc
sub
mov
add
shll
popa
out
cmp
in
or
push
and
push
xor
and
xchg
lea
cmpsb
into
addl
jnp
dec
nop
and
das
sbbl
and
xlat
sarl
fbld
and
and
push
sub
jmp
mov
lahf
mov
xchg
jle
inc
sbb
inc
test
mov
cmpsb
cmp
mov
and
jnp
icebp
popa
aaa
shlb
sbb
fimuls
inc
lea
test
cli
pop
scas
test
pop
push
and
mov
and
mov
stos
insb
and
insl
clc
mov
sbb
xor
xchg
mov
and
cmp
das
inc
hlt
sti
and
mov
sub
add
jmp
push
add
imul
xor
pusha
sti
inc
mov
dec
add
sub
movsb
bound
push
or
jge
mov
push
out
notl
cmp
jnp
jbe
pop
pop
mov
cwtl
mov
and
repz
sbb
js
loop
fstl
stc
cli
cltd
daa
aad
pop
mov
inc
pop
inc
popf
inc
stos
repz
int
mov
stc
scas
and
sbb
inc
jge
cmpl
iret
inc
es
clc
xchg
rcl
or
mov
repnz
out
shl
xchg
add
sbb
rol
sbb
repnz
lods
fidivrs
in
aam
cmpl
add
xor
mov
adc
aad
div
lahf
sahf
mov
add
mov
push
sbb
push
pop
jl
mov
adc
pop
test
mov
xchg
cmp
orl
mov
orl
xor
iret
and
cmp
dec
mulb
jno
popa
mov
in
xchg
adc
jp
dec
cmp
cmp
lods
add
mov
inc
mov
aas
dec
mov
add
xor
movsl
xchg
idivl
mov
jle
cmp
outsl
cwtl
imulb
lds
mov
cmpsl
popf
and
stc
sub
jp
ljmp
dec
xchg
push
cmpsl
mov
xchg
cmc
xorl
mulb
popl
lcall
mov
mov
and
movsl
cmpsl
sti
dec
cltd
scas
iret
mov
add
xchg
cltd
mov
mov
into
popa
js
lret
add
sub
push
dec
jle
cmp
popa
cltd
xlat
lcall
loope
jg
and
lds
ret
and
inc
sbb
lods
and
inc
push
clc
lcall
jge
repnz
je
xchg
out
sti
fisttpll
xchg
cmpsb
and
aaa
imul
movsl
ds
xchg
popa
pop
fcompl
outsb
aaa
mov
pop
lret
cli
mov
mov
bound
mov
mov
xchg
aad
lds
and
lahf
jae
movsb
push
lock
repz
cmpsb
popa
jmp
pop
and
jae
mov
and
and
cmpsb
and
std
xchg
push
je
jns
and
shrl
addb
shlb
pusha
push
fsubl
and
pop
rcrb
sub
sub
xor
std
jbe
mov
insl
inc
repz
mov
and
cltd
dec
ret
sub
xor
stos
jb
and
mov
fs
jmp
mov
adc
push
jo
sub
and
je
inc
cmp
lcall
jp
and
push
jo
lahf
cmp
mov
out
aad
dec
imul
and
in
or
mov
iret
pop
push
orl
shll
mov
mov
ror
leave
mov
inc
add
orl
jno
mov
loop
inc
mov
adc
xchg
push
popa
clc
sub
sti
jecxz
insb
pop
js
jae
and
push
pusha
movsl
push
fdiv
push
and
mov
mov
mov
jne
jecxz
test
lods
pop
jns
arpl
ja
mov
loope
pusha
cmp
push
dec
outsb
mov
xor
subl
inc
int3
and
xchg
xchg
mov
push
add
inc
xor
lret
test
and
jle
out
push
xchg
int
adc
and
pop
ficompl
loop
cli
test
jle
scas
cmpsb
sub
pushf
movl
xorl
pop
and
imul
xor
and
pop
daa
outsl
sub
addl
mov
shll
xlat
fstps
push
jp
xchg
xchg
dec
pop
pop
inc
or
inc
js
mov
gs
and
repz
and
pop
mov
jp
ljmp
push
sbb
sub
pop
mov
imul
push
data16
sub
pop
in
cmpsl
add
mov
adc
push
and
pop
adc
mov
mov
test
fmulp
notl
push
and
cmp
lret
and
push
push
jle
repnz
dec
sub
popa
sbb
in
sbb
lock
xchg
inc
and
stos
aad
movsl
cmp
inc
int3
pop
and
xchg
es
xchg
outsb
and
roll
or
sbb
fisubl
lods
in
test
clc
cmpsb
pop
xor
enter
jns
cmc
mov
adc
popa
loopne
mov
inc
mov
stos
popa
pushf
aaa
mov
test
jecxz
mov
jl
int
int3
insl
aad
add
adc
imul
int3
movsb
out
sahf
call
inc
int
mov
or
js
and
jno
lcall
push
xchg
ret
orl
das
and
ljmp
sub
jmp
pop
xorl
mov
test
fwait
les
and
outsl
jb
addb
pop
rclb
jle
sti
aam
xor
popa
sub
or
pop
and
mov
add
dec
mov
and
pop
mov
das
dec
sbb
and
xchg
in
popa
push
and
xor
aad
jge
add
ja
mov
sar
add
mov
xor
xchg
adc
xor
xor
and
pop
xor
enter
loop
mov
cld
cmpsb
dec
loopne
jns
mov
lods
mov
xchg
mov
push
movsb
xchg
cmp
jnp
mov
not
das
jmp
adc
arpl
and
mov
movb
shrb
mov
pop
push
and
mov
or
unpckhps
sbb
ja
scas
and
arpl
fimuls
jle
lds
push
jmp
inc
into
sbb
xchg
lret
cmpsl
and
push
xor
sahf
adc
icebp
mov
push
sti
and
popf
std
aaa
lret
inc
scas
out
stc
popa
xor
ljmp
neg
hlt
test
out
xchg
mov
mov
adc
mov
pop
testb
xchg
dec
jae
jecxz
push
cmp
jge
lret
adc
cmpsl
scas
test
jge
out
and
sbb
jl
rolb
mov
outsl
or
push
cwtl
dec
and
les
add
popa
sbbl
sub
mov
and
aam
insl
and
cli
stc
mov
and
inc
fsubrp
sub
mov
and
and
dec
mov
loope
and
pop
sub
inc
mov
cs
adc
cmpsb
decb
in
xchg
adc
scas
repz
push
in
mov
adc
mov
sbb
fs
pop
adc
and
mov
and
sbb
add
xchg
push
das
shl
xlat
and
rcll
test
aaa
test
and
push
scas
test
xor
subl
test
mov
and
popf
imull
imul
add
fucomp
aaa
sbb
sbb
sub
mov
mov
lret
fsubl
ja
cmc
xchg
divl
std
jmp
addr16
sub
sub
pop
fdivrl
xchg
push
popa
jp
and
adc
call
test
cld
js
push
punpcklbw
push
fsubrs
xchg
scas
into
loopne
and
daa
sub
popa
or
sub
out
mov
leave
mov
into
loopne
push
mov
and
jno
fistps
and
dec
icebp
insb
and
iret
ss
pop
out
and
dec
push
and
mov
pop
mov
sbb
add
pop
push
push
and
mov
fdiv
mov
shr
and
pop
mov
data16
xor
mov
jecxz
jb
ljmp
lock
xor
xor
and
movsl
out
and
xor
les
jne
sbb
pop
mov
and
imul
lcall
fcomps
xor
test
gs
int
cmp
fldenv
and
test
dec
mov
push
filds
pop
andl
pop
mov
jae
xor
and
pop
fdivp
mov
mov
stc
and
das
xchg
or
cmpsb
shrl
out
test
arpl
and
icebp
insl
and
sub
or
js
and
ja
cwtl
call
and
orl
lahf
adc
push
mov
orb
mov
out
xchg
fs
or
jg
add
sti
and
hlt
data16
rcll
and
mov
mov
or
push
xor
pop
and
lds
outsl
mov
sti
xor
jb
push
mov
aaa
cmc
sahf
inc
jge
shlb
dec
out
sti
pop
insl
cmp
hlt
pop
imul
push
pop
and
mov
sahf
xchg
out
mov
subl
jns
mov
lea
into
xchg
xor
daa
loopne
test
sbb
and
jl
sbbl
cli
sbbl
mov
outsl
stos
jns
push
push
push
and
sbb
cmc
das
jp
and
subb
int
mov
mov
or
jnp
fisubs
fcom
push
pop
inc
inc
pop
in
cwtl
add
dec
push
ja
mov
mov
push
out
test
fisubl
shl
testb
add
sbb
mov
popf
sub
movsl
mov
call
mov
popa
movsb
push
iret
pop
dec
sbb
jmp
push
cwtl
pop
bound
adc
fisubs
mov
mov
pop
xchg
sbb
int
fimuls
lock
and
fiaddl
out
and
stos
xchg
leave
inc
and
adc
and
addr16
in
pusha
jne
sub
or
jp,pt
jnp
xor
dec
ljmp
rorl
aad
push
test
ss
push
and
clc
jg
xor
mov
inc
xor
outsl
test
jecxz
test
or
scas
pop
andl
es
mov
pop
push
fsubrs
test
mov
mov
jno
rcrl
jae
push
shlb
cmp
test
sub
or
inc
add
xor
cmp
pusha
rcrb
inc
pushf
and
lcall
cltd
mov
lods
xor
shll
jb
cmp
jecxz
sbb
lods
mov
ds
push
jo
and
adc
push
loopne
mov
pop
push
rcl
push
xchg
cwtl
andb
inc
push
pop
movsb
aaa
jg
inc
in
fsubrs
and
js
cmc
mov
stc
out
dec
jmp
repz
push
imul
push
fstpl
push
and
testw
sbb
popf
or
pop
leave
xchg
pop
js
mov
inc
fsubrp
cltd
popf
xchg
mov
adc
loopne
sub
sub
push
shll
adc
cmp
jl
push
cmp
out
inc
movsb
jmp
movsb
mov
jl
ja
and
mov
add
test
jmp
inc
shll
sbb
scas
sbb
and
inc
aam
jns
mov
sub
mov
mov
xor
mov
arpl
cltd
aas
and
je
sub
inc
sub
movsb
inc
dec
sub
movsl
aas
push
stos
sub
fsubrl
inc
ret
lds
popf
pop
sbb
push
insl
ror
repnz
cmp
inc
push
sub
rdmsr
out
mov
push
sahf
push
idivb
inc
and
mov
icebp
iret
ffreep
jl
repz
js
and
push
and
push
outsl
push
xchg
sub
xchg
sub
push
cs
pop
mov
dec
adc
xchg
xchg
outsl
inc
sub
hlt
sti
and
cltd
mov
in
adc
pop
and
pop
mov
push
lods
dec
add
lcall
sub
shlb
mov
inc
push
cmp
cmp
scas
jle
fistl
and
pop
add
and
fisubl
adc
fstps
and
xor
popf
inc
aam
and
pop
testl
add
cltd
rorb
sbb
mov
and
daa
bound
mov
push
and
mov
pop
shll
out
jns
sbb
mov
sbb
insl
jb
and
hlt
mov
fiadds
cltd
jg
sub
in
mov
cmpl
xchg
push
xor
mov
enter
push
insl
je
and
inc
arpl
adc
call
jle
jbe
sbb
test
das
xchg
daa
and
ds
mov
and
sub
mov
lods
fbld
inc
aas
sbb
shlb
or
pop
insl
adcb
and
frstor
loopne
mov
mov
cmp
andl
push
icebp
xchg
sahf
rclb
mov
aaa
mov
and
or
dec
mov
xchg
cwtl
xor
and
popa
inc
add
and
xchg
and
cmpsl
scas
loope
mov
mov
fisubrs
xchg
mov
xor
fldt
popa
sub
mov
into
and
mov
and
cld
sbb
movsb
dec
mov
mov
scas
and
cli
je
insl
inc
mov
and
inc
stc
popa
shlb
lret
or
mov
aas
inc
imul
lcall
nop
fdivs
xchg
push
cmp
cmpsb
xchg
cli
add
mov
jns
inc
jo
and
sbb
add
mov
pop
adc
daa
jge
fbld
and
lret
xchg
and
cmp
cld
xor
jno
and
pop
mov
jecxz
and
es
ja
adc
pushf
xchg
lret
inc
jl
lds
cwtl
xor
mov
fcoml
mov
mov
aad
mov
xlat
cld
mov
repnz
movsb
mov
xchg
psubusb
icebp
pop
lds
popa
pop
imul
test
mov
arpl
push
push
dec
mov
lock
sbb
fldenv
xchg
shll
xchg
push
fisubs
nop
daa
xchg
dec
dec
lret
add
addb
lahf
push
add
mov
cmp
push
rclb
mov
or
pop
sbbl
pushf
push
mov
xchg
idivb
test
sub
lods
mov
loopne
sub
js
cli
sbb
cmp
les
aaa
pop
mov
and
mov
add
mov
aas
arpl
xchg
std
cmpl
push
pop
adc
and
mov
mov
jmp
rolb
add
pop
pop
xchg
jne
xor
xchg
lock
jl
imul
mov
repz
shrl
cmpsb
cltd
repnz
daa
pop
lcall
sub
jle
and
test
cwtl
sub
push
push
sahf
mov
dec
sahf
add
jl
imul
sbb
xchg
and
loop
mull
xchg
in
dec
sub
cmpsb
movsl
and
movsl
dec
adc
push
lods
pop
ljmp
dec
or
in
and
ficoml
mov
stos
fbld
lods
xchg
jo
cwtl
xor
movsb
jmp
sub
push
dec
ds
mov
outsl
sarl
xchg
cwtl
push
jns
mov
in
loopne
xor
xchg
dec
jge
mov
push
xor
push
rcrl
cmc
mov
mov
inc
test
mov
push
daa
jns
movsl
add
lahf
xchg
outsb
movsb
push
test
flds
gs
pop
popf
xchg
shlb
inc
sbb
mov
cltd
cs
or
push
adc
popa
push
out
lret
fiaddl
sub
mov
or
pop
mov
inc
ret
outsb
ljmp
bnd
mov
xor
das
imul
add
lea
scas
outsl
mov
inc
push
test
add
and
xor
ficompl
ljmp
or
xchg
fisubs
in
icebp
push
jne
push
sbb
mov
pop
and
xor
xchg
test
and
clc
jns
lods
and
adc
fstps
and
fwait
imul
push
sbbl
and
repnz
mov
inc
and
lock
push
jbe
pusha
jge
and
sar
and
loope
nop
rol
pusha
pop
cmp
iret
fsts
mov
std
jbe
gs
enter
fdivl
xor
push
and
scas
add
lock
dec
jae
jns
mov
aad
inc
mov
xchg
outsl
and
jae
dec
adc
jle
sbb
mov
and
sahf
dec
test
ret
mov
inc
int3
pop
sar
popf
sub
mov
sbb
sub
push
jecxz
imul
das
mov
xchg
outsl
ror
fxam
aad
movsb
rclb
std
pop
lea
mov
jbe
jns
push
lds
test
push
dec
repnz
xchg
push
ds
ret
and
in
pushf
std
mov
mov
dec
push
inc
xor
leave
test
pop
stos
or
into
pop
mov
and
fdivrs
prefetch
sbb
out
sub
movsb
cmpsb
cmp
or
add
xchg
in
and
dec
and
insb
fists
and
cmp
pop
push
stc
lods
nop
and
xchg
and
aas
cmpsb
loope
and
and
lcall
and
xchg
cmp
and
xor
test
and
scas
jle
lcall
fiadds
jp
repnz
popa
dec
push
sbbb
pop
nop
fidivl
sti
mov
sahf
mov
movsb
loope
lods
mov
push
test
xor
enter
and
data16
mov
or
subl
sbb
iret
cld
cltd
insl
movsl
pop
std
adc
loop
mov
enter
and
xor
clc
pop
in
and
lret
inc
adc
aam
pop
mov
and
cmp
ret
adc
iret
addb
in
and
add
ds
stos
mov
pop
lods
cmpsl
loop
and
push
sbb
jle
into
xchg
pop
pop
mov
int
loop
les
xor
jae
inc
scas
popf
clc
or
in
dec
dec
std
and
push
add
and
push
repz
cmp
stc
and
int
jnp
push
push
ja
mov
mov
push
std
cmp
call
ret
inc
and
ljmp
xor
lret
pop
and
andl
or
mov
and
test
dec
popa
jg
in
mov
hlt
jp
loope
lahf
aad
test
out
sbb
push
mov
xor
repnz
iret
ljmp
sbb
and
popa
call
cmpsb
loopne
nop
iret
loop
sbb
test
aad
lods
inc
push
movsb
xchg
stc
cwtl
cmp
adc
mov
fsubp
cmpsl
and
inc
gs
pop
nop
jl
sub
cld
in
js
xchg
mov
adc
pop
aad
inc
jnp
test
divl
popa
or
bound
and
nop
sti
xchg
adcl
push
push
and
outsl
lahf
mov
pop
and
jecxz
sbb
cwtl
pop
push
movsb
data16
lock
scas
cmp
pushf
addb
and
int3
add
gs
testb
jns
clc
das
icebp
dec
sub
xor
call
jns
or
loop
adc
and
xor
inc
out
and
mov
add
sbb
xor
adc
aaa
ficompl
or
sahf
sbb
mov
pop
add
cwtl
sub
inc
daa
ja
add
jge
bnd
outsl
or
and
loope
xor
in
sbbl
aas
pmulhuw
jecxz
daa
jns
int3
push
or
xchg
add
jge
xor
cmc
lret
hlt
mov
popa
and
dec
lock
xchg
dec
sbb
pop
mov
bound
stos
ds
imul
or
xchg
test
xchg
popa
in
mov
and
inc
pop
pop
repnz
and
pop
inc
fsubp
aas
test
pop
daa
das
imul
mov
addl
loopne
dec
test
lret
out
sub
popf
and
or
and
outsl
sub
insb
xlat
test
adc
imul
andb
jbe
and
or
and
stos
mov
mov
mov
popa
repz
pusha
sub
fcomi
cmp
cld
xchg
aad
ja
mov
mov
and
xor
fnstenv
aam
and
pop
xchg
pop
xor
iret
xlat
scas
inc
and
out
dec
sub
insl
push
and
divl
jg
test
shll
xchg
and
pop
xor
lods
jmp
mov
ljmp
ss
xchg
push
push
push
in
test
dec
inc
or
hlt
xor
ss
mov
jns
and
aam
fsubrs
in
and
xchg
daa
idivb
test
cli
inc
and
in
xchg
adc
lock
fs
insl
push
jmp
push
mov
jg
fbld
inc
push
pusha
dec
call
add
push
mov
gs
xchg
mov
mov
aaa
das
adc
insb
xor
lock
int3
in
leave
in
or
jo
js
and
popa
push
cltd
inc
fincstp
push
xor
scas
mov
cmc
lods
aas
fucom
lods
xchg
xchg
cmpl
test
sub
dec
lret
and
pop
notl
xchg
imul
fwait
popa
sti
sub
adc
xchg
mov
lock
jb
pop
xchg
jp
in
dec
test
or
sub
cmpsb
fisubrs
cmp
push
jge
les
jl
xor
ds
xchg
pushw
xor
testl
xlat
mov
or
xchg
dec
cmp
andl
jg
rorl
in
add
push
inc
sbb
or
fnstenv
pusha
hlt
das
lods
daa
scas
inc
mov
into
push
and
and
outsb
cs
mov
lcall
movsb
push
shll
sub
repz
mov
xchg
and
iret
popa
fsubl
pop
mov
pop
cmp
jns
adc
push
xor
and
inc
popa
add
fld
and
jecxz
pop
pushf
out
and
insl
pop
xor
test
xchg
inc
cwtl
nop
mov
cmpl
mov
inc
xor
cwtl
push
les
or
dec
mov
and
cmc
jne
dec
daa
xchg
into
mov
pop
jns
imul
inc
lea
mov
popf
hlt
mov
arpl
pop
fimuls
xor
sbb
rclb
andl
jmp
and
and
push
jmp
xchg
loop
or
xor
les
xchg
push
jp
jg
xchg
inc
fisttps
add
lds
and
int
jle
insl
stos
fwait
js
mov
movsl
arpl
sbb
popf
repz
xor
xchg
std
and
rclb
inc
sbb
xchg
and
negb
add
xchg
fsubl
mov
cmc
fists
or
push
push
dec
movsb
pop
outsl
xchg
int3
in
xchg
dec
das
sbb
xchg
push
sub
jecxz
fcomps
or
and
icebp
ds
clc
nop
sahf
fistps
dec
pop
mov
fidivl
push
xchg
sarl
mov
fidivrl
mov
gs
mov
pop
pusha
mov
jns
ret
jo
and
loope
mov
mov
cmp
test
adc
fcoml
int3
movsb
and
test
and
xlat
cmpsl
or
inc
out
cmc
fwait
xchg
iret
shlb
sbb
repnz
and
inc
push
sub
std
jno
pop
mov
imul
int3
scas
add
xchg
inc
or
dec
mov
mov
ljmp
xchg
push
dec
movsb
inc
mov
xchg
je
xor
cld
fcoml
sbb
out
popf
and
outsb
sbb
fisttpll
rcll
sahf
mov
jno
mov
ds
iret
push
jb
and
aad
aas
flds
ficomps
and
xchg
adc
sbb
aad
xor
and
popa
xchg
cmpsl
mov
pop
mov
fsub
lods
xor
sub
and
pop
into
in
fsubr
and
sbb
aam
shll
xlat
ret
inc
cmp
outsl
jle
xchg
nop
xchg
fbld
jl
pop
xor
xor
pop
mov
adcl
cmp
and
lahf
insb
daa
pop
mov
sbb
lea
and
cmpsb
enter
test
pop
in
xchg
sbb
and
adc
push
dec
jbe
scas
cmp
and
push
xchg
sub
ds
or
and
sbb
dec
movsb
mov
xor
push
lods
pop
inc
clc
fbld
insl
sub
adc
sub
sbb
bswap
and
xor
sub
lret
and
fildll
ret
sub
mov
cmpsl
and
jge
lea
and
xchg
dec
lods
push
dec
inc
and
in
movsb
imul
add
gs
lret
repz
test
dec
and
adc
adc
xchg
ljmp
xor
pop
xor
sub
popa
inc
push
mov
test
add
sbb
repz
scas
in
dec
lea
lds
jmp
int3
movsb
out
pop
cld
stos
xorl
data16
and
jmp
add
popf
adcl
ficomps
lods
or
push
imul
cmp
testb
orb
jg
shl
ljmp
addl
pop
or
mov
popa
negb
mov
xchg
rcrl
and
cwtl
scas
shll
add
cmpb
jge
nop
and
inc
in
push
lock
js
fwait
inc
cltd
mov
dec
push
cmpsl
aas
pop
ret
jmp
xchg
fisubl
outsl
xchg
fistpl
loopne
mov
and
cwtl
in
cmpsb
sub
mov
shlb
push
adc
jb
rcrl
adc
fidivrs
and
icebp
incb
push
clc
mov
mov
adc
imul
jge
ret
mov
mov
icebp
mov
out
imul
adc
mov
ret
mov
cmp
push
mov
push
insb
fcmovu
and
and
xchg
mov
adc
pusha
aas
dec
mov
cltd
jnp
into
xor
aad
test
sub
ret
and
int3
sbb
lock
mov
sub
cmp
popf
out
push
js
int3
sub
fisubl
ret
jge
repnz
test
and
lods
inc
and
pop
mov
dec
dec
in
mov
js
fadd
xor
cltd
imul
data16
cmc
fsubp
movsb
jo
andl
bound
idiv
sub
push
xor
inc
int3
sbb
and
cli
jo
sbb
push
cmpsl
lahf
mov
adc
push
mov
mov
and
lea
imul
jecxz
test
xor
dec
movsb
outsl
pop
jmp
cmc
mov
outsb
jo
lahf
ss
and
movsb
adcb
dec
out
pop
lods
and
cmpsb
pushf
cmp
stc
sbb
popa
xor
push
cmp
iret
and
test
cmp
push
aaa
sbb
mov
push
add
sub
popf
loope
fwait
mov
sbb
pushf
mov
loop
movl
orl
aad
cmp
setbe
pop
cmp
sub
xchg
xchg
scas
dec
mov
ret
clc
and
fidivl
xor
scas
xchg
jp
pop
lahf
inc
movsb
sbb
xchg
test
and
jne
and
lock
and
stc
js
pop
xor
imul
sahf
lock
daa
add
push
mulb
mov
lods
test
dec
fisubrl
push
mov
les
dec
shll
ret
and
mov
cmp
dec
out
xchg
movsb
adc
stos
push
push
mov
call
adc
inc
in
push
mov
dec
fmulp
pop
insb
mov
pop
enter
out
cmp
cmp
cmpsb
fists
cltd
mov
ja
add
dec
mov
notb
and
bound
and
jne
fs
jp
and
mov
xchg
add
add
popa
cmpsb
inc
sahf
push
call
mov
lea
jecxz
sub
addr16
call
hlt
jge
and
and
popa
add
pop
xchg
or
lahf
and
addl
and
enter
arpl
nop
add
push
popa
inc
push
pop
mov
ficompl
jno
mov
mov
lret
lret
sbbl
roll
out
and
rorl
mov
push
movsb
mov
and
pop
or
jle
lret
mov
push
or
mov
insl
jecxz
push
push
andl
adc
jmp
ret
mov
pop
mov
scas
in
dec
dec
and
xchg
cmp
pop
add
mov
cltd
inc
inc
dec
outsb
cmp
pop
sarl
cmp
xchg
andl
sti
cmp
sbb
hlt
cmpl
cmp
add
lahf
pushf
pushf
and
pop
scas
nop
and
rol
imul
and
hlt
mov
and
xorb
test
inc
xor
popf
lock
mov
cmp
xor
mov
js
cld
pop
jno
mov
loope
pushf
and
insl
lock
movsb
push
inc
test
jle
leave
popa
pop
jo
mov
out
push
and
fsubp
cltd
js
fstps
and
add
or
lcall
lret
dec
insl
mov
mov
xchg
lea
mov
hlt
in
dec
sub
and
test
cmpl
nop
mov
dec
push
in
ds
pop
call
push
ficompl
enter
mov
push
and
dec
xor
push
pushf
push
leave
jae
cmc
loop
or
stos
fiadds
adc
enter
scas
int
mov
andb
xchg
arpl
fiaddl
mov
push
or
icebp
and
push
pop
and
cltd
test
dec
mov
sbb
sbb
adc
js
mov
and
call
cmp
pop
scas
and
jle
add
js
and
aam
fs
into
and
push
jmp
movsl
pop
and
cmp
ds
insl
popf
mov
mov
sbb
out
xchg
xchg
and
sahf
mul
or
and
mov
je
mov
jae
jne
adc
and
jns
jge
rcll
mov
mov
loope
inc
fwait
mov
fst
sub
and
movsl
out
lods
mov
fists
and
mov
mov
out
mov
cwtl
nop
and
push
adc
and
rclb
cmp
jg
test
shrl
ljmp
fisubrs
imull
mov
inc
jg
add
lret
cs
jmp
pop
mov
shlb
and
loop
cmp
and
js
push
lahf
push
add
xchg
sahf
dec
jle
mov
lret
out
bound
cmp
and
xchg
sbb
loopne
inc
and
inc
mov
mov
fadds
and
shr
data16
sub
mulb
lret
adc
popf
icebp
mov
fs
stc
aam
fnsave
adc
orl
in
sbb
in
jno
std
mov
cltd
int
or
sarb
and
push
and
jge
dec
lods
test
dec
gs
out
popa
sarb
sbb
sub
call
out
mov
and
add
stos
adc
mov
ret
inc
mov
push
ss
xchg
aam
out
jo
fnsave
mov
sub
imul
test
mov
pop
sarb
xchg
dec
xor
or
push
cmp
push
cltd
mov
push
sbb
inc
fsts
jmp
push
push
mov
sub
mov
test
movsl
push
xorl
pusha
fstps
dec
and
rcrb
lret
adc
inc
mov
sahf
mov
ljmp
xchg
pusha
gs
negl
mov
sar
aad
xor
cmp
dec
dec
sub
fs
movsl
cmp
and
sub
mov
xchg
and
aaa
inc
adc
and
ljmp
shll
rorb
loope
aaa
jae
into
and
push
mov
add
mov
ret
test
xchg
xchg
and
movsl
push
in
sarb
and
or
pop
xchg
loope
sub
in
xor
es
jp
jae
loop,pn
fbld
sub
adc
mov
mov
gs
cwtl
andl
mov
sbb
aas
sti
xchg
and
subl
inc
and
pop
adc
stc
and
cmpsl
ret
jle
and
mov
lret
fsubs
push
dec
pusha
out
mov
and
push
mov
mov
mov
dec
inc
mov
sbb
adc
fs
sbb
inc
adc
shrl
testb
lahf
outsb
mov
je
mov
and
sub
mov
push
orl
pop
jne
mov
lea
push
push
jecxz
leave
andl
mov
pop
and
push
lret
gs
or
mov
sub
lahf
lcall
jbe
mov
and
movsb
mov
and
jge
xchg
and
adc
test
xor
flds
mov
xor
inc
jmp
pop
mov
and
out
aam
sbb
icebp
in
daa
pop
or
mov
lds
shll
and
cltd
mov
inc
pop
xchg
mov
sbbl
jl
and
jnp
and
xor
sbb
das
fadd
aas
adc
jle
filds
mov
dec
xchg
xchg
pop
test
test
mov
and
subl
and
fsubrs
mov
and
add
ja
rcr
xchg
sub
data16
cld
stc
and
and
fwait
jmp
outsl
pop
mov
es
pop
mov
pop
sbb
and
shrb
negb
add
push
repnz
jno
adc
cmp
cmp
pop
xor
inc
dec
std
shrl
or
lods
jb
int3
sub
or
push
out
add
repz
mov
popf
je
in
and
mov
mov
inc
pop
ss
loop
and
xor
mov
and
das
out
mov
jbe
mov
jg
push
add
enter
or
pop
and
push
xor
inc
loopne
lcall
push
notb
dec
pop
fnsave
ja
and
and
mov
mov
adc
iret
pop
mov
xchg
mov
cltd
cmc
and
cmp
andb
and
repnz
int3
rcll
test
vpunpckhwd
push
dec
fcom
test
add
dec
push
adc
xor
mov
and
push
sahf
and
icebp
jnp
and
cmc
adc
loope
add
sbb
and
xchg
dec
mov
dec
and
popaw
icebp
and
mov
andb
xchg
in
inc
movsb
xorl
sbb
mov
lock
xchg
and
test
test
lods
mov
add
adc
fadds
or
andl
pop
cmpsb
inc
mov
xor
test
and
mov
out
jb
inc
icebp
in
xchg
sbbb
xchg
inc
mov
pop
xor
or
sbb
ds
or
mov
jge
fwait
popa
xor
xchg
inc
addr16
das
js
fsubs
push
movsb
pop
data16
and
add
enter
sti
mov
in
xor
hlt
and
cltd
ds
mov
mov
lcall
jns
repnz
loope
inc
adc
mov
push
nop
repnz
or
pop
jno
stc
cltd
and
mov
sub
and
imul
scas
jg
outsb
fistpll
sti
fdiv
cld
hlt
cmpb
push
cmpsb
loopne
ljmp
jle
out
fistl
and
inc
int
and
sub
nop
mov
and
mov
into
xorl
mov
sarb
or
push
pop
fbld
in
dec
movsl
sub
into
add
and
faddl
push
sbb
inc
or
popa
clc
mov
mov
and
jnp
test
sub
or
pop
and
xchg
xor
or
inc
rclb
pop
mov
movsl
inc
jmp
jge
and
push
cmc
loop
cpuid
hlt
int3
call
mov
stos
lods
or
jbe
xchg
xchg
repnz
mov
sbb
ffree
cli
or
jnp
push
lret
das
mov
xchg
enter
ret
lea
cltd
xor
and
orb
cli
inc
xor
mov
pop
pop
leave
jno
movsl
call
insl
mov
imul
and
jmp
jge
xchg
popa
and
aam
fcomp
jbe
and
in
mov
scas
leave
daa
xchg
mov
push
or
ljmp
inc
xor
xchg
and
ror
pop
insb
and
ss
sub
mov
or
or
sbb
movsb
and
jmp
mov
sub
pop
insl
andb
xchg
negb
cmpsl
stos
mov
mov
cmp
push
push
mov
xchg
and
add
or
in
and
pop
adc
int
xchg
shrl
and
fld1
mov
cmp
shld
dec
mov
fistpll
push
xchg
jae
inc
andb
jb
and
in
ss
mov
inc
xchg
lea
xchg
mov
adc
mov
mov
mov
and
fsubr
in
aas
pushl
sub
sbb
jb
and
xchg
into
in
add
mov
xor
cmc
and
mov
inc
mov
testl
xor
and
daa
loope
mov
adc
fdivrl
lods
stc
inc
shr
ja
xor
fwait
imul
jae
sbb
mov
fiadds
rclb
sub
inc
mov
xchg
pop
mov
sbb
aaa
adc
std
cld
sub
dec
arpl
inc
movsl
cmp
mov
stos
in
dec
push
popa
mov
fdivr
and
inc
ret
fsubs
mov
inc
sbb
scas
xchg
shll
jae
mov
push
fldcw
and
xchg
jns
inc
adc
jecxz
arpl
sti
and
sub
out
int3
xchg
std
xor
test
mov
xor
daa
out
inc
lahf
and
add
sbb
mov
mov
mov
or
addr16
lcall
and
pop
xchg
add
push
lret
inc
lods
jmp
lods
pop
lret
ret
adc
xchg
xor
add
out
xor
push
ja
stos
or
stos
xchg
add
xchg
xchg
pop
inc
mov
mov
mov
sbb
rcl
or
add
cmpsl
pop
bound
bound
test
push
out
lahf
sbb
xchg
repnz
ds
ficoml
lret
pop
inc
xchg
jg
lods
and
test
mov
bswap
adcl
push
push
fisubs
bound
dec
sub
sub
shll
sbb
adc
xchg
jl
fs
inc
cs
xor
clc
andl
pop
mov
mov
fidivrl
lods
or
xor
lods
lea
add
mov
and
and
aas
ret
gs
xor
mov
mov
jmp
insl
and
fs
ljmp
push
jecxz
jnp
movsb
loopne
pop
and
in
inc
dec
int
and
sbb
les
andl
mov
mov
aam
in
pop
push
and
push
addb
notl
es
in
fwait
and
jmp
and
nop
cmp
into
cmp
imul
fs
cmp
call
in
sub
pop
out
xchg
cmp
sbb
mov
and
cmpsl
cmp
and
call
pop
pop
xchg
and
mov
cmc
lds
sbb
xchg
jns
push
dec
and
and
dec
arpl
loop
cwtl
xor
cmpb
sbb
lds
pushf
jle
out
pop
or
pop
pop
pop
and
jno
adc
mov
arpl
push
das
and
and
test
stc
xor
xchg
jp
fisttpll
jnp
insw
jg
xor
outsl
mov
cmp
es
inc
push
lock
out
pushf
inc
and
pop
hlt
repnz
and
cmp
pop
ds
imul
adc
pop
xor
and
repnz
xchg
dec
out
test
jo
push
hlt
adc
push
sti
or
push
sbb
mov
mov
insl
and
add
dec
pop
jne
sbb
out
sub
adc
xchg
adc
mov
add
les
and
inc
mov
and
and
test
dec
in
imul
mov
push
or
inc
pushl
leave
loop
and
jbe
inc
int
mov
je
sbb
xchg
cs
lcall
pop
outsl
adc
mov
pushf
cmp
mov
cmc
mov
push
and
and
and
test
rorl
mov
and
cltd
push
dec
pop
repnz
insl
icebp
outsl
push
jnp
xor
lock
ss
push
jmp
push
movsb
xor
cmp
jo
xor
iret
adc
sbb
shrl
jge
cli
mov
mov
adc
test
rcl
sub
add
xchg
xchg
fwait
lds
and
dec
dec
push
mov
push
jecxz
int
dec
imul
and
scas
push
loope
shlb
mov
insb
sub
insl
mov
jle
and
push
and
adc
and
testl
adc
in
xchg
mov
jbe
mov
pop
pop
daa
adc
std
aas
hlt
inc
xor
and
jg
or
aas
cmpsb
xor
fmulp
xchg
cs
and
dec
int3
push
out
xor
and
mov
mov
add
xadd
sar
jnp
mov
xchg
mov
push
inc
imul
pop
inc
and
or
add
gs
adc
iret
xor
scas
and
xchg
mov
dec
fldl
sbb
sbb
nop
jbe
dec
and
scas
in
fwait
shl
dec
and
mov
std
push
stc
sbb
jnp
daa
mov
and
lds
imul
inc
add
dec
enter
shlb
sahf
sahf
and
out
inc
cmc
and
add
test
and
pop
add
pop
jno
pusha
sbb
cmpsl
xor
movsb
cmp
in
and
jns
xchg
mulb
sbbb
xor
xchg
fistps
mov
fimuls
jb
jp
push
in
imul
ficoml
add
or
test
inc
jge
popa
mov
adc
repnz
scas
inc
jecxz
jp
aaa
arpl
cmp
call
sub
xchg
aad
add
and
mov
and
cmc
add
into
add
cmp
lahf
inc
add
xor
inc
mov
or
subb
and
sbb
es
mov
mov
bound
and
cltd
data16
scas
pop
xorl
push
movsl
xorb
dec
cmp
popf
mov
xchg
jo
lret
ret
and
repz
stos
pop
inc
and
or
ja
imul
xlat
pop
xchg
and
pop
xchg
and
icebp
jecxz
lcall
std
mov
cld
jno
inc
sahf
and
cmp
jle
rcrl
inc
sub
and
dec
mov
loopne
add
and
xchg
lcall
push
push
popa
out
inc
jle
aas
xor
xchg
sub
in
in
movsb
repz
add
dec
es
cs
push
addr16
sub
cld
stos
mov
sti
mov
pushf
add
mov
cwtl
xchg
or
push
pusha
stos
in
push
xchg
clc
pop
pop
decb
and
out
cmpsl
mov
cli
cmc
mov
mov
orl
repnz
popf
lahf
mov
rol
mov
xor
arpl
sbb
pusha
and
jnp
aaa
jle
adc
pop
or
mov
and
mov
xor
inc
pop
daa
cld
sub
and
cmp
push
mov
jmp
cwtl
xchg
add
jne
mov
xchg
imul
stos
lahf
addr16
mov
pop
mov
adc
insl
sbb
mov
incl
js
outsb
inc
mov
xchg
insb
cltd
xchg
mov
fisttps
jmp
inc
scas
mov
lret
mov
push
subb
xchg
jecxz
and
gs
and
sub
lret
pusha
and
xchg
push
xor
jnp
xor
into
pop
sub
push
mov
cwtl
add
pop
mov
ficoms
test
jp
add
movsb
xor
leave
xchg
out
popa
sbbl
in
rcrb
test
into
inc
mov
add
out
sub
stos
mov
aam
aaa
push
das
push
push
and
nop
mov
pop
sub
popa
jo
xchg
and
xchg
adc
jge
mov
xchg
ja
sub
push
les
sub
sbb
and
hlt
xchg
push
dec
testb
cmpsb
in
jl
fwait
ja
cs
or
ds
and
in
jbe
dec
dec
sub
jae
enter
mov
add
and
mov
aas
pop
fwait
and
mov
and
cmpsl
and
in
ss
xchg
test
push
cmp
xchg
xchg
inc
xor
in
and
xor
pop
mov
sub
push
add
mov
aas
mov
push
out
iret
cmc
mov
fstl
sub
subb
test
cmpl
add
cmp
push
mov
or
in
add
loop
lcall
icebp
and
cli
test
movsb
and
xor
mov
popl
into
cmpsb
cmp
in
test
inc
arpl
and
pop
push
pusha
gs
into
lret
imul
flds
lock
aaa
aas
adc
icebp
fcomps
and
xchg
fdiv
lods
mov
fst
movsb
inc
les
hlt
adc
jmp
push
and
add
test
mov
cmpsb
int3
dec
push
dec
cmp
push
movsl
add
lods
adc
fwait
jge
mov
cmp
xchg
outsb
ds
out
and
push
fcmovb
clc
js
push
mov
sub
nop
jns
adc
mov
cmp
lret
inc
add
jmp
insl
fwait
and
jle
pop
add
or
inc
push
and
pop
in
cmpl
shl
xchg
lds
add
jmp
ss
sub
hlt
fsubl
aad
mov
into
mov
shlb
and
ljmp
and
add
call
and
or
ret
xchg
fwait
push
jecxz
and
adc
cld
and
es
push
cmc
add
jno
scas
jmp
lcall
mov
pop
roll
mov
int3
dec
loop
cwtl
in
dec
addb
das
jp
inc
xchg
mov
subl
in
sbb
jmp
cmp
and
ss
xchg
pusha
lea
and
or
les
sbb
push
push
and
push
adc
inc
lods
mov
fcmove
inc
xor
je
jg
cmpsb
pop
or
les
stos
add
mov
stc
inc
inc
mov
imul
jbe
loop
pop
cltd
xchg
push
and
jns
insb
mov
loopne
pusha
dec
movsb
notl
ficompl
cmp
outsl
xor
dec
popf
and
mov
and
shlb
jecxz
and
lcall
lods
add
pusha
and
xor
adc
fimull
loop
jno
adc
hlt
jo
shll
jmp
push
out
addr16
out
mov
xchg
push
cltd
and
sub
push
es
imul
pop
xchg
test
mov
push
and
jle
outsl
add
insb
cld
mov
mov
xor
ret
push
outsb
js
sbb
loop
and
test
xor
jns
jae
bound
test
xchg
shrb
fsts
cmpsb
daa
gs
jle
xchg
mov
xchg
mov
aam
xor
orb
xchg
imul
sbb
mov
movsb
into
pop
dec
fisubrl
adc
jo
ja
aam
pop
xor
jnp
leave
andl
xor
mov
jle
pop
and
jg
fisubrl
pop
daa
xor
lea
add
jne
xor
sbb
jecxz
cld
lret
or
dec
ss
lods
xchg
sub
mov
push
mov
push
inc
xlat
mov
inc
and
mov
push
and
es
negb
or
and
movsl
push
mov
mov
lock
cmp
lret
pop
and
leave
bnd
sub
ffreep
sbb
sbb
and
push
daa
outsb
inc
fisubl
loop
push
sbb
fs
inc
fistps
and
sahf
rolb
mov
xlat
and
fcmove
je
xor
pop
inc
dec
sbb
and
pop
push
jge
lahf
mov
push
iret
dec
xor
rcrb
adc
leave
fld
mov
xor
cmp
inc
js
inc
dec
and
or
xchg
mov
xor
popl
cmp
ljmp
shrb
adcl
and
inc
push
or
fcoml
daa
cmpsl
sti
fstpt
int
adc
out
xchg
fbld
enter
mov
and
and
int
add
and
cmp
push
mov
fists
xchg
pop
inc
mov
sti
jne
fmul
and
test
or
insl
pop
aam
fcmovne
and
mov
scas
fisubs
movl
jle
and
mov
pushf
push
dec
jo
into
and
shll
hlt
jg
lret
cmc
dec
and
addr16
stc
mov
adc
rorb
addl
lods
push
pop
cmpsl
mov
pop
outsl
adc
or
jmp
stos
mov
loop
add
fwait
xor
aad
and
popf
add
mov
inc
adc
pop
das
sub
ret
dec
std
dec
sahf
popa
and
mov
rorb
and
sbb
sub
or
rcr
and
xchg
popf
or
sub
cld
pop
xor
cmpl
pop
and
imul
repz
sbb
popa
dec
adc
cmpsb
push
mov
add
cmpl
iret
sub
inc
scas
test
popa
movsb
cld
ja
and
leave
enter
mov
mov
rcrl
and
mov
sbb
shlb
push
dec
dec
cmp
jle
and
xlat
xor
movsb
pop
sub
loopne
push
popa
add
fdivrl
cmpb
aam
pop
and
bound
orl
stos
fcompl
gs
mov
sti
lock
push
scas
mov
popa
out
sub
insl
mov
add
int
pop
sub
cmp
mov
mov
or
and
mov
and
scas
test
add
jl
push
js
and
and
jp
and
push
or
stc
das
mov
fsubl
lret
pop
pop
jge
jle
mov
loope
jnp
xchg
lcall
dec
xchg
out
push
and
dec
jle
iret
lods
and
jne
pushf
add
mov
lock
stos
fwait
cli
pop
and
inc
shll
lret
vcvtpd2dqy
sub
stos
js
addr16
nop
xchg
push
lcall
xor
adc
xor
jb
cmp
das
xchg
std
mov
aaa
and
rcll
pop
aas
pop
into
fimull
and
mov
mov
push
insb
push
push
sub
ja
adc
mov
shlb
and
shlb
cmp
popf
lock
icebp
fsubl
or
pushf
mov
out
lcall
data16
hlt
sub
lea
xor
or
out
loop
xor
cmpsl
adc
scas
mov
mov
jle
and
xor
cmp
and
leave
js
xchg
and
pop
sub
and
ret
fildll
sub
notb
mov
flds
cmpsb
enter
pop
xor
mov
xchg
lret
cmp
stos
pop
xchg
and
ds
js
je
jg
scas
pushl
and
scas
enter
and
adc
pop
jle
pop
or
mov
xor
jmp
inc
scas
and
jae
repnz
lret
cmpl
fmuls
push
movsb
inc
pusha
cmp
xchg
movsb
jo
int
mov
and
adc
rcrl
movsb
mov
mov
mov
xchg
mov
adcl
popf
jns
xchg
stos
and
sbb
insl
sbb
and
jne
insl
and
pusha
clc
aaa
test
inc
sub
add
inc
vmwrite
adc
and
inc
add
lock
pop
inc
movsb
fidivl
nop
or
xchg
and
shr
push
sbb
arpl
filds
movb
icebp
adcl
fwait
jb
jge
pop
andl
lea
mov
mov
xchg
pop
cld
and
pop
jbe
shrl
push
movsb
popa
js
adc
mov
sub
and
push
cmpl
mov
jmp
xchg
test
js
push
int
popa
cmp
arpl
jge
ficompl
cmpsl
mov
je
xor
and
out
pop
popf
inc
enter
and
cmp
mov
add
in
out
fbstp
jnp
adc
xor
mov
inc
out
popf
cmp
into
ja
popa
int
inc
and
xchg
sahf
dec
xchg
mov
add
or
mov
shll
sbb
dec
mov
and
loop
inc
xor
cmpsl
and
popa
add
inc
and
mov
mov
xor
popf
mov
addr16
xorl
dec
test
out
jo,pt
and
in
mov
mov
sbb
push
add
and
sar
lret
aaa
sub
aam
aas
lahf
mov
inc
mov
movsb
icebp
adc
fnstcw
push
and
pusha
push
lret
and
push
cmpl
dec
mov
pop
popf
mov
out
inc
out
shl
dec
into
aaa
lds
or
addb
sbb
test
je
sub
push
ljmp
lret
pop
mov
sub
in
cmpsb
xchg
sub
cs
cld
inc
push
aam
and
stos
and
cld
testb
loope
iret
orl
loopne
cmp
inc
andl
js
in
fs
xor
faddl
dec
mov
stos
and
mov
lret
and
jge
test
mov
and
xchg
push
and
fcoms
mov
addr16
xchg
push
insl
pop
shll
or
add
sbb
mov
cmp
or
das
push
mov
aam
and
fimull
lahf
dec
and
cmp
stc
das
scas
xchg
inc
cmp
and
jl
pop
push
loopew
lahf
sub
aam
lcall
cwtl
mov
xchg
xchg
mov
fscale
lods
lock
outsb
xchg
jns
movsb
mov
sbbl
test
mov
out
sbb
sub
ss
and
test
and
mov
inc
mov
adc
or
and
and
cmp
or
scas
dec
dec
popf
and
in
cmp
dec
fmuls
xchg
mov
andb
mov
pop
ja
ret
fsub
mov
dec
ret
cli
or
and
mov
addr16
mov
mov
andb
insb
leave
ljmp
rcr
out
dec
xchg
adc
mov
imul
and
inc
and
sbb
in
inc
jb
and
incb
lock
popa
cmp
scas
sbb
frstor
push
xchg
mov
fwait
inc
mov
push
cwtl
test
add
cmp
jae
mov
mov
cmp
mov
out
sarl
cwtl
mov
jne
out
xor
cmc
in
push
jl
and
ds
sbb
mov
into
pop
mov
lock
ficoml
cmp
mov
adcb
fs
lods
das
lahf
ret
xchg
cli
mov
adc
pop
repnz
xchg
out
cmp
jne
push
cmp
lods
jmp
insl
add
push
inc
and
xchg
sbb
pop
test
pop
decl
out
popa
mov
clc
xchg
dec
and
loopne
repnz
add
xchg
shlb
pop
popa
jo
icebp
pop
and
jge
and
call
cmp
mov
sub
mov
dec
popf
mov
test
mov
mov
insl
out
mov
sbb
imul
adc
push
cltd
lret
mov
add
popl
jbe
xchg
cmp
cmp
and
adc
imul
stc
insl
and
pop
pop
dec
std
and
cmp
and
mov
push
and
pop
dec
push
and
es
xchg
mov
jp
jb
movsb
in
cmpsb
lret
sbb
stos
and
sub
sub
popa
sbb
shrl
adc
repnz
into
pop
xorl
adc
aas
push
and
xchg
or
dec
adc
and
add
lret
cmp
stc
and
cmp
lods
lret
mov
and
or
stos
and
lcall
cmp
loopne
push
cmc
daa
or
shrb
in
cmpb
jno
xlat
cmp
mov
sti
dec
outsl
add
insb
sub
test
test
sbb
int
push
mov
lcall
jo
xchg
mov
shlb
sub
xor
cmp
call
dec
or
jp
aad
mov
std
or
cwtl
rolb
movsl
push
fisubl
insb
add
clc
scas
cmp
movsb
xor
sub
mov
popa
cmpsb
and
xor
and
or
dec
push
das
daa
xor
call
lcall
in
das
enterw
and
push
cmp
add
jnp
int3
sbb
rolb
ret
loope
mov
mov
dec
mov
xchg
outsb
push
movsb
loopne
push
lahf
cmpsl
imul
fisubrs
and
aaa
enter
xor
es
or
pusha
adc
inc
push
cmp
xchg
cld
pop
push
xchg
fcmovbe
movsl
stc
icebp
and
int
xor
add
imul
jo
mov
and
sub
wrmsr
daa
adc
mov
ljmp
inc
cli
jge
sub
xchg
and
icebp
in
mov
les
sub
and
ss
dec
call
add
hlt
pusha
and
xor
das
and
popf
sbb
mov
inc
ds
xchg
in
sbb
cmp
std
mov
and
push
loope
cmpsb
mov
jmp
xchg
mov
add
or
lret
lds
fbstp
push
cmp
inc
add
idivl
adc
and
icebp
and
push
scas
mov
mov
mov
insb
inc
and
dec
ficoml
ljmp
test
add
in
xchg
ret
shrb
sub
lret
mov
mov
inc
in
fbld
and
mov
and
gs
push
mov
test
popa
jne
xor
xchg
scas
and
sbb
cmp
mov
push
pop
mov
xor
stos
and
or
out
xor
pop
and
into
sub
xchg
cmp
and
lahf
mov
loope
cwtl
mov
mov
or
pop
xchg
aaa
rcrl
fdivrl
mov
sbb
dec
in
cmp
xchg
outsl
js
push
mov
aad
int
testl
fcoms
out
scas
dec
mov
and
xor
pusha
and
gs
and
push
sbb
jns
xor
push
and
lret
rol
stc
inc
popf
shll
cmpb
adc
iret
lea
shrl
unpcklps
movsl
cmpb
out
push
sub
jmp
mov
pop
and
subl
mov
out
fidivs
cs
scas
and
add
orb
sub
sti
mov
xchg
mov
xlat
loope
push
inc
sbb
mov
mov
xchg
ja
mov
test
jbe
and
rolb
or
scas
out
lcall
xor
lods
add
aaa
jecxz
mov
mov
cmp
pop
inc
inc
inc
xor
fsts
test
dec
jno
and
jle
pop
sbb
cwtl
xchg
fs
pop
and
lods
sbb
imul
push
jo
mov
or
push
xor
and
pop
mov
and
scas
add
lock
add
in
insl
xor
pop
and
int3
movb
pop
jle
cmc
push
inc
push
aad
movsl
xchg
and
push
adc
jno
add
fs
cld
inc
inc
xchg
mov
xor
jl
scas
and
cmp
cld
in
mov
rcrb
rcrl
xchg
fcmovu
das
xchg
push
daa
subb
push
push
adc
and
scas
insb
pop
add
dec
fwait
push
sub
mov
lcall
push
jl
ret
jmp
imul
cmc
fxch
sbb
test
mov
daa
mov
pop
andb
pop
inc
sbb
lods
fcmovbe
and
ja
popf
std
pop
in
mov
sti
and
insb
int
and
sub
std
push
push
shll
xchg
out
cmc
shlb
and
jg
ret
pop
rclb
jnp
stos
push
cmp
jne
mov
iret
scas
gs
sbb
pop
mov
insl
aas
mov
add
sahf
push
loopne
mov
xor
nop
mov
adc
and
jg
shll
mov
inc
or
pop
imul
sub
and
dec
and
sarb
adc
and
add
or
dec
mov
into
icebp
xchg
and
addb
dec
scas
out
sub
mov
test
sahf
stos
mov
jbe
insl
push
push
test
insl
mov
fdivp
call
xchg
and
ljmp
cmpsb
inc
sarl
fbld
cmp
insb
ret
mulb
out
jge
dec
test
int
enter
pop
cltd
mov
addb
inc
mov
lcall
or
insl
fstl
cmpl
call
jge
call
lret
add
xchg
aaa
add
scas
sub
and
xchg
jmp
lods
sbb
ja
dec
mov
sbb
adc
mov
mov
adcb
stos
divb
std
int
sub
into
mov
mov
ja
cltd
push
lock
mov
xor
xor
pop
mov
xor
push
push
mov
and
add
fists
add
jo
int3
pop
repnz
and
push
lods
in
add
cmpsb
adc
test
popa
xchg
negl
and
pop
fisttpl
adc
aam
xor
push
sahf
pop
ret
push
das
xchg
and
or
test
scas
xchg
mov
and
add
and
jg
cmp
xor
or
icebp
lods
jecxz
sbb
jnp
imul
adc
and
adc
popa
rolb
inc
dec
rcll
lock
aas
movsb
lahf
pusha
dec
and
mov
cmc
xchg
and
jecxz
scas
and
outsb
cmpl
int3
aad
lcall
add
push
pop
mov
loopne
dec
lahf
sbb
lahf
jae
dec
and
jns
mov
push
and
fwait
push
aad
mov
inc
and
mov
enter
mov
cmp
mov
push
xchg
das
mov
adc
das
adc
mov
cmpb
jmp
push
or
xchg
fadd
pop
aaa
and
mov
push
and
mov
pop
jle
sbbb
int
and
movsb
popa
push
adc
sbb
inc
sub
mov
ss
mov
sahf
movsb
in
adc
adc
pop
and
pop
xchg
movl
jp
mov
insl
jo
and
in
aam
sub
xchg
mov
stc
push
sub
push
adc
push
xor
and
std
add
gs
and
pusha
mov
aas
and
sarb
mov
sub
xchg
fimuls
sbb
hlt
jecxz
daa
inc
or
and
arpl
or
xchg
aas
jb
enter
and
popa
add
mov
stos
xor
popf
sub
and
cmp
and
stos
and
xchg
push
and
mov
shll
test
mov
scas
and
add
mov
loopne
xor
jmp
pop
sti
fs
inc
inc
and
cmp
lock
das
jne
and
mov
dec
push
and
data16
insb
rcll
or
cwtl
arpl
mov
shrl
hlt
pop
popf
loope
enter
push
sbb
fwait
jle
and
pop
gs
shrb
and
adc
dec
iret
xor
pop
add
rcl
or
mov
mov
stc
rcrl
mov
jno
jle
ds
mov
mov
xchg
cwtl
les
scas
pop
push
fwait
dec
pop
adc
and
mov
mov
stos
mov
sbbl
test
fmulp
adc
test
sbb
inc
enter
out
push
lret
and
fisubrl
mov
lret
mov
inc
movsl
add
les
jle
aam
mov
pop
clc
or
addl
test
push
lds
jmp
mov
inc
dec
or
ss
adc
pusha
jns
cs
andl
jp
insl
mov
nop
pop
dec
aam
in
xchg
cmp
xor
repz
xlat
jecxz
and
adc
sub
dec
leave
shlb
cltd
fstpl
aas
push
and
push
fs
and
into
pop
adc
and
push
dec
mov
and
sbb
push
inc
aaa
jbe
cltd
das
push
loopne
fmuls
mov
sbb
mov
push
into
and
repnz
jne
adc
cmpl
dec
and
wbinvd
inc
jmp
add
das
pop
inc
les
movsb
sub
ljmp
xchg
ss
into
add
and
pop
pop
mov
cmp
jmp
int3
and
jle
out
push
push
fiaddl
xchg
hlt
jg
out
cs
mov
xchg
test
popf
push
cld
and
or
outsb
pop
mov
inc
dec
sub
das
pop
ja
and
lock
dec
int3
and
ret
pop
sub
and
stos
in
in
pop
xchg
xlat
add
mov
aaa
mov
push
and
and
lods
or
pop
and
mov
stos
sbb
and
andl
int
shr
movsb
inc
das
jbe
leave
jns
mov
cmp
sbb
int3
xor
and
dec
pop
lds
jl
decb
and
cmpsb
add
and
mov
into
sbb
mov
mov
rcrb
adc
mov
jns
daa
adc
xchg
or
mov
jo
sbb
mov
push
dec
inc
movsl
and
cmpsl
shlb
imul
adcl
pop
xor
aam
push
jno
mov
pop
add
out
cld
and
inc
lea
dec
sbb
cmp
outsl
mov
das
les
pop
popa
out
dec
in
mov
xor
cmpsb
cli
fadds
push
mov
daa
mov
push
and
add
lahf
pusha
scas
jge
movsb
das
leave
adc
push
imul
dec
int
and
mov
and
pop
fistpl
call
icebp
shll
add
arpl
and
inc
add
and
sbb
jle
xor
ljmp
nop
adc
std
jne
and
cmp
xor
adc
and
std
in
mov
mov
ret
mulb
dec
adc
push
cmp
popa
repz
repnz
test
mov
push
xchg
in
leave
icebp
xchg
out
movsb
jmp
jo
aaa
add
loope
hlt
xor
les
and
push
xchg
mov
and
and
cmp
mov
jg
out
inc
nop
and
pushf
lahf
jge
push
repz
data16
mov
mov
or
xchg
jecxz
inc
cli
les
and
int3
xor
rolb
rcrb
in
repz
mov
cwtl
pop
push
xor
mov
sbb
cmp
ss
repnz
adc
subb
mov
mov
xchg
test
fsts
and
mov
js
and
adc
dec
ja
inc
jecxz
test
cmp
dec
orl
in
mov
push
and
mov
shlb
loope
movsb
jge
dec
lret
push
mov
xchg
cmpsb
and
pop
test
pop
movsl
lods
arpl
cmpsl
push
movsb
xor
pop
and
loop
pop
dec
and
mov
push
das
push
xchg
jns
test
dec
mov
dec
loop
and
loope
and
lcall
and
lods
push
aaa
shlb
fistps
ds
mov
pop
hlt
inc
imul
push
mov
sbb
orb
in
lahf
popa
stos
test
add
pop
push
and
cli
mov
test
popa
loop
aaa
mulb
adc
fisttpll
and
aad
es
sbb
and
test
stos
mov
cmp
inc
sbb
jp,pt
bnd
sbb
xor
push
outsl
inc
add
or
sub
pusha
popf
and
push
lret
cmp
adc
shlb
sub
clc
test
sub
insb
and
add
movsl
cmp
pusha
mov
lods
xor
push
fistpl
jle
jns
mov
push
sub
jl
scas
loope
ret
jg
orl
in
fstpl
and
dec
jb
add
mov
setge
and
mov
jle
sub
hlt
fcmovnu
and
cld
mov
repz
nop
and
mov
lods
push
xchg
mov
std
and
and
and
iret
aam
mov
or
push
fwait
pop
mov
enter
or
jl
lods
daa
mov
add
mov
and
jns
testb
movsl
fildl
push
divl
cmp
cmp
stc
scas
and
xor
add
push
stos
fcoml
mov
adcl
sub
pop
inc
sti
daa
and
and
sub
popa
cmc
nop
loop
dec
sbb
pop
rolb
push
xor
cmc
mov
cld
mov
subl
mov
mov
lret
mov
cmp
imul
or
pushf
and
dec
inc
pushf
and
lods
sbb
jge
and
adc
adc
mov
stos
test
sbb
pop
imul
push
xchg
ret
aas
in
andl
inc
and
or
lds
cmc
dec
cmp
mov
rcr
test
push
rorb
gs
ds
or
and
or
push
and
inc
call
pop
xor
hlt
repnz
test
mull
imul
sub
cld
mov
mov
leave
and
inc
sbb
and
pop
push
loope
icebp
push
xor
addr16
and
sar
mov
xchg
dec
popa
adc
jnp
cmp
loop
jb
mov
push
popa
pop
aas
in
add
mov
hlt
ret
insb
and
dec
aad
and
rcrb
jecxz
xor
hlt
push
push
jns
test
cmp
aas
dec
or
jnp
sbb
repz
incb
lahf
sub
and
lds
jno
mov
in
jne
jae
pop
sbb
mov
cmp
mov
or
mov
mov
and
pop
fcompl
and
in
push
push
add
scas
test
and
in
not
or
jmp
imul
mov
jno
xchg
popa
clc
shrl
out
push
test
loop
xor
out
cmpsb
push
add
dec
dec
pop
test
push
cmp
xor
std
cld
or
or
data16
add
ret
mov
ss
jno
out
and
and
fidivrl
leave
mov
mov
jnp
fldl
mov
and
pop
out
dec
cli
mov
or
test
gs
push
stos
inc
mov
and
mov
mov
rorl
and
push
rcrl
in
js
sbb
mov
jl
daa
sbb
push
arpl
in
insl
xchg
aad
sub
inc
jo
sti
push
and
ja
jnp
cmp
jl
sbb
inc
adc
popf
sbb
mov
mov
lea
rorl
insl
out
in
movl
fsts
adc
dec
jmp
inc
mov
aam
sbb
cld
aas
pop
test
and
ss
pinsrw
and
dec
ds
imul
lods
pop
sbb
cmpsl
in
xchg
jmp
and
out
daa
and
or
popa
pop
repnz
sub
inc
pusha
sub
jmp
jns
mov
test
shll
mov
ds
xchg
and
adc
and
ja
mov
imul
and
mov
ret
xchg
mov
and
dec
push
push
aas
sub
cmp
lds
add
popf
daa
mov
adc
mov
loope
in
inc
and
and
call
fnsave
fucomp
cmp
mov
nop
add
lret
insl
orl
push
adc
outsb
cmpsl
pop
add
popa
arpl
nop
daa
insb
scas
xchg
loopne
ljmp
movsl
cwtl
mov
jbe
inc
or
fnsave
and
and
es
xor
xchg
fisubs
frstor
pop
jno
pop
fldt
mov
dec
adcl
inc
jp
loopne
or
sbb
sub
rcll
xor
icebp
jmp
and
es
scas
xchg
jp
les
lea
mov
xor
insl
xor
inc
push
scas
and
jbe
fsubrs
pushf
jo
push
jg
adc
inc
and
gs
aam
and
sbb
xchg
ret
adc
shlb
sti
fs
dec
punpckhwd
test
sub
popa
and
inc
jnp
pop
enter
cltd
in
test
inc
cmp
and
cmp
sbb
mov
push
mov
cld
std
jb
push
js
jbe
jno
dec
dec
add
hlt
test
shrl
lds
fucomp
out
inc
ja
imul
mov
pop
mov
adcl
mov
and
xchg
dec
and
insb
sub
and
mov
inc
mov
les
test
int3
pop
inc
pop
xchg
push
jmp
inc
and
cmp
movsb
push
add
push
jge
mov
mulps
outsl
xor
push
xlat
shll
push
and
add
lds
bound
out
mov
iret
and
scas
mov
sub
hlt
movsb
sub
and
repz
and
and
in
mov
lret
dec
je
mov
pop
dec
and
jp
inc
sbb
jns
dec
dec
and
pop
xchg
cmp
push
and
push
jne
mov
hlt
outsl
lcall
sub
out
in
movsb
xchg
fnstenv
std
popa
push
pop
sub
cmp
inc
iret
ret
rcr
and
das
jl
outsl
sub
gs
xchg
pop
frstor
pop
nop
ja
jae
mov
in
cmp
dec
sbb
inc
adc
das
and
sbb
pop
mov
int3
or
and
and
data16
and
jg
jecxz
pusha
jmp
and
fdivs
push
test
sbb
sbb
dec
mov
imul
shll
inc
fistl
pop
inc
shrb
push
mulb
dec
sbb
sbb
movsl
and
daa
scas
adc
popa
mov
pop
sub
loopne
neg
mov
test
cmp
and
out
test
pushf
push
insb
sbb
push
push
loopne
and
imul
das
sub
loope
inc
mov
jp
sbb
or
and
add
aas
es
xchg
and
lods
idivb
jnp
push
and
cwtl
dec
mov
in
loopne
cmpb
stos
and
xchg
mov
mov
rorb
push
push
fucomip
push
dec
andb
or
inc
xchg
mov
mov
sub
out
fldenv
je
lret
and
cld
push
andl
adc
mov
repnz
and
dec
add
or
pop
sbb
mov
adc
xchg
mov
and
mov
xor
inc
push
pop
jmp
popf
addr16
cltd
sbb
imulb
and
xorb
lods
jbe
movsl
fidivl
cmp
cld
das
inc
and
scas
jle
or
data16
and
pop
inc
fidivrl
arpl
mov
dec
lea
mov
push
js
int3
sti
test
adc
inc
ds
pop
and
pop
jp
jb
fcompl
icebp
push
mov
and
jmp
nop
and
mov
inc
jae
mov
dec
pusha
and
movsb
and
jp
cli
movsb
fsubp
shlb
mov
inc
dec
movsl
pop
clc
inc
jmp
mov
adcb
nop
imul
and
mov
dec
mov
xor
cmp
xor
push
sahf
popa
nop
leave
test
mov
and
shl
cmp
pop
cmpsl
mov
mov
std
jge
jecxz
in
mov
dec
insb
and
hlt
cs
xchg
pop
iret
lods
adc
or
adc
pushf
and
int
ret
repnz
sbb
xchg
stos
and
jns
test
fxch
mov
jo
imul
lods
and
sub
xor
stos
out
movsl
add
xchg
inc
nop
and
dec
jnp
pop
scas
clc
and
imul
cmp
out
xchg
shrl
add
les
inc
cltd
mov
xchg
and
mov
in
mov
hlt
sbb
xchg
imulb
mov
xor
pop
ljmp
in
sub
stos
xchg
mov
pop
jbe
sbb
movsb
inc
pop
cmp
fwait
in
lret
aas
mov
and
test
fildl
and
mov
jns
dec
mov
xchg
pop
je
popa
dec
dec
push
inc
add
or
jno
sub
xchg
push
cmp
mov
pushf
add
adc
cmp
and
sarb
pop
and
fstpl
pop
mov
sub
jns
xchg
xor
or
fists
dec
cmc
repnz
decl
push
mov
jno
lea
sarb
jns
or
scas
inc
notb
fsts
test
cs
mov
cmpsb
incl
lahf
test
scas
lea
adc
adcl
add
xor
and
dec
repz
pop
jnp
pop
pop
push
dec
mov
jo
push
stc
test
and
fwait
ss
dec
dec
mov
sbbl
pop
popf
sbb
push
lods
lahf
loope
xor
sub
adc
rclb
mov
out
dec
test
add
jbe
test
mov
or
sub
jno
dec
cmp
cmpsb
sbb
out
ss
cmp
fucom
xor
repz
cmp
enter
push
mov
xor
dec
add
push
pusha
fwait
ds
repz
add
lret
and
and
inc
mov
insl
or
and
cwtl
xchg
lcall
cmp
xchg
stos
test
das
mov
sahf
push
hlt
jle
pop
adc
and
dec
jmp
pusha
popa
cmp
xor
cld
mov
lods
inc
push
pop
jo
aaa
dec
arpl
cli
adcb
mov
aam
mov
jo
mov
rcll
lods
test
push
enter
and
adc
out
mov
mov
mov
cmc
and
mov
xchg
and
push
mov
aaa
lods
shlb
or
mov
int3
dec
jnp
lock
test
mov
js
inc
mov
fmuls
addr16
xchg
push
mov
pusha
adc
lcall
xchg
pop
fs
xchg
mov
fsubl
subb
xor
xor
inc
movsb
outsl
push
add
push
arpl
lods
add
sti
sarl
lcall
pushf
je
fwait
and
dec
lahf
mov
sbb
sub
rcll
aad
xchg
push
xor
sub
inc
cs
xor
and
repnz
ss
lret
and
push
insl
pop
pushf
mov
gs
add
nop
jge
and
xor
push
mov
jl
xchg
and
lret
mov
std
insb
push
pop
leave
and
jnp
loope
lds
fbld
mov
shlb
mov
ss
ret
cmc
pop
sub
nop
pop
movsl
notb
and
xor
add
cmpsl
mov
popa
repz
pushf
divb
or
pop
sbb
adc
push
in
mov
es
sbbl
pop
xlat
sbb
shrl
cs
and
and
ffree
push
test
sbb
loope
movl
mulb
mov
or
pop
mov
mov
xor
je
lret
push
sub
std
cmp
push
mov
int3
mov
ret
inc
xor
nop
adc
lret
mov
and
je
insb
call
lods
jmp
push
pop
mov
shll
dec
adc
dec
xchg
cwtl
inc
inc
std
mul
dec
and
adc
pop
inc
jl
das
sbb
outsb
loope
cmpsb
mov
lea
mov
dec
adc
outsl
cmp
aad
icebp
jbe
mov
and
in
inc
push
xchg
lock
xor
stos
pop
test
xor
and
imul
pop
add
mov
pop
fiadds
addl
dec
lahf
jno
mov
mov
popa
jl
movsl
out
cmp
and
adc
outsb
pop
gs
and
lock
inc
loopne
and
lahf
mov
sbb
fildl
pop
mov
int3
leave
aaa
mov
and
orw
mov
loopne
add
mov
out
jb
dec
lock
xchg
in
pop
and
mov
mov
ljmp
and
push
shl
mov
mov
pushf
and
out
mov
push
icebp
dec
and
out
mov
sbb
cmpsb
push
mov
test
dec
lock
and
jecxz
cmp
mov
add
test
movsl
in
jle
insb
sbb
jge
inc
pop
lcall
ficomps
cmp
cltd
cmp
and
test
enter
mull
jb
and
xchg
cmp
pop
in
loopne
sbbl
std
push
popa
pop
bound
xor
and
push
addr16
and
jl
adc
cwtl
pop
and
xor
xchg
mov
mov
sbb
mov
movsl
dec
mov
mov
mov
and
stos
push
mov
and
or
test
inc
mov
shrb
and
or
fwait
addr16
pop
jne
scas
add
test
sub
adc
int3
daa
fucomp
out
cmpsb
xor
mov
sbb
movsb
add
in
sub
cmp
mov
push
and
imul
fwait
insb
xor
or
lock
xor
mov
mov
add
or
daa
inc
in
adc
jo
loope
jl
pop
pop
push
cli
xchg
test
push
and
lret
fdivrp
iret
repnz
jbe
jecxz
dec
jne
xor
and
adc
pop
jns
and
xorb
mov
ret
xor
cmp
pusha
mov
mov
pop
push
push
mov
sahf
repz
out
push
jbe
fiaddl
and
mov
fwait
ja
and
pushf
lock
jmp
mov
ds
push
sbb
ljmp
pop
test
orl
inc
jno
ja,pn
and
or
jns
das
jmp
add
dec
xchg
adc
xor
pop
mov
sub
and
in
dec
rcrb
dec
and
push
jns
stos
sbbb
mov
xchg
clc
or
cmp
jno
push
dec
shrl
and
mov
int3
ljmp
inc
imul
jae
popa
and
sbb
sahf
push
jo
jno,pn
sbb
or
and
rclb
fbld
enter
fs
pop
pop
and
xchg
scas
mov
movsl
es
in
popf
lock
dec
lret
ret
sbbl
and
pop
mov
cmp
xchg
mov
xlat
packsswb
int3
cld
addr16
movsb
and
fsubrp
inc
pop
mov
and
iret
lods
aad
xchg
scas
inc
outsb
gs
or
dec
out
push
adc
mov
xor
and
adc
or
je
and
lock
mov
aaa
popf
mov
mov
xchg
pop
out
pop
or
and
sbb
mov
and
cwtl
lods
stc
movsb
fxch
data16
lods
lahf
xchg
lods
daa
xchg
pop
cwtl
daa
pushf
hlt
test
mov
stos
and
mov
mov
das
outsl
pop
lcall
lods
cltd
or
add
ljmp
test
pop
adc
ret
or
stc
mov
lret
popa
mov
mov
or
pushf
sarl
xor
popf
ja
xor
inc
cmp
ljmp
dec
add
and
mov
icebp
fsubs
sbbl
xchg
movsl
popa
fildll
push
fwait
dec
mov
cmp
adc
mov
dec
stos
and
dec
insl
and
pushf
xchg
ds
cld
cmp
add
notl
mov
mov
or
repnz
inc
aaa
sub
cmp
lds
inc
and
test
js
gs
das
pop
jp
cmpl
pop
lcall
and
aad
in
cmpsb
fs
push
inc
daa
inc
shlb
and
inc
lock
push
mov
aam
push
xor
je
pop
jl
in
icebp
addr16
jbe
popa
dec
jmp
leave
shlb
test
pop
lock
sbb
scas
aas
paddb
mov
lcall
jecxz
mov
and
mov
ja
cltd
repz
movsb
push
sub
mov
add
and
cmp
jnp
fwait
imul
ds
lcall
dec
addl
in
stc
out
adc
jp
rorl
add
jnp
inc
mov
adc
mull
shlb
aad
add
lahf
int
mov
inc
jns
addr16
xchg
cli
sbb
dec
scas
and
aam
bound
xchg
mov
and
lds
sarl
mov
mov
push
xor
push
push
imul
inc
mov
xchg
int
popf
clc
xchg
adc
xor
add
test
xchg
fcompl
sbb
sub
jno
les
mov
xchg
pop
cli
and
jmp
cmpsb
pusha
and
fdivs
sub
pop
and
out
jb
dec
jne
mov
stc
xchg
mov
lahf
jns
jno
adc
xchg
scas
and
xor
and
xchg
outsb
cmp
jge
xchg
lea
adc
cltd
in
roll
xor
jmp
xchg
or
stos
popf
cmp
mov
add
mov
jbe
inc
jmp
mov
inc
stos
push
popa
xor
call
xchg
out
mov
loop
cmp
jmp
and
cmp
fisttpl
sbb
pushf
movsl
adc
jg
cmovl
shll
pop
scas
dec
mov
bnd
stc
movb
pop
dec
sub
inc
xor
pop
adc
int
jns
jge
mov
scas
cwtl
or
movsb
int3
addr16
sbb
cmp
mov
and
je
or
and
cwtl
push
out
mov
mov
rolb
mov
adc
leave
jmp
xor
add
jae
xchg
call
xor
js
cmpl
mov
xchg
mov
call
loope
ja
in
inc
dec
scas
jno
and
sbb
push
imul
in
or
movsb
inc
das
int3
inc
hlt
popa
and
lret
stc
and
sbb
adc
mov
dec
or
xchg
and
cmp
out
xchg
mov
push
inc
loopne
aam
movsl
aad
jecxz
movsb
ja
xchg
repnz
mov
dec
xchg
inc
xlat
xchg
test
orb
test
xchg
inc
xchg
jl
cmc
jle
push
or
int3
outsb
mov
std
mov
pop
aas
imul
push
nop
ret
shll
mov
shll
mov
and
mov
xor
mov
xchg
bound
mov
fwait
andl
daa
popa
cmp
cmp
fs
adc
lret
push
or
mov
adc
divl
dec
movsb
jge
jne
ss
lea
dec
xchg
and
aad
cmp
ds
push
mov
repnz
pop
mov
fistpll
mov
xchg
loope
rorb
imul
or
xor
jecxz
ret
cmp
cmp
lcall
mov
mov
leave
adc
xor
and
and
xor
test
and
bound
add
sub
mov
movsb
call
xchg
jnp
lret
and
inc
inc
rolb
stos
and
cmp
mov
pop
mov
and
cmp
inc
lcall
and
lock
les
pop
sub
xor
sti
and
fsubrs
and
push
inc
cmc
mov
and
data16
pop
flds
and
mov
mov
out
jmp
pop
mov
fiaddl
push
shl
popf
in
mov
lahf
fsts
and
jmp
test
xchg
gs
popf
push
add
and
adc
dec
js
fwait
stos
push
test
jns
popa
mov
and
inc
fistps
jno
mov
andl
or
popa
sti
daa
gs
xor
mov
and
movsb
fidivrs
mov
push
jg
jno
inc
push
sbb
and
loopne
sahf
jae
sub
and
and
out
xor
data16
cmp
adc
cmp
and
arpl
movsb
sbbb
lock
mov
in
push
iret
sub
fisttpll
popf
and
fwait
lcall
jecxz
sbb
inc
packssdw
or
and
sahf
pusha
sbb
add
adc
pop
cs
push
leave
out
orb
add
sbb
daa
xchg
xorl
cmpsb
in
push
movsl
mov
push
mov
or
cltd
xor
push
and
and
xor
fwait
mov
bound
in
dec
sub
mov
mov
and
jmp
mov
lahf
cld
mov
and
xchg
push
loope
push
bound
and
sbb
inc
into
and
xor
mov
xor
jae
and
sub
out
loope
in
or
push
jbe
hlt
test
mov
lds
cmp
xchg
arpl
rcrb
xor
ficompl
and
loope
clc
mov
aaa
in
int3
mov
pop
pop
and
cmp
adc
and
and
lods
and
xor
or
pop
pop
and
dec
fcmovnu
sbb
out
and
adcl
jbe
xor
xor
andl
dec
movsl
adc
test
and
fnstsw
xchg
jg
popa
add
pop
aaa
mov
pop
or
and
mov
test
mov
scas
ret
out
sahf
jno
xor
push
lods
mov
xor
shrl
faddl
and
and
jno
mov
xchg
xor
xor
mov
inc
add
icebp
dec
mov
and
mov
out
cmpsl
scas
jp
fwait
and
mov
into
and
mov
cmpsb
aas
pop
dec
stc
and
jmp
sbb
push
adc
scas
inc
sahf
mov
dec
lcall
cwtl
jmp
and
std
repnz
je
ret
xchg
mov
decl
mov
xchg
dec
imul
negl
add
nop
stos
popf
sbb
into
dec
jbe
sbb
in
add
sub
inc
mov
in
inc
sahf
int
cmp
pop
idivl
loope
mov
mov
rcrb
inc
jns
addr16
and
lahf
ret
mov
push
xchg
jbe
inc
movsl
and
mov
aaa
push
and
add
xchg
and
inc
shlb
cld
sti
stc
test
mov
xor
mov
jo
adc
xchg
movsl
and
mov
mov
test
int
mov
pop
loop
jno
or
xor
push
clc
mov
and
xor
xchg
int3
lods
and
fs
and
std
cld
aas
dec
mov
dec
sub
shl
lods
push
mov
js
mov
jno
or
out
and
sbb
ss
push
fmull
jmp
dec
pop
push
sub
xchg
and
pushf
and
out
in
and
sti
jmp
mov
jnp
sbbl
jns
push
pop
jne
dec
add
stos
push
mov
push
pushf
in
sti
repz
decl
add
imul
mov
jbe
cwtl
and
imul
pushf
sbb
mov
and
xlat
adc
inc
call
vcmpps
test
mov
fdiv
mov
addb
imul
mov
jbe
cmp
shl
inc
je
or
and
sub
inc
dec
add
cmp
jge
out
xchg
fiaddl
rolb
or
aaa
jmp
xchg
imul
push
xor
pop
fildll
pop
mov
stos
lods
jle
loop
mov
xchg
stos
push
test
dec
inc
movsb
jge
fnsave
jbe
popf
inc
mov
and
xchg
out
aas
das
sbb
and
xor
popa
jmp
popa
test
movsb
scas
inc
jne
jns
lock
adc
sub
push
sbb
or
sub
add
aaa
pop
or
pop
sub
pushf
mov
sub
das
push
push
aas
addr16
out
and
jae
push
in
push
ss
and
xor
ljmp
mov
sub
sbb
xchg
xchg
js
mov
icebp
loope
xchg
jp
fisubl
pop
sti
mov
and
nop
mov
jge
and
mov
sbb
pop
pusha
or
std
repnz
sti
mov
sbb
push
ljmp
test
xor
inc
xor
or
add
mov
jmp
int
popf
dec
and
mov
xlat
jo
push
lahf
push
xor
popf
inc
xchg
or
cmc
and
rorb
lcall
int
push
mov
faddl
mov
sbb
stos
jmp
scas
jae
pop
clc
push
and
jo
movsb
ds
add
and
adc
movsb
aas
cmp
pushf
xchg
jl
and
dec
xchg
lods
push
and
mov
dec
cmp
adc
mov
cmp
inc
xlat
cmpsl
pushl
mov
fdivrl
sbb
sti
or
and
pop
jg
in
lcall
adc
jno
je
imul
sbb
mov
cmpsl
xor
lea
mov
std
cmp
inc
outsb
inc
jne
mov
aam
jno
sub
rcrb
push
dec
cwtl
or
mov
dec
mov
bound
mov
jmp
jle
xor
pop
imul
sahf
je
ficomps
test
mov
divl
fcomp
inc
icebp
lahf
mov
push
call
das
lahf
xor
int3
jg
outsb
roll
and
pop
and
and
jmp
inc
dec
xor
cld
sahf
jno
mov
mov
add
xchg
out
sbb
out
out
sub
add
imul
adc
cmp
in
dec
jne
pop
lea
and
or
popf
fbld
mov
adc
add
sub
es
jo
sub
jmp
push
popa
inc
shlb
and
and
xchg
test
inc
and
adc
sub
fdivl
int3
pop
mov
out
sbb
mov
and
gs
inc
and
push
mov
sti
xchg
mov
and
sahf
and
xor
ljmp
hlt
lods
popa
in
insb
jnp
ljmp
iret
jecxz
mov
ss
sti
fsubrs
lods
and
mov
out
stos
mov
inc
mov
xchg
and
leave
icebp
push
and
mov
out
in
sbb
add
and
and
or
cmp
and
cmp
fnsave
int3
sub
xor
mov
sarb
push
iret
mov
mov
xchg
push
inc
mov
arpl
lock
nop
mov
subl
mov
pop
fildll
rclb
out
mov
adc
movsb
dec
shlb
sbb
mov
idivb
subl
or
xchg
mov
dec
repz
jae
inc
lds
movl
cltd
rolb
sub
xchg
cmp
inc
sbb
xchg
fisubrs
push
mov
and
ret
andb
inc
movsb
repnz
pusha
mov
dec
fisubrl
fistpll
das
je
lret
inc
sbbb
cli
andb
jle
popa
arpl
pop
mov
mov
out
cmp
movsb
pop
testl
sti
ret
xorl
andb
mov
cmp
lcall
cmp
mov
and
insl
push
out
mov
test
sub
mov
push
pop
sbbl
jns
sub
or
js
dec
inc
xchg
adc
dec
xor
cmpsb
arpl
aad
push
lret
imul
sbb
xchg
and
xor
inc
and
fldenv
dec
push
inc
scas
pop
cmp
imul
clc
and
or
sti
in
cmp
outsb
cmpsb
call
out
pop
pushf
cmp
faddl
xchg
sahf
push
dec
movsb
cltd
jmp
dec
cmp
push
sbb
pop
xchg
and
out
std
jle
mov
push
cmpsb
test
xchg
mov
jo
pop
and
push
and
lret
enter
mov
lds
xchg
adc
fiaddl
test
xchg
pusha
jl
dec
and
cmpb
insb
imul
and
mov
xchg
or
pop
dec
fisubs
outsl
rol
mov
icebp
and
xchg
lock
cmp
pusha
xchg
aaa
adc
sub
add
inc
clc
stc
and
mov
movsl
pop
lock
in
and
xor
jb
movsb
xor
jo
mov
xchg
adc
and
mov
mov
jns
inc
sub
mov
roll
fsubrl
stos
aas
sub
test
scas
and
in
fwait
stos
in
shl
insl
push
dec
mov
xchg
inc
sahf
mov
xor
inc
mov
pop
fmull
inc
pusha
cltd
sbb
mov
outsb
and
mov
imull
jns
aam
xchg
int
and
lret
movsb
leave
xor
iret
adc
scas
pop
orl
xorb
imul
pop
popa
test
out
mov
push
mov
fs
pop
xor
xchg
addb
push
rcll
push
lahf
jae
and
fcomp
aad
mov
popf
cwtl
xorl
jge
dec
in
or
and
aad
lds
xor
daa
pop
and
add
xlat
and
andl
sbb
jcxz
outsl
cmpb
sti
mov
fstpl
mov
testb
pop
dec
and
clc
mov
and
mov
or
add
inc
and
das
xchg
stc
sub
sub
sti
sbb
mov
outsb
pop
cwtl
cltd
std
cli
mov
xchg
mov
mov
cmp
jns
and
adc
in
fsubrs
and
add
push
aas
xorl
xchg
sahf
out
ja
movsl
cmp
ffree
jo
daa
addl
mov
inc
clc
test
cld
mov
xor
inc
push
repz
pusha
lock
dec
mov
outsb
fcoms
stos
xor
cmp
and
inc
or
and
pop
mov
repz
mov
jno
in
add
pop
test
cmp
jbe
inc
je
mov
sbb
mov
jl
adc
and
js
jle
les
dec
mov
xor
mov
aad
lahf
divl
xor
lret
shll
xchg
dec
inc
pop
fs
imul
lahf
leave
mov
xchg
mov
lods
int3
insl
and
lods
dec
ss
and
xor
xor
lods
and
add
das
lea
popa
mov
adc
inc
lret
aas
out
jbe
pop
or
mov
cmp
jae
dec
test
adc
xchg
inc
add
adc
mov
lahf
and
jo
sbb
scas
ret
adc
sbb
dec
mov
jl
popa
outsb
sub
pop
repz
fwait
cltd
and
gs
xor
mov
jbe
rorb
mov
dec
cmpsl
mov
pop
xor
mov
inc
and
out
xor
inc
xchg
and
call
pusha
inc
cwtl
pop
in
mov
mov
andb
jnp
lahf
pop
fnop
push
mov
xchg
and
mov
xchg
and
movsb
in
mov
mov
mov
or
scas
xlat
loope
push
push
add
xchg
out
cmp
adc
pushf
jle
xor
sub
and
lock
out
data16
and
and
rcll
add
addr16
and
xchg
cmp
in
inc
add
mov
and
push
repz
xor
and
ljmp
pop
ds
rcrl
add
jnp
hlt
subl
cmp
testl
sub
inc
lret
xor
int3
and
roll
call
hlt
xor
xor
push
xchg
and
fisubs
push
int
in
ja
pop
movsb
jo
lret
and
dec
and
pop
pushf
test
shlb
arpl
and
adc
mov
int
movsb
add
leave
sbb
mov
adc
xchg
in
adc
popf
and
sbb
xor
into
mov
repz
sbb
sub
push
bound
cmp
das
hlt
enter
subl
mov
test
push
xor
pop
xor
and
xlat
test
jno
jmp
cmpsl
test
mov
mov
xor
and
cmp
pusha
and
add
rorb
jne
ds
and
xor
repnz
mov
arpl
push
loope
sub
ret
fs
push
mov
js
xor
mov
movsl
inc
jns
pop
pop
mov
popf
inc
rcll
mov
inc
popf
and
cld
in
mov
xchg
pop
loopne
jge
and
mov
mov
inc
popf
sub
pop
stc
jecxz
pop
jg
loopne
xchg
rorl
mov
aaa
stos
dec
and
flds
jbe
push
pusha
jns
repz
and
fisubrl
iret
and
aas
subl
xchg
push
mov
mov
dec
mov
adc
iret
movsb
test
je
or
loopne
pop
and
or
xchg
cwtl
sbb
push
mov
jl
sbb
dec
jb
and
pusha
icebp
and
jne
or
inc
test
mov
jbe
sub
push
mov
mov
sarb
cmpsb
call
loope
int3
mov
js
popa
or
or
mov
in
icebp
mov
cmpl
leave
mov
nop
add
xchg
fsubs
loope
rcrb
out
test
ret
mov
scas
clc
in
movsl
dec
xchg
push
mov
push
daa
popa
jb
mov
mov
push
mov
fimuls
movsb
adc
mov
push
push
stos
mov
mov
in
out
cwtl
and
rolb
stos
arpl
or
adc
fstl
xchg
lods
je
add
divl
jnp
mov
pushw
pusha
xchg
xor
mov
fldcw
xchg
cs
push
ss
popa
jno
push
fistpll
inc
pop
sbb
scas
rcr
and
mov
stos
lret
les
xchg
push
and
pusha
cmp
cmp
jg
and
xchg
and
repnz
push
mov
jmp
int3
inc
mov
xor
and
xchg
ljmp
cmc
es
jb
imul
popa
xchg
loope
mov
and
dec
mov
add
and
push
sbb
lds
ret
inc
std
jecxz
xchg
pop
movsb
popa
jmp
ljmp
sub
sbb
in
imul
fbld
cmp
add
xor
jno
je
popf
and
jg
imul
adc
in
mull
cmpsl
sub
jp
mov
add
call
cld
jo
or
cmpl
mov
sub
fsubrs
and
add
pop
adc
mov
mov
out
fldl2e
and
sub
imul
jp
xchg
scas
mov
int3
loopne
dec
jbe
mov
ret
push
mov
repnz
out
popa
push
sarl
aaa
jmp
loope
and
mov
jecxz
popf
mov
dec
sarl
mov
outsl
imul
sbb
push
mov
inc
push
mov
add
add
adc
hlt
mov
adc
imul
iret
imul
adc
lret
xorl
lahf
cmpsl
dec
andb
push
test
jne
and
mov
out
inc
popa
inc
lret
pop
fldl
cld
and
cltd
cmp
and
xorb
cmc
push
and
in
lahf
cmp
push
in
dec
mov
fsubr
adc
pusha
push
push
and
mov
or
mov
mov
dec
and
push
or
mov
cmpsb
pushf
mov
sbbb
fldt
imul
sbb
mov
pop
xchg
addl
push
in
adc
cltd
clc
andl
sbb
mov
jno
xchg
inc
push
or
daa
push
sbb
nop
ljmp
add
nop
xchg
subb
mov
adcl
adc
inc
jp
mov
insb
fildll
lret
ds
dec
sub
movsb
sub
sub
aaa
dec
dec
xchg
imul
adcl
lcall
xor
mov
and
lock
and
icebp
and
sbb
out
fildl
jmp
push
rcrb
sub
and
inc
inc
subb
loop
xor
jne
add
jb
mov
fnstsw
lret
movsb
jl
out
adc
shrl
push
mov
sub
push
rcr
and
les
push
pop
dec
inc
and
jnp
dec
and
push
fldenv
aas
fcompl
xlat
fadds
and
mov
movsl
push
and
pop
xlat
mov
pop
pop
mov
movb
repnz
and
push
adc
mov
rcrl
icebp
mov
pop
out
mov
icebp
sti
aam
daa
lahf
sbb
mov
jo
insl
mov
or
aaa
push
adc
cld
iret
notl
and
testb
and
fwait
sub
shl
add
xor
mov
aam
cmpsb
lock
xor
mov
and
adc
push
sbb
sbb
movsb
push
fnsave
push
jp
push
push
and
xchg
sbb
aas
daa
lds
lods
push
mov
aad
cmpsb
xchg
jne
sub
jge
pop
mov
push
push
and
sahf
scas
inc
inc
into
movsb
and
aaa
mov
icebp
xor
ret
xchg
and
push
arpl
mov
and
sbb
ret
mov
xchg
and
out
mov
call
jge
jecxz
and
pop
xchg
mov
inc
jl
mov
pop
sub
fdivs
and
pop
pop
push
add
stos
mov
fwait
scas
mov
adc
sbb
mov
pop
and
movsb
mov
imul
xchg
les
adc
or
push
pop
nop
or
sbb
stos
loop
dec
sub
jne
and
xchg
xor
mov
adc
push
adc
mov
cmp
iret
pop
jns
and
lahf
mov
jp
mov
add
scas
xchg
and
jmp
test
jno
dec
mov
loop
shlb
and
cmp
scas
mov
sub
movsb
or
andl
cmp
dec
insl
pop
mov
dec
and
mov
jo
pop
add
adc
bound
mov
mov
movsb
sub
mov
inc
push
popa
je
adc
shll
pop
mov
sub
sub
std
mov
ja
and
sahf
cmp
hlt
pusha
dec
sub
mov
std
adc
out
sub
push
mov
movsl
or
pop
and
rolb
xor
adc
pushf
shlb
push
and
mov
lea
jae
icebp
mov
test
popa
clc
in
and
xor
sub
push
mov
ja
fisttps
xchg
repnz
sbbl
and
out
ja
cmc
lds
jge
xor
stos
and
adc
xorb
and
sub
dec
mov
movsl
add
lds
push
mov
insl
nop
stos
imul
aam
fmuls
ret
and
add
lret
icebp
into
lds
mov
ljmp
jle
pop
and
and
mov
cwtl
lods
add
repz
scas
addb
and
fistpl
jmp
popa
xchg
and
dec
xchg
sub
push
mov
in
fidivs
lret
mov
fwait
push
lahf
call
out
leave
cmpsb
sbb
popa
add
shll
inc
movsb
push
test
sub
cmp
push
shlb
imul
adc
shrl
es
andl
stos
add
push
pop
push
jo
and
stos
xor
xchg
ja
jp
xorl
enter
addr16
inc
bound
cmpsb
mov
xor
scas
and
xchg
int3
inc
dec
lcall
rcrb
sbb
mov
inc
mov
and
orb
or
mov
lret
sbb
fwait
xor
pop
xchg
mov
or
push
popa
xor
xchg
fisubs
test
cmp
xor
push
and
mull
pusha
mov
sub
xor
in
in
popa
jp
call
std
mov
fisttps
jns
and
add
addr16
in
fs
jg
and
add
add
std
mov
jmp
jns
push
and
xchg
jne
and
aas
aam
test
imul
dec
and
repz
gs
add
pushf
dec
mov
jo
sub
or
insb
cwtl
mov
push
xchg
inc
and
cltd
adc
inc
subb
ret
and
dec
mov
dec
and
inc
mov
paddsb
out
hlt
push
leave
pushf
mov
jge
das
xchg
push
and
cltd
iret
or
lods
adc
mov
inc
out
shlb
pusha
movb
stos
cmp
aam
fdivrs
and
popf
iret
or
sahf
or
lods
jle
pop
data16
fsts
test
add
mov
addb
movsb
movsl
das
cmp
pop
and
cmpsb
adc
xchg
mov
cmp
pop
and
mov
movsb
jae
mov
repz
jns
and
sub
pop
add
mov
into
aas
push
popa
and
movsb
push
or
loope
xor
call
out
jb
das
and
inc
dec
ret
and
jo
pop
jmp
inc
icebp
and
fdivp
ffree
popa
test
test
nop
fsubs
lock
jge
mov
arpl
sub
adc
cmpsb
push
cmp
and
stos
pop
scas
mov
xor
bound
orl
insb
cltd
xor
addr16
mov
and
test
push
pop
in
mull
rep
sbb
leave
push
and
aaa
xorb
push
push
sub
and
std
xchg
or
fdivs
loope
add
fwait
test
and
cmpsl
add
shlb
inc
lret
lods
mov
mov
push
and
jns
stos
push
sti
and
push
sbb
push
mov
sub
jmp
sub
and
cwtl
dec
test
sub
scas
inc
jge
mov
mov
rorb
adc
loopne
mov
popa
dec
xor
push
and
add
mov
pusha
mov
ret
mov
popa
rcrb
and
inc
ficompl
mov
xchg
and
out
push
call
mov
popa
fldl
mov
fwait
and
pop
popf
stos
xor
leave
inc
sahf
shlb
push
lret
mov
cli
sti
push
addl
jecxz
push
cmpsb
and
sub
mov
sarb
and
and
mov
sbb
xchg
push
leave
popf
out
fwait
neg
mov
dec
xchg
adc
cwtl
mov
push
xchg
sub
mov
dec
xchg
fmulp
mov
mov
push
stos
and
sbb
xchg
jge
push
pop
out
fwait
and
fbld
fsubs
push
xor
aaa
add
sub
js
pop
inc
insb
xchg
je
mov
xorl
sub
adcl
jo
out
popa
movsb
sbb
push
int3
or
cmp
test
and
and
mov
and
jno
fsubl
bound
popf
push
call
sub
mov
lock
mov
xchg
int3
xor
dec
js
xor
mov
test
and
movsl
push
push
imul
clc
push
aaa
jo
data16
sahf
sbb
lahf
inc
adc
push
cmp
out
shll
test
repz
xchg
sub
dec
out
jecxz
lret
push
adc
fistpll
repnz
pop
mov
mov
lods
cwtl
sub
insl
mov
add
and
inc
pop
mov
aam
xchg
and
mull
push
cmp
mov
arpl
dec
cmp
add
and
jmp
cs
std
cmpl
add
and
data16
jp
sub
xor
rcll
fsub
and
imul
dec
es
and
jbe
jo
sbb
and
iret
xor
xchg
fisttps
pop
sbb
fdivs
inc
and
cmp
aam
mov
push
decl
xchg
cmpsb
test
in
fbld
aam
xchg
addr16
mov
xchg
fwait
das
add
lahf
dec
fdivrs
mov
repnz
adc
int3
sbb
mov
pusha
push
mov
fimuls
daa
pop
and
lret
sub
lods
xchg
inc
cli
xor
pop
pop
push
cmp
jbe
fs
pop
and
jge
loope
mov
jae
insl
insl
xor
cmp
repz
sbbb
outsl
pop
cltd
or
loop
fildll
andl
dec
je
fadd
mov
dec
imul
and
mov
xor
test
mov
imul
or
popa
jecxz
aad
insl
lcall
popa
inc
popa
mov
pusha
push
xor
fs
jl
fldt
cmp
and
popa
push
or
test
mov
and
sti
sbb
pop
xor
pushl
and
cmp
imul
push
mov
scas
imul
addr16
jp
xchg
aam
test
jmp
inc
jae
add
pop
movsl
and
inc
jb
into
cmp
and
aas
into
jl
push
xor
inc
dec
jne
cmp
jns
cmp
pop
mov
popa
lea
mov
insb
mov
xorb
mov
xchg
sub
add
sbb
jmp
mov
xor
sbb
and
mov
and
mov
add
or
xchg
inc
int
sub
arpl
jne
mov
aaa
mov
mov
fidivrs
cmp
shll
test
fisttpll
jmp
push
xchg
xor
mov
fs
mov
and
xor
push
and
das
ffreep
das
lcall
mov
loop
adc
popa
andb
sub
and
or
xchg
mov
movsb
fldenv
mov
test
pop
mov
lds
add
and
clc
adc
mov
sub
cmp
das
rclb
ja
push
jae
loopne
testl
scas
jnp
shlb
push
mov
cmpsl
test
jb
jle
cmc
lahf
dec
and
cmp
icebp
outsb
pop
rorb
and
mov
xchg
lea
and
push
xchg
movsb
mov
mov
in
or
inc
xchg
push
movsl
ss
adc
jno
mov
movsl
jmp
mov
mov
adc
leave
mov
dec
adc
push
lods
pop
pop
push
or
sub
popf
cmpsl
sub
push
jg
rolb
ret
andb
mov
sub
and
add
fdivrl
sub
dec
outsl
dec
fs
and
popf
dec
sub
adc
test
loop
test
dec
xchg
push
push
sub
cmp
inc
lahf
adc
lods
adcl
clc
addr16
leave
adc
sbb
leave
pop
rolb
outsb
es
lcall
push
mov
inc
mov
xchg
sub
sub
jle
and
pop
mov
and
sbb
mov
mov
xchg
jno
add
and
pop
mov
in
nop
cld
xor
cmp
mov
mov
mov
and
or
adc
mov
shrl
inc
mov
or
int
jp
outsb
and
mov
stc
and
inc
mov
mov
and
in
jae
inc
shll
adc
daa
fsubs
sbb
js
and
movsb
xor
and
aad
shlb
nop
test
in
and
and
das
in
adc
pop
popf
sub
push
pop
xor
push
loopne
push
push
mov
xor
mov
xor
mov
es
arpl
out
int
je
lock
cmp
outsl
mov
mov
movsl
subl
aaa
cmpsb
xchg
daa
loop
cmc
and
cmpsl
fistl
xchg
daa
std
lods
lds
cli
sub
mov
add
dec
mov
jne
sub
rcll
aam
cwtl
test
dec
outsl
cmp
stos
shlb
dec
xor
pop
mov
and
and
insb
iret
div
pop
daa
mov
mov
test
call
push
ds
xor
pop
xor
imul
cmp
add
cmp
movsb
or
cmp
lock
mov
not
mov
dec
popf
and
ret
jmp
das
sbb
mov
sub
pop
enter
addl
add
or
jbe
clc
and
icebp
fucomi
push
add
lret
ss
aad
into
inc
sti
mov
or
sub
sahf
loopne
arpl
orl
stos
test
xchg
lods
xor
sbb
xlat
ss
aaa
xor
push
fsubrl
pop
cmp
das
jo
dec
add
scas
add
int3
faddl
xchg
insl
popa
mov
rorb
icebp
and
dec
into
jp
sbb
and
call
aad
and
jge
and
in
mov
stc
bound
xchg
and
or
cmp
sub
data16
and
nop
mov
popf
inc
mov
and
hlt
xor
iret
stos
adcl
lods
roll
xchg
sub
mov
bound
mov
xor
mov
call
iret
xchg
mov
cmc
mov
aas
hlt
sahf
popa
mov
jle
test
mov
cmp
in
jecxz
mov
and
les
inc
push
mov
rcl
jnp
mov
into
stos
push
popa
push
mov
mov
jae
dec
shll
enter
hlt
or
mov
and
push
or
push
or
mov
cmp
xor
std
mov
adc
les
pop
inc
and
repnz
movsb
mov
cmp
pop
sti
outsl
imul
outsl
adc
and
shll
lods
mov
rclb
adc
lret
icebp
xor
ss
cmpsl
or
xlat
and
or
cltd
insl
testl
cmpsb
repz
imul
jle
outsl
inc
dec
insb
fidivrl
fs
inc
sub
sti
in
and
mov
jle
movsl
aam
loop
arpl
and
insl
mov
popa
orb
aas
loop
and
shll
inc
lahf
and
sub
cltd
push
and
pop
mov
test
jp
adc
add
popa
pop
andl
push
loopne,pn
js
xor
sbb
mov
sbb
mov
popa
mov
iret
mov
push
insl
jecxz
cmpsl
popa
decl
push
pusha
xor
loope
aam
cmpsb
mov
repnz
adc
orl
adc
fbld
test
sahf
adc
fisubrs
and
ret
mov
loop
mov
mov
stos
es
aam
lret
mov
stc
rcrl
dec
push
or
mov
dec
push
push
cmp
xchg
and
adc
mov
leave
sarl
pop
and
push
pusha
lods
mov
jmp
loope
push
jbe
xor
jae
in
xchg
dec
mov
jmp
xchg
and
loope
and
jae
and
and
lcall
pusha
ds
and
rcrb
jmp
imul
aas
xchg
fcomip
pop
xchg
stos
and
fistl
and
and
cmpsb
fnstcw
push
insb
dec
jnp
mov
adc
roll
sub
add
stos
rol
xor
movsl
mov
mov
mov
arpl
lea
shrl
call
loope
xor
jg
icebp
cmpsb
ja
push
pop
imull
pop
dec
out
adc
or
ss
scas
push
mov
push
mov
jge
rcll
push
sub
in
aas
imul
push
outsb
aaa
cmp
adc
adc
insl
pop
sbb
test
sub
jno
mov
bnd
aam
mov
in
push
fmull
jecxz
es
mov
movsl
fcmovb
movsb
jae
or
ja
cmp
mov
stc
add
pop
dec
icebp
lods
cmpsb
and
mov
push
mov
and
mov
sbb
test
adc
cmp
shrl
mov
and
pop
and
and
pushf
xchg
arpl
aad
testb
aas
movsb
and
dec
aaa
pop
decl
fisttpll
sti
push
mov
mov
and
jno
or
lret
ss
sbb
mov
cmp
cs
and
add
jge
mov
pop
jo
xor
jno
mov
lods
push
fidivl
fdivr
sub
outsl
ror
sub
adc
nop
inc
imul
sub
pop
jae
mov
test
and
lea
fsubrp
cltd
xchg
insl
cmp
and
loopne
add
in
sbb
push
adc
stos
jecxz
bound
sub
push
cwtl
mov
pop
pop
fimuls
mov
mov
sub
and
mov
or
ds
sbb
or
ja
xor
inc
and
lahf
imul
fisubrs
je
aas
les
mov
enter
sbb
shll
test
aam
pop
cmc
xorb
dec
adc
sbb
jl
xchg
dec
xorb
imul
dec
cwtl
xchg
or
in
sahf
jl
adc
rcll
dec
add
jno
into
push
dec
inc
mov
sub
and
xchg
scas
ljmp
jns
sahf
fisubl
stos
xor
dec
popf
dec
and
mov
int
and
leave
rorb
sub
sbb
lods
divl
aas
into
fstp
and
hlt
adc
push
sub
cmc
add
rorb
inc
push
lahf
xchg
das
sub
push
lahf
adc
mov
inc
pop
test
insl
aam
sbb
rcr
sbb
fcomps
in
in
cwtl
and
lock
cmp
push
repz
in
out
int3
adc
outsl
cmp
dec
dec
mov
cs
mov
sbb
dec
push
mov
out
lock
inc
dec
jle
cltd
ffree
jecxz
adc
shl
loop
es
sbb
sbb
cmp
or
daa
cmp
jb
push
push
dec
and
lods
xchg
scas
and
cmp
mov
inc
jp
lahf
jge
dec
in
popf
xor
lea
push
clc
std
mov
xchg
popa
out
mov
out
cpuid
shrl
jo
push
jge
movsb
loope
fcmovne
fwait
cmp
fadds
out
cmp
nop
and
mov
repnz
add
rclb
cmp
ss
sub
or
jb
add
xor
mov
mov
mov
push
mov
jmp
and
dec
int
mov
les
or
fstps
dec
cmpsb
iret
mov
add
add
cmp
and
sub
int3
xor
pop
xor
cmp
mov
push
mov
xchg
lock
xor
and
xor
mov
xor
pop
push
jp
push
and
sub
and
xchg
repnz
out
pop
inc
sub
imul
fsubs
inc
stos
jnp
cld
cmpl
rolb
aad
jmp
mov
aas
or
and
call
notb
pop
mov
sbb
xchg
sub
loop
xchg
imul
mov
lds
sti
mov
mov
xchg
sub
loop
stos
pop
jmp
sub
xchg
test
add
and
pop
ret
enter
lret
xchg
or
lahf
ja
cmp
aad
add
pop
jns
test
xor
push
add
adc
jle
sti
call
dec
insl
bound
xchg
pusha
and
xchg
dec
lods
and
sbb
sti
mov
test
test
daa
test
xchg
sub
pusha
leave
mov
bnd
push
mov
xchg
xor
mov
mov
pop
sbb
and
das
sbbl
inc
ret
dec
ss
pushf
and
pop
lods
push
jl
insb
stc
and
lea
dec
in
push
inc
dec
lea
lods
sahf
fisttpll
xor
mov
adc
cs
or
movsl
dec
gs
push
cwtl
or
inc
xor
pop
jno
dec
orb
mov
test
scas
add
adc
mov
jl
popa
mov
mov
ljmp
js
cwtl
insl
and
shrb
hlt
fwait
sbb
and
loop
ja
cmpsb
pop
push
dec
xor
test
test
insb
or
mov
dec
pop
adc
cmp
or
push
and
xchg
ds
out
push
in
xchg
out
lea
call
inc
add
and
jb
popa
add
inc
and
daa
mov
idivl
mov
loop
dec
xor
dec
and
popa
inc
jo
cmp
push
mov
pop
mov
mov
mov
sub
push
dec
and
cmpsb
xchg
js
rolb
nop
and
dec
and
inc
jge
loopne
data16
leave
xchg
and
mov
mov
movsb
inc
adc
jns
cmc
lret
andl
arpl
ret
out
and
mov
adc
imul
sub
mov
xchg
mov
hlt
pop
xchg
and
add
into
jae
pop
mov
sub
shll
jge
mov
popf
aaa
fs
pop
add
jg
mov
sbb
stos
xchg
es
add
lcall
xchg
add
ret
mov
dec
mov
dec
mov
lds
sbb
insl
adc
mov
jge
fwait
pop
and
insb
daa
mov
and
xchg
call
mov
ret
jg
sbb
es
andb
jge
and
sbb
ss
mov
mov
dec
mov
out
clc
cltd
insl
sbb
and
add
mov
add
push
popf
in
jns
and
pop
movsb
push
mov
lea
xor
test
xor
imul
and
lahf
in
xchg
and
xlat
mov
pop
mov
das
jnp
fwait
subl
adc
mov
jl
and
mov
add
dec
inc
jns
jecxz
aas
mov
ror
sbb
dec
sbb
cmp
dec
mov
pushl
and
icebp
pop
adc
and
jno
xor
addr16
or
loope
and
pop
cmc
adc
push
mov
and
mov
mov
and
ja
cmp
leave
enter
in
xor
out
and
nop
mov
stc
and
mov
inc
std
pop
xor
repnz
int3
jp
add
mov
in
push
out
jecxz
xchg
sbb
insb
and
stos
xchg
jl
and
sbb
sbb
mov
xchg
inc
rolb
dec
test
push
mov
imul
pop
jae
nop
adc
jns
lea
pop
and
arpl
jae
jp
jle
jl
dec
in
push
test
pushw
push
negb
jno
add
cltd
add
int3
testl
pushf
mov
in
hlt
popl
inc
sbb
inc
and
pop
lret
and
and
mov
sti
xor
lahf
pusha
and
scas
jecxz
in
imul
pusha
shll
cli
popa
or
scas
and
push
lds
mov
mov
adc
xchg
add
xchg
enter
mov
emms
pop
cmp
and
icebp
test
xor
cmc
push
in
and
dec
pusha
data16
cmpsb
sub
inc
je
aam
xchg
in
and
xlat
push
inc
test
mov
mov
push
and
popa
or
int3
inc
sbb
mov
movsl
or
mov
ret
stc
insb
sbb
fisubs
mov
aas
mov
cltd
inc
loop
mov
add
sub
lock
and
dec
das
aad
sbbb
outsl
rcl
mov
sub
add
mov
pop
cmp
dec
pop
stos
pusha
int
sbb
pusha
outsl
cmp
inc
xchg
clc
aam
das
movsb
and
into
adc
in
mov
xor
xor
xchg
popf
jae
mov
pusha
inc
push
in
adc
in
inc
sub
das
shrl
test
inc
jbe
loop
popf
test
in
sub
sar
fstpl
ret
ljmp
inc
push
arpl
repnz
xor
adc
add
and
pop
jmp
inc
add
loopne
pop
jb
add
xchg
adc
jle
in
adc
inc
xor
ret
cmp
pop
lret
mov
insb
push
inc
cltd
dec
add
loop
dec
and
add
jle
jbe
mov
xchg
pop
mov
push
and
jo
in
push
mov
xchg
mov
test
xchg
inc
scas
and
lods
xchg
loope
mov
shll
clc
jge
clc
shrl
and
xor
movsl
je
fistpll
push
push
dec
js
and
popa
je
sbb
lods
mov
lods
cmp
insb
int3
sahf
mov
bound
mov
lret
push
movsl
xor
arpl
inc
push
mov
push
inc
push
and
push
mov
mov
ja
sti
sbb
sbb
rcl
and
and
push
fdivl
cmp
dec
ss
hlt
popf
pop
push
and
repz
mov
fists
inc
loope
dec
int
sub
enter
mov
mov
je
or
xchg
and
filds
and
sub
sti
pop
cmpsl
mov
adc
cwtl
jne
jg
mov
cld
lahf
std
outsl
sbb
mov
mov
cmc
mov
mov
jno
ljmp
cmp
inc
and
xorl
mov
in
mov
popf
popa
or
push
sarb
or
mov
aam
faddl
loope
inc
push
push
adc
adc
cmpsb
xorl
loope
dec
fucomi
and
and
sbbl
adc
js
fst
xchg
in
xchg
and
mov
cmpsl
test
and
mov
test
push
sub
je
lahf
and
mov
andb
ret
fdivrl
and
and
inc
and
bound
push
or
fistpl
cmp
shrb
shlb
int3
mov
pop
das
add
sbb
mov
inc
cmpl
add
dec
outsb
cld
fbld
add
sbb
mov
imul
and
lahf
or
pop
pop
sub
or
ret
ds
cs
or
je
jge
adc
jp
rol
inc
out
lahf
scas
fprem
and
xor
data16
xchg
shll
in
adc
mov
mov
and
adc
inc
and
mov
jbe
not
cmp
xor
lahf
mov
fxtract
mov
sub
data16
or
and
and
sbb
mov
inc
fidivrl
pop
fs
es
data16
add
mov
es
jns
mov
mov
jb
int
pop
arpl
sti
repnz
and
sub
sub
mov
cmp
aas
xchg
xlat
adc
std
or
mov
xchg
addr16
outsb
cmp
mov
mov
lcall
in
pop
and
shrl
iret
xor
mov
sub
cmc
xor
adc
jecxz
aaa
xchg
cmpsl
mov
ja
and
outsl
or
sbb
movsl
fwait
push
pop
mov
dec
sub
inc
dec
jne
and
enter
jge
and
std
scas
sbb
mov
dec
clc
test
cwtl
stos
and
pop
xchg
je
add
xchg
jne
fs
and
out
or
and
add
and
sub
adc
sub
and
mov
inc
and
jmp
mov
or
pop
cmp
jecxz
fs
clc
fucomip
daa
mov
addr16
jno
arpl
leave
popa
movswl
sub
inc
push
adc
jns
movsb
cmpl
mov
std
and
cmpl
and
mov
outsb
cmp
sbb
pop
cmp
ja
mov
mov
jne
add
and
adc
or
dec
mov
mov
int
jle
mov
shlb
xchg
and
mov
dec
xor
add
mov
xlat
adc
push
jle
es
lods
rorb
adcl
xchg
mov
and
mov
lds
jecxz
nop
push
cld
roll
or
pusha
push
adc
and
imul
ret
into
dec
adc
xchg
lock
xchg
cwtl
mov
loope
fimull
aas
insl
fs
nop
and
outsb
clc
hlt
dec
sbb
inc
jns
pop
roll
jo
inc
mov
and
xor
rorl
mov
push
outsb
sub
push
mov
add
sub
sarb
data16
test
into
xor
pop
xchg
or
cmp
scas
sti
and
addr16
mov
pop
and
test
mov
mov
subl
in
outsl
mov
es
jb
lret
mov
mov
push
mov
mov
mov
mov
add
inc
jno
or
push
mov
in
mov
and
outsl
pop
cs
cmp
ficompl
xchg
xchg
sbb
cmpsb
cltd
xchg
sbb
lahf
jg
std
pop
cmc
jmp
repnz
inc
xor
mov
mov
mov
popa
dec
xchg
in
sub
cmp
pop
shll
icebp
rcrl
pop
movsb
and
cld
test
mov
gs
pop
mov
call
adc
xor
inc
pop
jg
adc
and
das
lods
mov
push
mov
mov
imul
and
xchg
and
add
and
int
into
mov
fs
adc
in
and
xor
shlb
movsl
push
ljmp
inc
pop
sbb
shll
int
fwait
push
stos
and
adc
pop
jle
fildll
nop
sbb
je
test
adc
add
pushf
and
or
dec
int3
and
mov
cmpsb
andl
roll
aas
in
leave
std
in
mov
cmp
int3
jmp
iret
inc
in
popa
mov
and
mov
test
xor
and
out
fwait
arpl
call
orl
jecxz
inc
lcall
sbb
mov
inc
xchg
daa
adc
pop
es
lock
sbb
iret
and
insl
inc
jo
mov
and
mov
repz
adc
mov
add
dec
jp
push
scas
xchg
test
pop
push
jl
stos
sub
push
cmpsb
lods
sbb
int
out
mov
adc
leave
pop
in
push
adc
lds
mov
xchg
mov
and
je
in
push
push
and
iret
mov
and
mov
movsb
imul
dec
lcall
fbld
stos
jp
xor
aad
adc
mov
adc
scas
push
test
loope
inc
and
jle
in
inc
fs
movsb
mov
push
inc
repz
outsl
and
dec
nop
cmp
bnd
add
jle
cmp
outsb
lock
popf
xchg
and
cld
in
jg
pop
fldenv
scas
sub
mov
inc
and
rcr
outsb
dec
jg
pushf
pop
sub
mov
xchg
sub
inc
ja
mov
and
sub
rclb
arpl
popa
orl
and
dec
sub
int3
and
fwait
pop
sti
jmp
dec
jno
and
xchg
std
cmp
dec
aam
je
mov
xchg
and
jne
leave
bound
and
and
add
movsb
jnp
call
xchg
movsl
push
push
stos
rcr
cmp
mov
mov
and
jecxz
jl
shr
not
jae
pop
insb
jle
dec
inc
or
xor
jae
mov
sbb
mov
and
xor
test
imul
jno
test
and
mov
adc
es
pop
sbb
ret
cmp
jle
jl
jge
js
dec
xchg
adc
or
imul
jp
call
addl
adc
scas
and
loopne
and
arpl
jo
sbb
xchg
mov
push
inc
inc
pop
inc
and
mov
jns
adc
adc
xor
xchg
push
mov
cmc
and
adc
cwtl
mov
inc
and
std
movsb
movsl
sbb
subl
add
dec
stos
pop
mov
sub
xor
mov
pop
rol
and
ret
fisubl
cmp
sub
aas
and
lds
mov
add
xchg
imul
shlb
push
mov
leave
addr16
nop
mov
sbb
sbb
mov
sub
push
inc
xchg
and
xor
aas
divl
les
lods
sbb
insb
pop
clc
adc
add
mov
and
sbb
stos
mov
adc
push
sbb
and
fsubs
iret
cmp
and
orl
sub
push
shll
insl
xchg
test
std
es
inc
lret
cmp
mov
out
sbb
lea
movb
and
jge
nop
inc
loop
and
je
sbb
mov
jmp
xchg
and
inc
aad
stos
xchg
movsl
mov
and
and
jmp
and
sbbb
mov
sbb
popf
inc
lcall
xchg
xor
mov
repnz
push
fcmovu
and
jecxz
andb
dec
aas
and
int3
jo
into
add
in
mov
test
xchg
sarl
jecxz
ror
mov
sbb
jne
mov
mov
test
test
cmpsl
jnp
mov
ret
loop
adc
sbb
orl
mov
loop
fsubrs
scas
inc
in
lret
dec
sbb
in
push
inc
xchg
mov
in
in
rorb
out
mov
and
cmpsl
or
pop
loopne
and
mov
jle
sahf
hlt
jbe
lret
jg
or
dec
xchg
sbb
and
movsl
sbb
int
jns
andl
test
xor
adc
gs
movsb
out
test
or
and
jge
xor
imul
xchg
adcl
stc
or
jae
loopne
scas
mov
jge
inc
and
jmp
dec
xor
test
dec
jo
and
movsb
pop
std
ret
and
push
xor
jne
adc
pop
mov
and
sbb
les
lahf
mov
xorl
pop
and
pop
jle,pt
xchg
out
in
lds
jns
mulb
and
add
call
mov
push
sbb
inc
out
sub
test
mov
pop
fidivrl
imul
push
lcall
or
sub
and
adc
test
cld
subb
cmp
stos
popa
pop
aaa
mov
popl
mov
arpl
sub
test
cmp
xchg
xchg
mov
and
pushf
and
and
js
sbb
cmp
in
mov
mov
mov
sub
stos
mov
xor
adc
divl
fists
sub
pop
aad
popa
mov
mov
sbb
inc
mov
jns
lahf
jle
int3
aad
imul
and
mov
mov
and
pusha
mov
lcall
mov
inc
cmp
fstp
mov
test
ds
mov
sbbl
and
push
fstpt
and
push
dec
ljmp
pop
inc
sbb
sub
xchg
and
fildll
and
ds
lods
leave
or
pop
arpl
cli
ljmp
add
sub
lea
aaa
and
xor
iret
shrb
test
addr16
adc
lcall
mov
or
cmp
movsb
and
sbb
adc
cmp
sbbl
insb
pop
aas
and
pop
movsb
mov
and
dec
ret
and
jg
loope
push
cwtl
sbb
orl
push
divb
add
sbb
popf
cmp
pushf
push
and
sahf
addl
loop
dec
and
shlb
push
test
rclb
pop
mov
add
xchg
mov
inc
push
xchg
movsl
outsl
dec
xchg
scas
aam
sbb
popf
dec
or
orb
inc
and
jb
fists
out
push
jmp
repz
or
inc
mov
bound
adcb
je
push
push
xchg
sbb
adc
mov
xlat
pop
popa
adc
push
movsl
xor
dec
pop
popa
mov
add
jmp
mov
and
pop
xchg
adcl
pop
loope
jmp
dec
in
out
mov
pop
gs
sbb
inc
inc
dec
bound
orl
fisubrs
xchg
dec
add
sti
bound
sbb
int3
sbb
jnp
int
je
test
push
xlat
or
imul
lahf
xor
and
adc
push
insl
ret
dec
cmp
mov
cmpsb
outsb
mov
lock
push
jmp
push
sbb
or
xchg
xchg
mov
out
pusha
test
push
inc
mov
loope
adc
mov
imul
lods
xlat
dec
dec
and
cmp
and
pop
cmp
mov
mov
jne
sbb
sub
js
pop
jns
mov
mov
insl
mov
xchg
sub
add
and
loopne
and
mov
mov
jle
int
jne
xchg
cmp
inc
test
push
jp
sub
adc
lock
cmp
dec
push
jns
xchg
aas
rep
and
xchg
rcrl
inc
xchg
pop
sub
add
pop
xchg
stc
and
jle
and
loope
shlb
jmp
lds
mov
inc
and
push
lea
sbb
aas
bound
pop
add
adc
add
lahf
call
test
test
scas
mov
fistpl
xor
and
and
cmc
repz
movsl
fcoml
mov
call
and
std
cwtl
inc
enter
into
xor
fstpt
inc
jno
and
lock
movsl
iret
insl
xor
mov
data16
aaa
movsb
dec
cmpl
and
mov
cmc
mov
pop
mov
pop
das
jecxz
call
shlb
sbbl
xor
dec
cmp
cmpsb
jle
xchg
stos
push
outsl
cld
and
insb
mov
dec
and
and
nop
add
and
js
aam
or
fisubs
sub
mov
pop
mov
dec
or
mov
in
dec
push
stos
sbb
cmc
and
loop
jp
cmpsb
xchg
mov
dec
aaa
aam
jne
and
stos
mov
and
aas
cli
test
jge
pushf
inc
cltd
scas
adc
dec
negb
ret
popa
and
fsubr
inc
movsl
aas
jp
lret
and
or
lret
test
add
fucomp
xor
jnp
sub
int
inc
and
inc
inc
dec
and
sti
xor
push
cwtl
add
mov
mov
and
pop
movsb
cmpsb
pop
aad
fcomps
cltd
pop
xor
or
outsl
ret
stos
push
iret
and
sub
fcompp
push
addr16
mov
jae
insl
and
add
popa
fwait
mov
adc
cmpsb
cmp
fisttpl
mov
popa
add
xor
pop
rcl
cld
dec
mov
cmpsl
or
pop
pop
inc
and
aam
xor
stos
test
xor
push
xchg
and
rolb
cmc
hlt
jecxz
aaa
mov
je
lret
popa
xor
and
inc
shr
inc
and
mov
popa
cli
mov
and
cmp
mov
mov
adc
dec
bound
out
inc
cmpsl
leave
ss
fsubs
adc
jns
lcall
push
mov
pop
fwait
pinsrw
nop
xlat
into
cmp
xor
xchg
add
and
rorl
adc
fwait
pusha
mov
popa
jl
push
inc
dec
mov
int
and
mov
jge
std
mov
xor
cld
aam
imul
scas
dec
test
pop
decl
jno
mov
xchg
repz
push
cmp
loopne
inc
pushf
mov
add
jle
cltd
dec
rclb
xor
rcrb
add
or
and
or
loope
jo
popa
aam
xor
mov
andl
cmp
ljmp
pop
jle
xorl
add
xor
rcrl
dec
cmp
pop
pop
fisubrl
and
dec
pop
jmp
add
xchg
arpl
ror
sbb
jmp
out
ds
sbbb
mov
mov
frstor
pop
movl
xchg
dec
adc
adc
aam
push
adc
outsl
pop
and
xchg
and
pop
pop
loop
je
scas
sub
lds
pop
fisubl
imul
cmc
loop
push
mov
movsb
xor
xor
fbld
push
sahf
ds
push
lock
mov
inc
aad
aaa
dec
and
insb
sbb
and
mov
mov
vorpd
pop
aas
clc
and
xchg
xor
mov
mov
cmp
mov
jge
ja
ret
dec
mov
and
pop
scas
sub
shll
push
adc
or
push
and
data16
sub
stos
and
mov
mov
insl
cmp
mov
cmp
push
fldcw
dec
lods
and
dec
xchg
sbb
push
and
popa
pop
pusha
out
xor
sub
adc
mov
mov
in
icebp
pop
in
fstpt
xchg
fmulp
mov
and
jnp
pop
sbb
mov
repnz
dec
es
mov
sbb
cmpsb
mov
dec
call
sub
mov
xchg
outsl
dec
mov
inc
mov
and
cs
int
popf
loop
shrd
inc
sub
daa
js
mov
and
lds
push
and
jns
or
scas
adc
inc
push
fs
xchg
or
js
mov
xor
out
testl
ret
add
out
ss
ret
dec
ds
and
gs
nop
insl
jmp
or
jo
sbb
mov
test
fstl
adc
mov
pop
jl,pt
and
xchg
popa
in
push
test
inc
pusha
push
mov
leave
xchg
sub
xor
cltd
in
sub
or
and
xchg
push
or
add
mov
sbb
movsl
mov
mov
sbb
xchg
mov
sahf
fdivrs
sbb
dec
pop
ret
inc
mov
pop
mov
popf
std
test
xor
sub
and
stos
ja
and
cli
mov
jg
insl
jae
jmp
repnz
push
sub
mov
movsb
sbb
dec
and
sub
add
mov
xor
and
scas
sbb
sub
jns
mov
mov
stos
and
test
xor
loopne
and
loopne
xlat
xchg
ds
xchg
aaa
pand
xchg
cmp
jecxz
mov
jle
inc
js
jmp
push
add
addl
std
sbb
leave
jbe
insl
cli
xchg
jnp
jmp
fucom
das
mov
fiadds
pop
lcall
pop
and
jb
arpl
add
push
sbbl
testb
mov
or
sti
and
mov
leave
out
insb
and
cmpsb
aad
dec
dec
and
xor
mov
mov
jns
aam
test
in
sub
mov
in
mov
dec
and
aad
sbb
jb
dec
xchg
js
in
jle
arpl
mov
xor
jno
mov
int
xor
test
sbb
fsubl
fwait
iret
repz
add
out
jo
popa
and
and
rcr
xor
int
mov
orl
divb
dec
mov
call
and
movsb
fsubl
mov
xor
sbb
in
push
addr16
push
popa
mov
daa
or
popa
push
pop
cmp
cmpb
xor
and
add
pop
mov
lods
out
loop
xor
call
dec
xor
adcl
arpl
cmp
inc
stos
outsb
movsb
pop
inc
fistl
lahf
add
loop
popl
mov
lea
or
sahf
test
adc
cmpb
mov
loope
int3
inc
decl
aas
and
cmp
add
lcall
cmp
mov
shrd
and
je
or
mov
push
fstl
jbe
sub
cltd
xor
and
or
mov
sbb
stc
inc
push
dec
cmp
stos
xchg
lock
jg
filds
data16
pop
mov
loop
imul
pushf
or
mov
inc
stos
popf
xchg
pop
sbb
jbe
ret
or
and
dec
or
push
pushf
out
jno
sahf
mov
out
inc
adc
mov
mov
cmpsb
inc
mov
mov
or
xor
adc
lret
mov
insb
and
into
xor
xor
cmpsb
in
pushf
mov
sbb
sub
sub
and
iret
adc
test
loop
inc
pusha
aaa
icebp
and
ds
lds
mov
and
les
cmp
sub
sbb
jns
incl
mov
popf
lds
popa
dec
sbb
jae
scas
dec
mov
sub
stc
sbb
inc
test
mov
repnz
sbb
sbb
stc
pushf
les
xchg
outsl
and
arpl
and
xor
nop
jecxz
and
jl
mov
xchg
sbb
add
cmp
sbb
aad
lds
popf
jo
push
xchg
dec
and
add
mov
pop
std
lahf
mov
out
jb
popf
out
and
dec
add
insl
inc
and
pop
in
adc
or
push
test
sbb
cwtl
negl
sbb
repz
pop
xchg
and
add
insb
loop
xchg
movsb
and
addr16
and
leave
sub
add
rorl
pop
pop
pop
out
cld
adcb
es
and
hlt
jle
shlb
cld
push
push
fcompl
lret
xchg
pushl
movsl
in
fisubs
mov
mov
dec
adc
push
inc
xor
dec
and
scas
rcr
jb
lcall
icebp
jg
fisubs
pop
addr16
rorb
fwait
rolb
shll
ret
sahf
data16
inc
mov
cmc
out
mov
sub
test
mov
and
popa
push
mov
mov
push
dec
stc
arpl
and
push
add
int3
and
test
push
mov
int
inc
fcoms
daa
fbld
mov
cmp
loop
push
fwait
sbb
insb
mov
and
mov
xchg
mull
mov
test
mov
fbstp
loope
inc
sahf
push
dec
jno
xor
stc
xlat
lea
lret
cmpl
or
andb
add
pop
and
ret
mov
gs
dec
insb
cmp
fisttpl
xchg
icebp
and
jmp
pop
popa
adc
or
test
ljmp
fnstenv
push
jmp
and
jo
mov
xchg
int
popa
pop
lret
lods
ds
and
fbld
data16
dec
rep
and
pop
nop
mov
movsl
adc
and
ss
imul
jb
sub
sbb
and
insl
mov
or
push
or
and
or
stos
out
outsl
or
xor
xor
add
sbb
mov
cmp
add
imul
inc
andps
icebp
out
mov
cmp
and
sbb
jmp
cltd
mov
mov
mov
dec
sahf
sub
insl
in
loop
iret
jbe
pushfw
addl
push
shll
mov
in
nop
and
xchg
mov
and
movsl
imul
and
jno
fistpll
fwait
rclb
mov
cmp
rorl
cmpsb
cmp
add
fwait
and
lock
cmpsb
mov
mov
push
out
adc
pop
in
mov
inc
cmp
cmp
lahf
mov
pop
and
in
lret
jmp
or
mov
outsb
lea
adc
dec
sbb
out
cmp
dec
mov
and
popa
push
add
and
adc
sub
popf
jmp
xor
test
and
jnp
pop
mov
and
lcall
adc
popa
rclb
adc
and
sbb
scas
inc
popa
rcll
jge
aam
sbb
mov
and
jl
jle
pop
xchg
cmpsl
inc
orb
enter
and
jb
mov
mov
jl
sbb
cwtl
or
xor
and
xor
bound
or
pop
sbb
jl
add
clc
sub
push
mov
movsb
rcll
ljmp
xor
ds
cmp
ret
test
ja
aam
cmpsb
ljmp
cwtl
inc
adc
and
pushf
in
mov
jecxz
jno
sub
and
mov
cli
inc
rorb
sub
nop
pop
adc
inc
dec
les
out
lds
shlb
clc
in
dec
jg
sub
aas
aas
xchg
lahf
ja
sub
je
faddp
out
sbb
pop
in
movsb
dec
add
test
cltd
arpl
lds
sahf
cmp
outsl
mov
repnz
jle
and
scas
xchg
pop
jns
daa
jae
dec
ss
mov
push
mov
mov
ret
and
lea
xor
and
mov
push
xor
outsl
test
rolb
xchg
dec
dec
and
and
ja
add
mov
nop
pusha
push
jp
gs
bound
push
arpl
inc
and
hlt
cmp
movsb
jne
inc
loopne
pop
pop
pop
cmp
mov
xchg
push
scas
pop
sub
aas
xchg
pushf
and
adc
pop
jo
in
js
mov
push
cs
daa
xchg
movsl
mov
cvtpi2ps
insb
popa
les
pop
inc
sbb
sahf
dec
or
xchg
icebp
adc
lahf
or
xchg
inc
mov
xchg
mov
add
iret
das
cmpsl
clc
jb
inc
push
dec
outsl
adc
adc
inc
push
adc
pushf
cltd
cwtl
test
dec
push
inc
sub
imul
adc
sahf
pop
ds
mov
rcrl
lcall
stos
cmp
sbb
int
loop
jp
cwtl
es
cmp
sub
idivb
sub
aad
add
and
rcll
push
fiaddl
mov
enter
jo
aam
clc
popa
enter
and
cmp
and
pop
jg
xchg
mov
jbe
xchg
cmpl
mov
mov
mulb
scas
outsb
xor
mov
scas
cmpsb
out
pop
inc
loop
inc
in
adc
dec
ja
andl
mov
clc
fimull
and
loope
mov
and
xor
xchg
jae,pn
pop
mov
mov
aad
xor
fisttps
and
mov
and
cmp
shlb
or
jae
mov
inc
fldenv
pop
mov
icebp
pop
nop
leave
and
daa
je
mov
and
andl
into
mov
and
cmp
xor
push
and
and
and
xchg
and
lea
jo
test
push
sarb
data16
js
cwtl
das
shrl
mov
cmp
jno
cmp
mov
ret
xchg
ds
jbe
mov
or
and
sbb
in
sbb
and
pop
mov
adc
lea
mov
adc
clc
mov
in
movsb
addr16
pop
dec
add
sbb
fidivl
mov
xor
and
aam
mov
and
or
movsl
push
enter
sbb
and
jbe
inc
lods
sub
out
std
sub
adc
nop
mov
cli
stos
fbld
lea
mov
jmp
mov
jno
and
mov
sub
mov
enter
pop
es
jb
les
mov
add
pop
in
jns
clc
mov
inc
and
inc
and
adc
cmpsl
mov
js
and
repnz
fnstenv
xor
ljmp
cmp
iret
scas
orb
ret
scas
and
cld
insl
add
ret
pushf
ds
sub
mov
xor
std
push
inc
mov
out
out
jb
cmpl
lock
fs
nop
int3
mov
int
or
dec
movsb
pushf
loop
dec
js
jecxz
notb
xor
jmp
and
mov
push
inc
xchg
jo
and
cmp
sti
sbb
lods
and
data16
jle
cmpsl
push
and
sub
enter
xlat
sub
bound
movsb
adc
popa
repnz
mov
sbb
xchg
mov
cmp
or
arpl
or
mov
popa
sub
pop
sbb
xchg
adc
add
pop
add
sub
mov
cld
lret
push
leave
dec
pop
popa
and
push
adc
fldenv
xor
mov
sbb
mov
into
pop
rorb
repnz
mov
cmpsl
popa
push
jno
xor
lret
inc
push
xchg
enter
adc
xor
jl
andl
shr
cmpsl
popa
xor
and
lods
mov
into
outsl
adc
lock
xchg
rcr
stos
and
fwait
and
insb
outsl
xor
gs
inc
add
adc
das
dec
xchg
repnz
mov
int3
add
and
std
or
addl
insl
setp
fcomp
inc
xor
mov
xchg
pop
jle
push
xchg
xor
jae
push
and
adc
scas
aam
andl
pop
xchg
dec
xor
shl
jo
push
frstor
sub
mov
fmull
cmpsb
movsb
in
stos
mov
nop
rcr
andl
and
xor
xchg
movsb
push
cmpps
jns
loop
test
andb
test
ret
in
jo
mov
imul
mov
push
and
mov
and
adc
divb
mov
xchg
inc
stos
sub
cmc
push
adc
ss
insb
lahf
jmp
jecxz
push
and
lds
in
add
bound
cmpsb
or
scas
jle
mov
and
fcoml
call
repnz
loope
and
js
sbb
or
mov
jne
gs
in
cmp
xchg
in
addr16
nop
cmpl
xchg
or
mulb
mov
nop
rolb
cmp
cmc
lock
cwtl
xchg
pop
dec
sub
pop
adc
mov
andb
cmp
cmc
das
and
xchg
cmp
pusha
and
jne
arpl
mov
test
pusha
lahf
xchg
and
sbb
add
bound
and
adcl
shr
popa
pop
push
cwtl
xchg
stos
into
insl
dec
sub
out
fildll
add
push
cmp
out
int3
inc
subl
xor
sub
xchg
mov
das
xchg
xchg
cld
inc
daa
pusha
stc
inc
movsb
dec
andl
inc
or
out
mov
mov
sub
lahf
jne
daa
push
and
pop
push
jne
fildll
lock
pop
sub
cmp
push
cmp
ds
mov
orl
fidivrs
pushf
xchg
and
jnp
movsl
cmp
cmc
or
inc
loopne
or
push
and
push
and
or
lahf
add
sub
fucomip
jne
fistl
rcrb
rolb
and
jle
stos
test
and
sbb
lock
xor
sub
jns
add
popf
xchg
or
enter
arpl
popa
jbe
jo
out
and
addb
test
loopne
and
mov
sub
dec
xchg
and
adc
dec
test
sti
and
cltd
jo
sbb
test
call
in
divb
push
aaa
push
mov
in
or
imul
int
mov
or
mov
sti
mov
mov
outsl
and
daa
push
repz
pmulhw
stos
arpl
jmp
out
fildll
popl
movsb
xor
dec
and
jne
xchg
ja
cmpb
jle
movsl
decb
test
loopne
push
popf
mov
cltd
or
mov
clc
and
and
stos
icebp
fwait
mov
mov
xchg
mull
sahf
cmp
shll
in
fisubs
or
pop
and
push
pop
sub
in
xchg
mov
jbe
popf
and
call
jmp
xor
jb
sbb
fwait
add
xor
ss
xchg
add
adcl
dec
icebp
xchg
adc
test
mov
in
in
xchg
movsb
adc
and
loope
das
aas
mov
popa
cmp
xchg
cltd
mov
dec
scas
movsb
adc
scas
mov
call
xchg
scas
cmp
push
adc
xor
or
jo
and
xor
dec
inc
push
sub
lds
outsb
int
sbb
int3
xor
imul
out
and
std
adc
cmp
and
int
cmp
push
and
push
mov
shrb
and
and
push
stos
and
addr16
cmpsb
adc
and
dec
out
mov
xor
in
add
arpl
mov
inc
rorl
call
sub
mov
cmp
xchg
dec
inc
inc
push
shlb
cmp
lret
sbb
jns
inc
or
push
popa
pop
loop
push
xchg
leave
sub
and
adc
loop
dec
sbbl
sti
std
cmp
and
add
and
lret
aas
movl
add
jge
inc
rol
cmp
aad
sbb
adc
mov
repz
fisubs
sahf
insl
pop
cmp
lods
and
jno
jge
pop
lock
pushf
add
and
rolb
js
and
fsts
cmp
addl
pop
jmp
xor
pop
xor
and
mov
mov
test
push
add
aad
gs
push
aas
xor
push
aaa
adc
ds
lahf
orl
das
loope,pt
lahf
pop
add
dec
inc
pop
mov
mov
sahf
call
push
test
cmp
xlat
subl
in
and
cltd
out
lds
lock
pop
or
daa
xor
mov
push
xor
sub
fistpl
xchg
and
and
shll
jecxz
xor
xchg
jl
xlat
rcrb
sbb
push
mov
push
in
cmp
dec
cmp
add
jbe
push
push
sahf
xchg
out
rcr
lcall
cmpsl
mov
lds
sahf
daa
add
insl
sub
popf
and
inc
add
xchg
test
enter
test
jae
es
mov
aas
icebp
shlb
shlb
inc
push
push
cs
pop
mov
dec
and
out
mov
xor
jns
push
pushf
bound
and
das
dec
jmp
inc
sbbl
xchg
and
or
divl
movsl
add
loope
and
shlb
push
mov
push
dec
jle
xchg
cmp
mov
jns
movsb
xchg
sub
inc
out
and
test
inc
mov
mov
addl
movsl
enter
nop
xor
sub
xchg
repz
clc
fimuls
or
push
adc
cwtl
xor
int
and
mov
inc
and
mov
stos
push
mov
and
sbb
mov
dec
insb
loope,pt
add
ss
add
fxch
or
add
inc
pop
adc
movsb
stos
add
test
push
filds
mov
and
test
cmpsb
hlt
call
mov
lds
dec
xor
dec
mov
aaa
popf
xchg
mov
adc
dec
and
sub
and
sub
dec
sahf
sbb
dec
pop
inc
fisttpll
jae
or
call
pop
inc
in
sahf
and
dec
inc
mov
or
daa
loopne
cmp
or
mov
mov
xchg
and
shll
nop
cli
and
mov
icebp
test
mov
fsub
and
xor
and
repz
insb
shlb
adc
push
outsb
mov
add
pushl
in
loop
lret
and
cmp
mov
xchg
daa
popf
fistps
xchg
push
and
dec
xchg
in
int
cmp
stos
sbb
cmpsl
stos
and
mov
inc
shll
xchg
gs
imul
sbb
movsb
cwtl
push
mov
mov
xchg
mov
xchg
in
js
pop
addr16
insl
imul
and
and
push
rorl
fstpt
jbe
out
xor
push
mov
mov
mov
xchg
inc
cwtl
and
lods
les
and
mov
fcomp
xchg
inc
pop
and
mov
jo
and
imul
sub
popf
into
sub
sub
and
pop
test
and
imul
xor
xchg
mov
and
xchg
jecxz
adc
lods
dec
pop
filds
in
xor
and
call
in
pop
icebp
int3
pop
xchg
and
shll
test
and
pusha
xchg
insl
lahf
pop
mov
pusha
test
out
and
test
mov
and
mov
adc
inc
mov
stos
xchg
sub
mov
inc
mov
add
jmp
pop
and
pushf
add
bound
jbe
dec
outsl
sbb
imul
mov
in
mov
insl
pusha
and
sub
jl
xchg
inc
and
rcrl
sbb
sub
jne
sbb
clc
loope
mov
enter
adc
pop
ret
xchg
inc
and
sub
mov
xchg
sbb
and
sub
mov
mov
call
into
outsl
and
sti
sub
jg
in
daa
aam
or
out
jecxz
insl
insb
lods
xchg
and
dec
jl
aas
mov
popa
pop
mov
fsubrs
sbb
jmp
mov
and
das
add
shlb
sahf
popf
sarb
jecxz
inc
cmp
loopne
xchg
lahf
xchg
cs
imul
and
adc
pop
pop
or
jnp
int3
adc
and
ds
and
push
ret
stos
adc
and
xchg
js
ficompl
sub
ffreep
or
sub
icebp
shlb
xchg
sbb
cmpsl
pop
and
jp
xorl
fsubrs
stos
lods
mov
sub
xor
push
dec
dec
add
test
popa
cmp
mov
aas
mov
out
ret
jbe
jae
sahf
xchg
rcrb
and
jno
loopne
imul
subb
sub
pop
mov
lds
sub
or
mov
cs
inc
imul
neg
adc
lret
roll
shrb
shll
sbb
pop
cld
mov
sub
inc
popf
cwtl
aam
inc
and
insl
or
xor
push
pop
mov
adc
mov
and
cmc
addl
pushf
mov
and
cmpl
in
test
je
sbb
fs
popf
addr16
or
cs
mov
mov
and
stos
in
jmp
and
xor
add
dec
push
dec
mov
lcall
outsb
mov
and
mov
aam
fists
mov
pop
loopne
nop
or
mov
xlat
mov
jecxz
xchg
popf
adc
jl
aaa
std
andnps
inc
jne
shll
jg
in
hlt
mov
fldl2e
loop
jmp
scas
lret
dec
in
out
lock
inc
sbb
mov
daa
gs
sub
jo
shlb
xor
inc
js
movsb
mov
sub
int
lock
incb
mov
sub
lcall
mov
cmpsb
mov
imul
dec
add
shrl
mov
adc
mov
jp
mov
fwait
lods
cltd
xchg
int
scas
jnp
scas
popa
xchg
and
cmp
lock
gs
and
or
test
enter
xchg
test
jl
and
sub
pushf
ljmp
and
push
dec
gs
inc
sbb
push
std
push
int
loope
mov
cwtl
sub
in
lods
jg
jp
leave
jns
addr16
and
movsb
orl
call
and
jns
inc
dec
inc
and
adc
aaa
and
jle
sbb
push
pop
js
adc
mov
sub
popa
sub
dec
jno
test
inc
xor
pop
test
sbb
mov
addr16
cs
mov
and
icebp
daa
mov
and
notl
mov
sti
lret
insl
jno
jno
stos
or
cmp
enter
xorl
and
jo
loopne
test
jge
push
xchg
and
test
ret
pushf
xchg
adc
fbstp
or
and
jp
insb
aam
sbbl
inc
cmc
sub
popa
push
nop
andb
fwait
ja
or
cli
fmuls
jnp
xlat
fldcw
mov
movsb
nop
aas
loope
imul
lret
cmp
mov
test
push
sar
rcr
in
dec
int3
pop
sub
xorb
jno
pusha
sbb
pop
or
and
xor
fldenv
and
out
aas
pop
pushf
adc
rdmsr
jne
subb
movsl
dec
mov
xchg
and
xlat
out
aam
shll
sub
or
popa
inc
push
sub
cltd
or
adc
sbb
fdivs
add
dec
cmp
push
fstps
fs
inc
pop
das
andl
pusha
add
xor
in
mov
out
es
imulb
xchg
jno
aam
hlt
fildll
xchg
xor
xor
int
xor
push
or
and
test
xchg
xchg
mov
lret
cmpsl
dec
and
loop
or
push
sbb
shll
out
into
jp
mov
lahf
dec
das
mov
and
loope
xchg
leave
mov
push
inc
clc
icebp
add
push
jp
jno
lods
sbb
lret
mov
jb
cmc
sahf
out
popa
mov
jbe
push
sub
jle
dec
xchg
jae
cmp
loop
rsm
dec
fwait
and
gs
lods
clc
outsb
dec
pop
enter
nop
xchg
orl
mov
leave
pushl
xchg
mov
mov
adc
dec
jo
xchg
mov
and
fwait
pop
cmp
adcl
cmp
mov
inc
cld
pop
nop
das
mov
xchg
mov
cmpsl
add
inc
movsb
adc
loope
rclb
shlb
xlat
xorl
cmc
aas
add
sti
test
xchg
test
testb
clc
xchg
cli
xor
popa
ret
mov
pop
xor
andl
add
cmovae
and
or
shl
xor
xchg
outsl
or
and
add
mov
and
sti
aas
fbstp
mov
add
and
jmp
sar
xchg
xor
push
cmc
or
and
rcl
dec
andb
in
mov
es
test
cli
adc
cltd
std
dec
ljmp
cmp
xchg
popa
pop
sti
int
jmp
mulb
std
out
les
orb
pop
and
or
and
push
cmpsb
push
xor
mov
popa
adc
and
fidivrs
mov
shlb
push
aaa
mov
inc
jl
scas
xchg
ds
lods
sbb
push
loope
call
inc
cltd
mov
loopne
stc
orb
or
in
fcoml
subb
lahf
fsubs
and
scas
mov
add
inc
fsts
insb
pop
fwait
lret
push
sub
in
push
mov
lahf
and
arpl
shll
movsb
and
adcl
adcb
sub
shll
testl
dec
cmp
and
xchg
scas
sub
mov
es
add
js
insl
sbb
pop
in
test
or
cmc
push
out
xchg
and
repnz
push
dec
and
insl
mov
jae
inc
mov
add
movsb
int3
inc
xor
add
adc
xchg
bnd
stc
popa
iret
adc
mov
test
mov
add
call
xchg
jb
testb
xor
or
and
icebp
jne
push
xchg
les
repnz
push
pop
das
popf
cmpsb
addr16
pop
adc
mov
mov
inc
insl
xchg
in
sub
es
xchg
ja
fsubs
cmp
cmp
mov
jne
insl
arpl
mov
repz
adc
mov
xor
out
aad
add
add
and
lret
push
inc
aam
adc
into
and
sub
inc
movsb
test
fmulp
mov
shll
pop
test
and
outsl
xchg
jmp
pop
adc
rcll
ds
xchg
popa
inc
add
psrad
and
mov
mov
adc
sbb
mov
pusha
into
mov
scas
mov
movsb
mov
xlat
xor
inc
lock
pop
inc
jae
out
sti
cmp
inc
lret
jl
test
out
loope
cmc
sti
jno
inc
not
xchg
sbb
mov
push
adc
and
mov
cmp
pop
aad
mov
jb
lods
out
movsl
sahf
xchg
and
and
fcomps
or
test
xor
adc
xor
lods
in
and
jle
dec
mov
cmp
shrl
insl
ret
test
int
cmp
and
subl
push
or
popa
pop
das
mov
adc
inc
cmpl
pop
les
push
iret
std
inc
lret
and
and
inc
rclb
or
jo
xchg
rcll
lret
mov
sbb
mov
cs
sub
xchg
dec
orl
sub
je
inc
enter
mov
outsl
sbb
xor
xchg
inc
sub
repz
cwtl
popa
enter
int
daa
addr16
xchg
jge
push
sub
inc
sub
mov
insb
imul
jno
jae
andl
in
dec
sti
movsb
adc
out
fidivs
imul
sub
xchg
int3
mov
lahf
shl
mov
or
imul
add
inc
stc
nop
mov
sub
lahf
or
cmpsb
sarb
pop
stos
mov
and
pop
xor
fldenv
mov
inc
sbbb
push
popf
push
and
mov
arpl
jo
ret
outsl
mov
scas
jp
jge
mov
iret
jo
cmp
adc
and
mov
mov
push
icebp
out
sub
in
movsb
popf
pushf
xor
mov
mov
adc
jge
lods
push
fwait
test
push
test
outsl
loope
in
xlat
cmp
movsl
jbe
push
mov
testl
sub
ret
xor
or
add
iret
fiaddl
rcrl
lcall
jmp
movsl
and
jnp
xchg
fisttpl
test
mov
inc
fmull
out
lods
mov
sbbl
and
std
xchg
xchg
aam
and
fisubrs
or
outsb
mov
insb
cmp
jae
lods
dec
outsl
aad
push
pop
loope
loop
xor
sbb
fimuls
xchg
push
fs
out
push
int3
ds
fistpll
add
stos
dec
mov
aam
movsb
push
pop
fisttpl
xor
dec
xchg
cmp
dec
sub
sub
cmp
scas
or
xchg
rorb
mov
loope
pusha
jno
add
popf
and
push
cmpsl
add
dec
inc
and
mov
out
ljmp
mov
repnz
sub
stc
cmp
out
sub
mov
cmp
and
popf
adc
repnz
mov
rclb
fdivrs
and
fistl
xchg
jl
xchg
outsl
ljmp
jp
jnp
daa
mov
xchg
sub
sub
mov
sbb
mov
and
test
cmpb
xchg
push
pop
and
jg
js
dec
enter
jb
sub
sar
scas
int
mov
mov
iret
pusha
ret
cltd
movsl
repnz
pop
mov
loope
subb
lods
hlt
sub
movsl
jecxz
and
cltd
cltd
dec
sbb
inc
int
or
push
mov
loop
enter
pop
cmpsb
mov
inc
outsb
dec
lahf
cmp
and
mov
mov
push
popa
sub
pop
cmc
mov
mov
dec
and
xchg
outsl
lods
into
push
scas
or
xchg
filds
mov
dec
int
in
js
dec
and
out
daa
add
les
lods
negb
cli
stos
aad
dec
lahf
and
lret
movsl
and
and
int3
xchg
mov
and
mov
jb
rcrb
test
sub
loope
and
inc
test
shld
and
inc
jg
xor
lods
sub
in
and
in
sbb
daa
into
push
xor
xchg
jecxz
mov
loopne
inc
push
and
cmp
cmp
and
fnstcw
xchg
mov
shr
xor
and
sub
and
xchg
bound
pop
das
and
lods
sbb
cmpsl
dec
in
pop
add
and
xor
mov
loope
movsb
cmp
test
push
mov
jnp
mov
in
push
pop
ret
nop
ficoms
xchg
pop
add
and
lea
aas
and
sub
int3
sbb
jmp
fisubrl
xor
and
and
imul
out
inc
add
pop
cmp
mov
mov
inc
imul
popa
repz
outsl
bound
inc
lods
jne
fsubs
cld
pop
arpl
pushf
icebp
mov
es
ds
sub
and
lret
sbbl
and
push
jbe
xchg
sub
and
and
lods
sti
movsl
and
andb
out
mov
cmc
cmp
sub
dec
and
or
sti
and
xchg
lret
dec
mov
cs
daa
lret
jns
sbb
sarl
inc
inc
call
mov
xor
loope
aas
lcall
in
cmp
push
xorl
sti
adc
lea
and
shlb
fsubl
clc
orl
shll
repz
sbb
jae
fstpt
in
es
lock
test
and
or
test
mov
or
mov
add
and
sbb
push
mov
push
and
andl
xchg
out
mov
or
pop
arpl
sub
bound
sub
jp
out
pusha
and
add
lahf
sub
jo
cmp
sub
js
jbe
cltd
mov
xlat
jp
xor
and
sarl
outsb
and
inc
in
clc
inc
xor
jecxz
push
dec
movsl
sbb
cld
sbb
sbb
add
pop
clc
push
jae
das
rolb
loope,pt
test
pop
movsb
iret
xor
neg
jmp
mov
fistps
or
push
sbb
stc
sub
push
xchg
xchg
and
stc
push
pop
sbb
mov
es
pop
pop
cwtl
sub
fistl
scas
cwtl
and
inc
rorb
cli
and
inc
jns
adc
and
xlat
add
mov
adc
push
mov
and
jl
jns
pop
sbb
loop
rorl
jns
fistl
xorl
cmp
addl
ftst
or
and
mov
movl
into
xor
inc
in
or
leave
and
adc
shrb
and
push
or
or
out
jbe
leave
cld
in
je
jnp
mov
arpl
lock
dec
and
movsb
stos
mov
aas
mov
jae
popa
xchg
mov
cmpl
sub
and
and
xor
dec
and
adc
loope
push
int
cmp
or
fildl
gs
scas
inc
jae
add
push
popa
cld
mov
mov
imul
sti
enter
dec
mov
jo
sub
arpl
mov
lods
pop
xchg
or
mov
pop
sbb
fdivs
inc
push
popa
inc
push
aad
and
sbb
and
loop
sub
mov
bound
mov
mov
shll
lds
arpl
push
mov
mov
icebp
movsb
push
push
cmp
fdivrs
cltd
add
mov
aas
cmpsl
or
and
jo
and
push
scas
repnz
xorl
mov
xor
scas
aad
lods
inc
mov
and
mov
cmpsl
add
dec
sti
loope
aam
push
xchg
jecxz
inc
fldenv
mov
adc
and
mov
into
and
popf
std
mov
pushl
xor
outsl
popa
mov
test
aam
dec
add
cmp
enter
and
mov
fsubl
hlt
cmp
mov
inc
sbb
clc
mov
mov
sub
fwait
insl
and
out
test
int
xor
push
cmpsb
add
popa
lods
inc
mov
mov
or
inc
in
in
cmp
dec
and
and
pop
cmpsl
push
inc
inc
insb
adc
daa
aas
je
test
and
repz
aad
xor
mov
sbb
xchg
cmp
and
clc
push
add
inc
ds
cwtl
mulb
fwait
push
xor
pop
pop
scas
or
popa
arpl
cmp
sbb
jne
sti
setne
and
pop
push
push
inc
es
xor
popa
jae
lock
cmc
dec
repz
and
or
and
push
imul
sbb
inc
pop
sti
and
sbb
aaa
mov
inc
pop
mov
mov
inc
add
mov
mov
cmp
es
inc
aas
lcall
mov
and
sbb
mov
popa
sahf
stos
mov
xchg
adc
lahf
cld
adcl
loopne
test
pop
shll
sti
or
popa
aaa
mov
pop
addl
lret
pop
add
lods
xor
and
xor
stc
and
icebp
adcl
add
das
faddl
sub
fcmovne
cmp
or
lods
and
inc
insl
lods
clc
leave
mov
push
push
cmp
insl
dec
pop
jp
add
jne
shl
or
inc
fnstsw
andl
inc
and
inc
mov
sub
pusha
imull
and
fdiv
pushf
add
loope
xchg
out
lahf
pop
jge
inc
mov
push
in
lods
std
jle
pop
out
fidivrs
jno
and
sbb
push
xchg
imul
test
or
test
cmc
mov
push
adc
shlb
frstor
and
out
in
inc
jb
lds
shll
sub
lcall
movsb
pop
or
add
pop
fidivl
add
cli
sub
push
lds
inc
popf
jno
xchg
push
repz
mov
lea
cmp
mov
and
gs
xor
lds
mov
xchg
dec
pop
lea
lret
add
repnz
aad
insb
and
int3
dec
mov
test
jmp
int
cmp
mov
dec
inc
sbb
outsb
mov
or
nop
idivl
lea
leave
and
aam
push
and
das
cmp
subl
mov
std
sti
pop
sahf
cwtl
shll
test
mov
mov
cli
stos
iret
jle
or
movsb
mov
pop
push
scas
cmp
xor
dec
shlb
and
pop
pop
popa
ja
das
sbb
and
jbe
jns
fimuls
push
js
out
push
and
mov
xchg
jbe
cli
cmc
jnp
mov
push
ja
mov
loope
outsb
xchg
shll
or
mov
es
adc
outsl
lret
ret
jg
push
push
cmp
ds
fmuls
in
arpl
sub
pop
pop
jge
stc
mov
pop
adc
xchg
mov
dec
cltd
movsl
dec
and
dec
cmp
bound
mov
jg
sbb
insl
iret
mov
jne
sbb
andb
imul
inc
and
cmpsb
dec
aaa
mov
adc
arpl
inc
cmpsl
and
jl
or
and
loope
inc
les
add
fsubp
sub
push
adc
push
jp
cwtl
mov
inc
xor
push
or
jno
ret
aad
lea
outsl
test
pop
push
jne
and
lea
cwtl
inc
and
push
lret
jae
fmul
sub
and
jge
and
jmp
ret
fwait
lahf
lcall
xor
xor
and
jnp
or
mov
cmp
and
jl
sahf
int3
and
daa
xor
jecxz
mov
jno
mov
pop
xchg
andb
into
lods
test
push
outsl
push
and
cmp
mov
rcrl
mov
ljmp
subb
fsts
mov
mov
jbe
enter
and
jmp
loop
add
add
xchg
push
sbb
sbb
js
dec
call
je
iret
ljmp
or
mov
add
push
and
cmp
pop
rcrl
rcl
or
push
mov
ds
aaa
fbld
out
and
push
notl
mov
xor
in
call
arpl
outsl
dec
inc
xor
mov
and
aas
cmp
sbb
popl
lahf
push
sti
push
popf
cltd
aaa
ljmp
stos
pusha
jecxz
push
popa
fmuls
mov
and
in
cmpsb
and
fiadds
frstor
pusha
fsubl
pusha
xor
movsl
mov
mov
and
je
out
std
lret
iret
fisttpll
dec
cmp
adc
xchg
adc
sahf
dec
popl
cmp
test
or
dec
add
jl
nop
sub
stos
dec
mov
lods
mov
scas
in
in
inc
mov
xchg
daa
and
out
mov
daa
push
fsts
inc
leave
and
out
jo
repz
mov
je
jmp
popa
and
fisubrl
and
or
push
and
inc
fistpl
and
add
mov
or
jbe
scas
pop
lldt
pop
cmp
arpl
mov
jno
or
xchg
and
push
xchg
dec
inc
in
add
insl
aas
and
cwtl
push
and
mov
push
dec
ret
jge
cmp
push
test
lods
jge
cmpsb
insl
push
jno
mov
mov
lock
ja
out
flds
inc
push
or
imul
sbb
and
inc
out
jge
cmpsb
pop
dec
inc
pop
pop
clc
movsl
enter
sbb
xchg
fbld
push
bound
mov
clc
scas
mov
fidivl
xlat
mov
sbbl
push
or
adc
inc
loope
enterw
mov
or
cmpsb
jbe
iret
das
cmpsl
in
or
mov
dec
mov
push
pop
jo
popa
adc
mov
js
data16
mov
notl
lcall
sahf
dec
sub
adc
xchg
and
push
adc
xor
loope
and
data16
fldt
hlt
rclb
pushf
inc
jmp
or
aas
pop
andl
mov
idivb
and
pop
xchg
loop
popf
add
in
icebp
jge
repz
jle
sbb
mov
arpl
and
call
and
cwtl
mov
pop
popa
sub
sub
out
jno
daa
cmp
inc
and
cmp
movsb
xlat
and
xchg
daa
mov
jecxz
jge
xor
and
xor
and
pop
xlat
aas
mov
and
mov
lret
imulb
mov
inc
jb
ja
and
imull
ds
loop
icebp
sbb
or
push
add
xchg
jns
jae
dec
cmp
sub
push
mov
adc
mov
pop
cli
and
incl
mov
popf
jle
xchg
loop
popa
fcoms
inc
orb
sahf
insl
mov
push
lods
pop
sub
push
sbb
or
and
in
out
and
jo
push
lar
jmp
mov
xchg
and
add
int
xchg
xor
loop
dec
xor
pop
sbb
popa
rcl
stos
fsubl
xchg
sub
and
out
or
dec
enter
idivb
pop
cli
imul
mov
and
cmp
cmpsl
bound
out
shrl
or
sub
call
int3
cld
gs
rorb
and
push
fsubrl
xchg
inc
xchg
sbb
icebp
and
sarl
jmp
stc
add
adc
xchg
pop
and
xchg
lret
add
sub
push
into
sbb
outsb
jmp
cmp
push
dec
out
adc
in
scas
xor
xchg
sti
pop
inc
fiadds
and
mov
adc
and
jle
cmp
push
sti
sub
and
cmp
lcall
lret
imul
imul
dec
pop
cmc
xlat
push
cmpsb
loope
and
or
push
mov
mov
pop
and
add
inc
js
dec
mov
add
jnp
lret
mov
and
dec
loop
mov
cld
pop
in
test
add
push
in
jns
and
inc
or
test
shlb
xchg
loope
popa
sbb
mov
imul
in
add
stc
xor
cmpsb
in
int3
lock
push
movsb
push
xorb
ljmp
jo
in
divb
mov
xor
jbe
inc
movsb
xlat
shll
aam
jns
je
lods
inc
arpl
and
sbb
subl
or
jno
mov
pusha
and
adc
test
add
pshufw
push
mov
or
and
gs
and
popa
mov
and
xor
dec
stos
mov
imul
dec
lods
inc
cld
movsl
rcl
mov
and
push
xchg
or
mov
and
or
mov
stc
cmp
jae
lret
xchg
cli
sbb
dec
inc
inc
adc
jae
and
dec
addr16
dec
les
movsb
mulb
out
inc
jno
imul
fwait
loop
sahf
and
mov
fisubrs
push
or
cwtl
mov
mov
mov
fimuls
dec
cmp
sbb
and
inc
jecxz
xor
and
sub
fisttpl
loopne
sbb
xor
push
fisttpl
xor
sub
mov
xorl
pop
insl
loopne
ljmp
sbb
inc
ja
and
sti
ds
aaa
out
and
stos
fmuls
mov
test
and
push
mov
adc
rcrb
dec
cmc
push
sbb
and
cmovbe
and
cmpsb
outsl
pop
jno
push
es
add
outsb
movsl
push
cmc
jg
clc
gs
or
jmp
mov
cmpsb
fwait
lcall
mov
xor
sti
cmpb
inc
sbb
and
cmc
and
icebp
mov
call
sub
jecxz
or
and
popa
sbb
mov
adc
insb
pop
mov
sarl
enter
test
sub
aaa
xor
scas
cmp
loopne
fldt
inc
inc
dec
icebp
and
sub
push
inc
push
or
scas
dec
stos
loop
fwait
cmpsl
cmpb
pop
and
lock
jbe
inc
ret
sub
inc
icebp
daa
sbb
mov
mov
gs
ja
stos
nop
mov
xchg
mov
mov
pop
cltd
cwtl
aam
ret
jnp
cmp
movsl
lret
mov
or
pusha
xchg
jb
mov
aaa
jecxz
mov
mov
adc
and
imul
xor
clc
loope
pop
stos
or
sub
fildll
fiadds
and
loop
sahf
add
out
sbb
sti
pop
mov
sbb
jl
imul
incl
inc
movsb
roll
out
pushf
cltd
cmp
pop
mov
testl
sbb
push
pushf
test
inc
xor
add
jg
mov
imul
js
mov
and
dec
and
dec
mov
jg
and
call
mov
push
xchg
jp
or
mov
xor
int3
hlt
dec
and
popa
movsl
xchg
jge
fisubrl
repnz
or
stc
mov
and
xor
loope
insl
and
jo
mov
sbb
sub
loopne
mov
sbb
mov
iret
es
jbe
bound
dec
and
sub
inc
jle
in
mov
adc
inc
pop
adc
es
es
loope
mov
imul
adc
push
cmp
add
pop
cmpsl
and
xlat
or
mov
jecxz
and
cwtl
stc
and
xchg
es
xor
ss
stos
lea
pushf
imul
sarb
xchg
xchg
in
mov
fcmovnb
adcb
add
fisttpll
xchg
lahf
jmp
dec
sbb
or
sub
inc
scas
js
fcoml
jnp
aad
mov
adc
sub
jp
mov
add
popa
daa
mov
and
pop
inc
sub
adcb
and
setg
fdivp
iret
or
jae
push
add
lcall
popa
cmpsl
stc
loop
lret
pop
and
push
cltd
mulb
outsb
incl
das
movsb
or
push
jl
pop
repnz
in
or
mov
sbb
push
test
cmpsl
add
pop
and
pop
jbe
pop
js
dec
jb
add
shrl
push
punpcklwd
and
out
cmp
into
and
movsl
lret
jb
andb
clc
jl
das
filds
and
in
dec
lods
dec
aaa
lret
pop
xor
mov
inc
push
addb
sub
out
daa
ds
and
jo
out
ret
icebp
xor
shll
xorl
cmc
pop
nop
add
and
xchg
add
push
and
xor
add
and
or
adc
stos
sahf
test
pop
sbb
out
mov
repz
fcmovu
and
int3
add
scas
dec
mov
and
xchg
lret
arpl
mov
mull
popa
inc
rclb
ja
cmp
and
movsb
jecxz
aam
add
out
das
sub
lcall
cmpsb
test
fistl
adc
xchg
and
mov
je
in
mov
jo
and
or
adc
test
cwtl
jmp
fs
or
add
push
add
mov
addl
push
mov
dec
push
das
and
fisubl
and
push
mov
jge
mov
jle
popa
add
mov
sbb
and
add
scas
xor
push
ret
xchg
pushf
add
insl
fisttpll
cltd
mov
ljmp
xchg
and
pushf
je
fnsave
and
jae
push
and
pop
movb
jg
lock
push
in
xchg
mov
imul
xchg
xor
and
cmp
xchg
jg
arpl
and
out
xor
adc
add
push
mov
jmp
jae
mulb
inc
cld
and
inc
inc
daa
and
xchg
pusha
cli
aas
es
loopne
xchg
push
jnp
xor
std
mov
pop
stos
adc
dec
out
addb
sahf
jbe
insl
xor
fstl
or
jecxz
mov
inc
test
int3
mov
mov
mov
test
and
or
imul
imul
or
gs
xchg
pop
push
pop
and
push
pop
xchg
divl
test
xor
movsl
fistpl
bound
inc
bound
popf
and
lock
cmp
cli
cmp
jge
jl
out
repnz
mov
inc
cmovle
dec
scas
inc
fmull
cmp
cmc
pushf
sub
scas
scas
mov
sub
add
stc
sub
popa
shlb
loope
pop
adc
push
mov
lcall
adc
mov
lret
out
out
jns
mov
mov
mov
mov
arpl
call
sub
adc
pop
jno
pop
lret
xor
cwtl
mov
jg
push
fcmovb
and
in
sbb
scas
negb
test
aas
cmp
orb
fwait
repnz
mov
mov
xor
scas
popa
out
push
fs
and
push
outsl
xchg
daa
pop
loope
and
sbb
push
and
mov
setae
lods
fadd
mov
movsb
les
jne
dec
divb
xchg
cld
out
inc
mov
nop
sbb
add
movsb
cltd
push
xor
stc
adc
ss
dec
push
sub
push
push
lds
jno
icebp
stos
movsb
jae
dec
mov
xor
gs
push
shrb
xchg
sub
mov
cli
test
xor
cmpl
mov
pop
push
mov
inc
enter
xchg
jns
mov
lahf
in
adcb
mov
sub
adc
imul
xchg
fwait
mov
mov
inc
int3
push
mov
and
jl
outsl
fiaddl
out
into
mov
add
and
xchg
xor
mov
shr
cmpsl
movsb
adc
cwtl
js
jl
and
and
push
hlt
sub
clc
xchg
outsl
aad
jne
mov
pop
gs
leave
sbb
xchg
into
in
and
jmp
test
xorl
push
addr16
xor
sbb
loopne
fidivl
popf
mov
iret
icebp
mov
xchg
popf
pop
xchg
or
mov
ret
pushf
mov
dec
ljmp
xor
push
sub
psadbw
mov
sub
dec
inc
sub
xor
xchg
movsb
pop
dec
ds
inc
inc
xor
fcoms
sub
shll
out
push
outsb
pop
xchg
pop
aas
pop
inc
and
jne
mov
loop
pushf
adc
ss
movsl
rorl
sbb
and
inc
jl
mov
sti
jp
dec
mov
adc
mov
jbe
cmp
mov
cmc
sub
cltd
stos
lcall
and
sbb
mov
mov
xchg
mov
cmp
dec
nop
mov
inc
fldenv
outsl
and
mov
and
or
push
add
fwait
movsl
fcoms
adc
cli
push
scas
xchg
jbe,pn
inc
testl
leave
or
mov
pop
aam
lahf
mov
and
sub
adc
lea
and
xchg
outsb
pop
mov
push
scas
loope
es
and
mov
xorl
or
lods
mov
int
and
loopne
dec
mov
outsl
push
lds
mov
rcr
and
mov
push
loope
pop
aad
shlb
cmp
and
jge
cmpsb
pop
pop
jo
gs
fstpt
pop
mov
sub
and
xchg
cli
adc
or
inc
add
enter
inc
lea
xor
popa
pop
dec
xchg
sub
lock
loope
and
inc
in
xchg
jmp
sahf
shl
daa
fildl
xchg
mov
cmp
mov
pushf
cli
xchg
inc
jge
xor
jp,pt
and
fdiv
and
mov
lods
cmp
imul
mov
inc
and
rol
fwait
pop
scas
mov
dec
movsb
inc
test
mov
mov
shlb
fwait
stos
and
dec
sbb
out
loopne
jl
pop
arpl
push
jp
sti
jo
dec
and
test
enter
aas
pop
addb
movsb
lods
mov
jle
inc
ret
movsb
xchg
lcall
cwtl
and
in
jg
movsl
push
test
push
enter
adcl
iret
cmc
movb
mov
mov
mov
inc
jb
xchg
std
and
add
popf
inc
cmp
iret
mov
fwait
pop
and
and
push
and
jp
fdivrs
adc
cld
call
enter
inc
insl
aaa
push
adc
xchg
adc
insb
inc
sub
dec
lods
fwait
xlat
push
and
subb
and
mov
xchg
mov
mov
push
aaa
inc
mov
mov
maxps
rcll
cmp
push
push
fdivs
in
jno
and
loope
xorl
pushf
pop
stos
movsb
pop
cltd
imul
and
mov
lods
addr16
and
mov
xor
and
mov
fldcw
sbb
js
dec
test
pop
sub
mov
adc
adc
inc
in
dec
stos
pusha
xchg
int
inc
mov
lock
xchg
dec
andb
push
add
and
mov
aad
and
lret
sarl
cltd
into
int
orl
dec
dec
ljmp
cltd
xor
xchg
and
mov
std
push
leave
inc
push
cltd
aaa
and
nop
lahf
movsb
mov
pop
adc
movsl
fsubl
xor
jle
sbb
loop
sbb
int
outsb
test
pop
in
and
mov
lods
out
xchg
cld
mov
jmp
lods
xchg
mov
and
and
repnz
inc
mov
push
mov
ja
or
and
sub
mov
dec
stos
push
imulb
xor
jl
jmp
test
and
std
push
mov
loopne
xchg
xor
sub
stos
xchg
pop
insl
sahf
push
push
int3
and
sbb
lock
into
or
cmp
xchg
mov
adc
jns
sub
outsl
enter
pushl
jne
lock
rcl
push
insl
inc
dec
xor
xchg
loop
out
and
sti
mov
jbe
xchg
dec
sub
sbb
fsubs
fldenv
inc
daa
and
pushf
sbbb
dec
movsb
test
xchg
cs
jmp
ret
out
jp
scas
andl
loopne
and
imul
push
pop
and
sub
fdivrl
in
cmpsl
add
mov
daa
push
inc
mov
lret
pop
sahf
and
and
sbb
pop
push
xor
data16
call
fstpt
sub
mov
fists
xchg
mov
or
jmp
xor
xchg
dec
icebp
sub
sbb
mov
xor
inc
sub
int
hlt
adc
imul
push
out
shlb
and
aaa
shll
lret
cmp
fld
jbe
leave
mov
adc
mov
mov
mov
xor
movsl
jg
xchg
mov
movsb
jb
popa
in
dec
or
clc
mov
and
movsl
pop
jne
adc
pop
testb
loopne
mov
mov
popa
mov
hlt
mov
ljmp
aas
dec
jb
mov
roll
mov
jecxz
xor
gs
jns
daa
mov
ja
inc
shlb
xchg
repnz
mov
addl
jp
popf
cmpsb
push
and
xchg
add
shrb
movsb
in
lea
sbb
sub
imul
push
daa
cmp
andl
mov
les
mov
jo
mov
repnz
push
sbb
inc
fistl
add
inc
xlat
das
icebp
mov
push
inc
jae
scas
pop
and
xchg
and
sub
and
sbb
jmp
hlt
dec
and
in
xor
into
stos
andl
rcrl
aas
in
and
mov
push
mov
sbb
popa
faddl
dec
inc
mov
imul
xchg
inc
and
fisubrl
enter
loope
pop
xor
popf
das
rcrl
xor
pushf
imul
dec
and
loopne
mov
addb
and
pop
mov
movsb
ret
sti
push
jnp
popa
cmpsl
fdivp
int3
fstpt
fwait
push
out
inc
add
mov
and
inc
cmp
and
adc
mov
notl
mov
in
movsb
cli
mov
push
mov
push
cmpsl
xor
fstpl
pop
sahf
push
inc
pusha
cwtl
and
scas
rol
lcall
aaa
lds
and
pop
jge
mov
pop
into
es
sub
inc
ja
scas
fbstp
cmpsl
movsl
cmp
xchg
mov
push
iret
es
and
mov
xor
movsb
xchg
mov
pop
fsubl
mov
lods
dec
dec
jo
and
ficoml
and
loop
leave
fisttps
adcb
das
popa
add
dec
addr16
and
fs
movsl
adc
add
sub
and
xor
into
push
and
dec
xorl
and
test
mov
sbb
addl
lds
mov
shrb
and
aad
or
xlat
pushf
movsb
ffree
cmp
sbb
pop
mov
movsb
je
add
mov
ret
lds
xchg
mov
push
ja
popa
xor
cmpsl
repnz
xor
push
jecxz
push
and
out
mov
fdiv
jne
cld
push
and
add
popa
and
jno
and
out
rorl
inc
and
movsb
dec
fidivrs
jne
daa
pop
adc
shrb
add
mov
cmp
and
add
mov
rcll
mov
mov
jnp
imul
mov
add
xchg
loope
into
test
dec
cmp
inc
adc
sbb
clc
or
popa
icebp
arpl
je
lcall
adc
inc
iret
insb
loop
mov
das
mov
int3
add
aas
add
add
jb
test
shlb
mov
push
lcall
ret
dec
and
punpckhbw
mov
and
dec
loope,pt
mov
jg
adc
repnz
mull
and
shll
loop
ss
loopne
sub
mov
loop
js
sub
mov
rcr
xor
cmp
into
sub
outsl
call
orl
xchg
mov
jle
fidivs
xor
insl
inc
mov
mov
and
sub
add
testl
insb
push
mov
outsb
mov
xchg
sub
mov
in
inc
inc
and
fistps
je
fidivrs
and
int
mov
and
jb
push
repz
cltd
mov
addr16
in
std
and
or
sbb
gs
sub
aam
sub
mov
xor
mov
scas
push
and
inc
pop
sub
and
jno
push
adc
and
jge
lds
xchg
xor
and
jp
ljmp
cmp
dec
inc
and
cmpsl
or
andb
xchg
out
inc
outsl
xchg
and
dec
and
dec
cmp
pushf
and
cwtl
mov
ret
lcall
and
or
cmp
adc
push
dec
sub
pop
pop
jg
ja
mov
out
mull
dec
mov
xchg
enter
xlat
lds
lahf
cmp
ja
xchg
leave
rcrl
add
sahf
js
data16
or
mov
pop
jbe
push
add
jnp
and
xor
daa
and
mov
or
aaa
out
and
mov
mov
das
cli
mov
fldcw
xor
jmp
pop
scas
xchg
push
cmp
xor
cmp
mov
adc
xor
es
push
cwtl
pop
sub
je
cmp
or
mov
and
inc
cmp
and
and
aaa
and
and
pop
lea
stc
leave
mov
shll
std
out
into
cmpsb
add
loop
mov
jge
xchg
movsb
and
icebp
xchg
push
out
and
dec
insb
xchg
push
dec
sub
insb
sub
lea
lods
xchg
inc
mov
push
in
add
mov
push
mov
pop
jge
xor
inc
ss
stos
dec
fdivrl
adc
jmp
jbe
pop
mov
int
popa
dec
push
inc
sbb
out
jns
mov
mov
orl
lret
pop
rcll
add
sbb
xor
inc
sub
adc
xchg
fwait
and
subb
aad
dec
xor
jmp
rcr
cmp
sub
xchg
xchg
mov
popa
push
and
sbbl
ret
and
add
fbstp
jne
das
push
dec
and
mov
adc
dec
insl
jle
adc
cmp
sbb
cs
jno
lock
dec
ficoms
and
jnp
mov
lods
and
shrb
xchg
and
mov
and
lret
jle
lcall
add
cmpsl
mov
add
inc
and
xor
test
jno
and
push
scas
push
and
xchg
addr16
cmp
pop
out
jnp
dec
mov
sub
shll
sub
add
pop
xchg
jno
test
or
adc
and
sbb
pop
out
insb
std
aaa
and
inc
xor
xchg
test
mov
movsb
ljmp
adc
and
in
push
jbe
scas
pop
test
or
pop
out
ret
and
pop
dec
ss
and
test
add
or
ja
adc
cmpsb
and
mov
cmc
xor
push
adc
xlat
mov
and
and
aad
xchg
scas
std
popa
push
add
mov
shrb
xchg
aam
jg
movsl
and
sti
xlat
adc
out
jle
push
in
movsb
inc
sbb
add
add
xchg
movsb
dec
popf
insl
hlt
lods
xor
mov
jl
push
add
xchg
sub
in
movsb
inc
popf
cmp
jmp
test
arpl
fwait
push
xor
scas
sbb
enter
int3
and
jecxz
mov
inc
sub
and
or
lret
pop
aaa
hlt
in
sbb
and
movsb
add
xor
movsb
in
and
movsb
jns
idivl
and
jge
inc
and
inc
sahf
mov
jbe
inc
xor
and
mov
call
and
fldcw
jo
pusha
repnz
and
pop
cmpsb
out
mov
das
mov
adc
cmc
mov
orb
clc
ljmp
xor
jno
fs
popa
or
push
insl
mov
push
push
xchg
mov
les
lea
xchg
outsl
pushf
popf
out
sbb
aas
and
test
fadds
push
enter
mov
add
mov
inc
in
test
dec
outsl
dec
xchg
mov
push
push
xor
push
jns
xchg
push
inc
jg
outsl
das
daa
pop
mov
xchg
pop
imul
mov
xchg
mov
adc
rorb
add
mov
loop
and
data16
lods
bound
in
inc
les
inc
js
and
stc
and
lods
jle
popl
fcoms
and
insb
and
aas
cmp
push
cmp
cld
mov
sbb
pop
test
pop
push
repnz
mov
sub
in
popa
lock
jb
test
imul
push
xlat
inc
mov
lret
fwait
cld
pop
sub
push
std
ljmp
mov
adc
scas
out
lahf
and
adc
aaa
testb
pop
sub
mov
push
mov
stc
mov
shll
xor
loope
ljmp
mov
fbld
cmp
clc
loopne
sub
jmp
inc
popa
xor
xchg
or
mov
push
and
movb
rcll
jl
mov
jb
add
jl
cmp
sub
mov
and
clc
shlb
sbb
and
xlat
icebp
push
cmp
mov
cmp
popa
adc
dec
out
jecxz
lds
push
in
add
popf
das
imul
add
xlat
test
jg
mov
inc
pop
bound
pop
test
adcl
mov
push
jmp
push
pop
dec
ljmp
out
and
fs
lea
pop
daa
xchg
sub
in
and
and
mov
sbb
inc
lods
push
sbb
lea
out
mov
pop
sub
ja
test
movsl
out
notl
insl
inc
popa
push
adc
xchg
mov
shll
stos
dec
and
subl
jg
dec
test
fxch
and
stc
mov
pop
add
and
mov
xchg
or
sbb
ds
mov
pop
mov
das
out
inc
push
in
and
mov
lret
pop
sbb
cmpsb
mov
stos
dec
inc
out
out
imul
mov
add
lea
push
pop
cmp
lock
mov
jg
cmc
loop
popf
mov
xchg
inc
mov
popf
xchg
lds
pushf
add
scas
sub
popf
mov
es
nop
lock
sub
cmpsl
and
adc
xor
cltd
rorl
xor
or
js
test
insl
adc
pop
mov
cmpl
insl
mov
adc
jno
out
cmp
leave
std
xchg
es
stc
and
adc
xor
inc
jb
jle
push
mov
test
xor
push
lods
push
lret
movsb
and
xor
and
xchg
loopne
sbb
mov
ja
out
paddb
xchg
adc
ljmp
sub
loop
das
xor
and
dec
pop
lods
adc
adcb
xchg
outsb
xchg
outsb
sarl
aas
leave
mov
lahf
sbb
xor
cmp
mov
mov
mov
and
or
insl
push
ljmp
mov
inc
xor
arpl
and
sbb
cmp
add
pop
popa
ret
or
and
pop
sbb
adc
cmp
test
fisttpl
mov
rcr
or
andb
or
mov
and
xchg
inc
stos
xchg
mov
and
clc
shrb
push
and
sub
repnz
adc
cli
sbb
cmp
rclb
inc
js
imul
xlat
mov
pop
sub
and
lret
notb
inc
out
sbb
sahf
fdivrl
je
and
jnp
mov
popw
add
pop
sub
div
mov
out
fcmove
mov
lds
xchg
jmp
scas
mov
popa
jmp
or
cs
sbb
and
mov
cmpl
pop
jge
cltd
mov
add
adc
mov
xor
popa
mov
cmp
push
ss
adc
jb
and
adc
adc
pop
daa
dec
mov
fldt
enter
cltd
rcll
and
jnp
pop
jno
jle
imul
insl
and
arpl
lret
out
inc
xchg
jge
xchg
dec
fldl
xor
sbb
cmp
stos
xchg
and
add
out
xchg
mov
sbb
lret
call
or
jle
adc
mov
jbe
xor
cmp
pushf
jle
dec
outsb
push
mov
inc
shll
sbbb
mov
jo
dec
mov
cmp
ficomps
loop
addl
jp
sahf
cs
mov
sub
sub
xchg
sbb
or
inc
outsl
outsl
inc
aaa
lds
dec
loope
bound
popf
and
repnz
push
cmp
dec
stos
xchg
sub
jg
mov
dec
nop
shlb
int3
out
xchg
jecxz
inc
popa
cmpsb
jle
inc
xchg
sub
pop
out
sbb
repz
xchg
scas
mov
jnp
iret
mov
xchg
add
sarl
orl
mov
pusha
sub
jne
and
xchg
mov
xorl
pop
imul
sub
mov
cwtl
mov
push
popa
add
lret
and
mov
imulb
loope
xor
jo
xorl
addl
out
push
into
int3
add
out
popa
rcrb
cmpsl
lcall
outsb
imull
push
xor
sarl
xchg
inc
into
cltd
mov
flds
and
adc
andl
loopne
sub
mov
jmp
test
repz
jb
popa
jl
cmp
pusha
xchg
and
js
imul
jno
or
out
and
mov
or
and
or
cmp
aaa
push
sarb
and
out
dec
sub
xchg
ret
and
and
push
inc
xlat
mov
nop
movntps
sbb
test
rol
or
cltd
sub
popa
push
inc
fistps
xor
daa
and
rorb
jp
out
out
insl
adc
push
ljmp
rcrl
xchg
stc
cmc
mov
and
add
push
and
mov
cltd
pop
std
popa
bound
cmp
jno
insb
mov
cwtl
sbb
sub
call
inc
idiv
lea
imul
pop
cmpsl
cwtl
pushf
xchg
lds
sarb
mov
fiadds
cmp
aas
repz
scas
into
fdivrl
and
test
das
pusha
add
sbb
std
data16
cmp
dec
leave
sub
mov
ljmp
push
mov
and
in
or
and
ret
movsl
insl
jae
and
mov
jg
iret
mov
dec
lock
cwtl
popa
or
repnz
dec
xlat
fcom
fucomp
mov
jne
mov
dec
ds
outsl
imul
xchg
jns
popa
cmpsl
es
lret
pop
and
movlps
and
outsb
movsb
aaa
leave
aad
std
xor
mov
and
jp
aam
mov
xchg
fwait
xor
mov
imul
pop
or
xchg
push
rcl
or
and
mov
xchg
jne
fadds
xor
sahf
inc
fnstcw
and
cmp
mov
push
pop
inc
jne,pt
test
outsb
dec
jno
pop
fwait
test
and
sub
bound
adc
and
cmc
lcall
mov
fistpll
add
in
bound
ja
aas
mov
jp
and
outsl
in
pop
lcall
sarb
sbb
in
mulb
rdtsc
adcl
out
sahf
sub
sbb
popa
je
scas
and
inc
cmp
pop
insl
cmp
xorb
scas
lcall
pop
and
andb
jge
push
ja
gs
adc
jae
jecxz
xchg
push
xor
mull
mov
out
or
lret
mov
adc
jne
iret
mull
jnp
std
or
jle
inc
rclb
sbb
sahf
mov
jmp
lcall
and
fldt
outsl
pop
daa
pusha
xor
mov
sbb
lock
jecxz
cltd
stos
ds
test
lahf
jmp
sbb
mov
les
mov
mov
sbb
and
out
dec
cli
aad
test
push
out
hlt
and
add
and
pop
dec
adc
lret
mov
xor
and
cmp
dec
mov
std
cwtl
push
adc
das
sbb
xor
leave
mov
cltd
and
sbb
pop
add
test
cmpsb
xchg
popa
jnp
lret
addl
ret
or
or
sub
cmp
dec
lret
shll
pushf
imul
and
scas
mov
sub
and
mov
push
mov
push
hlt
dec
push
add
and
cmc
gs
nop
insb
movsl
xorb
ficoml
clts
or
mov
lock
mov
inc
and
cmc
xor
dec
and
repz
jne
mov
loopne
sub
js
and
inc
addr16
fcompl
xchg
loopne
shrb
and
and
lea
xlat
nop
mov
addl
fsubs
mov
lds
lret
mov
pop
xchg
popa
shrl
and
sub
adc
and
push
loopne
or
pushf
add
and
add
dec
ficompl
sub
pushf
jns
and
movsb
aam
int
mov
add
xchg
jmp
imulb
cltd
push
insl
call
shr
dec
mov
adc
mov
mov
mov
pavgb
xchg
mov
daa
xchg
xor
icebp
mov
cmp
pop
cmp
out
movsb
dec
add
cmp
mov
jecxz
or
je
push
ljmp
pop
shll
imul
adc
ss
and
insb
adc
lock
shrb
stos
xor
hlt
movsb
mov
mov
add
push
inc
xchg
xorl
sub
hlt
stos
mov
inc
cld
pop
test
imul
loop
cmpsb
sub
push
lods
sub
dec
es
add
loope
cmp
pop
mov
shll
jg
outsl
xchg
je,pt
ljmp
pop
sub
scas
xchg
push
filds
dec
mov
push
aaa
mov
adc
adc
add
jnp
add
and
in
and
and
ss
and
in
push
and
xor
ljmp
fsts
and
stos
dec
jne
loop
scas
and
xchg
dec
dec
jb
and
gs
loopne
and
sbb
pop
push
mov
dec
cmp
or
sbb
mov
adcb
aas
into
xchg
push
cmp
popf
mov
jo
jge
xlat
cmpsl
and
xorb
outsb
lahf
adc
movsb
repz
out
sbb
xor
pop
les
or
jge
outsl
mov
fdivs
or
xchg
push
jnp
cmp
jl
sbb
xchg
push
and
stos
sbb
mov
in
cs
or
jne
add
dec
xchg
mov
and
imul
push
bound
and
out
jmp
shll
jne
mov
sbb
cmp
jge
mov
xor
pop
frstor
out
ret
ret
std
xchg
dec
and
je
stc
mov
mov
jb
imul
bound
mov
push
sub
lock
and
lods
loopne
jb
jp
test
sub
arpl
mov
sti
xor
dec
jnp
pop
inc
jge
iret
and
adc
xchg
lret
and
jp
add
xchg
fsubrs
mov
iret
cwtl
leave
mov
xor
xor
notl
jno
xor
pop
sbb
sub
and
push
inc
mov
clc
cmp
mov
ds
in
stc
test
mov
es
gs
roll
sub
cmp
push
jmp
je
jg
inc
jbe
lahf
ds
js
xchg
test
pop
pop
sub
sbb
push
mov
fimuls
nop
dec
and
push
cmp
and
out
dec
mov
push
mov
mov
lods
and
gs
pop
sbb
decb
and
jns
push
outsl
das
adc
mov
test
mov
pop
das
and
sub
and
push
cmp
ret
mov
and
shrl
mov
xor
popa
adc
test
inc
push
arpl
xchg
cmp
dec
scas
dec
mov
jecxz
sbb
mov
sub
cmpb
fs
cmp
mov
data16
cwtl
lcall
push
pop
clc
push
pusha
and
xchg
push
ret
popf
test
hlt
sub
or
repnz
aad
gs
clc
addr16
stos
inc
dec
dec
xchg
xchg
sub
inc
lahf
ja
popa
cmp
fisubs
fwait
add
mov
sub
loop
dec
test
cmp
mov
pop
pop
cmp
in
sahf
pushf
inc
mov
jmp
inc
in
push
fistpll
out
insl
mov
lea
sbb
loop
testl
faddp
rol
stos
xorl
ret
cmpsl
sbb
jbe
or
inc
adc
jmp
jecxz
sub
or
pushf
push
push
xchg
pop
popf
xor
sub
jmp
mov
cmp
out
add
cmp
ret
lcall
and
push
cld
mov
push
pushf
mov
shlb
or
adc
lret
mov
movsb
xor
std
in
or
jmp
cli
loope
out
scas
xchg
push
and
imul
cmp
jb
pushl
xchg
fcoms
je
pop
dec
xor
cmp
push
and
sbb
push
and
cld
stc
pop
inc
outsl
and
icebp
sbb
jp
sbb
das
cltd
add
and
test
jno
outsb
cmpsl
inc
lcall
add
rclb
call
lahf
mov
or
and
lods
xor
mov
add
xchg
outsl
and
mov
xchg
push
sub
pop
and
lea
test
mull
sub
pop
call
push
xlat
imul
xchg
xor
adc
lret
rorb
or
movsb
inc
and
push
lods
test
and
cmpsb
jge
shll
test
jno
movb
mov
cmp
inc
movsb
and
and
mov
loop
out
fisttpll
loope
sub
mov
xchg
test
test
pop
aaa
fldt
mov
icebp
xorl
int3
xor
aas
and
pop
pushf
scas
cmc
ret
std
inc
subb
inc
mov
xchg
sbb
les
and
pop
mov
sub
and
pushf
dec
inc
test
imul
imul
xchg
dec
jnp
mov
daa
emms
aaa
and
dec
aam
clc
mov
xlat
and
ds
sbb
cltd
dec
fistpl
cwtl
gs
sti
nop
fs
cmpl
lock
in
mov
adc
mov
seta
scas
push
leave
loopne
lock
jb
push
lahf
dec
mov
mov
das
leave
scas
mov
sbb
xchg
push
xchg
jle
and
xchg
call
shll
js
jno
add
or
and
shrl
push
lahf
inc
daa
sbb
xchg
inc
and
pop
out
in
inc
jmp
pop
shlb
cmp
insl
ja
inc
jno
jne
incl
cmp
xchg
jg
mov
addr16
and
js
subl
fiaddl
push
popf
or
and
push
jg
push
pusha
cltd
bound
js
mov
into
and
ficomps
in
sti
or
dec
mov
jp
and
push
xchg
test
ss
adc
loope
xlat
fstpl
xchg
jl
sahf
les
push
xor
idivb
dec
and
ja
inc
imul
daa
shrb
repz
push
in
inc
inc
push
mov
mov
js
or
and
insb
cmp
cmpsl
and
and
xchg
ss
pop
test
pop
or
outsb
mov
in
aam
xlat
adc
push
test
pop
mov
out
sbb
sbb
js
xchg
and
fwait
cltd
mov
int3
mov
cwtl
and
test
push
mov
xchg
imul
lock
push
jmp
and
out
rcrb
mov
lret
and
int
iret
mov
mov
and
push
test
repz
cmp
add
jmp
and
cmc
outsl
rcl
popf
fsubl
inc
imul
sub
xlat
movsb
in
lret
cmpsb
ja
imul
mov
xchg
dec
repz
and
xchg
aas
test
hlt
iret
lea
addl
ja
sub
xchg
mov
arpl
cmp
push
scas
cwtl
push
inc
orl
clc
rcr
sub
jne
xor
push
testl
fsubrs
pop
inc
fld
add
push
inc
das
or
pop
fistpll
sti
and
and
jnp
cltd
rcll
xchg
and
shlb
bound
sbb
xchg
push
mov
jo
js
cmp
adc
insb
std
jns
out
xchg
jbe
ja
ficompl
sub
push
pop
and
jl
sahf
pusha
cli
loopne
and
rcrl
das
cmp
push
movsb
clc
mov
fcmovb
ljmp
xchg
out
mov
test
adc
fstps
inc
je
mov
fnsave
cmc
xor
lcall
subb
mov
mov
cmp
mov
test
loop
inc
xor
rcrl
scas
mov
ds
push
add
jmp
mov
je
gs
dec
push
pop
sub
lret
mov
fsubs
pop
xor
insl
out
and
adc
inc
xchg
rorl
lods
mov
mov
mov
adc
dec
inc
rcr
das
imul
bound
jbe
shll
push
xor
pusha
icebp
fisubrl
mov
and
rcll
cld
popf
push
sub
dec
and
das
xor
mull
leave
sbb
add
sub
lret
and
jne
outsl
mov
imul
mov
nop
stos
sub
jp
and
iret
pop
mov
pushf
and
addr16
sbb
jecxz
sbb
ret
push
out
fldenv
stos
ss
ret
mov
xchg
jg
xchg
popf
add
in
out
sbb
and
lea
stos
orl
xchg
dec
dec
and
das
mov
xor
jns
jno
mov
and
or
movsl
lods
mov
popa
fcomi
js
das
out
clc
adc
push
cmp
lahf
loope
sub
movsb
fmuls
js
and
nopl
hlt
sub
lcall
sahf
and
push
testl
sahf
in
mov
mov
mov
mov
shll
iret
addb
and
mov
dec
mov
sbb
test
or
mov
xlat
cmp
mov
fimuls
shll
push
lea
and
inc
in
mov
ljmp
movsb
lahf
roll
lods
xor
and
andb
inc
sbb
add
lods
xchg
jo
adc
ret
mov
jmp
mov
sub
movsl
insb
cli
jb
pusha
lea
cltd
fsubs
jnp
rcll
negb
pop
xchg
add
and
sarb
or
mov
hlt
and
fnstenv
pop
mov
add
cmp
sbb
frstor
and
xor
insb
and
inc
repz
scas
out
jp
xor
and
fnsave
and
xlat
fwait
xor
push
dec
int
and
test
jo
cwtl
xor
mov
and
add
inc
and
sub
push
rdtsc
xchg
cmpsb
in
stos
pop
aaa
push
and
repz
out
cwtl
cmp
bound
inc
and
fdivl
and
imul
mov
nop
in
cmove
popa
pop
jge
fcmovne
and
sub
outsl
add
lcall
mov
and
push
inc
cmp
mov
mov
imul
out
test
jp
jno
test
push
push
cmc
lds
xchg
out
into
pop
sub
and
or
push
and
ret
dec
in
and
xchg
cmpsb
std
lds
sbb
int
loope
les
xor
inc
xor
jl
mov
add
adc
sub
or
jno
push
enter
push
xchg
jle
mov
mov
fiaddl
in
mov
int3
and
jg
clc
mov
pop
xor
sbb
xor
lcall
aad
pushf
movsb
sarb
imull
jmp
and
jo
mov
or
mov
fs
cwtl
mov
pop
mov
xchg
cmp
movsl
mov
mov
dec
cmc
in
dec
sbb
push
scas
xor
mov
and
mov
popf
push
jns
das
test
fidivl
pop
std
mov
and
lret
dec
add
or
and
out
repnz
and
cmp
mov
cmp
aas
lcall
cmc
push
das
int3
sub
inc
rclb
sub
pop
push
mov
dec
xor
shrb
mov
push
jmp
cmp
iret
and
outsl
pop
int
fiaddl
sbb
pop
jns
fs
and
std
sub
push
adc
mov
enter
shll
fildl
test
and
aad
daa
pop
fidivl
fadds
movsb
dec
pop
out
add
mov
cs
popa
stc
repz
and
popf
pop
mov
adc
mov
stc
sbb
aaa
pop
mov
xor
pop
fisubs
sub
int3
or
push
paddusw
pop
testb
lods
fildl
push
push
popf
insb
xor
sbbl
bound
rcrb
scas
mov
stos
xor
cwtl
push
mov
and
cmp
jo
mov
push
in
repz
jp
mov
push
loopne
sub
fsubs
cwtl
lea
std
xchg
rcl
and
mov
movsb
mov
xor
mov
pushf
inc
push
pop
in
fs
and
add
mov
push
mov
pop
loope
push
push
mov
mov
xor
iret
inc
sub
inc
lcall
ret
push
ja
lea
or
xchg
movsb
and
sub
inc
fsin
and
pop
in
add
and
push
stos
mov
jge
notb
and
sbb
adc
and
cmp
mov
xor
and
sbb
or
lret
js
and
and
push
jge
fadds
ja
lahf
popa
sahf
add
and
inc
fistps
adc
dec
xchg
std
inc
aam
in
push
xor
mov
mov
xchg
dec
cmp
mov
inc
mov
loop
outsl
xorb
sub
rcr
lods
loopne
cmp
dec
adc
push
jno
clc
xlat
incl
or
jne
loope
subb
and
add
loop
mov
and
and
cs
jne
arpl
leave
enter
pop
orb
mov
jge
push
push
out
loope
and
cmp
hlt
ret
inc
xchg
andl
sbb
adc
push
sub
fbstp
adc
pusha
cmpsb
add
hlt
insl
pop
inc
test
mov
arpl
addr16
pop
mov
or
adc
dec
jmp
daa
scas
and
inc
icebp
loop
les
movsb
ljmp
call
loop
push
popl
mov
xor
faddp
stos
ss
test
sarb
dec
in
mov
pop
pop
lahf
inc
inc
and
repnz
or
or
hlt
mov
pusha
mov
and
addr16
int3
aas
mov
loop
outsb
test
jae
inc
sbbl
and
xor
insb
or
mov
push
call
mov
mov
sbbl
shrl
movsb
mov
xchg
jns
imul
pop
sub
pop
or
outsl
out
in
and
sbb
aas
push
popf
and
inc
aad
mov
mov
in
mov
bound
rolb
sbb
and
xchg
pop
mov
and
mov
jnp
and
test
xor
and
and
sbb
jle
fwait
sub
gs
adc
outsb
enter
aad
and
rorl
and
leave
lea
and
test
xor
mov
mov
sub
mov
and
outsb
insb
xlat
jns
and
lcall
and
testb
shrb
and
mov
cmp
and
mov
pop
and
push
push
orl
movsl
fisttpl
mov
add
xor
popa
rorl
xlat
xor
cmpsb
sbb
aas
popa
cs
fidivrs
adc
pop
stos
add
mov
decb
orb
mov
cmp
lea
popa
mov
and
addr16
xchg
aas
inc
jns
shld
mov
icebp
and
repnz
mov
cmp
pop
testb
jl
adc
scas
and
jg
sub
insb
pop
push
mov
cld
jne
mov
pop
mov
adc
sub
aam
aad
cmpb
in
fiadds
push
cmp
sub
mov
mov
xchg
mov
and
aam
sub
push
test
mov
inc
aaa
fidivrl
cs
cld
and
out
xor
gs
push
mov
das
mov
dec
daa
or
sbb
and
dec
pop
scas
inc
and
es
mov
mov
loopne
mov
push
and
in
inc
and
jne
mov
scas
pop
push
xor
aas
out
inc
lcall
mov
or
dec
and
inc
dec
pop
in
mov
fsubl
or
or
hlt
adc
pop
lds
xchg
and
gs
lret
rclb
xor
adc
cmp
int3
lcall
test
adc
push
and
clc
out
insb
popa
xor
and
dec
fimull
inc
pop
stos
aad
out
pop
scas
mov
jmp
test
addr16
lret
cmp
rorl
inc
sub
fsts
and
inc
pusha
enter
pop
repz
add
and
iret
mov
inc
shlb
xorl
xchg
mov
and
lock
inc
jle
movsb
jne
pusha
arpl
jmp
and
fs
adc
cli
into
or
sub
scas
xchg
jge
xlat
inc
inc
jp
and
sub
adcl
sahf
mov
jns
in
aam
orb
xchg
movl
test
nop
out
xchg
mov
adc
fists
out
faddl
or
stos
jne
xor
and
mov
cmpsb
and
adc
push
rorl
test
sub
jg
mov
sub
mov
pop
pop
and
add
and
dec
call
and
dec
push
add
iret
inc
loop
test
aad
fdiv
mov
and
and
fcom
or
mull
mov
xchg
out
scas
cmp
xor
mov
sbb
cmp
adc
stos
mov
test
mov
mov
in
push
jae
and
or
and
int
ficompl
push
xchg
dec
jbe
cmp
andl
mov
inc
jb
pop
jmp
xchg
pushf
mov
or
xchg
mov
mov
xchg
jbe
jns
enter
jae
lcall
and
mov
jno
mov
iret
and
les
ss
mov
ds
out
mull
mov
adcb
push
ljmp
and
mov
jbe
rcr
daa
mov
cld
xchg
aad
and
push
pop
das
and
es
cs
sub
adc
pop
sbb
cmpsl
es
inc
jge
and
or
and
jnp
add
and
push
jae
xor
push
movsb
push
and
xor
out
push
dec
inc
jp
in
loopne,pt
and
cmp
and
pop
xor
jb
jo
and
cmpl
jns
mov
mov
sub
add
imul
out
dec
mov
mov
and
in
shr
pop
popa
pop
sbb
jle
mov
repnz
movsl
jl
nop
mov
adc
adc
cmp
inc
pop
fsubl
dec
repnz
cmp
das
xchg
leave
pop
movsb
fsubrs
jecxz
dec
pop
ja
pop
jg
and
iret
das
fcomip
mov
imul
inc
jmp
jo
adc
scas
push
cld
inc
xchg
andl
stos
stos
mov
test
out
sbb
xchg
dec
test
and
scas
cmc
cmp
or
sahf
and
adc
jo
insb
mov
cld
xchg
cmp
inc
jne
and
daa
mov
push
ja
dec
lock
adc
dec
sti
cs
sbb
lahf
fidivs
icebp
and
jecxz
shll
sub
xor
xchg
test
or
adc
jo
popf
imul
mov
pop
cmp
movsb
pop
cmp
jbe
fidivs
and
sbb
addr16
mov
inc
and
lret
push
arpl
repz
icebp
sub
popf
sub
and
adc
or
pop
add
pushf
push
sbb
mov
xor
aaa
sbb
sub
movsl
xor
loop
popa
das
jns
sub
push
sbbl
cmp
fs
jne
mov
fisttpl
push
xchg
and
insl
ds
push
push
sub
add
movsb
not
mov
dec
pop
push
dec
sbbl
add
ljmp
das
movsb
repnz
and
mov
sbb
sbb
pop
or
dec
leave
add
mov
nop
xchg
in
popf
inc
lcall
and
mov
mov
adc
arpl
xor
pushf
pop
js
sbbb
imul
and
or
or
mov
gs
fs
xchg
in
and
jbe
add
mov
mov
and
adc
sub
movsb
xchg
xchg
push
xor
insb
shll
aam
lea
and
sub
call
lea
mov
push
into
lock
fcomps
scas
and
setne
outsl
dec
jns
lret
icebp
jg
and
jne
xchg
cmpsb
push
int3
and
imull
jb
sub
cmp
fwait
jo
stos
jecxz
int3
cwtl
and
adc
dec
mov
push
bnd
fildl
data16
or
and
jne
push
xor
clts
movl
sub
sbb
inc
insl
imul
jmp
fisttps
add
and
push
xchg
lods
and
inc
push
pop
and
pushf
shrb
das
ss
and
push
push
movsb
addr16
inc
and
orb
pop
nop
mov
and
dec
fstpt
sbb
jg
pop
data16
mov
inc
shll
mov
xor
mov
xchg
cld
out
xchg
cpuid
sub
aaa
fsub
popa
and
jns
mov
ja
jl
aaa
shrb
xchg
inc
aas
ret
push
sub
mov
mov
dec
andb
imul
in
fidivrl
popa
mov
xor
mov
lahf
inc
fsubl
sub
int3
pop
and
iret
shrl
out
sbb
ret
das
and
and
fcmovbe
and
and
arpl
mov
repnz
push
and
sbb
jg
xchg
add
int
lcall
xor
cmpsl
das
cltd
cld
dec
ret
mov
mov
fstpl
and
jmp
and
mov
fdivrs
jmp
test
sbb
adc
dec
sub
mov
add
and
and
movsb
gs
mov
rorb
xchg
pop
pop
inc
mov
mov
xchg
pop
das
xchg
movsb
inc
mov
adc
movsl
les
adc
ret
rcll
push
and
sar
mull
xor
testb
and
and
jmp
add
mov
add
inc
imul
stos
xchg
ljmp
sbb
clc
add
sbb
mov
adc
mov
fwait
testb
sbb
lea
cmp
aad
and
sub
dec
cmp
hlt
xchg
out
mov
ja
sbb
fistpll
and
push
xor
and
push
mov
mov
mov
outsb
rcll
pop
dec
and
sahf
fs
cwtl
pop
cld
dec
mov
lahf
divb
inc
daa
and
enter
xchg
dec
shlb
sbb
cmp
mov
adcl
popa
out
xchg
xchg
adc
shlb
push
mov
mov
dec
and
fwait
rol
or
sbb
cmpsl
push
sarl
pop
shlb
jbe
mov
and
jnp
sbb
jge
sub
and
movsb
push
sahf
mov
jne
mov
imul
pop
arpl
mov
xorb
push
push
inc
cli
and
daa
pop
outsl
pushf
xor
inc
jo
loope
and
mov
mov
pusha
orb
or
sub
and
mov
loopne
mov
movsl
mull
adc
xor
adcl
jle
jp
shlb
in
push
dec
push
xchg
jl
dec
fmuls
adcb
sbb
pop
sarb
in
lods
and
pop
add
es
push
mov
mov
sbb
inc
push
lods
repnz
push
sub
push
push
pop
hlt
fistps
push
xchg
cmp
cmpsl
lahf
and
into
ret
cwtl
and
movsl
push
fisubs
xchg
jmp
popa
loope
cmp
test
sub
stos
jecxz
add
sbb
ja
movsb
push
insl
cmpsb
xchg
mov
or
hlt
and
xchg
jle
sti
mov
and
leave
cmp
icebp
test
loop
xchg
outsl
into
and
roll
xchg
push
and
in
add
add
scas
cs
fstpt
and
movsb
sub
ret
pop
sbb
mov
sub
in
xchg
nop
mov
mov
and
dec
xor
push
ljmp
fstpt
xor
lods
test
div
xchg
xchg
mov
and
pop
outsl
xchg
dec
and
ret
and
jmp
addr16
push
xor
cmp
jle
dec
aaa
xor
xchg
pop
mov
cmc
daa
insl
lcall
rcr
mov
mov
divb
inc
mov
mov
cwtl
data16
add
push
or
mov
or
add
les
pop
xchg
xchg
pop
adc
mov
inc
and
pop
xchg
mov
and
pop
xor
and
add
xchg
loopne
cmpsb
push
sti
xchg
and
jg
out
pop
loop
shll
mov
stc
xor
subl
xlat
xor
sbb
lret
adc
dec
testb
mov
and
test
addr16
add
and
mov
sbb
jo
icebp
shlb
mov
mov
mull
or
cmpsb
mov
jmp
mov
mov
mov
gs
bound
movl
aaa
imul
mov
out
lea
and
ret
mov
lahf
push
cwtl
xchg
push
pop
and
daa
adc
and
popa
cmp
mov
or
xchg
cmp
add
dec
les
dec
mov
cmpl
jns
sub
fdiv
cmpb
lds
sahf
xchg
pop
jecxz
xor
inc
mov
std
or
jl
inc
push
es
pop
pop
icebp
mov
push
dec
and
arpl
aam
inc
jne
lods
sub
adc
jmp
and
repnz
cli
scas
pop
or
aad
mov
and
and
rcrl
cmp
arpl
xchg
mov
mov
and
mov
and
enter
sub
cmpsb
and
in
out
xchg
fnstenv
and
inc
xchg
add
imul
jl
pop
inc
dec
sub
mov
mov
or
in
sbb
out
aaa
cmpsb
mov
jle
xor
lahf
fldenv
popa
cltd
xchg
lret
aad
and
subl
xchg
or
scas
insb
popf
and
lea
inc
popa
and
test
and
sbb
dec
sub
fsub
and
lret
jg
movsw
fsubl
xchg
shrb
and
dec
push
cmc
ret
aam
pop
jno
insb
and
or
cmp
adc
mov
insb
out
xor
mov
and
ljmp
and
mov
cwtl
sahf
inc
rcrl
movsb
rcll
fsubs
adc
sub
and
pushl
mov
aad
inc
ja
push
cwtl
shlb
outsl
stc
push
hlt
pop
cmpsb
inc
and
dec
cmc
add
loopne
or
jno
xchg
into
push
jns
and
push
movl
addr16
loop
addl
inc
or
push
inc
mov
and
push
and
push
call
shl
popa
mov
jge
push
leave
orb
xor
rcr
and
and
push
mov
push
jge
nop
fisubs
mov
xor
popa
or
mov
inc
mov
and
jae
stc
inc
pushf
and
mov
in
retw
ja
daa
lret
xchg
pop
inc
mov
jmp
filds
and
movsl
push
inc
pusha
test
and
nop
mov
mov
jmp
out
aam
jge
dec
or
xor
outsb
cmpsb
mov
sbb
jmp
mov
sbb
jbe
xchg
push
std
push
sub
out
sub
mov
popa
mov
dec
into
adc
mov
sbb
sub
test
dec
daa
aas
shl
and
mov
push
test
and
int3
push
mov
push
iret
and
inc
filds
push
add
jbe
mov
aas
xchg
or
aam
cmpsb
scas
push
xchg
push
inc
mov
sub
cltd
int
and
orl
test
push
lret
imul
cmp
fs
lock
and
jmp
mov
int3
addr16
das
mov
ja
push
scas
mov
sub
mov
ljmp
lds
xchg
jo
out
and
pop
xchg
mov
inc
pop
add
scas
cmpsb
dec
jbe
mov
cmp
adc
cs
movsl
notb
dec
mov
dec
hlt
xchg
mov
cmpsl
and
pop
fcmovne
mov
in
mov
ds
mov
cmpsb
push
and
xchg
lret
loopne
pop
lret
xor
jnp
add
xor
movsb
sbb
frstor
mov
cmp
fs
aad
push
xchg
fistps
and
mulb
and
xlat
iret
arpl
push
sbb
push
inc
test
and
and
or
pop
xor
mov
insl
mov
fdivrs
repnz
in
stc
mov
lahf
push
and
shl
in
ret
out
sub
repz
sbb
icebp
sbb
adc
mov
push
inc
lock
shll
inc
aam
inc
adc
sub
adc
pop
mov
popa
sbb
jle
out
cltd
movsb
sti
pop
insb
clc
repz
jb
or
cmp
push
xchg
inc
sub
mov
popa
xor
mov
mov
cli
iret
lods
test
fbld
xchg
mov
imul
hlt
mov
cmp
mov
or
mov
fisubl
pop
sub
sbb
cmp
cltd
xchg
mov
sbb
dec
sub
mov
and
mov
adc
cmp
mov
jl
pop
push
jge
xchg
and
jle
imul
and
xchg
sub
sub
fs
hlt
mov
and
fsubs
dec
jo
gs
loope
mov
cmp
push
in
inc
mov
ja
imul
bound
sub
or
rcr
and
mov
pop
jge
pop
pop
fisubs
add
push
jp
mov
pop
push
mov
xchg
pop
mov
dec
aam
dec
stos
mov
jle
sub
add
cmp
and
mov
popf
scas
lods
cmp
popa
adc
out
sbb
das
and
or
mov
pop
js
mov
lret
and
insl
cmpsl
fisubs
add
fidivrl
sahf
cmp
pop
and
test
out
pop
pop
inc
mov
testl
mov
cltd
sbb
push
xchg
pop
jae
ja
int3
in
pop
and
mull
pop
repnz
sarl
lds
shll
daa
fmulp
dec
mov
js
shl
and
cmp
pop
xor
popf
shlb
adc
leave
cmpl
scas
mull
cmc
add
imul
fs
mov
jle
adc
mov
inc
sar
and
add
adc
pop
daa
les
push
xor
idivl
mov
dec
jae
sub
add
pushf
and
add
mov
jb
cmc
pop
mov
mov
or
outsl
push
pop
pop
jno
cwtl
repz
and
shl
push
mov
adc
and
jle
imul
outsl
in
push
mov
sub
fwait
pop
shlb
mov
shll
sub
jmp
xchg
loop
adc
arpl
pushf
mov
and
test
in
shlb
jns
bnd
mov
inc
mov
dec
jl
popf
js
out
shll
mov
xchg
jge
adc
mov
ficompl
xchg
dec
mov
stos
popa
pusha
push
add
mov
or
js
ds
stos
xchg
pop
push
and
std
mov
mov
mov
sbb
or
fsubp
dec
pop
aaa
and
stos
push
or
xchg
cltd
out
dec
rcrb
fwait
mov
inc
or
lods
imul
lods
shll
xchg
into
jg
push
adc
push
sbb
in
mov
and
imulb
loopne
pusha
and
rorl
xor
jg
xchg
enter
and
or
and
or
jl
rorl
out
mov
addb
or
adc
cld
xchg
and
sbb
or
and
and
or
inc
and
addr16
loopne
int
mov
std
mov
mov
rclb
pop
pop
insb
and
repz
dec
mov
sbb
in
jnp
mov
push
jge
in
xchg
and
add
test
mov
in
and
hlt
xchg
add
in
sarb
dec
inc
adc
and
dec
jge
and
movsl
ja
mov
insl
ret
jle
jno
in
xchg
fistpll
mov
jno
xchg
inc
inc
shll
cmpsl
add
mov
ja
add
mov
arpl
jl
jg
mov
daa
in
test
cld
lret
dec
stos
mov
repnz
push
ret
mov
jge
jne
bts
dec
and
out
ljmp
cwtl
test
fsubs
out
sub
inc
mov
mov
xor
push
dec
je
int3
shld
sbb
or
xchg
fnstcw
dec
push
popa
imul
int
cmc
and
adc
icebp
sbb
pusha
pop
jns
hlt
enter
xor
iret
fistl
and
push
lahf
mulb
outsb
lcall
insl
or
sbb
das
pop
repnz
sub
and
inc
popa
pop
sti
call
jnp
gs
clc
sub
pop
lock
push
cmp
sub
mov
mov
in
sti
inc
push
pop
jecxz
mov
test
cmp
dec
mov
and
scas
and
jo
and
and
dec
test
mov
sbb
sbb
int
testb
dec
mov
sub
pop
xor
test
xor
cmpb
cmp
shrb
mov
jle
rol
sbb
inc
jmp
add
pop
ds
popa
or
xchg
aaa
and
ds
and
cwtl
add
pop
lock
and
popf
cmpsl
nop
test
inc
or
jle
lahf
mov
xchg
lock
outsl
fs
shll
push
xchg
sub
test
xchg
movsl
mov
gs
ljmp
xor
in
repz
and
movsb
xchg
sbb
pusha
jl
mov
push
cmc
fildll
lahf
or
pushf
ljmp
int
cmc
push
xchg
mov
out
cmp
adc
push
rcr
pushf
and
stos
add
stos
fwait
mov
add
into
daa
ret
inc
cmc
fcmovnu
insl
movsl
xchg
sbb
jp
mov
outsl
add
in
mov
jne
das
push
mov
mov
popa
dec
xchg
sbb
sub
mov
mov
leave
hlt
dec
fstpt
cmp
imul
adc
fldt
arpl
pushf
xchg
lods
popa
into
add
leave
ds
and
and
leave
mov
xor
add
xchg
loope
cmp
test
jecxz
rcr
out
and
xchg
sub
pop
mov
sbb
je
and
cmpsb
push
sbb
in
xor
cs
and
pop
scas
filds
jbe
xorb
jno
push
and
dec
and
adc
ret
mov
aam
lock
imul
pushf
mov
push
mov
ds
in
movsb
inc
mov
cmp
mov
sub
and
ficomps
adc
shll
xor
push
sbb
cmp
roll
sbb
mov
lds
gs
mov
movsl
popa
pop
dec
ret
sbb
mov
add
cmpsb
pop
dec
mov
and
mulb
aas
shlb
popa
or
scas
adc
jno
popf
xchg
inc
xchg
iret
and
sarb
sub
outsl
out
sbb
cmp
xchg
mov
and
add
and
inc
mov
das
jl
mov
iret
mov
mov
fadds
jbe
loopne
xchg
adc
push
inc
mov
scas
aaa
push
and
and
pusha
out
sub
outsb
rcrb
xchg
sub
push
pop
les
fwait
loop
test
sbb
adc
cmp
out
push
aam
pop
test
jmp
stos
adc
sub
mov
sub
cmp
sub
and
cwtl
and
dec
rorb
and
pop
mov
jo
jno
sub
jns
ret
mov
cmp
dec
xor
adc
pop
push
int
inc
sarb
and
jnp
sub
xchg
into
loopne
adc
xchg
fnsave
hlt
xchg
fisubl
data16
push
ljmp
repz
das
popf
cmp
ret
dec
adc
and
push
jmp
pop
out
and
in
sbb
sub
cltd
sbb
push
psubd
mov
or
pop
mov
mov
stos
dec
mov
cmp
sbbb
out
or
insl
sbb
les
stc
imul
punpckldq
add
sub
xchg
mov
loope
and
fwait
mull
lcall
std
sti
mov
mov
lret
in
mov
in
xchg
outsb
mov
fwait
or
adc
and
test
aam
mov
jbe
repz
and
dec
xor
cmc
ret
jle
and
or
or
mov
mov
int
and
xchg
callw
and
addr16
dec
gs
mulb
in
or
jae
inc
sbb
pop
out
loope
or
sahf
cmp
and
inc
loope
aaa
xor
inc
aas
inc
inc
in
lock
jno
mov
jmp
or
mov
inc
cltd
sub
mov
xchg
repz
adcl
jl
jne
movsb
or
and
mov
mov
leave
bound
lods
dec
mov
xchg
pusha
push
inc
mov
lcall
mov
and
mov
scas
sbb
out
cmp
and
sbb
lods
inc
cld
and
rcrb
sub
dec
and
xchg
aad
mulb
mov
imul
push
mov
stos
cmpsb
bound
scas
pop
push
add
stc
mov
hlt
sub
mov
arpl
les
xor
xor
inc
pop
fisubl
les
ds
roll
stos
dec
mov
xor
popa
fnstenv
add
ja
loop
rclb
sub
or
adc
adc
push
and
push
xor
push
shlb
aad
pop
sahf
mov
xchg
negl
push
dec
inc
xor
pop
and
imul
shll
or
shl
rcrl
xchg
ss
dec
addr16
cmc
iret
or
or
push
enter
and
mov
mov
jns
and
xchg
cmp
and
inc
xchg
lret
xchg
imul
push
and
ret
in
mov
pop
mov
decl
jo
cmpl
popf
movsb
and
sarl
cwtl
out
and
ret
inc
fimuls
leave
sbb
ja
dec
or
sub
orb
in
iret
test
andb
cmc
iret
insl
mov
sub
sub
push
inc
daa
test
test
lret
sub
jns
cmp
add
push
mov
ret
xchg
and
mov
xor
mov
or
push
jecxz
and
xor
lret
mov
sub
dec
add
jo
jns
sbb
pop
and
jmp
movl
and
sahf
in
arpl
lret
mov
ficoml
and
mov
add
mov
flds
stos
add
pop
popa
scas
xor
or
fldcw
andl
lahf
jmp
jae
jnp
and
adc
mov
js
xchg
ja
xor
in
and
mov
cld
pop
and
sub
cmp
push
bnd
mov
and
dec
inc
sbb
and
sub
jg
outsb
movsb
push
es
ret
jmp
mulb
loope
fcompl
imul
sbb
test
jb
inc
pushf
add
mov
daa
sarb
mov
imul
sbb
std
and
sub
mov
push
in
sahf
mov
or
fs
movsl
pop
das
dec
lock
cwtl
pop
jecxz
pop
and
insl
lds
gs
cmc
lods
add
or
xor
adc
sarl
and
jp
and
in
loopne
sti
or
dec
push
mov
and
jbe,pn
inc
jns
and
in
fcoml
mov
jle
and
mov
pop
jecxz
sbb
and
jge
cmp
and
stos
and
mov
mov
ret
outsl
sbb
fbld
int3
stos
out
push
in
insb
and
fsubrl
pop
sub
xor
fiadds
aad
push
mov
xchg
mov
dec
pusha
aam
iret
js
and
xchg
inc
cwtl
and
je
pop
xor
mov
xchg
pop
mov
and
decl
movsb
xchg
out
cwtl
aas
push
lret
imul
jno
jo
push
les
enter
mov
bnd
pop
les
fstpl
mov
and
mov
xlat
flds
and
sahf
xchg
ja
dec
sbb
movsl
repz
push
inc
xor
xor
cwtl
sbb
and
test
icebp
test
pop
popa
dec
mov
jecxz
aad
notb
and
jmp
mov
pop
addb
xchg
adc
scas
inc
lahf
loopne
jecxz
aaa
and
dec
add
and
dec
call
gs
cmpsb
int3
and
dec
mov
xor
pop
movsb
sbb
mov
imul
adc
mov
outsl
sbb
cmp
ficoml
and
gs
push
fcmovu
xchg
and
and
jg
fs
repz
out
sahf
and
int
sti
frstor
fsubs
pop
xchg
mov
pop
jle
stc
and
inc
fwait
inc
rcr
aaa
addr16
jne
lcall
sub
lret
std
jp
cltd
fadds
mov
ds
push
clc
popa
aas
inc
xor
movsb
stc
xchg
mov
dec
xchg
inc
popf
xor
in
in
and
pop
mov
cld
mov
jae
fisubl
and
mov
add
cmp
shrb
or
insl
mov
out
mov
repnz
pop
scas
mov
out
xor
into
jo
xor
and
adc
inc
sub
and
pushf
outsb
sbb
fidivl
pop
mov
ss
inc
cmp
cli
insl
sbb
cmp
adc
pop
call
xchg
dec
cmp
movsb
aad
rclb
jo
adc
and
jnp
mov
and
mov
pop
mov
sbb
jge
shrl
lds
aad
imul
sbb
fsubr
cmpsl
and
les
push
pop
lea
mov
fists
lods
jno
push
or
and
decb
and
pop
jmp
jle
push
out
icebp
clc
shlb
cli
in
ljmp
out
push
jns
gs
frstor
ret
dec
repnz
idiv
jb
stos
repz
insb
jl
mov
es
fistpll
and
push
mov
test
das
imul
mov
sti
nop
movsb
xchg
hlt
aad
jae
fisttps
shr
pop
adc
out
cmp
or
movsb
inc
inc
repnz
mov
mov
and
mov
lret
mov
in
popa
cld
fdivrs
jecxz
xchg
pop
and
add
mov
jl
and
mov
and
inc
lret
and
into
xor
and
mov
sub
stos
mov
ss
lds
int
aad
movsb
adc
or
stc
and
jle
ret
test
or
cmp
adc
scas
add
icebp
or
cmp
scas
pop
and
xlat
int3
outsl
mov
xchg
in
cmp
jmp
stc
pop
bound
push
and
cmc
add
push
mov
xchg
pop
lret
mov
mov
aam
cltd
add
inc
and
jb
ds
aam
loope
jmp
cmp
jle
fwait
outsb
xor
outsl
lock
cmpl
and
mov
xor
int3
sbb
add
arpl
mov
adc
jmp
push
iret
cltd
xor
xchg
mov
pop
push
inc
in
and
jb
add
hlt
bound
mov
shll
pop
pop
inc
adc
dec
andb
aaa
ljmp
out
insl
ljmp
mov
lahf
cmpsb
and
cmp
mov
aas
test
cld
popa
sub
or
js
loope
out
in
popa
imulb
cltd
data16
stc
loope
int
mov
es
xchg
sbb
mov
jecxz
mov
push
xchg
les
fwait
scas
addl
push
dec
mov
and
mov
xlat
jle
mov
int
mov
mov
mov
notb
and
sbb
repz
ss
push
shll
mov
cmp
mov
movsl
leave
andl
popa
aaa
xor
out
test
mov
mov
test
and
mov
mov
scas
xor
mov
and
pop
and
xchg
mov
lds
pop
cmp
mov
jb
and
lret
pushf
movsb
into
mov
inc
mov
inc
xchg
loop
imul
fsubrl
xchg
and
sbb
and
or
mov
and
imul
mov
lret
test
dec
push
pop
jae
or
lcall
les
cmc
xchg
popa
test
popf
loope
jecxz
mov
aas
in
push
insb
and
pop
aad
or
mov
insl
lock
jb
gs
test
mov
dec
mov
mov
pop
sub
xor
lods
mov
loop
adc
aas
daa
call
sahf
pop
into
in
cmp
mov
push
and
mov
je
sbb
rcll
mov
push
dec
insb
and
pop
and
xchg
pop
dec
mov
test
test
jle
mov
push
pop
add
je
sub
push
push
sbb
xor
fildl
sbbb
popf
push
scas
jle
fsubs
cmc
in
idivl
pop
stos
pop
add
and
movaps
in
das
push
test
pushf
stos
loope
lret
rcrb
in
imul
add
subl
shl
adcb
add
xorl
or
inc
mov
push
lcall
cmpsl
in
adc
add
mov
and
test
scas
push
push
push
xchg
lock
pop
pop
popa
test
lret
dec
mov
test
push
mov
in
mov
shlb
jmp
xchg
and
leave
mov
mov
sbb
jmp
cltd
movsb
jae
jo
movsl
rcr
sub
mov
and
and
ds
adc
and
push
lods
sub
pop
subb
lock
ds
xchg
mov
cmpsb
mov
or
cmp
mov
add
xchg
pop
test
lahf
std
and
pop
xchg
ret
sub
aas
mov
fmull
shrb
pop
pop
test
loop
call
andl
or
std
aaa
and
inc
push
jp
dec
jecxz
jb
flds
sub
dec
idivl
js
cmp
and
in
daa
xor
call
in
fisubl
scas
ja
and
rolb
lock
push
fcompl
dec
pop
rolb
repnz
lods
and
leave
sub
sbb
lahf
mov
mov
and
mov
add
inc
sub
mov
push
loop
jbe
mov
ljmp
cmp
mov
inc
outsb
cmpsb
arpl
inc
adc
sahf
mov
int
aaa
xor
cmp
fstpl
aas
xchg
and
dec
sub
jg
pop
mov
xlat
and
push
cltd
mov
xor
mov
or
pop
loop
and
cmpl
mov
jne
movsb
add
pop
sbb
pop
pop
push
xchg
in
and
sub
and
and
mov
adc
jmp
popa
and
sbb
xor
mov
data16
and
add
movsb
bound
rol
xorl
aad
xor
xor
cmp
and
popf
cli
dec
pop
dec
and
test
clc
daa
pop
inc
mov
inc
or
push
dec
lods
cmp
pop
out
and
fwait
or
call
in
pushf
das
push
adc
mov
lock
cltd
jnp
and
or
and
mov
mov
cmp
xchg
or
mov
and
sbb
daa
and
inc
shr
xor
shl
cld
fwait
mov
es
fiaddl
movsl
jecxz
pop
lds
repnz
xor
mov
add
push
adc
push
push
mov
xchg
mov
jae
push
push
lock
pop
and
popa
movsl
sub
ret
adc
push
and
xchg
lahf
adc
popa
cmpsl
xchg
subl
mov
dec
lea
or
sbb
mov
dec
movsl
cmp
xor
arpl
subl
add
push
cmp
ds
popa
sub
pop
fisubrs
jne
mov
add
xor
inc
xchg
push
push
shll
cmpsl
xlat
aaa
enter
movsb
and
mov
mov
mov
fs
lret
add
and
cmc
dec
cmp
shl
nop
add
add
lahf
mov
pushf
add
add
mov
mov
lahf
ficoml
mov
push
mov
inc
jnp
sub
cmc
in
movsl
cs
inc
lcall
scas
inc
inc
stc
aad
ds
gs
in
jge
push
nop
and
lods
sbb
dec
adcl
sub
and
sbb
jecxz
gs
pop
aas
aaa
test
push
adc
fsubl
movl
popa
and
push
gs
mov
mov
cmp
and
jns
out
mov
pop
testb
push
out
clc
xchg
or
popf
jne
jmp
jae
push
movsb
pop
dec
xor
and
nop
sbb
xor
add
dec
call
xor
cmp
imul
subb
ss
and
cltd
cwtl
mov
outsl
sub
leave
and
scas
dec
loopne
adc
or
mov
cmp
adc
and
fisubl
imul
mov
and
loope
outsl
sahf
pop
test
jno
fadds
lcall
pop
dec
out
popf
jg
push
dec
mov
sti
loopne
mov
xchg
push
shll
xchg
cltd
jb
lret
dec
push
imul
and
ds
xchg
or
mov
sbbb
dec
and
jno
or
imul
push
lahf
add
les
pop
dec
mov
ljmp
pop
shlb
sub
stos
in
pop
mov
popf
inc
test
push
inc
cmp
movsb
fnstenv
xchg
and
subb
test
push
inc
scas
and
orb
pop
xor
and
movsb
cmp
ret
popa
fwait
mov
mov
hlt
sbbl
les
push
jmp
pop
clc
shlb
push
scas
push
adcl
popa
mov
enter
ret
ret
add
mov
push
mov
mov
outsl
lret
xor
aad
pop
sbb
sbb
dec
xor
jmp
fidivrl
dec
test
pop
sbb
and
lods
push
daa
mov
xorl
jne
and
mov
sahf
mov
mov
addr16
mov
mov
jnp
xchg
mov
sub
pop
jno
in
dec
je
inc
mov
aas
popa
cmp
xchg
mov
movsl
inc
cltd
mov
popa
loop
mov
mov
andl
ds
xor
fldcw
jp
and
cmpsb
sbb
fadd
sahf
mov
adcb
ljmp
mov
jns
incb
jle
pop
and
loope
call
and
sbb
and
rorl
addr16
push
and
xchg
icebp
sub
ret
push
xor
test
stc
add
xchg
adc
rclb
mov
stos
jle,pt
sbb
movsl
shrl
scas
mov
dec
repz
mov
push
sub
lods
dec
leave
or
and
jecxz
and
mov
and
imul
repnz
fxch
mov
inc
inc
or
shll
mov
andl
and
add
arpl
gs
mov
xchg
orb
xchg
mov
sbb
jle
add
xor
fcmovu
stos
clc
dec
data16
pushf
and
leave
adc
mov
loopne
fiaddl
inc
push
and
push
cmc
lea
sar
jle
jbe
and
adc
in
adc
xchg
cmpsl
mov
aaa
jbe
sbb
dec
lret
inc
jmp
in
andl
or
les
nop
inc
fwait
and
leave
and
mov
test
xor
push
cmp
or
orb
aas
out
mov
ficompl
ret
nop
and
inc
rcrl
rcll
and
mov
dec
and
outsl
mov
and
int
jb
and
push
scas
xor
mov
movsb
outsl
out
sbb
xor
cmpsb
pop
loope
dec
fnstsw
cmpsl
out
cmc
xor
outsl
out
es
or
sbb
lret
iret
popa
in
repz
imul
outsb
and
cwtl
and
call
add
dec
fisubl
out
xchg
in
aas
cmp
xchg
push
pop
inc
movsb
loope
xchg
in
das
addr16
sbb
jno
and
repnz
push
pop
pop
pushf
ja
les
ljmp
xchg
and
lods
jg
mov
or
mov
inc
and
cmp
test
and
das
push
nop
and
sub
loope
std
insl
mov
and
mov
mov
mov
iret
inc
js
sub
mov
in
imul
out
adcl
aad
pushf
push
movsb
mov
mov
gs
ja
int
and
loopne
hlt
pushf
cli
mov
rclb
mov
mov
hlt
iret
xchg
popa
mov
cmp
clc
das
mov
pop
mov
mov
mov
xlat
and
mov
xchg
js
movsb
lret
dec
sub
and
test
repnz
adc
pop
xchg
dec
push
mov
adc
popa
cwtl
xchg
mov
and
adc
popa
in
jecxz
and
aaa
add
lods
cmp
fyl2xp1
xor
and
and
icebp
mov
push
xor
or
cmp
and
lcall
test
push
mov
scas
cld
andb
lds
fisubl
pop
lret
jnp
add
ffreep
and
push
jb
mov
ret
or
stos
repnz
cmp
iret
pusha
and
add
lock
add
iret
or
and
mov
cmpsb
push
cltd
mov
and
dec
xor
insb
loope
sub
stc
jmp
test
rcrb
push
pop
cltd
or
mov
inc
or
dec
js
jb
sbb
daa
test
cmc
jg
icebp
int3
pop
test
ftst
xchg
neg
fisubrl
xchg
mov
cmp
inc
je
dec
andl
and
sub
dec
jecxz
xorl
icebp
push
xchg
sbb
sub
in
and
outsl
dec
add
sub
xchg
xchg
and
sbb
jp
xor
xchg
sti
mov
mov
out
xchg
icebp
push
xor
pusha
fcomps
daa
sub
scas
adc
and
add
lret
test
sub
jne
mov
in
adc
cmp
je
cli
sub
es
inc
enter
pop
inc
in
xchg
push
mov
mov
clc
jle
sbb
xchg
jge
mov
cmpb
pop
mov
and
pop
push
push
add
cmp
dec
pop
call
gs
mov
push
jo
xchg
dec
pop
mov
jp
sbb
push
sub
roll
jg
and
sbb
dec
mulb
dec
pushf
std
add
push
insb
clc
and
cmpsl
fisttpl
cmp
cmp
dec
nop
cmpsb
cmp
mov
ljmp
jne
cmpb
jmp
fisttps
scas
inc
mov
mov
std
pop
mov
in
cld
cmp
mull
jle
dec
inc
and
pop
movsb
pushf
sbb
insl
test
and
mov
push
sahf
pop
xchg
stc
ficoms
icebp
pushf
pop
and
ret
outsb
mulb
and
fwait
xchg
rcrb
orb
test
xor
mov
jbe
inc
mov
sarb
xor
cmp
sbb
sub
subl
push
and
xor
mov
je
test
mov
out
out
adc
and
loope
andl
and
push
fxch
stos
pusha
scas
mov
mov
daa
mov
mov
mov
xor
loopne
jp
or
lods
dec
mov
icebp
jns
sub
popa
sbb
inc
sbbl
or
and
jl
dec
ljmp
xor
push
aam
add
push
leave
cli
popa
idivl
and
fsub
push
fisubl
jnp
dec
leave
mov
adc
push
pusha
test
mov
push
loopne
and
hlt
pushf
dec
fmuls
test
lea
dec
add
lret
sbb
test
mov
movsb
add
xchg
sub
or
popa
fwait
adcl
repnz
xchg
cli
sub
shlb
popf
dec
and
xor
pushf
mov
cmp
lock
int
xchg
and
xor
xchg
cmpsb
push
cltd
jmp
test
test
add
and
imul
and
xchg
movsl
inc
mov
mov
and
sbbl
mov
pop
mov
rolb
les
mov
add
dec
cmp
pop
fisttpl
sbb
pusha
and
shrb
fnstenv
call
mov
dec
test
sbb
lahf
push
dec
inc
push
fdivp
jno
aas
and
jne
out
mov
add
sub
xchg
and
jne
inc
icebp
in
leave
push
sahf
push
ret
xor
sub
push
andl
add
dec
mov
mov
imul
and
repnz
outsb
mov
out
std
and
jo
aam
scas
insb
adc
fdiv
xorb
xor
mov
movsl
jae
add
dec
dec
std
xor
aaa
cmp
scas
xchg
mull
daa
jnp
push
loop
mov
push
mov
mov
adc
movsb
sti
popa
enter
and
push
or
sub
xor
rclb
ret
ja
and
outsl
mov
lret
and
add
ljmp
mov
sub
and
mov
jecxz
pusha
push
jle
jns
daa
nop
or
inc
scas
sbb
out
push
mov
sbbl
js
popa
test
mov
lahf
cmc
mov
xor
mov
clc
out
popf
xor
popa
aam
imul
push
mov
out
push
pop
lret
mov
mov
jge
adc
mov
lea
and
ret
mov
jnp
pop
mov
mov
and
push
jns
sysexit
push
inc
repz
adc
fildll
insb
in
sti
test
stc
pop
fdiv
sub
sbb
sbbb
jmp
out
test
shll
sar
cmp
popa
and
loop
xchg
popa
and
inc
ss
dec
cmp
jns
mov
pop
cmpsl
and
xchg
mov
and
jnp
or
and
sbb
cmpsl
pop
sahf
fisubl
shl
call
and
mov
xor
lods
and
inc
rorb
cmp
and
and
shll
sbb
test
jle
in
rcrb
xchg
lcall
lea
jno
cli
jecxz
imul
inc
int
xor
push
scas
inc
shlb
lds
pop
aad
pushf
jle
gs
rcl
xchg
sub
sub
jae
dec
sub
je
mov
cld
mov
cmpsl
sub
pop
iret
mov
icebp
xchg
movsb
and
fsubs
sub
and
lret
push
int3
and
xor
pop
mov
arpl
mov
jmp
add
adc
rol
adc
bound
insl
xchg
rolb
aas
xchg
and
push
les
popa
jns
loopne
and
insl
sarb
push
xchg
fiaddl
movsb
pop
inc
rclb
ja
mov
add
das
push
sbb
gs
push
pop
jae
sahf
shll
popa
sti
sbb
and
pop
cli
mov
xor
and
ss
jo
imul
xlat
pop
dec
and
xor
lods
mov
out
push
out
sbb
mov
and
cmp
xor
xchg
or
int3
cmpsb
aaa
pop
inc
ss
int
dec
lea
adc
popa
adc
fwait
jnp
lret
cs
les
pop
cld
mov
xchg
dec
lea
or
jnp
xor
mov
roll
subl
in
mov
scas
sarl
shl
jbe
mov
xor
xchg
pushf
and
inc
cli
xchg
lea
inc
fildll
xchg
and
shrb
sub
jno
push
lock
mov
les
push
and
lods
pop
xor
pop
mov
movsb
pop
xchg
in
imul
cmp
xchg
lods
cmpsb
cli
mov
xchg
repnz
or
outsl
divb
cs
and
pushf
push
push
fisubrl
mov
mov
and
jb
dec
fiadds
sarl
int
test
xor
xchg
jle
mov
scas
rcrl
xchg
push
lcall
andl
adc
das
pop
loop
daa
pop
cmpl
inc
cs
lahf
mov
lods
adc
lahf
sub
cwtl
xchg
xor
dec
and
push
stos
xor
pop
jbe
in
fsubrp
lods
sbb
cltd
and
xchg
cmpsl
movsb
cwtl
jne
imul
cmp
fcomps
and
iret
pushl
mov
mov
ret
xchg
sbb
popa
icebp
jecxz
and
cltd
xchg
push
in
lret
ret
lds
mov
cld
and
cmp
jns
xchg
in
pop
xor
pop
or
imull
ret
jecxz
add
xor
and
cmpb
sub
pop
inc
and
inc
test
jno
or
in
sub
lds
xchg
xor
aas
nop
insb
and
hlt
dec
dec
jmp
jge
sub
das
and
popf
sub
popa
pusha
inc
loopne
and
dec
jns
mov
scas
fwait
test
out
cmc
inc
jecxz
pop
pusha
shll
adc
and
jno
icebp
mov
push
jmp
insb
lods
mov
or
and
sbb
in
lahf
jp
xor
pop
lea
fnstsw
lret
inc
and
js
fistl
xchg
mov
jnp
inc
inc
mov
jo
and
dec
and
jne
and
mov
and
push
bound
mov
jo
and
cld
pop
in
enter
loop
xor
in
outsl
and
fsubl
pop
test
or
mov
push
mov
jl
pop
xor
test
cmpsb
push
mov
lea
lahf
pop
and
inc
dec
cli
sahf
fidivl
and
pop
cmpb
mov
cmc
and
push
xor
lock
sbbl
rorb
fdivrl
xor
popa
fcmove
cmc
int3
jno
add
and
sub
sbb
cmp
pop
ds
mov
fwait
cmpsb
adc
scas
push
cmpsl
mov
add
dec
pop
and
movsb
pop
std
movsb
cmp
jg
mov
out
loope
mov
and
idivl
mov
jae
mov
and
jle
dec
bound
test
xlat
mov
int3
lcall
outsl
mov
jno
jp
fcomps
sub
filds
icebp
push
xor
or
das
xchg
mov
xchg
int3
movsb
ror
cltd
ret
fsubl
loopne
push
fucomi
mov
and
inc
xor
push
scas
jbe
mov
leave
out
mov
jne
lahf
mov
les
push
cmc
xchg
out
dec
xor
jnp
inc
pop
sub
pop
cmp
icebp
ja
inc
movsb
mov
pushf
repnz
xchg
sti
ficomps
and
push
loopne
sub
leave
mov
shll
dec
xchg
cmc
jno
popf
imul
cmpl
jns
lret
mov
sahf
daa
pop
out
and
sub
lcall
jl
dec
and
sub
pop
sub
fidivrs
inc
adc
adc
xchg
cmp
and
popf
cwtl
test
and
int
or
mov
cmc
inc
jbe
or
das
mov
insl
inc
jle
test
mov
adc
popf
fnsave
xlat
and
sub
popa
inc
aaa
lret
jmp
inc
addb
inc
or
and
shrl
and
je
and
and
les
jns
sahf
lds
and
aaa
xchg
pop
lock
mov
lahf
and
shll
adc
and
mul
adc
aas
mov
sbb
rcll
mov
and
inc
cmp
and
jbe
and
addr16
andb
arpl
jle,pt
mov
cmc
bound
sti
clc
xor
inc
mov
push
sub
popa
and
mov
ss
dec
andl
insl
inc
mov
popa
lcall
ss
stos
pop
cmpsl
push
adc
and
fldenv
inc
ret
insl
and
jb
imul
sbb
pop
rorb
push
jge
enter
js
std
lds
nop
and
pop
sbb
push
and
mov
divb
nop
aad
inc
mov
pop
lcall
and
or
mov
and
dec
add
and
pop
jno
and
mov
mov
subl
and
scas
cwtl
push
adc
mov
and
testb
rcrb
test
ficoms
cmp
cltd
outsl
lds
mov
sbb
sbb
arpl
sbbl
cmp
jae
jno
insl
mov
scas
cmp
out
fdivrs
and
icebp
ljmp
aam
inc
mov
inc
add
fwait
push
out
and
xor
push
aaa
jmp
cmpsl
and
fbld
jle
xor
adc
add
lods
pop
adc
pusha
push
xchg
popa
pop
pop
add
leave
dec
mov
lock
and
stos
ds
push
sub
popl
and
lods
mov
pop
insb
mov
and
sahf
push
add
pop
jno
xchg
insb
push
jmp
sub
or
loopne
jo
pusha
cmpsl
and
sti
in
push
fbstp
jbe
sub
push
and
dec
and
outsb
shrl
pop
shll
push
ja
jb
stos
loop
and
add
stc
jnp
pop
dec
movsb
jge
jns
pop
hlt
daa
pusha
jno
push
in
repnz
xchg
je
popf
test
ret
cltd
jecxz
mov
add
mov
jb
ror
mov
ss
shlb
rcrb
nop
mov
fs
xchg
inc
ret
mov
aad
adc
je
dec
jl
out
ficoms
dec
sub
std
por
mov
dec
movsb
inc
enter
test
insl
cli
movsb
cltd
in
out
popf
lock
jmp
nop
sub
shll
and
adc
lds
outsb
push
inc
jae
and
out
lcall
xchg
mov
adc
shll
push
inc
adc
mov
xor
sti
sbb
mov
xchg
andb
xor
mov
mov
push
stos
cmp
and
das
outsl
push
mov
test
fidivl
add
decb
mov
jg
imul
inc
push
test
mov
mov
dec
pop
cmp
fwait
pop
and
imul
and
fsubrs
and
popa
pop
lds
stc
mov
mov
insb
test
ljmp
stc
mov
out
sub
and
mov
mov
int3
insb
mov
imul
test
adc
loop
lret
hlt
jle
sbb
inc
mov
xchg
adc
stos
sub
popf
insl
mov
pop
ret
fcomps
adc
pop
dec
pop
lcall
vcvtps2pd
sbb
pop
and
jo
and
xor
cmp
sbbb
inc
sbb
jns
popf
jecxz
and
push
xchg
xchg
dec
out
rorl
idivl
mov
pop
push
and
repz
mov
and
inc
shl
scas
sub
adc
lea
lock
pop
repnz
std
dec
sti
or
xchg
lods
pop
sbbb
mov
mov
or
bswap
pusha
mov
cwtl
mov
sbb
ds
jge
test
test
mov
mov
add
or
and
xchg
pop
pop
and
sbb
cmp
cmp
adc
and
sub
dec
aaa
jle
push
xlat
pop
and
shll
mov
ret
pushf
loop
andb
lahf
imul
cmpsb
xchg
addr16
mov
and
dec
popa
cmp
mov
jmp
test
test
ret
ss
imul
mov
and
push
pop
jle
xchg
jbe
mov
xlat
lock
popa
mov
cmp
and
leave
sub
xor
clc
inc
and
dec
mov
shlb
aam
sub
aaa
push
ja
and
jl
jae
mov
icebp
push
inc
and
xor
lds
pop
xlat
adc
rcl
xor
dec
in
sub
mov
jae
mov
mov
shl
popf
loope
pop
xor
jle
sbb
call
pmaxub
pushf
popl
and
or
in
pop
mov
push
add
bound
andl
adc
jp
js
jns
and
inc
stos
and
ret
jg
aaa
mov
into
or
pop
and
mov
xchg
sub
and
iret
cmc
pop
xchg
and
popa
mov
dec
xor
or
stc
xchg
mov
aam
pusha
jmp
je
and
test
lcall
mov
hlt
andb
or
int3
inc
push
mov
outsb
push
lret
fsts
pop
movsl
popa
add
repnz
out
fdivl
int
adc
lods
cltd
addr16
adc
int
and
mov
inc
adc
test
fdivrl
jge
mov
cmp
inc
rclb
push
sub
and
push
int3
dec
sub
and
es
pop
icebp
xchg
in
sub
cmp
push
push
sub
xorb
aad
fiaddl
dec
in
mov
outsb
xchg
mov
jo
lcall
pusha
jno
adc
lret
gs
dec
rol
dec
jp
add
mov
repnz
movsb
push
adc
call
mov
inc
lahf
insl
xchg
fsubrl
sub
mov
rolb
popa
and
mov
mov
xchg
mov
jnp
dec
dec
jg
pop
aaa
movsb
clc
adc
add
subl
mov
test
mov
int
sub
xor
sub
ljmp
pop
cltd
jnp
cwtl
das
mov
sbb
cmp
xchg
daa
mov
lods
stc
mov
in
push
fcoml
sbb
inc
sbb
inc
jp
and
lcall
gs
and
mov
dec
jb
sub
adc
testb
mov
mov
mov
and
push
cwtl
and
push
sbb
cmp
fs
add
cld
cmp
insb
mov
jo
and
icebp
add
and
sbb
stc
xchg
add
ljmp
dec
scas
jmp
fsubl
das
shll
pop
cs
push
jne
and
push
mov
xor
adc
and
and
loopne
movsb
xchg
sub
adc
push
mov
or
in
mov
repz
cmovo
data16
and
sub
lods
lds
lcall
jbe
ret
pop
and
fwait
cs
mov
outsb
and
or
int3
out
loop
and
xor
xor
mov
scas
and
adc
dec
mov
lea
lods
mov
inc
and
popf
xor
ds
jo
andl
jae
cmp
push
std
mov
xchg
cmp
mov
repz
cmp
shlb
cmpl
mov
fldl
sahf
mov
bound
in
lock
stc
sub
fisubl
add
punpckhdq
loop
sub
lcall
fmuls
movsl
cmp
and
es
push
jns
dec
and
sbb
xchg
mov
daa
add
shr
pop
movsl
adc
jmp
and
xor
das
mov
in
add
adc
xor
movsb
inc
lret
jp
test
push
lcallw
mov
dec
das
and
mov
lret
adc
sbb
mov
jbe
add
dec
jge
aas
int
rol
push
mov
mov
out
mov
lcall
sets
jae
notl
ret
and
and
or
inc
clc
xchg
and
jmp
mov
mov
idivl
popf
jp
pop
jp
lcall
cmp
xchg
jmp
jge
dec
rcll
push
xor
cmp
push
and
jmp
and
das
cli
xchg
scas
test
or
jmp
hlt
and
push
and
cmpsb
sbb
mov
stc
pop
xchg
rep
ljmp
loope
aad
dec
mov
js
int3
push
cltd
mov
and
fstps
out
mov
lods
mov
xchg
and
es
movsb
and
hlt
pop
jle
jno
pop
mov
dec
jecxz
sbb
inc
mov
cmp
and
stc
sti
fwait
lahf
int
flds
and
loope
shlb
imul
cmpsb
pop
or
shl
andb
adc
sub
in
fsubl
add
ret
movsl
and
repz
xchg
insl
cwtl
cmp
ds
mov
xchg
mov
outsl
pop
sbb
aaa
and
push
add
push
pop
cmpsb
pusha
jb
addr16
and
mov
enter
mov
cwtl
pop
popf
ljmp
js
loope
jns
pop
and
lret
add
mov
sub
mov
lahf
adc
repz
outsl
sub
addl
mov
nop
hlt
sahf
lock
mov
dec
mov
and
into
fimull
pop
test
fcmovnb
pop
pop
shl
and
sahf
mov
and
mov
push
cmp
jecxz
add
pop
mov
out
xchg
xorl
or
cmp
in
sbb
push
mov
fucomip
jg
xor
add
scas
aas
cmpl
fldenv
call
rclb
sub
jo
add
ficompl
and
rcrb
mov
mov
inc
cmpsb
fwait
in
dec
push
jp
mov
xor
mov
lcall
dec
das
inc
loopne
mov
shl
mov
and
adc
inc
lret
nop
and
push
xchg
cld
and
pop
pop
pop
mov
xor
jae
ficoml
fldcw
cmp
cmp
lods
outsb
pop
out
add
xchg
cs
fmul
pop
popa
jne
sarl
mov
stos
lods
popa
dec
bound
jno
inc
push
xor
imulb
and
inc
sbb
add
jecxz
xchg
loope
hlt
mov
sub
flds
jno
pop
arpl
cs
and
aad
stos
in
mov
movsl
dec
sbb
popf
imul
mov
mull
int
jp
mov
scas
out
cmpsl
mov
mov
lods
dec
xchg
mov
sub
into
fldpi
and
mov
test
mov
fnstcw
cmp
cmpl
push
sbb
pop
mov
mov
ret
sbb
cmpb
inc
shrb
mov
imul
push
lcall
dec
push
cmc
icebp
mov
lods
adcb
cmp
inc
insb
xchg
and
jns
jle
mov
stc
mov
ds
lahf
and
add
push
jg
and
adc
jae
jp
xor
popf
dec
nop
and
aas
fimuls
mov
sarl
lret
xchg
push
dec
movsb
addl
push
iret
sbb
xchg
shll
pop
popf
push
fsubrs
cmp
data16
mov
jnp
sub
bound
lods
mov
fdivs
inc
and
mov
dec
xchg
and
xor
addb
leave
mov
frstor
pop
xchg
fsubl
dec
and
xchg
stos
pop
lcall
push
add
xlat
cmp
push
dec
mov
dec
mov
xchg
sub
cld
sub
adcl
dec
and
xchg
leave
out
lods
mov
mov
xchg
add
dec
jne
or
mov
inc
lock
loopne
or
ret
andl
out
iret
sbb
and
mov
mov
rep
lock
inc
xchg
mov
inc
jbe
cmpl
pop
mov
pop
mov
pop
push
lea
ret
cmp
outsl
call
and
mov
clc
fisubs
and
decb
mov
cltd
and
cmpsb
fistl
and
cs
inc
mov
inc
xorl
stos
dec
daa
pushf
aad
insl
jae
popa
mov
xchg
and
mov
xchg
ret
cmpl
pop
and
lret
gs
and
sti
sub
dec
mov
lods
mov
sbb
xchg
pop
popa
pop
add
lock
jne,pt
push
inc
mov
sbbl
push
cwtl
xchg
mov
and
push
mov
xchg
out
sbb
inc
pop
pop
mov
mov
and
lods
jg
push
mov
int3
ljmp
cmp
jns
push
jne
cmpsb
fcoml
mov
in
daa
jne
and
andl
call
mov
rep
mov
add
cmpb
add
in
mov
sarl
hlt
xor
pop
lret
mov
sbb
and
fcmovnbe
and
cli
sub
int
andl
cmc
je
mov
fisubrl
fadd
add
and
xor
cmp
bound
push
ret
scas
xor
mov
push
repnz
cmp
repz
push
lret
and
mov
int
popa
shrb
cmc
or
scas
popa
and
cmpl
out
fnsave
cmp
fstps
pushf
fildll
and
pop
dec
lahf
push
call
clc
xor
or
outsl
andl
cmp
jmp
dec
sbb
test
push
fisubl
xchg
popf
pop
dec
cmpsb
mov
fstps
and
pop
cmpsl
and
push
in
and
fs
fildll
lds
sbbl
das
xor
adc
add
mov
hlt
subb
cmpl
pop
and
pop
ret
in
andl
xchg
rorl
and
ds
jb
jnp
frstor
mov
and
pop
sbb
stc
adc
jae
bt
cwtl
cmp
sbb
xchg
jg
fidivrs
inc
cmp
fistpl
test
and
jnp
bnd
adc
inc
icebp
mov
test
sbb
daa
jb
dec
xorb
mov
fisubrl
sub
rcr
xor
pop
les
cmpsb
iret
jg
fstl
and
bound
dec
and
mov
and
jnp
mov
je
insb
mov
inc
push
dec
mov
and
jmp
or
inc
pop
imul
adc
cmpsb
adc
xor
faddl
ret
ja
pusha
sbb
loop
jp
inc
cwtl
adcb
and
cltd
xor
and
dec
hlt
out
mov
rcrl
jns
xchg
in
xor
data16
loop
test
inc
sti
adc
dec
mov
imul
call
imul
mov
push
mov
loope
cltd
movsb
outsb
mov
pop
cmp
xor
xor
jbe
cmp
shll
jne
inc
sbb
and
and
dec
sbb
bound
mov
mov
fsubrs
mov
mov
cli
popf
and
jnp
pop
mov
pop
movsb
scas
and
jl
call
jns
mov
cmpsb
mov
or
mov
icebp
and
ret
add
push
cmp
xchg
and
in
stc
fldcw
std
addb
xlat
cmpsb
test
sub
and
and
add
pop
add
fsubs
mov
sub
rcrb
das
and
enter
and
push
mov
gs
loope
mov
sbb
int3
dec
and
imul
push
xor
js
sbbl
or
test
mov
mov
inc
cld
push
or
inc
and
cmpsb
adc
rcrl
xchg
cmc
adc
pop
loopne
inc
jge
and
cld
mov
pand
data16
loop
clc
xchg
mov
inc
and
fbstp
mov
mov
push
sub
and
jmp
cmpsb
sahf
mov
popa
add
cmc
push
lds
out
mov
adc
decl
rcrl
scas
and
jns
cmp
mov
and
js
arpl
mov
inc
jmp
and
mov
scas
cmc
mov
or
xor
sarb
push
and
mov
int
bound
push
mov
jnp
xor
in
and
or
pop
inc
inc
fbld
mov
stos
dec
into
cmp
cltd
mov
xchg
push
in
cli
inc
xchg
xchg
imul
popa
add
cmp
lea
out
push
mov
jns
rolb
loopne
popa
xchg
adc
mov
sbb
push
popa
and
xor
test
dec
movsl
popa
sub
and
xchg
sbb
xor
dec
push
cmp
jb
mov
xchg
push
cwtl
add
mov
andb
xchg
dec
ljmp
and
mov
and
mov
mov
cs
and
lea
int3
push
dec
push
and
lods
popf
or
dec
fnsave
fbld
rclb
mov
adc
add
inc
shlb
cltd
mov
and
js
inc
inc
aad
aam
mov
sub
ret
test
push
jecxz
loope
jle
adc
and
adc
dec
mov
xchg
andb
or
adc
pop
mov
xchg
shll
aam
jnp
add
xor
mov
or
pop
fldt
sub
xchg
movsb
shll
daa
mov
setns
xchg
add
data16
jmp
mov
sub
cmp
dec
outsb
divb
mov
imul
jle
out
aas
add
out
add
aam
add
jle
sub
sub
daa
lock
xchg
addr16
adc
mov
test
cwtl
mov
test
hlt
fdiv
dec
insb
and
pop
andl
xchg
dec
and
ret
test
popf
mov
inc
jmp
pop
ljmp
mov
cmp
ficomps
adc
pop
jg
test
loop
cltd
popa
dec
ss
fdiv
and
push
or
add
leave
dec
test
in
jnp
sub
adc
mov
repz
sub
and
out
test
ljmp
sbb
cmp
mov
mov
std
orl
inc
int3
add
xchg
sub
push
fcmovnbe
fisttps
and
or
or
push
and
out
adc
mov
loop
adc
inc
xchg
dec
mov
dec
add
inc
mov
xchg
mov
push
mov
rcll
js
inc
and
mov
dec
sub
sbb
pop
and
lahf
pop
pop
js
les
xchg
movsl
hlt
loop,pt
sti
and
mov
mov
mov
and
shl
pushf
ret
cmp
and
fs
jle
lret
and
iret
dec
pusha
lahf
dec
cmp
xchg
fdivrs
and
sbb
and
adc
bound
jl
and
outsb
cwtl
loop
shll
mov
test
and
inc
cmp
xlat
sub
sub
aam
in
jns
mov
dec
mov
das
jg
fmull
jmp
xor
and
in
inc
loopne
and
or
and
add
das
add
fbld
aaa
lret
pop
ja
and
repz
shlb
ret
test
int3
iret
or
mov
lods
sbb
jae
jecxz
inc
inc
and
divl
and
push
push
andl
xor
pop
insb
and
out
pop
jnp
adcl
xorb
hlt
and
bound
mov
mov
aam
rcrb
popf
and
stc
xchg
mov
cwtl
sbb
inc
jb
fstpt
jae
xchg
dec
jmp
inc
or
scas
mov
ja
adc
add
mov
xor
push
jl
mov
in
es
dec
xor
cmc
mov
mov
mov
add
pop
inc
movsl
cmpsb
pushf
loop
mov
in
or
pusha
lret
sbb
xchg
and
push
out
mov
bound
cmp
xchg
jae
and
mov
stc
adc
imul
push
and
jl
ret
and
fwait
movsb
push
cmp
xorl
out
mov
scas
scas
popl
push
and
and
dec
test
andl
jmp
sbb
push
and
jne
sub
lock
lods
sub
adc
push
xlat
ficoml
loop
or
xor
js
test
in
push
push
xor
sbb
and
add
inc
mov
sbb
jbe
movsb
loope
mov
aas
or
and
and
lods
and
imul
mov
and
iret
xchg
out
add
test
icebp
mov
sbbl
outsb
push
sti
hlt
mov
xchg
or
xor
adc
outsl
call
and
mov
sub
and
stos
lret
adc
lahf
add
jl
andb
imul
push
push
mov
movsb
fsubrl
imul
pop
and
popa
xor
xlat
mov
mov
jns
pop
loope
repnz
xor
mov
cmp
lahf
mov
xor
mov
sahf
and
jp
cli
ja
and
mov
adc
mov
push
jp
and
sub
and
into
jbe
inc
dec
mov
ja
mov
scas
and
push
dec
aas
ficoms
push
fwait
jnp
xchg
cmp
add
insb
sbb
and
insl
mov
fisubrs
sbb
sbb
push
xor
pusha
movsl
in
and
inc
cltd
pushf
and
stc
dec
push
bound
fdivp
enter
and
xor
jo
and
fcmovb
pop
test
test
adc
jmp
imul
push
ljmp
mov
inc
jp
int3
mov
add
and
aad
or
pop
and
test
xchg
xlat
cmp
neg
mov
iret
or
lcall
pop
call
cmp
sub
and
jns
roll
xchg
cmp
sti
jmp
and
ja
push
pop
xchg
mov
lahf
jg
or
adc
sbb
mov
je
in
dec
arpl
push
mov
ss
scas
mov
jae
mov
pop
pushf
fnstenv
orl
clc
cmpsb
inc
pop
pop
and
mov
jno
icebp
mov
mov
popa
pop
xor
cmp
mov
hlt
ja
push
jge
aaa
xchg
fnstcw
jnp
cwtl
jmp
pop
lret
mov
push
xchg
xor
out
repz
pop
inc
pop
out
dec
in
mov
inc
and
ja
and
or
pop
mov
sub
mov
or
fistpll
sub
cmp
or
orl
mov
cmpl
push
xor
pusha
dec
and
test
cmpsb
movsl
sbb
dec
jo
push
movsb
jnp
arpl
or
xchg
push
imul
and
shll
dec
mov
and
pusha
mov
pop
or
jge
xor
and
cmpsb
jo
pop
shlb
mov
inc
jae
ret
push
dec
add
dec
xchg
add
mov
cltd
pusha
and
popf
and
mov
ds
or
xor
lret
pop
mov
sbb
add
pop
push
mov
nop
and
and
ds
pop
add
popa
test
in
shl
jo
addl
dec
mov
bound
insl
mov
aaa
add
push
and
inc
or
cmp
cmp
cld
fldcw
sbb
fidivs
pop
and
outsb
dec
cwtl
xchg
add
and
or
dec
push
loopne
and
push
test
pop
aad
popa
lret
sub
std
and
sub
int3
xchg
adc
ljmp
inc
fldenv
jmp
in
add
pop
pop
pop
mov
sbb
cmc
js
push
lahf
and
mov
cs
dec
push
out
add
mov
sti
clc
mov
enter
inc
loope
push
call
into
pop
jg
mov
sub
faddl
lahf
inc
push
test
sub
jae
loopew
dec
stos
or
mov
sbb
dec
in
sub
inc
sub
sub
pushw
lods
shrl
inc
and
mov
insb
mov
inc
int
jno
loop
inc
push
push
scas
das
mov
push
pop
stos
dec
push
push
bound
movsb
call
push
mov
movsl
adc
iret
mov
out
pop
movsb
lods
mov
or
movsb
cmpsl
movsl
fidivl
add
hlt
dec
adc
or
or
and
pop
mov
test
fildl
jbe
outsl
pop
mov
shll
xchg
dec
xorb
scas
mov
insb
popa
loope
inc
push
and
sti
fsubrp
cmp
aam
insl
test
xor
in
rorb
and
arpl
iret
jl
jo
orl
imul
das
fimuls
jo
jg
and
mov
pop
mov
pop
xor
shrb
mov
mov
jge
call
mov
shll
push
xchg
adc
inc
inc
rclb
push
sub
jno
cmp
popa
lea
js
xchg
inc
lcall
pop
adc
cmp
and
pop
dec
fwait
popf
pop
das
je
mov
stos
pop
rol
and
mov
nop
push
sbb
daa
gs
xchg
adc
add
sahf
jno
xor
mov
push
mov
and
repnz
mov
aaa
pop
and
pop
push
mov
inc
addl
inc
fwait
cli
and
inc
fdivs
push
jecxz
xchg
sbb
push
mov
mov
sub
mov
sbb
sub
fsts
std
push
mov
ljmp
and
mov
je
cmp
sarb
repnz
add
mov
and
inc
pop
imul
xor
scas
pop
pushf
inc
add
dec
ss
xchg
and
into
sub
cld
sub
and
inc
fs
pop
add
and
pop
or
push
dec
jg
nop
inc
cli
mov
xchg
fnstsw
inc
mov
xchg
std
add
fs
xchg
push
cli
stos
mov
pop
fldcw
fildll
push
mov
push
sbb
cmp
movsl
xlat
sub
sub
mov
add
stos
sbb
mov
mov
jo
jge
hlt
mov
sti
sub
xchg
arpl
push
mov
shr
cltd
mov
addr16
xchg
or
ret
mov
fwait
sub
and
xlat
aas
and
push
lahf
cld
bound
dec
mov
add
dec
lock
mov
shll
and
push
pusha
sub
vpsubusb
mov
cmp
push
stos
or
cwtl
clc
cmpsl
and
mov
xchg
insl
and
cld
xlat
outsb
jne
fdivrs
and
dec
xor
and
add
push
cmp
mov
in
mov
sub
add
inc
sub
aas
jne
mov
cmp
lock
and
hlt
frstor
and
push
push
and
cmp
cmpsb
adcb
into
fsubs
mov
fsubp
or
and
lea
and
fs
and
jecxz
or
jo
cmp
pop
fsubp
push
test
fimuls
sub
or
and
inc
dec
stos
push
add
pop
and
push
lock
test
xchg
sub
outsb
pop
and
testb
mov
and
jns
out
and
mov
fwait
mov
add
add
mov
and
test
loop
cli
mov
pop
xchg
mov
stos
lret
pop
fstl
sub
orb
shlb
cmp
sub
sarb
xchg
andl
or
inc
out
rorl
ficoms
add
and
sti
lds
pop
in
dec
daa
add
xchg
test
fwait
sbb
mov
mov
jle
notb
pop
jno
cwtl
and
xchg
icebp
and
aad
test
add
push
popf
lds
add
xchg
loop
ret
mov
out
idivb
and
icebp
arpl
and
dec
jecxz
addr16
xchg
andb
dec
mov
mov
ja
adc
das
and
inc
dec
jo
xor
out
mov
or
in
push
jl
pop
mov
add
jp
movsb
aaa
jnp
add
add
pop
stc
and
dec
cld
xor
push
cwtl
sbb
hlt
in
xor
movsl
cltd
pop
mov
mov
pusha
lret
pop
jp
xchg
sub
fsubl
or
push
and
jg
aad
pop
loop
mov
adc
pop
or
movsb
inc
fstl
pop
push
xor
mov
push
addb
mov
out
jp
repnz
rorl
and
push
addr16
or
and
insb
cmp
mov
adc
adc
popa
repnz
add
imull
adcl
cmp
sahf
je
call
xchg
mov
std
cmpl
or
outsl
into
mov
fs
and
out
dec
sub
jl
or
popa
das
sbb
and
sbb
adc
and
adc
sub
scas
jbe
pop
jge,pn
and
add
out
fsubrl
mov
icebp
push
sahf
mov
scas
inc
outsl
test
nop
popf
insl
cmp
mov
or
rclb
repnz
mov
jnp
inc
and
scas
xchg
adc
mov
jl
lret
and
and
and
and
jmp
cmp
sbb
lods
and
dec
addl
dec
mull
loopne
or
sbb
in
mov
sbb
dec
fistpll
xor
mov
in
cmp
cltd
popa
mov
mov
pop
push
movsb
mov
inc
cmpsl
iret
or
movsb
outsl
rolb
clc
mov
and
insb
and
sbb
out
repz
pop
jle
mov
dec
addl
and
mov
bound
adc
xchg
cmp
add
jge
mov
jecxz
mov
dec
and
jecxz
cmp
dec
and
ret
insl
push
and
adcl
cli
mov
js
rclb
and
pop
aaa
pop
mov
cli
cmpsl
andl
and
rcr
jbe
enter
fwait
jp
sub
xchg
push
dec
mulb
xchg
and
cmp
into
idivl
sbb
aaa
ds
pusha
and
push
dec
shll
cltd
enter
das
push
xor
jnp
lock
mov
and
icebp
sub
fsubr
jns
jl
dec
sbb
mov
icebp
xchg
imul
testl
jns
push
sbb
cwtl
dec
aaa
and
cltd
push
test
mov
repnz
loopne
stos
cmpsb
gs
xchg
sub
and
aad
and
mov
and
dec
insl
push
cltd
cmp
mov
mov
loop
orb
je
xchg
and
pop
sahf
mov
fiadds
adc
xor
stos
outsl
ret
out
inc
orl
lds
dec
sbb
scas
cmp
dec
push
inc
xchg
inc
int
jno
ds
shl
mov
ficoms
movsb
das
fcoml
adc
stc
scas
xor
inc
jnp
mov
lds
or
cltd
push
shlb
fs
push
pop
dec
pop
push
pushf
add
jae
xchg
xor
jmp
scas
rolb
jp
jge
and
dec
and
fsubl
push
cwtl
leave
xor
lock
jecxz
mov
sub
int3
pop
and
mov
test
jnp
sub
mov
stc
mov
in
shrb
xor
leave
movsb
pop
stos
push
dec
jnp
jno
jne
and
cs
xorl
jecxz
xor
fcmovnbe
jae
and
mov
repnz
lods
mov
pop
movsb
jno
lods
mov
add
jns
jae
imul
andl
insb
xchg
movsl
and
or
and
xor
push
fisubs
sbb
sub
add
addr16
insl
pop
shrb
int
inc
rorl
add
clc
shll
lds
arpl
mov
cmp
jl
insl
jp
mov
mov
mov
add
fisubl
movsl
mov
and
daa
and
dec
and
and
adc
repnz
push
subl
js
aaa
mov
xor
xlat
sbbb
mov
inc
aad
out
jae
jmp
insl
cmp
std
nop
dec
sti
popf
pushf
sub
sti
mov
movsb
sbb
sub
jmp
inc
data16
jecxz
and
adc
xchg
int
xlat
push
and
insb
lock
cmpsb
mov
sub
cmp
inc
xorl
sub
push
mov
cmp
std
and
je
mov
and
pop
int
decl
mov
lea
and
int3
insb
sub
jo
xchg
loopne
push
loop
sub
push
leave
and
sbb
or
xor
fldcw
popa
xor
das
data16
adcl
bound
into
test
mov
push
mov
fsubrs
cmpb
adc
fcoml
mov
inc
dec
cmpsb
push
xor
icebp
inc
push
ljmp
js
fildl
add
sbb
inc
ljmp
xor
testb
bound
jo
ds
inc
ds
mov
cwtl
fisubrs
subb
jb
or
outsb
call
subb
and
sbb
and
mov
add
insl
jge
orl
push
add
and
clc
and
jp
cmp
popa
jmp
loop
jno
lods
mull
sahf
and
inc
jmp
das
pop
cmp
subl
jno
out
ljmp
inc
add
pushf
mov
cli
adc
scas
js
fstpt
and
fsts
adc
adc
dec
test
ss
push
and
insb
mov
jbe
jge,pn
xchg
xchg
mov
pop
dec
cltd
in
add
pop
pop
and
pop
cld
mov
push
mov
jmp
negb
aaa
push
push
mov
xchg
rolb
incb
cmc
addb
pop
imul
jp
dec
push
add
es
fwait
and
mov
dec
gs
frstor
pop
stos
insl
icebp
mov
mov
arpl
mov
cs
popa
sub
mov
ret
push
pop
movsb
int
popa
je
dec
lock
arpl
cmc
mov
dec
ljmp
pushf
push
mov
fwait
push
and
mov
add
adc
push
mov
and
cmpsl
jge
inc
pop
fsubp
jge
and
sti
add
pop
mov
adc
clc
inc
mov
lea
lcall
sub
pop
movsl
or
fcomip
popa
mov
ds
popa
push
aas
mov
and
or
nop
cmp
and
fdivs
add
mov
push
and
fstps
and
shl
repnz
adc
rcl
push
xor
das
adc
and
fcom
jno
and
cmp
xlat
rol
int
and
fldt
pop
xor
lds
mov
in
das
sub
pop
sub
cmp
and
insb
scas
imul
hlt
frstor
fldt
leave
inc
and
pop
mov
push
lcall
inc
sub
loopne
pop
pop
mov
mov
xor
ljmp
or
sbb
arpl
mov
add
in
xor
dec
push
push
mov
dec
cmp
rcrl
and
andb
xchg
cltd
xor
jmp
jmp
sbbl
and
loop
and
sub
jne
subb
ljmp
xorb
mov
das
pop
into
or
sarl
stos
cmp
adcl
add
inc
popa
mov
and
mov
mov
mov
mov
imul
push
lds
loope
insl
shll
cwtl
adc
in
arpl
fcmovnu
and
movaps
sbb
jno
sbb
jg
xor
push
mov
out
das
jnp
xchg
push
fistps
and
pop
es
scas
leave
repz
cli
shlb
testb
test
xor
in
sub
arpl
pop
pop
sub
mov
adc
push
push
and
scas
xchg
push
orb
les
arpl
inc
stc
cltd
add
mov
mov
enter
xchg
and
or
mov
icebp
xchg
xor
fisubrs
and
xchg
cmp
pop
jno
lds
jns
and
in
in
addr16
add
add
add
fnstsw
lock
xor
cmp
push
sub
jecxz
and
add
and
mov
add
cmp
pop
sti
lahf
leave
mov
sub
sbb
jne
jecxz
mov
sub
jl
fisubs
xor
mov
rol
cmp
add
divb
inc
mov
push
mov
mov
pusha
stos
jo
es
in
ret
jp
adc
sbb
insb
lret
call
loop
xchg
in
mov
and
jne
imul
daa
lahf
or
lods
inc
outsl
adc
add
mov
fsubrs
dec
push
dec
inc
out
jo
and
jne
inc
gs
jp
or
or
popa
roll
into
not
cmc
inc
in
mov
mov
hlt
add
mov
pop
jnp
ds
in
and
jge
push
cltd
push
filds
and
sbb
ds
out
jne
push
and
ret
popa
daa
adc
push
mov
insb
xchg
mov
xor
pop
fisubl
mov
sub
add
fs
popa
mov
div
orb
mov
in
cld
jnp
cmpsl
or
popa
jns
sbb
loope
lahf
shlb
popf
lock
rcrb
insb
mov
push
pop
mov
in
adc
imul
and
cmp
repz
pushl
adcb
or
ja
fstl
addr16
sbb
mov
push
mov
sub
pushl
lea
and
mov
mov
sti
xchg
insl
xor
or
subl
dec
mov
mov
incl
sub
and
sub
cmp
inc
mov
xchg
push
int3
cmpsb
mov
int
lods
jle
imul
loope
push
mov
sarb
sbb
dec
mov
adc
fld
sbb
repz
shll
jb
es
or
ss
inc
and
pop
in
pusha
dec
arpl
and
mov
adc
mov
ficomps
aad
lods
push
and
in
push
mov
ds
sbb
stos
andl
add
mov
testl
test
inc
mov
and
cmp
add
in
sub
pop
std
mov
imul
jle
and
xchg
sahf
jbe
inc
add
repz
imul
rorb
or
fisttpl
test
mov
ficoml
push
jl
adc
cld
mov
xor
and
adc
pushf
fstpl
sub
aaa
aad
mov
in
pop
pop
xchg
and
add
jo
movsb
mov
sbb
in
jns
xor
test
std
push
mov
push
push
add
mov
cli
imul
xchg
add
and
or
insl
xor
int3
jo
lahf
outsl
dec
sbb
and
cmp
cmp
ja
dec
and
out
xor
ret
ds
push
in
xchg
repnz
scas
xor
orl
stos
mov
jge
outsb
lods
popa
add
pop
jns
mov
popf
ja
adc
sbb
pop
gs
filds
aaa
test
sahf
and
int3
pop
inc
inc
push
and
call
fistpl
and
pop
popa
loop
and
mov
xchg
cmc
mov
mov
test
ja
mov
ret
stc
add
and
pop
jmp
and
test
and
lret
aaa
test
insb
jmp
adc
jge
lea
and
xchg
inc
imul
mov
popa
or
ffree
rorl
out
in
popf
cmpb
xchg
cltd
push
xor
jecxz
imul
aad
lahf
push
mov
jae
sti
fildl
inc
xor
mov
fiaddl
jmp
ficomps
sbb
mov
xor
cmp
test
test
sbb
pusha
push
test
in
sbb
and
cld
mov
xchg
popf
push
fmull
and
xchg
pop
lahf
inc
ja
aaa
xchg
outsl
pop
push
out
cmpsl
jle
inc
pop
insl
and
cmp
and
and
popl
mov
sbb
add
sub
scas
int
and
inc
cmpsb
jne
add
or
loopne
mov
and
rclb
fsubs
andl
xlat
cld
loope
push
xchg
mov
sub
xor
popf
xchg
mov
and
lock
xor
movsb
inc
lea
cmp
lds
out
push
dec
loope
xor
sub
stc
push
test
and
divl
jg
sub
iret
outsb
inc
xchg
test
mov
and
insl
ficoml
movsb
xchg
sahf
pop
dec
adc
scas
aaa
sbb
and
jmp
imul
sahf
dec
inc
sub
cwtl
and
mov
clc
xchg
and
aas
pop
mov
push
rorl
sahf
xchg
mov
pushf
pop
fcmove
mov
pop
das
outsl
nop
in
and
adc
inc
jnp
cld
test
and
cli
adc
fbld
mov
lods
add
inc
inc
mov
arpl
and
adc
nop
addb
enter
jmp
popf
lods
loopne
and
sbb
inc
sub
sub
pop
xchg
jg
xor
cs
repz
cmpsb
and
int
loop
jp
movsb
pop
sub
adc
daa
ljmp
dec
fidivl
jle
and
dec
mov
and
mov
shl
stos
movsb
and
and
and
push
inc
and
inc
xchg
pop
add
cs
or
sbb
mov
icebp
xchg
push
int3
cmp
lock
add
pop
xchg
mov
dec
imul
in
shl
jbe
jge
dec
xor
loopne
daa
popl
test
mov
pop
sub
jne
xor
and
mov
and
aas
mov
jle
pop
out
dec
mull
ja
mov
into
ret
and
or
jbe
xchg
jge
fwait
icebp
dec
jg
fisubrs
ret
or
add
cmpsl
mov
and
ret
xor
ret
data16
xchg
popa
adc
sub
fistpl
and
add
dec
in
sbb
popa
fwait
cmp
aad
mov
add
sti
add
cmp
sub
xchg
loop
and
loopne
in
xchg
movsb
pop
inc
push
lods
mov
add
adc
jg
and
int
or
mov
in
nop
dec
add
sbb
ljmp
adc
cmpl
mov
stos
pusha
push
faddl
push
ljmp
addl
cld
lea
lds
rcll
in
fwait
and
mov
jmp
mov
and
xchg
shrl
jle
xor
mov
test
cmp
call
jb
xor
in
adc
into
icebp
push
ficoml
jo
inc
and
jmp
jl
jno
test
cmpsb
fsubrs
and
outsb
push
pmaxsw
jne
dec
or
inc
stc
inc
xchg
lret
pusha
dec
and
aas
imul
sbb
cld
subl
inc
fs
dec
jae
and
iret
cld
mov
repnz
add
dec
mov
adc
push
lods
out
dec
nop
adc
fisubl
and
mov
and
vmread
outsl
scas
sub
mov
aad
mov
and
and
xor
add
mov
push
dec
cmpsb
das
mov
or
cmpsl
insl
outsb
push
and
cmp
sub
cmpxchg
and
dec
je
and
cmpsb
lret
jns
and
in
xchg
xor
jnp
cmp
call
cmp
and
inc
loopne
and
fdivs
xchg
lods
lea
sbb
or
xchg
sti
call
pop
fbstp
addl
push
mov
mov
add
sbb
out
andb
lcall
dec
pop
pop
ret
jmp
xchg
movsb
add
and
cmpsb
int3
outsb
sbb
inc
iret
xchg
xlat
cmp
loopne
push
push
mov
xchg
lea
mov
xchg
ret
cltd
sub
xchg
cmp
outsl
enter
and
cmp
adc
cmp
xchg
les
xor
and
pop
lods
fsub
push
adc
xchg
mov
inc
fiadds
inc
xor
xchg
test
mov
and
movsb
xchg
jge
sub
shll
sub
jecxz
imull
add
pusha
fisubs
fnstcw
aam
test
cmp
adc
test
dec
test
sbb
push
std
pop
out
push
jmp
enter
jns
and
mov
jne
sub
imul
mov
jle
sub
and
push
cmpsl
in
lea
sbb
aas
ljmp
mov
xchg
mov
and
cmp
stos
sar
pop
and
test
pop
and
sbb
ljmp
xchg
cltd
les
mov
cmp
sbb
or
das
out
xlat
dec
add
and
xchg
ret
test
aam
mov
lea
in
mull
jl
dec
push
sarb
and
loope
idivl
bswap
ficoms
les
jg
test
xor
mov
out
int
mov
fstl
or
mov
stos
mov
and
mov
ficoml
jnp
add
mov
sub
xor
into
sbb
push
fistl
icebp
xorl
and
aaa
test
pushf
xor
mov
push
into
and
aaa
or
xchg
and
sahf
aam
sub
push
fcoml
and
mov
jbe
cmp
pushf
mov
jle
and
pop
hlt
mov
mov
and
pop
jb
mov
and
xchg
push
mov
dec
test
leave
jecxz
sub
sbb
xlat
ljmp
std
and
pop
cld
popa
fcmovbe
popf
and
call
jns
sbb
popf
adc
dec
mov
imul
or
jae
ficomps
and
jmp
lea
aad
mov
loopne
andnps
mov
mov
loop
jb
fnstsw
cmp
and
in
sub
push
inc
xor
pop
in
pop
add
cmp
fildl
pop
sbb
sub
test
subb
push
add
and
xchg
mov
and
and
mov
enter
cld
cmp
and
inc
js
and
pop
dec
mov
fwait
push
and
adc
inc
adc
mov
or
mov
adc
dec
cli
fs
pop
dec
inc
loop
jnp
and
or
jp
pop
imul
push
sub
jns
jns
and
cli
arpl
lods
push
or
sbb
jecxz
icebp
pop
test
xchg
mov
sbb
mulb
outsl
movsb
mov
inc
and
and
and
mov
movsl
xor
and
loope
sub
mov
loop
repz
lods
and
lret
movsb
inc
in
pop
mov
and
lock
push
call
popa
sbb
xor
iret
bound
mov
movsl
sbb
cmpb
add
and
mov
pop
mov
stc
xor
mov
sub
cld
xor
xlat
sub
fimuls
mov
mulb
pop
sub
cmp
roll
ljmp
xchg
mov
pushf
or
jge
add
imull
int
loopne
pop
inc
cltd
inc
testb
adc
fistpll
movsl
push
xchg
arpl
push
push
in
lods
sahf
stos
or
in
shrl
gs
test
and
inc
sub
jae
scas
push
rorb
cmp
adc
loope
iret
and
inc
mov
shll
adc
test
sarb
popa
sbb
mov
stc
out
and
xchg
jb
daa
xor
mov
adc
jnp
mov
stos
hlt
xchg
xor
and
jge
push
jmp
xlat
inc
and
lods
shr
sub
imul
clc
jecxz
inc
xor
cltd
lahf
fistl
in
imul
lret
mov
outsb
pop
mov
movsb
stos
or
imul
dec
jae
mov
and
xchg
int3
inc
jns
in
sub
or
and
adc
test
in
xchg
push
inc
fstpl
mov
pop
fs
and
pushf
sahf
xchg
loop
fistps
inc
aaa
testl
pop
mov
loop
loopne
test
push
dec
xchg
bound
addr16
clc
xlat
mov
adc
and
add
pop
mov
ss
rcll
xchg
and
test
sub
notl
in
popa
out
xchg
inc
shlb
sbb
mov
jg
movsb
xor
imul
push
xor
dec
and
testl
dec
sub
rol
jns
ret
lahf
inc
mov
and
xor
arpl
cmc
mov
inc
and
test
xorb
xor
fildll
dec
ret
jns
mov
out
movsl
pushf
mov
fcmovbe
mov
lcall
pop
and
cmp
mov
xlat
xor
lea
andl
cs
inc
and
inc
xor
adc
dec
bound
add
xchg
pushf
and
cmpsb
dec
fsts
cmp
xchg
lcall
xor
imul
fistpl
xchg
loope
loopne
add
cmp
and
enter
in
jg
add
sub
and
and
xchg
mov
or
cwtl
out
pop
shrb
shl
push
adc
or
mov
fisttps
pop
dec
popf
sbb
and
les
stos
push
nop
xchg
fisubrl
sahf
insl
adc
lods
rcll
sub
cmp
jnp
lret
and
sbb
pop
and
add
push
cmp
xor
xorb
or
movsl
les
xor
cmp
shll
std
imul
mov
xor
jbe
inc
and
jge
jns
lret
push
add
movsb
stos
popf
repz
aam
pop
xchg
je
and
cs
cmp
or
cmc
push
mov
cmp
adc
mov
mov
test
sbb
adc
or
jl
bound
mov
jmp
inc
sbb
cmp
xchg
mov
jp
adc
mov
xor
cmp
sti
xchg
ret
or
and
call
loopne
dec
mov
out
enter
std
jns
and
or
pop
xchg
loopne
and
mov
sub
test
jl
adc
add
inc
hlt
jmp
test
insb
add
add
lcall
adc
xchg
or
js
imul
decl
fcompl
inc
push
sub
and
iret
stos
shll
aas
cli
pop
dec
stos
sbb
and
mov
xchg
test
sbb
nop
mov
pushf
and
pop
inc
jl
jbe
pop
push
and
int3
mov
jecxz
and
add
xor
sub
mov
and
and
shll
loope
jae
and
or
aaa
cwtd
and
mov
jnp
les
dec
cmpsl
stos
sbb
jecxz
mov
xchg
mov
sbb
and
sub
rclb
push
jnp
jmp
sub
movsl
jns
pop
mov
ret
test
js
lds
dec
mov
inc
xor
fistpll
movsb
jl
push
mov
andl
fwait
cwtl
and
cmp
mov
pop
das
int3
and
stos
and
mov
pusha
jno
push
ja
push
and
arpl
dec
loopne
movsb
stos
call
jnp
add
les
mov
dec
jl
andl
mov
stos
push
call
outsl
mov
xchg
pop
xor
push
aam
dec
or
popf
test
je
mulb
popa
aas
pop
sbb
int3
das
stc
push
es
sub
jae
stos
mov
pop
gs
jne
data16
repnz
push
jmp
adc
and
outsl
mov
pop
mov
stos
dec
push
xor
mov
jge
lret
adc
sbb
lahf
cltd
std
sti
mov
mov
fidivl
and
rcrb
cmp
inc
and
das
and
bswap
cmp
and
cld
xchg
xchg
or
dec
call
sahf
ds
rcrb
repnz
and
leave
cltd
sbb
jo
mov
movsl
inc
stos
sbb
add
mov
push
xchg
jns
icebp
sub
and
xor
out
inc
mov
pop
movsb
outsl
xchg
push
movb
loop
loope
jns
stos
and
mov
adc
lods
push
cs
mov
mov
sbb
jo
dec
jno
jae
loop
and
mov
sbb
add
adc
imul
and
mov
pop
push
xchg
xchg
in
mov
popf
dec
jbe
daa
xchg
movsl
outsb
shll
fisttps
sub
clc
and
mov
jle
and
lea
dec
daa
inc
push
xor
jno
subl
jo
xor
inc
pop
cmpsl
xor
pop
imul
addb
mov
push
mov
or
inc
and
jge
pop
in
rolb
sbb
enter
cmp
mov
sub
push
int3
and
jge
out
rsm
xchg
aaa
and
or
repz
sub
ljmp
jne
hlt
lock
sub
fwait
pop
inc
xor
pushf
in
in
sub
cwtl
pusha
jns
pop
scas
push
repnz
outsb
lea
mov
push
pop
mov
sub
into
sub
cmpsb
and
icebp
shld
adc
mov
pop
or
push
imul
mov
push
pop
stos
xor
cmp
inc
outsl
or
adc
mov
sbb
mov
mov
lds
inc
bound
and
fwait
call
rclb
mov
lods
andl
xchg
and
push
and
movsl
sbb
and
xchg
int3
xor
repz
dec
cmpb
pop
cld
push
mov
pusha
cmp
repnz
mov
add
and
xchg
add
mov
and
dec
cltd
shlb
leave
sbb
xchg
pop
mov
fnsave
popf
ljmp
fldenv
imul
jle
out
push
aas
mov
push
mov
fwait
and
mov
push
mov
movsl
jl
outsl
mov
xchg
cmc
into
mov
iret
mov
pop
add
lods
and
lcall
test
popa
mov
pop
inc
mov
and
outsl
jno
xor
sbb
imulb
stc
nop
mov
and
sbb
ret
int
xor
jne
mov
mov
or
in
and
fbld
inc
pop
sub
jne
push
fadds
into
xchg
xchg
lds
jns
scas
decb
movsb
aam
add
jno
jp
sub
dec
or
popa
ja
cmp
daa
add
lahf
je
cltd
cltd
lahf
inc
and
xlat
cmp
iret
les
mov
cltd
push
xor
jb
jle
bound
xchg
sbb
test
scas
aas
adc
jns
cltd
sbb
or
cmp
adc
and
popf
xor
imul
cmpsb
mov
cmp
sub
fisubrl
cmp
aaa
mov
push
jne
stos
jge
mov
fstps
andb
mov
dec
inc
or
and
jo
lods
test
lret
sahf
loope
dec
ja
test
sbb
mov
dec
fwait
popf
jae
and
or
inc
lods
rcrb
and
sbb
icebp
and
clc
push
sub
xor
aas
and
push
xchg
adc
call
dec
test
pop
mov
cld
stos
push
addr16
and
test
imul
xor
loopne,pn
cmp
add
xorl
pop
xchg
sbb
movsl
mov
aam
and
and
and
push
roll
and
and
mov
or
push
lds
and
mov
adc
lea
fidivrs
mov
push
mov
imul
adc
jp
mov
inc
cmp
cmc
fs
xchg
insl
es
or
push
pop
mov
jmp
into
and
cli
cmp
and
xor
fcmovnu
aas
cmp
and
cld
pop
bound
add
add
fdivrl
mov
fnstcw
sub
and
mov
mov
mov
mov
cmp
mov
cmp
jae
push
out
mov
cli
fadds
cmp
push
push
lock
xchg
clc
jl
pop
xor
aas
std
mov
mov
or
adc
dec
xchg
sbb
jae
mov
movsb
and
lea
mov
inc
cmpsl
mov
fwait
mov
mov
out
dec
xchg
xlat
cmp
repz
or
cmovae
inc
insl
popf
mov
jge
imul
mov
xor
imul
sahf
lea
roll
pop
mov
xchg
in
rorl
inc
dec
cs
mov
imul
xchg
imul
inc
sbb
subl
fstpl
or
xor
push
cs
add
mov
pusha
movsb
inc
sub
mov
and
xchg
mov
sbb
clc
lcall
int3
xchg
lds
sbb
and
sub
xchg
into
dec
mov
pop
test
cmp
pop
outsl
mov
shll
xlat
decl
jns
cmpsb
insl
shrb
push
xchg
aad
mov
cli
outsb
out
mov
push
add
push
sbb
int3
dec
imul
shr
das
jno
and
fcompl
loop
pop
mov
xor
and
fcomi
mov
and
and
je
push
fadds
jnp
es
jecxz
addb
mov
in
lcall
daa
ficoml
ret
cmp
xor
insb
add
push
mov
push
xor
je
mov
mull
xchg
nopl
cld
xor
sti
xor
push
cmc
sub
pop
ljmp
in
xor
add
xchg
ja
bound
jns
mov
jp
mov
shll
stos
cli
arpl
and
shr
mov
pop
and
push
test
and
ds
aas
das
in
xor
js
push
xchg
mov
inc
fildl
mov
insl
std
push
js
out
mov
mov
jae
sub
rclb
push
packssdw
and
and
lods
cmp
cmc
fnstsw
ds
popa
and
sbb
sbb
or
cmp
add
out
inc
mov
xlat
adc
and
mov
adc
subb
std
pop
sub
cld
and
pop
or
aas
int
rolb
mov
shll
sub
movsl
ret
xchg
xchg
inc
hlt
and
xor
and
mov
and
sbb
into
mov
cs
bound
jno
pusha
mov
and
lahf
push
xchg
add
push
xchg
leave
mov
and
mov
enter
bound
mov
xchg
imul
xor
scas
test
inc
push
adc
add
lcall
push
or
sarl
add
cmp
push
mov
push
rolb
imul
and
loope
movsb
hlt
fnsave
and
xorl
imul
fwait
shrl
mov
sti
fnstcw
xchg
and
inc
or
push
popf
scas
popa
pop
xchg
inc
or
test
xchg
jp
pop
fisttps
sahf
pop
call
outsl
and
subb
loope
cmp
imul
cmc
mov
add
push
aad
push
and
int
xchg
push
mov
sub
lret
pop
cmp
sub
mov
add
movsb
pop
add
dec
and
jbe
test
xchg
mov
cld
rcrb
dec
nop
and
repnz
push
inc
cmpsl
movsb
outsl
and
xlat
pop
jg
or
mov
xor
and
lds
and
xchg
xorb
shrb
loop
mov
and
inc
sbb
sub
in
sub
data16
add
addb
enter
and
outsb
test
xor
mov
ffreep
and
and
mov
dec
push
mov
adc
mov
xor
sub
add
adc
pop
inc
leave
into
push
jns
aas
sub
ret
xchg
jb
lods
dec
xchg
iret
aas
mov
or
fdivrs
cmp
mov
lods
add
xchg
push
sbb
push
jp
and
pushf
jecxz
fidivs
scas
and
push
fistl
insb
and
rorb
bound
jp
clc
push
pop
stos
fisubrl
and
fadds
xor
mov
repnz
xor
sbb
pop
mov
xchg
and
push
jecxz
and
jle
int
bound
outsb
push
xor
xchg
fwait
imul
ljmp
out
iret
adc
std
aad
mov
mov
add
aas
jg
or
push
adc
lahf
movsb
jnp
dec
inc
xor
lock
mull
orl
mov
in
jle
in
lahf
dec
pop
inc
xor
and
or
and
inc
adcb
add
and
mov
mov
fisubl
shl
sub
int
xchg
add
sub
xor
leave
jne
out
aaa
cli
xchg
mov
divl
ljmp
popa
mov
mulb
dec
xchg
adc
xchg
nop
and
imul
add
repz
call
or
adc
fbstp
fidivrl
and
jle
iret
subps
and
mov
sub
sub
mov
pop
xchg
int3
leave
dec
mov
jmp
movsl
dec
xchg
inc
mov
cmc
mov
nop
movsl
mov
cmpb
movsb
push
cltd
jecxz
mov
mov
aas
popa
or
sub
roll
ror
cmp
xor
daa
and
inc
mov
sub
mov
and
push
mov
ds
shlb
movsb
or
and
iret
and
jb
push
mov
mov
add
and
xchg
lds
pushf
xchg
inc
inc
xor
cmpsl
test
popf
addb
sub
jmp
push
outsl
outsb
inc
push
and
mov
xor
mov
xchg
mov
add
xor
lcall
inc
dec
and
xchg
cmp
push
or
int3
pop
jmp
xlat
adc
and
jl
fldenv
adc
sarb
sub
and
dec
pop
mov
shr
xlat
and
and
mov
subb
xchg
out
hlt
movsb
mov
neg
and
and
inc
pop
or
and
cmp
mov
sub
jl
mov
std
mov
dec
xchg
popa
std
adc
dec
pushf
adc
ret
mov
loope
stos
pop
or
bound
shlb
iret
test
inc
jmp
and
mov
scas
lods
mov
int
mov
add
into
mov
outsl
das
movsb
imul
adc
rorb
mov
mov
fidivl
enter
addr16
je
and
cmpsb
test
mov
lahf
lea
je
sub
in
das
shlb
fdivl
scas
outsb
inc
xor
bnd
mov
and
mov
idiv
sub
xor
push
and
test
loopne
jge
enter
inc
mov
and
cltd
stos
mov
pop
xchg
and
aam
repz
and
std
xlat
and
add
hlt
and
or
adc
xor
push
inc
mov
sbb
xchg
and
call
lahf
es
ror
scas
cmpsb
mov
and
idivl
inc
sahf
pop
mov
dec
aam
sub
push
and
aas
push
lcall
dec
or
xchg
mov
lods
lret
mov
pop
shll
xchg
std
and
test
cmpb
subb
fisubrs
out
mov
and
cs
mov
and
dec
stos
xor
cmp
dec
movsb
inc
and
shll
pop
cltd
repz
add
aaa
push
adc
popa
decb
fildl
insb
dec
and
push
xchg
fsubl
and
ljmp
ret
mov
mov
jmp
adc
xchg
test
fdivs
adc
adc
insl
mov
jo
jns
shrl
and
push
negl
fld
movsb
jnp
inc
and
inc
jge
mov
ficoml
cltd
mov
pop
inc
fstps
dec
jmp
aas
jno
sahf
and
sbb
pop
and
jns
adc
mov
xchg
push
cwtl
mov
notl
and
lock
add
jns
fiadds
bound
xlat
lahf
lret
fdiv
out
mov
loopne
xor
jne
xor
pushf
xchg
and
sub
lahf
lds
mov
fs
add
sbb
mov
sub
cmpsb
xchg
into
shlb
jae
daa
pop
in
bound
push
movsb
xchg
and
out
cmp
jmp
and
sbb
push
and
popa
ret
sub
mov
cltd
add
outsl
xchg
rol
mov
jae
cmc
push
dec
mov
jp
mov
mov
cld
daa
xor
jae
imul
and
jg
and
sahf
push
divb
mov
pop
cltd
setno
dec
jp
lret
or
mov
stos
subl
aad
mov
mov
xor
test
movsl
aaa
andl
xchg
push
xchg
int
jns
pushf
scas
sbbl
sub
movsb
and
outsb
xchg
jecxz
add
and
lret
mov
and
loope
mov
and
jl
test
movsb
cmp
loope
xchg
div
in
nop
andl
sbb
pop
xchg
pop
cmp
xor
and
aad
add
icebp
stos
lcall
jg
sbbl
aas
and
call
mov
mov
js
pushf
in
mov
je
inc
xchg
imul
mov
and
cltd
mov
xor
fnstsw
outsl
mov
push
mov
and
push
sub
std
mov
xchg
and
sbbl
and
hlt
push
sub
xchg
mov
leave
xor
mov
lods
adc
and
pop
insl
into
inc
cmpsb
mov
jecxz
ret
adc
mov
xor
mov
adc
xchg
sahf
push
xchg
stos
sub
push
inc
mov
jo
xchg
out
aad
xchg
pop
xchg
loopne
mov
mov
adcl
int3
jo
pop
adc
aam
ljmp
pop
shlb
jbe
jne
pop
mov
cmc
sub
and
and
loope
and
pop
leave
and
movsb
cld
gs
xor
inc
repnz
sbb
movsl
jp
push
orb
cmpsl
add
fisubs
cmp
out
xchg
ret
jns
insb
cmp
lock
xor
aaa
outsb
scas
and
sbb
dec
cltd
jle
and
int3
jbe
subb
mov
jae
nopl
add
rcrb
pop
addb
jbe
fnstenv
and
add
leave
movsl
and
test
scas
or
addl
int3
out
addr16
popf
and
imul
jno
int3
rorb
and
xlat
xchg
das
sbb
push
cmp
fiaddl
mov
lcall
jecxz
and
mull
movsb
sbb
sbb
mov
pop
out
xor
pop
andl
stc
and
xchg
lods
and
shrb
mov
ret
in
jno,pn
mov
shlb
push
out
push
and
and
std
sahf
add
popa
jae
fisubs
cmpsl
les
sub
in
shrl
scas
cmp
xor
and
sub
dec
ja
mov
jmp
sbb
lds
loope
outsl
xor
pop
jns
add
popa
push
pop
in
das
ret
outsb
jo
push
pop
pushf
inc
or
imul
and
xor
out
cmp
cmc
and
je
cmpsb
lcall
mov
and
xor
ds
pop
ja
fidivrs
testl
cmc
rorb
js
insb
movsb
xchg
sbb
es
pop
mul
and
mov
pusha
mov
fnstenv
jns
imul
cltd
add
xlat
movsb
sbb
call
iret
mov
sub
cmp
mov
xor
adc
adc
and
lea
sub
outsb
notb
ja
and
je
dec
mov
in
inc
lea
adc
sub
push
push
push
mov
dec
dec
or
sarb
das
out
pop
mov
jns
sbb
push
loopne
aad
pop
mov
movsb
jl
dec
jb
ffreep
mov
jns
in
test
xor
in
into
dec
dec
dec
pop
jmp
and
cli
mov
and
out
fbstp
pop
or
lahf
xor
cmp
inc
rcrl
dec
push
addr16
xchg
inc
mov
idivb
or
and
mov
cmp
mov
cwtl
xchg
enter
iret
adc
sti
and
xchg
sbb
xchg
andl
insb
mov
cltd
sub
adc
xchg
divb
les
inc
mov
cmc
xchg
fiadds
push
mov
mov
movsl
ss
and
cmp
dec
push
dec
inc
and
jp
mov
pop
inc
into
sbb
test
mov
mov
mov
pop
sub
mov
out
in
and
jle
aad
and
push
fisttpll
sti
mov
stos
cli
cs
add
and
push
lock
mov
inc
sub
pop
mov
addr16
mov
loop
inc
cs
dec
xor
rol
and
movsl
inc
lock
cli
xor
sub
rol
or
lods
cmc
xchg
shll
xor
xorl
jno
mov
inc
xchg
adc
or
in
push
jno
in
and
je
inc
mov
loop
out
inc
xor
mov
lods
push
sahf
add
and
mov
and
mov
mov
jge
bound
bound
and
sub
or
stos
clc
mov
das
adc
mov
xchg
and
pop
aad
popa
mov
lea
and
sub
jge
xor
or
loopne
je
ljmp
cmpsl
or
pusha
aad
inc
icebp
pop
std
stc
test
lahf
jbe
and
aas
xchg
fsubrl
fists
mov
jmp
popa
ljmp
jo
mov
xor
lret
clc
and
popa
pop
pop
in
lods
movsl
dec
test
or
mov
fsubrl
cmp
pop
imul
loopne
push
ljmp
and
jge
mov
mov
das
in
xchg
pop
ja
cmpsb
adc
test
adc
and
je
movsl
push
insl
and
fs
and
nop
mov
and
xor
mov
cltd
rcrb
fwait
xchg
out
stc
out
and
out
clc
out
fisubrs
jne
lahf
lcall
xor
jp
test
push
mov
movsl
pop
sbb
sub
adc
outsb
and
or
insb
ret
test
orb
fsubrs
lock
sbb
and
dec
shrb
pusha
rcll
and
pop
lcall
shll
mov
ret
mov
push
int
xor
mov
pop
pop
iret
stc
inc
or
mov
dec
iret
daa
cli
pop
push
or
sarl
das
mov
sbbl
stc
xchg
lahf
ds
pop
and
sbb
add
fistpl
test
and
mov
xchg
mov
lock
mov
scas
outsl
movsb
jo
inc
cmp
push
dec
cmp
std
mov
jbe
pushf
stos
or
out
xchg
adc
xlat
insl
adc
mov
push
and
and
lods
xchg
xchg
mov
js
addl
sbb
sbb
mov
insb
js
sub
cmp
dec
and
push
adc
and
mov
loop
pop
cmp
or
push
inc
jl
and
inc
stos
jp
mov
pop
int
push
add
mov
test
scas
jecxz
mov
test
gs
mov
cmp
andl
mov
int3
xchg
lcall
pop
sbb
cmpxchg
orb
push
mov
and
xchg
lret
jno
stos
sub
jns
insl
fimull
imul
jecxz
popf
shld
je
inc
sub
pop
pop
and
scas
cs
insb
cmp
ljmp
inc
jle
inc
mov
mov
pop
mov
xor
xor
dec
test
and
test
aad
and
add
dec
enter
lds
iret
jae
cmpsb
mov
mov
ds
pop
push
dec
lahf
lock
push
test
inc
cltd
fisttpll
iret
mul
add
mov
adc
push
imul
jge
flds
dec
pop
movsl
jno
inc
push
push
mov
mov
mov
mov
sub
cli
pushf
jg
inc
mov
outsl
ds
and
push
add
sub
jae
xor
sbb
xor
xchg
lock
or
int
adc
lods
add
mov
sbb
aas
push
sbb
add
ror
cmpsb
dec
arpl
xchg
and
sub
add
and
pusha
mov
pop
xchg
sbb
fstps
sub
andb
push
push
add
pushf
shlb
fwait
icebp
xlat
push
mov
pop
dec
popa
jnp
or
loop
mov
fs
loopne
mov
jne
sbb
add
enter
std
lods
aad
push
mov
mov
push
and
out
xchg
shrl
nop
lahf
and
cmp
mov
dec
adc
in
inc
cmp
stc
xorb
jmp
pop
out
js
cwtl
and
push
outsl
sbb
push
push
inc
in
jns
int
and
jl
cmp
aaa
xlat
and
mov
aas
fbstp
and
xor
sbb
mov
sbbb
das
sahf
and
jecxz
and
push
mov
and
test
mov
bound
cltd
inc
xor
and
fucom
pop
dec
and
sub
push
mov
daa
mov
test
fsts
in
and
xor
lahf
xor
and
sub
and
fldcw
and
pusha
jbe
adc
aaa
mov
jle
push
pop
and
cli
repnz
mov
imul
clc
fwait
or
sti
sub
dec
lcall
lds
mov
and
inc
test
iret
loop
flds
les
push
int3
dec
or
and
mov
inc
fs
mov
xchg
push
pop
xchg
push
xchg
or
cmp
mov
xchg
pop
and
mov
nop
inc
and
mov
popf
aas
sub
dec
add
xlat
adc
and
xchg
loope
push
and
sub
cltd
cmpsb
sub
ss
or
fdivs
or
and
inc
mov
rorl
movsl
sahf
push
in
loop
push
imul
mov
xchg
xchg
outsb
jns
and
mov
testb
mov
test
adc
mov
sbb
xchg
scas
and
mov
arpl
push
fbld
and
or
dec
or
jecxz
mov
fwait
and
mov
xchg
inc
fsts
cmp
cltd
jmp
sahf
fisubl
sub
mov
and
fs
mov
cld
sub
xchg
and
dec
mov
and
cmp
and
lods
mov
push
ja
add
fwait
add
mov
mov
push
punpckhwd
pop
jo
inc
into
push
xchg
dec
and
jne
shll
mov
scas
push
lds
out
outsb
dec
pop
and
jo
mov
popf
cmpb
cmp
lods
mov
gs
add
cmp
and
or
mov
and
or
icebp
mov
jecxz
sahf
jnp
cmpsb
pop
sti
and
inc
rcr
fisttps
mov
jb
push
sbb
inc
sub
adc
idivb
stos
dec
jne
cs
jle
pop
outsl
adc
lds
mov
iret
and
jge
and
std
filds
cli
dec
xchg
ret
or
in
dec
xor
and
call
mov
mov
xchg
sbb
sbb
dec
dec
push
sub
sub
insb
jl
and
jnp
movsl
cmpsb
inc
out
xor
rcrl
and
mov
mov
xchg
xor
repz
orl
or
out
push
fldcw
arpl
scas
call
dec
add
sti
fiadds
adc
loope
fdiv
sub
outsb
popf
and
dec
and
mov
test
fcompl
jecxz
test
and
mov
xchg
pop
mov
fisubs
imul
aas
lret
mov
xchg
loope
and
enter
inc
push
and
inc
mov
in
mov
arpl
shl
xor
dec
sbb
dec
adc
and
sub
cmp
inc
mov
xor
and
dec
pop
lods
jns
xchg
and
xor
dec
shr
sub
sbb
jge
ja
or
ficomps
pop
mov
add
adc
lods
jae
insb
in
shl
movsl
fsts
and
ffree
dec
and
xchg
iret
cmp
hlt
dec
je
sbb
int3
xchg
dec
adc
out
aad
dec
jno
js
cmp
jb
mov
sub
jg
outsl
mov
or
mov
and
jle
push
xor
cwtl
push
addb
push
repnz
fwait
and
in
out
jne
or
and
sarl
mov
ret
shll
enter
fisubs
popa
sub
and
cmpb
add
mov
into
sarb
mov
clc
hlt
cmp
sti
cmpsl
int3
lods
dec
pop
jmp
lret
pop
mov
mov
or
xchg
dec
notl
inc
mov
lods
cwtl
clc
ret
sahf
and
xlat
mov
mov
adc
and
inc
fcoms
std
pop
rcrb
decb
movsl
mov
fidivl
and
cli
ret
or
pop
fidivrl
xlat
dec
xor
jecxz
movsb
testl
fldcw
lret
jge
mov
push
outsl
int3
dec
ss
stos
and
push
jne
pop
mov
push
xor
je
sub
lret
idivb
and
jge
add
enter
pop
and
mov
adc
insb
mov
ljmp
mov
aad
je
orb
and
repnz
inc
movsb
mov
ljmp
xor
and
adc
add
push
js
push
sarl
loop
lcall
andb
outsl
pop
popa
ja
add
pop
cltd
push
push
jmp
lret
and
mov
jno
mov
and
or
jl
mov
dec
fs
sub
outsb
les
das
inc
sbb
jo
scas
push
stos
ljmp
notl
inc
mov
sub
test
inc
add
popa
mov
sbb
xchg
and
push
jae
and
ror
inc
and
ja
les
xchg
xchg
scas
pop
sub
shrl
shrb
or
les
sbb
or
ret
lcall
mov
cmp
and
mov
stos
cmp
cmp
mov
stos
mull
add
movsl
push
les
or
adc
pop
push
mov
shl
aaa
mov
jmp
std
mov
scas
test
sub
sub
xor
jmp
adc
and
jl
cltd
and
mov
adc
outsl
and
sbbb
sub
pushl
mov
adc
sbbl
push
sbb
mov
das
mov
sbb
mov
or
dec
and
sbb
inc
addr16
popa
in
sbb
add
out
das
je
lds
scas
xchg
popa
dec
andl
les
xchg
prefetch
and
mov
pop
ret
enter
inc
test
cmp
test
dec
ficoms
icebp
mov
je
jae
js
stos
cmc
and
lret
ds
fsubs
push
shrb
addr16
mov
and
test
pop
das
aad
lret
and
es
roll
mov
subl
popa
push
mov
lret
sbb
sbb
out
test
lods
adc
and
mov
adcl
cmp
xchg
inc
cs
adc
arpl
mov
jle
and
xor
xchg
dec
push
and
mov
or
and
in
int
jle
stc
cmpsb
mov
popa
fwait
cmpsb
jae
cwtl
cmp
pop
repnz
xchg
bound
fstl
int3
rcl
pop
and
push
insl
pop
sar
and
sbb
imulb
shlb
test
inc
cmp
cmpl
xchg
in
stos
sbb
mov
jo
add
aad
pop
pop
push
ficoms
movsl
xor
sub
adc
dec
ret
mov
shll
popa
jecxz
pushf
push
das
stos
repz
xchg
clc
and
bound
xchg
jne
jns
mov
and
push
test
mov
mov
lahf
mov
stos
add
testl
jl
stos
cmp
and
push
inc
jae
xor
adc
jp
mov
push
fcompl
mov
outsb
adcb
sbb
pop
out
mov
iret
rol
sub
ljmp
outsl
sub
ror
and
mov
ret
and
xor
imul
mov
xchg
jno
and
mov
test
dec
push
andl
add
and
addr16
mov
ss
outsb
and
cld
add
nop
in
xor
movsb
push
cmp
jl
test
xchg
add
popf
and
fwait
mov
aas
loope
push
dec
sbb
lea
cli
mov
cs
pop
sub
pop
lds
push
xchg
cltd
popa
repnz
pusha
jg
push
add
jge
inc
out
ret
cmp
or
stc
sbb
flds
add
in
cmp
lea
add
pop
sub
sbb
hlt
mov
mov
imul
pop
neg
or
and
dec
aad
add
xorb
and
dec
mov
inc
push
popa
pop
pop
pusha
lods
icebp
sbb
or
sti
push
mov
xchg
push
mov
and
out
mov
push
mov
cli
das
in
inc
mov
xor
and
test
stc
and
and
and
dec
mov
lret
and
daa
mov
xchg
inc
clc
fstpt
cld
and
xchg
jbe
mov
and
fsubrl
jno
sub
loopne
and
adc
xchg
cmp
cmp
imul
fiaddl
pop
inc
aas
cmpsb
push
dec
mov
cmpsl
inc
loop
xchg
xor
imul
mov
cmp
adc
mov
adc
cltd
stc
mov
int3
sbb
push
jne
mov
sbb
gs
mov
xor
jns
imul
inc
mov
adc
and
jne
xor
and
jge
lret
aad
pop
pop
mov
hlt
jp
mov
cmp
test
mov
xchg
loope
xor
lods
add
and
into
les
mov
xor
mov
adc
test
or
and
xor
adcl
mov
sub
popa
jnp
psubsb
pop
lcall
xor
popa
aad
leave
xor
sbb
das
add
dec
fxch
mov
mov
or
popf
push
sbb
mov
inc
arpl
xor
in
cli
sbb
loop
fcoms
mov
mov
xchg
xchg
mov
xchg
pop
inc
popf
ss
and
rclb
add
cmp
dec
jno
mov
andb
push
adc
jmp
xchg
inc
jbe
xchg
bound
push
mov
jo
and
jne
leave
test
gs
mov
in
xchg
xchg
adc
xchg
push
cld
enter
and
adc
ljmp
mov
in
scas
cmp
outsb
loop
push
cmp
pushf
cmp
pop
mov
cld
cmp
pop
jns
and
jne
test
das
fbstp
xor
adc
and
mov
jo
mov
das
ret
pop
fldenv
pop
jp
adc
mov
mov
cmp
mov
adc
push
mov
mov
insl
ss
sbb
xchg
sub
jo
add
pop
in
and
popa
or
cmp
add
inc
jp
push
jmp
and
push
out
sahf
add
movsb
sub
cmp
xor
add
inc
jle
jbe
add
add
fwait
xor
and
andl
push
and
shr
sbb
enter
std
lds
repz
xorl
movsb
mov
inc
out
fidivs
and
dec
xor
stos
sub
test
mov
mov
and
pop
push
dec
mov
and
popf
xor
pop
and
int3
add
icebp
sub
jecxz
fs
mov
lea
and
sbb
fcomi
movsb
shrb
insl
and
dec
loop
adc
popa
jb
cs
jo
jge
int
cmp
and
cmp
pop
in
mov
mov
aas
les
scas
scas
and
sbb
mov
mov
jmp
ja
xchg
xchg
out
sti
sub
and
call
and
add
cmpl
popa
inc
and
shll
push
cltd
push
pop
and
sbbl
sub
jae
aaa
aam
lods
cmpsb
pop
push
and
repnz
cmp
mov
adc
out
aas
mov
filds
mov
push
leave
jp
loopne
lahf
or
test
sbb
std
xlat
popa
ss
fwait
jg
cmp
sub
mov
and
ljmp
movsb
xor
movsb
fwait
sbb
lahf
lds
jb
fstps
add
aaa
push
ss
cmp
push
adc
lcall
mov
scas
dec
sub
ds
dec
xchg
jo
jmp
mov
testl
fwait
and
xchg
dec
and
and
shll
shrl
xchg
or
aam
pushf
and
popf
mov
and
mov
jbe
cmpsl
stos
gs
mov
xchg
sub
xor
jb
adc
xchg
fmuls
scas
sbb
repnz
dec
adc
daa
mov
pop
push
popa
int3
jg
pusha
pop
pop
insl
and
cli
dec
xor
push
xchg
jno
cmp
xchg
jbe
out
stos
jne
insb
js
add
xor
lcall
xchg
andl
and
sahf
mov
sub
and
mov
call
cltd
push
mov
mov
push
repnz
es
mov
imul
pop
jl
mov
setl
out
lcall
loop
dec
jns
and
das
and
dec
das
jne
cmp
pop
adc
inc
iret
and
push
sbbb
jae
and
push
movsl
mulb
sbb
ret
rcrb
jmp
lahf
push
and
mov
hlt
pop
iret
xchg
pop
test
leave
daa
pop
mov
negl
push
dec
stc
jle
dec
pusha
mov
push
mov
and
outsl
mov
lock
mov
punpcklbw
cli
inc
jns
es
cld
test
xchg
adc
and
cmp
in
inc
mov
sub
fnstcw
sbb
sbb
jbe
dec
pop
lods
xlat
cmp
cmp
xor
test
and
add
les
and
push
shll
movsb
jno
cmp
push
or
fldt
and
add
int
dec
stos
subl
xor
inc
cwtl
jne
fldcw
jb
mov
sarb
cmp
sti
je
jge
hlt
inc
and
dec
mov
and
in
cmp
and
orl
loopne
out
mov
out
mov
dec
jns
insb
xchg
sub
add
lret
push
out
leave
and
push
mov
nop
mov
push
gs
and
mov
sbb
jmp
shll
pushf
mov
addb
sbb
mov
mov
fdiv
aam
mov
sti
xor
inc
xlat
les
filds
adcl
sbb
sbb
icebp
dec
int3
pop
lods
sahf
sahf
xchg
and
bound
add
loop
and
mov
sar
fnstsw
mov
jecxz
lcall
jno
sbb
sbb
dec
sub
mov
dec
inc
clc
int3
adc
cltd
sti
pusha
mov
hlt
ss
popf
aam
lods
cmp
pop
scas
xchg
or
jns
jbe
push
loopne
out
pusha
jbe
and
in
push
mov
dec
cmp
cmp
lret
push
xchg
sbb
aas
insb
adc
andl
leave
sbb
bound
jecxz
cltd
xchg
aaa
cmp
add
movsl
add
mov
test
and
cmp
jo
xor
aaa
pusha
lahf
add
out
mov
push
push
dec
and
jno
cwtl
pushf
jbe
push
popa
lods
loopne
xchg
fildl
mov
dec
xlat
out
adc
repz
dec
ret
and
jbe
int3
cmpsb
or
dec
imul
loope
leave
or
and
pop
or
mov
inc
push
mov
and
ret
jge
shll
test
jno
jno
push
mov
cmc
sbb
int
test
das
mov
add
stos
cmp
test
test
jo
mov
and
int3
aaa
fs
ljmp
movsb
stos
xor
scas
and
cld
js
fldenv
xor
rorb
and
mov
cmpsb
repz
popf
or
das
movsb
mov
push
lods
mov
jl
and
and
and
pop
mov
and
xchg
xchg
mov
xchg
ljmp
and
sub
ss
dec
and
rorl
jle
fidivrs
test
mov
jbe
aam
inc
adc
dec
add
pop
push
push
push
popa
int3
jle
mov
outsl
lods
xlat
mov
movsl
stos
add
mov
push
sahf
push
bound
clc
xchg
cmpsb
pop
scas
jns
popa
shl
inc
mov
and
xchg
cmp
push
stos
or
lret
and
addr16
pop
and
adc
mov
pusha
test
movsb
xchg
insb
xchg
sub
iret
xchg
pop
mov
mov
mov
movl
pusha
and
lcall
call
and
jno
fisttpl
or
add
cmp
and
sarb
mov
push
adc
push
sbb
in
data16
stos
add
movsb
and
push
or
jg
ss
xchg
nop
and
pop
fisubl
and
add
and
xchg
fsts
mov
cltd
and
add
scas
stc
pop
xchg
xchg
and
pop
and
push
ja
inc
shlb
sub
pop
xor
push
jg
dec
adc
and
adc
mov
mov
sbb
test
fsubrl
daa
cwtl
stc
push
push
and
or
fists
inc
cmpsl
xor
cmp
clc
popa
dec
into
xchg
loopne
and
mov
loope
ret
mov
xchg
sbb
mov
xor
popf
and
cltd
add
sbb
mov
cmp
cld
int
and
add
mov
ja
pop
cmpsl
call
push
inc
testb
mov
sahf
movsl
jl
mov
dec
inc
mov
mov
rcll
pop
bound
stc
addr16
cmp
popf
repnz
imul
sub
or
fmull
pop
cli
ja
inc
cmpsb
and
mov
cmp
and
jns
pop
daa
out
test
popl
mov
fsubrs
aam
and
cld
dec
leave
lea
or
test
stc
sub
mov
test
loopne
cmp
stos
sub
das
ja
mov
jmp
fwait
xor
mov
es
in
and
mov
cld
out
push
and
add
js
pop
xor
out
cmc
cmpsl
add
push
xor
xlat
pushf
in
pop
jns
mov
call
push
rcll
xor
push
sub
test
das
jo
repz
rorb
jno
out
mov
rolb
push
xchg
mov
sub
lret
cwtl
mov
out
cmpsb
or
xchg
and
dec
pop
add
add
mov
dec
sbb
out
xlat
xor
mov
mov
iret
es
adc
in
mov
cs
imul
mov
sti
and
bound
mov
jmp
add
pusha
jge
test
fadd
push
mov
dec
push
mov
and
mov
sub
popa
add
inc
popl
fists
enter
stos
inc
mov
dec
xor
push
gs
mov
lahf
xchg
jle
mov
pop
sub
push
xchg
and
stos
sbb
adc
sbb
add
cmc
jne
shll
and
out
stc
pop
dec
fnstenv
mov
mov
inc
aam
cs
push
cltd
adc
pop
andl
sbb
cmp
ret
or
lret
enter
movsl
or
lods
and
ja
es
or
cmp
sahf
and
loop
testl
adc
sbb
mov
fstl
outsb
dec
adc
xor
incl
sbb
lret
rclb
movsb
outsb
lea
ficoms
dec
add
adc
mov
sbb
mull
and
cmc
nop
shrb
jns
or
addb
and
movsb
mov
mov
pop
cltd
cmp
js
xchg
lret
aas
xchg
leave
test
and
test
or
stos
pop
or
cmp
in
mov
inc
mov
pop
test
ja
cmpsb
pop
mull
out
das
adc
xor
lods
and
inc
push
jg
pushf
mov
push
test
dec
cltd
and
fs
stos
mov
pop
mov
push
or
xchg
test
lods
stos
and
outsl
es
in
insb
mov
xor
test
or
lea
and
insb
xor
cmp
sbb
mov
pop
pop
push
js
xchg
lods
pop
lret
cmp
or
sbb
xchg
fmuls
out
sar
push
pop
aam
dec
inc
mov
push
nop
and
cmp
sub
dec
ljmp
imul
cli
dec
dec
jg
das
jo
jns
adc
lret
xchg
repnz
in
pop
jmp
push
cmp
push
sub
mov
xchg
mov
push
shrl
fsubl
xor
and
les
adc
icebp
sbb
xchg
mov
iret
int3
scas
or
movsb
mov
mov
or
popf
lods
daa
and
movsb
add
imul
popa
push
jb
movsb
push
iret
mov
mov
addl
lods
dec
lcall
pop
aaa
in
cli
jecxz
gs
sub
lock
enter
and
cmp
andb
jns
xor
enter
cmpsl
lds
add
adc
and
out
outsb
push
and
scas
out
and
aas
std
jns
sub
in
cmp
sbb
push
fwait
xor
push
inc
or
retw
lcall
and
inc
push
xor
add
shlb
fpatan
dec
or
jl
ds
pop
pop
xchg
mov
enter
scas
dec
cltd
jle
sub
xor
mov
push
xor
sub
nop
imul
and
push
std
mov
loope
xchg
mov
mov
mov
push
clc
loope
jle
and
int3
cld
or
and
adc
xlat
ss
sahf
adc
or
insb
push
stos
repz
adc
lock
and
scas
jbe
and
mov
rcll
ficoms
iretw
jnp
stos
push
pusha
cltd
fstpt
jmp
cmc
movsl
das
lret
lock
movsb
adc
loopne
cmpl
xchg
cmc
loopne
adcl
xorl
psrad
imul
ss
jmp
mov
in
and
cmp
jl
int
mov
sbb
jg
and
and
jp
and
lcall
and
sub
xor
lock
xchg
lret
inc
dec
js
cmp
out
mov
add
fisubs
xor
sbb
adc
lret
leave
movsl
and
icebp
lret
in
jno
push
stos
and
ja
inc
push
and
jmp
cltd
and
cwtl
mov
das
movsl
ds
lret
orl
sbb
cmp
mov
je
jge
xchg
mov
push
aam
add
in
and
xor
and
mov
cld
mov
pop
sub
xchg
add
mov
pop
aas
arpl
jno
fidivl
and
jp
das
insl
xchg
xlat
insb
mov
outsl
scas
aas
jge
and
xchg
jmp
xchg
xchg
fbld
xor
lods
jne
jge
pop
shlb
jns
imul
pop
inc
fists
rcrl
mov
sti
popa
or
ljmp
frstor
out
sub
cmp
leave
mov
xor
nop
push
movsl
cmpsl
sbb
cmp
add
stc
dec
jl
inc
and
xorb
and
repz
and
push
bound
cmp
and
sti
xor
cmpsl
insb
sub
jl
nop
out
mov
lahf
and
jp
dec
movsb
lret
mov
mov
js
add
jle
inc
sub
and
andb
icebp
and
jnp
cld
movsl
sub
pop
rcr
popa
popa
pop
leave
add
xchg
sbb
jge
shrl
and
dec
cltd
adcb
pop
and
push
sbb
and
pop
enter
mov
adc
mov
jne
rcll
add
jno
xchg
shll
and
aaa
cltd
mov
push
sbbl
and
outsl
pop
and
movsb
jmp
sub
dec
pushf
or
pop
dec
jmp
jb
test
pop
fdivs
sub
subl
mov
xchg
test
xchg
and
jmp
inc
inc
mov
shll
xor
pop
sti
ljmp
jle
ds
sbb
movsb
pop
dec
jp
xchg
into
and
je
add
mov
cmpsb
mov
dec
hlt
bound
cli
loop
out
mov
xor
dec
aaa
gs
lock
rclb
xchg
shl
out
mov
ds
lock
in
or
cmc
jbe
adc
dec
and
in
xor
and
in
insl
or
mov
andl
xchg
push
fcoml
push
or
push
dec
fildl
or
xor
ds
mov
ss
jns
pushf
out
mov
mov
push
push
imul
mov
movsl
push
sbb
pop
in
mov
and
iret
fmull
frstor
cmp
sub
xchg
bnd
and
cmp
in
mov
popa
xchg
je
in
mov
andl
and
mov
addr16
mov
and
out
popw
popa
movsl
mov
and
inc
sub
pmullw
js
enter
mov
dec
imul
cltd
jp
jecxz
mov
xor
jne
das
xchg
dec
arpl
ja
and
imul
mov
fnstenv
pop
and
mov
aaa
and
add
int3
pushf
xor
test
mov
repz
mov
scas
mov
in
stc
pop
or
sub
pop
sub
xor
dec
mov
addl
add
xchg
test
pop
mov
outsl
stos
jb
mov
dec
xor
dec
xchg
add
xchg
and
in
scas
mov
cwtl
rcrb
mov
mov
mov
ret
bound
push
lea
xchg
shll
and
lock
and
shlb
loop
test
or
nop
int3
push
mov
int3
loope
xor
cwtl
mov
iret
and
cmp
cmp
and
pop
in
inc
test
and
sub
dec
fnstcw
dec
in
lret
pop
xchg
xchg
push
scas
aaa
and
je
add
mov
jmp
and
filds
xchg
mov
mov
cmp
and
and
aas
outsl
and
popa
adc
and
imul
and
mov
jmp
and
push
pop
mov
test
pushf
inc
scas
sti
xchg
out
and
and
jp
xchg
mov
scas
pop
and
add
pop
shl
js
jae
and
push
sahf
pop
push
outsl
inc
inc
xchg
jle
mov
in
jle
faddl
mov
mov
arpl
and
cmp
cmpl
shlb
pop
mov
lahf
push
and
add
xchg
stos
jge
ret
das
jg
add
and
test
out
iret
or
mov
popf
jge
dec
mov
enter
pop
test
pop
lahf
and
mov
sub
dec
ret
js
inc
mov
jb
push
loopne
sub
aas
adc
and
mov
fs
mov
dec
mov
mov
scas
aam
pop
inc
insl
lods
sahf
xchg
faddl
and
ljmp
aad
mov
lret
push
sti
cmp
movsb
add
aam
xor
inc
and
popf
jg
push
fists
pop
ret
hlt
dec
and
adc
push
and
rolb
mov
int3
sbb
add
mov
mov
inc
clc
and
adc
mov
xor
jo
jbe
lods
std
imul
lea
add
shll
shll
pop
dec
and
jge
dec
clc
sti
inc
jo
xor
fwait
mov
popa
add
and
sti
mov
mov
push
mov
popa
and
pop
xchg
and
leave
aad
xchg
dec
mov
mov
popf
rcrl
and
jl
adcb
loopne
mov
pop
inc
out
or
das
sub
inc
pop
xor
jp
push
add
fwait
pop
sub
cmpsl
xchg
jecxz
inc
and
push
ljmp
shlb
mov
nop
dec
test
ss
jns
addr16
jnp
push
inc
movsl
or
jb
and
push
mov
and
out
cmp
adc
xchg
pop
mov
aam
xchg
cwtl
sti
mov
add
and
xchg
dec
and
movsl
mov
cmp
in
jmp
les
imul
add
gs
add
inc
or
lahf
lea
push
ljmp
call
and
and
cwtl
pop
ss
or
sub
jne
sbb
cmp
cmp
and
lcall
jb
les
and
ficoms
cli
inc
xorl
icebp
and
ret
jge
pop
dec
and
gs
sub
mov
jns
add
daa
add
jmp
movsl
cmovno
int
and
and
jnp
shl
add
hlt
fstpl
cmp
jns
sub
mov
movsl
movl
mov
movsb
int3
lods
add
arpl
pop
mov
xchg
dec
mov
dec
lea
call
mov
xor
mov
fsubp
cwtl
int
lods
aam
and
mov
dec
imul
jp
sbb
push
xchg
lret
outsb
scas
pop
jb
and
fldl
and
mov
call
sub
jecxz
stos
xor
fisubl
loope
insl
std
dec
and
imul
fidivrs
aas
daa
stos
adc
and
es
fs
and
sbb
push
in
nop
mov
inc
insb
jne
jge
and
mov
xchg
mov
shrb
stc
mov
and
addr16
pop
and
hlt
lret
mov
pop
pop
and
pushf
ret
loop
pop
movsb
and
out
or
add
and
rolb
cmpsb
cmpsb
xor
test
sbb
cltd
ret
jbe
pop
insl
xor
inc
push
mov
pop
cmpsb
mov
and
add
push
shll
arpl
sbb
xchg
add
and
inc
or
push
mov
sub
xchg
leave
and
and
imul
adc
jno
mov
ss
and
inc
scas
xchg
sbb
dec
enter
mov
ss
inc
nop
out
dec
mov
xchg
das
sti
mulb
stos
imul
mov
mov
jmp
scas
push
sbb
test
and
xor
xor
mov
jno
mov
cli
xor
jno
adc
mov
das
and
add
pop
xlat
mov
push
and
push
sub
jmp
fmulp
mov
mov
test
sbb
fistl
or
fisubl
push
adc
add
scas
test
mov
and
lea
imul
and
xor
test
leave
xor
sbb
xchg
inc
fs
cmp
aam
inc
shrd
cmp
mov
insl
mov
sub
fwait
sbb
arpl
add
jge
out
and
mov
adc
add
add
fs
cld
or
fsubrs
mov
data16
pop
adc
dec
shll
jmp
daa
inc
mov
mov
pop
pop
mov
movsb
xlat
or
xchg
aaa
iret
rcr
mov
mov
orb
pop
iret
stos
and
sub
push
lock
inc
out
aam
leave
or
push
imul
rcl
gs
and
or
rcrb
jecxz
bswap
sbb
mov
icebp
dec
andl
nop
dec
jecxz
cmp
and
sub
add
and
add
mov
cmpsb
add
push
addr16
dec
inc
mov
ljmp
fisttps
loop
mulb
ret
add
or
adc
and
lock
ds
mov
pop
lcall
insb
popf
xchg
and
pop
rcll
lret
sbb
sbb
pop
popf
cli
and
stc
mov
and
mov
lea
mov
ret
call
movsl
dec
cs
jb
cmp
loope
mov
jo
sub
jne
xor
jae
lods
sti
cltd
imul
loope
cmp
and
imul
int3
hlt
pop
and
adc
cwtl
test
sbb
sti
and
mov
sub
dec
mov
cmp
aad
and
inc
xchg
jae
pop
dec
jno
pop
lahf
cltd
sbb
les
aas
cmp
fs
mov
dec
and
push
arpl
mov
into
pusha
lock
lds
test
gs
int
xchg
jmp
xchg
mov
stos
mov
loopne
and
mov
add
fistpl
aam
sub
fwait
jl
cmp
jg
mov
xchg
cmp
mov
push
push
lea
popa
insl
fadd
or
stos
push
lahf
sbb
mov
outsb
inc
inc
and
test
xor
out
sbb
lret
imul
test
jb
mov
cmp
cmp
sbb
mov
andb
outsb
mov
js
or
not
cmpl
push
sub
mov
je
inc
hlt
imul
jl
test
push
fisubl
fildll
push
outsl
cltd
and
mov
cmp
add
es
push
add
mov
push
in
xor
aam
dec
je
test
sub
push
pop
pop
pop
inc
and
lcall
pop
lock
pop
push
push
push
sub
sbb
cmpsb
xchg
cmp
pushf
or
in
xor
pop
adc
cmp
and
testl
dec
sbb
orl
lods
push
push
xor
and
popf
fwait
mov
and
cmp
and
sahf
fcmovbe
sub
ss
fs
jge
xor
fwait
ret
inc
inc
popa
pop
loop
mov
dec
lcall
jp
inc
aas
leave
jns
push
imul
mov
scas
stos
and
fstpl
cmp
mov
aas
dec
mov
jmp
movsl
xor
pop
loope
fdivl
lds
mov
stos
xor
dec
cmp
iret
jb
test
pop
xchg
sbb
and
xorl
and
js
test
outsb
jnp
outsl
cmpsl
jbe
xchg
and
out
pop
jge
dec
fbld
sub
cwtl
and
cmp
dec
aas
mov
testl
movsb
stc
call
andb
cmp
fldl
or
out
mov
into
and
scas
cli
push
xor
and
out
insb
mov
xor
lock
sub
and
jle
pop
and
cmp
xorb
and
enter
mov
imul
jl
out
and
int3
mov
fisubs
and
fldl
lret
cld
and
lds
and
fbld
and
pop
icebp
out
test
test
jne
jle
stos
pop
mov
movsb
mov
insb
jo
lods
push
in
and
push
aad
lods
inc
lods
mov
inc
and
test
iret
aad
daa
test
sti
xchg
sbb
jno
sub
lahf
in
and
pop
mov
add
push
and
lcall
push
and
loopne
sti
outsb
imul
push
push
adc
dec
adc
pop
cltd
sub
and
fndisi(8087
and
outsb
pop
inc
cmp
and
adc
mov
push
out
mov
sub
dec
or
movsb
adc
cmp
mov
imul
sahf
push
lret
cmp
push
add
pop
sbb
cltd
dec
pushf
loope
and
aam
test
cmc
push
cmpsb
pop
jbe
mov
aad
sbb
movsl
fbld
mov
pop
mov
out
xchg
and
jo
pop
jp
add
and
int
filds
out
jo
aaa
pushf
xchg
shll
jp
sbb
and
icebp
sbb
cmp
jns
cmp
and
push
out
out
sbb
mov
test
mov
les
push
pop
inc
mov
xchg
shll
pop
loopne
xchg
and
xor
loop
out
and
insb
push
jae
jnp
mov
mov
popf
loope
aas
mov
xchg
push
repz
and
inc
test
xchg
outsb
mov
jnp
stos
lea
out
rclb
add
mov
aam
pop
dec
pop
jbe
mov
add
repnz
jno
sti
jnp
push
jp
add
mov
pop
movsb
mov
lret
popa
call
test
inc
test
jecxz
sbb
xor
rclb
push
and
popf
and
jl
shlb
jns
fwait
loop
and
test
out
sub
jnp
xchg
and
lret
cmp
mov
jp
ret
and
sub
lcall
popa
pusha
ds
mov
and
jp
fildl
iret
xlat
jnp
je
daa
in
mov
lock
mov
test
xchg
fbld
mov
sub
stos
fsubs
and
push
adc
mov
pop
xchg
or
movsb
adcl
cld
jmp
or
adc
andl
sahf
cli
sub
loope
shll
lds
mov
cmp
fbld
test
imul
bound
cmp
lods
mov
jno
jmp
and
cmp
and
jg
pop
insb
hlt
pop
and
or
mov
sbbb
orb
push
mov
mov
mov
ficomps
scas
or
xchg
mov
jo
sub
jmp
cltd
fs
lock
ja
mov
jle
fldt
sub
cmpl
pusha
pop
stos
adc
mov
sub
push
sbb
jmp
sbb
pop
push
es
xchg
pop
push
xor
out
pop
jb
and
adc
ret
mov
cmp
mov
repz
sub
out
mov
dec
andl
mov
pop
xor
ljmp
inc
ss
jae
jle
sbb
insl
notb
addr16
mov
dec
mov
xchg
sbb
cmc
mov
and
fwait
in
mov
and
xor
ljmp
andl
pop
jae
cld
mov
push
aaa
pop
inc
daa
mov
sub
or
imul
push
fucompp
push
movsl
outsl
xor
int3
xchg
stos
out
das
stc
in
or
lea
es
mov
dec
mov
xchg
push
or
pop
int3
js
cltd
fisubrs
and
sbb
cmp
movsl
xchg
fsubrs
push
int3
pop
cmp
mov
inc
and
rcrb
in
mov
and
lahf
inc
and
stos
xchg
jg
pushf
scas
das
out
cmp
jo
loopne
cmp
adc
push
lea
lcall
fwait
bound
std
mov
stos
cmpsb
mov
or
adc
pusha
movsb
pop
cld
sbb
and
or
and
inc
sub
sub
lcall
sbb
stc
push
hlt
xor
xchg
and
in
lcall
jno
xor
popf
jle
push
int3
fbstp
pushf
or
pushf
iret
sub
jecxz
lds
daa
loopne
fwait
lcall
cld
popa
imul
and
mov
and
mov
dec
xor
ds
mov
fwait
and
movsb
add
jno
fucomi
xor
ret
sbb
jno
loope
movl
jns
pop
and
rorb
jmp
fistpl
mov
push
mov
lret
ret
adcb
and
jge
sub
xor
cmpsl
inc
popa
xor
daa
inc
add
and
popa
stos
or
cli
lcall
inc
insl
dec
and
push
jb
and
xor
ret
add
int
out
mov
sub
xor
and
loope
jecxz
imul
and
mov
sub
loop
dec
leave
push
dec
fmull
test
inc
inc
adc
and
shl
push
aad
add
push
push
pop
aad
pop
mov
and
in
lcall
insl
and
dec
std
aas
scas
push
mov
xor
add
mov
jecxz
mov
lret
test
int
xchg
mov
pop
adc
loop
jae
fcmovnu
inc
dec
scas
xchg
push
scas
xchg
mov
push
cmpsb
faddl
pop
xor
mov
mov
scas
shll
add
sub
push
ret
imul
push
mov
and
sbb
int
dec
loop
or
xchg
jne
aaa
lock
or
jno
ljmp
test
add
out
adc
xor
stos
das
fmull
cltd
push
mov
sbb
sbb
popa
mov
in
push
rol
adc
movsb
dec
inc
test
insb
push
mov
movsb
andl
dec
rolb
cltd
imul
xchg
fists
add
pop
mov
push
xchg
inc
or
mov
ret
fstps
out
adc
rcrb
mov
stos
pop
pop
and
inc
push
icebp
and
leave
test
es
xorl
dec
fdivrs
mov
xchg
daa
xchg
mov
and
inc
and
xor
mov
imul
and
mov
mov
outsb
and
or
out
lret
and
xchg
lock
insb
adc
pop
rclb
jle
in
or
and
ljmp
insb
in
mov
xor
pop
mov
add
loope
inc
sub
sbb
dec
pop
lds
push
movsl
repz
mov
shlb
adc
addr16
and
mov
and
mov
les
dec
out
into
in
and
addr16
mov
pop
dec
pop
dec
xchg
push
and
mov
ret
push
pop
xor
in
js
inc
and
repnz
dec
int
sbb
frstor
sbb
jb
or
push
leave
pusha
and
scas
and
lahf
ljmp
sub
xor
cltd
loope
xor
cltd
fwait
cwtl
xor
adc
mov
adc
jae
in
outsl
add
mov
outsl
push
adc
jns
and
repz
jl
push
imul
in
fs
out
push
jns
push
out
push
mov
movsb
fwait
popa
cmp
lea
xchg
push
ljmp
mov
cli
mov
stos
outsb
out
and
ds
jo
rep
sbb
dec
jb
adc
movsb
pop
pop
adc
je
outsl
fcompl
xchg
out
mov
ret
xchg
hlt
adc
inc
inc
and
mov
aaa
and
adcl
and
lcall
xor
nop
jmp
leave
jno
xchg
mov
push
frstor
add
xor
and
or
jle
mov
mov
setno
lods
jl
push
and
scas
pop
orb
mov
rcpps
mov
test
cmpsl
mov
shlb
nop
sbb
jl
adc
mov
iret
les
lods
aaa
subl
cmpl
popa
inc
out
das
sub
int
and
sar
orl
and
gs
inc
and
aam
ret
popa
xor
push
and
shll
shlb
addr16
and
orl
cmp
jns
popa
loope
lods
fistl
add
hlt
mov
and
lcall
pop
lds
pop
add
or
xor
test
lock
sub
decb
popf
out
and
cmp
lret
rol
inc
fwait
mov
xor
es
and
and
lahf
in
and
stos
inc
adc
mov
and
scas
or
popa
ja
in
jg
test
imul
lods
call
stos
mov
mov
xlat
mov
push
cmp
cmp
fs
sbb
rolb
popf
lock
addr16
sub
and
fnsave
and
push
push
push
jle
nop
fldln2
and
jmp
je
xor
sub
mov
fninit
dec
xchg
mov
xlat
sbb
inc
cmp
jnp
pop
andl
hlt
lods
push
jmp
jmp
and
push
aaa
xchg
inc
xor
dec
repnz
out
aaa
xchg
into
or
std
mov
fstpt
mov
mov
cmp
shlb
jp
xchg
loop
inc
inc
xchg
fildl
sub
pop
adc
mov
dec
sbb
cmp
jbe
xchg
pop
or
mov
adc
divl
into
rclb
mov
cwtl
outsb
in
jo
and
loope
arpl
xor
adc
test
jns
adc
fbld
aad
mov
and
xchg
push
lcall
imul
shrl
sub
in
shlb
loopne
addl
adc
lods
xor
lret
or
mul
movsl
pop
add
and
popa
sub
cmpsb
int
pop
and
nop
enter
sbb
stos
lock
cmpl
fldcw
xlat
sbb
dec
sub
lcall
mov
outsl
jo
roll
lods
cltd
mulb
and
out
dec
and
nop
daa
pop
and
xor
fsubs
in
and
xor
pop
mov
cwtl
xchg
popa
push
pop
sub
xchg
sahf
and
jg
imul
hlt
xchg
and
popa
push
les
mov
xor
enter
popa
movd
mov
and
inc
shll
out
lods
into
fidivs
movsb
imull
dec
mov
fcom
or
pop
mov
ss
popa
mov
iret
shlb
movsb
pop
adc
xchg
pop
icebp
mov
cmp
enter
jecxz
sbb
jle
sbb
mov
mov
xchg
mov
jmp
jmp
inc
popa
mov
xchg
xchg
cmc
and
add
or
pusha
and
sbb
repnz
ficompl
and
loop
pop
push
sahf
mov
jge
popa
push
cmp
les
adc
in
int
out
inc
xor
jo
nop
andb
jmp
pop
subl
stos
dec
mov
insl
jbe
out
and
cmp
lahf
and
jno
pop
jmp
mov
lret
jle
mov
leave
sbb
mov
pusha
sar
push
adc
and
xchg
and
mov
and
outsb
inc
ret
pop
cmp
out
sarl
push
int
and
popa
jb
jge
and
lds
and
scas
push
xor
push
mov
pop
mov
lea
and
lea
add
push
adcb
sti
lret
and
lret
movsb
outsl
test
xorl
pop
or
ret
pushf
mov
jbe
ret
cwtl
sbb
and
jnp
mov
and
inc
sub
xor
inc
pop
sub
shlb
and
add
movsb
jp
adc
insl
orl
and
cmp
cmpsb
repz
xchg
test
sarl
shl
sti
loopne
xchg
nop
mov
and
adc
add
mov
cmc
xor
sahf
aas
mov
jl
dec
lcall
imul
and
mov
sbb
leave
mov
test
sbb
add
fs
sahf
scas
pop
inc
movsb
cmp
cli
test
jle
push
lods
and
add
dec
aaa
xlat
mov
cmp
cmc
mov
nop
adc
adc
mov
mov
sub
and
and
jecxz
ds
jo
cld
inc
leave
adc
or
stos
ljmp
sahf
jbe
lahf
shlb
insb
testb
pop
pop
xchg
and
push
movsb
es
jl
das
add
pop
cmp
xchg
lret
xor
loopne
negb
and
or
scas
xchg
xor
nop
jl
out
inc
filds
pop
and
pop
int3
and
xor
cmp
insl
mov
pop
inc
and
push
cs
lea
jnp
push
mov
sarb
sbb
add
sub
test
mov
mov
jecxz
push
xor
and
rclb
mov
xor
jl
and
or
repnz
popa
jp
pushf
xor
ds
add
mov
cmp
cmpl
daa
mov
add
and
aaa
xchg
and
les
scas
lock
popa
xor
out
inc
pop
fldenv
pop
jle
rcrb
lds
jge
cmp
push
jno
lods
xchg
repz
ret
in
outsb
movsb
stos
adc
push
dec
sub
or
mov
mov
out
subl
leavew
mov
xor
add
cmpl
inc
popa
jne
push
inc
cs
scas
mov
jg
pop
mov
js
push
and
mov
repz
mov
add
sbb
or
idivl
icebp
and
add
lret
push
je
fsubl
mov
cmp
or
rcll
shrb
cld
lahf
test
jge
add
test
or
repz
jle
cmp
sbb
fsts
hlt
adc
movsl
inc
iret
xor
and
push
imul
mov
cmc
pop
xchg
mov
mov
add
movsb
and
test
inc
pop
push
add
mov
push
pop
imul
mov
pop
popa
popa
imulb
push
and
into
cltd
aad
jge
and
xor
movsl
xchg
repnz
mov
jb
aam
add
lahf
jg
and
fistps
add
adc
jbe
and
not
push
and
scas
sbb
daa
cmp
rorb
popa
orb
push
pop
in
sbb
adc
ljmp
dec
add
push
andl
jne
popf
shll
fidivrl
ret
add
popf
and
and
jmp
and
add
mov
mov
mov
jle
addr16
sbb
imul
sti
into
adc
xchg
pop
stc
dec
jnp
jbe
adc
aaa
in
pop
and
fidivs
loope
pop
sti
xor
outsl
cmp
push
or
loop
xor
push
lods
jne
jg
adc
aas
and
add
mov
cmp
rclb
xchg
hlt
mov
icebp
mov
rol
data16
dec
jae
and
dec
fwait
push
push
mov
loopne
cmp
dec
jne
mov
inc
jns
imul
xchg
and
rcll
leave
lods
or
mov
and
jecxz
lret
and
aaa
and
adc
int3
mov
sub
out
mov
aas
dec
add
sub
jmp
iret
sub
or
push
add
add
pop
pushf
sbb
sub
mov
adc
ret
dec
in
inc
and
aam
aaa
fiaddl
xchg
and
jmp
cwtl
jbe
arpl
push
repnz
sarl
mov
or
rclb
shlb
jne
popa
sbb
xor
ljmp
push
mov
pop
and
jbe
jl
mov
shrl
mov
sub
and
adc
mov
mov
or
xor
pop
mov
filds
movsb
add
or
sbb
jmp
jge
and
jmp
jnp
fsubs
clc
push
sbb
and
imul
adc
clc
insb
movsb
sub
test
incb
inc
popf
dec
mov
and
or
sbb
dec
mov
lock
mov
and
in
stos
roll
popf
mov
mov
and
scas
adc
mov
pusha
test
push
out
jno,pn
imul
mov
aas
repz
push
push
sbb
mov
in
xor
idivl
cmp
lcall
xor
sub
and
sbb
shlb
lret
imul
popf
xchg
movsb
jno
cmc
lret
sub
out
xchg
mov
adc
xchg
ret
mov
or
xor
hlt
aad
pop
ds
xor
xor
popa
cmp
lcall
fsubrl
fistpll
cmpsl
push
mov
mov
lds
push
cmp
mov
cld
mov
imul
push
sub
push
jne
lea
test
cmp
dec
and
push
lods
or
loopne
js
into
rcrb
pop
push
pop
mov
pop
mov
and
mov
jnp
in
and
pushf
push
mov
sbb
in
ret
ja
mov
bound
pop
hlt
es
movsb
rcll
push
stos
mov
fldl
sub
mov
mov
and
sbb
push
or
pop
cltd
inc
das
dec
dec
clc
rorb
xchg
xor
lahf
cltd
dec
cmovs
decb
movsb
test
aad
nop
das
mov
inc
popa
fmul
xor
jb
mov
insb
pushf
ds
mov
mov
mov
and
inc
es
xor
fimull
cmp
cwtl
sbb
rol
imul
mov
into
inc
iret
shrb
int
cmp
push
xchg
mov
pusha
mov
out
rcrl
out
shlb
inc
pop
inc
and
out
xchg
jecxz
pop
mov
xchg
push
daa
mov
xor
pop
out
aaa
fwait
mov
in
and
push
ja
and
cld
mov
lahf
inc
push
and
adc
and
test
iret
cmp
lahf
sbb
dec
pop
jl
xor
xor
insl
mov
mov
scas
repz
inc
and
push
pop
lds
mov
decb
and
shll
lea
dec
loop
lds
daa
mov
cltd
xor
repnz
adc
dec
lds
shll
mov
jae
xor
xor
push
daa
movsl
movsb
in
scas
popa
outsl
repz
in
sahf
xor
addl
jbe
sbb
and
dec
push
push
cwtl
jl
lret
sbb
xchg
leave
mov
jg
cs
cmp
and
in
push
test
gs
shlb
dec
testl
sbb
and
testb
int3
mov
jl
jno
aaa
xchg
ja
mov
inc
and
mov
aas
test
repz
sub
mov
mov
jmp
stos
xlat
push
jle
xor
in
inc
add
push
jmp
push
and
sub
sub
and
jae
shll
pop
jns
clc
out
dec
or
mov
inc
imul
sub
inc
push
mov
lods
test
push
lds
mov
cmpl
dec
push
lods
mov
movsl
mov
mov
stos
ss
lock
and
sbb
enter
pop
and
xchg
and
mov
test
sahf
idivb
andl
dec
jno
add
inc
mov
icebp
movsb
xlat
loopne
mov
inc
push
es
sbb
les
sub
ret
lds
and
js
mov
enter
test
mov
jo
sub
lock
movsb
adc
cmp
mov
and
pop
loop
hlt
int
and
mov
mov
shrl
pop
jne
jno
xor
sbb
in
sbb
mov
mov
arpl
pop
sub
cmpsb
scas
dec
mov
sbb
imul
push
in
leave
loop
and
mov
dec
cmp
pop
in
and
sbb
iret
jno
test
loope
into
xor
sub
dec
stos
cs
cld
adc
popa
mov
popa
movsl
insl
jg
cld
or
jns
sub
mov
scas
mov
and
mov
inc
cmpsl
pop
jne
and
inc
call
cltd
pusha
arpl
jmp
sub
mov
gs
fwait
mov
cmpsl
inc
movsl
pop
mov
sub
cmp
sahf
push
and
mov
fs
xor
cwtl
or
and
sub
sarb
and
mov
push
jae
xor
mov
ds
push
push
sbbl
daa
imul
add
mov
pushf
xor
and
cmp
fdiv
movsl
push
js
and
jecxz
enter
and
cli
sbb
cmpsb
mov
or
and
mov
sub
popa
lahf
mov
shll
xchg
insl
andb
add
dec
inc
das
test
call
pop
mov
inc
cmp
sti
or
and
ljmp
sub
in
and
lret
repz
test
hlt
lret
sub
fs
lahf
cmp
mov
and
jle
adc
icebp
and
fisubs
sub
and
and
xor
aas
in
mov
mov
testb
popa
xchg
pop
ss
scas
lea
dec
mov
dec
and
mov
in
popa
sbb
mov
mov
fimuls
cld
pop
cmp
stos
pop
push
jg
sub
popf
call
cmpsb
mov
test
jbe
dec
mov
mov
adc
xchg
lahf
incl
cltd
mov
push
loope
xor
dec
dec
ja
out
pop
pop
xor
loop
cmpsb
mov
es
xchg
pushf
inc
lahf
sahf
cwtl
enter
popf
add
fisttpl
ret
jne
xchg
dec
jmp
push
mov
iret
fidivs
push
cmp
mov
std
in
mov
add
jno
and
cltd
test
insl
inc
xor
dec
pop
lods
jbe
mov
jmp
lods
push
add
jl
fs
and
push
dec
add
mov
test
inc
mov
add
inc
hlt
dec
cmpsl
dec
aad
je
lcall
sub
push
xchg
and
js
pop
lock
mov
stc
adc
scas
stos
popa
pop
inc
jae
cmp
nop
call
lods
aad
out
pop
das
fstpl
add
jo
xor
push
sbb
in
inc
das
inc
enter
test
mov
mov
push
inc
pushf
cmpsb
sbb
int
idivl
out
xchg
and
scas
pop
jle
popa
dec
imul
movsb
leave
add
or
jg
outsl
push
push
cmpsb
jl
push
add
mov
mov
popa
stos
les
stc
xor
enter
mov
outsl
xor
pop
pushf
aaa
push
and
push
cmpsb
loope
jecxz
cmpsl
dec
lods
sub
xor
xchg
xlat
cmp
add
mov
inc
fs
pop
fistpll
inc
and
rorl
and
cmpl
ljmp
das
fs
int3
inc
decb
and
push
jbe
popa
xor
and
xchg
ret
pusha
xor
insl
hlt
in
xchg
xchg
rcrb
pop
mov
dec
movsl
inc
cmp
icebp
add
jo
jecxz
xor
mov
xor
and
inc
and
scas
xchg
fsubl
adc
fninit
stos
and
pop
test
cltd
xchg
cmp
cli
loop
xor
popa
scas
sbb
or
and
sbb
inc
lods
cmpsb
das
loopne
and
js
xor
dec
orl
fisubrl
add
lds
negl
test
outsl
jge
hlt
push
loope
xor
inc
stc
adc
jne
ret
push
loope
mov
pop
mov
and
adc
and
push
cmpsb
push
lds
jb
das
dec
ret
cs
mov
loop
xor
and
in
popa
ja
adc
and
repnz
dec
lcall
sbb
shlb
jno
daa
scas
and
std
xchg
and
jmp
dec
fstl
adcl
out
push
mov
imul
loope
ret
out
fsubrp
mov
xchg
mov
sbbb
into
sub
xor
sbb
test
sbb
mov
cs
cmpsb
shll
fwait
mulb
mov
aam
lods
or
rclb
arpl
imul
mov
xchg
pop
popa
pop
cld
movsl
adcl
push
sub
add
shrd
and
test
test
gs
repz
mov
enter
ljmp
push
fsubl
dec
pusha
lcall
ror
xor
fisubl
sti
push
lahf
xchg
or
flds
push
lds
jno
xor
aad
jae
out
inc
pop
adc
nop
loop
and
jnp
popf
xchg
and
or
das
iret
mov
push
ss
fstps
add
insl
arpl
cmp
adc
insl
push
daa
and
and
pop
clc
sbb
out
jns
cmp
inc
int
mov
into
dec
movsl
mov
and
sbb
adc
and
lahf
mov
and
sub
pop
push
js
sub
lods
push
pop
xor
xor
fsubrs
push
inc
adcb
pop
xor
scas
push
aas
mov
add
push
xor
addb
xor
fwait
mov
cmp
stc
add
xor
or
into
in
outsb
and
rcrl
mov
or
fldl
das
in
insl
addr16
aaa
adc
sbb
in
push
jg
sub
scas
and
sbbl
orb
inc
xchg
push
sub
subl
dec
enter
and
xchg
xchg
scas
sti
test
pusha
ret
inc
aas
push
mov
push
leave
enter
mov
movsl
js
popa
fmul
sub
ds
and
mov
imul
iret
aaa
cmovo
repz
popa
push
lahf
adc
fimuls
das
mov
in
jbe
add
popf
ficomps
and
inc
cmp
pushf
sbb
xor
and
mov
sbb
dec
lea
cmpsb
dec
cmpsl
push
fstpl
les
shl
mov
cwtl
vprotw
mov
leave
ret
lcall
mov
lahf
jae
mov
cmp
test
ss
test
mov
rorb
xor
and
mov
out
hlt
xor
ljmp
mov
lods
insl
ret
mov
jp
mov
and
inc
and
dec
cmp
pop
ljmp
mov
nop
sbb
js
and
ret
xor
je
and
int3
scas
pusha
mov
ret
dec
imul
mov
scas
clc
shrb
std
pop
ja
lcall
nop
jle
in
in
and
sub
lds
lahf
cmpsl
mov
adc
stos
sub
outsl
jno
jnp
jg
sub
into
sbb
cmp
mov
fsubrl
pop
pop
test
movsl
pop
imul
xor
lcall
fsubs
mov
pop
pop
popa
push
das
jl
ds
int3
and
and
and
jmp
mov
cli
cwtl
push
movsb
nop
mov
outsl
addr16
mov
mov
out
scas
arpl
mov
xchg
mov
and
data16
mov
roll
push
xor
xchg
jle
popa
out
sahf
xchg
push
popf
pop
mov
sbb
out
pop
add
mov
bnd
push
mov
enter
pop
jp
xor
push
popa
aas
dec
and
int
test
xor
add
scas
cmp
adc
es
mov
pushf
push
and
ret
cltd
pop
xorl
adc
xchg
mov
sbb
rcrl
inc
fmul
add
jno
inc
mov
enter
xor
lret
and
pop
jmp
and
dec
xor
jl
popl
adc
popa
mov
cmpsl
fstps
push
cltd
jns
mov
xchg
daa
testl
popa
shrb
aas
jge
and
cmpsl
ss
sahf
in
sub
test
aad
mov
or
inc
xrstor
fiaddl
imul
addl
stos
pop
das
mov
and
or
out
sub
mov
push
mov
xchg
cwtl
pop
rorl
sub
repnz
loop
jmp
dec
pop
mov
xlat
mov
movsl
mov
xchg
adc
sbb
pop
mull
das
xor
pop
pop
cmp
movnti
mov
std
arpl
mov
mov
pop
daa
pop
es
pop
jne
scas
popa
jge
rorb
pop
xchg
xor
sti
rcr
add
and
mov
sub
xor
rcll
mov
xchg
test
lcall
aas
xor
andl
idivb
xchg
frstor
pop
cwtl
gs
push
rolb
push
add
out
int3
movsl
mov
popa
fwait
pop
idivb
mov
inc
movsl
ja
mov
addl
and
or
in
inc
or
sysret
adc
mov
mov
add
insb
xor
stos
xor
xor
popa
or
mov
push
mov
fs
insl
add
inc
int3
mov
data16
mov
mov
xor
pop
ficompl
sub
push
test
jecxz
jg
repz
loopne
int
lock
lods
sub
lret
xor
sbb
and
cmpl
and
cmp
cwtl
fldcw
aad
mov
movsl
pop
fsubrs
incl
inc
jb
dec
adc
andl
shll
dec
xchg
movsl
movsb
push
shl
ss
xchg
sbb
andb
stc
int
jbe
subl
xchg
jbe
divps
cltd
sbb
add
pushf
and
inc
nop
adc
add
and
xchg
mov
es
adcl
adc
and
or
cmp
outsl
xchg
in
mov
mov
scas
sbb
dec
movsb
adc
cld
and
mov
lods
sbb
inc
or
and
add
mov
popa
jl
fdivrs
jl
and
push
loope
and
and
cmpsb
iret
cli
loope
push
pop
push
and
sahf
arpl
mov
cmpb
stos
and
and
xchg
repz
stos
sbb
mov
pop
mov
cmpsl
jle
in
dec
push
add
lret
cltd
sub
and
lods
cmp
mov
add
aad
cmp
and
and
inc
iret
popa
shrl
in
shlb
sub
xchg
sub
inc
xchg
cmpb
pop
popa
iret
xlat
adc
pop
sbb
imul
cmc
and
lcall
mov
rorb
mull
dec
push
sahf
ss
daa
add
jp
and
aam
jg
inc
mov
mov
scas
dec
aaa
ljmp
je
mov
fwait
orb
xchg
xor
enter
les
xchg
popf
nop
shll
arpl
inc
pop
out
test
aam
add
sub
gs
jbe
jo
lock
xchg
pushf
movsb
aas
cltd
jnp
cmp
popa
pop
sbb
xchg
mov
and
and
cmp
mov
adc
jae
int3
and
lcall
mov
inc
push
lret
mov
lahf
push
and
les
and
es
and
icebp
fidivl
sbb
or
jbe
lods
das
fnstenv
add
fcomi
and
push
pushf
add
mov
inc
jl
xchg
loopne
and
push
icebp
loope
xchg
mov
dec
mov
ficoml
nop
jns
das
mov
jp
lods
pop
lahf
add
and
paddb
and
stos
pop
sbb
cmpsl
inc
push
xchg
and
sbb
sub
mov
les
pop
sub
movntq
loopne
insb
and
jl
adc
lcall
ja
or
cmp
ljmp
mov
dec
fildll
mov
or
rorl
and
lds
hlt
ds
stos
je
mov
jle
lods
mov
outsb
cmp
cmpb
out
mov
mov
test
and
je
jmp
jne
and
inc
shll
dec
lret
inc
and
adc
int3
not
xchg
inc
repz
pop
out
test
and
sub
jno
cmp
popa
loop
movsb
and
int
cmpsb
mov
mov
sbb
mov
or
into
in
and
popa
push
mov
push
test
orb
hlt
cmc
out
adc
notl
call
sub
jmp
sbb
pop
mov
into
cltd
mov
insb
and
pop
ret
lcall
rcrl
mov
mov
pop
xor
shll
sti
in
mov
xchg
sahf
mov
lods
lods
inc
loope
sub
aas
mov
fisubrs
push
nop
sbb
mov
in
imul
mov
pop
daa
mov
jecxz
sbb
cmp
dec
fsub
push
ljmp
pop
stc
fisubl
leave
test
es
xchg
orl
jl
out
xchg
jle
imul
mull
xor
test
mov
movsb
loop
jns
popa
push
and
fimull
fbld
lods
jb
mov
pop
fldcw
insl
xchg
das
cmpsb
xor
sahf
jp
daa
movb
mov
fists
and
mov
dec
shrl
push
and
sub
and
sub
pop
sub
mov
aad
push
cmc
xchg
add
push
rorl
fs
pop
xor
mov
aaa
push
pop
sub
and
mov
int
repz
mov
loope
xchg
rcrl
popa
sahf
adc
enter
mov
pop
test
and
out
cltd
or
lea
inc
int3
loope
jo
inc
sahf
std
imul
mov
stos
daa
xchg
decb
popa
add
pop
sbb
add
jg
pop
pop
mov
mov
add
push
je
mov
stc
movsl
sub
out
scas
push
sub
fbld
stc
sahf
add
fmuls
inc
arpl
and
cltd
jno
fisubl
xchg
and
imul
and
in
test
mov
fstl
loope
sbb
out
popa
cmp
fmuls
and
sbb
jl
sti
mov
mov
lods
lcall
or
dec
xchg
lcall
or
pop
outsl
cmp
xchg
int3
icebp
mov
mov
aam
pop
aas
lahf
popa
hlt
jne
shrl
and
outsl
test
xchg
decb
dec
ficompl
jg
cli
or
in
enter
stc
jmp
outsb
jecxz
dec
clc
jb
and
int3
in
sub
pushf
xchg
repz
pusha
das
mov
lods
dec
insl
ds
and
push
xor
mov
das
add
and
movsl
lret
mov
jge
push
sub
rcrb
mov
push
out
and
les
jmp
and
fwait
dec
pop
mov
push
clc
and
cli
xorl
and
nop
jne
and
push
out
push
pop
or
out
dec
pop
outsb
lcall
sahf
gs
imul
and
inc
and
xlat
insl
adc
mov
sahf
sarl
adc
adc
into
mov
dec
push
add
mov
lret
and
inc
inc
mov
aad
pop
xchg
inc
and
xchg
dec
jae
dec
sbb
fists
xchg
sub
aas
pop
dec
out
and
or
test
inc
mov
aam
test
sub
data16
jg
adcl
sbb
movsb
mov
cltd
std
or
in
pop
andl
dec
rolb
test
push
push
xor
imul
cs
aaa
dec
and
pop
out
shll
jmp
cmp
sub
push
or
xchg
repz
dec
sub
sub
and
call
push
jnp
sarl
mov
sbb
and
cwtl
mov
test
pop
xor
daa
js
cmp
sahf
fcmovnb
outsl
pop
pop
in
jbe
jecxz
je
pop
pop
mov
jno
test
das
push
aad
push
fisubs
in
cmp
call
cmp
inc
push
cmp
mov
sub
jmp
adcb
popf
add
and
xchg
ds
mov
scas
and
ja
cld
cmp
xchg
shr
xchg
pop
aam
mov
mov
je
and
int3
test
mov
xor
fwait
cltd
push
and
sub
std
and
ret
popf
push
movsl
mov
sub
xor
movsb
xchg
sbb
dec
out
cmpsb
and
dec
movsl
into
sbb
hlt
xchg
pop
mov
insl
pop
pushf
jge
jne
divb
loope
repnz
aas
stos
adc
cmp
mov
loopne
test
and
sbb
loope
and
leave
mov
and
shl
fdivr
filds
and
jmp
and
sub
push
and
icebp
sbbl
fsubr
and
push
shlb
mov
repnz
and
pop
and
lahf
jmp
push
or
inc
mov
push
mov
shl
inc
fiadds
bound
adc
sarb
push
data16
push
mov
mov
xlat
and
and
notl
int
imul
gs
pop
dec
js
and
lods
or
subl
inc
cmp
cmp
movsb
gs
dec
sub
popa
or
fisubl
cld
cltd
into
aas
lods
mov
xchg
xchg
mov
cmp
dec
stc
mov
pusha
stos
sub
insb
shr
mov
mov
in
mov
pop
sbb
sub
adc
imul
mov
push
aaa
and
sbb
ret
or
and
jbe
shlb
add
flds
xchg
push
and
sbb
test
scas
daa
xor
mov
push
jecxz
mov
out
adc
xchg
lods
pop
pop
std
dec
cli
xor
add
cmc
mov
pusha
dec
and
insb
fucomip
cmpsb
cmp
pop
jno
lahf
loopne
adc
in
orl
ret
rcr
jp
cmpsb
mov
and
mov
mov
cmp
mov
sub
inc
das
insl
aaa
nop
mov
push
leave
subb
dec
ljmp
aad
cmpsb
mov
pop
dec
and
mov
addr16
std
inc
into
fidivrl
and
adc
sub
add
mov
jnp
inc
mov
mov
cmp
int3
sbb
add
xorl
and
jl
mov
fisubl
jno
inc
stos
inc
inc
xchg
test
and
jb
mov
jnp
imul
push
and
lock
add
adcl
call
push
and
push
xchg
std
jmp
sbb
fildl
fmulp
inc
shlb
and
mov
frstor
xor
ret
cmc
xchg
and
cmp
pop
jp
outsl
fisubl
repnz
push
daa
lds
inc
stos
add
addl
enter
pop
lcall
and
sub
jp
test
pop
pop
orl
push
or
xchg
mov
xchg
adc
sub
loopne
and
ret
jbe
push
pop
xchg
mov
icebp
sub
stos
push
mov
jo
inc
cmc
imul
in
movsb
inc
xchg
hlt
jmp
xchg
push
aam
movsl
or
pop
adc
jecxz
and
xchg
and
in
xor
pop
inc
fsubs
push
mov
xlat
stos
sbb
jp
and
xchg
test
sarb
repz
lret
testb
dec
adcl
mov
and
repnz
cld
ret
dec
mov
int3
jae
mov
and
pop
pop
push
inc
jg
or
andb
xor
and
xchg
jae
pusha
inc
sbb
or
test
add
aas
and
adc
mov
xor
jbe
fisubrs
add
cmp
sub
lods
loope
and
fs
aam
mov
roll
xchg
test
adc
js
roll
punpcklwd
or
lods
das
or
mov
pop
stc
test
and
imull
mov
jb
outsl
adc
popa
enter
and
xor
and
sub
popa
bound
push
and
mov
into
mov
mov
imul
and
stc
adc
xchg
rcrb
fs
lret
pop
xor
mov
and
and
or
outsl
lret
xorl
add
inc
add
cli
mov
mov
mov
pop
out
frstor
insl
fdivrs
fidivs
mov
pusha
loope
sbbl
mov
sub
pop
nop
push
les
adc
and
fstl
mov
add
fsubl
pop
inc
rorb
inc
jo
iret
or
shlb
sub
jo,pt
and
loopne
mov
movsb
das
gs
xchg
cmp
repz
lret
and
sub
and
and
addl
pop
cwtl
ja
dec
xchg
in
xchg
sub
xchg
xchg
fwait
and
cmp
cmp
xor
cli
mov
xor
and
test
fidivrl
stos
popf
and
xchg
jbe
mov
push
mov
push
lods
and
pop
inc
movb
repz
in
sti
and
lcall
and
dec
and
or
stos
mov
data16
mov
in
and
ja
pop
aas
add
and
jne
das
cld
and
sub
and
imul
loopne
sbb
and
jge
mov
clc
movsl
mov
jns
and
or
pop
out
and
and
data16
in
pop
enter
and
xchg
and
mov
movsb
jbe
or
mov
jnp
ret
aad
xchg
scas
nop
sti
les
pop
mov
adc
mov
jns,pt
and
pop
pop
push
xor
push
ds
lret
xchg
xchg
add
or
add
in
and
push
xor
mov
or
mov
and
nop
and
lds
cmc
pop
scas
mov
mov
mov
jmp
dec
mov
jae
xchg
movsl
popa
test
es
sahf
cmpsb
loope
das
mov
aas
jne
and
jns
push
jl
aam
insb
adc
ja
mov
adc
je
jno
stos
mov
inc
push
out
movsb
mov
scas
cli
xchg
pop
popa
stos
mov
gs
mov
jnp
mov
popa
int
pop
push
sub
add
repz
and
push
fdivrs
hlt
stos
les
inc
pop
push
xor
ficompl
and
sbb
pop
rolb
jle
push
jl
mov
mov
or
cmpl
das
mov
push
scas
insl
mov
and
mov
pop
insl
mov
stos
ror
lods
push
andb
push
adc
cmp
jno
cmp
js
xor
addr16
popa
and
dec
movsl
pop
mov
lock
xchg
lret
jo
jno
pop
jne
jne
sub
and
mov
not
jnp
xchg
and
imul
sti
stc
and
lcall
and
bound
loop
jb
fldl
cmp
xor
fwait
cmp
and
popa
xchg
push
scas
dec
and
orl
and
push
adc
ja
addr16
add
xor
add
mov
mov
mov
rcr
push
and
ss
lcall
shlb
fistpll
inc
int
fistpl
and
sub
mov
and
or
aaa
and
cs
mov
daa
xor
popl
dec
and
insl
xchg
pop
mov
and
out
push
stos
pop
push
mov
mov
dec
test
popf
fbld
sub
mov
xchg
imul
inc
lahf
test
mov
and
dec
stos
pop
rcrl
push
and
mov
inc
out
insb
jns
pusha
cli
fst
and
idivb
xchg
sub
cld
dec
loop
mov
repz
push
xor
ss
or
mov
test
out
push
mov
ljmp
push
lods
movsb
aam
scas
ds
xchg
div
sahf
decw
jae
fistpl
lret
in
fnstsw
imul
pop
cmc
pop
aas
std
dec
and
and
and
jecxz
out
shll
pusha
mov
mov
cs
pop
and
or
and
cmp
adc
inc
sub
dec
fists
fidivl
out
cmp
arpl
xor
stos
mov
mov
inc
inc
pop
and
mov
mov
mov
mov
shlb
popf
and
incb
iret
addr16
mov
pop
xor
fadds
sub
clc
and
rcl
and
repnz
fcmovbe
sti
and
adc
and
ljmp
mov
leave
std
sbb
sti
and
cmp
sbbb
and
pop
arpl
std
xchg
push
int3
xchg
mov
std
js
fucom
and
aaa
mov
stc
jl
jmp
mov
flds
test
xchg
or
addl
add
cmp
ret
cld
add
mov
stos
xchg
dec
fisttps
add
aaa
mov
and
or
mov
fistl
dec
rol
jbe
xchg
and
pushf
cmp
sbb
lods
test
add
cltd
outsb
and
xor
or
pop
leave
adc
dec
and
stos
xor
ds
fcoms
and
rclb
cmp
mov
in
nop
in
jp
dec
and
and
or
test
and
adc
and
les
sub
mov
lret
loopne
lds
adc
inc
insb
and
or
jbe
add
dec
cmp
pop
dec
sub
outsl
test
sub
mov
pop
add
imul
and
jb
or
cmp
ljmp
inc
mov
scas
and
aas
pop
dec
jle
in
sub
aad
test
addr16
mov
or
mov
scas
dec
mov
pop
ss
popa
mov
adc
das
mov
push
inc
cld
pop
or
clc
mov
repz
pop
xchg
mov
inc
cmp
mov
adc
ds
push
push
lahf
push
stos
into
xchg
es
fistpl
jle
xlat
and
jp
ficomps
popa
pop
es
sbb
and
push
movsb
pop
outsl
mov
int3
hlt
sarl
jbe
lret
lcall
mov
adc
dec
add
pop
sar
dec
dec
dec
xor
mov
xchg
aam
les
mov
adc
loope
stos
jge
mov
shll
and
lret
imul
ficomps
pop
mov
leave
lods
mov
dec
outsl
pop
mov
subb
cmp
out
add
and
push
push
imul
ret
ss
fcom
inc
or
and
stc
mov
xchg
ds
and
push
mov
and
pop
js
sub
adc
fstpt
push
xor
xorl
test
ja
repnz
mov
cltd
and
jecxz
inc
clc
addr16
jb
mov
and
filds
out
cmp
ja
push
mov
shrl
mov
sahf
arpl
adcl
stc
out
xor
lods
inc
xchg
or
and
cwtl
js
cmc
cmpsb
and
test
andl
and
push
jo
shrl
sahf
or
cmp
nop
das
and
sub
dec
sub
lds
jp
fisubs
roll
in
adc
add
cmpsl
insl
imul
shl
out
cli
pop
out
cmpsb
jge
sbb
and
pushf
add
and
loop
dec
and
jno
orb
xchg
and
arpl
loopne
popf
add
jno
jno
jp
mov
shll
push
pop
xor
insl
jb
and
and
add
dec
ret
imul
andl
push
adc
nop
movsb
and
push
pushf
stos
leave
add
repz
mov
out
dec
adc
or
ljmp
add
fcoms
movsl
push
out
imul
mov
adc
and
mov
test
int
arpl
or
aas
enter
or
movsb
test
loopne
jo
mov
mov
pop
mov
dec
jae
lahf
jmp
loopne
and
inc
mov
fcmovu
out
mov
ret
cmp
popa
xchg
xchg
and
and
je
sbb
xor
enter
and
add
mov
sub
inc
xchg
jge
and
aad
and
arpl
sub
and
push
popl
and
sahf
insb
push
pop
aas
mov
int3
arpl
es
ficomps
and
add
xor
jno
add
fbstp
dec
stc
and
sbbl
in
add
jge
xchg
out
xchg
sahf
shld
je
int
sbb
mov
inc
out
adc
xchg
repz
xor
dec
xchg
cwtl
and
mov
and
imul
xchg
pop
pop
mov
stc
loopne
mov
sub
adc
lea
push
inc
jo
and
push
sbb
push
test
cltd
pusha
push
xor
movsb
outsb
inc
fisttpl
je
jl
mov
mov
mov
sbbl
lahf
sub
dec
sarl
and
sbb
imull
cltd
jmp
dec
mov
mov
test
mov
and
ds
adc
xor
push
xchg
sbb
and
adc
movsb
xchg
xchg
inc
test
mov
subb
pop
xor
and
cmp
add
mov
in
outsl
scas
mov
inc
clc
loop
sbb
and
xor
call
add
cld
cmp
hlt
cltd
repz
ss
and
lds
fldcw
fidivs
movsl
pusha
cmpsl
sub
mov
mov
into
and
addr16
pop
push
mov
jl
arpl
add
push
jbe
lock
ret
inc
orl
xchg
rorb
and
push
aas
jp
test
push
lcall
dec
pop
ljmp
fs
setp
mov
or
fidivrs
fnstcw
or
clc
and
fsubrp
pop
or
add
pop
and
scas
inc
shrb
lret
idivl
shll
and
ds
push
inc
les
in
rcrb
pop
mov
and
xchg
pushf
jecxz
mov
pop
std
es
leave
repnz
and
push
aam
cmp
push
movsb
xchg
mov
and
mov
or
xchg
sbb
adcl
cmpb
repz
push
xchg
inc
and
sub
jle
shrl
fcoml
test
je
mov
pop
fwait
xor
cmpsb
movsb
mov
mov
push
scas
add
arpl
movsl
add
es
and
adc
push
cmpsl
xor
rcrl
dec
lea
andl
sbb
rcrb
and
sti
in
mov
jnp
ds
xor
and
pop
add
cmc
andl
test
test
and
jmp
pop
xchg
cmp
sbb
sbb
fsubrs
sub
push
daa
jbe
scas
mov
mov
popa
dec
hlt
adc
and
mov
inc
xor
in
xchg
pop
mov
push
cmpl
imul
andl
cmp
push
add
jns
aam
sub
inc
sub
pop
loopne
fsubrs
or
and
cli
xchg
xor
push
and
xchg
xorb
pusha
mov
pop
pop
lret
mov
inc
outsb
sbb
stos
xor
pusha
loopne
push
jmp
mov
and
fs
daa
mov
pop
insb
dec
and
cmp
and
bound
scas
add
push
add
lea
inc
mov
inc
int3
inc
cmpsb
and
test
jbe
cs
popf
add
stos
imul
cmpl
cs
test
jbe
ret
jg
add
and
push
sub
fmuls
sub
xor
les
fimuls
rclb
adc
xor
and
lea
ret
jl
xor
inc
cmpsl
in
movsb
sbb
cmp
jbe
and
jge
sub
jg
jb
and
and
push
test
bnd
and
adc
adc
lock
mov
mov
and
xor
movsb
aas
repnz
pop
add
dec
inc
and
adc
cmpsl
aaa
pop
sub
popa
jmp
aas
imul
loop
push
lahf
mov
jecxz
add
xor
add
or
mov
fwait
push
xchg
add
push
inc
xor
jne
xor
lret
sahf
fcmovne
and
inc
push
jecxz
fwait
add
popf
ds
jecxz
mov
jl
aam
pop
std
inc
and
fbstp
and
mov
test
aas
push
cmp
hlt
int3
mov
or
mov
and
xchg
mov
dec
and
out
jl
or
inc
sub
icebp
cmpb
pushf
dec
es
and
out
cmpsb
sub
push
popa
xchg
into
and
and
lea
shrl
lahf
or
cmp
test
xor
push
in
les
jge
subl
sub
xchg
outsb
ret
pop
dec
movsb
jnp
addr16
inc
cmp
xlat
cwtl
in
inc
and
insb
push
hlt
jge
xchg
and
stc
movsl
rcrl
sbb
cmp
test
jmp
mov
xchg
sub
stos
jns
lret
mov
xor
push
inc
cli
mov
scas
xchg
sub
leave
mov
and
insb
std
aas
fistps
sub
jecxz
cmp
jbe
jns
test
popf
adc
mov
jno
lret
sti
pusha
push
and
out
movsl
orl
sub
test
or
int
mov
mov
mov
and
dec
aaa
xchg
iret
ljmp
and
inc
xchg
cwtl
inc
aaa
push
xchg
scas
mov
jb
pop
inc
and
or
and
xor
jl
and
sbb
sub
pop
pop
and
cs
mov
mov
loope
or
jle
and
leave
mov
stos
sub
aad
xchg
push
mov
adc
adc
mov
adc
es
inc
ret
xor
in
and
jnp
nop
ja
mov
dec
cltd
cltd
and
jle
std
out
pop
sub
into
mov
out
popa
dec
gs
aas
xchg
push
jecxz
pop
popf
inc
jns
in
out
push
fists
and
les
push
mov
cmc
xor
jl
ljmp
aas
pop
cmc
and
out
aaa
push
sbb
mov
and
out
or
mov
movsb
loope
repnz
leave
inc
mov
and
dec
inc
ret
inc
adc
xor
icebp
fcomp
aas
rcll
std
mov
popf
pslld
pop
push
iret
jae
js
inc
cmp
xchg
mov
in
nop
enter
popf
and
jnp
jne
gs
mov
and
jo
mov
lret
cmpb
ret
rcrl
repz
stc
sbb
inc
mov
pop
shlb
clc
sahf
sarb
mov
mov
lahf
les
stos
inc
and
sahf
adc
dec
and
sbb
or
in
rcr
mov
add
jb
and
aaa
lret
fldl
imul
pusha
sub
mov
or
addr16
and
push
stos
jnp
popa
mov
and
add
dec
mov
cmp
in
mov
push
push
stos
test
xor
nop
test
test
xchg
in
and
adc
sub
imul
push
add
sahf
popf
push
and
movsb
imulb
ds
and
pop
int3
sub
and
xchg
stos
ss
inc
cmpsb
mov
sub
rcrl
jecxz
dec
lret
pop
mov
aas
mov
and
aam
adc
rcrl
inc
ret
and
mov
adc
pop
sub
nop
loop
das
shll
movsl
test
cltd
or
xchg
fstp
scas
stos
dec
sbb
into
push
lcall
dec
xor
jecxz
or
and
pop
pop
push
idiv
popf
pop
and
cmc
mov
jle
rorl
add
xchg
in
and
xchg
jns
xor
fisubrs
and
clc
fldl
ds
mov
test
cmp
xchg
pop
sub
push
popa
adc
cmp
ret
xlat
push
xor
fabs
and
and
in
dec
mov
clc
int
out
jne
imul
xchg
cmp
pop
fldt
push
out
setae
outsl
sahf
xchg
je
xchg
xchg
call
inc
pushf
mov
pusha
test
xchg
mov
in
inc
sub
pop
xchg
in
adc
dec
clc
adc
sti
lret
bound
test
popa
cwtl
xchg
add
ljmp
sub
add
roll
jp
fwait
and
std
subb
xchg
sahf
mov
adc
pop
bound
dec
daa
mov
fimuls
jmp
lahf
pop
mov
imul
sbbl
or
jno
jnp
inc
loopne
cmpb
fnstcw
test
mov
xchg
lea
rclb
cmp
icebp
sub
add
dec
lods
inc
pop
mov
int3
sub
xor
fwait
pushf
inc
pop
aas
pop
lcall
je
popf
lea
mov
and
push
call
add
icebp
shrb
in
in
lcall
jecxz
sbb
mov
xchg
das
repnz
loop
pop
adc
arpl
out
les
in
pop
pop
movsl
imul
andb
pop
dec
add
mov
jmp
out
pop
out
add
adc
push
sahf
pushf
es
push
lds
insl
and
out
and
test
cld
aaa
fiaddl
jl
xchg
sbb
and
push
aam
movsb
push
jns
push
dec
push
pop
daa
inc
mov
scas
pop
and
sbb
movsb
sbb
push
push
out
and
lock
push
je
and
gs
cmp
xor
and
shrb
xor
or
push
cmp
fcmove
out
pop
mov
push
in
popa
movsl
mov
adc
popa
cmpsb
lahf
and
sub
int3
mov
sub
nop
and
arpl
lods
call
and
outsb
mov
icebp
fcoms
jns
and
xor
dec
das
jbe
jb
loopne
jo
and
cmp
and
ficompl
addl
shll
add
and
cmpsl
sahf
ror
pop
adc
fwait
ja
mov
cmp
mov
stos
or
pop
jnp
jns
dec
xchg
test
xchg
xchg
jge
push
popa
sub
ljmp
ret
orl
xchg
stos
push
and
in
dec
xorb
and
addr16
aaa
jecxz
or
and
dec
sarl
out
mov
push
xchg
out
into
add
fcmove
popa
xlat
or
arpl
roll
adc
xorl
jmp
jl
cmp
cmc
xchg
push
jb
inc
je
pusha
dec
stos
mov
cwtl
ret
notb
shrl
inc
jg
stc
cltd
imul
sahf
lods
jbe
inc
inc
test
ljmp
mov
jle
sub
mov
fsubr
inc
call
and
clc
and
jecxz
ds
push
repz
cmp
mov
sbb
aas
cmc
repz
pusha
push
shrb
jb
xchg
cwtl
ds
jg
rcl
sti
or
pusha
and
cmpsb
adc
sbb
iret
and
jl
push
lahf
push
stc
push
cmpb
outsl
sub
sbb
out
xchg
jge
aaa
mov
lret
pushf
jmp
adc
movb
pusha
imul
sbb
xor
pmuludq
dec
fldenv
jae
sbb
dec
mov
mov
inc
lret
insl
aas
and
fsubrs
cmpb
or
pop
aas
addr16
outsl
test
pop
scas
dec
inc
mov
xor
push
lahf
jg
mov
fldenv
xchg
ja
sub
fadds
push
int
xchg
mov
mov
jmp
sbb
movsb
push
mov
je
xchg
les
pop
lcall
dec
ds
addl
jl
fwait
add
shrl
clc
mov
cltd
xchg
std
sbb
mov
xchg
inc
sub
and
adc
xchg
std
fstl
inc
xor
mov
out
hlt
mov
ss
andb
repz
cmpsb
adc
fdivl
mov
leave
push
rcrb
xor
pop
jecxz
sub
push
inc
popf
and
int
cmc
xchg
and
jae
mov
sub
pushf
pop
and
mov
pop
add
sbb
mov
mov
mov
sub
loope
and
outsb
xchg
cltd
das
out
leave
and
and
jns
and
inc
xchg
outsl
and
mov
jo
popa
mov
mov
cmp
sub
test
and
mov
xor
lcall
inc
and
and
into
pusha
push
stc
aam
sahf
and
lea
add
es
cwtl
xchg
inc
dec
test
cld
mov
orb
and
dec
xor
and
mov
stos
lock
mov
and
adc
jp,pn
outsb
jmp
pop
jb
xchg
and
das
dec
mov
sub
sahf
xchg
jg
mov
and
fidivrs
sbb
scas
push
lret
sbb
and
jle
or
xchg
ds
jne
mov
jb
and
cltd
pop
ljmp
loop
xchg
jp
mov
lcall
inc
cmp
and
ret
or
pop
imul
push
imul
dec
xor
push
jl
rol
push
pop
imul
sbb
movsb
dec
ret
jb
pop
pop
xchg
shufps
sub
mov
aas
icebp
shlb
sub
dec
mov
pop
cli
jo
outsl
out
push
mov
mov
push
sbbl
cmp
in
pop
aaa
push
in
lods
and
xchg
mov
and
rclb
popa
rclb
mov
imul
jmp
inc
and
xor
xchg
sub
hlt
pop
out
cli
outsb
shlb
dec
and
push
cmpl
and
mov
push
pop
jmp
outsb
or
setge
push
mov
and
mov
out
popa
dec
push
aad
jno
and
movsl
push
jl
es
leave
stc
sbb
in
jg
sti
scas
daa
mov
rclb
test
sbb
or
js
pop
jb
aas
es
adc
fsubr
sub
xor
xchg
and
or
fisubs
aad
cli
mov
mov
xchg
scas
mov
or
sub
ljmp
fsubrl
fldcw
int
icebp
inc
outsb
cmp
xchg
or
stos
mov
cltd
and
popa
fstp
stos
add
xor
loop
mov
leave
icebp
scas
or
enter
in
ret
push
inc
and
jbe
inc
mov
dec
jno
xchg
push
and
and
push
cwtl
push
jecxz
and
int3
addr16
cmp
mov
notb
jo
mov
cli
mov
xor
rolb
adc
bound
mov
roll
mull
stos
sbb
loope
imul
inc
rcll
mov
cmp
cmpsb
mov
xchg
cmp
jne
or
addl
jl
jo
hlt
and
mov
iret
xchg
sub
cmp
cltd
jg
pop
out
movsl
mov
jp
in
lahf
push
jle
sub
mov
jb
andl
push
mov
xchg
ja
xor
addr16
dec
jnp
pop
aas
and
das
or
aad
lods
pop
mov
cltd
mov
iret
xchg
pop
and
mov
inc
mov
loope
jg
lock
scas
add
cwtl
lahf
mov
cld
xor
test
mov
and
xchg
and
movsb
jle
cwtl
or
sub
xchg
and
hlt
test
iret
xchg
ret
and
ret
sbb
insl
in
and
rcll
das
inc
andb
fisubl
shrl
jo
jb
shlb
cwtl
aaa
jbe
adcb
push
sub
repnz
push
ret
and
ljmp
js
pop
push
sbb
cmp
jno
push
mov
mov
pop
aaa
stc
les
jl
mov
loopne,pn
dec
ss
jnp
add
mov
cmpsl
push
or
mov
xchg
and
repnz
shrb
cmp
inc
add
lods
sub
and
sahf
fs
xchg
fwait
and
and
cli
mov
loop
cmp
gs
and
stos
cmpsb
movsl
es
rol
in
add
mov
jp
shrb
jg
adc
das
push
repz
mov
sub
and
inc
mov
or
and
xchg
movsl
or
add
ret
fs
xchg
or
mov
adc
sbb
xchg
andb
ds
push
adc
inc
sbb
std
mov
and
jae
xchg
test
sarl
divb
cltd
jle
movsb
js
and
inc
lcall
sbb
fcmovbe
mov
outsb
mov
fmul
dec
mov
inc
cltd
popa
xorb
arpl
push
mov
sti
and
and
and
sti
or
jno
jns
jnp,pn
in
sub
clc
insl
cmp
add
idivb
push
imul
inc
aas
ljmp
out
pop
inc
and
lock
imul
into
out
jno
and
test
jge
xchg
inc
lods
and
call
loopne
aad
jg
test
push
lcall
and
jno
test
stos
jmp
xlat
jg
pop
scas
dec
out
add
popa
xchg
dec
std
adcb
mov
hlt
and
test
insb
cmp
mov
and
xor
inc
movsl
stc
mov
and
fmuls
jne
es
shll
cmpsl
mov
das
push
ja
mov
xor
xchg
or
and
outsl
xchg
rcrb
xchg
outsb
mov
repnz
mov
popf
push
and
lock
and
xchg
push
sahf
push
jne
out
and
adc
cmp
jmp
lods
dec
mov
and
or
mov
imul
sbb
mov
adc
xchg
into
daa
and
mov
or
lds
and
pop
out
arpl
scas
popa
sub
gs
sbb
xchg
imul
xlat
jle
cmp
jno
in
inc
xor
cwtl
lcall
mov
pusha
sbb
enter
inc
fsubs
inc
mov
fsubl
aaa
test
shll
std
outsl
adc
push
jb
mov
or
mov
xchg
pop
mov
and
stos
outsl
repz
sti
fcoms
insl
ja
mov
and
pop
and
dec
sub
adc
mov
and
inc
add
adc
and
loopne
popf
and
mov
rcll
and
xlat
std
dec
xor
js
lods
cmp
test
mov
push
xchg
pop
xchg
inc
and
mov
mov
std
add
sbb
jbe
lret
mov
mov
sub
push
cwtl
loope
jbe
iret
sub
test
mov
outsb
fdivr
adc
ljmp
and
out
stc
call
mov
and
notl
adc
mov
cmp
ljmp
xchg
and
xchg
inc
ret
add
dec
andb
jnp
cwtl
mov
mov
movsb
and
dec
hlt
ldmxcsr
cld
push
cltd
cmp
push
ja
sahf
sbb
mov
leave
insl
adc
mov
or
jmp
sbb
fisttpll
sbb
pushf
inc
mov
xchg
xor
fistpll
cld
and
je
push
mov
test
sbb
in
push
mov
in
mov
mov
shll
cwtl
das
and
adc
test
loope
adc
movsb
fbld
jns
cli
and
mov
enter
rolb
adc
or
and
inc
insl
push
pop
cmp
aaa
fwait
inc
adc
scas
rcrb
sbb
adcb
loop
mov
lret
movsb
mov
insb
scas
ret
rolb
stos
negb
cltd
sbb
sbb
imul
jmp
scas
and
cmp
pushf
sbbb
or
mov
add
adc
andl
aad
js
dec
mov
mov
lahf
mov
in
jmp
push
nop
mov
push
in
mov
imul
pop
dec
clc
inc
and
xchg
pop
cmp
dec
into
jb
inc
mov
int
mov
and
add
lds
dec
mov
cli
xchg
lods
mov
call
ficoml
jnp
pop
mov
xor
test
inc
sbb
sub
rcll
das
mov
cmpsb
and
pop
xlat
leave
push
imul
add
or
mov
pop
addl
and
sbb
and
cltd
nop
inc
xchg
ret
jno
mov
pop
xchg
xor
adc
es
popf
xchg
mov
mov
sahf
cltd
pop
xchg
mov
into
pushf
add
mov
testb
roll
out
and
pop
push
cmp
mov
popa
mov
mov
and
sbb
sub
addl
inc
repnz
cmp
inc
iret
mov
inc
fidivs
and
and
xor
jle
and
cmp
dec
xor
popa
push
loope
sbb
pop
ljmp
and
pop
and
xor
mov
nop
mov
sub
fbld
dec
adc
mov
and
lret
and
mov
outsl
and
popf
repnz
xchg
int3
xchg
sahf
daa
pop
lahf
ds
popa
mov
and
mov
lret
fldenv
outsb
in
stc
in
adc
hlt
and
arpl
lea
jmp
or
sub
jmp
imul
pop
rolb
cmp
mov
mov
mov
cwtl
push
adc
icebp
push
add
sti
mov
jecxz
rcrl
lea
mov
arpl
jmp
pop
and
loopne
xchg
and
inc
js
das
je
and
or
jle
sub
js
xor
and
ffreep
push
pop
dec
jp
aaa
jbe
lods
lahf
inc
xchg
mov
cmp
pusha
ret
iret
jno
out
js
out
push
sahf
mov
pop
or
mov
mov
jne
popa
and
mov
or
sub
jo
pop
inc
ljmp
sarb
sbb
scas
sub
aaa
lret
mov
and
or
inc
fstpt
movsl
popa
lfs
jno
dec
push
inc
xchg
movsb
test
mov
add
js
clc
add
and
push
lods
adc
aam
cli
call
push
push
jle
push
and
bound
jmp
xchg
push
xor
imul
and
insb
sub
xor
int3
inc
and
cmp
das
adc
and
inc
test
loop
or
push
mov
loope
ljmp
pop
inc
jle
stc
and
sub
add
ret
scas
and
xor
enter
or
out
popa
movsb
mov
pop
mov
inc
inc
dec
andb
sub
mov
repnz
xor
movsl
imul
mov
inc
pop
mov
jge
aam
xchg
sbb
popf
and
pop
cmpl
fcompl
sub
outsl
das
sbb
lods
and
mov
pop
jmp
nop
leave
and
fldenv
rorl
andl
xchg
adc
lods
and
sub
mov
mov
pop
mov
mov
aas
mov
cwtl
stos
or
cmp
xchg
stc
arpl
lahf
cmpsl
fldcw
popa
push
xchg
rclb
jo
add
cwtl
push
inc
push
mov
or
mov
test
mov
and
inc
jg
and
cs
push
pusha
or
dec
mov
and
inc
dec
pushf
mov
mov
inc
fnsave
xchg
pop
orb
mov
push
test
or
lcall
movsb
mov
arpl
jae
xchg
lea
push
jp
inc
sbb
inc
das
rcrb
and
icebp
and
js
push
lods
lret
dec
imul
fwait
mov
dec
movsl
push
stos
and
aaa
addl
stos
test
lret
adc
and
push
adc
xor
pop
add
pop
enter
cmpsb
dec
cltd
mov
add
sbb
and
inc
mov
mov
mov
lods
xor
inc
and
pushf
mov
or
and
shlb
adc
int
imul
mov
orb
jb
inc
sub
jmp
cwtl
mov
push
gs
pop
or
sub
inc
sbb
fisubs
cmpsl
and
jp
scas
std
lds
mov
testb
enter
pop
and
imul
les
add
sub
pop
cmpsl
nop
and
sub
jno
and
pop
dec
mov
add
std
pop
imul
fisubs
mov
xchg
and
dec
pop
fisubs
or
orl
sub
mov
in
scas
aad
and
mov
jmp
and
fmull
bound
sub
lock
in
data16
xchg
xor
fstpl
xchg
movsl
xlat
insl
movsb
and
push
cmp
icebp
ret
xchg
mov
shlb
popa
test
mov
sbb
insb
inc
mov
mov
jne
pop
mov
notl
add
fildl
test
mov
aaa
and
pop
hlt
and
add
rolb
pop
mov
or
loopne
mov
into
inc
mov
aad
and
daa
mov
or
and
outsl
inc
lret
and
sbb
pop
das
and
nop
ss
jns
rclb
adc
sbb
shrb
xchg
and
data16
xchg
mov
ljmp
and
add
imul
mov
hlt
xor
repnz
bound
inc
subb
push
out
jmp
push
mov
or
cmpl
and
loopne
sub
or
jp
mov
and
jnp
mov
pop
iret
and
jmp
andb
jnp
sbb
mov
and
jge
pop
insl
sub
push
rcll
pusha
and
cwtl
push
lret
pop
and
popf
xor
inc
aaa
inc
leave
and
jb
inc
sbbl
jne
fs
clc
mov
fsubl
out
sahf
dec
jbe
and
add
mov
inc
test
popf
pop
and
adc
scas
inc
lods
popw
and
lods
push
fwait
popf
mov
mov
jmp
mov
scas
loope
fisttpll
mov
cltd
int3
cmp
mov
iret
filds
cmp
adc
xchg
insl
cmp
sbb
and
cmp
sub
outsb
scas
aad
xorl
mov
cmp
mov
adc
and
dec
add
loope
lahf
dec
jno
add
ret
xor
out
mov
daa
xchg
fbstp
and
jbe
mov
mov
adc
insb
std
cmpl
xlat
mov
xor
mov
outsl
cs
mov
pusha
lock
sbb
mov
loope
mov
xor
adc
xor
test
aam
xor
or
in
lahf
jae
in
aad
sbb
daa
lds
mov
mov
jno
mov
add
ret
add
lcall
xchg
movsb
and
ljmp
fsubs
gs
mov
inc
insb
xchg
and
ja
cmp
sarl
and
lret
adc
cmp
and
xor
call
and
jl
in
adc
and
daa
ret
mov
nop
sub
inc
and
push
dec
scas
inc
mov
cmpb
scas
pop
push
lods
fildll
dec
fucomp
movsb
and
jbe
sbb
cwtl
or
arpl
sub
outsb
mov
addr16
icebp
gs
mov
imul
pop
movsl
add
jge
add
ljmp
jle
inc
and
pusha
into
jp
pop
fcomps
mov
mov
jbe
cmp
jl
inc
mov
pushf
add
lret
sbb
cs
andb
call
pushf
arpl
sbb
inc
test
xchg
sbb
lret
pop
sub
repz
mov
rcrl
mov
cmp
cmpl
inc
std
loope
jmp
lahf
loop
add
sbb
or
mov
push
fstpl
sub
mov
and
jnp
out
fistpll
popa
pop
pushf
out
sub
mov
jl
or
and
xor
and
add
sbb
dec
pop
jg
adc
loope
mulb
push
rcrl
enter
add
cmp
jae
xor
ret
test
popa
mov
aam
gs
inc
add
add
insl
lock
int3
xorl
movl
pop
push
movsb
jbe
inc
popa
mov
ljmp
mov
sub
sub
stos
mov
pop
nop
ret
fisttpl
xrelease
sbb
arpl
dec
mov
aas
test
subl
cmc
les
or
movsl
and
roll
popa
aas
push
mulb
addr16
xchg
push
sub
jle
outsb
in
cltd
dec
and
xchg
sbb
and
mov
nop
cltd
enter
jl
imul
stos
cmp
mov
cld
movsb
mov
push
movsb
lret
push
push
imul
cmp
dec
jecxz
fsts
test
push
mov
dec
icebp
inc
cmp
pop
fs
mov
leave
data16
and
push
lret
jbe
rorl
ss
and
and
add
pop
imul
ror
push
iret
popf
lock
mov
mull
sbb
pop
push
subl
arpl
pmullw
rclb
fcoml
jns
das
mov
or
mov
and
in
pop
test
mov
clc
popa
jo
dec
inc
and
jns
and
dec
sub
dec
mov
mov
subl
popf
and
repnz
in
and
sub
adc
dec
push
jns
in
es
dec
add
cmpsb
adc
and
lods
leave
sarb
ljmp
test
movsl
fstpt
mov
sarl
mov
pusha
pop
ljmp
lds
and
mov
xlat
fisubrs
js
pop
shll
cli
arpl
out
iret
xchg
sub
adcl
fimull
and
xchg
pop
and
enter
stc
lret
ret
mov
stos
xor
shlb
ficomps
sbb
and
ret
mov
and
dec
and
and
into
sbb
mov
aaa
xor
xchg
ret
add
shrb
lahf
inc
and
pop
jp
cmp
js
cmpsb
adc
add
mov
popa
mov
leave
mov
fsubrl
mov
lock
data16
inc
ds
imul
jne
pop
xlat
and
push
adc
and
out
fstps
sub
push
mov
add
subl
rorb
lock
sub
lods
lcall
sbb
add
das
and
xchg
adc
jge
andl
sub
mov
sbb
or
sbb
insl
out
cmp
dec
sub
iret
and
scas
and
movsb
int
pushf
adc
in
cmp
pop
adc
inc
mov
ja
push
ljmp
mov
stos
sub
and
push
fnstsw
add
jle
loop
push
push
mov
notb
mov
aad
adc
daa
jo
and
in
mov
loope
cmp
test
cmp
out
stos
insl
mov
aam
cli
and
enter
adc
test
cmpsl
test
popa
movsl
aad
fwait
test
repz
jg
mov
dec
inc
sbb
in
xor
fcompl
push
push
mov
mov
push
pushf
lcall
sarl
and
mov
and
xchg
movl
jle
pushf
and
jae
jecxz
sbb
and
cld
mov
in
and
data16
and
cmp
jmp
adc
push
and
push
jae
and
cmp
pop
xchg
rorl
cs
jmp
and
js
std
mov
in
popa
rolb
lods
xor
sete
inc
insb
cs
in
dec
and
mov
pop
in
pop
adc
mov
ds
test
or
outsb
and
insb
fs
movsl
frstor
ret
pop
mov
push
lahf
mov
rcrb
fiaddl
in
and
inc
fs
or
jno
pop
ficoml
mov
int
jns
loop
and
ja
iret
and
push
cmpsb
lds
mov
out
mov
nop
inc
inc
xchg
je
pusha
add
ret
fdivrp
pop
jo
and
adc
les
stos
xor
sbbl
and
fsubs
push
add
sti
pop
stc
mov
push
sub
mov
clc
sarb
mov
xor
push
push
into
cmp
xchg
mov
movsb
add
dec
or
pop
push
daa
and
cmp
push
and
jl
and
lea
jae
pop
mov
in
es
int
and
fs
jbe
adc
and
mov
out
fstpt
into
repz
or
jp
popf
jmp
and
sub
cmp
and
mov
adc
mov
sbb
jmp
in
fcomip
ja
sub
cmp
xchg
mov
cmp
and
xor
sub
test
repz
leave
je
and
and
cli
loopne
fsub
pushf
stos
rolb
jge
jne
mov
or
pop
loope
or
data16
clc
aad
lds
add
sbb
cmp
mov
jno
andb
pop
adc
int
jo
dec
mov
mov
popa
mov
or
pop
xchg
lock
es
arpl
repz
jns
and
leave
movsl
jne
mov
jl
cmp
bound
and
cmc
loop
repz
push
xchg
and
daa
mov
sbb
out
sub
and
mov
pushf
and
loopne
push
aad
pop
or
jne
loop
aam
xor
push
scas
test
pop
shl
scas
test
or
adc
pushf
js
aam
divb
dec
lock
cmp
popl
and
sub
jmp
and
js
jecxz
push
and
cmp
inc
sbb
mov
push
push
or
cmp
xchg
and
mov
jne
jno
sub
mov
negl
popf
pop
sbb
jbe
in
loope
mov
pop
and
push
xor
and
jge
sbb
orl
mov
rcrb
pop
xchg
mov
stos
scas
lcall
sbb
ljmp
mov
les
sbb
mov
fiadds
pop
mov
das
mov
cs
shl
mov
jae
push
cmpb
or
add
leave
and
and
mov
insl
push
xor
dec
shlb
pop
inc
push
mov
adc
pop
pop
push
dec
xchg
addl
dec
cmp
sub
enter
pop
cld
sahf
and
pop
xchg
mov
and
jae
jb
loopne
mov
fildll
imul
cmp
xchg
add
adc
and
loop
iret
cmpsl
rcrl
and
popf
in
testl
test
mov
call
or
cmp
out
mov
and
push
mov
movsb
insl
cmp
jp
push
and
cmp
nop
scas
stc
push
and
pop
mov
inc
aas
mov
xchg
shll
in
das
push
or
iret
push
pop
sbb
push
aad
and
mov
add
test
movsb
push
sbb
sub
mov
push
inc
scas
and
xrelease
rcl
cwtl
gs
ficompl
xor
out
push
mov
std
and
xor
ret
adcb
ret
and
scas
adc
loop
fcoml
aaa
lock
cmp
popf
hlt
and
hlt
jbe
pop
daa
mov
inc
lds
pop
xchg
mov
mov
fsubl
or
cmpsl
sahf
out
and
pop
jg
and
push
cmp
sbb
add
mov
xchg
scas
add
dec
mov
jp
and
out
xchg
mov
push
shrl
jns
mov
hlt
xor
add
xor
jo
and
test
lock
pop
add
data16
and
cwtl
xchg
push
rorb
mov
cld
inc
jne
push
adc
adc
insb
loop
cmpsl
mov
fwait
in
popf
pop
mov
in
mov
mov
xchg
or
and
mov
arpl
xor
mov
xlat
pop
jmp
push
out
sbb
adc
and
lock
and
mov
or
and
xchg
dec
in
fs
std
mov
sub
fwait
nop
xor
pushf
add
ret
test
pop
movsb
dec
mov
popa
in
adc
int3
xor
pop
dec
enter
mov
in
imull
sbb
inc
adc
out
push
movsb
xor
fwait
je
jns
jbe
mov
xchg
push
hlt
push
aad
lock
int
lods
and
fucomip
push
cs
and
imul
into
enter
repz
shll
and
loope
mov
jo
mov
fmul
and
xor
and
or
xchg
pop
rol
push
out
mov
jge
pmulhuw
imull
jns
dec
push
cmpsl
and
loope
and
mov
es
jle
shlb
xchg
test
pop
and
push
or
fwait
jb
repz
mov
fsubs
add
push
mov
les
xchg
mov
jne
enter
stos
addr16
adc
jo
and
incb
dec
mov
inc
sub
and
stos
add
sbb
sbb
jnp
shll
arpl
and
dec
xchg
inc
jg
mov
mov
and
ret
subl
popf
mov
cs
pmaxub
and
add
push
and
rcll
popf
rcrl
mov
pop
lahf
push
mov
faddl
push
in
out
sar
add
add
or
dec
in
dec
xchg
fstps
cli
pushf
repnz
sarl
shl
sbbl
mov
pop
sti
jae
dec
push
mov
lahf
mull
xor
sbb
loopne
pop
popa
add
enter
cmc
and
test
push
xchg
or
and
mov
xor
mov
add
stos
enter
int3
js
lock
sub
mov
xor
and
jnp
outsb
test
push
pop
jl
sbb
dec
sub
pop
or
scas
xor
aas
mov
ja
or
and
imul
and
dec
jle
and
and
outsb
hlt
jne
iret
xor
stos
cmp
sub
lea
mov
add
mov
fmulp
and
push
jnp
ret
adc
lock
jo
ja
jge
push
and
pop
rolb
jae
and
ss
fsubrl
sub
pop
vmread
push
and
into
repnz
dec
out
cmpsl
and
inc
or
in
push
adc
push
test
and
mov
xchg
xor
pop
daa
call
and
mov
jl
xchg
cmp
xchg
cmp
pop
hlt
call
sarl
and
mov
orb
insl
fcoms
xchg
mov
push
mov
xor
sub
pop
mov
and
add
loop
mov
add
pop
sub
or
outsl
outsl
lret
sahf
mov
xchg
dec
std
imul
sar
jmp
nop
popa
lcall
aam
mov
mov
sbb
mov
popa
push
adcl
push
cltd
cmc
in
outsl
dec
xor
push
and
cmp
loope
lods
and
mov
push
mov
popf
icebp
pop
or
fiadds
sbb
jge
ja
and
pushf
aas
int
das
inc
stc
loop
push
fwait
inc
xchg
mov
inc
popa
xchg
cmp
lods
or
js
xor
cs
loop
sbb
aam
test
adc
inc
and
loop
jae
or
lds
mov
jmp
xor
pop
mov
push
mov
cmp
ja
fwait
adc
add
enter
call
mov
sub
xchg
sub
and
iret
and
pop
jl
or
enter
mov
subl
mov
sub
cmp
test
adc
xor
bound
es
call
inc
mov
inc
lods
add
in
scas
inc
jno
mov
aas
mov
and
shlb
mov
xorb
adc
and
es
jg
push
call
aaa
mov
add
mov
inc
outsb
push
and
xor
fisubrs
xlat
push
cltd
and
lea
xchg
and
sbb
add
mov
ljmp
mov
fildl
aam
std
cmp
cld
and
mov
and
adc
inc
cltd
mov
or
xchg
mov
clc
and
mov
cmp
and
mov
dec
sahf
popa
sbb
mov
sub
and
ret
sub
data16
mov
aam
fwait
lcall
sub
and
dec
jmp
jne
mov
pop
lods
lret
sub
icebp
and
lret
lods
test
xchg
pop
and
jp
mov
pop
test
into
int3
xchg
insl
xor
test
sbb
mov
call
mov
test
xchg
mov
mov
orl
leave
mov
pop
fwait
movsb
jle
imul
sub
push
pop
add
in
mov
mov
or
leave
and
xor
notl
mov
pop
outsb
mov
in
and
ljmp
mov
inc
cmc
stc
xchg
jo
movsb
cwtl
dec
or
lcall
and
lahf
test
ret
and
loopew
xlat
push
stc
and
out
into
and
add
or
addr16
data16
and
gs
push
or
pop
and
cld
lret
or
cltd
and
stc
adc
pusha
ret
mov
scas
fcoms
mov
pusha
sub
aaa
lock
adc
movsl
cs
loopne
movsl
test
jle
in
xor
pop
cmp
ret
lea
hlt
int3
and
and
add
psrlw
inc
fidivrl
jecxz
repnz
leave
hlt
adc
testl
stos
enter
and
ficompl
movsb
ja
mov
xchg
sub
psubsb
xor
cmc
popa
xor
lods
pop
pop
cmp
jnp
xchg
push
mov
mov
mov
adc
sahf
stc
xor
mov
test
ljmp
fmulp
pop
shlb
sbb
push
pusha
popa
xchg
in
pop
cmp
pop
cmp
loope
cmp
orl
ja
xor
mov
jmp
mulb
and
movsl
ror
loopne
xor
dec
fwait
test
lock
cmpsl
clc
jp
inc
cld
cltd
enter
dec
or
or
std
mov
jns
inc
mov
jnp
cwtl
or
and
es
and
adc
add
addr16
es
or
ljmp
insb
popf
and
jmp
scas
outsb
push
adc
js
xchg
aaa
scas
and
sub
inc
and
loop
out
sub
mov
imul
mov
sub
xchg
int
mov
and
mov
xorl
jne
repnz
cmp
call
hlt
cmc
mov
pop
and
dec
inc
or
ja
push
jb
test
xor
shll
decb
jne
lret
loopne
add
notl
cmp
fwait
and
and
cwtl
cmp
scas
push
pop
and
adc
mov
and
fmul
je
jae
push
out
popf
fsubl
popf
and
lahf
lahf
dec
and
mov
xchg
test
das
out
mov
imul
imul
fsubrl
xchg
cmp
std
mov
xchg
cmp
inc
loopne
and
pop
aad
dec
cli
and
xchg
outsl
xchg
inc
pop
shl
and
lock
adc
test
movsb
arpl
jnp
xor
mov
outsl
movsb
mov
or
and
jmp
movsb
mov
hlt
iret
push
add
call
pop
push
stos
in
adcl
inc
into
jae
inc
data16
mov
sub
and
rcrl
popf
mov
stos
std
ret
xchg
in
and
dec
pop
mov
jno
xchg
and
mov
fdivr
frstor
adc
int
and
jbe
mov
loope
and
sub
rcll
jg
cmpsb
pop
and
pushf
pop
adc
adc
out
sbb
push
cmp
outsb
and
xor
mov
data16
lahf
int
cmp
pop
and
pop
fisubl
mov
loope
out
mov
outsb
aaa
and
xchg
js
scas
mov
xchg
mov
repz
inc
ja
sub
mov
subl
popf
fwait
imul
in
daa
lds
test
push
mov
pop
test
movsb
out
das
jp
in
jb
jle
add
xor
xchg
sbb
das
mov
pop
sarl
cltd
mov
and
sbb
jmp
test
stc
mov
inc
lock
push
rcll
and
andb
ret
mov
lcall
pop
xlat
add
mov
mov
or
fistpl
out
pop
add
out
dec
pushl
fsubl
loope
sbb
adcw
sub
int3
jmp
cltd
jle
fwait
mov
push
xchg
sub
and
pop
popf
adc
and
and
fists
fcomps
push
pop
inc
and
push
hlt
icebp
subl
and
cmp
cld
call
fdiv
leave
scas
and
xchg
or
mov
push
aad
arpl
mov
cmp
xor
mov
and
mov
add
mov
leave
fistpl
push
movsb
mov
aas
out
inc
mov
sub
and
lahf
fwait
dec
das
sbb
cld
xchg
mov
dec
decl
mov
loopne
sahf
xor
mov
xlat
les
and
fdivrl
aas
and
mov
and
jmp
mov
push
xchg
loope
dec
adc
in
shlb
xor
xchg
dec
jae
adc
hlt
jmp
loopne
fwait
stc
mov
mov
push
jmp
and
out
neg
in
xor
push
sub
or
or
movsl
shll
popa
add
stos
xchg
pusha
ja
fcmovnb
dec
mov
mov
push
cltd
cmp
pop
pop
cmc
jo
in
mov
andl
pop
sbbl
hlt
jle
mov
cmp
test
pop
nop
ss
mov
stos
shlb
mov
inc
push
repz
loope
and
push
xlat
cmp
nop
testl
aas
inc
xchg
out
test
negb
fisubs
jns
push
add
mov
clc
mov
mov
dec
subl
sti
mov
inc
icebp
inc
sub
fdivs
add
and
lods
ss
imul
mov
fiaddl
lcall
mov
notb
orl
jno
mov
inc
jecxz
push
sbb
sahf
and
add
add
insl
jmp
iret
and
icebp
test
ds
jge
jb
mov
inc
mov
push
shll
adc
popa
shrw
add
jb
dec
lret
in
enter
mov
add
cmpsb
out
add
or
imul
rcll
pop
sbb
push
dec
xor
pusha
and
pop
nop
jge
or
les
inc
fisttpll
and
cmp
aam
sub
cmp
shlb
adc
jno
xor
and
mov
and
flds
fbld
shll
mov
sub
cld
and
xor
out
jge
lret
jb
sbb
iret
pusha
cmp
out
sub
and
jecxz
popf
adc
pop
cmp
sahf
test
jns
or
daa
nop
and
xor
add
jle
mov
and
xchg
cmp
add
and
push
xlat
popf
addr16
push
or
xor
int
mov
popa
sbb
lods
daa
das
adc
push
xorl
or
lret
popa
sti
inc
dec
adc
shll
cs
subl
sbb
or
lret
and
sbb
js
xchg
and
addb
and
sbb
addb
movsb
lock
mov
fbstp
inc
pop
jge
sti
fcoml
xchg
aad
loopne
clc
and
mov
jno
pop
mov
xchg
imulb
and
add
adc
clc
xlat
js
and
mov
push
lods
inc
in
inc
aaa
stos
dec
and
xor
out
jb
dec
repnz
inc
in
inc
lods
and
mov
push
pop
inc
push
cmp
cld
cmpsb
xchg
xchg
popa
push
cmp
insb
mov
adc
ss
and
jo
xor
jno
inc
aam
cmc
shlb
push
ss
scas
aas
jg
test
xchg
pop
addl
call
and
hlt
push
in
sahf
outsb
and
jle
lods
push
push
daa
mov
imul
sbb
sbb
or
aam
sahf
popa
loope
add
outsl
cmp
inc
jge
mov
push
sarl
xchg
insb
cmp
mov
cltd
jo
mov
pop
inc
sub
and
clc
mov
and
sub
jecxz
mov
mov
xor
jmp
lret
jp
mov
push
cltd
xchg
mov
and
cs
and
leave
sub
pop
pop
and
enter
cli
jmp
jns
lock
mov
hlt
and
inc
mov
mov
fnsave
popa
sub
or
and
mov
les
aad
and
hlt
fistl
add
rol
popf
lods
and
push
inc
scas
adc
xor
loop
test
js
pop
sarb
rcrl
and
and
pop
cmp
fs
cmpl
and
xlat
imul
xchg
jge
push
and
cmp
push
or
mov
test
mov
mov
clc
les
xor
jge
xchg
jmp
jns
fldenv
pop
add
int3
mov
push
jle
loopne
sub
push
popf
ret
mov
mov
or
xor
les
clc
sub
xchg
mov
rol
insl
adc
int
sub
mov
inc
rcrb
and
test
push
and
enter
or
xchg
divl
adcl
out
jmp
hlt
movsb
jns
and
xchg
nop
inc
cmpsl
jae
mov
scas
mov
or
mov
popf
dec
jo
lea
scas
rclb
adc
mov
xorb
fistpl
outsl
ret
loopew
mov
add
jns
cmp
repnz
mov
and
xor
jge
jg
fsubs
in
inc
ret
pop
adc
push
outsb
je
jnp
and
lahf
adc
cmp
out
call
push
lods
fnsetpm(287
outsb
adc
jns
and
sub
sub
mov
add
hlt
test
xlat
xchg
inc
cmpl
mov
mov
outsl
addr16
dec
sbb
mov
leave
and
sub
adc
cli
inc
mov
mov
and
mov
add
push
jle
jb
xchg
dec
and
push
in
arpl
hlt
fisubl
mov
leave
pop
movsb
mov
scas
movsb
mov
mov
cmc
jns
jg
mov
adc
stos
imul
ror
add
pusha
inc
call
add
xlat
mov
mov
fsubs
test
adc
dec
sbbl
push
dec
xor
sub
popf
xor
rol
fwait
mov
inc
xchg
ds
clc
pop
sbbb
in
xlat
por
mov
pop
xor
jecxz
and
sbb
jmp
ds
movsb
or
outsl
movsl
movsb
inc
push
sub
jns,pt
xchg
mov
ret
pop
xor
stc
sub
js
jle
imul
cmc
sub
divb
cmpsb
call
push
dec
cmp
in
lret
repz
sbb
adc
loope
xchg
sub
pop
and
push
push
leave
mov
int3
arpl
loope
sub
fsubs
push
das
push
xor
notl
inc
xor
jne
xchg
inc
stos
cmc
fwait
add
orb
and
lahf
insl
inc
aaa
mov
and
xor
nop
rol
fyl2xp1
and
xchg
sbb
out
and
jbe,pt
gs
xchg
jne
and
add
fcmovu
mov
cmc
fnstcw
cmp
xor
rolb
fs
mov
push
and
dec
xchg
ss
and
xor
and
jg
mov
imul
or
cld
loope
scas
mov
jl
add
and
jmp
adc
and
imul
pop
jno
lea
sbb
pop
dec
test
in
test
jg
jns
inc
gs
sahf
jecxz
adcl
and
push
in
mov
and
gs
bound
and
add
pop
add
insb
and
jecxz
pop
ret
mov
mov
and
adc
dec
pop
and
xchg
notb
cwtl
inc
cld
sub
lcall
loope
mull
decb
sbb
pop
cmp
shll
ss
stc
xor
loope
je
jmp
cmp
mov
push
xor
daa
and
push
mov
and
stos
fisttps
mov
mov
jecxz
stos
popa
push
je
sbb
fists
fildl
xor
loopne
inc
std
xchg
pop
and
sbb
shll
sahf
sub
lock
mov
cltd
or
push
popa
sbb
xor
lods
xlat
aad
and
iret
jl
in
and
ror
and
push
fisubl
jecxz
add
int
xor
fiadds
nop
push
cmp
xor
mov
and
arpl
mov
mov
les
jbe
ret
pop
test
sub
jne
fstpl
lock
ret
and
push
fildll
notb
or
out
outsb
cwtl
jb
imul
cmp
sub
arpl
xchg
jae
int
loopne
xor
sbb
cmpsb
xchg
es
in
xor
and
orl
add
pop
hlt
in
or
and
or
sbb
cmc
push
dec
dec
data16
and
mov
push
or
push
xchg
in
jle
xchg
sub
loop
and
in
dec
lahf
cmp
imul
mov
xor
loopne
and
movsb
jns
inc
push
mov
mov
in
out
xlat
jg
jno
das
and
insb
mov
and
sbb
and
dec
dec
out
adc
push
cmp
lret
sbb
stc
int3
lods
out
mov
mov
bound
jns
mov
test
inc
jge
and
fisttpl
test
mov
pop
and
movsl
outsl
cwtl
add
pop
mov
pop
jns
sub
push
or
and
xor
jl
out
cmc
inc
enter
xchg
push
jno
cmpsl
xor
lds
stos
or
sbb
mov
out
fwait
addr16
and
cmp
test
push
jae
push
pop
dec
add
jb
sti
test
or
push
cmp
and
inc
or
mov
loopne
and
sahf
popa
lcall
xor
cli
jno
pop
lods
and
cmpsl
push
addr16
or
movsb
jmp
aaa
add
pop
data16
mov
xor
rolb
mov
dec
iret
insl
mov
insl
dec
and
add
sub
or
or
sub
mov
pusha
or
jno
xor
xchg
lods
outsb
add
and
fidivrs
jo
pusha
iret
mov
popa
mov
lcall
cmp
jmp
dec
mov
sub
aam
inc
gs
mov
mov
je
popa
and
push
push
mov
sub
and
sub
xor
pop
cld
and
or
addb
pop
and
imul
and
aam
lahf
aad
test
jmp
or
divb
adc
xchg
add
jg
mov
dec
xchg
xchg
hlt
pop
xor
mov
and
push
popf
or
scas
and
nop
out
pop
cmp
arpl
aas
loope
sub
repz
sub
addl
aaa
sbb
and
mov
mov
divps
xchg
inc
sbb
cwtl
inc
mov
int
cmp
dec
cmpsl
mov
imull
and
and
xchg
gs
adcl
cmp
inc
rcr
pop
loop
fnstsw
xchg
pop
test
inc
in
and
in
sbb
test
mov
xchg
sti
and
pushf
cld
insl
and
mov
push
mov
mov
xchg
movsl
movsl
fstp
mov
push
lods
and
sub
push
mov
andb
cmp
and
clc
mov
cmp
lea
sub
jbe,pn
inc
jle
scas
and
mov
ret
jecxz
std
and
movsl
mov
and
xchg
mov
popa
jl
adc
add
clc
sbb
push
mov
mov
stos
cmp
fldl
lcall
rcrb
das
pop
pusha
mov
xor
ret
das
dec
repnz
cmp
adc
inc
mov
popa
lods
les
add
add
imul
push
mov
xchg
nop
lret
and
push
fwait
jnp
scas
jno
pop
push
and
adc
push
flds
popa
cs
mov
orb
add
leave
jae
aas
add
and
sbb
or
xor
add
test
jns
imul
imul
test
ret
dec
lcall
test
cmp
and
jb
mov
adcb
pop
fadds
sbb
jg
popf
ss
adc
pop
push
ficomps
mov
scas
ret
dec
addl
mov
out
imul
or
and
cld
sub
pop
cmpsl
and
sub
mov
and
test
mov
hlt
loope
adc
shrl
mov
mov
lea
popa
out
daa
cmp
test
sahf
add
pushf
pop
dec
inc
enter
das
dec
ret
out
and
sub
push
dec
movsl
and
and
push
mov
cmc
mov
sbb
sarb
les
mov
repz
dec
push
cs
mov
test
and
outsl
mov
push
inc
enter
leave
cmpsb
adc
jnp
cmpsb
popa
pusha
daa
sbb
adc
pop
and
push
cmpsl
jb
push
aaa
fsubs
lret
imul
into
dec
insb
sti
shll
inc
jg
push
in
aas
xorb
cltd
test
fisubrl
xor
and
xchg
mov
popf
add
int3
cltd
dec
sahf
sti
dec
xchg
or
push
cmpsb
ss
enter
loopne
outsb
in
and
inc
cld
cmpsl
aaa
and
shlb
dec
xchg
int3
popa
xchg
mov
and
push
add
lea
outsl
loop
jns
lods
adc
aam
xor
and
mov
pushf
inc
lcall
xor
sbb
orl
je
test
movsl
call
popa
dec
ja
mov
and
in
push
and
fs
adc
and
aas
pushl
popf
mov
inc
push
cmp
or
call
shrb
jno
mov
aaa
or
adc
icebp
cld
popa
sti
or
mov
inc
hlt
jecxz
jmp
and
sbb
lret
add
cmc
adc
xor
pop
mov
mov
push
lcall
out
sti
and
cmpl
mov
inc
or
repz
cmp
jo
insb
inc
adcb
fwait
bound
xor
rol
loopne
or
mov
pop
rcrb
jno
or
sub
jno
stos
aam
popa
and
leave
inc
add
test
push
fwait
lret
ljmp
xchg
lret
je
jl
aad
cltd
xchg
pop
fstl
mov
mov
stos
outsb
sub
sbb
pushf
inc
gs
cmp
pop
iret
inc
jne
pop
and
xor
mov
adc
push
xchg
lret
push
and
jne
or
jb
pusha
and
and
sub
hlt
andl
pop
adcb
adc
stos
movsl
data16
sub
sbb
inc
sub
xchg
outsb
aaa
pushf
xor
push
frstor
xor
adc
inc
jmp
loopne
and
mov
subl
sub
out
dec
and
and
cmp
jno
cwtl
nop
dec
xor
shlb
pop
add
cmp
xchg
fimull
das
mov
and
and
mov
fcoms
push
enter
test
lfs
sub
insl
pop
cmp
pop
add
stos
xchg
push
cld
orl
mov
push
or
cltd
push
mov
dec
sbb
pop
sbb
pop
movsl
sbbl
add
test
int
push
test
add
out
mov
repz
push
loope
stos
sbb
std
push
and
adc
pushf
test
leave
add
loop
xchg
int3
stc
das
inc
test
add
fwait
movsl
mov
push
add
lea
insl
je
push
subl
and
bound
xchg
jle
jmp
fisubs
pop
cltd
jne
dec
movsl
test
mov
sahf
outsb
inc
fisubs
xor
cmp
mov
das
inc
pop
ret
push
sahf
pop
pop
and
mov
sbb
push
and
xchg
daa
popa
adc
dec
and
icebp
in
in
lods
mov
fildll
hlt
xor
cli
jo
pop
gs
push
ret
cltd
and
mov
adc
and
sbb
daa
cmp
and
and
and
mov
pushf
mov
and
xor
das
repnz
add
push
dec
mov
inc
push
mov
sbb
sahf
cwtl
and
ja
xor
loope
xchg
inc
adcl
adc
push
dec
mov
xchg
test
xor
sbb
push
ljmp
test
sub
sub
gs
cltd
adc
out
leave
outsb
and
mov
scas
and
das
push
xlat
rcrb
adc
lret
ss
test
xchg
mov
add
and
jb
and
fs
and
or
in
loop
and
mov
sbb
mov
testl
mov
jo
dec
jle
and
sahf
push
mov
xor
adc
mov
pop
std
jnp
mov
jmp
inc
and
inc
cltd
push
jb
cwtl
and
fldenv
mov
xor
ret
enter
mov
jmp
and
cmpl
dec
xor
mov
xor
or
sub
mov
daa
call
stos
lds
jno
sub
fsubl
inc
loope
push
and
push
and
mov
xor
pop
incl
jecxz
in
insl
mov
jl
je
lods
and
xchg
and
insl
gs
sub
or
mov
inc
imul
xchg
popl
xchg
and
int3
stos
sub
mov
out
and
and
std
cmc
lods
sahf
jecxz
popf
lds
xlat
pushf
push
mov
and
fs
repnz
cmp
cld
and
xor
adc
xchg
and
in
divb
and
lods
cmp
pop
sub
mov
and
mov
xor
imul
jmp
cmc
fiaddl
pop
xor
sbb
sub
and
pop
popa
or
xchg
and
enter
shll
jae
cmp
mov
and
shl
aaa
cmp
and
mov
and
mov
pop
aas
mov
pop
out
sbb
repz
jmp
fiaddl
pop
xchg
jns
insl
mov
adc
adc
out
push
dec
mov
push
and
scas
add
add
cmp
push
push
push
and
in
movsl
aad
in
sub
cltd
and
jo
push
pop
and
adc
mov
add
jg
sbbb
sti
mov
lds
xor
xor
aad
in
and
imul
or
in
push
movsl
lret
fnsave
or
mov
rorl
cmp
mov
es
xor
cmp
add
mov
mov
popa
cmp
movsb
and
jl
mov
lea
mov
shr
dec
pop
xor
and
int
and
mov
out
subl
or
shl
pop
jae
mov
out
stos
pop
and
ds
movaps
and
pop
xchg
pop
adc
push
add
cmpl
ja
mov
sub
mov
sti
fisubl
sbb
stc
push
xchg
fbld
mov
les
sbb
and
and
dec
cld
mov
dec
loopne
sarl
adc
sub
test
push
repz
jg
and
out
imul
xchg
fbld
mov
add
dec
inc
cmp
and
xchg
push
repz
xchg
xor
fidivl
sbb
enter
mov
mulb
scas
push
leave
popf
outsl
clc
and
int
mov
fisttpll
sti
and
jl
inc
cmp
cli
and
or
and
mov
enter
aaa
loope
inc
popa
insl
dec
push
inc
mov
outsb
and
jge
mov
cmpsb
stc
pushf
or
xchg
add
les
sbb
aas
cmp
cmc
int
repz
adc
mov
jge
and
push
add
out
and
mov
sub
mov
ds
mov
daa
push
jb
outsb
xor
mov
add
aas
loop
ret
mov
testl
addr16
dec
mov
les
sarb
lds
adc
xchg
mov
ds
push
pop
mov
loopne
push
mov
mov
dec
xchg
xor
push
cmp
jno
adc
xchg
mov
jns
and
mov
test
ljmp
hlt
xor
int3
test
add
inc
and
andl
mov
nop
fmull
in
pushf
mulb
pop
xchg
jmp
xchg
popa
aas
out
adc
dec
imul
test
or
imul
and
enter
push
outsl
addb
pop
jbe
dec
es
or
add
pop
lock
das
shll
and
popa
shl
mov
and
cld
mov
icebp
sub
aaa
mov
mov
hlt
push
and
jno
dec
cmp
mov
xchg
push
test
and
mov
rorl
fstl
and
sbb
xchg
and
dec
outsl
jl
and
lock
je
mov
adc
popa
xlat
imul
add
push
xchg
mov
mov
dec
dec
xchg
pop
push
test
leave
dec
pop
xchg
or
push
in
or
jmp
daa
push
pop
adc
add
sub
push
gs
jne
bound
xor
jns
push
pop
mov
cmp
mov
outsb
das
cmp
cmpsb
jo
test
inc
loop
xchg
mov
ds
cmpsl
and
xorb
xor
test
sbbb
int3
and
fs
test
xor
pop
mov
and
cwtl
outsb
mov
mov
push
and
cltd
mov
pusha
cmc
mov
dec
adc
sbb
inc
icebp
aam
dec
mov
and
test
sub
push
aaa
xchg
sbb
sti
test
scas
icebp
pop
pop
cmp
popf
jo
or
push
sbb
std
movsb
loopne
repnz
jno
jnp
mulb
cmp
jge
cld
mov
leave
and
aad
mov
lods
cmp
push
repz
jl,pn
and
pusha
scas
and
lods
cmp
mov
xor
inc
jmp
add
push
sbb
add
dec
test
inc
and
lahf
popa
xchg
cmpb
jecxz
jns
adcl
mov
loope
in
jno
push
mov
add
popa
pushf
add
repnz
jns
add
movsl
push
cli
inc
lcall
movsl
mov
push
jae
jbe
adc
sbb
fstpl
xor
jge
stos
daa
outsl
add
add
mov
cmp
jbe
jno
and
inc
dec
jp
adc
mov
xchg
mov
cltd
xor
popa
and
pop
andl
dec
insb
ret
sub
in
test
inc
fwait
subl
mov
xor
movsl
or
push
ss
jecxz
lock
cli
mov
gs
or
mov
pop
jmp
mov
rorl
std
and
loopne
add
push
xlat
stos
shll
cli
pusha
mov
test
fwait
icebp
inc
sub
popa
mov
test
and
aaa
cmp
lea
lods
adc
cltd
mov
imul
mov
xchg
inc
and
sbb
sub
mulb
sbb
lods
jecxz
dec
mov
lds
jle
mov
cmp
int
mov
inc
insl
dec
stos
andl
pushf
je
xchg
pop
xchg
out
xor
outsl
lahf
jle
mov
popa
sbb
pusha
leave
pop
mov
test
xor
aas
popa
and
or
test
fadd
push
and
incb
jb
arpl
cmp
xchg
mov
sahf
out
aas
jo
sbbl
popf
popa
push
ret
fistpl
sahf
pop
inc
movsb
imul
ljmp
js
jmp
sti
mov
insb
lds
jecxz
aam
mov
pop
push
and
or
jle
adc
je
ret
negl
into
addl
outsb
pop
and
insl
push
addr16
mov
dec
aam
out
xor
lock
xchg
lods
mov
add
mov
imul
jecxz
mov
and
adc
and
xchg
lret
cmp
jns
and
dec
mov
insb
movsb
scas
adc
or
inc
leave
int3
rclb
fdivl
inc
pop
pop
jno
and
and
sub
fsubrs
xchg
mov
imul
and
out
xchg
fwait
xor
xchg
in
and
out
push
jle
jge
ja
cmpl
or
and
aam
dec
and
shll
adc
adc
movsb
lcall
sbb
ss
sti
push
into
int3
jmp
mov
sub
cmc
dec
test
and
test
cmpb
xchg
xchg
sub
push
ljmp
and
daa
sbb
in
or
mov
out
mov
push
mov
and
ret
mov
xchg
jmp
cmc
dec
out
add
sub
inc
jg
and
and
ja
mov
pop
fisttpl
mov
sbb
inc
ja
add
xor
sub
rorb
in
push
jle
les
mov
popa
mov
daa
pusha
mov
inc
or
sbb
cld
inc
enter
lcall
jecxz
data16
push
fpatan
shl
arpl
sbb
sub
mov
mov
outsl
push
inc
int
lea
jns
scas
aas
dec
jbe
xchg
lret
mov
fistl
and
inc
imul
insl
sbb
out
ficoml
aam
mov
pushf
out
mov
notb
lret
pop
mov
pusha
add
in
fbstp
test
inc
sub
and
ja
out
mov
add
xor
outsb
inc
and
shrl
call
push
xchg
iret
repz
pop
mov
dec
and
jne
pop
cmp
inc
addr16
mov
xchg
test
loopne
scas
aaa
call
xorl
popa
and
mov
andb
fwait
mov
and
addr16
movsb
jp
xor
sbb
scas
mov
scas
insb
stos
push
and
movsb
jne
sbb
and
lahf
sub
adc
mov
and
jle
mov
and
jno
mov
mov
mov
adc
inc
add
and
mov
mov
loope
pushf
jp
rclb
jg
xchg
sbb
cmp
pop
sub
insl
and
test
sbb
les
enter
or
sbb
test
mov
cmp
popw
inc
insl
push
outsl
adc
mov
stos
inc
icebp
mov
mov
xchg
xor
mov
in
add
mov
fwait
jecxz
sub
popa
xchg
dec
jns
and
rdmsr
sahf
mov
sbb
mov
and
adc
fisttpll
pop
loopne
xchg
mov
stos
outsl
pop
call
xchg
inc
repz
jns
movsl
pop
xor
inc
mov
cmp
enter
and
imul
dec
mov
pop
sbb
sub
sbb
fwait
in
cmpsl
lock
loopne
and
xor
fdivr
idivb
and
pop
dec
repz
inc
out
sub
movsl
lcall
jae
xor
and
inc
js
mov
popf
or
les
test
mov
xchg
cmp
lret
aas
and
or
sub
inc
push
fbld
in
stos
dec
aaa
xor
or
push
ja
test
sahf
aad
and
push
add
int
enter
sti
insl
popa
cmp
and
jmp
imul
or
push
insb
scas
jo
aam
xchg
repnz
push
dec
cmp
fisubl
or
shlb
sarl
xchg
and
dec
clc
jno
xor
popa
movsb
test
mov
xor
and
mov
inc
push
and
xchg
loopne
xchg
stos
and
ds
lea
aam
out
or
or
jnp
nop
fwait
dec
push
cmpsb
inc
and
notb
inc
or
xchg
push
push
daa
mov
and
call
std
mov
outsb
fcomip
inc
fistpl
dec
sahf
add
inc
mov
dec
loopne
jle
xchg
push
int3
add
das
out
push
and
xor
enter
and
xchg
jge
and
aas
jbe
add
rclb
inc
and
test
loop
jl
lret
mov
popa
or
popf
sub
xchg
popa
dec
adc
lret
cwtl
scas
dec
add
and
gs
stos
fisubs
movsl
sbb
xchg
adc
and
pushf
mov
push
inc
popa
mov
out
sub
push
test
mov
jp
sbb
push
gs
imulb
and
cmp
jbe
mov
inc
push
cmp
lahf
add
xor
or
jo
das
push
popa
addb
sti
xor
xor
lret
cli
fstps
enter
sub
xchg
scas
int
and
jmp
out
inc
les
ljmp
jnp
subl
cltd
xchg
lock
jno
xchg
and
mov
add
adc
repnz
jb
fnstcw
and
mov
fimuls
mov
stc
jl
popa
xor
dec
and
inc
movsl
icebp
lds
rolb
and
dec
sahf
cmp
push
and
mov
push
rcrl
xlat
cmp
or
les
mov
xchg
sub
lcall
cmp
or
and
xlat
sub
fimull
jl
orl
ret
and
roll
and
adc
rorl
fwait
lahf
push
mov
inc
lds
mov
cmp
mov
mov
andl
enter
push
scas
push
cmp
or
aas
inc
xchg
in
mov
push
add
aas
mov
mov
pop
jmp
aad
pusha
sub
and
sbb
aas
cld
mov
repnz
in
xor
sbb
inc
and
xlat
stc
insb
sbb
xchg
popf
and
cld
xor
fisttps
faddl
jmp
addl
fwait
stc
and
sbb
mov
add
lods
mov
shll
sbb
mov
and
hlt
mov
push
add
xchg
js
pusha
xor
jl
mov
dec
and
mov
mov
push
inc
push
test
bnd
pop
lahf
shrl
and
leave
jb
mov
cmp
and
mov
add
pop
jbe
jle
enter
sbb
cmpb
lea
clc
jo
xchg
pop
pop
xor
les
rcl
ret
mov
dec
jecxz
xchg
xchg
and
xchg
push
xor
lds
mov
mov
movsb
test
dec
cmp
sub
mov
pop
xor
int
mov
sbb
inc
les
popa
cwtl
push
cmp
iret
mulb
es
arpl
sbb
push
cmpsl
cmc
cmp
and
add
ret
pop
fisttpl
shrb
leave
adc
sbb
stos
push
add
jmp
dec
cmpsl
in
mov
shlb
mov
lret
mov
mov
push
push
and
and
in
jno
int3
pop
cltd
xor
orb
into
mov
jno
in
xchg
cmc
in
and
xor
fimuls
push
fs
and
cli
gs
and
outsb
push
inc
out
stc
mov
adc
in
shrl
stos
inc
inc
and
popa
cmpb
sahf
aaa
ljmp
pop
and
mov
or
or
xor
sbb
jp
mov
xchg
cmpsb
outsl
push
dec
std
dec
inc
cwtl
sbb
pop
push
and
pushf
add
cmpsb
stos
dec
mov
fistl
push
sub
stc
iret
dec
movq
add
fldcw
push
das
adc
sub
xchg
mov
xchg
push
addl
add
andb
ss
popa
inc
lock
cmp
inc
in
mov
sub
jge
and
mov
jmp
fstps
jbe
out
adc
or
pop
sub
sahf
and
xor
loop
lock
stos
dec
into
jmp
imul
xor
js,pt
xchg
in
aaa
or
pop
add
push
fldl
pop
stos
xor
repnz
cmpsb
and
push
insb
es
je
bound
les
inc
mov
scas
aad
imul
imul
sub
jl
push
push
or
cmp
xchg
or
bound
cmp
negl
and
inc
mov
icebp
rorb
jl
lret
das
sub
repnz
jno
add
and
or
and
pop
leave
jp
xchg
movsb
mov
jnp
in
frstor
and
add
adc
cmp
pop
inc
and
das
dec
mov
ja
pop
mov
pop
and
cwtl
jmp
sbb
sub
insb
and
stos
out
std
pop
pushl
mov
shrl
js
dec
mov
cmc
xchg
das
xchg
jns
inc
cmp
mov
or
sub
fs
pop
lcall
dec
and
xchg
out
nop
hlt
sbb
xor
push
mov
popa
xorl
inc
sub
and
in
dec
fdivrl
and
shrl
mov
pop
xchg
shlb
mov
xor
and
popa
xor
dec
push
or
and
mov
into
mov
xchg
dec
xchg
sbb
fwait
pop
imul
ja
push
loope
adc
jnp
enter
into
dec
xor
or
imul
das
rclb
pop
popa
or
ss
out
add
shrl
cmp
xlat
mov
dec
stos
icebp
lret
xchg
iret
and
shlb
test
push
mov
cltd
and
xchg
xbegin
and
xchg
push
mov
jmp
je
jge
lret
dec
xchg
imul
outsl
scas
add
cmp
ret
or
or
mov
pop
out
insl
call
xchg
out
xor
pop
sub
ss
pop
hlt
sbbl
rol
and
jae
fsubs
cwtl
cmpl
mov
dec
cmp
call
jecxz
xor
and
mov
cmp
cltd
xchg
and
add
sub
mov
loope
shl
ja
pop
cmc
dec
test
push
xor
dec
dec
flds
xor
rol
inc
gs
enter
mov
mov
xor
bound
cmp
lcall
insl
ds
push
ljmp
add
cmp
and
jmp
outsl
and
push
fsubr
ds
and
pop
mov
loope
mul
cs
mov
jo
jns
and
pushf
ljmp
pop
cmp
sub
inc
xchg
mov
pop
fwait
lods
lea
and
cld
mov
loope
sub
push
popa
mov
stos
cmp
adc
popa
and
xchg
into
and
xchg
xlat
jb
cli
mov
mov
cltd
mov
lea
fcmove
sbb
cmc
xlat
bound
loopne
fdivl
xor
mov
mov
loope
mov
fldcw
pop
leave
mov
or
outsl
xchg
das
push
sub
loopne
jg
adc
push
mulb
in
inc
in
dec
inc
rorb
pop
push
movsl
push
adc
dec
sub
mov
out
jnp
loop
and
mov
iret
mov
inc
sub
movsb
and
push
inc
push
cmp
popa
mov
dec
jne
add
inc
lahf
cltd
add
push
hlt
push
and
cmc
push
sarl
ljmp
mov
in
xchg
mov
mov
lahf
lret
add
jo
cwtl
pop
mov
aas
and
popa
ret
mov
insl
test
sub
and
je
jl
push
faddl
stos
mov
xchg
cs
test
mov
rolb
es
or
jo
jge
movsb
clc
mov
in
and
adc
mov
pop
hlt
loope
in
into
sahf
fisubl
int3
lods
push
iret
xchg
shlb
mov
dec
lret
stc
shlb
loopne
or
and
das
insb
adc
popf
or
xchg
loopne
mov
ss
shl
and
and
cmp
pop
add
or
push
or
xchg
inc
lods
fdivs
xchg
data16
sarl
push
popa
mov
pop
mov
ret
lret
loope
dec
or
mov
or
push
ss
cli
inc
and
push
jle
jmp
cltd
cltd
jp
mov
xchg
add
sbb
push
sub
or
andl
loope
mov
and
clc
test
fwait
adc
xchg
sbb
and
mov
jp
sahf
lret
aad
icebp
negl
mov
lret
fnsetpm(287
mov
sarl
mov
pop
rolb
mov
jmp
scas
jne
or
mov
lods
dec
xchg
mov
inc
and
loopne
sbb
xor
in
pop
sbb
out
aaa
jle
call
dec
or
inc
movsl
xor
add
add
and
and
sbb
fisttps
cmp
cmp
lret
sbb
and
popa
mov
aam
sub
into
add
jbe
push
iret
and
dec
or
inc
mov
fsubs
cwtl
xchg
movsl
idivl
test
or
mov
and
or
iret
cld
bound
mov
sahf
add
je
mov
jns
jb
cmpsl
push
insb
pop
sahf
and
enter
cwtl
out
lret
mov
fwait
mov
fiaddl
fbld
inc
insl
jnp
nop
xor
dec
call
mov
outsb
pop
cmpsb
and
xlat
jecxz
icebp
punpcklwd
ficoml
dec
inc
mov
aad
jb
out
iret
and
and
and
cltd
mov
je
adc
fcoms
mov
stos
sarb
and
movsb
lds
or
and
lret
pop
pushf
aas
aas
in
mov
movsl
fwait
mov
repnz
xchg
jb
das
jl
test
movsb
je
and
xorl
scas
shlb
push
jecxz
adc
jno
lcall
xchg
leave
clc
loope
mov
mov
and
imul
fisubrs
and
xor
jne
imul
xor
and
cmc
xchg
rorb
in
in
add
sti
dec
mov
or
fcomps
sub
and
inc
jge
add
loop
dec
lret
jle
and
aam
jecxz
or
mov
or
push
jge,pn
dec
mov
scas
fsubs
cmc
mov
jle
cs
and
sbb
movsb
jbe
sub
dec
inc
dec
xchg
hlt
cmpsl
and
or
push
mov
cmp
inc
dec
mov
out
sbb
test
fstl
in
xor
hlt
std
mov
outsb
out
cltd
jecxz
dec
test
jle
fsubs
pop
xlat
mov
lock
ds
subb
popf
push
dec
mov
ss
faddl
cmp
mov
sbb
and
xor
add
out
mov
or
mov
mov
popa
fdiv
inc
push
fbstp
test
imul
cmp
adc
jge
adc
mov
and
adc
pop
jl
cltd
cmp
and
out
dec
fsubs
fists
sub
adc
out
cmp
push
cmp
and
aaa
mulb
mov
mov
cmp
xor
jge
mov
jns
jns
pop
and
shll
push
ja
cmpsb
enter
or
pop
push
fwait
push
loopne
scas
mov
xchg
push
cs
adc
mov
pop
je
test
daa
aaa
xchg
adc
dec
fildll
jge
xchg
jge
and
mov
movsb
adc
popa
cltd
pop
adc
xchg
mov
push
or
jnp
cmp
push
adc
arpl
cmp
and
int
cs
lea
push
mov
and
push
mov
mov
mov
cltd
lcall
xor
sahf
and
ss
or
dec
push
mov
cltd
jmp
enter
stos
and
icebp
out
or
hlt
xor
and
mov
jecxz
inc
and
mov
or
imul
in
fwait
lret
aaa
int
ret
or
xchg
or
incl
rcll
and
adc
jae
mov
mov
jne
pusha
xchg
lret
repnz
mov
add
adc
fisubs
rolb
and
in
xor
push
and
cmp
mov
cld
dec
ret
and
icebp
sbb
pop
insl
stc
fldenv
cmpsl
xchg
out
sub
inc
sti
and
rorl
pop
pop
push
movsb
cmpl
and
jae
fdivp
shlb
add
jno
dec
mov
and
fisubl
in
jl
and
es
cs
das
fs
aam
jmp
pop
repnz
outsb
and
jb
test
test
jp
arpl
pop
insb
mov
out
pop
xchg
into
mov
sbb
test
repz
imul
lret
xchg
ds
jmp
dec
sbb
aaa
and
mov
mov
push
call
adc
and
fistps
mov
inc
sub
pop
pusha
aaa
and
sbb
xor
in
xchg
mov
mov
std
cmpsb
push
cli
add
and
inc
xor
pop
add
dec
jle
and
mov
notl
mov
add
xchg
mov
mov
and
push
add
jp
aaa
mov
mov
and
fldl
sbb
pop
mov
xor
and
dec
xor
insb
popa
and
add
jbe
lret
into
mov
mov
movsb
adc
push
cltd
into
pop
ficompl
xchg
dec
int3
add
outsb
popf
mov
push
test
in
testb
scas
pop
mov
shll
repz
pop
in
or
leave
loope
ds
popa
jle
and
add
and
cmc
enter
xor
mov
imul
arpl
data16
and
jbe
bound
xchg
dec
and
adc
push
pop
cmpsl
mov
mov
iret
lea
xor
imul
imul
push
inc
imul
adcl
mov
and
xchg
push
pushf
push
mov
outsl
pop
or
cmp
dec
repz
sbb
pop
mov
loope
out
and
popl
sub
in
and
jge
jecxz
mov
fwait
ret
mov
cltd
subb
mov
in
std
dec
out
lea
sti
mov
lods
pop
jo
inc
stc
pusha
sbbl
and
sbbl
in
push
ficoml
movsb
xchg
lret
inc
out
inc
cmp
testl
pusha
mov
inc
xor
dec
adc
fists
lret
roll
test
scas
push
mov
push
in
stos
out
movl
fsubrs
bound
or
xrelease
popa
mov
lahf
dec
and
repnz
cld
xor
fstpt
mov
rorb
mov
inc
nop
and
jae
icebp
rcrb
stos
pop
xor
in
sbb
lret
daa
push
push
out
mov
push
insl
jb
add
lret
jns
mov
jecxz
in
leave
xchg
addr16
aas
scas
es
jge
test
sbb
xlat
dec
cmpsb
jecxz
add
popa
or
cltd
cmp
popf
sahf
jno
sarb
adc
stc
add
pop
inc
mov
sbb
dec
mov
popf
and
insb
hlt
inc
or
fwait
and
add
and
xor
cmpb
out
push
ficompl
fwait
add
sbb
xchg
mov
inc
das
cmp
ljmp
aam
pop
mov
xor
cmc
and
inc
pop
add
out
xchg
mov
add
push
ljmp
xchg
lods
push
ljmp
out
mov
movsl
ss
mov
pushf
xchg
cld
cwtl
xchg
jbe
mov
mov
icebp
xor
movsl
pusha
sub
loopne
scas
xor
in
and
movsb
sbb
jle
xchg
sbb
sub
jns
jmp
hlt
and
cld
sbb
lea
stos
dec
inc
cmp
scas
dec
lods
pusha
and
sbb
xchg
enter
cltd
adc
xchg
xchg
and
into
cmp
fldcw
loopne
je
mov
mov
stos
cmpsb
inc
add
inc
aad
jnp
daa
or
xor
sahf
add
jp
das
jns
or
and
mov
push
popf
and
mov
sub
out
movsb
sbb
xor
stos
and
jmp
mov
lahf
in
pushf
fidivl
pop
pusha
insl
dec
sti
pop
cmp
popa
insl
pop
xchg
push
fadd
and
iret
jne
bts
stc
mov
fwait
sub
popa
icebp
cmpsl
xchg
ret
xor
pop
cltd
inc
xor
xchg
scas
es
leave
lret
cld
lcall
scas
mov
or
scas
inc
ficoms
popa
sbb
aas
and
sub
insb
or
pusha
xchg
and
mov
sbb
dec
rcll
push
sub
pop
mov
fidivs
inc
into
and
test
and
ret
sub
sbb
stos
mov
adc
inc
int3
cmp
sbb
cwtl
int3
ret
arpl
ret
dec
push
jg
inc
and
or
stos
nop
sbb
repz
add
fmull
and
lret
mov
mov
mov
mov
adc
rcrl
and
xchg
mov
and
nop
cmc
mov
mov
cld
sub
mov
add
popa
cmp
jl
and
in
mov
sbb
std
test
aad
and
dec
add
push
jl
movsb
sbb
scas
pop
lret
out
mov
outsl
fadds
mov
and
push
scas
dec
adc
add
adc
mov
add
cwtl
loop
dec
and
pop
in
xchg
xchg
xorb
sbb
push
and
inc
lcall
in
jle
inc
xor
and
lea
jae
sub
sub
push
rclb
outsl
jo
xchg
in
mov
cmc
pop
and
ret
dec
mov
aam
arpl
jb
jbe
pushl
pop
jo
mov
inc
or
repz
insb
push
lods
movsb
out
cwtl
sbbb
push
xchg
jns
mov
jg
icebp
ret
rclb
sbb
xor
into
fwait
mov
call
lcall
fwait
in
out
scas
stos
cmpsl
lds
or
and
fstpl
loopne
out
push
and
add
into
mull
out
mov
cmp
lock
sbb
js
lcall
les
mov
shl
clc
and
pop
push
lahf
andb
cmp
andb
mov
mov
out
sahf
loopne
adc
aaa
xor
inc
push
dec
and
mulb
mov
and
aam
sbb
push
pop
adc
sub
mov
push
mov
and
xorl
inc
xchg
imul
jge
cmp
or
mov
pop
inc
inc
stc
das
cmc
pop
and
repz
insl
mov
adc
popf
jnp
mov
pop
mov
jbe
inc
fwait
loope
and
movsb
sbb
adc
and
pop
test
movsb
ljmp
add
into
jle
add
lods
clc
fs
and
cmp
ret
shl
dec
and
cwtl
mov
pop
mov
mov
or
push
dec
ret
or
shlb
in
aaa
mov
and
xchg
popa
gs
adc
mov
push
lahf
jb
aas
cmp
xchg
ja
jne
jge
and
scas
cltd
inc
mov
and
out
jge
pop
or
repnz
fcom
ljmp
scas
xorl
jns
movsb
add
xor
xchg
dec
mov
pushf
cmp
insb
and
adc
imul
sti
push
mov
imul
ja
sbb
mov
pop
mov
cmp
add
xchg
cli
fwait
jae
xor
mov
inc
pushf
in
imul
sahf
inc
mov
jge
jne
daa
push
out
shl
xor
mov
roll
mov
sti
mov
xchg
lret
xchg
xchg
loopne
mov
pop
cmp
jb
lret
call
fsubl
mov
mov
enter
dec
add
clc
push
add
adc
sbb
sbb
jg
imul
and
xchg
lahf
sub
mov
gs
cmpsl
jo
and
push
mov
jnp
out
jne
xor
or
and
mov
and
gs
inc
mov
and
pop
jne
adc
sbb
xchg
ficomps
jmp
fwait
inc
sub
lret
mov
sub
add
xchg
aam
popf
std
and
dec
pop
xor
or
mov
inc
test
mov
and
add
sbb
push
cltd
xor
adc
and
scas
pop
lea
into
jb
and
loop
daa
dec
outsb
cs
and
or
mov
sub
add
jb
std
ret
jecxz
popa
adc
enter
test
popa
and
pop
notl
mov
sahf
and
pusha
nop
mov
sbb
enter
xchg
sub
aad
jmp
insl
or
daa
test
and
adc
cmp
stos
decl
arpl
jno
mov
js
es
inc
bound
sti
scas
and
adc
sahf
movsb
mov
les
sub
and
jecxz
fnstenv
sub
out
cmp
add
loopne
pop
mov
push
xor
popa
add
lahf
mov
gs
das
cmp
lds
and
std
shl
dec
add
and
shrl
add
mov
mov
pop
mov
cmp
mov
andb
mov
cmp
inc
in
adc
and
aaa
and
lock
and
ss
cmp
mov
xor
pop
push
sbb
push
arpl
and
dec
mov
and
pop
sub
and
add
mov
leave
and
ljmp
xchg
dec
and
sbb
sbb
in
fsubl
cltd
mov
sub
xor
shrb
dec
aas
mov
ror
dec
and
sbb
mov
movsb
not
xchg
iret
jo
cmpsb
xor
and
sbbl
adc
outsl
inc
push
push
xchg
adc
sbb
jg
orl
movsb
and
jbe
aaa
cmpsb
xchg
dec
test
pop
adc
int3
push
cmp
dec
mov
mov
jae
adc
stos
sti
test
and
inc
cmp
movsb
mov
jns
dec
mov
and
mov
cwtl
jne
shl
in
cmp
and
mov
dec
popf
lods
or
xchg
test
idiv
andb
and
xor
lahf
jae
out
mov
sub
sbbb
sbb
sub
and
ja
cltd
aas
adc
xor
pop
push
mulb
and
pop
movsb
push
hlt
xchg
sbb
imul
adc
pushf
scas
cmpsl
inc
fcoms
pop
shl
popa
cltd
stc
xchg
mov
xor
in
xchg
cmpsl
and
add
jae
call
mov
xor
mov
and
fnstenv
dec
adc
ds
mov
repnz
mov
jbe
xchg
out
stos
jle
gs
and
push
sahf
push
and
push
and
xor
cmpsl
and
lea
inc
and
add
sarl
lock
fadds
inc
cmp
pop
cwtl
and
or
iret
mov
xlat
sbb
pop
and
dec
cmp
push
test
and
push
inc
and
arpl
pop
xchg
addr16
mov
mov
mov
xor
fimull
scas
xchg
push
cs
mov
dec
fcoml
mov
out
jno
in
mov
fprem1
inc
imul
mov
jge
and
aam
test
leave
xor
adc
xchg
nop
sbb
push
xchg
popa
test
test
loop
cmp
jle
or
fsubrs
xchg
cmp
popf
mov
icebp
lret
mov
jle
push
adc
push
xchg
nop
mov
or
gs
cs
push
aaa
jg
push
and
lret
mov
inc
scas
cltd
xor
inc
push
or
pusha
pop
push
mov
sbbb
notl
xchg
and
sahf
pushf
xor
jle
add
sub
outsl
adc
das
mov
movsl
sbb
mov
test
push
and
pop
pop
movsb
cmp
sbb
or
in
jae
mov
and
jb
push
inc
add
mov
jle
jg
fldenv
and
notl
cltd
and
jecxz
dec
loopne
call
adc
data16
fsts
insb
and
addr16
push
xchg
mov
fisttps
enter
and
xchg
jbe
movsl
pop
mov
je
xchg
inc
lds
lret
pop
faddl
jb
test
xor
and
jns
outsl
add
inc
dec
ss
mov
ret
cmovg
clc
lods
push
out
xchg
xchg
hlt
cwtl
popf
mov
je
mov
or
sub
imul
movsl
push
mov
stos
pop
lea
jl
ficoms
push
push
pop
cmp
ror
popa
jne
and
mull
and
push
jns
out
jno
test
std
dec
adc
rolb
add
loope
test
mov
push
push
into
jge
add
andl
sub
stos
fs
aaa
inc
lods
adc
and
mov
push
cld
cltd
sbb
inc
divb
xchg
loopne
ret
mov
cmc
scas
in
leave
hlt
and
mov
mov
lea
xchg
sbbb
inc
int
jno
mov
dec
insl
dec
push
gs
inc
sbb
mov
inc
xchg
add
mov
push
and
xchg
lahf
andl
xchg
and
xchg
imulb
dec
pop
jno
ljmp
lret
cmp
mov
jp
adc
pop
sti
cmp
aas
adc
and
repnz
pushf
and
loope
stc
int
mov
jnp
xchg
mov
xor
pop
sbb
mov
popf
add
in
and
pop
xor
pushf
dec
sub
inc
xchg
or
mov
shr
addl
enter
mov
shrb
or
and
sbb
sbb
insb
fwait
adc
shll
fsubl
das
mov
xor
out
dec
cwtl
gs
cmc
sub
enter
xchg
inc
jo
push
cmp
call
arpl
add
cmp
push
push
ljmp
jo
fcomps
inc
and
call
jg
or
loopne
or
push
pop
bound
pop
xor
in
jecxz
sub
cltd
push
mov
add
lock
and
add
ret
daa
xor
popa
push
dec
insb
or
and
and
mov
and
test
pop
mov
add
das
cmc
fiadds
mov
push
mov
mov
lds
mov
pop
fsubrs
pop
mov
mov
and
cmpsl
adc
and
inc
xor
movsl
dec
dec
mov
popa
pop
movsl
or
fs
cmp
lahf
cmpsb
sub
icebp
xchg
jp
pop
rolb
int
test
orl
and
loope
mov
fisubrl
inc
iret
xchg
ja
pop
lcall
loope
xchg
insl
roll
xchg
cmc
and
xchg
xor
sub
aam
push
push
pop
adc
jb
and
arpl
mov
in
lahf
mov
and
add
xchg
hlt
inc
and
in
sbb
jns
mov
fcoml
aas
nop
mov
inc
jbe
pop
and
dec
mov
stos
aaa
enter
push
out
cli
and
cmpsb
sub
mov
repz
sub
test
not
lret
push
sahf
in
lea
out
cmpl
inc
push
shlb
sub
sbb
fwait
xchg
adc
jne
not
xchg
lods
and
sti
fdivs
and
ljmp
xor
repz
jnp
bound
mov
pop
inc
pop
cltd
ret
outsl
pop
and
push
add
xor
cld
pop
movsl
insb
stos
and
push
jno
cmpsb
clc
mov
int
lock
mov
push
or
mov
rcrl
movsb
cld
mov
and
shlb
pop
fsubp
popf
ja
test
out
icebp
and
pushf
movsb
and
stos
xchg
andl
insb
mov
gs
out
mov
cmp
dec
inc
and
int3
push
idivb
je
or
and
in
cmp
cmp
stc
shrb
fiaddl
cs
mov
mov
scas
adc
mov
into
jno
popa
xchg
gs
and
outsl
les
repnz
aam
sub
js
inc
adc
xlat
ret
add
mov
jp
jbe
adc
adc
or
inc
movsb
lods
fists
xlat
cli
lea
gs
mov
movsb
sbb
stos
mov
cmc
test
mov
sbb
and
xor
in
jmp
or
pop
and
xchg
mov
jbe
dec
and
scas
xchg
xchg
mov
xor
mov
outsl
mov
lret
es
imul
xchg
mull
pushf
jmp
nop
and
push
cmpsb
ja
xchg
xlat
and
and
lahf
mov
mov
dec
aad
loopne
inc
dec
push
js
iret
out
lds
jg
mov
xchg
mov
jae
in
nop
add
xor
fcomps
push
jl
xchg
stos
outsl
pushf
sub
adc
push
jge
lret
inc
and
repz
and
adc
pop
sub
cwtl
sbb
outsl
cltd
and
fsubrs
stc
pushf
fistps
dec
es
inc
mov
movsb
lock
add
ficompl
lea
add
std
jp
fistpll
pop
xchg
and
in
stos
movsb
incb
mov
pop
ret
andb
pop
and
dec
data16
lds
cld
test
and
dec
jnp,pn
aad
xlat
jbe
movsl
mov
popf
das
and
xchg
xchg
mov
std
sub
pop
mov
push
movsb
shlb
inc
pop
adc
adc
pop
pop
or
sahf
cmp
ret
inc
cmc
cld
sub
or
movb
jecxz
adc
fs
cmpl
fimull
adc
aas
and
xor
sub
and
pop
mov
jecxz
shlb
adc
inc
sti
add
rorb
cld
loopne
push
scas
fs
xchg
sub
and
xlat
dec
pushf
cmp
and
gs
insb
jl
stos
cmpsb
add
mov
sub
push
fs
cltd
insb
pop
and
ljmp
and
xchg
lcall
and
or
cmp
sbb
mov
adc
and
jmp
jo
loope
int
cmp
mov
dec
call
jge
inc
and
movsb
gs
push
lahf
and
xchg
add
and
mov
push
mov
mov
push
mov
cmp
nop
lea
inc
jae
popa
push
out
clc
and
cmp
xor
jmp
and
insb
mov
je
rcl
movsb
ret
and
mov
dec
push
es
push
mov
scas
icebp
inc
or
add
and
mov
inc
cmp
and
sbb
sti
push
pop
lahf
add
mov
jmp
pop
jns
inc
xor
mov
ljmp
in
sub
jne
mov
xor
or
jmp
mov
shll
pop
shlb
mov
push
xor
or
adc
and
cmp
and
dec
in
loope
jle
and
xlat
add
nop
shlb
lcall
and
test
adc
or
mov
and
or
lcall
pop
jle
test
or
mov
lcall
jecxz
into
cmp
dec
fs
inc
xchg
aam
dec
insl
mov
movsb
pop
fisubl
mov
xchg
xchg
sub
sbb
pop
lods
pop
je
fucomi
das
and
mov
sub
and
pop
mov
cltd
lock
sti
jle
fidivl
notb
xchg
ss
add
adc
pop
xchg
dec
xor
cli
xor
jns
es
mov
jle
lcall
icebp
xor
loop
inc
and
inc
sbb
push
or
jg
loopne
jne
and
rcl
jmp
push
andl
dec
jecxz
and
cmc
iret
pop
add
jle
and
xor
lods
push
xor
adc
jo
and
mov
out
loope
jb
lea
sbb
xor
adc
add
ds
cwtl
and
sub
jbe
mov
das
adc
xor
mov
testb
push
sbb
cmp
mov
dec
pusha
in
loop
xor
xor
std
gs
and
mov
mov
rclb
repz
or
dec
and
cmpsb
mov
outsb
inc
adc
loop
adc
pusha
mov
movsb
push
fimull
mov
adc
push
out
sub
jne
inc
pusha
xchg
inc
les
cmp
and
pop
xor
or
and
lea
push
sahf
xor
add
and
lods
xchg
push
scas
push
enter
jmp
out
loop
mov
xor
cmp
sbb
lock
jp
ja
xchg
push
and
inc
jbe
xchg
inc
in
je
stos
aad
or
in
bound
adc
xchg
lea
xor
push
ret
icebp
and
and
push
mov
xor
sbb
orl
jl
push
or
push
adc
imull
and
xchg
mov
xchg
xchg
add
and
das
popf
lcall
pop
jb
sub
adc
sbb
aaa
and
js
sahf
xchg
lds
push
call
and
inc
sbb
pcmpeqb
push
popf
and
and
sarl
adc
call
and
jl
adc
ljmp
aam
sub
stos
jno
xor
fiadds
and
mov
in
movsb
test
jns
jns
adc
cmp
fucom
mov
mov
xor
sub
sahf
fsubrl
cwtl
stc
dec
add
in
and
rorl
aaa
sti
mov
and
dec
and
sub
out
and
inc
sbb
add
orb
movsb
imul
adc
lods
gs
inc
popa
ret
into
hlt
cmp
jo
testb
mov
test
int3
jo
mov
and
xchg
lret
aam
push
and
push
pushf
aad
mov
xchg
sub
mov
jmp
loop
adc
cmc
and
and
loope
cmp
jp
movsb
clc
adc
mov
pop
cmp
data16
xor
dec
mov
or
jp
jg
mov
shll
and
inc
add
mov
push
lret
inc
jns
mov
jl
pusha
inc
and
mov
xchg
dec
and
sub
and
adc
stc
aaa
lds
and
outsl
inc
jb
js
mov
push
leave
jmp
clc
pop
es
popa
and
xchg
and
push
in
or
dec
and
add
aam
mov
and
test
rcll
push
push
cli
js
add
popa
mov
mov
sub
push
dec
ret
test
pop
mov
icebp
jbe
jne
add
filds
mov
jl
sub
mov
mov
repz
and
das
fsubrs
pop
call
lock
cmp
stc
popa
ss
lea
pop
adc
mov
fwait
jmp
test
in
add
stos
pop
dec
and
shll
outsb
fdiv
sahf
pop
pop
and
inc
cmpl
cmp
dec
sbb
mov
and
pop
xchg
imul
cltd
mov
mov
pop
inc
lret
push
dec
and
or
mov
jmp
dec
and
mov
push
mov
push
mov
out
cmp
lcall
add
xchg
rorb
and
loop
inc
mov
sub
mov
stc
daa
stos
das
sar
movsl
out
and
adc
add
push
leave
sub
xchg
stos
pop
repnz
cmp
and
mov
jle
sub
add
sub
imul
ds
mov
mov
push
lods
stos
sub
mov
jmp
repz
fs
jge
pop
sub
adc
jne
mov
cmpsb
imul
scas
and
and
or
dec
es
add
or
and
imul
iret
mov
add
shr
push
dec
test
inc
push
mov
xor
dec
rcl
scas
out
cmpsb
pop
popa
cmp
add
sbb
insb
lahf
lods
push
jle
mov
out
int3
or
mov
sbb
push
and
popa
sbb
and
fs
mov
jno,pt
cld
mov
stos
push
popa
andl
xor
push
sarl
and
out
insl
push
and
mov
inc
int3
and
stc
insl
repz
fsubl
fsubrp
mov
cmp
repz
xchg
mov
cltd
sub
out
js
mov
je
push
adcl
sbb
jmp
negl
adc
ljmp
in
jge
mov
loop
ja
mov
les
out
xor
sbb
int3
call
pop
fildll
mov
and
sbb
icebp
xor
xchg
and
shl
add
mov
mov
jns
mov
push
jecxz
out
fimull
stos
sbb
jmp
cld
movsb
xchg
gs
fdivs
cmc
mov
jp
aas
out
mov
and
sbb
fmuls
mov
mov
push
and
cmpsl
jg
fst
pop
test
inc
mov
mov
loop
adc
adc
and
dec
pop
faddl
sti
dec
adc
add
cmc
jmp
adc
test
mov
xchg
adcl
negl
and
xor
test
rclb
pushf
nop
and
add
cmp
xchg
jl
jmp
ss
jbe
push
aaa
jno
mov
and
pop
xchg
mulb
insb
outsl
pop
jg
fwait
lds
mov
daa
mov
enter
outsb
inc
xor
xor
cld
imulb
ljmp
loope
aad
cmpl
sbb
or
and
jle
lock
aas
add
sub
fmull
mov
jle
inc
loope
xchg
xchg
outsl
orl
movsl
jo
and
mov
xchg
pop
inc
and
jno
sub
mov
pop
stos
or
pop
ret
cmp
je
inc
mov
mov
push
cmp
mov
fstpt
pop
pop
mov
xchg
je
loopne
repnz
mov
jmp
jecxz
and
shlb
movsl
inc
mov
cwtl
and
clc
mov
jns
sbb
in
sar
fimuls
nop
aas
popa
imul
out
loop
xchg
test
cwtl
fnstcw
ja
arpl
pop
add
movsb
in
cmp
xchg
mov
call
pop
data16
mov
in
mov
shll
sarb
pop
mov
mov
jb
or
push
xchg
and
sbb
shrl
cli
and
sti
enter
jo
sub
jecxz
sub
jne
stos
mov
hlt
lcall
xor
scas
mov
sti
subl
cvtpi2ps
cmpsb
add
xor
inc
cmp
pop
and
lahf
pushf
outsb
push
cmpl
cs
pop
mov
sub
and
xor
add
test
subl
pop
inc
shll
fs
fwait
mov
adc
aad
imul
inc
jne
das
push
shl
pop
lods
adc
xchg
dec
hlt
fwait
out
mov
cli
fimull
push
jecxz
lea
cltd
sarb
gs
and
repz
sbb
not
and
push
and
mov
js
cmp
jb
fcompl
mov
mov
and
sbb
pop
je
adc
mov
xor
pop
sbb
jns
and
ss
pusha
insb
pop
mov
mov
das
mov
or
aaa
mov
and
mov
lahf
lea
mov
mov
scas
ljmp
mov
lods
and
xor
xchg
jmp
cmp
mov
mov
outsl
scas
sbb
dec
in
xchg
lods
loope
mov
sahf
stos
jge
and
xor
fsts
into
test
ret
scas
and
repz
xchg
clc
and
and
mov
mov
jl
and
scas
mov
jp
dec
and
sbb
in
mov
popa
and
test
decb
push
xor
aas
and
xor
and
pushf
gs
out
fisubl
mov
xorb
push
pop
hlt
dec
outsb
popa
aam
mov
int
insl
mov
fidivrl
fists
movsb
xchg
push
popa
add
sub
and
sarl
arpl
or
xchg
cs
pushf
pop
mov
movsb
lea
xor
push
and
int
idivl
stos
dec
cwtl
adc
xor
and
fidivs
and
jl
popa
pop
scas
jecxz
adc
and
out
inc
sub
and
scas
movsb
ja
mov
pop
psraw
pop
and
fsubl
and
pop
fucomip
cmp
lcall
mov
mov
jnp
and
arpl
int
push
clc
inc
jecxz
and
jo
test
lret
and
dec
cmpb
xorb
mov
js
push
sub
xor
popa
sub
test
cmp
in
shll
lahf
sub
into
inc
jmp
and
in
and
imul
jnp
loop
adc
and
sub
cmpsb
ds
test
fildl
xor
stc
xchg
jnp
roll
xchg
popa
sbb
lods
xor
xor
fstpl
cltd
dec
insb
and
pop
bound
inc
and
stos
ds
imul
mulb
jg
cmp
dec
mov
rclb
movsb
xchg
mov
cld
or
in
int
jmp
std
in
paddusb
and
and
add
loop
ss
and
loope
sbb
popf
mov
stos
pop
jne
int
xchg
lods
mov
pop
andl
mov
xor
out
pushf
inc
movsb
cld
pop
into
loopne
pop
dec
in
add
pop
test
and
push
es
mov
pop
push
and
fs
fnstenv
xor
inc
xlat
mov
sub
add
add
push
fisubs
and
inc
pop
or
mov
push
mov
push
movsl
sti
pop
adc
and
add
xchg
sbb
ret
out
jp
popa
test
movb
repnz
pcmpeqw
sub
and
dec
mov
xor
sarb
aam
rolb
cmp
jmp
jg
mov
xchg
scas
xor
cmp
shll
xor
jne
dec
xchg
xchg
dec
loope
lret
fwait
and
and
repnz
push
movsb
cmp
loop
arpl
aas
loopne
imul
and
and
and
or
and
out
push
outsl
cld
jg
filds
and
xor
cmp
loope
jno
cwtl
test
int
and
add
dec
cmp
and
xor
pushf
mov
insl
inc
jge
xorl
lock
jne
aas
into
test
pop
leave
lcall
sti
ljmp
or
xor
dec
stc
arpl
pusha
ja
pop
popa
or
jg
and
mov
subb
pop
sbb
cld
negb
xchg
scas
and
sbb
add
into
push
mov
int
xchg
add
jmp
pushf
and
lock
xchg
xor
ds
jne
out
ljmp
dec
jge
lock
push
addb
lods
test
and
dec
popf
daa
and
adc
jne
xchg
pop
xchg
inc
ret
subl
and
or
jb
adc
enter
mov
lds
bsr
mov
sbbl
push
loop
jmp
cld
insl
push
sbb
aaa
push
mov
and
adc
in
in
icebp
fcoms
je
scas
xchg
ret
mov
and
mov
in
dec
test
cmp
aas
push
mov
lcall
mov
inc
fwait
ds
testb
cmpsl
and
iret
lcall
mov
fsubrs
pop
cmpl
loope
xor
cmp
aaa
fcompl
xor
std
xchg
iret
faddl
pop
mov
inc
mov
mov
movsl
and
or
pop
das
out
inc
mov
jne
and
xchg
pop
push
cmpsl
cmp
scas
int3
mov
pop
addl
cmp
in
mov
jecxz
inc
test
subb
fst
push
fstps
popa
fcomi
inc
mov
popa
inc
xchg
cli
or
and
mov
xor
gs
mov
into
add
addr16
xor
xchg
dec
inc
and
mov
sbb
stos
aad
sub
or
inc
and
pop
xchg
cmpsb
adc
mov
les
arpl
shlb
and
jbe
sub
outsb
adc
jecxz
mov
mov
aas
mov
out
dec
lea
sbb
rcrl
mov
push
sub
pop
cmp
rcrl
lea
and
lods
mov
or
aas
les
add
push
bound
lcall
and
push
dec
out
add
add
jb
stos
loopne
xchg
jo
inc
inc
in
inc
aas
jbe
inc
in
and
mov
and
jp
insb
and
stos
sbb
inc
mov
pop
incb
push
mov
loope
and
jne
mov
pop
and
lods
pcmpgtd
mov
and
dec
xchg
jae
xchg
and
xor
mov
mov
xchg
adc
sahf
pop
cmp
sub
arpl
stc
cli
mov
inc
or
xor
cmp
jb
out
and
mov
imul
dec
cmp
adcl
test
test
and
leave
lcall
imul
cmp
int3
inc
xchg
mulb
cli
ret
dec
stos
xor
cmpsb
imul
popf
mov
jmp
out
push
jne
inc
sub
cmpsb
mov
shlb
cmpb
cltd
jns
js
pop
dec
stos
mov
and
or
and
xchg
mov
sbb
insl
and
sbb
dec
gs
inc
movsl
idivb
addr16
xchg
pop
jl
cmp
inc
inc
adc
mov
and
xor
xorb
movsl
add
sbb
and
pop
jmp
jg
mov
add
outsl
pxor
call
je
cmp
mov
and
jne
add
mov
sub
and
aam
movsb
nop
sbb
add
popa
or
push
stc
mov
sub
daa
mov
int
test
jle
mov
loope
lret
dec
fxtract
arpl
xchg
popf
js
xchg
scas
mov
pop
sbb
fldt
lods
xlat
mov
pushf
fisubrs
mov
and
add
push
fwait
add
mov
test
xchg
daa
sub
and
jge
in
lock
and
cmc
jnp
lsl
push
leave
mov
loope
cmp
mov
scas
mov
inc
stos
and
inc
jns
and
xor
int
sbb
xchg
les
pop
and
mov
popf
and
pop
jl
cwtl
push
fs
enter
ret
xor
in
adc
aad
mov
jmp
shrl
pop
inc
cmp
inc
scas
jmp
adc
xchg
lea
inc
sbb
mov
shll
movsl
out
repnz
lods
mov
adcl
pusha
or
fisttpl
lret
mull
mov
xchg
pop
adc
add
push
hlt
stc
lods
mov
dec
jmp
test
or
js
sarl
mov
ja
std
movsb
xor
fwait
xor
repnz
and
lods
es
imul
sub
mov
fs
enter
shlb
fisttpl
fwait
clc
dec
sbb
movsl
jecxz
pop
test
jmp
call
cmp
or
add
add
fnsetpm(287
stc
inc
xchg
xor
jne
push
lock
sub
sub
mov
xor
mov
scas
inc
pop
out
popa
call
aaa
and
jb
shrl
xchg
loop
popf
negb
repz
nop
cmc
sbb
out
movsl
jns
js
lcall
les
and
add
and
or
stos
xlat
repnz
and
jne
adc
push
sub
and
and
ja
mov
and
das
inc
adc
imul
call
inc
or
and
sub
cmp
jle
sbb
js
cld
gs
adc
lods
in
and
in
adc
adc
adc
movsb
lahf
rolb
icebp
dec
mov
mov
not
or
cmp
cld
fisubrs
nop
cmp
jge
repnz
and
out
xor
loope
shrb
lods
int
mov
xor
imul
push
pop
inc
int3
push
mov
cld
push
fwait
sti
jb
push
test
arpl
jns
fs
adc
mov
clc
and
pop
iret
sti
sbb
pop
dec
and
mov
mov
jns
test
mov
sahf
push
xor
mov
mov
iret
arpl
scas
loope
incl
das
pop
addr16
sub
movsb
fisttpl
loop
ret
mov
inc
and
lea
xor
rcrb
cwtl
xor
ds
mov
leave
dec
and
sti
aas
xchg
dec
push
and
scas
in
jp
mov
xor
ljmp
and
pop
int3
cmp
xchg
add
push
and
pop
int3
mov
inc
pop
and
and
popa
push
loopne
and
xchg
mov
pusha
dec
aas
lcall
cmc
shl
add
repnz
adc
lret
roll
ds
pushf
bound
les
js
and
and
cli
test
push
cmc
outsb
mov
and
pop
into
fsubrl
add
aaa
jne
and
pop
arpl
jl
cmp
push
add
mov
or
mov
mov
push
popa
dec
std
and
push
test
or
mov
jo
mov
rcl
push
add
mov
mov
xchg
lcall
inc
dec
scas
ror
inc
push
fildll
es
mov
and
sbb
stos
pop
and
divl
test
cmp
mov
xor
and
push
mov
and
je
rcrb
and
arpl
ss
cmp
popa
movsb
mov
add
insb
sahf
xor
and
sub
pop
aad
cmp
arpl
daa
push
and
or
cltd
and
lods
cld
xchg
and
add
test
into
mov
and
jge
mov
mov
sbb
inc
push
mov
and
jo
stc
fdivl
and
mulb
imul
out
andb
dec
xor
pop
push
pop
mov
mov
enter
loopne
outsl
jmp
pusha
cltd
mov
movsb
mov
cmp
inc
push
inc
and
jns
pushf
xor
lds
mulb
int
push
imul
cld
icebp
in
ja
adc
cltd
mov
test
je
daa
popa
popf
sti
inc
add
and
dec
les
xor
mov
mov
imul
sub
inc
and
imul
adc
popa
jno
cmp
push
lcall
xor
cltd
mulb
adc
xchg
sahf
and
sbb
mov
fdivs
push
cmc
and
dec
push
icebp
es
jecxz
cmp
mov
adc
push
mov
dec
icebp
ja
dec
push
sbb
scas
and
dec
nop
lds
fldl
mov
jle
dec
pop
jmp
addb
in
movsb
push
movsl
dec
insl
push
fcom
push
pusha
popa
ljmp
and
cmp
insb
fnstenv
jg
push
or
mov
daa
in
and
jne
adc
sbb
xlat
mov
add
add
and
jo
xor
fwait
push
ljmp
and
adc
and
sbb
mov
loop
jg
adc
outsl
and
popf
jmp
push
out
mov
dec
add
xor
cmp
add
cli
inc
adc
mov
iret
push
imul
cmp
xorb
xor
xor
outsb
std
xor
ret
push
mov
lods
stos
and
pop
jle
das
push
sub
out
push
test
and
jae
dec
mov
xchg
les
outsl
popf
lods
jns
mov
xchg
aad
ljmp
sahf
xchg
fistps
das
or
mov
push
sbb
ret
jae
jne
push
sub
and
in
mov
jmp
jnp
adc
fdivl
loop
inc
pop
js
sahf
mov
scas
mov
repz
lea
fimull
and
hlt
dec
jg
push
repnz
fcoml
iret
add
aam
test
xchg
or
jp
and
add
std
sub
ljmp
adc
sbb
leave
aas
aas
pop
and
mov
popf
shll
xor
jecxz
xor
inc
dec
cmpsl
xor
inc
rorl
test
or
lret
les
mov
out
adc
add
and
adc
cs
mov
sbbb
and
xchg
or
movsb
subb
fdivs
scas
jmp
hlt
jae
sub
dec
push
or
and
ja
loope
mov
cmc
jge
and
add
inc
and
or
addr16
and
mov
adc
mov
xchg
insl
popf
dec
sahf
out
mov
mov
add
push
and
pop
sub
mov
pop
and
pop
xchg
and
insb
and
pop
mov
mov
mov
in
fs
cmpsl
aaa
pop
cmc
mov
xlat
movsl
insl
or
inc
and
pop
adc
std
repnz
push
push
and
dec
xchg
sbb
cltd
xor
dec
and
sub
jmp
daa
mov
insl
fidivrs
lea
lock
dec
or
inc
movl
mov
mov
bound
fstps
imul
adc
pop
xor
dec
and
into
mov
xor
insb
mov
inc
movsl
mov
aaa
and
pusha
jle
mov
js
test
and
sub
aad
in
jne
mov
pop
jmp
push
sub
aas
stos
and
test
and
pushf
popa
sub
mov
push
test
daa
pop
mov
add
ficompl
jl
pop
inc
fidivl
and
jo
pop
aas
mov
cmp
add
jns
inc
mov
and
lret
xchg
jecxz
dec
cld
mulb
inc
aam
jne
xchg
jbe
mov
hlt
and
sub
popa
lret
fsubs
sbb
pushf
mov
and
std
shll
mov
into
mov
mov
aam
cmpl
mov
dec
xchg
outsl
inc
xor
or
sub
iret
enter
in
std
pushf
fbld
aad
cltd
or
gs
and
outsb
pop
addl
clc
jae
ljmp
xchg
cmpsl
push
lds
mov
fsts
cld
sbb
mov
movsb
dec
pop
aaa
add
loope
adc
adcl
mov
std
movsb
pusha
and
xor
inc
sub
xor
popa
fbld
js
sti
inc
dec
outsl
lahf
pop
movsb
push
mov
pop
mov
movsb
les
hlt
xor
inc
jne
outsb
and
fadds
adc
mov
push
cwtl
mov
push
sbb
aam
and
stos
lret
test
fidivrs
fstl
call
sarl
jp
xchg
jns
ss
or
xor
mov
movsb
jmp
sub
shlb
sbb
cmp
scas
bound
inc
and
pop
ret
int3
mov
pop
or
cld
ss
pop
in
rol
fsub
ja
mov
mov
fildl
mov
dec
and
lock
bound
mov
and
lea
sub
jle
jno
popa
mov
ja
adc
and
inc
lds
in
cmc
inc
xor
outsl
cmpsb
pop
bound
call
and
mov
add
cltd
mov
push
pop
aad
movsl
ffreep
mov
addr16
push
sub
cmp
shlb
adc
movsl
pop
and
in
xchg
pop
test
std
int
das
sbb
out
lock
sarl
inc
and
xchg
add
and
xchg
cwtl
adc
inc
push
sub
inc
repz
cmp
xor
ja
adcb
stos
test
and
add
cmc
vshufps
lods
pcmpgtw
scas
push
mov
shr
mov
loope
and
add
imul
jecxz,pt
mov
xchg
mov
cmpsl
dec
sahf
and
movsb
inc
cmp
test
jl
loopne
and
and
stos
dec
and
pop
mov
imul
sub
xchg
loop
pop
icebp
imul
cmp
pop
scas
mov
jl
iret
shlb
cmp
mov
xchg
cmp
mov
mov
pop
and
fsubrs
cmp
push
and
in
andb
cwtl
js
sub
out
adc
xchg
ret
fbld
adc
sbb
sbb
inc
pop
xor
lea
cmpb
lock
and
idiv
xor
push
mov
push
rorb
sbb
pop
adc
xor
test
ret
mov
test
and
daa
shlb
repz
clc
mov
jne
add
and
aad
cli
lea
scas
xor
cmp
pusha
shll
inc
jne
mov
daa
bound
das
in
or
xchg
int
pop
push
shrl
push
xorl
cld
daa
imul
sub
arpl
dec
add
mov
repz
mov
std
arpl
xchg
dec
pop
and
xchg
rolb
dec
jge
arpl
orl
and
mov
push
xchg
movsb
outsb
cmc
push
jns
jecxz
xor
out
and
fwait
imul
mov
mov
das
and
cmpl
sbb
and
mov
popa
mov
xchg
mov
mov
mov
and
cwtl
push
or
nop
push
aaa
and
daa
les
fs
and
dec
xor
dec
or
das
xor
inc
subb
and
stos
add
jns
and
in
push
and
sbb
testl
pop
into
mov
clc
pop
jne
gs
sbb
and
jecxz
out
cltd
cmp
cmp
test
jae
in
fs
mov
arpl
stos
inc
xor
xor
movsb
xchg
fidivrl
jmp
pop
or
fistps
xor
pop
scas
cmp
and
dec
dec
push
lods
and
shll
jae
mov
fadds
or
stos
and
and
jmp
mov
sbb
push
mov
cmp
xor
cmc
xchg
or
testb
aaa
xchg
je
add
fwait
push
sub
das
inc
cmp
inc
xor
cmp
loope
cltd
inc
lahf
enter
dec
insb
adc
cmpsl
movsl
and
sub
pop
xlat
push
inc
test
outsb
push
fisttpl
or
ds
int3
xchg
scas
lret
fldcw
dec
pop
or
das
add
out
popa
jae
ret
sbb
pushf
mov
sub
and
sbb
xchg
in
sbb
add
std
and
shll
or
xchg
aas
dec
mov
ljmp
lea
add
lock
leave
add
pop
xchg
movsl
repz
arpl
xor
dec
jb
cwtl
xor
cmp
sub
and
jge
sahf
sbb
mov
push
mov
jmp
mov
and
stc
movsbl
nop
push
push
insl
jns
cld
lock
cmp
shrb
adc
mov
inc
call
or
inc
leave
movsl
scas
out
mov
inc
loope
lcall
adc
inc
push
mov
lret
sahf
cmp
pop
sti
and
frstor
pop
mov
xchg
pushf
xor
mov
repz
aas
cmp
adc
sahf
mov
mov
lods
jle
and
not
sbb
pushf
and
sbb
and
ret
jno
xchg
js
arpl
jne
sub
insb
xor
aaa
mov
imul
xchg
je
pop
push
outsb
xor
xchg
or
test
scas
and
push
cmp
jns
cltd
mov
cwtl
add
les
jae
pop
dec
movsb
icebp
and
subl
add
pop
pop
sbb
mov
dec
lods
sbb
dec
xor
mov
std
out
and
cwtl
pop
sub
sbb
pop
in
mov
lahf
push
cmp
dec
imul
shrl
and
add
dec
and
and
out
stc
stos
and
in
and
cmp
jp
aam
xor
aad
sahf
sub
mov
mov
jne
pop
and
jns
mov
aas
push
cmpsl
or
add
push
push
popf
pop
dec
and
pop
bound
lret
push
mov
mov
pinsrw
call
popa
test
mov
addb
cmp
lea
sub
and
dec
das
xor
push
sbb
inc
push
pop
imull
mov
shlb
int
sbb
push
les
xchg
mov
cs
add
cmpsl
cltd
and
in
inc
pop
dec
sbb
and
dec
in
xchg
repnz
xor
outsb
jb
scas
scas
push
fildl
and
mov
icebp
and
adc
cmp
adc
movb
jns
jl
and
sub
into
xor
aam
pop
adc
mov
dec
sub
ljmp
fldt
xor
into
push
mov
xchg
add
lahf
imul
mov
and
cli
pop
cltd
and
xchg
jmp
iret
and
mov
add
cmp
aaa
out
in
and
mov
call
je
jno
sub
adc
jg
std
and
sub
or
adc
push
cmpsl
jle
bound
and
jp
clc
popf
pop
inc
push
shlb
jbe
fwait
push
xor
cmp
mov
mov
sbb
xchg
out
sub
test
jb
sbb
pop
icebp
and
push
fs
jp
sbb
mov
xor
cwtl
dec
pop
cld
aam
mov
fwait
ja
jo
arpl
adc
mov
dec
fwait
cwtl
int
int3
xchg
push
dec
rclb
into
lods
xchg
mov
dec
cli
xor
fdivs
cmpsb
test
add
fcoml
xchg
push
add
mov
cli
lods
movsl
pop
and
jmp
dec
test
add
push
cmc
sbb
dec
jnp
and
sbb
pop
daa
lods
xchg
cmp
out
nop
iret
dec
cmc
std
and
push
sub
ljmp
mov
out
int3
int3
lcall
cmp
mov
ja
ficoml
and
inc
shrl
xor
je
mov
xchg
sbb
das
jne
and
inc
jb
loop
das
sbb
sub
lods
loope
jmp
xor
or
push
xchg
cld
ror
mov
and
pop
shll
and
jecxz
mov
popa
xor
dec
mov
jge
lods
popf
repz
sub
sub
inc
mov
cmp
add
ret
fs
cli
leave
or
fildl
pusha
inc
mov
iret
push
in
arpl
inc
out
jecxz
popa
pop
cmc
leave
or
fstpl
mov
fdivrl
pop
and
jno
hlt
and
ficompl
mov
cmp
addr16
dec
mov
movsl
arpl
popf
icebp
movntq
orl
push
cmpsl
xchg
and
pop
aam
pop
out
and
mov
les
nop
dec
xor
repz
push
adc
jmp
mov
imul
stos
fisubs
or
mov
or
add
daa
shlb
and
aaa
filds
dec
mov
lret
lds
add
scas
jge
nop
lods
and
hlt
inc
in
add
lea
cld
lea
and
aam
aad
in
imul
push
fsubr
and
and
nop
push
out
jl
gs
and
call
iret
or
in
lods
cmpsb
fs
cmp
into
loope
gs
or
lret
out
push
and
test
in
lcall
and
hlt
imul
xor
sub
inc
xchg
mov
repnz
or
fdivl
cld
int3
or
dec
fwait
movsb
push
fnstenv
daa
xchg
mov
pop
shrl
je
scas
sub
rolb
mov
cltd
fs
and
push
adc
mov
stos
pop
and
shrl
jo,pt
and
loopne
and
inc
outsl
mov
and
inc
ficompl
cmp
and
jg
in
or
mov
sub
adc
and
and
jbe
out
imul
push
sbb
and
movsl
shll
sbb
adc
push
and
inc
icebp
popa
mov
add
mov
js
mov
mov
lods
and
push
test
cli
pop
cwtl
and
aaa
movsl
add
shlb
and
cmp
mov
push
xorl
mov
and
or
sub
in
adc
xchg
test
test
pop
clc
loop
jg
shll
movsl
xor
push
scas
aad
mov
xor
shl
dec
pop
popa
aaa
test
loopne
mov
inc
push
adc
cs
dec
aad
xchg
es
stos
popf
rcl
push
xor
orl
shll
repnz
pop
andl
or
or
das
adc
clc
push
dec
nop
inc
push
loop
and
loope
xor
xlat
and
out
mov
test
lret
fsubs
cmpsb
dec
and
mov
mov
iret
sbbl
out
pushf
mov
sbb
mov
push
sbb
mov
test
pop
xlat
xchg
rcrl
aad
lret
or
incl
in
dec
rcrb
sti
outsb
mov
dec
jmp
push
and
in
and
dec
daa
inc
outsl
movsb
push
cwtl
in
fnsave
fldenv
sbb
mov
pop
pop
and
mov
movsl
dec
jmp
int3
cmp
shl
fwait
cmc
sub
incl
mov
imul
inc
arpl
adc
dec
xchg
sub
mov
into
test
pop
cmp
push
xchg
cli
out
cld
adc
xchg
lea
and
lret
ljmp
sbb
mov
popfw
sub
jl
dec
cli
test
in
and
dec
fucomp
and
inc
or
and
jne
jno
jge
out
dec
xor
sub
aas
roll
and
sub
and
and
jl
sti
dec
and
xor
jle
adc
inc
jo
fistl
fnstsw
inc
outsb
fwait
insl
clc
mov
pop
sub
out
ret
push
add
pop
and
dec
data16
insb
lock
stos
aam
andl
rol
das
clc
inc
dec
push
bound
mov
movsb
mov
popa
and
inc
xchg
lods
test
movsb
hlt
sbb
gs
xchg
dec
aad
pop
es
push
cmp
xchg
cwtl
loope
cltd
sbbb
inc
jl
rorb
adc
lahf
aaa
push
idivb
mov
mov
mov
xor
or
xor
mov
int
dec
sbb
lcall
loop
out
jg
popa
push
or
sbb
mov
adc
mov
or
cmc
dec
add
mov
xchg
mov
icebp
or
shll
cmp
inc
and
push
lock
mov
push
icebp
cmp
cmp
stos
orb
movsb
sub
sub
int3
add
xor
stos
ficoml
mov
xadd
jmp
fsubs
mov
icebp
addr16
lret
mov
dec
int
adc
dec
stc
cmpsb
fldt
xlat
iret
mov
lea
dec
mov
ljmp
test
decb
pop
scas
and
test
fstp
or
fistps
lock
dec
cmc
movsl
mov
clc
ds
insl
int
fdivp
mov
addr16
cmp
test
outsb
add
lret
mov
xor
or
dec
push
pop
and
add
inc
xor
daa
and
insl
shlb
add
and
out
movsb
fcmove
jge
sti
stc
or
pop
popa
scas
pop
arpl
mov
adc
out
in
mov
or
xor
sbb
scas
gs
dec
adc
loope
xchg
outsl
xchg
xor
inc
mov
fld
addr16
cmpsl
and
jmp
movsl
cmp
repnz
iret
and
stos
fchs
pushf
das
and
mov
mov
test
das
scas
inc
or
sbb
out
cmp
ss
mov
insl
ja
push
mov
jno
scas
pop
lret
test
lahf
mov
movl
and
inc
lcall
cltd
mov
imulb
xchg
lods
mov
jg
in
push
or
mov
inc
mov
jo
inc
and
pop
cmpl
mov
jecxz
cmp
loopne
and
ret
lahf
hlt
mov
fistl
stc
jb
std
push
inc
and
pop
int
pop
push
mov
and
cld
dec
lret
mov
xorl
and
push
mov
nop
xchg
inc
lods
lcall
sub
dec
adc
push
lds
lods
xor
adc
ja
test
repnz
xor
or
ds
jmp
in
push
movsb
pop
sbb
cwtl
and
rolb
or
add
orl
xor
sub
xchg
test
mov
mov
aaa
cmp
jmp
cmpsl
sub
xchg
jmp
mov
jne,pn
dec
xchg
scas
xor
test
jmp
and
movsl
aas
sub
xor
ret
shrd
xor
push
and
bound
pop
jne
dec
loop
fidivrl
int
mov
xchg
xor
mov
test
insb
and
and
adc
sub
or
inc
dec
popa
ds
std
mov
adc
add
leave
movsb
ljmp
cmpsl
bound
fimuls
or
fsubrp
jle
fildl
das
in
add
xchg
jecxz
xchg
fs
push
ja
clc
and
pop
popf
jl
fmulp
mov
mov
dec
rcll
and
mov
cs
es
hlt
and
mov
loope
push
test
fisubs
aad
ret
pop
and
cltd
rorb
cld
inc
cmp
int3
xchg
mov
or
and
pop
movsb
mov
xchg
in
dec
enter
pop
sbb
iret
rclb
mov
or
les
shr
shr
mov
dec
push
mov
pop
and
lcall
orl
pop
push
push
sub
and
dec
push
jp
inc
and
lds
xchg
insb
and
shll
aad
sbb
lcall
pop
push
xchg
mov
pop
push
xor
and
pop
cmpsb
push
popa
inc
gs
lret
mov
stos
ds
push
addr16
aad
dec
cmp
and
jo
fdivl
shrb
mov
std
fldenv
cmp
push
test
and
sti
mov
inc
sub
data16
ds
mov
push
insb
sbb
cmpsl
movsb
and
into
mov
and
adc
addl
in
js
outsl
inc
loopne
imul
arpl
jns
lods
scas
push
das
and
sbb
sub
outsb
mov
repz
mov
popa
push
in
and
mov
fisubl
jno
or
lahf
push
aas
popa
jmp
xlat
scas
in
popa
rcll
mov
or
cmp
rorb
stc
jmp
dec
adcl
cmp
outsb
sub
pop
loopne
inc
xor
sub
xor
or
popf
add
sub
sbb
add
xor
mov
ljmp
xor
addr16
add
and
pusha
in
mov
lea
pop
inc
xchg
xor
pcmpgtw
inc
into
push
add
jae
pushf
imul
and
and
pop
and
cmp
adc
sub
aaa
mov
into
add
jecxz
inc
add
leave
pop
push
and
imul
dec
loopne
fcompl
bound
rcll
pop
xchg
mov
je
shl
shrl
and
mov
mov
ds
movsb
and
pop
hlt
add
sub
popa
int
nop
ret
aas
dec
mov
ljmp
and
jmp
movsl
divl
lock
lds
inc
nop
mov
adc
and
popa
jl
add
sbb
fmuls
dec
repz
pop
inc
mov
mov
cs
fdivrl
daa
and
jle
adc
imul
and
mov
rep
xlat
lds
dec
testl
xor
stc
jecxz
call
ficompl
push
and
push
and
mov
inc
and
lahf
fsubl
shrb
push
xchg
movsb
jns
cmpsb
adcl
sbb
mov
push
pop
mov
push
sti
and
sbb
es
xor
in
xor
push
jns
repz
cmpsl
loope
adc
and
mov
lods
xchg
test
add
mov
jns
popa
xchg
jg
and
stc
sahf
xchg
pop
pop
sub
pop
sub
xchg
popa
inc
adcl
xlat
test
pusha
test
sbb
aam
fadd
push
outsb
mov
and
movsl
inc
jg
daa
and
and
enter
in
lds
push
fldt
pushf
cwtl
dec
pop
test
sub
icebp
mov
int
les
test
es
and
and
xchg
stc
push
sub
jne
and
sbb
hlt
fstpl
xchg
cltd
and
es
jo
cmp
sub
fldt
int
xor
aad
xorl
dec
int3
fldcw
movsb
add
mov
loope
jb
lcall
and
movsl
push
fst
mov
jl
inc
dec
xor
dec
sbb
andb
mov
daa
fs
imul
out
imul
xorl
loopne
pop
cltd
gs
sub
inc
and
pop
ret
jno
dec
and
shll
adc
jle
xlat
arpl
in
aad
mov
xchg
sub
push
stc
out
sahf
pop
dec
push
adc
xchg
icebp
adc
cmp
lcall
cmp
and
cltd
lea
nop
jle
addl
add
and
stos
dec
movsb
jg,pt
adc
xchg
int3
push
rorb
mov
negl
mov
hlt
fadd
xor
cmp
movsb
addb
inc
out
jmp
mov
push
and
bound
clc
jo
fisubl
stos
shlb
ljmp
jnp
test
pop
fldl
push
into
mov
bound
xlat
rcr
sub
mov
jle
fimuls
inc
fbld
sub
imul
inc
test
push
and
mov
test
adc
push
and
mov
enter
dec
add
or
mov
jbe
ss
xor
mov
insb
ret
lcall
call
outsb
negb
add
movsl
add
mov
jecxz
sarb
sahf
jge
lret
pop
jmp
lret
cmpsb
and
cld
push
repnz
rcrl
and
or
fsubrs
cmp
mov
sub
cld
xchg
or
adc
shl
scas
xchg
and
test
or
and
cmp
pop
and
mov
popf
repnz
movsb
cmp
pop
or
cmpsb
mov
sti
pop
xlat
divb
push
pop
pop
add
mov
pop
dec
mov
ds
bound
shlb
push
jns
fisubrl
popa
sub
mov
daa
imul
pushf
inc
and
shrl
pop
and
xchg
and
in
xor
cmp
in
dec
cmp
sbb
enter
dec
movsb
mov
incb
fcoml
mov
inc
and
pusha
and
mov
adc
cmp
into
pop
decb
jo
push
lods
xchg
call
push
dec
sub
movsl
stc
jno
mov
pushf
out
jp
jnp
imul
mov
push
aaa
gs
cld
sbb
ljmp
mov
ret
lock
icebp
mov
cltd
stc
dec
addr16
scas
fmul
out
sbb
enter
or
ret
xchg
pop
adc
sub
sub
test
popa
inc
sbb
or
aaa
lret
mov
dec
scas
daa
mov
cmp
mov
lea
aaa
hlt
push
pop
movsb
jmp
jecxz
fisubs
xchg
popf
sub
movl
sbb
pop
and
sbb
fildll
popf
cmp
and
sbb
xor
jno
and
jle
push
test
push
movsb
popa
test
jbe
movsl
or
mov
push
mov
ret
push
mov
and
cltd
insb
movsb
inc
pop
movsl
and
mov
inc
and
or
jecxz
push
and
inc
push
inc
insb
mov
cmp
arpl
or
fmul
and
fistpll
mov
stc
mov
das
pop
adc
sbbl
js
or
push
cmp
xchg
aaa
test
test
push
and
cmp
rcrb
sbb
and
fmuls
imul
mov
dec
subl
and
addl
adc
lahf
ljmp
lret
out
je
sub
adc
stc
pop
movsb
imul
pushf
mov
into
mov
inc
mov
and
pop
jp
mov
and
jl
push
cs
addl
xchg
enter
je
dec
dec
cltd
sbb
outsb
popa
rcrl
sub
and
pop
push
aam
lds
ret
and
repz
xor
jge
int3
and
loope
insl
les
sub
mov
or
in
lcall
sbb
mov
iret
aas
inc
xchg
jo
popa
inc
and
outsb
daa
mov
and
jb
jmp
jle
and
call
cmp
adc
lcall
add
lock
lds
dec
je
and
lods
jb
xchg
inc
xchg
movsb
fisubl
int
das
cmp
dec
and
mov
push
andb
insl
sbb
adc
jmp
cmp
xchg
xor
ja
test
and
ds
in
ret
pop
stos
cmp
adc
sbb
out
and
gs
mov
ret
int3
sbb
jecxz
fucomp
or
push
sarb
mov
je
aam
icebp
xor
cmp
aas
pop
sub
pop
and
stos
dec
push
jns
mov
fucomip
mov
sbb
push
jmp
scas
out
inc
sbb
in
nop
icebp
mov
xor
inc
dec
out
cmp
pushf
dec
loopne
fdiv
lret
sbb
ret
push
jmp
cmp
xchg
mov
outsl
jle
adc
jmp
and
inc
dec
mov
hlt
mov
cmp
test
mov
adcb
and
lcall
sub
push
rcrl
mov
adc
in
dec
dec
shrd
addr16
leave
and
jmp
lock
cmp
mov
repz
mov
xchg
dec
shlb
mov
mov
jns
ss
aam
fs
mov
adc
adc
mov
pop
in
insl
out
ljmp
mov
fcoml
clc
inc
jbe
add
and
loopne
jmp
mov
mov
cltd
lods
cmpsb
loop
in
popa
xor
idivb
and
cmpb
push
cmc
imul
pushl
add
jbe
test
mov
dec
xor
push
fimull
test
adc
rolb
mov
and
xchg
mov
lods
xchg
jnp
sbb
mov
popa
add
jno
movsb
sub
jle
das
pop
xchg
jnp
stos
out
sti
push
and
xor
push
int3
fwait
loop
and
ds
push
das
das
bound
iret
dec
test
xchg
and
mov
and
insl
popa
adc
mov
dec
shl
call
xchg
rorb
sbb
mov
add
xchg
jg
and
xor
mov
cs
mov
and
test
cli
mov
jo
pop
sub
sbbb
aas
xchg
fmull
pop
les
nop
imul
jae
mov
cmp
inc
and
xor
jmp
push
and
inc
fsubl
rorl
dec
xchg
mov
mov
popa
addb
xchg
jmp
fdivl
push
push
add
ds
js
pop
loop
aas
popf
int
pop
decb
in
pop
pop
dec
xchg
stc
pop
ret
sub
daa
mov
aaa
add
xchg
pop
lock
and
and
nop
ljmp
fcoml
lods
sbb
shrb
loope
popa
add
pushf
and
xchg
in
xor
inc
adc
adc
xchg
xchg
pop
and
xchg
clc
jp
movsl
and
lret
cs
mov
cli
pop
cmp
push
mov
faddl
add
cmp
or
bound
and
and
adc
nop
loop
or
fadd
dec
cmp
push
aas
je
dec
icebp
mov
mov
loop
test
or
jns
sbb
mov
sbb
int
mov
call
and
jge
ds
in
das
and
shll
movsb
sbb
dec
lret
jl
xchg
arpl
xchg
fdivrl
mov
sbb
add
decl
icebp
fwait
cmp
xchg
jnp
je
mov
ret
and
loope
push
fbstp
mov
inc
inc
clc
sbb
cmp
sbb
dec
mov
sbb
lret
cltd
jae
push
sbb
pusha
lahf
dec
add
pop
mov
jg
or
mov
stos
xor
popa
pop
fsubl
bound
shlb
iret
test
jae
dec
mov
and
xor
pop
sbb
or
xor
loope
and
je
out
jbe
add
int3
jge
sbb
adc
or
scas
fimuls
outsl
push
xchg
xlat
fisubl
ds
mov
mov
sub
lahf
dec
sbb
and
cmpsb
pop
sbbl
sub
xor
or
and
fcoml
or
or
sub
mov
out
int
add
cmpsl
and
lods
add
jnp
and
adc
shlb
mov
scas
aaa
shlb
jmp
and
cmpsl
adc
call
xor
fisubrl
imul
and
push
push
fxch
cmp
test
scas
add
lcall
cwtl
out
test
test
aas
scas
cmp
pop
jno
xor
lods
and
clc
xor
mov
xchg
aaa
jmp
push
push
and
mov
jecxz
xchg
into
and
das
xor
add
and
incl
in
mov
fsubl
and
mov
xor
repz
adc
fwait
inc
popa
mov
push
dec
aam
pusha
pop
adc
repnz
popf
insb
and
lret
and
leave
popf
add
test
lcall
jns
sti
adc
int
sbb
out
dec
inc
mov
insl
cmc
jmp
aam
xchg
adc
and
inc
inc
stos
fmuls
test
lods
jbe
pop
pop
aaa
mov
xchg
adc
andl
jae
push
iret
icebp
inc
test
cwtl
mov
or
fs
adc
and
ss
xor
or
outsb
nop
mov
in
mov
mov
enter
or
lahf
and
xor
lcall
aam
xchg
xlat
and
test
mov
xchg
sbb
and
or
mov
and
push
out
and
mov
aad
loopne
test
pusha
pop
pop
iret
popa
or
sbb
out
and
nop
iret
jp
jns
lret
rcl
jno
mov
and
push
test
fsubs
pop
and
mov
push
andl
or
push
mov
dec
mov
mov
je
xlat
xchg
aam
mov
fneni(8087
sub
rcl
imul
push
mov
bound
lret
cmp
mov
and
sub
movsb
and
leave
mov
push
xor
or
gs
movsb
mov
popa
and
ror
stc
dec
and
add
mov
je
adc
lahf
sub
fwait
popa
cs
ss
sbb
mov
push
rcrb
dec
repz
adc
dec
xchg
test
lock
clc
fwait
and
inc
bound
sahf
add
in
in
cs
add
push
fistpll
mov
dec
jmp
loopne
sub
jp
and
cmpsb
sbb
cmpsl
outsl
and
cmp
imul
push
cli
fwait
xchg
test
in
adcl
js
gs
mov
push
mov
push
inc
iret
push
popf
mov
cmc
push
lcall
and
lea
and
aam
incb
out
or
rorl
dec
in
mov
imul
push
int3
or
add
mov
and
or
jns
aad
mov
dec
inc
outsl
dec
adc
cmpsb
push
enter
inc
xchg
lret
popa
sbb
xchg
int
sbb
xor
sbb
xchg
push
leave
imul
jmp
push
add
pushf
ljmp
push
sbb
iret
and
mov
clc
or
add
add
pop
push
daa
xchg
stos
dec
outsl
dec
test
push
inc
pop
jno
lea
lret
cmp
or
js
loop
jno
popf
adc
sbbl
xor
test
popa
inc
add
dec
jnp
movsl
int3
sub
adc
push
adc
push
add
fnstenv
sahf
out
jno
pop
mov
mov
rorb
addr16
imul
int3
mov
std
scas
aad
test
sub
mov
mov
sub
shr
jno
gs
fcoms
daa
insl
push
inc
and
shll
push
repnz
int
mov
shlb
jne
fsubp
test
xchg
lahf
and
icebp
cmc
mov
test
push
aam
and
test
fcoms
std
adc
jle
test
and
and
loopne
mov
out
and
outsb
or
mov
add
leave
sbb
pushf
adc
sub
mov
xor
mov
pop
and
add
sub
cmp
aas
andl
fistpll
adc
cltd
rcll
cld
cli
xor
pop
gs
outsl
xlat
add
mov
mov
and
or
or
inc
outsb
mov
outsl
and
sbb
nop
xchg
jne
aas
and
sbb
insl
dec
inc
scas
inc
ss
mov
popa
adc
mov
and
and
cltd
jge
pop
clc
in
js
movsb
mov
pop
mov
and
cmpsb
iret
in
fsubr
movsb
shr
dec
adc
cld
mov
and
mov
in
rolb
or
and
mov
aad
adc
mov
pushf
lods
and
sbb
push
cmpsb
int3
and
adc
lods
cld
loope
sub
fld
mov
pop
jecxz
jne
test
test
adc
test
lret
repnz
inc
pop
insl
lods
push
in
lret
dec
lds
xchg
jmp
adc
jbe
push
cmpb
mov
and
imul
jns
and
aad
ljmp
repz
inc
adcl
push
cmp
mull
xchg
xchg
ljmp
and
notb
cmp
xchg
mov
sahf
test
fcmovnbe
and
lret
dec
add
stos
pop
and
dec
dec
hlt
mov
pop
icebp
cwtl
shll
xchg
mov
test
and
xor
and
loopne
mov
test
jne
and
jp
jl
jmp
pop
cmpb
stos
add
cli
inc
dec
jge
and
fsubrs
enter
add
arpl
outsb
fstpl
push
mov
mov
jp
mov
mov
jno
sub
ds
xor
ljmp
push
sar
stos
cwtl
lods
dec
sub
in
mov
pop
sub
sbb
popf
push
sub
or
dec
lods
sar
jns
cmpsl
sub
stos
jno
jmp
or
popf
int
loopne
xor
jbe
mov
nop
xlat
pusha
lret
aas
and
mov
sub
sbb
and
inc
adc
and
inc
popa
xchg
cmp
popa
sub
and
jbe
adc
mov
mull
lret
movsb
inc
mov
mov
and
mov
dec
pop
mov
jg
and
pop
and
cwtl
movsb
push
dec
cmc
mov
out
outsb
sbb
cmp
lods
mov
pop
jo
cmp
scas
shl
inc
and
push
lods
test
push
jl
iret
lret
jmp
outsb
aas
sbb
popa
add
cli
ffreep
subl
aam
sub
xchg
test
mov
mov
orl
jp
and
push
insl
jno
inc
sub
mov
mov
cld
push
sbb
cmp
sub
ja
into
add
xchg
xchg
and
cmp
push
out
mov
je
das
mov
xor
mov
lret
arpl
fsubrp
jns
insl
dec
jns
jns
xor
mov
ret
or
add
adc
mov
dec
sbb
push
sub
dec
jne
mov
iret
xchg
call
cld
push
and
pop
ret
inc
mulb
loop
fmuls
sub
sub
orl
add
sbb
loop
xchg
and
shlb
dec
and
inc
mov
push
and
jle
cmc
push
xorb
insl
lea
jmp
orl
jae
mov
ss
mov
push
jnp
cltd
and
and
outsb
cltd
shrd
and
mov
sub
enter
sub
pop
pop
xchg
push
inc
jae
and
iret
inc
mov
stos
ret
popa
fsubs
mov
icebp
mov
xchg
pop
and
fs
repz
dec
out
cmpsl
add
in
and
xchg
ljmp
cmpsb
adc
jge
and
sbb
add
xlat
and
and
xor
inc
out
and
subb
jmp
adc
fstp
insl
xchg
xor
and
xor
aad
enter
push
ds
movsl
int
mov
test
in
mov
movsb
outsb
xor
add
xor
or
aad
xlat
orl
sub
rorl
cli
loop
add
push
movsb
xchg
jmp
pop
ret
xor
incl
arpl
dec
movsb
lds
xor
mov
and
testl
pop
outsb
movsb
cmp
lods
daa
inc
mov
dec
imul
mov
jge,pt
test
movsl
and
fbstp
daa
and
pop
inc
lods
mov
mov
std
jge
sahf
popf
cmp
pusha
push
test
and
je
nop
imul
outsl
sub
xchg
mov
sub
mov
fistpl
shll
add
testb
mov
int
and
add
es
loop,pt
scas
inc
andl
aas
js
pop
enter
jl
inc
inc
mov
jno
mov
cmp
dec
pop
and
scas
xchg
xor
xchg
cmpsb
push
stc
push
in
popa
push
in
push
sti
es
pop
and
xor
mov
add
and
jo
js
in
in
and
daa
mov
cmpsb
adc
and
call
xlat
stc
popa
xor
loop
push
and
loope
push
dec
lea
lcall
mov
add
mov
mov
inc
aas
and
adc
sub
and
xor
andb
lods
int
sub
test
jnp
pop
dec
sbb
and
cmp
test
movhps
test
insl
jnp
stos
fimuls
imul
loopne
adc
lcall
pop
jmp
out
push
sub
xor
xchg
jne
ficompl
pop
xchg
cmp
push
sub
and
js
les
mov
shl
icebp
call
pop
cmpb
add
shll
sbb
cmpsb
iret
cmp
xor
jp
inc
das
push
jle
cltd
cltd
pop
lods
fsubl
jge
add
and
sbb
add
test
and
cwtl
loop
jmp
ret
stc
push
cmpsl
xchg
jp
and
scas
fimuls
aaa
sub
test
jp
adc
test
mov
push
push
and
repz
je
cmc
xor
and
cmpsl
aam
aaa
mov
cmpsb
hlt
or
xor
stos
and
pop
xchg
sub
cmpsb
mov
sub
gs
or
test
clc
mov
push
mov
in
pop
sub
pop
and
pop
adc
imull
in
out
lret
push
xchg
push
das
pop
cmp
shrl
jae
andl
in
in
add
mov
sbb
adc
lahf
jbe,pt
push
jecxz
movzbl
and
fs
jnp
lods
adc
and
add
dec
cltd
lods
pop
mov
cmp
int
inc
push
fbld
push
inc
lahf
and
lahf
jbe
and
popa
pop
push
push
and
xlat
fstps
gs
jae
inc
das
push
sub
dec
aas
test
inc
sbb
daa
adc
icebp
and
mov
push
xor
fucom
sbb
lods
xchg
xor
out
cmpxchg
es
fs
xor
lret
shl
sub
ds
lahf
and
sbb
aas
test
scas
xchg
pushf
jno
clc
and
aad
xchg
int3
jmp
push
and
ljmp
jno
sub
jnp
fwait
in
iret
mov
lea
sti
jmp
pop
loope
sbb
push
jb
test
shll
fisttps
es
mov
fsubl
sub
sub
rcrb
in
int3
add
mov
sbb
push
fnsave
and
test
xor
sbb
adc
ja
push
mov
adc
mov
lods
add
test
and
lds
mov
cmp
inc
xor
outsl
jae
and
xlat
test
fsubrs
iret
xor
subl
mov
push
dec
add
cmp
shll
mov
pushf
push
in
jno
inc
mov
out
pop
add
dec
pop
and
popa
sub
and
outsl
hlt
or
inc
gs
rcll
pop
push
fdivs
mov
pop
outsl
or
mov
adc
sarl
adc
lahf
xor
arpl
shl
mov
and
subb
xchg
lret
add
and
mov
clc
mov
mov
push
xor
call
dec
mov
mov
das
mov
push
pop
lcall
mov
or
out
sbb
and
jns
and
adc
lcall
jne
pusha
mov
mov
mov
inc
add
addr16
shlb
xorl
testb
mov
cwtl
pop
inc
jno
leave
test
divl
and
pop
movl
loope
push
mov
repz
outsb
cmp
inc
and
adc
imul
testl
lods
sub
xchg
insl
iret
sub
das
jmp
sub
inc
xchg
mov
xchg
and
stos
cltd
into
and
adc
nop
push
dec
inc
adc
ss
js
shll
add
popa
fistps
and
inc
movsl
and
pop
call
mov
jl
and
adc
cwtl
retw
adc
cmpsb
pusha
mov
pop
or
fsub
mov
filds
jge
and
lock
into
dec
cmc
cmp
jno
inc
pop
add
jnp
cmp
adc
or
push
mov
popf
add
cmpsb
popa
fdivl
sub
aaa
mov
pushf
mov
mov
and
push
sub
daa
test
pop
adc
push
push
xchg
and
xor
cmp
and
push
dec
popa
loope
scas
adc
inc
and
out
jo
mov
mov
add
cmp
and
add
lret
add
pop
jp
dec
and
test
fisubl
or
cmc
and
cmpsl
nop
dec
outsb
push
mov
and
addb
out
fidivrl
test
lds
push
je
lock
int3
fwait
jg
sbb
int
fistl
je
sub
and
pop
sbb
pop
fwait
imul
lock
mov
andb
xchg
lret
pop
and
das
rcr
pusha
icebp
push
stos
mov
ret
pop
jne
inc
pop
mov
lcall
and
dec
or
out
call
scas
cmp
dec
pop
mov
movsb
and
xchg
inc
and
xor
push
roll
cmp
jno
mov
inc
sbb
lock
xor
cmp
or
fidivrl
sbb
add
and
inc
ljmp
clc
push
sbb
and
repz
stc
pushf
popa
cmpsl
mov
mov
into
loopne
insl
mov
repnz
mov
andb
or
popa
outsb
fstps
xor
xchg
jmp
pop
mov
insb
mov
and
mov
jl
notrack
mov
sahf
outsb
and
add
jbe
mov
lods
sbb
mov
mov
out
sub
enter
cmpsl
dec
pushf
mov
cmp
cmpsb
mov
testl
orl
xchg
icebp
xchg
aas
adc
lea
insl
mov
jg
test
xchg
jle
cltd
push
mov
sbb
pop
sub
lods
popf
popa
pop
push
push
sub
cmp
leave
mov
inc
in
js
mov
mov
andl
and
dec
push
std
mov
cli
mov
je
imul
mov
shrb
cmpl
mov
in
mov
and
dec
lods
int3
in
xchg
cld
dec
and
jno
call
and
loop
hlt
dec
pushf
jge
lods
outsl
xor
and
in
inc
jle
jge
mov
je
mov
and
sub
das
test
jnp
mov
add
lahf
and
lods
shll
push
out
rcr
jmp
mov
mov
push
movsl
xchg
lds
or
ret
and
stos
mov
in
jmp
pop
mov
and
ljmp
and
inc
push
mov
jmp
inc
popa
popa
testl
dec
dec
movswl
mov
push
jo
mov
xchg
jg
mov
push
fisttpl
xor
ja
cmp
dec
inc
jg
fcomi
mov
aad
test
adc
test
call
clc
sbb
les
adc
loop
arpl
or
xor
add
mov
mov
sub
rcll
test
mov
shrl
xchg
iret
imul
and
jmp
imul
stos
cmovs
cmp
xchg
test
and
sbbl
sahf
sbb
pusha
imul
ret
insl
and
cmp
mov
and
loopne
addb
sub
and
sub
mov
aad
call
js
imul
dec
jno
lods
idivb
jae
and
dec
incb
push
int
sbb
add
xlat
test
rcrb
das
stc
sub
mov
lods
fisubs
fs
movsl
mov
xor
clc
or
imul
daa
inc
mov
and
sub
es
rcll
add
rolb
rcr
mov
and
ja
imul
xor
loopne
or
adc
out
shlb
lret
cwtl
shlb
push
mov
mov
inc
push
ljmp
mov
jge
fcmove
cmpsb
scas
and
cmp
cmp
roll
and
mov
std
adc
movsb
fxch
stos
dec
mov
xor
movsl
add
jl
jge
popf
cmp
pushf
es
mov
mov
mov
cmpb
adc
or
movsb
mov
rcrl
dec
imul
sti
rcll
andb
call
mov
and
dec
xchg
movsl
sahf
adc
dec
jl
sbb
pop
into
popf
cs
mov
stc
in
mov
sbb
cmp
cli
cmp
add
mov
jp
mov
aad
rcrb
lods
and
mov
inc
cs
andl
in
mov
and
insl
cwtl
and
xchg
add
and
and
test
inc
out
sahf
mov
cmp
pushl
test
mov
adc
and
test
lock
xchg
and
out
divl
push
and
cs
das
add
sub
push
popf
push
fsubl
popa
in
sub
shlb
mov
push
mov
mov
mov
inc
daa
add
repnz
mov
sub
jne
sbb
adc
and
pop
sti
add
movsb
clc
arpl
mov
xchg
pop
push
mov
in
pop
mov
jl
inc
bound
addl
fsubl
mov
jg
and
aad
xor
pop
popa
mov
cmpsb
mov
test
or
andl
adc
cmpsb
mov
jne
dec
mov
mov
and
negl
mov
inc
and
in
sahf
mov
pop
loope
test
mov
and
shrb
shll
xorl
aaa
movsb
movsl
mov
xchg
xor
inc
sub
and
shll
insl
and
call
movl
sub
data16
mov
xor
xchg
push
fcomi
mov
lcall
nop
lret
nop
lock
xchg
out
sbb
sub
xchg
push
lods
and
cmp
push
mov
adcl
rcll
mov
sbb
nop
inc
popa
popa
mov
pushf
mov
adc
push
jle
fisttps
and
mov
decb
push
mov
sbb
add
xchg
sbb
sub
or
ja
xchg
jbe
mov
into
mov
inc
adcl
jb
fildl
cmpsb
jns
push
and
fstps
icebp
mov
loope
push
ljmp
lahf
inc
jb
and
dec
dec
and
leave
ret
push
add
sbb
xor
mov
push
and
or
add
jmp
add
mov
sub
popf
mov
lods
and
out
push
in
mov
jl
sbb
or
mov
and
sbb
test
std
ja
and
outsl
movsb
cmpsb
pop
movsb
sbb
xchg
mov
jns
sub
and
mov
and
ret
xor
mov
and
cmpl
enter
xor
bound
cld
lcall
and
add
popfw
push
and
into
pusha
mov
xchg
in
and
cwtl
adcl
push
enter
jno
pop
loopne
mov
xchg
mov
pop
sahf
and
xorb
push
cwtl
arpl
add
sub
mov
mov
push
out
sti
push
dec
out
cmpsb
xlat
std
mov
xor
in
add
pusha
inc
jne
xor
test
sbb
add
xorl
mov
adc
add
mov
inc
push
aad
add
push
sbb
aas
xor
or
cmp
jecxz
fistps
fldt
movsb
loope
jle
pushf
in
roll
xchg
jg
push
adcl
and
xor
and
and
jbe
cltd
movsb
imul
popf
mov
sub
pop
push
sub
fwait
mov
push
int
in
sub
int3
xchg
mov
and
push
dec
jl
loopne
fistl
xor
push
mov
jns
fdivrs
ret
push
adc
or
ljmp
cmp
and
push
call
adcb
push
and
cmp
les
sbb
cmpsl
jno
sbb
mov
sub
sbb
jle
or
fwait
mov
sbb
ret
jbe
in
and
int3
shll
mov
in
xchg
mov
jge
lds
and
or
xchg
les
xor
and
push
movsl
adc
lds
xlat
push
and
mov
clc
dec
adc
ret
outsl
and
mov
jge
jge
fwait
push
and
mov
push
cltd
pusha
js
xor
andl
shrl
and
xor
push
je
cmc
fisubs
and
xor
icebp
cld
out
mov
mov
dec
or
in
sbb
loop
mov
pop
push
cwtl
out
repz
lds
aaa
mov
xchg
out
dec
and
add
lods
divb
cmp
cmpsl
pop
lret
ds
pop
cmpl
cltd
sbb
test
push
mov
hlt
push
imul
inc
lahf
movsl
cli
add
and
push
or
and
hlt
iret
cmp
and
cwtl
lret
jb
pop
movsb
dec
mov
ret
icebp
mov
ret
dec
cmp
fldcw
das
adc
sub
and
aas
mov
pop
and
xchg
pushf
outsl
and
xor
and
sub
mov
sub
and
inc
push
fwait
and
aas
push
jbe
out
add
xor
les
outsb
push
test
mov
aad
mov
je
mov
int
test
xor
mov
cmp
sub
xchg
pusha
adc
add
mov
push
cmp
xchg
cmp
jo
aaa
inc
or
int
nop
mov
movsl
or
test
and
dec
jb
in
fucomip
fbld
sbb
xor
jnp
xchg
and
shlb
lods
pop
pop
and
xchg
dec
sbb
mov
fcomp
jg
pop
and
inc
mov
movsb
push
and
pop
addr16
jmp
iret
cmc
das
lret
sub
pushf
gs
ret
xchg
and
push
dec
mov
and
into
lds
jbe
and
aad
inc
or
fcmove
rclb
push
lea
scas
push
inc
push
sub
pop
and
test
cmp
push
ds
lock
adc
adc
cwtl
mov
and
pop
and
adc
and
mov
jo
fsubl
jbe
cmp
pop
fsubrs
ret
fisubs
fstpl
mov
jp
mov
arpl
add
and
sub
pop
mov
push
cmp
aas
push
mov
mull
rol
mov
and
jae
scas
lods
cmp
fbld
test
lods
faddl
call
xor
and
jecxz
lods
push
or
insb
pop
adc
lcall
mov
xor
inc
popf
frstor
xchg
add
pusha
fptan
xor
mov
inc
les
out
insb
imul
test
mov
loopne
pop
lods
mov
fwait
ficomps
xor
std
cli
xor
add
test
stos
testl
mov
pop
aam
push
call
int
cs
std
add
popa
pop
pop
sbb
xchg
fiaddl
test
fldln2
loop
iret
xor
cmp
loopne
xor
mov
and
ja
imul
sub
sti
and
add
out
sub
and
xor
rorl
pop
mov
enter
xor
push
sub
ror
mov
xor
adcl
leave
mov
loope
jge
jge
and
popf
adc
int
in
and
scas
mov
and
pop
ret
pusha
movsb
mov
xchg
and
push
cmp
dec
sub
clc
inc
mov
jge
fsubrs
sbb
and
bound
lcall
cmpsl
xor
loope
inc
xchg
dec
sub
add
and
push
dec
stos
push
rcrb
roll
addr16
ja
mov
clc
sub
inc
and
inc
std
adc
pop
mov
push
xchg
repnz
dec
fst
es
addr16
hlt
push
adc
stos
pusha
cmpsl
push
lods
jmp
cld
into
or
fbld
outsb
pushf
popa
flds
pop
fisttpll
dec
cmp
out
xor
jecxz
jno
nop
xor
sahf
cli
inc
push
sbb
pop
sbb
jae
popa
jp
sti
xrelease
arpl
xor
cltd
or
outsb
gs
into
jnp
cltd
mov
and
nop
mov
fwait
cwtl
sub
fs
popf
idivl
lock
fwait
stc
jl
mov
mov
out
xor
sbb
rorb
mov
aas
lahf
jg
and
xchg
call
and
push
mov
aas
out
arpl
xor
imul
inc
pop
mov
mov
mov
xor
sbb
rolb
ret
pop
lea
mov
in
and
or
frstor
or
sub
and
rcrl
pop
pop
lahf
in
dec
fcompl
rolb
cltd
or
and
pop
cmpsl
mov
aaa
das
cld
addl
mov
adc
stos
das
add
dec
in
in
pop
rcrb
and
movsl
push
or
and
mov
xchg
clc
sbbl
and
popa
dec
push
pushf
mov
cmp
and
cwtl
and
xor
push
cs
in
mov
lret
xchg
testb
push
stc
sarl
inc
push
xor
pop
mov
das
gs
and
mov
xchg
and
mov
pop
aas
andl
mov
and
mov
mov
lods
and
adc
and
mov
shll
push
lahf
fwait
scas
das
sub
dec
in
jp
aas
inc
xor
dec
and
xchg
inc
mov
addr16
jno
ss
adc
push
sub
shlb
mov
and
loope
out
jecxz
rcl
pop
gs
mov
lahf
and
or
mov
sahf
and
sub
cmp
push
xchg
in
gs
loopne
out
inc
mov
or
pop
add
ds
popa
or
xchg
sub
stc
in
test
mov
sahf
pop
sbb
add
shlb
rorl
rclb
and
outsb
mov
adc
dec
imul
sub
shr
mov
sub
cmpsb
inc
jl
xchg
inc
loop
in
and
test
push
dec
into
inc
mov
int3
xchg
jbe
cmp
out
outsb
popa
sbb
mov
mov
dec
add
pusha
arpl
and
testb
mov
icebp
hlt
sbb
ret
test
or
and
in
sahf
movsb
jne
fchs
push
cltd
push
cmc
and
pop
mov
fcmovb
and
and
stc
cmp
mov
dec
repnz
lahf
mov
pushf
mov
rolb
inc
dec
and
cli
clc
repz
sbb
fsubrl
add
repz
or
movsb
and
je
subl
sbb
insb
ljmp
testb
pusha
mov
cmp
jge
imul
mov
sbb
mov
dec
sub
and
jp
dec
jns
xor
push
and
jecxz
inc
and
aaa
cli
orl
and
int
cmp
lock
sbb
sub
and
pop
mov
cld
and
arpl
daa
shr
dec
in
das
dec
jecxz
sbb
cmpb
mov
daa
fists
and
sub
pop
cli
push
scas
mov
es
mov
lea
nop
inc
adc
out
repnz
cld
pop
push
dec
movsb
rcrb
jb
mov
and
js
lret
sbb
shr
or
and
call
and
arpl
mov
and
mov
movsb
aam
or
xor
push
shrb
mov
fsubrs
and
xor
scas
inc
jne
shll
sarl
fcmove
insl
std
cmp
cmp
inc
and
pop
push
push
loopne
add
xor
push
nop
icebp
inc
aas
into
hlt
shlb
push
je
mov
mov
filds
xchg
enter
xchg
mov
loop
mov
loop
xchg
add
sbb
rcrb
aam
es
aas
pushf
mov
lods
fwait
xor
and
mov
and
cs
and
das
pop
enter
leave
and
adc
push
loope
pop
sub
mov
push
pusha
and
mov
push
and
fisubl
sub
int3
sub
and
movsl
idiv
addr16
and
push
and
dec
inc
iret
and
dec
loope
and
fcmovne
pop
xchg
in
jmp
jns
push
stos
mov
xchg
test
mov
popa
jb
test
sub
xchg
mov
popa
js
sub
andb
movsb
mov
enter
and
adc
xchg
daa
popl
mov
jecxz
mov
stos
rolb
ds
cmp
aaa
andl
dec
add
push
in
sti
inc
xchg
out
movsl
mov
repnz
sbb
or
adc
loopne
dec
aaa
in
and
mov
or
pop
sahf
stos
mov
fbld
inc
mov
mov
das
push
pop
sbb
mov
push
mov
push
pusha
pusha
out
je
push
xchg
call
and
mulps
das
xchg
out
lret
inc
cmc
inc
jne
stos
fidivl
aaa
in
push
insb
or
iret
mov
adcl
gs
test
negb
inc
popa
xlat
mov
and
lods
in
ds
fldenv
inc
xchg
shlb
ret
outsb
cwtl
jle
push
pushf
add
test
jl
int
lret
sbb
xchg
scas
sysret
mov
push
and
iret
push
fimull
stos
pop
ds
mov
xchg
sbb
pop
sub
mov
dec
cmp
filds
inc
sbb
adc
and
jns
or
scas
push
rorb
adcb
pop
jae
mov
mov
lret
inc
xor
repz
in
cmp
jne
dec
dec
loopne
and
and
adc
cmpsl
dec
repnz
or
aaa
lret
rolb
fldenv
ja
test
dec
mov
pushf
push
out
std
jae
scas
sti
inc
mov
xlat
jl
insl
and
pop
scas
mov
jo
aaa
addr16
push
movsl
pushf
xchg
enter
movsl
gs
and
pop
jp
sub
mov
push
xor
sbb
xorl
dec
add
shll
insl
jmp
push
fists
sub
stos
loopne
and
sahf
cmp
and
mov
mov
inc
pop
lcall
hlt
adc
jmp
fidivl
dec
fcmovnbe
xorb
cs
xchg
push
shrb
adc
adc
mov
das
sub
test
daa
lret
mov
xchg
imul
jmp
inc
and
lds
icebp
inc
dec
sub
sbb
mov
es
cmp
cmp
dec
or
insl
mov
sbb
mov
lods
test
jno
dec
adc
inc
inc
int
jmp
push
mov
xchg
insl
adc
xchg
stos
cli
xchg
xchg
sub
and
pop
pop
add
movsb
push
inc
and
inc
xchg
push
sub
mov
and
ja
shl
test
mov
jge
sub
cld
popf
lds
add
fcoms
mov
pop
dec
movsl
mov
inc
push
imul
and
mov
leave
in
test
xchg
cmp
in
lods
lods
sbb
sbb
f2xm1
push
test
negl
popa
add
jbe
jmp
inc
mov
mov
sbbb
shl
es
xchg
xchg
insb
jge
pop
inc
mov
test
mov
cmp
xor
xchg
popf
add
and
shrb
ss
shlb
sbb
pop
lods
mov
leavew
dec
iret
mov
popa
call
mov
cmc
push
and
iret
jecxz
fildl
xchg
push
orb
jecxz
out
mov
pop
fwait
lods
jle
je
mov
test
int3
jno
jbe
cmpsb
std
scas
and
inc
or
mov
mov
lock
jne
add
push
adc
incb
cmp
cmp
in
inc
stc
mov
movsl
fwait
inc
sti
into
pop
and
stos
test
and
stos
adc
xor
jbe
pushf
sbb
jmp
mov
xor
cmp
dec
pop
mov
pop
and
stos
mov
mov
inc
push
test
mov
das
xchg
mov
orl
and
or
add
push
loop
jg
pop
and
jns
push
outsl
and
popf
and
mov
das
cmp
repz
scas
mov
icebp
jg
shl
in
inc
adc
mov
push
and
or
aad
fcmovnu
bound
sub
mov
dec
sarb
push
aas
sti
xchg
mov
cmp
and
clc
repnz
inc
xchg
and
xchg
xor
test
sub
cmp
adc
cmp
and
call
pop
add
xchg
jbe
arpl
xor
xchg
dec
jno
jae
mov
scas
popa
and
xchg
adc
lock
mov
out
das
testl
push
addr16
mov
jnp
inc
out
xchg
and
or
das
pop
adc
inc
call
xor
xchg
and
mov
jb
and
stc
cmp
scas
xor
and
cmp
mov
push
pusha
in
aas
outsl
push
sub
and
jb
test
cmpsl
mov
sub
dec
mov
and
inc
daa
outsl
sti
cmp
jnp
das
fucom
mov
dec
mov
inc
add
movsb
movsl
rorb
stos
mov
in
ss
mov
mov
add
xchg
dec
test
mov
dec
cmpsb
fildl
sub
or
scas
das
loopne
out
mov
sub
adc
xchg
push
and
stos
xchg
xor
cmp
pop
mov
scas
pop
in
popf
in
popa
mov
data16
jb
aas
sub
sbb
ret
mov
pop
or
sarl
xor
mov
sahf
jb
daa
in
jae
inc
fnstenv
test
and
jle
js
jae
and
shll
shrb
loop
mulb
cmpsl
mov
mov
pop
and
xchg
mov
push
and
inc
add
mov
push
push
jnp
in
and
clc
nop
pop
mov
push
popf
mov
or
fstps
or
push
mov
push
push
cmp
dec
ficomps
pslld
pusha
scas
cltd
mov
inc
outsb
aaa
mov
stos
decl
jbe
and
jge
shrl
push
sub
js
and
add
clc
or
or
cmp
sbb
and
imul
sub
mov
cmp
daa
push
insb
loope
mov
inc
and
das
repz
jbe
inc
pop
and
dec
lds
ljmp
cwtl
or
add
cmp
xchg
and
aas
inc
xchg
popa
dec
pop
cmpsb
lret
xchg
and
push
out
jp
xchg
out
mov
daa
and
pushf
mov
adc
or
add
mov
ret
or
xor
xchg
adc
or
lds
push
and
loop
in
xchg
lret
loopne
dec
cmp
enter
add
jmp
clc
pop
and
fdivrl
sbb
outsb
mov
into
or
and
in
push
stc
rolb
fucomip
and
sahf
or
test
mov
or
jecxz
inc
mull
ficomps
pop
xchg
jbe
or
lods
fwait
loop
and
jl
xchg
xchg
or
sbb
outsb
sub
adc
and
insb
mov
lahf
aaa
and
inc
lea
mov
sub
dec
loopne
stc
jnp
jae
xor
and
inc
push
das
cmpsb
test
cmc
inc
aam
and
pop
in
pop
pop
lret
jmp
mov
flds
xor
and
and
push
fsubs
gs
icebp
push
outsl
idivb
push
mov
cmc
lahf
cmpsb
mov
sti
ret
leave
push
inc
sbb
dec
inc
cmpb
mov
or
push
cwtl
add
add
movsb
sbb
icebp
ds
nop
mov
push
pop
add
cmc
pop
flds
and
dec
mov
cwtl
and
int
adc
sub
dec
js
insb
outsb
inc
negl
mov
jg
sub
sub
and
fnstenv
inc
je
in
and
xchg
mov
mov
dec
fisubl
frstor
cmp
xchg
and
in
stc
and
xchg
imul
mov
xchg
dec
add
sahf
and
cmp
fnstsw
sbb
outsl
aaa
or
add
loop
and
xchg
loope
pop
popf
jbe
and
int3
insl
aaa
and
ret
dec
test
cld
js
and
cmc
sub
pusha
jecxz
addl
inc
mov
scas
test
pop
gs
cmp
out
and
xchg
call
and
cmp
frstor
jecxz
pop
roll
dec
push
in
sbb
and
pop
repz
cmp
dec
and
mov
subl
dec
ss
adc
mov
and
cmp
and
mov
shrb
push
sub
std
fsts
mov
adc
mov
jns
xorb
xor
scas
xchg
pop
and
dec
dec
ljmp
arpl
xchg
and
jle
sub
inc
cmpsl
xlat
mov
lea
jns
mov
push
pop
call
in
and
add
fcmovnu
sbbb
into
cmp
and
ja
aad
jns
mulb
or
jmp
fstps
xchg
mov
sub
in
and
mov
lret
lea
and
and
popf
jno
mov
ds
icebp
pop
mov
mov
repnz
loope
popa
pop
xor
sub
push
and
pushf
mov
and
je
sub
mov
mov
flds
inc
std
adc
push
fisttpll
jbe
push
xor
sub
xor
fsubrs
xchg
inc
aas
add
dec
and
mov
insl
mov
xchg
push
iret
and
cltd
stc
add
aas
fstps
xchg
and
lock
jge
lahf
xchg
mov
adc
cld
enter
scas
jmp
mov
outsl
dec
cmp
jns
lock
subb
xchg
icebp
add
add
push
cli
rclb
dec
pop
sub
cmp
and
dec
les
or
mov
mov
sahf
xor
xchg
xor
mov
mov
mov
mov
dec
hlt
jbe
or
mov
filds
repz
jne
xchg
repnz
test
add
jae
pop
or
gs
mov
rolb
and
inc
add
nop
cwtl
mov
jg
mov
and
inc
and
nop
mov
mov
mov
or
leave
and
and
xor
mov
out
in
rcrb
cmp
das
movsb
jge
stos
movsb
sub
jbe
loop
cmp
add
leave
xor
xchg
dec
mov
add
pop
xlat
push
lods
ret
sub
rep
hlt
mov
and
push
dec
mov
outsl
jnp
and
lods
adc
and
mov
mov
fistl
jle
inc
pop
push
and
dec
mov
ret
lcall
fwait
cs
sub
into
dec
xor
int
daa
mov
mov
sub
adc
pop
and
bound
and
or
push
mov
insl
jg
jl
add
inc
mov
in
or
adc
xchg
and
and
andb
pop
in
xchg
jle
and
mov
movsb
push
and
and
int3
cmp
popa
pop
add
mov
and
mov
xchg
mov
xchg
mov
and
mov
shlb
imul
xor
jno
jno
loope
and
insl
mov
scas
dec
xor
in
test
enter
in
int
imul
xlat
jle
and
lret
and
in
jg
hlt
inc
mov
push
dec
lock
aaa
cmp
and
jmp
cmp
mov
popa
std
jmp
inc
jecxz
cmp
ja
adc
out
xchg
aad
push
cmp
out
sub
sbb
sub
sahf
adc
mov
or
mov
dec
test
es
sub
arpl
pushf
lods
adc
xchg
fwait
ja
pop
mov
adc
inc
sahf
dec
xchg
aaa
mov
rclb
nop
push
mov
cmp
cli
mov
fnstcw
inc
out
push
add
int3
xor
hlt
cs
add
stos
std
pop
pop
gs
scas
push
sbb
xor
daa
adc
fidivrs
mov
xchg
sti
and
cmp
fwait
pop
mov
adc
and
xorl
adc
and
repz
leave
fs
lock
shlb
test
loop
lret
mov
sbb
xchg
insl
out
or
test
mov
in
cmp
insb
sub
test
out
adcl
pop
sub
xchg
test
fcoms
adc
adc
popf
push
outsl
xchg
pop
xchg
lea
mov
loop
xor
pop
push
push
mov
and
push
push
arpl
and
inc
xchg
das
push
sub
and
xorb
dec
iret
popa
adc
xlat
jecxz
lcall
bound
mov
popa
and
jmp
rcr
sub
and
mov
das
in
push
stos
ds
and
cs
lahf
and
mov
and
fnstsw
negl
and
movsb
add
inc
cli
pop
scas
sub
dec
popa
xchg
mov
lret
fnstsw
mov
jnp
jno
dec
in
inc
add
outsl
mov
pop
and
or
sbb
and
sub
cli
rcrl
inc
sbb
push
iret
push
jmpw
ljmp
mov
and
repnz
daa
shll
and
xor
cmp
and
xchg
fucom
test
clc
daa
jno
mov
insl
rclb
mov
mov
daa
in
cmpsl
scas
test
or
mov
add
adc
and
aaa
pop
setbe
xor
and
out
std
dec
mov
repz
push
cmpsl
sbb
adc
scas
mov
insl
out
lret
or
sub
push
stos
lods
loope
bnd
loopne
pusha
int3
cmpsb
outsl
push
dec
test
gs
sbb
sub
fwait
ds
xchg
dec
xor
sub
xor
and
mov
xor
mov
jno
insl
mov
cmp
mov
and
gs
jle
inc
fidivl
sbb
xchg
add
inc
neg
dec
inc
movsl
jbe
inc
xchg
icebp
jecxz
mov
mov
jp
iret
mov
in
les
call
icebp
and
xchg
mov
lods
mov
imul
pushf
and
sbb
lret
and
sahf
mov
cli
int3
dec
adc
in
addr16
stos
inc
cmp
mov
nop
daa
cld
xor
mov
mov
xor
pushf
sbb
dec
fcompl
jae
or
orl
cmp
xchg
imul
outsl
mov
and
in
inc
aam
xchg
jb
test
xchg
fldcw
mov
cmpsb
shll
pop
add
movsb
push
mov
or
mov
jb
and
cmpsb
clc
lcall
repnz
insb
rorl
and
rcrb
hlt
xchg
mov
stc
mov
int3
ss
xchg
and
inc
push
fldt
cwtl
sti
xor
sub
fxch
inc
inc
jne
mov
and
rcrb
and
xchg
and
dec
mov
scas
or
and
test
and
pop
push
mov
dec
sysexit
repnz
pop
lahf
xchg
mov
clc
and
push
mov
lock
js
jno
rolb
int
out
and
call
jnp
jae
mov
lcall
or
das
and
push
int
xchg
loop
popf
and
push
cli
sarb
mov
aam
outsb
jnp
lods
int
adc
adc
push
and
scas
mov
jle
dec
mulb
int3
mov
loopne
fstpt
orl
fimuls
push
sub
stos
and
in
push
mov
sahf
mov
xchg
outsb
xor
movsb
sub
and
inc
out
fistps
cmpsb
push
lea
jg
scas
or
mov
xchg
adc
and
in
push
and
pop
xchg
mov
dec
loope
xchg
lahf
lahf
sti
test
pop
icebp
in
pop
sub
add
aaa
and
pop
int3
iret
lahf
addr16
mov
rclb
cmp
cmpsl
movsb
pushf
and
decl
mov
jnp
mov
popa
clc
popa
movsb
and
adc
xchg
push
lret
jne
ljmp
add
sti
pop
popa
and
adc
dec
lcall
movb
push
fdivrs
fwait
mov
pop
and
xor
mov
notl
inc
dec
fwait
and
fmull
sbb
sub
add
leave
int
and
push
mov
stos
and
outsb
mov
add
cmp
and
aam
popa
or
pop
mov
dec
xchg
sbb
aad
daa
and
cmp
mov
pop
or
and
fwait
inc
arpl
push
adc
das
cmpsb
stos
push
js
stos
fiaddl
and
mov
add
pusha
rcrb
popa
sbb
inc
and
jl
xor
rcll
push
xchg
shlb
jne
mov
in
xor
sbb
or
ret
xor
fadds
popf
push
or
dec
xchg
ret
sti
add
loopne
sub
adc
mov
xchg
popf
cmp
and
mov
and
xchg
mov
and
bound
add
movsb
jmp
dec
sbb
dec
ficompl
popa
mov
and
inc
mov
and
lock
scas
scas
add
pop
mov
sbb
and
mov
cwtl
fistps
and
call
mov
in
lods
and
push
pop
or
jmp
xchg
int
loope
fldenv
sub
and
lock
push
or
dec
popa
arpl
cwtl
shll
das
movsb
test
mov
arpl
leave
insl
jo
and
lock
sub
add
push
sub
ret
mov
sub
cmp
jmp
mov
das
out
fs
and
xchg
pop
sbb
notb
pop
cwtl
and
ljmp
xchg
sub
mov
insl
adcb
ficoml
clc
pushf
and
jle
jno
es
repz
stc
and
and
xor
movsl
ret
fldenv
das
popa
inc
scas
cwtl
stos
mov
sub
cltd
xchg
pop
and
sahf
jne
push
mov
aam
hlt
and
pop
and
std
dec
and
pop
xor
adc
movsl
xchg
inc
pop
push
and
cmc
insb
and
mov
ret
fldl
std
lret
cmp
in
and
and
addr16
ror
push
and
xor
and
cs
mov
cmp
cltd
test
orb
add
shrl
and
inc
and
mov
enter
out
aaa
movsb
jae
mov
frstor
push
stos
xchg
xchg
aad
cmp
inc
in
jg
jb
stos
lods
arpl
push
addb
or
xlat
push
imul
xor
and
jl
push
pop
push
js
and
mov
and
outsb
aad
mov
push
mov
cmp
popa
mov
ja
and
shrb
cmpsb
add
rcrl
and
jo
clc
mov
xor
and
xchg
mov
sub
mov
jae
jmp
popf
orb
jp
rcl
pop
int3
cwtl
arpl
xchg
lret
xchg
and
push
shll
add
into
and
cmpsl
stc
mov
mov
jmp
push
xchg
mov
and
lret
and
jns
daa
fstpt
test
rorb
enter
and
rcrb
xor
and
mov
and
adc
loope
and
inc
pop
mov
and
xor
xchg
jnp
and
popa
nop
and
stos
push
hlt
mov
pop
test
shrl
mov
fidivrl
lock
jae
bts
sub
scas
inc
ja
mov
loop
or
push
mov
and
lea
mov
fs
movsb
cmpsb
push
xchg
rorl
and
xchg
jne
test
sub
push
lods
addr16
xor
daa
in
and
mov
and
mov
xchg
popa
jge
and
and
ret
xor
int3
sub
dec
adc
inc
in
sub
mov
mov
dec
pop
xchg
and
mov
lcall
xor
fistpl
pop
xchg
call
sbb
mov
mov
push
shlb
ficomps
mov
push
pop
sub
nop
xlat
adc
cmp
cwtl
out
inc
shll
shlb
push
and
cmp
xchg
mov
sbbl
mov
and
ret
mov
flds
and
dec
xor
sarl
idivl
mov
xor
jnp
loopne
and
arpl
loop
inc
and
mov
out
mov
pop
lock
cmpsb
push
mov
clc
mov
cmp
and
int
push
xor
dec
lahf
jle
addl
mov
or
xor
or
mov
insl
pop
push
and
lods
loop
aad
jl
and
cmp
rclb
pop
shll
and
je
mov
jnp
and
xchg
jae
mov
aam
lahf
xor
stos
insl
add
cwtl
and
and
fcoms
popf
push
test
cltd
jecxz
popa
jmp
outsl
cmc
and
xchg
mov
mov
lds
xorl
xor
add
xor
push
inc
and
mov
shrb
mov
mov
and
repnz
push
and
adc
dec
lret
dec
mov
and
adc
mov
dec
mov
inc
fdivs
popa
xor
dec
movsb
test
lock
rclb
in
add
int
sub
or
jae
cli
fdivl
push
add
lds
je
mov
jo
and
loope
ljmp
pop
cmp
les
jnp
add
sub
bound
inc
adcl
testb
pop
cld
jo
mov
outsb
and
sub
pop
mov
jb
push
sub
cmpsb
aas
and
mov
jmp
nop
ds
sbb
and
mov
lods
fdivl
xor
and
sbb
cmp
pop
add
mov
call
pop
mov
outsb
jle
int3
cmpsb
fisubs
xchg
jmp
xchg
pop
xor
and
rorl
jo
jns
pop
inc
and
xchg
fisubl
xorb
mov
pop
sub
cli
loop
jecxz
add
stos
fistpll
stos
and
jmp
adc
jbe
stos
xor
cmpsl
inc
sti
sub
xchg
iret
push
push
or
mov
xchg
mov
dec
mov
cmpsb
push
sbb
popa
aas
xor
or
out
test
and
mov
jno
fs
daa
and
push
pop
and
xor
inc
mov
cvtdq2ps
ljmp
adc
cwtl
sbb
mov
daa
and
dec
jnp
inc
movsl
or
loopne
sbbl
xchg
or
orl
test
add
xchg
cmp
inc
xchg
adc
sub
dec
xchg
test
into
cltd
pop
ror
push
push
inc
sbb
jo
sub
mov
cmpl
ss
fdivs
sub
je
gs
sub
bound
aam
and
testb
pop
xor
push
ds
hlt
or
lcall
and
repz
cld
fcoml
mov
lds
call
ljmp
ret
inc
outsb
shlb
bound
data16
icebp
mov
sub
ljmp
jb
mov
dec
ljmp
pop
das
outsl
and
inc
sbb
mul
cmp
dec
and
mov
loopne
mov
fwait
ret
mov
pushf
loop
fiaddl
xor
stos
pop
or
lock
outsb
lea
cmp
and
mov
cmpb
add
adc
xlat
loop
cli
scas
xchg
pushf
mov
test
test
sbb
cmc
xlat
addl
push
xor
and
shrl
and
push
push
subb
sbb
xchg
inc
bound
add
mov
dec
sbb
call
aas
pop
mov
add
push
out
dec
sbb
inc
dec
movsb
mov
push
les
daa
inc
inc
or
push
push
aaa
or
lds
pop
dec
inc
add
jbe
and
pop
popa
scas
lret
out
mov
outsl
mov
dec
xor
aam
inc
adc
mov
andl
jg
sti
add
cmp
ret
dec
push
cmpsb
sub
loop
inc
lahf
je
es
xchg
pop
adc
xor
jle
inc
insl
inc
sbbb
cmp
push
mov
pop
faddl
push
into
push
loope
lcall
adcl
lahf
das
and
xchg
test
fldenv
cmp
sahf
adc
mov
je
out
addl
js
out
shl
popa
pop
or
add
sbb
xchg
push
pop
ja
inc
jae
cmp
lret
push
js
ss
stc
rcll
lds
std
mov
mov
mov
push
jno
das
mov
testl
and
leave
pop
pop
mov
enter
xchg
push
mov
repz
mov
iret
or
cmp
and
pop
jecxz
add
test
cmpsl
cmp
cmpl
jbe
lret
mov
xor
insb
cld
hlt
and
aas
and
xchg
dec
mov
mov
insl
sub
adcl
popa
and
mov
inc
and
out
mov
ret
movsb
mov
hlt
push
lock
adc
imul
jns
arpl
cmp
sti
and
sub
and
aad
outsb
jne
sbb
and
mov
and
movsl
push
or
daa
jae
es
outsb
cmp
loop
out
cmp
movsl
mov
cld
inc
and
orl
movups
jno
repz
and
js
mov
call
jge
and
lret
stc
test
mov
xor
out
jae
lret
cwtl
sti
or
push
adc
int
and
js
mov
mov
mov
sbb
and
adc
in
pop
jnp
popf
sbb
push
loop
inc
cld
loopne
dec
push
call
in
hlt
dec
lret
jns
cmp
mov
test
sub
sbb
sub
sub
sbb
push
jne
mov
cmp
popf
jo
fsubs
lods
lds
movsb
repz
cmp
sub
jmp
and
mov
test
out
add
push
push
and
aad
jno
and
in
pusha
pop
pop
shlb
subb
std
aam
addr16
mov
roll
cmp
ficompl
sbb
push
out
iret
cwtl
in
lcall
popa
cmpsb
pop
pop
jo
pop
cs
xorl
jge
pop
mull
mov
jmp
and
jae
mov
and
cmp
adc
and
or
outsl
lock
mov
push
and
jbe
sbb
mov
pushf
movsl
pop
and
repz
leave
cmp
out
push
ret
xchg
aaa
cltd
pop
inc
loope
addr16
push
push
add
jg
cs
mov
shlb
mov
shll
sub
es
fwait
sub
lret
dec
fldt
les
lock
inc
adc
and
cli
mov
jmp
and
add
and
adc
mov
call
pop
test
and
in
andl
push
fstps
and
pop
dec
dec
sbb
jl
xchg
or
and
movsb
or
mov
inc
mov
add
es
mov
mov
xchg
and
lcall
cmp
mov
jle
fwait
mull
and
and
cld
gs
fisubs
and
push
inc
and
iret
es
and
push
mov
repnz
stos
or
or
outsl
pop
push
idiv
jbe
scas
loopne
mov
push
repz
push
es
dec
mov
mov
pushf
lret
popa
fcmovbe
ret
outsb
jb
mov
fisubs
cwtl
or
cmp
dec
mov
and
fnstcw
or
and
das
mov
mul
lret
adc
dec
push
cmp
sbb
daa
test
repnz
into
or
in
cmp
insb
and
mov
sbb
push
inc
movsl
jecxz
sbb
cmpsb
mov
sti
popa
dec
add
mov
and
sbb
aad
and
das
shrd
or
dec
daa
pop
jle
insl
movsl
lods
xchg
and
stos
lods
popf
testb
pop
popa
sub
out
mov
outsl
and
add
lret
mov
lea
cmp
ja
jns
and
sub
xchg
and
les
dec
xchg
jl
mov
lahf
icebp
push
or
dec
xchg
adc
mov
xchg
jns
and
pop
nop
inc
jge
pop
mov
sub
jbe
mov
shlb
lea
fisttps
mov
inc
out
mov
outsb
lret
jge
out
jns
and
sub
and
pop
lock
mov
cmp
insl
and
stos
int3
stos
js
push
add
jg
sbb
mov
pop
test
cld
mov
inc
mov
pop
mov
leave
xor
adc
xchg
and
cmc
outsl
pop
and
sub
repnz
and
xchg
xchg
and
or
or
and
mov
jge
and
xor
jne
sub
insl
push
inc
dec
outsb
sub
mov
fisubrs
mov
aaa
and
and
push
ja
subb
jne
inc
adc
or
and
cmp
outsb
and
mov
xor
push
push
lret
repnz
add
fisubs
xchg
rcrb
int
and
movl
pushf
lds
and
fists
cmpsl
sbb
icebp
lods
jle
push
mov
lods
test
sub
sub
cmp
cmpsb
pop
out
call
mov
popa
xor
jns
lea
adc
inc
sahf
loope
xchg
xchg
and
mov
sbb
xchg
sarb
js
mov
cmp
cmp
xor
xor
ror
and
xlat
cld
rclb
cmpsb
mov
and
add
push
add
and
inc
js
jns
call
aaa
jo
popa
mov
fwait
in
adc
push
xor
jb
and
insl
imul
and
fldl
cmp
and
add
jmp
movsb
iret
pop
mov
mov
jno
cld
movaps
xor
cmpsl
cwtl
cmp
clc
add
sub
aaa
sub
test
std
popa
adc
and
addr16
cmpsb
xor
xor
lcall
ucomiss
icebp
leave
push
shr
or
sub
lock
test
hlt
jb
lods
scas
in
mov
xchg
xorl
and
sub
ret
movsb
in
fcompl
repnz
xor
dec
push
xchg
or
fsubs
fbld
mov
lret
sub
xchg
je
lcall
cmc
cmpsb
pop
add
adc
and
or
int3
movsl
inc
test
mov
lahf
movsb
and
mov
and
push
lahf
outsb
mov
mov
ret
xlat
and
stc
test
and
and
sub
jle
inc
xchg
xchg
inc
out
ds
pop
sbb
mov
and
inc
mov
mov
mov
imul
into
insl
adc
xchg
sti
fstps
insb
out
dec
inc
xor
aad
bound
adc
cld
mov
mov
mov
cltd
jge
cmp
loopne
sbb
mov
test
mov
or
jmp
fcmovnu
add
or
hlt
lret
xchg
mov
adc
sub
js
in
xor
cli
mov
shlb
jne
cltd
mov
xor
sbb
mov
mov
and
xchg
in
lcall
and
lret
mov
les
xchg
sub
pop
loope
cmp
add
sbb
mov
andl
aad
adc
and
mov
cld
and
xchg
and
mov
stos
and
inc
or
sub
jo
test
int
jae
sahf
dec
ljmp
sub
fs
push
dec
subb
test
popf
adc
data16
jnp
push
out
rcll
and
add
cli
test
in
xchg
fldenv
mov
push
jae
leave
mov
insl
pop
lds
xor
outsl
out
xchg
movsb
out
xorb
jne
add
jge
cmpsb
outsl
push
mov
insb
pusha
nop
add
dec
fildl
stos
flds
and
jmp
mov
add
xchg
mov
int
mov
xor
add
mov
dec
xchg
mov
addr16
push
movsb
mov
stos
mov
xchg
adc
bound
push
movsb
and
xor
mov
cmc
cmp
mov
xchg
leave
daa
sub
inc
pop
xor
lods
xchg
and
jmp
dec
repnz
popl
inc
xchg
mov
mov
lds
fiaddl
dec
lock
jae
lret
repz
mov
sub
dec
ret
pusha
pop
rcll
into
push
xchg
xchg
lods
outsb
movsl
fsubrs
dec
or
pushl
sbb
idivb
inc
stc
outsl
fnop
and
mov
and
dec
nop
xor
mov
stos
and
ja
aaa
add
add
bound
mov
xchg
and
mov
mov
add
jle
jnp
inc
and
faddl
cmpsl
adc
ss
add
sub
sub
and
out
and
je
and
mov
pop
jle
and
mov
fcoml
movsb
pushf
xchg
daa
sbb
xchg
insb
sbb
jnp
dec
lods
mov
sub
mov
add
adc
inc
add
dec
mov
lcall
sbb
sbb
aas
jns
adc
int
pop
cld
or
pop
ss
mov
sbb
dec
les
arpl
lahf
out
mov
dec
cwtl
lock
pop
andl
and
cs
and
xor
xchg
mov
and
ret
daa
pop
out
and
cmp
jb
std
aaa
push
mov
jae
xchg
sbb
or
call
dec
and
cmp
and
int3
cmp
loope
pop
repnz
int
test
shlb
jns
and
cs
and
pop
aam
data16
push
jl
and
pop
jl
adc
imul
add
das
mov
dec
mov
test
mov
stc
xchg
push
sbb
dec
sub
fwait
jmp
dec
sbb
jo
das
cmp
mov
cmp
sub
sub
stos
lahf
scas
pop
and
mov
and
add
push
pushl
outsb
and
ret
dec
and
and
or
and
push
repnz
and
cmp
add
pop
inc
lret
in
and
aas
repnz
insl
push
and
ret
cs
dec
dec
xor
fcoml
xorl
cltd
aam
fsubl
xlat
pusha
addl
int
adc
jo
jno
sbb
inc
bound
pop
mov
test
inc
cmp
je
mov
pop
xchg
cmp
and
xchg
les
pop
outsb
lcall
test
adc
loop
and
jmp
imull
scas
movsb
dec
sub
aam
pusha
mov
mov
mov
mov
imulb
test
bound
aas
in
fcmovnu
scas
push
cwtl
cmp
pop
mov
js
jno
or
es
push
jge
and
and
movsb
lret
outsl
push
jl
and
lret
fcmovbe
bound
adc
andl
adc
shlb
mov
in
mov
hlt
add
push
and
jo
and
mov
mov
mov
stc
roll
and
push
in
cmp
jmp
xchg
imul
cs
jno
xor
mov
sbb
push
jno
inc
pop
add
das
outsl
ret
push
leave
mov
dec
fildll
push
pushf
arpl
shll
loope
sbb
lahf
cli
jo
aas
and
push
mov
xchg
and
mov
and
push
pop
mov
jecxz
sub
cwtl
mov
rcrb
sub
loop
cmp
mov
adc
mov
out
push
shlb
xor
sub
out
and
cld
dec
add
inc
je
repz
xor
in
jns
jl
mov
pop
lea
xor
pop
fwait
cmpsl
cmp
mov
sbb
cltd
mov
mov
popa
xor
fldenv
loop
mov
cli
shr
aad
nop
adcl
movb
outsl
pop
sub
daa
dec
mov
and
cmp
and
dec
jno
xorb
sub
clc
dec
in
sub
jle
test
inc
xor
and
add
scas
and
shll
out
mov
lock
lcall
and
stos
push
inc
call
and
mov
adc
pop
cmp
aam
jbe
je
fs
lds
adc
inc
jp
insl
test
fmuls
pusha
sub
repz
and
es
adc
stc
sub
mov
or
popa
push
bound
cmpsb
mov
lea
cmp
mov
filds
xor
and
cli
gs
nop
sbb
inc
add
les
fcmovbe
lea
push
mov
cmp
les
and
xchg
mov
sbb
cmc
jnp
popf
out
jp
sub
adc
xor
movl
xchg
lret
icebp
push
inc
xor
mulb
or
fisttpll
push
dec
dec
jle
xchg
and
or
adc
lock
fdivp
cmp
mov
lcall
dec
scas
or
or
ficompl
test
dec
and
out
mov
jbe
adc
addr16
movsb
mov
xor
xchg
out
movsb
or
loop
mov
jno,pn
fsts
mov
push
test
xchg
mov
es
add
inc
fdivs
xchg
and
adc
cs
loop
clc
cmp
push
and
stos
in
leave
lahf
jne
and
mov
pop
sub
outsl
dec
mov
insb
std
imul
cmp
stos
sbb
rcrb
loop
mov
in
mov
sbbl
mov
sarl
das
lods
and
test
shlb
andb
cmp
cmpl
outsb
sbb
sti
jmp
imul
mov
out
ss
scas
nop
jae
cld
cmp
inc
jg
sub
sbb
pop
and
rcrb
cmp
mov
pushf
fiadds
sarb
in
cld
ja
dec
xor
push
push
inc
mov
in
push
movsb
lods
cmp
inc
jmp
mov
inc
test
mov
idiv
clc
pop
movsb
or
sbb
sub
fdivrs
pop
imulb
bound
scas
int
pop
and
insb
and
mov
lods
mov
int3
jg
lods
aas
jns
inc
lcall
inc
mull
push
jl
sub
xchg
mov
push
xchg
test
xor
mov
and
scas
daa
lods
add
popa
add
lcall
mov
outsl
in
xor
ret
movsl
push
jge
lea
mov
mov
jge
out
sbb
mov
sub
push
push
fbstp
jae
push
stc
stos
and
xor
jb
rclb
test
mov
stc
inc
lods
push
leave
and
add
shrb
pop
int3
and
mov
and
inc
jns
and
push
bound
aaa
add
insl
and
sti
xor
cmp
adcb
pop
dec
enter
push
and
fisubs
aaa
in
push
aas
and
mov
ret
xor
popa
imul
jge
sbb
lcall
leave
push
data16
daa
mov
mov
xor
fs
pop
movsb
cmpsl
loop
stc
pop
mov
xchg
mov
imul
and
js
addr16
arpl
movsb
iret
imull
pusha
dec
mov
and
push
clc
loop
jle
or
js
adc
fcomi
and
icebp
adc
mov
inc
dec
shll
fidivs
test
repz
sub
je
push
adc
jb
imulb
sub
xchg
push
dec
and
aas
mov
dec
xor
push
mov
or
and
push
dec
xchg
xchg
aad
and
xchg
incl
ss
jne
andb
sar
movsl
adcb
sbb
mov
das
and
enter
pusha
jge
dec
inc
ss
xor
gs
js
outsl
and
ss
xchg
push
lods
mov
loopne
sbb
mov
mov
jmp
and
pusha
mov
mov
xchg
ja
in
mov
push
loop
xor
push
inc
lods
js
pop
jne
adcl
mov
and
or
sbb
lds
pop
push
movsl
sbb
aad
or
sbb
dec
popf
inc
and
mov
add
jl
mov
jns
mov
movb
ret
std
jmp
add
and
bound
fldcw
fs
mov
addl
and
mov
ret
and
shll
mov
sub
loopne
jo
aas
insb
call
sahf
imul
or
mov
dec
insl
sbbl
jl
fists
and
inc
add
inc
lret
neg
mov
adc
mov
xor
mov
cmpsb
xor
leave
mov
dec
aad
jnp
xor
cli
and
push
add
xchg
and
jb
or
lea
pop
popf
in
and
ds
leave
and
sbb
dec
insl
dec
mov
stc
xchg
pop
and
sysret
and
fstl
inc
es
mov
dec
enter
in
int
adc
les
jmp
mov
call
sub
cmp
movsb
movhps
push
in
mov
or
fcomi
add
in
cmpl
fldcw
mov
jge
lahf
outsl
and
push
or
sub
jb
mov
xor
xchg
mov
xor
leave
and
rolb
and
pop
mov
lods
or
mov
mov
ss
pop
and
or
cld
pusha
ljmp
sbb
xor
cs
out
xchg
pop
sti
test
loopne
cmp
sub
add
in
pushw
push
xlat
test
add
push
add
pop
fimull
int3
and
cmp
insl
mov
and
sarb
lods
fstpl
mov
mov
ja
cwtl
add
or
stc
ret
inc
xor
pop
and
push
bound
cmp
imul
shll
cmp
call
mov
insl
mov
jge
loop
cli
frstor
or
cwtl
and
inc
adc
xchg
inc
cmpsb
inc
inc
and
call
push
add
repnz
inc
fdivr
jg
mov
and
mov
outsl
imul
dec
aas
mov
ss
sbb
outsb
lds
popa
dec
call
mov
mov
test
imul
movsb
mov
jno
sub
jmp
push
xorl
lcall
and
xor
je
adc
movsl
test
xchg
adc
sbb
pop
and
push
fiaddl
inc
or
cmpsb
lahf
mov
fmull
nop
or
and
mov
xor
and
shll
push
cmp
cs
and
sub
mov
sti
mov
jo
nopl
mov
insb
out
sub
fiadds
mov
imul
and
cwtl
jae
dec
out
fdivrs
jge
mov
cs
popa
test
push
and
inc
cld
sbb
dec
test
aas
enter
or
lahf
lret
clc
push
testb
mov
xchg
mov
pop
fisubrs
ss
inc
push
out
cmpsl
cmp
inc
mov
or
popf
fldenv
test
jno
sub
aas
dec
xor
push
aas
int3
cmp
popf
xchg
push
lock
hlt
jle
clc
or
mov
adc
and
add
lods
lock
mov
fs
jb
mov
mov
and
add
stos
and
add
lods
mov
call
xchg
pop
adc
adc
mov
jno
dec
xchg
insl
sbb
popa
test
jmp
and
sub
icebp
call
popa
ja
shl
push
mov
push
mov
cltd
and
popf
in
daa
decl
nop
and
xor
mov
mov
inc
sbb
fsubl
push
xchg
addr16
and
int
fwait
stc
xchg
xchg
pop
aam
xchg
and
push
or
xchg
scas
jno
es
jmp
aaa
mov
xor
push
cmp
push
jnp
mov
mov
mov
mov
mov
jb
les
or
and
cmp
fwait
into
je
and
out
jecxz
adc
cmp
jo
adc
mov
sub
and
aad
sbb
inc
icebp
loop
pop
jne
xchg
popf
pop
jmp
sti
fldenv
pop
inc
adc
fs
add
xchg
stc
ja
jns
lret
ret
mov
outsl
mov
fwait
mov
push
mov
lea
mov
adc
mov
push
inc
and
adc
xlat
sarl
cmc
dec
out
sbb
in
test
leave
clc
xorb
lcall
outsl
xchg
movsl
std
adc
and
sbb
lods
mov
out
inc
or
in
rcrl
insb
lahf
out
frstor
repnz
adc
xchg
outsb
popf
jge
inc
pop
pusha
scas
rorb
lea
dec
and
lret
xlat
mov
fwait
push
mov
inc
and
aam
fidivrl
jbe
hlt
mov
lods
xor
out
xchg
scas
push
and
and
or
es
mov
mov
imul
fsubrl
sub
std
outsl
and
shll
mov
aas
push
popa
adc
shll
imul
cli
inc
jp
push
push
insb
and
scas
fstl
imull
cld
daa
cmp
pop
lret
jnp
and
xchg
push
mov
lock
mov
jo
mov
or
ss
lea
lahf
sti
and
jae
xor
xchg
sub
inc
mov
push
call
pop
mov
cmp
cwtl
and
pushf
loope
sub
mov
and
and
aas
clc
loop
imul
pop
lods
ljmp
mov
subl
test
cmp
fldcw
or
and
sbb
movups
andl
pop
push
lret
push
sub
add
or
add
outsl
cltd
mov
fcomps
movsb
test
outsl
push
push
cwtl
mov
and
xchg
sbb
lock
nop
cli
and
into
and
xchg
mov
push
jge
dec
ret
les
pushf
clc
icebp
addr16
push
push
outsl
loope
and
jmp
cmpsl
ds
inc
mov
cwtl
dec
insb
movsb
dec
mov
xor
icebp
xchg
push
jnp
or
and
push
mov
shrb
adc
ja
insb
pusha
mov
nop
cltd
enter
aam
lahf
adc
daa
and
cs
and
and
jg
cmp
lods
loop
jnp
xor
mov
jl
mov
or
pop
aam
jno
add
jmp
in
lahf
and
pop
mov
cmp
inc
insb
inc
push
inc
xor
pop
and
fnsave
int3
popl
gs
movsl
sbb
shlb
ss
loop
and
adc
mov
insl
jle
xchg
leave
pop
and
sub
out
dec
insb
int
pop
mov
lds
popa
cmpl
mov
in
adc
rolb
cli
jmp
pop
shrb
add
sbb
int
cmpl
add
fidivrl
in
lret
cmp
and
mov
xchg
mov
mov
xor
push
imul
jne
cltd
adc
or
push
fmull
adc
jnp
mov
imul
inc
enter
lahf
testl
outsb
mov
jl
insl
and
push
xor
jle
pop
jb
mov
hlt
adc
push
sub
jno
addr16
jmp
lret
mov
and
and
inc
or
jb
and
pop
xor
xor
push
sbb
xchg
inc
jb
loopne
add
mov
cltd
add
rorb
xchg
sti
and
pop
leave
sti
es
xor
xor
aam
mov
and
pop
andb
scas
xor
dec
and
arpl
mov
mov
dec
mov
cmp
fs
test
cmp
pop
mov
dec
ret
add
pusha
bound
cmp
xorb
pop
clc
aas
push
or
add
inc
mov
fldl
sub
jmp
loopne
dec
roll
imul
mov
jnp
sub
dec
orb
jns
scas
mov
inc
outsl
pop
orl
and
test
jmp
pusha
iret
jno
push
outsl
dec
dec
ret
xor
xor
xchg
std
hlt
insl
cmp
enter
testl
scas
adc
in
jecxz
and
xor
cs
icebp
lret
andl
addr16
sbb
and
stos
or
sub
lahf
nop
mov
loop
cmc
pushf
and
sub
mov
xchg
xor
dec
dec
movsb
loope
inc
insl
and
int
bound
pop
popa
mov
mov
cmp
and
and
je
test
in
movsb
out
adc
push
push
xchg
cwtl
dec
test
mov
push
pop
bound
jbe
add
jmp
int
xchg
imul
mov
push
sub
and
cltd
add
and
sti
aam
sbb
ljmp
sbb
in
addr16
jecxz
and
leave
cmpl
inc
adc
inc
int3
and
cltd
mov
xor
xor
mov
push
outsl
jae
xchg
sar
out
and
pushf
test
jne
xor
and
xchg
dec
jle
xor
popa
test
stc
aas
inc
pop
and
xchg
and
cmc
push
push
mov
jae
cmp
and
or
mov
jns
ret
and
push
sub
lret
jno
icebp
and
mov
and
mov
les
aam
sahf
mov
lahf
pop
push
or
imul
mov
inc
adc
pop
out
and
mov
ret
mov
test
lods
xchg
jb
mov
gs
or
xchg
xchg
sub
lret
cmc
pop
xor
cmp
ret
push
testb
test
cmp
dec
cwtl
xchg
adc
in
pop
adcb
jg
push
outsb
es
dec
xor
mov
fsubrs
mov
and
add
mov
addb
adc
rclb
adc
movsb
mov
clc
adc
rorb
imul
xchg
add
mov
mov
nop
sub
and
in
xorl
and
divb
lods
nop
fidivrs
inc
cltd
mov
dec
popf
addl
jmp
call
and
sahf
mov
and
insl
push
and
andl
rolb
cmp
and
jle
inc
in
js
hlt
stc
xor
mov
imul
mov
jl
xchg
data16
and
sbbb
adc
fs
nop
les
incb
fcmovu
jg
pop
pop
inc
mov
mov
decb
pop
sub
cmp
fisttps
sub
rclb
out
dec
jns
sbb
pop
sub
jle
jmp
sub
or
xchg
and
cli
out
mov
adc
and
jmp
mov
inc
dec
jae
mov
icebp
adc
ret
sbb
inc
in
movsl
mov
test
add
mov
cltd
adc
pushf
test
mov
and
imul
or
sbb
aaa
rcrb
mov
pop
fstp
add
xchg
sbb
outsb
xchg
icebp
cmp
inc
mov
movsb
mov
imul
subl
popa
xchg
xchg
and
jmp
inc
pop
movsb
dec
fcompl
jns
and
aad
jl
leave
jg
and
adc
scas
mov
jno
loop
dec
pusha
imul
jmp
out
push
add
and
addr16
bound
jl
scas
test
and
xchg
fistps
in
add
sbb
lods
ss
mov
push
fistl
daa
cli
inc
mov
cli
pop
and
popa
enter
and
ja
fldt
jno
addr16
in
sub
into
jbe
nop
jb
pusha
and
cmpsb
adc
out
xchg
stos
cmp
repz
xchg
mov
iret
fldt
xchg
mov
push
push
sub
push
cmpsb
cmp
jecxz
dec
and
mov
adc
and
leave
push
aad
pcmpgtw
and
xor
and
imul
adc
adc
mov
fisubl
xchg
mov
or
sub
dec
outsl
jae
sub
in
and
lret
xchg
daa
and
in
out
and
xchg
scas
or
adcl
add
mov
cmc
cltd
arpl
loopne
daa
in
scas
dec
jns
in
and
cld
ljmp
mov
aad
mov
pop
movsl
ja
fcmovb
mov
add
push
xor
and
js
fdivrl
imul
adc
out
fiaddl
and
mov
repnz
out
lret
popa
pop
jo
aas
or
jb
or
mov
loope
in
frstor
jno
xlat
sbb
lods
and
or
push
insl
push
and
nop
std
test
cmpsb
cmp
lahf
je
cld
push
lret
fdivs
mov
adcl
and
sbbl
push
inc
lahf
mov
pop
jmp
xchg
mov
jno
xchg
jp
pop
aaa
sbb
movsb
adc
bndldx
sti
jb
test
ljmp
divb
cmpsl
pusha
mov
mov
sub
jp
aaa
jno
nop
mov
or
movsb
adc
ds
pop
ja
sbb
stc
sub
iret
mov
dec
and
ret
adc
je
mov
lods
bound
clc
insb
nop
lea
cmp
mov
add
or
dec
push
popf
and
cli
push
cwtl
ret
cmp
push
or
fmull
mov
je
xchg
scas
sub
cmp
mov
icebp
dec
and
jl
repz
sub
pusha
notb
xchg
out
and
push
imul
pop
mov
in
loop
sarl
mov
mov
repz
lret
testl
push
movsl
mov
nop
sub
or
lock
test
insl
pop
lret
mov
add
mov
inc
push
testl
lahf
insl
popa
pop
adc
sbb
cltd
or
fwait
aad
inc
and
cs
cltd
cltd
pop
sub
xchg
dec
mov
lds
and
movsl
mov
mov
add
movsb
adc
in
sbb
rcrb
int3
xor
stos
das
ret
jg
subb
andl
xchg
cmp
into
ss
cltd
pop
xchg
and
xor
subl
mov
sub
inc
cmp
mov
push
les
rcr
cltd
daa
cwtl
add
pop
addr16
hlt
stos
xchg
inc
dec
mov
pop
add
push
popa
xchg
ret
scas
cmp
adc
lret
adc
xor
xchg
test
sub
push
gs
xor
push
rcl
lods
sbb
and
stos
and
mov
outsl
lea
mov
sub
sbb
int
inc
cwtl
out
lods
sti
xchg
mov
add
pop
jb
int3
sbb
cli
icebp
outsb
adc
and
mov
cmp
jae
movsb
lcall
xchg
in
lds
cmp
xchg
gs
pop
insb
and
rcrb
out
xchg
and
cwtl
sub
pop
stc
test
and
movsl
fstps
or
mov
cmp
cmp
mov
and
sbb
subb
mov
pop
xchg
aam
mov
mov
mov
dec
sbb
xchg
scas
sub
fcoms
repnz
and
adc
call
scas
dec
std
xchg
inc
ds
lods
lock
cli
jle
js
add
add
or
push
sarb
cltd
dec
nop
test
and
inc
mov
push
and
enter
rcrb
fistpll
lret
int3
jecxz
xor
sbb
ret
xchg
mov
xchg
jbe
out
orl
sub
jp
loope
lock
clc
outsb
xor
out
lods
ror
int3
cltd
and
aaa
dec
imul
adc
insb
mov
fisttps
xchg
int3
push
daa
movsb
or
fs
mov
and
and
mov
mov
inc
and
lods
inc
push
std
xlat
fisttps
push
dec
jl
xchg
gs
mov
mov
jecxz
fs
sub
pushf
movsb
xor
push
push
push
out
lods
out
or
mov
jno
mov
lahf
jae
dec
gs
lret
push
test
subb
inc
pop
inc
mov
mov
push
ds
xchg
mov
push
cmp
or
adc
jns
sub
mov
mov
jg
inc
repz
cmp
jns
les
mov
repz
add
dec
or
cmp
out
push
mov
and
ds
dec
cmc
mov
aaa
and
jge
jno
adc
inc
jmp
mov
sbb
and
nop
scas
loopne
jecxz
jge
jg
and
add
cmpsb
and
or
mov
ret
lahf
fcom
dec
and
shr
ficoml
lcall
mov
adc
dec
outsl
jg
jb
aas
mov
or
cmpsb
popa
fsubrs
fwait
jecxz
mov
or
adcl
mov
xchg
shl
loopne
cmpsb
xor
ret
cmpsl
popf
jge
inc
daa
daa
adc
les
push
adc
mov
pop
sbb
scas
push
and
sahf
call
repnz
cltd
xor
push
and
in
adc
mov
stc
jo
ret
shll
repnz
jnp
mov
and
mov
pop
xor
imul
mov
data16
call
scas
fldenv
repz
fistps
in
mov
push
mov
popa
xlat
add
cwtl
pop
mov
push
leave
pop
scas
dec
push
pusha
dec
and
stos
sub
and
pop
jl
lret
jmp
es
dec
and
lds
and
jb
mov
add
in
dec
pop
xchg
pop
mov
fisubrs
out
flds
and
enter
outsb
and
jl
mov
adc
sub
and
dec
cmp
xchg
lods
jo
pop
xor
xchg
jg
sti
sbbb
and
xchg
add
sbb
insl
mov
ss
and
jae
lock
pop
xchg
mov
and
sbb
rol
sbb
icebp
inc
jg
test
in
mov
leave
sbb
and
adc
lods
fiaddl
rolb
jmp
add
xchg
outsb
mov
xor
jns
enter
in
sub
loope
hlt
or
inc
cmc
lahf
mov
daa
add
push
and
mov
sarb
and
fidivrl
cmp
repz
in
and
outsl
sbb
and
xor
sub
lret
or
lcall
fs
std
arpl
flds
in
and
int3
cmp
push
sub
pop
xor
sub
and
push
adc
jle
mov
and
jmp
daa
outsb
xor
or
sub
sub
mov
shl
and
xor
cltd
sub
jae
movsb
inc
ljmp
mov
adc
pop
mov
das
dec
dec
andl
test
inc
sub
and
lret
and
xchg
pop
cld
cmp
jae
add
lahf
insb
lret
sbb
and
push
loope
jnp
mov
push
outsb
imul
lahf
mov
lcall
out
xor
add
add
fnstcw
sbb
and
mov
or
add
cs
jno
cmp
jecxz
dec
xor
sub
cwtl
imul
in
adc
dec
jl
int3
mov
arpl
pop
in
push
cmpsb
test
cs
sbb
es
or
out
leave
and
mov
pextrw
add
push
xchg
mov
icebp
jne
imul
add
and
iret
loope
mov
adc
and
test
popa
and
lret
hlt
jne
jbe
pop
and
dec
ja
mov
add
and
repnz
sahf
adc
movsb
pop
cwtl
and
sahf
ret
sub
or
lcall
sub
mov
mov
inc
popa
mov
xchg
xchg
std
xor
ljmp
pop
mov
pop
dec
jge
fisubl
jae
std
or
mov
leave
push
ret
ja
pop
mov
fbstp
xchg
scas
andl
das
test
push
mov
mov
lret
push
imul
xchg
sti
and
je
mov
jp
mov
and
das
sti
cmpsl
and
cwtl
addr16
add
jne
cmp
cmpb
adc
xchg
inc
and
in
in
cli
mov
and
dec
js
sbb
aas
fsubs
and
dec
imul
add
add
pop
cltd
and
or
and
rol
aaa
dec
sti
and
mov
dec
and
add
mov
or
push
push
pop
fwait
pop
jmp
add
and
adc
mov
jle
adc
mov
loop
jne
fwait
insb
push
and
xchg
mov
jbe
test
pushf
vphaddbd
lret
cld
insl
and
movsl
orb
jecxz
sbb
cld
and
push
bound
xor
xchg
and
cwtl
stc
and
pop
inc
mov
jp
push
subl
dec
mov
inc
popa
clc
jae
es
ret
mov
imul
clc
sbb
in
es
xchg
add
jnp
out
and
and
or
loop
addr16
and
pusha
mov
and
xchg
das
movsl
adc
out
sbb
jle
push
add
stc
cmp
and
mov
and
push
mov
jl
push
push
aas
and
fsubr
sbb
mov
cmp
xlat
dec
divb
mov
imul
and
out
pop
cli
scas
mov
imul
shlb
ret
les
addr16
dec
mov
sub
xchg
mov
jae
and
mov
sub
rcl
movsl
into
pop
ds
mov
or
aam
loop
lock
add
in
or
xchg
inc
cmp
gs
les
push
mov
scas
out
jmp
scas
in
fwait
cmc
xchg
mov
test
imul
inc
aas
mov
rcrb
and
inc
jbe
mov
cli
adc
mov
aaa
leave
mulb
icebp
or
test
xlat
shll
mov
mov
in
fisubs
dec
or
xchg
and
jno
mov
and
aam
std
hlt
add
push
push
cmp
sub
test
and
mov
sub
cmp
mov
xor
inc
pop
loope
cld
cmpsl
mov
std
and
test
gs
cli
pusha
inc
and
mov
cltd
and
vpmaddwd
out
push
mov
mov
mov
xor
aad
in
es
sarl
lods
test
aaa
and
pop
pslld
inc
push
icebp
cmp
andb
mov
adc
and
stos
movsb
cltd
dec
ss
mov
pop
mov
pop
push
dec
cmp
stos
mov
nop
mov
sbb
lcall
and
lds
mov
sbb
sbb
xlat
lods
mov
adc
mov
push
mov
call
out
xor
test
scas
or
hlt
lcall
and
sub
jmp
and
fadds
xchg
test
test
decl
cld
xor
and
jo
leave
and
xor
push
cmp
fs
cmp
push
mov
ret
cs
lret
test
sub
test
xor
mov
mov
fidivrl
adc
shl
mov
sbb
and
fmulp
cld
inc
lods
inc
push
lcall
sbb
inc
or
and
fldenv
pop
rclb
js
mov
sbb
mov
cmpsl
imul
pop
pop
int
cmpsb
and
pop
les
into
and
dec
push
mov
pop
and
cmp
lcall
popa
sbb
in
mov
and
mov
imull
jg
lods
push
jns
and
pop
sbb
ljmp
jmp
inc
and
adcb
imul
jmp
push
lods
lods
pop
push
and
outsb
ss
outsl
xchg
cmpsb
cmpsl
and
icebp
pop
xchg
and
push
je
pushw
pop
das
hlt
mov
sub
cmp
roll
xor
jns
and
rcrb
sub
xor
mov
xchg
ss
out
and
fdivrl
dec
push
lds
and
es
jle
push
and
popa
leave
adc
cltd
and
std
xchg
jno
scas
mov
push
adc
les
and
inc
jo
mov
or
cmpsb
loop
imul
orl
and
iret
lds
or
les
cmp
in
jne
std
and
outsb
pop
out
pop
lret
ret
pop
sbb
and
stos
xchg
test
mov
addr16
stos
push
cmp
ja
mov
bound
test
aam
pop
and
inc
xchg
mov
mov
repnz
fs
aaa
dec
movsb
xorl
stos
jmp
cltd
and
out
and
fstl
insb
and
aas
mov
dec
jb
and
xchg
dec
mov
sbb
popa
xchg
dec
mov
jg
fwait
cmp
dec
pop
mov
es
loope
and
pop
lods
inc
imul
jp
cmpsb
cli
loop
xor
int3
push
stos
jge
and
out
mov
scas
sub
sbbl
push
inc
sbb
rcl
and
xchg
jl
popf
jp
mov
mov
ficompl
loope
insb
data16
cld
in
and
pop
das
ja
sub
mov
test
loope
outsb
and
sub
js
pop
push
fists
xor
dec
inc
push
xor
and
sbb
and
push
into
hlt
popw
cmp
stc
ljmp
mov
leave
test
shll
mov
repnz
and
xor
leave
jmp
out
push
and
scas
xchg
rcrl
or
subl
in
push
cmp
add
fisubs
xor
push
pop
call
mov
and
aam
clc
inc
cwtl
adc
xor
arpl
movsb
rcrb
pop
sbb
fsubs
lods
add
xor
sub
cmp
dec
lock
xor
sub
fwait
mov
cmpsl
popa
jge
mov
add
inc
add
and
out
in
jnp
xor
ja
lock
fidivrl
inc
or
popa
int
xor
and
push
mov
lock
lods
dec
push
and
jbe
mov
push
and
or
lret
pop
sbb
push
and
orb
and
int3
cmpsl
sti
test
xchg
push
fidivs
rcl
jbe
push
in
cmp
and
mov
into
mov
mov
push
sti
xchg
inc
jae
pop
sub
cmp
cltd
mov
and
aad
dec
and
addb
shl
dec
enter
outsl
imul
sub
popa
addr16
xchg
jo
sbb
scas
mov
adc
stc
mov
pop
ss
mov
and
ret
hlt
or
push
adcb
inc
les
and
iret
dec
sub
in
jmp
add
aas
xchg
push
adc
mov
fdivrl
xor
ja
and
sbb
or
push
jno
jmp
push
int
stos
lret
xchg
int3
add
add
mov
mov
fucom
mov
mov
mov
nopl
lock
imul
lds
or
inc
xlat
das
add
mov
sbb
or
and
pop
push
push
ret
ficompl
fimuls
xchg
pop
imul
cwtl
popa
xor
pop
cmp
xchg
inc
sahf
cwtl
and
sti
pop
fisubrl
sbbb
mov
stos
lods
dec
and
pop
fistpl
inc
fwait
repz
and
and
jge
dec
and
fistpl
pop
xchg
lretw
orl
leave
push
in
inc
push
mov
sub
ds
andl
xor
mov
mov
pop
stc
imul
xchg
or
mov
pop
mov
test
test
inc
xor
fstl
mov
push
add
inc
enter
pop
xchg
and
fsubrl
cltd
sub
stos
jns
movsb
sub
jns
mov
lock
mov
and
mov
and
push
bound
pop
fidivrl
punpckhbw
sbb
and
mov
pop
fwait
xor
int3
mov
test
loop
jns
sub
leave
add
scas
add
inc
and
push
repz
sbb
and
arpl
data16
shlb
or
add
movsl
stc
jp
push
cmp
adc
and
or
and
das
in
lods
sahf
scas
cmpsl
and
jae
popf
cltd
bound
inc
dec
mov
cld
jge
cmpsl
jp
outsl
popa
mov
icebp
mov
or
add
xchg
lea
add
pop
nop
or
push
cmp
movsb
push
sub
fisubs
insl
pop
lahf
ret
cli
jne
push
cmpsb
xchg
mov
cmp
lcall
add
pop
and
gs
mov
lret
lret
adc
inc
cmp
mov
mov
inc
and
mov
dec
insb
pushf
mov
andl
fldt
pop
lcall
imul
into
pusha
jno
jne
xorl
cmp
scas
jp
aaa
mov
and
sub
imul
jg
loopne
xor
lcall
mov
and
cmp
std
clc
movsb
add
or
mov
pop
adc
loopne
mov
or
and
fwait
xchg
lea
fsts
mov
xor
mov
mov
and
mov
inc
mov
movsb
jns
scas
inc
lret
call
inc
push
out
test
out
and
es
cmp
sbb
popa
jecxz
add
sbb
testl
call
ljmp
mulb
aaa
cltd
lods
leave
and
cs
dec
lds
data16
xchg
js
popa
dec
sbb
xor
mov
cmp
inc
push
rcl
cmpsl
inc
mov
out
popa
mov
push
sti
loopne
and
xor
pop
loopne
and
xchg
pushf
js
inc
mov
ja
adc
adc
pop
push
dec
aam
mov
mov
pop
and
and
and
push
cwtl
aaa
daa
sub
add
and
mov
adc
mov
imul
and
fdivl
and
es
dec
inc
outsb
pop
and
lahf
adc
inc
and
outsl
out
xchg
pop
mov
lcall
sbb
dec
xor
pop
mov
jmp
aas
rclb
pusha
aas
mov
popa
or
sub
and
in
movsl
out
mov
dec
xlat
or
mov
subl
and
aad
mov
pop
loope
jmp
xor
xor
cwtl
orb
xchg
adc
add
mov
out
loope
sub
movsl
add
push
and
orl
inc
sahf
jg
pop
pop
and
sbb
sahf
lock
cld
pop
and
insl
mov
dec
and
rorb
cli
sbb
dec
adc
jno
pushf
outsl
push
mov
sti
push
mov
pop
int3
dec
loopne
and
movl
pusha
icebp
popf
and
dec
into
scas
daa
imul
xlat
mov
fdivl
fimull
dec
and
push
stc
and
mov
sub
inc
inc
ds
int
xor
shll
loopne
sbb
movsb
inc
inc
arpl
mov
adc
gs
jns
and
lea
and
mov
mov
pop
sbb
mov
add
ret
mul
pop
mov
sub
and
push
ss
inc
in
cmp
cmp
cmp
inc
sti
stc
fists
in
outsb
jae
xor
mov
inc
xchg
cs
leave
and
fimuls
outsl
mov
pop
and
aaa
fdivs
push
daa
pop
and
push
and
mov
scas
mov
add
lahf
pop
lret
lods
addr16
loop
aaa
add
dec
loopne
into
cmp
pop
mov
mov
push
data16
out
cli
loopne
cmpl
int3
mov
into
inc
or
lods
lcall
and
data16
mov
xchg
dec
and
pushf
je
movsl
loop
mov
jmp
inc
loope
and
aas
mulb
popf
xchg
inc
out
mov
pop
loope
jle
and
in
or
in
and
ret
arpl
inc
push
mov
cmp
cmpsl
cmp
cmp
mov
mov
imul
push
mov
dec
and
pop
adc
mov
adc
imul
lods
mov
sbb
pop
outsb
jo
repz
add
fisttpll
insl
std
fmul
push
or
and
aam
arpl
and
inc
mov
lock
push
scas
insl
int
xor
out
pusha
data16
and
or
xchg
dec
and
cld
mov
dec
mov
iret
loope
xchg
push
dec
pop
and
icebp
mulb
push
push
movsl
jg
fsubp
in
push
pop
cmpsb
pop
data16
cs
jne
sub
mov
push
push
mov
pop
jle
sbb
adc
xchg
js
std
cmp
cld
pusha
cltd
add
mov
push
imul
lcall
fcomi
lahf
and
mov
and
das
or
and
ja
shlb
cmp
xor
xchg
lods
mov
lock
ret
mov
xchg
lcall
sbb
push
sbb
and
loopne
in
shlb
lahf
cmp
ds
mov
dec
test
mov
fldenv
addl
fidivl
mov
mov
stc
and
aas
dec
jbe
cli
sbb
repnz
int3
cmp
sub
sub
jmp
and
int
shlb
cwtl
clc
or
pop
aas
cmp
or
and
xchg
jno
cld
cltd
cmp
sub
jl
or
sahf
cwtl
lock
movsl
push
aaa
in
mov
mov
fnstsw
and
bound
rorl
and
inc
mov
xchg
fwait
repz
daa
push
jmp
loope
xchg
mov
mov
push
mov
divl
lcall
ss
nop
and
into
mov
test
aaa
inc
jmp
push
aas
jge
xor
mov
addl
je
mov
cltd
or
mov
aaa
stc
int3
leave
mov
cmp
adc
int
mov
fcmovbe
popa
pusha
lret
outsb
test
scas
pop
dec
or
popa
cmp
aam
sbb
sbb
leave
je
repnz
mov
fs
xchg
xchg
or
mov
and
fdivrp
vmovsd
arpl
dec
mov
inc
cld
or
xchg
shll
and
sahf
cmc
push
das
outsb
mov
mov
ds
jae
and
push
jg
adcl
hlt
and
ljmp
mov
fisttpl
in
fildll
loopne
sbb
dec
adc
sub
and
dec
ror
scas
lods
insb
adc
and
icebp
mov
movsb
dec
jg
sarb
pop
in
sti
pop
add
cwtl
mov
sub
out
mov
sbb
sub
iret
push
inc
and
jg
push
js
outsb
pushf
and
xor
sbb
aaa
adc
inc
and
fisubl
mov
xor
enter
ja
inc
and
push
push
ljmp
dec
mov
dec
dec
mov
or
jno
add
mov
stos
loop
push
movsl
adc
and
add
and
sbb
push
jl
clc
test
mov
cwtl
dec
dec
out
and
mov
test
lret
push
lock
lods
sti
sub
int3
sarl
cli
arpl
push
mov
or
cmp
hlt
and
add
and
outsl
dec
jge
cld
imul
and
mov
mov
xlat
enter
mov
pusha
cld
test
into
mov
and
lds
sub
xor
je
cmpsl
sub
popa
std
push
cmp
ret
add
adc
outsb
inc
cmp
out
paddd
ja
test
sbb
or
xlat
mov
and
push
push
xchg
mov
pop
insb
inc
mov
and
fstpl
jno
rol
cmp
popa
in
popa
pop
and
icebp
push
sub
and
movsb
jno
in
or
sahf
imul
pop
ret
stos
dec
insb
insl
xchg
and
out
ja
add
cmpsl
push
ret
jl
and
sub
adc
dec
arpl
adc
and
cmpsb
jae
popa
push
sbb
mov
aas
adc
mov
xor
pop
sub
clc
sbb
push
bound
movsb
orl
jne
xor
js
insb
in
lds
and
pop
imul
pusha
and
push
mov
imul
mov
test
mov
mov
inc
lret
sbb
mov
pop
add
push
cmp
jecxz
adc
push
in
subl
jo
push
fnstcw
add
jmp
mov
shlb
and
in
and
div
adc
dec
dec
and
push
inc
fistps
fisubrs
push
leave
xor
shlb
int
das
push
and
rcrl
cld
adc
jmp
test
gs
sarb
movsb
in
and
fdivp
jno
lret
or
mov
xchg
mov
and
test
cwtl
xchg
hlt
shlb
movsl
cltd
add
stos
jb
sbb
rcll
ja
scas
stos
dec
lock
sbb
and
inc
mov
out
and
or
loopne
jo
mov
loope
das
insb
adc
ficompl
movsb
inc
mov
push
sub
lods
scas
daa
sarb
add
test
js
imul
or
pop
xor
repz
lock
adc
mov
xor
popa
fcompl
js
adc
rcr
jns
xchg
and
ja
cmpsl
and
adc
loopne
call
jg
dec
mov
or
leave
movsl
ss
ljmp
inc
out
pop
fwait
adc
mov
inc
movsl
mov
popa
adc
add
mov
mov
pop
and
fisttpl
cwtl
aam
adc
icebp
stos
xchg
insl
mov
mov
cmpsl
bound
cmp
pop
and
rolb
in
mov
lods
outsl
cmpb
movsl
cli
popf
shrl
dec
adcb
push
mov
in
xor
int3
sbb
gs
loop
push
push
push
pushf
test
testb
mov
xor
cli
ret
or
loopne
subb
jl
push
pop
xor
lock
push
dec
mov
sar
and
mov
enter
testw
and
or
ret
sbb
xlat
mov
out
adc
add
jns
repnz
lcall
dec
jg
push
add
push
mov
das
movsb
pop
in
rcl
xor
xchg
sub
popa
int3
adcl
int3
in
outsb
dec
pop
jno
push
sub
push
xchg
test
mov
fcompl
xor
pushf
mov
mov
or
mov
adc
pop
jmp
mov
in
push
aam
or
dec
loopne
shlb
push
push
jle
movsl
sub
xchg
and
aad
add
dec
jl
or
adc
mov
les
add
mov
ljmp
repnz
mov
sbb
cltd
jne
and
push
dec
loopne
je
and
cmp
xor
sub
loope
lcall
movsb
movb
xchg
call
add
dec
and
in
ret
iret
cmp
pushf
pop
shrb
std
and
int3
jne
pop
adc
bound
jae
in
loope
dec
sbb
jle
cmp
stos
and
lret
jl
dec
iret
mov
xchg
in
xchg
and
rcll
aas
lret
movsl
inc
inc
pop
jbe
lods
test
das
int3
xchg
movsl
stos
pop
or
and
dec
lock
mov
mov
cmpsl
inc
adc
jle
xorl
dec
frstor
out
and
popa
adc
pusha
inc
daa
mov
xchg
jge
cmp
js
xchg
push
xchg
and
jmp
loop
test
xchg
ret
mov
xor
insb
addr16
pop
sub
or
pop
repz
dec
and
xor
adc
sarb
mov
imul
cld
xchg
mov
pop
mov
scas
or
clc
test
clc
xor
and
mov
test
in
cld
aaa
push
movsb
loope
adc
outsl
mov
push
and
lret
inc
jle
push
xor
imul
aas
push
push
leave
imul
icebp
pop
scas
jb
sarb
pop
push
ret
lahf
pcmpeqw
insb
add
fdivrs
int3
push
scas
outsl
mov
test
rcrl
mov
mull
push
sbb
inc
sub
and
cmp
dec
dec
leave
aas
xchg
test
xor
push
pop
dec
push
mov
xlat
inc
jecxz
les
push
push
and
or
and
add
and
cmp
jno
psubd
pop
xchg
sub
add
or
mov
popa
cmp
add
xchg
adc
adc
sbb
outsl
movsl
mov
fmuls
popa
iret
and
aam
and
add
jg
pop
inc
cmpb
jne
movsb
add
ret
das
and
int3
push
adc
shlb
and
add
shrb
xchg
push
xor
popa
int
andl
leave
cmpsb
addl
and
ror
int
cltd
loope
and
add
ret
and
xchg
shrb
pop
scas
cmpsb
jge
push
jne
popa
inc
rorb
mov
inc
push
lods
jns
and
mov
loope
lcall
xor
mov
iret
andl
mov
pop
and
lret
mov
inc
adc
test
xor
in
jg
push
mov
out
xor
in
mov
fimull
xor
outsl
push
push
jle
repnz
inc
inc
and
mov
sub
fistl
cmpsb
sbb
stos
pop
out
pop
and
ja
sub
jo
xor
outsb
mov
inc
or
and
sbb
dec
add
mov
inc
sbb
sub
and
pop
cmp
aas
add
fbstp
push
add
push
sub
mov
xor
js
shlb
adc
inc
sbb
flds
jl
mov
je
jns
aaa
iret
and
pop
mov
cli
mov
add
dec
xchg
inc
fstl
loopnew
aas
imul
call
mov
outsb
hlt
lock
stc
jnp
adc
and
cmp
adc
les
jns
dec
jne
push
out
ret
push
popa
jle
mov
rorl
imul
and
loopne
mov
mov
sub
cs
sub
lret
popa
push
ja
je
and
in
xor
int
and
xchg
dec
fsubrl
insb
aam
adc
push
xor
pusha
stos
loop
cmp
insl
dec
jge
and
mov
xor
decl
mov
mov
lahf
add
push
sahf
leave
mov
sub
and
inc
cmpsl
sti
inc
mov
and
pop
inc
aas
lahf
and
imul
xor
jp
cmp
dec
push
into
cwtl
mulb
fisubrs
xchg
sbb
pop
mov
fmuls
outsb
inc
stos
out
add
popa
mov
imul
lcall
jge
and
xchg
test
mov
inc
inc
mov
into
nop
pop
movsl
inc
test
scas
jmp
mov
ljmp
dec
fwait
orl
test
xchg
pop
into
push
and
std
jle
scas
sbb
and
lods
ds
push
test
mov
and
push
in
dec
daa
mov
leave
lcall
imul
imul
es
lock
fwait
data16
aas
jb
rep
jge
movsb
clc
loopne
and
add
and
fnstenv
or
and
mov
mov
loop
sti
mov
adcb
mov
shlb
and
cmpsb
cli
jnp
inc
call
cmp
je
scas
paddb
cmp
mov
popa
fwait
lods
mov
or
add
and
mov
and
inc
xchg
imul
popa
xchg
lds
xchg
sbb
fstps
sbb
inc
mov
adc
fisubrs
popa
mov
adc
mov
es
cltd
stos
jp
jns
ret
push
dec
dec
sub
or
lock
mov
cmp
xor
bound
ds
fs
in
in
jne
sti
sub
and
mov
adcb
mov
and
cld
incb
dec
js
jae
call
movsb
push
jns
insb
std
and
mov
add
inc
jno
arpl
cmp
mov
cmp
les
and
je
in
shlb
andb
jne
js
jo
and
xchg
bound
push
mov
out
cmpsl
push
es
aad
mov
leave
push
test
aam
sub
imul
jb
jns
rclb
pop
pushf
inc
and
xchg
mov
enter
dec
int3
in
and
stc
fildll
xor
sbbl
and
cmp
and
lods
push
push
and
push
jnp
movsl
aad
mov
xor
and
mov
inc
pushf
ret
pop
and
test
xor
lods
cmp
mov
dec
das
jle
pop
and
outsl
int
mov
cmp
loope
out
lahf
jno
test
insb
mov
pusha
movsl
cld
xor
sbb
or
add
sub
pop
ret
adc
movsb
and
inc
jnp
and
loope
pop
inc
mov
inc
stos
dec
and
sbb
inc
xor
cmpsb
sub
ljmp
and
sbb
test
dec
pop
jle
pop
mov
push
pusha
ds
shrd
mov
movsl
mov
inc
sbb
or
inc
mov
and
add
cwtl
and
popf
jno
lret
xchg
pop
fisubrs
mov
mov
stc
xor
push
orl
and
mov
xchg
movsl
sub
and
rorl
push
pusha
add
or
popf
roll
xor
pop
sub
mov
outsl
push
fildll
insb
jnp
sbb
ds
add
out
sub
inc
test
mov
push
inc
imul
mov
sbbb
mov
jmp
jle
imulb
scas
mov
sahf
mov
jecxz
cmp
pop
mov
xchg
andl
inc
dec
jbe
sbb
mov
inc
cmpsl
fwait
insl
andl
es
sbb
jnp
and
push
int3
push
cmp
mov
sbb
loope
das
into
test
and
adc
gs
shrl
adc
xchg
push
and
cmp
mov
xor
xchg
clc
jecxz
scas
push
ret
lcall
push
scas
jge
inc
add
dec
lret
hlt
int3
lods
imull
call
adc
mov
lret
pop
int3
pop
dec
jl
movsb
mov
add
pop
sbb
ja
and
call
xchg
pusha
and
fcoms
xor
adc
ret
mov
pop
or
fisubrl
xor
pusha
cld
movsb
mov
and
push
fisubs
cmp
inc
mov
data16
out
and
jl
and
insl
and
aaa
mov
stc
xchg
xor
int
mov
fistpl
inc
sub
xchg
mov
jl
sub
jne
mov
into
lahf
xchg
shl
pushf
push
adc
inc
fistps
pop
push
imul
and
aas
insl
in
add
and
sbb
or
xchg
xchg
add
and
cli
lds
and
mov
and
out
jmp
movsb
int
xorl
aam
or
pop
cltd
mov
jnp
test
cltd
dec
cmp
dec
and
cltd
inc
ficoml
and
enter
push
repnz
push
mov
popf
mov
or
addb
push
pop
nop
adc
sub
rorb
icebp
sub
mov
rcrl
add
inc
incl
lds
std
cmp
ja
stos
xchg
xor
jnp
and
lret
mov
xchg
adc
cmpsl
movsb
pop
clc
pushl
das
mov
aad
and
repnz
inc
jae
inc
mul
add
aas
out
adc
cltd
lods
pop
xchg
mov
jns
jmp
loopne,pt
std
mov
and
sbb
cltd
fs
loopne
dec
in
jnp
lods
scas
kmovw
or
and
mov
push
aas
gs
xchg
repz
inc
jbe
inc
lahf
mov
inc
cmpsb
xchg
fsubl
and
test
cmp
es
mov
xor
out
ret
xchg
icebp
mov
testl
jae
sub
loope
mov
mov
or
xchg
pop
mov
test
fldl
and
cmpsl
pop
pop
shl
mov
or
adc
scas
insl
jnp
and
sbb
and
bound
dec
and
mov
enter
lods
inc
xchg
mov
sbb
mov
or
and
pusha
dec
xor
jmp
pop
add
and
lret
or
jns
sbb
pop
clc
into
jle
adcb
orl
jmp
andl
mov
fs
mov
loope
sub
in
push
xor
and
cwtl
ja
repnz
lock
jmp
dec
mov
iret
mov
div
mov
inc
mov
jno
jb
in
add
pop
mov
adc
imul
pop
pusha
sbb
aad
add
pop
inc
fldl
adc
mov
roll
or
fs
loope
into
or
push
stos
fsubs
push
dec
push
or
sub
and
lret
call
stos
jle
xor
xorl
lret
inc
movsl
mov
in
into
push
leave
sti
out
push
and
out
xchg
xchg
enter
loop
movsb
cmp
popa
decb
adc
lcall
dec
outsl
popa
rorl
mov
mov
and
fwait
jp
shll
pop
and
cli
push
sub
dec
ja
mov
movsb
cmp
stos
lods
sub
in
xor
mov
inc
jns
and
inc
pop
lret
xor
out
jge
into
mov
aaa
loop
aam
and
test
pop
data16
xlat
jnp
push
add
sbb
sti
cmp
popf
pop
ljmp
std
clc
inc
ds
popa
lahf
or
xor
daa
mov
outsl
insl
jbe
int
and
stos
sbb
addr16
jmp
add
aas
lods
push
imul
cld
test
dec
cmpsl
pushf
daa
pop
into
jo
sub
and
push
xchg
cmp
sub
cmp
jno
or
pop
mov
leave
pushf
daa
rcr
out
js
and
dec
fbld
pop
xchg
cwtl
fstpt
cmp
test
add
ja
les
xchg
mov
pop
and
and
fbld
pop
cmp
add
in
fs
addl
fwait
add
aas
lret
stc
and
xchg
cmp
mov
mov
xchg
enter
rcl
sbb
or
sub
pop
pop
sbb
fsub
xchg
test
das
lods
adc
mov
imul
cli
ret
lea
xchg
leave
xchg
shlb
adc
mov
loope
jmp
insl
push
inc
mov
cs
add
fcoms
data16
call
and
idivb
pop
in
mov
inc
loop
xor
cmp
rcll
cmp
xor
dec
scas
icebp
adc
inc
sbb
inc
add
xor
popf
dec
fidivl
sbb
and
fs
mov
fdivp
loopne
mov
pop
mov
popf
xor
movsb
popa
shrb
shll
out
push
xchg
cmp
pop
bound
xchg
or
inc
sarb
mov
add
pop
xchg
mov
shlb
lret
imul
movsb
fmuls
mov
call
sbb
adc
mov
push
mov
arpl
jecxz
add
mov
dec
mov
in
sub
out
push
cli
shl
xor
pop
and
add
cmp
push
sbb
in
xchg
jae
cltd
mov
mov
or
into
out
insb
or
xorl
and
sub
xor
lcall
xlat
push
je
and
loope
lahf
push
in
das
fldenv
adcl
lods
xchg
dec
sahf
xor
ror
popf
ds
cmpsl
cltd
push
xchg
shrl
es
in
out
mov
xchg
push
jmp
and
sub
xor
add
movsb
xor
pop
or
test
jp
xchg
popf
sub
loop
mov
mov
xchg
setne
pop
or
sbb
sub
mov
rcr
and
fnstenv
cli
sbb
cmp
daa
sub
in
insb
adc
ret
into
and
push
shl
test
push
xorb
je
mov
fwait
nop
mov
mov
out
mov
and
andl
xchg
stos
jecxz
mov
faddl
xchg
push
fs
jbe
jno
cltd
and
scas
ds
sub
test
aas
adc
mov
test
sbb
fisubrl
popa
and
bound
cmp
shlb
aam
xchg
adc
jle
fwait
pmaxsw
frstor
mov
js
or
mov
mull
and
inc
in
loopne
and
ljmp
fidivrs
inc
jne
fwait
jns
cmpsb
cmc
mov
pop
lahf
ss
stc
mov
lret
xchg
jbe
and
or
ds
jl
scas
dec
adc
lock
pop
out
insl
or
and
add
adc
out
sbb
iret
fmulp
sbb
pop
popf
or
sbb
insl
and
add
popa
test
out
and
jb
int3
fdiv
mov
ds
pusha
xchg
push
and
cmp
rcrl
pop
and
jbe
push
cwtl
outsl
pop
dec
mov
adc
mov
mov
jns
mov
repnz
and
sbb
scas
daa
pusha
test
stc
dec
stos
xor
cmc
mov
inc
lea
or
ds
xor
rcr
pushf
stc
xchg
adc
sbbb
iret
fdivs
sti
enter
inc
mov
and
adc
and
aaa
push
les
mov
insl
jp
push
lcall
jae
dec
xchg
jb
and
cltd
fnsave
pusha
adcb
ret
mov
push
je
shl
dec
ja
push
add
test
repz
mov
xor
pop
mov
addb
daa
rolb
and
stos
sbb
iret
push
outsl
aad
mov
pop
and
clc
aaa
mov
cmpsb
and
movsb
jmp
mov
call
insb
and
mov
mov
pusha
in
and
xlat
fistpl
nop
pop
jecxz
movsb
add
jg
movsb
jns
clc
xor
and
lea
inc
jp
mov
fsubrl
outsb
sbb
dec
lret
popa
ljmp
movl
cltd
in
jno
stos
enter
xchg
jnp
out
js
int
xchg
pop
pop
pusha
cmp
fcomps
test
in
lods
push
mov
jecxz
jo
aad
cmpsb
jno
pop
xchg
mov
lock
dec
jmp
imul
xchg
and
pop
bound
and
jl
pop
imul
inc
movsb
lret
loop
fidivrs
jns
inc
xor
and
je
loopne
int
fisubrs
fisttpll
enter
add
xor
loope
insl
inc
dec
mov
and
jl
and
and
loope
test
mov
xor
in
popa
test
ret
and
ljmp
movsb
mov
cli
movsl
or
or
dec
jne
shl
and
jge
fwait
pop
sub
cld
mov
das
xchg
add
pop
or
popa
adc
mulb
ds
xchg
pop
add
and
fwait
test
and
lds
xor
inc
data16
inc
and
jmp
mov
into
test
sarl
andb
xor
xor
mov
jmp
dec
mov
sbbb
xchg
pop
ja
imul
lods
movsl
pusha
aam
cmc
and
mov
fisubl
test
out
aaa
addr16
and
dec
ss
clc
ret
jge
or
cmp
int
cwtl
mov
outsl
xor
dec
mov
xor
mov
lret
jmp
sarb
gs
adc
es
fistl
fimull
das
popa
jns
mov
inc
inc
fwait
sbb
fdivs
or
sub
pushf
push
xlat
out
and
mov
fisubrs
out
mov
data16
jp
xor
mov
adc
push
jecxz
push
push
sbb
mov
or
sub
and
sahf
dec
and
scas
pop
dec
push
aas
jmp
mov
and
adc
sub
lods
mov
fs
xor
fistl
enter
pop
mov
jp
pusha
sub
mov
jnp
lcall
popa
add
push
out
inc
xchg
aam
mov
push
sub
mov
popa
cs
cmp
jno
sub
scas
inc
fwait
les
lds
and
jne
dec
and
dec
pop
and
testl
insl
push
and
and
mov
popf
mov
loop
or
jnp
add
rcrb
mov
fbld
inc
std
pushf
pop
push
movsl
mov
sti
lret
aaa
shrb
pop
cmpb
jp
lahf
push
enter
dec
mov
popa
loope
xchg
push
cld
inc
and
jp
push
mov
lods
mov
jle
push
pusha
and
xchg
or
mov
xchg
lock
add
and
cmpsl
int
and
rcl
jl
add
push
in
mov
and
push
enter
jns
jl
fsubrl
dec
add
push
xchg
and
mov
pop
and
or
into
push
mov
lahf
dec
outsl
sub
inc
in
mov
jns
add
and
aas
or
pop
aad
mov
inc
movsl
cltd
test
fmull
scas
xor
and
out
jae
mov
fstp
fisubl
dec
popa
icebp
sbb
xor
loopne
insl
pop
iret
push
outsl
push
mov
or
xlat
pop
and
test
or
movsl
dec
push
sbb
jge
movsl
lock
nop
loopne
cltd
cmp
aaa
mov
pop
and
mov
adc
pusha
stc
and
rcrw
orb
xor
cltd
cmpsl
and
fiadds
jl
mov
and
push
xor
imul
mov
cmpsb
fistpll
mov
xchg
push
movsb
mov
outsl
push
popa
mov
push
fsubp
movsb
mov
bound
bound
pop
xchg
mov
inc
jl
inc
or
pop
dec
aad
scas
xorl
push
pop
and
inc
jno
pop
cltd
and
test
aad
and
jle
xor
and
and
pop
and
arpl
jmp
cmpsb
inc
inc
dec
adc
in
test
mov
push
cmp
mov
stos
stos
test
inc
push
pop
ds
dec
and
push
mov
fsubs
sub
xor
in
out
pusha
and
push
cmpb
pop
mov
cmpsl
mov
ja
and
and
rclb
xor
ret
mov
jle
xchg
add
adc
push
stos
jecxz
lea
and
movsl
jb
adc
ljmp
test
mov
lock
ret
inc
pop
pop
add
shlb
pop
aam
ret
dec
mov
pop
lds
lret
popf
pusha
xchg
test
mov
push
push
mov
pop
call
lock
imul
mov
sbb
mov
test
cmp
rclb
sahf
or
pop
jl
jl
xor
jno
xchg
add
arpl
and
xorl
outsl
jmp
jno
fimuls
pop
and
sub
cmp
clc
mov
jae
jo
subl
sub
xor
stos
add
and
out
or
mov
pop
std
cld
popf
addr16
pop
pop
mov
mov
fstpl
cmp
insl
into
sbb
and
and
pop
mov
data16
mov
and
loopne
cmp
les
xor
movsb
or
jne
sub
mov
mov
imul
popa
cmp
xchg
ja
mov
mov
clc
adcl
movsb
test
add
and
adc
sub
cmc
dec
outsb
and
sbb
xchg
mov
scas
movl
add
jmp
lods
and
aas
cmc
mov
mov
and
movsb
jp
cmp
dec
test
dec
lock
push
lods
inc
push
sbb
das
cmp
jbe
add
movsb
jmp
addl
sub
dec
ror
jo
sbb
outsb
xchg
pusha
pop
and
push
dec
jmp
or
mov
pop
jmp
cmpsb
and
pushf
adc
and
jp
aaa
cmpsb
test
jmp
in
inc
mulb
cwtl
adc
cmp
cmpsb
xchg
and
pop
mov
xlat
inc
jp
cmc
ljmp
mov
ja
xchg
stos
cltd
out
cmpsl
and
lock
loope
popa
popa
cmp
nop
jne
cmp
pop
xor
inc
and
test
jno
shrl
call
and
mov
movswl
je
and
xor
and
pop
inc
lock
lahf
stos
std
add
push
iret
mov
push
jb
pop
jno
dec
cltd
mov
outsb
jne
xchg
int
cmpsb
ficoms
test
pop
js
iret
aad
out
arpl
cmc
scas
and
jle
and
das
int
clc
repnz
push
cmp
enter
and
stos
arpl
fsub
mov
dec
push
adc
out
sbb
data16
cmp
inc
or
cltd
inc
iret
inc
imul
test
sbb
adc
mov
imul
push
jne
pop
sbb
dec
inc
pop
jge
pushf
out
mov
push
pop
rclb
fucomip
pop
xor
lods
out
std
sub
add
mov
mov
ja
and
or
jbe
fsubs
aaa
pop
mov
subb
ret
out
and
insb
and
jno
push
mov
bound
out
dec
movsb
orl
push
loopne
xchg
stos
popa
sbb
enterw
adc
and
and
out
loope
sub
fwait
pop
pop
xchg
clc
lea
ret
mov
adc
pop
dec
xor
fidivrl
sbb
nop
push
das
and
leave
cmp
jo
and
scas
add
stc
mov
adc
mov
mov
mov
iret
das
in
dec
fcomp
pop
movsb
gs
adc
outsb
popf
and
dec
push
je
dec
and
leave
testb
ret
cmp
cmp
dec
and
daa
and
xor
fimuls
shll
imul
and
outsl
and
sbb
cmc
popf
adc
xor
inc
nop
sub
xchg
pushf
mov
scas
test
stos
xchg
rolb
mov
cmp
out
dec
popf
and
fisubs
sarl
int3
fcomi
mov
xor
xchg
enter
push
mov
pop
loope
addr16
jno
mov
mov
adc
sub
movl
scas
mov
test
and
lret
dec
repz
andl
dec
inc
or
lds
sbb
das
fists
out
jns
movsb
add
sub
loope
ret
imul
aas
in
push
pop
les
pop
add
lods
fsub
mov
test
rep
sti
and
lea
and
fidivrl
loope
lea
pop
das
and
mov
and
fst
mov
sub
push
popf
jae
and
imul
gs
in
repnz
mov
lahf
notl
jne
and
pop
mov
lds
insl
pushf
in
inc
insl
cmp
mov
scas
mov
fildl
and
int
fsubs
dec
pop
je
xchg
and
xorl
pop
pop
or
sahf
ljmp
and
add
repz
mov
and
inc
cmp
pusha
movsb
lea
xor
xchg
call
loope
fwait
and
push
loopne
inc
pop
sub
mov
scas
popa
cmp
push
ds
or
test
lods
xchg
jmp
rclb
mov
pop
andl
mov
jp
mov
pop
jno
pop
mov
movsb
adc
inc
dec
mov
mov
adc
mov
push
sbb
ss
mov
in
in
lret
in
push
add
cmp
frstor
stc
ret
lods
cmp
das
lock
fcomps
mov
gs
sub
dec
or
insb
inc
add
test
mov
or
push
mov
xchg
and
dec
pop
cmp
add
push
test
inc
and
ja
std
es
adc
popa
dec
inc
daa
scas
nop
aaa
repz
pop
and
and
mov
and
lock
scas
iret
clc
adc
and
lcall
push
add
test
sub
or
cmp
and
mov
out
out
xchg
cli
xchg
inc
les
sbb
test
test
pop
adc
jo
inc
xor
mov
mov
xor
lea
out
jno
jl
fisttpl
fnsave
rolb
or
and
stos
popa
adc
cmp
and
push
movsb
cs
into
bound
sub
mov
mov
add
mov
inc
mov
stos
pop
cltd
pop
inc
in
push
movsb
stc
dec
rclb
xchg
into
jle
inc
xchg
inc
shl
push
orl
jns
or
sbb
leave
sti
test
jmp
fwait
lret
orb
jnp
repnz
push
nop
pop
cmc
dec
out
pop
jbe
addr16
cwtl
out
xor
and
sbb
call
xor
mov
and
mov
dec
and
pop
push
xor
cmc
sub
or
mov
aas
sbb
int3
add
and
mov
jg
inc
pop
insl
and
sti
fs
push
xor
in
gs
adc
push
jae
dec
cmp
and
add
lds
fsubrs
std
pop
mov
inc
xchg
and
mov
movsl
jne
adc
and
subl
into
jp
or
sub
mov
ja
push
sbb
ljmp
ss
lods
test
fsubs
fwait
push
and
mov
or
xor
sub
daa
sub
and
int
add
xor
sub
ja
fldpi
xchg
and
leave
subl
adc
testl
dec
and
xchg
add
adc
cmp
pop
test
and
and
les
movsb
dec
inc
and
outsl
jg
lods
sbb
in
adc
or
mov
cmpsb
popa
outsl
jne
lds
ss
addr16
hlt
sbbl
ljmp
xlat
jnp
pop
scas
mov
adc
push
subb
insl
jno
mov
pop
inc
or
popf
sarb
push
in
and
mov
popa
dec
gs
pop
sub
cwtl
movsl
and
iret
mov
push
push
ss
mov
lahf
xchg
lea
hlt
sub
dec
mov
mov
test
add
std
pop
push
adc
push
inc
lods
dec
cmpsb
mov
ss
push
inc
testl
xor
push
or
fiaddl
sbb
and
push
add
popa
jle
js
sub
or
sbb
jle
lods
and
dec
and
clc
arpl
jne
xchg
and
cmp
out
sbb
xchg
jl
fidivs
add
stos
dec
mov
rcrb
cmp
pop
inc
xchg
xchg
or
xor
and
push
adc
and
pop
jl
loope
and
add
adc
mov
orl
push
decb
fdiv
popa
and
aam
inc
addr16
mull
and
out
pop
je
jmp
adc
aad
mov
imul
test
mull
dec
ja
in
aaa
setge
sub
icebp
add
mov
scas
imul
mov
xor
int
xor
sub
in
cmp
adc
cmpsl
mov
out
test
or
fimull
or
mov
in
test
mov
insb
lret
fisttpl
lret
adc
mov
test
out
lds
push
add
and
sbb
loopne
and
sahf
and
cwtl
adc
jle
popa
and
in
push
jecxz
push
and
scas
nop
mov
adc
push
movsb
mov
xor
push
lods
mov
cwtl
das
andb
fwait
and
add
cltd
and
fwait
sub
cmc
and
xchg
bound
mov
cmp
and
cwtl
test
andb
jno
in
inc
cmp
dec
iret
lods
rcrb
inc
and
pushf
adc
dec
and
out
jmp
jg
negb
pop
jne
mov
in
jbe
fimuls
inc
inc
jle
or
rorl
mov
mov
test
push
xlat
out
and
divl
cmc
sub
aaa
and
icebp
mov
shrb
xchg
aam
add
lods
and
scas
rcrb
and
mov
jnp
fs
xor
shlb
dec
mov
pop
xor
std
pop
push
sub
xchg
and
and
stos
and
push
ret
push
jl
jne
fwait
inc
push
and
mov
and
cmp
arpl
imul
out
and
mov
movsb
sub
rcll
fisubl
les
in
and
aam
aad
adc
das
and
movsl
popa
shl
inc
dec
sub
call
and
and
mov
std
and
xor
and
dec
xor
and
enter
das
push
ja
mov
int3
mov
shl
out
mov
lcall
gs
inc
int3
jge
jg
cmpl
shll
cs
mov
push
jnp
xchg
adc
and
xchg
jmp
and
or
push
lret
and
xor
and
cmp
imul
and
lods
xchg
out
adcl
dec
inc
mov
sbb
in
sahf
mul
mov
xchg
and
mov
inc
jbe
outsl
popf
mov
dec
xchg
in
stos
pop
icebp
imul
outsl
nop
cmp
and
dec
xchg
mov
das
pop
in
jo
and
xor
fwait
xorb
inc
stos
add
and
push
or
and
xchg
int3
xor
aas
cmp
push
dec
sbb
mov
cmp
jb
add
repz
in
push
xor
or
pop
push
scas
ficoms
leave
mov
popa
jnp
mov
das
imul
daa
pusha
mov
or
push
clc
mov
cmpsl
adc
notl
push
imul
loope
inc
sbb
xor
sahf
push
xchg
incb
mov
push
mov
and
xor
xorb
adcl
xor
pop
inc
and
mov
pop
icebp
and
call
cli
inc
pop
push
pop
ret
imul
testb
mov
lcall
jb
xchg
xor
mov
and
pop
fcoml
and
mov
adc
xchg
data16
movsl
sti
in
and
or
lret
jbe
xlat
and
lods
js
xor
int
mov
and
test
adc
inc
movsl
push
push
sbb
sub
lret
pop
in
inc
jo
int3
popa
or
inc
imul
dec
jg
pop
jo
enter
dec
fisubl
cmpsl
add
jmp
js
nop
and
inc
xchg
lods
mov
fdivp
mov
mov
push
and
lret
push
movzbl
add
scas
inc
and
orb
lods
sub
and
jb
mov
ss
popf
gs
mov
lret
gs
shlb
bound
int
sub
subl
pop
sahf
adc
lret
push
mov
sbbl
or
lret
dec
xor
push
test
aas
push
out
sti
lea
rolb
mov
call
out
jbe
jmp
mov
push
ret
orl
or
and
imull
add
test
je
les
cld
ljmp
cltd
imul
push
or
cmpl
into
and
aam
cmpl
sub
push
sub
xchg
lcall
xchg
adc
not
or
mov
loopne
cmp
add
js
dec
push
mov
into
pop
xchg
outsb
push
mov
add
and
shl
xor
adc
and
cmp
adc
add
dec
imul
and
mov
clc
and
jecxz
xor
and
cmp
out
cltd
das
cld
adc
int
or
imul
push
add
nop
push
and
ja
mov
sub
arpl
enter
xor
fmuls
pop
dec
das
test
inc
or
je
cwtl
mov
subb
lret
and
stos
xorl
pushf
imul
and
addr16
add
lcall
movsb
sarb
cli
pop
repz
ret
push
pop
jecxz
out
adc
pop
in
insb
std
cmp
pop
jae
imul
repnz
mov
mov
sbb
pushl
and
mov
seta
sub
xchg
jp
pop
push
xor
sbb
inc
lret
push
lahf
mov
push
stos
and
into
sbb
and
ds
push
lahf
pop
pop
and
std
out
jb
adc
add
test
in
push
mov
out
pushf
cmp
sub
cltd
insl
push
scas
cld
push
jge
rorl
imul
sbb
out
lods
xchg
adc
sbb
and
repz
mov
cmp
jae
and
xchg
sahf
mov
cmpl
dec
mov
push
inc
adcb
rorl
lock
fdivl
test
dec
add
lcall
fsubs
fcomi
xchg
xchg
mov
sbb
cmp
add
int3
xorb
xchg
mov
fadds
xor
mov
pop
jb
mov
cmpsl
fs
loope
lods
mov
xchg
in
inc
jne
jno
jbe
fisubrs
or
mov
push
add
mov
and
dec
stc
cltd
dec
je
and
jmp
xchg
fsubrl
and
shrl
and
loopne
fistpl
or
xchg
xchg
mov
mov
and
jle
mov
sbb
adc
mov
jno
mov
xchg
daa
mov
and
jecxz
clc
xor
xchg
fwait
and
jp
add
gs
fbld
aad
push
sub
mov
pop
dec
call
enter
mov
push
sbbl
and
shlb
or
std
xchg
lret
daa
push
cmpsb
insl
inc
pop
push
and
cmp
xchg
ds
out
mov
dec
popa
repz
mov
add
mov
cmpsb
add
es
icebp
stos
and
imul
and
je
loopne
sub
and
xchg
xlat
dec
adc
mov
jnp
dec
fists
insb
divb
pop
lock
jbe
iret
adc
popa
and
xchg
xor
jmp
lret
outsb
pop
mov
and
dec
sti
xor
mov
nop
movsl
inc
mov
mov
and
aaa
out
jnp
jmp
lahf
sbb
xor
and
xchg
or
mov
popa
jb
lea
or
ret
mov
dec
jecxz
xchg
cmp
add
mov
adc
out
sbb
es
sbb
loop
mov
ret
es
aas
out
fcoml
ljmp
and
je
inc
sarl
movsl
jno
cld
inc
popa
in
mov
addr16
pusha
xchg
shlb
adc
xchg
lods
repnz
and
fnstsw
cmp
and
dec
test
or
xchg
rolb
testl
sbb
orl
xchg
lret
mov
repz
sub
dec
adc
das
enter
or
aad
addl
in
rorb
js
pop
inc
int
into
cmp
jae
jg
xchg
fstpl
push
in
dec
fidivrl
inc
and
pushf
scas
jns
lahf
mov
add
clc
sub
incl
arpl
pop
int
dec
push
inc
mov
mov
mov
movsl
sbb
loopne
lret
or
loopne
inc
mov
jnp
push
xor
popf
and
dec
scas
mov
mov
sub
aaa
and
daa
mov
imul
es
sti
iret
lds
cli
mov
stos
pusha
xchg
popa
lock
call
sbb
stos
and
xchg
and
cmp
push
push
jg
ds
mov
or
lcall
add
fbld
xor
or
movsl
inc
xor
icebp
lods
xchg
sub
mov
cs
fstpl
pop
jg
jae
sbb
pop
negl
and
dec
cld
xchg
and
imul
fildll
popa
data16
mov
leave
pop
loop
js
jnp
xchg
int
mov
mov
mov
xor
sbb
and
scas
bswap
pop
adc
mov
fwait
out
sbb
out
test
pop
sub
test
shlb
setae
test
push
adc
adc
mov
and
pop
adc
jne
sarl
xchg
test
aad
pop
rolb
add
ss
jnp
mov
pop
popa
shll
lea
and
stos
sbb
js
and
mov
popf
jne
int
and
aam
sbb
and
jmp
pusha
or
xchg
and
cmpb
movsb
inc
movsbl
cmpsb
shlb
in
data16
xchg
and
das
je
and
push
xchg
imul
dec
popa
sbb
inc
xchg
in
xor
clc
stos
cli
stc
mov
cmpsb
sub
scas
and
out
jge
mov
and
cmp
mov
in
aaa
js
sarb
mov
sbb
aas
jno
push
adcb
sub
mov
lret
dec
lods
popa
loop,pt
adc
clc
pop
xor
es
out
fsts
loopne
inc
pop
test
mov
xrelease
dec
pop
and
popf
xchg
cs
jle
push
mov
movsb
pop
mov
inc
dec
roll
sub
push
xchg
and
imull
and
add
pushf
sub
sbb
pop
in
mov
call
mov
or
cmc
mov
imul
jo
mov
mov
in
mov
fnsave
adc
dec
mov
lcall
jge
in
cmpl
and
sahf
push
out
outsl
int3
pop
popf
push
and
jge
and
mov
and
cmp
cmp
call
xchg
test
in
ja
insb
cwtl
movsb
push
aam
dec
adc
orl
xor
jl
or
movsl
and
ret
and
lock
scas
jbe
and
push
test
adc
pusha
mov
cmp
mov
subl
insl
or
loopne
lods
int
popa
repz
lock
fistpl
jle
movsb
mov
add
shl
and
lea
xor
fadds
xchg
inc
push
and
inc
scas
and
repz
mov
xor
test
cmpl
cmpsb
sbb
outsb
ficompl
inc
sbb
subl
jg
shl
jns
lcall
into
fiaddl
or
test
call
aam
leave
arpl
stc
or
mov
xorl
mov
and
clc
mov
imul
inc
dec
and
mov
arpl
leave
cmp
xchg
stos
sbb
and
aam
cmp
sub
lea
popw
nop
negb
and
xor
and
xchg
scas
loop
and
cmp
mov
rcl
mov
xchg
test
aas
out
subb
adc
push
sarl
mull
mov
sub
mov
sbb
popa
daa
cwtl
add
xchg
scas
cli
rcrl
mov
imul
and
das
insb
mov
push
test
fnsave
loope
in
scas
dec
outsb
lock
jmp
push
adc
mov
cmp
and
sti
stos
jne
mov
sbb
pushf
hlt
xchg
mov
pop
xchg
ljmp
push
mov
dec
les
fistps
scas
flds
cltd
jle
sbb
test
lcall
xor
xor
jns
roll
sub
add
or
and
lret
add
faddp
pop
stc
and
mov
and
lds
or
out
fistpl
ds
and
sub
and
test
mov
dec
dec
orb
push
inc
ss
cmp
and
cmp
or
jb
sti
push
mov
and
lock
xchg
add
mov
std
jnp
sbb
lcall
add
lahf
orl
stos
adcl
mov
and
xor
int
xchg
les
and
fistl
cltd
cmp
and
dec
test
aad
jne
mov
fnstenv
test
and
adc
pop
iret
lock
pushf
inc
shlb
popa
aad
fidivrl
lods
andb
mov
and
pop
xchg
cmpsl
pop
lahf
push
data16
fcoms
loope
lcall
jno
pushf
insb
and
and
inc
xor
insl
fldenv
dec
aas
sub
jge
mov
mov
and
fsubrs
sub
sub
jb
push
gs
push
pop
and
pop
add
fstp
jae
mov
add
out
mov
jns
sbb
and
mov
fstps
or
movsb
in
xor
ficoml
push
shrb
and
xchg
popa
add
inc
jg
and
add
jno
and
or
and
inc
repnz
push
lret
and
xchg
xchg
cmp
inc
fwait
test
xor
and
add
or
xchg
bound
ljmp
mov
and
pushf
jnp
push
jne
inc
movsb
mov
in
xor
popa
rol
repz
mov
mov
and
jae
mov
or
cli
popf
or
mov
cmp
dec
add
push
and
jns
lods
arpl
and
and
out
and
push
cmc
dec
gs
sub
sub
rcrb
lcall
jne
cmp
sbb
mov
bound
mov
les
js
xor
mov
jmp
and
test
dec
xor
push
and
faddl
jbe
es
mov
fldt
int3
or
cld
mov
and
nop
push
lcall
add
int
and
dec
xchg
test
inc
sub
xor
ret
ret
push
push
sbb
and
cli
test
push
xlat
cmp
ja
pop
mov
and
stc
push
cmpsl
mov
xor
adcl
push
das
push
ja
inc
mov
or
adc
xchg
mov
or
ss
sahf
and
xchg
or
sub
and
mov
and
sub
shll
adc
and
mov
cmp
pop
cmp
inc
imul
mov
enter
cwtl
and
test
or
dec
xor
in
sub
adc
sub
sbb
cli
sub
testb
xor
mov
and
into
outsl
jae
and
dec
mov
aad
std
pop
sbb
movsb
shrl
push
inc
adcl
or
mov
adc
mov
daa
xorl
adc
jbe
and
push
jo
aam
and
mov
inc
jae
mov
cs
jno
mov
arpl
mov
mov
xchg
mov
mov
jge
or
in
sbb
dec
inc
jge
and
jle
loopne
xor
and
stc
cmp
outsl
out
iret
sub
sbb
sbb
sub
outsl
pusha
jge
popa
push
push
cli
sbb
icebp
jne
dec
jg
and
pop
in
push
xchg
and
sbb
fadd
mov
push
sbb
lcall
pop
aad
mov
hlt
fstp
cwtl
lahf
lods
dec
and
xchg
and
pop
xchg
fldenv
mov
mov
xor
mov
or
pop
mov
cli
xor
fs
cmp
xchg
shrl
popa
xor
inc
fcoms
mov
test
scas
and
push
xchg
rorl
and
aad
lea
popf
in
fmul
movsb
adc
sub
aad
push
andb
out
xor
sub
test
lcall
and
or
xchg
lahf
pop
ds
das
and
and
adc
mov
dec
nop
xchg
in
mov
fistps
and
push
add
and
test
and
mov
push
mov
subl
mov
cmpsb
xor
pop
fwait
cmp
mov
shlb
xchg
sbb
and
dec
lods
sbb
sti
fs
test
sbb
and
jmp
les
add
scas
popa
or
andl
sbb
adc
pop
pop
jns
push
dec
cmp
mov
push
jge
xchg
xchg
les
xchg
push
and
mov
dec
fistl
inc
mov
dec
subl
scas
mov
jle
sub
cli
sub
movsb
pop
inc
jg
pusha
and
mov
out
pop
and
pushw
add
cmp
cmp
sbb
mov
xchg
sbb
push
mov
and
mov
add
and
cmp
adc
sbb
mov
jmp
stos
bound
les
cld
mov
test
je
out
and
mov
lock
and
std
insl
pop
add
inc
popf
mov
xor
add
mov
scas
cld
and
lea
movsl
mov
inc
add
jg
scas
out
and
rclb
mov
stos
push
bound
ljmp
andl
jecxz
lret
and
arpl
xor
mov
pop
cmp
arpl
xor
scas
idiv
mov
pop
pop
leave
icebp
add
lods
pop
insb
repz
and
cmpl
pusha
fmuls
cltd
leave
and
mov
adc
movsb
in
sub
or
out
imul
divb
cmp
mov
jmp
cltd
mov
push
mov
xor
or
sbb
add
xor
shll
and
push
fucom
out
push
icebp
and
int3
shll
int3
and
sbb
mov
popa
mov
and
dec
sbb
xchg
lock
push
pusha
mov
stos
and
aam
adcl
cmp
and
cmp
lret
sti
lds
push
push
cmp
ret
xchg
xchg
xor
sub
mov
mov
sti
add
add
xlat
mov
and
gs
pop
and
daa
mov
cltd
and
mov
lret
or
push
mov
leave
or
popa
mov
sbb
mov
in
jge
mov
and
jecxz
fisttpll
cmp
or
lcall
xchg
aad
imul
add
addr16
push
push
pop
jmp
jno
push
mov
inc
int3
add
sub
mov
inc
add
xor
nop
pop
loopne
andl
xchg
mov
xchg
xor
ljmp
pop
push
movsl
add
and
addb
sub
jae
push
jns
movsb
dec
repz
int3
data16
jge
iret
jecxz,pn
or
pop
mov
fsubrs
aam
outsl
or
fimuls
sti
xor
lahf
imul
and
ficoml
sahf
cmp
lods
and
neg
jnp
subl
mov
pusha
adc
sub
outsl
stos
cvtdq2ps
xchg
cmp
sbb
xchg
sub
imul
inc
and
cmp
lea
and
fs
xor
xchg
fsubl
rclb
cmpl
mov
stos
mov
dec
push
dec
mov
mov
push
sub
or
lcall
cmp
xor
out
and
jge
jg
and
mov
shll
adc
and
add
xor
fsubl
in
mov
jmp
ljmp
push
sub
xchg
push
add
mov
lods
push
xor
or
dec
xchg
mov
jno
jmp
pop
pop
lods
pop
das
xor
push
movsb
jmp
xchg
and
das
loope
fwait
push
out
pusha
mov
sub
jo
inc
mov
mov
cmp
fstps
dec
mov
and
fs
fisubrl
xchg
repz
outsw
mov
jno
jge
mov
add
or
push
test
mov
pop
ss
adc
and
inc
push
repnz
dec
dec
push
test
push
mov
lds
mov
repnz
or
movsb
or
jne
cltd
cld
mov
inc
push
fidivl
mov
sahf
aas
jle
cli
mov
mov
lret
xor
xor
mov
adc
imull
inc
jg
enter
inc
repnz
or
cltd
jnp
sub
and
pop
aas
cs
pop
mov
and
out
add
into
and
es
xchg
iret
inc
mov
and
mov
add
xchg
adc
ss
mov
test
sbb
xor
or
push
aas
pop
test
xlat
mov
jae
dec
mov
cmp
jne
push
adc
test
imul
insb
adc
jno
fdivrl
jmp
pop
adcl
popf
cmpl
and
push
dec
outsb
sub
cmp
insb
int3
orb
sbb
cwtl
out
lods
jae
movsb
cmp
and
inc
bound
fwait
adc
lds
cli
ficoms
or
jo
or
ss
mov
sub
fstpl
mov
aad
fisubl
push
mov
mov
mov
data16
and
lret
shrl
das
movsb
push
adc
cltd
loop
or
adc
out
imul
fbld
scas
fcmovbe
movsl
mov
dec
loopne
mov
popa
addr16
ret
xchg
sub
jb
push
jno
sahf
cwtl
jae
and
inc
int3
mov
dec
mov
mov
sub
iret
fwait
push
inc
movsb
add
nop
jecxz
pop
pop
xchg
and
cmp
inc
and
lods
sub
stos
and
mov
push
mov
pop
in
add
clc
int
les
stc
lret
test
inc
testb
ret
ss
popf
outsl
dec
and
rclb
fldl2e
xchg
lods
and
movsl
mov
cmc
leave
or
cmp
dec
sub
add
jl
xlat
enter
inc
add
mov
shrl
or
push
push
aas
mov
repz
sbb
sahf
mov
test
xchg
pushf
mov
cli
mov
lea
stos
xchg
ret
pop
lcall
sub
mov
xchg
in
test
in
movsb
fiaddl
xor
add
and
dec
jmp
scas
and
or
xchg
add
fwait
xor
lret
and
orb
mov
mov
xor
or
cmp
or
xor
popa
xor
inc
sub
xchg
cmp
dec
and
inc
sbb
dec
dec
scas
mov
sbb
jl
pushf
stc
and
xchg
sub
dec
ret
and
arpl
sub
dec
jmp
sti
dec
sbb
les
daa
mov
mov
scas
xchg
repz
lods
push
pop
loop
cmp
test
jmp
lock
cli
test
stc
inc
pushf
xchg
aaa
nop
decb
sub
ret
and
fbstp
sub
and
imul
testb
out
jae
jecxz
cli
inc
call
int
dec
int3
insl
mov
and
dec
mov
inc
out
lds
inc
repz
cmpsb
into
jle,pn
rorb
popa
dec
pop
les
jae
mov
loope
outsb
jne
sbb
and
sbb
test
outsl
cmp
fsubrs
lret
das
xor
shlb
mulb
xchg
mov
fisubl
cmpsl
pop
xchg
add
cmp
mov
mov
sub
loopne
and
xorl
cltd
lock
xchg
and
mov
mov
jmp
mov
out
sti
mov
popf
and
sbb
push
sub
jo
pxor
mov
pusha
in
cmpl
in
cmp
hlt
cltd
jbe
sub
inc
sub
ret
jmp
and
fisttps
shll
movsl
and
insb
jg
popf
pop
and
fisttpll
cmp
sub
dec
ss
sahf
cltd
cmp
and
jle
inc
daa
das
cltd
out
cld
mov
in
add
cmp
and
mov
stos
or
aad
sub
in
inc
movsb
add
xchg
mov
sub
xor
xor
lcall
sbbl
fldt
imul
pop
mov
and
inc
std
jnp
ret
and
sbb
xor
movsl
jo
add
loope
js
addr16
mov
and
test
in
test
and
imul
add
inc
test
xchg
sbb
sub
add
lea
push
lock
jg
adc
pop
push
adc
xchg
sub
arpl
and
mov
in
xchg
mov
xchg
popa
mov
jbe
mov
andl
out
popa
sub
jp
add
push
int3
xchg
and
jle
inc
loopne
dec
xor
or
in
mov
pop
dec
xchg
sbb
pop
and
movsl
jl
pop
testb
out
fidivs
out
and
cmpsb
js
mov
popa
jecxz
xchg
jnp
cmp
sub
sub
sub
sbb
shlb
out
aam
scas
mov
test
sbb
mov
push
das
into
and
cli
shrl
and
sub
and
cmpsl
cmp
and
xor
xchg
js
and
out
and
jmp
mov
and
pop
ficoms
fwait
loope
lods
aam
or
or
fadds
cmp
dec
and
sbb
sub
inc
imul
sbbl
cmc
add
hlt
loop
jp
pop
rcrb
lcall
incl
je
push
sbb
popa
cmp
mov
and
ret
fs
and
and
push
inc
xchg
jmp
fsubrs
cmp
mull
scas
and
push
arpl
and
adc
xor
and
cmpsb
into
pusha
jle
cmpsl
and
and
and
push
and
and
ret
and
in
loop
sbb
cmc
sub
popa
fmull
inc
call
mov
mov
inc
outsl
mov
lcall
xor
mov
inc
fwait
clc
js
and
pop
xor
mov
push
cwtl
jb
pushaw
imul
mov
stos
jae
pop
lods
jb
jmp
or
cld
sub
mov
jno
or
push
sub
mov
out
test
xchg
push
inc
adc
pop
pusha
mov
and
push
pop
pop
mov
mov
aam
jg
pop
and
dec
sub
cmpsl
mov
das
fwait
lds
nop
dec
push
out
jno
xor
mov
imul
cmp
jb
fmull
and
xor
push
or
jno
sarl
and
pop
ljmp
cmpb
sub
cltd
mov
push
jmp
fadds
sarb
out
adc
in
xchg
mov
or
cmp
and
lds
mov
and
push
xchg
gs
and
mov
xor
pop
orl
sbb
adc
leave
mov
out
mov
pushf
and
lcall
and
lahf
loope
popf
cmpsl
push
and
push
lret
adc
out
mov
sub
and
jbe
add
aas
sahf
movsb
mov
jmp
dec
lar
scas
popf
popa
enter
lret
and
jmp
call
push
and
mov
ds
sub
cmp
or
inc
and
and
cmc
xor
add
push
pushf
testb
fwait
out
fistps
int
das
mov
test
test
mov
cli
push
cmp
inc
mov
jb
and
inc
jl
movsb
xchg
xchg
inc
xchg
es
inc
rcrl
test
mov
shll
mov
imul
ror
add
mov
cmp
in
and
dec
inc
jge
test
lahf
in
fmuls
xor
push
or
movsb
dec
loope
xchg
test
iret
scas
cmpsl
das
roll
popa
add
inc
inc
aaa
push
and
out
gs
loop
or
ss
lods
push
fsub
jle
cmp
aaa
mov
cmpb
jae
cld
or
pop
and
mov
cmpsb
sti
cmp
loopne
into
mov
mov
popf
xor
mov
push
fiadds
adc
and
inc
mov
xchg
xlat
and
movsb
jo
and
push
sahf
mov
pop
inc
xchg
sti
pop
jge
ja
test
sbb
stc
sarb
in
and
push
mov
and
sbb
scas
cmp
lods
imul
inc
cli
insl
and
fisttps
mov
cld
subl
adc
insb
and
cmpsl
push
movsl
enter
loope
mov
cld
ss
mov
out
xchg
xorl
inc
in
pop
icebp
mov
jle
dec
stc
pop
jecxz
and
daa
js
push
push
pop
sub
repnz
bound
and
ds
push
and
rcll
mov
or
data16
sbbl
repz
arpl
leave
adc
in
and
inc
adc
popf
fstp
loope
push
fldenv
jns
or
and
adc
add
lods
dec
cmp
loope
push
add
jo
popa
mov
inc
and
cltd
sub
and
out
jo
ds
in
mov
or
inc
cmp
and
nop
pop
call
repz
cmpsb
movsb
rcl
clc
ret
addps
mov
cltd
std
cmpsl
and
imulb
push
ds
mov
bound
sti
adc
and
mov
and
dec
sub
adc
sbb
sbb
xor
popf
fucomip
shrl
pop
hlt
cld
xor
jecxz
mov
lcall
mov
ficompl
das
dec
inc
aas
popa
lret
icebp
ds
call
lods
ljmp
rcrl
and
adc
daa
pop
mov
loope
add
idiv
and
dec
inc
dec
and
jle
and
rcl
mov
into
mov
mov
ja
mov
ss
xor
testb
adc
sub
imul
cwtl
dec
popf
and
inc
test
and
aad
sbb
das
popa
mov
and
mov
filds
add
lods
and
out
mov
cmp
push
sub
mov
or
jle
stc
les
xor
and
out
in
push
adc
aas
lds
ret
sub
sar
leave
aam
jp
jle
mov
test
add
push
bound
sub
push
mov
sti
mov
add
jnp
out
movsl
inc
jbe
and
push
pop
sub
lret
lcall
push
and
jbe
jne
adc
cmp
pop
data16
sbb
movsl
loope
sbb
popa
cmp
mov
lcall
pop
in
int
pop
cmp
popa
pusha
movsb
dec
outsb
inc
mov
pop
into
jbe
fwait
and
and
mov
mov
push
mov
aam
int3
out
ss
and
mov
imul
xor
push
add
pusha
cmpsl
xor
movsl
mov
sub
xor
add
and
int3
and
mov
movsl
and
cwtl
icebp
mov
mov
mov
rcll
lret
and
push
pop
jbe
push
movsl
and
mov
and
push
mov
les
push
sbb
scas
mov
pop
loope
sub
xchg
push
clc
cmp
push
repnz
xchg
add
push
shll
dec
imul
mov
repz
cmc
adc
popa
xchg
add
xchg
movsb
sbb
dec
push
pusha
shlb
movsl
lods
xor
into
push
or
and
cmp
push
repz
pop
pushf
stos
and
add
xchg
mov
push
or
stc
test
sbb
sub
jo
push
movsl
popf
imul
xchg
jbe
and
dec
rol
push
outsl
jae
push
or
and
sahf
adc
aam
push
sub
mov
xor
shl
ljmp
cli
out
sbb
push
and
mov
movsb
repnz
outsl
xor
xchg
inc
adc
push
loop
xchg
jo
and
xor
mov
inc
mov
and
xchg
out
xor
mov
cld
jbe
dec
cmovns
and
inc
sub
clc
adc
mov
es
mov
jecxz
jg
popa
rorb
push
fsts
and
or
sbb
dec
and
adc
call
mov
repnz
or
fcmovnb
adc
outsb
out
clc
daa
and
jns
pusha
sbb
and
pop
push
and
nop
dec
pop
cld
mov
jge
stos
out
sub
test
scas
divl
imul
loopne
adc
sbb
not
aaa
cmpsb
das
stos
xchg
jae
sbb
insb
xchg
stc
pushf
lret
outsb
test
mov
jo
movsb
arpl
inc
loop
je,pt
push
scas
mov
xchg
xor
or
sti
rcrb
popa
adc
mov
adc
push
int3
cmp
jbe
adc
inc
sbb
mov
addb
rcrb
pop
test
and
in
push
or
mov
lds
sahf
push
sbb
insl
pop
and
push
cmc
mov
shlb
sub
and
lods
pop
or
jno
mov
push
sub
les
pop
and
mov
and
mov
add
add
call
mov
xor
mov
inc
sbb
outsb
push
fistpl
push
xlat
xchg
xchg
out
xor
popf
xchg
movsl
in
or
popa
mov
pop
sarb
cmpsb
lahf
sarl
insl
sbb
cmp
or
pop
and
movsb
sti
mov
daa
out
mov
cmp
loope
aaa
mov
leave
and
pop
sub
xor
mov
aad
jge
mov
and
cmpsl
inc
out
fdivrs
in
and
inc
push
int
sub
sbb
fnsave
std
pop
and
dec
pusha
fmull
and
pop
sub
xor
cmp
mov
and
andb
jo
cmp
adc
sub
movsl
lds
sbb
test
sbb
and
jno
mov
push
clc
pop
and
fwait
and
fstps
pop
and
arpl
inc
push
and
insl
ss
and
sub
out
and
pusha
mov
mov
test
pop
inc
mov
lahf
movsl
aaa
test
xor
add
aad
sub
and
add
jb
out
xchg
in
inc
dec
popf
mov
mov
and
ljmp
or
mov
add
in
jbe
pop
and
lods
mov
push
jmp
sbb
fs
push
popa
dec
sarb
adc
call
adcb
and
and
imul
add
sub
jno
ret
xor
jae
ja
xchg
jecxz
pop
inc
inc
pop
js
ret
sti
and
mov
into
pop
jl
pop
pushf
cmpsl
xchg
pop
add
sub
jp
stos
cmpsl
xor
adc
sahf
xor
pop
lods
xchg
mov
push
insb
inc
cmpsb
lea
pop
sub
outsb
pop
aas
jno
jp
xchg
out
dec
xchg
or
pop
xchg
xchg
and
test
movsb
sub
loopne
rcll
sub
xor
cltd
and
mov
push
in
cmp
mov
mov
ljmp
mov
or
mov
ss
movsl
pop
leave
and
mov
stc
and
fildll
sub
adc
les
jmp
shrl
dec
cld
and
into
movsl
mov
pop
and
mov
fisubrl
pusha
bound
xchg
and
mov
ds
and
jp
sub
lods
and
sarl
test
xor
aas
mov
loope
movsl
xor
paddb
lret
daa
push
inc
cmp
pop
out
mov
cmpsb
jnp
jns
arpl
cmp
push
mov
pop
push
jae
inc
or
movsl
bound
lret
and
les
and
sub
loope
push
popf
sub
mov
pop
adc
and
std
mov
shlb
test
mov
sbb
dec
jle
mov
shrb
mov
mov
or
mov
sub
push
and
sar
test
js
inc
adcl
inc
dec
push
clc
xchg
add
jl
and
out
fnstenv
js,pt
mov
loop
inc
sub
cmp
clc
xor
jb
or
mov
mov
mov
es
out
or
mov
mov
sub
call
mov
xor
xchg
and
loope
inc
pop
sub
xor
lds
and
pusha
test
mov
icebp
ljmp
add
sahf
pop
sub
mov
imul
and
mov
mov
out
or
imul
sbb
xor
xor
movsl
shrl
or
sbb
mov
popf
sub
pop
mov
mov
test
and
jnp
in
shlb
xchg
mov
xor
daa
dec
stos
fucom
mov
xchg
and
movsl
and
movsl
lods
and
mov
adc
mov
outsb
sbb
xchg
insl
and
icebp
std
jns
arpl
rol
sub
mov
sbb
data16
xchg
mov
cmp
and
pop
and
pop
lahf
jo
mov
dec
mov
xchg
in
pushf
ret
imul
mov
test
mov
test
rcl
mov
sbb
and
lds
std
cld
out
mov
xor
in
rcll
bound
and
std
push
xor
sarb
and
add
and
ss
scas
pop
sub
and
gs
jge
jecxz
and
fsubp
lcall
imul
dec
and
pop
in
fiaddl
rorl
outsb
mov
ror
xchg
add
jae
loope
and
add
mov
dec
inc
movsb
cmp
pop
out
fisubs
mov
mov
outsl
and
aaa
mov
push
loope
sub
ljmp
mov
and
xor
lret
cwtl
movsl
mov
test
jnp
and
sbb
and
fildl
pusha
inc
jge
adc
push
ds
or
sahf
and
cli
stos
cmp
and
scas
adc
xor
aam
fwait
stos
aad
push
inc
fidivrl
pop
testb
cli
insb
and
jg
inc
or
push
and
mov
fdivl
and
mov
roll
and
xor
aaa
mov
inc
xor
cmp
dec
lahf
ds
pusha
jg
xor
mov
adc
push
and
add
rclb
jecxz
mov
or
or
in
xlat
es
shll
into
and
popf
xor
sbb
andl
xlat
pusha
inc
roll
jne
in
bound
cmp
mov
loope
add
lret
pop
adc
call
xchg
xor
fs
inc
mov
xor
test
and
xchg
and
adc
int
mov
jg
cmpsl
xor
mov
add
xor
xchg
cmp
pop
xchg
nop
and
fs
lods
sub
inc
sub
jle
xor
mov
push
cld
mov
cs
fmulp
add
jecxz
sarl
dec
xchg
dec
addr16
lahf
dec
subl
inc
push
aas
add
mov
push
sub
ds
push
cltd
dec
and
push
pop
cmp
je
push
imul
sub
js
cli
stos
out
and
xchg
and
insb
mov
mov
jmp
mov
mov
lea
insl
sti
shlb
xchg
pop
push
popa
push
arpl
fs
mov
int3
jnp
sbb
pop
add
lea
aas
dec
pop
jg
in
and
cmpl
and
lret
inc
xor
adc
cli
dec
es
dec
xor
sub
out
icebp
lods
and
and
cmp
insl
xchg
rol
sbb
and
fs
jle
jecxz
bound
xor
aaa
popa
stc
repz
push
iret
fldcw
int
and
mov
pop
popa
or
aaa
nop
in
and
ret
lret
add
or
add
xchg
lods
pusha
sbb
mov
and
mov
mov
or
imul
push
push
into
xchg
cmpsb
movsl
jb
sub
mov
stc
popa
mov
mov
and
jns
xchg
movsb
mov
and
iret
movsb
xchg
xor
loopne
test
lock
cmp
iret
clc
ljmp
add
and
adc
push
mov
das
xor
icebp
aas
pop
bound
push
rcr
push
xor
push
push
mov
cs
cmp
fcompl
pop
sbb
mov
outsl
imul
pop
push
xchg
insb
push
inc
das
repnz
push
loopne
into
outsl
jns
jge
sarl
loopne
loope
or
fsubl
sbb
mov
aad
mov
aaa
bnd
cmpsb
sbb
and
and
inc
scas
pushf
xorl
mov
dec
and
outsb
scas
mov
and
jno
or
jbe
aas
inc
sub
sbb
mov
and
insl
les
push
ret
stos
movsb
dec
and
mov
in
cmp
or
mov
or
jg
insl
pop
and
aas
mov
mov
and
iret
lds
repz
and
xor
adc
mov
xor
and
scas
std
and
adc
push
mov
xchg
add
cld
popa
notl
das
fadds
clc
popa
lret
std
push
push
adc
jle
push
cmp
and
andb
sub
ficoml
mov
sbb
push
insb
sub
popf
pop
shlb
cmp
cmp
iret
and
jl
movsb
ss
cld
sub
in
lds
cltd
adc
and
rol
imul
mov
add
inc
jno
std
and
cmc
xchg
loop
shl
adc
cli
fmull
aam
and
dec
adc
add
sub
or
mov
into
aas
popa
popa
adcb
or
dec
out
sbb
ffreep
jmp
xor
and
sbb
dec
and
sub
jmp
xchg
iret
xchg
xchg
push
pop
andl
mov
dec
mov
and
or
out
adc
mov
aad
arpl
andl
adc
push
daa
sub
repz
and
mov
jmp
and
into
pop
in
int
push
mov
add
adc
mov
lret
imul
xchg
jecxz
jo
jge
cs
imul
push
add
fsubs
fs
aas
adc
notl
mov
sti
enter
mov
insb
pop
pop
icebp
stos
out
clc
addr16
jnp
dec
std
mov
loop
inc
xor
xor
sub
scas
out
dec
cmp
aas
cld
lods
fcoml
jno
shl
and
iret
dec
lret
and
scas
scas
push
movsb
dec
popa
inc
inc
mov
dec
stos
and
insl
mov
mov
flds
dec
mov
ret
pop
and
xchg
add
nop
imul
test
xchg
int3
sbb
loop
pop
or
popa
xchg
hlt
pop
imul
or
push
sbb
sub
std
aaa
pop
test
push
and
mov
fwait
xchg
mov
cwtl
lcall
dec
jl
subl
lods
add
sub
imul
inc
cmpsl
sbb
adc
push
jmp
push
inc
mov
and
mov
test
xor
xchg
and
hlt
and
cwtl
mov
push
sbb
push
mov
ja,pt
xchg
xchg
scas
lds
mov
sub
push
sbb
iret
push
das
ljmp
rclb
xor
push
mov
mov
adc
mov
and
addb
fmul
mov
scas
mov
mov
cltd
and
call
test
and
test
subl
xchg
sbb
fbstp
and
or
fisttpl
xchg
lods
movsb
push
xchg
push
xor
add
or
fstpt
xchg
loopne
pop
inc
fcompl
ds
bound
int3
je
and
pop
inc
dec
and
mov
outsl
dec
gs
mov
jle
cmp
lea
fucomp
and
mov
movsb
subb
adc
xor
movsl
popa
pop
push
aad
xchg
lret
aas
jle
orb
test
repnz
pop
and
mov
cmp
sbb
sub
and
sub
pop
or
outsl
aas
pop
dec
mov
add
xor
fnstcw
ret
or
sub
ffreep
and
inc
dec
clc
and
dec
and
push
inc
andl
test
sahf
and
inc
fxch
and
lods
jp
movsb
mov
xor
xchg
fcomp
and
scas
lods
fidivl
shll
jnp
sti
int3
cmp
lds
adc
sarb
jae
test
rolb
fimull
test
loop
mov
popf
sub
mov
sub
sti
push
adc
fisubrs
mov
shrl
sbb
flds
cltd
xchg
pop
scas
imul
xchg
and
sbb
xor
pop
popl
cli
ret
dec
popa
idivl
jmp
add
mov
or
or
mov
jbe
dec
xlat
dec
inc
pop
xchg
aaa
out
repnz
leave
shl
push
jbe
and
ret
sbb
lods
in
mul
mov
daa
mov
fdivs
and
lret
mov
fnsave
mov
int3
mov
pop
push
ljmp
add
dec
test
mov
clc
push
test
add
inc
cmpsb
enter
movsb
jg
xchg
push
adc
push
and
mov
adc
inc
cmp
pop
adc
mov
xchg
and
mov
call
mov
dec
jo
lcall
push
and
xchg
test
and
lods
xchg
iret
mov
or
add
cmp
movsb
cmpsb
js
jle
dec
pop
jmp
mov
movsb
mov
and
inc
imul
mov
xchg
andl
xor
js
shll
cld
ret
frstor
fwait
sbb
xlat
cwtl
jns
lcall
dec
mov
mov
sbb
data16
and
pop
cmpl
lahf
out
jbe
xchg
jle
jmp
insb
inc
ret
xor
xor
jmp
stos
scas
mov
pop
cmp
addr16
or
fisubs
mov
xor
inc
push
xchg
outsl
scas
outsb
pop
cmpsb
popa
fdivs
lcall
sbb
loope
xor
mov
push
lret
test
and
or
loope
xchg
into
adc
popa
mov
insb
dec
sub
push
aaa
or
shll
and
fwait
imul
jp
idivl
and
inc
jecxz
inc
jo
mov
cmpsl
add
cmp
test
sub
or
jns
movsb
or
and
dec
mov
xchg
or
and
push
in
jp
dec
cmpsl
push
and
and
mov
cmp
dec
xchg
pop
lretw
adc
inc
and
or
lods
push
std
sbb
cld
and
xabort
and
jnp
cmpsl
pop
mov
inc
int3
mov
xor
cmp
outsb
mov
sbb
sbb
xlat
xor
mov
popl
pop
push
rorb
mov
jl
sub
fsub
pop
cmpl
sahf
adc
and
xlat
inc
sbb
xor
jl
das
pop
mov
inc
mov
dec
and
in
jp
add
sbb
int3
inc
cmpsl
xchg
dec
jbe
push
mov
das
adc
imul
fwait
cmpsb
xor
stos
dec
adc
pop
mov
adc
fwait
int3
inc
inc
lds
movsl
and
add
mov
and
leave
jg
fimull
cmp
in
or
inc
in
cld
enter
pop
push
jp
out
pop
pop
fistps
aaa
jecxz
movsl
and
ficompl
xchg
frstor
in
sti
sub
shl
jns
arpl
mov
push
leave
sub
movsb
fmulp
leave
pop
loope
mov
and
das
and
stc
lods
popf
fwait
and
mov
pop
and
mov
push
loopne
ret
hlt
push
lahf
push
jmp
cmp
pop
jo
cmp
inc
ljmp
and
sub
and
cwtl
ret
scas
leave
and
adc
and
add
dec
mov
fisttpll
and
mov
pop
jmp
jge
push
testb
outsb
and
ja
iret
jmp
scas
arpl
cwtl
inc
dec
push
in
xor
and
push
sbb
xchg
bound
xchg
mov
or
add
and
ret
mov
mov
mov
mov
imul
mov
pop
popa
out
jecxz
addr16
inc
nop
jmp
pop
xchg
fidivs
or
enter
add
and
mov
in
movsl
mov
fstpt
xchg
jns
iret
cs
fidivrs
mov
and
cmp
mov
adc
shr
push
cltd
dec
sub
icebp
dec
and
lods
add
mov
xchg
movsb
cmp
pop
jno
push
test
sub
out
movsb
aam
enter
outsl
jno
scas
int3
fnstenv
jle
lds
cmp
jmp
cmc
shrl
mov
inc
ror
push
mov
pop
lock
frndint
lahf
add
jp
fcoml
insb
push
das
shll
cmp
lcall
mov
and
pop
lods
or
in
mov
xor
and
sbb
fldl
andl
push
ds
and
jbe
imul
mov
mov
idivb
loopne
je
aam
add
imul
out
es
push
pop
cltd
mov
mov
mov
and
or
cmp
fadds
mov
add
imul
aaa
arpl
mov
mov
mov
push
mov
inc
and
nop
xchg
mov
or
fmul
ret
add
dec
adc
repnz
push
scas
jl
fsubs
fstps
shlb
pop
xchg
add
jns
imul
mov
loop
jbe
flds
sub
imull
mov
int
add
xchg
and
test
loop
add
and
mov
addb
fs
adc
jecxz
mov
push
scas
and
clc
fcoms
push
dec
aaa
and
sbb
pop
sub
adc
fwait
xor
repz
cli
and
outsl
sbb
mov
xchg
ss
lahf
and
aad
sub
cmp
dec
mov
test
and
inc
or
and
enter
jnp
jbe
jns
test
outsb
xchg
int
sbb
inc
testl
push
adc
xchg
ljmp
adc
mov
push
and
sub
dec
inc
popf
insl
leave
adc
icebp
movsb
and
cld
ret
inc
cltd
cltd
and
dec
jp
cmc
scas
pop
loop
scas
cmp
push
inc
dec
pop
mov
in
mov
nop
sbb
mov
mov
inc
dec
inc
and
cmpsb
xchg
movsb
movsl
push
and
pop
stc
xor
fisttps
and
cmp
popa
jle
adc
lcall
fldenv
lea
sub
dec
mov
mov
push
aaa
imul
jno
movsl
roll
es
or
mov
insb
mov
mulb
and
movsb
fstpt
aas
lret
and
mov
dec
push
fidivrl
pop
xor
mov
loop
clc
std
xor
dec
push
cmpsl
sbbb
sub
cmp
lea
pop
enter
mov
lods
and
and
nop
valignq
inc
and
lea
gs
xchg
pop
movsb
and
adc
lahf
add
mov
pop
pusha
add
fwait
pop
pop
mov
lock
jge
mov
and
add
lahf
adc
mov
adc
mov
js
mov
je
inc
repz
and
dec
incl
pushf
dec
add
or
pop
xor
cmpsl
aad
add
mov
and
test
pop
and
pop
and
cltd
filds
pop
out
test
inc
push
sahf
and
dec
and
jmp
and
sahf
pop
sub
dec
dec
sti
mov
and
sub
cmp
test
and
xor
lahf
test
leave
sbb
jecxz
and
popa
sti
cmp
movsb
mov
je
sub
data16
mov
repnz
jge
and
adc
cmc
inc
cmp
or
and
jge
mov
jo
andl
lock
jecxz
push
movsl
dec
dec
movsb
adc
faddl
push
mov
pop
lea
daa
and
mov
repz
jns
xchg
jp
mov
jecxz
sub
sbb
xorl
mov
push
icebp
popf
jne
outsl
xchg
sub
fcoms
js
mov
fcompl
shrl
in
sub
jne
xchg
rep
xchg
in
sub
and
incb
les
cmp
lock
imul
adc
inc
dec
xor
stos
and
ffreep
mov
outsb
aaa
dec
out
dec
inc
fisubs
and
add
cmp
or
dec
loop
fistpl
clc
xor
in
es
push
or
push
cltd
and
cld
in
std
fisttps
jns
lahf
xor
mov
dec
inc
pushf
add
out
and
int
sahf
cmpsb
adcb
adc
lcall
cmp
mov
jecxz
test
mov
cmpsb
pop
divb
mov
mov
mov
xchg
loopne
in
outsl
push
sub
and
xor
leave
mov
inc
add
and
mov
lahf
fsubrs
pop
xor
lret
in
out
scas
fldenv
add
jnp
aas
aam
and
lahf
pop
cmp
shll
dec
ss
pop
test
es
inc
jns
js
lahf
sahf
mov
call
outsb
inc
ret
add
and
loopne
es
pop
inc
push
popf
movsl
fsubs
pop
adc
test
or
inc
cmp
cltd
add
das
inc
pop
sub
aad
loopne
out
jp
mov
fs
mov
fwait
out
mov
xchg
xchg
mov
sub
hlt
outsl
sti
movsb
inc
pusha
pop
enter
sub
shll
push
pop
arpl
std
stos
mov
jecxz
xor
push
fwait
adc
and
xlat
rolb
push
xchg
push
and
lar
cmpl
lcall
dec
sub
sti
clc
or
adc
hlt
scas
mov
iret
and
push
stc
rorb
out
jmp
sbb
jp
inc
or
mov
rcrb
popa
scas
push
ds
xchg
popa
and
lcall
pop
jl
cld
push
push
adc
testb
mov
or
daa
mov
and
xsha1
cmpsb
mov
mov
sbb
popf
out
push
and
pop
pop
fs
insl
and
cmc
sbb
pop
cmp
jns
inc
pop
and
imul
mov
mov
shll
scas
pop
bound
and
sub
test
loope
repnz
mov
xor
lea
mov
repnz
aaa
outsl
out
adc
out
dec
fbld
jl
out
cmp
mov
imul
out
data16
je
push
andl
dec
cmp
mov
in
out
jge
mov
mov
inc
inc
ret
dec
daa
sub
cmp
cmp
lret
out
adc
dec
adc
sti
pusha
ss
mov
and
pop
push
int3
paddw
and
xchg
repnz
mov
xorl
adc
lods
jle
test
mov
sub
and
and
push
pop
add
out
pop
push
loopne
dec
xchg
push
dec
and
mov
addr16
movsb
jmp
inc
pushf
add
stc
dec
xchg
inc
pop
fmull
pop
xchg
sbb
addb
outsb
xor
mov
and
push
and
addr16
pop
push
and
int
adc
jb
mov
push
xor
inc
xchg
fidivl
dec
shlb
sub
les
scas
ljmp
dec
cwtl
mov
mov
popf
jmp
fstl
cmc
or
or
xchg
outsl
clc
and
in
sub
nop
loope
mov
adc
xor
and
cli
push
cmpl
jno
pop
cmp
mov
inc
mov
push
rcll
sub
in
dec
push
mov
and
testb
cmc
cmp
hlt
jg
inc
and
add
shld
in
and
sbb
in
mov
daa
or
imul
andb
sbb
lret
je
jge
cld
and
push
pop
clc
imul
cmc
push
mov
stos
je
vmread
sub
fcmovbe
sub
xchg
test
xchg
adc
jo
cmp
popf
and
xchg
add
aad
dec
mov
shlb
and
mov
xchg
stos
inc
repz
dec
xchg
dec
frstor
push
imul
mov
and
aaa
xchg
inc
push
or
xchg
dec
std
xor
mov
xlat
add
and
xchg
and
rcrb
filds
dec
cmp
xchg
xchg
jnp
fistps
stos
fisttps
mov
loopne
sarl
fistl
pop
adc
sbb
lret
jp
dec
jns
jmp
insl
pop
jno
xrelease
push
lods
fdivl
xchg
push
insb
pmaxub
xchg
data16
or
pop
sub
addr16
and
das
outsl
fcompp
cmpsb
pop
mov
addb
and
fwait
stc
and
pop
rclb
movsb
fistl
cmc
pop
adc
dec
into
test
sub
outsl
jb
add
lahf
push
push
cltd
inc
imulb
popa
sub
push
nop
mov
jns
pop
outsb
xchg
xchg
js
xchg
fstps
inc
imul
xor
mov
popf
adc
dec
mov
inc
rolb
jo
movsl
push
cltd
stc
shlb
iret
mov
cmp
sub
sbb
xchg
xchg
jp
cwtl
jae
mov
sbbl
ret
cli
pop
jecxz
popa
orl
cmp
mov
fs
push
pusha
sbb
adc
add
repnz
jge
sarb
mov
dec
test
inc
and
sahf
mov
add
push
sub
mov
mov
mov
fwait
and
inc
lahf
and
and
and
das
sbb
jge
pop
xchg
and
es
inc
and
jae
cltd
and
adc
inc
jno
and
testl
pop
in
jb
cli
inc
or
xor
jmp
orl
mov
and
cmp
mulb
outsb
lahf
insb
jmpw
add
gs
xor
mov
stc
loope
ds
mov
inc
mov
andl
dec
clc
or
cli
adc
inc
push
fnstsw
addr16
and
mov
xor
out
or
cltd
or
mov
push
int
and
stos
aaa
push
out
lahf
push
das
icebp
sub
inc
add
pop
dec
add
stos
push
ret
arpl
and
imulb
popa
and
ss
cwtl
and
or
cmpsl
push
enter
inc
in
and
xor
and
sub
int3
inc
clc
test
push
jmp
push
aad
and
orb
cs
outsl
push
and
cltd
sahf
shlb
pop
adc
dec
jl
adcl
jecxz
loopne
add
pop
ret
xchg
test
ljmp
inc
push
and
out
rclb
and
pushl
and
leave
clc
lods
xor
out
loop
call
lahf
mov
or
or
sub
add
mov
shl
popf
xlat
xchg
dec
mov
cmp
mov
and
cmp
add
add
and
inc
lock
xchg
pop
sbb
movsl
and
sub
push
cli
adc
push
xorl
push
out
adc
and
and
pop
es
clc
mov
cmp
or
je
aam
stos
imulb
mov
jb
push
xchg
into
aad
dec
push
xchg
sub
sarl
xlat
iret
aam
and
or
and
mov
xor
push
mov
push
and
test
dec
xor
push
aas
sahf
mov
std
popa
pushf
push
adc
in
sbbl
imul
enter
push
shll
pusha
and
gs
mov
rorl
clc
in
sbb
and
mov
icebp
sbb
inc
lret
cmp
push
int3
sarb
psrlw
outsl
cmp
sub
in
dec
int3
enter
insl
insl
nop
fiadds
add
cwtl
cltd
sbb
xchg
inc
and
add
inc
rorb
cmp
inc
and
sub
mulb
movsl
inc
cmc
jle
mov
addr16
movsb
fcoml
inc
dec
scas
and
fwait
mov
jl
leave
mov
pusha
stos
jns
inc
and
and
rorl
das
movsb
mov
fcoms
mov
ljmp
add
out
fucomp
and
pop
addr16
sub
bound
inc
jbe
imul
and
cmpsb
pop
sahf
adc
mov
popf
out
ret
xchg
lret
xor
lds
popf
sbb
sub
jg
cmc
sti
jecxz
sub
mov
add
sbbb
or
popf
adc
add
cmc
mov
push
aaa
jno
xchg
sbb
cmp
pop
fstpt
repz
cmpsb
mov
pop
push
mov
and
adc
xchg
movsb
and
outsl
pop
cmp
je
cmpsl
and
das
add
arpl
xchg
aaa
sbb
lods
loope
movsb
lds
cmp
loope
je
push
add
and
repnz
add
lcall
inc
les
cmc
push
imul
fdivr
and
jns
fnstenv
and
mov
je
out
add
pop
inc
push
jb
sbb
fldcw
sbb
or
inc
int3
inc
mov
es
xor
mov
jne
push
inc
mov
jbe
shll
and
in
pop
push
and
cmp
divl
ja
call
cmp
and
in
cwtl
mov
xor
lea
lret
das
mov
enter
hlt
int3
andb
lock
xlat
subb
fstpt
sbb
inc
mov
adc
pop
and
push
push
imul
addr16
add
push
jae
dec
xor
push
jle
lcall
inc
mov
repnz
rcrl
jmp
fnstsw
add
inc
fildl
in
xor
mov
lea
arpl
or
push
hlt
xchg
xchg
and
add
andb
and
pop
xchg
insb
mov
shl
and
test
filds
push
inc
mov
shrb
rorl
subl
and
test
in
push
mov
icebp
rcll
mov
pop
mov
push
and
rcl
shlb
jg
pop
insb
in
int
mov
push
lahf
data16
out
arpl
dec
inc
and
xor
inc
push
fsub
and
fcoms
and
pop
incb
shr
and
imul
les
jl
scas
mov
cmp
add
in
mov
and
mov
jns
and
push
jle
das
fldenvs
fnstsw
stos
and
inc
cmp
inc
push
and
das
gs
and
in
mov
dec
ds
cmp
aad
lahf
and
nop
inc
xor
sub
sbbl
lods
and
mov
in
and
cmpsl
fmulp
xchg
and
xchg
mov
xor
dec
arpl
sub
xchg
les
in
mov
nop
out
inc
cli
insl
xlat
pop
pushl
test
in
inc
movsb
scas
adc
sbb
xchg
cltd
mov
aam
sbb
test
xor
xor
inc
popf
lock
pop
and
mov
test
lds
mov
cwtl
sbb
xor
lods
xchg
aam
dec
sub
jno
and
jg
jl
jbe
sahf
cmp
imul
shrl
cmp
adc
leave
mov
andb
into
cmp
or
icebp
and
sub
call
and
cmp
fsubrl
push
je
fcomp
add
das
dec
xor
jb
js
mov
and
and
clc
xor
dec
dec
pop
jae
inc
mov
jp
xchg
xchg
and
jne
mov
rorl
mov
sbb
pop
repz
adc
inc
jne
mov
lahf
fwait
sub
jecxz
adc
sti
mov
in
sub
test
fnstcw
orl
out
adc
mov
and
jmp
in
add
lods
js
popl
loope
leave
test
push
xorl
pop
nop
and
fwait
dec
sub
and
mov
dec
cmc
scas
fwait
and
and
popa
shrl
xchg
js
cmp
sub
fildll
and
dec
cltd
sub
xor
xchg
fists
push
and
les
add
jp
and
xchg
jg
xor
out
sbb
mov
and
add
out
cmpsb
out
xchg
outsl
push
lret
and
cli
enter
out
and
mov
xlat
dec
add
cmp
scas
daa
into
dec
in
mov
and
gs
push
mov
popf
test
adc
mov
shl
jne
pop
mov
and
mov
add
pop
and
jecxz
mov
dec
sbb
push
adc
popa
ss
inc
mov
insb
and
mov
ss
ficompl
popa
sub
push
test
pop
lcall
adc
and
shlb
or
in
and
xchg
sub
pop
cli
leave
fisubs
jnp
jbe
les
mov
lret
test
xor
aas
inc
sbb
out
shlb
cltd
push
and
fwait
sbb
icebp
out
cmp
and
xchg
es
lahf
dec
jb
cmp
lcall
movsb
push
addr16
ss
cmp
aaa
insb
imul
dec
jns
mov
and
xchg
push
repz
sbb
pop
push
and
push
mov
mov
pop
add
lds
inc
cld
inc
repz
cld
ss
xorl
xor
add
mov
sbb
jae
add
arpl
movsb
mov
dec
dec
add
outsl
and
fs
cmpsl
jmp
ret
mov
xchg
mov
popf
dec
and
mov
pop
cmpl
xor
mov
mov
popa
std
out
mov
push
mov
outsb
loopne
lcall
dec
xor
out
jl
sbb
push
idivb
and
sub
inc
and
movsb
add
test
sub
pop
int
fldt
or
enter
push
hlt
dec
dec
mov
test
adc
inc
sub
fstl
jnp
mov
jno
popa
in
mov
pop
xor
out
cld
ja
dec
cmp
xchg
pusha
and
test
inc
rorl
and
pop
roll
mov
sub
test
mov
mov
into
sbb
mov
pop
fisubrs
ja
incb
pop
push
xor
xor
and
shlb
jmp
movsb
mov
fstp
add
and
mov
shlb
push
nop
inc
popf
jle
xchg
daa
and
int
scas
and
sub
xorb
daa
enter
cmp
xor
mov
mov
dec
sahf
push
sub
mulb
mov
mov
xor
jg
xchg
inc
nop
push
enter
in
pop
pushf
sbb
leave
pop
and
mov
sub
fldenv
sub
pop
dec
aam
mov
or
lods
fdivr
add
sarl
add
adc
and
daa
test
mov
mov
cli
and
mov
loop
fstpl
cmp
or
adc
pop
daa
jno
call
jmp
and
hlt
fsubrl
jmp
std
dec
aas
pop
push
test
mov
fwait
push
lods
out
fisttpll
popf
movsl
cmp
dec
mov
nop
cltd
out
in
jno
int3
std
and
xor
xchg
and
and
add
jbe
test
popa
aas
jno
roll
int3
mov
js
jo
jge
xchg
sbb
push
mov
insb
sub
mov
dec
xchg
hlt
lock
cs
outsb
sub
repz
movb
mov
mov
and
xchg
add
sar
mov
cmpsb
pop
and
jp
jge
lret
mov
inc
sbb
push
sub
call
xorl
out
adc
outsl
push
dec
push
sti
inc
xlat
mov
inc
cmp
test
add
fcoml
scas
fnsave
scas
push
movsl
mov
xor
mov
mov
shrb
das
add
movsb
xor
and
mov
scas
and
ss
stos
add
outsl
and
cmpsb
sbb
cli
das
and
in
mov
repz
mov
mov
popa
mov
aaa
fwait
pop
xchg
add
call
test
fmuls
popa
test
out
xchg
add
ja
mov
sarl
inc
mov
pop
dec
test
lret
js
push
andb
sbb
cmp
sub
jbe
in
adc
xor
and
movsl
mov
xchg
ja
lods
mov
cwtl
shl
and
mov
jo
test
jns
gs
in
and
and
stc
cmp
movsb
or
ret
outsb
dec
cmpsl
movsl
hlt
pop
mov
cltd
mov
sbb
and
dec
mov
sub
pop
mov
mov
mov
and
lcall
loop
pusha
sub
xor
andl
push
jbe
and
lock
test
flds
rorl
xor
je
pusha
and
xchg
xlat
stos
scas
and
or
pop
mov
mov
xlat
jae
push
inc
popa
pop
sub
mov
scas
jno
jb
sbb
inc
test
adc
addl
loop
add
xor
pop
and
push
mov
scas
dec
negl
fdivrs
fistpll
in
push
mov
jne
jmp
add
movsb
dec
call
mov
mov
xorl
enter
shrl
lods
iret
adc
scas
xchg
and
std
lea
and
adc
test
and
cmp
mov
xor
dec
and
sarl
and
inc
lahf
in
outsb
push
and
enter
lret
fcmovu
jno
rclb
sarb
cmc
repz
jmp
es
pop
popa
clc
outsb
xchg
pop
pop
pop
push
mull
int
inc
and
jns
imul
cltd
orb
enter
int
and
popa
sbb
sbb
mov
int3
clc
xchg
lea
inc
sub
sarl
test
ss
pop
adc
or
outsl
and
jae
xchg
xchg
xlat
pop
subb
xchg
in
out
push
test
loope
sbb
pusha
call
cmp
lds
dec
loop
out
sahf
hlt
dec
and
je
in
scas
xchg
jge
add
in
inc
hlt
rolb
aam
pusha
add
or
shl
and
stc
mov
das
popa
push
sbb
cmp
mov
stc
rolb
and
lods
insb
sub
dec
test
cs
jle
sbb
or
clc
mov
pop
icebp
cmp
mov
lret
or
mov
xchg
iret
cltd
pop
and
les
lcall
mov
and
cmp
pop
frstor
repz
xchg
addr16
movsl
pusha
and
outsb
add
push
loope
xlat
icebp
jnp
rcr
lods
popa
es
js
popa
popa
frstor
push
dec
sub
pop
xchg
jmp
xor
jg
and
sub
sbb
movsb
mov
gs
xchg
or
js
inc
ss
mov
pop
pusha
test
cld
push
mov
sbb
fwait
push
in
fisubl
das
stos
pop
popa
xorl
pop
jmp
in
mov
ds
pop
and
bound
shlb
divl
xchg
jge
fidivl
std
add
popa
jo
or
insb
and
pop
scas
mov
and
sub
push
and
into
lea
cmp
xchg
inc
cld
in
stos
andb
je
mov
lret
and
xchg
dec
dec
repnz
sbb
sahf
and
dec
out
scas
test
and
mov
cmpsb
mov
add
jno
jo
and
std
and
mov
out
repnz
xchg
dec
fucomi
gs
hlt
test
inc
jge
aam
pop
imul
int
outsb
pop
out
sbb
aad
inc
scas
arpl
cmp
lds
sub
add
sub
dec
inc
and
cmp
lea
or
and
xor
mov
ffree
add
mov
imul
fdiv
and
iret
cmp
adc
mov
ficompl
inc
out
dec
fisttps
and
testb
add
in
cltd
add
je
andb
adc
scas
addr16
mov
jge
sbb
int3
and
aam
test
xor
adc
fstpt
sahf
mov
inc
inc
clc
and
pop
xchg
inc
lret
add
pop
mov
push
aaa
rcll
cmp
insb
add
enter
repz
popf
and
pmullw
jmp
sub
idivb
in
pop
sbb
and
pusha
rorl
and
repz
xchg
test
and
push
add
lahf
push
sbb
imul
sbb
pop
mov
sub
jno
jge
pop
aas
loopne
out
jne
dec
add
mov
add
adc
and
pop
aam
pushf
push
push
ret
and
push
mov
out
outsl
xor
push
shlb
jmp
sbb
pop
shrb
sub
dec
sbb
cli
push
cld
push
aad
mov
pop
gs
xchg
and
out
and
dec
or
lock
pop
loop
aaa
add
test
repz
arpl
xchg
and
cli
movsb
sbb
adcb
fninit
pop
mov
hlt
andb
jle
mov
test
aaa
and
pop
test
mov
cmpsl
xchg
or
sbb
jbe
mov
pop
pop
mov
shl
ss
xchg
xor
lds
mov
inc
sahf
sub
adc
mov
sbb
jbe
xchg
xor
je
sbb
and
jle
xchg
scas
inc
rorb
shrb
pop
add
and
xchg
mov
and
xchg
sbb
adc
mov
dec
cs
int3
sarb
mov
mov
xchg
sub
lock
xor
inc
add
mov
xchg
sbb
je
addl
and
orl
xor
nop
ljmp
std
repnz
pop
jge
int3
push
xchg
inc
push
rcrb
popf
repz
ret
imul
pop
sub
and
in
imul
sbb
jle
cmpsb
out
neg
into
xchg
lahf
and
jmp
shlb
jg
pop
scas
dec
or
push
fisubl
mov
xor
jns
add
and
mov
scas
and
bts
cmp
and
adc
adc
outsl
shrb
xchg
mov
and
fyl2x
pop
and
cmpsb
inc
add
cli
loope
or
pop
int
dec
std
shll
nop
xchg
mov
in
pop
and
lahf
jae
sbb
sbb
jb
xchg
and
mov
xlat
and
push
in
setne
icebp
das
iret
sub
xchg
xchg
inc
aam
jns
mov
jo
enter
or
and
cmp
and
jl
xor
popa
lods
and
test
lock
test
pop
and
add
scas
xor
jle
jmp
and
add
pushf
lcall
imul
and
cmp
dec
push
and
adc
repz
outsb
stos
cmp
fs
mov
xchg
mov
dec
loope
iret
lea
imul
outsb
and
mov
popa
idivb
mov
imull
xor
and
lret
xchg
add
and
leave
fcoml
mov
cmpsl
mov
push
out
and
into
loop
loopne
movsb
movsl
sbb
jp
out
dec
inc
sub
scas
xchg
mov
sbb
dec
lahf
push
dec
iret
xor
jno
cltd
push
xor
adc
sub
inc
mov
ss
cmp
inc
das
fsubs
enter
xchg
or
mov
mov
add
dec
pop
mov
call
insl
stos
pop
jmp
rol
xchg
dec
imul
cmp
mov
pop
and
pop
mov
loope
inc
xchg
lea
enter
jo
inc
sbb
jmp
dec
pop
dec
cmpsl
scas
or
push
les
mov
sub
inc
and
aam
pop
ss
mov
inc
jne
rorl
xchg
sbb
xchg
lcall
pop
fistps
mov
sahf
in
dec
repz
ret
je
in
mov
adc
adc
cld
or
pop
add
xchg
cwtl
xchg
cmp
cmpsl
jmp
and
cmp
out
add
mov
mov
sahf
loope
jnp
jne
inc
dec
subl
dec
add
hlt
ja
jecxz
iret
jno
sbb
insb
adc
out
xor
arpl
into
sub
sub
and
lret
inc
cmp
cmp
dec
imul
xchg
andl
push
fidivs
inc
cmp
xchg
mov
das
adc
repnz
mov
mov
cmp
and
and
cmp
jge
or
icebp
test
bound
fsqrt
and
mov
movaps
mov
or
ret
pop
cmp
lea
jmp
and
mov
sbb
movsb
repz
sub
push
xor
sbb
clc
es
add
cld
stos
mov
dec
insb
inc
sub
and
lahf
cmp
inc
mov
inc
jmp
imul
pop
jno
xchg
and
movb
and
inc
mov
ss
push
and
mov
push
cs
or
push
xor
iret
imul
out
mov
in
mov
or
jae
adc
popa
pushf
imul
in
cmp
imul
repz
pop
xor
push
cld
push
inc
sbb
or
mov
pop
stos
inc
and
outsb
add
sbb
or
push
and
xchg
ror
fistl
and
and
fsub
sbb
and
mov
test
fwait
xor
fwait
lea
pop
imul
out
mov
lahf
mov
xchg
test
mov
nop
inc
dec
jns
cli
cs
fwait
sbb
int
lahf
adc
outsb
inc
mov
repnz
mov
cltd
mov
mov
std
mov
inc
cmpsl
lea
adc
sbb
shll
xor
mov
test
fstpt
cmp
dec
and
jno
lea
leave
push
das
xchg
clc
mov
lods
repnz
movsl
mov
ret
mov
mov
inc
lods
xor
lods
jo
movl
push
pusha
daa
and
pop
inc
or
jo
sub
adc
mov
and
jl
lcallw
xor
xor
rcrb
xchg
jmp
pop
xchg
xchg
and
and
or
push
outsb
and
insl
sub
mov
andb
mov
mov
and
repz
lods
aas
addr16
dec
or
jg
aaa
cmp
mov
adc
mov
adc
sbb
pop
sbb
cmc
and
shlb
addr16
rorb
adc
cmp
cs
loopne
frstor
inc
clc
ljmp
mov
daa
mov
lds
sbb
pushf
popa
jge
jp
sahf
js
test
add
movsl
add
cmpsl
and
mov
add
xlat
jns
mov
pusha
and
out
mov
rorl
lahf
add
and
xchg
sub
and
cmpsb
pop
pop
inc
push
inc
and
data16
xor
sbb
imul
xchg
and
scas
push
insl
inc
sbb
add
gs
imul
movsb
fisubl
mov
cltd
stc
and
adc
cli
inc
inc
cmpsb
lret
repnz
popa
test
push
and
out
xor
add
pop
and
imul
les
aaa
ds
in
push
and
dec
jnp
push
dec
sub
jmp
and
sbbl
and
cmpb
hlt
out
mov
push
pop
popf
mov
lcall
and
mov
jnp
jp
hlt
lods
mov
test
mov
cmp
dec
and
mov
int
sub
pushf
sti
imul
jno
mov
out
xor
jp
sar
and
inc
push
scas
sti
ret
dec
imul
and
mov
jbe
mov
pop
fwait
pop
or
lahf
or
rep
cmp
rcrl
push
adc
xor
test
into
push
pushf
loopne
dec
pusha
jne
addl
outsl
sub
scas
adc
push
pushf
cmpsb
pop
adc
mov
xchg
aaa
arpl
and
sbb
mov
movsb
mov
xor
and
test
xchg
scas
and
mov
and
lods
push
dec
sub
popf
xlat
mov
push
and
cmp
imul
repz
clc
pop
leave
jmp
mov
fmuls
add
pop
jl
stos
xchg
je
sub
push
inc
and
cmp
rcrb
inc
pop
and
sahf
cwtl
adc
repnz
stos
and
sbb
mull
push
dec
mov
add
and
xchg
sbb
imul
xchg
fdivs
xchg
xchg
mov
mov
pop
cltd
dec
pop
and
je
fxch
xchg
inc
ds
cltd
movsb
push
loop
lds
popa
mov
cltd
mov
aas
outsl
imul
mov
les
adc
push
gs
inc
cmp
and
xlat
mov
pop
sub
or
in
aam
popa
rcrb
aaa
pop
and
mov
movsb
add
popa
add
and
fnstsw
and
lock
pop
ljmp
sub
lcall
adc
std
lds
je
xor
bound
and
sbb
sub
xchg
js
in
into
test
popa
mov
outsb
ljmp
cwtl
movsb
movl
jb
scas
shlb
and
adc
and
lock
and
neg
out
jge
and
xor
mov
out
push
imul
fwait
and
leave
add
js
inc
loop
sar
push
push
mov
add
and
daa
aad
outsl
dec
in
cmp
mov
insb
dec
xor
sbb
test
and
sub
sbb
dec
pop
xchg
pop
das
and
mov
mov
mov
gs
movsl
daa
fdivrl
sbb
pop
sbb
sub
outsl
aaa
add
lea
fldl
test
popf
mov
das
rclb
movsl
fstps
cmp
jbe
sti
or
lds
insl
pop
mov
push
lods
or
imul
push
pop
pop
and
xchg
leave
cmpsl
cmp
dec
in
loope
adc
push
clc
dec
shl
loopne
mov
xor
add
stc
jne
les
push
mov
mov
inc
push
cltd
xchg
pop
sub
fnstsw
out
ljmp
arpl
cld
add
sub
mov
dec
cmp
enter
cmp
aam
mov
sbb
je
movsb
adc
mov
pop
mov
cmpsb
and
negl
and
lods
data16
or
and
loope
iret
mov
dec
xorl
arpl
sub
push
outsl
sbbl
out
bound
and
or
and
mov
cmc
mov
adc
fwait
imul
push
xchg
mov
xor
les
cwtl
sub
ds
push
popf
je
inc
call
int3
adc
mov
stos
jecxz
mov
jo
popl
jbe
jp
std
clc
mov
outsb
inc
mov
test
xor
inc
lcall
icebp
or
cwtl
push
or
inc
out
pop
jg
int3
jmp
add
jmp
orb
sbb
ret
push
sub
imul
jo
mov
pushf
dec
sbb
daa
jecxz
pop
jno
and
fdivr
iret
inc
xlat
add
jns
and
inc
sbb
xor
pop
mov
popa
jb
cld
jmp
and
jno
pop
mov
xchg
cli
and
daa
loopne
and
subl
push
jp
mov
cli
pop
xchg
int
adc
ret
mov
icebp
and
out
test
lods
fs
mov
inc
fnstsw
maskmovq
cltd
dec
or
mov
icebp
xor
mov
data16
ret
setle
lahf
pop
fldt
and
mov
fimull
mov
stc
xchg
xchg
enter
cmp
and
jp
and
les
xor
push
cmp
inc
movsl
cli
in
je
loope
leave
out
xchg
mov
adc
xor
popf
outsb
repz
fbld
shr
rorb
cltd
test
xor
mov
pop
mov
jle
subl
pop
imul
dec
mov
push
mov
out
int
aas
mov
daa
mov
jmp
add
movsl
sub
push
sub
mov
push
inc
insl
mov
stos
sbb
xor
in
lcall
inc
and
push
mov
call
add
or
and
ljmp
loop
arpl
shll
into
fsubs
test
in
stc
jge
xchg
and
push
or
mov
les
cmp
jmp
sub
pop
xchg
xchg
jns
movsb
jecxz
cmpb
loop
add
push
cmpsb
addl
push
or
and
daa
nop
jbe
sub
test
push
int
outsl
add
pushf
cmp
insl
daa
mov
data16
mov
and
ds
dec
pop
push
jno
insl
aas
and
sub
inc
lods
popf
loop
and
sbb
test
lock
cs
xchg
mov
test
and
jno
dec
xor
movsl
sahf
xchg
int3
and
std
cmp
push
mov
fdivrs
push
mov
fbld
mov
insl
push
push
test
jl
js
pop
icebp
lods
popf
xor
pop
pop
and
sarl
jle
ficomps
jl
imul
fstpl
cmc
and
mov
jle
cmp
mov
push
or
mov
inc
mov
data16
cmpb
push
scas
xchg
in
sub
sub
andb
jl
and
and
ljmp
sbb
and
xchg
lret
adc
cmp
sub
popa
das
sbb
and
mov
fstl
and
and
decb
jmp
inc
sbb
shlb
sub
loopne
and
push
ret
adc
fs
xchg
and
fadd
dec
sub
push
inc
dec
mov
add
hlt
and
dec
fwait
int3
cmp
pop
xchg
imul
popa
jbe
and
sbb
cltd
add
shlb
test
cld
mov
scas
push
and
add
or
mov
jnp
and
cmp
push
jecxz
pop
and
cld
xorl
and
push
mov
sub
add
lds
jecxz
mov
push
cmc
ret
or
subl
adc
and
cmp
inc
xor
mov
push
stc
or
cmp
adc
lret
cmp
scas
or
loope
mov
sbb
imul
popa
fnstenv
and
pop
bound
mov
jge
xchg
mov
and
or
cmpsl
daa
and
insb
and
jb
inc
xor
sahf
adc
imul
dec
hlt
lret
push
and
sub
mov
sub
add
scas
cmp
andb
aam
jno
or
cmp
cmpl
js
das
or
jecxz
rcrb
mov
aaa
movsl
ss
jo
fimuls
das
xlat
imul
adc
lret
push
and
and
pushf
sti
and
hlt
jbe
sub
jle
insl
pop
and
negl
xor
or
loopne
test
stos
mov
and
jnp
mov
inc
xor
sbb
lds
mov
jne
push
test
mov
or
in
and
sub
movsb
movsl
dec
mov
cmpb
push
xor
jp
stos
xchg
cwtl
push
xchg
push
xchg
andl
sbb
sub
push
sub
xor
sti
inc
imul
data16
mov
mov
xchg
sub
or
mov
inc
adcl
dec
mov
and
dec
xor
mov
in
and
xchg
xor
pusha
shr
in
aad
fisubl
cmp
push
mov
push
loopne
and
cmp
mov
int3
gs
inc
mov
aaa
dec
mov
lea
and
aas
add
cmpsl
mov
out
ret
insl
jnp
dec
decl
lcall
xor
mov
push
xor
ljmp
sub
loop
push
adcl
dec
xor
inc
sahf
add
les
pusha
int3
xchg
add
push
fnsave
mov
jl
mov
mov
movsl
sahf
into
movsl
pushf
jecxz
jp
ljmp
dec
or
pop
jg
adc
inc
inc
mov
and
lods
js
xor
add
in
mov
flds
or
sub
mov
mov
addr16
aas
adc
cmpl
cwtl
and
shlb
test
ret
movsb
pop
and
jecxz
sub
subl
popa
loop
ret
and
push
mov
mov
lret
test
int
lods
clc
mov
stc
push
mov
or
add
repnz
adc
cwtl
and
xchg
pop
xor
lock
movsl
mov
fildll
fisubs
mov
mov
test
shlb
and
and
xor
js
jbe
xchg
mov
cmc
aam
ret
sti
and
adc
and
clc
lret
dec
and
or
xor
mov
mov
and
dec
pop
pop
ret
add
cli
je
xchg
push
or
mov
inc
lock
fwait
mov
and
jae
push
xchg
es
and
xchg
push
mov
mov
je
mov
bound
add
pop
and
shlb
and
inc
and
out
and
and
aas
xor
jns
pop
dec
das
mov
jno
aad
dec
incb
aaa
pop
imul
add
push
cmpsb
rclb
pop
mov
movsb
outsb
jne
xorb
cmp
and
shll
sahf
push
loopne
out
or
and
je
jns
dec
sbb
and
push
test
and
in
mov
jne
insb
scas
sbb
lret
lahf
ret
and
mov
add
and
adc
jnp
or
and
mov
and
out
add
mov
seta
mov
pop
and
aas
popa
sbb
in
lahf
jne
adc
xchg
popa
jnp
mov
mov
and
fldt
in
inc
rclb
pop
mov
mov
sub
sbb
test
pop
sub
lahf
and
imul
in
and
test
in
mov
outsl
test
xchg
cmp
jge
and
xlat
sar
cmp
and
fwait
imul
dec
bound
into
fisubs
lahf
insl
xor
mov
cmp
mov
and
aas
sarb
das
add
dec
test
cld
or
dec
or
ja
push
and
pop
imul
dec
pushf
sti
and
mov
iret
mov
sbb
mov
push
test
shrl
mov
ja
or
enter
lcall
aad
mov
inc
mov
jb
and
add
jb
dec
iret
mov
mov
and
mov
sbb
push
pop
and
inc
loope
xchg
in
push
mov
ret
push
movsl
add
into
add
test
mov
ljmp
jbe
loope
icebp
inc
test
jo
stc
sub
mov
movb
mov
ja
fisttpll
iret
sub
cmp
fisubrs
and
pop
addr16
leave
rcrb
and
dec
xchg
aas
inc
inc
and
notl
dec
clc
and
and
mov
mov
jecxz
sub
mov
or
rol
mov
cmp
jb
and
mov
xchg
cmp
mov
jo
aad
mov
icebp
icebp
fstps
lret
xor
in
mov
push
jmp
jno
adc
mov
mov
xor
shlb
adc
dec
xchg
and
hlt
xchg
jg
push
or
movsb
mov
add
inc
push
push
sub
int3
xchg
xchg
cmp
inc
adc
push
ficomps
add
cs
inc
sub
lock
mov
jmp
lahf
std
cltd
xchg
sub
fdivl
and
and
xchg
xor
roll
and
out
hlt
sub
addr16
pusha
cmp
enter
mov
scas
jne
lahf
mov
xlat
movsb
jp
daa
cmp
popf
dec
jmp
dec
int3
je
adc
out
ficompl
push
orl
inc
mov
cmp
cmp
fwait
push
push
mull
mov
mov
into
mov
xor
loop
mov
xor
insb
shll
int
and
cmp
xchg
and
push
sub
imul
stos
and
fdivs
pop
dec
cltd
mov
and
jb
or
jl
stc
lcall
inc
jmp
mov
mov
push
in
ret
mov
xchg
and
mov
pusha
popf
outsl
mov
insl
je
mov
repz
cmp
mov
int
dec
clc
movsb
lret
xorb
add
cmpsb
sahf
cmp
xchg
cmp
inc
add
dec
gs
fsub
sarb
cltd
stos
push
pusha
jb
cmp
pop
pusha
jg
push
inc
test
lahf
xchg
lock
loope
popa
addb
and
cli
inc
and
lahf
lods
jns
pop
push
shrb
push
loop
and
mov
inc
hlt
and
rcrl
adc
std
adc
cmp
mov
cli
and
push
dec
add
pushf
and
cmp
mov
push
push
xchg
mov
and
aas
jmp
movsl
outsb
cmp
and
in
cwtl
and
lods
xchg
pop
shrb
add
and
mov
pop
fwait
sub
dec
orb
ja
aaa
sub
and
sbb
ret
stos
pop
mov
mov
and
shrb
mov
or
mov
jl
mov
shrb
dec
adcl
movsb
test
sub
shrl
sub
sub
jns
fistpl
int3
adc
and
dec
mov
in
sub
cs
lret
push
movsl
xor
xchg
xchg
cltd
and
scas
enter
nop
pop
jl
jne
or
pop
test
and
test
cmpsb
mov
aaa
mov
nop
xchg
push
dec
mov
sbb
jb
cs
and
hlt
jo
jl
xchg
and
or
dec
pop
mov
cltd
hlt
std
stos
int
xor
mov
test
je
or
sub
mov
mov
rcpps
mov
sbb
std
int
and
lret
test
fisttpl
sbbl
jle
icebp
in
or
cli
in
mov
cli
sarl
sahf
pop
cltd
pop
outsl
aaa
xchg
lock
mov
or
testb
sub
jnp
and
and
inc
cmpsb
ja
mov
xchg
mov
inc
lods
in
push
std
mov
push
and
xchg
stos
clc
insl
mov
js
ja
mov
jnp
sub
mov
and
das
sbb
loop
popa
pusha
cmp
pop
insl
lahf
test
or
mov
or
xchg
jg
xlat
and
pushf
xchg
push
and
out
inc
and
outsb
adc
lret
jno
cmp
push
mov
inc
dec
and
sbb
bound
jns
ds
out
lea
push
pop
mov
xchg
or
sti
bound
stos
imul
out
pushf
adc
dec
mov
arpl
ds
push
sbb
test
sbb
notb
pop
mov
add
jge
imul
and
ret
adc
mov
xor
and
or
adc
cmpsb
adc
std
add
adc
mov
mov
push
pusha
aas
bound
jae
or
hlt
xor
mov
push
int
pop
and
aaa
jp
sbb
inc
mov
into
cli
dec
xchg
add
repz
pop
inc
dec
inc
jmp
mov
sbb
cmp
scas
mov
and
pop
add
ja
mov
psubsw
fwait
mov
and
jmp
outsl
jns
loope
sub
ds
stc
popa
lods
jno
pusha
lock
xchg
int
cs
pushf
jns
xor
and
xor
movsb
mov
outsl
inc
and
mov
clc
mov
jo
and
pop
and
cmp
sbb
dec
and
push
sbb
enter
sub
push
inc
aas
pop
push
lds
add
and
mov
push
mov
jge
and
xchg
add
mov
repz
push
and
mov
and
cli
int3
pop
je
pop
ret
inc
adc
dec
std
daa
rolb
pop
and
mov
stos
pop
xchg
das
inc
popa
push
cmp
or
xchg
mov
add
scas
push
xchg
es
xchg
mov
repnz
jmp
lret
scas
push
inc
mov
ja
pop
and
mov
aam
cmc
mov
push
sub
popf
xor
xchg
ret
xorl
test
les
mov
mov
lret
imul
and
cmp
adc
sbb
mov
pop
xor
and
push
xor
cmpsb
pop
jno
loopne
mov
scas
scas
add
pop
and
dec
and
cmp
cmp
movsb
mov
int
inc
sub
and
sbb
or
or
inc
loope
nop
xchg
xchg
clc
and
pop
pop
ss
fimuls
scas
adc
mov
repz
stc
pop
mov
and
dec
and
lea
mov
jg
out
in
xchg
jp
add
insb
pop
adc
mov
mov
mov
and
push
test
jle
test
enter
loopne
xchg
ror
stc
stos
xor
in
and
ss
out
dec
sti
scas
fildl
dec
xor
adc
scas
int3
mov
mov
cmp
ljmp
vpshufhw
aas
movsl
add
enter
cmp
fidivrs
addr16
and
pop
xchg
loopne
int
and
sub
mov
popa
outsb
mov
out
xchg
jge
in
pop
jmp
sahf
shrb
sub
cmp
jg
and
out
and
or
jne
add
aaa
inc
push
das
cmp
lret
xor
jg
mov
jb
daa
aad
lret
inc
ds
cmp
scas
adc
popa
and
push
shll
cs
ds
movsl
in
pop
mov
inc
into
adc
popa
dec
sbb
mov
cmp
leave
repz
mov
mov
sbb
movsl
pushf
and
cld
cmpsb
insl
imul
movsb
push
and
icebp
mov
pushf
test
iret
mov
cmc
ret
xlat
sbb
cltd
mov
cmp
or
popf
packuswb
popa
sbb
adc
and
pop
popf
ds
or
inc
and
and
je
and
push
repnz
pop
push
and
stc
icebp
repz
pop
daa
mov
mov
xchg
ljmp
lahf
dec
and
movsb
inc
out
loop
mov
popa
in
and
movsl
jmp
into
xchg
repz
stc
and
xchg
jmp
jne
add
and
dec
cmp
adc
movzwl
mov
xchg
ficoml
cmc
pop
mov
aas
dec
inc
int
das
fsin
and
and
ss
pop
cmp
sbb
mov
and
dec
adc
aam
mov
push
cmp
cmpb
and
push
inc
xchg
dec
cltd
pop
xchg
xlat
aaa
jae
inc
das
mov
rolb
sbb
clc
mulb
cmpb
jne
push
inc
xor
sahf
sub
and
sub
xchg
mov
sub
data16
inc
sbb
icebp
xor
mov
fldl
popa
addr16
fdiv
push
mov
xor
jge
arpl
sub
test
mov
cmp
push
movsb
lahf
movsb
cmc
mov
lret
cmp
dec
mov
inc
jge
idiv
adc
das
mov
nop
mov
add
mov
mov
pop
inc
movsb
dec
aaa
add
jecxz
pop
lds
in
ss
fldt
mov
mov
xor
aad
xor
mov
push
push
add
clc
lods
jg
in
xchg
push
mov
nop
mov
cld
pop
jae
sub
and
add
ss
push
insb
fwait
test
lret
add
int
mov
xor
bound
pop
mulb
push
out
in
mov
daa
test
mov
scas
repnz
add
movsb
or
out
dec
dec
sub
pop
cltd
jle
cmp
out
dec
stc
sbb
das
xchg
cmpsb
cmp
out
mov
pop
jg
sub
mov
das
fwait
xchg
loope
pop
in
ljmp
mov
jp
dec
popa
push
xchg
mov
jmp
test
inc
or
push
adc
imul
mov
frstor
jmp
les
sub
dec
adc
sarb
out
and
leave
in
push
pop
movsl
addr16
xchg
jg
repz
and
das
mov
sbb
push
jne
pop
lret
and
insl
mov
xchg
js
cmpsb
and
in
cwtl
andb
push
icebp
fwait
loop
and
add
arpl
jns
fimuls
pop
push
add
lds
mov
and
fdivs
and
xchg
sahf
pop
stos
int3
add
fisttpl
rcl
sub
push
and
push
mov
sahf
pop
std
and
mov
and
pop
lds
lods
stos
and
jno
repz
and
cmc
and
xlat
scas
movsl
std
add
ss
mov
dec
push
jo
dec
and
daa
fldt
and
in
cmp
xor
pop
cmpsl
sbb
and
fmul
push
and
sahf
scas
jge
push
jp
ret
mov
mov
pop
jecxz
mov
ja
xor
icebp
mov
and
addr16
into
and
jne
leave
mov
cmpsb
sbb
imul
andl
loopne
push
mov
cs
loope
jbe
mov
fisttpll
jae
stos
shll
xor
sbb
and
ret
mov
mov
ss
imul
mov
push
rcr
dec
pushf
mov
and
and
xor
dec
adc
and
add
lock
cmp
insb
push
and
jo
xchg
vxorps
addb
jge
fisttpll
xchg
xor
scas
push
jmp
bound
repz
mov
xlat
jmp
sahf
cltd
push
xorb
xchg
sbb
xchg
test
arpl
movsb
push
imul
mov
or
out
iret
jo
pop
mov
popa
lcall
inc
enter
sar
sub
int3
and
push
shrb
nop
jl
sbb
mov
pop
cltd
enter
mov
mov
cld
andl
cwtl
fdivp
dec
and
cltd
sub
pusha
cmp
arpl
mov
dec
inc
pop
and
leave
inc
addr16
ss
and
stc
inc
push
out
into
jno
xchg
push
stos
fdivr
fwait
sub
iret
das
and
addr16
fisubs
fisttpl
and
mov
sbb
movsb
inc
mov
mov
xor
pop
add
cli
addr16
adc
push
sbb
cltd
inc
test
dec
insl
pop
jno
mov
fldenv
sub
popa
imul
pop
clc
mov
popa
stos
pop
dec
push
and
dec
fst
sarl
pop
and
jno
adc
scas
sahf
pop
mov
mov
mov
sbb
sub
nop
cltd
add
mov
movsl
sub
mov
inc
sbb
popa
and
cld
imul
std
or
sahf
and
adc
push
and
aam
xor
add
mov
jns
sbb
bound
lret
and
adc
xor
test
add
lcall
in
sub
and
mov
imulb
jl
bts
pop
push
lods
adc
loopne
and
aam
jg
in
dec
mov
and
cmp
mov
xchg
sub
and
cltd
mov
aaa
inc
mov
cmp
and
and
mov
jmp
xlat
push
push
stos
pop
shrb
pop
adc
add
leave
stos
movsb
cmp
jns
ja
cmp
lods
pusha
sti
arpl
or
loop
sub
cmpsb
test
cs
imul
aas
xor
sub
movsl
dec
fsubs
or
lds
or
mov
xor
fistpll
and
push
sub
ficoms
cmp
dec
sbb
nop
loop
repnz
outsl
int
and
add
or
and
mov
jne
shlb
hlt
rcr
insl
xchg
and
add
push
and
add
lock
push
add
mov
and
jg
jmp
dec
sub
inc
dec
daa
imul
and
js
mov
adc
and
ret
mov
push
cmp
add
add
jecxz
push
scas
std
enter
imull
lock
jmp
cltd
cmovs
sbb
int
out
xchg
mov
outsb
leave
mov
and
mov
push
push
rclb
movsl
push
std
call
and
test
mov
hlt
mov
jno
movl
test
and
adc
cmp
movsb
pop
rcrl
cwtl
testb
cmp
je
and
cld
mov
movsl
xchg
and
pop
cmp
adc
sahf
scas
push
inc
testb
fdivrs
add
and
and
xor
pop
sub
stos
cmp
adc
imul
mov
push
sbb
mov
popa
xchg
mov
and
xor
adc
gs
inc
fmuls
or
imul
lahf
mov
and
adc
mov
cmpsb
or
push
sbb
inc
loop
xchg
xchg
imul
inc
mov
and
frstor
mov
das
mov
movsl
push
jge
mov
stos
jns
repz
hlt
and
mov
les
xor
and
mov
add
xchg
jnp
inc
and
lcall
fs
leave
test
or
mov
jge
jge
mov
xchg
imul
ret
mov
or
sub
adc
outsl
xchg
movsb
cmc
test
subl
push
js
int3
lods
aas
shll
push
das
in
cmp
daa
xor
icebp
xchg
shll
push
nop
or
pusha
inc
pop
jmp
sub
mov
movsb
add
push
fs
sbb
insl
stc
shll
mov
es
repnz
loope
push
pop
mov
pushl
lret
inc
and
iret
sbb
add
repz
mov
and
sahf
mov
push
add
xor
aas
mov
xlat
lea
dec
or
xchg
push
and
xlat
push
in
sub
shl
movsl
push
dec
mov
lahf
ds
and
ret
loopne
aad
scas
adc
mov
dec
jo
sti
lea
sbb
test
adc
push
jecxz
inc
sub
mov
sub
fwait
test
ret
cmp
jo
mov
gs
lea
mov
je
mov
scas
and
adc
in
shrb
add
xor
loopne
dec
nop
xor
mov
jg
clc
pop
aaa
and
mov
test
cli
xchg
addr16
je
popa
mov
sub
or
jmp
adc
iret
popa
imul
jp
out
fmuls
xchg
dec
sub
ret
mov
jae
mov
mov
pop
xchg
and
in
fcmovne
lret
xchg
and
push
sub
inc
aaa
mov
adc
xchg
cmp
ja
and
jge
call
mov
and
ds
mov
sbb
out
test
mov
shl
mov
mov
and
xchg
lret
pop
xchg
lds
sbb
lods
jmp
push
sbb
ljmp
arpl
lret
int3
dec
cmp
test
xor
add
mov
mov
add
pop
fldcw
dec
jl
jecxz
and
sub
lea
xchg
js,pt
or
jb
add
push
ja
ror
pop
test
mov
jnp
js
sbb
insb
ret
jb
imul
xor
fdivrp
and
pop
orl
pop
cwtl
std
and
inc
dec
adc
es
insl
test
xor
rcll
xorl
sub
and
jp
mov
and
and
inc
dec
cwtl
aam
and
jb
add
ds
adc
addr16
icebp
movsb
lods
loopne
roll
cmp
sbbl
dec
int3
loopne
jmp
popa
mov
cli
sbb
jno
jp
ret
xor
popf
or
pop
cltd
dec
mov
and
and
test
cwtl
scas
xor
adc
jno
mov
sbbl
dec
adc
mov
pop
dec
inc
cltd
divb
mov
cmpsb
adc
add
test
jno
ret
or
mov
iret
pop
movsb
roll
aam
mov
test
lahf
cmc
or
add
and
in
jp
cld
ret
adc
xchg
push
imul
pop
fs
pop
icebp
fwait
mov
sbb
into
jl
fldenv
mov
xchg
mov
push
inc
or
pop
call
stos
and
add
popa
and
in
mov
mov
mov
mov
pushf
or
pop
test
in
leave
sub
pop
xchg
add
es
scas
mov
movsl
and
lret
mov
pop
sbb
and
or
and
mov
and
push
stos
fbstp
in
inc
and
mov
mov
das
in
pop
jae
sbb
sbb
and
push
cmp
movsl
and
movsb
xchg
shrl
jecxz
adc
call
subl
and
push
inc
dec
pop
or
mov
cld
mov
jnp
mov
cmpsb
std
mov
pop
sbb
subl
xchg
test
dec
sub
lods
lea
or
pop
mov
pop
int
pop
movsb
xchg
dec
mov
test
les
mov
and
shll
mov
mov
pop
mov
push
addb
arpl
std
sarb
mov
mov
repnz
jne
arpl
repz
cmp
cs
mov
fnstcw
and
mov
je
cli
les
xchg
daa
pop
jae
iret
adcl
mov
push
mov
mov
pop
cltd
xchg
inc
es
cwtl
into
and
cld
push
and
fcomps
inc
scas
mov
pop
inc
pop
dec
and
sbb
lret
adc
sbb
xor
rolb
sbb
push
shlb
sub
cmp
and
sbb
test
push
dec
repz
leave
dec
jo
lock
mov
das
and
xorl
and
insl
jle
adc
xchg
dec
cmp
das
mov
push
mov
adc
cmp
or
mov
and
xor
test
out
inc
and
xor
ret
cmp
inc
hlt
push
cmc
and
stos
jns
jmp
cli
dec
and
pop
ja
sti
aad
fisubs
sahf
int
out
popf
aas
and
or
inc
and
mov
xchg
sub
inc
push
and
xor
fsubrp
insb
inc
fxch
scas
hlt
push
sub
mov
and
das
add
shlb
push
fisubs
inc
lret
sbb
or
mov
jbe
cld
scas
inc
orl
fsubs
inc
and
xchg
xor
and
xchg
jecxz
jmp
mov
add
mov
and
lods
test
lds
xlat
and
cmc
inc
mov
cmp
push
mov
mov
popa
js
adc
cmp
jns
enter
and
clc
jecxz
shrl
adc
lock
cmpsl
es
and
sub
inc
bound
pop
hlt
and
fucomip
cmpsb
es
test
icebp
push
insb
and
or
fmull
das
fs
sub
lock
push
test
test
push
dec
clc
and
inc
pop
pushf
and
scas
pop
insb
das
nop
bound
fisttpl
mov
out
cmp
ds
cmp
aas
jb
mov
sbb
insl
lret
and
hlt
xchg
xor
int3
cmpsl
and
mov
repz
push
or
lods
jmp
push
fdivrl
push
push
xor
pop
and
imul
sub
or
movl
mov
jecxz
fdivl
push
test
push
adc
sarb
je
fsubl
cmp
cmp
mov
mov
mov
mov
mov
in
jecxz
cmp
iret
jp
notl
movsl
mov
out
and
rclb
cmpsb
cwtl
nop
sub
dec
out
lahf
into
and
jo
leave
xor
xchg
cmp
push
mov
push
sub
sar
pusha
fucompp
xchg
cmp
add
retw
cmpsb
out
push
loopne
or
pop
icebp
jbe
xor
push
push
jmp
std
jecxz
fwait
mov
inc
sbb
inc
fistps
xchg
and
cmpb
jl
enter
sub
or
daa
daa
test
push
cld
ja
imul
xor
mov
dec
mov
and
xchg
cmp
repnz
dec
lret
sub
testb
daa
push
and
out
push
popw
jp
sub
cmp
clc
divl
xchg
push
sub
pop
dec
sub
and
mov
cmpl
sub
clc
adc
xor
rorl
ss
in
es
mov
and
cltd
xchg
lods
out
xor
daa
rorl
push
icebp
adc
inc
pop
pusha
aas
ret
or
inc
dec
loope
imul
pop
test
fimull
push
aaa
jmp
es
push
ret
cmpl
out
or
xchg
lret
dec
stc
sbbl
rorl
es
popa
xchg
ljmp
popf
loopne
and
xchg
sbb
sub
mov
push
sbb
cwtl
mov
loopne
and
addb
and
icebp
out
dec
dec
sbb
cmova
aas
sbb
and
or
and
pop
mov
xchg
add
bound
sbb
jnp
aas
sbb
inc
jns
xchg
or
jo
inc
clc
movsb
leave
fiaddl
ja
aam
sub
sbb
rcr
dec
shll
and
xor
ficoms
stos
mov
xchg
xor
or
and
hlt
mov
sbb
loopne
sub
add
inc
pushf
iret
push
out
stos
adc
dec
and
pop
adc
cmp
imul
inc
aam
and
sub
hlt
xor
xchg
sbb
loopne
scas
dec
clc
cmp
xchg
pop
xlat
movsl
add
lods
cmp
fsubs
jb
scas
mov
or
sbbl
xchg
add
insb
mov
push
xor
mov
enter
test
imul
mov
mov
or
dec
lods
mov
cltd
ljmp
popl
adc
movsb
sti
subl
mov
jg
lret
add
xchg
cwtl
movsb
pop
pop
sub
dec
js
test
and
fsubrl
mov
and
stc
aas
or
sbb
shlb
and
lods
out
add
mov
iret
push
sub
xor
inc
mov
das
add
lock
fcomp
mov
scas
jns
jmp
into
ret
jp
jg
xor
pop
pop
je
call
cmp
push
push
ja
fwait
mov
ds
in
cmp
test
popa
mov
shlb
adcl
sub
and
mov
aaa
dec
and
popl
js
mov
mov
mov
cmc
repnz
and
loope
push
imul
adc
rclb
push
movsl
add
jbe
mov
stos
fistps
jno
and
hlt
fimull
outsl
gs
jmp
mov
lahf
and
mov
std
and
xor
rol
fcomps
and
pop
pop
lret
push
and
adcb
jg
xchg
and
nop
inc
vpcompressw
loop
pop
arpl
lock
inc
push
stos
mov
es
imul
shlb
dec
sub
loopne
loope
pop
dec
xor
mov
push
or
cmpl
and
aas
outsl
adcl
mov
aad
sub
fiaddl
popa
aaa
and
mov
sub
pop
lods
xchg
sahf
insb
sbb
fdivrs
mov
xchg
add
push
repnz
xor
popa
add
add
movsl
nop
testl
cmc
lcall
xchg
inc
or
test
and
sbb
and
and
out
dec
adc
int
add
outsl
sbb
cmp
sub
lea
and
inc
dec
outsb
pop
push
int3
mov
imul
mov
xor
nop
push
add
sub
fsubr
jge
ljmp
loope
inc
inc
sub
jge
and
push
jbe
fldt
movsl
inc
xchg
xor
or
movsl
push
aam
and
call
dec
push
popa
inc
jnp
js
fistl
cli
adc
and
dec
arpl
js
jnp
cld
mov
pop
and
shll
cmpsb
pop
shl
push
out
xchg
cltd
mov
movsb
pop
test
mov
mov
xor
and
ja
jge
cmp
xor
xor
push
pop
loope
outsl
movsl
mov
fildll
and
cmp
ficoml
dec
xchg
ja
fstl
jg
int3
xchg
mov
fscale
lret
dec
pop
and
cld
push
and
das
outsl
cmp
adcl
in
xor
jl
jge
outsl
push
jbe
jno
test
and
shlb
push
pop
push
push
and
sub
mov
sub
sbb
clc
cltd
ds
mov
in
test
call
filds
int
and
insb
mov
pop
cli
dec
mov
and
data16
mov
jecxz
sbbl
fists
and
mov
and
mov
loop
pop
sbb
aas
xchg
xchg
pop
and
cwtl
fcompl
mov
push
scas
jl
sub
les
adc
adc
sub
push
aas
sub
and
cmpsb
faddl
sbb
and
imul
jne
lcall
mov
mov
notb
imul
mov
in
sub
push
and
lret
cwtl
or
xchg
fwait
and
out
dec
hlt
add
test
xchg
aaa
fistps
jge
mov
sub
movsb
mov
and
int
divl
and
and
jp
dec
sbb
movsb
fstps
cltd
fcomps
xor
les
and
aas
loop
hlt
ret
inc
and
test
fwait
inc
or
xchg
jle
and
jl
or
cmp
jb
dec
dec
and
or
cli
mov
outsb
xor
xchg
mov
js
dec
mov
adc
dec
sub
jb
scas
fdivr
xchg
xor
jle
and
xchg
jmp
push
popf
mov
or
xchg
pop
lahf
mov
orl
pushf
mov
orl
or
jl
mov
in
ror
add
pop
fldt
cmpsl
gs
add
and
push
sbb
and
icebp
arpl
cwtl
pop
into
and
xor
xchg
adc
std
cltd
sbb
mov
pop
xchg
addl
hlt
test
mov
jae
jb
sar
dec
xchg
or
dec
and
xor
push
and
lret
stos
jmp
inc
xchg
cmpsl
flds
nop
lcall
add
and
mov
adc
cld
shlb
and
dec
xor
loope
sbb
mov
lds
leave
test
adc
adc
dec
cmp
or
push
jnp
dec
shrl
je
mov
aaa
daa
pop
xchg
jbe
and
rcr
pop
xlat
in
mov
push
adc
cmp
adc
jnp
mov
add
push
icebp
out
ss
pop
and
popf
push
popa
shrb
and
rsqrtps
sbb
mov
ja
loope
pushf
or
in
stos
mov
xchg
jl
cmp
and
dec
xor
add
test
fs
std
jecxz
fbld
mov
jnp
push
dec
popf
in
call
adc
sbbb
mov
clc
addr16
lea
and
pusha
mov
sub
add
lock
dec
mov
or
mov
xchg
hlt
loopne
arpl
sub
adcl
iret
loope
test
int
int3
adcl
aaa
adc
and
pop
jne
pop
pop
mov
fcom
ss
and
jp
push
mov
pop
movsl
push
pop
pop
fidivrl
jmp
scas
mov
jmp
insl
lods
and
outsb
hlt
test
fsub
insl
jl
push
into
xor
test
mov
jne
xor
mov
lods
aaa
loope,pn
and
pop
jge
out
and
int3
shlb
stos
fisttpll
insb
and
and
mov
pop
and
jge
jp
and
xchg
outsl
popa
hlt
leave
xchg
mov
lds
xchg
loop
push
cltd
lock
pop
cmp
scas
and
jae
leave
and
mov
sbb
iret
and
outsb
repnz
push
cmp
mov
and
scas
adc
and
xchg
call
xchg
imul
mov
shrb
aad
cmp
rclb
push
mov
cmp
xchg
inc
icebp
sub
sub
mov
jl
add
lock
ret
and
mov
je
pop
loopne
push
jbe
scas
lcall
notl
and
pop
add
popa
ss
jno
and
negl
mov
outsl
mov
push
push
sub
push
mov
pop
mov
movsb
jo
pop
scas
push
jns
inc
sbb
jecxz
cmc
xor
loop
add
pop
xchg
sub
pop
mov
and
psllq
xor
dec
and
mov
mov
jns
cwtl
and
or
lcall
fndisi(8087
cmpsl
mov
xor
hlt
cmp
cmc
mov
clc
imull
jno
lock
jmp
jmp
push
dec
test
mov
andl
inc
xor
daa
imul
leave
and
lcall
inc
and
loope
and
aad
dec
push
sbb
into
test
push
push
outsl
ficoms
fists
mov
das
fs
cmp
push
dec
stc
and
fwait
add
imul
addb
pop
mov
push
push
stos
inc
lret
insl
jg
push
lcall
mov
test
in
mov
inc
and
loopne
fsts
mov
xchg
or
and
aaa
add
xchg
dec
pop
cmp
clc
and
jo
add
xor
cmpsl
inc
and
lock
push
test
xchg
cmp
dec
pop
fsubl
int
pop
xchg
or
hlt
loope
lcall
jecxz
and
cmp
ljmp
inc
xchg
ret
sub
js
inc
int3
sarb
add
or
std
cli
jl
adc
out
and
dec
sti
in
push
ss
sahf
lcall
mov
and
pop
sub
inc
rcrb
cmp
xor
out
add
and
adc
and
inc
ja
mov
mov
adc
xchg
xchg
add
ficoml
mov
popf
dec
out
test
pop
movsb
xchg
jmp
daa
sbb
or
fwait
mov
loope
or
iret
xor
in
add
push
xchg
cld
leave
je
inc
mov
add
sahf
dec
mov
jae
in
or
movsb
nop
mov
loop
mov
pusha
jge
mov
sbb
and
test
add
pop
jbe
in
sbb
jns
xlat
addl
mov
mov
insl
mov
in
sbb
inc
inc
jno
cmpsl
icebp
and
enter
call
int3
movsl
iret
dec
fidivrl
stos
mov
push
loop
xor
or
add
movsb
int3
and
xchg
lcall
lods
fabs
std
js
popa
xor
and
inc
sub
jb
jmp
mov
and
sbb
mov
test
sarl
push
mov
mov
jnp
add
ret
or
in
out
jae
sub
sbb
mov
xorl
popa
jle
mov
and
or
fildl
es
hlt
sahf
or
and
sti
cmp
jae
xchg
mov
fldl
bound
xlat
mov
add
or
mov
sbb
loop
mov
mov
mov
mov
int
pop
popf
fsts
mov
shll
push
negl
inc
jo
pop
mov
and
imul
or
jb
ss
les
es
pop
jp
lret
xlat
and
dec
rcrl
sbb
xor
lea
xlat
and
xchg
mov
jno
push
das
and
xor
lock
mov
stos
popa
fwait
pusha
sub
mov
push
sub
nop
insl
mov
sbb
push
jle
mov
popa
ss
sbb
and
outsl
popl
mov
push
jmp
movsb
add
pop
xorb
fisubrs
lods
and
push
jge
mov
or
cmp
lea
out
mov
mov
lret
dec
and
lcall
movsb
pop
mov
pop
movsb
cmovle
mov
scas
adc
or
add
jl
lods
pop
push
jmp
sub
dec
sub
mov
add
insl
popa
adc
sbb
pop
adc
imul
negl
nop
and
fistps
out
stos
ffreep
das
push
pop
arpl
mov
lcall
mov
loop
mov
movsb
xchg
popa
push
and
and
dec
mov
mull
rorb
mov
les
mov
push
lahf
dec
dec
mov
aam
xchg
jg
adc
lea
and
mov
pop
out
adc
add
or
cmpsb
jnp
push
mov
mov
jecxz
mov
cmpsl
xchg
loop
gs
or
sbbb
popa
inc
test
negb
adc
cmp
cwtl
loop
mov
push
shl
test
add
adc
shll
add
jle
leave
mov
sbb
sub
ss
sub
mov
mov
and
fst
inc
push
lcall
lahf
xor
fisubl
xchg
xchg
cmpsb
and
scas
test
and
jl
rep
bsf
and
rcll
pop
xor
sti
fidivrs
add
and
xchg
sbb
dec
les
jecxz
xorl
movsb
sub
cld
popa
dec
movsb
jbe
sbb
mov
loop
loope
and
rorb
fldl
or
sbb
add
cltd
call
lcall
sub
inc
addr16
mov
cltd
pop
xor
outsl
xor
push
sbb
xor
pop
mov
es
push
movsl
adc
movsl
pop
hlt
pop
sub
cld
xor
sub
push
xchg
inc
xor
es
xchg
adc
inc
or
xchg
sbb
lods
pushf
xor
mov
mov
add
stos
imul
aad
notl
and
cwtl
pop
sbb
dec
and
test
loopne
insb
cmp
sub
and
cwtl
popa
hlt
xor
cmpsb
lret
add
xchg
mov
sahf
and
mov
data16
mov
jne
inc
test
imul
sub
fs
adc
mov
mov
sub
mov
loope
push
mov
jns
call
ret
xchg
xor
dec
push
lret
and
inc
loop
xchg
rorb
mov
stc
or
rclb
adc
and
sbb
xor
fiadds
shll
or
ret
xchg
xchg
xor
in
inc
bound
aaa
xor
fdivl
loopne
mov
pop
popf
pop
pop
test
xchg
lds
in
icebp
add
adc
pop
jg
inc
mov
mov
adc
pop
push
and
jecxz
imul
jo
mov
inc
adcb
rorb
push
nop
inc
lods
cld
push
and
jbe
push
je
xchg
fldcw
add
loope
mov
jmp
out
add
and
and
pop
and
getsec
inc
xor
xchg
push
mov
or
pop
in
xor
sub
jle
decl
rcll
push
iret
and
and
scas
stc
daa
and
sub
push
cwtl
mov
sarb
and
fidivrl
dec
jp
and
inc
and
test
rclb
xchg
xor
pop
mov
lahf
dec
xor
aaa
xchg
adc
push
xor
cmp
rclb
in
jno
sbb
gs
sub
idivl
xchg
jle
loopne
jno
fdivl
cld
push
push
and
pop
push
push
or
and
sti
into
inc
mov
cmp
stos
inc
and
fmull
dec
add
mov
out
shrl
iret
sahf
cmpsl
fisubrs
mov
stos
xor
arpl
pop
xor
mov
movsl
insb
loop
mov
ret
cmp
sbb
iret
fbld
and
and
cs
mov
and
out
pop
and
push
out
dec
clc
daa
inc
loope
fwait
lret
sti
dec
aam
mov
movsl
dec
ds
cmp
xor
add
and
lcall
mov
jge
jecxz
push
rorl
pop
pop
and
scas
cmp
sub
push
mov
mov
or
xchg
push
and
scas
test
lds
cmp
in
test
lahf
dec
adc
mov
fwait
xchg
cli
cmpsb
imul
popa
mov
mov
addr16
aaa
push
stos
sub
icebp
out
mov
neg
push
mov
or
xor
testb
pop
cmpsb
sub
jne
iret
popa
cmp
rcll
jl
sub
mov
push
adcb
and
sub
imul
sub
loop
mov
mov
and
stos
loopne
inc
xchg
fimuls
and
or
cltd
shl
lahf
lea
fdivp
test
lcall
mov
daa
imul
push
mov
push
mov
inc
jno
dec
int
inc
sub
mov
inc
pop
push
aas
and
iret
sbb
dec
sub
pop
mov
in
inc
js
repnz
dec
mov
std
mov
and
mov
scas
lcall
xchg
in
mov
aas
xchg
dec
sbb
jnp
add
je
adc
adc
pusha
and
lock
mov
arpl
shlb
push
mov
jns
mov
cmpsb
adc
pop
addr16
xchg
jne
in
mov
out
ret
test
jae
shl
jge
fs
and
mov
sbb
cltd
aam
jl
add
insl
xchg
and
popa
negb
xor
fadds
mov
sbb
je
lods
cli
jnp
mov
fwait
pop
push
loopne
sub
aas
andb
fcmovnu
test
pop
xor
mov
adc
xchg
and
cmc
jno
movsl
rorb
and
push
and
nop
jge
cmp
mulb
xchg
fistps
push
aaa
les
and
sub
add
lea
scas
aaa
push
mov
mov
sub
xorb
mov
mov
and
and
cmp
movsb
das
xchg
std
and
sbb
and
subl
and
mov
xor
inc
subb
movsl
loopne
cmp
test
sbb
and
and
xor
sub
lret
push
pop
and
imul
inc
shlb
data16
sbb
shrl
and
ret
sti
sbb
cmc
adcb
jns
adc
ss
xchg
cmp
loop
jno
outsb
fmuls
test
arpl
mov
int3
xor
pop
out
jg,pt
cmp
enter
and
sbb
pop
mov
cli
outsl
mov
jnp
icebp
inc
and
xor
or
jbe
loop
arpl
dec
adc
mov
dec
jmp
mov
xchg
and
push
push
sub
fmull
fcomi
mov
mov
inc
sbb
mov
push
mov
mov
mov
sub
outsb
add
jp
push
sbb
sub
lret
sub
das
jno
cwtl
mov
pop
in
leave
orl
and
sub
dec
cwtl
and
mov
int
fdivs
and
push
leave
rclb
mov
inc
jecxz
and
mov
dec
jns
fmulp
and
in
push
out
pop
outsl
and
imul
mov
and
pop
jge
popa
and
lea
inc
sahf
pop
testl
test
mov
and
shl
and
add
in
pop
sub
sbb
clc
adcl
sbb
es
lret
pop
inc
dec
mov
movsb
sbb
out
jno
and
clc
mov
pop
sbb
sbb
aam
addr16
jbe
inc
icebp
inc
lods
cmp
out
test
cmovno
inc
subl
ret
adc
je
sti
push
add
loopne
dec
and
push
sub
pushf
add
in
and
add
insb
mov
and
shl
xchg
testb
test
daa
and
sti
aas
dec
shr
push
and
mov
dec
je
push
insl
cmp
xchg
outsl
nop
jb
mov
lahf
stos
push
fwait
gs
fs
ret
insl
rclb
lods
loopne
xor
mov
mov
mov
scas
iret
add
outsb
jo
jp
repnz
adc
in
jg
mov
out
lock
sub
cmp
out
mov
call
jno
lcall
jbe
mov
shll
and
push
push
sbb
inc
aam
inc
movsb
adc
sub
mov
iret
lods
into
add
xor
dec
clc
and
and
movsb
int
pop
test
int3
inc
mov
add
cmpsl
mov
jno
test
test
stc
lret
int3
cli
sub
mov
rorb
adc
daa
addb
hlt
adc
mov
and
jp
add
pushl
sub
xor
and
dec
and
sbb
pop
out
mov
push
and
mov
scas
inc
movb
mov
mov
lcall
bound
in
bound
push
mov
and
jge
sahf
cmpsb
pop
out
js
pop
or
mov
jecxz
cmp
adc
sub
nop
ret
sbb
dec
mov
dec
xorl
and
cwtl
jle
lock
and
jl
mov
pop
iret
ja
push
in
movsb
add
jb
mov
push
cmc
and
stc
lods
test
cld
cmp
push
xchg
ja
in
push
inc
sbb
or
inc
movsb
in
mov
xorl
stc
lcall
jg
ret
pop
pop
jmp
jmp
sbb
je
dec
jns
js
loopne
push
icebp
jmp
inc
fidivl
xor
fwait
clc
cmp
test
mov
rcrl
lret
sbb
mov
adcl
xchg
adcb
stos
xchg
jle
sti
lock
push
aas
icebp
les
in
fwait
cmp
rclb
or
mov
xchg
pop
js
push
insl
lods
sahf
std
and
cmp
lret
aad
inc
xchg
cld
in
dec
iret
mov
addl
sub
pop
icebp
jmp
nop
das
dec
inc
sub
xor
addr16
neg
jmp
rclb
fwait
and
push
iret
pusha
and
xchg
push
cltd
mov
xor
push
and
xchg
fcoms
jne
and
test
fldt
cmp
mov
aam
icebp
adc
xchg
cwtl
sub
adc
dec
jmp
and
mov
loopne
push
xchg
xchg
inc
jl
shl
imul
adc
pop
mov
and
mov
push
and
jo
jge
cwtl
mov
test
adc
jl
sbbb
dec
mov
nop
or
xchg
inc
shrl
addr16
and
and
mov
fsts
adc
dec
mov
and
push
push
in
and
je
and
xchg
aam
mov
roll
sub
movd
adcl
test
and
xchg
popf
popa
mulb
mov
pop
stc
mov
mov
js
in
fcoms
xchg
and
adc
pusha
loopne
mov
inc
lods
stc
shll
mov
imul
sub
test
sub
imul
mov
xorl
and
frstor
pop
and
push
shlb
fiaddl
popa
lahf
dec
and
scas
mov
sub
sahf
daa
inc
xor
push
outsb
jecxz
and
inc
fs
sbb
ficomps
lock
mov
pop
in
dec
into
and
xchg
and
xchg
and
xchg
add
dec
mov
lds
inc
inc
dec
mov
mov
dec
mov
mov
sub
mov
mov
scas
jbe
jns
js
push
xchg
inc
push
and
mov
ja
jge
dec
daa
xchg
xchg
sub
cmp
in
inc
test
mov
sub
cmp
and
jnp
outsb
in
mov
mov
cwtl
data16
cmc
das
pop
jbe
popa
popa
inc
into
xchg
sub
rol
inc
shlb
mov
cmp
ja
in
xchg
fs
inc
mov
push
inc
push
scas
add
sub
and
mov
popa
lahf
cmp
fs
aas
inc
test
out
repnz
mov
mov
adcb
mov
pushf
lods
xchg
imul
dec
and
add
fbstp
push
and
adcl
cmp
add
and
pop
stc
inc
add
outsl
pusha
out
fdiv
add
dec
and
and
lods
jae
and
call
loope
sub
or
imul
faddl
mov
sar
ret
in
and
xor
and
clc
sbb
outsl
insb
and
and
fsubs
jbe
incl
xor
pop
cli
inc
addr16
fcom
add
and
iret
aad
shll
daa
push
pop
inc
and
lds
and
insl
cmp
add
sub
xchg
and
ss
ret
xor
jg
inc
adc
push
sub
aaa
lock
and
jo
mov
ja
ja
sarl
xchg
test
insb
in
in
into
jp
mov
jmp
push
and
lods
push
push
xchg
imul
stos
and
test
gs
jno
dec
push
out
pushf
and
inc
fdivs
xchg
jns
jmp
xor
xchg
mov
loope
int
aad
mov
xor
sbb
enter
out
mov
ja
es
xor
xor
and
cmc
shll
into
push
daa
std
loope
and
or
mov
inc
jno
jecxz
fldenv
addr16
xor
aaa
sub
jecxz
inc
std
push
in
and
outsb
mov
sbb
popa
sbb
stc
mov
addr16
xchg
ret
mov
rorb
and
xor
add
mov
and
orb
mov
sbb
rorb
lea
jbe
jmp
adc
and
bound
cmpsl
push
and
movsb
mov
test
insb
ljmp
and
jae
ss
sbb
int
push
in
mov
xor
or
and
call
and
test
jge
rcrl
and
cmp
movsb
sub
lret
xchg
mov
and
xor
and
outsl
or
dec
mov
in
xor
ficoms
and
cmp
stos
daa
sbb
xor
and
mov
fcmove
fimull
or
sahf
sub
das
adc
cltd
sbb
jne
push
lret
pop
ds
sbb
test
push
and
add
and
mov
and
or
pop
and
pop
push
jle
loope
or
lahf
aad
ss
out
bound
mov
insl
sub
push
and
outsb
fsts
pop
add
dec
cmp
dec
push
outsb
sub
adc
push
sbb
jbe
jnp
push
sub
xchg
out
mov
xchg
pushl
inc
mov
call
cmpsb
cmp
mov
dec
inc
and
mov
add
fldt
sbb
out
nop
dec
adc
popf
ss
imul
sub
and
xor
mov
test
lea
xchg
mov
rorb
xlat
mov
orb
cmp
cmpsb
ficompl
inc
cmpsl
addl
jns
mov
xor
jg
nop
cmc
ret
jge
pusha
push
and
sub
jg
push
and
xor
and
loope
pop
cmpl
xchg
jno
and
mov
inc
cmp
and
mov
adc
cmpsl
and
sbb
inc
andb
mov
insl
cld
mov
mov
stc
mov
push
in
int3
into
hlt
cmp
fs
lock
cwtl
mov
adc
sbb
sbb
jp
mov
cmp
in
arpl
jmp
sarb
scas
inc
das
popl
stc
xchg
cmpsb
jmp
and
lret
iret
cmp
mov
ror
add
push
cmp
or
push
repnz
sbb
lret
cltd
dec
test
dec
jbe
xor
leave
test
test
hlt
dec
inc
and
dec
xchg
xchg
mov
in
cmpsb
sbb
sub
jge
mov
rorb
jae
and
and
loope
dec
loopne
stos
cmp
mov
lahf
push
mov
mov
jmp
mov
testl
lahf
add
and
shlb
arpl
push
add
and
mov
lcall
loopne
and
and
scas
and
popf
or
mov
daa
popl
jmp
mov
push
mov
mov
movsb
stos
cmp
adc
stc
int3
mov
mov
push
and
push
and
lahf
inc
cmp
cmpsb
adc
imul
and
lcall
popa
fidivs
into
and
jle
stc
xchg
mov
rcrl
int3
sbb
inc
and
add
xor
popa
or
pop
sub
and
cmp
int
loope
gs
and
jp
mov
jne
aaa
mov
and
and
sbb
loopne
jle
cmp
fcompl
mov
dec
aas
xchg
dec
frstor
and
push
sbb
cli
push
nop
movsl
xchg
fwait
sbb
push
pop
cmp
movsl
xchg
jle
or
add
inc
lods
cld
mov
in
pop
lahf
xor
mov
ret
push
mov
outsl
aaa
cmp
sbb
inc
add
jb
cmp
mov
jo
inc
add
lcall
jnp
push
je
and
mov
aas
popl
cmp
lret
and
in
mov
mov
and
ja
aaa
enter
inc
lret
repz
or
into
nop
mov
popl
mov
inc
xor
mov
or
xor
nop
and
mov
xchg
frstor
sbb
rcll
and
add
imul
aaa
mov
xor
pop
add
aaa
bound
outsb
push
ss
mov
adc
icebp
sahf
pop
popf
ljmp
movsl
mov
mov
lods
movsb
or
popa
mov
dec
hlt
dec
push
inc
pop
xchg
insb
shlb
loope
dec
adc
cld
fcoml
and
jecxz
not
pop
popa
xchg
pop
push
cmp
mov
push
scas
mov
sbb
fistpl
mov
cs
xchg
mov
and
sub
lock
sbb
and
dec
dec
jecxz
pop
and
or
pushf
push
xchg
jno
into
scas
popf
out
push
mov
inc
lcall
fsubr
shl
mov
aad
push
out
xchg
lea
sbb
sub
les
movsb
shl
mov
divl
and
add
pop
outsb
and
ds
jb
inc
fidivrs
out
lods
sub
lds
push
sahf
loope
cmpb
into
mov
cltd
int3
mov
ret
or
jo
mov
add
mov
leave
movsl
mov
sub
ret
pop
movsl
scas
mov
in
shrb
aaa
adc
es
loopne
pop
and
xor
mov
call
add
repnz
jp
mov
clc
and
into
adcb
aaa
xor
sahf
out
pop
hlt
addr16
mov
add
and
xor
test
scas
or
cmp
jmp
cwtl
repnz
mov
dec
bound
and
xor
stc
movsl
fwait
decb
pop
sub
or
jle
neg
push
sub
shll
fs
mov
and
call
loop
test
test
xchg
add
push
cmp
sub
cmc
das
lds
popf
mov
lcall
mov
negb
shll
and
dec
out
mov
mov
jo
push
popa
push
arpl
cmpsl
sbb
and
aad
icebp
xchg
cld
rcrb
and
jle
dec
xor
xor
clc
sub
xchg
push
mov
cmpsb
nop
add
adc
xor
cld
ds
and
push
and
mov
cmp
adc
and
leave
mov
and
or
xchg
mov
ret
push
arpl
sbb
addr16
int
adc
idivb
ds
rorb
pop
aas
and
cld
ret
out
dec
out
inc
adc
rolb
and
mov
popa
in
jbe
lods
mov
xor
inc
cli
loope
mov
arpl
fwait
mov
mov
mov
pop
cwtl
push
movsb
adc
subb
push
and
roll
out
mov
cltd
sahf
cmc
and
mov
and
sbb
ret
outsb
dec
adc
mov
sub
jb
push
ret
push
stos
hlt
and
push
fiadds
and
sub
add
lds
ds
or
popf
out
cmp
xchg
mov
out
inc
jb
pushf
pop
push
sahf
es
outsb
lea
cli
cs
sbb
fs
fsubrs
inc
sub
add
lea
mov
mov
mov
mov
loope
push
rcll
push
aad
cmpsl
hlt
mov
xor
mov
cmp
xchg
fcmovnb
sub
lahf
int
loop
inc
xchg
je
push
mov
into
and
or
dec
mov
mov
sbb
insb
cmpl
xor
mov
lret
lcall
jg
and
sub
mov
xchg
inc
fwait
mov
push
mov
and
sbb
jb
pushf
push
and
lcall
push
fwait
aas
sub
repnz
and
jo
aad
dec
and
and
cmp
scas
sbb
jbe
push
ret
add
xchg
pop
dec
mov
dec
add
mov
insb
mov
lds
cmp
pop
fcoml
inc
or
mov
jmp
enter
jge
push
mov
sbb
xor
fsts
and
push
hlt
cmpb
xor
in
stc
lcall
add
or
test
dec
and
cmp
dec
mov
repz
sub
imul
jno
icebp
movsl
mov
or
and
push
inc
and
mov
mov
divb
out
push
pop
cmp
lret
sti
popa
push
or
dec
mov
mov
and
jp
into
outsl
inc
and
fisubrs
nop
xchg
xchg
pusha
mov
push
mov
popa
aas
pop
dec
and
add
movsl
inc
adc
movsb
pop
xor
and
push
xchg
in
and
xor
repnz
mov
loope
clc
mov
xor
ljmp
pusha
fildll
and
xlat
cmp
sub
jb
mov
push
inc
cltd
sbb
ret
mov
stos
sti
push
or
and
jo
ret
test
jno
dec
cmc
imul
cli
push
or
rcr
gs
sub
and
inc
test
arpl
test
lods
lods
das
cwtl
mov
mov
push
jae
popf
repz
dec
std
and
jp
xor
push
lods
fucomp
cmp
add
push
mov
xchg
sub
fidivrl
xchg
inc
fsubr
adc
xchg
ret
adc
and
dec
fnstcw
mull
cmpsl
jno
jno
xor
scas
xchg
inc
xchg
sub
std
jno
cmpsb
out
fdivrl
das
iret
jb
stc
leave
pop
test
and
in
mov
sbb
icebp
mov
or
dec
fidivl
cwtl
mov
pmaxub
jnp
ds
inc
and
repnz
loop
cld
sub
dec
imul
dec
outsl
mov
in
into
ret
jno
ret
pop
xchg
cwtl
lock
ret
clc
lods
daa
and
mov
inc
mov
cmp
inc
rcrb
inc
and
sbb
and
pop
mov
popa
jmp
jecxz,pt
add
mov
xchg
add
jp
loop
adc
and
lea
or
dec
dec
adc
mov
mov
mov
jns
inc
popf
dec
pand
and
pop
mov
jp
and
inc
cmp
nop
mov
pop
push
sbb
mov
int3
inc
sbb
andb
cmpsb
cmp
and
aad
aam
push
ljmp
fstps
sarl
cmp
testb
cmp
pop
lods
sbb
push
or
and
jns
push
cltd
xor
inc
xchg
jecxz
movsl
scas
inc
dec
inc
lcall
or
inc
imull
in
bound
xchg
cld
xchg
es
popf
std
xor
sub
dec
pop
mov
arpl
nop
je
out
aad
inc
ret
cs
out
test
adc
or
aaa
pop
mov
lret
cmpsb
or
sbb
or
je
in
in
or
lcall
popa
fistpll
iret
dec
jecxz
cmp
sub
jb
and
loop
leave
mov
pop
dec
and
data16
mov
scas
fsts
mov
and
inc
ljmp
and
jge
xorb
dec
and
fcomps
out
shrb
push
sbbl
jl
std
mov
lea
mov
sbb
test
jne
and
sub
dec
and
mov
mov
mov
test
jp
pop
xchg
and
sub
cs
and
pop
inc
mov
mov
and
pop
hlt
cmp
leave
inc
outsb
xchg
ljmp
cmovg
adc
sub
mov
lods
and
std
inc
popa
out
cmp
pop
pop
stc
mov
add
adc
into
iret
stos
xor
and
or
xchg
loopne
mov
fisubrl
jle
adc
push
das
pusha
adc
cmc
dec
lods
hlt
sarl
and
sub
adc
pushf
sahf
and
inc
add
and
pop
int
and
push
and
js
mov
mov
repz
and
je
into
add
fcoms
cmpsb
movsb
test
and
adc
push
dec
push
nop
les
outsl
cmpsl
stos
data16
pop
and
lahf
push
mov
fisubrl
sub
fldenv
add
cmp
rolb
cs
add
sahf
in
imul
mull
shl
sahf
and
aad
popa
pop
iret
movsb
lcall
js
jns
cld
push
fsts
aam
dec
in
daa
out
and
mov
adc
adc
enter
lods
ja
pop
negl
mov
idivb
pushf
mov
out
cmp
jmp
pop
icebp
push
add
and
and
cli
push
mov
xor
pop
hlt
stos
and
insl
sub
and
mov
lcall
lock
xor
cmpsl
and
jmp
cmc
pop
insl
xlat
add
sub
nop
and
outsb
leave
mov
or
push
push
lds
push
aam
and
fucomip
ja
xchg
sub
inc
sbb
push
and
jae
repz
les
daa
and
jg
cmp
pop
pop
cs
jb
and
xlat
pop
daa
test
aad
das
pusha
jl
or
mov
push
sbb
nop
push
movsl
mov
repnz
aam
outsl
shlb
jo
cmp
out
cmpl
stos
loop
movsl
push
test
movsb
mov
lods
lcall
push
add
lods
mov
mov
push
ss
jg
mov
lret
mov
mov
sub
aam
sahf
gs
aas
push
fsubl
pop
shlb
jg
bound
arpl
and
sbb
fwait
out
lcall
rclb
lret
jmp
push
test
jle
mov
roll
push
and
or
inc
and
or
and
addr16
hlt
mov
fwait
icebp
and
push
push
jmp
and
inc
mov
movsl
xchg
imul
xor
mov
xor
cwtl
xchg
xchg
fistl
cltd
test
pushf
xor
je
and
jo
adc
icebp
xchg
xchg
jl
cltd
das
or
in
pusha
sbb
cld
cmpsb
push
push
and
mov
iret
leave
sub
and
xchg
arpl
sbb
pop
outsl
fnstcw
mov
and
scas
sahf
in
xor
stos
nop
push
stc
imul
gs
jns
dec
loopne
mov
inc
adc
and
cmpsl
daa
xchg
and
inc
sar
and
jmp
jg
scas
xor
jne
jbe
lahf
outsl
push
out
cmp
add
fisubs
mov
fcompl
and
inc
fs
hlt
test
or
pusha
sub
sub
cmp
sbb
xchg
jecxz
mov
and
ret
and
inc
mov
test
push
out
and
lret
cmc
add
pop
pop
loop
and
sbb
hlt
in
pop
sub
and
fisttpl
stos
pop
inc
and
xchg
lret
xor
and
push
jnp
std
add
aad
and
mov
sbb
sbb
gs
pop
iret
and
add
fs
pop
mov
inc
nop
cli
daa
lahf
sub
cmp
aad
mov
add
out
clc
xchg
loop
lea
pop
xchg
adc
call
loopne
jns
test
and
je
inc
jnp
and
dec
jae
mov
mov
fs
cmp
jbe
adc
sub
ss
cmp
cmp
pop
sub
pop
mov
movsb
mov
mov
adc
jns
xchg
or
inc
mov
xchg
adc
lock
jge
sbb
popa
xor
mov
inc
push
ja
fsubs
sub
or
fwait
lahf
and
repz
cmc
and
mov
in
mov
mov
adc
mov
pop
push
roll
push
xchg
aas
inc
or
insb
add
and
mov
jmp
lahf
cmpsb
pop
scas
push
ret
test
cmp
xchg
mov
add
pop
insb
fnstsw
lods
test
sbb
gs
aad
mov
inc
stos
fsubrs
and
cmp
push
mov
loopne
or
imulb
lret
cmp
icebp
js
dec
and
mov
and
sbb
mov
cmp
push
popa
push
test
loope
mov
shlb
xor
mov
push
in
stos
inc
and
inc
mov
sbb
mov
mov
sbbl
dec
sub
cmpl
sbb
test
and
xchg
mov
scas
adc
add
mov
cld
sbb
or
movsb
mov
cli
test
ja
das
cs
cmovno
dec
fincstp
cmp
fldl
pop
lret
xchg
leave
mov
fs
xchg
mov
iret
ficompl
arpl
jl
xor
outsl
pop
mov
pop
movsb
jbe
mov
inc
and
and
sbb
cmpsb
pop
push
mov
adc
add
xchg
pop
inc
adc
lock
jno
orl
jne
pusha
in
xchg
dec
fbstp
lret
jg
push
xor
inc
mov
cmp
sbb
jo
scas
jns
lea
adc
hlt
cltd
jecxz
and
push
pop
cwtl
cli
cmp
adcl
test
pop
mov
pop
cmpsl
jb
aaa
pop
mov
inc
mov
xchg
push
mov
cmp
and
fisubrs
jmp
addl
js
aad
xchg
into
and
popa
add
and
fisubs
push
xor
mov
xor
frstor
dec
imul
mov
dec
in
pop
scas
push
mov
loope
inc
pop
or
or
test
loop
jmp
icebp
dec
sbbl
xchg
arpl
jmp
mov
jns
xor
or
ret
inc
xor
cwtl
mov
jno
in
sub
mov
daa
pusha
dec
je
xchg
mov
jge
push
andl
jg
das
out
fbld
jmp
divl
sbbl
and
fdivrs
mov
jae
push
push
sub
and
xor
fcmovnbe
mov
jb
aaa
adc
inc
pop
mov
xchg
push
jae
pop
xor
and
fcompp
xchg
adc
pushf
pop
fnstsw
sti
cmp
inc
addr16
imul
xchg
scas
mov
out
mov
movsl
or
cmpsl
popa
loope
inc
hlt
pusha
and
sub
cmpsb
aad
sbb
or
xchg
xor
sbb
lea
test
out
jbe
pop
mov
add
lods
les
shll
stos
cmpsb
dec
fucom
imul
lret
mov
cmp
je
rorl
mov
mull
into
out
test
insl
lcall
sti
pop
imul
dec
jle
and
jl
mov
pop
dec
enter
and
jg
shlb
jbe
and
out
cli
and
push
push
in
rcrl
xlat
pop
inc
ljmp
rolb
inc
mov
lock
fs
jbe
int3
fldcw
fsubrl
aaa
insl
cmpsb
shrb
popa
mov
xor
movsb
bound
jnp
sti
jbe
dec
and
inc
jno
and
and
and
cld
sub
and
jnp
loopne
push
call
add
mov
mov
cmp
xor
mov
js
jns
xor
cli
frstor
push
adc
and
subb
pop
call
mov
adc
mov
movsb
imul
mov
pusha
push
mov
inc
sbb
push
addr16
inc
cmp
in
js
jbe
pusha
popf
and
stos
add
cmp
out
les
jl
and
std
and
xchg
mov
jp
stos
movsb
mov
ds
loopne
lds
call
xchg
aaa
subl
push
bound
xchg
xchg
or
xchg
cmp
push
and
or
js
fisubl
and
jmp
subb
adc
push
js
pop
and
add
mov
and
outsl
xchg
dec
popa
xchg
pop
mov
pop
insl
xchg
sub
test
dec
lret
shl
push
mov
aas
and
adcb
arpl
and
std
pmuludq
pushf
mov
mov
andb
cwtl
push
aaa
enter
in
cmp
orb
fimull
push
pop
and
aam
int
and
inc
cvttps2pi
movsl
mov
mov
and
jbe
push
and
sahf
mov
and
xor
into
test
clc
push
pop
dec
enter
add
xchg
int3
fucomp
in
pop
mov
mov
mov
enter
test
ret
test
jge
data16
cmp
ret
pop
push
inc
cmp
iret
mov
and
call
mov
push
lcall
clc
xor
xlat
ljmp
xorb
popa
mov
sub
dec
xchg
dec
push
aas
cs
shld
inc
push
xor
sbb
insb
cs
jmp
cmp
xchg
and
out
add
mov
mov
repnz
dec
jp
add
aam
je
add
fwait
sahf
mov
imul
and
and
and
out
fstpt
push
idiv
xor
or
jge
and
adc
xor
popa
add
and
add
sub
sub
sarb
xchg
imul
iret
mov
mov
movsl
jge
mov
or
fistl
mov
in
cltd
push
xchg
xor
into
mov
imul
and
bound
test
or
push
loope
xor
inc
shrb
test
and
dec
mov
xor
cmp
xchg
and
inc
mov
ss
mov
adc
repnz
push
mov
lret
pop
scas
cmc
scas
lds
dec
lods
push
jno
mov
cs
dec
outsl
mov
dec
repnz
ret
jns
mov
jne
pop
sti
testb
es
pop
fimull
pop
repz
push
sub
push
arpl
sub
mov
orb
or
lds
dec
pop
mov
and
es
mov
mov
adc
addb
bound
cld
cmp
ss
adc
stos
in
jp
jecxz
ds
dec
aad
arpl
mov
mov
fsubrl
sahf
ret
mov
xor
xchg
sbb
adc
jmp
in
push
jo
sbb
inc
xchg
popf
mov
stos
adc
loop
xor
cld
sub
dec
jmp
inc
fisttps
push
fldenv
mov
fimull
lcall
andl
das
dec
cmp
pop
and
pop
outsb
mov
and
jmp
out
cld
das
test
xchg
mov
enter
and
and
js
in
popf
sub
and
sti
aam
pop
cmc
and
sbb
arpl
adc
inc
shrl
mov
push
inc
cmpsl
push
insl
push
xor
jmp
mov
add
xor
std
xrelease
xchg
js
jo
cmpsl
and
inc
leave
sbb
adc
iret
mov
jp
les
hlt
xchg
enter
mov
call
aas
adc
jo
cmpsb
inc
inc
pop
cmc
inc
dec
arpl
add
mull
dec
imul
lret
and
ljmp
mov
outsb
test
addl
adc
pop
or
out
dec
repz
inc
pop
test
rorb
push
movsb
call
sub
mov
push
cmp
and
and
loop
push
pop
cmpsb
les
cwtl
sbb
aas
clc
gs
cmp
daa
nop
xchg
and
pushf
push
stos
and
lret
ret
push
cmpsl
push
iret
out
in
fisttpll
and
adc
add
in
sti
stos
addr16
adc
js
out
rorl
or
cmp
or
cmp
xor
and
bound
inc
mov
and
cmp
stos
loopne
and
sbb
fbld
cmp
and
xor
das
xchg
adcl
and
pop
dec
fists
mov
jbe
sbb
mov
js
add
sbb
and
push
pop
fdivs
mov
inc
or
add
sbb
push
pushf
dec
and
xchg
rorl
push
and
orb
outsb
cmpsb
add
sub
insb
nop
enter
in
lods
orl
adc
je
enter
js
rcrl
insl
inc
and
pusha
adc
mov
js
fdivs
dec
dec
and
ds
and
push
inc
mov
jg
mov
xchg
push
aas
addr16
mulb
pop
mov
jp
sub
iret
sub
ljmp
cmp
mov
or
and
push
or
lods
mov
inc
sbbb
sbb
and
xchg
aaa
insb
pop
das
and
jg
jmp
pop
and
ficomps
inc
mov
and
cli
decb
ss
test
scas
jmp
int3
and
inc
xchg
out
hlt
push
cwtl
xchg
sub
pusha
mov
shrl
rclb
lds
daa
mov
adc
and
popa
test
or
mov
sub
mov
rorl
and
or
cmp
jne
call
icebp
fistpll
frstor
dec
mov
es
push
sub
pop
and
mov
add
repnz
icebp
stos
pop
incb
lahf
xchg
sub
mov
pop
adc
lahf
sbb
jnp
mov
pop
mov
sub
addl
cwtl
and
jo
fisttpl
xor
dec
inc
andl
fisttpll
cmp
enter
shlb
sub
or
inc
dec
fistl
aaa
mov
push
mov
adc
mov
push
sbb
stos
jo
push
jno
cs
cmpsb
jmp
and
and
cmp
and
mov
inc
mov
cmp
jmp
xor
or
and
orl
push
xor
add
in
dec
dec
fisubl
jb
addl
mov
dec
dec
or
and
ja
in
cmpsb
cmp
push
sub
ss
pusha
fwait
daa
insb
sub
push
cmpsb
push
mov
jno
sarl
in
fsubs
clc
test
popa
call
and
adc
mov
gs
sti
xor
dec
mov
les
pop
dec
cmpsb
and
movl
cmp
sub
testl
out
mov
movsb
adc
mov
mov
pop
jnp
imul
and
stos
cmp
outsl
and
movsb
fildl
xchg
loope
out
lahf
or
popa
ds
push
cli
and
jp
loope
jle
mov
pop
dec
jle
sbb
push
sub
xchg
jg
xchg
ret
and
mov
loop
test
rorb
jl
fxch
and
les
push
jle
aas
mov
movl
mov
and
jns
add
inc
cmp
xchg
pop
jmp
jne
mov
and
movsl
pop
add
in
add
inc
es
and
pushf
sub
das
inc
int
ljmp
mov
pop
xor
fwait
int
add
sbb
scas
out
pop
and
outsl
loope
daa
imul
mov
popf
pushf
nop
mov
daa
xor
pop
jl
adc
in
loop
push
inc
adc
scas
ret
xchg
shll
add
xchg
aas
push
mov
jnp
imul
jg
fidivl
insb
jne
and
stos
mov
insl
in
test
adc
cs
push
cmpsl
inc
xchg
je
in
lahf
and
daa
loop
cmp
xchg
mov
dec
iret
inc
pop
push
and
add
mov
push
mov
test
pop
fildl
mov
xor
jb
cmp
inc
mov
xchg
bound
in
and
sub
inc
mov
icebp
rcr
vmovlps
js
push
inc
loop
or
jmp
mov
push
shll
inc
adc
ds
jns
shlb
test
jp
xchg
lds
jge
and
sub
call
pop
xor
ds
mov
popa
decb
cmp
dec
stc
cwtl
loop
addr16
je
fsubp
push
sub
pop
cltd
fs
psubusb
sbb
out
push
and
into
push
cld
sbb
lock
jno
add
leave
fisubs
jl
or
add
mov
and
stos
int
sub
cmp
pop
jo
inc
mov
aaa
out
sub
mov
and
sbb
sbb
mov
and
cltd
inc
aas
cmp
lods
adc
mov
fimuls
pop
shll
jnp
cltd
jae
gs
xor
or
add
dec
popa
xchg
add
and
out
jge
adc
and
xchg
push
insb
xchg
mov
and
inc
xchg
adc
test
xor
leave
and
or
sbb
int
push
mul
or
loopne
cmc
fdiv
mov
loope
cwtl
iret
dec
xchg
and
inc
push
inc
xor
cmp
pop
add
and
stc
mov
mov
or
ror
and
cmp
add
and
jl
or
and
add
clc
mov
inc
and
imul
mov
mov
add
mov
mov
and
mov
lea
inc
arpl
xchg
dec
xchg
sub
stos
les
mov
aad
cwtl
imul
in
and
add
repnz
clc
xlat
and
mov
inc
insl
adc
fisubrs
loop
dec
bound
test
and
cmpsb
inc
or
mov
arpl
faddp
and
leave
sbb
mov
pop
fcmovu
cmp
arpl
xchg
pushf
xor
int3
repz
xor
insb
and
xchg
push
pop
shll
pop
pop
inc
cltd
sub
inc
test
bound
movsl
pop
and
dec
hlt
sahf
push
lock
mov
mov
gs
outsl
int3
fwait
jno
movsl
jl
push
mov
inc
xchg
ficomps
and
fistpll
ljmp
fcompp
jns
bound
mov
or
adc
cmp
aas
out
test
rcr
and
xchg
and
xchg
imul
fbstp
rcl
mov
sub
pop
jb
mov
pop
sub
mov
comiss
mov
xor
push
out
loopne
incl
pop
or
imul
ret
xlat
mov
xor
fisttpll
and
jb
or
hlt
or
cmp
dec
popa
mov
mov
cmp
jle
jb
cld
loope
or
cltd
push
test
popa
jecxz
fwait
mov
lea
stos
in
and
add
test
dec
mov
add
faddl
popf
jmp
aaa
sub
push
sbb
sub
test
gs
enter
add
and
cmp
pushf
add
scas
and
cmp
mov
inc
and
in
push
and
mov
push
js
mov
pop
addr16
add
xchg
loope
mov
movsb
popa
mov
cs
sbb
lds
xchg
popa
adc
pop
add
sti
hlt
mov
cmp
add
adc
dec
test
test
popf
push
add
jno
add
aam
in
jns
add
negl
xchg
clc
dec
and
push
add
mov
and
daa
add
hlt
jns
pop
xchg
pushf
mul
xchg
cmpsl
std
mov
into
mov
je
iret
shrb
and
out
pop
int
ret
pop
push
and
mov
mov
das
test
and
jb
insl
inc
and
adc
and
rorl
frndint
test
loopne
das
aad
aas
popa
mov
and
or
stos
call
in
lea
scas
push
and
adc
pop
icebp
add
ds
fiaddl
popa
cwtl
xor
pop
subps
or
stos
arpl
inc
dec
test
and
jne
fcoms
xor
mov
sub
sahf
mov
push
mov
xorb
fwait
xor
adc
fdivrs
push
in
sbb
imul
rcrl
push
mov
jmp
dec
sbb
jp
shll
js
test
xor
add
push
movsb
dec
fs
cmpsl
jge
inc
fldt
stos
test
and
bound
movsb
scas
rorl
inc
in
and
adc
and
add
cmp
das
pop
repnz
test
mov
cltd
xor
add
and
push
push
or
xchg
sarb
adc
and
test
or
in
or
add
add
jge
add
add
rorb
pop
pop
dec
outsl
test
notb
mov
psraw
lret
xchg
test
shrb
xor
push
in
and
add
lods
adc
mov
fnstsw
cmpl
mov
sbb
add
loop
adc
or
dec
pusha
mov
iret
mov
add
and
mov
imul
ja
std
pop
mov
icebp
fcoml
and
jae
jle
arpl
jne
inc
inc
adc
sub
mov
dec
std
out
and
out
push
pop
movsl
mov
repz
jbe
and
les
shlb
pop
dec
lret
cmp
sub
hlt
and
xchg
cmpsb
pop
push
aad
mov
add
gs
or
inc
jbe
jb
ret
cli
jno
mov
jne
insl
or
adc
xchg
call
out
and
in
popa
out
into
lds
and
cwtl
out
scas
pop
test
mov
add
loope
lret
out
scas
std
ljmp
xchg
loope
jns
ret
insb
cmp
pop
mov
dec
shl
pushf
xchg
jp
in
fldt
sbb
and
push
xchg
push
sar
xchg
xchg
mov
stos
popf
and
mov
mov
ret
outsb
sub
mov
pop
inc
fsubs
out
xchg
out
fidivs
jns
mov
test
push
dec
inc
outsl
cwtl
mov
push
dec
out
movsb
imul
inc
hlt
in
cmp
pop
rclb
lods
mov
imulb
daa
push
imull
sbb
out
or
stos
sub
mov
lret
mov
int3
adc
and
push
dec
sbb
fists
jecxz
mov
arpl
and
pop
outsl
jbe
pop
and
mov
push
cmp
in
push
and
pop
lods
or
sbb
adc
ret
cmc
and
imul
and
sahf
scas
sbb
jno
lcall
cmc
jle
into
and
xchg
sbb
int
and
int3
daa
popa
mov
and
loopne
pop
aaa
popa
cmc
jnp
xchg
pop
and
ljmp
push
fidivrl
shll
xchg
or
insl
ret
sbb
jno
dec
pop
mov
insb
or
xor
popf
repz
inc
loope
adc
fwait
xor
xlat
popa
sbb
mov
cmpl
faddl
push
je
cmp
and
sbb
dec
in
and
sti
add
xchg
sahf
or
pop
lahf
mov
jmp
add
xchg
fwait
inc
orl
xlat
push
movsb
sub
sarl
cmp
and
enter
adc
inc
and
fmul
adc
inc
pop
mov
push
push
sbbl
or
jnp
insb
in
jne
xchg
fs
mov
cmc
test
out
pop
adcl
das
movsl
mov
loope
inc
push
pop
mov
sbb
mov
mov
cwtl
fldcw
or
xchg
pop
pop
and
inc
xlat
and
jg
aam
push
push
and
dec
negb
cmp
xchg
or
adc
popa
jmp
int3
inc
and
cmpsb
mov
fadds
and
xor
clc
jle
in
divb
pop
xor
cmpsl
cmp
daa
mov
xchg
popa
mov
cmp
xor
notl
add
and
adcb
ret
and
mov
mov
mov
popf
or
jp
push
adc
mov
stos
dec
jb
js
sub
cltd
jns
xchg
mov
shlb
fstpl
test
fnstenv
xor
and
cwtl
les
mov
xchg
dec
inc
ret
mov
imul
pusha
and
add
sub
xchg
into
aas
jns
mov
jge
mov
dec
popa
stos
imul
movsb
mov
stos
mov
dec
xchg
add
and
or
lret
pop
adc
pop
out
cltd
out
mov
mov
in
jns
stos
in
and
repz
sbb
push
push
ret
cltd
pop
lea
cmp
or
jnp
xor
push
xchg
push
aaa
mov
test
movsb
jle
jg
sub
je
inc
cmc
loope
or
adc
movsb
pop
aaa
icebp
lock
pushf
mov
and
mov
and
hlt
sahf
mov
sub
push
sub
dec
jno
imulb
enter
push
xchg
aam
add
dec
mov
sub
cmp
push
lcall
dec
mov
dec
imul
sub
pop
cmpsl
jne
movsb
lcall
arpl
jle
popf
jp
lods
fwait
pop
and
xchg
sti
mov
pop
mov
ret
and
dec
divb
adc
and
xchg
movsb
fildl
test
or
jnp
and
push
pushl
cmp
mov
int3
stos
add
push
jmp
mov
mov
in
popf
les
mov
xor
jge
and
pop
mov
repnz
adc
xor
xor
and
cmc
xchg
pushf
sti
shll
enter
xor
inc
movsl
mov
mov
data16
pop
ds
sbb
jns
loopne
bound
pop
aaa
aad
ljmp
jb
pop
xchg
inc
fisubs
lcall
sbb
lret
fsts
dec
dec
popf
push
negl
jne
xchg
call
insb
and
pop
xor
sub
fimull
jns
ljmp
fists
and
repz
xchg
les
push
and
mov
push
and
xor
add
sarl
rcrl
lods
xchg
jbe
ja
daa
xchg
hlt
test
mov
or
and
call
aas
jnp
jae
adc
das
xor
inc
dec
ljmp
mov
shr
loopne
sub
sub
orl
jg
js
int
xor
or
inc
add
xchg
scas
jno
inc
jmp
daa
mov
jns
in
stos
mov
xor
int3
ss
es
mov
pusha
js
loopne
push
loope
aaa
in
lret
add
int3
sub
xor
and
pushf
cmp
cmpsb
sbb
and
add
iret
fisubl
lgs
cli
fadds
fsub
je
fwait
push
mov
push
shl
mov
imul
push
das
lods
add
and
outsl
fnstsw
lret
or
push
lock
repz
xor
pop
dec
jne
mov
add
test
pop
addr16
in
pushf
and
xchg
lods
xor
loopne
and
mov
leave
push
or
fisubl
inc
xchg
xchg
jge
rcll
and
mov
cmpsb
push
mov
addr16
mov
scas
xchg
int
push
scas
lret
sbb
xor
xchg
sub
mov
xchg
jne
mov
popa
or
inc
pop
mov
mov
fs
inc
ljmp
mov
xchg
or
and
ja
cld
mov
xor
xor
adc
lret
movsb
jnp
outsl
and
into
js
enter
and
cmp
repz
sub
xchg
mov
xchg
daa
adc
jno
pusha
mov
cwtl
fwait
dec
xchg
adc
dec
rorb
movq
cltd
xor
fidivrl
mov
push
adc
and
or
jge
loope
dec
adc
mov
daa
and
jg
imul
mov
mov
mov
mov
outsl
bound
add
and
sbb
jmp
push
gs
dec
fstps
jae
loop
scas
and
imul
xor
inc
mov
add
cmp
xor
test
sbb
popa
cmp
and
call
mov
jp
sub
repz
movsb
cmp
jbe
mov
insl
repz
mov
inc
cli
mov
adc
adcl
fmulp
fldenv
out
imul
or
xchg
nop
sub
shll
scas
pop
movsl
clc
cmpsl
push
repnz
jmp
sahf
sbb
data16
outsb
mov
das
sub
mov
fiaddl
sarb
or
lods
and
dec
sbb
lret
lahf
mov
and
popf
scas
in
and
lret
or
js
pop
push
and
xchg
int3
mov
mov
ret
mov
movsbl
mov
or
jbe
aaa
and
mov
fs
insl
jle
ja
das
inc
xchg
hlt
andl
jae
cltd
and
pop
aas
or
cmpsl
cmp
mov
mov
lea
mov
test
stos
dec
loopne
movsb
fnstenv
ret
popa
sbb
push
xchg
push
inc
scas
mov
scas
sarl
call
fimuls
xor
out
sbb
and
lcall
je
ret
sub
or
xor
mov
popa
aaa
test
ret
subb
sub
adc
dec
push
jecxz
inc
and
dec
xchg
cmp
xchg
ds
mov
mov
add
jmp
adc
add
addr16
js
sbb
outsb
incl
shll
mov
and
dec
jle
dec
rolb
aam
out
inc
or
and
sarb
cmpl
fisubl
shll
mov
xchg
mov
aam
popa
jns
pop
insl
stos
jno
push
cli
and
cwtl
dec
or
adc
mov
push
call
test
xchg
shll
pop
dec
out
dec
jg
and
loop
movsb
add
inc
xchg
cmp
xor
jmp
and
add
add
or
idivl
fisttps
popa
ficoms
shll
add
inc
jg
test
add
and
cmp
and
sbb
push
ret
arpl
jmp
fcompl
mov
cmp
xor
stos
aam
sbb
sub
push
and
sbb
nop
lods
mov
inc
jbe
jmp
dec
xchg
iret
and
inc
outsl
adc
ret
aas
aad
xor
and
in
mov
popf
rcr
ss
adc
lcall
lret
and
adc
sub
movsb
ss
xor
popa
lret
je
rclb
dec
cmpsb
jle
mov
ljmp
mov
test
andl
call
sti
cmp
adc
add
xchg
push
mov
fwait
push
jp
inc
lds
mov
cmp
nop/reserved
xchg
adc
and
stc
mov
mov
mov
cmp
xorb
test
pushf
xchg
popa
xor
dec
in
sub
std
fisttpll
cmpl
das
add
fidivrs
bound
push
popa
dec
adc
addr16
repnz
pop
cs
cmpsl
add
pop
or
stos
mov
and
pop
loopne
loopne
pop
pop
and
stos
sbb
or
dec
cmp
sub
insl
shll
insb
lea
cli
xchg
lock
push
mov
mov
add
xlat
scas
loope
ljmp
push
sahf
not
cmc
leave
add
mov
sbb
stc
xlat
mov
and
ja
scas
pand
xor
aaa
rorl
add
cmp
outsl
xor
xchg
jge
mov
movsb
pop
cltd
insl
xchg
stc
dec
int
adc
popf
dec
and
int3
hlt
xor
iret
jge
and
fs
ljmp
adc
or
cmp
xor
mov
xchg
test
and
jne
mov
test
and
push
inc
cmpsl
or
jno
dec
mov
repnz
pop
push
aad
mov
loope
and
adc
scas
cld
hlt
inc
shll
push
fs
lods
out
inc
jmp
stos
sbb
mov
and
pop
das
jg
and
and
mov
or
xchg
enter
and
and
filds
and
mov
gs
pop
and
das
popf
inc
ds
pop
push
mov
pop
lods
sbb
fwait
cmp
pop
and
lea
ja
xor
and
rcrl
jecxz,pt
cmp
and
pop
test
loope
or
sbbb
repz
in
sbb
sub
pop
mov
push
test
stos
mov
imul
jecxz
cmp
and
mov
cs
inc
mov
inc
push
sbbl
popa
push
jnp
cs
and
data16
into
scas
movsb
fsubrs
add
popa
jno
dec
xor
xchg
cli
ljmp
xchg
pop
sahf
push
js
and
insb
fs
mov
or
movsl
mov
sbbb
daa
pop
std
cmp
jbe
call
and
jnp
pop
mov
outsb
xorl
test
cltd
xchg
push
and
int3
sub
out
adc
add
fnstenv
jge
movsb
xchg
sbb
int3
push
cmp
pop
mov
sbbb
enter
and
adc
test
shlb
push
inc
js
sbb
sbb
outsl
xchg
jb
mov
mov
ds
movsb
mov
sub
cmp
stos
sbb
outsl
add
sarl
jns
jno
jo
fmul
movsb
ss
and
mov
pop
and
sti
sbb
and
cmpsb
out
fsub
movsb
pop
fs
and
loope
and
and
jnp
jle
mov
mov
in
aam
mov
mov
icebp
jb,pt
lret
mov
mov
and
mov
adc
fisubrs
pop
inc
inc
lods
cmp
pop
std
mov
mov
decl
or
dec
or
inc
cmpl
out
js
xor
aad
cltd
stos
dec
imul
or
js
loop
mov
pusha
decl
hlt
and
enter
dec
cld
shrb
mov
and
pop
sub
je
loope
int
ds
xor
ss
mov
fadd
push
jmp
pop
sbb
adc
xor
outsb
cmp
sub
fsubl
xchg
sub
aad
xchg
cmpsb
sahf
pop
inc
mov
sub
pop
subl
and
out
jg
leave
xor
sbb
lret
out
inc
cld
cltd
out
imul
xor
sub
adcl
stos
xchg
shll
sbb
and
cld
jg
sub
jns,pn
subl
inc
sbb
lds
ret
mov
ja
mov
adc
dec
add
fsubs
push
out
jle
cmp
sbb
sbb
add
icebp
test
sub
pop
lret
and
adc
or
fnstenv
or
repz
loope
inc
jbe
push
xchg
movsl
mov
sub
nop
add
shlb
cmp
xor
insl
inc
cltd
std
and
add
jl
int3
loop
mov
dec
mov
mov
stos
leave
and
mov
icebp
mov
xlat
sub
xchg
mov
aam
fistl
mov
out
jle
test
fsubrs
or
bound
in
sbb
mov
dec
xor
jbe
shll
mov
cmp
pop
int
test
neg
aaa
jge
and
leave
in
movsl
and
add
cli
and
aam
data16
cmpsb
sbb
aam
push
adc
fdivrs
bt
pop
imul
jb
xchg
pop
inc
lea
and
inc
xchg
adc
add
mov
enter
jnp
inc
jne
adc
mov
or
xor
int3
andl
js
jns
jle
or
xor
add
shll
jne
shl
pop
out
sub
int3
mov
daa
divb
fwait
mov
aad
cmp
repnz
adc
lds
push
popf
push
pop
add
or
sub
mov
cli
movsb
fwait
icebp
mov
xor
push
into
mov
jno
cmp
xchg
dec
cmpsb
in
mov
and
mov
sti
xor
sbb
lods
adc
jle
popa
test
test
mov
xor
std
lret
xorl
or
shll
pop
jno
das
mov
and
mov
pop
subl
jo
cmp
and
or
lock
lea
pushf
inc
or
lret
inc
xchg
pop
daa
or
out
int
xor
jge
mov
mov
fbld
push
and
inc
test
dec
adcl
and
mov
test
xchg
lret
or
xchg
repz
and
adc
mov
mov
and
xchg
in
addr16
xchg
fsubl
push
sub
push
mov
and
and
pop
cltd
and
sbb
and
jmp
push
fisttpll
inc
subl
pop
inc
jae
sbb
xchg
das
push
in
jne
lods
add
pop
daa
and
sbb
les
pop
insb
and
lahf
mov
cmp
dec
cmp
and
push
mov
sbb
popf
xchg
aaa
movsb
push
daa
scas
mov
je
mov
or
test
mov
push
sub
dec
mov
les
and
orl
ss
popf
test
pop
xchg
stc
roll
mov
and
add
enter
and
and
adc
sub
jns
and
mov
mov
xor
loopne
inc
add
xchg
pop
outsb
pop
push
jbe
mov
cmp
xor
add
inc
mov
and
ficoms
cltd
sub
cld
jecxz
push
mov
mov
aad
cltd
xor
and
mov
movsb
and
test
in
jne
push
imul
outsb
testb
mov
out
stc
test
mull
push
jbe
and
mov
xor
or
lret
lds
inc
es
sbb
mov
cmp
ficoms
insb
outsl
movsb
pop
push
lock
sbb
lods
xor
fldenv
jl
popf
mov
and
push
sub
and
xchg
mov
xchg
out
repnz
add
sub
xor
xchg
sbb
jnp
shlb
insl
jge
popa
sarl
loop
outsb
daa
mov
in
inc
sbb
scas
lods
data16
or
sub
cmp
and
mov
dec
ret
outsb
mov
xchg
jge
fcmove
mov
aad
and
xor
and
lea
out
push
cmp
and
and
test
jp
repnz
mov
dec
mov
adc
push
sub
cmp
popa
clc
repnz
dec
out
add
inc
nop
roll
out
stos
and
scas
xchg
sub
mov
sub
dec
movsb
pop
sbbl
popa
and
push
and
xor
jnp
and
xchg
dec
inc
mov
scas
cwtl
xchg
and
popa
dec
pop
mov
and
mov
mov
and
pop
in
scas
test
xor
and
or
movsb
lcall
repnz
adc
cmp
insl
outsl
scas
add
pop
adc
push
pushf
lret
push
dec
push
and
movsl
jp
fidivrs
pop
jbe
cltd
cmpsl
and
lret
xlat
inc
hlt
call
inc
aas
scas
jp
popa
shrb
pushf
scas
lret
test
xchg
aas
jno,pn
xchg
insb
xor
jmp
xchg
cmpsb
cmp
or
lcall
and
sbb
ret
sbb
xor
dec
cmpl
clc
outsb
push
fdivs
frstor
mov
cwtl
cmp
std
fsubl
mov
cmp
fisubrs
jne
sub
xchg
clc
seto
cmp
stc
dec
mov
fisubrl
mov
sub
xchg
sub
ljmp
xchg
push
mov
fidivrl
mov
push
cmp
jnp
enter
add
rdtsc
rcl
pop
loop
mov
aam
sub
lds
repz
cmp
daa
pop
xchg
and
movsl
adc
mov
adc
mov
and
in
mov
xchg
and
adc
and
mov
bound
outsl
test
sbb
hlt
dec
mov
xor
inc
nop
xlat
dec
mov
loop
movsb
mov
enter
in
and
out
cmp
and
lock
adc
les
push
into
iret
and
mov
lcall
bound
jg
ret
xchg
lods
mov
sbb
movsl
cli
pop
and
iret
or
xchg
mov
pop
mov
testl
push
inc
imul
sub
and
stos
jno
pop
movsb
mov
mov
lods
enter
andl
and
mov
movsl
rcll
and
mov
cs
mov
stc
out
ds
cmp
sbbb
imul
ret
xor
add
and
jle
sub
mov
fdiv
dec
mov
and
push
or
scas
mov
mov
push
iret
jne
xchg
mov
movb
jno
nop
xor
mov
pop
mov
mov
push
and
jbe
push
jge
xchg
xchg
and
cwtl
in
enter
xor
inc
mov
xorl
shlb
jne
aam
filds
push
aaa
cmp
ja
inc
sub
stc
shlb
imul
inc
movsb
mov
xchg
or
add
pop
aaa
sub
fisubl
es
xor
out
cmp
cmpsl
and
insl
or
je
fxch
adc
pop
aas
jnp
ja
xchg
push
mov
addl
sub
jo
sti
dec
je
insb
jg
mov
inc
clc
jg
mov
or
jg
ret
and
sbb
and
push
or
rolb
mov
xor
dec
sahf
mov
mov
out
int
mov
fldt
mov
pop
movsl
sub
sub
mov
and
fidivs
mov
popf
imul
add
int3
xor
mov
imul
mov
je
lret
fsubs
lret
jg
jmp
and
xlat
xchg
cmp
add
mov
mov
pop
or
clc
and
ret
in
fidivs
repz
dec
cmp
fcmovnb
out
movsb
test
aad
ds
je
daa
xchg
in
jg
loope
and
out
push
arpl
jno
enter
insb
pop
cmp
out
mov
cwtl
and
movaps
pushf
mov
fdivrs
movsb
out
jo
out
scas
into
xchg
jge
mov
dec
xchg
jno
and
arpl
inc
dec
push
push
and
orl
add
ss
jp
inc
aas
adc
and
or
loopne
lock
and
repnz
adc
xor
jg
cwtl
dec
xchg
in
outsb
mov
pop
push
popa
fwait
out
shl
daa
push
lods
stos
mov
and
inc
movsb
data16
mov
aas
lret
in
jne
cmp
lret
xor
stos
shrb
mov
xchg
and
xor
and
add
imul
test
mov
out
testb
pop
sarb
insl
adc
mov
fwait
xchg
aad
pop
add
xlat
repz
outsl
insl
andnps
inc
data16
inc
mov
xchg
and
xor
add
cmp
inc
pop
lods
sub
sbb
xchg
out
ja
gs
mov
add
inc
mov
imul
popa
setle
and
mov
sbb
and
inc
mov
frstor
movsb
mov
inc
lods
imul
ss
xchg
cmp
mov
and
adc
repnz
imul
xor
xchg
or
inc
sub
sbb
push
mov
inc
push
xchg
pop
fisubs
ltr
adc
push
push
xchg
mov
mov
jle
or
adc
sub
into
popa
testl
es
and
dec
jb
nop
xchg
movsl
dec
jns
sub
sub
push
adcl
cli
fistl
pop
mov
stc
inc
or
and
adc
push
loop
pop
jne
bound
push
sub
mov
out
and
push
push
fwait
add
and
adc
xlat
and
cli
adc
and
jno
adc
lret
mov
jmp
sub
test
and
jne
and
in
daa
addr16
sub
and
cmp
pop
nop
fdivrl
xor
aas
mov
out
push
sbb
test
lcall
inc
faddl
lahf
and
mov
addr16
and
out
sbb
outsl
rcr
ja
adc
lcall
aaa
das
add
and
dec
inc
mov
dec
repnz
test
sarb
stos
call
loope
sub
imul
push
mov
cmpsl
mov
xor
pop
das
in
cli
mov
mov
inc
mov
push
push
and
sbbl
mov
mov
jne
std
int
pusha
ljmp
daa
imul
mov
mov
mov
and
ljmp
mov
in
in
leave
jne
add
add
loope
add
fimuls
mov
scas
sub
fiadds
cli
jp
test
and
arpl
sub
mov
jge
call
mov
aas
inc
xchg
cmp
and
jb
dec
pop
mov
sbb
xchg
xchg
push
aaa
out
test
add
lods
adc
push
cwtl
adc
xor
add
js
mov
sub
hlt
and
ljmp
sub
xor
and
icebp
and
push
faddl
adc
out
ljmp
out
cmp
inc
rcrb
aad
inc
xchg
leave
aas
xchg
adc
xchg
movsl
insb
and
ficoms
jl
xor
and
xor
adc
add
xlat
sarb
add
adc
in
xor
cltd
push
sub
push
je
jae
mov
sub
add
and
cmp
dec
push
andb
inc
rcrb
fwait
mov
xchg
ds
stos
mov
lret
sbb
dec
xchg
lods
and
xor
push
jne
sti
push
dec
jnp
xchg
mov
xchg
or
test
sbb
mov
push
lret
and
jo
dec
insl
das
loopne
dec
lahf
sti
jl
into
mov
movsl
push
or
fwait
dec
loop
jecxz
in
push
add
in
push
cmp
dec
add
jmp
mov
lea
mov
das
mov
jmp
sahf
and
cli
hlt
enter
push
inc
mov
cmc
fbld
jge
jecxz
or
aad
lcall
ljmp
iret
sbb
sub
inc
fildll
loop
jge
cmpsb
adc
lahf
and
xchg
adc
rorl
cmp
pushf
lcall
and
lods
xchg
inc
cwtl
pop
movsb
fisttpl
popa
pop
push
test
js
xlat
cltd
xor
stos
test
pop
inc
and
popa
leave
xor
dec
inc
loopne
xchg
jg
and
push
jmp
outsl
mov
push
pop
movsb
mov
mov
idivb
jae
and
pop
dec
sbb
jnp
out
stc
push
inc
mov
lds
leave
movsb
pop
xchg
and
or
fadds
loop
cmp
xor
test
xchg
jg
movb
adc
sbb
rcrb
das
pop
and
and
jns
xchg
mov
and
lods
into
fsts
mov
dec
mov
pop
mov
push
inc
and
adc
push
and
add
jge
ja
pop
movsl
movsb
fisubrl
nop
mov
pop
mov
sbb
lea
mov
push
int
movsl
lods
mov
lods
pop
popa
pop
jecxz
and
rol
cmpsl
mov
lock
mov
dec
xchg
pusha
test
push
jmp
shr
pushf
mov
pop
in
xor
lret
cli
xchg
inc
and
loopne
pop
repz
scas
pop
clc
mov
cli
jns
sub
mov
push
mov
data16
sub
adc
popa
jns
mov
inc
xor
cmpsb
and
rclb
lods
inc
mov
and
pop
lret
movsl
jge
sbbb
cwtl
mov
add
faddl
icebp
lea
cmp
pop
xchg
mov
repz
fwait
pusha
push
adc
xor
aaa
mov
mov
lahf
call
sub
in
hlt
push
inc
test
jne
fsubs
lea
dec
mov
arpl
stos
pop
scas
adc
inc
mov
xor
gs
js
and
pop
and
pop
popa
cmp
jmp
lret
subl
mov
cltd
jne
xor
test
dec
add
push
jno
pop
mov
movsb
mov
aaa
mov
dec
insb
push
les
sbb
shrl
ds
mov
sbb
in
mov
cmpsb
mov
mov
fildll
test
out
sub
into
icebp
and
jecxz
cs
jbe
leave
fists
sbb
test
pop
mov
and
push
jo
sub
mov
adcl
cmp
ret
ds
fwait
mov
add
jg
je
js
aad
jae
sbb
fs
das
scas
mov
mov
popa
xor
dec
dec
mov
stos
data16
inc
sti
aam
pop
mov
out
add
mov
pop
and
cmp
loop
add
out
and
mov
and
add
popa
popa
hlt
inc
sbb
mov
es
lret
cmp
and
mov
lcall
mov
movsb
pop
outsb
shll
xchg
push
pop
jns
aas
xchg
sub
loop
xorl
ss
mov
es
lea
dec
and
fimull
pop
and
push
pop
lock
mov
inc
cs
sub
in
jmp
aad
mov
test
loop
cltd
add
fldcw
xchg
ljmp
inc
imul
add
out
popa
mov
push
and
adcb
psrad
mov
aaa
sub
bndldx
sub
outsl
adc
xor
shll
inc
rcll
movsb
fbstp
insl
std
and
mov
pop
imul
rcl
pop
fsubs
mov
and
xor
xchg
repnz
popa
xchg
jns
ja
es
sub
in
cltd
sti
sub
shrl
test
xor
pusha
insb
addr16
fcmovnb
push
shlb
mov
ret
fwait
lods
and
mov
and
or
mov
mov
mov
mov
stc
sbb
into
push
and
bound
mov
and
movsb
push
popa
or
lcall
movsl
pop
pop
lds
test
cwtl
loope
subl
mov
aaa
adc
xchg
and
add
inc
sub
test
pop
cmpsb
xchg
and
popa
je
inc
and
xor
pop
movsl
mov
dec
xor
mov
cmpl
andb
inc
cld
lcall
test
push
adc
and
je
sub
and
scas
fsubl
jp
sbb
add
cmc
in
fstl
mov
jmp
into
mov
and
out
and
or
fistps
rorl
xchg
ret
imul
sti
pop
and
or
movsl
push
and
aas
mov
repnz
lea
cmp
add
sar
add
clc
fdivrl
mov
sub
setns
nop
inc
jmp
loopw
daa
and
popa
mov
push
cmpsb
dec
das
and
dec
xchg
leave
mov
add
mov
shld
cmp
pushf
arpl
inc
movsb
mov
mov
insl
lcall
mov
das
jno
in
and
mov
push
jne
push
imul
mov
repz
pop
rcl
pop
jno
xchg
popa
xor
sbb
clc
loopne
clc
xor
push
out
push
pop
and
push
jg
stos
dec
out
hlt
stc
mov
dec
outsl
xchg
aaa
mov
fwait
add
in
dec
hlt
and
add
insl
sti
and
pop
inc
loop
cmp
and
gs
dec
test
aad
ficoml
mov
xlat
aaa
sqrtps
scas
dec
js
mov
fsubrs
jnp
and
sbb
or
popf
push
rol
and
in
cmpsl
sub
and
std
and
mov
sub
add
inc
or
aad
lret
das
adc
ret
push
and
jne
dec
sub
bound
cmp
push
stos
shl
and
pop
add
mov
movsl
xchg
jns
xchg
jne
push
sub
into
and
xchg
or
lods
push
and
cmpsb
mov
lcall
loope
xchg
popa
push
jo
xor
jmp
jmp
mov
mov
int3
mov
fs
ret
or
or
pop
pop
daa
lods
mov
and
out
fs
push
inc
and
sti
xchg
cmpsb
cmpsl
cmp
lahf
in
xchg
or
jecxz
dec
pop
js
sub
out
rorl
xlat
and
test
mov
test
popf
scas
adc
add
mov
jne
scas
cmc
shlb
xchg
addl
dec
mov
mov
test
sbb
in
js
and
jmp
pop
xlat
and
fisubl
in
ret
inc
loop,pn
push
addr16
shlb
push
fbstp
xchg
negb
and
stos
cmp
in
cli
and
push
mov
sub
push
and
lret
jge
mov
mov
movsb
movsb
mov
mov
add
cmp
sbb
jmp
jo
mov
imul
sbb
jl
rorb
adcl
mov
mov
movsl
inc
gs
divl
sub
or
loop
mov
popl
divb
and
cmp
pusha
and
popa
dec
shlb
sub
in
stos
push
fsubl
xchg
xchg
pop
subl
mov
sub
and
test
and
shll
int3
std
or
jge
adc
and
cli
sub
shr
stos
hlt
push
sbb
or
test
lahf
and
stc
sbb
stos
jle
inc
xchg
aaa
and
scas
pop
mov
adc
bswap
push
lds
inc
mov
into
imul
or
jmp
dec
clc
das
mov
xor
lret
xor
out
and
imulb
push
mov
and
stos
xchg
lock
mov
add
stc
inc
flds
mov
ret
sub
cltd
xor
es
inc
add
jbe
xchg
pop
gs
xchg
push
std
mov
cli
inc
cltd
mov
and
icebp
xchg
ljmp
outsb
insl
ret
and
rorl
and
outsl
mov
or
sub
cmp
test
push
pop
xchg
popa
jno
inc
mov
out
sbb
adc
cmp
and
aas
and
aad
mov
popf
arpl
lock
test
movsb
cli
loope
cld
dec
sub
or
jnp
jae
cmpsb
sbb
jmp
sub
cmpsb
popf
or
jl
popf
xor
in
cmp
push
push
dec
jl
scas
repnz
xchg
test
inc
inc
push
mov
movsb
es
out
push
add
dec
cld
mov
clc
jp
and
mov
pop
out
mov
daa
int3
subl
outsb
cmp
add
sub
push
jo
fiadds
mov
jno
mov
xchg
andl
insb
dec
pop
dec
stos
lret
or
jb
popa
pop
jecxz
shlb
fbstp
test
ficomps
popa
mov
inc
mov
mov
cltd
xchg
stc
xchg
fs
repz
fildll
popf
mov
arpl
mov
dec
icebp
dec
daa
ja
int
sub
cmpsb
out
mov
adc
iret
or
and
es
mov
mov
adc
shll
add
xchg
imul
cmpsb
sbb
or
xlat
pusha
sub
cmp
sarl
repz
xchg
mov
push
clc
jl
int
in
sbb
idivb
pop
sub
or
add
aas
xchg
gs
aad
movsl
and
stc
rorl
cmp
dec
outsl
and
mov
cmp
ds
mov
xor
sti
adc
repnz
lods
and
movsb
push
xor
pop
adc
cld
es
lret
jnp
andb
adc
je
sub
cmp
stc
or
cmp
lret
inc
push
push
jno
xorl
inc
and
jge
mov
dec
push
mov
mov
fucomip
and
add
mov
in
xchg
xor
and
add
and
mov
jns
and
pop
bnd
pop
push
lcall
cwtl
cmp
inc
and
and
negl
mov
out
or
jno
jb
in
bound
orl
mov
mov
or
or
jbe
ds
push
and
test
loop
inc
mov
aas
sub
movsl
mov
sbb
and
rolb
add
bnd
add
inc
and
push
pop
mov
jg
push
xlat
loope
push
cmp
dec
mov
push
cwtl
leave
jmp
push
xchg
pop
sti
fldenv
icebp
aaa
stos
pop
shrl
push
mov
pop
jne
adc
mov
dec
movsb
rcl
add
fwait
inc
loopne
lret
fldz
mov
xchg
ret
bswap
jns
mov
pop
inc
jns
out
jmp
lock
cmp
sub
fldt
sbb
and
or
mov
lock
push
inc
adc
aaa
cmc
and
out
fidivrs
push
sbbl
jno
jnp
inc
pop
and
or
and
aam
les
fdivrs
outsl
inc
inc
mov
mov
test
roll
mov
jae
movsb
mov
and
lret
add
loope
and
pop
loopne
ret
jbe
ret
cmc
and
cmp
jmp
mov
pop
int
inc
mov
xchg
and
pusha
das
fisttpll
jne
cmp
cmp
adc
mov
mov
and
cmp
loopne
xchg
addr16
divb
dec
lock
arpl
js
mov
and
xor
push
xchg
clc
stos
xchg
pop
pop
push
mov
xchg
mov
pop
mov
movsb
movl
mov
jmp
loope
jnp
xchg
cmc
and
lret
and
aaa
pusha
push
lods
outsb
movsl
and
inc
test
lret
imul
cs
sti
cmc
mov
xchg
fidivrl
push
mov
push
nop
inc
mov
and
or
and
das
pop
xor
ret
and
icebp
jl
lods
inc
push
push
mov
popf
mov
add
sub
loope
lea
cs
mov
push
push
shlb
stos
push
and
divb
sbb
jp
rolb
dec
inc
adc
rorb
push
in
leave
mov
xor
nop
aaa
cmpsb
lret
push
mov
aas
in
push
or
lods
cwtl
sub
test
mov
sub
cwtl
xchg
shlb
inc
movsb
test
or
xlat
cmpsl
cmp
mov
ss
push
cmp
iret
pusha
outsl
xchg
rorl
enter
out
sub
test
pop
fnstcw
adc
mov
call
xorb
xchg
imul
jl
movsl
mov
aas
movsl
adc
popf
add
out
jbe
ja
loopne
test
lods
jmp
ror
xchg
push
push
push
xor
int3
jne,pt
add
mov
bound
popa
test
pop
mov
pushf
inc
imul
movsl
cmp
dec
hlt
adc
fistps
adc
arpl
mov
cmpsl
outsl
and
push
lahf
sbb
iret
in
dec
add
pushf
bound
add
es
jl
push
loop
out
movsl
xchg
fldt
sub
and
testb
pop
and
cmp
xchg
ljmp
idivb
daa
cmc
pop
pushf
es
add
int
adc
movsl
stos
push
lretw
and
lcall
and
andl
or
dec
js
mov
test
cmc
xchg
mov
dec
pop
jp
xchg
imull
pop
jl
les
dec
mov
inc
or
sub
pop
mov
mov
mov
pop
repnz
ret
sub
sbb
fimull
test
or
jbe
add
inc
scas
add
and
push
and
int
and
loopne
and
xchg
push
ret
pop
cmp
inc
sub
push
shlb
jae
inc
jns
test
out
and
test
cltd
arpl
pop
xor
push
sbb
call
add
jb
test
mulb
mov
ret
pop
dec
imul
push
or
enter
mov
pushf
aam
pop
iret
mov
xchg
bound
andl
and
inc
aas
dec
jmp
and
adc
les
mov
mov
fst
test
test
push
cmp
dec
lds
sbb
push
pop
rcll
imul
clc
and
inc
stc
jl
xor
and
leave
xor
movsb
sub
je
mov
bound
stos
aaa
test
enterw
mov
fistpl
sub
rolb
stos
in
adc
and
popf
inc
pop
mov
xchg
cmp
sbb
jo
push
clc
popa
in
mov
mov
pop
adcb
cmp
mov
mov
push
test
pop
push
jge
adc
and
test
movsl
inc
stos
movsb
imul
sbb
fs
and
dec
lock
adc
push
out
pop
andb
addr16
mov
and
jl
or
jb
add
aas
adc
lahf
sbb
es
inc
in
xor
and
add
mov
pop
push
pop
dec
cmp
imul
inc
and
sahf
popa
pop
xchg
clc
pop
and
scas
mov
data16
jne
or
xor
mov
pop
xor
xor
mov
push
inc
popa
in
cs
mov
int3
mov
gs
mov
ret
and
sarb
popf
imul
xor
pop
cmpsb
addb
xor
aas
sbb
jecxz
gs
popa
pop
push
in
aaa
push
loop
inc
adcb
js
xor
adc
pop
aad
cmp
sub
leave
out
fsubl
mov
cmp
push
jb
inc
add
push
inc
lock
stc
xchg
sub
push
lahf
add
out
xchg
mov
and
jno
cmp
fldenv
and
imul
loop
es
arpl
or
sahf
sub
add
inc
mov
mov
rcrl
jge
fldcw
sti
mov
dec
sub
pop
pusha
ja
pop
movsb
out
insb
jg
or
mov
jne
mov
fcom
fstpt
and
ret
shlb
lea
aaa
loope
pop
popf
in
and
pop
lahf
jbe
jns
and
andl
and
adc
xchg
inc
cmpsl
jge
pop
movsl
mov
xchg
lods
mov
insb
and
lret
je
push
add
jge
pop
push
in
fisubl
testb
and
pop
inc
in
das
cvtps2pi
fidivrl
or
test
movsb
inc
pop
push
xchg
jno
xchg
jl
and
jns
push
loope
out
test
cmp
inc
idivb
test
pop
fidivrl
mov
mov
rolb
inc
out
cmp
jmp
sub
pop
daa
mov
in
jg
aas
cmpsb
and
rorl
sub
aad
dec
dec
jmp
and
jle
inc
movsb
push
push
aad
rcl
xor
push
leave
push
je
sbb
mov
mov
call
in
outsl
xchg
xor
xchg
lock
or
sbb
jne
mov
or
daa
mov
jae
lock
call
and
sub
xchg
inc
fld
and
lcall
and
adc
js
imul
repz
ljmp
das
inc
fdivr
add
or
insl
pop
aas
or
or
insl
sbb
lahf
dec
xchg
mov
sti
sar
cli
push
test
sbb
hlt
xchg
ret
xchg
pusha
ljmp
sub
sbb
popf
jo
pushl
imul
arpl
mov
sahf
leave
push
and
push
and
ret
shr
inc
int
and
outsl
sti
sar
sub
mov
lock
scas
icebp
je
jno
mov
sub
push
lret
fcmovb
jns
and
call
out
mov
xor
mov
xlat
and
push
xchg
sub
pop
and
cmp
sbb
jp
fwait
imul
and
int
mov
jmp
jg
xchg
mov
and
clc
pop
decl
and
mov
cmp
jnp
and
sbb
and
add
jae
push
and
jbe
fcoms
mov
sub
adc
lret
inc
push
add
push
bound
xor
stos
popa
imul
lea
call
cmp
push
cmpl
xor
push
inc
in
sti
dec
and
nop
repz
ja
push
aam
jecxz
push
dec
test
rorb
or
loop
pop
mov
push
mov
lret
xor
icebp
addl
xchg
and
inc
ret
xchg
out
pop
or
xlat
stos
or
lret
and
jp
sbb
out
inc
andl
negl
sbb
frstor
push
outsl
insl
inc
popa
pop
inc
mov
xchg
adc
aad
jle
jns
hlt
testl
push
and
ficoms
outsb
add
mov
add
jle
mov
popf
pop
popa
jne
orl
dec
lret
inc
repnz
mov
sti
push
lahf
lea
adc
loope
push
loop
xchg
mov
movsl
pop
pop
int3
addl
jne
out
pop
pop
mov
scas
mov
js
inc
pusha
and
cld
and
lds
inc
inc
push
imul
jp
sbb
xor
lcall
sbb
in
mov
and
xchg
and
pop
and
add
or
xor
and
lods
icebp
dec
xchg
and
rorb
and
push
addl
loope
sub
and
pop
mov
jo
loop
out
xchg
cmpsb
adc
adc
add
and
and
fwait
push
push
mov
mov
and
and
sub
jns
xor
cltd
cmp
adcb
add
inc
mov
ror
dec
mov
loopne
and
lahf
add
and
jmp
pop
sub
js
and
outsl
jge
and
fldenv
ss
daa
and
imul
mov
sbb
mov
jae
sbb
pop
or
scas
mov
scas
cmpsb
sub
fstps
push
lock
scas
into
outsl
addr16
sahf
fbstp
and
inc
cli
leave
inc
sub
mov
pusha
stos
push
push
cmp
inc
sub
mov
add
and
sub
loope
mov
push
push
popa
mov
cmp
inc
ret
add
xadd
push
adc
xchg
cmp
stos
sbb
and
and
add
mov
mul
rol
sbb
leave
rcr
adcb
mov
stos
pop
and
add
mov
repz
and
sub
mov
dec
mov
mov
adc
add
sub
inc
imul
add
mov
cltd
adc
mov
jo
movsb
jmp
cmpb
popa
scas
ret
jge
and
push
stos
xchg
sub
add
add
sbb
call
icebp
jge
bound
xor
mov
sbb
mov
and
fistps
adc
and
cmp
int
xor
xlat
fdiv
jbe
sbb
adc
sub
add
add
dec
and
dec
and
dec
loope
or
mov
in
loop
pushf
ret
mov
lods
inc
das
xor
mov
add
jnp
lret
cmp
push
shl
mov
and
mov
and
popf
xchg
jnp
and
xor
daa
jg
out
cltd
pusha
and
in
dec
xchg
pop
push
push
dec
or
and
rcrb
mov
push
lods
sbb
mov
add
and
jecxz
in
xchg
dec
mov
and
or
lahf
or
mov
jg
leave
adc
and
sub
in
into
push
add
and
xchg
jbe
lock
repz
push
mov
repnz
cltd
and
push
mov
jno
cld
or
data16
inc
cmp
mov
mov
push
popa
adc
and
sahf
inc
mov
pushf
dec
jg
jne
push
xchg
and
xor
adc
dec
mov
jl
repz
fwait
jb
mov
and
xchg
mov
out
pop
xor
sbb
test
adc
repz
repnz
and
mov
aas
aas
andl
stos
pusha
pushf
mov
jge
pop
inc
pop
lcall
and
in
je
push
and
fsubrs
lea
shlb
sub
outsb
sahf
mov
cmp
and
push
lods
and
or
and
mov
mov
inc
in
or
push
incl
fscale
movsb
inc
rorl
jo
sbb
popf
and
adc
pop
mov
gs
repnz
cmpsl
add
and
cmc
pop
lock
fwait
das
sbb
movsb
jae
cmp
jb
or
mov
jg
andl
test
and
daa
push
sub
sbb
sub
push
lods
jecxz
dec
mov
fcom
inc
addb
mov
mov
mov
sub
jmp
jp
outsb
mov
push
sbb
or
js
mov
push
mov
sbb
and
or
and
add
fwait
and
inc
add
int3
adc
jne
test
or
mov
xchg
test
dec
push
decl
imul
jmp
pop
and
lods
cmpsb
cmp
lahf
pop
add
push
fildl
pop
les
or
pop
arpl
gs
movsb
mov
rcrl
push
js
jle
mov
call
popa
push
mov
jo
rolb
leave
adc
aas
in
mov
or
addr16
lods
jnp
xchg
std
adc
lods
stc
and
sub
movsl
or
shlb
jno
out
mov
mov
stos
nop
and
out
out
and
mov
adc
and
jb
clc
and
call
push
lock
lea
xchg
fistpl
cmp
add
lret
inc
sbb
int3
push
fwait
or
xchg
addr16
iret
xchg
imul
push
mov
adc
and
push
ja
inc
inc
jg
jge
bound
jb
mov
into
jp
add
xchg
xchg
and
test
lret
xor
xor
xchg
movsl
subl
das
fucom
adc
aas
sbb
bound
movsl
lds
test
and
shlb
loop
xchg
cmpsb
cwtl
cmp
lret
and
pop
enter
inc
adc
push
fildl
inc
sub
xchg
xchg
mov
xor
in
jp
and
js
mov
and
cmpsb
pop
push
call
popa
jbe
js
xor
clc
cltd
inc
push
ljmp
or
jp
movsb
dec
aad
inc
mov
adc
stc
sub
fs
and
cmp
add
popf
push
addr16
fsubrs
xorb
movsl
pop
sub
sub
cmp
inc
test
xor
jne
jb
sar
inc
mov
and
fsts
and
or
xchg
cmpsb
jecxz
icebp
jle
scas
jnp
shr
dec
inc
test
aaa
mov
pop
push
inc
bound
in
and
adc
and
push
sahf
outsb
inc
add
mov
mov
push
jb,pn
mov
cmp
sub
and
inc
scas
leave
and
push
xor
popf
nop
cld
and
inc
mov
xlat
add
pop
push
add
stos
sub
push
dec
jb
xor
jb
shrb
ljmp
ss
inc
dec
fcomps
pop
xor
int3
arpl
pop
stc
push
iret
das
cmc
lret
pusha
mov
mov
cld
jnp
jle
dec
cmp
lods
adc
fiaddl
pop
int3
dec
sub
mov
inc
lahf
mov
je
cli
jnp
jbe
arpl
fcomp
inc
dec
xchg
and
mov
hlt
popl
in
and
aad
pop
sti
lea
in
shr
lds
mov
test
cs
pcmpgtw
jg
push
repz
movsl
sub
mov
add
popf
mov
and
and
je
shrb
mov
sbb
and
js
and
paddusw
and
jo
loope
jmp
xchg
int
lods
fildl
loopne
and
rclb
out
fidivrs
fs
dec
repnz
cmp
fistps
fcompl
fiadds
jae
and
and
fldl2t
mov
mov
xchg
dec
push
push
sub
shrl
pop
and
add
mov
les
movb
and
das
push
or
sbb
pop
test
add
out
loope
fisttps
xor
addl
sbb
xchg
pop
push
xor
mov
and
pop
pop
inc
inc
nop
mov
fcompl
or
sbb
cmpsb
sub
dec
mov
xor
pop
cltd
and
lods
jnp
repz
lret
jbe
dec
test
ja
inc
inc
add
das
jle
pop
cli
push
sub
fldt
adc
push
inc
lock
int
fcomps
andb
xor
cltd
xchg
and
adc
jns
jae
out
scas
mov
push
inc
mov
loope
push
stc
cmpsl
inc
dec
mov
mov
xchg
jl
movsb
and
repnz
inc
sub
test
and
jns
mov
pop
data16
add
in
and
mov
and
adc
sub
les
mov
lock
mov
pop
pop
and
push
xchg
test
fisubrl
call
js
pop
movsl
mov
jl
fsubs
and
cwtl
push
push
cmp
lahf
xchg
test
orb
mov
stos
aam
sbb
loopne
test
mov
cltd
pop
call
in
in
cmpl
push
jecxz
loope
sti
sub
rcrl
add
iret
fisubs
sbb
pop
inc
push
dec
in
and
push
jle
adc
popa
sbb
fcompl
pushf
push
or
aad
insb
pop
out
ds
jno
outsb
out
into
push
jns
enter
outsl
xchg
cmp
mov
into
push
mov
in
insl
mov
dec
xor
orl
pusha
sbb
movsl
add
mov
jae
outsl
movsb
out
add
cmpsb
mov
xchg
push
mov
pop
mov
sbb
add
pop
out
sub
push
fdivrl
add
xor
xchg
ljmp
sbb
sti
loopne
movsb
sbb
enter
jne
lret
and
xchg
cmp
cmpsb
xchg
aas
movsb
push
stc
fsubs
clc
and
push
dec
sbb
xchg
stos
jmp
push
stos
shll
cmpl
mov
rclb
test
inc
icebp
out
jg
add
push
shll
push
add
scas
mov
icebp
jo
fisttpl
sbb
dec
lods
out
mov
mov
pop
push
adc
dec
jo
shlb
and
adc
out
push
push
and
dec
inc
and
pusha
and
xor
sbb
xchg
das
cld
out
push
inc
and
pop
mov
or
cld
sub
mov
mov
xchg
and
sti
inc
lods
fbld
movl
cltd
jnp
lea
mov
and
int
cs
adc
add
jae
paddd
pop
pop
push
push
insl
jnp
into
push
jg
and
inc
jno
addr16
std
fsubrp
and
jl
mov
iret
das
insl
aas
roll
xchg
ljmp
sub
mov
into
aad
shrl
pusha
fbstp
pop
js
push
or
lea
pop
movsl
and
loopne
test
push
cmp
subb
and
jg
lods
sub
cmp
cmp
push
mov
testb
shlb
jne
test
imul
pop
sub
movsl
iret
sahf
outsl
and
es
into
and
lahf
dec
daa
mov
mov
pop
test
sub
fcoml
mov
ret
sub
in
outsl
push
jl
and
xchg
lods
sbb
cmpsb
sub
dec
lds
popl
xor
ljmp
mov
inc
xor
cmp
push
pop
test
sahf
fwait
and
data16
in
xor
lds
ljmp
inc
mov
stc
sub
or
dec
adc
scas
pop
push
out
pop
mov
add
jbe
and
push
or
mov
jnp
mov
push
mov
lcall
jge
and
inc
inc
jne
movsl
fbld
sbb
jae
sub
nop
popa
imulb
pop
adc
stos
and
pop
jp
or
and
push
mov
out
clc
dec
and
mov
fiaddl
push
adc
adc
mov
jl
movsl
popf
jp
clc
repnz
sub
and
in
xor
jo
xor
sub
in
and
mov
push
arpl
sarb
rcrb
and
hlt
push
sub
xor
aas
and
popa
jge
adc
cmp
and
pop
pop
and
sub
cmpsb
push
dec
mov
sti
lea
dec
insb
and
push
add
mov
test
push
and
push
lock
or
clc
outsb
push
scas
lds
mov
enter
inc
les
and
outsl
jbe
jmp
dec
mov
push
pop
and
data16
das
or
pop
and
cmp
movsl
and
xchg
out
lret
mov
int
enter
inc
push
sub
test
lods
lahf
test
and
das
jge
shrb
xchg
shrb
push
cmp
movsb
movsl
add
int
mov
cmp
cs
sub
xchg
test
cmc
and
cmp
xchg
or
xor
jo
js
dec
xchg
jns
cmp
xchg
mov
and
cmpsb
test
sub
fbstp
in
push
mov
loopne
fbld
icebp
lods
stos
shl
and
in
rclb
xchg
movsl
sysexit
and
imul
xchg
xchg
and
dec
es
xor
out
and
or
mov
pop
mov
and
fcoms
xor
sbb
push
xchg
test
loope
ss
lock
inc
sub
call
push
insl
in
push
popa
loopne
fldenv
fwait
push
shlb
dec
xchg
and
shll
push
mov
and
wrpkru
xor
inc
cmp
and
and
pop
mov
mov
adc
outsb
xchg
mov
inc
or
out
pop
and
pushf
arpl
mov
stc
cmp
mov
xchg
add
ds
dec
popa
popf
or
loope
test
sub
add
jbe
sub
out
loopne
and
xor
or
orl
lret
inc
cmpsl
and
jg
xchg
pushf
and
mov
aam
and
fcmovb
xor
jmp
jl
and
inc
xchg
movsl
and
fdivrs
test
and
shlb
inc
sbb
dec
push
mov
mov
orl
and
sub
sub
aaa
fldenv
and
idivb
add
into
shlb
push
mov
movsl
and
push
mov
lds
test
xor
cwtl
pop
enter
xor
mov
or
and
push
mov
mov
pop
jne
imul
pop
ja
movsb
mov
xchg
jnp
jns
inc
pop
cmp
mov
repz
add
stos
movsb
mov
mov
leave
and
movsl
jne
popa
lret
cmp
pop
and
dec
or
and
sti
jbe
arpl
and
loope
sub
daa
pop
test
sbb
push
xchg
in
pop
mov
dec
pop
inc
repz
fld
insl
cli
and
mov
insb
sbb
and
push
mov
mov
and
inc
jno
fwait
sub
dec
movsb
inc
push
das
nop
sahf
sub
scas
mov
in
lahf
push
cmpsb
mov
fwait
push
and
sub
cmp
sahf
popa
daa
addr16
aam
loopne
and
add
cmc
sub
mov
fwait
mov
mov
mov
decl
int
cmp
je
pop
and
cmpsb
out
mov
xor
pop
sub
mov
xchg
cwtl
andl
sbb
fbld
inc
lcall
mov
mov
cld
sbb
xchg
xlat
mov
je
pop
dec
lahf
push
and
fildl
and
sub
jae
mov
and
imulb
popf
and
xor
inc
pop
inc
xor
clc
loop
inc
lahf
mov
ds
jle
test
push
fs
pushf
enter
cs
fmulp
cmpsb
rolb
loope
std
pop
adc
or
push
and
test
outsl
lods
imul
dec
adc
sbb
lock
mov
xchg
shrl
fdivl
xor
data16
add
pop
inc
jp
dec
push
out
and
lds
dec
pushf
loope
imul
mov
popa
push
hlt
adc
cmc
cmp
cmp
xchg
and
sbb
pop
jo
and
mov
xchg
and
mov
push
mov
bound
out
adc
xchg
leave
in
push
jae
mov
sahf
add
jp
and
cwtl
fs
fwait
and
aam
mov
inc
xchg
lahf
and
std
xor
cmp
aas
xchg
mov
xor
jg
dec
add
repz
cmpsb
ror
push
push
cs
and
ds
jb
cmp
add
movsb
mov
pop
mov
aam
fwait
or
shrb
in
int
xor
sub
arpl
cwtl
mov
and
cmp
jle
les
mov
adc
jbe
fisttps
mov
test
adc
lcall
pushf
mov
ret
lea
xchg
cmpsl
and
or
push
fidivrs
fwait
ljmp
cmc
xchg
mov
and
pop
mov
xchg
and
sbb
in
fwait
js
hlt
aaa
or
scas
cmc
add
bound
adc
pop
popf
pop
hlt
cmp
lods
stc
leave
mov
and
out
xlat
adc
mov
mov
mov
inc
lods
and
pop
and
mov
add
and
and
xchg
idiv
ret
mov
adc
add
and
inc
aaa
sub
xchg
inc
mov
sbb
int3
xor
fmuls
aad
xchg
or
mov
and
mov
jp
mov
lahf
jecxz
pop
xorl
jb
ja
out
pop
inc
out
mov
rcrl
sbb
add
in
mov
push
movsb
push
jbe
xorb
inc
jmp
inc
pop
andl
fcoml
dec
loop
sub
jne
aam
mov
jns
loope
mov
cmpb
add
ret
cli
sub
rorl
lds
not
mov
jp
into
sbb
mov
int3
dec
mov
shl
movsl
cmp
divl
das
pop
push
and
xchg
mov
jnp
arpl
jg
jle
push
insb
jp
mov
xchg
push
and
push
sbbl
xchg
insl
inc
fldcw
dec
cmpb
popf
js
iret
inc
stc
scas
cmp
mov
sti
and
pop
ret
adc
dec
mov
or
loope
cmp
enter
sbb
mov
dec
add
popa
adc
daa
call
pop
pop
lret
movsl
pushf
leave
orl
cmp
int3
and
push
insl
and
sti
lock
pop
outsb
xor
mov
in
lcall
mov
enter
xor
xlat
adc
inc
cmpsl
inc
and
pop
fcomi
jmp
add
out
jge
push
movsl
inc
aam
fldenv
lret
mov
pop
test
movsb
and
test
andb
cmp
fwait
and
xchg
bound
push
jae
das
test
sbb
and
push
and
imul
and
jecxz
mov
int
jle
xchg
popa
and
mov
jne
into
push
test
insl
dec
fisubl
decb
fldpi
sbb
mov
sub
subl
fwait
in
sub
mov
add
lcall
or
mov
int3
scas
and
sub
mov
push
push
mov
jp
and
or
mov
fcomp
and
sub
sbb
adc
pcmpeqd
xchg
icebp
mov
mov
rcll
push
and
mov
mov
mov
fwait
popa
jge
pop
addr16
and
cli
lret
loopne
cmp
xor
fwait
lea
popl
push
lds
mov
inc
mov
loop
mov
mov
or
gs
cmc
fnsave
mov
xor
pop
mov
fwait
ds
sbb
fs
push
cwtl
test
mov
mov
add
xor
popa
mov
push
push
mov
jg
adc
and
cmp
cmp
fdivrs
and
or
in
jne
in
and
mov
pop
movsb
mov
cmp
enter
push
pop
push
pop
lret
sub
jnp
mov
incl
inc
btc
sub
icebp
mov
pop
and
insl
imul
shrb
inc
daa
sahf
inc
push
dec
jns
int
and
stos
rcll
movsb
xchg
fidivs
inc
dec
lea
call
mov
lcall
imul
lahf
shll
imul
sub
and
push
icebp
into
pop
out
xchg
call
mov
add
or
cmpb
mov
arpl
inc
push
mulb
out
sbb
es
cltd
sbb
and
mov
pusha
sbb
ss
pop
inc
scas
int
popf
or
rcrb
mov
daa
pop
jne
nop
addl
test
into
inc
xchg
adc
jb
arpl
nop
dec
cmpsb
inc
movb
iret
leave
mov
movsl
and
andl
sub
push
xchg
imul
adc
mov
cmpb
test
enter
jno
imul
aad
scas
insl
push
inc
xor
and
scas
aas
adcb
in
mov
push
ja
inc
adc
cmp
popa
jne
push
and
insb
rcrl
add
mov
insl
inc
jno
xor
and
xchg
subb
and
fs
jl
loope
and
shlb
pop
pop
stos
fucomp
pop
ljmp
add
mov
cmpsl
mov
int3
inc
xchg
jbe
mov
xor
cmp
and
hlt
mov
or
xor
and
popa
imulb
addb
out
or
push
movsb
jp
add
filds
fwait
shrl
add
das
mov
daa
mov
and
pop
and
push
out
fcomp
fucomip
and
data16
bound
roll
cmp
inc
cmp
arpl
mov
sub
push
pandn
cmp
jno
push
mov
vandnpd
ja
and
inc
jne
sbb
and
push
jp
xchg
push
jbe
sbb
adcb
gs
imul
lods
adc
or
inc
test
or
ss
add
xchg
out
out
xchg
inc
mov
lods
mov
arpl
cmp
and
add
xor
cmp
in
pop
mov
in
mov
loopne
mov
hlt
and
add
pop
push
and
jne
nop
stc
leave
andb
fisubs
mov
pop
and
add
xchg
test
popa
sbb
pop
and
outsl
jp
lds
push
jnp
sub
int3
mov
gs
das
and
jae
mov
and
test
int
cld
push
js
xor
movsl
call
iret
xor
and
in
repz
popa
dec
fdivl
push
fwait
mov
xor
fstpl
add
mov
out
and
pop
psubusb
cmp
fsubl
pushf
inc
xchg
stc
and
jns
cmp
fadd
mov
pop
imulb
cmp
and
pop
pop
add
xchg
push
repnz
and
loope
es
mov
mov
filds
dec
mov
ds
leave
pop
push
push
jl
sbb
shll
mov
jns
inc
pop
xchg
mov
rcl
and
sub
and
and
out
cmp
dec
push
add
push
dec
xor
mov
or
jae
cltd
lahf
and
iret
repz
stos
and
mov
cmp
loope
mov
mov
subl
mov
mov
loop
jne
jmp
test
das
iret
push
mov
daa
cmp
aad
pop
or
int3
xchg
outsl
mov
sub
jge
cmc
dec
je
cmp
pushf
in
dec
sub
push
sub
mov
je
mov
outsb
push
cs
cmp
lahf
and
mov
scas
xor
jp
fwait
mov
inc
jg
ret
and
mov
lods
mov
dec
and
pop
adc
in
pop
lret
popa
xchg
jmp
mov
scas
cmp
filds
pop
jne
pop
jno
shrb
and
push
xchg
and
fcmovb
pushf
popa
mov
scas
out
iret
cli
outsl
inc
je
and
rcrl
imul
js
mov
mov
movsl
inc
outsl
and
aad
mov
in
xchg
popf
mulb
xchg
dec
mov
stc
xchg
sub
push
xchg
addb
cmp
fwait
adc
sbb
jnp
cmc
xchg
mov
jae
inc
lahf
imul
jmp
jo
stos
xchg
adc
adc
push
lahf
jbe,pt
cmpsb
and
data16
rcrl
push
lcall
lods
add
mov
or
std
cld
inc
insl
pop
mov
jp
iret
xor
add
mov
inc
outsb
inc
and
xor
push
xor
push
movsb
mov
clc
cmp
and
jle
addr16
jmp
and
shll
test
mov
mov
push
fidivs
movsb
xchg
jnp
pusha
js
push
mov
cmc
int
dec
out
fldt
cld
pop
jno
sub
addl
and
pop
arpl
and
loopne
jp
in
xchg
stc
lahf
dec
xor
add
xor
lods
sbbl
and
inc
adcb
shrl
lahf
xchg
dec
shlb
cmp
fnstenv
int3
jmp
sahf
cmp
pop
loop
mov
popa
bound
sub
mov
inc
jae
lock
shrl
mov
in
fcoms
imul
and
rclb
pusha
shll
aad
clc
call
iret
adc
and
sub
sub
in
add
rep
dec
cmp
mov
lahf
leave
and
in
add
rolb
pop
into
jp
and
stos
test
xor
push
adc
movsb
cmp
push
call
and
mov
pop
lret
cmpsb
push
cmp
adc
mov
mov
cmp
dec
sahf
ja
call
inc
add
repz
and
adc
movsb
xchg
mov
popf
out
fsubs
ljmp
mov
sbbl
movsb
mov
enter
addr16
push
cmp
fnstcw
inc
xchg
xor
das
nop
mov
andl
and
test
mov
mov
xchg
mov
fwait
and
pusha
clc
loop
and
or
lds
cmp
mov
lods
mov
ljmp
cmp
in
and
add
aas
xor
out
jg
rcrl
bound
push
pop
and
xchg
ret
xor
in
cmpsl
mov
sbb
fimull
sub
fbld
xchg
sahf
int3
cld
xchg
test
cmp
scas
push
out
arpl
and
cli
dec
clc
sub
lret
icebp
jp
mov
dec
fidivrl
je
jno
inc
and
rcrb
cmpsb
in
stc
and
or
shll
add
pop
jecxz
dec
aaa
lock
icebp
sbb
mov
cmp
bound
and
lock
and
fimuls
mov
xor
and
cmpsl
insl
jp
test
and
adc
add
in
mov
cltd
mov
add
mov
clc
xor
xchg
in
adc
bound
push
movsb
out
sbb
daa
cmpsb
popf
pop
stos
xchg
push
sbb
sbb
rclb
mov
ds
imul
test
ja
push
and
sbb
mov
movsl
les
inc
jge
and
test
sbb
fs
fstp
mov
xchg
cmpl
mov
mov
pop
jno
imul
pusha
adc
sbb
jmp
xor
out
push
ss
movsb
inc
adc
xchg
add
pop
daa
xchg
inc
mov
enter
ljmp
test
pop
inc
dec
xchg
in
lods
push
and
scas
xchg
and
call
lds
fbld
add
daa
adc
or
and
mull
jl
sbb
stos
add
rcr
mov
mov
aas
lock
and
clc
test
push
sub
mov
popa
into
inc
adc
mov
ja
cmp
imulb
clc
movsb
add
dec
jb
xlat
sbb
pop
fdivs
cmp
and
hlt
sbb
cmp
jg
xchg
and
sbb
add
mov
in
mov
scas
sbb
fwait
mov
movsb
repnz
das
mov
push
xchg
xchg
sub
iret
mov
lods
and
lcall
clc
and
inc
inc
push
cwtl
push
pusha
mov
popa
rcrl
jo
movsb
je
sbb
enter
and
pop
dec
notl
dec
push
mov
inc
cmpsl
mov
dec
dec
add
inc
xchg
xchg
movsl
cld
and
pop
xchg
nop
popf
and
push
addl
sti
and
jge
js
insb
test
call
mov
adc
std
dec
jae
orl
cmc
xchg
rclb
sbb
cwtl
lds
and
xchg
repnz
and
pop
int
mov
pop
ja
inc
jno
and
adc
cmp
or
cwtl
add
push
or
mov
mov
or
repz
xchg
lret
add
pop
call
sbb
addl
std
in
pop
cmp
sahf
mov
sbb
les
int3
xor
inc
dec
push
mov
jecxz
mov
add
sub
or
pop
and
mov
imul
lret
sbbb
mov
and
sbb
lret
or
je
sub
add
in
xor
lods
mov
aaa
xchg
jns
and
fldpi
cmp
jp
xchg
sub
adc
and
inc
pop
ljmp
out
push
adc
dec
and
lds
dec
inc
frstor
push
cld
pop
pop
testl
andl
cmp
loope
sbb
and
mov
dec
movsb
ret
hlt
nop
pop
fs
daa
pop
lds
es
mov
test
lea
cmc
and
ss
ret
adc
adc
and
lods
add
leave
sub
iret
out
shlb
adc
inc
mov
fadd
cmpl
push
movsl
push
scas
ffree
and
imul
sti
sbb
out
mov
sub
adcb
mov
lods
cmp
testb
jno
jns
pop
sub
xor
xchg
xlat
push
ljmp
fwait
out
and
dec
mov
mov
and
clc
jecxz
jo
and
lcall
js
std
faddl
pop
rolb
and
xchg
jne
leave
lock
xchg
cmp
shll
lea
pop
loop
test
nop
ret
mov
xorl
sbb
neg
adc
adc
xchg
stc
mov
cmpsb
fabs
clc
push
and
push
xchg
loop
stc
mov
cmpsb
cltd
cmpb
aaa
fistpll
outsb
jno
mov
push
dec
xchg
mov
outsl
fldcw
add
inc
adc
mov
sbb
aaa
lret
loope
push
xor
adc
cld
flds
bnd
ja
stc
or
push
scas
inc
inc
mov
and
gs
arpl
clc
mov
pop
in
mov
sub
aas
push
and
fcomp
sub
fiaddl
xchg
pop
and
xchg
mov
pop
push
and
push
jg
into
adc
mov
inc
lds
loop
and
push
sub
push
and
dec
xor
sbbl
and
jg
push
and
or
daa
test
add
pop
adc
pop
push
jns
jns
and
loop
cmp
and
and
hlt
popa
fwait
ds
lods
and
inc
add
pushf
loope
fbstp
sub
push
test
lods
lcall
or
xor
outsb
and
ffreep
push
and
cmc
add
and
jp
cld
lret
mov
push
arpl
test
mov
popa
xchg
xchg
enter
mov
pop
jg
and
lods
shr
dec
sub
xchg
or
mov
jae
xor
and
mov
mov
and
aaa
dec
pop
add
jle
pushl
dec
sbb
je
jbe
push
mov
xor
and
fildll
or
sub
jle
das
movsb
cltd
push
insl
xchg
test
xchg
adc
adc
out
mov
lahf
popf
and
and
stos
sar
and
das
repz
je
addl
stos
xlat
add
fs
or
push
shlb
nop
hlt
xchg
mov
and
adc
fidivl
sub
incl
jae
mov
cmpsb
sti
in
pop
sbb
popf
cmp
fldenv
repz
imul
fidivrl
and
and
cli
push
xlat
mov
xchg
add
mov
fists
pop
inc
and
test
mov
mov
lock
jb
push
inc
aas
jmp
jmp
into
dec
cmp
dec
jecxz
aad
fwait
mov
test
fsubrp
repz
xorl
jbe
ljmp
xchg
test
daa
insl
lret
and
or
add
sarl
pop
dec
cmp
sbb
movsb
push
ljmp
out
mov
outsl
sbb
daa
into
add
int
push
imul
daa
xor
pushf
or
fisubs
out
aad
mov
mov
push
rolb
jno
push
sub
sub
nop
push
imul
pop
popa
inc
and
enter
in
add
push
or
mov
daa
pop
push
push
loopne
mov
lock
mov
jecxz
cli
das
fstps
cmp
repz
sub
xor
sti
aaa
clc
lock
scas
and
andb
lcall
das
xorl
inc
xchg
pop
sub
xchg
call
sub
mov
loopne
jmp
out
ret
mov
leave
push
inc
sub
test
add
adcl
jns
stos
leave
pop
and
std
fmull
mov
and
mov
aaa
std
imul
adc
jbe
lret
and
enter
add
jmp
aaa
das
addr16
pop
popa
lcall
adc
cmpsl
xor
and
testb
aad
int
mov
mov
mov
and
out
mov
test
and
mov
iret
cmp
in
xor
imul
out
xor
inc
jg
and
push
lds
popa
cmp
ficompl
popf
add
bound
xor
lret
sub
add
lahf
imul
push
and
std
cmp
add
adc
push
lcall
add
ja
aaa
test
sbb
fadds
inc
sbb
lods
adc
push
sbb
sub
sub
or
insl
mov
add
sbb
in
fiaddl
in
xor
and
sbb
xchg
adc
inc
xor
in
int3
pop
and
movsb
ret
cmpl
sbb
mov
jnp
jne
mov
mov
leave
mov
cmp
add
pop
repnz
jl
int
test
ret
mov
rcll
leave
adc
xor
into
int3
pop
movsl
mov
mov
lcall
or
subl
aas
test
insb
cmp
and
sti
pushl
sub
sahf
or
jne
adc
jne
das
sub
and
aam
jb
xchg
cmpsb
cwtl
inc
mov
mov
and
push
test
aad
sbb
mov
out
push
mov
fisubrl
cmpsl
dec
add
adc
mov
and
and
pop
dec
fucomi
and
push
dec
aad
mov
fbld
sub
cwtl
mov
pop
movsb
xor
adc
sbb
xor
push
mov
inc
sahf
or
in
pop
xchg
dec
cmpsb
push
idivb
outsl
jae
and
or
add
cmp
dec
inc
add
pop
pop
mov
adc
sarl
and
or
mov
mov
movsb
xchg
sahf
mov
jnp
adc
mov
jle
fiadds
sti
lods
push
sub
or
xchg
stc
jne
inc
fadds
lds
cltd
jbe
mov
sub
inc
add
xchg
and
dec
and
shl
mov
cmp
hlt
das
push
int
test
dec
jno
out
xchg
repnz
mov
rolb
and
jno
cmp
push
shl
rcr
add
fidivrs
sti
xchg
sbb
sub
and
xor
jnp
aaa
add
mov
shrl
fsub
and
jg
xor
idiv
pop
ret
jmp
cwtl
and
xchg
xchg
jo
inc
daa
xor
inc
push
mov
popa
fwait
pop
loope
mov
dec
test
addl
popa
mov
and
pop
lahf
loope
and
inc
mov
jnp
jae
xchg
pop
hlt
test
sub
int3
xchg
mov
and
or
mov
rep
popa
aad
cmp
mov
sbb
mov
dec
es
adc
and
push
je
xchg
test
and
xchg
push
cmpsb
xor
shlb
and
in
jb
rcl
push
enter
pop
bound
orl
adc
movsl
jno
pop
mov
and
inc
repnz
out
xchg
xchg
imul
and
stos
and
and
sbb
sub
popa
ljmp
xor
add
test
scas
jae
loopne
and
in
aas
xor
rcl
pop
and
mov
mov
mov
pop
cmc
jns
mov
scas
jmp
xchg
ret
ljmp
imul
jo
fdivl
ret
insl
xor
pushl
notl
ror
push
je
and
jne
movsl
mov
aaa
loopne
testl
lcall
shll
clc
mov
pushf
movsl
mov
mov
cli
push
mov
test
test
sti
jg
cs
xchg
xchg
int3
fsubrs
mov
enter
mov
movsb
sub
std
shlb
add
inc
fcomi
push
xchg
push
into
jne
and
inc
aaa
repnz
and
mov
ja
jmp
mov
sub
lahf
dec
stos
and
cmp
mov
sub
aas
popf
pop
shrb
and
sbb
inc
mov
jl
xchg
push
push
popa
clc
dec
and
lea
sub
lods
mov
sbb
push
and
push
rcrb
and
push
ficoml
mov
sub
adc
jo
out
sub
lret
dec
or
xchg
repnz
and
mov
mov
pushf
sbb
fbld
mov
and
cmpsb
rcrb
fwait
jne
xchg
fildll
ds
and
cmpsl
mov
lcall
imul
xchg
or
jbe,pn
in
xor
pop
call
out
iret
mov
and
mov
lea
mov
repnz
and
pop
fdivrs
inc
test
loop
imul
mov
mov
cmp
hlt
and
add
loopne
pop
and
mov
leave
push
scas
call
mov
adc
mov
into
xor
shrl
js
arpl
stc
pop
mov
mov
shlb
xchg
mov
jle
mov
sub
test
outsl
lock
xchg
mov
fsubrl
xchg
movsb
xorb
fmuls
add
shrl
adc
and
pusha
loop
and
outsl
sub
dec
pop
mov
mov
jge
outsb
adc
mov
sub
cltd
mov
adc
and
xor
out
push
lret
fnstcw
and
mov
pop
shlb
and
jno
in
repnz
and
jns
ljmp
lcall
repnz
popa
sti
xchg
jbe
stos
pop
mov
ds
shlb
pop
in
pop
jbe
es
cmpsb
and
lahf
scas
push
repnz
mov
mov
cli
and
mov
inc
sbb
lods
aad
data16
dec
scas
incb
das
dec
cmpsb
xchg
and
add
and
lcall
cmp
lds
imul
pop
xor
subl
or
sarl
mov
mov
movsb
jb
in
xchg
push
xor
mov
lock
xor
out
push
in
and
in
scas
push
ss
imul
adc
rorl
mov
fsubs
xor
push
mov
sub
bound
jp
sbb
pop
jbe
aaa
dec
outsl
xchg
cmp
xor
push
jmp
sbb
dec
fwait
mov
daa
cwtl
push
lds
cmp
lcall
sub
cmp
pop
sub
push
stc
xor
movsb
fists
int3
in
jns
clc
adc
push
dec
push
in
cmpl
jnp
push
aaa
js
xorl
in
or
sub
mov
loope
rcll
mov
repz
pop
pop
add
mov
rclb
mov
fdivl
sbbl
insb
and
xchg
push
mov
and
repnz
and
inc
sbb
enter
insb
mov
rolb
outsl
xchg
xor
outsb
mov
cmp
shrl
mov
std
sbb
inc
adc
shlb
inc
jo
jbe
sub
and
and
and
xlat
pop
popf
xchg
pop
lods
sbb
and
jge
inc
and
or
jae
adc
lods
and
fucomp
cmp
and
ss
cmp
mov
popa
clc
sbb
sub
jns
push
mov
sub
and
add
mulb
imul
sahf
mov
pop
gs
out
and
xor
inc
inc
xchg
arpl
or
ficoms
cmpsl
hlt
push
adc
and
dec
jnp
popa
jle
test
mov
ficoml
xchg
cmc
in
xor
push
jb
popl
mov
rcrb
dec
and
xor
pusha
sbb
popa
jl
hlt
xchg
jbe
or
mov
push
xor
sahf
inc
das
xchg
inc
mov
mov
add
and
rorb
and
in
rcrl
lcall
repz
mov
push
pop
xchg
dec
push
push
mov
out
es
and
sarb
mov
scas
dec
hlt
int3
mov
repnz
loop
xchg
cmp
inc
jns
sbb
jle
sbb
pop
aas
mov
orl
and
iret
or
jne
xchg
jg
xlat
and
and
and
inc
adc
testb
cmpsb
and
pop
cs
xchg
xlat
pusha
and
ja
mov
addr16
negb
or
dec
jmp
mov
mov
pushf
iret
mov
pop
push
push
clc
jae
mov
ja
rol
stos
jl
movsb
mov
and
add
lods
into
daa
movsb
scas
dec
mov
pop
mov
xchg
fildll
and
je
pop
xor
adc
roll
sbb
fs
adc
subl
and
ja
call
and
pushf
dec
push
in
cltd
cltd
icebp
aas
imul
cli
and
cs
ret
scas
test
ss
adc
push
push
cmp
xchg
dec
or
cmpsb
jo
outsl
push
dec
scas
push
aaa
push
je
insl
mov
movsb
xorl
in
and
push
and
and
inc
sbb
sub
and
sub
push
mov
sub
jge
sub
and
cli
pop
adc
dec
icebp
mov
and
movsl
sub
inc
or
and
out
mov
dec
das
or
jnp
xlat
and
mov
out
cmpsl
fidivrl
cmp
mov
adc
jp
adcb
and
xchg
out
jle
ficomps
aad
cltd
xchg
shlb
sub
mov
and
aam
popf
push
sub
and
pushf
imul
ss
sub
into
loopne
or
jno
ret
lcall
out
jns
fidivs
dec
and
adc
cmp
pop
mov
andb
pusha
or
shll
adc
or
mov
add
push
cmpl
inc
fsubr
push
adc
add
fimuls
lods
test
in
dec
popa
mov
cmp
and
sub
pusha
les
mov
loope
pop
insb
jge
std
adc
dec
lret
icebp
mov
mov
mov
movsl
std
mov
push
fistpl
pop
leave
and
dec
sub
pop
mov
mov
pushf
inc
outsb
xor
push
adc
xor
insl
imul
xor
add
dec
popa
jecxz
jge
in
pusha
mov
lret
icebp
cmp
xor
scas
xchg
sub
in
xchg
jge
sbb
ss
clc
cwtl
es
mov
dec
jae
push
inc
lahf
fcmovnbe
and
push
jge
adc
and
cwtl
aad
jg
push
push
mov
ljmp
aas
dec
jb
push
mov
xchg
adc
mov
pop
and
and
stos
lahf
adc
pop
sub
test
jle
xchg
cwtl
dec
sub
mov
ja
test
sub
cmp
lds
xor
adc
jnp
movsb
add
add
popf
sbb
scas
mov
or
cmp
lret
pop
xchg
pop
fwait
xchg
dec
mov
mov
and
shlb
lahf
stos
jo
push
movsb
pop
adc
aam
xchg
pop
fldt
add
ds
jmp
xor
or
shl
adc
and
jns
aad
and
ret
lods
jb
pop
stos
das
pop
std
and
pop
jns
adc
stc
shll
fs
xchg
add
mov
and
and
stc
repnz
ljmp
cmp
lahf
xchg
lock
sub
mov
xor
test
fdivl
mov
inc
out
popa
mov
icebp
shlb
inc
iret
pushf
stos
sub
popa
scas
testb
cli
and
inc
push
lcall
and
inc
push
pop
cmp
jmp
mov
movsb
stc
bound
jmp
and
jle
popa
test
insb
arpl
fs
outsb
sbb
dec
cs
and
sub
cmp
fsub
and
xor
mov
dec
pushf
cmpsl
lea
sahf
hlt
and
adc
and
outsb
popa
xchg
out
and
pop
popf
stc
mov
ret
sub
popa
mov
andl
jnp
push
out
fisubl
pop
push
cmp
stos
xlat
and
fistl
xchg
dec
fwait
inc
xor
dec
sbbl
and
jno
jmp
loope
sbb
push
fldenv
push
gs
fsubr
push
icebp
movsb
xchg
or
cs
xor
cmpsl
lahf
std
and
rorl
push
and
mov
xchg
sbb
test
test
sub
xchg
fstps
rorl
popf
adc
mov
jb
and
xchg
loope
or
movsb
sti
add
xor
subl
adc
ljmp
jnp
sbb
pop
and
cld
pop
pop
mov
push
shll
and
xlat
les
add
adc
xor
dec
gs
push
mov
les
cltd
add
stos
push
ds
add
sbb
incl
and
dec
xor
push
repz
and
jne
loopne
sub
mov
ss
mov
iret
aam
lret
add
and
stos
mov
xor
cmc
int3
mov
add
mov
cmp
fwait
movsb
shll
imul
xchg
mov
or
pop
jnp
std
adc
lods
dec
subb
fsubr
aaa
scas
jmp
mov
dec
repnz
dec
xchg
jge
and
stc
and
jb
jecxz
xlat
aaa
pop
popa
test
push
mov
pop
mov
aad
lret
sbb
arpl
es
imul
ds
mov
fwait
add
sbb
rcll
and
pop
dec
ror
cmp
sbb
and
sbb
mov
cmp
lods
pop
add
jl
ljmp
add
sbb
xchg
cmp
mov
or
and
push
and
xchg
jo
movsb
test
in
imul
and
pop
adcb
mov
and
xorl
and
lea
sahf
mov
push
and
cld
mov
pop
mov
nop
out
adc
sbb
and
inc
xchg
sbb
ja
shrb
add
faddp
popf
sti
int3
push
and
iret
movsb
lret
cwtl
je
sub
xlat
scas
rorb
in
xchg
cmc
sub
leave
pop
aas
cld
jns
cltd
and
cmp
mov
das
shr
pusha
mov
mov
sub
xchg
ja
mov
cs
fldenv
jb
adc
dec
popf
outsl
pop
lret
lods
in
mov
xchg
fadd
loop
adc
xchg
sahf
or
or
and
jmp
mov
in
add
shlb
enter
xchg
adc
and
xchg
xor
or
pop
jl
pop
outsl
inc
xorl
insl
stos
mov
push
or
mov
or
les
clc
cmpl
idivb
loopne
push
sub
mov
xchg
mulps
dec
cmp
aas
sub
sti
cmpsb
in
xchg
adc
and
jb
cmp
lcall
push
mov
shrb
and
cmc
aas
mov
movsb
jle
pop
imul
lcall
decl
ss
and
jle
out
push
sbb
and
jnp
shll
xlat
aas
mov
popa
pop
cmp
and
test
lret
xor
mov
loopne
sub
sub
enter
dec
and
jge
pop
in
adc
sub
add
xchg
pop
fcmovu
and
or
loopne
mov
add
hlt
js
jge
inc
aaa
push
popa
pop
out
jns
mov
insl
stos
sahf
and
and
add
out
xchg
jmp
imul
inc
xchg
mov
aas
sub
arpl
mov
xchg
mov
inc
cltd
mov
shl
xor
aad
and
into
and
cmp
leave
lock
lcall
adc
xchg
xor
shll
sub
sbb
dec
fwait
icebp
cltd
mov
and
mov
popf
and
pop
call
and
mov
or
mov
xor
cmc
xor
and
andl
xor
adc
loopne
aaa
and
and
call
inc
xor
pop
mov
push
push
popa
cmp
mov
sub
jo
add
popf
ljmp
mov
cmc
xchg
mov
jns
mov
inc
shl
xor
rorb
xchg
cmpsl
ja
lret
js
mov
add
jns
int
popf
mov
lds
outsb
xor
lret
mov
stc
push
popf
popa
lods
and
notl
xor
sbb
rolb
out
sbb
pop
jge
fs
mov
xlat
adc
or
and
leave
xchg
jnp
push
and
pop
inc
push
rcrl
xchg
das
mull
loopne
jecxz
testb
mov
call
jno
movsb
adc
sub
addr16
mov
and
sti
mov
mov
mov
lds
ljmp
movsl
mov
filds
lea
into
loop
push
sub
add
xchg
movsl
sub
add
cmc
int
jno
loope
sbb
popa
mov
add
inc
xchg
ret
cmc
mov
sub
imul
adc
or
push
jae
pop
popf
and
adc
fbld
popf
and
pusha
pop
fmul
and
stos
ss
loope
int
out
adc
and
mov
inc
incl
and
mov
and
add
fldcw
dec
lea
cmp
push
loope
jnp
pushf
sahf
xor
mov
in
std
inc
and
xchg
fmulp
adcl
in
movsb
fwait
xchg
pop
xor
pop
jmp
unpckhps
cltd
and
inc
in
xchg
movsb
and
cs
data16
das
and
push
push
cmpsb
inc
mov
insl
loope
push
sbb
fwait
xchg
inc
and
sub
xorb
dec
es
fwait
call
pusha
and
shr
pop
sbb
inc
and
jge
aas
test
lods
add
inc
pop
push
in
sub
loope
xchg
sbb
ret
and
fistpll
pop
andl
inc
imul
fldl
and
cs
cli
mov
push
movsb
mov
repnz
or
test
shrl
jae
loopne
cli
mov
cld
xorl
and
push
xchg
scas
add
and
test
mov
outsl
ret
mov
repz
pop
mov
and
inc
xlat
mov
or
jl
frstor
dec
or
in
daa
cmpl
and
pop
mov
mov
pop
into
sub
sti
pop
leave
subl
push
ds
sub
data16
in
out
out
cmp
pusha
loope
cld
push
mov
mov
lds
stos
mov
push
incl
and
cmp
stc
push
and
fwait
sub
fsubl
es
insl
pop
jb
and
in
movsb
lds
cmp
mov
mov
out
and
add
shl
add
inc
fnstcw
pop
jg
stos
sub
fnstsw
mov
mov
and
pop
in
iret
or
push
dec
and
pop
scas
shlb
dec
roll
and
pop
testb
icebp
outsb
in
jecxz
jns
mov
shlb
cmp
lods
dec
test
sub
sbb
mov
push
and
iret
sar
inc
scas
inc
das
xchg
in
and
loop
fldenv
and
jl
pop
cmp
xor
outsl
out
lds
cli
out
xor
dec
inc
repnz
fxch
iret
push
pop
jbe
cs
pop
sahf
out
test
and
in
xchg
scas
sbb
mov
out
ljmp
orb
mov
fcomps
inc
push
decl
lret
mov
pop
add
adc
cwtl
jb
movsl
push
push
js
test
xor
fisubs
mov
cmp
icebp
daa
fwait
cli
and
leave
ljmp
or
frstor
aas
xlat
mov
xchg
popf
sbb
mov
mov
xor
and
hlt
test
ds
insb
jge
and
rcll
aaa
ljmp
repnz
lahf
gs
sbb
out
xor
and
mov
or
jl
rcr
xor
or
pop
adc
xchg
sub
fldt
inc
and
cmpsl
cmp
jno
je
mov
es
adc
cmc
mov
pop
popf
stc
mov
sarb
adc
jno
cwtl
add
in
sbb
cmp
jns
inc
bound
and
test
cmc
in
and
fstl
xor
ret
sub
fwait
jne
orb
mov
shll
cmp
or
repz
ds
jg
cmp
movsb
clc
je
xchg
mov
aaa
jne
sub
cmpsb
or
sbb
cmp
ss
and
push
imul
push
jne
xchg
and
outsl
pop
mov
add
bound
insb
lods
jp
mov
movsl
mov
mov
sahf
and
cld
fists
rcll
repnz
insl
test
pop
in
and
shl
test
into
and
sahf
jle
jne
lret
imul
mov
and
pop
inc
popa
push
lcall
cmpsl
cmpsb
xor
fwait
dec
or
jmp
adc
cmp
mov
mov
ljmp
pop
or
aam
popa
repnz
xor
les
jl
pop
xor
push
aam
pushf
sub
std
inc
inc
testb
adc
repz
and
adc
mov
mulb
cmp
rorb
sub
aad
sub
mov
xchg
icebp
ret
fbstp
jno
and
push
mov
out
inc
daa
and
es
and
pop
xlat
aas
or
pushf
and
adc
repz
xor
mov
mov
fsubs
or
lods
push
data16
and
ja
inc
and
jle
daa
je
in
aaa
and
gs
insb
ret
sbb
ljmp
jge
push
sahf
mov
test
push
and
jecxz
and
xor
movsb
and
xor
xor
inc
jmp
dec
and
mov
fwait
jg
sbb
fldt
loopne
mov
sub
lds
rcrl
and
pop
jecxz
xchg
or
adc
inc
sahf
or
and
ja
loope
addr16
sbb
and
scas
or
or
lock
and
out
test
filds
icebp
loope
inc
mov
push
ror
and
xor
inc
fmuls
out
outsb
push
mov
inc
lea
pop
xlat
and
scas
cmp
mov
pop
xor
jno
xchg
not
movsl
das
push
jmp
std
and
clc
lea
leave
push
in
inc
xor
and
cmp
xor
insb
add
inc
fidivl
mov
cmp
jge
sub
test
fbld
mov
mov
sbbb
gs
sahf
movsb
ret
imull
mov
push
add
push
lahf
out
aas
popf
push
and
mov
lea
cmp
ljmp
mov
or
nop
test
mov
testb
xchg
jo
jns
and
push
jle
sub
pusha
jns
and
sub
and
es
pop
fldenv
and
lea
dec
out
xchg
into
pop
xchg
leave
mov
mov
adc
sub
nop
xor
cwtl
stos
and
shl
jnp
je
and
in
jbe
pop
aaa
test
xor
jl
push
adc
movsb
xchg
ljmp
and
push
push
out
add
mov
and
push
gs
mov
and
mov
iret
xor
add
out
frstor
bound
pop
inc
push
es
cltd
jbe
fimull
push
jge
mov
xchg
cmpl
pusha
add
inc
xor
or
cmc
xor
mov
mov
loop
out
and
jnp
loopne
mov
adc
lret
mov
cmp
mov
xchg
mov
jo
imul
jae
sub
and
pop
jg
std
jmp
and
or
arpl
js
test
cmp
into
testb
lret
and
xchg
jbe
addr16
das
mov
pop
mov
inc
and
mov
out
movsl
mov
sub
testb
out
mov
inc
pop
enter
adc
xchg
fs
push
mov
jbe
dec
orb
add
test
adc
jl
and
push
imul
cmpsb
cli
stos
jmp
adc
and
movsb
pop
cmp
outsl
xchg
fcoml
sbb
ljmp
testl
movsl
jl
das
dec
popa
mov
jbe
sbb
mov
shlb
pop
xchg
xorl
int
fdivr
stos
js,pt
shll
xor
pop
call
shll
push
adc
mov
xorl
pop
and
fwait
push
mov
ficomps
pusha
stc
and
push
push
ret
and
loope
lods
nop
call
mov
popa
sub
mov
jmp
inc
movsb
sbb
iret
fsubrl
xchg
add
aas
call
inc
or
rclb
andl
mov
sub
cs
mov
jmp
mov
and
rolb
mov
inc
leave
adc
mov
jnp
je
mov
outsl
add
repnz
data16
out
lret
movsb
loopne
orl
jno
mov
test
and
mov
and
mov
insb
adcb
ret
dec
bound
cmp
push
insl
sbbl
sub
push
das
pop
repz
pushf
add
cmp
push
jbe
mov
xchg
movsl
jl
int3
dec
inc
test
test
jmp
mov
push
fnstcw
mov
xor
fisttpl
jecxz
push
int3
pop
test
adc
movsb
jno
fbld
xchg
xchg
cmp
mov
inc
test
mov
jns
xor
iret
and
push
bound
ja
push
fimuls
inc
in
adc
imul
aam
and
outsl
outsb
pop
and
jmp
ret
repnz
and
pop
int3
test
rorb
push
and
loopne
aad
imul
sbb
cld
sub
or
sbb
movsb
or
dec
push
xchg
and
cmp
mov
or
pop
add
adc
fucomp
cltd
aaa
xor
pop
andl
shl
test
push
push
and
scas
pushf
dec
pop
xchg
and
adc
sub
out
and
insl
lahf
pop
dec
fwait
pushf
scas
dec
jnp
das
xchg
out
shll
inc
mov
ds
pop
hlt
adc
test
addl
mov
mov
add
sbb
inc
and
xchg
pop
mull
fildll
jne
and
push
loop
sbb
rcl
and
cld
imul
push
jns
adc
or
ja
dec
mov
imul
jg
arpl
xor
jle
test
xor
cmpsl
or
js
sbb
repnz
adc
sbb
mov
fidivrl
and
mov
andb
ret
mov
lsl
sti
jge
and
cmp
mov
scas
add
into
mov
dec
outsl
lds
and
push
enter
or
lcall
xor
in
mov
xor
add
inc
ja
popa
inc
pop
jle
and
sub
fdivs
loopne
xchg
and
and
cmpsb
inc
lcall
mov
add
and
lea
mov
cltd
jmp
movsb
icebp
adc
lods
cltd
lret
stos
and
and
pop
sub
imul
pusha
out
nop
xchg
push
and
adc
ret
sbb
hlt
and
sub
xchg
inc
and
mov
popa
push
inc
data16
jl
add
adc
lahf
in
inc
stos
inc
cmp
jns
jnp
fisttps
jo
int3
adc
leave
mov
inc
shl
fistl
lock
cltd
fcomip
add
dec
jb
cmc
mov
sbb
sti
out
stc
mov
mov
fistps
pop
mov
jg
std
bnd
and
xor
xor
mov
push
bound
cmp
cmp
lea
adcb
scas
pop
test
popa
shr
imul
in
adc
and
es
sub
or
sar
int
and
inc
jge
insb
ret
push
and
dec
data16
and
xchg
adc
sbb
inc
dec
fnstsw
test
and
dec
cltd
inc
mov
lahf
cld
xchg
shl
adc
popa
fnstsw
push
xor
push
fwait
inc
xor
or
inc
add
insl
adc
imul
cmc
into
adc
and
adc
daa
xor
mov
mov
xchg
and
pop
mov
fwait
dec
out
xchg
in
mov
sbbl
sub
scas
dec
mov
jns
shlb
cwtl
pusha
add
pushf
outsb
push
mov
sti
les
and
add
and
jge
inc
cmpsl
xor
inc
push
hlt
mov
mov
incl
mov
fisubs
sbb
pusha
mov
and
dec
shl
push
sbb
adc
loopne
sbb
and
scas
add
and
xchg
sub
and
pop
sbb
push
cwtl
push
and
testb
mov
adc
jnp
push
insb
adc
sti
and
testb
dec
and
popf
nop
je
add
dec
and
xchg
push
es
in
mov
loope
popa
inc
jge
aaa
push
fistpl
and
xchg
pop
xor
or
mov
pop
pop
mulb
stc
add
cmc
aaa
adc
pop
daa
jo
into
pop
inc
mov
or
pop
out
fdivrp
and
es
cmc
adc
inc
push
mov
adc
movsb
clc
hlt
sbb
movsb
bound
dec
mov
mov
mov
mov
popa
sahf
pop
jnp
dec
movsb
insl
pop
lods
loope
cltd
xchg
cld
inc
rolb
test
out
mov
clc
adc
jo
ret
push
test
cmpsl
push
std
sub
out
sbbb
fisttps
fadds
cltd
in
fimull
push
loope
cli
and
xchg
testl
pop
mov
xor
outsl
push
and
arpl
test
popa
or
gs
lahf
scas
int
inc
and
movsl
mov
and
test
cltd
push
js
aaa
jge
movsb
jae
sbb
les
mov
sub
dec
and
testl
push
aas
and
cli
lcall
mov
incl
pop
stos
pop
les
hlt
lcall
imul
adc
mov
das
mov
dec
mov
aas
jb
cmpsb
xor
outsl
push
andl
popa
mov
jge
in
push
jbe
or
push
addr16
icebp
mov
and
lret
jb
in
and
sub
inc
push
and
movsl
push
sub
and
push
clc
dec
and
int
or
push
js
or
sub
fbld
and
testl
in
aas
ja
push
cmp
add
push
mov
mov
adc
cli
cmp
sbb
cmpsl
dec
pop
mov
cmc
push
mov
xor
popf
sub
mov
xchg
add
lret
and
shll
sarb
adc
movsl
mov
fiaddl
mov
fs
jbe
pusha
mov
loopne
cmp
inc
add
imul
in
inc
mov
xchg
and
mov
pop
adc
fisubl
jns
movsl
dec
stos
stos
test
inc
aam
xchg
xchg
mov
repz
cmpsb
mov
imul
or
fcoml
adc
mov
ss
and
ret
stos
fsubl
enter
and
movsb
and
outsl
add
mov
popa
sbb
cwtl
inc
sub
loopne
push
mov
test
test
scas
and
movsl
xchg
push
pusha
test
inc
fiaddl
sub
cmpsb
bound
push
js
mov
stos
and
jl
pop
insl
inc
mov
test
sbb
cmp
cmp
mov
and
leave
cmpsb
push
cmp
and
jecxz
jge
std
inc
mov
mov
jae
jmp
xchg
or
and
fisubs
cld
xor
es
and
popa
lret
adc
je
jae
mov
xchg
popa
jb
cmp
xchg
sarl
popa
xchg
pop
xor
test
lahf
int
pop
cltd
and
dec
repnz
dec
push
and
add
sbb
in
inc
and
test
mov
mov
movsb
adc
or
mov
pop
push
jns
ret
adc
js
cmp
dec
into
xlat
mov
mov
mov
shlb
movsb
push
fsubrs
sahf
addl
xlat
sbb
and
sbb
jle
mov
out
xor
and
fsubrs
inc
adc
sbb
mov
and
rorb
jbe
mov
les
insl
lahf
cmp
rcrl
fisttps
mov
and
xor
and
ljmp
sahf
push
scas
mov
and
addr16
xchg
adc
jne
sub
jno
mov
fs
mov
daa
or
popa
aad
out
push
and
pop
inc
enter
inc
cld
xchg
aad
jg
mov
in
xchg
mov
rclb
xchg
andb
xchg
jns
jbe
imul
add
leave
pop
jg
pusha
push
shl
popf
pop
loopne
sbb
js
jae
pop
pop
pusha
stos
jns
and
adc
xchg
sbb
jmp
and
adc
mov
scas
dec
sarl
and
movsl
cmp
out
pushf
or
cmp
xchg
dec
and
push
jl
cmpsl
jne
sbb
adc
jo
xchg
jno
inc
and
mov
lret
mov
sbb
mov
add
adc
mov
lcall
pop
jmp
mov
mov
push
and
in
push
dec
cmp
sub
mov
fcomps
lods
xlat
xor
push
inc
adc
dec
lea
scas
jns
inc
insb
xor
stos
push
mov
xchg
and
movsl
enter
cmc
and
jb
sahf
dec
jge
fisubl
xlat
icebp
jbe
xchg
sub
and
test
pushf
in
andb
movsb
sti
xchg
ja
aas
shrb
out
mov
xchg
sbb
daa
out
add
aad
and
and
stos
add
dec
mov
sub
and
jne
and
and
lods
and
mov
pop
and
lock
lcall
add
movsl
jmp
push
ret
pop
cmc
popa
loop
mov
xchg
lcall
adc
loope
stos
out
and
pop
es
cld
pop
cs
call
mov
lds
in
test
and
cmp
scas
pop
or
aam
jns
inc
and
mov
mov
divl
imul
xchg
mov
in
jg
aam
mov
fdivr
mov
dec
inc
test
jge
pusha
inc
mov
and
lret
mov
mov
mov
imul
cmp
mov
jp
pop
mov
cmpsl
pop
mov
cmp
sbb
pop
sub
out
or
and
out
ret
int3
sub
hlt
mov
test
and
movsb
sbb
and
or
inc
dec
xor
test
jl
in
xchg
cmpsb
repz
and
adc
fmull
mov
cmp
mov
xchg
movsl
addr16
or
je
dec
inc
push
das
or
lds
pop
cmpsb
dec
dec
or
gs
adc
shrl
and
sub
fbld
adcb
pop
and
stos
mov
in
cmpb
enter
pusha
incb
fldenv
mov
xor
repz
xchg
imull
push
and
mov
inc
push
and
fs
cmp
cmp
push
sahf
mov
test
cmpsl
and
lret
sub
outsl
mov
push
mov
push
cmp
pop
test
and
inc
mov
and
sbb
and
lds
xor
sbb
jae
and
xor
adc
ret
xchg
cmp
xchg
jecxz
dec
cmp
movd
mov
inc
cs
push
xor
xor
pop
movsb
sbb
sub
cmp
inc
sti
and
xchg
rcrb
fs
adc
xlat
lods
rcll
test
ret
stos
in
movsb
inc
scas
movsb
imul
mov
sbb
mov
and
add
aas
das
push
mov
and
sbb
popf
and
or
cld
lret
scas
pop
jmp
adc
push
ret
loop
data16
lahf
sub
pop
pusha
and
aad
in
jmp
pop
enter
int3
adc
scas
popf
sbb
shll
popa
pop
mov
inc
test
in
sbb
mov
cmpsb
jae
test
jno
jmp
and
and
fcompl
mov
cwtl
xchg
or
lea
push
push
daa
add
es
xor
lea
call
and
sub
add
fildl
sub
and
mov
in
adc
jmp
es
mov
pop
or
das
and
insl
push
mov
movsb
ret
dec
clc
dec
cmp
and
inc
test
mov
test
jns
scas
cwtl
mov
xor
sti
clc
popf
les
test
fisubrs
jne
scas
pop
icebp
adc
xor
xor
scas
in
and
lcall
and
in
ret
mov
jg
xchg
test
xor
sahf
pop
xor
cmpsb
fdivl
sbb
mov
cltd
adc
and
adc
xchg
daa
push
jbe
push
mov
lret
call
mov
and
inc
mov
and
xchg
sub
and
subl
add
add
mov
jge,pn
fiaddl
dec
mov
cli
fwait
and
aad
inc
and
pop
fcomp
or
jg
sahf
js
ret
xor
insl
jge
loop
pop
sbb
in
mov
and
les
push
cmp
je
dec
xchg
fcmovne
jo
int
xor
xor
dec
jmp
dec
xchg
cwtl
inc
cmp
loope
and
and
dec
xor
rclb
fstl
and
fiaddl
and
pop
pop
cmpsb
lahf
mov
inc
jo
mov
mov
cmpl
and
and
mov
adc
in
lahf
inc
cmp
inc
and
fldt
fisubl
in
outsb
loopne
pusha
xchg
ja
insl
and
mov
inc
inc
out
fadd
seta
dec
sub
xchg
imul
or
shrb
int
push
mov
mov
in
xor
lret
cmp
lock
lret
enter
inc
bound
stos
fwait
sbb
xor
out
pusha
repnz
and
mov
jno
cmp
mov
aas
mov
mov
xchg
outsb
cltd
xchg
test
push
dec
xchg
pop
add
jb
stos
jns
fcmovnbe
sbb
xchg
int3
popa
popa
pop
cltd
subb
xor
mov
and
imul
mov
cmp
pop
imul
jno
cld
ljmp
pop
and
fiadds
dec
dec
and
incl
mov
into
call
mov
mov
cltd
mov
sbb
pop
fdiv
test
and
jbe
xlat
cmc
inc
sub
movsb
rclb
nop
cmpl
and
frstor
adcl
push
shr
fwait
mov
mov
jmp
push
in
push
scas
and
or
inc
lcall
mov
cmpsl
pusha
and
adc
movsb
and
mov
adc
mov
mov
or
jecxz
jnp
idivl
ss
leave
inc
loop
cmp
pushf
and
addr16
mov
adc
popa
jg
add
inc
int
xor
push
lea
and
inc
push
inc
mov
cmpsb
adc
pop
dec
popa
jb
insb
ficomps
and
and
adc
and
arpl
fs
sbb
mov
adc
and
and
xchg
jg
cmc
out
pop
lahf
andb
add
xor
jno
lock
idivl
inc
imul
lcall
push
adc
into
mov
or
movsl
decl
nop
inc
and
lcall
dec
cmpb
jo
aam
icebp
pop
sbb
aaa
sbb
mov
ret
xchg
lea
popf
sbb
jae
xor
cmp
push
arpl
mov
daa
pop
cmpsb
loopne
lods
shrl
pusha
dec
mov
xchg
sti
popa
lea
icebp
inc
cli
inc
xor
arpl
gs
popa
mov
test
cmp
sbb
pop
xlat
test
and
mov
mov
bound
into
xchg
sbb
and
imul
mov
mov
movsb
cltd
insb
inc
clc
mov
push
and
imul
and
inc
mov
and
xchg
fiaddl
pop
sbb
push
xor
mov
testb
mov
shlb
jmp
inc
insb
sbb
sahf
and
pop
out
add
dec
pop
mov
gs
push
aad
jge
negb
xor
rcrb
stos
xlat
arpl
push
add
repz
and
out
add
fcmovbe
aas
outsb
adc
push
or
and
bound
inc
push
daa
sub
adc
add
adc
cli
into
shlb
js
jp
and
insl
dec
das
test
lret
xchg
icebp
mov
shlb
push
xchg
sbb
loope
cld
es
pop
iret
and
push
popa
mov
lret
jno
and
mov
adc
pop
jns
and
scas
fidivs
out
mov
cmpsb
jge
mov
test
pop
mov
insl
jmp
add
into
dec
aaa
iret
inc
negl
in
and
mov
test
and
js
jge
imul
loope
and
xor
cmpb
adc
insl
and
scas
push
ja
or
outsb
lcall
pushf
mov
mov
lods
aam
mulb
popa
cmp
mov
sub
test
dec
mov
popa
and
and
pusha
lea
jns
in
cmp
inc
and
aam
jo
xorb
add
push
jecxz
movsb
sub
mov
and
and
dec
xchg
pop
pop
dec
in
scas
stc
out
lea
pop
add
mov
mov
jl
inc
dec
fnstsw
vmread
out
cmpsl
jle
and
in
imul
fwait
arpl
mov
ret
mov
or
vrcp28ps
das
add
inc
popa
ljmp
add
aas
jmp
icebp
and
std
shrl
mov
fcomi
lds
subb
fsubl
cld
lcall
add
lret
jge
daa
in
xchg
xor
jae
and
out
sbb
xchg
and
or
lock
adc
jge
and
or
push
and
pop
jecxz
movsl
es
inc
leave
push
and
rcrb
add
mov
and
sub
jns
int3
popa
lock
fmul
fiaddl
scas
jno
sbb
ror
or
sub
jle
fcoml
call
sbb
int
outsl
push
sbb
sub
pusha
and
arpl
test
jnp
pop
in
push
mov
sti
enter
mov
ficomps
icebp
cmp
or
xor
push
mov
pop
fidivs
or
std
lret
or
mov
mov
sbb
int
pop
outsl
or
daa
adc
add
xchg
dec
add
stos
arpl
cmp
cs
jo
in
add
sub
ds
rclb
cmp
cli
jmp
mov
mov
mov
ljmp
imul
lea
ss
cmc
fwait
scas
punpcklwd
lcall
arpl
bound
jno
xlat
mov
push
xor
and
add
xor
pop
xchg
inc
mov
test
xor
je
mov
jge
dec
cmp
xchg
dec
hlt
ja
push
int3
mov
inc
sbb
push
sub
stos
ss
sbb
mov
mov
popa
add
mov
sbb
dec
and
insb
int3
jg
leave
test
cmp
push
or
pop
cmp
mov
imul
sub
js
pop
pop
mov
push
xchg
sbb
test
test
lods
and
sub
filds
mov
popa
fists
cmc
dec
mov
and
pushf
push
shrl
ss
lock
les
cmp
aam
mov
test
cmpsb
jb
leave
les
push
or
or
jmp
dec
and
mov
push
cmp
push
in
or
int
cld
xchg
scas
roll
out
mov
and
push
inc
xchg
pop
sbb
add
add
fsubrl
sub
jo
inc
xlat
adcl
stc
mov
sub
cwtl
movsl
das
repnz
repz
cmp
out
and
mov
sub
leave
sbbb
fiaddl
movsl
cmp
adc
inc
mov
lods
and
div
out
and
gs
and
icebp
loop
inc
jmp
movsb
dec
cmc
cmp
cld
in
sbb
sbb
mov
pop
arpl
popa
sub
push
test
xchg
push
add
adc
or
and
cltd
mov
jg
mov
mov
push
or
int
fistpll
test
xchg
imul
and
push
jp
into
mov
mov
jne
imull
lcall
pop
dec
xor
ret
in
test
lock
insl
dec
mov
sub
mov
aas
add
out
das
roll
aad
in
sbb
mov
leave
testb
dec
inc
pop
out
inc
clc
fdivrl
and
inc
xor
lahf
xchg
pop
idivb
and
adcl
sbb
std
sahf
and
lds
les
insb
hlt
mov
mov
mov
xor
jl
push
je
mov
pushf
daa
and
test
jmp
sbb
and
push
push
in
mov
orl
pushf
and
mov
mov
sbb
das
and
jge
out
leave
sub
adc
test
out
add
inc
xchg
hlt
dec
dec
mov
fs
out
shrb
mov
in
and
in
cwtl
sbb
xor
ja
out
pop
add
xchg
push
das
lcall
and
cmp
psubq
mov
mov
pop
xchg
mov
cltd
outsl
pop
dec
mov
xchg
push
out
mov
and
and
aam
mov
dec
xchg
js
push
jl
lea
in
dec
sub
lds
lods
pop
loop
add
mov
outsb
imul
mulb
push
lahf
pop
leave
sub
sub
push
add
and
divl
mov
inc
pushl
test
in
mov
mov
xor
pop
fwait
jnp
cmp
leave
sbb
movsb
outsb
enter
lahf
subl
and
mov
mov
mov
out
adcl
popa
in
lods
jb
mov
and
bound
mov
dec
cmpsb
popa
mov
push
shlb
addb
jg
xor
jecxz
jae
test
pushf
repnz
mov
fimuls
mov
and
cmp
push
xchg
sub
jg
out
pop
clc
cmp
and
sti
xchg
dec
das
pop
sub
jns
and
je
clc
test
lock
sub
and
stos
and
mov
and
mov
xchg
pop
icebp
addl
data16
subl
mov
and
mov
adc
and
jae
pop
dec
jne
adc
jl
cmc
and
jmp
das
shrl
mov
ja
add
mov
fs
dec
and
and
jmp
leave
sbb
and
jb
add
and
enter
mov
cmp
loopne
movsb
or
fwait
xchg
and
es
out
sub
lahf
adc
cmpsl
fs
adc
enter
jl
cltd
and
testb
pop
pop
sti
mov
movsb
shl
xchg
sub
fwait
and
fs
out
pushf
nop
movsb
insl
xchg
mov
jg
and
es
and
lods
sbb
mov
push
pop
cltd
cmpsb
shll
push
jnp
mull
and
test
popa
mov
aad
lcall
pushf
dec
cmpsb
stos
test
icebp
and
scas
cmp
movsb
jne
lret
push
cmp
in
and
call
dec
movsb
sbb
lret
insl
and
push
repz
ret
pop
movsb
add
cwtl
addl
push
jmp
sub
outsb
or
test
clc
dec
movsl
sahf
xor
stos
push
ret
test
mov
lods
in
and
popf
add
and
bound
lods
lea
sub
ficoml
out
jmp
dec
lahf
movsb
cmpsb
mov
pop
lock
pusha
pop
sbb
xchg
psubq
arpl
pop
adc
add
call
dec
mov
popl
cli
sbb
mov
push
ret
add
call
inc
mov
insb
sbb
and
adc
xchg
jmp
in
or
sub
jns
pop
jl
ss
sub
add
and
jnp
enter
or
push
mov
loop
shll
cld
jo
pop
push
mov
sub
add
and
sub
jo
in
xor
inc
ja
adc
xchg
out
inc
into
or
aas
mov
and
mov
push
jp
pop
push
mov
adc
jnp
and
idivb
inc
dec
mov
pop
movsb
leave
aad
mov
imul
mov
in
loop
int
testb
and
cmp
push
outsb
loope
add
mov
mov
mov
lds
ja
out
movsl
dec
adc
sub
adc
cld
and
dec
jl
and
xor
int
hlt
lock
mov
fdiv
and
and
fbld
sbb
ds
js
fldenv
rcrl
cmp
xor
and
stc
adc
je
mov
pop
mov
xchg
rorl
clc
popa
dec
add
in
and
mov
arpl
and
push
fs
add
stos
test
jp
clc
and
mov
inc
push
push
jnp
adc
frstor
stos
xchg
scas
mov
popa
loop
and
pop
xchg
and
cs
mov
adc
or
and
inc
outsl
jecxz
or
pop
rorl
lods
and
and
or
xor
xchg
pop
lods
pop
iret
into
push
and
pop
aas
fistpl
test
xchg
or
es
enter
push
xor
lock
dec
lea
add
xchg
clc
and
movsb
inc
fildl
dec
jb
in
loopne
lahf
push
mov
or
mov
arpl
xlat
pushf
fldl
xchg
in
popa
out
cmp
je
mov
outsl
pop
rcrl
mov
push
jne,pt
mov
addb
aam
dec
adc
xchg
and
pop
fisubs
push
lock
aad
jge
stos
mov
dec
out
addl
es
xchg
jb
and
mov
and
popa
jmp
sub
lcall
aam
cltd
fs
loop
sbb
shlb
and
stos
sub
dec
cmc
push
movsb
jg
pushf
push
jl
xchg
sbb
mov
clc
std
xchg
lahf
and
faddl
xchg
pop
xor
dec
stos
shrl
test
subb
mov
xchg
mov
jne
push
out
sti
or
and
les
mov
mov
loope
shll
test
lea
sahf
and
jecxz
xchg
mov
jg
adc
xchg
and
cltd
cltd
and
adc
mov
add
gs
and
iret
fldenv
mov
mov
xchg
and
push
movntq
xor
cmp
dec
sbb
loop
push
fildl
and
out
jns
fmulp
fiaddl
sub
sbb
test
push
mov
lret
cmp
outsb
xor
or
int
xor
je
and
adc
lcall
pusha
jo
cld
xor
or
pop
and
out
into
dec
and
clc
ret
in
movsb
sbb
jmp
movsb
push
notl
xor
jp
cmp
push
fldcw
and
lods
in
dec
out
and
xor
push
sarb
mov
lahf
cli
in
lea
xchg
dec
and
adc
push
dec
and
out
clc
add
sbb
andl
fisubs
and
insl
pop
mov
jge
popf
and
movsl
cmc
pusha
mov
repz
jle
adcl
mov
mov
es
xchg
and
pushf
shll
imul
mov
and
pusha
or
popa
sbb
fwait
pop
loope
and
es
adc
push
test
push
adc
sbb
pop
scas
push
pop
sbb
pop
clc
cmp
xor
inc
ret
pop
andl
scas
sbb
xor
popa
das
inc
jbe
fucomi
adc
xlat
sti
xor
add
inc
repz
xchg
bound
add
lock
repz
and
push
pushaw
pop
sbb
sbb
es
fisubrs
push
xchg
int
dec
lcall
pop
jnp
cmp
mov
cmp
mov
jle
and
jl
mov
jecxz
pop
cwtl
and
pop
dec
scas
xor
aas
mov
sahf
and
mov
mov
push
xor
xchg
test
sub
jb
fwait
lock
lods
sbb
mov
and
mov
insl
xchg
adc
dec
jle
mov
ret
inc
out
movsb
lods
stc
arpl
sbbl
jo
push
pop
loopne
and
fisubs
in
cmp
sub
push
test
jbe
xchg
and
cld
push
movsb
aas
push
cmp
ret
xchg
dec
xchg
push
and
mov
mov
fs
iret
daa
lret
dec
mov
sbb
orl
and
xchg
jge
dec
aas
and
ja
dec
out
lret
xlat
scas
or
outsl
lods
xor
pushf
aas
repz
dec
pop
push
and
les
orl
xchg
in
add
mov
fcompl
or
aaa
jo
test
xchg
les
inc
sbb
and
adc
test
popa
pop
das
data16
nop
mov
lock
lret
adc
pop
sub
sbb
mov
sbb
fnstenv
push
jmp
sub
ljmp
out
loope
and
inc
jns
and
xor
add
fisubrl
inc
test
neg
in
jbe
addr16
and
call
jmp
push
and
jg
stc
mov
or
and
iret
mov
icebp
mov
leave
mov
adc
pop
and
mov
sub
int
neg
test
and
stc
add
loop
pop
subl
mov
push
jmp
xchg
xchg
dec
xor
jecxz
inc
xchg
imul
loope
outsb
shlb
sub
clc
ljmp
pop
sub
test
movsl
sub
lea
popf
and
mov
and
dec
mov
and
mov
mov
and
icebp
cmp
sbb
xor
mov
in
push
bound
mov
jmp
nop
int
push
mov
xor
and
mov
cmp
lock
mov
jbe
fcmovnu
scas
mov
mov
sub
push
lock
sub
hlt
push
sbb
lods
pushf
addl
pop
sub
lret
xchg
xchg
push
and
xchg
out
pop
aam
out
mov
push
cmc
inc
and
clc
repnz
lods
stc
icebp
adc
xchg
fnstcw
std
xor
xchg
and
adc
pushf
and
sub
jno
push
xchg
and
or
jnp
sub
insl
lock
adc
imul
enter
dec
scas
add
pop
and
jae
mov
cmpl
ret
and
popa
sub
cmp
imul
xchg
sahf
or
daa
inc
add
sbb
add
test
popf
pop
xor
pop
and
out
adc
hlt
repnz
rcrl
cmp
mov
mov
sbb
xor
dec
inc
jecxz
sbb
fstl
jo
std
and
xchg
ljmp
xchg
cmp
and
push
jg
fnsave
rcrb
inc
andl
sar
jmp
jbe
and
xchg
dec
mov
mov
leave
push
mov
sub
mov
and
jp
and
hlt
push
and
and
aas
inc
iret
out
cmpsb
jmp
fisttpl
dec
hlt
sub
in
mov
mov
or
fmulp
mov
sbb
pop
sub
xor
sahf
jle
cmp
adc
mov
cmp
push
aad
sbb
and
push
addr16
or
or
mov
and
and
xlat
insb
push
jno
jecxz
je
inc
and
pushl
and
mov
push
lcall
jae
add
aam
das
sub
cltd
mov
inc
fisubs
xchg
ss
loope
sub
or
mov
mov
and
pop
jp
mov
xchg
lahf
and
pop
call
and
mov
xchg
test
pop
add
popa
insl
ret
jae
jge
notb
add
dec
inc
adc
cmp
dec
push
stc
out
mov
mov
sub
popa
add
inc
sub
xchg
fsts
rol
sbb
push
es
hlt
loopne
mov
cmp
insl
call
lret
xchg
addr16
and
xor
jle
cmp
pop
pusha
cltd
and
mov
push
mov
je
adc
notl
std
jns
adc
pop
xchg
add
lock
xlat
aad
lds
sbb
xor
and
fbld
rolw
in
xchg
adc
jmp
mov
dec
mov
jno
test
cli
fdiv
and
in
test
or
or
jmp
fsubl
mov
mov
jne
push
adc
adc
lret
cli
loop
cltd
cmp
inc
outsb
insb
and
add
sub
or
daa
inc
int
sbb
jmp
sbb
pop
and
xchg
add
and
pop
pop
cmpsb
jge
into
scas
aaa
movsb
cmpsl
and
xchg
push
je
cmp
push
clc
aas
xlat
popf
out
sub
jmp
pop
and
test
jg
dec
es
int3
xor
lods
push
jo
out
aam
xor
addr16
jl
dec
xor
mov
jae
mov
popa
jge
imul
test
aas
fisubs
mov
and
andl
hlt
or
ljmp
cmp
test
les
decl
cmpsl
lods
fists
and
ret
mov
mov
xchg
dec
fsubr
sarl
lret
sub
scas
daa
mov
js
pop
cltd
jmp
push
adc
jns
mov
add
int
push
mov
stos
sbbb
popa
mov
js
and
lods
and
mov
es
movsl
or
mov
loop
movsb
mov
and
out
push
mov
mov
sub
mov
mov
xor
sub
adc
xchg
xchg
sub
sbb
scas
popf
adc
loope
fimull
jbe
stos
lret
push
push
stos
mov
lock
lds
jmp
in
jno
xor
push
stos
aas
mov
mov
into
sti
xchg
xlat
cld
lods
testl
mov
test
inc
test
mov
push
adc
aaa
pop
loope
in
pop
mov
inc
jae
sbb
mov
adc
loope
cmp
sub
jecxz
mov
jle
cmpsb
jns
cmp
sbb
scas
xchg
jg
sub
insl
out
aaa
adc
and
pop
cli
js
inc
push
pushf
outsl
lcall
loope
fsts
xor
in
arpl
cmp
cmp
sub
orb
gs
out
popa
loop
dec
mov
add
xchg
mov
lahf
xchg
xchg
mov
mov
in
cmp
pop
test
in
pop
into
sub
adc
sbb
and
and
ret
ror
xor
lcall
movsl
xchg
popa
mov
xchg
lods
dec
adc
test
aas
lcall
and
jo
cmp
and
mov
pop
ret
loop
or
shll
arpl
popf
sbb
in
outsb
sahf
push
ds
sub
or
aas
and
ss
stos
and
arpl
adc
fwait
lea
jae
and
hlt
add
out
imul
int3
mov
ret
dec
add
mov
insb
inc
xchg
jmp
cmpsb
and
gs
push
jl
mov
ret
and
popf
insl
xchg
mov
into
pusha
daa
lret
push
jno
call
and
mov
roll
push
mov
mov
fldenv
cmp
mov
and
push
aas
aaa
ja
and
mov
in
shlb
and
jl
movsb
outsb
loope
gs
lret
movsl
mov
mov
jmp
insl
loopne
mov
cmpsl
or
mov
test
mov
loopne
or
sar
movsb
inc
aaa
lahf
cmc
sub
xor
sbb
adc
leave
mov
popa
sbb
pusha
push
and
cmpsb
fdivrs
data16
ss
out
stos
clc
inc
and
and
cmp
pop
add
iret
aaa
aas
mov
pop
fisttpl
test
mov
lods
inc
jge
lds
test
cmp
xchg
jecxz
xchg
adc
imul
and
xorb
cmp
jae
sbb
out
and
jge
jnp
lahf
inc
int3
aaa
push
repnz
and
or
loopne
and
lahf
xor
xchg
mov
adc
and
loop
mov
pop
bound
and
in
dec
and
jmp
adc
mov
mov
fs
jle
and
sbb
test
sar
inc
inc
xchg
arpl
sbb
or
js
pop
push
and
pop
ds
lods
and
mov
adc
xchg
in
daa
push
and
imul
in
retw
and
movsb
sbb
jno
daa
and
add
call
and
pop
and
cmpsb
jae
push
adc
pop
add
xor
sub
and
addl
pop
in
sbb
jns
insl
xor
insl
and
push
mov
and
push
fdiv
test
and
lret
ds
cmpsl
adc
add
test
adc
sub
inc
dec
insl
imul
lret
dec
les
sub
call
xchg
and
sub
sbb
aam
bound
arpl
mov
nop
out
fwait
xor
jecxz
in
int3
xchg
mov
mov
loop
and
mov
jbe
and
dec
clc
mov
andb
movsb
cmc
xor
push
inc
out
cltd
xor
pop
pop
test
xchg
cmpsb
jb
jl
mov
shlb
hlt
push
push
cmp
test
push
js
pop
jnp
out
inc
test
sub
pop
ds
push
mov
mov
sbb
and
test
arpl
das
push
and
nop
ds
fwait
xchg
mov
fbld
adc
mov
dec
adcb
lret
mov
popa
repz
out
push
outsb
mov
out
adc
ret
push
and
pop
sub
and
shl
movsl
and
inc
mov
add
mov
mov
test
clc
stos
in
dec
insl
test
aaa
out
and
rcrb
jns
fs
iret
mov
add
das
add
andb
sbb
mov
mov
cmp
dec
and
orl
jmp
into
xor
and
imull
xor
dec
fwait
cli
andl
lret
sbb
cltd
and
or
mov
and
jl
xor
call
repz
ja
insb
mov
cmpsl
xchg
mov
or
mov
lods
cmp
pop
jg
pop
mov
sbb
mov
jb
push
xchg
sbb
xchg
ss
pop
add
mov
hlt
mov
inc
iret
gs
jmp
popf
jg
cmp
sub
xor
hlt
push
and
and
movsl
add
cmp
cmp
out
and
inc
lret
pop
mov
jp
mov
insl
and
lods
leave
out
mov
imul
scas
movsl
mov
subl
repnz
push
mov
out
push
fwait
decl
flds
push
push
in
lods
and
fcoms
xor
lret
mov
insb
sbb
mov
push
pop
call
sarb
andl
ficompl
lcall
gs
push
cmp
scas
mov
mov
clc
out
pushf
xor
insb
and
jno
enter
push
and
std
test
and
fildll
shlb
and
jno
jmp
andl
xchg
sahf
add
mov
pop
and
fmull
xchg
inc
popa
cmp
jl
aaa
xchg
push
jne
lods
loopne
cmp
mov
lret
mov
cld
push
lods
outsb
lods
les
mov
in
and
push
inc
fldcw
ljmp
mov
ret
out
stos
loope
cld
lea
sub
and
inc
rcrl
pusha
fs
sub
fisubrs
and
or
sub
movsb
push
insb
xor
xor
push
std
divl
xchg
pop
in
popa
mov
jb
sbb
cmp
xchg
incl
int3
cld
and
mov
fbstp
loopne
and
and
rorl
inc
aam
and
dec
push
mov
jge
fiadds
cmpsb
cmpsl
inc
mov
rcll
movsb
inc
xor
bnd
cmp
fbstp
and
mov
dec
mov
and
divl
loop
sbb
leave
jmp
in
subl
das
rorl
mov
push
xchg
push
and
sbb
mov
sbb
test
loopne
subb
rolb
and
cmpsl
inc
jb
adc
jns
cld
in
cmp
cmp
jp
and
cmpsl
pop
jbe
fsubrs
popa
adc
fisttpl
and
sub
in
cs
and
mov
adc
and
mov
and
mov
stc
test
cs
test
xchg
mov
xchg
cmpsl
add
or
movsl
pop
ss
pop
jnp
jns
jp
pushf
sbbb
push
stc
in
loop
push
push
sbb
pop
pop
jge
out
or
sbb
pop
dec
dec
add
inc
jge
leave
jno
movsl
add
and
out
push
repnz
add
push
xor
data16
xor
add
jmp
cmp
stc
xchg
imul
ret
xchg
mov
mov
loopne
daa
xchg
pop
mov
lods
and
shl
push
dec
mov
sub
insl
test
jbe
or
in
imul
aam
mov
mov
popa
aas
test
xor
xlat
test
add
cli
pop
mov
fnsave
ja
mov
pop
popaw
iret
lods
adc
mov
shll
dec
push
enter
and
dec
jmp
into
lods
cmp
mov
cwtl
mov
and
lahf
ljmp
or
mov
jae
fstps
or
and
sub
mov
cmp
xor
sbb
push
jecxz
jmp
xchg
jo
pushf
jl
aas
push
subl
inc
daa
push
jae
imul
push
inc
add
gs
mov
mov
or
dec
shl
xchg
jg
and
dec
jp
maskmovq
idivl
push
push
test
scas
scas
arpl
addr16
and
in
int
popa
stos
xchg
pop
inc
jle
movsb
fstpt
inc
mov
aad
sub
and
std
mov
push
push
or
std
push
in
test
in
or
rorb
sbbl
dec
pop
xor
jecxz
and
sub
mov
inc
push
inc
dec
xchg
in
fimuls
dec
mov
sbb
scas
adcb
and
iret
in
xlat
inc
jl
testb
popa
cmp
jbe
mov
mov
sub
pop
popa
iret
test
mov
fisubl
xchg
imul
jp
push
fdivrp
mov
popa
ss
or
pusha
push
sub
imul
add
pop
sub
jbe
pusha
test
fldt
mov
cmpsb
xchg
jge
adc
std
dec
sbb
fwait
and
arpl
aam
jp
inc
adc
mov
mov
ficomps
pusha
mov
jp
add
and
push
mov
and
mov
jnp
andl
out
mov
push
cmpb
inc
push
subb
sahf
lret
je
ret
popf
jb
and
and
sub
sbb
cmp
and
mov
xchg
ret
ds
rcrl
push
pushf
mov
jns
icebp
int
and
xchg
iret
xchg
jmp
add
mov
daa
repz
sub
pop
dec
sbb
inc
scas
into
dec
dec
xchg
and
hlt
inc
mov
jge
ds
sbb
fisubs
rclb
xchg
sub
lret
mov
shlb
sarb
mov
jle
and
pushf
scas
loopne
ja
loop
shld
jns
fisttpl
jns
adc
sub
or
jmp
xlat
and
sub
sti
cmpsl
xor
xor
and
jecxz
int3
add
sti
sub
xchg
cmp
inc
dec
aas
sub
and
mov
outsb
and
and
and
jnp
and
pushf
lea
jo
loop
sbb
mov
lock
and
sub
and
push
pop
inc
in
push
andb
and
test
and
lock
and
sub
ljmp
out
xchg
sub
pop
dec
push
scas
jp
dec
sub
add
sub
roll
mov
and
pop
je
and
sbb
gs
mov
repz
xchg
enter
push
test
jl
mov
inc
cmp
cmp
or
sbb
mov
rolb
jge
and
xchg
enter
pusha
and
mov
push
inc
jg
pop
mov
and
leave
push
and
popa
std
or
ret
imul
sbb
out
sub
out
fwait
sub
shld
lahf
pop
mov
xor
jno
loop
push
stos
mov
sub
dec
lahf
aaa
xor
imul
mov
mov
mov
adc
xchg
xorl
xchg
jecxz
shll
push
sub
scas
insl
pop
and
jbe
xor
cwtl
int3
shll
mov
es
aam
pop
outsl
addr16
mov
pop
fldcw
cmp
and
push
into
jge
mov
mov
scas
mov
imul
mov
pop
and
lret
fidivrs
and
mulb
popa
int3
or
xlat
js
jo
test
rcrl
pop
mov
cmpsb
add
push
nop
inc
mov
mov
mov
dec
and
jecxz
movsb
arpl
lahf
lea
data16
cmc
or
cld
fldcw
add
inc
icebp
fistpll
and
mov
pop
hlt
mov
ss
pop
mov
stos
and
mov
push
testb
or
lock
mov
sub
cmp
sahf
fwait
and
loop
ret
and
jl
and
lock
mov
aad
jns
and
and
sbb
mov
inc
movsb
jne
sub
xchg
loopne
adc
and
pop
test
ficomps
in
jno
pop
daa
and
je
mov
int
in
push
mov
adc
inc
ret
nop
cld
fidivs
xor
jbe
jo
cmp
gs
jecxz
and
adc
pop
fisubrl
movsl
xchg
xchg
add
jnp
sar
and
xorl
scas
pop
fcmovnb
and
out
daa
xchg
imul
fmull
adc
and
inc
insb
lahf
jecxz
fstpl
andl
sbb
xchg
cli
cmp
mov
jns
fisubs
pop
or
push
dec
call
jmp
add
sbb
cld
jno
mov
fidivrs
mov
xor
add
nop
cmpsb
mov
sbbb
or
sbb
clc
jne
leave
inc
and
add
push
adc
xchg
jb
fxtract
fwait
icebp
inc
movb
daa
cmpsl
or
mov
and
negb
sbb
adc
cmpsl
and
pop
sub
nop
inc
push
and
dec
jl
aad
and
dec
mov
and
mov
gs
xor
imul
jae
xor
push
jecxz
and
into
dec
push
and
adc
fwait
lods
mov
enter
mov
pop
cmp
inc
lahf
push
clc
js
ja
add
cmp
jmp
and
and
mov
les
and
stos
xor
adc
lea
xchg
cmp
pop
pop
cmp
push
idivl
es
dec
xchg
and
or
xchg
cwtl
sub
mov
mov
scas
push
bound
sahf
pop
xchg
xor
xor
mov
xor
sub
and
ffree
pop
and
inc
inc
jle
xchg
cmc
movsb
aad
repnz
mov
popa
repz
and
popa
out
mov
jns
divl
xchg
and
jo
xchg
inc
xchg
dec
mov
and
pop
dec
sbb
shlb
cmc
pop
insl
dec
scas
sub
les
mov
aas
mov
stos
adc
push
xlat
rcrl
mov
in
pushf
pop
pop
and
xchg
mov
into
sbb
roll
jae
push
movsl
clc
sti
mov
cmp
dec
mulb
pop
push
mov
and
addr16
cwtl
xchg
rorl
lods
lds
sub
gs
daa
je
in
test
mov
int
xorl
push
mov
jg
sbb
mov
cltd
lret
and
shll
jle
int
jno
test
jl
and
and
lods
out
cmp
xor
sahf
mov
dec
add
decl
cmpsb
push
cwtl
repnz
mov
popf
inc
mov
adc
and
sbb
cmp
and
shrl
mov
mov
repnz
imul
rcrb
adc
movsl
sbb
bound
addr16
xchg
xor
mov
xchg
fldenv
cmp
gs
daa
push
cltd
xor
repz
pop
dec
mov
push
mov
or
and
int
pop
xchg
sub
lcall
add
ret
imul
sti
test
fdivrl
push
and
mull
ret
dec
cli
and
shl
daa
pop
add
cwtl
popa
adcl
lods
lret
or
call
shl
aad
inc
add
lods
mov
ret
and
stc
push
ja
mov
mov
xchg
cld
pop
fisubs
lcall
mov
push
lods
mov
add
cmpsb
and
dec
pushf
imul
xor
cli
pop
cs
popf
popa
das
mov
popa
addr16
jno
sahf
and
addb
outsb
and
lret
or
sbb
mov
mov
push
mov
daa
sub
jmp
loope
and
cmpsb
out
or
mov
ficoml
mov
rcrl
sarb
push
dec
and
out
in
fidivrl
and
and
rcll
dec
mov
push
xor
jl
imul
cmpsb
add
aas
mov
lcall
sbb
jbe
aad
pop
dec
shl
sahf
push
and
mov
movsb
jl
add
pushf
pop
or
push
lock
sar
loopne
mov
or
cmpsl
sub
sub
inc
cmpl
pop
cmp
dec
pop
add
inc
push
cmovo
cmpl
and
mov
push
pop
dec
and
adc
sbb
lock
loope
jbe
add
sub
stos
xchg
cltd
fcom
mov
xchg
inc
jns
clc
bound
sbb
or
inc
test
ficoms
push
cwtl
fwait
lret
ret
and
mov
and
mov
fldenv
loop
pop
or
fistpl
cli
or
xorb
test
cmp
lret
inc
lds
test
lods
std
mov
cmp
sti
fcmovb
push
insb
movsl
mov
inc
xchg
pop
pop
scas
pop
popa
insb
push
jo
cs
and
cmp
test
int
add
or
jge
cltd
xchg
mov
cmp
ret
daa
mov
out
push
and
inc
hlt
or
and
sbb
out
repz
and
mov
icebp
jb
dec
mov
jnp
mov
push
dec
mov
and
std
xchg
mov
mov
fldt
ljmp
test
pop
fimuls
aad
js
dec
xchg
ljmp
push
dec
jns
jb
sub
and
cmp
sub
ljmp
mov
cmp
adc
cwtl
inc
sbb
leave
pmulhw
xchg
sbb
push
ja
data16
and
das
jp
sub
mov
cld
aam
incl
out
jg
and
pop
jle
pop
jl
shlb
sbb
add
mov
ret
jmp
jae
xchg
push
cmp
ljmp
mov
aad
test
mov
sbb
fnsave
scas
adc
push
rcrb
jns
dec
movsl
mov
push
int
ret
scas
sbb
cmc
movl
jns
cmp
sub
mov
mov
in
pop
mov
rorl
orl
cmp
data16
jnp
inc
cmpsl
and
stc
in
and
add
inc
shll
mov
mov
jmp
sub
arpl
mov
jmp
xor
lds
push
push
in
and
pop
jne
xchg
jl
and
sub
movsl
cmp
xchg
mov
cmp
lcall
mov
in
mov
jno
pushf
pop
inc
mov
hlt
dec
inc
mov
push
es
and
jmp
lock
and
aad
andb
cmpsb
neg
push
ljmp
pop
lret
jg
aad
pop
xor
mov
dec
call
ret
push
mov
sub
cli
cmp
out
push
popf
cmp
and
insl
push
sbb
sbb
loop
in
icebp
and
xchg
sub
and
mov
hlt
bound
andl
xchg
aaa
mov
mov
jns
mov
and
lret
and
push
shrl
pop
andb
and
pop
lock
inc
and
sbb
test
mov
sbbb
movsb
inc
insl
inc
jns
mov
xor
push
cltd
out
addb
pop
jnp
adc
sub
or
stos
xchg
push
movsb
scas
adc
repz
fadds
or
push
pop
dec
push
cmp
stos
pop
popa
daa
pusha
cwtl
orl
stos
push
sar
enter
jno
inc
aam
jle
adc
cmp
and
stos
es
and
inc
cmp
mov
in
push
fwait
arpl
in
adc
and
call
dec
and
inc
adc
push
or
fstpt
lods
int3
push
out
ret
lahf
gs
mov
jae
movsl
cmp
mov
jmp
mov
movsb
adcl
pop
in
ljmp
testb
sarl
ds
mov
aad
ret
jle
and
add
popa
inc
ret
and
add
xchg
scas
sti
test
cmp
test
nop
sbbb
push
shr
dec
dec
sbb
cmp
jae
das
into
and
jne
mov
add
xchg
xlat
jo
addr16
push
sbb
jecxz
or
and
add
lds
and
fs
fsubl
loope
jmp
pop
mov
push
push
lds
push
and
xchg
dec
aad
ljmp
mov
cli
imul
loopne
pop
xlat
test
push
or
mov
scas
fdivs
push
sbb
mov
loope
jo
outsl
in
inc
mull
xor
jge
inc
inc
arpl
jnp
pop
mov
call
and
shlb
or
sub
mov
insb
std
add
lcall
aas
adc
push
std
mov
jne
into
sti
arpl
sub
xchg
pop
enter
and
decl
mov
and
jmp
hlt
mov
xchg
jbe
adc
repz
test
and
popa
sti
push
and
xchg
or
imul
insl
push
mov
rorl
sbb
adc
inc
inc
mov
insl
les
dec
jecxz
jnp,pn
push
call
pop
sbb
bound
das
push
xor
inc
cs
jl
inc
fs
jg
jae
mov
cltd
insl
test
test
cli
jg
push
and
and
or
sub
dec
adc
int3
inc
jle
loope
inc
push
popf
pop
and
mov
lods
cmp
js
lea
movsl
and
imul
es
and
out
and
jmp
mov
std
out
loope
int
fstps
and
jns
rcrl
fidivs
outsl
stos
or
sbb
xchg
in
lahf
stc
push
sub
pop
mov
pop
xchg
jle
inc
and
aam
jl
test
and
out
inc
push
adc
int3
lcall
or
and
pop
sti
jb
test
test
pop
push
out
loopne
sar
and
sbb
jno
out
in
nop
adc
or
add
mov
sub
inc
and
mov
pop
popa
imul
je
xor
cld
mov
push
jp
mov
adc
dec
loopne
lods
mov
inc
pushf
ja
and
inc
ficoms
fisttpl
je
shlb
pop
xchg
dec
jno
lea
fwait
sub
sub
cmp
aad
fisubl
icebp
test
rep
push
xchg
and
cmp
in
xor
jnp
ljmp
dec
clc
and
inc
mov
shlb
inc
mov
rclb
jp
xchg
cmc
jae
xchg
and
cwtd
add
sbb
or
jle
and
out
push
popa
dec
mov
stc
int3
xchg
sub
or
sbb
scas
mov
add
xchg
mov
lret
add
imul
leave
movsb
cltd
mov
push
imul
mov
movsl
jno
mov
aaa
mov
rcll
or
fwait
cld
cli
mov
testb
jle
fsubl
jns
ja
push
pop
xor
lret
int3
xchg
test
ss
mov
mov
jge
bound
inc
push
test
movsl
sbb
in
push
jno
cmp
xor
push
loopne
inc
xchg
jmp
xchg
fidivs
leave
ja
stos
gs
jno
push
das
mov
add
jae
idivl
mov
inc
and
cmpsl
jl
aaa
push
shrb
cmp
push
add
arpl
mov
and
cmp
jb
idivb
pop
dec
shl
adc
push
mov
mov
dec
inc
andl
in
mov
test
add
flds
pushf
pop
sti
and
gs
es
inc
imulb
xchg
and
mov
push
loope
push
ja
cwtl
lcall
aas
cpuid
test
xor
movsb
push
cmpsl
loopne
test
adc
xchg
mov
xchg
mov
cli
aad
sbb
loope
and
lahf
clc
mov
and
gs
add
mov
mov
xchg
jnp
jecxz
mov
add
mov
fsubs
adc
push
mov
mov
fstps
lahf
xchg
out
mov
dec
fwait
mov
push
xor
mov
push
fimuls
stos
mov
pop
fsubr
jb
and
adc
pop
mov
push
mov
push
pushf
xor
sub
sub
dec
and
cmp
out
fbld
and
outsb
pop
cmp
and
mov
test
jp
pop
pop
insl
aam
xchg
and
lret
mov
adc
jp
iret
xor
out
test
pop
sbb
das
and
push
push
pminub
movsl
and
cmp
adc
cmpsb
fildl
dec
and
and
adc
mov
cld
enter
and
sti
or
lahf
mov
jb
int
je
and
pop
insl
inc
add
xchg
ss
shrl
je
mov
add
and
fstps
xchg
in
shlb
lds
enter
push
lret
leave
pop
and
andb
sbb
pop
imul
dec
xor
mov
fistpl
mov
stos
scas
mov
dec
jne
notb
and
sbb
jecxz
aam
pop
jmp
add
test
popa
push
push
test
dec
add
jg
inc
cld
ljmp
fwait
jne
and
push
fstps
pop
or
pmulhw
outsl
addl
mov
mov
cmp
cmp
push
out
xchg
mov
jnp
inc
outsl
sahf
rcll
in
movsb
scas
jp
xchg
rcrl
or
sbb
mov
xchg
scas
int3
lahf
jns
pushf
nop
and
and
and
mulb
insb
xchg
add
and
adc
cmp
aas
and
insl
push
lods
sahf
pop
arpl
out
and
push
sbb
xchg
pop
clc
and
pop
inc
jo
mov
and
mov
and
cmp
nop
sub
loop
xchg
sub
pop
xchg
lods
xchg
and
or
mov
or
add
push
xchg
and
idiv
es
jmp
aam
xchg
and
out
dec
sbb
xor
pop
jne
jle
and
sbb
lret
js
leave
aas
ret
and
bound
inc
push
and
push
ljmp
mov
sti
xor
movsl
arpl
popf
sbbb
fldpi
popa
xchg
shrb
rdtsc
cmpsl
or
jmp
dec
loop
test
and
push
cltd
push
and
filds
outsb
cmp
pop
and
icebp
adc
cmpsb
inc
ja
or
enter
jb
popa
fsubrs
mov
cmp
les
insl
cltd
pop
sub
and
loopne
fsubs
mulb
movsl
sbb
push
and
or
inc
je
xor
mov
inc
mov
and
rcll
inc
xlat
pop
scas
push
xchg
negl
movsl
and
sti
jge
xchg
sbb
out
dec
bound
jle
mov
mov
xor
inc
jae
lds
inc
fists
push
add
js
outsl
pop
imul
dec
mov
jno
xor
or
cmpsb
adc
out
push
jnp
cmpsl
pop
sub
rorb
andb
cmp
adc
pop
adc
and
dec
hlt
dec
inc
addb
ljmp
jno
xchg
sahf
and
or
loope
int3
push
jge
or
push
jle
lock
mov
ret
lods
jno
or
pop
aam
and
scas
lds
dec
add
ds
push
jno
cli
mov
add
cmp
mov
inc
xchg
pop
sbb
jnp
sub
lret
test
xlat
fisttpll
and
or
mov
iret
out
mov
je
pop
xchg
inc
mov
gs
jecxz
pop
mov
lcall
mov
call
rcrl
int
jno
mov
std
rorl
lret
push
pop
ret
jo
and
addb
and
int3
loop
shl
movsb
cmc
call
ss
ret
inc
and
jmp
add
aas
jl
and
rcpps
aam
push
and
pop
out
dec
shrb
mov
sti
stos
fsubl
sub
lcall
in
mov
scas
inc
aas
popa
nop
sbb
and
pop
movsb
and
movsl
mov
and
test
mov
cld
and
inc
add
mov
pop
cltd
cld
xchg
and
lods
loope
lods
jmp
pop
imul
xor
jb
pop
xchg
int3
mov
push
daa
rorb
pushf
or
sub
clc
and
fisubrs
xchg
shll
pusha
ja
mov
mov
into
mov
pop
xor
shll
jno
push
sub
test
mov
push
push
scas
xchg
out
and
popa
inc
cmpsl
jg
lret
pop
pop
and
imul
lock
and
jno
sbb
jecxz
mov
jae
and
and
jg
ret
cli
push
dec
mov
popf
cmp
sub
scas
dec
mov
js
icebp
and
or
or
xchg
roll
and
outsl
sbb
jne
lret
dec
test
sub
leave
pop
das
or
cmp
lahf
cmp
mov
lret
subl
pushf
mov
push
inc
mov
and
push
int
test
and
dec
stos
push
mov
mov
and
faddl
and
andl
in
or
mov
xor
push
and
mov
cli
movsb
jns
jae
mov
adc
push
dec
imul
jmp
dec
xchg
cmp
mov
pop
enter
pop
mov
jmp
lahf
xchg
sahf
cld
mov
and
out
push
ret
and
xor
jns
lret
and
cmp
push
mov
add
das
cmpsb
mov
movsb
dec
in
dec
push
lock
jp
lret
mov
push
lea
pop
jp
in
int3
dec
mov
fldenv
jb
sbb
and
call
pop
fisubs
std
xorl
jmp
ret
shrb
mov
out
and
xchg
jmp
inc
out
jmp
or
lods
inc
mov
and
jmp
or
xlat
out
pop
add
pusha
sub
mov
and
cmp
and
faddl
sar
imul
nop
ja
mov
inc
and
xchg
mov
and
push
inc
dec
mov
xchg
cmp
fidivl
inc
mov
push
les
hlt
popa
xor
loop
xchg
stos
enter
pop
push
popa
add
xchg
push
pop
test
adc
add
jo
orb
shll
xor
push
and
lea
lcall
pop
push
push
mov
andl
inc
sti
test
and
inc
repz
ss
cli
mov
jo
rolb
sbb
adc
out
int
mov
mov
fstpl
adc
sarb
sub
xor
jne
cwtl
push
adc
and
cmpsl
xchg
cmp
and
dec
scas
or
cmp
or
repz
and
ja
mull
and
in
push
daa
pop
shlb
fidivs
roll
xchg
fcmovnb
mov
dec
or
jns
mov
or
movsb
and
mov
insb
cwtl
in
and
dec
xor
lret
mov
xchg
shll
popf
out
jge
inc
mov
movsb
sbb
pop
popa
dec
fstpt
jae
and
les
aaa
out
and
ss
dec
test
lret
xchg
rcll
lahf
cmp
mov
pop
out
loopne
test
sbb
mov
add
and
lea
stos
xchg
call
push
mov
outsb
fsubs
addr16
pop
lahf
stc
or
sbb
aam
jae
and
sbb
out
popa
and
inc
jno
and
adc
push
push
or
enter
mov
xchg
jbe
xor
idivl
mov
mov
sbb
jmp
repz
pop
andl
mov
iret
inc
mov
push
cmc
cmp
and
add
and
mov
pop
or
ret
das
push
push
inc
adc
add
lods
fbld
test
push
push
lods
and
push
imul
and
lahf
jge
sahf
out
das
call
jo
jb
xchg
orl
and
lds
and
inc
jb
test
ss
and
addr16
push
movsl
and
pop
movsb
push
jge
push
out
push
xchg
jno
js
clc
lret
pusha
xchg
les
sbb
jbe
dec
fcomp
sub
lea
mov
pop
push
popf
sub
dec
imul
lds
jns
inc
movsb
sub
notl
das
jno
je
imul
and
inc
pop
push
and
test
push
pop
mov
cs
dec
cvtps2pd
leave
aam
cmpsl
or
push
xor
and
mov
and
fs
mov
xchg
pop
loop
es
lcall
cmp
fdivs
test
sbb
mov
pop
cmpsb
inc
push
mov
and
add
inc
scas
cmpsl
xor
js
cmc
and
and
mov
jnp
shlb
mull
jne
mov
and
dec
sub
in
push
pusha
das
incl
fists
push
mov
pop
push
push
xchg
sarl
jge
popa
and
and
shr
lods
ljmp
pusha
mov
out
mov
sbbl
movsb
push
dec
inc
dec
and
jno
dec
mov
and
cltd
out
fadd
popf
test
movsb
inc
fldt
and
or
aam
clc
into
into
jg
and
sub
in
and
jno
icebp
pusha
ja
sbb
sub
cld
push
xchg
inc
cmp
inc
and
xchg
pop
inc
pop
jmp
inc
mov
sbb
inc
test
mov
push
push
inc
and
sub
cltd
mov
fisttpll
push
enter
fsub
cmpsb
xchg
clc
mov
cmp
dec
test
jae
and
xor
add
adc
out
setns
leave
and
daa
test
addr16
adc
sbb
and
mov
popf
out
popa
pop
inc
gs
xchg
movsb
cmp
cmpsb
pop
pop
pop
jne
andb
cmp
or
mov
and
inc
xchg
pushf
pop
xchg
mov
push
je
pop
sub
cmp
and
ret
inc
adc
mov
loop
cwtl
and
in
out
push
fisubrl
pushf
add
mov
add
int
out
addr16
nop
jb
lock
ds
movsb
mov
cmpsb
mov
sub
sbb
cmp
mov
orl
jg
inc
mov
orb
das
mov
push
xchg
mov
xor
xchg
scas
inc
lock
aad
push
repz
lret
popa
andl
cs
and
test
fwait
sbbl
mov
int3
cmp
jl
inc
fprem
ds
pusha
and
sbb
out
cmp
inc
add
je
fcmovnbe
clc
in
and
fstps
roll
and
pop
cmp
mov
test
inc
add
mov
movsb
or
cltd
fs
sbb
and
xor
mov
mov
cltd
xor
mov
popf
and
push
outsl
in
nop
lret
loope
jge
jecxz
sub
cmpsb
jg
int
imul
aam
in
mov
shrl
ret
test
jmp
loop
shlb
mov
leave
lret
nop
sub
repz
and
lds
and
add
pop
jno
out
dec
rcrb
ret
out
popaw
add
and
mov
inc
aam
aad
xor
cmp
adc
nop
das
xor
and
or
and
dec
orl
push
inc
test
clc
shll
shr
mov
inc
add
mov
cmp
mov
xchg
inc
dec
jne
jo
pop
push
frstor
and
shrl
test
nop
roll
mov
inc
adc
sarb
mov
aad
sbb
jl
out
ljmp
data16
ja
popf
push
mov
mov
iret
movsb
xchg
sub
es
jbe
mov
push
shll
mov
inc
cltd
shrb
sbb
fistps
mov
das
leave
and
adc
pop
mov
xor
into
mov
cltd
sbb
pop
xchg
cmp
push
and
jmp
lods
icebp
jl
and
iret
outsb
jnp
push
popa
add
push
jo
mov
xchg
xchg
mov
sub
xchg
push
xor
mov
pushf
out
or
mov
jecxz
imul
dec
fldenv
adc
and
pop
call
xor
mov
jmp
and
cltd
add
add
add
enter
out
jne
mov
inc
js
les
add
jg
mov
mov
add
sahf
lea
add
and
xor
push
mov
adc
sub
les
mov
and
imul
and
out
in
out
je
stos
sbb
add
aam
andb
pop
xor
adc
push
mov
rcll
or
repz
in
daa
int
cli
xchg
jmp
inc
xor
add
andb
aas
cmc
jge
xchg
dec
mov
adc
in
cld
cmc
mov
stos
fsts
loopne
adc
test
sub
sub
and
inc
push
or
fldl
xchg
cwtl
cmp
fs
sbb
dec
push
jbe
xlat
movsb
out
sbb
xchg
mov
hlt
push
and
add
popf
mov
out
negb
iret
cmp
hlt
adc
push
repz
mov
push
xor
lock
and
movsb
fdivp
in
lcall
dec
int3
js
and
pop
loop
mov
stos
cmp
dec
and
xor
mov
and
pop
push
call
movsl
mov
mov
pop
sahf
mov
lea
shlb
mov
xor
pop
mull
cwtl
loop
dec
dec
test
mov
jge
push
fimuls
stos
fmul
cltd
mov
xchg
into
in
movsl
loop
pop
and
mov
mov
jae
inc
and
mov
inc
andb
fists
sub
sbb
movb
inc
and
lahf
push
sub
jecxz
mov
mov
sbb
int3
loopne
out
mov
dec
jle
xor
and
or
adc
and
int
jl
push
test
aam
dec
push
bnd
cmc
fisubs
adc
mov
push
lds
pop
test
xchg
mov
andl
out
movsb
pop
pushf
adc
sbb
fidivl
jne
push
add
clc
fwait
int3
arpl
fldenv
cwtl
xchg
movsb
loopne
jle
cwtl
imul
stos
jbe
clc
jns
add
mov
sahf
cmpsb
pop
mov
sti
sahf
add
pushf
lods
movsl
or
icebp
fbld
dec
cmp
sub
or
push
sarl
xchg
or
ljmp
outsl
inc
lock
mov
lea
stos
and
or
mov
jnp
and
xchg
call
aas
and
mov
loope
in
xchg
call
outsb
pop
ret
lock
pop
and
or
leave
mov
fidivrs
and
pop
and
lret
and
add
movsl
cmpsl
sub
sti
pop
int3
xchg
and
daa
je
and
dec
inc
push
and
or
jb
ffree
and
inc
xor
and
mov
and
jg
inc
xor
leave
push
in
xchg
xor
push
cmp
and
dec
movsl
push
jl
test
mov
lret
cmp
sbb
addb
ucomiss
stos
fisubrs
pop
sti
mov
cmp
rclb
jne
loop
fwait
rcl
cmpsl
and
add
das
pop
pop
rcrl
aas
insl
xchg
dec
test
push
gs
add
push
adc
or
test
ljmp
out
xchg
movsb
mov
stc
imul
dec
repnz
lret
cld
and
push
addr16
push
test
fisubs
ljmp
js
les
test
inc
adc
xchg
jbe
xor
and
mov
and
and
das
mov
nop
or
push
out
ja
iret
fwait
sti
pusha
repz
cmpsb
ficoml
mov
nop
outsb
and
out
sbb
mov
mov
fdivrs
dec
xor
and
mov
and
std
pop
push
mov
dec
out
add
test
mov
rol
fistl
fwait
mov
rorb
hlt
dec
and
repnz
mov
sbb
jae
xchg
xchg
and
fsubl
cmp
arpl
cltd
int3
xor
and
add
sbb
or
jb
mov
xor
in
xchg
jecxz
mov
mov
sbb
and
test
xchg
scas
filds
in
mov
leave
movsb
cltd
adc
mov
ret
inc
fwait
push
and
jne
ljmp
out
xlat
pop
or
inc
into
sub
lcall
and
mov
inc
or
add
das
inc
js
pop
outsb
movsl
leave
push
and
shlb
aaa
mov
sbb
sub
cmpl
adc
gs
sahf
xchg
pop
sub
jne
and
ret
pop
in
and
push
out
dec
xor
pop
jge
mov
mov
lock
mov
mov
out
imull
cltd
lea
addb
jbe
pop
in
sbb
jns
push
and
sbb
and
cmp
dec
jne
cltd
push
ret
or
lds
lock
std
inc
xchg
and
rcll
and
imul
mov
and
cmp
das
xor
ret
mov
mov
je
in
jno
ljmp
out
shll
andl
adc
xchg
pop
in
or
xchg
adcl
cmpsl
and
into
sbb
add
in
lods
xchg
inc
and
cmp
sar
inc
mov
pop
sbb
adc
fisubs
js
xchg
out
mov
jno
cmp
add
pop
sbb
mov
and
cwtl
push
lcall
inc
js,pn
roll
insb
mov
inc
push
sbb
fldcw
cmp
xor
pop
ret
sbb
push
and
jno
xor
jne
fimull
das
dec
mov
nop
gs
inc
sub
sarl
and
or
repnz
or
mov
rolb
add
outsb
pop
into
and
test
push
or
pop
push
xchg
shrl
push
and
jmp
cmc
xor
pop
sub
int
xor
mov
and
xor
xor
loopne
adc
or
gs
pop
adc
popf
and
jns
sbb
cmpsb
aad
and
sub
push
daa
mov
cmpsl
pop
xchg
imul
sbb
push
ds
gs
dec
incl
outsl
jg
das
jecxz
fldenv
sub
lahf
inc
jge
xor
mov
push
pop
addr16
and
xchg
jmp
sub
mov
push
loopne
jge
les
in
dec
jge
push
mov
stos
test
jle
out
loop
int3
jnp
xchg
dec
push
push
cmp
enter
into
and
push
ficompl
negb
das
movl
and
cmc
dec
and
push
lds
sbb
movsl
xchg
outsl
and
jo
and
orl
mov
movsb
mov
ja
cmc
and
test
xlat
and
pop
xor
repz
sbbl
and
gs
int
cli
mov
enter
jge
out
outsl
and
ret
dec
mov
mov
fimull
cmp
jbe
movsl
fucomi
pop
mov
mov
push
mov
fimuls
cmp
and
js
mov
lcall
in
xchg
or
aas
sbb
mov
cmp
pop
mov
test
dec
push
dec
inc
ja
fwait
popa
or
outsb
pop
mov
test
test
stos
sub
jae
and
push
and
outsb
push
mov
fdivs
and
imul
and
les
pop
pop
jns
mov
jne
push
lods
mov
jmp
push
xchg
pop
pop
fstl
add
stc
mov
in
xorl
adc
cld
outsl
inc
scas
push
movsb
mov
dec
jl
fbld
aaa
mov
aad
add
and
push
mov
pop
movsl
mov
and
or
bound
ljmp
cmp
test
roll
add
add
and
fsubr
subl
xchg
dec
adc
in
and
insl
cmpsl
push
icebp
add
movsb
jns
aas
pop
sbb
je
mov
ret
movb
fs
sbb
and
push
xchg
cmp
and
push
sub
mov
push
fdiv
and
iret
popf
sbb
xchg
popa
push
mov
push
sub
add
xchg
xor
mov
mov
pop
sub
cmp
mov
sub
and
daa
mov
call
roll
and
sbb
movsb
xchg
mov
out
imul
push
mov
dec
add
fbstp
mov
sbb
out
insl
and
fsubp
or
std
sub
repz
xor
test
push
and
icebp
mov
inc
pop
pop
push
call
nop
lds
xchg
gs
mov
popf
ja
movsl
sbb
js
push
pop
ds
xchg
inc
mov
inc
pop
popa
xor
cmpsl
xor
jg
ret
popa
pop
push
fnsave
into
js
xor
sub
cwtl
cltd
and
stos
rcl
ret
jno
and
xor
fcomip
xchg
and
mov
inc
xchg
ljmp
and
popa
xchg
shll
mov
imul
or
out
test
jmp
and
xchg
je
mov
stos
and
and
adc
adc
cmp
and
xor
in
push
fidivrl
xor
xchg
push
mov
mov
mov
and
outsb
pop
arpl
dec
mov
and
cmp
cld
mov
and
jmp
add
pop
iret
and
add
in
jno
movsb
ljmp
loop
std
xchg
int3
in
imul
stos
inc
xchg
test
movsb
and
sbb
int3
sbb
inc
fs
mov
xlat
negl
outsl
cs
stc
sbb
movsb
inc
ficoml
dec
xchg
push
and
push
and
jl
nop
sti
aad
and
rcrb
cmpsl
faddl
or
and
xor
xchg
ljmp
mov
lahf
and
je
ss
dec
in
cs
and
pop
mov
pop
jge
and
mov
sbb
cmp
ret
xor
popa
clc
adc
and
mov
sub
sar
xchg
lock
idivb
hlt
adc
in
dec
and
cwtl
lcall
jle
xchg
cmp
or
arpl
frstor
in
lret
dec
movb
sub
outsl
popf
cwtl
ljmp
lret
xor
xor
daa
sub
in
push
cmp
mov
add
outsl
and
xor
add
stos
mov
das
mov
mov
add
cmp
hlt
and
test
movsl
sub
loop
loopne
scas
pushf
or
iret
scas
sbb
mov
jno
sarb
cmp
push
pop
mov
pop
popa
and
sub
popf
cwtl
mov
js
add
stos
popa
pop
xchg
cmp
mov
leave
sbb
xor
jecxz
mov
lret
scas
iret
adc
pop
jle
mov
dec
fldl2e
sub
popa
clc
push
jnp
cwtl
repz
xchg
mov
out
push
or
cmp
aaa
cmp
jnp
in
sub
int3
and
add
and
int
xchg
jge
sub
push
pusha
clc
pushf
imul
cltd
mov
ja
and
lahf
inc
inc
dec
fistpll
inc
hlt
and
shlb
dec
ja
in
or
jns
pop
aad
inc
fidivs
mov
push
mov
scas
and
andb
pop
sub
cmpsl
fidivrs
xchg
jge
and
adcb
xchg
movsl
xor
negb
pop
sahf
mov
sub
nop
mov
xchg
push
mov
jbe
cwtl
nop
inc
and
loope
fistpll
adc
and
repnz
sub
stc
jp
enter
stos
into
inc
xchg
inc
fs
and
data16
cmp
mov
mov
aam
and
sahf
add
pop
fs
and
fcmove
cmc
in
fwait
pushf
and
mov
test
jmp
dec
and
getsec
stos
and
xor
mov
pushf
and
adc
add
pop
and
movsb
in
mov
mov
lea
and
in
mov
aas
push
cwtl
mov
popa
pop
push
lods
jno
xor
and
js
gs
cmp
and
push
dec
jo
mov
and
sub
mov
ljmp
js
add
mov
pop
push
jne
lcall
test
mov
and
push
push
xchg
jl
pop
jb
xchg
dec
jp
and
shll
dec
push
outsb
inc
or
or
adc
push
pop
xlat
and
ljmp
and
pop
sbb
fimuls
cmp
fisubl
xor
mov
rolb
lret
clc
movsl
jo
sbb
imulb
jecxz
movb
mov
lods
inc
mov
pushf
pop
cltd
cmp
and
pusha
push
inc
and
xlat
mov
or
lods
add
fstps
cmp
shlb
pop
and
stc
or
cmp
push
push
and
xor
jae
mov
mov
pop
and
or
push
and
sbb
mov
inc
aaa
add
mov
and
shlb
mov
cwtl
and
or
mov
shrb
lods
push
ds
xchg
mull
xor
and
dec
ja
mov
xor
daa
push
out
stc
ss
imul
jge
je
mov
pop
in
movsb
data16
and
andb
xchg
mov
and
cmp
or
fmull
mov
mov
cli
shr
cmp
xchg
dec
lcall
arpl
pop
dec
loopne
mov
push
in
ds
xchg
lret
push
stos
sub
xchg
mov
mov
fdivl
mov
ficoml
jno
sub
sbb
mov
lahf
push
jge
aaa
sbbl
es
js
push
lods
xor
dec
aad
mov
add
mov
and
push
lods
push
dec
lea
rclb
inc
call
out
push
inc
loope
push
dec
xchg
push
lahf
mov
dec
outsl
cmp
dec
loopne
push
out
repnz
je
fwait
lea
loope
xchg
lods
pusha
xchg
fidivs
push
cltd
fdivrs
mov
push
lret
lock
adc
mov
cmp
xor
and
lret
movsb
loope
lds
push
jo
lahf
cmp
pop
mov
inc
or
mov
popa
jl
mov
jae
pop
and
cmp
jnp
in
cmp
and
jo
jg
aas
mov
and
jle
fcompl
test
adc
fisttpll
jp
push
lahf
int3
adc
and
mov
je
cmp
and
lds
add
shlb
adc
add
std
sbb
add
lds
and
movzbl
cld
cltd
cmp
js
and
adc
and
test
and
test
mov
fs
test
dec
insb
and
stos
xchg
repz
pop
sahf
and
add
xor
imul
or
cld
pop
add
lcall
test
fs
popw
out
scas
or
es
mov
sbbl
inc
ja
int
push
add
leave
test
mov
fcoml
movsl
mov
or
je
mov
or
enter
pop
call
lcall
fdivrl
fldl2t
sarl
gs
aam
lcall
xchg
cs
mov
xor
jl
scas
push
xor
stos
fstpl
lods
and
out
or
fmul
dec
mov
mov
mov
sahf
xchg
mov
shrb
or
mov
and
add
push
loopne
and
and
data16
xor
jmp
mov
js
insl
adc
xchg
nop
fwait
cmpsb
sub
daa
xor
sbb
push
mov
xor
movsl
add
cmp
or
or
add
and
addb
cwtl
repnz
push
mov
cmp
mov
ds
jp
loop
pop
das
mov
test
jmp
push
divb
in
jo
pop
xor
xchg
jno
mov
jg
outsb
insb
xchg
inc
push
xchg
out
das
cld
push
mov
sbbl
pop
and
call
and
imul
and
cwtl
lret
scas
mov
or
push
add
rclb
lea
pop
sti
cmpsl
lods
pop
pop
mov
inc
data16
popf
outsb
aaa
and
insb
cltd
cmc
ret
into
das
and
fldenv
std
mov
and
mov
imul
pop
ds
mov
mov
and
mov
xchg
pop
jb
jo
and
addl
adc
imul
loope
and
jno
dec
mov
pop
ficompl
pop
cmpsb
xchg
and
mov
push
mov
hlt
xchg
dec
and
and
stc
cmp
and
divb
dec
test
loopne
lods
and
xor
and
add
flds
pop
and
pushf
jo
mov
das
jmp
and
or
in
and
xchg
jecxz
and
iret
inc
and
pop
pushf
and
mov
pop
and
mov
stc
and
push
pop
repz
inc
sbbb
das
add
cmp
mov
dec
fcoms
pop
ret
and
std
addr16
ja
xlat
xchg
sub
mov
into
and
int3
pusha
sbb
inc
lret
stos
and
xor
mov
pop
pop
popf
jp
cld
and
fisttpll
mov
xchg
dec
jne
enter
and
faddl
frstor
fisubl
fwait
inc
dec
add
push
shl
jbe
jge
jmp
roll
rep
and
or
rolb
loope
aaa
in
mov
mov
insl
and
aas
inc
fwait
outsb
mov
xorb
inc
imul
jg
lahf
adc
jle
add
mov
popa
push
cmpl
cmpsb
push
js
jae
insl
push
mov
adc
ds
pop
movsb
sti
add
mov
dec
and
jmp
outsb
cli
aas
jecxz
inc
pushf
lock
shl
scas
shrl
shll
mov
jo
and
xor
pop
and
and
and
shrb
enter
jo
scas
dec
rcrb
ret
in
out
loope
addr16
pop
iret
and
adc
dec
aaa
pop
pusha
mov
mov
mov
inc
mov
and
loopne
test
mov
clc
scas
adc
lea
out
or
and
ret
add
push
cli
and
adc
mov
and
div
mov
jae
popf
lahf
mov
xor
jno
adc
xchg
mov
fdivl
fisubrl
dec
mov
daa
outsl
popa
mov
icebp
and
adc
xchg
cmpsl
mov
mov
push
mov
and
sbb
mov
jge
popa
and
jae
jbe
loop
icebp
sbbl
xor
fbstp
xorl
jno
arpl
xor
cmc
pushl
push
and
ds
shrb
pop
test
push
mov
loop
cs
test
enter
jae
ret
cmp
shrl
and
lret
and
add
lcall
ret
jnp
adc
icebp
sar
dec
test
adc
vandps
mov
and
adc
and
inc
dec
xor
inc
add
dec
xchg
lret
inc
sub
or
cmp
dec
sbbl
dec
repnz
fwait
mov
cld
ret
pop
cmpsl
cmpsb
pusha
xchg
les
add
jns
xchg
adc
jbe
bound
je
daa
cmp
dec
gs
movsl
mov
cmpsl
jns
mov
pop
and
hlt
pop
aaa
mov
test
and
lock
or
nop
inc
push
cmpsb
les
cmp
out
lret
ljmp
push
mov
jno
movsb
movsl
es
adc
adcb
pop
jo
xchg
fisubrl
cmp
mov
das
inc
scas
or
sub
insl
or
and
sbb
out
jbe
and
xchg
xchg
stos
pop
dec
cmpl
test
lock
lahf
pop
and
fs
and
mov
loope
and
mov
icebp
ja
and
inc
add
and
ret
mov
arpl
popf
push
lods
and
xchg
repnz
pop
leave
dec
insl
mov
ficoml
and
jb
push
push
cmc
xchg
and
mov
mov
adc
test
pop
and
mov
push
es
pop
pop
popa
into
adc
push
lock
xor
xor
loopne
imul
mov
or
cmc
mov
jne
dec
gs
sbb
lahf
or
pop
pop
call
add
xchg
popa
and
add
pop
and
loop
fildll
jno
sub
cmp
adc
push
xchg
movsb
pop
clc
mov
aam
push
or
and
and
dec
xor
int3
sub
mov
shll
mov
in
test
sbb
aam
and
shrb
mov
sbb
stc
sahf
test
cltd
cmovs
xor
cld
shll
sarl
jle
mov
pop
and
shll
and
out
test
jge
xchg
shll
andb
mov
jb
and
mov
pop
push
and
xor
push
mov
xchg
das
ljmp
cmc
dec
and
test
fcoml
imul
mov
pop
add
xor
data16
mov
cmpsl
in
inc
out
push
mov
inc
xchg
test
and
dec
lret
or
and
lret
aaa
addr16
scas
xchg
mov
and
clc
stos
lret
jae
mov
out
mov
rcll
cmpsb
xor
mull
dec
arpl
decl
and
test
mov
dec
fmull
sub
ds
sub
add
out
enter
jno
fisubl
and
and
mov
inc
mov
and
and
sbb
inc
jno
and
mov
xchg
mov
dec
mov
mov
and
cld
push
xor
pusha
jecxz
pop
movsl
pop
cld
xchg
movzbl
and
fdivs
mov
hlt
dec
push
mov
lods
xor
or
ret
cmpb
add
movsb
shlb
push
cmp
test
mov
inc
repz
pushw
dec
js
sub
and
jo
pushf
inc
xchg
xlat
mov
add
inc
stos
fiaddl
push
sbb
shlb
inc
inc
call
addr16
fisubrl
jmp
and
in
xchg
adc
jae
cmpsl
xor
and
fldt
and
mov
dec
movsb
sbb
push
subl
je
aad
ljmp
xchg
movsl
xchg
lea
out
sbb
sbb
and
clc
mov
mov
push
mov
daa
enter
jle
ret
adc
adc
or
pop
aaa
and
cltd
fisttps
mov
shll
add
and
inc
jle
and
and
jo
push
cwtl
pop
xor
cmp
and
ss
inc
in
push
add
push
mov
cs
push
out
and
movsl
adc
sbb
nop
push
addb
hlt
and
in
inc
loop
ret
push
add
arpl
loop
pop
dec
sbb
je
xchg
hlt
pop
in
bound
jnp
push
xor
scas
mov
pop
subl
xor
int
test
sbbb
sahf
xchg
mov
aam
fisubl
popa
mov
test
and
xor
cli
les
dec
lret
pop
cmp
sbb
xchg
stos
movsl
push
int3
stc
and
push
in
hlt
and
clc
add
cwtl
dec
outsl
and
mov
mov
popa
and
aas
push
jno
inc
jmp
mov
movsb
test
aaa
aas
and
add
xchg
dec
jne
dec
inc
push
sarb
mov
adc
cmp
xchg
stc
xor
xor
xchg
jno
inc
fisttps
imul
roll
leave
jecxz
jb
and
scas
pop
jbe
cmp
mov
xchg
out
xchg
and
aam
sarl
add
push
leave
cmpsb
xor
popa
mov
loop
stos
pop
rorb
shl
lcall
pop
mov
fsts
and
mov
bound
pop
adc
aaa
jl
ss
dec
adc
cli
inc
loopne
aad
push
and
leave
sbb
movsl
int3
icebp
cmpsl
imul
adc
jnp
rcll
loop
les
test
arpl
adc
pop
lret
adc
cli
movsl
dec
xchg
imul
int
mov
add
cmp
loope
xchg
mov
cmc
das
jne
lret
aaa
xchg
in
imul
addl
mov
pop
in
fildl
test
xlat
push
jg
out
xor
mov
and
or
sahf
stos
sub
gs
add
sub
mov
cmp
imul
aad
inc
inc
push
sbb
imul
jo
adc
and
jecxz
rol
add
dec
addl
cmp
and
fsts
pop
popa
int
xor
sbb
jns
jne
enter
les
jecxz
pop
mov
xchg
mov
or
mov
xor
sbb
cmp
pop
int
xchg
fcmovb
addr16
lods
imul
das
fnstcw
roll
movsb
imul
and
push
rclb
pop
rcll
loope
mov
mov
mov
int
rcrl
shrb
lcall
jbe
insl
popa
das
ss
sbb
mov
xchg
jg
mov
fcmovb
and
mov
scas
orb
jmp
into
mov
dec
cld
xchg
cmp
jp
xchg
mov
pop
fwait
scas
xor
popa
adc
push
jg
mov
cld
xor
cs
sbb
test
sub
jb
dec
popf
scas
sub
add
push
mov
mov
inc
fs
xchg
sub
or
pop
gs
push
push
adc
pop
push
lcall
stos
lahf
dec
jge
and
lahf
inc
xlat
adc
les
lods
test
lods
mov
cmp
push
cmpsl
roll
mov
in
imul
xchg
ljmp
xchg
mov
stos
pop
jns
stc
jge
lcall
cmpb
outsb
mov
mov
sbb
mov
push
pop
in
xorb
rclb
adc
jg
or
add
push
leave
add
ret
pop
cmpsb
jmp
adc
loopne
test
and
and
les
cmp
dec
lods
push
outsb
add
cmp
cmpsl
js
es
call
aam
rcl
xor
adc
dec
sahf
shrb
movsb
mov
inc
sub
xchg
scas
movsb
cld
xchg
popf
adc
repz
imul
and
js
push
mov
inc
lods
aas
mov
out
subl
add
ret
shlb
lods
push
jo
in
scas
pop
mov
xchg
push
jns
lahf
rep
add
and
xor
iret
push
mov
fwait
ss
lret
and
out
xor
in
and
or
dec
andb
pusha
lea
std
and
iret
mov
imul
es
popa
cmpsl
pop
cltd
mov
andb
pop
adc
or
adc
and
lret
loope
ficoml
out
dec
orl
and
scas
pavgb
and
and
bound
pop
in
inc
add
jge
and
testl
loopne
mov
adc
fdivl
addl
push
lcall
push
or
rclb
adcl
cs
repz
and
sbb
shlb
sub
adc
daa
popa
or
and
mov
mov
mov
in
and
jge
jecxz
sub
sub
inc
pop
cwtl
stos
and
loopne
shlb
push
test
and
mov
dec
adc
fsts
xor
or
fbld
gs
pop
or
jge
and
pop
jns
push
aaa
clc
fldenv
fidivl
popf
rorl
lcall
ljmp
push
adc
sbbl
pop
fisubrs
int
pop
pop
and
xchg
movsl
ljmp
sbb
hlt
pop
jno
cmp
cld
mov
ret
xor
iret
clc
push
cwtl
rolb
jge
test
cmp
test
and
add
adc
fnsave
test
and
dec
cmp
movsb
mov
mov
and
arpl
pop
lea
mov
nop
ret
push
push
andl
outsl
cltd
sub
jge
cwtl
scas
es
pusha
movsb
icebp
sbb
jno
shl
mov
jg
mov
jno
and
and
xchg
add
pop
push
adc
cmp
rorl
pop
pop
rclb
nop
push
call
fs
jae
fsubl
aad
fsubl
sbb
cmp
lret
repnz
dec
bound
adc
cmp
dec
fsts
sbb
add
mov
sahf
add
and
and
out
sub
adc
inc
popa
and
insl
pop
into
and
rorb
mov
and
imul
mov
scas
fs
push
lret
call
jno
or
out
xchg
leave
and
pop
mov
mov
and
and
lcall
incl
loop
sbb
loopne
adc
testl
imul
lret
push
popf
rcl
dec
mov
int
push
cmpl
cmpsl
cmp
stos
repnz
popa
sbbl
and
mov
push
or
adc
mov
icebp
mov
and
xor
push
pop
mov
insl
xor
sti
mov
in
xor
jl
lret
and
divl
scas
and
pop
fwait
jo
dec
mov
mov
shll
repz
xor
pop
fdivs
adc
mov
cmp
popa
mov
adc
push
and
pop
push
mov
imul
les
movsl
ja
pop
xchg
add
sub
cmpl
inc
jle
and
ret
lea
xorl
jg
out
xchg
adc
std
call
sbbl
mov
xchg
cmp
push
cmp
in
add
int3
dec
rclb
dec
inc
inc
ja
rorl
mov
xorl
imul
mov
out
stos
and
cltd
enter
and
sti
ds
pop
mov
inc
pushf
push
jl
cmp
add
jnp
loope
mov
or
cmp
push
cmp
movsl
mov
rclb
pop
sub
stos
pop
scas
add
push
ret
mov
popa
sub
sub
jbe
aam
mov
mov
xchg
add
adc
inc
orb
xchg
and
stos
xchg
das
and
mov
pop
dec
mov
mov
fcmovne
repz
ds
ja
and
call
sbb
mov
movl
in
xor
xor
mov
and
mov
cmpsb
inc
and
push
ss
sbb
sbb
and
icebp
mov
out
lahf
mov
stos
fiadds
inc
xchg
xchg
movsb
xor
test
in
popa
ja
dec
subl
call
mov
lret
mov
loopne
cmpsb
cmp
mov
adc
mov
adc
mov
jmp
ret
lds
pop
pop
hlt
ds
add
cmpsb
xchg
and
xchg
cmp
and
lock
and
push
and
jae
mov
mov
push
jno
loope
shlb
pop
sub
js
jmp
inc
add
mov
mov
and
xor
jmp
popa
and
movsb
data16
push
lds
fld
xchg
push
or
or
jns
mov
inc
mov
bound
mov
repnz
inc
lret
sbb
sub
aam
mov
imul
sbb
or
jecxz
scas
out
sub
push
jnp
cmp
mov
pop
or
and
push
adc
in
mov
daa
jl
and
decl
imul
dec
sub
jl
xchg
enter
ret
mov
test
mov
lea
ja
and
sbb
add
xor
adc
mov
xchg
mov
mov
mov
xchg
sahf
add
or
in
push
mov
loopne
or
adc
loop
test
jne
jmp
cmp
outsl
sbb
outsl
add
popf
ss
pop
sbb
decl
movsl
daa
andb
popa
dec
push
movsb
adcl
and
sbb
and
and
add
and
mov
mov
inc
andl
push
imul
mov
and
lock
cmp
and
aaa
pop
sbb
mov
mov
sahf
mov
and
cmpsl
dec
ud1
imul
in
jge
mov
arpl
lret
int3
cltd
xorl
inc
or
sub
into
add
push
add
and
addr16
loop
ss
mov
mov
pop
jne
out
mov
or
nop
push
sub
ja
sahf
push
movsl
dec
movsb
in
xchg
rcll
adc
inc
and
xor
and
adc
sbb
pop
leave
sub
dec
cmp
lea
and
or
mov
mov
and
loop
fistl
and
int3
push
sbb
xchg
mov
popa
xchg
dec
jecxz
lcall
lea
notb
xchg
orl
and
fwait
aas
mov
and
insl
and
ljmp
lds
aas
out
and
gs
call
sub
loop
and
inc
jno
pop
sbb
cmp
repz
jbe
sub
fsubs
hlt
push
mov
mov
popf
out
dec
cld
pop
roll
jecxz
mov
and
mov
inc
ds
in
push
push
mov
dec
and
sbb
or
mov
jns
rcll
cltd
adc
mov
and
push
cld
arpl
test
jno
jo
call
fiadds
dec
and
sti
lret
je
shll
adc
fsubs
cltd
stos
mov
inc
movsb
lcall
ret
fsts
and
mov
in
scas
sbb
cs
int
loopne
rclb
scas
push
cmpsb
jno
mov
sbb
xchg
cltd
dec
cmc
mov
jb
ret
mov
mov
jp
lods
fisubl
adc
adc
xorb
jb
mov
sub
adc
xor
dec
test
pop
push
fidivl
jo
outsb
enter
or
in
movsb
faddl
call
pusha
mov
insl
nop
rcpps
adc
mov
call
pop
adc
cmp
adc
inc
jo
fs
pop
and
fchs
inc
mov
push
popa
xchg
xor
hlt
and
or
pop
add
sbb
and
xchg
fldt
adc
and
lahf
cmp
add
xchg
sahf
push
popf
add
dec
mov
jne
in
lods
movsl
jle,pn
sahf
mov
movsb
cmpsb
loopne
ja
popa
cmp
enter
push
call
mov
stos
xchg
mov
out
pop
adc
and
fdivrl
adc
and
xchg
mov
lret
mov
xchg
in
add
aas
test
mov
sbb
dec
out
sbb
loopne
inc
fidivs
adc
test
xor
and
mov
sub
and
cmp
push
je
push
push
mul
aam
add
stos
cmp
and
xchg
daa
mov
cld
aaa
and
dec
cmp
push
sub
movsb
mov
es
push
mov
pop
sti
jbe
xchg
jo
or
inc
cmp
outsl
std
pop
and
fnstsw
int
pop
inc
jmp
sub
and
xchg
xor
sarl
mov
mulb
orb
and
mov
je
jg
mov
inc
les
pop
fwait
mov
loope
sub
jne
in
and
icebp
pop
cli
ret
adc
mov
dec
and
push
xor
dec
das
xchg
je
subl
mov
pop
hlt
and
inc
rol
and
stos
mov
jmp
dec
pop
repz
jecxz
inc
cmpsb
adc
add
pop
popa
pop
fstl
push
je
popf
fsubs
cld
lods
fwait
lret
xlat
loope
pop
push
iret
mov
mov
xor
sahf
js
lcall
adc
aaa
xor
add
aam
scas
lods
insb
inc
popa
cmpsb
test
push
shr
and
jle
and
jne
stos
xlat
pop
or
loop
xor
mov
sahf
mov
or
xchg
or
stc
fcmovnb
fcoml
add
lods
ljmp
and
jbe
insl
mov
jge
inc
lcall
rorl
lock
dec
out
xchg
add
dec
push
mov
push
stc
inc
adc
and
inc
in
xor
testl
and
mov
loop
andl
jne
or
xor
push
mov
int3
cld
and
push
inc
cmp
shll
mov
xor
pop
and
aad
sbb
sub
and
and
ret
popa
test
lahf
fs
scas
inc
mov
inc
jns
cmp
and
test
pop
inc
dec
and
sbb
test
inc
mov
mov
xchg
cmc
lcall
dec
xchg
jno
ja
mov
mov
xchg
call
rep
pop
add
jmp
repnz
and
pushf
bound
mov
test
adc
xchg
sbb
inc
push
lcall
lret
and
cltd
loopne
shlb
and
repnz
pop
cmp
jl
and
in
and
aas
mov
inc
cmp
and
mov
test
add
xchg
push
int
and
dec
push
inc
cmp
imul
cmp
arpl
and
leave
pop
pusha
test
adc
dec
shrb
and
push
pop
inc
imulb
mov
dec
js
mov
leave
mov
push
mov
stos
mov
pushf
ss
jns
iret
call
mov
mov
push
popf
cs
or
shl
cmp
loop
jno
int3
out
pop
mov
fstpl
inc
mov
arpl
adcl
out
and
push
push
dec
and
mov
and
arpl
and
int
data16
sahf
lret
fistpll
loope
icebp
jge
stos
and
addb
mov
cwtl
cld
inc
push
lea
ficomps
cmpsb
pop
xor
pop
and
stos
jmp
mov
stos
inc
xchg
cmc
inc
push
ja
imul
lahf
mov
dec
sbbb
adc
out
and
fbstp
notl
gs
pop
sub
out
rcr
dec
les
dec
or
dec
lea
push
stos
mov
xchg
fdivl
cmp
or
or
jno
lock
pop
mov
jae
and
in
mov
mov
inc
or
push
and
ret
test
or
insw
repnz
jge
push
sub
mov
test
jecxz
xor
mov
adc
adc
mov
int
cmpsl
adc
mov
sti
mov
sbb
imul
test
shll
ficoms
xchg
and
xchg
inc
lret
mov
les
sub
xchg
popa
inc
sub
or
jnp
adc
jno
mov
and
jae
xchg
dec
cltd
movsb
mov
xchg
fiadds
add
repnz
mov
adc
loopne
and
jg
shlb
mull
pop
loope
call
fcmovnu
shlb
and
addr16
dec
pop
jo
and
dec
cltd
das
sub
pop
test
and
push
inc
xchg
dec
add
xchg
xlat
insb
or
scas
mov
in
or
loop
enter
arpl
and
adc
dec
xchg
dec
mov
loop
insb
call
vmwrite
or
out
dec
bound
push
out
fcomps
cmp
jb
and
cmpsl
sti
repz
mov
hlt
mulb
and
jae
daa
cmpsb
jno
pop
mov
push
jecxz
jmp
mov
or
xchg
adcl
adc
lock
mull
and
cmp
cmp
aas
add
nop
outsl
dec
cmp
lods
cmpsb
mov
mov
les
mov
and
fwait
jecxz
jae
sbb
pop
out
mov
in
dec
add
insl
mov
mov
jns
xor
inc
das
mov
and
das
lahf
mov
mov
mov
mov
stos
dec
rcll
jge
js
lea
push
mov
loop
xchg
stc
sbb
xor
inc
into
test
subb
xchg
mov
mov
fwait
jnp
and
icebp
push
cmp
xor
rep
aaa
repnz
add
mov
sub
and
jbe
jno
push
imul
sbb
out
gs
dec
inc
xchg
std
mov
pop
push
popa
arpl
jo
or
movsb
sub
addb
and
inc
jno
xchg
arpl
repz
add
ja
movsb
out
mov
push
lods
adc
outsl
mov
jge
and
or
and
fnstsw
and
ret
cmp
cmp
and
mov
inc
cwtl
mov
push
sbb
adc
xor
jnp
dec
lahf
out
mov
insb
in
mov
cld
pop
cmp
or
arpl
and
lods
pop
jecxz
sarl
subl
movsb
dec
inc
jns
aad
sub
ficoms
cmpsl
and
out
xor
push
push
sahf
lods
add
movsl
push
mov
sbb
xor
mov
dec
das
or
dec
xor
cmp
loope
dec
pop
xchg
les
clc
jne
push
aas
xchg
adcl
imul
fstpl
movsl
mov
mov
mov
out
xor
divl
gs
adc
std
shll
add
sbb
inc
data16
mov
and
mov
inc
and
or
aas
lahf
pop
dec
xchg
movsl
rcll
movsb
mov
not
mov
inc
std
lret
lahf
outsl
xor
sbbl
or
inc
mov
cmp
loope
mov
insb
jecxz
sbb
movsl
jl
dec
cmpsl
popa
sub
push
data16
and
icebp
imul
and
push
pusha
out
fwait
lcall
shlb
fwait
popa
mov
xchg
mov
in
cmp
add
or
enter
dec
lods
pop
and
push
mov
movd
and
cmp
sub
sbb
mov
lahf
hlt
mov
sbb
fwait
mov
inc
inc
sbb
pop
stos
and
mov
mul
inc
addr16
inc
pushf
std
movsl
and
sbb
pop
add
inc
and
in
arpl
insl
int3
pop
and
mov
mov
shr
aad
notl
into
and
mov
movsl
movsb
and
jecxz
cmp
sbb
aam
daa
dec
aam
mov
mov
sbbl
pop
insl
fidivl
movb
inc
stos
popa
out
rorl
and
mov
mov
fs
and
outsb
cmp
jns
and
sub
out
xor
stc
and
cmp
pushl
in
lahf
xchg
dec
xor
movsb
lea
movsb
xor
movsl
push
test
push
jne
dec
in
dec
xor
rcrl
or
fcmovne
sbb
andl
shlb
and
push
push
add
stos
std
mov
popf
int3
and
mov
scas
movsb
mov
pop
call
in
movsb
mov
popa
fnstcw
lods
test
add
pop
mov
das
mov
and
fcomip
rcrb
adc
aaa
jge
and
sahf
jb
adc
adc
xchg
push
shll
dec
cltd
fidivl
jecxz
shrl
adc
and
mov
push
and
jne
and
sbb
jns
mov
lock
add
mov
pop
in
fdivl
lahf
popf
xchg
rcl
mov
ret
xor
push
shll
cmc
lds
fistpl
aas
out
xchg
aas
sbb
repz
imul
or
pop
mov
cmp
push
and
pop
mov
enter
cmpsb
sbb
adc
lds
or
mov
mov
fwait
pop
nop
and
ds
sub
test
imul
imul
mov
mov
or
sti
mov
fwait
mov
push
out
and
pop
je
jnp
xchg
cmp
int
sarb
jae
push
daa
ja
xor
and
jge
pop
sub
scas
and
xor
mov
jl
frstor
loope
je
xchg
mov
stos
and
or
sbb
enter
and
sub
and
add
jp
add
jb
and
and
mov
in
push
and
push
adc
inc
sbb
jno
sub
imul
scas
scas
mov
das
js
mov
adc
popa
or
testl
and
jge
test
sahf
cmp
jo
cmp
fdivl
mov
jge
dec
pop
and
cmp
nop
and
pop
frstor
mov
push
jbe
and
lods
test
lcall
imul
loop
mov
imul
mov
pop
and
ss
cmc
mov
xor
addl
pop
sub
pop
lret
sub
into
and
insb
fucomi
mov
xor
cmp
rolb
sub
add
lahf
cmpsb
xchg
lahf
out
and
fwait
adc
and
outsb
daa
pop
pop
fildll
sahf
jno
pop
mov
push
and
and
jl
xor
and
jg
clc
mov
popf
xchg
mov
enter
mov
stos
jns
les
cmp
aas
jle
and
outsb
sbb
fcmovb
sbb
call
add
sbb
add
movsl
push
cmpsl
or
jmp
sbb
pop
js
xor
xor
std
mov
cwtl
cmp
pop
mov
add
mov
mov
inc
insl
ds
and
or
sbb
ds
push
and
test
lock
mov
xchg
cltd
fisubs
push
inc
negb
and
mov
popf
xchg
xchg
outsb
es
adc
mov
scas
les
jns
jmp
repnz
lahf
and
add
out
andl
jno
push
push
cmp
gs
pushf
jno
and
je
pop
dec
popa
push
ret
lcall
cwtl
repz
imul
sar
mov
add
cmp
adc
popa
cmpsl
mov
in
cmpsl
movsb
jle
insb
inc
in
fwait
adc
sahf
out
xchg
in
cwtl
vmovaps
out
cmpl
jbe
pop
dec
pushf
mov
xchg
and
inc
jg
inc
mov
and
loopne
mov
aad
and
mov
or
mov
sar
and
jbe
lds
divl
shlb
push
in
fwait
jmp
mov
push
push
out
and
or
lds
fbld
scas
xchg
and
test
out
out
inc
pop
scas
dec
inc
mov
stos
lcall
and
data16
mov
and
out
sub
pop
movsb
and
jae
bound
sbb
mov
inc
push
das
dec
jno
fisubs
push
int3
scas
insl
repnz
bound
and
push
push
sub
call
and
cmp
into
cmpsl
and
ds
loopne
movsl
jno
stos
popa
stc
cltd
insl
pop
mov
dec
lods
jno
daa
lods
adc
mov
xlat
mov
xor
sub
das
scas
call
sub
inc
lret
pop
push
inc
rcr
sub
and
inc
push
popf
xchg
xchg
das
movsb
adc
add
cwtl
and
fmuls
in
sub
and
cmpsb
ret
fwait
jnp
fldt
jle
pusha
xchg
iret
xor
popa
adc
xchg
lcall
addr16
ret
add
sbb
outsl
imul
or
sahf
js
push
and
mov
inc
test
pcmpgtd
sbbb
sbb
xchg
movsl
jl
jnp
mov
inc
aad
flds
mov
pushf
xchg
nop
out
out
and
rorl
int
pop
dec
sub
shlb
xor
xchg
cmc
popa
mov
cmp
andl
bound
sbb
cwtl
subl
xchg
ficomps
lock
xor
test
and
and
pop
push
adc
daa
mov
cli
arpl
into
mov
and
imul
dec
push
and
arpl
mov
xlat
pop
xor
je
push
cmpb
pop
jmp
pushf
mov
or
mov
in
mov
sbb
shl
popa
mov
mov
or
cmpsb
sahf
add
addl
cli
fisubl
xchg
mov
ja
loop
lods
mov
cwtl
inc
enter
lret
jb
in
notb
insb
das
pop
jbe
dec
or
push
test
fs
adc
frstor
and
ljmp
dec
and
lods
inc
adc
cld
push
insl
xor
push
lahf
and
fsubs
sub
arpl
dec
push
mov
and
and
aad
test
shl
xor
and
fs
or
adc
mov
add
lea
outsl
mov
mov
loop
ljmp
jno
pop
fs
scas
test
frstor
lods
or
inc
mov
xchg
inc
sub
pop
jg
jns
das
push
mov
not
scas
ds
push
dec
mov
xchg
pop
lock
mov
loope
lret
and
iret
inc
xchg
pop
lret
and
leave
bnd
pop
aas
shrl
jo
fcoms
shlb
mov
xor
and
xchg
mov
shlb
lods
push
and
cmp
shrl
int3
popf
add
les
jno
push
and
mov
je
psrad
inc
mov
test
enter
mov
and
mov
mov
mov
loopne
add
out
data16
cs
xor
fnstsw
lods
fnstenv
and
mull
and
jae
sbb
fdivrl
jns
push
lea
jno
xchg
test
jmp
shr
ret
pop
add
mov
out
mov
fwait
iret
and
cmp
pusha
ljmp
sub
into
in
and
mov
inc
insb
inc
xor
adc
sub
loopne
jmp
inc
es
fidivrl
mov
sahf
ss
pop
sub
shlb
dec
scas
cld
str
sub
jecxz
sub
pop
lahf
and
jmp
xor
and
sub
jecxz
mov
jo
fsubrs
and
add
aam
sub
xor
js
adc
movsl
out
and
lret
mull
cmp
popf
rcl
sub
fwait
and
mov
push
pop
lods
sarl
jl
cmp
popf
mov
mov
mov
out
gs
mov
push
xor
cmp
xlat
and
cli
sub
sbb
pop
das
jno
xorl
mov
and
sbb
sarb
movsl
out
mov
sub
sahf
and
cmp
mov
mov
and
pop
fistpll
test
pop
and
outsb
sbb
test
notb
xchg
mov
and
add
inc
pop
add
or
cli
sub
cmp
lea
and
ret
in
sbb
pop
int
test
inc
mov
iret
lahf
cli
and
adc
and
sarb
and
fnstsw
and
outsl
push
sub
jmp
jnp
cmpsb
cld
stos
repz
cs
jmp
imul
or
outsl
and
ja
dec
push
outsb
mov
jns
pop
cmp
push
lock
scas
mov
test
cwtl
je
dec
jne
pop
and
mov
push
idiv
pushf
fsubrp
imul
dec
jmp
push
jle
sub
mov
insl
add
hlt
dec
out
fists
fs
gs
and
cmp
rclb
in
add
and
test
mov
sub
xchg
sarl
or
fstl
enter
and
push
stos
xchg
mov
shll
in
or
mov
in
ds
adc
aas
xchg
mov
jae
and
xchg
cmpsb
cmp
push
cmp
mov
inc
and
lea
dec
push
int3
lods
std
pop
xchg
das
pop
mov
sbb
rolb
xor
out
incl
mov
int3
and
cwtl
jno
jmp
inc
pusha
iret
and
mov
and
mov
jno
sub
popa
jmp
cmp
movsb
mov
in
adc
fwait
insl
cmp
xchg
push
paddq
xchg
inc
andb
fistpl
cld
lock
and
xchg
xor
and
xchg
dec
jno
loopne
stos
mov
pop
add
inc
and
jmp
xor
inc
stc
cs
inc
and
outsb
sub
and
inc
cmp
out
mov
xchg
rorl
mov
push
scas
loop
dec
inc
mov
js
cmpb
aad
out
xor
vpshuflw
std
repnz
add
mov
cltd
and
adc
stos
lds
push
fcoml
popa
cmp
repz
aas
sub
sub
and
xchg
imul
imul
out
aaa
addr16
aas
aas
sub
cltd
popa
ja
clc
cmp
fs
xor
inc
xchg
fstpl
es
aaa
jg
push
and
sarl
and
mov
xchg
inc
xor
pop
cwtl
adcb
aas
aad
movsb
inc
push
adc
push
push
orl
add
adcl
loopne
cmp
enter
push
cmp
jnp
pushf
jae
inc
aad
rolb
push
fisubs
ret
movl
xlat
xor
test
scas
cmpsb
lods
sub
and
or
ljmp
jns
shrl
lcall
fsubl
gs
popa
xor
rorl
push
mov
mov
and
inc
std
mov
add
lods
pop
push
and
inc
lret
pop
mov
inc
stos
test
pushf
dec
in
ret
and
ret
ljmp
lock
pop
into
xchg
popa
daa
mov
in
xor
jnp
popa
fcoml
test
inc
mov
arpl
xchg
xor
roll
and
call
cwtl
aaa
das
mov
popf
lcall
xor
inc
fidivrs
and
mov
jbe
inc
pop
pop
fadds
sbb
mov
in
popa
or
inc
pop
mov
xchg
mov
leave
popa
xchg
daa
pop
aam
cmp
scas
cmp
push
inc
js,pt
ljmp
jmp
jnp
imul
and
insb
daa
arpl
sarl
adc
and
sbb
mov
inc
loope
xchg
and
out
add
cwtl
inc
mov
out
mov
test
adc
sbb
dec
jno
movsb
xchg
fidivrs
push
add
shll
movsl
ds
stos
xchg
cli
sbb
dec
pushf
mov
add
push
lcall
cmp
dec
push
insl
or
in
adc
sub
xor
or
and
fs
in
imul
jle
add
ja
and
insl
bound
shl
out
popa
fs
adc
jae
adc
sbb
pushf
mov
repnz
popa
ds
out
mov
push
mov
mov
aas
sbb
leave
loopne
test
stos
je
cmp
mov
movsl
and
inc
sbb
mov
xor
daa
xor
and
and
sbb
lahf
sub
icebp
or
cmp
add
movsb
insl
push
mov
pop
loop
out
xchg
lods
mov
in
mov
jns
aam
lcall
and
xchg
push
aas
sub
inc
jne
pop
mov
out
or
into
mov
lods
test
int
sub
pop
shll
sti
jno
aam
mull
inc
sub
mov
mov
test
and
cltd
or
and
call
cs
and
out
xchg
and
cmpsb
repz
imul
scas
and
test
push
fistpl
cwtl
add
mov
and
xchg
clc
mov
repz
xor
insb
mov
fsubrs
sbb
lret
pushf
pop
or
dec
sbb
xor
cmp
jp
imul
jnp
and
in
js
push
push
mov
sub
addr16
out
cltd
mov
dec
gs
in
push
and
popf
adc
fists
aas
out
fildl
test
push
sahf
shll
fs
cwtl
pop
and
sahf
mov
sub
jl
jg
emms
adc
imul
je
ficoml
daa
push
mov
shlb
mov
push
mov
xor
pop
jmp
mov
xchg
mov
mov
mov
and
lret
lds
push
sub
or
test
mov
fcoms
dec
popf
lods
push
popf
inc
sahf
and
test
and
in
mov
and
fs
mov
push
or
shrl
xchg
xor
xchg
inc
int
xor
loopne
out
fiadds
and
inc
loope
add
jo
std
jmp
iret
or
push
push
mull
int
test
repnz
lretw
xchg
mov
cmc
lods
test
cmp
xor
and
mov
daa
pop
pop
pushf
push
and
incb
pop
or
out
fnsave
andl
xchg
popa
pop
add
mov
adc
xor
cwtl
and
sub
imul
dec
mov
fwait
movsl
idiv
mov
push
out
mov
adc
fisubl
and
in
sbb
pop
in
inc
xor
and
clc
fbld
ss
lahf
arpl
mov
xor
and
mov
jo
and
sub
insl
movsb
jecxz
inc
lret
jmp
add
fmull
loopne
or
aad
sbb
int3
adc
popf
into
xchg
or
inc
mov
mov
gs
adc
and
icebp
clc
jae
cld
shll
xchg
sub
leave
dec
mov
pop
xchg
insl
adcl
lock
sti
xor
gs
push
movsl
inc
inc
jmp
popa
popa
outsb
leave
aam
sub
stos
sub
cmp
jne
cmpsb
movsl
mov
int3
scas
sbb
inc
mov
pop
pop
stos
add
and
test
popa
out
push
and
mov
xor
and
pop
cmp
fnstcw
inc
popa
sub
push
scas
add
fcmovnu
sub
sub
sahf
cmp
fcompl
daa
stos
jge
and
pusha
cmp
or
and
jle
and
pop
mov
movsl
mov
sub
or
and
xor
mulb
pop
add
jno
push
mov
and
and
mov
pop
xchg
cltd
fistps
push
and
sub
mov
adc
cltd
movsb
jg
int
mov
and
cmp
ret
outsl
stos
lods
and
adc
sbb
ss
and
mov
lret
subb
fiadds
push
cmp
mov
add
and
outsl
mov
jae
xchg
push
sub
pop
pushf
popf
andb
jmp
scas
int
mov
lods
ret
push
movsb
cli
andl
icebp
xor
pop
fcmovnbe
xchg
adc
and
incb
cli
mov
mov
or
ret
popf
rcr
stos
mov
movsb
push
or
les
and
mov
mov
xchg
or
inc
and
sub
aam
imul
inc
icebp
cmpsl
lds
es
inc
out
sbb
nop
sub
pop
lods
orl
imul
jne
ljmp
leave
mov
fsubrs
addl
leave
subl
lds
inc
xor
xchg
outsb
fsts
imul
push
push
sub
movsl
leave
test
xchg
and
loope
das
and
fcompl
dec
movsb
je
sahf
mov
mov
inc
add
mov
pop
xor
mov
xchg
and
mov
aas
lcall
sub
and
mov
jl
int3
test
enter
push
data16
mov
cwtl
std
lods
rol
arpl
iret
js
mov
movsb
or
add
sbb
pop
orl
xchg
and
nopl
mov
cmp
and
popa
je
int3
inc
push
adc
aaa
adc
cmpb
out
mov
fsubs
and
push
and
fstps
inc
xchg
jnp
movsb
and
push
and
adc
hlt
mov
lods
in
dec
pop
push
repnz
and
sbb
mov
sub
fdivrl
dec
cmp
sbb
xchg
fildl
and
mov
pop
je
in
fisubs
push
jg
sarb
stc
cmp
mov
sti
cwtl
sbbl
std
inc
jo
cmp
push
mov
add
push
xor
and
rcr
adc
mov
jmp
out
and
or
and
cmovo
addr16
and
mov
ret
pusha
jno
test
xchg
mov
cwtl
cltd
and
mov
and
repnz
mov
int
sub
and
xchg
incb
movsl
inc
test
in
push
sbb
clc
sub
jge
cmp
vpmacsdqh
mov
in
jns
sbb
cmpl
jo
sti
pop
movsb
push
lods
cwtl
sub
hlt
mov
cmp
ret
in
mov
push
xor
dec
cltd
jnp
dec
jge
icebp
and
inc
sub
fisubs
lea
scas
daa
fcomip
adc
pusha
mov
out
loope
das
cli
mulb
out
mov
jle
clc
xchg
push
hlt
in
cmpsl
ror
outsl
aaa
shlb
cld
mov
pop
ficomps
adc
sub
roll
popa
mov
negl
and
xchg
push
mov
sub
aad
and
in
call
popf
outsb
jns
sbb
fbld
mov
ja
and
int3
les
call
shlb
xor
pop
gs
lret
and
out
shl
into
cli
push
and
push
mov
pop
and
mov
inc
mov
and
adc
das
mov
out
mov
and
fisttpl
mov
cmp
or
icebp
loope
jg
jl
lret
add
mov
in
out
xchg
mov
and
outsb
or
mov
fs
in
icebp
adc
adc
popf
test
cmpsb
sub
aad
xor
and
scas
rolb
xchg
test
sub
out
mov
mov
movsb
cmp
adc
xor
scas
out
test
and
clc
inc
pushf
and
mov
lock
call
dec
stc
jge
lahf
hlt
lret
and
int3
mov
pusha
inc
sahf
and
pop
dec
je
push
ljmp
jge
mov
sahf
insl
sbb
xchg
and
jecxz
mov
and
aam
sub
push
push
js
rcl
sub
xchg
cmp
test
pop
movsl
scas
add
mov
test
inc
int
pop
and
data16
dec
mov
and
movsl
fsubrs
xor
xor
and
fcompl
std
dec
jle
lods
je
fnstsw
mov
popa
popa
sbb
jb
jno
and
arpl
cmpl
cwtl
cld
and
hlt
repz
push
daa
and
xchg
test
shrb
clc
push
pop
movsb
pop
pop
mov
inc
pop
ds
add
into
push
push
add
and
mov
jo
sarb
jmp
mov
cmp
pop
lahf
dec
xchg
test
out
push
movsl
lret
or
and
or
mov
xchg
mov
lods
xor
jp
and
xorl
stos
jae
test
jecxz
dec
jmp
fstps
stos
nop
ret
adc
and
aaa
and
iret
mov
and
xchg
sub
lods
ficoms
inc
test
shr
inc
insb
push
imul
pusha
rep
mov
xchg
mov
insl
orl
and
outsb
mov
mov
jmp
push
stos
jns
shll
inc
inc
sbb
push
cmpsb
xor
pop
push
popa
lds
mov
jb
sub
push
and
push
adc
xor
fwait
mov
mov
vmwrite
pop
enter
and
mov
and
xchg
int3
lods
cmp
mov
std
and
popa
pop
mov
add
int3
fs
lret
add
test
sub
xlat
pop
aas
fcmovnbe
and
sub
mov
jmp
sub
mov
test
xor
lock
sub
mov
adcl
dec
stos
and
inc
repnz
loop
add
dec
leave
gs
into
das
cmc
xchg
popa
test
push
out
mov
mov
pop
movsl
lock
lock
sahf
insl
aad
mov
jb
call
dec
add
dec
aaa
push
shll
mov
push
dec
in
xchg
ljmp
mov
iret
mov
loopne
cld
xchg
jo
je
pop
sarb
xor
and
lcall
sbb
enter
jbe
into
cld
and
sbbl
adc
ret
and
jecxz
pop
mov
leave
dec
lret
sub
fbld
xor
and
adc
push
and
insl
enter
pop
loop
xor
call
xor
mov
push
sahf
and
cs
mov
mov
popf
and
xor
sub
inc
inc
push
mov
mov
in
sub
cltd
cwtl
sbb
mov
loop
inc
lds
push
cmp
scas
xchg
pop
into
jnp
es
pop
pop
dec
dec
in
mov
int
fwait
mov
repz
cmp
mov
and
xchg
mov
and
adc
and
push
fiadds
aas
sbb
inc
xor
cwtl
dec
adc
and
pop
jno
aaa
fs
call
ficoml
movsb
mov
mov
fstps
and
adc
scas
push
shlb
mov
adc
jle
mov
add
mov
fwait
mov
movsb
ret
adc
cld
mov
in
add
sbb
je
mov
push
and
xor
jge
fwait
mov
and
in
ljmp
bound
xor
sbb
in
cwtl
cli
pusha
push
and
jne
xchg
mov
and
mov
std
dec
imul
insl
pop
inc
adc
test
scas
mov
xor
pop
arpl
mov
or
or
cmp
iret
and
mov
movsl
js
aas
sub
xor
aad
cmpsb
shrb
xchg
pop
push
clc
scas
mov
pop
inc
popa
push
pop
adc
repnz
fsubs
jp
mov
jbe
or
jl
sub
adc
xlat
lods
enter
rorl
sub
icebp
inc
shrb
xchg
stos
aaa
and
jno
repz
andl
test
push
inc
inc
aam
mov
sub
lea
int
or
nop
and
jg
pop
sub
or
inc
lods
xlat
in
add
mov
mov
loop
adc
and
and
jecxz
shrl
mov
movsb
ljmp
roll
and
mov
mov
adc
and
aam
mov
xor
push
cmp
testb
in
mov
push
hlt
mov
andb
mov
mov
lcall
and
push
je
popf
outsb
xor
mov
xchg
jecxz
and
cmp
or
in
aas
popf
mov
mulb
mov
stc
and
mov
sub
repz
xor
sub
loopne
and
pop
fstl
sbb
add
mov
repnz
nop
mov
push
cmpsl
lcall
mov
testl
mov
lret
mov
cli
sbb
or
xchg
sub
shrl
movsl
add
mov
push
pop
test
and
les
mov
sbbb
int
xchg
dec
or
js
out
add
fxch
mov
imul
jne
and
or
ret
nop
adc
push
push
hlt
add
sbb
mov
imul
sub
mov
fsubl
loope
loop
loope
fistpl
push
andl
outsl
sub
sbb
xor
mov
push
push
rcll
adc
and
test
push
loop
orl
mov
rolb
arpl
andl
loope
cli
imul
jns
mov
js
ret
clc
and
fadd
dec
aam
lcall
aad
cs
mov
sub
mov
and
dec
outsl
fbstp
mov
sub
popf
loopne
xchg
mov
aas
xchg
std
in
and
dec
push
add
xchg
and
pop
mov
dec
and
aas
and
cmp
cmpsb
fidivs
xchg
jno
fsubl
inc
add
jmp
xchg
and
fcompl
sbb
mov
and
and
jmp
stos
adc
mov
pushf
jmp
leave
stc
add
repz
nop
imul
adc
stos
xchg
stc
sub
and
sub
dec
mov
pop
imul
push
popf
mov
xchg
inc
xchg
and
rclb
daa
dec
mov
rolb
dec
std
push
sub
add
in
imul
adc
add
dec
xchg
cmp
imul
loopne
xchg
gs
imul
xor
xor
xor
xchg
fsubrl
mov
in
into
mov
repz
jecxz
or
or
fnsave
pop
mov
push
mov
rorl
push
cld
pop
stc
adc
idivl
cmp
test
and
cmp
outsb
adc
mov
fucom
rorb
dec
sub
sub
jle
shll
mov
bound
xorl
mov
xor
lea
lds
iret
cli
jno
mov
hlt
or
jl
xlat
stos
movsb
sub
and
in
shll
mov
mov
out
pop
fnstenv
push
mov
in
mov
es
insb
popa
add
add
xchg
and
lahf
cwtl
xor
cmp
pop
loop
push
adc
cmpsb
sub
xchg
sub
mov
cmp
xchg
fsubs
pop
cmp
or
stos
mov
movsb
push
and
pop
aas
xlat
jecxz
cmp
and
mov
xor
les
popa
jno
cmpb
lock
and
mov
cmp
in
lds
inc
dec
movsb
std
and
sbb
leave
fcomip
and
cmp
fsubl
pop
arpl
jbe
pop
es
mov
push
and
sbb
xchg
push
rcrb
and
xchg
xor
cli
mov
jl
dec
jne
cmp
inc
lods
and
xchg
pop
inc
pop
into
dec
repnz
adc
sub
mov
setnp
push
lea
fs
shll
or
sub
push
pusha
clc
push
or
aad
cs
loope
and
ja
ret
xchg
mov
dec
ljmp
sbb
xchg
jne
test
add
addr16
in
aad
fisubl
jmp
mov
sbb
or
int3
ljmp
clc
mov
dec
cltd
popf
arpl
lcall
fisubs
add
jo
std
and
add
or
lret
add
mov
jl
lahf
out
mov
popa
dec
lea
loop
and
jg
and
jle
ds
mov
je
gs
iret
rcll
out
roll
ja
mov
leave
push
inc
fstl
mulb
sub
push
sti
and
xchg
push
mov
out
xchg
inc
inc
pop
jo
pop
andl
xor
pop
outsl
and
int3
nop
cli
movsl
push
or
lcall
sub
sub
fdivl
and
inc
stos
xchg
and
push
xchg
and
shl
inc
adc
sub
and
lds
inc
movsl
sub
das
loope
pop
mov
add
and
sbb
xchg
mov
jbe
cmp
jb
inc
fisubl
and
repnz
adc
popf
aas
mov
fwait
insl
push
mov
pop
aaa
xchg
jb
loope
popa
and
je
sti
pop
mov
js
frstor
mov
jnp
sbb
loopne
cmp
pop
std
xlat
lods
sbb
and
dec
cmpsl
sar
ja
std
jnp
pusha
inc
lcall
movsl
orb
and
and
inc
jecxz
cmp
push
mov
mov
cmpsl
test
ss
adc
stos
scas
js
test
lret
xchg
out
adc
clc
sbb
fwait
add
test
shrb
andl
xchg
and
vmwrite
and
mov
mov
icebp
add
sub
pop
pusha
cmp
pop
dec
repnz
mov
pop
mov
vshufpd
inc
dec
sbb
rcl
push
push
sub
xchg
test
aad
jns
stc
dec
dec
and
test
adc
and
popf
rclb
dec
and
imul
pop
adc
mov
fstl
fsubl
jae
adc
mov
mov
sub
sbb
fcmovnu
ret
mov
pop
ljmp
shlb
scas
pop
push
cmpsl
mov
lea
das
lahf
lcall
dec
jb
divb
mov
notl
loop
jecxz
icebp
or
and
jmp
jns
pop
cld
ret
xor
call
cmp
mov
rcr
ljmp
ficoml
and
cmp
inc
sub
clc
and
outsb
jp
pop
cmpsb
sbb
jbe
jg
icebp
xchg
out
pushf
and
xchg
out
fsubrl
mov
cltd
aam
insb
sahf
and
jp
adc
cli
int
mov
es
and
imul
dec
push
and
xchg
cld
add
pop
and
mov
push
sub
mov
repz
mov
mov
inc
loope
inc
nop
cmp
js
insl
mov
xlat
dec
lret
stos
and
scas
push
mov
cs
xchg
adc
mov
ss
sub
and
fnstcw
push
lea
xchg
sub
mov
xchg
sub
je
aas
sub
out
test
and
in
and
popf
aad
pop
icebp
sbb
and
shlb
add
dec
mov
mov
adc
pop
loope
fwait
push
cmpsb
mov
out
and
adc
inc
xchg
stos
test
and
push
mov
mov
push
outsb
cs
ljmp
pop
and
mov
adc
scas
cmpsl
hlt
test
popa
cmpsl
dec
mov
add
xor
pop
faddp
sahf
xchg
and
enter
xchg
lods
push
adc
lret
sbb
into
insl
sub
jno
aas
push
leave
rcrl
xor
and
bound
sbb
mov
enter
push
and
cli
cmp
xchg
and
jnp
enter
movsl
dec
je
dec
fbld
fadds
mov
hlt
test
or
dec
dec
lahf
out
and
push
mov
lahf
cltd
and
addr16
pop
xor
sub
dec
cmp
jl
cmpsl
and
jne
sbb
cmp
xchg
leave
and
ret
and
and
sub
pop
out
inc
mov
cmpsb
fbld
shll
je
or
xchg
xchg
clc
arpl
lahf
xchg
pop
sub
xchg
cmp
mov
inc
dec
pop
xor
adc
jecxz
cmp
out
gs
cmpsl
xchg
orl
mov
dec
call
and
cmp
cmp
pop
scas
mov
loope
imul
and
sbb
xchg
mov
cmp
add
clc
mov
or
lods
cmp
movsb
inc
mov
mov
push
stos
jo
inc
pop
xor
jne
fsubs
push
jb
mov
mov
jns
pop
inc
loopne
sbb
lods
sbb
popa
cltd
andl
mov
fcmovnbe
push
mov
inc
jmp
add
or
dec
mov
inc
cmpsl
sti
cmp
add
js
sub
adc
int
hlt
xchg
mov
or
mov
add
and
lret
lahf
xchg
and
mov
sub
push
jg
fsubs
push
aaa
xchg
shrb
popa
aaa
and
xchg
rcrl
xchg
cmp
pop
mov
aaa
dec
mov
frstor
cmp
inc
outsl
iret
push
and
lds
sahf
aad
sub
adc
subb
shll
lock
popa
inc
add
ljmp
jnp
adc
pop
mov
sub
push
sbb
adc
push
rcl
mov
dec
int
dec
push
and
dec
mov
push
push
outsl
xlat
lea
jb
clc
mov
jnp
mov
and
cmc
inc
mov
inc
cmpsb
into
pushf
loope
jle
jl
jae
lea
fsubs
scas
aam
addr16
in
loop
push
popw
std
and
xlat
push
hlt
jmp
stos
addl
sahf
xchg
cltd
sub
mov
enter
inc
pusha
and
push
push
pop
movsb
hlt
cmp
xor
stc
fdivl
xchg
or
fs
icebp
stos
and
int3
xor
cmp
adc
aas
js
xchg
xchg
and
ret
add
sub
pop
jae
lret
push
out
lods
sbb
cmpsl
rcr
and
daa
pop
ja
and
es
jbe
sbb
sahf
imul
and
fsubs
inc
mov
xchg
loope
mov
xchg
adc
and
aad
sub
lock
js
cld
ror
call
movsb
and
scas
cmc
mov
test
das
jg
into
inc
loop
mov
dec
imul
repz
xchg
add
jge
daa
test
outsl
and
cmp
mov
and
arpl
adc
ret
stos
outsb
add
dec
mov
cmp
adc
loope
dec
mov
cmp
mov
imul
xchg
rcr
sub
subl
mov
cmp
pop
lea
and
jmp
fwait
jmp
rolb
das
mov
cmp
and
pop
mov
lahf
mov
mov
dec
mov
and
pop
shl
lock
inc
or
lods
out
aas
and
mov
and
and
mov
jmp
inc
add
test
push
popa
sbbl
mov
incl
mov
push
dec
fcomip
stos
jo
sub
and
adc
mov
xchg
xchg
cli
sti
push
sub
loop
cmp
repnz
cwtl
jg
dec
popf
std
sahf
enter
and
clc
sub
adc
cs
cmp
mov
loop
jo
dec
shlb
xchg
dec
pop
ja
neg
jno
push
loopne
jmp
xchg
cmp
jge
mov
push
lea
enter
push
pop
push
cwtl
cmp
mov
sub
push
or
loope
frstpm(287
adcb
xchg
cmp
push
out
stos
mov
int3
dec
lret
fldt
andl
mov
sti
adc
and
fs
jmp
call
and
test
stc
add
cmp
sub
popf
adc
mov
je
and
js
idiv
pop
popf
jecxz
outsl
xchg
or
and
cmc
jp
ret
and
in
push
icebp
push
add
adc
mov
xchg
mov
xlat
je
fwait
aad
and
cld
cli
add
scas
cltd
pushf
data16
negb
push
mov
mov
std
pop
data16
xor
jns
andl
stos
pop
mov
int3
mov
ljmp
inc
add
and
and
xchg
nop
sarb
lods
cmp
xchg
sbb
adc
ds
mov
dec
or
jl
mov
cli
adc
push
xor
cmp
dec
and
insl
je
fs
stc
popa
cs
pop
xchg
inc
and
mov
fdivrl
loopne
mov
xchg
jecxz
sub
shlb
jo
aam
fists
inc
mov
stos
mov
mov
orb
push
push
shlb
mov
rorl
lds
mov
sahf
out
xchg
mov
movsl
dec
sub
inc
and
das
add
int
addl
jg
dec
jmp
ret
or
mov
stc
mov
mov
cltd
and
mov
out
sub
push
and
sbbb
jle
sbb
mov
cltd
mov
lock
adc
jbe
mov
mov
jmp
lock
aad
sub
mov
xor
mov
and
sti
ret
repz
mov
cmpsb
jns
push
sbb
jp
xchg
imulb
mov
xor
aaa
and
sub
lds
loopne
xor
xchg
repnz
and
xor
mov
rol
popf
xor
imul
pop
lods
popf
sub
loop
scas
pop
fbld
and
mov
mov
and
pushf
ja
stos
pop
mov
jl
outsl
xchg
dec
clc
pop
scas
and
xchg
loope
jge
aas
ret
or
and
mov
xchg
cmpsl
iret
add
ja
push
sub
and
lcall
int3
orl
and
movsb
sbb
and
mov
and
or
and
ret
and
popa
fwait
jmp
jb
mov
jecxz
in
mov
stos
adc
add
xlat
add
mov
int3
sub
cltd
dec
and
push
cld
mov
dec
cli
cmp
rorb
dec
mov
push
lret
and
inc
movsb
or
mov
call
cwtl
shll
in
lcall
cmp
cmpsl
and
bound
and
mov
loope
pop
sub
repz
jne
and
out
loopne
and
mov
and
shll
and
jne
mov
rclb
and
fadds
jmp
and
push
xor
test
add
push
dec
lds
and
call
xor
and
sbb
test
push
lea
icebp
and
ss
and
pop
neg
cltd
pop
and
mov
mov
pop
fidivs
out
ja
xor
dec
add
data16
mulb
popa
xor
inc
and
stc
mov
lods
add
cwtl
sbb
jno
jecxz
and
jge
icebp
pop
clc
adcl
sub
movsl
pmullw
jp
and
mov
nop
outsl
cs
and
lea
dec
repz
insl
in
loopw
and
pop
mov
pop
sub
adc
fsub
and
push
mov
xchg
jmp
add
mov
outsl
std
lds
mov
vpshlq
sbb
and
mov
mov
loope
pop
test
add
aaa
insl
out
jo
sub
mov
mov
test
lcall
inc
xor
notl
ss
sub
xor
rorb
test
inc
das
sub
fwait
add
xor
sub
ljmp
aas
sub
ficomps
and
pop
mov
je
mov
xor
popa
ret
movsl
adc
in
pop
pop
test
and
push
or
xchg
mov
jmp
adc
insl
popf
adc
rolb
aam
cmp
push
inc
mov
daa
push
adc
jbe
push
xlat
push
test
stos
xor
and
movsb
pop
andl
dec
lods
add
js
addr16
and
rorb
test
rcrb
movsl
insl
inc
loope
and
lahf
shll
sahf
and
sub
jns
enter
imul
popa
insb
mov
dec
mov
pop
test
push
mov
mov
ret
repnz
push
pushf
xor
enter
dec
fsubs
mov
xorl
shll
cmp
jge
and
popa
aad
jns
and
jae
push
rcr
les
and
xchg
mov
and
mov
sub
repz
lret
sbb
push
je
jmp
clc
jg
xor
sbb
aas
push
cmpsl
jle
mov
in
fisubrl
shlb
enter
out
into
or
jae
dec
fbld
lahf
xchg
xchg
push
test
scas
sti
jecxz
fadd
sahf
outsb
and
das
pop
test
test
and
shl
mov
insl
adc
loope
rep
mov
pop
and
inc
lcall
fnstenv
and
ds
add
push
xchg
loopne
dec
inc
fdivs
and
cmp
inc
mov
inc
aam
xor
and
adc
xor
and
xor
icebp
les
in
jl
outsb
push
mov
lods
sbb
jmp
xchg
bound
imulb
mov
and
aad
xchg
mov
add
stos
fisubrl
mov
andb
mov
cmp
in
and
fstpt
ja
shll
adc
mov
test
xorl
lods
in
inc
sub
mov
sbb
sub
mov
hlt
cmc
push
jle
orl
xchg
or
inc
and
sbb
out
xchg
loop
pop
push
dec
xchg
and
sub
fwait
mov
jge
and
aaa
aad
cmp
pop
cmc
mov
pop
lcall
mov
sub
dec
and
jge
icebp
imul
inc
mov
mov
or
ljmp
shll
popl
push
inc
mov
popa
push
and
sbb
sahf
mov
lds
insb
mov
std
sahf
add
daa
out
and
jns
addl
ret
mov
or
push
fldz
and
test
cltd
xchg
add
in
cld
add
fwait
cmp
jmp
fstpt
mov
cli
pop
pop
jb
faddl
and
add
xor
popa
lods
subb
out
cltd
jge
out
pop
and
and
add
sub
ja
popa
dec
loope
xor
mov
adc
mov
and
js
push
cltd
cli
sbb
add
out
cmp
dec
sub
dec
inc
in
push
les
adcb
aaa
mov
sbb
xchg
in
jno
in
adc
mov
mov
sub
outsl
cmp
sahf
mov
sub
gs
jo
lahf
popf
add
xchg
mov
and
cmp
movsb
in
mov
stos
nop
test
fwait
sbb
inc
fidivrs
add
or
jg
xchg
in
leave
lock
and
mov
push
insb
pop
into
and
lret
in
mov
sub
mov
jo
sub
cmp
scas
faddp
push
and
outsb
xor
aad
pop
mov
xor
repnz
enter
cltd
pop
adc
std
andl
xchg
jecxz
popa
movsb
fimull
shlb
call
sbb
lret
ljmp
dec
pop
sbb
push
and
cmp
inc
inc
mov
cltd
sbb
cli
mov
or
pop
lahf
dec
mov
lock
std
lahf
jmp
ljmp
mov
adc
andl
inc
sbb
lahf
and
shl
loop
pop
lds
scas
push
xlat
mov
inc
loop
ret
mov
stc
pop
pop
lods
iret
sbb
mov
dec
fsubrl
daa
popa
sub
jb
pop
xor
mov
push
sub
out
and
adc
stos
cmp
mov
mov
cli
cmpsb
jle
out
mov
lds
fwait
or
mov
sub
in
xor
gs
jge
jp
dec
push
movsl
loopne
add
popa
and
xchg
push
mov
xchg
jmp
pop
hlt
stos
fisubs
sub
cwtl
pop
and
sti
cmc
dec
popa
sub
mov
icebp
iret
scas
sub
mov
dec
pop
and
cltd
stos
dec
stos
pushf
mov
movsl
ds
xor
mov
jecxz
outsb
add
arpl
sub
xchg
sbb
lcall
iret
aam
ljmp
popa
mov
inc
inc
pop
int
test
cmpsl
pusha
mov
icebp
das
xchg
imul
pop
rorl
imul
test
push
push
mov
and
call
xchg
lock
and
add
jp
mov
iret
mov
lock
xchg
add
and
xchg
hlt
popa
mov
mov
sub
jle
xchg
xchg
mov
dec
jo
popa
mov
out
enter
and
fdivs
pop
xor
dec
in
inc
jb
cwtl
cwtl
test
lods
push
jo
and
jns
mov
mov
ficoml
adc
ret
push
gs
cmpsb
xchg
pop
and
lods
inc
mov
jmp
scas
ja
add
jo
mov
xchg
or
call
enter
adc
xchg
outsb
jle
xchg
daa
push
cmpsl
mov
and
mov
pop
cmp
fiadds
test
mov
dec
mov
sbb
and
mov
data16
imul
daa
xorl
into
cltd
xchg
and
outsl
arpl
dec
out
sbb
dec
adc
in
mov
mov
ljmp
mov
xorl
les
dec
jecxz
adc
lods
and
mulb
ret
mov
mov
and
add
das
cltd
adc
and
pop
movsb
das
sbb
fnsave
fnstenv
fwait
cmpsb
gs
xchg
hlt
jno
out
mov
mov
iret
loope
push
jae
mov
cmp
dec
into
cmp
inc
fsubs
in
add
out
and
adc
xchg
sbb
cmp
and
push
or
into
mov
dec
sub
and
fwait
xor
sbb
and
pushf
cltd
mov
push
pop
lret
aaa
sub
adc
daa
xor
sarl
lret
test
xchg
sbb
pushf
and
test
addr16
lods
and
inc
xor
movsb
pop
inc
and
pop
in
sub
mov
dec
in
das
and
js
scas
adc
frstor
xor
jo
sbb
rorb
aad
int
sub
ljmp
sti
xchg
jecxz
inc
pop
popa
cltd
lret
fimull
mov
cmp
imull
insl
and
mov
xlat
xor
rcrl
lahf
sbb
popa
pop
dec
out
aaa
lds
sbb
mov
shll
shrl
jnp
in
cmp
test
rep
jmp
mov
or
leave
loopne
clc
cmp
and
enter
stc
aas
scas
adc
pop
stos
jns
pushf
in
mov
and
subb
xor
or
adc
outsb
mov
jge
aas
lahf
cmp
and
jns
xchg
stos
dec
xchg
mov
or
sbb
and
sti
out
ds
adc
inc
mov
xchg
repnz
lock
and
xchg
popa
jnp
mov
loopne
adc
pop
mov
jl
mov
ret
ljmp
and
cld
lcall
cmp
movsb
xchg
in
in
test
push
orl
push
and
bound
shll
inc
shll
xchg
fimuls
and
pop
insl
outsb
add
insb
inc
jg
in
jns
sahf
out
pop
and
sub
push
and
mov
call
arpl
and
movsb
push
jg
mov
adc
cmp
dec
int3
mov
mov
and
dec
cmp
movsb
sbb
sbb
das
and
leave
prefetch
mov
out
push
mov
and
stc
clc
dec
and
pusha
push
xor
mov
loop
push
adc
xlat
xor
fildl
cmp
imul
jo
test
or
mov
ficoms
aam
inc
push
das
aad
pop
xorl
loop
xchg
sbb
push
jg
stc
xchg
mov
add
mov
imulb
adc
jo
dec
and
in
lahf
mov
xchg
repz
ja
mov
dec
and
stos
loope
movsb
dec
outsb
daa
test
xchg
aas
call
push
mov
xchg
pusha
dec
cltd
mov
lods
add
mov
and
sbb
dec
leave
cmp
loopne
push
mov
inc
mov
add
and
ret
outsb
xlat
and
movsb
ja
or
push
out
frstor
and
pop
adc
ss
mov
decl
test
and
pusha
push
inc
movsb
lods
xor
mov
xlat
dec
xor
popf
mov
mov
adc
das
pop
jne
jmp
mov
arpl
or
add
outsl
mov
jmp
or
jo
mov
std
lds
fistpl
inc
js
ja
sub
inc
xor
stc
xor
and
pop
idivl
and
jp
push
or
fcmovnb
rcrl
sbb
or
das
pop
add
cmpsb
jnp
and
mov
stos
xor
movsb
inc
mov
jno
loop
xchg
jno
jp
mov
adc
adc
imul
pop
jecxz
stc
outsl
adc
xlat
jbe
pop
inc
xor
mov
and
and
arpl
jne
and
std
repnz
adc
inc
sub
cwtl
xchg
jge
in
cmpsb
frstor
dec
int3
pop
sub
popa
inc
mov
pop
and
shr
pop
push
ja
and
mov
sub
push
pop
out
mov
cmpsb
xchg
add
fisubrs
lods
and
arpl
xor
mov
js
xchg
sahf
lods
aas
sub
imul
fistps
scas
das
jmp
outsl
mov
movsl
mov
lahf
fldcw
and
add
or
popa
mov
dec
push
mov
mov
adc
popf
cmp
lea
stos
cmp
push
sub
mov
pop
lock
xor
aaa
cmp
pop
or
xchg
in
mov
sbb
mov
ljmp
ds
xchg
cmpl
mov
push
and
rcrl
cmp
and
negl
mov
mov
ds
mov
xor
xor
loope
add
add
subb
in
int3
stc
leave
mov
add
cmc
dec
xlat
mov
iret
pop
jmp
adc
mov
xor
ja
cmpsb
jle
xor
mov
scas
cmpsl
sub
and
sub
leave
int
add
mov
push
adc
jp
and
ret
adc
cs
xchg
fisubl
xor
jno
daa
and
or
and
stos
sarb
jl
and
stos
sbb
and
aas
out
stc
ror
inc
imul
shll
ret
cmp
dec
fmuls
inc
fldenv
push
sbb
mov
xchg
arpl
xor
and
and
xchg
adc
lret
shrb
xchg
adc
fstpl
fcoms
and
iret
pusha
or
push
pop
popa
jge
or
cltd
test
stos
adc
pop
sbb
or
cmp
js
xchg
mov
jbe
std
push
out
mov
xor
mull
iret
and
mov
mov
mov
sarl
or
push
fistpll
push
mov
mov
aas
in
push
js
jmp
pop
xchg
cmp
cmp
cmp
add
int3
lods
cld
je
into
xchg
or
and
in
and
mov
iret
popa
adc
sahf
and
sub
pop
cwtl
fists
xchg
and
sub
sbb
dec
movsb
add
mov
lcall
and
xchg
add
and
pop
dec
iret
pop
icebp
and
mov
pop
hlt
fnsave
and
dec
mov
xlat
sbb
ret
lods
sahf
mov
sub
in
and
pop
mov
fldcw
xlat
adc
andb
jo
inc
or
push
inc
mov
cmp
test
fisubrs
out
loope
fwait
push
cmp
mov
ss
pop
mov
nop
add
rclb
and
and
fldt
ja
or
fdivs
aaa
jns
in
push
es
test
aam
inc
fwait
ret
out
and
das
jl
outsl
or
xor
mov
js
pop
int
fbld
push
sub
push
inc
mov
xchg
mov
in
adc
das
cltd
xchg
sub
arpl
test
sub
jle
addr16
fists
shlb
rcr
outsb
and
lret
imul
jns
daa
lea
mov
push
cmpb
and
push
ficompl
aas
or
movsl
mov
and
das
mov
and
sub
xchg
subl
popa
xor
ret
add
xlat
cs
mov
dec
scas
insl
pop
pop
and
sub
add
add
aaa
or
sbb
adc
mov
add
clc
and
enter
out
inc
inc
cmpsb
mov
js
pushf
popa
cltd
data16
and
mov
push
and
push
mov
mov
sub
test
adc
mov
and
adc
jns
movb
in
imul
js
xlat
lret
and
test
adc
and
sahf
push
in
das
leave
fistpl
ljmp
sub
neg
sbb
stos
aas
mov
sbb
stc
adc
ss
lret
xchg
shl
cwtl
cmp
hlt
aaa
push
mov
cmc
jmp
lock
das
test
pop
inc
adc
pop
and
mov
sbb
popa
sti
push
in
cmc
andl
xor
lcall
lcall
push
and
test
stos
cmp
flds
cld
mov
push
lret
xlat
aaa
not
imul
fucomp
out
out
mov
enter
rolb
fstpt
aas
imul
lods
pop
xchg
ret
aam
dec
call
jg
xchg
sub
mov
jbe
je
mov
dec
mov
int
sahf
mov
jecxz
sbb
mov
repnz
xlat
mov
push
xchg
jge
scas
jne
lea
push
and
outsb
push
and
pop
mov
popa
fcmovnbe
jle
cli
int3
and
int
daa
roll
pop
popa
cmpsb
jo
pop
and
stos
and
std
nopl
push
mov
cld
lcall
adc
mov
pop
pop
and
mov
add
addr16
ficompl
mov
adc
adc
pop
dec
xchg
cltd
xchg
movsb
xchg
cli
cmp
sub
inc
and
stos
mov
xor
mov
push
in
mov
jge
xchg
xchg
ss
mov
repz
pop
mov
cmp
lods
cmp
xchg
push
cs
popa
adc
movl
add
mov
out
or
pusha
xchg
inc
xchg
sub
call
dec
mov
push
cmp
int3
and
mov
cwtl
in
movsb
mov
sub
jnp
popa
pusha
repz
stos
negb
dec
into
mov
scas
push
data16
pop
das
or
mov
neg
xlat
sub
outsb
cmp
setns
test
cwtd
scas
cmc
addb
and
cmp
movsb
incl
mov
sub
nop
cmp
add
mov
jl
lret
inc
ss
and
push
xor
adc
out
push
mov
notb
and
jl
lret
je
rorb
sub
loope
push
std
popa
jp
xor
pushf
repz
jge
fcomps
pop
push
test
popa
dec
xor
andl
xchg
push
push
fstpl
mov
adc
std
add
push
mov
fidivs
scas
jnp
sbb
inc
and
push
movsb
mov
fwait
mov
jge
loopne
and
dec
idivb
dec
sub
leave
jle
and
jge
adc
sub
adc
cltd
jmp
aaa
cmp
sub
movsl
mov
jl
test
aaa
in
out
xor
shr
jns
lock
int
outsb
add
movsb
mov
jnp
xor
and
inc
and
jle
lahf
notb
movsl
and
xor
rcrl
push
xor
jno
dec
jge
pushf
stos
push
mov
lods
ds
test
mov
or
ret
sbb
and
sub
adc
popf
andl
fnstsw
lret
and
outsl
movsl
pop
pop
jns
mov
je
lock
scas
and
and
jge
out
fldcw
popa
test
mov
fisttpll
ret
popf
and
rorl
cmp
adc
sub
and
lcall
push
mov
pop
je
mov
add
ret
mov
cltd
stos
push
mov
subl
scas
and
xorl
popa
int3
inc
outsl
mov
inc
cltd
stos
cmp
sbb
adc
fiaddl
sbb
stc
add
into
movsl
sahf
lods
in
cmpsb
popa
push
adc
repz
bound
mov
lret
sub
mov
xchg
arpl
dec
xchg
sbb
pop
cld
mov
mov
stos
aas
and
sub
call
std
loop
and
mov
and
repz
sbb
notl
jne
imul
jns
inc
shlb
dec
scas
push
add
sahf
mov
movsb
mov
iret
mov
jbe
mov
std
xor
mov
pop
andb
enter
cld
and
jp
mov
and
xchg
xchg
inc
daa
and
jg
andl
ffreep
inc
xchg
or
cmp
push
fcomp
sub
int
jmp
xchg
fsub
addr16
ds
lods
mov
cmp
jne
jp
lcall
mov
xchg
mov
dec
adc
lcall
shr
and
ja
mov
sub
shll
sbb
pop
mov
xchg
sbbl
or
jecxz
adc
mov
scas
push
pop
mov
dec
dec
lea
mov
fs
sbb
and
popf
add
idivb
js
and
pop
xchg
jb
cwtl
xor
sahf
xchg
push
jg
jno
sbbl
cmpsb
aam
cwtl
xchg
imul
and
mov
push
and
dec
cli
cmp
xor
and
popf
test
mov
sub
enter
rol
push
fstp
lahf
test
fs
inc
ficoml
int
fsubrs
and
sub
cwtl
test
mov
add
outsb
cmp
inc
xchg
iret
xor
movsl
popa
inc
fcmove
call
jo
cmpl
cmp
inc
shl
mov
rcl
push
push
leave
std
aas
scas
movsb
pushf
sub
in
sti
cld
popa
mov
scas
and
push
test
xchg
dec
subb
xlat
shlb
mov
dec
cmp
orl
and
idivl
cmp
mov
xor
and
pop
and
jno
lds
repnz
and
ljmp
js
pusha
ficomps
mov
jecxz
inc
and
enter
lock
push
iret
insb
loope
sub
in
out
rclb
arpl
jge
pusha
ret
sbb
and
adc
and
dec
shr
push
xchg
shlb
and
int3
fs
icebp
data16
and
ret
insl
and
enter
jg
ficoms
add
xchg
sbb
cmp
push
cmc
rolb
scas
lods
mov
les
pop
jmp
in
pushf
cmpsl
push
ficoms
jns
mov
outsl
or
std
call
lahf
sti
pop
rclb
jae
icebp
and
repnz
sub
add
sarl
mov
add
and
and
lcall
ss
sbb
mov
mov
adc
pop
xchg
cmp
mov
lret
lea
and
scas
xor
dec
outsl
mov
inc
xchg
je
mov
adc
lret
sti
in
mov
loop
xchg
and
xchg
mov
and
lods
test
loop
cli
and
ficoml
mov
mov
test
push
aad
daa
mov
gs
pop
dec
jae
scas
shr
inc
out
ja
jmp
sbb
fwait
inc
cld
xor
sub
fstpl
outsl
arpl
cmp
or
xorl
mov
xor
aaa
das
mov
push
dec
inc
outsb
imull
mov
dec
jle
mov
and
xchg
xor
jp
lods
and
xchg
mov
inc
clc
cmp
and
jge
cmpsl
daa
popa
inc
out
sub
and
mov
pop
jl
jns
mov
sbb
mov
mov
jmp
pop
in
xor
sub
sbb
movsl
and
xchg
movsb
leave
ljmp
mov
mov
cmpb
sub
cmpsl
cmp
in
push
sub
jge
and
fwait
test
in
arpl
popf
xchg
mov
and
mov
or
sub
and
sub
shrl
and
cmpsl
jle
xor
and
pop
inc
stos
or
into
and
mov
sub
ret
sub
mov
add
jle
sbb
iret
mov
shlb
mov
push
scas
icebp
imul
test
jno
fldenv
cltd
and
bound
and
scas
push
xchg
and
into
inc
sahf
jno
jmp
fstps
or
testl
insb
or
xchg
js
push
adc
dec
cmp
and
pop
lods
push
sbbl
pushf
outsb
pop
mov
jp
sub
je
xor
sub
aam
or
jp
out
stc
out
mov
aad
mov
addr16
and
sub
sub
dec
jne
bound
imul
shll
sub
push
inc
arpl
dec
cmpsb
and
jbe
enter
mov
xor
or
lret
pop
pop
dec
and
and
ret
sub
cli
mull
adc
sti
jecxz
pop
inc
mov
mov
xchg
add
stos
push
sbb
mov
ja
pop
cmpsb
mov
lea
sbb
cmp
pop
ficomps
adc
jno
xorl
xor
inc
out
adc
je
add
pop
and
jmp
mov
and
xchg
xchg
xchg
in
cmp
and
cmp
mov
or
jmp
mov
cmp
inc
icebp
mov
cmp
add
sub
sarl
push
mov
cli
ret
hlt
imul
popf
insl
cmpl
aam
mov
xchg
xchg
andl
pop
es
jmp
pop
jne
and
cmpb
push
ds
into
and
shlb
rol
mov
movsl
add
out
inc
mov
pop
js
pushf
faddl
je
mov
and
push
xchg
js
inc
push
push
fsubl
mov
sub
movsb
enter
andl
ja
sbb
dec
mov
add
dec
addr16
cmp
push
iret
ja
lods
and
andl
and
pop
call
mov
int
sbb
sub
inc
shll
sub
stos
aad
add
fdivs
popf
xchg
ret
push
dec
lock
pop
and
push
pushf
jbe
mov
cmc
sub
dec
mov
movsb
add
dec
mov
fmulp
fldenv
hlt
in
and
sahf
out
dec
jae
and
mov
out
xchg
adc
sbb
xchg
sub
and
mov
or
cmpsb
repnz
adc
xchg
lea
sahf
scas
mov
popa
ficoms
or
jecxz
mov
jne
push
imul
sbb
lahf
adc
xchg
mov
dec
adc
jo
or
lock
and
pop
lcall
mov
mov
divb
test
xchg
pop
sub
mov
nop
sub
push
mov
sub
sub
cwtl
xchg
in
add
popa
or
dec
sbb
ss
lcall
push
movsb
push
xchg
jg
out
movsl
jp
and
jge
shlb
repnz
and
jle
cmpsl
in
sub
push
in
adc
and
cmp
out
lcall
mov
ret
cwtl
movsb
scas
and
ss
push
int
push
and
cmpb
hlt
bound
and
add
inc
fwait
dec
and
ljmp
adc
and
pushf
pop
sub
popf
sbb
adcl
lret
iret
xor
gs
lahf
std
and
jae
out
xlat
mov
lahf
mov
sbb
cld
outsb
rclb
bound
mov
sbb
gs
adc
mov
and
fldt
ja
aad
sbb
sub
jp
and
adc
orl
lods
jns
sbbb
cltd
and
clc
or
add
push
and
outsl
sbb
jmp
les
push
call
dec
fwait
or
pop
adc
lds
movsb
xchg
sti
jbe
pop
lret
sub
jnp
mov
dec
fimuls
outsl
add
cmp
pop
add
mov
mov
cli
sahf
sbb
sarb
andb
inc
shrb
and
fistpll
mov
rcrl
into
xchg
add
and
repz
jecxz
xor
mov
cmp
lcall
popa
js
push
xor
push
jg
popa
mov
fisubrl
xchg
inc
aam
push
jns
push
add
fmulp
cltd
adc
movsb
call
fisubs
sub
adc
jmp
testl
jo
cmpsb
enter
in
mov
lock
dec
cmp
fidivrl
cmp
out
js
xlat
test
pusha
push
mov
mov
push
out
and
mov
pop
push
xor
push
and
loope
int
mov
cli
sbb
sub
dec
pop
mov
and
cmp
add
mov
ret
leave
xor
and
aas
pop
popa
xor
dec
xor
ja
adc
and
or
pushf
jmp
outsb
pop
mov
mov
sbbb
out
push
jle
xor
adc
and
dec
jbe
arpl
mov
stos
dec
loopne
sbb
push
sub
mov
and
dec
out
aaa
hlt
cmpl
and
and
gs
xor
sbb
xor
adc
and
pop
out
mov
push
call
fcoml
add
jnp
out
lea
dec
cmc
xchg
imul
sbb
xor
mov
add
fists
outsb
push
and
push
sub
add
xchg
cmp
xchg
push
out
push
and
sub
outsl
and
ds
fwait
and
lret
mov
aam
ds
addr16
sbb
and
dec
jecxz
ljmp
and
dec
push
pop
push
pop
cli
fnstsw
and
xchg
leave
dec
das
ret
inc
aam
outsl
insb
and
and
xor
mov
sbb
cmpsl
adc
inc
scas
xchg
adc
pop
popa
mov
fistpll
dec
call
cmp
pop
outsb
sahf
jg
roll
pusha
cmpsl
mov
mov
scas
data16
mov
test
mov
mov
pop
lods
sbb
push
and
mov
mov
cmpsl
popa
pop
pop
dec
jl
sub
adcl
and
cmpsl
lds
push
fs
and
inc
mov
and
fwait
add
and
fcompl
test
lock
mov
push
push
adc
inc
ret
lods
cmp
loopne
or
adc
and
bound
cmp
stos
cmc
mov
popa
push
inc
sbb
nop
cmp
movsb
pop
dec
pop
jecxz
pop
and
mov
test
int
ss
xchg
and
push
xchg
inc
xor
adc
gs
and
sub
sarl
and
stos
sbb
push
mov
and
inc
stc
loop
inc
outsl
pop
mov
ds
cmp
xchg
mov
or
adcl
insl
out
inc
cmp
popa
shrb
and
inc
cwtl
fwait
dec
pushf
adc
xchg
push
fdiv
and
xor
and
xor
mov
sub
mov
mov
lods
mov
or
mov
xlat
add
fsubrs
cmp
sub
fninit
fisttps
and
dec
add
mov
std
and
push
lret
mov
lahf
mov
pop
inc
aaa
test
andb
xchg
addl
push
nop
inc
popa
pop
es
and
leave
xchg
xor
in
pop
pop
and
pop
xchg
mov
mov
and
aad
xor
adc
cli
mov
ljmp
and
push
jecxz
cli
cmp
xchg
mov
adc
es
scas
imul
adc
inc
into
lds
mov
mov
mov
test
cmpsb
and
cmp
jmp
orl
movsb
xchg
pop
shr
inc
sbb
inc
dec
sub
jecxz
or
and
insl
mov
pushf
rorb
pop
cmp
pop
stc
cmpsb
rolb
cmp
mov
clc
mov
out
xor
mov
add
and
aam
dec
dec
ds
xchg
xchg
popa
pop
hlt
sahf
and
lret
dec
jg
and
sub
lcall
leave
or
push
and
pop
cmp
mov
mov
xchg
jmp
aaa
and
andb
shll
jle
movsl
jecxz
arpl
xchg
shl
rclb
daa
hlt
cmp
aas
jecxz
push
or
sub
cmp
cld
pop
andb
adc
or
in
and
xchg
add
cmp
nop
xchg
movsl
popf
ret
in
loopne
sub
aas
push
lods
xchg
rclb
push
push
inc
mov
xchg
nop
mov
and
outsb
fstps
imul
in
jbe
adc
mov
out
lcall
mov
pop
mov
mov
and
xor
outsl
nop
aam
and
filds
xor
mov
loop
fcmovbe
mov
xchg
xchg
cmp
sub
pavgb
lcall
inc
cmp
dec
andb
mov
adc
iret
cmc
pop
stos
lret
outsb
insb
sbb
jmp
das
and
insl
cmpsl
loopne
mov
loope
fs
out
mov
add
mov
and
je
bound
dec
insl
aad
test
mov
stc
mov
loope
jmp
adc
xchg
mov
pop
inc
xlat
xchg
lds
sahf
jg
add
pop
lret
mov
and
adc
xor
push
and
std
xor
inc
addr16
and
fdivr
mov
mov
in
stos
add
imul
dec
xchg
jae
sbb
lock
xchg
push
xlat
idiv
xor
or
pop
sub
inc
sbb
mov
and
das
lret
arpl
mov
ja
sbb
out
and
and
mov
out
adc
and
sbb
fsts
lea
or
or
cltd
popa
ja
sahf
mov
mov
jne
cmc
fistl
cwtl
icebp
mov
and
jno
dec
pop
mov
stos
and
sub
insl
movhps
xchg
and
mov
jae
and
int
movsl
pop
stos
and
cmovae
ret
sub
and
shl
sbb
scas
inc
fldenv
repz
and
push
das
adc
test
mov
xor
add
jge
popa
clc
shlb
mov
jns
mov
mov
adc
stos
jns
and
sub
mov
rorl
mov
jae
and
push
dec
mov
mov
fwait
push
jne
xlat
push
and
push
pop
inc
or
and
sbb
and
or
aad
and
mov
sbb
pop
push
lods
int
cltd
xchg
and
fiaddl
shrl
mov
and
lret
std
jne
outsl
divb
pop
push
test
sahf
jno
or
adc
gs
lds
adc
sbb
adc
pop
and
sub
and
sbbl
lock
mov
shll
les
icebp
je
lcall
lds
aaa
push
cli
xor
scas
inc
inc
sub
mov
mov
jae
movsb
mov
pop
arpl
aad
or
cmp
and
fidivrl
or
sub
adc
or
mov
movsl
cwtl
shlb
cwtl
mov
push
sub
cltd
lcall
or
xor
and
fsqrt
pop
push
mov
inc
and
call
mov
push
and
movsb
cmp
pop
pop
sub
add
xor
popf
and
mov
pop
ljmp
xor
cs
pop
shll
adc
pop
stos
out
add
pop
inc
and
mov
fisubs
xchg
lea
push
cmp
mov
pop
aaa
push
jge
fwait
jmp
aam
int3
mov
shlb
pushf
and
add
lcall
inc
mov
cltd
and
aad
les
push
popa
pop
cmpl
push
lods
xchg
sbb
xor
mov
out
or
or
cmp
adc
ja
jne
mul
and
and
imul
and
xor
pop
hlt
and
mov
mov
orb
jp
das
jns
dec
inc
push
shlb
imul
out
gs
sahf
nop
call
imul
lods
ds
clc
jg
xchg
lea
popa
inc
and
add
inc
cmp
push
jno
je
test
or
test
fwait
int3
aaa
mov
ds
pop
test
and
iret
jns
data16
and
test
cmp
cld
pop
pop
mov
frstor
dec
push
fsubr
jecxz
pop
fwait
xchg
movsl
test
push
push
or
cwtl
and
add
repnz
dec
xchg
mov
jb
jno
sarl
insb
and
jns
mov
xor
cmpsb
stos
or
xlat
mov
clc
sub
fcmovne
push
inc
into
xchg
xor
inc
bound
ds
mov
jns
loopne
and
or
int3
mov
js
cmpl
mov
popa
out
data16
pusha
daa
cmp
loopne
fs
es
sbb
and
shl
popf
test
cmpsb
insl
gs
stos
xchg
repnz
xchg
or
inc
js
in
and
xchg
push
mov
dec
ss
into
jo
lea
and
mov
cmp
popa
mov
xchg
outsb
pop
cld
and
mov
add
jp
test
insb
notb
mov
inc
scas
scas
sub
jge
jp
mov
test
mov
jg
xchg
aam
fcmovnu
jle
push
stos
popa
dec
mov
dec
mov
push
subb
jle
inc
jecxz
insb
xlat
pop
sub
and
nop
push
lea
insl
mov
into
movsb
clc
aas
loopne,pn
orb
xor
pop
push
sbb
and
lods
leave
ss
lea
inc
sbb
pop
xor
sbb
add
nop
jecxz
jmp
scas
lock
push
ss
lret
cli
mov
pop
xchg
jns
je
and
icebp
lods
sbb
push
push
jns
sti
repnz
xlat
and
insl
adc
push
scas
xor
inc
cmpsb
orl
fsub
popf
jmp
push
mov
mov
push
and
adc
lock
jg
sahf
fwait
stc
call
adc
dec
repnz
sub
les
in
and
pop
cmpb
and
out
mov
mov
cs
adc
jge
sub
hlt
jno
jo
sub
mov
lahf
or
adc
sbb
pushf
lods
sub
enter
push
adc
cmpl
and
fsubrs
jge
idivb
decl
adc
ljmp
ret
and
pop
pop
add
and
inc
mov
sti
add
cltd
out
jb
mov
jne
xorl
dec
and
inc
adc
push
je
pop
sub
out
repnz
cmp
dec
and
rol
and
mov
mov
movsl
dec
flds
inc
ljmp
or
test
or
cs
mov
dec
and
fldenv
lret
xor
pop
fidivs
push
and
pusha
jne
call
iret
loope
sub
outsl
jp
sarb
imul
push
cmpsl
sbb
fs
jbe
lods
and
scas
xchg
cmp
xchg
sub
mov
les
daa
nop
mov
stos
push
pop
jmp
loopne
jge
jae
push
andl
in
xor
std
cltd
inc
arpl
and
mov
lds
and
stc
cld
pop
jbe
push
inc
and
cmp
jo
cmpsb
inc
xchg
fisubl
pop
sub
mov
and
sub
std
or
stos
push
sub
pusha
sahf
lea
mov
dec
cld
xchg
xchg
rolb
push
imul
cmp
mov
shll
loope
add
daa
push
push
xchg
inc
out
fwait
pop
stos
lods
jae
mov
dec
push
inc
adc
and
xor
daa
cmp
test
divl
mov
push
outsb
jp
andl
jge
push
stos
xchg
xchg
and
sbb
fdivrp
dec
lods
sub
ss
push
jb
scas
mov
pop
push
stos
fucom
mov
add
and
arpl
mov
mov
inc
outsb
and
bound
sbb
dec
push
mov
jnp
je
xchg
loope
and
aaa
jg
add
xchg
inc
lea
and
cs
xchg
and
into
fldpi
cmp
arpl
popa
sub
enter
cld
cmpsb
fildll
jbe
jo
and
dec
aaa
jne
call
pop
out
ret
inc
sub
jno
mov
sbb
nop
loopne
jp
and
loope
sbb
and
jmp
lods
and
adc
and
fstpt
and
rorb
and
lret
and
inc
mov
sub
and
out
loopne
and
adc
into
cmp
sbb
and
ret
and
adc
lock
mov
fisubl
mov
test
push
jbe
jp
inc
xchg
jg
popa
mov
mov
mov
std
hlt
xchg
shll
lods
mov
sub
and
pop
add
pushf
repnz
inc
push
ja
rorl
jno
popa
imul
and
jecxz
push
xlat
fwait
test
mov
cltd
imul
push
xchg
dec
cmp
sub
es
add
loop
outsl
jae
sahf
fnstsw
addl
mov
data16
ret
and
cld
pop
daa
dec
xor
push
push
xchg
xor
jno
and
sahf
jg
fucom
and
xchg
iret
hlt
addr16
fistpl
pop
mov
add
icebp
adc
sub
mov
outsb
push
pop
loop
fsubrs
call
push
jecxz
xlat
in
and
xchg
mov
scas
sub
das
in
push
lcall
shrb
xor
cld
test
push
loopne
mov
or
icebp
and
dec
jl
clc
add
adc
addb
add
xor
sarb
rol
mov
and
cld
cmp
xor
dec
fscale
cmp
insl
add
inc
andb
adc
sub
loope
mov
negl
ret
sub
add
in
nop
mov
shlb
push
sub
xchg
stos
push
jbe
fwait
out
dec
pmulhw
call
jne
inc
sbbb
popa
cmpsb
add
adc
sahf
scas
mov
movsb
pusha
and
xor
mov
adc
bound
xchg
push
stos
test
jge
jnp
idiv
mov
imul
and
cmp
inc
push
sahf
and
add
rep
mov
dec
push
adc
lcall
ret
sbb
subb
sbb
mov
dec
int3
sub
cmpsl
mov
cld
xchg
stos
sbbl
es
movsl
loopne
int3
or
cmpb
inc
and
mov
insb
inc
pusha
inc
stos
and
dec
movsl
mov
inc
jne
aas
sahf
mov
push
adc
xchg
dec
shlb
popf
lods
in
mov
mov
rcrl
shll
clc
mov
sbb
mov
mov
or
cmp
and
mov
jmp
rcrl
mov
or
mov
pop
sarl
and
and
mov
aas
cmp
inc
cwtl
or
pushf
xor
lahf
loop
scas
jl
outsb
add
xor
and
or
scas
push
push
mov
mov
and
push
iret
clc
and
enter
and
shl
and
test
or
out
pusha
jmp
fstps
mov
in
mov
aad
sub
mov
shl
xchg
dec
push
jg
adc
loope
xchg
mov
jno
jl
dec
jno
aas
nop
inc
lahf
and
das
stc
sub
aad
adc
mov
push
inc
push
js
sub
int3
mov
sarl
cmc
xor
loopne
imul
cwtl
add
shr
jecxz
and
sbb
out
and
nop
stos
adc
sbb
sub
aam
inc
fpatan
jmp
std
cmpsb
xchg
dec
xchg
dec
daa
fldt
and
arpl
pop
sti
or
and
loope
pop
call
pop
and
add
jp
cwtl
inc
fsubrs
mov
sub
lods
push
cmpsb
daa
adc
nop
sarl
jne
in
je
cmp
mov
dec
ficomps
test
lcall
or
cmpsb
cmpsb
test
andl
test
sbb
and
dec
fcomp
int3
jge
xor
mov
pop
aam
adcb
mov
xchg
pop
mov
gs
push
stos
cmp
pusha
mov
dec
fwait
cmpsl
in
pop
pop
push
inc
sbb
jp
das
and
aas
in
cmp
xor
adc
and
inc
xor
adc
cmp
in
pop
mov
pop
and
inc
push
into
sub
lea
notb
and
pushl
xchg
movsl
arpl
lods
push
lcall
and
outsl
imul
out
xor
mov
sti
jecxz
cmp
push
mov
lods
lea
inc
and
fisubrs
xchg
ds
push
ljmp
fnstenv
dec
mov
lods
repz
sbb
mov
lds
mov
dec
aas
cli
mov
shrl
jno
push
and
inc
adcb
mov
xchg
lahf
call
pop
and
je
popa
shlb
outsb
sbb
sbb
push
and
aad
mov
out
insb
push
loope
bound
ljmp
xor
mov
lea
adc
clc
adc
dec
addr16
sbb
lods
xchg
and
xchg
sahf
add
pushf
push
and
sub
mov
mov
cmpl
push
and
imul
iret
std
popf
and
cmp
lahf
sub
pop
inc
add
xchg
sub
adc
lret
mov
sarl
xor
cmp
inc
scas
popf
and
and
sbb
push
ja
lahf
jno
sub
cli
je
call
push
push
push
xor
pusha
dec
xchg
inc
push
jmp
popa
jp
popa
jge
mov
adcb
sbbb
ds
add
or
aas
inc
ja
out
or
cld
adc
mov
mov
daa
and
popa
mov
add
xor
into
and
pop
push
mov
sbb
cmp
test
dec
lret
and
hlt
cmpsb
rcrb
insb
and
mov
push
or
pop
jne
out
cmp
inc
xchg
sti
addr16
xchg
mov
aam
imul
ss
inc
mov
pop
test
mov
mov
jp
imul
decl
and
and
pop
inc
les
cmp
fldenv
sub
xor
and
xlat
mov
jge
cli
and
mov
mov
jecxz
ljmp
push
cli
shlb
xchg
mov
mov
bswap
pop
jo
or
and
xchg
and
iret
arpl
mov
or
outsl
dec
pop
mov
cltd
leave
rcl
and
cld
stc
mov
push
push
popf
or
gs
in
mov
xor
pop
add
dec
and
pop
mov
and
dec
push
jmp
je
jge
push
inc
in
lret
lea
and
cs
iret
subb
and
aam
insb
mov
frstor
and
push
xor
push
imul
popf
and
xchg
aas
pop
mov
mov
mov
xor
aas
and
jp
leave
jge
sub
mov
xchg
aaa
lret
inc
movsb
jmp
push
outsb
icebp
inc
and
lds
xchg
push
pmaddwd
cmp
mov
xchg
mov
mov
sub
inc
fsubl
icebp
in
cmp
cwtl
mov
int
mov
imul
jecxz
out
mov
test
pop
adc
pop
aas
add
cmp
out
jb
and
jp
jnp
mov
aas
cmp
fwait
arpl
pusha
pop
mov
adc
and
xchg
fdivrs
mov
ret
cmp
adcb
cmp
dec
out
clc
je
or
fsts
lods
cmp
repnz
in
pop
jb
cmp
test
fwait
jno
daa
dec
sub
and
sahf
loopne
stc
mov
shll
mov
or
xor
gs
lods
inc
enter
clc
mov
cmp
xor
dec
jp
scas
shlb
sub
push
jo
out
mov
mov
or
cmpsl
scas
mov
or
lret
test
push
push
stc
xchg
and
mov
jne
pop
arpl
sbb
das
test
adcl
mov
repz
mov
inc
cld
adc
cmpsb
push
test
push
sub
mov
push
movsb
outsl
fidivl
xor
xchg
mov
dec
jo
test
mov
jl
out
jne
mov
fidivrl
adc
cmc
jg
mov
out
and
xchg
clc
sub
cmp
in
loope
push
pop
sahf
cmpb
and
dec
sbb
popa
cmpsb
in
mov
shlb
mov
rolb
test
and
xor
inc
sub
loopne
and
cwtl
popf
and
fstl
sub
dec
sub
pop
xor
cmpsl
and
jp
int
mov
clc
pop
out
cmp
ds
fsubs
jnp
shlb
mov
repnz
push
and
jecxz
pop
and
out
movsb
cmp
mov
in
push
jle
mov
shll
xchg
inc
xchg
inc
and
lcall
jno
fildl
mov
leave
adc
negl
sti
movsb
and
lods
ret
pusha
xor
jge
and
cmp
xor
cli
and
ds
sub
and
imul
sub
loopne,pn
outsb
xchg
xorl
jo
sbb
adc
jge
mov
mov
ret
push
fisubl
in
and
enter
popf
jno
jge
sbb
stc
mov
popa
add
popf
and
daa
xor
or
cmc
decl
xchg
xor
arpl
jp
fmul
lahf
cmp
popf
sbb
jae
fwait
and
imul
cld
mov
mov
inc
cmpsl
je
dec
inc
out
cld
test
cli
and
fs
mov
in
adc
outsl
movsl
mov
sub
test
push
aam
divb
loop
push
movsb
inc
or
adc
incl
in
sbb
sub
xchg
arpl
adc
jle
adc
and
fs
outsl
clc
sub
sub
sbb
lock
lds
or
movsb
ds
inc
dec
movsl
mov
les
arpl
lds
addr16
mov
enter
mov
loope
adcl
int3
scas
jge
dec
pushf
and
repnz
mov
imul
int3
aam
in
and
and
stos
mov
into
movsb
jne
repnz
int
stos
clc
lret
addl
lahf
enter
push
jmp
and
lret
mov
mull
fcmovnb
mov
pop
std
or
xor
into
mov
es
stos
and
xchg
aas
and
push
aaa
or
mov
pop
push
rdtsc
pop
shrb
mov
cmp
orl
xor
inc
xor
int3
fidivs
popa
sbb
dec
push
mov
mov
sub
sbb
and
and
int
stos
sbb
ss
mov
pop
and
xchg
gs
jb
movsb
out
jl
sub
and
bound
test
and
iret
and
push
mov
and
movsb
sbb
test
inc
push
add
stos
test
outsl
or
mov
adc
xchg
adc
sub
jne
sti
mov
mov
fisubs
and
mov
sub
jl
mov
jns
or
and
cld
idivb
cmp
ficoml
and
je
xchg
sahf
inc
add
lods
stos
gs
mov
xor
out
mov
sub
ret
cmc
pop
cmp
movsb
inc
xorl
adc
xchg
jmp
xor
inc
test
andl
mov
lea
sti
and
sub
cmpsb
dec
inc
ja
test
and
push
dec
je
sahf
mov
sbb
not
cmp
movsl
adc
ds
jns
adcb
stc
and
sub
and
cmp
mov
fwait
mov
and
je
js
cmp
movsb
dec
mov
or
sbb
lock
and
lds
add
addr16
int3
movsb
jp
test
xchg
cltd
movsb
jns
adc
lret
xor
cmp
ja
rcr
cmc
sub
and
sbb
outsl
stos
adc
lret
adc
popa
cmp
push
push
jb
icebp
jmp
pop
mov
adc
cld
and
arpl
std
sub
inc
in
pop
push
fisttpll
jge
and
enter
push
adcb
movsl
and
addr16
ret
and
cmp
daa
jb
ret
or
je
add
mov
add
lret
mov
mov
and
jns
shrb
fwait
cmpb
inc
jp
cmp
push
sbb
into
aad
lcall
dec
push
add
and
mov
inc
or
and
cmp
inc
fs
sub
inc
imul
mov
adc
inc
and
lret
rcr
movsb
lahf
divl
cltd
add
test
and
push
stos
pop
mov
pop
inc
xchg
inc
and
mov
lock
mov
sahf
and
dec
sub
arpl
sub
sahf
and
cltd
shll
mov
sbbb
cmp
mov
inc
push
loopne
sbb
sbb
or
and
mov
lret
mov
fcompl
add
pop
filds
gs
loop
aaa
cmp
cmp
test
cmp
mov
sub
shrb
cwtl
dec
cmpsl
pop
and
sbb
in
clc
fdivr
mov
mov
jg
into
stos
ret
addr16
inc
cmp
cmp
aam
and
sub
ljmp
fsubrs
test
negb
sbb
ss
jl
and
cmc
dec
cld
lods
cmp
xchg
dec
pop
inc
sub
adc
and
out
pop
and
outsl
sbb
pop
or
and
dec
rclb
xor
xor
pop
inc
jb
xchg
repz
sbb
mov
mov
fsubl
jnp
popa
das
stc
cmp
cmp
sbb
aad
and
jno
enter
push
inc
outsl
or
fsubs
sub
out
popf
adc
lods
aas
mul
fwait
mov
mov
popa
lret
cld
lea
dec
adc
rclb
jecxz
cmp
and
dec
arpl
pop
stos
mov
mov
addb
jae
adc
jp
movsb
mov
add
cmpsb
mov
fcmovnb
imulb
and
mov
pop
xchg
fsts
fwait
dec
sbb
fisubrl
and
shrl
and
int
mov
pop
into
mov
arpl
inc
dec
push
jne
or
ss
cmp
xor
call
mov
pop
andb
push
add
call
add
or
jne
add
les
gs
sbb
adc
leave
and
lea
pop
pop
ficomps
outsl
stc
mov
inc
mov
adc
and
clc
ljmp
mov
dec
sub
dec
loopne
int3
and
push
cmp
xchg
dec
jge
xor
xor
sbb
sbb
add
xchg
cmp
inc
add
push
xor
mov
nop
jbe
aam
pop
iret
lods
and
inc
sub
hlt
mov
and
jmp
imul
and
mov
pop
or
xchg
scas
sub
or
ret
adc
mov
test
pop
adc
and
pop
int
adc
iret
and
scas
aaa
mov
jbe
and
xorb
and
dec
adc
mov
pop
inc
jmp
and
adc
das
lods
fldl
aas
shll
in
and
push
xchg
sti
xchg
mov
rcrl
xorb
hlt
mov
inc
mov
push
and
mov
out
jnp
nop
pop
push
clc
cmc
mov
inc
scas
inc
and
xchg
push
int3
xor
pop
cmpsl
repnz
add
cmpl
rcrl
cmp
movsl
mov
daa
iret
push
mov
jnp
pop
ljmp
push
mov
in
push
cmp
or
and
in
sbb
mov
lea
sbbl
daa
rolb
jo
shll
cmpl
and
xchg
sub
and
out
jecxz
lret
test
and
dec
sahf
in
dec
and
pusha
inc
test
cli
shrl
sbb
stos
xchg
into
das
mov
fs
sbb
stos
xchg
and
and
out
dec
pop
and
aam
nop
and
jb
fmuls
dec
loop
bnd
mov
in
mov
push
and
lahf
sbb
inc
test
imul
xor
sub
mov
and
les
movsb
shll
jnp
mov
ds
mov
in
lret
jns
sahf
mov
mov
stc
jmp
andb
subb
sub
iret
ret
mov
mov
lea
mov
rcr
stc
outsl
dec
cmp
je
fwait
mov
xor
cs
imul
fisttpll
xchg
lods
and
push
test
jae
fisubl
push
addr16
xchg
cmp
loopne
and
cmp
lock
pop
popa
hlt
loope
adc
cmpsl
fsubp
mov
pop
mov
fwait
dec
mov
cli
lea
add
fbld
loope
fldenv
popa
das
addr16
scas
jns
and
add
loop
movhps
xor
cltd
in
and
inc
insl
and
jo
pop
bound
add
and
adc
lock
add
mov
popa
or
and
sub
mov
adc
or
inc
and
sahf
fsubl
jge
and
pop
dec
pop
lcall
sbbl
and
lahf
push
xor
and
jg
sarl
out
mov
xchg
mov
adc
mov
and
jo
mov
ljmp
push
push
pop
mov
mov
sti
inc
nop
call
or
scas
outsb
in
out
xchg
addr16
test
out
mov
cmp
mov
and
insl
sbb
mov
fimull
es
out
cwtl
enter
pushf
loop
aad
sub
pop
stos
push
push
lcall
jle
sbb
lods
pop
aas
or
and
jl
pusha
pop
push
pop
cli
and
xchg
clc
xchg
aas
std
push
ja
sub
sbbb
jnp
adc
lea
clc
xor
mov
out
cltd
sti
ljmp
das
mov
and
sbb
ret
iret
movsb
test
jecxz
popa
mov
add
in
mov
adc
mov
cltd
iret
xchg
cmp
test
jne
push
aas
sbbl
stos
in
mov
popa
jb
cmpsb
stos
fwait
mov
push
imul
mov
fstl
and
out
dec
daa
in
and
addr16
incl
out
lock
das
and
mov
aaa
sbb
bound
stos
sub
mov
and
sbb
xor
push
cltd
cmc
push
add
lahf
pop
xchg
cmp
das
pop
xchg
jmp
and
pop
faddl
inc
push
lea
mov
pop
and
imul
clc
shrl
mov
frstor
push
lea
and
imul
ds
push
popa
shlb
cmc
into
push
push
ret
xor
popf
mov
and
push
and
mov
pop
xchg
mov
lea
adc
xchg
xor
in
xchg
call
pop
ret
inc
mov
mov
adc
mov
cwtl
pushf
or
jno
push
and
scas
mov
sub
sub
sahf
and
hlt
sbb
add
push
pop
and
popa
std
push
sahf
or
out
cmpsb
enter
subl
mov
lahf
and
sti
mov
adc
inc
mov
xchg
mov
orl
test
imul
icebp
adc
adc
cmpsb
repz
mov
popa
out
shll
subb
mov
dec
lods
clc
xor
xchg
mov
in
aaa
or
sbb
sar
sar
jmp
call
cwtl
aas
mov
add
xor
fdivr
je
mov
lret
frstor
rol
cmpsb
add
xor
addr16
and
xchg
pop
repnz
data16
cld
dec
cmpl
and
and
addr16
inc
int3
dec
in
out
inc
ja
and
and
or
xor
test
stos
push
and
aam
mov
loope
and
push
subl
pop
xchg
movsb
push
mov
shr
into
pusha
movsl
out
scas
inc
pusha
addr16
mov
and
mov
push
dec
out
sbb
test
or
jno
stc
repz
aam
rorb
and
imul
lock
mov
sarb
and
testb
add
in
and
pop
dec
in
ret
orl
inc
pop
ja
aaa
push
adc
movsb
sub
xchg
ja
subl
cs
iret
cltd
pushf
fisubrl
cltd
scas
push
repz
xor
sub
and
in
loopne
mov
jne
push
negl
jno
ret
jne
adc
loop
cwtl
and
or
fnstsw
int
add
adc
dec
fstpt
add
push
hlt
pusha
and
sub
fisubrl
mov
ret
in
insb
adc
incl
sub
pop
movsb
or
enter
sbb
in
xor
and
mov
repz
jge
adc
test
adc
subb
fadd
jecxz
shlb
lret
or
dec
fdivrs
mov
ja
sub
and
rolb
sahf
jno
subl
mov
jecxz
repnz
or
outsl
negl
adcl
and
jle
test
xchg
mov
and
adc
add
xor
xor
dec
call
push
roll
mov
mov
shll
ret
nop
das
insl
inc
and
jle
shlb
aam
inc
mov
jmp
and
sarb
and
in
arpl
icebp
je
cmpsl
or
and
inc
mov
xor
shl
daa
scas
push
dec
mov
sbb
add
fsts
cmp
lods
fisubs
lds
imul
enter
mov
out
jnp
cwtl
cmp
and
adc
inc
add
psubq
bound
cmp
adc
mov
nop
mov
dec
or
mov
mov
jo
cld
hlt
pop
mov
jp
adc
sbb
ss
fs
cmp
push
xor
and
imul
push
and
dec
adc
call
jae
sub
pop
mov
or
push
fstpt
xchg
and
pop
out
and
pop
dec
ss
pop
adc
call
jns
sub
into
cwtl
and
mov
rcrl
loop
sbb
insb
aad
sub
jge
and
dec
mov
stos
and
jp
notb
scas
out
xorl
add
jmp
testl
pushf
cmp
ret
push
cwtl
push
xor
adc
and
leave
and
mov
jne
and
outsl
push
and
jns
lret
mov
pop
sub
and
xchg
sahf
dec
xor
and
leave
inc
mov
lea
sbb
mov
jne
test
sub
dec
add
dec
cmp
xor
and
push
insl
mov
add
jno
cs
push
das
stos
lock
and
adc
jnp
imul
xchg
ds
mov
sbb
rorl
jl
push
cli
loop
leave
xorb
mov
in
pop
or
push
inc
pushf
mov
xchg
jge
test
mov
sahf
cmp
ret
lds
and
add
popf
jp
shlb
les
mov
fstpl
rcll
inc
inc
fcoms
add
jl
xchg
inc
sahf
pop
jecxz
and
pop
and
pop
cmp
imul
jne
dec
push
jno
pusha
and
sub
mov
outsl
and
fists
xchg
and
push
adc
movsb
pop
push
jnp
popa
movsl
lahf
xlat
xchg
push
and
xor
mov
in
loope
cltd
cmp
and
or
mov
mov
div
mov
inc
jbe
js
and
xchg
cli
inc
cltd
call
sub
pop
nop
cmp
cltd
sub
and
leave
mov
dec
jmp
adc
hlt
cltd
cltd
sub
add
mov
jb
dec
int
movsb
or
jg
cmp
rcrb
inc
lods
lret
inc
mov
cmp
and
jae
popa
xor
imul
push
xor
movsl
cmp
xchg
sti
imul
xor
sbb
jp
push
adc
push
clc
imul
adc
push
data16
push
and
and
test
pushf
int
ret
mov
push
mov
inc
cld
loop
ljmp
push
and
cltd
jl
ret
mov
push
xchg
cmp
aad
and
jbe
adc
mov
push
jge
stos
repnz
addr16
les
inc
fisubl
add
popf
mov
adc
rep
ljmp
sti
bsf
ret
sbb
das
cmpsb
and
xchg
pop
test
aaa
call
inc
dec
js
pop
and
test
icebp
jno
scas
xchg
or
sbb
out
bnd
push
sub
stos
xchg
loopne
push
xor
les
outsb
insl
gs
and
enter
sub
inc
popa
mov
lea
push
vpaddsw
bound
test
cli
js
lea
jp
or
xchg
loope
xchg
test
push
xchg
jnp
mov
loopne
pop
dec
test
adc
sbb
sub
push
movsb
and
ljmp
movsb
cmp
jnp
mov
inc
cmpsb
and
dec
xchg
mov
jg
sub
loope
xor
mov
sti
ret
xchg
jecxz
and
jp
cmc
out
mov
push
idivl
pop
sbb
je
rcl
push
and
aad
xchg
sub
lret
push
mov
and
hlt
xchg
pop
and
xor
add
test
inc
and
test
push
mov
test
lret
cltd
xor
jne
dec
sub
lahf
push
pop
and
clc
mov
cmp
and
out
and
push
clc
andb
or
xor
out
inc
xor
jo
insl
frstor
mov
ljmp
das
add
pushf
insl
decl
mov
push
popa
sub
shlb
icebp
idivl
mov
out
aaa
or
je
orb
mov
cmp
fwait
aad
pop
imul
hlt
mov
mov
popa
sub
popa
lea
int3
jecxz
insb
and
sbb
dec
xchg
mov
and
popf
mov
das
decb
movsb
cs
and
insl
push
ret
and
xor
cmpsl
dec
cmp
cwtl
fisttpll
sbb
les
xchg
lahf
andl
scas
pusha
shl
aas
push
pop
pushw
mov
popf
and
jge
test
inc
inc
dec
sahf
stos
and
cmp
lea
mov
mov
pusha
mov
aad
mov
stos
shl
std
and
rcll
adc
mov
lock
mov
movsb
pop
sbbb
rolb
mov
xchg
mov
call
mov
xchg
inc
jae
sbb
insl
das
pop
fists
out
ret
aam
jge
cmp
and
sbb
xchg
cltd
mov
scas
les
shll
aam
das
repz
mov
into
dec
aaa
mov
pushf
adc
push
mov
stos
xchg
out
xor
cli
and
js
xchg
mov
and
sub
xor
mov
mov
insl
mov
cmp
xor
test
pop
je
lock
loop
inc
inc
aad
lds
mov
in
call
mov
mov
dec
jb
aas
mov
test
jge
dec
cltd
subb
sbb
mov
nop
sbb
sbb
sbb
xorl
mov
mov
cmp
icebp
add
fistl
cmp
dec
and
out
out
push
pop
xor
cmc
pusha
insb
das
pop
imulb
push
mov
clc
bound
out
lea
sub
das
stc
inc
loope
gs
inc
xchg
shl
and
fistps
stos
and
fsts
mov
mov
pop
aad
sbb
adc
mov
jns
jne
pop
jp
mov
std
mov
and
cwtl
hlt
xor
lret
jae
mov
loop
gs
jno
lds
mov
adc
int3
mov
and
jne
and
xchg
xchg
int
sub
shlb
push
jbe
cmpsb
sbb
cmpsl
xor
dec
pop
or
jg
popa
mov
call
and
xor
pop
jno
and
nop
mov
inc
inc
pop
dec
mov
mov
add
lcall
add
sbb
sbb
or
into
das
mov
adcl
insl
or
jp
rolb
cmp
mov
cmp
popf
inc
nop
xchg
adc
xor
push
frstor
iret
pop
and
bound
sub
int
ljmp
jmp
jae
jge
jnp
xchg
ret
add
addl
mov
sbbl
ret
les
sahf
mov
dec
lret
lods
insb
mov
loop,pn
in
push
outsb
cmp
jnp
icebp
and
mov
xchg
and
shrl
sbb
xchg
and
decb
pop
pop
jnp
test
pop
js
popa
psubd
or
push
and
les
mov
fstl
fcompl
sbb
mov
and
jl
test
fildll
in
call
and
jg
or
fisttpl
leave
sub
shlb
imul
aas
int3
mov
scas
push
cmpb
add
xchg
add
cmp
in
mov
outsb
adc
sbb
jle
and
scas
cli
lds
xor
cmp
andl
aad
mov
iret
pop
ds
add
sbbl
sub
inc
and
orb
cmp
cwtd
push
and
ja
inc
js
jle
and
dec
jge
loop
and
pop
out
int
xchg
shll
stos
fdivr
inc
mov
and
popa
jp
insl
dec
leave
outsb
and
or
mov
cs
insb
or
loopne
shll
cli
nop
mov
movsb
mov
mov
mov
inc
inc
xchg
mov
fstps
out
in
outsl
cmpsb
ret
pop
popf
fstpt
sub
and
aas
ret
sbb
and
popa
inc
je
pop
and
rcrb
and
xchg
mov
sarl
sub
xor
push
sub
lods
insl
jno
imul
and
push
rcr
jbe
mov
in
daa
xor
sub
add
ret
cmc
call
repnz
jno
bound
js
scas
pop
insb
or
and
mov
adc
and
lods
popa
inc
xlat
insl
inc
jns
pop
and
aad
hlt
dec
lcall
push
and
cmp
test
or
jb
sub
jp
pushf
jno
cmp
xlat
cmc
mov
xor
mov
movsb
outsb
add
popf
imul
jge
negb
dec
mov
and
cmp
lock
dec
pop
xchg
add
xorl
xchg
jbe
imul
mov
push
lahf
inc
subl
and
xchg
pop
subl
mov
imul
mov
addr16
and
loope
mov
lret
rolb
cld
mov
lea
insl
repnz
dec
aas
xor
bound
cmp
fs
jge,pn
and
cmc
sbb
mov
mov
and
xchg
cmp
mov
xor
hlt
and
adc
pop
and
cwtl
das
sbb
pop
roll
mov
out
popf
hlt
and
mov
iret
pop
inc
mov
andl
and
inc
pop
mov
push
add
push
addr16
popf
cmpsl
pop
mov
push
xor
or
sub
or
add
adcl
hlt
loope
out
push
imul
xchg
jecxz
jle
and
inc
aas
jp
and
and
cld
and
mov
adc
push
bound
je
lcall
js
ds
das
repnz
sbb
mov
cmp
mov
push
xchg
inc
mov
in
mov
ror
and
mov
jnp
and
fdivl
pusha
std
xchg
inc
cmp
xchg
xor
dec
jp
sbb
loopne
dec
mov
mov
mov
mov
popf
push
adc
and
je
mov
mov
ret
xchg
and
cmpsb
jno
pop
int
in
pop
mov
push
test
js
outsb
out
jae
xchg
cs
pop
dec
sbb
lahf
push
popa
pop
hlt
int
mov
push
jne
jecxz
and
es
stos
and
insl
mov
popa
and
or
adc
addl
test
dec
dec
fwait
or
cmp
jno
out
icebp
int
ret
fnstsw
sbb
mov
cmp
cmp
mov
movsl
jge
adc
xor
cmpsl
xor
cwtl
and
sub
inc
and
in
lea
lds
inc
mov
mov
push
mov
inc
sub
popf
mov
jl
jno
fcomps
call
sbb
es
loop
and
cmc
cltd
shll
or
rep
jmp
xor
mov
and
cmp
add
pop
cmc
out
and
mov
mov
and
and
sub
and
mov
mov
and
push
call
dec
xchg
cmpsl
mov
arpl
pop
jnp
mov
push
mov
and
mov
lea
in
out
mov
and
or
fistpll
push
adc
inc
xor
jns
rcll
faddp
or
or
mov
and
clc
mov
push
and
push
cwtl
jecxz
fimull
add
fisubs
rcrb
inc
cmpsb
jge
sbb
aaa
mov
ja
test
push
popf
movsb
fisttpll
mov
cmc
jno
cmpsl
cmpsb
and
and
mov
mov
nop
inc
loop
stc
leave
js
mov
lret
fwait
negl
into
sbb
ficoml
push
aaa
pop
mov
and
aaa
test
loopne
push
cld
js
cmp
dec
outsl
test
outsb
push
push
shl
rorb
cmp
xchg
sbb
adc
add
adc
in
jne
loopne
leave
sub
orl
test
movsl
sarb
push
dec
jne
or
cld
ds
xchg
je
pop
repnz
and
pop
nop
and
stc
dec
imul
lret
push
in
dec
push
out
dec
and
popa
mov
and
mov
cli
jne
pop
and
sbb
push
push
mov
inc
stos
jg
xor
and
add
and
mov
mov
imul
test
frstor
imulb
and
add
or
test
dec
fs
xchg
or
lahf
push
dec
and
test
push
dec
aas
pop
mov
mov
or
xchg
mov
xchg
mov
inc
mov
and
in
mov
bound
mov
sti
test
and
aad
pushw
std
xchg
and
mov
clc
addr16
out
mov
push
sqrtps
jb
sub
sbb
xor
sahf
and
sub
jnp
or
add
fwait
mov
in
cmc
insb
push
cmp
mov
and
in
jmp
out
das
and
popf
popa
pop
jecxz
inc
lahf
and
jne
jge
jl
dec
scas
cwtl
sub
popa
adc
movsb
and
cmp
sub
jl
lret
mov
and
into
jo
es
push
or
and
cmp
mov
cwtl
mov
subl
mov
iret
jle
test
repnz
sub
pop
arpl
out
iret
out
sti
and
pushf
sub
push
int
notl
and
add
xor
and
mov
jno
and
cltd
sbb
lock
test
xchg
cli
fstpt
or
mov
and
sbb
aas
int
jne
pop
cmp
lcall
incb
and
incl
call
and
lcall
and
test
xor
je
movsl
mov
das
test
dec
test
dec
mov
aam
in
lret
push
das
mov
pop
lret
push
and
mov
cmp
out
lods
adc
add
xor
and
sbb
mov
lods
cmp
xchg
stos
mov
pop
xor
cmp
mov
idivb
and
push
ret
lcall
adc
xchg
push
fsts
scas
stc
imul
mov
jne
and
jg
push
and
loopne
mul
dec
in
and
in
roll
xor
popf
cmpsb
test
in
fs
js
movsl
pop
sub
sahf
xchg
and
xor
mov
cltd
sub
push
nop
pop
rcr
in
dec
add
xchg
fistl
and
add
and
inc
mov
or
shrl
andl
xchg
sub
movsb
jne
lds
pushl
mov
sbb
mov
inc
xorl
mov
and
pop
xchg
or
sbb
dec
inc
cmp
pop
jo
and
xor
ljmp
xchg
es
leave
and
lods
mov
jecxz
cmp
xlat
inc
xchg
aam
ss
stos
and
jno
out
movsb
pushf
out
xchg
dec
incl
pop
shll
lret
daa
xorl
cwtl
add
sahf
mov
jle
xlat
and
fiadds
decb
imul
cmc
add
loope
subl
pop
aas
and
pop
test
and
fs
mov
and
sets
sub
sub
jnp
ljmp
movsb
popa
adc
push
mov
mov
lds
and
inc
inc
je
adc
test
btr
dec
movsb
andl
push
int3
mull
mov
pop
outsb
and
mov
pop
cmpsb
arpl
jno
lods
and
adc
insb
push
jge
das
inc
push
xor
movsl
push
mov
push
and
fildl
outsl
int3
cld
and
out
imul
push
loope
mov
cmc
inc
mov
xor
dec
std
and
mov
jno
mov
rcrb
pop
mov
cmp
and
aaa
ret
in
out
prefetchwt1
sub
sbb
mov
orb
movsb
lods
mov
lahf
out
mov
std
and
scas
jns
jmp
mov
out
and
sub
jmp
sbb
test
jg
and
mov
fimull
cmp
sub
push
popa
insl
movsl
pop
inc
popf
test
das
add
aad
and
popa
jns
fcomps
test
movsb
subl
and
sub
lcall
xor
or
cmp
pop
outsb
inc
mov
and
jp
xchg
movsl
mov
jbe
mov
pop
addr16
xchg
fmuls
shlb
mov
xchg
mov
adc
mov
inc
outsl
popa
xchg
mov
pop
aaa
lahf
xorl
xchg
mov
faddl
insl
cwtl
and
popa
inc
mov
xchg
push
sahf
add
cmp
and
mov
and
mov
dec
in
or
ss
add
mov
add
pushf
xchg
lods
inc
shlb
add
mov
out
sub
hlt
scas
pop
mov
xchg
aad
dec
fldz
mov
mov
cltd
test
xchg
add
xor
inc
aaa
rcr
xchg
mov
shlb
in
int
notl
and
sbb
popf
xchg
movsb
inc
movsb
insl
push
cmp
shll
aam
cmpsl
xor
jno
mov
mov
pop
lea
js
loop
mov
loope
sbb
repz
mov
mov
mov
arpl
pop
push
scas
jo
and
call
mov
and
mov
iret
scas
and
neg
cmp
in
xorl
les
std
adc
and
push
xor
ss
ret
in
push
jge
and
xchg
hlt
in
addb
adc
leave
movsb
sub
push
imul
andl
idivl
xor
sub
lea
and
pop
dec
out
inc
test
and
push
sahf
nop
dec
lods
sbb
pop
notl
jp
jne
ret
jno
mov
enter
mov
lods
out
fnstenv
in
nop
test
and
sarb
push
dec
pop
and
cmp
in
push
adc
push
and
daa
sub
mov
js
cmc
mov
cmp
cwtl
loopne
push
push
jae
shlb
aad
mov
movsb
sub
icebp
jmp
xchg
xor
mov
imul
cli
and
xchg
shl
sbb
dec
test
lcall
dec
sbb
outsb
pop
fidivrs
frstor
ret
xor
and
sbb
icebp
push
movsl
nop
and
and
fwait
stc
mov
inc
ret
outsl
xchg
out
adc
pop
cmc
es
out
and
add
scas
adc
movsl
movsb
sbb
jae
pop
xor
jge
dec
pop
stc
jmp
xchg
mov
and
mov
std
popf
stos
aam
and
jbe
inc
scas
icebp
mov
loopne
adc
and
jl
aas
xor
push
mov
out
popa
test
bound
mov
loope
call
lods
imul
mov
mov
push
sbb
jp
and
pushf
mov
jge
loopne
imul
mov
mul
aad
jo
and
sub
stc
lret
mov
inc
imul
jle
dec
lret
sbb
or
xchg
inc
icebp
mov
add
in
shl
mov
xchg
push
insb
and
mov
rcll
jmp
mov
add
in
and
cmp
pop
dec
dec
sbb
addl
test
jp
cmp
add
stos
ljmp
and
sti
add
ficoms
and
jns
test
fs
into
dec
in
push
xchg
scas
and
lret
repz
cmpsb
mov
and
loopne
and
adc
fucomip
out
jb
gs
addr16
js
cwtl
sub
xlat
sub
cmp
sbb
jmp
enter
push
movsb
push
and
sbb
setge
push
int
cmp
fwait
and
test
adc
aad
ss
fadds
mov
stos
insw
jecxz
out
sbb
push
xor
mov
stos
mov
movsb
cmc
jns
cmp
int3
cmp
mov
sub
dec
ret
and
jae
pop
and
jnp
dec
push
mov
and
dec
pop
lea
pop
iret
push
outsl
and
or
mov
inc
jg
out
sbb
cs
jp
shll
xchg
and
push
ljmp
arpl
fimull
inc
mov
add
sub
daa
jae
pushf
sub
and
xchg
out
call
int3
lret
xor
or
jne
sbb
xlat
mov
fsubs
jge
xchg
pop
ss
mov
jmp
int
and
pop
mov
sub
stos
cmp
push
mov
lahf
fisttpl
testl
imul
mov
idiv
adc
and
hlt
inc
cli
dec
sub
in
mov
test
xchg
jns
jo
cmpsb
loopne
push
aas
inc
push
and
mov
imul
jne
popf
inc
sub
dec
add
mov
cwtl
addr16
and
dec
sub
and
lods
mov
xor
loopne
inc
mov
dec
sbb
and
jp
or
into
stos
psllw
pop
add
sbb
mov
add
outsl
add
pop
and
aam
sub
int
cmp
mov
dec
scas
and
lret
mov
scas
test
pop
popa
xchg
push
cmpsb
pop
mov
push
inc
xor
pop
mov
and
or
mov
mov
data16
dec
push
or
out
mov
ss
imul
or
js
hlt
mov
lret
xor
lds
shlb
add
das
and
out
test
gs
mov
fwait
jle
inc
and
imul
fucom
jne
dec
xchg
inc
repz
sahf
mov
sub
jae
inc
xor
insb
mov
lods
cmp
aas
cld
jge
lods
mov
neg
sub
xchg
out
lock
movsb
mov
je
jne
int
insb
sub
inc
movsb
filds
out
mov
cmp
adc
scas
sbb
ljmp
lahf
dec
cmp
int
sub
addl
pop
scas
and
lcall
pop
sbb
jno
jb
mov
mov
pop
and
inc
mov
jne
addr16
cmp
orl
leave
sti
or
xchg
and
and
pop
inc
sti
inc
scas
arpl
and
inc
mov
dec
je
xorb
enter
rclb
jbe
push
sar
cmp
fistl
movsb
pop
sbb
mov
sti
mov
inc
andl
cmpsb
jne
dec
lea
lock
imul
mov
or
repz
mov
mov
adc
fwait
arpl
out
or
xor
fcoml
pop
xchg
pop
sub
sbb
arpl
and
push
or
dec
xor
rcrb
jae
loop
xchg
fcompl
packsswb
test
pop
xorb
xchg
sub
fdiv
inc
xchg
fsubs
push
jle
jns
sbb
cltd
imul
mov
fisubrl
and
add
mull
inc
outsl
xor
inc
pushf
das
mov
notb
sub
jmp
xchg
mov
vpmaxub
jbe
mov
inc
and
cmp
jno
xchg
xchg
ret
int
fnstcw
test
test
ficompl
and
mov
paddsb
jmp
and
add
in
aad
and
push
jecxz
mov
adc
ja
mov
fildll
les
cmp
call
cmpsb
je
pop
push
test
adc
jae
and
mov
xor
mov
stc
push
mov
jb
shl
fcompl
repnz
sbb
out
or
ss
outsl
insl
jb
mov
pop
add
xchg
int3
and
lea
fsub
popa
popf
out
mov
lahf
clc
jb
iret
dec
ljmp
mov
sub
and
xorl
mov
idivl
and
pushf
mov
bound
pop
lret
scas
aam
sbb
mov
lcall
mov
pop
and
sbb
pop
mov
jmp
mov
jmp
fsubl
fistl
daa
insb
dec
fwait
xchg
mov
out
cmp
adc
mov
xor
push
inc
mov
fsubs
push
scas
insb
rcrl
or
xor
popf
js
popf
xchg
push
pop
inc
and
out
xchg
les
inc
sub
adc
scas
sub
loopne
and
sahf
dec
dec
in
mov
mov
inc
mov
hlt
mov
pop
lret
popf
jge
and
outsl
push
push
cmc
movsl
lock
add
fisubl
dec
cmp
pop
xchg
test
and
outsl
and
mov
shrl
xchg
mov
mov
movsb
hlt
jmp
mov
jge
push
vucomiss
addr16
jmp
mov
jp
and
add
mov
pop
stos
imul
scas
gs
and
push
lods
inc
or
mov
inc
fsub
sub
xor
scas
insl
ror
cmp
inc
pop
gs
jecxz
xchg
xchg
pop
movsb
dec
xchg
es
add
and
shrl
test
pop
mov
cmp
cmp
push
sub
and
sub
into
cmc
dec
mov
clc
stos
fmul
insl
adcl
out
add
sub
mov
mov
push
jno
jmp
and
pop
hlt
popf
add
inc
dec
cmp
cmpsb
cs
pop
sahf
loope
in
call
popa
xchg
aas
aas
mov
jge
daa
orl
mov
jp
xor
mov
pop
pop
jno
or
fimull
and
sub
sub
sub
inc
imul
pop
int3
fwait
sbbl
pop
push
add
fldt
js
push
mov
mov
mov
aaa
mov
push
or
test
into
add
test
push
xchg
pop
cltd
or
and
fdivl
data16
imulb
jno
sbb
addb
xchg
int3
jb
jmp
ja
and
addb
push
jge
arpl
sub
jg
add
xchg
lods
imul
in
push
sub
pop
add
insl
lret
lock
pop
ficoms
add
popa
push
in
imul
cwtl
dec
and
add
dec
cmp
push
lds
push
jp
dec
jbe
add
xor
push
cmp
sub
stc
and
adc
dec
imul
outsb
rcll
jns
inc
aad
data16
cwtl
sbb
mov
lahf
mov
lock
push
cmp
sub
repnz
xchg
add
sbb
lahf
jg
adc
pop
and
aad
daa
popa
jo
repz
lcall
daa
push
and
leave
sar
mov
mov
and
loop
test
daa
push
sbb
push
mov
and
inc
shlb
daa
add
or
inc
sub
in
gs
and
aad
jmp
adc
push
xchg
ja
sub
cli
adc
jae
jecxz
and
js
int
mov
mov
sbb
lea
std
inc
mov
and
mov
dec
pop
popa
cltd
clc
add
stos
and
mov
adc
add
jmp
repz
out
shlb
es
xor
inc
arpl
sub
sbb
dec
addb
xor
lods
loope
push
sub
out
cmpsl
popa
push
dec
jp
xor
sbb
daa
jb
popa
inc
and
mov
inc
and
scas
sbb
mov
xchg
movsl
mov
pop
jbe
xor
outsl
and
push
mov
scas
movsw
testb
push
lds
and
rcrb
aam
inc
jl
aas
in
push
mov
pushf
cltd
jmp
pushf
movsl
mov
pop
ret
fistpl
and
cmp
into
leave
lds
imul
push
sub
jp
and
push
jno
xchg
xchg
lock
push
in
lods
mov
adc
inc
sub
in
stc
dec
push
repnz
pop
push
inc
cmpsb
mov
xor
movsb
cmp
lret
mov
dec
jg
mov
mov
sub
mov
xor
rcrl
insl
hlt
nop
iret
xor
fildll
cs
and
loope
in
mov
fdivrs
gs
arpl
jnp
cmp
mov
ljmp
jge
mov
sbb
and
pop
nop
push
push
and
test
xchg
mov
and
mov
ret
and
sub
sub
cmpsl
dec
in
in
and
and
jmp
mov
inc
sub
lea
shlb
sahf
mov
mov
jae
mov
das
ljmp
push
out
mov
and
cmp
jns
and
xchg
daa
fistl
inc
mov
mov
inc
cld
sti
arpl
addl
jp
fs
ljmp
sti
js
push
mull
xorl
push
and
jl
adc
inc
jo
loop
fs
js
and
mov
dec
out
adc
out
mov
and
push
cld
fst
cmp
ja
pushf
adc
repz
loope
xchg
aas
xchg
and
jno
add
push
cld
movsl
mov
loopne
dec
daa
and
mov
jo
sbb
and
ljmp
mov
xchg
push
adc
insb
call
mov
sbb
pushf
sub
fcoms
adc
xchg
sbb
jnp
movsl
jmp
insb
insb
xchg
push
push
adc
and
and
mov
and
inc
mov
lcall
sub
bound
xorl
pop
sbb
int3
inc
mov
mov
adc
test
scas
les
pop
xchg
sub
cwtl
mov
xor
add
xacquire
pop
cmp
sub
and
repz
movsb
jne
xor
pop
iret
and
mov
cmpsl
sbbb
aaa
pop
mov
shrl
sbb
and
imul
bnd
cmp
cli
pop
adc
mov
pop
out
outsb
fistpll
push
sub
mov
inc
rclb
inc
testb
scas
into
les
and
cmc
adc
push
jge
mov
xchg
inc
dec
cmp
cmp
fdivrs
xor
bound
lret
push
inc
dec
iret
mov
cwtl
add
xchg
xor
bound
nop
inc
dec
push
popa
and
and
sub
scas
test
jl
jo
mov
add
sbb
inc
dec
and
dec
cmp
and
int
mov
adc
popf
or
loopne
out
movsb
mov
push
scas
ret
mov
jg
lods
rolb
cmp
addb
lods
jle
stos
clc
ss
scas
std
test
fists
adc
outsl
mov
rcll
and
cmpsb
jmp
xor
push
mov
push
jno
sarb
and
loope,pt
stos
lock
leave
inc
rorl
inc
les
out
xor
andl
mov
repnz
and
dec
lahf
mov
cmp
add
mov
sub
icebp
add
and
js
jecxz
cmp
push
movsb
mov
and
pop
xor
xchg
inc
js
and
and
mov
and
xor
pop
incl
push
imul
std
out
dec
leave
movsb
push
jo
outsb
lods
xchg
xchg
xor
inc
pop
movsb
es
jmp
das
loopne
outsb
sub
mov
insb
dec
xlat
aas
mov
xorl
adc
int
and
jge
in
lea
and
repz
adcl
out
fadd
inc
and
stc
loop
adc
sbb
and
xchg
fidivs
pop
in
arpl
jae
vcmpsd
test
jge
inc
adc
sub
xchg
inc
sub
xlat
jle
pusha
and
xor
js
xchg
cmp
and
and
and
and
aaa
in
mov
pop
pop
sarb
fbld
ja
and
test
add
out
out
aam
pop
jns
cmp
and
ret
pushf
or
std
dec
sub
dec
lcall
jnp
mov
sub
test
and
cld
dec
cmp
sub
popa
xchg
push
cmp
add
xor
cmp
push
in
movsb
repnz
stos
enter
jbe
mov
lods
dec
movsl
and
adc
outsl
loope
push
int
push
mov
and
aaa
lret
nop
adc
and
jb
stos
inc
fwait
pop
xchg
jae
arpl
fisubs
cmp
repz
stos
and
jmp
cltd
sub
jle
mov
push
call
mov
mov
pop
lret
movsb
adc
lcall
and
push
loopne
arpl
ret
test
xor
inc
mov
sub
sbb
das
xchg
orl
loope
cmc
mov
adc
and
lea
aad
jb
loopne
sub
paddb
les
and
push
mov
aaa
fistps
xchg
jge
and
mov
jnp
das
gs
loop
andb
xchg
push
push
xor
andb
sub
sti
cmpsb
sbb
movsl
mov
or
cmp
imul
adc
and
or
adc
iret
cmp
nop
push
and
pop
sahf
xchg
xchg
inc
stos
test
push
fwait
test
mov
xchg
xchg
gs
mov
mov
dec
xchg
ja
xchg
dec
sub
mov
ret
outsb
push
xorl
mov
mov
clc
vpmullw
stos
jne
shll
or
shll
and
fstpl
push
ffreep
ds
ret
nop
inc
cs
es
and
pop
cmpsb
add
shll
sub
and
aaa
pushf
insb
and
jnp
mov
mov
inc
xchg
popl
mov
cmp
not
cmpsl
cmp
and
cltd
pop
movsb
jno
scas
or
inc
popa
cmp
add
iret
mov
scas
adcl
mov
in
fs
aad
cmc
pop
pop
iret
sub
cwtl
xchg
addl
daa
cmp
xchg
and
iret
cltd
sahf
arpl
inc
dec
test
push
jmp
xor
xor
pop
hlt
test
les
sub
in
mov
inc
popf
pop
and
jno
cli
push
stos
ljmp
and
jecxz
cmp
std
cmp
and
inc
mov
fbld
pop
test
shll
cli
and
sub
sbb
clc
mov
push
pusha
mov
and
mov
xchg
rol
or
movsb
ret
jmp
mov
and
fmull
cmp
push
call
push
gs
in
mov
mov
jo
pusha
dec
ss
in
push
xor
push
and
pop
adc
mov
inc
sbb
pushf
xchg
lods
dec
dec
fldenv
cmpb
jecxz
sbb
je
xor
cmp
movsb
aaa
hlt
mov
mov
adc
pushf
popa
cmp
mov
or
lods
pop
sub
pop
cmp
and
mov
leave
mov
sub
add
fwait
mov
pop
outsl
pop
xchg
out
popa
jo
int3
hlt
loop
lret
pop
sub
and
ret
out
add
dec
or
push
adc
mov
into
aaa
in
in
push
push
dec
and
and
cmp
xchg
xor
repnz
mov
push
cmpsb
push
rorb
add
sub
and
jns
icebp
jb
loop
sbb
xchg
lods
cmpl
scas
test
cmp
add
pop
xchg
outsl
and
das
xchg
cmp
inc
fidivrl
sbb
cmp
jl
mov
stos
jb
in
daa
mov
xor
movsb
adc
dec
pop
xor
mov
in
fwait
cmp
icebp
leave
repz
inc
sahf
mov
xchg
xor
xchg
and
stc
and
adc
cmp
clc
mov
movsw
and
enter
shrb
xchg
lea
mov
cmp
and
push
and
jg
add
daa
sub
mov
fsubs
and
dec
fsubrp
and
jae
xchg
and
add
out
call
mov
mov
inc
cltd
xchg
xchg
decl
les
sti
aam
and
imul
stos
jae
out
mov
dec
xchg
inc
cwtl
and
shrb
xchg
and
dec
cmpsl
mov
and
js
xor
lds
inc
dec
and
jp
imul
add
loope
xor
mov
mov
inc
pop
fisubrs
stos
sbb
test
fiaddl
pop
daa
lahf
dec
and
in
mov
mov
pop
and
mov
dec
test
mov
insl
lret
bound
loopne
push
pop
mov
fiaddl
mov
jo
popf
and
mov
mov
out
dec
sub
and
mov
in
and
fs
nop
cmp
sbb
dec
lock
je
int3
push
sbb
push
jnp
mov
and
in
nop
and
pop
cld
les
pop
xchg
push
sub
and
enter
and
js
aas
ret
out
xchg
sub
and
nop
loop
mov
dec
sub
cld
and
stc
inc
ja
or
mov
sub
ror
and
insl
sbb
and
add
xlat
movsb
addr16
mov
xchg
sbb
add
and
mov
and
cwtl
arpl
xchg
cld
dec
push
pop
push
js
pop
sbb
sti
sbb
aas
call
and
fsubs
leave
inc
pop
cmpl
lock
aam
xor
adc
ja
xor
jo
inc
and
dec
dec
and
mov
mov
pop
inc
popf
aaa
xchg
stc
and
or
jae
shrl
mov
xlat
mov
sub
inc
mov
movsb
insl
and
cmp
pop
pop
movsl
and
or
in
pusha
mulb
outsw
daa
mov
test
movsb
jmp
ret
out
mov
in
mov
in
mov
mov
xor
lahf
xlat
push
rorl
out
lods
pop
addr16
mov
rol
flds
jno
aam
xchg
popf
mov
mull
fstpt
sbb
ret
and
adc
popa
sbb
test
xor
xchg
and
xor
dec
xor
leave
push
and
jno
cmp
stos
and
mov
enter
shll
mov
sbb
or
arpl
lahf
imul
and
enter
mov
inc
out
iret
inc
cs
mov
sbb
and
test
shl
movsl
mov
int3
pop
pop
jnp
and
aad
out
shlb
cmpsb
and
jo
xor
movsl
jae
adc
cmp
sahf
jmp
movsb
dec
push
sub
test
and
clc
imul
outsb
dec
and
mov
and
jecxz
xchg
pop
shrb
addr16
adc
fwait
test
data16
pushl
adc
jb
and
pavgb
int3
jle
mov
xor
mov
jmp
pop
fsubs
ds
hlt
cmp
and
jbe
addb
cmp
mov
das
fcoms
add
inc
push
and
cltd
popa
cld
inc
and
pop
mov
adc
cmpb
mov
sub
les
popa
mov
or
arpl
call
fistps
adc
and
test
movsb
push
inc
xchg
cmpb
pusha
dec
jge
mov
push
fists
int3
loopne
xor
aam
pushf
cmc
and
div
dec
in
add
pusha
rcrl
and
pop
and
ss
popf
call
xor
jne
and
imul
xor
sbb
jl
adcl
lret
sti
push
test
and
mov
sbb
and
adcl
aaa
je
aam
xor
insb
push
xor
cmp
orl
add
dec
enter
aam
and
sarb
loop
aaa
push
and
je
add
out
mov
jnp
mov
push
std
add
popf
popa
hlt
out
icebp
dec
movsb
ja
scas
shr
dec
fistpll
mov
or
ror
mov
shll
cmp
adc
jge
das
xchg
movsl
pop
mov
push
fimull
insb
adc
pushf
loope
and
pop
jne
call
ja
cmp
sbb
jnp
mov
and
jb
inc
and
test
testl
dec
jg
xchg
or
xor
mov
jmp
enter
mov
mov
and
dec
mov
and
sub
ljmp
int3
lds
and
aaa
jbe
fcoms
fistl
and
incb
insl
fwait
imull
xchg
mov
popf
sub
sub
popf
dec
mov
inc
push
imul
jo
nop
sbb
or
pop
push
xlat
inc
push
jne
and
jb
js
push
aaa
daa
adc
mov
push
push
popa
inc
inc
lods
and
mov
mov
les
or
into
shlb
mov
bound
xorl
popa
jns
and
mov
lea
lock
dec
inc
and
sti
dec
das
and
cmp
outsb
and
les
mov
mov
fcmovnu
test
mov
jl
sub
int3
mov
cmpb
jmp
pop
loopne
and
xor
cmp
inc
fisttps
xlat
mov
mov
jbe
mov
mov
and
mov
andb
sub
icebp
adcb
adc
mov
and
jp
mov
mov
lret
mov
mov
mov
movsb
movsb
cmc
pop
in
lcall
popf
inc
inc
das
jns
stos
cmpl
mov
inc
jne
jno
in
adc
cmp
out
pop
mov
cmp
and
xor
sahf
and
push
lock
mov
lcall
imul
mov
and
push
imul
arpl
push
loop
jne
stos
dec
jno
mov
sbb
pop
imul
fisubs
and
inc
nop
and
push
rclb
int
leave
xor
jmp
outsb
mov
or
fstpt
add
jne
mov
int
sub
cmpsl
inc
cmpsb
sub
push
outsb
xchg
pop
and
sub
mov
fld
xor
or
jmp
icebp
cltd
repnz
mov
inc
xchg
cmp
fwait
xchg
cli
movsl
pop
aam
in
and
and
dec
cwtl
insb
dec
mov
sub
jb
shll
mov
ret
jb
std
sub
dec
or
test
sbb
add
sub
in
push
mov
xlat
jmp
insl
pop
push
xchg
lea
mov
push
lods
dec
xchg
jbe
xor
cmp
sbb
mov
lahf
xor
mov
cmc
addl
lock
xor
xor
mov
push
jmp
lahf
lahf
and
int3
pop
shlb
and
cmp
jo
sbb
or
xchg
mov
push
and
cmp
fadds
pop
jno
jle
and
xchg
iret
repnz
insb
sbb
push
sti
xchg
lcall
and
xchg
stos
std
and
add
push
and
in
cmc
ss
jae
fmulp
and
insl
ret
dec
repnz
cmp
xchg
push
icebp
mov
and
loop
cmp
imul
nop
jecxz
leave
aad
and
shll
mov
lock
xchg
pop
xchg
xchg
adc
andb
popf
imul
das
and
sub
push
xchg
iret
and
jge
outsb
pop
scas
mov
xchg
dec
rcr
mov
sub
and
push
jecxz
inc
pop
mov
and
and
ficompl
dec
jmp
sub
sbb
cmp
out
clc
shlb
sahf
imul
jno
test
sarl
cmp
sahf
les
and
cltd
push
sbb
stc
and
aaa
js
test
adc
testb
imul
mov
mov
and
pop
xchg
jmp
movsl
sbb
lods
shll
jecxz
adc
icebp
sahf
pop
outsb
xor
inc
sbb
scas
mov
lret
mov
aas
push
inc
xor
mov
jmp
and
or
xor
sti
sbb
fisubl
add
popa
cld
ficomps
jmp
sti
movsl
stc
fsubrl
rolb
andl
hlt
cmp
lret
mov
out
movsb
into
sbb
push
outsb
aad
inc
xchg
and
test
jb
cltd
and
mov
push
popf
cmp
adc
add
in
shlb
dec
js
in
and
aad
adc
cmpsl
add
stc
dec
or
lock
xchg
and
arpl
popa
pushf
xchg
sbb
mov
xor
ss
xor
insl
pop
xchg
sarl
out
pop
xor
addr16
out
dec
push
push
test
mov
xchg
insl
sti
test
mov
rclb
fwait
jle
and
adc
arpl
push
insb
idivb
loop
mov
jno
dec
mov
fisttpl
or
mov
mov
push
cltd
cmp
and
rorl
and
arpl
and
pop
or
adc
xor
divl
dec
add
gs
aaa
das
ret
loope
movsl
addr16
imul
stc
jne
call
test
and
cltd
pop
sub
push
mov
adc
and
mov
imul
mov
pop
and
pushf
dec
imul
pextrw
and
cwtl
jb
and
movsl
sbb
adc
shl
xor
xor
pop
out
outsb
scas
out
xor
or
and
jb
rcll
jo
and
movsb
jne
lea
xor
in
add
sub
shll
dec
pushf
jl
fwait
xor
out
scas
popa
xchg
ds
std
dec
pop
cld
inc
sub
add
mov
and
pop
mov
test
out
mov
es
mov
jbe
xchg
push
inc
xchg
add
lcall
shlb
xchg
pop
out
jns
je
cmpsb
mov
mov
lea
ja
out
push
and
jg
and
jp
sub
xchg
mov
sti
movsb
les
cmp
push
cltd
mov
push
aas
xchg
pop
pop
and
je
push
leave
pop
mov
movsb
sub
imul
mov
cltd
cwtl
sub
das
insb
and
sbb
into
and
jl
and
or
test
sahf
xchg
mov
aaa
outsl
lods
aad
push
scas
into
xchg
push
movsl
enter
jno
clc
out
mull
inc
inc
loope
xchg
and
or
xor
fisubs
addr16
scas
mov
subl
test
push
mov
and
daa
addr16
mov
out
outsb
arpl
nop
loope
cltd
sub
sbb
mov
and
sbb
jo
fstps
jne
out
dec
fcom
mov
popa
mov
dec
pushf
xchg
and
rolb
and
mov
add
sub
cwtl
sbb
xchg
in
push
mov
in
stos
and
mov
inc
sarb
and
inc
sub
jnp
ret
repz
mov
xchg
in
fnstcw
int
inc
xor
pop
adc
xchg
mov
push
mov
jne
and
mulb
push
mov
imul
pop
jmp
inc
rolb
and
inc
mov
mov
xchg
and
pusha
loopne
sti
mov
push
mov
xor
mov
xchg
fwait
es
add
push
lahf
ja
ljmp
dec
shll
xchg
movsb
push
pop
lret
fisttps
loope
and
xchg
adc
arpl
jae
movsl
push
enter
mov
ss
jo
addl
cmp
jbe
and
jb
jnp
and
mov
and
fdivs
and
mov
popa
pushf
test
movsb
xorb
push
lock
and
mov
xchg
popa
imul
leave
push
mov
add
mov
jne
mov
mov
pop
mov
and
push
push
jg
stos
mov
sbb
cmc
loopne
pop
and
push
aas
jge
popa
arpl
mov
imul
xchg
out
mov
push
and
or
mov
call
inc
dec
jno
pop
and
mov
ss
and
or
lds
ret
xchg
popa
pusha
inc
stc
and
ljmp
mov
lret
cmc
test
cmp
mov
jbe
loope
lahf
rorb
jb
test
ds
jecxz
imul
jns
in
and
mov
sub
popa
jno
push
lahf
cwtl
mov
lods
enter
jg
xor
loope
and
out
std
out
pop
pop
push
out
mov
sub
mov
or
lods
mul
ret
cmpsb
outsl
nop
lret
shlb
cmp
ja
and
xor
scas
dec
scas
sbb
add
negb
repz
mov
mov
loope
aad
sbb
pop
lcall
xor
vpacksswb
mov
repz
das
cmp
cli
jo
ja
outsb
push
inc
pop
xlat
popa
inc
and
mov
xor
push
es
pop
rcll
imul
es
mov
adc
hlt
sti
mov
sub
cltd
xchg
cmp
clc
test
mov
mov
dec
jb
in
scas
js
and
pop
arpl
lea
jle
or
in
out
aas
mov
fisttpll
inc
movsl
aaa
cs
xor
and
jne
divb
add
pusha
mov
fs
mov
test
cwtl
aad
xor
mov
in
xor
test
xchg
hlt
or
jmp
flds
loope
popa
push
and
jmp
imul
xor
and
bound
pop
sub
or
out
rcrl
rcll
in
addb
cmpsb
jns
fwait
test
es
dec
mov
jno
lret
loope
iret
rorl
es
cmp
ss
inc
gs
sbb
and
cmpsb
clc
loope
insb
and
lahf
or
pusha
jnp
sub
pop
lds
lods
sbb
outsb
enter
and
add
or
push
or
outsl
cmp
movsb
stos
xchg
adc
loope
mov
fucomp
lahf
sub
mov
pop
jg
and
aad
push
sarb
cmp
add
xor
or
mov
icebp
jp
push
repnz
dec
sub
or
dec
popa
cld
test
adcb
fistpll
lss
fstpl
and
cmp
dec
sub
loopne
fnstenv
xlat
mov
xchg
rcr
outsl
sub
jmp
inc
sbb
in
xchg
mov
cs
sbb
fwait
cmpsl
shll
ljmp
in
mov
or
sbb
inc
inc
js
mov
inc
push
lds
imul
test
mov
sub
push
movsl
shll
je
test
and
push
push
jno
bound
dec
cmpsl
mov
in
xlat
adcl
sahf
push
mov
add
sub
cmp
popa
jle
and
add
movsb
xchg
mov
test
xchg
push
or
nop
mov
add
xchg
and
test
and
add
mov
mov
pushf
adc
sbbl
cld
mov
sub
addl
pop
cmpb
jmp
add
sub
sub
sbb
fsubs
out
sbb
xchg
loope
bound
bound
cmpb
popf
daa
dec
push
movsl
adc
and
push
cwtl
mov
xchg
gs
rcll
test
loopne
sbb
cmp
push
test
fisubrs
shll
push
jo
les
push
inc
xor
and
ret
mull
jg
xchg
les
cli
daa
shll
xchg
repz
mov
and
popa
push
sti
push
cmp
and
push
push
cmc
mov
test
in
mov
inc
jle
and
push
sub
and
ds
sub
push
js
leave
push
mov
into
stos
gs
xor
mov
and
inc
sti
clc
xchg
sub
push
stos
mov
leave
and
or
iret
imul
push
xchg
pop
icebp
sub
or
dec
jno
in
adc
mov
adc
mov
repz
test
scas
or
or
xchg
lock
and
movsb
sbb
push
and
or
pop
push
mov
icebp
vmovaps
and
stos
mov
push
jl
mov
push
dec
pop
adc
and
nop
das
fldenv
mov
pop
aaa
pop
loopne
and
xchg
out
adc
das
ja
and
aas
leave
xchg
iret
mov
cmpsb
and
xor
sti
add
sub
loope
jns
loopne
pop
sahf
and
addr16
mov
xchg
in
sahf
icebp
dec
int3
ljmp
and
mov
mov
add
fwait
cltd
mov
clc
lret
call
cs
jno
xchg
adc
xchg
lret
das
and
popa
jp
dec
and
mov
imul
rcrl
push
lods
clc
je
mov
and
and
int3
mov
inc
sub
ret
xor
aaa
adc
addb
inc
cli
cltd
sbb
popa
and
push
fistps
xchg
iret
into
mov
das
push
inc
sub
loopne
push
and
cmpsb
xchg
or
sub
inc
inc
and
cmpsl
push
push
or
int3
lods
ljmp
mov
sub
and
and
and
dec
pop
and
pop
lea
inc
int
ss
out
pop
and
add
sub
pop
and
inc
xor
testl
xchg
leave
inc
xor
push
and
push
lcall
xchg
fdivrs
and
mov
gs
and
pop
std
and
scas
mov
sub
xor
mov
add
add
lcall
lods
cmpb
loop
jecxz
sub
xor
and
je
mov
lods
xchg
and
loopne
xor
aas
and
push
jne
adc
dec
push
sub
mov
lret
jbe
pop
and
outsb
push
dec
or
and
fisttps
and
jecxz
xchg
movsl
cmc
repz
shrw
jg
add
mov
mov
nop
pop
lret
inc
and
repz
and
mov
test
daa
and
popa
jecxz
jecxz
inc
add
adc
repnz
inc
and
leave
lcall
test
push
xor
cs
inc
scas
sti
hlt
popa
in
icebp
mov
xchg
in
xchg
inc
and
pop
testb
lret
ljmp
stos
and
mov
xor
pushf
loope
popf
out
and
jle
mov
xlat
stos
lods
pop
insl
test
orl
enter
ljmp
popa
stos
dec
es
jle
int3
and
std
clc
push
and
imul
and
insl
ljmp
mov
jecxz
push
and
sarl
in
fiadds
push
pop
daa
and
cs
mov
and
aas
aad
push
fldl
cmp
daa
sahf
fwait
and
mov
pop
mov
dec
mov
jnp
xchg
popf
out
and
cltd
inc
clc
movsb
sub
orl
and
in
jb
inc
inc
pop
std
and
adc
jle
xchg
mov
dec
cli
pop
js
cmp
das
mov
out
push
mov
add
in
shrb
aad
fidivl
and
dec
in
lcall
jecxz
mov
aas
cmp
call
int3
lahf
and
mov
push
fsubl
jg
jae
xchg
imul
int3
inc
outsl
cmp
xor
ret
fwait
movsb
dec
push
push
loopne
filds
gs
lahf
ficomps
scas
mov
pop
and
adc
and
inc
push
jecxz
pop
mov
les
fmull
shlb
sbb
sbb
mov
sub
insb
sub
jbe
addb
mov
into
fildl
inc
vmaxsd
mov
lcall
ret
lcall
xchg
dec
cmp
mov
pop
int
rcr
sbb
cli
sub
xchg
push
fildl
sbbb
addr16
sub
or
and
push
mov
jne
or
and
cmp
and
fistpl
cmpsl
inc
out
mov
pop
jp
out
sbb
and
mov
rcll
lods
sbb
jb
or
push
icebp
sbb
loop
sti
mov
dec
sub
aam
insb
lea
mov
pop
pop
cmp
fdivrl
dec
pop
cmp
push
out
insb
xchg
iret
rclb
out
jle
fbstp
frstor
inc
and
sbb
xchg
xor
cmpsb
sub
push
data16
push
repz
dec
int3
mov
xchg
push
sti
lock
mov
mov
push
shlb
push
sbb
pop
loope
push
mov
jge
and
test
xlat
bound
and
push
jmp
and
adc
adc
pop
iret
ss
fidivrs
rcrb
and
pop
lea
ja
inc
mov
push
cwtl
xchg
imul
aaa
rorb
movsl
bound
pop
mov
out
xchg
push
inc
sbb
xchg
fildll
mov
and
mov
insl
xchg
fwait
add
outsb
or
xor
adc
pop
or
or
pop
mov
fldenv
nop
icebp
pop
lds
test
addl
xor
stos
adc
and
or
dec
pop
inc
test
and
dec
inc
mov
shl
lea
push
mov
add
loop
xlat
xor
xchg
cld
stos
and
fistl
stos
or
frstor
pop
adc
mov
and
push
xor
sub
or
jg
jo
sub
adc
jmp
scas
pop
insb
mov
je
xchg
out
xchg
jecxz
cmp
addr16
out
call
inc
inc
mov
xchg
in
cmp
dec
shlb
mov
test
jbe
push
and
pop
popf
insl
dec
pushf
cltd
fldenv
xor
cmp
dec
mov
jg
lods
push
addr16
inc
cmp
dec
push
mov
cmp
and
mov
ja
xor
mov
and
fs
jl
aaa
pop
pop
jmp
scas
and
or
lcall
fsubrl
inc
std
dec
call
mov
imull
push
inc
test
pusha
mulb
pop
js
lcall
fsub
cmpsb
aas
push
sub
in
popa
mov
stos
xlat
and
out
popa
pop
mov
xor
loope
mov
insl
mov
and
test
and
and
shrb
movsl
jne
jb
orl
cs
xchg
loopne
xor
fwait
jb
loope
scas
popf
lret
mov
xor
mov
and
push
jo
pop
aas
andl
into
dec
add
imul
pop
or
and
sub
and
push
test
insl
mov
and
adc
daa
and
jb
addr16
xor
xchg
sbb
sub
ret
and
or
adcl
and
fstl
cmpsl
lcall
in
and
clc
xchg
and
jge
mov
add
orb
and
adc
test
and
xchg
mov
stc
out
dec
push
inc
mov
push
pop
mov
sub
lahf
repz
ss
mov
mov
cld
push
jp
and
lock
push
mov
ss
push
mov
test
movsl
nop
cmp
xor
jnp
popa
xchg
shrl
xor
jle
sub
mov
mov
pminub
and
xor
and
dec
xchg
and
movsl
xchg
and
enter
sub
leave
jo
stos
sbb
testl
and
mov
scas
and
and
adc
xor
cmpsb
dec
jae
mov
ljmp
mov
pop
cld
dec
and
push
fs
jp
mov
das
sub
cmp
in
mov
sbb
mov
mov
sub
xor
and
fbld
pop
mov
and
stos
jne
cli
jle
pop
and
mov
lahf
jb
cmp
pop
adc
outsl
and
outsb
sbb
clc
xchg
iret
sahf
inc
sub
add
nop
and
xorb
sti
pop
int3
notb
xor
and
data16
loopne
jle
mov
inc
pop
add
cltd
outsb
and
aas
cmpsl
out
add
addl
test
mov
jbe
and
jle
fs
in
mulps
dec
ja
jp
dec
pop
jge
insl
aam
or
xor
mov
xchg
mov
and
std
js
add
movsb
test
loope
add
xchg
pushf
xor
insb
addr16
xchg
aaa
cld
es
and
dec
imul
sub
loop
int
out
lea
fiadds
mov
pop
leave
sub
and
xor
xchg
inc
lods
adc
outsb
ret
or
and
add
push
add
loope
sub
pop
mov
andb
test
and
and
xor
cmp
xchg
and
stos
mov
ljmp
sub
jp
stc
mov
mov
jnp
cmp
mov
dec
test
push
fs
adc
cmp
xchg
insl
test
movsl
xchg
adc
xchg
mov
push
jnp
push
rorb
dec
add
xchg
sahf
ljmp
and
inc
lea
jo
clc
and
aad
adc
and
aaa
push
jg
popa
jecxz
push
or
jb
mov
jle
aaa
mov
jns
inc
or
test
xor
es
mov
add
cmp
ja
sbb
mov
inc
adc
and
test
mov
dec
push
push
and
dec
cli
xchg
aaa
scas
mov
xor
pop
in
in
lahf
notl
in
insl
jmp
sub
push
dec
stos
and
jne
inc
jl,pn
pop
mov
test
popa
or
adc
stos
into
pop
mov
mov
mov
and
sbb
aad
negl
mov
and
cli
idivb
leave
popf
mov
xor
mov
in
gs
andl
out
push
push
out
test
xchg
repz
pop
dec
dec
cmp
xchg
pop
mov
sub
insb
cli
pop
scas
xchg
jecxz
outsb
mov
test
sub
aad
shl
sub
imul
les
xchg
mov
fdivl
pop
leave
bound
rcrb
xchg
popa
jno
mov
push
xchg
fldenv
mov
dec
subb
xchg
adc
clc
add
sub
adc
push
call
and
dec
mov
mov
daa
sub
adc
mov
cmp
and
in
mov
arpl
pop
push
sub
xor
mov
imulb
pop
stos
sbb
mov
lods
add
xor
mov
mov
in
aam
sbb
pushf
mov
mov
lock
test
test
and
jmp
xor
dec
jnp
fisubl
popa
sub
push
and
mul
or
jmp
jnp
and
into
mov
movsb
xadd
pushf
out
and
stos
push
mov
lea
bnd
and
loope
jno
das
stos
and
cmpl
movsb
aaa
clc
inc
add
je
movsb
pushf
cmp
or
ja
add
cld
mov
xor
daa
mov
popf
shlb
sbb
and
jbe
pusha
inc
rorb
loop
lds
add
inc
pop
push
stos
xchg
and
ja
sub
out
jle
daa
fistpl
sarb
in
xchg
mov
sbb
daa
push
cmpsl
sub
pop
xor
sarb
xor
stos
pop
xlat
subl
lcall
push
clc
int
enter
pop
cmp
daa
xor
xchg
cmp
cmp
and
std
leavew
and
scas
adc
jbe
sub
aad
cmp
fnstcw
lahf
fbld
add
jp
adcl
in
inc
mov
inc
cmp
orl
in
and
and
daa
push
loopne
out
pop
lods
sub
dec
repz
and
mov
mov
mov
and
push
cmpsl
pop
mov
loop
insl
lods
or
inc
dec
jmp
adc
dec
in
fcmovnb
and
pop
push
mov
inc
sub
gs
mov
sbb
pop
hlt
fwait
mov
inc
xchg
ret
mov
cmp
iret
and
sbbb
popf
icebp
jbe
mov
sub
xchg
mov
imul
sti
jae
popf
jp
mov
aad
mov
es
movsl
mov
outsl
setg
mov
push
sahf
dec
inc
push
sub
sub
out
fwait
push
lods
mov
pushf
fcoml
popa
jae
sbb
dec
in
js
xor
inc
popf
inc
mov
ficomps
stos
pushf
sbb
sarl
loope
popa
jg
adc
popa
add
sbb
mov
lahf
mov
aad
or
inc
movsb
jg
mov
lock
mov
pusha
sub
dec
mov
jo
test
pop
outsb
fildll
and
sbb
and
push
std
push
cltd
mov
lock
add
sub
imul
out
pop
adc
iret
jl
cmp
adc
inc
fwait
xchg
pushf
bound
mov
std
inc
and
dec
and
lea
and
mov
insb
adc
xlat
test
inc
hlt
mov
or
sbb
fcmovb
rclb
mov
insb
xchg
or
pusha
cpuid
xor
sbb
rcrl
div
outsl
adc
es
pop
dec
xchg
and
std
mov
and
dec
lods
loopne
sahf
mov
and
lahf
lds
dec
mov
cmp
inc
in
xor
push
and
xor
push
xlat
lods
movsb
out
and
sbb
xor
mov
imull
lcall
mov
and
inc
aam
jge
and
mov
cmp
mov
mov
mov
add
cmpsb
fs
mov
and
pop
fidivrl
jecxz
adc
sub
mov
gs
sahf
and
adc
lahf
and
lds
mov
xor
fidivs
movsb
out
lea
add
add
popf
in
data16
and
fildl
lods
iret
cmpl
xchg
jl
mov
scas
dec
bound
xchg
cmp
test
and
incl
inc
and
cli
loope
or
mov
or
test
dec
cmp
jno
pop
and
xor
jne
adc
mov
into
pop
cwtl
jne
xor
and
sbb
pop
in
push
jae
pushf
and
lea
or
cmp
icebp
cmp
movsb
jmp
cltd
ljmp
add
popa
clc
notl
pop
mov
mov
push
and
inc
and
xor
and
je
rcr
and
seta
loopne
pusha
push
inc
cmp
xchg
xchg
fildl
cltd
cs
movsb
xchg
popa
cli
push
and
cld
or
in
or
testl
repnz
in
sub
aam
shrl
scas
push
movsb
push
push
pop
inc
cmp
and
imul
loopne
addr16
mov
movsb
lcall
push
cmp
lock
inc
and
fidivl
and
fstl
or
fwait
rorl
icebp
mov
xchg
adc
mov
inc
mov
loope
mov
xor
and
popf
cmpsb
mov
and
push
inc
scas
imul
jno
ret
sbb
fidivl
fdivrs
xor
loopne
stos
fstpt
ljmp
loop
jmp
rcll
jl
pop
inc
xchg
and
pop
int3
push
push
popa
jmp
add
fs
adc
outsb
sub
sti
js
movsb
and
sahf
mov
and
inc
jb
ret
icebp
test
insl
fldt
loopne
xchg
test
hlt
and
jecxz
stos
mov
and
xchg
in
and
or
xlat
test
sub
js
sti
mov
pushl
xchg
xchg
loop
sbb
pop
jg
mov
leave
or
call
mov
pop
fiadds
xchg
outsb
cltd
dec
sti
and
mov
push
icebp
aas
pop
out
and
push
xchg
loope
xchg
adc
adc
movsl
bound
stos
sub
adc
sub
es
test
cmp
arpl
cmp
and
xor
push
add
stc
xlat
inc
mov
pop
sbbb
mov
cmp
add
sbb
mov
or
rcll
fxch
cmpb
and
aaa
into
xchg
dec
and
repnz
add
and
cmp
push
and
aad
sbb
outsb
xlat
xchg
and
or
mov
jne
int
and
sbb
daa
adcb
mov
mov
mov
test
lret
jmp
out
fnstcw
lock
lar
or
and
test
ret
xor
cmp
mov
sbb
push
cmp
test
xchg
mov
fcmovbe
repz
int
mov
mov
das
xor
or
and
filds
ds
ss
cwtl
xchg
hlt
into
cli
loope
rolb
cmpsl
and
les
sub
lret
mov
test
sub
sub
push
jle
cmpsl
shrl
and
pop
pop
es
cmp
test
les
xor
sbb
mov
jmp
inc
xchg
pusha
aad
subl
sarb
shlb
call
push
and
sbb
adc
and
data16
out
repz
orl
push
aam
xor
movsl
or
stos
lret
gs
mov
push
imul
aam
and
or
mov
hlt
stos
push
mov
fcompp
es
mov
nop
and
sub
mov
inc
shlb
fisttps
and
repnz
mov
ds
or
lods
imul
scas
cmpsl
in
rol
sbb
dec
xchg
push
xor
jmp
pop
and
jp
push
sub
out
movsb
loop
dec
mov
inc
mov
fidivrl
in
hlt
icebp
inc
pop
sbb
mov
jle
inc
and
sub
sub
ljmp
loope
mov
pop
clc
inc
scas
and
js
adc
ss
bound
inc
sahf
sub
mov
inc
push
js
mov
or
and
out
push
lock
outsl
add
loop
jmp
jp
shrb
stc
adc
push
xor
addr16
ljmp
sub
cmp
das
jg
pop
inc
sub
add
add
lret
mov
and
jp
and
xor
push
and
xor
test
pop
add
popw
add
xchg
div
add
hlt
cmpsb
and
fwait
push
call
push
enter
stos
add
pop
jbe
jno
lods
scas
subl
popa
mov
and
jae
add
test
pop
jg
sbb
or
push
repz
dec
movsb
adc
stos
gs
popa
lahf
sarl
sahf
loope
pop
clc
sbb
in
popa
cmp
xor
arpl
or
xchg
cmp
and
add
pop
shr
stos
lcall
fnstcw
adc
insb
pop
and
cmp
shll
inc
jge
adc
js
mov
lds
int3
int
mov
shlb
push
rcll
dec
mov
sub
popa
mov
push
push
and
inc
test
cmpsl
push
mov
add
push
mov
push
dec
lea
pop
xchg
and
push
push
movsb
fwait
popa
orl
xchg
shrb
adc
xchg
mov
xor
and
out
test
jne
xchg
jnp
cmc
test
pop
inc
ss
jae
and
in
and
out
mov
fwait
stos
fdivs
enter
and
movd
cmp
outsb
lret
fiadds
cs
add
mov
cmp
push
add
pop
lods
and
xorb
jp,pt
test
in
rorb
xchg
mov
jno
push
and
jge
lods
loop
push
popa
js
push
stc
in
mov
jmp
jno
and
pushf
out
sti
cltd
and
add
faddl
and
xchg
cmp
xchg
int
cmp
mov
push
ss
movsl
pusha
jb
stos
xor
xor
inc
fistpl
mov
popf
popa
xor
cmovns
icebp
lcall
cmpsb
and
push
int
inc
fsubr
dec
mov
and
and
mov
mov
mov
pop
push
dec
xor
sbb
push
inc
cmpl
mov
add
ds
pushf
popa
mulb
xchg
lret
outsb
cmp
pop
and
ljmp
out
sub
or
push
xchg
mov
test
mov
cmp
icebp
dec
sti
xor
sbb
mov
inc
or
test
push
jb
cmp
inc
clc
jnp
and
in
adc
in
xchg
lea
cld
mov
sub
icebp
adc
push
lcall
xor
jne
or
loope
inc
jo
es
data16
inc
andb
mov
mov
stos
push
sahf
movsb
xchg
adcl
xchg
lods
and
xchg
xchg
imul
not
dec
shlb
and
nop
cs
scas
and
and
inc
stos
mov
and
sbb
mov
sbb
shll
mov
push
and
push
cmp
pop
std
and
and
sub
sub
clc
ljmp
sub
mov
sub
sub
insb
xchg
sbb
aad
and
jnp
jbe
sbb
push
mov
loope
and
xchg
mov
cli
mov
jle
mov
icebp
jns
in
and
hlt
and
dec
xchg
popf
and
idivb
enter
jg
les
mov
jl
mov
fstpl
stos
shrl
std
sbb
pop
xor
fldenv
and
pop
je
add
gs
mov
das
jp
mov
or
scas
cmpsb
sub
pop
stos
and
aad
mov
sub
pop
pop
fstpl
icebp
and
in
std
ret
movsb
movb
pushf
adc
dec
or
mov
jne
and
sub
and
pop
js
xor
add
repz
out
dec
or
lea
int3
jbe
adc
sbbb
jno
xchg
outsl
fsts
shrl
dec
mov
cli
mov
inc
cmp
cld
adc
and
inc
dec
lcall
xchg
dec
push
arpl
mov
jne
sbb
or
and
aas
jg
xchg
test
push
cmp
mov
movsb
ret
enter
pop
mov
and
inc
lahf
or
jbe
mov
mov
push
cmc
jb
ret
xor
sub
cmp
inc
or
pop
bound
xchg
in
outsl
dec
xchg
pusha
add
inc
fbld
xlat
inc
ja
and
sbb
ret
jns
and
iret
hlt
scas
fldt
or
jg
out
sbb
movsl
push
test
inc
mov
push
outsl
cmpsb
scas
aas
int
and
push
sahf
bound
adc
jno
xor
jbe
sbb
fisubs
mov
fwait
sbb
imul
loope
push
cmp
and
mov
jg
and
xchg
fwait
push
xor
adc
dec
scas
xor
daa
test
sbb
and
and
mov
push
cmp
stc
inc
cmp
jno
inc
gs
invd
enter
pusha
and
pop
pusha
or
scas
mov
popa
xchg
icebp
lea
repz
and
scas
mov
add
rclb
and
jp
and
push
or
leave
xchg
enter
movsb
scas
mov
movsb
cli
in
and
mov
push
leave
sub
cwtl
mov
pusha
cmpsl
scas
scas
lods
and
je
sbb
iret
shll
dec
addl
adcb
sub
sbb
xchg
shl
xchg
in
xor
lcall
ret
shr
dec
and
add
movsl
xchg
push
mov
shll
and
subl
dec
push
push
xchg
repz
dec
cld
pushf
jle
bound
mov
sub
aad
jp
xchg
sahf
in
jns
popa
or
push
mov
xlat
stc
dec
cmp
into
xchg
cmpsb
fisubs
jne
xchg
xchg
sub
adc
fnstsw
cmpsl
repz
or
push
shr
into
popa
bnd
in
xchg
sahf
xor
and
insb
mov
mov
mov
mov
xor
jo
and
jne
inc
leave
jge
ret
into
jns
mov
mov
es
jp
jl
popa
ret
and
cmp
mov
pusha
lea
out
mov
lret
jecxz
lods
scas
cmpsl
dec
mov
popf
rolb
xchg
and
cmp
pop
mov
int
dec
inc
or
and
cmp
out
mov
pop
insl
jne
and
lea
and
or
sub
loop
cld
mov
scas
lahf
jbe
and
dec
cmpsb
notl
or
push
lods
rolb
or
loop
xor
xor
jmp
add
out
mov
and
and
sub
and
inc
dec
lods
in
pop
add
jp
and
pop
mov
lahf
mov
ja
mov
mov
arpl
leave
xor
and
fisubrs
jbe
jle
fnstsw
rcl
cltd
adc
xchg
xchg
imull
and
push
cwtl
jl
stos
and
ret
into
jb
mov
pop
clc
addb
cmp
mov
push
add
and
sbb
sub
xor
mov
inc
je
lea
push
lcall
xchg
sub
aam
add
xor
xchg
and
enter
xchg
push
outsb
mov
xor
mov
add
and
and
stos
out
push
loop
mov
mov
popa
mov
sahf
cmpsl
jne
lret
dec
mov
insl
pop
or
and
dec
cmp
inc
les
dec
add
push
push
and
icebp
mov
js
and
xor
adc
jnp,pt
fwait
mov
xchg
aam
lret
int
dec
mov
sbb
out
jne
ror
mov
rorl
cmp
pushl
clc
sbb
xor
dec
sub
je
and
enter
lret
and
loopne
mov
mov
ds
and
test
iret
mov
daa
or
pop
jno
flds
xchg
insl
xor
pop
xchg
xchg
das
mov
lods
je
add
test
test
xchg
mov
stos
mov
es
cmp
popf
adc
nop
sar
xor
xor
and
sub
sahf
dec
and
fldenv
fisubs
aam
imul
xchg
test
and
loopne
out
mov
in
fsubrs
and
adc
xchg
arpl
sahf
arpl
call
orb
and
adc
and
pop
xchg
mov
cltd
notb
and
lret
or
and
cmpl
icebp
mov
loopne
mov
ss
movsl
int
std
xchg
outsb
mov
test
mov
add
mov
push
test
lock
and
out
fisubs
aad
mov
and
in
enter
push
std
pop
adc
mov
mov
addr16
or
xor
das
push
push
ret
and
fs
rcll
push
mov
aaa
mov
in
and
fisttpll
mov
sarl
lret
sbb
xchg
dec
cmp
push
ss
mov
movsb
jb
aaa
and
mov
xor
inc
or
insl
adc
repnz
push
icebp
idivl
fisubl
xchg
dec
push
data16
mov
cli
insb
test
cmpsb
emms
scas
push
sub
sbb
ds
and
std
jae
int3
sarl
mov
and
cmp
push
mov
and
pop
mov
xchg
mov
or
cltd
adc
movsb
and
push
nop
andb
mov
and
sub
dec
jne
lahf
mov
loope
dec
adc
mov
aaa
ss
mov
movsb
enter
shll
adc
adc
pusha
in
shl
fwait
das
xchg
nop
into
mov
jge
cmp
pop
cmc
push
jbe
add
pop
jne
dec
inc
and
aaa
jns
jbe
enter
or
icebp
mov
xlat
push
cld
ljmp
call
test
and
jnp
sub
lods
mov
lret
jl
push
mov
ss
subl
out
cmp
ficoms
sbb
sbb
jbe
popf
cld
shll
pushf
sbb
daa
out
iret
mov
in
dec
and
push
clc
in
cmp
cmpsb
and
mov
push
aam
aaa
sub
movsb
add
daa
ret
push
pop
lret
cmp
movsb
jmp
mov
aad
movsb
pop
or
or
inc
sbb
add
fsubp
push
scas
xchg
fsubs
push
bound
and
add
lds
or
and
popa
sbb
fucomp
mov
mov
ja
push
dec
outsb
push
jp
mov
and
outsb
sub
jmp
jl
sub
and
xchg
in
jb
pop
dec
and
push
inc
pop
movsb
mov
lcall
and
push
into
out
and
rcll
mov
inc
jmp
es
push
and
lret
movsb
roll
adc
movsb
lea
negl
leave
add
into
inc
insl
lret
and
js
ljmp
stc
and
dec
mov
or
xor
xor
or
mov
cmp
dec
pop
or
mov
and
loopne
and
inc
daa
stos
out
stos
and
out
xchg
cmp
xchg
call
int3
jecxz
scas
cmpsb
and
test
ret
push
lahf
andl
loope
aas
sub
loopne
arpl
mov
push
mov
mov
fistpll
les
or
fistpl
jecxz
mov
dec
jb
xchg
push
mov
push
aad
lahf
lcall
ds
sbb
rorl
add
adc
pop
test
addl
and
mov
stos
dec
and
je
in
and
push
mov
xor
mov
push
aam
mov
cmp
pop
inc
in
js
pusha
pop
push
mov
and
and
add
mov
imul
xor
add
aas
aam
repz
xchg
xor
adc
and
testl
dec
mov
mov
cmp
push
popa
movl
cmp
pusha
cmp
and
test
data16
jg
in
dec
popa
sbb
cli
and
xchg
hlt
sub
xor
shrl
xchg
pop
movsb
rol
push
repnz
mov
int3
cli
mov
pop
rcrl
xor
or
adc
jo
test
stc
and
aaa
jp
movsb
mov
mov
xchg
xor
in
cld
inc
sub
mov
ret
rol
cmpl
and
lods
bound
scas
xor
and
sbb
add
dec
movsb
test
inc
jnp
popa
addr16
cmp
push
cmp
lock
test
scas
mov
push
lds
mov
cmp
mov
sub
pop
repnz
dec
lahf
xchg
std
loopne
lcall
mov
outsl
in
loope
jae
xchg
push
test
jne
ljmp
mov
mov
and
xchg
es
dec
clc
pop
mov
xchg
loopne
sbbb
mov
or
jo
lahf
or
add
inc
sbb
lcall
dec
xor
fidivrl
pop
jo
inc
jecxz
inc
repz
movsl
loope
inc
cmp
leave
lahf
fbld
xor
adc
mov
push
mov
cmp
add
dec
add
push
push
movsb
xchg
or
cltd
mov
nop
imul
test
or
push
push
ret
cli
pop
movsb
in
and
rcrl
andb
push
pusha
mov
stc
xchg
stos
push
fwait
loop
or
repz
sub
pop
movsb
sub
sub
mov
pop
inc
popf
daa
lcall
push
aaa
jecxz
sub
sbb
jmp
in
fprem
and
and
jns
out
push
jg
and
dec
inc
fstpl
fisubrs
jp
and
mov
stos
xchg
xchg
js
iret
push
fsubrl
jae
mov
ja
movl
pop
bound
xor
jmp
cmpsl
fld1
cltd
shll
test
mov
dec
or
mov
jecxz
out
lcall
lock
incl
dec
faddl
rcrl
dec
inc
das
and
leave
pop
mov
mov
test
cmp
and
aad
add
mov
mov
adc
mov
cmp
and
mov
cmp
and
imul
ja
xchg
fcompl
lcall
adc
dec
test
or
and
or
leave
or
cwtl
fisubl
jg
orl
ds
cmp
std
xor
and
mov
xor
pushf
andl
int
sbb
ss
popa
into
pop
adc
push
and
mov
mov
xor
sahf
jl
loopne
and
and
sbb
cltd
test
sbb
and
add
call
jge
mov
roll
test
xchg
adcl
lret
sbb
imul
mov
cmp
xchg
xchg
push
fmull
add
mov
mov
push
push
cmp
stc
pop
addr16
jge
and
aam
push
aaa
jo
cltd
mov
mov
or
jno
push
sub
xor
and
jnp
and
sub
pop
sub
cld
and
mov
outsb
cltd
sbb
push
mov
in
loopne
and
sbb
test
mov
mov
sbb
mov
cmp
sbb
push
sbb
add
jno
xchg
fwait
inc
inc
fisubs
push
mov
jo
test
push
xchg
or
mov
mov
dec
dec
dec
xor
ljmp
jo
loop
test
sar
test
pop
jmp
addl
fsubrp
mov
sbb
dec
jl
mov
jmp
jg
and
or
repnz
mov
push
mov
pop
xor
testl
sub
add
dec
adc
and
dec
pop
bound
inc
outsl
dec
sti
fildll
cmc
jecxz
imul
sbb
inc
jno
psrlq
movsb
xor
add
jle
mov
mov
cmp
lahf
push
and
xchg
and
or
movsb
mov
subl
mov
je
add
push
fwait
cmp
mov
enter
mov
je
xchg
sbb
mov
arpl
mov
adc
popa
mov
xor
sbb
and
jl
outsl
sbb
or
pop
shl
mov
daa
jno
loop
andl
inc
dec
mov
adc
out
hlt
push
fcomps
pop
xor
mov
leave
pushf
lds
sbb
mov
lcall
sbb
lods
xor
pusha
jle
fstp
in
xchg
js
push
inc
and
clc
dec
cmp
mov
and
notl
add
cmpsb
fcompl
jecxz
lahf
mov
popa
rolb
mov
aas
ret
faddl
mov
stc
in
in
mov
dec
stos
push
xchg
pop
and
mov
add
pop
lret
mov
add
sub
push
xchg
xor
jg
lret
mov
push
pop
insb
mov
add
loop
ret
sti
push
lea
les
fwait
gs
popf
pop
sarb
jge
add
mov
arpl
cs
inc
cmp
cwtl
push
push
fwait
mov
and
cmp
iret
ficompl
je
mov
dec
loopne
and
add
jnp
and
movsl
sub
out
cltd
cwtl
xchg
mov
pop
dec
mov
mov
mov
clc
lret
mov
call
or
out
pop
pop
loop
cli
sub
mov
and
and
out
mov
dec
in
popa
xor
and
addl
adc
clc
cmp
cltd
sub
sub
jae
mov
sbb
and
and
fisubl
sub
or
popa
movsb
fdivs
push
push
cmpl
loopne
sbb
shlb
push
mov
outsb
inc
xchg
and
daa
or
sub
xchg
or
call
and
and
aam
push
sub
sbb
sub
test
fsubl
jnp
xchg
mov
add
xor
fsubs
jne
inc
mov
xor
sub
adc
notl
sti
sub
pop
test
lods
jae
into
add
nop
sub
cld
mov
cltd
inc
pop
sub
jae
fwait
in
push
mov
int3
jae
push
mov
mov
hlt
out
mov
cmp
jge
add
and
pop
xchg
inc
dec
daa
and
mov
movsb
adc
fsubl
std
jno
in
les
mov
imul
adc
add
lds
inc
out
xchg
lds
and
int
lock
pop
lods
sarb
lds
sub
jg
mov
and
and
mov
rolb
loopne
bound
movsl
inc
mov
mov
or
sub
icebp
sbb
mov
shl
hlt
cltd
daa
outsb
popf
sub
and
and
jo
fadd
push
push
movsl
push
lods
cmp
push
xchg
xor
jge
xor
xor
adc
push
add
and
jne
daa
inc
mov
lcall
mov
js
mov
cmc
sub
enter
test
inc
aas
push
subb
std
inc
push
loope
adc
fwait
mov
pushf
sub
ss
and
inc
adc
movsl
hlt
xchg
ja
mov
inc
dec
vcvtsd2ss
and
xor
cltd
and
mov
lds
mov
loop
in
nop
lock
jne
bound
movsl
dec
mov
clc
mov
lret
and
insb
mov
and
into
xor
dec
popa
xor
push
dec
in
xor
cwtl
pop
cmp
loopne
jo
mov
sub
dec
sahf
inc
mov
jae
inc
adc
mov
sub
mov
mov
fistpl
cmp
das
inc
inc
dec
cmp
roll
inc
in
imul
fsubrp
ja
and
ret
sub
data16
sub
daa
and
sahf
fistpll
add
sub
loope
xchg
push
sub
cli
mov
mov
sub
and
in
out
cmc
aam
arpl
repz
adc
mov
test
mov
jae
pop
mov
test
addr16
sub
inc
arpl
jle
dec
pop
daa
cltd
cmp
xor
rcr
icebp
cld
mov
sbb
cmpl
mov
pop
insl
push
xor
push
mov
push
cmp
xlat
xchg
xchg
and
xchg
popa
lods
mov
enter
iret
out
int3
xor
dec
sub
xor
xor
cmp
and
and
dec
and
xor
or
sub
movsl
in
mov
and
cmp
lret
clc
popa
mov
in
jge
stos
in
jle
and
mov
hlt
andl
cmpsl
std
jns
arpl
lret
test
bound
fsub
arpl
jae
inc
xchg
test
loope
adc
sub
dec
sub
mov
cmp
inc
pop
imul
push
jne
and
and
jae
push
jno
fsts
aas
mov
mov
jg
nop
jmp
mov
mov
repz
xor
in
xor
cld
push
mov
sub
mov
lods
lods
lods
lds
inc
sti
imul
enter
loopne
mov
jae
add
stos
dec
pop
cld
inc
adc
gs
xor
mov
sub
cmp
pop
fbstp
add
das
outsl
daa
rcll
sbb
hlt
lahf
ficoml
inc
movsb
xor
leave
xchg
jbe
ret
xor
mov
imul
and
daa
es
lock
out
ds
inc
subl
sub
aad
popa
movsl
fwait
pop
movsb
in
sbb
test
mov
inc
mov
mov
lret
es
orb
cmp
and
lock
adcl
inc
cmp
xchg
cld
cmpsb
inc
mov
add
test
pop
add
inc
sub
sbb
imul
jge
mov
imul
xor
and
je
js
jno
xor
lods
hlt
les
pop
inc
lods
inc
dec
in
and
mov
sub
xor
lock
fstpl
nop
mov
mov
sub
ud0
sub
cmpsl
cmp
push
and
adc
xor
popa
and
and
sub
inc
cmp
ja
scas
mov
push
inc
sub
pop
movsb
and
jb
pop
sub
into
sub
and
dec
test
mov
int
adcb
mov
fdivrl
xor
nop
jno
fcmovnbe
data16
inc
cmp
daa
popf
bound
cs
and
pop
and
es
lods
xor
sub
arpl
mov
ja
test
hlt
fcoms
jb
push
inc
xor
aas
notl
cmp
repnz
push
lds
sti
mov
andl
subl
into
pop
dec
sub
ds
popa
mov
and
movsl
inc
push
sub
xorb
loop
rcll
cltd
cmp
ljmp
mov
bound
ds
imul
jns
in
xchg
adc
push
es
push
push
mov
inc
insb
xchg
mov
mov
xor
in
push
xchg
jbe
mov
les
hlt
jno
insb
jne
in
imul
sti
outsl
mov
jae
lahf
scas
push
jno
clc
inc
push
loope
sbb
push
dec
mov
mov
mov
xrelease
inc
sbb
shll
rcrb
mov
and
inc
pop
outsl
loope
sub
mov
sarl
and
arpl
sbb
jae
push
ss
imul
in
sub
inc
push
movsl
pop
push
xor
ja
mov
sub
lock
lods
mov
xor
and
popf
cmp
jae
inc
out
cltd
mov
jo
dec
xor
popa
cld
je
ret
xchg
sub
sub
or
mov
xchg
outsl
lods
stos
inc
arpl
dec
dec
jge
loop
cmp
cmpsb
mov
sub
mov
gs
jge
rol
movsl
insb
pushf
dec
outsb
sub
hlt
sti
xchg
leave
nop
inc
ljmp
jns
sub
add
ds
xor
daa
clc
dec
sub
test
and
cmp
movsb
adc
mov
push
mov
cmp
jno
and
fdivrs
jb
bound
clc
push
rorl
mov
data16
sbb
loope
sub
leave
xchg
fidivs
andl
push
cmpsl
push
and
inc
jl
push
xor
jnp
jne
cmp
aam
xchg
aas
pop
dec
outsb
xor
leave
shll
jae
sub
scas
pop
imul
lcall
cmpsb
pop
sub
dec
enter
mov
sub
pop
sub
loop
hlt
arpl
sbb
jnp
jl
lods
je
ret
sbb
lahf
and
cmp
xor
cmp
push
add
rol
jne
pop
sub
dec
pop
inc
dec
cld
push
pop
pop
lds
sub
fwait
mov
dec
repnz
mov
push
jne
mov
std
pop
cmp
jno
jle
scas
popa
pop
dec
add
adc
push
std
test
xor
pushf
sbb
jb
das
aaa
push
push
dec
adc
and
and
jae
imul
inc
mov
cltd
push
or
mov
aaa
and
mov
mov
add
mov
testl
add
je
in
insb
aam
es
xor
pop
dec
jns
xchg
loop
and
sar
and
or
mov
adc
add
inc
pop
stos
gs
mov
nop
cld
icebp
pop
sbbb
and
sbb
xchg
cld
imul
lods
push
jo
pusha
stc
loopne
push
rorl
inc
mov
adc
mov
inc
imul
ret
dec
test
test
and
jge
or
movsl
and
in
pop
das
fbstp
or
dec
and
hlt
mov
add
mov
movsb
lahf
enter
and
in
sub
test
dec
mov
out
inc
and
xor
jne
mov
daa
jo
imul
mov
pop
sub
sub
imul
aaa
pop
idivb
mov
cmp
subl
addr16
add
inc
pushf
mov
arpl
cmp
jb
sarl
nop
popf
cmpsl
stc
pop
sub
addr16
mov
inc
jecxz
gs
repz
shrl
inc
cmp
mov
jnp
jp
shlb
push
sub
aaa
adc
jne
lret
add
andl
sub
xor
dec
mov
mov
mov
cmp
popa
jmp
jg
bound
add
xor
push
daa
in
imul
icebp
adc
rcrl
and
movsl
mov
jg
xchg
jne
xor
js
movsb
and
and
cmp
mov
imul
jae
xor
bound
imul
jo
dec
pop
push
sub
aaa
mov
push
test
loop
pusha
bound
or
xor
jge
inc
jb
test
stos
sub
sub
mov
cmp
mov
fwait
jno
xor
push
inc
test
ljmp
jae
cmp
pop
insl
test
jg
inc
cltd
cmp
jne
lods
sub
outsl
sub
xor
or
sarl
sub
and
push
test
sub
and
cmp
and
xchg
dec
and
cmp
sbb
jecxz
push
imul
xchg
pop
jo
stos
xor
xchg
ret
cltd
clc
iret
jb
lock
sahf
inc
stos
pop
xchg
jmp
daa
inc
push
mov
pop
inc
mov
mov
insl
xor
in
cmp
dec
push
mov
and
ja
stos
enter
lret
rclb
sbb
mov
jle
shrl
jge
or
das
movb
test
inc
push
jnp
lret
mov
sarb
popa
imul
dec
stc
cltd
cmp
inc
jnp
xchg
popa
int3
hlt
daa
jno
adc
dec
sarl
sub
mov
xor
pop
jp
mov
xlat
sub
dec
out
and
gs
mov
inc
jns
push
xor
imul
popf
imul
jne
xor
rcr
movsl
movsb
and
dec
arpl
cld
inc
xorl
lods
pop
and
cmpl
cmp
mov
xor
mov
popa
xchg
cmp
jp
loope
push
push
test
imul
addb
or
xchg
dec
inc
jne
mov
enter
pop
mov
rolb
fwait
test
xor
pop
jno
jmp
jle
push
fnsave
jge
jno
mov
stos
aas
rcl
and
add
arpl
int
daa
xor
outsl
sar
das
and
test
or
mov
ret
nop
in
inc
push
lcall
pop
lahf
pusha
mov
daa
outsl
loopne
sbb
adcb
jmp
pop
dec
pop
loope
push
and
sbb
push
pop
in
mov
stc
andl
inc
pop
push
inc
hlt
inc
scas
mov
adc
mov
movsb
jp
and
addb
lahf
loope
adc
xor
push
mov
out
jae
lret
sub
movsb
xchg
or
divps
movb
ljmp
fistl
xor
outsb
mov
out
icebp
test
popf
mov
jg
mov
mov
pop
popa
sub
inc
repnz
roll
popa
shrb
pop
push
add
rclb
sub
pop
cmp
or
xor
mov
outsl
xor
enter
bound
dec
push
mov
cltd
cmp
cmp
and
cltd
cmp
insl
inc
or
repnz
bound
add
and
in
mov
inc
xor
push
not
lods
aaa
jnp
inc
rol
and
sub
mov
lcall
pop
jns
movsb
jg
outsb
dec
xchg
in
sub
cmp
push
aas
lahf
aas
cmp
imul
add
xor
int3
sbb
or
xchg
movsb
fldt
popa
fisubrs
xor
mov
repz
clc
loop
sub
lds
scas
fisttpll
xor
and
cs
pop
sub
xor
repz
jb
cmp
out
test
sub
rolb
inc
inc
inc
loopne
test
inc
aaa
sbb
sub
mov
jecxz
std
inc
lds
mov
jbe
cmp
insl
testl
movsl
adc
gs
imul
jae
insb
lcall
sub
inc
push
inc
ja
xchg
aaa
mov
dec
and
ja
repz
lret
and
sarb
xor
ljmp
inc
or
push
out
cs
cmp
ljmp
mov
out
rcrl
xchg
arpl
mov
cmp
mov
movsl
in
mov
popf
sub
cmc
int3
adc
mov
fwait
mov
jno
pop
push
inc
xor
sbb
cmpsb
shlb
jmp
sub
movsl
in
fldenv
xor
add
stos
xchg
and
cmp
sub
sub
addl
dec
and
dec
sub
je
daa
or
cmpsb
rorl
cltd
and
and
jecxz
mov
outsl
es
push
xor
and
jae
fwait
lods
xchg
jg
in
inc
ret
or
andl
inc
jge
pop
jno
loopne
aas
mov
jnp
dec
cs
loope
or
mov
loopne
mov
and
jbe
sub
insl
push
sub
xor
sarb
clc
pop
push
dec
repnz
idivl
out
popa
xor
imul
sbb
rcrb
lea
insl
xor
movsl
cmp
cltd
or
xadd
arpl
inc
push
daa
dec
xchg
add
cmpsb
je
ds
push
mov
xchg
in
jno
add
leave
pop
popa
xchg
repnz
sub
fnstcw
and
dec
push
xor
pop
mov
les
xlat
jb
mov
fwait
push
pop
cld
jmp
add
lea
imul
in
push
dec
arpl
cmpsb
mov
xchg
out
int
pop
jno
pushf
sbb
movsb
dec
sub
in
inc
popa
and
push
lods
inc
inc
dec
and
mov
dec
jns
shlb
pop
hlt
mov
js
lea
mov
sti
pop
jl
xchg
and
mov
cmp
lods
mov
and
xchg
mov
sbb
pop
jle
sub
cmpsb
mov
pop
xor
sub
data16
xor
and
pop
pop
jne
lock
daa
stos
jne
mov
xchg
and
movsl
mov
and
pop
inc
ja
pop
lret
lea
in
bound
jae
cmpsb
push
jno
and
xor
sub
insl
sub
and
add
push
mov
mov
cmp
xchg
subl
push
pop
roll
in
jge
sbb
inc
push
xchg
inc
cs
jns
imul
mov
push
lds
dec
mov
and
and
je
xchg
gs
inc
dec
in
test
movsb
dec
jno
xchg
dec
jmp
xchg
adc
and
mov
loope
je
mul
daa
gs
fwait
mov
mov
mov
xchg
pop
mov
dec
inc
imul
push
in
pop
sub
adc
mov
and
outsb
xor
pop
aam
nop
pop
outsl
stos
into
sub
sbb
hlt
subl
and
cmp
mov
dec
pop
in
dec
inc
inc
add
cmc
loope
repz
sahf
ja
popf
cmp
inc
movsl
inc
dec
dec
xor
addr16
dec
popf
push
cmp
dec
jle
mov
pushf
and
sub
int3
and
shl
pop
stos
jbe
xchg
mov
test
xor
push
push
and
push
repz
sub
xchg
and
mov
dec
jl
in
test
dec
pop
cmpsb
outsb
push
push
popf
push
mov
and
andb
adc
ret
mov
xor
cli
jb
inc
push
popf
popf
stc
repz
and
mov
jne
or
lahf
ret
jbe
push
aaa
icebp
sub
xor
inc
mov
fmuls
fwait
clc
xchg
dec
int3
lea
fbstp
dec
push
pop
pop
fwait
popa
pop
jno
mov
and
ds
push
ret
lret
and
je
pop
xor
push
mov
push
xor
mov
in
popa
insl
or
in
cmp
sub
and
shll
bound
movsb
cmpsb
mov
push
cmp
inc
mov
fbstp
mov
popa
imul
push
popa
outsb
add
popf
cmp
inc
xchg
test
scas
fnsave
sub
jne
test
xor
add
daa
inc
fwait
in
ja
mov
adc
adc
xchg
insl
jl
cmp
addr16
mov
add
nop
loopne
imul
cmp
sub
hlt
dec
call
push
movsb
push
int3
ret
add
or
mov
xor
xor
test
cmp
xchg
xor
sbb
cmpsl
adc
rclb
into
cwtl
ret
popa
xor
xchg
jge
mov
js
test
mov
cmp
in
es
fcoms
cmp
mov
pop
ja
mov
test
inc
repz
sarb
ljmp
or
push
xor
xchg
insb
inc
popa
jp
shrl
pop
pop
mov
xor
imul
xor
cmpsl
cmpsb
test
jo
es
stos
cld
andl
sub
and
jns
cmp
adc
hlt
add
jg
dec
aaa
push
xor
mov
ss
pop
sub
dec
and
cmp
aad
lret
stos
cmpsb
adc
test
or
inc
adc
gs
pop
cmpsb
movsl
pop
into
lcall
and
clc
cs
or
imul
push
popa
es
inc
jno
push
xor
movsl
outsl
mov
pop
and
inc
and
mov
pop
xchg
jbe
cmp
sub
inc
mov
and
xor
and
sub
xor
and
scas
arpl
cmp
xor
bound
pop
pop
and
sub
xchg
push
aam
pop
lcall
pop
cmp
movsb
cmp
inc
les
mov
inc
push
xchg
sub
das
shll
add
jne
out
inc
sbb
arpl
xchg
les
inc
leave
popf
loope
mov
nop
roll
and
daa
orl
movsl
cmp
ret
bound
xchg
push
and
sub
xchg
or
jne
hlt
ds
sub
and
add
scas
mov
test
movsl
inc
xchg
cmp
popa
sub
ja
subl
xor
push
push
push
sub
jb
daa
sub
jo
inc
sbbl
mov
xor
into
xchg
dec
inc
pop
push
inc
and
sbb
loope
adc
mov
pop
mov
cmpl
and
stos
push
jge
push
mov
insb
ret
push
and
pop
cmp
lods
cld
popf
scas
sbb
loope
jnp
fwait
mov
mov
push
cwtl
pop
pop
mov
sub
xlat
mov
cmp
aaa
sar
dec
ficompl
inc
cltd
test
daa
pushf
aas
popa
out
push
bound
sbb
push
mov
xchg
dec
imulb
sahf
xor
push
call
jl
and
popf
pop
and
sub
adc
dec
cmp
lds
js
imul
dec
sub
cld
jo
sarl
add
call
nop
push
and
and
inc
mov
test
adc
pop
mov
leave
imul
xchg
inc
loopne
fldenv
jge
das
mov
mov
inc
mov
xchg
push
popa
sbb
test
sub
xor
sub
pop
inc
sahf
push
inc
mov
dec
mov
fsubs
or
and
cmp
inc
sbb
xchg
cmpsl
lock
add
cltd
pop
xor
bound
and
int3
cmp
xchg
dec
popa
fdivl
ss
dec
and
incl
pop
or
imul
jo
les
adc
inc
adc
ja
xor
mov
hlt
dec
and
cmp
cltd
mov
std
mov
sub
gs
adc
shrb
pop
cmp
leave
in
inc
adc
lea
hlt
xacquire
add
iret
popa
add
loope
fldcw
stos
push
cmp
mov
sarl
and
hlt
jp
cs
lock
jmp
out
sub
adc
mov
xchg
fsubs
push
getsec
xchg
cmpsb
in
popa
cld
out
sub
mov
and
daa
mov
xchg
stos
sub
das
movsl
imul
xor
inc
cmp
pop
les
inc
ds
repz
cltd
sub
cmp
dec
in
js
and
pop
movsb
or
add
lods
out
sub
ljmp
mov
dec
jecxz
hlt
jmp
mov
cld
xchg
mov
push
repz
jae
aad
outsb
push
dec
out
adc
rorl
int
cmp
inc
pop
sbb
push
pop
pop
jecxz
inc
xor
xlat
sub
xchg
and
rcrl
sbb
cwtd
aaa
int3
imul
sarl
jae
sbb
mov
mov
hlt
and
push
xor
and
cmp
stos
xchg
loop
loop
and
pop
cmp
cmpsb
or
nop
xchg
push
add
sub
xor
push
cltd
and
pop
xor
jge
jle
sbb
inc
cmp
pop
and
stos
aas
lret
sti
and
mov
jl
and
ret
adc
xchg
sub
sub
popa
movsl
cld
std
das
pop
daa
jmp
mov
lock
clc
sub
or
enter
icebp
jp
das
loop
je
lret
int3
xor
sub
dec
cltd
sub
shlb
cmc
dec
into
pop
imul
cs
test
loope
mov
add
inc
jb
imul
xor
shll
xor
push
push
mov
sub
push
mov
jmp
jne
sub
jbe
and
ss
lcall
and
jg
cmp
inc
jbe
and
sub
fisttpl
sub
aas
mov
movsl
pop
popl
push
fwait
fs
test
movsl
cmp
lea
push
inc
clc
xor
xorb
xchg
xchg
mov
aas
cmp
push
jge
repz
cmp
sbb
inc
outsl
and
movsb
outsb
push
jnp
mov
push
jge
lods
or
sub
xor
loope
shll
cmp
sub
add
pop
push
movsl
das
pop
sbbb
jne
dec
outsl
dec
es
or
ud2
ret
scas
lods
lods
je
divl
push
mov
and
inc
adc
sub
test
incl
cwtl
sub
dec
dec
sub
mov
nop
cmp
hlt
inc
outsb
dec
inc
mov
add
sub
add
lahf
sub
sub
jnp
enter
sub
push
stos
subl
gs
repz
pop
xor
cltd
pop
push
out
sub
push
dec
cmp
sub
movsl
pushf
mov
movsb
hlt
cltd
outsb
test
cmpsb
pop
stos
test
mov
repz
push
mov
imul
mov
xchg
in
fsubl
in
aam
xor
and
negl
and
imul
pop
aam
pop
leave
popf
outsl
cwtl
pushf
mov
sbb
xchg
fsubl
inc
inc
daa
adc
pushf
inc
pop
inc
dec
sbb
outsb
sub
mov
cmp
xor
sub
jecxz
fcoms
push
sbb
add
dec
inc
mov
sub
gs
pop
pop
shll
pop
out
lahf
popa
movsb
jae
outsl
cmpsl
pop
loope
es
and
jmp
fistpll
aaa
pop
jbe
cmp
mov
push
pop
out
test
fwait
cltd
stos
hlt
inc
das
dec
mov
or
sbb
popa
lds
sbb
leave
mov
jns
xchg
push
sahf
dec
inc
and
movsl
xchg
add
xchg
push
inc
jge
loope
xor
xor
mov
mov
popf
and
add
int
cltd
aaa
dec
and
xchg
and
dec
sti
lods
hlt
inc
mov
mov
push
inc
popa
shll
cltd
xor
scas
jns
add
jl
js
outsl
dec
dec
inc
xchg
dec
and
xor
lahf
imul
sbb
jp
pop
fsubrl
pop
imul
mov
cmp
push
dec
cmpsb
cmp
push
jnp
aaa
mov
shlb
sti
dec
adc
loope
shlb
xor
cmp
inc
jnp
xchg
roll
jmp
jne
sbb
lea
lret
in
stos
cs
ja
adc
sti
xor
adc
daa
addl
and
cltd
cmp
rorl
sub
cmp
adc
imul
lret
pop
aaa
dec
xlat
dec
xchg
cmp
add
add
jp
xchg
xchg
stos
jle
push
fs
mov
inc
or
data16
xchg
and
test
pop
mov
xchg
and
xchg
xchg
add
mov
outsl
cmpsb
mov
dec
xchg
cli
xor
push
mov
dec
aas
sub
jnp
out
sub
arpl
div
xchg
mov
xor
add
popf
xchg
sbb
add
out
popa
inc
mov
sub
mov
xlat
dec
mov
lds
pop
adcl
mov
aad
inc
jns
sbb
push
sub
lea
cmc
pop
bound
test
mov
dec
adc
fwait
cld
mov
bound
xor
dec
loop
lods
and
addr16
les
test
iret
pop
xchg
inc
enter
lea
sub
lahf
cltd
adcl
and
or
pop
mov
dec
pop
jg
cmp
pop
add
mov
and
std
mov
je
shlb
or
enter
test
pop
mov
pusha
into
and
mov
and
hlt
in
mov
pop
and
test
sub
gs
xchg
movsl
pop
cmpsl
lcall
jae
divl
stc
push
and
inc
xchg
mov
xor
imul
mov
fldenv
ret
inc
dec
jae
fisubrs
xorl
mov
add
pusha
mov
daa
rcll
mov
scas
dec
push
jmp
push
and
inc
pop
mov
cmp
movsb
dec
dec
xchg
das
xor
ss
in
pop
dec
and
mov
jno
outsb
pop
std
jg
and
arpl
mov
push
and
repz
xor
mov
mov
xor
xchg
push
or
sub
inc
jecxz
xor
add
add
test
fisttpll
xor
mov
lods
lea
in
and
mov
mov
mov
shll
lahf
aam
stc
mov
and
int3
sub
negl
sub
lahf
xor
inc
lret
jb
hlt
cmc
and
xlat
inc
xchg
push
push
add
mov
xchg
dec
mov
hlt
insl
insb
push
cmpsl
jne
pop
cltd
sub
aas
std
add
cmp
xor
fwait
sbb
rorl
dec
push
imul
pop
inc
mov
pusha
loope
gs
pop
scas
add
scas
aaa
jecxz
rorb
xchg
mov
popa
shlb
int
pop
movsl
jne
roll
sti
jbe
aas
dec
es
adc
and
popa
lods
mov
and
xor
pusha
xchg
ds
jae
cmp
icebp
dec
mov
jecxz
xor
fsubs
arpl
in
inc
shll
arpl
rcll
cmpsl
pop
imul
repnz
cmp
and
fisubl
shll
movsl
mov
test
sbb
mov
mov
cmp
lea
cmp
jno
push
and
in
ljmp
pop
xchg
hlt
outsl
inc
mov
and
shrb
mov
mov
sub
sarl
and
mov
andb
subl
loope
dec
cltd
lods
notl
add
repz
add
mov
inc
add
aam
dec
daa
mov
pop
imul
pop
loopne
and
js
mov
xchg
cmc
call
xchg
mov
dec
outsb
mov
es
lock
and
jno
ds
push
cwtl
mov
sub
push
imul
sub
dec
sub
add
xor
jl
in
pop
push
mov
fistpl
inc
lds
bound
sbb
cmpsb
subl
sub
push
lea
rorl
inc
cmp
mov
insb
loope
inc
in
aaa
pop
stc
mov
pop
push
push
sub
or
or
sbb
pop
in
and
lahf
rolb
test
sar
stos
arpl
addr16
ret
lea
sbb
mov
jbe
push
mov
push
dec
and
pop
xchg
pop
xchg
faddl
lods
jnp
pop
sub
and
xchg
xorl
ja
sub
or
in
xor
fs
or
andl
pop
aaa
xor
mov
mov
cwtl
cmpsb
sub
push
cmp
xor
push
mov
imul
sbb
ret
sub
stc
imul
inc
pop
inc
jns
dec
cmc
gs
dec
mov
jns
add
dec
and
jl
popa
rcrb
xchg
sub
es
inc
cmp
xor
mov
pop
xor
addr16
sbb
mov
and
push
xor
js
mov
in
dec
aaa
aas
test
icebp
sbb
dec
in
inc
cltd
bnd
jle
popf
movsl
loopne
xor
pop
xor
push
cmp
insl
sub
inc
decb
sub
ds
loope
je
scas
jge
gs
es
in
mov
pop
inc
pop
mov
push
inc
add
mov
push
push
or
bound
add
and
xor
andb
jp
xor
aaa
cwtl
arpl
xchg
mov
enter
sahf
xchg
and
cld
subl
pop
int3
into
xor
cmp
inc
cmp
mov
in
hlt
pop
push
sbb
mov
arpl
jecxz
mov
addr16
and
and
xchg
push
fstl
arpl
mov
xchg
mov
aas
and
xor
dec
push
mov
out
mov
push
dec
mov
fcoms
lods
int3
and
xchg
pop
sbb
xchg
mov
mov
inc
inc
clc
lea
es
popa
in
cld
daa
inc
dec
leave
cmp
jg
popa
mov
push
jle
inc
cld
add
popa
adc
insl
mov
cmp
fcom
pop
ret
test
lea
xor
out
and
stos
test
dec
and
mov
nop
in
and
and
orl
jae
icebp
jmp
push
inc
mov
jl
enter
andb
ja
stc
cmpsl
frstor
in
dec
rcr
cltd
mov
mov
push
jae
sub
call
xor
clc
daa
subl
sbb
out
sub
lret
aaa
and
movsb
les
adcl
movsb
cld
je
outsl
aas
fsubs
xchg
push
jo
inc
cmp
dec
xorl
xchg
sbb
shll
jae
popf
push
dec
cwtl
push
pop
outsb
jmp
rorb
xchg
rep
addr16
xlat
jae,pn
adc
clc
lahf
cltd
inc
loopne
push
cmp
lods
jns
icebp
push
cmpsb
push
and
sbb
mov
iret
and
cmpsb
pop
cmpsb
adc
cmp
jnp
mov
jbe
cmp
aas
push
inc
jg
out
inc
dec
enter
scas
cli
mov
jnp
mov
mov
sbb
xchg
mov
jg
and
push
sub
jns
jo
cwtl
inc
daa
or
cltd
and
mov
lret
xor
cmc
jae
mov
sub
mov
inc
jb
push
lret
sub
cmpsb
push
movsb
sub
pop
mov
fwait
dec
ficompl
enter
sbb
dec
hlt
pop
test
cli
dec
ss
add
jae
ja
insb
arpl
imul
cmp
inc
sahf
xchg
stc
cmp
inc
jecxz
and
inc
dec
mov
enter
idiv
imul
lahf
mov
je
ffree
ret
pop
and
repz
fnsave
lds
xchg
inc
push
and
dec
and
inc
xor
sbb
xor
es
mov
push
and
xor
rcrl
sbb
cmp
inc
dec
js
aaa
clc
neg
and
imul
repz
jno
sti
add
xor
cmpb
jg
clc
cmpsl
andl
fwait
pop
ljmp
jnp
test
scas
add
or
lret
mov
mov
stos
pop
imul
mov
sbb
imul
xorl
setge
outsb
mov
addr16
inc
inc
dec
gs
fs
xchg
sbbl
inc
adc
bound
lock
scas
es
ret
rcrb
popa
imul
call
cmp
dec
bound
xchg
push
sbb
sub
xor
pop
and
je
jl
jp
test
inc
pop
xchg
sub
ja
stc
shrl
xor
and
stos
xchg
aad
jge
inc
sub
ja
inc
movsl
std
xchg
mov
xor
push
arpl
mov
cmpsb
and
or
ja
xor
sub
jne
out
add
cmpsb
and
inc
rcrl
jg
in
movsb
iret
cmp
and
mov
add
mov
andl
out
xchg
mov
outsb
inc
ret
jns
movsb
add
dec
inc
and
pop
aam
and
int
dec
add
call
jae
jnp
daa
les
movsl
popf
dec
xor
adc
push
mov
xchg
inc
xchg
negb
mov
dec
dec
inc
stos
mov
and
adc
and
lcall
push
rcrl
sub
push
pusha
out
cmp
inc
mov
xor
push
cmc
xor
and
outsb
xchg
pop
cmp
mov
shlb
movl
cmp
das
push
mov
fnstcw
pusha
es
outsl
loope
cltd
mov
and
call
mov
dec
xchg
aaa
jg
shr
sub
sub
addr16
sub
repz
fisubs
outsl
test
andb
das
add
cwtl
xlat
test
cmp
xchg
loop
test
and
adc
jge
push
push
loope
or
lret
push
sub
pop
es
or
cmc
jg
pop
pop
fnstenv
imul
push
daa
cmp
push
outsl
mov
jno
cmpsl
jae,pn
and
cmpsb
shll
push
push
cltd
mov
into
add
and
addb
lcall
fiadds
adc
outsl
mov
dec
inc
inc
mov
jp
test
mov
jne
aaa
cltd
sub
shlb
hlt
inc
aad
arpl
inc
rorl
mov
aaa
and
dec
add
cmp
or
sti
xchg
xor
adc
jl
aaa
xchg
popa
mov
stc
andl
and
pop
imul
inc
pop
jns
aaa
lds
insl
das
pop
push
lahf
mov
movsb
shl
inc
sbb
aaa
ret
fstl
cs
and
js
gs
stos
and
inc
sbb
jg
lds
test
and
in
imul
shll
xorl
mov
lahf
xor
sub
xor
cmp
cmc
sub
push
pop
push
outsl
push
inc
dec
arpl
repnz
lods
jne
jl
imul
push
xor
aad
xchg
and
rcr
movb
inc
inc
sub
inc
cmc
xchg
movsl
push
add
cs
xchg
inc
xor
xchg
and
push
and
je
test
inc
cmp
cld
rep
sub
inc
enter
mov
loope
mov
rorl
mov
lahf
push
cmpsb
jecxz
imul
jne
fcoms
lea
cmp
imul
push
adc
xchg
sbb
cmp
loope
xor
mov
jg
mov
clc
xor
jne
and
hlt
add
clc
push
daa
loopne
loope
and
jecxz
sub
mov
dec
push
and
jle
xchg
and
loopne
pop
mov
sub
leave
stc
lahf
xchg
add
push
or
cltd
lods
jae
adc
mov
lea
sbb
popf
cli
dec
test
inc
aad
push
adc
cmpsl
nop
jb
rcll
inc
int
xchg
aaa
clc
xchg
daa
sarl
mov
ja
cmp
insb
push
clc
rcrl
and
in
nop
jne
dec
fiaddl
xchg
jae
repz
inc
mov
push
jne
cmp
lods
dec
paddb
fwait
jae
addl
fisubs
push
test
cmpsb
jbe
cmp
and
xchg
add
jne
jg
mov
frstor
pop
out
jno,pn
lret
dec
loop
push
and
test
mov
mov
mov
and
cmp
and
and
xor
and
sub
sbb
mov
sub
sahf
ds
sbb
lahf
dec
and
pop
mov
mov
shr
and
xchg
jp
test
mov
adc
stos
ljmp
and
out
daa
mov
loop
sub
xor
and
rep
pop
cs
mov
and
xlat
bound
inc
addr16
and
jnp
mov
ljmp
pop
and
or
sahf
cmp
hlt
xor
push
in
sti
movsb
adc
iret
cmpsb
jno
lahf
or
rclb
jo
sarl
test
jp
push
mov
and
mov
mov
inc
mov
lret
and
sbb
clc
jecxz
sub
rol
sbb
fisubrl
pop
and
push
mov
push
mov
lea
pop
xor
fadd
lcall
push
lods
imul
xchg
mov
and
pop
popw
xchg
sub
popa
inc
in
sbb
sahf
jle
stos
fldt
ljmp
popa
sub
sbb
mov
add
in
xchg
aaa
inc
jg
adc
sub
mov
clc
xor
shll
push
jb
mov
mov
add
mov
je
orl
push
inc
cmp
push
aaa
popf
lret
xchg
fdivp
shll
add
mov
daa
loope
jns
xchg
mov
and
add
mov
incb
roll
push
xor
push
push
shrb
fstpl
xchg
into
js
movsl
daa
movsl
lock
mov
dec
dec
and
mov
and
mov
cmp
subb
in
and
stc
adc
ficomps
and
and
mov
push
dec
popf
addr16
cmp
insl
xchg
and
shll
inc
imul
lea
push
jo
push
stc
gs
test
sbb
push
ljmp
fwait
mov
push
popa
inc
dec
add
movsb
lods
stos
inc
inc
sbb
pop
fwait
stos
in
ja
push
jb
inc
popf
int3
inc
lods
movsl
movsl
mov
xchg
and
fbld
pop
es
mov
fnstenv
inc
jne
pusha
sbb
and
xchg
sbb
aad
and
or
inc
inc
and
cmp
pushf
and
pop
mov
cs
jns,pt
or
adc
cltd
shlb
ljmp
fldcw
ja
mov
mov
cmp
idiv
and
lret
and
rcl
sbb
xor
cs
mov
decl
int
sub
test
push
inc
call
cmp
test
cmp
push
aaa
repz
lods
mov
mov
pop
movsb
add
xchg
pushf
mov
iret
sub
mov
ficompl
mov
xchg
int
jno
shlb
out
ljmp
pop
mov
out
sysenter
mov
lret
and
and
push
jne
out
lret
and
negb
and
shl
popa
xor
add
mov
and
pop
clc
pop
std
and
sub
xchg
inc
int
insb
aas
in
mov
push
sbb
cmpsb
push
mov
mov
dec
xorl
pop
push
rcrb
fdivrs
cmp
mov
aam
dec
fwait
push
mov
loop
push
movsl
jae
addr16
dec
test
inc
jo
mov
mov
aam
arpl
xchg
nop
repz
or
mov
inc
sarl
stos
xchg
fs
mov
pusha
push
mov
adc
in
stos
fs
ror
xor
or
xorl
fiaddl
and
sar
loopne
and
jecxz
stc
and
dec
jl
dec
les
sub
rcr
jo
addr16
push
sbb
test
inc
adc
fidivs
and
cli
dec
inc
or
and
pop
in
sbb
lods
fimuls
xchg
in
adc
popl
jle
mov
mov
xchg
add
out
imul
or
pop
pop
xchg
inc
popa
pop
adc
inc
push
bound
shll
dec
push
pop
popa
jecxz
xchg
xchg
popa
mov
popa
andl
mov
add
inc
cmpsb
test
jbe
popa
cli
dec
inc
fisttpl
mov
mov
gs
and
addr16
mov
in
movsb
sub
xchg
mulb
jne
xlat
iret
fmuls
icebp
mov
xchg
scas
js
jo
adc
stos
xorb
jmp
lret
frstor
adc
rcl
lcall
stos
xchg
imul
inc
push
jne
dec
orb
mov
dec
and
mov
cli
lea
pop
stc
test
cs
and
call
mov
orl
movsb
int3
xor
push
mov
pop
and
jne
push
jp
shlb
sub
fld
push
cmc
lret
mov
cmp
fbld
repnz
jbe
mov
call
inc
or
arpl
add
lods
cli
inc
imul
aam
jp
insb
mov
jge
int
rol
and
push
daa
and
push
out
mov
insb
mov
ss
mov
xor
ds
jns
pop
push
cltd
and
lea
or
je
lods
imul
stc
and
xchg
repnz
mov
ljmp
sub
aad
iret
mov
int
push
push
icebp
cltd
mov
fisttps
dec
and
xchg
pop
and
xor
fldenv
xchg
jmp
into
xchg
mov
enter
shrb
and
and
adc
sti
iret
pop
lock
cmp
loopne
mov
sub
mov
fmulp
cmpsb
repz
scas
pop
popa
das
je
or
and
sbb
insl
or
pop
xor
pop
mov
sub
test
out
xchg
jno
fs
sbb
xchg
ss
repnz
jo
sub
and
and
xor
and
push
shll
push
and
lcall
sub
jg
dec
jno
sahf
mov
test
pop
scas
mov
and
stos
xchg
arpl
jmp
adc
adc
lods
and
jge
dec
or
xlat
fsincos
push
jns
mov
jne
mov
movsl
sbb
aaa
fstl
push
and
push
movsb
loop
popa
mov
sub
stos
sub
and
nop
add
popf
mov
loope
mov
sarb
clc
mov
dec
lcall
and
jle
jl
iret
jnp
sub
test
decb
dec
lds
mov
fidivs
mov
test
test
and
dec
in
xor
adc
add
dec
call
push
jg
and
int3
mov
jl
xor
push
mov
sub
adc
mov
mov
or
add
pop
sbbl
scas
jge
cmpsb
xchg
dec
push
iret
and
std
push
adc
lods
fwait
aam
in
les
jge
xchg
jmp
push
mov
cmc
das
cmpl
and
add
cmc
popa
mov
mov
inc
data16
lahf
mov
movsl
rcl
dec
sti
popa
test
cmpsb
dec
mov
clc
and
adc
and
dec
es
cltd
xor
in
fbstp
xchg
mov
inc
jmp
inc
inc
nop
ljmp
push
add
popf
xchg
and
pop
lcall
and
cmpsl
inc
fmul
mov
cmp
mov
rep
sbb
inc
and
es
lds
xchg
mov
ja
lea
jb
and
xchg
mov
popl
ret
shlb
xchg
mov
adc
addr16
aad
and
add
and
daa
nop
call
push
stos
sbb
and
js
or
jmp
xor
cmp
sti
sbb
lock
fnsave
das
repnz
jne
ret
lahf
icebp
and
fidivrl
jecxz
sub
scas
jbe
fbld
pop
inc
popf
sbb
and
lahf
andl
jl
enter
cmp
mov
mov
cmp
dec
movsl
bswap
and
outsb
jnp
xor
jo
cmp
ret
stos
add
fsubrs
les
xorl
xorl
dec
jg
xlat
sbbb
xchg
lock
fwait
outsl
add
xchg
ja
inc
pop
gs
jo
push
dec
cmp
bound
mov
imul
test
lret
mov
and
dec
mov
test
cld
setg
jae
je
sub
mov
testl
lods
and
or
xor
jg
sub
lret
xlat
stos
lock
pop
jmp
mov
and
es
aad
test
pop
push
insl
and
test
xchg
shll
pop
cmp
sub
inc
and
js
or
xchg
and
sbb
jns
inc
sbb
and
adc
imul
ja
mov
out
test
and
mov
pop
jns
and
mov
mov
cmpsb
lods
mov
stos
mov
mov
pop
fistpll
pusha
rcll
cmp
bound
mov
inc
mov
popa
jmp
cld
push
xchg
mov
outsl
mov
out
pop
cld
push
xchg
std
in
mov
inc
popf
imul
jmp
jne
repnz
cmpsb
out
push
stos
popa
jne
pop
pop
mov
jle
mov
sub
sub
sbb
push
or
loope
and
fldcw
pushl
sub
stos
xor
aas
push
and
inc
or
test
mov
or
push
or
ret
sbb
and
loopne
fucom
xchg
movsb
add
fldenv
sbb
pop
inc
idiv
pop
mov
mov
enter
mov
sub
mov
cmpb
adc
out
cmp
and
in
jge
or
mov
xor
dec
sub
outsl
adc
lret
sub
add
lret
pop
add
dec
xchg
mov
jbe
sub
pop
inc
dec
clc
or
pop
mulb
jne
xchg
lcall
add
movsb
cwtl
add
out
mov
test
xchg
and
popa
add
xor
pop
repnz
cs
sub
lcall
adc
push
lahf
add
lahf
loope
push
sahf
dec
test
add
xchg
sbb
in
sub
sub
adc
cmp
cli
or
add
and
pop
and
outsl
shl
jge
xchg
mov
pushf
mov
mov
adc
mov
cmpb
daa
mov
mov
sbb
add
lea
popa
shll
movsl
add
mov
sbbl
fadds
loopne
add
sub
mov
sub
cmpsb
sbb
pushf
mov
inc
mov
push
in
imul
jne
dec
sti
mov
or
loop
push
cmpl
and
mov
lcall
test
xor
mov
mov
fwait
aad
sub
shr
xchg
test
and
xor
inc
xchg
dec
insl
jns
popa
cld
push
xor
lret
popa
test
arpl
xchg
jmp
xor
ja
and
cwtl
mov
jnp
shll
cmp
jne
adc
push
repnz
dec
sbb
xchg
in
aam
and
mov
fs
cmp
nop
cmp
test
popa
je
add
sub
and
imul
cwtl
dec
sbb
repnz
inc
dec
push
and
jecxz
pop
imul
ja
cwtl
push
mov
mov
addl
xchg
sub
and
adc
and
sar
repnz
xor
sub
jns
ret
andl
mov
fdivrl
jno
xor
ror
pop
scas
call
xor
pop
loope
loope
ljmp
dec
xchg
sbb
mov
mov
lods
int3
push
cs
xor
inc
sbb
jecxz
outsl
and
out
aaa
cmp
lahf
sbb
sub
popa
test
dec
gs
ds
rolb
or
push
int3
outsl
dec
dec
push
sbb
rcrl
testb
aaa
ds
push
test
movsl
jecxz
outsl
and
sbb
push
mov
lock
adc
add
mov
cmp
das
in
mov
jno
notb
orb
jnp
out
aaa
lret
jg
movsb
inc
push
pop
dec
sub
and
inc
repnz
dec
test
mov
and
fucomi
dec
loop
addl
push
insb
cwtl
scas
inc
xchg
ds
clc
sbbl
and
mov
mov
repz
out
test
scas
into
ja
popa
push
cld
data16
and
lea
cmc
scas
loopne
in
and
dec
dec
sub
mov
and
xchg
push
movsb
push
and
sbb
imul
xchg
pop
or
adc
fldenv
shll
cwtl
insb
stos
mov
loope
xchg
js
jae
in
enter
movsl
mov
out
repnz
and
pop
idiv
es
cmp
and
bound
inc
sbb
mov
mov
mov
hlt
and
sahf
mov
jle
and
inc
mov
int3
xchg
xchg
and
mov
mov
fsubrs
jge
mov
inc
and
mov
and
inc
xchg
test
adc
xor
shlb
or
mov
sbb
sub
jne
adc
adc
add
in
cmp
enter
ljmp
aad
shlb
jo
ret
lods
push
fld
jl
fisubl
jmp
lcall
call
jecxz
and
subl
pop
popa
xlat
and
movsb
push
xorl
and
fldln2
movsl
sbb
sub
scas
adc
lret
or
fisubs
test
and
icebp
stc
imul
test
adc
xchg
mov
leave
sub
or
andb
or
xchg
cmp
jecxz
mov
das
xchg
cmp
cmp
mov
cmc
xchg
jb
push
and
jae
into
fdiv
and
mov
outsb
xor
fisubl
mov
scas
pushf
sub
and
pop
and
call
in
push
lret
pop
scas
pop
ss
push
sti
mov
ljmp
bound
popf
xchg
xchg
push
dec
mov
sbb
sub
xchg
jb
cli
mov
and
lods
stc
sti
loop
and
nop
imul
push
rcrb
mov
repnz
cmp
popa
in
jp
and
movl
jge
push
lods
outsb
cmp
adc
clc
xchg
inc
and
push
outsl
push
cmp
xchg
cmp
imul
xchg
and
fldt
shlb
pop
and
out
push
and
adcb
mov
das
xchg
scas
and
loope
and
sbb
movsb
sbb
addr16
pop
pop
xchg
or
movsb
mov
push
xchg
mov
and
out
fmuls
jl
push
add
int
nop
push
outsb
xchg
and
lods
out
lcall
rol
fbstp
push
mov
sbb
and
and
and
pop
cmp
xchg
sub
cmpsl
or
adc
cmp
dec
lods
mov
in
bound
movsb
loopne
push
in
and
js
xchg
dec
popa
mov
or
pop
fistps
push
sub
in
shlb
out
and
xchg
mov
test
add
scas
jb
andb
mov
inc
jo
and
test
fnstcw
dec
xor
bswap
and
std
ret
out
jmp
test
xchg
inc
icebp
mov
insb
xchg
testb
popa
cmpsb
push
mov
sub
add
and
enter
xchg
pop
popa
sub
pop
inc
sub
popa
mov
fwait
or
testl
xchg
jnp
lahf
into
and
inc
inc
or
dec
push
or
push
adc
sbb
aas
mov
push
and
lock
sub
push
jno
mov
out
imul
push
popa
stc
mov
int
add
arpl
fnstenv
subb
and
jb
mov
push
and
jl
sub
inc
inc
icebp
and
jmp
out
popa
xor
sbb
test
cltd
pop
jns
xchg
dec
dec
add
push
in
jb
pop
and
gs
ja
test
and
mov
xchg
insb
mov
cmp
dec
insl
adc
mov
fistps
push
cmp
cmp
int3
cmpsl
dec
dec
mov
mov
pushf
fwait
lahf
movsb
and
insb
lds
out
aam
mov
hlt
dec
out
rclb
cmpb
flds
xor
and
push
cmc
sub
int
push
add
xor
lret
sti
aas
in
cmp
cmp
mov
dec
cmpsb
scas
sub
out
sub
insl
xchg
mov
pop
fdivrs
in
rcrl
xchg
inc
cltd
xor
cltd
rorb
mov
popa
icebp
push
mov
das
push
adc
adc
xchg
aam
and
xlat
loop
fwait
int3
sbb
cmpsl
mov
cmp
mov
jns
cmc
adc
loop
int
js
xchg
inc
cmpl
movsl
mov
loope
js
pop
push
adc
into
jbe
and
fnsave
sbb
mov
push
mov
incb
and
fistl
and
and
pop
add
repnz
and
je
mov
lds
xchg
add
and
pop
xchg
inc
adc
shlb
fidivl
pop
lock
and
popa
loopne
lods
lods
jns
cs
xchg
cmp
fwait
in
jo
pop
movsl
ds
loopne
data16
sub
and
pop
cmp
repnz
and
mov
mov
and
jecxz
mov
or
sbb
popa
inc
mov
inc
and
cmp
movsb
out
imul
xor
inc
sub
xor
xlat
jb
lea
scas
mov
sbb
fwait
out
and
cwtl
push
jno
fistpl
test
and
shrb
and
jge
sbb
jmp
jmp
and
and
pop
jbe
aad
and
sub
push
movsb
cmc
notl
jl
inc
sub
hlt
negb
xor
jmp
dec
fcomps
and
or
enter
dec
adcl
movsb
out
inc
push
mov
adc
push
movsl
cmp
lahf
cmp
cmp
jns
fwait
sub
daa
outsl
fldcw
fistpl
in
dec
dec
push
jg
xchg
das
daa
cwtl
push
adc
mov
outsl
lahf
fildll
outsb
sar
adcl
orl
test
das
jne
cmp
mov
and
sahf
adc
pop
jg
and
inc
lcall
test
mov
sbbl
and
mov
mov
ss
adcl
mov
loopne
lea
outsb
sbb
or
ja
push
cmp
xor
adc
aad
cmp
hlt
mov
sub
arpl
xchg
mov
adc
xchg
shrl
and
out
mov
xchg
loope
sti
hlt
pop
push
and
repnz
imul
xor
jl
and
gs
je
push
andl
cmp
loop
addb
bound
xchg
jge
daa
sbb
mov
mov
pop
mov
outsb
xchg
mov
fcmovne
movsb
cltd
loop
jno
mov
and
or
gs
lock
lahf
lods
movsb
sbb
and
adc
mov
pop
and
std
aas
leave
pusha
frstor
mov
pop
inc
jle
and
repnz
add
test
daa
movsb
mov
xchg
mov
test
and
das
insb
mov
enter
cld
lds
and
jns
xchg
mov
stos
imul
pop
and
sub
orl
and
pop
add
imul
in
pop
addr16
repz
fistpll
push
and
cltd
inc
andb
repz
popf
sti
and
popa
bound
push
scas
sub
mov
insb
cmp
pop
roll
adc
and
cmp
inc
xchg
sub
stos
pop
pop
movsb
cwtl
cmp
add
jecxz
cmp
ficoml
dec
bound
je
xchg
clc
xor
daa
and
repz
pop
cmpsb
and
xor
add
or
xor
and
adc
and
fdivl
xor
jno
jl
add
pop
out
outsl
push
xchg
iret
shll
add
fistps
or
popf
dec
cld
jmp
pop
sti
cwtl
fstl
sub
push
mov
push
loopne
inc
inc
aaa
icebp
stos
pop
dec
jmp
and
and
inc
jge
and
or
mov
mov
jo
dec
xchg
push
in
das
aaa
int3
cltd
inc
mov
mov
je
fs
pop
add
add
jle
jbe
inc
mov
call
mov
sub
push
push
ja
data16
xor
xor
cmpb
repz
push
fs
sti
movsl
mov
jecxz
inc
pop
fdivl
sub
jl
aam
je
iret
fstpl
mov
xlat
shrb
fisttps
rorl
mov
scas
xor
sub
and
jmp
pop
movsb
aas
cmp
out
push
push
loop
movsl
popf
adc
mov
push
pop
and
ret
mov
and
iret
or
push
mov
add
cmp
add
mov
jp
push
and
lret
sub
call
xor
mov
or
and
or
and
jns
push
divb
fsubrs
xchg
adc
aaa
test
inc
mov
ljmp
ja
mov
jp
dec
aaa
mov
in
sbb
xor
jne
dec
adcl
and
outsl
sub
pop
sbb
fbld
mov
and
sbb
mov
aas
add
je
cmp
dec
mov
movsl
ss
mov
orb
movsb
push
cmc
repnz
dec
and
inc
in
and
in
sub
inc
outsb
popf
and
ss
mov
and
and
not
shlb
subl
jns
mov
lea
nop
sub
xor
mov
xchg
mov
sbb
mov
mov
jge
cli
xlat
and
mov
pop
addr16
xchg
or
pop
cmc
xor
outsb
inc
loop
cmpsl
adc
cmp
cmp
and
hlt
or
jo
shr
inc
jns
mov
sahf
mov
push
mov
add
in
test
jg
dec
popa
inc
sbb
push
lcall
xchg
xor
sub
mov
dec
iret
stc
stos
in
fwait
xchg
pop
fsubp
and
data16
or
pusha
mov
dec
adc
xchg
jns
test
mov
xor
imull
je
cmp
mov
cmp
sbb
add
lea
sub
adc
jmp
pop
jnp
scas
mov
xor
addr16
xor
leave
cmp
add
xor
and
movsl
xor
mov
arpl
movsl
popa
daa
fcompl
push
subb
insb
ret
xor
xorl
jmp
rolb
push
mov
aaa
shrl
or
xchg
xchg
addl
cmp
add
xor
dec
cmpl
and
mov
dec
nop
je
scas
and
shll
sarl
ljmp
push
inc
sahf
dec
and
leave
arpl
cwtl
imul
jns
addr16
nop
add
adc
cmpb
sbb
in
jno
outsb
mov
shrb
push
pop
sub
or
adc
and
jge
sarb
and
push
dec
push
stos
aaa
movsl
out
xchg
cmc
and
xor
out
pop
push
and
cmp
cld
sub
push
push
push
and
mov
mov
test
out
fcoml
dec
gs
cs
out
jle
jb
fsubrs
push
in
push
pusha
push
jno
pop
mov
ja
jno
or
and
sub
insb
xor
jmp
popa
insl
mov
aam
add
outsb
xchg
popf
xchg
sub
sahf
push
push
dec
sbb
clc
and
add
bound
pop
jl
xchg
ret
jae
mov
stos
add
xchg
movsb
ret
inc
mov
push
push
and
mul
adc
mov
cmpsb
adc
push
daa
inc
cmp
clc
aam
test
cwtl
xchg
mov
int3
and
mov
scas
lock
out
push
addb
orb
add
fdivrl
outsb
mov
cmp
cltd
roll
pop
cmp
xor
aas
inc
out
call
pop
and
stc
dec
push
and
jb
int3
out
inc
sub
and
insb
es
and
dec
sbb
cmpsb
out
inc
mov
xchg
loope
sbb
cld
in
sub
mov
push
pop
test
inc
aam
scas
shrb
pop
and
outsb
testb
pusha
and
push
jno
and
mov
pop
fdivs
cmp
pop
ss
dec
jbe
or
imulb
xor
lods
inc
sti
in
comiss
xchg
inc
add
xor
pop
inc
or
sub
lds
in
push
jge
std
and
out
jns
pop
mov
and
xchg
in
push
and
and
mov
arpl
sub
enter
lock
je
sub
sub
fldt
and
movsl
ds
insl
pop
mov
movsb
and
popf
mov
mov
ret
push
popa
cmpsl
and
or
lds
lods
andl
inc
sbb
stos
pop
mov
andb
pop
fnsave
sahf
mov
mov
push
push
mov
fdivrs
pop
leave
and
mov
mov
add
jl
inc
sbb
pop
fmul
and
push
fwait
loop
cmp
and
into
pop
dec
aad
mov
sbb
xor
xchg
push
add
and
leave
mov
imul
movsl
xchg
push
mov
cld
push
mov
loope
push
inc
iret
xchg
or
xchg
adc
lock
jbe
das
xchg
dec
inc
loopne
and
loope
mov
popf
daa
int
insb
shll
jle
enter
mov
fstps
and
jle
pop
cli
and
fwait
loopne
and
js
call
cmp
lods
rcll
shr
gs
das
scas
rclb
test
mov
sub
pusha
int3
cld
aas
aad
and
lds
push
pop
jne
and
inc
xchg
movsb
or
ljmp
and
and
repz
insb
xchg
sbb
jns
popa
jb
in
rclb
and
aaa
cmp
adc
or
and
sbb
inc
adc
push
dec
cs
xor
push
cmp
clc
and
insl
repnz
cmp
adc
add
and
mov
cmc
inc
pop
mov
push
lods
in
mov
in
movsb
aam
mov
xchg
addl
fisubs
dec
popa
cmc
outsl
mov
mov
adc
ljmp
insb
mov
xchg
lock
mov
or
js
add
data16
testl
test
aaa
and
pushf
lods
add
cmp
and
xor
adc
gs
outsb
pop
in
inc
imul
ret
or
dec
stos
xchg
loope
outsb
roll
lcall
push
lea
mov
shll
sub
inc
mov
movups
push
repz
sub
call
pop
out
pop
mov
cmpsb
fs
rcrb
daa
imul
xchg
int
fistpll
out
fildll
in
and
mov
arpl
or
daa
btc
and
test
movsl
and
inc
cmpsl
jno
fists
xor
cmp
pop
mov
outsl
pushf
mov
dec
or
popa
sahf
call
lods
push
jecxz
cltd
adc
mov
jl
jg
jo
addb
push
popf
pop
scas
stos
in
rcrl
xchg
push
popf
loopne
popa
or
xor
and
mov
in
fs
mov
sub
cmpsb
inc
pushf
aam
fs
xchg
icebp
and
cli
or
inc
movsl
or
and
mov
mov
dec
jae
inc
jg
mov
adc
and
lahf
add
test
push
mov
test
arpl
lahf
add
jp
jmp
movsl
loopne,pt
or
jmp
add
fstpl
push
loopne
and
sbb
call
and
mov
hlt
adc
mov
sub
jmp
loopne
pop
cmc
xor
iret
popa
in
gs
daa
and
sbb
sub
out
inc
je
and
movsl
mov
inc
into
lock
loop
cld
add
imul
cmpsl
and
jb
scas
in
inc
mov
sbb
sar
ficoms
pop
mov
push
sub
pop
jno
shlb
jne
loop
and
mov
xchg
loope
sarl
or
sbb
stos
popf
and
mov
mov
lahf
popf
sub
leave
cmp
sahf
hlt
and
shll
mov
sarl
stc
out
les
and
adc
scas
decb
lea
inc
lahf
fcoml
cmp
push
xchg
and
imul
js
mov
mov
out
nop
sub
and
add
and
stos
out
jns
insl
and
adc
sbb
mov
cmpsl
shll
mov
pop
es
cmp
jg
mov
ja
mov
mov
xchg
add
enter
leave
xor
insb
in
xchg
inc
bound
and
or
fsub
pop
xor
dec
pop
xchg
xor
gs
and
sar
lods
sbb
xor
push
lahf
inc
jecxz
lock
xor
mov
cmpsl
or
movsb
cmp
dec
adc
cld
rcll
enter
mov
icebp
add
adc
adc
and
fnstsw
mov
lcall
fdiv
lea
lock
mov
nop
cld
mov
mov
inc
jle
xchg
faddl
push
movsl
or
xor
fcompl
mov
cmpb
cltd
movsb
roll
sbbl
mov
shrl
loopne
xchg
jno
int
in
dec
sahf
movsb
lock
insb
mov
adc
in
mov
je
jge
cmp
stos
das
test
mov
mov
push
inc
je
add
and
js
sub
mov
jg
fsubl
frstor
jae
and
xchg
xorb
adc
lret
in
add
sbb
arpl
popa
jmp
into
push
xchg
ds
push
mov
sbb
adc
push
std
pop
insb
jno
rcll
and
divb
xchg
and
scas
adc
jne
bound
stos
and
xor
sub
fdivp
push
jle
scas
out
test
inc
xor
sahf
ljmp
repnz
fldl
mov
mov
movsb
or
and
mov
aam
xor
cmp
pop
aad
mov
test
xlat
das
into
jecxz
mov
divb
jge
fisubl
and
pop
mov
and
sbb
sbb
fadds
jmp
dec
test
and
ret
pop
pop
or
adc
sbb
jne
dec
mov
mov
pusha
and
test
dec
call
mov
push
and
xor
or
ljmp
addr16
leave
movsb
sarl
pop
movsl
jae
adc
or
test
inc
sbb
pop
stos
mov
addb
and
out
sub
pop
imul
and
repnz
rcr
and
in
push
and
sub
les
mov
and
imul
mov
add
cmp
out
clc
dec
in
sbb
ds
xchg
cltd
fstpt
xchg
jbe
icebp
fdivs
xchg
mov
movsb
xchg
addr16
jo
and
inc
sbb
or
outsb
and
insl
push
and
mov
insb
ds
scas
and
inc
mov
pop
sar
pop
and
xor
dec
mov
pop
cltd
sub
out
pushf
mov
and
or
insb
mov
sub
fiadds
lods
and
pop
into
je
push
xchg
sub
inc
loop
and
out
sub
xchg
xor
mov
and
adc
jae
and
ds
lods
and
lret
cmp
push
push
mov
and
xchg
sbb
cltd
or
adc
cwtl
and
ficoml
adcl
mov
fistpl
inc
xor
push
and
test
ja
inc
jp
xchg
pop
and
or
xchg
mov
push
pushl
lea
popa
aam
xor
xor
xchg
mov
adc
mov
dec
aaa
mov
mov
jns
stos
inc
mov
xchg
jg
imul
sbb
mov
jg
mov
xlat
jecxz
lahf
lods
leave
loop
mov
cmp
sub
add
out
push
and
mov
mov
and
lock
daa
xor
and
xchg
ja
aaa
arpl
and
sahf
dec
fcmovb
sbb
push
cwtl
add
in
mov
js
add
push
push
jp
and
rolb
fidivrl
xor
cs
movsb
out
xor
frstor
sub
imul
repz
and
mov
xchg
pop
loope
sahf
inc
fcmovne
add
xchg
stc
cmpl
and
add
outsb
push
popa
cs
imul
lods
jbe
loop
sarl
sbb
or
jmp
test
push
xor
inc
stos
mov
and
hlt
clc
test
shl
mov
mov
mov
adc
mov
and
ja
adc
adc
inc
ret
pushl
std
sahf
inc
xchg
inc
and
shll
mov
lcall
sahf
out
and
cld
adc
push
popa
and
enter
xchg
mov
lods
loopne
and
cmp
lret
pop
and
fcomi
lea
aam
add
push
cmpl
and
pop
push
xor
cmp
inc
jb
and
daa
mov
cmpsb
inc
pusha
push
inc
push
loop
and
iret
xchg
dec
mov
mov
jne
aam
rolb
out
lods
mov
pop
sub
shll
cmp
lods
and
mov
orb
aas
and
sub
mov
and
js
in
popf
and
movsl
cmp
jmp
cmp
and
mov
orb
adc
jmp
and
xchg
data16
jb
mov
pusha
and
aas
jo
popa
loopne
sbb
sub
xchg
jnp
in
sbb
jno
xchg
imul
inc
mov
lds
jge
and
push
cmp
add
and
xchg
cmc
mov
es
mov
and
cmpsl
aaa
adc
mov
clc
dec
pop
push
and
pop
cltd
iret
adc
mov
insb
sub
hlt
pop
movsl
and
imul
fistpll
push
daa
fidivs
scas
lods
cmp
outsl
sub
dec
and
jge
jns
mov
repz
sbb
adc
fwait
mov
and
jecxz
addl
nop
push
jmp
sar
or
add
inc
aaa
stos
and
and
pop
and
fidivrl
negl
and
mov
int
loope
pop
xchg
mov
fscale
test
testl
xchg
lea
jb
sbb
xor
push
pusha
sbb
xor
lahf
pop
out
pop
mov
xor
loopne
sarl
xchg
dec
and
std
xchg
xor
and
sub
stos
and
mov
inc
pop
andl
and
mov
xchg
mov
in
dec
push
cmpsb
jne
jbe
movsb
sub
fstpl
mov
mov
and
ljmp
jmp
ffree
add
sbb
cwtl
aas
and
fimull
jg
cli
add
jae
mov
outsb
jge
mov
jg
xchg
push
mov
jbe
int
adc
pop
dec
mov
test
and
outsb
shlb
mov
mov
out
pop
add
movsb
imul
test
mov
pop
inc
jmp
push
pop
and
les
repnz
xchg
xor
bound
jg
mov
mov
mov
xor
pop
sub
mov
xor
xchg
cli
lea
xor
inc
dec
and
popa
fimuls
jo
and
shll
and
les
push
lds
outsl
xor
xorl
or
or
sahf
sbb
mov
inc
push
pop
outsb
and
fs
cmp
mov
inc
mov
icebp
gs
frstor
and
xor
lods
inc
and
call
bound
dec
and
push
ja
movsl
push
push
and
jp
xchg
jmp
clc
and
test
pop
jge
sbbl
ljmp
aas
push
adc
lret
xchg
pop
in
insl
pop
outsl
jno
sub
fwait
pop
xchg
loop
test
jns
sbb
xor
mov
pop
dec
jno
or
and
dec
das
mov
mov
jmp
je
bound
push
add
mov
push
mov
mov
insb
aad
and
fcmovu
cli
ja
jg
dec
dec
pop
repnz
cld
xor
sub
nop
std
clc
popa
push
jle
and
and
xor
mov
xchg
aas
xchg
stc
mov
xor
test
mov
arpl
movsb
push
shll
sti
xor
cmovno
loop
pop
scas
mov
test
dec
pop
mov
int
xchg
mov
or
jg
mov
and
cld
popa
mov
inc
jbe
mov
enter
loopne
jge
enter
sarl
push
out
sub
sub
int3
imul
pop
push
cmpsl
rolb
and
sbb
pusha
sbb
andl
sbbb
xchg
push
outsl
xchg
mov
jecxz
push
hlt
jo
add
sub
add
rclb
sahf
xor
shl
rcll
push
xchg
bound
push
stc
adcb
test
outsl
mov
cmpsl
scas
and
test
aam
cli
sbb
mov
popf
push
mov
add
movsl
mov
mov
call
popa
imul
push
inc
jns
pop
lds
mov
popa
lcall
movsl
cmp
pop
cmp
lret
in
leave
xorb
cld
xor
mov
cltd
adc
inc
inc
and
enter
mov
mov
adc
mov
push
cmpsl
nop
and
test
movsb
and
call
jb
mov
mov
cltd
jle
jp
jae
push
mov
push
and
xlat
dec
mov
sarb
arpl
pushf
es
jb
cld
and
jne
add
inc
xchg
xor
sbbl
sub
jbe
out
andb
inc
shlb
sbb
lret
and
jmp
jb
sbb
js
push
out
int3
fisttpll
inc
insl
js
and
mull
mov
mov
test
fcmovnb
aad
and
stc
pop
fwait
push
mov
pop
add
cmp
call
dec
cld
mov
scas
insl
and
in
jne
mov
leave
cltd
and
jle
sbb
jae
and
cmpsl
pop
and
call
push
ljmp
jb
xchg
and
xchg
pop
jo
addr16
jmp
add
add
and
or
mov
call
das
and
dec
sbb
cwtl
cli
sub
add
mov
aas
push
sbb
lcall
dec
jns
jno
int3
xor
fs
push
inc
xor
test
sbb
adc
and
outsl
adc
shll
add
negb
sbb
mov
push
or
movsl
mov
sub
mov
mov
fldcw
lret
xchg
cmp
outsl
sub
movsb
jne
sub
ss
out
pop
and
push
xor
mov
or
pop
lds
popa
addb
test
push
loope
enter
inc
imul
aam
shl
sbb
out
and
bound
mov
and
add
xor
aad
popa
andb
and
out
mov
cs
fimuls
js
mov
and
test
inc
out
mov
call
jnp
push
std
lahf
stos
xchg
cwtl
les
sbb
pop
add
icebp
jns
aas
dec
pop
xchg
mov
mov
or
stc
pop
pop
and
lods
dec
into
mov
sub
fs
fsubrs
xchg
cmp
ja
out
js
inc
and
jb
lods
dec
cmp
mov
dec
fs
lahf
dec
idivb
cmp
sahf
mov
fwait
repz
cmpsl
inc
int
and
push
jae
movsb
sbb
fcoml
push
push
lock
mov
std
icebp
jbe
inc
pop
stos
gs
sub
add
dec
imul
bound
stc
jb
xchg
and
xchg
fcomp
dec
in
imul
scas
dec
and
pop
ja
or
and
mov
in
cmpsb
out
movsl
add
jb
and
in
cmp
gs
int3
repnz
popa
je
adc
in
xchg
and
pop
rorl
xchg
xchg
fsubs
or
movsb
cs
lcall
in
cwtl
and
push
test
je
xor
sbb
vshufps
and
pop
cmp
jno
sti
loopne
or
insl
dec
push
dec
xchg
subl
out
iret
mov
aas
xchg
add
push
insb
sbb
jne
movsl
aad
push
sub
dec
sahf
inc
ss
fidivs
scas
adc
and
addr16
rorl
push
nop
xchg
mov
aas
divb
inc
and
sbb
inc
add
icebp
xorl
xchg
dec
and
mov
ss
xchg
sahf
pop
sub
cmp
mov
insl
mov
jbe
and
and
or
lret
mov
and
repz
aaa
jns
dec
shl
lea
and
out
xchg
sbb
enter
push
pop
fstpl
insb
popf
xchg
bswap
xlat
test
ret
add
lret
jae,pn
fstpt
fwait
xchg
adc
xchg
cltd
mov
sub
mov
sub
fstl
jle
movsb
jns
test
popa
pusha
dec
es
sub
dec
jnp
mov
mov
and
mov
or
gs
and
imul
push
mov
cmp
mov
adc
lahf
add
xor
xlat
pop
movsb
sub
pusha
mov
sub
stc
fistl
hlt
or
push
repz
adc
decl
and
ficoms
rol
repnz
dec
sbb
dec
fsubrl
and
sub
inc
jns
xchg
and
sarb
into
pop
and
addr16
jb
and
mulb
dec
popa
loope
cmp
cmp
sbbl
xchg
cli
add
sbb
and
aam
cmc
out
sbb
fldcw
bound
lock
xor
arpl
cwtl
xlat
xchg
frstor
cmp
pop
repz
sarb
fwait
add
es
lahf
test
data16
fbld
pop
test
dec
cmp
xlat
jne
nop
rcrb
cmpsl
lods
push
xor
lea
xchg
adc
cmpsl
pusha
xlat
scas
jle
or
inc
sub
std
jno
ljmp
and
fnstsw
adc
stc
and
js
lret
sbb
dec
popf
and
dec
lret
inc
jbe
dec
mov
loop
aad
and
cmp
test
jecxz
mov
cmp
pop
push
jl
push
xchg
aad
loop
add
cmpsb
out
and
ss
adc
push
xor
js
inc
in
mov
sub
das
addr16
scas
mull
jmp
pop
imul
nop
dec
cld
pop
and
mov
and
es
mov
faddl
and
cmpsl
jle
adc
mov
cwtl
into
or
cmp
pop
pop
daa
in
xchg
and
pop
sbb
and
mov
popf
and
dec
je
rcrb
sbb
fwait
loope
sub
jns
stc
pop
pushf
and
negb
insl
decb
iret
jo
mov
sub
je
mov
mov
and
dec
cmp
mov
add
lea
scas
cmc
movsb
movsb
mov
repnz
pop
and
or
mov
xchg
addr16
fwait
shlb
sar
inc
jmp
loope
test
pop
xor
and
je
xchg
pop
inc
daa
xchg
cmp
out
jp
xchg
xchg
cli
int3
and
mov
inc
push
jmp
mov
fnstcw
sub
int
and
sbb
sub
cmp
ret
mov
xchg
dec
jecxz
movsb
leave
shrb
lahf
popf
testl
add
inc
cmp
bound
adcb
push
and
lcall
mov
add
daa
scas
lock
aad
pop
enter
addr16
and
and
add
into
pop
cwtl
test
cmpl
andb
movsb
popa
pop
insb
stos
pop
andl
jns
inc
js
iret
call
xchg
movsl
sbb
or
adc
mov
dec
xor
xor
movsb
scas
insl
and
lret
out
and
mov
push
aas
adc
xchg
stos
adc
aaa
and
adc
xor
sbb
mov
aaa
and
jne
jo
shll
pop
dec
and
dec
mov
iret
push
sbb
adc
mov
mov
les
or
fcomp
aad
mov
add
and
inc
repnz
sub
ljmp
xlat
lcall
add
add
imul
cmpsb
mov
push
cmpl
jbe
dec
jns
mov
and
iret
xchg
inc
adc
add
sbb
xchg
pop
and
scas
lea
and
push
out
push
and
das
popa
lret
pusha
test
movsb
call
imul
and
mov
push
fldenv
push
mov
in
and
sbb
clc
cmpsl
inc
jbe
xchg
andb
xor
cmpsb
mov
mov
loope
and
bound
dec
cltd
out
int3
mov
cmp
jnp
cmc
sbb
mov
aas
dec
aam
xchg
cmpsl
add
or
fbstp
jno
mov
mov
push
out
shlb
mov
inc
sub
test
int3
push
clc
icebp
js
dec
mov
push
lods
sbb
cmp
dec
sbb
in
rcrl
xchg
push
mov
pop
mov
mov
and
cmp
dec
movsb
loope
sub
adc
xor
xchg
sub
das
ds
out
movsb
xor
fsts
es
sub
lock
aad
xchg
out
pop
pop
and
xchg
std
cmp
add
shlb
or
mov
hlt
icebp
repnz
and
push
mov
xor
flds
and
xchg
dec
addl
xor
and
jge
and
xchg
in
fimull
shrb
xor
adc
loope
and
in
or
jnp
mov
lea
sub
ret
mov
outsl
movsl
cltd
pop
pop
and
or
sbb
and
js
xor
movsl
and
fwait
mov
arpl
outsl
mov
std
lret
andl
lcall
xchg
push
popa
mov
ss
fistps
out
jg
mov
mov
pusha
push
dec
in
mov
clc
dec
or
jp
cmc
push
push
pop
jb
popf
lret
imul
mov
and
inc
test
jno
cld
test
sbb
inc
xchg
pop
cltd
rclb
or
or
sbb
outsb
inc
scas
stos
add
ljmp
pop
jle
test
jno
push
test
add
inc
add
popa
and
push
in
js
in
and
enter
xlat
out
and
push
addr16
inc
loop
xchg
inc
and
outsb
mov
lods
sbb
fwait
dec
xor
and
orl
mov
aaa
xchg
mul
add
jmp
nop
sbb
adc
scas
and
mov
xchg
mov
or
sbb
pop
test
cld
nop
mov
mov
repnz
and
sbb
xchg
and
outsb
inc
push
scas
sub
dec
fucom
sbb
jle
scas
js,pn
cmpsb
aam
cli
push
add
lea
pop
jns
pop
mov
mov
inc
stos
das
mov
xchg
or
xor
or
lcall
dec
mov
and
cmp
xchg
test
inc
pushf
loop
fiadds
std
mov
add
test
les
xor
xor
lds
mov
in
dec
divb
and
sahf
cmpsl
mov
mov
xchg
xchg
or
xlat
popf
fbld
push
test
mov
mov
or
mov
and
out
rolb
mov
lods
cmpsb
xlat
les
and
jmp
push
adc
push
and
or
sub
enter
cld
cmp
popa
and
insb
inc
paddusb
and
popf
cli
shlb
lcall
jle
sbb
and
loop
test
xchg
inc
and
in
out
jp
sbb
iret
popa
and
fdivs
pushf
nop
and
ljmp
mov
pop
pop
cmp
fwait
lret
popa
add
mov
mov
mov
lods
xchg
jl
cmpsb
mov
mov
mov
lahf
in
mov
jp
pop
or
clc
popa
or
xchg
sub
ja
and
aam
js
and
ret
subl
jne
and
jae
and
lock
or
lods
nop
xchg
jmp
add
pop
add
aam
and
inc
iret
jb
std
dec
frstor
jno
inc
insl
pop
ucomiss
mov
and
popa
jne
cmp
push
out
push
mov
shl
and
ret
xchg
sbb
out
jmp
repnz
fsts
inc
jbe
mov
ds
and
je
cmpsb
inc
ljmp
pop
imul
xor
dec
sub
jle
and
and
pushf
iret
sbb
movsl
mov
enter
dec
adc
mov
cltd
jne
test
push
inc
pusha
rorl
inc
lret
aaa
push
pusha
or
xchg
xorb
lock
rcrl
xor
insl
push
pusha
push
rorb
repnz
or
mov
enter
rorb
stos
sahf
js
rclb
pop
sbb
or
mov
in
add
rcrl
hlt
cmpsb
mov
cmp
sub
and
fs
sti
pop
int
and
incl
insl
shlb
and
pop
scas
popf
adc
jp
in
mov
icebp
int
cli
mov
jecxz
and
jnp
pop
unpcklps
and
cld
dec
sub
push
add
and
fiaddl
insl
and
and
cmpsb
clc
xor
and
sahf
insl
mov
mulb
push
std
loopne
jmp
int3
imul
push
dec
xchg
and
jbe
xchg
arpl
je
xchg
cmp
mov
and
jp
loop
dec
push
lods
jle
je
test
inc
and
xchg
dec
les
mov
push
push
dec
mov
jmp
and
jecxz
sbb
es
and
in
xchg
add
popa
cmc
mov
mov
and
iret
dec
insl
mov
inc
sub
aas
and
and
cwtl
and
and
lret
clc
cmpsb
adc
loop
or
mov
loope
scas
cltd
push
xchg
mov
mov
cmp
jns
or
dec
inc
dec
fsub
icebp
inc
xchg
fwait
popa
sub
cltd
add
gs
popa
inc
mov
and
adc
movsl
imul
and
add
xor
cmp
sahf
shrb
and
dec
mov
mov
pop
lret
and
or
ret
mov
and
jbe
sub
mov
cli
addl
mov
fldt
iret
dec
in
xor
lds
jg
inc
cmpsl
push
xchg
std
push
and
pushf
and
and
and
je
popa
sub
inc
mov
sub
imul
sbb
in
ljmp
lcall
popa
lret
enter
mov
cmpsb
mov
ja
incb
in
jnp
pop
mov
outsl
xchg
inc
popf
test
es
jmp
test
pusha
arpl
xchg
addr16
sbb
fnstsw
mov
std
add
lds
in
pushf
cmp
xchg
sub
adc
and
gs
stos
ret
add
mov
enter
mov
xor
dec
lahf
sub
jae
je
fs
sbb
push
pop
add
add
cmp
jg
lret
xchg
inc
nop
dec
and
icebp
mov
in
and
dec
xchg
mov
enter
clc
sbb
iret
popa
mov
dec
out
and
push
xchg
mov
jae
pop
lds
sbb
add
jnp
or
mov
fnstenv
pop
test
daa
subl
and
loope
mov
or
adc
cmpsb
testb
adc
jns
cld
leave
jb
adc
pop
cmc
mov
pop
rclb
cmp
adc
imul
fcmovbe
pusha
mov
push
inc
cmp
pop
and
roll
mov
inc
inc
jno
add
jne
movsl
add
lcall
sub
mov
call
mov
pop
sub
xchg
xor
xor
pop
add
dec
mov
arpl
ss
xchg
lret
dec
popa
mov
pushf
sub
stc
lods
fidivrl
and
repz
jmp
cld
test
and
ss
sub
loope
stos
cmp
and
cli
pop
push
sahf
jmp
test
jle
lods
mov
jecxz
orl
mov
sbb
or
adc
pushf
xor
jnp
int
jg
mov
and
stos
or
insb
sbb
popa
push
pop
aaa
mov
and
shll
jmp
xlat
iret
and
outsb
stos
aas
mov
adc
repz
loopne
fidivs
addl
and
imul
loopne
xor
dec
sub
sub
stos
pop
jecxz
mov
ret
sbb
imul
negl
cmp
mov
adc
jle
outsb
mov
or
and
faddl
and
imul
ret
lcall
adc
xorl
pop
and
inc
and
scas
test
xchg
xchg
pushf
fsubrl
xor
mov
gs
sub
sbb
jb
cli
movsb
icebp
jmp
mov
xchg
and
int3
fcmovnbe
xor
cltd
sbbl
imul
pushf
mov
imul
lock
das
push
loop
popa
rorl
sbb
adc
daa
and
dec
jecxz
lods
sbb
imul
adc
and
js
test
xchg
cmp
mov
lret
inc
shlb
mov
ljmp
add
add
push
sarl
fdivrl
in
aad
fildl
pushf
and
and
shr
mov
fdivs
inc
xor
add
and
jmp
test
popa
sub
inc
popf
and
pop
sub
inc
icebp
mov
enter
or
into
add
inc
scas
add
push
sub
test
data16
cli
int3
mov
cld
xchg
dec
inc
and
cmpb
vmwrite
fidivs
push
roll
ss
in
jmp
cmp
dec
mov
and
movsl
mov
xor
adc
mov
sbb
push
and
ret
sti
jecxz
aam
xor
and
fmul
test
push
pop
ljmp
popa
cmp
out
or
repz
mov
orl
jo
sbbb
insb
cmp
ret
enterw
mov
orl
push
ds
sbb
decb
cmp
mov
je
inc
stc
aaa
daa
and
lods
out
ret
mull
les
xchg
movsl
in
addb
popf
and
dec
mov
sub
jbe
mov
lods
and
loopne
mov
and
lret
lahf
jl
inc
sub
outsl
aas
push
fwait
js
pop
pop
push
pop
sbb
and
clc
xchg
fdivl
ljmp
or
pop
jae
xor
inc
mov
mov
daa
xor
lea
xor
xchg
int
cmp
lds
and
or
je
cmp
xor
adc
es
add
lods
popa
and
jnp
push
ficompl
insl
push
mov
jno
scas
pop
sub
mov
sub
xorb
pusha
xchg
xchg
sub
fwait
test
imul
gs
cs
jmp
ds
fwait
push
and
adc
jo
lahf
cmpsl
icebp
aas
test
adc
into
or
mov
roll
jge
xor
aam
and
push
mov
dec
mov
xchg
int
cmp
jnp
jg
repz
lcall
nop
popf
cmp
sub
jns
push
pop
xor
pop
in
xchg
add
sub
test
xchg
and
shll
js
push
xchg
push
mov
mov
aaa
inc
push
xor
in
iret
popa
in
out
jl
adcl
pusha
add
xor
xor
inc
lcall
lret
mov
mov
pop
and
mov
ja
ffreep
mov
shrl
adc
jmp
jb
jo
lods
je
and
push
scas
add
lret
mov
jp
es
sbb
shl
into
jo
and
fsts
or
repz
fwait
mov
int3
push
push
and
mov
jae
dec
mov
hlt
jne
mov
mov
daa
mov
xchg
aam
repz
ljmp
and
jge
ret
dec
daa
mov
lods
cmp
in
rorb
aas
push
gs
fimuls
sbb
ret
mov
and
and
and
jp
xchg
jno
xchg
push
pop
pop
out
bound
mov
popa
nop
push
repnz
mov
aam
ficompl
loop
stos
dec
ljmp
inc
loopne
mov
sub
mov
adc
and
ds
mov
mov
call
fmuls
jmp
rcr
or
repnz
xor
cmp
sbb
inc
mov
repnz
add
push
in
pop
and
add
inc
rorl
and
es
jns
mov
addr16
cmp
int3
sub
js
jge
and
push
jmp
aad
stc
fsubrl
and
sbb
cltd
aas
ds
push
ja
push
add
add
sahf
out
and
shrd
xorb
call
stc
inc
lods
push
and
das
and
wbinvd
jmp
pop
push
xor
mov
scas
mov
outsb
test
lret
sub
add
clc
cmpl
bound
dec
mov
insb
std
mov
xor
sbb
lea
pop
cmp
xchg
shlb
sahf
ja
xchg
lods
adc
sbb
sbb
into
sbb
inc
cmpsb
fldl
and
mov
jb
jns
sub
mov
sbb
or
stos
cmp
repz
rolb
adc
xor
mov
dec
sub
and
adc
sub
mov
cmp
out
movsb
sbb
test
mov
or
ret
mov
or
fldt
arpl
inc
xchg
xor
clc
xorl
fildll
jnp
xor
jno
add
ss
mull
popa
jecxz
movsb
mov
loope
fstps
imul
shlb
push
iret
mov
shll
mov
push
mov
cmpsl
xchg
loope
cmp
movb
sbb
jmp
ret
inc
popa
out
lcall
cli
xor
outsb
fsubs
xor
movsl
push
in
arpl
inc
and
shlb
and
rcrb
mov
pop
mov
enter
and
popf
push
mov
sahf
idiv
sub
cmp
jp
add
ret
aam
mov
test
push
mov
je
sub
frstor
fstl
dec
divb
dec
sbb
popa
dec
test
xchg
mov
je
mull
mov
mov
mov
bswap
and
push
mov
inc
aam
inc
sarl
popa
das
stc
in
mov
divl
jle
cmp
push
and
sub
cmp
and
and
test
inc
sbb
pop
lahf
test
cmpsb
cmp
dec
popa
cmp
jge
shlb
out
jo
insb
notb
aad
mov
cmc
decl
movsb
jge
mov
fcomps
and
push
mov
and
leave
mov
enter
scas
mov
xchg
jg
or
and
push
dec
pushf
sbb
add
sti
adc
mov
cmp
mov
cmp
or
xchg
mov
mov
jge
jp
sbb
popa
and
lods
mov
dec
aad
fiadds
cli
mov
inc
insl
enter
lods
faddl
dec
dec
jge
pop
fbld
pop
xchg
mov
jmp
jnp
popl
xor
pop
flds
cmp
shl
and
popf
rolb
xchg
iret
or
pop
hlt
push
in
adc
rorl
daa
fistps
mov
fs
popa
je
pop
adc
mov
mov
lea
lds
leave
and
cs
xchg
xor
mov
mov
sbb
fisttpll
pop
pop
push
and
cld
xor
xchg
push
jbe
and
jp
cmpsl
cltd
shl
and
add
cld
xor
mov
or
jae
adc
arpl
rclb
and
push
popa
jl
xchg
sub
and
push
and
jge
pop
aad
xor
cwtl
cmpb
nop
adc
and
mov
and
and
arpl
cmp
dec
aam
imul
push
cltd
in
shll
out
xor
fcmovnu
sti
and
pop
sub
inc
hlt
sbb
lret
repnz
fists
aas
push
addb
sub
mov
insl
jns
mov
and
jmp
cmp
fists
mov
ret
and
sti
data16
mov
ss
in
xchg
fwait
xchg
cmp
mov
and
lea
lcall
ret
mov
add
out
cld
xchg
popa
and
scas
subb
mov
push
xchg
dec
mov
repz
movsl
adc
dec
xlat
xorb
xchg
cwtl
and
dec
fbld
out
rorl
out
test
loop
bound
and
sbb
cltd
adc
movsb
and
cmpsl
cmp
xchg
cmp
fildll
sub
insb
xchg
in
loope
add
scas
sbb
jge
mov
popa
xor
lea
and
pop
and
adc
jp,pt
jle
jmp
in
and
pop
lcall
inc
stc
mov
xchg
xor
and
adc
imul
jle
fsubl
das
or
add
call
mov
push
mov
mov
push
mov
mov
in
fcomps
pop
cli
add
mov
fdiv
scas
cltd
out
xor
shrl
cmovns
jmp
jns
das
sub
mov
insb
stc
xchg
inc
loope
mov
and
sub
and
xchg
test
push
and
fisubs
mov
mov
andl
imul
insl
into
and
mov
mov
cs
inc
fcmovne
movsb
sbb
popa
and
ja
icebp
lds
fwait
pushf
and
adc
and
dec
clc
mov
and
push
cltd
popa
outsb
adc
sub
mov
je
shll
adc
ds
daa
add
sahf
subb
in
add
in
fwait
clc
xor
into
mov
and
push
fabs
jg
ss
loopne
test
mov
call
mov
push
jne
scas
cld
adc
icebp
and
out
insl
xor
adc
aaa
mov
fisubrs
gs
mov
pop
in
and
or
xchg
jbe
pushf
lret
int
cmp
scas
cmpsb
loope
add
aad
mov
and
jp
lea
dec
mov
call
pop
movsl
mov
inc
mov
pop
aad
in
xchg
shll
in
cmp
sbb
outsl
fisubl
add
ss
push
mov
data16
lret
and
and
push
fs
nop
jbe
and
icebp
xor
pop
sbb
cltd
les
push
ret
pop
xor
xchg
mov
movhps
in
mov
lods
jbe
ficoml
and
pop
dec
cmc
mov
dec
jnp
fldcw
in
dec
lods
out
pop
add
add
xor
popa
and
cld
ds
bound
or
stc
lret
sbb
sub
leave
jmp
pusha
mov
adc
iret
dec
imul
into
or
loopne
loop
movsl
sbb
and
call
mov
sub
add
shll
in
popa
outsl
xor
shlb
pusha
xor
and
call
xor
ret
pop
ss
mov
dec
add
mov
xchg
bound
fwait
lcall
insb
mov
hlt
sub
ds
fnstcw
popa
inc
or
ficoml
movsb
mov
pushf
and
sahf
loope
pop
pusha
jle
fisubs
dec
add
pop
and
iret
mov
fistl
incl
mov
push
and
cld
mov
es
arpl
and
fsubrs
jge
test
cmc
or
sarl
sub
sbb
aas
scas
mov
dec
and
xchg
inc
adc
fwait
sub
enter
and
xchg
shll
int
add
mov
gs
cli
dec
dec
popf
add
or
mov
push
das
push
mov
ljmp
ret
xchg
xchg
jne
loop
pmaxsw
jno
call
jge
inc
sbb
xchg
jecxz
add
mov
xlat
push
mov
imul
inc
fsubp
pusha
jbe
scas
repnz
add
aam
push
push
popf
xchg
fsubs
js
out
jle
cmp
or
add
mov
jno
cmp
testl
push
js
xor
and
pushf
andl
fwait
sbb
scas
fsubl
pusha
mov
and
jno
aas
push
js
std
and
cmp
loop
inc
add
jae
sbb
inc
cmp
and
xchg
push
jns
in
pushf
sti
and
or
xchg
xor
and
jmp
or
stos
lar
lea
and
scas
lock
cld
out
or
xchg
xchg
adc
sbb
pop
mov
stc
and
sub
jo
aam
add
rcll
and
adc
cmpsb
and
push
mov
stos
cmp
lds
mov
jecxz
add
add
ja
add
and
or
scas
lock
orb
movsb
icebp
mov
ja
mov
leave
add
mov
imul
mov
jecxz
and
jge
mov
cmp
pop
in
add
idivl
mov
inc
adc
iret
popa
mov
add
sbb
xchg
mov
jmp
pop
and
enter
popf
mov
sbb
inc
int
std
repz
mov
vmwrite
and
les
lcall
nop
jmp
and
call
ret
cmp
push
sahf
and
insb
push
push
dec
pushf
jmp
andb
xor
inc
aaa
pop
mov
cmp
lahf
sub
jg
ja
mov
mov
jp
and
sbb
sbb
and
sub
fisubl
fildll
fwait
jnp
and
pop
test
jg
lds
xchg
jp
fistpll
test
mov
push
inc
push
mov
mov
in
inc
stos
andl
push
cmp
pop
and
ret
adc
rolb
sub
xor
and
or
sbbl
loop
xchg
fs
mov
mov
mov
mov
or
adc
inc
popf
and
sbb
and
xchg
sub
pop
cmpb
push
and
jae
in
inc
adc
sbb
mov
xchg
sub
push
mov
add
call
and
lea
sub
inc
push
sbb
or
mov
pop
popa
add
data16
cmp
lea
lods
sbb
mov
mov
add
xchg
loope
imul
push
mov
adc
fiadds
pop
jae
and
cmp
loope
cmc
sbb
and
or
daa
std
push
mov
jnp
lods
adc
sar
and
repz
and
xchg
int
out
push
and
mov
pusha
mov
jno
dec
lds
mov
xlat
hlt
jne
lods
sub
jmp
into
cmp
adc
adcl
pop
enter
pop
sbb
push
and
ds
push
mov
and
push
inc
andb
cmp
gs
outsl
loopne
and
std
mov
sub
add
inc
insb
pushf
inc
lods
mov
clc
test
pop
ficoml
and
loopne
adc
xor
push
and
cltd
cmp
ror
and
lock
test
sbb
inc
jae
adc
repz
iret
mull
fadd
xor
mov
cmp
and
jp
pop
mov
cmp
jge
or
and
call
rcr
fsubl
in
adc
cmp
dec
add
and
cmp
fildll
pop
cmp
cmp
xor
push
jnp
and
jmp
xor
test
jge
stos
sbb
imul
or
stc
mov
mov
mov
jl
popa
imul
lea
inc
scas
add
stos
mov
sub
movsl
shll
sarb
fbld
dec
out
jae
nop
clc
fadds
outsb
mov
out
cmpl
jo
jge
mov
outsl
xchg
cmpl
mov
sbb
pop
rolb
xor
into
mov
test
inc
lahf
gs
and
jp
xchg
dec
cmp
mov
ret
add
cmpsb
into
inc
add
push
iret
popa
aam
mov
movsb
lcall
mov
mov
jmp
or
scas
adc
pushf
imul
stos
and
scas
push
sahf
hlt
pop
cld
adc
xchg
and
mov
in
mov
and
pop
ja
mov
in
and
test
adc
popf
cltd
movsl
dec
cmpb
xchg
ret
aad
pop
xchg
in
popa
mov
int
sub
dec
jge
cltd
sbb
sbb
push
dec
test
push
sub
inc
mov
and
mov
arpl
cmpsb
mov
ja
adc
mov
iret
sar
or
jbe
mov
jnp
xor
outsb
ljmp
and
pop
jb
loopne
mov
int
adc
in
jo
cld
lahf
pop
sbb
sbb
lea
ficoml
pop
test
sbb
mov
push
popa
addb
pushf
mov
in
popa
sbb
jle
dec
movsb
stc
sbb
cmp
mov
mov
mov
inc
jl
add
pop
icebp
movsl
enter
cld
insb
movsl
mov
dec
push
std
xor
bound
mov
mov
xchg
out
loop
daa
arpl
movsb
outsl
dec
push
and
mov
sub
inc
iret
shlb
sub
test
ret
repz
pushf
sbb
dec
gs
fstpl
nop
outsb
mov
jne
sub
pop
insb
add
or
pop
mov
fildl
and
sbb
and
out
push
and
cmpb
sbb
and
jo
outsl
adc
scas
jnp
mov
in
ja
push
lea
aad
je
cmp
and
sub
sbb
fs
shll
cmp
inc
imul
in
sahf
loope
int3
loop
scas
push
out
shrb
mov
inc
repz
xorl
xchg
jne
jno
cld
mov
in
sub
fldt
pop
pushf
shlb
sub
push
repnz
cmc
insb
and
fstp
fcmovne
jo
xor
movsl
test
dec
fdivs
xchg
je
push
xor
adc
add
dec
cwtl
in
ljmp
stos
rorb
movsb
cmp
sbb
jae
and
mov
xchg
xor
pop
outsl
adc
pop
mov
or
lea
and
mov
in
lcall
loope,pn
les
inc
daa
or
test
mov
cltd
sub
and
ljmp
adc
add
jmp
xor
ljmp
inc
lock
aas
dec
jg
cmp
out
xchg
aaa
popa
subb
push
and
sbb
scas
cmpsl
dec
sahf
call
cmp
jno
push
testl
addb
loope
and
out
dec
pushf
test
stc
adc
mov
mul
jg
and
add
or
ljmp
jno
or
out
icebp
and
inc
scas
leave
repnz
and
mov
pop
test
xor
and
pop
ljmp
mov
adc
mov
xchg
or
repnz
xor
imul
loopne
mov
sbb
mov
test
cltd
shrl
and
pop
insl
and
pop
mov
inc
aaa
xor
xor
ja
cli
lcall
xchg
frstor
mov
dec
and
adc
loope
roll
ret
xchg
movl
and
mov
mov
pop
lods
add
push
dec
insl
or
mov
mov
push
mov
xor
aad
test
dec
and
mov
inc
cli
pushf
cmp
fwait
andl
xchg
mov
inc
and
or
and
fmull
push
jmp
call
repz
dec
pop
add
stc
inc
and
lods
inc
lret
xchg
mov
mov
mov
dec
pop
xor
pop
xorl
mov
shlb
clc
shrl
mov
jno
into
add
movsl
fiadds
lcall
insb
rcrb
cmpsb
out
and
je
add
int
stos
mov
jne
sub
adc
mov
mov
outsb
pop
xor
and
pop
lcall
and
popa
jle
dec
mov
pusha
cmp
stos
aas
imul
popf
and
sub
imulb
test
pop
xchg
pop
push
popa
sbb
and
jo
hlt
mov
or
sub
movsl
cmp
xchg
mov
sub
test
push
movsl
dec
daa
sbbl
cld
mov
repnz
add
push
outsl
pop
and
mov
das
xchg
fs
insb
andl
ret
jb
test
movsl
jno
popf
xor
pushf
xchg
movsb
xchg
imul
cwtl
and
outsl
xchg
loope
movsl
ja
addr16
and
aad
jl
xor
in
push
and
pop
inc
jmp
ret
leave
inc
and
and
into
lcall
xchg
movl
lods
cmc
and
scas
enter
mov
in
insl
outsb
mov
mov
ja
inc
mov
mov
jnp
mov
in
pop
pop
mov
and
mov
hlt
pop
movsb
and
mov
adc
pop
jge
jns
js
pop
and
cmp
jl
aad
adc
dec
push
cwtl
dec
popa
enter
push
push
push
and
dec
jno
jb
loope
jge
mov
pop
test
dec
jp
dec
and
mov
push
lea
mov
jae
or
and
mov
neg
jbe
fisubs
jmp
imul
sbb
stos
and
cwtl
aad
mov
adcl
roll
inc
and
mov
out
pop
xchg
inc
jmp
lret
sbb
test
lods
mov
test
jbe
mov
cmpsb
ja
shlb
pushf
inc
jecxz
xchg
adc
push
pop
mov
mov
loope
mov
cmc
and
mov
sbb
jno
xor
imul
pop
and
pop
fidivs
mov
cmpsb
pop
xor
mov
or
inc
imul
xlat
inc
cmpsl
sti
ret
inc
and
adc
shlb
jae
sub
fisttpll
mov
push
push
aad
add
and
adcb
add
xchg
dec
xchg
js
xchg
cltd
out
sub
inc
testl
cltd
sub
mov
and
jns
imul
rcll
test
in
jnp
push
daa
and
repnz
les
popa
shlb
cmp
push
fisubrs
inc
data16
mov
mov
dec
loope
test
sbb
push
dec
add
sub
cmpsl
lods
mov
mov
jp
gs
dec
jno,pt
call
and
push
dec
mov
in
mov
push
dec
inc
repnz
sub
push
test
out
mov
and
loopne
fucomp
lahf
or
popf
stc
and
mov
fstpl
mov
ja
sbb
lds
adc
subb
dec
movsl
pop
mov
popa
sarb
test
jbe
dec
ljmp
cmc
bnd
mov
mulb
xchg
and
jno
cmp
js
shl
mov
pop
jecxz
fcoml
cmp
pusha
sub
test
push
push
inc
add
sub
pop
and
icebp
and
push
and
push
add
mov
mov
add
adc
xchg
and
push
cmpsl
lds
out
and
fiaddl
mov
jnp
pop
dec
popa
ret
cmp
fcmovu
inc
pop
je
ds
andb
pop
and
shll
jnp
or
in
and
mov
lock
push
negb
add
into
pop
mov
or
push
fwait
mov
sub
cmpsb
dec
xor
cmp
divb
andb
shrb
aas
mov
loop
xor
cmp
xchg
repnz
mov
sub
cwtl
ss
sbb
aam
and
call
dec
loopne
and
xor
nop
mulb
push
into
and
cwtl
jno
out
or
outsl
mov
xor
and
dec
mov
enter
and
jno
jbe
faddp
lea
cmpsb
mov
inc
jne
lahf
div
out
and
xchg
pop
adc
cmp
sbbl
js
xchg
es
into
pop
rcll
loopne
ret
pop
incb
adcb
inc
das
aad
push
ds
js
inc
push
ja
icebp
push
sub
mov
cmc
lock
cmpl
sbb
in
dec
mov
push
clc
xchg
cli
lret
sub
pop
sahf
call
gs
mov
lods
cmp
cmp
outsb
mov
and
shll
xchg
jp
lahf
xor
out
or
loopne
lcall
xor
add
shll
mov
int3
flds
dec
xchg
xchg
dec
mov
and
sub
popa
mov
cmc
movsl
inc
loop
out
adc
popf
xchg
push
jae
test
push
lahf
jp
mulb
mov
xchg
or
add
in
xor
outsb
push
in
fstpt
and
push
ret
rcr
scas
and
ss
mov
and
mov
decb
push
and
xchg
outsb
dec
and
add
sarb
sbb
jae
or
push
sti
pop
pop
test
fdiv
out
jbe
iret
mov
and
mov
xchg
dec
pusha
insl
push
decb
jmp
addr16
les
inc
loopne
movsb
inc
pushf
shrl
das
and
push
lock
xor
inc
and
jo
fisubs
inc
xor
cmpsl
dec
mov
fcompl
test
int3
push
mov
mov
add
push
push
int
cltd
jmp
mov
xor
lds
xor
inc
mov
or
mov
test
lahf
aam
push
int
xchg
lds
repnz
and
test
inc
je
mov
xchg
dec
jge
cli
leave
mov
jle
jl
and
mov
out
inc
adc
cmp
cwtl
xor
clc
imull
adc
mov
scas
das
xor
inc
pop
jge
cmp
mov
cmp
xor
cld
inc
and
js
gs
loopne
out
and
add
push
movsl
lahf
lret
and
les
rorb
sub
sub
inc
jae
and
jg
cmpsl
lret
sbb
cmp
faddp
aas
xchg
popa
outsl
push
push
pop
mov
js
xchg
dec
lock
inc
and
pop
fdivr
popa
icebp
lea
push
test
rorb
mov
dec
pop
repnz
add
test
cmp
aad
adc
popa
pop
in
dec
push
fidivrs
push
mov
outsb
push
stc
and
cmpsb
sbb
pop
outsl
dec
and
xor
xchg
mov
aas
cwtl
pop
mov
aaa
add
mov
flds
and
add
sbb
mov
fisubs
mov
sar
push
cmc
xor
stos
and
sbb
out
and
push
push
adc
data16
add
repz
popa
fcmovnb
das
and
mov
push
inc
mulb
scas
mov
xchg
pop
mov
xor
jmp
pop
movnti
xor
sbb
mov
sahf
and
daa
bound
and
xchg
pop
mull
xor
adc
xchg
and
xor
adc
dec
idivb
test
jno
add
xchg
and
sub
sbbl
and
lock
xchg
mov
add
in
xchg
push
sub
imul
jns
xchg
and
xlat
lret
lret
and
pop
popa
rcll
and
cmp
pushf
mov
push
nop
add
loope
scas
and
jle
xchg
and
add
popa
rcrb
and
inc
lret
jmp
fwait
adc
xchg
addr16
aam
rorb
jmp
and
push
jo
out
mov
out
and
cmpsb
mov
and
mov
cmp
mov
add
mov
lahf
jbe
cmpsb
dec
and
xor
lods
and
inc
daa
xchg
and
xor
add
popa
icebp
sub
inc
filds
int
stos
mov
cmc
and
repz
xchg
mov
sti
popa
test
and
pop
cs
and
push
pushf
xchg
stos
and
pop
cmp
cmpsb
mov
lcall
data16
cmpl
fsubs
test
xchg
std
or
mov
xchg
pop
jno
sub
mov
push
sub
mov
sarb
cmpsl
dec
push
pushf
outsb
add
cltd
popa
pusha
and
ds
dec
cmp
scas
xchg
mov
fisttpll
lock
xchg
adc
fsubl
test
sub
inc
or
push
in
iret
mov
sbb
push
inc
sub
loop
pop
push
xor
leave
mov
push
shlb
insl
push
push
insb
repnz
lock
and
mov
pop
movsb
and
pop
add
jg
xchg
std
lods
ret
and
add
sbb
shrl
out
fisubrl
popa
add
xchg
mov
or
cmp
xor
push
stos
add
jbe
pop
shlb
sbb
mov
pop
pop
sub
in
jns
cltd
mov
push
cmp
movsb
bound
lret
sbb
mov
hlt
mov
jb
and
and
bound
lahf
and
xor
fildll
mov
js
insl
xchg
fsubl
pop
imul
scas
mov
xchg
outsb
lahf
add
jnp
inc
pop
incb
jb
mov
mov
sub
ret
rcl
or
aad
popa
cmp
cmpsl
jns
inc
divl
mov
in
xchg
andl
or
adc
push
mov
iret
outsb
mov
es
scas
int3
and
inc
rol
jnp
mov
jnp
push
cmc
lret
mov
repz
je
cs
in
push
andl
hlt
and
fs
mov
loop
mov
inc
and
and
cmp
out
fwait
movsb
lcall
push
push
je
js
das
nop
xchg
pushf
xchg
add
test
xor
sub
lahf
test
pop
sbb
insb
arpl
push
and
imull
mov
add
stc
mov
outsb
in
xor
and
pop
repz
cmp
outsb
fcmovbe
rcrl
fwait
sbb
pop
pop
and
push
popa
movsb
sbb
add
jo
stos
push
push
cmp
and
fcoml
test
cmp
lret
and
inc
cmp
cld
in
aam
jo
js
xchg
cmp
mov
cs
and
push
adc
or
push
in
daa
push
cmpl
cmp
inc
inc
and
jge
lret
fisubs
jns
and
icebp
xor
ret
sbb
adc
stc
dec
dec
push
or
inc
loopne
movsb
ds
adc
xorl
cmp
and
enter
repz
popa
dec
add
cmp
in
dec
dec
and
add
mov
mov
inc
popf
ja
dec
std
sbb
xchg
call
push
push
and
cmp
jecxz
mov
mov
push
and
xor
mov
cmp
push
sub
out
and
push
outsb
outsl
in
daa
pop
push
icebp
movsb
cmp
pop
add
mov
push
pop
mov
push
dec
arpl
add
and
ja
es
leave
dec
fs
mov
imul
mov
cmpsl
pop
lret
arpl
and
in
xor
les
fiaddl
jle
pop
xchg
push
and
cmp
ljmp
and
or
cwtl
out
aas
and
xor
pop
push
sti
xchg
mov
jo
mov
mov
iret
add
cltd
cmpsl
sub
mov
dec
jg
and
repnz
xor
jbe
lcall
test
sub
jo
popa
or
test
jge
sbb
push
adc
not
into
fwait
clc
and
mov
and
sbb
das
push
dec
adc
cli
and
mov
int
add
pop
ljmp
xchg
fbld
lret
xchg
cld
and
in
pushf
stos
and
jecxz
dec
pusha
and
and
fmuls
stos
out
subb
adc
add
inc
jnp
aaa
mov
and
je
mov
std
jg
movsl
inc
xchg
into
jmp
rcrb
stos
pop
pop
out
lea
popa
shr
push
push
bound
and
pop
dec
push
lahf
aam
and
clc
test
and
sub
sbb
mov
repz
stos
xchg
das
sarl
gs
cmp
lods
mov
sbb
and
mov
mov
test
sub
call
aad
fs
and
leave
test
jl
dec
popa
add
ljmp
mov
out
orl
data16
jno
add
and
dec
and
and
repnz
inc
sbb
mov
iret
mov
sbb
test
pop
lds
call
decb
and
addr16
xchg
test
lcall
inc
jge
push
and
xor
jae
jle
das
js
lock
imul
jecxz
xor
adc
cmp
dec
les
adc
iret
and
ljmp
and
mov
cmp
xchg
push
movsb
jecxz
fwait
push
cmp
addl
repz
inc
js
mov
fnstcw
mov
push
jne
mov
or
rolb
ficompl
push
gs
and
push
repnz
jnp
mov
jbe
xor
add
in
cwtl
adc
bt
mov
fisttpl
jns
scas
bound
in
xchg
roll
xorb
addr16
mov
test
fsubrl
mov
and
outsl
adc
dec
imul
ljmp
and
fwait
and
cmp
push
inc
cld
xor
rolb
lahf
add
rorb
inc
test
xchg
gs
int3
and
clc
jg
mov
pushf
in
sbb
or
adcl
sub
push
lds
xchg
js
ljmp
stos
sub
cwtl
xor
add
add
popa
mov
cmp
jle
jb
mov
aad
xor
adc
shrb
dec
arpl
leave
sub
clc
add
xchg
jl
pop
push
loopne
and
pop
and
inc
push
sub
and
cmp
cmp
std
adc
movsb
pop
mov
mov
push
and
out
jecxz
mov
int
pop
cmp
and
shrl
mov
and
enter
fcoml
xchg
mov
mov
das
jecxz
pop
fidivl
xor
imul
mov
hlt
and
xchg
outsl
jge
int3
icebp
and
adc
cltd
and
sub
pop
and
call
mov
mov
push
add
push
movsl
pop
adc
jne
add
fcmovnu
mov
mov
push
pop
shrb
add
js
xchg
jp
mov
fwait
shll
test
sub
adc
bound
jns
or
mov
xchg
pushf
mov
jbe
xchg
pop
cmp
xor
rorl
xor
lods
sub
pop
sub
lds
popa
int
repnz
shlb
into
mov
out
and
insb
fs
stc
adc
cltd
sti
mov
int3
xchg
jns
xor
and
jl
imul
ja
cli
in
movsb
cmp
sarb
jns
aaa
cmpsb
shl
and
mov
enter
add
xor
xor
ss
and
leave
pusha
push
cwtl
mov
xchg
daa
xchg
sub
icebp
push
rcl
mov
lahf
inc
jne
pop
mov
and
test
enter
fisubrs
imul
pushf
mov
push
or
mov
and
mov
cld
cmp
es
xchg
inc
rol
sbb
mov
scas
xchg
cmp
scas
cmp
push
shlb
pop
dec
aaa
popa
sub
sbb
popa
xchg
mov
fisubs
lret
lods
sub
fnstenv
xlat
and
sbb
push
outsb
mov
dec
sahf
add
in
or
mov
daa
or
jecxz
stos
jno
call
mov
sbb
jle
test
adcl
fwait
dec
and
insl
cmp
test
adc
or
xchg
inc
and
into
jae
jmp
cld
test
sbb
insl
stos
popf
incl
movsl
push
sub
jbe
jmp
xchg
xchg
mov
fwait
jmp
mov
pop
js
mov
daa
mov
and
xchg
jns
aam
scas
loopne
inc
and
ds
imul
inc
jecxz
loope
sbbl
xchg
sahf
and
movsl
ljmp
icebp
data16
fisttpl
dec
popa
fwait
mov
repz
add
popa
jae
sub
ret
stos
aam
scas
push
xchg
cmp
outsl
shlb
fwait
lret
movsb
push
movsb
pop
jns
lahf
adc
inc
fsub
and
fs
mov
and
and
fisubs
pop
sub
mov
addb
jge
mov
fistl
movsl
bound
cmp
or
jne
and
fwait
inc
and
sbb
sub
iret
int3
ljmp
mov
sti
cmp
popa
mov
stos
inc
xchg
sub
insb
inc
mov
pop
in
push
xchg
push
pusha
and
mov
xchg
scas
outsb
jbe
and
lods
xor
and
popf
call
mov
lods
mov
and
movsb
xchg
xchg
in
movsb
and
loop
dec
gs
popa
pop
aaa
mov
lcall
or
mov
ret
nop
into
dec
movsb
out
bound
push
adc
repz
fcoms
outsl
xor
iret
adc
jmp
scas
nop
cmpsb
insl
loopne
dec
popa
loope
sbb
sub
adc
jb
and
sub
pop
div
lea
int3
ss
and
mov
andb
outsl
and
shr
and
mov
pop
mov
or
and
sub
add
imul
mov
and
mov
inc
mov
sbb
fistpll
xorb
jmp
jp
dec
cmp
shl
add
jl
scas
and
inc
stos
pop
lds
jmp
data16
leave
sub
cmpsb
inc
jge
add
shlb
mov
scas
addr16
js
and
mov
cmp
xor
sub
adc
and
xor
repnz
dec
or
das
pop
bound
fucomip
mov
int3
loopne
and
xchg
xor
sahf
in
movsl
jnp
or
cmp
dec
xor
jg
and
and
pop
test
dec
jno
arpl
dec
adc
mov
aam
std
es
push
fimull
shl
and
and
dec
adc
pop
mov
mov
adc
loope
xchg
sub
inc
es
adc
push
scas
xor
lret
and
mov
mov
push
or
push
imul
xchg
and
jp
out
jno
fcoml
inc
xchg
push
lahf
mov
loope
lea
fidivrs
xchg
clc
xchg
lods
pop
fiaddl
jb
xor
xchg
sub
xlat
scas
cmp
popa
add
xchg
and
fdivs
adc
lret
push
inc
and
int3
mov
mov
inc
stc
cmp
inc
idivb
mov
data16
sbb
or
adc
pop
sbbl
and
sbb
jg
sbb
test
movsb
mov
loope
popa
pop
repnz
inc
mov
mov
or
mov
inc
sbb
pop
popf
dec
jg
push
pushf
cli
and
jbe
jnp
test
lret
out
adc
fcomps
pop
mov
fstpl
imul
jle
add
sbb
outsl
cwtl
lret
fidivl
pop
daa
lahf
mov
xchg
dec
cmp
or
cmp
push
shll
imul
push
xor
sbb
push
outsl
ret
adc
inc
loope
inc
xor
jnp
mov
lahf
fstpl
adc
jne
push
dec
xchg
inc
mov
stc
lds
movsb
cli
push
push
push
jne
aam
jbe
es
jg
aas
adc
sbb
fmuls
mov
sub
adc
cmpl
pop
lock
and
scas
dec
mov
test
rorl
popa
nop
push
xchg
jmp
movsb
out
or
inc
std
fisubl
or
and
push
subl
inc
leave
hlt
shlb
cld
inc
mov
or
jno
push
dec
sbbb
push
mov
lret
imul
push
cmp
aam
xchg
stos
outsl
lahf
movb
test
xchg
mov
ret
and
or
xchg
outsl
push
lret
lock
aaa
push
movups
test
and
sbb
aas
mov
dec
outsb
and
sbb
fsubrp
out
mov
test
mov
and
add
sbb
jno
adc
jno
mov
cltd
stc
std
xchg
popa
fwait
outsb
jnp
into
and
aaa
pop
pop
mov
cs
xchg
xchg
dec
xor
lcall
jo
jge
fwait
and
gs
sub
sub
jmp
lret
xor
or
out
push
adc
outsl
mov
ja
lcall
cltd
insl
push
xchg
adc
insb
scas
xchg
inc
xor
add
jmp
mov
dec
jle
mull
mov
cltd
xchg
push
lea
mov
sub
xor
pop
into
test
jmp
dec
sub
adc
loop
push
jge
sub
jge
sub
mov
div
aad
mov
mov
fadds
mov
jp
and
addr16
mov
or
sahf
sub
push
dec
out
test
adc
subl
sub
push
addr16
fsubs
mov
mov
shlb
push
fidivrl
mov
stos
pop
and
dec
pop
xchg
sub
les
ljmp
enter
jg
add
test
jge
and
push
addb
loope
sbb
ds
cmp
inc
jg
das
jle
aam
out
cmp
and
cmp
sbb
pop
test
jg
sbb
mul
jmp
and
adc
or
or
hlt
frstor
inc
scas
shlb
cmpb
mov
fistpl
mov
add
push
pop
add
int
sub
in
mov
inc
andb
mov
jae
pop
cmpsb
test
popa
adc
fistpl
xchg
adc
ret
enter
stc
movsb
fwait
cmpsb
pusha
and
jne
addr16
iret
push
and
adc
or
popa
and
data16
scas
and
xchg
mov
xor
movsl
movsb
ljmp
and
cmp
or
and
repnz
add
xchg
inc
sbb
dec
push
push
xchg
aad
inc
dec
xchg
aaa
mov
and
sti
fs
add
mov
rorl
movsl
subb
sub
and
jo
add
mov
jns
push
shrl
lret
pop
loopne
xor
sbb
ret
in
out
lock
out
mov
jmp
sub
xlat
and
div
loope
cmpl
push
sub
std
scas
movsb
das
cwtl
hlt
dec
xor
sbb
cmp
loope
sub
adc
aas
push
mov
pusha
jb
int3
pushf
and
leave
sahf
arpl
jb
orl
pop
pop
and
sbbl
fnsave
rolb
sti
mov
dec
in
jno
int3
push
and
ljmp
nop
or
mov
push
sub
sbb
movsb
xchg
mov
test
inc
arpl
clc
out
stc
and
les
lcall
mov
push
mov
aaa
mov
inc
imul
movsl
xor
sahf
xor
cmp
shlb
cmp
sbb
lock
sbbw
insl
add
enter
sbb
sub
ja
andl
popf
and
push
gs
call
cmp
repnz
lahf
imul
shll
pushf
ja
push
and
dec
mov
lahf
cs
cmpsb
icebp
call
mov
cmp
fsubs
bound
mov
movsb
cmp
aas
lret
xor
sbb
rclb
and
dec
aas
cmp
mov
into
call
clc
xor
sbb
shll
sahf
xchg
ds
lcall
fistpl
stos
arpl
js
or
pop
sub
das
mov
mov
mov
or
inc
and
adc
jno
and
arpl
cmc
loop
and
ficomps
mov
dec
les
enter
and
pop
and
clc
lret
in
nop
or
and
sti
inc
jge
sahf
aam
shlb
clc
xchg
sbb
or
cli
sub
mov
sbb
xchg
jmp
fdivrl
adcb
cmp
shrb
fsubs
jo
xor
nop
test
or
lea
je
or
ss
and
icebp
sbb
inc
add
movsl
pop
mov
pop
inc
and
or
outsb
cmp
les
repnz
jne
pop
pusha
cmpsb
dec
sbb
insl
and
mov
xchg
popa
and
jg
in
popa
dec
loop
cmpsb
cmp
xlat
test
dec
out
mov
push
pop
pop
lcall
sub
loopne
outsl
insb
bound
inc
xchg
leave
sbb
adc
outsl
out
xchg
mov
popf
sub
mov
ja
add
adcl
movsl
xchg
or
mov
into
lods
lds
add
jno
test
nop
ret
inc
or
xor
pushf
mov
sbb
mov
addr16
inc
cmc
out
dec
cld
and
inc
stc
mov
inc
sbb
mov
sahf
fdivl
adc
scas
imull
jbe
out
mov
test
or
fiadds
and
stc
cmp
dec
pop
sub
nop
repnz
push
and
dec
cld
jbe
leave
jge
and
sahf
inc
mov
sub
mov
sbb
ds
dec
and
adc
cmp
loop
xchg
sub
mov
jle
and
mov
pop
jecxz
dec
scas
xor
and
or
mov
push
mov
mov
movsb
sbbl
sub
stc
mov
lock
into
mov
adc
das
and
adc
iret
mov
lcall
push
aaa
ffree
mov
cmp
in
lahf
xchg
imull
cmpsb
mov
fsub
gs
adc
test
js
add
inc
push
adc
aad
lods
std
cmp
jb
push
or
dec
mov
movsb
dec
aam
jo
cmp
cmp
js
icebp
mov
out
outsb
mov
or
loopne
and
add
add
scas
adc
in
jns
pop
fmul
mov
cmp
jne
mov
test
inc
and
jbe
mov
push
jg
pop
adc
and
adc
push
jo
cmp
sbb
out
mov
data16
jns
sbb
add
inc
xor
inc
jge
movsb
push
mov
es
adc
lret
addl
and
les
movsb
std
sbb
fimull
repz
and
jecxz
mov
loop
mov
scas
addr16
es
sub
cmp
dec
aaa
cmpl
inc
popf
adc
in
sub
ljmp
xor
lock
jl
insl
jns
fldenv
lods
cs
inc
cmp
fs
icebp
movsl
sbb
cmpsl
mov
jl
andl
adc
sbb
loope
sbb
pop
mov
into
pushf
sbb
movsb
ret
push
jecxz
inc
lcall
push
and
xchg
or
or
mov
and
jmp
scas
out
pop
mov
scas
sub
mov
xlat
xor
jp
cltd
and
fwait
in
test
pop
insl
scas
iret
adc
pushf
adc
adc
mov
cmpsb
mov
mov
ja
repz
mov
inc
pop
out
movsb
fadd
mov
ja
pop
and
divb
sub
and
loop
dec
mov
push
jae
fmul
test
out
fldt
inc
add
cld
rolb
lret
xchg
xor
and
xchg
daa
outsl
js
ss
xchg
mov
jbe
xlat
xor
mov
dec
in
add
xor
xchg
mov
loopne
cld
testb
pushf
and
jns
inc
cwtl
pusha
cmp
test
cmpsb
inc
and
and
dec
or
pop
int3
icebp
dec
and
adc
jno
movsb
mov
and
xchg
lea
in
add
sub
cld
sub
and
push
movsb
jmp
ret
adc
pop
fcomps
xor
xchg
jg
movsl
mov
xchg
in
mov
mov
jecxz
sub
sahf
cmp
and
and
nop
std
adc
insb
inc
mov
mov
jge
push
and
test
popa
xlat
lods
out
rolb
fstpl
jno
and
das
lahf
loop
cmpl
daa
mov
and
xchg
ret
cmp
dec
mov
movsb
inc
sbb
push
xor
push
mov
push
add
ljmp
sbb
addr16
dec
and
rclb
and
jae
andl
pop
push
std
clc
xchg
inc
lcall
cs
fwait
mov
mov
aad
outsb
and
adc
lcall
mov
mov
adc
dec
outsb
mov
add
lret
push
fwait
mov
fcoml
lea
mov
pop
test
or
mov
adc
mov
mov
push
cmp
xor
inc
dec
nop
popa
sbb
cmp
das
xor
and
fbstp
stos
insl
stc
jecxz
mov
mov
mov
jge
inc
and
xchg
sub
xor
and
je
arpl
aam
jbe
stc
and
mov
push
or
or
xchg
sti
ds
aam
and
and
cmpsl
and
mov
mov
sarb
pop
pop
and
stos
scas
cmp
sub
dec
test
jl
punpckhwd
and
cld
bnd
pop
jnp
outsl
or
xchg
int3
fidivs
cmp
fnstcw
push
lcall
cmp
sbb
scas
sbb
and
idivb
adc
jo
inc
pop
in
shll
cli
and
lods
mov
jecxz
scas
psubw
and
mov
scas
mov
inc
inc
adc
and
insl
push
adc
pop
add
mov
cwtl
mov
insb
sahf
lcall
dec
xchg
loop
popa
pushf
imulb
mov
mov
imul
movsb
sbb
xor
icebp
shl
repz
sub
xchg
xchg
cmpsb
fwait
enter
movsl
mov
fldenv
jecxz
insb
call
mov
inc
mov
fsub
dec
aaa
cmp
sbb
adc
lods
pop
cld
xchg
push
xor
insb
stos
aaa
adc
cwtl
lcall
xchg
cmp
pop
xchg
js
outsb
inc
ret
pop
bound
sub
dec
push
add
movsb
in
jmp
push
push
push
xchg
fwait
or
mov
push
mov
mov
and
xlat
imul
cltd
gs
mov
loope
in
or
mov
and
push
xorl
test
jp
sub
and
inc
pop
add
push
test
cltd
mov
into
sbb
aam
cmp
in
adc
scas
icebp
and
xor
sahf
cli
xor
cmpsl
and
pop
lcall
and
sbb
imul
xor
andl
inc
mov
xor
sbb
and
adc
jge
xorb
xchg
pop
sub
mov
movsb
into
add
popa
int3
les
aas
cmp
mov
sahf
cmpsb
pop
mov
daa
and
imul
xchg
and
ror
movsb
xchg
icebp
jb
pop
fistl
sti
jecxz
ljmp
dec
mov
out
mov
sbb
pop
loope
fidivs
or
xor
outsl
jp
and
push
lock
cmpsb
lea
sub
icebp
adc
mov
sbbb
pushw
ss
jmp
loope
popf
pop
and
pop
pop
fisubl
imul
xchg
das
and
add
aad
stos
mov
out
or
popa
loope
lret
mov
cmc
movsl
jl
aam
shlb
and
daa
dec
xor
and
bnd
lds
mov
push
adc
and
push
xchg
es
and
movsl
or
lcall
xor
sti
inc
out
mov
cmpsb
add
cltd
and
sahf
jne
xchg
movsb
push
stc
and
sub
mov
sarl
movsb
sub
inc
inc
insl
xor
add
push
and
mov
test
pusha
lock
dec
je
dec
and
iret
xchg
movsl
mov
iret
addr16
mov
sub
popf
cmp
jbe
rorl
and
mov
and
mov
inc
jns
fnstenv
adc
sbb
and
adc
lcall
dec
xor
mov
clc
ds
inc
popa
insl
mov
xchg
and
les
pop
pop
loop
and
cltd
sub
and
pop
pop
shll
bound
or
inc
mov
clc
fidivrl
cmp
test
int
test
fimuls
push
mov
pop
std
and
adc
or
aas
lea
jns
and
lock
inc
jge
mov
inc
dec
inc
into
sub
mov
fs
shrl
cmp
and
mov
leave
xor
jae
std
addl
mov
mov
cmpb
aas
pusha
sbb
cwtl
or
repnz
test
mov
aaa
jecxz
and
sbb
or
ret
push
and
and
push
imul
xorb
call
dec
insl
mov
mov
loope
jne
int3
and
test
subb
fbld
pop
inc
adc
cmpsb
and
fcompl
mov
pusha
and
xchg
xor
inc
mov
sub
mov
mov
inc
cmp
cmpl
fidivs
mov
lret
sub
xor
repnz
das
gs
and
das
in
and
add
lock
movsl
or
cld
pop
and
push
mov
adc
aam
fsubrs
adc
jnp
jns
push
out
sub
repz
mov
dec
lcall
add
loope
and
xchg
adc
adc
dec
and
push
add
out
lret
loope
call
imul
adc
add
pop
and
xor
jle
mov
mov
xor
sub
sub
sbb
xchg
jp
arpl
fisubl
cltd
lcall
clc
xor
les
and
xchg
adc
and
push
cwtl
movsb
add
lods
int
loope
ret
add
out
hlt
idivl
test
and
inc
jp
jecxz
or
sub
push
pop
stc
fcmovnbe
push
and
add
mov
mov
call
ret
mov
gs
mov
subl
fstpt
cmp
xchg
inc
cmp
xchg
mov
cmp
push
or
nop
popf
js
hlt
pop
and
push
sti
pop
and
xlat
mov
push
cmp
and
fisubrl
loopne
mov
and
add
add
jnp
pop
sub
popa
lds
push
pop
push
push
xchg
and
cmp
xor
and
mov
jns
adcl
aas
push
js
pop
and
hlt
imul
cmpl
and
mov
outsl
lret
push
mov
sbb
push
jns
pop
push
mov
xchg
xchg
dec
push
sbb
and
jo
in
and
dec
mov
mov
js
sub
popa
mov
stc
add
or
imul
bound
loope
test
fwait
xchg
sub
cwtl
lock
lret
lds
in
jbe
int
lods
adc
stos
cmp
rcr
loope
mov
sahf
sbb
and
xchg
sub
sbb
sbb
pop
out
mov
or
dec
pop
imul
push
cmp
mov
test
aam
or
sbb
sub
mov
roll
aad
std
ss
in
xlat
xchg
and
jae
mov
fdivrp
push
and
rcrb
sti
cmp
mov
orb
pusha
rcll
mov
mov
in
andl
push
out
jne
xlat
test
daa
les
cmp
and
outsb
xlat
mov
sub
call
enter
sbb
pop
test
out
ss
xchg
mov
and
sbb
pop
in
inc
jge
shlb
outsl
mov
mov
shll
add
aaa
add
xor
int
push
xchg
popf
xchg
mov
mov
popf
lcall
add
sbb
push
and
aam
or
imul
and
cmp
xorl
and
fisubrs
inc
cmp
lret
mov
jb
push
cli
pop
mov
adc
cmpsl
stc
addr16
cmp
inc
jnp
mov
outsl
push
xor
fiaddl
adc
test
pop
jb
loopne
and
pop
jle
fwait
push
outsl
or
adc
xor
leave
add
aad
dec
lcall
loop
push
int
pop
and
xor
mov
or
pushf
mov
and
fwait
push
scas
and
testl
clc
xchg
inc
cwtl
jno
mov
cli
outsb
psllw
jmp
pop
loope
push
data16
iret
fwait
aam
repnz
inc
mov
mov
or
and
cmp
xor
sbb
xor
push
dec
pop
or
daa
cmpsb
mov
sbb
mov
mov
jmp
inc
mov
scas
mov
mov
les
arpl
shlb
es
jp
js
popa
in
ss
cmp
and
push
scas
sahf
jnp
neg
and
cli
pusha
mov
ficomps
cmp
scas
repz
out
incb
jno
inc
jg
and
xor
cltd
mov
ret
mov
loope
in
fsubs
lods
mov
mov
sub
cmp
cmpsl
add
fcompl
jb
sub
or
jne
inc
inc
add
out
bound
xchg
pop
mov
xlat
adc
and
adc
loopne
mov
dec
and
or
jns
push
in
jne
cwtl
inc
cmp
xor
ds
and
xor
out
dec
mov
ss
and
das
mov
and
loop
mov
jmp
inc
xchg
stc
popf
sti
xchg
adc
add
fldenv
movsl
jb
sub
push
loop
fbstp
gs
mov
cmp
jmp
xchg
das
jle
fildll
sub
jp
or
pop
andb
test
ficomps
orl
or
push
add
ljmp
verr
pop
repnz
mov
jne
or
mov
js
dec
xchg
and
sbb
divl
and
scas
nop
and
mov
addl
mov
inc
xlat
xor
and
lds
push
lock
mov
sarl
jnp
es
sbb
inc
lret
in
inc
subb
imul
add
sbb
and
sar
sub
mov
push
jno
lret
mov
jmp
movsl
cwtl
pop
mov
movsb
xchg
iret
stc
cmp
subl
xor
test
shl
pop
rolb
scas
mov
inc
jns
mov
and
push
call
push
jns
ret
aas
and
dec
push
iret
das
and
xchg
xor
out
and
call
and
daa
cmp
inc
out
popf
ficoms
xor
aaa
inc
das
dec
int3
and
mov
test
jg
xchg
addl
out
cmc
and
dec
lahf
jo
repnz
and
sub
fsubr
in
sbb
inc
dec
popa
mov
and
xchg
clc
push
out
sub
mov
ljmp
inc
cmp
pop
and
dec
out
jl
lea
or
jecxz
and
cmpb
dec
movsb
std
rcl
cmp
popa
lods
pop
inc
or
xor
dec
jge
adc
imul
or
xchg
lods
movsl
mov
outsl
popa
je
loope
cwtl
and
out
xchg
lods
and
out
jnp
cmp
and
mov
or
adc
mov
lret
xchg
push
mov
cli
sti
xchg
xor
dec
arpl
in
xchg
jae
adc
lret
and
outsl
mov
and
jo,pn
add
sub
lret
mov
fs
movsl
and
test
mov
out
push
popf
orl
mov
and
adc
aas
rcrl
mov
adc
repnz
and
inc
mov
jae
adc
insb
addr16
and
xchg
cmpl
test
outsb
cltd
popa
insl
mov
jns
fstl
hlt
call
les
aam
int
lcall
pop
fs
enter
loop
lock
dec
bound
and
and
nop
inc
push
and
cld
push
and
je
cmp
daa
lea
loope
lret
imul
cltd
and
mov
xor
jp
mov
fisttpl
icebp
aas
ja
xchg
movsb
inc
mov
and
dec
and
popf
test
and
mov
ret
jae
inc
in
in
and
js
mov
push
lods
stc
adc
mov
xchg
ljmp
and
pop
xor
imul
add
xor
subl
cmpsb
mov
push
lret
test
xchg
and
pop
lds
xchg
lea
das
xchg
xchg
lahf
add
addb
lret
stos
test
xchg
and
xor
and
cmp
repz
nop
push
sbb
shrl
arpl
or
mov
mov
add
cmp
and
adc
and
leave
mov
out
pop
push
bound
mov
scas
and
dec
push
call
xchg
add
and
out
cwtl
outsb
sbb
repz
cmpsl
insl
pop
xchg
popa
pushf
mov
dec
mov
repnz
jb
and
movsl
pop
dec
jmp
mov
aam
ret
jecxz
pop
sti
mov
cmp
mov
cvtps2pi
sahf
lods
sub
adc
mov
add
push
xor
aam
subb
cmp
movsb
cwtl
inc
xor
pop
lods
or
fnstsw
cmp
xchg
and
sub
push
movsb
fildll
int3
rcr
and
int
inc
add
mov
fs
bound
and
aad
cmp
shl
add
and
test
sbb
cmp
mov
arpl
pop
mov
or
mov
xchg
push
push
aaa
sub
pushf
movsl
jg
push
and
pop
xlat
inc
add
mov
mov
or
and
gs
es
lock
iret
loopne
sub
xor
and
cwtl
cmpsl
jmp
xor
fnstenv
sti
test
mov
in
int
xchg
pop
rolb
push
sbb
sahf
out
pop
jae
hlt
pop
push
imull
xchg
mov
mov
ds
lods
or
sub
sbb
and
std
outsb
or
pusha
popf
int3
mov
sbb
push
outsl
mov
or
push
adc
js
ljmp
and
addr16
jnp
mov
dec
mov
ds
cld
and
add
arpl
jl
test
roll
push
stos
jmp
mov
insl
rdpmc
rolb
lods
pop
and
clc
and
sub
sub
fwait
mov
and
inc
jae
adc
bound
dec
ret
outsl
inc
inc
add
lret
and
fbstp
mov
mov
pop
orl
jne
mov
and
and
and
add
and
sub
cmp
or
mov
add
pop
sbb
cwtl
in
out
inc
add
lods
call
sbbb
mov
mov
jg
jle
sbb
mov
das
loope
fimull
mov
lret
dec
ss
sub
je
icebp
mov
fmuls
jge
ret
pop
cmp
xchg
and
inc
dec
divb
mov
and
adc
and
mov
sbb
jmp
test
or
arpl
mov
mov
ret
jns
add
fsub
mov
rcrl
dec
mov
xchg
xor
and
jmp
lods
cmc
add
das
xchg
dec
xor
jge
fmulp
repz
lahf
or
inc
jg
sub
push
sti
xor
and
call
adc
and
stos
test
imul
flds
mov
add
xchg
cmpb
sahf
xchg
andl
pop
adc
icebp
das
mov
cltd
iret
test
adc
outsl
js
das
add
jno
xchg
shll
or
and
or
out
ds
popa
aaa
lret
inc
insb
xchg
mov
push
mov
and
pop
and
or
and
imul
shlb
test
int
clc
lods
xchg
dec
add
mov
fiadds
aaa
les
test
cmc
and
cli
xor
and
jb
std
cmp
sbb
mov
and
sbb
jo,pt
mov
jg
sub
push
fildl
movsb
lods
fdivl
stos
jns
pop
lods
orl
insb
loopne
mov
and
inc
lret
mov
fbld
adc
dec
push
arpl
dec
mov
and
mov
xor
repnz
mov
gs
popa
test
aam
repnz
and
pop
mov
pop
psrlq
mov
bound
in
cmp
movsb
sub
cmp
ljmp
fistpll
bound
iret
sub
lea
push
adc
jne
arpl
out
and
jl
pop
add
inc
into
push
dec
ret
popa
cltd
jge
js
or
sbb
ss
repnz
rcrb
inc
lahf
sbbb
js
cs
and
or
ficoml
cltd
pop
xor
jl
sub
mov
inc
add
filds
and
sbb
push
xchg
and
xor
and
cltd
dec
and
rcll
and
mov
push
jno
mov
jle
jbe
dec
test
movsl
inc
out
adcl
data16
pop
cmp
and
mov
xor
jecxz
xlat
js
xchg
psubsb
les
and
pop
popa
sarl
fldl
push
movsl
mov
test
mov
and
ds
add
jnp
inc
adc
and
out
sbb
xchg
add
int3
jl
or
negl
xor
jnp
inc
and
dec
jl
repnz
pusha
pop
mov
mov
pop
and
and
xchg
adcl
xor
jl
or
push
and
in
sub
xor
mov
outsl
pop
push
sbb
lret
jp
mov
mov
cmp
mov
xchg
mov
xchg
subb
jbe
push
lock
push
dec
mov
test
popa
rcll
mov
mov
mov
xchg
xor
sbb
xchg
shrl
and
xchg
or
mov
or
sbb
add
mov
pusha
clc
xlat
mov
push
arpl
rorl
outsb
sub
pop
fcoml
cld
inc
bound
scas
xorl
xchg
push
mov
mov
inc
btr
and
dec
ret
cli
mov
dec
stos
gs
or
mov
jne
lods
pop
shrl
mov
test
rol
xor
mov
mov
adc
ret
movsb
sbb
cmp
test
cmp
fistpl
fs
push
and
and
inc
adcl
scas
xchg
mov
xor
lods
pop
iret
or
and
aam
jge
jg
mov
or
insl
or
imul
and
das
fsubrs
and
shlb
mov
dec
dec
stc
in
and
push
push
mov
jmp
test
xor
push
mov
flds
aas
jg
inc
and
into
sub
or
ss
aas
push
out
and
das
add
lods
xchg
pop
mov
mov
popf
gs
std
and
stos
in
ss
lock
movlpd
fsubrs
pusha
or
jne
mov
imul
mov
cmp
inc
push
xor
das
mov
cmpsl
and
cli
mov
mov
cmp
mov
dec
xchg
cmpsb
fistps
repz
mov
xor
sub
and
xchg
mov
in
daa
std
inc
aam
pop
scas
mov
lea
pop
xchg
movsb
int3
dec
test
mov
jmp
dec
jecxz
fisubrl
addr16
mov
mov
adcl
and
ds
stc
roll
fsubr
xor
enter
and
sbb
in
test
pop
and
jg
mov
and
mov
mov
lock
je
and
std
xchg
mov
mov
aaa
ret
mov
repz
adc
stos
xchg
mov
and
mov
imul
cld
test
jp
inc
hlt
xor
aaa
mov
lock
stos
addl
loopne
and
insl
jecxz
movsb
and
mov
lea
sti
movsb
ret
xlat
mov
sbb
pusha
xor
imul
jnp
cmpsb
pop
and
sub
jno
and
shll
lcall
in
popf
mov
sub
and
fisttpl
adc
and
ljmp
and
orl
and
test
movb
xlat
push
imul
cmp
dec
push
popa
xchg
push
clc
cwtl
and
shll
ja
ds
xchg
movsb
sbb
out
push
and
inc
adc
loop
push
dec
aad
fwait
and
xchg
and
xorl
and
cmp
movsl
sbb
xchg
and
daa
inc
loop
rcrb
popa
orb
ds
mov
xorb
popa
pop
arpl
and
add
add
lahf
or
adcb
out
cmp
sarb
jge
sub
and
push
xor
mov
mov
adcl
xchg
and
and
xchg
gs
jp
xchg
sub
xor
adc
cltd
xor
push
ficoms
xchg
in
jmp
fsincos
sub
pop
pop
hlt
enter
push
push
mov
and
jl
adc
mov
xchg
pop
inc
leave
sub
xchg
cltd
xchg
mov
push
dec
jns
xor
ret
mov
test
aam
jne
clc
fsubs
xchg
ret
cmp
dec
and
mov
and
push
lods
mov
aad
and
stos
add
and
lea
pop
inc
push
das
popa
sbb
cwtl
mov
dec
in
mov
fwait
das
scas
cld
push
lods
insl
xlat
mov
pop
sub
sbb
insb
cmp
or
cmc
fcmovnbe
movsl
sahf
push
dec
js
lods
shlb
mov
add
hlt
test
mov
push
jno
mov
cmp
push
sub
jb
xor
popa
push
ret
jg
and
jne
sub
movsb
outsb
ret
pusha
cmp
and
xor
cld
jbe
add
das
adc
dec
repz
sub
ret
ds
and
mov
movsl
pop
pop
add
cwtl
in
mov
out
rcr
popf
daa
loope
dec
inc
jae
fidivrl
and
test
sbb
ljmp
rolb
in
xorb
pop
sub
inc
ds
inc
jo
test
pop
into
pop
adc
lods
mov
loope
and
pushf
divl
and
push
sbb
mov
push
or
xchg
ljmp
addr16
pop
and
mov
fbld
daa
scas
cmp
imul
scas
mov
inc
lds
push
jns
js
popa
sub
cmp
stos
jno
jp
and
push
movsl
mov
sahf
xchg
xchg
pop
call
push
mov
mov
fnstcw
iret
rcll
mov
sbbl
add
jno
xchg
xchg
push
and
andb
push
jle
xchg
and
outsl
push
cmpsb
xchg
jne
xor
in
test
ror
mov
in
jb
adc
andb
mov
and
sub
sahf
es
scas
out
aaa
mov
xchg
push
shll
push
adc
push
popa
pop
popa
mov
and
mov
sahf
mov
adc
aad
inc
push
loop
pop
divb
pop
enter
inc
shrb
and
mov
cmpsl
and
adc
and
mov
xchg
movsl
cmc
dec
mov
orl
popa
cmp
in
add
mov
push
shlb
jp
mov
xor
int
imul
shrl
test
outsl
in
sbb
test
dec
js
inc
stos
repz
icebp
dec
and
dec
add
fs
mov
shll
jbe
inc
inc
pop
xor
fnstcw
testl
mov
mov
cmp
or
jge
int
test
push
cmpsl
mov
pop
xchg
stos
icebp
scas
and
out
ss
and
sbb
rcrb
xchg
pushl
and
out
mov
and
les
cmp
int3
adc
sbb
pop
iret
mov
data16
popa
jle
test
das
xchg
and
inc
stos
or
inc
and
jmp
pop
add
cmp
add
or
and
test
push
mov
inc
mov
repz
adc
mov
cmpsl
mov
mov
cs
xchg
rcr
mov
cwtl
jnp
stc
mov
cmp
jmp
icebp
and
push
in
cltd
cmc
loopne
and
push
out
ja
popa
or
and
daa
aam
and
cwtl
or
fnstcw
mov
and
out
sub
and
pop
rcll
mov
mov
sub
ret
stc
jae
jecxz
in
mov
pop
jno
xchg
in
xchg
add
clc
and
and
pop
and
imull
and
sti
fucomp
movsl
outsb
imul
adc
shlb
jno
adc
test
test
mov
sbb
jmp
add
add
and
and
jmp
jg
sub
jnp
and
in
jge
lea
or
jbe
dec
xchg
mov
rcrb
cwtl
dec
addr16
mov
inc
or
sbb
das
and
lods
bound
and
jns
mov
lea
into
and
pusha
add
and
mov
cwtl
and
std
xchg
gs
adc
fmull
mov
xchg
cmp
and
dec
dec
xorb
inc
or
in
into
sub
mov
in
adc
iret
out
sarb
dec
jle
or
ret
cmp
adc
mov
jmp
push
int3
pushf
test
xchg
mov
and
mov
xchg
daa
pop
sbb
js
int
cltd
fxch
mov
and
mov
sub
pop
dec
leave
sub
jbe
imul
mov
lods
or
loope
out
cmp
lcall
shll
adc
push
inc
adc
in
in
ljmp
sbb
loopne
mov
je
lret
inc
sub
mov
test
jbe
inc
mov
jb
sub
iret
push
ja
adcb
inc
xor
push
xor
in
pusha
inc
fwait
xchg
mov
stos
call
add
pop
mov
arpl
popf
or
test
out
mov
leave
dec
sahf
mov
push
popa
cmpsl
mov
movl
pop
sub
data16
sub
clc
mov
loop
push
popa
lock
fwait
scas
and
insl
push
mov
cwtl
push
jb
cli
ss
mov
and
xchg
fcmovnbe
scas
push
jmp
aaa
xor
scas
cmp
and
pop
jg
xchg
pop
dec
lret
or
shr
and
xchg
add
shlb
pop
pop
dec
sub
jge
movsl
enter
test
repz
insb
iret
or
andl
push
inc
popf
jp
aas
std
popa
and
cmp
jmp
add
stos
xchg
icebp
mov
xor
push
add
and
pop
sarl
shl
and
stc
out
pop
addr16
jns
ret
clc
popa
mov
inc
mov
jno
add
sbb
jne
adc
shlb
inc
mov
outsl
negl
and
xorb
fidivs
sbb
xchg
add
pushf
clc
gs
xlat
add
data16
inc
movsb
stos
test
jle
sbb
subb
cld
test
lcall
movsb
cwtl
fildl
loopne
sub
test
loop
push
dec
pop
dec
pop
adc
and
and
push
mov
subb
fbstp
jnp
out
addl
aaa
int
cmp
mov
dec
and
mov
add
fwait
push
and
rorl
mov
mov
adc
xchg
dec
or
test
pop
cmp
shl
ret
push
push
pusha
and
rclb
dec
xor
and
push
push
jecxz
loop
stc
sbb
scas
sub
lret
insl
mov
mov
std
and
pop
out
and
pop
jge
imul
xchg
inc
in
fsubp
movsb
loope
movsl
mov
xchg
cs
mov
inc
inc
cmp
fbld
jge
and
and
adc
and
lds
call
insb
test
sub
and
cmpb
pop
sbb
enter
fisttpl
popa
movsb
fisubl
push
inc
mov
call
inc
xchg
inc
es
jne
hlt
cmc
mov
or
lods
xchg
mov
xchg
js
dec
aam
and
loop
or
ret
rol
popa
popa
dec
adc
and
or
and
addr16
push
pop
inc
xorl
sbb
and
jle
mov
add
shr
rorl
pop
imul
sbb
and
mov
and
pop
lods
push
clc
adc
lea
sti
jne
and
lret
ja
push
jmp
push
lea
mov
xchg
ljmp
incl
repz
sahf
lcall
popa
xchg
in
nop
jne
movsl
mov
and
xchg
repnz
inc
push
inc
jnp
pop
sub
popa
loope
cmp
pop
mov
push
xchg
pop
mov
jae
and
adc
xchg
inc
outsl
js,pt
int
out
pop
inc
je
cmp
mov
scas
push
fldcw
out
rclb
push
fildll
dec
xchg
push
xlat
mov
add
insl
bound
add
sbb
mov
inc
inc
push
fld
loop
pusha
or
xchg
lods
insb
xchg
cmp
sbb
hlt
mov
stos
sarl
jl
dec
push
lahf
lcall
jle
and
xor
jnp
xchg
inc
in
pop
andb
sbb
sub
inc
dec
loopne
cmpsl
push
clc
xchg
push
enter
or
mov
cld
leave
xchg
ret
jp
int
ret
movsb
xchg
out
xchg
xchg
sti
pop
and
test
push
jne
imul
inc
andl
popf
sbb
test
int
popf
xor
in
rcll
pop
jne
aaa
mov
inc
imul
test
addl
movsb
icebp
or
pop
movsb
xchg
lret
jl
js
mov
frstor
lods
xchg
jno
push
mov
and
dec
push
and
call
xor
push
jle
ljmp
inc
orb
push
xchg
push
hlt
or
add
mov
jo
mov
cli
mov
xchg
fwait
mov
sub
in
aad
pop
js
xlat
mov
icebp
leave
dec
dec
scas
aaa
add
int
std
rcr
ja
fcomip
mov
and
insl
movsb
adc
fldcw
dec
aas
and
out
popf
cwtl
and
inc
jg
push
mov
int3
mov
shr
lock
sbb
jp
sub
gs
mov
xchg
mov
mov
out
in
or
and
mov
xchg
cmp
shl
cmp
stos
and
inc
jns
and
mulb
and
mov
inc
xor
cli
ret
inc
addb
imul
sti
or
cltd
fwait
xchg
lahf
lock
cmp
sub
dec
pop
xor
clc
push
lods
sbb
and
inc
inc
mov
das
popa
adc
xchg
in
dec
pop
jno
sub
pusha
jp
in
lcall
xor
enter
stos
mov
inc
and
mov
cltd
dec
lea
popa
fwait
xchg
and
and
lock
or
and
in
lcall
lahf
pop
call
movsl
pop
test
add
sbb
and
mov
subb
std
jge
adcl
sub
aaa
jg
repz
ljmp
xchg
fnstcw
push
in
xor
or
pop
loop
or
jne
xchg
popf
mov
nop
mov
filds
pop
jo
popa
sbb
aad
stc
jl
mov
jo
icebp
and
or
movsb
loop
jno
inc
dec
cmp
cmp
sub
lea
rcl
fisubrs
mov
adc
aaa
xchg
subl
add
sbb
cltd
push
mov
shlb
out
inc
stc
and
cwtl
orl
imul
sbb
and
pop
push
adc
in
int3
aaa
mov
andl
cmpb
dec
and
lahf
mov
and
or
aad
sbb
ret
cmp
clc
and
jge
test
stc
xor
mov
iret
mov
fsubrl
xor
test
and
cmp
and
fnstenv
repnz
or
les
test
std
iret
out
pusha
pop
sub
xchg
mov
and
addr16
and
jns
incl
dec
and
addr16
and
or
cmpsb
adc
popa
push
or
mov
jmp
lds
mov
fcmovne
sub
sub
rorb
add
and
lock
inc
fistpll
mov
dec
xor
cwtl
push
and
cmpsl
or
bound
das
cmpsb
cmp
xor
xchg
imul
pop
mov
int
sub
popf
repz
clc
cmp
lods
inc
pop
mov
inc
imul
inc
jb
sub
lea
mov
call
and
test
dec
xorl
js
jo
add
gs
xor
push
cmpsb
inc
and
xchg
mov
and
inc
gs
mov
jg
popa
mov
mov
mov
add
test
mov
dec
fwait
push
test
and
notl
or
lods
sub
push
mov
test
pop
and
ret
mov
lret
pushf
cld
inc
or
jb
lods
add
cmp
pop
in
push
ss
icebp
jge
and
pop
cmpsb
sub
push
daa
ja
clc
pop
jno
xchg
xor
adc
pop
orl
test
cmpsb
jne
xchg
in
sarl
je
mov
mov
cmp
out
enter
mov
ret
and
mov
fstpl
and
stos
in
int
movsb
jbe
test
and
pusha
and
shlb
push
scas
mov
fisttpl
in
loope
mov
push
mov
lcall
test
xor
jnp
cmp
adc
fistl
sbb
and
daa
scas
out
cmpsl
pusha
andb
pop
mov
or
repnz
xchg
jle
pop
mov
loop
in
out
mov
das
sub
rorb
sub
and
pop
inc
ja
popf
lock
mov
cmp
mov
xchg
mov
push
mov
fstl
lods
sahf
xor
adc
test
rcl
sbb
push
sub
push
add
mov
pop
int
jmp
test
inc
sub
rcrl
or
pop
test
xchg
sub
and
cmp
dec
das
popf
and
add
fsubs
jno
jo
push
dec
mull
rorl
sub
cltd
jle
and
push
in
inc
pop
inc
cmp
jo
mov
jb
xor
sub
xlat
fwait
and
ss
xchg
loopne
adc
sbb
mov
mov
arpl
sahf
or
ret
sarb
imul
sbb
pop
mov
and
push
shll
je
dec
push
out
inc
jmp
xchg
out
fdivrl
lcall
stos
ja
xor
das
outsl
xor
imul
out
shll
add
sbbb
ficoml
xor
lahf
adc
mov
pop
or
lods
cmp
jne
loopne
xor
mov
push
push
popf
pop
fsubl
mov
arpl
xchg
rcr
out
sahf
loop
rorl
sub
movsl
inc
fisubl
sub
and
and
ja
insl
push
sub
inc
cmpsb
fbld
test
add
rol
std
lds
fs
cmpsl
pop
mov
pop
test
sbb
inc
outsl
sbb
gs
inc
mov
jmp
aad
or
and
and
mov
mov
inc
les
xor
pop
mov
mov
push
add
aas
xlat
pop
cs
popa
mov
inc
mov
push
xchg
jmp
test
push
test
mov
cmp
cmp
pop
inc
or
mov
pmuludq
ret
xchg
into
dec
and
or
xor
lret
ljmp
mov
sbbl
cli
add
push
and
xchg
mov
and
rolb
mov
test
sub
insl
dec
or
mov
adc
cli
mov
lret
push
inc
xchg
pop
push
mov
test
cmc
and
cwtl
lods
adc
add
inc
jnp
aad
je
rcrl
lods
and
dec
popf
jge
scas
mov
std
xorl
xlat
and
les
and
mov
lods
or
push
hlt
and
and
movhps
pop
mov
and
pusha
push
pop
pop
xor
mov
insl
sbb
inc
movsl
sub
inc
popa
xchg
mov
les
push
and
loop
fcomp
sub
push
leave
add
inc
mov
nop
dec
in
and
jbe
repz
mov
fstl
jge
and
mov
xor
cwtl
inc
sti
and
int
imul
repnz
out
stos
addb
pop
cmpsl
cmpl
mull
mov
rcll
inc
cmpsb
jae
loope
popa
jno
sbb
aas
pop
jb
in
aam
fadds
pop
add
popa
xchg
or
fs
adc
icebp
popf
jbe
sub
shlb
adc
add
jmp
mul
pop
push
or
add
push
inc
mov
jge
sbb
mov
aaa
sub
arpl
adc
pop
cmp
sbb
cs
inc
jb
mov
scas
pop
sahf
test
jbe
lods
mov
je
and
ljmp
pop
cltd
mov
sub
mov
jo
mov
add
rolb
mov
outsl
push
inc
mov
popf
xchg
and
sbb
push
lea
jge
cmc
movsb
pushf
cmp
sub
sbb
test
loop
lea
cmp
sub
shll
and
lahf
pop
imul
mov
cmp
stc
mov
and
xchg
adc
stos
outsl
add
movsb
jle
jns
fcom
mov
dec
ret
mov
sbb
int
aas
mov
movl
movsb
ljmp
adc
dec
inc
movsb
and
mov
jg
dec
pop
sbb
movsl
cli
jns
movsb
cmovp
add
ljmp
pop
pop
inc
jno
jo
push
mov
icebp
and
dec
loope
stc
arpl
cmp
and
mov
nop
xchg
fs
jmp
jne
sbb
out
mov
sbb
xchg
mov
mulb
pop
mov
popw
stos
add
push
mov
mov
mov
loopne
xor
jbe
movsb
shll
addr16
cmc
rcll
fcomi
push
and
xchg
sub
xchg
mov
xor
lret
out
loope
clc
out
inc
in
and
mov
xchg
ficoms
inc
lahf
xchg
bound
push
dec
repnz
outsb
xchg
pop
or
inc
jb,pt
rcl
imul
mov
icebp
cmpsb
mov
inc
ret
push
and
repz
mov
cmp
les
pop
sub
and
gs
and
mov
insb
cmp
aaa
inc
bound
repz
inc
jae
daa
repnz
or
and
sub
jnp
and
jl
xorb
inc
icebp
xor
in
and
mov
test
and
xlat
cmp
push
jnp
push
and
ss
test
in
pop
push
loope
cmp
inc
jbe
lahf
das
lcall
gs
and
rolb
and
popa
mov
xchg
fstp
inc
lcall
in
cmp
pop
pop
lcall
test
jp
das
jne
mov
mov
add
addr16
cltd
mov
ds
pop
cs
mov
mov
outsb
nop
fs
mov
fcompl
cmp
andb
shlb
mov
xor
dec
cltd
dec
and
aam
shrb
cmp
push
out
fcomi
and
daa
dec
push
sub
sub
int3
mov
ds
lcall
es
test
in
nop
jp
iret
mov
jle
enter
mov
push
nop
cmp
lret
cmp
mov
xchg
dec
popa
in
mov
cmp
movsb
mov
mov
repnz
shlb
jo
in
xchg
xchg
add
add
jb
and
std
jns
sbb
jge
inc
cltd
fcoml
dec
sti
hlt
lds
push
mov
in
push
addb
test
mov
in
dec
pop
pop
xor
dec
pop
sbb
push
and
add
jge
push
push
mov
imul
cmp
stos
cmpsb
test
shlb
aaa
outsl
lcall
adcb
mov
idiv
pop
aaa
in
lea
push
or
rorl
mov
pop
xchg
mov
push
lcall
outsl
dec
shlb
cmp
adc
add
inc
push
inc
scas
cmp
dec
xchg
in
test
xchg
int3
pusha
repz
mov
frstor
movb
sbb
mov
and
ds
mov
inc
scas
jne
loop
adc
repnz
pop
jae
stos
jge
mov
push
lods
aas
mov
stc
lcall
shrb
and
xor
rcrl
push
and
add
xchg
clc
enter
push
xor
popa
arpl
pop
lret
addr16
sub
pop
or
into
add
xchg
xor
push
sahf
dec
andb
jle
out
jns
and
pop
in
fcompl
test
mov
popa
stc
xchg
inc
cltd
and
scas
push
pop
xchg
fstps
and
clc
test
dec
stos
in
jo
adc
hlt
movsb
push
out
cmp
dec
cld
and
nop
mov
inc
cmp
xor
and
mov
xchg
mov
dec
jmp
bound
lret
out
push
in
clc
imul
sbb
cmp
adc
jg
push
insl
cmc
xchg
fwait
mov
sub
jge
inc
mov
popa
cmpb
push
and
stos
adc
std
sub
mov
andl
add
test
xlat
mov
scas
push
scas
pop
cltd
xchg
and
add
hlt
stc
sbb
add
pushf
dec
jns
pusha
mov
rol
fs
lret
jmp
and
or
mov
dec
pop
je
aad
and
repnz
loopne
push
sbb
enter
lahf
popa
or
pushf
movsb
stos
sbb
dec
xchg
mov
loop
mov
nop
mov
and
cmp
push
mov
sbb
jg
insl
cmp
sub
sbb
faddl
stos
push
xlat
movsb
rcll
pop
jns
rcr
fs
push
inc
fdivs
dec
mov
lds
inc
add
and
mov
push
mov
or
mov
add
int
daa
xchg
movsl
push
into
pop
and
ljmp
ret
popa
rolb
popa
push
and
pop
fs
movsb
addb
fmul
and
ljmp
mov
and
mov
rcll
ja
sub
mov
stos
lods
repnz
sbb
repz
inc
lcall
dec
lods
test
lock
loopne
cmp
cld
and
jno
and
cwtl
mov
mov
and
jecxz
xor
pop
icebp
xor
push
test
xlat
jo
loope
push
sbb
popf
outsb
pop
and
jge
sub
and
and
or
popf
xchg
add
xchg
pop
push
inc
fwait
andl
aad
icebp
jbe
xor
push
jp
lahf
cmc
mov
add
mov
and
mov
jmp
inc
fs
popf
jg
push
sub
jmp
mov
pusha
jne
xchg
popa
stc
and
add
add
jns
sub
call
cs
adc
cmp
in
push
xor
sub
cmp
leave
mov
jp
xchg
icebp
aam
je
popa
int3
adc
adc
aaa
ret
add
xor
sbb
shrb
iret
mov
leave
jne
cmc
in
das
push
push
mov
cltd
inc
cltd
dec
and
xchg
inc
jp
fmulp
and
in
lret
sub
and
inc
dec
imul
push
mov
into
cmc
out
cmp
in
int3
sar
lret
dec
movb
das
xlat
xor
mov
and
shlb
add
repz
and
sbb
dec
aas
rclb
mov
iret
or
and
push
inc
mov
pop
insl
and
push
mov
sti
dec
frstor
cmpsl
jle
lea
or
outsl
or
inc
xor
popa
in
loop
stos
and
enter
xlat
out
outsb
adcl
or
mov
inc
mov
aam
pop
add
out
mov
imul
mov
nop
cli
pushf
xor
pusha
dec
xchg
pop
aam
sbb
pushf
nop
clc
and
mov
mov
jecxz
add
popf
xchg
insb
push
xchg
push
and
jmp
inc
and
adc
adc
mov
call
sbb
enter
in
push
and
mov
cli
push
sub
push
push
nop
push
mov
sbb
xor
pop
cmpl
imul
mov
shll
clc
lret
cmc
mov
mov
xor
into
adc
jb
inc
mov
and
int3
xlat
and
add
xchg
adcl
adc
jbe
and
insb
push
mov
jmp
bound
rcrl
inc
cmp
push
shrb
les
lock
loopne
dec
mov
and
stc
xlat
or
enter
push
fwait
cmpl
cmp
adcb
jl
pop
std
push
push
add
das
imul
pop
push
std
andb
in
inc
int3
and
cmp
pop
scas
decl
lahf
and
adc
adcb
pop
sbb
mov
adc
arpl
dec
repnz
dec
pop
movsl
daa
fidivrs
popf
movsb
push
or
push
lcall
pop
inc
cmp
mov
inc
add
xchg
andl
popa
push
push
inc
sbb
and
fistps
mov
aad
xor
mov
ds
pop
loopne
pop
popa
and
cmpb
cmp
cli
scas
in
inc
movsb
pusha
inc
ja
jle
and
das
jmp
pop
int
mov
in
test
lea
inc
sti
xor
sahf
and
out
pop
pop
hlt
mov
or
sbb
inc
and
jp
sahf
mov
loopne
cmp
jno
mov
mov
cmpl
fisubl
mov
inc
test
out
test
add
fadd
add
mov
mov
push
movsb
pop
and
push
fmulp
push
or
and
movl
sub
sbb
and
int
dec
inc
jecxz
and
xchg
mov
test
lahf
jno
cli
and
inc
mov
std
and
and
sub
sbb
movsb
out
and
jno
push
add
and
outsl
mov
fsubs
pop
mov
and
jl
popa
aad
movsl
loopne
push
cmpsl
and
stc
stos
repz
out
aas
stos
mov
sub
sub
neg
mov
pop
outsb
ficompl
pop
iret
and
push
ret
popa
stos
or
mov
mov
movsl
fcompl
inc
or
and
cld
jbe
xor
negb
push
lret
les
mov
cmpsb
mov
xchg
rolb
sub
or
shrb
test
ret
and
jno
or
sub
dec
cmpsb
xchg
mov
fs
mov
and
ret
or
sbb
movsl
pop
inc
sub
xchg
push
add
mov
xchg
dec
mov
inc
mov
mov
fbld
imul
stos
int3
and
xchg
lods
popa
xchg
push
xor
popf
jo
into
test
lahf
inc
sahf
and
nop
loope
cmp
inc
lock
add
test
stos
cmp
mov
test
and
xchg
rcr
stos
sbb
and
mov
dec
das
cmpsb
dec
loop
pop
mov
xchg
jl
lahf
stos
inc
lahf
push
cmpsb
in
outsb
lea
addr16
movsl
aam
dec
or
lret
jge
pop
mov
jge
das
xor
push
dec
and
xchg
pop
movb
mov
and
or
sbb
aaa
shll
pop
xorb
divb
push
call
adc
fimuls
sahf
in
es
in
out
xchg
scas
jecxz
dec
das
push
lahf
adc
clc
test
dec
sub
mov
repz
adc
int3
and
dec
popa
fdivrl
leave
and
mov
ja
popa
fsubrp
mov
movsb
mov
clc
sbb
mov
push
in
sti
inc
fdivrl
test
lret
lods
loopne
mov
xchg
add
mov
iret
pusha
and
xor
xchg
and
adc
jle
push
sahf
daa
mov
sti
jl
pop
mov
xchg
adc
negb
jne
lods
scas
mov
and
add
out
mov
push
mov
mov
cmp
jmp
cmp
lret
dec
inc
and
push
shrl
mov
add
test
push
or
mov
sbb
out
and
jg
cmp
inc
or
sbb
out
lods
sbb
jg
add
push
test
xor
inc
xor
lret
pop
xor
jle
mov
cmpl
loope
sub
inc
lcall
and
dec
pop
pop
sub
lcall
sub
pushf
in
mov
sub
sub
mov
adc
mov
dec
pop
cmovl
cmp
cwtl
movsl
fwait
cmp
cld
push
je
jae
add
add
test
cwtl
outsl
mov
adcb
pop
push
push
sub
pop
push
push
mov
sbb
lret
jp
and
clc
or
sti
jecxz
push
sub
mov
filds
mov
add
xorl
sub
les
xchg
push
lock
imul
lods
sbb
das
icebp
or
popa
mov
into
fidivrs
sub
and
push
movsb
out
lea
xor
mov
and
sub
adc
and
push
mov
pop
dec
sub
adc
icebp
fisubrs
and
lock
fs
clc
mov
add
xor
dec
inc
lock
mov
and
inc
and
jae
mov
mov
mov
mov
in
cmp
adc
out
dec
cmp
push
inc
xchg
subb
std
cwtl
dec
mov
adc
lea
sub
push
dec
inc
mov
push
xchg
inc
sti
es
lret
dec
xchg
cmc
push
mov
pop
add
js
popa
dec
or
jl
and
sbb
and
xor
xchg
mov
enter
aaa
push
nop
and
jp
jne
dec
push
and
aam
sub
scas
lahf
mov
insl
es
stos
loope
cmc
xchg
repnz
sbb
fwait
jl
adc
mov
push
ds
mov
sbb
out
push
outsb
in
sbb
scas
iret
mov
les
mov
enter
lods
mov
sahf
jo
mov
dec
mov
imul
out
push
je
and
jg
lock
insl
xchg
cli
jno
xchg
mulw
pop
dec
jae
dec
jg
xchg
les
and
aas
outsb
lcall
gs
cwtl
in
mov
mov
jle
pop
mov
sub
insb
jl
rorb
and
fildll
and
or
lcall
cmp
nop
mov
divb
repz
bound
xchg
cmp
or
je
sub
inc
cmc
fwait
push
xchg
jo
movsb
xorb
addr16
jns
or
lcall
inc
and
test
inc
mov
sbb
daa
and
mov
ljmp
jnp
mov
cltd
dec
dec
and
inc
jae
mov
cld
orl
aaa
insb
sbb
and
add
jns
xchg
xchg
cmp
into
lods
xor
sahf
sbbl
outsb
out
inc
fwait
add
and
sub
movsb
out
ja
daa
mov
sub
scas
sarl
pop
outsb
fisubl
push
frstor
or
push
and
add
popa
mov
xchg
testl
inc
pop
pop
inc
mov
cmpsl
add
xchg
and
cmp
push
and
mulb
mov
xchg
cwtl
and
sbb
jg
or
into
imul
and
hlt
jo
push
ficoms
dec
jb
inc
jns
aas
fisubl
daa
xchg
mov
sub
and
notrack
and
pusha
les
and
fidivrs
or
and
dec
inc
mov
popa
xchg
cmp
cs
mov
cltd
or
aam
clc
stc
pop
ds
popa
dec
mov
adc
leave
xor
pop
insb
push
inc
fstpt
loopne
dec
repz
notb
adc
mov
inc
adc
and
mov
leave
test
hlt
add
and
int
or
push
mov
fsubs
cmc
pop
popf
and
inc
pop
cmp
add
subl
dec
and
pop
shlb
out
jo
and
sarl
sbb
push
andl
jno
mov
movsb
enter
adc
dec
add
or
repnz
inc
rorb
sbb
andb
dec
out
fs
adc
push
sbb
lahf
sahf
push
loop
popa
stc
hlt
lret
cmp
mov
sbb
mov
ret
lcall
mov
jbe
pop
inc
push
mov
rcr
ljmp
xchg
loope
sub
lock
clc
pop
cmp
in
ret
mov
sub
lds
push
fists
andb
sub
add
movsl
das
xchg
sti
lock
enter
mull
dec
popf
jmp
and
sbb
xor
and
or
out
adc
test
add
and
xchg
pop
lods
xchg
cmp
jge
and
fs
push
mov
loopne
popa
sub
js
into
lret
xor
fisubl
jne
mov
and
mov
mov
arpl
lahf
sub
push
mov
loop
jno
daa
and
adc
mov
push
and
out
shrl
and
data16
pop
popf
loopne
sub
jo
cmpsl
pop
bound
rorl
push
loopne
jle
aaa
daa
in
mov
inc
pop
jnp,pt
xor
xchg
jge
sub
xchg
mov
cld
shll
and
jp
divb
add
mov
loopne
stos
aas
mull
push
jo
and
xor
aaa
mov
outsb
mov
lea
sub
and
mov
addl
xorb
arpl
push
mov
push
mov
inc
inc
jl
in
and
pop
push
dec
inc
push
shll
sbb
pop
cmpsb
sahf
addl
sarl
add
and
dec
mov
push
push
andl
jne
loop
sub
jl
movsb
loopne
sbb
pop
pop
out
in
inc
fisttpll
push
js
push
and
and
xchg
jl
jmp
sub
dec
inc
jp
cli
add
sarb
mov
out
xchg
and
push
pop
bound
cld
pop
movsb
ret
insb
push
pop
sti
imul
adc
stc
nop
and
mov
lea
inc
add
or
mulb
mov
or
and
dec
pushf
fwait
inc
ljmp
sarb
mov
or
ret
ds
inc
inc
and
jp
sub
adc
mov
and
out
adcb
fimull
add
lret
repz
mov
jne
xchg
xlat
in
test
aam
fs
push
mov
push
movsb
test
inc
ficoms
nop
jne
das
jle
push
mov
fidivl
mov
out
test
xchg
xchg
xor
and
and
and
sarl
sub
dec
mov
sbb
push
inc
push
test
adc
sbb
mov
sbb
adc
and
mov
push
dec
fwait
and
popa
lahf
outsb
xchg
push
pop
and
sub
test
and
hlt
loop
imul
sbb
xchg
and
pop
aaa
sub
and
fildll
pop
sub
push
mov
and
push
fisubrl
mov
mov
sbb
and
xchg
and
cmp
outsl
not
inc
inc
out
popa
xchg
jl
mov
and
shlb
mov
mov
in
adc
push
test
jle
and
jmp
pop
and
call
je
rcr
lods
xor
addr16
and
mov
and
mov
enter
adc
aad
jno
jns
and
push
lret
mov
adc
adc
and
lds
xchg
dec
jecxz
ret
dec
xchg
out
fsubs
or
xchg
inc
pop
or
or
push
mov
and
xchg
pop
xor
mov
add
ja
or
movsbl
mov
adc
and
cmp
and
push
and
and
fdivrs
fsubl
js
jo
sti
shlb
sarl
and
cmp
bound
into
push
lods
out
xorl
or
imul
and
push
pop
dec
mov
cmpsl
gs
lods
stc
jmp
test
mov
xor
mov
jb
addl
xchg
jg
out
pushf
mov
mov
dec
idiv
into
incb
outsl
mov
mov
or
and
pop
aam
into
mov
pop
push
mov
xorb
and
dec
in
sti
jmp
and
inc
xor
pop
and
cld
cmp
loopne
leave
mov
repz
mov
cmp
clc
test
mov
jae
mov
pusha
int
xor
xchg
xor
movsb
cs
insl
popa
stos
mov
leave
sub
cmp
push
xor
xchg
jno
inc
int
fmul
popa
push
and
mov
arpl
lahf
inc
mov
add
pop
outsb
sub
xchg
jmp
pop
es
dec
add
pop
movsl
push
lea
lret
dec
xchg
and
cwtl
hlt
stos
inc
addl
rcll
sub
mov
sub
and
pushf
pop
out
and
add
adc
lods
and
mov
rcrb
aas
sahf
adc
repnz
nop
or
repz
pop
mov
stos
ljmp
sarl
lret
inc
jnp
inc
mov
fcoms
adcb
ud1
and
cmpsl
xlat
sbb
out
js
stos
jae
adc
mov
add
push
adc
cmp
fsubrs
aas
mov
shl
ja
xchg
and
jl
xlat
fwait
cmp
lods
es
pop
dec
mov
mov
insl
push
mov
xor
cs
push
cmpsb
sti
pop
cmpb
jno
mov
sub
insb
scas
dec
jle
lea
fisubl
popa
mov
ret
push
xor
decl
movsb
and
dec
lea
sti
sbb
loope
xchg
xor
and
dec
adc
outsb
add
mov
xor
or
dec
sub
adc
dec
popa
xchg
lock
or
out
pusha
sbb
and
or
imul
cmpl
enter
xor
add
stos
stc
rdmsr
in
incl
mov
hlt
dec
aad
xchg
jne
sbb
or
fldenv
xchg
shrb
mov
mov
mov
pop
lock
cmc
je
and
adc
mov
popf
movsb
and
shl
and
mov
lds
push
loopne
int3
and
sub
dec
stc
cld
cltd
pop
mov
push
jg
and
mov
sub
mov
pop
sbb
sub
push
dec
add
in
subl
test
mov
sti
and
inc
ret
sbb
mov
cs
sub
daa
xchg
insl
popf
es
and
cltd
loopne
dec
jo
mov
test
shll
cmpsl
mov
inc
movsl
xlat
and
inc
jmp
pop
lret
andl
jl
xchg
mov
into
pop
aas
fistps
cmp
cmpsl
andl
cbtw
jns
loop
push
in
inc
add
in
inc
fwait
xchg
test
adc
pop
negb
in
sub
movsl
je
imul
cmpsb
mov
push
inc
cli
xchg
xchg
loop
sbb
xchg
inc
das
lahf
aas
sub
mov
jns
cmp
insb
add
mov
jae
mov
jbe
or
jg
cwtl
mov
cmp
sub
fwait
cmp
outsl
ljmp
and
cmp
inc
rol
lods
and
mov
mov
cli
pop
aas
movl
cs
xchg
and
lret
stc
pusha
mov
jle
aam
lock
sub
fstpt
adc
and
icebp
and
sbb
push
xor
sub
sbbl
pop
movsl
add
cwtl
insb
and
cmp
fmull
dec
movsb
add
lahf
inc
adc
mov
xor
pop
dec
and
xchg
jmp
lret
push
push
inc
xchg
adc
das
xchg
mov
loop
or
aas
dec
adc
sbb
out
xor
nop
jno
lds
adc
and
in
pop
int3
sub
dec
js
rorl
sbb
lret
test
xchg
push
ds
pop
fildll
inc
addb
lahf
jns
mov
sbb
out
add
ret
lock
das
loopne
ds
dec
lods
mov
cltd
insl
xor
in
les
int
push
mov
sub
jns
and
add
femms
aad
aaa
push
cmp
das
in
cwtl
mov
ljmp
fnsave
cmpl
inc
pop
aaa
into
imulb
push
pop
jl
out
lahf
fisubrl
and
test
push
inc
jnp
in
inc
mov
and
cli
jge
mov
aam
xchg
addb
lret
pop
sub
jo
jp
aas
and
sub
out
or
out
cmp
and
and
xchg
test
shll
xor
test
jns
inc
inc
call
pop
into
adc
loope
sbb
push
int3
mov
lahf
aam
and
jo
sahf
pusha
call
stos
push
iret
shrb
and
pop
rorl
pushf
push
inc
cmpsl
mov
out
inc
add
lods
shrb
push
add
push
xlat
into
and
xor
mov
aaa
and
rclb
add
lahf
sbb
and
enter
aad
or
hlt
adc
loope
push
loopne
mov
xlat
jmp
popa
out
aaa
cmp
pusha
mov
sbb
fs
push
fwait
sti
and
sub
andb
daa
or
mov
or
int
fs
movsb
movsl
xchg
mov
dec
repnz
fsubs
xor
mov
inc
xor
cltd
add
push
inc
aad
ss
push
lret
dec
out
clc
int
rcrb
data16
pop
lods
lea
testl
subb
lods
insl
movsl
and
mov
adc
insb
mov
push
xor
cmp
and
sub
sar
mov
push
mov
mov
and
jns
sub
inc
jns
aaa
and
cmp
rcrb
sar
dec
pop
xor
lock
or
scas
inc
add
std
mov
inc
rorb
sub
xchg
dec
mov
arpl
hlt
lcall
aam
mov
cmp
mov
mov
xor
jmp
or
mov
daa
and
pop
scas
pop
and
dec
jb
or
sbb
call
out
ficoml
inc
mov
mov
test
sbb
enter
shll
nop
xor
and
iret
pusha
mov
add
mov
cmp
mov
sub
test
mov
pusha
enter
je
mov
mov
pop
jns
repnz
sub
ds
push
fcompl
out
cltd
xchg
aad
adc
pop
xor
orl
xor
and
inc
xchg
push
mov
add
xchg
xor
mov
nop
bound
and
cltd
push
xlat
rorl
js
mov
insl
in
jbe
push
xchg
push
and
les
movsl
fcmovb
xor
iret
pop
aam
jmp
outsb
popa
sub
or
cmp
mov
stos
jecxz
popf
mov
sub
inc
or
cmp
pop
mov
mov
lret
dec
in
nop
inc
jle
and
cmp
mov
mov
push
mov
push
subl
test
test
xchg
mov
adc
inc
mov
inc
inc
stos
push
and
mov
out
mov
sub
pop
stos
and
or
xchg
mov
movsb
je
repnz
fbld
inc
xlat
ja
in
push
popf
pop
js
cli
dec
movsb
adc
mov
mov
and
and
int
xchg
mov
movsl
cmc
out
daa
or
mov
bnd
add
mov
and
sub
inc
xor
loopne
adc
mov
call
mov
and
xchg
mov
or
lahf
jnp
shl
outsl
push
mov
nop
push
and
xchg
jbe
lcall
and
shlb
xchg
test
pop
fisubs
jnp
or
jae
pusha
and
es
jmp
movsb
popa
xchg
fsubrp
out
pop
sbb
sbb
outsb
mov
fcmovnb
sub
add
mov
mov
or
lock
and
pop
fisubrl
xor
xchg
and
jl
or
mov
lock
repnz
mov
cmc
sub
insb
add
ds
push
test
adc
push
pushf
fsubl
mov
aaa
pop
ds
sub
into
data16
and
scas
xchg
sub
sbb
push
cmp
test
xorb
cltd
and
int
adc
add
aas
popf
clc
rcrb
sub
xchg
mov
mov
imul
mov
and
push
icebp
loope
aad
jmp
cmc
adc
mov
and
mov
adc
and
pop
mov
push
insb
mov
into
jns
mov
sbb
dec
out
les
cltd
mov
xchg
mov
out
popf
movsl
in
cvtps2pi
loope
cmp
cmpsb
push
fsubrp
aaa
lods
lods
iret
pop
and
lock
pushf
or
int3
pop
movsl
int3
and
movsl
xor
icebp
jle
orl
push
xchg
dec
and
stos
loope
into
xlat
lcall
push
popl
add
stos
push
mov
fs
inc
popa
pop
cmp
jl
or
stos
mov
and
imul
dec
jp
adc
jo
ds
insb
mov
xchg
lods
and
ss
stos
and
mov
push
insl
sub
sub
jne
cmp
xchg
and
adc
lcall
loope
push
mov
aam
jae
in
dec
and
pop
data16
sahf
sbb
jg
pop
pusha
xor
repz
cli
lcall
dec
push
adc
xor
in
adc
mov
mov
push
mov
daa
and
scas
fnstenv
cmp
and
out
cs
test
dec
movsl
adcl
cwtl
andl
xor
mov
stos
lahf
and
cmp
xchg
and
lods
mov
imul
lret
mov
fisttpll
es
pushf
inc
andb
pop
les
sub
enter
ss
sub
xor
ror
push
sbb
cltd
mov
xchg
loope
pop
test
and
daa
hlt
xor
loop
pop
movsb
jle
pop
pop
and
or
std
push
xor
mov
pop
dec
popf
jnp
movsb
cmp
nop
sbbl
or
xchg
insb
pop
test
xor
mov
ds
andl
and
sub
sbb
test
movsl
mov
in
mov
jne
iret
pop
aaa
pop
clc
mov
testl
cmp
test
call
or
mov
or
ja
mov
popa
jo
mov
and
mov
addr16
aam
testl
add
adc
xor
jns
and
test
mov
fistl
mov
and
sub
cwtl
stc
pop
lds
pop
mov
je
test
cmpsb
sbb
dec
test
into
and
int
in
push
jns
xor
push
mov
mov
push
cwtl
fs
and
call
push
mov
xor
xchg
sub
scas
test
daa
and
aaa
xchg
inc
test
add
jge
movsl
and
bound
dec
and
divb
xchg
sub
cmc
std
addr16
int3
inc
adc
mov
mov
xchg
jns
and
pop
jbe
popa
addr16
and
jl
stos
and
cli
in
adc
mov
popf
xorb
daa
pop
movsb
test
cmp
xchg
loopne
std
and
sub
arpl
and
imul
subl
and
cmp
sbb
ficoms
popf
adc
outsb
aaa
leave
subl
mov
mov
gs
loope
js
add
and
iret
xchg
lock
pop
add
jae
mov
push
lock
adc
and
fisttpll
or
icebp
add
aas
rorw
push
cmp
xor
scas
stos
clc
add
shlb
lods
xchg
adc
test
and
push
movlps
push
push
shrb
xchg
push
pop
scas
push
push
xchg
imul
lahf
shrl
and
sahf
scas
adc
sbb
sub
outsl
jl
mov
inc
loope
pushf
sub
push
leave
mov
cltd
and
jne
sbb
lods
xlat
add
pop
xor
addr16
push
jbe
fists
js
pop
adc
adc
xchg
jl
inc
mov
ljmp
mov
mov
scas
cmp
jno
jb
xor
dec
movsl
xchg
jle
rclb
lret
out
mov
daa
xchg
xchg
sub
test
stos
adc
cmp
es
leave
daa
ljmp
outsl
ret
popf
sbb
movsb
mov
push
mov
and
push
inc
xor
pushf
addr16
or
out
fdivl
test
inc
or
pop
and
stos
mov
mov
pop
pop
std
mov
and
add
jp
ret
and
dec
dec
push
jecxz
out
and
movsb
fs
sub
and
dec
dec
sbb
lahf
xlat
andb
hlt
adc
push
pop
inc
push
and
inc
mov
fldenv
sarl
movsl
pop
jl
movsb
add
int3
mov
out
cld
stos
mov
xor
sbb
and
mov
aaa
fimuls
das
loopne
cmp
mov
mov
lret
dec
in
mov
pop
mov
testl
mov
inc
les
sahf
and
lahf
and
mov
lret
inc
outsb
mov
or
mov
cltd
xor
inc
adc
push
cmp
add
sbb
insl
movsb
test
dec
or
and
arpl
add
lret
leave
push
xor
push
xor
and
outsl
dec
pop
mov
adc
sub
mov
inc
xchg
mov
cmp
fucomip
xchg
movsb
testb
sub
in
inc
rclw
test
pop
mov
and
push
sbb
sub
dec
sahf
xchg
inc
jl
push
dec
int3
fs
cmp
aas
push
push
or
fisubrl
pop
add
dec
daa
fidivrs
arpl
or
jmp
push
pop
lret
negb
sbbl
lods
cmp
and
pop
sub
dec
dec
mov
and
pushf
mov
and
test
mov
xchg
add
sub
inc
les
and
insl
ret
hlt
fnsave
enter
sbb
inc
movsb
mov
sahf
scas
add
enter
sub
jg
and
sbb
push
sub
ret
jmp
xchg
fs
lea
inc
xchg
cmpsb
cmp
or
sbb
cmp
and
jmp
test
stc
mov
jno
int3
and
repz
iret
push
repnz
adc
push
inc
les
push
or
sbb
push
xor
movsl
test
loop
mov
test
and
ss
xchg
pop
mov
push
sbb
and
lock
enter
xor
jo
xchg
cmp
aaa
push
dec
cli
lds
cmp
push
push
and
pop
and
mov
xchg
jecxz
out
clc
popa
inc
iret
aad
jl
mov
mov
cmp
frstor
das
and
and
xchg
fildll
cld
fs
pop
test
mov
in
idivb
and
mov
xchg
mov
mov
push
jb
dec
insl
and
cltd
fldt
fwait
jns
xor
shlb
popa
mov
xchg
clc
xchg
xor
xor
stos
int3
rcr
push
and
mov
xchg
xor
iret
rorb
ljmp
mov
out
in
sbb
mov
je
and
ficompl
mov
xchg
dec
cltd
pop
pop
cmpsl
and
jo
insb
leave
pop
scas
and
dec
mov
lcall
mov
add
xchg
and
ffree
adc
shl
pop
mov
insb
pusha
clc
js
add
test
sbb
jmp
je
mov
xchg
cmp
inc
mov
cli
jno
cmpsl
cmp
and
mov
and
cmpsb
pop
pop
push
shl
fimull
and
insb
add
push
pop
and
pop
xor
jne
lret
and
aam
mov
test
test
xor
and
nop
fst
push
or
in
and
test
int
loopne
and
mov
dec
jge
inc
sbb
dec
lret
jp
inc
test
inc
cs
mov
outsb
mov
push
mov
push
mov
add
mov
jne
fbld
xorb
cli
les
add
mov
lea
outsl
aam
punpcklbw
and
dec
mov
mov
xchg
jp
data16
and
jne
ret
sub
cmpsl
popa
xor
comiss
sbb
push
push
mov
mov
push
and
push
xchg
add
fcoms
xlat
mov
sub
jbe
mov
adc
ss
bound
mov
mov
int3
movsl
sbb
and
aaa
js
roll
and
repz
daa
pop
gs
popf
jl
adc
push
popa
adc
fld
loope
sbb
add
pusha
and
pop
inc
pop
sbb
popa
xor
lds
jle
dec
out
xchg
das
xchg
and
scas
xchg
sbb
fwait
and
adc
stos
je
cmpsb
test
out
shlb
and
decl
and
mov
mov
mov
sahf
clc
insl
cltd
jae
and
mov
daa
xchg
mov
mov
or
push
and
ds
push
lea
lret
in
dec
xor
and
fildll
icebp
and
lret
mov
loopne
cmp
mov
lcall
mov
sub
xchg
add
mov
push
adc
mov
imul
jp
pop
inc
cs
push
test
addr16
dec
and
inc
sub
and
mov
inc
enter
pop
in
imul
inc
rcrb
scas
and
in
push
xchg
push
sbb
cld
movsb
push
ja
adcl
add
and
cmpsb
mov
fmuls
sarb
sub
and
and
push
loope
test
into
decl
pusha
dec
sub
std
xor
xor
jno
and
xchg
push
and
adc
lock
and
scas
and
popf
fwait
and
inc
aad
xlat
jle
popa
enter
inc
and
popa
scas
push
inc
lret
movsb
xor
adc
sub
les
scas
xor
lcall
test
xchg
fnstenv
mov
xor
fisubs
sub
pop
push
and
cmp
jg
xor
sahf
movsb
jecxz
xor
loop
cld
movsl
cltd
fisubrl
mov
cltd
loopne
and
mov
gs
mov
ds
in
shll
int3
dec
fisubs
cmpsl
jecxz
xor
and
fucomp
mov
popa
mov
and
pop
xor
int
push
add
jb
ja
add
insl
ds
adc
fs
sub
movsb
inc
push
int3
mov
jb
pop
movsb
ss
xlat
or
mov
pop
sbb
jnp
adcl
ficompl
cltd
mov
xor
lods
dec
push
xchg
mov
mov
sbb
adc
jmp
insb
andl
sbb
ja
cmp
pop
and
outsl
dec
xorb
leave
pop
add
notl
xchg
das
sub
cmpsl
jge
sbb
pcmpgtb
and
pop
cmp
inc
mov
rcr
mov
and
dec
xchg
jo,pn
and
mov
and
or
xor
mov
rcrb
ss
mov
cld
imul
xorl
cmp
and
jno
inc
mov
lock
dec
cld
and
ret
add
jnp
les
adc
mov
inc
dec
pop
ja
dec
movsb
leave
pop
rol
sub
xor
or
icebp
mov
scas
addl
sub
xchg
xor
stc
enter
cmp
lahf
sbb
nop
sahf
gs
fwait
test
mov
jne
mov
mov
and
imul
add
mov
loop
sub
sbb
and
out
repnz
push
sbb
and
ja
mov
jbe
sbb
leave
jo
jnp
dec
cwtl
jl
dec
and
jbe
fs
pop
hlt
mov
test
adc
and
popf
dec
int3
test
notb
shlb
ljmp
lds
decl
and
fstps
or
mov
insb
sti
lret
pusha
bound
cld
aas
mov
add
ljmp
js
inc
loopne
and
cmpsb
mov
popf
and
fcmovne
mov
sahf
mov
mov
aaa
adc
loope
jbe
sub
ret
mov
pop
movsl
fucom
sub
pop
xor
pop
add
lods
into
sbb
daa
xor
and
dec
add
mov
dec
or
dec
hlt
mov
dec
cltd
enter
movsb
adc
jnp
xchg
add
fs
xchg
and
dec
outsl
mov
loop
iret
test
js
pushf
add
xchg
aad
and
xor
cmp
sarl
ljmp
das
xorl
inc
outsb
pop
shlb
xchg
lods
jbe,pt
mov
repz
and
aas
repnz
push
ficomps
and
dec
cltd
mov
xchg
and
scas
jne
shlb
andb
mov
lods
sbb
add
gs
and
cmp
mov
mov
pusha
inc
sub
add
popa
ret
sahf
fstpt
popf
shlb
pop
mov
leave
dec
into
scas
mov
pop
xchg
fisubrs
addl
and
or
mov
cld
mov
adc
xchg
in
and
cmp
and
xchg
or
jbe
ja
sbb
sub
mov
fwait
ret
lods
push
mov
sbb
inc
jmp
inc
mov
add
mov
cmpsb
sub
add
and
push
pop
fbld
push
std
sub
adc
lret
push
mov
and
shrb
add
rcrb
inc
adcl
mov
arpl
jo
adc
das
loopne
inc
and
or
sahf
insb
jno
jae
and
lods
cli
jecxz
pop
jg
and
cmp
inc
cmpsl
pushf
inc
and
inc
push
pop
mov
or
and
loopne
insb
mull
test
shlb
adc
das
cmp
jbe
xchg
jp
jae
cmpsb
mov
iret
mov
int
xor
jmp
jb
mov
adc
sub
dec
das
fs
pop
rcrb
push
and
out
icebp
aam
inc
divb
and
mov
fildl
insb
and
lret
xchg
pop
xchg
xlat
cmp
jne
pop
pop
pop
and
push
xor
aas
int
test
ffree
aam
adc
iret
mov
sub
movsb
jp
pusha
sti
fdivl
fistpll
outsb
and
sahf
xchg
in
adc
test
addl
mov
jle
insl
adc
xor
or
icebp
lcall
cmpsb
push
movsl
and
sub
mov
addr16
mov
sbb
lods
sti
test
and
ds
mov
mov
add
aad
or
adc
xchg
clc
shrl
and
sub
pop
bound
or
xorps
inc
mov
pusha
mov
mov
mov
pop
mov
aam
inc
ds
adc
sub
lahf
ds
popa
pop
insb
adc
fsts
mov
dec
ljmp
xchg
dec
test
jo
or
push
cmp
xor
dec
pop
jae
jnp
cmpl
das
jle
cwtl
adc
subl
adc
pop
imul
mov
inc
pushf
add
pop
xchg
mov
or
push
sbb
aad
xlat
mov
popf
and
mov
jl
xchg
scas
and
xor
sbb
gs
and
xor
pop
mov
mov
inc
or
add
mov
xor
sbb
data16
loope
mov
adc
mov
and
or
fadds
mov
test
and
or
mov
arpl
test
sub
pop
inc
stc
mov
ss
repz
xorb
shll
push
mov
test
jbe
pop
jb
out
xchg
add
popa
xor
sahf
rcl
mov
sbb
and
cli
inc
call
movsl
xor
aad
mov
out
cmp
pop
pushf
dec
rol
aas
in
and
inc
or
enter
push
hlt
outsb
lods
xchg
std
sub
mov
push
cld
cltd
sub
jg
sbb
sub
rolb
push
push
add
fiaddl
mov
cli
xor
mov
dec
mov
jb
dec
mov
ds
lods
outsb
mov
idivl
push
fmull
and
rcll
mov
js
mov
or
and
stc
icebp
dec
and
sbbb
add
xor
fcmovnb
mov
popa
cmp
push
addr16
ljmp
jle
push
bound
mov
jg
lcall
enter
movsl
jmp
movsb
outsb
movsl
mov
xchg
in
mov
cmc
dec
mov
inc
and
das
or
frstor
jg
daa
loope
adc
cmp
xchg
cmpsl
in
mov
push
jae
jg
inc
ja
faddl
mov
testl
test
sbb
sub
popa
push
out
dec
jp
inc
or
shll
bound
insl
int3
in
push
inc
mov
loope
sub
or
xor
daa
out
push
ss
push
sbb
sub
push
jbe
adc
leave
pop
adc
jg
pop
lret
jno
out
cmp
and
test
push
fstl
cmp
and
inc
dec
mov
mov
imul
jg
mov
sbb
insl
dec
ret
and
and
test
jp
lret
popa
outsb
lahf
xchg
stos
movsl
test
scas
xor
test
and
jb
loop
loope,pn
xchg
fnstcw
mov
mov
test
jo
and
flds
hlt
ljmp
fstpl
notb
or
and
push
inc
inc
add
addr16
movsl
setl
sub
ljmp
cmp
aas
adc
push
call
lea
sub
add
sbb
aas
and
sbb
and
scas
dec
lock
repnz
xchg
test
test
jne
mov
iret
mov
pop
add
sub
lods
dec
and
subb
sub
outsl
stos
shlb
scas
mov
xchg
insb
adc
imul
in
aad
mov
push
testb
lret
repnz
xchg
mov
and
mov
and
xlat
out
xchg
imul
scas
into
xchg
cltd
sub
mov
sbb
push
test
and
mul
sahf
loop
test
je
jo
xchg
das
xchg
fistpl
push
in
popf
and
push
das
lea
popa
popa
cmp
and
das
jg
and
jmp
cmp
leave
mov
xor
icebp
jmp
ja
test
lahf
dec
lea
xchg
xor
push
test
imul
mov
mov
daa
nop
out
test
push
and
pop
jne
or
adc
mov
jbe
sub
inc
enter
cmp
and
fld
push
push
mov
int3
and
stos
outsb
int
cmp
or
and
jmp
mov
mov
push
daa
mov
lcall
fcomps
add
and
sahf
bound
sarb
lahf
pushl
jmp
mov
push
lret
xchg
add
inc
jge
roll
cwtl
leave
and
mov
inc
scas
pop
or
jae
xor
mov
adc
js
dec
jnp
and
push
mull
xlat
jecxz
inc
stos
fsubrs
mov
jo
mov
mov
shll
lcall
sbbb
jbe
aam
cmc
popa
out
and
xor
outsl
aad
les
sti
lods
push
mov
lea
inc
cmpsb
pop
mov
mov
insb
push
sub
cmp
aad
lea
cltd
and
outsb
push
lock
inc
jo
cltd
pop
xlat
and
mov
punpcklwd
add
xor
mov
sbb
jecxz
push
xchg
and
add
and
leave
ja
xor
fldt
pop
jmp
and
xor
andl
mov
in
and
mov
dec
xchg
push
pop
repnz
repz
popa
insl
mov
jae
adc
xor
into
jl
call
xchg
jle
push
lahf
mov
dec
sub
out
imul
mov
and
mov
mov
fidivrs
test
pop
push
inc
push
cmp
and
in
and
jno
xor
mov
or
dec
mov
imul
cwtl
das
dec
push
mov
xchg
push
and
loopne
sahf
rcrb
loop
xor
xchg
out
jb
cmpsb
inc
sbb
movsl
lea
and
aas
test
mov
nop
push
push
xchg
shrl
pushf
jecxz
addr16
inc
push
xor
xor
pop
mov
fistl
jp
and
fwait
or
fs
and
icebp
mov
jmp
pop
pop
outsl
and
scas
push
xor
push
sub
and
out
pop
xchg
cmpsb
stos
sub
cmp
cmova
inc
and
lods
mov
cld
loope
sarl
or
sbb
xchg
dec
jae
lods
dec
int3
jmp
and
adc
in
shll
fnstsw
and
loopne
and
ret
outsb
mov
loop
xchg
jne
xchg
shrl
push
test
cld
and
gs
or
mov
adc
xchg
lret
movsb
and
adc
add
mov
aam
subl
and
jecxz
push
xor
fisubl
inc
fnstsw
outsl
adc
lahf
out
popa
mov
jg
sbb
mov
stc
mov
and
mov
inc
ss
xchg
fimull
cmp
dec
lret
mov
cmp
addr16
orl
lgdtl
frstor
fs
roll
mov
shl
out
call
inc
imul
adc
and
push
popf
lock
mov
std
clc
and
test
mov
sbb
cli
push
stos
or
and
mov
xchg
pusha
loop
push
loope
lret
lds
sbb
dec
sbb
nop
into
inc
call
fnsave
movsb
cmpsb
dec
jno
aas
dec
jge
icebp
and
xor
or
dec
pushf
sub
fsub
cld
and
cmc
jecxz
add
test
insb
dec
je
in
gs
mov
jl
lahf
inc
ss
dec
in
inc
push
repnz
xor
imul
cltd
adcl
cltd
arpl
and
call
and
push
mov
in
outsl
pop
test
sbb
xlat
lds
scas
jb
cmp
mov
jge
ds
and
inc
and
mov
lret
fidivl
pop
mov
pop
mov
xlat
pusha
loope
lret
mov
xchg
push
loop
and
sbb
mov
sbb
and
pop
mov
push
mov
pop
das
adc
xlat
inc
and
inc
lea
popf
and
call
stc
xor
and
popa
sbb
push
shll
dec
and
arpl
lock
cmp
jns
es
dec
mov
xchg
xchg
das
mov
lds
inc
enter
push
mov
out
dec
fwait
icebp
cwtl
adc
pop
mov
fidivrl
pop
ljmp
arpl
jbe
out
xchg
or
mov
bound
sbb
lcall
and
jb
mov
and
cmovp
adc
dec
and
std
mov
jle
and
lods
sub
fmuls
push
inc
adc
and
shll
mov
pushf
push
movsl
or
xor
inc
xchg
mov
daa
ja
adcb
and
cmp
iret
mov
andl
popf
push
xor
cld
jb
divl
xor
mov
mov
bound
enter
and
adc
test
inc
mov
subl
xchg
scas
movsb
push
adc
inc
ror
cld
push
arpl
sbb
pop
mov
xlat
out
sbb
imul
lock
int
mov
imul
mov
movsb
adc
and
add
orb
fcmovnu
mov
cmp
sbbl
mov
aaa
loop
movsl
jl
cmp
imul
scas
or
out
dec
push
mov
lea
push
sub
stos
dec
and
out
cmpsl
mov
test
and
cmp
dec
test
test
gs
pop
xchg
pushf
sbb
add
rcrl
push
and
or
clc
popa
aam
lds
and
sbb
cmp
ss
xor
test
cmp
lea
sub
repnz
shl
mov
mov
clc
cltd
add
pop
push
and
lods
int3
mov
cmp
jo,pt
xor
imul
or
mov
sub
sbb
lods
ss
xor
mov
add
mov
movsb
mov
xchg
sub
xchg
mov
jmp
cmp
loopne
inc
and
mov
xchg
fidivrs
xchg
push
add
fisubs
sbb
push
scas
cmp
sbb
into
fcompl
js
or
or
xlat
sub
push
cltd
dec
xchg
pop
pop
lcall
xor
sbb
in
xor
adc
pop
push
and
gs
sbb
lds
jp
sbbb
push
aad
and
push
push
cmp
dec
mov
aaa
dec
cmpl
insl
inc
push
sbb
mov
scas
bound
sub
lods
movsb
or
out
mov
and
in
xor
fisttpl
cmp
and
pop
xchg
cmp
sub
sub
es
int3
sti
ret
decl
sub
and
jne
adc
push
and
sbb
pop
std
mov
add
ljmp
or
mov
outsl
out
mov
and
mov
or
fsub
dec
popf
xor
sbb
mov
xchg
inc
jae
fimuls
cmp
jecxz
xchg
and
xchg
and
outsb
popf
push
inc
andl
jb
das
stos
and
test
add
pop
inc
andl
je
xor
loopw
xlat
sub
insl
add
and
sub
and
mov
out
mov
cltd
jo
jl
inc
jnp
xchg
cmp
pop
mov
inc
cs
test
jmp
aad
fs
jb
inc
adc
movsb
and
add
dec
test
and
push
push
frstor
jge
mov
or
hlt
es
jo
and
xor
pop
and
pop
fdivl
cltd
flds
das
and
sbb
pop
push
and
pop
xchg
cld
sub
popa
and
mov
mov
lcall
add
mov
hlt
xor
push
shll
dec
mov
mov
adc
xchg
pusha
and
mov
or
lods
movsl
loope
adc
xor
mov
and
xor
push
nop
dec
jnp
add
dec
movsb
push
ljmp
in
or
jns
xor
mov
pushf
pop
rclb
mov
test
popf
push
decl
test
imul
fsubs
test
popa
xchg
pop
sbb
and
in
cmp
pop
xor
adc
push
fwait
pop
jl
dec
push
and
imul
jo
cmpsb
loopne
mov
and
pop
add
and
ss
inc
loopne
test
cmc
and
adc
js
rcrl
int3
mov
and
sub
pop
sub
xlat
adc
pop
and
pop
imul
cmpsb
stos
xchg
shll
and
loop
jg
push
adc
dec
imul
jbe
sub
mov
mov
inc
fcompl
mov
xor
scas
loopne
and
mov
insb
and
xor
movsb
test
push
je
fists
jo
jp
xor
push
dec
and
mov
sub
jle
push
clc
xor
dec
adc
inc
lret
cmp
sbbl
ret
and
mov
mov
add
ljmp
in
enter
incl
rorb
xor
mulb
cmpsb
pop
and
aas
out
sarl
movsl
sbb
push
xchg
mov
enter
xchg
and
and
pushl
repz
jbe
adc
ret
dec
mov
aad
xchg
cs
and
nop
lods
mov
in
ljmp
aad
das
dec
ret
lods
cmp
movsb
test
mov
shlb
mov
icebp
jmp
mov
xor
in
pusha
cli
mov
and
je
in
and
sub
inc
and
shrl
scas
jle
stos
and
ret
into
dec
and
xchg
push
movsl
and
sub
leave
test
or
add
adc
inc
add
and
cld
lea
cwtl
loope
pop
and
mov
movsl
jns
pop
pop
in
es
mov
sbb
shlb
inc
xchg
inc
das
xor
mov
push
imul
sub
repnz
out
xchg
mov
out
pop
xchg
loop
and
repz
cs
shll
je
and
mov
lods
jl
xor
lock
pop
xchg
mov
sets
adcl
aas
scas
js
ss
nop
xchg
dec
mov
in
pop
push
hlt
insb
jns
and
add
mov
push
nop
and
and
bound
xor
daa
add
fisubrs
xrelease
dec
sti
cmp
lcall
mov
add
pop
ds
imul
add
and
aas
scas
or
cmp
pop
stc
das
mov
adc
imul
pop
mov
add
inc
jae
cmc
and
inc
jecxz
cmpsl
frstor
cmp
or
movsb
in
dec
dec
ljmp
popf
cmp
mov
and
and
pop
and
sbb
xchg
test
and
xor
sub
mov
push
sub
dec
xchg
xchg
popa
out
scas
and
std
sub
insb
xchg
or
sbb
push
movsb
cmp
jno
rorl
mov
or
inc
sub
lcall
or
sub
xchg
push
and
fwait
jp
sbb
pop
iret
sub
adc
and
or
push
push
lea
lods
das
and
inc
push
sbb
scas
pusha
mov
push
sub
xlat
sbb
ret
addr16
inc
jmp
jnp
mov
bound
sbb
jg
mov
push
pop
and
js
mov
inc
push
movsb
in
lea
push
pop
cltd
and
cmpl
mov
imul
dec
test
gs
mov
imul
daa
mov
cmpsb
fsubs
inc
cmp
sbb
sub
and
sbb
dec
lock
pop
and
jae
ret
mov
mov
mov
std
jl
push
sub
dec
cmp
mov
into
pushf
xor
xchg
data16
movsl
dec
outsl
push
mov
imul
xchg
xchg
loope
sub
je
dec
or
cs
xchg
sbbb
sbbb
stos
xchg
cwtl
sbb
movsl
test
adc
das
outsb
daa
and
scas
dec
ja
inc
adc
movsl
jle
jmp
adc
in
cmpsb
xor
or
push
iret
dec
pop
sub
mov
clc
jbe
fidivs
mov
and
xchg
outsb
mov
push
lods
lods
mov
dec
shll
jns
cmpsl
lea
call
movsl
push
cmpsb
stos
jp
mov
and
imul
notb
mov
cmp
loop
in
shll
outsl
mov
xor
addr16
arpl
cmc
shlb
adc
or
mov
fildll
call
add
and
inc
dec
inc
fmull
scas
and
stc
shr
and
mov
mov
repz
dec
jnp
lahf
and
sub
mov
icebp
jns
and
test
adc
push
xor
loope
xor
enter
and
mov
movsb
lods
and
pop
mov
and
lret
jae
scas
mov
das
inc
jne
pop
xor
popf
dec
cwtl
enter
and
dec
pop
mov
repnz
dec
lcall
mov
jbe
mov
mov
subb
sbb
and
mov
add
popa
fbld
lea
repnz
out
repz
xchg
imul
xchg
in
mov
ds
movsl
test
in
les
repz
incb
cmpsb
scas
pop
shll
inc
fs
sub
xchg
xor
cld
int
or
jmp
xchg
ss
xor
js
int3
fildll
mov
stos
shll
ds
aas
jg
and
xor
xchg
and
and
dec
push
push
mov
aam
jno
sbb
and
rcrl
sbbl
add
sub
mov
jns
pop
inc
inc
sub
mov
popa
lea
fistpl
inc
cmp
mov
sub
add
imul
icebp
sbb
into
lea
and
dec
mov
xor
int
lods
pusha
xchg
and
movsl
int3
icebp
sbb
inc
stos
jge
in
and
pusha
and
dec
test
push
movsb
dec
out
add
fsubrl
popf
movsb
stc
loop
xchg
cli
jns
or
jmp
jecxz
fsubrs
push
and
or
xor
xchg
es
and
jg
daa
mov
fisubs
fildll
cmp
out
push
movsl
stos
enter
mov
int3
cmp
xchg
mov
in
add
das
xor
and
movsb
or
movsb
test
push
sbb
push
and
call
les
repz
add
jne
or
xor
inc
in
jl
lea
and
push
hlt
rcll
repnz
add
pushf
sbb
add
dec
icebp
fisubl
lret
jecxz
jne
push
inc
xor
jns
mov
andb
mov
mov
bound
test
cs
push
xchg
xchg
loopne
and
add
fisubs
or
into
cmp
mov
shl
lahf
mov
and
or
ficomps
dec
test
inc
lea
lahf
das
loopne
lcall
add
test
xor
mov
notb
mov
sbb
and
mov
pusha
and
outsb
inc
adc
or
xchg
push
jmp
cmp
inc
mov
cli
mov
xor
sarl
and
mov
mov
mov
orl
sbb
test
push
in
int
lods
dec
fdiv
dec
test
xor
je
js
pop
insb
and
int3
xor
je
inc
test
icebp
popf
adc
xchg
fisttpll
andl
push
push
inc
arpl
xchg
xchg
mov
popf
in
fs
das
scas
add
xor
adc
cmc
mov
stc
xchg
mov
push
add
lods
cli
mov
out
cltd
inc
mov
or
inc
ret
inc
mov
sub
cltd
rcll
cmp
mov
arpl
lds
pop
test
mov
fiadds
test
dec
mov
pop
out
xor
in
sbb
and
or
sub
jp
and
jmp
and
loop
test
cmp
mov
pop
xor
sbb
and
mov
jne
sti
or
dec
add
out
ret
fdivs
ret
mov
sub
out
das
and
mov
and
in
push
xlat
xor
psubusw
pop
jecxz
sub
mov
popl
and
insb
pop
cltd
mov
shlb
mull
adc
fwait
jecxz
scas
mov
rcll
xchg
call
mov
mov
and
shrb
jae
push
and
dec
adc
movsb
push
test
mov
sub
pop
out
lcall
hlt
dec
or
lahf
xchg
movb
loop
dec
das
inc
sbb
fisubl
mov
outsl
push
cmp
fdivr
mov
lret
aaa
and
stos
repz
into
in
pushf
lea
pop
and
dec
arpl
stos
add
sub
cmp
and
in
outsb
jmp
and
sbb
adc
mov
cmp
add
outsl
and
mov
mov
pop
xchg
movsl
jbe
dec
pop
jo
call
jnp
and
test
pusha
push
inc
into
lret
and
or
and
mov
cmp
pop
sub
movsb
jg
shll
xlat
in
push
insb
jp
mov
adc
popf
not
and
enter
nop
sbb
and
scas
and
push
pop
xor
push
sbb
js
dec
outsb
pushf
and
cmp
addr16
cmp
pop
movsb
adc
xchg
mov
mov
jge
shll
pop
loop
mov
pop
inc
adc
and
sbb
cltd
and
add
imul
sbb
mov
pop
mov
add
and
mov
and
push
fmuls
and
dec
or
and
mov
cli
and
add
add
mov
out
xor
jle
add
jmp
jno
mov
daa
faddl
repz
arpl
test
sahf
cli
das
stc
mulb
rorl
mov
cmp
cmp
xor
aaa
lods
adc
loopne
into
mov
sbb
mov
jno
aas
push
mov
mov
imul
pop
pushf
xchg
std
and
hlt
mov
sub
or
ss
cmc
loopne
jns
inc
pop
and
mov
xchg
dec
mov
xor
movsl
and
sahf
mov
hlt
xor
popa
mov
mov
ret
push
popa
repz
shlb
adc
shrl
adc
int3
pusha
fstpt
mov
push
fmull
and
mov
and
xor
movsb
pusha
mov
mov
jns
idiv
push
and
sbb
or
push
pop
loope
pop
int
xchg
fsts
addr16
mov
in
xor
pop
adc
jb
or
inc
movsl
pop
outsl
mov
fidivrl
iret
scas
das
fld
das
rolb
or
and
insb
cmp
cmc
jge
mov
or
test
insl
and
inc
clc
ljmp
dec
inc
and
mov
setge
lea
ret
mov
push
jge
jne
mov
mov
repz
or
add
xor
lea
and
jge
bound
test
pop
push
aad
pushf
add
cwtl
lahf
and
scas
and
mov
aam
ficomps
test
fldcw
je
or
mov
popf
popf
in
aaa
movsb
xor
dec
jae
xchg
sub
and
rcrl
sbb
pop
scas
ficoms
xor
fnstenv
movsb
dec
sahf
cmpsl
push
movsl
ljmp
and
or
mov
mov
adc
jmp
and
insb
mov
xchg
mov
divb
popa
nop
dec
pop
fdivrp
mov
test
xlat
js
mov
pop
addr16
and
lahf
xchg
cli
loopne
ja
xorl
mov
fimuls
dec
add
movsb
add
stos
decl
loop
cwtl
popf
dec
rep
push
out
dec
ss
lret
imulb
push
mov
xor
push
inc
dec
cmp
cwtl
test
bnd
mov
sar
pushf
pusha
and
or
sub
mov
dec
xchg
loop
daa
mov
cmp
gs
fadds
dec
or
adc
sub
push
pop
and
mov
sbb
scas
inc
fbld
aam
repz
mov
loop
and
andl
pop
and
dec
or
lea
pop
cwtl
dec
and
pop
iret
and
add
sarb
xchg
lea
testl
roll
cmp
pop
dec
adc
jge
test
xor
mov
test
mov
dec
jns
push
sbb
frstor
and
subb
dec
inc
and
xchg
imul
js
or
aas
loop
xchg
mov
cmp
and
mov
lock
int
xchg
or
mov
xchg
xchg
xchg
mov
enter
cmp
push
and
inc
in
mov
loopne
and
mov
fwait
inc
idiv
cwtl
shlb
lock
fiaddl
jle
and
or
or
stos
sti
inc
cmpl
ret
lret
xsha1
cmpsb
lret
and
add
movsb
inc
sbb
adc
inc
add
lret
test
xchg
dec
sbb
dec
inc
dec
dec
addb
cmpsb
nopl
mov
jp
adc
mov
idivb
mov
xlat
lea
sbb
adc
je
mov
mov
lcall
cmpsb
cwtl
adc
jnp
in
mov
rol
or
add
adc
clc
mov
cwtl
sub
cmp
in
and
sbb
dec
mov
leave
and
pop
int3
inc
jle
call
ds
scas
adc
imul
cmpl
mov
and
insb
jmp
shl
addr16
and
and
jbe
ficompl
arpl
pop
add
jecxz
scas
pop
push
lods
or
xor
gs
pop
sub
add
insl
or
lgs
loop
push
dec
sub
int3
and
mov
mov
jle
jecxz
xchg
lea
hlt
cmp
stos
mov
mov
shlb
ds
in
jnp
pop
jg
and
or
outsb
sub
int3
pop
and
scas
mov
enter
or
jmp
rclb
bound
mov
ficomps
or
xchg
xor
xchg
leave
out
jno
xor
mov
test
sub
push
in
xor
xchg
cmp
dec
out
popa
sub
sahf
inc
mov
xor
jl
adc
xchg
into
in
lods
sbb
mov
xchg
push
fdivl
test
jle
into
sbb
and
mov
and
ja
dec
test
mov
mov
or
jbe
add
adc
cli
in
sti
sub
and
adc
loopne
and
sbb
lock
and
mov
and
jns
insl
and
jae
pop
repz
push
and
call
jno
and
add
test
inc
push
insl
mov
into
pop
add
stos
call
es
and
pop
imul
xchg
push
dec
xchg
ja
ss
xor
jns
in
xchg
xor
and
cmp
push
inc
pop
push
xchg
cmp
mov
adcl
cmp
in
mov
pop
movsb
and
rcrb
and
or
rcll
imul
mov
test
hlt
sub
and
cmc
cmpsl
sub
jmp
je
or
xchg
jno
imul
imul
aaa
sub
sbb
aas
dec
stos
mov
xchg
mov
push
test
in
fists
movsl
pusha
lret
mov
mov
into
mov
stos
xchg
mov
mov
xor
sti
and
dec
sub
repnz
mov
aas
mov
loopne,pn
push
push
std
mov
mov
xchg
loope
loopne
mov
push
cmp
and
hlt
roll
push
jo
xchg
out
pop
xor
mov
in
xchg
and
cli
mov
repz
xchg
xchg
int
dec
mov
outsb
repnz
lds
mov
push
and
push
cmpsb
pusha
scas
mov
adc
pop
daa
fnstsw
pop
push
pop
aas
mov
rcrb
inc
xchg
mov
push
sbb
mov
and
jbe
fisttpll
and
mov
cli
js
repz
inc
xchg
subl
lock
je
xchg
sti
xor
add
lods
sarb
orb
je
sbb
and
mov
enter
ss
jmp
in
sub
arpl
mov
fwait
dec
iret
mov
idivb
pop
mov
jmp
and
inc
mov
jmp
sub
add
xor
aad
stc
cmp
xor
cmp
das
xchg
inc
mov
nop
mov
push
or
in
and
loopne
and
loope
movsb
mov
leave
cltd
push
lret
iret
and
or
pop
adc
xlat
idivl
mov
xor
cmp
dec
and
adc
push
rorb
inc
and
xlat
movsb
push
dec
out
and
mov
mov
stos
orb
stos
sbb
and
fsubs
xlat
sub
cltd
mov
std
jle
scas
sbb
rolb
repz
mull
add
cmpb
insl
call
push
insl
mov
lods
iret
sahf
shrb
ds
dec
ljmp
push
daa
or
add
adc
stc
pop
and
cwtl
jo
or
out
mov
pop
adcl
addb
repz
inc
jno
inc
lret
add
xchg
cmpsl
jle
lock
ror
icebp
mov
xchg
push
push
loope
xor
add
ja
insb
pop
in
mov
dec
std
and
mov
jle
imul
bound
cmc
push
fs
xchg
jmp
aaa
mov
mov
add
call
push
movsl
mov
xchg
sbb
leave
and
inc
sbb
adc
inc
mov
lods
and
repnz
xchg
mov
push
outsl
stc
mov
cmp
mov
jmp
pop
and
sbb
js
and
pop
icebp
push
popa
bound
mull
and
jp
repz
sbb
and
testb
adc
aad
cmp
mov
popl
aaa
data16
and
in
push
arpl
nop
cmp
adc
rorl
imul
xlat
aad
sbb
shlb
jo
fucom
imul
dec
mulb
and
dec
inc
stos
jae
andb
sbb
popa
icebp
imull
mov
sbb
lret
cmp
xchg
push
sub
jl
repnz
push
mov
insb
pop
xor
mov
test
xchg
push
cmpsb
xor
and
mov
test
lds
and
call
int
and
popa
push
pop
mov
les
inc
dec
imul
clc
xchg
hlt
test
xor
roll
pop
test
leave
mov
hlt
xchg
adc
and
xchg
jle
leave
scas
and
movsl
gs
jmp
inc
loop
int3
and
sarb
jg
push
and
sub
jg
adc
rorl
sti
rclb
int3
pop
in
and
dec
imul
jp
fisubl
xchg
xchg
and
sub
and
sbb
and
jns
lcall
fs
jnp
popa
push
je
insb
xchg
pop
and
test
out
mov
mov
fidivl
mov
popa
xor
test
icebp
sbb
jg
mov
fs
mov
pop
loope
hlt
jbe
jo
sub
movsl
testl
pushf
and
fidivs
mov
inc
scas
xlat
iret
sbb
xor
xchg
xchg
loop
pop
push
jl
cwtl
les
mov
push
and
fcmovb
movsb
inc
jp
enter
popa
mov
mov
scas
sbb
adc
aas
sarb
jp
pop
inc
xor
add
push
out
push
jmp
and
imul
and
sbb
call
fcomps
sub
and
sbb
add
addr16
dec
daa
ret
lock
mov
insl
ret
cmpsb
jle
sub
pop
fsubl
in
cmp
or
insl
cli
mov
adc
pop
xor
and
sub
inc
cwtl
cmc
ret
xor
nop
or
sbb
mov
xchg
mul
cmp
daa
lahf
cmc
dec
ficompl
mov
pop
mov
lods
loopne
push
std
in
adc
les
div
lods
pushf
inc
int
dec
jno
push
jp
movsb
pop
sub
sbb
fiadds
sti
out
in
mov
decb
cmp
and
in
push
jl
repnz
stos
and
rcrl
pushf
or
or
sbb
mov
mov
or
jae
add
xor
test
pop
lods
mov
xchg
inc
iret
shr
mov
lods
add
clc
shll
movsb
lea
cmp
out
pusha
stos
dec
andl
push
and
xlat
imulb
std
or
scas
pop
and
adc
in
add
mov
fsubl
jmp
outsl
loope
inc
push
xchg
cmp
cltd
and
cmp
dec
push
sub
and
inc
lret
test
das
sub
je
nop
in
and
pop
cltd
lods
jge
bound
sub
mov
mov
fimuls
ficompl
popf
rorb
rolb
jp
add
imul
lds
sbb
cld
fidivs
sub
xor
hlt
dec
inc
cltd
data16
and
sarl
aas
xchg
dec
bound
jne
mov
in
addr16
inc
fadds
sbb
xor
mov
es
xor
pusha
sbb
push
fldenv
imul
andb
mov
into
fsubp
ja
mov
cli
and
sub
add
dec
ljmp
cld
popa
mov
inc
and
dec
gs
shrb
push
sub
outsl
sub
pop
ret
mov
sub
lds
stos
mov
jp
mov
mov
xchg
mov
inc
pop
xchg
dec
sub
cmp
lods
mov
aas
bound
jne
xorl
mov
test
mov
test
stc
push
popa
fwait
dec
aas
pop
mov
inc
xor
nop
jne
movsb
aad
pop
xchg
mov
jbe
xchg
push
and
sub
mov
adc
cltd
sub
and
scas
and
sub
push
cmp
aam
jne
cmpsb
inc
mov
mov
jno
sub
dec
xor
pop
mov
mov
mov
inc
idivl
push
mov
and
ret
movsl
arpl
pop
sub
fstps
cmp
or
mov
mov
lahf
inc
cmpsb
sub
and
fwait
outsl
call
and
add
and
jae
and
rol
pop
and
in
and
pop
adc
pop
cmp
push
lods
add
sbb
lods
jmp
in
inc
aad
movsb
add
imul
shr
adc
js
and
cmp
sub
in
lret
pop
dec
push
xor
xchg
es
or
jne
and
shlb
jg
dec
jecxz
fsubl
mov
mov
js,pn
push
mov
pusha
rolb
pop
sbb
es
ja
or
and
inc
push
and
jbe
lea
cmpsl
imul
dec
sub
jp
push
and
hlt
mov
jno
fsubs
movsl
push
mov
aas
cmp
ja
jg
and
jns
xchg
fs
cwtl
and
xchg
push
and
ret
roll
xchg
sub
lods
mov
jne
jl
stos
cs
sbb
and
sub
xor
cmpsb
fwait
push
out
mov
push
xlat
and
ret
and
int
add
jne
cmpsb
and
push
sub
pop
push
test
and
lcall
and
or
push
and
lock
xchg
lods
cltd
mov
and
lret
inc
fsubrs
jmp
adc
scas
mov
and
imul
xchg
out
push
sbb
lret
icebp
and
push
sahf
xchg
loope
sarl
sub
jne
and
mov
jp
inc
aas
xchg
sub
pop
mov
sub
repnz
xor
fbstp
adcl
mov
dec
test
dec
push
dec
das
subl
and
mov
jg
mov
sub
inc
inc
dec
adc
sub
pop
sahf
popa
cmp
fs
cs
fstl
insb
jo
loope
mov
sub
xor
jecxz
sar
sbb
addr16
and
int
dec
cltd
in
cmp
stc
into
scas
fs
in
push
and
lret
push
pop
mov
push
aad
xchg
test
mov
test
test
sub
and
add
mov
cmp
and
jno
cltd
test
push
lret
mov
subb
daa
popa
inc
jmp
shrl
adcb
xor
pop
xchg
jns
inc
push
cmpl
sbb
push
jmp
mov
lcall
jp
and
mov
xor
add
lds
fwait
jge
cmpsb
dec
push
out
mov
lahf
daa
mov
lea
dec
insl
cmp
push
mov
fiadds
ljmp
add
jmp
push
loopne
push
or
pop
add
dec
in
pop
outsl
xchg
pop
xchg
and
mov
and
sbb
jge
arpl
push
movsb
mov
lock
xchg
xchg
and
fadd
sahf
adc
test
das
pushf
daa
inc
mov
inc
mov
and
cmp
scas
hlt
test
pop
and
pmulhw
and
dec
addr16
pushf
sbb
bound
movsl
push
ret
mov
movsb
loopne
jno
sbb
and
stc
imul
fldenv
fildll
inc
sub
mov
ret
insl
movsl
rclb
imull
popa
movsb
fists
pop
lds
ja
cmp
pop
sub
mov
jle
aas
and
fdivrl
lds
dec
addb
sbb
loop
bnd
fildl
jnp
and
sahf
dec
ljmp
rcll
mov
movsb
mov
and
jl
imul
xlat
xor
and
outsb
sbb
and
test
in
cmp
sub
sub
popf
push
and
cli
mov
push
sbbb
and
sahf
sub
movsb
cmc
adc
fisubrl
mov
loop
ret
jle
jge
sbb
incl
mov
mov
rolb
add
and
jecxz
or
mov
sub
jmp
pop
addr16
mov
sbbb
icebp
fwait
push
mov
in
xchg
or
inc
sub
aam
or
dec
popf
fldenv
outsl
sahf
stc
adc
fs
and
lock
or
adc
mov
or
xchg
and
push
pop
push
and
mov
mov
test
lds
mov
inc
and
movsb
and
stos
xchg
out
aaa
lods
sbb
push
in
xchg
dec
push
and
xchg
push
rol
mov
xorb
xchg
mov
push
or
xchg
int
popa
push
sub
xchg
sahf
call
es
imul
out
popa
jo
mov
mov
xchg
or
and
push
mov
pusha
mov
lahf
lods
shrb
ds
sbb
jne
mov
and
dec
dec
dec
bound
and
or
scas
and
aas
or
ret
and
sbbb
jle
lret
push
cmc
loopne
fisubl
xchg
push
and
aam
pop
lret
insb
cs
and
aad
and
faddl
aas
lds
int3
xor
outsl
push
dec
shl
pop
and
popa
mov
cmpsb
roll
ror
jp
dec
mov
or
data16
cmp
xchg
in
mov
lock
or
sub
mov
or
xchg
sbb
mov
addr16
jge
inc
adc
inc
int3
jp
pop
mov
outsb
popa
popf
cwtl
data16
aas
cmp
add
add
mov
add
push
aas
scas
mov
xor
popf
lret
xor
mov
cltd
in
pusha
or
cmpsb
sbb
jnp
mov
nop
push
and
push
addr16
and
icebp
adc
xchg
mov
mov
pushf
dec
push
dec
arpl
enter
test
xor
adc
insl
sub
and
push
fbld
sti
mov
sbb
mov
inc
sub
and
jns
jge
loopne
mov
mov
es
xchg
push
ret
sub
push
and
push
ljmp
pop
mov
incb
pop
nop
insl
pushf
and
push
andl
jmp
xchg
push
jp
out
std
orb
jae
inc
mov
dec
andb
aad
inc
stc
mov
mov
outsb
out
jne
jmp
das
xor
test
dec
addr16
cmpsl
adc
inc
pop
or
pop
data16
xlat
add
scas
pop
imul
push
movsb
stc
push
lock
mov
popa
test
sub
ljmp
rclb
gs
push
and
shlb
and
pop
pop
in
pushf
rcll
add
loopne
inc
jle
stc
test
outsl
add
das
ficoms
jg
and
adc
cmp
imul
and
sub
outsb
add
dec
scas
mov
les
mov
in
sub
mov
lahf
fsubs
paddusw
mov
mov
popa
add
mov
loop
mov
hlt
xchg
adc
ja
sbb
data16
dec
lcall
popa
inc
stc
leave
xor
adc
mov
les
std
dec
cmp
sub
aam
pop
rolb
loopne
aaa
xchg
xor
sub
and
add
roll
or
mov
sbb
pop
clc
push
and
leave
jmp
dec
es
lahf
pop
js
mov
popf
out
mov
inc
hlt
and
andl
dec
sahf
sub
add
jp
inc
xchg
pop
xchg
xchg
pushf
ljmp
and
and
cltd
push
call
xchg
sarl
sbb
loop
xor
call
jns
sub
fldt
dec
mov
push
icebp
movsl
mov
cltd
dec
and
pop
scas
repnz
xchg
movsb
mov
sub
xchg
jg
insb
cmp
xor
and
in
dec
mov
xor
cmp
mov
or
push
jp
movsl
inc
mov
inc
sub
and
int
jl
jge
and
outsb
cmp
inc
and
xchg
arpl
mov
mov
dec
fwait
add
jge
jecxz
and
stos
int3
mov
gs
pop
loop
add
js
sbb
xchg
and
gs
in
int3
ds
mov
mov
pop
jne
sub
popa
in
mov
sub
and
push
je
cmpsb
outsl
and
dec
pop
insl
ds
out
pop
mov
pop
pop
and
in
mov
enter
shr
je
xchg
xchg
mov
cs
jns
outsb
jo
xchg
notb
or
push
mov
jns
adc
out
pop
push
and
je
and
aas
clc
mov
sbb
in
pop
and
adc
dec
inc
aaa
mov
shl
and
and
sub
cmp
dec
sbb
adc
mov
movsb
xor
popa
mov
and
out
push
pushl
push
mov
repz
mov
sub
stos
addr16
cmpsb
xlat
xor
and
push
jbe
and
lods
pop
push
add
out
hlt
dec
mov
and
mov
into
and
shl
ljmp
mov
stos
out
les
and
and
inc
and
xchg
enter
das
add
push
lods
xor
xor
xor
shlb
mov
fs
and
inc
hlt
jne
repz
and
mov
sbb
xchg
mov
and
mov
dec
adc
loopne
and
fnsave
into
and
xchg
fidivl
data16
push
shll
inc
jmp
and
jne
xchg
and
leave
mov
call
and
in
es
mov
lea
shlb
shlb
rorl
hlt
inc
push
sub
inc
aad
in
movsb
lds
and
sbb
ret
frstor
repnz
arpl
and
in
mov
jo
sbb
scas
imul
dec
inc
add
int
and
fwait
inc
jle
jge
and
pop
loopne
sbb
sbb
test
push
adcl
lods
lcall
add
xchg
rcll
imul
mov
clc
cmp
and
loop
addr16
inc
arpl
inc
sbbl
mov
ss
mov
and
mov
and
jne
lock
cmpsb
mov
cmc
sub
das
and
in
mov
and
lahf
push
stos
popf
add
and
jno
or
mov
push
int3
push
or
enter
jns,pt
sbb
push
test
adc
sbb
loop
push
cwtl
inc
pusha
mov
imul
sarb
out
in
inc
adc
fisubrl
and
mov
or
rorb
fsubrp
xchg
cmpsb
in
or
rorl
xor
mov
outsb
mov
mov
out
fidivs
cmpl
in
or
cmp
inc
aam
and
pusha
cs
and
xor
ret
mulb
lcall
leave
pop
xchg
mov
and
nop
pushf
and
or
lret
vunpcklps
dec
ds
fsubs
subl
pop
jecxz
inc
jnp
aas
lahf
ljmp
dec
jne
inc
es
sub
mov
ss
adc
cmp
stos
repnz
aaa
xor
sub
pop
mov
jbe
fidivrl
insl
pushf
int
andb
test
ffreep
test
pop
push
and
xorl
das
mov
aad
fistps
outsl
cmpsb
std
orl
add
dec
mov
cmp
dec
and
mov
and
and
jp
shlb
jns
or
jmp
sbb
stos
mov
and
js
cmp
sbb
jno
sbb
add
outsl
into
pop
mov
frstor
xor
gs
es
pop
lea
jb
fcoms
mov
push
and
jp
insl
cmpsb
lock
sub
jle
fnstcw
jno
dec
push
ret
adc
sub
mov
mov
ja
xor
mov
jns
sbb
aam
add
dec
mov
push
add
aas
js
adcl
je
or
mov
pop
sub
jge
nop
cli
das
aaa
xchg
jecxz
sti
jmp
push
out
and
lods
xor
lods
fstpt
nop
leave
and
test
xchg
xchg
out
incl
push
es
and
inc
jl
addr16
test
cld
inc
jl
aaa
fdivrl
scas
jb
ret
push
adc
pop
and
out
cmp
jnp
movsl
dec
lret
ret
cwtl
adc
push
pusha
push
mov
mov
jnp
in
xchg
add
lods
mov
pop
xchg
sub
jecxz
mov
push
cmp
insl
jl
mov
sub
add
shll
testl
xchg
pop
adc
jge
and
js
repz
push
cld
sbb
and
pop
cmpsl
lcall
cmpsb
pop
push
je
pop
cltd
xchg
add
inc
xlat
jmp
push
xor
and
xchg
lds
push
xchg
jp
xchg
das
test
mov
clc
jl
add
cmp
and
jne
xor
add
cmp
lods
sbb
push
xchg
std
lods
les
mov
or
mov
popa
lcall
xchg
cmp
sti
dec
bound
xchg
repz
popf
cmpsl
or
pop
push
popa
aaa
xlat
mov
and
xchg
leave
lahf
and
mov
push
int3
repz
pop
and
cmp
xlat
push
into
or
xor
std
mov
cwtl
bound
push
sarl
stc
xchg
add
pusha
jmp
sbb
lods
mov
xchg
lret
pop
pop
cmpsb
ds
stos
in
sbbb
push
add
mov
jb
int
fisttps
and
jge
and
cmpsl
mov
mov
xchg
test
adc
inc
addl
push
pop
lahf
ror
mov
pop
insb
pop
mov
cmp
jg
and
and
dec
dec
scas
and
sbb
int3
cmpsl
fisubrs
and
int
push
jmp
jmp
das
xchg
rcr
ds
lcall
sbb
pop
and
daa
rol
xchg
lods
mov
add
adc
lock
jnp
inc
pop
cmpsb
and
gs
sbb
loope
or
test
testl
scas
mov
test
movsb
dec
pop
stc
mov
in
sahf
imul
and
test
mov
jle
mov
rorl
movsl
fldl
and
cmp
andb
inc
int3
stc
imul
adc
jne
jmp
push
popf
pop
std
das
xor
dec
andl
mov
adc
push
jno
xchg
out
jbe
and
sti
inc
loope
in
and
fbld
add
fiaddl
cmp
and
test
pop
int3
mov
xchg
dec
divb
sub
aas
sbb
xchg
in
and
inc
pop
xor
xchg
and
xor
and
mov
cld
add
sbb
adc
sub
mov
rolb
push
or
and
cmp
stos
or
jg
push
fdivp
loopne
and
inc
mov
cmp
and
aas
loop
orl
mov
bnd
cltd
add
imul
and
jno
cmp
mov
addl
out
sbb
lcall
push
adc
and
mov
or
and
rcrb
inc
leave
loope
mov
pminsw
add
lahf
out
pusha
cmpsb
adc
mov
in
ja
lahf
inc
push
test
loope
push
and
int3
movsl
inc
sbb
je
inc
mov
into
fnstsw
inc
loopne
xor
cmp
fs
je
imul
lods
leave
add
out
mov
push
mov
mov
out
xchg
sub
mov
or
lcall
pop
jns
add
shlb
int3
and
ffree
dec
insl
push
sub
inc
mov
jp
shlb
and
lcall
sub
in
pop
lea
and
mov
inc
xchg
fucomip
inc
call
das
out
movsb
movsb
xor
or
sbb
lea
push
mov
mov
outsl
sbb
xchg
jns
add
and
mov
and
aaa
adc
and
addr16
fdivrl
and
push
repz
jae
xor
or
jl
pop
mov
xlat
ljmp
dec
jno
jmp
jle
pusha
ljmp
mull
pop
std
push
mov
scas
lock
push
sub
cmp
pushf
adc
cmpsb
push
lods
daa
xchg
xchg
imul
outsl
add
pop
out
cli
push
and
push
repnz
adc
mov
test
add
dec
xor
daa
xchg
call
mov
cli
pushf
aas
and
outsl
out
pop
fcomps
pop
test
sub
popa
sub
lock
mov
sub
scas
cmp
ret
dec
mov
jns
pusha
call
mov
icebp
idivb
push
and
add
stos
and
xchg
outsb
sbb
lret
mov
xchg
lahf
aam
xchg
out
mov
fcmovnbe
pop
cli
and
mov
or
popa
push
xchg
push
mov
mov
scas
cmp
mov
jge
clc
icebp
lds
pop
rorb
test
lock
add
add
sub
shll
jnp
inc
out
sub
xlat
shlb
xchg
mov
stc
mov
in
andb
shl
out
xchg
mov
mov
mov
pop
adc
sub
movsb
out
mov
sbb
xchg
dec
cmpsl
xor
fwait
pop
cmp
cmp
jg
push
lods
test
cltd
and
xchg
jle
and
push
orl
mov
rcrb
das
scas
std
sub
xchg
xor
mov
lret
test
inc
das
xchg
fldcw
sub
int3
adc
mov
and
xchg
and
mov
sub
mov
popa
or
push
jp
inc
and
mov
andl
mov
repnz
mov
bound
and
pop
daa
jg
out
out
movsb
dec
jbe
push
fldcw
test
jecxz
popa
ss
enter
out
jge
and
movsb
jg
int
arpl
sub
sbb
and
fistpl
add
ret
adc
pop
das
or
xor
mov
jb
dec
sbb
roll
sub
jno
pop
mov
jge
mov
pusha
js
pop
jns
sbb
jno
cltd
lret
and
add
stos
clc
shrb
and
pop
or
dec
mov
addr16
ja
push
fsubl
jns
fbstp
cmc
xchg
cmp
rcr
test
ds
jbe
inc
dec
popa
xor
sub
xor
jmp
push
aam
daa
mov
sbb
hlt
popl
orl
adc
jecxz
sti
adcb
xchg
lea
mov
xor
arpl
mov
aad
popf
push
fcoml
and
jno
mov
or
cs
pop
mov
mov
and
jmp
andb
dec
and
sbb
cmpsl
nop
js
aaa
cmpsb
add
jecxz
push
in
and
std
mov
cltd
and
inc
sub
dec
jmp
lahf
mov
aad
add
lods
fbld
out
xor
xor
sti
pop
mov
bound
or
lods
loop
pop
lea
sub
cld
xor
mov
cmpsb
sbb
pop
mov
stc
shrl
inc
sbbb
and
and
neg
movsb
cmp
adc
cmp
subl
dec
addl
mov
je
jle
and
adc
lods
sbb
and
add
je
jae
out
lock
sub
popa
jecxz
movsb
andb
xchg
jns
push
xlat
jge
es
pop
ss
xor
add
ret
inc
lahf
or
jns
mov
stc
jl
fwait
mov
pop
loope
aas
xchg
call
pushf
imul
xor
dec
mov
jbe
mov
pop
fwait
sbb
add
pushf
bnd
cs
and
iret
mov
js
je
xor
jae
scas
test
jp
xchg
jge
int
and
push
cmp
iret
mov
rolb
flds
out
push
inc
outsl
test
lret
test
leave
push
leave
repnz
xchg
movsl
loop
or
sarb
mov
mov
sbb
cmp
movsb
add
push
xor
test
negb
loope
cmp
gs
or
loope
mov
les
aad
scas
mov
rcrl
xchg
mov
mov
fldenv
sbb
cwtl
test
cltd
inc
jns
adc
mov
rolb
pusha
inc
add
dec
fistpl
popa
inc
icebp
je
jge
mov
pop
mov
inc
or
add
xchg
and
mov
in
sbb
sub
and
movb
and
rorl
and
jp
cmc
adc
lock
into
cld
call
orl
and
and
les
jne
pop
add
dec
mov
jns
and
js
sub
sub
pop
shlb
and
xor
popa
pop
and
lret
outsb
popa
outsl
sub
push
dec
call
and
push
or
fisubl
loopne
xchg
mov
movl
je
fstl
inc
cmpsb
jmp
ds
fsubl
add
mov
xchg
jecxz
fldenv
cmp
das
cltd
cmp
jo
fistps
ror
add
fsub
mov
xor
cmpsl
pop
and
mov
lds
out
and
bound
test
lods
pop
pop
mov
andl
cmpsb
mov
idivb
std
mov
stc
jno
sti
and
sub
sarl
in
loope
ds
enter
xorl
mov
and
mov
xchg
fisttpl
out
add
push
icebp
js
incb
push
mov
fidivs
cltd
insl
stos
cld
imul
pop
mov
enter
std
jmp
je
jb
call
push
push
enter
test
insl
ret
and
mov
add
lea
cmp
pop
insl
pop
test
and
out
pop
test
xchg
cs
scas
cmp
popa
aas
sbbb
mov
mov
sub
and
push
mov
pop
fisubs
loope
sbb
mov
scas
daa
jnp
mov
sub
jbe
push
pop
xor
ja
sub
pop
cvtdq2ps
xchg
fiadds
xchg
dec
and
add
and
gs
sub
stc
cwtl
xchg
and
push
aas
dec
mov
scas
cmpps
iret
sbb
jle
fdivrs
and
stos
pop
push
or
and
and
lcall
and
dec
outsl
scas
cmp
mov
push
test
div
xor
fmull
scas
ljmp
and
add
sub
das
xor
push
sbb
in
in
rorl
movsb
pop
jb
and
add
xchg
sub
cmpsl
add
sbb
cmp
xor
mov
pop
lods
or
in
ficoms
mov
sub
fidivl
and
xchg
dec
cmp
mov
stos
addr16
scas
pop
cmp
sbb
pop
roll
and
or
js
test
movsl
push
add
stos
inc
mov
xor
repz
or
jno
arpl
cmpsl
and
sbb
fnstsw
push
jbe
mov
jecxz
push
arpl
jecxz
sti
and
into
shll
xchg
enter
sub
xor
add
push
xchg
loope
jp
test
push
add
cmp
mov
mov
xor
xchg
clc
and
out
out
mov
setne
dec
loop,pn
inc
stc
sub
mov
cmc
test
outsl
in
and
cli
call
fimull
xor
cmp
and
shlb
push
and
pop
pop
mov
daa
mov
std
jmp
loopne
and
mov
lcall
outsb
and
sahf
xor
aas
movsb
fsubl
sub
xchg
cmp
insb
and
imul
mov
ss
push
fiaddl
and
and
xchg
loope
clc
mov
jmp
mov
in
cmp
ja
pop
mov
cmp
and
inc
sarb
xor
and
push
ja
aad
out
push
das
testb
mov
dec
pushf
xchg
mov
xchg
sub
cmp
mov
jo
leave
add
or
test
inc
adc
mov
mov
sbb
mov
xor
sbb
mov
cld
pop
scas
fwait
mov
and
pop
jl
into
stc
clc
mov
fcoms
mov
sbb
negl
test
mov
mov
jle
stos
mov
nop
stc
jb
and
dec
mov
test
jbe
mov
xchg
subl
push
out
pushaw
jnp
and
xchg
call
mov
notl
mov
fs
jl
dec
mov
ja
insl
jnp
into
inc
cmp
popa
mov
stc
mov
adc
and
icebp
xor
mov
jmp
cmpb
rep
cmp
pop
mov
mov
bnd
pop
and
cmp
inc
push
ljmp
insb
and
dec
and
out
inc
in
fistl
imull
xchg
mov
lods
push
fsubs
mov
std
sarl
test
xor
leave
mov
nop
jne
jle
and
loopne
loope
and
fsubl
into
jno
inc
jle
bound
lods
mov
hlt
addl
shll
es
sub
cs
adc
ret
lcall
xor
mov
cli
and
sahf
int3
shll
ds
in
mov
xchg
fwait
ljmp
popf
or
add
fistpll
mov
and
test
repnz
xor
in
and
dec
xor
adc
jno
sub
xchg
push
and
stos
push
addr16
mov
xor
mov
jns
and
shrb
test
out
sbb
sbb
or
adc
and
xchg
xor
sbb
inc
adc
xchg
jecxz
inc
lcall
daa
fbld
and
orl
or
xlat
and
lcall
and
pop
ljmp
cmp
movsb
push
icebp
xchg
rorb
dec
xor
rcl
movsb
popa
xchg
pop
lret
xchg
test
sub
adc
lea
ret
cmp
jne
jecxz
leave
mov
or
jnp
aad
and
dec
mov
push
sbb
fsub
es
mov
and
xor
mov
sbb
mov
xor
jns
and
cmp
sub
jae
test
mov
pop
enter
outsl
dec
cmp
sbb
imul
imull
and
cmpl
mov
and
int3
sub
sub
and
es
lret
loopne
mulb
cwtl
ret
jb
fsubrs
inc
fisubrl
xchg
aas
and
leave
ljmp
and
pop
scas
mov
and
std
lock
sbb
push
and
mov
cmp
and
hlt
cmpsb
add
stos
and
mov
push
and
rorb
pop
lods
and
ret
ds
and
xor
lret
movsl
loope
faddp
sub
rcll
add
daa
scas
das
adc
or
arpl
xor
dec
pop
jnp
fisubrs
dec
xchg
jne
add
cwtl
popa
jbe
add
or
pushf
or
rol
sub
in
mov
and
inc
xor
push
pop
and
mov
dec
ja
mov
dec
xor
out
and
inc
lods
adc
mov
js
mov
adc
pop
fsts
pop
mov
rcl
repz
and
push
mov
and
lods
push
shlb
pop
xchg
gs
pop
je
sahf
sbb
and
dec
imul
mov
and
cmp
push
lea
ss
andb
push
and
xchg
mov
ret
jge
test
outsb
aas
loop
and
dec
and
stos
and
pop
das
push
or
arpl
mov
out
adc
aas
daa
push
das
inc
mov
dec
xchg
xchg
xor
lods
and
scas
iret
cli
sahf
ja
cltd
and
pop
cmpsl
cwtl
imul
dec
pushf
cmp
jns
mov
add
popa
jmp
movsb
inc
scas
popa
and
fadds
ret
popf
jecxz
lcall
leave
add
xchg
pop
or
popf
popf
pop
jge
iret
jg
js
loopne
mov
test
pop
and
and
xchg
dec
mov
add
test
or
sbb
and
and
lahf
movsl
push
cltd
sub
mov
add
mov
adc
faddl
and
or
mov
int
inc
jmp
and
mov
stos
and
insl
jp
pop
xchg
movsb
imul
and
std
jns
and
out
loopne
sub
pusha
sub
and
mov
repz
popf
or
mov
in
int3
aad
scas
ds
mov
jno
cltd
add
lods
xchg
loope
sti
stos
mov
pop
and
mov
lcall
ds
cmp
fiaddl
in
dec
push
and
xchg
mov
and
pop
xor
out
jbe
pop
mov
inc
lcall
out
push
and
clc
lock
and
inc
or
and
cwtl
dec
lret
in
pop
hlt
out
sbb
dec
out
or
add
sub
dec
enter
ret
dec
in
inc
mov
and
cli
dec
and
adc
add
xchg
insl
xor
add
mov
adc
xchg
imul
and
sub
addr16
mov
cmp
mov
pop
imul
popf
add
pushf
xor
mov
add
imul
rolb
fnsave
add
pop
jne
sub
pop
xchg
ljmp
icebp
in
jns
les
and
push
fsubl
repz
and
pop
xor
cs
test
inc
flds
dec
add
lods
xor
cmp
cltd
pop
mov
scas
popa
xchg
jns
and
and
test
fmull
mov
stos
arpl
pop
mov
push
clc
lds
fdiv
xor
ss
mov
std
mov
mov
imul
sbb
inc
test
cmp
jno
lret
xor
xchg
cmp
push
sahf
mov
push
and
mov
lahf
adc
xchg
lock
test
and
stos
aaa
jo
sbb
inc
in
sti
stc
test
cltd
and
iret
fisubs
std
outsb
xchg
stos
gs
jecxz
and
cwtl
lret
jno
shlb
push
in
sbb
mov
xchg
adc
pop
and
js
dec
lods
icebp
out
xchg
iret
push
pop
das
movsl
cmc
xor
cmpsl
lret
mov
add
pop
adc
shl
movsb
and
add
pop
lcall
push
popf
movsb
out
mov
lahf
jno
sbb
cmp
sbbl
xchg
incb
jg
sbb
sbb
cmpsl
pop
and
push
insl
fsts
pop
and
push
xor
bound
das
adcl
dec
mov
sub
stc
mov
out
cwtl
jecxz
aaa
and
jp
aad
push
std
shlb
sbb
stos
and
xchg
and
das
cmp
cmpl
push
jmp
inc
les
pop
jo,pt
xchg
inc
xor
inc
sub
sbb
cmpsb
xchg
insl
negl
jle
push
jl
or
jnp
or
and
ss
push
push
andl
add
js
aas
mov
in
pop
xchg
popa
add
mov
inc
adc
push
gs
and
dec
into
gs
std
and
js
enter
jo
jns
fdivr
lret
cmp
mov
sub
sbb
xchg
aas
and
pushf
sub
sarl
or
dec
jge
and
mov
xor
sbb
and
daa
cwtl
jne
call
cli
jecxz
mov
add
icebp
lea
mov
or
sub
and
xor
dec
test
ja
jno,pt
iret
mov
inc
pop
push
and
int3
sub
lods
inc
mov
stc
and
xchg
std
movl
xor
pop
shll
or
ret
inc
pushf
mov
adc
test
shll
in
add
je
mov
pop
mov
popf
testb
shl
cmpsl
and
jb
std
cmp
mov
lcall
fdivr
fiadds
mov
aas
outsb
into
mov
and
imul
loop
and
nop
ret
ss
xchg
and
filds
push
addr16
sbb
int
jo
das
pusha
mov
cmp
sti
mov
mov
mov
andb
scas
inc
stos
addl
and
push
mulb
add
loop
adc
cmpsb
jge
fbld
lret
xor
shrl
aas
mov
or
mov
es
and
xchg
mov
jmp
pop
ds
call
push
rcrl
adc
in
insl
movsl
sbb
and
pop
pop
jp
and
pusha
lea
popa
dec
add
mov
push
adc
addl
in
mov
inc
cmpl
pop
int3
dec
mov
cmc
das
filds
jl
stos
js
xor
mov
and
lcall
sub
dec
and
mov
test
pop
push
add
push
fidivrl
xor
sbb
gs
mov
mov
imul
je
pop
sbb
jecxz
aaa
shrl
push
and
cwtl
mov
and
rclb
push
lcall
sub
and
int3
stos
fisubs
jmp
mov
enter
xor
xchg
and
out
dec
stos
mov
testb
mov
mov
aas
xchg
sbb
and
cmp
lock
jle
jnp
adc
dec
and
push
test
repnz
or
mov
mov
loope
cmp
cmp
pop
xchg
js
and
xchg
nop
push
jp
in
mov
cmpsb
cmc
icebp
sarb
push
arpl
xor
int3
ret
iret
test
movsb
enter
push
dec
dec
add
xchg
mov
sub
add
and
int3
mov
jecxz
pop
and
pop
sub
push
cmp
sub
jb
add
leave
sbb
mov
stos
adc
movsl
mov
outsb
mov
push
add
popa
xor
out
dec
ret
and
addl
insl
cmp
push
pop
notl
das
add
adc
mov
xchg
mov
cmp
push
sbb
sbbl
scas
cli
lret
pop
pop
inc
loop
and
aad
adc
ret
test
mov
insl
popf
outsl
call
add
mov
lcall
mov
sbb
adc
jecxz
testb
or
xchg
jecxz
jle
outsb
pusha
pushf
sbb
pop
and
xchg
push
dec
mov
xor
sahf
jmp
mov
test
std
xor
lock
and
lock
mov
sbb
dec
fstpt
push
rorb
xor
pop
and
out
mov
dec
stc
rorb
ss
push
adc
mov
and
or
pop
cmpsl
xor
xchg
and
mov
incb
and
xor
add
sub
dec
repz
mov
xchg
fistpll
dec
mov
test
out
add
cmpsb
add
mov
pop
xor
movsl
xchg
shr
adc
jg
bound
dec
movsb
push
lods
dec
inc
mov
jg
cld
xor
imul
imulb
orl
inc
sti
sub
pop
icebp
pop
or
mov
inc
and
push
aas
sub
sbbb
cmp
ss
imul
mov
add
hlt
dec
jno
test
xchg
bound
mov
lods
dec
scas
cmp
mov
imul
mov
sub
pop
and
mov
mov
out
ss
std
mov
popa
leave
out
cs
lcall
push
xor
popa
xchg
scas
cmp
fs
push
es
mov
and
ljmp
and
popl
adc
movsb
pop
pop
sbb
icebp
stos
xorl
push
adc
jp
inc
and
or
mov
or
xor
jmp
subl
and
mov
fiadds
push
ds
arpl
or
repnz
and
inc
fisubrl
add
and
add
movsl
std
lret
and
aas
addr16
adcl
lahf
insb
inc
jno
pop
test
mov
xchg
sub
lods
dec
mov
and
leave
call
push
pop
pop
and
outsb
lret
subb
movsl
pop
inc
sbb
xlat
mov
push
mov
aaa
or
jge
and
inc
dec
xchg
andl
aam
fsubrs
mov
and
enter
push
inc
in
sbb
dec
das
push
sahf
loopne
and
push
clc
pop
pop
mov
lret
adc
dec
and
push
rolb
sbb
jmp
push
cmp
jno
xor
loope
sub
ret
mov
popa
dec
roll
mov
and
and
ret
xchg
add
mov
sarb
and
lods
pop
xor
in
aam
or
push
and
loop
movsb
xchg
and
push
test
mov
js
xor
nop
popa
icebp
out
shlb
ret
inc
xor
xor
push
jns
out
and
mov
mov
jns
jecxz
popf
arpl
andl
test
xchg
adc
xor
sub
sub
push
scas
add
data16
and
xchg
jmp
jbe
imul
push
fnstcw
fstpt
dec
and
lret
fsubp
and
mov
mov
aam
cmpsb
xchg
popf
stos
fsubrl
dec
repnz
mov
xchg
and
or
xor
pushf
lods
and
xor
cmpsb
aaa
movsl
enter
adc
daa
out
stos
jo
insl
daa
ret
pusha
les
popa
jae
loope
and
sub
icebp
mov
js
sbb
xlat
addr16
inc
jne
out
and
shll
push
xor
mov
xchg
aam
add
and
fisubl
mov
ja
mov
cmp
shll
jne
outsl
ret
pop
sub
sbb
fs
jb
lods
enter
pop
xchg
inc
add
mov
js
jo
or
dec
and
scas
lods
cmpsl
dec
movsl
jmp
jb
dec
mov
movsb
mov
mov
and
aam
fbld
sub
xlat
and
and
jno
add
xor
es
xlat
popf
lahf
out
jg
cmpsl
xchg
out
pusha
notb
cwtl
lods
mov
and
enter
loopne
and
imul
pushf
fwait
mov
fstl
iret
dec
int3
dec
out
inc
daa
and
mov
test
subb
scas
mov
mov
arpl
jl
int3
cld
movsb
sbb
lahf
loop
in
pop
testb
dec
cli
and
cltd
popa
leave
mov
push
jmp
jo
inc
cmp
mov
and
scas
cmp
inc
ljmp
stos
std
in
inc
data16
test
lds
or
cmpsl
loope
mov
mov
into
and
mov
xchg
jmp
fisubrl
pusha
je
cmpsb
cmp
fisttpl
mov
aas
test
movsb
pop
mov
add
rcll
mov
or
push
jecxz
and
jne
cmp
and
fwait
subl
nop
pop
sub
sti
xchg
xchg
add
popf
movsb
and
fmuls
and
insl
pop
jge
movsw
and
jmp
pop
das
mov
cmc
jnp
cmp
mov
popf
push
sub
mov
mov
mov
aas
cmp
pop
mov
cmp
popf
cltd
and
andb
add
jno
mov
push
daa
popa
push
dec
push
and
leave
mov
sbb
sbb
mov
out
movsl
push
test
cmpsb
movsb
xchg
imul
lret
and
cwtl
imul
mov
and
ffreep
xor
pop
nop
leave
xorl
clc
rclb
jno
cmp
sbb
inc
push
push
leave
and
leave
xchg
popf
out
adc
push
adc
cwtl
mov
mov
xchg
jns
adc
sub
xor
jmp
xchg
add
sarl
adc
adc
pop
xchg
xchg
pop
mov
scas
push
add
pushf
adc
xor
or
push
mov
lahf
jle
fidivs
and
xor
cmp
lods
add
cmp
popf
rclb
lahf
sti
cmp
sbb
sbb
push
mov
mov
cli
popa
gs
adc
int
pop
popa
push
std
test
mov
or
xchg
lahf
and
addb
mov
add
inc
mov
add
adc
test
fsin
pop
mov
mov
and
scas
mov
test
adc
into
mov
lahf
and
pop
rcll
adc
dec
movsb
hlt
jno
ret
into
cmp
adc
popa
push
pop
cmpb
int
mov
jg
sub
adcb
dec
and
mov
aas
adc
das
and
cld
add
imul
and
adc
in
pop
hlt
repnz
dec
adc
push
and
inc
int
jae
out
and
movsb
xchg
mov
xor
insb
xor
push
and
push
mov
imul
repnz
xlat
loope
inc
ud1
addr16
mov
je
outsb
dec
add
ret
gs
pop
pop
jo
loopne
sub
clc
jge
cli
fsts
jg
inc
and
dec
test
inc
stos
pop
jno
fs
lret
cmp
dec
pop
mov
mov
push
xor
sbb
and
push
sub
and
mov
out
in
push
push
popf
std
inc
movsb
sub
xchg
push
pusha
lahf
iret
and
int3
mov
xor
sub
pop
and
out
sbb
and
adc
popa
sbb
out
pop
pushf
gs
jl
and
sbb
dec
and
or
pop
xchg
cmpb
shll
daa
in
ljmp
xchg
and
xchg
loopne
fidivrl
test
daa
and
or
std
push
mov
jns
aas
push
int
mov
cs
mov
popa
movsl
out
sub
xor
test
pop
inc
lods
and
inc
aam
pop
mov
out
adc
mov
fbld
lock
dec
mov
add
sub
ret
fwait
inc
inc
lods
lahf
push
stos
xchg
and
inc
xchg
pop
clc
ss
sub
test
jno
cmpl
rcrl
adc
fcoms
movsl
iret
pushf
pop
and
jbe
adc
jge
and
sub
adc
loope
xor
movsb
and
js
addr16
sub
pop
sar
test
pop
loopne
dec
mov
push
sub
aam
clc
and
in
fisubrs
out
mov
les
adc
inc
lock
mov
and
jmp
outsl
sub
lret
les
inc
popf
in
out
sbb
dec
shl
popa
or
cmp
test
pop
mov
xor
mov
out
repz
lcall
pop
lds
xchg
pop
icebp
mov
mov
int3
repz
sbb
jae
cmp
loopne
xchg
push
xchg
inc
xor
mov
mov
xchg
add
add
int3
lret
ror
mov
cmc
scas
sbb
sahf
push
and
fdivl
inc
mov
adc
push
mov
aad
mov
je
adc
and
stc
add
ds
bound
repz
mov
mov
daa
leave
subl
fistps
add
push
mov
lock
and
aaa
stc
and
and
fs
mov
popa
and
mov
mov
add
jmp
lods
and
ss
or
add
call
mov
movsb
xchg
mov
aad
insb
mov
lcall
adc
and
cmc
mov
repnz
aaa
push
adc
pushf
pusha
and
push
xchg
addl
sbb
xor
add
and
fcoml
dec
push
and
cli
xorl
and
daa
or
loopne
inc
ja
adc
subl
dec
jg
mov
push
mov
and
jle
add
loope
popa
mov
andl
imul
fists
and
or
and
aad
xor
enter
cmp
imul
adc
add
jbe
and
aas
mov
xchg
jno
and
rclb
ja
icebp
dec
and
jae
pop
fsubs
add
dec
fwait
icebp
sub
out
dec
xchg
clc
fwait
and
ret
cmpsb
push
mov
test
xchg
mov
aaa
cmp
outsl
and
fmull
and
hlt
jb
addr16
xchg
xorb
lret
push
dec
aam
loopne
pop
sub
pushf
push
and
out
adc
ljmp
push
and
xor
ret
inc
cmp
mov
ds
scas
and
std
roll
add
cmpsb
test
pop
cltd
add
repnz
push
mov
lods
ret
xchg
fisubl
and
jmp
cmpsb
pop
push
and
xchg
mov
jb
jl
xor
cwtl
mov
andl
adc
aam
mov
ja
mov
js
mov
mov
xchg
and
jne
sbb
loope
negb
cmp
popf
xor
adc
out
imul
stos
scas
jo
cs
movsb
movsb
ljmp
cmp
cmp
cmc
lahf
stos
rcl
pop
or
sbb
pusha
ret
mov
dec
inc
and
mov
jmp
mov
or
jno
movsl
lea
and
mov
pop
xchg
jo
xchg
leave
shlb
mov
mov
test
jmp
iret
adc
lea
mov
mov
imul
inc
jecxz
xor
sbbb
xor
lret
adc
push
cmp
fsubrl
adc
pop
jnp
or
or
sbb
fnstcw
dec
lock
jle
adc
jp
jb
mov
fs
and
rol
imul
or
bound
adc
das
popa
and
lret
and
f2xm1
or
add
adc
bound
clc
push
cmpsb
sbb
movsb
mov
sbb
and
mov
mov
mov
cmp
or
fisubs
cmp
leave
repnz
mov
or
in
xchg
and
rcll
mov
mov
cli
in
cmpl
scas
adc
test
sub
fstps
xchg
pop
aas
clc
test
inc
ds
add
fistpl
and
sbb
jo
fprem
mov
shll
lods
and
js
xor
cmpsl
dec
and
cmp
sbb
sub
mov
mov
repnz
push
mov
ret
dec
nop
in
movsb
pushf
mov
sbb
xchg
or
xor
enter
and
mov
lahf
and
xor
add
cmc
and
jne
sub
test
jno,pn
sbb
and
mov
hlt
dec
dec
pop
js
out
movsb
hlt
test
pushf
icebp
rclb
push
mov
pop
out
sbb
daa
jmp
mov
mov
dec
add
negb
adc
mov
sar
adc
lock
out
push
enter
insb
sub
addr16
xchg
sub
notl
mov
imul
sbb
mov
movsb
test
ret
mov
icebp
adc
push
out
mov
mov
pop
mov
shrb
shl
popa
iret
and
cmp
push
jbe
test
loopne
fimuls
lcall
mov
out
and
int3
cmp
lea
insl
push
std
aad
cs
push
sub
pop
and
pop
xchg
cmp
and
and
mov
and
push
jmp
or
sbb
xor
das
xchg
push
dec
jecxz
int
and
xor
and
xor
cli
loopne
out
push
and
and
and
mov
mov
mov
lock
imul
push
add
fmull
xor
stos
lods
cltd
pusha
jge
and
dec
jg
sbb
xor
sar
bound
dec
and
mov
int3
movsb
pop
fwait
sub
xchg
into
mov
sbb
jmp
inc
jl
mov
je
movsl
mulb
mov
insl
mov
sub
sbb
adc
mov
ljmp
movsb
jmp
ret
pop
mov
data16
or
and
stos
decb
jge
and
push
outsb
inc
into
sbb
push
decb
pop
pop
adc
sub
inc
cmpl
popf
pusha
das
xor
mov
les
add
cld
in
and
cmpsb
push
shlb
xchg
loop
scas
gs
jmp
dec
and
fisubrs
mov
call
and
mov
mov
mov
inc
dec
aas
or
mov
outsl
icebp
repz
lret
pop
andl
push
imul
imul
shlb
push
fiadds
fcomps
mov
cs
popa
loope
push
sub
xchg
jno
xchg
add
scas
and
adc
lret
addl
cmpsl
repz
ror
jmp
or
enter
or
bound
xor
scas
and
jp
inc
and
cmp
lods
sbb
aas
pop
std
addr16
mov
lahf
push
mov
dec
aad
dec
inc
cli
shrb
sbbb
mov
int
mov
out
mov
cmc
loopne
inc
mov
mov
gs
push
mov
sbb
cli
movsb
lds
imul
pop
xchg
pop
and
mov
pop
pop
popa
aaa
repz
ja
xchg
and
xchg
jb
push
mov
hlt
cmp
stos
and
inc
test
xchg
and
aam
daa
and
mov
push
pop
imul
mov
es
mov
cmpsl
pop
pop
xor
pop
push
mov
mov
fisttpll
ret
xor
jge
test
shlb
in
sub
push
mov
xlat
and
test
into
push
jmp
sub
cmp
xchg
sbb
and
mov
jo
dec
aas
xchg
insb
xchg
pop
and
mov
lret
loopne
scas
push
xor
popa
rolb
lret
pop
jle
adc
loopne
je
mov
mov
in
inc
jnp
imul
cli
int3
fsubl
cmp
adcb
into
sbb
and
shlb
add
cmp
test
mov
mov
inc
pushf
cltd
mov
loope
nop
sbb
xchg
xchg
cli
push
pop
repz
mov
jecxz
pushf
adc
aaa
and
or
push
and
rcrb
push
and
aaa
aas
push
add
and
enter
or
sub
xlat
cs
fidivrl
push
pop
cltd
rcr
sub
and
hlt
mov
jns
ficoms
outsb
dec
sub
sti
test
cmc
scas
aad
dec
mov
and
add
push
mov
aam
and
cmp
adc
and
out
and
icebp
iret
and
xchg
out
xchg
fisttpl
mov
test
sbb
rclb
cwtl
sub
mov
adcl
das
iret
and
imul
jo
pop
inc
mov
and
inc
mov
ficompl
jne
sub
ljmp
or
and
aam
dec
loop
sbb
imul
lods
pop
add
scas
push
and
cmpsb
xor
mov
popf
roll
push
jg
jecxz
and
insb
pop
fwait
jbe
and
es
out
xchg
xchg
cmp
addr16
xor
push
and
jo
dec
xlat
test
mov
popf
jno
aas
adc
push
cmpsb
lock
pop
fisubl
pop
jle
sub
addl
xlat
and
or
pop
push
and
push
lcall
lret
and
dec
notb
inc
out
jb
jle
mov
pop
and
jp
lcall
cmpsb
and
stc
fcompl
dec
aam
movsl
xor
sbb
mov
and
cmp
sub
sub
adc
mov
adc
mov
inc
lods
ret
xchg
and
lret
adc
pop
adc
xchg
dec
addr16
sbb
and
sub
sbb
out
xchg
fcoms
pushf
lods
test
push
das
push
hlt
repnz
jg
and
ljmp
mov
mov
mov
dec
imul
and
push
cmp
fisubs
adc
sub
ret
leave
popa
push
fcoml
or
add
psubq
mov
shll
mov
in
pop
xchg
fwait
imul
cmp
add
inc
popa
outsl
mov
mov
mov
popa
insl
push
mov
mov
push
push
mov
xchg
cmc
mov
pop
int3
mov
mov
sbb
push
jns
xor
movsb
jbe
pop
mov
in
and
pushf
add
and
push
ror
and
repnz
xor
xor
data16
cld
popa
jmp
dec
nop
and
aad
sub
aaa
std
ret
push
bnd
pop
and
jno
and
subb
push
cmc
jne
aaa
lea
test
in
dec
mov
and
shr
mov
and
cmp
and
sbb
push
mov
jo
imul
rcrb
and
in
dec
mov
xchg
movsb
pop
and
xor
fwait
jecxz
sbb
cmp
inc
jnp
leave
adc
movsb
inc
pop
loopne
roll
std
xchg
pop
mov
push
add
fwait
jl
jo
fstps
ds
mov
and
ja
adc
and
movb
mov
sbb
jp
das
and
test
leave
push
push
arpl
lar
push
cld
sub
inc
jo
and
dec
sbb
and
jl
popf
xor
and
sbb
in
mov
idivb
push
and
ja
push
sub
sub
inc
lods
imul
xlat
fmull
sar
mov
test
push
scas
pushf
lret
mov
cmpb
enter
pop
repz
xchg
mov
nop
and
aam
sub
imull
and
pusha
push
scas
sub
and
repnz
jle
or
pop
mov
subl
push
lret
aad
push
inc
pop
ficomps
mov
adcb
enter
and
mov
cmc
push
sub
mov
cmp
mov
lcall
xchg
and
enter
jge
movsb
or
test
fadd
in
mov
inc
add
stc
cwtl
xchg
sub
adc
out
mov
and
nop
push
mov
ret
mov
sub
decl
test
cs
repnz
cmp
pop
sub
push
out
mov
and
insl
pop
aas
xor
and
push
mull
and
movsl
adc
inc
loope
inc
jg
and
shlb
add
xchg
data16
mov
xchg
das
mov
outsl
adc
dec
xchg
and
xchg
hlt
jns
pop
jecxz
fsubs
stc
xchg
jnp
fldenv
dec
cwtl
xor
add
xchg
das
xchg
imul
popa
mov
shlb
cltd
dec
push
xor
lock
es
outsl
cmp
and
divl
setbe
scas
aad
xchg
xorl
and
popa
pop
ja
jp
inc
adc
aaa
and
cmpsl
and
and
and
out
in
iret
lret
push
push
shlb
cmp
mov
loop
fiaddl
jmp
mov
and
in
inc
pop
pop
mov
xchg
lret
sti
add
call
cmpl
push
dec
repnz
push
aam
out
inc
out
fs
loop
push
and
xor
mov
enter
shlb
adc
mov
popa
inc
subl
sub
out
sub
and
aam
sbb
sub
dec
push
sub
pop
dec
and
add
jg
lea
mov
pop
push
or
jbe
add
and
and
cmp
pop
and
out
inc
mov
shll
dec
xchg
xchg
rcr
xor
mov
push
add
xor
add
in
sub
and
aad
in
stc
idivb
sbb
fs
lods
and
or
pop
fsubs
insl
sub
hlt
fnstsw
scas
push
dec
adc
mov
mov
add
cwtl
data16
add
and
aaa
mov
add
je
aas
and
pusha
xchg
daa
outsb
out
shll
in
jb
add
adc
imul
lea
test
fs
xchg
daa
inc
int3
sbb
gs
xchg
jns
mov
cltd
loopne
mov
jp
gs
scas
sub
inc
stc
xchg
pushf
test
movsb
inc
jae
ja
arpl
jp
bswap
loopne
xchg
cmp
pop
xor
andb
pop
sub
xchg
push
xor
fsubs
dec
inc
and
pop
test
mov
fwait
inc
pushf
mov
inc
lahf
and
push
and
add
adc
dec
aam
mov
lcall
cs
out
movsb
mov
fwait
inc
roll
leave
mov
popa
mov
out
clc
pop
das
into
mov
mov
jns
mov
adc
lret
mov
xchg
push
mov
out
movsb
push
and
jns
cmp
and
xchg
mov
mov
subl
mov
and
jmp
and
pop
imul
xchg
scas
cmc
iret
hlt
fsubl
loope
pop
sahf
mov
mov
in
pop
xchg
push
and
stos
dec
imul
and
xchg
daa
mov
xchg
mov
ljmp
arpl
jns
mov
fsubl
or
daa
movsl
mov
movsl
sub
pop
je
mov
pop
outsl
mov
inc
mov
and
ja,pt
shlb
push
jp
call
mov
and
xchg
sub
lret
repz
cmp
fbstp
and
sbb
movsl
pop
jbe
cs
or
jnp
mov
js
cld
dec
aas
and
pcmpeqb
and
popa
dec
hlt
lret
cs
and
mov
out
mov
das
mov
push
addb
stos
push
call
push
mov
lret
out
int3
xor
insl
xchg
xchg
xor
mov
cmc
pop
imul
and
aam
xchg
pushf
das
adc
dec
dec
inc
loopne
and
adc
and
push
push
pop
int
test
ds
popf
push
pop
lahf
and
nop
fsubs
push
fldcw
pusha
shll
sbb
insb
and
sbb
cmc
mov
mov
push
hlt
push
xchg
mov
ja
jae
and
mov
pop
mov
stc
fs
jns
imul
clc
inc
je
or
out
adc
pushf
arpl
push
cmc
push
test
jo
mov
mov
mov
aam
xor
and
into
daa
add
xchg
out
in
addr16
imul
cmp
add
pusha
lcall
scas
stos
xor
movsb
jo
pop
fisubl
xchg
leave
jg
and
fwait
jge
push
xor
mov
xor
and
loope
add
cltd
movsl
insb
movsb
mov
repnz
xor
ret
int
movsb
lret
enter
cmp
push
insl
and
xchg
adc
jg
push
and
mov
loope
xchg
cmc
and
xchg
ljmp
and
or
sbb
mov
jno
mov
and
pop
jecxz
xor
xchg
mov
popf
pop
jae
pushl
fld
inc
and
mov
sbb
and
fsub
and
jb
in
ret
inc
mov
stc
dec
mov
xchg
xlat
push
mov
fiaddl
and
enter
mov
stos
das
outsl
add
fsubr
jl
and
sbb
sbb
das
shlb
ret
fildl
xchg
dec
inc
xchg
sub
xor
mov
test
push
sub
and
pop
daa
fiaddl
cli
sbb
lahf
stos
shrb
sbb
rclb
jns
adc
movsb
mov
add
pop
push
pop
mov
cmp
jo,pt
pop
and
adc
mov
cwtl
and
shll
jle
popa
pop
cmp
lods
mov
jecxz
mov
xchg
and
stos
lret
mov
and
cmp
fnsave
movsb
setge
scas
and
sbb
arpl
xchg
sub
mov
mov
jno
out
arpl
inc
mov
push
or
loope
jp
dec
cmp
jae
outsl
adc
pop
repz
lea
cmp
cmp
pop
or
mov
es
mov
xor
mov
fdivl
mov
decl
in
movsl
pushf
insl
jl
dec
fucomp
test
push
mov
add
mov
dec
stos
das
dec
xchg
dec
mov
inc
mov
sbb
add
xchg
ret
push
movsb
mov
hlt
dec
push
inc
lds
outsb
xor
and
and
je
xor
xchg
and
pop
scas
lahf
sub
mov
aaa
xlat
push
or
sbb
jb
dec
push
sub
push
mov
push
and
jns
ja
jo
imul
sbb
test
arpl
repz
loopne
mov
das
sub
addl
fwait
shlb
jg
pop
pop
mov
arpl
data16
mov
aas
jae
cmp
and
mov
sbb
icebp
loop
push
pop
mov
mov
inc
outsl
cltd
call
ja
cmp
insb
xchg
data16
decb
sbb
pop
xchg
mov
push
jo
jle
dec
stos
cmpsb
out
fbld
or
or
test
test
jg
lcall
pop
ret
arpl
sub
pop
jo
xor
and
and
or
pop
out
pop
cmp
dec
aas
jge
std
out
mov
imul
pop
mov
pop
mov
lret
sbb
stos
jle
mov
enter
je
jg,pt
push
test
mov
inc
push
and
in
pop
fwait
dec
xlat
xchg
loop
push
mov
and
push
add
add
in
cmc
adc
and
mov
pushf
add
push
xchg
lahf
add
dec
mov
mov
lds
in
and
jae
xchg
addr16
stos
mov
pop
and
enter
mov
adc
push
js
pop
scas
inc
rcrb
and
in
mov
leave
rorb
subl
inc
lret
push
div
int3
and
xchg
push
hlt
xor
and
sub
repnz
push
outsl
mov
insl
mov
adc
lea
mov
call
add
mov
out
dec
stos
xchg
subb
mov
out
lock
sub
orb
xor
cld
xorl
sbb
inc
fs
scas
movsb
sub
pop
xchg
push
mov
in
int
jmp
sub
push
leave
sub
imul
cmp
mov
outsl
xlat
imul
and
test
dec
and
add
mov
and
insl
mov
xchg
cmp
xchg
loope
mov
push
nop
cmp
rcll
in
iret
dec
icebp
movsb
pop
fidivrs
popf
jns
jns
mov
rorb
mov
and
into
add
inc
test
and
sbb
fmuls
movsb
stos
jge
mov
leave
dec
xor
lret
aaa
loop
jo
cltd
stos
mov
out
popa
pop
cmc
ds
and
popf
cltd
mov
mov
cmp
xchg
sahf
jnp
sbb
and
and
in
dec
inc
mov
and
jle
xchg
mov
aaa
and
and
cmpsb
push
mov
mov
mov
imul
mov
mov
jbe
mov
mov
sub
jg
mov
clc
sub
cld
popf
jle
and
test
das
out
sahf
aaa
and
xchg
aad
xchg
cmp
adc
adc
je
das
sub
out
shlb
sub
mov
push
adc
and
fnstsw
mov
and
fbld
mov
pop
popf
mov
lahf
negb
aas
mov
fcomps
dec
arpl
cmpsb
stos
adc
pop
nop
and
and
xchg
std
xor
mov
imul
lea
mov
sarl
sub
add
loop
sbb
stc
movsb
aad
dec
int3
mov
push
xlat
sbb
and
lahf
fsubs
popa
mov
in
pop
and
loop
ret
push
sti
and
inc
jmp
inc
xchg
sub
bound
fisubs
and
mov
sub
iret
and
out
cld
sbb
push
insb
and
popf
lods
inc
cmp
lahf
notb
inc
mov
in
jno
cs
mov
fs
jno
and
inc
inc
fabs
mov
test
test
mov
daa
ljmp
fwait
mov
cmp
popf
jp
push
ja
insb
stos
xor
addr16
mov
xor
mov
lea
cmpsl
jne
lcall
movsb
sub
adc
add
pop
pusha
scas
sarl
jecxz
fbld
loopne
loop
and
push
and
mov
out
mov
pusha
cmpsb
jae
add
cli
ljmp
jmp
mov
filds
and
lahf
sti
mov
test
rolb
lcall
mov
xchg
inc
sub
or
fcoml
incl
sarb
push
arpl
xchg
and
data16
xlat
mov
aad
fists
outsb
inc
push
jp
fimuls
jb
shr
cmpsb
aad
xchg
movsl
xor
mov
test
and
fwait
icebp
sub
es
fprem1
xchg
dec
mov
and
movsl
dec
lret
mov
jle
pop
sahf
popa
jne
jg
sub
sbb
dec
lods
imul
jecxz
je
cmp
xchg
sbb
xor
es
fistpl
fsubrl
ljmp
idivl
outsb
shl
pop
fidivrs
sarl
xor
out
fidivrl
cmp
dec
loope
mov
cmpsl
and
cwtl
imul
scas
pop
cmp
ret
jg
movsl
mov
push
mull
jl
inc
sbb
xchg
jmp
inc
mov
jb
mov
je
aad
mov
nop
cmp
pop
sbb
loope
arpl
daa
xchg
or
cltd
hlt
and
inc
das
rcrb
cmp
cwtl
push
test
push
adc
lcall
jbe
aad
jmp
mov
jb
hlt
out
insl
test
mov
mov
sub
outsb
insl
movsl
imul
test
and
pop
xchg
cmp
xor
shll
cmp
mov
sub
pop
push
shlb
in
std
and
mov
data16
add
jno
dec
enter
jbe
popa
jge
mov
imul
mov
xorb
cltd
addr16
push
cmp
push
in
movsb
mov
sbb
sub
jae
mov
aas
insl
xlat
and
outsb
sbb
das
sbb
and
fdivs
imul
out
push
xchg
lahf
and
xor
popa
mov
and
icebp
or
inc
push
mov
data16
xor
pop
dec
mov
in
je
cmp
xchg
out
push
repnz
loope
and
sbb
and
jo
pop
pop
shl
addr16
ret
std
jbe
aaa
ds
leave
popa
scas
pop
and
int3
cmp
mov
divps
lock
imul
push
ss
pop
pop
sub
jp
sub
xor
cmp
and
bound
test
sbb
xchg
movsb
xor
xchg
sbb
adc
push
movsl
sbb
inc
dec
sbb
stos
and
in
inc
mov
pop
xor
sbb
or
sbb
fldl
jmp
xchg
sahf
pop
imul
pop
ja
pop
and
mov
stc
test
call
cmp
mov
lods
cs
bound
push
mov
xor
sti
jae
movsb
adc
cs
and
int
scas
xchg
mov
imul
lock
cli
bound
and
sub
jno
lahf
push
and
sarb
jo
push
or
jmp
das
jbe
jecxz
sahf
mov
and
and
orb
sbb
cmc
lcall
and
jmp
push
pop
test
or
and
popa
add
dec
sub
mov
ret
jne
dec
nop
rcrb
scas
pop
loope
xor
and
repz
movsb
lea
push
or
call
out
inc
cmp
lea
lea
jnp
push
adc
cmp
imul
aad
jp
mov
inc
jg
std
lods
cltd
and
aam
pop
sub
xchg
xchg
and
sub
test
cmp
scas
pusha
mov
mov
mov
test
es
movsb
xchg
test
aad
mov
dec
popa
xchg
push
test
aas
sti
ret
dec
je
push
in
and
adcb
mov
and
sbb
scas
or
mov
pop
mov
and
aam
sarl
mov
gs
and
push
cmpsb
mov
lcall
xor
adc
repz
icebp
xor
test
pop
cwtl
ja
mov
lret
test
mov
jmp
fldt
iret
dec
dec
mov
pop
push
std
push
sbb
mov
mov
and
int3
mov
jne
inc
add
pop
xor
cmp
mov
and
or
pop
ljmp
pop
insb
adc
pop
inc
fadd
xchg
out
xor
and
addr16
shll
sub
mov
jno
or
sbb
mov
fld1
sbb
cmpsl
xor
stc
shll
jmp
repz
mov
cmp
cmp
adc
std
shrl
fwait
inc
mov
push
mov
imul
or
cwtl
jno
pop
jne
pop
aas
jae
add
and
adc
popa
and
inc
fisubrl
fs
mov
call
lds
dec
xchg
sub
mov
and
jle
push
fcom
and
in
leave
int3
jae
push
pop
jno
push
sbb
dec
pop
inc
and
rclb
cmc
into
and
movsl
aas
pushw
push
sub
xor
insl
mov
xchg
add
and
cld
jp
cltd
lret
enter
push
mov
and
pop
push
push
mov
adc
fwait
and
mov
test
cmpl
nop
mov
lock
pop
mov
and
ss
inc
add
xchg
or
aaa
dec
and
jle,pt
data16
clc
mov
jb
xchg
mulb
fsubrs
and
push
xor
jb
scas
lods
mov
inc
ja
and
out
mov
sub
es
or
xchg
sbb
pop
dec
cmpsl
and
int3
insl
shll
jno
mov
and
les
add
std
shll
adc
mov
addr16
and
inc
lods
xor
and
push
cmpsl
int
fsubrs
sahf
mov
jbe
cltd
mov
mov
sbb
sbb
lret
mov
in
pushf
repz
and
stc
int
push
mov
test
and
xchg
scas
add
sub
jb
xchg
mov
mov
sbb
popl
push
cmp
dec
add
mov
or
mov
out
js
or
mov
dec
cmpsb
cmp
add
movsl
cld
in
ljmp
mov
das
imul
sahf
scas
addl
popa
out
dec
and
mov
shr
mov
out
and
mov
outsl
jno
insb
jbe
verr
cmp
arpl
dec
jg
and
stc
stos
cmpsb
imul
shlb
add
and
inc
push
fistpll
fwait
push
andb
nop
fs
pop
ffree
rcll
cmpsb
pop
and
inc
mov
and
push
adc
cmc
pusha
test
scas
sbb
pusha
mov
cmp
jne
push
inc
scas
cs
popa
ret
scas
mov
das
sbb
mov
cmp
mov
clc
mov
jmpw
mov
sub
jo
mov
rcr
subl
aam
adc
hlt
and
subl
dec
pushf
movsb
je
add
add
mov
jnp
sub
fistl
and
outsl
roll
sub
cmp
add
clc
pop
mov
fcomip
and
imul
push
jbe
xchg
ljmp
imul
adc
fwait
icebp
ret
push
and
add
push
sub
outsb
daa
out
sub
bound
cmp
das
rolb
out
sub
cwtl
fsubl
notl
andb
jns
mov
and
cmpsb
push
xor
adc
dec
jecxz
neg
movsb
cmp
adc
xchg
mov
and
in
xor
and
pop
adc
xchg
jle
arpl
fbstp
ja
lods
cmpsl
inc
xor
push
repz
sub
xchg
fcoms
rorl
sbb
dec
scas
jge
das
and
in
test
ss
inc
push
or
jg
lods
xchg
and
or
mov
cmp
mov
in
and
scas
push
popf
jne
inc
test
xchg
sbb
jmp
hlt
xor
bound
aas
mov
and
jp
lret
popf
fistpll
mov
subl
dec
movsb
fildll
inc
mov
addr16
inc
lcall
out
push
and
mov
inc
popf
add
movsl
aaa
js
sarl
mov
mov
jmp
movsl
or
or
iret
sbb
xchg
push
xchg
std
mov
xchg
icebp
test
and
jb
scas
ss
aaa
ja
loope
dec
movsb
adc
movsb
push
adc
outsl
xor
imul
mov
pop
mulb
push
cmp
pushf
dec
push
fwait
lods
orl
sub
test
loopne
stos
ss
out
iret
mov
mov
cmp
popa
mov
sti
pushf
pop
and
inc
je
and
out
jge
push
pop
inc
addb
fdecstp
mov
add
lret
popa
inc
stos
cmp
and
std
push
mov
and
out
add
push
push
jo
inc
aam
dec
iret
mov
xor
adc
loopne
mov
dec
lahf
addr16
test
lds
cmp
mov
mov
data16
mov
push
subl
mov
les
jb
xchg
imul
push
mov
mov
xor
je
cmpsb
insl
jge
enter
inc
mov
inc
sbb
mov
scas
testl
cli
and
add
push
mov
dec
xchg
cwtl
aas
popa
popa
adc
push
inc
dec
les
pushl
ja
push
cld
and
sub
int
adc
movsb
test
nop
sar
xchg
xchg
add
push
and
push
and
dec
nop
mov
popa
movsb
imul
movsl
dec
push
lods
movsb
add
and
insb
and
push
xor
and
push
popa
call
movsb
mov
icebp
jns
mov
add
and
lcall
mov
fisubl
gs
xor
sub
and
and
cmp
add
mov
sub
ds
and
icebp
mov
xchg
dec
xchg
mov
loop
inc
mov
and
loopne
les
add
ficomps
xchg
out
push
and
xor
adcl
xor
jl
xor
adcl
and
and
jnp
push
pop
lret
sub
jns
cmp
or
pusha
test
and
int3
pushf
xor
or
cmp
scas
imul
dec
mov
add
sub
pusha
lret
sbb
into
dec
insb
mov
inc
or
dec
push
in
sti
dec
mov
outsl
inc
xchg
adc
cmpl
fstpl
lea
loopne
sbb
mov
in
les
frstor
push
push
test
icebp
nop
jb
hlt
mov
repnz
movhps
loopne
call
add
or
outsl
dec
aas
sbb
pop
cmp
xor
lcall
jecxz
and
xchg
in
repnz
pop
pop
and
mov
xor
and
pop
popa
gs
add
and
dec
mov
and
test
rol
pop
test
xchg
and
sarl
mov
xchg
mov
xlat
leave
jge
adc
mov
bound
sub
and
ret
lock
mov
pop
push
jb
andb
and
or
sub
adc
addl
sub
cwtl
movsb
sbb
test
or
test
pusha
gs
mov
cli
dec
std
andl
in
push
cmp
mov
or
cmc
cltd
aas
adc
and
ss
stc
mov
inc
les
mov
inc
pop
movsb
stc
dec
inc
notb
into
in
and
decl
fcoms
aaa
popf
popf
mov
mov
cmp
pusha
sar
stos
movsb
lret
or
out
stc
inc
lds
out
mov
fs
fidivl
xor
stos
sbb
scas
movsb
cmpsb
call
outsl
lods
jecxz
aas
leave
mov
add
fdivrl
jge
and
xchg
cwtl
divb
and
jne
push
inc
jb
pop
push
and
std
pop
mov
adc
and
xchg
pushf
cmp
mov
mov
out
push
gs
aaa
pop
and
cmp
inc
xchg
into
and
xchg
clc
add
dec
outsb
sub
mov
xor
das
je
pop
orl
push
stc
shll
sub
andl
in
cmp
js
dec
jbe
and
test
and
xchg
dec
clc
inc
aaa
mov
pop
push
jg
fwait
test
pusha
subl
loope
mov
xchg
loop
fstpt
xchg
test
mov
mov
jmp
aam
sbb
push
push
enter
push
jl
inc
sti
sub
pop
and
add
adc
xor
xor
orl
and
je
inc
xor
lcall
pop
imulb
cwtl
and
jp
mov
mov
pop
or
test
pop
and
mov
cld
movsl
push
and
inc
cli
ret
and
mov
lahf
and
cmp
sub
std
subl
push
mov
or
mov
cmpsl
pop
xor
sub
xchg
cli
and
rclb
xchg
adc
cmp
cmpsl
pop
xor
and
pop
and
mov
movsl
fildll
ud2
mov
std
pop
adc
jns
sub
lea
imul
sbb
add
mov
or
mov
call
jg
add
sub
iret
sub
mov
pop
jns
stos
lods
dec
outsl
push
mov
mov
mov
icebp
push
mov
pop
add
inc
push
xchg
cmpsb
and
arpl
xchg
jmp
dec
xor
es
mov
scas
pop
dec
mov
jno
popa
adc
jge
lock
mov
xor
call
push
loope
xchg
mov
pop
cmpb
xor
lea
mov
push
jge
xor
mov
xor
and
mov
rcll
xor
or
pop
jns
dec
in
jp
mov
cmp
sbb
push
adc
scas
pop
xchg
cmp
fcompl
and
fstps
test
dec
pop
and
push
psrad
cmp
neg
sbb
hlt
stos
mov
pop
call
mov
lret
scas
fistpll
popa
imulb
repz
inc
xorl
scas
xchg
jg
jb
cltd
add
movsl
ds
xchg
and
mov
jecxz
pop
cltd
fisubl
dec
sbbl
mov
mov
sbb
xchg
and
or
fcomp
dec
mov
jle
mov
out
mov
lret
and
or
leave
and
popa
dec
xchg
sbb
xchg
loopne
fisubrs
push
cs
in
rorb
mov
or
and
loopne
push
std
xor
lea
sub
dec
and
dec
xchg
mov
and
jno
test
pop
and
xor
jns
call
and
cmp
pop
jns
aaa
inc
les
and
mov
lods
and
pop
xor
inc
in
and
leave
or
push
mull
xor
sub
iret
ficoml
mov
and
add
xor
xor
mov
mov
imul
call
add
inc
and
js
jae
adc
mov
xchg
and
push
cmc
mov
push
dec
into
mov
outsl
lahf
and
rclb
stos
shll
lret
pop
sbb
cmp
push
push
das
mov
add
cltd
dec
lods
fidivrs
mov
cwtl
cmpl
iret
out
mov
mov
mov
or
jmp
flds
and
sahf
lea
popf
and
xor
lods
ret
mov
and
ret
and
mov
rcrb
cld
mov
xor
mov
repz
loope
imul
xchg
int3
out
pop
sbb
test
mov
cmp
sub
insl
jge
xlat
xchg
sub
jp
mov
mov
arpl
and
push
push
inc
xchg
push
push
mov
arpl
out
jae
xor
mov
and
fmuls
shll
mov
jo
push
push
xor
mov
movsb
lock
int3
xchg
push
mov
sbb
sub
and
jmp
and
push
add
inc
xchg
lcall
and
add
mov
push
popf
mov
in
mov
mov
test
imul
push
jle
subb
repz
mov
mov
loopne
fstpl
mov
sub
adc
and
inc
cli
in
mov
adc
cwtl
inc
push
mov
mov
pop
xchg
jne
and
lods
push
enter
dec
xor
push
sbb
xchg
jnp
pop
and
inc
mov
inc
aaa
sub
sahf
sti
and
mov
and
das
push
into
pop
jge
and
inc
mov
and
push
and
xchg
repnz
aad
push
inc
and
cmpsl
mov
xor
and
xor
imul
add
sarl
push
jge
and
xor
pusha
sti
shl
and
mov
shlb
push
loopne
into
xchg
bound
ds
xor
mov
xchg
and
sub
cmp
arpl
and
fldenv
jge
inc
mov
movsl
add
and
ss
xor
aam
ficoms
jbe
push
inc
cwtl
pop
cmpsb
and
and
sub
gs
sbbl
push
and
lret
and
popa
test
and
and
sub
and
jle
mov
and
jae
push
jge
sub
add
test
mov
in
pusha
mov
sbb
pop
addr16
push
loopne
test
loope
mov
repnz
cld
je
and
pop
test
scas
loopne
sbb
andnps
out
xor
pop
dec
and
in
cli
and
std
xchg
out
sbbl
or
add
int
filds
aad
pop
jle
sub
lret
movsbl
mov
lcall
subb
and
xchg
sbb
and
hlt
xchg
xor
rorb
and
inc
xor
mov
shlb
pop
sub
mov
and
inc
mov
and
fdiv
movsl
das
mov
xor
in
fists
and
stos
stos
pop
pop
jo
out
and
sbb
jmp
xchg
je
dec
arpl
imul
xor
test
loop
int
hlt
shll
popf
jmp
mov
shrl
leave
xchg
jns
add
test
add
pop
je
sub
in
jp
pop
and
add
lods
mov
cmpsb
jle
sarl
shll
add
rcrb
push
sbb
xor
jno
out
lods
sarb
mov
popl
mov
xor
cmp
sbb
mov
add
mov
push
mov
sbb
dec
bound
cmc
loopne
inc
add
mov
subl
pop
jnp
negl
mov
movsl
add
dec
aaa
pop
fistpl
movsl
test
in
hlt
jle
loop
pop
int
std
lods
dec
out
adc
movsl
or
enter
sahf
shll
adc
ret
iret
push
mov
aad
jns
add
xor
stos
lds
mov
arpl
and
xchg
jg
test
xor
dec
test
shlb
shll
pop
repnz
xchg
and
scas
jg
mov
mov
inc
shrl
dec
sub
adc
mov
xor
mov
pop
and
ds
rcrb
or
je
pop
push
mov
mov
in
inc
pop
lret
dec
js
xor
ja
popf
add
mov
inc
inc
mov
sub
jbe
and
fbld
mov
fistl
cmp
loop
hlt
addr16
stos
inc
movsb
shrl
mov
les
shl
mov
and
cltd
xor
mov
or
xor
push
out
mov
mov
xchg
iret
mov
stos
mov
popa
inc
push
je
adc
jp
jge
shll
int
test
or
fistpl
mov
pop
sbb
test
adc
in
and
arpl
jo
cs
mov
and
xchg
and
or
xor
adc
adc
and
push
cmp
mov
fs
jno
jecxz
and
fidivrl
inc
mov
pop
movsl
and
je
dec
out
jmp
addb
mov
xor
xchg
add
in
inc
xchg
xor
and
mov
sbb
cmpl
movsb
lret
pop
adc
scas
and
call
cmpsb
fstl
and
push
js
insl
xlat
xchg
mov
mov
push
xchg
dec
push
mov
or
mov
in
and
dec
xchg
dec
jo
jecxz
out
aas
and
les
cmp
or
stos
adcl
popf
and
out
sub
jmp
and
nop
xor
jae
jl
and
xor
pop
loopne
mov
add
xor
xchg
pop
and
dec
mov
cmp
sub
loop
add
mov
dec
arpl
test
movsb
pop
cmp
adc
or
loop
and
les
mov
lcall
ret
dec
xchg
sbbl
xlat
inc
les
push
ljmp
adc
in
sbb
out
mov
test
jmp
mov
hlt
fdivrl
adc
and
ja
repnz
cltd
mov
cmc
dec
dec
adcl
fcmovnbe
fs
inc
sbb
jnp
aas
jns
and
in
nop
orl
ret
add
pop
cltd
int3
das
push
aad
loope
cwtl
lock
sub
in
push
daa
sbb
dec
loop
sub
test
xchg
cmp
and
lea
notl
loopne
ret
cli
mov
jg
icebp
imul
fwait
mov
mov
and
push
xor
movsb
mov
sbb
or
and
leave
call
sub
mov
jge
cmp
xor
dec
and
and
lods
fisubs
xchg
push
mov
or
jne
cltd
arpl
cwtl
mov
push
andl
push
cmpsb
cmp
xor
cmp
pushf
movsb
in
insl
inc
xchg
fiadds
and
mov
lods
mov
xchg
xchg
aam
stos
out
or
cmp
and
scas
add
mov
mov
xor
and
cmp
das
push
add
ret
lret
xor
xor
fbstp
add
test
aam
or
jle
out
pop
mov
jns
loopne
push
and
mov
pop
push
and
sti
jmp
out
xor
dec
pop
shll
fnstcw
lret
mov
loopne
popa
cltd
jns
and
inc
das
insl
pop
sbb
inc
mov
push
mov
fwait
and
scas
add
enter
cmc
sub
arpl
inc
and
out
ljmp
flds
mov
mov
pop
cmp
je
dec
sbb
lock
cmp
xor
add
sbb
push
fdivl
lds
push
and
add
fsubrs
xor
nop
mov
std
movsb
mov
je
fsubrl
enter
lret
jae
push
and
push
movsb
std
repnz
sub
fwait
mov
add
xlat
pusha
lret
mov
sbb
pop
out
inc
scas
push
xchg
pop
aas
rolb
and
rclb
add
fwait
and
call
mov
or
sbb
xor
add
push
clc
popa
fisubs
jmp
xchg
jmp
and
jne
adc
ds
nop
jo
inc
lea
sbb
loope
je
jae
sbb
mov
scas
mov
cmc
and
jl
rclb
ljmp
lahf
add
test
subl
rcrl
sbb
cmp
dec
mov
sub
push
bound
adc
mov
inc
push
jae
movsb
movsl
mov
pushf
xchg
pop
pop
loope
inc
test
pop
das
fidivl
pop
pop
dec
scas
jmp
dec
jns
sub
movsl
test
cmp
add
popf
jecxz
xchg
pop
sbb
xchg
sub
aad
iret
popa
test
mov
icebp
ret
mov
es
js
movsl
rolb
xor
adc
pop
js
insl
pusha
and
xor
stc
sub
test
sub
insl
xchg
ds
and
fcmovb
and
jno
lock
aaa
and
sbb
sub
test
jmp
cltd
mov
jns
dec
test
xchg
push
inc
sbb
mov
scas
push
lahf
imul
inc
pop
cld
sbb
add
xchg
adc
imul
adc
outsl
push
dec
xlat
jo
pop
mov
adc
iret
in
and
mov
push
popa
xchg
fadds
adc
pop
mov
sub
and
inc
adc
pushf
and
add
mov
add
inc
xchg
jl
and
int
cmpsb
dec
or
and
push
mov
sub
and
and
mov
dec
hlt
lret
idivb
and
xchg
lcall
and
fwait
sbb
pop
loop
mov
lcall
sarb
ds
mov
jb
cmp
bound
sbb
and
subb
push
aad
ret
shlb
jle
jb
add
fs
and
test
or
popa
je
push
mov
jno
into
test
and
fidivrl
mov
addr16
cmpsb
mov
mov
mov
push
cmc
cmp
pop
xor
shlb
mul
es
jne
and
iret
out
xchg
pop
ja
and
jbe
loopne
fistpl
xor
sarl
dec
fbstp
mov
cmpb
ret
push
roll
cmp
or
mov
rcrl
cmp
out
and
pop
rcrb
or
push
outsl
adc
mov
std
bound
and
add
aad
sahf
scas
in
hlt
mov
fwait
add
loop
mov
imul
cltd
insl
and
jae
into
mov
or
das
je
inc
fadd
mov
xor
xor
aaa
in
push
mov
jge
test
push
mov
or
sbb
mov
into
push
cmp
and
fldl
and
subb
fs
es
cmp
mov
jo
insl
popa
idiv
lret
mov
pop
mov
adc
jle
mov
and
push
lret
xor
add
inc
cmp
and
inc
out
mov
add
mov
cltd
sbb
and
and
jo
cmc
aad
add
and
xor
insl
arpl
xor
jge
and
sub
pop
lds
dec
fisttps
jns
icebp
and
jp
lock
mov
xchg
and
xor
mov
pop
loop
or
andb
and
adc
cltd
hlt
push
data16
push
dec
scas
mov
push
dec
adc
inc
andl
arpl
repz
cmp
and
mov
out
out
fisubl
xor
lea
mov
bound
mov
and
push
or
out
daa
or
aad
test
mov
cmp
int
inc
or
add
and
adc
adc
jo
adc
outsl
addr16
das
cltd
jmp
push
std
push
cmp
mov
xchg
subl
xchg
movsb
add
gs
ss
sbb
fwait
cmp
adc
hlt
filds
push
jg
test
adc
ds
jle,pn
sub
and
and
es
insl
cmp
pop
imul
ja
popa
int3
js
std
and
sahf
jb
dec
mov
idivl
and
loopne
ret
mulb
fiadds
shrb
shrb
and
popa
sub
sub
cmp
sub
in
cmc
xor
add
and
push
outsb
jecxz
shll
js
popf
jb
addr16
das
dec
xchg
stc
mov
int
xchg
push
sbb
insl
dec
es
and
cs
and
loope
inc
pusha
and
mov
dec
jno
or
cltd
andl
lds
mov
gs
jns
leave
pusha
test
in
pop
and
mov
jg
dec
test
ja
sbb
pop
xchg
mov
and
dec
shl
aas
in
fisttpl
and
sbb
lcall
mov
and
cmpsb
ss
hlt
fimull
xchg
imull
adc
in
jno
and
mov
loop
xchg
inc
jne
out
sahf
sub
jmp
js
fsubl
lods
test
and
jge
adc
js
insb
roll
and
cmp
and
rorl
mov
stc
cmc
out
sub
xor
push
mov
mov
arpl
and
mov
cwtl
xchg
and
cmp
lcall
mov
and
inc
adcl
ficompl
and
push
push
shlb
ja
push
push
jle
push
iret
and
test
add
loopne
cmp
mov
ficoms
jno
xchg
das
xchg
and
xor
cmp
aaa
pop
mov
cmp
in
jae
mov
pop
mov
adc
shrb
jno
pop
mov
rep
cli
popf
daa
add
mov
or
aaa
cmp
push
cltd
das
int3
shll
pop
test
movsb
addr16
xchg
mov
mov
xchg
testl
sbb
mov
and
jp
and
aas
and
mov
push
cmpsl
and
int
pop
inc
sbb
adc
test
mov
call
push
insl
shlb
xlat
jb
in
jns
and
mov
stc
test
ljmp
aaa
cltd
pushf
xchg
movsl
arpl
bound
fmuls
popa
outsb
ja
add
push
and
pop
add
or
mov
repnz
into
xchg
movb
pop
dec
mov
and
dec
sub
fs
cli
popf
inc
jno
push
cmpsl
shll
ljmp
mov
xor
push
pop
jecxz
inc
jp
popa
mov
mov
imulb
cmpb
stos
icebp
dec
cmp
xor
and
inc
pop
daa
push
pop
inc
mov
dec
push
rcrb
int3
icebp
add
xchg
test
add
popf
mov
pop
mov
ror
ffreep
pop
out
maxps
xchg
and
dec
loopne
lret
sub
and
outsb
mov
xsaves
jbe
test
and
inc
cmp
jo
jns
adc
lods
and
out
cltd
and
imul
mov
xchg
pop
insl
cmpsl
jmp
mov
popa
cmp
ds
stos
fbld
mov
mov
shll
cmp
dec
push
pushl
mul
or
cmc
adc
pushf
xor
xchg
and
mov
xchg
jmp
ja
push
cltd
xor
jo
and
das
adcl
ljmp
and
jge
and
dec
test
test
ficomps
xchg
adc
out
aad
cltd
xchg
sub
xchg
fidivs
loop
mov
mov
aam
push
push
test
dec
mov
push
and
gs
sti
jg
push
mov
jno
sbb
and
mov
dec
mov
adc
and
test
or
sbb
pop
mov
or
popf
mov
ficoms
stc
cmp
push
jbe
push
lock
or
inc
ret
cmp
sbb
and
mov
in
aad
popa
orl
shl
ret
mov
int3
int
popa
and
out
dec
les
or
mov
loopne
sub
and
loope
jnp
jecxz
sbb
or
lret
adc
add
mov
and
sub
cmp
iret
push
lock
xchg
jmp
inc
loope
or
pop
mov
shll
nop/reserved
rcr
xchg
jp,pn
aam
frstor
clc
and
pushf
xchg
push
mov
call
xor
idivb
stos
in
sub
aaa
insb
sbb
lret
and
pushf
inc
or
insl
push
scas
and
cs
movsb
cmp
and
popa
hlt
add
into
and
push
imul
popa
xlat
js,pt
cmp
je
test
inc
leave
sbb
jle
fucomi
sub
adc
scas
and
and
jae
mov
sub
sub
jge
movsb
insl
or
jae
sbb
and
in
or
add
push
and
mov
movsb
jb
xchg
add
lahf
dec
pop
and
xchg
lods
inc
jns
push
or
sti
inc
jge
das
sbb
mov
jne
cltd
addb
sbb
and
call
jns
into
sbb
inc
es
das
cmp
jo
cmp
pop
dec
loop
inc
icebp
and
jecxz
inc
and
mov
push
into
and
loope
test
test
and
fistl
test
rcr
xor
mov
cld
sbb
cmc
pusha
mov
in
nop
call
aaa
or
sbb
mov
push
jnp
mov
shlb
in
aas
jl
inc
hlt
popl
sbb
leave
mov
cmp
mov
ffree
sub
and
mov
and
jle
mov
cmp
jns
jb
jns
jo
test
and
aam
push
and
xor
icebp
das
sbb
nop
mov
push
add
add
ret
dec
and
cmp
xchg
cli
sub
fucom
mov
dec
sbb
lcall
mov
cli
leave
jge
jae
mov
jmp
shll
xlat
and
inc
push
xor
notb
mov
pop
daa
adc
ss
xor
shlb
pop
xor
and
add
sti
xchg
dec
and
and
jp
mov
das
arpl
movsb
pop
hlt
lret
cmp
imul
ret
adc
in
out
xor
cwtl
and
outsb
fisttpll
jno
and
call
out
je
ret
push
fiaddl
adc
aam
jne
and
repz
mov
cwtl
mov
lret
push
jge
popa
out
aam
jg
push
dec
std
mov
cs
mov
push
aaa
sub
mov
les
jb
inc
mov
mov
xchg
mov
sub
fisubl
jno
jns
lret
mov
imul
dec
insb
arpl
lea
jmp
mov
js
cmp
mov
cmp
pusha
xchg
inc
subb
icebp
adc
ret
imul
cmp
sub
xor
pushl
sti
andl
cmp
cmpb
ret
cmpsb
pop
stos
pop
std
and
repz
and
mov
jbe
mov
fwait
mov
insb
xchg
cmpsb
ljmp
mov
inc
das
decb
sbbl
filds
and
movsb
stos
and
out
or
loop
adc
scas
popf
out
in
inc
push
aas
and
pop
push
xchg
ret
mov
pop
arpl
imul
and
js
mov
scas
subl
mov
cmc
jl
jne
adc
mov
outsl
jno
or
ljmp
xor
jns
imul
xor
pop
shrb
ret
cs
sub
call
mov
xor
lea
sti
pop
fcmovu
movsb
sbbl
mov
shrb
loope
and
xchg
movsl
cmc
xor
push
nop
or
or
sti
addl
mov
add
aaa
and
popa
inc
xlat
and
and
mov
test
aas
inc
mov
pop
and
test
adc
test
sbb
inc
scas
adc
and
pop
cmpsb
sbb
fsubl
in
and
and
jp
and
int
mov
cmp
and
lods
adc
pushl
popa
enter
movsb
mov
mov
push
xchg
lock
mov
stos
icebp
mov
aam
out
pop
add
mov
loope
and
cmp
mov
push
xor
jle
sub
dec
adc
cmp
stos
cld
movsb
cmpl
popa
popf
fimull
icebp
daa
adcb
test
imul
inc
push
push
scas
out
dec
bound
sti
cmp
cli
dec
xchg
sub
dec
dec
and
lcall
fisubl
aam
xchg
mov
stos
xor
std
push
sbb
cld
in
call
add
sub
jnp
add
xchg
adc
sub
push
xorl
dec
or
sbb
dec
adc
and
cli
fs
aam
mov
sbb
insb
pop
outsb
cmp
xchg
inc
movsb
into
push
outsl
popf
inc
mov
lret
mov
pop
add
pop
mov
mov
mov
cmp
adc
jb
addr16
int
and
and
les
jno
das
mov
repnz
mov
cmp
xchg
ds
adc
sbb
xchg
and
rclb
clc
dec
out
push
and
popa
sbb
mov
adc
push
loope
add
aas
sahf
sbb
insl
jmp
jge
addr16
bound
imul
dec
xchg
xchg
push
int3
add
mov
push
in
lcall
cmpsl
shll
add
lret
adc
jno
stos
and
in
int3
aad
jl
ss
loope
mov
and
cmp
fisubs
mov
mov
daa
fchs
sbb
test
mov
mov
sahf
faddl
insb
push
dec
sub
addb
mov
gs
push
adc
cwtl
cmp
frstor
sub
pop
mov
xlat
sbb
xor
repnz
cld
push
xor
adc
mov
xor
clc
and
jge
push
js
and
lods
out
jmp
mov
pop
jnp
scas
dec
and
or
sub
in
or
mov
push
inc
and
call
in
pop
xchg
jecxz
add
popa
sbb
scas
fidivrs
lcall
out
stos
xchg
sbb
add
cwtl
xor
and
int
cwtl
mov
mov
push
inc
and
push
into
sbb
sub
imul
cwtl
and
push
push
das
and
xchg
jbe
dec
and
enter
sti
inc
in
lea
fwait
ljmp
or
sub
pusha
pop
shr
fisubl
cmpsb
sub
jno
arpl
inc
popa
aam
cli
hlt
and
in
xchg
mov
push
lods
jno
sbb
xchg
jge
mov
imul
mov
cvtps2pd
outsb
xor
lods
and
dec
int3
mov
dec
in
loopne
xlat
outsl
loop
and
inc
stos
dec
and
adc
adc
mov
and
clc
dec
cmp
push
mov
and
cli
fptan
mov
push
pop
mov
jo
xor
lahf
xchg
mov
hlt
dec
aad
push
int
pop
out
pop
sysret
lahf
addr16
fldt
pushl
lods
push
xchg
mov
and
cmpsb
push
lret
repz
aad
mov
add
and
xchg
pop
std
mov
xchg
mov
out
xchg
xchg
lods
lret
mov
shlb
in
mov
xor
jmp
popa
lret
shlb
rorb
add
sbb
mov
jnp
pop
push
inc
sub
pop
mov
mov
inc
loope
pop
push
jmp
mov
fldenv
inc
imul
push
push
push
inc
in
jle
cmp
mov
mov
and
sti
dec
sub
sub
js
xchg
xor
adc
jnp
mov
xor
insl
lds
scas
xchg
andb
test
mov
xchg
rol
and
jl
ljmp
push
sti
push
fmull
and
xchg
and
dec
pop
cwtl
aam
push
add
and
xorb
fisubrs
pop
popa
shll
mov
cmp
xchg
xchg
push
ret
xor
xchg
imul
mov
add
sub
push
shlb
and
in
int
sarb
inc
stos
adc
mov
lods
push
fimull
lds
popa
aam
or
nop
sbb
int3
mov
or
pop
pushf
aaa
fistpll
scas
adc
fnstenv
sbb
mov
cmp
fadds
movsb
and
mov
test
mov
xchg
sub
lods
int
loop
pop
dec
jo
repnz
cld
leave
sub
jg
mov
adc
and
je
sbb
pop
cmpsb
and
lcall
xchg
inc
and
icebp
nopl
int
pop
lods
and
mov
scas
test
iret
and
ljmp
pusha
mov
rorl
sbb
cwtl
sub
movsb
mov
push
xor
xchg
sbb
stos
mov
mov
push
pusha
push
stos
lea
and
test
and
aaa
int3
adc
cwtl
add
push
xor
lods
outsl
js
mov
popa
xchg
or
pop
sub
cmp
and
or
stc
sub
in
sub
and
xchg
adc
and
movsb
in
fwait
shll
pop
mov
pop
cmp
jle
into
mov
and
adc
iret
cld
andl
sbb
cmp
test
jp
mov
and
aaa
fdivs
pop
imul
pop
mov
xor
pop
testl
cmp
lret
jns
xlat
ljmp
or
loop
and
popa
call
in
sbb
and
adc
test
mov
push
mov
pop
and
in
xor
imul
push
fcoml
movsl
xchg
ret
mov
pop
push
rcrb
jb
pop
sbb
movsl
jnp
mov
mov
dec
mov
gs
sbb
data16
xchg
mov
cmpl
mov
mov
imul
cld
push
test
frstor
ret
shrb
lahf
lret
idiv
test
and
push
das
or
fcmovu
and
jo
cmc
popa
test
mov
insl
mov
jae
xchg
and
push
loop
imul
fsubrl
dec
add
sahf
or
loopne
sub
mov
and
sbb
inc
lods
xlat
rcl
es
sarb
out
pop
mov
and
mov
insl
dec
and
rol
movsl
and
cmp
bound
mov
sub
xchg
xor
and
fidivrs
scas
int
or
push
sub
cmc
rolb
inc
stc
mov
mull
sahf
jae
mov
sbb
sub
scas
xorl
cmp
inc
cltd
and
rclb
cli
sub
out
push
jmp
sub
pushf
sub
sub
xor
cmp
jo
and
insb
xchg
pusha
popw
mov
mov
push
mov
rolb
pusha
push
fstpl
aaa
repz
and
lock
xor
mov
xchg
inc
fwait
test
mov
pop
lods
and
scas
loopne
daa
jg
mov
xor
and
pop
aad
cmpsb
sbb
ja
or
mov
add
in
inc
pop
cmc
ret
andl
leave
adc
divl
inc
or
and
pop
flds
leave
rep
and
lds
scas
mov
ret
push
mov
pop
lds
xchg
and
lgs
aam
add
dec
jnp
andb
and
xchg
mov
inc
icebp
test
xchg
and
rcrb
push
test
repz
jecxz
jo
add
pop
insl
add
jbe
sbb
cmp
orl
repz
mov
jno
add
das
ffreep
sub
mov
pop
jge
jo
inc
mov
pop
mov
and
fldenv
stc
pop
and
mov
mov
push
xorb
mov
dec
iret
outsb
iret
and
test
or
fadd
inc
push
scas
icebp
pop
imul
inc
cmp
xchg
int3
mov
sub
xor
imul
fldt
inc
icebp
xorl
mov
mov
in
add
push
adc
bound
mov
and
in
andl
into
push
insb
push
aas
mov
in
xor
loope
and
push
lret
hlt
les
js
and
icebp
or
jb
xchg
mov
popf
loope
cmp
ret
sub
dec
shll
mov
pop
and
push
lods
pop
xor
cmp
adc
ret
xchg
scas
adcl
and
sub
incb
sbb
push
dec
pushf
xlat
fistl
mov
sbb
push
pop
inc
je
loopne
push
sub
leave
sahf
sarl
push
ret
jno
and
push
push
mov
mull
enter
sub
add
mov
ja
push
add
xor
sub
jnp
fcompl
xchg
jge
repz
or
addl
shll
pop
loope
lahf
mov
and
sti
dec
sbb
jns
sahf
and
pushf
dec
mov
cwtl
outsb
stos
pop
movsl
dec
and
movsb
pop
push
mov
and
adc
and
inc
pop
stos
cmp
sbb
and
mov
and
jnp
or
leave
inc
sbb
sbb
ja
mov
ret
mov
aaa
insl
push
xchg
lret
pop
jbe
sbb
and
mov
lods
mov
jle
popa
and
les
dec
movsb
and
aaa
cli
mov
push
sbb
lea
xor
es
sub
and
push
xlat
call
test
cmp
aad
stos
in
sbb
call
mov
mov
pop
es
push
and
repnz
pusha
aas
sub
and
sub
and
sbb
lret
adc
push
fsubr
xor
cmc
and
cmp
movsl
push
sbb
ds
pop
es
sbb
ret
xor
mov
in
push
xchg
adc
shlb
daa
xlat
and
push
aad
and
mov
lret
adcl
lahf
mov
ret
jno
inc
dec
add
mov
aaa
push
pusha
insb
mov
jge
add
outsl
and
xor
mov
lret
pop
mov
push
jg
add
mov
popf
inc
sub
push
or
sbb
pusha
cmpsb
sti
lahf
aas
and
and
ljmp
sbb
fimull
push
mov
test
add
add
adc
cld
xchg
aaa
cmpsb
scas
ja
test
subl
xor
mov
movsb
js
cli
jno
movsb
jnp
and
lods
xchg
bound
cwtl
cmp
cmp
inc
mov
and
fwait
out
mov
pop
push
cmp
fdiv
and
cli
mov
adcb
adc
in
pop
inc
push
popf
rolb
mov
xchg
ficompl
stos
loope
out
popa
insl
jo
repz
pop
sub
add
dec
push
xor
sbb
push
mov
jecxz
bound
popa
push
push
mov
xchg
outsl
out
fisttpll
push
stos
and
test
das
stc
inc
gs
out
dec
inc
and
ds
inc
xor
mov
lock
stc
ret
xchg
lds
popa
cmpsb
adc
inc
dec
mov
pushf
out
in
inc
sbb
and
faddp
or
clc
inc
in
andl
loopne
ja
and
mov
pop
andb
or
jg
jge
imul
jbe
cmp
imul
and
dec
push
imul
iret
xchg
and
jecxz
pop
clc
pop
mov
jne
jns
movsb
pop
cmp
lods
push
push
add
mov
popa
jae
ss
jns
andb
and
push
add
in
or
into
sub
clts
and
in
push
adc
cmpsb
push
or
and
and
or
cmp
push
xor
pop
pop
mov
mov
adc
cmpsb
and
popl
jne
xchg
push
sbb
and
xlat
lods
aad
movsb
xchg
in
cmc
jno
in
adc
jle
mov
sub
arpl
in
stc
outsl
fcomps
loope
lret
lret
xor
ficomps
in
and
jns
cmp
pop
jle
ret
push
ss
popa
insl
pop
aas
clc
aas
rorl
bound
xchg
mov
push
and
adc
cmp
dec
insl
mov
pop
adc
sbb
test
jne
jbe
fs
scas
into
mov
rclb
cmp
dec
les
sbb
mov
loop
aas
push
popa
cwtl
aaa
je
adc
punpcklwd
mov
lea
mov
popa
out
push
jp
push
mov
cmp
sub
popa
sarl
rorl
stos
add
xchg
fidivl
loop
testb
pop
jbe
cmp
in
cwtl
out
test
sarl
jge
xchg
push
cmc
lds
cmp
add
pop
sub
xchg
mov
mov
xchg
lods
mov
mov
sbb
mov
pop
inc
in
insb
stos
push
cmp
in
aaa
add
and
mov
or
fnstsw
pop
mov
add
jae
scas
test
dec
popa
fcomps
ja
popa
or
or
and
mov
loope
mov
lcall
inc
cmp
test
and
cmp
shll
pop
les
and
adc
movsl
test
aas
sbb
mov
in
pop
and
mov
andl
pop
inc
mov
dec
or
pop
mov
stos
sahf
cmp
and
ljmp
stos
test
rorb
mov
inc
stc
cmc
pextrw
mov
cmp
jno
test
movsb
inc
mov
lods
push
mov
lahf
sbb
xor
stos
push
inc
cmp
fcoml
push
outsb
pavgw
cmp
enter
xchg
mov
cmp
std
mov
or
and
jmp
insl
das
fistpll
aaa
add
pop
sti
mov
js
les
and
test
iret
out
lods
dec
sahf
mov
aas
aam
mov
xor
cmpl
mov
pop
and
jo
xor
cmpsb
add
sbb
and
in
stc
les
cs
or
push
jge
pop
int3
mov
mov
mov
cmp
in
mov
add
jg
cmp
lahf
push
mov
push
add
push
insb
std
test
outsb
xor
das
jg
shll
arpl
push
and
addr16
mov
fwait
imul
lods
xchg
and
test
fsubs
fistl
xchg
cwtl
mov
mov
jb
std
cmpsl
pop
add
xchg
movsb
push
mov
push
jnp
rcrb
and
sub
and
mov
adc
shrb
outsb
mov
sbb
mov
arpl
xchg
add
enter
test
stos
imul
loope
and
sbb
dec
add
imul
xchg
jp
and
mov
pop
jle
mov
and
dec
adc
cmp
add
xchg
dec
push
mov
loope
fdivl
pop
inc
lret
es
dec
mov
mov
shr
pop
test
xor
sbb
test
stc
or
in
repnz
mov
and
push
mov
xchg
and
sbb
and
adc
mov
and
pop
and
lcall
sbb
pop
shlb
fisttpll
sub
jmp
push
add
jp
xor
mov
or
push
cmpsb
call
cmp
ficompl
mov
push
dec
mov
and
inc
or
pushf
fwait
int3
dec
in
mov
mov
push
movsb
mov
shll
mov
add
jge
imul
xor
xor
cmp
scas
inc
adc
jge
dec
fbld
arpl
mov
ss
mov
out
and
ljmp
mov
lret
and
sahf
test
or
cmp
mov
and
and
pop
ret
cmp
cmpsl
rorb
mov
jae
lcall
repnz
and
into
cmc
sti
faddl
mov
xchg
mov
xor
fsubs
les
repz
inc
jl
sub
adc
xor
fldenv
inc
and
fwait
add
adc
mov
imul
or
andl
adc
jno
xchg
sub
test
frstor
sbb
push
rcpps
and
jnp
cmp
addr16
test
inc
push
clc
mov
lds
test
mov
pop
jg
and
arpl
and
fisubrl
and
mov
movsl
dec
cmp
push
shlb
inc
xor
test
lahf
jne
push
insl
js
lock
and
lret
and
push
ret
adc
sbb
inc
add
jmp
sbbl
jecxz
les
xchg
pop
jg
and
or
xchg
lods
sti
sub
xchg
add
sub
push
and
outsl
push
inc
pushf
mov
scas
jg
loop
stos
daa
mov
sub
loopne
adc
movsl
xchg
aas
push
cltd
pop
andb
incl
in
adc
inc
popa
sbb
not
fs
sbb
and
inc
push
ljmp
arpl
mov
adc
sub
mov
inc
cld
sub
and
loop
push
scas
pop
cmpsl
inc
les
std
mov
pop
sarl
sbb
xchg
adc
in
cmp
mov
adc
push
add
or
and
jne
pop
std
mov
punpcklwd
dec
mov
inc
or
and
sbb
and
pop
out
popa
fdivrl
lcall
fstps
movsb
pop
mov
dec
xor
mov
insb
loop
inc
mov
inc
inc
movsb
xor
sti
mov
or
and
es
rcr
xor
sub
cmp
lds
xor
addb
loopne
es
pop
pop
xchg
je
push
pop
cmpb
xchg
sub
dec
inc
mov
lret
sti
iret
mov
and
nop
outsl
mov
movsb
test
test
mov
dec
xchg
cmp
in
inc
data16
adc
pop
and
lcall
mov
in
movsl
xchg
sbb
and
pop
jmp
inc
xorb
xchg
jge
std
enter
pop
mov
loopne
popf
xchg
and
mov
and
pusha
cmpl
test
mov
pop
cld
mov
jmp
mov
push
jbe
in
xchg
xlat
lock
adc
mov
stos
sub
shlb
in
jecxz
in
and
pop
mov
int
jge
popf
shrb
jbe
imul
sbb
and
cmp
inc
cmpsl
out
and
pop
setnp
xchg
inc
scas
or
jb
and
mov
jno
and
mov
and
pop
and
pushl
insl
cli
cmp
pop
and
mov
dec
les
ds
and
add
jns
ja
mov
subl
pushl
pop
lods
add
and
and
loopne
in
pop
and
mov
inc
fbld
pop
leave
insl
imul
and
dec
adc
cvtdq2ps
imul
xchg
inc
lret
sub
int
imul
rclb
cli
inc
jns
mov
mov
enter
das
adc
and
pop
out
and
loopne
cmp
dec
nop
and
lods
inc
mov
push
xorl
testb
jb
leave
cltd
adc
cmp
shlb
loopne
jle
cs
fsubl
test
lahf
jge
jg
dec
mov
mov
and
sub
test
push
mov
inc
push
cmpsl
pushf
out
iret
and
es
inc
mov
movl
pop
and
add
and
cmp
add
and
jl
push
scas
in
gs
cmpl
notb
mov
add
pushf
out
or
mov
shll
xor
movsb
add
add
mov
pop
dec
dec
xor
scas
ss
push
and
outsb
or
inc
and
loop
insb
dec
xchg
mov
inc
and
ljmp
push
mull
xchg
pop
aas
xchg
fisubrs
popa
insb
mov
cmp
test
mov
outsl
dec
sbb
and
data16
and
jle
dec
ret
daa
and
dec
xchg
test
test
push
sbb
rcr
je
push
push
out
sub
sbb
cmc
cwtl
scas
aas
shl
adc
stos
mov
jg
cli
mov
and
ret
popl
das
sbb
mov
sahf
lds
and
and
inc
xor
sbb
push
mov
pop
inc
push
xchg
mov
xchg
push
decl
mov
pop
fldenv
in
xor
shll
sub
adc
ja
notb
stos
popa
std
mov
mov
or
fbstp
sub
sub
cmp
lahf
adc
fimull
and
fstpt
sub
or
and
je
shrl
mov
pop
adc
inc
and
add
fwait
and
mov
xor
icebp
sub
inc
jge
ss
pop
jns
or
mov
mull
fsubrp
sbbl
pusha
adc
xchg
nop
and
mov
jle
fisttpl
mov
sub
mov
fadd
jbe
xchg
jp
mov
adc
out
out
adc
pop
mov
pop
and
imul
lods
mov
in
lods
and
ljmp
and
adc
in
lret
test
sbb
gs
cmp
xchg
sub
lea
loopne
jecxz
xor
push
lods
sub
mov
add
xor
jne
push
std
cmp
ljmp
xchg
in
sbb
lods
jmp
imul
lahf
sti
daa
cmp
jnp
shlb
mov
pushf
cmpsl
jge
and
cmp
mov
in
xor
pop
lods
fsubr
loopne
fisttps
dec
mov
and
cmp
xchg
inc
cmp
cld
and
pop
and
pop
and
sbb
repnz
mov
pusha
and
ja
aad
cmp
xor
imul
pop
ja
add
popa
stc
test
lods
lds
push
addl
and
pop
mov
fnstcw
sub
fcompl
mov
or
mov
fsubrl
jne
ret
imull
push
push
lret
cmp
lahf
lcall
sahf
add
jae
leave
jnp
and
fldt
mov
cmp
out
mov
or
addr16
int
loopne
pop
jns
test
out
adc
scas
sbb
movsb
push
in
inc
xchg
rclb
and
insl
loop
stos
mov
and
mov
dec
xor
imul
leave
sub
jae
and
mov
add
sub
or
dec
or
push
adc
stc
sarb
mov
insl
stos
adc
out
sbb
aaa
fcmovnb
xor
ds
xor
pop
cld
add
mov
sti
popf
cmp
inc
and
ljmp
lcall
push
mov
push
pop
stc
gs
mov
push
mov
add
and
in
lcall
dec
test
mov
aas
and
jnp
lahf
add
jl
cs
and
stos
and
dec
xor
insb
add
push
rcll
cmp
aas
push
sbb
movsb
or
mov
pop
dec
rcll
xchg
and
adc
xor
bnd
and
inc
stos
xor
mov
idivl
sahf
fistl
adc
lea
cwtl
and
subl
movsb
mov
rcrb
jno
pop
mov
cmpsl
jg
inc
lods
mov
shrl
sbb
cmp
test
or
rorl
and
add
xor
push
in
mov
push
daa
mov
mov
insb
xor
inc
mov
stc
dec
fwait
loopne
and
aad
fidivl
xchg
and
das
mov
pushf
pusha
sub
mov
and
dec
pop
je
andl
push
jbe
or
cli
add
cmp
sbb
sub
jbe
sahf
daa
pop
xchg
or
xor
aam
dec
bnd
lret
dec
inc
mov
rcll
add
xchg
xor
sbb
insl
in
inc
and
sub
movsb
mov
jl
push
jb
sub
dec
adc
inc
and
pop
loop
cmc
mov
and
or
lahf
mov
shrb
mov
push
and
xchg
push
push
and
add
mov
cmp
scas
or
test
hlt
cld
inc
xchg
push
mov
int
orl
jecxz
stos
push
mov
fisubrl
pop
jo
mov
test
cltd
dec
shll
adc
cs
and
insl
sub
dec
push
xchg
mov
pop
xlat
mov
and
ftst
pop
mov
and
fists
xor
inc
cmp
dec
sbb
push
jg
and
ja
push
mov
es
mov
outsl
std
and
call
imul
pop
cs
xor
jl
and
cmp
mov
jne
lods
aaa
push
leave
loop
dec
cli
and
imul
popa
js
pop
add
jns
fsubrs
and
mov
push
jno
sub
test
xor
popf
xor
std
and
cmp
arpl
push
adc
mov
jno
les
push
mov
jecxz
inc
and
mov
shlb
fiadds
js
idivl
push
pop
or
hlt
xchg
mov
jle
mov
cmp
stc
lea
inc
xor
stos
scas
fsubp
cmp
add
subb
push
aaa
dec
or
xor
jb
push
popf
and
xchg
adc
movsl
int3
fidivs
mov
mov
sub
mov
mov
or
and
call
inc
and
mov
inc
in
and
mov
dec
scas
adcb
cmpsb
or
xchg
stc
and
fisttps
mov
mov
sahf
push
pushf
sub
ljmp
stos
xor
popa
rolb
and
scas
xlat
pop
pop
cmc
pop
and
adc
adc
cmpsl
sbb
out
shlb
loop
pushf
cmp
push
and
pop
orl
xor
xor
xor
in
pop
dec
lods
push
stc
je
les
xor
xchg
mov
push
in
leave
stos
inc
inc
stos
stc
inc
mov
sub
sub
frstor
mov
outsl
jp
mov
out
sbb
into
lds
popa
and
sub
popf
or
movsb
inc
cs
add
pop
xchg
inc
and
jbe
imul
frstor
dec
adc
mov
and
cli
test
mov
push
orl
add
xor
xor
imul
mov
cmp
fistpl
mov
inc
popl
cmp
jge
dec
xor
js
push
in
fisubrs
out
repz
lea
fdivr
inc
and
mov
cmp
jnp
mov
mov
fwait
and
xor
push
daa
cmp
inc
add
and
fmulp
add
xchg
mov
or
lea
xlat
jnp
dec
cmp
xchg
jmp
flds
push
push
mov
enter
xor
xor
in
pushf
repz
mov
and
sahf
imul
mov
sub
jb
mov
mov
cmc
mov
aad
jno
icebp
or
std
mov
imulb
sbb
xor
pop
mov
mov
xor
or
insl
dec
and
test
and
mov
ret
ljmp
inc
jg
lods
lret
jge
jns
jae
mov
sub
xorl
aaa
cmp
adc
dec
pop
pop
pxor
push
imull
and
ret
mov
stc
and
cmp
push
andb
loop
mov
xchg
fnstenv
bound
ret
xlat
pop
sahf
jno
mov
xor
add
push
sub
test
add
adc
lret
mov
stos
or
in
xlat
and
cli
out
mov
mov
loop
sti
sub
jne
popa
arpl
das
mov
movsl
ret
mov
mov
in
and
inc
xor
lods
test
xor
jns
sbb
fwait
add
addr16
xor
lods
lods
hlt
repz
out
mov
in
xor
mov
inc
and
dec
lods
xchg
aam
lds
fs
mov
jbe
sti
popf
xchg
mov
xchg
addl
or
push
testw
enter
mov
mov
sub
test
jns
ds
xchg
pextrw
and
add
dec
test
pop
jne
orl
adc
sarl
mov
and
mov
je
in
pusha
and
dec
aas
ret
repnz
xor
sub
and
aam
and
test
ljmp
xchg
xchg
clc
rorb
cs
movsl
or
xor
mov
lock
cld
or
into
movsb
imul
add
cmp
push
jecxz
mov
jge
mov
sbb
mov
and
test
lds
popf
jb
and
adc
mov
jmp
dec
xchg
ljmp
push
jno
scas
pop
and
in
roll
dec
xor
inc
sub
incl
and
fwait
or
and
xor
je
movsb
mov
dec
jecxz
in
stos
and
clc
stos
jle
xor
push
xorl
and
adc
das
xor
popa
arpl
mov
or
fisubrs
cld
and
test
mov
mov
ljmp
mov
sbb
jb
and
cmpsb
and
aad
fldenv
pop
jmp
dec
mov
cmp
cwtl
jo
insb
out
push
mov
sti
bound
ret
xor
pop
in
sub
inc
hlt
sub
pop
xchg
xor
and
das
inc
mov
sbbl
in
fcom
mov
jno
and
cmp
rorb
pop
push
or
stos
loope
jnp
ficomps
test
insl
aaa
into
push
sub
iret
pop
and
ljmp
inc
adc
out
popf
lds
push
fisttpll
mov
mov
cmp
enter
jecxz
in
leave
and
test
jge
adc
fisubrs
mov
add
mov
repnz
adc
lret
notb
lds
sub
cmpsb
movsb
or
in
mov
xchg
pushf
mov
push
xchg
xchg
sub
and
jno
sti
mov
into
loop
outsb
inc
test
pop
call
neg
dec
mov
and
in
mov
aad
add
test
jns
lcall
mov
push
mov
sbb
call
insb
push
adc
add
fcomps
add
inc
sub
dec
out
push
cmp
call
mov
cmp
fdivrl
loop
aaa
inc
mov
popa
addr16
jecxz
add
or
and
in
xchg
dec
lds
daa
lcall
out
shll
and
cld
nop
in
and
mov
fbld
incl
xchg
mov
in
push
lret
mov
jle
sbb
pushw
test
cwtl
and
cwtl
repz
mov
and
ljmp
and
int
in
lods
mov
mov
popa
mov
jle
sub
mov
movsb
or
insb
rcrb
aas
xchg
repz
lods
sub
movsl
stos
loopne
mov
popa
add
xchg
jnp
lds
movsl
aam
mov
insb
pusha
in
and
repnz
push
insb
ljmp
pop
pusha
mov
add
testl
and
xchg
in
lahf
fbld
sub
outsl
xlat
jecxz
test
xor
inc
mov
and
in
or
pop
fwait
and
push
int3
xchg
and
data16
out
or
and
nop
std
xchg
xlat
fwait
cmp
cmp
mov
pop
das
sub
lahf
mov
jb
cmp
cltd
inc
jl
and
cli
ds
mov
outsl
std
testl
es
sub
jmp
int3
movsb
in
push
push
cmp
mov
sahf
sarl
jge
or
push
sub
add
add
rol
test
pop
or
aas
jns
mov
pop
mov
sbb
add
and
sub
or
fs
dec
cs
mov
movb
xor
push
fists
fld1
icebp
movsl
test
test
jge
mov
std
rclb
filds
ljmp
aam
xchg
stos
sbb
xchg
push
jl
aas
sub
test
push
loope
fwait
dec
ret
insl
mov
and
jg
add
adc
into
push
out
and
aas
and
imul
ljmp
inc
fadd
stos
and
aas
enter
int3
and
imul
loope
mov
inc
mov
lods
xchg
mov
cmp
mov
xchg
movsl
xor
popa
mov
mov
pop
jg
mov
bound
cmp
cmp
jl
add
pusha
in
adc
std
mov
and
lods
mov
push
and
xor
xor
pop
mov
pop
subl
fwait
pop
adc
movsl
arpl
and
and
loop
xlat
iret
mov
and
pusha
xchg
xor
inc
inc
cs
or
outsl
sbb
inc
fistl
xor
popa
pop
cmp
and
ret
cwtl
and
ficomps
push
and
xlat
dec
jge
cmp
inc
jns
sub
mov
xor
cmp
jne
and
jo
mov
fwait
std
xor
or
push
jmp
lods
add
loop
xchg
sub
fdivrs
lcall
and
cli
push
jle
fisubl
mov
outsl
sti
pop
xchg
nop
sbb
cmp
adc
xor
cmp
sub
arpl
outsl
popa
stos
mov
fwait
sbb
fisubs
and
fucompp
jge
push
or
jbe
pop
xchg
fs
mov
jb
lahf
inc
cltd
loopne
shrl
cmp
cmpsb
mov
in
gs
sub
mov
xor
popf
adc
and
cmpsb
push
mov
ss
xor
roll
xchg
in
mov
movsb
nop
push
idivl
icebp
pop
movsb
fisubrl
test
dec
mov
shrl
in
or
sbb
iret
dec
fbld
xor
mov
and
orb
cld
clc
mov
cmp
test
ja
xor
scas
std
into
lahf
and
aad
repnz
mov
mov
or
stos
add
in
sbb
push
xor
and
jnp
shl
int3
test
sbb
push
cmpsb
fdivr
cmpsb
mov
push
and
jno
mov
mov
cmp
cs
and
inc
push
mov
dec
rcrb
and
xor
cmp
sub
cltd
mov
in
push
test
sbb
pop
arpl
xor
jae
and
pop
add
and
stos
inc
sub
sbb
and
xchg
imul
mov
or
and
or
sbb
xchg
mov
cmc
dec
jp
stos
mov
mov
pop
jge
and
out
mov
scas
shlb
pop
dec
jbe
or
add
cmpl
dec
hlt
add
dec
mov
ror
mov
out
jb
test
cmp
and
outsl
pop
cmc
xchg
xchg
scas
mov
aas
xchg
ja
out
and
sbbl
mov
add
in
inc
mov
imul
push
popf
ja
mov
dec
out
push
pop
testl
test
call
add
movaps
subb
lea
sar
je
push
and
popa
xchg
mov
push
xor
mov
aaa
rorl
shlb
xchg
dec
xor
insb
jo
int3
sub
and
rcr
orl
sub
mov
lcall
dec
addr16
cmp
ds
call
and
fs
xchg
mov
pop
inc
push
scas
pop
xchg
hlt
shrl
mov
lods
in
movb
ret
add
sub
pop
fbld
cli
push
leave
inc
int
and
mov
inc
xchg
jmp
aaa
xchg
andl
aas
ljmp
popa
aad
lds
lea
test
mov
sbb
xor
outsb
mov
jo
scas
test
pushf
sbb
inc
pop
dec
and
mov
xchg
into
testb
cmp
pop
and
cmpsb
loopne
jo
ja
sub
inc
into
jmp
jg
jnp
fnstenv
pop
mov
out
nop
and
test
mov
or
pushf
push
inc
stos
shll
xchg
add
xor
fldl
test
lods
push
jmp
pushf
push
inc
cmp
rcrb
movsl
iret
stc
and
addr16
cmp
adc
leave
cs
arpl
std
loop
mov
inc
int3
sub
mov
xchg
fidivrl
iret
xchg
xor
shlb
out
push
movsb
xchg
jns
lcall
push
cmp
orb
inc
mov
icebp
push
stos
cmp
push
popl
jp
cli
mov
jmp
popa
roll
fcomps
orb
and
std
adc
and
das
movsb
or
dec
sahf
and
adc
sbb
xor
cli
and
roll
sub
cmc
sub
xor
mov
lret
push
mov
and
mov
or
pop
in
jae
inc
xor
push
daa
test
and
int3
xor
xchg
push
jbe
push
inc
sarl
mov
and
mov
and
movb
lds
and
inc
push
test
data16
mov
add
in
jmp
ficoms
rcrb
inc
adc
ret
cmpsl
addr16
movsb
and
pop
cmp
inc
and
int3
in
xlat
jno
pop
xchg
and
push
ljmp
xchg
loopne
repz
jge
and
sahf
xchg
aad
mov
test
push
icebp
pop
dec
xchg
jmp
jns
push
xor
shr
pop
popa
pop
jle
inc
ret
mov
lods
lret
leave
and
push
ja
popf
repnz
scas
cmp
and
inc
adc
cwtl
push
pop
mov
mov
sbb
daa
xor
lahf
add
dec
cmp
and
cli
and
or
cli
pop
lcall
xchg
loop
subb
push
loopne
mov
lahf
jns
cltd
in
mov
pop
adc
mov
dec
fwait
add
out
add
pop
cmpsb
pushf
js
jmp
mov
jg
jge
jl
orl
and
sub
and
or
stos
or
dec
add
adc
mov
int3
ljmp
test
sbb
push
cmp
out
pop
stos
add
aas
xorl
mov
pop
inc
stos
dec
xchg
cwtl
jl
cmp
cmpb
sbb
or
and
sub
stos
lods
in
pop
mov
shll
fldenv
cmp
push
jbe
scas
mov
movsb
lahf
mov
ss
insb
cld
cli
and
jg
cmp
les
push
movsb
test
sahf
popf
and
push
or
cmp
xor
mov
scas
cwtl
in
sub
mov
mov
add
movl
and
mov
add
or
popa
jnp
and
lock
adc
pop
pop
and
jne
mov
dec
mov
call
push
mov
adc
push
or
scas
movsb
sti
aam
mov
sbb
sbb
mov
repz
into
xor
movsb
insl
add
adc
hlt
jbe
dec
movsb
mov
mov
sarl
test
icebp
test
fs
xor
mov
lcall
push
add
notb
inc
mov
fsubs
dec
cltd
ficoml
mov
stc
dec
mov
cltd
cmpsl
add
jl
insl
es
and
push
repnz
outsl
adc
lret
cmpl
dec
aas
clc
lods
sub
jg
cmp
cli
sub
mov
aad
lock
xor
push
jnp
sbb
and
rcrb
cs
and
pop
fisttps
cli
imul
shlb
leave
gs
aaa
out
mov
add
mov
test
popa
loop
popl
push
xor
and
stc
mov
insl
sub
mov
cmp
movl
nop
sub
popa
test
cld
daa
test
push
fcomps
sub
out
push
cmp
pop
lahf
pushf
and
mov
addr16
stos
pop
xchg
mov
rorb
ret
in
cmpsb
gs
add
and
neg
inc
push
mov
popa
pop
jmp
rcrl
inc
dec
fdiv
push
pop
cmp
lds
je
aaa
and
mov
mov
iret
push
jp
fsts
and
fistpll
mov
in
or
cmp
cmp
jb
inc
ret
and
in
and
std
xor
or
setb
mov
jp
nop
loope
and
adc
imul
push
pop
f2xm1
mov
iret
cmp
mov
and
in
movsb
xchg
jl
aaa
arpl
pop
and
out
lods
loopne
stos
jecxz
lds
sbb
ljmp
adc
mov
out
lahf
iret
and
stc
mov
movsl
pop
imul
inc
sti
ficoml
and
push
stos
sub
test
mov
fcoms
gs
inc
and
push
sub
pushf
popa
push
pop
xchg
mov
mov
and
repz
and
int
cmpsb
icebp
loopne
and
jns
dec
pop
mov
fisubrs
adc
dec
pop
inc
jge
and
repz
cmp
jbe
and
mov
push
and
pop
notb
mov
mov
push
outsl
jge
and
push
adc
test
out
test
in
repz
mov
and
gs
and
insl
push
scas
hlt
adc
mov
pop
and
jp
imul
pop
cmpsl
inc
push
xor
push
add
dec
into
or
gs
cmp
out
push
in
inc
popa
out
adc
mov
add
push
mov
and
mov
pop
subl
push
ror
in
dec
push
test
pop
sbb
add
mov
pop
in
and
push
mov
mov
lea
sub
in
popf
push
and
jp
push
and
movsb
cld
insb
push
arpl
and
xchg
xor
lcall
jle
mov
jmp
sub
in
inc
and
jg
sub
jne
movsl
scas
jp
repz
cltd
pop
push
cmp
stos
or
inc
and
shlb
testl
fs
adc
xchg
loopne
and
mov
jae
cltd
arpl
and
fwait
push
xor
pop
and
mov
lcall
mov
je
or
xlat
popa
clc
gs
test
hlt
pop
fwait
mov
aam
sbbb
xchg
scas
and
pop
pop
push
pop
inc
mov
and
outsb
push
mov
ret
add
adc
and
scas
mov
test
stos
fidivrl
in
daa
push
or
lea
push
fbstp
sub
out
cmpsl
test
sti
jno
aas
sub
and
gs
adc
ret
fcom
aad
jns
pusha
mov
xor
dec
js
inc
fisubs
cmp
bound
jo
and
cltd
push
cpuid
test
ret
stc
adc
xchg
cli
ljmp
movsb
mov
push
test
adc
dec
lret
pushf
movsl
data16
jg
mov
stos
or
inc
iret
scas
and
pop
sub
mov
ljmp
stos
mov
daa
add
mov
js
lods
enter
xor
dec
cmp
ljmp
mov
ficomps
push
sbb
lods
fsubl
and
and
sahf
in
mov
jmp
sub
clc
mov
inc
jbe
stos
nop
push
sub
fistl
add
sarb
pop
out
mov
jecxz
lahf
xor
and
xor
scas
and
sahf
and
lock
jge
outsb
or
lods
pop
pop
out
mov
push
in
shll
and
stos
ficomps
mov
dec
popa
mov
sbb
movsb
xor
xchg
xchg
mov
fcomps
cmpb
fbld
mov
std
xchg
clc
iret
sbb
sbb
fs
rep
and
mov
lock
fdivrl
test
jb
fisttps
and
sahf
mov
mov
push
dec
jns
scas
and
stc
pop
movsl
sub
pushf
aaa
xor
mov
sbb
fidivrl
lahf
popa
das
pop
in
rol
cmpsb
xorl
ret
push
or
mov
popa
add
fmulp
inc
sbb
movsb
lret
jnp
leave
mov
cmpsl
subl
les
or
fildl
and
loope
jge
adc
sub
test
and
push
cld
rcrb
push
test
xchg
and
pop
aaa
cmp
and
xchg
mov
mov
pop
mov
jge
das
fdivs
es
popa
mov
leave
dec
xor
cmp
shlb
sbb
inc
aas
pushf
les
out
push
inc
hlt
dec
add
stos
addl
add
pop
scas
in
fwait
stc
rcll
and
mov
icebp
fnstcw
push
ficompl
mov
and
and
add
imul
mov
xchg
fsubrs
cli
and
mov
jne
xchg
test
and
push
loope
pop
arpl
andb
mov
mov
push
xchg
jecxz
cmpsb
and
add
bound
repnz
jmp
addb
push
push
pop
mov
int3
cld
in
adc
repz
sub
mov
call
and
or
popa
lods
lret
stos
and
mov
push
jns
and
add
mov
jne
adc
cmp
repnz
mov
pop
sbb
fcomi
out
inc
fnsave
xchg
xor
push
and
push
aad
sbb
int
cmpsb
mov
pusha
movsl
add
adcl
popa
jnp
sub
and
fildll
and
push
aad
and
leave
shrl
and
nop
aas
lret
mov
xchg
and
mov
adc
add
aam
sti
jno
and
add
or
ret
sub
or
popa
sbb
pusha
cli
cmp
mov
mov
xchg
rolb
and
cmp
and
push
mov
bound
imulb
clc
pop
sub
push
outsl
jg
popa
mov
call
inc
gs
xchg
shrl
mov
xor
stos
sub
pop
push
jle
in
aad
mov
pop
push
inc
in
outsl
add
call
push
cs
jne
inc
int3
sti
fcompl
hlt
xchg
repz
rcl
rolb
and
gs
cmp
pop
movsb
ss
and
xchg
add
idivl
fstpt
jecxz
scas
inc
inc
and
adcb
sub
repz
sahf
scas
sti
mov
jne
xchg
push
in
inc
xor
por
pop
cmp
dec
inc
jge
or
mov
inc
jg
lahf
xor
sahf
imull
test
popf
and
adc
and
xchg
adc
mov
sub
sub
movsl
xchg
xor
in
int
and
lcall
xor
pusha
jg
pop
xorb
out
enter
loop
xor
ja
jne
push
cs
pop
and
fisttpl
and
das
in
xor
sub
popa
and
dec
xor
test
jno
and
pop
fists
and
push
jae
cltd
mov
pushf
mov
add
test
mov
xor
xlat
call
push
or
je
jno
jno
icebp
inc
sub
mov
jmp
adc
fsubl
mov
aad
add
addl
std
aad
add
adcl
lods
add
leave
pop
cmc
mov
mov
xor
clc
loope
mov
xor
cmpsb
and
and
push
sahf
popa
int3
in
dec
and
xchg
pusha
fidivrs
subb
xchg
enter
lds
xchg
push
add
in
ss
filds
push
call
push
out
jbe
push
mov
xor
mov
in
hlt
nop
movsl
frstor
ss
dec
sub
pusha
mov
xchg
adc
fnstenv
icebp
insl
inc
lock
and
arpl
jbe
shl
adc
mov
xchg
push
pop
imul
daa
lahf
jno
dec
adc
fdecstp
xchg
lcall
loope
dec
or
adc
popa
dec
adc
cli
and
fidivl
inc
pushf
imul
movsb
icebp
xorl
add
lds
pop
mov
fldl
mull
jns
and
xchg
jnp
in
call
and
xor
mov
lods
out
ftst
mov
cmpl
test
test
and
loopne
inc
ds
or
cli
mov
les
push
rorb
push
cmpl
orb
cli
and
cmp
jno
sbb
dec
and
ja
insl
mov
or
sarl
les
cli
pushf
push
mov
ljmp
andb
xchg
and
cltd
xchg
jp
cmp
and
sub
and
jecxz
mov
dec
add
mov
icebp
or
in
and
in
and
sahf
test
ret
popa
cmp
push
insb
popa
xchg
stos
add
jb
popf
inc
jno
popa
es
add
pusha
out
and
or
aam
mov
outsb
stos
push
and
push
and
xlat
out
pop
js
and
rorb
pop
fiaddl
cmp
into
and
data16
xchg
push
pop
mov
or
cltd
and
sbbl
xchg
push
das
xchg
mov
push
cmp
pushf
pop
or
mov
and
jecxz
push
imul
test
add
push
in
loop
push
in
iret
jns
xor
mov
test
ljmp
mov
fldcw
sbb
add
cmp
mov
popa
push
je
add
cmp
lds
ficomps
and
and
push
rclb
or
decb
mov
lcall
int3
pop
test
adc
cmp
jmp
mov
aad
test
adc
cmp
popa
inc
push
add
inc
and
test
pushf
stc
fists
mov
xor
jp
push
cmpsl
fbld
push
insb
loopne
mov
mov
lcall
movsb
mov
ljmp
dec
test
lgs
and
xchg
lret
test
sbb
movsb
adc
adc
xchg
int3
xlat
jns
push
lds
add
and
int
ss
test
pop
and
jnp
mov
push
loop
mov
outsb
add
ffree
and
mov
das
in
push
inc
inc
cmp
mov
xor
and
gs
cmpl
push
cmp
sub
push
stc
mov
or
mov
cmp
mov
test
cmp
and
enter
lcall
pop
xor
push
cmp
and
inc
jno
hlt
add
lea
fisubl
dec
int
push
or
and
je
das
push
xchg
sbb
mov
xor
in
orb
dec
adc
and
popf
leave
mov
mov
shrl
jne
fcmovnb
movsl
mov
sub
push
xor
xchg
xor
insl
enter
frstor
sbb
push
cwtl
sbb
xchg
push
add
cmpsl
push
lahf
xor
test
rcrb
in
dec
lret
cmc
xor
into
and
add
das
mov
outsl
mov
pop
dec
sbb
test
in
mov
addb
sub
add
pop
in
popa
inc
hlt
dec
sbb
xlat
pop
mov
inc
rcrb
cli
popa
xchg
pop
jmp
aam
inc
stc
mov
frstor
in
xchg
out
aad
and
or
addr16
mov
inc
cwtl
jp
adc
sub
push
jg
pop
or
dec
dec
outsb
iret
sub
cmp
jg
or
adc
push
lcall
cmp
and
decb
sahf
mov
cmp
lret
outsb
adc
sbb
rol
add
lahf
xchg
test
mov
cmp
dec
daa
xchg
and
popl
aad
scas
sub
pop
fsubrl
pushf
sbb
xchg
sub
sahf
xor
inc
shrb
push
xchg
jmp
mov
xchg
dec
daa
xchg
ret
dec
mov
repz
in
fistl
dec
mov
cld
sahf
gs
inc
in
enter
pop
pop
mov
push
inc
clc
dec
cmp
pushf
andb
mov
insb
push
push
cmp
es
mov
imul
pop
sub
push
mov
sbb
and
and
mov
push
xchg
or
push
cmp
mov
jge
imul
out
addl
sahf
xor
enter
nop
out
scas
cld
xchg
xchg
and
push
loope
aam
int
sub
sbb
sbb
add
cmc
push
out
and
into
adc
insb
push
and
xchg
js
leave
movsb
popf
dec
jns
adcl
and
xchg
inc
mov
dec
icebp
or
cltd
mov
dec
jbe
and
sbb
jne,pn
cmc
and
jmp
imul
and
test
test
jge
and
xorb
imul
sbb
shll
in
and
insb
dec
cmp
loop
rolb
xor
mov
dec
fld
and
sub
add
imul
cld
call
cmpsb
mov
jae
popa
cmp
mov
jmp
inc
pop
push
dec
notb
shlb
mov
and
adc
push
bound
rorb
fwait
andl
xor
pop
mov
mov
sub
inc
sbb
comiss
jo
xor
cmp
inc
into
mov
aam
lds
arpl
scas
mov
mov
jge
push
std
addr16
inc
mov
pop
or
inc
push
cvtps2pi
add
shll
and
stc
add
loopne
dec
xchg
jbe
push
cmp
jmp
xchg
dec
mov
xor
pop
loopne
stc
dec
mov
lret
and
xor
or
rcrl
xlat
lahf
les
popa
ret
dec
and
push
or
mov
fcoms
icebp
fsubl
fisubl
mov
jne
and
cmc
add
and
sbb
cmpsb
fucomip
mov
es
inc
jne
int
jbe
mov
push
rol
lea
pop
fidivl
mov
scas
arpl
sbb
outsb
int
cld
dec
and
xor
scas
icebp
cmp
and
sti
loopne
ljmp
pop
scas
and
xchg
pop
aaa
call
movsb
ret
pop
fisttpl
or
frstor
adc
imul
and
and
mov
mov
mov
xchg
repz
sar
movsb
test
cmp
xor
and
xor
xchg
cmp
cmp
inc
jp
add
mov
mov
inc
ja
mov
add
mov
sub
adc
adc
or
xlat
and
hlt
mov
jne
insb
ret
loopne
dec
cmpsl
pop
add
pop
test
into
lods
in
pop
pop
and
sbb
std
xchg
test
movsl
add
ja
mov
mov
les
pop
or
and
cmc
mov
xchg
je
and
xchg
and
fwait
adc
mov
jl
sbb
in
and
push
inc
js
jns
or
xchg
hlt
in
fsubl
sti
jmp
mov
fucomi
std
pop
adc
sbb
ss
and
jecxz
add
inc
in
icebp
insb
popa
loopne
xchg
jmp
adcl
jae
out
into
mov
cmp
cmp
pushf
sahf
sub
imul
push
jg
sub
push
hlt
fcomps
pop
cs
mov
jecxz
fldt
fnstsw
and
ss
dec
std
mov
jne
add
sub
and
and
imul
cmpsb
lods
in
pop
lahf
xchg
pop
imul
iret
and
fisttpl
mov
popf
js
test
sbb
loopne
dec
sarb
adc
xor
push
sbb
sahf
xor
push
or
popa
mov
inc
sub
sub
pop
iret
xor
push
daa
cmp
imul
test
imul
out
dec
movsb
or
imul
sbb
adc
and
mov
aaa
aas
push
mov
jne
and
outsb
loopne
cmpsb
je
mov
pop
pop
aas
popa
dec
lcall
xor
inc
movsb
mov
mov
aas
outsb
push
dec
or
and
xor
pop
push
movsb
loop
movsl
das
dec
push
bound
movsb
add
lahf
lods
test
xchg
pop
dec
pusha
aaa
jecxz
mov
fwait
aad
les
and
popf
nop
xchg
push
pop
lods
and
mov
dec
pop
cmp
cvttps2pi
or
cmp
test
and
xor
jo
lea
sbb
push
jmp
adc
movsl
or
mov
mov
mov
push
mov
xchg
push
or
adc
fwait
lret
push
insb
mov
push
sub
daa
aas
hlt
dec
dec
jae
and
xchg
fs
test
push
cwtl
add
pop
in
mulb
or
enter
push
mov
ret
mov
cmp
popa
fwait
add
dec
scas
orl
mov
bound
jg
jmp
jmp
insb
add
mov
aad
xchg
fldcw
push
mov
scas
ret
or
or
jae
cld
and
je
fcomps
popa
ds
xor
xor
push
dec
fsub
pop
and
jp
pop
jae
and
sub
rcrl
notl
clc
lock
fwait
push
mov
mov
icebp
xor
dec
or
xor
mov
add
push
xor
pusha
repnz
mov
add
outsl
push
lret
cli
lahf
add
fwait
jmp
add
jecxz
sbb
mov
leave
push
fldcw
push
add
insl
add
lahf
popf
adc
fmull
lock
xchg
popf
xor
or
mov
in
sbb
pop
jbe
popf
mov
push
jl
sbb
icebp
sti
sbb
push
push
adc
sub
xor
xor
scas
jne
xchg
pop
and
adcl
mov
or
jb
call
sub
insb
std
push
test
mov
pop
ret
sbb
leave
call
in
gs
mov
cs
adc
dec
loopne
dec
mov
xchg
movsl
jb
pop
das
call
iret
or
shrb
and
data16
mov
xchg
push
pop
adc
inc
mov
adc
out
cwtl
insl
mov
xor
aas
test
mov
stos
pop
add
or
xchg
cld
mov
ficomps
in
aas
fbstp
cmp
and
sbb
sub
and
push
mov
mov
xchg
lods
pop
jp
xchg
adc
mov
adc
popf
int3
mulb
pop
inc
std
cmp
sbb
and
xorb
rorb
call
and
popf
in
lret
sahf
and
ss
scas
and
pop
xchg
xchg
add
aas
shrb
outsl
dec
jmp
lahf
sbb
enter
loop
inc
xchg
add
lea
in
bswap
out
clc
and
push
xlat
sub
and
and
jo
rcll
int3
test
and
popa
xor
frstors
dec
jge
lret
jb
lea
and
sti
test
cwtl
pop
lods
cli
stc
lea
popa
fildll
pop
addr16
push
mov
and
and
xchg
xchg
sti
aaa
adc
mov
sbb
fstl
and
outsb
pop
scas
sbb
jle
sub
ljmp
test
fdivp
movsb
loope
jae
jle
pop
and
arpl
clc
sub
xor
add
es
mov
ljmp
inc
jp
dec
fistpll
popa
leave
mov
les
mov
cmp
stc
mov
popa
dec
cmp
cmp
or
repnz
cmp
or
hlt
push
and
jbe
mov
dec
mov
daa
scas
and
inc
jp,pn
lea
jbe
or
mov
mov
fs
das
and
mov
or
pop
inc
xchg
jae
push
jmp
jnp
jo
mov
jge
popf
pop
inc
sbb
imul
cmp
imul
cmpsb
mov
insl
pop
jmp
in
std
movsl
inc
sub
and
or
and
and
xchg
dec
pusha
mov
push
mul
and
fsubrl
call
and
je
xchg
cltd
jne
and
jp
mov
xchg
fidivrl
mov
mov
test
jl
popa
sub
adc
xor
adc
xor
fsubs
xchg
shll
hlt
and
mov
outsb
xchg
push
lahf
in
push
sahf
add
or
xor
int3
xor
or
popa
test
fwait
ja
xor
cmp
and
sbbb
fsubrl
pop
sbb
xor
sub
mov
jno
jle
lds
xchg
xor
notl
mov
push
push
push
jge
jle
xchg
cmp
nop
mov
sbbb
ja
mull
test
xchg
lods
adc
mov
das
pop
mov
data16
push
jo
add
adc
and
jne
mov
lds
mov
in
or
mov
cmpsb
movl
imul
fsubs
rcl
movsb
sbb
je
and
xchg
movsl
jae
cwtl
jnp
and
mov
cld
cmp
and
les
scas
add
daa
sub
and
fsts
mov
iret
mov
xchg
dec
xor
cs
and
cmpsl
pop
mov
jecxz
fiaddl
add
pop
sub
xlat
jnp
fwait
adc
and
mov
cmpsl
repnz
push
movsb
jp
stos
xor
adc
pop
repz
cwtl
or
jl
call
mov
cmp
push
cld
sbb
xchg
aad
xchg
into
mov
mov
pushw
dec
cli
push
mov
cs
and
jge
add
pop
jno
and
xchg
insb
cld
int
mov
jl
lcall
sbb
xchg
sub
and
jae
pop
xor
insl
insb
imul
and
jne
les
sahf
mov
int3
jecxz
inc
ds
adc
stos
xchg
or
and
jge
sbb
fldenv
and
stc
call
mov
and
in
add
test
dec
popa
mov
stc
out
mov
or
sbb
and
xchg
sub
je
mov
xorb
popa
lods
mov
movsb
cmpsl
shrl
push
lea
cwtl
lahf
cmp
sar
cmpl
popa
outsb
das
pop
jecxz
js
xchg
push
mov
push
pop
xchg
addl
sbb
sahf
leave
pop
out
jbe
lea
ret
in
adcb
sbb
and
or
js
rcr
testb
jge
gs
aad
sub
adc
or
push
lods
cmp
fisttpl
je
mov
and
adc
and
movsb
cmp
pop
roll
push
dec
pop
xchg
hlt
stos
movsb
sbb
jo
jns
xchg
adc
sbb
push
test
cmp
movl
dec
adc
pop
pushf
and
cli
idivb
and
xchg
cwtl
jge
xor
sub
sbb
leave
push
pop
pusha
and
mov
push
iret
fisubs
and
sbb
sbb
sbb
andb
sub
pop
orl
and
mov
mov
pop
jns
cltd
and
cmp
jbe
mov
hlt
adc
mov
and
fnstcw
scas
and
pushf
dec
dec
lock
aaa
movsb
lahf
fs
fimuls
push
push
or
mov
cld
push
cmpsl
nop
popa
imul
adc
idiv
sub
xor
pop
hlt
xchg
clc
test
push
lcall
mov
lds
es
stos
and
sti
nop
mov
cmpb
idivl
xchg
dec
movsb
lea
push
push
orb
inc
add
add
popa
je
mov
dec
mov
inc
jge
and
jmp
arpl
or
push
in
mov
cmc
or
and
insl
pop
in
sbb
push
pushf
test
fistpl
mov
adc
pop
add
adc
mov
imul
adc
and
sahf
insb
xchg
sbb
data16
cmp
jo
pop
mov
shrl
hlt
out
pushf
lea
insb
and
sub
push
and
lret
xchg
xchg
iret
and
mov
decl
cmp
mov
jae
test
mov
hlt
mov
jge
mov
adc
sbbb
int
fbld
mov
int3
push
sbb
add
fidivrs
movsb
mov
jne
push
ret
lods
lods
movsl
cmc
xchg
sbb
xchg
mov
fsubl
xchg
test
lods
and
movsb
mov
sbb
fdivr
repnz
and
sbb
lcallw
push
fldcw
push
daa
xchg
xorb
mov
inc
sbb
sub
mov
sub
out
orl
and
pop
and
xchg
rorb
jecxz
inc
andl
dec
push
xchg
add
sbb
cmp
cltd
subb
pop
inc
push
mov
or
and
mov
sarl
test
pop
xchg
and
ds
adc
subl
dec
adc
and
loope
rcr
xchg
rcll
pop
aad
sbb
mov
hlt
jns
mov
pop
movsb
cmp
xchg
test
cltd
add
xor
and
leave
loope
mov
popa
jbe
push
call
push
push
cs
or
scas
jg
sub
popa
xchg
scas
push
cwtl
xorl
popa
or
jnp
and
in
loop
fsubl
push
test
inc
sbb
add
out
xchg
lock
out
jp
lret
xor
mov
and
cltd
out
pop
sarb
dec
inc
mov
dec
and
push
pop
sub
ds
and
rolb
ds
adc
mov
xor
test
and
mov
fcoms
jl
in
lahf
fwait
add
dec
pop
cmc
and
out
inc
rorl
sbb
xor
rolb
ret
xor
outsl
jge
loope
push
push
into
and
and
and
lahf
jl
jnp
imul
or
sub
andl
jo
imul
sarb
add
sbb
faddp
cmp
inc
lds
inc
and
mov
repz
lcall
mov
sbb
pop
prefetch
or
jecxz
into
shlb
loop
testb
cmp
lret
jbe
push
adc
xchg
sub
std
outsb
inc
and
roll
and
imul
scas
or
test
or
fnstcw
fnsave
inc
and
cwtl
lods
outsb
push
cmp
and
cltd
insl
aam
in
loopne
and
xor
pop
es
inc
mov
or
lahf
das
dec
sbb
add
insl
sarl
push
pushf
jae
inc
jns
and
add
cld
es
pop
and
xor
and
mov
jmp
jp
sub
inc
and
mov
pop
sub
mov
inc
testl
pop
rcrb
stos
icebp
push
cs
sub
leave
mov
push
sub
scas
pop
lods
inc
cmp
ss
loope
test
mov
sub
and
xor
cmp
loop
outsb
pop
arpl
stos
and
mov
mov
cmpsb
dec
and
and
xor
xor
das
in
in
enter
and
mov
in
outsl
insl
and
and
pop
stos
mov
cmpsl
andl
pop
jmp
dec
testl
std
cmp
xchg
and
and
in
int3
in
jns
sbb
sarl
ret
dec
sub
adc
sub
add
xchg
loop
jo
decb
and
leave
mov
fnstsw
mov
sub
xlat
ds
mov
xor
movsb
and
stos
and
popa
je
pop
cld
or
sub
pop
mov
lock
enter
add
mov
and
not
pusha
xchg
mov
and
fistps
popa
aaa
iret
dec
xor
out
xlat
ljmp
and
es
adc
cmpsl
out
movsb
mul
mov
mov
lods
xor
popa
movsl
dec
push
jmp
push
xor
sbb
pop
popf
daa
xor
subb
out
sbb
arpl
xor
jmp
test
shlb
inc
cmp
je
scas
sbbb
xchg
aam
mov
and
pop
xorb
mov
cld
pop
jno
decb
jo
mov
incl
and
cmp
and
xchg
fdivrs
pop
mov
addl
and
in
rcll
mov
fsubp
xor
inc
ja
cmp
mov
fidivrl
and
or
jae
pop
xchg
and
pop
and
push
lods
je
cmp
jb
jae
pop
pop
xchg
adc
andb
dec
xor
mov
push
adc
test
and
insl
pop
and
inc
ss
shlb
mov
jmp
aas
and
ds
scas
and
nop
adc
andl
inc
stc
sub
int3
nop
push
adc
xor
ds
popa
leave
or
and
and
mov
mov
jge
in
mov
insb
push
rorl
push
mov
pop
pusha
clc
outsb
push
and
aad
pop
jg
add
mov
inc
shll
mov
sub
mov
sbb
push
adc
mov
in
and
loopne
test
es
jnp
lds
sahf
sbb
and
or
sub
sbb
out
fbld
sahf
and
push
push
inc
nopl
clc
lret
cmpsb
pop
cmpsl
jns
andb
js
or
cmpsl
cmpb
cltd
int
and
fidivl
jl
loopne
mov
cli
out
and
pop
inc
fcmovu
xlat
mov
pusha
cmp
cwtl
jno
inc
loopne
popf
and
push
mov
xchg
xchg
mov
and
dec
jecxz
lahf
ficomps
hlt
inc
cmp
das
xor
inc
les
mov
test
imul
xor
mov
push
jge
and
jbe
xchg
sbb
pop
nop
scas
inc
popa
and
mov
adc
and
popf
or
enter
pop
and
sub
mov
out
cmp
shrl
stos
pop
aad
ficomps
addr16
mov
jns
sub
pop
movsl
push
mov
punpcklwd
xor
arpl
and
sub
mov
cmp
xchg
loop
mov
jns
sahf
jno
and
push
dec
or
xchg
testl
dec
test
sub
fcmove
add
xor
pop
and
leave
mov
dec
sub
and
jge
popf
lret
push
out
push
jg
mov
cmpl
shrl
data16
stc
dec
out
and
inc
mov
lahf
push
cli
movsl
out
shrl
sarw
std
and
xor
jecxz
repz
fcomps
clc
push
sbb
out
and
ljmp
into
in
pop
cmp
inc
je
jg
bound
inc
loope
mov
and
cld
cmp
add
out
and
push
jp
idiv
rcrl
lods
bound
sbb
cmp
popl
or
fsubl
idivl
mov
stos
mov
popf
pop
test
scas
rcrl
cs
aaa
pusha
sbb
ret
fldl
dec
mov
mov
and
repz
scas
push
sbb
mov
and
xor
fists
push
xorl
das
push
lahf
into
jns
cmp
dec
xchg
test
and
aam
or
mov
xchg
mov
inc
pusha
adc
in
insl
xchg
test
and
ja
cmpsl
mov
sub
mov
stc
add
shr
or
jno
arpl
ds
dec
lock
or
mov
sub
sub
call
cmp
cmp
and
fimuls
mov
imul
daa
mov
sbb
and
es
mov
imul
mov
sub
and
pop
cli
mov
lods
jo
les
xchg
jb
pop
andb
mov
add
fsts
out
xor
mov
and
cmpsl
and
xchg
int
and
in
fistpll
cli
aad
sub
inc
sti
sbb
cmp
or
sbb
xor
push
lcall
imul
lahf
fisttpl
and
aaa
pop
dec
jnp
mov
movsb
mov
mov
inc
add
add
pop
and
stos
push
aam
adc
and
fdivrl
mov
cli
inc
inc
sbb
fistpl
test
loopne
jo
nop
push
push
movsl
xor
int3
popa
fldt
or
lret
mov
mov
mov
leave
int
lahf
pop
mov
and
pop
ret
and
mov
sbb
and
inc
sub
jne
mov
and
push
inc
or
mov
test
repnz
or
mov
movsb
xchg
xor
pop
sub
les
and
and
ret
jns
adc
test
dec
jno
mov
mov
mov
fs
sub
mov
stos
sarb
xor
int
add
rcr
and
and
je
imul
inc
rorl
cmp
and
test
cld
inc
mov
xor
shll
jb
popa
sbb
mov
cs
adc
mov
loop
dec
shlb
lret
jbe
and
dec
cmpsb
or
add
or
inc
inc
ret
cmp
popf
gs
add
cs
and
repnz
das
mov
test
jno
mov
sub
nop
adc
add
ljmp
jl
mov
ds
cs
jns
inc
inc
dec
das
cltd
mov
xor
out
and
out
and
cmp
nop
mov
call
daa
notb
sti
movsl
popf
aaa
push
xor
push
mov
cli
lock
push
fiadds
inc
stc
fidivl
packuswb
stos
and
jg
xchg
in
stos
movsb
mov
dec
leave
subb
and
mov
xchg
aas
or
adc
cmp
jecxz
sbb
into
cli
and
xor
push
jmp
sahf
mov
sub
icebp
xor
and
xchg
push
jmp
mov
xchg
and
and
test
and
or
cmpb
fisttpl
adc
scas
ss
dec
and
mov
jnp
test
in
inc
xchg
movsb
jg
cltd
pushf
pop
out
and
lods
dec
xor
mov
jl
pop
cmp
sbb
mov
xchg
mov
pop
and
out
mov
shlb
pop
jbe
pop
into
xchg
mov
adc
sbb
push
and
das
imul
xor
push
and
out
ret
and
jnp
repnz
js
mov
add
pand
stc
icebp
sub
outsl
sbb
cmp
push
insl
ficoml
test
add
aam
xchg
and
lahf
push
out
dec
pop
bound
lahf
and
add
call
pop
ljmp
and
fmuls
add
mov
cmp
xchg
pop
inc
aad
test
insb
frstor
in
out
and
ret
pusha
cmp
shll
inc
mov
jo
mov
cmp
daa
jnp
jne
xchg
ret
movsl
and
out
outsb
xchg
pushf
mov
je
imul
imul
scas
loope
pop
pushw
push
xchg
and
sub
fnsave
mov
xchg
xlat
movsb
or
inc
mov
dec
cmp
xor
jge
dec
mov
mov
mov
xchg
jmp
movsb
xor
and
mov
adc
and
and
sbb
scas
or
push
fisubrl
ljmp
adc
orl
pop
cld
mov
ja
lret
shlb
and
xchg
movsl
jl
and
out
jecxz
push
out
movsl
fistl
cmp
popa
dec
jle
das
arpl
ja
sbb
test
dec
scas
inc
push
lods
ds
pusha
add
xchg
arpl
inc
and
cmp
push
cmp
and
addr16
aaa
jmp
movl
cmpsl
pop
repz
dec
xchg
andb
jno
xor
xor
ret
jecxz
cmp
lock
inc
popa
jo
movsl
je
ljmp
inc
cmpb
and
pxor
rorb
and
sbb
mov
cmp
stos
cmp
pop
aas
ja
mov
call
and
aas
lahf
test
mov
scas
andl
mov
xchg
out
xchg
mov
fistl
sub
add
adc
add
pop
insl
rclb
or
jnp
cmp
mov
ljmp
sti
out
xchg
and
xchg
js
dec
mov
dec
call
rclb
xchg
and
mov
mov
seto
xchg
ret
sub
adc
jb
sub
pop
jns
inc
dec
outsl
push
aas
pusha
dec
addr16
mov
mov
adc
mov
adcl
xchg
pop
inc
sbb
push
mov
fistpl
fwait
push
scas
js
leave
test
lcall
and
out
adc
adc
mov
cmpsl
lods
mov
out
jecxz
xchg
jno
jge
outsl
mov
push
push
out
cmp
lock
xor
push
jns
cmp
and
cltd
push
in
test
lcall
sbb
cmpsb
fisubrl
and
xchg
pop
fisubs
jno
sbb
xchg
imul
inc
and
and
xchg
jl
pop
test
fs
adc
mov
xchg
and
xchg
push
fiaddl
cmpsb
jge
xor
test
mov
in
adc
push
rcrb
jno
cwtl
fisttps
lcall
mov
aas
fs
out
mov
mov
dec
cwtl
dec
pusha
mov
ret
pop
cmp
mov
pop
cmp
and
and
js
jp
clc
sarb
and
add
inc
lahf
leave
mov
aas
loop
mov
loope
cmp
xor
jmp
outsb
sbb
test
and
popf
xchg
dec
inc
xchg
mov
and
mov
mov
clc
ljmp
cld
arpl
imul
xchg
or
sub
out
add
aaa
push
push
push
cmp
movsl
pushl
jl
jbe
cmp
lods
cli
push
hlt
inc
les
xchg
jecxz
gs
or
mov
popa
mov
repnz
mov
shlb
int
sbb
pop
fistps
xor
and
cmp
rcrl
and
and
xor
idiv
jbe
sub
jo
enter
xor
imul
sub
daa
leave
es
push
mov
mov
movsb
sbb
popa
shl
and
mull
shlb
ljmp
jmp
ret
xchg
fsubl
jns
adc
in
ss
sbb
add
push
scas
fsubl
sub
shlb
fisubs
or
mov
push
bound
and
lcall
inc
sbb
sahf
jns
or
pusha
xlat
in
orl
mov
jno
xchg
and
jo
aad
leave
aam
test
in
pop
jae
aaa
popa
and
jecxz
icebp
mov
dec
call
fs
fmulp
cmc
cmpsl
popa
pop
or
and
adc
ljmp
movsb
push
mov
push
and
repnz
and
fmul
and
pop
and
and
and
shrl
jbe
mov
and
je
loop,pt
loope
and
fildll
shlb
out
sti
addr16
lea
jns
invd
or
inc
and
pop
xchg
popf
pop
mov
std
in
fdivs
xor
xchg
cs
jg
cmpl
in
and
enter
pop
adcl
cmpsb
jg
orb
push
insb
and
and
dec
lret
cmpsl
lcall
mov
das
movsb
xor
jns
mov
je
es
xorl
cld
stos
and
mov
and
lret
cmp
and
leave
mov
pop
bound
popf
xchg
fimull
inc
ss
pop
arpl
mov
shlb
and
xchg
fisttps
ss
lea
pusha
test
add
push
movl
leave
pop
xor
and
sub
adc
cld
and
and
xchg
mov
push
cmpsb
int3
icebp
add
pop
cwtl
and
pop
ja
mov
xchg
sbb
jmp
mov
daa
push
cmp
adc
ror
hlt
dec
mov
movsb
sub
inc
movsl
jno
scas
cmp
lds
movsb
mov
fs
inc
fsubs
or
fdivrl
mov
mulb
enter
hlt
and
xor
fiadds
mov
push
pop
adcl
das
and
nop
rcl
imul
fwait
sub
rol
mov
in
sbb
mov
inc
aas
add
ljmp
nop
lock
mov
scas
setno
inc
and
std
ds
and
gs
movsb
jnp
push
sub
jne
mov
or
in
push
cmpsb
xchg
mov
jbe
push
cmp
push
sbb
pop
jnp
push
cmp
in
incl
mov
das
shll
adc
jns
cmpsb
pushf
lods
pop
xor
ljmp
inc
push
push
fldenv
push
jo
cmpsl
scas
add
pushf
pop
and
scas
and
sub
pop
jnp
daa
and
pop
adcl
jno
xchg
jno
dec
mov
mov
bnd
and
ret
xchg
in
faddp
fcmovnbe
and
loop
jns
push
xlat
lods
and
mov
stos
push
cli
sub
mov
cmp
jbe
cmp
popa
shr
mov
cmpsl
add
das
sti
leave
lahf
test
mov
mov
mov
xor
out
mov
cmp
add
and
and
jg
lds
add
pop
jl
and
fwait
push
fldenv
add
enter
inc
bound
add
ficoml
cs
insb
in
and
lret
in
shlb
fildll
aam
mov
mulb
test
xor
sahf
and
and
in
jb
stos
add
mov
repz
dec
icebp
out
dec
ljmp
mov
mov
xchg
montmul
cmpsb
add
mov
lahf
jb
xor
lahf
js
enter
xor
pop
inc
and
push
sbbb
push
movsb
dec
in
insb
cs
movsb
mov
stc
cmpsl
xor
popf
dec
sahf
and
jnp
fsubl
pop
fnstsw
fsubs
je
bound
repz
fstps
and
dec
aas
xchg
test
dec
icebp
mov
jle
and
mov
add
and
std
mov
cmc
dec
popf
movsb
jge
in
sbb
push
xchg
sbb
and
outsb
out
inc
and
cmpsl
push
hlt
imul
inc
rcll
fdivrp
jp
fwait
and
mov
imul
and
test
xor
repnz
cmp
xor
jmp
pop
dec
shll
mov
xchg
or
and
lret
call
lahf
cmc
jl
aam
or
mul
lds
and
insl
inc
rcrl
cmp
and
push
add
mov
fdivl
jno
pushf
lods
fsubrs
push
int
mov
mov
jns
in
cmp
bound
push
gs
ret
shr
fists
nop
mov
loopne
repnz
push
jmp
adc
mov
or
mov
and
cmp
pushf
mov
add
jae
xor
subl
and
sahf
xchg
and
in
jp
ds
mov
fildl
arpl
xor
data16
mov
sbb
mov
out
jg
dec
and
stos
repz
mov
cmp
inc
jnp
mov
pop
and
test
cld
lahf
mov
push
subb
or
and
ja
jle
stc
dec
jmp
pop
test
mov
jae
cmpsb
popl
arpl
push
push
adc
xor
movsb
les
mov
adc
ljmp
xchg
jge
or
mov
mov
mov
outsl
adc
test
cmpsl
sub
mov
sub
mov
mov
fisubrl
mov
inc
and
and
push
out
sub
mov
in
sub
icebp
fidivl
and
arpl
and
fstpt
cmpsb
shll
cmp
and
and
shll
push
out
imul
jp
xchg
jne
inc
xor
imul
arpl
cmp
lods
cwtl
aad
cwtl
andl
mov
shl
cmp
xchg
lret
adc
mov
pop
stc
mov
sub
fwait
sbb
enter
inc
push
and
sub
sti
shl
push
scas
mov
bound
loop
xor
nop
call
loope
add
mov
test
flds
xchg
sbbl
jo
push
push
and
out
pushf
sbb
cmc
xor
pop
lcall
and
lods
cli
lret
xor
and
fs
pop
add
hlt
int3
inc
fisubs
jp
or
insb
les
loopne
xor
mov
leave
jp
rcrb
movsb
push
mov
or
adc
out
mov
in
into
sub
push
mov
cwtl
and
xor
push
shlb
lahf
mov
inc
sbb
push
lds
leave
pop
and
cmp
xor
jmp
push
mov
fsubs
and
stos
and
xor
fistpll
iret
fdivrs
adc
mov
das
sarl
cmp
dec
imul
inc
movsb
mov
jecxz
and
pop
lea
repz
cld
les
fwait
lahf
and
xchg
lods
cmp
inc
shrl
cltd
andb
popa
jae
jae
scas
xchg
pop
and
jb
sub
mov
cmp
testb
and
mov
and
xor
aaa
and
in
and
add
and
aas
xor
sbb
adc
xorl
jns
mov
inc
mov
data16
cmp
cmpsb
out
mov
lods
push
push
test
shrl
repnz
addr16
sbb
or
and
pop
and
mov
sbb
sub
pop
inc
push
sub
push
movsb
cmpsl
xchg
sbb
mov
icebp
and
dec
push
and
inc
xchg
or
cmpsb
out
cmp
mov
addr16
dec
jo
lahf
or
lods
sbb
rcrb
in
push
jne
jge
aas
les
sti
add
rorl
fidivrl
sbb
scas
incl
movsb
dec
jmp
ss
iret
dec
mov
and
outsb
sub
mov
xlat
inc
pop
out
movsb
jnp
out
inc
xchg
or
hlt
and
jb
fadds
mov
cmp
sbb
xchg
push
pop
mov
dec
sub
cmp
jbe
adc
and
scas
inc
jb
lahf
notl
loope
add
add
loop
and
push
in
inc
lcall
enter
lahf
xchg
xchg
sub
pop
in
sub
int
and
out
mov
test
cmp
jle
mov
rcll
push
adc
cmp
and
mov
adc
insb
sahf
inc
adcb
dec
mov
lret
cmp
sbb
jno
jo
push
xchg
mov
lcall
loopne
jo
fldcw
and
dec
xchg
mov
mov
dec
jno
mov
mov
and
ja
cmp
jns
push
and
fcmovnu
mov
mov
mov
pop
mov
mov
and
cmp
leave
jae
iret
adc
mov
and
inc
cmpl
rcrb
lea
mov
sahf
outsb
and
aas
es
mov
repz
xor
filds
inc
and
jl
sbb
mov
mov
and
ret
and
sbb
push
dec
and
ficomps
outsb
je
mov
pop
pop
fisttps
stc
push
mov
rolb
pop
push
movsb
sub
inc
out
jnp
call
and
inc
movsb
push
sbb
xchg
cmpsl
cltd
icebp
lds
rolb
dec
mov
stc
inc
cmp
popf
repz
repnz
inc
scas
lret
adc
sbbl
and
loop
sahf
pusha
mov
je
cmpsl
lds
stos
ja
jno
sub
push
adc
pop
jmp
fsubr
and
cmp
or
push
movb
andl
sub
push
fstl
sub
adc
cmpsl
and
jg
out
sbb
and
adc
mov
and
cmc
mov
aaa
sub
add
pop
test
pop
xlat
popf
jns
and
xor
xchg
xor
adc
testb
hlt
lods
enter
js
pop
out
test
adcl
les
fstpt
xchg
movsb
das
jb
mov
cmp
and
sbb
ljmp
mov
xchg
and
int3
nop
push
mov
fcoml
pop
outsl
and
cmc
cmpsb
sub
adcl
outsb
call
cli
into
scas
movsb
add
imul
mov
pop
inc
sub
mov
call
gs
xchg
mov
outsb
pusha
xor
std
pop
aaa
jns
mov
fstpt
dec
pop
lret
cmp
int
enter
iret
or
dec
test
push
cmp
jmp
mov
and
pop
xchg
mov
fsubl
xchg
and
aas
cld
insl
lahf
and
lods
mov
insb
in
movsl
or
movsb
pop
cmc
xchg
push
imul
adc
jbe
int
sub
add
inc
mov
pushf
iret
xor
ret
inc
lcall
jno
int3
jo
pop
cmpsb
mov
stos
mov
lea
pop
sbb
fadd
jno
out
pushf
test
push
push
leave
add
xchg
xchg
inc
and
adc
xchg
in
imul
jl
xchg
push
and
in
adc
hlt
mov
jbe
sub
inc
and
movsb
iret
inc
daa
sub
loopne
gs
jo
jecxz
clc
mov
or
jnp
pop
inc
mov
sbb
cmp
test
dec
cltd
lret
insl
jbe
fs
ljmp
lahf
ja
outsl
rcr
iret
cld
dec
add
xchg
jg
div
rolb
mov
push
jnp
push
daa
jb
sbbb
lret
dec
out
nop
stos
cli
mov
popa
stc
xchg
push
dec
mov
and
es
xor
outsl
sub
push
jnp
xchg
jae
vminss
xlat
jo
lock
out
movsl
mov
fiadds
jb
arpl
jmp
mov
sbb
dec
xor
fists
imul
inc
dec
sub
movsl
mov
stos
js
xchg
fcoml
gs
aas
hlt
test
popa
inc
out
out
notl
cltd
or
rcll
hlt
dec
dec
jmp
fisubl
adc
imul
popf
push
pop
jb
fisubl
push
mov
push
sub
and
lea
jae
ret
lcall
and
inc
stos
inc
sbb
jp
push
loope
mov
and
lock
pop
jns
inc
fstl
mov
sbbb
test
daa
cld
jl
adc
mov
inc
sbb
push
dec
cmp
and
addr16
dec
adc
jno
ret
and
push
popa
mov
mov
add
add
xchg
and
sub
in
xor
pushf
fiaddl
lea
test
dec
cmp
lods
ror
xchg
and
test
and
jg
push
loope
add
add
push
xchg
mov
mov
cltd
addr16
aam
inc
mov
fldcw
insl
add
movsl
adc
movsl
mov
lret
popa
lods
push
jmp
and
xchg
cwtl
cmp
lret
xor
mov
dec
dec
sarl
pop
clc
aam
and
mov
aas
add
mov
mov
les
xchg
and
sbb
stos
iret
addr16
int
fdivrl
push
mov
or
sbb
insl
and
pop
mov
adc
xor
and
add
daa
outsl
inc
loopne
inc
adc
and
xchg
sbbl
cmp
addl
cmpsl
shlb
sbb
pop
mov
mov
mov
mov
ret
cmpsb
lea
data16
mov
js
cwtl
push
fwait
mov
cmp
inc
jbe
pop
mov
mov
xchg
movsl
test
mov
leave
ss
mov
fs
mov
jne
std
mov
xchg
lcall
loopne
imul
test
mov
xchg
pop
std
sbb
add
outsl
pushl
test
add
add
movb
addr16
dec
aas
arpl
push
mov
xorl
ss
pop
into
test
mov
call
ljmp
jmp
outsl
lds
and
sbb
and
adc
and
jecxz
andb
adc
scas
jle
mov
mov
into
cmp
ds
push
mov
in
inc
pop
push
clc
push
xchg
pop
repnz
ljmp
mov
xchg
test
test
sti
fnstsw
inc
ret
repz
inc
and
ss
mov
push
loope
and
ret
in
push
out
sbb
add
and
idiv
out
xchg
mov
rclb
inc
and
mov
lret
hlt
and
inc
aad
mov
xorl
dec
ret
loopne
outsl
icebp
mov
mov
test
xor
in
and
mov
data16
jl
inc
sbb
sub
add
out
jb
xor
mov
xchg
ljmp
cmp
sbb
cmc
xchg
das
and
jg
out
and
add
pop
call
rorl
cmp
inc
and
mov
push
and
daa
popa
paddq
and
fidivrs
sub
mov
xchg
lret
cmp
jo
sarb
and
lcall
xor
repz
xchg
insl
pushf
inc
cmp
and
aad
xor
repz
mov
les
daa
xchg
cmp
cmp
dec
imul
fildl
pop
pop
jle
clc
and
push
lahf
adc
or
in
mov
fildll
nop
scas
xor
pop
xchg
push
rolb
xchg
and
pop
xchg
dec
and
sbb
mov
stos
and
mov
inc
pusha
jl
add
fcomip
nop
xor
adc
push
clc
inc
jle
and
jbe
cmp
hlt
hlt
and
push
inc
insb
and
push
pop
outsl
jno
xor
in
std
sub
mov
test
popa
cmp
andl
insb
outsl
out
notl
xor
imul
push
and
pop
mov
adc
clc
and
inc
lcall
ret
ss
and
loope
sub
xchg
ja
pusha
mov
dec
xchg
movsb
cmpsb
jl
cwtl
dec
xchg
add
jp,pn
ss
mov
lret
rcrb
dec
and
add
cmp
and
scas
loopne
or
xor
dec
jno
dec
add
jecxz
push
stos
mov
mov
xchg
mov
or
sub
lods
and
jle
arpl
push
dec
jae
sbb
jge
sub
test
xchg
scas
scas
movsb
sub
aam
jns
movsb
mov
adc
pop
or
in
mov
adc
dec
ds
jg
flds
xor
xchg
adc
and
arpl
lret
insb
mov
fsub
mov
inc
jg
push
and
pop
mov
fsubp
ds
and
addb
and
arpl
inc
push
nop
je
and
mov
and
add
or
mov
xchg
cld
ror
popa
mov
pop
das
je
and
lods
xor
push
popa
popf
inc
lds
inc
aad
adc
test
leave
outsb
movsl
pop
cmp
add
mov
out
adc
mov
fistl
xorl
fadd
and
or
test
mov
xchg
jo
push
xor
push
not
or
and
sbb
push
adc
outsb
mov
cltd
cmp
and
and
iret
dec
movsb
rorb
in
push
xor
inc
and
movsb
mov
popa
adc
and
fistpll
andl
das
and
lea
loopne
xchg
and
orl
inc
mov
sahf
jecxz
stc
mov
loope
cltd
movsb
push
xchg
cmp
pop
ret
pop
dec
xor
pop
push
dec
rcrl
jl
sub
mov
push
jmp
pop
mov
int3
mov
lahf
ljmp
add
inc
jae
sub
std
pop
or
leave
and
icebp
xchg
dec
xor
push
cld
xchg
lret
mov
pushf
mov
sbb
adc
test
scas
std
aam
cmp
push
sbb
movsl
add
hlt
and
pop
imul
movsb
fdivr
lea
pop
enter
and
ljmp
dec
and
push
movsb
fdivr
ret
and
push
adc
daa
inc
xchg
fwait
jle
push
cli
mov
and
pop
and
jno
mov
push
stos
lods
fdiv
jae
xchg
add
mov
xchg
or
and
fldcw
dec
and
pushf
incl
xchg
lock
aam
mov
push
mov
jmp
mov
popf
hlt
sub
cmc
fs
inc
pop
pop
push
test
push
pusha
mov
push
aas
stos
and
xor
mov
cmp
and
mov
xor
mov
movsb
or
ss
push
mov
inc
sub
mov
mov
mov
divl
or
jb
and
xchg
inc
rclb
mov
imul
and
xor
shrb
mov
rorb
add
mov
dec
push
xchg
and
sub
mov
addl
push
adc
and
imull
cmp
pop
adc
cmp
call
dec
or
mov
dec
lods
fsubp
jns
adc
xchg
jo
jno
test
out
shrl
movsb
adc
dec
flds
and
jno
bound
popa
sbbb
in
mov
and
xor
jmp
and
sahf
push
pop
push
mov
nop
idivl
inc
call
sbbb
roll
add
cwtl
xor
jmp
xchg
std
nop
push
sahf
lahf
sub
mov
cld
rol
and
lgdtl
jae
xchg
lcall
jmp
xchg
dec
and
inc
popf
mov
and
pop
stos
out
incl
inc
pushf
and
subl
daa
call
dec
cmpsl
mov
xorl
cmpsb
push
xchg
or
sbb
shl
xor
arpl
adc
andl
lods
loopne
adcl
pop
xchg
imul
mov
sub
jmp
in
push
rcr
xchg
test
hlt
enter
push
imul
fildll
inc
inc
loop
je
and
aas
cmc
iret
push
mov
and
xchg
sahf
ljmp
dec
push
jge
cltd
shrb
insl
cltd
fildl
scas
stos
in
ret
pop
lcall
and
add
mov
jns
push
sbb
pop
cmp
sub
test
fwait
add
popa
adc
adc
test
pop
dec
int
mov
mov
inc
pop
loopne
cmc
stc
mov
dec
insl
xchg
pushf
mov
rolb
pop
and
inc
jp
ss
and
les
xor
jno
icebp
xchg
iret
push
xor
fisubs
adc
push
and
and
xor
mov
andl
push
and
jmp
jno
in
insl
add
ret
and
pop
lock
dec
add
xchg
and
scas
add
cmp
mov
mulb
fdivs
xor
das
stos
and
cltd
add
lret
sbbl
cmpsb
ret
popa
mov
filds
inc
and
data16
pop
sub
adc
dec
cmp
and
inc
jge
mov
add
lock
jp
in
mov
sub
sbb
test
jo
xorb
pop
and
push
js
and
adc
push
push
and
lds
jl
xchg
and
sub
lcall
push
and
mov
mov
dec
movsb
fdivrs
sbb
mov
xlat
xor
mov
test
movsb
dec
push
movsl
pop
aam
xchg
fstpl
and
pop
push
iret
sbb
lcall
and
xor
and
and
inc
inc
imul
dec
and
sbb
lods
pusha
in
or
cmp
bound
fstpt
ds
sub
loope
pop
and
aas
pusha
dec
test
cli
jb
imul
and
lods
js
and
xchg
repnz
test
cli
cld
iret
loope
movsb
mov
pop
inc
rol
mov
sub
and
sub
and
enter
hlt
outsb
mov
sti
out
push
loopne
sub
pusha
insb
push
ficompl
idivl
stos
into
out
and
xchg
ret
cmp
enter
loope
in
mov
sti
loopne
js
and
or
xor
jg
and
jmp
dec
std
mov
and
cmp
xchg
das
and
and
xchg
sbb
mov
jno
fnstsw
cmc
jle
jne
arpl
pop
out
in
xchg
sarb
fisubl
test
imul
xor
mov
cmp
mov
inc
jmp
pop
mov
cmp
test
in
loope
cs
adc
and
xor
pop
push
push
xor
jno
sbb
scas
adc
movsl
popa
jb
sbb
add
add
fcomi
mov
dec
and
xchg
mov
test
mov
and
jle
and
cmp
js
repz
sti
fwait
jge
movsl
fs
jecxz
popa
jbe
in
and
inc
icebp
add
sbb
movsb
and
rcll
and
mov
lea
jne
movsb
fisubrl
mov
pop
rolb
sub
leave
test
in
nop
push
push
clc
jecxz
sbb
pop
adc
mov
iret
sbbl
inc
mov
popa
lods
das
dec
lods
and
decl
movsl
inc
jns
outsl
and
ljmp
mov
imul
or
xchg
les
aas
cmp
and
fcmovnb
cmp
jns
sub
fiaddl
and
and
fwait
cmpsl
in
sbb
adc
mov
dec
and
int
mov
xchg
daa
movsl
sbb
ret
mov
jns
or
sbb
movsb
or
cmp
inc
lock
fwait
xor
or
ds
jmp
cli
dec
pop
fsts
lock
cmp
mov
in
call
add
pusha
outsl
lods
mov
inc
ret
fnstsw
mov
insl
xorl
mov
adc
out
dec
movsb
popa
jmp
repz
add
dec
or
inc
adc
mov
sbb
xchg
out
pop
adcb
shr
addr16
lock
stc
ss
mov
sub
fsts
iret
xlat
lahf
sbb
int
push
mov
out
and
jle
pop
mov
popa
and
pop
jecxz
std
aas
or
popa
leave
xor
lea
and
xchg
les
and
sbb
adc
mov
and
lods
add
int3
inc
dec
in
cltd
jmp
cmc
pusha
sub
popf
xor
and
dec
outsl
adc
push
shrl
cwtl
arpl
dec
jle
xlat
xor
mov
inc
roll
sbb
mov
fwait
pop
popa
mov
mov
jge
filds
iret
push
inc
jmp
fsubs
mov
cmp
cpuid
pop
fstps
ret
subb
push
arpl
and
ret
fwait
push
jne
iret
sub
pop
js
and
dec
pop
adc
dec
pop
or
fwait
ds
sbb
xchg
jge
mov
xchg
pop
jbe
dec
jo
addl
xor
xchg
cs
dec
aam
and
push
inc
aas
ds
in
cmp
adc
and
mov
pop
shrl
sub
xor
sub
mov
sbb
out
and
inc
xor
mov
lods
and
enter
mov
test
mov
dec
call
xchg
sub
xchg
and
addl
and
cld
nop
mov
int
mov
popf
andb
xchg
xchg
push
out
and
dec
cld
cmp
push
js
inc
xchg
ljmp
mov
mov
and
sbb
jp
loop
test
jg
nop
inc
ficomps
push
cmp
and
cld
subb
inc
mov
inc
in
stc
lret
sub
and
fcoml
push
mov
push
fistpl
cmp
sub
mov
push
ljmp
imul
mov
lretw
or
inc
jle
popa
lock
ja
out
and
insb
clc
std
xor
or
sbb
or
and
les
inc
adc
popa
jo
and
jp
fs
mov
inc
xchg
add
cli
adc
lahf
nop
ljmp
or
in
xor
mov
push
mov
mov
and
push
adc
xchg
sub
test
and
mov
scas
pop
and
or
sbb
inc
jne
and
xchg
imul
and
fisubs
push
fsub
push
fstps
pop
insl
and
xlat
lds
dec
shl
jne
xchg
inc
pop
das
fsubl
cltd
pop
sbb
int3
and
ja
mov
filds
xor
jnp
mov
push
nop
iret
andl
mov
add
fwait
xchg
jne
test
lret
sub
cli
jp
mov
daa
popa
or
insb
xchg
mov
or
push
and
lods
imul
sbb
test
pop
xchg
mov
mov
and
sahf
jmp
stc
repz
cmp
mov
lods
das
call
and
sbb
std
mov
scas
mov
pop
push
or
addb
xchg
popa
and
mov
and
leave
addb
clc
push
inc
mov
xor
fildll
jne
movsl
movsl
inc
and
push
aaa
jge
xor
xchg
mov
notb
xor
sahf
pop
jns
fimull
cmp
sbb
shlb
divl
les
andl
dec
ss
cwtl
outsl
push
mov
jl
xchg
dec
dec
in
push
popf
cmp
xchg
mov
xor
cmpsb
int3
loope
sbb
subl
xchg
xor
testb
and
mov
pushf
popf
out
inc
cmp
pop
dec
pusha
sahf
and
mov
mov
adc
lret
xchg
xor
pop
sub
add
enter
gs
test
and
sbb
scas
and
cmp
push
aas
xchg
sub
fs
hlt
inc
popa
sub
cmp
and
xor
sub
mov
insb
xchg
mulb
rclb
cld
fistps
jecxz
add
into
leave
hlt
xchg
dec
adc
jb
pop
jo
mov
add
adc
test
popa
push
jbe
out
inc
mov
loopne
sbb
fimull
mov
jno
xlat
cltd
les
outsb
jg
mov
jnp
mov
push
inc
out
add
out
xor
mov
std
dec
sbb
push
ss
push
decb
lcall
fwait
and
out
roll
push
sub
jne
adc
hlt
dec
mov
in
push
cmc
xchg
mov
subb
push
jno
jne
movsb
cli
xchg
jmp
sbb
aas
mov
and
ss
mov
cli
xchg
and
adc
cmpsb
js
outsl
mov
xchg
lahf
or
mov
inc
aam
iret
jne
mov
aad
sbb
sbb
scas
mov
fsubrp
inc
fs
mov
xchg
aam
out
shll
mov
or
xchg
push
ret
dec
test
shll
adc
popf
aaa
mov
mov
and
sbb
leave
call
pop
lods
jo
adc
arpl
adc
jmp
popa
cld
mov
mov
push
negb
sub
enter
outsl
iret
jmp
testl
int3
sub
add
xchg
fwait
jbe
popa
sbb
mov
in
js
lods
xorb
and
sbb
dec
cmp
fs
cltd
stos
and
andb
pop
insl
ret
adc
popa
xor
test
mov
mov
and
fs
imul
loope
and
in
hlt
dec
push
stc
push
in
and
or
test
inc
stos
xchg
sbb
add
or
fdivrs
sarl
popf
mov
and
jbe
push
lds
lcall
sbb
das
pop
sub
or
jns
add
jg
and
insb
les
ds
sub
ja
xchg
mov
push
lcall
lods
or
js
sub
sahf
inc
and
lcall
mov
adc
push
sub
mov
pop
popf
cmpsl
and
ds
out
jo
and
fcoms
imul
shlb
outsl
scas
xchg
mov
pop
xchg
xlat
push
loopne
popa
mov
and
out
and
adcl
xor
in
sbb
sbb
xor
dec
fistpll
cmpsb
lcall
lret
andl
sbb
sti
push
jge
das
sbbl
and
mov
rcll
fnsave
push
stos
jno
add
xlat
rcrb
mov
and
aam
xchg
outsb
and
addb
fstl
sbb
dec
xlat
and
mov
xchg
lods
and
xor
arpl
decb
jno
mov
ljmp
push
or
dec
test
je
and
cltd
dec
xor
and
leave
mov
sbb
mov
or
dec
movsl
and
daa
push
and
subl
into
xchg
xchg
inc
lret
orw
xor
adc
ffreep
in
iret
push
sbb
mov
xchg
call
xor
rcr
and
movsb
fisubl
test
ret
sahf
push
lods
addb
dec
push
fimuls
ss
mov
or
sub
shrb
pop
dec
stos
shlb
push
mov
push
pusha
xchg
cli
das
jb
mov
add
push
and
insl
dec
movsb
fwait
jns
or
mov
andl
dec
dec
shl
push
inc
imul
push
daa
mov
xchg
cmpsb
sub
inc
pop
and
pop
fidivl
jecxz
sub
ret
mov
dec
cltd
and
mov
in
into
xor
call
outsb
stos
and
imul
mov
popa
mov
js
ja
test
aaa
mov
cmpl
pop
lds
ret
ss
cmc
and
leave
movsl
add
mov
xchg
and
call
pushf
and
xor
jmp
aaa
mov
sbb
int3
imul
nop
push
int3
xchg
cltd
popf
sahf
and
or
jnp
loop
daa
inc
xchg
cli
or
nop
mov
shrl
cmpb
dec
jle
fdivs
sti
das
cmpsl
push
ljmp
outsb
mov
xchg
sub
ljmp
rcrl
popa
mov
popa
arpl
push
add
bound
xor
add
shl
fisubs
orb
cmp
mov
addl
mov
lods
in
cmp
insl
and
cmpb
and
sbb
or
pusha
xchg
xchg
and
add
movsl
mov
mov
js
mov
xor
cli
std
xchg
sbbl
mov
je
pushf
cmpsb
ret
aas
popa
xchg
inc
mov
fsubrl
xor
and
mov
lret
fnstcw
and
out
adc
sbb
stos
mov
sarb
or
das
dec
cmc
mov
movsb
and
stos
pop
ljmp
repnz
xchg
mov
mul
mov
mov
mov
sbb
pop
scas
jnp
mul
std
sti
push
popa
pushf
loop
lret
cmpsb
mov
mull
cmp
hlt
out
adc
push
dec
xchg
sub
sbb
sbb
push
mov
movsl
mov
ss
and
shlb
and
lcall
and
ret
dec
mov
push
iret
and
dec
mov
test
sbb
push
outsl
jbe
and
mov
dec
jmp
fld
lret
adc
iret
or
mov
and
mov
mov
jno
lahf
cmpsb
cmp
and
pop
imul
and
insl
mov
and
and
dec
xchg
or
orl
in
stos
repz
jmp
les
push
dec
push
cmp
push
outsl
sahf
shl
mov
fisubrs
rcrl
out
mov
push
mov
iret
xorl
mov
and
ret
adc
xchg
mov
into
clc
mov
fstps
imulb
jno
xchg
add
movsb
pop
xor
jne
les
pop
and
sub
shlb
jae
sbb
cmpsb
jns
cmp
mov
arpl
push
pop
mov
sbb
jae
loopne
lods
add
cltd
mov
xchg
xlat
mov
inc
xor
hlt
dec
push
insb
sbb
cli
inc
daa
pusha
in
mov
lods
cwtl
add
cmpsb
and
mov
fstps
ljmp
enter
and
xchg
sarl
pushf
in
sbb
inc
loope
into
adc
movsb
xlat
ror
mov
arpl
mov
mov
and
inc
ret
js
jne
and
mov
nop
and
cmp
xor
sub
shll
jbe
js
dec
jge
jge
and
xor
xchg
inc
jl
fisubs
xchg
pusha
std
pushf
mov
scas
jno
nop
push
and
insb
cmc
fdivrl
adc
jne
push
inc
dec
ret
jmp
lds
imul
ja
call
lahf
fs
call
and
sarb
jo
xor
shll
jmp
inc
dec
pop
and
scas
sbb
and
fsubr
sub
into
mov
mov
or
popa
pop
mov
cwtl
and
loop
xchg
or
arpl
jbe
in
rclb
cmp
int
popf
xchg
dec
mov
sub
popa
jo
adc
adc
push
jge
jno
cmc
xchg
mov
and
fsubp
andb
dec
jge
mov
cltd
cld
or
mov
xchg
shrl
cmp
mov
adc
inc
mov
fwait
scas
adc
popa
daa
cmp
and
cmpsb
or
repnz
dec
and
divl
mov
cmp
dec
mov
pushf
loopne
and
sub
and
pop
iret
push
and
aas
adc
add
movsb
ja
push
sbb
sbb
jnp
cltd
push
stc
or
and
jge
xchg
insl
lret
mov
loop
js
sbb
mov
cmp
js
mov
add
sub
mov
lea
sbb
or
mov
popa
pop
movsl
loope
les
pop
setg
and
stos
cmpsl
and
aas
icebp
mov
sahf
inc
add
scas
sbb
push
mov
xchg
mov
stos
mov
inc
fisubl
sub
xorb
fidivl
inc
dec
jp
cmp
mov
push
xchg
fldt
jmp
dec
and
and
ss
rep
je
test
lods
and
sub
out
sbbl
cmp
mov
sub
mov
inc
push
dec
and
mov
fwait
and
loope
movsb
and
test
xchg
mov
iret
or
in
popa
mov
and
fnstsw
lds
and
popa
lahf
mov
jbe
movsl
mov
iret
popa
iret
xchg
test
test
mov
int3
pushf
cmp
mov
stos
mov
sbb
repz
bound
and
add
stc
mov
inc
orl
sarl
push
and
lods
xor
cmc
push
or
icebp
mov
rolb
and
out
sti
adc
cmpsl
andl
clc
mov
sub
in
xchg
dec
and
dec
shrb
out
cmc
jae
test
flds
mov
sti
add
dec
aaa
and
fucomp
inc
or
jno
xlat
test
repnz
push
jae
inc
shll
mov
sub
pusha
fwait
push
xchg
mov
loopne
stos
mov
jge
and
sub
insb
lcall
dec
adc
outsl
add
push
out
cmp
jge
std
push
and
cmp
sbb
mov
jno
xchg
and
outsb
jnp
and
pop
cwtl
imul
xchg
js
sub
mov
mov
cmp
jecxz
jg
pop
and
pop
outsb
jbe
adc
pop
pop
pusha
loope
test
mov
and
cli
jle
pop
cmpsb
and
xor
pusha
js
or
daa
popf
pop
cld
in
jae
scas
sub
cmp
mov
sub
push
jbe
loopne
clc
and
imul
jmp
inc
mov
or
dec
loope
and
jecxz
mov
movsb
push
mov
ret
mov
and
jmp
adc
jae
stos
and
mov
cmp
and
add
movsb
xor
dec
nop
mov
push
aaa
add
adc
icebp
iret
xor
inc
inc
mov
push
push
in
mov
jne
ljmp
out
pop
ficoml
in
jmp
jmp
adc
ds
xchg
jg
aam
rcr
cpuid
out
lahf
pop
gs
cld
xchg
dec
sbb
or
int3
and
ficomps
aam
icebp
push
and
dec
inc
stos
mov
xor
pop
and
ja
pop
cmp
into
cltd
hlt
and
cwtl
shll
and
outsb
repnz
fnstsw
push
fildll
lret
pushf
push
mov
adc
into
xor
dec
and
dec
ret
data16
and
ret
movsb
and
cmp
rol
jns
mov
jb
aad
xchg
lcall
lret
gs
add
lcall
in
inc
cmp
adc
push
and
cmp
test
in
cmp
cwtl
mov
loop
push
lods
in
pop
test
movsl
add
mov
mov
adc
xor
and
sahf
pushl
iret
jno
mov
xor
pop
movsb
xchg
lahf
pop
mov
and
xchg
stos
inc
ljmp
scas
movzbl
xorl
popa
lret
push
data16
push
test
pop
ret
adc
mov
mov
test
scas
insb
push
stos
and
cmp
mov
cmc
mov
mov
and
or
push
add
popa
lcall
and
adc
out
push
or
and
pop
js
inc
pushf
sub
loop
cmp
shr
sub
push
cmc
lds
das
lock
xchg
sbb
add
push
fwait
mov
xchg
push
jbe
adc
outsb
mov
int
and
mov
add
xchg
sbbb
jmp
fstl
dec
bound
jb
sub
sub
in
lods
dec
jp
mov
dec
hlt
jne
pop
and
bnd
mov
add
jmp
push
and
pop
ss
movsb
jmp
sub
out
fcomp
stos
jne
test
je
and
or
dec
adc
fnstcw
lds
and
or
clc
popf
xor
movsl
imulb
sbb
push
jge,pt
pop
jmp
and
mov
stos
andb
sbb
and
and
pop
stc
push
and
add
mov
sbb
and
xchg
mov
mov
mov
and
mov
and
fs
push
push
cwtl
inc
and
std
add
mov
and
rcrl
mov
fs
and
repz
pop
pop
and
xor
popf
mov
and
xchg
inc
and
ret
mov
mov
add
push
fwait
pop
fidivl
dec
xchg
jge
test
or
dec
jmp
lods
sub
push
xchg
inc
jns
jl
bnd
addl
mov
in
lods
sbb
test
pop
fwait
js
jecxz
fcompl
push
mov
imul
jecxz
lahf
sbb
xchg
cmc
leave
dec
xchg
ja
loopne
mov
fbstp
and
stos
push
and
and
xor
repnz
lret
mov
add
mov
push
xchg
loope
push
out
push
and
test
fisttps
jns
insl
stos
lock
arpl
ljmp
xchg
push
mov
push
in
or
andl
repz
jb
adc
fisttps
fwait
and
out
mov
ret
mov
push
and
inc
lcall
dec
push
jo
push
xor
jnp
outsl
jle
sub
mov
outsl
iret
inc
inc
mov
dec
clc
mov
inc
shlb
cmp
push
in
jge
mov
and
mov
and
imul
mov
out
jo
sub
call
and
mov
xchg
mov
push
dec
push
in
cmc
imull
daa
mov
nop
popa
pop
push
mov
fimull
xchg
or
xor
loope
cwtl
adc
inc
cmp
sbb
fstpt
jno
dec
test
pop
lahf
loopne
and
adc
movsb
push
add
shl
clc
push
dec
push
and
insb
sbb
mov
cmp
push
lods
adc
addr16
xchg
jmp
xor
mov
out
mov
push
push
mov
cs
imul
icebp
or
jne
adc
cwtl
push
andl
add
shlb
out
or
sub
inc
in
sarl
push
add
popa
sbb
movsb
mov
loop
int
lcall
pop
outsl
push
loope
lods
xchg
xchg
and
imul
and
cmp
fldenv
and
xor
outsl
pop
pop
stos
mov
and
aas
sub
les
mov
cmc
or
and
xchg
mov
mov
mov
cmpsb
cltd
adc
dec
cmp
fisubs
stc
out
test
mov
ss
mov
popa
push
fs
and
nop
fdivrl
mov
pop
xor
mov
in
loope
int
out
jbe
aaa
in
pusha
addr16
push
and
jae
and
hlt
stc
xadd
insb
scas
pop
push
pop
popa
outsl
mov
and
adc
push
and
pushf
nop
sbb
mov
jnp
call
insb
push
andl
cltd
arpl
mov
and
jo
sbb
or
and
in
adc
shl
dec
fsubrl
mov
lahf
sbb
sbb
cmpsl
fisubrs
stos
pop
ja
push
pushf
xor
call
into
xor
test
psllq
fsubl
push
jb,pn
and
cld
iret
bound
adc
das
adc
imulb
fiadds
out
outsl
hlt
dec
inc
cmp
stc
xor
pop
xchg
and
bound
jmp
jge
movsb
in
ja
mov
testl
daa
pop
jns
gs
xor
xor
int3
lods
in
outsl
orl
fiaddl
cmp
loopne
popa
push
lret
ds
push
cmc
sbb
sub
dec
popa
mov
push
push
test
add
rcrb
push
out
outsl
das
xor
push
sbb
push
enter
mov
cmp
jnp
stos
cmp
jns
inc
test
and
sbb
inc
fcompl
and
xor
rorl
fbld
mov
decb
push
mov
adc
and
imul
mov
lock
pop
scas
add
fldl2e
stc
adc
fcompl
mov
mov
mov
lds
sub
or
jecxz
and
les
inc
loope
push
testl
jge
jns
repz
popf
mov
xchg
je
lea
inc
notb
int3
jbe
push
dec
popf
sbb
aaa
jecxz
xor
daa
and
sbb
scas
push
movsl
pop
mov
pop
sbb
shll
push
push
addr16
add
cmpsb
jne
bound
cmc
loop
cmp
xorb
imul
mov
test
loopne
stos
lcall
roll
mov
dec
sub
jg
loopne
ficomps
dec
scas
stc
fsubs
gs
mov
xchg
call
mov
scas
popa
lea
test
pop
dec
add
and
andl
ret
test
mov
and
and
adc
sub
popf
xlat
scas
cmp
cltd
push
jnp
test
mov
push
aas
test
and
fcmovnb
push
shrl
and
fldenv
js
sarb
add
dec
mov
xchg
sbb
stos
xchg
jecxz
test
insb
xchg
jns
mov
enter
mov
popa
lock
cmpsb
popa
dec
dec
int
push
xor
out
xor
mov
pop
lock
mov
xchg
lock
loope
or
imul
and
and
adcb
movsb
mov
lret
pop
pop
imul
testl
jmp
jbe
jae
pop
iret
mov
das
outsl
sbb
or
jl
sub
test
flds
mov
shlb
or
scas
mov
cltd
out
orl
mov
aaa
cmp
clc
call
mov
mov
mov
mov
loop
jae
lcall
gs
mov
mov
xor
icebp
mov
fbstp
dec
cmp
xchg
jno
adc
and
mov
sub
dec
or
sub
xchg
dec
xor
pop
and
xchg
out
pusha
lret
lds
xor
dec
xor
xchg
rcr
fwait
mov
and
movsb
hlt
aad
pusha
imul
movsl
dec
push
sub
inc
fnsave
xchg
mov
push
out
add
sub
arpl
xchg
arpl
add
and
cmp
pop
mov
inc
or
adc
and
mov
fisubs
popa
addr16
or
loop
sub
adc
or
movsb
test
dec
xchg
neg
popa
cmp
repnz
ds
push
and
cmp
and
pop
inc
insb
mov
adc
fs
bound
jbe
adc
mov
add
loop
xchg
cmp
insl
mov
imul
loopne
lods
xor
adc
mov
lahf
sbb
enter
leave
pusha
test
push
dec
das
and
adc
or
adc
and
mov
lret
jmp
popa
gs
sarb
pop
cld
and
dec
inc
mov
mov
jnp
dec
jo
mov
pop
jg
and
push
scas
xor
mov
lret
inc
sub
pushf
loopne
cli
icebp
push
insb
mov
movsl
mov
and
xor
aam
and
xchg
pushf
inc
push
test
add
movlps
pop
lahf
mov
inc
or
fwait
lcall
mov
push
stos
adc
cwtl
sbb
dec
or
sub
imul
mov
ds
and
test
inc
arpl
xor
xlat
inc
call
mov
lods
mov
sub
xchg
nop
pop
pop
pop
and
xor
loope
mov
sbb
add
xchg
leave
add
daa
mov
and
jge
pushf
or
cmpsb
mov
mov
and
add
push
in
ja
and
leave
jmp
and
cld
lret
jns
and
inc
pop
mov
or
and
inc
or
pop
xor
push
imul
add
movsl
and
inc
sub
push
sbb
jns
push
stos
add
xlat
aad
adc
xchg
adc
xor
and
daa
add
and
sub
add
xor
jle
jge
stos
lahf
and
jnp
aas
and
pop
mov
xchg
out
insb
data16
popa
jmp
push
loop
movsb
hlt
js
dec
and
dec
ret
lcall
dec
mov
and
and
mov
into
inc
rol
and
stc
setno
aad
stos
pop
mov
and
in
dec
scas
sbb
jns
popa
imul
xor
mov
adc
shlb
incb
shll
int
cmpsb
mov
xchg
and
and
in
dec
and
popa
test
pushf
in
mov
or
cmpsl
mov
iret
in
xchg
mov
dec
pop
rcll
ret
push
adc
sbb
xor
push
fistpl
lods
xchg
sahf
add
rcrl
fimull
and
insb
cs
stc
out
loope
xlat
sub
mov
xor
sbb
repnz
lahf
mov
and
jecxz
xchg
pushf
sub
push
pop
ljmp
and
push
mov
push
test
in
out
and
pop
lcall
sbb
and
sarb
ficoms
and
popa
dec
or
mov
mov
lods
shrb
xor
and
sahf
aam
dec
adcl
stos
or
shll
into
icebp
andb
jb
and
mov
push
fldenv
gs
or
mov
xchg
mov
leave
in
sbb
std
pop
imul
loope
and
and
mov
adc
jno
orl
xor
stos
jns
int
sbb
dec
lahf
popl
lret
mov
cmp
in
and
xchg
leave
sbb
data16
dec
push
or
mov
mov
lods
inc
shll
inc
stc
sub
mov
xchg
adc
mov
and
mov
daa
pop
sub
sbbl
out
sub
jno,pn
leave
mov
mov
nop
ret
jno
sub
jno
aam
aaa
lcall
cld
push
mov
cltd
dec
adc
xchg
cmp
add
and
test
ss
push
and
add
mov
push
and
fsubl
add
je
inc
inc
mov
and
mov
sahf
jb
dec
sbb
cmc
xor
inc
pushf
test
jp
enter
cs
jnp
push
scas
and
fsub
aaa
mov
dec
cmp
lds
jns
and
push
sub
and
sbb
stos
xor
jp
xor
sub
push
ror
jnp
popf
cmp
mov
inc
aaa
js
dec
test
ljmp
lods
cmp
and
xor
jnp
push
lods
call
popf
cltd
fidivrs
enter
mov
jmp
push
pushf
mov
mov
mov
xor
insb
xchg
adc
mov
js
add
xor
sahf
xchg
pop
xchg
popf
inc
dec
sbb
lods
stc
jb
cmp
aaa
lret
and
adc
shrl
clc
jecxz
subb
ljmp
ret
push
adc
mov
inc
mov
and
das
jecxz
xchg
cmp
cmpsl
and
xchg
outsb
and
inc
or
push
jl
inc
mov
adc
repnz
fdivs
pop
adc
popl
sub
cltd
ljmp
fwait
inc
mov
and
sub
jge
xor
push
lods
and
or
mov
int
sub
fwait
loop
insl
lods
dec
add
and
testl
and
sub
insl
sub
mov
inc
or
push
fsub
and
les
ja
fisubrs
jl
push
or
cwtl
pop
loope
je
shll
scas
or
sbbl
xchg
inc
js
in
dec
and
pop
mov
orb
and
and
nop
pop
cmp
and
cmp
popf
dec
cmp
and
fsubl
int
jl
and
add
xchg
movsb
mov
mov
sub
or
xchg
adc
inc
jns
cld
and
cmp
xchg
and
fnsave
outsl
movsb
fdivr
mov
mov
sbb
xchg
xchg
xchg
and
pop
movsb
sahf
and
popf
mov
orb
jo
mov
or
xchg
adc
jno
and
dec
push
movsl
mov
js
dec
push
adc
popf
fildll
dec
cmpl
movsb
cltd
jo
shl
adc
sbb
and
ljmp
inc
ja
mov
xor
or
cld
shll
or
xor
js
pop
inc
add
in
sub
aaa
cs
cli
push
and
mov
ss
sub
push
out
movsl
sub
stos
movsl
xchg
lds
add
sub
push
push
dec
shll
shr
loopne
and
jne
sub
out
imul
out
add
sub
clc
lea
test
addb
in
les
xchg
jbe
rcll
pushf
and
fmull
dec
mov
and
mov
jae
jecxz
movsb
cmpb
movl
fldt
pop
and
pop
jle
sarl
clc
das
xlat
push
movsl
inc
gs
cmp
and
aam
dec
pop
fidivs
sbb
out
mov
cmc
push
mov
lea
mov
mov
push
add
pop
repz
mov
pusha
repz
cmp
rclb
mov
sbb
dec
push
jno
inc
pop
insl
or
pusha
stos
inc
in
call
jmp
dec
fsubrl
sahf
fcomip
inc
ret
in
cltd
push
dec
test
add
xchg
shlb
sbb
xchg
xchg
or
cltd
test
inc
mov
xor
mov
pop
cmpsl
repz
push
rorb
stos
mov
push
mov
inc
ret
mov
xchg
and
mov
adc
subl
pop
dec
mov
push
sbb
mov
jecxz
iret
or
test
movsb
popf
movsl
inc
push
and
inc
xor
adc
out
push
clc
add
jns
mov
popa
repnz
or
scas
aas
inc
cmp
add
sbb
repnz
lret
icebp
loopne
and
push
adc
hlt
add
mov
dec
call
xchg
nop
push
and
movsl
out
push
mov
pop
insb
and
adc
out
push
call
push
jo
shlb
insb
stos
cld
loopne
dec
and
stc
xchg
cmp
sub
inc
aad
dec
sub
in
sbb
icebp
test
pop
stos
or
mov
mov
imul
sub
dec
jno
and
ja
and
neg
dec
add
sbb
xchg
je
xchg
imul
hlt
sub
mov
orl
push
cmp
cmp
push
sub
or
jbe
rclb
das
sti
mov
cmpl
ds
or
mov
xchg
mov
sbb
inc
cmp
outsl
cs
leave
cwtl
int3
jl
icebp
lea
jno
pop
ret
sbb
stos
and
out
outsl
mov
shl
xor
push
pop
std
add
cmp
xchg
rcrb
push
push
movsb
cmp
xchg
mov
push
sahf
int3
inc
mov
mov
sub
pop
push
jo
fs
pop
adc
mov
cltd
flds
and
adc
idivb
sub
xchg
dec
jmp
pop
loope
xchg
sbb
leave
add
add
scas
outsl
lea
lea
sbb
movsb
dec
iret
test
push
jmp
orl
scas
xchg
repnz
outsb
mov
and
mov
jbe
mov
xchg
xlat
daa
push
cmp
and
fidivrs
and
movsb
xchg
jo
xchg
icebp
inc
cmpsl
movsl
scas
aam
add
int
mov
shl
mov
xchg
mov
sbb
test
jnp
in
adc
mov
and
or
scas
jmp
icebp
sbb
sbb
pushf
sahf
out
stc
jb
aas
xor
push
rorb
mov
fisttpl
sbb
ljmp
and
dec
mov
js
iret
xor
add
icebp
jmp
rolb
push
mov
mov
and
cmp
sbb
lret
add
sub
insb
js
rclb
popa
sti
mov
mov
lods
pop
jb
jo
inc
inc
push
inc
add
pop
fimuls
ret
and
dec
scas
das
nop
sahf
xchg
or
dec
cmpsb
inc
and
mov
pop
mov
mull
fsubl
lcall
xchg
inc
xchg
andb
dec
dec
and
fiadds
xor
and
mov
js
icebp
and
movsb
pop
leave
cmp
jns
dec
inc
mov
lea
and
into
dec
jle
dec
xorl
mov
push
push
int
push
and
insl
cmp
addr16
into
xor
sub
fisubs
jl
push
inc
or
cs
xchg
icebp
negl
fwait
and
xchg
xchg
lahf
push
lret
xchg
cwtl
push
xor
enter
jge
push
mov
movsl
lahf
repz
xor
insl
frstor
mov
adc
out
xchg
inc
cmpsb
fldenv
sahf
int
jbe
mov
xchg
sahf
shrl
repnz
adc
dec
xor
jns
out
and
ret
mov
lahf
dec
jl
pushf
xchg
gs
pusha
sbb
xor
mov
in
push
mov
pop
mov
sub
fwait
inc
mov
sub
loop
test
jle
adc
test
ss
dec
aad
push
lea
pop
xor
out
pop
mov
test
in
pop
push
pop
adcb
mov
inc
test
mov
inc
scas
sub
jecxz
fcompl
loope
inc
movsb
jns
jmp
lcallw
jno
repz
in
and
out
les
pop
sbb
mov
mov
test
aas
mov
in
and
ljmp
hlt
idivb
outsl
cmpsb
add
sub
fcmove
pop
ss
and
and
mov
and
aaa
jo
add
loopne
pop
gs
cmp
and
movsb
fstl
dec
mov
pushf
and
pop
ret
ss
popf
and
mov
hlt
sub
or
add
mov
adc
imul
andl
std
xchg
inc
and
mov
cmp
pop
shlb
add
out
mov
mov
cli
das
inc
inc
cmpsb
inc
ret
xchg
outsb
dec
and
cltd
and
call
mov
fbstp
or
add
push
orl
es
aad
and
rcrb
push
fmul
cs
inc
cmp
mov
add
xor
and
mov
pop
mov
pop
dec
and
push
pop
add
push
fmull
jne
inc
lods
daa
dec
inc
out
push
and
push
arpl
mov
or
and
mov
jle
pop
das
std
jae
subl
lods
lret
scas
fsubl
inc
cmpl
sub
xor
pop
popa
push
xor
ret
adc
lret
shrb
js
and
enter
and
sub
lret
lds
sbb
mov
in
stos
lcall
test
sbb
inc
rcl
pop
insb
lea
push
sbb
imul
jns
sbb
and
add
pusha
and
pop
inc
clc
out
or
xchg
cmp
jo
and
ljmp
jecxz
mov
mov
sub
sub
xor
movsb
sub
loope
pusha
mov
test
sub
hlt
mov
cmp
jo
ja
adc
jns
mov
scas
xor
and
jp
mov
add
xchg
pop
xor
shrl
jns
sarl
and
xor
lahf
and
enter
push
outsb
mov
push
xchg
dec
push
and
test
scas
dec
pop
jp
fldenv
pusha
xor
mov
imul
jne
fisubrl
scas
dec
cmpl
movsb
and
and
xchg
jmp
inc
lcall
jne
push
mov
and
dec
or
mov
in
repnz
sarb
and
mov
push
addr16
data16
and
adc
cli
xchg
test
mov
jne
aas
inc
bound
clc
out
outsl
mov
adc
and
int3
into
mov
xorb
jg
adc
cmp
jle
jl
and
mov
xchg
nop
cli
fwait
movsb
lret
add
xor
test
adc
bound
cmp
repnz
xchg
mov
xchg
and
test
jnp,pt
fs
jno
jmp
enter
add
cltd
lcall
xchg
and
pop
mov
stos
xchg
add
or
pop
lds
push
hlt
lock
mov
popf
sub
aad
mov
add
cmpsl
sub
aam
data16
mov
and
clc
pushf
or
cmp
clc
ret
xlat
sub
jle
and
and
sbb
in
stos
stc
dec
cmp
pop
mov
cli
aaa
sub
icebp
aas
and
leave
pop
iret
mov
cmpsb
test
cmpl
loope
rcrl
leave
and
pop
cmp
cmp
and
and
cmp
mov
push
sahf
push
movsl
pop
and
jae
mov
mov
es
mov
xchg
popa
popf
jbe
pop
and
sub
nop
aad
sbb
repnz
and
stos
add
shrl
insb
and
mov
push
mov
out
cmpb
sub
adc
dec
mov
xor
les
push
data16
shrl
sbb
add
cmpsl
fildll
cwtl
sbb
and
ja
test
and
shrb
pop
roll
mov
add
icebp
and
xor
jno
daa
push
pop
and
es
xchg
inc
fs
or
repnz
outsl
or
add
iret
jno
jl
int3
daa
jno
dec
bound
pushf
add
lcall
shlb
add
pop
cmp
sti
ret
and
xor
pusha
repnz
inc
popa
pop
repz
cmc
int
mov
ficoms
leave
and
into
stc
lcall
daa
xchg
and
push
lret
xor
and
movsb
xor
mov
sahf
xor
cld
out
and
dec
les
push
lods
xorb
cltd
mov
mov
mov
jns
aad
cwtl
and
movsb
lds
pop
sbb
dec
adc
fistpll
icebp
addl
int3
movsb
iret
jp
adc
cmp
leave
xor
mov
lods
sub
push
add
call
adc
push
in
xlat
movsb
and
mov
cmpl
inc
and
add
outsl
mov
jnp
xor
cmp
xchg
int3
scas
cmp
and
xchg
cmpsl
shll
popf
mov
adc
ror
mov
pushf
and
ror
mov
cmpsb
cmpsb
js
jo
ja
dec
bound
les
sbbl
andb
jbe
into
scas
push
mov
sub
iret
test
xor
int
mov
jnp
xchg
test
mov
add
ds
adc
inc
shl
dec
popa
cwtl
mov
adc
outsl
nop
test
dec
lea
xor
sbb
or
clc
inc
shl
popa
and
pop
dec
push
fwait
mov
sub
in
mov
adc
into
in
lds
sahf
daa
scas
and
imul
mov
test
lea
sbb
das
and
xchg
shrl
sti
pop
dec
push
sub
push
out
stos
shlb
and
cmp
popf
jmp
add
pop
mov
int
xchg
jbe
cli
cmp
cmp
les
mov
ret
dec
lds
inc
add
stos
and
xorb
pop
in
push
lea
xor
cmpl
mov
and
pop
pop
loop
movsl
mov
testb
sar
xorl
mov
xor
inc
pop
test
or
adc
jno
pop
xchg
inc
iret
sub
inc
into
xchg
or
inc
cwtl
inc
mov
fcoml
xchg
movsl
or
cli
push
addr16
pop
pop
mov
add
arpl
pop
cmp
xchg
dec
mov
lret
scas
lea
mov
and
jle
and
xor
lret
mov
outsb
imul
push
loope
je
or
mov
mov
cmp
mov
jecxz
add
repnz
sub
lds
lods
das
cltd
lret
and
adc
nop
pop
push
pop
push
add
fsubl
movsb
sbb
mov
sub
pmulhw
popf
push
push
cmp
and
popf
mov
lods
orl
jle
and
add
sub
push
xor
jle
xchg
out
test
xchg
mov
xchg
push
xor
pushf
jae
stos
in
lret
cs
gs
inc
lea
cmc
mov
pop
push
and
and
push
and
mov
setg
cltd
mov
pop
and
pushf
mov
sub
and
adc
in
jg
les
fwait
xchg
jnp
leave
push
push
and
push
mov
stc
iret
test
push
xchg
pop
xchg
push
and
test
mov
aas
pushf
xchg
pop
lods
popf
add
add
inc
jl
out
sub
push
inc
sbb
and
jmp
inc
and
pop
sbb
std
cmp
sub
jl
dec
pop
les
and
mov
daa
aas
pop
cwtl
and
test
sti
std
out
imul
hlt
push
call
mov
adc
jo
and
push
mov
jno
movsl
sub
pinsrw
jnp
pusha
and
loopne
mov
mov
pushf
scas
and
mov
pop
mov
sub
add
adc
push
sbbl
lret
testb
out
or
xchg
adc
loopne
pop
pushf
mov
sub
cltd
or
in
jecxz
mov
and
rorl
and
clc
sbb
pop
xor
jno
sbb
cltd
mov
fmull
inc
cmp
inc
loopne
popa
mov
dec
cld
dec
sbb
repz
mov
jmp
pop
mov
cmp
xchg
sub
adc
cwtl
push
jno
xchg
push
lods
and
inc
data16
sbb
pop
add
adc
jmp
xchg
test
or
sahf
cwtl
mov
inc
and
lea
fs
les
stc
cli
jl
pop
test
jo
sub
das
addr16
pop
jp
int
stos
push
xor
movsb
jb
dec
mov
push
ja
xchg
dec
mov
jecxz
cmpsb
loope
mov
add
and
push
movsb
push
or
pushf
add
sbbl
cld
cmp
out
inc
cli
xor
dec
pop
dec
frstor
fisttpl
or
loop
data16
popa
cwtl
jl
inc
insl
adcl
sbb
pop
cmpsb
jmp
inc
aam
jecxz
sub
pop
loope
and
roll
jae
add
mov
fbld
rolb
jp
mulb
fwait
cld
push
and
add
arpl
mov
rcll
jp
mov
cmp
cmpsb
pop
popa
das
xor
mov
fwait
mov
and
mov
xor
adc
shrb
les
and
add
adc
popa
test
int
cld
sbbl
rcrl
inc
fdivl
loopne
lahf
push
dec
stc
test
insl
and
xchg
jnp
and
pop
ljmp
and
pop
mov
fsubrs
divl
fcmovb
stos
mov
sahf
and
lret
and
xchg
cld
xchg
and
xchg
shrl
fiaddl
and
imul
int3
sub
popa
pop
and
xchg
ret
push
or
gs
adc
cld
jb
mov
fwait
popa
or
mov
movsb
push
js
jle
cmp
add
lea
mulb
jnp
cmp
call
mov
sub
add
and
xor
clc
fidivl
push
orb
jmp
mov
xorl
shll
cli
shlb
xor
xchg
jb
sub
dec
mov
outsl
push
jp
pop
mov
out
movsb
fnstsw
outsl
adc
lods
sbb
data16
mov
fwait
xor
sub
fdiv
jno
cmp
loopne
aaa
jmp
iret
mov
mov
adc
fwait
addr16
aad
in
pusha
dec
dec
cli
dec
outsl
mov
push
and
popa
in
push
xor
inc
jg
add
mov
fcomi
imul
jecxz
popa
cmp
push
push
sub
mov
jg
out
nop
cmp
dec
xor
push
xchg
sbb
btc
daa
clc
orl
dec
fldenv
mov
repz
insb
inc
shlb
cli
and
lret
lds
popa
leave
mov
adc
movsl
fidivs
xchg
lods
and
sub
int
mov
sbb
sub
scas
clc
cwtl
test
popa
push
inc
sbb
inc
cs
jnp
shll
in
pop
popa
add
and
or
je
jbe
in
popa
xlat
add
das
call
lcall
and
xchg
imul
arpl
aad
push
and
mov
mov
add
cmpsb
inc
sbb
mov
jle,pn
loop
cmpsb
stos
xor
inc
sbb
cmp
jl
xchg
sbb
mov
cmp
adc
pop
hlt
les
inc
cmp
mov
dec
inc
lcall
sbb
adc
pop
inc
pop
pop
inc
and
sub
and
cmp
xchg
inc
movsb
rcrb
adc
and
sub
mov
sbb
mov
pop
xor
inc
lds
sub
xchg
and
adc
das
inc
add
in
fistpl
add
sub
push
dec
cmpl
shrb
xor
xor
jno
testb
pop
outsl
add
cmpsb
pop
sbb
mov
and
add
pop
cli
sbb
mov
incb
loopne
idivl
cmp
pop
shll
cmp
xchg
mov
mov
jl
lods
scas
mov
divb
mov
and
jbe
push
mov
mov
pop
out
fistpll
dec
sub
mov
mov
and
xor
and
and
ret
js
in
push
and
cmp
rorb
out
and
mov
mov
hlt
dec
test
nop
stc
and
adc
fdivl
xchg
pop
arpl
sbb
jl
mov
pop
loop
inc
insl
adc
test
clc
lods
and
lods
fcoml
movsb
jno
loop
mov
pop
out
ljmp
rclb
cltd
jns
pop
sub
xorb
dec
sub
xor
cwtl
cmp
cwtl
inc
adcl
icebp
lret
pop
andl
aaa
pop
fwait
ret
xor
leave
and
shrb
mov
in
in
add
rol
and
xor
sbb
rcll
je
and
mov
pop
enter
and
das
jle
cli
xchg
test
hlt
or
fwait
dec
xor
lock
scas
pop
sbb
add
jg
pop
imul
sbb
ret
mov
push
mov
jmp
stos
dec
adc
cli
orl
or
and
loopne
and
xchg
cmpl
sub
sbb
and
arpl
imul
dec
and
mov
mov
and
ljmp
shld
inc
pop
and
mov
addl
sub
pop
push
ss
jle
adc
xor
add
andl
mov
fistps
fld
push
dec
out
mov
or
mov
filds
lcall
jmp
mov
inc
stos
sbb
push
sahf
sub
into
adc
or
das
movsb
shl
movsl
push
imul
push
xchg
lcall
popf
pop
out
jg
es
or
push
addl
lds
cmp
ja
dec
movsl
fisubrl
lahf
xor
and
jae
push
inc
xor
insb
les
daa
mov
js
push
mov
inc
xchg
sbb
xor
inc
mov
movsl
pop
xchg
and
icebp
cwtl
xor
inc
xor
xor
add
out
and
adc
fisubs
push
sarl
outsb
cltd
sub
xchg
inc
cs
fisubrs
pop
clc
and
out
mov
lock
xor
mov
pop
sbb
leave
cmp
dec
into
jno
mov
rclb
and
add
movsl
or
ret
push
icebp
sub
inc
and
int3
mov
inc
push
in
and
shlb
push
mov
mov
cmp
jns
in
jle
testl
pop
mov
inc
xchg
inc
and
push
mov
sti
jmp
vmread
int
gs
stos
int3
pop
and
bound
aam
movsb
std
fldcw
outsb
xchg
xor
lret
addb
aad
xor
in
pop
or
and
outsb
pop
push
mov
and
push
fisttpll
xchg
fsubl
pushl
jns
and
adc
sti
enter
mov
int
movsl
aaa
dec
or
push
xchg
push
jmp
inc
lret
and
push
mov
ljmp
or
pop
mov
sub
insl
push
and
pop
lahf
push
and
nop
dec
sub
mov
cwtl
jb
mov
lea
mov
jl
sub
testb
mov
and
and
xor
xchg
into
idivb
or
mov
mov
or
jae
mov
lock
add
and
adc
ret
mov
lea
sub
leave
and
fsubs
sbb
movsb
mov
jp
shlb
clc
int3
add
movsb
and
xchg
jbe
xchg
and
insl
push
xor
push
and
sahf
imul
xchg
and
rclb
push
mov
cmp
lahf
fistpll
and
pop
inc
cmp
xlat
leave
sbb
dec
and
xor
cld
cmc
and
sbb
jmp
pop
ds
mov
push
cmpsl
jmp
int
cmp
movsl
dec
dec
xchg
cmp
inc
xchg
sbb
sbb
xchg
ficoms
or
mov
xchg
pop
push
insb
out
xchg
mov
mov
jns
mov
int3
xchg
cmpl
mov
jbe
mov
xchg
inc
movl
mov
mov
add
inc
rol
inc
mov
pop
addr16
xorl
popa
cmpsb
ret
incb
mov
sub
push
loopne
xchg
add
je
inc
jno
pushf
jmp
cmp
int
mov
loopne
shrb
and
imul
imul
add
dec
xor
mov
push
push
js
arpl
popa
aad
cmpsb
jo
popf
and
cli
pushf
xchg
jnp
dec
and
shll
mov
jmp
popa
mov
sbbl
and
push
arpl
in
int3
xchg
adc
xor
std
add
shll
and
inc
push
cmp
ss
and
jle
int3
out
mov
cmp
ficomps
es
jge
call
test
sbbl
cmp
les
add
ja
mov
mov
and
mov
cltd
and
pop
fwait
mov
mov
into
decb
lock
push
xor
and
jo
dec
mov
test
xchg
stos
adc
jle
and
add
pop
cli
xor
add
arpl
mov
add
jmp
daa
push
dec
inc
inc
mov
xchg
push
andb
xchg
pop
or
sbb
lret
dec
imul
sub
insl
inc
test
gs
pop
push
testb
dec
push
pop
rolb
jno
and
scas
mov
mov
mov
sub
and
or
add
cmpsb
and
in
push
gs
or
jbe
xor
add
pop
outsl
pop
lcall
lds
xchg
jno
rolb
and
aam
xor
test
mov
cli
and
popf
push
lods
pop
xor
test
add
ret
popa
ja
loope
pop
mov
lcall
ret
inc
and
stc
js
sub
sbb
mov
test
fstps
add
out
lods
jg
js
aaa
bound
out
lea
adc
shll
and
xor
mov
or
sub
not
and
mov
mov
mov
call
xchg
dec
das
xchg
in
xchg
out
pop
nop
and
jbe
push
outsl
loop
dec
and
fwait
jno
test
and
mov
rcrl
push
pusha
scas
xor
and
xchg
inc
nop
sbbb
mov
stos
jnp
shll
lods
std
je
mov
mov
jge
loope
mov
cmp
cltd
and
add
in
shrb
sbb
add
iret
repz
push
sub
and
lea
scas
jo
push
imul
adc
out
sub
mov
sub
fisubs
les
bswap
out
xchg
shl
mov
cmp
int
clc
les
shrl
test
test
sbb
pop
je
xchg
push
push
mov
xchg
test
dec
sub
lret
jne
jne
and
lods
mov
in
sub
jns
cs
cmp
daa
les
jmp
or
and
inc
leave
xchg
and
out
adc
mov
mov
and
inc
outsb
xchg
hlt
jge
and
and
das
pop
pop
jge
sub
stc
loopne
and
pop
push
inc
repnz
popa
push
outsl
xchg
dec
pop
shlb
aas
aam
sbb
and
and
ret
mov
pop
out
insb
cmp
and
orb
and
xchg
adc
test
mov
ja
sbb
and
xor
das
adc
sbb
and
out
outsb
lock
movsb
mov
inc
mov
jb
inc
sub
bound
pop
lds
fisubrs
or
cmpsl
stos
xchg
and
nop
jo
sahf
xor
pushf
xor
neg
daa
das
lods
lahf
or
scas
gs
push
or
sbb
icebp
xor
enter
jnp
push
test
pop
mov
fsts
sbb
jns
and
ljmp
and
popf
out
sbb
pusha
mov
dec
mov
data16
and
jge
and
sub
and
faddl
pushf
fildl
lods
mov
mov
and
fcmovnb
fstp
pop
movsb
aaa
out
insb
mov
mov
push
out
sbbl
jne
jno
xchg
and
outsl
pop
fwait
mov
xchg
cli
sbbb
mov
and
xchg
sub
mov
dec
lahf
and
mov
add
lret
mov
cmp
insb
and
lods
hlt
xchg
gs
data16
inc
aaa
mov
xchg
jnp
inc
sub
dec
mov
test
xor
push
xor
jo
fisubrl
add
sahf
jp
mov
fsubrp
jecxz
and
sahf
dec
and
stos
add
fcompl
mov
daa
cmovo
xor
xchg
mov
xchg
shlb
xchg
lcall
movsl
repnz
lods
mov
cmp
sarl
dec
repz
pop
jge
or
imul
sbb
movsl
mov
ficoml
call
stos
shll
std
frstor
mov
and
lea
mov
lret
xlat
add
xchg
insb
cwtl
fisubrs
and
fidivrs
lods
cltd
outsb
movsb
les
xchg
inc
add
bound
jae
lcall
mov
stc
fsts
inc
stos
outsl
push
in
adc
adc
int
std
xor
jae
subl
sub
out
pop
fsubl
mov
mov
or
mov
dec
inc
test
sti
hlt
pop
inc
lods
aaa
pop
lods
add
cmp
jg
cmp
mov
lods
dec
and
sub
fbstp
mov
mov
pusha
pop
mov
cwtl
jae
cltd
jle
mov
push
in
pop
call
jl
mov
and
movsl
inc
xchg
push
adc
xchg
and
jp
shlb
mov
test
movsb
or
cmpsl
cwtl
cmp
and
inc
pop
mov
inc
aad
or
sub
fidivs
pop
mov
mov
les
loope
hlt
test
dec
iret
and
mov
mov
xchg
mov
sbb
bound
insb
and
scas
addl
or
mov
rorl
jno
aaa
xchg
xchg
test
xlat
or
mov
sbb
push
fwait
cmp
into
inc
mov
out
sbb
or
xchg
aaa
mov
cmp
push
lock
or
and
or
fdivs
faddl
xchg
and
dec
mov
insb
ficompl
xor
mov
mov
leave
das
incl
popa
xor
test
cmc
fidivrs
pop
in
popf
fdivs
xchg
ret
shrl
mov
add
aad
and
mov
sub
fistl
mov
push
lcall
popa
out
adc
push
jmp
into
loope
mov
fadd
mov
shr
cmp
sub
dec
pop
and
or
out
sub
adc
jg
mov
jne
mov
or
loop
adcl
mov
pop
jp
xlat
imul
ljmp
mov
sub
jl
js
cmp
mov
mov
xchg
inc
mov
pop
lahf
or
cwtl
adc
leave
jg
fcoml
xchg
mov
sub
adc
fisubs
test
lock
aaa
ljmp
cli
pop
bound
insb
mov
out
pop
stc
mov
inc
push
push
scas
and
loope
pop
cmp
cltd
inc
subl
movsl
arpl
mov
mov
cmpsl
movsb
scas
loop
test
add
out
insb
and
mov
ja
inc
lods
cmpsl
sub
in
inc
sbb
sar
and
and
sub
das
sahf
fdivp
loopne
cmp
mov
dec
inc
pop
or
loope
loop
int
mov
and
xchg
or
nop
inc
imul
dec
and
add
loop
or
test
dec
lea
pop
cmp
test
or
aas
xchg
and
mov
inc
cmp
sub
dec
cwtl
fbld
add
push
and
dec
lods
sbb
and
stc
inc
mov
xchg
gs
mov
pop
fwait
sbb
dec
or
in
cs
lods
lods
in
push
loopne
or
dec
mov
cmp
adc
or
pop
hlt
cld
push
cmp
leave
pop
cltd
xchg
jp
lret
lret
add
test
xchg
ss
cli
loop
and
daa
jge
and
dec
fbld
inc
shll
fwait
mov
xchg
aad
iret
push
pop
lock
inc
jg
jno
lea
out
hlt
sub
dec
xchg
and
xchg
add
xor
dec
icebp
adc
and
cmpsl
cvtps2pd
insb
scas
sub
aam
jb
daa
mov
inc
dec
movsl
pop
mov
push
or
pop
lods
sub
es
movsb
sbb
sub
mov
mov
decl
lret
mov
inc
adc
and
repz
and
sub
and
jb
and
lahf
push
sub
lods
jle
clc
add
in
addr16
pop
mov
and
jno
pusha
movsl
push
or
add
and
cs
and
xchg
and
pop
cld
and
push
push
and
xor
in
mov
lcall
popa
push
das
jp
popa
int
jle
mov
mov
popf
dec
sbbl
push
lahf
ss
or
inc
and
nop
movl
in
mov
and
insb
cwtl
add
xlat
sub
gs
xchg
lret
mov
xor
and
mov
jnp
and
std
mov
scas
inc
sub
loop
push
push
xchg
jne
out
sbb
shl
inc
mov
xchg
jecxz
and
and
and
add
pop
add
sbb
cmp
stos
loopne
inc
ss
popa
sahf
es
xor
mov
fisubs
enter
sbb
or
scas
cld
cs
popa
lcall
rolb
mov
pop
scas
xchg
cmp
sbb
imul
js
ss
and
inc
push
pop
fldt
loope
ret
in
test
and
pop
imul
popf
and
leave
push
push
cmpsb
lret
shl
popa
xlat
add
mov
stc
add
and
push
aad
and
lcall
jns
xor
mov
je
aas
inc
lret
cmp
and
dec
jl
mov
jne
imul
mov
jno
test
mov
loop
xor
cwtl
insb
andl
xor
fildl
and
sbb
int3
cmc
popa
out
sub
test
mov
pop
popf
inc
rorb
js
popa
fadds
mov
and
sbb
roll
repz
and
inc
pop
mov
lock
xor
cmp
fs
bound
mov
inc
adc
dec
in
imul
push
repnz
or
and
dec
in
jecxz
cmp
lea
imul
push
sbb
fsts
pop
xor
bound
cmp
mov
and
daa
clc
and
es
shll
adc
or
pop
jns
call
cmpsb
scas
ljmp
aam
jne
mov
popa
jg
xor
hlt
and
xchg
negb
cmpsb
jl
xchg
aad
xorb
sub
push
ljmp
push
and
adc
and
fsubs
ret
and
insb
dec
and
mov
mov
jae
xor
frstor
push
mov
int
bound
das
and
fstpl
and
xor
mov
mov
and
push
test
cltd
xchg
mov
sti
out
movsb
repz
dec
ja
xor
pop
popf
shld
sbb
pop
call
jp
loop
and
aas
imul
sub
adc
add
sbb
pusha
mov
mov
inc
test
xchg
adc
xor
inc
xor
mov
xchg
gs
and
cld
ljmp
inc
lock
out
push
inc
and
pusha
lret
out
adcb
lock
adcb
rcll
push
xchg
rcrl
xchg
mov
jle,pn
negl
scas
dec
lods
jl
sbb
xor
jb
stos
call
mov
call
sub
outsb
push
ficoms
add
mov
stc
addl
mov
sub
out
mov
lea
lahf
int
mov
sbb
jno
cmpsb
or
out
cmc
mov
inc
mov
es
pop
xchg
sahf
add
mov
hlt
push
jmp
stos
or
popa
test
jae
fnsave
lods
sbb
aas
jnp
inc
or
and
pop
lahf
and
rorb
gs
fs
and
mov
mov
push
addl
adc
mov
jno
xor
test
inc
mov
inc
pop
cld
and
popf
dec
mov
cmp
insb
es
imul
out
jo
stc
testb
xchg
push
inc
repz
dec
and
aad
adc
lret
adc
and
int
push
jne
dec
push
and
jp
jno
sub
test
mov
sub
and
pop
scas
bound
pop
movsb
push
cltd
sti
stos
fdivs
cld
test
and
and
lea
dec
sti
mov
and
lahf
xlat
xchg
and
xchg
jge
inc
ja
xor
aas
mov
hlt
and
mov
in
xor
cmp
inc
scas
push
lock
xlat
fldt
movnti
push
and
and
mov
and
movsb
into
xor
xchg
inc
sub
in
add
mulb
sub
pop
cmp
test
fnstcw
mov
push
cmpsb
xchg
push
andl
ret
cmp
shl
fwait
and
add
push
jbe
and
cmp
into
and
jae
jo
mov
cwtl
je
adc
nop
subl
popa
insl
adc
ret
lcall
add
fs
jne
fisttpl
and
add
pop
inc
paddb
les
lea
scas
out
pusha
cltd
and
sbb
into
repnz
daa
adc
dec
inc
mov
sub
lea
cmpsb
out
movsb
adc
ret
mov
arpl
es
sbb
inc
mov
dec
push
iret
xchg
rorb
scas
pop
js
imul
mov
in
xchg
dec
mov
lcall
icebp
and
add
outsb
lods
jg
das
and
or
out
and
movsl
in
cld
and
js
cmp
movsl
lret
shlb
fisttpl
aas
xchg
jge
jmp
lea
pop
and
call
adc
popa
and
in
lahf
cmp
fwait
cmc
sbb
aas
mov
lea
popa
popf
outsl
jmp
and
sub
cld
stos
mov
push
fistpl
add
add
fsubl
adc
fsubs
cmpl
jmp
jns
lcall
in
lods
or
adc
shll
test
adcl
and
jl
or
imul
add
fwait
cltd
lret
lea
aas
enter
out
fcompl
jns
mov
fdivl
xchg
fldcw
cmp
jae
sti
sbb
mov
and
fsubp
xchg
jno
push
xor
loop
mov
arpl
pop
or
mov
and
or
push
lret
xchg
sbb
and
enter
jecxz
and
xchg
shlb
add
and
dec
cld
mov
push
rcr
mov
scas
mov
adcb
fimull
stos
xchg
adc
mov
mov
push
mov
mov
call
cmp
aas
xchg
call
cmp
cwtl
bound
ljmp
out
mov
or
imul
ror
pop
and
sbb
and
or
out
stc
inc
and
aam
mov
mov
push
push
inc
stos
lock
mov
and
jbe
ja
sub
cmp
xchg
loop
les
lods
pop
mov
or
and
mov
cmpsb
outsw
mul
nop
in
sbb
cmp
pop
stos
inc
rcrb
and
push
xor
and
adc
stos
mov
add
and
xchg
iret
jecxz
aad
dec
and
movsb
popa
sbb
cmpsl
and
pop
stos
xchg
cmp
mov
lods
adc
xchg
inc
call
lahf
aaa
test
mov
and
sub
mov
loopne
in
xchg
loop
cmp
jo
test
fimuls
fwait
out
sub
or
loopne
jl
enter
push
test
mov
icebp
scas
mov
pushf
push
mov
and
ror
mov
push
pop
repnz
nop
pop
and
or
jno
aaa
and
and
jb
push
call
mov
aaa
mov
add
lea
insb
shlb
in
add
and
imul
mov
icebp
cmp
pop
ret
mov
cmpsl
lods
or
add
test
push
fwait
sbb
dec
aaa
push
ficomps
xchg
and
ffreep
sub
inc
rol
repnz
das
clc
and
fsubs
in
xchg
inc
and
in
mov
mov
jne
push
mov
and
out
mov
cld
rcr
jmp
xchg
xchg
dec
ljmp
adcl
inc
std
not
dec
mov
push
clc
adc
dec
and
rolb
mov
xchg
inc
cmp
dec
inc
rcll
sbbb
stos
iret
push
and
test
or
xchg
sub
pop
or
lea
fs
xchg
mov
mov
fwait
push
lret
js
je
fisttpll
and
mov
inc
pop
lcall
mov
xor
push
and
sub
and
and
aas
pusha
stos
ljmp
out
and
sti
subl
sbb
stos
and
in
mov
arpl
jno
adc
sbb
test
push
mov
call
mov
cmp
xchg
pushf
dec
and
aad
sbb
and
test
imul
fwait
mov
lahf
fidivs
add
add
shrl
jle
lea
aad
cmp
loopne
lods
mov
pop
fsubl
jno
jp
pop
in
ds
int3
and
mov
and
ret
test
jno
xchg
int
in
and
insb
mov
sub
or
push
and
imul
or
inc
in
daa
scas
fdivrl
or
leave
pop
xchg
stos
xor
cwtl
and
popf
push
jmp
imul
cmpsb
inc
mov
mov
lcall
cli
xchg
std
pop
mov
pop
das
sub
mov
push
inc
pop
inc
and
lcall
adc
pop
outsb
aam
in
and
pushf
sbb
and
jg
ret
pushw
and
stc
push
imul
and
push
pop
pop
sarb
and
cmpsb
jge
xor
cs
pop
adc
mov
adc
sti
jge
jmp
sbb
test
loope
popa
mov
sub
into
inc
test
or
pop
push
and
cmp
push
in
xchg
dec
lahf
leave
scas
add
and
push
loope
aaa
push
dec
xchg
fwait
pusha
popa
loop
dec
movsl
push
iret
jnp
cmp
push
push
jae
nop
xchg
and
add
daa
dec
jle
mov
sbb
jp
in
in
cmp
cmp
pop
xchg
cmp
pop
and
mov
or
jl
push
pushf
out
jne
jbe
and
add
ss
xlat
je
and
ds
cwtl
jmp
and
pushf
jmp
adc
xor
pop
push
or
xchg
sub
loope
cmp
popf
mov
jge
hlt
fwait
add
std
das
and
and
add
inc
add
push
cmp
and
mov
loopne
sbb
push
pop
inc
fucomip
fbld
xchg
mov
inc
xor
xchg
ret
mov
push
and
nop
fcoml
xor
outsb
sub
sti
or
cli
xor
fdivs
push
ret
fldt
loopne
jno
into
push
test
ret
mov
jne
mov
push
cltd
pop
mov
and
loop
push
mov
in
mov
push
add
and
gs
in
loopne
jmp
testb
mov
and
ss
lods
and
lret
cmp
dec
dec
dec
and
jge
adc
fs
jmp
xchg
fmuls
mov
sbb
jb
idivl
in
test
cmp
and
add
or
and
cmpsb
or
mov
inc
movsb
push
push
imul
push
mov
inc
pop
scas
shlb
push
sub
cmp
pop
add
mov
fadd
mov
and
jnp
vcmpsd
and
push
shr
pop
ret
repnz
shlb
xorb
mov
add
mov
inc
stos
insl
subl
pop
push
jnp
movsb
incl
arpl
sub
sub
imul
pop
mov
and
call
fs
cltd
mov
dec
clc
add
push
sub
shrl
cwtl
and
or
inc
and
mov
insl
and
stc
hlt
cld
and
xor
repz
and
push
mov
imull
mov
and
or
hlt
dec
jo
addr16
xorl
shlb
pop
push
mov
movsl
xor
add
pop
sbb
xchg
movsl
sbb
mov
test
icebp
in
aam
push
test
cltd
lahf
add
ret
mov
and
movsl
lods
jecxz
cmp
repnz
xor
shll
cmp
adc
sub
cmp
jmp
dec
xor
sub
mov
stos
mov
and
loop
fcos
std
imul
jb
cmp
or
adc
and
xor
push
and
out
sahf
rorl
mov
ret
sub
add
mov
and
loope
lahf
push
popa
push
mov
lret
or
jno
push
enter
fildl
and
imul
scas
dec
dec
icebp
and
test
cmp
and
std
or
scas
and
push
mov
sbb
in
and
and
sub
mov
dec
pop
clc
inc
fxch
and
dec
cmp
xchg
test
and
in
repnz
push
mov
adc
das
lret
test
shlb
cmpsb
int3
and
popf
das
or
sub
icebp
stos
mov
and
or
push
hlt
icebp
and
jmp
scas
enter
cmp
xor
sub
xor
mull
repz
ficomps
xchg
mov
movsb
and
jns
out
fnsave
and
mov
inc
and
jl
and
test
mov
mov
mov
pop
add
movsl
leave
ljmp
ret
mov
fucomip
sti
mov
xchg
xchg
popa
sbb
mov
and
pop
dec
inc
add
pop
out
dec
movaps
mov
xor
lea
cli
jo
sbb
xchg
orl
call
mov
movsb
jle
dec
inc
push
push
and
jb
aaa
bound
cltd
arpl
call
and
out
xchg
or
dec
imul
pusha
xchg
inc
pop
andb
aam
daa
out
push
mov
and
push
cmpsb
iret
cli
outsl
and
popa
js
xor
insb
and
stc
sbb
popa
mov
inc
or
pop
mov
sub
jne
sbb
dec
push
pusha
mov
sbb
mov
ljmp
je
popa
jmp
push
and
ret
int
mov
les
xchg
sarb
insl
rcr
mov
bound
loop
fnstenv
mov
loopne
icebp
in
add
cmpl
and
pop
push
pop
add
jmp
out
xchg
jnp
mov
insb
add
aam
test
mov
dec
leave
sbb
add
dec
pop
mov
add
popa
push
and
xor
push
ljmp
sahf
fiaddl
jb
mov
gs
cmp
pushf
cwtl
in
push
cltd
lcall
add
or
ds
clc
ja
addr16
mov
and
std
and
stos
icebp
call
dec
jae
jno
sahf
cmp
repnz
add
xchg
jno
ret
and
fnstcw
and
ja
jne
sub
loopne
mov
sub
inc
xor
mov
lahf
insl
popa
xchg
imul
clc
in
lcall
adc
leave
ret
loop
popa
mov
fs
cwtl
sbb
xchg
adc
and
ja
add
and
gs
adc
push
adc
aas
icebp
mov
lea
sbb
loope
adc
push
fsubl
in
cltd
push
or
jge
sarb
and
clc
aas
and
add
pop
loop
and
mov
adc
insl
push
imul
roll
arpl
test
and
js
lret
mov
rdpmc
cltd
add
movsl
add
mov
push
test
xlat
aas
pop
push
rorb
in
pushf
test
push
xchg
push
xor
xor
arpl
mov
popa
push
and
rolb
lahf
pushf
filds
into
aas
fwait
and
fdivrl
into
sahf
clc
pop
pop
adcb
push
sbb
lret
and
and
xchg
mov
cli
push
xchg
xor
filds
int
fisubrl
or
adc
mull
push
adc
jp
push
les
aaa
inc
imul
out
push
cmc
loopne
mov
jecxz
and
out
xchg
inc
mov
and
cmp
sub
and
in
sub
add
int
and
leave
mov
mov
lock
outsl
mov
jno
and
xchg
neg
test
xchg
and
inc
subl
mov
mov
adc
mov
ds
add
test
test
inc
imul
and
lock
and
hlt
in
lahf
xor
fisttps
ffree
and
pop
sub
xorl
add
nop
mov
les
xor
mov
xchg
mov
jmp
sbb
inc
mov
cmp
push
lods
test
dec
xchg
adc
ret
fsubp
cmp
mov
loop
and
cs
sub
cs
incl
popf
movsb
mov
outsl
stc
mov
cmp
dec
icebp
stos
and
jns
mov
add
and
cmp
add
aas
and
fnstenv
fisubrs
sbb
and
and
jmp
les
shlb
cmp
xor
insb
and
inc
add
cwtl
fdivrl
int3
sub
xor
jg
bnd
push
jae
dec
mov
and
arpl
adc
mov
mov
lahf
test
pop
xor
and
iret
jg
and
loopne
jb
jne
mov
xchg
mov
xor
sub
adc
and
nop
aas
int3
test
add
repz
and
iret
sbb
into
dec
inc
jae
mov
sub
movsb
cmc
or
mov
xchg
cli
scas
lock
outsl
xor
cmpsl
add
jns
sub
and
xchg
adc
incb
mov
mov
out
test
adc
lret
lods
and
xchg
sarl
cmpsb
adc
sahf
popa
mov
clc
je
js
mov
imul
add
jne
jo
and
sub
jl
hlt
sbb
or
aaa
fsubrs
call
xchg
and
in
pushf
stc
scas
in
and
lahf
dec
mov
decb
lret
jns
and
inc
andb
inc
fimuls
xor
adc
xchg
cmp
scas
inc
and
or
addr16
and
inc
iret
in
loop
cld
mov
rcrl
and
adcl
jmp
and
adc
mov
jbe
pop
mov
mov
pop
stos
gs
inc
jge
and
jnp
dec
xor
mov
fadds
push
jp
mov
dec
add
or
adc
in
mov
test
movl
and
xchg
jg
push
mov
aad
mov
inc
and
and
mov
test
lea
lret
call
test
sbb
xchg
adc
xchg
out
sbb
jge
outsl
fisubs
pop
lods
xchg
xor
mov
mov
push
aas
je
test
stos
and
push
adc
inc
and
fcom
mov
xor
lahf
lods
imul
orb
mov
push
adc
cmp
and
aad
loope
dec
xchg
shll
sbb
push
cmp
int3
testb
aaa
inc
xchg
or
add
mov
pop
and
mov
aaa
cmp
ss
fwait
sub
incb
sbb
xchg
test
adc
mov
xor
jl
jge
sub
jge
ret
cwtl
rcrb
dec
pop
pop
xchg
inc
mov
jo
add
mov
inc
and
push
mov
and
iret
mov
enter
jg
sub
cmp
mov
dec
push
mov
jmp
and
shl
mov
xor
fidivrl
sub
and
mulb
adc
mov
and
mov
jno
xchg
mov
lods
outsb
mov
and
ret
cli
and
and
adc
push
pusha
jle
and
test
ds
sub
jp
lods
xchg
sub
mov
lahf
fsubrs
cmp
add
call
scas
sub
cmp
xchg
inc
sub
leave
sub
loop
lret
mov
xor
stc
cli
or
lcall
and
movsb
cmpsb
push
jmp
mov
mov
loop
cli
mov
lods
and
jb
scas
daa
xor
sti
data16
or
or
push
fdivrs
call
in
lcall
xchg
inc
sub
sbbb
mov
and
enter
inc
pop
into
mov
andl
sbb
jle
cmp
arpl
add
nop
sub
repnz
mov
mov
mov
sbb
push
mov
fidivrs
shll
and
jae
mov
test
pop
and
and
sbb
inc
and
iret
dec
cmp
ljmp
dec
jmp
je
out
repnz
fsubs
ja
mov
mov
mov
inc
es
cmp
sub
and
mov
inc
shlb
std
jmp
xorl
push
pop
cmpl
xchg
fidivs
mov
popa
call
and
push
icebp
push
dec
mov
jmp
sub
mov
jecxz
jae
out
je
outsl
loop
and
and
mov
rcrb
xchg
sub
iret
adc
xor
popl
mov
sub
push
xchg
or
test
push
fistl
rcr
push
mov
into
lods
xchg
jae
xlat
imul
fisubl
push
out
and
mov
xchg
dec
cmp
and
pop
adc
adc
or
je
jb
and
or
cmpsl
adc
imull
jb
daa
mov
mov
xor
adc
out
fisubrl
fisubs
jo
adc
add
cmp
iret
sbb
mov
xor
mov
mov
xor
mov
inc
jmp
and
dec
shrb
and
lods
sldt
cmp
popa
repnz
or
xchg
and
popf
dec
cld
popa
enter
mov
popa
sarl
jl
in
mov
mov
sub
xlat
call
sub
loopne
push
out
adc
sti
aam
mov
fwait
add
into
pop
xor
out
shl
aad
sub
enter
pop
std
and
call
xlat
sbb
sub
and
sub
and
mov
cld
mov
out
and
js
mov
and
push
sbb
mov
mov
sub
cmp
es
and
mov
stos
sbb
and
or
fcmovnb
das
andb
xor
sub
push
and
pop
hlt
add
and
add
mov
push
push
test
dec
and
xor
push
sti
and
dec
addr16
xchg
dec
and
mov
ja
inc
ljmp
pusha
movsb
push
imul
movsb
inc
add
adc
sbbl
dec
sbb
jno
add
fldcw
mov
stos
lret
and
movsl
fimull
and
mov
idiv
stos
cmpsl
test
cmp
icebp
icebp
call
add
mov
fidivs
xchg
pop
add
and
or
cmc
inc
aaa
mov
and
sbb
test
iret
adc
dec
lcall
cs
lahf
or
mov
pop
test
mov
mov
and
subl
and
sub
add
sub
fnstenv
pop
sbb
jmp
aas
sub
mov
iret
and
movsb
out
rcr
adc
sub
daa
loopne
mov
jne
adc
fs
xchg
inc
lds
xchg
or
pop
dec
and
lahf
mov
bound
inc
movsb
inc
in
jns
pushl
std
or
scas
and
jl
rcrb
xor
popa
daa
push
sub
dec
movsb
and
clc
lock
xchg
mov
xchg
and
jnp
sti
je
scas
mov
ret
add
dec
outsl
and
dec
adc
and
xchg
push
pop
out
and
pop
int
gs
mov
push
fsubs
jmp
std
mov
out
dec
jl
xchg
xor
xchg
in
inc
jb
and
push
add
loopne
in
fmulp
shlb
movsb
and
jp
adc
sub
jb
mov
cmp
dec
mov
stos
sbb
fwait
test
repnz
mov
cs
shlb
and
xchg
pop
movsb
in
rcll
xor
stos
adc
fs
bnd
aad
movsl
lods
cltd
add
daa
add
pop
and
icebp
jo
mov
sub
daa
push
or
jno
mov
cmpsl
enter
popa
aam
cmp
in
inc
outsb
and
pop
sbb
cmp
pop
pop
fs
das
scas
xchg
repz
fmul
mov
push
add
mov
lahf
xor
cli
adc
xchg
out
mov
adc
sbb
stos
fbstp
jo
dec
and
mov
adc
ljmp
mov
or
and
jns
sbb
insb
jecxz
and
xor
lcall
add
pushf
fwait
movsb
push
pop
out
push
cmp
inc
out
or
dec
je
push
sub
xchg
daa
inc
test
outsb
adc
jb
push
movsb
jge
lret
xchg
movsb
test
inc
stc
loop
mov
leave
sbb
in
repz
daa
jge
mov
adc
incl
inc
pop
out
fisubl
int3
nop
xor
ret
add
mov
push
fisttps
sbbl
movsb
repz
mov
adc
mov
mov
push
push
loope
mov
mov
push
in
and
and
jecxz
xor
xchg
mov
out
cmp
frstor
rol
push
cmp
push
or
and
inc
push
into
xor
mov
cmp
mov
enter
ret
sub
sbb
int
push
ret
lods
rorl
cwtl
test
sub
sbb
fcmovb
mov
jne
out
sbbb
loope
imul
icebp
fcomps
cltd
cld
out
xchg
xchg
sub
ss
in
movsb
maskmovq
divl
les
aas
shrb
and
and
dec
lods
mov
outsb
inc
add
popa
and
or
xor
test
and
movsb
clc
jns
push
andb
popa
and
insl
subb
out
cmp
lods
ret
and
sbb
pushf
movsl
xchg
dec
and
ljmp
mov
xor
test
mov
ss
inc
gs
push
xchg
xorl
outsb
lcall
inc
pop
push
subb
sub
adc
mov
pop
sti
push
mov
mov
jmp
cmp
mov
mov
test
test
pop
push
and
lods
std
pop
sub
stos
insb
xorl
sub
pop
push
jl
and
adc
mov
mov
cmc
es
push
mov
lods
mov
add
mov
xor
aas
xchg
movsl
pushf
inc
into
pop
loop
mov
push
sbb
fisttpll
jno
scas
cmpsb
push
in
movsl
iret
lea
and
pop
hlt
mov
in
and
cld
mov
stc
mov
add
lcall
and
inc
or
data16
addb
pop
loop
out
mov
sbb
xor
sbb
in
sbb
mov
add
mov
push
ja
and
in
add
testl
stos
sub
lea
sti
cmp
stc
sub
xchg
out
repz
test
and
dec
xchg
push
and
push
xor
js
lret
adc
and
in
xchg
les
mov
out
jp
add
pusha
fsubrl
jnp
adc
and
insl
add
mov
stos
pop
jne
into
jo
ljmp
pop
fisubs
movsb
push
insb
fcmovnu
inc
inc
and
cmc
mov
or
fsubs
xor
int3
jg
out
pushf
pusha
push
and
in
sbb
in
inc
mov
push
pop
mov
or
aam
sub
mov
mov
adc
sbb
adc
sub
pop
mov
pop
and
loope
cmp
lods
sbb
and
jae
cwtl
jbe
fbld
sub
ficoml
jb
push
sbb
inc
xchg
mov
pop
popa
fwait
or
cltd
movsb
test
shlb
push
xor
popa
mov
pop
cmpsl
xchg
in
mov
sub
mov
push
pop
aam
subb
dec
std
outsl
sbbl
inc
adc
inc
mov
dec
cmpsl
pop
push
sti
ds
popf
xchg
shrl
addr16
pop
and
mov
fmuls
cmp
xor
inc
mov
daa
shll
and
fwait
push
pop
movsl
add
mov
cwtl
mov
stos
or
and
pop
mov
movsb
mov
fmulp
test
sub
and
pop
lock
pop
pushf
add
mov
and
std
mov
inc
xchg
in
push
jecxz
sahf
fisubl
jle
sbb
mov
clc
stc
push
and
inc
enter
fcmove
and
add
cwtl
mov
pop
lods
outsb
ret
push
gs
push
lahf
and
ja
mov
mov
sbb
hlt
xchg
and
and
pop
mov
insl
or
sbb
jmp
loope
stos
pop
and
fwait
aas
andl
mov
std
push
lret
clc
and
mov
or
fucom
add
and
fcompl
movsl
mov
sub
cmp
xor
int
rcll
pop
dec
fcom
and
lret
in
xchg
add
ja
sbb
aas
inc
jl
jae
pop
jecxz
or
push
sub
xchg
outsb
loopne
adc
stc
and
push
push
xor
mov
out
popa
inc
loopne
ret
and
rcr
mov
stc
dec
sarb
cld
push
popa
jb
sbb
int
adc
pop
and
mov
aas
and
jno
jg
popl
mov
inc
cmc
std
add
test
sbb
les
call
icebp
lret
stos
and
enter
shll
inc
dec
push
dec
subl
ret
loope
and
cmpsb
pop
andl
mov
test
sbb
push
js
stc
ja
dec
xor
movsl
pusha
jno
adc
pop
dec
xchg
fldenv
outsb
inc
int
aas
cmc
ret
push
mov
test
or
pop
enter
mov
pop
lods
repnz
fildl
adcl
lcall
cwtl
xchg
lahf
push
and
in
int3
and
mov
mov
data16
lret
add
lods
outsl
and
lods
jmp
push
test
dec
in
das
outsl
pop
fadds
cs
fs
xor
jnp
adc
cwtl
push
daa
icebp
rclb
mov
xlat
xchg
and
cmp
inc
test
sbb
filds
fiaddl
and
and
pop
or
fisubl
and
out
pop
lods
mov
adc
sbb
mov
rolb
pop
push
iret
and
leave
dec
xchg
mov
and
jnp
and
gs
movsb
repnz
shrl
inc
mov
sub
adc
xorl
jmp
iret
or
cmpl
sub
jp
pusha
mov
and
sbb
lret
jne
and
xor
fs
dec
add
mov
and
jmp
mov
mov
xor
adc
and
or
sbb
adc
ficoml
push
stc
sbb
adc
test
xchg
mov
mov
mov
mov
jb
cmp
dec
mov
inc
mov
mov
arpl
push
test
sbb
adc
arpl
outsl
dec
and
cmp
add
jle
cmpsb
inc
jmp
pop
in
cmp
mov
inc
mov
or
push
mov
add
mov
loop
in
call
sub
sbb
lock
adc
push
adc
cmp
ljmp
push
scas
es
jge
and
cmc
push
jo
pop
and
xchg
je
test
adc
sahf
out
push
loope
icebp
lahf
movsb
sub
movsl
repz
sar
cmp
or
mov
mov
fsubl
movsb
loopne
cmp
mov
inc
aas
fimuls
in
jp
lods
lret
rolb
in
sbb
mov
je
push
jae
mov
shrl
jbe
addb
and
dec
decb
mov
mov
roll
arpl
hlt
xor
inc
xchg
lret
fsubs
and
mov
xlat
std
mov
xor
sub
sub
cmpsb
mov
pop
mov
sti
pop
and
dec
and
xor
and
stos
cmc
pushf
cltd
jl
pop
cltd
dec
and
xor
mov
sub
jge
push
xor
push
mov
out
inc
and
sbb
push
inc
or
or
mov
or
ds
xchg
sub
shll
movl
or
jle
lret
lods
mov
pop
in
and
mov
imul
lcall
mov
insb
mov
daa
movsb
or
add
stos
xchg
repnz
pop
add
mov
pop
and
push
xor
add
and
imulb
xchg
out
movsb
fildll
insl
cltd
sbb
mov
mov
inc
int3
pop
sub
jo
or
xchg
add
outsl
sti
sbbl
jb
shlb
in
adc
and
push
nop
mov
and
pop
ja
out
imul
ljmp
jp
push
cs
ljmp
rol
xor
les
and
test
and
rcll
dec
xor
jmp
sbb
lods
or
mov
xor
pop
loopne
mov
and
xor
je
imul
test
aaa
push
call
fiadds
jb
and
shll
and
aam
adc
push
and
and
mov
cmp
mov
sahf
inc
cmp
cltd
out
and
mov
test
test
mov
cltd
out
dec
in
cld
pop
jg
pop
and
cwtl
mov
and
das
xchg
xchg
inc
adc
inc
scas
pop
test
mov
shr
and
aas
xchg
cmp
pop
xor
mov
pop
or
test
xchg
icebp
sahf
push
sbb
cmpb
shl
mov
sub
jo
fists
movsb
xor
imul
cmp
mov
sub
or
inc
xor
mov
daa
and
fldl2e
and
fwait
cmp
and
fmull
jae
pop
pop
lock
push
movsb
jp
sbb
cltd
in
inc
fcoms
in
pop
shl
stc
insl
and
jae
es
xchg
lock
int
jb
shlb
jg
and
xor
and
arpl
in
pop
sub
jecxz
in
mov
lret
xchg
enter
or
push
dec
lods
push
inc
shrb
lret
das
gs
int
jbe
dec
and
inc
jmp
xor
arpl
scas
clc
pop
dec
add
test
pop
outsw
push
sub
jno
add
mov
clc
sub
xchg
frstor
popa
inc
loopne
inc
push
and
insb
in
lret
mov
pusha
and
cwtl
pop
jge
arpl
xchg
pop
and
sbb
mov
mov
dec
pop
test
and
adc
cmp
je
shll
or
pop
ljmp
push
xchg
lcall
push
sub
nop
sub
and
inc
jmp
or
int
loop
ret
and
mov
aad
bound
mov
pushf
add
mov
push
mov
movsb
mov
push
adc
andl
cld
pop
jno
and
test
push
jo
xor
and
shrb
sahf
push
hlt
jae
imul
add
aad
iret
mov
and
add
sbb
fwait
and
mov
pop
dec
shlb
pop
in
pushf
insb
ds
popa
sbb
in
jno
xor
dec
dec
or
xchg
push
jno
mov
sbb
and
sub
subl
sbb
lret
jno
stos
fs
and
inc
sub
fldz
and
jnp
clc
xor
and
and
ret
or
dec
imul
add
scas
inc
in
cmp
and
sbb
xlat
jae
movsb
sub
bound
dec
pop
stos
stc
sahf
test
mov
xor
push
sub
scas
xchg
mov
lahf
adcl
iret
pop
call
negb
or
dec
sub
and
pushf
dec
mov
push
sub
push
in
push
xorb
adc
into
jg
adc
xchg
mov
hlt
andb
dec
cmpsb
shll
je
movsb
jl
push
push
mov
int
and
call
pop
in
xchg
arpl
xor
aaa
sti
and
iret
leave
insb
test
loopne
pop
jle
xor
add
mov
test
and
mov
lret
add
pop
push
out
push
and
dec
sahf
in
call
ja
fwait
pop
mov
pusha
xchg
sub
and
jne
xchg
and
xchg
and
shll
int3
orl
and
inc
jle
cmpsl
mov
repnz
add
sbb
movsl
aas
scas
dec
dec
xlat
sahf
pop
push
popa
pushf
add
aad
imul
or
mov
mov
jne
repnz
inc
sbb
icebp
sub
cli
cltd
movsb
insb
xor
jle
cmpl
aam
fucomip
pop
and
sbb
testb
pushf
cltd
loopne
cs
pop
jnp
pop
dec
cmp
scas
xorl
sbb
insl
fists
adc
mov
push
das
add
jmp
xchg
clc
ret
push
ret
sbb
mov
sbb
insb
jae
xorl
outsb
cmp
and
movb
dec
jl
imul
sbb
movsl
and
inc
adc
sahf
arpl
adc
in
inc
movsb
test
aam
xor
fldt
push
test
xchg
lods
sahf
and
aam
mov
mov
mov
and
fdiv
or
aad
mov
scas
and
popf
lods
sub
mov
cltd
loope
pop
out
cmp
and
jae
and
js
stc
mov
cwtl
add
sbb
mov
ret
ffree
sub
mov
cmp
movsb
lahf
outsl
push
mov
mov
add
prefetcht0
xor
inc
jmp
ret
mov
and
mov
cld
push
in
aad
cltd
add
dec
fdivrl
jnp
insb
adc
stos
movsl
and
sbb
popa
ja
fxch
inc
or
fstpt
and
outsl
imul
cld
addr16
add
cltd
loop
and
sti
inc
in
je
and
mov
imul
sarb
and
test
aad
or
shlb
and
loop
out
dec
mov
jae
inc
pop
jno
test
pushf
rcrl
jne
into
adcb
mull
pop
push
cmp
std
mov
jg
and
cli
lods
repz
dec
pop
adc
movsb
pop
scas
adc
and
or
cmp
push
mov
push
andl
mov
and
sbbb
icebp
pop
mov
pop
mov
cmp
jno
insb
adc
dec
push
loopne
and
call
push
jp
push
sub
andl
cmp
mov
sbb
repz
mov
pushf
pop
sub
ja
mov
scas
test
out
and
push
or
jae
mov
push
mov
mov
dec
pusha
popa
cltd
push
scas
xor
repnz
movsb
and
in
cli
scas
pop
or
and
dec
and
xor
test
xlat
jne
push
add
mov
push
movsl
mov
cmp
sub
xor
cmpsb
inc
xchg
aaa
fcomps
faddp
imul
and
lods
cmc
inc
lcall
ret
jg
aad
or
xchg
mov
stos
rcrb
out
dec
push
mov
lahf
cmp
scas
stos
movsb
lods
lcall
sbb
xchg
movsb
and
ja
stc
hlt
in
les
inc
xor
adc
pop
add
push
fisubrs
push
mov
jbe
push
lahf
push
and
xchg
lods
cld
jge
mov
add
test
faddl
jae
or
scas
mov
cltd
lahf
dec
sub
adc
adcb
insb
mov
and
mov
and
mov
inc
sub
lods
add
inc
sahf
andb
adc
fisttpll
adc
and
leave
dec
jl
test
int3
test
jae
pop
cmp
fisubs
not
mov
and
in
inc
daa
sti
es
push
inc
mov
xchg
daa
and
jle
mov
and
push
dec
stos
popf
ja
and
out
rolb
dec
inc
mov
lret
pop
test
pop
in
cmpsb
cld
xchg
outsl
sub
fwait
outsb
or
xchg
aam
push
lods
es
ljmp
inc
adc
popf
xor
ss
mov
mov
and
xchg
loopne
sub
cs
lods
xchg
shll
and
pop
repnz
in
stos
adc
jge
or
movb
stos
pop
sub
loop
mov
and
mov
dec
pop
movsb
shll
test
add
loop
popf
mov
and
sub
sub
inc
mov
inc
cmpl
out
lcall
and
cmc
mov
and
insl
aas
shll
adc
loopne
sbb
push
mov
xadd
orb
cmp
mov
cld
rcrl
and
lcall
imul
clc
fidivl
mov
push
xor
in
lcall
push
and
into
cmp
pop
ss
and
fsub
test
dec
stos
and
jbe
fildl
pop
mov
fbstp
mov
jge
iret
xor
sahf
inc
loope
stos
pop
mov
inc
andl
jnp
mov
insl
roll
xor
cld
push
mov
cltd
xchg
sbbl
and
sub
xor
or
aam
mov
lods
mov
pop
dec
scas
sbb
or
inc
pushw
scas
dec
js
add
dec
ret
scas
sbb
and
adc
fisubrs
or
and
sub
sub
jg
fstpt
cmp
fcmovnb
fsubrl
pop
rcrl
imulb
add
sbb
push
sahf
gs
popl
fidivs
mov
movsl
sub
repz
or
icebp
test
cltd
inc
addr16
out
dec
in
mov
fsqrt
sub
ret
std
push
inc
call
leave
lahf
out
add
scas
cmp
cmpsb
xor
push
and
orl
add
add
shll
xchg
pop
mov
lahf
nop
jle
mov
and
cmp
shll
and
and
insb
cld
test
mov
cli
das
mov
pop
inc
dec
aaa
inc
int
jnp
mov
jmp
cs
and
mov
push
cmpsb
xchg
add
xor
imul
xchg
jno
or
and
repnz
xorb
push
mov
lret
cmp
stc
fisttpll
dec
lahf
jne
test
jnp
aad
pop
or
xor
pop
pop
in
imul
add
ret
or
dec
add
fsubrs
mov
lcall
stos
cltd
ljmp
push
xor
aaa
nop
xchg
push
call
cltd
xchg
lods
adc
insl
popa
add
xor
arpl
int
add
popf
push
loope
add
cli
and
dec
sub
and
ror
popf
push
and
dec
es
sub
pop
insl
rorb
add
lds
mov
repz
pop
or
rorl
mov
rorb
mov
scas
xlat
lock
mov
divb
movsl
fcmovu
into
movb
sbb
and
sbb
push
lods
inc
data16
daa
xchg
insb
jl
das
mov
inc
push
xchg
testb
sub
or
cld
jbe
pusha
hlt
daa
fisttpll
in
aas
adc
test
mov
dec
ja
add
cmp
inc
dec
fiaddl
cltd
loopne
add
mov
pushf
or
in
inc
loope
xchg
popa
and
cmp
pop
cld
and
out
inc
fstps
pop
lahf
pusha
push
adc
xor
andb
in
jge
lods
mov
fisubl
xchg
push
rclb
insl
and
xchg
xchg
jno
mov
in
jb
mov
push
ja
pop
mov
movsb
cs
mov
sti
ficompl
adc
and
in
mov
sub
outsl
mov
out
jo
jb
movsl
ret
popf
loope
xor
push
std
ljmp
mov
dec
and
mov
push
mov
pop
fwait
sti
cwtd
mov
sbb
fdiv
jbe
testb
pop
dec
adc
sbb
shll
mov
fsubl
inc
inc
outsb
jnp
cwtl
mov
and
out
jge
loopne
mov
insl
es
and
mov
popa
jbe
and
and
pop
out
fs
cmp
aam
xchg
aad
stos
pop
ja
and
adc
push
movsb
xor
mov
imul
and
stos
sbb
dec
roll
sub
sub
sbb
into
jb
and
pop
scas
shll
roll
ljmp
push
xchg
mov
fcoml
popa
xor
inc
sbb
in
cmp
and
mov
into
popf
add
pop
iret
cmc
and
jmp
sub
test
movsb
popa
or
or
addr16
push
test
imul
es
xchg
add
and
push
pop
mov
push
rolb
jbe
push
and
loop
xchg
test
and
std
xor
inc
xchg
xchg
add
sub
popa
mov
cmc
aas
jno
dec
jns
lea
mov
scas
mov
push
cli
cmp
and
fsubrl
cmpb
pop
lcall
imul
fwait
push
and
cmp
sbb
xchg
mov
into
ret
insl
lds
call
subl
or
xchg
fcoms
and
pop
repz
and
sub
and
and
jne
or
bound
decb
jb
mov
ss
mov
fdivrl
and
adc
add
sub
and
scas
jge
sbb
daa
aam
repz
jae
mov
cmpsb
mov
xchg
mov
adc
and
xor
jge
dec
mov
outsl
nop
inc
ret
cli
faddp
pop
push
cmc
mov
mov
dec
sub
mov
adc
sahf
out
scas
cld
movsb
or
push
mov
add
xor
insl
add
jl
negl
mov
mov
and
data16
and
jno
fwait
scas
loop
inc
and
les
and
sbb
test
mov
jno
dec
rcll
dec
push
xlat
jge
les
cmpsb
xor
arpl
mov
aaa
push
cmp
popf
pop
call
aad
adc
lock
cli
sub
and
jne,pn
cmp
or
mov
cld
in
and
pop
scas
inc
testl
and
sub
lcall
and
pop
mov
and
adc
ds
xor
popa
into
adc
cmp
mov
loop
ret
fdivr
cmp
xchg
rcll
pushf
shll
stos
mov
fldenv
dec
lcall
jns
pop
pusha
pop
add
inc
adc
inc
mov
and
xchg
ret
jbe
and
mov
pusha
ret
out
aad
add
push
mov
addr16
cs
xor
test
fisttpll
clc
jmp
pop
out
mov
and
sbb
jno
cltd
fistpl
xchg
push
mov
jecxz
adc
arpl
movsb
ljmp
ffreep
jle
dec
bound
mov
inc
scas
push
sub
xchg
lret
iret
shr
adc
inc
sub
xchg
mov
and
imul
push
dec
sub
jae
add
push
jne
and
dec
ljmp
nop
mov
and
xor
inc
insl
inc
and
dec
sub
pop
lods
and
scas
fwait
mov
test
fsubl
loope
adc
lcall
sbb
sbbb
jecxz
push
inc
jo
sbb
mov
popa
mov
jl
mov
out
cmp
scas
out
sub
xor
in
fwait
repnz
mov
sahf
mov
inc
test
dec
jmp
es
mov
jbe
repz
jle
and
sub
icebp
adc
shll
inc
in
cmp
lods
ffreep
xor
xor
rcrb
cmp
sbb
cld
and
test
push
sub
xor
sub
data16
scas
mov
and
sub
xor
jno
mov
cmc
mov
mov
imul
popa
push
pop
or
cmp
jno
cltd
or
lock
or
jbe
dec
mov
stos
and
mov
mov
lds
mov
push
call
and
sub
inc
ds
popa
std
xchg
adc
and
dec
das
rorl
xchg
pusha
test
nop
xor
push
jns
inc
and
lcall
adc
test
xlat
mov
jns
dec
push
cmpsl
xchg
nop
mov
push
sti
imul
repz
xchg
mov
pop
popa
lods
movsb
mov
sbb
stos
and
lret
dec
pop
and
aam
leave
fidivrs
scas
inc
nop
ret
jge
mov
jnp
xor
lea
push
xchg
int
insl
jle
jmp
dec
cwtl
lods
sub
fs
xor
xor
mov
xchg
or
xor
outsb
call
mov
mov
lods
into
mov
cltd
xchg
lret
ja,pt
aas
enter
mov
ljmp
insl
scas
nop
and
pop
add
scas
and
push
fcompp
lret
js
and
mulb
mov
aad
mull
popa
mov
clc
cmp
je
rcrl
mov
orl
inc
addb
stos
je
sub
sub
sub
and
lret
jl
lods
movsl
and
sbb
mov
or
sahf
ret
jno
mov
mov
xor
inc
inc
shl
pusha
xor
or
mov
push
xchg
pop
adc
cld
cltd
mov
jae
loop
lds
and
mov
cmpsl
and
push
mov
stc
out
and
jg
lds
movl
jbe
xchg
sbb
jnp
push
or
ds
sbb
inc
in
dec
adc
aaa
and
push
sbb
jp
loopne
jae
or
adc
shrl
mov
enter
xor
aam
in
and
addb
dec
popa
imul
inc
ds
and
cmp
push
and
insl
or
add
mov
imul
jo
movsl
add
stos
in
test
adc
push
test
aas
inc
popf
mov
and
cmp
addb
mov
sub
adc
jb
add
pop
scas
and
or
xor
test
iret
sbb
inc
ja
jo
mov
fistl
test
mov
pushf
xchg
test
flds
lock
mov
xchg
call
or
cmp
jp
popf
mov
mov
xchg
cmpsb
push
test
cld
movsb
testb
cmp
js
and
jno
fnstsw
and
sbbl
and
jl
mov
lret
and
add
mov
in
and
xchg
stos
jecxz
enter
and
add
and
cld
divl
push
mov
pop
mov
sti
iret
adc
mov
pop
scas
or
and
cmp
shrl
scas
pop
xchg
repnz
lods
mov
nop
and
subl
cmpl
adc
push
and
mov
std
jns
and
leave
stc
lcall
and
ja
adcl
xchg
or
and
mov
sti
in
aam
jnp
xchg
push
xor
and
out
sub
and
arpl
sbbb
push
xchg
popa
andb
test
and
stos
cld
in
inc
test
repz
test
out
lea
mov
and
popl
mov
xchg
scas
add
popf
mov
mov
push
mov
cmp
arpl
pushf
mov
dec
mov
fmul
mov
arpl
pop
fcompl
lea
leave
mov
ror
outsb
xchg
jns
dec
and
insl
outsl
bound
notb
ljmp
cltd
dec
sahf
mov
test
and
stos
mov
out
xchg
fidivrl
xchg
scas
adc
jecxz
arpl
jl
cwtl
out
and
out
cmpsl
test
cmp
addr16
mov
imul
repnz
add
push
rolb
cmpsl
or
and
jo
dec
popf
xchg
and
mov
loop
movsl
lcall
jb
mov
cwtl
fstpl
ret
lods
and
pop
inc
aaa
inc
inc
and
mov
ret
ja
ljmp
sub
mov
adc
mov
push
push
mov
cwtl
push
jbe
and
nop
sbb
and
jge
cli
mov
lods
sbb
xor
lahf
cmp
adc
and
stc
sub
inc
out
ds
cli
xchg
dec
mov
in
and
cmpsb
cwtl
mov
jns
dec
std
aad
pop
and
lds
dec
and
ret
dec
andb
mov
lock
and
es
insb
std
sbb
cmc
shll
testl
jb
stc
pop
std
mov
add
add
push
sahf
xchg
out
popf
mov
and
lock
cmp
testb
push
je
mov
push
jb
test
xorb
iret
andl
push
mov
mov
lcall
addl
sub
nop
cmp
add
dec
gs
and
push
pushf
and
dec
out
push
shlb
jg
aad
and
cmp
dec
bound
adc
cmp
dec
icebp
add
in
inc
hlt
loop
push
xchg
cpuid
outsl
cmp
mov
push
mov
dec
arpl
add
jae
jmp
test
pop
ljmp
loopne,pt
and
popa
roll
ja
sub
xchg
and
adc
xchg
andb
xchg
cs
mov
or
pusha
bound
mov
test
push
and
rclb
in
mov
je
testb
add
mov
jge
and
jne
xor
sub
inc
sub
xlat
int
mov
push
add
sub
or
xchg
push
mov
fists
repz
mov
popa
sub
sbb
push
cmpsb
mov
ret
xorb
ljmp
mov
jo
sub
push
mov
cmp
dec
xor
cmp
and
outsl
mov
in
popa
loopne
mov
sbb
and
adc
jne
inc
mov
push
dec
add
std
and
in
xor
and
into
iret
in
icebp
shll
fisubs
pushf
xorl
repz
mov
and
mov
test
aam
push
lea
and
cmp
test
mov
sbb
and
lods
xor
jge
xor
sub
adc
and
xor
mov
inc
mov
cwtl
xor
loop
daa
jae
jmp
nop
jnp
cmpsl
push
gs
je
inc
ret
clc
jae
rcll
sub
and
and
push
sub
andb
test
fsubr
mov
inc
add
pop
sub
pop
push
adc
lcall
mov
data16
adc
insb
and
and
inc
push
pop
inc
xor
adc
adc
out
and
andb
shrb
mov
dec
fs
int3
push
aad
xor
and
popa
pop
ret
push
mov
sbb
mov
aam
adc
jno
add
xchg
inc
popf
adc
and
push
mov
inc
dec
dec
push
ds
ja
lock
test
pusha
sub
mov
cmp
or
fwait
cmp
movsb
pop
jecxz
xor
and
sub
mov
aam
xchg
xor
mov
loopne
jnp
leave
addr16
les
sub
xchg
and
pop
push
adc
lea
push
xor
or
mov
push
and
and
arpl
cld
cmpsl
jo
mov
fstpl
xor
insb
jge
mov
in
dec
sub
xchg
mov
push
cmp
pop
sbbb
mov
mov
mov
fwait
mov
sbb
dec
adc
sub
lret
and
inc
xor
and
arpl
or
jmp
mov
mov
ret
ljmp
ja
sahf
popa
cmpsl
push
mov
lds
and
stos
lea
mov
jnp
adcb
fcmovb
and
test
in
and
les
adc
pop
int
leave
pop
push
xor
xor
lea
xchg
xor
gs
inc
jge
and
in
test
mov
test
js
or
in
and
xchg
mov
inc
sub
pop
sub
mov
jnp
sbb
pop
inc
dec
and
push
add
out
popl
and
and
aas
popa
aam
mov
xchg
neg
loopne
adc
insl
dec
scas
push
xor
mov
dec
pop
mov
xchg
push
xor
and
insl
mov
mov
insb
aam
inc
mov
jnp
mov
subb
stos
and
idivl
add
and
and
xor
xchg
sbb
xchg
out
int
mov
test
and
mov
cmpsl
jae
repnz
adc
sub
popa
xchg
repz
imul
adc
pop
and
mov
push
sub
and
ficoml
push
fldenv
jbe
in
pop
out
and
mov
imul
inc
sub
pop
sbb
dec
ficomps
adcb
or
dec
or
jns
cmp
push
push
nop
data16
dec
insb
and
mov
cli
add
dec
xchg
sbb
lret
icebp
push
pop
dec
cld
and
push
jnp
test
fstpt
sub
lret
adc
sbb
xor
xchg
mov
rol
push
cmp
mov
sbb
inc
and
imul
loopne
jo
and
test
or
imul
and
push
out
scas
fisubrs
inc
sub
inc
fistpll
xor
iret
rcrb
test
nop
int3
and
xor
sbb
fcmovnb
repz
and
dec
push
mov
cltd
push
mov
mov
mov
test
push
pop
xchg
mov
and
push
shll
fldl2e
sub
pop
sub
nop
xor
lahf
loopne
aam
xchg
fiaddl
and
push
pop
and
jno
out
xchg
fmull
mov
mov
push
jl
push
jnp
mov
stos
cld
and
mov
mov
outsl
add
xchg
or
ficoml
xor
data16
mov
adc
or
xchg
xor
pop
add
mov
sub
movsl
mov
and
adc
inc
cltd
mov
gs
sbbb
fcoml
fwait
loopne
addr16
sarb
popf
cmp
sub
aam
and
movsb
cmp
stc
jo
pop
popa
shlb
mov
and
and
cli
xchg
pop
mov
inc
and
lods
mov
adc
mov
mov
rorb
gs
adc
movsb
ret
jp
das
mov
adc
and
sub
pushf
xchg
pop
test
mov
insb
xchg
xchg
lds
bound
scas
jmp
push
loope
mov
fidivl
push
and
dec
imul
sub
mov
inc
inc
lock
and
stos
xchg
pop
in
dec
and
div
insb
in
xchg
aas
mov
nop
out
jp
add
sahf
add
and
lds
hlt
adc
imul
inc
inc
mov
inc
push
pusha
cltd
nop
and
mov
cmpsb
and
fldenv
scas
int3
test
movsb
xchg
repz
sbb
jmp
pop
and
adc
jns
inc
cmp
lods
xor
cwtl
out
mov
mov
cmpsl
cmp
enter
and
test
ret
mov
sbb
enter
les
cmp
cwtl
xor
mov
xchg
mulb
mov
and
movsb
in
mov
sbb
cltd
push
leave
rolb
test
test
cmp
adc
test
push
mov
xchg
loopne
inc
popf
adc
cmp
lods
test
hlt
inc
fldenv
inc
std
pop
and
out
xchg
ljmp
sub
das
stc
fdiv
or
lcall
mov
xor
nop
mov
lret
ss
lds
and
xor
out
std
and
enter
stos
movsb
and
fwait
inc
jb
in
mov
jmp
inc
shrl
into
add
fsubs
cmc
loope
ds
push
and
adc
sbb
gs
xchg
dec
dec
mov
notb
shrl
mov
and
aaa
lret
lcall
fs
test
outsl
cmpl
mov
inc
and
addr16
aas
and
sbb
xor
lds
mov
and
cli
cld
adc
imul
xchg
xor
pop
aas
add
sub
push
and
cld
xor
inc
out
in
insb
fdivs
push
dec
sub
sub
cmpsb
ficoml
loope
and
pop
add
dec
cmp
fs
cmp
ljmp
xor
cld
pop
int
pop
cmp
mov
lcall
add
out
mov
jae
inc
mov
jge
sbb
push
dec
cli
push
xchg
loopne
xor
add
out
out
ljmp
and
sahf
movsl
sbb
fistpl
and
ljmp
std
mov
inc
or
scas
adc
shrl
and
out
dec
inc
cmp
xchg
sub
into
dec
sbb
jae
sub
lods
rol
sub
inc
cmp
mov
inc
dec
adc
or
loop
and
test
xchg
arpl
and
popa
sub
mov
add
sahf
mov
cmp
rcr
popa
sti
jo
in
or
test
iret
pop
dec
mov
push
mov
cli
and
int3
mov
cmc
mov
jge
sub
add
cmpsb
sub
cmp
ret
and
stos
pop
fisubs
adc
dec
sub
mov
addb
in
and
jmp
dec
and
add
or
and
xor
push
and
bound
adc
and
and
push
inc
and
adc
mov
rdtsc
sbbl
mov
cmpsb
sbb
and
shl
cwtl
xchg
inc
inc
xlat
and
movsl
mov
jno
inc
iret
gs
test
in
adc
sbb
insl
pop
inc
adc
cmpsb
mov
or
xor
shlb
lea
lds
sbbl
ret
dec
mov
mov
xor
bound
mov
and
movsb
imul
leave
mov
sub
and
std
mov
dec
xor
and
repnz
daa
mov
mull
sub
jne
xor
dec
add
call
xchg
xor
out
sbb
sub
sahf
fbstp
bound
lea
mov
outsb
popa
cmp
sbb
inc
cmc
pop
sub
xchg
fdivrp
lcall
mov
push
cmp
dec
imull
aaa
jge
cmp
and
and
or
imul
int3
and
repnz
popf
jb
mov
jnp
add
sub
stos
aam
pop
sbb
push
adcb
add
or
in
mov
rorl
xor
call
and
or
sub
sahf
inc
movsb
or
push
cmp
popa
aad
bound
cmp
inc
adc
rclb
mov
dec
inc
push
xor
lcall
int
or
add
pop
mov
daa
and
push
jp
pop
inc
int
rclb
xchg
inc
rol
rolb
and
sub
add
xchg
arpl
and
imul
xchg
jmp
out
fstpl
sub
pop
xchg
test
mov
cs
test
push
sar
mov
and
dec
pop
pop
repnz
push
test
pop
hlt
fisttpll
gs
mov
push
stos
sub
ss
aad
shll
test
and
cmpl
cmp
hlt
mov
dec
jo
xor
fistpl
push
inc
jecxz
dec
adc
popa
cmp
ficoml
inc
in
inc
adc
and
cltd
fninit
clc
xchg
dec
and
xchg
shll
jo
inc
or
loopne
inc
inc
mov
or
bound
xor
ret
insl
sbbb
and
mov
and
inc
testb
inc
sub
mov
xor
xchg
aad
lock
jo
aam
orb
dec
add
and
es
movsb
and
imul
inc
mov
mov
push
dec
sbb
xchg
fcompl
adc
mov
test
mov
cmp
aas
sub
or
add
repnz
or
adc
xor
jnp
sub
aaa
push
loopne
ja
cs
push
push
cmp
cmp
push
push
dec
push
into
push
push
push
aad
fstps
fstpl
loope
out
insb
push
out
push
icebp
push
negb
jnp
add
mov
adc
sbb
push
pop
pop
pop
int3
pop
aam
pop
pusha
fbld
pusha
insb
pusha
jle
xchg
pusha
sbb
das
sarl
fidivrl
mov
outsl
cmp
out
loopne
data16
xor
mov
inc
aam
in
jno
cmp
dec
ficoml
nop
movsb
cmp
daa
mov
aam
in
hlt
or
pop
mov
push
inc
jmp
lret
pop
test
mov
mov
mov
out
enter
out
xor
sbb
mov
inc
lods
cmp
sahf
cltd
aaa
mov
ds
dec
ja
or
xor
sub
sub
aad
jmp
xchg
dec
xchg
rcll
pop
popf
data16
imul
push
lahf
pop
lahf
xor
inc
push
ds
mov
pop
shr
or
adc
in
mov
mov
jo
xor
lock
pop
lock
lock
add
xchg
mov
or
lock
lock
push
in
mov
sub
hlt
xor
les
iret
sbb
sbb
pop
sbb
sbb
sbb
jmp
pusha
mov
leave
mov
push
fs
add
sbb
adc
mov
add
test
mov
xchg
sbb
popf
mov
mov
cmp
pop
lret
pop
iret
pusha
xlat
pusha
arpl
pusha
add
das
sub
jp
add
push
arpl
int
push
add
or
dec
hlt
mov
shrb
pop
mov
hlt
cli
lsl
mov
lcall
mov
cmp
int3
sub
lock
divl
fwait
in
mov
aam
in
hlt
jmp
shr
xchg
movsl
dec
xor
pop
arpl
cmpl
outsb
inc
or
das
mov
cmp
mov
not
jl
and
or
push
xchg
sti
or
push
lea
mov
sbb
and
push
int
dec
arpl
push
pop
adc
mov
inc
ds
xor
addr16
pop
push
pop
xchg
das
sub
scas
out
mov
xor
lock
loopne
sub
jae
jne
ja
jns
jnp
jge
jg
sub
sub
lock
jne
clc
push
enter
adc
movsb
push
inc
or
inc
enter
or
dec
or
or
jnp
jge
cmpl
mov
mov
push
xchg
rorb
pop
icebp
in
dec
out
cmp
push
pop
lds
sub
movsb
insb
mov
cmp
icebp
pop
pop
out
insb
pop
std
pusha
mov
das
mov
dec
pop
subb
push
mov
je
js
add
nop
adc
xchg
lods
xchg
xor
cltd
pop
fwait
in
jae
or
mov
sbb
dec
ds
or
test
enter
or
dec
repnz
call
adc
hlt
cltd
sub
mov
outsl
hlt
push
arpl
imul
cmc
jbe
adc
inc
pop
les
pop
pop
pop
gs
or
pusha
sbb
daa
shrb
xor
xor
clc
xorl
inc
inc
inc
and
jmp
mov
sub
mov
bound
mov
repnz
in
push
xchg
shlb
test
mov
mov
test
jb
push
imul
shll
rorl
gs
ljmp
push
or
push
sbb
sbb
xor
xchg
cmp
cmp
mov
mov
out
jmp
xchg
je
jbe
jns
jnp
jle
sbbb
lahf
or
adc
sbb
mov
inc
jno
imul
inc
xlat
mov
pop
arpl
ljmp
pusha
push
pusha
sbb
cmpsl
mov
das
jo
xor
lock
mov
lock
lock
gs
xor
fcompl
push
jg
addl
mov
xor
xor
inc
dec
and
dec
xchg
movsb
mov
popa
in
mov
or
cmp
xchg
mov
xor
mov
or
out
addr16
repnz
jns
aas
mov
subl
pop
xor
inc
xor
repnz
inc
lahf
inc
lahf
lret
mov
enter
ljmp
sahf
pop
mov
cltd
mov
aas
ds
pop
xchg
dec
cltd
dec
mov
cmpsb
sub
icebp
jp
pop
jae
ja
jnp
jg
sbbl
lahf
xchg
lahf
xchg
lahf
fwait
lahf
lahf
lahf
and
xchg
push
xchg
loope
sub
nop
scas
xchg
jmp
lea
inc
mov
movsb
mov
cltd
adc
aas
das
push
cmp
adc
jno
sbbl
mov
inc
xchg
push
cltd
gs
jne
test
and
scas
inc
jge
movsl
adc
sub
xchg
and
cmp
xchg
imul
lock
jae
jne
ja
push
jnp
jge
jg
test
pusha
test
test
mov
lea
xchg
or
or
dec
and
test
enter
or
or
or
push
inc
shll
inc
push
dec
push
dec
push
dec
push
dec
push
push
sahf
shll
push
push
push
pop
push
pop
mov
push
pop
sahf
roll
push
gs
addr16
imul
outsl
push
jno
jae
xor
ja
jns
jnp
jge
jg
add
xchg
mov
mov
rorb
xchg
jae
dec
push
push
mov
jae
adc
jge
jg
sbbl
popf
aas
das
cltd
mov
lahf
adc
daa
aam
in
hlt
cmp
mov
sbb
dec
sbb
push
push
insl
pop
push
pop
push
pop
sahf
shll
gs
pusha
imul
lds
push
xor
cs
mov
jae
lods
test
das
ljmp
out
or
adc
sbb
cltd
pop
cmp
xchg
ds
fsubrs
call
lock
jae
or
sbb
test
inc
xor
lahf
pusha
lahf
arpl
xor
and
mov
jo
sub
loop
ficomps
negl
jnp
jge
jg
sbbl
aas
pop
xor
pop
xor
sub
cltd
sub
push
div
adcb
cmp
sub
ljmp
sub
pop
sub
push
add
in
mov
mov
imul
mov
in
add
lcall
lret
pop
push
hlt
pop
jp
or
mov
mov
and
dec
push
cli
flds
loope
add
test
cwtl
cltd
stos
mov
in
xchg
add
lds
sub
sub
push
jl
xchg
jp
bound
xchg
push
cwtl
push
lahf
popf
and
mov
mov
inc
inc
int
xlat
shrb
daa
outsl
mov
scas
stos
nop
inc
push
pop
adc
mov
jp
shrl
push
mov
mov
aaa
insb
rcr
pop
rcrb
mov
movsb
jnp
adc
js
jle
add
mov
xchg
adc
sub
lods
or
push
mov
and
mov
xor
in
out
pop
mov
rcrb
and
es
mov
rcrb
and
jge
mov
mov
test
mov
cwtl
mov
mov
mov
xchg
rcrb
mov
les
hlt
push
add
out
pop
mov
sub
add
daa
sub
repnz
enter
mov
mov
or
in
add
push
sbb
rclb
sub
scas
mov
ljmp
and
sbb
push
jne
pop
test
inc
pop
dec
pop
push
dec
push
movsl
jbe
mov
repnz
adcb
in
and
ret
push
pop
pop
das
lret
mov
outsl
bound
jg
cmp
mov
ret
out
push
scas
add
mov
lds
fisttpl
pop
push
adc
sbbl
push
cwtl
popf
movsb
cmp
scas
pop
ss
mov
jns
dec
mov
dec
aas
outsb
mov
cld
inc
add
rclb
fwait
rolb
mov
ja
inc
add
les
dec
lahf
push
lahf
lahf
loopne
fs
jns
icebp
bound
andb
sbb
push
hlt
ja
jecxz
es
outsl
test
add
push
pop
jae
loop
ds
push
jb
or
mov
cli
pop
add
mov
ja
lahf
sub
imul
sbb
mov
int
dec
mov
dec
shrb
mov
mov
mov
cmp
push
dec
fsubrl
push
mov
stos
push
or
pop
adc
push
std
cmp
xor
inc
cmp
gs
testl
lea
sbb
inc
xor
inc
xchg
and
loop
roll
or
adc
stc
mov
and
movsl
cmp
loopne
jecxz
jmp
mov
xor
imul
push
and
call
mov
sub
xchg
ja
mov
mov
push
sub
popa
mov
mov
iret
sub
enter
ja
fs
orb
lock
ficoml
aaa
pop
inc
pop
inc
pop
inc
pop
dec
pop
dec
pusha
dec
inc
dec
test
jbe
jns
jnp
jge
xchg
test
stos
mov
xchg
mov
inc
jno
dec
outsl
xchg
push
loop
pop
pop
pop
lcall
push
add
mov
and
adc
and
xor
in
cmp
push
lea
sbb
mov
mov
jge
test
rcrb
mov
cmp
sar
add
das
sub
mov
out
mov
pop
jnp
imul
imul
jns
jns
das
xor
mov
jnp
jg
mov
inc
outsl
subl
mov
xchg
dec
xchg
xlat
cltd
fstpl
stc
subb
test
pop
add
sbb
lcall
xor
xor
pop
psraw
mov
push
pop
and
pop
test
imul
mov
jno
je
adc
inc
mov
jns
dec
jo
mov
mov
jne
pusha
push
pusha
pop
dec
pop
test
pop
or
arpl
adc
outsl
xchg
jno
imul
jge
jg
sbbl
and
lock
lock
insb
xchg
enter
fwait
dec
es
lahf
sub
test
and
mov
in
sub
sub
inc
mov
dec
dec
dec
pusha
dec
pusha
push
pusha
push
pusha
push
pusha
push
pusha
pop
pusha
pop
rcrb
daa
popa
mov
gs
sub
outsl
push
pusha
jae
jne
dec
jns
xor
xor
lahf
xchg
jne
ja
nop
xor
jge
test
xchg
lahf
mov
xorb
insl
in
adc
aas
sub
jge
test
xchg
add
mov
jno
aaa
fwait
cmp
sub
popa
push
cmp
xor
push
xchg
out
and
lret
inc
mov
push
je
lret
pop
jnp
jbe
outsb
je
jae
adc
and
cmpb
insl
test
addl
cmp
sub
or
push
mov
jne
cmp
ds
cmp
insb
arpl
mov
sbbl
mov
mov
xchg
rcrb
mov
pop
rcll
fwait
or
sub
xchg
cmp
aas
sar
rorb
rclb
rcrb
shlb
shrb
mov
pop
jge
test
lea
sub
xor
xor
adc
jmp
jne
repnz
cli
pop
sbbb
pop
push
popa
cmp
imul
mov
jecxz
jae
mov
sub
sbb
mov
xchg
pusha
cltd
pusha
fwait
pusha
popf
pusha
lahf
xchg
mov
pop
daa
dec
sub
xor
insl
mov
lock
loop
dec
sbb
push
lcall
dec
pop
sbb
pop
mov
inc
orl
jns
xchg
push
jp
pop
gs
jae
xchg
mov
das
and
xor
xchg
pop
push
cltd
xor
shll
lret
pop
xor
fs
das
dec
mov
or
xor
addr16
push
mov
xchg
mov
fistpll
jmp
das
lods
cmp
test
sub
xchg
aaa
inc
inc
aas
mov
inc
and
inc
xor
out
cmp
push
mov
xor
scas
mov
inc
inc
mov
sub
loop
cmp
inc
ja
dec
add
mov
arpl
lds
daa
dec
test
imul
sub
addr16
or
outsl
xchg
cmc
subl
pop
inc
cmpsb
das
inc
daa
lods
lea
xor
ja
lods
adc
adc
and
sub
inc
daa
arpl
mov
daa
pop
mov
xchg
ficomps
stos
inc
jae
dec
push
inc
jns
daa
ret
mull
addr16
mov
mov
cmp
add
int
jmp
push
sahf
xchg
imul
dec
jno
sub
cmp
in
mov
sbb
mov
mov
mov
jle
daa
lds
cltd
daa
sub
daa
dec
cmpsl
push
mov
jge
daa
xorb
cmp
xor
jnp
repnz
push
mov
inc
sbb
das
aas
adc
adc
push
xor
pop
push
inc
dec
pop
daa
daa
cmp
pop
cmpsb
inc
into
push
inc
imul
mov
ds
mov
xor
mov
xor
mov
mov
and
dec
mov
addr16
es
cltd
daa
rcrl
add
jae
inc
mov
and
cs
jecxz
xlat
xorb
inc
xor
push
lock
in
test
shl
inc
inc
das
idivb
cmp
dec
inc
das
dec
cmp
jne
imul
dec
mov
daa
stos
icebp
xor
jmp
sbbl
in
movsb
dec
adc
cmc
xchg
mov
pop
xchg
push
ret
dec
xor
mov
mov
xor
cmp
pop
xor
sub
js
ret
inc
mov
cmp
daa
and
ror
inc
push
xor
jb
bound
pop
arpl
dec
xchg
loope
dec
cmp
xor
imul
cmp
and
cmc
insl
jns
xor
stc
xor
push
aaa
xor
in
arpl
pop
inc
sub
cmp
das
lea
int
imul
mov
daa
leave
jl
xor
daa
dec
arpl
and
clc
stc
cmp
xor
sbb
repz
bound
imul
pushf
xor
jno
and
rolb
popf
mov
push
cmp
mov
mov
popf
cltd
jae
sarb
cs
mov
daa
les
in
imul
jg
lds
pop
inc
pop
sbb
daa
popa
cmp
das
fistl
das
push
test
sub
cmp
das
stos
dec
popa
cmpb
inc
test
popa
jae
inc
aad
das
mov
mov
xchg
mov
aaa
cwtl
xor
jl
sub
dec
mov
jge
sub
es
cmp
ss
jge
mov
inc
cmp
mov
sub
das
ret
popa
test
jae
inc
xor
xor
out
cmp
test
cmp
inc
inc
arpl
dec
nop
xor
daa
ret
or
xchg
daa
and
movsl
arpl
push
mov
popa
lahf
push
imul
daa
ret
cltd
xor
outsl
dec
inc
xor
jb
lods
or
faddl
push
icebp
popf
repnz
ret
jne
xchg
inc
imul
mov
jmp
mov
das
movsb
insb
cmp
mov
cmp
dec
ja
das
call
arpl
stos
add
lea
cmp
mov
addr16
mov
daa
sub
sub
xchg
xor
xor
cmp
or
pop
test
dec
inc
daa
inc
jl
call
pop
cmp
xor
ret
imul
dec
jno
and
cmp
cmp
cld
inc
inc
mov
insl
popf
xchg
sub
mov
inc
pop
imul
aaa
bound
cmpsl
insl
mov
lds
inc
push
dec
xor
mov
gs
insl
inc
dec
inc
mov
mov
imul
or
dec
pop
das
and
mov
popa
sub
sub
daa
xor
daa
push
inc
jnp
jns
mov
mov
mov
daa
xchg
push
xchg
dec
xchg
daa
xor
cltd
xor
mov
aas
sub
ret
add
mov
push
orl
daa
mov
mov
mov
outsb
push
jmp
mov
cmpl
das
ret
cld
xor
imul
mov
movsb
loop
lods
cmp
mov
fcompl
cmpsb
mov
mov
daa
jae
adc
jae
sub
xor
cs
inc
inc
xchg
mov
test
sub
cltd
cmp
daa
jo
dec
mov
daa
and
ds
popf
dec
pop
daa
es
aas
pop
xchg
sub
loop
mov
imul
sub
mov
cmp
popf
mov
xor
das
sub
insl
das
mov
xor
xlat
inc
inc
dec
cmp
aaa
inc
xor
fidivrl
add
push
dec
daa
shrl
xor
jae
sub
cmp
xorl
pop
xor
inc
insb
icebp
das
and
sarb
inc
mov
daa
cmp
das
movsl
test
sub
mov
inc
xor
jne
das
push
pusha
jbe
std
cmp
das
inc
mov
ret
mov
inc
push
add
adc
and
xor
cmp
mov
sbb
mov
adc
gs
inc
sub
mov
xchg
mov
fistpll
push
xor
fisttpl
outsl
and
sub
popa
sub
cmp
daa
push
ds
inc
pop
imul
outsl
aas
mov
mov
inc
insb
stos
dec
mov
mov
pop
inc
mov
inc
aaa
xor
and
pop
push
daa
lcall
pop
inc
imul
pop
test
sbb
insl
dec
push
das
mov
jnp
popa
mov
call
dec
mov
xchg
imul
xor
adcl
push
xchg
int3
rcrl
ret
xor
xor
xor
daa
sub
push
jo
cltd
xor
adcb
das
sbb
inc
daa
inc
sub
xor
into
sahf
cs
imul
scas
mov
rcr
and
mov
pushf
cmp
xchg
bswap
shrd
btr
push
movzbw
xor
push
xadd
cmc
cmc
inc
mov
pusha
xor
bswap
mov
dec
cmp
mov
add
sub
lea
pushf
push
pusha
lods
inc
dec
sets
rcr
call
stos
pusha
push
pusha
pushf
lea
jmp
xchg
add
add
add
add
into
adc
add
add
notb
mov
adc
popl
add
adc
add
scas
adc
add
repz
negl
mov
inc
or
mov
loope
adcb
pop
lods
dec
imul
pop
dec
or
insb
sbb
lods
xchg
lea
repz
es
add
enter
aas
stc
lret
mov
push
mov
fwait
loopne
xor
or
mov
out
and
adc
mov
fcoml
jecxz
lods
enter
into
jb
in
cld
daa
cmp
cli
sti
lret
int3
mov
aas
mov
xchg
push
lds
jle
ja
jo
ss
cmp
popl
insb
xchg
stos
or
sub
mov
push
std
insl
cmp
clc
push
lds
das
cmp
aad
bound
push
mov
clc
loop
inc
nop
ds
out
leave
or
sub
aam
fwait
add
push
insb
or
int
lds
jae
cmp
dec
pop
or
jl
fs
and
sbbb
dec
outsb
mov
mov
ret
adc
or
imul
jge
ja
flds
cmp
test
pop
fidivrs
fistpll
push
aad
out
mov
or
xorl
lret
std
rcrb
and
push
test
je
repnz
dec
fdivrs
or
shrb
inc
pop
fiadds
sbb
lcall
test
mov
sbb
xorl
xchg
xchg
push
sub
mov
ds
hlt
jo
sub
jne
icebp
jmp
push
fnstsw
gs
mov
dec
not
mov
ret
cli
push
es
mov
xchg
leave
test
lea
sub
xor
xchg
cmpsl
jns
push
pop
mov
mov
int3
inc
data16
repz
addr16
test
jo
jns
add
lods
loop
or
sub
daa
dec
push
inc
call
pushf
lea
call
pusha
call
cwtl
inc
inc
mov
mov
mov
cwtl
leave
cltd
or
cli
stos
push
add
pop
leave
test
sub
cmpsb
xor
fstpl
xchg
in
sbb
cli
cmpsl
arpl
lods
push
jbe
rolb
movsb
xchg
fisubrs
adc
pushf
xlat
mov
mov
shlb
push
pop
test
arpl
jmp
mov
adc
sub
mov
cli
scas
mov
jp
xor
imul
lea
lea
pusha
call
fwait
mov
aas
push
rolb
inc
hlt
inc
lret
mov
loopne
aad
cmp
push
out
scas
mov
mov
mov
sub
out
push
dec
sbb
jne
xlat
jmp
push
aaa
sbb
in
mov
addr16
cs
inc
dec
icebp
and
ffree
das
sub
sub
call
shlb
add
movsb
mov
mov
jl
xlat
test
enter
cmc
not
and
sbb
xor
pop
testb
adc
dec
sbb
mov
pushf
stc
pushl
sub
stc
cmc
test
repnz
pusha
push
lea
jne
bsf
adc
add
pusha
mov
pusha
shl
sub
lea
call
or
or
in
mov
sub
out
inc
mov
fadds
push
xchg
addr16
cmp
enter
mov
aam
pop
insl
aas
arpl
fs
xchg
cmp
lds
inc
lds
stc
repz
sub
fdivs
push
scas
adc
lcall
adc
jmp
lods
push
popw
fdivrs
adc
enter
mov
mov
jge
inc
test
push
xorb
das
adc
loopne
pop
cs
outsl
pop
jg
push
loopne
rol
loope
jbe
orl
pop
xor
sti
cld
test
jns
add
push
pusha
mov
lds
sbb
int3
or
mov
popf
je
and
mov
das
sub
sbb
aaa
adc
push
cmp
je
mov
lahf
push
mov
js
cltd
in
decl
or
add
pusha
lea
call
cmp
jmp
call
mov
mov
xchg
push
inc
push
cmp
sti
cld
nop
aad
cli
lret
movsb
aad
test
ficomps
fstpl
stos
sbb
scas
out
and
add
mulb
xchg
fwait
inc
add
cvtps2pi
push
push
and
sbb
push
cmp
repnz
cmc
lret
outsl
and
ja
xor
fidivrs
ljmp
dec
or
into
mov
dec
out
xchg
daa
fwait
outsl
movsb
mov
es
faddl
stc
pushf
mov
call
push
lea
ja
cmc
clc
clc
imul
bt
jmp
shrd
shl
shld
sbb
add
dec
movzbw
shr
xadd
stc
adc
dec
mov
or
jmp
call
lea
mov
mov
call
jmp
cmp
push
imul
ja
enter
nop
cmp
mov
pusha
adc
icebp
adc
and
mov
lcall
popf
cwtl
or
pop
push
push
mov
rcll
mov
xor
add
pushf
push
push
ror
and
push
jns
imul
mov
aaa
pop
out
cmp
add
scas
pop
mov
mov
pop
jo
mov
pop
cld
inc
aad
pop
mov
sub
add
jg
ret
addr16
btc
pushf
sar
neg
mov
cmc
cmp
cmp
bt
cmpb
push
lea
js
jne
sbb
sub
jmp
pop
pop
cmpb
jp
pop
das
pop
int3
push
pop
jnp
jnp
lahf
cmp
test
xchg
hlt
add
cwtl
dec
enter
cmp
repz
jl
aam
or
xchg
loopne
pop
mov
pushf
dec
inc
mov
in
mov
aas
in
dec
mov
add
jmp
insb
fmull
sbb
lea
mov
jne
icebp
xor
push
outsl
sbbl
fs
push
pop
jmp
sbb
test
fidivs
dec
int3
xchg
and
andb
cmp
leave
mov
out
arpl
xchg
repz
sub
xchg
pop
into
mov
fisubl
scas
sbb
mov
setg
shl
not
mov
clc
pushf
repnz
pusha
call
push
jae
mov
push
out
mov
enter
test
fidivl
jg
pop
scas
rcll
clc
mov
sub
jg
mov
cmp
in
cmp
lea
rolb
or
mov
repz
cmp
cmpsb
es
mov
mov
nop
roll
ljmp
test
out
jae
cltd
aaa
test
imul
lahf
iret
xlat
sti
std
popf
jne
or
insl
std
jl
inc
cmc
or
mov
les
xchg
ss
or
sti
pop
test
adcl
lea
jmp
cmp
pop
fnstsw
mov
fs
cwtl
push
fldt
jle
inc
loopne
mov
and
cmp
mov
or
inc
fstps
addb
cmpsl
cmpsl
add
sahf
nop
pop
cmp
xchg
push
mov
jle
fmulp
andps
aaa
dec
lods
xlat
fcomps
sub
inc
roll
andl
lret
test
cmp
adc
push
add
add
in
in
imul
jno
xor
stos
and
mov
sub
repnz
movsl
mov
mov
decl
into
jnp
ljmp
push
in
mov
pushf
lea
jmp
setb
lods
jmp
shl
mov
add
rcl
pusha
bt
ror
mov
jmp
dec
stc
mov
sar
jmp
lea
ja
call
pushf
call
lahf
ret
xchg
push
inc
test
cmp
pop
fmull
jg
or
mov
cs
ds
xor
je
dec
lock
test
fucom
lods
sbb
adc
fimuls
push
repnz
and
ds
iret
jl
and
jbe
in
mov
sbb
idiv
or
adc
dec
sbb
push
push
das
lahf
ret
sti
js
mov
push
loope
das
or
jbe
mov
add
mov
and
mov
add
call
shl
mov
push
sti
cld
int3
std
scas
cs
mov
je
mov
push
in
sub
in
dec
xchg
xchg
mov
pop
and
aaa
mov
cmp
cmp
out
add
jb
jns
xor
mov
insl
das
movb
dec
aad
frstor
xlat
lret
mov
mov
xor
push
sub
insb
jno
sub
inc
jmp
in
lods
andl
pusha
lea
jb
push
mov
cmp
cmpb
pusha
pushf
lea
jne
sub
mov
push
add
call
lea
je
pusha
push
pusha
pushf
lea
jmp
call
jmp
movl
pushl
bswap
cwtl
lea
lea
push
pushf
movl
pushf
pushf
pushl
popl
movb
pusha
movb
pushl
ret
xor
pushl
cmp
repnz
pushf
pushf
mov
lea
jne
shl
shl
mov
bsf
sub
test
mov
cmp
sub
cmp
call
movb
add
movw
pushf
pushf
lea
jmp
push
lock
std
std
mov
xchg
push
ret
dec
lock
ret
int
mov
adc
lret
shlb
pushf
pop
jge
dec
in
pop
dec
inc
xchg
and
aam
pop
movb
aad
adc
test
mov
xchg
and
mov
adc
in
xchg
push
inc
lods
mov
xchg
add
add
add
enter
fiadds
movsbw
btr
mov
pushl
xor
movb
cmp
repnz
movb
push
lea
jne
cmc
shld
lea
bts
mov
sub
btc
bsf
sub
ror
rcl
call
mov
dec
mov
stc
mov
ror
jmp
jne
icebp
mov
push
sbb
sub
lret
push
mov
push
lods
push
sbb
mov
or
iret
daa
pop
pop
mov
push
fstpl
push
lcall
add
test
jmp
sub
lock
js
stos
out
sbb
pop
dec
inc
push
lods
fstpl
mov
arpl
cmp
int
inc
mov
in
jge
in
push
and
jno
sub
js
into
cmp
outsl
shl
or
adc
mov
clc
call
call
test
push
dec
in
popf
jge
mov
mov
andb
push
jmp
jp
xchg
fwait
push
cmpsb
je
test
jns
inc
hlt
add
mov
xchg
mov
cmpsl
and
sub
ds
add
in
push
nop
in
xchg
insl
push
ret
iret
push
ret
lret
dec
mov
scas
inc
mov
inc
je
sbb
and
pop
jg
xchg
mov
mov
outsb
mov
out
movl
cmp
call
neg
btc
mov
stc
clc
cmpb
call
jmp
movb
lea
jae
pusha
pushf
pusha
lea
jne
pusha
stos
mov
lea
jmp
pushf
das
mov
daa
sub
jmp
pusha
pusha
pushf
jmp
add
inc
gs
outsl
fs
gs
imul
add
adc
mov
push
xchg
clc
stc
fstps
cmp
sub
cwtl
fdivs
jnp
movl
lods
lahf
sarl
fcomp
jb
outsb
in
pop
fisttpll
cmp
jae
and
loope
add
jecxz
jecxz
mov
cmp
mov
mov
push
hlt
test
lock
sbb
test
hlt
xor
jnp
lea
dec
mov
push
mov
mov
mov
stc
xor
mov
pop
jg
ficoml
insl
pop
mov
nop
sbb
mov
pop
enter
sub
xor
shrl
mov
mov
and
test
mov
mov
or
enter
jns
hlt
pushf
mov
jp
ret
ror
jmp
movb
mov
call
bt
rol
clc
test
clc
mov
xor
cmc
mov
movw
cmp
pushf
bswap
lea
movzbl
mov
movb
push
pushf
lea
ja
call
jno
cmc
scas
xchg
push
pop
divl
aaa
out
idiv
sbb
or
out
jmp
jl
scas
mov
dec
mov
fstpl
xchg
out
sub
jp
mov
fldcw
nop
add
mov
push
xor
xor
ja
add
out
add
cli
sbb
cmp
sarb
adc
out
cmpsb
pop
mov
xor
lock
rcll
xor
cwtl
pop
add
ja
fdivs
and
sbb
out
push
iret
dec
xchg
sub
mov
or
sub
clc
stc
push
bt
sub
mov
sub
jp
pushl
test
cmp
push
jmp
movzbw
push
bsf
pop
mov
jo
pushf
cmpb
push
jmp
mov
mov
mov
roll
pop
sub
lahf
cmp
push
stos
fistpl
imul
in
mov
bnd
adc
rol
inc
sub
insl
inc
and
adc
lods
scas
movsl
cltd
shlb
cmp
testb
push
out
mov
inc
dec
and
add
ret
mov
push
sub
cwtl
cld
rcl
sahf
repnz
arpl
sub
push
into
xor
call
movb
push
push
pushl
pushl
ret
pusha
pushl
lea
ja
jmp
jmp
jmp
call
bsf
mov
push
and
lea
ja
pushf
clc
stc
add
lea
cmc
add
pusha
jmp
pushl
call
movw
lea
call
pusha
lea
jae
jmp
ljmp
and
push
pop
pop
xchg
pop
clc
enter
sub
cmpsl
adc
sub
pushf
dec
xchg
sbb
lahf
sbb
es
xor
nop
addb
rclb
jl
sub
and
stc
jecxz
push
ret
in
mov
mov
push
loope
cltd
dec
stos
push
ljmp
pushf
mov
popf
dec
mov
adcb
mov
pop
adc
mov
pop
scas
cmpl
fwait
in
ljmp
shll
push
jmp
call
mov
pop
call
mov
push
pop
nop
pusha
lock
shl
adc
xor
aaa
insb
lahf
cmp
push
push
xchg
inc
xor
inc
daa
dec
cmp
fsubrp
mov
or
push
repnz
aas
bound
popa
mov
ret
and
int
jle
imull
repnz
jl
sahf
cmp
dec
pop
lret
inc
mov
cwtl
sub
repnz
loop
jne
add
dec
xor
out
mov
jnp
outsl
repz
adc
cmp
repnz
cmp
addr16
je
loop
mov
test
cmc
stc
stc
cmc
or
call
pushl
mov
push
pushl
mov
movsbw
mov
pop
pusha
mov
push
push
pushl
ret
lea
jne
mov
mov
bt
call
cmp
mov
sbb
push
lock
cs
std
mov
ljmp
ret
mov
inc
adc
sub
dec
mov
jg
mov
jge
bound
push
cltd
jns
stos
xchg
push
pop
hlt
and
adc
inc
movsb
dec
mov
xchg
jl
adc
push
cmp
mov
pop
mov
sbb
adc
fwait
out
mov
sub
aaa
aad
popa
push
add
adc
xor
mov
adc
mov
rdmsr
ror
cmp
and
cs
pop
push
ljmp
ss
mov
mov
ret
mov
jg
pop
in
mov
fst
shl
addb
xchg
push
cmc
es
js
stc
rolb
dec
cwtl
mov
lds
sub
ljmp
jnp
pmulhuw
bound
je
daa
pop
cmpsl
adc
push
adc
and
adc
push
xchg
xchg
inc
fimuls
sub
into
movq
adc
dec
mov
les
fisttpl
or
pop
adc
or
jnp
iret
sub
hlt
je
xor
sub
ret
aas
cmp
ret
xlat
aaa
mov
loope
rclb
cmp
cs
add
arpl
mov
pop
into
stos
jp
mov
lcall
ljmp
sti
stos
jp
jbe
sbb
push
aam
leave
mov
cmpsl
test
or
std
and
or
mov
cltd
dec
pop
sub
loopne
inc
out
xor
and
pop
pop
mov
pop
pushf
shrb
inc
adc
xor
dec
iret
arpl
or
movl
pop
jnp
popa
stos
xchg
push
fwait
cmp
sti
imul
popf
inc
in
shl
push
jmp
pop
jle
push
push
lods
dec
imul
lahf
je
jmp
andl
scas
mov
ss
aas
add
sti
xchg
cmpsb
adcb
icebp
movsl
stc
insl
shll
push
dec
mov
fst
pop
imul
stos
xchg
push
mov
stos
sub
lods
pushf
outsb
add
aas
out
adc
and
ljmp
and
cmp
gs
or
or
punpcklwd
mov
push
cmp
sahf
dec
outsl
mov
jge
ret
stc
sbb
fs
xor
mov
mov
mov
push
daa
pop
push
mov
int
inc
ficompl
inc
fsubl
push
jle
les
mov
push
xor
adc
movsb
je
cmp
mov
fwait
out
dec
das
inc
arpl
add
sti
scas
mov
cmpsl
enter
fidivs
mov
push
gs
arpl
mov
xchg
xor
or
sub
cmpsb
loopne
loopne
jo
pop
das
pop
test
jecxz
push
ret
ja
jg
pop
dec
sti
pop
jo
lcall
fsubrs
fcomi
popf
xchg
pusha
and
in
faddl
cmc
or
roll
mov
in
fsubs
push
or
loope
add
arpl
enter
mov
imul
dec
scas
pop
jl
inc
pop
and
push
pop
mov
cmp
lahf
in
adc
sbb
dec
iret
stc
sbb
xchg
mov
sbb
clc
mov
xchg
outsl
out
jo
icebp
nop
popa
aaa
sub
shl
sbb
xchg
jmp
test
jge
sbb
pop
or
scas
mov
sbb
je
mov
es
hlt
clc
pop
repz
jb
ret
in
mov
sbb
mov
out
aam
jnp
mov
mov
pusha
mov
pushl
push
movb
pushl
ret
pushf
pushf
movl
call
pop
lds
sub
fnstsw
jge
jle
aas
xorb
jg
push
or
cmc
decl
lahf
repnz
pop
imul
roll
and
shl
mov
add
mov
add
mov
xchg
fwait
stos
scas
ret
xorb
into
push
xchg
aas
lods
stc
xchg
mov
xchg
fsubrs
jmp
rclb
mov
rcrb
test
jmp
jle
shr
btr
shr
mov
push
bt
add
push
movzwl
neg
pushf
cmp
mov
pushf
push
cmc
pushf
add
pushf
pushf
jmp
cli
sbb
nop
jo
mov
repnz
sub
cld
jl
rol
or
dec
sti
stc
jbe
mov
adc
rorl
cmp
mov
xchg
xchg
push
jmp
or
xor
scas
push
lahf
dec
mov
mov
cli
aas
adc
lea
subl
or
je
cmp
testb
and
sub
repz
cli
push
adc
and
sub
pushf
pushf
pushf
pushf
mov
pushf
pushl
pushf
pushl
pushl
ret
pusha
movb
pushf
lea
jbe
pushf
bsf
clc
pusha
sub
lea
and
xor
inc
mov
lea
rcr
btr
cmc
test
mov
rcr
bswap
jle
add
xchg
shr
movsbl
jmp
sub
xchg
push
arpl
push
mov
xor
inc
push
jbe
lret
loopne
pop
iret
lretw
movsl
cmpsb
push
add
ja
movsl
or
lods
cld
jle
repnz
sbb
popf
je
mov
mov
push
js
mov
push
test
cli
clc
lcall
lret
sub
mov
jg
push
int
ss
sub
xchg
leave
dec
inc
push
push
mov
stos
push
xchg
pop
sub
push
jb,pt
dec
mov
and
ficomps
data16
push
cmpsw
mov
out
inc
jge
xorb
stos
push
mov
rep
pop
repnz
mov
xchg
pop
mov
sub
xchg
pop
xadd
scas
out
adc
mov
pandn
jle
mov
loopne
loop
or
ret
call
int
scas
lahf
testl
mov
lods
repnz
pusha
call
mov
movsl
xchg
push
in
test
mov
enter
pop
lret
lds
sub
push
loope
add
cmp
xchg
sub
jecxz
arpl
and
mov
adc
stc
lahf
mov
mov
mov
mov
in
adc
stos
or
or
mov
and
scas
mov
lock
lods
es
mov
sub
int
pop
sub
push
iret
mov
jne,pt
test
ljmp
outsl
dec
fwait
dec
fisubrl
outsl
shll
lods
and
dec
imul
in
sub
mov
shrb
sti
cmp
neg
shr
add
rol
lea
bsr
btr
mov
cmc
cmc
shr
mov
test
push
repnz
call
jmp
pusha
lea
call
clc
sub
pushf
pusha
movw
push
lea
jne
pusha
lea
call
pusha
pushf
lea
jmp
lea
jb
pushf
clc
jmp
mov
push
ss
sbb
or
lcall
arpl
mov
mov
mov
jbe
jnp
les
data16
rorl
ficomps
add
jbe
push
jbe
lret
xor
mov
xor
sbb
mov
dec
push
dec
rclb
das
or
lock
xchg
cli
cmpsl
inc
leave
xor
pusha
shrb
addb
mov
pop
mov
aad
jecxz
or
xor
and
stc
bt
add
push
pushf
pushf
lea
jmp
pushf
test
cmp
lea
jl
pusha
pushl
lea
jae
push
mov
test
jmp
jmp
pushf
repnz
pusha
mov
lea
jne
movsbl
movb
jmp
inc
push
mov
sti
imul
cmp
mov
outsb
push
pop
cs
test
bound
xchg
movsl
push
movsl
enter
movsl
insl
out
dec
in
lods
outsb
in
outsb
push
lahf
dec
mov
int
lods
inc
aaa
ds
aam
nop
or
popf
fs
testb
dec
sub
dec
lahf
inc
mov
mov
cmp
lea
cwtl
push
outsb
and
stc
push
and
or
pop
popf
xchg
gs
mov
jmp
lea
ja
push
sub
btr
add
add
bts
bts
shld
rol
mov
ror
adc
cmp
add
mov
stc
jmp
pusha
lea
je
jmp
cld
pop
push
xchg
push
xchg
and
xor
test
xchg
dec
sbb
cmp
into
or
fstpl
sbb
push
mov
jmp
ljmp
mov
cmp
ljmp
addr16
inc
cmpsb
mov
mov
hlt
and
cmp
and
lea
adc
lcall
or
mov
call
cmp
mov
sbb
pop
sbb
adc
repnz
add
ss
jae
imul
dec
jl
pop
addr16
test
fwait
inc
jmp
cmpsb
or
pop
shl
sahf
out
push
mov
mov
jae
lret
dec
and
mov
xor
ret
adcl
pop
adc
mov
daa
mov
add
les
jmp
lea
call
call
xchg
inc
inc
mov
out
mov
leave
lret
lret
dec
adc
or
int
out
mov
lods
pop
mov
stc
arpl
inc
inc
ja
mov
sub
nop
lea
mov
das
inc
pop
xor
push
adc
xchg
dec
pop
mov
cli
push
push
notl
faddl
icebp
out
js
cmp
xor
into
icebp
cwtl
mov
push
add
es
mov
daa
ds
ret
mov
lea
fimuls
into
fistps
je
punpckhwd
lahf
sub
inc
repnz
xchg
sub
popa
fstpt
cmp
imull
mov
aam
push
and
xor
scas
fsubrs
icebp
popa
cmp
dec
mov
pop
mov
cmp
xor
aaa
cmp
mov
pop
lods
imul
mov
mov
cmpsl
xorl
xlat
sub
sbb
inc
cmpsb
push
sti
jnp
push
and
test
cmpb
pusha
lea
jne
aaa
sub
sbb
mov
rcl
dec
shl
shr
add
sar
not
mov
cmc
bt
call
test
stc
add
bt
clc
movzwl
shrd
mov
clc
clc
add
push
mov
pusha
movb
add
js
test
pushf
push
push
lea
je
cmp
add
bt
call
pushf
lea
jbe
xchg
sub
push
mov
setno
mov
add
movsbl
add
cmc
adc
movsbw
bsf
shr
bsf
mov
rcr
add
pusha
mov
call
pushf
lea
jne
stc
not
rcl
xor
pushf
sar
mov
bt
add
neg
neg
neg
and
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
mov
push
call
xorl
lahf
xchg
push
inc
pop
ja
test
cli
jbe
add
adc
negl
mov
xor
xchg
inc
shlb
shrl
call
pop
and
sbb
mov
lret
fstps
leave
lret
and
test
sbb
jo
push
fbstp
fildll
or
test
xchg
xchg
cmp
push
cmpsb
jmp
cli
mov
adc
fildll
repz
clc
iret
jmp
mov
test
cld
or
ss
mov
push
xchg
mov
pop
or
sub
mov
fdivs
imul
ds
mov
fs
sub
pop
addr16
test
shrb
aas
push
cmp
cmc
jmp
mov
adc
and
push
mov
lea
jp
pop
mov
pop
jmp
xor
lea
pusha
push
call
clc
cmc
or
call
pushf
pusha
lea
jb
test
call
jg
pop
sahf
xchg
push
adcb
repnz
add
and
in
mov
mov
sub
in
scas
jle
inc
or
je
movsb
mov
mov
jge
jb
push
rcrl
popf
sahf
repnz
add
out
sub
out
ret
aaa
mov
adc
cwtl
lods
pop
hlt
daa
daa
das
xchg
jg,pt
push
dec
push
sub
jge
bt
pushf
cmp
push
lea
jb
pusha
cmp
push
lea
jae
clc
movsbl
movzbl
call
jmp
xchg
bswap
movsbw
cwtl
pushl
popl
mov
not
cwtl
push
lea
movsbw
push
pushf
pushf
call
repnz
xchg
mov
mov
xchg
inc
loope
cmp
orl
xchg
data16
xlat
clc
call
dec
mov
pop
shl
loopne
dec
loopne
scas
cs
das
clc
cmp
sbbl
clc
int3
lret
sub
outsb
mov
push
pushf
pushf
movl
jmp
push
lock
std
std
mov
int3
ret
jns
dec
fxch
lds
jge
addr16
pushf
mov
pop
scas
ss
adc
or
mov
and
aam
pop
into
add
loope
and
test
fstpl
add
inc
push
movsb
xor
xchg
push
cmpsl
mov
outsl
sub
mov
les
and
enter
inc
cmp
pusha
mov
lea
jae
jbe
btr
mov
add
pusha
add
and
btc
movb
neg
mov
shr
jmp
das
push
aaa
pushf
xchg
push
xlat
or
fucomi
add
and
or
pop
jns
jns
insl
cmp
or
stos
loopne
inc
test
inc
inc
or
in
dec
inc
imul
dec
push
lcall
dec
fiadds
addr16
sbb
arpl
and
sti
js
mov
rcrb
rcl
or
mov
mov
das
loope
gs
fwait
xchg
push
stos
dec
jl
mov
pop
sahf
dec
sahf
scas
jae
mov
cmp
mov
fs
push
mov
gs
into
adc
dec
ja
mov
jno
jbe
lcall
and
cmp
data16
and
aam
cmpb
movsb
cmc
out
push
sti
or
cli
or
dec
mov
lods
iret
push
xchg
push
repnz
aas
lods
in
incl
xchg
data16
dec
ljmp
cwtl
frstor
mov
jno
fucom
jg
mov
sti
pushf
jmp
push
pushf
jmp
andb
adc
aad
frstor
pop
or
cli
cmpsl
out
adc
inc
adc
shl
adc
bound
and
adc
sub
and
lret
aas
shll
cmpsb
js
fnsave
cmp
xchg
subl
mov
adc
xchg
push
in
push
xchg
mov
jl
push
or
std
movsl
adc
pop
xor
lahf
mov
add
mov
fsubs
mov
cmp
xchg
mov
mov
push
sbb
mov
or
pop
jg
ficomps
sbb
aam
shlb
or
rcr
xchg
mov
sbb
dec
push
pop
scas
mov
leave
lods
push
jbe
fimuls
mov
setae
test
insl
jmp
stc
jmp
cmp
clc
cmp
push
lea
jb
pusha
cmp
cmp
cmp
movw
call
movb
mov
push
pusha
pushl
pushf
pushl
ret
sub
push
pop
mov
jg
inc
add
bound
iret
in
mov
cmpb
aam
push
mov
and
adc
in
xor
push
xlat
test
and
sahf
arpl
mov
cmp
popa
test
in
fdivl
xor
xchg
fidivrl
xchg
aas
push
cltd
pop
inc
in
sub
cld
sub
cmp
cltd
xchg
push
scas
aas
das
incl
add
xchg
ret
push
cmp
xchg
dec
out
jns
scas
outsl
xchg
dec
cmp
jecxz
lcall
sub
iret
dec
sarb
aas
shrb
ljmp
sub
mov
addr16
mov
xlat
add
jns
adc
push
mov
mov
ja
mov
pushf
mov
or
outsl
and
pop
push
jae
test
ljmpw
mov
shld
stc
inc
shrd
sub
bts
bswap
inc
lea
lea
cmc
jmp
push
clc
sub
cmp
call
shl
xchg
cwtl
xchg
push
or
sahf
pop
mov
xorl
imul
lahf
test
xchg
push
ja
and
enter
fists
inc
jmp
mov
mov
lds
mov
out
fisubs
fildll
lahf
aam
dec
xor
scas
rorl
pushf
pusha
adc
lea
in
dec
imul
xchg
pop
ja
out
mov
or
lret
imul
mov
out
push
push
daa
sti
pop
push
sub
mov
das
leave
stos
mov
popa
push
div
add
xor
loopne
mov
popl
fstpl
rcrl
or
andl
inc
mov
aaa
sub
push
xor
ret
icebp
mov
in
dec
call
stos
mov
fsubp
ja
nop
lds
add
adc
sbb
rol
inc
and
mov
push
movl
pusha
pushf
mov
lea
jmp
icebp
adc
xchg
xchg
push
xchg
pop
ja
ja
or
stc
fldcw
imul
lds
push
cltd
cmp
jmp
pop
pushf
fiaddl
ret
mov
push
fwait
push
fists
lahf
mov
sahf
arpl
orb
xchg
mov
es
push
cmp
sub
sbb
adcl
in
and
inc
xor
xchg
push
sbb
scas
scas
lock
popa
xchg
fs
les
jmp
dec
add
ret
mov
sahf
outsl
das
scas
decl
mov
js
loopne
sar
lock
frndint
popf
jmp
adc
ss
and
jo
addl
cmpsl
fwait
out
mov
mov
pushf
sbb
cmc
sbb
in
mov
gs
inc
lcall
xor
adc
xchg
push
ss
inc
out
iret
addb
icebp
adc
dec
in
les
sub
test
sub
popa
loope
inc
push
add
xor
aam
jl
sub
pop
pop
jnp
incw
jns
xacquire
cld
lods
mov
adc
mov
mov
sbb
je
add
sbb
add
mov
fnstsw
nop
bound
add
push
sbb
stc
jmp
loop
rclb
adcl
rcrb
dec
sbb
dec
add
stos
ds
pop
popf
add
imul
push
push
pushf
lea
jmp
aam
or
mov
and
test
push
aad
dec
inc
push
mov
fldl
hlt
pop
out
jge
and
mov
mov
xor
mov
daa
or
pop
aam
xchg
imul
je
pusha
mov
dec
mov
in
and
pop
data16
xchg
jle
enter
aam
cmp
inc
fistpl
callw
dec
loope
stc
inc
mov
call
leave
jbe
xchg
xchg
push
lret
pop
stos
cmp
dec
push
push
outsb
push
xor
fcoms
shlb
push
mov
jmp
adc
inc
inc
pop
js
sbb
dec
jo
lds
sbb
mov
lea
mov
lea
mov
adc
hlt
add
sbb
dec
insb
imul
pop
lret
ss
xor
jae
inc
lods
xchg
mov
cmp
leave
in
jno
in
int
add
int3
push
inc
test
and
and
dec
adc
fdivrs
decl
xchg
xchg
xchg
push
imul
outsl
pop
iret
dec
fistpll
xor
jb
imul
push
add
hlt
add
movsl
cmc
jbe
arpl
push
jae
pop
pop
sbb
and
inc
sbb
dec
iret
jl
mov
mov
roll
fnsave
sbbb
jmp
jnp
or
test
pushf
jo
imul
xor
sub
jmp
jns
sub
pusha
movl
jmp
jne
pushf
call
cmp
movb
call
push
js
xchg
xchg
push
jmp
lret
fwait
pushf
sbb
sub
jle
mov
xchg
jb
inc
add
leave
test
lahf
fstps
cmc
jbe
pop
and
and
lahf
lea
xor
in
fidivrl
inc
lret
xchg
adc
push
and
lods
roll
jo
xchg
mov
pusha
in
or
test
aad
jno
dec
lock
clc
mov
inc
xchg
xchg
push
enter
sub
fidivrl
pushf
lea
data16
dec
popf
push
adc
mov
sbb
xchg
js
ret
outsb
add
rcll
mov
pusha
pushf
lea
jmp
test
mov
fmul
pop
int3
dec
lods
insb
insl
sahf
ds
dec
pushl
jl
es
cmp
in
cmp
lahf
and
lea
subl
pop
ds
rcrl
cltd
inc
nop
outsl
add
jb
mov
and
ret
mov
fdivr
and
and
mov
pop
fiadds
imul
lcall
lods
lock
xor
push
and
rcr
es
les
adc
sub
push
out
xor
jb
push
into
mov
jecxz
xchg
push
adc
insb
add
movsl
jle
xchg
mov
sub
je
gs
cld
add
sub
outsl
sub
inc
rorb
mov
lret
mov
pop
mov
stos
cmp
imul
movsb
push
outsb
inc
add
xchg
adc
out
cwtl
ret
out
movsl
mov
xor
mov
pop
sub
and
cmpb
aad
xchg
lds
jmp
popf
pop
sbb
and
negl
nop
xlat
inc
call
loop
mov
xchg
aaa
jecxz
sbb
sub
adc
ret
sbb
aam
xchg
leave
jnp
dec
sbb
int
imul
jmp
ficoms
mov
jmp
push
lea
ja
jmp
xchg
add
add
add
add
into
adc
add
add
notb
mov
adc
popl
add
adc
add
scas
adc
add
add
push
call
mov
pushf
lea
jmp
push
lea
jmp
pushf
call
pushf
sub
cmp
test
test
call
shl
call
call
jmp
pusha
jmp
mov
jmp
jmp
pushf
mov
jmp
jmp
rol
mov
test
stc
push
add
jmp
mul
pushf
pushf
pushf
push
mov
movw
mov
jmp
mov
jmp
movl
mov
jmp
lea
jl
pushf
mov
pusha
pusha
push
pushf
popl
mov
lea
jo
push
pushl
popl
pushf
pusha
movw
pushf
lea
jmp
mov
pushf
lea
movb
movb
mov
movw
lea
jmp
sbb
rcl
neg
movsbw
movsbw
rcr
ror
btc
jmp
cmp
cmc
movw
mov
call
add
pusha
movb
pushl
mov
push
mov
lea
jmp
call
inc
mov
movzbl
sets
mov
stc
pusha
test
pushl
sub
jmp
lahf
not
jnp
lea
mov
jl
push
mov
pushf
call
pushf
call
rcl
mov
stc
das
add
pop
shl
shr
sar
cltd
pop
call
call
add
call
sbb
shr
mov
add
cmp
stc
mov
test
stc
test
pusha
add
call
pusha
pushf
mov
push
call
push
mov
sub
jne
cmp
or
call
stc
cmc
jmp
jmp
pusha
movw
mov
push
push
jmp
cmp
pusha
shr
test
stc
test
or
pusha
xor
jmp
pushf
popl
call
call
test
xor
mov
shl
push
shl
adc
mov
pushf
call
mov
jmp
bt
pushl
cmc
sub
pusha
pushl
pushf
stc
ror
test
add
jae
cmp
push
add
push
stc
call
pushf
pusha
jmp
pushf
mov
pushf
movb
pushf
lea
jmp
cmp
movb
mov
stc
jmp
add
pusha
sub
pusha
lea
call
jmp
pushf
pushf
pushl
popl
movb
movb
movb
mov
lea
jmp
pushf
stc
sub
movl
push
mov
pushf
push
movl
pushf
lea
jmp
aaa
mov
bt
bsf
aas
shl
mov
sar
setp
inc
adc
mov
push
stc
sub
movl
jmp
rep
shl
mov
movsbw
bsf
mov
test
pushl
popf
movw
lea
jmp
stc
aas
ror
mov
push
mov
pusha
test
not
cmc
call
mov
mov
movw
pusha
mov
push
lea
jmp
jmp
cmp
xor
stc
sub
pusha
stc
clc
pushf
ror
jmp
pop
mov
lea
xchg
repz
popl
add
pop
bts
pushl
popl
shld
pusha
xor
bt
movl
cmc
movw
mov
push
xor
ror
sub
test
bswap
adc
neg
xor
shl
shl
lea
neg
test
sub
shl
mov
bts
shl
mov
test
neg
movsbw
shrd
add
cmp
adc
mov
cmc
rcl
sub
neg
stc
movzbw
sub
sub
btr
btc
add
movzbw
bswap
not
xor
xor
sub
bsf
jmp
inc
neg
movzbl
pusha
sub
je
pusha
xor
jmp
jmp
pushf
popl
jmp
add
add
not
cmc
stc
clc
bt
sub
pusha
lea
jno
ror
call
setb
sub
shl
call
sub
call
pusha
lea
push
cmc
cmc
pushf
sub
movw
mov
pushl
mov
pushl
lea
jmp
push
mov
pushf
pushl
popl
mov
pushf
lea
jmp
movb
jmp
movb
mov
pushf
pushf
popl
movb
pushl
pushl
popl
push
pushf
mov
lea
jmp
stc
pushl
add
pusha
mov
push
mov
mov
lea
jmp
bt
mov
call
not
mov
jmp
divl
push
mov
pusha
movb
mov
movw
pusha
mov
pushl
pushf
popl
mov
jmp
jmp
clc
pushl
pushf
sub
jnp
cmc
add
std
cmc
popf
push
lea
jmp
push
mov
call
test
cmc
add
movl
lea
jmp
jmp
mov
mov
call
mov
jmp
fld1
pushf
pushl
lea
jmp
sub
call
call
push
jmp
mov
jmp
call
and
push
add
cmc
mov
test
stc
stc
cmc
add
jmp
pushf
jmp
push
mov
pusha
push
mov
jmp
shl
jmp
push
mov
pusha
lea
jmp
mov
call
mov
sub
add
movb
push
jmp
mov
pushf
mov
movb
pushl
ret
jmp
movsbw
inc
bts
mov
inc
movzbw
clc
bt
mov
bt
add
pushf
pusha
jmp
aas
or
aad
mov
inc
bsr
lea
mov
jmp
cmc
clc
xor
test
movb
add
bt
mov
cmc
sub
jmp
sbb
shld
fnstsw
test
sub
pushf
pushf
mov
mov
push
lea
jmp
pushf
movb
pushf
popl
push
jmp
cmp
sub
call
jmp
rol
mov
cmp
bt
add
stc
call
xor
stc
rcl
add
mov
bts
movsbw
adc
bt
xor
shrd
bts
dec
sub
rcl
ror
shld
clc
add
shl
xor
bts
movsbw
jmp
cmp
rol
aam
cmc
mov
mov
bsf
and
mov
cmp
cmp
push
pushf
add
jmp
neg
btc
test
movzbl
or
movsbw
shl
xor
push
inc
call
push
mov
pusha
pushf
pushf
push
lea
jmp
mov
jmp
pusha
jmp
push
pusha
mov
pushf
lea
jmp
movsbw
shr
jns
mov
test
pusha
sub
pusha
xchg
stc
add
jmp
add
pushf
pushf
pushf
pushf
mov
movw
mov
pusha
push
lea
jmp
push
mov
pushf
push
pushf
popl
mov
jmp
push
pushl
mov
call
mov
call
pushf
pushf
popl
jmp
mov
pushl
lea
jo
pusha
mov
push
lea
jmp
pushl
mov
movb
push
lea
jmp
pusha
call
xadd
dec
rol
pushl
popl
cmc
cmc
movl
bts
shl
bsr
push
mov
sar
shld
sub
bts
not
bsr
pushf
bswap
sub
movsbw
cmp
neg
shld
add
sar
or
lea
jmp
jmp
pushf
popl
call
cmc
add
clc
pushf
cmc
xor
call
mov
mov
push
call
push
pushl
call
call
xadd
mov
lea
mov
neg
neg
add
shl
xor
bts
mov
stc
test
test
test
shl
jae
clc
cmp
pushf
shr
pusha
pushf
jmp
call
call
pushf
imul
push
mov
mov
jmp
call
pushl
pusha
fildl
pushf
pushf
lea
jmp
and
call
pushf
mov
pusha
mov
pushf
lea
jmp
pushf
ror
clc
add
pushf
jmp
push
movb
mov
pusha
push
pushf
pushf
lea
jmp
push
movb
mov
call
shr
aas
mov
shl
shl
shr
mov
call
add
movzbl
sub
lea
mov
pushf
pushf
popl
cld
bswap
jmp
jmp
pushf
pushl
popl
movb
mov
lea
jmp
push
mov
test
inc
dec
rcl
mov
bt
test
push
bt
sub
pusha
jmp
pushf
dec
pushf
movsbw
movzbw
inc
inc
ror
ror
not
shl
xor
shrd
mov
add
shld
shl
sub
not
pushf
jmp
mov
push
lea
jmp
add
push
mov
call
mov
pusha
lea
jmp
pushf
mov
pushf
fldl
movb
pusha
lea
jmp
sbb
btr
lea
mov
shrd
rcr
mov
pushf
add
jmp
pusha
mov
movb
mov
pushf
call
jmp
pushl
pusha
mov
movl
push
pushf
lea
jmp
pusha
call
shld
mov
pushf
pushl
pushf
mov
call
pushf
lea
bt
test
sub
call
pop
pusha
lea
jmp
mov
pushf
lea
jmp
jmp
clc
stc
clc
call
sub
push
sub
rcl
test
and
cmc
bt
mov
jmp
call
mov
movb
pushf
jmp
mov
jmp
cmp
test
sub
push
movb
pusha
mov
push
pushl
mov
lea
jmp
mov
push
lea
jmp
call
pushf
pushf
call
pop
cmp
push
das
pop
cmp
push
mov
inc
cmp
push
negb
push
mov
push
loope
cmp
push
xor
aaa
cmp
push
fsts
push
xchg
xor
push
loopne
cmp
push
sub
imul
push
ljmp
push
fistpl
push
das
pop
cmp
push
sbb
xor
push
cmp
push
sub
push
xchg
xor
push
negb
push
ret
push
inc
xor
push
dec
push
cmp
push
ljmp
push
dec
inc
cmp
push
inc
inc
cmp
push
ret
push
pop
push
cmp
push
xchg
xor
push
sub
push
mov
push
inc
push
cmp
push
inc
inc
cmp
push
cmp
cmp
push
imul
push
xor
push
cmp
push
jb
cmp
push
mov
inc
cmp
push
loopne
cmp
push
das
pop
cmp
push
and
push
cmc
inc
cmp
push
pop
push
cmp
push
fidivrs
cmp
push
and
push
xchg
xor
push
rcll
cmp
push
negb
push
jae
cmp
push
in
cmp
push
xlat
pop
cmp
push
xor
push
cmp
push
jg
cmp
push
and
push
lds
push
sbb
cmc
inc
cmp
push
in
cmp
push
sub
push
mov
xor
push
xor
pop
cmp
push
inc
push
cmp
push
jae
cmp
push
loopne
cmp
push
or
cmp
push
fistpl
push
dec
dec
cmp
push
cmc
inc
cmp
push
xor
xor
push
xor
push
adc
cmp
push
inc
push
cmp
push
in
cmp
push
sti
xor
push
loopne
cmp
push
dec
inc
cmp
push
loopne
cmp
push
cmp
push
xchg
xor
push
jo
cmp
push
ljmp
push
imul
jecxz
cmp
push
enter
jb
cmp
push
xor
xor
push
inc
push
cmp
push
jae
cmp
push
fistpl
push
jl
cmp
push
sub
fsts
push
jecxz
cmp
push
mov
ss
push
inc
push
cmp
push
xor
push
and
push
inc
inc
cmp
push
inc
xor
push
fidivrs
cmp
push
sbb
inc
push
cmp
push
sbb
xor
push
cmp
push
imul
push
xchg
xor
push
out
cmp
push
jecxz
cmp
push
cmp
cmp
push
jg
cmp
push
inc
xor
push
movsl
cmp
push
sub
push
inc
inc
cmp
push
xchg
xor
push
fistpl
push
inc
inc
cmp
push
dec
cmp
push
dec
inc
cmp
push
jl
cmp
push
mov
dec
cmp
push
cmp
push
xchg
xor
push
jg
cmp
push
mov
cmp
push
enter
fbstp
cmp
push
ret
push
mov
dec
cmp
push
or
cmp
push
inc
inc
cmp
push
jb
cmp
push
push
aaa
cmp
push
arpl
push
jae
cmp
push
or
cmp
push
mov
inc
cmp
push
xchg
xor
sldt
adc
cmp
cmc
neg
mov
rcl
neg
cmp
mov
jmp
cwtl
mov
pusha
mov
pushl
mov
mov
mov
pusha
call
call
call
pushf
call
stc
cmc
dec
aam
mov
mov
not
mov
jae
bt
shl
cmp
mov
pusha
cmc
cmc
mov
add
bt
call
ror
or
lahf
mov
clc
sub
call
bt
shr
pusha
jmp
pusha
pusha
mov
pushf
jmp
add
clc
rcl
mov
call
lea
lea
rol
mov
bsf
add
bsf
sub
add
bsr
mov
pusha
cmc
xor
adc
sub
shl
sub
shl
add
rol
inc
not
test
cmp
sub
shl
shr
sub
cmp
movzbl
xor
mov
pusha
clc
bt
sub
jmp
mov
mov
push
lea
jmp
jmp
movw
pushf
popl
push
pushf
jmp
call
movzbw
cmc
mov
bswap
sub
mov
stc
call
call
jmp
push
pushf
popl
pushf
pushl
popl
pushl
mov
pushl
movb
lea
jmp
mov
mov
movl
movb
mov
jmp
cmc
cmp
pushl
lea
jne
mov
neg
not
xorb
movsbl
lea
movzbw
jmp
push
mov
pusha
movb
mov
mov
call
jmp
movw
call
pushf
bswap
not
mov
lea
call
ror
lea
movzbl
rcr
mov
clc
cmc
add
push
pushf
movb
pusha
lea
jmp
push
pusha
call
ror
clc
cmp
add
bt
test
sub
movb
jmp
adc
mov
cbtw
mov
cmc
jmp
jmp
pushl
pusha
mov
pushl
push
pushl
ret
lea
jg
pushf
pushl
popl
push
pusha
pushl
lea
jmp
cmp
stc
xor
push
push
xchg
pushf
push
pusha
push
movl
call
lea
jne
call
jmp
cmp
clc
sub
movb
pushf
mov
pusha
lea
jmp
das
das
cmc
mov
neg
sub
add
adc
mov
call
movw
mov
jmp
cmp
movzbl
pushf
cmc
add
jmp
fcompl
pushf
pushf
movb
lea
jmp
pushf
rcr
or
pushl
popf
push
mov
movsbw
mov
pop
lahf
mov
pusha
seta
not
pushl
mov
cwtl
mov
lahf
pop
mov
mov
movzbw
mov
mov
not
mov
push
movb
movb
pushl
ret
pushl
popl
pushf
push
lea
jmp
bt
movsbw
movsbl
mov
bt
stc
clc
cmp
add
pushf
lea
jmp
pusha
pushf
mov
movb
movw
pusha
call
ror
mov
cmp
call
pusha
sub
cmp
call
mov
pushf
pushl
pushf
pushf
mov
mov
jmp
push
call
call
mov
call
movb
mov
pushf
mov
call
clc
bt
xor
push
push
movw
mov
test
jmp
xchg
jmp
mov
mov
push
lea
jmp
pushf
popl
jmp
jmp
pushl
pushl
popl
pushl
lea
jmp
stc
not
jmp
sub
jmp
clc
rol
call
stc
push
sub
call
lea
jae
push
fstpl
movw
lea
jmp
mov
push
mov
lea
jmp
pusha
pushl
popl
movw
pushl
lea
jmp
pushf
mov
pushl
pusha
mov
lea
jmp
pushl
mov
jmp
pushl
pushl
lea
jbe
popl
push
lea
jmp
std
push
movsbw
mov
movzbw
not
push
lea
pushf
pushl
cld
jmp
push
push
pushl
fstpl
push
lea
jmp
jmp
call
mov
pusha
mov
movb
lea
jmp
pusha
pusha
mov
jmp
call
pushf
pushl
popl
mov
movl
movw
lea
jmp
call
mov
jmp
lea
je
jmp
pusha
pushf
call
pushf
popl
jmp
pusha
mov
movw
movb
lea
jmp
das
shrd
mov
stc
test
bt
sub
cmp
xchg
stc
bt
add
pushf
rol
bt
sub
cmc
cmc
sub
pushf
pushl
pushf
jmp
movb
imul
pushf
mov
push
push
movl
pushf
mov
jmp
pushf
call
mov
movl
push
mov
lea
jmp
jmp
call
lea
jne
jmp
mov
pusha
movl
movb
pushl
lea
jmp
pushf
jmp
pusha
mov
movb
pushl
ret
inc
bsf
rdtsc
rdtsc
bt
clc
sub
pushf
pushf
jmp
call
pusha
push
push
faddl
movb
lea
jmp
pushf
popl
pushf
pushf
jmp
pushf
cmp
cmp
sub
call
lea
jne
shl
pusha
bswap
setbe
mov
cmp
add
jl
pusha
mov
and
pusha
cmc
call
sub
jmp
call
push
mov
movw
jmp
clc
and
mov
cmp
mov
pushf
lea
jne
shld
cmc
jmp
mov
pushf
push
lea
jmp
adc
sbb
pushf
adc
movzbl
stc
adc
sbb
shrd
sub
bswap
jmp
pushf
mov
pushf
mov
mov
mov
push
push
lea
jmp
stc
sub
bt
pushl
pushl
cmc
and
pusha
pushf
popl
pushf
pushl
popl
push
pushf
push
push
lea
jmp
mov
mov
mov
lea
jmp
mov
call
push
movb
movb
mov
call
call
jmp
bt
rcr
lea
bt
cmp
pushf
mov
lea
ja
bswap
rcl
shl
lea
mov
ror
bsf
lea
xchg
shrd
stc
shld
sub
lea
lahf
lea
lea
shl
jmp
movb
pusha
pushf
mov
mov
jmp
pushf
lea
jle
pushf
jbe
pusha
push
pushf
pushl
popl
pushf
lea
jmp
stc
pusha
imul
movb
mov
pushf
jmp
mov
pusha
jmp
setbe
not
pushf
inc
cmc
rol
rol
push
bts
inc
xor
mov
mov
bt
cmp
clc
add
push
push
pusha
mov
movb
lea
jmp
mov
pushf
popl
movb
call
mov
pushl
call
mov
pusha
lea
jmp
mov
pushf
pushf
pushf
pushf
popl
jmp
popl
pusha
movb
movw
pusha
lea
jmp
dec
mov
movsbw
test
mov
pushf
clc
sub
call
push
mov
cmc
cmp
pushf
call
stc
add
test
xor
lea
jns
lea
push
cmc
cmp
pushf
sub
pusha
mov
movw
lea
jmp
call
jmp
mov
not
mov
cld
jmp
mov
pushf
pusha
lea
jmp
jmp
add
jmp
call
movl
xor
cmp
stc
call
movb
mov
movb
lea
jmp
jmp
cmc
xor
push
bt
sub
pushf
jmp
movl
mov
pushf
mov
jmp
pusha
pushf
push
pushl
popl
mov
push
movw
push
lea
jmp
jmp
mov
call
cwtd
mov
pusha
bswap
bsf
or
mov
stc
clc
not
push
push
test
not
bt
push
clc
sub
pushf
bt
stc
clc
and
pushf
pushl
mov
mov
push
pushf
jmp
jmp
sub
mov
bt
sub
jmp
mov
mov
push
lahf
mov
pusha
idivl
push
mov
mov
movw
call
inc
pushf
pushl
mov
decl
push
jmp
pushf
pushl
popl
push
movb
mov
lea
jmp
bt
sub
mov
pushf
jmp
pushl
pushl
popl
push
pushf
lea
jmp
mov
push
jmp
call
test
sub
clc
shr
jno
pusha
pushf
pusha
mov
mov
push
movb
pushf
popl
jmp
mov
pushf
pushf
mov
pusha
pushf
lea
jmp
pushl
pushf
pushf
popl
call
or
pusha
movw
movb
lea
je
pusha
push
xor
test
pushl
xchg
stc
mov
call
pushl
popl
mov
mov
lea
jmp
pusha
push
mov
setg
mov
lea
je
push
movsbw
push
pusha
call
movzbw
push
mov
not
pusha
mov
not
bswap
movb
xchg
setb
lea
xchg
bswap
pop
pusha
xchg
mov
mov
mov
movw
jmp
call
call
or
pushf
mov
mov
cmc
add
pushl
lea
ja
pushf
mov
call
call
pusha
shl
sar
mov
bt
test
add
not
mov
pusha
pushf
mov
pushf
lea
jmp
mov
pushf
movb
pushf
lea
jmp
inc
pusha
call
lea
call
jmp
push
xor
push
pushf
clc
cmp
xchg
cmc
mov
bt
cmp
bt
call
pushf
jmp
mov
pushl
call
mov
call
movb
push
pushl
popl
push
lea
jmp
pushl
call
mov
mov
mov
push
mov
jmp
pushf
push
dec
cmp
clc
push
clc
xor
movb
bt
add
cmp
sub
test
mov
stc
pushl
cmp
sub
call
mov
jmp
lea
jne
jmp
pushf
mov
pushl
popl
movl
mov
lea
jmp
pushf
push
pushl
mov
mov
lea
jmp
xorb
lea
jmp
and
test
mov
push
sub
pushf
mov
push
test
pushf
bt
add
jmp
call
pushl
popl
pushl
pushl
lea
jmp
pushf
mov
call
clc
cmp
pushf
lea
cmc
sub
pushf
call
jmp
pushf
not
push
cmc
bt
rol
add
jno
cmc
clc
pushf
xor
call
mov
pusha
mov
push
pushf
popl
jmp
pusha
das
rol
mov
pusha
cmp
sub
pushf
cmp
cmc
add
push
pushf
call
pushl
cld
jmp
mov
pusha
mov
mov
jmp
pushf
cmc
push
sub
lea
je
mov
push
pushl
lea
jmp
inc
xor
mov
test
test
pusha
cmc
sub
pushf
add
jmp
jmp
push
pushf
pushf
mov
pusha
jmp
call
or
call
pushf
clc
cmp
cmp
add
bt
clc
clc
pushl
popf
pushf
push
pushf
push
lea
jmp
jmp
not
not
mov
jmp
mov
pushl
popl
push
movl
pushl
push
lea
jmp
pusha
jmp
pushl
pushf
mov
pushf
pushf
pushf
pushl
ret
push
pusha
mov
call
and
clc
mov
pusha
movw
sub
push
pushf
jmp
xor
mov
call
bts
mov
pusha
pushf
cmp
sub
movb
mov
pushl
lea
jmp
pushl
popl
pushf
lea
jmp
pushf
mov
mov
jmp
xor
push
call
pusha
pushf
pushl
popl
movb
pushl
pushf
lea
jmp
pushf
popl
mov
pushl
pushl
popl
pushf
pushl
mov
pushl
lea
jmp
inc
jmp
lea
mov
lea
jmp
movb
test
sub
stc
sub
jmp
jmp
movsbl
jmp
mov
jmp
push
mov
pusha
pushl
popl
pushf
pushf
pushf
movw
lea
jmp
pushf
mov
mov
pushf
pushf
push
pushl
ret
pushl
popl
push
pushl
movb
movb
lea
jmp
push
pushl
popl
movb
lea
jmp
call
jnp
not
push
bt
mov
call
mov
pusha
mov
jmp
pusha
das
cmp
mov
movw
jmp
pushf
add
shl
movzbl
cmp
call
call
call
jmp
mov
jmp
call
sub
jmp
call
pushf
popl
jmp
pusha
push
mov
call
push
movb
fsubl
mov
mov
movb
pushf
lea
jmp
pushf
lea
call
pusha
xchg
mov
cwtl
mov
lea
jno
push
mov
pusha
divl
pushf
mov
pushl
mov
mov
call
jmp
movw
mov
pushl
mov
pushf
mov
pushf
push
mov
pusha
mov
pushf
pushf
movb
lea
jmp
pusha
mov
pusha
jmp
pushf
mov
pushf
lea
jmp
mov
movzbw
aam
clc
mov
ror
mov
cmc
push
cmc
sub
bt
shl
call
pushf
movw
push
pushf
mov
mov
mov
jmp
movw
jmp
div
pushf
pusha
push
pushf
mov
call
and
jmp
jmp
pushf
jmp
sub
mov
or
neg
mov
push
sub
cmp
cmc
pushf
jmp
jmp
mov
pushf
mov
pusha
mov
push
call
pusha
sub
sbb
and
stc
movzbl
mov
sub
mov
test
sub
stc
add
jbe
add
jmp
jmp
pusha
mov
mov
pushf
lea
jmp
jmp
lea
cpuid
pushf
cmc
pushf
sub
push
cmc
movb
bt
cmpl
movb
call
mov
call
mov
pusha
pushf
pushf
mov
call
mov
movb
movb
pushf
pusha
lea
jmp
push
push
call
call
mov
call
call
pushl
pusha
call
pushf
popl
pusha
jmp
mov
push
pushl
popl
push
lea
jmp
mov
push
lea
jmp
call
mov
movzbl
movsbw
mov
push
push
push
mov
mov
pushf
not
movsbl
lea
repz
popl
call
jmp
mov
pushf
pusha
movb
mov
pushf
call
pushf
push
bswap
cwtl
mov
pushf
mov
pusha
call
test
test
add
pushf
movb
pushf
pushf
popl
lea
je
pushf
mov
pushl
popl
pushf
lea
jmp
rcr
shr
dec
mov
bt
pushf
pushf
push
add
cmp
shld
push
jmp
call
movb
inc
lea
jo
dec
call
pushf
popl
push
call
add
pusha
mov
movb
lea
jmp
clc
mov
jmp
mov
pusha
push
mov
pushf
movw
pushf
push
lea
jmp
pusha
pushf
mov
pusha
movw
movb
mov
lea
jmp
pusha
mov
mov
pushf
pushf
mov
lea
jmp
call
inc
jmp
mov
pushf
mov
lea
jmp
call
jmp
mov
movb
cmp
test
mov
add
pushf
lea
jmp
pusha
lea
jp
push
mov
pusha
pusha
pushf
pushf
lea
jmp
push
add
push
pushl
pushf
mov
pushl
pusha
movb
pushf
lea
jmp
fldz
pusha
pushf
push
lea
jmp
jmp
push
mov
push
mov
pushf
push
push
pushf
lea
jmp
jmp
jmp
mov
pusha
mov
pushf
jmp
push
mov
push
pushf
movb
mov
lea
jmp
call
pushf
mov
fmull
movb
pushf
pusha
push
lea
jmp
pushf
cmc
xor
push
pushf
inc
push
decl
call
mov
jmp
push
mov
pushl
lea
jmp
movw
call
movzbw
mov
xadd
shl
movsbw
add
mov
pushf
dec
mov
stc
cmc
cmc
add
pushl
shrd
pushl
pushl
mov
mov
pushf
pushf
popl
pushf
pusha
call
mov
push
movb
push
lea
jmp
js
push
push
pushf
pushf
mov
pusha
mov
call
mov
pushf
lea
jmp
pushf
jmp
jmp
mov
pushf
mov
movb
mov
pushf
mov
movl
lea
jno
pusha
movb
mov
pusha
lea
jmp
aam
mov
adc
xor
mov
jmp
mov
push
mov
pushl
movw
lea
jmp
bt
cbtw
clc
cwtl
movw
cmc
sub
jmp
call
mul
push
movb
mov
pusha
pushf
pushl
pushf
mov
call
jmp
cmp
cmp
call
jmp
bt
shr
mov
mov
pushf
jmp
pushf
pushf
popl
jmp
pushf
push
fdivl
movb
pusha
push
lea
jmp
shr
rol
neg
pushf
movsbw
rcr
ror
not
rcr
sub
bts
btr
sbb
and
adc
mov
call
pushf
pushf
mov
push
mov
call
mov
pusha
mov
push
push
lea
jmp
mov
pusha
mov
jmp
sub
pushf
xchg
clc
cmc
add
pusha
rol
cmp
cmp
cmc
cmc
sub
stc
mov
bt
cwtl
clc
call
call
pushf
movb
mov
movb
movb
jmp
pushl
popl
pushf
lea
jmp
jmp
mov
pushl
lea
jmp
pusha
mov
call
sub
call
pushl
popl
mov
lea
jmp
mov
pushf
lea
jb
push
pushf
mov
movb
movb
push
pushf
lea
jmp
mov
call
shrd
aad
notl
rol
das
dec
cmc
mov
call
pusha
jmp
push
pusha
mov
pushf
lea
jmp
push
mov
pushl
lea
jmp
xchg
mov
test
pushf
xor
rcr
mov
stc
call
movb
pushf
lea
jne
push
movb
pushf
pusha
mov
mov
mov
lea
jmp
add
add
add
xchg
subl
add
sub
add
add
loopne
add
outsb
insl
adc
